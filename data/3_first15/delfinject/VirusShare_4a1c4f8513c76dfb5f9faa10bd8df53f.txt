sub
test
or
test
dec
push
jge
out
jg
call
sub
inc
hlt
roll
mov
pop
xchg
outsl
jmp
pop
les
or
js
push
in
and
ds
lods
popf
and
lcall
enter
out
sub
cltd
inc
lods
lret
lock
pop
dec
jmp
push
loop
and
cwtl
xlat
mov
jmp
xor
addb
fwait
push
lods
dec
stc
push
xchg
cmp
pop
xchg
mov
pop
pop
inc
pop
testb
dec
dec
pop
xorl
das
scas
sahf
test
jmp
sbb
xor
cs
outsl
cmp
jl
xor
into
pop
cli
lahf
cmp
xchg
pop
xchg
dec
shlb
dec
lcall
and
push
mov
cmp
mov
push
or
sub
xor
aaa
test
jns
lock
out
xor
jae
pop
sub
into
push
xchg
mov
add
hlt
xchg
xcrypt-ecb
cmpsl
or
dec
frndint
fnstsw
fcompl
sbb
lcallw
mov
xchg
and
pop
or
inc
insl
movsl
lods
add
and
imul
filds
test
cmp
jle
sbb
iret
xchg
xchg
repnz
jne
and
mov
cmp
dec
cmp
mov
test
push
adc
mov
dec
test
lods
pop
hlt
cmp
testl
xchg
mov
fcoms
sub
mov
test
sbbl
xchg
test
cmpsl
orb
mov
shlb
inc
bound
inc
test
fwait
cmp
push
add
je
daa
mov
xchg
mov
and
add
imulb
lret
imul
and
and
mov
mov
xor
rcl
jb
jecxz
decl
clc
cmp
lcall
mov
ror
mov
or
andl
fmuls
xchg
push
aas
dec
and
fiaddl
xchg
jo
inc
push
pop
jne
fildl
mov
xchg
rol
push
daa
dec
fisubrl
sub
jle
push
scas
mov
and
mov
sbb
test
iret
sbb
cltd
dec
pop
inc
jnp
pop
cmp
push
mov
out
pop
repnz
inc
sbb
iret
shlb
jnp
or
stos
jecxz
add
sbb
test
aaa
lret
movsl
dec
jle
subl
dec
std
push
insb
dec
xor
jmp
shlb
inc
outsb
dec
sbb
sbb
or
fwait
leave
pop
dec
lret
sbb
mov
jmp
xlat
shlb
in
pop
mov
add
fnstenv
loop
nop
push
mov
sub
add
add
dec
nop
inc
push
dec
fldenv
sbb
dec
sub
stos
stos
xor
pop
bound
cwtl
jp
jo
jb
xor
inc
jl
aaa
mov
add
push
push
fmull
push
inc
arpl
scas
mov
dec
push
or
lret
cld
repnz
daa
jmp
pop
sti
pop
sub
xchg
movsb
lea
aad
and
stc
lds
movsb
inc
push
fld
mov
test
cmp
add
outsl
mov
test
dec
outsb
jle
pushfw
xchg
shl
dec
sar
dec
sbb
mov
addl
rcl
sub
stos
call
rorb
xchg
shlb
or
pop
inc
xchg
jno
sub
pusha
mov
fsubs
inc
or
pop
in
jne
sarl
push
nop
mov
mov
flds
mov
popa
jae
sbb
stos
push
insb
outsl
mov
jle
lds
xchg
jg
data16
icebp
push
xchg
push
frstor
xchg
nop
jnp
push
cmp
lahf
loope
add
inc
push
jp
sar
pop
lods
inc
sub
add
jg
lds
ror
or
pop
sbb
lret
pop
xchg
or
lret
enter
jbe
or
fcomps
jae
adc
and
xchg
and
or
jge
ss
mov
xchg
jmp
popf
fistps
push
ja
dec
lock
adc
pop
fadds
outsl
push
popf
mov
iret
sahf
test
cmp
rcrb
in
sahf
call
aad
xchg
lock
xchg
pop
dec
les
inc
cmp
aas
in
pop
push
nop
nop
push
hlt
arpl
stos
mov
cmp
xchg
sub
push
dec
dec
mov
mov
std
sbb
outsl
add
or
push
jb
inc
cmp
xchg
xor
mov
sub
xor
das
cld
movsl
ljmp
sbb
mov
dec
lock
push
leave
dec
sti
ret
inc
cmp
int3
xchg
int3
mov
fisubs
and
push
sbb
fdivl
mov
out
sbb
cmp
push
and
test
and
push
notl
int3
push
inc
ljmp
mov
push
js
popf
les
jnp
xor
mov
int3
cltd
push
xor
cmp
cmc
dec
cltd
adc
xor
adc
fwait
push
fisttps
add
mov
scas
and
lods
pop
decb
or
jp
pushf
xchg
jno
jb
dec
pop
add
lods
fnstcw
imul
and
pop
jne
sbb
add
gs
sbb
xchg
subl
add
sub
daa
xor
inc
pop
xor
out
fwait
les
adc
cmp
in
inc
clc
dec
dec
mov
push
fimuls
push
je,pn
xchg
sbb
xlat
push
inc
mov
mov
add
jno
adc
cmpsb
adc
and
int3
sub
and
fnstcw
pop
or
add
aam
dec
loope
mov
mov
add
inc
dec
dec
scas
xchg
aam
xchg
ja
xlat
xchg
mov
mov
pop
popa
lcall
test
test
dec
xchg
push
lcall
mov
enter
fsubs
pop
mov
mov
adcl
jns
sub
lods
pop
ror
xchg
outsl
jge
jb
lcall
ljmp
pop
sub
add
push
fisubrl
xchg
mov
imul
pop
add
pop
les
fldl2t
sti
fists
pop
cltd
dec
into
xchg
idiv
sbb
and
pop
mov
xor
jmp
xor
sbb
out
loop,pn
jbe
push
inc
cli
sysenter
pop
add
inc
shlb
cmp
aam
cmp
stc
and
fstp
push
adc
stc
loop
cmpsl
decl
xlat
lahf
nop
sub
xor
lods
xchg
inc
inc
add
aas
ss
es
rclb
fcomps
dec
cmpb
mov
dec
nop
aas
rolb
or
stos
add
gs
add
xor
js
outsb
shrl
les
and
fadd
sahf
cmp
leave
and
loopne
and
xchg
mov
repz
das
pop
mov
inc
sub
cmpsb
lahf
inc
adc
fistps
shrl
fstps
cmp
test
repz
mov
icebp
sbb
xor
repnz
xchg
push
jae
aad
mov
popa
lcall
movups
xor
jne
setl
jno
lret
daa
mov
fucomip
arpl
in
popa
xchg
push
jge
jo
leave
lret
pop
sub
cmpsb
into
repz
lahf
imul
nop
lret
mov
scas
dec
insb
xchg
scas
hlt
jbe
mov
push
or
ss
sub
sbb
pop
jp
dec
pop
enter
inc
cld
leave
push
or
inc
js
in
rcl
sub
pop
nop
ror
sub
jle
sarb
sub
int
cmp
jbe
add
sub
enter
dec
lods
mov
xchg
icebp
pop
cmpsl
jmp
mov
pushf
in
jb
xlat
fimuls
insl
sbb
int
test
lahf
xchg
int3
cmpsb
fimull
xchg
enter
dec
lahf
adc
sub
mov
pop
subb
cltd
mov
adcl
movb
inc
push
lods
pop
push
and
outsb
int
not
jle
ja
pop
ret
push
push
movl
fdivrl
dec
mov
xchg
ret
loope
sub
rcr
xchg
mov
cwtl
test
jnp
jmp
aas
jle
add
lods
pop
inc
mov
jg
sahf
push
xchg
cmp
inc
add
subb
fwait
adc
pop
pop
adc
daa
shr
push
jae
xchg
mov
add
addr16
dec
dec
inc
or
dec
out
jbe
stc
mov
pop
je
xchg
leave
fdivrl
cltd
push
pop
mov
xor
gs
aas
mov
addr16
jo
sbb
fcmovnbe
mov
bound
push
xchg
aaa
out
jne
out
mov
ret
js
inc
ss
xor
shrl
pop
daa
scas
ror
adc
leave
cmp
xor
daa
dec
mov
inc
nop
sub
dec
scas
fld
cmp
sbbb
add
cltd
test
jnp
adc
movsb
pop
xor
pop
loopne
xchg
aas
push
out
sub
mov
jl
dec
push
jmp
int3
cwtl
ds
scas
daa
pop
loop
lahf
inc
xchg
addr16
cmpsb
ret
aas
and
xor
cmpsb
outsl
mov
lret
das
ret
loope
xor
mov
repnz
in
addr16
adc
inc
pop
adc
mov
xchg
lcall
dec
inc
jnp
cmp
arpl
lret
cwtl
inc
xchg
mov
test
cmp
divb
mov
sub
pop
hlt
pop
dec
mov
jns
add
mov
or
mov
pushf
scas
test
jnp
and
lret
sbb
xor
add
add
int3
lea
fdivs
js
insb
cltd
enter
xchg
xor
xchg
jle
leave
mov
flds
bound
or
out
sub
push
sub
push
cli
sbb
loope
pop
sub
push
sbb
fmuls
mov
push
rcr
shlb
jmp
std
daa
test
xchg
mov
jnp
ss
jnp
xchg
pop
push
test
test
mov
test
stc
sbb
fs
mov
mov
stos
mov
test
xor
mov
pop
sbb
mov
adc
dec
xchg
mov
jmp
push
mov
inc
loopne
xchg
xor
adc
leave
pop
dec
lock
fwait
imul
fwait
decl
in
mov
or
jne
lret
lcall
les
add
sahf
out
pop
lds
fcoml
out
pop
out
sub
jo
dec
or
pop
cwtl
mov
cwtl
xchg
in
pop
xchg
xchg
lods
lods
sub
test
cmp
mov
in
xor
lret
aad
cmp
lea
adc
cwtl
xchg
int
test
sbb
mov
cmp
mov
inc
push
mov
mov
sub
leave
xchg
fcomps
cli
sbb
mov
scas
lret
pushf
sbb
and
outsb
add
xchg
mov
inc
cli
xchg
aam
cmpsl
gs
mov
xor
lahf
scas
xchg
adc
xchg
sub
ret
cmp
and
mov
inc
inc
std
cmpl
je
or
fsin
mov
rcrl
fcmovbe
test
dec
and
inc
mov
cmp
dec
and
sti
outsb
and
dec
stc
push
mov
dec
dec
sbb
mov
sbb
std
inc
mov
jo
test
test
test
mov
cltd
int3
and
loop
insl
push
mov
scas
bound
js
mov
les
insb
inc
xchg
imul
scas
fisubs
repnz
push
xchg
fwait
dec
mov
pop
jp
xor
mov
jb
test
sbb
jns
sub
xchg
xchg
sti
mov
scas
dec
xor
leavew
sub
icebp
mov
xlat
cmc
pop
add
pop
bound
mov
inc
or
and
mov
xchg
ljmp
enter
xchg
sub
in
mov
sub
fisttps
sub
cmp
pop
repnz
out
xchg
push
jb
dec
lds
idiv
cmp
add
int3
test
xchg
test
pop
push
mov
ret
testb
mov
scas
gs
xchg
ss
vcomiss
fidivl
pop
jns
lods
sbb
jle
dec
shll
jbe
jg
and
hlt
shlb
test
insb
or
call
push
mov
fisubl
jnp
lea
jne
xor
test
jl
mov
addr16
mov
sub
andl
out
mov
adc
push
js
repz
int3
popa
mov
xor
ljmp
inc
jbe
repz
nop
leave
inc
sbbl
push
movsl
roll
es
or
add
std
mov
fwait
iret
dec
add
sbb
rclb
adc
cli
or
icebp
jl
adc
sbb
lret
lock
inc
in
fwait
push
lds
pop
jnp
nop
loope
mov
and
ja
stos
xor
outsb
push
pop
inc
cmpsl
pop
xchg
mov
iret
sets
clc
xor
lods
divb
or
dec
sti
iret
test
adc
sub
xchg
pop
iret
mov
and
aad
xchg
adc
mov
mov
mov
xchg
adc
repz
ficompl
mov
jg
sbb
mov
inc
inc
push
sarb
inc
stc
pop
gs
dec
push
and
push
fwait
pop
int3
jnp
sbb
xchg
cli
sahf
scas
sub
add
push
loopne
pusha
aad
scas
addr16
test
testl
jge
loopne
or
jge
sub
mov
aad
fwait
sbb
shlb
das
xchg
and
sub
xchg
les
mov
repnz
push
out
mov
xor
push
fisttpll
les
rcl
jne
pop
add
jmp
jns
js
cmp
cwtl
xor
cld
imul
stos
scas
lahf
mov
jmp
jmp
fidivs
push
test
xchg
cld
subl
jno
sbb
xor
sub
and
iret
std
pshufw
rol
stos
dec
mov
mov
jg
data16
xchg
out
scas
lods
push
xchg
add
test
ret
sbb
jge
scas
std
out
push
lcall
pop
shrb
add
cs
or
pop
cmc
xchg
push
add
in
pushf
sbb
out
fs
cmp
sbb
clc
add
fisubs
push
mov
jo
push
xchg
sbb
addb
int3
loop
cmp
add
cmp
movnti
xchg
lret
push
cmp
notl
scas
orb
mov
jge
test
test
push
sti
test
mov
mov
mov
xchg
shlb
inc
fmul
and
and
and
scas
mov
add
ds
adc
nop
out
cli
mov
lods
inc
fwait
xor
jbe
jl
pushf
pusha
hlt
cmpsl
stc
cmp
adc
and
sub
adc
es
call
push
and
ljmp
inc
repnz
test
adc
mov
rorl
mov
lea
scas
add
push
in
jle
or
aam
pop
lds
test
rorl
fdivrs
xchg
cli
xchg
call
jnp
and
inc
sub
and
xchg
mov
push
std
sub
push
ss
inc
sub
fnstcw
or
sbb
dec
sahf
inc
insl
jge
push
cwtl
jns
arpl
and
int
sub
jnp
repz
ss
sti
popf
int3
sub
sahf
outsb
add
mov
rolb
mov
mov
sarl
mov
mov
in
ret
or
add
cmp
adc
shrl
cmp
dec
das
stc
lret
sub
mov
dec
mov
push
pop
les
mov
xchg
dec
hlt
sarb
inc
mov
or
mov
xchg
imull
jmp
sub
add
dec
popf
clc
int
ret
mov
mov
pushf
xor
mov
jns
adc
jle,pn
push
aam
jg
cmp
orb
inc
mov
pop
shrb
fs
movl
add
rcrl
sub
sub
lret
pop
dec
hlt
out
mov
shrl
rorb
ja
sbb
fldenv
ds
gs
popf
scas
lods
mov
jge
inc
test
dec
dec
pop
std
xchg
pop
nop
adc
mov
xchg
and
or
stc
lods
adc
dec
xchg
push
faddp
and
add
mul
data16
mov
cmp
std
ret
sub
mov
shrb
pop
push
lea
cmp
dec
outsb
jne
sti
sub
and
cwtl
shlb
call
repz
out
and
adc
jo
mov
pop
lret
sbbb
movsl
sbb
call
sbb
fwait
xchg
add
jo
ja
clc
icebp
stc
dec
cld
mov
enter
enter
and
shrb
pop
inc
call
push
mov
or
add
data16
les
jge
ret
popf
xchg
and
lods
inc
jle
mov
xchg
push
test
pop
int
xchg
ret
sub
dec
nop
sub
xlat
xchg
mov
andl
dec
push
mov
fadds
iret
pop
xchg
pop
cmp
cld
jbe
add
pop
jns
fmul
push
mov
jge
and
rorl
js
cmpsl
jo
scas
sub
or
dec
add
jge
out
sbbl
push
xchg
orb
mov
xor
add
xchg
mov
pop
jp
fidivs
pop
mov
xchg
popf
aaa
cmp
mov
or
pop
loopne
sbb
fcoml
inc
pop
scas
mov
xor
add
mov
add
pop
mov
sub
lods
dec
push
mov
push
cs
add
scas
xor
and
lret
cmc
mov
push
pop
in
cmp
adc
inc
sub
lcall
mov
pop
std
mov
xor
pop
mov
jnp
cmpsb
imul
cwtl
dec
inc
xchg
int3
xor
sbb
sbb
xor
imul
jb
andl
xchg
mov
sbb
sbb
mov
mov
mov
jle
xlat
jge
xchg
push
js
dec
inc
add
out
add
add
cmp
adc
sbb
mov
cwtl
gs
mov
inc
movl
dec
insl
sub
mov
sub
sub
sbbl
or
gs
stos
push
stc
xorb
fmuls
incb
ss
xchg
iret
cmp
add
xchg
sbb
leave
sub
loop
xchg
loopne
sub
pop
jl
popa
push
xor
pop
jmp
call
js
xchg
pop
mov
fcmovnb
and
jmp
mov
sarl
insl
lahf
and
jbe
mov
add
test
sbb
dec
pop
daa
rclb
sbb
jmp
lret
and
test
and
outsb
ljmp
outsl
ffree
mov
lret
xchg
xchg
or
jb
xor
cmp
imul
xchg
mov
imul
cmp
fwait
inc
inc
daa
mov
dec
push
pop
mov
push
push
and
push
mov
cmpsl
dec
sbb
cmp
push
test
mov
sbb
lods
lret
gs
sub
cmpsl
push
dec
xchg
mov
jp
sub
add
push
inc
bound
dec
das
repnz
push
dec
inc
test
cs
push
inc
cld
aaa
or
lods
xchg
dec
stc
test
push
and
mov
pushf
dec
inc
fs
flds
and
out
push
or
sub
sahf
out
or
jge
jmp
adc
pop
clc
mov
inc
ljmp
std
bound
xor
pop
add
pop
nop
and
scas
mov
xorb
test
or
imul
and
xor
pop
fdiv
and
dec
inc
decb
cltd
inc
nop
pop
inc
pop
lods
cmpsl
aas
jo
xchg
jge
xor
mov
pop
mov
xor
inc
lods
or
mov
movsb
lds
jg
jnp
add
std
dec
pop
cmp
cmc
sub
inc
jl
mov
pop
push
stc
popa
sbb
cmp
ja
scas
movsl
and
aas
push
dec
add
das
scas
jne
mov
cli
in
mov
dec
insl
jmpw
and
and
test
cwtl
repz
pushf
dec
inc
mov
fdivl
orb
sahf
jge
xor
mov
and
dec
push
add
cmpsl
dec
addr16
jle
or
sbb
stos
and
negb
pminsw
xchg
aas
test
stos
push
mov
jp
shll
je
push
sti
imul
dec
add
lahf
nop
cmovs
add
pop
adc
mov
push
dec
aad
jmp
shlb
lods
pop
lods
dec
ror
es
cmp
xor
jp
jge
push
push
lods
xor
mov
testl
add
jge
ljmp
hlt
mov
aaa
fwait
xchg
rcll
or
pop
scas
mov
push
enter
jmp
mov
rcll
dec
mov
add
shll
rcrb
sbbl
sub
pushf
aam
push
add
dec
or
loop
popa
xchg
fildl
pop
and
mov
mov
jle
sub
cmc
mov
orl
cli
sub
inc
loop
fldt
mov
das
dec
inc
adc
xor
std
sub
inc
adc
fistps
mov
xor
pop
jmp
rorl
push
cmp
test
xchg
jl
nop
mov
shrb
stos
push
xor
filds
jecxz
repnz
dec
nop
lods
pop
fidivl
scas
cmc
sub
add
daa
mov
enter
mov
ficompl
mov
shrl
mov
jne
sbb
nop
sti
repz
lea
xchg
push
xor
pop
leave
insb
xchg
adc
std
jp
stos
fnstcw
out
sub
jg
add
nop
xchg
jno
xchg
pop
inc
and
sahf
repz
pop
xchg
iret
dec
mov
adc
jmp
ret
dec
cmp
fldl
jg
xchg
pushf
pusha
push
icebp
cmc
cmp
mov
insl
outsb
enter
mov
stc
dec
call
mov
and
test
mov
enter
pop
dec
mov
repnz
xchg
mov
sub
inc
push
ret
enter
outsl
dec
xchg
sub
sub
int
mov
jbe
sub
mov
sub
xchg
nop
and
mov
imul
dec
jmp
cmp
pop
sub
add
iret
or
popf
test
cli
aas
push
mov
mov
xchg
scas
add
mov
nop
xor
je
shll
dec
push
test
lods
jg
lret
dec
and
int3
pushf
lret
xchg
sub
in
test
adc
cli
jnp
jl
adc
jno
lods
subl
cmpsl
sbb
repz
in
in
or
sub
xor
sbb
test
dec
xor
out
fmull
ss
movsl
cs
lds
and
jp
loop
nop
lock
mov
mov
outsl
sar
cltd
loop
mov
and
nop
cltd
mov
mov
push
dec
jge
mov
cmp
add
faddl
lret
pop
lret
push
movsb
gs
xor
mov
jae
lods
mov
std
in
xchg
xlat
popa
cmpl
xor
push
xor
mov
popf
outsl
mov
jecxz
dec
leave
jbe
sbb
push
or
imul
jae
xchg
fisubl
dec
sti
cli
sbb
jns
psllq
cltd
xor
in
mov
mov
xchg
imul
dec
cmpsb
or
movsl
js
jns
sub
fwait
mov
test
jg
scas
xor
dec
or
imul
in
mov
int3
cmp
pop
dec
ja
dec
lret
outsl
xchg
lods
jb
fcoms
movsb
setb
imul
dec
mov
and
sbb
fstpt
and
dec
in
lcall
cs
mov
jae
inc
scas
mov
push
adc
xor
mov
sbb
push
je
std
dec
cmp
iret
xor
lcall
xchg
jno
cmc
fadds
ja
or
cmp
loop
adc
and
nop
sub
mov
das
cmpsb
jb
xchg
lods
sbb
iret
shrl
cltd
test
cmp
mov
mov
addr16
daa
cmp
mov
fidivl
or
shrb
lcall
sti
dec
mov
popa
sbb
cltd
mov
jle
mov
dec
mov
dec
mov
mov
xchg
js
in
dec
aaa
inc
adc
sub
pusha
sbb
sbb
sub
or
pop
das
add
ljmp
in
push
cmp
and
cmp
xchg
mov
scas
push
xor
negb
cmpl
sbb
pop
es
jae
add
int3
sub
xchg
shrl
test
adc
mov
add
pop
pop
fwait
icebp
mov
fildll
jg
int3
xchg
xor
xchg
gs
xchg
mov
movsb
inc
pop
icebp
xchg
add
insb
sub
pusha
xor
or
dec
push
lcall
testl
sbb
in
mov
push
jl
jp
rcrl
imul
dec
mov
repnz
mov
push
lret
xchg
adc
jae
push
test
mov
fldt
xor
sbb
mov
xchg
mov
sti
je
push
out
cmp
outsb
add
test
popf
outsl
dec
pop
mov
hlt
cld
pop
push
sti
ret
cmp
fadds
xchg
jecxz
jge
cli
inc
jae
enter
dec
addr16
decl
dec
xchg
mov
adc
fstpt
or
cmpsb
movsb
and
jne
pop
popf
enter
dec
or
sbb
xor
ds
cwtl
mov
inc
add
mov
xor
lods
int3
repz
add
outsl
outsb
popa
sub
xchg
xor
jp
inc
jl
outsl
pop
bound
imul
cltd
mov
nop
or
dec
xchg
cmp
dec
movsl
cli
sub
idivl
stos
daa
sbb
xchg
inc
push
out
or
in
mov
inc
les
cmp
sbb
int3
ret
and
insl
push
pop
mov
ficompl
push
aas
dec
mov
enter
mov
and
ja
add
cltd
inc
xchg
stos
out
sbb
insl
jl
jns
jmp
dec
jne
or
inc
loopne
fnstenv
jo
dec
push
test
stos
add
leave
aad
out
fdivrl
shll
push
mov
inc
push
insl
repz
xchg
arpl
cs
pusha
lret
notl
xor
out
js
in
cmp
sbb
das
sarb
dec
mov
sbb
xchg
fld1
dec
lret
loopne
in
scas
sub
and
mov
jle
imul
testb
fisubs
inc
push
pop
dec
ss
push
cmc
scas
lret
push
mov
sti
rorb
xchg
cltd
cmp
insb
movsl
pop
test
in
sti
daa
push
cmp
jnp
mov
mov
ljmp
aaa
and
and
and
jb
icebp
insl
xor
and
xchg
mov
sbb
int3
push
sub
inc
dec
addr16
fs
push
dec
dec
mov
jb
fidivrl
les
or
lods
push
loope
push
jno
mov
or
mov
addb
fcomps
pop
nop
xorl
sbb
out
add
shll
push
push
insl
push
cltd
ret
mov
mov
cwtl
sub
mov
cmp
mov
cld
push
pushf
sub
outsb
add
mov
test
aam
cltd
in
pop
jno
ss
pop
adc
insb
cmp
pop
popf
cmp
icebp
sub
arpl
bound
ror
sub
sbb
sub
push
and
and
push
jle
rorl
lret
insb
pop
add
imul
dec
xor
mov
add
test
lret
or
xchg
out
push
dec
xor
fistpll
push
nop
dec
mov
sbb
and
sub
push
push
dec
std
fsubl
xor
mov
pop
inc
mov
pop
rcr
aaa
lds
scas
xor
icebp
lock
mov
test
lods
sub
es
cmp
push
inc
xchg
lea
xor
dec
cld
jo
test
addr16
xchg
cmc
dec
jb
testb
pop
cmpsl
mov
pop
arpl
testl
fcomps
inc
xchg
jb
imul
push
fmuls
lret
mov
out
jbe
ja
test
xchg
pop
les
sbb
adc
adc
mov
js
push
mov
pop
pop
inc
jnp
das
nop
mov
fcmovb
scas
ficoml
adc
sbb
xor
push
outsl
push
ljmp
and
add
insb
pop
fs
xor
cmpsb
ja
jb
xlat
test
push
cld
cwtl
lds
dec
add
dec
mov
dec
add
ret
and
mov
and
in
push
stc
das
data16
jmp
jns
inc
xorb
inc
lock
orl
call
btr
das
cs
outsl
icebp
pop
xchg
test
add
addr16
out
flds
movsb
mov
pop
shrb
adc
jle
in
popf
jo
and
and
bound
cmp
shll
sub
pop
imul
in
pop
push
lock
mov
negb
scas
sbb
xchg
test
sbb
pop
gs
das
mov
jp
subb
iret
pop
xchg
dec
cmpsl
pop
adc
insl
sbb
fisttpl
ds
cmp
cwtl
lret
dec
push
xor
popf
lds
jnp
mov
adc
in
dec
dec
adc
mov
mov
mov
jb
and
rcrb
lahf
je
adc
mov
insl
mov
test
cmp
push
xchg
repnz
sbb
leave
or
lahf
inc
loop
outsb
push
push
shrb
jmp
cli
inc
out
push
pop
and
test
and
mov
enter
sar
sbb
ljmp
ror
icebp
pop
adc
je
pop
add
jb
outsl
xchg
dec
mov
pop
pushf
mov
and
or
sub
dec
data16
adc
nop
add
xor
cmp
lcall
jl
xchg
push
xlat
sbb
fistpll
sbb
jl
fldcw
mov
pop
mov
scas
jns
pop
jbe
arpl
mov
enter
jg
aad
std
xchg
outsl
sub
cmp
add
inc
bound
push
mov
movsb
and
insl
je
inc
sub
shrl
and
js
cmp
aad
es
popa
inc
push
test
dec
test
push
test
push
test
push
ljmp
ret
sub
xchg
outsl
mulb
ja
jecxz
mov
je
adc
xchg
and
mov
xchg
outsl
jo
and
stos
divl
or
or
rclb
or
les
jne
add
jmp
dec
pop
jmp
sub
in
aad
mov
pop
mov
pop
mov
jle
sub
imul
push
test
outsb
lock
pop
aaa
inc
jle
repnz
das
fmull
fs
mov
pop
daa
push
fistl
or
inc
pop
cmp
std
add
daa
scas
into
sub
mov
dec
push
js
dec
add
mov
cwtl
xor
jmp
std
sbb
push
sub
in
cmpsb
mov
or
xchg
dec
out
mov
mov
mov
add
adc
iret
sbb
aad
je
idivb
cmpsl
ja
jnp
lahf
mov
std
sbb
int3
pop
jmp
mov
sub
ljmp
rep
lcall
scas
bound
jo
mov
hlt
arpl
scas
xchg
addr16
xchg
or
bound
lea
xchg
bound
repnz
fisttpll
and
nop
pop
pop
pop
lret
xchg
push
sti
and
push
loope
bound
xor
shlb
xchg
push
xchg
or
dec
lds
adc
outsb
repz
adc
subb
adc
stos
aaa
mov
cmp
mov
fwait
sbb
add
roll
sahf
push
mov
out
sub
jecxz
dec
xor
lahf
enter
pusha
nop
mov
je
pop
jnp
push
test
fwait
ss
fildll
je
push
sbb
test
sahf
cmp
pop
scas
xlat
inc
test
push
test
mov
mov
roll
loope
pop
adc
fmuls
rclb
out
mov
adc
imul
dec
pop
hlt
insl
xor
sti
pop
test
dec
movsb
scas
decl
sub
push
lds
jno
mov
or
xor
testb
xor
pop
sti
sub
fildll
jns
pop
and
and
xchg
lods
dec
xor
cmp
cwtl
hlt
ss
jne
jmp
mov
xchg
pusha
cld
js
rcl
mov
js
xchg
pop
adc
inc
cld
cmp
fisubs
push
movsb
and
sbb
jl
mov
popf
andb
daa
sub
fldt
xchg
add
sub
mov
xor
sarl
cwtl
pop
leave
pop
mov
and
into
sub
jno
mov
pop
hlt
das
ljmp
add
test
je
aaa
mov
mov
pop
int3
sbb
dec
test
sub
rorb
adc
or
arpl
pop
loop
fsubs
jmp
jnp
mov
add
imul
stos
add
imul
push
dec
xor
addr16
xor
push
rcrb
insb
dec
push
push
and
inc
xchg
mov
xchg
test
nop
sub
mov
cwtl
andl
repnz
sbb
fisttpl
mov
outsl
dec
push
gs
fcmovu
cli
xchg
add
dec
fistl
xchg
dec
enter
stos
rcrb
mov
adc
jmp
inc
sbb
test
add
scas
cmp
daa
and
jge
mov
sub
inc
in
lods
test
hlt
sub
push
lock
outsl
sub
jge
test
aaa
sbb
push
inc
pop
dec
mov
int3
xchg
sub
into
jmp
pop
jg
cmp
dec
or
arpl
dec
dec
mov
in
scas
popa
jle
xchg
xchg
cld
lret
inc
rcll
insb
jo
les
inc
push
jle
jp
push
sbb
jae
and
roll
test
push
jae
xchg
jp
hlt
push
outsl
fdiv
mov
push
and
sbb
sbb
out
dec
jnp
jp
stos
mov
roll
cmp
pusha
push
mov
int3
add
mov
insl
popa
mov
mov
cltd
mov
or
xor
outsb
adcl
cmp
push
inc
lret
pop
int3
cmpsl
rorb
xor
sub
int3
pushf
sub
jae
adc
imulb
dec
jl
nop
dec
xor
xor
and
jmp
loop
adc
cmp
sbb
jne
jmp
sbb
push
xchg
inc
cmp
xchg
jb
test
clc
rol
cmp
cld
xchg
push
cwtl
rcll
jns
lcall
mov
mov
pop
pop
cmp
sub
jnp
cmp
mov
pop
sub
or
sbbb
fwait
mov
mov
lods
push
test
adc
push
or
lods
mov
push
and
sar
mov
cli
sub
testl
jbe
inc
dec
cs
adc
pop
push
sub
mov
xchg
dec
andb
insb
push
cli
imul
sbb
outsl
xor
mov
fsubs
mov
mov
dec
pop
jl
xor
dec
popa
nop
scas
orb
rcll
push
jo
cmc
mov
dec
movsb
stos
cmp
jns
jb
jae
pop
mov
adc
xor
aam
mov
int
mov
pushf
mov
adc
add
add
push
lock
or
xchg
nop
dec
dec
stos
fs
aas
dec
dec
and
cmp
lods
jg
cwtl
mulb
adc
sub
adc
inc
clc
test
je
sbb
daa
dec
mov
pushf
call
xchg
jmp
js
or
inc
packsswb
mov
push
cli
addr16
out
fidivl
in
dec
mov
test
cmpsl
int
jnp
pop
pop
pushf
test
push
dec
fisttpl
rclb
cmp
pop
inc
es
add
xchg
mov
sub
sahf
out
insl
stos
and
pusha
dec
pop
nop
dec
mov
inc
mov
xchg
and
pop
int
push
pushf
lret
in
pop
lcall
mov
and
int
push
cmp
push
push
shlb
jne
daa
call
and
out
adc
repz
mov
call
sbb
cltd
sti
and
cld
and
mov
lods
pop
daa
cmp
mov
mov
dec
cltd
hlt
push
inc
jns
test
cmpb
mov
clc
jle
mov
push
and
add
sbb
pop
jb
cwtl
push
mov
cwtl
mov
dec
jp
push
inc
add
mov
add
imul
and
lahf
iret
push
or
insl
cmpsl
sbb
mov
xchg
aas
push
sbb
movsl
mov
aaa
nop
stos
cmp
aas
push
sub
add
scas
fnstenv
stos
out
lods
cli
jno
in
or
push
fdivl
and
push
cmpsb
mov
sar
int
outsb
aas
nop
jecxz
call
jp
xchg
sbb
adc
pop
mov
lahf
int3
adc
push
mov
fwait
pop
stos
insl
sub
dec
and
pop
shl
pop
call
stc
xor
pop
jae
push
and
adc
js
dec
pusha
mov
cli
push
ja
test
or
pop
jae
lcall
fisttpl
jmp
or
test
pop
stos
push
ljmp
xor
jae
cmp
sbb
jnp
fwait
inc
jg
sti
js
dec
or
lahf
cmp
in
sub
fistps
cmp
adc
test
leave
dec
jo
mov
mov
stos
dec
std
xor
fdivrs
movsb
inc
cld
iret
pop
fwait
int
xor
mov
scas
and
cmp
xor
push
xchg
outsl
leave
push
jecxz,pt
inc
nop
jmp
sbb
nop
cmpsb
mov
xor
sub
sub
and
dec
mov
jecxz
daa
repnz
loopne
jns
addr16
push
dec
lods
sbb
mov
cmp
push
daa
mov
cs
mov
shrb
ja
les
inc
cmpsb
xlat
movsl
add
rorl
mov
aas
inc
sub
xchg
mov
out
in
iret
dec
cmp
cmpsb
cmpsl
sbb
xlat
xchg
iret
sub
mov
mov
jle
sub
ljmp
addb
dec
adc
mov
xorb
fistps
out
add
xchg
repnz
aad
int3
cmp
dec
popl
rclb
fcompl
xlat
jp,pn
nop
or
mov
and
jp
adc
and
inc
add
cmp
and
xor
loopne
jmp
inc
fistl
icebp
inc
push
mov
repnz
jno
and
and
inc
pop
rorb
sub
imul
movsl
fnsave
lds
xor
mov
out
sub
hlt
mov
sbb
mov
rorl
cmpb
loop
leave
mov
pop
out
sub
jne
enter
dec
adc
adc
sarb
bound
pop
bswap
fnstsw
gs
vdivps
or
sbb
jp
hlt
pop
test
cld
nop
xorb
jbe
aad
xor
jo
jbe
mov
xor
sub
std
or
sub
pop
js
xor
mov
push
sbb
push
push
and
mov
fs
jo
push
mov
loopne
pop
adcb
xchg
adcb
xchg
insb
outsb
mov
outsb
sub
aad
mov
sbb
pop
and
push
cmp
xabort
fstpt
xchg
mov
mov
sub
mov
ja
push
dec
out
push
sbb
mov
cmpl
scas
lret
xchg
es
in
ja
shl
mov
loop
jb
cmp
sbb
jg
popf
lea
sub
xchg
mov
cmpsb
inc
rolb
xchg
mov
pop
pop
xorl
push
mov
or
fldcw
or
dec
jb
mov
xor
mov
test
mov
xchg
jno
mov
pop
lea
das
mov
test
imulb
add
inc
test
scas
dec
add
inc
pop
pop
pavgw
out
push
or
idivb
cmpsl
or
pushf
in
mov
nop
lock
cld
rcll
cld
mov
movsl
push
dec
xchg
cmp
xchg
imul
movsl
lahf
and
test
scas
mov
lcall
test
shl
sbbl
ja
xorl
addr16
inc
jp
shll
cli
ret
imul
add
push
jg
outsb
push
adcb
sbb
jbe
mov
push
mov
std
and
insb
call
inc
movhps
lods
cmpsb
push
cmp
xor
mov
adcl
icebp
push
sub
cmpl
jns
jb
je
leave
aaa
jl
rclb
mov
sub
pusha
int3
pop
mov
sahf
pop
sub
sbb
xchg
cmp
and
leave
fcoms
out
xor
push
sub
sbb
xchg
jbe
mov
cmp
add
xchg
jbe
pop
xchg
outsw
dec
enter
cmp
or
pushf
mov
xchg
mov
leave
nop
int3
ret
ret
sbb
movsl
push
cmc
adc
inc
sub
xchg
pop
test
adc
mov
and
popa
aaa
lods
testl
pusha
cmpb
into
jno
add
mov
sarb
cmp
dec
ljmp
in
stc
sbb
subl
aaa
mov
jnp
cld
fstpl
pop
and
lcall
jbe
call
mov
jno
in
xchg
push
jb
adc
xlat
and
xchg
jae
push
js
icebp
insb
scas
cmp
pop
push
subb
xor
xchg
in
scas
xchg
jno
pop
mov
jae
shr
lea
addr16
test
sbbl
sub
insl
and
pop
dec
xor
cltd
test
pushf
xchg
scas
and
xor
pusha
insb
popf
jg
bound
sub
outsb
push
push
mov
fiaddl
data16
stc
ss
ret
mov
mov
xchg
pop
xchg
movsl
mov
jbe
aaa
push
mov
cmp
jecxz
movsl
cmp
xchg
dec
daa
out
inc
push
xchg
jl
or
mov
popf
jb
mov
and
fiaddl
stc
dec
xor
pop
sub
jl
jo
dec
scas
sub
pop
cmp
xor
decl
jnp
xor
cwtl
jo
xchg
lock
add
aam
lea
jo
jle
in
push
lret
shll
mov
dec
mov
fmuls
jne
push
adc
stos
xor
call
enter
pusha
and
dec
push
mov
stos
hlt
sub
jp
cmpsl
mov
mov
je
fwait
cld
jp
rorb
push
iret
inc
dec
dec
jb
sub
rcrl
jp
imul
jp
mov
push
sbb
dec
jp
jnp
bound
shrl
and
mov
push
and
xchg
ret
sbb
push
jg
xchg
xchg
cld
push
orl
sub
cmpsl
jmp
dec
inc
sbb
push
fnstsw
dec
lods
push
jg
mov
mov
or
jp
test
mov
fwait
pusha
test
xchg
push
int3
pop
dec
xor
in
mov
jle
je
repz
shlb
pop
test
jp
inc
daa
scas
mov
inc
xlat
mov
pop
stos
mov
inc
pop
mov
aad
jge
repz
lock
test
mov
mov
push
pop
shrb
call
xor
movl
mov
das
arpl
mov
cmp
sub
loop
imul
or
and
aaa
xchg
dec
dec
sub
rclb
dec
xchg
xlat
xor
ja
lahf
ss
cltd
mov
pop
test
push
ret
test
clc
add
pushf
xchg
jl
jecxz
adc
push
mov
cmpsb
mov
push
fldenv
cmc
scas
mov
jp
int3
and
xchg
sbb
das
add
out
fstl
js
push
push
subb
test
mov
and
clc
mov
insb
cmp
jl
addr16
inc
pmaxsw
mov
lea
pop
icebp
mov
pop
es
adc
leave
xor
je
and
gs
out
and
pop
rcll
sbb
cmp
fs
addb
push
dec
jns
in
xchg
add
dec
and
dec
cmp
imulb
mov
jmp
add
test
jnp
inc
sub
lcall
jo
std
mov
movsl
mov
fs
pop
inc
cmp
sub
pop
cmp
xchg
ss
xor
xor
sub
lcall
hlt
cwtl
xor
out
ret
loop
mov
mov
mov
or
or
sbb
xchg
aam
or
xchg
xor
loop
jle
jae
cli
aaa
jg
outsb
sti
in
scas
in
jp
cmp
jge
inc
test
xlat
sbb
imul
jl
pop
call
push
xorb
push
and
adc
adc
cli
sbbl
xchg
jb
fidivrl
lahf
ja
js
filds
and
setno
cwtl
lahf
gs
sbb
pop
dec
jecxz
xor
gs
inc
sahf
out
outsb
mov
pop
inc
ficomps
mov
stc
inc
sbb
and
sbb
pop
aam
stos
push
sarl
scas
dec
outsb
fwait
stos
jle
data16
mov
push
dec
add
mov
xchg
xor
iret
fsubs
push
sub
add
inc
sbb
movsl
fsubrs
aaa
mov
imul
in
cmpsl
and
cmp
or
and
pop
repz
test
out
mov
inc
adc
sub
mov
mov
fcmovbe
sbb
xor
loope
sub
insl
or
out
pop
lds
jecxz
adcl
and
pop
jp
test
sub
shll
hlt
iret
popf
or
mov
out
jb
cwtl
jg
roll
or
sub
mov
mov
push
pop
add
sahf
and
mov
popf
ja
lock
dec
fistl
int3
imul
adc
lods
jns
cwtl
adc
xchg
sub
mov
pop
flds
insl
inc
dec
inc
mov
cmc
xchg
adc
stc
subb
push
jno
js
xchg
mov
lods
jno
pop
gs
xchg
xor
int
int
or
push
mov
push
in
loop
pop
icebp
enter
int3
xchg
push
inc
pop
sub
jno
cwtl
test
int
frstor
add
fldcw
sub
inc
mov
mov
sbb
cmp
push
and
inc
imul
sbb
mov
mov
adc
cmpsb
mov
sub
push
push
loope
push
ja
ja
dec
in
lods
sub
popa
lahf
test
xor
test
cmpsb
imul
gs
gs
add
leave
pop
sub
hlt
ljmp
cwtl
pop
inc
je
jecxz
jecxz
shll
cli
xor
pushf
xor
in
shl
mov
icebp
es
outsl
inc
push
add
inc
xor
mov
mov
or
inc
daa
insb
out
sti
mov
stos
testb
sub
mov
mov
mov
mov
xor
test
ljmp
es
jb
mov
sti
sbb
mov
xchg
xchg
push
aaa
mov
jne
out
push
sbb
cmp
dec
ljmp
pusha
sub
jle
pop
dec
adcb
scas
lcall
and
cmpsl
cld
mov
arpl
push
out
mov
inc
sub
add
notb
lcall
in
pop
enter
aam
jmp
in
sub
ja
jo
jns
add
dec
addr16
jnp
cmp
decb
or
popf
cmpb
js
lahf
cmp
jl
cld
repnz
dec
jns
push
pop
js
lods
nop
shr
add
xchg
add
fnstenv
mov
scas
int3
out
inc
les
xchg
jns
aam
ja
int3
xor
mov
int3
fmull
stos
fs
jle
rcr
dec
dec
sbb
adc
jae
push
repnz
test
std
mov
jg
lcall
xlat
jno
std
cmp
mov
jno
adc
and
nop
add
jno
ds
aam
jne
push
imul
sbb
jge
daa
or
sub
pop
shr
push
xchg
jg
xor
stos
scas
jle
inc
mov
push
test
push
les
lods
pop
insl
mov
dec
push
lods
sbb
cmp
pop
insb
test
cmp
ret
out
sub
in
mul
sbb
pop
fdivs
push
test
mov
xor
inc
jae
lock
cmp
das
fcmovnb
cld
leave
xor
xor
out
pop
imul
inc
pop
scas
daa
cld
mov
inc
xchg
lea
inc
add
sbb
iret
cmp
cs
shlb
jbe
mov
mov
jnp
add
mov
xchg
and
inc
leave
rcll
nop
ja
xor
sbb
dec
mov
fsubs
mov
push
rcrb
cwtl
push
pop
and
inc
ret
xchg
rol
dec
and
xchg
repz
xchg
icebp
fwait
xchg
push
or
or
imul
fnsave
scas
cmp
sub
adc
inc
xlat
fisubrs
negb
ja
or
mov
fs
test
cltd
cld
jns
jg
rcrb
xchg
cmp
add
push
adc
movsl
pop
icebp
mov
cmp
imul
push
test
rolb
movntps
out
fistps
cmp
loop
rcr
push
mov
mov
js
mov
in
and
shll
stos
xchg
lret
imul
sbb
mov
xor
pusha
insb
and
lret
add
adc
cld
call
pop
mov
ret
aad
rorb
and
aam
mov
mov
out
fiaddl
mov
jno
dec
inc
xor
mov
dec
addr16
loopne
ror
pop
int
cwtl
xlat
popa
sti
movsl
sbb
test
adc
lods
add
divl
adc
testl
add
imul
addr16
fldenv
arpl
lret
das
and
int3
in
mov
enter
rolb
cmp
pop
mov
inc
fisubs
shlb
nop
sub
mov
notl
mov
mov
fsubrs
test
mov
ficoml
xor
ret
add
dec
js
cmpsb
xor
push
lcall
data16
test
aas
add
xchg
rol
dec
dec
and
xchg
sbb
mov
or
ret
xor
leave
faddl
add
cs
sub
cli
mov
sub
inc
pop
roll
adcb
xor
or
imul
inc
xor
pop
ds
jb
push
leave
lds
jmp
push
cli
mov
push
cmp
dec
cmp
dec
popf
jl
and
xchg
pop
dec
and
mov
aas
or
ss
sarb
ffree
pop
icebp
lret
mov
jge
dec
push
imul
dec
test
fstps
mov
roll
mov
xor
jbe
cli
sbb
out
inc
movsl
cld
push
out
pop
jle
stc
insb
pop
mov
cld
dec
imul
or
cmpsl
cmp
out
ret
and
sbb
test
push
and
cli
mov
mov
in
or
push
sub
xor
cmp
movsl
adcb
mov
dec
das
into
int3
cwtl
mov
lea
xor
sbb
and
add
popf
push
and
xchg
pushl
movsb
aas
test
xchg
push
lock
pusha
dec
xchg
pop
daa
dec
add
je
imul
fstpl
mov
cwtl
dec
and
or
in
adc
adc
add
lods
jge
xor
popa
andb
xchg
jge
iret
das
xchg
pop
roll
stc
dec
jl
adc
dec
push
jl
testl
xor
xchg
sub
std
test
dec
mov
js
out
out
addr16
divb
and
stos
xchg
or
nop
cmp
adc
mov
push
lock
fs
xor
xor
fs
fcmove
dec
mov
sarl
fldenv
push
fcmove
mov
mov
aas
cmp
mov
push
add
shll
add
mov
data16
push
pop
jmp
xchg
dec
fdivrs
xchg
xchg
mov
lods
add
add
jle
mov
sub
enter
sub
jge
rcrl
pop
orl
mov
addr16
sbb
pop
mov
fmuls
inc
mov
xchg
lods
mov
xchg
xchg
mov
in
daa
jns
xchg
dec
rcrb
aas
dec
cmpsb
xchg
mov
jmp
pop
or
pop
push
loopne
popa
jae
pop
arpl
pop
popf
dec
pop
sub
cli
cmp
andl
pop
outsb
pop
jo
shll
lods
rolb
xchg
int
inc
jns
xchg
ljmp
aas
out
movsl
mov
rorl
mov
push
add
shll
ret
or
dec
stc
sub
cli
faddl
pop
into
pop
cld
fcom
inc
repz
lods
lock
aam
test
mov
dec
sbb
lds
add
into
test
dec
std
into
dec
lock
shll
push
imul
insl
add
mov
mov
ss
adc
notl
cli
or
inc
clc
cmp
push
stos
mov
xor
cmp
push
mov
rorb
xchg
je
cmp
das
mov
in
mov
in
loop
hlt
mov
pushf
add
jp
out
cli
lods
sub
fsubrs
dec
scas
hlt
adc
and
ss
dec
scas
or
ss
insb
roll
inc
jmp
dec
repz
mov
hlt
push
jmp
in
shlb
test
push
mul
stc
insl
popl
sub
stc
add
adc
mov
sarb
mov
inc
push
sbb
out
push
adcl
cmpsl
ss
cmpsl
adcb
in
mov
stc
ret
insl
iret
loopne
adc
cmp
in
sbb
pop
or
sbbl
adc
dec
loope
pop
test
jns
pop
jecxz
mov
cld
mov
loopne
test
jae
mov
mov
add
jle
mov
jmp
jle
loope
push
xchg
std
aas
pop
sbb
addr16
loopne
pop
fcmovnb
mov
sub
cwtl
cs
pop
or
dec
shlb
mov
cmpsb
cmpsb
push
ret
sar
gs
gs
clc
fs
sbb
xchg
ja
mov
or
pusha
lret
mov
pop
sub
and
dec
mov
mov
mov
into
dec
imulb
in
xor
xchg
pop
cli
fiadds
cmp
xlat
push
mov
dec
jmp
addr16
cwtl
xchg
insb
pop
shr
repz
pop
xor
xchg
pop
xor
hlt
flds
push
lock
out
rcll
stc
adc
push
pop
call
jo
sbb
adc
jnp
pop
mov
stc
negb
fdivs
add
pop
mov
nop
mov
mov
lds
js
add
jmp
inc
adc
clc
loopne
sbb
push
add
xchg
jp
xlat
add
inc
ss
stc
push
cmp
add
mov
out
inc
in
rcll
xor
stc
sahf
xor
mov
insb
xchg
push
aas
xchg
movsl
pop
mov
jns
je
jge
adc
mov
fldt
push
sbb
or
aam
test
aad
int3
pop
pop
aas
lret
daa
shll
pop
cwtl
xor
je
inc
lret
call
rcll
adc
dec
in
sahf
fnstenv
cmc
dec
push
lcall
mov
xor
aad
adc
lds
mov
mov
sub
mov
btc
cmp
xchg
js
xor
test
adc
pop
popa
and
dec
pop
ja
daa
xlat
gs
repnz
leave
dec
mov
jecxz
jle
movsl
js
pop
insl
or
out
adc
pop
jg
xchg
sbb
jge
xchg
insb
push
jmp
push
push
cmp
lods
mov
add
sub
lret
popf
xor
push
mov
push
xor
aam
rorl
daa
adcb
rclb
insb
cltd
sarb
cld
and
gs
insl
adc
sbb
xor
dec
fldt
jle
adc
orb
mov
xchg
jge
cwtl
popl
adc
push
icebp
mov
call
mov
xlat
push
pop
hlt
insb
cmpsl
mov
jmp
in
lods
test
fsubrl
add
mov
stos
cmp
or
mov
stc
mov
jns
xchg
xor
cli
pop
dec
data16
add
imul
ss
cmp
inc
aad
outsl
mov
scas
movb
mov
out
cs
sbb
aaa
or
imull
add
jle
xchg
adc
fcmovb
mov
aas
cs
cwtl
sti
fdivrs
iret
or
outsl
or
ss
aas
inc
les
les
inc
xor
cmpl
cmp
inc
repnz
addb
data16
inc
dec
sbb
stos
xor
outsl
mov
add
icebp
jnp
cs
ja
lret
xchg
cmp
test
fisubs
sbb
sbb
add
mov
sub
test
mov
push
jecxz
roll
xor
xor
mov
dec
sub
cmp
xchg
jns
sbb
inc
push
movsb
jne
pop
inc
aam
hlt
mov
bswap
ret
out
mov
scas
aam
pop
jp
sbb
loop
mov
popf
inc
fxch
imul
mov
out
xor
addr16
mov
xchg
shrb
in
mov
cmc
stos
inc
pusha
xor
inc
xorb
push
fwait
sti
pop
mov
xchg
add
mov
cmpsl
xor
loope
cmp
aas
test
xchg
sub
out
in
mov
mov
loop
repnz
jno
insb
inc
dec
xchg
push
sbb
pop
sbb
les
hlt
xor
push
sub
mov
xor
outsl
outsb
adc
rorb
orb
cmc
loopne
int
mov
pop
jmp
ret
cmc
add
xchg
fcomip
test
fsubs
stos
lods
int
aas
call
sbb
gs
mov
jecxz
xchg
mov
jnp,pt
test
int3
test
aaa
mov
loopne
lcall
data16
nop
adc
daa
ljmp
ret
out
or
enter
sbb
pop
dec
jae
nop
inc
push
mov
cmp
jg
inc
test
sub
bound
mov
mov
cmp
or
push
inc
add
addl
xor
addr16
into
movsb
push
adc
rorl
dec
movsl
sbb
or
inc
sahf
mov
gs
leave
cmc
sbb
mov
add
push
jl
nop
sub
sub
mov
test
jmp
mov
pop
mov
test
xchg
pusha
sbb
imul
sti
add
das
out
std
mov
sbb
jnp
mov
in
jnp
jge
mov
es
adc
sub
mov
cltd
addr16
cmp
xchg
jl
xor
dec
mov
add
xor
fisttps
sub
imul
int3
jo
push
shrb
bnd
ljmp
rcr
out
mov
pop
mov
sub
or
lods
add
xchg
inc
pop
xor
repz
ret
pop
push
jl
lea
sbb
js
jp
xor
sti
faddl
mov
pop
xor
call
xchg
je
push
mov
sub
xchg
ret
fiaddl
sahf
adc
dec
mov
adc
jne
xor
ljmp
test
mov
test
in
jb
nop
mov
out
push
iret
cs
imul
and
aaa
imul
inc
mov
imul
and
and
jp
decb
mov
pop
and
aad
andb
insb
sbb
sbb
mov
push
cli
mov
rcll
outsb
jmp
pop
push
fidivrs
imul
sbb
adc
bound
sub
inc
pop
jle
enter
xor
inc
ret
pop
push
sti
test
sub
add
daa
or
cmp
out
mov
pop
dec
dec
addr16
mov
outsl
enter
das
mov
adc
xchg
xchg
in
mov
ret
mov
in
inc
push
push
fwait
lcall
mov
adc
arpl
cmp
mov
mov
lea
push
xchg
and
mov
dec
mov
xchg
outsl
es
adc
rcr
sub
out
sub
pop
nop
arpl
jle
mov
push
lods
sbb
jmp
arpl
jp
sbb
jb
fwait
xchg
push
mov
dec
cmc
inc
cmp
jge
pop
test
xchg
lret
pop
and
out
sbb
sub
aam
sti
jne
adc
pop
shrb
pop
xchg
shrl
pop
mull
pusha
mov
popf
mov
insl
popa
xchg
xchg
and
inc
or
inc
popf
or
jl
jno
test
and
sbb
repnz
push
push
mov
rclb
cmpsb
sub
fmuls
test
pop
sbb
push
sti
dec
mov
sahf
adc
lea
outsl
inc
lahf
pop
push
xor
out
ss
ljmp
je
mov
icebp
out
mov
cltd
push
push
es
hlt
pushf
dec
imul
sbb
fstpl
adc
iret
xchg
pop
mov
and
lock
push
push
int
enter
xchg
adc
push
mov
pop
fsubl
jmp
xchg
adc
pop
test
adc
nop
lahf
and
das
cltd
dec
lcall
nop
stc
aas
repz
into
push
ret
lahf
inc
paddusb
xchg
xor
aas
es
into
push
xor
scas
js
xor
repz
jl
mov
push
loop
sub
rorl
mov
pop
lahf
or
inc
mov
mov
cmp
mov
lcall
scas
pusha
fwait
push
jb
lods
xchg
std
sub
loop
push
cmpsl
add
mov
mov
fisubrs
loop
cli
mov
sti
fcomps
mov
mov
push
inc
or
rcrl
adc
xchg
push
mov
add
sub
popf
outsl
loope
sub
dec
push
fs
add
outsl
ss
mov
rclb
push
push
inc
fs
outsb
pop
push
mov
hlt
sbb
dec
mov
mov
in
movsl
adc
fldz
popa
push
lds
inc
sbb
cmp
nop
push
add
in
and
scas
and
gs
add
push
sub
sbb
jo
add
xchg
outsl
adc
dec
cwtl
add
pop
lcall
or
lahf
cmpsl
das
sub
out
fs
jo
stos
daa
lock
loope
or
sub
or
inc
sub
cmpsb
jno
lahf
jmp
repnz
mov
mov
pop
xor
sti
pop
das
stos
dec
bound
mov
mov
or
enter
adc
inc
cmp
icebp
xchg
int3
or
sbb
jmp
pop
jg
adc
ret
aas
jnp
sbb
loop
insb
cmp
xchg
scas
mov
add
nop
sarl
mov
mov
push
sub
test
call
popa
into
test
pusha
or
inc
and
in
and
je
fldcw
fs
lret
loope,pn
in
pop
dec
jnp
pop
push
mov
mov
push
mov
sub
mov
or
mov
push
mov
dec
pop
outsb
pop
cmpb
orl
imul
std
cwtl
cld
xor
cmp
scas
cli
push
pop
or
sub
push
fcmove
sbb
testb
pop
jge
push
cmovo
pop
popa
jnp
sahf
pop
iret
loop
test
xor
add
stos
cmp
out
int3
xchg
push
pop
xlat
pushf
pop
mov
xchg
add
mov
sbb
cmp
mov
xchg
pop
notb
adc
les
inc
arpl
out
movsbl
movsb
fadds
xlat
les
je
mov
std
fisubl
xchg
push
or
mov
jns
sbb
jb
xchg
jne
dec
cmp
xchg
and
nop
push
dec
call
jbe
dec
mov
lds
sbb
or
int
mov
adc
out
sbb
pop
mov
sbb
push
add
cs
lret
arpl
and
les
push
aam
cltd
cmpsl
in
add
mov
loopne
push
and
cmpsl
pop
cmc
dec
jo
dec
push
and
xor
cmp
test
insl
xchg
ss
imul
jbe
arpl
nop
xlat
sbb
or
test
sub
pop
es
push
pop
int3
dec
cmpb
sub
push
arpl
adc
xchg
pop
iret
imul
inc
xor
xchg
sbbl
dec
inc
cmc
sbb
sbb
ret
cld
in
jmp
lods
add
pop
ljmp
shlb
and
jge
addr16
ret
jno
inc
popf
pusha
call
xchg
out
xor
jbe
jmp
aas
or
loope
loope
cmp
and
adc
sbb
or
lea
mov
cmp
jl
lcall
fisubl
push
sbb
mov
dec
push
xchg
sub
int3
xchg
cmpsb
ja
mov
cmpl
sbb
imul
mov
ja
mov
jo
or
stos
xor
push
cltd
stos
mov
inc
test
xchg
push
mov
outsb
jae
adc
dec
insb
call
pop
cltd
jo
lret
xor
das
mov
cmp
cwtl
push
dec
insl
addr16
faddl
ds
adc
subb
push
and
loop
mov
lret
push
shr
xchg
sbb
and
testl
cmp
repz
in
cmpsb
neg
es
rolb
xchg
flds
int3
or
and
test
icebp
jl
xchg
dec
lods
and
test
daa
fsubrs
sbb
pusha
sbb
push
cmp
or
xchg
pop
push
in
scas
fmul
insl
fnstcw
and
dec
das
arpl
mov
clc
imul
sub
adc
xor
test
mov
cmpsb
sbb
mov
fmul
add
into
aas
xor
adc
jno
add
xor
xor
xchg
xchg
push
xor
xlat
jle
int3
call
adc
jle
jmp
add
mov
push
outsb
bound
dec
cltd
aam
sbb
push
pop
cwtl
fimull
push
into
je
jne
loop
stc
movsl
xchg
push
pop
daa
push
jle
lahf
cmpsb
call
dec
into
push
pop
dec
jge
sub
rolb
pop
addb
xchg
xlat
aas
inc
jbe
push
in
mov
lds
mov
dec
cld
pop
xlat
mov
in
fnstenv
lret
das
inc
cmp
xor
leave
cltd
jns
lds
push
add
jle
addr16
xorb
push
cmpsb
cwtl
cwtl
xchg
pop
jb
cld
push
sub
loop
jb
cmc
cwtl
ljmp
ljmp
cmc
pop
add
out
dec
mov
int3
cwtl
out
lods
jae
jbe
in
sbb
mov
xchg
out
in
ds
mov
push
stos
mov
fisubrs
mov
push
arpl
xor
add
xor
adc
mov
movsl
fistpl
notl
out
incl
dec
ret
test
lret
enter
dec
xchg
adc
mov
jecxz,pn
xchg
loop
mov
mov
ljmp
mov
mov
test
andl
sti
mov
adc
add
out
sub
push
push
shlb
dec
and
inc
pop
adcb
xchg
pop
push
lods
jo
mov
dec
mov
push
mov
out
outsl
pop
out
xchg
push
dec
stos
fsubrs
xchg
lret
addr16
inc
call
lock
jp
hlt
mov
int
rcl
add
sti
push
jl
pushf
ja
es
xor
or
outsl
mov
add
gs
xchg
pop
cmc
and
push
orl
mov
das
ja
ds
ja
aam
fmuls
je
cmp
fldt
jno
mov
lcall
sub
lock
shl
pusha
mov
imul
lock
out
inc
popa
cli
inc
data16
mov
sti
jb
decb
mov
xchg
mov
mov
xor
pop
xchg
push
fidivl
daa
nop
mov
adc
and
mov
test
jl
pushf
aaa
cli
jbe
inc
std
or
jae
push
test
lock
cmp
mov
sbb
cs
sbb
jno
add
mov
repz
mov
sbb
insb
push
jbe
testl
mov
fidivrs
and
cmp
or
decb
pop
nop
adc
fidivrs
jne
jnp
in
stos
xchg
sbb
mov
gs
loope
push
sbb
inc
sub
cltd
int3
sti
lock
fs
in
fisttps
lea
jno
jecxz
dec
xchg
pop
cmp
nop
and
pop
push
cmp
popf
dec
out
and
in
jmp
pop
push
clc
mov
xor
scas
push
bound
xchg
add
ret
decl
fisubs
mov
mov
enter
dec
and
xchg
in
sbbl
xchg
les
outsl
pop
stos
or
cmp
pop
jp
jb
clc
and
pushf
test
xchg
xor
into
jns
lods
push
dec
mov
js
bound
aas
xchg
test
outsb
cmp
cmp
mov
repz
in
lret
dec
loopne
mov
sbb
stc
ljmp
push
cmpb
push
jo
imul
push
jmp
xor
and
dec
icebp
popa
dec
xchg
scas
mov
inc
jg
dec
ds
jb
dec
sub
enter
pushf
or
mov
inc
mov
fsubs
mov
pusha
jle
push
mov
call
xor
sbb
fs
cld
rol
dec
add
int
out
notl
adc
jp
aam
lret
aaa
pushf
xor
faddl
mov
into
aam
xchg
mov
shll
sbbb
ret
adcl
push
xor
test
test
mov
std
inc
xor
sbb
or
xchg
in
andb
xchg
insb
lods
sub
shlb
stc
movsb
push
cmp
ret
and
ficoms
sub
xor
push
sub
add
into
addb
jnp
sbb
jbe
sub
inc
lcall
and
mov
clc
push
pop
mov
xchg
fld
mov
in
dec
cmpsl
mov
mov
add
xchg
mov
adcb
fsubrs
pop
fcomps
cmp
es
xor
in
sbb
jno
jmp
pop
pop
adc
cmpl
and
in
arpl
push
jl
or
xor
cmpsb
ret
xlat
scas
rcr
push
lret
sub
xchg
adc
jl
xchg
jle
imul
fbstp
jno
jo
int
orb
jns
inc
nop
popa
nop
test
iret
ret
out
and
fisttps
xchg
sub
int
or
mov
jp
rolb
int3
fwait
adc
repz
lret
fldcw
xor
out
inc
push
dec
negb
push
filds
fistl
xor
sbb
scas
and
xchg
arpl
imull
test
cmp
call
daa
and
inc
inc
mov
ljmp
mov
daa
sbb
lock
xchg
icebp
lcall
pop
cmpsl
insb
sub
jo
add
inc
adc
jo
add
loop
lds
test
mov
rol
mov
jno
mov
xchg
push
cmpsb
sub
movl
clc
arpl
jbe
pop
daa
sub
inc
jo
add
fs
int
adc
mov
dec
cli
jl
ja
js
outsl
cmp
sahf
leave
sbb
ja
sub
xchg
or
cmp
dec
out
out
push
sub
xchg
in
adc
mov
xchg
xor
dec
dec
xor
push
jae
inc
negl
mov
fsubs
sbb
imul
push
ss
lret
mov
jnp
lea
aam
adc
in
sub
idivb
xchg
mov
adc
lods
sub
cmp
js
lock
pop
outsl
jne
sub
and
jae
and
out
or
inc
mov
mov
pop
jns
mov
in
ja
or
xor
sbb
fiadds
sbbl
leave
push
lds
pop
add
push
mov
push
xor
inc
mov
in
sub
outsl
ljmp
adc
test
and
sahf
rorl
cmpsl
jmp
int3
sub
rorb
sbb
xor
jp
sbb
outsb
dec
out
lods
xchg
adc
sub
ds
pushf
mov
fists
pop
loopne
jnp
shlb
jns
out
ret
das
xlat
pop
mov
fldenv
cli
int3
stos
cmp
xchg
js
jle
aas
jno
and
int
mov
movsb
adc
ds
push
pop
inc
jbe
hlt
es
push
mov
and
cmpsb
repz
mov
imul
push
icebp
xor
pop
sub
push
jl
in
ret
mov
scas
sub
js
stos
sub
xlat
xor
xchg
inc
popa
arpl
pop
push
loop
mov
sub
cmp
cmp
mov
out
scas
xchg
shr
jl
xchg
das
or
xchg
inc
loop
pop
xchg
push
js
hlt
jp
jg
add
push
push
mov
or
pushw
mov
mov
neg
repz
je
lea
or
xchg
out
inc
jae
pusha
ds
jp,pt
mov
xor
push
xorb
xchg
add
hlt
iret
sbb
mov
mov
dec
loop
outsl
aaa
repnz
sbb
aaa
jne
mov
xlat
and
add
fdivs
hlt
cs
cmp
jg
jge
push
and
xor
outsb
mov
movsb
mov
jns
fsts
xchg
mov
pop
int
push
sbb
jo
add
jno
jmp
loope
mov
repnz
sbb
sub
mov
jl
int3
add
push
sub
mov
dec
sub
mov
test
sbb
xchg
insb
fnstenv
xor
inc
testb
je
adc
add
pushf
pop
stc
pusha
sbb
test
pop
divl
xchg
cmp
insb
xor
lods
cmp
mov
push
lds
jnp
pushf
xchg
jp
cmp
leave
test
sub
in
push
adc
or
mov
cmp
push
sbb
ret
ficoml
xchg
xchg
ret
mov
add
mov
das
add
lds
adcb
mov
inc
pop
lds
out
inc
cmpsb
cmpsl
jp
mov
jp
insl
inc
ss
push
stos
dec
loope
adc
pop
aaa
test
add
fidivl
push
lcall
mov
mov
repz
fadds
mov
test
jae
sub
add
bound
jae
xchg
jnp
int3
hlt
mov
inc
nop
bound
aas
mov
int3
mov
dec
jne
fwait
mov
xchg
inc
nop
inc
jns
push
dec
xchg
es
xor
inc
dec
data16
mov
xchg
add
mov
mov
js
jg
fs
out
addr16
dec
out
out
inc
sub
jb
mov
fwait
inc
or
in
pop
and
enter
pop
xchg
sbbl
and
xor
jp
xchg
nop
mov
pop
shr
pop
test
jbe
test
int3
xchg
mov
scas
jle
ds
daa
loope
mov
iret
mov
ret
mov
popf
mov
aaa
into
lcall
sbb
cmp
inc
ss
push
stc
mov
dec
scas
into
fst
jns
fwait
or
mov
pop
xor
jo
ss
or
dec
cli
and
pop
sub
subb
lret
arpl
hlt
fdivl
sub
filds
sahf
and
xchg
cmp
test
int3
push
stc
and
pop
inc
psadbw
add
xchg
ret
and
mov
loopne
dec
mov
pop
mov
fmull
jmp
xchg
jb
fsubrl
mov
hlt
push
fisttps
mov
push
rcrl
mov
xchg
and
cld
cmp
lods
jb
pop
popl
or
aas
add
aad
shll
aas
rolb
lret
pop
aaa
lods
push
dec
xorb
sub
lahf
or
dec
orb
add
cli
mov
cmp
sub
daa
push
dec
inc
outsl
mov
jmp
dec
das
push
mov
push
mov
add
ret
arpl
int3
mov
lret
sub
mov
lods
lds
sahf
push
push
push
pop
rcll
test
jnp
jg
jae
cmp
and
jns
ljmp
cmp
ret
nop
sbb
push
addr16
hlt
clc
mov
dec
push
ss
outsl
pop
test
xor
test
mov
clc
mov
xor
mov
sub
pop
fld
inc
imul
leave
lret
rep
notl
int3
mov
push
cld
xor
lods
push
mov
cmpb
push
fimuls
add
outsb
ficoms
dec
mov
push
xor
sbb
dec
outsl
dec
std
dec
xorb
xchg
xchg
jge
cmp
cmpsb
dec
xchg
arpl
sbb
pop
fadds
mov
sub
pop
popa
lock
int3
sub
pop
push
shlb
stc
loopne
xor
cmpsl
test
push
jmp
add
xor
insl
jp
jo
call
xor
fisttps
cmp
fsincos
pop
repnz
leave
aaa
push
jae
sahf
sub
insb
into
and
cmp
jle
and
mov
scas
cltd
and
inc
jo
lods
das
fsave
or
lcall
incb
scas
mov
xchg
jge
sub
push
jo
add
or
sbb
enter
inc
sub
xchg
stos
cmp
mov
insb
push
and
lock
dec
aam
sub
dec
jne
mov
inc
int
mov
inc
pushw
inc
sahf
jns
pusha
in
adc
or
sahf
outsl
insl
aad
bound
flds
sub
sub
or
in
jne
jecxz
xor
dec
jo
fcomps
in
mov
cmp
dec
ret
inc
xchg
test
sti
dec
xchg
pop
jb
pop
dec
or
xchg
xchg
jg
jnp
icebp
call
cmp
enter
sbb
outsl
cmp
push
into
xchg
fmull
das
gs
and
fwait
addl
xorb
cmp
dec
filds
adc
mov
mov
mov
xlat
xchg
xchg
push
fcomp
movsb
arpl
pop
push
nop
rol
enter
pushf
and
push
stos
mov
jp
cli
cmp
adc
test
sahf
push
cmc
add
and
pop
lcall
mov
stos
sbb
mov
dec
std
ljmp
out
mov
dec
stos
xchg
or
lret
lret
shrl
sub
adc
je,pt
jl
xchg
repnz
mov
pop
push
push
inc
mov
movsl
cwtl
stos
xchg
in
sarl
pusha
sbb
mov
pop
xchg
cmpsl
shlb
cld
mov
test
lods
add
fnstsw
addr16
fsubrs
idivb
dec
dec
data16
ret
cs
hlt
sub
dec
outsb
mov
subl
sbb
mov
cmp
sub
mov
mov
iret
dec
aaa
sbb
nop
adc
add
sub
not
shlb
push
call
pop
nop
ja
sub
pop
xor
xchg
sub
loopne
int3
stos
es
faddl
gs
sbbb
dec
mov
xchg
out
stos
test
das
xor
repnz
call
push
jmp
insl
cli
jp
lret
arpl
jl
rcl
mov
push
cmp
dec
mov
xchg
sti
inc
jge
in
test
jnp
jecxz
add
data16
xchg
jno
loope
xchg
xor
pushl
lcall
xchg
push
mov
or
jo
mov
nop
jnp
push
xchg
and
cli
jo
ss
or
aas
fs
mov
mov
fs
mov
push
imul
mov
and
pop
mov
sahf
out
cmc
inc
jl
push
or
aaa
pop
add
mov
cmp
pop
test
faddl
repnz
jmp
pop
in
xor
jae
pop
scas
jae
dec
cli
cmpb
fidivrs
fcoml
std
lods
xor
ficompl
sub
cli
pop
popf
mov
lods
pop
jmp
adc
mov
shr
pop
lds
xchg
popf
ret
scas
xor
sub
mov
arpl
ljmp
sub
xor
jge
jl
xor
sbb
imul
mov
subb
popa
inc
lods
aam
mov
sbbl
or
dec
data16
nop
xor
in
dec
test
and
cmpb
push
push
push
hlt
test
nop
xor
sbb
popf
inc
movsl
data16
cli
sbb
mov
dec
out
mov
imul
add
imul
imul
adc
mov
and
push
or
sub
cltd
dec
push
dec
dec
scas
stos
nop
and
sub
fwait
dec
xor
jge
mov
sbb
add
pop
lock
and
ret
sbb
xchg
enter
cmp
stos
jp
das
iret
mov
gs
xchg
lds
js
daa
les
mov
ret
xlat
cltd
scas
and
adc
pop
shlb
out
and
pop
fcomps
or
das
cmpl
jl
push
ror
addr16
dec
mov
xchg
push
lods
or
ret
xchg
lea
cmp
mov
dec
xor
cmp
shll
dec
outsb
push
aaa
xchg
cld
stos
cmp
les
popf
gs
in
ret
add
sbb
rcrb
mov
adc
cmpsl
mov
jo
popl
mov
push
push
lea
test
push
cmpsl
push
adc
push
inc
fisubrs
test
cld
lods
jge
mov
inc
mov
jmp
ljmp
ss
adc
in
fwait
xchg
jl
pop
jnp
pop
sbb
js
inc
xor
cli
push
sbb
dec
add
ja
or
js
and
mov
push
sbb
mov
and
mov
pop
in
sbb
outsl
shll
or
decl
mov
mov
addr16
adc
rol
outsb
fsubs
and
mov
inc
and
dec
scas
mov
dec
arpl
sub
mov
xor
mov
pop
inc
or
insb
xchg
push
push
out
push
popf
add
aaa
jg
outsl
cwtl
sub
push
xor
imul
dec
imul
jbe
mov
dec
xor
dec
push
cmp
jle
or
and
push
movsb
sbb
push
xor
mov
mov
sub
js
mov
xlat
lock
push
jno
idivb
inc
cwtl
popl
sub
das
jo
dec
jno
mov
jnp
dec
pop
stc
adc
and
lret
insl
push
stc
mov
and
imul
rol
dec
cwtl
fstl
xchg
jmp
mov
adc
das
ss
into
les
jecxz
push
add
cwtl
movsb
pop
rclb
mov
mov
sarb
aas
xlat
je
jp
popa
cwtl
cmpsl
lods
loop
nop
sub
lock
aad
jns
sub
mov
sbb
rcrb
dec
leave
inc
pop
movsb
ss
jg
divl
ja
dec
dec
movsl
lds
mov
lds
xor
scas
movsb
xorb
outsl
fimull
xchg
fwait
pop
es
daa
outsb
cmp
iret
mov
mov
pop
and
cmp
push
jle
mov
ljmp
into
mov
dec
jg
and
sbb
test
inc
push
inc
notb
seto
mov
sub
ja
mov
cli
out
sbb
fsts
fsubs
push
cmp
xor
lods
daa
shrl
scas
pop
ja
sbb
xchg
inc
xchg
xlat
cmp
pop
add
es
dec
out
push
aad
out
xchg
mov
adc
pop
or
dec
jmp
cwtl
push
or
jnp
lahf
add
mov
and
adc
leave
enter
xchg
mov
or
push
and
jb
fists
leave
repz
xor
and
push
in
cmpsl
xor
mov
pushf
arpl
sbbl
leave
cmpsl
xor
fisttpl
jl
and
xchg
xor
popf
push
popa
cmpb
rolb
cltd
je
mov
jno
fcmovnb
inc
loope
pop
mov
jb
jo
in
jp
pushf
sub
dec
movsb
sub
add
and
pop
inc
lods
push
out
test
lods
stos
sbb
rorb
or
sarl
loop
clc
sub
xchg
jle
ret
outsl
mov
pushf
mov
xchg
pusha
dec
mov
scas
aam
sarl
inc
sub
mov
ret
and
scas
mov
fnsave
and
jbe
sbb
lds
pop
cmp
xchg
scas
test
xchg
sahf
push
pop
pop
ds
xchg
dec
leave
xchg
lea
into
sbb
in
inc
mov
std
jno
fstps
xor
sub
adc
popf
adc
js
rorl
lock
inc
les
push
movsb
in
outsb
sub
stos
call
add
add
test
inc
das
iret
jb
icebp
test
push
scas
lods
cmpsb
jge
ret
cs
je
das
mov
scas
out
fwait
hlt
pop
add
bound
xor
pop
shr
pop
jns
ja
add
xor
lahf
insl
xlat
xor
adc
repz
es
test
mov
jb
subb
sub
loope
loopne
jne
push
sahf
mov
shlb
jnp
jno
out
sub
scas
mov
xor
lea
sub
pop
jge
mov
jg
rcrl
or
es
insl
lret
and
fimuls
out
jnp
es
push
imul
scas
push
inc
xchg
add
xchg
cmp
arpl
xchg
std
xor
test
or
adc
and
push
fidivs
cwtl
ret
fsubrl
inc
sub
push
scas
xchg
pop
imul
mov
pop
call
dec
jae
pop
dec
mov
lcall
int3
subb
cltd
sbb
loopne
xchg
pop
inc
and
mov
fcomps
enter
cld
inc
xchg
and
add
xchg
pop
insl
cli
sub
mov
rolb
push
xchg
inc
andb
inc
std
mov
mov
jg,pn
xchg
mov
jo
dec
lret
scas
pop
fistps
or
cwtl
pop
sbb
test
test
mov
dec
or
jne
test
push
out
cld
sub
scas
cmpsl
shrl
incl
adc
dec
in
add
nop
popl
xchg
and
pop
add
outsb
mov
fildl
and
stos
push
stos
pop
iret
jbe
mov
jle
fs
or
ljmp
mov
cmpsb
and
add
test
ror
stos
test
les
neg
mov
movsl
insl
lahf
cmpsb
ficoms
fs
vsqrtss
hlt
lods
add
vpand
sbb
xor
std
mov
popf
xchg
fsubrs
test
or
js
pop
sub
sub
dec
sbb
shll
jmp
dec
cwtl
xor
mov
jne
ret
pop
or
dec
add
call
push
jmp
xorb
mov
lds
jg
dec
pop
test
cmp
sbb
mov
dec
xlat
mov
ds
ja
mov
sbbl
ficompl
fmuls
scas
pop
sub
repnz
sub
add
add
aam
out
and
pop
xor
pop
and
cmp
xorb
xchg
lret
test
jae
loop
push
addb
int3
jg
xor
xor
pop
cmp
sub
test
js
cmp
int
fstl
ljmp
fmull
insb
jae
out
stos
xor
cli
xor
jo
jl
in
push
push
pop
aas
lea
sarl
xchg
cmpsb
jmp
jnp
push
and
pop
out
shlb
cmpb
adc
or
push
cmp
stc
sbb
sub
pop
add
xor
mov
nop
popl
adc
daa
cmc
adc
dec
into
dec
or
ja
and
xchg
and
inc
sti
fildll
icebp
push
xor
ficompl
xchg
cmp
and
test
lcall
jle
daa
xchg
pop
mov
ja
xchg
repz
loop
xchg
xchg
nop
mov
add
jnp
sti
pop
push
test
pusha
ljmp
jle
into
cmpsl
lods
ret
push
inc
push
loopne
mov
mov
mov
pusha
sub
mov
int3
pop
add
icebp
jmp
out
daa
or
icebp
jle
ljmp
cld
in
mov
push
test
jmp
dec
and
push
gs
icebp
push
lcall
lret
aaa
push
lret
add
add
mov
das
nop
xor
push
or
cmp
loope
push
sbb
iret
das
push
ret
jmp
dec
pop
les
fs
ret
les
push
jo
js
js
push
pop
inc
pop
imul
add
scas
inc
rolb
jb
fwait
test
push
sub
jo
cmp
cs
aam
mov
pop
in
nop
sbb
mov
mov
adc
test
mov
xchg
pop
dec
sti
adc
jmp
mov
popl
dec
js
inc
mov
into
push
inc
push
orl
mov
fs
push
jbe
xchg
xchg
mov
xor
dec
icebp
pop
mov
push
push
dec
cmp
gs
ror
ret
fsubr
mov
pop
es
push
add
mov
outsb
ljmp
in
jmp
scas
sub
xchg
mov
push
setnp
rclb
shl
xor
ret
mov
aam
fidivrl
sub
add
das
fwait
imul
adc
lods
cmpps
rorb
imul
int
adc
or
mov
out
push
data16
add
xor
loopne
mov
das
loope
clc
ret
pop
xor
in
repnz
sarb
faddl
ret
dec
cmpsl
ss
jg
ret
jnp
fmuls
les
mov
xchg
sub
scas
xchg
dec
mov
loopne
cmp
arpl
push
outsl
pusha
mov
mov
or
inc
push
dec
mov
int
mov
loope
push
mov
jmp
add
and
popa
daa
in
jo
sub
jg
sbb
and
push
hlt
in
or
sbb
loope
sbb
cmp
jmp
and
or
or
sub
dec
lret
in
mov
ret
in
sbbl
pop
stos
inc
out
aas
xlat
rcll
mov
ret
lods
popf
dec
sti
xchg
jb
sbbl
or
add
adc
xor
push
jnp
pop
nop
mov
jmp
dec
dec
jmp
sbb
loopne
jnp
shll
cmp
imul
imul
sub
ficompl
sub
mov
and
sbb
push
lea
cwtl
fisttpll
es
cmpsl
idivl
pop
add
icebp
pop
xchg
aaa
adc
nop
pushf
and
dec
pop
and
cmp
shll
out
ret
ja
push
push
pop
pop
cmp
test
aas
mov
or
and
dec
rorl
out
daa
sbb
testl
mov
mulb
fstps
xchg
pusha
push
fbld
lcall
mov
push
es
call
xchg
mov
mov
test
xchg
mov
dec
or
rcrb
cmp
pop
mov
push
pop
fimull
pushf
add
push
adc
add
gs
outsb
dec
je
cmp
js
inc
fwait
loope
sbbl
icebp
jl
seto
or
dec
sbb
out
popa
mov
iret
xchg
pop
out
pop
push
cli
xchg
xor
push
xchg
pop
gs
mov
xchg
or
jecxz
inc
xor
les
pop
push
loop
dec
cmc
pop
add
xor
xchg
jo
pop
divb
fs
jnp
lods
js
sub
jg
dec
jns
or
cmovo
jbe
jle
divb
movsl
xchg
dec
aaa
mov
push
or
in
dec
push
pusha
nop
addr16
sub
sbb
xor
xor
or
fs
push
dec
lcall
je
adcl
xchg
es
pop
and
push
dec
faddl
rcrl
insl
lcall
out
je
ljmp
ss
mov
inc
sbb
inc
jae
pushf
divb
int
outsl
clc
mov
mov
push
sub
jmp
push
jno
cwtl
or
lea
cmp
ret
mov
jnp
or
inc
sbb
jg
pop
mov
sahf
fcomi
and
pop
subl
imul
push
jae
dec
das
mov
xchg
mov
insl
pop
xchg
orb
test
arpl
pop
dec
sbb
outsl
in
stos
stos
stos
daa
and
fildl
cmp
insl
jl
add
push
sbb
dec
dec
loope
xchg
sub
adc
xor
rcrb
inc
arpl
jge
fwait
rol
das
mov
xchg
nop
inc
sbb
and
inc
test
dec
pop
popa
es
sahf
test
jno
sub
nop
movsbl
inc
add
mov
adc
nop
jle
mov
xor
or
out
sub
loop
test
lds
fsubs
lcall
out
mov
sar
sub
mov
dec
xor
mov
push
adc
inc
test
scas
int3
sbb
int
push
push
mov
out
cmp
mov
cmp
push
or
cmp
in
jb
jg
xor
hlt
cmp
or
pop
jns
adc
stos
sub
in
sub
pushf
push
xor
repnz
sbb
jo
sbb
mov
mov
jbe
fistl
stc
cmpsl
push
xchg
push
pop
xor
mov
jne
dec
pop
cmpsb
pop
jmp
popf
inc
sub
xchg
pop
das
test
dec
sub
mov
jl
aaa
cmc
test
mov
movsl
loop
push
cmp
or
movsl
xchg
sti
push
fs
jl
add
mov
push
add
adc
jl
and
mov
loop
xor
sub
mov
sub
test
cltd
push
shlb
loopne
add
adc
xchg
add
mov
int
add
aam
addr16
aas
and
cli
aas
lods
fdivrs
pop
mov
insb
pusha
nop
xor
ret
rcll
inc
and
rcrl
in
imul
mov
pop
add
lods
cmpsl
or
jae
sahf
or
nop
mov
inc
cli
or
icebp
cmp
mov
xlat
mov
mov
fwait
iret
add
jo
test
fwait
scas
dec
mov
ljmp
stos
xchg
mov
addr16
pop
pop
xor
push
mov
jle
dec
sbb
inc
adcb
stc
pop
inc
mov
int
insb
dec
jne
jmp
ss
cmp
aaa
lea
sbb
pop
in
mov
insb
pop
pop
in
jg
push
xchg
call
test
mov
jns
ret
jmp
lret
push
jbe
jle
mov
mov
shll
movsl
inc
into
test
mov
xor
stos
mov
mov
and
int
xchg
add
push
mov
lea
ds
xlat
rolb
mov
sbb
shl
dec
sarb
dec
ret
sarb
scas
jl
add
add
mov
and
push
xor
fistl
dec
das
ffreep
scas
mov
xlat
mov
arpl
aad
add
mov
sub
mov
lret
dec
pop
mov
imul
test
stos
fs
repz
or
cmp
push
call
lcall
nop
jmp
adc
in
xchg
leave
leave
add
inc
out
cmp
ret
daa
xchg
lcall
fcoms
jb
subb
xor
pop
push
mov
xchg
xor
pop
push
mov
inc
sub
inc
pop
inc
orb
push
adc
iret
roll
jnp
cltd
add
stos
filds
jb
mov
and
outsb
adc
in
cmp
or
clc
add
xchg
lcall
sub
enter
sarb
sbb
inc
sub
dec
cmp
sbb
xor
movsl
add
mov
adc
sahf
shrl
hlt
mov
lahf
loop
stos
dec
xor
and
fbstp
aam
mov
xlat
pop
enter
xor
sub
push
add
into
jo
sub
push
or
test
testl
jb
mov
ret
xor
cmp
xchg
aaa
xor
cmp
jp
jb
dec
jno
push
sti
mov
inc
out
cld
shlb
xchg
xchg
jb
mov
inc
mov
gs
out
notb
cld
ret
sbb
xor
or
adc
and
rcl
pop
dec
andl
addr16
nop
jno
scas
das
jne
std
xor
dec
add
pop
inc
lret
or
les
mov
addl
add
or
mov
cmpsl
nop
inc
xchg
mov
js
data16
and
ljmp
pop
add
outsb
mov
add
lret
shlb
xor
push
frstor
mov
jmp
dec
mov
pop
dec
dec
movsl
push
jnp
lret
and
inc
cmp
rclb
aas
imul
jge
sub
test
movsl
or
mov
cmp
mov
dec
mov
xor
pop
fs
xchg
add
sub
cmpsb
jno
jns
xchg
mov
mov
lahf
cmpsl
cltd
out
ret
jecxz
or
inc
dec
icebp
mov
pop
cld
adc
jg
mov
or
or
push
stc
sbb
sbbb
out
or
jo
imul
in
andl
or
push
daa
stos
push
and
mov
mov
mov
lcall
fstpt
pop
cmpsb
sub
imul
test
addr16
jecxz
push
push
in
mov
rclb
mov
push
xchg
xor
mov
ds
inc
popa
xorb
adc
shrb
ljmp
out
je
shrl
addb
aas
lds
ljmp
pop
adc
popf
lcall
cmp
cltd
xor
push
rcll
cwtl
dec
pusha
das
mov
imul
mov
cmp
mov
int3
cwtl
mov
adc
or
adc
roll
cmp
cli
push
aaa
mov
cmpb
xor
pop
aaa
pop
xchg
loop
repz
icebp
jo
in
push
push
cli
mov
cmp
jae
or
loopne
loopne
aad
mov
js
mov
stc
pop
pop
daa
pop
js
mov
mov
push
inc
jns
sbb
andl
sbbl
mov
iret
cmc
loop
jbe
mov
push
repnz
or
mov
push
scas
inc
cmpsl
inc
jbe
mov
loope
stc
or
add
les
or
ret
fsub
add
data16
mov
fcmovu
les
ljmp
dec
xor
andb
jnp
hlt
fsubrl
push
rorl
xchg
dec
push
inc
out
movb
xorb
or
adc
jnp
cmp
and
mulb
pop
sbb
addr16
xor
lods
and
daa
lret
adc
ljmp
les
movsl
inc
add
mov
dec
dec
imul
cmpsb
dec
arpl
call
mov
lret
in
mov
ror
insl
lret
clc
loope
mov
aad
inc
jle
sahf
stc
pop
mov
push
pusha
lcall
xchg
sti
and
pop
dec
aaa
adc
je
xor
pop
mov
fcomip
fists
push
cltd
roll
xor
adc
cld
lea
xchg
das
inc
dec
sub
mov
adc
sub
fstps
addr16
popf
fdivrl
add
lea
imul
sub
aas
inc
sbb
dec
jae
jne
mov
mov
leave
adc
mov
mov
gs
jle
push
dec
mov
jne
mov
inc
fistpl
xorl
cwtl
lcall
xchg
jg
inc
lahf
mov
push
pop
push
and
insb
and
fcmove
and
mov
jge
lock
outsl
hlt
lods
jge
mov
gs
pop
lret
clc
push
mov
mov
inc
test
fcom
jnp
dec
int
xchg
lret
dec
sahf
movsl
jmp
adc
decl
xchg
out
lret
pop
push
hlt
pop
dec
inc
stc
scas
push
repnz
mov
jecxz
ret
xor
je
and
pop
iret
push
xchg
and
sbb
cltd
js
push
push
inc
cwtl
sub
das
mov
lahf
mov
mov
sahf
mov
dec
xchg
sbb
inc
cwtl
pop
jno
mov
repnz
inc
pop
fisttpl
test
sub
adc
jg
js
dec
jl
mov
call
cmp
fwait
inc
ret
in
dec
cmc
sbb
and
or
les
mov
ds
dec
pop
ja
insb
mov
lcall
mov
in
jne
shrl
fiadds
loopne
xchg
jp
jl
jo
fsub
xchg
jae
push
sbb
adc
adc
cltd
push
stos
jno
test
call
in
push
mulps
push
sahf
pop
pushf
adc
in
ss
jecxz
mov
aam
jl
jmp
and
sahf
pop
ret
lahf
pop
fimull
into
fcomps
or
test
pop
les
mov
cmp
mov
js
dec
hlt
xor
jbe
test
jnp
mov
mov
jb
clc
jo
insb
lcall
xor
shlb
aad
jl
sbb
inc
bound
aam
ret
xchg
and
ror
push
pop
or
je
lods
pop
mov
and
repnz
dec
push
mov
in
out
pop
mov
mov
scas
mov
pop
fstps
pop
ss
fimuls
sarb
stos
and
add
jmp
outsl
insb
in
push
vmwrite
mov
fwait
and
stos
test
pop
mov
pop
popa
pop
cmp
ldmxcsr
pop
lods
xor
cli
xchg
rolb
in
xor
fscale
insb
mov
loop
mov
mov
jecxz
movsl
adc
mov
push
cmp
push
jae
imul
es
sbb
ds
insb
fadds
out
jno
jl
xchg
and
inc
gs
daa
insl
nop
inc
ljmp
je
int
mov
rcll
and
lahf
mov
bound
pop
jle
loope
repnz
dec
sbb
pop
pop
test
inc
sbb
or
insl
xor
mov
dec
push
aaa
std
inc
jg
xchg
sbb
sbb
adc
js
cwtl
data16
hlt
xchg
test
cli
cmp
cwtl
add
mov
dec
jp
sub
rcrl
movsl
sti
popf
push
lea
xor
mov
mov
lret
imul
shrl
movb
in
dec
mov
shlb
pop
jno
ss
or
sahf
divb
mov
mov
and
mov
pop
pop
pop
xchg
outsl
jno
jg
shlb
call
add
mov
addr16
aas
mov
adc
xchg
pusha
insb
shrl
iret
sub
adc
shlb
jb
add
and
sbb
xchg
lods
sub
xchg
shl
add
out
add
outsb
call
repnz
iret
sub
or
and
outsl
fmuls
mov
std
or
and
sar
es
pop
imul
std
mov
es
push
test
xor
jno
xor
and
adc
xchg
cli
xchg
and
mov
dec
fnsave
mul
addb
gs
mov
pop
stc
mov
push
cld
push
inc
fists
push
xor
or
fdiv
test
lods
mov
movsb
test
jbe
sub
call
sub
and
imulb
mov
pusha
or
test
test
push
push
cli
mov
addr16
sub
orl
dec
nop
in
inc
and
push
xor
jbe
xchg
pop
nop
and
shrb
mov
out
or
insl
leave
sbb
or
cltd
mov
les
fmull
test
push
cs
cmp
je
bound
push
xor
and
add
insl
mov
loope
add
mov
enter
jno
pushf
xor
inc
xor
popa
push
xorl
enter
pop
dec
ret
imulb
xorb
xchg
cmp
loope
jno
adc
lods
cli
jmp
popf
push
sbb
or
pop
imul
xor
test
mov
inc
lret
test
mov
mov
push
and
inc
jo
cli
imull
in
les
pusha
xor
push
mov
dec
xchg
push
in
cmp
add
ret
lahf
xchg
outsl
mov
push
mov
dec
mov
inc
pop
inc
mov
repnz
dec
and
and
xchg
xchg
cli
stos
insb
dec
out
xchg
pop
fcmove
movsl
mov
mov
or
inc
aam
es
mov
cwtl
xor
sarl
pop
mov
popa
push
sub
adc
pop
sub
fwait
jge
andl
imul
sbb
cmc
ss
jb
or
rorl
lea
nop
sbb
aad
adcb
dec
push
mov
cmp
and
dec
js
inc
inc
sbb
rolb
pop
ss
jo
push
call
imul
dec
sbb
in
or
pop
mov
movsb
std
push
pop
test
outsb
mov
lods
mov
mov
mov
sub
ds
inc
lock
iret
sub
mov
push
aad
mov
test
daa
in
sbb
mov
pop
into
scas
push
cmp
hlt
fcoml
call
sub
pop
lods
jo
and
pop
scas
lret
ljmp
xchg
rorl
ret
out
pop
pop
and
dec
iret
jp
mov
push
das
ret
stos
and
xchg
push
rep
and
mov
mov
fsub
aad
ret
jno
call
push
push
cld
pushf
movl
aad
fidivs
pop
rolb
mov
stos
dec
mov
mov
cli
pop
adc
inc
jmp
mov
cwtl
mov
fcmovb
pop
xchg
outsb
es
jle
test
rcll
jb
sub
out
inc
push
fs
jecxz
out
cli
mov
dec
out
sbb
outsl
mov
rclb
or
ret
loop
xchg
jp
loope
mov
cmp
in
call
cmp
sub
stc
adc
inc
ret
ja
push
cs
inc
lea
repz
in
pop
or
mov
repz
mov
adc
cs
or
fwait
push
xor
cli
cld
lahf
or
pop
repnz
stos
lcall
loope
call
or
dec
mov
xchg
mov
sbb
js
sarb
push
popl
sub
cmpsl
pop
cli
push
repz
mov
push
sar
pop
cwtl
pop
pop
out
or
cmp
lock
and
sahf
stos
pop
dec
xor
in
mov
adc
adc
enter
mov
mov
lcall
lret
stos
sbbb
pop
mov
shll
repnz
test
icebp
dec
push
mov
mov
inc
dec
sbb
fnstsw
adc
cmc
cmp
pop
cmp
xor
fmuls
stos
jae
add
rcll
xchg
lahf
fwait
push
lea
loopne
dec
test
aas
inc
test
aas
inc
test
mov
jae
pop
adcb
mov
rol
call
dec
sahf
or
icebp
aaa
stos
dec
cs
rcrb
stc
int3
pop
int
js
jle
cmp
and
fisttps
add
pushf
mov
inc
mov
mov
adc
test
lahf
lcall
sbb
fsub
mov
out
lret
sbb
lcall
adcb
into
imull
in
xor
pop
add
loop
cmp
jecxz
xchg
adc
sbb
fstpl
fdivrs
mov
sbb
jne
and
ja
dec
mov
dec
inc
bound
sarl
loop
fdivs
add
push
or
icebp
cmp
mov
jp
jg
fistps
addr16
mov
cld
push
dec
mov
scas
fcmove
mov
inc
jl
dec
inc
xchg
inc
push
pop
mov
pop
jns
jno
sbb
jecxz
movsl
jmp
subb
sub
ja
fldcw
dec
xchg
dec
aas
cmp
fidivs
pop
shrl
jns
jp
cwtl
xchg
push
pop
movsb
xlat
cmc
repnz
rorb
cmc
xchg
std
jmp
in
push
imul
and
xchg
add
xor
jnp
lds
clc
pop
loop
fsts
call
aad
mov
imul
sbb
pop
pop
cmpsl
mov
sub
dec
shlb
xchg
subb
cmp
repz
sti
sbb
lahf
iret
test
dec
jo
mov
push
pop
add
sahf
test
lds
fcom
daa
cli
pop
loopne
inc
cmp
sahf
pop
push
and
cli
inc
leave
daa
das
mov
shrb
inc
out
xor
aaa
mov
lea
cmp
mov
jecxz
call
dec
dec
mov
aad
jecxz
pop
fxch
push
inc
mov
pop
and
push
xor
cli
mov
add
push
cli
ljmp
clc
mov
std
ljmp
adcl
lods
push
add
imul
xor
xchg
mov
cltd
inc
leave
pop
sub
lods
pop
push
cmpsl
decb
dec
loop
js
mov
push
add
jbe
sbbl
mov
icebp
sbb
or
rclb
mov
jno
ljmp
clc
cmp
mov
in
jae
sbb
sti
jmp
add
lea
jg
sar
dec
loopne
shrl
aam
jne
mov
outsb
test
mov
xor
sbb
in
add
and
push
ret
jmp
into
ja
pop
pop
xchg
sub
mov
dec
sub
pop
sub
mov
xchg
jo
dec
sti
xor
sbb
inc
pop
fstl
add
jecxz
insb
jmp
movb
push
or
add
add
insb
push
pop
sbb
adc
pop
sbb
add
pop
cmpb
stos
jmp
pop
mov
pop
inc
or
lret
xor
cmpsl
fs
lcall
sbb
mov
lret
enter
adc
test
orl
scas
push
out
fistpl
scas
pop
jmp
xor
push
jecxz
lea
in
lock
xchg
adc
fsubr
imul
addr16
xchg
icebp
repz
jne
push
jp
ljmp
push
sbb
stos
prefetcht2
test
stc
daa
incl
mov
sbb
int3
ja
xor
aam
and
xor
jle
mov
sbb
xor
pop
stos
cmc
fcoms
in
daa
mov
cmpsl
add
sbbl
or
sub
push
cmp
jge
cwtl
dec
xchg
add
adc
sbb
jl
insb
adc
test
addr16
sub
jp
pop
pop
jb
stos
andl
scas
jg
in
xchg
aam
fisttpl
adc
nop
ds
sarb
pop
mov
mov
dec
push
out
aad
push
add
aam
fwait
stos
add
aad
cli
dec
jmp
cwtl
mov
std
mov
xchg
cltd
lret
aad
cmp
jecxz
insb
cmp
outsb
dec
xchg
jne
out
cmp
sbb
adc
jle
push
sub
mov
sbb
roll
lahf
inc
clc
push
xchg
inc
mov
addr16
mov
movsb
jecxz,pt
jecxz
sar
mov
pop
jne
aaa
mov
push
push
adc
push
ficompl
hlt
adc
gs
jmp
jae
inc
jns
pop
mov
gs
mov
inc
or
outsb
inc
xchg
push
jmp
js
dec
xchg
aad
fsubs
push
cmp
adc
fisttpll
sbbl
inc
jb
or
movsl
xchg
adc
dec
dec
xchg
mov
mov
pop
pusha
inc
andb
fisubl
stos
and
insb
jg
filds
arpl
out
out
mov
sbb
addr16
das
cli
sub
scas
xchg
or
xor
push
sti
ret
mov
push
inc
les
dec
aam
test
dec
xor
arpl
lds
adc
outsl
loop
inc
jnp
xchg
mov
pop
xor
js
in
sahf
lea
xchg
insb
xlat
lret
or
jnp
or
test
jp
and
aaa
push
dec
push
sub
cmp
test
enter
ret
or
jno
scas
ret
pop
sbb
or
dec
rorl
mov
sub
mov
pop
xchg
seto
sbb
aas
test
xor
xchg
dec
and
shrl
xor
jle
test
jo
test
imul
cmp
fbstp
lods
fcmovnbe
mov
cmpsl
push
sti
addr16
imul
sub
cmpsb
aas
out
lods
fisttps
or
ja
pop
mov
sub
fmull
jno
xlat
mov
mov
pop
mov
mov
jno
cmp
jae
push
or
push
pop
cmp
in
push
pusha
inc
cli
test
inc
rorb
jns
jle
dec
sbb
sub
pop
out
add
inc
scas
inc
xchg
xor
std
out
jnp
dec
js,pn
pop
mov
sub
sub
aas
test
add
pop
ss
out
imul
outsl
rorl
jecxz
dec
pop
icebp
fucom
shrl
cmp
movsb
lahf
inc
add
js
sti
or
in
mov
and
lods
std
cmp
fstl
mov
and
push
lods
test
out
jmp
pop
mov
xor
jbe
mov
aas
adc
sub
out
xchg
mov
push
andl
xor
lods
push
adc
jo
test
jmp
mul
subl
sbb
js
xchg
mov
lahf
adc
addr16
xchg
shlb
pusha
sahf
and
or
fcompl
dec
sbb
lock
push
jne
lret
fwait
and
packuswb
or
mov
pusha
mov
sti
clc
sub
xor
push
js
mov
movsb
inc
push
mov
stos
pop
inc
sub
lret
cmpsb
es
and
adc
mov
mov
mov
sbb
inc
ss
xchg
xchg
int3
pop
mov
fwait
jne
jp
daa
enter
sub
cmp
cmp
xor
and
cvtdq2ps
insb
mov
loopne
nop
sbb
loopne
mov
sbb
loop
out
jnp
es
inc
adc
pop
popf
mov
jb
xor
jg
scas
dec
mov
pop
daa
push
sbb
loop
ja
fsubrs
jnp
xchg
mov
sbb
stos
inc
cld
and
imul
shll
insb
arpl
imul
xchg
pop
sbb
or
inc
xor
xlat
inc
mov
push
jp
outsb
jnp
mov
add
das
mov
loop
hlt
repz
pop
notb
out
mov
test
movsb
xlat
or
test
dec
test
push
sti
out
mov
int3
lods
jb
shrl
mov
push
pop
push
add
mov
xchg
ss
and
xchg
dec
sti
mov
fsts
and
or
jbe
xor
dec
in
or
cmp
scas
mov
and
inc
and
xchg
xor
pushf
repz
in
gs
fnstenv
fs
adc
dec
inc
inc
sbb
jmp
push
jge
gs
mov
enter
inc
pop
ret
push
bnd
jle
shrl
sub
sub
or
xor
push
lock
xchg
nop
adc
fimuls
sbb
or
mov
and
mov
lock
ja
push
mov
dec
adc
xchg
pop
nop
lret
mov
jae
cmp
scas
rol
cmc
int
push
shlb
pop
nop
push
scas
stos
xchg
mov
mov
sub
icebp
mov
pop
fisubs
push
pop
sbb
out
fbstp
das
add
or
ficoml
shll
mov
stos
scas
xchg
out
mov
cwtl
push
add
add
jg
mov
push
pop
mov
dec
and
add
mov
es
mov
cwtl
xchg
outsl
ficoml
adc
cmp
xchg
lea
inc
dec
mov
iret
lods
mov
test
push
faddl
mov
dec
mov
sub
push
pop
adc
js
addr16
and
sub
add
push
int
pop
addb
push
jns
mov
fnstcw
or
pop
xchg
jl
std
pop
call
sbb
stc
lds
jmp
adc
sub
js
mov
fstpt
fistpll
xor
adc
orl
pop
loopne
push
int
cmpl
fisubrs
adc
fisttps
imul
test
mov
xchg
jmp
dec
sub
pop
cmc
lods
fwait
subl
dec
into
int
and
loope
movsb
jnp
das
inc
sbb
push
mov
dec
mov
sbb
xchg
imul
into
aaa
mov
popf
sub
xchg
push
jb
loope
jbe
adc
in
pop
pop
adcb
jp
mov
xchg
gs
adc
xchg
popf
push
int
xor
dec
mov
es
cltd
popf
outsl
mov
lds
cmpl
pushf
ret
insb
fistpll
cmpsl
icebp
mov
xor
inc
js
fiaddl
adc
xchg
push
outsl
cmp
xchg
sub
jle
mov
lock
mov
cmpsb
sbb
inc
push
push
dec
inc
sbb
test
into
mull
cwtl
jne
in
fadd
int
xchg
mov
jns
movsl
dec
jmp
nop
and
push
mov
pop
pop
test
add
and
mov
lret
adc
sub
jno
arpl
imull
mov
sbb
xchg
arpl
push
and
ja
xchg
jmp
sbb
pushf
xchg
test
add
push
out
das
dec
sub
mov
in
scas
add
cmpsb
dec
lods
inc
mov
add
xor
jnp
rolb
imul
add
xor
sub
movsl
das
dec
sbb
sbb
iret
das
and
jns
and
cmpl
mov
mov
mov
lea
mov
ret
mov
sahf
sahf
aas
clc
inc
and
cltd
dec
pop
push
in
or
mov
or
mov
out
addr16
aas
sub
add
dec
int3
add
pushf
dec
mov
bound
testl
sbb
fisttpll
loop
das
sbb
adc
inc
mov
test
pop
cld
cmc
outsl
fwait
call
fs
jnp
mov
mov
jo
shll
fwait
mov
sub
int
pop
dec
imul
mov
jns
setb
fcoml
mov
pop
fwait
stc
push
aas
add
divl
inc
mov
fstl
and
cmc
sub
jo
or
sub
cld
xorb
and
cmp
andl
jb
les
inc
dec
movsl
adc
sub
or
clc
pop
sarl
jne
push
xor
add
mov
mov
lods
push
pop
xchg
popf
or
xchg
popf
out
cld
sub
sub
sub
test
mov
adc
aam
and
push
jnp
mov
add
lcall
test
int
es
es
adc
pop
arpl
pop
cmp
inc
lods
repnz
adc
stos
das
dec
pop
pop
repnz
push
dec
jle
addr16
js
jo
xor
and
cmc
sub
mov
pop
mov
pop
xor
loope
lea
fcoml
push
push
cmpsl
or
pop
add
jae
test
add
stc
daa
mov
fcoms
pop
push
or
stos
les
outsb
ja
ficoms
stos
outsl
in
and
or
jb
push
fstpt
and
pop
mov
sub
sahf
addr16
or
sub
rolb
mov
pop
lods
lock
icebp
in
lds
mov
mov
lea
mov
inc
shlb
and
xor
xchg
icebp
stos
ljmp
test
dec
sbb
addr16
mov
xor
push
mov
sub
popf
push
mov
daa
xchg
sub
ffree
pop
insl
cltd
jae
mov
pop
add
fwait
jns
fwait
xor
push
scas
sub
shlb
daa
inc
repz
inc
jo
sbb
pop
lret
ds
bound
gs
jmp
inc
enter
sti
or
push
sbb
pop
mov
and
jle
jns
xchg
sbb
jl
dec
jne
fistpll
fs
fmul
lock
mov
jbe
popa
pop
fnsave
pop
jae
sub
mov
jp
in
mov
push
pop
push
sbb
push
cmp
push
jns
dec
sub
pop
or
jnp
xchg
arpl
push
xchg
add
adc
movsb
adc
sub
push
mov
inc
sub
jae
sbb
adc
sbb
sbb
jbe
test
shr
jo
mov
dec
sbb
mov
movsb
test
scas
das
in
push
mov
sahf
faddl
pop
aad
push
push
xchg
jp
popf
mov
and
jmp
jne
data16
jb
mov
mov
jae
addr16
cmp
iret
mov
aad
aas
test
fs
addr16
ds
sub
out
cli
jbe
jl
js,pt
push
pop
and
repz
jl
jbe,pt
push
pop
and
jbe
jl
jbe,pt
or
xlat
pop
pop
clc
push
mov
loope
xor
fdivs
jmp
daa
int3
jle
sbb
mov
add
xor
pusha
dec
push
jle
push
sub
sbb
dec
sahf
push
enter
ret
jle
sbb
inc
fcmovne
sbb
xor
mov
pop
add
inc
push
ds
xor
mov
mov
imull
xor
mov
sbb
xchg
shll
cmpsl
inc
mov
imul
arpl
stc
jp
test
cmp
test
jmp
sub
pop
insb
enter
add
imul
mov
lcall
add
sub
add
stc
jbe
jl
cmp
cmpsl
leave
movsb
and
stc
imul
cmp
leave
mov
adc
test
testl
sub
or
mov
inc
ss
mov
adc
mov
outsb
inc
xor
fistpl
mov
xor
xchg
shll
ljmp
test
imul
arpl
sub
sub
cmp
sub
ds
insb
push
and
or
pop
add
pop
inc
jmp
jne
push
in
xlat
sub
fsubrl
xor
adc
or
inc
pop
mov
pop
insl
orb
imull
push
sub
jle
fs
jp
pop
in
xor
imul
jo
clc
arpl
loop
stos
adc
scas
mov
inc
ljmp
pop
decl
inc
inc
pop
or
xchg
pop
adc
push
dec
sub
mov
dec
in
fsubr
shrl
fdivs
add
lret
sub
sub
push
scas
mov
dec
sub
xor
mov
push
push
hlt
mov
sbb
fwait
ja
push
dec
push
mov
imul
das
pop
test
xchg
push
mov
mov
inc
scas
aaa
paddsb
xor
inc
and
ficoml
rclb
icebp
push
cmp
jg
jecxz
lea
xlat
loop
leave
mov
mov
stos
mov
push
in
jbe
pop
lods
and
shlb
push
dec
push
movsb
inc
mov
insb
add
hlt
test
jg
sbb
or
mov
in
push
xor
or
imul
add
sbb
push
sti
mov
idivb
pushf
test
fwait
jb
fcoms
test
or
pop
addb
and
adc
add
dec
pop
mov
xor
jl
xchg
stos
int
or
sti
sub
xorb
mov
call
sti
add
dec
xlat
stos
xchg
push
mov
mov
sbb
and
rcrb
clc
data16
dec
or
cwtl
inc
or
xor
aaa
inc
and
scas
mov
fcmovnu
jb
jle
jp
lods
pop
sbb
add
pop
xchg
mov
imul
jg
stos
std
push
outsl
jns
adc
mov
xchg
subl
shlb
filds
loop
stos
ss
insl
adc
push
pop
aas
jns
push
push
out
imull
loopne
repz
xchg
nop
pop
add
pop
sub
aaa
cmp
aas
fwait
jb
dec
out
cmc
repnz
loop
mov
xchg
aaa
enter
dec
out
dec
or
xchg
mov
cld
pop
loope
xchg
jecxz
cmpsl
jle
inc
sub
mov
jle
pop
push
xchg
mov
add
jnp
hlt
xor
jns
adc
sub
mov
mov
icebp
mov
rcl
xchg
movsb
imul
mov
push
pop
mov
mov
hlt
insl
pop
pop
pop
add
add
inc
add
pop
mov
dec
fwait
int3
sbb
adc
out
roll
outsb
cmpsl
push
pop
rcrl
jno
jae
push
mov
xchg
sub
mov
data16
pop
scas
sbb
sti
xlat
lret
js
jns
sub
in
dec
adc
ja,pt
icebp
adc
orl
test
push
mov
push
add
mov
divl
iret
dec
xor
xchg
dec
nop
loope
movsb
mov
lea
ljmp
int3
xlat
and
shl
test
cmpl
add
mov
jge
mov
or
arpl
mov
dec
ss
pop
push
faddl
ret
and
fstpl
sbb
jmp
ds
and
jmp
out
dec
daa
ljmp
lds
cmp
inc
hlt
push
movsl
mov
int3
stos
xchg
push
cmpsb
lcall
lock
cmp
in
jl
cli
adcb
or
fisubrl
je
add
dec
mov
xlat
xor
andb
xlat
andl
repnz
or
mov
outsb
ds
jae
or
bound
or
psubw
xchg
xchg
cmp
cmpsl
ds
xchg
mov
cld
sbb
outsl
or
jno
out
jbe
mov
jp
pop
movb
mov
stos
into
movsl
mov
and
sbb
dec
jnp
sub
repnz
mov
aas
push
das
sbb
nop
fcomps
mov
dec
in
dec
mov
push
mov
mov
sbb
int3
jo
ljmp
les
mov
sti
inc
mov
fwait
hlt
lock
sub
cmp
or
imul
sub
scas
aas
mov
scas
mov
push
adc
push
sbb
sbb
bound
sarb
pop
mov
lcall
cmp
call
sub
pushf
jae
pop
sahf
or
dec
adc
loope
adc
loop
adc
adc
movsl
pop
sbb
cmpsl
inc
sbb
sbb
into
in
add
xchg
add
rorl
cmpsb
int
mov
mov
dec
add
inc
pop
sbb
mulb
mov
mov
cmp
xchg
add
popf
jae
sbb
hlt
mov
cld
and
std
testb
sbb
xor
sahf
cmpb
pop
sub
adc
jnp
jg
push
or
ja
xorb
and
mov
push
ret
mov
jnp
outsb
xchg
lahf
enter
je
cmp
out
fnstsw
pop
jg
jb
sti
mov
stos
setae
or
addb
jg
rclb
sahf
mov
add
fldt
sbb
scas
pop
push
xchg
popa
loop
inc
cld
xchg
xchg
hlt
out
sbb
cwtl
nop
xlat
or
arpl
jp
in
rcrb
inc
jno
dec
mov
leave
jge
and
pop
repz
jge
rorb
xchg
jb
cli
sbb
mov
popa
pop
sbb
cmp
test
nop
xchg
shll
mov
ja
bound
sbb
int3
in
pop
xor
test
mov
enter
sbb
add
mov
dec
and
lcall
adc
inc
sub
xchg
nop
mov
and
sbb
jno
mov
ds
loopne
push
and
mov
lcall
dec
mov
jge
int3
test
dec
aad
pop
pop
pop
add
cltd
jmp
mov
xlat
test
icebp
push
push
dec
cmp
inc
and
lahf
enter
rorl
xchg
mov
rol
dec
jecxz
xor
in
sarb
cli
aaa
out
mov
shrl
sti
sbb
xchg
cmc
mov
dec
add
lods
xchg
xchg
nop
repnz
pop
js
pop
dec
inc
add
ss
mov
lcall
test
mov
and
repz
ljmp
mov
test
jno
xor
mov
mov
inc
xor
jp
dec
cmp
mov
add
jmp
test
inc
mov
lret
xchg
add
call
and
mov
xchg
lea
lods
adc
xor
mov
jne
add
push
test
or
jl
aas
fadds
iret
nop
in
mov
mov
test
jecxz
sti
jle
in
pop
push
lods
addl
jge
es
push
xchg
rcll
cs
push
xor
dec
xchg
dec
xchg
adc
push
xor
xor
lds
push
push
push
clc
or
cwtl
aad
adc
push
sbb
mov
lods
mov
xor
arpl
pop
lea
jbe
clc
dec
xchg
adc
sub
jg
daa
sub
jge
cwtl
test
xlat
mov
pop
inc
scas
jl
aas
cld
adc
lods
ljmp
addr16
inc
sub
das
mov
aas
hlt
push
lret
cmc
xchg
push
sbb
mov
lret
scas
and
sbb
repz
scas
scas
push
data16
inc
mov
popf
xchg
ret
mov
and
add
sbb
dec
dec
test
int3
xor
dec
pop
jp
test
push
fsubrs
test
lea
sbb
hlt
and
pushfw
inc
ljmp
sub
cmpsb
das
mov
mov
mov
lds
sbb
cmp
dec
clc
mov
or
push
idiv
xchg
outsl
xor
mov
xchg
stos
lock
adc
sbb
jmp
jo
ret
rcrb
popf
in
mov
push
sbb
in
sub
jns
pusha
xchg
pop
in
lret
xchg
sbb
stos
cmpsl
rcr
andl
xor
and
cmp
ja
sbb
mov
push
xchg
xor
mov
cmp
out
add
rcrl
jge
pop
fwait
inc
loope
push
roll
xor
pop
xchg
and
dec
add
or
mov
ljmp
push
xlat
fsubs
movsb
mov
mov
fwait
add
jb
add
push
inc
lcall
mov
push
or
push
adc
aam
add
test
inc
lret
imul
jge
js
clc
add
dec
mov
jmp
popf
sarl
dec
dec
repnz
jb
push
sbb
das
or
sub
fisttpl
arpl
repz
and
repnz
cmp
jae
xchg
and
cmpsb
mov
aam
push
fnstsw
rclb
jp
adc
adcl
imul
xor
in
or
enter
add
pop
icebp
popf
push
add
xchg
test
pop
dec
cmp
mov
cmpsb
xor
icebp
cmpsl
lock
dec
lret
rcr
cmp
cmp
shrd
cmp
xchg
dec
sub
pushf
mov
mov
mov
adc
add
sub
in
lds
jmp
adc
dec
movsb
push
dec
mov
in
ja
inc
nop
cmp
pusha
leave
and
call
xor
cmp
cli
imull
push
adc
sbb
and
cld
jle
cmc
cwtl
mov
inc
int3
xor
into
xchg
fstpl
movsl
jecxz
movsl
ds
inc
outsb
dec
sub
inc
xor
insl
or
out
inc
daa
decb
imul
ud2
cmpsb
dec
or
jle
in
add
sbb
jg
xchg
hlt
pop
insb
xor
inc
cmp
push
in
mov
jno
jg
adc
or
jnp
mov
cli
daa
std
push
xlat
push
xchg
prefetch
push
dec
cs
pop
or
dec
insl
into
popf
pusha
imul
add
and
xor
inc
in
adc
cmp
jo
aaa
cmp
jmp
jmp
data16
lcall
mov
jns
mov
shll
arpl
adcl
pop
and
jno
pop
adc
iret
stc
loopne
es
or
cmp
push
into
pop
jle
int
sub
insb
stc
prefetch
shl
jb
jae
movb
maxps
add
cwtl
loop
sbb
mov
pop
inc
xchg
sub
fisttpll
sub
lds
adc
stos
lock
lods
nop
das
pop
sbb
scas
xlat
mov
mov
ret
push
cwtl
xor
inc
jns
push
inc
mov
dec
sub
in
clc
sbb
pushf
add
pop
daa
sbb
jp
movsl
push
inc
push
push
xor
jae
sar
or
in
imul
mov
test
sub
out
mov
mov
call
cwtl
lahf
cli
jmp
sub
jnp
jo
sub
jge
fistl
mov
xor
sbbl
mov
xor
lods
sbb
cltd
cmc
cwtl
inc
sbb
aad
mov
addr16
fsub
roll
adcb
pushf
xchg
and
jle
mov
cmp
sub
or
mov
push
pop
out
inc
pushf
dec
addr16
xchg
xchg
pop
sub
call
xchg
or
pop
inc
jecxz
cmp
cmpb
mov
js
pop
ret
push
mov
fisubrl
cmp
cmp
inc
rcrb
sub
and
sub
clc
nop
pushf
mov
jae
push
int3
xchg
outsb
call
mov
notl
or
movsb
sbb
mov
bswap
ds
in
add
in
inc
test
aas
das
push
les
add
sub
aaa
pop
inc
mov
andb
push
out
fnstcw
les
fisubs
lock
jmp
loope
fsubrs
lds
dec
push
imul
push
stc
jl
sub
jbe
sub
add
or
stos
mov
push
pop
mov
mov
loopne
mov
jg
inc
inc
xchg
fldt
mov
inc
lret
mov
xchg
and
or
in
fwait
mov
pop
test
cmpsb
int3
pop
sub
test
pushf
pusha
pop
loopne
addb
or
sbb
loop
cmp
pop
stos
repnz
xor
imul
int3
aad
pop
push
bound
dec
mov
push
mov
fisubrl
rolb
insb
pop
imulb
push
dec
adc
lcall
aaa
ds
jnp
jnp
daa
adc
dec
in
cli
lcall
imul
pop
dec
xor
test
mov
inc
push
push
mov
shll
cmpsb
cld
sbb
xchg
jl
jb
sub
pop
dec
sub
push
clc
jge
pop
pop
sub
mov
lods
push
dec
xchg
rcll
fwait
mov
roll
out
pop
cmp
sbb
xorb
adc
jmp
stos
lods
jg
jb
imul
adc
lahf
das
push
inc
repz
or
xchg
scas
outsb
mov
shrb
sbb
and
cmp
push
dec
jmp
inc
push
mov
or
ror
pop
dec
mov
stos
stc
xchg
jnp
cltd
imul
sub
dec
insb
push
push
scas
xlat
mov
ds
jl
jno
pushf
mov
popf
push
fsubrl
mov
mov
mov
cmp
jae
mov
mov
cs
adc
mov
sub
adc
lcall
lock
shrl
mov
push
mov
pop
mov
or
pop
dec
mov
ljmp
dec
popf
inc
sbb
mov
lret
mov
push
jmp
jle
fdivs
stos
rcrb
flds
lret
cltd
pop
test
add
jmp
clc
xchg
in
inc
inc
hlt
sahf
inc
arpl
imul
add
sbb
rorl
jg
sbb
comiss
jbe
adc
insl
stos
xor
inc
stos
mov
lods
push
inc
jle
or
mov
push
lods
test
sub
cwtl
jmp
adc
hlt
jmp
insb
stos
mov
add
and
ss
shlb
loope
call
mov
push
mov
sub
push
xchg
insl
lock
sub
pop
xor
decl
sbb
mov
cmc
scas
mov
mov
ss
sub
je
push
lret
cltd
cmp
jg
xchg
mov
xchg
bound
push
push
js
dec
mov
cmpsl
orl
jp
and
fcoms
xor
jo
cmpsl
dec
mov
mov
adc
or
arpl
movsl
js
inc
sbb
pop
das
les
pop
loopne
lds
rolb
sbb
test
mov
pusha
dec
arpl
xchg
xchg
jb
test
pushf
xchg
add
jl
test
pushf
mov
leave
pop
cmp
mov
mov
pop
push
inc
adc
xor
or
jmp
push
fwait
dec
outsb
imul
sub
cmp
cltd
out
and
out
hlt
mov
xor
in
jg
movsl
shll
xchg
pop
call
pop
leave
push
test
xchg
sbb
stos
add
shr
xchg
hlt
cmc
xor
mov
cmp
jo
or
xlat
adc
push
cmpsb
lret
cmpsl
xchg
sbb
pop
mov
sbb
rcrl
das
sub
adc
shlb
and
jns
lea
leave
pop
or
es
bound
hlt
mov
jne
jl
jns
test
push
lret
or
xchg
cmp
or
cmp
test
ret
push
insb
jle
call
call
push
or
pop
loopne
in
inc
pop
pop
jb
push
or
add
repnz
or
dec
subb
jae
xor
jnp
ss
jnp
cmp
jnp
clc
std
pop
ja
lret
cmp
fsubrs
sbb
push
data16
jnp
mov
lods
fsubrs
in
daa
jl
mov
xchg
lahf
andl
cwtl
es
inc
push
mov
leave
dec
jnp
adc
and
jle
xchg
jb
sub
popf
sub
mov
inc
dec
jnp
cvtdq2ps
cwtl
adc
mov
xor
outsb
ficompl
sbb
cmc
push
cmp
sub
sahf
jge
lock
nop
push
and
in
mov
push
sbb
insl
or
or
lods
test
push
js
lds
cmp
into
mov
push
mov
xor
or
cmp
stc
xchg
mov
push
xchg
rclb
stos
dec
loop
pop
stos
xor
popf
cmpsb
sbb
add
lds
dec
xchg
lcall
out
popf
jns
repz
addb
xchg
push
fidivrl
leave
cmc
test
es
cmp
sahf
xchg
adc
scas
and
outsl
cmp
sbb
push
pop
or
dec
inc
inc
xchg
scas
push
add
pop
jge
cmc
mov
pop
sbb
jge
cmpsl
out
fwait
push
cli
test
mull
in
mov
aas
inc
adc
adc
mov
pop
nop
repz
and
enter
mov
cmp
jg
sarl
xor
push
jl
push
push
sub
cld
in
outsl
sub
or
add
leave
sar
mov
dec
sbb
mov
xchg
pop
cmp
push
fbld
out
add
in
das
cmpsl
xlat
xchg
les
iret
inc
out
sub
jo
addr16
or
push
jl
test
push
ficoms
pop
mov
pop
mov
outsb
and
insb
push
fisubrl
mov
rcrb
adcl
dec
jg
outsl
lods
push
xor
jp
js
js
inc
mov
jo
lret
sub
push
mov
sbb
mov
jge
movsl
and
and
bound
jbe
xchg
test
or
mov
testb
fcomps
mov
adc
jp
add
repnz
bound
popa
cmp
and
fs
bound
rep
mov
xor
pop
pop
pminsw
int
jno
mov
adc
insl
sub
cmp
aad
fs
lcall
xchg
rclb
or
inc
xchg
xchg
push
and
add
mov
and
popa
push
scas
stos
or
pop
repnz
add
imul
fisubrs
xorl
xchg
or
lock
pop
jae
xor
icebp
xchg
loopne
mov
or
ss
sub
pop
pop
fwait
loopne
ds
inc
inc
jb
xchg
ror
insb
lock
dec
pusha
xchg
or
cmp
addb
scas
cmp
jp
test
and
pop
or
mov
mov
mov
mov
sbbb
sub
push
jge
push
jg
push
pop
das
ja
ret
mov
les
stos
xchg
xor
scas
xchg
out
cmc
adc
inc
je
add
mov
sbb
jb
cli
xor
xlat
xchg
mov
outsb
out
push
fiadds
push
and
sbb
jmp
dec
arpl
mov
push
inc
push
flds
cs
pop
dec
push
xor
lods
sahf
and
outsb
clc
popa
mov
xor
aas
xor
sub
test
pop
sub
mov
in
pop
fcoml
pop
or
adc
xlat
lcall
pusha
insl
clc
popf
int3
aas
aaa
sbb
push
xchg
mov
xchg
inc
jb
pop
xor
push
in
sbb
dec
test
movb
sbb
xchg
outsl
shrl
and
xchg
mov
mov
adc
dec
int3
cmc
bnd
fwait
lea
in
xchg
mov
lock
dec
and
mov
push
sbb
jns
mov
mov
ficompl
add
sub
xor
push
das
xchg
jecxz
es
jo
adc
int3
pop
xchg
lds
sbb
dec
out
add
jle
sbb
xchg
aaa
jb
xor
sbb
lea
jg
js
and
fs
rcrl
pop
pop
cmp
js
rcrl
mov
fsubrl
mov
pushf
mov
push
cmpsb
cmc
lret
sbb
push
xor
xchg
mov
xchg
cs
nop
negl
adc
xchg
shlb
dec
stos
jae
pop
hlt
mov
pop
ret
cli
pop
push
jnp
xchg
psubsb
inc
std
jnp
outsb
outsl
roll
pop
mov
sbb
jne
ja
iret
add
leave
jp
test
in
rcll
xchg
outsb
out
jecxz
cltd
cmc
push
jl
pop
mov
or
sbb
out
mov
sub
pop
sti
pop
ret
arpl
es
inc
inc
cwtl
std
fstps
mov
sub
inc
sbb
notb
dec
xchg
xchg
xor
arpl
mov
inc
cltd
stos
sub
pop
xor
jae
cltd
xor
inc
mov
sbb
ljmp
adc
mov
pop
ds
sbb
xchg
ja
dec
lock
sahf
dec
lret
xchg
pop
sti
mov
mov
neg
pusha
sarb
jb
jae
sub
sub
xor
pop
mov
loope
inc
mov
sub
push
push
cmp
leave
dec
loop
imul
das
push
es
cld
push
mov
pop
cmp
cmp
pop
pusha
xlat
pop
bound
ret
xchg
mov
out
lea
jb
dec
inc
out
popf
jo
stos
add
or
cmp
mov
imul
sbb
xchg
inc
xchg
sub
pusha
cmpsl
mov
cmpsl
cmp
or
mov
sbb
mov
stos
mov
mov
add
or
nop
dec
jl
loopne
cmpsb
fbld
xor
popa
mov
push
pop
int
mov
test
xor
fucomip
sbb
orl
mov
das
stc
lds
jl
xor
loopne
mov
adc
or
push
jmp
pop
jne
lods
cld
stos
jb
loopne
inc
pop
jmp
dec
pop
jne
test
ja
imul
in
pop
cmp
jp
xor
adc
insb
cmc
adc
aas
push
adc
mov
popa
jmp
mov
push
sahf
negb
mov
mov
lods
repz
pop
dec
add
pusha
les
xor
sub
dec
inc
sbb
test
xchg
int3
mov
cltd
test
and
test
push
xlat
popa
sub
divl
push
roll
lock
fwait
xlat
push
xor
js
cwtl
fdiv
fucomp
xor
mov
push
rol
lcall
daa
or
imul
add
jo
ds
cmp
shr
fwait
scas
adcb
jp
out
sub
lea
sbb
mov
sbb
mov
jg
subl
dec
inc
pop
stc
mov
out
imul
test
mov
sbb
out
nop
inc
pushaw
lcall
mov
lret
mov
scas
jnp
pop
cmp
rclb
mov
sbb
mov
cmp
sti
ret
xchg
mov
inc
mov
fisubl
in
jno
xor
xlat
mov
jge
cmp
outsb
lret
xchg
sub
sub
enter
inc
addr16
arpl
sbb
xchg
dec
cli
mov
aas
out
adcb
add
or
ret
mov
ljmp
inc
sub
stos
mov
xor
push
js
jecxz
gs
addr16
outsb
xor
cmovae
outsb
movsl
test
jecxz
leave
mov
test
xorl
xor
sbb
push
sbb
mov
fsubl
in
je
cltd
jo
sbb
imul
sbb
inc
cmpsb
popa
pop
test
jg
or
or
and
das
sub
jo
xchg
and
test
fisttps
xlat
pusha
imul
movsb
aaa
xchg
stos
cwtl
mov
push
in
rclb
insl
sub
inc
pop
lea
clc
out
pusha
pop
push
or
std
adc
outsb
add
shlb
push
ds
jbe
int3
pop
add
mov
sub
imul
fidivs
mov
jmp
sbb
mov
push
cmp
arpl
pop
xor
das
xchg
cld
push
ds
jmp
je
or
xchg
mov
sbb
push
and
call
mov
outsl
jae
jp
inc
icebp
pop
cmpsl
xchg
rcrl
mov
jae
mov
les
add
dec
push
mov
lea
cmp
push
or
pop
cltd
out
enter
jl
push
aas
das
push
xorl
mov
push
push
lds
cmp
lods
push
push
mov
arpl
pusha
inc
imul
xchg
aam
inc
push
or
jecxz
test
adc
sub
push
push
out
nop
clc
or
in
mov
dec
add
int
xor
xchg
flds
int3
int3
xchg
cmp
jg
xor
nop
scas
scas
xor
lret
pop
pop
jle
inc
outsb
bound
xor
xchg
dec
ret
aaa
xor
inc
andl
pop
int
push
rol
stos
dec
pop
inc
call
sub
sub
daa
dec
daa
lahf
bound
and
test
popf
xrelease
jge
pop
mov
jl
aaa
rolb
int3
data16
test
xchg
add
rcrl
dec
jle
pop
push
testb
sub
inc
inc
fwait
add
lret
dec
xchg
xchg
repnz
loop
jp
orb
jg
push
xchg
mov
mov
out
or
push
dec
sbb
lcall
stos
jg
push
dec
mov
xchg
dec
xor
push
sbb
push
push
mov
cld
aaa
xor
dec
dec
mov
pop
cwtl
lret
jge
icebp
dec
and
push
mov
fadds
popa
repz
pop
js
shll
sbbb
adc
js
pop
in
lock
jg
mov
cmp
out
enter
xchg
jno
in
rorl
mov
adc
mov
inc
xchg
sbb
mov
dec
outsb
cmpsb
mov
cmpb
push
aad
lods
addr16
mov
pop
xor
mov
xchg
stos
cwtl
rolb
sub
subb
cwtl
jb
pusha
push
dec
lret
leave
rcrb
mov
xchg
inc
sbb
in
jp
int3
jmp
je
and
mov
dec
loopne
xchg
push
into
scas
bound
cmp
mov
lea
add
cmp
ret
adc
faddl
jp
test
mov
cmovbe
xor
arpl
fadds
mov
dec
inc
xor
mov
test
test
pop
sahf
push
rcr
mov
out
ret
xorb
add
mov
ljmp
and
in
subb
pop
scas
cli
fxam
inc
mov
ret
les
ret
mov
sti
ja
jl
pavgw
adc
jge
mov
cmp
mov
dec
pop
cmpsb
pop
lcall
rorb
mov
ja
idivl
dec
ficoml
lahf
fwait
je
pop
adc
mov
jge
inc
sub
daa
jo
jmp
pop
repz
xchg
push
pop
mov
push
pusha
in
scas
enter
dec
iret
les
jne
xchg
fisubs
shl
es
and
cmc
mov
mov
and
add
rorl
push
les
fwait
lret
gs
or
lea
inc
pop
adc
lahf
addb
lahf
outsl
loop
outsb
push
dec
cltd
subb
jle
push
adc
pop
push
stc
cmp
inc
push
add
repz
adc
fsts
sub
or
dec
cld
ret
test
pusha
les
dec
dec
sbb
js
sub
dec
push
jns
pop
and
xchg
fucomp
sarb
fwait
pop
pop
ja
push
push
push
push
mov
sub
push
and
cmp
or
push
cltd
aaa
cmp
scas
pop
fstps
xor
fbld
out
sbb
cs
xor
cmp
pusha
test
ret
lret
inc
mov
out
pop
out
xchg
mov
lahf
inc
pop
mov
inc
stos
jno
sbb
sub
ret
mov
sbb
add
adc
fsubs
enter
adc
and
add
jle
ret
mov
es
mov
push
inc
sub
jecxz
fiaddl
test
stos
inc
inc
or
xchg
lock
mov
incl
stos
nop
addr16
aam
pop
xchg
mov
sub
fwait
push
clc
adc
clc
add
dec
nop
dec
stc
aas
or
scas
lods
stos
jbe
scas
jae
inc
lret
xor
scas
stc
mov
or
xchg
lret
or
and
sbb
lret
ds
test
loop
mov
push
es
shll
imul
sbb
jbe
dec
jae
jnp
inc
sbb
dec
jge
mov
inc
test
movsl
imulb
std
xchg
imul
adc
lahf
push
inc
hlt
inc
push
pop
sbb
jns
pop
rol
dec
add
sbb
and
or
mov
mov
inc
in
dec
stos
ljmp
pop
and
pop
ljmp
clc
push
shlb
ret
and
enter
cwtl
and
jns
sub
pop
lods
sbb
insb
ljmp
ja
imul
sahf
test
scas
inc
mov
mov
imul
aaa
lcall
sbb
scas
dec
das
xor
jle
mov
or
jne
xor
push
xchg
sbb
pop
arpl
shr
movsb
xor
das
jl
pop
sahf
push
sub
mov
cmp
sar
cmp
jno
pushl
xor
cs
jp
push
aad
inc
xchg
aaa
lea
sbb
das
dec
je
pop
and
adc
push
outsl
push
jge
sahf
lods
je
cld
or
fs
jp
test
sbb
sar
rol
xor
jg
dec
sbb
int
dec
hlt
fsts
ljmp
push
in
icebp
cwtl
dec
xor
jns
roll
dec
les
in
mov
jno
cmp
pop
shr
add
and
aas
mov
in
pop
cmp
ja
pop
out
popa
outsl
push
jns
adc
mov
ds
fsubs
ret
inc
insl
mov
push
addr16
pop
das
xor
repnz
dec
mov
lods
hlt
inc
dec
add
mov
into
ret
pop
pop
pop
xchg
outsl
xchg
adc
lods
xchg
xchg
pop
xor
or
stos
int
or
andl
faddl
xchg
lds
dec
cltd
mov
cmp
and
loope
daa
dec
cs
xchg
xchg
popf
push
test
movsb
mov
cltd
and
movsl
sbb
out
inc
mov
int3
xchg
enter
push
fmuls
addl
outsl
pop
jp
sbb
stc
daa
push
test
icebp
dec
mov
cld
jne
mov
cmp
jns
mov
pop
mov
jo
sarb
jne
inc
fmuls
fwait
es
std
inc
or
cmp
inc
jbe
or
mov
outsl
cwtl
push
push
pop
pop
fs
and
dec
and
and
aad
jecxz
mov
mov
insb
mov
daa
ljmp
cmpsb
cmp
mov
lea
or
cs
sub
push
jne
aas
mov
mov
push
push
js
push
adcl
sub
fildll
roll
outsl
insb
push
xchg
loop
push
subb
dec
lcall
std
lahf
movsl
test
xchg
xchg
ret
jnp
push
ljmp
test
ror
xchg
scas
lds
push
inc
icebp
cmpsl
mov
jne
and
xchg
xchg
push
and
jl
iret
pop
sahf
das
sbb
push
outsl
nop
inc
aam
icebp
les
jb
outsl
jns
mov
jl
add
rorb
pop
loope
push
add
cwtl
fdivrs
pop
push
adc
div
sbb
sub
dec
pop
add
dec
push
loope
mov
scas
jecxz
pop
mov
jg
test
mov
jb
inc
and
fsubrl
arpl
add
mov
mov
nop
add
sub
insl
jl
pop
hlt
mov
outsl
add
inc
in
or
es
pusha
std
int3
ds
push
outsl
popl
push
mov
cmp
scas
mov
sub
mov
idivb
mov
inc
xor
roll
jg
lea
pop
orl
pushf
jmp
xchg
loopne
sahf
pop
cli
mov
or
jne
sub
int3
scas
stos
lods
add
shrb
xor
stos
das
imul
mov
pop
ret
in
les
outsl
mov
push
adc
stc
stos
hlt
jecxz
jle
push
nop
rcr
int3
adc
js
jne
jb
jp
loop
cmp
sub
dec
scas
movsl
outsl
inc
jle
fistpll
adc
jmp
sti
adc
lea
sub
adc
dec
leave
nop
cmp
pop
push
fisubrl
fldenv
hlt
xchg
out
mov
pop
lret
cmp
push
xchg
outsb
and
jl
sbb
orl
push
and
fnstenv
sti
xchg
adc
xchg
mov
cmpsl
in
popa
inc
mov
leave
and
ljmp
push
test
adc
scas
adc
push
inc
and
fsubp
in
loop
pop
sbb
cltd
xchg
xchg
xor
clc
push
es
mov
and
jl
es
push
lcall
push
rep
jge
push
arpl
stos
and
jbe
dec
inc
call
push
imul
pop
inc
out
insl
pop
jmp
clc
std
xchg
lea
jnp
outsl
into
mov
stc
cmp
pop
insb
je
jo
fsubs
pushf
adc
shlb
shl
mov
mov
adc
je
sub
mov
pop
imul
orb
mov
lds
aad
testb
jg
dec
jmp
mov
lods
call
pushl
lret
icebp
fcmovb
xor
pop
lret
mov
inc
dec
ret
pop
dec
fmull
mov
nop
shll
jle
int3
aad
pop
mov
pop
push
dec
xchg
lret
cmpsb
dec
or
add
xchg
or
scas
jmp
loopne
or
cmp
clc
xor
shlb
sbb
lea
and
push
push
pop
cmp
gs
pop
xchg
add
arpl
dec
outsl
sbb
out
repnz
in
and
mov
inc
hlt
add
or
add
sbb
xor
mov
xor
cmp
xchg
mov
out
clc
dec
in
push
pop
mov
xor
jb
or
mov
test
dec
ss
cltd
ret
and
or
insb
scas
cmp
jbe
mov
push
stos
xor
stos
lahf
sbb
jmp
sbb
mov
nop
or
mov
mov
out
mov
or
and
mov
imul
les
lret
cmp
pushf
pop
das
sbb
pop
jmp
rclb
daa
mov
sahf
decb
shrb
push
push
test
fmull
and
and
je
aaa
mov
mov
insb
or
enter
add
cmp
cmp
fmul
mov
xchg
scas
xchg
loope
enter
insb
lds
mov
in
push
ss
push
xlat
ja
fst
test
add
in
out
mov
out
push
dec
jp
dec
sahf
sbb
mov
inc
dec
mov
add
loop
lock
nop
sbb
push
shrl
ss
sbbl
sbb
push
andb
add
pop
adc
dec
mov
rcrl
sub
in
sti
dec
inc
das
xchg
xor
jge
sub
inc
pop
sub
rcrl
jp
mov
add
lahf
in
xchg
es
jns
ljmp
pushf
xor
fdivrl
scas
xchg
lock
xchg
je
test
mov
push
add
pop
add
push
add
shlb
hlt
movsb
push
cs
cld
pop
in
mov
xor
cli
add
cmp
xchg
inc
outsb
push
xlat
stc
inc
test
cwtl
pop
faddl
stos
test
lock
ret
les
sub
rcrl
aas
das
in
push
in
adc
inc
jl
adc
xchg
mov
lods
rclb
test
fwait
cmpl
jmp
les
mov
add
jno
insb
mov
sub
pusha
out
push
dec
ds
mov
cwtl
cwtl
and
insl
xor
stos
arpl
sub
and
pop
lcall
inc
inc
ljmp
ret
aas
clc
adc
hlt
aad
pop
ss
and
push
cmpsb
push
fwait
out
insb
add
mov
adc
ret
mov
aaa
jae
mov
outsl
out
test
stos
push
stos
nop
dec
sbb
int
fwait
outsl
aas
aam
repz
imul
pop
loopne
inc
and
jbe
add
dec
pop
sbb
push
out
lcall
aad
pop
cld
inc
ret
orb
jo
insl
sbb
in
xor
cmp
push
push
sub
jb
sahf
popa
dec
mov
dec
add
popa
fs
enter
fldl
sbb
sub
and
rclb
popf
xor
mov
dec
mov
mov
into
fsubs
imul
push
data16
jmp
jle
jl
cld
lahf
mov
mov
icebp
out
je
shl
data16
xor
inc
orb
jo
cwtl
jae
cmp
hlt
int3
fstp
xchg
or
pop
mov
lcall
out
sbb
enter
add
push
in
lgdtl
addr16
repz
std
rol
adc
data16
cmp
adcb
xchg
pop
gs
fcoms
adc
xchg
sbb
and
xchg
xchg
outsl
rorl
inc
into
sub
icebp
inc
test
push
adc
cmc
or
sbb
std
mov
adc
pushf
xor
lea
dec
xchg
filds
add
repz
loope
es
sbb
es
fst
inc
push
cmp
push
jmp
std
ds
aas
jae
fildl
ljmp
mov
aad
sarb
inc
outsb
in
push
adc
jne
in
or
inc
jbe
insl
test
jl
adc
inc
mov
gs
subb
mov
cmp
pop
pop
pop
pop
xchg
pop
pop
mov
mov
mov
inc
in
in
mov
inc
decb
inc
push
clc
pop
and
dec
jno
inc
lea
nop
data16
mov
adc
lds
cmp
pop
cmp
xchg
xlat
mov
movl
in
add
xor
clc
cmpsl
les
mov
cmp
push
mov
mov
test
rclb
aas
imul
out
sub
rolb
xlat
test
mov
jb
aas
test
clc
loop
adc
nop
mov
xor
xchg
pop
inc
add
adc
push
into
adc
mov
in
fstl
fsts
dec
ret
dec
xchg
xor
enter
nop
cli
into
out
xor
jne
sbb
scas
cmpsb
pop
adc
mov
iret
xor
cmp
lea
cs
dec
adc
lret
dec
sub
std
lahf
pop
dec
dec
cltd
es
jmp
int
ja
loope
hlt
jg
popf
push
jns
lcall
xorb
scas
popf
jae
or
mov
pusha
insl
orl
xchg
push
fs
mov
mov
inc
jmp
sub
test
pop
xchg
orb
mov
or
je
jnp
and
dec
leave
sub
mov
mov
push
in
ror
rsqrtps
and
sub
das
fdivrs
jo
inc
push
fisubrs
adc
sahf
or
mov
jmp
leave
das
or
mov
inc
dec
fdivrl
sarb
push
sti
outsl
aad
test
cmp
repz
int3
cmc
lock
sub
adc
jnp
mov
test
lock
jecxz
paddw
test
imul
push
push
sub
pop
ret
scas
fcmovne
js
jbe
push
in
ffree
adc
leave
idivb
cld
xchg
les
mov
mov
mov
gs
xchg
fwait
or
je
mov
adc
jg
sti
sbb
xchg
cltd
lods
fsubrl
test
xchg
iret
ss
mov
movsl
or
imulb
inc
inc
pop
dec
push
aaa
mov
das
cmp
aam
sub
loop
dec
and
push
push
or
in
pop
add
stos
jns
xor
popf
adc
in
inc
dec
xor
sbb
push
and
or
dec
jmp
ret
out
cmp
js
pop
add
mov
push
cmp
fcmovnb
test
sub
xchg
cli
jno
jmp
orb
orb
mov
xchg
adc
lret
inc
loop
or
in
aaa
test
push
lahf
lock
hlt
test
and
mov
dec
adc
push
xor
mov
movsb
xor
xchg
aaa
pop
outsl
mov
sbb
fwait
xchg
push
push
cmp
jnp
in
ja
xor
xchg
dec
bound
xchg
xlat
sbb
jle
inc
mov
cmp
cmp
xor
shr
jmp
push
in
xchg
imul
mov
nop
repz
cld
push
push
pushf
sub
pop
mov
out
leave
andl
inc
sti
and
jmp
and
arpl
sahf
ret
pop
repz
roll
cmpsl
inc
icebp
push
mov
jge
repnz
and
cli
aam
cmp
std
sbb
cmpsb
pop
dec
and
out
jp
enter
stos
xor
insl
or
adc
xchg
push
fisubl
add
mov
xchg
lds
mov
aas
lahf
call
cmp
push
insb
nop
daa
cmp
mov
lock
push
cmp
add
fdivr
imul
and
jnp
jne
pop
iret
imul
dec
adc
xchg
xchg
fdivs
sub
adc
jb
xchg
imul
xor
icebp
or
or
adc
xor
xchg
sub
aas
jne
in
push
inc
add
or
aad
add
rol
lcall
movsl
and
add
loop
cmp
and
mov
loop
loope
adc
jge
gs
sbb
scas
xchg
push
rcrb
xchg
xchg
inc
cld
addl
pop
jmp
shlb
nopl
jns
fldt
add
std
inc
dec
push
lods
lcall
lea
test
lcall
push
leave
lret
or
in
pop
aam
pop
outsb
mov
xchg
xlat
push
mov
xchg
daa
pushf
sahf
or
into
jns
loop
xor
pop
xchg
dec
push
xchg
pop
and
cmc
fwait
xlat
jmp
adc
xchg
add
push
imul
aam
imul
pop
xor
out
testl
fadds
mov
lret
test
mov
fisttpl
in
jns
js
stos
ljmp
jmp
sub
xchg
fs
mov
mov
jno
push
sub
flds
mov
sub
mov
fdivs
shrb
movsb
xchg
jp,pt
out
outsb
jns
andb
ret
pop
fisubs
fistpll
dec
inc
bound
cmpb
sub
divl
push
mov
lods
inc
mov
popa
inc
pop
jnp
faddl
into
int3
icebp
lret
mov
mov
scas
mov
push
sub
add
stc
enter
jge
rcll
push
test
mov
rolb
mov
inc
jge
inc
inc
xchg
mov
jge
hlt
jb
out
push
and
xor
cmpsb
sub
mov
cld
mov
mov
test
out
inc
mov
pushfw
aas
jae
mov
dec
testb
sub
mov
lret
sbb
cld
mov
ret
test
sub
add
pop
leave
push
das
sub
sub
test
fistpll
fstp
xor
xlat
push
repz
cmp
jge
clc
adc
in
inc
jno
pushf
push
mov
popa
jno
xor
sub
rorl
pmaxub
stos
jp
jmp
daa
xchg
jae
xchg
pop
dec
rcr
pop
xor
clc
add
mov
aas
dec
jns
push
add
daa
ds
lds
testl
stc
cmpsl
and
jo
jle
rcrl
insl
sub
test
leave
mov
inc
js
mov
imul
push
sub
leave
sub
stos
shll
lret
outsl
jbe
jl
cmp
add
pusha
push
dec
test
cli
push
adc
inc
sbb
popa
mov
cmc
and
std
sbb
push
cmp
mov
icebp
mov
inc
push
xchg
pop
cmp
sub
insl
jge
movsl
in
add
cmp
js
inc
xchg
pop
pop
or
sub
push
psrad
adc
sub
mov
cs
cmp
stos
and
mov
cs
adc
xchg
sbb
roll
insb
jbe
jg
cltd
adc
mov
and
xchg
sbb
nop
adcl
xor
lahf
adc
mov
imul
xchg
inc
push
inc
ret
icebp
jo
shll
jne
mov
fcoms
cmp
stos
push
xor
and
dec
jbe
mov
jg
inc
xchg
jge
insb
push
cmp
lret
out
sbb
xchg
inc
out
lret
inc
pushw
fcom
add
jnp
jg
sbb
out
incl
mov
sub
cmp
pop
fld
sub
push
int3
mov
rorb
js
push
ja
mov
push
adcl
xchg
inc
push
clc
pop
jnp
ja
fnstsw
or
dec
xchg
ja
loopne
jne
leave
inc
sbb
inc
cld
sub
in
sub
out
pop
lea
inc
shrl
nop
xor
cmp
mov
mov
icebp
add
pop
fldenv
fisubs
stos
inc
mov
push
push
jae
scas
es
fbld
cmp
lret
lahf
fucomi
mov
adc
lock
faddl
mov
push
jmp
pop
fdivrs
cmovno
mov
pop
fildl
stos
cmp
pop
lret
int3
xlat
mov
add
push
loopne
push
add
add
pop
mov
fstl
jl
popf
sbb
lods
jge
mov
push
sahf
pop
xchg
xor
jo
mov
pop
pop
fucomi
jge
lock
int3
add
mov
scas
push
packssdw
push
sbb
adc
mov
dec
mov
sub
popa
pop
repnz
test
adc
or
adc
jl
lret
and
fimuls
test
call
sub
adc
sbb
jle
jns
pop
xchg
scas
xchg
jp
pop
fs
mov
push
shl
ficoml
mov
jg
and
cld
and
mov
add
adcb
bound
test
mov
add
out
dec
pop
mov
test
bound
add
inc
andnps
ret
cmpl
cmp
jmp
mov
stc
ret
ljmp
push
rcrb
leave
or
addl
or
call
repz
jmp
out
in
popa
popf
pop
cs
jo
xchg
stc
jne
add
icebp
icebp
rolb
xchg
cmc
in
leave
adc
out
xchg
mov
add
addr16
jne
jl
lea
jl
test
pop
cwtl
clc
das
es
pop
push
dec
dec
stc
test
aas
faddl
add
movsb
push
cld
test
jmp
sbb
add
mov
inc
sarb
fld
bound
daa
hlt
xor
cld
add
dec
sbb
scas
push
fbld
and
rorb
mov
pop
aad
and
lret
mov
jg
popa
shlb
cmc
ljmp
cli
test
push
pop
ret
inc
dec
xchg
in
xchg
cmp
lcall
mov
je
pop
and
cmp
dec
test
mov
xor
test
sbb
xchg
enter
mov
nop
add
or
imull
sbb
inc
das
fistpll
clc
lcall
fistl
jp
push
mov
mov
shrb
cmpsl
data16
jle
cmc
subl
jle
hlt
or
dec
jmp
mov
sbb
les
fcomps
dec
mov
loope
xchg
out
and
xor
cmpsb
sahf
dec
dec
pop
sub
call
and
adc
mov
sbb
jge
sti
inc
dec
push
jne
dec
aam
push
jl
or
repnz
pusha
mov
or
and
sbb
and
push
add
xchg
test
movl
sbb
in
jnp
mov
xlat
push
pop
mov
xchg
movsb
jne
js
jo
repz
int
and
sub
test
mov
mov
int3
test
dec
jmp
cmp
rcrl
inc
add
push
loopne
xorps
lods
dec
mov
mov
stc
push
jno
stos
inc
aas
jle
data16
jo
loope
js
push
das
arpl
rcll
aad
sti
adcb
inc
jl
repz
or
and
decl
xor
sub
ror
xchg
test
int3
inc
push
cmp
cmp
pop
jo
sub
cmp
adc
cld
push
aad
decl
adcb
add
adc
aad
movsl
test
pop
or
push
jb
cld
sub
sarb
mov
in
mov
xchg
in
in
pop
dec
roll
shl
xchg
orb
das
xchg
pop
cmc
sbb
cmp
mov
add
shrl
lds
lret
pop
sub
xchg
inc
dec
push
test
pop
test
sub
loopne
cmp
int3
in
pop
sbb
pop
bound
mov
inc
sarb
mov
fisttps
stos
mov
pop
dec
jb
mov
clc
push
pop
xlat
sti
lcall
pop
cmp
in
mov
in
popf
lret
int
jns
xchg
adc
sub
ljmp
mov
clc
mov
in
popf
push
nop
ret
sub
mul
push
push
adc
ljmp
xchg
popf
sbb
and
adc
jge
call
push
fmul
inc
out
sub
scas
bound
enter
adc
mov
xchg
fmuls
insb
push
jmp
cltd
faddp
into
fidivrl
mov
jnp
or
jo
ljmp
xchg
adc
push
loope
adc
je
push
pop
inc
insb
dec
jmp
sbb
inc
test
je
jns
test
xor
mov
addr16
enter
les
ja
mov
fistps
lds
fadd
shrl
fildl
mov
dec
push
sub
push
ror
test
rol
mov
lcall
sahf
add
movsb
icebp
mov
outsb
int
add
aad
arpl
mov
jle
aad
xchg
icebp
mov
mov
mov
ficoms
dec
stc
stc
add
mov
nop
outsl
xchg
jmp
cmp
ds
das
ljmp
inc
cwtl
and
sub
adc
xor
and
mov
or
mov
shl
pop
int3
mov
adc
and
adc
or
stos
sub
add
popa
pop
add
xor
rcll
fldenv
cmp
xor
in
xchg
cmc
xchg
pop
sub
fdiv
add
out
loope
jae
adc
movsl
int3
fdivs
imul
mov
lahf
imul
in
jnp
add
sub
xor
xchg
aaa
lds
xor
jo
mov
jp
outsl
fcmove
push
jl
push
xchg
jecxz
hlt
pop
and
ss
dec
into
insb
decl
and
lret
inc
call
jbe
push
pop
and
in
inc
es
inc
and
pop
jge
mov
adc
sub
mov
lock
mov
and
divb
sub
dec
xor
sbb
fstpl
xor
ljmp
fnsave
dec
push
test
nop
lahf
ja
adcb
dec
insb
and
push
sti
cmp
add
push
push
lret
stos
dec
and
mov
pop
xchg
addb
jo
push
jge
stos
call
aas
lret
push
xchg
xor
fsubrs
inc
jb
popa
call
shl
shlb
js
jle
bound
xchg
pop
fwait
sbb
aad
add
pop
mov
xchg
push
in
push
pop
aaa
mov
clc
adc
lock
incb
das
shl
adc
dec
lods
cmpsb
dec
scas
xor
xor
stc
in
bound
and
push
pop
iret
sbb
push
lret
in
push
sbb
jl
test
push
stc
cmp
fdivs
mov
mov
push
mov
int3
int
push
in
adc
ja
xor
adc
sub
int
stos
mov
fsubrs
stos
jg
mov
push
mov
aad
das
out
mov
cmp
xor
pop
dec
xchg
xor
cmpsl
pandn
pop
cmpb
sbb
adc
testb
sbb
and
jae
inc
movsl
stc
clc
imul
mov
lret
xchg
cmp
rorl
test
test
outsl
xor
cmp
mov
testb
sub
cmp
test
sbb
pop
push
aad
and
loop
cmp
outsb
dec
pop
pop
xor
mov
and
lcall
ds
rclb
lods
jne
js
adc
stos
pop
sub
cmp
lahf
mov
addl
push
jae
xchg
cmp
sti
shl
pop
out
inc
push
call
imul
xor
and
sub
imul
pop
mov
clc
or
pusha
push
mov
xchg
dec
or
add
out
mov
push
jmp
sub
cmc
mov
dec
dec
adc
ret
xchg
lret
mov
and
das
adc
dec
movsb
adc
ss
pop
std
ja
push
outsb
xor
insb
int3
xor
es
xlat
dec
sub
sub
movsl
int
mov
lods
pop
mov
aad
mov
jp
fisubs
pop
out
movsb
jmp
jnp
pop
in
adc
pushf
fnstcw
and
dec
jmp
scas
inc
jl
adc
add
addr16
leave
sub
arpl
fsubs
outsb
into
cli
vmovapd
lods
push
sub
pop
adc
in
add
xchg
adcb
scas
stos
push
xor
and
ss
xor
mov
pop
ljmp
xchg
leave
bound
imul
push
xchg
test
mov
cmpsb
mov
enter
push
movsb
pop
in
push
xor
repz
push
sarb
xchg
cltd
push
fnstcw
arpl
or
test
sub
and
loop
inc
sub
mov
push
add
shl
ret
dec
fimuls
jbe
push
scas
repz
pop
rcrl
int3
lret
js
das
ficoml
fldt
mov
xor
lods
dec
rolb
mov
adc
stos
daa
lret
add
scas
fucom
pusha
push
cmp
mov
iret
inc
loopne
mov
push
mov
adc
test
sub
lods
xchg
dec
test
dec
xor
arpl
gs
pop
inc
mov
and
jbe
aad
lret
cmp
push
mov
push
and
or
jnp
dec
cmc
movsl
sub
pop
xor
dec
jp
push
cs
mov
adc
lods
mov
rcrl
cld
xchg
jle
push
ss
sti
ljmp
lret
bound
sbb
popf
lea
ds
sub
jo
xor
aas
mov
mov
sbb
push
sbb
sbb
jecxz
sub
icebp
scas
mov
outsb
and
inc
pop
sbb
mov
pop
pop
addb
jb
mov
rorl
pop
iret
mov
fbld
cltd
push
les
outsb
aad
mov
test
mov
popa
push
mov
cs
lock
mov
incl
pop
aaa
jp
es
mov
add
cmp
dec
jno
pop
xor
scas
popa
fwait
lahf
dec
pop
into
dec
pop
pop
jbe
std
std
addr16
addb
dec
rorb
repnz
jnp
int3
test
fsubr
pop
xor
adc
das
xor
fidivs
fwait
in
or
mov
lahf
xorl
dec
sub
mov
cmp
cmpsb
fs
jb
fs
pop
xchg
sub
jge
inc
and
stos
scas
popa
jecxz
sbb
js
mov
loopne
das
rclb
cld
and
cmpsl
fdivs
add
fld
mov
mov
repnz
loop
iret
sbb
cmp
divb
push
pusha
mov
out
sbb
mov
in
jno
push
ss
imul
xor
xor
pop
out
pop
rorb
jl
inc
data16
hlt
pusha
stos
xchg
ss
imul
push
outsl
out
dec
push
fsub
jge
xor
mov
pop
dec
adc
ret
push
sbb
and
rcll
shll
adc
inc
cmpsb
fcmove
and
sub
adc
cmpl
aam
push
pop
or
lahf
mov
enter
in
test
mov
xchg
fisubrl
jge
cmp
movsl
mov
dec
push
cli
sbb
js
mov
lret
jmp
mov
jp
gs
cmp
pusha
add
movsl
push
pushf
sub
sbb
aaa
add
inc
imul
call
xchg
test
fdivrs
in
inc
cmp
ret
pop
sbb
bnd
ljmp
pop
push
hlt
jl
jnp
fs
pop
or
imul
mov
cli
shll
clc
xor
xor
test
jno
mov
and
inc
mov
aam
sbb
add
pop
daa
insb
nop
enter
ljmp
das
int3
pop
test
jb
mov
inc
xchg
mov
sbb
lret
sar
push
jecxz
jne
dec
and
dec
xchg
cmp
jbe
adc
movsb
pop
in
test
rcr
mov
in
or
push
mov
mov
cmc
or
test
arpl
sub
inc
sub
dec
ljmp
test
sub
push
sub
enter
mov
and
rcrl
push
das
push
mov
enter
loope
stos
add
popa
cmp
cmc
sbb
push
cmp
arpl
fwait
test
adc
jne
mov
mov
push
mov
lods
mov
dec
sbb
mov
insl
test
ja
cwtl
push
push
arpl
fwait
lock
movsb
ss
data16
jmp
aad
inc
sbb
xchg
xchg
sub
pop
xor
pop
jno
inc
clc
fs
mov
shll
lods
pop
mov
jmp
movl
push
xor
pop
mov
xchg
pop
nop
xchg
icebp
insl
add
mov
sub
leave
nop
addr16
lret
and
push
dec
mov
aad
shlb
sbb
sbb
pop
call
ret
imul
stos
cs
cs
movsb
outsl
cli
dec
aam
test
cwtl
push
mov
dec
pop
xor
sbb
push
jmp
fisubrs
cmpb
lods
mov
xchg
dec
cmp
or
mov
cltd
mov
adc
cld
mov
ret
sahf
push
xchg
push
popf
frstor
jb
push
pop
loope
imul
gs
push
add
mov
mov
fldt
ljmp
loop
mov
adc
mov
push
shrl
dec
iret
push
xchg
lea
mov
es
sbb
inc
adc
dec
push
push
push
js
sti
xor
je
aam
mov
pop
inc
dec
rcll
jg
or
jmp
lahf
dec
sarb
push
cmp
mov
mov
sti
xorb
adc
mov
dec
mov
sbb
cmp
add
sbb
and
sbb
bound
mov
cmp
push
push
inc
xchg
or
sahf
test
xor
push
daa
add
lds
cmp
dec
cmp
sbb
in
ret
push
inc
push
and
xor
fadds
leave
data16
jmp
shll
xchg
mov
mov
push
fistpll
cmpsb
pop
xchg
in
sbb
popa
push
shll
sti
mov
ja
pop
jle
mov
cs
iret
sbb
sahf
wrmsr
divb
popl
stos
push
lret
add
fwait
ljmp
xchg
or
es
mov
sbb
imul
cmpsl
jnp
lahf
lcall
sbb
fimuls
sbb
mov
or
or
lret
jle
lcall
xchg
xor
jnp
dec
xor
in
mov
or
dec
dec
sti
sub
repnz
lods
xchg
std
pop
mov
rcrb
cmp
cmp
jno
sub
sbb
jne
and
xchg
in
pop
push
or
divb
dec
shlb
pop
jg
out
inc
decb
outsb
ficoml
add
lock
not
cwtl
mov
dec
dec
and
aam
pop
and
das
jo
adc
sti
pop
inc
pushf
inc
js
jns
add
sbb
shrb
call
rcrb
push
test
shrl
pop
cmc
lods
nop
aam
cmpsb
aad
aas
jbe
pop
sti
nop
lods
jnp
mov
mov
sbb
xor
adc
push
js
xchg
int
test
jnp
mov
inc
in
stc
pop
mov
fwait
cld
and
cmpsb
and
adc
lahf
imul
aaa
jle
push
mov
fcomps
mov
push
imulb
adc
mov
adc
inc
mov
mov
lods
pop
arpl
hlt
mov
scas
push
sub
ds
dec
popa
pop
sub
shr
push
mov
arpl
lods
or
or
push
ja
mov
ret
jmp
subl
out
pop
pop
imul
lods
popa
pop
iret
jle
addr16
lods
fdivl
pop
jl
sbb
push
fldt
jb
iret
iret
dec
insl
rolb
inc
ds
cli
stos
inc
cmc
stos
imul
pusha
cmc
sub
les
outsl
push
sbb
jge
mov
xor
sbb
push
or
fdiv
and
sarl
lret
les
push
ror
push
cmp
lcall
mov
ds
and
mov
pop
in
sub
inc
mov
pop
pop
or
dec
out
fildll
test
fs
outsl
mov
jo
cltd
jbe
mov
jecxz
arpl
shlb
inc
dec
popf
adc
sahf
xor
jo
xor
or
ror
adc
pop
cmc
loop
mov
jmp
xor
cwtl
fnstenv
and
jno
fwait
mov
cmp
jnp
addb
es
pop
mov
mov
pop
shrb
jae
sar
loop
int3
aas
call
adc
and
mov
push
lock
inc
cwtl
or
xor
rcll
mov
shrl
sub
loop
mov
xchg
lcall
push
shlb
mov
push
and
dec
mov
pop
mov
stc
xchg
xorb
movsl
loope
ljmp
nop
mov
or
out
out
fsubrp
or
icebp
lods
aam
inc
outsb
push
outsl
movsl
jne
repz
push
shll
push
jae
push
push
add
je
mov
in
scas
fnsave
dec
loop
add
insb
repz
fdiv
cmp
scas
jb
or
xchg
ret
les
mov
orl
ds
mov
sahf
js
xor
xor
xor
mov
test
cld
mov
stos
add
cmpsb
lea
aad
jp
andb
in
shlb
test
xor
imul
dec
xor
sbb
cmp
push
gs
iret
pop
jp
les
lahf
jecxz
int3
or
test
lock
hlt
test
push
ret
add
xchg
jp
lds
and
sub
dec
dec
imul
sub
jge
fisubrl
insb
sub
fisubs
push
sub
add
repz
push
pop
fwait
mov
sbb
lahf
leave
in
lods
fmulp
adc
test
mov
lods
or
pop
adc
jl
test
icebp
xor
and
bound
mov
sub
jmp
lock
xchg
dec
movsb
pop
and
adc
in
xchg
jge
sahf
push
pop
mov
cli
sbb
push
out
and
std
cltd
and
xor
xrelease
dec
in
lods
jge
push
ret
pushf
out
std
pop
or
movsl
cmp
fstpl
xchg
cmp
rcrb
sbb
bound
imul
popf
lcall
repz
lahf
add
push
jb
daa
mov
sub
jecxz
push
xor
lahf
pop
aad
mov
hlt
cmp
sahf
sub
pop
xor
mov
adc
int3
imul
xor
add
xchg
stos
add
cwtl
pushf
xchg
cmp
xor
jl
data16
jp
fistpl
adc
dec
ror
rcrb
xor
sub
pop
pop
inc
dec
mov
nop
dec
push
dec
inc
mov
mov
add
xchg
push
clc
mov
and
test
jle
in
cmp
ljmp
push
sbb
mov
sbb
jge
int
cs
jmp
sub
cwtl
mov
adc
fcompl
sub
push
jg
mov
xchg
lret
sahf
cmp
push
rcrl
push
aad
aas
das
cld
xchg
in
push
or
arpl
movb
fidivs
mov
xchg
loop
adc
xchg
imul
into
mov
sub
xchg
jmp
arpl
mov
jmp
pop
push
sub
inc
jns
fimull
cmp
lock
add
test
sub
and
jno
pop
nop
mov
jge
loopne
and
addr16
mov
xchg
mov
stc
dec
sbb
mov
add
xor
movsb
in
pop
pop
inc
mov
jae
xchg
or
mov
pop
lods
or
hlt
push
jle
inc
cmpl
jbe
push
push
inc
js
adc
das
xlat
pop
xor
mov
lods
sub
repnz
test
adc
cmp
ljmp
aad
das
shlb
sarl
mov
outsl
sub
in
push
and
inc
sbb
push
mov
fdivrp
scas
fmuls
xchg
lock
outsl
mov
in
jnp
nop
sti
addb
mov
sbbl
pop
lret
mov
stos
rorl
xlat
xchg
inc
adc
inc
sub
push
and
adcl
insb
dec
add
cmp
jg
lds
jle
and
cmpsb
xchg
psubsb
nop
aaa
cmp
push
mov
sbb
push
addl
test
xor
mov
loope
roll
pop
pushf
int
mov
cmc
cmpsb
xchg
jp
mov
mov
repz
adc
inc
mov
mov
jb
inc
jg
pop
xor
dec
push
movl
pop
or
cmp
cmpsl
pop
fsubl
in
xchg
cwtl
sub
in
data16
out
mov
jb
insb
pop
pop
xor
xchg
pop
sbb
punpckldq
insb
dec
ret
ja
or
pop
xor
mov
ss
and
fwait
repz
loop
xlat
xlat
dec
inc
out
daa
jl
aaa
stos
mov
icebp
aas
rorb
popl
fsubrs
cmp
fs
fdivl
imul
sarl
inc
sbb
xchg
jb
push
mov
cmpps
push
cmpsl
or
in
shrl
cvtps2pd
mov
daa
xchg
jnp
sub
push
aaa
aaa
mov
xor
imul
je
pop
repz
shrl
stos
outsb
loop
jge
dec
in
ja
fistl
aaa
lock
aam
sbb
mov
dec
adc
cltd
push
add
ljmp
xlat
lcall
pop
in
jno
jmp
and
pop
sti
jo
movsb
push
push
test
cmp
xchg
subl
fbstp
cmpb
dec
icebp
leave
sbb
imul
cmpb
pop
lock
pop
jne
lods
mov
pop
loope
jbe
in
jno
mov
lea
xchg
test
lahf
xor
xor
les
loop
or
pop
lret
mov
fwait
xor
jbe
push
sub
push
jecxz
ret
dec
dec
cmp
and
xor
mov
sbb
xorl
and
sbbl
and
jae
inc
mov
cmpsl
stc
dec
and
stc
pushf
insl
mov
xchg
sarl
push
lret
mov
in
jnp
or
inc
adc
ja
pop
test
sub
add
jb
popf
sahf
push
mov
pushf
add
pop
mov
add
mov
or
repnz
andb
outsb
sbbb
push
inc
mov
stos
pop
xor
repz
ljmp
jl
xchg
add
in
push
fisubrs
push
mov
jge
loopne
fmulp
das
mov
jb
sbb
scas
fcomip
pop
jnp
loope
fistps
lahf
loop
xor
cs
imulb
lods
xor
push
fwait
lret
jg
mov
mov
adc
mov
pop
arpl
mov
xchg
inc
or
ret
mov
mov
mov
and
lods
aas
lods
ja
mov
movsl
scas
lods
mov
cltd
in
sbb
fstpt
imul
and
xchg
jge
mov
push
mov
sbb
pop
add
ffree
insb
jl
xchg
sbb
in
imul
push
ss
sbb
outsl
xchg
jb
or
mov
in
mov
or
xchg
jbe
inc
movsl
or
repnz
scas
mov
fwait
push
xchg
aam
rclb
sbb
add
mov
mov
dec
xchg
inc
enter
pop
or
icebp
mov
pop
add
outsb
xor
mov
scas
cmpsb
lods
dec
xchg
lods
jle
pop
mov
scas
mov
in
mov
xor
into
shl
cmpsb
lods
out
cmp
dec
jp
add
cld
pop
xor
pop
adc
jl
faddp
mov
sub
movl
cmp
mov
xor
jnp
jmp
mov
inc
cwtl
mov
xor
xchg
inc
data16
in
push
nop
fsubp
jle
out
leave
inc
movsb
jecxz
push
cld
loope
test
and
xchg
xor
xor
in
jmp
add
shrd
outsb
mov
and
stos
mov
pop
ss
int
xchg
mov
mov
sbb
sarl
mov
in
and
or
into
push
mov
add
mov
call
shlb
add
jl
div
arpl
stc
roll
iret
pop
hlt
negl
fldz
lods
xlat
mov
shr
adc
stc
cmpsl
push
out
dec
mov
sbbl
inc
sahf
int
mov
xchg
test
and
enter
ficoml
or
cmc
lcall
stc
int
loop
pop
xchg
aaa
mov
xlat
movsb
jmp
aas
jmp
or
cmp
das
sbb
cmp
out
das
xor
pop
jmp
xchg
adc
and
push
add
add
add
sub
dec
lods
mov
and
daa
and
sbb
daa
mov
lds
inc
add
stc
xchg
jge
outsb
sbb
lods
cmp
imul
sbb
xchg
popa
fmuls
fsubp
mov
push
sub
das
jo
mov
ret
push
push
or
lahf
outsb
mov
in
cmpsb
add
cmp
insb
imul
shrl
sbb
int3
leave
jecxz
stc
mov
pop
sub
pop
outsb
int3
push
add
jl
sarl
arpl
lea
push
fs
sub
and
lock
stc
xor
pop
leave
add
and
pop
jns
jle
dec
xchg
push
test
mov
mov
mov
inc
mov
push
js
and
xchg
xor
fldenv
outsl
and
xchg
dec
jae
lcall
fnstenv
mov
jno
cmpl
sub
int3
in
test
js
testl
cli
inc
out
xchg
in
dec
nop
scas
in
cs
xchg
mov
mov
sbb
inc
fwait
cmp
mov
andps
cmp
lods
sub
pop
insb
and
push
mov
adcb
xor
mov
xor
add
inc
cld
jb
cld
xchg
out
fistpl
mov
int
ret
push
mov
cmp
and
mov
cs
fistpl
jle
in
sar
enter
mov
iret
pop
bound
in
adc
xchg
andl
pop
dec
mov
mov
inc
dec
xchg
lds
cwtl
sub
sbb
jge
icebp
sub
out
je
ljmp
cmpsb
dec
mov
ficoml
sbb
xlat
adc
or
and
xor
fwait
out
sbb
lahf
mov
cli
into
mov
out
bound
fs
add
fmull
or
xchg
popa
add
and
pop
and
insb
scas
cltd
inc
int3
mov
xor
push
sahf
xor
repnz
aaa
push
dec
dec
push
mov
add
cmp
sub
or
push
shll
jne
clc
pop
fadds
add
dec
imul
jo
inc
shll
popa
jecxz
out
or
inc
mov
lods
scas
js
mov
lea
dec
fisubs
rolb
xchg
sbb
add
test
test
ljmp
fwait
xchg
lods
xchg
orl
lods
sbb
repz
mov
or
cmp
mov
leave
mov
ret
cmpsl
bound
fnstenv
xor
aad
adc
adc
ds
push
leave
lds
data16
inc
xchg
jge
das
lds
or
or
pop
or
xlat
in
mov
mov
mov
inc
xchg
mov
push
pushf
dec
nop
mov
adc
int
jl
clc
mov
sub
push
dec
mov
pop
dec
push
and
jge
rcrl
out
push
icebp
fdivrs
xchg
pop
ficomps
dec
ficoml
mov
gs
pop
loop
and
inc
call
xchg
push
jae
push
dec
fisubs
scas
rcl
ss
or
mov
mov
shl
clc
flds
sti
insl
lds
sbb
les
mov
mov
mov
jae
cld
pop
inc
inc
push
mull
jge
lods
xchg
test
test
mov
sub
scas
out
aad
push
lods
mov
jp
test
inc
sub
xchg
or
fwait
xchg
xor
loop
mov
clc
xor
sub
cld
pop
mov
mov
sbb
fbld
leave
sahf
pop
rolb
push
fnstenv
mov
sbb
push
pop
pop
arpl
push
push
jb
add
movsl
add
jg
das
leave
stos
das
mov
pop
sbb
inc
inc
inc
es
imul
pop
cmp
das
sub
addr16
inc
fcoms
in
sub
sti
ljmp
js
fs
mov
sbb
test
sub
add
mov
mov
push
call
ss
movsl
dec
sbb
addb
cmp
sbb
out
lret
add
jge
bound
sub
ret
popf
push
scas
lahf
xchg
mov
sbb
sti
addr16
push
xor
inc
aam
jae
cmp
lds
les
sbbl
ljmp
bound
ljmp
xchg
popl
outsl
flds
push
add
xchg
adc
lods
sbb
pushf
dec
jo
aaa
dec
jl,pn
ds
jae
sub
xchg
jmp
in
fwait
cmp
lret
icebp
loope
push
pop
adc
inc
repz
inc
nop
mov
dec
sub
lods
shll
loopne
test
sbb
sub
xchg
adc
and
arpl
ficoms
ficoml
jb
stc
fwait
xchg
push
movsb
push
lea
popf
pop
inc
pop
xchg
sbb
pop
lret
neg
adc
das
fsts
lds
fisttpll
ds
xor
rorl
sbb
and
pushf
sub
push
inc
jae
dec
loopne
lods
mov
cmpsb
xchg
rclb
mov
pushf
fnop
nop
imul
mov
sarl
push
stos
shrl
jge
int3
xchg
nop
bound
push
and
stos
dec
push
dec
jb
sbb
hlt
adc
ja
mov
aaa
fwait
or
ss
aas
ret
lods
je
daa
push
or
test
cmp
jne
rcr
xchg
mov
push
shll
mov
or
mov
out
imul
std
sub
mov
test
pop
sbb
lahf
mull
in
loope
xlat
xor
ja
mov
dec
flds
cmpsl
lods
icebp
mov
lahf
jle
lods
into
xchg
out
adc
sub
ret
fwait
loop
push
lock
repz
sbb
mov
cmpsl
xlat
daa
in
lods
movsb
lea
test
js
mov
int
jb
js
adc
mov
dec
jb
rorb
lret
shll
dec
pop
sbb
es
dec
push
dec
cmp
call
xchg
ja
push
mov
ds
cmpsb
hlt
cmp
popf
push
pop
inc
mov
cmp
dec
xchg
and
pop
jecxz
dec
ret
adc
sahf
cmovno
jo
sbb
mov
jo
add
dec
lock
and
lahf
lods
enter
adc
or
cmp
cmp
lods
push
mov
lahf
xor
or
je
cli
mov
cmp
mov
xchg
cmp
hlt
cltd
lods
add
or
cmp
sti
enter
test
jns
stc
pop
sahf
out
push
adc
stos
pop
into
push
andl
cwtl
cmp
test
popa
jns
cmpsb
push
ja
fnstcw
iret
push
dec
test
sub
mov
push
hlt
push
test
enter
xor
or
push
sbb
jecxz
and
dec
sahf
and
xchg
daa
mov
pop
flds
jns
andb
rorb
xor
and
pop
push
sub
jmp
fldcw
mov
adc
jecxz
push
das
jl
sbb
iret
andl
arpl
cmpsb
cld
pop
outsl
js
arpl
xor
pop
mov
pop
arpl
sub
mov
mov
test
dec
lds
or
jle
pop
nop
adcl
or
push
push
pusha
out
or
mov
insb
shrl
xchg
xchg
daa
sbb
cmp
add
mov
pop
mov
mov
popf
xor
and
inc
sbb
and
inc
mov
jb
add
sbb
xor
iret
sarb
addb
and
mov
sub
xor
in
push
call
out
dec
sub
add
jle
jae
pop
lods
cmp
aaa
sahf
ret
popf
cmpb
pop
mov
fldenv
out
popa
fs
xor
add
test
idivl
mov
dec
dec
dec
ret
jae
neg
xchg
or
ficoms
sub
mov
es
mov
mov
dec
and
shr
stos
rcrl
mov
mov
ss
fstps
adc
push
imul
mov
inc
add
les
mov
mov
dec
out
cmp
jle
pop
repz
xchg
je
jmp
or
rcrb
jnp
ds
cmc
cmp
inc
dec
ljmp
sub
out
outsl
es
xor
adc
mov
sbb
mov
hlt
shll
repnz
stos
out
lods
dec
clc
xor
divb
punpckhwd
xchg
testb
adc
mov
and
fsts
xor
jp
jo
mov
or
push
arpl
sbb
stos
sub
push
inc
in
mov
lds
and
lret
pop
ret
and
jcxz
cli
aas
sbb
or
lcall
mov
inc
sub
pop
fbstp
mov
jge
jne
sub
dec
or
pop
lcall
mov
lds
faddl
pop
leave
ret
stos
sbb
bound
mov
repz
out
xchg
repz
push
ja
daa
inc
pusha
jmp
push
loop
inc
add
push
hlt
xchg
jmp
or
mov
dec
sbb
xchg
insb
adc
xchg
pop
clc
fwait
daa
clc
or
test
sahf
push
scas
jb
rorl
or
lock
shr
aad
xchg
mov
pop
xchg
sbb
out
pop
add
in
cmp
or
in
pushf
adcl
out
dec
jle
and
in
mov
mov
pop
xchg
push
fisttpll
jmp
mov
ret
xor
inc
mov
mov
lahf
lret
jns
sub
ss
and
mov
push
mov
in
pop
inc
fs
jnp
fidivl
pop
xchg
mov
jl
movsl
dec
add
aaa
iret
pop
test
mov
in
dec
and
je
dec
jns
push
push
mov
fnstenv
mov
addr16
loopne
into
insl
cwtl
mov
test
dec
scas
jbe
mov
lods
jns
es
xor
lcall
mov
rcl
lahf
inc
pop
cmp
cld
xor
jo
inc
jle
jo
xor
and
mov
aad
ss
push
fadds
or
lods
test
add
leave
ljmp
and
aas
dec
test
xchg
sbb
sub
ret
push
cmp
jno
sbb
dec
test
inc
hlt
add
sar
sub
mov
roll
sbb
push
mov
and
sbb
ss
adc
jmp
xchg
pop
fcomps
push
sub
jmp
outsl
sub
sbb
pop
and
inc
inc
aaa
fwait
insb
jle
pushf
je
das
sbb
inc
sub
cmp
mov
adc
cmpsl
pop
mov
push
adc
jl
popa
mov
movsb
mov
dec
pop
cli
jb
push
sbb
lock
insl
mov
test
cmp
dec
loope
cmc
and
push
les
loope
mov
jge
orl
inc
xor
pop
push
sub
dec
sub
jne
jno
jnp
outsb
adc
out
add
sbbb
cmpsb
add
mov
fadd
sub
dec
pop
lds
mov
push
sub
hlt
mov
sbb
mov
fwait
ljmp
stos
mov
lock
push
dec
test
lea
pop
or
inc
or
adc
push
add
pop
cwtl
dec
mov
mov
adc
mov
negl
fimull
jg
dec
pop
mov
pop
sub
dec
cli
call
out
repnz
movsl
lods
inc
ss
arpl
and
or
push
ss
sub
xchg
sub
std
jnp
jae
dec
fldcw
and
push
lods
daa
sbb
adc
scas
cwtl
imul
push
insb
stos
mov
ljmp
aaa
or
loope
insl
mov
xchg
mov
pop
dec
fisttpll
jmp
mov
imul
dec
ret
cmp
arpl
xor
sub
jmp
push
icebp
push
jmp
jmp
dec
inc
dec
stc
fsubr
loopne
out
push
inc
movb
dec
xor
adcb
add
aaa
in
inc
mov
or
adc
and
call
lahf
cmp
loopne
sti
rcrb
and
fcomps
fmul
add
mov
loope
pusha
pusha
ljmp
pop
pop
mov
neg
mov
rcr
mov
enter
mov
pop
movsb
pop
mov
stc
in
xchg
inc
dec
jo
jg
dec
lods
xchg
jp
xor
mov
popa
jp
mov
sti
test
cltd
and
je
sub
stos
arpl
pop
sub
and
add
cld
stos
jo
aad
cmpsl
iret
and
testl
pop
sahf
int3
xchg
sbb
leave
cs
mov
pop
xlat
xchg
adcl
imul
mov
xor
mov
in
add
jbe
mov
incb
pop
inc
nop
mov
pop
mov
ret
insb
push
dec
sti
sahf
pop
xor
jge
push
roll
cli
rorl
loope
add
test
mov
dec
sub
push
test
xchg
stos
mov
jno
js
in
add
sti
push
fsubrp
add
in
xlat
clc
pop
inc
and
sahf
aad
jp
enter
scas
sub
cmp
imul
cmp
gs
lea
daa
add
pop
push
iret
jle
push
ss
xchg
add
and
sbb
movsb
pop
cmp
jns
pop
fnstenv
xchg
test
jle,pn
push
sub
mov
outsl
pop
stos
mov
fmul
cs
jle
lods
mov
mov
outsb
jge
sbb
cmp
inc
mov
sahf
xchg
bound
inc
cmp
mov
sarb
frstor
ds
movsb
jecxz
jae
insb
mov
xchg
aad
inc
mov
sub
jle
stos
xor
adc
or
or
das
leave
imul
jo
stc
jg
adc
test
scas
sti
sbb
or
leave
hlt
stos
xchg
stc
in
ret
push
cmp
jb
pop
pop
jp
and
fcomp
scas
xor
sbb
add
test
or
rorb
sbb
pop
popa
mov
mov
loopne
imul
imul
lds
aas
or
loopne
jmp
dec
pop
mov
out
mov
rorb
push
sub
dec
jnp
cmpsl
mov
dec
test
add
std
lcall
mov
push
roll
lock
fsubrs
mov
push
mov
stos
outsb
xor
xchg
addr16
jbe
loopne
add
in
je
mov
rcrl
dec
xchg
sub
jae
and
mov
mov
pop
and
push
daa
adcl
jne
mov
scas
hlt
ljmp
xor
lods
scas
les
cmp
in
jo
adc
sarb
xorl
push
add
mov
adc
scas
mov
clc
pop
sub
sub
push
sbb
out
and
or
les
out
jns
insl
xchg
int3
jmp
mov
test
cmp
mov
loopne
xchg
dec
xor
int3
push
das
popf
dec
out
gs
mov
fld1
imul
sub
sub
inc
lods
inc
subl
je
sub
cwtl
mov
in
shll
repnz
subb
mov
inc
rorb
xor
out
bound
mov
loopne
fidivl
mov
jnp
in
sub
sub
jg
xor
push
jmp
mov
int3
pop
std
jnp
fs
dec
sbbb
jle
or
clc
push
stos
push
mov
jp
xor
mov
lret
dec
imul
xor
pop
insb
adc
lods
into
rcll
rcrl
fimuls
sub
stos
das
inc
and
add
push
mov
stc
sub
pop
es
out
push
xchg
sti
scas
pop
and
sbb
pop
subb
mov
xchg
sbbl
pop
jp
sub
repnz
adc
js
dec
das
popa
inc
fsubs
dec
popa
das
inc
push
insl
fimuls
mov
adc
sbb
imul
jae
inc
jecxz
pop
sub
mov
hlt
pop
push
add
and
pop
gs
gs
pop
sbb
cmp
and
loope
xchg
jmp
inc
aas
xchg
pop
jecxz
mov
shlb
int
in
sti
sbb
shl
cmp
outsl
mov
loope
arpl
xchg
mov
hlt
incl
push
push
jae
xlat
dec
fsubl
adc
push
aad
neg
xchg
push
cli
pop
dec
fdivr
xchg
sbb
and
and
push
clc
push
mov
test
mov
add
jle
pushf
out
les
call
mov
subb
pop
mov
sbb
subl
mov
stos
push
push
add
jg
aaa
aad
mov
mov
dec
jmp
jmp
insl
outsb
or
js
or
xchg
push
inc
inc
scas
int3
cmp
outsb
mov
daa
sbb
data16
push
dec
mov
sub
mov
div
mov
add
pop
pop
push
imul
ss
pop
and
popf
fidivrs
cwtl
adc
scas
addr16
cli
dec
sbb
mov
mov
or
fcoms
ds
data16
ljmp
lret
xchg
mov
hlt
enter
cmp
scas
pop
push
and
daa
mov
rcll
inc
in
mov
decb
in
sbb
je
cmp
pop
fldenv
adc
cmp
insl
ja
push
lea
scas
cmpsb
mov
inc
push
push
hlt
mov
xchg
xchg
jne
mov
pop
pop
jbe
jmp
pop
scas
inc
pop
push
add
mov
cmpl
mov
adc
ret
sub
jne
test
add
push
repnz
sbb
daa
pusha
jecxz
jle
sbb
outsb
cwtl
pop
insb
lods
xchg
andl
or
fnstenv
shl
mov
inc
mov
pop
dec
lcall
adc
in
jb
cmp
mov
jne
divb
adc
das
push
mov
jmp
shlb
mov
push
cld
sub
pop
xchg
nop
add
pop
outsb
cmc
stos
mov
xor
gs
dec
repnz
stos
and
imul
adc
mov
scas
call
sbb
bound
push
mov
aaa
ret
imul
clc
dec
pop
pavgb
jge
adc
and
iret
dec
movsl
inc
xchg
pop
iret
push
sahf
flds
cmp
pop
jae
shrl
cmc
movhlps
jns
and
lahf
lods
sub
xchg
adcb
mov
inc
jo
popf
mov
mov
repnz
dec
xchg
nop
ljmp
insb
mov
cmp
ret
xor
or
out
fisubl
jle
xchg
test
fs
pusha
add
jb
xchg
pop
stos
xor
push
xor
push
lcall
inc
or
inc
dec
push
or
sbb
lahf
cs
in
dec
xchg
sbbb
mov
dec
xchg
cld
sbb
nop
and
adc
pop
mov
pop
jne
push
fcmovbe
push
jg
fisttpl
push
pop
test
mov
jnp
jmp
gs
aas
inc
ret
ret
jp
jl
mov
xor
xchg
xor
pop
fwait
inc
jns
add
out
or
test
pop
mov
popf
lods
mov
xchg
les
mov
mov
fwait
mov
loope
frstor
nop
mov
popa
jnp
test
add
dec
and
jl
test
mov
loopne
into
ret
mull
pop
pop
sbb
mov
loope
pop
shlb
sub
jmp
pop
push
aad
inc
addb
dec
mov
push
mov
jp
push
ds
je
adc
sub
jb
in
sarb
bound
dec
push
fdivl
hlt
ret
mov
mov
fimuls
loopne
les
jge
enter
clc
and
lret
dec
sub
out
loopne
or
popf
push
jns
xchg
jecxz
daa
jl
mov
in
fs
fs
mov
lahf
lret
stos
and
push
pusha
push
mov
iret
mov
cs
pop
jge
data16
pop
xor
push
dec
insl
mov
testb
repz
rorl
pop
popf
shrl
and
cmp
mov
les
sbb
add
pop
push
js
sbb
dec
pop
fildl
divl
mov
pop
dec
int3
popf
pop
dec
lods
fs
arpl
int3
xchg
sarb
ja
jne
ljmp
mov
orb
xchg
cmp
hlt
repnz
out
sbb
stos
xchg
inc
dec
cmp
adc
xchg
loop
cmp
movsl
or
mov
insb
jb
ja
jge
sti
cmp
cmpsb
in
pusha
movsl
push
sub
xchg
push
mov
cltd
inc
push
push
out
cmpl
xchg
mov
mov
mov
pop
lds
push
mov
mov
and
inc
mov
jge
pop
xchg
mov
fs
inc
sub
arpl
mov
adc
test
xor
jle
lcall
cmp
and
movsb
sbb
in
and
mov
mov
mov
mov
inc
sub
aam
rcrb
icebp
pop
ret
data16
lock
fs
stos
add
xorl
test
fsubrs
nop
push
lcall
sub
jbe
cmp
cmp
fisttpll
in
mov
xchg
pop
mov
fucomip
movsb
daa
dec
jae
mov
stos
ret
mov
sbb
xchg
xor
xchg
push
cmp
sbbl
enter
push
outsb
mov
cmpsl
inc
ljmp
rclb
mov
mov
outsl
scas
push
adc
subb
stos
sub
xchg
jp
das
mov
add
int
add
cmpsl
pop
iret
xor
mov
dec
push
pop
ret
lret
xchg
loop
loope
pop
movsb
jno
mov
push
insl
rcll
aas
pop
outsb
imul
jae
push
push
xorl
aad
lahf
mov
xchg
in
in
pushf
out
mov
test
adc
mov
outsl
push
rcrl
rcrb
sbb
cld
fisubrl
aas
test
fildl
jnp
lret
mov
jae
loope
decl
pop
dec
mov
jl
ljmp
lret
mov
in
jb
pusha
xor
adc
cmp
outsl
seto
mov
and
cmpsb
lea
cmp
push
mov
and
pop
lods
daa
nop
fwait
data16
add
push
mov
out
mov
pop
adc
or
mov
into
iret
test
mov
lret
push
mov
cmpl
pop
jne
sbb
in
sahf
dec
gs
jge
mov
mov
lcall
out
jle
adcl
push
lock
push
or
push
insb
push
in
push
ret
cmp
jnp
into
decb
dec
imul
cs
cs
ret
pop
sbb
repz
loopne
aaa
mov
adc
mov
gs
xchg
andb
enter
dec
dec
sub
loopne
push
sub
sbb
test
rolb
shrb
or
test
mov
or
stc
push
lcall
xchg
int
mov
mov
xor
sti
es
push
mov
lret
lcall
xchg
repz
xchg
xchg
jg
outsl
or
lcall
sbb
fnstsw
xchg
jl
push
sbb
inc
push
stc
pop
push
add
nop
xchg
pop
cmp
sahf
jns
aam
pop
sub
push
pop
scas
and
daa
popa
scas
sbb
cli
mov
inc
fwait
add
js
int3
add
repz
clc
push
xor
adc
sbb
movsl
xor
jg
lret
fiaddl
test
push
jge
xor
movsl
pop
adc
dec
inc
jge
pop
mov
xchg
ljmp
mov
xchg
inc
into
push
pop
lret
scas
scas
jle
adc
scas
enter
out
in
sti
lret
daa
sub
ljmp
das
adc
popa
aaa
sub
xor
imul
int
pop
lock
imul
dec
imul
sbb
icebp
andl
mov
arpl
sbb
add
pop
inc
icebp
lods
pusha
fwait
pop
mov
cltd
js
jb
sub
sub
push
dec
nop
ret
xor
dec
mov
and
outsl
rorb
pop
scas
lock
jle
js
mov
int
jns
pop
roll
inc
ror
xchg
leave
pop
arpl
lret
loop
gs
and
aaa
pop
jl
inc
fidivrl
test
push
imul
xor
cmp
inc
bound
loope
bound
mov
aaa
nop
mov
pusha
inc
ret
cmp
icebp
mov
push
fwait
push
sub
mov
dec
out
mov
mov
lods
xchg
out
mov
popa
pop
in
dec
shrl
jnp
lcall
or
std
mov
pop
and
jns
mov
lcall
mov
je
int
inc
mov
mov
cmp
es
ret
sbb
movl
mov
sub
in
insb
cmp
dec
test
push
repz
dec
ljmp
add
jl
rcr
push
rcr
nop
insb
pop
mov
mov
push
xor
or
addr16
out
adc
pusha
push
jns
sub
pop
dec
pop
out
inc
pusha
cwtl
popa
in
xor
into
jle
mov
outsl
xor
dec
sti
fisttpl
sub
add
hlt
lret
push
mov
jge
lcall
out
dec
push
and
xor
aam
push
sbb
out
pushf
ret
int
dec
inc
cmp
shl
iret
sbb
pop
in
sti
cmpsb
into
testl
leave
fisubl
and
test
icebp
mov
lahf
xchg
out
or
cmp
fsubrs
push
jle
subb
jo
and
push
inc
push
fwait
pop
sbb
cmp
cmp
mov
and
pop
or
stos
and
or
mov
mov
push
sub
pop
xchg
ret
fwait
jbe
or
mov
movsl
imul
fistl
pop
cmp
inc
or
xor
call
sti
imul
mov
jno
in
cli
cmp
inc
cmp
daa
mov
add
adc
xchg
push
movsl
mov
fiaddl
pop
and
inc
adc
fst
mov
dec
jl
out
aam
stos
sub
movsb
pop
sub
mov
ret
inc
mov
test
stc
movsb
cmpsb
aaa
in
movsl
xor
test
test
dec
in
or
dec
loopne
mov
pushl
or
add
inc
stc
push
jae
pop
or
pop
call
jo
mov
out
mov
das
fcoms
inc
arpl
lods
xor
xchg
imul
xchg
int
adc
movsl
pop
mov
bound
loop
popa
in
addr16
out
fs
call
mov
mov
push
and
adc
les
pop
icebp
pop
push
fdiv
inc
push
arpl
stos
mov
xchg
xchg
in
insb
js
xchg
outsl
shll
aas
jae
inc
mov
subb
or
stc
dec
jae
pop
dec
or
dec
pop
sub
sbb
sahf
mov
or
sbb
pop
push
mov
xchg
mov
inc
rcll
sbbl
add
test
cmpsl
add
sahf
lods
out
lods
xchg
sar
int
pop
cwtl
sahf
out
int3
xor
pop
imul
call
fdiv
sbb
shlb
pop
jmp
mov
sahf
pop
inc
scas
mov
lods
sbbl
in
sti
and
pop
aas
mov
sub
lret
mov
pop
mov
jne
int3
jnp
jne
stos
test
popf
cli
or
stos
in
je
xchg
test
js
cs
xor
and
jo
int
sbb
push
loop
push
push
dec
cli
pop
jne
xor
jle
sahf
jo
scas
sbb
scas
mov
sub
lea
and
mov
jnp
or
les
shlb
xor
gs
sarl
pop
outsl
insb
fbstp
jne
pop
leave
dec
cmp
mov
rcll
adc
leave
leave
jns
fwait
cmpsl
cmp
jns
cmc
fprem
push
dec
mov
add
xchg
mov
daa
inc
leave
out
push
repz
mov
outsl
pop
outsl
faddl
or
dec
ja
jbe
sbb
sub
nop
lods
push
dec
mov
rcl
lret
sti
xor
fucom
jmp
fmull
sub
mov
push
dec
push
ss
jg
sub
jmp
das
es
jle
js
or
std
rorl
pushf
aam
sbb
and
in
enter
dec
fwait
adc
fcoml
xor
add
scas
pop
loope
xor
shrb
mov
ja
imul
push
dec
aad
sub
xor
fprem1
mov
dec
inc
mov
shl
mov
sub
iret
jmp
mov
dec
lcall
mov
notl
fidivl
jecxz,pn
das
loope
stos
mov
ret
sbb
sbb
mov
shrb
mov
in
xchg
subl
test
mov
cmpsb
xor
or
sbb
mov
sbb
in
sbb
imul
sub
ja
push
loop
inc
lahf
shll
lret
out
lock
dec
fcomps
out
cmp
int3
cmp
cmp
xchg
mov
sbb
add
scas
rcl
mov
lock
in
clc
inc
sub
inc
sbb
mov
js
mov
ret
dec
jnp
inc
rcll
xor
je
inc
cmp
shll
mov
jp
mov
stos
xor
or
pop
dec
inc
add
test
sub
pop
movlps
out
adc
insb
xchg
dec
push
stos
pop
in
fwait
dec
jmp
and
rolb
outsb
stc
stos
mov
flds
push
xor
xchg
add
and
pusha
cwtl
out
jp
xor
mov
adc
imul
ljmp
movsl
shrb
inc
fnstcw
mov
or
add
loop
mov
je
or
pop
fidivl
leave
push
movsl
orb
push
inc
psubb
dec
pop
sbb
lcall
push
lahf
pop
or
mov
aaa
orl
mov
pop
mov
dec
push
xor
scas
dec
xor
inc
test
xchg
mov
repz
push
pop
in
mov
and
dec
mov
gs
and
sbb
test
fstl
icebp
xor
inc
pushf
movsl
sti
insb
xchg
or
xchg
inc
push
xor
and
and
pop
mov
sub
mov
mov
shrl
pop
sub
cwtl
test
dec
rorl
pop
pop
sub
repnz
sti
pop
fwait
or
clc
mov
adc
aaa
clts
mov
push
push
and
jp
xor
pop
dec
xor
lods
enter
cmpsb
jecxz
popf
pop
faddl
mov
lcall
xor
lahf
out
inc
dec
jp
fdivrs
jno
add
pop
pushf
call
mov
sub
movsb
ret
imul
dec
push
faddl
es
xchg
jno
sub
in
in
aaa
pop
sub
fldt
pusha
inc
test
insb
cmpsl
and
stos
add
out
push
mov
push
gs
pop
sub
mov
int3
pop
jl
inc
xchg
test
dec
pop
inc
lods
mov
xchg
or
daa
call
cmpb
dec
int
dec
insb
mov
hlt
sub
adc
inc
jb
push
dec
adc
je
aaa
cmp
insl
cmp
dec
jecxz
fmull
imul
inc
jle
push
insb
int
nop
cld
pop
std
mov
push
div
lods
outsl
popf
int3
mov
jae
push
dec
lahf
cmp
loopne
xchg
shl
clc
push
sti
lea
fcom
aam
xor
sbb
stos
mov
enter
ss
shll
lds
mov
imul
or
pop
push
or
jo
pop
dec
fimull
out
xor
jge
insb
repnz
aad
cld
dec
idivl
sbb
es
popf
xor
xchg
dec
call
scas
xor
sub
scas
mov
cli
pop
xor
lods
xlat
fsubs
dec
mov
xchg
int3
dec
mov
cmpl
xchg
mov
jp
mul
clc
popl
mov
bound
inc
push
sarb
ljmp
iret
inc
cli
pushf
adc
cmp
movsb
sbb
stos
neg
gs
lcall
or
fs
and
cmpb
lret
jmp
aad
filds
sbbb
and
inc
pushf
pusha
test
push
push
test
push
push
dec
mov
in
jno
or
leave
outsb
lods
inc
xor
aad
sub
xchg
scas
dec
sub
jne
test
insl
lock
out
arpl
fwait
mov
bound
ljmp
enter
addr16
out
dec
or
push
nop
cmp
int3
dec
stos
jne
adc
dec
out
dec
mov
call
bound
mov
rorb
not
push
lret
fs
into
sbb
sub
fmuls
xor
out
pop
pusha
ss
pop
int3
lds
outsb
jl
pop
rcrb
xchg
fsubs
int3
mov
mov
pop
std
fildll
arpl
mov
or
mov
out
adcl
lret
lea
imul
xchg
dec
hlt
int3
push
pop
fs
ret
dec
and
mov
insl
push
cld
pop
pop
arpl
dec
mov
imul
leave
loope
mov
pushf
fists
mov
and
sbb
sahf
pop
pop
xor
loopne
dec
mov
cli
xchg
das
sahf
sub
arpl
dec
pusha
and
pop
xchg
inc
mov
arpl
sbb
shrb
cld
cmp
adc
pop
ss
imul
cmp
daa
hlt
insb
lea
ficoms
and
shlb
fldl
fstl
fstps
adc
xchg
mov
fiaddl
outsb
pop
fldt
sub
dec
ja
dec
cmp
mov
stos
outsl
sahf
arpl
fdivrs
in
or
cmp
pushf
ficoms
dec
fmul
dec
ljmp
cmp
xor
out
pusha
lea
cmp
fscale
loope
or
xor
or
cmp
or
mov
lods
sbb
sbb
leave
xor
test
mov
jns
xorb
mov
ds
dec
or
pop
add
pop
xor
punpcklbw
out
sahf
push
jo
xchg
xor
xchg
fiaddl
or
sub
ret
dec
fistps
lret
add
jns
mull
xchg
lock
cmpsb
add
out
into
cmpsb
mov
mov
arpl
lock
ret
jo
ds
sub
sti
xchg
or
pushf
stos
xchg
scas
jl
int
scas
adc
xor
xlat
cmp
xchg
add
mov
inc
mov
pop
add
loopne
and
ficoml
and
shrb
xor
sbb
cmc
out
mov
sarl
lcall
adc
cwtl
mov
ret
out
insl
scas
jp
ss
push
cs
sbb
fimuls
adc
and
dec
pop
jg
inc
or
mov
xchg
orl
fwait
sahf
loope
add
dec
sbb
cmpb
pop
push
push
cs
add
cwtl
xchg
pop
subb
xlat
fsubrs
dec
sarb
mov
adc
xor
mov
dec
aaa
mov
adcb
dec
cmp
mov
cmp
or
scas
lret
jb
xorb
negb
mov
pop
mov
pop
dec
xor
jns
pop
imul
adc
fs
repnz
cmp
hlt
xor
mov
sbb
mov
jge
xchg
and
sub
sbb
jnp
cmp
jg
orb
in
outsl
outsb
pop
cmpsb
dec
push
jne
dec
sti
and
repz
or
add
ljmp
leave
jns
cmpb
or
in
xchg
xchg
cltd
pop
xor
ja
lock
pushf
std
fmull
pop
sbb
inc
push
mov
jl
fsubrp
out
sub
cmp
or
and
imul
cmp
ret
das
mov
imul
movsb
push
sahf
pop
leave
mov
jnp
aaa
jle
xchg
js
push
xchg
pusha
std
inc
insb
push
out
adc
les
addl
rorb
pop
pop
pop
inc
popa
dec
jbe
mov
shll
daa
les
mov
jmp
repz
aas
jae
test
scas
in
aaa
inc
repnz
mov
mov
and
div
xchg
inc
decb
sbb
imulb
popa
insb
fistpll
adcl
sbb
push
hlt
repnz
mov
and
test
lcall
in
pop
push
and
shrl
ja
lret
push
dec
pop
enter
mov
mov
add
out
movsl
cmp
cmpsl
push
xor
inc
lret
xor
ret
out
mov
cmpsl
mov
mov
test
cmpsb
addb
pop
nop
clc
jmp
push
nop
insl
lods
xor
push
or
pop
xchg
add
push
add
push
std
ret
push
cmpsl
pop
test
test
leave
cs
outsb
or
cmpl
orb
pop
dec
js
lret
roll
pop
mov
cmp
lds
call
into
add
sub
out
les
lret
fdivl
mov
call
sti
pop
cwtl
rorb
xor
pop
mov
in
int3
sbb
lds
stos
push
pop
into
ja
xchg
je
pop
aad
inc
insb
stos
ds
sbb
pop
mov
cmc
dec
addr16
xor
pop
or
out
aam
xor
test
in
lcall
in
cmpsl
test
cmc
or
in
sub
inc
movsb
in
adc
mov
cmp
das
fcompl
xchg
fldenv
lea
or
in
sti
push
lock
mov
out
dec
dec
imul
out
xor
jmp
mov
pop
sbb
jg
or
cmpsb
test
popf
sti
aas
gs
je
int
leave
fldenv
jmp
sahf
pop
push
mov
loop
push
ljmp
and
xchg
pop
call
cmp
xor
mov
mov
cmp
repz
shrb
jb
incb
iret
xor
loope
mov
fisubl
pop
adc
xor
jne
lahf
adc
push
sbb
daa
lea
pop
sbb
fisttpll
push
js
pop
push
add
pop
add
imulb
inc
mov
out
test
cld
imul
fildll
mov
in
out
cmpl
xor
in
mov
xchg
push
push
xchg
xor
dec
xchg
loopne
dec
ds
shlb
and
and
imul
lods
pop
sub
nop/reserved
cmp
add
jo
add
ljmp
out
testb
inc
stos
lods
cld
xor
ljmp
jp
icebp
cmp
insl
add
iret
lahf
outsl
aaa
mov
push
xor
dec
sbb
insb
inc
inc
int3
mov
out
pop
push
sbb
or
subb
mov
pop
adc
pop
or
lds
and
push
or
lds
or
mov
movsb
pxor
cmp
xchg
push
push
jmp
movsb
xor
xchg
cmc
pop
push
sub
xchg
inc
push
ss
mov
push
pop
push
cmp
mov
mov
hlt
js
cld
test
adc
add
outsl
das
fcmovb
sub
lock
or
push
or
lahf
pop
es
adc
push
mov
sub
sub
out
iret
push
fistpl
pop
out
xchg
repnz
cmpsb
imul
pop
sbb
int
dec
fcmove
imul
mov
int
add
stos
sarl
or
fcoms
out
jmp
rcrl
inc
or
cwtl
jp
fcomps
jbe
aad
pop
fsubl
mov
addl
sbb
insb
mov
and
xchg
dec
cmp
nop
dec
lock
js
nop
test
cli
sub
dec
mov
test
push
mov
insb
stc
mov
jmp
jg
sub
push
jae
std
lds
data16
test
aaa
mov
xchg
sarb
fistpl
ja
aaa
xchg
sbb
decb
fcoml
jg
test
or
jl
mov
cmp
orb
mov
and
sbb
sbb
test
xchg
mov
lods
sbb
mov
dec
mov
loopne
sbb
into
xchg
sarl
push
rclb
push
jae
mov
pop
test
sahf
out
call
movsl
and
jno
mov
lea
adc
insb
and
push
scas
stos
idivb
test
pop
shll
cs
cwtl
popa
xor
stos
rep
jb
xor
and
and
lock
and
jno
push
mov
push
iret
subb
les
lock
push
cmpsb
sbb
fimuls
cmc
aam
jmp
add
cmc
imul
mov
cwtl
add
push
ds
jg
minps
xchg
int3
mov
hlt
mov
jo
ret
inc
shlb
push
pushf
mov
repnz
mov
push
fildll
jmp
stc
pop
inc
stos
cmp
and
and
pop
jmp
mov
fistl
mov
mov
mov
xor
pop
daa
scas
je
aas
dec
cmpb
or
cmc
mov
push
xchg
xor
xchg
dec
pop
add
cwtl
imul
cmp
xor
xchg
jp
jbe
jb
test
out
cmc
push
push
test
stos
inc
std
sti
push
fs
stc
gs
dec
jmp
dec
xor
xlat
xchg
fldenv
je
push
mov
pop
dec
inc
cmp
or
out
sbb
jg
dec
push
add
pusha
sbb
sti
add
movb
xchg
jae
xchg
add
or
xorl
fwait
lea
sti
das
adc
sbb
repnz
pushl
cmp
dec
xor
jmp
dec
sbb
leave
inc
das
orb
pop
test
push
nop
dec
pop
icebp
mov
js
stos
ljmp
lea
bound
imul
icebp
rolb
dec
add
xorps
cmp
pusha
addl
cmp
mov
mov
or
push
mov
xchg
push
in
addr16
xchg
test
sbb
inc
rcrb
fdivrs
mov
fwait
dec
jo
cmp
mov
push
pop
xchg
jle
sub
stc
loop
jnp
xchg
aaa
lret
cmp
pop
and
test
insl
jmp
xchg
imul
cmp
insl
jge
dec
push
jo
mov
loopne
stos
inc
call
int
fdiv
notl
jo
mov
pop
xchg
cmp
sub
mov
mov
xchg
repz
jl
je
fsubrp
ds
xor
arpl
cmp
pop
out
stos
ds
mov
xor
fildl
and
xchg
mov
inc
mov
dec
dec
mov
mov
push
in
cmp
mov
stos
sub
add
xlat
adc
clc
insl
fistpll
incl
adc
mov
roll
outsb
or
and
and
or
mov
imul
xchg
sub
mov
movsl
add
xchg
push
ja
or
pop
test
int3
pop
cmp
pusha
lret
ret
rorb
push
and
out
xor
loop
xchg
cmc
ret
mov
cmp
aad
push
sub
stos
cmp
ds
dec
jo
iret
js
inc
cli
lods
sbb
mov
mulb
cli
pop
or
add
shrb
paddb
pushf
scas
xor
sub
bswap
lods
sbb
lret
scas
ret
nop
fcmove
mov
cmp
sbb
imulb
fcmovbe
sub
call
jb
inc
lock
adc
test
outsl
mov
ret
mov
sbb
cmp
sub
jmp
scas
int
fisttpll
mov
ret
ljmp
cmpsl
test
cmp
ds
push
push
lods
adc
add
sub
inc
outsl
in
inc
mov
adc
test
cmp
push
jns
dec
dec
adc
pop
xor
jae
or
jmp
icebp
das
push
jle
enter
push
enter
adc
sahf
add
push
push
add
sub
loopne
xchg
pusha
mov
rolb
and
fwait
adc
popa
js
dec
inc
push
shll
sub
mov
movsb
icebp
pop
adc
lods
lods
test
inc
sub
sub
mov
rcll
lahf
xor
popa
ret
pop
iret
and
jp
jno
push
sti
mov
dec
stos
pop
in
mov
js
clc
or
cltd
call
adc
sbb
lods
popf
repz
mov
sbb
mov
sub
or
cmp
inc
mov
out
cmp
int
insb
inc
jbe
inc
sahf
imul
jno
mov
test
jg
cmp
pop
test
pop
sti
mov
fucomi
aaa
xchg
ficomps
jle
mov
inc
cs
sub
pop
bound
test
mov
sub
push
pop
inc
rorl
cwtl
enter
sbb
repz
cmc
std
test
loopne
test
out
xor
push
in
mov
sub
imul
pop
adcb
lods
pop
mov
pop
pop
adc
push
adcb
ret
mov
subb
scas
cmp
nop
xchg
sub
outsl
not
jecxz
aaa
lock
into
mov
mov
push
push
faddl
lret
pop
adc
pop
movsb
aaa
xchg
insl
pop
or
mov
int3
ds
dec
xchg
inc
inc
pop
xchg
mov
push
aas
sub
or
pushf
sbb
ficoml
xor
inc
mov
xchg
cmp
test
xor
cs
sub
std
imul
push
push
jmp
ja
mov
jb
movsl
jl
out
inc
aas
mov
or
or
push
imul
push
mov
in
mov
dec
popf
iret
jl
xchg
les
jne
icebp
xor
pop
push
imul
cli
push
int
jl
outsb
xchg
push
mov
ficoms
jns
sub
dec
xor
and
mov
xchg
call
ffree
mov
out
jno
cmpsb
fwait
xchg
fadds
test
cwtl
xchg
adc
out
mov
repnz
insl
push
jo
dec
cs
adc
and
add
cmp
je
xchg
lods
pop
lods
lret
pop
lcall
add
sbb
lret
xchg
cmp
push
mov
adc
pop
inc
das
iret
arpl
popa
outsl
rcrl
push
mov
jo
scas
jno
loop
inc
into
pop
mov
add
cs
sahf
pop
push
sbb
jmp
cmp
in
dec
jne
les
les
enter
gs
lret
sbb
test
xchg
leave
or
xor
orl
sub
and
icebp
push
add
xchg
and
mov
pop
xor
nop
or
jmp
jne
ret
daa
shlb
pop
outsb
outsl
shl
bnd
pop
sbb
inc
pop
incb
mov
aaa
mov
jno
rol
inc
shll
xchg
cmp
jnp
mov
xchg
ss
jno
or
mov
sub
sahf
jecxz
bound
jmp
adc
ffreep
fstl
sub
pop
jbe
pop
pop
dec
jbe
push
inc
mov
mov
rcr
mov
pop
xor
mov
xchg
mov
sbb
in
roll
js
fcompl
leave
repnz
cmp
xchg
shlb
dec
cli
cmp
add
pusha
dec
mov
pop
mov
ret
sub
xchg
inc
mov
orl
dec
sbb
xor
dec
or
mov
xchg
and
cmp
xor
mov
jo
popf
jecxz
insb
xchg
pusha
cltd
lea
and
xchg
jns
movsl
dec
mov
push
shll
xor
daa
aam
lret
pushf
pop
imul
cmp
jne
sbb
xor
aam
sub
imul
sbb
outsl
jbe
in
cld
stos
push
xchg
pop
ret
scas
pop
cmpsb
or
pop
jg
jle,pt
xor
int3
lret
add
xor
pushf
scas
fstps
mov
sbb
sbb
arpl
insb
lcall
xor
xlat
data16
sub
repnz
mov
cmp
mov
mov
adc
ret
cwtl
dec
dec
ljmp
popa
sub
push
pop
sbb
adc
in
jnp
test
in
es
sub
test
mov
ret
call
mov
daa
lods
rcrb
inc
into
pop
mov
mov
add
adc
mov
test
mov
mov
out
push
or
sub
xchg
add
jo
fidivl
push
push
into
or
xor
pop
imul
fcomps
test
imul
int3
fidivrl
je,pn
xchg
enter
push
movsb
pop
aam
test
subl
test
push
xchg
loopne
dec
xchg
adc
subl
incl
les
xchg
out
jae
push
loop
test
mov
imulb
or
sub
mov
push
icebp
fwait
bound
xchg
insb
sub
popf
jge
lahf
int
fsubl
ja
and
xchg
sub
push
popa
cmpsb
push
pop
mov
cs
dec
cmp
xchg
and
in
imul
inc
dec
loope
xor
push
jnp
sub
xor
popf
push
cmp
and
push
or
pop
pop
add
andb
xor
stos
gs
sbb
clc
push
push
arpl
cmp
cli
mov
push
pop
pop
dec
xchg
stos
push
mov
cmp
das
cltd
pop
iret
sbb
daa
pusha
mov
arpl
rorl
jge
inc
xor
hlt
sbb
mov
and
icebp
ret
aad
cltd
mov
icebp
out
mov
pop
stc
inc
pushf
sahf
adcb
and
shlb
sbb
and
sti
inc
cmp
out
inc
xlat
jne
sbb
xchg
hlt
push
mov
loop
out
jno
and
dec
test
xor
vsqrtpd
out
das
in
insl
std
jo
and
jns
dec
or
push
jo
in
sub
mov
push
shrl
out
pop
les
imul
mov
cmp
test
shrb
or
ja
cmc
movsb
pop
js
push
cs
dec
lods
lea
xor
lea
mov
and
pop
pop
xchg
subl
jb
arpl
adc
sub
inc
shll
and
movsb
iret
jmp
je
push
jge
xchg
and
jbe
dec
add
bound
sbb
cmpsb
stos
or
add
sbb
int3
punpckhbw
lret
imul
loop
shr
scas
rcll
sahf
mov
xlat
out
mov
inc
mov
in
and
addr16
andl
ds
xchg
test
sbb
push
xlat
add
add
cmp
dec
and
add
xor
cmp
outsb
mov
mov
xchg
sbb
pop
scas
push
stc
cmpsb
in
mov
cmp
jns
mov
mov
std
jns
push
pusha
nop
ficoms
mov
inc
push
add
fidivrs
aas
fldcw
mov
test
cmpsl
jb
push
add
push
ret
xor
fsubs
and
cmp
test
cmp
xorb
or
mov
push
mov
push
mov
test
and
mov
jp
mov
fldcw
es
add
cmp
cmp
xor
cmpsl
fsubr
std
sub
insl
call
push
xor
test
scas
mov
fwait
ss
mov
and
repnz
in
sub
repz
inc
pop
or
jo
cmp
add
out
ljmp
or
adc
ret
fldenv
xchg
inc
mov
sbb
pop
mov
add
lret
test
cwtl
sub
out
cmp
movsb
xor
push
mov
out
mov
lret
lret
dec
inc
dec
aaa
or
inc
mov
daa
pop
cmpsb
jg
sti
push
bound
jne
pop
pop
cwtl
push
adc
icebp
jbe
repnz
dec
sar
lock
pop
aaa
call
hlt
dec
pop
xchg
jg
in
add
pop
fadds
cwtl
and
cmp
jnp
dec
mov
sbb
jno
leave
rcr
dec
icebp
fidivrl
cwtl
xor
push
pop
scas
popa
repnz
xchg
mov
adc
xor
push
mov
pop
stos
mov
sub
iret
add
das
idivl
push
add
sub
adc
cmp
je
xchg
or
dec
int
sbb
push
mov
sub
nop
arpl
push
std
xor
push
daa
scas
xor
imul
cli
dec
pop
mov
and
lret
push
cmc
push
mov
aam
jle
jg
sbb
jl
sub
movsb
xor
aam
fcoms
adc
xchg
pop
daa
jne
cld
or
adc
ror
sub
outsb
clc
fdivs
push
push
jns
pop
mov
mov
addr16
xchg
outsb
shll
in
jae
adc
movsw
mov
ja
add
xor
adc
lret
les
stos
adc
lret
out
sbb
adc
pop
xchg
insl
fsubs
fisttpll
or
xor
inc
mov
icebp
mov
cld
mov
and
es
sahf
mov
push
adc
jg
std
push
js
or
mov
lahf
add
mov
or
faddl
pop
in
inc
scas
and
in
ja
insl
or
and
es
test
js
jnp
scas
fsubrs
aaa
jg
dec
sub
push
push
push
shll
test
es
ja
icebp
xchg
pop
push
mov
mov
sti
iret
xchg
scas
adc
add
add
mov
fidivl
and
xor
sbb
jo
pop
dec
in
push
jl
inc
xchg
mov
xor
xchg
mov
addr16
pop
xchg
push
inc
xchg
add
inc
and
push
into
sbb
or
mov
das
iret
xchg
and
xlat
shll
stos
cli
adc
push
xchg
fcomps
xchg
insl
sbb
cmp
mov
mov
sub
sahf
jno
push
adc
popf
dec
ret
in
vprotb
adc
scas
inc
js
dec
dec
mov
cmpsl
mov
mov
nop
mov
stos
fdivs
push
xor
arpl
rcrb
push
dec
ret
dec
imul
icebp
cmp
loope
cli
jo
and
xor
jp
xor
jl
xorb
outsb
rorb
aam
push
add
aam
push
jmp
or
push
push
sub
pop
aas
push
dec
pop
push
sub
cmp
jnp
xor
outsb
jge
popf
or
push
leave
test
andl
mov
adc
cwtl
push
push
push
cmp
pushf
sbb
cmp
inc
add
inc
lret
cmc
lret
add
iret
pop
add
mov
xchg
sbb
xchg
les
or
add
enter
jb
push
andb
xlat
sbb
in
repz
ret
jecxz
lcall
push
adc
ror
pop
imul
daa
jo
mov
cwtl
icebp
jecxz
xorb
push
pop
adc
adc
gs
pop
sbb
lahf
adc
sub
dec
icebp
cmp
sarb
push
lea
and
xlat
dec
jns
push
inc
fisubs
pop
das
pop
addr16
push
inc
test
or
cs
adc
hlt
pextrw
dec
pop
mov
incb
or
scas
cs
mov
fisttpl
ljmp
jp
mov
cmp
jns
mov
sahf
xchg
nop
push
push
sub
scas
sub
loop
imul
mov
scas
mov
xchg
adc
jmp
inc
add
inc
inc
push
mov
out
push
dec
xor
dec
out
arpl
or
icebp
loop
xchg
mov
sub
hlt
mov
or
sti
icebp
xchg
cmpsb
xor
bound
cmpsl
imul
imul
and
xchg
lcall
and
fisttpll
mov
sub
mov
xchg
repz
cli
jbe
arpl
cmp
xor
sub
adcb
dec
out
mov
or
xor
push
sbb
sbb
sub
sbb
cs
dec
dec
dec
and
jp
flds
xor
inc
movsb
dec
stc
nop
push
xchg
add
sbb
outsb
mov
dec
mov
cmp
repnz
gs
test
pop
mov
scas
xorl
test
pop
sti
lea
std
ja
adc
fmuls
shrb
std
xchg
fistps
icebp
xchg
jmp
test
jmp
push
sbbb
sub
orl
lret
stos
out
sub
pop
gs
je
in
sbb
insb
nop/reserved
xor
xchg
mov
hlt
outsb
dec
loopne
nop
andb
mov
mov
and
leave
gs
mov
jle
lods
dec
or
frstor
mov
sub
mov
subl
jmp
flds
ja
aam
test
push
xor
lahf
movsb
push
pop
sbb
stos
addr16
fldenv
aad
rcr
out
add
ficoml
shrl
sti
push
in
xor
sub
push
cld
lea
sahf
jg
ret
mov
sbb
sbb
fsubl
fwait
movb
fs
out
test
not
jo
loop
scas
and
out
js
xchg
lret
push
cwtl
loop
sub
pop
pushf
jae
mov
inc
or
xlat
xor
pop
repz
dec
loopne
cmp
adc
outsl
stos
cwtl
mov
gs
push
test
addr16
mov
in
cmp
push
scas
xchg
ret
aam
test
dec
outsb
inc
mov
test
out
shlb
xchg
arpl
out
sub
lret
les
jl
mov
int3
xor
rorl
jge
imul
sub
cli
mov
jns
and
enter
in
xor
push
jno
push
es
sti
pop
rcrb
jno
test
jg
mov
cmc
xchg
xchg
daa
daa
xor
sbb
pop
sbb
je
pop
repz
ss
xchg
pop
jb
sub
xchg
xchg
nop
hlt
pop
xchg
push
and
out
rcrb
push
scas
daa
lahf
icebp
ret
adc
xchg
lea
hlt
rorl
mov
into
sbb
std
sub
ljmp
push
mov
inc
push
mov
fcoml
inc
idivl
lea
adc
jae
stc
mov
lret
aad
lods
jge
push
xor
pop
ljmp
inc
inc
stc
push
aam
jbe
mov
adc
clc
mov
fdivrl
dec
mov
pop
jnp
adc
popa
add
popf
push
sbb
imul
js
dec
sbb
loopne
mov
scas
jle
inc
lret
dec
add
inc
sti
adc
inc
outsb
int3
mov
cmp
pop
outsb
js
cs
and
cs
xchg
pop
xor
lahf
mov
and
pop
push
adc
ficoms
mov
mov
push
into
xor
inc
iret
pop
jnp
loop
lock
js
jecxz
or
jbe
push
or
mov
cld
and
aaa
mov
push
nopl
inc
cmp
rcrb
fnstenv
hlt
gs
jbe
mov
sar
or
xchg
cmp
mov
lret
push
push
sbb
mov
pop
push
or
sub
paddsw
js
xor
adc
adc
push
sbb
mov
xor
shl
iret
int3
mov
sbb
ret
xchg
mov
out
jo
add
test
mov
scas
imul
pop
adc
pop
push
sahf
imul
mov
fdivl
mov
jo
mov
mov
jge
add
mov
ret
inc
pop
dec
cmpsl
dec
jl
ss
jmp
dec
cmpsb
imul
cs
xchg
mov
mov
sbb
insl
adc
aaa
adc
xchg
daa
popf
bound
pop
aad
test
mov
std
cmpsb
cmp
lahf
inc
lock
jge
shll
adc
xchg
flds
fidivrl
push
faddp
insl
pop
xor
jecxz
mov
xchg
jl
out
mov
sub
xchg
push
inc
jmp
adc
insb
or
sub
adc
mov
jp
fnstenv
sub
fadds
xchg
xchg
cmc
stos
testb
xor
mov
das
jb
mov
repz
inc
enter
mov
nop
adc
cmpsl
adc
xor
fdivrs
jno
cmpb
test
scas
out
mov
xchg
sub
fbstp
sub
mov
xorb
or
ss
or
jno
fists
push
aam
and
or
aam
inc
pop
into
pop
jmp
stos
aaa
out
push
fwait
inc
jecxz
orb
insb
push
mov
testb
xor
jge
push
or
push
pop
in
jge
lret
adc
and
pop
push
sahf
or
and
popf
subl
inc
jp
dec
dec
stos
mov
push
jmp
scas
xchg
ret
cltd
stos
push
popf
insl
push
push
or
or
inc
sti
xor
aad
sbb
lcall
cs
cld
push
inc
daa
icebp
enter
cld
push
repz
leave
inc
rclb
pop
xor
mov
jo
loope
fcom
adc
pop
mov
fisttpl
insl
jle
jne
and
cmc
enter
push
fs
enter
das
mov
sbbb
mov
cmp
pop
mov
push
fcoml
push
dec
dec
imul
int
dec
push
push
mov
pop
fs
jns
nop
into
pop
aaa
sti
fwait
pop
rcl
sbb
popf
xor
in
sahf
add
dec
pop
mov
adc
dec
test
daa
dec
and
divl
das
xor
inc
fld
lahf
lret
dec
popf
dec
and
dec
adc
add
scas
xchg
and
push
jae
jg
adc
or
popf
sbb
pop
rcl
popa
dec
ret
stos
push
scas
shrb
pop
cmpb
fmuls
mov
sbb
pop
cwtl
cltd
aad
stos
outsb
mov
out
in
add
sub
nop
mov
test
iret
out
cmp
nop
enter
mov
into
or
xchg
idiv
out
xchg
cmp
nop
or
test
lods
dec
lahf
mov
dec
cmpl
sbb
pusha
out
mov
addr16
xchg
popa
test
or
frstor
or
cmp
pop
push
repnz
push
pop
add
in
and
sbb
ja
shrb
sub
pop
sbb
inc
outsb
imul
negb
jbe
push
inc
mov
push
out
cmp
lock
cmc
jnp
ret
mov
je
pop
outsl
jo
jge
xchg
inc
xlat
inc
les
jnp
pop
pop
mov
mov
mov
std
add
mov
popf
dec
call
pop
push
aaa
sbb
rcrl
vxorps
pop
mov
fcomps
ret
mov
movsl
and
in
push
ret
mov
push
call
add
aas
pop
mov
and
jle
cmpl
mov
gs
push
fldt
push
add
sub
insb
mov
push
out
xor
std
pusha
or
jecxz
test
ret
mov
hlt
dec
adc
cld
mov
ds
push
call
jb
jae
std
mov
aad
mov
insb
mov
mov
push
movsb
test
adc
inc
fstpl
add
pop
pop
mov
es
clc
clc
inc
loope
xor
add
loopne
pop
rorb
mov
fs
nop
push
stos
pop
in
push
in
adc
pop
sub
je
sub
xor
sub
pop
pusha
sbb
mov
or
sti
mov
jmp
mov
push
push
sub
fisttps
lcall
movsl
mov
mov
test
cs
push
lret
jae
or
push
mov
in
scas
lcall
fmull
jge
cmpb
jmp
sahf
test
mov
cmp
loopne
int3
push
insb
xlat
rcr
pusha
push
das
test
nop
mov
scas
cltd
das
jg
faddl
out
mov
pop
inc
lock
inc
inc
lret
test
cmp
outsl
subl
or
add
jmp
in
add
sbbl
dec
test
ds
das
push
fidivl
jp
and
punpckhbw
mov
and
push
into
das
jmp
movsl
jecxz
int
cmp
xchg
xchg
inc
xchg
mov
imul
dec
xchg
sbb
rorl
in
or
xlat
mov
cmp
cmp
rcrb
or
and
dec
jecxz
or
ret
sbb
sbb
std
mov
pop
aad
es
rorb
scas
fmuls
lock
insb
adc
inc
fcomps
sbb
scas
push
jno
mov
jle
aad
das
mov
ret
movsb
push
sub
xchg
mov
subb
inc
ja
lret
js
or
clc
cmp
push
cwtl
xchg
and
ljmp
jb
shll
pusha
sbb
rorl
mov
scas
xor
and
cld
mov
jno
in
mov
dec
shll
jle
jle
es
push
mov
and
lret
dec
xchg
sub
sub
xchg
gs
sub
stos
insl
sbb
xor
add
loopne
cwtl
int3
fistl
add
scas
je
hlt
pop
gs
enter
inc
jmp
pop
repz
mov
das
xchg
iret
add
adc
and
xor
stos
mov
arpl
add
jno
loop
jo
movzwl
xlat
jmp
inc
imul
das
push
dec
jo
add
mov
rolb
xchg
repz
mov
hlt
mov
xor
not
pop
mov
negl
lea
add
nop
out
cwtl
inc
xor
repnz
stc
inc
insb
mov
xor
hlt
dec
out
push
sbb
pop
push
shrb
loope
pop
jg
test
mov
sbb
sub
iret
mov
xor
nop
ja
cmpsb
jno
mov
aas
jo
dec
lods
cltd
mov
sbb
mov
fidivs
fs
fcomps
mov
fisttpl
stos
mov
and
mov
loopne
mov
adcb
in
inc
sbb
repz
mov
rorl
jnp
lods
and
dec
mov
das
cmpb
fsts
mov
das
xchg
xor
push
popl
cmc
push
dec
into
cmp
scas
add
add
in
je
in
mov
in
lods
testl
inc
or
out
xchg
dec
ror
icebp
andb
js
roll
pop
dec
jo
divb
nop
add
pop
mov
pushf
scas
repnz
outsb
inc
test
sub
mov
sbb
add
mov
outsb
in
push
sar
mov
ret
fcompl
xor
push
jae
sub
push
loop
nop
mov
xchg
pop
sub
into
and
lds
sbb
scas
imul
clc
pop
mov
inc
int3
test
cld
pop
ret
sub
mov
xor
push
popf
pop
mov
lahf
js
or
pushl
andb
insl
cli
clc
clc
mov
shl
fstps
inc
stos
test
xor
bound
loop
aaa
loopne
ljmp
dec
pop
daa
fadds
mov
ja
insb
rolb
adc
fmull
inc
fdivl
add
js
insl
push
sti
push
in
push
push
cmp
call
cmp
std
es
testl
rol
insl
jae
xchg
sub
lret
daa
scas
mov
sbb
ret
aad
xor
mov
scas
push
ds
push
scas
xchg
sbb
xor
pop
daa
mov
pop
cltd
repnz
pop
mov
mov
jae
into
pop
out
xor
push
stos
dec
adcl
mov
mov
pop
xchg
sbbl
gs
ja
jbe
dec
adc
bound
das
icebp
cmpsb
imull
jecxz
in
mov
mov
sbb
movl
outsl
pop
push
mov
popl
cmp
mov
lea
add
imulb
jl
or
test
add
shll
lock
adc
mov
push
fisttps
mov
and
push
sbb
cmpsl
push
inc
xor
cld
add
ds
sub
push
insb
jae
inc
lods
xchg
adc
gs
popf
add
rclb
and
xchg
mov
sub
lcall
jb
pop
inc
lods
sbb
xor
fstpl
jecxz
dec
mov
mov
orb
es
sub
dec
adc
mov
add
mov
xchg
sub
je
sbb
dec
jne
cli
stos
js
xchg
iret
pop
xor
gs
xorb
fmuls
stos
jmp
dec
sbb
call
and
sahf
lahf
adc
test
sbb
mov
lcall
hlt
xor
mov
and
orl
arpl
jae
and
clc
fsubrs
insl
rcll
movsl
loope
out
mov
mov
adc
lret
je
lret
ss
cli
push
sub
or
pop
push
inc
jmp
inc
daa
push
and
sahf
cmp
sub
mov
jns
subb
lods
push
pop
pop
and
adc
inc
ss
mov
fildl
push
in
xchg
mov
push
adc
pop
pop
stos
cmp
add
jmp
xchg
push
adc
mov
popf
pushf
lods
sbb
push
cwtl
nop
xor
add
xor
cmp
out
ljmp
insb
shlb
lret
cs
cmp
sahf
push
and
add
orb
rcll
push
outsl
out
fstps
outsb
das
das
decl
xor
shlb
mov
xlat
sub
das
movsb
xchg
pop
sub
das
pop
test
roll
repnz
adc
rcrl
dec
cld
mov
sbb
pushf
dec
inc
jge,pt
aam
cld
arpl
jns
test
lods
adc
dec
das
mov
mov
push
pop
push
inc
lret
xlat
popa
lock
repz
xor
cmc
and
jo
pop
ds
aaa
xchg
xor
addr16
ret
add
outsl
dec
mov
data16
scas
xchg
pop
xor
mov
jo
push
cmp
xor
shll
out
scas
dec
fldl2e
in
dec
push
mov
int3
outsb
inc
xor
clc
mov
subb
addr16
xor
mov
xchg
mov
push
pop
nop
sub
xchg
ss
bound
or
out
pop
fists
lods
dec
daa
out
cltd
dec
decl
push
adcl
in
xchg
jbe
sbb
adc
test
sbb
mull
add
or
pop
push
je
insb
dec
aaa
jbe
push
sub
jae
cltd
or
push
jecxz
cmp
push
push
push
fwait
ret
daa
xor
cmp
mov
mov
push
inc
mov
outsl
fstpt
xor
mul
inc
popf
mov
les
mov
movb
xor
ja
fstps
stos
and
mov
xor
scas
stos
das
push
mov
cmp
inc
das
scas
dec
out
or
repz
lea
jg
lds
pop
mov
pop
mov
fldt
test
mov
push
test
add
push
push
pop
das
sub
repnz
outsb
push
add
jp
aad
es
fsts
movsb
and
les
int3
enter
dec
fcoms
sub
and
repnz
sub
jecxz
cli
mov
cld
mov
dec
cmp
in
mov
jle
pop
cs
pop
mov
sub
cli
mov
push
jns
sbb
xor
pop
lds
add
leave
sbb
mov
sbb
dec
popa
das
movsl
mov
and
pop
sbb
pop
hlt
insb
jle
dec
xlat
subl
in
or
mov
pop
xchg
incl
jae
daa
popa
cmp
ret
cmpsl
in
sub
dec
sbb
jbe
fldt
in
jp
dec
pop
mov
roll
lods
cli
stos
das
stc
xlat
pop
push
inc
xor
push
sbb
sub
or
lods
enter
jle
cwtl
adcb
mov
fnstenv
clc
scas
mov
or
data16
inc
xor
cmp
xor
push
inc
stos
test
push
nop
jge
rolb
stos
sub
and
pop
pop
int
push
lock
cmpsb
divl
jnp
add
in
mov
mov
xlat
mov
cmpsb
xchg
int
in
shlb
xchg
dec
into
shll
fdivrl
jle
das
mov
fwait
mov
mov
rcr
popa
stos
ss
shlb
imul
sub
call
and
sbb
push
pop
adc
or
mulb
loope
repnz
cwtl
mov
or
pop
push
pusha
test
push
inc
and
xchg
pusha
mov
xchg
push
outsl
xchg
jo
pop
xchg
cmp
ret
sbb
push
mov
sub
mov
sti
mov
xchg
lds
call
aas
das
int
shll
scas
aam
ret
jle
xor
int
push
iret
adc
fidivrs
and
ret
arpl
sbb
fisubrs
out
sarb
inc
add
adc
mov
lds
jmp
movsl
dec
or
lock
iret
movsl
inc
cld
add
aam
aad
leave
mov
pop
push
test
nop
mov
and
mov
lahf
mov
or
cmpsl
sahf
or
cmpsl
ds
inc
idivl
push
jmp
mov
push
jg
adc
dec
out
push
in
mov
push
lods
enter
mov
jae
std
and
mov
orb
dec
in
sbb
push
pop
sub
shl
and
in
insl
rorl
dec
out
mov
lods
into
and
fcoms
movsb
add
mov
jb
jmp
push
or
int3
mov
gs
push
xor
pop
xor
nop
adc
push
xor
lret
lea
pusha
sbb
pop
rcrb
adc
int
xchg
jns
cmpsb
xchg
xor
adc
pop
pusha
xchg
pop
aas
adc
fstpt
adcb
icebp
js
repnz
movsb
mov
xor
mov
out
inc
cmpsl
and
outsb
xchg
pop
out
jb
gs
push
int
jmp
or
mov
xchg
and
fistps
das
lea
push
in
inc
jg
pop
scas
jg
jno
ds
jne
stos
cmp
andb
out
or
mov
adcl
aaa
out
xchg
sbb
sub
mov
das
push
xorl
jle
pop
rcrl
cmp
jae
rcl
push
sub
inc
in
push
and
loope
frstor
push
push
shll
xlat
mov
pop
jbe
out
test
insb
into
iret
ret
clc
cmpsl
pop
xor
int3
mov
dec
test
mov
mov
test
test
stos
mov
pushl
jnp
jo
lret
adc
sbb
cmp
js
roll
mov
push
sti
xchg
das
or
adc
inc
inc
scas
push
or
push
add
fisubs
cmp
popa
push
lods
ljmp
aam
sbb
jb
jle
push
fstps
jecxz
sbb
outsl
mov
outsb
jb
mov
lea
shrb
dec
lahf
push
jno
ficompl
in
arpl
ja
mov
sub
outsb
dec
jno
cmpsb
sub
rolb
inc
cld
or
adc
jl
out
jle
js
jo
sbb
fistpl
jb
jge
cmp
push
lret
jne
rcrl
xchg
mov
ljmp
sub
and
scas
jno
jbe
ss
push
fnclex
push
or
call
inc
test
lods
push
je
cli
xchg
mov
call
rorl
ja
aaa
push
sub
cs
lahf
data16
push
add
les
or
or
fiadds
addr16
add
outsl
out
movsl
int3
shll
call
mov
and
sub
cmp
jbe
jnp
mov
push
incl
jnp
xchg
loope
jl
aam
mov
xchg
xchg
cmp
test
inc
jb
sarb
pop
insl
dec
add
wrmsr
jns
cmpsl
movsl
xor
push
repz
rcrb
popa
enter
fistl
push
xchg
les
aam
xor
hlt
hlt
xchg
inc
lods
push
cmp
mov
sar
stos
lods
scas
xchg
andb
mov
or
dec
xchg
mov
test
inc
das
inc
fmuls
push
xor
inc
fcomps
sarl
imul
popf
jecxz
xchg
pop
into
test
mov
mov
nop
dec
imul
jns
mov
enter
das
sahf
and
fstpl
stc
sub
enter
sahf
and
cmp
sub
sbb
dec
outsb
and
push
mov
mov
pop
push
lods
cli
push
loopne
push
movsl
ds
adc
addr16
sahf
es
pop
arpl
xor
enter
lret
jb
fcoml
adc
jg
jb
scas
fadds
adc
js
cli
loope
mov
cmpsl
push
out
div
rorl
sub
int3
inc
repz
dec
inc
jg
adc
inc
aaa
mov
push
fldl2t
rcll
push
rorb
leave
push
jg
ja
call
stos
mov
arpl
push
mulb
cmc
cwtl
push
jne
sti
mov
jb
rcll
mov
faddl
pusha
mov
aaa
and
xchg
inc
scas
test
adc
or
xchg
inc
lcall
adc
pop
xor
add
mov
ret
dec
pop
xchg
or
jbe
xor
outsl
hlt
orb
adcl
mov
ja
xor
xor
xor
xchg
xor
inc
mov
mov
dec
and
cmp
push
xor
lods
lcall
mov
jne
mov
xchg
ds
js
sub
lds
daa
cltd
aam
pop
cmp
fwait
out
mov
scas
mov
jp
popa
push
dec
sti
pop
stos
incb
test
in
xor
sub
jg
cmp
insb
mov
leave
ret
outsb
out
push
daa
mov
sub
test
dec
les
mov
arpl
rolb
mov
mov
pop
call
enter
cmp
xchg
adc
fs
or
incb
jmp
fwait
aas
xor
push
insl
pop
mov
fs
pop
cwtl
scas
repnz
jge
push
call
ss
add
nop
cwtl
jns
push
push
cmp
jecxz
xchg
and
xchg
and
add
loopne
mov
test
push
cli
push
je
mov
cmpsb
repz
push
sti
nop
xchg
orb
faddl
adcb
pop
das
andl
fwait
inc
or
xor
popa
pop
in
sbb
hlt
sub
push
mov
push
jp
push
xor
out
icebp
hlt
movl
inc
shl
pop
xchg
cltd
cmp
dec
ret
push
pop
call
fildl
add
jge
mov
xchg
repz
push
gs
inc
mov
fdivs
cwtl
inc
sbb
icebp
adc
jecxz
test
xchg
and
jge
mov
test
into
push
jecxz
pop
lds
jle
pusha
xchg
cmp
les
decl
xor
jae
scas
lret
out
sbb
sbb
js
lea
out
or
and
pop
cwtl
cmp
dec
jp
lods
jbe
or
sbb
cmpsl
cmpl
pop
adc
ret
lret
sbb
adc
fldenv
push
cmpb
jg
mov
scas
push
push
cwtl
cmp
mov
imul
aam
imul
push
clc
leave
inc
pop
jnp
push
rorl
mov
lds
adc
outsb
imul
mov
xchg
scas
mov
adc
and
adc
fimull
pop
mov
les
xor
cwtl
jns
enter
ret
scas
mov
nop
mov
insb
shrl
inc
jne
sub
jno
lret
add
int
jl
xor
cmp
xchg
testb
fsubrs
add
push
xor
mov
jecxz
dec
dec
pop
adcl
and
es
scas
inc
loope
test
push
cmp
inc
pushf
cmc
pop
ds
inc
icebp
jnp
cs
push
push
dec
dec
fists
cmp
sti
lock
cli
xchg
mov
push
popa
fstl
mov
push
nop
xor
pop
clc
dec
aam
movsb
mov
pop
cmp
vaddpd
and
popf
and
adc
loop
enter
pop
das
std
or
mov
insl
mov
push
pop
sbb
rcll
sub
cwtl
pop
ja
mov
fistl
adcl
fwait
jnp
push
scas
jo
pop
sbb
rcrb
adc
and
dec
andb
mov
faddl
es
and
mov
add
push
push
and
jno
inc
clc
movsl
rcr
gs
mov
decl
mov
xchg
push
in
imulb
cmp
cmpl
add
imulb
addr16
mov
sbb
add
sub
outsl
push
dec
lahf
or
leave
jl
ficomps
das
mov
sbb
cld
mov
cli
scas
inc
mov
insl
dec
xchg
xchg
lods
xor
mov
int
mov
lods
xchg
adc
shll
pop
cmp
cmp
lret
dec
push
add
xor
in
loopne
test
les
mov
dec
pop
cmp
xor
xlat
sub
std
mov
popl
or
sbb
cwtl
lret
sbb
sti
sbb
push
enter
adc
adc
andl
jns
mov
imul
in
loope
orl
push
or
rclb
dec
mov
add
cmc
rcrl
pop
jae
sbb
sub
fisttpl
xor
jns
sub
aaa
outsl
lods
cmpsb
pop
in
inc
mov
and
pop
bound
dec
dec
cltd
xchg
mov
add
push
rorb
xor
mov
add
add
inc
popa
rorl
pushf
pop
mov
sti
pop
sbb
nop
sti
add
mov
inc
loope
stos
add
sarl
adc
and
jl
push
sub
xor
add
test
insl
jmp
dec
cmpsb
dec
mov
ret
lahf
push
push
push
add
mov
jb
mov
dec
adc
outsb
pop
int
dec
dec
into
mov
scas
aas
aam
xor
imul
jae
shll
fmuls
sti
jbe
push
sub
jg
sub
sbb
js
adc
xor
clc
sbb
arpl
aas
in
scas
jns
arpl
adc
adcl
je
bound
mov
sub
sub
mov
lea
scas
pop
loope
cmc
js
add
divb
or
popa
or
fadds
xchg
xchg
or
cld
jb
add
pop
ja
sbb
and
stos
lods
mov
xchg
shll
mov
shll
aam
es
es
mov
xchg
or
mov
clc
cmpsl
pop
lahf
rcrb
jecxz
sahf
cwtl
push
cmp
mov
push
fwait
mov
pop
mov
dec
sbb
imul
dec
testl
mov
pusha
mov
sbb
cltd
add
outsl
add
in
outsb
and
xchg
sbb
add
cmp
lock
cmp
xor
or
sbb
dec
push
sbb
dec
fisubrl
les
ljmp
insb
pop
adc
stos
lock
add
mov
adcb
in
idiv
jl
add
push
je
shll
mov
cmpsb
and
inc
push
mov
ret
rclb
sbb
jp
add
mov
dec
xor
addr16
cmp
inc
pop
dec
rorl
mov
mov
lods
mov
jb
imul
and
xchg
je
das
inc
mov
mov
orb
cmp
xor
jns
mov
xlat
repz
stos
sbb
rclb
mov
push
outsb
mov
enter
inc
cmp
dec
nop
imul
mov
sub
inc
xlat
call
fldl
sbb
mov
or
loope
test
pcmpgtd
dec
sbb
jne
jg
mov
bound
sub
popf
bound
bound
xchg
fistps
xchg
cli
nop
ret
popa
scas
xor
in
clc
clc
enter
fisubrl
push
test
mov
sbb
xor
in
outsb
pop
fnsave
dec
add
jbe
negl
arpl
arpl
jge
mov
mov
pop
or
mov
sub
mov
xchg
mov
arpl
scas
cmpsb
xor
aas
push
sbb
iret
int3
std
repnz
xor
cmc
push
mov
adc
and
cmp
mov
adc
jge
pop
lcall
pop
xchg
sub
arpl
sbb
and
pop
and
aad
jns
pop
pop
cmpl
jno
out
imul
nop
ss
xor
or
stos
divl
negb
xchg
fbld
lods
jg
sub
mov
push
imul
test
sbb
leave
and
mov
inc
out
test
push
cmpsl
fidivrl
mov
das
pusha
xchg
adc
hlt
mov
sti
ljmp
outsl
repnz
loope
cmpsb
inc
xchg
xchg
xorl
xor
push
xchg
js
sub
je
jnp
das
dec
cltd
insb
mov
scas
push
call
pop
push
pop
mov
and
push
dec
jnp
mov
movsl
jmp
insb
push
mov
dec
jmp
je
shrl
xor
fstl
push
mov
sbb
xor
sub
push
pop
dec
adc
mov
adc
pusha
test
ret
inc
cmp
sub
popa
jmp
sahf
inc
stos
adc
jbe
aaa
mov
hlt
jnp
sbbl
in
push
sub
jne
jmp
dec
fcmovne
addr16
std
sbb
cmpsl
ss
outsl
in
cwtl
cmc
test
dec
enter
jnp
dec
and
lcall
addr16
or
lret
movsl
add
int3
jae
jo
sub
fstpl
shrb
sub
out
pop
mov
int3
sub
aad
cmp
xor
xor
pop
sub
jmp
call
rolb
test
sub
dec
cmp
ss
stos
mov
mov
into
jo
push
stc
pop
mov
cmpsb
popf
pop
jne
orl
xchg
scas
mov
fcmovnbe
mov
jne
pop
pop
sahf
lods
popa
cmpsb
popf
push
add
rcrb
sub
cltd
sbb
push
lods
dec
es
inc
das
das
popf
or
add
lock
outsl
dec
pop
or
mov
inc
adc
pop
jge
out
push
mov
pop
sub
xchg
push
ficompl
and
mov
fisttpl
pop
mov
add
jne
sub
outsb
aaa
xchg
dec
dec
sub
lret
xchg
jnp
jne
mov
sbbb
pop
out
inc
push
cmp
test
push
jno
shr
nop
sbb
repz
stc
aam
sbb
in
insl
sbb
pop
scas
add
add
xchg
lahf
lods
notb
ja
or
adc
and
inc
dec
std
mov
inc
push
outsl
mov
sub
jp
lods
shrb
pop
cli
movsl
jl
jae
jle
jecxz
cwtl
xchg
cs
jb
and
lods
push
dec
outsl
mov
les
push
shl
icebp
popa
dec
add
jns
call
sub
stc
jne
rcrb
xor
rorb
add
cmpsl
int
out
popf
mov
fdivrl
push
aam
jbe
aaa
mov
jnp
mov
stos
mul
sub
mov
in
and
mov
data16
inc
pop
sub
xor
push
enter
insb
add
jle
or
insb
mov
and
mov
adc
and
dec
pop
jge
sub
mov
dec
xchg
lds
push
test
xchg
sbb
and
adc
sbb
cvtps2pd
adc
xchg
fisubl
jecxz
lock
fimuls
cmc
and
scas
movsb
mov
icebp
rcll
leave
cwtl
mov
pop
das
ds
cld
push
shll
in
in
ja
push
arpl
pushf
xorb
jbe
stos
lcall
xlat
mov
fsubrs
push
xor
js
inc
popa
mov
mov
inc
popa
and
jbe
mov
inc
cs
in
jno
ret
scas
push
push
sub
arpl
xchg
cli
push
loopne
ret
cmp
icebp
cs
mov
dec
xor
xor
dec
notl
outsl
lds
xchg
cs
xlat
xor
push
call
xchg
xchg
les
lcall
add
adc
push
or
dec
inc
int3
cld
jne
inc
shll
xchg
cmpsb
lea
push
icebp
xor
and
scas
outsl
dec
mov
sets
jp
mov
mov
mov
scas
xchg
test
mov
pop
data16
or
hlt
mov
and
xor
cli
push
add
loop
jmp
cltd
ffree
mov
das
push
pop
dec
movsl
shl
fidivl
jge
pushf
xor
in
lods
jns
in
icebp
out
cmp
dec
vmwrite
jecxz
shr
imul
cmp
dec
add
fisubrl
icebp
icebp
test
jns
andl
dec
mov
jge
push
push
or
add
loop
dec
imul
pop
icebp
gs
or
insb
pop
xor
and
add
das
in
les
in
inc
and
sbb
and
lret
enter
jp
sbb
adc
dec
fidivrs
lret
jb
rcrb
mov
mov
xorb
and
lock
inc
scas
push
test
mov
andb
sbb
popf
pushf
hlt
cmpsb
insb
dec
sub
mov
and
scas
stc
jmp
inc
les
cmp
pusha
push
rclb
lahf
xor
les
testb
adc
push
ret
push
push
dec
jne
sbb
sbb
nop
lahf
bound
and
pop
sub
push
loop
imul
int
mov
out
iret
xchg
repnz
imul
add
into
popa
mov
stos
std
clc
je
fs
movsb
jge
nop
mov
dec
mov
in
mov
sbb
dec
push
xchg
lahf
dec
mov
xlat
ja
arpl
jmp
mul
je
xor
adcb
jmp
jge
stc
and
add
test
xchg
and
incl
adc
aaa
mov
and
hlt
das
sbb
pop
loope
daa
cmp
inc
inc
addr16
ja
adc
jg
ss
cmc
lcall
push
scas
adc
out
jg
xlat
insl
mov
or
xchg
fs
test
aad
clc
adc
insl
sub
sub
jmp
fxch
adc
push
mov
sub
sbb
pop
adc
mov
test
push
out
int
or
mov
inc
mov
cld
rolb
aaa
fucomip
jns
fsubl
add
dec
leave
imul
sbb
xchg
mov
imul
sbb
xor
nop
mov
shl
mov
pop
dec
pop
mov
test
insl
pop
fcomps
add
push
clc
cmp
dec
into
jecxz
cmp
movq
add
or
jns
pop
stos
dec
mov
mov
sahf
movsb
jb
pop
push
sbb
stc
icebp
shrl
or
stc
lret
mov
hlt
xchg
addb
lret
jg
jo
test
icebp
fbld
ret
inc
push
jns
push
dec
cmpb
ret
xor
sub
fs
fdivrl
cld
dec
int
arpl
xchg
push
pop
mov
pop
int
data16
or
push
jae
xor
pop
sbb
push
insb
lods
cld
mov
ficompl
dec
push
fistpll
dec
shlb
mov
dec
push
test
mov
adcb
pushf
fcomi
xor
and
mov
add
ret
jo
pop
lds
les
mov
push
pop
into
aaa
fsubrp
imul
xchg
hlt
inc
inc
pop
cmp
popf
mov
stos
lods
inc
je
imul
push
xor
xchg
cmp
rcll
shrl
sbb
xchg
jmp
stc
jl
repnz
pushf
lcall
orl
sbb
pop
pop
or
sbb
in
push
subl
rcrl
out
add
adc
mov
xchg
xchg
movsb
and
and
ja
cli
or
leave
mov
mov
icebp
js
pop
mov
jnp
enter
adc
xlat
pop
sub
sub
xor
iret
pushf
mov
xchg
imul
aam
aad
dec
bnd
add
mov
sbb
lcall
or
and
push
xor
std
adc
pop
mov
mov
fisttps
push
add
mov
aas
or
mov
cmp
loope
xor
ja
sbb
test
sarl
push
jle
insl
push
jp
push
sub
icebp
mov
test
movsl
jmp
and
cmp
xor
fnstsw
add
inc
mov
xchg
scas
xor
push
mov
aam
in
adc
jnp
cmpsb
nop
ret
cmc
popa
mov
rclb
cs
inc
push
in
xor
sbb
xchg
xchg
or
cmc
in
mov
mov
test
add
insb
pusha
je
test
movsl
pop
push
mov
pop
adc
es
clc
xchg
mov
divl
adc
adc
test
clc
insl
ja
push
cltd
jl
pushf
fistpl
fldcw
pop
pop
negb
loop
movb
das
xor
int3
dec
xchg
ret
mov
aaa
sahf
sbb
enter
sbb
clc
cld
mov
or
push
ret
loop
adc
int
sti
lods
fidivrl
dec
dec
mov
out
jmp
add
and
neg
add
mov
in
pusha
mov
sbb
movsb
into
fcmove
dec
push
mov
xchg
cld
xor
mov
mov
jno
leave
stos
mov
xchg
cmpsl
jmp
loop
lods
insb
ljmp
mov
mov
sub
iret
pop
loop,pt
imul
dec
es
ja
fidivrs
ss
or
popf
fsubrs
shrb
and
jp
dec
imul
push
pop
aaa
dec
outsb
stos
aas
mov
fldl
or
adc
push
loopne
cmp
xor
sahf
jmp
movsb
sbb
jl
sahf
add
cld
jo
push
subl
sar
test
xchg
out
dec
daa
mov
ja
aam
mov
xor
push
add
cmp
pop
xchg
sbb
fsubrp
xchg
insb
cmpsl
cli
pop
ficoms
sti
lods
pop
test
lods
in
pop
inc
cmp
ljmp
call
mov
sub
pop
js
outsl
mov
mov
cli
push
mov
dec
mov
inc
stos
xchg
pop
xchg
dec
sarb
arpl
push
or
xchg
mov
mov
fwait
dec
xchg
and
sbb
pop
push
pop
push
arpl
pusha
xor
hlt
stos
je
xchg
andb
xchg
jp
pop
cmpsb
rcll
sub
rcl
addb
jnp
fcmovbe
xchg
testb
add
flds
adcb
sbb
adc
xor
xchg
push
out
in
lock
ja
pop
jb
add
mov
mov
dec
mov
jno
adc
pop
dec
inc
data16
sti
insb
aaa
fisttpll
cmp
lea
or
inc
jb
scas
jo
pop
cmp
xorl
sbb
xlat
xchg
add
sbb
mov
xor
sbb
inc
push
pop
xlat
loope
outsb
add
lods
push
pop
loopne
xor
imull
or
adc
mov
push
add
sbb
mov
adc
aas
div
cmpsl
jge
rcll
or
mov
in
pop
data16
divps
dec
mov
or
fcmove
cmp
test
clc
cli
pop
push
scas
aad
mov
in
loope
gs
sbb
mov
adc
sub
mov
mov
popa
adc
in
sar
adc
lock
gs
pop
and
mov
sti
subb
mov
mov
insl
outsl
sub
cmp
aaa
out
add
dec
xchg
test
shrl
mov
xchg
push
fcmovnu
xchg
push
push
fcmovnu
lea
mov
push
push
push
mov
mov
xor
dec
or
arpl
out
imul
jmp
int
add
sub
push
adc
test
mov
jbe
mov
jno
test
pop
jecxz
icebp
fstpl
dec
push
mov
cmpsl
lock
pushf
jge
adc
mov
sub
pop
mov
shrl
arpl
int
pop
mov
pop
movsb
or
in
cwtl
xor
sti
push
int
aas
push
dec
fisubrl
hlt
xlat
shrb
inc
jge
nop
bound
movsl
mov
cs
cmp
xor
out
inc
addr16
scas
jp
repnz
or
xchg
inc
jns
mov
into
push
jb
ljmpw
call
or
push
cmp
sti
mov
sbb
pushl
outsl
fistpll
push
mov
fcoml
ljmp
pop
and
add
rclb
sahf
in
movsl
shl
cmpsb
nop
mov
inc
call
mov
dec
scas
idivb
callw
outsb
cmp
das
xchg
jb
and
jl
fimull
lret
and
adcb
lods
leave
push
push
pop
adc
push
and
divl
sub
lret
mov
mov
shl
cmp
inc
mov
imul
xor
jp
sbb
and
push
call
sbb
adc
push
and
icebp
daa
dec
adc
cmpsb
insl
dec
or
gs
pop
lea
mov
rolb
sub
pushl
mull
hlt
and
scas
push
lds
stos
push
and
enter
push
movsl
xchg
pop
push
mov
jne
insl
dec
mov
call
addb
sbb
popf
loopne
pop
xchg
mov
jmp
lcall
in
jl
dec
sbb
xor
mov
mov
jno
dec
mov
cltd
and
fidivrl
dec
inc
jmp
sub
loop
adc
stos
cmp
pop
mov
je
popf
push
cmp
fcmovnu
inc
inc
xor
mov
xor
pop
gs
mov
sub
call
loop
mov
imulb
xchg
push
stos
sahf
pop
sbb
xchg
fsubrl
sbb
or
insl
mov
fsub
negl
fcomp
aaa
sub
cmpsb
push
xor
popf
push
jnp
jnp
rcr
dec
dec
xchg
jae
test
cmpsb
jbe
or
loop
inc
dec
mov
cmp
pushf
adc
jnp
adc
dec
lods
xor
xor
jo
dec
cmp
shrb
aad
pop
test
loopne
test
and
xor
mov
xor
jns
ss
xor
mov
fcmovnbe
mov
out
pop
lret
push
insb
pop
sub
and
xchg
jne
push
xchg
lods
xor
dec
and
sbb
outsl
jge
sub
call
or
insl
lods
xor
flds
jb
int
dec
mov
push
lock
push
jne
dec
imul
and
aaa
inc
ficoml
pop
pop
fnstcw
sub
xchg
add
sub
sbb
jb
push
cld
fdivrs
lea
jbe
scas
xor
sub
inc
rolb
sbb
inc
jo
xor
mov
icebp
adcl
mov
out
pop
or
xor
dec
sbb
ljmp
fadd
push
enter
dec
mov
lret
pop
jb
andl
mov
fidivrs
rdmsr
das
das
cmp
movsb
in
or
adc
daa
and
jge
dec
or
in
jl
sub
dec
cmpl
ds
push
pop
cwtl
das
adc
cmp
xor
cmp
clc
or
arpl
int
out
rclb
dec
aam
test
xchg
xor
sub
mov
sub
jge
or
push
pop
aam
push
sbb
mov
adc
idivl
mov
lods
mov
movsl
idiv
fiadds
adc
js
ljmp
or
xchg
pushf
dec
jmp
pop
jl
xchg
ret
jns
pop
push
mov
or
push
mov
mov
pop
or
xchg
aas
jbe
lods
pop
lahf
cmp
shrl
mov
stc
dec
jl
or
and
lods
adc
dec
add
adc
loopne
dec
clc
aad
or
fstps
mov
lcall
movsl
test
dec
repz
and
rorb
dec
pusha
pop
adc
add
xchg
push
jb
pop
into
dec
enter
stos
loope
int
lret
pop
sub
icebp
sbb
movsb
add
push
inc
and
stos
jg
or
sub
out
dec
pop
xchg
sbb
push
adc
dec
daa
scas
mov
inc
addr16
loopne
sahf
and
push
xlat
js
push
inc
xor
cwtl
or
imul
fstps
icebp
mov
mov
xchg
sub
push
jb
dec
or
imul
inc
xchg
push
cmpb
aas
dec
dec
mov
pop
aaa
pop
js
cmp
push
call
js
sti
cmp
and
fidivrs
repz
xlat
sub
dec
in
pop
and
mov
pop
cmp
sarb
inc
add
popf
movb
pop
cld
dec
in
repnz
pop
jno
dec
and
in
xchg
jmp
daa
loopne
push
pop
mov
mov
subb
inc
jnp
dec
ljmp
in
adc
stos
outsl
je
jge
les
loop
push
jae
in
int
xor
mov
mov
and
sbb
push
hlt
sub
pop
or
pop
xor
push
test
fistps
add
movsl
jmp
cmp
insb
mov
icebp
or
sub
in
inc
cld
call
or
mov
divps
lock
daa
lock
sub
and
cld
push
sar
mov
mov
cmp
xor
aaa
call
or
fisttpll
imul
xor
mov
hlt
cmpb
das
jle
mov
sbb
inc
add
push
jae
lock
fisubl
ret
stos
lods
pop
xchg
cmp
loopne
pop
sbb
das
ret
lcall
pmuludq
push
xor
int
lcall
sbb
cmp
push
inc
lcall
mov
aam
jg
or
lods
jbe
iret
jnp
dec
mov
cmpb
sub
push
xor
insl
push
ss
push
xchg
out
dec
bound
das
ret
clc
sbbb
mov
dec
int3
mov
pop
mov
mull
iret
pop
ljmp
mov
in
subb
mov
push
and
xchg
add
xchg
xchg
add
lahf
stos
inc
scas
mov
xor
adcl
adc
sbb
insl
subb
or
cli
mov
andl
pop
mov
sbb
jge
jb
int
addr16
xor
cltd
cmpsb
hlt
in
or
faddp
sarl
lods
add
je
pop
xorb
push
cltd
or
and
movsl
sub
dec
shrb
cmc
mov
dec
sub
popf
cltd
in
xchg
mov
jmp
push
pop
dec
aam
dec
frstor
push
inc
jg
cmpsb
mov
jge
push
bound
popf
jmp
std
dec
push
adc
jecxz
mov
inc
add
pop
dec
pop
dec
ljmp
icebp
sbb
lcall
push
pop
xchg
mov
pop
inc
push
dec
push
jns
jne
jo
filds
iret
xor
mov
mov
cmp
sub
in
popa
or
les
nop
inc
je
jp
imul
and
mov
pop
xchg
fnstsw
mov
or
addb
jbe
pop
inc
lret
xchg
push
subb
insl
inc
les
mov
fucomip
xchg
mov
aas
mov
les
addb
dec
fdivs
add
test
cld
lods
sbb
cmp
sub
sub
loope
pop
loop
xlat
mov
iret
push
je
sub
add
sub
mov
dec
outsl
imul
xchg
cmp
icebp
nopl
fistl
xchg
lds
les
aas
inc
or
cmc
xchg
enter
inc
jne
fmuls
out
loope
pop
mov
sub
inc
insl
sbb
sub
mov
arpl
push
aaa
cs
ds
mov
mov
sti
xchg
xlat
add
in
adc
aam
cmc
movsb
roll
jl
sbbb
push
nop
or
and
push
out
push
dec
pop
lock
fildl
sbb
pop
sbb
sti
push
fnstenv
pop
jbe
aaa
mov
outsl
out
filds
mulb
sbb
dec
cmp
setle
inc
adc
xchg
sahf
repz
ficoms
jbe
rcrb
jg
jb
hlt
push
add
ret
jo
stc
test
fs
hlt
cs
push
xchg
in
enter
mov
inc
into
fsubs
mov
std
cmp
cmp
fldt
xor
pop
test
push
ret
fwait
sbb
test
mov
enter
pop
stos
inc
add
lods
call
pushf
inc
xchg
mov
js
xchg
rolb
decb
mov
sbb
out
lods
mov
sti
cmpsb
xor
and
mov
jb
outsl
cs
mov
fdivrl
cltd
sbb
jl
jnp
fstps
fwait
pop
aas
es
mov
xchg
loopne
jl
ja
scas
call
repnz
adc
pop
xor
loopne
mov
pop
ss
sti
xchg
dec
push
inc
nop
add
call
jl
loope
pop
in
mov
mov
and
lds
jno
add
push
xor
daa
sbb
movb
fwait
int
mov
jo
test
test
mov
dec
inc
cmp
cmovno
adc
mov
push
or
leave
pop
xorb
xor
es
je
bound
or
test
or
mov
les
push
sbb
aad
mov
and
les
or
jns
jl
jae
sub
mov
inc
pop
xchg
negl
sub
scas
outsb
loope
aad
outsl
mov
leave
in
iret
or
fsubrp
adc
pop
je
sub
cmp
addl
mov
and
filds
sbb
sub
aad
rcll
dec
fxch
insb
pop
mov
cmp
mov
xor
in
cwtl
mov
xchg
pop
in
pop
cmp
inc
les
dec
mov
inc
ljmp
or
add
adc
mov
insl
sub
clc
daa
pop
rcrb
test
push
pop
test
fs
loop
xor
or
dec
sbb
xchg
lods
out
out
mov
xchg
das
inc
jge
out
sbb
int3
mov
sub
in
fsubr
mov
test
sbb
pop
jmp
rorl
call
test
mov
fldcw
sysexit
leave
push
mov
mov
inc
jg
scas
das
mov
shl
repz
sub
sbb
hlt
fs
push
and
cmp
lcall
jnp
sub
add
std
jmp
rorl
sarl
out
call
mov
xor
pop
push
pop
out
in
outsb
sti
daa
push
xchg
dec
stos
mov
jae
and
test
or
fs
nop
outsb
retw
jbe
add
and
sub
lea
stos
mov
fimull
test
push
push
es
sub
pop
leave
ss
shl
sub
and
loopne
inc
add
int3
gs
stos
aas
ret
test
popa
pop
int3
fstps
mov
int
cmc
inc
fwait
mov
xor
mov
adc
stc
adc
pop
xchg
jge
fs
push
jle
dec
mov
scas
push
ret
pop
pop
sbb
repz
mov
push
lret
jge
and
addb
in
nop
mov
es
jg
cwtl
mov
push
add
push
and
push
in
sbb
lcall
and
fsubs
enter
cmp
iret
mov
sub
ret
xchg
sub
fdiv
popa
push
jl
push
rcrb
xor
pop
or
inc
mov
lock
sbb
or
adc
inc
xchg
outsb
iret
xor
dec
jb
pop
cli
leave
nop
jne
gs
sahf
adc
fadds
mov
sbb
sbb
cltd
fsts
dec
fidivrs
xchg
adc
inc
jnp
add
push
push
frstor
insl
mov
pop
cmp
mov
and
push
into
sti
sarl
dec
cmp
test
dec
jb
mov
int3
bound
shl
test
add
pop
mov
mov
xor
jmp
xchg
sbb
dec
out
lds
test
sub
mov
out
push
fidivrl
imull
xchg
divl
jle
xchg
sbb
test
insb
cld
rclb
lea
and
pop
xchg
mov
jg
pcmpeqb
lock
sbb
and
rol
pop
jle
pop
sub
mov
sub
in
es
lea
mov
sahf
lods
inc
pop
in
inc
mov
and
cmpsl
pop
adc
hlt
adcb
rclb
xor
cld
pusha
jo
cmp
clc
mov
xchg
aas
lret
test
jnp
push
pand
out
jno
test
out
adc
jnp
movsl
mov
push
jnp
mov
in
xchg
das
xor
ret
pop
jb
xor
es
rcrl
in
scas
fcoml
mov
mov
jmp
adc
and
cmpb
stc
cltd
dec
push
xchg
andl
scas
xchg
dec
cs
pop
dec
cmp
adc
push
shlb
ret
mov
xchg
aam
sub
rcl
mov
xchg
pusha
fwait
xor
pop
mov
xchg
pop
outsb
lahf
jb
xchg
test
inc
pop
cltd
idiv
and
xchg
popf
sti
cmpsl
mov
cmc
clc
imul
das
popf
insl
enter
fnstcw
inc
out
mov
add
fimuls
add
push
sbb
scas
pushf
enter
add
dec
lret
xchg
or
jp
outsl
negl
lret
movsl
clc
mov
jne
xchg
scas
xchg
mov
sbbb
and
aaa
push
mov
enter
adc
and
lods
mov
or
stc
or
push
xchg
cmpsl
sahf
mov
loope
add
pop
xor
bound
gs
and
inc
jmp
subb
insl
jge
mov
jl
push
inc
jnp
repz
loope
repz
sub
ljmp
adc
sub
cmp
mov
popf
add
jmp
scas
sarb
jge
xchg
inc
pop
ljmp
hlt
pavgw
shrb
fmull
ret
fcmovbe
xor
and
inc
ror
out
pop
xchg
cld
cltd
in
xchg
dec
gs
or
mov
dec
jle
test
aam
sbb
popf
and
mov
mov
divl
mov
push
std
int
mov
jp
adc
scas
jle
rorl
xchg
and
divl
dec
add
or
mov
pop
nop
xchg
push
in
ljmp
inc
push
lods
not
pop
cltd
xlat
adc
add
add
test
dec
and
outsl
scas
cmpsb
push
sbb
jne
je
stos
or
xchg
xor
mov
inc
cmp
sbb
pop
mov
jne
sahf
int3
cltd
push
lcall
cmp
div
cmp
aaa
xchg
insb
add
inc
sbb
sub
or
ret
sbb
cmp
pop
xchg
punpckhwd
push
sti
mov
mov
xchg
js
cmp
cltd
sbb
dec
lret
mov
jnp
in
push
mov
dec
int
out
cld
push
cmp
shl
xchg
faddl
sti
pop
into
mov
sbb
add
mov
adc
jle
repz
test
push
or
sbb
test
lods
add
add
sahf
cmpsb
std
int
and
cmp
aaa
push
cli
ljmp
push
mov
js
shlb
xchg
cmp
ret
dec
fcmove
mov
iret
fcompl
xor
rdtsc
sub
push
mov
jnp
in
cld
mov
sub
cmp
outsl
or
scas
sbb
aaa
cmc
inc
xchg
lock
rcll
pop
adc
in
xor
in
fistl
mov
je
ret
jns
lds
addl
lret
cltd
mov
xchg
xchg
aam
testb
adc
or
xchg
outsb
pop
add
inc
insl
pushl
out
rcrl
dec
stc
xchg
cltd
mov
scas
aad
mov
in
dec
rcll
push
jb
cltd
fsubs
adc
mov
stos
and
inc
cltd
mov
test
pop
xor
cld
xchg
push
scas
sbb
daa
fbstp
test
lods
sti
psubusb
xlat
cltd
aad
fcoml
push
cmp
repz
ret
pop
lods
xor
jne
pop
out
mov
push
mulb
cmp
xor
rcr
in
xchg
icebp
aam
sub
int
mov
int3
dec
mov
int3
push
mov
cs
sbb
jl
dec
dec
adc
dec
or
xchg
or
or
scas
cli
dec
jnp
lods
scas
or
sbb
push
notl
push
cs
or
test
lods
pop
or
mov
sbb
xchg
stos
cwtl
sbb
adcb
mov
push
js
aas
cmp
push
or
inc
cli
scas
stos
movsb
pusha
inc
add
scas
addr16
mov
pop
mov
or
hlt
jg
movsl
scas
pop
and
adc
lahf
or
mull
loop
push
sbb
out
push
xorl
and
stos
loopne
xor
movsl
scas
pop
mov
xchg
dec
sbb
inc
xchg
inc
lahf
frstor
scas
pop
leave
mov
inc
adc
sbb
movsl
imul
dec
loop
mov
mov
int3
pop
fst
sub
xchg
lea
xchg
jmp
mov
enter
in
cmc
push
arpl
jl
jns
mov
jns
mov
je
xor
sbb
sbb
pushf
mov
inc
int3
les
leave
push
fldcw
loop
in
pop
sub
rcl
rcrb
jbe
xchg
inc
jb
jecxz
subl
jp
out
shrd
or
lcall
mov
sub
iret
dec
lea
imulb
imulb
xor
test
mov
xchg
mov
inc
sub
pop
fdivrl
or
inc
dec
xor
xor
sbb
push
nop
pop
aas
xchg
rorb
movsl
xor
xchg
pop
pop
fs
cmp
mov
push
cmp
pop
leave
mov
add
inc
jp
xchg
ret
dec
andl
push
shlb
push
inc
fists
push
mov
out
jge
imul
mov
push
pop
shll
mov
out
popf
imul
mov
sti
popl
mov
test
jge
cmpsb
or
fldt
fcmovu
loope
divl
cwtl
pop
cwtl
fbld
push
lret
mov
fadd
dec
lock
mov
jmp
shll
clc
or
mov
or
pusha
mov
jle
mov
mov
pop
jl
gs
daa
dec
dec
call
or
aas
or
sub
jns
cmpsl
lret
shlb
lods
in
cmc
xor
lock
cmp
movsb
aaa
xchg
aam
movsb
xlat
ljmp
dec
mov
push
cmpsb
adc
cmpsb
xor
nop
lea
stos
outsl
xchg
push
xor
sbb
fdivs
mov
add
scas
jmp
lret
xchg
daa
repnz
xor
add
roll
push
jg
lret
adc
or
adc
push
push
inc
xchg
mov
pop
insb
inc
xchg
and
or
inc
popa
mov
insl
imul
inc
inc
es
pop
xchg
xchg
xchg
inc
pop
cmp
sub
lods
push
pusha
and
cmp
loope
add
je
xchg
push
push
test
js
sub
mov
xchg
lods
adc
push
mov
pop
repnz
dec
mov
test
cltd
test
pop
mov
test
pop
sbb
scas
jno
push
loop
ja
loop
xchg
hlt
inc
test
dec
add
sbb
ret
xor
sbb
out
fnstsw
and
setl
mov
iret
dec
lret
xor
stos
xchg
das
push
andb
adc
jmp
loop
aam
xor
into
lea
dec
dec
in
ret
add
push
lea
pop
ret
cwtl
nop
adc
pop
sbb
shrb
jecxz
ja
inc
pop
dec
or
lcall
mov
in
popa
je
dec
fldcw
push
scas
or
mov
shll
and
ds
dec
fwait
push
xlat
sub
shrl
lret
lret
mov
add
push
cld
dec
push
adc
arpl
fists
mov
mov
pusha
orb
sub
push
cmpsl
pop
adc
sbbb
sahf
insb
stc
inc
cli
leave
sub
sub
insb
jmp
rorl
push
pop
xchg
xchg
cmc
xor
jecxz
mov
add
jo
mov
leave
dec
cmpsb
pop
jge
ror
sub
rcr
lea
add
stos
mov
popa
dec
mov
shl
movsl
ds
sarb
inc
into
data16
cmpsl
outsl
inc
mov
pusha
sbb
jne
jno
or
sbb
xchg
add
pop
adc
push
hlt
rcll
insb
jnp
mov
sbb
out
xor
dec
xor
xchg
cmpsb
std
inc
jle
and
mov
jecxz
xlat
push
popa
jl
lret
sbb
test
dec
ficoml
mov
push
dec
insl
dec
fsubp
pop
shr
popa
cmp
dec
inc
in
clc
mov
popf
inc
adc
mov
dec
test
xchg
sub
scas
and
imul
sti
cmp
out
dec
lods
lcall
sti
xorl
and
add
inc
ret
rol
cli
add
and
push
out
inc
mov
in
jg
data16
xor
cmp
push
fsubrp
fs
xchg
addb
mov
cmp
mov
mov
lahf
add
mov
fidivrl
int3
leave
push
aad
mov
xor
pop
mov
pop
adc
fdivrl
mov
das
jo
xchg
data16
jle
pusha
mov
scas
call
or
lods
scas
inc
mov
imul
and
clc
mov
fistps
add
cmc
lock
cmp
mov
push
add
add
aam
ret
mov
jo
sbb
and
loope
pop
fsubrl
and
adc
mov
lock
fs
adcl
pop
inc
neg
mov
shll
xchg
jnp
jae
push
and
imul
jl
add
mov
pop
dec
cltd
test
pop
jnp
xchg
lea
push
icebp
jp
add
outsb
mov
adc
xchg
jb
fldt
and
test
jnp
push
jb
nop
cmc
shlb
and
sub
loopne
es
sub
repnz
pop
or
xchg
test
fnstsw
add
movsl
jl
aas
sarb
idiv
xchg
dec
pop
xor
pop
sub
mov
cmp
jnp
adc
add
sub
sbb
loopne
mov
arpl
hlt
mov
stc
jg
sub
mov
ret
pop
and
aaa
mov
cld
sub
or
pop
mov
xor
jle
xchg
sbb
and
rcr
dec
sub
pop
jle
es
lahf
insb
daa
int3
push
and
cmp
push
clc
idiv
xlat
pop
ret
mov
mov
and
and
dec
adc
add
dec
lods
clc
mov
push
xor
xchg
pop
and
xlat
lahf
jecxz
mov
imul
xchg
mov
arpl
out
imul
or
movsb
out
gs
mov
push
dec
aas
push
pop
das
dec
mov
xor
mov
adc
cmpl
sahf
dec
bound
stos
loopne
ret
cmp
push
sti
enter
fmul
fsts
iret
push
ret
sahf
xchg
hlt
mov
lea
rcrb
adc
sbb
inc
and
icebp
stc
mov
nop
test
sub
push
mov
push
icebp
addr16
or
cli
jl
push
pop
shl
push
ret
sti
andl
jbe
test
rorl
push
xchg
add
ja
out
popf
aaa
pop
cltd
adcl
pop
and
insl
stc
xor
aam
js
jle
sub
arpl
and
jmp
bound
cli
ss
mov
bound
xlat
push
fucom
xor
mov
or
pop
mov
out
testb
lds
lods
pop
into
xor
inc
fstp
mov
cmpsl
inc
sub
icebp
sbb
jb
lea
pop
and
lock
call
fmull
adc
sub
pop
ret
clc
enter
notb
jno
lret
cwtl
test
out
push
pop
je
fisubrs
dec
aaa
or
mov
jb
cmp
mov
and
lret
jge
jmp
cmc
jbe
hlt
loope
or
lea
sub
call
je
jns
insb
mov
ficoms
js
mov
rcrl
pop
fldt
xor
jl
negl
inc
popf
iret
popa
divl
push
pop
mov
int
xchg
mov
add
fsub
jne
inc
mov
test
sarl
in
jbe
inc
and
add
cmp
call
vmovdqa
sub
jmp
out
mov
js
jp
ja
out
or
xchg
out
xchg
dec
inc
ss
jmp
sbb
div
stos
ret
mov
mov
sbb
leave
ss
mov
cld
push
nop
das
fiadds
sub
dec
out
les
scas
jmp
js
sub
dec
pop
loope
insb
stos
pop
stc
je
xchg
into
pop
pop
inc
xadd
inc
jmp
mov
dec
inc
arpl
dec
repnz
les
shrb
out
pop
adc
mov
sahf
mov
fs
mov
orl
test
dec
loopne
rolb
cmp
mov
inc
jp
or
jecxz
iret
aam
popa
dec
lret
mov
sbb
int
in
sbb
or
rol
incl
xor
bound
mov
sub
into
rcll
pop
push
and
or
scas
popf
test
pushf
dec
push
lret
clc
xchg
je
pusha
mov
jb
add
push
cwtl
cli
or
and
mov
sub
adcb
das
pop
xor
sbb
pop
insb
mov
fmuls
fimull
inc
sbb
lret
cwtl
int3
cltd
out
jl
ror
mov
sbb
mov
xchg
jbe
mov
sub
mov
lds
cmp
xchg
lods
jo
enter
mov
mov
test
mov
and
inc
bound
push
jp
bound
dec
sub
scas
out
aam
lods
push
xor
jne
cwtl
sarb
insb
xorb
jns
xor
mov
jo
xor
fistpl
rcll
sbb
loop
xchg
xchg
stos
aam
pop
fisubs
jmp
imul
push
aaa
pop
xchg
dec
add
sub
popa
mov
jo
lret
scas
test
bound
jne
xchg
fsubs
addr16
xlat
gs
xlat
cmpsl
push
sub
xlat
sbb
pop
jecxz
andl
movsl
cmp
or
pop
popa
sti
fsts
sbb
and
fwait
push
sub
into
test
lock
mov
jnp
inc
cltd
jbe
jno
roll
das
in
sbb
lret
push
lret
jecxz
jnp
dec
jmp
std
pop
push
jae
aaa
inc
xor
and
adc
adc
or
sub
inc
mov
push
dec
push
fiadds
xchg
adc
loope
mov
cmp
add
and
pop
int3
adc
bound
dec
daa
xor
mov
dec
ljmp
cwtl
jo
cmp
mov
sbb
in
xor
jne
adc
push
cmpsb
out
mov
mov
cmp
sbb
jbe
andl
xchg
xchg
addb
xor
fcmovu
shrl
fistpl
icebp
fwait
into
lret
sbb
lds
insl
adc
arpl
lods
cmc
clc
sbb
out
aad
pop
xchg
add
cmovae
out
inc
push
dec
into
or
dec
push
dec
cmp
and
mul
frstor
xchg
jg
cs
outsl
xchg
add
lds
repnz
sbb
lock
adc
test
pop
sbb
rcrl
je
inc
outsb
lret
pushf
int3
or
or
adc
pop
stos
fiadds
stc
call
mov
or
jno
inc
sti
xor
faddl
ret
jle
xorl
lock
nop
inc
inc
aam
ficompl
sbb
xor
xchg
pushf
mov
xchg
daa
out
das
cmp
int
dec
mov
decl
xchg
pusha
aas
aam
jp
fistpl
inc
dec
shrl
mov
adcl
stos
cmp
mov
cmp
pop
adc
outsl
dec
dec
stc
xchg
sbb
mov
popa
mov
inc
std
mov
std
arpl
mov
icebp
mov
adc
inc
pop
adc
add
in
or
mov
adc
fcmovnb
inc
mov
pop
pop
mov
sbbl
fnstcw
lret
xor
outsl
sbb
jp
in
repnz
sbb
das
inc
hlt
stc
sbb
addr16
not
mov
movsb
cmp
int3
insl
mov
pop
mov
mov
xor
jno
pop
and
xor
dec
lret
loope
and
adc
or
xchg
sub
lock
add
mov
dec
and
add
vandps
cwtl
pop
lds
and
pop
insl
call
mov
call
adc
pop
xor
dec
cs
adc
sub
jb
call
repnz
cmp
ficomps
dec
ljmp
xor
mov
inc
mov
jns
out
cmp
or
scas
jg
inc
scas
xchg
dec
add
pop
pusha
add
pop
mov
cs
dec
mov
mov
mov
push
mov
fiaddl
mov
fldt
xchg
xor
xchg
jnp
jb
sub
scas
cmp
or
xchg
mov
adc
inc
xor
aas
je
addr16
sub
nop
std
and
in
test
push
icebp
cmp
test
pop
insl
adcb
mov
inc
fldcw
jg
nop
mov
adc
xchg
push
mov
pop
jmp
xor
push
movsb
inc
outsb
mov
xchg
cwtl
mov
or
cld
lods
xchg
nop
jno
cwtl
not
mov
sub
fisttpl
ficoms
add
loop
hlt
out
testl
leave
jae
test
andl
pop
push
fsubrs
mov
sub
xor
xor
gs
sub
add
sti
out
fstpt
test
stos
in
popa
xchg
add
or
push
xor
adc
jb
adc
add
dec
sbb
xorb
int
jg
add
jp
pop
push
or
inc
test
adc
fs
cmpl
mov
add
enter
pusha
sbbb
ret
pop
xor
mov
dec
out
jp
mov
jge
mov
adc
pop
sbb
aaa
push
add
jnp
xchg
lds
cmp
fwait
jae
xor
mov
or
stos
imul
out
jb
jg
imull
xchg
icebp
xor
dec
and
pushf
jns
je
fdivrl
or
aas
mov
addl
addb
sti
dec
loopne
mov
xor
ljmp
test
dec
or
mov
sti
clc
stos
xor
jp
push
mov
test
push
sbb
cmpsl
lods
mov
lret
jmp
int3
int
jmp
insl
cmpsb
addr16
call
ljmp
cmc
ret
sarl
push
addb
loop
mov
add
pop
jo
lcall
xorb
lcall
push
mov
cmpl
test
add
popf
test
iret
mov
pop
push
ljmp
inc
lds
dec
push
das
mov
cmp
xchg
lret
outsl
ret
jmp
lcall
jno
push
in
and
sbb
mov
inc
cld
dec
lahf
in
jno
mov
cmpsl
inc
push
adc
lods
and
lock
fistpll
dec
in
iret
xlat
mov
mov
jae
icebp
pop
rcr
shr
pop
fnclex
nop
rclb
fldcw
cltd
repnz
jecxz
sarl
lahf
sub
sub
sub
mov
stos
xchg
mov
orl
stos
mov
pop
push
ret
xchg
pop
inc
xor
adc
mov
iret
das
jecxz
movsl
cmp
repz
push
jne
xchg
lods
scas
jo
bound
jo
push
fisubrs
jns
pop
dec
sbb
pavgw
addb
xchg
icebp
cmpsb
shl
mov
test
sub
xor
mov
sbb
add
fcomip
stos
dec
add
mov
add
hlt
xchg
or
cmp
bnd
repz
jbe
insb
pop
xlat
adc
jbe
push
repnz
jg
and
movsb
or
loop
fcmove
ret
pop
add
cmp
mov
dec
sti
mov
dec
and
and
outsl
dec
dec
cmp
leave
filds
out
gs
add
jne
in
test
dec
mov
sub
inc
dec
in
aas
sbb
pop
ljmp
sbb
mov
adc
inc
jnp
dec
dec
cld
mov
out
push
or
xlat
gs
xchg
xor
mov
insl
nop
mov
mov
movntq
dec
dec
xor
mov
jl
arpl
jnp
pop
cmpsb
clc
inc
sub
lret
lret
push
stos
add
imul
aam
ja
stc
mov
nop
mov
inc
addr16
into
iret
xor
push
xchg
xor
in
mov
ret
into
addr16
cmp
iret
xchg
outsl
inc
in
mov
mov
jnp
inc
pop
loop
ss
and
stc
aaa
mov
shr
mov
sub
cmp
or
push
sbb
sbb
popa
push
mov
add
psubw
add
loop
jl
sbb
mov
ds
jnp
sarb
mov
adc
pusha
dec
das
inc
aas
pop
sub
pop
jge
popa
dec
hlt
sbb
call
mov
ret
test
push
pushf
jle
jg
jl
mov
addr16
lods
sbb
jle
or
dec
dec
mov
cmp
xchg
push
les
int3
add
xlat
push
mov
pushf
pop
xchg
adc
cmp
adc
test
and
fidivrl
push
push
mov
jb
lds
jo
lock
stos
les
iret
xor
and
ret
xor
sti
lret
and
cmp
dec
dec
divl
adc
fldenv
test
les
rorl
mov
add
dec
stos
and
mov
mov
jb
lock
rorl
das
loop
xlat
dec
adc
mov
dec
cmc
addr16
xchg
mov
cmpsl
jp
aaa
out
std
adc
call
or
fcmove
mov
popf
and
push
dec
mov
or
sub
cltd
jbe
or
test
jmp
jge
push
loope
inc
sub
cmp
jb
test
pop
xorb
xor
inc
aaa
dec
or
sbbl
push
lcall
jl
aaa
mov
inc
lret
fptan
aas
je
jnp
sub
aaa
ds
cmp
subl
pop
jmp
add
mov
iret
scas
iret
pop
shrl
into
xchg
xchg
push
and
das
insb
sbb
lahf
mov
sbbb
xchg
xor
ss
sub
dec
sub
sarb
rorb
or
test
cld
sbb
adc
ljmp
loopne
inc
mov
jl
mov
jmp
out
imul
icebp
sbb
lods
cmpsb
lods
or
mov
sbb
loopne
imul
mov
push
dec
mov
es
test
mov
daa
je
xchg
xchg
jg
add
add
or
inc
xor
data16
movl
jmp
jp
adc
pop
insl
test
mov
inc
push
mov
decl
cld
leave
or
imul
movsb
fisttpl
xchg
les
inc
lock
in
or
xchg
sbb
xchg
leave
imul
adc
xor
cli
in
mov
iret
movsl
nop
mov
sti
test
mov
je
adc
fiaddl
test
int
xchg
mov
leave
xor
or
add
int
mov
in
jmp
pop
pop
stc
fwait
push
test
jo
incl
nop
inc
ds
stc
js
xchg
int3
sbb
popa
adc
pop
dec
fsubrl
add
jne
lds
sti
adc
mov
add
pop
mov
jle
int
dec
lods
arpl
les
jb
adc
add
test
inc
sahf
sbb
scas
xor
sbb
pop
inc
sahf
pop
push
xchg
lods
xchg
push
nop
int3
xor
xor
mov
je
test
aas
or
pop
pop
shrl
out
xor
ds
and
jl
out
fs
movsb
sti
or
mov
pop
sbb
xor
cmp
inc
scas
dec
or
mov
cltd
cmp
push
repz
sbb
cmp
add
mov
cmp
push
or
sub
ror
pusha
xchg
mov
xor
sbb
push
cmpb
test
in
lods
dec
dec
inc
or
jns
lahf
lret
lret
ds
ficoml
mov
or
in
in
scas
sub
lock
jae
pop
mov
sub
xor
test
fcompl
loopne
enter
push
hlt
xchg
inc
ss
push
jbe
mov
xchg
sbb
repnz
push
rcrb
adc
jle
push
or
shrd
jmp
inc
je
pop
jo
push
test
divl
adc
mov
cmp
pushf
pop
shl
and
xor
push
inc
ficomps
xchg
push
xchg
xchg
push
adcb
jno
arpl
cmp
jno
cmp
sub
arpl
loop
dec
dec
cs
add
shll
dec
push
mov
sbb
xor
inc
rcrl
cwtl
pop
leave
and
and
in
xchg
lcall
or
ljmp
fs
push
sahf
cmc
call
jl
dec
je
dec
rcll
mov
scas
dec
push
xlat
pushf
fimull
mov
sub
mov
bound
cmp
frstor
repnz
jecxz
les
mov
in
fstl
mov
jne
or
fldcw
xor
cmpsl
jnp
ret
pop
jge
mov
in
inc
jmp
cli
dec
sub
std
xchg
xor
cld
jbe
or
fs
and
cs
mov
ja
jmp
mov
mov
pushf
xor
sahf
sbb
insb
pop
pop
push
xor
orl
fildll
dec
xor
xlat
pop
aam
inc
out
inc
add
or
jg
loop
test
es
das
mov
mov
loopne
int3
getsec
sbbl
daa
test
pop
lock
andb
int
jp
sbb
and
sub
xchg
or
jbe
daa
mov
sti
sub
jne
in
xor
fildll
mov
sbb
fldcw
test
lds
ret
xchg
insb
mov
test
sbb
jns
std
sbb
dec
push
js
jbe
adc
lock
popf
shr
xchg
ret
lock
out
mov
jb
nop
jmp
xor
iret
mov
and
pop
mov
or
decb
stos
addr16
cmovs
inc
int
cmpsl
xchg
add
mov
jg
pop
push
testb
push
nop
mov
movsl
jae
sbbb
xchg
xchg
jg
sub
jnp
xchg
fstsw
and
xchg
and
xchg
pop
or
inc
mov
fmul
inc
sahf
sbb
cmpb
ljmp
andb
fcoms
sub
sbb
xchg
cmc
push
push
nop
jmp
rcrb
lret
rclb
sahf
add
push
mov
ljmp
fs
mov
sub
push
jnp
loop
pop
data16
bound
insb
notl
add
fisttpll
add
lea
movsl
out
ficoms
xchg
es
mov
cmp
dec
stos
lods
dec
xor
stos
cs
stos
dec
test
and
and
add
loop
inc
out
dec
int3
mov
rcrl
outsl
push
inc
mov
pop
pop
mov
sub
iret
in
xchg
xor
in
mov
jbe
mov
outsl
or
add
repnz
popf
push
lcall
inc
out
cmp
inc
ss
jge
cmp
cwtl
aaa
or
push
mov
pop
push
mov
add
mov
inc
mov
loop
dec
in
adc
fucom
push
test
lcall
mov
test
daa
cmp
lret
push
rorb
mov
sbb
xor
inc
sub
aad
cltd
pop
dec
es
shlb
sbb
or
xchg
lret
xchg
ss
jmp
xor
test
jae
popa
jbe
ficoml
xor
jnp
mov
dec
clc
mov
adc
xchg
int
xor
sbb
and
fwait
insl
cmp
jb
pop
cli
pop
mov
add
ja
cmp
stos
mov
lcall
add
adc
xchg
pop
mov
test
roll
ficoml
stos
fisubrl
pusha
inc
mov
sub
sub
sbb
pop
xor
loop
push
adc
sub
cmpb
sbbb
or
sbb
addb
out
gs
dec
lcall
mov
rclb
inc
push
add
lock
js
fidivrs
out
fstps
xor
lods
sub
rorl
insb
and
pop
add
dec
fimull
mov
cltd
sub
fnstenv
and
rorb
mov
orb
loopne
data16
pop
lea
sub
xchg
lock
pop
xlat
insb
add
pop
rolb
inc
mov
jmp
jg
pop
sbb
sub
dec
lret
faddl
sub
and
push
mov
push
test
int3
jl
mov
sbb
xchg
and
outsb
mov
jae
int3
stos
mov
jmp
aaa
mov
push
pop
popa
pop
jnp
or
xor
push
pextrw
mov
fcomp
loopne
stos
stc
mov
popa
mov
in
xchg
sub
adc
mov
xor
pop
lods
pop
mov
xor
mov
popl
cmpb
out
dec
pop
jmp
fisttpll
adc
jge
jmp
push
xchg
mov
push
cmp
push
xor
dec
pop
clc
out
insl
lods
mov
movsb
mov
jne
das
dec
mov
adc
pop
cltd
xchg
sbb
sahf
xchg
cmp
cmc
mov
or
aam
enter
test
adc
roll
adcb
insb
jge
adc
jmp
mov
rcll
scas
imul
pop
sub
dec
cmp
leave
cmp
daa
push
xlat
dec
sbb
lods
test
or
or
sbb
jbe
movsb
pop
stc
jo
pop
lods
in
cmp
rorl
sbb
xchg
andl
mov
in
stos
scas
or
hlt
rcrl
out
imul
and
pop
xor
jns
and
pop
das
dec
stos
lock
jne
xchg
pushf
adc
xor
lahf
cmpb
daa
pop
cli
ret
add
push
roll
push
scas
cmp
pusha
sbb
fsub
cltd
inc
jne
mov
add
mov
movsb
pop
pop
clc
pusha
cmp
nop
sbb
push
adc
lahf
cmp
adc
push
mov
mov
cmpsb
movl
pop
sbb
push
jg
dec
psrlw
movsl
xor
sti
xor
dec
clc
movsb
divl
rclb
mov
inc
bound
adc
jp
cmc
xorb
pop
pop
sub
xor
pop
sub
mov
mov
mov
test
ljmp
lahf
nopl
adc
insl
sub
testb
cs
cmp
cmp
cltd
mov
pushf
andb
jmp
pop
aas
xor
ljmp
enter
cmp
dec
cld
fwait
icebp
xor
pop
adc
outsl
sahf
jle,pn
sbb
mov
lcall
in
dec
push
ljmp
sbb
es
loop
sbb
ss
das
orl
push
sbbb
sub
movsb
jb
xor
daa
fsubl
fisubs
mov
mov
add
xor
sbb
insb
inc
loop
les
fsubrs
imul
jmp
jbe
sub
and
or
int3
inc
cmp
mov
push
sub
pop
dec
inc
cmp
rcrb
icebp
pop
pop
pushf
nop
icebp
inc
pop
push
jns
sub
js
xchg
ret
test
mov
sub
in
nop
scas
inc
xchg
and
xor
sub
cmpsb
sbb
dec
repnz
ret
nop
xor
cmp
mov
sbb
pop
push
fdivp
in
stos
out
or
add
sahf
scas
push
mov
adc
ficompl
pop
jno
in
pop
cld
push
mov
lret
rorl
aas
stos
mov
xchg
imul
cmp
jns
or
mov
cltd
adc
lds
cmc
leave
push
fcmove
insl
adc
shlb
xlat
roll
fldcw
cmpsb
outsl
ss
lods
test
loop
fsubrs
aam
push
add
les
sub
cmp
ret
mov
js
push
int3
mov
daa
xor
aaa
fdivl
pop
fcompl
daa
rolb
cmpl
jmp
xor
loop
jle
dec
int3
push
jle
mov
lahf
or
pop
scas
push
jo
sub
cli
out
xchg
icebp
mov
push
inc
cld
icebp
pop
jns
pop
subb
push
loopne
arpl
pop
mov
xchg
arpl
fmuls
or
adcl
xchg
adc
fisubrl
xor
mov
cmp
cmp
inc
es
fcomi
cmp
enter
cmp
das
sbb
shll
popa
or
xchg
xchg
lcall
pop
push
lahf
add
dec
and
out
jne
test
sub
ja
insb
ss
add
mov
cs
push
scas
outsl
std
and
rcrl
cmp
pop
or
sti
push
ljmp
enter
or
mov
xchg
mov
push
xor
mov
fisubs
jne
test
adc
jns
out
pusha
mov
out
mov
adc
push
dec
jl
aaa
adc
push
push
ds
sarl
out
lea
push
inc
cli
out
leave
fwait
sbb
mov
lods
fs
pop
inc
jp
xor
lahf
mov
push
lea
sbb
adc
insb
cli
aaa
jg
loope
add
xchg
pushf
loopne
arpl
faddl
shrl
movsl
push
test
pop
arpl
hlt
test
cmp
cld
dec
cs
pusha
in
xlat
adcb
mov
sub
lcall
cmpsl
inc
pop
mov
mov
sub
jo
or
mov
pusha
push
adc
cmp
dec
xorl
mov
addr16
aam
inc
sub
mov
sarl
lcall
jecxz
xchg
iret
popa
sub
popf
jno
mov
repz
cmp
loop
outsl
es
and
mov
push
sahf
popa
lret
xchg
inc
and
dec
das
cli
mov
out
pop
in
stc
xchg
or
cmp
fsubl
outsl
push
mov
inc
outsl
push
flds
shl
or
mov
cmpb
insl
orl
adc
mov
mov
movsl
pop
fiaddl
nop
sub
es
scas
js
mov
daa
jp
push
addl
arpl
fidivl
push
jge
dec
in
xor
pop
xor
call
lret
dec
cmp
into
mov
jmp
pushf
mov
mov
inc
das
mov
dec
pushf
inc
ljmp
sbb
add
mov
aaa
mov
pop
inc
xchg
int3
jecxz
aam
ret
dec
xor
mov
push
lret
jne
cmp
in
insl
push
hlt
sbb
add
fdivs
ja
pop
mov
aad
es
test
sti
sbbb
stos
rorb
lea
jmp
and
dec
imul
jb
jb
rcrb
sbb
flds
sti
push
and
bound
mov
ss
ret
imull
sub
adc
inc
sbb
mov
push
sbb
pop
or
sbb
andb
pop
sahf
push
out
and
sbb
out
pop
xchg
xlat
scas
in
adc
fdivrp
and
ret
cmp
pop
sbb
lea
das
xor
xlat
dec
nop
insl
in
push
dec
jl
or
cmp
rolb
jb
jmp
jmp
pop
lock
xchg
rorb
aas
xchg
dec
ja
cld
frndint
fsubrs
xlat
xchg
push
pop
add
jne
shlb
shl
cmp
add
dec
add
mov
cmpsl
xor
ds
cmp
mull
mov
fadds
sbb
or
xchg
stos
call
hlt
aad
xlat
xchg
lods
mov
stc
sbb
jmp
xchg
push
mov
add
ljmp
jle
arpl
xor
mov
mov
into
sarl
out
xchg
adc
or
push
jl
mov
push
dec
pop
inc
cli
sahf
jge
outsl
fldt
jle
mov
pop
jns
pop
pushl
das
mov
int
mov
adc
fdiv
movsl
add
adc
arpl
push
leave
nop
sbb
push
sbb
or
cmp
jb
dec
mov
jp
imul
daa
pop
mov
pop
push
add
jle
cwtl
pop
push
fs
test
push
aad
aaa
shll
add
cmc
lcall
addb
das
and
andl
incl
dec
sahf
mov
add
aam
jno
mov
ljmp
gs
into
cmp
and
scas
ds
or
xchg
pop
jecxz
idiv
loop
push
pop
cmp
mov
dec
and
test
stos
jecxz
pop
mov
enter
std
inc
adc
mov
pop
and
idivl
jge
mov
mov
jmp
mov
pop
push
ljmp
mov
push
add
fcomps
insl
shlb
das
add
ds
push
sub
xor
mov
xchg
push
jnp
sbb
inc
pop
sahf
div
shll
xor
clc
sbb
sub
pop
lods
movl
adc
mov
jnp
std
inc
inc
in
int3
lock
xor
stos
inc
push
rclb
inc
jo
lcall
jo
sub
mov
pop
inc
cmp
xor
push
mov
and
ss
out
push
pop
adc
or
cmp
jnp
xor
jecxz
stc
cmpsl
jge
aad
loop
dec
pop
cmp
xor
lcall
fnstsw
mov
lret
mov
enter
repz
mov
sbb
add
ret
mov
push
push
add
lahf
sub
mov
pop
movsb
mov
mov
fwait
xlat
test
or
mov
jg
jl
mov
jp
lock
aam
test
iret
fists
jo
cmp
pushf
popf
cmp
decb
jno
inc
cmpsl
pusha
insb
cmp
add
xor
pop
sub
jmp
popa
into
inc
fwait
into
insl
pop
pop
inc
scas
sbb
inc
cmp
std
mov
push
inc
add
inc
fdivs
scas
outsl
dec
in
insl
ror
in
mov
fstps
push
pop
push
jb
adc
dec
scas
pop
xor
rcrb
adc
gs
hlt
push
int3
dec
nop
test
push
lock
insb
jb
jnp
addr16
and
jae
ja
int
xor
je
push
test
jae
fldcw
movsl
mov
js
imul
add
ljmp
lcall
lods
add
out
mov
push
push
inc
lret
jnp
adc
push
xor
out
roll
sbb
pop
addr16
sbb
data16
jmp
test
or
mov
push
aas
push
addl
js
pop
in
mov
jle
fimuls
or
cmpsb
push
mov
js
lcall
arpl
mov
mov
push
or
nop
adc
pop
jne
mov
cmp
inc
dec
shrb
jge,pn
push
mov
mov
add
xchg
aaa
loopne
call
xchg
mov
jb
jo
pop
cmc
push
dec
or
icebp
mov
lods
xchg
nop
or
sbb
cld
ss
sbb
ficoml
leave
pop
jle
mov
stos
emms
test
outsb
daa
ljmp
mov
add
and
dec
pop
aas
pop
xorl
xlat
mov
push
adcb
cmc
rcrb
pusha
pop
jg
sarb
push
and
lods
or
js
xor
lcall
mov
xchg
fldcw
clc
stos
or
xor
or
mov
sbb
mov
loop
push
mov
sarb
adc
out
sbb
push
pop
cltd
push
add
pop
hlt
loopne
fs
arpl
mov
push
pop
inc
aaa
aam
sarb
xchg
cli
jg
inc
lods
jnp
loope
mov
pop
orb
and
sub
orl
or
daa
mov
pop
or
fsub
sbb
add
adc
fwait
pop
and
jle
in
cmpsb
jbe
movsb
push
cmpsl
xor
aaa
dec
in
sbb
movsl
enter
jl
push
mov
iret
inc
inc
and
or
daa
push
inc
and
inc
fwait
adc
inc
mov
sti
int
mov
fcoms
or
sbb
mov
cmp
out
jg
jne
jg
dec
test
jl
sub
xor
hlt
cmp
repnz
add
or
das
in
mov
lret
xor
std
test
sbb
inc
add
mov
and
bound
mov
dec
dec
out
lcall
jge
push
test
jl
inc
test
push
inc
xor
xor
iret
push
aam
scas
jo
gs
fwait
pusha
test
jg
and
test
loop
enter
xchg
xchg
xor
adc
in
add
je
int
cwtl
bound
push
add
push
jle
addb
ret
or
stos
push
iret
stc
fstpt
psrld
mov
cmpsl
loope
dec
sub
xchg
mov
mov
xor
mov
and
push
or
mov
call
ljmp
xor
dec
mov
adc
xor
movsl
sbb
sbb
or
std
add
pop
insl
fisubrs
and
or
xchg
outsb
sbb
pushf
mov
scas
mov
fadds
call
mov
jl
lea
bound
sub
or
popf
stos
or
mov
fadds
js
xor
aas
pop
cmp
sbb
sub
ss
mov
out
or
out
into
jge
repnz
jae
sub
cs
inc
imul
pop
rcll
popa
add
cli
sbb
mov
pop
add
mov
icebp
jp
leave
inc
push
leave
aam
mov
pop
pop
adc
push
mov
mov
int3
pop
jl
xor
add
jl
pop
cmpsb
mov
rorb
mov
sub
cmpsb
lret
jle
pop
jnp
jg
add
test
cmp
cwtl
or
fisubs
mov
adc
xchg
mov
push
jnp
inc
ret
xor
gs
jle
rorb
cmp
jle
pop
das
jns
mov
leave
hlt
cmpsb
mov
dec
dec
out
inc
test
dec
jecxz
nop
jb
bound
xor
sbb
arpl
aas
mov
push
das
xchg
or
fidivl
sbbl
pop
sbbb
xchg
or
fs
xchg
mul
xor
or
insl
movsl
add
jge
or
daa
vmwrite
inc
in
stos
dec
xor
or
dec
push
mov
test
shrb
push
xchg
lcall
lret
push
inc
push
adc
jnp
mov
push
xchg
sub
out
push
in
jge
nop
insl
dec
incb
int
xor
inc
adc
sub
push
pop
xor
imul
sub
inc
or
xor
int3
add
hlt
shlb
js
xchg
mov
scas
sub
inc
cwtl
lock
fldt
arpl
add
ja
sub
loop
scas
insl
dec
dec
and
jne
iret
lahf
aaa
adc
sub
jmp
jmp
clc
test
add
sahf
sub
outsl
push
push
pop
dec
inc
leave
into
pop
jg
es
pop
inc
lods
sub
and
pop
fsubrs
push
pop
mov
lcall
pop
push
xchg
mov
pop
je
incl
test
dec
push
stc
xor
lret
fistpl
into
cmp
adc
in
bound
call
outsb
push
xchg
pop
lea
inc
xor
std
push
lcall
or
popf
loop
xor
hlt
dec
jmp
sub
jb
inc
push
xchg
cmp
inc
sub
mov
int3
xlat
adc
cltd
out
add
jb
add
xchg
push
push
sbb
push
rcrb
popf
test
cli
mov
dec
cwtl
imul
dec
scas
popa
in
pop
pop
inc
push
add
or
mov
test
subl
pop
mov
outsb
mov
mov
xor
dec
les
stos
inc
sahf
dec
pop
cmp
ret
hlt
cmpsl
iret
xchg
imul
movsb
cwtl
jae
in
fsubrs
push
lret
dec
dec
sbb
into
cmp
push
icebp
xor
test
push
pop
dec
sbb
adc
mov
sbb
jge
xchg
and
rorl
jge
inc
inc
push
sbb
lret
stos
dec
addb
pop
add
pushw
cmp
push
or
xchg
int
fidivl
mov
dec
mov
sti
cmp
push
sahf
pop
imul
cwtl
in
jns
mov
mov
push
mov
nop
xor
cmp
add
add
rcll
inc
or
sub
or
fdivs
jne
sub
xchg
add
dec
xchg
mov
scas
adc
fbstp
mov
xchg
xchg
cmp
cmp
leave
sub
jae
push
stos
mov
fs
cltd
dec
stos
jmp
jg
sahf
inc
insb
add
inc
mov
int3
or
pop
xor
lds
cs
dec
inc
imul
adc
fwait
in
inc
cmp
cmp
inc
sub
lcall
xchg
lods
push
push
leave
xchg
fnstsw
inc
sbb
addr16
dec
inc
mov
jp
adc
push
aaa
mov
pushf
lret
je
jb
adc
test
das
fwait
add
aad
mov
ja
nop
mov
add
in
aad
inc
push
mov
push
jns
cmp
jbe
lods
ljmp
jne
xchg
dec
and
lcall
lret
dec
gs
cmp
push
lock
enter
jge
adc
fwait
fwait
scas
xchg
mov
ret
js
mov
ret
jbe
inc
mov
iret
repnz
dec
daa
jns
mov
lret
xor
mov
push
movsb
pop
jo
push
xor
cltd
pop
inc
mov
add
cld
pop
dec
bnd
cs
push
lds
sub
nop
mov
lods
popf
cmpsb
mov
inc
jmp
add
jge
adc
pop
jbe
pop
nop
mov
lock
jg
outsl
cmpsl
dec
loope
pop
jo
ss
hlt
int3
xor
aad
add
leave
icebp
and
dec
iret
aaa
push
pop
lods
xlat
jge
dec
gs
pop
mov
push
mov
xchg
in
daa
cmpsb
mov
and
test
push
xchg
scas
lret
int3
fsubrs
jge
push
mov
shl
fcmovnbe
test
movsl
xchg
pop
jbe
lahf
das
dec
push
or
or
adc
sbb
xchg
hlt
push
lock
jg
testl
sub
or
cmp
mov
jb
mov
pop
xor
cli
inc
pop
mov
inc
pusha
arpl
dec
pop
sub
and
jne
sbb
push
jbe
add
mov
mov
or
inc
inc
cltd
mov
mov
sbb
mov
adc
mov
sub
jge
xor
sub
push
push
scas
push
cmp
jb
or
push
mov
fs
packssdw
test
pop
sahf
shlb
gs
insb
insb
mov
shrl
push
fwait
mov
mov
sbb
pop
dec
ret
int3
add
lahf
sbb
orb
jo
mov
insl
arpl
adc
lret
pop
adc
mov
inc
xlat
rcrl
pusha
in
push
int
xor
pop
lods
pop
xor
loope
hlt
ficoml
pop
xchg
push
je
les
adc
sub
xchg
jecxz
out
imul
test
cmpb
jl
jle
stos
icebp
pop
push
pop
insb
fwait
pop
jmp
sti
call
xchg
mov
orl
push
push
cmp
lret
jno
push
sbb
push
dec
or
and
int
push
cmpsl
xchg
add
pop
xlat
mov
and
mov
sbb
test
fs
add
fs
inc
xlat
cld
repnz
repnz
outsl
adc
ret
pusha
stc
aas
push
and
xor
mov
out
test
ljmp
cld
loope
jge
push
sub
loope
dec
xor
push
addr16
sbbb
jecxz
test
cmp
nop
loopne
pop
insl
pop
push
mov
cli
rorb
push
push
lret
std
inc
mov
fdivr
mov
jo
ds
push
or
outsb
adc
or
mov
xchg
mov
ljmp
add
sahf
pop
push
pop
mov
push
ror
mov
push
test
sub
rcll
mov
mov
lods
in
enter
in
mov
adc
js
imul
ljmp
and
push
cmpsb
cmc
jge
sysenter
in
pusha
hlt
scas
test
or
and
cmp
mov
cli
popa
test
lret
jns
inc
mov
mov
or
mov
jg
repz
jmp
fldenv
repz
movsb
xchg
ss
pop
xchg
cmp
xor
icebp
lahf
mov
inc
in
jnp
decl
inc
lret
int
xchg
in
aaa
loope
js
mov
rcr
in
cs
and
repz
popa
jl
iret
xor
ja
xchg
pop
jae
imul
mov
dec
push
xor
mov
idivb
push
das
mov
loop
repz
outsb
cmc
mov
dec
pop
mov
fwait
cld
inc
pop
outsl
in
xchg
or
jb
mov
jmp
pop
xchg
js
add
jns
or
inc
subl
negb
xchg
jb
les
decb
jne
test
inc
jle
cli
jg
lods
lock
popa
inc
lock
loopne
ja
mov
out
outsb
fmulp
fimull
push
mov
mov
pop
xor
call
fisttpl
adc
out
in
gs
mov
and
idivl
inc
mov
je
cltd
test
scas
dec
mov
push
add
out
add
xchg
mov
into
inc
mov
icebp
push
pop
sub
add
push
sbb
orps
mov
lret
xor
repnz
fs
mov
inc
bound
leave
popa
sub
shll
jg
call
sbb
jns
fcoms
pushf
loope
notl
jo
xorl
ret
dec
lret
jnp
jo
jl
dec
mov
jb
inc
sbb
aad
sbb
in
or
stc
shlb
fistps
es
pop
jno
stos
popa
or
jnp
pop
mov
jmp
sti
ljmp
xchg
int3
pop
arpl
stc
popf
pop
xchg
xlat
inc
fidivl
in
int3
test
pop
push
loopne
cmpsb
imul
mov
mov
adc
push
jbe,pt
icebp
sbb
dec
pop
mov
addr16
mov
ret
and
mov
sbb
imul
mov
add
adc
repz
out
sbb
sti
mov
mov
icebp
sbb
outsl
gs
sub
mov
stc
pop
imul
sbb
dec
into
or
mov
mov
in
test
aaa
movsl
scas
pop
dec
jo
mov
xorl
pandn
mov
imul
std
xor
jbe
push
adc
fcomps
xlat
jle
fiadds
xchg
aaa
test
adc
dec
xchg
cmpsb
mov
into
out
pop
mov
adcl
push
cld
inc
pop
sub
adc
dec
sbb
shll
pop
mov
repnz
ja
cwtl
adc
jecxz
mov
jae
mov
mov
js
sub
jl
hlt
popf
and
lret
add
mov
jae
and
int
rclb
aam
push
imul
and
mov
lods
lahf
ret
ss
sahf
pop
int
pop
and
jo
xlat
fcmovbe
imul
imul
fwait
xor
mov
push
pop
stos
pop
jo
dec
dec
nop
outsb
insb
fwait
je
insb
in
sbb
sbb
sysenter
cs
dec
sbb
pop
sub
test
in
mov
shlb
jmp
iret
leave
dec
icebp
in
add
push
std
jb
push
lret
movsb
fdivs
pop
out
xchg
adc
arpl
lock
sbb
fwait
sub
pop
lea
mov
arpl
jne
dec
out
xchg
or
jge
int
jecxz
push
dec
mov
mov
xlat
lods
jg
sub
jecxz
xchg
push
loopne
rolb
mov
push
inc
dec
sbb
dec
jp
fsts
pop
shrl
ja
xor
lcall
leave
push
nop
sub
loope
or
xchg
dec
mov
ret
cmp
cmp
iret
sub
push
lret
mov
inc
xlat
mov
push
pop
jle
pop
test
movsb
mov
push
dec
lea
inc
das
enter
inc
or
mov
pop
sahf
rcr
daa
and
sti
add
subl
mov
mov
cwtl
test
iret
xchg
fwait
sbb
xchg
je
adc
and
mov
jbe
or
flds
mov
repz
lret
shlb
mov
enter
ja
subb
mov
pmulhuw
xor
push
and
mov
or
mov
xor
add
cmp
mov
mov
int3
movsb
xchg
mov
aas
cmp
mov
jae
shll
add
popa
sahf
pop
push
cmp
lret
xchg
stos
dec
addr16
push
cmp
mov
sbb
cs
push
lods
scas
into
js
data16
and
jl
pop
xor
jb
inc
xlat
sub
lret
dec
cltd
iret
shll
sub
mov
xor
add
fwait
xor
cld
imul
xchg
inc
sub
push
in
mov
out
aad
leave
sbb
pop
cmp
stos
mov
xor
mov
js
inc
push
sahf
and
hlt
xchg
gs
dec
es
and
rolb
jecxz
xchg
push
inc
sbb
sub
mov
jp
add
add
enter
aaa
sub
adc
sti
outsl
push
push
or
xor
fs
sub
icebp
neg
cmp
dec
mov
pop
repz
jmp
lret
nop
push
enter
mov
xor
mov
jp
jnp
and
stos
hlt
stos
jp
push
lret
pop
out
lea
push
mov
pop
pushf
loopne
test
cmp
dec
popa
lahf
sbb
sbb
xor
cli
loop
shll
mov
dec
jecxz
mov
fiaddl
fwait
push
mov
cmp
sub
jecxz
std
mov
pop
jecxz
xlat
sahf
xor
dec
push
rcrl
xchg
imul
sti
xor
and
roll
sahf
loope
shrl
xor
add
ds
shll
and
mov
test
ja
mov
add
adc
sbb
inc
rolb
out
js
insl
push
aas
scas
cmp
cmpsb
xor
jg
out
dec
cwtl
mov
xor
test
and
sub
mov
out
mov
aas
pop
clc
iret
imul
mov
xor
push
pop
sbb
sub
xlat
inc
pop
lock
add
pushl
or
pop
mov
dec
fstps
ficoml
fstpt
push
rcrb
pop
push
sbb
leave
cwtl
push
ljmp
add
push
push
outsl
push
add
hlt
subl
xchg
add
dec
mov
dec
test
js
xchg
sbb
pop
pop
dec
hlt
pop
mov
hlt
lahf
nop
clc
pop
pop
mov
aad
mov
inc
dec
mov
pop
xor
test
cmc
jl
xor
test
inc
jecxz
into
cmp
mov
xchg
sub
cld
shl
xor
and
ds
or
jmp
ljmp
dec
dec
rclb
imul
jmp
mov
test
stos
adc
call
jecxz
dec
adc
addr16
xor
xor
sub
ret
sbb
push
xchg
push
mov
adc
xor
in
xchg
lock
sub
test
ss
sti
mov
rol
pop
mov
pop
xchg
cmp
xlat
dec
mov
mov
shl
sub
mov
imul
add
xchg
sbb
arpl
and
iret
cmc
sbb
jo
pop
in
movb
push
xchg
lcall
xchg
push
pop
ja
push
add
sbb
lods
sbb
mov
ljmp
shrb
and
bound
test
adc
loope
fsts
jecxz
and
std
adc
out
inc
fwait
in
arpl
mov
call
ja
jge
inc
pop
sarl
jmp
movsl
hlt
mov
cmpsl
pop
inc
mov
push
sbb
add
dec
ret
fcompl
mov
pushf
dec
jne
xchg
sub
dec
idivl
dec
xor
jp
dec
int
mul
cmp
cmp
roll
push
mov
test
lods
imul
or
xchg
test
out
daa
int3
scas
xchg
lcall
bound
inc
xchg
mov
and
xor
sbb
imul
and
in
xchg
rol
xor
dec
cli
inc
dec
jle
xor
push
inc
pop
xchg
pusha
in
lock
push
arpl
js
mov
jmp
pop
inc
push
repz
and
addb
or
sbb
adc
adc
fmuls
push
cltd
pop
nop
push
mov
xchg
mov
fnsave
fisubrl
aam
lds
es
or
ret
dec
jmp
repz
push
or
cli
mov
negb
notl
xor
jno
mov
into
imul
xchg
cmpsl
push
xchg
leave
xchg
xchg
cwtl
lea
fmuls
inc
mov
adc
loopne
faddl
sbb
cmp
das
xor
loopne
xor
mov
icebp
inc
aas
leave
cmc
aad
pop
xchg
cmp
and
arpl
xor
mov
jp
sbbb
scas
lret
jo
ficoms
pop
or
and
pop
mov
sub
adc
dec
sbbl
popa
jno
xchg
mov
jb
jmp
arpl
adc
movsl
mov
scas
aas
or
mov
out
shlb
fs
ja
pop
mov
and
xchg
pop
ds
fldl
es
or
xchg
popf
fstl
mov
cli
bound
jp
das
pop
cmp
sbb
ficoml
jae
xor
cmpsb
mov
mov
sti
test
adc
add
orl
jge
mov
adc
lret
pop
sbb
test
dec
int3
jge
notl
and
jb
pop
stos
mov
ret
xchg
fs
xchg
xchg
xlat
add
push
sub
sub
aam
dec
mov
int3
aad
inc
fwait
lcall
add
jae
adc
shlb
jbe
add
push
arpl
icebp
cmp
out
add
sub
in
jno
fsts
sbb
or
and
jns
bound
jns
fmuls
mov
adc
dec
jns
xor
js
jg
movsb
popf
mov
xchg
push
scas
shrl
push
sarb
mov
fstpt
ret
cmp
jns
outsb
repnz
mov
sbb
test
or
mov
dec
push
dec
lcall
xor
std
jmp
sbb
xchg
adc
imul
mov
or
popa
dec
inc
and
test
call
das
xchg
and
xchg
insb
enter
push
cmc
fs
mov
sub
inc
pop
rclb
or
add
cli
arpl
mov
mov
lahf
insb
push
cltd
js
sub
mov
xor
add
mov
pop
push
in
push
int
mov
fs
dec
rcl
addr16
pop
shrl
int
cmp
and
push
ds
int
bound
mov
jl
loop
js
or
popa
sbb
sbb
pop
mov
mov
xor
inc
mov
mull
push
cmp
adc
icebp
lea
lods
jg
jecxz
dec
inc
mov
ds
frstor
daa
clc
cld
and
add
mov
cwtl
push
mov
jnp
pop
ficoms
push
test
out
popa
cwtl
cwtl
lea
jg
loopne
push
push
pop
add
fsubrs
dec
push
xchg
lcall
dec
inc
or
mov
xchg
imul
stc
sti
pop
dec
mov
mov
add
and
or
repz
pop
jmp
fisubs
out
mov
adc
and
and
jge
xor
in
popa
movsl
rclb
push
mov
mov
dec
dec
shl
arpl
sbbb
mov
mov
es
mov
adc
and
pushf
fadd
nop
das
shlb
pop
clc
imul
nop
push
and
ljmp
xor
xchg
sub
fidivrs
dec
pop
enter
nop
push
xchg
dec
dec
mov
scas
fnclex
cmpsl
add
xor
jl
sbb
jns
popa
popa
mov
pop
add
in
test
sub
ljmp
scas
lods
mov
inc
fwait
inc
xor
aad
fistpl
push
adcb
jge
xchg
test
imul
ret
xor
aad
test
int3
sub
or
inc
mov
push
cmp
addr16
cwtl
jae
jl
out
stos
repnz
mov
xlat
inc
ds
pop
inc
std
inc
aaa
cwtl
stos
das
push
adc
dec
arpl
push
mov
pusha
insl
pop
sbb
sbb
inc
dec
sarl
jp
imul
xor
test
jecxz
ret
das
dec
lcall
add
lret
bound
outsl
adc
divl
and
add
push
pop
repz
stos
pop
jp
ja
test
xor
in
mov
sub
dec
adcb
push
cmpsl
leave
outsl
push
inc
mov
movsl
call
es
jns
xchg
in
leave
movsl
xchg
mov
cmp
xchg
ficoms
lds
or
push
rcrl
mov
std
ja
addr16
push
pop
and
sbb
ja
pop
add
jb
cmp
stos
bt
lock
lea
xchg
int
sbb
fstl
push
ss
push
insb
jae
mov
xchg
pop
add
in
mov
jecxz
lret
ljmp
lock
or
cmpsl
jmp
dec
dec
or
cmp
ljmp
out
adc
cld
mov
pop
adc
ret
insb
jmp
xchg
movl
pushf
inc
dec
push
and
dec
mov
cmc
dec
mov
rol
xor
push
adc
adc
sbb
xor
add
fucom
cmc
adc
fucom
lods
add
mov
xor
cmpsb
add
adc
sub
sub
xlat
push
pop
movsb
into
mov
jg
lds
push
loope
ret
call
repnz
mov
xorb
cwtl
gs
int
push
jg
imull
repnz
jmp
push
mov
bound
mov
fldenv
shl
xchg
inc
lret
pop
shlb
fnstenv
ret
xchg
nop
outsb
repnz
in
mov
btsl
add
popl
nop
hlt
rclb
pop
fldt
pop
mov
test
jle
insb
mov
gs
cmp
dec
jno
add
test
sbb
repz
mov
popf
sti
cmp
sub
test
jmp
jecxz
mov
xorb
mov
sub
xor
or
jbe
mov
and
inc
pushl
mov
jmp
and
jae
int3
xchg
icebp
pushf
cld
imul
dec
push
daa
or
or
adc
mov
popf
and
dec
pop
inc
ss
ljmp
inc
fs
jmp
in
mov
fimull
push
push
sti
inc
xchg
aad
shrl
sbb
loop
or
mov
sub
dec
cmc
push
and
pop
mov
pop
mov
cmp
pop
cmp
mov
push
pop
xor
movsl
aas
js
push
adc
fwait
insl
pop
jmp
xor
sarl
lock
outsl
scas
addl
adc
fistl
mov
test
mov
or
rcll
into
or
xchg
mov
dec
cmp
sti
mov
aam
cld
cli
jno
jle
mov
jle
fdivl
imul
stc
es
ficomps
aaa
cmp
inc
test
adc
in
addr16
push
dec
or
dec
sbbl
cmpsb
inc
and
pop
ficompl
inc
cmp
mov
icebp
lds
cmp
outsb
in
fadds
mov
leave
pop
fptan
out
sub
jmp
adc
int3
lock
push
push
in
pop
jmp
mov
sti
ds
jmp
out
scas
nop
mov
sbb
lods
push
pushf
inc
jno
push
or
or
shl
sub
xchg
insl
sub
add
dec
mov
pop
xor
imul
stos
cs
aas
xor
sub
aam
ret
inc
inc
dec
lcall
int3
and
movsb
in
lods
movl
outsb
arpl
test
lea
fdiv
push
or
push
xlat
sbb
jg
cmpsl
and
adc
iret
sub
mov
push
dec
mov
js
lock
jae
lret
lret
xlat
cmp
ja
pop
mov
adcl
xor
mov
jg
ficomps
cmpsb
outsb
mov
imul
dec
adc
jle
jnp
xor
jecxz
shlb
ret
sub
sub
pop
and
stc
loope
pusha
nop
sbb
std
ds
inc
cmpsl
push
add
add
lahf
out
cmp
outsb
dec
push
stos
pushf
popl
xchg
stc
push
xor
pop
dec
sbbb
jg
les
sbb
mov
and
push
call
inc
sub
xchg
mov
mov
mov
push
adc
stos
daa
jle
mov
push
xchg
push
and
xchg
lcall
scas
cmp
clc
jmp
push
add
adc
dec
movsb
sbb
adc
cmp
jecxz
loope
push
xchg
adc
fldcw
arpl
mov
repz
add
aaa
cli
test
lret
ret
lea
add
mov
lahf
mov
fisubl
xchg
pushf
ret
inc
mov
lcall
push
sahf
mov
addr16
jg
sub
mov
dec
sub
xsavec
pushf
pop
push
sub
scas
jb
cmpsb
xor
xchg
mov
push
push
inc
std
lods
lret
mov
jmp
insb
sbb
in
bound
fdivrl
sub
push
push
xchg
lret
sub
dec
iret
pop
out
dec
lods
gs
inc
pop
stos
pop
dec
movsl
add
clc
xchg
push
jmp
adcb
pop
mov
dec
loopne
test
movsb
lods
ret
push
sbb
mov
and
cmpsb
mov
sub
fwait
xlat
jle
scas
int
pop
sti
sbb
fs
add
xor
xor
dec
add
and
dec
push
movsb
test
inc
pop
sti
pop
nop
dec
movsb
stos
xor
das
pop
and
test
xor
sbb
lds
lods
lock
cmp
call
pop
mov
sbb
aas
enter
sub
lahf
or
insb
cli
daa
jp,pt
pop
and
clc
add
scas
test
push
jge
dec
push
add
xlat
mov
mov
dec
mov
into
test
xchg
aam
sub
pop
cli
popa
jl
xchg
outsl
dec
out
add
lds
sub
push
mov
add
aaa
pop
and
lea
sbb
insl
sahf
inc
xchg
push
into
and
fcomip
sub
or
and
ret
push
int3
imul
ret
popf
jns
js
and
mov
dec
loop
into
data16
and
jecxz
daa
push
es
jb
cmpsw
fcoml
jne
jl
mov
lret
xchg
sbbl
arpl
inc
push
outsb
arpl
push
xor
xor
test
inc
stc
enter
outsb
sub
mov
jle
push
gs
aas
mov
mov
test
jne
sbb
pushf
test
insl
addl
rcr
xchg
imul
cmp
aaa
lahf
jbe
mov
int
mov
adc
inc
xor
test
gs
pop
xchg
roll
daa
pop
je
mov
push
xchg
inc
dec
data16
pop
push
ds
pop
pop
pushf
aaa
scas
add
inc
bound
fdiv
addr16
fisubs
scas
pop
mov
pusha
sarb
mov
xchg
enter
xchg
xor
bound
xchg
inc
push
pop
ss
arpl
movsl
addr16
xchg
int3
dec
jle
and
cmp
sbb
xchg
sbb
mov
insl
aas
sub
sbb
sti
or
scas
cs
add
xor
xchg
pushf
push
loopne
call
rol
jl
jb
int
loopne
cmp
mov
repnz
sub
jg
sub
mov
push
push
cwtl
xor
insl
aam
xchg
inc
cltd
and
mov
xchg
mov
lods
inc
pushf
inc
sub
pusha
in
cmp
xlat
sar
call
pop
scas
lcall
xor
adc
xor
iret
std
dec
into
lods
es
bound
jbe
inc
and
lret
pop
das
aas
jle
push
es
gs
inc
xchg
pop
rcl
push
jo
push
daa
fcmovbe
insb
sbb
das
jge
bound
push
cmp
or
mov
xor
mov
adc
mov
testb
cld
xor
mov
pop
xchg
test
cmp
pop
mov
lahf
loope
outsb
add
pushf
push
loope
sub
jle
and
inc
and
mov
shrl
dec
aas
lcall
popa
inc
mov
in
mov
ret
adc
aam
cltd
adc
sarl
shl
xchg
arpl
inc
and
push
jle
cmpsl
cmp
sti
jns
push
mov
sub
negb
nop
scas
imull
inc
les
aaa
les
lcall
pusha
ret
adc
or
ret
int3
mov
stos
setg
pop
dec
pop
xchg
dec
xlat
mov
mov
and
jbe
ss
cmp
repz
sti
in
jns
sbb
xchg
add
push
jg
andl
stos
pop
cld
xchg
push
mov
test
pop
xor
addr16
js
cmpsb
fdivrs
add
push
les
push
fcmove
xchg
jbe
addr16
adc
jl
adc
and
jb
lock
outsl
jge
ss
movb
lret
add
inc
rcll
fld
jb
les
adc
call
mov
xorb
fcoml
adc
add
cmp
cmp
xor
ficomps
and
pop
repz
jo
imul
outsl
mov
sbb
or
pop
xchg
addl
and
movsl
lds
and
jnp
xor
lods
lods
sbb
int3
sbb
mov
mov
pushf
cmp
pop
push
sbb
dec
popa
adc
es
mov
pop
push
incb
dec
add
sub
sbb
sbb
push
xor
clc
mov
js
mov
xchg
pop
lahf
cmc
xor
lret
aas
lret
out
icebp
xchg
inc
cmpsl
dec
mov
aad
add
sub
lret
nop
outsl
test
fsubrl
mov
repz
sarb
and
adc
jmp
cmp
dec
lea
inc
cmp
cmpsb
push
inc
sarb
sub
mov
mov
xor
cmc
lret
mov
inc
fbstp
imul
sub
inc
inc
xchg
xchg
movsl
cmc
fs
lcall
lcall
scas
mov
dec
jge
adc
xlat
xchg
cmp
test
jge
sbb
lods
jmp
int
sbb
adc
int3
in
mov
das
jg
add
addr16
push
ret
pop
sub
stos
hlt
jb
cmp
pop
out
sbb
lea
sbb
pop
mov
pop
sub
and
push
dec
scas
cltd
mov
js
sbb
pop
sbb
push
mov
negb
scas
push
xchg
insb
or
or
iret
xor
mov
add
sub
fimull
jmp
bound
sub
movsl
xor
aaa
test
fisubrs
jle
and
adc
in
sbb
or
jne
mov
imul
inc
add
pushf
dec
ret
xor
pusha
mov
push
dec
daa
dec
rolb
in
pop
pop
xchg
pop
cltd
aas
push
jmp
aad
imul
jnp
outsl
out
mov
adc
popa
jb
jb
lcall
test
cmp
mov
lds
xor
fbstp
dec
dec
out
ret
sub
hlt
cmpsb
pop
and
lcall
dec
pop
repnz
in
and
and
push
jg
cltd
adc
jne
adc
bound
std
sub
or
jb
and
int
jbe
ret
in
out
mov
iret
cs
or
hlt
gs
pop
jmp
out
xlat
jnp
pop
arpl
inc
jmp
mov
loop
fldl
adc
test
adc
addb
cld
outsl
and
push
mov
iret
ss
cmp
fwait
xor
mov
jg
lods
lret
sbb
dec
mov
xlat
jl
sti
loope
rclb
lret
cltd
cltd
jl
cmp
pop
dec
and
xchg
cmpsl
add
inc
nop
nop
leave
mov
fidivrl
shlb
mov
out
divl
and
add
ret
gs
adc
cmp
test
push
jle
leave
jb
inc
in
push
fidivrs
push
cmp
popf
xchg
dec
cmpsb
adc
lret
sbb
add
mov
insl
sub
fdivp
xor
mov
cmp
ljmp
jnp
xchg
adc
into
repz
add
ffreep
jmp
cmpsl
jge
lahf
mov
xchg
sub
mov
fisttps
ficompl
sbb
mov
push
leave
sti
test
adc
lret
bound
push
ficoml
icebp
je
mov
ljmp
test
pop
mov
xor
fldt
mov
mov
xchg
inc
das
sbb
pop
aam
out
jnp
imul
scas
xor
dec
cmc
testl
push
mov
sbb
stos
adc
into
push
add
pop
cmp
jg
jns
jmp
cmpsl
fs
sbb
sbb
mov
pop
cs
pop
aas
scas
inc
repnz
inc
insb
gs
shll
rol
mov
mov
movsl
fiadds
mov
call
ret
dec
scas
imul
aaa
fildl
push
sbb
shll
mov
pop
lods
pop
adc
push
lret
repz
mov
mov
movsb
testl
pop
addr16
out
pop
int
bound
lret
mov
and
push
lret
inc
hlt
shrl
les
shl
jne
inc
mov
dec
pop
mov
ds
pop
sbb
mov
cmp
imul
add
repz
dec
or
scas
mov
and
leave
daa
sub
push
les
ret
adc
js
pop
fwait
pop
sbb
mov
push
outsb
sub
mov
cmp
and
pop
or
xor
xchg
add
je
jb
cmp
fldt
lcall
xor
sbb
push
xchg
hlt
scas
jnp
cmp
mov
pop
dec
xor
adc
jp
jo
popf
ret
mov
shl
out
xorl
imul
sbb
adc
pop
enter
test
pop
or
popf
xchg
sbb
push
scas
ljmp
inc
jns
push
loop
movsb
aad
outsb
add
cmpsl
sub
test
push
ljmp
adc
lret
aaa
mov
lahf
cld
call
arpl
stos
xchg
mov
dec
fdivr
adc
call
in
mov
rcrb
inc
inc
xchg
cmp
dec
and
or
lret
push
add
int3
pop
xchg
nop
add
popf
sahf
mov
cld
ret
dec
adcl
xor
xchg
and
jmp
cmc
out
and
sub
xchg
xchg
in
movsl
sub
popf
sahf
jge
xchg
inc
lods
jp
jl
fisttpl
xchg
pop
xorl
test
mov
lahf
push
lods
or
rcrb
and
and
mov
popa
pop
push
les
inc
sbb
cmp
fadds
sub
inc
sbb
lcall
and
push
mov
into
push
mov
adc
jp
out
sbb
xlat
sub
cmpsb
out
push
or
out
rcrb
mov
lods
mov
mov
sahf
lahf
inc
fst
dec
mov
incb
mov
fstpl
xchg
pushf
mov
push
push
roll
icebp
repnz
pop
or
lock
daa
xor
mov
scas
jne
test
aam
push
mov
pop
nop
cmpsb
sub
cmpsl
mov
jmp
xor
xchg
pmullw
xchg
jb
fbld
sub
mov
nop
hlt
jge
aad
mov
pop
ljmp
push
push
daa
insb
bnd
xchg
push
xchg
outsb
cwtl
stos
push
or
jns
dec
into
cltd
orb
push
inc
xchg
imul
add
lahf
inc
in
and
add
in
ss
cltd
stos
and
pop
sarb
lret
fwait
std
es
stos
mov
jne
lods
loopne
lret
in
xor
jl
faddl
jge
sub
dec
in
nop
xor
xchg
bound
cmp
repz
pop
sbb
xchg
cmp
xchg
shll
jecxz
pop
les
mov
sbb
jb
xchg
lcall
rcrl
mov
xor
in
pop
lods
jo
cmp
mov
cmp
dec
enter
inc
orl
gs
fimuls
adc
mov
inc
jno
imul
sub
jb
nop
or
out
mov
add
addr16
lret
pop
xlat
dec
and
xor
fcmovne
adc
dec
repnz
out
xchg
data16
jae
push
xor
in
pop
cmpsb
stc
leave
inc
stos
jecxz
xor
and
lcall
cmpsl
and
push
jb
or
push
push
mov
add
and
push
push
jmp
sbb
test
push
fiadds
push
in
xchg
jae
mov
or
xchg
lea
mov
sbb
sub
stc
or
pop
adc
pop
lea
das
jo
loop
cmpsl
mov
cmp
mov
add
or
or
aaa
int3
fimull
pop
bound
push
sbb
fcomps
mov
adc
repnz
enter
sbb
adc
sbb
ficomps
or
jnp
loope
shll
popf
add
insl
mov
nop
lcall
jle
jecxz
mov
pushf
adc
lock
push
scas
push
subb
lock
pop
movsb
js
push
mov
scas
mov
rorb
ss
mov
cmpsl
xor
sbb
jbe
scas
adc
mov
int
xchg
sub
imul
orl
sbb
ret
pop
inc
fld
repz
imul
cmp
add
add
pop
push
or
loopne
ds
mov
test
mov
push
push
shrl
add
and
pop
out
pop
lods
pop
jo
insb
ljmp
mov
jb
das
nop
insl
or
dec
in
or
lds
push
roll
out
stos
mov
fdivs
insb
xchg
push
push
lock
jnp
ds
test
sti
mov
lret
scas
and
pop
lret
lods
ret
mov
push
test
hlt
pop
pop
jmp
sbb
add
mov
add
cmc
push
mov
stos
mov
shrl
adc
jns
test
movnti
sbb
sub
add
out
popl
cmp
sti
mov
cltd
push
sub
push
xchg
push
push
mov
loop
sti
jne
sbb
shrb
dec
fmull
sub
or
or
add
iret
inc
or
dec
mov
test
outsl
jnp
and
dec
jl
lods
lock
and
aas
out
pop
std
mov
andl
jno
or
sbb
bound
xor
es
adc
pop
enter
sarl
sbb
push
es
out
sub
jmp
outsb
dec
cmc
or
mov
ljmp
dec
cmp
mov
pushf
sub
mov
add
push
mov
dec
mov
and
in
xchg
mov
call
sbb
ja
lret
test
dec
xor
js
adc
xchg
pop
lcall
jl
mull
adc
jmp
cmpsl
lods
dec
ret
mov
test
ret
push
jno
or
or
pop
stc
out
xor
cmp
pushf
sbb
sbbb
push
mov
in
cs
xor
sub
push
cltd
inc
orb
push
cltd
sub
mov
test
cmpsl
rcrb
dec
test
sbb
sbbb
fwait
xor
cltd
outsb
sahf
dec
mov
pushf
lcall
and
sub
daa
fiaddl
daa
xor
sbb
jg
ljmp
sahf
imul
js
stc
push
enter
jmp
jo
jmp
dec
lret
icebp
jecxz
andl
loope
push
insl
mov
movsl
jnp
loopne
add
add
rol
sub
pop
xchg
pop
pop
xor
outsb
cltd
mov
pop
xchg
mov
in
pop
lods
arpl
mov
mov
lret
dec
and
aam
mov
or
push
adc
sbb
push
inc
pop
mov
adcb
mov
cmpsb
mov
or
popf
pop
pop
cld
add
cs
push
pop
xlat
add
push
fiadds
rcll
pop
rorl
xchg
jl
push
sub
or
sbb
sub
inc
mov
adc
sbb
stos
mov
sbb
mov
test
lcall
call
mov
pusha
stos
adc
pop
daa
fdivrs
rol
xor
dec
mov
cmp
loopne
lods
pop
mov
pand
repz
shrb
idiv
and
xchg
and
pop
mov
xor
repz
push
out
add
ret
xchg
or
push
inc
add
mov
inc
icebp
sbb
in
pop
test
stos
jb
dec
leave
sub
add
push
test
fstl
imul
cwtl
inc
sub
or
push
push
and
cmp
mov
sub
sarl
push
adcl
pop
int3
jbe
cld
lds
add
call
push
push
dec
add
fmull
mov
test
add
daa
xchg
or
push
subb
adc
or
jo
mov
clc
in
and
inc
mov
xor
aam
sbb
pop
rolb
adc
test
push
sahf
pop
sbb
add
adc
gs
xchg
movsl
fistps
mov
xchg
mov
and
sbb
ss
shll
adc
xor
dec
xor
pop
inc
push
jmp
ja
or
iret
test
xchg
cmp
mov
dec
addl
shlb
arpl
xchg
jno
rcrb
xchg
sbb
push
sti
sbb
pop
in
daa
test
lds
movsb
mov
xchg
push
pop
js
js
xchg
in
scas
jnp
movsb
jmp
xchg
mov
leave
mov
or
lcall
dec
push
cmc
daa
inc
ss
jmp
lods
jle
add
jb
in
cmp
mov
fdivr
pop
in
insl
dec
lods
mov
add
sbb
popf
inc
iret
sub
and
and
mov
xor
test
dec
inc
adc
jns
bnd
fiadds
push
push
jmp
mov
mov
jno
rsqrtps
adc
cmp
mov
push
push
imul
out
mov
cli
fstpl
nop
and
dec
iret
dec
jl
mov
aas
out
cmp
ficomps
and
adc
push
sbb
xchg
bound
nop
repnz
adc
push
cmpsl
and
pop
add
ja
cmp
dec
std
xchg
int
fistl
pop
insb
js
pop
mov
movsb
pop
sub
lods
or
jbe
mov
xchg
andl
push
out
das
cwtl
sbb
pop
inc
std
xor
nop
mov
pop
xchg
pop
xor
push
pop
xor
pop
das
sbb
cmp
nop
ficomps
sbb
fiadds
fsubrp
or
pop
fdivl
mov
sub
mov
jp
sub
in
sub
fs
jecxz
pusha
sub
out
jp
sub
jmp
pop
sub
aam
jae
jp
sub
push
andb
nop
push
inc
inc
xchg
popf
mov
xchg
shrl
pop
mov
movsb
xchg
flds
and
pop
inc
mov
in
aam
xchg
sti
scas
imulb
push
int3
pop
or
push
sub
push
jnp
es
push
js
stos
call
push
xchg
push
in
jns
push
scas
jb
fistps
outsb
loop
mov
pop
aam
pushf
pop
sub
lret
lea
addr16
pusha
faddl
xchg
and
lea
pop
and
jnp
adc
bound
lret
cs
add
out
or
xchg
outsl
roll
inc
fadd
mov
jno
push
rorl
mov
enter
push
das
jbe
enter
outsl
dec
pop
dec
pop
cwtl
pop
flds
mov
dec
dec
push
in
sbb
test
sbbb
test
stos
stos
fcmovne
dec
dec
jbe
pop
lock
cwtl
popa
popa
jle
add
adc
sub
ret
jbe
movsl
movsb
sbb
daa
hlt
mov
mov
nop
mov
inc
sub
scas
in
sbb
and
push
xchg
fdivrs
sahf
addr16
push
mov
xor
jl
xchg
jle
cmp
les
dec
cmp
neg
lods
inc
insb
or
jae,pt
ljmp
dec
fidivl
pop
cmp
fnstcw
pop
ret
fldenv
iret
add
pop
jbe
xchg
mov
push
fmulp
sub
sub
dec
xchg
or
lds
orb
pop
push
xchg
rcrb
inc
out
outsb
mov
push
mov
out
ss
scas
call
arpl
popa
xor
jle
movsb
inc
mov
ret
mov
mov
xchg
sbb
inc
cmp
rcl
lcall
jne
cmp
inc
mov
insl
pxor
cmp
daa
jge
push
inc
lds
outsb
mov
out
mov
add
pusha
xor
and
jp
pop
sbb
mov
mov
sahf
arpl
sbb
sbbl
jns
push
stos
jnp
imul
stos
xchg
sbb
jnp
push
nop
dec
ret
enter
jnp
es
sti
xchg
loope
imul
shrb
push
out
mov
sbb
test
in
dec
sub
lock
add
xchg
mov
pusha
add
mov
clc
cld
sub
add
sbb
jge
int
lods
popf
sahf
sub
dec
inc
mov
fdivs
xchg
pop
sbb
stos
cld
mov
stos
or
pop
enter
test
dec
daa
mov
add
or
push
stc
insl
dec
out
mov
test
mov
ds
mov
dec
xchg
popf
lds
and
test
xchg
jnp
dec
nop
jle
inc
js
lds
test
xor
pop
pop
mov
mov
data16
popf
cmp
mov
subl
jnp
sub
clc
cwtl
mov
lds
in
lds
in
filds
xorl
insl
and
ret
push
out
jns
hlt
mov
movsl
sub
ja
jmp
inc
pop
xor
bound
xchg
lods
and
pop
xchg
out
or
adc
or
xchg
aaa
std
jnp
and
push
addr16
push
sub
movsl
pop
divb
push
fmull
xor
mov
pop
cmc
add
adc
jecxz
mov
sbb
scas
push
and
xchg
icebp
loopne
xor
push
add
pop
xchg
or
aas
or
cmp
sbbb
pushf
or
xlat
test
ret
into
adc
cmp
cmp
mov
cmp
mov
pop
int3
loope
das
push
push
or
sbb
sbb
mov
xorl
push
jb
rorb
inc
std
fistpll
movsl
push
pop
inc
xchg
dec
mov
mov
cmp
mov
xor
cmovp
lods
fistps
cmpsb
sbb
sub
aas
xchg
cmpb
mov
sbb
cmp
sahf
xchg
shll
lods
test
fs
mov
inc
and
movsb
in
insl
hlt
fmul
xor
pop
inc
decl
stos
imul
mov
pusha
pop
fsts
sbb
add
xlat
push
cmp
orl
loop
dec
push
inc
sbb
repnz
mov
shll
call
mov
pop
sahf
cmp
or
cmpsl
roll
ret
pop
test
mov
fdivr
dec
jecxz
adcl
add
xchg
mov
sbb
out
daa
mov
push
sub
test
push
sbb
push
ret
xchg
loopne
pushf
inc
sbb
inc
addr16
in
stos
nop
aad
add
jns
xchg
push
mov
mov
fisubrl
iret
cmp
aas
gs
out
dec
lods
jle
adc
in
shll
cmp
jne
inc
dec
mov
outsb
test
out
lock
mov
out
jo
sbb
jl
jg
pusha
xor
fsub
pop
push
add
mov
or
cld
arpl
and
imul
hlt
sbbl
xlat
xchg
movsl
jno
das
loop
pop
or
and
nop
pop
and
inc
movsl
orb
mov
int3
cli
lods
mov
roll
push
int
jae
xor
sub
push
or
inc
xchg
lods
ds
pusha
ljmp
js
xchg
ljmp
mov
aaa
sbb
cs
fnstcw
sub
addr16
dec
inc
shlb
rcrl
mov
sbb
loope
ret
mov
pop
adc
repnz
fiadds
mov
repz
shr
orl
cs
das
jb
hlt
loopne
pop
pop
aaa
pusha
cmp
ret
push
sub
mov
dec
es
out
test
jg
fsubrl
fimuls
sbb
pop
dec
imul
jmp
faddl
mov
dec
or
sub
lods
and
addl
stos
add
sub
jg
cmc
sbb
pop
cwtl
lret
fldcw
roll
push
dec
sarl
push
idivb
imul
mov
pop
pop
cltd
push
fbstp
push
jne
ret
dec
orl
push
fldenv
mov
addl
xor
rcrl
lcall
jg
aas
sbb
xchg
cmp
xchg
lock
leave
cli
enter
dec
arpl
stos
jge
cli
and
cmp
xchg
bound
je
dec
movsb
sbb
pop
pop
stc
aas
sub
sub
push
in
cmpsl
add
add
out
pop
push
add
shrl
sti
sbb
cmp
bound
ljmp
rcrl
iret
dec
leave
movsb
addr16
add
push
mov
jo
jmp
adc
out
icebp
or
test
mov
psubusw
js
adc
xor
ss
insb
and
mov
cmp
notl
ds
push
dec
sub
jns
mov
pop
jmp
setl
mov
push
dec
repz
mov
std
fmul
mov
xchg
jae
or
or
insl
mov
fsubrl
jp
sub
adc
sbb
jle
outsl
mov
mov
push
jb
push
push
pop
pop
push
out
adc
es
decl
int
sarb
inc
shl
xchg
popf
mov
negl
dec
sti
mov
pop
mov
imul
out
imul
mov
rcrb
cmp
scas
lahf
push
shl
in
nop
pop
add
push
mov
sbb
mov
cli
push
popf
lods
loope
nop
leave
xlat
arpl
notl
mov
mov
int
nop
outsb
iret
cmp
dec
test
adc
add
or
pusha
hlt
stos
gs
inc
lock
cmp
adc
sub
or
into
rclb
hlt
rolb
imul
fldenv
dec
sub
addr16
xchg
arpl
mov
mov
sub
out
mov
jns
mov
xor
lea
mov
or
leave
add
mov
pushf
stos
add
dec
fisttpl
mov
sub
jne
xchg
popf
int3
repz
cmp
lahf
sarb
jo
dec
sbb
mov
icebp
xchg
mov
add
mov
jno
outsl
hlt
dec
scas
inc
push
xorl
mov
xchg
rol
jmp
mov
or
inc
mov
fucomip
sbbl
push
psubq
add
scas
jb
cmp
sbb
movsb
adc
dec
cltd
jnp
je
ret
rcrl
add
mov
stos
cwtl
rorl
push
push
bound
imul
ja
clc
bound
sbb
adcl
jb
das
stc
cli
jne
inc
mov
inc
pusha
lcall
cmp
je
and
mov
cld
or
inc
pop
sub
insb
ds
pop
or
stos
inc
sbbl
dec
stos
push
fnstcw
jnp
xor
sti
or
cmp
cmp
xorb
inc
sbb
add
xor
pop
in
xchg
fldenv
push
sub
cmp
and
aaa
ret
cmp
xchg
push
lock
xor
xchg
out
or
xchg
js
stc
xchg
fdivs
and
cmp
adc
push
add
out
lods
adc
ja
repz
xchg
test
fisubl
jbe
or
push
pop
cmpl
pop
aam
xchg
sahf
xchg
imul
add
pop
sti
je
pop
out
cli
adc
inc
int3
inc
mov
je
jb
xor
mov
ss
gs
push
outsl
std
mov
test
push
sbb
adc
popf
popl
hlt
cwtl
cmp
pop
dec
inc
shl
fidivs
idivb
sbbl
sub
push
jp
push
xchg
fdivs
inc
out
rcrl
push
ljmp
xor
dec
les
lret
enter
dec
ret
mov
mov
outsl
popf
aam
and
stos
pop
stos
ret
call
pop
mov
sarl
scas
lret
lock
das
jge
cwtl
mov
cmp
fwait
into
out
mov
pusha
sbb
xchg
and
mov
repz
jl
imul
insb
enter
pop
jo
fidivrs
mov
adc
out
pop
pop
mov
dec
mov
jge
jo
daa
je
push
fnstcw
dec
mov
div
dec
into
inc
mov
adc
xchg
push
cs
dec
add
push
pushl
sbb
pusha
or
insl
mov
jnp,pt
xchg
cmpps
iret
dec
gs
dec
sub
dec
mov
pop
xchg
push
lods
or
outsb
stos
test
stos
out
cli
pop
ret
test
testl
shrb
and
push
sub
and
dec
dec
add
ds
or
shlb
repz
imul
jae
and
xchg
cmp
bswap
cmp
xchg
testb
fcoms
push
into
ljmp
push
cld
shl
cmp
mov
fcmovnbe
gs
imul
sahf
cmpsl
push
ja
lcall
sub
arpl
inc
inc
jb
cmp
pop
push
mov
test
aam
gs
sahf
mov
or
insl
lds
xchg
std
sbb
pop
lods
sahf
push
xchg
vmread
mov
int3
lahf
fadds
or
push
imull
lahf
pop
rcll
push
xchg
jb
repz
fwait
sbb
cmp
push
pop
or
and
flds
pusha
lahf
scas
mov
push
jbe
sbb
fmul
bound
cmp
out
fsubs
sahf
pop
rclb
in
test
push
jb
xchg
push
push
in
shll
std
fwait
call
testl
js
pop
lret
insb
jecxz
sbb
lea
push
dec
jg
cld
push
fldl
sub
mov
push
lock
nop
push
dec
imul
out
push
shll
js
lds
ret
lods
int
test
scas
xchg
stos
inc
cmp
adc
shlb
leave
aam
lea
sarl
ljmp
jne
add
add
jne
ret
and
mov
xor
push
movsl
mov
inc
push
cld
mov
and
jle
rol
jl
jg
shl
and
ret
mov
sbb
inc
sub
mov
or
sbb
mov
jg
jnp
cmp
lret
push
push
inc
push
orl
cmp
fiadds
les
in
outsb
dec
push
es
out
sbb
imul
cmp
pop
mov
and
enter
cld
xchg
in
andl
sub
cmp
dec
repz
outsl
jp
add
or
xchg
cld
sbb
das
mov
test
ret
scas
pop
xchg
lahf
jae
das
pop
or
push
loope
push
sub
jge
cmpsb
sarl
inc
and
cli
mov
xchg
or
mov
insb
pop
mov
dec
fistpl
xchg
push
fsubl
push
shlb
outsb
into
stos
or
mov
mov
inc
ffree
or
sbb
hlt
in
xchg
lahf
mov
mov
cmp
sbb
mov
mov
jle
pand
push
mov
push
out
in
pop
clc
pop
add
and
jl
mov
mov
psrad
mov
xchg
jne
data16
dec
cmp
int3
add
out
jl
xchg
hlt
clc
mov
and
add
insb
push
nop
sbb
add
inc
dec
and
or
pop
enter
jbe
xchg
shlb
jnp
lods
push
or
push
fnsave
cmp
push
pop
dec
cmpsb
idivl
cwtl
test
lret
ficoml
icebp
out
or
jmp
sbb
mov
jbe
mov
xchg
lds
cmp
xor
mov
xor
cmp
ja
ja
enter
shll
iret
jg
mov
inc
fisubl
pop
rcll
stos
push
lret
ljmp
pop
ret
jne
jge
shl
cmp
ljmp
add
popl
mov
pop
fdivs
test
pop
sbb
lods
add
movsl
int
clc
sub
mov
mov
mov
sub
sub
inc
or
nop
mov
jl
faddl
fdivrs
das
dec
cmp
sub
insl
pop
inc
pop
inc
jae
xor
pusha
inc
lahf
xchg
jg
aaa
paddusw
mov
add
jmp
and
aam
js
push
pop
imul
cmp
push
ficomps
out
and
addb
xor
pop
inc
add
out
mov
cmp
xchg
outsl
in
or
xchg
sahf
aaa
push
inc
mov
adc
adc
pop
leave
icebp
xor
rcl
mov
mov
jle
jo
lods
lret
dec
dec
xchg
mov
mov
push
mov
push
jle
jp
iret
test
test
and
push
inc
adc
push
fstpt
in
push
mull
mov
test
mov
scas
lcall
xor
fwait
lret
gs
addl
outsb
and
push
iret
cmpsb
adc
pop
or
cmpsb
imul
clc
or
cmc
ss
fildl
lcall
dec
mov
dec
dec
jle
inc
cmc
ja
adc
inc
add
push
mov
xor
or
push
sti
fmul
cltd
mov
xchg
pop
mov
jge
jns
arpl
dec
inc
nop
jge
dec
stos
shl
dec
pop
es
push
lahf
repz
outsb
jo
es
outsb
pop
xor
sub
and
pop
push
jg
jns
and
int
out
lret
and
sbb
or
cmp
xchg
dec
xor
mov
nop
int3
or
adc
inc
mov
cmpsb
sbb
movsb
dec
in
add
dec
lds
and
or
mov
add
cmp
push
lds
push
fisubs
jecxz
sbb
out
nop
pop
call
jle
ljmp
popa
call
out
jg
and
test
sbb
push
sahf
xchg
ficompl
and
aam
cs
fcom
cmpsb
in
pop
mov
aam
inc
dec
jne
loop
sbb
shlb
jne
dec
jb
add
xchg
rorb
outsb
inc
push
cmp
es
stos
adc
loop
adc
call
inc
sbb
push
sti
test
scas
das
mov
jmp
outsl
ret
xor
adc
xor
dec
adc
xchg
lret
pop
or
inc
or
fs
mov
ficomps
jbe
test
daa
push
rclb
or
pop
jmp
jg
lahf
and
mov
lret
jns
xor
data16
icebp
leave
popf
xor
pop
fmull
adcb
addr16
mov
out
sub
imul
cmp
popf
and
xchg
jmp
pop
out
pop
out
mov
xchg
sbb
adcb
insl
inc
push
dec
mov
aaa
psubb
out
daa
push
sub
rol
ret
dec
push
dec
cli
and
rolb
mov
iret
xchg
in
or
sub
mov
jg
inc
stc
sahf
sbb
mov
jg
fiadds
sub
push
sahf
enter
test
xchg
xor
fs
std
or
push
mov
aam
cmp
std
int
xchg
lcall
jl
pop
xchg
fdivp
and
cmp
mov
mov
lock
incb
xchg
subb
adc
cmp
mov
xchg
rorl
in
mov
or
push
aad
push
clc
mov
cmp
xchg
dec
std
arpl
sub
in
mov
fwait
cmp
inc
movsb
jb
icebp
aas
pusha
fmuls
outsl
mov
pop
mov
sti
dec
movsb
adc
call
mov
pop
lock
fcompp
leave
lods
jne
faddl
pop
cmp
test
push
and
and
adc
add
cwtl
inc
pop
adc
push
stos
add
insl
lcall
cmp
lcall
cmpsb
or
fisubrl
out
sbb
imul
xor
mov
out
mov
repz
mov
loop
sbb
mov
mov
int3
shll
stc
inc
fs
aaa
lret
mov
je
ja
dec
fstpl
pop
outsb
pop
inc
daa
adcl
test
iret
fdivrs
push
or
aam
das
sub
jmp
mov
in
pop
cmp
sub
xor
imul
cli
dec
sahf
test
inc
andb
and
jae
pop
lea
pop
jo
add
xchg
pop
jo
pop
add
or
cmpsl
pop
push
frstor
cmp
inc
jle
cmp
push
mov
inc
inc
arpl
mov
std
iret
adc
sbb
mov
test
lret
sti
dec
xchg
inc
dec
imul
adc
mov
push
jnp
daa
or
daa
in
cmp
nop
sub
aam
ja
xor
pusha
daa
inc
movsl
mov
sub
mov
scas
ja
shlb
rcr
dec
jae
xor
mov
sub
and
shll
ret
sbb
sbbl
push
or
push
lcall
out
push
fildl
out
scas
cmp
xorb
push
jb
sbb
neg
mov
dec
movsl
push
xor
scas
jnp
out
pop
sub
clc
sub
cmpsb
mov
pusha
pop
lds
jp
and
test
enter
cld
mov
js
fidivrl
and
in
cltd
xchg
push
mov
ret
aaa
mov
push
inc
scas
mov
xchg
in
arpl
mov
out
inc
int3
adc
mov
insb
dec
icebp
and
daa
sub
mov
fs
xor
dec
fcomi
int
and
hlt
shl
xchg
inc
loop
popa
imul
into
scas
fidivrl
mov
mov
andb
test
mov
sbb
mull
mov
jge
sub
ds
pushf
stc
mov
mov
jns
femms
negl
cltd
sub
fildl
stos
loop
outsb
bound
mov
fcoml
sub
mov
popa
jle
ds
sub
iret
mov
shll
mov
dec
pop
insl
rol
mov
outsb
mov
int
xchg
mov
jmp
in
lds
enter
inc
or
sarb
scas
testl
push
sub
pop
std
loope
add
xor
xchg
data16
mov
push
sbb
sub
xlat
in
jne
and
ds
test
lds
pop
out
dec
pop
cmp
outsb
test
mov
cld
xor
lock
adc
push
add
fldl
popa
inc
push
stos
adc
jb
jmp
ss
fucomi
outsb
ret
nop
inc
sub
push
or
or
out
push
dec
jae
clc
jge
sti
sub
stos
or
push
jge
or
xor
movsb
pop
sahf
testl
push
dec
outsb
jmp
xchg
stc
xchg
cmc
fcom
sbb
leave
xchg
xor
std
es
movsb
and
test
jle
push
sub
push
fstps
leave
jg
or
aaa
pop
inc
in
inc
mov
popa
mov
leave
xor
test
cld
scas
cwtl
xchg
lods
outsl
dec
aas
jp
push
les
lahf
and
inc
std
leave
jp
jbe
mov
in
cmc
in
ret
and
jge
std
push
pushl
push
mov
cmpsb
and
add
or
ja
aad
xor
mov
xchg
addr16
dec
add
xlat
fisttps
add
into
js
cs
dec
int
cs
cmc
and
stos
adc
mov
jp
xchg
in
cmp
inc
mov
dec
adc
popa
popa
add
mov
push
rclb
cltd
xchg
lods
push
mov
fmul
add
xchg
xchg
into
sbb
or
sahf
sahf
arpl
dec
sti
adc
fs
push
dec
xor
shr
xor
negl
ret
jno
testb
addl
shll
push
jbe
mov
fsubl
inc
fcoml
test
test
scas
mov
mov
repz
es
jl
mov
pop
repnz
adc
push
movsb
adc
xchg
jbe
mov
nop
loop
cltd
popa
adc
lock
push
stos
je
mov
sub
sahf
jno
dec
jmp
stos
push
pop
fisubrs
incl
outsb
jno
stos
pop
movsl
pop
jno
lods
pusha
out
push
sbbb
xor
test
sbb
xlat
lcall
push
into
add
mov
sbb
ror
pop
adc
iret
add
scas
push
pop
mov
in
push
test
dec
pop
mov
ret
dec
lock
sub
pop
loopne
mov
and
sahf
cld
lahf
popf
pop
mov
movsb
cmp
imul
es
test
out
lret
add
cmc
lock
inc
add
inc
xor
or
out
mov
orl
mov
scas
leave
pop
sub
mov
jge
std
sub
arpl
xchg
jmp
insb
shlb
inc
pop
pop
rorb
xlat
fcmovu
mov
push
lock
push
lock
dec
aas
es
rol
pop
mov
das
mov
hlt
ficoml
pop
push
in
test
orl
xlat
stc
push
ss
or
nop
lods
fcmovne
jecxz
xor
enter
mov
jmp
cs
adc
loopne
ficoml
jne
mov
sub
aad
in
pop
fstps
movd
lods
xor
je
sbb
nop
jnp
inc
cmp
push
iret
sahf
fwait
mov
pop
dec
xor
repz
movsl
inc
and
pop
aam
stos
scas
push
pusha
sbb
inc
add
pop
pop
filds
pusha
dec
test
mov
cmp
lods
add
or
lods
mov
jne
add
dec
xor
xchg
out
adc
xchg
es
pop
ss
mov
in
outsl
rcrl
jp
jnp
cld
xor
add
ffree
mov
pusha
nop
outsl
js
pop
test
out
push
or
cmp
movsl
or
adc
pop
jo
push
repnz
and
in
idivl
cld
and
bound
mov
cltd
xor
and
test
xchg
xlat
sbb
jnp
adc
ret
dec
push
call
imul
pop
gs
mov
bound
dec
lahf
lds
cld
mull
loopne
add
dec
jnp
mov
cld
aad
mov
xchg
push
lret
adc
leave
arpl
stos
imul
jle
or
push
xor
xlat
push
in
mov
push
mov
movsl
aam
insb
clc
aam
and
push
ss
imul
les
xchg
jg
pop
inc
push
leave
mov
mov
iret
push
sbb
dec
dec
scas
dec
out
mov
loop
inc
cmp
stos
xor
test
sbbl
push
sti
adc
xchg
enter
xor
pop
stos
push
fmuls
je
sahf
xchg
pop
mov
out
repz
mov
aam
fadds
cmp
sahf
inc
insl
sub
xor
fsubs
rclb
jne
shrb
cmp
test
lods
and
xchg
or
ljmp
scas
icebp
enter
xchg
scas
dec
popa
push
inc
xchg
ds
mov
cmp
inc
dec
negb
dec
adc
outsb
and
jnp
jge
cmpsl
mov
sbb
xchg
jmp
nop
push
xchg
pop
dec
mov
lcall
repnz
iret
xchg
mov
add
inc
mov
jmp
fstl
push
int
ret
xchg
dec
shlb
pop
push
add
int
mov
jne
pop
lret
inc
add
mov
and
mov
in
iret
cmp
inc
push
pop
mov
pop
fisttpll
fprem1
sti
insl
dec
pop
pop
jae
mov
paddd
icebp
pop
int3
mov
xor
loopne
int3
sub
lds
pop
loop
jno
cmpsb
into
and
shll
in
sbb
push
fidivl
test
imul
cmpsl
add
dec
int3
cmp
movups
fldcw
out
push
or
fsincos
imul
inc
lcall
les
push
into
xor
pop
repnz
adc
int
dec
mov
xchg
lods
push
aam
aaa
or
es
and
jno
push
mov
hlt
and
int3
repz
and
bound
cmp
stos
test
testb
jle
out
lock
outsb
rorb
adc
push
add
sarl
pop
xchg
or
push
icebp
sti
xchg
add
jecxz
shr
xchg
sbb
rcr
cmp
pop
ss
lds
std
rcrb
in
push
pop
les
cmpl
es
rolb
mov
jg
jge
and
xor
sar
insb
jns
pop
rorl
fldt
nop
lret
dec
sti
xchg
mov
aaa
cmpsl
call
jo
leave
xor
add
push
lea
xor
lcall
sti
cli
jne
jle
sub
test
sbb
add
mov
pop
push
fbld
clc
scas
clc
clc
xor
loope
cmp
xchg
add
jb
scas
pop
push
out
lods
mov
scas
sbb
or
and
pop
adc
inc
loopne
cmp
dec
push
lcall
push
adc
and
je
and
dec
dec
stc
xchg
mov
test
aam
xor
inc
cmp
or
add
lods
or
cmp
daa
lock
lock
repz
jnp
dec
mov
test
aam
iret
aad
xor
std
add
cmp
movsl
or
je
adc
pop
stc
pop
dec
js
xor
mov
pop
dec
lods
or
cmp
cld
xchg
in
sti
push
adc
ljmp
mov
movsl
mov
sub
push
lds
fmuls
push
fidivrl
div
push
xchg
mov
dec
test
loop
push
rorb
cmp
cmp
xchg
cmpsl
pop
jne
repz
jmp
sbb
mov
push
in
jle
push
mov
jo
mov
cli
dec
or
les
push
lea
imul
dec
inc
add
pop
stos
xlat
rorb
jns
xor
aaa
ret
popf
int
xchg
cmpsl
rorl
and
or
jle
push
push
add
scas
fwait
sbb
inc
sbb
ret
or
and
xlat
and
or
flds
cmp
sbb
sub
cltd
xor
inc
dec
test
cmpsl
or
test
sbb
pop
xchg
cmp
push
cmpsl
dec
inc
inc
mov
pop
xchg
cld
decl
popa
xor
test
pop
add
xchg
or
pop
add
inc
jle
gs
ljmp
add
sbb
or
test
mov
inc
inc
pop
scas
push
in
add
sbb
push
adc
xor
mov
int3
xor
mov
mov
scas
and
addb
movsb
out
cmpsl
push
xchg
setns
in
ret
pushf
adc
push
xor
out
xchg
ret
and
cmp
mov
cmpb
pop
rcrb
mov
psubb
js
adc
jge
jle
lret
xor
pop
cwtl
les
dec
cwtl
cmpsb
pop
cld
cmp
push
stos
daa
dec
push
movsl
xor
push
nop
sub
enter
nop
xchg
cltd
sub
xor
mov
iret
daa
ds
cmp
mov
dec
jl
adc
mov
xor
jg
xor
mov
jnp
out
mov
sbb
sahf
adc
jmp
pop
or
or
pop
jne
gs
enter
xchg
scas
cmp
aam
sbb
repnz
add
aas
push
sti
fistpl
mov
dec
rolb
sub
mov
into
cmc
fneni(8087
inc
and
cltd
cmpsl
ret
inc
and
mov
push
ss
cmp
shlb
in
fwait
inc
jbe
dec
dec
incb
xchg
push
mov
jno
push
out
mov
call
adc
shrb
push
push
loopne
mov
pop
push
lahf
incb
insb
lahf
add
insb
insl
loope
dec
or
jb
sbb
xchg
jmp
lods
cli
sub
jo
cmc
lea
sub
ret
lods
cmp
les
test
push
lret
adc
repz
loope
sbb
push
jns
cmp
data16
or
clc
lahf
mov
sub
hlt
add
mov
xor
ja
pop
insl
mov
dec
xchg
sbb
add
inc
mov
cli
inc
and
repz
rorl
out
addl
adc
cmp
int
into
movsl
mov
sahf
jg
iret
rcrl
add
fnstsw
push
out
jle
lea
addl
cs
push
fwait
add
mov
and
jmp
lcall
jnp
negb
nop
dec
jle
imul
sti
ret
mov
outsl
ret
adc
in
xorl
inc
into
mov
scas
in
mov
stos
aaa
ret
shll
ret
jae
pop
stos
push
xchg
mov
in
inc
subb
out
inc
es
push
lret
adc
nop
jmp
mov
inc
dec
pop
setp
push
xchg
bound
mov
fildl
or
fmull
testb
push
bound
in
loopne
jae
or
cmc
fcmovnu
lods
leave
iret
fmuls
mov
pop
pop
dec
aam
iret
movsl
gs
jle,pt
ret
xor
fstpl
in
dec
and
fsubl
das
xor
jle
loopne
in
mov
and
inc
lret
cmp
mov
and
fsts
mov
movsl
int3
insl
dec
xor
pop
mov
cli
pusha
jge
xor
mov
fsubs
xor
cs
mov
in
cmpb
ficoml
mov
mov
lods
ljmp
xchg
scas
xchg
lods
jo
loope
imul
mov
fistl
repz
outsb
jb
xchg
test
icebp
int
femms
lock
jmp
push
pop
or
cmp
push
xchg
dec
cmpsl
outsb
pop
mov
fisubs
pop
repz
push
scas
inc
mov
scas
inc
test
cltd
pop
sub
xor
pop
sub
mov
shlb
je
cmp
push
mov
test
shlb
in
dec
aaa
jp
stos
ret
lds
les
add
sti
cld
pop
adc
incb
pop
xchg
pusha
scas
lea
or
out
je
push
push
push
repnz
pop
outsl
sahf
test
adc
push
pop
or
add
dec
outsb
add
lods
outsl
negl
movzbl
xor
arpl
push
pop
mov
adcl
push
inc
add
and
dec
lods
dec
push
fdivs
dec
adc
sbb
shrb
loop
xlat
sti
stos
sahf
xchg
sub
xchg
pop
xlat
cltd
jge
sbb
xchg
rcrb
and
xchg
add
dec
and
push
cwtl
or
fildll
into
rolb
jne
sbb
and
push
cmp
mov
out
mov
mov
shr
call
stos
push
adc
cmp
pusha
jmp
jne
aad
cltd
jg
jns
sub
testl
call
rcll
pop
jp
in
cld
mov
dec
pop
or
out
fisubrs
jae
xchg
mov
lock
push
sbb
or
scas
lahf
add
xchg
dec
jp
adc
xor
add
jnp
adc
enter
repnz
xchg
sbb
movsb
sub
int3
xchg
adc
shl
and
push
bswap
pop
aaa
mov
dec
pop
sti
dec
xchg
sbb
out
and
repz
daa
adc
loop
and
jne
push
cmpsb
unpcklps
aas
call
jecxz
add
xor
popa
adc
lods
jbe
pop
pop
push
mov
lods
fimuls
ror
addr16
sbb
hlt
movsl
std
mulb
test
push
lock
sbb
jnp
push
cmp
pop
into
push
outsl
repnz
xchg
sub
push
push
adc
jecxz
test
xor
ss
sbb
pop
add
or
push
hlt
sbb
das
lret
stos
inc
sti
cltd
push
lret
jno
ret
add
push
lock
mov
das
data16
scas
lods
adc
das
fiadds
out
xor
and
mov
xor
cli
adc
sub
daa
scas
out
inc
popl
aaa
push
sbb
jp
arpl
pop
xchg
scas
push
jnp
in
dec
sarb
push
leave
int3
mov
inc
mov
pop
pop
jno
imul
and
out
imul
inc
cmp
xor
mov
push
rol
sbb
enter
fs
mov
pop
out
sbb
sti
jno
insl
dec
mov
mov
outsl
cli
jecxz
test
jp
jmp
in
inc
mov
je
pushf
add
jmp
mov
loop
idivl
dec
nop
adc
xchg
push
adc
mov
nop
jbe
cmp
jmp
mov
sbb
repz
fidivs
mov
ljmp
mov
data16
pop
pop
add
inc
ret
lods
jnp
pop
rcl
jns
inc
jecxz
push
aaa
popa
jp
es
pop
adc
xlat
mov
sbb
sbb
push
jle
push
lds
leave
xor
fnstsw
addr16
push
fsub
iret
leave
aam
pop
mov
push
sbb
enter
mov
test
xor
adc
daa
mov
in
xor
aad
mov
inc
test
and
mov
cmp
cmp
es
jb
mov
xor
inc
imul
imul
adc
aas
push
call
and
and
add
jo
test
sub
cmp
jecxz
sub
add
out
push
stos
addr16
mov
lods
mov
sub
jae
cmc
sbb
cwtl
mov
or
test
and
xchg
sbb
xchg
mov
cmp
inc
sbb
out
js
test
repz
das
sbb
adc
leave
inc
sub
movsb
imul
test
mov
and
cmp
fidivrs
sbbb
mov
xor
jbe
repnz
and
jne
fs
imul
popf
mov
aaa
dec
daa
mov
or
pop
or
xor
dec
iret
bound
dec
pushf
jmp
mov
outsl
mov
loopne
sti
cltd
ss
call
xor
scas
mov
outsb
dec
movsl
in
push
sub
cwtd
mov
rcll
lods
aaa
sub
push
sbb
lret
and
stc
adc
jbe
ljmp
loop
mov
sbbl
mov
out
add
xchg
push
mov
push
mov
ret
jnp
hlt
pop
shl
mov
adc
fcomps
scas
lds
clc
nop
add
push
out
xchg
hlt
sbb
sub
rcrl
clc
or
imul
addb
mov
xor
mov
stos
mov
dec
hlt
mov
mov
stc
mov
lock
fldl
xor
jg
nop
add
dec
mov
jbe
imul
xchg
popa
sub
das
mov
mov
add
and
outsl
xchg
fistpll
sbb
iret
test
rcrl
sti
sbb
fisubs
sbb
lock
ds
scas
outsl
add
xchg
or
adc
xor
xlat
and
push
je
repnz
sbb
icebp
add
popf
xchg
lods
mov
inc
aad
add
scas
sti
les
sbb
dec
cmp
jns
mov
adc
push
int3
nop
dec
xchg
mov
in
pop
outsl
adc
xchg
setle
push
aad
jmp
ror
sbb
mov
xor
scas
mov
mov
jns
jo
in
lds
sbb
xor
mov
and
push
sub
mov
shlb
dec
push
pop
das
push
stc
and
push
push
pop
mov
aaa
xchg
testl
pop
lahf
sbb
cmp
sti
sbb
inc
add
insl
mov
push
clc
sub
mov
insl
test
adc
fstps
icebp
lock
mov
pop
dec
lds
adc
pop
push
fstl
leave
fsubr
aad
test
dec
sarl
in
cld
or
mov
imul
jp
test
push
add
sub
fbstp
adc
scas
cmc
rol
dec
push
lods
ja
out
or
rcrl
sti
mov
pushf
ljmp
xchg
xchg
enter
sub
inc
xor
jnp
mov
pop
sahf
lds
lret
flds
mov
adc
pop
test
add
pop
cmpxchg
int
push
push
cwtl
ret
rorl
sub
jl
dec
xchg
outsl
jp
pop
icebp
push
and
popf
push
push
sahf
mov
cmp
jno
inc
sbb
inc
jecxz
or
les
testl
je
pushf
push
cmp
lret
or
lcall
jecxz
xor
push
in
pop
test
aas
inc
ficoms
shr
bound
rol
ds
adc
mov
mul
pop
mov
mov
xchg
rol
daa
mov
mov
js
mov
pop
mov
push
in
fldt
je
and
sti
inc
hlt
mov
ljmp
orb
sbb
fs
aas
bound
adc
push
std
shlb
xchg
ja
add
jge
pushf
arpl
ret
push
lds
jge
jne
das
xchg
mov
not
pop
scas
push
mov
adc
and
fimuls
jae
mov
dec
xor
jl
push
push
mov
test
fdivr
imul
xor
outsb
sub
popf
in
jl
sub
daa
jl
loope
out
adc
imul
pop
insb
lods
jne
adc
mov
mov
inc
xchg
loopne
shll
bswap
ljmp
sub
int
pop
inc
sarl
lcall
adc
out
lea
jge
add
sub
ss
jmp
jo
mov
mov
adc
inc
nop
mov
clc
cmc
cmpsb
jo
test
jns
or
out
fxch
jo
pop
cltd
aas
mov
fstpl
mov
ljmp
jg
xor
adc
lods
inc
cld
sub
das
and
add
pop
push
nop
cld
movsb
push
arpl
outsb
inc
adc
outsl
scas
xchg
lods
push
jl
push
andb
xor
shl
xchg
adc
dec
out
test
repz
fs
insb
leave
loop
inc
sahf
pop
push
repz
xchg
xor
iret
shrl
sub
push
add
aad
push
dec
and
pop
mov
cs
sub
aam
repz
addl
popf
rcrb
cmp
ret
cmc
sub
cmp
push
mov
dec
sbb
fdiv
fwait
push
xchg
pop
loop
pop
cld
cli
addr16
stos
dec
dec
inc
dec
jno
xchg
push
xchg
pop
sbb
jl
bound
daa
jae
fs
dec
push
pop
xchg
fdivs
pop
jnp
in
pop
xchg
mov
fistpll
shrl
loope
mov
pop
dec
mov
jle
dec
shld
sub
jbe
xor
in
sub
mov
inc
les
scas
push
jle
dec
data16
inc
mov
pushf
xor
imul
or
adc
test
sub
nop
loop
jns
inc
clc
jns
movsb
cmp
push
lds
and
push
enter
cli
add
pop
sub
inc
xchg
mov
mov
cmp
xchg
pop
js
daa
scas
test
adc
and
and
pop
add
jl
daa
test
mov
cmpsb
sldt
mov
sub
ljmp
or
inc
movsbl
sbb
cld
jg
fwait
test
mov
aad
pop
sar
test
pop
mov
fs
clc
mov
pop
jne
aas
cmc
xchg
pop
xor
and
lock
jnp
ret
ds
mov
dec
insl
jb
dec
mov
lcall
add
daa
test
push
xor
lods
sub
pop
dec
adc
xor
cmp
test
rcrb
mov
mov
insl
jmp
push
jle
pshufw
mov
fsubrl
dec
xchg
pop
jae
adc
popf
xchg
nop
sub
addr16
lods
std
xor
popl
ret
out
int
sbb
dec
repnz
jno
out
sbb
cmpsl
arpl
mov
xchg
rolb
lds
gs
fdivrs
popa
rclb
sub
pop
insl
dec
aam
sub
test
cmpsb
sbb
inc
icebp
in
xor
pop
inc
cmp
stos
lahf
dec
sbb
es
aam
test
sbbl
mov
xchg
aam
cwtl
xchg
test
jo
sbb
push
xchg
test
out
sbb
push
inc
test
and
sub
addr16
cmpsb
mov
out
daa
lds
lret
sbb
in
sub
xor
jge
mov
dec
test
jns
adc
push
jecxz
nop
cmp
lcall
hlt
faddl
pop
adc
xchg
dec
sbb
xor
mov
dec
into
lcall
inc
jne
jle
out
lcall
pop
push
and
cmpsl
fnstcw
into
jbe
imul
shlb
add
imul
lahf
outsl
xor
dec
push
popa
xlat
inc
push
and
xchg
sbbb
mov
mov
vcmpss
xor
push
jb
js
push
out
and
push
cmp
push
imul
or
test
outsb
adc
mov
cld
adc
int3
dec
inc
je
mov
lret
fwait
iret
jmp
xor
fsts
xchg
insl
cmc
ds
jp
mov
outsl
xchg
jnp
orb
je
push
pop
push
js
lret
repz
jne
cli
shll
jo
in
mov
adc
mov
insl
rclb
dec
scas
mov
push
push
jne
dec
dec
scas
push
sbb
fs
js
shrl
pusha
sti
fstl
xor
inc
int3
iret
sti
nop
std
bound
mov
xor
or
test
iret
lods
mov
inc
jo
inc
or
jmp
mov
jnp
div
js
inc
inc
ror
inc
test
jmp
shlb
or
jp
xchg
pushf
dec
mov
movsb
je
je
pop
push
add
push
aaa
jecxz
cltd
pop
adc
mov
lahf
mov
pop
pop
jge
out
testl
stos
enter
sbb
adc
xor
jmp
scas
fmull
inc
mov
fists
or
out
shrl
mov
jno
aas
jo
ret
ficoml
ret
mov
incl
push
rclb
xchg
xor
or
push
dec
cmp
sub
inc
mov
call
adc
and
lret
xlat
decl
mov
add
ss
les
jne
mov
push
std
je
sbb
fisubrs
mov
cmp
push
popa
xor
mov
das
sbb
es
push
jmp
sbb
ret
cmc
rclb
popa
pop
xor
dec
and
cmpsb
pop
xor
sub
cltd
or
dec
xchg
sbb
rolb
or
cmc
mov
test
push
xlat
adc
cld
outsb
aad
sbb
sbb
jns
sbb
je
sahf
push
insl
js
popf
push
nop
or
mov
inc
xor
push
mov
jle
cmpsb
jg
pusha
jnp
dec
kmovw
pushf
test
add
mov
jb
bound
ret
xor
push
ret
jmp
scas
jle
mov
movsb
dec
xchg
adc
mov
subl
imul
jecxz
xlat
mov
cwtl
push
sbb
and
stos
xchg
repnz
roll
jle
inc
pop
pop
mov
pop
add
insl
fs
out
lock
xchg
and
test
mov
into
add
jb
rorb
inc
jae
lahf
dec
xor
xor
push
add
sub
mov
inc
or
jne
hlt
xor
dec
shl
xchg
iret
dec
roll
dec
sti
push
outsl
shrl
fcoms
jp
cs
mov
push
mov
inc
push
sbb
xor
fcmovne
push
sub
fdivs
pop
pop
mov
fwait
subl
negl
jle
pop
sub
popa
add
inc
mov
jb
inc
pusha
pushf
mov
sub
cmp
shll
lods
popf
icebp
test
mov
fildll
sub
enter
sahf
jmp
pop
shlb
dec
adc
fisubrl
jmp
jb
mov
aaa
daa
testb
add
mov
cltd
cmp
inc
push
cli
fistps
js
xchg
xchg
xor
sbb
mov
cmp
dec
or
mov
lock
pusha
adc
inc
stos
mov
jl
rcll
scas
popf
fptan
ret
in
mov
jbe
imull
orb
jp
sub
sub
jb,pt
enter
xor
add
dec
jp
sub
nop
jns
push
mov
hlt
and
faddl
or
out
popa
hlt
push
jo
in
mov
daa
push
xchg
das
iret
sbb
sub
test
mov
out
jle
sub
sbb
lret
cmpsb
xchg
lret
and
cmp
mov
jp
pusha
mov
inc
mov
or
pop
inc
movsb
outsb
xor
xchg
inc
rolb
loope
dec
mov
push
sti
pop
insl
rcrb
cwtl
mov
push
mov
bound
pop
push
inc
cmp
cmp
pop
cld
popa
or
push
cltd
dec
xor
jle
pusha
lods
mov
sbb
sbb
dec
xor
es
jb
adc
sub
fwait
xchg
add
ficoml
jb
dec
mov
adc
sbb
fldcw
lret
add
jl
in
add
and
lods
pop
es
insl
sbb
lret
add
dec
lea
dec
jmp
pop
sub
xorl
mov
aas
dec
outsl
popf
xchg
cmpsl
pop
sub
lcall
mov
out
sub
aaa
push
lea
stos
xor
or
loop
or
mov
pop
and
inc
push
fstpt
jns
in
mov
in
std
cmp
fwait
ret
flds
cmp
inc
test
mov
and
push
nop
mov
daa
pop
sub
xor
xchg
outsb
add
test
and
lcall
sbb
pop
cmp
imul
pop
cmp
subl
jg
daa
dec
imul
test
bound
test
push
sbb
jb
cmpsl
ret
or
add
and
fidivrs
push
add
cs
fldl
push
and
sarb
pop
shlb
mov
and
lea
push
arpl
sbb
xor
jae
je
pop
inc
dec
add
sbb
push
push
sbb
cmp
out
aad
mov
imul
loopne
push
cwtl
jb
je
sub
lods
out
lea
mov
xor
ficomps
mov
xchg
adc
imul
lret
xchg
jl
xchg
add
push
sbb
daa
pop
and
mov
adcl
jp
fdivs
stos
aaa
cmp
cmc
idivb
popa
popa
or
nop
cmp
mov
mov
gs
push
push
jge
scas
std
xorb
es
push
adc
pop
sub
mov
mov
adc
jo
in
lock
in
jae
mov
add
repnz
mov
subl
push
jnp
fistpl
mov
cs
adcl
cwtl
pop
xchg
and
pop
xor
xor
ljmp
mov
xchg
and
test
aad
mov
pop
loopne
les
push
push
push
jp
mov
xor
stos
out
aad
pop
popa
inc
aaa
xchg
pop
ffreep
out
aad
fadd
test
push
mov
and
push
test
pushf
push
push
adc
or
mov
fiadds
cltd
stc
adc
cmp
iret
aam
repnz
mov
cmp
rcl
aad
adc
aaa
subb
xor
lods
loope
adc
adc
mov
or
mov
pushf
in
xor
jmp
cmp
out
movsl
lret
or
adc
inc
nop
push
xchg
mov
pop
insl
xlat
mov
addb
icebp
ret
enter
orb
ljmp
sbb
js
xchg
and
push
cltd
xchg
out
and
mov
mov
leave
mov
iret
sbb
in
mov
andb
cmpb
jmp
mov
inc
push
mov
push
mov
mov
ljmp
or
jl
popa
fs
loope
gs
mov
add
rcl
test
push
add
add
clc
or
inc
sbb
daa
mov
sbb
fwait
jne
out
sub
adc
or
les
mov
addl
xor
movsl
pop
mov
arpl
sbb
mov
xchg
mov
sbb
xor
pop
and
mov
mov
lret
cmp
out
in
repnz
xchg
jae
in
mov
lea
popa
sbbb
or
ret
ss
ljmp
adc
imul
arpl
mov
pop
sub
clc
xor
leave
jne
mov
jg
jae
mov
fnstenv
sarl
sub
test
jnp
stc
sub
pop
and
xorb
jmp
or
or
add
cmp
add
mov
lods
push
cmp
cmpsl
xlat
and
out
test
dec
imul
into
dec
test
adc
ds
test
lea
out
xor
stos
inc
mov
dec
shl
jb
adc
push
ret
pop
or
lock
pop
popf
sub
xor
insl
test
pop
sahf
sbb
fcmovu
fwait
cmp
xor
jmp
testb
stos
push
pop
test
hlt
adc
lahf
xchg
xor
sbb
pop
push
mov
scas
add
jecxz
fisttpl
aaa
mov
test
imul
lret
mov
fwait
pop
xchg
pop
lea
dec
mov
scas
xor
int3
out
inc
xor
adc
cmpsl
jmp
movsb
mov
js
mov
adc
push
cwtl
ret
js
adc
stos
mov
cmc
aaa
imul
add
push
fwait
dec
push
mov
sub
xchg
push
pop
lods
xor
stos
mov
push
pusha
test
push
or
sbb
mov
xchg
add
sub
and
nop
lock
cmp
into
cmp
mov
mov
scas
mov
outsl
into
or
stos
cmp
fs
mov
test
lret
repz
xor
sarb
outsl
fsubrl
addr16
daa
std
inc
sub
les
lock
jge
int
sub
mov
int
add
push
push
xchg
pop
mov
addr16
push
inc
mov
pop
lea
es
stos
outsb
es
arpl
shl
or
imull
xor
or
xchg
aas
inc
pop
daa
jo
lock
mov
call
enter
sbb
sub
pop
sub
fmul
push
rclb
es
xor
sub
jnp
pop
sarl
add
test
daa
int3
mov
dec
mov
pop
insb
fwait
loop
adc
and
ljmp
xor
in
cs
push
jne
lret
push
pop
xlat
pop
mov
std
xor
shlb
inc
inc
fstpl
pop
add
sub
les
xchg
test
test
mov
mov
jp
lcall
jecxz
push
insl
mov
push
add
or
bound
sub
and
sub
stos
pop
sahf
mov
aad
pusha
mov
out
xor
das
nop
cld
sub
nop
fwait
jg
imul
sub
sub
cmp
pop
cld
mov
gs
jo
dec
test
push
push
xor
push
push
fidivs
adc
stc
sbb
stos
ljmp
mov
pop
stos
push
push
push
sbb
lds
dec
imul
daa
jmp
rolb
popf
xchg
mov
jge
mov
adc
push
movsl
inc
mov
pop
mov
xor
scas
out
xchg
int3
mov
push
mov
stos
jo
mov
sbb
aaa
cmp
cld
or
jae
or
push
mov
enter
mov
jae
popa
pusha
cmc
fldl
or
cli
imull
jae
jg
push
outsl
add
insb
mov
dec
push
mov
or
mov
jo
push
dec
pop
mov
inc
or
mov
out
das
ja
dec
cld
aas
ljmp
in
pop
push
add
cmpsl
push
out
push
adc
jbe
mov
jnp
add
cld
push
inc
pop
pushf
popa
mov
xor
iret
lcall
dec
repnz
outsl
jmp
aad
fisubrs
pop
arpl
out
mov
pop
push
out
imul
dec
testb
and
mov
dec
inc
and
xchg
aam
test
or
popf
call
xor
pop
xor
lods
jns
inc
ja
sub
lcall
inc
pop
mov
jp
cmp
sbb
cmp
dec
das
sti
sub
pop
testb
inc
lret
jnp
push
fcoml
mov
lds
scas
push
stc
test
fists
imul
fiaddl
imul
inc
stos
adc
and
or
scas
jle
push
add
loop,pn
mov
xchg
notl
addl
loope
test
int
es
push
out
das
xchg
xchg
sti
pop
push
or
pop
adc
incb
mov
pop
dec
pop
xchg
sbbb
stos
inc
dec
scas
stos
ret
testl
das
ret
shr
push
sbbb
pop
loopne
ret
scas
inc
pop
fisubs
mov
adc
pop
loopne
idiv
inc
mov
cmpsb
popa
dec
stc
fs
inc
mov
outsl
andps
fbstp
xor
mov
push
sub
pop
scas
stc
clc
push
in
les
pop
mov
loopne
mov
or
jnp
jb
out
xor
enter
sbb
js
push
call
adc
inc
fdivs
dec
es
repnz
mov
push
push
cmp
out
outsb
or
and
or
xchg
mov
push
outsl
sahf
sbbb
xchg
jg
adc
mov
shll
insb
xchg
push
dec
pop
xchg
xor
ljmp
push
xor
push
faddl
shrl
leave
mov
nop
mov
fwait
nop
mov
mov
in
ficoml
xor
pop
mov
not
dec
dec
sbb
rcll
scas
push
fwait
jno
fimull
pop
mov
fnstenv
imul
test
subl
inc
aas
rcrb
jg
add
roll
call
das
std
mov
dec
sbb
mov
es
pop
testb
das
cmp
push
das
call
and
sbb
leave
pusha
mov
out
adc
mov
inc
mov
dec
int
lret
mov
iret
leave
test
push
jae
jb
add
pushf
ljmp
inc
push
inc
fistl
dec
xchg
pushf
and
outsl
leave
adc
subb
out
mov
push
fwait
xchg
and
xlat
nop
roll
sbb
outsl
fnstcw
lods
sub
mov
mov
pop
dec
xchg
or
bound
cltd
xor
jg
loope
stos
push
mov
pop
dec
inc
mov
rcll
enter
pop
test
ret
jmp
iret
ja
cwtl
divl
les
cli
inc
insb
fstpt
inc
push
cs
bound
push
in
fdiv
fwait
or
pop
push
mov
aam
sub
movzwl
orl
pop
call
adc
mov
xor
imul
in
gs
call
orl
sub
jmp
sbb
jl
rcl
fcmovnu
iret
jecxz
push
out
push
xchg
lcall
mov
push
jmp
jle
ret
sub
fyl2xp1
jge
xchg
mov
cs
inc
stc
push
jns
xor
test
dec
adc
and
xchg
push
sbb
out
inc
mov
sti
mov
jmp
popa
push
cwtl
mov
push
in
subb
inc
fidivs
lock
aad
lcall
out
jae
cmp
shrb
cli
and
mov
mov
les
mov
or
pop
sub
inc
into
sub
xchg
push
aaa
xor
push
outsb
enter
test
and
std
repnz
clc
sbb
push
and
daa
xchg
mov
and
incb
push
adc
xchg
scas
push
cmp
popa
inc
jp
push
ret
sbb
jbe
xchg
pusha
adc
les
mov
std
push
mov
iret
imul
mov
xchg
shlb
out
push
jp
cmp
mov
sub
or
sti
test
mov
es
xor
xchg
fnstsw
mov
sub
sub
movsl
inc
fcmovu
popf
adc
ljmp
and
scas
jge
sbb
je
mov
sarl
ucomiss
sahf
cmpsl
mov
push
sbbb
xor
push
arpl
inc
mov
out
pop
fs
sub
out
ret
and
fwait
rcrl
xor
add
jmp
dec
pusha
push
pop
xchg
jmp
sub
mov
dec
pop
xchg
dec
outsb
sub
daa
push
fsub
cmp
mov
jb
sbb
mov
sub
push
hlt
pop
inc
jbe
test
mov
ret
mov
inc
sub
nop
loop
xlat
ja
leave
lock
jb
pop
push
mov
push
jno
jmp
negb
mov
ljmp
popf
into
sbb
lret
pop
movsb
es
jle
in
sbb
xor
icebp
pop
xor
pop
call
popf
jge
out
jae
mov
jl
sub
dec
cs
and
int3
fcmovu
iret
push
arpl
adc
push
inc
inc
dec
mov
in
repz
push
mov
xchg
stos
flds
clc
call
stc
fistl
std
into
aas
in
dec
in
and
pusha
xor
adc
imulb
mov
and
add
fs
push
mov
cmp
cmc
nop
adc
dec
out
test
shll
imul
ljmp
cmc
dec
mov
pop
sub
sub
scas
sub
fstl
push
test
stos
in
mov
push
xor
adc
in
js
xchg
movsb
sub
mov
stos
xchg
inc
enter
fdivrl
ljmp
dec
and
scas
sbbl
pop
jb
in
orb
flds
int
lods
call
icebp
call
out
test
xor
mov
in
aaa
iret
mov
fisttpll
mov
in
jno
stos
lret
in
fsts
shrl
loope
jmp
jb
in
cli
xchg
pop
mov
mov
movb
jne
icebp
sub
dec
jae
fmuls
dec
mov
testb
out
adc
rclb
add
inc
push
popf
mov
and
in
jo
test
pop
lods
ds
ds
dec
clc
sub
and
adc
cmpb
repnz
sub
sub
xchg
dec
mov
subl
jle
mov
das
cmp
jg
icebp
test
push
scas
xchg
inc
mov
les
ret
cmp
icebp
push
repnz
repnz
adcb
push
push
roll
sbb
pop
and
orl
addr16
dec
add
or
add
aam
rolb
arpl
sbb
mov
or
mov
ss
fs
mov
movsb
and
clc
sub
dec
imul
nop
adcb
inc
push
aas
outsl
fbld
or
aam
mov
pop
sbb
or
mov
dec
sbb
jecxz
mov
iret
aad
dec
dec
test
ljmp
pusha
dec
mov
rcll
sub
xor
int
into
repnz
and
pop
add
fsts
mov
xlat
fwait
popa
inc
out
leave
lcall
jl
dec
xor
je
je
cmpxchg
pop
dec
test
loope
fcmovb
test
out
dec
xchg
mov
mov
jo
imul
mov
flds
xchg
fimuls
test
rol
dec
pop
and
out
enter
jge
repz
and
xlat
mov
outsl
jg
jg
xor
iret
adc
push
cmp
lret
mov
test
pusha
mov
mov
shlb
data16
and
xchg
loopne
andb
sti
jg
jne
mov
dec
call
jge
mov
mov
hlt
inc
pop
test
cwtl
sub
push
add
fstpt
mov
pusha
sbb
mov
mov
leave
int3
pop
mov
stos
sbb
add
fimuls
or
jle
shrl
mov
fld
std
loope
cli
rol
xor
mov
or
fadd
out
cmp
outsb
push
or
or
lret
and
inc
pushf
test
sub
adc
subl
pop
mov
mov
sbb
adc
and
out
xchg
push
add
shrl
fistl
inc
in
js
cmp
scas
fmuls
test
mov
sub
enter
jbe
and
push
inc
mov
shll
xlat
xor
mov
inc
adc
push
or
sub
cmpsb
pop
xchg
dec
xchg
mov
or
dec
sbb
and
xchg
push
in
lea
and
stos
add
lea
push
iret
cmpsb
pop
add
shrl
fs
jmp
jo
cmp
jns
inc
shrb
pop
repnz
xorl
cmp
inc
or
xlat
fwait
pmaxub
push
dec
loope
mov
aaa
push
addb
sub
add
inc
ss
test
int
adc
arpl
push
dec
nop
jno
sub
mov
daa
or
and
gs
mov
xorb
stc
jl
mov
inc
es
push
cli
outsb
adc
test
or
dec
mov
cmp
jle
xchg
or
mov
or
iret
dec
mov
dec
cmc
sub
dec
xchg
and
jmp
popa
movsl
lcall
lds
sbb
jle
dec
inc
sub
mov
mov
xor
mov
or
mov
sbb
lahf
imul
pop
stc
iret
test
pop
daa
das
sub
xchg
cmp
fucomip
test
je
cld
push
ret
bound
cmc
jecxz
push
icebp
pop
mov
aam
sub
push
nop
sahf
push
aaa
imul
lcall
mov
fisubs
adc
sbb
imul
jle
jo
sub
dec
outsb
sub
js
push
push
xlat
add
adc
stos
mov
mov
push
cmc
mov
lret
int3
test
ret
pop
sub
ficoms
fmulp
pusha
dec
fwait
std
pop
les
cmpsl
cltd
lds
mov
jns
adc
stos
pop
fidivrs
sbb
setb
ret
push
pop
push
add
stos
imul
shlb
xor
add
daa
sahf
mov
test
int
jns
inc
adcl
xchg
dec
jg
ret
xchg
hlt
mov
mov
jno
outsb
lds
cmp
sub
dec
push
stos
cmp
mov
push
sbb
out
nop
add
std
add
ret
out
inc
js,pn
or
push
dec
or
mov
in
xlat
mov
mulb
lahf
repz
xor
fistps
nop
and
mov
sbb
aaa
loopne
jae
mov
xor
fistpl
and
pop
jle
out
movsb
push
fsubr
cld
pop
push
mov
add
pop
sub
in
arpl
ret
lea
ret
mov
call
add
xchg
insl
xor
xor
add
les
scas
inc
mov
inc
bnd
or
fdivrl
stos
mov
outsb
jo
mov
dec
sub
sti
mov
out
pop
repnz
cld
mov
adc
jns
xorb
pop
xchg
in
aam
in
cmc
clc
cmp
push
mov
or
push
out
mov
push
jge
adc
pusha
js
sbbl
cmp
in
shrl
sti
leave
push
into
es
lcall
pushf
incl
push
cmp
xchg
lret
inc
into
mov
jo
mov
dec
ss
sub
mov
jle
or
mov
ficompl
jne
mov
pop
pop
nop
xor
ficompl
mov
std
push
data16
add
push
dec
pop
mov
sbbl
jg
push
inc
andb
inc
adc
cmp
pop
cltd
sub
leave
dec
push
insl
daa
xchg
dec
fcompl
int3
lea
insl
mov
jns
les
stos
insl
xor
push
jg
xor
mov
negb
push
xchg
and
cmp
dec
lods
mov
rcrl
push
adcb
mov
sbb
outsb
lods
mov
aad
dec
fdivrs
std
movsl
scas
gs
or
stc
aad
sub
pop
xor
push
out
add
out
rorl
mov
sbb
sti
ret
push
sbb
mov
or
adc
jmp
mov
mov
pop
push
push
xor
adc
cltd
inc
sbb
and
fldl
jae
popa
out
clc
lcall
jo
sub
pop
pop
std
sti
aad
and
mov
push
fwait
inc
mov
sub
daa
je
lcall
in
in
inc
mov
xchg
das
xor
stc
out
push
ret
jae
dec
add
fwait
xchg
aam
pop
cmpsb
icebp
jbe
paddusb
adc
add
dec
test
jle,pn
push
jl
jb
add
sbb
cmp
lret
adc
ss
pop
sbbb
push
out
das
push
fwait
adc
or
cmovbe
dec
imull
ret
fnstcw
and
adc
jns
mull
iret
mov
jmp
movsb
adc
inc
cmc
cld
les
movsb
pop
lock
xlat
push
test
gs
or
inc
int
loope
push
mov
iret
js
aaa
scas
pusha
xchg
out
shlb
sbb
xor
lahf
pop
adc
sahf
jo
scas
cmpsb
mov
mov
in
data16
add
loop,pt
std
adc
outsl
add
orl
mov
aaa
sbb
test
pop
test
int3
pop
sub
outsl
pushf
mov
popa
fwait
jg
gs
jb
ret
push
sub
jne
jns
flds
ret
lods
es
fisubs
mov
or
push
and
lods
cmpsl
mov
xchg
sbb
int3
pop
xor
xchg
mov
pop
sub
cmc
jne
jg
and
or
xor
and
xchg
mov
inc
in
xor
in
xor
lods
mov
sbb
iret
dec
jo
adc
mov
xlat
xor
sbbl
dec
fwait
nop
sbb
xchg
imul
inc
loope
stos
jo
add
loope,pn
shll
jne
add
movsb
push
cmp
sbbb
imul
adc
cmp
sbb
repnz
pop
sbb
or
xorl
mov
sub
inc
push
scas
sub
add
ret
lret
std
aas
mov
add
and
adc
outsb
push
enter
xchg
add
js
flds
jo
inc
xchg
and
mov
ss
jo
int3
scas
sub
cmp
inc
sbb
rorl
add
lahf
cmpsb
mov
aas
sbb
cwtl
test
fisttps
cmp
inc
lahf
jp
repnz
ja
sub
ret
fmuls
nop
sbb
add
xchg
and
shll
cltd
xor
inc
mov
mov
push
mov
outsb
repz
lahf
dec
mov
inc
sub
jne
and
jg
hlt
and
out
xlat
sub
jns
push
adc
mov
xchg
je
pop
subb
inc
cltd
nop
pop
mov
xchg
push
test
mov
icebp
fdivr
xor
xor
into
cmp
jo
aad
pop
mov
or
lret
sub
jg
push
add
pop
out
push
xchg
ss
sub
and
mov
stos
jl
pop
lcall
or
imul
jl
mov
imul
xchg
mov
lret
es
sbb
cmp
sbb
push
add
lahf
int3
mov
mov
mov
sub
add
cmove
mov
xchg
pop
mov
and
jb
insb
xchg
and
addb
test
call
mov
pop
inc
jg
pop
cld
xchg
cmc
popa
push
fs
or
mov
cld
pop
sub
nop
das
cmpsb
jns
mov
push
stc
scas
dec
xor
xchg
pop
in
dec
stos
push
int
push
scas
cld
lods
push
mov
lahf
add
mov
test
sbb
inc
xchg
hlt
cmp
mov
dec
pusha
sbb
or
in
jle
cmp
xor
inc
mov
or
dec
push
je
adc
lods
popf
inc
sub
xchg
mov
jo
mov
nop
and
das
xor
mov
stos
jp
aaa
idivl
pop
fsub
mov
lahf
mov
xlat
jmp
cmp
clc
stos
jo
scas
xchg
leave
mov
xchg
ja
lods
scas
inc
ror
imul
cmp
test
push
and
mov
mov
lods
sbb
adc
andl
mov
jo
ret
or
ss
ljmp
idiv
scas
jnp
inc
jp
orb
xlat
add
bound
cmpl
hlt
ja
es
sarl
in
outsl
or
test
xchg
dec
les
xor
add
andl
mov
inc
pushf
mov
xor
gs
lahf
xor
adc
mov
fcomps
popa
add
idiv
cmp
mov
jo
and
lahf
or
jnp
sbb
sub
subl
arpl
xchg
ss
outsl
test
out
in
fstpt
mov
aam
xchg
mov
int3
andl
ret
int3
popf
out
add
les
add
cmpsl
cmp
pop
arpl
fwait
and
sub
ljmp
popa
xor
mov
add
mov
sbb
jge
add
lods
aad
mov
test
or
jo
imul
negb
jnp
call
pop
aad
insl
clc
notb
aaa
arpl
call
add
dec
inc
jno
hlt
aaa
rorl
push
cld
pop
repz
lret
in
and
cs
mov
cld
aaa
stc
shr
dec
inc
mov
xchg
mov
jns
adc
call
jo
cmp
jl
cmp
ljmp
push
out
mov
add
test
test
mov
in
add
pop
sbb
faddl
leave
loope
mov
aam
loop
lret
aad
jecxz
jbe
cwtl
mov
sub
jb
inc
scas
pop
into
pop
iret
int
popa
xor
test
pop
sahf
mov
ja
aam
push
pop
nop
add
lds
or
mov
and
jnp
lcall
jno
in
mov
pop
xor
add
push
mov
fcoml
mov
cmpsl
mov
enter
imul
adc
stos
aam
jno
shl
dec
dec
rorb
adc
mov
mov
jecxz
and
std
cwtl
leave
push
aas
inc
or
pop
movsb
ficomps
xor
andb
mov
sbb
jno
push
sbb
mov
icebp
xchg
inc
or
mov
out
or
lods
mov
lods
mov
shll
insl
mov
mov
adc
dec
into
mov
movsl
scas
fdivrs
insb
aas
mov
jae
aas
push
test
mov
mov
popa
movsl
je
mov
inc
out
dec
and
mov
cmpl
pop
es
enter
sbb
inc
push
pop
push
pop
cmpsl
xchg
fldt
and
movsb
sub
and
mov
push
or
mov
pusha
and
mov
cli
stos
das
adc
sub
enter
adc
les
pop
nop
pop
push
pop
mov
dec
aaa
pslld
push
cmp
pop
add
mov
nop
movsb
in
add
aaa
ljmp
flds
push
jns
ficoms
mov
fisttpll
shlb
cwtl
iret
dec
xor
sahf
mov
hlt
cld
pop
popf
pop
fptan
data16
sbb
lds
sub
mov
mov
xor
push
subl
mov
add
fnstsw
mov
xchg
dec
call
push
push
jb
lods
or
cmp
inc
lock
out
or
insb
mov
sub
mov
clc
pop
mov
jne
jl
jp
aam
and
mov
imul
mov
pop
cmpsl
jg
repz
cwtl
cmovns
xchg
lret
test
mov
cmp
cld
nop
scas
test
mov
xlat
or
scas
outsl
push
cld
mov
aad
out
shll
int3
push
sub
insb
mov
xchg
imul
pop
cltd
outsb
daa
mov
movsb
or
and
push
and
insl
fdivrs
dec
dec
dec
pop
sub
in
mov
jg
fists
push
mov
or
test
jl
cmpsb
bound
add
mov
in
inc
jo
es
scas
pop
mov
pop
pop
push
inc
jbe
xor
xchg
or
push
mov
fnstsw
cmp
cmpl
pop
lahf
push
sub
aaa
push
mov
pop
inc
insl
adc
movsb
push
dec
xor
in
push
push
mov
ss
loop
daa
lcall
or
jne
sub
dec
nop
insl
sar
mov
cmp
pop
dec
xor
out
cmp
cwtl
sub
pop
and
rdmsr
int3
cmp
addb
mov
pop
pop
jge
push
mov
cs
sub
testb
pop
sub
mov
subl
push
mov
in
push
mov
jb
ja
enter
scas
daa
data16
mov
jle
or
popa
mov
jno
or
inc
in
imul
roll
pop
inc
adc
addr16
xor
mov
lret
es
jge
cmp
mov
and
sti
test
iret
out
xor
sub
stos
inc
sahf
push
xor
mov
mov
and
push
inc
push
push
pop
js
xor
bound
fdivs
push
mov
xor
cmpl
or
cli
xchg
add
sbb
push
clc
fcmovnb
jnp
addr16
xor
fincstp
out
adc
test
imul
js
fsubl
outsb
jno
and
fildl
cmp
mov
ret
xor
scas
bound
nop
in
push
pop
cwtl
fisubrs
xor
fs
fcmovu
push
lret
pop
xlat
inc
pop
xchg
filds
mov
mov
sahf
outsl
enter
adc
dec
xchg
pop
xchg
repz
push
gs
movsl
js
inc
dec
outsl
in
in
xorl
jnp
fs
aad
adc
mov
add
mov
rcrb
mov
xchg
mov
add
pop
ret
push
jnp
xor
daa
dec
pop
inc
inc
dec
imul
sbb
cmc
cs
xchg
xchg
cmpsl
imul
insl
and
cmp
push
cmpsb
xor
mov
loop
mov
sbb
jne
cmp
rclb
sahf
and
xchg
out
sbb
inc
inc
int
dec
pushl
dec
mov
pop
pop
push
test
xchg
ret
negb
pusha
inc
push
pop
icebp
lds
js
jne
adc
lods
sub
fstpl
imul
dec
xchg
cmc
xor
scas
push
xor
pop
push
loop
aad
or
mov
cmp
sub
out
loope
push
mov
push
push
lcall
int3
pusha
jle
lret
hlt
xchg
out
fsub
sahf
xor
arpl
and
ret
popf
aam
push
inc
push
xor
push
test
js
out
loopne
inc
pop
push
push
fiadds
push
int3
call
push
lock
push
cmc
daa
pusha
cmpl
nop
cmp
mov
out
sbb
lahf
es
test
dec
out
popa
dec
xchg
cwtl
lahf
mov
lea
xor
push
daa
and
inc
rcr
bound
add
xor
sahf
incb
shll
jmp
aam
mov
xor
push
xor
mov
push
cwtl
sbb
xor
sub
cmp
int3
push
dec
push
es
jp
push
loop
cmc
xchg
cmp
icebp
jp
test
call
inc
lock
push
out
ds
push
andl
mov
pop
std
or
dec
arpl
add
stc
arpl
fisubrs
jnp
pop
push
sahf
hlt
rolb
out
test
mov
cld
and
stos
outsb
cmpsb
mov
adc
pop
cmp
inc
jns
dec
sbb
mov
pusha
cmpl
in
pop
sbb
popa
push
aad
jbe
fld
scas
stc
xor
rolb
das
xor
clc
sbb
push
outsb
ds
inc
push
or
sbb
adcb
arpl
jnp
test
icebp
pop
fldenv
push
jb
test
and
shr
cs
ja
dec
mov
pusha
mov
push
rol
pushf
dec
jmp
adc
or
cmp
push
data16
xor
push
fwait
iret
xchg
jne
add
pusha
mov
and
js
gs
sti
xchg
mov
sbb
sbb
leave
xchg
scas
in
andb
movb
imulb
repnz
mov
xorl
push
mov
jg
dec
shlb
movb
cli
icebp
lods
iret
jmp
dec
add
daa
ret
jmp
hlt
pop
xor
dec
es
sbb
outsl
pop
lods
jp
sahf
pop
hlt
sub
imul
fcoms
in
jg
mov
dec
pop
push
sub
subl
and
sub
xchg
rcll
push
jmp
int
outsb
xor
ja
das
nop
imul
int3
aam
mov
mov
pop
lea
mov
sub
cmpsl
repz
addr16
fs
in
rcr
js
test
pop
xor
or
mov
or
pushf
pushf
add
mov
push
add
mov
mov
pop
dec
aaa
scas
subb
inc
jo
inc
lret
xchg
inc
jecxz
int
sarl
scas
add
pop
jns
adc
pop
pop
jl
pusha
sub
jno
sbb
and
mov
pushf
ds
sbb
push
pop
lds
sbb
pop
push
sbb
hlt
xchg
leave
inc
xor
and
mov
daa
pop
dec
aaa
pop
mul
dec
cld
popf
jl
popa
insb
mov
ret
int
rclb
xor
sbb
sbb
out
les
outsb
movsb
and
mov
repnz
cmp
or
es
rclb
popa
inc
test
pop
popf
dec
pop
movsl
xchg
sbbb
jae
movsb
rorl
pusha
mov
cld
mov
inc
test
jno
xchg
lcall
int3
pop
out
into
sbb
ss
push
cmp
andl
sbb
add
adc
out
orb
stc
mov
outsl
xlat
sub
mov
xchg
rcrl
popa
mov
dec
or
jle
push
pop
pop
test
or
adc
fwait
jo
outsb
jb
mov
cmc
lock
xor
repnz
imul
or
std
and
and
jno
push
test
dec
sub
push
cwtl
outsb
in
mov
test
imul
sub
mov
add
shrl
and
popa
addr16
jle
adc
mov
push
dec
mov
mov
add
sahf
popa
jb
mov
repz
jecxz
inc
imul
sub
fisttpl
cwtl
push
mov
push
clc
stos
pop
int3
fstpt
xor
jo
lods
add
shrl
jne
xchg
inc
into
js
jle
stc
mov
int3
pop
xchg
in
fisubrl
xor
leave
movsl
jg
loope
dec
dec
subb
cld
ret
stc
xchg
mov
and
inc
test
adc
sbb
push
cmc
out
xchg
and
xor
adc
fs
scas
ja
adc
xchg
push
lods
je
dec
int3
cltd
icebp
sub
scas
out
adc
cli
pushf
das
sbbl
lcall
or
adc
and
iret
incl
shrb
mov
adc
dec
fadd
adc
cmpsl
nop
repz
xchg
pop
pop
xchg
mov
arpl
pop
fsts
push
sub
push
xchg
mov
xor
cltd
mov
clc
insb
les
inc
rolb
jo
fldl
adc
jno
lods
sub
dec
pop
shlb
pop
xchg
aam
sti
mov
in
dec
push
pop
stc
pop
mov
push
out
cmp
cmp
adc
dec
shll
pop
push
mov
js
aaa
arpl
lea
stc
adc
mov
mov
cmp
add
daa
pop
sbb
scas
and
roll
jb
mov
pop
orb
lret
push
mov
pop
adcb
jmp
roll
iret
sub
fs
add
clc
jbe
dec
in
arpl
dec
mov
push
xor
adc
mov
dec
lds
lds
and
xchg
cmp
or
inc
loopne
mov
std
cmp
dec
xchg
insb
nop
add
loopne
cmpsl
leave
mov
arpl
xchg
shrl
add
or
xor
xor
cli
mov
ljmp
dec
in
jp
sbb
jb
inc
pop
adc
cmp
test
enter
outsl
push
pusha
pop
pop
mov
cwtl
mov
sarl
mov
pop
pop
xor
dec
enter
int3
jp
xchg
xlat
lds
sub
ljmp
cmp
xor
sub
es
inc
mov
mov
movsb
jb
push
shll
mov
xor
jl
add
xor
je
rcrl
xchg
js
xor
fwait
sbb
not
xchg
pop
mov
mov
mov
and
xlat
sub
rcrb
outsl
jp
jg
cltd
cmp
xchg
or
and
mov
outsl
adc
outsl
leave
cs
pop
xchg
and
nop
sub
inc
adc
das
push
push
out
sub
into
adc
sbb
inc
mov
popf
cmp
jnp
cmp
sub
xchg
js
sub
xchg
pop
jnp
inc
pop
lods
outsb
mov
cmc
cmp
test
insb
test
addl
fbstp
scas
adcb
add
push
movsl
dec
push
dec
inc
int
mov
sbb
popf
xlat
jno
out
fstpl
imul
adc
xchg
inc
mov
xchg
ds
mov
dec
xchg
jl
lods
adc
call
lret
imul
pop
aas
dec
xlat
aam
or
push
add
dec
pop
push
movsl
in
pop
into
lahf
lret
xchg
jle
mov
movsl
call
pop
pusha
lret
lods
gs
xchg
mov
in
fdivrs
mov
mov
lea
stos
xor
fmulp
out
jp
sbb
into
push
or
add
insb
out
insb
mov
data16
cmpsl
push
cwtl
sarb
pusha
bound
dec
int3
imul
xchg
scas
add
das
xchg
lret
sub
xor
lahf
es
andl
jle
adc
push
xchg
jl
pushf
cmc
dec
add
xchg
lods
dec
dec
movsb
mov
jae
pop
xchg
xchg
mov
nop
mov
std
push
arpl
aaa
inc
sbb
xor
lock
cmp
loop
xor
out
xchg
sahf
pop
lret
and
pop
nop
dec
xchg
xchg
fdivs
lahf
sbb
jmp
jns
jge
scas
lods
jb
std
xchg
xor
mov
lcall
xchg
fs
add
fcmove
and
push
mov
aad
div
bnd
sub
insb
cs
sbb
add
mov
push
add
sub
scas
sbb
add
xchg
jne
cmp
daa
int3
pop
das
test
xlat
lods
ret
stos
rcrb
fldt
mov
or
out
js
mov
pop
sbb
and
mov
ficompl
xor
add
imul
clc
sub
xchg
sbb
mov
test
push
into
add
test
rcll
ljmp
mov
test
scas
jae
add
xor
lods
lcall
mov
stc
test
aam
push
mov
xchg
roll
push
sahf
mov
inc
cmpsb
adc
arpl
stos
scas
mov
bound
pop
push
xchg
mov
test
fcomp
cmp
fs
pop
mov
mov
addr16
addr16
fcompl
lret
cwtl
sbb
inc
xor
pop
dec
push
xchg
push
aad
mov
push
cltd
lret
clc
aam
in
int3
test
inc
add
icebp
movl
dec
int3
sub
inc
xorl
mov
cld
push
sub
stos
scas
jge
out
lods
or
mov
fisttps
push
dec
xor
mov
fcmovu
push
movsb
cli
hlt
cmp
fs
enter
mov
shrl
in
lea
sbb
cmp
les
push
or
xchg
das
imul
mov
push
sbb
iret
out
mov
jne
xchg
xchg
sbb
dec
scas
test
add
call
fldl
sbb
pushf
mov
inc
mov
mov
int3
gs
stc
inc
fadd
dec
mov
dec
and
mov
xor
popf
sub
mov
xor
xchg
sbb
adc
test
enter
pop
pop
mov
cli
into
fimull
lods
or
jnp
mov
les
inc
pop
jecxz
arpl
push
or
cmp
xor
cltd
mov
xor
int
sahf
jg
fistpll
mov
sbb
add
cld
xor
push
sbb
pop
sahf
mov
shlb
pop
stos
clc
push
adc
mov
shlb
lcall
loop
mov
xchg
xchg
sub
in
rorb
call
fbstp
xor
cmp
mov
clc
int
pop
call
jmp
dec
jne
icebp
sahf
je
dec
mov
xchg
aaa
dec
rclb
lods
leave
xorb
mov
sub
lods
xchg
xor
jo
in
xor
sub
ljmp
movb
nop
ret
test
mov
nop
sub
cld
gs
dec
sbb
rorb
xor
lock
push
push
inc
js
gs
dec
or
mov
imul
stos
inc
ret
pop
dec
fisttpl
jge
popf
fsubrs
dec
inc
adc
lcall
and
jnp
sub
out
fmull
adc
rclb
xchg
xor
nop
das
les
xchg
movsl
iret
dec
xlat
imul
dec
push
pop
sbb
mov
xlat
out
das
sbb
lahf
mov
jbe
add
xchg
add
mov
lea
xchg
and
sbb
add
push
into
sub
rorl
daa
inc
mov
je
pop
daa
inc
sub
vmovss
push
push
mov
lds
in
jmp
int3
setge
aam
out
dec
fwait
bound
inc
loope
xchg
lds
jl
mov
jl
ret
imul
sti
push
es
inc
mull
shlb
mov
pop
insb
xchg
push
cmp
dec
mov
imull
sub
dec
inc
lods
push
bound
jecxz
outsb
mov
cltd
and
inc
cltd
mov
call
push
dec
ret
jle
fildll
stos
push
mov
dec
outsl
in
push
pop
js
push
rcrl
je
xor
mov
or
nop
mov
jo
add
clc
sbb
mov
iret
push
fsubp
sub
xchg
ret
dec
mov
addb
cmp
cs
inc
lock
repnz
test
imul
xor
aas
push
push
adc
ret
sub
jmp
test
mov
mov
sarl
mov
cmpb
pop
insl
das
sub
sub
inc
or
dec
push
mov
sbb
dec
sub
add
jg
and
pushf
cld
xor
xchg
ds
lds
push
sub
idivb
sbb
sbb
mov
ret
dec
jns
xor
jo
jnp
xchg
mov
xchg
std
inc
mov
daa
scas
sub
lds
mov
idivl
pop
sub
adc
cmp
and
fnstenv
xchg
gs
arpl
cs
add
cmp
mov
loop
inc
cwtl
push
sbb
cld
lea
pop
movsb
cmc
fiadds
mov
adc
sub
inc
cld
xchg
adc
xor
popf
lcall
pop
push
xor
adc
push
lods
fdivrl
lds
imul
lret
aam
repz
lea
and
and
sarb
mov
pcmpgtb
mov
mov
scas
outsl
cmp
fldt
pop
xor
adc
cmp
out
scas
es
loopne
or
frstor
shll
hlt
add
add
adc
pushf
push
sub
in
aam
push
sub
cmpsb
push
and
pop
mov
rclb
imul
repnz
je
fisubl
mov
mov
or
cmp
les
in
jle
inc
xor
mov
add
imul
bnd
mov
push
popf
ljmp
xchg
jle
repz
dec
in
imul
lds
cmp
pop
jne
ret
fimuls
pusha
pop
pusha
pop
jno
mov
xor
xchg
dec
and
loopne
xor
and
test
add
push
in
sarb
mov
data16
scas
xchg
or
adc
xor
sub
jmp
xor
or
mov
inc
xor
sbb
jle
dec
dec
out
lret
push
mov
inc
cld
dec
test
call
pop
loop
popl
lods
scas
jae
jb
push
jne
inc
pop
mov
adc
fimull
js
and
jg
ret
mov
fprem1
adc
xorl
sbb
sti
nop
mov
cmp
je
sahf
stc
jbe
fdivl
xchg
push
js
xor
xchg
push
daa
mov
jb
fs
scas
cs
icebp
dec
push
test
mov
daa
mov
scas
jns
dec
rcll
inc
in
or
les
cwtl
ror
xor
subl
fildl
sarl
dec
mov
cmp
inc
pop
mov
test
fwait
cltd
add
pop
mov
test
dec
sbb
mov
adc
mov
and
sarl
mov
and
orl
mov
pop
jmp
pop
cmp
cmp
and
in
cmp
xchg
add
jmp
xor
rorb
push
dec
test
fdivrs
xchg
adc
push
or
jno
dec
and
pusha
and
xchg
dec
sbb
adc
subl
ret
jmp
popa
mov
ja
add
mov
stos
repz
inc
mov
in
xlat
cmp
sub
inc
push
dec
dec
inc
outsb
mov
lock
test
lret
mov
test
roll
outsl
neg
lods
mov
outsl
jmp
insb
mov
adc
rcrl
mov
and
in
add
scas
rcrb
fwait
nop
jne
add
mov
test
jae
or
jo
in
ss
daa
adc
or
repz
into
mov
mov
nop
mov
jne
scas
xchg
jne
dec
jo
jg
mov
dec
js
xchg
divb
negb
stos
sahf
arpl
xor
pop
inc
pop
mov
dec
je
rclb
fimuls
xor
dec
lods
push
push
loope
or
pop
xor
stos
xchg
jle
fisttpl
cmp
out
xchg
or
mov
decl
subl
out
jecxz
push
je
xor
sbb
xchg
test
aas
out
xor
out
das
fisubrl
and
sbb
xchg
push
add
dec
xchg
pop
subl
adcb
popa
je
sub
adc
and
loopne
xchg
jge
push
or
mov
pop
dec
les
fbld
stos
repnz
addr16
in
pop
sub
jp
inc
cmp
mov
lock
and
pop
mov
jge
xchg
scas
out
pusha
mov
jnp
push
add
pop
int3
fs
mov
out
xor
clc
pop
sbb
xor
loop
out
pop
xchg
mov
sbb
aad
mov
xor
cmpsb
fcmove
push
sbb
mov
loope
add
push
shrb
jmp
pop
pushf
ret
xor
mov
sbbl
mov
mov
cwtl
mov
push
cmpsb
pop
sub
nop
dec
jne
add
jl
jmp
pop
dec
dec
orl
mov
fidivrs
xor
jnp
fnstsw
shrl
fisubl
int
jl
dec
push
or
dec
pop
scas
push
mov
rcrl
pop
pop
fdivs
bound
xchg
repnz
inc
out
shlb
mov
aad
add
xorb
add
add
lock
cmp
mov
xlat
pop
add
xchg
jmp
out
cmp
test
and
pop
mov
push
stc
imul
out
mov
dec
sbb
or
ds
dec
or
push
aam
push
jmp
push
adc
outsb
je
mov
jp
mov
daa
inc
ljmp
fdivrp
popa
cmpl
lcall
cmp
pop
je
push
testl
mov
mov
pop
fdivl
adc
sub
and
shll
adc
loope
addr16
movsl
hlt
fs
and
dec
add
gs
inc
ja
in
cmp
test
rclb
and
cmp
scas
sub
push
ds
cmc
xchg
adc
sbb
test
xlat
xor
clc
or
mov
and
and
xchg
neg
dec
repz
xchg
xchg
push
aad
mov
adc
cli
mov
mov
mov
sub
repnz
sub
fistpl
sub
lods
pop
hlt
push
sbb
sub
into
adc
es
cmpb
es
adc
inc
jbe
fstp
lock
xchg
mov
sti
cli
cld
mov
lret
leave
cmp
or
dec
arpl
cwtl
sub
jne
popa
xchg
mov
cltd
test
mov
sbb
inc
cltd
xchg
dec
mov
cmp
fsub
fnop
adc
sti
ffree
sti
test
add
pop
ja
imul
negl
enter
mov
sbb
leave
add
js
jmp
movsb
xchg
pop
sbb
push
jg
cmp
loope
test
sub
mov
iret
pop
loope
aaa
leave
ret
dec
dec
push
xor
hlt
stc
dec
mov
sti
sbb
and
ret
xchg
movsb
aaa
inc
dec
ja
dec
insb
lods
jb
jl
push
out
fcoml
fcmovnu
pushf
push
ss
dec
xor
stos
push
lods
mov
xchg
fcomip
mov
mov
jne
ljmp
pushf
out
add
mov
cmpsl
sub
mov
push
mov
orb
mov
pop
jl
fstl
pop
push
xor
fcmovb
fld
stos
sub
jmp
mull
mov
test
pop
fsub
xor
mov
fwait
jno
sbb
push
push
lahf
xchg
push
fidivrl
testb
dec
mov
lea
cmp
jg
adc
mov
addb
pusha
jg
jle
sub
mov
rcrb
sbb
movb
inc
push
or
push
shl
pop
mov
or
jmp
xchg
push
data16
mov
mov
dec
dec
inc
sub
bound
fidivs
push
lods
jns
sub
out
and
inc
mov
stos
push
outsb
mov
nop
push
mov
out
fsubrs
pop
fdivrp
ret
jmp
push
push
lock
mov
fisubs
test
xchg
dec
add
mov
out
add
fcompl
xlat
add
dec
sbb
and
cmp
mov
jge
movsl
xchg
lods
xchg
adcl
sbb
inc
imulb
dec
sti
xchg
leave
outsl
in
dec
lock
bnd
dec
dec
fs
dec
scas
cmp
or
cmp
andb
jo
lods
pop
icebp
rolb
andb
push
repz
movsl
sti
sbb
push
bound
das
pop
mov
stos
add
leave
mov
sub
jmp
dec
out
fisubrl
xorb
rorl
mov
sub
mov
pop
bound
inc
and
add
mov
add
je
les
mov
lods
fmulp
mov
ret
mov
or
adc
sahf
xchg
and
out
mov
xor
jg
enter
adc
out
xor
jmp
lock
shrl
loopne
fistl
or
pop
ja
mov
scas
jns
lock
inc
gs
jns
fists
jmp
sbb
ss
dec
mov
lcall
push
inc
sbb
shlb
loopne
jae
mov
or
adc
out
les
push
push
mov
pop
pop
adcb
sub
adc
cmp
cmp
dec
scas
xlat
pop
or
cmp
iret
jns
lcall
adc
std
stos
mov
stc
xor
add
mov
popa
in
std
outsl
dec
xor
leave
mov
subb
pop
call
fdivr
adc
push
mov
ja
sbb
hlt
xor
fildl
mov
or
and
outsl
dec
int
sbbb
stc
call
cmp
mov
mov
jb
push
jb
pop
pop
les
arpl
les
jae
push
cld
je
sub
out
add
xchg
fs
cltd
mov
mov
xlat
mov
mov
lock
xor
mov
test
jb
push
add
mulb
jno
fsubrp
xchg
fmul
dec
xchg
xor
das
pop
dec
push
push
push
mov
mov
rorl
int3
sbb
movl
fsub
cmp
leave
stos
cmp
push
dec
xor
insb
rclb
mov
sub
aas
test
sbb
dec
xchg
out
inc
jbe
imul
mov
push
test
fimull
dec
mov
push
pop
xor
xor
shl
fadd
fstl
das
jbe
ljmp
repz
xor
das
aam
mull
add
sub
sbb
fildl
lods
cld
loop
lret
cwtl
lea
sub
jmp
or
lret
xchg
outsl
hlt
in
inc
fwait
fwait
test
and
je
sub
imul
jnp
mov
jmp
insl
inc
or
dec
sub
iret
int3
cmc
bound
sarb
mov
js
dec
inc
xchg
pop
movsl
inc
and
sbb
cld
mov
leave
add
stos
push
in
imul
mov
mov
sbb
xchg
lea
fisubl
insb
fmuls
cltd
and
cli
jns
sbb
imul
scas
test
packsswb
push
mov
pop
xor
jmp
xor
fisttpl
movsl
inc
scas
data16
sub
xor
enter
movsl
outsl
xor
scas
mov
loop
push
aaa
inc
lret
pop
outsb
int3
sbb
push
jnp
lea
stos
fcompl
filds
ds
xor
mov
adc
jl
loope
sub
jnp
clc
ret
xchg
sbb
pop
and
mov
dec
daa
aam
pop
or
sub
mov
push
sub
movsb
and
call
mov
cld
and
das
and
mov
and
pushf
mov
jbe
dec
fimuls
and
inc
push
out
scas
std
outsl
push
lcall
pop
adc
adc
les
pop
adc
dec
mov
or
sub
jnp
cmp
inc
dec
pop
add
xor
dec
movsb
pop
imul
je
pop
shlb
loop
adcl
mov
shl
pop
ljmp
adc
and
in
add
imul
lods
and
push
loopne
pusha
sti
xchg
cmp
sahf
pop
in
loopne
arpl
sub
push
push
cmp
ret
add
mov
dec
in
aas
adc
mov
stc
lods
test
ja
addr16
aaa
and
mov
push
mov
pop
sub
roll
adc
pop
push
cs
and
jecxz
or
sbb
mov
add
popa
adc
cmp
dec
inc
ror
push
jp
sar
cmpsl
xchg
cli
sbb
aaa
sbbb
mov
decb
ret
scas
adc
aam
mov
ret
ljmp
pop
pop
movsb
xchg
mov
add
mov
dec
movsl
jecxz
pop
push
hlt
jno
xchg
pop
push
fcoml
dec
pushf
fcoml
pop
mov
andl
lods
adc
dec
hlt
clc
mov
cmc
xor
mov
ja
sti
subl
in
leave
cs
call
leave
fsubs
test
jns
mov
sub
mov
in
jns
jl
pop
jl
add
fsubrs
jmp
popl
cltd
push
pop
js
jl
pop
icebp
lahf
add
add
mov
add
out
dec
cmp
pop
test
mov
mov
adc
lds
pop
mov
jp
idivb
or
adc
or
cmp
add
inc
mov
jno
repz
xor
xor
dec
sahf
mov
repnz
mov
popa
mov
jae
inc
std
movsl
or
inc
add
inc
add
mov
cmpsl
push
repz
das
in
movsl
mov
out
leave
push
pop
aam
out
inc
fcoml
cs
orb
push
xchg
das
or
and
pop
dec
leave
insl
shrb
loop
jnp
cmpsl
pop
sbb
movsl
flds
xchg
mov
pop
clc
lcall
out
push
mov
mov
scas
pop
addl
jb
adc
mov
out
pop
sahf
inc
lea
mov
mov
add
jge
dec
cli
push
ljmp
leave
shrb
xchg
clc
hlt
call
adc
lock
mov
sbb
mov
test
jo
lock
jp
pop
shl
lock
daa
js
jno
clc
sahf
mov
aam
ds
cli
addr16
add
aad
repnz
mov
in
mov
fstl
les
push
rorl
enter
mov
lret
and
mov
xchg
repz
jae
imul
pop
or
rorl
inc
scas
add
jmp
js
xchg
inc
push
jg
sub
lcall
and
jecxz
or
dec
test
push
dec
scas
rcrl
and
dec
jge
repnz
out
cmpsl
ret
fwait
adc
dec
sub
pop
push
xchg
pop
or
mov
in
mov
int3
rcll
add
jle
mov
push
push
pop
mov
out
outsl
xchg
popa
std
fldl
les
push
lret
outsl
push
push
daa
sub
arpl
and
sbb
push
hlt
fldcw
lcall
cmp
icebp
shll
es
pop
or
jge
loope
pop
adc
dec
pop
mov
es
aaa
jle
mov
and
jno
sbb
dec
mov
pusha
fisubs
jo
xchg
fisubs
inc
inc
dec
sti
ret
cmpsl
mov
aam
pop
pop
fcoml
cmc
push
mov
fldl
dec
cli
push
sbb
xchg
stos
cmp
or
sbb
pop
mov
dec
into
jge,pt
ret
push
test
and
or
test
jmp
add
push
xor
jbe
xchg
ret
xor
out
ficomps
jb
pop
popa
dec
jecxz
mov
jmp
jns
sbb
inc
pop
xchg
scas
in
xchg
jne
xchg
pop
je
pop
sub
xor
nop
int3
outsl
cmp
cmp
repz
xor
icebp
subb
dec
pop
ja
insb
sarb
push
sahf
fucomi
mov
dec
test
mov
fstps
sbb
test
mov
mov
lret
cmp
aam
xchg
lahf
xor
shll
fcompl
and
popa
adc
lahf
mov
push
sub
mov
arpl
mov
pop
out
mov
stos
imul
mov
inc
pop
mov
nop
fucom
repnz
fistpl
mov
stos
test
xchg
pop
add
imulw
icebp
xor
sbb
icebp
inc
sub
jmp
cmp
cmova
push
and
inc
add
inc
mov
das
push
popa
ljmp
negl
je
inc
mov
int
push
cmc
mov
push
and
xor
xlat
pop
popa
ss
movsl
les
pop
subl
addr16
movsb
push
inc
into
popa
dec
in
mov
push
test
inc
pop
int3
movsl
lret
frstor
stos
js
xor
dec
stos
iret
testl
aaa
add
push
imul
iret
nop
out
push
push
fbld
icebp
lcall
stos
xchg
jo
xor
andb
mov
cmp
sub
mov
test
fs
pop
arpl
scas
push
sbb
pushf
jecxz
loop
pop
cmp
loopne
mov
test
repz
fildll
sahf
mov
std
pop
aaa
stos
and
stos
testl
ror
shlw
mov
mov
cmp
ret
jmp
adc
aam
into
loop
outsl
mov
stos
inc
sbb
lods
adc
jo
pop
out
pop
xchg
jne
push
call
mov
push
xchg
add
xchg
mov
imulb
lds
cs
aad
dec
xchg
roll
cmp
push
xor
adc
movl
mov
insl
mov
mov
lds
dec
jl
push
adc
add
aas
sub
jns
shrd
or
lcall
das
shlb
arpl
push
movsb
jmp
mov
sbb
rep
cs
mov
adc
pop
iret
mov
nop
adc
cmp
push
add
xchg
adc
xchg
insl
dec
and
and
aam
scas
push
dec
roll
test
movsl
pop
and
jmp
addb
cmp
xor
sahf
or
test
js
mov
sbbb
lcall
cs
sahf
stc
jg
and
xchg
mov
repz
inc
in
insb
dec
jnp
addb
xor
incl
xchg
rolb
dec
dec
or
addr16
rorb
push
cmpsb
add
adc
std
add
sarb
pop
jle
mov
mov
mov
lcall
ja
xchg
lea
fisubrl
pop
adc
or
pcmpeqb
inc
cmpsb
jecxz
lret
dec
xchg
in
sub
pop
sarl
hlt
lds
aas
sahf
lret
dec
mov
mov
les
xchg
add
and
jle
fsubl
xchg
push
clc
xor
or
push
shll
mov
rolb
test
pop
les
iret
nop
jmp
fisubl
outsb
add
orb
cmp
xor
fdivr
lea
push
scas
xor
rolb
dec
adc
std
pop
inc
test
movsb
jg
popa
mov
jmp
sub
cmp
enter
aaa
sahf
fdivrl
nop
lods
jl
in
sbb
and
pop
ror
ljmp
cmp
sbb
dec
scas
xor
jmp
ss
xchg
int
jmp
divl
and
ljmp
or
lahf
fisubrl
dec
lods
xor
pop
push
mov
dec
shrb
mov
scas
jecxz
sahf
imul
jne
cmpb
mov
outsl
push
loope
adc
mov
sbb
push
sbb
pop
cwtl
lret
out
ret
adc
mov
rorb
addb
fwait
inc
or
nop
fidivrs
mov
rclb
cmc
pop
dec
mov
popf
mov
dec
imul
sub
jnp
push
push
add
mov
sub
fisttps
cmp
push
hlt
mov
ds
insl
sbbl
insl
xchg
icebp
sbb
int
ja
mov
xor
inc
jge
pop
push
scas
adc
adc
nop
mov
sbb
popa
jne
adc
xor
xchg
cli
iret
hlt
lret
inc
cmpsb
fnstcw
scas
mov
insb
pop
jb
jo
repz
add
or
pop
outsb
adc
sarl
enter
lock
adc
adc
or
movsl
push
fcoms
lret
inc
cmp
pop
enter
mov
fcmovbe
xchg
pop
mov
cmpsl
xor
int3
push
pop
mov
mov
testl
and
pushf
fcmovne
jp
jmp
adc
sbb
std
xor
sbbb
pop
cld
jg
add
push
xor
xchg
add
js
mov
xor
ret
mov
pop
cltd
add
and
jg
push
or
je
rcr
testb
pop
add
out
ds
ljmp
mov
push
insl
cmp
xchg
lret
and
aam
cmp
push
or
pusha
insb
js
fucomip
jbe
push
lret
std
or
adc
arpl
push
mov
mov
jl
sub
andl
pusha
dec
int3
or
scas
dec
push
fimull
into
xor
push
mov
dec
fld
scas
cmc
into
testl
enter
sub
mov
jae
mov
aad
jecxz
add
movsb
repz
hlt
roll
nop
les
stos
sti
sahf
int3
pop
and
sub
or
inc
lret
lret
int3
and
mov
push
sbb
xor
sbbb
cmp
mov
dec
add
and
fld
xchg
pop
in
pop
fs
or
dec
int3
mov
test
push
and
cmp
jle
dec
mov
mov
lahf
pop
fisttpl
xchg
and
pop
mull
jne
imul
jns
cwtl
inc
or
inc
fwait
test
test
and
ret
xor
sti
push
push
insl
cmp
push
cwtl
jl
push
hlt
push
inc
push
ss
into
and
shrb
pop
pushf
jg
cmpsb
mov
push
dec
andb
push
shrb
sbb
cld
xlat
mov
xchg
jp
cmovg
lcall
push
add
cmpsb
pop
xlat
clc
pusha
frstor
lahf
jp
testl
push
ret
push
filds
loope
aam
jg
add
xor
sti
lods
jge
lret
icebp
mov
pop
mov
xchg
in
loop
mov
xlat
les
fmulp
mov
sahf
pop
rol
call
arpl
jle
ljmp
sbb
inc
sbb
pop
js
lods
sub
sub
xchg
dec
add
or
dec
popf
ret
mov
pop
gs
mov
or
sbb
add
pop
scas
movsl
mov
out
jns
scas
movsb
or
dec
inc
xchg
pop
aad
pop
test
inc
jnp
cs
sti
pop
inc
dec
mov
aas
push
xor
xlat
mov
sti
xchg
and
scas
or
mov
imul
rcll
xor
mov
ja
sbb
and
addr16
xchg
lock
in
xchg
push
int
fidivl
sub
mov
xchg
dec
mov
mov
inc
sar
addb
jl
loope
jp
add
fnstsw
pop
rcrb
and
push
movsl
repz
loope
sbb
int3
scas
lea
nop
push
xchg
arpl
sti
inc
and
gs
mov
xor
fsub
dec
dec
xlat
sbb
push
sbb
repnz
mov
loop
inc
inc
adcl
cmp
aad
sub
outsb
mov
dec
adc
imull
inc
pop
sbb
inc
ljmp
decb
ret
movsb
outsb
aad
mov
and
in
cmpsb
sub
fsubrs
cld
or
pop
sub
fldt
and
xchg
mov
loopne
xchg
mov
and
mov
sti
vmovd
scas
sbb
clc
jno
mov
js
repz
add
mov
jecxz
iret
adc
add
ljmp
sub
lcall
ljmp
cmp
pop
jp
sub
sbb
and
insl
stos
clc
in
ljmp
das
ds
pop
pop
add
and
xor
fsubrs
fs
xchg
icebp
push
sbb
mov
adc
stc
mov
mov
shll
xchg
mov
filds
clc
xor
dec
pop
out
in
mov
fcmove
mov
xorb
pop
int
add
lock
fmulp
ret
mov
cs
sahf
mov
dec
shrb
jmp
call
leave
jo
cmc
aam
dec
mov
outsl
mov
ret
pop
sti
mov
adc
pop
scas
pop
imul
sub
cmc
sub
push
xchg
divb
add
inc
push
cmpsl
cmc
adc
jg
push
jmp
ljmp
fcmovu
dec
outsb
mov
jg
push
dec
add
sub
or
ljmp
je
cmpsb
int3
iret
push
mov
data16
in
je
ja
cmpsb
or
or
pop
cmp
dec
sub
das
cmp
xchg
xorl
and
fwait
push
add
dec
outsl
outsl
mov
jecxz
mov
and
push
jp
mov
cmpl
sbb
mov
sub
inc
push
pop
adc
sbb
das
add
out
mov
xchg
arpl
jp
xor
das
popa
movsl
imul
mov
mov
pop
xchg
fimuls
dec
test
xchg
push
loop
jecxz
les
and
jp
fnstcw
outsl
sub
pop
jle
jns
pushf
fisubl
repz
arpl
and
insl
sbb
test
jb
pop
rclb
lds
cmp
jmp
jne
xchg
es
mov
or
lret
mov
mov
jle
xchg
or
and
sbb
and
and
jb
call
mov
sub
pop
repnz
xchg
jb
fwait
sbbb
ret
dec
fisubrs
pop
sub
shrl
ficoml
int3
outsb
pop
dec
jg
adc
jge
rorl
icebp
jle
push
sub
sbb
pop
and
and
cli
loope
or
sarl
adc
sbb
test
lock
shrl
inc
loop
shl
test
loop
xchg
pop
xor
add
fiadds
jmp
adcb
mov
popf
cmc
jno
inc
sub
hlt
imulb
sub
cmc
mov
push
nop
inc
test
shll
nop
sbb
jns
aam
fsub
iret
nop
jbe
lret
fs
sub
adc
xchg
test
add
data16
pop
mov
addl
adc
push
mov
popf
ljmp
repz
bound
out
popa
nop
sub
cmpsb
loope
pusha
add
xchg
flds
out
cwtl
js
adc
jnp
mov
push
or
shlb
fwait
adc
orb
mov
jns
rcrb
add
call
mov
xchg
ja
jge
and
repnz
or
push
sub
mov
add
or
stos
push
xor
cmp
test
sub
fildll
popf
stos
icebp
adc
push
hlt
lods
out
jne
and
xchg
hlt
xor
pop
stos
jl
inc
test
sahf
and
inc
les
jle
cmp
jl
pop
mov
cmp
inc
lods
call
dec
push
sub
dec
out
imulb
out
cmp
ret
sub
jb
pop
xor
sarl
cmp
push
in
xchg
mov
jecxz
jno
sti
mov
sub
insb
fidivl
pop
dec
jne
aas
dec
scas
pushf
icebp
mov
push
clc
cmp
mov
mov
jae
hlt
pushf
mov
cmp
cwtl
in
test
loope
or
xor
mov
rolb
fcomps
test
pop
pop
add
jb
insl
sahf
push
mov
mov
jno
sbb
and
sbb
in
out
add
jnp
scas
xor
pop
pop
dec
add
scas
lret
arpl
ss
loopne
jcxz
adcl
lcall
repz
xor
push
add
and
jnp
sbb
add
leave
pop
push
ds
rolb
out
adc
idivl
jo
mov
lea
push
leave
loop
loopne
inc
data16
xchg
pop
sub
jl
sub
xorl
aad
jle
popl
icebp
mov
cmpsl
test
cmc
inc
adc
xchg
inc
dec
jmp
and
pop
mov
out
push
xchg
fnstsw
ror
lods
ss
lret
test
pop
xor
push
andl
xchg
divl
cmpsl
imul
mov
sub
cmp
pop
cli
xchg
dec
mov
movsb
adc
sti
or
orl
mov
mov
sbb
loope
mov
mov
xor
or
imul
xchg
mov
loope
cmpsl
movsb
xchg
sub
pop
inc
psadbw
xchg
cld
dec
js
decl
jmp
push
mov
movsb
sbb
jge
mov
dec
and
bound
sbb
in
lea
shr
xor
aas
jnp
xchg
xchg
lret
and
dec
ret
sub
popf
sbb
insl
and
ffree
dec
dec
pop
fs
decb
std
fcompl
fs
sbb
rol
out
cmpsl
bound
and
dec
flds
ljmp
ret
push
popa
in
sbb
cmp
mov
xor
mov
add
pop
popf
sub
shll
cmc
inc
jns
shll
add
push
sbb
push
je
psubq
and
mov
enter
add
inc
cmp
push
aam
add
push
daa
mov
loopne
aas
sub
int3
scas
push
fbstp
dec
ret
in
lahf
push
repnz
jl
fsts
pop
adc
jo
cmp
or
adcl
push
fsubrl
js
or
jno
and
inc
shlb
fxch
xor
lahf
adc
inc
scas
cmc
bnd
and
add
sbb
pusha
sbb
or
loop
es
adc
jmp
lods
pop
test
mov
xor
push
fwait
clc
sub
icebp
sbb
inc
jae
add
adc
test
xchg
sub
fs
pop
ljmp
dec
hlt
mov
xchg
cs
dec
test
xchg
loopne
cmpsl
stc
mov
push
scas
faddl
cmc
lock
daa
pop
push
push
ja
pop
mov
mov
cmpsb
enterw
loope
insl
les
mov
fisttpl
inc
add
std
jo
aas
inc
or
test
add
mov
or
inc
faddp
repz
and
ret
in
dec
lcall
jb
in
loope
sbb
xlat
into
cmpl
mov
stc
addr16
sbb
rolb
iret
out
pop
mov
shll
adc
fidivrl
push
sbb
loope
xchg
icebp
mov
xor
rcll
movsb
sub
pop
stc
xor
sbb
mov
inc
insb
cmc
mov
notb
out
sub
subl
add
sub
jne
hlt
mov
pop
jl
mov
popa
pop
popa
lret
outsb
inc
and
fsubs
jmp
movl
mov
dec
popl
jae
cmp
mov
mov
jp
or
pop
pop
lret
and
je
pop
inc
lret
out
and
pusha
add
mov
shll
fstps
imull
std
adc
xor
jp
sar
aad
pop
movsl
cs
or
pop
aad
sub
aaa
into
sub
push
cmp
mov
adc
dec
add
decl
pop
or
cmpsb
pop
cmpsl
iret
stc
ja
mov
sbb
aas
jnp
les
into
and
fmull
mov
sbb
ds
lds
lds
xor
fs
and
jle
fldl
movb
xlat
adc
dec
fld
adc
je
mov
mov
subb
lds
sub
or
daa
mov
lods
jae
add
out
xor
xchg
aas
cmpsb
insb
cmp
adc
mov
imul
setns
push
dec
xchg
outsb
push
shrb
fadds
scas
and
iret
insb
scas
or
push
rcll
jge
cmpb
and
pop
mov
and
mov
subb
insb
pop
sbb
xchg
fmul
nop
add
bound
fdivp
and
or
repz
std
call
leave
pop
fmull
es
adcb
push
pop
lock
bound
scas
pusha
lods
pop
dec
jo
loopne
and
leave
lock
cmpsb
push
cmc
mov
mov
xor
test
mov
fucomp
jge
push
inc
lock
loopne
and
icebp
push
sti
xor
rorb
mov
jp
dec
mov
sbb
mov
mov
cmp
stos
xchg
fidivs
push
jb
aam
call
xor
sbb
mov
xchg
cld
xor
mov
aas
dec
movb
adc
int
pop
inc
xchg
push
lods
out
dec
sbb
mov
popa
push
xlat
xor
or
mov
and
add
xor
test
rcll
dec
xchg
xchg
xor
cmpsl
jle
sahf
ret
push
test
ds
mov
xchg
mov
xor
pusha
in
pop
in
clc
cli
lods
iret
pop
xor
push
lock
roll
sbb
pop
mov
testb
arpl
cmp
adc
in
fcompl
cmp
mov
xchg
xchg
mov
dec
mov
dec
xchg
rcl
mov
pushf
cmpsl
lret
xchg
adc
insb
test
sub
pop
leave
dec
loop
stc
xchg
sete
mov
xchg
cmp
sti
inc
loop
mov
out
mov
icebp
fs
lods
out
mov
loope
in
pop
sbb
pusha
adc
fildll
cmp
sbb
mov
ja
les
xchg
in
push
dec
sub
aaa
test
cmp
inc
jo
hlt
sbb
adc
les
fidivs
add
test
out
fnsave
or
jge
out
int
fadds
aaa
sahf
insl
xchg
dec
push
pushf
shlb
int
or
fcoml
inc
dec
shlb
jne
aad
pop
lcall
sub
pop
lods
xchg
jbe
mov
mov
adc
sbb
loop
cltd
sbb
mov
sbb
xlat
cmp
xchg
iret
stos
scas
jbe
andb
stos
xor
inc
xor
in
push
and
sbb
cmc
sbb
insl
push
push
and
shl
test
mov
xor
es
insl
cmp
sbb
dec
js
outsb
push
mov
mov
test
cmpsl
push
mov
mov
lcall
pop
jno
push
add
test
mov
mov
sbb
pop
imul
xorb
sub
dec
xor
mov
mov
dec
sbbb
add
xchg
or
and
jns
ds
jl
jne
hlt
fisubs
xlat
mov
add
push
call
loope
mov
jnp
jmp
mov
sub
movsb
es
pop
xor
push
xor
pop
pop
inc
cmp
jno
mov
cli
decl
lds
dec
es
push
mov
int
pop
sub
xor
sbb
cld
dec
and
outsl
lcall
dec
push
xor
mov
and
mov
dec
gs
add
xor
mov
cli
mov
mov
fisubl
fstl
sbbl
or
scas
add
stos
dec
jge
jp
lock
les
aas
jne
hlt
inc
sub
push
dec
les
xchg
das
scas
dec
ret
pusha
out
popf
jg
dec
jle
int
cld
shrl
cli
outsb
sbbl
sarb
mov
cmp
adc
push
clc
enter
push
cld
pop
icebp
fisttpl
and
push
out
mov
daa
add
inc
call
push
xchg
xchg
sub
add
add
lock
cwtl
addr16
cmp
or
in
mov
outsb
loopne
xchg
ret
and
scas
mov
clc
push
sbb
movsl
test
push
xor
sarb
movsb
test
pushf
bound
sbb
pop
fbstp
lds
pop
fldenv
test
movsb
xchg
mov
adc
dec
add
movaps
lcall
stc
xchg
mov
ds
sub
xchg
mov
dec
fsin
sub
mov
mov
dec
xchg
fs
shlb
je
sbb
adc
mov
xor
xor
and
adc
mov
aaa
sbb
addb
out
cmpsb
aam
push
fs
cld
lcall
add
paddsw
pop
cmpsb
adc
rorl
lods
mov
sbb
into
lahf
into
jl
sbb
je
nop
mov
popf
nop
stos
xor
loop
sbb
xlat
fdivl
mov
sub
and
out
and
jle
orb
mov
in
repnz
mov
insb
mulb
jo
out
arpl
js
fwait
adc
lret
jecxz
push
jmp
adc
in
add
test
pop
rclb
inc
and
dec
add
scas
jmp
femms
xchg
xor
jns
jae
dec
mov
inc
shlb
push
mov
dec
pop
sbb
sbb
lock
fnstenv
cmp
and
dec
push
vmulsd
add
stos
push
mov
inc
mov
push
add
push
or
cwtl
cmpsl
push
pop
xchg
push
xlat
popf
sbb
rclb
jl
xlat
pop
scas
cld
jne
aaa
or
cli
and
xor
inc
cmp
dec
lods
or
pushf
scas
or
movsl
in
mov
push
inc
cld
rorb
jmp
and
or
jecxz
jns
imul
xorb
push
mov
xchg
lock
dec
rolb
fwait
mov
popf
aam
pop
shl
js
xor
or
cmpsl
iret
jmp
sub
adc
mov
or
fs
jp
testb
test
insb
ret
push
mov
cli
dec
int3
jmp
stc
jmp
sbb
movsl
mov
clc
push
sahf
and
insl
cltd
or
call
cwtl
jne
repz
js
sarb
addb
cmp
stos
cmpb
xchg
lods
xchg
test
cmpl
cmc
fdivrs
jle
out
pop
mov
sbb
movsl
xchg
push
mov
dec
in
insb
mov
sbb
sbb
es
pop
cs
test
push
sbb
pop
mov
push
outsb
xor
mov
bound
mov
je
subl
js
ss
movsl
out
loopne
mov
out
in
call
pusha
xor
mov
leave
frstor
fstpt
jb
pop
out
subb
sub
movl
subl
mov
movsb
sbb
cmp
filds
dec
push
stos
shll
pop
pusha
push
enter
out
cmp
cmp
loope
lahf
and
movsl
sub
mov
imul
in
ja
lahf
inc
cmp
or
dec
sbb
or
xchg
scas
cmp
iret
push
dec
sbb
push
or
xor
test
ss
push
push
push
adc
sarl
fwait
aaa
mov
jb
enter
mov
stc
stc
mov
and
clc
ror
not
mov
sub
fisttps
mov
scas
pop
pop
shlb
adc
dec
mov
dec
nop
scas
xchg
add
mov
and
das
mov
dec
sbb
dec
setl
xor
mov
adc
mull
loope
add
or
cmp
in
xor
mov
pop
sub
jp
mov
cld
xchg
jb
cmp
and
jle
cmc
push
ljmp
fisttps
andb
testl
push
add
sub
icebp
inc
loope
mov
ljmp
pop
repnz
adc
jne
aas
add
daa
pop
pop
bound
daa
push
fstl
dec
jnp
mov
sbb
and
mov
xchg
add
ret
pusha
jno
lods
cmova
adc
xchg
loop
add
scas
sbb
lret
xchg
fcmovb
push
ret
push
push
xor
pop
inc
cmp
sub
and
sub
pop
jg
in
subl
ja
clc
ret
hlt
std
leave
jle
loop
sbb
fs
mov
mov
mov
imul
mov
lret
or
xor
into
xlat
pop
mov
pop
rclb
in
test
mov
lcall
js
lret
ss
push
mov
pusha
lret
mov
loopne
mov
sbb
jno
sub
pop
adc
cwtl
scas
push
ficompl
sub
mov
sbb
popf
or
push
movl
fistl
into
sub
outsl
adc
jge
call
cmp
into
mov
imul
sbb
mov
es
in
pop
jmp
mov
sbbl
sbb
jmp
and
roll
pop
in
sbb
or
les
mov
aas
mov
test
je
push
push
xor
mov
sub
pop
cmp
xor
in
pop
into
jecxz,pn
jnp
add
sbb
movl
sti
int
stc
subl
dec
pop
push
xchg
push
and
repz
outsl
mov
lods
flds
repz
scas
adc
not
jns
aaa
inc
jne
lea
hlt
pop
cmpsb
addr16
sub
jno
rclb
fimuls
aas
xchg
outsl
test
mov
inc
flds
fdiv
idivl
or
jmp
dec
dec
xor
lcall
aas
xor
fsubrp
adc
sbb
mov
jne
adc
inc
fsubrs
mov
jecxz
cltd
fadds
cmp
or
cmp
xor
or
mov
pop
jmp
testl
inc
sbb
and
and
xor
sbb
cmpsl
jge
lock
add
imul
cmpsl
dec
outsl
push
mov
mov
pop
cmpsb
sbb
jge
outsb
mov
fwait
popa
xchg
mov
pop
nop
outsl
sub
jge
jo
arpl
mov
scas
mov
push
dec
pop
repnz
push
cmp
loopne
ret
push
icebp
dec
jo
test
mov
lds
adc
xchg
pop
addr16
fdivrs
push
mov
int
test
fsubrs
fsubrs
jb
call
jae
icebp
fwait
ror
leave
inc
nop
jb
mov
cmc
lods
pop
lret
ljmp
and
push
xlat
imul
mov
and
in
scas
cwtd
mov
add
adc
idivb
xchg
in
sbb
cmpsb
inc
adc
pop
fwait
test
notl
inc
push
sbb
sar
adc
xchg
pop
ss
insl
pop
adc
inc
cmc
setge
cli
cwtl
lods
aad
dec
add
cmc
mov
push
cmp
cmp
ds
xor
cmp
push
stc
pushf
xor
pushf
adc
scas
sahf
out
mov
xor
mov
jno
in
jmp
popf
aam
pop
cmp
or
xor
xor
jb
fldcw
repz
dec
push
call
fwait
mov
mov
lods
xor
xchg
div
lea
push
fwait
push
dec
dec
cmp
pop
stc
aaa
insb
sbb
pop
insb
push
pop
or
dec
popf
ja
shlb
push
cmpsb
xor
rcl
pop
in
adc
mov
adc
mov
xor
hlt
fldenv
xchg
lods
xor
mov
addr16
and
negl
cmpsb
jne
or
xchg
adc
xchg
mov
dec
mov
test
stc
inc
out
ljmp
push
lcall
cmp
sbb
mov
sahf
and
enter
push
lods
add
cmpsb
jnp
add
into
xor
cmp
jecxz
lea
js
sub
adc
push
fdivrs
pop
add
sahf
hlt
xor
xchg
bound
push
jno
test
rcr
or
adc
inc
xor
mov
popf
adc
lahf
dec
les
mov
mov
cmp
dec
jmp
lods
std
mov
arpl
in
mov
sti
lret
add
push
mov
or
repz
fs
and
add
pusha
dec
mov
scas
inc
push
sub
lods
aam
jge
test
out
enter
push
ret
int3
leave
test
jbe
add
in
jp
popf
adc
loope
mov
cmpsl
mov
jnp
cltd
stc
fildll
lret
mov
xlat
pop
movl
add
jle
inc
and
xchg
fbld
dec
cs
jo
xor
push
jnp
xor
push
ljmp
fldl
pop
dec
pop
cmp
mov
arpl
ds
pop
lret
inc
xor
xor
outsl
add
and
or
xor
adc
ljmp
orb
pop
mov
jge
out
sub
pop
insl
mov
xchg
push
mov
sbb
daa
xor
push
ja
or
imul
push
stos
aaa
std
mov
mov
rcl
mov
xor
sub
outsl
xchg
push
mov
push
and
jno
aas
mov
test
sub
add
mov
dec
add
and
sub
jns
push
lods
or
push
test
call
out
mov
dec
sub
xchg
testl
dec
dec
in
xchg
and
ret
sbb
sbb
jge
lock
sub
xchg
cltd
pop
es
jns
dec
pop
jge
dec
sbb
mov
popf
or
sub
es
dec
mov
inc
and
pop
add
scas
adc
sbb
jle
lock
sub
test
xchg
loopne
cwtl
xchg
sbb
sub
dec
mov
repnz
mov
in
add
mov
iret
jns
sub
fcoml
sub
xchg
js
test
add
xor
sbb
push
xor
lods
add
xchg
pop
and
jp
pop
icebp
adc
xchg
ja
aaa
xchg
sub
mov
lods
ds
sub
pop
xor
pushf
test
sbb
mov
or
pop
lea
add
cmp
test
out
xchg
sbb
lods
add
pop
mov
sbb
push
jnp
sbb
scas
mov
mov
push
cwtl
mov
pop
adc
mov
rcrb
push
in
pop
test
pop
cmp
xchg
mov
pop
mov
iret
movsl
iret
or
cmp
repz
jp
or
adc
add
sbb
cmp
sbb
out
pop
xchg
out
lods
inc
pop
dec
arpl
out
ja
repz
std
or
in
ljmp
add
ficoms
sub
aad
jl
lds
sbb
call
das
and
scas
out
popa
cmp
shlb
jae
ret
enter
in
sub
mov
cmp
xor
push
outsl
inc
cmp
cwtl
mov
loop
xchg
outsl
pushf
cwtl
jo
sbb
add
loope
xchg
lahf
xchg
mov
ja
cs
mov
push
dec
mov
hlt
pause
mov
add
mov
test
loope
cmpsl
rclb
xor
mov
adcb
push
push
sub
xor
cld
xor
pop
xchg
mov
icebp
cmp
das
shr
xchg
sahf
xchg
jno
xor
push
dec
push
or
mov
andb
or
out
sub
pop
test
xchg
outsl
cwtl
xor
or
adc
ret
call
and
inc
aaa
adc
jle
and
push
xor
mov
mov
sbb
test
mov
add
test
hlt
add
xchg
jne
inc
es
or
xlat
call
xchg
mov
call
mov
dec
jnp
xchg
mov
xor
push
mov
cld
sti
cmpsl
pushf
lcall
aaa
ds
add
jno
pop
addr16
call
pusha
push
subl
ss
jg
leave
out
xor
pop
mov
mov
mov
mov
push
sbb
mov
inc
lahf
inc
pop
call
imul
jle
inc
stos
push
std
lret
mov
mov
adcl
ficoms
pop
inc
push
sahf
xchg
fistps
xchg
enter
sub
mov
lret
pop
fbstp
nop
push
cld
xchg
mov
add
mov
jbe
call
cmp
adc
ss
jle
dec
pusha
call
push
mov
xor
pop
in
out
std
shll
adc
test
addr16
push
and
mov
loop
bswap
fnsave
mov
fs
hlt
push
test
jmp
xor
outsl
jbe
test
cmp
jl
ror
fisubs
inc
jmp
xchg
dec
test
pop
pop
clc
xor
jmp
arpl
xor
mov
cmp
inc
sub
dec
push
cmp
dec
sub
cmp
push
dec
jp
clc
sbb
aas
dec
jae
scas
stc
or
or
mov
inc
ss
cmpsb
or
sub
jl
push
mov
mov
in
js
clc
jp
xor
shlb
fisubl
xor
dec
outsl
imul
es
int
rcrb
fbstp
jnp
fucomi
xchg
inc
fstpl
xchg
loopne
pop
mov
xchg
xchg
mov
pop
outsl
testb
sbb
lret
xchg
fsts
push
dec
push
scas
mov
push
icebp
test
loop
scas
cmc
or
add
scas
or
add
ficoml
data16
sbb
scas
inc
bnd
mov
and
nop
inc
cmpsl
dec
into
es
pusha
lea
push
ret
jle
cmp
xor
subl
hlt
sub
push
into
jle
lods
adc
out
les
dec
cmp
fst
and
pusha
aam
stos
pop
cmp
cltd
inc
call
movmskps
mov
mulb
lcall
andl
out
clc
xchg
adc
sub
or
push
scas
jno
xchg
pop
test
push
addr16
movsb
xchg
sub
rcll
mov
lcall
pop
stos
nop
xor
pop
ficoml
sti
inc
fldcw
mov
sbb
adc
outsb
mov
outsb
sub
mov
ficoms
mov
mov
xor
jmp
mov
insb
pop
in
call
out
mov
mov
jb
add
ja
fisttpl
popf
push
push
pop
add
cmp
jnp
bnd
es
rcr
adc
add
aas
cmc
jnp
sub
xchg
adc
xchg
sahf
movsl
addr16
jmp
or
jle
pop
call
cmpsl
xor
std
gs
push
pop
and
mov
scas
mov
cmp
mov
jp
stos
inc
in
xchg
mov
sub
aaa
xchg
xchg
push
push
inc
sub
cmc
pop
mov
ret
loop
mov
in
fdivrs
fnstsw
adc
popa
or
xchg
inc
out
sub
jl
cmp
push
xor
cld
cli
lods
sbb
fsubrs
aaa
icebp
mov
adcl
call
jb
sub
out
xorb
xchg
mov
xchg
pop
push
push
mov
mov
pop
sbb
push
dec
into
insl
xor
and
add
fstl
insl
and
mulb
pop
out
jmp
and
or
inc
add
and
sbb
into
lahf
pop
push
bound
out
sbbl
sub
pop
and
lea
inc
pop
push
cmp
fisubrl
jmp
repz
ret
in
jmp
mov
push
std
pop
lahf
xchg
aad
pop
movsb
mov
ljmp
loopne
les
inc
push
rcrl
xlat
dec
rcl
int
repz
mov
pop
sub
xchg
ret
jmp
test
lods
mov
enter
push
inc
scas
out
movsl
or
adc
out
adc
pushf
imul
out
pop
jo
lods
cmp
or
or
add
sbb
jecxz
add
repz
repnz
out
xchg
lret
pop
ret
sub
and
fsub
into
pop
inc
pop
andb
sub
test
sub
mov
add
inc
ja
loopne
lods
pop
inc
cmp
pushf
int
insb
push
adc
push
mov
out
fldl
mov
lcall
das
or
fwait
mov
repz
jmp
lret
mov
lea
mov
sub
cmpb
in
or
mov
mov
sbb
mov
popa
stc
lds
sti
movsl
std
mov
mov
and
fldenv
mov
out
gs
pop
lret
ljmp
xor
sbb
mov
pop
sbb
je
lods
addr16
ja
xor
jnp
or
pop
outsl
sbb
aaa
push
sbb
pop
mov
fwait
mov
cmpsb
shr
jnp
into
push
add
in
adc
xchg
fidivrl
jg
push
insl
sbb
sbb
xchg
aad
inc
pop
hlt
xor
pop
jg
cmc
sbb
jmp
sbb
cmp
fstl
and
jge
or
adcl
out
ffreep
jle
sub
aad
xlat
xor
xchg
xor
loope
cmp
mov
and
inc
cmp
xchg
daa
xor
mov
or
push
in
sbb
test
jbe
push
outsl
xor
data16
sarb
mov
cmc
out
addb
cmp
jp
mov
inc
cmp
dec
push
pop
adc
or
fs
or
push
iret
pushaw
xchg
iret
cs
cmpl
lock
pop
sbb
push
sub
mov
lret
ret
lock
mov
int3
inc
jno
inc
jp
xchg
jne
cmp
and
dec
ss
cmpsl
lret
xchg
sahf
or
mov
in
cmp
dec
xchg
test
jle
pop
gs
xchg
or
or
xor
loope
rolb
cmpsl
aad
aas
ljmp
add
mov
mov
dec
popf
pop
pop
push
sti
and
fimull
pushf
mov
call
int
fisubs
jno
ret
mov
int3
jge
sub
sbbb
dec
xor
mov
out
loope
inc
mov
shr
insl
push
flds
inc
or
inc
in
clc
enter
xchg
addr16
sbb
loop
dec
push
dec
xchg
les
aas
add
mov
lods
sbbl
xchg
aam
lret
adc
lret
ja
ljmp
dec
scas
xchg
or
mov
mov
arpl
sbb
pop
test
int
fimuls
rolb
mov
daa
jmp
leave
enter
mov
outsl
push
sbb
popf
push
nop
sbb
mov
jmp
fs
pop
jb
xchg
pop
cwtl
adc
pop
jo
or
iret
aad
scas
mov
ja
or
sub
xchg
push
popa
pop
rcll
dec
push
les
aaa
cmp
mov
pop
repnz
and
dec
mov
fisttpll
movsb
in
call
or
and
inc
es
push
sbb
mov
inc
aaa
aam
xor
cmpsb
cmp
jge
xchg
push
push
aas
dec
shrb
aaa
cmc
out
or
ja
cld
adc
add
test
imul
xchg
lahf
sarl
loope
fdivrl
stos
outsl
sub
sbb
jns
vmovaps
insb
dec
or
push
into
jl
ss
into
in
lret
fisttps
push
mov
insl
aam
xor
sub
pop
fldt
inc
sbb
das
adc
push
inc
data16
fwait
stos
lea
mov
xchg
pusha
mov
cmp
sbb
xor
or
sub
arpl
xchg
push
insl
popa
orl
repnz
xlat
mov
mov
and
inc
std
stos
rorb
jle
insb
pop
pop
das
dec
rclb
push
inc
popf
xchg
or
inc
andb
sub
jg
mov
enter
mov
js
dec
shrl
cltd
pushf
jge
xchg
out
enter
popf
fadds
cmp
repz
xor
jg
addl
sbb
add
xor
xchg
scas
sbb
jno
rcrl
cmp
rcrb
jno
mov
jge
jo
lret
inc
add
lahf
js
hlt
adc
mov
push
add
push
gs
lret
ficoms
repnz
sub
int3
push
lods
mov
jmp
iret
xlat
ljmp
dec
push
mov
xchg
outsb
push
push
jp
lds
push
movl
or
mov
ds
add
incl
xchg
lds
ss
out
scas
lds
ret
sbb
into
sub
call
fs
and
push
clc
mov
cmp
fldl
or
mov
xor
xchg
pop
mov
xchg
pop
add
cmpsl
in
dec
mov
lret
test
loop
xor
into
mov
lds
flds
and
and
dec
push
sete
pop
jge
dec
loop
inc
pop
xchg
jge
mov
fisubrl
add
jo
sub
fwait
jle
sub
cmpsl
mov
mov
or
lds
enter
jns
sbbl
push
ljmp
xlat
cmpsb
mov
sub
mov
dec
xchg
fnstsw
fdivl
lret
es
or
dec
leave
test
jle
lods
jns
or
xchg
push
scas
xlat
cmp
and
mov
dec
fst
xchg
repz
lret
subl
dec
loope
ret
int3
call
cmp
or
xchg
pop
aaa
sub
jp
sbb
rorb
addr16
xchg
insl
xorl
mov
pop
xor
pop
xchg
pop
or
cmp
sbb
std
sahf
mov
cmp
sbb
daa
and
insb
stc
ret
add
arpl
pop
in
fcoms
sub
push
jne
sub
xor
xor
lods
xchg
std
daa
pop
jl
push
pop
mov
and
xchg
push
leave
int3
lods
jb
xchg
fcmovu
xor
dec
loopne
or
push
adc
push
mov
lret
xor
out
cmp
pop
outsl
aam
or
dec
xchg
jmp
mov
repz
dec
adc
testb
out
mov
push
cmp
mov
out
mov
lock
xchg
jg
sub
stc
mov
cmpb
mov
xchg
or
xchg
daa
ja
adcl
hlt
pusha
and
out
cmp
js
add
out
cld
jne
cmc
sbb
ds
repnz
xor
incl
xchg
and
int3
pop
mov
mov
clc
adc
adc
xor
jns
ja
pop
adc
xchg
add
std
and
je
push
jo
jne
hlt
subb
dec
push
js
sub
aam
fdiv
jle
mov
mov
stos
mov
fildl
sti
mov
fnstcw
loope
cld
jno
rclb
xchg
test
and
adc
pop
pop
cmpsl
rcl
pop
pusha
add
lahf
inc
mov
dec
add
lods
xchg
rcll
and
cmovp
sbb
cmp
xchg
ljmp
arpl
xchg
mov
jae
subl
fisubs
mov
ficoml
push
xor
push
sub
dec
sub
mov
cvtps2pi
or
and
lds
push
sub
fidivrl
mov
jbe
sub
or
inc
sti
push
and
aad
jl
xchg
dec
mov
dec
popf
and
mov
jbe
pop
lea
insb
mov
pop
popf
outsb
test
and
push
loope
out
dec
sub
sbb
xchg
mov
das
add
stc
mov
sbbl
xchg
je
xor
divl
mov
insl
xchg
call
push
sbb
xchg
shlb
in
mov
pop
jo
sbb
xor
aaa
lcall
lret
adc
mov
call
mov
and
ret
stc
mov
das
ret
xchg
add
mov
xlat
loopne
pop
ret
push
dec
fxch
or
imul
mov
pop
add
aam
in
inc
aaa
shlb
stos
stos
sbb
xor
rorb
in
mov
es
ljmp
jmp
push
lods
aaa
xchg
loopne
mov
sub
data16
dec
xchg
test
jno
dec
ljmp
js
cmp
sbb
dec
push
pushw
mov
loopne,pt
cltd
jl
stos
jb
mov
inc
cmpl
mov
ss
lret
xchg
scas
popl
push
daa
fstpl
mov
jg
sarb
ljmp
ja
jns
jae
xchg
add
test
xchg
push
repz
cmp
mov
leave
pop
lret
sub
and
cmp
aam
xor
and
adc
push
fldcw
enter
std
lods
call
shlb
dec
mov
lret
fistps
lods
and
push
orb
or
dec
icebp
mov
xchg
insb
jnp
inc
leave
js
insb
inc
or
nop
push
addr16
add
int3
xchg
mov
xlat
dec
jnp
sti
cmpsl
push
inc
and
repz
scas
mov
in
addr16
stc
fbstp
xchg
adc
jno
jp
mov
call
pop
dec
lock
lcall
movsb
inc
fmuls
lahf
les
loop
lock
rcr
xchg
outsl
inc
push
les
mov
cmp
xchg
int3
sbb
push
and
rol
gs
scas
stos
ja
les
rcl
in
imul
mov
mov
inc
sbb
stos
push
hlt
cmp
call
mov
mov
aam
cmc
fs
into
insl
xor
in
aad
adc
push
test
cld
nop
shrb
arpl
cmpsl
sbb
cli
ret
push
imul
int
sbb
cmp
dec
lahf
iret
pop
push
lahf
and
jbe
xchg
lcall
aam
push
mov
insl
icebp
dec
and
adc
pop
mov
push
push
in
in
push
and
in
cmp
xlat
mov
flds
mov
lods
xchg
aam
ja
iret
rcr
jmp
jb
popf
push
sub
ret
hlt
push
xchg
orl
sub
cli
imul
sbbl
inc
data16
in
jmp
dec
mov
lahf
das
pop
mov
adc
sarb
sub
cmc
mov
mov
push
xchg
jb
loope
imul
adc
mov
pop
pusha
test
jge
ljmp
and
sarl
mov
lcall
shll
inc
in
lea
xchg
out
or
leave
xchg
sub
les
inc
les
push
mov
jecxz
sub
xchg
dec
insl
add
cmp
int
pop
out
lcall
mov
and
pop
and
movsl
repz
sahf
cmp
daa
or
xor
imul
repnz
repnz
xlat
aas
data16
aam
lret
jecxz
jns
test
test
xor
sbb
push
fwait
push
dec
scas
subb
cwtl
pop
cltd
cli
mov
iret
and
ret
mov
xchg
mov
add
sub
dec
add
pop
sbb
outsb
rcrb
pop
testb
push
xchg
rcr
sarb
daa
loopne
sub
enter
loop
push
add
mov
ds
push
dec
es
iret
cwtl
ret
rep
cmpsl
stos
hlt
inc
push
pushf
mov
sti
mov
push
pop
push
jge
xchg
cmpsb
pop
jb
add
fimull
lds
mov
test
pop
inc
shlb
lods
lea
leave
pop
xor
xor
stos
dec
rorb
lea
scas
ss
adc
sbb
push
push
cmp
fcmovnbe
dec
icebp
push
push
inc
adcb
or
push
mov
inc
xlat
ret
lods
sub
in
xor
xor
outsl
aaa
mov
sbb
add
fcmovbe
int
pop
sbb
cmc
ja
in
ret
ror
push
fsubs
dec
ljmp
popa
push
out
sahf
xchg
cmc
in
das
jb
xchg
cmp
and
dec
dec
add
xor
pop
popl
mov
pop
loopne
jmp
sbb
test
mov
nop
pop
dec
pop
mov
push
aam
add
add
jnp
outsl
shlb
loopne
mov
movsl
imul
xchg
mov
fdivrl
out
hlt
je
or
filds
or
jnp
out
mov
mov
jns
std
fcoml
mov
xchg
fstps
test
sbb
lret
cmc
cmpsl
lret
pop
dec
in
cmp
into
sub
cmpsl
add
push
stos
cs
or
pop
scas
movsb
jns
xchg
fmulp
outsl
lea
add
scas
loop
test
stos
imul
pop
outsl
xor
ret
xlat
jmp
fisubrl
push
addb
jle
fcomps
jo
and
aam
out
jne
lret
mov
sbb
sbb
mov
div
outsl
push
into
test
push
inc
add
mov
in
dec
jmp
aad
mov
outsb
dec
cs
dec
icebp
enter
cli
movl
sbb
int3
adc
mov
pop
xlat
das
push
ss
ss
pop
dec
pop
and
or
xor
jp
adc
jmp
mov
inc
es
cmp
inc
outsl
jmp
dec
addb
push
dec
jae
in
rcll
mov
and
jno
popw
jb
sahf
aam
sbb
cmc
iret
mov
arpl
xor
outsl
out
adc
cmp
mov
movsl
test
jecxz
pop
lcall
sbb
cmc
pop
ja
in
dec
jge
lods
test
into
dec
ss
repz
pop
xchg
xchg
cli
insb
int3
ds
or
adc
add
lock
xor
fsubrl
pop
add
cmpsl
daa
mov
test
push
cmpsb
arpl
mov
sbbb
pop
pop
iret
mov
je
gs
push
xchg
push
lret
xchg
xor
fistpl
mov
arpl
gs
faddl
test
js
addr16
lret
xchg
gs
push
push
and
jmp
or
scas
xor
inc
push
jb
rorl
push
pop
das
or
and
sub
lods
mov
popf
pop
rsm
cwtl
or
imul
xor
bound
lret
stos
movsl
xchg
mov
add
pop
push
jg
fnstsw
pop
dec
dec
stos
test
sub
mov
mov
sub
daa
int
out
insb
scas
xor
push
pop
inc
inc
pop
jle
dec
lock
mov
int3
cmp
sub
nop
add
into
xor
adc
cltd
inc
mov
push
dec
or
pop
jbe
jp
ret
inc
fisubs
out
sbb
movl
mov
aam
cmp
and
mov
lock
xchg
inc
cmpsl
push
jge
push
pop
loopne
bound
push
or
out
mov
jmp
or
or
push
push
sti
pop
adc
pop
sbb
idivb
dec
insl
adc
outsb
jge
int
xor
lds
bound
insb
subl
jno
lods
shll
rcrl
pushf
movsb
and
or
jecxz
xchg
pop
pop
and
movsb
nop
mov
jno
icebp
jp
pop
cmc
cmpsl
addb
imul
dec
push
jle
cmpb
xor
xchg
and
add
mov
mov
stos
xor
sub
out
pop
dec
sbb
insl
mov
aaa
ror
cli
pop
roll
test
adc
popa
push
lahf
xchg
dec
fxch
into
inc
xlat
adcl
lods
mov
inc
jle
out
mov
int3
aam
xor
pop
fimuls
xchg
adc
sub
lret
xor
adc
daa
fbld
data16
clc
aaa
je
cs
mov
push
test
fwait
sub
dec
sti
mov
test
mov
sbb
mov
aad
xchg
pop
imul
pop
mov
pop
fldl
xchg
or
jnp
add
dec
xchg
shll
cmp
jg
sub
dec
hlt
cltd
mov
lahf
inc
mov
push
add
mov
xchg
adc
xchg
add
ret
jg
xchg
dec
xor
mov
out
pushf
sub
mov
pop
mov
cwtl
xor
call
dec
arpl
push
test
scas
popa
lahf
dec
push
push
cmp
push
je
push
rcr
cli
inc
sub
dec
icebp
leave
lods
cli
daa
ret
mov
clc
mov
xchg
fmuls
pop
pushf
call
adc
jle
insl
rol
jo
xor
xor
inc
pop
pop
and
bndldx
cli
loop
fstps
push
adc
sahf
sbb
push
inc
lret
mov
loope
mov
daa
test
repnz
sbb
cmp
dec
mov
cmpsl
and
sbb
imul
incl
mov
jns
dec
int3
js
insl
dec
lock
mov
pop
push
push
stc
xor
popl
ret
cmpsl
push
scas
iret
lcall
cmp
push
cwtl
inc
push
das
fadd
pop
stos
hlt
scas
pop
jecxz
fidivl
out
dec
or
pop
mov
or
pop
fstps
movsb
dec
iret
int3
sub
push
popa
dec
xor
testb
xchg
jns
or
pop
push
sbb
cld
mov
test
stc
pushl
sbb
dec
das
leave
shr
cmp
dec
lahf
popf
shlb
and
dec
repz
into
insb
out
sub
repz
daa
mov
out
pop
lds
adc
andb
jb
imul
add
lock
push
addr16
dec
dec
cmp
mov
enter
cmc
popa
inc
loopne
mov
stos
jl
push
aad
add
jnp
xlat
mov
xchg
push
hlt
xor
std
mov
aad
and
xor
sub
ret
stos
fs
jne
dec
push
jo
inc
sbb
filds
xchg
ljmp
iret
das
push
and
inc
xchg
adc
loope
mov
inc
loop
in
rcrb
mov
loop
repnz
out
out
inc
in
sub
in
xor
or
adc
mov
adc
test
xor
adc
add
sub
lods
xchg
daa
cld
or
pslld
mov
or
dec
cs
dec
inc
mov
pop
outsb
adc
pop
add
xor
test
sbb
fstpt
pop
jnp
nop
dec
dec
movsl
cmp
sub
pop
mov
push
mov
mov
sbb
test
mov
cwtl
pop
fildll
xchg
xchg
xchg
jns
enter
enter
enter
enter
enter
int3
jns
jmp
hlt
pop
rcrl
negb
sbb
fmulp
sbb
sbb
fmulp
or
scas
ljmp
cmp
ret
cmp
dec
xor
pop
fwait
loop
arpl
or
or
imul
adc
cmpsl
mov
leave
jmp
mov
daa
lods
jl
lds
ds
and
adc
mov
xor
repnz
pop
or
movsb
ret
cmp
inc
into
cs
xchg
add
xchg
add
out
mov
in
add
push
pop
in
out
xor
popf
push
fstpt
adc
lock
mov
js
dec
sub
shr
out
xchg
inc
pop
or
call
sub
shl
cmp
jecxz
lea
sub
add
xorl
mov
test
push
sub
jecxz
mov
je
xor
add
dec
stos
scas
xlat
icebp
or
push
mov
xor
cmp
sbb
cs
fstps
stos
jge
jmp
pop
mov
or
mov
push
jmp
inc
mov
or
aam
inc
in
xchg
addr16
notb
push
jge
pop
cmp
mov
pop
clc
mov
inc
cmp
les
lock
and
cmpsl
das
dec
shlb
gs
lret
sahf
pop
push
fwait
imul
dec
sbb
cmp
cltd
bound
add
push
mov
cwtl
add
or
shrl
mov
out
and
mov
push
cmp
xchg
jae
mov
push
xchg
xor
stos
jl
loope
push
mov
pop
loopne
jbe
and
or
fldl
test
cs
xchg
outsb
push
adc
push
add
popa
cs
dec
or
arpl
bnd
outsl
inc
mov
xchg
sbb
pop
stos
jo
jb
mov
push
clc
cmp
or
or
pop
insl
aaa
mov
movsl
popf
sbb
out
loop
pop
notl
aas
bound
popf
pop
dec
and
sbb
xchg
imul
insb
imul
push
lcall
sbb
push
jo
mov
test
sub
mov
jecxz
sub
push
xor
ja
jge
push
cmp
add
and
inc
pop
popf
dec
fldt
or
push
xor
dec
mov
movsb
sub
and
xchg
ficoml
pop
ficoml
or
aaa
fld
ds
lcall
mov
bound
mov
insl
push
jecxz
and
lock
loop
fcoms
test
das
cmp
xchg
call
js
mov
lds
sub
xchg
push
ret
aas
sbb
adc
fs
ds
push
and
cs
sbb
fisubrl
addl
add
insb
add
sub
jg
xor
test
testb
push
pop
lock
add
cmp
inc
popa
divps
pop
aad
adc
push
inc
jne
dec
cmc
or
sub
hlt
sbb
sub
into
or
cmc
divb
clc
testl
pop
pop
or
notb
pop
andb
out
lret
cmp
inc
repnz
mov
aad
sub
daa
xchg
mov
iret
pushf
jb
push
cwtl
loop
imul
lea
test
and
or
jecxz
loopne
cmpsl
xor
sbb
cmpsb
mov
or
fdivp
das
filds
jl,pt
pop
lss
stc
push
jl
jg
jae
mov
mov
mov
pop
xor
stc
mov
mov
and
sbb
cmp
dec
into
inc
jb
sub
frstor
das
lret
sbb
in
ljmp
and
ljmp
into
mov
test
push
ljmp
fsubrs
sar
pop
sbb
dec
xor
adc
les
xor
and
test
dec
xor
sahf
ret
inc
add
cmp
or
std
bnd
bound
dec
mov
stos
mov
mov
out
or
cmc
loopne
shll
pusha
pushf
or
insb
mov
mov
pop
out
jl
sbb
jnp
pop
add
adc
xchg
cwtl
jmp
adc
aad
jl
push
pop
adcb
mov
jecxz
xor
insl
cmp
int3
leave
inc
add
push
stos
sbb
and
xchg
cmpsl
or
xor
pop
and
fs
pop
leave
xor
insl
mov
shr
inc
ret
pushf
bound
loopne
and
ds
daa
xchg
jg
mov
xchg
dec
mulps
fsubl
xor
cmpsl
lock
or
addr16
jo
sub
or
jmp
dec
pop
adc
shll
insb
push
in
sbb
sbb
gs
arpl
pop
push
adc
dec
ficomps
pop
clc
add
add
cmp
clc
call
bound
cmc
addl
rorl
ret
and
sbb
jle
push
jge
or
mov
pslld
pop
adc
sbb
pop
mov
movsb
mov
lea
int
in
ja
xlat
push
imul
add
dec
xor
xor
negb
js
fbstp
pop
or
xorb
jmp
fnstenv
mov
push
fstl
or
mov
dec
xor
pop
mov
sub
mov
call
ficoml
decb
repz
ret
sub
jns
inc
scas
and
shlb
inc
xor
jnp
and
out
ljmp
popa
shlb
rclb
xor
or
fdivrs
pop
push
inc
jl
push
cmpsb
jle
sbb
stos
cmp
out
cwtl
mov
fcomi
shll
lcall
sub
sub
outsb
popa
adc
push
js
and
aam
sbb
cmp
jmp
mov
mov
xchg
cmp
cwtl
das
adc
mov
lret
jle
inc
outsb
fdivs
inc
jl
jg
ja
cmc
out
jne
and
pop
mov
mov
inc
mov
cmpsb
in
ficoml
mov
sbbl
pop
loopne
add
mov
or
nop
aas
dec
xchg
lahf
insb
cmp
hlt
cmc
sbb
movsl
add
sbb
mov
daa
enter
pop
lcall
and
and
shrb
rorl
push
mov
rcrb
or
cld
mov
mov
pop
push
dec
les
cmp
xchg
adc
mov
int
and
pop
scas
xchg
lahf
sub
push
addr16
stc
gs
fstpl
push
and
mov
add
insl
int3
fwait
pop
loope
mov
or
fbld
jb
shrl
rcrb
das
aam
push
mov
push
sub
imul
xor
inc
pop
dec
lods
pushf
sub
jle
and
add
sub
fs
inc
mov
jns
inc
popf
mov
sbbl
or
or
mov
xor
movsl
lret
scas
scas
addr16
pop
xchg
adc
test
std
pop
cwtl
fiadds
popf
fidivl
fwait
sbb
inc
mov
push
negb
aaa
jo
nop
adc
pop
xor
in
adc
stos
or
arpl
subl
adcl
or
jno
movsl
mov
ss
add
push
dec
jl
push
cmpsl
cwtl
lods
dec
dec
jl
dec
cmpsl
pop
insl
mov
jge
inc
sub
push
out
aad
inc
or
fnstenv
pushf
lds
pop
mov
vphaddubw
sbb
sub
fsubs
lods
sbb
add
add
call
cmp
es
dec
sub
scas
daa
out
dec
push
scas
jne
lock
call
dec
mov
xor
js
cmp
push
push
and
mov
xor
jle
mov
movsl
or
insl
inc
push
xor
xchg
xchg
les
pop
stos
sbb
aas
stos
adc
shll
dec
push
addr16
andb
out
mov
sub
stos
enter
push
jmp
and
cld
push
dec
mov
sbb
mov
sti
scas
pushf
adc
pushf
lret
fwait
sub
fstpt
xor
test
jmp
xchg
outsl
fistpl
jmp
xor
rcrb
sbb
lds
mov
sbb
lcall
add
inc
scas
call
pop
xor
push
jne
adc
rcrb
jmp
out
jl
cmpsb
mov
insl
cltd
jnp
pushf
icebp
cmp
xor
pop
sbb
ds
dec
test
out
iret
xor
rcrb
cwtl
lahf
outsl
sti
leave
add
fcomi
adc
xor
mov
mov
in
pushf
dec
jbe,pn
dec
sub
jle
or
sti
or
xlat
inc
dec
pop
mov
rcrl
pop
mov
xchg
nop
mov
push
xchg
adcb
adc
xor
cmp
xchg
adc
das
jne
hlt
pop
cs
hlt
mov
sub
mov
pop
cmp
and
or
add
adc
mov
cmc
lea
or
or
adcb
aam
ret
add
scas
cmc
or
mov
scas
fwait
test
sbb
mov
fisubrl
sub
xchg
mov
int3
popa
iret
push
adcl
mov
std
iret
mov
andl
js
cmp
mov
mov
mov
dec
mov
ds
cltd
fildl
cmp
mov
xchg
testb
out
inc
or
imul
je
adcb
adc
xlat
repnz
sbb
and
pop
rclb
gs
or
popa
movsl
ljmp
pop
add
bound
jns
add
inc
jle
lock
clc
in
clc
imul
unpcklps
scas
mov
or
inc
scas
adc
cmp
jno
cs
mov
insl
xchg
and
js
or
in
inc
add
jge
xchg
daa
xchg
vhsubps
pusha
sbb
test
aam
aam
cmp
inc
pop
xchg
popf
scas
xchg
ds
inc
loopne
ja
adc
lds
lcall
xchg
popf
loope
xlat
jns
call
shlb
adc
pop
pop
xchg
popf
dec
sbb
xchg
inc
jo
test
sub
fs
jl
and
jle
movsb
in
nop
inc
aas
jge
leave
mov
xor
fs
in
sarl
adc
mov
je
sub
inc
jmp
push
pop
bound
and
lods
and
aaa
push
or
xchg
out
adcb
imul
hlt
out
fs
rcrb
int
test
leave
push
mov
hlt
cmp
aaa
int3
pop
jge
lea
push
lock
dec
ds
leave
push
pop
pop
test
int3
push
stc
out
jl
jae
dec
push
xchg
in
or
add
and
cmc
xor
std
mov
movsb
iret
in
cmpb
fadds
pushf
lret
jcxz
push
outsb
ror
dec
xchg
pop
dec
outsb
inc
cmpsb
dec
insl
scas
jns
sbb
test
bound
dec
jbe
pop
aad
fwait
sbb
push
push
ljmp
or
cmc
pusha
sbb
pop
push
and
fbstp
sbb
je
sub
or
or
pop
pop
mov
push
or
pop
jl
outsb
dec
inc
inc
and
iret
jge
push
sub
insb
mov
pushf
fstl
pop
out
jo
fiadds
cmp
jmp
decl
in
imul
cmp
pop
and
sbb
mov
inc
dec
push
xchg
aad
ror
int3
roll
cwtl
sbb
nop
inc
pop
mov
lret
lahf
adc
ljmp
dec
fsubrs
mov
stos
stos
add
inc
adc
pop
cmpsl
lret
or
push
es
mov
push
outsl
rol
adc
xor
push
movsl
out
pop
ss
lcall
cmp
bound
jge
lds
lcall
push
fisttpl
cmc
jmp
add
push
xlat
add
pop
and
pop
scas
sbb
dec
test
mov
sti
xchg
sbb
shlb
push
add
push
sti
test
scas
sahf
fcomps
mov
push
dec
ljmp
lds
arpl
sub
lret
dec
loope
hlt
mov
insl
inc
pop
ret
inc
adc
lahf
std
fwait
sub
push
xchg
sub
stos
adcb
testl
hlt
aad
pop
fiaddl
xchg
lock
cmp
dec
push
rcrb
sub
and
adc
imul
test
repz
shrb
jg
scas
mov
pop
lret
loop
clc
shl
sbb
mov
test
fistpl
outsl
inc
mov
xchg
rorl
test
cmp
sqrtps
jnp
lret
es
js
mov
cmp
or
mov
scas
adc
data16
mov
in
outsl
stos
cld
mov
sbb
or
pop
stc
dec
inc
or
insb
pop
fld
das
pop
out
or
fsubrp
int3
adc
bound
sti
imul
orl
jnp
lcall
jnp
popa
dec
xor
jg
dec
fldl
ja
aaa
es
dec
fwait
ja
or
cmp
insl
pop
movsl
loop
mov
fsubrl
pop
out
orl
lea
addb
cmp
adc
xchg
scas
popf
add
cmpsl
xor
shrb
gs
out
std
xor
lods
push
dec
jmp
jl
js
jnp
sbb
push
mov
les
xchg
inc
inc
and
xchg
xor
flds
stos
divb
insb
lods
ja
cmpsb
pusha
push
push
dec
mov
mov
xor
or
xchg
inc
ja
mov
mov
pop
cltd
lds
scas
jle
ljmp
jmp
add
push
add
cmc
nop
pop
dec
inc
and
pop
repnz
jmp
xchg
lds
jge
xor
jp
pop
and
ret
int3
pop
in
daa
xor
pusha
das
fdivrl
sub
fldenv
push
pop
jmp
aas
push
cmpsb
divb
jns
jb
pop
inc
dec
inc
fs
mov
xchg
scas
dec
icebp
lea
push
sub
inc
push
mov
mov
fwait
jge
push
xor
orl
push
aas
pop
xchg
inc
inc
sbb
mov
dec
popa
xchg
pop
mov
scas
xchg
push
addb
mov
push
xorl
sub
loop
fcmovb
pop
jl
int
loopne
jae
push
das
xlat
test
add
jp
shrb
movsl
push
orb
dec
pop
pop
test
insb
push
cmp
ja
test
jg
xor
pop
mov
jne
dec
test
or
xor
xor
rclb
jecxz
ja
sub
mov
cld
cmpsb
in
fadds
jne
adc
jnp
dec
sub
test
push
push
adc
jo
xor
out
sbb
add
add
adcl
pop
fs
pop
add
jbe
xor
or
push
dec
pusha
movb
fcoms
or
xchg
add
cmp
mov
or
lret
dec
scas
xchg
jb
jb
in
lahf
ret
pusha
inc
push
stos
xor
iret
shl
mov
xchg
push
mov
lcall
sub
and
enter
jecxz
nop
lcall
push
imul
imul
imul
test
jbe
xchg
hlt
xor
fcmovnb
out
pop
or
or
mov
test
ss
push
jnp
pop
js
dec
js
dec
inc
fsubrl
push
dec
std
inc
and
cwtl
lahf
mov
push
ljmp
or
dec
inc
out
jae
mov
jo
lahf
mov
cmp
xor
push
push
fdivs
ljmp
ret
scas
mov
in
in
aaa
lsl
pop
xchg
dec
pop
adc
jp
insl
push
jge
push
push
inc
xchg
adc
les
pushf
cmp
test
cwtl
mov
push
xor
jno
popa
jbe
fcom
dec
pop
call
mov
lret
adc
inc
pop
jbe
xchg
and
push
push
push
data16
imul
lcall
fstp
mov
nop
das
daa
aad
lods
xchg
push
fldcw
push
add
dec
dec
movsl
inc
sbb
or
fiaddl
xchg
jno
gs
sbb
sbb
gs
cwtl
add
pop
add
rcrb
adc
push
or
jl
in
shlb
cmpsb
icebp
daa
fildll
fsubrl
bound
sbb
mov
fs
in
out
add
rcll
xor
std
xor
add
es
imul
jmp
or
mov
push
cmpb
jnp
fimull
inc
testb
call
cmp
cmp
cmpsb
fs
repnz
shlb
push
dec
imul
arpl
pop
sbb
lret
cmpsb
mov
std
mov
jo
jb
loope
jnp
fdivp
jnp
mov
push
test
mov
mov
call
add
inc
mov
jge
mov
dec
bound
add
out
cmp
xor
jno
mov
xor
rcr
mov
jmp
push
push
xchg
es
scas
dec
faddl
add
movsb
lods
aas
or
fstpt
das
rol
fisubl
les
fstps
sub
sbb
popl
arpl
sbb
aad
sub
adc
insl
pop
int
pop
inc
or
adc
test
fidivrl
lret
out
inc
xchg
lcall
shrb
add
cmp
push
inc
push
lret
adc
repnz
mov
mov
aas
xor
mov
inc
add
push
inc
sbb
fnstcw
add
mov
jne
mov
lcall
loopne
adc
jb
pop
jo
xor
adc
pop
ss
popa
pusha
ret
ficompl
mov
cmp
inc
out
loop
mov
push
or
js
push
insl
jae
inc
xchg
or
push
addb
xchg
inc
nop
out
adc
ljmp
orl
loop
enter
das
xchg
nop
addr16
and
in
dec
inc
out
popf
daa
lds
and
and
outsl
mov
movsb
pop
loope
lahf
adc
aad
outsl
clc
jmp
pushf
dec
sbb
pop
pop
dec
dec
insl
dec
jo
add
rcll
dec
cmp
pop
inc
je
push
mov
lods
call
mov
xor
fcomps
xchg
xchg
pop
dec
xlat
add
out
popa
test
rcrb
pop
lret
push
and
add
adc
or
xor
mov
out
mov
movsb
test
adc
mov
jl
das
mov
or
add
cmp
adc
ffree
popa
xor
inc
mov
out
and
es
push
fidivs
ljmp
mov
sarl
int
push
mov
mov
dec
loope
lock
push
aas
addr16
push
xor
nop
and
push
mov
sbb
pop
cmp
neg
and
xchg
or
int
orb
repnz
pop
cs
stc
mov
or
xchg
cmp
or
fsubrl
mov
xchg
rclb
pop
xchg
xor
ds
sub
popa
fldt
push
ja
xor
dec
repz
cltd
insl
scas
xchg
jmp
xor
push
lret
f2xm1
dec
dec
test
dec
adc
xor
add
iret
lea
sahf
inc
mov
lret
ret
les
mov
pop
mov
push
loope
cli
addr16
inc
cmp
inc
cwtl
mov
push
jno
jnp
or
push
jle
add
shl
shlb
out
cmpl
mov
mov
cmpsl
jbe
nop
pop
test
popf
and
pop
dec
gs
fistps
fisttpl
scas
inc
mov
cmc
sub
divl
cli
sbb
add
push
dec
int
mov
push
jge
or
inc
ss
imul
out
xchg
roll
jmp
jle
in
sub
pushf
pushf
dec
push
enter
mov
insb
loopne
mov
lret
pushf
pop
pop
dec
push
test
fcomp
leave
frstor
lods
sbb
lahf
arpl
dec
push
movsb
inc
mov
adc
fldenv
or
inc
sub
and
ds
cs
cmp
rcrb
mov
push
dec
lock
mov
pop
mov
das
js
fnstsw
jo
cmp
pop
pop
rcrl
scas
lret
jle
aam
mov
test
sub
data16
adc
cmpsb
cld
ficoml
xor
orl
stc
enter
dec
fldl
cld
xchg
adc
loope
outsl
mov
inc
jge
clc
cwtl
pop
imul
mov
add
cmpsb
jo
in
mov
fists
adc
loop
cmp
xor
stos
and
xchg
daa
cld
mov
aaa
clc
or
leave
mov
popa
gs
cmc
jle
ja
pusha
add
jecxz
pop
nop
aaa
sbb
scas
std
std
cltd
aad
test
addr16
stos
addr16
pop
mov
ljmp
jle
daa
mov
lret
std
mov
inc
rol
test
test
mov
xor
fwait
xchg
bound
mov
mov
mov
shl
lea
xchg
cld
mov
add
mov
dec
push
jl
jecxz
movl
mov
jb
jne
jmp
sbb
push
or
clc
lahf
mov
and
xchg
rcl
sbb
mov
mov
subb
mov
cmp
adc
inc
pusha
lods
dec
add
dec
fidivs
jb
pop
clc
cld
or
adcl
out
cmpsl
xor
mov
mov
dec
das
or
xchg
push
mov
push
and
movsb
sahf
xchg
dec
shrl
push
pop
inc
mov
xchg
aam
test
in
fld1
dec
shll
jl
int
sub
into
adc
cmc
scas
sbb
pop
sbb
add
jns
or
pusha
dec
orb
mov
insl
lods
arpl
or
push
xchg
cmpb
jae
push
fstl
adc
xchg
nop
pop
add
push
sub
and
stos
sarb
cmp
stc
pop
pop
push
fistpl
loop
rcll
fstpl
mov
andb
xchg
mov
cmp
stos
and
test
inc
ficomps
or
mov
outsl
mov
movsl
pushf
fimull
inc
and
xchg
sbbb
call
insb
in
sub
cmpsl
jns
push
adc
add
clc
jecxz
mov
add
mov
cmp
loopne
push
int
das
dec
shlb
fbstp
cmp
fcom
lahf
sarb
stos
xchg
movsb
add
xlat
outsb
fwait
js
stos
sti
dec
xchg
inc
stos
xchg
dec
xchg
xor
dec
scas
push
jle
sbb
dec
roll
jle
out
cmp
fcomps
rcr
mov
push
xorb
jns
push
mov
push
jp
imul
lods
les
dec
and
inc
push
movb
nop
inc
data16
lock
jl
das
jmp
and
sub
xchg
and
push
jle
pop
arpl
jmp
mov
ss
icebp
xchg
mov
test
sti
add
jnp
enter
rclb
cwtl
mov
lods
pop
cmp
jle
pop
xchg
nop
dec
jle
in
adc
fimull
pop
push
test
test
pop
cmp
adc
movb
sub
push
subb
mov
lahf
inc
aam
in
andl
daa
insb
mov
enter
xchg
movsl
es
sbb
inc
fcoml
in
lods
aaa
lds
mov
jnp
mov
sbb
sub
lods
mov
add
push
mov
stos
in
cli
std
orb
ror
clc
ret
mov
enter
push
les
stc
pop
xor
adc
sbb
lock
and
jle
xor
or
dec
cmp
popf
sbb
ljmp
ret
ret
stos
xor
xor
movq
cmp
sub
test
lods
cmp
ja
xchg
dec
jge
sbb
jg
cli
scas
jo
icebp
or
repnz
cmp
pop
push
sub
test
xchg
dec
sub
lret
imul
test
je
sbb
imul
fistl
rolb
push
jo
push
lret
xchg
inc
pushf
mov
sbb
pop
jmp
out
adc
out
add
add
mov
adc
jle
inc
mov
cmpsb
rolb
or
inc
push
cmp
clc
push
fistps
push
mov
flds
mov
sub
shl
lea
stos
mov
inc
dec
das
dec
jecxz
hlt
popa
mov
mov
xor
int
cmp
mov
popa
outsl
andb
shrb
aam
les
mov
stos
out
xlat
sbb
jnp
xchg
jmp
cmp
or
sub
dec
shll
out
add
bound
adcb
sti
test
sub
ljmp
sub
outsb
subb
popa
cmp
fadd
xchg
outsl
fldl
pop
jmp
sbb
sahf
outsl
cmp
adc
xchg
jae
ljmp
fists
dec
sbb
pop
les
or
dec
xchg
mov
mov
les
mov
and
maskmovq
negl
xchg
push
sub
cwtl
xchg
push
jb
ficoml
xor
fisubl
lds
pop
push
pushl
mov
xor
adc
sbb
push
addb
lcall
sahf
xor
cmp
movsl
mov
cli
adc
mov
mov
adc
cmpsb
sbb
orl
adc
sahf
shlb
or
mov
cmp
jge
mov
push
push
in
mov
pop
mov
push
and
in
jb
jle
out
aam
lds
sub
adc
inc
bound
and
testl
mov
repz
pop
xchg
sahf
mov
or
out
iret
push
mov
pop
movsl
xor
sub
test
xor
mov
popf
adc
hlt
std
lods
test
out
scas
and
mov
jnp
out
add
scas
arpl
cmp
mov
add
pop
arpl
mov
sub
push
lahf
rcrl
in
stc
xchg
jle
jle
or
lret
fwait
lret
and
push
push
jmp
ljmp
dec
les
xchg
lds
lahf
push
test
cmpsl
push
sub
adc
sub
jge
inc
std
sub
faddl
pusha
jl
and
xor
dec
sbb
mov
scas
jnp
gs
sub
jns
sbb
xorl
mov
push
pop
icebp
outsb
sahf
dec
sbb
or
sahf
cmpl
xchg
mov
out
and
je
push
inc
adc
test
sub
rclb
lock
scas
dec
cmpsb
xorb
pop
fcoml
fld1
jge
or
outsb
fldl
rcrl
cmp
subb
pusha
lcall
xchg
xor
mov
or
lcall
push
in
cmpxchg
popf
dec
ror
les
push
cwtl
aas
and
das
pop
push
inc
fnstcw
aad
adcl
popf
sbb
outsl
test
into
clc
outsl
popf
mov
xor
jnp
test
xchg
arpl
enter
aaa
and
mov
dec
mov
popa
dec
aas
adc
in
hlt
jmp
add
iret
shr
test
xor
jns
xlat
arpl
fcoms
adc
inc
cmc
mov
inc
fdivrl
jmp
xchg
stc
sbb
sbb
mov
push
push
inc
cmp
cld
xchg
jl
cltd
jecxz
push
push
test
push
iret
adc
jnp
pop
mov
popf
stos
les
push
rcrb
push
xchg
push
mov
testb
jae
sub
test
aaa
insb
mov
inc
shl
fcomps
mov
pop
dec
pop
les
mov
dec
les
stos
imulb
jnp
sub
sub
dec
ljmp
sbb
adc
cmp
daa
rcll
jnp
nop
jg
jno
pushf
jecxz
xlat
inc
mov
std
sub
sbbb
sbb
sbb
jae
jno
inc
mov
pop
int3
cmp
dec
xchg
xchg
nop
aam
outsb
and
in
dec
push
aaa
shlb
xlat
jmp
adc
mov
cmp
dec
and
add
pop
in
pop
cwtl
adc
imul
xchg
in
dec
xchg
pop
mov
fisttps
lea
test
cld
idivb
jle
cmp
dec
add
push
sti
mov
push
scas
pop
lret
mov
mov
in
mov
test
repz
jge
pop
and
ficomps
adc
xor
sbb
dec
jb
inc
dec
inc
or
scas
mov
push
lret
jne
mov
xor
mov
xor
js
fdivrl
ljmp
mov
adc
sarl
test
adc
scas
les
push
sbb
shrd
xchg
movsl
pop
rclb
xchg
movsb
in
mov
inc
adcl
das
testb
sub
push
je
cmpsb
cmpsl
lock
aam
or
xor
jae
sub
mov
xor
mov
and
pusha
bound
jl
xchg
sub
jo
jnp
jecxz
out
popf
mov
int3
lahf
stos
pop
shlb
xor
sub
sub
jmp
xchg
out
outsb
jno
rcr
hlt
ss
jle
enter
leave
mov
push
clc
mov
sbb
lods
mov
mov
sbb
sahf
pop
cmp
mov
sub
cmp
ror
cmp
int
pop
lods
repz
inc
sub
sub
mov
jp
test
movsl
in
cwtl
sahf
scas
fdivs
push
mov
xchg
or
dec
mov
arpl
out
test
loopne
sbb
dec
test
lret
movsb
jl
out
inc
rcrb
fists
adc
daa
and
xor
les
sbbb
popf
jl
sub
lock
mov
jge
xor
xor
andb
inc
mov
mov
and
or
call
pop
scas
xchg
adc
lret
xor
mov
xchg
xor
sahf
mov
sub
mov
stos
push
mov
movsl
mov
mov
pop
inc
jmp
gs
adc
mov
add
fimuls
negl
fbstp
xorb
and
into
ja
pop
or
daa
and
sub
ja
fisttpl
shrb
insb
mov
adc
enter
mov
pop
scas
jl
int3
lods
int
lret
cmc
xchg
sub
jmp
fisubrl
push
insl
pop
out
or
jge
xor
xor
jb
mov
xor
insb
lahf
inc
xchg
and
jae
sbb
jnp
outsl
pop
lods
es
sbb
sti
dec
sub
decb
mov
leave
adc
js
jne
inc
push
xchg
cmp
sti
rorb
jmp
xlat
fistl
dec
cwtl
imul
fbstp
sub
pop
sbb
dec
shll
sbb
enter
inc
js
mov
push
mov
cmpl
daa
jl
int3
jno
mov
dec
or
aas
mov
je
push
dec
sbbb
nop
inc
fs
push
push
test
es
sub
test
cld
outsb
mov
xchg
hlt
ret
dec
mov
jne
fnstenv
int3
ret
gs
dec
cld
push
adc
xchg
test
imul
mov
lahf
andl
daa
jb
stos
fnstsw
jmp
dec
sub
lea
sub
or
sub
gs
stc
gs
cmpsb
popf
cmp
or
in
ret
dec
sbb
adc
cmp
cltd
xchg
sbb
aas
mull
add
imul
push
sbb
and
xlat
pop
jb
ror
je
inc
insb
lea
fld
jbe
ljmp
lret
dec
xchg
shlb
sub
mov
and
mov
and
nop
xchg
add
push
adc
es
push
mov
push
fnstcw
sub
popa
pop
and
push
jb
lds
jbe
cli
adc
mov
push
adc
popf
popa
push
dec
imul
stos
push
aaa
movsb
lcall
dec
and
mov
push
ljmp
and
and
outsb
xchg
pop
mov
or
mov
int
cmp
mov
sub
test
ret
idiv
scas
sub
dec
scas
or
enter
push
sub
cmp
dec
push
shl
data16
call
dec
popl
push
ljmp
and
pop
cmc
cmp
jb
test
adc
scas
rorb
mov
jnp
stc
sbb
push
push
fisubrl
stc
faddp
cmp
scas
gs
in
mov
adc
xor
mov
pop
or
xchg
testl
cmp
test
cmp
cli
mov
push
shll
adc
pop
inc
in
pop
jp
jecxz
gs
mov
rcrb
fnsave
dec
nop
fs
push
jg
ror
xchg
adc
pop
testl
test
stos
addr16
push
fadd
lds
mov
push
sbbb
inc
fs
xlat
adc
mov
popa
ljmp
mov
xchg
stos
sbb
pop
adc
xor
add
repz
fnstsw
daa
cmpsb
inc
xchg
xchg
hlt
out
push
das
add
jb
cmp
pop
pop
iret
adc
inc
sub
push
clc
jmp
and
in
cmp
insb
cli
in
sahf
jne
loopne
push
xor
inc
cmpsl
mov
lea
out
xor
push
arpl
fstps
push
xchg
cs
movsb
les
add
pop
repz
jnp
push
scas
js
or
and
bound
inc
push
xchg
push
jmp
inc
call
sbb
fldcw
sbb
add
pusha
sbb
mov
xor
push
es
into
dec
adc
out
jg
and
xchg
sbb
test
inc
xchg
mov
pop
in
fs
sub
lcall
add
sub
jle
jae
mov
xor
pushl
jo
movsb
nop
cld
jle
jo
lock
mov
out
mov
jg
pop
push
aad
pop
push
fnstsw
push
in
ret
ffreep
xchg
and
imul
aam
jae
mov
sub
jle
test
movsl
pop
sbb
sbb
pop
adc
mov
or
xorl
test
sti
cld
cmp
add
mov
mov
xchg
cwtl
dec
insb
pop
mov
xor
jmp
gs
xchg
int3
mov
dec
jle
mov
add
stos
mov
iret
xor
jbe
loopne
mov
lock
aad
insl
and
shll
sbb
adc
jp
lds
mov
fildl
lahf
xor
pop
mov
outsl
sbbl
stos
add
sbb
cmpsb
cmc
push
add
and
push
iret
mov
mulb
insl
adc
je
mulb
xor
lods
test
jmp
xchg
daa
adc
and
iret
popa
sub
cmp
push
mov
sbb
clc
push
sub
cmc
jo
outsl
pop
pop
je
xchg
es
add
pop
adc
in
jle
xor
jg
mov
cmpsb
cmpsb
dec
cmc
sbb
dec
sahf
cli
jge
ljmp
repz
scas
cmc
jecxz
fcomi
clc
out
xchg
cmp
pop
or
mov
movb
mov
scas
and
popf
ret
mov
fnstenv
xor
jnp
scas
loop
cwtl
push
repz
shll
mov
mov
xchg
mov
cmp
cwtl
shll
mov
push
jbe
mov
lcall
sub
xchg
in
popa
adc
sbb
pop
ss
pop
xchg
fsubp
cmp
shl
jo
fcoms
and
imul
push
mov
dec
and
test
fisttpll
push
or
mov
cwtl
mov
lods
imul
sub
lea
add
ret
mov
jmp
in
push
les
push
int
mov
dec
xchg
movsb
xchg
sarb
lds
jmp
xor
xor
bound
into
cli
push
popf
add
add
pusha
and
loopne
sbb
pop
xor
xor
test
mov
testb
cld
cmp
cmp
lods
sub
lds
lahf
scas
sbb
cld
in
inc
jge
mov
sbb
in
jno
fsubr
pop
shlb
mov
and
outsl
rorl
adc
or
lcall
pop
in
dec
inc
cli
xchg
imul
mov
lods
xor
test
sub
xchg
popf
daa
scas
stos
jecxz
outsb
mov
scas
int
cmc
pminub
add
addr16
sub
dec
adc
push
adc
movsl
shl
adc
adc
jnp
pop
sub
mov
mov
popa
aaa
push
cmpsl
dec
punpckhdq
xchg
pop
gs
or
mov
lods
sbb
repz
or
and
cmpsb
pusha
xchg
sub
jns
lcall
ljmp
stc
iret
push
and
inc
ret
sub
sub
pop
xchg
push
sbbb
icebp
push
imulb
cmp
xchg
mov
mov
popf
pop
pop
je
adc
add
mulb
xor
push
fcmove
mov
xchg
ds
add
outsb
divl
test
and
jne
pop
add
fiaddl
clc
imull
add
pop
lds
push
jne
adc
imul
mov
das
pusha
scas
lret
js,pn
xchg
xchg
pop
bound
pop
jb
and
ljmp
jge
mov
hlt
lret
adc
pop
nop
sub
fisttpll
loopne
rcrb
adc
test
push
scas
in
sub
std
dec
daa
and
in
jbe
scas
xchg
jne
int3
les
xchg
add
daa
push
dec
jecxz
jo
add
or
rcrl
xchg
sub
mov
push
pop
aaa
lret
xor
cli
outsb
out
adc
ljmp
cmp
outsl
mov
aad
xor
mov
xchg
sti
adc
inc
movsl
sub
xchg
cmp
xchg
ds
push
dec
pop
pop
in
xchg
push
rcll
cmp
xchg
sub
or
ja
pushf
push
pop
les
jle
mov
mov
xchg
sub
sbb
sub
inc
arpl
imul
scas
mov
aas
or
xchg
scas
lods
pop
fwait
and
adc
cli
popa
mov
adc
cs
sarb
inc
or
inc
arpl
push
xchg
xchg
int3
pop
inc
jl
les
jg
orl
std
inc
enter
push
scas
push
and
data16
clc
dec
pop
test
pop
inc
gs
out
add
sarl
lea
cmp
adc
mov
mov
mov
sub
jmp
lret
push
dec
in
add
cs
xor
and
xchg
sbb
push
cmp
in
adc
fimull
fstl
mov
adc
inc
jb
jmp
jno
cwtl
es
fisttpll
cltd
pop
fidivrl
out
enter
pop
adc
test
imul
push
sbb
mov
push
dec
sub
sub
mov
cmpsb
call
jae
inc
sub
or
cmp
sti
lds
pop
jl
scas
fisttpl
push
sti
mov
and
push
pushl
and
mov
xchg
push
enter
jns
xchg
sub
je
aas
ficoms
je
sti
nop
mov
dec
loope
sub
inc
cli
add
pop
popf
dec
jno
dec
mov
scas
sbb
xchg
into
mov
dec
mov
push
pop
test
insl
cwtl
sub
mov
fwait
or
mov
test
push
mov
popf
test
daa
cmp
cli
mov
pop
xchg
sahf
fbstp
sbb
popa
push
mov
xchg
jb
dec
dec
imul
es
call
sbb
push
imul
inc
mov
test
dec
shll
nop
sub
mov
add
jo
push
xor
adc
ja
pop
mov
push
inc
xlat
aas
jnp
inc
adc
ja
pop
sub
outsb
stos
mull
xchg
lret
popf
pop
imul
aas
inc
cmpb
mov
fnsave
add
push
repnz
xchg
adc
das
and
sbb
fwait
std
shlb
push
add
iret
cmpl
dec
sbb
std
xlat
outsl
lods
jmp
out
mov
pushf
sbb
je
loop
pop
push
push
push
lcall
jb
cmpsl
pop
movswl
push
push
int
inc
mov
rcrl
add
push
movsl
push
pop
push
push
adc
add
mov
inc
cmc
inc
mov
mov
js
adc
inc
ljmpw
rcrb
mov
push
push
jo
jb
aaa
ds
sti
imul
mov
add
mov
in
fisubl
add
jmp
test
xor
outsl
aad
ds
sbb
mov
addr16
mov
jg
imul
mov
ret
dec
decb
dec
dec
std
sahf
push
sar
dec
pop
mov
stos
loope
mov
insl
mov
outsb
divb
cltd
nop
mov
xchg
mov
fdivrs
movsb
sbb
cmp
cmpsb
fistps
cs
stos
dec
xchg
fs
gs
or
dec
pop
insb
push
mov
xor
add
inc
push
add
mov
mov
push
in
ss
cltd
cmpl
pusha
mov
je
addr16
scas
jmp
inc
add
or
mov
pop
xchg
mov
xchg
pop
adc
pop
dec
pushf
dec
ficoml
dec
adc
and
and
in
sbb
pop
xor
sub
scas
jecxz
int
or
lds
rcll
mov
adc
jecxz
adc
adc
jg
stos
test
inc
push
and
push
sub
in
jl
lds
int3
mov
add
fidivrl
cwtl
lods
pushf
jle
add
add
or
popa
pop
jg
out
mov
in
xchg
dec
scas
sahf
popf
pushf
add
sub
into
or
hlt
xor
pop
mov
clc
fcomps
out
fnstenv
sahf
xor
fadds
xchg
sar
cltd
dec
jmp
mov
and
sahf
pop
jle
lods
scas
out
iret
dec
jnp
sub
popf
push
test
mov
jbe
or
mov
pusha
push
xor
cmc
or
es
or
loope
dec
shl
mov
mov
ficoms
cmp
push
xchg
xchg
lds
or
pusha
mov
bound
pop
jns
test
or
pop
jb
pop
xor
lcall
xchg
pop
xor
sahf
mov
fildl
ss
scas
pop
lea
or
out
je
jge
cmp
pop
pop
add
repz
leave
test
faddl
mov
inc
fimuls
sbb
fwait
jmp
dec
hlt
xchg
fwait
ds
push
xchg
pop
mov
adc
ss
xchg
jo
xor
pop
iret
mov
lcall
cwtl
lret
pop
out
and
mov
mov
jo
test
push
and
dec
lcall
rcll
sti
mov
mov
add
les
jp
pusha
stos
negl
ja,pn
sub
lods
sub
inc
pop
mov
xchg
pop
dec
das
xchg
sub
and
loopne
xchg
pop
aad
xchg
mov
inc
xor
jge
call
sbb
out
add
enter
adc
fs
daa
cld
mov
ret
dec
test
sbb
hlt
aaa
in
std
sbb
pushw
rcrb
fcmovnu
sbb
ds
ror
xor
sarl
nop
fidivrs
lahf
shll
mov
stos
les
xchg
movsl
adc
dec
dec
insl
andl
les
stc
aam
push
nop
xor
jmp
pop
popf
jb
daa
imul
cmpsb
and
clc
lock
rcl
ja
dec
das
push
mov
lahf
fsubr
or
pop
fldenv
mov
pushl
das
lea
pop
das
pop
add
pop
pushf
xchg
and
mov
and
daa
popf
pushf
or
insb
int3
mov
aad
pop
pop
or
add
loope
jae
mov
repnz
sahf
sbb
shrb
dec
mov
ret
add
add
in
xor
xor
xor
jecxz
jmp
pop
test
jo
inc
cmp
mov
xchg
pop
jns
and
adc
fcompl
jle
xor
das
mov
sub
sub
xor
dec
mov
pusha
xchg
sbb
and
loope
jmp
test
mov
pop
push
and
inc
andb
or
sti
xchg
hlt
add
mov
xchg
push
mov
mov
xor
mov
sbb
dec
sbb
leave
daa
and
cwtl
daa
sub
pop
adc
xor
sub
dec
das
add
sahf
lods
mov
mov
dec
mov
daa
and
xchg
test
lods
xor
xchg
xchg
xchg
mov
fcoml
daa
pop
sbb
aaa
fs
stos
movsl
pop
add
inc
shlb
ret
push
sub
repz
sbb
or
fcoml
jl
sbb
push
rorb
scas
jmp
adcl
sbb
in
xor
push
cmc
mov
je
sub
insb
push
jl
loop
pusha
dec
loope
jg
or
jl
dec
fldl
dec
jae
mov
and
out
push
ror
push
sub
and
leave
push
mull
cmpl
aad
mov
or
ss
jnp
ljmp
jnp
mov
jae
aad
adc
xchg
outsl
aam
xor
xor
xor
xchg
inc
leave
mov
sbb
inc
jbe
mov
jmp
popa
aam
pop
pop
push
mov
shrl
addl
cltd
ret
movsb
lods
outsb
das
dec
iret
mov
repz
inc
out
test
pop
push
ret
leave
int3
inc
in
xchg
jge
hlt
xor
cmp
mov
pop
repz
sbb
dec
in
je
xchg
dec
dec
icebp
dec
sbb
adc
scas
scas
pusha
insl
push
lahf
sbb
jg
cmpb
test
jg
mov
inc
rcl
jge
and
xchg
or
sub
insl
mov
je
subb
xor
xchg
leave
jle
add
js
adc
lods
jg
outsl
mov
ret
mov
scas
into
sbb
popf
int3
xor
inc
mull
mov
int3
dec
and
repnz
hlt
std
ret
ret
into
dec
mov
sbb
jg
jmp
sti
xchg
stos
inc
add
clc
adcl
xor
dec
pushf
mov
dec
das
in
mov
call
inc
adc
or
aas
pop
dec
dec
dec
adc
ret
sub
dec
fs
inc
push
xlat
cld
and
jecxz
mov
lock
loope
add
jp
in
jg
or
lea
scas
lods
shlb
inc
sub
js
insl
mov
mov
jl
ljmp
hlt
lcall
frstor
std
jp
cmpsl
cmpsb
sbb
xor
test
pusha
stc
dec
xlat
add
xor
fwait
rcr
adcb
mov
xor
cs
outsl
jp
nop
lret
dec
xchg
ljmp
jnp
add
ds
mov
and
hlt
dec
sub
and
dec
cmp
sarb
ret
test
lock
xor
sub
sti
clc
arpl
ucomiss
and
testl
cmp
xchg
pushf
pop
inc
jne
mov
fstl
mov
sub
incl
in
in
es
xchg
pop
outsl
mov
ficomps
bound
lahf
loope
push
sbb
int3
cltd
xor
pop
mov
or
clc
jbe
mov
aaa
sub
sbb
aaa
xchg
and
jp
pop
ret
fbstp
inc
and
adc
push
out
stos
ret
dec
shrb
idiv
ljmp
xchg
aaa
sub
insb
jb
into
data16
dec
je
sub
cmc
adc
fsubrs
ds
loope
ret
insb
jo
ret
sbb
adc
push
add
scas
lods
lret
aad
xchg
ret
int3
mov
mov
mov
ja
lods
pop
scas
out
addr16
jo
pop
mov
lea
cmc
popf
jno
xchg
adc
arpl
jmp
jnp
inc
xor
jo
dec
je
pop
enter
sbb
ja
sahf
adc
adc
xor
aad
fsts
dec
lods
add
pusha
ret
pop
push
test
frstor
push
ret
jnp
fdiv
inc
repz
mov
insb
jge
cmp
lret
add
xchg
rorb
sarb
adc
enter
cs
push
sbb
scas
lods
pop
rolb
mov
mov
push
stos
push
jbe
jnp
outsb
or
adcl
xor
xorb
and
arpl
ficomps
dec
xchg
xor
xchg
dec
or
push
daa
add
enter
cltd
jp
es
push
push
mov
stos
out
jnp
adc
jns
jne
lcall
insl
movsb
xchg
dec
push
out
ljmp
xchg
mov
ficomps
sub
int3
movsl
divl
sub
adc
sarb
rsm
dec
jns
push
cli
iret
mov
pop
pop
fs
in
cmpb
sbb
mov
das
cmpsl
scas
stos
add
arpl
mov
sub
and
rorl
lea
dec
pop
add
dec
inc
inc
fsubr
push
dec
inc
sti
pop
das
inc
nop
xlat
pop
out
nop
add
jns
push
flds
pop
or
lret
incl
cmp
push
daa
in
sahf
outsl
outsl
notl
jnp
mov
dec
inc
adc
inc
xlat
les
jno
lods
ljmp
pop
cli
mov
mul
out
add
orl
jp
push
clc
sti
int
adc
int
outsb
rcl
sahf
stc
aad
push
loope
add
dec
cwtl
aas
stos
and
nop
icebp
and
shlb
push
fsubl
push
cmp
fsubr
push
in
jg
xchg
dec
test
aam
inc
add
xchg
out
imulb
dec
and
imulb
push
insl
add
pop
xchg
adc
dec
or
jo
sub
sbb
daa
inc
shrb
es
aaa
cmpxchg8b
iret
insl
xchg
adc
sahf
adc
popf
xor
sub
push
daa
les
fsubrl
in
sbb
mov
jp
dec
xchg
cli
punpcklbw
xor
xor
pop
lahf
dec
xchg
push
ss
inc
repz
adc
mov
dec
pusha
pushf
xchg
xor
add
daa
shlb
push
cmpsl
arpl
jae
out
daa
sbb
addb
mov
push
pushaw
hlt
divb
mov
cwtl
pop
xchg
je
test
adc
jl
jmp
rolb
das
clc
icebp
mov
fmuls
cmp
insb
lock
test
int
jne
pop
cmp
inc
pushf
je
es
mov
xchg
aas
and
sbb
lods
mov
sbb
xbegin
call
add
adc
adc
add
cwtl
hlt
jecxz
push
out
cmp
mov
xor
cmp
pop
lahf
test
jg
ror
popa
push
ja
add
lea
inc
aaa
test
push
out
and
dec
dec
adc
lcall
jle
call
es
sbb
mov
fnstcw
clc
test
pop
imul
mov
xorl
mov
sub
push
lods
scas
pop
jno
cmp
repnz
daa
stc
dec
sub
movsb
mov
and
cltd
jl
jno
add
das
fmuls
adc
jg
push
div
popa
xor
gs
sbb
sti
pusha
clc
xchg
xor
sbb
mov
inc
xchg
xchg
iret
ds
iret
jmp
pop
xchg
pop
outsl
daa
pop
inc
xor
cmp
push
push
and
cmpl
mov
push
and
pop
clc
sbb
sbb
lds
push
jp
cli
hlt
pop
push
lahf
sbb
mov
incb
and
dec
mov
jno
jnp
cmp
and
xchg
hlt
in
jge
rclb
mov
aad
sbb
fisubrs
insb
icebp
cmp
std
mov
push
lods
out
lcall
imul
inc
cld
and
outsl
xchg
rorl
dec
ret
add
sbb
insl
xchg
pop
inc
and
xor
lret
lock
es
test
dec
mov
and
pop
sub
sahf
jmp
push
sbb
dec
jmp
outsl
je
popf
mov
pop
and
mov
dec
pop
das
scas
test
cli
enter
leave
inc
ret
xorl
xchg
inc
cmp
fcmovu
pop
fisubrl
outsb
push
xor
fs
inc
cmp
in
xor
jae
jnp
outsl
mov
out
jno
and
movsl
cli
lods
les
lcall
pop
sbb
jp
addr16
jae
dec
fldl
inc
jl
or
pop
adc
or
pop
stos
adc
mov
arpl
icebp
popa
rorb
mov
std
cmp
add
dec
pop
and
cmp
add
cld
ficomps
lea
mov
rorb
aas
mov
jbe
repz
dec
in
imul
push
movsl
mov
pop
psubusb
xchg
fs
pop
loop
push
popa
xchg
jb
nop
addr16
cltd
fists
addr16
dec
inc
push
mov
gs
lods
sub
push
xchg
fnstcw
jae
rclb
in
fists
mov
adc
mov
xchg
into
dec
add
loopne
shll
mov
fxch
mov
cmp
xchg
out
fmull
adc
sub
out
pop
mov
sti
xchg
das
hlt
movsb
in
fstps
pop
daa
imul
push
popa
sub
mov
xor
sbb
mov
jp
xor
stos
adc
pop
add
pop
dec
pop
jns
mov
push
nop
mov
push
add
fld
icebp
and
xchg
xorb
adc
mov
xchg
inc
outsb
std
xor
mov
mov
sahf
das
and
jb
subl
cld
mov
jb
ficoms
stos
push
pusha
add
lods
pop
pushf
jne
jb
adc
sbb
es
xor
cmc
fmul
jb
jle
mov
enter
dec
mov
nop
mov
jp
sub
lods
dec
movsb
pop
ficomps
mov
in
hlt
fwait
mov
cmp
in
xchg
imul
sbb
jg
mov
xlat
inc
daa
fidivs
dec
push
pop
dec
dec
out
adc
and
xlat
lret
ficoml
jnp
xchg
and
rcrl
adc
cmp
shr
pushf
cmp
mov
dec
xor
test
orb
nop
lret
sub
gs
sub
lret
imul
inc
insl
adc
pop
lds
xor
arpl
loope
je
mov
lea
lcall
ds
xor
std
inc
in
lock
xchg
jl
pop
aaa
pop
mov
jecxz
faddp
pop
int
dec
sahf
enter
lahf
mov
and
ret
jb
mov
jg
mov
push
sarl
mov
popf
pusha
sub
insb
sbb
sbb
add
and
xlat
out
aam
mov
jl
pusha
cmp
push
adc
sbb
sbb
and
cli
inc
add
dec
or
hlt
push
dec
add
arpl
daa
cli
mov
xchg
in
scas
jb
data16
fsubr
sbb
pop
mov
je
xlat
and
fsubrs
and
cmpsl
hlt
testl
ljmp
aaa
pushf
lcall
pop
dec
mov
mov
xchg
xchg
xchg
shlb
mov
int3
push
mov
xchg
cmpsl
in
pop
imul
adc
inc
movsl
shrl
sbb
dec
dec
cmp
lahf
insl
dec
mov
cld
inc
daa
dec
mov
xor
adc
jg
fisttps
mov
in
cld
pop
cmp
shl
lahf
mov
or
cmp
mov
das
fildll
movsb
mov
mov
daa
les
std
or
scas
mov
mov
pop
lods
outsb
pop
or
es
bound
push
cmpsb
pop
ret
dec
inc
mov
subl
jge
mov
pop
in
outsl
and
xchg
jnp
nop
fwait
je
adc
xor
stos
es
pop
fists
inc
das
movb
jle
mov
xor
call
xor
sahf
inc
xchg
adc
shrl
das
sbb
mov
lods
das
js
xor
cld
test
pushf
add
jle
iret
out
das
jp
push
and
inc
xchg
sub
mov
inc
pop
and
ja
imul
xchg
mov
mov
mov
inc
mov
ret
dec
insb
push
aad
rcll
cmp
dec
push
mov
testb
test
pop
popa
movsb
push
xor
cld
cmpsl
adc
xchg
jns
jae
stc
loope
adc
cmp
mov
jg
xor
mov
xchg
icebp
xor
mov
lock
and
mov
in
aad
loope
pop
dec
and
stos
xchg
jb
xor
lods
icebp
sbb
mov
and
repnz
sub
adc
insl
mov
push
ljmp
imul
dec
mov
mov
pop
mov
add
roll
icebp
xor
adc
xor
pusha
xor
addr16
decb
imul
xor
xchg
lahf
clc
pop
pusha
fs
jl
mov
sarl
jnp,pt
push
xor
sarb
rol
xchg
mov
in
js
mov
cmp
sbb
sub
cwtl
mov
add
add
dec
shlb
arpl
imul
mov
imul
popf
adc
js
test
mov
pop
je
inc
adc
int
repz
icebp
jg
daa
cltd
ss
mov
and
push
sbb
inc
fisttpll
lock
rcr
popf
call
push
scas
sub
pushl
xchg
sub
lahf
push
and
pusha
xchg
stos
mov
dec
lods
xchg
pop
jbe
ja
cld
pop
mov
mov
lahf
ja
cmp
daa
mov
dec
or
repnz
sub
cmp
in
pop
shlb
sbb
mov
cmp
xor
xlat
sub
sub
orb
daa
cwtl
fimull
inc
pushf
push
push
stos
leave
shlb
lock
dec
in
movsl
adc
push
pushl
shll
mov
ret
xor
inc
push
pop
and
mov
pop
mov
mov
sti
aam
movsl
ffree
push
or
pop
pushf
shlb
das
daa
xrelease
fdivl
inc
fistl
dec
in
imul
cs
jo
int3
gs
push
inc
fbstp
pop
add
addb
rorl
push
sbb
into
aad
mov
jge
icebp
and
fmull
sub
out
imul
ds
jno
dec
jb
dec
mov
mov
cmp
loope
stc
cmc
jns
dec
hlt
inc
cmp
loopne
or
and
addr16
push
push
mov
adc
out
mov
fwait
push
sbb
imul
adc
push
pop
cli
lret
cli
sbb
orb
xchg
icebp
mov
testb
mov
xlat
jmp
and
mov
outsl
arpl
jmp
inc
jp
out
push
bound
out
cmpb
outsb
jg
sti
fcompl
and
mov
xor
add
cmp
dec
stos
cmc
push
or
cmc
fs
cwtl
das
and
ljmp
lcall
xchg
dec
and
sbb
lret
jg
mov
aaa
adcb
cmp
pop
dec
outsl
or
fistl
mov
mov
sar
or
inc
idivb
sub
cmp
outsl
or
lahf
xchg
jns
cld
xlat
jb
fldcw
mov
dec
jl
fwait
adc
and
mov
bound
or
xor
dec
mov
adcl
mov
cmp
ljmp
test
fcmovne
pop
jnp
fidivs
dec
dec
icebp
insb
xor
jbe
adc
xor
movsl
sub
testb
adc
sar
jae
adc
orl
sbb
pop
xlat
sbb
les
fsubrs
arpl
cmp
dec
inc
test
dec
xchg
test
mov
out
lcall
rclb
mov
imul
mov
mov
outsl
mov
xor
outsl
pop
push
lcall
lods
push
push
stos
aaa
or
cmpsb
orl
das
mov
cmp
sbb
push
mov
aad
xchg
mov
in
mov
int
hlt
fldl
xlat
or
call
cli
pop
push
lea
pop
inc
sbb
hlt
in
andb
ss
mov
jecxz
inc
add
das
xchg
dec
pop
enter
sbb
xchg
jns,pt
sbb
jno
mov
push
nop
popl
push
cmp
pop
inc
jae
xor
or
scas
dec
mov
mov
push
pop
or
adc
and
nop
mov
iret
fwait
inc
push
loop
jmp
xor
out
stc
mov
add
ljmp
sahf
and
add
add
test
jno
mov
lahf
fucomp
fcomip
push
int3
and
orl
push
sub
ja
nop
arpl
aad
stos
cld
push
jns
xchg
popa
sub
outsl
adc
pop
pusha
aam
mov
inc
adc
push
scas
mov
fstp
jp
inc
mov
fnsave
pusha
lret
scas
jge
test
jmp
aad
and
or
and
aad
in
dec
sar
jmp
nopl
xchg
es
mov
push
xchg
jbe
dec
pop
mov
cmpsb
mov
jnp
mov
fs
mov
inc
jge
pop
push
dec
dec
pop
aad
sbb
les
cmpb
enter
mov
mov
dec
fwait
mov
popa
sub
aaa
int
jle
das
lds
add
or
iret
pop
mov
aam
sub
sbb
test
int3
add
insl
xor
scas
ret
les
pop
xor
mov
pushf
sub
outsb
jg
jnp
or
adc
mov
loope
lahf
dec
scas
mov
repnz
das
mov
pop
mov
sub
sahf
mov
test
call
xchg
nop
out
int
sub
mov
xchg
movsb
scas
pop
mov
mov
addr16
mov
test
stos
aas
push
dec
push
test
inc
aam
adc
cwtl
ljmp
jmp
sar
sbb
imull
mov
sbb
or
fmuls
insb
prefetcht2
addr16
mov
aad
sbb
fsubr
out
mov
xchg
ret
mov
shlb
fidivl
mov
pop
and
mov
jecxz
xchg
xor
jle
sbb
es
sbb
lea
mov
shrl
js
sub
jg
arpl
fdivrs
imul
popl
push
cmp
into
outsl
and
inc
pop
aas
mov
out
ret
push
in
cwtl
xor
xlat
pop
stos
cmp
jge
cmpsb
rolb
dec
pop
push
inc
sbb
mov
in
xchg
or
pop
outsl
push
mov
and
fwait
xor
adcl
cld
ffreep
mov
aam
sub
inc
lahf
lret
mov
addb
pop
sub
das
ja
sti
rolb
cwtl
stc
iret
pop
dec
xchg
in
jmp
daa
ja
dec
sub
lock
mov
repnz
jp
mov
dec
les
sahf
test
pop
lods
scas
gs
sbbb
mov
mov
repz
shlb
sub
outsl
outsb
sub
in
lahf
add
pop
pop
cmp
fstpt
popf
int
xor
inc
ja
xchg
mov
stos
mov
hlt
or
fcom
add
mov
push
in
xor
mov
mov
insb
add
mov
xchg
jo
push
jge
inc
push
sub
scas
cmpsb
xchg
push
mov
push
cltd
cmpsl
int3
repz
subb
xchg
dec
sbb
adc
test
lret
push
sbb
inc
test
test
mov
dec
push
mov
sahf
or
add
or
sbb
imul
mov
nop
aad
orb
xor
cmc
xor
cmp
hlt
pop
inc
je
inc
or
test
je
fwait
pushl
xor
cmp
out
mov
push
push
jno
or
fldcw
ret
lret
dec
test
xlat
add
cmp
mov
cltd
rorl
icebp
fists
shlb
hlt
jns
shrl
aam
xor
xor
sti
rorl
rolb
pushf
les
cmp
cmp
test
popl
idiv
sbb
mov
adc
or
push
sti
mov
sbb
xchg
iret
adc
dec
inc
fwait
test
adc
ds
xor
addr16
je
in
mov
and
scas
insb
fsubrs
dec
jne
sub
mov
mov
and
inc
mov
add
cwtl
in
imulb
ljmp
bound
push
xor
or
and
fstp
popa
and
sub
jp
fucomip
pop
sub
and
mov
and
lock
or
out
mov
scas
xchg
push
pop
das
fldenv
pop
outsb
xor
jbe
xor
fldl
jbe
sbb
inc
inc
or
lock
repz
jl
jae
xorb
and
cmc
cmc
loop
cmp
pop
shll
stos
pop
inc
sbb
call
daa
mov
pop
loope
jo
push
sahf
push
sub
xor
jle
or
out
repz
jmp
nop
stc
fldl
out
std
psubq
data16
test
or
sub
lcall
fwait
insl
outsl
xchg
jmp
sub
adc
inc
push
push
out
cltd
xchg
sbb
adc
xchg
xchg
test
cmp
xchg
fwait
or
repnz
call
mov
into
fucomi
mov
pop
bound
sarl
jne
and
leave
lock
fnstsw
arpl
aaa
out
stos
xor
lret
adc
imul
xor
adc
outsl
ja
sbb
roll
daa
dec
lcall
cld
iret
mov
arpl
add
out
roll
sbb
lods
dec
sbb
adc
or
xchg
negl
sbb
push
jae
outsl
addl
mov
loopne
pop
dec
repnz
leave
fsts
scas
dec
jecxz
mov
inc
cmp
arpl
adc
inc
sbb
xlat
ret
out
lahf
stos
aas
sti
add
fucomp
ret
movsb
loopne
adc
test
mov
adc
arpl
and
and
mov
call
inc
aaa
push
and
icebp
aaa
shll
icebp
mov
std
iret
arpl
fwait
cmpsb
scas
jo
fmull
mov
out
mov
mov
dec
mov
xor
test
add
and
ljmp
ror
lret
dec
mov
mov
es
push
in
sub
fidivs
aad
std
mov
adc
movsb
test
or
add
mov
test
mov
inc
pop
mov
or
inc
loopw
je
dec
adc
rol
cld
hlt
repz
lods
popa
frstor
ljmp
shlb
fnop
jnp
jmp
sub
and
pop
jl
lret
repnz
adc
jg
adc
xor
cmpsb
pop
mov
rclb
test
loop
sub
jno
xchg
sti
scas
test
test
daa
push
xor
cwtl
das
lock
and
pusha
or
and
lret
push
stos
mov
das
imul
mov
mov
xchg
leave
mov
sub
fisubrl
into
clc
dec
aas
dec
in
xchg
fdivrs
pop
add
aam
insl
out
mov
jmp
add
dec
sbb
rcll
xlat
ret
stos
mov
loopne
jo
add
icebp
pusha
shr
and
shlb
jne
inc
pop
insb
gs
mov
std
mov
xchg
notb
xorl
or
jp
xchg
into
aaa
test
cwtl
xor
jg
pop
xor
repz
push
in
stc
daa
fsubl
popa
push
fstpt
xchg
outsl
jge
cmpb
pop
stos
inc
cmp
xor
mov
mov
mov
or
loopne
or
mov
sti
cwtl
push
push
loopne
cmp
cmpsb
mov
push
jg
ja
dec
push
mov
jmp
decb
push
aas
mov
xchg
fwait
dec
inc
add
int3
test
ds
stc
aaa
xor
push
loop
js
call
dec
rol
xor
push
arpl
jne
push
fisubs
les
jb
inc
repz
push
add
xchg
icebp
fisubl
sbb
enter
pop
outsl
xor
cmp
sub
fs
orl
push
add
mov
mov
jmp
xor
neg
mov
stos
shlb
rorb
mov
in
inc
outsb
xor
and
and
fstps
pop
filds
jnp
sbb
add
add
cmc
pusha
rcll
lret
inc
push
ds
mov
lods
inc
in
popa
outsl
xchg
mov
xchg
das
push
cwtl
pop
movsb
cmc
insb
cwtl
cmp
sub
xor
push
ret
pop
sub
cmc
in
vmulps
xchg
mov
push
dec
cs
adc
inc
add
jl
adc
or
and
shlb
sbb
push
jle
inc
addr16
test
and
inc
cmp
loopne
xchg
push
xchg
scas
add
ljmp
lea
fwait
dec
imul
mov
mov
cmp
scas
fwait
cld
fisubl
dec
jns
clc
pop
add
inc
mov
or
fimull
aad
nop
lcall
faddl
insb
imul
sub
lods
lds
mov
mov
or
jbe
add
cli
fsts
int
fwait
lea
mov
repnz
xor
andb
bound
fistpl
lea
cmp
sbb
push
mov
bound
js
mov
pop
push
xchg
lods
outsb
cmp
mov
std
fsubrl
pop
cld
xchg
xchg
cmpl
jecxz
mov
test
das
cwtl
in
shrd
pop
and
sbb
stc
mov
and
fwait
shlb
f2xm1
jp
cmp
sarl
out
or
lock
mov
inc
scas
push
fadds
dec
pop
fwait
pop
add
lret
push
push
push
das
pop
jo
dec
or
sbb
sbb
jnp
scas
stos
mov
push
data16
test
loop
lock
ficoms
dec
push
cmp
leave
or
dec
or
nop
or
or
popa
xor
lcall
xchg
adc
insl
push
and
ja
mov
fst
pop
hlt
icebp
stos
les
ret
add
movsw
xor
push
jg
mov
add
xchg
cmp
inc
sti
lods
dec
sbb
cmp
popf
pop
add
xor
pop
cwtl
sub
push
outsl
int
xchg
jmp
das
xchg
cmp
sbb
lcall
push
add
leave
mov
sub
out
dec
insb
or
add
cmp
insb
jl
xchg
pmulhuw
push
push
sub
lds
popa
jno
fsubr
push
adc
aam
loopne
lods
cmpsb
add
mov
shll
add
jg
inc
shl
insb
mov
aam
ret
hlt
dec
stos
pop
je
mov
lcall
pushf
sbb
dec
repz
mov
pushf
and
push
sub
out
inc
mov
sub
push
iret
xchg
lea
vpaddw
shlb
out
negl
or
out
mov
xchg
mov
and
mov
mov
arpl
dec
iret
loop
sbb
pusha
inc
push
add
sub
ret
lds
pop
xchg
out
mov
dec
imul
testl
push
jge
push
adc
stos
sub
fadd
adc
ret
pop
dec
dec
cmp
pop
push
pusha
cmp
push
or
sti
push
ljmp
dec
jo
mov
jae
pusha
push
adc
out
mov
dec
mov
pop
or
push
ret
test
inc
aam
lods
and
add
repnz
sub
test
sti
adc
xchg
pop
fidivrs
jns
stos
iret
sahf
xor
jl
cli
adc
nop
jnp
sub
and
clc
dec
mov
outsl
push
or
mov
repz
cs
lock
mov
lahf
push
pop
pop
mov
inc
push
mov
pop
xchg
dec
xchg
xchg
dec
adc
and
jo
lock
test
and
mov
mov
dec
mov
imul
aam
xor
sub
das
jae
ss
xor
jl
mov
pop
rcrb
idivl
inc
push
xor
push
push
call
cmp
daa
scas
aam
xchg
sbb
in
or
int3
aam
sbbl
and
jl
xchg
xchg
push
sbb
stos
or
shll
pop
dec
push
and
fldt
movsl
dec
fdivrs
inc
ss
jae
xor
pusha
push
jmp
movsb
sbb
xor
push
or
xchg
adc
or
mov
dec
adc
xor
ficompl
mov
int
stc
insb
inc
dec
cld
outsl
test
dec
sub
push
cwtl
js
das
pop
jge
lock
rol
push
test
jb
jno
dec
xor
inc
lret
fldt
stos
inc
jecxz
dec
adc
xchg
pop
repnz
jg
imulb
inc
xor
adc
sub
push
test
fs
dec
or
mov
test
xchg
dec
pop
add
mov
dec
daa
and
inc
icebp
sub
pop
xor
cli
mov
mov
xor
in
cmp
dec
push
fisttpll
jg
pop
cmpl
mov
sbb
negb
jl
push
mov
leave
movl
cmp
sbb
mov
inc
pop
push
std
jmp
ret
outsb
pop
add
sbb
mov
jmp
es
rorb
push
out
xchg
xor
xor
xchg
outsl
push
fwait
arpl
lret
jmp
clc
push
xor
iret
ret
stos
jecxz
orb
push
jg
jnp
rcrl
insl
loop
bound
mov
add
adcb
xor
outsb
je
es
leave
shl
xor
mov
in
insb
mov
adc
imul
mov
jl
push
aaa
jge
inc
and
push
jnp
jo
inc
sbb
lcall
add
or
orl
dec
dec
xor
mov
lods
and
inc
add
ljmp
loop
and
das
outsb
mov
or
rol
dec
dec
in
xor
fsts
enter
dec
rclb
dec
pop
xor
cmp
inc
mov
ja
lret
xor
pop
lods
pop
movsb
inc
pop
aad
dec
xchg
cld
int
fbld
push
mov
loope
mov
aaa
and
jl
das
es
lea
test
dec
popf
rorb
fdivp
fstpl
inc
xchg
pop
mov
add
cld
adc
mov
mov
inc
pop
sarl
dec
in
shlb
mov
test
add
jbe
dec
inc
xchg
shl
mov
pop
das
push
mov
push
dec
shll
pop
aas
iret
call
jl
adc
sub
ljmp
fdivrs
sti
imul
test
jo
loopne
add
lods
enter
sub
xchg
roll
lret
inc
out
hlt
or
xchg
outsl
jne
mov
adc
pop
fists
les
test
inc
stc
and
or
adc
je
outsl
mov
add
and
mov
add
pop
hlt
push
test
jo
je
mov
adc
pop
orl
cmpsb
imul
dec
imul
adc
xor
seto
xchg
repnz
arpl
rcrl
xor
jg
ror
push
cmp
cmp
or
and
aas
and
jle
fisttps
mov
add
mov
mov
sbbl
or
jbe
mov
pop
push
subb
sub
cltd
test
orl
or
jb
cmp
out
sub
lods
loopne
push
inc
sub
lea
rorl
shll
xchg
jb
outsl
out
clc
push
dec
pop
js
xchg
push
or
or
mov
arpl
imul
loope
sbb
test
lahf
dec
aas
dec
ljmp
stos
das
imul
add
sbb
out
addl
rcll
or
sbb
push
out
insb
hlt
fildl
xchg
cltd
sub
xchg
ret
xchg
in
outsb
mov
mov
scas
arpl
or
cmpsl
test
sbb
movsl
jecxz
lret
or
jle
cmp
cmp
shll
cmp
insb
cmp
cltd
xor
lcall
or
jnp
fimull
mov
inc
loop
mov
mov
mov
cmp
add
push
jg
dec
mov
repz
push
adc
bound
mov
pop
sahf
imul
sbb
jp
or
push
xor
lret
push
jge
and
ja
mov
adc
pmaddwd
rcrb
stos
jle
xchg
fisubrl
sahf
shrb
pop
rcrl
shll
jle
sbb
xchg
pop
push
loope
sbb
shrb
pushf
push
cli
push
aas
xchg
sub
andb
adc
rcrb
mov
push
dec
mov
out
outsb
jns
jge
das
push
movsl
fnstenv
jl
pusha
mov
fwait
or
in
test
sbb
pushf
cmc
inc
ret
loopne
icebp
sub
pop
mov
fmulp
mov
pop
outsb
add
rclb
pop
and
pop
mov
adc
xchg
cmp
lcall
add
xlat
mov
sbb
sbb
mov
les
iret
fstpl
cmc
cwtl
lret
movsb
cmp
pop
sar
mov
push
fdivrl
xor
push
out
dec
fucomp
mov
jg
enter
sbb
mov
sbb
jecxz
push
mov
add
and
xchg
ss
or
sub
cs
push
ja
jmp
cmp
stos
int3
scas
cmc
int3
dec
mov
test
dec
call
push
stos
mov
test
addr16
and
and
repz
sbb
cmpl
jb
lds
mov
aas
pop
stos
call
xchg
sbb
cmp
adc
loopne
mov
ja
push
cmc
pop
mov
add
adc
xchg
lock
add
push
lds
push
add
dec
inc
mov
imul
jp
ja
jge
mov
aam
adcl
cmp
jge
stos
sbb
rorl
stc
pop
mov
xchg
xchg
nop
sub
push
lahf
imul
lret
sti
jle
add
sub
push
lock
aad
pop
ljmp
popf
lcall
ss
sub
jbe
inc
push
cmpsb
scas
adc
cltd
and
aaa
mov
int3
and
inc
leave
add
aam
cltd
xchg
stc
add
lahf
shrl
mulb
push
daa
rorb
sbb
mov
mov
shll
xor
loope,pn
test
and
std
or
push
stc
push
push
fstp
stc
mov
shlb
pop
xchg
pop
push
pop
loope
fcoml
notb
stos
mov
int3
fsubrl
dec
adc
out
daa
movsb
aas
popf
aam
push
cli
xor
loop
and
jo
adc
push
cld
cld
dec
xchg
lcall
xor
jg
sbb
loopne
mov
sub
test
jg,pn
hlt
and
push
xchg
gs
into
xor
and
mov
push
adc
aaa
icebp
movsb
insb
es
xchg
shrb
mov
jb
push
int3
enter
cmp
imul
xchg
cmpb
push
imul
and
vmread
fadds
repnz
out
fbstp
pop
fcmovnu
mov
sbb
insb
test
ljmp
jle
xchg
and
cld
movsb
or
push
add
dec
push
jno
inc
sbb
and
das
push
aaa
pop
mov
dec
mov
std
aam
sbb
movsb
adc
outsb
jmp
mov
sub
xchg
fisttps
leave
call
pop
jmp
mov
mov
dec
repnz
sbb
or
or
les
lret
cmpsb
dec
xor
inc
mov
mov
pop
pop
adc
mov
scas
pop
sbb
cwtl
and
cli
out
pop
cmpsb
mov
xchg
and
fildl
fcoml
test
xor
xor
xlat
nop
add
outsl
xchg
outsl
cmp
jne
xor
pushf
cmp
rorb
fsubrl
sbb
sahf
xadd
push
sub
mov
add
dec
mov
pusha
pop
in
rcll
fildll
push
js
fsubrs
or
dec
test
pop
or
adc
fwait
dec
push
inc
inc
pop
sbb
adc
jne
dec
jne
fs
out
or
ret
fldenv
out
inc
jnp
pop
out
and
mov
adc
popf
adc
rol
popa
sti
test
add
push
cmc
push
nop
inc
out
gs
cmp
data16
cmp
and
int3
pop
outsb
dec
sub
fadds
mov
aaa
pop
mov
repnz
sbb
jns
sahf
mov
shr
lock
pop
aaa
pop
mov
ljmp
mov
orb
dec
rclb
or
stos
out
and
sub
pop
pop
add
sbb
and
mov
sub
out
fs
ljmp
sbb
push
pop
leave
cld
fs
mov
pop
jno
push
popa
dec
push
adc
add
sub
pop
xor
add
movsb
pop
add
negl
mov
loope
movb
test
je
les
push
xor
ljmp
pop
push
push
std
pop
lret
xor
xchg
into
int
mov
inc
mov
mov
ret
decl
les
stos
bound
fmuls
popf
rcrl
cmp
das
in
inc
push
mov
add
pop
add
xchg
add
sbb
fs
sub
rcrb
sbb
mov
mov
cld
in
push
push
and
ficomps
pop
insl
add
fsub
push
xor
add
scas
dec
lret
sbb
sub
fbstp
dec
bound
sub
ljmp
push
cmpsl
fsubrp
popa
mov
fidivrs
addr16
repz
mov
and
add
out
pop
fnstcw
repnz
cmp
and
sbb
pop
pusha
sub
and
pop
out
fidivrl
and
rep
push
xchg
iret
add
fistl
adc
mov
or
rclb
push
in
mov
cmp
test
jnp
adc
jecxz
sahf
pop
pusha
or
and
adc
dec
out
loop
sub
adc
test
mov
wrmsr
iret
and
jg
xor
shrb
lret
xchg
out
bound
pop
lea
cld
xchg
out
cmp
call
fbstp
lock
xor
add
cld
sbb
std
sub
lods
xlat
fbstp
inc
adc
or
inc
roll
insl
jns
inc
cli
xchg
push
mov
cmc
dec
outsb
stos
jecxz
jl
mov
pop
sahf
push
nop
or
shrl
or
sbb
xor
cli
push
xchg
adc
and
jge
repz
popa
mov
and
adc
stos
jne
aam
adc
lods
mov
enter
hlt
pop
int
adc
test
imul
cmp
push
inc
adc
pop
add
and
repz
adc
lea
mov
pop
cmp
hlt
mov
jmp
pop
pusha
inc
fcoml
aas
repnz
adc
pop
cmp
push
mov
cmp
mov
cmpsl
icebp
sbb
adc
jno
jmp
lea
push
sbb
pop
mov
aas
pop
sbb
jge
xchg
push
lcall
or
dec
test
inc
jnp
loope
cmp
jg
sbb
mov
add
xchg
fistpll
sub
outsb
mov
test
mov
mov
xor
rcrl
enter
lea
dec
jmp
pop
cmp
jns
das
mov
mov
cmp
inc
aas
sbb
xor
call
fucomip
or
mov
bound
pop
jecxz
je
pop
cmpsl
dec
xchg
push
je
or
repnz
mov
jmp
sub
scas
mov
mull
popf
sub
cmc
in
mov
xchg
xor
mov
push
jb
or
add
lea
and
aaa
jl
ret
in
and
ds
push
xor
bound
idivl
xchg
rcll
stos
or
jl
js
lret
cs
pop
sub
push
xor
and
sbb
ror
push
icebp
mov
cmpsl
nop
xor
xchg
aam
add
aad
fcomps
lcall
and
and
cld
xchg
xor
add
inc
push
dec
mov
xchg
adc
repz
mov
jmp
data16
dec
mov
lcall
int
pop
loop
std
outsl
ljmp
ljmp
sub
je
or
and
cli
mov
inc
hlt
fwait
adc
clc
push
or
daa
pop
jbe
mov
mov
ret
pop
les
iret
aad
jnp
cmp
and
sbb
lcall
push
dec
add
pop
mov
repz
xchg
add
jnp
cmc
push
loope
rcll
push
mov
test
popf
xor
pop
pop
mov
xchg
loopne
imul
div
mov
and
adc
cmpsl
pop
clc
jl
jp
push
push
in
sub
cmp
leave
and
repnz
push
dec
lock
sarb
and
pop
fwait
jecxz
push
mov
enter
imul
xor
mov
mov
orl
adc
cmp
rcrl
cmp
mov
add
into
xorl
and
out
insl
xchg
adc
inc
ljmp
dec
sti
arpl
xor
adc
inc
fstl
addr16
fwait
shrb
push
popf
out
test
call
push
adc
xchg
sub
dec
mov
movsb
xor
insb
push
and
pop
aad
jae
scas
aas
pop
mov
xor
js
adc
push
mov
sub
outsb
mov
in
loop
inc
push
sbb
mov
xchg
stos
jle
sbb
inc
test
scas
push
testl
inc
pop
add
xor
lret
lods
mov
jb,pn
cmp
push
addr16
xchg
push
pop
jne
sbb
outsl
out
les
and
out
pop
dec
xor
pop
mulb
les
lret
ljmp
btr
xchg
leave
inc
lahf
inc
les
xchg
sbb
loop
pop
and
jns
inc
fcoml
movsb
mov
sbb
adc
and
xchg
xchg
pop
bound
jl
push
js
aam
mov
pop
dec
mov
pushf
scas
mov
push
test
mov
jecxz
push
push
push
jne
addr16
daa
icebp
cmp
pop
mov
ret
adc
xchg
jne
or
dec
dec
mov
jle
cmpsb
fcompl
pop
and
or
mov
stos
addl
sahf
adc
adc
in
add
xchg
push
nop
mov
addr16
jb
inc
fcoms
mov
adcl
movl
mov
pusha
rcrb
hlt
adcb
push
std
inc
sti
mov
or
mov
dec
fistpl
sbb
dec
cld
in
fcomps
test
andb
cli
mov
mov
add
in
inc
jge
xorl
xchg
or
ret
jle
outsl
cmp
and
push
sub
fdivs
mov
sbbb
adc
mov
sbb
lods
sub
repnz
mov
mov
gs
mov
mov
mov
pop
test
or
push
ficoms
xorl
iret
mov
xchg
cmp
adc
loopne
cmp
into
xchg
mov
sbb
inc
sbb
movsb
jp
jle
mov
mov
xor
pop
movsl
xor
xchg
js
sbb
mov
rcl
push
fldcw
out
xor
or
xchg
out
es
roll
test
push
gs
hlt
push
sahf
test
sub
sub
loope
daa
aam
call
pop
dec
pop
sub
pusha
ljmp
push
pop
mov
stos
inc
outsb
mov
popf
ret
pop
clc
xchg
mov
sbb
mov
sub
inc
xchg
xchg
xor
enter
shlb
xchg
nop
ret
and
jmp
or
cs
dec
int
jae
add
loop
daa
insb
pop
and
lds
mov
mov
sti
iret
pop
pop
aam
pop
fidivrs
lret
pop
int3
gs
mov
aad
mov
ja
jb
sub
shlb
mov
add
ja
mov
push
scas
mov
add
cmp
in
push
aad
sbb
mov
jne
in
lahf
xchg
mov
aaa
fidivs
jle
xor
mov
xor
insb
push
shl
aam
sbb
cmp
imul
filds
xchg
or
dec
rcrl
adc
mov
dec
dec
sbb
sub
les
mov
xor
adc
out
jge
sub
js
loop
push
mov
jns
sbb
scas
dec
cmp
stos
std
add
inc
std
jmp
outsl
in
or
jae
push
dec
mov
and
dec
aad
shll
out
movsl
aad
push
rcr
push
mov
mov
mov
iret
push
cwtl
xchg
xchg
movsb
jae
daa
sbb
xor
orb
push
mov
mov
call
stc
push
sub
rcr
jp
adcl
sbb
insb
sbb
push
and
lock
push
mov
dec
std
mov
adc
sub
scas
sub
pop
mov
jle
push
jecxz
icebp
pop
xchg
loopne
or
and
test
pushf
imul
shlb
jo
fsubrl
and
jecxz
ljmp
mov
cld
jae
mov
mov
or
dec
or
xchg
mov
ljmp
ds
adc
dec
xchg
pop
xchg
push
sbb
mov
addr16
or
or
xorl
mov
and
in
scas
pop
ds
std
xchg
hlt
sub
pusha
and
nop
shl
xchg
mov
lods
xchg
insl
rep
sbb
pusha
push
test
jecxz
and
sahf
icebp
and
jmp
repz
lcall
lock
js
mov
or
mov
fldl
pop
in
ret
inc
and
addr16
clc
jge
xchg
je
inc
xchg
vxorps
movsl
sub
dec
jle
sahf
mov
lret
nop
in
outsb
xorb
or
adcl
aam
or
xor
or
mov
test
fisttpll
scas
inc
add
jl
inc
dec
lret
adc
push
pop
and
push
xor
xchg
xor
inc
inc
sbb
fcomi
mul
out
cmp
mov
adc
hlt
into
sbb
popa
lods
test
xor
inc
jp
xor
add
test
test
movhps
xchg
cmp
lahf
inc
pop
sbb
test
jae
sub
cmp
inc
int3
push
mov
outsl
test
xor
cld
xchg
cmpb
arpl
insl
dec
sti
dec
xchg
insb
testl
mov
jnp
inc
and
flds
cmp
jge
adc
mov
inc
leave
imul
ja
push
test
xchg
xor
sti
rorb
out
dec
mov
sub
rolb
add
jg
adcb
sbb
dec
sub
leave
scas
or
dec
sbbb
cmp
adc
cli
roll
cli
loope
xchg
lret
dec
inc
jb
mov
rcll
das
and
shr
mov
push
jb
popf
movsb
mov
xchg
dec
push
adc
pushf
pop
xor
cltd
dec
out
int3
xchg
daa
push
xchg
mov
clc
int3
dec
in
pushf
inc
push
rol
pop
test
add
sub
subl
dec
dec
push
mov
sub
mov
cmp
xor
mov
sbb
inc
ja
xor
mov
std
movsl
dec
mov
mov
insl
les
push
stos
mov
push
mov
jne
inc
mul
push
hlt
xchg
add
push
fs
popa
movsb
and
jmp
jge
iret
sub
pop
data16
mov
jb
mov
xor
sbb
jb
ljmp
jb
aam
stos
inc
jle
stc
mov
into
mov
xchg
js
xchg
js
mov
dec
add
mov
aad
and
aam
pop
mov
inc
pop
repz
sub
leave
das
dec
pop
outsb
and
jne
fidivrl
pop
lds
mov
push
cmp
cmp
mov
aad
popa
vpcmpgtd
pop
xchg
test
sub
pop
or
mov
and
and
pushf
pop
int
push
movb
fcoms
push
repz
dec
jae
cbtw
inc
jmp
mov
dec
pop
jecxz
xchg
fcoms
add
cli
lock
dec
sbb
mov
fsubrl
movsb
cmp
xchg
loopne
and
movsb
out
fs
loope
xor
daa
pop
cmpsb
dec
jecxz
aaa
add
fwait
cld
xchg
repz
bound
mov
repnz
xchg
sbb
ljmp
ret
push
sahf
push
gs
jae
in
and
push
je
xchg
mov
jnp
gs
cli
pusha
mov
jns
push
or
lods
sbb
xor
xor
int3
jmp
aad
push
mov
xor
xchg
push
dec
dec
dec
mov
es
pop
push
fucomp
xor
test
xchg
sub
pop
cmpsl
inc
out
mov
fwait
aas
jno
push
xor
jl
ds
popf
cmp
jns
out
shl
adc
fstl
test
jg
stos
mov
outsb
mov
jno
stc
jb
mov
mov
push
jle
xchg
lods
mov
lcall
in
test
inc
xor
data16
fsubl
jmp
imul
and
mov
jp
cmpsl
dec
adc
sub
inc
lret
xchg
or
xchg
and
jb
shlb
cwtl
outsl
les
in
fldcw
mov
mov
loop
adc
cmp
cmp
jg
mov
lods
pop
je
ljmp
out
aaa
sub
inc
loop
daa
imul
cmp
and
fimull
mov
xchg
and
clc
scas
jg
jo
mov
pop
xor
nop
mov
xchg
mov
test
xchg
mov
test
addb
iret
dec
jo
daa
clc
into
push
imul
insl
cmp
jae
xor
and
cmp
adc
fucom
movb
pop
inc
clc
jo
mov
leave
mov
nop
mov
adc
cmp
push
cmc
lea
mov
dec
sub
and
enter
xor
cs
xchg
mov
sbb
xchg
mov
mov
mov
lods
cmp
adc
mov
nop
test
and
xchg
push
pop
mov
xchg
mov
imul
add
fistpll
xchg
sti
andb
jle
add
xchg
sbb
sbb
mov
add
mov
daa
sbb
push
xchg
xchg
mov
in
repnz
cmc
or
xchg
mov
mov
daa
push
ja
shlb
jle
mov
cmp
mov
dec
test
shl
jecxz
sbb
stos
ljmp
gs
stc
dec
mov
cmp
and
lahf
push
dec
pop
movsl
add
clc
daa
mov
jle
int3
out
popf
mov
dec
adc
stc
adc
sbb
xor
jmp
aad
scas
add
outsl
pop
call
sbb
inc
inc
add
aad
jbe
and
push
es
std
xor
add
out
scas
jl
adc
mov
add
pop
ret
adc
imul
lret
repnz
jbe
sbb
icebp
out
push
inc
call
in
mov
sub
sub
cmp
in
and
bound
out
in
lret
lahf
jo
sub
xor
or
or
call
clc
mov
test
cltd
sbb
testb
xchg
andl
aam
enter
dec
mov
stos
leave
inc
aad
ret
and
loop
or
jmp
push
lcall
hlt
sub
jp
inc
shlb
loopne
xchg
mov
fiaddl
stc
imul
sub
sub
lcall
ret
fxtract
aad
pop
mov
lods
dec
xchg
cmp
notl
js
jp
adc
ja
jae
pop
mov
stc
add
repz
pop
mov
call
xchg
dec
sti
test
add
aam
es
aad
sbb
push
jmp
into
loop
pushf
mov
insl
shll
lock
rolb
fidivrs
call
movsl
hlt
enter
pop
jne
mov
adc
insl
pop
call
sub
adc
sbb
fisubs
in
rep
mov
movsl
ds
sahf
ja
mov
pop
fcomps
xchg
call
push
outsl
leave
jae
cmp
xor
sub
push
dec
repz
fildl
mov
push
and
and
mov
and
cwtl
sbb
addr16
and
jo
je
aaa
dec
xchg
add
and
into
jne
enter
add
ljmpw
xor
cld
lcall
lock
shl
ds
and
cmpl
nop
add
sub
pop
dec
rcrl
push
pop
sbb
mov
cld
lds
lock
ret
mov
cwtl
rorb
inc
xchg
jmp
js
test
shlb
sub
dec
push
pop
loope
jno
cmpsl
ds
jbe
ds
adc
mov
add
orb
mov
jecxz
faddp
mov
popa
orb
daa
popf
and
scas
mov
pop
cmp
test
cmpl
out
idivl
jbe
test
ljmp
or
adc
insb
repnz
cmp
test
mov
fs
dec
test
xor
sbb
and
movsb
xor
and
in
movsb
mov
mov
jns
sub
std
push
popf
into
and
pop
mov
xchg
imul
shrl
inc
bound
push
lds
mov
cwtl
or
dec
shlb
mov
in
jae
aam
test
pop
push
daa
add
mov
mov
out
les
insl
lret
mov
nop
pop
das
clc
push
pop
pop
mov
push
or
dec
or
test
mov
jg
out
add
repz
cmp
pushl
flds
daa
mov
mov
mov
jnp
shr
fcompl
std
jbe
test
pop
jle
and
jbe
and
cli
test
mov
aad
das
cwtl
pop
push
adcb
je
leave
mov
pop
pop
dec
inc
inc
jb
hlt
mov
rolb
push
jmp
jp
scas
xor
mov
insb
push
add
pop
in
jl
fdivrl
jmp
xlat
scas
add
and
push
inc
ret
shrl
push
js,pt
nop
push
lret
popa
lods
in
inc
int
rorl
jne
fstpt
mov
faddl
out
mov
or
popf
cmpsl
sti
scas
shlb
es
push
stos
int
cmpsb
lods
sbb
push
in
mov
pop
inc
jmp
pop
arpl
lods
jge
xchg
out
sub
icebp
inc
lret
out
and
outsb
ja
sbb
adc
xchg
xor
shl
in
lret
pop
pop
pop
in
aad
maskmovq
testl
fbld
in
dec
mov
popa
and
mov
push
sti
mov
rolb
xor
and
mov
call
cmp
inc
inc
andl
aad
movsb
daa
test
push
and
arpl
xchg
dec
inc
jge
pop
pop
dec
mov
pop
stos
repz
insl
cmpsb
add
xchg
and
push
push
push
ret
sub
and
push
and
andb
or
int3
je
fisttps
insl
scas
std
add
test
xchg
stc
fmuls
outsl
push
mov
movsb
adc
pop
lods
lea
mov
movsl
jns
jle
rcrb
push
mov
enter
xchg
outsl
jb,pt
out
add
sbb
sub
jae
xchg
cmova
jnp
xor
sub
andb
hlt
test
jecxz
dec
pop
mov
xchg
add
insl
loop
pop
push
ret
and
push
scas
fisubl
cmpsb
leave
imul
popa
jl
mov
jg
mov
lcall
jp
fcmovb
dec
bound
inc
adc
push
pop
mov
jg
shll
cmpsb
xchg
mov
dec
push
imul
push
ds
stos
mov
rol
mov
jb
sub
xchg
fldcw
leave
imul
mov
inc
sub
pop
add
add
leave
nop
or
inc
jge
dec
ret
jle
jno
icebp
jmp
cmp
into
lock
out
add
lds
ret
adc
cmpsb
add
push
mov
xor
sahf
pop
xchg
ret
jnp
push
std
shrb
rorb
inc
cld
loope
lcall
pusha
add
mov
loopne
out
sbb
das
pushf
pushf
pushf
pop
inc
fstpt
jle
outsb
and
subl
pop
clc
hlt
fstl
loopne
sub
bound
pushf
andb
xor
push
push
sub
xor
into
into
pop
out
dec
bound
jo
addr16
sbb
arpl
push
ss
inc
stos
fs
jle
mov
xchg
sub
inc
xchg
pop
dec
push
mov
and
jno
mov
scas
js
pop
xor
sub
cmp
xchg
stc
xor
mov
dec
ds
ja
xchg
xor
loop
mov
outsl
lea
aaa
dec
test
jle
out
mov
mov
and
scas
stc
insl
insb
mov
push
lock
stos
arpl
insb
mov
cld
cwtl
je
clc
test
push
xlat
das
mov
cmpsl
cmpsb
test
cs
adc
adcb
adc
lcall
lock
lods
xlat
imul
jl
int
and
stos
xlat
mov
hlt
mov
xorb
orb
test
test
test
js
xlat
fdivl
outsb
movsb
nop
loopne
es
pop
cld
fidivrl
out
cmp
mov
and
dec
sbb
aam
inc
lods
xchg
mov
jno
jmp
sub
push
ljmp
ja
dec
pop
pop
daa
xchg
outsb
push
xlat
sbb
sub
es
xor
xchg
lock
and
pop
sbb
mov
enter
jl
sti
mov
cmpsb
sbb
jno
sbb
mov
and
stos
testb
lock
mov
enter
xchg
and
ljmp
dec
fists
sub
pop
xor
pop
and
mov
enter
dec
jmp
jmp
mov
pop
out
lds
rdmsr
dec
inc
mov
ret
push
shlb
dec
ret
inc
cmp
je
or
cld
pop
inc
mov
or
push
out
in
rcr
pop
xchg
aad
idivl
sub
mov
sub
inc
xor
imul
out
popa
lcall
hlt
ja
dec
add
sbb
dec
bound
jge
in
ret
sub
in
xor
bound
or
or
aaa
adc
and
mov
dec
call
add
out
stc
aaa
out
in
inc
push
push
jl
xlat
lret
sbb
dec
xchg
ljmp
stos
pushf
xor
sbb
daa
scas
ret
pop
pop
pop
or
lcall
scas
jno
pushf
loope
sti
jne
repnz
pop
mov
fstl
mov
movsl
adc
sub
popf
sub
aam
add
xor
out
xchg
repz
jge
lcall
in
nop
mov
and
or
sub
shl
jp
or
push
ret
popf
popa
mov
adc
pop
pop
cmp
mov
mov
in
in
jmp
jmp
dec
mov
adc
and
mov
repz
lret
fwait
shll
add
adc
or
xor
lcall
pushf
jae
adc
loop
or
xorl
pop
das
xor
mov
or
xchg
dec
adcl
pop
pop
pushf
mov
inc
jmp
inc
jp
adc
sahf
dec
repz
push
outsl
in
stos
mov
enter
xor
std
jmp
inc
and
mov
and
imull
cmp
dec
test
add
mov
cmp
lea
mov
jl
ret
or
push
lret
and
mov
xlat
lcall
adcl
imul
lock
dec
fwait
scas
in
faddl
lcall
dec
adc
add
fs
or
sbbb
dec
xor
outsb
mull
push
jecxz
push
scas
repnz
add
adc
rolb
lock
sti
scas
aam
adc
or
rol
fdivr
ljmp
adc
sbb
push
lds
mov
pop
fdivrl
and
leave
cmpsl
mov
stos
adc
sub
dec
pop
int3
scas
aam
cli
jae
pop
loope
cwtl
inc
es
adc
sahf
loope
out
out
sub
xor
lahf
aaa
mov
outsl
leave
mov
cwtl
icebp
jmp
test
movsl
mov
inc
mov
push
jecxz
jle
sbb
sub
push
mov
mov
inc
push
fadds
icebp
flds
push
inc
fidivrs
es
aad
out
push
jge
fwait
loop
outsb
dec
adc
xchg
jle
ret
test
ja
mov
popa
adc
daa
loope
lret
cmp
aam
in
fwait
pop
xchg
jle
sub
pusha
sub
pop
xchg
popf
adc
jbe
sub
jge
xchg
shlb
xchg
scas
adc
das
in
jb
jl
rclb
jle
lods
adc
push
loopne
pop
lcall
dec
push
out
mov
jae
push
pop
cmp
jmp
xchg
pop
dec
or
icebp
dec
or
clc
xchg
dec
lock
gs
sahf
mov
fcomps
xchg
stos
imul
imul
fs
sub
push
cmp
repz
sub
mov
les
push
jae
pop
push
or
dec
push
push
lcall
mov
mov
js
lds
lea
das
ret
xchg
jno
xor
hlt
mov
push
pop
pop
adc
cmp
pop
push
sub
movsb
jge
jne
add
pop
xor
es
idiv
jg
inc
scas
xchg
mov
ss
aas
shrl
add
pop
int
pop
mov
push
adc
scas
adc
cmpsl
sbb
jge
fdivp
sahf
int
lcall
loopne
jp
inc
pop
dec
or
pop
dec
push
mov
addb
pop
in
pop
push
sbbb
ljmp
shr
ja
pop
in
addr16
push
inc
fisttps
jle
jle
sbb
xor
adc
aaa
sbb
mov
lds
push
inc
xlat
repnz
ret
push
cmp
repz
scas
test
jl
scas
adc
jge
pop
call
jge
lret
in
gs
cli
inc
dec
test
ret
lret
pushw
iret
mov
fimuls
xchg
inc
enter
pop
push
js
xchg
out
enter
cld
push
adc
lcall
mov
mov
and
adc
ss
adc
inc
pop
movsb
pop
in
leave
xchg
loope
test
scas
pushf
insb
pop
push
fdivrl
lods
bound
es
adc
test
adc
leave
add
pop
arpl
inc
fwait
dec
int3
fdivrs
test
inc
inc
scas
outsb
mov
movsl
adc
in
dec
lods
push
dec
mov
in
xchg
daa
push
mov
xchg
mov
sub
pop
xor
or
jmp
fnstcw
push
outsb
mov
sub
mov
int3
imul
push
cmp
add
add
in
mov
add
out
into
mov
aaa
data16
fisttps
stos
lock
pop
cmp
stc
into
fcoms
jl
push
xchg
mov
mov
adc
ret
mov
sbb
pop
orl
dec
je
ljmp
cld
hlt
int3
scas
lods
push
dec
dec
and
lret
cwtl
adc
jmp
mov
mov
ret
pop
insb
repnz
sub
push
dec
push
mov
je
imul
pusha
push
jl
outsl
insb
call
popf
mov
mov
inc
lock
dec
push
insl
adc
or
add
scas
jae
pop
aam
or
sbb
mov
sub
int
repz
jmp
into
cli
dec
add
adcl
add
pop
or
add
inc
mov
jb
fidivrl
xchg
ret
jae
xchg
ds
push
lret
enter
push
jnp
in
leave
cmp
mov
subl
dec
mov
mov
outsl
xchg
fstps
jge
lret
fistps
arpl
jp
popa
aam
call
sbb
cmp
imul
mov
jae
cmpsb
sbb
sub
inc
push
daa
mov
test
xor
test
insl
test
push
add
mov
xchg
push
lods
in
sarb
sahf
cs
aaa
cmpsl
int
jp
jl
iret
jb
rcr
scas
cmc
rcrl
fdivrs
jle
gs
cmpsl
inc
test
or
jle
testb
inc
push
xchg
jge
fstps
jb
lds
out
subb
mov
mov
adc
cmp
inc
movsl
inc
mov
test
sbb
test
mov
shl
cmp
fwait
cmpsw
and
aas
pop
and
or
negb
mov
mov
test
ds
dec
pop
mov
pop
sub
fs
fisubrl
push
ds
cmp
xlat
fldl
jo
mov
in
std
xchg
aam
adc
and
xor
jb
pop
fs
std
cmp
pop
loopne
add
mov
cs
iret
mov
sub
mov
repz
mov
ljmp
xchg
js
ss
xchg
xchg
loopne
fisubrl
lock
arpl
ret
lret
lods
test
sti
and
cltd
shlb
dec
mov
sets
addr16
and
jge
xchg
cmpsl
xchg
dec
xor
mov
ds
in
mov
and
xchg
fstpt
movsl
ds
pop
hlt
xor
aam
pop
sub
jmp
push
mov
enter
in
ret
icebp
rol
push
dec
xchg
pop
cmp
push
or
mov
stc
xchg
fcom
adcl
inc
rcl
cwtl
fcmovnb
lahf
lret
jg
dec
add
lods
add
pop
mov
dec
out
ret
cmp
push
or
xlat
outsl
pop
sbb
pusha
scas
xor
pop
mov
gs
shrl
scas
jl
fwait
lea
leave
pop
ds
push
test
movsb
cmp
add
pop
add
jmp
fstl
xchg
out
and
insb
gs
test
adcl
xor
jb
outsb
imul
mov
aaa
adc
test
xor
stc
adc
mov
outsb
pop
outsb
adc
lods
dec
icebp
and
les
mov
xchg
add
pop
sub
ret
ret
test
popl
xor
int3
xchg
call
insb
popa
inc
inc
inc
add
jo
cli
inc
dec
stos
mov
dec
fwait
xor
mov
fwait
shll
inc
scas
outsb
sbb
sbbb
nop
mov
xor
ret
test
shl
dec
aas
mov
in
sbb
int3
cs
imul
lea
cmovg
es
cmpsb
sbb
scas
jecxz
das
sbb
adc
cli
popf
push
pop
packssdw
pop
jmp
pop
loopne
dec
sbbb
adc
dec
call
ret
shlb
cmp
sarb
add
sbb
pslld
stos
aad
shlb
faddp
sub
adc
setl
jmp
xchg
push
jge
ljmp
pop
test
cmc
shr
scas
push
scas
pop
shl
lea
inc
xor
imul
rcll
bnd
lret
lods
dec
lock
stc
popa
leave
push
mov
aam
movsl
sbb
xchg
xchg
sbb
mov
ret
mov
xchg
and
les
xchg
in
aas
lret
hlt
dec
aad
inc
jae
fwait
sbb
xor
stos
inc
jo
fs
or
mov
xchg
sbb
mov
les
cmc
pop
sahf
inc
out
jo
or
fsts
fdivs
xor
mov
aam
shr
dec
pop
insl
dec
push
add
xchg
test
scas
ret
pop
fdivs
pop
sbb
scas
ret
mov
inc
aas
xchg
aam
int3
popf
insl
mov
ret
dec
inc
push
enter
negb
dec
aaa
leave
insl
and
mov
jge
pop
call
push
xor
fisttps
and
pop
mov
fldenv
lds
imul
cmp
push
ret
mov
outsl
or
add
adc
test
shlb
icebp
pop
popa
fistps
roll
dec
sbb
pop
mov
xor
mov
in
pop
cmp
das
cwtl
popf
inc
cltd
ret
jl
jnp
dec
mov
jle
cmpsl
shlb
arpl
clc
push
inc
or
rolb
jge
les
notl
mov
jmp
aad
cmp
test
orb
cld
xchg
hlt
or
jge
cs
sbb
jmp
mov
ret
inc
dec
dec
cs
or
push
leave
ja
cwtl
inc
or
dec
stos
sub
or
xchg
jae
adc
push
mov
sub
dec
scas
popa
pop
mov
mov
out
loope
sub
lods
push
cmpsb
cmc
sbb
test
imul
push
jge
fisubrl
insl
mov
mov
mov
sbb
push
sbb
pushf
cmpsl
call
daa
insb
ret
pop
sahf
jecxz
jb
stos
cltd
push
push
or
push
dec
aad
xor
sub
aaa
sarb
mov
sub
xchg
or
push
test
pop
ja
shl
dec
nop
imul
subl
or
jle
fnstsw
je
cmpb
arpl
in
and
lret
imul
and
push
xor
cmp
daa
adc
xchg
adc
mov
cmp
sbb
nop
jmp
sbb
dec
xchg
xlat
push
cs
fisubs
sbb
jnp
xchg
jne
addr16
sbbl
cmpsb
xchg
popa
mov
jnp
mov
xchg
xlat
cld
ret
orl
push
push
pop
pop
nop
test
sub
push
push
out
lods
fs
xor
fcompl
jns
mov
repnz
mov
and
sub
rcrb
pop
lret
and
jnp
int3
push
push
mov
ljmp
adc
dec
ret
xchg
or
mov
and
mov
sub
mov
inc
inc
dec
dec
dec
call
gs
das
out
adc
arpl
mov
ret
popf
stc
pop
or
adc
hlt
pop
inc
lock
iret
stos
push
mov
add
sub
adc
xor
sarl
pop
push
sub
int3
jp
jno
lea
sub
lods
push
sbb
fwait
shlb
dec
out
mov
aad
sub
lock
or
mov
dec
icebp
xlat
mov
jns
out
clc
lea
pop
dec
test
xor
or
cld
mov
inc
cmp
cmpsl
dec
xor
mov
mov
sbb
bound
push
cmp
cmp
icebp
push
leave
loope
in
push
pop
pop
sahf
xor
xor
fs
inc
cmp
sbb
fnsave
and
or
std
and
sbb
outsl
jno
mov
add
and
inc
inc
dec
inc
push
imul
ret
dec
fdiv
mov
int3
pushf
sahf
inc
pop
icebp
iret
std
arpl
push
insb
mov
jg
mov
loopne
out
pop
sub
fstl
call
ljmp
out
mov
adc
push
jae
stos
addr16
lods
pop
pop
daa
icebp
aaa
das
cld
in
pusha
pusha
push
cmp
loope
sbb
dec
xchg
imul
sbb
cwtl
dec
lcall
sbb
push
lods
mov
into
pushf
lods
mov
lods
andl
push
mov
clc
or
cli
mov
mov
adc
and
add
imul
mov
test
dec
fs
add
test
pop
jle
fldcw
pushf
cmp
scas
cmpsb
and
xor
leave
jo
pop
xchg
mov
lret
fsubr
fwait
popa
stos
pop
jp
jmp
mov
mov
out
or
sub
jo
push
xchg
xor
jge
cmc
sub
lret
jo
pushf
dec
dec
jbe
sub
inc
repnz
das
push
xor
jge
sbb
dec
daa
inc
xorl
dec
jae
cmp
cmp
push
mov
and
shl
fnstenv
mov
lea
mov
adc
jmp
mov
mov
cmpsb
xchg
add
pop
rcrl
and
shll
or
iret
stc
inc
jne
je
in
insb
ja
sbb
dec
mov
add
push
sbb
addr16
pop
dec
test
fidivrl
subl
adc
jle
and
pop
sbb
sbb
push
inc
xor
add
gs
xchg
outsl
mov
inc
cwtl
jg
dec
or
sub
loope
mov
inc
fcomp
hlt
aas
test
stc
xchg
xlat
and
sbb
cmp
inc
jno
xor
add
pop
cwtl
jb
shlb
push
sti
sbb
mov
mov
pop
movb
xchg
jnp
jecxz
sub
int3
imul
in
or
xchg
mov
pop
push
inc
int
push
jno
ret
or
addr16
ljmp
cmp
test
sub
out
ror
xchg
xchg
lods
mov
dec
arpl
in
xchg
pop
cmovle
jno
cmpsb
lret
sti
lahf
fistpll
lret
mov
les
adc
jo
adc
repz
flds
movsl
mov
inc
push
xchg
popa
sahf
adc
mov
mov
lret
inc
icebp
mov
lret
dec
int3
out
and
lds
bound
leave
aaa
push
into
add
outsb
aad
cli
xchg
mov
xor
xchg
test
cwtl
or
outsb
xchg
add
dec
clc
test
sub
xor
scas
insb
xchg
repz
inc
imul
mov
jnp
add
mov
cwtl
pop
push
mov
leave
push
mov
andb
inc
mov
ljmp
xchg
sbb
sarb
mov
add
push
nop
ret
mov
loop
mov
add
fs
mov
imul
mov
aad
daa
in
dec
mov
sub
adc
ret
jb
lods
int3
lcall
push
push
and
pop
dec
inc
jp
insb
shll
test
aas
and
xchg
xchg
pop
in
fninit
scas
xchg
cli
out
adcb
iret
loopne
out
adc
push
loope
xchg
stc
pop
mov
jge
mov
pushf
ret
jp
push
outsb
dec
and
and
pushl
inc
cmpsl
aaa
or
enter
jb
pop
xor
outsl
shl
stos
lret
cmpsb
inc
pop
dec
ja
lods
idivb
dec
bound
loope
mov
ljmp
mov
pushf
push
inc
sbbb
test
pop
xor
xchg
push
ljmp
lret
stos
dec
frstor
pusha
fucom
push
cmp
fisttpll
jmp
or
pop
and
pop
xchg
fwait
push
mov
lods
mov
pop
dec
inc
stos
and
cmp
mov
int3
outsl
cwtl
mov
jge
insb
mov
adc
xor
sub
pop
mov
push
stos
jle
xchg
sbb
out
or
daa
xor
orb
in
push
cmp
sub
lret
addr16
aaa
pushf
jb
adc
repz
stos
data16
or
ret
pop
sub
shl
ficompl
push
insb
mov
call
inc
jne
jg
call
ja
mov
arpl
fcoms
sub
repnz
and
sbb
inc
ret
test
sbb
hlt
fimull
sub
fwait
icebp
jg
xchg
cmp
xor
push
ret
mov
jle
sub
xchg
data16
cli
out
lret
int3
pop
jno
repz
adc
pop
in
xchg
fsubrs
cmpsl
enter
push
sbb
mov
mov
adcl
inc
scas
mov
xor
mov
stos
fldcw
and
nop
arpl
xchg
pusha
out
popf
xchg
outsl
sub
out
xorl
pop
pop
pop
mov
sbb
adc
adc
icebp
or
xchg
loope
xchg
lcall
sbb
fwait
add
push
es
ljmp
scas
repz
dec
lods
pop
mov
jo
ret
adc
xor
sub
cmp
push
pop
gs
mov
fmull
rol
cmp
test
es
xor
movsb
xchg
arpl
outsb
sub
in
xlat
fsts
call
sbb
lret
mov
pop
adc
jnp
xor
lret
inc
xchg
in
test
xor
imul
push
xor
addr16
mov
ja
push
lea
dec
aam
pusha
mov
xor
roll
jp
test
dec
mov
push
movsb
mov
xlat
fmuls
jp
jl
call
and
and
or
pop
test
sbb
jno
mov
sbb
cmp
fcomp
xor
inc
jg
test
mov
arpl
movsb
pop
loope
clc
int
sbb
mov
in
mov
add
sub
test
mov
jecxz
test
aad
sbb
cmp
gs
test
repz
arpl
movsb
mov
push
mov
popf
sahf
sub
in
es
lock
pop
push
in
jne
and
mov
sub
mov
popf
xor
and
cmp
dec
mov
adc
sbb
jne
enter
sbb
dec
fadd
mov
and
call
int3
mov
pop
out
jecxz
lcall
testl
sub
aaa
out
jb
mov
int3
add
int
cltd
dec
cmp
jb
mov
xchg
in
add
adc
mov
push
pop
dec
jbe
dec
pop
xor
cmpsl
divb
jg
imul
push
mov
adc
stos
adc
push
nop
sbb
jge
fldcw
xor
test
in
add
subb
mov
cs
fimuls
and
cmp
pop
in
out
aaa
lret
dec
pop
negb
dec
adc
cwtl
pop
mov
pop
push
ljmp
leave
push
sbb
or
mov
imul
dec
push
xor
arpl
and
out
rolb
sbb
adc
rolb
outsl
or
daa
push
xchg
fimuls
or
xlat
mov
mov
sbbl
pop
inc
iret
xchg
mov
xchg
ds
fabs
pop
shll
sar
test
pop
outsl
repnz
mov
shrb
dec
xor
mov
pushf
mov
xchg
nop
push
xlat
loope
fs
sbb
mov
xlat
mov
sbb
sbb
fnstenv
iret
jns
orb
sti
lock
scas
push
cmpsl
and
mov
xor
pop
sti
orb
push
mov
js
orps
push
xor
push
clc
push
lcall
daa
jle,pt
xchg
sbb
cwtl
adc
lcall
lock
sub
cmp
jae
pushf
cli
push
imul
sub
inc
mov
orb
icebp
jno
mov
cmp
es
push
mov
loopne
dec
into
inc
ds
push
xchg
xchg
aaa
add
fstl
jp
sahf
and
iret
inc
xchg
and
pop
cmp
das
aad
cmp
sarb
pop
shrb
jb
add
in
insl
and
mov
push
dec
sub
push
repnz
int
add
xchg
gs
sbb
mov
adc
lret
xlat
insb
cmp
jns
inc
int3
inc
es
or
mov
xor
iret
xlat
push
and
js
pop
sti
pusha
loope
adc
test
ret
jb
mov
or
aaa
mov
cmp
lea
xor
xor
test
mov
inc
dec
insb
or
xchg
xchg
adc
or
sub
dec
add
xchg
jge
cmp
js
cs
int
xlat
imul
call
in
sub
rorb
ds
dec
pop
adc
jmp
lods
dec
adc
sub
xchg
adc
pop
lcall
mov
mov
jmp
hlt
fcompl
sbbl
rolb
testb
lret
popa
cmp
dec
adcb
jle
imul
fisubl
cmpsl
aam
and
or
fcoml
add
rcrb
les
notb
mov
adc
push
pop
and
xchg
ds
scas
not
sub
push
push
xchg
mov
sbb
repz
mov
pushf
and
cmp
jp
sbb
test
adc
ja
or
daa
in
sbb
stos
jmp
jno
out
or
test
imull
add
sbbl
xchg
cmp
xchg
pop
sub
mov
fldl
dec
sahf
pop
and
mov
mov
push
pop
xchg
shrb
sbb
stos
fisttpll
cmpsl
cmp
nop
popa
sahf
mov
lret
push
ja
inc
aad
outsl
icebp
popf
hlt
testb
mov
cmp
cmp
mov
sbb
and
out
mov
pop
das
pushf
sarl
adc
ljmp
mov
xchg
sbb
sbb
mov
jo
push
js
mov
loopne
cmpsb
lret
xchg
sbb
sub
dec
sarl
cmp
jne
cli
in
adcl
mov
lock
xchg
pop
call
adc
cmp
das
mov
adc
sbb
sbb
imul
lods
addr16
les
das
ds
icebp
pushf
pop
cld
add
inc
adc
mov
push
and
adc
scas
dec
push
and
iret
sbb
out
mov
cs
xlat
ret
popf
lods
pop
or
xrelease
ss
jle
dec
cmp
push
sub
in
or
push
outsl
ljmp
iret
xor
jnp
mov
or
adc
mov
movsb
sub
and
pop
repz
pop
addb
nop
mov
ljmp
in
lods
test
aaa
into
push
inc
notb
and
loope
lea
cs
mov
xchg
aam
jle
push
dec
daa
adc
mov
rcrb
gs
shl
mov
push
xchg
pop
and
pop
shll
adc
sbb
testl
inc
push
fsts
sub
xchg
push
gs
out
ficomps
or
popf
push
fmull
push
pusha
sbb
fiaddl
fwait
jb
out
push
fstpt
aad
dec
out
bound
sbb
cmp
cmpsb
in
sub
lds
push
mov
lods
push
test
push
out
int3
jno
sti
mov
pop
push
gs
sub
xchg
and
push
lds
pop
dec
dec
inc
jb
mov
imul
sbb
and
cmp
mov
sub
cmp
loope
daa
pop
outsl
or
or
fistl
test
adcb
lock
stos
mov
mov
inc
push
outsl
and
pop
cmc
pushf
ret
pop
out
pop
dec
xchg
insb
xchg
stos
jo
sbb
adc
push
daa
sub
dec
push
pop
stc
pop
xor
into
adc
je
dec
aad
clc
xchg
sbb
sub
fldl
lea
cwtl
test
sub
xor
mov
fwait
xor
push
add
in
test
test
xor
mov
sub
inc
fisubl
test
add
xor
ja
cmpsl
std
das
sbbb
xor
and
in
sub
sub
movsb
dec
call
jnp
pop
cwtl
mov
addr16
xor
push
mov
dec
loopne
mov
and
aaa
mov
out
jne
jle
add
or
int
imul
inc
je
stos
fisubrl
or
jg
or
and
enter
enter
jge
notb
cs
shrl
aad
jae
js
roll
xchg
shll
lcall
sub
jno
and
popa
sbb
xchg
push
xor
xchg
gs
test
lret
nop
daa
push
and
adc
xchg
push
sarb
push
loop
dec
xor
push
fwait
test
xchg
les
out
pop
sub
test
sbb
data16
mov
je
mov
mov
pop
daa
inc
mov
ds
outsb
cmp
cmp
gs
dec
jle
outsl
mov
cs
cmp
pop
push
lods
enterw
ret
push
mov
or
jmp
lret
inc
xchg
imul
sti
xchg
xor
xchg
and
mov
jg
stc
enter
xor
inc
cli
dec
jp
mov
cmp
pop
aam
xor
mov
daa
sub
jo
dec
lods
mov
dec
xor
pop
add
xor
roll
jle
pop
sbbb
xor
inc
ret
dec
repnz
lahf
push
test
or
dec
push
or
inc
add
iret
xor
test
push
inc
and
sarl
xchg
push
cmpsl
lret
cltd
inc
dec
inc
pop
add
scas
mov
dec
bound
pop
lock
cmpsl
insb
dec
imul
ja
mov
cmp
lcall
imul
jb
mov
aam
cld
jb
adc
sbb
cmp
cltd
movsb
scas
andl
add
cmp
dec
notl
call
daa
pop
pop
and
movsl
shrb
cwtl
dec
test
inc
lods
pop
xor
mov
mov
add
out
stc
daa
jecxz
add
test
rclb
jg
stos
jp
stc
mov
mov
pop
test
dec
scas
ds
jo
rcrl
cmp
out
xlat
and
cld
mov
repnz
push
cltd
les
mov
imul
icebp
mov
add
lods
dec
jle
jae
je
loop
jle
sbb
wrmsr
int3
je
mov
dec
adc
mov
xchg
stos
cmp
mov
dec
lds
out
jne
fmull
pop
pop
cs
push
ljmp
jb
mov
addr16
dec
mov
dec
lret
and
sbb
sti
push
stos
mov
out
and
and
sub
in
cld
test
jns
sub
pop
jmp
mov
jg
mov
arpl
subl
jmp
aas
xchg
insl
outsb
mov
mov
ret
pushf
cltd
int
jmp
scas
xlat
and
and
nop
mov
fs
pop
daa
add
ss
lret
pushf
xchg
xor
popa
sub
xchg
dec
mov
fwait
or
scas
pushl
mov
imul
and
jge
aaa
out
gs
pushw
pushf
inc
fiaddl
popf
jg
dec
ljmp
and
pop
mov
sbb
xchg
lods
popa
mov
sbb
jecxz
outsl
mov
mov
sub
andl
enter
stos
pop
jle
sub
or
pop
cmpsb
test
inc
sbb
out
mov
fimull
mov
dec
insl
fiaddl
js
push
jecxz
inc
faddp
comiss
in
stos
and
rcll
push
mov
add
loopne
adc
cmc
fcomp
xor
out
add
sbb
lds
gs
in
xchg
stos
jg
and
push
sbbl
icebp
call
jg
dec
das
and
aas
jecxz
mov
or
dec
jecxz
addr16
and
andnps
mov
leave
sbb
aad
loope
cmpb
inc
popa
je
test
popf
mov
cmpsb
mov
dec
out
leave
fisubs
sahf
in
ja
call
outsb
pushf
popf
cmp
mov
add
inc
adc
insl
ds
rcl
xchg
jg
inc
jbe
nop
imul
dec
repz
scas
fdivl
push
ljmp
sub
sub
inc
add
fs
or
jnp
and
mov
outsl
fs
or
ja
sbb
adc
movsb
jmp
mov
adc
jmp
mov
ss
inc
inc
stos
push
shrb
mov
add
push
shlb
sub
push
add
adc
stos
rorl
in
add
cli
popf
xor
cli
mov
add
aam
jb
in
scas
jne
lods
mov
push
imul
lods
jns
nop
ja
cmp
sub
push
xor
push
scas
loop
les
mov
push
xor
cmp
push
inc
in
aad
das
test
or
jnp
sbb
mov
outsl
fs
or
ja
sbb
adc
imul
cmp
ljmp
sub
xchg
inc
stos
push
shrb
fcoms
push
shlb
sub
push
add
adc
outsl
rorl
in
add
cmp
push
stos
adc
add
in
mov
xchg
test
pop
and
dec
inc
mov
push
sub
push
xor
push
scas
loop
les
mov
push
xor
cmp
push
icebp
jmp
pop
das
test
or
and
rorl
test
push
fbld
mov
mov
push
ror
lret
adc
xor
xlat
test
sbb
icebp
sbb
into
push
sbb
pop
push
push
pop
insl
jecxz
pop
mov
and
je
nop
push
pop
imul
pop
repnz
sbb
pop
or
add
xor
jmp
jae
push
xchg
push
fadd
add
ljmp
xlat
jl
lret
push
jl
imul
fisubs
or
pop
icebp
test
add
lds
hlt
std
cmp
push
or
pop
popf
dec
fs
sbb
pop
sub
dec
ret
sub
scas
push
xchg
fwait
inc
dec
mov
or
xchg
sbb
xor
shrl
sbb
push
inc
pop
mov
push
xor
data16
cmp
popa
mov
xchg
ret
xor
mov
cmp
daa
inc
xchg
sti
xchg
xchg
add
in
cs
push
bound
inc
pminsw
jnp
movsl
imul
pop
loop
mov
xor
sbb
loopne
cwtl
dec
lahf
xchg
gs
adcb
add
fs
dec
xlat
mov
mov
shl
test
and
pop
adc
cli
das
sbb
jge
xchg
or
pusha
inc
in
xchg
icebp
out
jno
test
repz
or
mov
repnz
enter
xlat
lods
mov
cs
mov
or
add
inc
imulb
mov
lods
pop
icebp
cmp
aam
ret
insb
or
mov
sbb
xlat
rolb
add
sahf
sbb
add
test
add
push
xchg
lea
or
out
push
and
iret
aaa
sbb
xchg
xor
xor
cmpsb
mov
pop
push
iret
cmp
dec
xchg
adc
push
repnz
push
mov
cli
ljmp
push
les
push
xchg
out
push
sub
scas
cmp
in
sahf
cmp
pushf
data16
sti
or
add
lods
rcll
jg
push
or
xor
in
movsl
sub
pop
jb
stc
in
lods
dec
int
mov
aaa
mov
xchg
out
out
dec
adc
sahf
js
sbb
add
leave
cmp
addr16
xor
insl
hlt
or
xlat
adc
scas
stos
sbb
inc
nop
nopl
inc
jecxz
mov
loope
mov
cli
dec
addr16
xlat
aam
jmp
cli
pusha
xchg
mov
fldenv
inc
dec
lods
aaa
insl
xor
or
test
sahf
lods
call
dec
pop
jo
mov
in
push
cmp
sarl
sbb
cmp
push
dec
mov
fidivrs
lea
dec
pop
cli
add
jp
lods
stos
and
cmp
push
adc
xchg
mov
fcmovbe
ret
fdivrl
arpl
xor
xchg
sbb
insl
adc
dec
das
push
jo
jmp
and
mov
xchg
push
fstl
xchg
lret
fldenv
call
testb
jmp
mov
out
add
or
and
inc
jb
sub
std
cmp
push
or
mov
fistl
add
imul
das
xorb
enter
fcomip
jl
jmp
push
inc
mov
mov
push
mov
mov
inc
push
dec
jno
pop
mov
adc
push
rcll
cmpsl
adc
cmc
jb
cmp
jge
mov
rol
out
fnstcw
jecxz
lcall
aas
call
into
lods
pop
hlt
xorb
repnz
mov
pop
ss
xor
push
fidivrs
nop
dec
in
cmp
sbb
stos
cs
bound
and
sbb
adc
sbb
sti
pop
cwtl
ffreep
popa
out
xlat
pop
xor
sub
scas
jae
imul
xchg
sti
stos
cmp
or
mov
fisttpl
jbe
hlt
mov
pusha
mov
pop
push
scas
jo
inc
pop
xchg
mov
or
js
or
adc
push
inc
adc
mov
stos
addb
cmpb
sub
xor
xchg
movsb
sahf
adc
inc
mov
xchg
cmpsl
leave
mov
xchg
movsl
aaa
cmp
test
mov
sbb
addr16
sbb
add
xor
mov
xor
mov
fnsave
jne
pop
rol
adcb
pop
push
sbb
out
inc
out
push
cs
sahf
push
arpl
insb
pop
jg
adc
and
sbb
push
adc
sbb
push
insb
cmp
xor
push
mov
push
mov
add
cmp
rcll
repnz
xchg
lret
mov
jecxz
sub
lcall
fsts
fisttpll
jnp
test
call
ds
mov
xchg
mov
push
scas
mov
iret
add
lret
fisubs
mov
jmp
sbb
js
xchg
nop
rcll
xchg
inc
pusha
aas
xchg
movsl
bound
or
daa
push
cwtl
stc
sub
pop
sub
pop
inc
dec
subl
push
cli
test
pop
ss
xchg
iret
js
fidivrs
sub
je
xor
jge
rcr
inc
shlb
lds
xchg
ret
inc
test
jns
xchg
sbb
dec
gs
push
dec
outsl
aas
and
sub
mov
pop
popa
lea
out
stos
dec
push
outsl
fildll
push
and
mov
cmp
dec
dec
fdivr
fisttpll
mov
ja
pop
pop
dec
int
scas
add
cwtl
xor
jecxz
ss
imul
pop
pop
pushf
push
or
stos
cmp
mov
cmp
adc
jae
repnz
movb
les
filds
mov
inc
lds
sbb
push
repz
dec
adc
gs
test
xor
mov
les
lock
mov
xchg
pop
ljmp
pop
push
out
cld
js
aam
enter
pusha
push
adc
mov
xor
sub
cmp
push
mov
pop
push
adc
lock
and
add
and
pop
dec
cmp
or
jle
fidivrl
fsubl
aas
jecxz
outsb
push
jge
pop
jmp
push
jno
aaa
nop
shll
sbbb
jnp
or
daa
or
in
mov
popa
movl
add
or
push
push
syscall
xor
sub
mov
out
out
je
ret
pop
loop
loopne
sti
lret
cmp
jne
std
adc
fidivrl
jae
std
xchg
cmp
mov
mov
inc
jb
dec
inc
js
push
std
jg
mov
cmp
daa
addr16
mov
xchg
mov
fistpl
mov
std
lock
xor
in
enter
cmp
mov
lret
nop
pop
mov
push
decl
in
adc
fstl
push
add
xorl
psubw
xchg
filds
push
dec
fdivrs
inc
cmp
and
inc
std
imul
push
mov
cmp
cli
movsl
cmp
dec
cmp
lea
loop
cmpsl
fwait
out
add
sub
mov
scas
xchg
out
xchg
xor
in
push
pop
ret
mov
mov
mov
hlt
jns
leave
stc
push
push
lret
int3
loop
mov
sbb
inc
xchg
pop
loop
sarl
cs
stos
push
inc
dec
pop
jg
scas
push
push
aas
jl
mov
sbb
stos
mov
push
orb
into
jp
mov
mov
xchg
jo
jle
sub
fdivrs
in
sbb
ret
xchg
mov
imul
lods
subl
shrb
rorb
push
nop
sub
shlb
sub
mov
cld
mov
mov
sbbb
rolb
cmp
testb
sub
call
jo
xchg
bnd
lcall
and
add
rorl
lock
es
scas
push
sbb
test
fwait
aas
call
cmp
mov
dec
clc
fsubrl
inc
pop
cwtl
mov
add
adc
mov
int3
js
push
stos
cli
jns
stos
pop
inc
mov
pop
es
mov
dec
faddl
mov
sbb
int
xchg
cmp
xorl
cmp
pop
les
call
pop
mov
and
cmp
dec
push
jmp
insb
subl
inc
cmp
mov
bound
fucomip
mov
pop
xlat
mov
xchg
xchg
xchg
pop
mov
mov
adc
mov
icebp
fsts
xchg
test
repz
mov
dec
or
jle
adc
icebp
jnp
mov
stc
or
and
xor
inc
lock
je
in
pop
icebp
cmpsl
ret
mov
shlb
out
jns
daa
mov
mov
pop
or
fisubrl
jge
mov
iret
sbb
jae
dec
sub
nop
xor
pushf
pop
fldenv
inc
iret
or
daa
cmp
addr16
sub
xor
jb
and
adc
dec
ds
iret
jb
ret
dec
adc
lds
jge
ficoml
xchg
aam
pop
xchg
sbb
push
andl
sbb
cmpsl
or
outsl
call
inc
jbe
jnp
hlt
sub
mov
and
jns
xor
cmpsl
test
pop
xor
fwait
xor
xor
mov
dec
test
push
rorl
lahf
mov
mov
jl
daa
mov
outsl
jb
xchg
enter
push
xor
mov
push
jne
pop
push
add
adc
ljmp
loop
or
mov
inc
xor
es
fs
pop
cltd
lods
jge
imul
loop
dec
imul
dec
arpl
mov
mov
loopne
push
push
inc
cmp
fcmovnb
dec
cmp
repz
sub
mov
lret
cld
mov
stos
ret
scas
insb
add
sti
xchg
adc
dec
mov
xlat
test
push
xchg
mov
sar
xchg
in
mov
xchg
in
aad
or
insb
aas
xchg
aam
pop
jge
xchg
stos
and
inc
mov
add
adc
repz
add
into
stos
xor
out
popf
push
mov
insb
mov
cmpsb
pushf
and
mov
pop
adc
arpl
and
testl
add
sub
xorl
aam
jg
cmc
mov
pop
shrb
rolb
shll
cmp
jmp
inc
out
cltd
mov
add
int3
jne
test
xor
xchg
cmp
aas
int3
lea
fmuls
sahf
mov
pop
sub
push
into
mov
and
fcoms
adc
mov
dec
sha256rnds2
jne
add
jg
xor
idivl
add
and
test
inc
lret
mov
pop
jg
cmp
mulb
sbb
sub
lret
pop
addr16
stc
pop
fisttpl
xchg
in
add
imul
mov
in
jo
xorl
mov
push
and
xor
sub
pop
rclb
xor
cmpb
lcall
mov
negl
lds
mov
iret
xlat
divl
dec
jne
pop
cs
dec
push
dec
mov
fsubs
lods
xor
mov
jle
cmp
dec
js
jb
orl
mov
pop
jno
testl
dec
push
add
insl
pop
xor
fsubs
lods
dec
lret
lret
push
mov
xor
negb
push
jmp
sbb
sub
outsl
btc
hlt
xchg
sub
mov
mov
push
mov
push
mov
imul
into
aaa
fnstcw
lret
inc
push
cld
jbe
jno
addr16
sub
cmp
push
xor
popa
call
inc
stos
gs
mov
mov
mov
fnstenv
iret
flds
fwait
divb
inc
enter
add
shlb
test
das
or
and
mov
adc
sub
pop
jle
jbe
add
mov
sub
add
in
es
pop
cmp
and
popf
cmpsb
jmp
aam
jae
enter
or
push
ret
lds
sub
scas
mov
pop
mov
dec
mov
and
cmpsl
scas
xchg
fdiv
or
icebp
in
imul
lret
adc
cmpsb
mov
pop
les
xchg
mov
ret
dec
test
jle
call
inc
les
ret
dec
inc
dec
or
xlat
or
daa
sub
adc
out
mov
dec
inc
mov
cwtl
cld
xor
adc
cmpsb
fcmovnb
mov
arpl
jp
push
hlt
sbb
mov
lods
cmc
cltd
sbb
popf
xor
dec
cmc
or
add
movsl
fwait
cmp
pop
jbe
stc
stos
sub
sub
or
push
lods
icebp
lahf
imul
pop
mov
jns
jle
loope
xchg
jae
sbb
dec
std
insb
mov
pop
mov
insl
enter
or
pop
std
push
push
pop
cmp
push
pop
sub
jns
daa
mov
arpl
jge
jmp
lahf
and
mov
xchg
jae
pop
jo
and
pop
adc
lods
inc
dec
cmp
cmpsb
imulb
enter
mov
adc
cwtl
inc
nop
cwtl
fists
insb
xchg
jne
cmp
pop
xlat
insb
loope
cs
nop
scas
popa
fs
push
jmp
fsubrs
add
cmpsb
adc
sbb
outsb
sub
or
jecxz
jmp
xchg
sbb
jp
dec
pop
ret
in
lret
test
out
mov
int3
arpl
push
pop
in
mov
push
invd
dec
sub
out
stos
pop
jbe
cmc
adc
sbb
nop
cmp
cs
mov
test
sbb
in
add
repz
pop
mov
cmp
pop
lds
or
es
dec
call
mov
shrl
lcall
fstps
test
or
xchg
cli
and
mov
int
mov
fsts
faddl
adc
ret
mov
je
inc
pusha
leave
int3
sbb
sahf
xlat
in
adc
or
insl
sub
mov
fs
sarl
mov
test
and
repz
sbbb
xchg
push
outsl
imul
mov
push
xlat
mov
gs
mov
sub
and
cmp
sub
sbb
repnz
and
and
pop
sti
addb
lods
cmpsl
jb
mov
repnz
xor
test
rolb
and
lcall
std
repnz
stos
pop
out
dec
std
stos
xor
fldenv
sub
imul
mov
movsb
inc
xchg
jecxz
pushf
int
lcall
stos
ds
shlb
fsts
lcall
nop
push
inc
dec
push
stos
sti
mov
sbb
dec
test
mov
lea
icebp
pop
imul
sbb
or
aam
decl
push
mov
arpl
neg
xor
test
lret
sub
xchg
sub
jne
sub
lock
xlat
lret
sti
or
pushf
out
dec
lahf
xor
fists
ret
jp
inc
idivl
cmp
aad
je
in
rcll
lods
inc
in
popa
cmp
insl
mov
adc
movsl
and
pop
sub
adc
aad
mov
loop
jp
in
add
xchg
mov
jge
mov
cwtl
pop
inc
movsb
push
inc
movsl
push
into
clc
mov
mov
push
jmp
jnp
and
divl
dec
out
in
adc
mov
pop
and
inc
add
std
cld
or
add
dec
and
lret
sar
imul
in
xchg
or
ficomps
addb
pop
lods
mov
cmp
insl
roll
test
jecxz
sbb
sar
sbb
mov
ret
xchg
sub
mov
sbb
sub
je
call
sbb
loope
xchg
or
or
movsl
out
add
push
sbb
or
pop
mov
lahf
sub
pop
pop
pop
rcrl
lds
hlt
sub
lock
je
dec
loope
push
jp
stos
push
xorb
adc
mov
pop
jmp
xor
fsubs
push
push
imul
adc
call
xchg
mov
ret
inc
in
cwtl
jbe
scas
inc
fstpt
sbb
mov
add
out
xchg
push
inc
push
jo
xchg
jno
imul
push
dec
arpl
pop
mov
pop
insb
dec
inc
dec
xor
pop
out
xchg
aad
stos
pusha
mov
decl
dec
repz
mov
push
pop
jecxz
daa
pop
imul
xchg
jne
shr
or
push
insb
pop
adc
movsb
nop
push
xchg
ljmp
mov
xor
xlat
pop
mov
mov
pop
jno
rolb
inc
mov
movsb
or
dec
mov
loope
add
lds
pop
cs
adc
mov
pop
pop
int3
ss
add
push
lret
daa
jnp
fldt
jne
push
cmp
cmp
or
inc
jb
pop
cmpsl
jg
cmp
test
adc
or
aas
xchg
jp
sub
cmp
in
mov
testb
dec
outsb
rol
inc
pop
or
cli
inc
pop
adc
mov
push
out
out
add
stc
mov
xchg
jg
aas
mov
jbe
lods
in
std
pop
lahf
mov
mov
fistpl
loop
fs
cmp
sbb
arpl
mov
notb
mov
mov
sub
mov
jnp
push
and
lds
pop
stos
jmp
movsl
cmp
sti
subl
daa
xorb
dec
lods
lods
xchg
imul
es
ja
test
ljmp
mov
jge
xchg
sbb
mov
mov
iret
cmpsb
mov
pop
or
xor
cmp
mov
lods
pop
push
test
icebp
sbb
dec
outsb
out
dec
cltd
jnp
jg
lea
pop
inc
icebp
out
xchg
xchg
pop
mov
mov
push
jnp
mov
popf
das
nop
int
addl
xor
nop
addr16
cmp
adc
fildl
xchg
push
mov
mov
ja
aaa
xchg
xchg
ljmp
xor
ja
adc
push
mov
dec
mov
add
push
shr
je
pop
cwtl
scas
test
fs
dec
xor
xchg
js
mov
fmull
push
inc
push
jo
cmp
jb
stos
aas
lock
lret
add
cs
orl
cmp
xchg
and
dec
push
fcomp
jae
repz
imul
jge
inc
inc
sbb
adcl
xor
add
scas
xor
or
jl
adc
fwait
adc
or
lods
inc
mov
mov
xchg
ljmp
int
mov
adc
in
add
jecxz
add
sub
in
popf
ja
mov
test
jecxz
jle
out
cld
pop
jb
cltd
push
add
push
and
mov
mov
cli
aas
cmpsb
xchg
pop
in
cmpsb
mov
jmp
subl
lods
je
pop
mov
xchg
or
cmp
clc
mov
cmp
cmp
js
pop
mov
sbb
push
fsubrp
bndldx
incl
test
movsb
inc
inc
cmp
sbb
pop
sti
inc
cmpsl
test
daa
cmp
dec
sub
and
push
scas
fiadds
enter
inc
mov
fwait
popf
iret
lods
mov
cmp
ret
scas
aam
mov
push
sysexit
in
lock
add
pop
aaa
popa
sbb
data16
roll
shll
sub
frstor
movsb
inc
pop
xlat
pop
data16
mov
outsl
cwtl
add
inc
in
dec
pop
or
pop
sub
out
call
sub
cmp
in
mov
and
add
pop
cli
adc
dec
in
push
cmpb
scas
lods
fildl
xor
ret
dec
xchg
dec
sub
mov
loopne
mov
inc
pop
sub
std
das
fdivrs
std
loopne
and
inc
ljmp
repz
mov
xor
test
fsubr
cmc
pop
insb
mov
cmc
popf
mov
inc
and
xchg
repz
jl
xor
mov
jb
andb
mov
mov
fs
lods
dec
jo
dec
xchg
rorb
dec
dec
mov
jb
jb
ljmp
dec
movsb
jp
sbb
mov
sub
fisttpl
daa
or
lods
aaa
scas
push
push
jo
pop
dec
jo
mov
in
cmp
dec
and
imul
rorl
push
popa
jo
inc
lret
dec
iret
xor
and
mov
sti
jne
push
or
pop
ljmp
or
ljmp
lret
xor
or
push
sub
into
or
fwait
rep
inc
mov
data16
xor
or
sbb
int
jne
add
adc
lret
fs
imul
inc
gs
pop
in
leave
sarb
sbb
adc
sbb
and
rcl
mov
push
repz
iret
cmp
mov
push
xchg
jo
push
or
stos
ja
rol
pop
outsl
cmp
cs
mov
xor
sbb
xchg
dec
outsb
ljmp
sbb
ljmp
jae
ret
incl
push
stc
jl
ret
ret
in
jle
in
in
test
mov
add
sahf
outsl
jne
lret
rorl
test
xor
test
push
das
aam
mov
mov
stos
popa
sub
lds
in
jbe
push
mov
addl
pushf
in
or
add
or
ja
jo
popf
fldt
lea
add
incb
or
jmp
xchg
into
outsb
dec
sbb
leave
in
scas
insb
add
fs
add
test
sbb
insb
cmp
mov
mov
enter
enter
pop
sub
dec
iret
sahf
rcrb
gs
cmpsl
add
insb
add
pop
adc
or
sbb
pop
jmp
popf
cli
jmp
xor
add
add
ljmp
decl
lret
push
sbb
adc
in
pop
pop
and
int
andl
jmp
xchg
pop
je
push
xor
out
jge
dec
lcall
mov
push
xor
push
push
lcall
ja
or
xchg
enter
dec
push
sbb
mov
pop
cmp
rclb
inc
outsb
ja
pop
mov
dec
xchg
cmp
xchg
call
add
inc
std
pop
bound
dec
into
adc
loop
adc
aas
add
sarl
aam
xor
sti
cli
adc
push
cmp
fdivrs
daa
or
push
dec
jl
repz
popa
or
daa
jo
dec
enter
sub
jno
add
pop
xchg
andl
lds
inc
dec
mov
jo
push
dec
arpl
cli
push
scas
pop
ljmp
push
insl
shlb
test
fdivrl
jg
cmp
insl
lods
fs
push
jb
jmp
fwait
cwtl
rcrb
insl
push
add
sbb
dec
iret
fs
mov
push
lock
outsb
lods
or
sbb
cmp
fcomp
pop
add
mov
in
insl
out
mov
mov
outsb
jno
mov
mov
xor
mov
mov
inc
fsubrp
ss
lret
pushf
lods
mov
cwtl
cmpsb
adc
in
jecxz
sub
or
or
testl
or
test
lods
push
rsqrtps
dec
dec
pop
mov
push
das
dec
mov
div
sahf
xor
clts
arpl
jb
sub
dec
lea
cld
aam
xor
int3
mov
pop
add
imul
mov
test
test
lods
mov
mov
sbb
and
das
mov
mov
or
adc
iret
stos
aam
arpl
xor
mov
dec
xor
lods
pop
xchg
dec
cmp
nop
push
ds
scas
cmpsl
xchg
dec
notl
xor
pop
mov
int
pushf
pop
imul
pushf
scas
pop
push
inc
adc
fbstp
add
add
pop
jnp
fwait
pop
test
std
std
stos
cld
mov
sbb
bound
or
imulb
fnstsw
sbb
mov
lods
or
dec
pop
or
mov
test
cmp
fwait
push
inc
out
push
or
xor
icebp
lods
sbb
xchg
outsl
push
ljmp
inc
mov
xlat
fldl
add
pop
sbb
in
rcll
sbb
lea
cmp
in
aad
dec
lock
mov
sbb
shrl
xchg
mov
inc
push
adc
incb
test
or
push
mov
je
xchg
mov
and
xorl
push
mov
stos
in
mov
int
imul
int
jecxz
fisttpl
dec
lea
pop
push
lods
mov
and
dec
dec
lcall
aas
out
pop
in
push
les
jnp
xchg
bnd
lcall
daa
mov
adc
loopne
push
test
mov
mov
jge
rcrl
dec
xor
push
pop
in
and
sbb
dec
mov
jle
cmpsb
pushf
sbb
inc
pop
arpl
pop
jp
add
ret
dec
mov
arpl
pop
xchg
sbb
push
jno
stos
mov
dec
xchg
jge
fcmovbe
imul
mov
jne
ret
pusha
mov
js
ds
dec
pop
into
inc
shlb
adc
ficompl
mov
ja
in
mov
leave
sub
pop
jno
pop
lret
xchg
into
jp
xchg
sarb
xchg
test
xlat
lock
xlat
mov
xor
les
or
dec
sub
repz
shrb
add
sub
inc
imulb
enter
les
xor
mov
dec
mov
push
nop
cwtl
or
pushf
add
decl
push
mov
ficoml
or
pop
das
clc
pop
icebp
and
insb
cmc
and
insb
or
mov
sbb
mov
xor
ds
in
xchg
inc
sub
cmp
sub
pop
pop
sarl
pusha
pop
movsl
cli
pop
push
test
pop
sbb
push
cld
xorl
rolb
sbb
add
cmp
xor
add
mov
xchg
xadd
lods
add
mov
pop
dec
add
daa
dec
mov
dec
mov
push
mov
pusha
cmp
adc
xor
adc
xor
adc
mov
test
push
pop
push
mov
pop
scas
ret
scas
push
xchg
pop
scas
dec
xchg
sbb
cltd
mov
popa
adc
cld
xor
jle
cmp
inc
pop
in
sbb
xchg
sbb
pop
call
fiadds
rorl
sbb
mov
pusha
movsb
mov
popa
enter
int3
mov
xor
adc
xor
adc
stos
pop
mov
lcall
cwtl
add
pop
add
and
sbb
insb
mov
or
sub
pop
ret
pop
dec
jnp
xchg
push
jnp
xchg
push
stos
xor
inc
mov
iret
xor
pop
imul
cmp
cwtl
int3
and
sub
jae
lods
mov
shl
adc
adc
add
dec
ret
or
sbb
insb
adc
xchg
jge
nop
fldcw
loopne
icebp
orl
push
lret
or
sbb
or
outsl
push
nop
xchg
pop
dec
sub
pop
jecxz
or
xor
aad
push
mov
jmp
mov
arpl
mov
xor
mov
mov
sbb
faddl
add
mov
adc
icebp
cli
mov
sub
in
inc
sti
push
icebp
cmp
cld
hlt
jecxz
out
jb
push
xor
pushf
popa
cwtl
insl
out
pop
xor
push
pop
std
mov
fildl
mov
jae
jle
xlat
aad
pop
scas
xchg
xor
jnp
push
inc
mov
sub
xchg
data16
and
dec
scas
sub
test
xchg
dec
sub
loopne
lds
fcoms
fprem1
js
inc
push
xor
cwtl
jb
leave
xlat
mov
scas
cmp
test
inc
and
pushf
mov
mov
lods
mov
xchg
push
xchg
pop
adc
sbb
mov
scas
pop
xor
mov
ret
push
hlt
orl
stos
jge
int3
aas
xor
xor
sbb
call
int3
inc
cs
dec
icebp
push
arpl
jle
es
or
mov
in
mov
xchg
xor
ja
add
sarb
rorb
lret
cwtl
adc
xor
imulb
popa
xchg
cmp
into
push
cmp
cwtl
inc
push
enter
jns
jg
pushf
pusha
jb
movsl
pop
sbb
xchg
test
jo
fadds
jmp
cmp
jle
mulb
addr16
jbe
stos
pop
std
stos
cmpsl
orl
daa
scas
mov
cmp
stos
xor
test
out
hlt
or
mov
adc
sub
sarl
pop
in
inc
dec
fmuls
adc
xchg
ret
jle
clc
stos
push
push
sbb
mov
sub
cli
xchg
outsl
scas
out
cmp
lods
xor
clc
daa
dec
clc
dec
mov
mov
out
mov
jl
xor
repz
and
adc
test
aam
cmp
pop
inc
jne
or
xlat
test
test
push
push
popf
or
cld
inc
gs
xor
sub
fs
lds
push
pop
daa
test
push
inc
push
and
dec
mov
sub
mov
xchg
sbb
cmp
jnp
into
es
test
xchg
shll
push
hlt
lret
out
iret
cwtl
popf
push
pushf
adc
sbb
mov
sub
cmp
cli
push
test
xor
cmp
je
insb
jnp
icebp
popf
pop
mov
rorl
flds
xor
and
imul
mov
adc
dec
insl
xchg
clc
jmp
pop
mov
fcomip
sbb
sub
pop
pop
sub
adc
das
inc
iret
mov
rep
leave
jmp
fldcw
sahf
jns
push
jb
mulb
ror
mov
add
mov
xor
adc
xchg
push
sti
lock
pop
pushf
pop
mov
ja
fimuls
mov
xor
push
mov
shrb
stos
mov
adc
cmp
mov
ret
mov
mov
call
fs
mov
mov
stos
ja
add
xchg
sti
ret
push
push
add
mov
data16
pusha
popa
add
dec
push
shlb
aam
pop
sub
sbbl
scas
fldt
push
xorl
jg
movl
cmp
adc
push
add
fwait
jle
dec
xchg
lea
inc
fadd
and
pop
push
mov
pop
xor
inc
ss
cmc
movl
aaa
jl
pop
stos
dec
cs
push
ja
lcall
jp
cmp
pop
add
stos
push
jp
mov
pop
repnz
mov
mov
movsl
or
jp
jb
pop
outsl
mov
sub
or
lret
in
pushf
dec
push
sbb
pop
jg
add
mov
rclb
test
fnsave
push
test
or
cli
fisttpll
xorl
insl
jp
adc
aam
addr16
scas
into
mov
inc
sub
insb
dec
nop
mov
inc
cmp
ret
ds
push
push
xor
jl
movsb
dec
out
insl
imul
out
mov
icebp
divl
push
cld
dec
sub
jge
popf
push
aam
nop
mov
imul
fmuls
push
xor
jnp
and
test
xor
dec
and
lock
jle
ds
lock
xor
stc
test
and
xchg
mov
js
jnp
pop
cli
addr16
imul
inc
cli
cmc
es
shll
outsl
test
and
mov
jecxz
pop
aam
mov
es
pop
xor
leave
stos
push
xchg
and
jmp
iret
sbb
scas
mov
lahf
vpcompressb
insb
xor
sbbb
add
mov
and
sub
mov
leave
sbb
add
mov
jle
lock
ret
pop
xchg
mov
enter
xchg
das
xchg
sub
loop
push
dec
jmp
and
dec
movsl
test
sub
mov
pop
pop
push
insl
shrd
iret
dec
cmp
mov
ja
aas
icebp
cmpsl
adc
aaa
scas
lods
mov
xchg
jnp
dec
mov
stos
sub
out
push
pop
dec
inc
scas
xchg
pop
pushf
push
les
lret
cwtl
xchg
in
mov
les
mov
imul
sub
inc
call
pop
mov
or
or
or
mov
pop
xor
ja
push
pop
js
fdiv
sub
xor
movsl
mov
push
sub
sahf
int3
mov
dec
xchg
sbb
adc
xorl
pop
xor
add
pop
pop
mov
fldt
cmp
stos
sarl
jb
shrl
sti
in
cwtl
stos
in
inc
ficompl
lods
mov
pop
push
mov
cmpsb
sub
ja
mov
lret
clc
std
pop
das
push
jmp
ss
sbb
adc
mov
dec
push
stos
dec
mov
mov
hlt
iret
inc
pop
scas
sub
imul
push
push
xchg
sbb
adc
stos
cli
shlb
test
mov
push
jl
and
int3
mov
jle
jg
aad
js
pop
shlb
fxch
lds
ss
aad
test
lods
popf
rcr
jmp
or
jno
push
call
mov
lock
fldl
test
loop
mov
xor
sub
int3
cld
into
jp
jg
cmpsl
jg
int3
dec
cmp
inc
cmpl
test
and
mov
lods
addr16
xchg
inc
ljmp
dec
push
pop
xchg
dec
mov
imul
fldenv
and
out
pop
push
loop
xor
inc
dec
pop
stos
inc
sbb
scas
adc
stc
pop
repnz
xor
mov
inc
sarb
pop
stc
cmpsl
ret
or
fnstcw
nop
push
iret
add
mov
adc
addr16
loopne
or
dec
xor
and
stos
jo
out
fcmovnu
mov
add
lods
in
pop
repz
xchg
repz
sbb
outsl
scas
xchg
jae
xchg
enter
pusha
fbld
pop
xlat
or
cld
add
imul
mov
rcl
je
into
xor
addr16
adc
mov
imul
sahf
adc
add
icebp
push
or
or
shlb
and
ret
adc
cld
sbb
fwait
mov
nop
popa
mov
insb
ret
test
leave
mov
and
hlt
cmp
or
and
and
lahf
add
push
stc
sbb
lea
mov
jae
push
sbb
mov
mov
add
repz
mov
ss
xor
mov
jg
xlat
mov
rorb
into
xlat
std
inc
push
mov
dec
insb
mov
sub
or
xchg
imul
pop
mov
icebp
pop
mov
mov
xchg
hlt
scas
sub
jnp
out
in
jmp
add
test
xchg
test
pushf
fistpll
aam
cmp
push
push
dec
xchg
add
in
mov
ret
jnp
mov
dec
pop
in
outsl
das
sbb
clc
jno
and
dec
cs
pop
add
adc
ret
scas
dec
dec
xchg
into
lods
clc
sub
ret
call
outsl
adc
cmpsb
fcmove
xor
cmp
enter
and
push
sub
mov
js
push
mov
fwait
jno
xorl
cmp
loopne
lret
loope
xchg
dec
ja
jecxz
test
stos
lods
ss
mulb
ljmp
imul
adcb
dec
test
jl
test
sti
pop
dec
scas
outsl
pop
filds
push
lock
dec
mov
nop
cwtl
add
daa
jp,pn
pop
daa
push
dec
cmp
mov
and
stos
mov
inc
sub
sub
loopne
inc
push
sahf
fistps
sahf
jne
xchg
in
mov
jp,pt
fsub
neg
mul
fidivrl
inc
mov
in
xchg
test
mov
dec
or
push
adc
sbb
dec
rclb
outsb
or
xor
insl
repnz
push
ret
test
repz
rcrl
mov
fidivl
sti
orb
and
dec
sbb
ja
arpl
pop
test
pop
push
cmp
jns
mov
stos
sar
ret
cmp
testl
mov
xchg
sbb
lcall
mov
sbb
jle
shrl
lcall
stc
xchg
addr16
xchg
adc
sbb
scas
sbb
ret
xlat
or
inc
dec
adc
loope
filds
mov
lret
mov
sub
jno
cld
inc
pop
mov
movsb
xchg
add
lds
cmp
push
das
jl
mov
lods
repnz
pusha
mov
inc
test
xorl
faddl
sub
jae
fwait
mov
push
cwtl
pop
sbb
lret
popl
mov
push
sahf
leave
lds
cltd
sbb
jl
mov
jge
cltd
mov
jmp
and
xchg
jecxz
pop
dec
xor
inc
xchg
imul
jp
lahf
adc
in
or
sbb
pop
fcoms
scas
dec
cmpsb
aas
xorl
push
arpl
test
or
pop
nop
inc
sub
fs
pop
push
cmpsl
xor
stos
pop
jle
cmpsb
cmpsb
dec
jo
xor
aas
jae
out
sbb
mov
dec
out
pop
leave
das
pop
leave
clc
cld
ret
add
cmp
jns
jne
dec
mov
mov
sbb
fprem1
bound
or
loope
insl
adc
test
lds
sti
inc
mov
sub
or
sub
xlat
popa
scas
jecxz
dec
rclb
gs
push
mov
dec
je
push
es
loope
pop
dec
mov
call
test
test
js
mov
xchg
imul
sbb
push
movsb
mov
inc
cmc
pop
fisttps
iret
jo
loope
daa
ret
jo
enter
pop
imul
jecxz
pop
mov
mov
leave
mov
std
pop
jp
aas
mov
or
pop
xorb
or
mov
sbb
ret
fdivrs
repz
mov
cmpsb
mov
dec
or
lea
jo
sub
imul
imul
adc
or
sbb
insb
xchg
pop
adc
cltd
xor
frstor
testl
and
movsl
pop
mov
jnp
mov
jo
insl
sbb
and
out
or
cmc
sub
ja
inc
push
cmp
popa
inc
or
decb
dec
daa
xor
mov
pop
or
and
xchg
cmp
mov
ret
orl
out
mov
outsb
fcoml
test
jge
push
cmp
ror
cmp
ss
aam
add
xchg
rorl
or
add
bound
and
dec
fldt
or
jge
rorl
mov
aaa
and
or
pop
movsb
aad
add
and
lock
repnz
adc
or
sti
ret
lods
sbb
stos
stc
dec
mov
dec
mov
test
outsl
pusha
bound
mov
cmp
or
cmc
lret
fmul
pop
xchg
roll
out
dec
adc
xor
clc
div
in
pop
cmp
add
ret
lret
mov
mov
out
xor
pop
and
mov
addr16
sub
aas
ds
sub
adc
inc
jg
out
daa
cmp
fs
sahf
rolb
mov
sbb
fidivrl
stc
lock
push
add
cwtl
or
xchg
scas
out
mov
in
adc
pop
and
or
pop
cmp
push
cli
fdivs
inc
fistps
aam
jns
cmp
dec
in
popf
jno
fidivs
mov
mov
dec
iret
xor
or
push
mov
sub
jg
or
cltd
stos
mov
or
icebp
jae
push
vpshaq
adc
jno
sti
pop
shl
fidivs
in
mov
sbb
mov
icebp
push
int3
addr16
and
inc
pop
xchg
mov
xchg
xchg
std
iret
dec
xor
or
test
leave
dec
repz
sbb
lret
fnstcw
fnstcw
fs
stc
pop
cwtl
lret
mov
fsubrs
xchg
repnz
mov
divb
cmp
mov
dec
mov
clc
push
xor
or
dec
pop
pop
fistl
inc
push
pop
jb
mov
adc
and
lret
inc
je
int
dec
fisubs
or
mov
fisttps
xor
xchg
xchg
insl
mov
sub
hlt
adc
pop
mov
sub
mov
sbbb
es
and
adc
jle
in
ror
xchg
sahf
imul
insl
pop
xchg
xor
pop
test
xchg
js
call
orl
roll
or
jnp
out
cmp
push
ljmp
pop
pop
mov
les
push
outsb
mov
ret
mov
int
cmpsb
int3
shl
pop
aam
and
pop
hlt
fstps
test
cwtl
fwait
gs
xor
cmp
mov
push
inc
add
or
mov
rorl
xorb
addr16
push
sub
inc
dec
in
fisttpl
sub
sbb
jae
add
outsl
cmpsb
popa
pop
out
outsb
loope
jae
mov
mov
sbb
xchg
jb
cmp
call
and
das
pop
jecxz
test
jns
mov
pop
data16
xchg
jno
adc
inc
jp
stos
mov
xchg
test
pop
std
inc
push
xor
inc
xchg
mov
add
in
aaa
iret
lcall
in
pop
jle
dec
test
lret
mov
daa
mov
pop
or
loopne
in
daa
xor
and
fdivrp
dec
stc
lods
movl
mov
scas
xchg
and
repz
arpl
mov
aam
mov
xorb
stos
mov
or
mov
pop
pop
jb
movsl
push
inc
sbb
xchg
xor
sahf
vpunpcklqdq
xor
sub
fisubrl
jne
xlat
pop
mov
out
and
test
mov
mov
or
shl
mov
sbb
cmp
mov
inc
rclb
sbbl
insb
pop
movl
int
repz
ljmp
pop
nop
fstpt
inc
and
and
jg
jl
jae
stos
xlat
adcb
cmp
popa
cli
std
mov
sbb
jge
sub
out
adc
aam
add
xrelease
sbb
enter
sarl
xor
fisubrl
adc
mov
jnp
xor
ficoms
stos
jno
ret
pop
push
jnp
bound
xchg
xchg
movsb
pop
adc
rcl
pop
sbb
ret
in
cld
sbb
je,pt
or
dec
pop
and
fldlg2
adc
push
nop
dec
dec
mov
jmp
mov
push
push
mov
and
ret
clc
icebp
outsl
into
push
stos
cli
xlat
mov
pop
ljmp
fdiv
jmp
hlt
fstpt
loope
cltd
adc
xchg
pop
jo
mov
test
pop
pop
in
nop
into
mov
js
xchg
ret
hlt
sbb
insb
sbb
rorb
sbb
xlat
bnd
sub
pop
jge
ret
push
mov
popa
pushf
sub
jl
cmp
xchg
jb
int3
movsl
int
arpl
and
mov
daa
fwait
xchg
icebp
mov
outsb
mov
stos
rolb
daa
mov
dec
sahf
jmp
push
xchg
add
xchg
mov
addr16
adc
movsl
popa
iret
clc
cld
pop
call
stc
rcrb
cmpl
loope
ret
fwait
jno
jbe
addr16
scas
xor
sub
adc
das
sub
js
mov
mov
es
xor
rorb
stos
ja
es
mov
cmp
dec
mov
fisubl
pop
pop
and
pusha
hlt
xchg
sub
mov
into
mov
mov
rclb
pop
and
jo
pop
repz
jno
cld
xlat
inc
adc
or
pop
dec
mov
xor
stos
jns
add
dec
fisubrl
out
lret
mov
xor
lahf
lds
jbe
test
ret
pop
sbb
xchg
adc
jo
cli
mov
mov
inc
dec
add
out
adc
or
xlat
mov
es
mov
test
fwait
add
ror
ds
sbb
bnd
in
je
inc
and
pop
mov
jle
pop
cmp
sbb
call
leave
adc
xchg
imul
cmp
rcrb
mov
rol
xchg
inc
mov
out
in
fstl
mov
roll
rcll
outsl
int
fcomp
inc
negb
mov
adc
mov
mov
pop
jbe
les
data16
into
adc
mov
or
rcr
pop
cmpsb
lret
mov
cmc
push
lea
repnz
pop
lods
rol
addr16
inc
pop
dec
dec
and
add
mov
mov
push
push
pop
rcr
nop
stos
push
fwait
bound
push
cmpsl
mov
xlat
pushf
sbb
xlat
idivb
mov
xor
adc
test
mov
push
xchg
roll
repz
sbb
xchg
dec
pop
sarb
fs
call
xchg
pop
lret
mov
scas
push
mov
pop
cmp
adc
imul
std
pop
and
test
jge
add
test
xor
in
insb
aad
mov
cld
leave
int3
add
gs
shlb
jnp
push
push
push
andb
mov
insb
movsl
xchg
hlt
cli
dec
or
jp
pop
loopne
pop
cmc
ljmp
data16
scas
jb
imul
fs
call
mov
shrl
cmp
sbbb
out
lods
xchg
cmp
loopne
fs
repnz
and
mov
mov
push
dec
xlat
ret
xor
jno
cmpsl
fstpl
xchg
rolb
sahf
push
mov
lds
sahf
addr16
cmc
jge
inc
inc
scas
repnz
stos
sub
lret
adc
dec
cmp
ljmp
sbb
mov
loope
xor
push
and
dec
cmp
data16
stos
pushf
fdivrs
mov
inc
sub
movsb
or
jno
mov
sbb
dec
jo
cli
xlat
mov
adc
dec
mov
pop
dec
or
sarl
nop
bound
xchg
jp
pop
xchg
iret
mov
stos
out
popf
in
mov
je
push
adc
push
or
lahf
pop
icebp
testb
inc
lea
cs
je
test
mov
out
mov
cmp
aaa
jl
mov
dec
subb
cmp
in
cmp
repnz
cli
arpl
and
daa
pushf
fs
add
pop
jnp
dec
notb
fcmovnu
mov
xor
cwtl
adc
dec
out
mov
pop
cli
xor
and
sub
push
and
push
es
xchg
sbb
imul
into
pop
sbb
jp
mov
lods
adc
inc
pop
mov
fistpll
aaa
inc
inc
call
imul
fcomi
das
sub
adc
push
or
pop
xchg
rcl
adc
push
repnz
jmp
xchg
adc
ljmp
push
dec
mov
sbb
xchg
pop
mov
add
clc
and
sub
or
insl
sbb
jle
or
sub
xor
lods
lret
mov
mov
sar
test
push
fdivrp
push
push
or
mov
cmp
dec
fdivrp
adc
fidivs
loope
test
insb
adc
imul
inc
pop
pop
dec
sahf
mov
push
das
xchg
xchg
xor
push
sbb
or
push
sbb
fstpt
jg
or
add
xor
or
orl
mov
mov
clc
pushf
mov
xor
fisttpl
dec
dec
data16
stc
js
std
dec
cmpsb
push
mov
je
stos
cmpsb
dec
in
fiadds
fwait
xchg
cmp
shlb
push
mov
rorl
fnstenvs
cs
inc
jecxz
iret
sbb
or
mov
cld
sub
call
loopne
xchg
subw
add
jb
ljmp
cwtl
xor
adc
pop
loopne
in
int3
jae
dec
outsl
lods
ljmp
jbe
out
lods
sti
xchg
insb
cmp
aad
or
movsb
mov
lret
jmp
popf
mov
test
lcall
sbb
mov
add
pushf
pop
pop
das
push
mov
mov
dec
call
mov
cs
fadd
into
rolb
cmp
outsl
loopne
dec
push
lcall
xor
push
mulb
imul
leave
sub
mov
and
lods
pop
out
leave
or
inc
imul
test
mov
mov
sub
push
imul
xor
out
sub
inc
hlt
jl
gs
sahf
inc
dec
xchg
sbb
jne
cld
cmp
into
notb
jo
cli
lret
ljmp
mov
cmp
push
mov
sti
ficoml
movsb
cwtl
jecxz
inc
push
dec
arpl
jb
mov
dec
notl
rcl
adc
xchg
mov
push
cmp
data16
arpl
roll
fidivl
xor
xor
jle
mov
cmp
stc
xor
insl
mov
icebp
mov
push
push
ds
or
insb
mov
repnz
cwtl
mov
dec
hlt
call
mov
lods
mov
popa
idivb
mov
xchg
cs
sub
cmp
loopne
xor
imul
pop
or
mov
add
xchg
dec
push
pop
addr16
sahf
and
iret
loope
xor
nop
sbb
addr16
lods
in
cmp
add
in
clc
cmpsl
clc
xor
push
pop
test
aas
jae
mov
stos
imull
not
pop
and
inc
ja
mov
sbb
lret
mov
lods
mov
pop
push
dec
subb
or
mov
xor
mov
pusha
out
mov
das
inc
sub
push
push
add
imul
in
add
pop
dec
pop
mov
std
push
pop
add
outsb
movsl
rcll
sbb
js
jae
jecxz
push
push
test
xchg
lcall
mov
push
mov
in
sub
add
mov
jge
fst
test
sbb
out
mov
dec
pop
in
inc
stos
cmpsl
lods
xchg
add
jb
rcrl
imul
nop
subl
dec
es
adc
dec
ret
dec
daa
dec
sbb
cmp
dec
sbb
and
ja
inc
jo
mov
xchg
sbb
stos
and
inc
cld
mov
sbb
jmp
sub
fstps
imul
scas
push
mov
jl
adc
or
add
fstl
mov
dec
int3
or
loope
nop
inc
aas
addr16
push
jnp
push
imul
and
addb
arpl
sub
stos
imul
add
js
inc
les
cli
popf
clc
cld
sub
mov
aas
movsl
clc
cmp
loop
sbb
adcb
into
insl
mov
ret
call
sti
test
xchg
mov
mov
mov
adc
jo
in
test
ficoms
inc
scas
cmp
int
mov
rcll
and
xchg
decb
mov
mov
pop
into
scas
jp
testl
lds
mov
jo
cmpsb
stos
adc
xchg
out
mov
xchg
sbb
fiadds
or
mov
fdivrp
mov
iret
cwtl
and
sbb
lret
mov
gs
cmp
pushf
rcll
push
loopne
aaa
sub
mov
loopne
fisubrl
cmp
notl
into
popf
ljmp
cld
mov
xor
popf
dec
mov
out
jnp
fldt
fstpt
mov
mov
bt
push
cmp
cs
faddl
add
xchg
bound
dec
insb
jmp
insb
pop
lret
insl
inc
fcomps
lods
fsubr
or
mov
inc
in
sti
add
scas
xchg
fsubl
xor
xor
mov
loopne
mov
into
in
adc
addb
jecxz
cmp
or
xchg
fisubs
sbb
push
mov
pop
cmp
mov
dec
aad
lds
cmpsl
dec
lret
iret
jp
add
clc
xor
bound
in
cld
sbb
jb
and
mov
jp
cld
mov
jecxz
rcll
enter
push
push
nop
pop
daa
mov
and
adc
mov
dec
ret
add
mov
mov
in
aad
insl
mov
int3
and
push
fadd
mov
cmp
test
pop
movsl
or
dec
xchg
dec
clc
fnstenv
scas
shrl
inc
sbb
sbb
mov
adc
adc
sbb
ret
out
outsl
inc
adc
outsb
xchg
or
or
fwait
into
pushf
cmp
test
xor
arpl
adc
ss
jle
pop
dec
lds
les
fwait
jg
fsubrs
movsb
mov
xchg
inc
daa
scas
jge
sbb
mov
xor
and
fildl
mov
fbstp
es
adcb
mov
push
cmp
jno
aaa
sub
lock
xor
dec
xchg
pop
stos
scas
mov
test
push
ret
push
jnp
divl
ror
mov
sbb
fwait
xor
jmp
cmpsl
jl
enter
and
xchg
pop
adc
out
in
jne
sbb
pushf
jp
in
adc
cmpsb
shrb
xor
inc
imull
xchg
xlat
adc
push
and
ja
xchg
add
xchg
lret
lods
dec
stos
into
lods
lret
mov
stos
mov
sub
or
movsl
lods
cmpsl
lds
jae
dec
mov
xchg
ror
daa
mov
adc
pop
inc
je
add
outsl
jp
mov
xor
push
test
push
add
cmpsl
xchg
scas
out
sbb
add
test
fsubrs
mov
aas
push
push
loop
jns
out
pop
jns
sarb
push
ficoms
or
test
mov
enter
dec
js
sub
push
or
ljmp
lea
out
fmull
mov
rcrb
out
cltd
out
icebp
inc
rclb
jl
mov
push
mov
inc
mov
filds
pop
std
fmul
or
pop
jmp
add
bound
or
xchg
push
into
mov
aas
mov
jnp
or
cmpl
and
or
sub
loope
adc
mov
out
cmp
insl
mov
test
inc
cltd
stos
xor
daa
push
adc
push
cmpsb
insl
aas
inc
into
sbb
jbe
mov
fs
pop
sarl
lahf
rclb
cmp
or
adc
mov
mov
push
or
pop
xchg
call
add
adc
xchg
dec
or
or
xchg
push
shl
mov
sbb
dec
mov
mov
gs
cmovge
add
xor
dec
fiadds
push
push
jmp
mov
enter
fldl
repnz
loopne
movsb
rcl
jmp
push
pop
rorl
mov
jnp
adc
movsl
pop
ljmp
xchg
adc
xor
stc
leave
jle
cwtl
adc
adc
jae
fmull
xor
repnz
fldl
xchg
xchg
sbb
int
out
push
arpl
shrb
push
cmp
or
stos
pop
lcall
sbb
push
pop
push
lcall
xor
mov
fwait
or
mov
push
ficoml
ljmp
mov
jb
and
push
pop
lret
pop
sbb
push
stos
inc
xchg
mov
mov
xor
and
cmpsb
dec
sub
dec
repz
divl
xor
shll
fistpll
cld
jae
fadds
lock
cld
leave
stos
inc
lret
inc
les
imul
popa
push
xlat
add
jle
jno
xchg
xor
cmp
cli
inc
mov
ljmp
aad
ja
into
nop
sbb
repnz
sbb
and
adc
fcomi
lds
psubusw
scas
jnp
jns
adc
pushf
pop
push
push
aaa
inc
xor
add
aaa
or
inc
push
xor
jge
push
inc
inc
jo
jb
sbb
ret
mov
jnp
bound
jge
push
mov
shl
stc
or
dec
das
out
cmp
test
cli
test
adc
inc
push
out
bound
incl
loop
mov
inc
ss
stos
mov
fdivl
inc
jnp
mov
aaa
cmp
es
mov
incl
call
das
into
add
xor
xchg
fistpl
and
adc
cli
sub
fmull
xlat
scas
aas
fmull
xchg
out
sub
andb
cmp
inc
fdivrs
cs
fsubs
xlat
xor
pop
int3
sub
pop
or
sbbl
mov
scas
xor
mov
data16
jmp
in
outsb
mov
dec
sbb
sbbb
fldl
xor
xor
mov
notb
push
je
movsb
rcll
je
push
push
or
mov
jnp
insl
xor
pop
scas
je
dec
dec
cltd
inc
push
imul
aam
push
call
cltd
js
add
mov
or
jmp
pop
leave
sub
test
sahf
xchg
xlat
mov
movsl
sbb
dec
add
popa
hlt
sar
popf
mov
jo
ds
lret
nop
jno
sbb
xor
adc
or
mov
addr16
pop
mov
stos
rcr
push
vdivpd
xchg
lahf
jne
fsubs
xor
jmp
lret
xchg
adc
mov
loope,pn
or
push
pop
cmp
jecxz
jo
or
sti
adc
cltd
test
sub
cmp
cmp
adc
fnstenv
test
dec
jp
lods
xchg
sti
mov
push
pop
pop
rorl
or
push
sbb
addl
sub
dec
xor
rol
dec
inc
fs
shll
add
in
scas
xlat
addr16
or
sub
sub
lcall
in
and
fsubl
shll
je
sub
mov
andl
decl
outsb
xchg
mov
or
pop
rcll
les
mov
repnz
pop
cmpsb
ret
fcomps
add
sbb
xchg
fcmovnbe
nop
push
int
cmp
aam
sti
mov
mov
rcrb
xchg
sub
jg
jp
arpl
or
pop
lcall
xor
imul
lock
cmpxchg
or
mov
call
mov
mov
mov
mov
jo
sarl
add
push
mov
in
jb,pn
add
sub
imul
out
ret
jg
movsl
daa
mov
insl
add
out
pushf
or
call
test
push
jg
mov
fildll
mov
jmp
in
cld
int
push
ficomps
dec
rol
mov
xor
mov
sbb
imul
or
xchg
jg
push
lock
pop
dec
into
push
mov
mov
inc
dec
cli
inc
pop
rclb
pop
inc
inc
dec
outsl
or
lret
cmp
mov
outsl
dec
cmc
out
pop
xorl
add
pop
jge
enter
in
ljmp
sub
or
xor
mov
pop
enter
fmuls
jge
jb
jecxz
shll
xor
or
imul
icebp
adc
das
fdivrs
pop
dec
jp
jns
jecxz
pop
push
fidivrs
adc
in
mov
inc
push
fistpl
or
cmp
scas
les
in
or
xor
xchg
lods
insb
in
jno
xchg
sbb
fbld
xchg
push
bound
sbb
lods
f2xm1
loop
fsub
imul
sti
push
push
lods
inc
push
sub
enter
daa
ret
or
cmp
hlt
popa
imul
dec
mov
push
imul
sbb
fcoms
mov
or
ret
stos
sub
dec
mov
fsubs
or
add
lahf
push
lret
pop
push
mov
orl
push
popa
arpl
movsb
add
std
out
inc
lock
ret
fwait
xor
sar
jl
adc
mov
imul
push
and
xchg
mov
inc
xchg
sub
test
inc
xchg
data16
push
and
int3
push
sti
sub
out
push
and
mov
aam
ja
adc
adc
fbstp
out
adc
fdivl
clc
lcall
cmp
push
or
aas
aaa
sbb
adc
push
or
push
mov
jbe
cmp
adc
in
xchg
scas
or
pop
jge
ja
xlat
loopne
cs
mov
jp
push
ficoml
add
rolb
and
repz
and
pop
dec
mov
or
sbb
cmp
dec
sbb
xchg
ljmp
xor
daa
jo
xor
mov
hlt
push
pop
lods
xor
xchg
mov
lcall
mov
jbe
cmp
pop
test
outsl
mov
mov
cmp
pop
add
mov
bound
in
push
mov
push
jge
lahf
push
pusha
jno
sbb
test
data16
hlt
sbb
cmp
jp
and
sub
pop
nop
xor
icebp
xchg
sbb
test
subb
je
into
or
inc
pop
adc
pop
aam
lahf
and
pop
bound
and
test
lock
ud1
ret
loop
scas
rep
in
loopne
int3
push
lods
sub
cmp
in
dec
loope
and
add
pop
jb
mov
xchg
sbb
imul
fdivp
xor
in
lcall
cmp
mov
scas
je
xchg
and
nop
fs
mov
jo
add
leave
jge
sbb
jle
xlat
xchg
sti
push
add
jno
ficompl
gs
adc
jge
outsl
inc
fcomps
ja
lds
fldcw
jbe
call
xchg
push
jle
std
push
xchg
aam
sub
xchg
out
adc
sub
sti
push
push
imul
out
out
inc
mov
mov
inc
fcoms
xor
or
pop
ljmp
sub
lar
scas
pop
push
xor
or
xlat
into
cmp
push
jb
xchg
jecxz
lods
in
inc
pop
xchg
jmp
in
push
jns
xchg
push
shlb
aas
push
cmpsb
popf
mov
in
push
push
fyl2xp1
insb
jae
pop
outsb
or
dec
inc
sub
cli
inc
orl
or
mov
icebp
and
test
mov
sub
xor
xchg
nop
pop
hlt
stos
fmull
adc
imul
push
lahf
arpl
enter
outsb
mov
pop
es
or
jle
lcall
ret
mov
mov
mov
dec
push
xchg
cmpsl
xchg
or
imul
dec
or
imul
fwait
mov
subb
pop
les
negl
cmp
mov
leave
mulb
popf
cmp
out
mov
orb
popl
add
pop
mov
dec
push
rcll
icebp
flds
frndint
frstor
xor
enter
or
mulb
mov
cmpl
adc
xor
mov
cmpsb
ljmp
or
add
ss
add
fs
push
jp
out
out
mov
inc
and
test
imul
outsb
xlat
fs
pop
mov
xchg
iret
mov
inc
lahf
add
sti
lods
les
jnp
stc
test
pop
xor
cmp
dec
cld
sti
sbb
mov
cmp
call
sub
sbb
and
pop
out
bound
xor
add
inc
iret
stos
or
imul
shll
fldl
adc
movsl
popf
movsb
pusha
sbb
je
xor
mov
or
dec
ret
mov
mov
mov
dec
xchg
sbb
mov
lret
xchg
pop
push
mov
or
cmp
mov
mov
cmpsl
cmc
xchg
ret
push
cmp
dec
adc
lock
sti
les
jmp
xchg
push
mov
dec
and
sub
xor
jge
push
mov
mov
push
jns
sbb
lret
outsl
stos
pushf
pop
mov
aaa
in
push
aaa
sub
jmp
cmp
and
cmpsb
xchg
mov
add
push
adc
mov
pop
sbb
mov
call
and
add
mov
adc
ret
xchg
in
shll
sbb
inc
ljmp
outsl
and
pop
cmpsl
xchg
xchg
insb
std
lds
pop
dec
cmp
jbe
sbb
or
inc
lds
pusha
leave
sub
incl
test
hlt
fstps
out
jp
dec
loopne
arpl
jb
mov
test
push
enter
sub
pop
sub
mov
or
mov
outsb
cmpsb
lods
cmp
add
dec
dec
jne
dec
movsb
xlat
test
or
and
fldenv
jbe
mov
xor
retw
dec
fsubrl
adcl
movb
jne
fdivr
cmpl
fstl
scas
adc
mov
inc
dec
xor
icebp
mov
push
nop
imul
iret
insl
push
dec
enter
xchg
jp
lods
sub
out
mov
outsb
lret
aas
popf
adcl
ja
scas
inc
and
jae
mov
lret
jno
ja
jg
in
adc
roll
lods
cmp
dec
push
xchg
xor
cli
in
pop
pop
mov
leave
pop
adc
inc
adc
xor
leave
int
sub
js
and
dec
icebp
xchg
cmp
dec
lret
shrl
push
inc
and
jbe
lret
cmc
jns
mov
lcall
pop
mov
mov
rolb
or
hlt
in
nop
daa
stos
dec
inc
fimuls
xor
mov
pop
addr16
repnz
add
scas
inc
filds
xchg
and
sub
js
dec
xchg
push
push
test
pusha
adc
ss
inc
push
insl
pop
push
adc
popa
sbb
inc
and
pop
push
sti
int3
outsb
add
adc
mov
xchg
leave
loope
mov
mov
xor
push
cs
mov
in
dec
lret
jle
mov
jb
mov
inc
pushf
inc
popa
in
cmpsb
jbe
in
pop
jbe
cltd
insb
adc
cmp
cwtl
or
js
xchg
mov
pop
fmuls
mov
ret
lahf
andl
std
imul
sub
je
mov
dec
adc
in
pop
call
pop
mov
flds
std
and
mov
enter
jne
or
dec
xchg
cmpsb
les
mov
pop
add
or
orb
and
push
inc
xchg
adc
sti
iret
push
xchg
xchg
test
xchg
and
push
repz
in
cmp
shlb
sbb
dec
push
xor
mov
mov
fld
inc
fs
icebp
add
add
cmpsl
adc
add
dec
int3
push
push
xor
ljmp
sub
pop
insl
push
aas
push
lret
mov
lods
cmc
cmp
xorl
fisubs
pop
and
cmp
or
xchg
sbbb
das
loope
mov
push
imul
xor
cmc
inc
mov
leave
sub
xor
popf
cmp
cmpsl
mov
movl
cltd
ss
push
sbb
xor
das
mov
sub
in
imul
aam
jge
decl
add
in
mov
dec
dec
sbb
cmpsb
pop
adc
std
enter
mov
add
lret
xchg
flds
and
adc
daa
mov
pusha
imul
xchg
mov
add
pop
sub
rcl
aaa
loope
push
jbe
mov
xlat
pop
es
sti
lods
test
jns
mov
out
xor
ficoml
lret
popf
cmp
xlat
and
fsubl
pop
cmp
xchg
jne
xor
mov
lods
pop
push
loop
pop
inc
jg
ret
ja
mov
dec
mov
iret
data16
adc
inc
mov
and
mov
push
inc
xchg
fwait
jge
cmp
scas
jo
idivl
sbb
or
iret
push
sahf
out
jnp
jae
inc
xchg
cld
push
arpl
fs
add
xor
mov
das
fcomps
push
pop
ljmp
sbb
cmp
mov
ret
mov
push
mov
push
xchg
arpl
cmc
sbb
adc
jnp
jge
mov
ret
xor
xor
sbb
pop
sti
enter
sbb
popf
pop
sti
movsl
pop
lahf
out
popf
fnstcw
mov
dec
cmpsl
mov
xchg
inc
dec
and
out
xor
add
or
pop
cmpsb
outsb
test
cmpsb
push
lcall
mov
mov
adc
rcrl
mov
adc
popa
cmpsb
jp
sub
and
scas
inc
js
inc
xor
cmp
addl
dec
pop
movsb
stos
cwtl
gs
mov
adc
nop
lcall
add
arpl
ds
dec
push
mov
or
leave
mov
lods
xchg
xor
add
jb
mov
mov
mov
or
in
fs
cltd
subl
jmp
adc
dec
xor
push
sbb
xorb
push
mov
in
jnp
push
repnz
ret
ffree
pop
lcall
pop
add
adc
fadd
mov
fs
pusha
test
mov
adc
add
icebp
sub
mov
xchg
ret
dec
out
mov
pop
cmpsl
test
xchg
inc
test
cmp
arpl
scas
scas
rcrb
xor
pop
popf
ss
mov
rclb
adc
jge
lock
test
sub
stos
xor
xchg
cmc
leave
jae
jp
sbb
fidivrl
jge
loopne
test
cs
lahf
and
sub
sub
mov
or
les
sbb
add
jmp
adc
in
mov
jno
int3
mov
lahf
gs
test
outsb
enter
cmc
inc
outsl
push
and
lods
pop
aas
sub
mulb
sbb
dec
jb
xor
mov
loope
xchg
sbbl
bound
sub
scas
push
aas
mov
xor
xor
into
pop
adc
or
pop
mov
push
repnz
add
xor
add
add
stos
pushf
aad
push
popa
scas
and
rcl
push
mov
xor
mov
cmc
addr16
scas
push
mov
pop
xor
icebp
push
icebp
xchg
andb
xor
test
cli
shlb
xor
rcrb
inc
or
sub
loopne
ja
test
push
ja
ss
sbb
into
add
pop
cmp
dec
dec
xor
lds
mov
out
shll
or
cmc
test
xlat
fdivs
fs
into
ds
mov
push
mov
loopne
aaa
into
out
scas
xor
sbb
mov
stos
sub
es
imull
jns
or
jge
stos
push
sub
push
push
aas
jo
sbb
inc
pop
xor
xor
outsb
lret
xchg
jb
dec
fwait
insl
add
push
bound
int3
ret
push
fsubr
inc
cmpsb
xchg
pop
test
push
jp
mov
jne
dec
adc
aas
push
add
pop
fnstcw
mov
adc
lods
adc
cmp
sarl
int3
loope
sar
add
inc
xor
add
loop
xor
lea
jle
pusha
rclb
sahf
push
jp
jmp
lcall
shll
xor
cmc
jecxz
mov
jge
rclb
aad
push
push
sub
call
jns
fidivl
jmp
add
out
rol
add
jbe
lea
out
sbb
hlt
lret
jle
movsl
in
testl
mov
mov
pop
xor
test
insb
and
xor
pop
or
jp
sbb
mov
stos
mov
movsb
idivb
pusha
jbe
ret
ret
mov
in
xchg
aas
or
lsl
loop
or
jo
js
loop
xor
mov
ds
jp
xor
sub
xor
in
movsb
adcl
jl
push
idivb
sti
inc
shll
insb
test
jmp
jb
push
sbb
xor
popf
imul
ljmp
jg
mov
les
mov
ljmp
xchg
inc
push
mov
nop
push
test
push
or
hlt
pop
xchg
jns
jbe
push
loop
fwait
in
mov
lret
mov
in
lds
xchg
inc
adc
stos
xor
testl
jmp
xor
imul
mov
sub
das
sahf
and
test
cmpb
xchg
scas
mov
mov
dec
mov
cld
cltd
push
inc
out
adc
adc
dec
jg
mov
pop
int
jbe
ja
push
jle
mov
inc
mul
mov
cs
sub
xchg
mov
pushf
shll
xchg
jle
ret
cli
cmp
push
jp
and
jle
dec
and
aad
scas
and
cmp
jge
dec
out
stos
les
adc
adc
pop
shll
pop
jno
dec
lret
loopne
jns
es
cmp
cmp
mov
sbb
add
push
push
out
mov
aas
mov
push
js
les
dec
bound
sbb
add
or
stos
xchg
xor
push
push
add
push
in
test
mov
jle
pop
xor
or
aad
fcmovnu
out
fisubrl
in
pusha
lret
inc
add
ror
and
adc
push
add
xchg
xchg
out
dec
dec
push
ja
cld
pop
jge
inc
enter
xor
jbe
dec
movsl
and
enter
adc
lods
jge
das
mov
jecxz
aad
icebp
cmpsl
dec
mov
popl
sti
jb
mov
in
into
cltd
cmc
pop
cld
clc
testb
fwait
mov
mov
int3
ret
stos
xor
xchg
adc
push
mov
notl
jge
cmpsl
lea
ja
mov
ljmp
mov
sub
mov
push
lods
pushf
mov
icebp
dec
nop
shrb
mov
xor
inc
mov
pop
sub
shlb
dec
sub
faddl
lahf
push
inc
icebp
jle
addb
pop
mov
in
add
jl
pop
xchg
sbb
push
cmp
add
fnstsw
xor
or
adc
mov
imul
mov
ja
and
sbb
sub
imul
xchg
xor
test
jg
and
rcll
adc
loope
jge
nop
sub
and
pusha
mov
xchg
cmp
cli
jecxz
hlt
rol
std
shll
jne
movb
stos
pop
xor
push
lret
and
or
xchg
mov
decb
pop
aas
je
pop
nop
lret
xor
into
pop
mov
cmp
bound
mov
ret
sbb
cwtl
push
stos
mov
jl
xchg
adc
add
pop
mov
sub
outsb
xchg
sbb
repz
das
mov
xchg
xor
fmuls
cli
xor
ret
iret
inc
ja
les
push
add
stc
subl
dec
int3
jo
loop
cmc
std
pop
daa
loope
addb
push
inc
dec
mov
jle
call
call
inc
mov
sub
lcall
int3
or
push
repz
ss
jle
pop
outsl
lock
mov
testb
mov
push
fwait
mov
pusha
push
outsl
lret
add
test
pop
xchg
jnp
pop
add
hlt
rcr
orl
or
or
lret
lods
jecxz
inc
ja
xor
lods
xor
dec
or
pusha
shrl
cmpsl
pop
mov
sub
jno
jmp
xor
push
jecxz
dec
test
add
or
cwtl
inc
rclb
sbb
pop
or
adc
or
ds
mov
jb
in
out
and
inc
int3
dec
pop
pusha
loope
xor
rcl
stc
call
movsl
pop
push
gs
xor
jmp
mov
push
cmpsb
jne
out
repz
sub
cmp
shlb
mov
inc
das
mov
jg
fldenv
repnz
popa
lea
push
mov
iret
popa
add
pop
repnz
fneni(8087
sbb
out
mov
dec
inc
lret
inc
mov
fnstsw
sub
xchg
loopne
push
test
sbb
sub
es
ds
popa
xor
cmp
inc
repnz
cmp
pop
push
dec
push
imul
fwait
cltd
sar
lret
xchg
out
sub
shll
xchg
push
dec
sub
add
test
dec
pushf
push
add
lcall
mov
inc
out
dec
out
jb
add
jecxz
test
int
xor
and
lahf
xchg
call
cwtl
push
mov
xchg
xor
xchg
fildl
xor
mov
rol
sub
orl
dec
pop
sub
dec
popf
mov
popa
aas
mov
fnstcw
std
loope
adc
ret
loope
jl
scas
pop
out
and
sbb
mov
push
out
inc
scas
fsubl
jg
mov
cmp
jg
mov
mov
fcmove
test
jp
nop
pusha
inc
bound
and
or
insl
lret
ja
pop
pop
push
lods
xor
sub
fs
loopne
push
orl
adc
push
into
je
repz
scas
cwtl
xchg
jmp
xchg
and
mov
test
jae
hlt
push
cmc
xchg
mov
aad
xchg
dec
cmpsb
pop
push
pop
test
add
inc
dec
sti
sbbl
mov
mov
xchg
lret
hlt
and
stos
mov
incl
fsub
jno
pop
and
stos
sbb
or
cmpsl
xor
jge
sub
pop
fs
test
mov
jo
inc
nop
cmpsb
and
jb
lea
push
movsl
dec
arpl
fstps
aas
sti
jae
pushf
sub
jg
outsl
imul
push
jns
push
pop
pop
icebp
shl
orl
imul
push
xchg
jl
adc
xchg
xor
fistpll
cmpsb
out
daa
pop
mov
sahf
test
sbb
xor
lret
dec
push
movsl
das
dec
jle
and
into
mov
xlat
pop
mov
lods
cmpsb
call
pop
jb
mov
sbb
jno
sbb
xor
fdivrl
xchg
cld
gs
sbb
xlat
dec
inc
push
outsl
bound
addr16
sbb
dec
adc
xchg
cmpb
adc
pop
pop
dec
jbe
cmp
sub
ds
test
cli
fstpl
sub
xchg
push
jmp
and
popf
shll
test
push
shrb
add
lds
jo
mov
and
pop
movq
pusha
push
pop
lds
lods
arpl
pop
pop
mov
dec
jbe
xchg
jmp
out
cmp
hlt
rclb
insb
bnd
pop
in
mov
jo
push
or
jmp
pop
pop
inc
pop
mov
pusha
in
lret
cmc
and
jp
pop
rcll
cmp
or
and
int3
movsb
lcall
popf
cmpsb
lcall
in
insb
repz
icebp
dec
jp
lea
sbb
sti
insl
in
sub
or
stos
jecxz
dec
mov
adcb
call
je
cmpsb
jp
or
lods
in
in
and
popf
sub
dec
mov
inc
and
pop
jo
shll
loope
jb
xchg
aam
mov
in
xchg
adc
lods
movsl
xor
mov
push
push
push
push
int
std
sub
int
add
add
inc
adc
sahf
sbb
mov
jle
das
adc
cld
shll
add
mov
gs
push
xor
mov
mov
mov
mov
xor
mov
sub
and
xor
mov
mov
in
shll
into
fs
mov
or
or
pop
mov
jle
xor
adc
add
das
dec
inc
or
xor
dec
outsb
data16
pop
cmpsb
call
out
bound
loopne
pop
pop
jp
mov
sub
movsb
xlat
jno
mov
pop
push
lret
xchg
jp
data16
sbb
popf
dec
and
xor
out
pop
xor
lret
pop
xor
fcoms
push
adc
movb
mov
sbbb
loopne
shlb
cmc
mov
mov
xchg
xchg
ss
push
cmp
xchg
les
nop
out
and
cli
mov
or
bound
cli
test
mov
jne
addb
test
cmp
int
inc
dec
add
xor
lret
and
lds
xor
fsts
mov
mov
inc
or
jmp
ret
lods
outsl
mov
int
in
pop
movsl
pop
dec
mov
cld
test
push
mov
movsl
insl
test
dec
adc
jb
jae
in
xchg
inc
mov
pusha
pop
mov
mov
sbb
rcrb
out
js
or
arpl
cmp
add
add
ret
cli
cltd
out
mov
push
arpl
cmp
lods
mov
cld
sbb
test
mov
in
pop
out
lods
or
rcl
push
add
testb
xchg
lds
push
jae
push
adc
add
add
movsb
or
mov
mov
out
imul
sahf
inc
adc
jmp
sbb
push
shrb
mov
out
loopne
lds
cmp
and
bound
ljmp
ret
mov
cmc
push
pushf
loopne
jb
jmp
lods
outsl
stc
jge
jo
mov
pop
or
les
addb
sahf
sbb
xchg
add
pop
sub
leave
popa
add
jbe
pop
scas
sub
add
mov
out
or
sbb
inc
push
subb
sub
lods
or
out
into
sub
in
cmp
scas
jecxz
pop
ja
sub
aad
xchg
xchg
in
mov
movsb
cmp
cvttps2pi
lcall
lahf
in
jge
jns
add
ret
ret
scas
dec
and
mov
push
inc
cs
adcl
sbb
daa
mov
dec
in
mov
sub
jecxz
jl
pop
pusha
sbb
pop
cs
jo
pop
orl
or
pop
mov
imul
mov
mov
lds
push
and
lret
pop
into
enter
mov
lods
mov
or
mov
pop
pop
pop
and
nop
lods
sub
sbb
jle
xchg
pop
and
loopne
cs
xchg
push
mov
add
inc
push
data16
shlb
or
and
or
xchg
pop
sbb
jge
leave
jb
push
mov
adc
jge
cs
roll
ss
xchg
jo
sar
inc
xchg
sbb
or
cmp
jl
xchg
dec
shr
inc
inc
mov
in
ja
xor
xchg
add
dec
inc
in
push
add
jle
push
jnp
in
cmp
mov
aaa
mov
std
scas
or
inc
clc
rcrb
cmpsl
repnz
and
test
inc
imul
and
pop
pop
ljmp
xchg
test
xor
mov
push
test
dec
mov
push
sbb
mov
or
fldenv
pop
mov
pop
push
cmpsl
ret
mov
js
or
cmpsb
jb
cmpsb
sub
ss
aas
dec
pop
mov
dec
stos
out
pushw
insb
leavew
int3
lcall
cmp
jo
and
push
fwait
mov
pushl
xchg
fidivl
in
stc
inc
aas
pop
xchg
pop
ss
nop
push
cmp
cmp
xor
push
push
or
dec
pushf
shlb
mov
sub
cmpsb
addr16
xchg
jno
xchg
popa
push
add
pop
dec
dec
jge
dec
dec
pushf
mov
mov
jl
dec
cwtl
sub
dec
cmp
cmpsl
push
ds
pop
cmp
or
es
jae
push
sbb
mov
and
call
adc
or
xor
inc
pop
mov
clc
mov
mov
test
fstpt
int3
jne
or
push
jns
clc
inc
pop
test
ja
push
cmp
pop
adc
cli
popa
arpl
shlb
lret
mov
test
pop
mov
sbb
and
ret
dec
add
repz
je
adcl
pop
imul
push
cmp
repnz
popa
push
rorl
cmp
cmp
ret
xor
inc
sahf
cwtl
mov
pop
sub
pop
sub
sub
xchg
mov
repz
inc
sbb
jp
mov
test
sbb
ds
dec
mov
xchg
in
icebp
dec
es
rol
sbb
les
xor
push
mov
pop
pop
xchg
nop
jle
mov
dec
and
and
sub
adc
jecxz
ljmp
adc
lcall
aas
clc
pop
in
pop
test
push
add
and
or
add
xchg
mulb
pusha
dec
stos
shlb
std
adc
aad
inc
into
or
jno
push
bound
arpl
jne
sub
sub
bound
popf
jo
fs
mov
mov
mov
imul
pop
out
push
cmc
xor
outsb
ret
rcrb
lahf
inc
add
mov
xor
mov
dec
test
movsl
xchg
sbb
test
and
sbb
sbb
mov
dec
ret
jmp
mov
and
mov
mov
iret
bound
or
push
arpl
imul
aam
cld
sub
es
scas
pop
jg
inc
pop
les
or
mov
push
xorb
imul
xor
mov
scas
or
clc
jle
shlb
imul
adc
jmp
into
add
lea
call
std
pop
bound
call
icebp
xchg
repnz
sbb
ficoml
cmp
adc
jl
ret
test
mov
mov
nop
and
push
fdivrp
jne
js
ret
and
pop
jns
scas
mov
aas
fildl
push
in
adc
aas
imul
pop
lods
xor
gs
stc
jbe
push
add
popl
repz
insl
pop
rolb
hlt
lahf
add
xor
dec
push
das
inc
sahf
loop
mov
push
dec
sub
dec
addl
cmp
ljmp
mov
mov
pushf
pusha
lods
mov
inc
addr16
xor
popa
arpl
cltd
sub
lret
pop
xor
test
cltd
xchg
iret
scas
lds
fs
cltd
xlat
loopne
call
add
jmp
shlb
mov
cmpsl
or
cmp
jp
xor
ds
in
push
mov
data16
mov
dec
cmpsb
rcr
fwait
movhps
push
push
mov
push
sub
jns
cmp
leave
addr16
jne
and
pushl
gs
scas
test
jmp
popf
fistl
mov
insl
les
fisubrs
inc
sbb
xlat
enter
nop
adc
mov
mov
jmp
aaa
and
ds
sti
enter
call
imul
shrb
cmp
mov
or
arpl
cmpsl
jns
pop
xchg
push
sub
neg
lods
push
sbb
and
mov
sti
clc
fisttps
xchg
mov
mov
push
cmpsb
inc
rorl
ja
clc
push
ficomps
adc
cs
popa
insl
cltd
jno
loop
cmpb
dec
mov
push
popf
sub
repnz
mov
mov
and
fs
mov
and
mov
mov
mov
inc
cmp
xor
mov
add
js
push
pop
jo
scas
shll
bound
add
inc
jb
fildl
ds
pop
outsl
push
movsl
sbb
xchg
sti
mov
push
addr16
shll
test
xor
pop
fsubr
fwait
dec
fisubrs
xor
push
inc
push
lods
pop
sub
cmp
ja
fistps
xor
movsb
ljmp
mov
jl
jne
repnz
outsl
outsl
cmp
test
xchg
inc
mov
push
call
cwtl
test
loop
dec
cmpsl
mov
dec
push
pop
mov
and
loope
xor
roll
sub
rolb
aam
dec
scas
dec
xlat
xor
sub
arpl
pop
lods
sbb
push
lock
into
hlt
push
add
scas
sub
fadds
mov
sti
jmp
rcr
vpshad
leave
push
fbld
mov
jp
adc
pop
and
xor
pusha
sub
mov
push
cmpsb
add
shl
insb
sub
test
shlb
xlat
sub
mov
clc
fldl
mov
sahf
xor
jle
test
sub
xchg
add
adc
dec
xchg
push
cwtd
cmp
push
pusha
lods
pop
inc
pop
pop
ja
xchg
repz
outsb
xor
js
and
cmp
mov
xchg
mov
mov
scas
ljmp
cwtl
sub
xor
andb
mov
pop
inc
mov
xor
sub
mov
cmp
mov
jb
lahf
xchg
cmp
loopne
sarl
sahf
adc
jb
pop
inc
orb
push
xchg
mov
test
and
scas
dec
imulb
arpl
adc
outsb
dec
insl
outsl
cmp
pop
push
daa
dec
andl
push
lret
xchg
pop
int3
mov
imul
push
mov
sub
mov
cmp
test
sub
sbb
xchg
or
test
sbb
leave
test
lea
dec
inc
inc
repnz
jg
aam
in
mov
in
stc
aad
jle
add
lds
imul
js
mov
mov
sub
fcoms
sbb
push
and
pusha
xchg
add
mov
xorb
xor
gs
and
sarl
jge
outsl
in
test
pop
fisubs
xor
lahf
adc
cli
pop
dec
adc
movsb
arpl
lods
faddl
sub
test
cli
pop
std
test
pop
mov
sbb
lahf
mov
push
push
sbb
push
std
ja
ret
test
dec
ljmp
push
nop
hlt
cmp
movsl
mov
wrmsr
mov
int3
into
adc
push
cmp
sbb
aaa
mov
pushf
leave
hlt
cwtl
jle
sub
decb
dec
or
dec
jmp
mov
cwtl
dec
cmc
push
sbb
roll
lcall
xor
xchg
mov
movsb
popa
fs
adc
loop
outsl
add
imulb
pusha
mov
xchg
mov
push
push
pop
xor
add
ret
mov
jnp
nop
or
fiaddl
mov
subb
imul
xchg
insb
inc
pushf
xchg
dec
mov
pop
sahf
fisubl
inc
addr16
and
dec
push
mov
stc
into
cli
lds
push
and
faddl
arpl
mov
cld
cmp
mov
adc
dec
xor
orl
push
xchg
fmull
mov
and
mov
dec
ljmp
fwait
cmp
jl
mov
jb
aad
and
ret
hlt
sbb
pop
xchg
dec
mov
sbb
push
movl
add
xchg
fwait
rclb
out
mov
mov
lret
jb
iret
jle
mov
test
rcr
stos
sub
lods
hlt
dec
push
dec
cmp
pop
loope
push
xorb
pop
add
les
dec
lahf
pushf
sub
xchg
mov
jg
addl
fsubrs
mov
xchg
clc
add
les
dec
dec
dec
pop
fwait
mov
inc
popf
inc
lret
mov
shll
inc
and
sbb
xchg
push
fdivrl
inc
outsl
push
lds
je
repnz
add
inc
sub
test
shlb
ljmp
inc
mov
or
pop
aam
gs
and
and
orl
stc
fwait
fs
jmp
cs
in
jg
aaa
xor
out
lds
fimuls
ds
lret
scas
cld
pop
pop
ljmp
mov
idivl
fwait
or
and
dec
xchg
xor
fcoms
scas
sti
xor
cltd
neg
jno
dec
push
cmp
data16
dec
lahf
rorl
lds
pop
insb
push
sbb
jnp
stos
das
cs
hlt
xor
inc
add
pop
shll
xor
std
jbe
xchg
stos
push
cmc
mov
sub
out
test
and
push
sub
push
pop
imul
xor
adcl
push
jb
xor
adc
insl
inc
push
xor
jo
jge
mov
mov
lock
dec
jecxz
scas
fnstsw
adc
mov
rcr
insl
pop
adc
es
fstps
inc
add
cmp
cmpb
ss
cmovg
in
pop
nop
movsl
rcrb
sub
lcall
mov
shll
jnp
dec
cld
imul
inc
dec
add
mov
movsl
pop
clc
add
test
and
sub
mov
add
jae
aaa
and
inc
xchg
xor
ss
stos
mov
stc
std
dec
push
adc
mov
cmp
adc
js
cwtl
dec
sarl
jecxz
addr16
push
mov
or
xchg
add
dec
sti
iret
das
jmp
test
pop
rorb
mov
lea
jne
mov
sbb
push
cmp
push
fimuls
cmc
insb
in
cwtl
jp
jb
dec
or
lds
aas
mov
mov
push
jg
sbb
jecxz
dec
jno
leave
jb
fildl
addl
jge
push
test
dec
and
xchg
cltd
xchg
push
add
xchg
inc
sahf
clc
aas
xchg
sbb
test
shrl
push
adc
inc
out
push
adc
fistpll
jbe
add
xor
xchg
jle
push
xchg
dec
bound
add
pushf
sbbb
inc
push
jne
sti
adc
mov
dec
jg
and
jle
jl
sub
mov
dec
jg
outsb
insb
mov
stos
daa
sub
jmp
jle
sarb
push
arpl
xor
negb
incb
pushf
lods
into
push
sbb
sub
mov
popf
sub
scas
pop
call
adc
push
dec
cmc
sub
fadd
add
and
inc
adc
mov
cld
dec
inc
mov
loope
cld
jno
shll
ljmp
xor
mov
or
or
dec
bound
sbb
push
cli
mov
cmpsl
lcall
aaa
lea
sub
pop
push
inc
addps
pop
nop
call
clc
jle
or
push
mov
clc
outsl
dec
sahf
xchg
ds
jle
cmp
stos
popl
rorl
loopne
ret
inc
orb
adcb
sub
subb
ret
je
shlb
outsl
cmp
aaa
adcb
in
jl
jmp
aad
int
pusha
movsb
popf
push
fdivrs
mov
sarl
shr
maxps
xchg
xchg
sub
cmp
aaa
pop
push
mov
sarl
dec
cltd
ret
push
cmp
xchg
jge
inc
adc
stos
dec
inc
jg
lock
cmp
or
ret
pop
mov
push
mov
mov
push
inc
cs
test
dec
or
dec
int
stos
pop
sbb
les
jnp
jne
dec
pop
inc
in
hlt
mov
jecxz
shlb
xor
push
sti
inc
pop
sbb
jnp
insl
aad
in
jp
xor
fdivrs
xchg
mov
jmp
mov
push
push
jo
pop
dec
xchg
aad
icebp
xor
jge
xor
add
jne
inc
jne
jbe
movsb
pop
mov
nop
pop
xchg
pop
shll
stc
call
rcll
ss
inc
movsl
jmp
pop
sbb
jb
cwtl
ljmp
fisttpll
frstor
mov
mov
xchg
imull
aaa
mov
mov
je
xor
push
mov
movsl
jg
fsubl
mov
sarb
pop
dec
std
push
nop
iret
out
leave
cltd
cmpl
push
add
pop
lea
lods
faddl
mov
adc
cwtl
ja
out
clc
inc
stc
push
sahf
cmp
stos
in
mov
dec
adcl
fisubrs
add
lock
and
mov
inc
push
or
xor
cmp
mov
cwtl
dec
fsubl
aas
rcll
fdivrl
push
stc
scas
pop
std
es
xor
pop
pop
push
pushf
loop
pop
stc
scas
pop
mov
ret
or
add
cmp
xor
cmpsl
cli
pop
call
outsb
inc
add
xor
imul
call
xor
mov
lods
sbb
imulb
shlb
es
divb
jg
jnp
adc
sbb
jecxz
jle
adc
sub
shlb
pop
push
dec
enter
jae
sub
sarl
inc
inc
dec
cmp
sub
int
inc
test
scas
andb
add
loopne
mov
and
andb
pop
int
lahf
or
mov
and
pop
cmp
inc
cltd
jle
lds
inc
mov
call
movsl
add
popf
fisubs
les
or
or
scas
test
lods
addr16
aaa
push
xchg
movsb
inc
sub
jle
out
pop
mov
jle
addb
jl
mov
jp
fs
jo
movsl
or
mov
into
or
negb
lods
xor
mov
jl
pop
jle
imul
and
out
and
inc
das
mov
ficoml
push
aam
cmp
nop
js
push
or
cmp
arpl
lret
aad
sub
sbb
xchg
push
push
fstp
xor
and
mov
sbb
sti
mov
sbb
ja
daa
jge
push
dec
cltd
imul
test
mov
xchg
xor
push
addr16
push
stos
out
jle
shll
jge
jmp
pusha
fsubl
pusha
xchg
jg
add
lea
jbe
iret
pop
dec
xor
push
pop
inc
inc
dec
jnp
rclb
push
outsl
xchg
mov
jmp
jecxz
pop
pop
int3
mov
insb
ret
js
aaa
scas
bound
ds
outsl
cmp
mov
push
imul
orl
sub
pop
ret
push
inc
mov
sbb
jo
das
into
pop
inc
xchg
sub
or
leave
push
mov
pop
pop
mov
in
frstor
dec
out
roll
pop
inc
dec
mov
xor
mov
mov
stos
pop
push
cmpsb
xchg
scas
mov
or
imul
out
push
cli
add
cmpl
xchg
cmpsb
add
pop
adc
xor
mov
and
ret
mov
xchg
sbb
out
bound
xchg
jae
lods
inc
cli
stos
jmp
cmp
sub
jne
outsl
test
repz
xor
in
fidivrl
in
inc
cmpsl
jno
and
xlat
sub
movsb
aaa
jae
outsb
lea
sarb
lahf
cwtl
xor
cmc
testb
fwait
mov
mov
pushf
jle
inc
fadd
ss
lock
test
rorl
push
pop
xchg
mov
ret
ficoms
je
fucom
je
sub
insb
cmova
xchg
les
in
lock
sbb
inc
outsb
add
test
sahf
sbb
xchg
push
or
sub
lcall
jno
stos
mov
repnz
xor
shlb
pop
cmpsb
sbb
fdivrl
in
aaa
fs
inc
sbb
or
adc
scas
cmp
nop
push
ljmp
xor
mov
sub
js
or
xchg
test
sbb
shlb
and
mov
push
int3
add
xor
movsb
inc
cmp
inc
enter
or
xchg
inc
add
pop
inc
leave
lea
jp
adc
insb
push
mov
sub
adc
adcl
mov
jo
pushf
mov
push
rorb
cmp
pop
lods
movsl
jl
mov
xor
sahf
adc
xchg
push
dec
mov
fisttps
imul
mov
fsubr
leave
bound
sbb
test
xor
subl
lods
fiadds
inc
pop
scas
sub
lret
mov
or
cmpsl
pop
loope
mov
jp
sub
pop
inc
push
fyl2x
sub
inc
sbb
sub
out
xchg
pusha
jbe
cmp
movl
push
out
adc
aam
push
push
movsb
in
jbe
sahf
mov
daa
sbb
test
lock
gs
int3
inc
push
pop
scas
scas
pop
sub
dec
pop
push
movsl
cs
xchg
xor
inc
pop
dec
mov
inc
jle
push
xor
mov
push
mov
ret
xor
sbb
sarl
aad
mov
data16
pop
aas
js
xchg
mov
pop
sbb
add
pop
pop
cmc
call
dec
dec
mov
sub
and
dec
incl
and
std
adcl
fldl
clc
fisttpll
in
jg
ret
dec
push
lret
or
mov
sbb
sbb
mov
jmp
and
inc
clc
fnsave
in
sbbb
scas
and
or
sub
pushf
push
stos
inc
pop
pop
icebp
mov
add
xchg
les
in
cmc
jl
in
mov
or
je
mov
mov
and
dec
mov
je
add
iret
pop
inc
sarl
pop
inc
mov
lea
repz
outsb
mov
aas
cmp
inc
push
pop
mov
ss
sbb
and
pusha
jb
adc
pop
mov
test
fdivl
das
int
mov
repz
mov
mov
popa
push
pop
adc
jns
jle
or
shrl
sub
loope
sbb
mov
fwait
pop
test
arpl
cs
push
dec
nop
sbb
fldcw
pop
mov
sub
xlat
jne
imul
clc
loopne
test
outsl
and
sbb
test
shrb
and
in
sub
fucomip
popf
jno
lret
dec
mov
lock
pop
incl
or
mov
and
jp
icebp
pop
mov
pop
lret
mov
shlb
sub
sarl
sub
cmc
scas
cmp
fs
loop
and
sub
xor
test
inc
fs
mov
mov
dec
mov
mov
out
scas
mov
dec
cs
sub
jle
das
into
dec
sti
sub
rcrl
adc
inc
adc
mov
sbb
jmp
pop
mov
mov
icebp
fadds
push
push
or
mov
or
mov
xchg
sbb
push
sub
mov
mov
out
adc
loopne
scas
dec
jecxz
xor
int
sbb
push
popa
lret
aaa
mov
ret
ja
add
push
int
push
lahf
cwtl
dec
dec
cld
sbb
test
insl
mov
inc
std
mov
test
inc
dec
fxch
daa
xchg
es
call
push
rolb
ss
push
mov
sub
xchg
sarl
fidivl
hlt
xchg
ljmp
inc
sbb
mov
mov
push
icebp
xor
sbb
sub
sbb
xchg
push
mov
das
xlat
mov
adc
pop
test
push
sub
and
mov
fisubl
test
pop
cli
push
insl
mulb
mov
lret
add
add
out
pusha
addb
xor
sbb
mov
dec
xor
inc
scas
fs
clc
pop
dec
pop
lods
jbe
xchg
dec
jb
fbld
popa
fdivrl
jl
orl
pop
daa
adc
shlb
pop
jns
adc
adc
stc
rcll
and
fdivrs
mov
sub
stos
shrl
pop
addl
lea
jge
add
ret
daa
cmp
pop
inc
leave
dec
bound
mov
dec
mov
cmp
jb
jo
in
nop
mov
jnp
cmc
and
lahf
jecxz
insl
ret
jbe
mov
adc
mov
iret
ret
inc
mov
orl
stos
dec
addr16
jne
imull
or
xor
std
data16
aaa
jle
jmp
enter
xchg
int3
repz
and
stc
mov
pushf
gs
inc
mov
or
pop
pop
or
repnz
pushf
mov
aam
inc
andb
lods
cmpb
xor
jle
sbb
mov
jo
scas
addr16
aam
test
push
mov
or
mov
dec
sub
mov
push
mov
add
push
lea
lock
dec
pop
mov
mov
std
and
push
testb
mov
ljmp
ljmp
adc
xchg
push
and
sbb
sub
shlb
cmp
out
je
fldt
xor
dec
imul
ret
add
sub
aam
jge
pop
lcall
add
push
push
push
adc
stos
jb
mov
xchg
pop
arpl
mov
pop
cmp
stos
add
cli
add
adc
imul
dec
sbb
or
mov
mov
xchg
add
pusha
push
add
and
inc
lock
mov
sti
and
out
mov
pop
inc
or
leave
pusha
sbb
mov
mov
mov
pop
lret
mov
inc
cmp
xor
push
xchg
jo
jb
dec
out
lods
jae
inc
push
mov
jae
mov
cs
xchg
xorl
push
dec
mov
mov
sbb
mov
add
test
rclb
mov
pop
mov
into
scas
xlat
mov
adc
cli
enter
cltd
lods
adcl
jmp
jbe
daa
out
push
imul
shrl
mov
fidivrs
mov
out
and
mov
or
sub
inc
jge
pop
xor
push
sbb
out
sub
sub
test
mov
push
jmp
loopne
les
pop
sub
pop
enter
mov
mov
lock
loop
push
int3
mov
pop
int3
psubb
xchg
pop
or
xchg
addr16
in
xorb
movsb
negb
or
dec
mov
fiaddl
sbb
mov
dec
sub
inc
sbbb
jl
xor
ss
leave
iret
sbb
lahf
dec
mov
push
leave
mov
xlat
stc
fbstp
mov
rorb
jmp
pop
imul
shlb
js
pop
push
xchg
push
push
cmp
pusha
adc
lcall
ret
out
jns
filds
adc
fnsave
into
sbb
loop
inc
mov
dec
dec
mov
jg
mov
pop
lret
jnp
shlb
js
mov
xchg
dec
inc
lods
xor
mov
cmp
cmc
scas
shrl
jno
pop
ja
cmc
jp
andb
push
iret
addr16
mov
inc
cwtl
dec
ret
sub
das
cltd
in
in
pushf
mov
sub
ds
loop
cmp
mov
jne
push
out
lahf
cmpl
inc
adc
mov
sbb
mov
xchg
andb
push
jl
les
adc
subb
icebp
rcrl
push
shll
jg
stos
cs
xchg
pop
dec
push
sbbl
cld
icebp
jg
fdivrl
cmpsl
adc
in
sub
insl
inc
mov
mov
lahf
fsubs
lea
adc
pop
xor
jno
dec
dec
xchg
pop
cs
sbb
mov
jmp
aam
mov
pop
push
mov
push
les
sahf
sub
test
inc
test
pop
fmuls
adc
jp
adc
mov
les
pop
xchg
mov
fadd
bound
cmpsl
push
jno
roll
insb
jl
sub
mov
sub
mov
mov
js
js
dec
xchg
ret
dec
dec
adcb
int
mov
mov
jo
mov
ja
out
xor
push
mov
lods
cmp
shrb
pop
repnz
lcall
aas
das
enter
cmpl
enter
ja
sub
or
pop
stos
sbb
movsb
cld
js
stos
out
in
stc
xlat
jl
or
pushf
lods
inc
pop
jge
ja
popa
jbe
shlb
popa
mov
mov
push
dec
movsb
fwait
cmp
pop
repz
push
inc
push
idivl
cmp
sbb
pop
push
jl
aam
mov
pop
dec
jb
jns
or
or
mov
js
dec
es
mov
mov
pop
popa
inc
jae
push
jbe
shlb
arpl
ljmp
xor
sub
movsb
jmp
ljmp
mov
or
dec
xor
pusha
push
cwtl
jne
xchg
repz
mov
jp
mov
fidivrs
inc
xchg
mov
int
cmp
xor
test
cmp
or
mov
sub
mov
int3
xlat
and
sub
enter
ja
and
lods
jns
jb
push
ja
push
xchg
jbe
int3
dec
jle
sbb
mov
iret
lods
stos
dec
push
dec
insb
pop
fisttps
sbb
lea
dec
ds
subb
push
mov
andb
and
cmc
cwtl
and
ret
mov
add
and
xor
sub
push
outsb
std
test
jg
push
dec
das
pop
pop
sti
fldt
frstor
and
cwtl
cmp
mov
iret
cmp
mov
test
fwait
aam
pop
in
push
mov
gs
stos
add
pop
jbe
int
sbb
push
clc
outsl
aaa
jae
jns
or
sbb
inc
pop
xchg
push
rcrb
hlt
lods
sub
sbb
sahf
mov
in
les
xor
dec
mov
shr
pop
pop
pop
ja
adc
inc
fs
sbb
leave
fwait
decb
cltd
jb
rcll
pusha
xchg
sbbb
pop
pop
pop
inc
or
adc
shlb
and
pop
sbb
in
mov
out
dec
pop
or
call
lahf
mov
dec
mov
js
sbb
test
mov
mov
adc
ficoms
inc
pop
mov
mov
xchg
jnp
mov
dec
aam
fnstsw
insl
ret
sbb
mov
mov
pop
inc
mov
mov
into
push
clc
sbb
scas
loope
inc
js
ljmp
xchg
stos
cmp
xchg
and
lret
and
cmp
push
dec
adc
imul
cmp
add
xchg
int3
arpl
mov
add
sti
mov
push
call
test
ret
cmpsb
mov
insl
gs
das
mov
aaa
fwait
dec
mov
clc
sub
or
sub
cltd
cmpb
pop
inc
mov
call
xlat
stos
xor
sbb
xchg
or
mov
gs
imul
aaa
pop
push
pop
es
xor
mov
dec
and
int3
or
repnz
cmp
imul
out
stc
mov
add
inc
jmp
or
mov
jo
jle
jb
push
mov
negb
lock
adcl
lcall
xor
adc
outsl
inc
stos
inc
les
dec
or
and
mov
daa
sbb
pusha
negl
dec
push
loopne
push
in
fs
inc
jo
loop
xor
adc
pusha
repnz
mov
jbe
loope
pop
repnz
xor
cmp
mov
push
stos
fs
sub
jo
cmp
std
fdivl
lahf
add
xchg
pop
jb
mov
lret
ja
lret
mov
xlat
dec
int3
and
cld
lahf
rorb
lret
push
adc
mov
out
hlt
pop
pop
jo
xchg
push
pop
mov
cs
push
pop
divl
mov
es
xchg
xchg
shrl
adc
fnstcw
mov
ret
mov
lods
adc
out
fstpl
cmc
jno
sbb
dec
jmp
mov
movsl
add
daa
data16
mov
test
xchg
or
bound
sahf
xlat
cmp
insl
adc
ds
ret
mov
fsubrl
mov
add
into
push
adc
push
dec
scas
pop
adc
idivb
add
cmpsb
cmpsb
adc
test
xchg
popl
jp
rorl
pop
cwtl
int
test
mov
rol
aas
and
dec
push
or
in
ret
xorl
mov
pusha
mov
pop
addr16
pop
xchg
sbb
shlb
mov
inc
mov
mov
mov
sbb
xchg
pop
xchg
or
xchg
iret
dec
and
cmp
ja
mov
pop
mov
jo
outsb
imul
xchg
rcrl
neg
xchg
aad
shl
xorl
lret
rolb
cmpsl
push
sahf
stc
sub
hlt
inc
sub
les
cmp
pop
test
sahf
pop
test
push
adc
outsb
pop
jb
daa
and
pop
popl
int
and
ljmp
lods
sub
divb
inc
pop
xchg
add
lcall
das
fldt
xor
xchg
adc
movsb
inc
sbb
test
fucompp
cs
xchg
insb
mov
adc
popa
mov
aad
push
pushf
and
jb
jmp
mov
in
rorb
xlat
idivl
or
pop
call
fnstsw
adc
dec
shlb
mov
cmp
mov
sub
add
cmpsl
ljmp
cld
xchg
xlat
adc
scas
enter
jmp
aam
clc
dec
jae
je
fdiv
cmpsl
cld
sbb
iret
aaa
incl
mov
sub
loope
stc
pop
enter
jae
pop
add
mov
add
sub
fcoms
comiss
push
dec
aad
js
xor
mov
dec
pop
jge
roll
xchg
add
pop
mov
sbb
mov
mov
cmp
adc
mov
outsb
insb
mov
addr16
jg
mov
mov
jmp
gs
movsb
jle
movsbl
stc
fstpt
pop
fwait
insb
jno
sub
xchg
adc
dec
xchg
test
fidivrs
mov
cmp
nop
adc
mov
sbb
lret
mov
jno
sahf
mov
cmp
std
nop
fdivl
cli
jo
ret
popf
int
mov
push
scas
adc
addr16
add
cld
dec
ja
inc
xchg
test
xchg
lods
data16
mov
daa
inc
cwtl
xor
loope
shrl
jecxz
jge
xor
or
stos
push
aas
ret
out
and
in
jge
loopne
mov
xor
cli
mov
test
data16
pushf
add
inc
and
js
inc
shlb
sub
adc
push
js
push
test
mov
mov
std
lock
dec
in
or
out
outsb
or
les
pop
mov
jb
mov
out
xor
iret
inc
faddl
adc
pop
lret
and
pusha
hlt
imul
mov
ror
hlt
iret
outsl
push
scas
jbe
cld
push
or
sub
repz
xchg
je
mov
lods
cmp
ret
orl
inc
mov
popf
mov
push
stc
sbb
cmp
adc
xchg
jbe
sub
das
cmp
jo
or
std
ds
adc
pop
pxor
push
mov
cwtl
aaa
adc
test
scas
xchg
int3
out
xchg
jno
cltd
xchg
insl
ret
pusha
add
push
or
cmpsl
cmp
cmp
cmp
ret
cmc
mov
arpl
xlat
test
hlt
xor
dec
sbb
scas
ret
cltd
fisubl
mov
lret
addr16
std
aaa
call
scas
test
push
dec
pop
fmuls
sbb
aam
pop
adc
push
cmp
aam
es
jno
es
dec
jl
jns
mov
mov
jg
or
fildl
sarl
lea
mov
and
jae
pusha
mov
mov
stos
sub
subl
dec
adc
cmp
jl
aam
das
jnp
jecxz
pop
mov
faddl
mov
cmpb
push
test
sti
push
push
adc
mov
cmc
mov
rdpmc
sbb
lret
xor
scas
loop
jb
pop
jb
lea
mov
pop
add
sbb
mov
push
push
ret
repnz
inc
sub
add
cmp
push
and
stos
xchg
les
stos
stos
shlb
dec
mov
mov
movsl
sbbb
adc
inc
loopne
hlt
pop
lcall
cmc
repnz
inc
pop
xchg
mov
push
push
mov
pop
mov
pop
sbb
push
rcr
pop
sub
inc
dec
sbb
mov
add
mov
jg
outsl
mov
cmpsb
cmpsl
and
push
daa
mov
xchg
call
faddl
mov
ljmp
pop
les
sub
js
mov
mov
mov
test
adc
mov
in
decl
test
xchg
dec
add
sbb
fcompl
and
jp
cld
mov
pusha
imul
daa
inc
dec
outsl
push
lods
mov
push
mov
cli
jnp
test
sub
push
push
jmp
nop
jb
loope,pn
adc
push
enter
lcall
outsl
cmp
adc
sbb
aas
popf
rcrb
lea
mov
cs
pop
xchg
push
lods
push
adc
pop
and
xchg
lcall
lret
mov
int
loop
in
inc
mov
mov
mov
xchg
xchg
xchg
pop
rcl
test
clc
push
outsb
std
dec
cli
jo
sahf
mov
stos
and
test
arpl
pop
add
jmp
mov
xchg
mov
mov
inc
xor
sub
test
mov
pushf
aam
arpl
test
rcrb
mov
and
hlt
push
inc
adc
nop
jne
ret
jns
mov
jns
ja
repnz
aaa
xor
pop
fnstsw
hlt
dec
sub
mov
adc
mov
out
fldt
xor
data16
mov
sub
testl
rcrl
dec
inc
or
xchg
shrl
or
cmpsl
nop
nop
rcll
aaa
dec
xchg
imul
jae
jns
mov
rclb
icebp
fs
jns
lret
sub
es
fwait
int3
test
rolb
sbb
jp
jne
sub
ficoml
cmp
jmp
inc
xor
xor
insb
lock
lcall
adc
xor
addr16
lahf
in
idiv
dec
xor
sub
jle
pop
nop
push
cld
rolb
sbb
pop
mov
sbb
jns
dec
mov
jg
imul
xchg
pop
push
call
popf
push
sti
fnsave
or
call
or
push
shll
pop
xor
xor
sub
fwait
lahf
dec
stc
jge
test
jecxz
push
sub
je
jo
idivl
adc
je
out
sub
imul
mov
pop
out
mov
imul
jg
push
stc
dec
inc
xor
mov
int3
add
adc
and
jbe
test
in
fisubl
fdivs
mov
outsb
rorl
in
outsb
pusha
jno
xchg
jb
mov
mov
adc
shlb
daa
or
stos
xchg
jno
push
scas
fs
inc
mov
adc
dec
mov
and
pushf
adc
sub
test
cmp
stos
cs
or
add
stos
push
xor
test
mov
insl
imul
dec
aas
jecxz
cwtl
int
into
imul
insb
jge
xchg
sub
cs
cmp
dec
add
pop
call
in
lcall
ljmp
push
lret
ss
dec
mov
clc
xor
lods
shr
jp
orl
mov
ljmp
loop
sbb
adc
xchg
adc
outsl
xchg
mov
into
fidivrl
jle
aaa
repz
push
int3
arpl
mov
or
jbe
dec
jmp
stos
xor
mov
ret
push
sbb
negb
std
or
pop
fwait
insb
into
dec
pop
decb
fstps
add
pushf
les
stos
test
pop
in
test
pop
ja
xorb
movsl
xchg
fstpl
sub
xchg
cmpsl
add
arpl
jecxz
ret
sub
repz
fwait
mov
gs
add
jge
inc
push
dec
add
pop
mov
and
mov
sbb
pop
lea
mov
dec
fdiv
dec
pop
mov
adc
xchg
mov
jle
inc
shrb
outsb
lahf
in
and
ja
jne
ror
in
popf
clc
jo
orb
push
imul
pop
or
decb
outsb
fwait
incl
mov
dec
jge
repz
imul
test
and
xor
cmpsl
stc
iret
pop
loope
xchg
ret
cmp
inc
pop
dec
sub
sbbl
cmp
mov
xlat
inc
shll
pop
jl
in
pop
push
xchg
or
sub
xor
sbb
mov
and
lcall
mov
push
pop
inc
shr
adc
xchg
das
fidivrs
add
cld
ds
pop
jns
add
nop
imul
fdivr
dec
and
mov
adc
stos
push
mov
movl
mov
adc
ss
stos
cmp
sti
loopne
lcall
inc
mov
push
cli
add
jp
jbe
sub
lock
mov
sub
aaa
inc
dec
clc
push
inc
mov
xchg
or
cmp
pop
push
dec
std
add
cmp
lods
cmp
add
repnz
dec
push
sahf
fnsave
sbb
jg
aam
outsl
dec
xor
inc
inc
sbb
adc
adc
bound
pop
push
psubw
inc
mov
into
cmpsl
ss
fstpt
push
je
push
mov
dec
push
or
sbb
adc
sub
push
fidivs
mov
mov
cmp
or
adc
scas
cmp
push
mov
jge
adc
shll
jb
popf
jmp
pop
sbb
stos
int3
dec
in
and
xchg
clc
xor
faddl
adc
jle
out
shlb
dec
loop
ss
out
fdivs
sarl
push
adc
pushf
mov
pop
xchg
mov
push
fcoml
inc
lret
xchg
sub
fs
cltd
mov
enter
gs
scas
das
lock
cmp
push
insl
pushf
push
inc
pop
mov
jnp
push
fsub
aam
pop
stc
mov
pushf
cmpsb
ficompl
sbb
andb
xor
jp
or
out
pop
sub
fstpl
add
push
inc
pusha
test
mov
push
cmp
lret
and
cs
adc
fwait
or
inc
dec
jmp
es
mov
pop
push
push
btr
push
xlat
mov
test
iret
push
inc
adc
sub
mov
nop
push
jmp
adc
sbb
scas
testb
and
int
jmp
ljmp
aam
mov
cmp
add
adc
sub
sbb
sub
out
popa
mov
mov
adc
stc
sarl
mov
adc
push
inc
stc
sbb
mov
rcrl
mov
jbe
mov
push
dec
and
push
xlat
pop
inc
mov
mov
es
sbb
mov
xlat
lock
popf
xor
xor
mov
and
jae
xchg
test
movsl
ja
stc
rol
inc
dec
or
mov
xor
jecxz
js
jp
add
mov
testl
sub
out
mov
lret
xlat
and
push
and
shrl
fldenv
mov
mov
idiv
loope
pop
sti
adc
fisttpl
iret
pusha
jns
test
stc
jo
jge
xchg
mov
es
or
loopne
xorb
leave
lds
lods
pushf
lea
scas
in
pop
hlt
rcl
mov
nop
xchg
jnp
mov
sarb
sub
sub
or
rcll
push
cmp
sub
and
xor
pop
xor
stos
lock
ret
lret
sub
push
jle
or
cmp
in
fistpl
sub
inc
outsb
push
int
add
js
cmp
fwait
sub
jbe
push
mov
add
sbb
jmp
jge
dec
xchg
jle
adc
dec
lret
xchg
pushf
xchg
cld
shl
loop
cmp
in
out
and
push
ficompl
sub
jno
mov
repz
push
sbb
or
or
dec
sar
sub
ljmp
rcrb
pop
adc
xchg
sub
push
out
cmp
iret
std
daa
push
add
gs
mov
lods
lods
dec
or
pushf
popa
mov
pop
mov
mov
xchg
mov
or
aas
mov
imul
test
fwait
cli
pushf
add
icebp
sbb
pushf
inc
add
mov
scas
icebp
or
mov
rcll
lcall
pop
repz
imul
mov
push
jle
mov
dec
cmc
shlb
dec
xor
ret
out
cmp
ja
out
mov
cmpsl
outsl
imul
pop
js
pop
sbb
add
int3
dec
int
pop
fisttpl
shrb
push
ud1
rcll
scas
fmul
lcall
cmp
push
das
xchg
sub
sub
lock
rcr
adc
pop
gs
mov
or
int3
jge
in
lcall
int3
subl
push
dec
dec
mov
xchg
sbb
daa
out
int3
push
push
xchg
sub
cmp
aam
cmp
xchg
dec
mull
push
push
add
dec
cli
xchg
xchg
push
cmp
pop
popf
dec
movsb
and
lods
daa
sbb
xor
adc
leave
int
add
fdivrs
addr16
dec
mov
or
fcompl
add
push
xor
out
push
fstpt
cmp
lret
mov
mov
imul
cmp
cwtl
movsb
xlat
mov
cmp
test
jmp
pcmpeqw
scas
sbb
push
jno
cmp
lret
dec
leave
xor
out
pop
inc
adc
test
in
repz
dec
out
test
pop
adc
ja
out
mov
clc
aas
shrb
push
pop
add
dec
les
xchg
jno
push
cs
mov
lret
hlt
push
push
sbb
push
dec
xchg
sbb
sbb
pop
sub
sub
push
inc
xchg
mov
cmp
int3
adc
cltd
std
xor
cmp
jg
xor
dec
cld
xor
repnz
sar
test
adc
sbb
cmpsb
fnstsw
mov
add
xor
cli
hlt
sbb
mov
push
ror
cmp
cmp
ss
mov
cmp
jne
pushf
dec
mov
push
cmp
repz
lahf
jge
push
stos
call
out
push
jnp
and
lods
xchg
dec
addr16
xchg
bound
or
cmp
and
adc
fisubl
xchg
push
out
in
xlat
aas
ficoml
add
mov
mov
mov
adc
mov
mov
clc
shrb
in
sbb
insb
mov
fwait
dec
mov
dec
inc
xor
mov
mov
aad
insb
inc
adc
adc
cli
test
add
outsb
xchg
int3
mov
push
shrl
adc
push
xor
test
fcmove
gs
cmc
pop
shrl
mov
imul
pop
and
pushf
sti
mov
and
iret
cmp
mov
and
pushf
jb
out
dec
mov
out
adc
outsl
adc
cs
call
push
inc
xlat
pusha
xor
push
les
jae
adc
mov
mov
pop
push
jo
push
fisubrl
sbb
or
popl
cwtl
push
ja
in
sahf
jno
adc
insl
push
xor
shll
stos
push
add
lods
sub
je
adc
cmp
push
cmpsb
test
call
adc
adc
xchg
mov
cmpsb
lea
out
lret
pop
pop
mov
cli
mov
aaa
lret
jge
adc
inc
shl
icebp
dec
js
or
ss
aaa
fucomip
and
adc
mov
jecxz
rcrl
out
and
iret
pop
cs
xchg
popf
push
and
push
je
mov
pop
or
cmp
xchg
jbe
les
ror
jbe
xchg
dec
gs
xchg
push
sahf
cmp
sbb
push
sub
push
cmp
push
mov
out
mov
mov
jb
lock
orb
mov
push
ficompl
cmp
sub
dec
sub
imul
or
push
aas
fstps
and
mov
mov
jb
xor
or
nop
out
lret
push
mov
sbb
ds
addr16
popf
pop
rcl
push
out
cli
mov
cmpsb
cmp
and
adc
sbb
cmp
imul
call
or
cmp
cltd
imul
cmp
mov
push
lods
and
arpl
leave
sub
xor
test
jmp
sarb
cmp
sub
cmp
push
lret
imul
das
jb
push
and
push
mov
and
pop
xlat
outsb
nop
xlat
dec
ret
mov
or
push
psubusw
xorl
cmp
pand
push
imul
sahf
push
push
sti
cmpsl
cmp
das
add
lods
aas
adc
mov
and
fcomps
add
out
cmp
aam
pop
sahf
push
and
jo
sub
pop
sbb
icebp
mov
cmp
js
and
aaa
cmp
xor
dec
sbb
movsl
jo
or
adcl
fldl
or
jo
and
repnz
in
jb
xor
fwait
push
clc
jb
cmpsb
int3
sti
das
notl
cmp
mov
dec
push
inc
dec
js
sub
dec
mov
out
flds
movsl
std
pop
sbb
mov
mov
cmp
mov
cwtl
inc
pop
ret
or
cld
pop
xor
push
aas
lods
stc
adc
jno
xlat
fwait
incb
pop
push
in
sahf
mov
jae
loopne
lahf
out
inc
bound
ds
sahf
lods
dec
xchg
loope
out
lret
pop
mov
inc
jmp
js
sub
dec
imull
ds
adc
outsb
jbe
pop
mov
outsl
cmp
mov
sbb
cmp
into
in
in
aaa
sbb
adc
push
or
adc
push
xor
xchg
sbb
fsubrs
lret
repz
or
fnstsw
mov
int3
cmp
fwait
call
imulb
aaa
dec
mov
adc
inc
jb
inc
imul
jp
fildll
cmp
ret
mov
ret
out
mov
mov
cld
test
jne
dec
into
pop
sbb
inc
aas
sahf
ss
imul
dec
jb
and
mov
cmp
add
jbe
scas
cmp
push
cwtl
outsb
ret
test
xor
xchg
sti
lods
mov
pop
or
mov
int3
xor
aad
and
outsb
adc
cmc
bound
cmp
scas
pop
xchg
insb
jmp
aam
pop
incl
adc
cmp
popf
cs
lret
mov
inc
rclb
cmp
scas
clc
icebp
xlat
shr
clc
cmp
popf
push
cmpsl
jle
sub
mov
arpl
sbb
test
lea
les
or
fcomps
lahf
aad
lods
movsl
scas
xchg
mov
icebp
push
cmpsb
sub
cmp
add
and
push
cmp
mov
addr16
enter
jae
aas
lret
lods
pop
aas
data16
push
jae
cmp
jno
jne
push
rcrl
mov
es
jo
adc
aad
and
out
hlt
mov
pushl
jmp
test
push
loope
adc
shrl
std
popl
test
lods
pusha
pop
dec
neg
mov
js
addl
js
test
outsb
sbb
ret
ljmp
xor
cli
lret
ret
xchg
push
ljmp
fcomi
cmc
or
cli
push
push
aas
insl
scas
jecxz
les
hlt
or
int3
negl
jmp
cld
xor
sbb
in
cmp
fbstp
imul
xor
rcll
inc
pop
jg
sbb
dec
ljmp
push
push
sbb
mov
mov
cmp
sahf
xor
je
cs
leave
dec
sbb
push
fs
mov
and
sub
or
jo
push
jno
insb
dec
aaa
adc
rcll
sbb
sbb
cmp
lods
jo
test
jmp
mov
aaa
dec
push
in
stos
cwtl
pop
mov
fimuls
cmp
xchg
loop
outsl
xchg
orl
or
test
xor
inc
pushw
fistpl
repnz
mov
and
mov
in
xchg
pop
fs
adc
enter
jg
ss
jbe
cmp
mov
adc
jno
je
dec
insl
mov
cmp
stos
or
mov
repnz
or
pop
shll
push
rep
stos
and
ds
sbb
ds
cmp
adc
mov
bound
jg
aas
in
je
pop
xchg
cmp
insl
or
sub
adc
sbb
sbb
xor
cmp
cmp
outsl
notl
push
in
dec
or
sarl
xlat
stos
lret
mov
das
sbb
in
add
jle
mov
push
or
mov
sub
adc
dec
shrb
mov
mov
jmp
clc
and
push
lcall
jns
inc
addr16
dec
in
test
fiadds
in
sbb
stos
arpl
cmpsb
cmp
setle
in
sbb
inc
xchg
cmp
insl
iret
aam
adcl
adcl
les
jne
mov
in
out
or
sub
mov
add
mov
jge
mov
das
xchg
adc
adc
pop
clc
pop
dec
pop
stc
outsl
cltd
push
leave
sbb
xchg
add
cld
test
out
add
jb
jp
ljmp
ficomps
jmp
pop
cltd
test
or
sub
ret
add
pop
stos
call
mov
or
mov
imulb
es
add
mov
xchg
inc
ret
inc
mov
mov
dec
outsb
xor
int
sti
shll
clc
cmp
shll
mov
pop
paddusb
push
sbb
movsl
jmp
adc
imul
aam
cmp
dec
ds
sub
xorl
push
inc
dec
or
dec
insb
or
push
adc
mov
xchg
inc
imul
inc
imul
test
or
sub
cmpsb
xorb
xor
jae
in
and
mov
sub
iret
push
cmp
mov
xorb
outsb
xchg
mov
stc
call
fstpl
enter
and
and
xlat
push
test
mov
jno
pop
stc
mov
fistl
jmp
sub
repz
outsl
push
aaa
js
les
and
stos
lock
aam
out
sbb
aam
mov
mov
movsb
mov
dec
mov
popf
add
jmp
push
call
arpl
dec
dec
into
and
pop
xor
rorb
mov
mov
cmp
lret
pop
push
mov
cld
pop
faddp
mov
mov
scas
dec
ds
jle
dec
int
add
enter
sub
push
addr16
leave
lret
push
pop
xchg
pop
fs
dec
and
xlat
lock
movsb
mov
mov
dec
outsb
aam
repnz
les
inc
jge
aaa
fs
inc
outsl
pusha
lret
pushl
mov
push
cmp
loope
push
pop
push
push
call
pop
push
addb
jo
or
aas
test
aaa
cmp
inc
mov
stc
in
cs
mov
aam
push
ss
pop
imul
sbb
or
imul
ds
jge
ljmp
sbb
mov
stos
mov
movsb
aam
push
adc
cwtl
addr16
jae
push
lahf
pop
lea
cmp
sub
mov
sub
inc
scas
inc
pop
aas
push
adc
sbb
out
insb
push
scas
dec
mov
neg
xor
scas
xor
mov
adc
mov
iret
lret
dec
mov
push
sub
addr16
sbb
lret
cmpsl
xchg
adc
add
mov
xchg
pop
aaa
or
cmp
or
jge
fisubrl
or
or
add
test
xlat
cmp
pop
das
xor
jne
fisubl
xor
push
imul
fbstp
pop
jb
or
jo
sbb
jno
stos
sub
outsb
testb
les
push
sbb
shrl
ds
fidivl
mov
call
cmp
into
cmp
push
add
leave
sti
iret
xchg
popa
inc
repz
ds
test
inc
ficomps
adc
xor
test
clc
add
lcall
jge
xlat
lret
pop
cltd
das
mov
add
push
push
out
jno
daa
pop
mov
adc
sahf
jle
add
loopne
mov
in
and
call
push
jp
pop
dec
aas
cmp
jp
push
sub
in
jp
cmp
pop
sub
adc
test
jg
negl
inc
test
insb
dec
fcompl
int
ret
push
ljmp
pop
out
jg
and
dec
bound
insl
mov
ss
mov
xlat
fcoml
push
mov
push
outsb
xlat
cmp
mov
in
imul
sbb
stos
leave
and
jne
cmp
cmp
mov
push
dec
jle
inc
jbe
adc
and
push
aaa
mov
outsl
push
add
fs
add
insl
sbb
jne,pt
xor
or
jno
cmp
mov
xchg
iret
inc
mov
aas
lret
pop
ss
lods
out
mov
cmp
in
or
in
fs
mov
scas
sbb
enter
pop
mov
mov
sub
xor
push
popf
cs
xchg
aaa
pop
movsl
outsb
xor
jae
sbb
mov
sti
sbb
push
fsubrs
out
jb
push
xchg
jno
shl
pop
outsl
sbb
xchg
cmp
cmp
outsl
jmp
bound
repz
scas
dec
mov
lea
pop
ss
mov
xor
lret
aas
aad
inc
inc
outsb
xchg
add
sbbl
or
addb
pop
push
push
jb
lock
in
mov
mov
ds
lret
or
fidivrl
mov
idivb
push
cli
mov
insl
sbb
sub
ret
mov
adc
fldenv
push
fdivl
test
lret
popa
and
movsb
xor
sbb
dec
xorl
adc
xor
testl
rcl
pmaxub
outsb
scas
js
addr16
loopne
dec
sub
outsl
mov
jecxz
cmpsb
dec
pop
nop
xchg
lods
xor
and
mov
mov
inc
lret
in
mov
in
adc
push
mov
cli
adc
pop
shrl
daa
inc
enter
inc
mov
mov
jae
inc
inc
loope
adc
cmp
sbb
mov
jmp
imul
or
xchg
pop
cmp
xor
xor
push
mov
jo
pop
movsb
loop
mov
push
sbb
and
cmp
fisubs
push
out
mov
cmp
pop
lahf
add
addr16
pop
cmp
fidivrs
inc
lods
adc
cmp
mov
or
pushf
jns
fxch
dec
mov
lods
ret
sbb
cwtl
pushf
mov
jns
xor
imul
dec
stc
pop
mul
cs
dec
sti
push
mov
dec
jb
out
inc
mov
adc
rcll
dec
pushf
xchg
mov
xchg
ja
mov
adc
pushf
push
xchg
pop
fdiv
xor
push
rcr
pop
or
dec
fnstenv
dec
adc
push
outsl
cmpsl
mov
hlt
pusha
gs
jmp
mov
push
sahf
jp
clc
sub
arpl
xlat
inc
xor
popa
es
dec
jae
jp
pop
and
jb
pop
dec
jb
repnz
mov
cmpsb
sbb
repnz
jbe
dec
scas
push
dec
dec
push
cmp
and
mov
int3
lods
xor
jmp
dec
dec
mov
push
insb
repz
ja
push
lods
ds
pop
in
mov
lods
sub
subb
jg
xor
inc
mov
out
cmp
insb
jbe
add
jp
movsb
xlat
cmp
fcompl
jo
lods
and
sub
int
dec
test
aaa
in
sub
nop
and
mov
rorb
dec
stc
add
push
repnz
dec
lods
and
jb
push
lahf
add
fs
xchg
and
in
popf
mov
cmpsb
inc
out
push
xchg
lret
xor
cltd
test
in
and
or
mov
sti
out
push
out
stos
xor
xor
lret
sbbb
aam
lret
xchg
or
test
jb
cwtl
mov
push
or
decb
wbinvd
mov
mov
mov
dec
cmp
addr16
jmp
pop
lea
rorl
dec
xchg
mov
cmp
test
sub
getsec
pop
sti
addl
cmp
in
sbb
jnp
arpl
sub
push
mov
daa
inc
or
sbb
add
mov
test
dec
ret
lods
jge
sub
arpl
xchg
sub
ljmp
mov
ss
test
mov
dec
and
xor
add
or
add
lcall
mov
jecxz
roll
bound
sub
xchg
fdivl
outsb
addr16
aad
dec
sub
sbb
mov
adc
add
inc
lahf
std
dec
mov
in
xchg
icebp
push
xor
push
nop
mov
nop
out
scas
sbbl
push
jno
shlb
pop
push
int3
mov
push
jg
sub
mov
mov
push
lcall
push
xchg
popf
xchg
pop
pop
mov
mov
sub
cwtl
dec
sub
jecxz
mov
add
inc
cmc
mov
out
ds
aad
push
mov
decb
xor
jnp
lret
dec
inc
daa
add
push
inc
repz
pop
sbb
pop
sbb
sub
add
sbb
or
mov
and
jl
insb
cs
mov
mov
jbe
or
jecxz
and
out
ret
inc
icebp
cmp
fwait
sahf
rcrb
inc
jl
out
stc
jmp
pop
push
jmp
mov
or
test
push
faddp
add
push
ljmp
icebp
std
mov
loop
icebp
test
xchg
rcr
sub
test
adc
fndisi(8087
cmp
nop
sar
mov
sahf
xor
inc
sub
or
or
xor
shll
out
call
mov
jno
mov
mov
enter
fs
adc
jp
jl
movsb
repz
repnz
push
mov
jge
int
mov
xchg
xchg
xor
cmp
call
mov
int3
rep
cmpsb
pop
test
test
stos
cli
xor
in
mov
loopne
movsb
dec
jnp
clc
sbbl
into
or
aas
xor
or
test
ds
xor
xor
int3
mov
aaa
cld
adc
jmp
add
add
xchg
sbb
cs
xchg
stc
cs
out
aaa
ss
cmp
xchg
xor
or
dec
add
lods
inc
xor
std
shrl
sti
jne
pop
push
inc
xchg
and
inc
lahf
xlat
lret
imul
lea
stos
and
jnp
pop
jno
test
mov
sub
ficompl
mulb
insb
adc
pop
ljmp
sbb
fcmovu
outsb
mov
stos
sahf
inc
mov
jo
push
ljmp
insl
repz
pusha
jle
push
std
cmp
stos
xchg
nopl
cmpl
pop
mov
or
dec
pop
xor
mov
sahf
jle
add
jp
cmc
sbb
mov
or
bound
arpl
xlat
inc
arpl
mov
cmpsb
mov
cmp
dec
xor
dec
inc
addr16
xchg
pop
hlt
xlat
arpl
mov
loop
ja
popa
out
cltd
dec
test
jmp
shrb
test
xchg
aas
mov
mov
inc
arpl
sub
adcb
int
cmp
insb
in
push
insl
mov
outsb
sbb
inc
cmc
mov
inc
mov
and
stos
test
in
shlb
dec
pop
xor
push
mov
nop
les
inc
imul
stos
adc
inc
negb
mov
xor
cmp
mov
lret
cmp
sbb
mov
add
shrl
lahf
sbb
mov
lea
mov
scas
jmp
pop
add
push
sbb
fimuls
push
daa
adc
mov
dec
sti
mov
mov
dec
out
fsubrl
sbb
sbb
popa
jg
inc
loopne
sub
adc
xchg
fcomip
fwait
stos
stc
jnp
pusha
mov
jl
xchg
addr16
aaa
lret
jle
jo
jmp
cmp
xchg
lods
or
push
sub
mov
adc
xchg
addb
cmp
add
ret
xchg
mov
outsb
mov
stc
or
sub
mov
negl
push
xor
iret
lods
es
pop
sbb
fmuls
sub
dec
ljmp
es
fs
xor
fsubrs
movsl
cld
outsb
dec
test
add
cltd
push
mov
ja
arpl
jne
loopne
std
dec
sbb
jne
test
dec
in
lret
add
push
mov
sbb
fwait
lret
mov
js
or
pusha
mov
cmpsl
lods
and
push
xor
push
cld
push
cmp
add
aad
fidivrl
sbb
repz
loop
les
dec
lahf
jae
sub
cs
xchg
mov
int3
add
ja
pop
ret
jo
lretw
movsl
lods
mov
enter
inc
add
ficoms
sbb
xchg
fiaddl
gs
mov
dec
push
xchg
cmovg
cmpl
test
xor
lea
cmpsl
adc
inc
in
cmp
std
or
andb
sbb
in
mov
jecxz
cmp
mov
jecxz
xor
lock
das
and
mov
movsl
inc
jp
cmp
rorl
scas
cmp
in
loope
dec
xor
outsb
or
xor
insl
adc
and
pop
mov
push
out
lret
push
sub
pusha
pop
adc
movsl
lea
pop
pop
push
mov
mov
dec
push
dec
mov
xor
jg
push
lret
sbb
icebp
aaa
add
inc
xor
adc
mov
popa
lock
or
pop
sarb
jmp
mov
addr16
lret
nop
and
movsl
inc
sub
cmp
insb
shll
mov
insl
push
inc
enter
cmp
aas
div
es
cmpsl
mov
imul
sarl
mov
pop
int
inc
jle
nop
in
insl
mov
mov
std
test
movsl
xchg
shlb
or
cmpsb
push
xlat
sub
xor
imul
js
and
mov
int
nop
sub
lcall
aas
jmp
inc
mov
out
sub
sub
fadds
sbb
out
push
pop
push
mov
cld
jmp
xchg
mov
fbld
sbb
popf
loopne
loope
adc
aam
cwtl
daa
pop
sbb
xor
xchg
xchg
fsub
inc
orb
push
gs
push
sbb
xor
add
or
ds
mov
test
imull
icebp
scas
out
and
test
cmp
xchg
push
out
shlb
test
stc
cmp
cmp
cld
xor
divl
fisubrl
mov
xchg
pop
pop
mov
pop
pop
sbb
xchg
sahf
js
jb
incl
or
xchg
stos
dec
fdivrs
popa
lds
sbb
fildll
int
push
aad
in
clc
outsl
enter
addr16
pop
sbb
mov
mulb
add
mov
pop
xor
rorl
pusha
aam
arpl
mov
xor
imul
xchg
and
mov
push
mov
test
ret
push
xor
pusha
mov
adc
aaa
addl
movsl
xor
cmpb
fldcw
push
pop
ds
add
pop
push
leave
sarb
and
mov
push
in
add
mov
aam
add
lahf
dec
cmc
shrl
adc
popa
inc
hlt
jecxz
or
aad
popf
arpl
jge
cwtl
lock
xchg
jmp
out
adc
cmc
xchg
js
insl
push
ljmp
cmpsb
movsl
sub
dec
jp
sbb
pop
inc
fwait
cmpsl
iret
jmp
insb
loopne
add
ljmp
inc
cmp
sbb
push
push
cltd
icebp
sbb
and
clc
cmp
dec
adc
int3
rcrl
data16
ljmp
push
stos
push
dec
add
jns
fiaddl
jg
or
pop
inc
sub
dec
repnz
pop
sub
or
outsb
incb
and
pushf
es
pop
mov
mov
or
sbb
out
addr16
insb
rorl
push
xchg
and
pop
movsl
data16
sbb
pop
xor
es
cmc
insb
fidivrl
sub
in
push
mov
out
fildll
add
lahf
ret
xchg
or
jne
imul
scas
and
shld
ljmp
sub
scas
add
xchg
mov
ljmp
aaa
iret
pop
cli
jb
fs
mov
nopl
inc
fsubrs
in
push
pop
add
sbb
jge
lret
cmc
push
div
cmp
mov
push
bound
lods
ds
jo
and
cltd
xchg
mov
lret
pop
int3
sub
xchg
aas
mov
popf
push
inc
pop
jecxz
sbb
aaa
jp
pop
pop
mov
dec
imul
jmp
dec
rol
sbb
stc
dec
std
fwait
add
add
mov
cld
xor
mov
js
pop
popf
jns
pop
rcrl
mov
xchg
std
mov
jl
pop
sbb
push
call
mov
mov
mov
mov
gs
popf
or
cmpsl
and
and
or
sub
pop
and
jns
dec
inc
jb
cs
jl
lret
pop
int3
and
int
sti
jbe
push
andb
insb
add
arpl
cmpsl
xlat
enter
bound
shrb
ja
mov
out
pop
mov
into
jecxz
cmpb
xchg
mov
inc
icebp
fsubs
fadds
nop
out
sbb
xchg
or
xchg
imul
fdivl
push
inc
adc
jno
dec
out
aaa
les
or
or
in
cmc
ljmp
aad
int
out
clc
xchg
pop
add
push
jnp
add
sar
jle
xor
lock
js
dec
in
int
push
xor
idivb
mov
inc
dec
jmp
and
pop
aam
xor
mov
push
mov
das
js
pop
sbb
jbe
push
out
adc
bnd
jp
notb
imul
mov
out
push
push
les
js
pop
mov
mov
ljmp
and
sti
jp
cmpsl
jg
mov
adc
or
inc
jae
lahf
adc
push
dec
push
mov
test
jo
mov
mov
mov
adc
jne
mov
imulb
xchg
jb
xchg
jno
add
cli
cltd
bnd
push
mul
data16
arpl
sbb
les
mov
pop
xor
mov
xchg
imul
jle
sbb
xor
loop
push
shll
out
xor
sahf
imul
mov
test
adc
pusha
mov
in
std
sbb
aad
sbb
cmc
int3
cld
bound
cmp
lods
lcall
rolb
sub
dec
push
gs
lea
xchg
jecxz
push
mov
sub
jne
stos
mov
mov
xchg
jmp
pop
shrl
pop
lods
push
lods
sti
xchg
xchg
push
xchg
mov
and
or
aam
sbb
and
call
in
push
rorl
push
lock
adc
xchg
scas
adc
xchg
loop
lods
and
fstps
out
mov
push
lods
xorb
add
les
xor
and
dec
xor
mov
push
pop
out
push
push
mov
pop
loope
pop
mov
fwait
ss
shll
push
pop
xor
nop
mov
xlat
xor
xor
xchg
stos
push
push
lock
negb
push
loop
call
push
dec
inc
xlat
mov
loop
and
inc
cmp
jp
jge
jnp
lock
cmp
pop
ret
xor
out
popf
sub
xchg
push
add
lods
xor
ljmp
add
xlat
subb
cs
jae
sahf
inc
inc
fstl
or
in
das
dec
add
sbb
out
inc
jae
jge
mov
repz
mov
cmp
data16
xchg
xor
repnz
mov
lock
test
push
inc
aam
pop
pusha
repz
mov
hlt
notb
push
sbb
lcall
pop
mov
pinsrw
mov
aam
sbb
stos
aad
xchg
mov
lods
adc
jmp
push
mov
sub
andl
push
fisubs
mov
movl
cmp
and
mov
sbb
pop
jmp
imul
inc
addb
mov
inc
cld
jne
add
xor
jae
nop
mov
mov
and
mov
inc
loop
inc
cmp
xor
cmp
mov
sarl
bound
leave
sbb
loopne
stos
pop
dec
pop
pop
rol
mov
lock
loope
in
mov
xlat
popa
mov
mov
ret
cmp
pop
dec
iret
and
push
shr
push
sbb
test
gs
shrb
fucomi
sub
xor
push
cs
cli
and
add
cmp
push
clc
das
pop
sti
mov
int3
pop
push
and
lret
mov
out
loope
cmpsb
mov
and
add
lods
sbb
scas
sbb
sti
xor
iret
insb
mov
insb
mov
push
shrb
cli
sbb
lahf
mov
push
adc
das
pop
adc
mov
mov
in
mov
inc
in
adcl
add
sbb
add
insl
xchg
pop
mull
and
cwtl
repz
cltd
xor
xor
jb
dec
mov
cltd
mov
push
jl
pushf
lock
lods
cmp
pop
sbb
and
push
ds
pop
mov
mov
mov
ja
test
jbe
dec
inc
jnp
cmp
testb
sbb
xor
sbb
inc
andb
push
sbb
xor
lds
sub
jne
cld
inc
and
lods
bswap
nop
cmpsl
sub
fbstp
hlt
lds
lea
rcl
adc
jg
sbbb
imul
push
mov
scas
cmp
movsl
lcall
cmp
sahf
int
ljmp
scas
push
mov
jne
add
shr
shrl
push
popa
cltd
xor
adc
jns
pop
and
lods
dec
dec
push
scas
jae
cli
orl
jns
shr
out
scas
fidivl
js
icebp
cmp
aad
xchg
and
jecxz
jg
stos
pop
mov
jg
push
aaa
xor
loopne
and
xchg
imul
pop
add
push
into
loopne
fisubs
daa
lock
iret
shll
std
dec
inc
sti
xor
pop
call
ficoml
xorl
imul
mov
scas
jae
xor
mov
scas
scas
cmp
jmp
xchg
xorb
sti
aaa
push
sbb
xor
sub
loopne
jmp
jmp
repz
cmp
int
sub
shll
mov
pop
shrb
aad
scas
add
insl
dec
ret
xor
add
test
stc
neg
stc
loop
cs
shlb
push
bound
push
pop
roll
test
mov
frstor
pop
xor
cld
mov
cmp
filds
test
and
cli
inc
inc
mov
mov
mov
rcll
test
lods
adc
lock
out
push
subl
cmpl
sbb
int
xchg
cmc
add
sbb
lock
test
insb
push
pushl
mov
jle
sahf
cmp
sbb
je
or
push
jne
fistps
pop
shlb
jnp
jl
mov
mov
test
sub
xlat
adc
roll
loopne
scas
mov
pop
xchg
mov
test
fmuls
sti
scas
movsl
adc
loop
test
movsl
cmp
mov
push
iret
into
mov
xor
fnstsw
or
mov
call
inc
mov
cltd
std
fistps
or
ret
cmp
dec
push
sub
aas
jle
aad
adc
scas
enter
mov
push
mov
sub
insb
mov
out
push
inc
leave
sti
dec
popa
jge
aas
rol
pop
xchg
sti
mov
mov
mov
imul
cmp
jp
nop
lods
push
test
mov
int3
push
out
insl
loopne
enter
mov
mov
arpl
xor
repnz
mov
cmp
push
lcall
push
lods
scas
nop
orl
mov
push
push
lahf
lods
cmpl
adc
pop
jns
mov
xchg
js
sub
lods
divb
rcll
adc
and
insb
push
pop
ja
test
xchg
shrb
stos
jecxz
cwtl
adc
mov
lea
cmp
mov
movl
ret
pop
lahf
jb
cwtl
cli
lods
inc
pop
out
js
add
dec
push
bound
sbb
push
int3
push
cwtl
punpckhdq
ja
insl
test
dec
orb
mov
pop
enter
push
icebp
in
pop
shll
pushf
popl
xlat
adc
sub
dec
or
dec
adc
pop
mov
mov
jg
xchg
cmpsl
xor
xchg
add
jbe
dec
mov
sub
movsb
ror
fdivrs
insl
adc
sbb
sub
push
mov
int
ret
pushf
unpckhps
aaa
dec
mov
idivl
scas
mov
lret
fildll
pop
pop
sbb
pop
push
test
shrl
mov
rorl
push
test
xchg
xchg
scas
jle
gs
scas
out
sub
xor
shrb
xor
cli
cmp
stos
cmp
xchg
inc
mov
inc
repnz
test
inc
jge
jecxz
cmc
jno
cmp
ds
nop
xor
adc
nop
push
adcl
adc
bound
fmul
jl
mov
js
dec
lcall
outsb
outsb
adcb
js
jg
icebp
fscale
les
dec
mov
sbb
test
daa
mov
loopne
xor
lret
fs
sub
mov
and
dec
sti
sar
xchg
test
dec
or
dec
ret
jbe
push
sar
mov
mov
pop
dec
sbb
push
xchg
and
inc
sti
mov
cltd
sub
pop
adc
fimuls
push
jae
addb
mov
mov
shrb
push
xchg
in
xor
out
icebp
decb
mov
add
mov
mov
setb
adc
sbb
inc
ret
xor
and
das
mov
pop
adc
lds
jbe
cwtl
lret
fisubl
push
mov
out
mov
cltd
mov
and
ret
adc
mov
dec
imull
xor
sti
cmp
jg
movsl
popa
jmp
sbb
cmpsb
push
mov
out
add
sub
mov
inc
or
mov
std
movsb
dec
imul
mov
scas
dec
or
sub
sarb
cwtl
sub
dec
pop
jl
jge
cltd
test
push
dec
push
inc
sub
sbb
xor
mov
loopne
cmp
cltd
adc
cmp
jnp
inc
cmp
mov
repnz
mov
or
lods
dec
mov
or
pop
adc
dec
xchg
jo
lret
out
scas
sbb
add
fisttps
lods
and
push
add
adc
sub
lock
in
scas
add
xor
mov
xorb
push
jle
outsb
mov
inc
push
jle,pt
out
xlat
push
mov
hlt
and
cmp
fwait
xorl
and
insb
cs
jo
adc
dec
mov
adc
sbb
dec
or
sub
cmpsb
test
jl
test
or
iret
pop
fxtract
sub
jo
push
es
xor
xchg
dec
loope
jg
movl
mov
cmovl
adc
sub
int3
adc
pop
fld1
test
clc
dec
push
xor
iret
mov
loop
pop
push
xor
push
xchg
sbbb
xlat
pop
aas
xor
dec
inc
out
or
mov
jnp
and
xchg
inc
nop
dec
int
int
hlt
jo
mov
lds
cmpsb
outsb
xor
push
inc
jo,pt
cmp
pushf
mov
sbb
shlb
dec
lods
stos
sbb
shrb
jl
movsb
sbb
lcall
cmp
int3
sbb
cmp
fistpl
scas
sahf
xchg
fisubrl
sbb
andb
xor
push
outsb
lock
sub
mov
jge
cmp
test
std
std
outsl
mov
stos
pushf
out
inc
pop
fnstsw
adc
fbld
cwtl
fmull
jg
push
and
cmp
mov
std
faddl
sub
mov
rcll
outsb
sub
mov
lret
jb
sbb
pop
xchg
arpl
aaa
mov
push
pop
xchg
cs
test
inc
mov
xchg
outsl
inc
mov
sbb
sarb
or
mov
and
cs
popf
mov
fs
arpl
xor
jge
inc
dec
lods
mov
cs
insl
adc
scas
daa
jle
xor
fldcw
xor
sub
sbb
call
xlat
push
movb
xor
mov
scas
lock
in
and
stos
cmp
mov
pop
jge
fisubrl
xor
leave
daa
push
loope
inc
or
test
fistl
inc
dec
rorl
dec
in
shr
push
mov
sbb
mov
mov
adcl
xchg
sub
stc
dec
pop
pop
je
dec
and
jns
dec
jmp
ljmp
push
xor
cltd
rcrb
arpl
adc
icebp
subb
pusha
push
xor
mov
pop
mov
je
out
dec
jns
xchg
jge
test
jecxz
data16
xchg
loope
pop
push
jo
jl
sbb
les
pop
cmc
insl
sbb
and
in
push
aad
int3
adc
roll
mov
xor
test
jo
in
and
jge
dec
lods
adc
pop
adc
pop
mov
xor
xchg
push
pop
lds
subb
lods
xor
sub
test
push
push
sarl
push
nop
mov
inc
xchg
add
add
sbb
xchg
jno
sub
xchg
aaa
jle
cmp
jne
pop
scas
mov
jp
xchg
outsl
jl
in
subl
or
jmp
xchg
iret
test
jl
int
inc
and
insb
mov
daa
je
or
cmpsb
inc
mov
jge
outsl
cmc
mov
xchg
xor
test
pop
cmp
stos
cmp
jmp
lcall
mov
push
mov
ljmp
jne
je
ror
adc
pop
movl
push
in
arpl
aaa
ljmp
adc
loope
xor
mov
aas
shlb
and
ja
push
rolb
sub
push
subl
arpl
nop
loope
call
loopne
add
icebp
jns
or
enter
int3
lcall
sarl
or
in
mov
xor
clc
cli
lods
dec
dec
sti
scas
dec
pushl
lea
jo
aas
aas
gs
xchg
push
fidivrs
push
stc
mov
xor
arpl
test
es
sarl
pop
sti
jnp
push
rcr
loopne
mov
pop
andl
add
fcompl
pop
loopne
push
and
pop
xor
cmp
fmuls
sbb
fs
sub
xor
add
in
push
push
xor
push
jnp
sbb
sar
test
pusha
fimull
pop
push
aad
xchg
sbb
gs
sbb
int
inc
cmp
cmp
xchg
jns
pop
enter
inc
cmp
inc
stos
add
gs
jbe
stos
sbb
pop
jmp
pop
pushf
arpl
in
sbb
mov
adc
stos
mov
ss
cmp
xchg
inc
mov
sarb
dec
mov
into
mul
test
ja,pn
adc
ja
adc
jg
pop
cmp
push
xor
pop
test
push
mov
and
loopne
mov
sbb
add
inc
dec
andb
into
push
mov
idivl
sbb
test
fwait
inc
and
imul
mov
lods
mov
jle
sub
addl
jo
imul
add
xchg
or
add
jmp
mov
inc
std
je
mov
gs
cmp
jmp
ret
add
mov
rorl
pop
shr
or
xchg
or
fadds
push
jl
and
clc
bound
dec
jle
in
dec
ja
xchg
xchg
adc
fs
lds
jo
mov
adc
fsubs
adcb
lret
scas
mov
add
push
subb
pop
test
mov
cld
mov
or
xchg
nop
add
push
rcl
je
xor
stc
test
adc
aad
or
repnz
jmp
in
icebp
mov
ret
out
sub
adc
jecxz
dec
add
test
pop
jge
ret
push
rorl
fidivrs
mov
mov
mov
imul
repnz
lods
bswap
lahf
loopne
add
movsb
mov
xor
loop
push
call
shrl
jge
ss
mov
adcl
cmpsl
dec
xchg
rcll
int
int3
imul
sbb
les
test
rorl
das
das
jp
fs
push
pushl
pushf
in
cmp
mov
mov
imul
lret
adc
dec
mov
fcomps
push
xor
xchg
mov
jge
and
lock
lea
cmp
sbb
inc
in
out
fdivrp
ss
rorb
popf
mov
gs
lret
enter
popf
pop
stc
jecxz
lea
loopne
dec
nop
lock
fcoms
paddq
stos
orb
std
inc
inc
rol
int
push
das
nop
mov
xchg
out
insb
or
push
jecxz
imul
sub
fldcw
in
in
push
ds
insb
or
fs
mov
out
mov
cmc
repz
add
inc
mov
or
cmc
lahf
jmp
jl
js
rolb
loope
cmp
sbb
dec
jne
shrb
or
lock
jnp
mov
loop
push
test
dec
cmc
rorl
lods
fdivrs
loope
xor
sub
cmpsl
orb
add
adc
data16
xchg
aam
xor
dec
ss
lahf
loop
arpl
pusha
sti
jnp
pushf
pop
inc
mov
daa
fcmove
adc
mov
insb
cmp
inc
mov
push
lahf
sub
cmpsb
stos
ss
push
dec
jge
pop
push
data16
add
negl
jae
pop
xchg
movsb
ss
mov
add
ja
xchg
and
fld
out
push
sub
sbb
in
js
dec
inc
int
push
fsubp
pop
test
sbb
int3
push
cwtl
pop
xor
cmp
cmpsl
sbb
mov
jg
in
imul
out
stos
cmpsl
in
pusha
sbb
adc
dec
adc
andl
mov
lds
out
dec
xchg
xchg
ret
loope
jae
rcrl
cmpsb
lea
xchg
sbb
and
push
in
lret
pop
inc
loope
jmp
and
fimuls
xor
cs
repz
dec
movsl
xor
std
das
xchg
mov
pushf
mov
sbb
mov
rcrb
mov
sub
pop
fadds
dec
push
jno
dec
mov
dec
mov
dec
jnp
sub
adc
inc
cld
test
add
mov
mov
stos
pop
fstps
sub
arpl
insb
mov
mov
mov
add
lahf
and
sbb
cmpl
pop
sub
add
test
out
sbb
movsb
enter
pop
inc
pop
pop
xor
movsb
and
xor
cmpsl
test
or
adc
mov
sbb
es
mov
mov
mov
scas
mov
inc
pop
jae
pushf
mov
call
and
inc
mov
sub
and
pop
adc
ss
sbb
out
lock
dec
pusha
inc
addl
rclb
ljmp
stos
dec
cwtl
ljmp
int3
enter
or
push
addb
mov
jp
sub
scas
xor
jo
xor
push
outsl
punpcklbw
fimull
jp
sbb
mov
dec
push
fiadds
adc
mov
jmp
inc
outsl
fcoms
loop
imul
repz
lret
mov
pusha
pop
sbb
fisubrl
addr16
rolb
jbe
add
sub
int
shll
add
xor
inc
mov
jmp
jae
adcl
dec
adcl
push
and
loop
xchg
mov
inc
ljmp
repnz
repz
popa
or
cmp
add
cmovl
xchg
pop
mov
adc
pop
pop
in
lcall
mov
xchg
xchg
sub
add
pop
sbb
ficoms
and
rcll
pusha
xchg
and
push
insl
fbld
push
popf
xor
cli
xchg
mov
dec
pop
call
mov
xor
mov
push
popf
ret
rcrb
cli
inc
xorb
xchg
push
xor
movsl
daa
push
cmc
xor
jecxz
js
stos
add
sub
sub
sub
scas
enter
jno
mov
inc
cltd
dec
mov
jge
mov
jp
or
push
dec
jecxz
jns
shlb
sub
pushf
jge
inc
scas
mov
pop
lock
sbb
cmc
dec
pop
mov
pop
mov
pop
jecxz
in
mov
ret
in
imulb
push
imul
xchg
mov
je
call
sbb
push
push
mov
mov
sti
mov
adc
icebp
cli
stc
push
xchg
or
rorl
fdivs
jbe
cmpsb
cmp
dec
test
orl
pop
fwait
sub
jp
xchg
addr16
jg
xchg
mov
andb
xlat
and
mov
cmp
movsl
pop
add
mov
inc
ja
adc
test
xor
mov
rorb
nop
add
ror
aam
rolb
dec
scas
jns
jmp
js
sbb
mov
sysret
in
iret
and
sbb
mov
cmpsl
pusha
mov
lods
pusha
sarb
lea
xchg
mov
xchg
add
mov
sar
idivb
push
mov
fmull
sti
lret
in
jge
lock
decl
stc
sahf
cmp
pop
push
stos
sub
push
jo
mov
addb
stos
in
sahf
pop
push
dec
scas
cmp
sbb
mov
dec
pop
or
outsw
cmovae
sysenter
cmp
not
push
pop
test
mov
in
in
xor
and
insl
xchg
fnstenv
cmp
call
test
mov
inc
cmp
cwtl
fneni(8087
outsb
jo
pop
ja
insb
outsl
jl
je
xor
lods
dec
cmpsb
sar
cmp
fsubrl
pop
inc
call
lret
scas
sbb
pop
and
movl
fstpt
test
jecxz
or
popa
jl
jl
push
nop
pop
sbb
xor
in
mov
sbb
pop
sbb
inc
mov
jp
in
out
das
mov
and
xchg
xor
ja
mov
inc
cmc
mov
and
inc
adc
and
xor
ja
mov
ja
sbb
sbb
push
push
adc
jne
ficoml
inc
jl
dec
fdivs
outsl
popa
or
js
pop
int3
in
inc
add
sbb
rorl
flds
push
xchg
andl
add
mov
scas
fcoml
repnz
hlt
iret
add
or
je
mov
mov
xchg
push
nop
cmp
cmc
out
hlt
fldt
jle
pusha
out
inc
push
int
adc
adc
pop
inc
sbb
les
repz
cmp
lcall
mov
testb
mov
movsb
shr
xor
nop
xchg
dec
movsb
jae
and
shlb
sbb
dec
inc
out
push
jmp
into
xchg
sub
sbb
jbe
into
sub
mov
int
insl
bound
push
inc
xchg
xor
cmp
mov
shl
lcall
push
push
cwtl
test
leave
pop
xchg
lahf
addr16
outsb
lea
roll
dec
mov
push
adc
loop
xor
xchg
dec
nop
or
or
and
cmp
adc
xor
lret
jno
mov
jae
cmpsl
xor
and
les
mov
add
lock
adc
test
xor
jle
add
hlt
xor
mov
sub
mov
dec
insl
cmp
cmp
push
stc
lods
pop
je
inc
rclb
add
push
push
lret
call
mov
lods
rorb
xor
and
mov
js
cmpl
and
sub
pop
das
daa
mov
in
pop
mov
sub
test
test
ret
sub
jb
sbb
loop
pop
fldl2e
repz
push
mov
out
sub
sbb
sbb
pop
sbb
lock
dec
adc
push
push
fldcw
test
pop
cs
hlt
fcompl
int3
xchg
jp
lds
xchg
sub
and
lret
das
push
inc
ret
cmp
mov
fmuls
std
lods
shrl
std
inc
push
inc
mov
pop
xor
jae
mov
jg
ss
hlt
xchg
mov
cmpsl
sti
in
out
mov
addr16
pushf
and
and
xchg
mov
movsb
sbb
mov
inc
imul
insl
pop
sub
xchg
jmp
test
push
out
enter
sbb
shr
xor
cwtl
adc
mov
mov
in
stos
stos
pop
inc
jne
pshufw
jl
adc
das
adc
test
xchg
xchg
mov
dec
call
popa
je
jmp
sbb
icebp
jb
test
push
dec
push
xor
mov
adc
stos
jno
sub
stos
dec
stos
inc
mov
mov
cmp
dec
pop
ss
int3
scas
stc
cmp
push
xor
mov
cmp
push
ret
test
das
add
iret
insl
add
fdiv
pop
adc
out
push
jno
pop
ret
xor
mov
mov
push
jo
incb
mov
mov
jb
shl
leave
dec
nop
jbe
mov
sbb
leave
push
test
fisttps
push
xorb
xlat
inc
and
inc
jbe
push
xchg
fldcw
adc
push
mov
addr16
push
sti
hlt
rcrl
dec
and
out
fs
jno
pop
sbb
push
sarb
mov
aaa
test
repnz
cwtl
aaa
movsl
xchg
push
mov
js
push
cmp
lret
out
out
pop
and
or
shrb
cmp
mov
inc
es
mov
out
fwait
sbb
cli
pop
aaa
dec
rclb
test
in
stos
sub
xchg
add
subb
sbb
mov
xor
invd
xor
add
out
in
push
and
xchg
inc
fldpi
push
addr16
xor
dec
test
push
dec
fnsave
push
cmp
add
lea
mov
add
adc
negl
es
ja
cmp
dec
xor
jns
jmp
das
xor
inc
cmpsb
adcb
mov
clc
sub
or
cmc
lock
je
test
shrb
hlt
ficoml
cli
pusha
cmovb
push
xchg
dec
xchg
add
pop
push
cmp
insl
jb
dec
push
aam
out
mov
and
sub
rcrb
imul
inc
iret
pop
lods
and
imul
mov
dec
mov
xchg
mov
jle
push
xlat
int3
mov
repnz
sbb
mov
insb
outsl
push
bound
add
push
dec
add
out
mov
cmpl
push
clc
scas
jle
addb
arpl
in
cmc
loopne
pop
les
inc
jmp
xor
leave
shl
out
xchg
mov
lock
pop
pop
into
push
in
sbb
testb
pop
sub
pop
inc
add
fidivrs
sbb
push
mov
mov
call
or
jmp
mov
imul
adc
or
jmp
hlt
rclb
fistl
jp
cwtl
jle
fidivrs
inc
pop
hlt
loope
lods
xor
cvtdq2ps
mov
adc
aas
shll
push
xor
rolb
sbb
push
xchg
inc
adc
push
push
mov
and
jl
pop
and
mov
paddw
add
push
push
xor
outsl
lcall
sub
rcr
cmpsb
test
insb
sbb
or
je
jmp
push
mov
cmp
push
in
inc
xor
divl
lret
ljmp
mov
jecxz
cmp
push
scas
stc
outsl
mov
mov
sub
popa
mov
mov
nop
xchg
lret
push
dec
sbb
loopne
mov
popa
repnz
mov
fisubl
lcall
mov
fdivl
dec
sub
cmp
cwtl
sbb
fidivrs
orl
inc
or
movsl
adc
in
and
mov
xor
xor
sbb
add
cld
mov
inc
adc
and
inc
push
pop
inc
lea
icebp
dec
or
loope
and
mov
in
enter
sti
loopne
or
jge
enter
nop
pusha
dec
movb
sub
mov
cmpb
push
pop
sbb
dec
pop
sbb
ds
push
pushf
insb
call
xchg
test
mov
inc
mov
mov
test
xchg
dec
adc
leave
and
dec
inc
xchg
es
stos
repz
push
sbb
mov
insb
mov
pop
ja
mov
jb
and
cmpsl
mov
pop
lcall
sbb
arpl
imul
push
sbb
je
mov
testb
out
icebp
das
xorb
cmpsb
mov
add
mov
xchg
test
fisubrs
sub
cmp
iret
xchg
pop
pop
sbb
push
push
jmp
cmpsl
fisubrl
push
rcll
nop
dec
ja
lahf
js
pop
push
mov
subb
xchg
xchg
jnp
loopne
imul
cli
stc
cmp
adc
xor
cmp
stos
push
jp
lea
jmp
inc
xchg
push
sub
push
sub
lcall
pop
xchg
adc
iret
les
fildll
xor
test
scas
xor
mov
jle
push
inc
or
nop
sub
mov
adc
add
cwtl
shlb
lds
dec
sub
push
out
sub
or
fwait
btr
push
js
xchg
mov
jle
mov
pcmpeqd
sbb
call
sti
pop
hlt
lea
mov
push
dec
das
sbb
add
sarl
push
xchg
jg
rcrl
rcrb
mov
das
lahf
sub
insb
jp
jae
cld
sbbl
jo
jl
xchg
rol
xor
mov
pop
ret
add
push
pop
xor
mov
pop
lahf
shll
jnp
dec
xor
orl
cs
xchg
push
jle
stos
xchg
xchg
inc
push
push
lock
negl
xorb
mov
pop
pop
icebp
inc
mov
inc
mov
sbb
mov
dec
test
mov
cmp
cmpsb
or
dec
xorb
call
mov
cltd
rcr
hlt
rcrl
add
es
pop
cwtl
mov
cltd
ret
xorl
and
mov
inc
insl
or
adc
scas
and
and
push
rcr
push
addb
scas
jno
jl
jle
out
adc
ss
nop
cmp
aad
cmp
inc
fldt
outsb
add
cmp
xchg
imul
repz
lods
pop
pop
pop
xor
adc
adc
xor
and
pop
sbb
ret
add
cwtl
cmp
mov
fbld
mov
lahf
int3
jmp
loop
xor
xor
outsb
test
std
jae
push
and
iret
fstps
mov
adc
mov
pop
mov
add
loopne
stos
addr16
aas
mov
js
aam
mov
shl
ds
inc
add
inc
lret
xchg
xor
ficoml
icebp
pop
mov
sahf
xchg
xchg
out
rcrb
lock
push
jmp
and
push
jge
aas
adcl
mov
push
mov
sub
leave
mov
jmp
jmp
cmpsb
or
lcall
clc
dec
nop
out
mov
push
fidivl
int
and
es
lahf
int
js
test
add
insl
sub
lret
jg
fadd
das
cmp
xchg
loop
enter
pop
aas
and
imul
inc
dec
jl
fwait
dec
push
push
test
jns
push
or
das
test
repz
les
xor
call
mov
pop
rorl
push
addr16
mov
inc
pop
inc
fisubrl
inc
sbb
mov
inc
and
les
pop
pushl
notb
pop
icebp
hlt
rolb
icebp
loopne
jae
adc
add
or
repz
shrl
sbbb
push
xor
les
insb
lcall
jmp
mov
xchg
sbb
push
sbb
jl
mov
sub
lcall
fists
lcall
or
push
or
push
and
stos
fcomi
adc
cltd
jle
push
cmpsb
loop
push
or
xchg
pushf
lea
icebp
xchg
dec
mov
test
icebp
xchg
sub
daa
jo
xor
lret
xor
push
xchg
or
popf
xor
sbb
or
mov
insl
push
fmuls
push
pop
and
ficoml
gs
fidivs
xor
mov
pop
sti
sbb
sarl
xor
in
rorl
xchg
xor
bound
repnz
loop
xor
ljmp
sub
int
mov
mov
sub
xchg
icebp
xchg
dec
sbb
push
push
int
or
xchg
loopne
repz
cld
cmp
and
pop
and
mov
pop
int3
push
mov
push
xor
sub
and
adc
or
mov
mov
pop
fdivl
xchg
test
imul
add
cmp
add
sub
add
pop
mov
or
jae
inc
or
mov
sbb
adc
pop
lret
mov
aad
std
mov
scas
in
test
add
mov
out
mov
out
scas
sbb
xlat
je
arpl
cmp
fcmovnbe
xchg
lds
or
dec
jg
sub
ficomps
outsb
sahf
gs
sbb
add
aas
adc
cltd
imul
mov
mov
rol
popa
xchg
mov
push
cltd
bound
cld
lret
loope
imul
repz
mov
lea
xchg
sub
mov
lea
cmp
add
add
push
or
in
adc
sbb
cmp
insb
xchg
mov
stc
clc
jb
pop
add
pop
sti
dec
cli
xchg
fsubrs
lock
in
or
fsub
adc
push
xchg
test
das
pop
pop
movsl
jns
lret
xchg
mov
cmp
cld
fimull
flds
cmp
mov
fcomi
dec
out
pop
jae
cli
shlb
xchg
and
adc
stos
sub
jno
pop
pop
cmp
cmpsl
xor
mov
dec
push
mov
dec
pusha
test
pop
mov
push
hlt
jno
add
lea
and
std
jg
movsb
push
lds
cwtl
jle
fnstsw
lds
dec
sahf
lods
std
test
data16
das
enter
mov
dec
inc
push
les
push
fisttpl
cli
leave
xchg
pop
dec
jne
call
in
pop
fisubs
pop
shrb
jb
pusha
add
popf
push
sbb
ljmp
mov
jmp
fcompl
inc
push
cmp
lods
cli
clc
inc
xor
loopne
andb
sbb
outsb
iret
cmpsb
idivl
dec
subb
push
cmp
and
pop
dec
scas
or
pop
pop
or
sbb
inc
xor
pop
xlat
push
cs
jmp
sub
lea
jnp
adc
daa
lret
jbe
in
fidivl
xchg
xlat
iret
jnp
js
mov
cmp
and
pop
inc
jge
pop
mov
jge
lods
outsl
cmp
iret
xor
jp
jp
mov
fistpl
mov
jo
push
ret
jmp
xor
cli
mov
sub
adc
adc
mov
xorl
popf
es
sbb
nop
aas
test
jbe
std
push
pop
push
ja
add
mov
movsl
data16
testl
dec
daa
push
and
xor
pop
push
data16
xchg
testl
dec
daa
in
jo
or
cltd
bound
shll
cmp
pop
ss
jp
arpl
sbb
xor
rolb
faddl
mov
cltd
fdivs
xchg
sub
inc
xchg
sub
iret
cmp
inc
loopne
adc
aad
andb
mov
xchg
movsb
jmp
out
clc
cmp
xchg
inc
popa
adcb
lret
stos
add
push
lock
pop
mov
sbb
add
and
out
out
jl
adc
pushf
add
out
jl
adc
pushf
cli
bound
xchg
mov
movb
stos
lahf
ret
in
adc
das
lea
pop
loop
popa
lret
ljmp
call
or
sub
mov
mov
iret
xlat
sti
xor
leave
movsb
in
mov
jbe
push
and
scas
inc
cli
sub
sahf
cwtl
stos
mov
fisubrs
xor
and
jl
rclb
sbb
push
enter
scas
repnz
dec
jl
cmp
lds
hlt
subl
mov
stos
pushf
and
push
loop
inc
add
sbb
lods
xchg
pop
mov
add
or
pop
fistpl
sbb
cld
sub
pop
outsl
sub
insl
notl
das
js
mov
mov
cmp
add
mov
repnz
orb
ret
sub
fnsave
xchg
cmpb
call
dec
out
xor
sub
add
push
push
imul
in
adc
rorl
scas
fldenv
imul
leave
xchg
jle
into
sbb
dec
mov
cwtl
and
push
leave
cli
xchg
xchg
pop
les
xor
lds
or
mov
adc
loope
ret
push
mov
cmc
mov
mov
inc
pop
sub
mov
mov
jge
in
sub
scas
and
fs
mov
cmp
push
insb
out
push
rclb
int
xlat
mov
adc
gs
fstl
int
fwait
push
xchg
mov
ret
or
mov
rclb
mov
jecxz
inc
xchg
in
ret
test
in
rcll
xor
jnp
fstps
and
daa
mov
movsl
enter
mov
push
jmp
js
xlat
nop
mov
pop
xor
jns
dec
andl
hlt
mov
leave
add
repz
fisubrs
sub
lret
sub
inc
push
daa
iret
ja
jl
movsl
lret
push
xor
sub
xchg
adc
in
mov
vmread
pop
popf
push
and
jmp
xchg
testl
scas
sub
adc
outsb
leave
xchg
hlt
sahf
push
fisubrl
sbb
jge
mov
mov
inc
iret
dec
cs
mov
ja
push
outsb
rcrl
in
adc
fimuls
shrb
jnp
icebp
xlat
cmp
add
add
dec
xchg
rorb
popf
insb
add
insb
push
cmc
or
cmp
lods
xor
push
leave
nop
popa
lods
addb
jnp
imul
or
fdivrl
js
and
repz
sbb
addr16
ret
push
cmp
in
pop
loop
xor
arpl
fnstenv
mov
jl
fisubrs
pop
lods
push
jae
mov
pop
pop
mov
mov
jl
loop
lret
lcall
pop
inc
mov
andb
push
loopne
cwtl
cmp
test
jle
jge
xchg
in
mov
push
in
loopne
fcompl
push
sbb
and
insl
pop
fs
test
adc
adc
outsl
int
daa
xor
and
test
dec
push
and
popa
pop
push
lret
inc
mov
jb
sub
shll
pop
lahf
mov
push
imul
cmp
jmp
or
jne
xor
fcmovnu
insb
ss
js
inc
sbb
out
push
xor
dec
scas
mov
xor
add
sub
adc
pushf
test
stos
clc
dec
shlb
lcall
sub
mov
sbb
lock
stos
cmc
pop
sbb
mov
cmp
fisubrl
hlt
or
cmp
fiaddl
jmp
cmpb
addr16
jl
dec
adc
dec
pushf
popa
xor
insb
insb
sbb
sbb
cmpsb
test
cmpsb
xchg
and
xchg
iret
in
inc
popl
pusha
mov
hlt
jae
adc
cs
sub
out
in
aam
mov
adc
test
push
js
xchg
call
inc
inc
pop
lret
fbstp
shl
mov
xchg
aas
out
push
push
adc
adc
xor
ja
cli
mov
xor
imul
adc
or
mov
lcall
adc
into
or
inc
or
shrb
sbb
lret
lahf
or
xor
jmp
push
mov
shrl
hlt
stc
das
push
aam
jmp
data16
iret
mov
dec
bound
mov
sbb
sub
outsb
mov
pop
adc
mov
test
shll
pop
ja
xlat
mov
fcompl
adc
pmulhuw
or
repnz
jecxz
shlb
inc
icebp
adc
adc
jle
jne
push
in
adc
pusha
cmpsl
xor
inc
out
pop
jnp
repz
subl
push
inc
add
test
test
push
dec
and
mov
xor
inc
pop
sbb
lds
cmp
sub
add
hlt
mov
push
std
in
jae
out
in
inc
pop
fs
sbb
cwtl
mov
dec
xor
xchg
test
and
clc
push
imul
jp
shl
insb
push
and
sub
jno
mov
and
add
fcomps
ret
in
sahf
xor
xor
mov
sbb
mov
xchg
and
add
sbb
push
das
js
getsec
sub
lock
dec
mov
shrb
xchg
add
movsl
pop
dec
loope
dec
pop
dec
or
push
pushf
add
pop
dec
add
jg
fwait
push
pop
adc
mov
dec
push
sahf
mov
rcl
ret
xor
hlt
int
out
aad
rcrb
cli
xchg
push
adc
outsl
sahf
stos
pop
pusha
adc
rclb
xchg
out
rclb
lea
xor
and
ret
mov
insb
or
shlb
in
inc
push
pushf
inc
and
lods
xchg
movsb
popa
arpl
add
cmp
mov
sar
push
or
fs
cmpsb
jmp
call
mov
mov
hlt
push
das
and
lods
sbb
ds
popa
in
mov
gs
xor
lcall
je
sbb
out
iret
inc
dec
inc
negl
add
cltd
repz
xchg
int3
cmpsb
and
movb
mov
insb
sti
mov
xchg
inc
jmp
sub
sub
fs
inc
mov
pop
mov
or
icebp
es
sub
cmp
in
movsl
jmp
test
jbe
sub
bound
lods
mov
cmp
lahf
or
mov
lahf
pcmpeqb
popa
sbb
jle
mov
inc
pop
sbb
pop
sub
mov
mov
push
mov
movsb
xor
push
sbb
arpl
dec
mov
xchg
sahf
movsb
adc
fimull
jmp
push
mov
in
cmpsb
push
stos
dec
ja
push
mov
pop
sbb
ja
pop
pushf
pop
sbb
jg
fsubrp
dec
mov
mov
cwtl
jg
cli
jp
or
ja
mov
or
sbb
fistpl
adc
sub
xchg
push
add
fwait
add
sbb
sub
ja
jmp
jnp
ror
int
xchg
rcl
call
aam
fwait
jl
push
cmp
pop
mov
xchg
in
add
mov
dec
pusha
pop
pop
mov
push
lock
xchg
jo
in
lret
push
jg
xchg
pushw
in
dec
mov
and
iret
xchg
inc
stos
add
imul
or
imul
pop
out
ret
xchg
pop
and
test
in
sbb
cmp
ja
fs
inc
movsb
out
lret
jg
jg
and
aam
pop
inc
mov
shlb
xchg
cmp
or
subb
add
mov
scas
xor
mov
incl
test
movsl
inc
cmp
jp
es
sub
xlat
or
les
xchg
adc
fisttpll
clc
repz
pop
push
push
fs
mov
scas
xchg
call
pop
pop
dec
mov
cmpsl
ret
es
push
add
jg
adc
pop
mov
in
stc
jg
sbb
xor
cmpsb
or
dec
fbld
ret
cwtl
push
inc
insb
push
sbb
mov
sub
dec
cmp
imul
cmpsl
push
xor
and
inc
push
iret
imul
inc
mov
jle
cli
xchg
adc
cli
pushf
sub
enter
imul
icebp
mov
dec
mov
enter
dec
mov
rcll
push
pop
jmp
or
and
ljmp
and
daa
subl
add
jl
push
xor
icebp
push
lcall
loop
loopne
ds
cmpb
mov
inc
jae
inc
xchg
pop
dec
popf
je
sub
sub
xor
ret
push
xor
ss
stos
cld
inc
dec
cwtl
adc
lea
cli
mov
pop
gs
sbb
rcrb
enter
mov
iret
sbb
push
push
cwtl
cli
pop
inc
call
push
fstps
std
icebp
gs
xchg
insb
xchg
rolb
les
popf
fnstsw
jmp
mov
testb
pop
xchg
ss
aam
jnp
mov
sbb
stos
cmpsl
sbb
pop
fsubr
mov
jns
sbb
adc
int3
mov
mov
adc
mov
lcall
test
adc
mov
fdiv
add
cmp
ss
cltd
dec
cmp
fsts
pop
dec
xor
cmp
insl
dec
dec
in
add
pop
pop
leave
jns
mov
test
aaa
fsubl
pushf
aas
pop
sub
pusha
in
mov
add
fpatan
sub
addr16
pop
jmp
lods
or
mov
imull
pop
movsb
pop
xor
xor
fwait
cmpsl
fildll
pop
jmp
test
and
dec
xchg
push
je
dec
sub
inc
lods
int
jle
into
adc
pop
xor
pop
mov
dec
mov
dec
fadd
shrl
sahf
inc
cli
or
dec
subl
lock
ds
mov
ror
test
inc
push
xchg
out
mov
fsubrs
add
pusha
icebp
adc
cmp
std
aas
push
or
pop
ljmp
add
dec
test
sbb
scas
inc
mov
dec
leave
pop
stos
xchg
lods
aam
sarb
mov
fsubrs
ljmp
sub
or
rorb
xlat
mov
bound
push
imul
sbb
scas
rclb
addl
pop
jle
lret
push
loope
mov
aam
test
std
stos
jmp
lret
sahf
sub
adc
shll
sbb
cmp
or
fbld
and
mov
cmpsb
xchg
and
adc
rcrb
icebp
adc
out
cmp
rcll
in
jno
inc
xchg
sbb
pop
imul
cmp
testb
sub
or
xchg
fimuls
pushf
call
push
pop
movsb
std
lods
test
pop
sbbl
aas
stos
xor
iret
in
adc
pop
pop
sbb
push
lods
inc
rcll
mov
lret
jmp
pop
decb
js
je
clc
out
clc
inc
hlt
jo
sahf
imul
or
test
adc
notl
dec
test
dec
xchg
mov
bound
popa
cwtl
ja
stos
push
iret
add
pop
lahf
inc
fstpt
xchg
les
jne
pop
ficompl
scas
pushf
test
mov
push
mov
clc
repnz
sub
imul
pop
mov
dec
movsb
fsub
fcoml
jne
and
jne
mov
cmc
int3
insl
adc
pop
push
scas
xor
dec
push
das
sbb
xchg
dec
in
lods
pop
jb
mov
repnz
xor
rcll
out
xor
rclb
xor
add
stos
cmp
xchg
ljmp
sarb
jmp
xchg
push
adcb
jbe
mov
mov
in
cmp
lds
sub
bnd
xor
enter
mov
mov
movsb
or
add
daa
aad
cmp
pushf
push
xchg
push
jb
xor
mov
mov
xchg
cwtl
lcall
nop
dec
mov
outsb
lret
push
cld
shrl
cmp
jmp
negl
xor
fxch
push
xlat
addl
jo
pop
push
lea
push
fwait
jb
movsb
stos
lahf
push
push
scas
lock
cmp
add
push
push
xchg
dec
stos
jmp
adc
add
dec
daa
popf
sbb
jae
data16
push
push
sub
scas
aaa
pusha
sub
ljmp
insb
popa
and
nop
movsl
mov
cmc
pop
push
std
cmp
and
lods
imul
dec
add
cmpsl
pop
fidivrl
imul
pop
stos
jp
pop
xor
push
in
dec
pop
je
int
les
out
mov
je
mov
jge
or
mov
mov
xchg
dec
sbbl
inc
lret
clc
adc
add
dec
push
imul
pusha
lea
ljmp
push
loopne
sub
sub
fwait
dec
xchg
jbe
ret
in
lods
ss
cli
movsl
ds
icebp
jb
lock
movsl
dec
dec
daa
jecxz
lret
sub
add
imulb
dec
jle
outsl
lret
push
les
leave
dec
xor
sbb
pop
test
mov
pop
jecxz
jmp
push
inc
adc
mov
call
mov
fildl
loopne
pop
test
cmpsl
icebp
ljmp
cmp
xchg
ret
popa
arpl
mov
xchg
add
fistl
cmpsl
loopne
jmp
adc
mov
loopne
addr16
dec
jecxz
cmp
shlb
js
int3
mov
dec
imul
inc
mov
jg
lcall
mov
adc
fisttpll
push
aam
pop
jp
add
xlat
xor
fstpt
mov
cmpsl
xchg
sbb
bound
sti
imul
mov
dec
push
ret
call
scas
xorb
fdivr
jo,pn
call
sbb
call
sub
xor
sbbb
jno
out
add
popa
sbb
ret
inc
stos
pop
nop
in
out
loope
pop
fs
imul
mov
inc
stos
sub
pop
enter
popa
fcoml
xor
aam
sbb
and
mov
test
mov
hlt
in
push
jns
push
push
mov
imul
jl
sub
xor
jbe
xchg
xchg
je
rorl
sub
fsubl
jns
xor
addr16
mov
fcmovb
mov
imul
pop
mov
dec
nop
pop
cs
fisubrl
leave
lds
mov
and
push
movsb
gs
dec
test
dec
shl
repz
roll
dec
inc
icebp
cmpsb
aaa
xor
lahf
xor
dec
sub
lret
ljmp
mov
pop
mov
pop
lret
mov
push
pop
add
xchg
push
jg
xchg
loopne
or
lcall
fwait
inc
or
ret
sbbl
pop
add
sub
ret
lcallw
or
push
sbb
mov
push
pop
dec
add
sub
ljmp
xchg
divb
fisubrs
push
cmp
jg
popa
stos
fildl
pusha
pop
hlt
dec
cmp
jl
or
dec
dec
loopne
sub
inc
sti
in
and
les
test
aad
outsb
push
dec
mov
ja
mov
jbe
mov
shrl
setb
stc
movsl
sti
sbb
fisubrl
fst
inc
cwtl
cmp
or
imul
fisubrs
xor
push
mov
cmp
xchg
int
sub
nop
add
inc
xor
mov
sbb
leave
push
mov
repnz
xor
pop
das
hlt
dec
xchg
aad
pop
add
fdivrl
les
mov
and
adc
push
mov
jb
and
stc
out
inc
and
sub
aam
and
jae
insl
jbe
dec
dec
shll
stos
and
or
sbb
push
xchg
mov
pusha
jmp
xchg
es
dec
push
pop
jb
and
ljmp
sbb
mov
add
test
sub
sbb
ljmp
lret
dec
fstpl
xchg
subb
leave
paddb
bound
and
sub
mov
inc
stc
shll
jb
xchg
inc
or
mov
mov
xor
xchg
dec
stos
test
and
lods
jno
push
dec
and
pop
cmc
xlat
and
lret
mov
imul
xor
fs
stos
sub
mull
mov
aam
repnz
adc
mov
cmp
xorl
push
movsl
mov
test
pop
shlb
and
hlt
in
pop
sub
jp
sti
push
mov
pop
jle
or
pop
xchg
idiv
fwait
jmp
or
xor
or
mov
xor
shll
rcrl
and
div
out
ret
mov
mov
cmc
fisubl
mov
into
jb
xor
pop
stc
test
cld
pop
or
sbb
push
or
push
sbb
sbb
and
xchg
std
jb
sti
fld
sahf
push
js
adc
scas
insb
sub
stos
push
sbb
dec
jae
test
push
es
aad
mov
mov
decb
imul
sbb
mov
ljmp
push
inc
lock
mov
jmp
sbb
sbb
jp
mov
jecxz
hlt
pop
xchg
jne
push
pop
push
mov
xor
jb
arpl
leave
faddp
mov
sub
xchg
adc
push
lea
add
test
pusha
push
mov
mov
rcrl
fdivp
xchg
call
fidivrs
rcrb
dec
xchg
inc
pop
or
mov
mov
sub
sub
jnp
cmp
cmpsb
sub
adc
hlt
push
inc
aam
pop
push
arpl
xchg
pop
jmp
ss
mov
add
js
lods
jle,pn
das
xor
movsb
pop
stos
mov
mov
or
fimull
outsl
xor
pop
shrl
adc
fmull
mov
push
push
fiaddl
pop
jb
push
adc
add
lds
or
mov
out
jne
ljmp
arpl
or
bound
enter
jle
fsubrs
rcr
sarb
lahf
pop
jmp
cmp
sti
inc
data16
add
inc
les
mov
xchg
shlb
jg
lods
sub
inc
insb
movsl
pop
repz
add
push
and
test
bound
out
aad
xchg
mov
or
push
out
frstor
push
sbb
outsl
sub
push
sar
xchg
outsb
push
jns
sarb
dec
leave
ficoml
pushf
push
lahf
push
adc
lods
stc
das
mov
add
imul
rcrl
jbe
sbb
mov
test
fcmovne
ret
sub
inc
or
orb
aad
iret
stos
shrl
mov
pop
sub
inc
das
fcomps
xchg
leave
add
fmuls
stos
lcall
in
in
dec
sbb
cmp
sbb
and
or
js
push
loope
lret
push
sub
mov
adc
jne
test
sub
nop
push
hlt
fsubr
dec
mov
shll
icebp
mov
pop
ds
sbb
adc
mov
adc
lea
cmp
push
adc
xchg
adc
sbb
mov
jnp
dec
cld
jo
repz
pop
push
push
and
mov
lods
scas
pusha
jns
xchg
jmp
mov
push
mov
and
adc
cmpsl
push
shlb
pop
sub
xchg
mov
cwtl
cmp
jecxz
push
addr16
mov
xchg
arpl
mov
daa
xchg
ljmp
test
sbb
call
push
out
xlat
nop
fsubl
pop
jb
mov
das
jb
and
xchg
pop
dec
xor
pop
int3
out
jp
xor
lds
inc
sub
sahf
iret
repnz
neg
enter
movsb
push
jnp
cwtl
or
fucomip
call
js
nop
xchg
jmp
push
or
lds
mov
mov
push
mov
outsb
xchg
push
imul
aaa
hlt
movsl
sbb
lahf
push
xor
lret
out
pop
pop
fcmovne
adc
rcrb
aam
adc
sub
push
adc
ja,pn
xor
sahf
mov
ret
pop
jae
xchg
push
nop
aas
faddp
xchg
mov
mov
pop
orl
and
hlt
jne
aad
hlt
xor
pop
adc
xchg
pop
lret
xlat
xor
out
ds
out
out
aaa
jg
dec
lock
repz
clc
cmp
test
sti
popa
lea
iret
fs
and
or
js
repnz
sub
adc
outsl
mov
sti
aaa
dec
jp
cltd
sub
fdivrs
inc
xchg
mov
lods
xchg
ljmp
inc
rolb
mov
in
jae
dec
jmp
imul
cmp
insl
rcr
add
mov
and
or
aas
xor
int
pop
and
adc
dec
xorb
rcrb
rol
test
mov
fucomip
hlt
jl
sbb
xor
jge
call
mov
pop
sub
mov
fcompl
inc
mov
test
xchg
xor
sbb
mov
mov
incl
fimull
insb
aam
xor
shr
test
jmp
lods
dec
movl
or
ret
sbb
setg
shll
insl
loopne
xor
adc
test
scas
test
test
push
out
cwtl
sbb
mov
add
inc
popl
mov
add
inc
pop
in
xor
stos
xor
rorb
xchg
adc
inc
test
push
mov
fs
jle
xlat
push
mov
stos
cmp
push
cmp
ret
addr16
scas
add
outsb
cmp
and
scas
xor
popa
or
lods
lds
mov
xchg
popa
add
mov
adc
ficompl
mov
mov
ja
mov
add
fcmovb
xor
adc
sbb
ljmp
insb
insb
test
inc
inc
adc
or
xor
add
scas
test
or
sbb
add
cwtl
sbbb
test
adc
sbb
test
push
int3
xchg
mov
loopne
jle
push
scas
jmp
xor
icebp
or
out
dec
push
jg
ret
xchg
testl
xor
fldl
sbb
or
sbb
into
push
add
jmp
adc
or
rcr
pop
clc
sub
cltd
nop
call
xor
add
testl
mov
adc
xchg
sti
outsb
enter
pop
sbb
or
lret
push
scas
shrl
sbb
call
and
sbb
lret
jno
sbb
scas
cmpsb
out
test
or
rorb
mov
jp
cmp
fbld
lret
mov
or
cmc
ret
dec
out
imul
pop
xchg
daa
pop
out
sub
int
or
push
pushf
imul
pop
pop
frstor
push
sub
xchg
mov
inc
and
mov
mov
repz
outsb
dec
repz
inc
cmc
pop
xor
mov
enter
scas
into
cltd
jecxz
leave
fadd
cld
pushl
int3
sub
adc
loope
mov
push
and
sbb
sub
mov
pop
repnz
test
xchg
cmpsl
or
jns
or
jnp
mov
shll
dec
push
adc
pop
or
mov
pushf
arpl
push
jbe
jno
fsubs
adc
sbb
dec
das
mov
xchg
mov
push
jns
cli
dec
pop
mov
jmp
mov
and
jns
outsb
adcb
setg
push
test
outsl
test
int
cmp
jmp
jl
inc
push
mov
push
fdivs
mov
sbb
std
push
or
scas
lods
loopne
ret
mov
shr
jge
mov
loop
sub
mov
pop
imul
pop
push
lret
sbb
shl
jmp
mov
pop
sbb
sub
cmp
cmp
adc
mov
cmp
ljmp
or
pop
push
fldenv
aas
push
inc
push
cmp
hlt
roll
stos
in
les
stos
sahf
scas
push
iret
mov
add
pop
jp
mov
cmp
add
jbe
push
nop
xor
pop
arpl
shll
test
sbb
pop
mov
xchg
mov
rcl
stc
jae
adc
xor
push
xchg
jg
inc
xor
cmp
jg
mov
adc
cltd
mov
sbb
mov
jae
mov
scas
pop
rorl
jno
sahf
lahf
inc
lret
scas
cmp
dec
sub
cmp
out
pop
iret
std
outsl
pop
movsl
rcl
cmp
pop
push
ljmp
ljmp
jne
mov
xchg
ljmp
mov
popa
mov
in
inc
sub
out
sbb
shl
inc
icebp
jmp
out
push
jno
gs
adc
iret
orl
iret
push
scas
call
mov
loopne
adc
pop
imul
fwait
outsl
pop
dec
jmp
sbb
cwtl
jb
mov
mov
mov
in
out
sahf
and
cmpsl
and
push
push
les
add
cmpsl
xchg
and
xor
lods
dec
cmp
mov
ret
jne
fs
pusha
aad
sub
mov
pushf
push
mov
sti
pop
mov
repz
hlt
ret
out
sub
fildll
lret
dec
insl
js
mov
push
pop
push
lahf
pop
lds
shlb
clc
movsb
xchg
fmuls
pop
ffreep
shll
mov
jle
xor
negb
int3
icebp
loope
add
xchg
inc
ljmp
mov
fnstcw
push
outsb
mov
jbe
hlt
outsb
push
adc
sbb
cmp
mov
je
imul
scas
push
idivl
std
out
adc
mov
js
add
cmp
add
cmpb
scas
addl
jbe
stos
test
jmp
dec
dec
ds
mov
stos
loopne
jmp
shlb
adc
gs
in
insl
mov
xor
and
das
xor
cld
sub
push
in
mov
and
inc
adc
xlat
call
or
pop
out
mov
mov
out
popa
fadds
dec
mov
rcr
add
jne
mov
jge
xchg
or
push
push
jno
dec
add
mov
mov
hlt
scas
or
push
sub
gs
nop
scas
fisubrl
stos
push
dec
mov
mov
sub
sbb
aad
or
mov
fidivs
in
mov
xchg
xlat
loopne
out
ljmp
into
adc
stos
xor
adc
sub
dec
sub
and
stos
dec
adc
fisubs
cwtl
dec
inc
jmp
inc
hlt
lock
jmp
sub
call
sub
mov
popa
push
je
jl
jge
daa
loop
sub
adc
mov
sbb
popf
xchg
or
popf
dec
mov
mov
pushf
push
dec
sahf
push
fisttpll
ss
clc
sar
fcomip
add
or
jae
add
mov
in
add
dec
sbb
sbb
repnz
js
cs
outsb
cs
pop
bound
jle
pop
dec
leave
xor
ret
add
cmpsb
xchg
test
push
orb
mov
fisttpll
cmp
leave
movsl
cmpsl
jle
cmp
insl
insl
imul
fwait
adc
repnz
mov
ja
in
pop
lret
lock
movsb
movsl
cs
mov
shl
mov
xor
movsl
iret
out
int3
inc
adcb
lret
loopne
lods
add
jg
inc
pop
sub
xor
shrl
mov
aaa
jl
les
dec
cmp
cmp
call
pusha
and
addr16
sub
addl
inc
mov
sbb
mov
xlat
je
mov
mov
cmp
fwait
or
scas
adc
or
push
xchg
lret
test
fwait
ljmp
cmp
push
lds
stos
sarb
xor
fs
aam
outsb
sarl
call
dec
and
sbb
cmp
cmp
pop
sbb
adc
cwtl
dec
lods
mov
sbb
imul
adc
fldl
sti
mov
ret
mov
dec
push
test
add
add
imul
xchg
dec
sub
cmpsl
jno
sub
inc
push
ficomps
push
mov
test
xor
xlat
push
aaa
mov
pop
push
jmp
sub
pop
xorl
jb
outsb
pop
adc
add
xor
pop
and
stos
and
std
rorb
out
aad
outsb
jmp
mov
daa
and
dec
out
push
pop
scas
and
in
adc
stos
cmpsb
adc
loopne
inc
test
xchg
push
dec
jns
mov
add
movsl
xchg
rolb
mov
mov
xor
loopne
sub
adc
je
mov
cmpsb
jns
testl
inc
or
and
xchg
adc
xor
mov
fldcw
sbb
push
adcl
div
or
push
or
push
xchg
xor
hlt
js
mov
jle
dec
inc
enter
js
pusha
movsl
mov
std
mov
sbb
lods
cld
jle
mov
divb
sub
pop
mov
xchg
mov
sub
mov
rcrb
pop
ds
add
in
mov
das
push
cmc
mov
push
movsl
sti
jmp
dec
mov
es
xchg
mov
leave
fcoml
repnz
clc
push
clc
xchg
push
cmpsl
xor
push
cmp
scas
cld
pushf
dec
dec
int3
mov
cli
jns
pushf
pop
xor
inc
add
push
fidivs
imul
xchg
rcrb
jg
inc
in
lret
inc
push
or
xor
mov
shrb
cltd
adc
adc
add
or
lea
aad
insl
aam
pop
jo
popa
sub
fisttpll
rolb
sub
cmc
je
cs
imul
sahf
sbb
addl
movsl
iret
pop
dec
mov
inc
out
xor
subl
sahf
nop
push
popa
stos
push
mov
cmpsb
cmp
pop
fs
jg
sub
xor
mov
shrl
dec
jecxz
int
fildl
ja
jge
jle
jmp
xchg
xchg
mov
add
push
scas
in
sbb
adc
jge
push
jmp
mov
push
sub
sub
in
mov
cld
addl
mov
pop
jl
pop
and
test
mov
mov
mov
push
arpl
cmp
testb
lods
out
pop
inc
jno
rcrb
fisttps
pop
sub
icebp
nop
punpckldq
shrb
mov
ret
dec
fldt
jne
pop
push
inc
leave
fistps
push
sub
sbb
cmpsl
sahf
xor
out
adc
imul
shlb
inc
into
fs
dec
fisubl
sub
sbbl
ljmp
aam
std
enter
or
mov
ljmp
mov
push
mov
add
pop
dec
jnp
hlt
xlat
int
jl
addr16
mov
cmp
adc
cwtl
cmp
lahf
xchg
push
pop
mov
lods
xchg
adcb
mov
test
and
stos
rcrl
dec
pop
aad
xor
imul
sbb
cli
fdivr
mov
sar
sbb
idivl
shlb
arpl
or
and
jne
lret
push
fiadds
sti
in
pop
jnp
repz
out
sbbl
dec
pop
xchg
lcall
cs
or
lcall
cmpsb
or
je
xchg
xchg
mov
rclb
nop
xor
pop
shl
loope
gs
les
lcall
adc
xchg
std
filds
mov
int
jne
sbb
pop
fwait
sbb
xchg
add
push
mov
and
es
gs
push
mov
imul
mov
xchg
push
cmpsl
int
and
mov
sbb
jle
push
cltd
push
pusha
xlat
pop
cmp
sahf
pop
outsl
inc
bnd
sub
mov
stc
jae
jns
mov
inc
and
inc
adc
ja
std
leave
jecxz
mov
rcrl
call
ja
imul
lods
mov
cmp
pop
and
popa
add
mov
or
rorl
mov
insb
push
popa
int3
adc
sbb
adcb
xchg
sbbl
jg
mov
shlb
js
test
sbb
insl
xchg
or
pop
push
add
sbb
stc
mov
imul
stos
push
pop
scas
imul
mov
dec
leave
or
scas
pop
sub
int
pop
jle
cmpsb
jge
mov
fidivrs
sahf
fs
addr16
mov
mov
xor
sbb
subb
out
jae
add
lea
into
scas
jo
call
adcb
fidivrs
mov
jge
pop
sti
jge
xor
cmp
pop
call
xchg
dec
sbb
ljmp
insl
insb
imul
adc
mov
xor
mov
xchg
mov
lea
inc
icebp
or
cmp
sahf
shlb
cmp
fbstp
test
dec
xchg
syscall
xchg
xchg
mov
adc
push
and
ljmp
jb
push
dec
cmp
cmp
and
xchg
xor
mov
lret
add
pop
cmpsl
push
mov
xor
push
sub
test
je
in
push
pop
test
jo
imul
stos
xor
pop
cmp
pushf
add
test
adc
dec
mov
outsl
xchg
sbb
mov
inc
sbb
or
lcall
push
jbe
mov
mov
lea
dec
jle
dec
pop
int3
in
imul
mov
adc
jecxz,pt
lds
loopne
insb
cmp
mov
xchg
decb
mov
sbb
loopne
pop
addl
mov
cmp
push
dec
jle
push
pop
outsb
add
dec
stos
mov
or
push
loope
pop
sbb
ja
adc
inc
ljmp
vmread
test
ss
sahf
jmp
cmp
fstpl
jecxz
pushf
imul
pop
sbbl
sahf
lds
into
mov
in
mov
mov
aaa
mov
imul
push
insb
lock
movsl
test
jo
mov
aad
or
sbb
adc
pusha
sahf
xchg
jmp
cmp
lret
pusha
sub
fs
lea
inc
les
mov
or
cmp
jg
mov
sahf
pop
or
iret
jns
or
movsb
test
xchg
fs
and
loop
push
xorl
adc
mov
loope
fs
cli
scas
dec
ljmp
pop
or
iret
add
loop
mov
fwait
inc
jmp
js
mov
fimuls
out
bound
cmp
sbb
imul
fdivrs
stos
les
ret
ja
int3
arpl
or
xor
mov
xor
pusha
aam
iret
lds
push
test
jecxz
lods
mov
ficoml
neg
cmc
xorb
or
mov
push
mov
fwait
jne
inc
lea
push
cwtl
ficomps
addl
jo
dec
xor
mov
jle
adc
xor
lahf
cmp
xchg
jns
xor
jl
adc
addr16
mov
das
loop
mov
loope
insl
jae
add
sahf
mov
lea
inc
cmc
inc
push
cli
nop
pop
cmpsl
in
lea
cmpsb
incb
sub
hlt
sahf
call
mov
pop
inc
pop
add
xorb
ret
pusha
gs
mov
ret
scas
js
jg
mov
cmp
inc
pop
add
ds
cmpsb
jo
outsb
cld
fcoms
aas
nop
shrl
xchg
pop
test
push
cmp
call
shr
lds
fistps
push
int3
cmpsl
mov
jecxz
inc
scas
lret
pop
sub
sub
shrl
mov
lret
push
xor
push
pop
fiadds
add
xor
adc
inc
shrb
rcrb
outsl
sti
cmp
icebp
push
mov
cmp
es
mov
lahf
adc
mov
aam
data16
fisttpl
or
jno
movsb
and
push
popf
or
sbbb
insb
std
rclb
sub
in
xchg
stos
movsb
and
or
sbb
mov
mov
sarb
sti
sti
push
idiv
leave
mov
call
pop
lds
in
dec
mov
test
test
in
lcall
stc
test
xchg
mull
cld
mov
xor
push
imul
out
inc
insb
xchg
xor
je
adc
test
xchg
add
cmp
out
or
push
lock
or
ret
xchg
scas
xchg
push
pop
cmpsl
outsl
ret
jb
lds
cwtl
dec
call
push
xchg
incb
xor
pop
mov
loop
test
dec
push
lds
xor
adc
cs
pop
pop
dec
and
and
jle
movl
loopne
jg
jno
in
shrb
cmp
or
jmp
mov
mov
push
xor
push
ljmp
ret
orb
mov
jbe
and
cmpsb
movsb
jb,pn
shrb
sahf
fldl
sbb
cmp
out
lods
mov
out
fcomp
adc
fsub
or
jl
insl
or
xchg
movsl
bnd
sub
inc
imul
push
outsl
pop
or
push
xchg
jle
add
scas
pop
sbb
ret
ret
push
push
add
cs
mov
or
lret
andl
and
jmp
mov
push
mov
lcall
jg
scas
icebp
cmp
xchg
dec
jmp
pop
out
cmpsb
stc
add
lock
pop
sbb
xchg
mov
mov
aad
neg
push
push
xchg
sarb
inc
jns
mov
pusha
inc
or
and
lds
stos
adc
cli
sbb
push
cmp
mov
pop
dec
repnz
pusha
cmp
xchg
out
in
orl
ljmp
push
ret
adc
jnp
sahf
inc
cmp
shlb
xchg
dec
mov
and
pushf
pop
aam
andl
setno
and
pop
pop
pop
mov
push
inc
ret
out
adc
iret
xchg
jp
ret
mov
sbb
or
sub
add
dec
das
hlt
lahf
sbb
movsb
les
mov
sub
add
cmp
mov
or
pusha
push
enter
mov
xor
or
test
pusha
ds
mov
mov
enter
inc
cmpsb
xchg
xchg
dec
lahf
push
bound
add
mov
push
inc
mov
pop
lock
push
mov
and
pop
pop
inc
mov
mov
push
dec
xor
int
arpl
sub
inc
ds
subb
leave
sbb
jb
scas
mov
mulb
pop
bound
cld
mov
jns
cltd
clc
xlat
iret
push
test
push
mov
jnp
and
pop
push
inc
addl
dec
mov
xchg
cmp
jp
pop
ja
pop
imul
mov
les
hlt
paddusw
mov
add
or
sbb
stc
or
int
loope
jo
jnp
pop
adc
nop
cmc
adc
adc
mov
leave
mov
push
mov
int3
ret
mov
or
popa
xor
cmpb
xchg
fmuls
cwtl
repz
jb
mov
jge
sub
jle
sahf
jg
rcrl
add
cltd
hlt
xor
pop
clc
fiadds
scas
shrb
cld
mov
lods
ror
dec
test
les
arpl
push
lahf
add
pmullw
push
pop
cmp
adc
jnp
imul
add
pextrw
aas
imul
mov
xor
xor
dec
push
mov
fdivrs
popf
mov
pop
and
mov
add
pop
or
or
bound
xor
out
mov
fcoml
xor
push
xchg
xchg
xchg
stos
push
pop
push
push
xor
xlat
and
sub
push
add
add
dec
xchg
xchg
mov
lods
mov
sbb
sub
stos
and
push
xchg
mov
lock
push
mov
dec
lret
cmpsl
dec
incb
inc
inc
in
cmp
pop
notl
les
bound
add
decb
add
outsl
xor
bound
in
mov
outsl
cli
mov
js
adc
and
aam
push
les
gs
mov
jp
aaa
mov
rcrb
cmp
and
push
fldenv
pop
sbb
sbb
shrl
fdivs
ljmp
xlat
mov
mov
mov
iret
add
xchg
xor
dec
testl
add
jo
sbb
add
mov
pushf
movsb
shll
arpl
push
mov
leave
ret
cmp
aas
pushf
lock
sbb
mov
xchg
ljmp
add
inc
xchg
aas
mov
jns
adc
fsubrl
inc
sahf
lods
stc
mov
dec
sbb
pop
pop
inc
addr16
xchg
shrb
xor
fstl
mov
jg
cmp
add
sbb
les
mov
out
leave
push
scas
stos
cltd
mov
fdivrp
push
lret
cmp
ds
push
or
repz
scas
outsl
mov
cmpb
and
lods
sbb
addr16
sbb
sub
cmpb
lret
push
fs
mov
fisttps
xchg
iret
out
adc
xchg
xchg
stos
jae
sub
xor
in
or
xor
leave
lret
add
pop
cmp
or
rol
mov
adc
cwtl
or
or
mov
inc
jp
mov
jmp
insl
mov
or
add
mov
roll
or
and
add
cmc
push
cld
testb
push
in
push
pop
les
fisttpll
xchg
jns
cmp
xor
pop
inc
pop
in
sbb
mov
lods
sbb
lret
xchg
push
sbb
mov
dec
xchg
mov
fldl
dec
or
dec
cmp
pop
xchg
icebp
pop
mov
paddusb
add
jne
call
pusha
scas
int3
push
xchg
sub
lods
popa
jne
in
jecxz
xchg
sub
cmp
inc
das
add
fbstp
add
iret
sub
jo
adc
xor
popa
jnp
mov
sbb
jno
sbb
stos
xchg
mov
jns
out
mov
or
cmp
stc
or
ljmp
test
std
rorb
outsl
or
mov
pop
xchg
sbb
loopne
adc
sub
dec
ret
xchg
pop
pop
iret
dec
outsb
test
add
ret
cmpsb
imul
cmp
testb
pop
mov
hlt
and
ss
add
imul
mov
or
xor
sbb
inc
jp
and
aaa
sti
cld
lea
enter
bound
sbb
fstpt
ja
push
es
imul
jno
jle
int
in
sbb
pushf
nop
lock
adc
mov
rcl
mov
xor
pop
sbb
inc
or
mov
stc
ficomps
cli
adc
addb
xchg
push
dec
sbb
mov
fildl
jne
cmp
js
pop
dec
push
scas
push
std
mov
push
mov
addl
push
xor
cltd
sbb
pop
add
insl
mov
push
addr16
mov
faddp
arpl
daa
push
add
enter
dec
adcb
out
in
push
in
mov
pop
xchg
ja
add
cwtl
add
ljmp
pop
or
ret
test
cmp
or
jl
imul
mov
jns
dec
pop
mov
inc
cmp
dec
push
mov
add
mov
call
jne
sti
xor
sahf
scas
stc
push
mov
push
pop
shl
adc
clc
iret
jp
not
scas
clc
push
stc
xorl
lods
les
fld
or
insb
mov
dec
lods
arpl
jo
pop
mov
in
clc
in
or
ljmp
push
mov
out
mov
adc
test
fs
test
nop
xor
jne
mov
xor
cmc
mov
clc
clc
cs
xor
dec
jmp
jo
sbb
or
mov
push
inc
xchg
xlat
idivl
in
mov
push
ret
lea
mov
into
fcompl
mov
xlat
pop
cld
aaa
loop
inc
cmpsb
inc
pop
ljmp
add
stos
test
repz
stc
loopne
xor
les
test
filds
pop
xor
xchg
mov
mov
dec
adc
add
scas
iret
cmp
popa
cs
aaa
cmp
adc
sarb
adc
and
jnp
xchg
cmp
pop
add
addl
repnz
mov
icebp
loopne
xor
push
lds
scas
adc
aaa
adcb
adc
rol
jmp
add
xchg
sarl
push
lods
out
jns
push
fldl
mov
or
inc
test
push
shrb
or
test
outsb
pcmpgtw
pushf
sbb
imul
pop
divl
lods
popa
dec
xor
into
xor
fwait
cli
push
pop
mov
inc
xor
mov
inc
aas
mov
and
scas
mov
add
je
xchg
jne
stos
mov
cmp
mov
out
or
mov
lret
fcmovnu
push
jne
mov
test
sub
cmpsb
add
inc
out
sbb
and
cmp
imul
mov
lret
cmp
fwait
mov
sbb
rorb
mov
sbbb
lret
pop
push
xor
mov
inc
or
mov
push
push
mov
out
movsl
fwait
sub
cvtps2pd
pusha
dec
xchg
add
xor
pusha
inc
jb
data16
fsubrs
and
pop
push
push
dec
test
adc
xor
shufps
or
addb
xor
mov
repnz
push
ds
or
loope
jno
mov
ss
cmp
jnp
mov
pop
mov
cmc
out
mov
imul
adc
add
pop
lea
lds
and
out
lods
pop
pop
lret
lret
mov
inc
mov
mov
lret
mov
adc
ds
push
test
out
mov
jno
adc
jne
stos
pop
loop
dec
pop
dec
bound
pop
xor
subl
pop
sub
imul
jmp
push
outsl
xor
xor
jmp
add
pop
xor
xor
sub
stos
aam
ret
ljmp
jbe
lahf
inc
mov
fisubl
sub
std
ljmp
adc
cmp
ds
mov
fsts
xchg
add
fisubl
cmp
in
es
aaa
xchg
adc
mov
stos
out
fists
push
enter
add
dec
push
hlt
dec
pop
jmp
or
mov
mov
sub
mov
movsb
test
cmp
cmp
adc
pop
cmp
cmp
mov
or
ja
sbb
sbb
jmp
out
lea
mov
push
add
mov
dec
cmpl
xchg
orb
push
arpl
ljmp
pop
dec
xchg
sub
mov
fists
test
cmp
sub
cmpsb
cmpsb
sti
arpl
loop
addps
test
pop
sbb
jle
mov
sbb
out
hlt
xor
cmp
jge
daa
cmpsl
cmc
dec
sub
pop
fildll
xor
ss
imul
mov
cltd
into
aam
adc
xchg
cmp
pop
outsb
imul
jns
cmc
scas
addr16
inc
out
jmp
std
iret
lcall
cmp
jnp
aad
jg
cmp
cmc
sahf
adc
sub
js
pushf
xchg
push
pusha
popf
enter
ret
or
ds
jmp
insb
xor
cmp
cmp
in
sahf
popa
addl
pop
push
inc
imull
mov
sbb
xor
mov
cmp
outsl
fnstcw
or
jecxz
inc
pop
adc
pop
movsb
mov
jbe
les
dec
daa
xchg
insb
mov
sub
movsb
shll
cmp
ret
cli
jp
cmp
in
push
dec
sbb
cmp
mov
inc
popa
and
popa
add
pop
or
stos
stc
push
pop
loope
rclb
mov
lcall
cmp
xchg
in
lods
aam
mov
orb
jo
jecxz
dec
mov
test
insl
fwait
orl
leave
or
sbb
lea
or
cmp
in
lret
pusha
mov
mov
pop
push
mov
jo
aas
xor
gs
scas
rcl
scas
pusha
rorb
outsl
aad
xor
filds
rcll
or
cmp
lret
pusha
rclb
mov
shrl
sahf
or
dec
jmp
xlat
mov
stos
ss
fildll
mov
push
mov
mov
push
mov
pop
stos
lahf
jb
pop
fidivrl
mov
push
insb
sbbb
loopne
dec
dec
movsl
std
lret
imul
pop
sbb
in
sbb
xor
jb
bound
sub
rcrb
das
mov
pop
cmp
mov
mov
push
shlb
inc
xchg
add
mov
aaa
outsb
or
inc
jmp
xchg
dec
sti
and
mov
in
mov
dec
dec
hlt
push
insb
jecxz
inc
daa
lods
add
sbb
add
sbb
jecxz,pt
jp
out
pop
call
push
sahf
sti
sub
xlat
mov
sbb
add
push
sbb
add
repnz
cmpsl
out
dec
cmp
inc
pop
arpl
xor
push
ljmp
imul
popa
dec
out
aaa
in
or
jp
jecxz
xlat
sbb
out
add
ljmp
iret
imul
fldenv
or
aaa
ljmp
imul
std
mov
pushl
mov
sbb
sbb
sbb
dec
sbb
xchg
insb
inc
in
adc
fwait
nop
arpl
xchg
sbb
pop
je
adc
in
sbb
mov
cmc
cmp
mov
mov
addr16
mov
sbb
daa
add
int
and
fs
leave
popa
inc
jns
inc
dec
push
pushf
jo
mov
pushf
dec
add
dec
jge
jno
inc
ds
and
sarb
out
adc
daa
stos
cmp
cld
mov
sbb
in
push
add
test
adc
outsb
cmpsl
sbb
sahf
mov
loope
movsb
fwait
cmc
test
cltd
mov
jnp
mov
xchg
popa
test
push
or
mov
adc
je
mov
pop
mov
push
inc
dec
jno
fisttps
jbe
cltd
cltd
daa
mov
mov
loop
int3
pop
push
and
push
cmp
bound
stc
cmc
aad
inc
scas
imul
fldcw
mov
dec
xor
inc
js
scas
in
popa
hlt
xor
mov
aas
jl
sub
cmp
mov
cwtl
int3
xchg
loopne
cmc
lock
sbb
enter
push
mov
adc
mov
pop
leave
dec
leave
mov
xorb
xchg
adc
cmc
test
xchg
adc
mov
out
rolb
scas
mov
aaa
test
xor
in
cltd
jmp
pusha
loope
and
lock
mov
pop
sti
outsl
jl
xlat
rclb
cmpb
push
sbb
sbb
cmp
push
mov
cli
and
je
sub
adcl
imul
mov
jnp
mov
test
adc
lret
sbb
aad
sub
jne
clc
add
or
xchg
movsb
mov
call
gs
pop
jo
xor
jbe
mov
push
mov
imul
add
ds
xchg
add
pop
add
add
mov
cmpsl
or
popf
jl
ret
pop
xor
and
pop
sbb
clc
mov
cwtl
add
icebp
rclb
push
pop
and
lods
mov
adc
or
xor
dec
or
out
pop
xchg
mov
aas
pop
xor
add
and
push
mov
cmc
sub
mov
hlt
test
addl
sbb
adc
aad
pop
aaa
clc
imul
scas
aas
dec
and
mov
test
lock
jle
xor
sub
shr
fisubs
inc
sbb
sub
push
mov
mov
xchg
and
sti
nop
sbb
pushf
and
out
and
frstor
and
sub
inc
cmpsb
ffree
mov
jmp
andl
pop
dec
lret
fmull
mov
xor
arpl
insl
mov
lret
sub
mov
xchg
je
adc
test
mov
jo
mov
inc
and
test
mov
popa
inc
aaa
scas
loopne
adc
iret
jp
je
stos
pushf
in
push
pop
pop
lret
mov
jb
adc
jae
out
mov
call
push
loopne
aaa
ljmp
adc
iret
push
sbb
lods
and
pop
cmp
les
cmp
fisubrs
pop
lea
cmp
pminsw
or
fbld
fucom
adc
fucomi
lds
push
punpckhbw
sub
xchg
add
lret
stos
add
inc
leave
dec
stos
pop
push
add
or
jp
mov
push
mov
push
mov
popa
adc
ror
push
ljmp
addr16
sbb
jnp
add
stos
pushf
push
adc
filds
push
aaa
cmpsl
mov
mov
jae
sbb
sub
loopne
loop
sbb
push
inc
cmp
pop
lahf
pop
or
ret
arpl
hlt
xor
mov
aam
pop
push
mov
outsl
push
insb
sub
sbb
push
test
xor
mov
les
gs
pop
and
fdivl
sub
aaa
fimull
mov
or
int3
imul
dec
sbb
push
jns
das
shll
inc
pusha
mov
mov
test
sbb
insl
mov
jp
fsubrl
addr16
adc
daa
jb
mov
pop
mov
pop
sbb
jno
sub
popa
push
aaa
call
xlat
xlat
adc
addr16
jo
push
ljmp
push
mov
sbb
fcmovnu
out
jno
cmpsl
mov
cmp
hlt
in
or
ljmp
push
mov
or
push
push
or
mov
ljmp
dec
cmc
fs
or
ljmp
cmp
mov
pop
dec
adc
ja
in
dec
movsl
rorl
addr16
add
jecxz
mov
lock
lret
xchg
shll
jmp
ror
test
cmpb
pop
or
icebp
aaa
in
icebp
mov
and
shrl
adcl
mov
push
adc
add
mov
inc
mov
lret
jbe
js
lret
pusha
les
push
or
mov
push
fidivl
xor
mov
ljmp
shlb
xchg
ret
cmc
loope
ret
icebp
sbb
hlt
fs
or
ljmp
push
incl
lahf
cli
push
push
push
mov
sbb
mov
scas
rcrl
or
inc
cmp
ljmp
frndint
std
sti
pmullw
ljmp
mov
fs
clc
push
rcll
outsb
push
xor
mov
push
mov
adc
jne
repnz
jmp
mov
mov
fsubrs
lock
cmc
dec
repnz
ljmp
lds
pop
test
rcll
xlat
jp
shrb
nop
inc
pop
push
pop
rol
push
ljmp
imul
les
in
aaa
int
mov
inc
in
rcrl
or
mov
jb
outsb
sub
mov
lods
push
sbbb
ljmp
fnstenv
loop
aad
in
push
dec
shl
ljmp
pop
out
in
or
ljmp
push
mov
bsf
dec
mov
rclb
clc
mov
out
adc
arpl
lea
popa
mov
ja
cmp
xchg
cmp
into
std
mov
dec
jmp
cs
lock
or
mov
push
je
sti
add
sub
mov
sbb
in
fs
or
in
pop
lret
push
mov
sub
sbb
jle
cmc
pop
ss
imul
mov
xor
stos
les
insb
inc
xchg
cmp
and
jno
push
mov
orb
nop
pop
subb
adc
add
rclb
dec
mov
jo
inc
shl
ljmp
aam
scas
pop
push
hlt
lcall
push
mov
add
js
adc
cld
nop
addr16
xchg
insb
dec
aas
repz
out
mov
in
or
jg
ljmp
scas
addl
bound
or
outsb
orl
loope
fcomps
rorl
imul
insl
jae
mov
push
imul
arpl
inc
addl
outsl
inc
dec
xor
sbb
scas
rorb
xchg
outsb
fldl
inc
aad
pop
out
fcomps
das
pop
jae
push
jle
jge
outsb
mov
jns
pop
pusha
rorb
pop
movl
daa
add
dec
mov
pop
mov
xor
jo
cmp
pop
mov
cs
stos
lret
es
stos
sub
loop
or
mov
test
push
mov
shrb
sbb
rcrl
test
or
ljmp
sarl
pop
push
insb
push
xor
push
test
jl
popl
jbe
or
test
gs
fstl
lcall
data16
loope
xchg
sub
in
cmp
cli
mov
pop
out
pop
jb
les
push
mov
cmp
mov
test
negb
sbb
mov
lods
out
aad
or
sbb
pop
out
mov
fsts
xchg
adc
mov
clc
xlat
ds
mov
mov
pop
cwtl
or
test
loop
jmp
jo
aad
arpl
mov
or
adc
mov
add
jge
lea
or
xor
sub
jns
mov
test
add
pop
dec
push
movsl
pop
cmp
clc
std
jne
dec
push
ds
mov
pop
mov
jno
lahf
or
aaa
pop
aad
or
cli
lcall
jo
fiadds
push
loop
fcompl
mov
or
sbbb
pusha
or
pop
or
lock
xchg
jbe
fsub
sbb
fadds
mov
xor
or
push
movsb
flds
out
gs
stos
clc
fsubrs
push
mov
jbe
fwait
sub
popf
inc
mov
mov
add
push
cmp
push
cld
lods
popa
pop
jg
adc
loopne
out
dec
rsm
pop
nop
sbb
xor
mov
or
adc
xchg
sbb
or
rolb
add
pop
ljmp
aaa
lret
xorl
or
mov
push
xchg
arpl
dec
test
jae
fisubrs
imul
mov
vpavgw
scas
dec
ljmp
xchg
pop
push
push
xor
insb
rcrl
fwait
clc
lahf
xchg
shr
or
mov
movsl
movsb
jne
pop
xchg
shlb
mov
jp
xorb
jne
insb
sub
std
popl
cmp
aam
fisubrs
mov
push
outsl
jge
xor
pop
add
pop
mov
dec
out
scas
inc
hlt
mov
push
mov
fwait
sub
sahf
icebp
call
pop
fisubs
cmp
imul
aas
push
fisttpl
dec
mov
daa
fstpl
jecxz
fwait
xchg
cmp
xor
inc
add
pop
lret
push
add
adc
stos
inc
adc
and
adc
and
xchg
mov
lods
sbb
adc
mov
ficoms
stos
lahf
incb
lods
xchg
sbb
aam
push
xchg
mov
lret
test
sti
mov
in
js
lds
add
push
cltd
repz
test
je
add
loop
jae
rcrl
cli
push
mov
sub
hlt
ja
ljmp
bound
inc
adc
xchg
test
rep
push
push
inc
push
mov
stos
mov
scas
inc
cmpb
jae
or
leave
add
push
sarb
cmp
mov
vpsllw
loop
lcall
pop
cmp
mov
pop
inc
ret
subb
mov
sub
lret
repnz
insb
popa
ret
lods
xlat
mov
cwtl
int
lods
add
add
mov
xor
xor
mov
repnz
mov
int3
sahf
sbb
push
xor
cmpb
test
imul
pop
sbb
loope
sbb
pop
and
fbld
pop
subb
inc
mov
xor
push
mov
repnz
sbb
cld
xor
sbb
jp
loopne
sbb
cmp
adc
sarb
ds
jnp
xlat
mov
sbb
mov
adcl
outsb
push
ljmp
push
mov
sub
bound
xor
out
push
jge
sahf
cmp
jne
imul
jo
xor
pushl
aad
adc
sarb
cmp
mov
outsb
repz
aaa
arpl
adc
cmp
cs
and
push
out
ret
lret
outsb
popa
stc
cmp
xor
cmp
jle
cmp
loop
mov
outsl
scas
sarb
cmpb
pop
cmp
mov
aam
push
pop
push
cmp
sbb
stos
pushf
push
xor
add
xor
sbb
adc
jne
and
in
mov
jl
and
or
pop
imul
mov
cwtl
pop
popa
fdivl
cmp
lock
jp
cmp
cmp
xor
jle
outsb
sub
outsb
popa
pop
cmp
aaa
in
adc
cmp
jp
cmp
adc
xor
add
ficomps
aaa
loopne
les
xchg
adc
ret
fsubl
popa
int
pushl
cmpb
scas
fidivl
bound
ljmp
imul
imul
iret
pop
jne
scas
push
adc
sbb
imul
cmp
lock
dec
jbe
mov
outsb
repz
aaa
std
aaa
adc
cmp
push
cmp
es
xchg
adcb
fbstp
jg
leave
mov
mov
jge
push
ljmp
imul
push
fadd
mov
or
push
mov
mov
and
data16
iret
aas
push
imul
test
loopne
mov
or
push
mov
je
inc
inc
ja
cld
pushw
ljmp
xor
ficomps
sub
loope
les
scas
jae
mov
mov
fs
ljmp
jmp
sbb
sbb
pop
leave
sub
xor
popa
xchg
push
jmp
and
push
dec
adc
pop
dec
mov
xchg
mov
in
xor
add
ficomps
xor
sahf
je
xor
insl
xchg
add
out
in
and
sti
adcb
mov
cmpsb
and
hlt
imul
xor
test
inc
cmp
xchg
jb
fstps
enter
cmp
xor
adc
lock
dec
hlt
test
push
pop
subl
jo
push
cmp
sub
enter
inc
inc
jno
xor
inc
push
xor
cmp
jecxz
add
test
inc
in
fdivp
add
mov
pop
pop
jbe
xor
les
js
movl
pop
mov
pop
add
stos
wrmsr
rcrl
fadds
mov
fcompl
pop
loopne
movsb
rcrl
jnp
cmpsl
inc
mov
lds
cmpsb
lret
daa
imul
pop
rclb
add
dec
test
xchg
or
push
jae
xor
jne
mov
idiv
and
dec
loop
pop
in
es
js
ss
int3
inc
mov
subl
test
pop
pop
hlt
fisubl
or
pop
loope
aaa
fimull
push
mov
fmull
les
mov
push
adcl
pop
test
sub
sbb
sub
push
xchg
das
lea
adc
pop
add
xor
or
adc
xchg
daa
fcomps
mov
xchg
push
pop
xchg
mov
pop
jmp
bound
mov
test
xchg
ret
push
xchg
popf
sti
insb
adcb
cs
inc
daa
mov
ror
dec
push
sub
clc
fwait
mov
insl
xchg
ja
jl
cmp
das
loop
nop
adc
test
shrb
repnz
xchg
xor
dec
mov
shl
mov
movsl
mov
adc
mov
sub
movsb
jae
pop
int3
or
sub
stos
test
mov
mov
stos
lock
sbb
xchg
push
fldenv
insl
inc
fadd
push
or
xchg
das
jo
fcomi
adc
ret
negl
popf
xorb
insl
jns
xchg
push
clc
aas
pusha
clc
jmp
sti
insl
mov
cmp
mov
ljmp
iret
mov
clts
or
fwait
jmp
lea
jnp
xchg
sbb
cltd
xor
lret
add
div
cli
rorl
add
pop
or
shr
mov
imul
stos
fisttpll
sbb
test
add
sarb
dec
or
sti
mov
pop
dec
xchg
test
test
out
dec
pop
rcrb
popa
sub
xchg
dec
jmp
pop
lock
incb
xchg
and
xchg
mov
sub
pop
or
popf
adc
js
dec
pushf
out
mov
sarb
xchg
clc
add
sbb
nop
cmp
ret
push
fbld
test
jp
cmc
inc
call
mov
pop
and
fs
orl
sti
mov
movsb
ljmp
data16
or
negb
jecxz
adc
jnp
bound
rorb
js
dec
imul
stos
push
sub
xchg
mov
movsl
pop
sti
cmpsl
das
jle
lret
cs
pop
shll
jge
test
mov
inc
pop
pop
es
dec
jle
shl
leave
roll
movsb
adc
dec
fidivrs
fisttps
mov
and
imul
inc
jg
lret
gs
in
dec
adc
lods
cld
xchg
rolb
subl
rol
ljmp
sbb
mov
dec
jns
ljmp
jg
push
mov
mov
arpl
sbb
dec
imul
push
mov
xor
jnp
aaa
jmp
and
sahf
pop
stos
pop
cmp
pop
xchg
std
mov
pop
dec
mov
and
push
and
xchg
cltd
rorl
loopne
aaa
mov
pop
test
push
cwtl
inc
fisubs
bound
lahf
dec
dec
sbb
xchg
mov
dec
and
jb
cltd
test
jle
or
lea
das
sub
divl
and
aaa
adc
mov
loopne
xchg
test
push
jno
int3
fcmovnbe
sbb
pop
or
lret
xchg
mov
pop
nop
ret
dec
cmp
sub
jb
pop
test
dec
pop
test
out
xor
or
roll
mov
and
imul
jo
adc
mov
shrb
cli
test
mov
dec
and
inc
int3
mov
jp
dec
sbb
sub
mov
cmp
xchg
int3
mov
push
xchg
rorb
fisttps
repnz
sarb
nop
daa
mov
ss
and
xlat
adc
dec
xor
daa
fwait
lret
jg
dec
adc
pop
mov
scas
pop
xor
test
shlb
jo
jg
mov
std
ds
or
imul
fnstcw
jp
cmp
insb
mov
movsb
dec
fs
popf
or
cmpsl
jbe
adc
test
xor
xchg
lods
out
enter
je
test
aas
push
ret
fistl
cmovo
jmp
or
imul
jb
hlt
sbb
scas
push
ss
mov
lds
xchg
push
mov
sub
mov
and
cmp
inc
fcmove
rcrb
adc
jle
pop
fdiv
add
sbb
cmp
pop
or
in
shrl
popf
adc
dec
push
lds
mov
test
cmp
std
leave
popa
xchg
or
test
sbbl
push
imul
dec
pop
repnz
push
or
mov
jns
inc
data16
das
in
or
dec
jbe
mov
stos
sub
mov
mov
mov
popa
pop
sub
cmp
nop
shrb
cld
jae
call
xor
fists
inc
jnp
ss
xor
sbb
xlat
dec
aaa
add
out
mov
xchg
sub
int3
and
inc
xor
nop
lock
ret
pop
add
movsb
mov
cmpsb
nop
std
and
call
jmp
outsb
mov
cld
dec
adc
out
add
sbb
pop
outsl
jb
popa
mov
aad
aaa
and
adc
aad
popf
jne
lahf
sub
cltd
std
inc
adc
faddl
test
push
xchg
sbb
sub
jmp
nop
pop
xor
dec
push
outsl
int
mov
mov
test
imul
xor
ljmpw
jp
mov
or
mov
cwtl
xor
out
add
ljmp
sub
sbbl
ret
xchg
xchg
xchg
jbe
or
ds
dec
sbb
mov
push
dec
jb
inc
stos
loope
push
dec
jecxz
in
fmul
mov
repz
arpl
jno
add
xchg
mov
arpl
inc
aas
xchg
pushf
pop
bound
movsl
roll
or
add
test
pop
sbb
mov
aaa
cwtl
sbb
add
ret
sbb
loop
stos
cmpsb
in
dec
clc
mov
fists
sub
sbb
jnp
jmp
xchg
popl
movsb
push
bound
fisubs
adc
std
mov
inc
dec
dec
push
dec
aad
ljmp
sub
xchg
adc
cmp
pop
xchg
xlat
movsb
push
insb
and
xor
xor
push
mov
or
pop
or
rcr
sbb
pop
lret
ljmp
pop
sub
cmpsb
and
in
clc
xchg
push
mov
adc
sub
xchg
popa
jecxz
pushl
mov
and
jp
pop
shll
clc
mov
sub
or
adc
lea
int
fadds
int3
and
mov
lea
fldt
daa
cmp
aad
adc
aaa
inc
es
adc
sarb
es
pop
stos
mov
int
xlat
dec
pop
cmp
bound
movsl
je
scas
fiaddl
test
push
mov
add
xor
lahf
mov
stos
pushf
sbbb
pop
ficomps
pop
loopne
cmpsb
les
sub
pop
stos
inc
adc
adc
cmp
xchg
pop
pop
ficoms
push
ds
pop
mov
adc
sub
test
push
pop
xor
xor
sbb
shr
push
stos
add
movsb
int
out
or
adc
dec
or
or
popl
xchg
push
loopne
lods
les
cmp
lods
adc
xchg
nop
push
ljmp
popa
les
mov
sbb
out
mov
sbb
jecxz
fwait
leave
fildll
jnp
mov
push
xor
jle
push
pop
mov
stos
push
insb
mov
scas
stos
gs
popl
into
xchg
cmc
lcall
lret
imul
cwtl
popa
loope
in
or
sti
inc
mov
jne
sbb
scas
iret
fmull
popa
insl
sbb
aaa
ret
add
stos
pushf
mov
sbb
lret
pop
popf
xlat
dec
inc
jb
mov
test
dec
xor
stos
xor
int
add
fnsave
sbb
leave
or
icebp
fstl
mov
pop
aam
push
push
mov
lods
push
insb
sub
pop
ja
push
sbb
int
dec
fiadds
cwtl
sub
xor
sbb
ret
out
cmp
test
mov
ljmp
mov
sbb
push
xor
push
mov
fstl
ja
ja
mov
ds
es
sahf
aad
push
setae
add
xlat
xor
scas
js
lret
stos
pushf
sbb
add
loope
stos
push
mov
cmpsl
adc
xor
mov
ja
pop
adc
vunpckhps
push
mov
add
dec
lcall
ljmp
adc
push
mov
ljmp
pop
pop
push
mov
movsb
sbb
push
inc
dec
add
mov
sahf
lret
gs
jecxz
mov
rorb
jnp
cltd
js
sub
or
in
imul
das
lods
or
xor
fldcw
mov
dec
mov
jns
mov
js
pop
push
aam
pop
pop
mov
cmpsl
dec
dec
outsb
jecxz
fdivs
ret
fldcw
and
xlat
jo
lea
fldcw
cmpsl
je
cmp
push
les
repnz
pop
imul
push
mov
test
push
mov
cli
cltd
xor
stos
ss
sbb
into
mov
int
das
jae
sbb
mov
rol
cmp
sbb
arpl
push
jge
lods
ds
dec
xor
add
xchg
shll
dec
mov
pusha
sbb
fistpl
dec
addl
mov
cmc
fucomip
xchg
in
test
mov
sbb
out
xor
or
or
iret
dec
push
ds
pusha
stos
adc
fcoms
push
xor
enter
push
fucomi
ljmp
pop
mov
sahf
fcompl
dec
loopne
xchg
les
icebp
xchg
cmp
pop
push
xchg
fs
xlat
xchg
pop
ljmp
pop
xor
jmp
hlt
dec
rcr
dec
pop
dec
pusha
add
sbb
add
dec
int
fisttpll
pop
jmp
add
gs
test
rcr
dec
pop
mov
scas
mov
pop
mov
das
mov
pop
push
imull
aaa
jl
adc
sarb
xor
jge
stos
pushf
mov
sbb
sub
decl
and
aaa
inc
les
insb
test
push
and
imul
das
adc
fcomps
jno
test
scas
mov
popa
std
dec
dec
mov
cmpsb
ljmp
dec
aam
push
push
mov
xchg
push
insb
arpl
stos
imul
push
xor
adc
jp
dec
sbbl
scas
mov
push
test
fs
into
js
inc
sbb
test
add
pop
mov
mov
nop
mov
das
rol
dec
stos
pushf
mov
sbb
xor
push
loopne
xchg
les
jge
push
or
mov
dec
sbb
stos
out
adc
sbb
iret
mov
std
xchg
jne
mulb
pop
add
pushf
sub
jecxz
stos
fidivrs
adc
sbb
mov
push
inc
subb
andl
cs
adc
sarb
cs
inc
stos
pushf
lds
add
dec
loopne
xchg
les
push
push
mov
nop
adc
pop
test
ljmp
imul
andl
pushl
mov
sub
jp
shlb
stos
pushf
jne
sbb
ret
inc
loopne
scas
mov
jle
test
imul
mov
mov
loop
pop
inc
mov
nop
push
jne
jmp
mov
mov
jo
ljmp
scas
cs
or
jmp
dec
xor
sbb
punpckhbw
imul
jnp
cmp
in
lods
push
fistpl
dec
push
mov
dec
mov
popf
push
insb
aas
lahf
xor
dec
xchg
stos
inc
mov
popl
outsb
jg
orb
gs
or
jmp
inc
xor
out
or
mov
inc
movsl
fwait
sub
mov
xor
jo
fimuls
mov
xchg
jb
mov
fsubrs
cld
nop
pop
out
push
xor
xchg
and
mov
inc
dec
adc
imul
or
jmp
addl
adc
pusha
loopne
mov
and
fwait
ret
addl
jp
cmp
jnp
scas
rcrb
adc
dec
mov
sbb
inc
fs
addl
mov
pusha
mov
repz
push
mov
inc
stos
jnp
add
lea
mov
enter
out
pop
jp
cmp
test
rorl
xor
xchg
in
cmp
sbb
cmp
mov
flds
xchg
orb
sbb
fsubrs
sub
adc
mov
sbb
xor
ljmp
push
push
mov
pushf
and
inc
ret
dec
ss
test
and
rorl
add
pop
imul
sbb
dec
fnstcw
xchg
push
adc
adc
xlat
adc
push
test
es
andb
push
gs
dec
cmp
pop
mov
movsl
movsb
cmp
imul
popa
dec
push
mov
orb
cmp
inc
daa
push
or
aas
cmp
stc
lcall
dec
imulb
imul
xchg
les
lods
adc
sbb
mov
xlat
add
sarb
scas
jg
jl
int3
imul
pop
lret
push
push
add
pop
cmc
pop
mov
test
lods
pop
fsubrs
ret
jns
jge
inc
or
shrb
push
xchg
mov
shlb
mov
int3
mov
xor
jb
mov
scas
int3
dec
cmpsl
out
mov
mov
repnz
ret
nop
les
fdivp
lock
jno
lahf
or
aaa
std
aad
or
pusha
sahf
dec
jmp
dec
dec
sub
aas
cmc
and
jno
test
shrl
and
es
aaa
ret
pop
mov
sub
adc
fwait
mov
mov
mov
cmpsl
fcompl
shll
daa
push
adc
cmp
out
cmp
sub
mov
jnp
pop
mov
movsb
jb
cmpsl
xchg
sbb
popa
push
sar
jp
cmp
or
push
cmp
sahf
mov
mov
mov
addl
jecxz
gs
add
pop
add
mov
mov
jno
mov
pop
clc
in
imul
mov
push
outsl
adc
repz
pop
popf
pop
pop
pop
bound
imul
rclb
pushw
mov
shrb
dec
xor
jb
flds
fidivl
cmc
push
imulb
fwait
les
and
lcall
push
pusha
test
shll
mov
and
adc
sbb
xchg
aad
pop
pop
push
sbb
add
stc
sub
outsl
xorb
push
test
lret
lods
adc
jbe
dec
cltd
cmc
jmp
fisttps
jne
cld
popf
leave
sub
xchg
dec
dec
bound
mov
loopne
add
or
into
loop
adc
ja
ret
mov
ret
mov
push
fwait
push
nop
stos
cmpsl
inc
sbb
push
sbb
xchg
sbb
xchg
push
fcoms
or
fmuls
stos
shl
xor
sahf
or
cmpsl
cmp
rcll
in
iret
mov
stos
shlb
stos
gs
xchg
test
dec
cmp
push
int3
stc
add
jp
sbb
inc
sbb
je
scas
cs
pop
aad
pusha
xlat
lods
add
bound
mov
push
mov
rcrb
mov
fsubl
push
test
cmp
sbb
xchg
or
sub
fnstcw
rorb
jecxz
pop
test
hlt
or
lods
mov
xor
test
ljmp
push
mov
pop
mov
push
lods
mov
inc
cmp
test
rolb
push
sbb
stc
xor
sub
xchg
xor
lods
push
sahf
pop
and
fmull
sar
in
pop
scas
push
repnz
jbe
sub
pop
mov
adc
shrl
push
pop
sbb
xlat
pop
adc
mulb
popa
cwtl
fcom
dec
lods
or
push
stos
push
pop
popf
push
das
mov
dec
int
out
push
iret
or
mov
test
sub
test
pop
in
cmpsl
dec
inc
mov
outsb
or
pop
inc
ljmp
stos
pop
add
daa
and
pop
push
or
cwtl
lods
nop
sti
rorl
pop
clc
sbb
mov
and
lods
das
xlat
movsl
xchg
sub
orl
pop
nop
cmp
std
scas
mov
ja
sbb
es
xor
clc
or
iret
iret
sub
sub
in
mov
add
or
rcll
js
pop
loop
push
mov
fsubs
dec
pop
or
sbb
movsb
push
into
ja
and
lods
das
xlat
leave
xchg
sub
orl
pop
nop
push
pop
sub
ret
inc
mov
sbb
sbb
xor
iret
ret
xchg
mov
hlt
push
sbb
cs
adc
sub
dec
push
ficoml
inc
jp
pop
cmp
mov
mov
adc
mov
das
push
inc
bound
inc
sbb
jecxz
fwait
mov
das
xor
dec
mov
insl
sub
jp
push
aas
jb
jb
jmp
dec
bound
dec
push
lock
fwait
pop
stos
and
xchg
fmuls
and
xchg
or
jg
push
sbb
sub
inc
jp
in
xchg
and
xor
jmp
mov
fiaddl
prefetcht0
inc
cwtl
js
aas
add
add
popf
and
cli
rorb
pop
xchg
sarb
mov
push
cmp
push
sub
dec
data16
xchg
xlat
mov
jge
imul
adc
xchg
test
pop
nop
dec
sub
fsubr
sti
xchg
addr16
dec
push
imul
sti
fstp
adc
stc
pop
mov
cmc
mov
test
or
push
pop
adc
hlt
mov
out
mov
pop
out
out
scas
mov
scas
inc
lea
xor
xchg
cmp
icebp
sbb
ror
jno
fisttpll
push
jbe
push
and
sbb
mov
add
mov
or
andb
scas
push
fninit
dec
sub
lcall
shll
es
movsb
inc
mulb
xchg
jmp
pop
cmp
push
int
and
dec
jecxz
xor
fdivl
jge
jbe
add
rcll
mov
push
aam
ret
flds
mov
nop
adc
xchg
dec
je
sub
inc
xor
inc
test
and
pushf
dec
faddp
ret
int
sahf
mov
ss
popa
js
cmp
mov
pop
js
mov
cmp
xchg
sub
test
push
mov
jns
xchg
aad
ljmp
add
fld
adc
push
push
inc
cltd
sbbb
jl
pop
push
inc
inc
dec
mov
daa
mov
xor
add
add
shll
mov
ja
push
insb
test
movsl
dec
fildll
js
stc
push
push
mov
mov
push
or
jecxz
cmpsl
adc
out
and
out
ds
adc
jp
test
sti
imul
cli
pop
xchg
ss
push
sub
xor
inc
lret
movsl
xchg
inc
lods
pop
push
push
push
cmpsb
cmc
pop
and
orb
dec
xor
lahf
or
fmull
dec
int
out
fisubs
flds
out
push
jns
cld
adc
test
jo
out
es
adc
jo
jnp
jge
ja
mov
int3
dec
mov
cmp
xorb
test
rcr
xchg
ss
sti
mov
jnp
cmp
inc
faddl
movb
stos
push
cmp
inc
jge
xchg
adcl
push
mov
pop
cmp
and
adc
sub
es
adc
jne
jnp
mov
fidivl
test
fadds
imul
into
sti
inc
jns
jnp
cmp
jb
cs
les
movsl
pavgw
fcmovbe
sbb
xor
test
mov
repz
sub
dec
test
mov
ss
cmp
js
mov
xchg
ss
lret
xchg
xor
ret
daa
outsb
jbe
sbb
dec
xor
cwtl
js
scas
jnp
cltd
xchg
in
ss
cli
and
jl
mov
dec
lret
ss
pop
xor
aas
pop
pushf
shlb
sub
jp
cwtl
sbb
gs
insb
mov
push
je
sub
mov
jecxz
test
pop
dec
daa
stos
mov
or
inc
pop
inc
insb
int3
sbb
lret
pop
xor
int
ret
cwtl
jmp
insb
fidivs
cmp
imul
sub
lods
sbb
jnp
mov
stos
adc
push
xor
lods
xor
imul
adc
stos
or
xlat
dec
mov
and
and
push
and
sub
jp
test
xor
mov
scas
push
or
and
mov
rclb
push
stc
jb
pop
aaa
add
les
rcrl
xor
cs
insl
or
xchg
icebp
mov
imul
fadds
outsb
mov
and
mov
ss
mov
jmp
jbe
inc
test
xor
test
push
lods
test
repnz
xchg
stos
mov
adc
mov
adc
loopne
mov
fdivrs
ja
sbb
je
inc
nop
cli
insb
mov
stos
dec
dec
pushf
aaa
jl
add
push
scas
add
loopne
aad
push
xor
xchg
add
mov
or
xor
cld
mov
scas
lahf
adc
xchg
cmp
out
push
mov
int
loop
scas
inc
stos
pop
lds
jne
pop
jnp
ss
test
mov
insb
xchg
push
sub
test
stos
pop
pop
cmc
adc
sub
mov
pop
and
sub
fsts
pop
movb
cmpsb
mov
mov
pop
push
stos
sub
lods
into
xor
push
mov
xchg
cmc
mov
repnz
popa
mov
pop
fsubs
jnp
mov
fs
xor
mov
push
cld
inc
mov
jns
test
push
into
lods
dec
mov
arpl
ss
stos
xchg
out
adcb
aam
mov
pop
adc
push
pop
inc
rorb
lret
loopne
fldcw
mov
es
cwtl
push
mov
dec
test
add
dec
lods
lret
stos
enter
icebp
repnz
pushf
cmpsb
mov
dec
daa
mov
call
lods
dec
inc
xchg
imul
dec
and
out
xor
jbe
clc
mov
cld
std
push
pusha
inc
mov
dec
mov
pop
inc
dec
cli
stos
subb
sub
adc
push
lret
inc
push
stos
xlat
mov
pop
rorl
stos
fbstp
stc
sbb
pop
enter
int3
pop
cli
pop
rolb
jp
inc
cmp
lret
adc
in
cmp
pop
ds
in
adc
daa
dec
lret
mov
out
roll
movsl
pop
sub
mulb
into
out
mov
xor
pop
dec
dec
or
mov
inc
fwait
js
add
jge
call
leave
imul
fs
ljmp
mov
dec
mov
push
clc
adcl
dec
jnp
mov
sub
inc
jnp
mov
ds
aam
sub
lds
mov
repz
dec
mov
inc
cmp
xchg
data16
mov
mov
xchg
lret
cmpsl
mov
jnp
push
out
clc
in
mov
xchg
cwtl
call
or
sub
cmp
xchg
or
pop
ja
imul
pop
nop
adc
arpl
mov
mov
adc
sub
test
adc
mov
pop
cli
adc
inc
imul
mov
cmc
pop
xorb
sbb
call
cmp
dec
imul
out
mov
insb
mov
push
mov
dec
fistpll
jmp
pushf
int
mov
lods
adc
push
or
add
stos
pop
adc
imul
cmp
jmp
pop
std
push
and
test
xchg
bound
mov
daa
std
jbe
imul
dec
xor
and
jle
xchg
test
xchg
sub
xchg
das
sbb
ja
jne
dec
pop
fs
jns
loope
ljmp
sub
out
bound
cmp
add
pop
mov
and
fdivl
test
push
nop
push
inc
cld
push
push
jge
add
cmp
scas
lret
sub
dec
lods
pushf
cmp
clc
movsb
push
and
dec
es
push
enter
jae
push
dec
sub
je
or
enter
les
scas
xchg
mov
ret
push
nop
push
mov
and
arpl
inc
aas
imul
cmc
pop
add
push
pop
pop
adc
subb
mov
or
add
or
dec
outsb
sub
fstpt
out
push
movsb
int
fbstp
jnp
push
xor
and
mov
xchg
mul
jo
jmp
popl
ret
dec
scas
sbb
lret
xchg
mov
pop
out
add
dec
mov
jb
and
or
sub
test
mov
shrb
and
cmpsl
pushf
sbb
sarb
outsl
dec
movsl
shll
sub
add
add
das
nop
sub
jl
jb
repnz
or
popf
sbb
cmc
lret
cmp
dec
mov
rorl
jnp
jo
lods
fildl
cmp
sbb
xor
stos
pop
xor
insl
enter
dec
jb
cmp
add
add
jg
xor
ret
pop
xchg
shll
xor
repnz
subb
sysexit
or
sub
ljmp
push
faddl
xor
or
sub
int
pop
jno
out
push
mov
pop
mov
in
mov
outsl
push
stos
or
pop
scas
aam
shll
xor
jg
and
dec
ljmp
dec
mov
bound
test
pushf
xchg
neg
xor
fdivrs
mov
pop
cmp
xor
adc
dec
jl
sti
sbb
jns
cmp
movaps
int3
mov
xchg
sub
fsubs
add
arpl
and
dec
andb
ljmp
add
xchg
sbb
ret
push
repz
bound
sub
fcmovbe
mov
dec
fistpl
mov
ret
in
test
int3
mov
loop
adc
fwait
mov
xchg
call
cli
and
pushf
sbb
cmp
xchg
mov
mov
out
xlat
lahf
pop
int
push
dec
test
ja
repnz
add
pop
test
mov
loopne
pop
cmp
aaa
popa
xor
ljmp
mov
cld
or
sahf
xor
daa
fsubrs
repz
stos
ret
mov
xor
or
or
bound
shlb
adc
push
clc
add
das
fcoml
sbb
dec
pop
mov
sub
lahf
sub
dec
jmp
pop
xor
in
jne
dec
pop
pop
xlat
out
es
fcmove
cmpb
jbe
in
push
aas
pop
cmp
lods
jle
les
sub
fimuls
fimuls
das
xchg
dec
pushf
dec
pop
cmp
mov
mull
adc
inc
mov
sti
lahf
sbb
pop
rol
dec
je
sbb
movsb
jae
pop
filds
lods
jmp
add
or
imul
outsl
mov
sti
pop
xchg
out
inc
stos
call
inc
sbb
stos
test
cmp
push
paddd
in
popf
dec
sub
cmpb
and
into
shll
lea
xor
mov
dec
jo
mov
clc
push
add
pop
pushf
push
test
push
scas
xchg
dec
insl
jg
stos
mov
nop
fdivs
lods
mov
ja
xchg
xor
sbbl
pusha
in
inc
pop
pushf
pop
pop
adc
and
pop
in
mov
mov
mov
push
cmp
das
repz
push
add
pop
mov
int
xor
sti
stc
les
mov
fisubl
jmp
out
repnz
pushf
imul
sbb
imul
lock
cli
push
jl
pop
dec
stos
ffreep
and
inc
fisubs
aas
dec
jo
sub
xor
sub
sub
mov
jnp
pop
push
mov
imul
aam
in
sub
inc
push
push
outsb
stos
pmuludq
stos
and
and
adc
mov
xchg
mov
std
aaa
cli
out
push
in
loopne
sbb
daa
xor
lcall
jmp
and
mov
ret
xchg
insb
push
inc
stos
hlt
xor
divl
mov
pop
jno
sub
xchg
add
nop
out
enter
xchg
sti
mov
push
push
out
add
fmul
outsb
jle
mov
rcrb
cli
pop
jo
push
mov
sbb
mov
dec
jbe
insb
movsb
into
out
push
jecxz
push
in
add
into
aad
mov
mov
ret
jecxz
sub
dec
pop
ret
in
cmp
mov
xchg
or
mov
std
cmpsl
rcrb
and
stc
rcll
iret
sbb
sahf
mov
aas
ror
lcall
std
jecxz
xchg
mov
sbb
cltd
cmp
adc
pop
fsubp
xchg
push
sbbb
ss
xor
lea
or
jge
dec
imul
push
sbb
popa
std
inc
jle
push
and
pop
scas
sarb
xchg
jno
jo
cmp
flds
icebp
lds
ret
sub
adc
inc
fsubrs
and
cmp
mov
inc
pop
jo
ret
push
mov
sub
xchg
adc
cmpsl
mov
or
dec
cmp
xchg
and
sub
inc
daa
mov
movsb
cmp
pop
pop
jp
test
test
cli
into
mov
inc
sub
ds
decb
ret
inc
mov
js
cwtl
roll
ja
movsb
js
jns
sub
mov
std
pop
mov
xor
pop
das
ss
xor
popf
scas
pop
mov
xchg
and
push
jg
and
dec
jno
rclb
jbe
lcall
pop
in
mov
mov
das
jmp
mov
lea
adc
cld
mov
pop
push
adc
call
out
scas
das
test
pop
add
insb
push
mov
xchg
andb
and
lcall
or
xchg
xor
pop
aas
pop
mov
stos
cmp
loop
daa
in
jg
inc
test
dec
push
sub
inc
jbe
or
dec
jg
and
fs
das
add
lock
test
loop
mov
add
pop
jo
jmp
sub
cld
inc
inc
xor
test
add
adc
and
adc
pop
pop
or
xor
pop
inc
push
or
sub
aas
stos
pop
sub
jo
arpl
lahf
daa
repnz
in
or
bound
push
xchg
sbb
shrl
cld
adc
ret
lods
sbbb
adc
lds
cli
dec
add
jmp
int3
lods
mov
adcb
subl
pop
add
mov
sbb
push
dec
xor
stos
sub
test
ss
or
xchg
and
rclb
xchg
mov
lret
in
adc
jmp
mov
sbbb
add
and
jle
push
pop
jno,pn
sub
fbld
fmul
pusha
add
push
scas
imul
sub
cltd
inc
cmp
push
push
push
mov
lret
push
cli
pop
test
add
mov
mov
xor
cmpb
mov
push
jb
adcl
mov
push
mov
xor
iret
pop
cwtl
mov
pop
mov
jp,pt
sbb
mov
fs
sbb
xor
jle
sbbl
mov
or
sub
pop
cmp
xor
adc
or
lock
push
dec
negb
pop
add
je
pusha
aad
and
pop
xchg
sub
dec
mov
xor
sbb
pop
sub
sub
mov
test
dec
xor
ret
add
mov
sub
sahf
pop
inc
add
jns
and
lock
pop
in
mov
and
ret
cs
int
xor
adc
scas
call
mov
pop
ret
mov
dec
sti
pop
pop
and
adc
or
sub
mov
cmpsl
sti
dec
jmp
rcll
repz
je
in
retw
xchg
mov
and
push
cltd
mov
xlat
inc
shrb
add
inc
pop
push
mov
insl
xchg
mov
xor
xchg
xor
pushf
inc
loop
sub
or
xor
std
sti
int3
mov
jmp
adc
inc
pop
add
jle
insl
dec
jnp
scas
ss
test
sbb
inc
sbb
call
cmp
stos
fnstsw
lret
add
or
lcall
sbb
stos
ja
xor
mov
dec
and
je
shlb
pop
lea
push
push
pop
notl
subl
hlt
push
stos
ja
insb
sbb
push
mov
ljmp
cmp
xlat
sub
jl
jb
xor
insb
sbbb
int3
push
cltd
mov
adc
adc
add
adc
test
aam
push
push
stos
mov
cmp
lret
test
inc
fucomi
popa
inc
sbb
jmp
pop
xchg
pop
popf
pop
mov
inc
popf
fstps
adc
fstps
fidivrs
add
jg
cmpsl
add
stc
insl
lods
mov
xchg
aam
xchg
add
inc
cmpsb
mov
pop
add
fcomps
int3
jbe
aam
lcall
mov
pop
les
adc
outsl
sar
dec
xor
push
mov
mov
fimuls
out
xor
das
lcall
lds
sub
rclb
push
pop
ficompl
push
add
fbld
jns
push
cld
test
pop
sbb
mov
lea
push
pop
add
lds
or
es
push
mov
sbb
ret
pop
mov
xor
mov
stos
enter
pop
cli
dec
cltd
pop
dec
addr16
cmp
stc
inc
push
notb
push
adcb
pop
or
mov
sbb
mov
xchg
cwtl
xchg
add
mov
punpcklbw
mov
pop
add
daa
orb
pop
or
mov
enter
mov
popf
jecxz
imul
cmp
js
loopne
fsubl
pop
mov
mov
or
sbb
or
aaa
pusha
js
mov
push
sbb
jmp
or
leave
dec
sbb
in
xor
in
fisubl
add
roll
sub
pop
lahf
insb
adc
pop
mov
shrb
cmp
dec
ja
loopne
cltd
xchg
pop
mov
jo
nop
mov
pusha
ret
aaa
pushf
mov
aad
mov
aad
lahf
xor
cmp
mov
popf
add
cld
sub
aam
fcomip
pop
test
or
mov
mov
test
pop
pop
push
ljmp
adc
adc
mov
stos
lcall
cmp
test
js
loop
push
pop
pop
stos
sbb
stos
je
jl
and
adc
and
jp
cmp
mov
push
cmp
imul
push
leave
fsubr
mov
lahf
stc
pop
iret
jl
pop
ja
movsl
mov
sbb
sbb
jns
push
int
mov
push
adcl
cmp
push
mov
je
xchg
ja
in
jno
shl
mov
pop
dec
ret
xchg
lcall
test
imul
js
sahf
jmp
mov
sbb
test
ret
fsubrs
aaa
loopne
sbb
push
movsb
out
jmp
or
addb
jnp
leave
clc
int
add
add
dec
repnz
lret
gs
sub
pop
xchg
outsl
jge
pop
dec
xchg
mov
xor
xor
les
jmp
mov
aam
leave
xor
xchg
sub
or
jnp
pop
test
rclb
mov
fdiv
pop
roll
xor
hlt
sbb
jle
lock
dec
cs
mov
add
pop
jp
in
emms
or
outsb
mov
or
and
pop
push
add
cmpsb
add
repz
fistpl
shrl
mov
cs
jl
es
sbb
shrb
imul
push
mov
popf
mov
lods
rclb
xchg
aas
pop
out
inc
rorb
negl
scas
sahf
cmpsl
testl
mov
mov
pop
lock
ret
adc
inc
pop
mov
std
xadd
cwtl
xchg
jp
and
sarl
mov
or
scas
cmp
inc
scas
inc
pop
pop
mov
sub
nop
ss
jae
xchg
in
gs
scas
bound
inc
cltd
out
jle
movsb
dec
fisubs
add
xchg
adc
mov
cmp
xchg
rorb
iret
xchg
xor
sub
rolb
jmp
pop
lods
insb
pop
push
stos
pop
sbb
scas
repz
dec
add
jae
jmp
std
xor
mov
push
xchg
push
rolb
pop
mov
or
sub
mov
sub
push
xor
stc
dec
popf
jo
cmp
insl
and
je
in
xchg
add
xor
sbb
pop
mov
dec
int3
xor
fsubr
dec
jo
fld
or
test
outsb
xchg
lret
xor
inc
call
or
pop
cmc
ja
sub
push
in
xchg
sbb
pop
js
push
insl
adc
mov
sub
dec
std
pop
stos
imul
jno
xchg
gs
or
dec
clc
popf
stc
js
popf
inc
xor
mov
scas
pop
cmpsl
cmp
call
fwait
jmp
cwtl
and
ret
cs
xchg
add
adc
pop
jge
lock
xchg
cwtl
ds
xchg
fisubrl
movsb
aam
or
sub
xchg
xor
xchg
cmp
cltd
pusha
insb
cwtl
xorb
and
movsb
fcompl
push
mov
int3
pop
pop
cmp
xchg
push
mov
mov
jp
enter
pop
cli
adc
call
or
cwtl
pusha
push
call
lret
js
xchg
mov
mov
cmpb
js
sbb
insl
sub
outsb
pop
mov
xor
or
dec
push
repnz
jns
cli
pop
dec
dec
sub
pop
push
arpl
cli
push
mov
xor
pop
jb
xchg
jecxz
lods
push
loopne
xor
sub
pop
sbb
arpl
lods
js
cli
xchg
xchg
in
cmp
shrl
mov
inc
dec
aas
cld
movsl
or
rcrl
or
nop
jmp
jae
pop
sbb
pop
icebp
dec
sub
ret
xorb
adc
ficomps
or
repnz
inc
mov
mov
mov
adc
push
pop
jnp
aam
pushf
arpl
xchg
mov
out
mov
ljmp
dec
bound
test
sub
or
negb
sahf
sub
ficoml
lods
cltd
lret
sub
jo
mov
pop
inc
pop
neg
daa
inc
sbb
mov
in
sarb
xchg
or
add
jae
cltd
mov
xor
rcrb
cli
out
jb
pop
dec
iret
sub
lret
daa
ds
stc
cmp
pop
dec
lahf
sub
cli
incb
inc
cmpsl
arpl
jbe
mov
aas
hlt
movsl
dec
mov
push
sub
or
jae
mov
fadds
lods
cmpb
inc
adc
arpl
scas
aaa
out
jae
or
add
aad
bound
adc
pop
xor
pop
push
or
dec
test
shll
mov
or
xchg
ror
xchg
mov
inc
inc
aas
add
in
movsl
stc
cmpsb
js
decb
sub
and
adc
xor
inc
les
sub
pop
jo
ret
push
xchg
aas
xchg
dec
mov
jo
les
iret
sub
ds
adc
mov
dec
xor
push
imul
xchg
pop
aam
push
out
decb
ret
sub
ds
out
insb
mov
daa
decl
ret
mov
xchg
cmp
mov
lcall
xchg
mov
icebp
decb
ret
loop
inc
loope
in
hlt
movl
and
push
enter
int
dec
dec
ret
scas
and
sbb
sahf
inc
or
inc
mov
and
fldlg2
imul
lret
sub
sarl
pop
mov
mov
mov
out
mov
push
sbb
in
pop
gs
call
mov
inc
xor
add
push
sbb
pop
shrl
cli
mov
add
cs
cmp
mov
cltd
xorl
mov
ljmp
daa
dec
mov
fidivrs
adc
aaa
sub
xor
jbe
andb
mov
cli
movsb
mov
or
inc
or
cmp
xor
dec
jmp
jne
imul
fwait
aas
in
sbbl
dec
jp
lods
aad
scas
inc
aaa
testl
push
xor
pop
int3
je
in
shr
mov
mov
dec
stos
std
shll
clc
jne
jmp
lods
imul
mov
aam
dec
fisubl
notb
popf
test
adc
xchg
aas
xor
aad
cmpsb
push
stos
sti
fwait
mov
add
sarb
pop
call
xchg
sub
mov
test
add
test
mov
xor
out
insl
movsb
push
int3
mov
lcall
das
sbb
xor
fisttpll
pop
nop
mov
inc
rclb
sub
inc
inc
push
cmp
or
sarl
add
mov
int
popa
lds
dec
fwait
mov
xlat
test
lret
sbb
adc
xor
pop
and
insl
xchg
sub
pop
push
push
data16
mov
dec
insb
lea
inc
mov
sub
pusha
push
pop
jle
in
gs
push
cmc
pop
das
push
pop
jbe
pop
adc
push
pop
movsb
jae
iret
lods
lcall
add
imul
mov
dec
fs
pusha
imul
pop
imul
aam
rcr
sbb
cwtl
xorl
pop
in
in
std
dec
bnd
outsb
jle
lock
mov
dec
in
or
popa
and
lods
sub
inc
fsubs
mov
jb
xor
lcall
push
xor
adc
sbb
pop
adc
sar
scas
sub
fwait
lcall
jecxz
fs
jge
cli
les
fdivs
cwtl
lret
inc
pushf
inc
call
dec
les
call
inc
mov
jle
leave
sbb
pop
xor
jae
mov
test
add
outsl
ret
addb
inc
iret
xor
jne
or
xor
je
arpl
mov
sti
dec
fdivrp
cltd
mov
aam
pop
push
pop
dec
lahf
inc
cmp
test
in
fs
cmp
jle
push
sbb
int
xchg
pop
adc
out
push
stos
jge
cmp
mov
inc
shlb
mov
jb
mov
daa
cmp
sbb
jecxz
cmpsl
pop
cs
add
inc
sub
jle
fnstenv
cmpsb
bound
xchg
mov
cwtl
dec
dec
inc
jo
xchg
sbb
xchg
mov
test
add
inc
sti
ds
xlat
sbb
adc
repz
jecxz
rep
cmp
cli
push
nop
scas
push
fistl
aaa
pop
dec
lahf
sub
pop
das
sub
push
shrb
stos
or
xchg
das
movsl
adc
rcr
mov
adc
and
inc
lahf
mov
and
fdivrs
push
xchg
xchg
dec
xlat
cmpsl
cmp
cmp
xchg
push
sbb
lret
xchg
test
push
jo
int
in
mov
add
insb
hlt
xchg
stos
push
or
dec
lods
scas
mov
inc
sarb
xchg
imul
mov
sub
jbe
mov
nop
xlat
push
adc
mov
test
adc
push
sbb
and
mov
jb
roll
es
push
xor
loop
pop
push
dec
hlt
adc
pop
mov
cmp
xchg
or
pop
jae
lods
dec
mov
cli
mov
jns
je
scas
and
mov
in
adc
adc
push
int
cwtl
xor
mov
and
jg
dec
adc
shlb
cmp
cmp
lods
ds
fdivrl
in
add
cmp
xor
and
adcl
xchg
lret
xchg
das
in
insl
pop
shl
mov
or
dec
fadds
adc
ficoml
lods
sbb
jge
lock
sub
inc
in
sarb
xor
jmp
leave
mov
popa
in
dec
sbb
arpl
xor
pop
mov
xchg
aas
dec
pop
jecxz
add
pop
int3
pop
or
push
mov
jbe
inc
mov
adc
inc
fsubs
push
adc
ss
popf
jle
or
loopne
xor
stos
dec
ds
lahf
xchg
es
xchg
adc
mov
sub
dec
or
mov
pop
int
xor
xchg
push
xchg
outsb
ja
in
cltd
inc
shlb
rcr
fs
mov
test
xchg
pop
xor
test
sub
stos
dec
mov
pop
pop
pavgb
dec
sub
cmp
jae
mov
add
aad
clc
sbb
jge
lock
sub
xor
es
scas
cmpsw
add
repz
add
in
in
rcl
mov
das
lock
pop
ret
mov
pop
loope
xchg
or
bound
sbb
mov
das
mov
cmpsl
xchg
dec
push
push
jnp
mov
pop
dec
pop
mov
in
aad
clc
sbb
jge
lock
mov
pop
outsl
jl
scas
test
fwait
ja
das
shrb
in
dec
mov
rcl
add
pop
pop
pop
in
jl
xchg
test
in
lds
sar
mov
and
ret
insb
pop
in
js
pop
stos
and
jle
call
or
pushf
mov
test
dec
ss
push
int3
inc
rclb
or
or
cmpsl
mov
dec
push
ja
jle
pop
and
mov
fsubrs
jle
lock
sub
sti
mov
mov
jge
lock
mov
pop
jg
test
test
sahf
xchg
or
cltd
sub
dec
add
mov
pop
int
sub
xchg
push
xchg
pop
ja
in
mov
sbb
add
jns
iret
sahf
ljmp
pop
xor
lods
sbb
jge
lock
sub
sub
dec
orl
sbb
sub
addr16
dec
dec
bound
xchg
shlb
in
mov
sarl
out
fsubrs
jbe
pop
in
popf
dec
rcrb
ret
xchg
mov
sub
add
adc
sbb
pushf
or
sub
stos
dec
jl
and
push
fmuls
pop
dec
add
jle
in
hlt
sub
jno
scas
shlb
fists
inc
mov
mov
pop
jge
lock
sub
dec
mov
xlat
int3
add
pop
pop
pop
leave
add
das
data16
dec
pop
divl
aad
mov
lret
jno
mov
hlt
pop
xor
test
sub
int3
mov
test
dec
mov
in
sbbl
or
mov
stc
mov
inc
test
dec
xor
mov
pop
push
add
test
jle
lock
sub
mov
cmpsl
cmovl
push
out
xchg
cli
ja
in
shrl
in
and
xchg
and
jno
rorb
inc
and
add
insb
sbb
or
cmp
pop
adc
push
push
mov
inc
js
in
and
loop
das
push
add
out
xchg
mov
lret
in
adc
in
and
stos
das
dec
jb
invd
add
mov
and
sub
mov
mov
lcall
or
adc
inc
lret
scas
fisubs
lahf
xchg
sub
push
dec
mov
cmpsl
testl
mov
orb
xor
adc
add
aad
mov
leave
mov
push
add
psubb
sbb
mov
stc
mov
cmp
ja
pop
add
pop
adc
sbb
sub
dec
cli
pop
lret
enter
push
or
imul
clc
test
and
shll
pop
inc
add
idivb
lock
sub
jp
push
jbe
or
notl
adc
jmp
daa
sbb
pop
and
pop
pop
in
dec
push
or
sub
mov
test
push
xchg
clc
pop
imul
shrb
pop
pop
mov
test
mov
pop
cmp
add
sub
sarb
stos
dec
insb
jl
and
imul
pushf
loop
mov
lock
dec
imul
add
test
jle
lock
mov
outsb
mov
cmpsl
cmovl
push
jmp
mov
lret
in
adc
in
and
sub
dec
mov
push
pop
pushf
pop
or
insb
or
sub
sbbl
add
cld
pop
adc
movsb
or
scas
push
test
dec
xchg
jecxz
addl
clc
mov
cmpsl
orl
mov
iret
mov
mov
test
dec
notb
xchg
and
dec
mov
add
add
sarb
lock
int3
dec
ficompl
insb
add
pop
jl
xchg
mov
push
aaa
xchg
mov
adc
mov
fnstenv
lret
jae
loop
dec
ret
in
pop
gs
add
fcompl
ljmp
jbe
push
sub
sbb
scas
mulb
bound
js
inc
mov
test
dec
dec
push
ja
mov
pop
push
pop
insl
add
adc
mov
push
jle
in
xchg
ljmp
mov
cmpsl
fwait
dec
ss
pop
pop
orb
cld
add
fcompl
ljmp
clc
mov
cmpsl
cmovl
push
notl
cmp
xchg
sub
aaa
lock
pop
mov
pop
mov
xchg
pop
bound
in
loope
shrl
aad
pusha
ret
js
lds
xor
push
dec
add
inc
pop
pop
psubusb
sub
mov
test
mov
das
inc
sub
add
pop
dec
bound
xchg
mov
cmp
and
test
inc
arpl
inc
pop
clc
xchg
push
mov
aas
or
mov
push
ja
cld
pop
test
sub
xchg
cmp
adc
das
xchg
aas
and
pop
dec
fimull
test
push
or
inc
xchg
pop
scas
mov
mov
pop
in
mov
loope
inc
inc
xchg
dec
inc
push
adc
lahf
mov
fadds
and
pop
adc
and
xchg
ret
push
mov
xchg
daa
pop
xchg
mov
dec
rcll
les
adc
mov
and
sbb
popa
nop
jg
aaa
lahf
xor
jo
sbb
das
mov
jg
mov
loopne
mov
mov
aaa
cli
ficoml
adc
add
sbb
je
je
pop
repnz
fwait
mov
xchg
movsl
xchg
lret
sub
mov
scas
push
jle
mov
and
mov
arpl
ret
mov
stos
ret
shrb
xchg
mov
adc
cmp
mov
push
mov
mov
cmp
cmp
and
add
cmpsl
push
rol
outsl
xlat
push
sahf
pop
int3
adc
lret
cli
call
inc
and
clc
je
pop
call
aas
and
loopne
sub
inc
push
add
cmp
sub
jecxz
mov
cmp
std
push
negb
push
jo
or
lahf
nop
or
cmp
jge
shr
cmp
mov
loopne
adcl
xlat
in
jp
iret
repnz
sbb
hlt
cmp
sbb
test
sbb
or
mov
out
mov
push
imul
xor
loop
das
lret
add
out
mov
leave
push
adc
lcall
test
sub
insb
xchg
pop
aaa
fiadds
adc
and
mov
push
mov
jmp
xor
lods
jae
repz
mov
jg
loope
decl
sbb
frstor
das
nop
push
loop
add
incb
ja
dec
jge
jno
mov
inc
pop
repz
loop
shrb
adc
jae
cbtw
pop
ja
or
sub
and
mov
push
mov
cmpb
xor
cmp
add
mov
lahf
sbbb
cmp
adc
repnz
pop
pushf
stos
pop
push
test
sub
xchg
or
xor
add
mov
inc
mov
outsb
and
sbb
adc
mov
cmp
shrb
fbstp
jns
xchg
stos
rclb
pop
xchg
in
mov
xchg
scas
lret
arpl
mov
lock
rcl
sub
push
pop
ret
fstpl
pop
inc
xlat
cmp
lock
aaa
push
insl
adc
stos
cmpl
pop
pop
xlat
je
and
gs
mov
push
pop
iret
push
sub
adc
cmp
add
enter
nop
sbb
jl
pop
cmp
lcall
cmp
add
jnp
adc
and
out
push
mov
xchg
out
lock
adc
inc
push
loope
mov
adc
mov
and
repnz
aam
mov
jmp
enter
xlat
icebp
mov
add
lret
push
jnp
add
adc
mov
mov
cmp
dec
add
hlt
lcall
jae
test
mov
and
adc
and
mov
lret
stos
mov
mov
sub
lcall
outsl
mov
jecxz
loop
mov
sbb
add
call
mov
fs
scas
insb
mov
cmpb
cmp
pusha
pop
bound
int
sbb
imul
mov
or
data16
mov
ds
rol
loope
fimuls
ja
xlat
jo
push
jle
mov
in
jne
push
adc
sbb
inc
mov
xlat
push
push
jle
push
call
mov
jno
icebp
xlat
sbb
or
push
stos
cmp
sbb
mov
pusha
cmpb
add
cmp
adc
scas
push
xor
stos
fs
pop
jae
fisubl
imul
cli
fcomps
jg
mov
mov
scas
jbe
dec
ret
xor
in
aaa
mov
repz
adc
pop
xor
inc
std
fadd
jge
inc
jnp
movsb
je
lcall
jb
push
pushf
mov
dec
sbb
add
popl
inc
push
cld
popa
dec
cmp
into
aas
out
add
inc
roll
ljmp
push
es
ja
cs
jg
ss
push
xchg
les
and
jns
xor
cmpb
loop
xor
adcb
int
imul
adc
adc
ret
pushf
ret
lods
ret
cld
ret
or
loope
fadd
mov
in
ret
cmp
xchg
jg
ret
mov
jg
ret
addl
mov
add
lret
inc
jg
ret
int3
ret
add
int
adc
loope
lods
or
addr16
incl
pop
jo
jle
pop
add
mov
mov
mov
cwtl
ss
mov
pop
cwtl
sbb
movsb
sbb
enter
inc
imul
fidivs
cld
or
jmp
test
inc
gs
orb
cmpsb
or
cld
movsb
loope
dec
and
ds
aad
out
mov
lret
std
xlat
insl
fistpll
xchg
jmp
pop
sub
stc
imull
rcrl
xchg
mov
rorb
jg
inc
int3
test
negb
cmp
dec
xchg
sahf
fsubl
add
ds
in
stos
push
mov
aad
xor
pop
aad
jne
mov
pop
leave
popf
or
push
jecxz
outsl
xchg
xchg
addb
sub
inc
push
enter
jne
cmp
fcompl
mov
or
cmp
adc
dec
ja
adc
lret
ss
sarb
addl
orb
xchg
inc
mov
roll
test
pop
jns
fst
xchg
add
pusha
loop
cmp
lcall
inc
inc
xchg
mov
mov
cmp
insl
scas
nop
dec
pop
dec
cmp
js
aas
les
dec
aaa
outsb
mov
stc
jo
adc
icebp
loop
xchg
mov
js
jg
sti
lods
push
mulb
mov
std
test
mov
mov
call
jl
arpl
and
insb
movsb
sub
jae
xor
jnp
jae
popa
inc
push
xchg
inc
loop
mov
inc
insb
jno
and
or
nop
test
idivb
int
orb
aas
outsb
imul
nop
xor
mov
adc
into
in
rorl
xor
and
cli
jg
xlat
jnp
jae
inc
inc
xchg
inc
popl
xor
test
inc
adc
jae
cmp
mov
aam
xor
std
aam
jne
aad
pop
sbbl
xor
dec
cmp
jno
int
mov
sbbb
sub
jnp
mov
andb
cmp
mov
xor
sbbl
xchg
mov
jnp
jo
mov
insb
enter
jo
inc
and
lea
es
shlb
add
cmpsl
outsb
cmp
inc
push
pop
push
int3
jno
lea
sarl
dec
mov
xchg
inc
sbb
movsl
cmp
pop
mov
pop
out
sbb
sbb
sbb
rcrl
fimuls
xor
sbb
cwtl
outsl
fidivrs
and
inc
xchg
es
rcrl
mov
sub
cmpsb
ds
cltd
scas
lock
outsl
outsb
xor
sbbb
orb
les
jns
dec
cld
dec
pop
add
sub
out
xor
xor
xor
xor
xor
push
sbb
movsl
test
lds
test
xchg
test
test
jne
inc
stos
negl
ficompl
pop
mov
push
and
movsl
enter
fmuls
jp
sub
and
into
sub
scas
test
ret
xchg
jg
ret
gs
ret
jne
cmp
inc
aaa
or
repz
mov
adc
test
inc
enter
fadds
inc
mov
test
inc
sbb
mov
clc
test
inc
pop
test
sub
inc
cmp
aam
xor
sbb
add
jno
xchg
pcmpeqw
aam
jne
aad
jne
aad
jne
aam
jne
aam
jne
aad
jne
aad
jne
aad
outsl
cmp
cltd
ss
stos
push
mov
mov
mulb
insb
data16
cmp
clc
scas
mov
cmpsb
movsl
call
and
movsl
dec
and
movsw
sub
inc
cmp
jl
in
xchg
cmp
lods
push
mov
fucom
sub
jp
sub
sbb
mov
sub
cmpsb
sub
or
sub
in
jp
sub
int3
jp
sub
es
push
repnz
jg
ss
jnp
xor
dec
dec
push
ss
jnp
ss
mov
sub
cmpsb
ss
jnp
ss
adc
std
jbe
jmp
mov
xchg
xlat
lret
imul
nop
mov
mov
divb
insb
and
cmp
push
aaa
dec
addb
sbb
dec
adc
fnstsw
lock
mov
push
push
inc
popf
push
and
xor
jg
push
push
or
xchg
ds
js
fidivrs
ds
jns
ds
js
ds
pop
adc
sbb
adc
sub
ljmp
mov
jp
das
sbb
ss
jnp
push
dec
mov
sub
insb
jp
sub
jp
sub
sbb
mov
sub
cmpsb
sub
or
sub
in
jp
sub
int3
nop
scas
nop
cmp
dec
mov
pop
stc
jae
fsubrl
cwtl
pop
ffreep
cltd
jo
ljmp
sbb
fiadds
adc
das
cmc
imul
jne
aam
jno
jl
clc
push
inc
lcall
leave
cmpsl
jns
enter
enter
leave
xchg
jns
leave
addr16
leave
ja
xor
adc
inc
stos
cwtl
and
push
inc
xor
lock
loopne
cmp
add
sbb
mov
ljmp
movsl
dec
and
jo
sub
dec
mov
pop
mov
aas
movsl
mov
daa
and
sub
jp
sub
and
sub
nop
mov
ret
lahf
jg
ror
adc
push
bound
push
inc
xchg
pop
bound
mov
jge
fdivrs
lea
mov
scas
out
mov
out
mov
arpl
cs
filds
test
jp
call
sbb
fcompl
fsubp
sbb
fimuls
xor
add
es
sbb
sbb
fidivrl
leave
cmpl
jae
ss
test
popf
fildll
fsubrp
inc
mov
leave
push
jl
rcrl
lds
movsb
mulb
cltd
sahf
sbb
sub
jnp
sub
and
shll
mov
inc
scas
imul
cmpsb
jae
xor
push
ss
mov
sbb
ficoms
dec
fdivrp
sbb
add
sbb
lods
or
enter
leave
jp
dec
insl
testb
js
inc
cmp
pop
cmpsb
pop
dec
or
lret
mov
aas
jns
enter
enter
enter
enter
leave
lret
jns
leave
cmpsl
jns
leave
jns
leave
xchg
jns
leave
lahf
jns
leave
addr16
leave
outsl
jns
push
lods
jge
push
dec
jbe
cmp
rolb
xchg
pop
jg
ret
mov
sti
jg
ret
add
lret
jg
ret
sarl
ret
scas
jg
jbe
inc
dec
test
inc
push
test
test
jle
and
adc
pop
jl
jo
sub
in
xor
hlt
xor
jl
xor
xorl
cli
or
repnz
out
mov
mov
xchg
xor
cmpb
test
cmpsb
cwtl
inc
push
pop
push
fdivrs
and
sbb
lea
mov
mov
mov
ss
jl
ss
ss
jl
jo
arpl
and
jae
xor
lock
bound
xor
xor
ss
jnp
ss
jnp
or
add
fidivrl
adc
pop
je
mov
push
nop
mov
daa
sbbb
and
lcall
movsl
scas
and
movsl
mov
enter
shrb
sub
inc
std
pop
mov
mov
jmp
sub
dec
push
jb
push
and
daa
ja
cmpsb
inc
aam
push
lods
test
lds
test
js
xor
dec
aas
jae
inc
pop
jne
cmp
jne
sub
mov
cmpsl
loop
stos
ljmp
lea
mov
daa
inc
pop
shrb
push
data16
xchg
aas
ja
ret
lcall
jg
xor
inc
push
test
inc
push
test
mov
stos
or
xor
lret
lret
sub
mov
into
pop
sub
fsubl
mov
cmpsb
adc
dec
fs
dec
repnz
adc
add
dec
jo
nop
call
je
and
sub
repnz
fidivs
sub
addb
popa
push
push
orb
aaa
adcl
and
sub
and
lcall
outsl
sub
out
jp
xchg
cmpl
xor
cmp
mov
js
int
jg
mov
xchg
outsl
ret
adc
or
pop
imul
add
inc
cli
xor
pop
and
push
out
fbstp
xchg
pop
sahf
scas
cmp
gs
mov
call
in
add
dec
xchg
xchg
and
dec
cmp
outsb
divb
adc
into
insb
inc
mov
jne
or
pop
mov
push
out
jns
push
cmp
cmc
clc
dec
inc
push
cli
adc
xlat
in
outsb
mov
dec
addr16
sub
aaa
lahf
fdivs
inc
out
dec
adc
js
xchg
xchg
mov
and
loopne
cmp
mov
adc
pop
and
nop
or
fcompl
pop
cmp
and
pop
ljmp
sub
fisubs
jmp
in
cmp
mov
pop
cli
jno
lea
bound
lds
inc
xchg
sub
lret
rol
push
and
xchg
xor
sub
leave
in
xchg
cmp
and
add
nop
cmp
cmpl
add
sub
jl
fucomi
dec
xchg
pop
daa
mov
inc
leave
fs
loop
lods
jno
les
mov
adcb
jg
and
and
dec
daa
popf
lret
push
pop
je
lods
ror
cli
movsb
test
lret
jge
in
dec
aas
add
fucomp
mov
fiaddl
inc
cmp
mov
and
xchg
add
cli
adc
jne
aam
jne
aad
jno
ficompl
dec
dec
mov
mov
aad
inc
call
inc
cli
call
test
movsl
cmpsb
aam
inc
test
test
sahf
cmp
push
insb
pop
jmp
aam
push
jp
leave
xor
push
mov
leave
xor
mov
test
inc
inc
test
inc
and
jne
sbb
cwtl
and
pop
inc
fldenv
fists
dec
call
mov
rolb
push
fidivrl
xor
lcall
pushf
test
inc
sbb
jle
rorl
jecxz
pop
mov
nop
pop
jbe
inc
test
leave
int3
jl
inc
outsl
popl
pushl
out
sbbb
ficompl
clc
or
mov
leave
push
fistl
xor
inc
cltd
rcrb
cltd
call
jns
push
fdivr
mov
nop
or
inc
pop
popa
outsl
cld
stc
dec
loopne
dec
cmpsb
pop
inc
xchg
es
and
sbb
or
popa
lahf
push
mov
and
stos
jne
jnp
inc
cltd
mov
push
xchg
ljmp
cmp
cmp
lahf
jbe
pop
sbb
push
inc
addb
and
lahf
daa
jns
enter
enter
aas
fsubs
pop
push
fs
inc
cmpsb
jle
sub
sub
ret
test
lret
test
cs
adc
mov
aad
jno
jge
pop
and
pushaw
and
arpl
insb
insl
imul
les
fisubl
xor
mov
in
and
fcomp
pop
sbb
js
ds
js
and
mov
ret
fistpll
jb
popf
xchg
aaa
sub
dec
leave
xchg
jns
leave
addr16
leave
imul
jg
jle
stos
push
xor
mov
inc
xchg
push
ret
jg
ret
mov
jecxz
scas
jae
in
or
sti
movsb
xor
std
sarb
int
out
call
das
incb
jp
sahf
andl
jecxz
cmp
xchg
sub
sub
mov
cmc
rolb
and
ja
xor
inc
dec
jae
inc
cld
pop
cmp
sbb
xor
jg
je
pop
repnz
outsl
ja
ret
lods
insl
repz
leave
cmovg
jnp
insb
test
fsubl
cmpsl
mov
imul
cld
int
dec
aam
pop
leave
jecxz
sbb
icebp
cwtl
fwait
pop
inc
mov
adc
test
push
flds
add
aam
jno
mov
repz
mov
test
lahf
test
movsb
andb
scas
int
dec
jg
push
leave
mov
inc
inc
pop
push
inc
stos
test
inc
cmpsl
gs
inc
mov
lret
test
push
adc
ja
clc
lds
push
test
js
xchg
jge
shlb
xor
cmp
jbe
push
adc
jo
mov
mov
mov
popf
es
xchg
out
lods
jne
jns
fsubs
ret
push
add
daa
pushf
and
jl
int3
sbb
or
enter
inc
jnp
stos
jmp
mov
dec
push
and
movsl
sahf
and
cltd
cmpsb
xlat
das
cld
mov
std
pushf
xlat
or
subl
mov
outsb
jns
es
jno
dec
and
mov
xor
adc
test
dec
ljmp
sbb
mov
inc
lock
dec
repz
inc
or
lahf
in
sub
int3
mov
jbe
adc
push
sub
pop
ret
je
xchg
jmp
and
test
mov
mov
lret
in
cs
lds
and
stos
leave
cltd
popf
ss
jnp
nopl
jne
nop
dec
jge
pop
outsl
arpl
filds
stos
xlat
mov
in
mov
insl
and
cmp
in
xor
pop
fdivrl
imul
dec
sti
enter
lret
mov
lcall
test
in
inc
mov
hlt
adc
jp
jbe
lret
fldpi
or
sbb
lea
cmp
sub
je
xchg
ds
sub
aaa
push
mov
jae
jne
or
rorl
add
aas
xchg
loopne
cs
cld
cmpsb
dec
rolb
pop
push
fcomps
cmp
xchg
add
inc
mov
repz
mov
movsl
inc
and
outsl
pop
dec
out
xchg
aas
popf
cmp
js
push
pop
sbb
and
sub
push
mov
xor
pop
ficoms
std
mov
push
popa
popf
mov
mov
outsl
jmp
mov
push
dec
rep
jg
popa
popf
jg
sub
stos
cmp
push
lock
sbb
repz
push
xchg
aad
cmp
inc
lret
test
dec
in
or
es
or
std
mov
adc
out
mov
idivb
js
int
sub
popf
imul
lods
inc
and
jge
or
cmp
jge
pop
mov
cmp
inc
subb
or
test
cmpsb
mov
xchg
test
addb
and
sti
dec
push
subl
movsb
leave
loopne
inc
add
pop
cmpsl
fsubs
pop
or
dec
jae
xor
inc
imul
sbb
cltd
add
cld
xor
cmp
sbb
sub
mov
movsl
repz
push
xor
pusha
pop
scas
cltd
sti
push
movsl
rcrb
or
sub
mov
inc
addr16
mov
lods
xlat
mov
ret
js
lods
in
adc
push
daa
pushf
mov
jb
inc
dec
test
mov
xchg
and
mov
aas
pop
jle
mov
das
lds
sub
push
jp
sub
jns
shlb
mov
sub
mov
inc
loop
mov
mov
js
into
jp
sub
call
mov
cmp
mov
rorb
pop
push
outsb
and
xor
rol
pushl
lcall
inc
sub
xchg
and
mov
and
out
popa
and
lcall
push
pop
sub
pop
add
repnz
int
nop
sbb
daa
and
push
subl
loopne
push
xor
pop
jp
sub
adc
sahf
mov
ret
or
mov
es
ss
stos
push
cmpsl
cli
dec
das
les
push
mov
fbld
push
loop
out
and
push
cmp
loopne
inc
add
enter
popf
xchg
xchg
decl
mov
dec
mov
nop
js
and
push
imul
dec
sub
pop
jnp
ss
jnp
sbb
pop
int3
jns
aas
les
call
jg
ret
xchg
push
outsb
test
nop
xorl
aas
mov
lret
ds
dec
and
fwait
std
jg
jne
inc
push
test
inc
push
ja
sub
stc
lods
mov
rolb
xor
loop
pop
push
jle
push
cmp
pop
push
mov
push
mov
cld
sbb
and
push
fdivrl
sbb
stos
add
add
ret
lret
jg
jo
ret
mov
jg
jno
push
movsl
cmc
fst
aam
push
add
out
mov
sub
xchg
scas
jno
out
push
jo
sub
xor
push
sti
shr
or
bswap
mov
mov
and
lret
sbb
adc
shll
lahf
mov
movsb
sbb
fxch
ljmp
mov
pop
mov
mov
adcb
pop
fcompl
dec
jp
sub
and
adc
test
orl
adc
lahf
popf
jle
addr16
push
dec
cmp
push
push
adc
repz
stc
xlat
xor
cmp
aaa
jle
addb
or
jb
aam
jo
pushl
fxch
inc
add
jno
cs
push
and
adc
mov
ret
cmp
push
push
inc
lcall
test
daa
push
mov
leave
pop
jl
call
loopne
cmp
or
outsb
jmp
stos
mov
sbb
pop
cmpsl
mov
inc
dec
je
in
out
out
popf
inc
xor
jecxz
cwtl
push
in
inc
clc
cmp
aam
jne
sar
clc
jne
mov
testb
je
les
pop
ljmp
inc
sti
mov
js
into
int3
orb
mov
aas
das
fsin
sbb
inc
sub
mov
sahf
or
sub
mov
lods
push
xlat
jp
dec
jno
push
or
push
outsb
aam
lret
fwait
mov
fisubrs
cmpsb
adc
push
jecxz
cmpl
push
inc
cmc
mov
les
push
test
inc
dec
je
loopne
mov
loop
jg
ss
jecxz
aaa
mov
jns
stc
cmp
iret
adc
aas
dec
loope
inc
dec
cmp
push
imul
dec
xor
mov
aaa
dec
xor
scas
xor
xchg
jmp
xchg
xor
jbe
inc
push
jo
adc
and
mov
test
adc
adc
mov
push
int3
rorl
xchg
movsb
arpl
xchg
leave
out
cmp
pop
rcrl
les
inc
mov
cmp
mov
push
pop
scas
in
addr16
aas
cmc
shll
add
popa
flds
mov
stc
or
scas
cld
jne
and
sbbb
cld
mov
xchg
es
lahf
sub
pop
lcall
imul
push
insl
mov
xchg
std
jmp
lds
inc
mov
xchg
into
cmp
cmc
inc
aad
mov
popf
mov
lret
mov
cs
int
imul
mov
sbb
mov
js
xor
negl
inc
mov
push
es
mov
stos
sti
xor
arpl
sub
pop
cmp
lea
push
hlt
or
jle
repnz
mov
inc
mov
push
push
and
pop
pop
mov
popa
cmp
add
icebp
sbb
push
js
and
mov
mov
faddl
sub
pop
lcall
dec
inc
mov
clc
xchg
jnp
das
lock
dec
lret
test
sub
cmp
loope
mov
jle
adc
add
jae
fcmove
fs
add
dec
ds
mov
lock
out
movb
andl
and
test
dec
movsb
inc
ja
dec
and
jns
push
mov
cmp
push
sub
fsubrl
incl
call
lahf
test
fucom
pushf
loope
testb
inc
mov
orl
and
subb
jbe
push
hlt
idiv
cmc
jp
inc
pop
fucomip
pop
jp
dec
in
fistpll
fimull
std
mov
sub
lods
rolb
js
test
cmpl
dec
xlat
leave
mov
xchg
lcall
xorb
int
lods
aas
mov
mov
ret
xchg
scas
fstps
nop
popf
addr16
push
cmp
push
mov
fcoms
sarb
rorb
ds
push
pushf
inc
mov
sbb
mov
subl
push
dec
ljmp
or
push
inc
adc
mov
dec
and
sub
push
insl
dec
fidivl
cmp
adc
leave
add
les
out
push
mov
xorb
mov
mov
fisttpl
and
data16
push
fwait
add
pop
stos
xchg
leave
xlat
and
sbb
inc
push
jne
testl
sbbb
lods
cmp
and
shrl
jno
adc
jno
pop
mov
sub
outsl
jp
ret
fcoml
lret
scas
xchg
xchg
mov
fwait
popf
xchg
cmpsb
dec
popa
rcll
jne
test
lds
xchg
es
call
popf
mov
out
xchg
movb
out
jle
test
scas
xor
loopne
fistpll
shrb
mov
int
lds
call
aad
dec
loop
adcb
enter
inc
push
and
mov
cmpsl
fsubrl
mov
lds
jne
xchg
andl
jnp
imul
sub
clc
push
mov
mov
sbb
ret
scas
dec
or
js
nop
push
scas
int
sub
pushl
jmp
mov
mov
mov
add
test
adc
push
push
jle
and
mov
and
lock
mov
inc
adc
lcall
sub
mov
lcall
cmpsb
push
cltd
lea
and
sbb
cltd
fiadds
dec
mov
es
ss
insl
out
cmpsl
sar
sub
fstps
push
scas
imul
cmp
jb
jae
punpckhbw
stc
and
jle
cs
mov
pop
and
push
mov
mov
inc
mov
sub
cmpsl
cmp
or
push
xchg
inc
lahf
test
push
mov
popf
movsl
call
push
push
inc
lods
js
push
sbb
shlb
mov
push
loop
push
cmp
out
jns
stos
xor
push
xor
push
mov
pop
inc
popa
insl
inc
adc
mov
leave
clc
gs
movsb
je
sub
sahf
sub
lods
stos
fsubs
or
js
mov
cs
es
mov
popf
inc
fadds
icebp
pop
mov
das
enter
cltd
pop
fisubrl
jns
aas
sahf
jns
and
pop
mov
mov
jl
pop
add
jl
and
leave
into
push
inc
dec
call
push
push
jbe
mov
inc
enter
test
push
sahf
pop
pop
lds
xchg
jmp
push
enter
shlb
fs
pop
cwtl
insl
mov
or
ror
mov
int3
lods
jo
aam
ret
and
and
int3
lods
bound
loopne
sbb
idivb
dec
mov
lcall
in
push
add
pop
cmp
decb
mov
mov
lcall
push
bnd
scas
sti
insl
lret
push
inc
lods
es
ss
inc
testb
sbb
dec
or
sub
leave
test
lods
subl
insb
ds
fmuls
stos
arpl
xor
inc
cmpsb
lcall
jo
xchg
ljmp
inc
mov
push
and
push
sbb
roll
add
inc
mov
stc
dec
or
jl
notl
adc
mov
inc
clc
int
ficoml
movsl
jb
leave
fidivrs
cmp
or
push
and
jge
dec
lcall
sbb
sub
stos
in
xor
mov
std
shlb
push
xchg
cltd
mov
mull
pop
jae
push
pop
je
bound
xlat
mov
scas
jo
xchg
pop
loope
dec
mov
std
and
xchg
jnp
add
and
imul
cli
and
sbb
test
ss
dec
push
cmp
sub
push
scas
mov
fistpl
lock
idiv
jmp
cld
mov
mov
mov
and
dec
adc
cmp
inc
xchg
cmp
cltd
hlt
dec
pop
sub
fldl
sub
iret
sbb
mov
adc
repnz
imull
mov
or
xchg
rclb
es
dec
sub
repz
insb
outsb
imul
loop
xlat
fstl
scas
std
push
test
push
mov
int
xor
mov
pop
pop
ja
or
andl
add
pop
ds
pop
or
hlt
dec
ficomps
out
cmp
iret
dec
xchg
cmp
lods
jmp
inc
dec
js
dec
testb
pusha
iret
sub
loopne
jns
mov
xorl
fistl
or
xor
push
mov
pop
popl
fwait
xor
cmpsb
outsb
push
mov
ja
xor
pop
mov
jl
ss
jnp
ss
mov
xlat
sub
cmpb
push
add
sub
je
jae
in
testb
dec
mov
seta
clc
or
lock
or
stos
lods
mov
out
xor
push
push
push
push
push
or
xchg
cli
es
add
adc
and
sub
dec
test
lods
push
outsb
arpl
dec
into
lods
inc
adc
pushf
adc
fisubl
movsb
jp
mov
arpl
mov
repz
inc
lea
test
mov
sbb
add
push
out
pusha
sub
mov
cwtl
lds
jp
and
arpl
clc
jg
pushf
sbbl
jp
push
repz
pop
mov
cmp
fcmove
mov
bnd
add
dec
or
jb
sbb
cmp
std
clc
mov
sbb
stos
push
leave
jns
leave
mov
repnz
ret
add
jle
outsb
inc
shrl
xor
add
cmp
mov
addr16
mov
mov
push
fdivrs
pop
push
andl
sbb
push
mov
pop
cmp
mov
push
fnstenv
lret
push
mov
imull
mov
jl
push
pop
adc
cld
or
push
movsl
cmp
movsb
xchg
jmp
orb
mov
mov
push
mov
inc
fdivl
popf
sbb
pop
fldcw
je
jl
lcall
mov
out
sub
in
cmp
adc
push
pop
je
out
fisubl
sub
aas
sbb
push
xchg
ljmp
arpl
push
xor
ret
jle
dec
jmp
mov
aam
jle
out
out
pop
fs
pop
lock
push
into
xlat
push
adcl
cmp
scas
sbb
mov
add
cmp
and
shrb
divl
je
inc
es
or
es
lock
mov
mov
fimull
ror
jno
jg
mov
and
jns
aas
adc
push
inc
decb
pop
enter
loope
lea
pop
repnz
pop
and
cmc
fwait
or
test
cmp
fistps
pop
push
jbe
xor
sub
movsl
sbb
lea
fldcw
mov
lret
flds
and
jbe
fcoml
mov
outsb
mov
cltd
lods
or
lret
and
jle
test
pop
fisubrs
sbb
jp
mov
int
in
das
cld
leave
and
pop
filds
dec
mov
or
push
ds
cmp
repnz
sarl
sub
daa
jns
jb
mov
inc
outsb
into
ret
xor
mov
dec
mov
push
sub
inc
or
imul
push
xchg
cli
dec
xchg
lods
jae
sub
lahf
notl
fstpl
mov
ss
pusha
fwait
pushl
inc
cmp
dec
jg
pop
jp
cmp
xor
js
or
and
fisttpll
scas
or
dec
jb
xchg
data16
add
scas
inc
inc
repnz
mov
icebp
sahf
mov
sub
sbb
test
inc
sbb
ja
pop
aad
dec
cwtl
sub
mov
sbb
es
cmc
lcall
std
pop
jno
adc
ljmp
es
cmpsl
cmp
loopne
mov
xchg
andb
testb
mov
push
push
cwtl
pop
or
push
cmp
test
mov
outsl
daa
fcmove
mov
push
cmp
repnz
mov
aas
mov
mov
aas
or
dec
loopne
add
adcl
test
sti
cmp
ja
aas
push
call
pop
gs
in
test
jbe
out
or
test
sub
jbe
jge
and
cmp
gs
rorl
je
in
scas
std
stos
mov
les
mov
leave
addr16
push
sbb
ds
popa
push
data16
pop
ret
adc
sub
dec
loopne
shll
sbb
and
add
adc
cmpsl
mov
and
push
or
xchg
xor
sti
inc
adc
push
les
test
or
xor
aam
outsl
cmp
adc
fidivrs
scas
clc
pusha
lea
pop
pusha
push
xor
rolb
inc
mov
push
outsl
mov
jmp
std
dec
mov
stos
std
neg
jns
enter
pusha
scas
das
testb
loopne
sar
pop
leave
loop
fisubl
inc
or
in
jg
dec
push
fstp
sbb
in
jle
testb
inc
sahf
data16
cltd
stc
sbb
push
sub
jg
mov
std
jnp
xchg
xor
mov
clc
popa
cs
les
push
or
dec
cmc
lcall
or
mov
push
sub
faddl
push
cltd
out
shlb
popa
jl
movsb
jae
push
pop
lds
jecxz
xor
ds
enter
ficompl
push
xchg
xor
subb
xchg
popa
mov
push
jle
xchg
sub
lea
rol
xchg
loope
xlat
roll
dec
or
mov
iret
mov
out
fdivr
inc
mov
vpaddw
mov
inc
cwtl
loopne
jnp
push
push
lcall
cs
mov
ret
ret
out
or
adc
push
inc
pushf
jecxz
sbb
push
aaa
mov
or
pop
sub
les
push
popa
pop
pop
pushf
ficomps
mov
and
hlt
pushf
mov
push
sub
jmp
mov
adc
push
out
and
fimuls
pop
aam
or
or
jg
cmpb
add
or
in
mov
test
inc
out
mov
repz
jp
sbb
and
cmp
xor
in
adc
adc
mov
sub
cli
cwtl
or
lret
add
xor
jb
call
repnz
and
or
je
or
jg
xor
cld
cmp
rcrl
movsb
mov
cwtl
lcall
jns,pt
in
add
sbb
daa
clc
arpl
ret
mov
mov
fisttpll
mov
ret
mov
out
xor
xchg
jo,pt
lods
jae
pop
pop
std
push
ret
fistpl
inc
cmp
pop
mov
imull
inc
xchg
mov
jbe
and
jmp
mov
add
mov
add
push
insb
pop
out
stos
into
adc
mov
cmp
mov
sti
jg
jg
sub
dec
sub
push
ret
sbb
ss
test
push
sbb
cmp
call
subb
loop
push
jl
push
dec
pop
jg
mov
and
push
adc
pushf
jae
stos
dec
ret
mov
test
arpl
test
add
sahf
cmp
mov
add
mov
jb
andl
sub
rol
test
dec
sbb
xchg
xor
nop
in
adcl
jl
pop
dec
adcb
xchg
inc
fcmove
int3
push
mov
fsubrs
dec
jp
mov
mov
scas
in
push
fisubrl
jmp
insb
arpl
je
jne
jne
cmp
or
test
sbb
lret
or
cld
pop
jmp
add
and
xor
and
pop
push
or
add
pushf
adc
mov
jle
mov
pop
sub
outsl
jp
mov
cli
jno
sub
enter
out
mov
pop
daa
lds
std
fldl
daa
mov
shll
push
adc
mov
outsl
dec
jo
rolb
mov
mov
aas
addr16
lods
mov
dec
ljmp
mov
push
push
mov
sbb
enter
add
push
mov
mov
lods
scas
sbb
insb
ret
and
adc
scas
cmp
neg
jle
push
rcl
jg
inc
sbb
inc
and
sbb
sub
imul
sbb
dec
push
rcr
sub
sub
imul
inc
enter
fcmovne
mov
movsl
adc
test
push
loopne
data16
mov
jl
sbb
jae
sbb
push
cmp
lods
inc
enter
push
sub
cmc
push
mov
push
fwait
leave
std
push
decl
mov
pushf
push
dec
pop
dec
mov
lea
inc
lret
xchg
arpl
or
sub
loopne,pt
fidivl
lods
dec
push
dec
adc
sub
push
movsb
js
dec
out
and
scas
xor
add
sahf
sbbl
xor
cmp
jae
xchg
stc
and
not
cmp
andl
hlt
js
or
mov
adc
loope
sbb
mov
dec
inc
pop
ljmp
lds
mov
inc
iret
fs
aas
clc
int3
enter
movsb
rcrb
roll
xor
push
push
mov
int
push
or
aam
test
xor
fisubs
movsb
push
lcall
mov
push
xor
leave
jo
lods
add
fistps
pushf
mov
repz
xchg
je
push
add
sbb
int
fisubs
pop
out
adc
sti
aas
push
dec
push
into
jg
fstpl
rcl
sub
js
mov
jl
add
fs
xor
cmc
int
imul
add
das
xor
jne
mov
push
cld
and
mov
lock
nopl
pop
dec
lcall
push
jge
jle
addr16
xor
repz
xchg
jne
fsubrl
fcmovnu
push
push
jp
adc
push
daa
adc
test
test
or
adcb
sbb
fs
fsubrp
or
jnp
pop
data16
xor
stos
and
xchg
popa
mov
jb
in
fpatan
inc
std
in
dec
adc
cld
frstor
inc
sbb
cmp
orb
fstpl
sub
lods
inc
ds
jns
and
fwait
jecxz
push
addl
dec
outsl
cmpsl
add
sub
xlat
rcrl
ret
dec
lret
leave
inc
lods
ss
lods
dec
lret
ja
xchg
push
leave
shrl
dec
and
pop
xor
iret
std
mov
mov
dec
mov
xchg
jmp
lods
cmp
mov
fdivrl
or
repz
dec
adc
das
mov
mov
mov
rcrb
mov
mov
xor
mov
push
lret
adc
enter
int
adc
mov
test
pcmpgtw
push
gs
pop
dec
jge
ret
dec
xchg
adc
lret
add
mov
mov
call
call
cmp
xor
xor
aad
xor
mov
jle
insl
mov
stos
addr16
push
scas
repz
sbbb
add
cmc
xor
mov
push
aaa
btr
divl
jae
jnp
ds
jns
sub
jne
sub
dec
mov
mov
adc
push
push
lock
std
jo
mov
loope
cmc
and
icebp
push
mov
add
repnz
inc
ret
lahf
jbe
jg
adc
sbb
add
inc
ss
lds
pop
mov
dec
xchg
int
pusha
mov
out
sub
lea
add
inc
in
daa
ds
cmp
and
imull
testb
xchg
mov
ss
push
mov
insb
scas
cmp
and
mov
jbe
inc
cmp
xchg
add
aas
jb
sub
jnp
sub
test
sbb
shll
addl
ss
inc
sub
jecxz
mov
xor
fmull
and
icebp
rcrb
jns
xchg
add
scas
or
jmp
imull
subl
ret
sbb
jns
jb
ja
fdivrs
push
mov
fwait
push
inc
sub
jne
inc
int
pushl
inc
fs
xchg
nop
inc
xchg
fisubrs
jecxz
lcall
cmp
les
test
cmp
fsts
arpl
fprem
in
cltd
pop
lret
inc
orl
and
sbb
pop
push
movsb
jecxz
test
xchg
pop
inc
inc
pop
lea
cli
cmp
sbb
pop
mov
pop
dec
bound
out
repz
inc
repz
loop
nop
xchg
rolb
scas
pcmpeqd
jo
mov
jp
or
or
das
adc
stos
and
xchg
inc
mov
dec
imul
push
stos
test
push
inc
mov
or
adc
das
push
jnp
mov
mov
lock
rcll
mov
inc
sub
jno
push
cltd
in
insb
fcomps
je
sarb
mov
data16
ret
mov
das
ja
ret
out
pop
iret
mov
adc
lds
andl
jp
dec
pop
mov
cltd
leave
clc
lods
dec
and
lcall
inc
out
shr
dec
adc
cli
arpl
xor
aad
repz
mov
fwait
mov
cmpsb
jae
jb
dec
jmp
ss
je
inc
inc
fiaddl
pusha
int
xchg
imul
add
mov
lods
and
xchg
imull
addr16
cmc
shlb
js
cltd
sub
movsl
idivb
rcrb
jae
mov
loope
lock
test
data16
push
adc
sbb
mov
imul
test
sub
subl
nop
sub
mov
jg
out
repnz
outsl
ds
jno
imul
inc
cmc
jle
pusha
hlt
inc
xchg
inc
arpl
cli
bound
outsb
mul
lcall
push
sub
subl
or
roll
push
negb
fimuls
inc
cmp
fwait
divl
js
add
adc
test
dec
psrad
jno
mov
cmp
or
data16
xorb
xchg
mov
roll
stos
lret
aam
nop
jl
inc
mov
leave
xor
popa
pop
repnz
adc
push
push
jo
adc
and
jge
or
jno
inc
cmp
movsb
dec
sbb
mov
inc
stos
ss
sub
push
sub
adc
mov
das
inc
fcoms
jbe
iret
addr16
dec
xchg
out
popf
xchg
mov
add
stos
mov
popl
sub
and
popf
or
subb
mov
ret
mov
jmp
mov
pop
mov
jne
shrl
ret
pop
test
lock
or
sub
and
fs
adc
in
lea
int3
xchg
mov
cwtl
add
xchg
insb
enter
scas
cmp
enter
icebp
jp
add
pop
push
ds
pop
dec
adc
icebp
outsl
pop
push
dec
inc
popa
push
sub
xor
pop
leave
enter
imul
aam
sarb
out
cltd
repnz
aas
arpl
movsb
add
inc
jp
mov
jmp
adc
mov
mov
cmp
mov
sbb
push
loopne
mov
out
stc
mov
xchg
xlat
jg
addr16
test
cmp
enter
inc
insl
in
mov
pop
sub
inc
cld
orl
mov
push
add
inc
pop
push
pop
pop
and
cmp
call
mov
pop
mov
cmp
enter
loope
loope
xchg
pop
jbe
call
aad
sub
test
insl
test
jne
xor
jge
jl
inc
je,pn
inc
ss
cmp
popa
lahf
inc
mov
outsl
dec
jl
aam
pop
jl
sub
inc
or
fistps
inc
enter
jg
add
out
xchg
bound
addr16
or
cli
xchg
mov
mov
aam
int
dec
jo
pusha
jmp
fimull
iret
ljmp
mov
neg
adc
mov
mov
dec
sarb
arpl
je
gs
push
jo
movsb
push
push
push
sbb
ja
out
pop
mov
js
and
dec
int3
or
jp
lret
adc
xchg
enter
fcoml
inc
insb
sub
xchg
aaa
jmp
outsl
mov
lds
and
jecxz
push
into
cmc
popa
icebp
push
push
cmpsb
sarb
sub
pop
mov
sub
push
popf
pop
fsubl
fisubl
imul
inc
push
hlt
push
pop
xor
jge
push
pop
mov
mov
xchg
push
movl
aas
cli
mov
fdivrs
mov
call
jecxz
cmc
js
mov
dec
loop
xlat
mov
out
lods
and
jg
loop
mov
xchg
call
cmp
aad
jmp
aad
jno
ljmp
and
pop
push
xor
mov
push
adc
pop
popa
clc
xor
cmp
cwtl
jg
jno
rorb
mov
inc
lret
jl
das
mov
cmpsb
mov
mov
sbb
jp
mov
fwait
lcall
adc
xchg
mov
mov
lock
es
inc
adc
pop
imul
mov
shlb
aad
jne
rorb
nop
xchg
subb
jbe
lock
iret
add
inc
fidivrl
lahf
in
pusha
mov
and
and
or
lahf
inc
ret
test
dec
mov
test
dec
mov
iret
pop
or
iret
push
ljmp
pushl
sbb
jb
je
jge
mov
nop
inc
pop
jne
fimull
push
ret
fadds
stc
scas
pushf
stc
cltd
and
push
aad
push
add
stc
xchg
or
and
cs
lock
cwtl
call
pop
sub
mov
inc
xchg
and
stos
sbb
imul
fstps
dec
cmp
lods
mov
cmp
dec
dec
scas
mov
shll
shrb
push
dec
sub
adc
jmp
mov
pop
xchg
xlat
pushf
fbstp
cmp
dec
mov
hlt
jae
jo
sbb
jne
cmp
add
push
repnz
mov
fisubrl
js
fbstp
push
sub
or
jge
sub
data16
xor
jae
inc
frstor
push
cmp
in
test
pop
iret
xchg
jmp
xchg
adc
jnp
push
push
inc
push
mov
xor
ret
cmp
nop
cmp
ss
divl
cmp
push
push
push
dec
in
lret
lock
jl
add
or
mov
inc
loope
xlat
fsubrl
jnp
cld
adc
test
push
scas
mov
fcomip
jne
mov
int
pushf
lods
xchg
sbb
clc
fstpl
mov
inc
cmp
push
fs
inc
jno
add
fsub
addr16
je
jmp
nop
add
xlat
xchg
adc
fmuls
mov
jp
sti
add
mov
or
sahf
repz
sbb
orb
in
js
pushf
aad
mov
popa
outsb
dec
jbe
imul
sarl
mov
or
rcl
test
es
push
cmp
xor
jmp
xor
test
insl
rclb
imull
mov
push
clc
xor
mov
nop
ja
lret
ss
pop
outsl
cmpps
pop
aas
gs
sahf
mov
ss
push
out
jne
js
lods
pop
push
testb
mov
cmp
iret
cmp
test
cmp
adcl
jl
mov
and
aam
jbe
pusha
mov
push
pop
clc
lods
scas
fimuls
out
cmpb
stc
jns
xor
loope
mov
cs
inc
inc
popf
ret
test
mov
fmuls
sbb
cmp
aas
ss
shlb
jbe
lea
aaa
insl
fcmove
pop
mov
jge
es
ret
sub
dec
pop
push
add
les
loop
mov
mov
pop
and
dec
pop
dec
loop
jle
cli
andl
and
jge,pn
ss
pop
subb
les
jmp
sub
icebp
sbb
or
push
mov
xorb
inc
mov
pop
pop
dec
jnp
mov
inc
clc
jge
fucomip
or
xorb
rorb
cmp
stos
push
fdivrs
aas
dec
jae
cmp
push
cmp
sbbl
mov
cli
icebp
and
sahf
popa
stos
cmc
sbb
js
jne
inc
sub
addr16
rorb
pop
stc
test
pop
sub
sbb
cli
shll
push
rcrb
fsts
scas
dec
cld
gs
push
test
lock
fstpt
popa
jl
push
dec
test
test
adc
mov
outsb
jmp
add
and
sub
cltd
jl
mov
xchg
scas
or
xchg
andl
jge
pop
dec
lret
cmpsl
mov
lahf
and
daa
mov
loope
push
outsl
jl
fs
jbe
mov
jecxz
dec
cmp
stos
scas
outsl
and
jbe
adc
fs
dec
or
out
jo
insb
pop
cld
lds
adc
push
fidivrl
sbb
pop
cmp
push
cmp
xchg
xchg
pop
lahf
cwtl
clc
jg
inc
mov
mov
mov
dec
xor
sbb
xchg
rclb
or
mov
fists
mov
pusha
mov
into
das
mov
test
dec
repz
inc
fidivs
sahf
and
dec
xor
dec
pop
lea
inc
sbb
push
pop
rcrl
orl
sbb
push
cmp
push
adc
push
pop
dec
add
cwtl
fistpll
and
sbb
jp
jmp
loopne
cmpsb
scas
mov
out
lcall
xor
sub
leave
cld
leave
fdiv
dec
or
inc
or
popa
sbb
jle
cltd
sti
and
out
adc
push
sub
adc
push
cmpsb
enter
cmp
jl
out
xor
sbb
mov
fld
xchg
mov
inc
sub
xor
jae
in
lds
inc
lds
mov
fs
movsb
sbbb
mov
outsl
add
lahf
iret
xchg
or
push
cmp
cwtl
mov
stos
fldz
les
xor
xor
out
pop
dec
shl
das
loopne
icebp
sarb
or
aaa
jne
fildll
es
xor
sbb
imul
les
leave
decb
add
fnstenv
imul
mov
pop
sub
xor
push
ds
lahf
cmc
mov
or
dec
push
and
jp
insl
inc
adc
lahf
adc
ss
xlat
leave
leave
cmp
sar
push
jbe
movsb
pop
or
iret
push
js
lcall
sbb
stc
ljmp
inc
or
or
mov
cmp
pop
mov
lret
addr16
cs
ljmp
dec
fisubl
mov
add
les
data16
in
aas
pop
jcxz
jb
mov
and
mov
mov
rorb
lock
out
sahf
outsl
xchg
mov
mov
int3
and
cmp
pop
outsl
outsw
nop
arpl
hlt
pop
mov
inc
ljmp
xchg
fwait
mov
sbb
and
cmp
or
out
sbb
imulb
aam
push
xor
mov
mov
jmp
dec
lods
mov
std
jbe
cmp
push
jns
adc
sbb
push
push
push
dec
fs
mov
mov
xor
sub
cmp
sarb
lods
or
adc
xchg
dec
test
inc
pop
sbb
cmp
test
aam
dec
pop
aam
mov
dec
sbb
dec
cmp
push
or
shl
or
jae
ss
loopne
mov
jo
dec
mov
mov
xor
mov
lods
mov
push
mov
sahf
mov
jp
mul
mov
lods
mov
mov
xchg
fsubrl
sub
mov
jle
pop
out
stos
add
rorl
enter
mov
pop
jb
rcrb
mov
xor
call
pop
push
mov
xchg
add
push
cmp
daa
sub
dec
adc
ficompl
jl
pop
repnz
hlt
and
aaa
scas
sbb
shr
ljmp
lods
fsubl
pop
sti
xorb
fs
and
hlt
or
leave
mov
shr
enter
iret
nop
in
sbb
in
movsb
lea
cli
xor
inc
jnp
ss
mov
adc
and
inc
movsl
push
in
lods
push
in
fs
add
mov
ret
xchg
jg
mov
pop
ss
out
mov
adcb
test
sub
add
ret
lods
int3
out
push
pop
aam
icebp
test
sub
mov
sub
xor
dec
mov
cs
nop
pop
push
sub
or
mov
jecxz
sbb
inc
or
mov
pop
lahf
lret
push
lods
mov
pop
outsb
mov
sbb
outsb
push
jae
sub
rcl
mov
aam
nop
mov
jp
je
aam
fimull
pop
sbb
cltd
cltd
repnz
sub
xchg
mov
pop
js
and
aaa
adc
sbb
mov
nop
test
mov
aad
fnstcw
lret
inc
add
imull
aam
dec
insb
dec
aad
jno
fidivrs
jle
bound
add
cltd
and
imul
sahf
lods
popf
jg
jo
mov
jne
mov
jno
cmp
popa
jns
or
cmpsb
jns
sbb
stos
popa
rorb
push
movl
and
mov
pusha
test
dec
mov
sbb
inc
cmp
mov
ja
divb
jnp
jns
dec
daa
outsl
xchg
adc
outsl
push
mov
adc
sti
rorl
xchg
mov
dec
sbb
jmp
je
or
push
mov
dec
ss
stc
out
sbb
add
arpl
not
inc
add
and
mov
dec
xchg
pop
addr16
test
fisubs
movsb
fsubl
inc
sub
mov
leave
outsl
or
pop
dec
lods
mov
xorb
cmp
xchg
incl
add
sbb
cmpsl
stos
cld
sub
nop
fdivrl
aad
in
inc
xchg
and
lock
add
mov
adc
inc
pop
mov
ja,pt
ret
sub
add
or
sar
loopne
sub
ror
mov
outsl
pop
cmpb
sbb
test
mov
push
pop
xor
jno
test
dec
pop
sti
inc
add
xchg
out
mov
sub
shr
add
imul
xchg
push
sbbb
mov
arpl
jl
add
sarb
dec
adc
movsl
xlat
push
leave
aaa
test
dec
mov
dec
imul
xor
mov
jns
popf
push
lea
push
push
mov
jl
jne
dec
jmp
loopne
inc
mov
dec
or
adc
lods
repnz
adc
adc
dec
mov
pop
jle
jle
push
xor
xchg
scas
mov
xor
add
cmpsl
lea
adc
pusha
movsb
pusha
test
cmpsb
or
stos
enter
int3
sarl
insb
pop
inc
add
mov
rol
xchg
pusha
stos
sbb
lock
scas
jb
test
fwait
out
daa
push
xchg
jmp
gs
pop
subl
dec
cmpb
cltd
or
or
out
push
ds
dec
cmpsb
lcall
rcr
jge
or
sbb
movsb
lcall
imul
mov
outsb
rcrl
dec
push
xlat
aam
xor
movb
leave
xchg
das
sub
mov
cmp
shr
test
push
cmp
and
sbb
cld
movsb
lods
sbb
mov
repz
scas
das
sbb
cwtl
jae
and
rcrl
andb
cmpsl
arpl
pop
sub
xchg
jg
xor
jbe
in
dec
jle
mov
nop
stos
mov
mulb
mov
dec
fldl
jg
stos
jp
mov
mov
and
mov
test
pop
dec
inc
pop
aam
out
jo
push
mov
es
or
mov
lret
mov
stos
push
mov
xchg
or
sbb
stos
out
dec
arpl
imul
dec
xor
jge
cmp
das
xchg
inc
mov
lcall
inc
dec
jg
mov
inc
dec
es
xor
jnp
popa
test
pop
fwait
jae
aad
int
push
pushf
or
in
xchg
mov
pop
jle
jmp
pusha
call
xor
cli
push
cmp
orb
rcrb
add
iret
fxrstor
mov
scas
ja
scas
inc
cmc
sahf
shl
jge
push
jbe
js
push
leave
data16
rol
xchg
pop
roll
iret
jmp
cs
adc
cld
xchg
push
pop
out
xor
scas
cmp
push
je
loope
dec
sbb
jp
clc
mov
cmp
xchg
pop
fcoms
cmp
cwtl
inc
imul
jnp,pt
pop
mov
addr16
inc
cmpsb
pop
ret
dec
fcoms
test
subl
xchg
add
push
shll
cmc
inc
jns,pt
aad
cmp
xorl
clc
dec
in
les
aaa
fucomi
inc
push
jo
xor
mov
jmp
pop
es
mov
out
scas
in
add
cld
dec
shrl
mov
xchg
in
cmp
jecxz
fs
mov
add
cmpsb
in
in
ds
pop
xor
dec
cmp
mov
loope,pn
sub
push
cmp
push
add
push
sbb
nop
sti
mov
clc
jecxz
aas
les
pushf
sahf
imull
mov
jne
mov
test
push
cwtl
lahf
shll
or
mov
roll
outsb
jge
sbb
push
mov
adc
stos
dec
push
push
lods
push
rcl
add
test
pop
rcl
in
dec
aaa
in
add
orb
or
sub
fisubl
push
pop
icebp
leave
xchg
arpl
dec
lods
inc
notb
icebp
repnz
hlt
ljmp
push
icebp
rcrb
jg
xchg
stc
out
xor
das
addr16
jnp
jg
xchg
jl
sub
cmp
nop
sub
cwtl
pop
jb
inc
xchg
inc
out
jae
pop
jecxz
sbb
sbb
or
das
push
loopne
into
add
decb
push
aas
ficoml
fdivs
add
in
shrl
mov
push
push
mov
test
cmp
filds
cwtl
call
pushf
leave
pushf
mov
sbb
out
xchg
ss
jb
pop
mov
sbb
jno
rorb
adc
jo
fmul
push
mov
imul
cmp
push
fwait
cld
pop
xchg
rcrl
ja
cmpsl
mov
xor
daa
dec
jmp
outsb
rcll
test
stos
cli
inc
pop
cli
mov
or
es
sub
lods
cmpsl
cmpsl
xchg
arpl
into
int
fisttpll
lret
adc
push
xchg
xor
repz
inc
adc
test
pop
stos
mov
mov
rcr
cmp
mov
sub
cmp
popa
push
cmp
add
frstor
mov
mov
pop
jecxz
les
hlt
stos
dec
adc
fadd
mov
in
push
std
jl
fsubrs
into
imul
and
fdivrl
andb
pushf
es
ja
sarl
sahf
aam
and
adc
sub
test
push
hlt
and
cmpsb
mov
ds
rorb
pusha
jns
dec
dec
outsb
push
or
cld
sbb
popa
mov
popf
mov
cmp
jno
bound
and
mov
lret
lret
cmp
and
mov
into
aaa
push
rcrl
inc
nop
mov
inc
pop
lods
popf
mov
mov
pop
sub
popf
jg
into
mov
jns
sbb
or
dec
fcom
xchg
push
mov
jg
aaa
scas
inc
dec
repz
lods
sub
or
sub
es
cmpsb
stc
sarl
cli
scas
cltd
sbb
into
cmp
test
push
adc
cld
adc
pop
stos
xor
inc
es
pusha
push
push
and
dec
sub
test
cmp
outsb
sbb
dec
push
push
pop
ret
fwait
adc
xchg
loop
push
pop
xorl
xlat
jmp
loopnew
popf
sub
fildll
je
scas
mov
adcb
cld
mov
jecxz
scas
dec
js
fimull
mov
and
addr16
xchg
mov
jecxz
and
adc
dec
ficompl
jns
and
ljmp
pop
and
mov
sub
mov
add
nop
mov
fisubrs
movsl
xchg
and
jl
jae
lea
test
push
ret
xor
aad
jle
xchg
shrb
imul
mov
ljmp
sbb
lds
nop
xor
imulb
call
push
loop
push
lret
inc
gs
aas
pop
xchg
test
enter
mov
sub
mov
mov
out
test
xchg
jnp
imul
loop
cmp
mov
cmc
sub
xchg
stos
xchg
jo
sub
push
jge
jle
cmpsb
rolb
scas
sub
pop
cltd
cs
mov
cwtl
shll
sub
xor
and
push
dec
stos
enter
fsts
dec
push
call
in
adc
cmpsb
insb
pop
xchg
imul
outsl
bound
push
into
cli
ror
fistpll
jne
mov
or
into
add
adcb
jg
inc
out
mov
outsb
rcll
pop
rcrb
dec
push
fcoml
adc
jmp
xorb
cwtl
test
cli
inc
inc
cmp
arpl
lret
mov
pop
addw
jg
addb
lods
ret
push
int
dec
scas
adc
fs
fwait
pop
cs
mov
mov
out
pop
dec
mov
jb
sub
add
imul
adc
sti
cltd
or
or
mov
ljmp
imul
call
mov
cltd
and
lcall
inc
sub
mov
enter
dec
inc
iret
sub
cs
call
xor
push
push
testl
in
andl
push
inc
testl
lds
out
xchg
gs
mov
roll
test
pusha
cld
jnp
das
lods
mov
call
imul
lret
cltd
dec
popa
sti
fldenv
lcall
ljmp
cmp
inc
xor
fildl
hlt
push
dec
popf
pop
icebp
mov
loope
mov
mov
jno
sub
adc
scas
mov
dec
dec
pop
cmc
std
push
rcrl
mov
sub
jle
mull
jnp
lea
mov
xchg
loopne
cmp
leave
arpl
jne
shlb
repnz
lret
push
outsb
pop
sbb
xor
mov
fbstp
adc
sbb
xchg
pop
xlat
mov
mov
in
inc
ret
in
sub
mov
lcall
pop
push
and
inc
jp
mov
cs
imul
ss
leave
jne
scas
orb
or
dec
sti
ret
jle
test
jbe
jns
rcrl
sub
imul
or
test
jns
int3
lods
pop
cmp
loopne
addr16
mov
sub
mov
mov
jle
ds
loop
cmp
fnstsw
push
pop
cmpsb
push
adc
movsl
test
sbb
jg
js
daa
stos
cmp
cmpl
lahf
add
pop
repz
sub
mov
fstpt
hlt
sub
sub
add
fadds
pop
jmp
leave
push
scas
in
fsubs
xor
pop
insb
outsl
jle
adc
pop
into
movnti
mov
loopne
mov
test
add
push
ret
stos
cs
nop
addb
hlt
xor
js
push
fcmovbe
call
adc
bound
inc
adc
loop
sbb
inc
cmp
xchg
xor
xor
mov
movsl
enter
dec
mov
fstl
int
push
cmpsb
jmp
xlat
sbbb
fsin
mov
pop
add
ret
dec
fwait
jg
je
call
dec
cwtl
or
dec
or
push
jo
cmp
push
daa
pop
les
inc
js
aas
mov
and
or
jno
sub
fisubrs
loope
cmp
nop
pop
jae
pop
inc
sbb
clc
sbb
push
ret
notb
pop
ljmp
fadds
fidivs
leave
or
inc
fldl
pop
movsb
mov
xchg
dec
push
push
insl
jg
les
cs
dec
or
jno
dec
ret
jns
sub
cmp
jbe
fsts
ja
test
xchg
stc
test
mov
js
js
outsl
lds
lret
pop
mov
mov
mov
js
popa
push
and
push
xchg
loopne
test
cld
iret
jbe
clc
lret
dec
or
sbbl
dec
mov
jmp
and
les
mov
ret
dec
ds
xchg
cmp
mov
pop
pop
popa
add
push
xchg
and
jns
mov
imul
popa
mov
in
dec
dec
ds
ljmp
rorl
ret
in
dec
dec
ds
addr16
dec
sahf
es
mov
or
lret
inc
fdivrs
clc
out
mov
es
stos
sub
repnz
or
mov
pop
xor
pop
iret
loop
fs
pushf
pop
dec
sbb
push
leave
jg
xchg
mov
shl
or
inc
mov
out
fld
sub
cmc
enter
pop
sub
mov
jecxz
fnstcw
add
mov
fsubs
enter
jb
popf
push
test
pusha
fdivrs
lds
and
lahf
mov
sbb
mov
adc
push
and
movsl
xchg
dec
mov
pop
test
add
clc
or
jbe
and
xchg
mov
dec
int3
les
sub
push
and
daa
fcomps
sub
data16
or
outsb
pop
pop
lds
adc
fcomps
adc
test
mov
lds
testb
ret
xchg
pop
out
sahf
and
sub
insl
test
js
repnz
jbe
xchg
in
xchg
fisttps
push
nop
jns
xchg
dec
stos
mov
aas
addl
ds
iret
mov
mov
fwait
pushaw
stos
je
or
adc
cmp
add
push
movsl
mov
mov
mov
popa
add
adc
out
adc
adcb
dec
mov
push
sbb
sub
stc
pop
enter
mov
push
mov
mov
stos
imul
cmp
inc
call
cmpsb
xor
push
outsb
adc
cmc
icebp
sub
xor
fildl
lret
aam
jg
std
call
lock
or
repz
push
push
insl
push
or
out
loop
sbb
shrl
sti
loop
stos
into
push
pop
mov
dec
leave
scas
push
outsl
mov
inc
pop
popa
loop
push
inc
jno
add
movsb
adc
ja
out
mov
dec
fwait
add
dec
push
pop
xlat
out
fdivr
mov
mov
pop
push
rclb
push
fcomp
jl
push
xor
push
mov
mov
and
mov
push
and
ret
xlat
push
dec
cli
lea
fwait
pop
dec
pop
pop
push
adc
test
outsl
popf
ljmp
pop
mov
mov
icebp
int3
lods
loope
fsubs
lds
pusha
cmp
int3
fsubs
cwtl
mov
pop
ret
mov
or
xchg
popf
cmpb
ret
jns
sub
push
pop
out
xchg
sbb
fwait
ret
mov
loopne
test
sti
jo
xor
dec
scas
xor
mov
xlat
and
aas
std
mov
xor
ret
cmpl
std
push
sub
inc
mov
sbb
pop
pop
sbb
push
loopne
xchg
es
push
mov
sti
mov
cmp
mov
add
repnz
lods
push
dec
xorl
movsb
jnp
lods
sti
and
sub
xlat
mov
xor
and
xchg
loop
mov
push
fisttps
cltd
xor
mov
sbb
outsl
pop
jbe
sbb
xchg
stc
inc
push
push
mov
arpl
inc
icebp
xchg
mov
dec
out
sbb
out
popa
mov
mov
xchg
repnz
cmp
jae
notb
ficoml
mov
cli
mov
push
ds
sub
dec
in
loope
and
xor
lret
clc
xlat
pop
mov
mov
sub
gs
xor
lcall
leave
in
pop
je
and
jl
cmpsl
jle
ficoms
push
in
xor
into
mov
into
enter
lods
mov
adc
inc
jns
inc
mov
xchg
les
rcrb
icebp
int
add
xchg
icebp
clc
into
push
dec
imul
pushw
pop
lahf
xor
ret
call
lock
adc
cld
lahf
in
pop
int3
sbb
jnp
dec
inc
lds
dec
sti
loope
loope
xlat
imul
xchg
dec
frstor
clc
push
arpl
sub
or
negl
jecxz
pop
nop
or
ds
ret
mov
mov
add
mov
cmp
mov
fists
fidivrl
outsb
mov
mov
in
fidivrl
test
pop
mov
or
test
jp
add
rcrb
xchg
inc
and
jno
mov
lods
fsub
rcll
leave
xor
inc
in
pop
pop
ljmp
adc
ds
in
mov
mov
addr16
sbb
and
ret
jne
or
pop
add
push
jp
push
das
repnz
mov
test
movsb
mov
inc
sarl
notl
je
push
xor
xchg
pop
ret
cmp
pop
in
das
dec
clc
pop
sbb
fs
notl
lcall
push
mov
xorb
lock
cwtl
cwtl
mov
push
fiaddl
scas
lcall
sarb
or
fs
test
int
xor
sub
test
mov
aad
aam
mov
mov
add
popfw
sub
in
adc
je
mov
or
pop
mov
cmp
cmpsb
daa
cltd
jle
daa
loopne
or
push
ret
sub
push
xchg
call
dec
or
pop
leave
xchg
movsb
arpl
test
add
in
and
ret
lds
mov
addr16
pop
into
lods
inc
pop
test
dec
into
lret
dec
daa
xchg
mov
adc
dec
in
test
iret
ds
pop
leave
adc
sti
add
sti
mov
and
pop
cwtl
push
or
fadd
or
or
adc
scas
inc
xor
mov
pop
pop
out
pop
out
mov
sub
add
jecxz
aas
inc
dec
jne
stc
mov
ret
dec
adc
int3
inc
ficoms
pop
popf
dec
cmp
inc
mov
roll
mov
popf
add
repnz
rorl
mov
xor
into
in
add
inc
leave
and
test
dec
adc
cltd
sbbl
enter
lds
imul
lock
sub
fsubs
xor
aad
or
mov
mov
daa
aad
push
in
xor
fisubrs
scas
das
fmul
sti
or
stos
adc
data16
sub
jne
cld
pop
jne
mov
insb
push
or
clc
jecxz
push
into
jle
adcb
ss
dec
push
nop
sbb
loop
add
push
inc
inc
dec
jne
sub
push
outsl
jbe
sub
adc
bound
or
mov
cmp
lret
movsb
fdivl
and
mov
pushf
cmpl
testb
cmp
lret
iret
int3
and
jno
pop
shr
mov
ss
stos
and
sbb
mov
arpl
fists
jne
mov
int3
in
les
cmc
push
cmp
sbb
cltd
xchg
dec
imul
add
push
sub
xor
pop
enter
pop
pop
mov
js
cmp
xchg
cmpsb
cmp
call
in
lods
sbb
scas
fldt
in
arpl
or
push
fcmovb
jbe
jle
dec
nop
fdivrs
cwtl
inc
std
pushf
fmuls
jbe
mov
std
mov
cld
mov
adc
inc
inc
or
pop
inc
enter
lods
pop
sub
nop
pop
jg
inc
jp
leave
lods
fdivrl
sbb
cmp
in
orb
ret
add
mov
pop
bound
push
cmp
clc
addr16
ds
in
mov
movsl
add
sub
out
xchg
lret
sti
inc
lcall
push
dec
lcall
dec
and
mov
cld
mov
and
sub
inc
mov
outsl
push
je
rorl
in
movsb
call
gs
fidivrl
add
movsb
pop
movsl
or
icebp
int
je
cltd
or
push
cli
mov
je
push
push
xlat
cmc
out
mov
pop
orb
push
sub
adc
mov
out
ficoml
cwtl
mov
xor
push
mov
popa
xorl
jle
stc
mov
sbb
mov
mov
mov
aam
and
insb
cs
xor
or
add
stos
mov
enter
push
popf
and
dec
pop
mov
notl
test
inc
xchg
sub
outsb
movsb
aam
jmp
nop
xchg
cltd
les
inc
leave
sbb
mov
mov
fs
push
cs
adc
jno
push
lret
and
scas
adc
xchg
mov
fdivrs
bound
sti
adc
xchg
orb
xchg
inc
inc
les
pusha
sbb
out
mov
fadds
in
sbb
adc
es
add
xchg
lods
leave
ret
add
inc
jae
xor
mov
add
stos
jns
nop
clc
aad
outsb
mov
xchg
adcb
shl
int
sub
ss
jb,pt
loop
hlt
insl
push
mov
push
test
xchg
test
pushf
or
lcall
lea
xchg
loope
or
out
sub
lods
out
repnz
push
mov
and
fimull
xchg
add
jne
cwtl
and
or
ret
inc
sbb
popa
lret
mov
xor
sbb
inc
jb
hlt
mov
sub
xchg
leave
in
jae
adc
sahf
adc
jno
jmp
and
cmpsl
jae
mov
dec
adc
xor
dec
jle
pushf
imul
lahf
sbb
popf
add
adc
and
cmpsl
xor
jae
jp
sub
sbb
xlat
and
dec
sbb
in
and
dec
inc
sahf
push
xor
stos
test
xor
push
cmpsl
cli
stos
or
jle
ficoms
rorl
ret
out
inc
xchg
sub
mov
inc
mov
data16
movsl
adc
pusha
add
imul
nop
cmp
mov
push
cmp
pop
ss
lea
popf
jne
cwtl
xor
jecxz
dec
push
das
ja
call
xchg
ret
mov
outsl
ret
pop
jge
je
mov
mov
ror
xchg
sub
into
jl
jnp
cmpsb
jno
sub
test
push
cmp
stc
jae
jnp
pop
pop
popa
outsl
mov
fucom
mov
sbb
pop
rol
leave
push
inc
dec
ret
push
das
or
inc
pop
shrl
sub
push
iret
sub
lret
fs
sub
pop
icebp
mov
dec
jo
add
cld
stos
or
clc
sti
pop
push
or
inc
adc
and
ja
mov
push
imul
push
stc
xor
sub
push
mov
adc
cld
adc
xor
fwait
scas
jle
cmp
loopne
or
nop
dec
mov
push
call
test
imul
push
jle
cmp
and
and
cmp
scas
mov
sbb
loopne
pop
add
fidivrs
xor
mov
nop
es
ss
xchg
add
fisubl
aam
js
jge
or
inc
sbb
cmpsl
adc
ss
sub
bound
scas
roll
xchg
cmp
push
mov
sbb
or
jbe
enter
ljmp
das
lret
push
ds
sbbb
push
clc
aad
xor
pop
lods
inc
pop
and
stos
jb
jae
pop
mov
cmp
fisubrl
lods
sub
xlat
out
js
pop
aaa
ficoms
mov
or
sarb
inc
les
mov
fstpl
icebp
jmp
push
mov
aas
gs
push
adc
hlt
std
sar
mov
and
dec
ds
xchg
rcll
sub
test
xor
test
add
out
cmpsb
and
sub
pusha
outsl
sub
push
adc
jg
inc
jne
pop
lcall
fcmovnb
sbb
stc
outsl
add
pusha
mov
punpckhwd
push
call
xchg
cmp
pop
jg
cwtl
cs
sbb
push
lds
mov
mov
dec
xor
in
inc
jecxz
pop
cmpsb
dec
inc
mov
clc
jg
aam
leave
decb
dec
out
fsubrs
jns
bound
je,pn
inc
test
mov
pushl
in
xlat
pop
inc
mov
push
je
sub
shlb
push
push
loop
ds
out
and
nop
sub
and
out
mov
mov
mov
repnz
xor
es
sti
bnd
dec
fstps
lahf
js
rol
jl
aaa
add
je
inc
orl
data16
lcall
mov
mov
push
add
adc
lcall
dec
dec
jp
mov
lock
push
add
and
imul
jae
fsts
dec
pop
loop
sub
jg
xor
mov
jae
outsl
mov
jge
sbb
nop
xor
ret
cld
popa
pop
fmull
call
scas
cmp
or
ret
push
ja
enter
cmp
popa
inc
jae
xchg
out
pop
mov
popa
pusha
popf
js
mov
mov
cltd
xchg
sub
dec
inc
ds
or
daa
mov
cmpb
data16
adc
push
es
or
into
ds
push
sbb
pushf
ror
shrb
js
jbe
jo
xor
mov
movsl
mov
dec
and
jb
ljmp
xchg
leave
xor
mov
mov
popf
mov
outsl
rcrb
mov
push
push
inc
imul
mov
pop
mov
and
push
les
and
out
sbb
jle
lret
rorl
dec
fdivs
addr16
call
aaa
sub
push
cli
fsubrs
data16
xor
fchs
inc
adc
out
sub
test
xchg
cmpsb
cmp
mov
pop
jp
stos
push
les
mov
cs
addr16
mov
test
sbb
sbb
jne
cmp
retw
daa
dec
add
mov
mov
and
in
rclb
stos
stos
push
add
mov
jns
imul
inc
stos
dec
shl
in
adc
incl
mov
push
dec
dec
jmp
mov
and
test
imulb
or
lods
inc
cs
jbe
mov
inc
es
fs
cmp
gs
clc
fcoml
sub
mov
inc
add
movsl
dec
fdivrs
inc
pusha
cltd
out
jmp
mov
xchg
inc
sub
jg
pusha
jno
lcall
fs
lret
sub
leave
fldl
mov
cmc
ficoml
in
or
mov
dec
int
call
lea
popf
mov
es
jbe
xchg
lcall
xor
mov
sub
fcomps
fnstcw
mov
push
clc
pushf
test
sahf
pop
sub
push
ljmp
inc
mov
mov
push
ja
mov
out
sub
sbb
mull
xchg
adc
enter
iret
mov
popa
sub
sbb
inc
stos
push
pusha
ffreep
xchg
jbe
add
js
fdivs
icebp
sahf
scas
mov
cmp
loop
dec
jmp
fsubrl
test
jp
push
test
xor
lret
popf
xor
rcll
jmp
in
add
aam
sbb
add
clc
arpl
das
pop
pushf
pop
jb
push
sub
pop
jle
fs
mov
sbb
mov
xchg
in
fmuls
nop
pop
adc
in
lods
cmp
lods
jmp
pushf
mov
addr16
rcrl
mov
and
lret
in
pop
xor
das
cwtl
and
xchg
or
stos
push
ljmp
pop
pusha
xlat
dec
or
jno
push
subl
cmovb
push
in
sub
lret
mov
sub
jp
push
pop
cli
sbb
stos
sbb
test
adc
aad
lods
movsl
mov
mov
pop
scas
lods
inc
std
jo
mov
imul
add
pop
popl
dec
pop
fnstcw
lods
std
cld
test
inc
push
bound
mov
fidivs
sbb
das
loopne
xchg
js
add
and
jnp
mov
mov
mov
addr16
in
and
cwtl
cmp
or
rcrb
fcoms
fisttps
or
cmp
mov
xchg
mov
inc
jo
ficomps
clc
jl
xor
mov
add
popl
sbb
mov
repz
aam
push
push
jmp
lret
lea
push
popf
xor
aas
mov
xor
bound
lea
int
sbb
cmp
nop
and
cmp
cwtl
dec
sub
lcall
addr16
fldt
ss
inc
repz
mov
ret
dec
jle
dec
xchg
push
pop
mov
and
sub
mov
out
pop
outsb
adc
xchg
push
add
mov
fwait
gs
mov
popf
pop
popa
sub
jle
xchg
je
into
cmpsb
out
lcall
ja
testb
outsl
mov
sbb
push
inc
jne
daa
aad
les
xlat
cmp
int
test
jns
adc
sbb
mov
lods
bound
mov
ss
negb
lahf
mov
sti
pop
leave
loopne
pop
shrb
inc
lahf
xor
jl
or
aas
dec
outsb
stc
jnp
shlb
arpl
in
repz
popa
outsl
int3
call
jmp
push
and
imul
and
test
ret
fwait
cmp
rorl
ret
outsb
mov
xchg
mov
xchg
xchg
xor
mov
mov
or
or
js
and
mov
int3
cmp
push
loopne
test
dec
add
pop
xchg
jl
stos
aaa
push
cmp
loop
jecxz
rorb
imul
loopne
ja
js
pop
stos
das
mov
scas
or
imul
dec
mov
pop
and
and
sub
push
clc
xchg
cmp
jns
sbb
ljmp
das
pop
mov
cwtl
and
sub
icebp
mov
sarl
inc
push
lcall
or
in
cld
adc
add
sbb
sbb
push
pop
adc
loope
xor
jle
sbb
pop
enter
out
mov
jo
pop
xlat
xchg
jb
xor
jne
addr16
xor
sub
mov
int
iret
movsl
dec
xor
enter
xchg
sub
fwait
sbb
ja
loopne
pop
mov
pop
out
and
cmpsb
or
sahf
mov
pop
cmpsb
sbb
mov
repz
dec
or
inc
mov
adc
jg
sbb
test
sub
daa
mov
imul
dec
testl
or
jp
subb
xchg
pop
mov
in
pop
xchg
repnz
xlat
xor
xor
ss
loopne
lret
jbe
cld
loope
pop
out
adc
ljmp
orb
push
outsl
xor
sbb
cmp
jne
jno
ret
dec
jle
setb
pop
sub
push
mov
xor
call
adc
cwtl
and
stos
divb
std
test
mov
cmpsl
sub
push
dec
mov
imul
ret
adc
inc
frstor
push
repnz
or
or
stos
push
hlt
stos
inc
sbb
add
mov
pusha
notb
pushf
xchg
inc
arpl
mul
in
pop
out
das
and
movsb
repnz
jb
test
or
out
pop
out
dec
jge
js
pop
outsb
es
fidivrl
in
xchg
arpl
lds
jnp
popa
dec
or
cli
inc
xchg
and
clc
mov
xchg
dec
addl
and
movsb
mov
inc
popa
pop
jp
pop
inc
dec
pop
aas
rcrl
dec
aas
bound
xrelease
xchg
test
sbb
push
inc
mov
and
cmp
pop
in
cmp
xor
lret
pop
sti
push
pop
xor
mov
xchg
js
sub
ret
mov
push
mov
jns
addl
mov
push
push
jg
cmp
mov
fimull
shlb
pop
push
mov
jmp
into
ret
mov
popf
xchg
push
xchg
fwait
cmp
push
jns
out
xor
dec
rclb
pop
jmp
out
daa
cs
aaa
push
and
pop
cmpsl
insb
fadd
jmp
sbb
aam
push
aam
adc
xchg
xor
xchg
and
or
and
inc
ljmp
xchg
pop
dec
adc
test
cld
mov
std
mov
dec
cld
dec
jno
cmp
cmpsl
jae
ds
insl
test
sub
popf
lods
sbb
adc
addl
fistpl
daa
cwtl
cli
add
in
stc
dec
aas
adc
or
je
jmp
or
mov
push
das
jle
adc
mov
imull
rcrl
or
xchg
xor
cmc
imul
rcr
aaa
addr16
out
aad
jo
push
in
dec
dec
jne
push
mov
sahf
xchg
aaa
subb
xchg
sub
rcrl
bound
lods
jp
fsubrs
aam
and
scas
leave
push
arpl
xor
mov
clc
add
ss
jb
incb
test
mov
fmull
leave
mov
xchg
or
pop
pop
les
mov
cmp
pop
scas
mov
adc
js
and
jge
ljmp
cltd
inc
in
push
mov
lea
jecxz
inc
inc
inc
jne
in
jne
push
mov
dec
cmp
jge
push
or
xorl
jle
add
pop
mov
cwtl
out
adc
outsl
ss
movsl
push
push
jb
fistpll
test
ja
out
xchg
pop
dec
std
xchg
imul
or
ljmp
cmpsb
mov
inc
and
push
in
xchg
dec
add
mov
cmpsl
cs
rolb
adc
push
fadds
pushf
mov
xor
notl
loope
lds
mov
out
xor
sub
test
sub
int3
cmpsb
jne
jb
push
add
push
movsb
aam
popa
and
icebp
mov
pop
out
push
imul
add
imul
jno
push
xor
out
inc
loop
dec
jp
push
cld
stos
push
xchg
inc
fucompp
adc
mov
inc
cli
arpl
loop
pop
or
int
into
aam
inc
jg
lods
xor
sub
sahf
test
add
sub
cltd
xor
sub
js
xor
cmp
insb
idivb
lret
add
addb
jge
cmp
into
inc
imul
and
mov
sbb
and
jmp
lods
mov
stc
and
jle
fidivs
push
push
fidivrs
lods
out
add
cld
pop
imul
mov
sbbb
int3
push
adc
mov
std
std
cwtl
jp
inc
sbb
pop
dec
cltd
mov
pop
fdivl
das
jnp
adc
faddl
inc
bnd
push
dec
fs
dec
mov
pop
ds
push
adc
imul
push
test
push
add
ds
aaa
call
mov
adc
imul
add
push
push
mov
sbb
aas
xchg
jns
idivl
jb
inc
sbb
call
inc
push
add
fidivrl
arpl
xor
call
adc
adc
lret
jecxz
xchg
sub
jl
into
ja
add
sbb
stos
scas
cmp
mov
pop
out
and
sbb
pop
inc
add
popa
lahf
pop
push
jl
sahf
or
adc
ds
nop
cmp
pop
sbb
sub
test
adc
dec
outsl
fcmovbe
ja
lods
ror
sar
rcr
mov
adc
push
dec
pop
mov
ss
push
outsl
jmp
cltd
xchg
inc
cmp
dec
cs
pusha
aam
sti
das
rclb
mov
les
xchg
int3
es
mov
mov
jne
insb
mov
add
ret
insb
or
or
jle
les
jp
je
sub
rcrb
ret
imul
and
repz
push
outsb
inc
inc
push
int3
inc
adc
sub
out
xor
arpl
sahf
dec
and
fwait
sub
enter
push
imul
sbb
mov
out
cmp
sbb
into
cwtd
ljmp
ret
sti
jge
rcll
add
scas
int3
pop
aad
lcall
jnp
pop
xchg
mov
xor
movsb
sahf
mov
cmp
or
mov
push
mov
out
scas
stc
repnz
aas
xor
movsb
or
fcmovb
xchg
ret
mov
sub
xchg
outsb
dec
clc
jge
lcall
leave
sahf
loope
fbld
sbb
in
jns
and
lret
ds
cmpsl
ss
roll
xor
cmc
repnz
add
pop
vfmaddss
out
imul
dec
les
nop
pop
icebp
cltd
xchg
gs
insb
push
faddl
ret
xor
sbb
scas
in
lds
pop
sub
pop
xor
es
out
rclb
and
jmp
push
dec
jle
ss
movsl
inc
push
std
and
mov
jnp
fimuls
xlat
xchg
sbbb
loop
mov
xchg
xlat
lods
sub
lods
fwait
xchg
loope
cmp
mov
dec
jb
dec
xchg
cmp
inc
add
out
add
xchg
sldt
add
add
pusha
or
je
call
pop
add
cmpb
jne
popa
jmp
fldt
cmp
add
pop
and
xor
mov
add
cmp
jne
movzwl
add
mov
add
cmp
je
sub
jmp
mov
mov
add
mov
add
jmp
mov
mov
push
push
call
call
pop
sub
mov
sub
mov
movb
popa
jmp
insb
sbb
adc
test
pusha
xor
mov
shr
je
pop
cs
or
sbb
adc
test
pusha
xor
mov
shr
je
pop
cs
or
sbb
adc
test
pusha
xor
mov
shr
je
pop
cs
or
sbb
and
jl
sub
mov
mov
inc
mov
inc
mov
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
jae
xor
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
je
push
sub
mov
pop
mov
inc
mov
jmp
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
sub
mov
jne
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
push
mov
sub
rep
pop
jmp
dec
shl
mov
inc
mov
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
cmp
jae
cmp
jb
inc
push
mov
sub
rep
pop
jmp
cmp
ja
add
push
mov
sub
rep
pop
jmp
mov
inc
xor
shr
je
adc
mov
push
mov
sub
rep
pop
mov
jmp
sub
mov
popa
ret
jmp
jmp
add
stos
into
add
scas
clc
loopne
xchg
xchg
ja
and
sbb
and
add
cld
jge
cmp
out
aaa
xor
inc
cwtl
ret
nop
xor
or
stc
jno
or
jo
xchg
adc
adc
cs
lock
push
fs
pop
pusha
push
popa
and
and
jb
jo
fs
je
xchg
fisttpl
jmp
jl
xchg
inc
aad
sbb
fsubl
std
pop
inc
adc
adc
loope
scas
xchg
call
in
mov
xor
jmp
mov
or
cmpl
or
call
mov
inc
and
adc
push
push
push
push
call
lcall
or
aad
jmp
hlt
add
in
add
mov
pop
adcl
mov
movl
inc
mov
aas
cmpl
lahf
and
int3
orl
inc
adc
loope
fsubl
mov
inc
add
ja
sbb
pop
or
movl
mov
adc
mov
push
jecxz
test
jne
mov
mov
mov
rcl
stc
ja
pusha
scas
ret
inc
inc
movsb
dec
mov
stc
inc
rcll
mov
aam
inc
cmp
pop
pop
ja
sub
addr16
jmp
adc
jne
sbb
push
sarb
scas
sbb
mov
pop
int3
cmpsb
dec
sbb
add
xor
add
divb
jo
int3
daa
mov
sbb
push
test
cmpsb
fdivrs
push
call
fcoms
ret
push
testb
add
add
pcmpeqw
mov
rol
xor
and
rorl
roll
cli
add
push
or
mov
add
mov
cmp
je
fstpl
add
adc
movb
aaa
jg,pt
aaa
sub
mov
lret
push
call
movsl
arpl
jmp
jp
fistpll
and
inc
out
lea
add
dec
cmpl
add
out
add
js
hlt
lret
cmp
pop
je
test
jge
mov
popa
shlb
add
out
mov
jl
mov
andb
fimull
or
sub
fadds
pop
test
je
mov
xor
dec
cmp
jle
sub
push
pop
pop
pop
pop
mov
pop
mov
push
add
jne
pushf
adc
and
jmp
cmpb
je
test
xor
add
jbe
add
dec
adc
inc
popl
pop
insl
add
jge
fsubs
clc
int
loope
inc
int3
jge
jae
fidivs
pop
or
dec
cld
inc
rep
jmp
lret
pop
cltd
insl
adc
or
dec
shll
or
push
shl
add
pop
sub
fildl
mov
cmp
arpl
or
ja
shr
repnz
and
or
or
jmp
ret
or
adc
or
dec
and
adc
pop
lock
lea
jb
or
shlb
stos
and
clc
out
lea
adc
cmpb
mov
stos
cmp
popa
shll
mov
decb
inc
dec
jne
mov
mov
icebp
sub
add
mov
xchg
jg
push
shll
cs
es
jmp
addl
adc
dec
inc
adc
inc
dec
ljmp
jmp
pop
sub
add
sbb
arpl
push
add
std
xor
fsubr
or
in
fmull
push
mov
xor
cmpb
pop
add
adc
clc
cmp
inc
ret
cmp
or
stos
adc
push
dec
in
in
nop
push
inc
push
lds
xchg
push
rorb
inc
push
or
jne
adc
adc
repz
or
pop
iret
in
or
mov
xor
add
in
decl
xor
adc
icebp
shlb
or
or
sub
movaps
jle
xor
roll
aas
sbb
xor
xlat
inc
in
mov
inc
sbb
jmp
les
dec
and
adc
cmpsl
push
push
mov
adc
push
bound
mov
or
xchg
inc
push
mov
add
rcr
fisubrl
push
jmp
pop
leave
mov
or
add
les
add
sub
and
mov
adc
mov
ja
adc
push
loope
add
repz
sub
das
cli
cltd
add
xchg
sti
mov
dec
pop
enter
or
and
inc
sub
dec
sbb
add
mov
add
jmp
mov
popa
mov
mov
inc
adc
mov
xor
fistps
inc
or
or
fildl
jnp
movsl
fs
aad
pusha
xchg
xor
jecxz
cmpsl
mov
add
out
xor
or
adcl
pop
or
mov
jp
stos
mov
xchg
cli
push
shll
dec
add
test
xor
cwtl
and
lea
pop
adc
scas
lock
bound
push
pop
mov
mov
cwtl
xchg
inc
adc
pop
pop
mov
leave
sbb
push
add
mov
pusha
and
ret
push
punpckhdq
jmp
test
std
fadds
jle
in
cld
out
push
mov
push
jmp
test
or
call
xchg
pop
sub
jnp
call
inc
adc
popa
fs
push
add
mov
test
add
sub
xor
cmp
sarl
cmp
pusha
push
xchg
add
sbb
enter
ds
arpl
les
jp
add
daa
jmp
scas
loopne
inc
and
add
pop
ret
insl
cmpsl
cmp
push
faddl
mov
xchg
insl
push
mov
sub
inc
xor
push
inc
sub
add
push
imul
mov
hlt
std
gs
out
xchg
sbb
cmp
jp
ds
mov
sub
and
jecxz
jmp
add
lds
add
mov
mov
pop
test
sub
mov
push
stos
add
add
lock
inc
call
mov
js
xchg
mov
lods
sbb
enter
mov
jno
sbb
sub
jo
enter
add
cmp
aad
hlt
and
sahf
sbb
and
cmp
insl
xor
sub
mov
add
push
mov
lods
sbb
stc
pop
inc
out
clc
call
out
leave
lock
mov
pusha
cwtl
cmp
sbb
jne
sub
test
popa
sbb
sub
inc
push
jg
pop
inc
jne
and
data16
push
push
add
push
shrl
sbb
pop
imul
lds
push
adc
xchg
dec
add
add
cmc
jp
out
ret
cmp
push
add
push
fbld
lods
and
sub
ficomps
xor
cmpsb
insl
add
lds
sub
add
fwait
jno
inc
test
add
loop
xchg
rorb
out
mov
frstor
add
inc
sahf
data16
sbb
mov
pop
sti
sahf
cmpsb
sbb
inc
and
test
pop
adc
pop
or
in
fildll
and
add
pop
push
dec
mov
jb
stc
add
jo
dec
mov
mov
jl
adc
cltd
or
icebp
pushf
fadds
lods
stos
xor
and
lahf
icebp
xchg
sub
or
mov
mov
shlb
jge
stos
rorl
idiv
inc
adc
test
and
and
popa
dec
sub
shll
jns
jnp
inc
call
sbb
in
test
sub
and
push
sub
add
jge
jne
pop
and
push
mov
mov
clc
jle
jnp
add
add
mov
loope
frstor
stos
in
imul
ds
ds
mov
jp
enter
pop
loopew
adc
outsb
add
mov
fmull
xlat
add
xchg
push
cmpl
dec
xor
call
movsb
out
inc
les
inc
push
insl
jno
rcll
clc
sub
dec
sub
push
stos
std
or
cwtl
mov
xchg
loopne
mov
les
aas
pop
or
icebp
lock
cmp
add
fbld
stc
sub
sbb
out
add
pop
test
insb
jle
jno
xchg
push
call
pop
push
negb
out
pop
add
mov
mov
int3
mov
dec
outsl
cmc
adc
sub
jge
push
add
icebp
adc
cmp
sub
adc
jnp
sub
adc
push
sub
and
or
popf
out
xor
inc
jg
fcmovnbe
add
leave
pop
int
jb
sbb
es
fwait
mov
pop
add
mov
movsl
pop
mov
adc
bound
dec
out
add
inc
in
cmpsl
clc
mov
jns
or
in
jns
add
les
adc
in
sub
cmp
pusha
pop
and
cmp
outsb
xchg
or
inc
orl
dec
pop
fldt
testb
loopne
cmpsl
jp
mov
es
test
xor
sub
mov
add
mov
loopne
pusha
ljmp
repnz
mov
xchg
and
mov
call
push
push
test
lds
mov
adc
out
cld
adc
jbe
add
or
add
adc
lods
xor
mov
and
jl
mov
push
cmc
dec
scas
inc
dec
pop
sub
popa
sbb
sahf
imul
adc
call
dec
sub
gs
jmp
out
push
cli
mov
adc
jno
mov
mov
es
int3
fs
and
movl
push
inc
and
xchg
into
and
fcomp
rcrb
mov
sub
jbe
lods
ss
stos
and
cmp
flds
adc
xchg
inc
cmp
pop
rcrl
inc
es
shll
testb
mov
lods
cmpsl
mov
xorb
or
in
add
adc
lods
jmp
test
ds
inc
xchg
in
xor
add
cmpsl
mov
dec
pop
jne
sbb
insl
or
gs
add
int3
xorl
cmpsl
repnz
add
xchg
dec
xchg
pusha
cmp
mov
pop
std
xor
xor
pushf
push
les
cltd
push
mov
pusha
call
push
es
push
cwtl
adc
int
xchg
push
imul
pop
dec
jle
mov
fstl
dec
add
mov
cld
mov
jno
aaa
dec
mov
bound
add
mov
mov
pop
inc
cmp
push
sbb
es
xchg
out
sbb
cwtl
cmp
mov
insl
push
bound
arpl
push
inc
outsl
test
seta
adc
mov
jns
fiaddl
test
pop
cmpsb
lret
lods
push
ds
pop
or
add
pop
shl
shll
sub
lods
test
mov
ss
rcrl
jl
hlt
je
mov
loopne
icebp
mov
les
add
incb
pop
nop
int3
cwtl
dec
aas
int3
xor
add
pop
mov
enter
shrb
add
pop
adc
adc
aad
je
adc
pop
mov
sub
loop
cmc
out
add
inc
pusha
or
mov
add
xchg
and
adc
xlat
push
insl
cmp
pop
testl
xor
shlb
xor
or
add
add
push
imul
add
sbb
je
les
xor
cmp
mov
test
js
push
mov
mov
dec
std
jo
xchg
add
push
and
xchg
repz
subb
fiaddl
flds
shlb
jno
add
mov
xor
mov
lahf
push
cmp
push
sbb
pop
lcall
dec
inc
and
mulb
sbb
mov
add
xor
outsb
mov
xchg
add
xchg
adc
cmp
cwtl
push
packssdw
adc
stc
flds
insl
adc
clc
mov
dec
es
add
lcall
outsb
cmp
outsl
xlat
inc
cwtl
call
add
sub
test
sub
cmpsb
pop
pop
leave
js
xchg
int3
mov
test
xchg
mov
popa
sub
mov
inc
sbb
out
sbb
sbb
les
sbb
jb
mov
incb
and
push
test
in
dec
or
pop
xor
gs
adcb
loopne
test
xchg
shll
negb
adc
filds
std
adc
dec
push
adc
jmp
xchg
int3
pop
cltd
data16
dec
jae
rep
cwtl
add
aad
lea
addl
lret
icebp
inc
jp
add
inc
jno
push
mov
repz
lahf
push
mov
add
push
icebp
push
pusha
xchg
adc
js
add
xor
dec
pop
rol
add
lods
push
mov
call
add
clc
movsb
fbld
sbb
add
int
insb
rol
bound
repnz
inc
fnsave
sbb
jo
les
push
mov
pop
lea
mov
mov
add
push
ret
cmp
loope
scas
fisubl
mov
xor
dec
popa
in
xchg
add
stc
push
clc
rcrb
xor
mov
jne
mov
out
ds
add
dec
dec
dec
aam
bound
aad
in
add
pusha
sbb
pop
outsl
push
ljmp
imul
dec
add
push
jb
jge
add
xor
add
push
add
pop
jle
adc
cs
adc
add
adc
std
ja
mov
xor
dec
xchg
scas
shlb
and
js
sarl
pop
icebp
adc
push
add
jl
int
sar
add
ficoml
rcrl
xor
add
out
rcrl
jle
lret
or
addl
xlat
jns
cld
xor
movsb
inc
pop
xor
push
test
add
inc
sarb
leave
jge
add
mov
xor
mov
pop
decl
scas
jo
mov
adc
add
cli
jns
les
cmp
mov
aaa
push
mov
add
cltd
adc
add
xorl
mov
cld
lcall
add
xlat
add
out
xor
or
add
imul
jl
enter
popf
loopne
imul
inc
xor
dec
xor
jb
cld
pop
or
sbb
xchg
hlt
mov
lcall
sbb
xor
mov
push
jno
xor
add
inc
inc
ds
push
push
push
mov
adcl
sbb
and
adc
in
shll
fldenv
stos
add
sbb
sbb
negb
dec
mov
add
movsl
or
and
adc
stc
comiss
in
imul
nop
xchg
adc
dec
stos
sahf
push
inc
test
dec
push
push
aas
and
shlb
add
outsb
push
adc
mov
fs
scas
out
loop
in
ljmp
xchg
dec
sbb
mov
sbb
sbb
and
inc
cmp
orl
pusha
add
xchg
mov
mov
enter
inc
and
pusha
cmpb
push
or
sbb
or
and
mov
sarb
xlat
add
rorb
sub
xchg
or
cmpsl
sub
ret
jmp
fcmovb
shlb
pop
pop
or
xor
movsl
outsb
push
pop
insl
jl
loop
call
fstps
cmpsl
push
sbb
out
adcl
inc
mov
pushf
mov
mov
scas
push
push
js
cmc
outsb
icebp
add
negl
imul
mov
xchg
and
hlt
or
sbb
sub
xor
add
inc
fucom
jne
les
fdivrp
cmp
add
ficompl
mov
insl
pop
dec
loope
adc
push
jmp
jne
jl
xor
and
jmp
pop
in
mov
repz
xor
and
nop
mov
adc
inc
mov
fsubrl
xor
sub
push
sbb
lret
imul
scas
sti
add
dec
jmp
adc
sahf
push
xchg
les
imul
inc
jb
stc
scas
sub
aad
jp
neg
hlt
jne
add
fwait
decb
add
sbb
jo
stos
mov
int3
adcb
add
lock
loope
pop
adc
jecxz
inc
pushf
pushf
cmc
and
push
push
xchg
div
pop
sbb
jnp
imul
gs
pushl
and
jmp
xor
fs
pop
add
cmp
and
and
int
in
xor
push
adc
add
push
sub
out
push
jp
out
mov
push
push
inc
ficompl
inc
jp
cmc
xchg
enter
out
push
rcl
pop
iret
out
add
cmp
add
dec
add
jge
push
xchg
pushf
mov
add
dec
xchg
push
mov
out
lret
push
ja
ret
lret
pop
jge
or
bound
ret
jmp
leave
lret
pushf
inc
or
and
vaddpd
jle
shlb
cmp
add
push
popa
add
xor
inc
cltd
add
adc
mov
mov
xor
stc
daa
andl
dec
inc
lcall
je
mov
sbb
stos
repz
rolb
insl
lods
stc
and
and
dec
mov
xchg
rcrb
add
cmp
inc
repnz
and
call
mov
xchg
jo
sbb
pop
xor
fcmovne
inc
inc
loopne
lret
add
dec
fbld
insb
adc
outsb
test
int3
sub
and
stos
ret
adc
push
pop
xchg
call
sub
jmp
jmp
ds
ljmp
add
sub
jne
stos
pop
mov
and
add
inc
sti
std
xor
fs
fcoms
mov
sub
cmc
shlb
pop
ret
and
fistpll
push
sbb
jbe
ds
fcmovu
cmp
shl
jmp
xchg
and
adc
cmp
mov
fsubl
dec
mov
jl
call
pop
mov
movsl
jb
push
xor
adc
mov
notl
jl
addl
fbld
and
cld
fcoms
pop
add
je
in
sub
adc
mov
inc
xchg
xor
out
cmp
ja
or
pop
mov
in
bound
out
es
adcb
fsub
dec
inc
xor
push
sbb
adc
mov
add
js
pusha
adc
inc
add
sbb
fcmovb
cmp
jmp
fisttpll
push
cmc
movsb
dec
dec
add
aas
popa
cmp
jecxz
add
in
pusha
sub
fldl
cmp
xchg
add
jbe
sbb
mov
mov
stos
pop
adc
jo
add
sbb
push
outsl
xorb
andl
mov
mov
mov
loope
add
xchg
or
pop
push
scas
lret
cmp
push
stos
xchg
mov
add
outsb
push
ret
jne
fsts
imul
hlt
sbb
popa
loope
mov
jl
fcom
in
xor
out
pusha
fwait
cmc
cltd
mov
sete
cmp
data16
mov
ljmp
shll
loope
jmp
clc
stos
lock
mov
push
pop
js
fs
cmp
add
iret
data16
sub
js
mov
jmp
and
pop
push
jmp
fisttpl
add
repnz
sub
iret
sub
cmp
inc
inc
pop
fwait
mov
clc
xor
aaa
add
lret
bound
sbb
add
xchg
sub
xchg
sahf
loope
add
fists
mov
sub
jo
sbb
sbb
and
jmp
lds
adc
fs
rcrb
aas
add
jns
xor
sbb
inc
fmull
out
jge
add
je
mov
xor
and
stos
in
cmp
pop
add
push
dec
xor
lods
add
pop
sbbl
sbb
scas
rcrb
outsb
sbb
je
call
dec
and
leave
mov
ss
inc
sarl
add
mov
fsubs
insb
add
mov
out
cmp
inc
cmpb
xchg
out
mov
test
cltd
aam
xor
xor
enter
mov
mov
xchg
in
mov
and
daa
mov
cmp
cld
scas
je
adc
daa
mov
add
jge
shlb
pushf
cmc
adc
das
jl
sub
repnz
inc
aam
pop
iret
cltd
sbb
pusha
imul
enter
pop
pop
jmp
mov
push
je
sbb
inc
sub
je
dec
icebp
sbb
imul
fists
rcr
inc
cmp
insb
xorb
movsb
je
cvtpi2ps
adcl
cs
mov
add
mov
pop
cmp
mov
test
adc
daa
push
jo
pop
and
aaa
push
inc
and
mov
add
lcall
mov
enter
ret
icebp
stc
xchg
jnp
push
xor
jae
or
dec
jb
sbb
push
pop
push
push
loopne
lods
loopne
dec
and
adc
insb
xorb
aaa
inc
xchg
jp
shlb
mov
mov
dec
xchg
and
adc
call
fmull
mov
iret
inc
mov
inc
fcomps
jle
shrl
jnp
mov
pop
push
cld
inc
sbb
data16
add
add
es
sub
or
in
les
pusha
mov
xor
add
jns
add
mov
nop
inc
notb
jae
mov
inc
mov
nop
inc
add
mov
jns
jle
xor
adcb
mov
adc
inc
les
sub
int
sbb
in
lret
mov
inc
in
daa
testl
pushf
fsubs
insb
in
xor
jne
lahf
xor
and
ret
mov
popf
and
ficompl
je
sahf
imul
adc
mov
cwtl
inc
sarb
inc
pop
mov
or
les
dec
fisttps
es
and
sub
pusha
and
mov
jns
and
adc
daa
iret
mov
inc
inc
inc
repnz
aas
add
out
je
mov
movsb
and
push
push
pop
adc
mov
mov
sbb
hlt
pop
stc
dec
stos
pop
movsl
or
mov
inc
cmp
mov
add
jp
stos
adc
imul
inc
fadds
popa
jne
add
stos
js
fstpl
inc
mov
in
push
not
mov
enter
inc
mov
imul
pop
stos
xchg
add
clc
sbb
xor
sub
or
leave
sahf
subl
sub
lret
and
pusha
stc
or
test
and
xchg
or
sub
adc
test
add
jmp
cmp
and
mov
mov
addr16
mov
js
dec
dec
roll
lods
lock
out
in
adc
clc
iret
outsl
nop
clc
sahf
dec
mov
outsb
loopne
and
sbb
int
cmp
and
sbb
and
test
das
movsb
adc
sbb
movsl
jo
popa
les
xor
cld
cmp
dec
imul
jg
pusha
pop
leave
xchg
movsb
xchg
push
shrb
lret
mov
jecxz
and
push
mov
ret
pop
lcall
or
or
movsb
sbb
sbb
js
daa
pop
je
out
add
jbe
cld
cmpsl
aaa
mov
das
sub
inc
inc
mov
ret
mov
mov
sbb
lds
push
jne
sbbl
dec
mov
mov
movsw
jno
enter
xor
push
iret
loope
shr
lods
add
jp
fistpl
add
pop
sbb
pop
sbb
jno
add
xlat
fs
lock
and
nop
add
add
mov
test
fdivrs
outsl
sbb
mov
mov
push
int
jbe
add
inc
sub
mov
cmc
pop
xchg
hlt
dec
sbb
dec
push
insb
fists
and
in
roll
iret
fdivrs
shlb
fiaddl
and
or
mov
sarb
inc
cltd
adc
pop
sbb
sbb
std
addb
test
loop
aas
add
shrb
adc
std
push
adc
imul
addl
hlt
inc
add
push
loop
repnz
mov
jne
fwait
popa
lret
lods
cmpsb
daa
adc
fisubl
shrb
inc
jnp
jbe
dec
push
cmp
je
pop
test
fidivrl
xchg
and
jmp
rcrb
movsb
jl
jo
fs
mov
mov
cmp
sub
lea
in
adc
div
pop
add
pop
mov
adc
xor
mov
adc
xchg
pop
fs
sub
mov
inc
bound
add
or
hlt
shrl
mov
pop
gs
add
les
dec
stos
loop
xor
mov
or
fnsave
dec
ja
scas
pop
dec
mov
pusha
mov
sub
inc
mov
fucom
push
sahf
or
loopne
arpl
pop
ficoms
mov
xor
pop
xchg
pushf
stos
pop
mov
mov
fbstp
into
xchg
and
push
call
mov
cwtl
sub
nop
inc
cltd
pushf
or
mov
pop
mov
sub
jbe
sub
pop
dec
out
inc
ss
fmuls
mov
xor
cmp
scas
push
daa
hlt
xor
add
jecxz
mov
test
int
and
push
addb
sub
pusha
imul
test
je
cltd
dec
sub
loopne
push
push
adc
imul
pusha
lods
fs
add
pop
add
push
inc
mov
and
js
add
ja
xchg
in
xor
pusha
test
xchg
xchg
jne
enter
les
add
dec
mov
pop
pop
mov
xchg
and
repnz
push
pusha
pushf
popa
ljmp
fbld
pop
lods
sbb
pop
rorb
int
adcl
nop
cwtl
dec
cmp
sbb
pop
call
jne
mov
test
jmp
pop
lret
rcrb
scas
adc
jnp
int3
sbb
dec
and
pop
push
jmp
add
aaa
mov
inc
pushaw
shll
cmp
add
xchg
mov
aaa
cwtl
sbb
popa
mov
sbb
mov
xor
lret
add
fsubr
bound
icebp
pop
jns
sbb
cmc
push
rorl
mov
xchg
sub
mov
pop
sub
ds
xchg
fmuls
je
nop
sub
and
sub
dec
nop
jnp
mov
fxch
dec
out
add
and
pusha
hlt
inc
test
sbb
add
data16
dec
mov
clc
mov
fs
filds
mov
mov
xchg
mov
fldcw
add
loopne
add
test
add
out
cmp
adc
dec
dec
push
add
enter
daa
cmpsb
or
sbb
shrl
shl
xor
mov
mov
push
mov
std
sbb
pop
test
adc
cmp
jne
out
add
inc
sbb
mov
add
icebp
stos
ret
popf
roll
jp
adc
dec
sahf
nop
add
mov
xor
add
and
mov
dec
ret
add
xor
nop
add
and
jae
gs
inc
mov
pop
adc
add
mov
xor
test
lock
dec
add
clc
jg
aam
insb
add
add
cwtl
fistpll
loope
sbb
adc
popf
mov
dec
add
stos
je
or
neg
stos
andl
pop
or
pop
push
lret
in
cmp
jne
add
jl
mov
mov
add
sbb
adc
add
sub
test
in
xlat
in
in
dec
sbb
and
lock
push
add
and
pop
push
add
hlt
push
aam
add
xchg
pop
fildl
roll
dec
adc
adc
mov
and
push
pop
sbbb
xchg
add
inc
and
jns
fucomp
cmpsb
std
pop
add
fidivl
fdiv
scas
std
sarl
add
mov
and
jle
add
pop
add
jo
adc
mov
cmp
jno
out
shlb
or
imulb
mov
in
call
pop
ret
shll
and
xchg
and
pushf
mov
inc
mov
shlb
out
cld
mov
cltd
sbb
out
jno
out
adcl
addb
lcall
inc
nop
scas
or
sbb
test
sub
mov
sbb
push
nop
filds
inc
inc
dec
jnp
repnz
into
add
mov
hlt
sub
lret
xor
pop
sub
stc
es
scas
test
mov
and
adc
mov
or
rcrb
add
ljmp
jo
ret
insb
jns
sbb
mov
pop
into
adc
std
out
add
fdivrs
jp
inc
adc
inc
mov
lods
lds
orl
mov
test
cwtl
lcall
fisubs
enter
inc
pop
sub
js
pusha
mov
je
sarl
mov
int
and
addr16
jmp
mov
shl
add
push
je
outsw
xor
pushf
shrb
int
dec
js
jns
jp
je
aaa
or
sub
loop
repnz
and
add
cmp
jge
inc
loop
dec
and
fistps
mov
pop
and
popa
inc
fidivl
pushf
iret
xlat
nop
xor
add
mov
jmp
fs
lds
orb
sub
sti
lret
addr16
cmp
jb
sbb
pop
mov
int3
adc
mov
jae
jae,pt
add
in
mov
xchg
nop
mov
and
inc
rcl
repz
test
mov
leave
pop
cmpb
pop
xchg
popa
test
or
push
mov
add
push
xchg
push
mov
test
mov
sub
mov
popf
xchg
push
xchg
arpl
cmpsb
add
test
lds
aas
inc
cld
out
adc
jae
sbb
mov
jne
mov
add
shlb
out
cwtl
dec
andl
add
pop
mov
cwtl
add
xor
lret
adc
test
xor
pop
movsb
and
add
cmp
and
jns
pop
or
add
loop
in
bound
jns
pop
aam
inc
dec
fnstsw
imul
popa
push
jne
xor
aad
mov
jge
pop
add
outsb
push
jp
outsl
sbb
je
mov
ret
push
jl
jnp
add
inc
out
mov
das
mov
sub
mov
testb
cs
out
mov
xor
mov
mov
ret
sahf
push
das
jns
sbb
cmpb
dec
sbb
test
dec
lret
fmul
shlb
add
add
add
sahf
pushf
loop
loope
and
xor
sti
fwait
pop
xchg
xchg
inc
sbb
rclb
pushf
and
fnstsw
lods
dec
add
jmp
push
pop
jp
jp
hlt
mov
subl
xchg
xchg
inc
popa
push
or
lahf
and
ja
test
mov
mov
mov
pop
push
xchg
rcl
cmp
push
in
pop
fs
inc
pop
add
out
fsubs
inc
pop
pusha
in
jns
loop
leave
mov
add
int
mov
cli
add
int
xchg
jae
adc
pop
xor
mov
jecxz
lret
mov
jbe
cmp
inc
and
cwtl
fmull
add
or
add
repnz
cmovnp
jb
xor
xchg
ret
pop
test
in
add
mov
adc
addb
mov
rcll
xchg
xor
mov
push
js
cwtl
push
repnz
dec
je
inc
cld
jp
fldl
inc
sbb
pop
rol
movsb
pop
fs
pop
inc
or
pop
push
nop
add
pusha
xchg
mov
or
or
inc
sbb
sbb
mov
mov
dec
dec
js
fsts
inc
jns
shl
fisttpl
pop
sub
jb
je
mov
push
lahf
mov
imul
clc
pushf
mov
push
push
inc
push
xchg
and
mov
mov
jo
sbb
in
cmp
nop
shrb
enter
mov
shl
sbbl
negl
cmp
inc
dec
adc
xlat
or
cmp
xchg
inc
and
push
cmpsl
loopne
pop
pop
ss
fwait
inc
daa
mov
pop
adc
loope
sarl
jb
repnz
sarl
scas
call
sub
pop
enter
mov
dec
aaa
sbb
xlat
cwtl
fsubr
lcall
or
jno
cwtl
pushf
adc
jle
loopne
cmp
jmp
xchg
adc
mov
push
inc
pop
pop
insl
and
xchg
push
test
in
call
fidivs
fstpl
push
aam
cs
wrmsr
jo
cmpsl
repnz
nop
pop
aaa
add
fisubrs
xchg
add
fmulp
cmpb
stos
mov
pop
hlt
inc
and
in
mov
and
shrb
pop
adc
and
cld
inc
in
data16
jnp
roll
mov
idivl
inc
je
add
fsubs
jno
pop
fmuls
or
aam
icebp
push
push
or
stos
out
cli
xlat
sbb
jl
enter
sbb
mov
and
test
xchg
lcall
jle
add
gs
mov
rcrb
add
js
ljmp
mov
daa
cmc
and
add
mov
adcb
jo
sbb
or
enter
sub
iret
cwtl
add
jg
jge
test
xchg
lock
mov
pop
xor
push
adc
nop
mov
inc
in
add
xchg
add
cltd
mov
mov
pop
push
mov
sbb
fs
mov
movsl
imul
mov
pop
movsl
jmp
dec
lcall
shrb
adcb
or
cmp
xchg
repnz
loope
movsb
shl
push
mov
ret
add
cli
xchg
fimuls
lea
cmp
and
cmp
add
sbb
mov
push
das
cld
js
sarb
jge
add
les
push
push
push
mov
pusha
movsl
leave
fisubrl
dec
subb
movsl
icebp
mov
loop
jp
mov
cltd
push
subl
subl
and
pop
or
mov
scas
sti
testb
leave
data16
loopne
push
fnstenv
dec
push
aam
in
push
xchg
out
ret
or
sahf
movsb
add
add
and
inc
pop
add
or
jbe
cmpsb
mov
cltd
addr16
and
mov
mov
sub
pop
mov
add
out
loopne
imul
cmp
cltd
sub
ficoml
je
dec
andb
sub
or
cmpsb
xchg
xor
dec
shll
mov
add
mov
imul
icebp
add
add
push
jno
shll
les
aad
movsb
lret
xchg
sub
les
sahf
mov
inc
aam
jmp
mov
fsubr
pop
xchg
pop
and
jb
and
or
xchg
div
lahf
or
mov
call
and
sub
sbb
mov
pop
rol
xchg
mov
je
mov
and
loopne
lods
hlt
mov
jns
fcoml
loopne
in
add
sbb
xor
popa
add
xchg
stc
ret
jl
mov
sbb
add
sub
or
lds
inc
mov
pop
stc
inc
cli
push
inc
loope
add
clc
movl
out
sub
popa
test
cmp
outsl
xor
fs
add
not
cmp
mov
pop
jnp
add
movsb
imul
inc
pushf
push
cmp
pop
add
test
xor
inc
loopne
cmp
sbb
sub
mov
xchg
nop
or
sbb
and
enter
mov
xor
pop
sahf
jmp
jns
add
insl
movsb
inc
idivb
adc
mov
mov
int3
imulb
aaa
mov
repz
enter
nop
mov
cmc
das
mov
jo
movsl
xchg
in
pop
xchg
stc
fld
ret
mov
pop
cmp
sub
pop
pop
out
iret
push
cmp
imul
and
and
or
movb
loop
sbb
loope
cmp
test
enter
pop
mov
test
aad
sub
sub
ror
test
pop
add
shl
add
cwtl
mov
adc
imul
adc
je
sbb
fadd
fdivrs
sub
sub
cmp
sbb
sbb
loopne
or
in
ds
xchg
xor
add
mov
adc
xchg
loope
mull
pushf
push
shr
shr
pop
int3
adc
das
cld
and
push
lods
cmpsl
aas
enter
test
sbb
inc
testb
inc
sub
push
adc
adc
int3
adc
test
test
hlt
leave
add
pop
lahf
push
aas
mov
adc
or
idivl
and
and
scas
sub
sbb
ficompl
pop
cmc
cmp
stos
mov
add
mov
or
enter
push
popf
mov
idivl
jbe
add
and
mov
dec
test
test
scas
pop
outsb
in
ljmp
out
add
mov
sahf
xor
mov
adc
mulb
jae
adc
in
nop
sub
sti
popa
adc
inc
sub
data16
lret
aad
dec
test
fsubs
stos
and
lods
in
and
xchg
out
popl
pushf
cmc
jb
and
add
mov
xchg
jnp
mov
sbb
or
scas
dec
aas
inc
add
jo
pop
nop
rorl
add
mov
sbb
scas
or
test
inc
xor
mov
subb
cli
push
stos
shl
lea
mov
inc
sub
sbb
hlt
jnp
pop
inc
mov
imul
cld
adc
negb
pushf
pop
mov
ret
pop
add
std
aas
loop
inc
xchg
subb
lock
cmp
push
and
enter
adc
push
jno
je
aaa
xor
and
xchg
xchg
lock
popa
ror
test
mov
sbb
push
in
sub
mov
dec
outsb
repz
ret
jbe
cld
or
add
hlt
adc
ljmp
pop
mov
push
iret
ja
xchg
loop
shll
lods
mov
sub
mov
fbstp
xchg
add
in
mov
fldt
pop
int3
or
jns
mov
in
mov
push
or
sub
dec
cwtl
jo
loop
mov
fmull
push
or
cmp
je
pop
add
and
adc
movsl
mov
jecxz
and
add
outsb
push
js
mov
add
cmp
icebp
out
out
filds
cli
sbb
xchg
mov
int
adc
jge
loopne
cmp
out
stc
sub
sbb
pop
hlt
pusha
mulb
xor
icebp
jecxz
xor
adc
fisttpll
aam
push
cmp
mov
or
cmp
lret
les
or
clc
sub
sahf
sub
xchg
lret
push
mov
jge
ret
enter
add
xchg
xchg
addr16
loop
out
mov
fs
add
enter
add
push
dec
add
pusha
test
adcl
outsb
imul
lock
inc
repnz
pop
xchg
xchg
test
mov
sub
push
lea
adc
adc
or
je
mov
fs
sub
add
and
shll
add
fcoml
sub
insl
cwtl
inc
inc
xchg
pop
out
mov
add
add
arpl
cmc
and
lock
das
sbbb
pop
sbb
sbb
xlat
push
or
adc
std
test
lea
nop
xchg
movsl
inc
in
pop
or
arpl
icebp
sbb
ljmp
out
adc
add
mov
lea
push
and
pushf
pusha
out
icebp
add
mov
fcomps
gs
inc
les
pop
outsl
incb
adc
and
rcrb
mov
mov
ja
daa
sar
repnz
stos
add
shrl
add
xor
add
decl
add
xchg
out
cmp
add
in
add
shlb
mov
xchg
mov
mov
inc
rcll
adc
rclb
mov
adc
sub
add
arpl
lcall
stos
add
test
loope
push
add
xchg
pop
ret
int3
add
xchg
mov
add
inc
je
sub
in
pop
adc
out
dec
or
sbb
jmp
jp
pusha
iret
push
lahf
adc
jecxz
enter
pop
adc
sbb
ds
or
jbe
repz
inc
pop
inc
inc
addr16
cmc
add
xor
out
cmpsb
lods
movsb
movsb
enter
jne
mov
inc
dec
daa
lods
adc
pushf
jl
add
push
lds
xor
mov
mov
imul
cs
sbb
jge
xchg
xor
adc
shlb
or
cmp
loopne
mov
imul
add
pop
push
dec
jbe
jl
pop
adc
adc
xchg
sbbb
and
stos
xor
add
sbb
add
jp
inc
mov
pop
pop
mov
mov
mov
test
rorb
pop
shr
add
fdivrl
jne
loop
xor
andb
mov
add
std
sahf
outsl
dec
dec
mov
clc
ljmp
mov
pop
or
iret
rcl
jl
test
jo
arpl
stos
adc
call
pusha
pop
sub
sbb
dec
mov
int3
xchg
inc
fidivl
push
push
insb
stos
mov
fldenv
and
or
xchg
or
add
stos
mov
xor
jl
dec
jg
pusha
scas
repnz
lock
popl
lcall
out
lea
jb
sbb
dec
cwtl
loopne
add
popf
sbbb
rorb
daa
dec
mov
add
cltd
in
jns
jl
jge
pusha
jae
sbb
sbbb
pushf
dec
fwait
int3
js
and
cmpsl
loopne
gs
nop
and
das
push
imul
mov
pop
lahf
cmp
sti
cwtl
pop
or
push
jmp
popl
lcall
mov
sub
popa
pusha
inc
and
mov
cmp
lret
cmp
xchg
and
sub
loop
add
je
aam
enter
sahf
mov
mov
stos
dec
push
cmpsb
call
testb
lods
jl
mov
xchg
hlt
adc
inc
data16
pop
mov
pop
jnp
cmpsb
mov
add
ljmp
mov
xchg
push
ret
jnp
push
lds
ret
fsubs
xorb
rorb
xor
ljmp
lret
frstor
pusha
sarb
mov
and
push
push
mov
mov
add
gs
inc
bound
xor
addb
out
icebp
divl
or
call
rcrl
loopne
jmp
dec
inc
sub
mov
xchg
je
add
insl
dec
aad
and
sbb
hlt
dec
xchg
or
pop
ljmp
inc
cmp
dec
shlb
cmp
fstps
sub
outsl
call
cwtl
xlat
inc
sub
lahf
adc
dec
loopne
daa
lret
adc
dec
fsubs
stc
pop
stos
inc
test
nop
adc
dec
and
dec
sub
fidivs
cmp
xor
mov
or
negb
icebp
nop
push
pop
gs
call
cs
imul
jae
xor
daa
xchg
rolb
vmovups
sbb
ret
jmp
movsb
add
movsb
test
sub
xor
loopne
jae
add
mov
mov
rcl
ffree
and
add
sub
mov
insb
mov
test
dec
push
or
adc
pop
test
or
loopne
pop
cwtl
arpl
and
fisttpl
add
add
add
jmp
and
loop
add
cmpsb
ret
int3
jmp
jo
aad
decl
sahf
pop
jmp
lock
cmp
dec
add
add
and
stos
push
clc
cli
jo
or
pop
cmp
push
cmp
sbb
div
inc
subl
and
jl
out
mov
int3
adc
mov
mov
arpl
cmp
sbb
aaa
adc
and
sub
push
shrd
mov
xchg
or
insl
fbstp
loop
sti
fiadds
jb
sbb
inc
and
jns
push
jo
or
and
and
adc
sbb
cmp
adcb
push
adc
and
xchg
xor
sub
sub
cmpsl
imul
mov
out
or
pop
sub
and
lret
xchg
sub
enter
xor
cmp
dec
or
or
bound
sbb
add
xchg
adc
sbb
sbb
or
cwtl
test
and
mov
adc
jge
and
aad
int3
adc
inc
arpl
push
adc
adc
movsb
dec
adc
lea
mov
dec
mov
dec
or
mov
enter
mov
flds
pusha
or
push
call
rcll
sub
push
pop
andl
adc
sarl
push
popa
or
or
jns
jae
jp
sbb
jmp
or
sub
inc
dec
nop
push
adc
and
leave
add
xor
dec
sbb
mov
out
or
push
xorb
call
xor
push
flds
jmp
or
sarl
pusha
sar
push
push
jmp
stos
std
sbb
addb
cmpb
or
xor
push
or
push
lods
lea
adc
mov
inc
xor
jnp
cwtl
push
orl
push
push
sbb
mov
jne
and
or
inc
sbb
stos
sbb
xchg
push
dec
les
inc
shlb
leave
push
mov
xor
subl
pushf
sbb
add
aas
sub
lds
mov
repnz
sbb
add
push
xchg
xchg
push
mov
andb
mov
jge
out
xor
cmp
data16
adc
add
sub
cmp
pop
sbb
pop
xor
aad
cmp
and
add
or
popa
xchg
sbb
enter
cwtl
lock
dec
das
icebp
jmp
lock
push
jg
fimull
ljmp
xchg
gs
pop
aaa
add
mov
cmp
mov
add
xor
sub
mov
and
mov
pop
insl
divl
xchg
sbbb
unpcklps
out
or
jle
inc
call
addr16
or
hlt
sbb
andb
in
xchg
cmp
adc
cmp
sbb
jmp
push
rorb
inc
nop
inc
push
arpl
mov
clc
dec
jbe
cld
mov
xchg
pop
addr16
clc
xchg
repnz
addl
add
mov
daa
xchg
or
or
aam
js
push
test
add
cmc
mov
movsb
mov
add
push
mov
add
xchg
jmp
loop
movsb
jnp
lcall
sbb
call
and
or
mov
out
mov
mov
popa
repz
loopne
or
or
imul
sbb
xchg
pusha
loope
cmp
orb
mov
je
dec
outsb
pop
sbbb
push
jne
mov
sbb
int
test
inc
mov
cmp
notb
out
loope
add
xchg
inc
sub
fldcw
insl
mov
dec
xchg
pop
ds
hlt
xor
clc
lds
push
fnstsw
jb
and
pop
jp
mov
mov
jno
rcl
hlt
out
dec
sbb
or
icebp
fiadds
rclb
mov
cmp
dec
lock
add
jecxz
pop
cmp
cmp
fmull
cmc
add
insl
inc
jl
lock
add
popl
or
adc
out
cmpsl
and
or
fpatan
fimuls
mov
or
jecxz
add
cmp
pop
push
dec
push
xor
adc
or
jmp
push
aad
inc
fsubrl
add
sbb
addb
jp
es
out
lock
dec
xchg
daa
sub
jb
add
mov
sub
or
pushf
adc
add
ja
enter
je
add
pop
add
arpl
sbb
xor
inc
cmc
sub
cs
clc
adc
aam
scas
sub
rorb
inc
test
inc
mov
or
cwtl
jbe
xchg
push
inc
outsl
push
xor
inc
and
and
fisubl
scas
add
inc
pop
mov
mov
aas
dec
cmpsb
mov
inc
shll
outsb
push
and
mov
loop
popf
mov
push
inc
int
sbb
mov
mov
out
and
clc
or
dec
scas
jg
xchg
gs
jp
and
ret
imul
cmc
mov
pusha
sbb
loop
sub
lock
insl
stos
rcrb
jne
inc
cmc
sub
and
push
jmp
repnz
add
jnp
and
stc
test
int3
fists
cmp
add
mov
xor
icebp
incl
lock
sub
fcoms
lds
jl
xor
add
cmp
lea
inc
cli
arpl
or
cmp
sub
xchg
mov
sti
jns
sub
push
jmp
ret
dec
ret
fadd
enter
xor
adc
sbb
test
dec
jo
pusha
pop
lock
xlat
inc
push
push
pusha
sub
je
cwtl
test
insl
outsl
mov
test
inc
adc
nop
cmp
inc
subb
pop
dec
shlb
js
sub
inc
ret
test
lahf
fxch
ficompl
and
push
ret
push
cmp
adc
hlt
and
or
and
lret
xor
cmc
mov
mov
hlt
pop
mov
mov
stos
inc
icebp
aam
test
add
mov
mov
xchg
nop
test
and
sub
mov
divl
repnz
xchg
jl
loop
add
out
loopne
loopne
andb
xor
mov
orb
or
adc
dec
add
pop
adc
in
pop
outsl
int3
dec
dec
movaps
and
or
mov
mov
and
mov
adc
hlt
add
dec
mov
movsb
inc
sbb
xor
mov
test
mov
mov
push
jmp
addb
mov
sbb
xor
fisttpll
or
imul
rolb
inc
pop
inc
push
inc
or
nop
lds
sbb
mov
daa
mov
xchg
or
fadds
or
sti
clc
inc
fadd
jmp
push
mov
xlat
mov
or
mov
cld
in
les
mov
jl
inc
jnp
inc
hlt
outsl
daa
mov
mov
fcoml
pop
out
rolb
imul
sub
xchg
std
popa
filds
shll
xor
add
mov
xchg
test
mov
gs
mov
mov
insl
and
adc
addr16
adc
mov
in
add
mov
ja
nop
or
cmp
push
cmp
add
xchg
je
mov
push
sbb
pop
sbb
mov
push
in
sbb
addb
xchg
jo
dec
mov
mov
xor
xlat
add
dec
sub
adcl
clc
loopne
mov
pop
pushf
cmp
sub
dec
test
add
cmp
pusha
xchg
lods
adc
shl
jns
jge
sbb
stos
xchg
les
add
sub
out
cmp
lock
rcl
inc
hlt
add
jo
dec
bswap
xchg
push
or
push
outsl
xbegin
and
int3
dec
call
lret
jecxz
mov
jl
add
sbb
sbb
push
cmp
mov
sub
sahf
mov
in
and
push
lock
pop
adc
sbb
and
and
adc
gs
mov
and
push
adc
push
inc
lea
faddl
arpl
sbb
dec
cld
dec
test
mov
mov
mov
mov
test
fildl
mov
cltd
cwtl
or
cmp
negb
inc
div
gs
mov
testl
inc
in
mov
cmp
xor
jmp
pop
pop
mov
ja
xchg
xchg
inc
into
push
lcall
add
popf
out
in
inc
push
dec
pop
shlb
mov
dec
rcrb
mov
cmp
js
cmc
cli
repz
jp
mov
push
sub
add
repz
in
pusha
inc
in
adc
sbb
mov
inc
inc
jge
mov
or
arpl
and
sbb
mov
mov
push
cmc
cmpsb
mov
mov
sbb
push
shrb
pushf
add
ret
mul
enter
jnp
xor
push
int3
adcb
out
addr16
add
repz
ljmp
sub
mov
dec
jbe
adcb
cld
das
mov
push
jnp
call
leave
in
mov
push
lea
cld
push
scas
mov
sbb
test
shrl
mov
push
inc
jle
cld
push
mov
adc
fwait
sub
push
mul
out
xchg
sahf
mov
adc
sbb
push
pop
inc
and
sbb
cmp
add
sub
pop
imul
test
repnz
xor
hlt
or
mov
shll
ficoms
dec
or
add
mov
jbe
lret
cltd
dec
mov
dec
dec
movsl
ja
mov
rolb
rcr
outsl
dec
ret
xor
jle
or
and
jo
add
pop
dec
subb
mov
dec
sbb
out
icebp
insl
add
shrl
sbb
add
int
mov
dec
xchg
inc
cmpl
inc
test
inc
pop
sub
test
leave
lds
stos
mov
pop
pop
add
arpl
dec
cld
es
mov
xchg
mov
add
int3
and
or
push
aas
add
aam
in
cmpsb
movsb
mov
xor
cmp
xchg
jne
nop
sub
and
push
insb
pop
add
fstps
test
jbe
or
enter
outsb
fcoml
outsl
lahf
jo
add
xchg
test
and
es
mov
clc
arpl
pop
push
add
sbb
dec
sub
inc
push
pop
push
cmpsl
popf
roll
mov
stos
inc
or
lods
pusha
movl
sbb
dec
jo
sbb
imul
xchg
inc
sarl
add
push
js
mov
mov
push
cmp
les
or
sub
loope
mov
and
sbb
xor
or
es
push
inc
mov
test
sbb
mov
cli
fsubrs
nop
cwtl
clc
imul
jp
popf
add
mov
mov
xor
aas
pop
ret
and
add
pop
fmuls
clc
dec
mov
xchg
mov
shlb
adc
out
imul
cwtl
mov
outsb
cld
or
fucom
mov
mov
pop
or
hlt
scas
adc
jg
push
out
adc
aad
scas
in
loopne
pop
cmp
push
pusha
dec
pop
fadds
rol
jmp
mov
imul
arpl
shl
cmpsb
adc
cld
outsl
and
mov
xor
ret
iret
test
hlt
adc
or
push
jne
add
and
push
add
popf
orb
les
push
sbb
or
adc
mov
push
push
adc
test
pusha
loopne
add
iret
mov
bound
mov
lret
stos
lcall
pop
sub
and
or
push
and
test
dec
pop
cmpsl
adc
les
lahf
xchg
or
add
cmc
jecxz
or
sbb
and
adc
xchg
shlb
lret
and
std
dec
add
int3
imul
shrl
sub
xor
or
cmc
cmpsl
dec
rclb
mov
arpl
push
in
mov
sbb
rorb
jl
int3
arpl
es
hlt
fs
pusha
mov
pop
xchg
sbb
inc
pusha
xchg
push
ret
pop
add
es
mov
add
pop
xor
add
mov
stos
fwait
add
xor
push
ret
das
pusha
mov
stos
ds
sbb
fisubs
and
lret
jge
mov
push
cwtl
and
push
popf
inc
pop
mov
nop
jo
pop
adc
fildll
in
loop
addr16
jne
add
jbe
and
cs
mov
xor
adc
adc
xchg
dec
es
out
cwtl
stos
mov
mov
mov
mov
rcrl
or
or
add
sub
mov
pop
sbb
and
inc
add
rcrl
jecxz
imul
push
cld
adc
cwtl
and
pushf
mov
add
cmp
mov
leave
in
subb
cmp
mov
arpl
hlt
movsb
test
mov
dec
jno
lcall
subb
cmp
push
jmp
mov
cli
movsb
xor
add
add
aaa
add
out
cmc
aas
fwait
add
ljmp
adc
mov
clc
ret
ffreep
jno
and
loopne
jbe
insl
data16
gs
pop
ret
mov
mov
mov
add
repz
and
les
add
je
mov
arpl
sub
repz
jecxz
adc
cmp
add
pop
pushf
adc
jecxz
adcb
mov
pusha
test
mov
sbb
test
data16
fdivrs
repnz
cld
in
add
dec
pshufw
add
pop
imul
push
xchg
add
sbb
ret
icebp
add
cmp
adc
rolb
xchg
in
and
mov
mov
inc
outsl
rcrb
add
xor
jmp
lock
push
stos
sbb
and
adcb
jnp
mov
mov
xchg
orb
outsl
es
rorl
sub
rorb
fstpl
mov
sbb
dec
pop
hlt
adc
in
in
add
mov
mov
js
mov
or
dec
mov
in
les
or
jecxz
popa
ss
cmp
stos
shlb
xor
ret
orl
mov
sbb
fisubrl
test
adc
nop
mov
inc
push
push
inc
or
mov
add
jmp
lahf
jge
insl
das
add
pop
ror
loop
jae
sub
fidivrl
add
es
jne
xchg
sub
shlb
out
mov
inc
sub
mov
add
add
pop
or
mov
and
cmp
mov
fdivs
jo
je
adc
fmuls
push
dec
hlt
or
lock
inc
nop
xchg
call
fcomps
adc
nop
mov
nop
mov
inc
push
xchg
inc
cmp
stos
dec
pushf
outsl
push
xchg
mov
inc
out
inc
dec
ret
insl
dec
stos
jnp
insb
pop
add
push
sub
cmp
insb
shll
sub
gs
mov
pop
sub
and
sub
inc
jae
mov
pushf
orb
inc
sub
in
sbb
sbb
lods
or
xorb
xchg
pop
inc
adc
popf
or
call
add
fcmovb
jecxz
shl
add
lret
xchg
sbb
mov
fmull
into
and
nop
mov
adc
jno
xlat
test
dec
jg
pop
enter
add
sbb
sub
test
pop
sbbl
test
lods
mov
sbb
daa
sub
das
das
les
push
stc
call
push
add
jo
fs
adc
add
sbb
call
movl
popf
enter
gs
add
mov
add
pop
jo
andb
add
daa
movsl
cmp
dec
xchg
and
xor
frstor
or
pop
mov
les
int3
cmp
or
dec
rol
jecxz
fistpl
shl
dec
outsb
insb
add
icebp
divl
sub
shrb
or
mov
test
fsubrl
add
sbb
nop
ljmp
adc
popf
ret
mov
mov
aas
sbb
stos
sbbb
test
inc
mov
lea
sub
subl
mov
mov
outsb
jb
mov
dec
sbb
std
push
aad
add
xchg
dec
pusha
mov
xlat
xor
in
loope
insl
cmp
sbb
jbe
daa
jl
pop
mov
inc
add
or
popf
cmpsl
stos
gs
dec
stos
mov
ja
shrl
adc
insl
dec
push
lcall
addb
out
mov
jecxz
fsubs
test
cltd
or
push
sbb
das
sub
lds
adc
jb
pusha
xor
popf
dec
xchg
sub
or
sub
dec
inc
jecxz
hlt
bound
in
xorb
push
cmp
cmpb
test
add
daa
rcll
inc
sub
cmc
insb
pop
add
inc
dec
dec
and
mov
insb
ds
test
std
fs
push
push
and
and
pusha
mov
inc
xchg
xchg
and
and
loopne
and
xchg
sbb
imul
fadds
scas
push
sub
ret
xor
and
and
mov
test
rcrb
add
repnz
push
add
cmp
jo
popa
enter
pop
call
add
mov
cmp
or
push
add
or
test
ret
clc
sub
sbb
enter
rorb
subb
lods
push
icebp
hlt
and
or
dec
cmc
aam
jns
add
addl
mov
jbe
dec
sub
insb
data16
jge
hlt
in
movb
aam
ret
pop
xlat
add
jp
arpl
in
mov
pop
xchg
cmc
daa
sahf
ds
mov
dec
test
rcrb
sbb
lds
pop
mov
xor
lods
mov
mov
ret
sbb
xchg
dec
aad
sub
pop
pushw
dec
test
lcall
add
outsb
add
je
mov
fisubl
dec
aam
mov
sbb
sub
cmc
mov
jg
psubw
and
xchg
es
jmp
pop
sbb
flds
mov
mov
push
and
add
xor
hlt
out
adc
add
jo
mov
fisubs
inc
jl
sbb
fwait
add
mov
jne
shrb
and
dec
sarl
mov
ret
add
cs
rol
lods
jl
pop
das
jns
repnz
enter
movb
ja
and
mov
clc
cmpsl
insl
pop
dec
aam
add
xor
shlb
jnp
jp
adc
sub
call
and
pop
mov
shrl
cltd
das
sbb
xchg
repnz
pop
mov
loopne
jecxz
inc
adc
mov
mov
sbb
dec
andl
and
xchg
jbe
jp
push
fiaddl
pop
add
lahf
addr16
push
inc
add
out
ds
mov
testl
add
fsubr
lds
call
imul
rcrl
and
jecxz
fcoms
jg
pop
mov
sub
add
cltd
jne
jae
sbb
and
xor
adc
or
pushf
addb
adc
sbb
test
add
data16
mov
pusha
and
rolb
pop
mov
sbb
ret
pusha
incb
xchg
pop
xor
xor
dec
pushf
dec
sbb
inc
pop
jbe
in
mov
sbb
ficomps
inc
push
cmp
subb
rolb
jbe
ja
sub
jecxz
add
stos
sbb
enter
fwait
and
sbb
push
jne
pop
xchg
mov
inc
loope
fstl
add
movsl
cmpsb
mov
inc
fs
and
and
xor
ds
sahf
adc
hlt
cmp
jns
or
push
lods
and
push
data16
cmp
xor
call
outsb
cltd
addb
add
pop
push
rolb
lock
cs
in
and
lahf
sbb
jnp
add
cmpsb
aad
adc
fstpl
ret
cmpsl
push
jge
sub
and
mov
test
cwtl
dec
push
loop
xlat
push
cmp
adc
adc
lods
jl
push
xchg
pop
dec
or
mov
loope
popf
leave
stc
mov
bound
pop
inc
sbb
shlb
cltd
inc
cmp
adc
cmp
add
jl
jne
pavgw
adc
add
jl
inc
outsl
inc
cs
or
jbe
inc
add
fnstcw
cli
fsubrs
jl
dec
mov
dec
jl
xchg
hlt
shr
dec
shll
lcall
sbb
mov
adc
inc
push
sub
sub
dec
and
add
xchg
orb
jg
int3
dec
jp
adc
mov
leave
add
movsb
xchg
ja
inc
pushf
call
inc
dec
sbb
mov
repz
adc
fnstcw
pop
mov
pop
mov
js
je
or
pop
add
jne
lcall
cltd
pop
addb
jno
addb
mov
lret
out
push
push
pop
add
lods
shll
rorb
cwtl
hlt
add
dec
retw
movsl
xor
sbb
jl
and
pushf
sub
add
jae
dec
sbb
xorl
cwtl
mov
pop
shlb
inc
fdivs
loopne
and
sbb
cltd
rolb
and
xchg
aam
cld
xchg
adc
aam
call
sub
mov
aad
jb
fcoms
ret
mov
inc
lret
in
push
sbb
mov
sub
sub
dec
jmp
gs
movsb
iret
js
jbe
pushf
mov
pop
js
sbb
movl
dec
jns
add
pop
adcl
xchg
cmpsl
dec
mov
lods
inc
iret
out
add
xor
rolb
lods
add
arpl
xor
ds
sub
push
add
mov
popf
popa
xlat
inc
in
and
sbb
pop
pushf
int
adc
xor
cld
sub
sbb
les
pushf
add
int
mov
cmp
and
push
sub
cld
add
jns
imull
mov
mov
and
andb
into
icebp
nop
in
call
push
jl
loopne
in
xchg
add
popa
xchg
ss
in
adc
dec
sub
jo
pusha
mov
adc
push
push
add
loope
fildl
sub
add
fldenv
dec
and
mov
dec
call
popa
adc
xchg
jle
mov
jmp
lds
lahf
in
pushf
mov
sbb
or
and
lcall
ret
jl
nop
fmul
cmpsb
add
shl
pusha
hlt
repz
lcall
push
xor
push
mov
test
dec
iret
cmpsb
or
adc
mov
sbb
xchg
pushf
mov
loopne
outsl
add
ret
in
add
loope
adc
je
push
add
xchg
sub
fsubl
add
das
dec
es
jl
test
add
cmpsb
push
ret
xchg
imul
fsts
das
test
xchg
cmp
mov
add
sub
rol
cmp
jl
xor
std
sbb
popa
mov
cltd
sbb
in
add
cmpsb
or
shl
dec
adc
adc
xor
cld
add
movsl
call
and
movsb
test
movsb
inc
out
andb
pop
xor
rcr
jb
inc
adc
mov
shlb
nop
aaa
dec
or
les
test
lcall
push
add
hlt
shlb
lock
popf
pusha
dec
jae
push
inc
push
push
dec
repz
lcall
push
pop
fdivs
push
rorb
stos
sarl
mov
aad
inc
and
cltd
mov
fadd
pop
push
ljmp
pop
shlb
in
in
aaa
pop
out
push
enter
loopne
aas
call
in
loop
cmpsl
push
test
repz
imul
inc
mov
fadd
bound
js
aad
add
lods
dec
mov
xor
ret
add
xorb
test
test
add
in
push
aam
or
fcmovb
dec
jl
les
inc
and
into
inc
mov
push
fwait
nop
push
fwait
xchg
nop
sub
cmp
push
add
lock
xor
dec
or
and
rcll
pop
stos
in
mov
inc
imul
loopne
mov
pusha
js
divl
sahf
mov
add
xor
dec
mov
jo
in
lret
rcrb
inc
mov
push
or
loopne
test
mov
aaa
push
shrb
pop
mov
mov
push
and
or
dec
bound
mov
mov
rorl
outsb
test
sbb
add
inc
push
aad
ret
inc
sub
add
out
xchg
test
aas
jae
push
push
and
movsb
hlt
mov
push
mov
adc
adc
push
fstps
cwtl
push
les
popf
xchg
dec
sub
dec
dec
repz
sub
jne
sbb
xchg
jecxz
in
retw
push
rorb
mov
lods
mov
cmp
mov
inc
xchg
mov
imulb
aaa
inc
and
mov
insl
dec
test
mov
push
js
dec
ret
and
xchg
add
mov
shlb
pushf
repz
dec
dec
add
push
lods
xchg
enter
inc
ret
sub
scas
add
xor
pushf
and
mov
fldl
and
rorb
jge
and
mov
pop
inc
rcrb
in
sbb
mov
sub
sbb
jge
sbb
ret
out
dec
push
lods
and
add
aad
pop
push
pushf
lret
test
enter
ret
test
out
nop
adc
push
pushf
inc
pop
push
pop
pop
inc
mov
xchg
sub
sbb
mov
xor
leave
or
xchg
dec
fcompl
or
add
push
sarb
in
xchg
adc
pop
incb
xchg
and
fwait
jl
in
stc
ds
or
loop
outsb
ljmp
and
cmp
adc
jge
fmull
mov
shlb
add
push
sbb
pushf
ds
add
das
ret
repnz
adcl
shlb
mov
pushf
mov
xor
call
aaa
repnz
dec
pushf
xor
and
dec
movsl
ljmp
nop
ret
jp
xor
or
imul
bound
test
bound
popa
xor
or
adc
ret
sbb
cmc
xor
popf
jns
mov
mov
xchg
dec
xchg
sahf
out
or
add
cmp
adc
and
cwtl
add
sbb
jg
rcrb
fildl
cmp
popf
inc
xchg
push
mov
mov
aaa
insb
add
insl
shrb
mov
imulb
mov
xorb
pop
adc
in
jp
mov
dec
ret
inc
dec
cmpsl
cmp
xchg
push
sbb
and
dec
sar
into
and
adc
jle
lods
pop
sbbb
and
push
mov
aas
repz
push
push
pop
pop
mov
mov
xchg
jg
aam
arpl
dec
inc
xor
or
nop
adcb
and
xchg
daa
jl
test
adcb
lock
loop
lahf
int3
ret
or
repnz
sbb
add
out
push
push
aad
mov
push
jbe
enter
in
pop
je
popf
add
sub
out
inc
mov
orb
cwtl
dec
hlt
incl
or
nop
mov
mov
jns
xorb
xor
inc
xchg
lret
out
mov
clc
pop
inc
cmp
test
and
test
add
lcall
xchg
add
enter
cmp
pop
push
jb
and
arpl
outsb
lds
mov
push
jns,pn
ret
fsubrs
or
xor
sub
mov
stos
repz
xor
sub
in
cmp
roll
sbb
mov
rcrb
cmp
add
sbb
and
sub
jno,pn
inc
sbb
mov
xor
mov
sub
mov
es
imul
mov
ret
je
xor
add
test
push
int3
jl
adc
sbb
pop
dec
fidivs
sub
push
ret
push
sub
jmp
dec
cli
movsb
fldl
ret
jne
push
xorb
cmpsl
add
lahf
repz
sub
ret
dec
add
loopne
sub
sbb
mov
push
cmp
add
cli
jl
inc
cmp
lock
das
add
jge
add
add
pusha
add
inc
mov
mov
pop
orl
and
add
mov
data16
lds
int3
fwait
xchg
push
sub
add
sub
test
push
repz
and
ret
add
jne
add
movsl
hlt
in
out
pop
lcall
repnz
pop
les
add
hlt
ljmp
arpl
je
or
or
sub
lret
shlb
xchg
add
mov
inc
shlb
adc
pop
pop
adc
dec
sub
jns
js
push
fnstenv
xchg
outsl
add
pop
mov
and
int3
out
insb
inc
loopne
mov
pop
add
shll
ja
sub
aad
xor
xchg
push
rcrl
jl
ret
arpl
loopne
add
fnsave
lods
xchg
popa
sub
fwait
jns
fbld
or
adc
shlb
mulb
rcll
or
cmp
dec
push
pop
jg
or
cwtl
enter
mov
insb
dec
xorb
popa
sbb
lock
shll
pusha
jp
fadd
jle
push
leave
shr
ret
and
and
xchg
ret
pop
push
les
insb
dec
jns
call
mov
sbb
mov
add
mov
add
inc
xor
movsb
aad
xchg
loopne
mov
add
sbb
mov
push
mov
and
mov
jg
bound
adc
mov
std
movsb
insb
add
jnp
mov
add
sub
fmul
jns
mov
dec
mov
cmpsl
bound
dec
or
inc
or
cmc
enter
adc
xchg
xor
add
daa
and
stc
inc
adc
or
xchg
or
xlat
jge
dec
mov
test
ljmp
hlt
sub
sub
mov
inc
enter
adc
call
clc
adc
push
inc
sbb
hlt
call
and
adc
rolb
add
mov
xchg
es
jno
add
fistps
sbb
cmp
ret
xchg
sub
pop
fninit
sbb
pusha
sbb
push
ret
orb
test
mov
and
das
and
decb
pop
or
fsincos
add
leave
add
mov
je
cmp
pusha
jle
in
dec
add
lahf
adc
inc
inc
mov
inc
jl
int3
lock
add
cwtl
mov
add
inc
movsl
lods
addr16
ret
jbe
dec
add
cmc
mov
dec
sbb
mov
xor
ret
and
dec
add
inc
rorb
out
mov
add
decb
add
lods
and
adc
cs
pop
mov
cmp
inc
orb
mov
pop
imulb
pop
loope
or
rorb
imul
lret
adc
clc
push
rolb
sti
aaa
adc
addl
sbb
inc
hlt
es
mov
rcll
sub
mov
sahf
or
sub
push
cmp
add
inc
dec
sub
xlat
jnp
in
into
adc
lods
loopne
icebp
add
and
mov
je
push
loop
sbb
aad
jns
sbb
loopne
pushf
cwtl
and
test
xchg
mov
sbbb
clc
inc
je
iret
das
rorl
ror
pop
mov
push
cwtl
and
cmp
and
sbb
scas
nop
je
inc
into
xor
or
cmpb
ret
or
dec
rcl
aaa
ljmp
push
popa
in
movb
es
or
cmc
inc
dec
lods
jge
gs
add
inc
and
loopne
sub
outsb
test
xor
mov
test
jl
push
pop
xchg
add
or
mov
jns
ficoml
popa
mov
daa
fwait
stos
add
pop
mov
aad
inc
sbb
iret
pusha
dec
push
cwtl
push
add
push
push
mov
hlt
pushf
add
ljmp
insb
sub
jae
scas
add
push
mov
cltd
fwait
test
fadds
lea
jns
rorl
pop
mov
jo
leave
add
fbstp
hlt
mov
push
jae
add
sar
sbb
dec
sub
jmp
pop
or
or
enter
jo
add
jns
lock
pop
inc
xor
mov
fisubs
inc
cmpsl
sub
imul
je
jbe
ret
call
shll
into
dec
lea
and
add
inc
xabort
push
and
or
enter
lea
sbb
jl
ja
incl
fmul
lds
add
daa
les
dec
es
lcall
ficomps
call
xorb
fnstcw
push
inc
and
jge
dec
add
mov
fldt
andl
cmp
into
jno
lock
dec
jne
sbb
or
sub
lods
loopne
stos
mov
push
xchg
dec
fwait
cmpb
cltd
call
add
mov
mov
pop
inc
xor
sbb
cmpsl
xor
je
fwait
shll
add
cmpl
jp
sub
lcall
addr16
fsts
or
xchg
sbb
and
inc
dec
xorb
dec
jae
sbb
pop
mov
lcall
push
leave
xor
scas
sub
or
adc
aad
sarb
pusha
adc
shll
sbb
ret
or
je
add
in
jp
xchg
and
pop
in
mov
jbe
aam
adc
inc
xchg
call
ss
fstpl
and
test
pop
cli
bound
pusha
mov
aas
loopne
adc
js
add
inc
aam
or
xor
jl
or
adc
int
mov
push
pusha
jns
jbe
sbb
lret
and
inc
xchg
and
push
or
xor
fadds
jno
rorl
dec
push
sub
mov
push
jne
ja
adc
pop
mov
out
adc
fcompl
adcb
enter
daa
inc
cmp
jp
mov
aam
shll
jo
cwtl
sahf
cmpsl
rcl
or
push
sbb
mov
or
push
out
ds
dec
mov
push
xchg
jne
js
fsts
pushf
and
xchg
incb
adcb
and
sti
inc
inc
fwait
and
push
cmp
mov
imul
daa
in
lods
push
jns
loopne
clc
nop
addb
and
sub
sahf
dec
push
and
add
popf
fcmovnu
sbb
sbb
jnp
push
pushf
orl
sub
rcrb
push
inc
jnp
movsb
mov
xchg
xchg
nop
rclb
push
lahf
cmp
pusha
cmpsl
lock
pop
cmp
dec
xor
movl
fwait
inc
inc
sub
fadd
jno
rol
jmp
test
faddp
and
xorb
js
dec
xor
fisubrl
dec
mov
jl
cmp
in
xor
insl
imul
iret
or
pop
enter
cmp
and
pusha
pop
aad
pop
ss
adcb
mov
sbb
or
sahf
out
add
int
in
sub
frstor
or
test
inc
sub
sbb
subb
and
mov
pop
lods
jnp
adc
repz
popf
cmp
sub
mov
fildll
dec
cmp
inc
sub
and
dec
je
es
and
test
inc
push
inc
mov
adc
add
out
lock
jp
hlt
sub
sub
hlt
mov
xchg
add
push
inc
inc
push
pop
mov
insb
cmp
aad
mov
fwait
sub
mov
push
popf
fst
sub
adc
in
data16
rclb
inc
dec
push
sbb
mov
mov
mov
and
sarb
xchg
inc
dec
fstpl
ja
test
xor
add
fsubs
xchg
dec
pop
dec
inc
aaa
nop
test
add
push
push
mov
jnp
push
pushf
jcxz
adc
xor
xor
aad
adc
xchg
cmp
fldcw
cmp
xor
jbe
cmpsb
add
ja
aam
xor
or
mov
loopne
push
icebp
vpmuludq
add
addr16
out
mov
pop
imul
adcb
mov
daa
aas
push
jno
pop
shll
and
xchg
rolb
and
fdivrl
mov
xor
and
leave
inc
test
fstpt
pop
and
adc
rcrl
inc
or
idivb
sbb
or
insl
les
scas
aaa
ret
cwtl
and
cltd
dec
dec
test
iret
popa
inc
adc
inc
test
andl
xchg
movsl
sbb
cmpsl
test
adc
and
inc
loopne
ficoml
lods
movsl
fimull
iret
push
jb
xchg
lret
jecxz
or
ss
scas
pusha
dec
mov
adcl
pop
inc
or
add
out
lahf
sbb
sbbl
add
loop
dec
push
ret
lcall
push
or
mov
jecxz
roll
add
ds
adc
orl
stos
cld
xchg
nop
mov
aad
and
dec
add
out
dec
aam
mov
ret
aam
inc
sbb
jo
mov
mov
subb
fs
fwait
es
mov
mov
mov
pushl
jmp
xor
xor
push
and
add
or
pushf
jmp
mov
xor
add
adc
sbb
add
or
cmp
adc
fistps
pop
mov
mov
ret
in
cli
mov
addl
sub
push
or
in
or
in
in
sub
push
pop
push
and
pop
xor
mov
pop
inc
shr
pop
xorl
es
cmc
or
pop
fsubr
xchg
jno
push
mov
or
lahf
pop
add
or
or
push
mov
pop
push
pushl
pop
sti
test
push
push
adc
inc
push
xchg
mov
scas
inc
nop
sbb
nop
xor
and
test
sbb
mov
sbb
jmp
inc
cmp
push
xchg
pop
sub
in
mov
push
jmp
lods
cmovne
pop
inc
adc
xor
decl
movsl
xor
or
push
pusha
orl
mov
in
dec
push
sub
inc
jmp
inc
cmpsb
pop
pop
test
pop
shll
jmp
nop
add
sub
in
setae
cli
pop
mov
xchg
dec
add
mov
pop
push
scas
mov
jne
sub
aaa
sub
inc
xor
daa
stos
inc
cmp
into
sub
or
sbb
arpl
and
and
push
adc
loopne
pop
adc
call
movsl
push
mov
mov
push
mov
xchg
add
cli
adc
pop
push
push
mov
in
ret
ljmp
in
or
imul
orl
lret
lret
pop
nop
out
sub
add
neg
dec
sbb
shlb
aas
cmpsl
sub
xchg
and
or
push
mov
rorb
repnz
dec
inc
and
xchg
or
inc
add
jmp
lods
dec
ret
mov
call
icebp
in
or
cli
and
sbb
imul
std
pop
jecxz
lock
xchg
pop
inc
adcl
leave
testl
pop
loopne
mov
xor
mov
in
mov
xor
lds
pop
scas
sti
es
sub
add
cmp
add
call
fwait
gs
xor
or
or
lcall
add
lods
arpl
add
cmp
or
and
roll
jmp
push
dec
xchg
mov
push
adc
enter
jmp
stos
outsl
pop
pop
inc
adc
mov
pop
adc
xor
cmp
xchg
jbe
pop
jnp
add
push
mov
ret
pusha
arpl
xchg
mov
pop
shl
sub
rolb
sub
sub
adc
add
ror
data16
mov
and
pop
xchg
testl
pusha
push
push
xor
adc
movb
adc
nop
add
cli
xchg
dec
pop
mov
inc
shl
jecxz
lcall
orb
push
push
mov
sbb
test
fstpl
jb
pop
cs
jmp
pop
dec
out
iret
push
cs
sbb
int3
scas
adc
jge
sub
push
mov
mov
jns
cli
pop
cli
testb
pmaxsw
adc
jmp
pop
add
pop
int3
cli
pop
cltd
test
arpl
mov
data16
clc
rclb
cwtl
or
jmp
inc
sub
pop
add
dec
test
xor
pop
xor
fmuls
mov
mov
addr16
pop
out
xchg
push
and
sbb
push
call
not
or
imul
xchg
adc
pop
shl
into
add
addr16
xorl
sub
icebp
stos
mov
adc
les
mov
call
int
pop
sub
pop
pop
inc
into
lret
mov
pop
push
push
or
sbb
adcb
inc
fcmovnb
jmp
shl
xor
or
adc
rclb
pusha
dec
or
push
mov
call
sbb
sbb
mov
neg
inc
push
pop
jmp
popf
add
jb
mull
repz
xor
mov
stc
push
sbb
dec
inc
inc
add
je
and
xchg
jmp
fs
sbb
lds
sub
sub
daa
push
ja
xchg
fldcw
fwait
pusha
xor
mov
jmp
adc
push
or
push
mov
and
jmp
sbb
sbb
inc
mov
mov
or
data16
cmp
sbb
shl
pop
push
mov
adcb
shlb
add
popl
push
push
push
jns
push
repz
pop
out
inc
shl
push
mov
sub
in
add
gs
add
sbbb
and
jmp
sbb
mov
sub
test
jns
int
aad
sub
xchg
in
enter
ss
aas
dec
adc
push
mov
add
jl
jp
neg
jmp
aad
test
mov
lret
out
add
push
dec
push
int3
mov
sub
xlat
test
out
fs
or
stos
lahf
dec
dec
mov
leave
mov
sub
push
mov
inc
inc
push
daa
xchg
xor
mov
enter
mov
call
or
sub
loopne
pop
push
lahf
push
lcall
or
jmp
push
stos
sub
sub
pusha
inc
add
sti
xor
inc
jns
dec
push
pop
dec
add
repnz
iret
cmp
popa
jbe
inc
gs
push
sbb
insl
add
sbb
or
adc
jo
lcall
or
xor
mov
cld
mov
cmp
sub
iret
add
sub
in
mov
shlb
jmp
xor
pop
pop
adc
dec
sbb
or
jmp
pop
jmp
xor
pop
ficompl
imul
pop
mov
inc
xor
shll
test
xchg
sub
and
mov
pop
push
push
dec
pop
sub
test
xchg
or
addl
in
jmp
add
lock
mov
mov
push
mov
ja
mov
mov
sub
mov
inc
fstl
mov
push
or
popa
and
out
inc
or
adc
rcr
add
in
add
push
and
mov
and
jno
les
fwait
out
and
adc
pop
or
std
bound
in
leave
add
inc
xor
out
adc
mov
adc
aas
push
adc
ss
ret
enter
call
jl
scas
dec
dec
adc
xor
push
movsb
sbb
cld
popf
xchg
xor
cmp
jmp
lock
aas
pop
push
xor
jmp
cmpsl
mov
cmp
mov
fdiv
rorb
and
aaa
jbe
pusha
xor
sub
add
mov
fildl
into
sbb
mov
jb
jo
dec
call
test
push
sub
dec
fldt
lcall
js
push
lock
jns
shl
decb
popa
inc
push
shl
loop
incl
push
mov
ds
jae
pusha
or
mov
sahf
or
add
je
push
sub
pop
inc
dec
loop
push
shr
jp
pop
aam
add
lods
inc
inc
and
xorb
ret
mov
add
data16
mov
xor
sub
addr16
jo
cmp
jnp
outsl
pop
adc
mov
insb
adc
and
push
mov
movsb
jne
jmp
and
ljmp
jb
je
outsb
cmp
imul
or
or
push
test
dec
loop
push
push
loope
push
in
push
jb
and
inc
sbb
sub
or
add
jno
push
jo
adc
adc
mov
dec
push
sbb
or
sub
xchg
out
sub
push
mov
pop
pop
push
sub
push
dec
insl
lds
ror
push
pusha
clc
repnz
cmc
xchg
mov
pop
lock
dec
cld
pop
or
add
movlps
xchg
push
in
or
repz
orl
cwtl
hlt
jle
dec
imul
add
jmp
lret
nopl
test
or
sarl
sbb
xor
imul
lret
les
fstl
xor
outsb
add
jmp
lea
call
mov
cmpsb
out
add
sub
xor
inc
daa
and
pop
rcll
out
and
insl
sub
dec
test
xor
dec
scas
add
fcom
inc
sbb
push
xor
fisttps
and
add
jp
or
flds
enter
inc
ds
jbe
add
add
loopne
icebp
fisubl
cmpsb
pop
inc
popf
jmp
ljmp
loop
mov
roll
cmc
decb
push
mov
loope
out
inc
scas
jg
add
cmp
push
scas
stos
push
xchg
add
orb
or
jmp
push
mov
addb
jo
ds
popa
mov
daa
arpl
jmp
sub
adc
add
pusha
inc
cmp
inc
nop
insb
and
icebp
sbb
and
or
sub
ja
das
int3
cld
lea
data16
inc
test
jmp
daa
sub
dec
xor
ret
inc
or
xchg
mov
out
xchg
les
fisubs
imul
popa
in
cmp
pop
mov
inc
insl
push
and
push
rolb
lahf
aam
mov
push
bound
dec
decl
add
ret
or
mov
add
or
xor
cli
pop
push
inc
lcall
cwtl
or
sbb
pop
adc
jmp
dec
frstor
jge
sub
add
lods
int3
xor
jmp
ficomps
sbb
or
sub
adc
stc
xlat
lretw
aas
add
xchg
push
lea
push
nop
ret
hlt
jl
ja
sbb
incl
add
xor
mov
addr16
in
push
push
add
orb
pop
fadd
xor
mov
dec
add
ds
sub
pop
mov
dec
pop
popa
add
sti
push
mov
jmp
mov
add
push
add
aaa
je
push
lods
ja
fs
in
fs
push
push
pop
add
insl
not
inc
jne
and
rol
add
inc
outsl
pop
and
mov
mov
sbb
add
in
mov
xchg
es
add
and
aas
jo
loop
sbb
es
push
push
push
mov
data16
and
sub
decb
xchg
mov
adc
xor
not
aam
or
push
push
les
xor
into
add
pop
ja
in
filds
push
inc
or
push
pop
xor
orl
xchg
pop
jae
not
clc
sbb
mov
sar
rcll
xor
jnp
and
dec
and
xor
out
dec
jno
dec
add
inc
xchg
xchg
jmp
lret
sub
sarl
dec
pop
sbb
pop
rcl
jmp
push
mov
pusha
movsb
push
lods
ds
mov
mov
xor
cmp
pop
pop
cmp
jle
in
pop
mov
pop
loop
and
pop
or
jmp
or
cmp
adc
or
mov
inc
dec
outsl
push
in
sbb
repnz
andb
xor
pop
adc
dec
popa
xor
testb
shr
add
jae
pop
mov
push
push
in
sbb
cmpl
or
insb
aam
add
hlt
inc
xor
or
fsts
jp
xor
lds
lret
inc
pop
aas
push
nop
cmp
add
mov
sub
fstps
pop
out
inc
mov
pop
push
jb
addl
sbb
dec
sub
xorb
leave
sub
ljmp
jmp
test
cmp
test
mov
rorl
and
aas
push
push
pop
xchg
sbb
mov
aaa
or
jbe
adc
fadds
outsb
ja
add
int
pop
sub
or
in
and
add
pop
push
mov
add
push
mov
pop
ds
dec
movsl
adc
loop
adc
adc
mov
flds
shl
sub
inc
call
rclb
sbb
jl
repz
or
jo
add
cmp
sub
dec
pop
roll
ljmp
xor
jmp
dec
add
or
pop
pop
add
test
out
push
lock
jmp
xor
je
adc
loopne
mov
add
dec
test
and
lods
fwait
arpl
mov
add
jmp
mov
rorb
fldl
or
call
rcl
or
rol
out
test
icebp
leave
in
inc
mov
and
jl
push
xchg
xor
lock
inc
and
pop
imul
cmp
cmp
xorl
iret
lahf
pop
arpl
xor
dec
or
mov
adc
push
push
gs
or
mov
jl
push
clc
cwtl
test
clc
jmp
and
and
jno
ss
sub
outsl
xor
xor
inc
mov
imul
adcb
hlt
sub
cltd
outsb
inc
cli
sub
inc
nop
inc
or
shll
mov
dec
and
int
adc
or
out
or
add
sbb
ds
dec
jge
add
xchg
inc
lret
ret
ds
add
fs
jb
sub
push
mov
gs
mov
jns
jmp
imul
inc
sbb
xor
or
mov
push
repnz
sbb
pop
sub
or
pop
addl
jmp
dec
or
shr
fmul
cs
xor
nop
jno
movb
stc
jnp
and
dec
sar
adc
adc
ret
mov
xor
sub
pop
das
pop
pop
dec
int3
xchg
sub
cs
andb
mov
add
fs
leave
pop
cmp
and
xor
jmp
ret
xor
stos
adc
and
int
and
ss
inc
push
cmp
jmp
jae
xorl
add
jmp
xchg
add
js
or
and
stos
mov
in
push
and
ss
or
gs
push
and
jbe
stos
sub
je
lock
mov
add
push
jbe
outsl
repnz
push
xor
js
xchg
test
push
add
add
test
add
and
dec
insb
subb
ret
xchg
cwtl
data16
mov
daa
inc
jmp
pop
mov
push
add
adc
adc
popf
push
insl
ss
inc
xchg
dec
popa
cmp
inc
dec
ret
rolb
icebp
or
add
jns
bound
or
addb
addb
or
enter
push
inc
xor
addb
outsl
xor
add
repnz
cmc
lods
xchg
jno
and
sub
ljmp
sub
and
in
lret
jle
add
adc
add
outsb
loope
hlt
or
daa
jo
js
rcrl
mov
sub
std
sub
pop
dec
push
aas
and
push
add
pop
in
mov
mov
sub
in
push
mov
jmp
add
push
mov
rcl
push
out
pusha
mov
and
cmp
lock
and
push
faddp
mov
sub
stos
sbb
mov
jmp
mov
mov
lds
jbe
xchg
gs
insl
enter
movsl
aam
xor
in
das
pop
xor
dec
fs
add
imul
subb
loopne
rcrb
and
pop
and
sbb
cmc
or
and
mov
movsb
push
and
rclb
fldcw
cs
add
pop
add
adc
cmp
add
sub
xor
lock
loopne
aam
pop
stos
pop
add
pop
xchg
inc
and
mov
add
mov
mov
xchg
ret
shl
test
push
les
popf
psadbw
rorl
sbb
sub
fisubl
stos
mov
sub
fisubrs
jb
out
cmp
push
add
fucomi
cld
cmpl
fbstp
in
push
int
repnz
dec
stos
xchg
and
lds
mov
mov
or
bound
add
inc
seta
jmp
movsb
mov
add
mov
ds
addl
push
aaa
inc
cwtl
mov
pop
loope
push
in
xorb
add
lock
mov
xor
fisubl
jb
jmp
inc
pushf
mov
push
push
pop
pop
dec
sarl
xor
mov
mov
pop
jmp
inc
repz
lea
or
and
inc
loopne
push
push
aad
sar
dec
and
das
adc
pop
push
nop
mov
insl
lahf
imul
jo
pop
jmp
jo
loop
jae
sbbb
lock
leave
loopne
movsl
shrl
jae
push
outsl
insb
mov
test
sub
and
sub
xor
mov
inc
rol
loope
cmp
cs
cmp
ret
xchg
add
cmpsb
hlt
and
push
mov
pop
push
push
mov
shl
add
mov
fists
sub
in
jmp
or
jne
push
push
ds
pop
xorb
add
movzbl
add
or
ret
cmpsb
xchg
pusha
xchg
mov
push
out
lods
call
add
pushf
pop
dec
fildll
mov
inc
les
idivl
ss
dec
lahf
cmpsb
lahf
mov
es
pop
add
aaa
and
out
int3
int
add
rolb
ljmp
pop
mov
xchg
pop
mov
int3
shrl
xchg
xchg
mov
xor
fcomps
rcl
inc
push
mov
push
add
jb
stos
das
rcr
inc
add
adc
mov
out
push
inc
mov
or
je
ja
sbb
xchg
sub
and
sbb
xchg
or
add
jo
cli
cmp
lcall
test
mov
in
inc
mov
pop
pusha
push
add
fucom
js
lock
pop
pop
add
dec
cmp
and
add
mov
jge
dec
and
cmp
xor
fists
jp
sub
xor
or
ds
call
call
ficompl
test
xchg
mov
adcb
push
sub
pop
out
push
or
pop
not
jmp
push
xchg
test
push
mov
jmp
xchg
cmpb
jbe
add
and
fxch
call
jmp
call
popa
pop
mov
jbe
add
add
push
add
les
jae
add
xor
repz
push
popf
aaa
mov
mov
dec
dec
xor
pop
mov
add
in
lds
clc
sbb
mov
xchg
icebp
xor
push
mov
push
mov
shr
movsb
jns
inc
adc
aad
add
mov
push
dec
lods
pop
mov
pop
mov
add
xorb
lods
nop
adc
cmpsl
es
mov
and
jmp
mov
std
sub
out
mov
jle
jbe
add
dec
inc
jmp
pop
push
fists
shl
es
insl
sub
inc
sbb
bound
gs
out
mov
xor
xor
rcll
aam
adc
shrb
jmp
push
cwtl
push
add
pop
pop
and
aas
addl
jmp
jl
out
mov
addr16
push
adc
push
inc
dec
mov
add
notl
xchg
or
int3
pop
outsb
data16
lds
xlat
jmp
dec
xchg
int
out
les
aad
mov
jl
in
sbb
sbb
add
fdivs
cmp
add
jge
mov
xor
jp
out
mov
adc
adc
mov
mov
orl
xor
les
sbb
cwtl
test
or
int3
and
inc
mov
lret
jbe
inc
mov
xor
ljmp
mov
xor
pop
pushf
and
adc
cmp
neg
jge
push
jle
push
add
jmp
pop
push
mov
ja
sub
insb
push
or
call
mov
cld
pop
pop
push
push
mov
add
orl
and
test
enter
rcll
mov
push
sbb
fs
cmp
add
pop
dec
push
shlb
aaa
push
fwait
add
xor
mov
adc
stc
xor
lock
lret
pop
insl
sbb
xchg
leave
daa
mov
jno
add
not
addl
pop
aam
pusha
mov
inc
xchg
xlat
out
add
pop
test
xchg
jo
fsubr
jl
stos
fists
xchg
adc
shr
cmpxchg
sub
lcall
push
add
or
sbb
pop
aaa
sarl
push
clc
inc
dec
lret
fisubl
adcl
jne
sub
inc
inc
aam
in
mov
shlb
push
lret
jmp
or
movsl
int3
fs
inc
pop
lret
pusha
sbb
pop
adc
movsb
adc
or
cmp
dec
mov
or
jno
add
xor
push
idiv
mov
cmp
loopne
int
or
or
add
ficomps
cmpsl
das
gs
das
les
sbb
idiv
push
jmp
ja
xlat
jae
jmp
dec
pop
popa
popf
ret
sbbb
mov
xchg
mov
cmp
mov
sub
mov
adc
adc
push
jge
test
daa
ljmp
cmp
or
dec
or
mov
rcrl
dec
inc
addb
mov
aad
push
pop
add
push
add
es
in
std
psraw
lret
inc
clc
js
mov
inc
adc
cmp
test
cli
xchg
jae
xchg
xlat
adc
pusha
pop
repnz
cmp
testb
add
mov
jle
or
pop
popa
scas
add
mov
xchg
sbb
cmp
fdivrp
sub
xor
jp
lds
es
movsl
mov
pop
cmp
cmc
inc
xorl
lods
push
add
dec
mov
or
mov
shll
sbb
jns
dec
xchg
sub
arpl
out
mov
popa
jp
sub
adc
in
imul
or
add
pop
push
lock
adc
xor
mov
mov
dec
sub
adc
shll
adc
mov
and
outsl
movsb
mov
inc
sbb
not
inc
cltd
add
push
xchg
lods
xchg
and
ss
das
mov
cmp
insb
or
jmp
or
xchg
sbb
in
orl
fldcw
int3
pop
push
add
into
fs
filds
inc
pop
add
stc
lods
test
adc
fiaddl
movsb
pop
adc
jp
cmp
repz
and
daa
jmp
xor
fsubrs
sub
cmpsl
xchg
fiaddl
arpl
pop
clc
or
nop
mov
sub
xchg
out
clc
xor
shlb
xchg
inc
mov
sub
adc
pop
pop
shr
lahf
push
adc
gs
push
pop
repnz
roll
and
sub
sbb
sbb
outsb
push
mov
in
adc
mov
out
outsb
sti
sbb
cmp
mov
inc
dec
xchg
lock
xchg
or
nop
sbb
push
pusha
mov
inc
lcall
sbb
inc
xchg
pop
xchg
or
movsb
loop
xchg
outsb
cld
data16
push
adc
dec
xchg
push
sbb
imul
out
movsb
mov
cmp
lods
dec
clc
test
stos
add
inc
add
andl
insb
test
cwtl
mov
jne
adc
pusha
movsl
lock
movsb
mov
sbbl
cmc
lock
mov
push
mov
jmp
push
mov
jg
mov
or
dec
dec
adc
push
xchg
or
mov
lods
jl
pop
push
push
pop
push
jmp
inc
nop
push
push
mov
sub
in
xchg
pop
mov
dec
push
mov
push
jb
xlat
pop
pop
push
mov
popf
sbb
lock
sub
xor
pop
je
mov
clc
in
adc
daa
popa
push
xchg
cwtl
inc
mov
lds
rorb
and
push
shl
push
test
and
pop
dec
add
fs
push
mov
sahf
or
pop
pop
sub
pop
orb
into
mov
inc
addr16
xor
mov
pop
mov
jmp
push
push
or
movsb
shl
int
aas
dec
les
xor
mov
inc
cmpsl
pop
and
jl
roll
cmp
incb
js
shlb
outsb
sub
sbb
push
xor
lahf
sbb
into
cltd
fsubs
inc
lods
cmc
dec
add
and
add
in
jg
push
jmp
adc
hlt
or
call
cmp
repnz
pop
mov
add
out
add
ljmp
jge
rolb
jg
push
cmp
ja
mov
test
push
jmp
and
xchg
adc
icebp
xor
fistpl
lret
inc
sbb
jmp
jge
in
js
or
in
push
ret
jbe
mov
add
sbb
and
push
jmp
mov
mov
mov
xor
or
roll
sub
cs
mov
or
fisubl
mov
adc
or
pop
inc
lret
pop
adc
and
int
scas
movsb
aas
xor
insb
add
jmp
leave
call
sub
add
adc
sub
mov
push
les
pop
push
add
out
pop
mov
daa
aas
inc
xorb
in
jo
mov
rcll
ds
orl
and
lret
shrb
cs
call
dec
daa
push
xor
sub
and
rol
push
pushf
jmp
jecxz
or
ja
push
and
add
mov
fstpl
cmpsl
rcrl
inc
jmp
or
inc
data16
ret
shr
cwtl
mov
rorl
xor
inc
mov
add
xor
dec
lahf
mov
mov
mov
xchg
xchg
insl
push
cmp
sub
adc
aam
ret
inc
imulb
mov
fmull
jg
sbbb
add
dec
dec
ficomps
add
mov
dec
pusha
icebp
cli
lret
pop
mov
and
aam
cmpb
dec
repz
or
andl
xchg
xor
dec
add
and
lods
roll
fidivl
lea
xchg
ja
jb
xchg
and
or
dec
icebp
cs
push
push
push
adc
fsts
test
sub
mov
add
popa
jge
add
lods
dec
adc
or
pop
flds
jmp
push
sbb
pop
cmpsb
sbb
jbe
arpl
dec
adc
rcll
lods
mov
inc
or
pop
push
cmp
xchg
cmpsl
subl
out
decb
stos
jb
into
add
sub
out
sahf
push
mov
mov
shr
adc
pop
and
daa
and
imul
dec
in
xchg
mov
push
push
xor
jo
push
not
inc
or
adc
daa
mov
pop
sub
dec
cli
add
gs
or
rorb
xchg
cmpsb
sbb
or
sub
pop
adc
cmpb
push
add
daa
push
lcall
push
adc
fimull
addl
or
jmp
out
pop
call
cmp
sti
push
stos
add
insb
xor
push
jmp
inc
faddp
sbb
fwait
outsb
or
cmpsb
or
bound
ret
lds
add
adc
jle
mov
mov
pop
and
push
ret
pop
add
and
scas
addr16
sub
movsb
and
dec
ja
aad
test
cmp
push
push
movsb
movb
xchg
push
shr
dec
jmp
or
mov
mov
cmp
jno
pop
pop
jns
lret
movsb
and
push
or
std
push
iret
add
xlat
out
imulb
je
mov
ficomps
jne
sbb
sub
xor
sbb
xor
mov
fistl
mov
andb
adc
ss
add
mov
mov
xor
pop
push
add
lcall
cmp
je
sbb
sub
pop
rclb
dec
jo
jl
sub
push
notb
jmp
or
jle
xchg
insb
lods
pop
add
add
call
pop
mov
aad
jo
jmp
dec
mov
adc
add
in
inc
stos
dec
inc
sti
dec
fs
jns
sysret
adc
clc
fmulp
or
mov
adc
mov
in
and
icebp
mov
cmc
pop
mov
push
lret
movsl
loopne
sub
outsb
sub
or
lods
inc
jae
pop
sbb
lea
sub
jmp
mov
jo
add
cld
lcall
popf
in
inc
aaa
fld
shll
aas
xor
pop
push
push
movsl
mov
jb
push
outsb
mov
or
adc
jecxz
or
repnz
lcall
mov
push
xchg
adc
xlat
je
dec
scas
out
fldenv
jbe
add
ficompl
not
adcl
add
sub
movsl
add
sub
rcrb
xor
cld
fdivrs
es
ror
and
popa
add
fimuls
or
in
mov
sbb
inc
popf
pop
ret
inc
roll
and
dec
mov
arpl
xchg
repz
pop
push
je
fs
clc
cmp
or
mov
sbbl
dec
push
cmpsb
mov
jmp
es
test
jecxz
jle
jmp
cmpsb
std
insb
frstor
mov
cmp
fimull
xchg
xchg
inc
hlt
cld
movsl
and
push
mov
call
pop
mov
iret
testl
lods
dec
add
test
pop
dec
rcr
sbb
xor
sub
lds
xchg
pop
rcll
add
push
pop
push
add
aaa
ja
pusha
adc
adc
hlt
jl
dec
js
adc
out
stc
dec
xchg
pop
jno
sti
mov
iret
inc
ja
dec
or
xor
std
bound
jns
lock
mov
lds
push
das
inc
pusha
or
mov
je
jae
mov
sub
xlat
push
push
addl
inc
sbb
dec
or
sub
rorb
stos
pop
and
gs
xchg
out
mov
xchg
add
sub
inc
mov
lret
pop
or
push
fildl
loope
ret
cmc
xor
dec
mov
sub
or
mov
loop
add
ja
outsl
sarl
neg
pop
int3
mov
jp
sub
cmp
xor
or
mov
dec
mov
or
loopne
cmp
pop
mov
or
pop
or
and
jmp
insb
enter
inc
mov
xchg
out
jge
and
mov
or
or
add
repnz
pop
jb
lock
sbb
fs
pop
jnp
roll
fcompl
loopne
pop
push
xor
popa
fsub
add
xor
mov
pop
and
dec
mov
or
std
sbb
sub
xchg
cmp
push
and
inc
pop
cwtl
aaa
push
push
das
loope
sub
ret
adc
dec
mov
push
push
jmp
daa
pop
and
popf
pop
adc
adc
dec
pop
push
push
jmp
pop
rolb
mov
shr
jb
je
pop
sbb
mov
leave
jbe
and
mov
xchg
addb
push
dec
sub
mov
and
inc
mov
mov
nop
mov
out
leave
push
aad
popa
mov
jno
jns
mul
xchg
leave
rol
cmpsb
dec
test
sarb
mov
xlat
das
xchg
fwait
push
sub
mov
iret
divb
lcall
push
shrl
xor
and
jb
sub
pop
aas
popa
aad
test
sub
or
cli
inc
pop
scas
xchg
seto
fucomi
push
push
and
adc
push
push
mov
add
std
rolb
std
mov
or
pop
inc
test
add
add
sub
divl
dec
add
dec
and
pop
aad
pop
push
je
inc
pop
sub
dec
or
pop
repnz
das
pop
out
test
and
hlt
rcr
pop
and
lahf
fucomp
inc
cmp
adc
imul
jl
cmp
xchg
inc
push
sbb
xor
add
add
lahf
cmp
sbbl
inc
push
xor
sub
mov
jl
insb
mov
add
lock
pop
pop
push
xchg
xchg
add
mov
mov
mov
and
push
jmp
add
adc
and
cwtl
std
push
xor
xchg
inc
std
push
aam
ret
int3
cmpsl
adc
inc
inc
push
loope
inc
shl
sub
insb
xlat
push
or
mov
xor
fistps
sbb
adcb
lret
js
inc
push
les
xchg
ret
mov
cmp
pop
xchg
add
push
jmp
je
mov
lret
xor
scas
and
and
imul
lock
add
repnz
enter
rorl
cmp
or
pop
add
pop
jns
mov
jmp
pop
push
inc
and
fbstp
into
das
add
sub
jns
sub
sub
fwait
sub
pop
jmp
bound
cld
xor
int3
icebp
ret
jl
pop
out
push
rol
cltd
sub
jmp
loopne
jo
aas
fstpl
add
imul
test
sbb
push
out
out
and
add
rorb
inc
xchg
pusha
and
ret
sbb
addb
das
push
cmp
cmp
jmp
add
push
sbb
push
pop
adc
mov
sub
jmp
subb
mov
sbb
xchg
sbb
in
mov
and
adc
sub
leave
or
lods
dec
stos
sub
aaa
inc
jle
cltd
jns
int3
dec
xlat
nop
xchg
mov
dec
sub
pop
push
xor
xorb
push
add
adc
dec
cwtl
std
push
je
scas
push
mov
or
rolb
push
popf
in
add
pop
push
push
xchg
xchg
aam
ljmp
call
imul
sub
mov
adc
pop
mov
in
insl
or
inc
or
and
inc
negl
cmp
add
mov
xor
nop
mov
in
popf
push
je
shr
addr16
ret
pushf
outsb
dec
push
or
or
int3
inc
mov
bound
mov
dec
sub
shr
pop
mov
sahf
inc
movl
mov
xor
sub
jno
and
mov
gs
adc
push
pop
mov
push
popf
adc
mov
lret
jecxz
add
push
mov
pusha
out
je
cwtl
cmp
add
add
aas
inc
add
or
jmp
cmp
jno
push
sub
sbb
je
test
push
sub
adc
push
loopne
mov
pushf
inc
dec
pop
inc
dec
dec
sbb
orb
add
sub
jmp
add
repnz
addb
mov
sbb
shl
push
into
add
insl
jle
pop
push
pop
lds
or
jle
call
imul
jl
cmp
sbb
and
add
xchg
or
pop
jns
mov
pop
pop
mov
inc
push
mov
jg
iret
jns
cwtl
push
mov
add
movsb
sub
stc
sub
and
insb
imul
in
pop
cwtl
or
outsl
xchg
arpl
pop
pop
mov
dec
ficoml
push
push
enter
add
aad
jmp
enter
or
xor
or
xor
jecxz
mov
xchg
aad
xlat
pop
cli
test
mov
push
imul
in
push
lods
pop
mov
xchg
add
pop
sub
sbb
or
mov
out
cmp
gs
and
rcl
sbb
orl
icebp
jnp
test
rcrl
push
pop
xchg
inc
lret
push
mov
sbb
mov
inc
pop
lahf
dec
stc
cmp
push
int
xor
push
mov
subl
dec
xchg
dec
daa
jnp
notl
cmp
adc
xchg
inc
das
scas
cmp
or
jmp
cld
arpl
sub
arpl
or
pop
hlt
jne
cwtl
inc
sbb
add
and
add
inc
cwtl
cmp
dec
pop
xor
das
adc
dec
cwtl
or
inc
mov
mov
jae
loope
adc
push
push
rolb
xchg
lods
pushw
mov
dec
fstl
dec
cmpsb
mov
jmp
pop
xor
mov
mov
fsub
xchg
sbb
lret
mov
pop
xor
inc
add
cs
xor
xor
sbb
les
nop
dec
dec
js
add
or
movups
shrb
add
push
or
adc
xor
jmp
lods
xor
leave
jg,pn
movsb
cmpsl
inc
xor
jae
sub
sbb
dec
sar
xchg
movl
sub
bound
adc
popa
push
and
icebp
in
adc
jle
in
mov
sub
and
sbb
jp
addr16
jl
sbb
push
sbb
adc
and
mov
daa
sub
and
jmp
jp
bnd
fs
jne
pop
mov
or
loopne
dec
xchg
mov
dec
fistpll
fucom
out
push
push
sbb
or
cltd
jns
sbb
or
xchg
add
pushw
push
push
add
jmp
je
push
sub
mov
inc
mov
mov
outsl
or
jmp
orb
push
mov
or
icebp
nop
bound
jmp
mov
mov
mov
mov
lret
mov
in
push
lcall
sub
dec
cwtl
add
mov
push
dec
fdiv
insl
jbe
fildll
inc
pushf
inc
rorl
add
cmpb
add
rcrb
cmc
je
jmp
fldt
dec
lahf
or
sbb
xchg
pusha
inc
push
rorb
cld
fwait
lock
xchg
mov
mov
dec
and
repz
mov
imul
jmp
dec
add
cmc
es
insl
mov
clc
clc
mov
jno
ja
shll
cld
mov
in
rcl
xchg
xor
pop
add
outsl
repnz
dec
jp
sub
and
mov
jo
mov
jp
inc
ja
stos
dec
insb
test
ljmp
rcrb
jmp
arpl
mov
cmp
ljmp
adc
sub
mov
or
or
pop
das
jp
ds
jno
mov
sub
mov
jnp
cmpsl
and
sti
pop
dec
neg
xchg
or
bound
mov
jmp
add
idiv
inc
imul
incl
push
js
movsb
pop
iret
dec
mov
in
mov
push
and
and
testb
add
xchg
mov
mov
jb
outsb
or
ds
jmp
daa
jge
xchg
pop
jecxz
and
aas
fists
js
sub
pop
and
mov
roll
or
ss
inc
sub
pop
mov
sbb
xor
test
das
xor
or
or
jae
and
lret
jmp
out
xor
dec
in
push
lret
jno
sub
lds
pop
inc
cmp
inc
movsb
xor
cmp
push
sbb
popl
test
pop
and
add
push
dec
sbb
daa
mov
ret
and
shr
in
shrb
cmpl
or
test
lret
inc
cmpsb
or
jns
mov
ja
inc
add
add
pop
jle
sub
inc
xlat
inc
dec
popa
and
pop
sub
or
jmp
xor
push
orl
sub
lock
cmpsl
add
xor
sub
stos
popa
pop
push
les
sti
push
jle
notl
push
mov
popa
leave
push
push
push
pusha
dec
jo
add
sbb
leave
repz
mov
sub
add
push
repnz
and
mov
and
mov
insb
mov
jmp
sub
jbe
inc
push
das
insb
add
aad
dec
adc
adc
cmp
jne
dec
sti
mov
inc
jo
inc
notb
sub
mov
int3
mov
jl
jmp
xor
les
xlat
or
mov
fbstp
or
fildl
addr16
test
pop
pop
loop
test
jmp
jns
xchg
mov
inc
mov
push
add
xor
jg
icebp
gs
dec
cmpsl
mov
out
subl
lcall
push
or
test
lods
push
adc
xor
pop
pop
cmp
adc
mov
add
jmp
add
xchg
in
dec
mov
add
ds
add
or
xchg
stos
sbb
movsb
cltd
or
cmpsl
in
aas
lcall
mov
dec
jbe
mov
pop
xor
push
inc
adc
jnp
es
adc
push
or
jmp
shl
mov
clc
xor
jmp
jno
lcall
stos
pop
xor
in
in
mov
push
inc
popf
nop
out
xchg
or
sub
imul
pop
jl
cmp
add
cltd
sub
addb
mov
in
or
push
fwait
xchg
add
aad
lock
or
mov
add
dec
sub
push
dec
jp
xchg
rcl
sub
sbb
aaa
cwtl
push
stos
mov
outsb
stos
sub
jmp
movzwl
push
sub
testb
scas
push
gs
movsb
pop
out
in
xchg
sub
adc
icebp
daa
adc
jbe
jb
mov
jp
sarb
jb
jmp
dec
add
popf
mov
loopne
jmp
movsb
sub
and
bound
and
mov
sbb
push
push
jno
movsb
inc
or
ljmp
mov
cwtl
push
sahf
out
pop
roll
pushw
cmpsb
dec
adc
icebp
adc
loopne
mov
sub
lock
push
jmp
mov
inc
fdivrp
inc
in
fstpl
ljmp
inc
in
jle
jle
inc
sbb
sti
push
xchg
ja
pop
pop
and
pushl
shrl
add
dec
lock
pop
and
or
sub
lcall
xchg
jnp
mov
sbb
jmp
push
pushf
or
mov
pushf
add
idivl
fimull
and
inc
xchg
add
aam
dec
inc
cmpsb
popa
adc
lods
pop
les
cwtl
aad
dec
loop
pop
sub
imul
inc
xchg
lea
inc
add
inc
andb
clc
sbb
push
jmp
ljmp
sahf
sahf
push
xor
cmp
fs
ret
xor
stos
int3
push
popa
push
les
mov
outsb
push
sti
push
pop
mov
xchg
dec
push
pop
or
or
stos
pop
clc
or
imul
pop
inc
sbb
shrl
xchg
out
adc
or
lods
or
loope
mov
lret
imul
fstpl
mov
mov
xor
add
dec
sahf
repz
push
fsub
imul
sub
ret
movsb
or
jmp
mov
or
mov
inc
or
cld
mov
adc
jnp
cmp
sub
rorb
pusha
hlt
insb
jb
xor
sbb
push
pop
rcrb
xor
sbb
or
ret
stos
clc
js
repnz
movsb
jmp
test
jge
add
out
adc
pop
scas
or
or
enter
loop
cmp
negb
dec
icebp
sub
jae
push
xor
mov
dec
adc
xlat
mov
mov
ss
inc
mov
cmp
es
ror
and
adc
pop
or
out
test
mov
mov
sub
scas
sub
cmp
mov
push
out
add
pop
mov
fcoms
jne
dec
add
loope
or
push
out
mulb
divb
dec
daa
test
repnz
das
and
std
not
les
mov
fs
fucomi
cli
sub
jae
push
rclb
cmp
fdivs
pop
or
mov
add
out
cld
test
push
sbb
xchg
cmpl
xchg
ret
fwait
cmc
fisttpl
addb
adcl
xchg
or
in
rcrb
movsb
xor
push
cmp
ja
add
clc
das
sub
popa
sub
cmp
pop
rcrb
or
add
and
mov
add
iret
movsl
fcmovb
cld
fistps
ja
cmp
cltd
add
jmp
and
lods
xor
insb
addb
add
lret
dec
outsb
jo
jae
mov
xchg
add
xchg
add
adc
mov
adc
adc
jns
jmp
insb
pop
sub
ret
pop
mov
adc
adc
out
movsl
pushf
test
dec
sbb
jmp
test
enter
and
push
into
cmp
jge
jnp
ljmp
mov
mov
das
dec
jecxz
fcomps
es
rolb
push
mov
test
xor
lret
aaa
jmp
push
cmpsl
xchg
sbb
add
pop
add
mov
loope
ds
mov
ja
sbb
xor
mov
pop
xlat
mov
or
ret
mov
lahf
insb
fldcw
lods
inc
push
lcall
popf
and
add
add
xor
sub
pop
xchg
stc
loope
pop
jmp
pop
daa
test
icebp
in
div
mov
push
xor
push
jl
or
inc
popa
sub
xor
cmpsl
ret
xchg
pop
das
dec
dec
test
jmp
or
jp
xchg
gs
leave
loope
mov
adc
dec
or
pusha
lods
stc
sbb
or
dec
add
js
xchg
mov
adc
divl
add
icebp
pop
push
mov
inc
pop
pop
or
cld
pop
shlb
out
inc
mov
pusha
pop
int3
sub
and
xchg
pop
or
icebp
popa
shlb
out
xor
sbbl
push
sbb
roll
sub
rorb
fdivrs
in
or
loop
ret
outsl
call
add
mov
mov
inc
or
push
mov
repnz
sti
rorl
and
add
pop
mov
or
jmp
push
sbb
jo
push
mov
jnp
mov
add
mov
lea
push
lds
das
adc
sbb
mov
jne
sbb
sub
loop
xchg
or
in
repz
bound
ds
xchg
push
mov
push
cs
push
popa
gs
mov
add
shlb
push
dec
lret
mov
adc
in
push
mov
mov
inc
pop
out
roll
shr
iret
lret
mov
pop
dec
add
loop
shrb
jmp
mov
push
hlt
pop
lret
mov
mov
mov
push
aaa
cmc
push
out
pop
pop
idivb
pusha
stc
lods
icebp
xchg
sub
in
sbb
push
mov
jecxz
push
mov
adc
mov
cmp
or
push
jmp
and
xor
adc
test
xor
push
shl
xor
jo
mulb
cmp
inc
shll
push
sub
test
xor
mov
and
shl
clc
xchg
jge
popa
mov
push
cmpsl
jo
push
and
testb
dec
jg
adc
sub
loope
jge
popf
sbb
xor
insl
sub
mov
mov
es
addb
inc
jae
inc
in
stos
adc
mov
pop
xchg
loopne
pop
push
jmp
jmp
jmp
jmp
push
mov
mov
aaa
pop
push
les
rcrb
fimuls
cmp
out
mov
cmp
push
sbb
in
jp
cmp
outsl
push
cli
cmc
bound
shr
mov
clc
inc
add
es
pop
push
pop
imul
jb
ret
xrelease
push
mov
jns
cwtl
test
lret
icebp
push
lea
xor
loope
sub
cmp
jmp
or
inc
push
push
inc
push
mov
adc
inc
ret
add
popa
mov
les
std
dec
call
int
cmp
mov
pop
mov
in
xor
loop
pop
lds
mov
inc
push
addr16
sbb
cmp
inc
imulb
shrb
cltd
add
popa
jb
sbbb
pop
hlt
cmp
pop
jecxz
and
fiadds
xor
loopne
bound
add
shr
jle,pt
adc
sub
je
adc
subl
push
sahf
and
outsl
pop
cmp
mov
add
ss
jne
sub
stc
cli
or
sbb
out
fcoml
insb
sub
hlt
add
or
insb
sbb
js
daa
mov
in
push
out
movsb
jmp
dec
inc
sbb
xchg
cmp
into
mov
jae
addr16
jle
es
and
xchg
and
or
sub
insl
divl
icebp
cltd
jno
es
push
mov
push
pop
jmp
pushf
es
push
mov
push
stc
inc
loope
fisttps
sub
fwait
and
sub
in
pop
jmp
out
lock
add
sub
adc
ficomps
aam
push
clc
push
shl
out
and
repz
push
sbb
fstps
in
es
inc
push
std
push
pusha
xchg
or
dec
xor
outsb
jmp
pop
cltd
push
or
or
movsb
das
lahf
in
or
ss
mov
jecxz
clc
pop
inc
sbb
add
popf
xchg
loop
shrb
xor
mov
mov
clc
mov
adc
cmp
mov
aad
or
add
push
pop
popf
add
inc
jge
sbb
les
test
das
pop
icebp
pop
push
push
jmp
mov
push
jmp
or
popf
adcl
mov
outsl
test
repz
dec
out
dec
sub
test
push
icebp
loop
cmc
and
lds
shrb
push
stos
pop
pop
adc
mov
pop
leave
add
mov
mov
shl
shlb
cmp
add
ret
mov
cs
pop
jb
lods
sysexit
out
test
lods
daa
add
pop
add
sbb
or
mov
popf
cmpps
xor
fsubr
inc
or
cmc
loop
sbb
out
lcall
pop
sbb
push
sub
movsb
push
or
ljmp
xor
push
push
jmp
or
inc
popl
insl
dec
pop
sbb
cs
daa
or
neg
popf
loopne
mov
aas
add
int
cmp
mov
adc
pop
push
outsl
movsl
sub
lods
cmp
popf
pusha
into
mov
repnz
xchg
dec
sbbb
mov
or
xchg
adc
aas
mov
xor
aad
sub
cmpb
cmp
imul
push
add
add
adc
mov
mov
push
xchg
out
jmp
lds
push
xor
cmp
lods
pop
add
pop
and
ljmp
xor
adc
push
movsb
jp
add
or
cmp
add
shll
out
jns
push
lahf
fildl
repnz
adc
jmp
mov
pop
and
jge
adc
cld
or
mov
lods
push
jmp
jmp
lcall
sub
jmp
inc
sub
pusha
sub
subb
push
dec
mov
jmp
sbb
pand
into
outsl
adc
pop
call
xor
mov
icebp
cmp
xor
cltd
add
fbstp
lds
movsl
mov
iret
and
push
and
xchg
shl
push
stos
dec
gs
xor
insl
pop
pop
sbb
in
inc
mov
enter
lret
andb
dec
stos
push
cwtl
orb
out
xorl
xchg
mov
push
addr16
sub
xor
cmpb
jge
es
nop
or
cmp
aad
ret
xchg
xor
or
push
add
mov
xor
rclb
sub
and
push
inc
or
int
outsl
int3
bound
fists
insb
jg
cmpsl
test
add
sbb
xor
or
sbb
jle
add
push
enter
jns
pop
rcll
or
into
dec
fidivrl
and
pop
das
iret
les
pop
jmp
mov
neg
mov
mov
jg
jnp
dec
push
mov
sub
pop
mov
sti
pop
jmp
dec
add
jae
jmp
ljmp
xlat
jne
pusha
add
jb
and
pop
repnz
mov
ret
inc
sbb
cmc
jmp
enter
arpl
ds
mov
shrb
ljmp
test
aas
xor
rcrl
aas
cld
lods
jnp
jbe
sub
xchg
cs
jmp
cwtl
outsb
bound
sub
mov
jns
jnp
lds
xchg
cld
pop
lds
movsb
scas
repnz
jl
mov
rcl
push
xchg
loopne
les
inc
rorl
xchg
mov
add
push
fistl
adc
pop
mov
leave
xchg
dec
cmp
cmp
sub
or
leave
decb
inc
add
sbb
daa
mov
pop
iret
lret
es
ficoms
mov
cmp
ret
loop
loopne
repz
cli
adc
test
push
insb
movsb
jge
ret
xor
icebp
out
push
lods
outsb
in
test
cmp
pop
negl
dec
pop
mov
sbb
lahf
xchg
xchg
pushf
and
and
or
imul
sub
ret
in
add
std
arpl
hlt
xchg
and
pop
cmc
in
cmp
xlat
fwait
mov
inc
mov
outsl
scas
pop
imul
sbb
inc
push
jnp
jge
sub
adc
mov
mov
out
nop
jmp
push
pop
sbb
sub
mov
or
jnp
jne
jmp
sti
add
push
ljmp
pop
and
lret
test
push
pop
dec
xorl
sub
scas
cmp
add
dec
xchg
pop
dec
or
or
neg
cwtl
sub
cmp
sbb
jge
push
clc
or
inc
mov
lock
xchg
cmp
sub
sarb
jae
push
in
out
or
jae
or
mov
aaa
into
jb
and
jnp
cld
xchg
stos
das
flds
subb
sub
pop
jmp
mov
or
cmp
add
out
inc
shl
jmp
inc
xchg
jnp
fidivs
jg
cmpsb
xchg
pop
inc
push
jle
fwait
xchg
stos
pushf
mov
mov
sbb
dec
mov
lahf
or
push
or
mov
cmp
inc
sbb
dec
repz
xor
daa
jns
add
xchg
mov
shr
inc
xor
xchg
cmc
inc
or
add
xlat
add
push
jp
add
pop
sub
xchg
test
test
mov
int3
add
dec
int3
ret
add
jo
roll
or
scas
enter
pop
scas
data16
es
jg
jmp
cld
jo
push
in
lahf
pop
inc
orl
and
dec
mov
bound
or
sub
adc
mov
ret
or
add
push
mov
add
sbb
pop
xlat
lret
add
push
mov
adc
add
add
icebp
into
and
shlb
lret
shrl
andl
pop
jmp
addl
nop
mov
push
cmc
test
push
pusha
xor
add
jne
in
push
sub
pop
inc
push
push
or
inc
repnz
add
inc
ret
iret
loope
lret
out
sub
xchg
sub
xchg
jl
fcoms
leave
mov
fadd
iret
adcb
fidivs
addb
pop
inc
fidivs
sarb
cld
addr16
clc
rcll
push
jne
insb
sbb
push
jmp
test
pop
jae
imul
in
push
in
inc
and
jp
faddp
insl
fsubr
out
mov
dec
shr
xor
sbb
lret
push
popf
shrl
test
orb
adc
lahf
test
cmp
sbb
rolb
pusha
xlat
push
xor
jae
std
pusha
addl
xchg
test
cmp
out
cmc
jmp
dec
pusha
test
lods
xchg
in
xor
pop
pop
pop
int3
cmpb
mov
lahf
push
and
adc
push
cltd
dec
popa
jg
adc
cmp
cmp
cltd
roll
pop
or
jmp
push
inc
aas
inc
scas
iret
pop
adc
adc
jbe
loope
dec
mov
cli
and
cmp
and
add
push
and
mov
push
ds
rorl
nop
fsubrs
stc
pop
adc
addr16
push
mov
out
dec
sub
aaa
dec
adc
pop
leave
push
and
xchg
ljmp
pop
push
jmp
ljmp
hlt
out
adc
jmp
mov
imul
pop
mov
fistpl
add
adc
repnz
and
xor
adc
cmp
xchg
dec
arpl
dec
sub
sbb
imul
or
pushl
sub
pop
into
add
or
shll
jb
add
add
jmp
add
mov
adc
xchg
xlat
mov
notb
adc
cmc
inc
icebp
shrl
cmp
xor
pop
add
cmpsb
adc
popa
int3
loopne
push
add
les
jbe
orl
out
jge
je
jg
or
or
jmp
aam
jo
rclb
adc
int3
xor
adc
sbb
sbb
mov
jno
rclb
mov
xchg
xor
adc
sub
mov
add
repnz
pop
add
jmp
flds
mov
ret
add
fcomps
inc
mov
xchg
rcl
pop
add
and
je
jo
mov
and
dec
sbb
pushf
or
add
outsb
in
adc
mov
hlt
pop
negl
mov
pusha
andb
outsb
shlb
ja
std
adc
je
into
xchg
and
es
shrl
addb
xlat
add
sub
or
sub
and
inc
xchg
sbb
xor
or
jp
cwtl
jle
repnz
sub
jge
jne,pn
scas
mov
sbb
or
inc
pop
pop
xor
popa
nop
sbb
ficoms
ret
fs
mov
cmpsl
sbb
and
push
sbb
int3
jle
sub
jmp
mov
mov
xor
in
cld
inc
xchg
jle
mov
out
and
push
call
jmp
dec
dec
xor
les
repz
negb
push
pop
pop
pop
jle
pop
testb
cmp
or
clc
and
push
mov
neg
clc
int3
je
cmp
dec
out
or
cld
outsl
addr16
out
mov
stos
mov
fs
mov
sub
dec
mov
xchg
and
jmp
ja
push
cmp
mov
mov
rol
scas
cmp
cld
push
or
xchg
and
mov
call
adc
dec
in
pop
les
aam
sbb
mov
sbb
xlat
ss
and
mov
sbb
subb
jne
sbbb
popa
jmp
pop
cmp
xlat
popf
adc
call
out
mov
cmp
int3
aas
pop
push
xchg
out
jbe
and
and
in
push
mov
loope
mov
pop
and
inc
sti
icebp
inc
pusha
mov
xor
leave
iret
cmc
xor
dec
test
mov
test
arpl
in
dec
pusha
xor
xlat
cltd
and
mov
xor
lea
in
sub
daa
jae
sbb
xor
adc
rcrl
jecxz
inc
xchg
jne
cmp
sub
push
jmp
mov
xlat
inc
mov
mov
jo
inc
or
mov
push
es
mov
sbb
sbb
push
push
pop
adc
into
pusha
mov
aam
dec
xchg
inc
sub
push
hlt
adc
and
pusha
mov
jmp
call
pop
jne
and
cmp
or
cmp
in
mov
or
or
add
xor
cli
sarb
jns
adc
pop
ljmp
inc
xor
push
pop
in
jae
xchg
dec
jae
dec
stos
cmc
nop
jmp
and
cmp
lahf
insb
enter
shl
cwtl
xchg
jb
out
jp
mov
add
jmp
xor
insb
or
cmp
push
mov
add
std
outsl
dec
sbbl
mov
lods
adc
ret
sub
dec
pop
mov
push
cs
and
inc
mov
andb
adc
dec
in
sub
and
sub
es
jmp
cmp
inc
call
or
aam
or
mov
jmp
mov
neg
out
jl
sbb
inc
adc
cmc
mov
mov
sbb
or
aas
sub
call
adc
inc
adc
add
daa
sbb
mov
jae
add
add
ljmp
dec
inc
pop
push
lock
jmp
ss
sbb
xchg
sbb
push
xchg
fstp
leave
repz
shrb
out
mov
cwtl
push
xor
ja
mov
dec
sbb
cmp
mov
dec
pop
push
mov
jle
sub
loope
jmp
test
jp
fs
ret
scas
iret
cwtl
out
or
xor
add
adc
pop
cld
adc
cld
mov
aas
rcr
xchg
mov
adc
and
test
add
cs
es
fwait
sub
xor
mov
ljmp
stc
rclb
inc
cmp
movl
icebp
lds
mov
cmc
push
mov
add
iret
lods
xor
orl
pusha
fisubrs
cld
sub
sbb
mov
cmp
sub
jge
das
mov
imul
cmp
sbb
xchg
or
xor
sub
inc
sub
loopne
push
xor
dec
dec
xor
ds
or
inc
inc
push
into
das
jg
andb
ja
adc
push
push
movsb
xor
xchg
sub
and
mov
insb
loopne
dec
push
movsl
cmc
add
pop
aad
pop
pop
sub
popa
sub
daa
cmp
xlat
xchg
outsl
ret
mov
or
jnp
xor
and
jmp
add
dec
mov
les
adc
aad
jmp
gs
mov
sub
sub
test
inc
mov
mov
mov
cs
sub
call
hlt
jno
inc
es
dec
rcrb
repnz
or
mov
popa
dec
pop
repnz
xchg
mov
sub
mov
lcall
xor
and
test
sbb
test
or
adc
mov
sub
inc
and
push
add
cld
aam
adc
jne
cmp
pop
int3
into
mov
fadds
jbe
notl
jmp
adc
es
push
enter
and
ss
dec
adc
xchg
pusha
aaa
adc
xor
and
or
das
xchg
or
push
mov
ds
shl
or
sub
jb
loopne
push
ficompl
aad
aam
fldenv
scas
cmp
out
add
inc
or
jecxz
inc
or
rcll
fucomi
dec
dec
loope
shrb
sub
into
ret
pop
mov
sbb
mov
cmc
adc
clc
dec
daa
add
ds
mov
add
inc
js
inc
movsl
ret
jno
mov
xchg
adc
xor
mov
cmp
fisttps
enter
lcall
sub
mov
mov
push
inc
inc
xchg
sub
in
cmp
push
mov
enter
dec
push
fs
lods
or
mov
in
jo
shlb
add
call
add
out
dec
or
add
inc
mov
pop
add
and
out
jae
cmp
push
adc
hlt
out
sub
outsb
inc
dec
mov
pusha
or
cmp
inc
movsl
dec
xchg
sub
test
jmp
pop
push
push
push
aas
sub
ds
push
test
dec
add
xor
push
pop
dec
mov
pop
or
xor
ret
jne
mov
add
cmp
jno
int3
xor
pop
pop
or
test
into
mov
gs
inc
fs
xor
pop
push
adc
mov
add
dec
pop
call
sbb
and
mov
iret
adc
add
pop
imul
fcom
push
das
or
imul
jns
mov
not
mov
in
fldcw
ds
les
hlt
stc
or
mov
test
or
sub
imul
mov
xchg
dec
pop
shll
sub
mov
push
mov
add
jmp
pop
sub
mov
imul
mov
lret
dec
in
dec
inc
or
mov
adc
cmp
fsub
jbe
cmp
cwtl
dec
das
add
add
add
push
or
aas
dec
mov
outsl
imul
fsubs
xchg
mov
xor
mov
xchg
in
add
xchg
jne
daa
out
popf
leave
jp
fsubr
jns
dec
and
push
fwait
stos
pop
add
inc
pop
dec
rcrb
ds
sbb
pop
xor
es
or
mov
icebp
or
push
push
cmp
mov
jns
movsl
mov
xchg
out
inc
mov
hlt
mov
bound
mov
call
loop
mov
sub
shll
dec
xor
jb
jae
xor
adc
iret
popf
add
shr
incb
add
push
fdivrl
and
mov
divl
push
dec
mov
imul
sarb
imul
addr16
hlt
fcomp
adc
call
out
movsl
and
or
repnz
mov
sub
mov
pop
pushf
rcll
adc
jp
rol
mov
out
imul
mov
sub
cmc
in
xchg
cmp
or
cltd
or
sub
fwait
pop
push
push
gs
xor
filds
pop
jmp
clc
push
sbb
and
pop
insl
jbe
push
push
pop
ret
mov
arpl
xor
mov
mov
dec
sub
sbb
push
aam
fildl
adc
push
loopne
ja
outsl
ds
and
add
xor
enter
test
pop
ja
inc
mov
jmp
add
shrl
push
sbb
mov
enter
shl
and
add
and
push
push
push
movsl
in
mov
gs
rolb
int
dec
push
mov
xchg
xor
jmp
sub
flds
out
sar
cld
sarl
aas
test
adc
xchg
or
test
sub
gs
inc
movsl
add
cmp
or
push
push
das
mov
pop
loope
outsl
lcall
and
adcb
sbb
pop
gs
dec
testb
cmpsl
add
mov
jge
dec
cmp
inc
adc
pop
mov
push
js
dec
dec
or
jmp
and
call
stos
xchg
sbb
push
cli
and
jo
or
loope
pop
xchg
nop
scas
movsb
pop
out
jl
jmp
and
gs
cmpsb
mov
or
loop
dec
dec
mov
mov
adcb
iret
jae
mov
lcall
out
jmp
and
xchg
and
int3
sub
xor
xlat
inc
nop
xor
cmp
js
jecxz
adc
jmp
push
int3
push
adc
inc
mov
pop
aas
out
cmp
repz
or
push
mov
adcb
daa
push
push
xor
xor
add
cmp
repz
out
sub
sub
ja
popa
inc
sahf
push
lret
and
adc
pop
pop
rcr
inc
int3
push
jo
stc
or
or
pop
dec
mov
xchg
jnp
add
or
hlt
testb
or
popf
xchg
sbb
xor
push
pop
and
movsb
sbbb
cmp
mov
add
cmp
inc
and
mov
pusha
clc
xchg
not
out
or
pop
inc
mov
pop
xor
jmp
fldt
xor
pop
mov
pop
lahf
les
lea
sub
ficoml
or
gs
call
adc
ljmp
add
xlat
mov
iret
dec
sub
orb
sbb
xchg
add
jmp
stc
push
push
and
push
push
ljmp
pop
adc
lods
mov
pop
mov
lock
adc
fimull
fldcw
cmpsb
jle
enter
pop
or
and
imulb
je
pop
pop
mov
testb
cltd
pop
adc
adc
add
inc
lcall
sbb
jmp
mov
ja
aam
cmpsb
rcll
lcall
and
rorl
rol
out
jbe
mov
test
mov
test
fcomps
mov
dec
dec
pop
or
aaa
in
pop
or
jp
xchg
adc
jp
arpl
jb
lret
sub
xor
push
add
dec
dec
jmp
stos
ss
or
or
mov
jmp
mov
bound
lods
aas
adc
add
jp
or
jmp
add
push
insb
xor
outsb
add
dec
sub
adc
mov
movsl
xlat
sub
lret
sub
xor
int3
call
in
mov
xor
mov
jns
xchg
insl
rcl
insb
inc
and
push
jmp
rorb
push
or
mov
mov
xorb
pop
ljmp
jns
sub
add
jl
mov
xchg
scas
adc
out
pop
cltd
jmp
cmp
adc
jmp
test
cmp
xchg
mov
mov
lret
ret
popa
mov
add
jp
add
jnp
and
loop
cmpb
mov
pusha
mov
adc
jbe
push
add
add
sub
pop
inc
pop
cmpl
sub
dec
insl
scas
and
dec
or
pop
jecxz
xchg
pusha
dec
push
mov
sub
pop
sub
mov
xor
inc
es
xor
add
loope
aas
push
and
jmp
and
xchg
or
push
cli
mov
sub
sub
movsl
inc
mov
sbb
push
and
rcrl
jle
jmp
sbb
pop
arpl
cs
rorl
dec
jg
cld
sub
add
jmp
sbbb
fldcw
cmp
mov
pop
pop
fstps
push
leave
mov
push
mov
test
dec
shrl
iret
cmpb
std
xor
push
fs
dec
cmpsb
sub
inc
fisubs
stos
fbstp
xor
stos
push
test
mov
and
andb
inc
jnp
add
andl
or
push
icebp
sub
cmp
dec
xchg
je
loope
mov
jp
out
adc
push
add
addr16
daa
lret
dec
cmp
add
lods
into
sahf
shlb
add
xchg
or
inc
push
dec
jb
pop
sub
push
repz
cs
and
jge
or
sub
pop
xchg
incb
mov
adc
push
sbb
or
pop
mov
jmp
cmp
sbb
scas
sub
jns
xchg
dec
dec
je
push
and
jo
and
pop
add
cmp
jb
out
in
pop
imul
fildl
sub
add
pop
lcall
sbb
mov
mov
mov
dec
gs
icebp
and
lds
icebp
ret
cmp
push
test
fwait
arpl
in
lock
ds
jmp
xchg
rclb
mov
shlb
sahf
mov
sbb
lcall
pop
or
xor
pop
sbb
pop
jnp
sbbl
jb
mov
pop
mov
cmpsl
mov
fimuls
push
cld
ret
and
aad
lods
enter
repz
push
push
fsts
mov
pop
add
or
dec
mov
movsb
xchg
add
lods
and
lret
jne
adc
shl
mov
push
cmp
adc
lret
mov
adcw
sub
add
cmp
adc
inc
std
or
jp
jb
xchg
or
push
mov
mov
jmp
lods
nop
fs
pusha
sbb
jl
and
sub
stos
xor
movsb
add
pop
lock
notl
xor
xchg
imull
xor
cmpsl
cmp
imul
lock
dec
mov
gs
sbbb
mov
pop
xor
roll
add
mov
mov
sub
xor
clc
hlt
outsl
in
add
jle
divb
jmp
or
cs
jns
and
jmp
in
sub
jmp
mov
xchg
in
cmp
andb
andb
xchg
dec
int3
add
sub
or
push
inc
inc
jg
xchg
das
push
negb
pop
or
nop
pusha
push
push
lock
out
sahf
pop
out
or
push
adc
pop
push
cmp
or
pushf
cmc
pop
fnstcw
push
xor
sbb
or
adcb
imull
arpl
rorl
adc
cmp
jo
sub
rolb
xchg
or
lcall
cmpsl
stc
outsl
jmp
sbb
mov
push
mov
ficompl
movsb
push
sbb
icebp
or
sub
jmp
sub
movsl
sub
sub
pop
fwait
push
xlat
pushf
ljmp
dec
insb
mov
js
dec
xchg
or
jecxz
push
jne
mov
or
in
mov
add
loopne
inc
add
mov
lea
ss
out
repnz
shr
inc
pop
mov
test
mov
sbb
inc
push
rorl
push
or
adc
jbe
fwait
test
add
out
mov
pop
jmp
jecxz
sub
ljmp
pop
popa
cmpb
sub
inc
ret
mov
arpl
out
add
push
test
xchg
xor
pop
push
ds
addps
cwtl
and
lret
or
sbb
add
ds
add
insb
pop
pop
cmp
not
cmp
and
adc
push
adc
jo
cmp
xor
push
pop
push
sub
inc
mov
add
xor
add
je
pop
push
add
inc
rcrb
sub
in
add
das
pop
pop
and
lock
adc
or
inc
or
pop
xor
mov
push
or
pop
hlt
jne
mov
sub
ficomps
addr16
lds
xchg
out
cli
mov
mov
shl
push
sbb
cmpsb
inc
push
test
clc
repnz
btr
push
push
movsb
in
adc
ret
pop
pushl
dec
and
and
and
mov
mov
cwtl
and
ret
or
add
cmc
cli
xchg
xor
push
jb
or
loopne
shrl
enter
push
jmp
daa
decb
sub
sub
je
xchg
lds
pop
push
mov
das
pushf
mov
pop
xchg
ss
je
ret
fcomps
push
outsb
sbb
mov
sarl
cmpb
sub
out
popf
movsl
sbbb
outsl
popf
adc
fs
stos
xor
cwtl
add
mov
in
popa
inc
arpl
sub
pop
push
int3
add
or
outsl
or
fists
orl
push
xor
xchg
pop
pop
jmp
test
push
and
jp
flds
push
mov
add
sbb
dec
and
cwtl
mov
add
test
lret
outsl
dec
mov
or
push
jl
popa
cmp
rcrb
mov
add
insb
lret
scas
add
sarb
stc
inc
fbstp
pop
sbb
cmpsl
push
mov
adc
and
xchg
and
shll
xor
add
and
lea
adc
xor
shrb
dec
mov
xchg
loopne
bound
add
test
repz
ret
or
call
push
add
pop
jmp
enter
ds
pop
xabort
mov
ds
cmp
or
icebp
sbb
sbb
subb
push
jno
mov
imul
or
rorl
cmc
nop
jmp
push
inc
cmpsb
pop
push
xchg
sbb
xchg
seta
jl
das
cmp
enter
pop
lcall
mov
aad
jae
add
neg
loopne
inc
push
adcb
mov
pop
loopne
add
ljmp
mov
xchg
sub
add
push
dec
push
not
xor
push
ljmp
out
dec
mov
lock
scas
insl
xor
push
outsl
mov
or
outsb
or
sub
lcall
movsb
repnz
dec
mov
add
pop
movsb
mov
inc
aaa
popf
inc
popl
push
cli
xlat
mov
xchg
pop
nop
dec
daa
pop
ror
std
push
sbbb
dec
in
mov
shl
bnd
daa
imul
mov
or
psubusw
or
cmp
lret
imul
repnz
fsub
xchg
adc
scas
inc
push
bnd
addr16
cld
sahf
xchg
or
jne
mov
pushf
psubd
cmp
iret
addb
imul
mov
sbb
push
ret
clts
or
dec
outsb
adc
mov
or
fdivr
mov
dec
sub
clc
pop
enter
add
std
or
xchg
jle
outsl
cs
out
push
gs
insl
stos
xor
shrb
repz
xchg
add
cmp
add
nopl
add
and
xor
pop
mov
roll
inc
or
pop
pop
mov
xorl
daa
xor
pop
sub
in
mov
mov
xlat
xor
or
jo
pop
pop
add
call
and
insb
push
sub
lret
pop
xchg
jle
out
push
pop
scas
push
jecxz,pt
adc
stos
xchg
jo
sub
dec
or
adc
sti
ret
push
mov
xor
cld
int
out
ret
jmp
and
lds
mov
add
and
mov
xchg
movsl
sub
mov
push
or
push
xor
out
lret
jae
dec
adc
into
add
shl
shrl
je
add
clc
or
sahf
push
test
lcall
mov
sti
push
or
dec
push
or
cmp
or
je
push
adc
inc
push
jb
cmpsl
je
orl
ja
adcl
push
or
or
add
test
popf
and
sub
loopne
dec
adc
add
pop
dec
add
jmp
mov
je
stc
icebp
push
ret
dec
pop
scas
sub
and
push
dec
iret
mov
push
ud1
pop
xor
xor
push
add
enter
js
insb
inc
xchg
rcll
inc
out
dec
mov
aaa
sub
fisttpll
adc
pop
fcoms
test
imul
ret
sbb
outsb
mov
push
daa
lret
xchg
pusha
icebp
and
movsl
push
jns
test
daa
jp
add
mov
sbb
or
and
mov
or
adc
sub
test
stos
xchg
xchg
pop
stos
pop
lods
dec
pop
cs
add
not
dec
push
repnz
jmp
dec
stc
jnp
mov
mov
mov
push
sub
mov
xlat
cmpsb
test
pop
pop
in
dec
mov
pop
push
out
pop
pop
stos
cmp
dec
sub
data16
inc
mov
int3
sbb
jne
arpl
dec
nop
and
pop
dec
add
pop
mov
aaa
mov
xchg
adc
xchg
jae
scas
or
nop
clc
push
jg
mov
sub
test
push
sti
xor
or
add
sarb
jnp
lock
mov
repz
pusha
insl
or
inc
jmp
sbb
fxch
addb
mov
ret
xor
sub
shl
push
add
xchg
or
cwtl
movb
loope
cmp
fdivp
push
adc
push
cmp
fucomp
shr
cwtl
pop
roll
jp
imul
cmpsb
fisttpl
push
push
outsl
and
adc
mov
inc
movsl
push
iret
mov
add
pop
add
sbb
and
shl
out
sbb
xlat
jae
iret
repnz
cmp
rorb
jmp
out
and
mov
shrb
mov
mov
and
pop
loop
jne
cmpsl
push
sbb
mov
cmp
ret
add
movsl
test
adc
xor
test
ffreep
jmp
xor
fidivrl
orl
fildl
push
mov
mov
add
inc
out
xchg
adc
jp
mov
sub
push
mov
pop
sub
pop
push
das
jno
cmp
popf
dec
cmc
mov
cwtl
cs
cmp
and
add
jp
adc
add
out
xchg
and
jnp
fsubp
and
dec
pop
stos
sub
dec
xchg
outsb
push
dec
inc
mov
mov
rclb
stos
mov
dec
into
xchg
dec
jle
sahf
bound
das
mov
sbb
cli
mov
pop
imul
lahf
xchg
add
cmp
push
and
cwtl
mov
inc
cvtps2dq
mov
jle
pushf
cmp
repnz
push
adc
adc
ss
shrb
divb
jnp
movb
and
pop
mov
xchg
sub
pushf
arpl
xchg
gs
or
or
negl
neg
cmp
loopne
shlb
dec
xor
std
dec
sbb
or
adc
pop
fcompl
gs
adc
add
cmp
push
jnp
inc
mov
js
mov
push
jmp
loopne
decb
lret
scas
filds
dec
std
loope
test
repnz
loopne
cmp
pop
sub
inc
daa
mov
dec
ret
js
stos
inc
and
or
push
cmp
and
loopne
xchg
push
or
sub
cmpl
sarb
lcall
lret
sbb
es
add
add
imulb
and
sbb
cltd
pushf
and
sub
pop
pop
enter
andl
je
inc
imul
xchg
cwtl
add
pop
ret
jmp
or
ds
movaps
pop
or
lahf
ficoml
ret
mov
dec
push
jae
sub
push
pop
xor
icebp
jg
push
or
and
je
jo
or
xor
call
sbb
adc
cmp
or
mov
stos
and
sub
cmp
fiaddl
dec
sar
scas
push
lcall
repz
in
sub
fstpl
xlat
jbe
add
mov
add
jnp
pop
add
xor
dec
pop
mov
int
cmc
sub
add
cli
pushf
push
mov
int
sub
or
sbb
fidivl
mov
sub
mov
nop
jge
loope
pop
jl
and
movl
and
jnp
addl
cs
ljmp
out
add
xor
cli
pop
xchg
sbb
xor
lock
cmp
xor
mov
pop
sub
ficoms
or
jns
pop
dec
mov
pop
call
rcrl
and
scas
xchg
les
fdiv
loop
xor
adc
add
or
orb
icebp
mov
rolb
std
adc
mov
loope
jnp
inc
filds
mov
add
je
xchg
xchg
or
arpl
rol
imul
jge
movsl
push
cmpsl
jb
jno
xor
mov
inc
and
fdiv
jg
sub
pop
xchg
fs
push
xlat
lret
sub
push
dec
jmp
nop
je
imul
test
push
mov
imul
sbb
dec
push
push
data16
cmp
mov
jp
stos
movsl
add
fidivrs
dec
addl
xor
cltd
fwait
je
dec
xor
dec
cmp
jo
loopne
sbb
push
push
jmp
pop
nop
sub
pop
jg
lret
xchg
pop
or
dec
jmp
xchg
cmpl
jne
jmp
loope
jns
inc
push
fs
inc
add
loope
clc
adc
decb
dec
cwtl
cmp
bound
cmp
adc
mov
in
lods
mov
inc
jmp
inc
shlb
pop
push
loop
mul
stc
cmpsl
sbb
icebp
leave
or
aas
dec
dec
sbb
lods
or
lods
and
lret
lret
decl
dec
inc
roll
mov
pop
inc
mov
push
or
or
xchg
jmp
push
cmc
sub
push
push
cmp
sub
pop
mov
xor
add
mov
push
mov
jns
cmp
cmpsb
jge
add
mov
incl
addr16
jmp
mov
dec
and
sub
add
jno
repz
shr
pop
movsl
or
mov
or
xchg
sub
mov
divl
faddl
cwtl
push
and
cltd
jns
leave
lahf
jle
call
mov
mov
pop
push
adc
ljmp
leave
cmp
pusha
dec
add
and
mov
cmc
push
add
in
aaa
scas
dec
add
push
nop
push
xor
jno
mov
mov
and
add
andl
popa
pushl
pop
lods
nop
mov
enter
pop
pop
nop
data16
xor
or
dec
adcb
bound
sbb
sbb
jge
int
and
mov
das
jmp
adc
or
repnz
jecxz
jl
outsb
add
pop
pop
ficoml
shl
add
mov
push
orb
sub
out
adc
or
ja
mov
lret
mov
lock
and
scas
dec
or
add
mov
mov
mov
fiadds
sub
out
push
dec
pop
pop
sbb
repnz
jle
xor
cmp
sub
fadds
xchg
sub
popf
sti
mov
push
push
jmp
das
fsubrp
sub
scas
xchg
rcrl
pop
in
hlt
sbb
pop
or
push
popw
or
push
cmp
lock
dec
pop
jp
pop
mov
into
loopne
dec
mov
bound
inc
cmp
push
cmpl
inc
mov
cmp
jmp
mov
sbb
sub
mov
lods
sub
push
loope
dec
and
sti
xchg
push
push
push
push
or
es
and
adc
push
lods
inc
inc
or
push
push
mulb
mov
fistl
incl
call
sti
popa
xchg
push
add
pop
into
pop
inc
mov
shll
rorl
xchg
lcall
test
lods
cmp
std
cmp
out
in
call
cmp
xor
jno
push
push
jnp
inc
or
insb
sbb
ja
pop
and
adc
sub
jne
xlat
add
mov
dec
jmp
sub
mov
icebp
popl
xchg
ret
stos
cmp
mov
loopne
cmp
xor
or
mov
xor
dec
cwtl
dec
dec
jae
jnp
push
jmp
ret
cmpl
jno
shll
sub
mov
and
lahf
in
lods
and
mov
and
xchg
push
pop
pop
int
mov
mov
out
sub
mov
inc
cwtl
jne
dec
and
pop
shlb
and
xchg
add
les
push
adc
bound
in
lods
and
or
pop
lock
das
jno
mov
mov
cmp
sar
sbb
push
lahf
pop
pop
or
dec
mov
xchg
adc
cwtl
xor
cltd
int3
insl
leave
adc
xchg
or
popf
xor
pop
out
xor
pop
cmp
pusha
ret
sbbl
push
neg
lcall
shrl
jmp
daa
xor
push
sub
dec
mov
call
add
bnd
icebp
das
lock
negl
lret
pop
sub
cmc
push
pop
add
xor
push
pusha
adc
sbb
add
pop
adc
jmp
cmp
sbb
movsb
add
push
mov
xchg
ret
je
orb
pop
es
jle
mov
ret
sub
sub
lock
into
and
ret
dec
rolb
ror
push
xchg
pop
mov
lret
push
mov
lods
jbe
clc
add
inc
or
or
xchg
xor
push
dec
and
inc
pop
jae
xor
fildll
xor
call
push
add
jo
sub
shlb
and
sbb
sbb
jmp
pop
add
bts
add
fwait
or
sub
pop
pushf
add
push
mov
jne
das
adc
clc
pop
xchg
mov
pop
jo
outsl
dec
adc
inc
pop
lea
xchg
push
xchg
xchg
inc
loop
dec
or
xor
add
test
notb
aas
das
sub
xchg
jp
call
cmpsb
nop
sub
int
sbb
sub
or
pop
xchg
sub
cmp
push
jo
pop
and
ret
clc
xlat
lock
cwtl
pop
dec
lret
in
imul
clc
rorb
pop
push
cmp
pop
add
inc
or
mov
out
sub
cmpsb
fmulp
adc
pop
mov
adc
pop
jge
adc
lret
fnsave
enter
inc
add
inc
dec
sbb
ficomps
sbbb
add
les
es
in
je
and
stos
or
xchg
pusha
or
push
test
cmp
inc
aaa
inc
and
xor
cmp
movsb
enter
pop
and
rclb
mov
es
bound
cmp
xchg
mov
ret
add
push
into
int3
loop
adc
push
fs
pop
push
jp
xchg
loope
and
add
or
hlt
mov
or
in
scas
jae
mov
sbb
inc
or
sbbl
xchg
repz
mov
aaa
sbb
add
push
popf
dec
cli
xlat
call
jmp
inc
xchg
dec
add
dec
add
mov
dec
pushf
push
adc
ljmp
and
mov
jp
adc
scas
fmuls
mov
into
ss
or
push
push
lahf
lea
bound
call
mov
cwtl
inc
xor
mov
pop
enter
jae
addb
and
pop
sub
cld
pop
gs
xorb
jmp
pusha
cmpsl
pop
shl
xor
adc
lahf
push
jb
dec
add
push
fists
mov
daa
push
in
jb
cwtl
jecxz
je
mov
pop
adc
aam
pusha
mov
jae
add
ja
sub
xor
adcl
inc
mov
or
lea
push
inc
fcomps
ljmp
cmc
test
movb
mov
pop
mov
inc
or
mov
add
into
sahf
sub
mov
push
add
test
dec
mov
stos
lea
cmp
push
push
stos
mov
out
adc
add
xor
adc
fidivs
xlat
dec
push
pop
mov
or
dec
adc
arpl
dec
push
sahf
push
inc
cmp
ljmp
adc
add
les
adcb
mov
lods
add
push
aam
xchg
pop
sub
cwtl
push
ja
mov
cmp
add
adc
test
or
cmp
pushf
or
pop
inc
out
cli
nop
push
lret
addr16
sbb
cmp
pop
and
gs
sub
ret
je
daa
shrl
xchg
movsb
push
adc
movsl
add
addr16
cli
into
or
scas
push
push
popa
sub
loopne
mov
jmp
cwtl
cmc
rolb
dec
lcall
inc
add
and
ret
or
adcb
outsb
pop
inc
fstpl
insl
push
mov
shl
andb
cmpsl
pop
mov
pslld
mov
add
mov
sub
pop
jae
ret
stc
jmp
mov
popa
ds
xchg
push
pop
out
or
lock
or
push
int
int3
mov
push
loopne
pop
push
in
pop
das
inc
loopne
push
jno
addr16
adc
test
push
addb
sub
inc
ror
push
mov
add
adc
sub
rcrl
inc
jb
scas
dec
mov
or
add
stc
icebp
ss
sbb
push
clc
pop
cmc
cmpb
mov
lahf
data16
xor
push
dec
loop
jecxz
xor
loopne
xchg
rcl
xchg
or
and
cmp
inc
loope
pusha
xor
jp
cmp
pop
and
filds
mov
inc
mov
mov
stos
dec
jp
aam
jmp
mov
sti
push
addr16
pop
out
pop
push
lods
mov
jg
mov
mov
inc
arpl
add
dec
push
cmp
mov
pop
and
push
jle
dec
add
les
nop
xor
adc
aad
cmp
add
inc
ds
ret
out
dec
mov
xchg
push
or
testl
pop
subl
out
add
push
and
dec
pop
xor
sub
arpl
lcall
inc
xchg
daa
xchg
shll
sub
ds
cmp
stos
js
pop
xchg
jbe
fisubl
mov
xchg
shrl
push
cmp
mov
pop
cli
sub
imul
and
mov
add
push
cwtl
and
xor
xchg
push
push
in
dec
push
mov
lock
push
xchg
push
js
sub
cmp
pop
ljmp
lahf
sbb
pusha
and
mov
fbld
and
sub
shrl
sbbb
mov
inc
clc
mov
iret
leave
push
add
lret
clc
jb
and
xchg
cs
cmpsb
movsl
sub
cmc
ret
jmp
push
out
outsl
pop
sbb
sub
fcmovnbe
js
add
jp
xor
in
push
jo
jo
loope
fcompl
test
sub
inc
addb
rcrl
mov
ss
xor
xchg
cmp
scas
sbb
inc
sub
iret
cmp
sub
inc
scas
les
loopne
fcoms
xchg
adc
xor
neg
jne
push
push
jmp
mov
sub
lods
stos
adc
addl
adc
jl
roll
mov
and
ret
in
movsl
adc
inc
cwtl
or
pop
jle
add
push
mov
add
jmp
mov
push
mov
mov
push
loop
pop
int3
imul
call
ja
or
or
sub
mov
push
lods
fs
sbb
dec
add
mov
mov
and
push
inc
andb
sbb
loopne
shll
pop
pop
dec
xchg
sub
or
int3
or
arpl
jns
lcall
jne
push
insb
stos
dec
adc
incb
cmp
leave
sbb
and
mov
add
loop
and
pop
inc
es
shlb
add
add
cmp
pop
mov
jg
add
or
hlt
int3
pop
scas
call
add
inc
mov
cs
push
not
dec
ficoml
popf
push
fimuls
mov
jmp
mov
addb
and
mov
mov
sub
push
add
ret
xchg
adc
cmpsb
xor
insb
sbbb
xchg
xor
mov
sbb
andl
fcomps
clc
loop
xor
cmpsl
inc
aaa
mov
pop
dec
cmp
mov
jge
xchg
outsb
pop
lods
or
pop
jno
lods
sahf
iret
mov
and
sub
xchg
and
jns
cmpsb
cmp
adc
stos
pop
jmp
push
movsb
dec
dec
cmpb
sub
mov
cmp
aaa
in
insb
lret
inc
jbe
mov
stos
sbb
sub
xchg
xor
rolb
dec
or
movl
ret
je
pop
clc
add
push
jmp
rolb
je
xor
cmp
out
rcrl
inc
insb
mov
loop
pop
mov
cmp
jmp
push
push
push
add
push
pop
pop
jg
rolb
insb
adc
sbb
pop
daa
into
cs
pop
adc
jge
jns
imul
cmp
mov
pop
in
ljmp
subb
inc
repz
jg
xchg
insl
shl
dec
cmpb
shl
mov
add
inc
ljmp
movsb
and
aaa
mov
xor
fs
outsb
pop
jmp
aam
je
iret
xchg
push
ret
or
inc
daa
in
insb
jbe
mov
or
sbb
test
sub
adc
fldt
lock
mov
pop
popa
int3
inc
scas
push
daa
pop
subb
push
icebp
clc
mov
xchg
pop
push
sarb
adc
addb
orl
sbb
cmp
dec
pop
in
or
sti
push
mov
fcom
out
and
add
das
lods
out
and
cltd
stc
pop
sub
incl
insl
lret
push
mov
push
movb
sbb
jg
push
movsb
or
jae
std
mov
lcall
push
nop
sub
mov
pop
pusha
movsl
mov
mov
xchg
ror
neg
xchg
loopne
in
leave
sbb
push
push
mov
call
in
imul
dec
inc
or
pop
test
sub
inc
sub
pop
push
push
aam
mov
inc
jne
dec
shrl
andb
pop
cmpsb
and
jmp
ja
mov
push
or
faddl
pop
les
push
xor
adc
out
cmp
jmp
imul
sbb
mov
sub
scas
repnz
push
mov
jmp
mov
inc
or
das
jle
cmp
call
sbbl
enter
fmuls
xlat
add
add
pop
add
sbb
add
lret
xchg
inc
dec
push
clc
jo
mov
sub
pop
jbe
push
xchg
clc
out
lret
fs
xchg
sub
ss
pop
push
jmp
loop
imul
pop
decb
ja,pt
mov
out
fbld
dec
sar
xor
add
fisttpll
adc
xor
mov
mov
fmuls
sub
ret
fbld
dec
loope
out
or
pop
jmp
add
out
add
sarl
and
or
shrl
loope
add
pop
das
and
inc
sbb
inc
pop
mov
mov
and
movsb
dec
aam
gs
add
pushf
fadd
push
scas
sub
cltd
jl
aaa
or
mov
adc
sbb
mov
insb
mov
cmpsl
out
xor
cmp
and
add
rorl
sarb
dec
add
adc
jns
movsl
pop
rcr
fildl
sub
dec
add
fucomp
rcrb
in
outsl
in
cs
pushf
pusha
jle
lcall
popa
jbe
dec
cmp
fdiv
adc
and
sub
add
cmpsb
jl
lods
into
in
add
lahf
push
or
add
and
aam
data16
adc
testl
je
pop
adc
dec
sbb
sub
ret
mov
jb
pop
divb
jmp
sbb
sbb
clc
push
cmp
mov
jmp
push
ljmp
cmp
adc
pop
pop
add
add
rcrl
out
jmp
enter
mov
stos
push
repz
int3
outsb
mov
mov
sub
dec
cmp
jge
je
shr
xlat
push
rorl
std
mov
jp
ret
lods
mov
out
push
cmp
or
mov
pop
sub
jbe
rcr
mov
dec
bound
lock
and
cvtps2pi
cwtl
popa
scas
sub
xchg
push
or
add
jmp
fcomps
xchg
pop
fldenv
jle
adc
add
sbb
aaa
jg
xorb
imul
sti
add
mov
add
into
rorl
fsubs
dec
cltd
andb
adc
nop
rcrl
lock
or
and
dec
rorb
push
and
or
pusha
in
fstps
shrl
cmp
in
pop
pop
fcomps
xor
in
push
push
add
lahf
stc
xchg
imul
jge
frstor
sub
mov
inc
pop
and
add
jnp
cmp
pop
push
clc
cmp
inc
xor
pop
addr16
aad
sub
mov
jae
adc
jl
jle
outsl
or
cmpb
fidivrs
push
pop
pop
xchg
pusha
inc
jae
outsb
shl
fwait
push
loopne
mov
push
insl
or
cld
pop
icebp
jle
inc
push
and
mov
cs
dec
jne
outsl
jge
xchg
xor
pop
push
popl
mov
add
or
or
jle
scas
push
pusha
pusha
push
mov
cmpb
imul
and
xchg
jle
pop
insb
in
loop
in
adc
jp
sbb
jmp
mov
notl
cmp
adc
add
cmp
cmpsl
push
dec
dec
add
pop
pusha
mov
nop
mov
add
je
mov
bound
and
jg
jl
mov
jecxz
dec
scas
jl
enter
ret
cmp
addr16
rcrl
or
sub
lcall
iret
xchg
nop
push
add
pop
or
push
sahf
and
mov
or
mov
cmp
cmpsl
and
or
inc
sub
jge
pushf
jmp
fnsave
sarl
xor
hlt
mov
rorb
inc
add
cli
add
inc
lods
aad
pushf
and
push
loop
lcall
lahf
insl
bound
xor
jo
daa
mov
push
push
lock
xchg
jmp
bound
rcll
xchg
xor
add
dec
and
lret
add
cs
jmp
jns
js
dec
aam
mov
sub
daa
btr
mov
sub
and
aad
jg
movl
aad
sub
cmp
or
sub
iret
adcb
or
aaa
idivl
jae
add
mov
mov
jmp
xor
faddp
es
aaa
bound
dec
arpl
sub
iret
xor
movsl
adc
sub
repnz
mov
push
push
mov
test
call
dec
add
pop
xor
or
aas
jmp
sub
sbb
push
pop
sbb
pop
hlt
lcall
rcll
mov
mov
test
cmp
ret
xchg
adc
pop
mov
mov
sub
add
mov
push
pop
not
subb
test
out
shlb
cmp
sub
jmp
add
and
iret
push
inc
scas
ja
jl
push
dec
mov
push
pop
lret
xor
push
lds
iret
aam
je
cwtl
pop
mov
sub
adc
mov
mov
jb
push
pop
inc
add
pop
inc
neg
dec
pop
xor
repz
pop
mov
add
xchg
mov
jmp
pop
cmp
push
dec
fcmovnb
or
jmp
enter
sub
js
inc
add
push
sarb
pop
mov
out
enter
ljmp
testl
std
mov
popf
pop
cmp
inc
add
aas
sbb
mov
mov
inc
adc
push
ret
mov
jp
and
es
jne
in
sub
dec
or
push
push
sub
cld
mov
cmpsb
push
test
dec
add
lods
or
push
bound
scas
dec
and
xchg
push
push
push
adcb
sahf
test
inc
cmp
xor
adc
xor
into
ficoms
nop
into
push
push
cmp
mov
cld
mov
sub
enter
ret
mov
mov
rorl
mov
mov
ss
push
loop
imul
xchg
xor
pusha
dec
ds
add
test
push
dec
sub
pop
xchg
sub
mov
cmp
lahf
and
or
xlat
push
and
jb
add
jmp
pop
inc
imul
add
popa
loopne
xchg
pop
push
sub
jmp
jg
addr16
movsb
mov
adc
adc
test
push
or
or
je
int
add
push
push
dec
xchg
ss
enter
das
ss
ret
adc
mov
pop
cmpsb
push
mov
sub
push
les
orb
sarb
filds
pop
mov
mov
xor
cmpsl
hlt
adc
cmpsl
push
jl
xor
icebp
or
jmp
outsl
cmpsl
mov
mov
push
pop
dec
mov
push
xor
fsubs
out
ds
and
xor
shll
push
mov
jp
iret
jns
pop
repz
add
jae
negb
arpl
rorb
and
out
mov
xor
jmp
add
add
push
data16
push
pop
push
inc
jno
cmp
mov
jp
lret
negb
xlat
jmp
add
push
and
add
and
ss
outsl
jmp
mov
sub
ja
jbe
push
notb
dec
sub
jp
nop
inc
sbb
out
fwait
ret
aam
sub
call
imul
dec
outsl
aad
mov
add
cmp
mov
sub
popf
cwtl
fs
pop
loope
mov
push
filds
add
cmp
jmp
es
add
jmp
inc
inc
shll
shrb
daa
xchg
and
scas
adc
sub
shl
loop
xchg
clc
push
subb
into
add
xlat
pop
and
nop
add
pop
mov
cmp
jmp
inc
shrl
lcall
and
push
fsubrs
sbb
sub
or
or
and
jl
sbb
xchg
adc
mov
inc
dec
insb
xorb
push
shr
sub
dec
inc
je
add
xchg
dec
xchg
inc
xor
bound
adc
rcl
push
imul
sub
jmp
call
inc
sub
test
push
dec
pop
jecxz
repnz
les
sbb
mov
test
dec
mov
and
mov
mov
ss
dec
adc
xchg
adc
pop
test
cmpsb
stos
out
loopne
rcl
or
add
or
and
std
or
jg
sub
mov
cmc
call
mov
xchg
xlat
test
add
jne
push
inc
stos
subb
adc
inc
gs
sbb
insb
and
xchg
adc
cli
sub
orl
adc
pop
jb
add
jp
or
inc
sub
and
sbb
xor
mov
pop
xlat
in
or
mov
mov
mov
std
pop
sub
aas
xchg
mov
leave
or
imul
add
fmuls
outsb
jb
push
push
cmp
in
cmpsb
dec
jmp
push
scas
mov
cmp
loopne
jmp
fisubs
mov
sbb
sub
xor
sub
inc
jp
add
repnz
adc
decl
into
jle
xchg
in
adc
pusha
lods
push
jmp
pop
sbb
sbb
jle
int3
or
out
add
pushf
xorb
dec
ret
test
rorb
and
das
lock
jae
jl
mov
add
pop
dec
sbb
add
xor
pop
dec
cmc
insl
add
sub
dec
cmp
cltd
inc
mov
insb
sub
in
clc
mov
jnp
cmp
popa
sahf
dec
push
push
cltd
cli
push
in
inc
rclb
xchg
imul
ret
push
xchg
cmp
pop
hlt
data16
and
repnz
xor
mov
push
sub
ficoml
in
or
adc
repnz
je
or
mov
xor
dec
mov
mov
mov
outsb
mov
jle
and
adc
ljmp
pop
movsbl
adc
sub
je
jnp
data16
mov
pop
repz
sub
scas
lods
jns
int3
or
outsb
add
sbb
mov
sub
lea
pop
xor
push
mov
nop
dec
cmp
insb
cmpsl
aas
push
push
sbb
push
lret
in
jge
ljmp
push
mov
or
imul
add
ret
test
js
mov
and
sub
jmp
lea
mov
xor
mov
and
shlb
add
add
and
jbe
push
es
and
rcrl
add
icebp
add
enter
pop
sti
and
sub
add
leave
mov
inc
enter
repnz
out
xchg
pop
xchg
and
stc
cmpb
add
cmp
dec
xchg
sub
mov
aam
orb
jno
push
sub
stos
mov
pusha
test
pop
out
add
add
pop
mov
cltd
sub
xor
popa
outsb
sub
es
lods
push
lds
and
xchg
movsl
insb
jp
jmp
sbb
push
xor
add
add
jmp
xchg
ljmp
fistpl
mov
mov
jb
xchg
mov
enter
add
das
sarb
mov
loopne
inc
ljmp
inc
jge
dec
fiaddl
iret
push
push
mov
das
test
clc
adc
jmp
arpl
aaa
xor
pop
xor
fs
pop
subb
inc
adc
dec
mov
add
sub
dec
jmp
jb
sbb
sbb
xor
in
sub
push
push
dec
cmc
je
out
lret
sbb
pop
jmp
shr
rorb
aad
sbbl
pop
add
ret
xor
cmc
inc
pop
jge
push
add
add
sub
jbe
mov
rcrl
dec
mov
pusha
rclb
nop
addr16
jmp
xlat
inc
push
mov
test
sbb
xchg
dec
std
jae
or
push
rolb
in
ret
or
xor
aad
cli
iret
lds
scas
pusha
out
pop
push
enter
push
inc
jmp
sub
mov
insb
sub
mov
inc
push
arpl
test
test
add
clc
jg
pop
push
cli
add
fcomps
bound
dec
ja
adc
nop
add
jns
xchg
fsubrl
jle
dec
loope
xchg
imul
or
sub
mov
mov
sub
add
mov
or
out
xor
push
scas
push
or
ret
es
fsub
shrb
or
xchg
adc
arpl
mov
mov
ret
mov
test
addr16
mov
inc
cld
incb
neg
or
loope
das
pusha
sti
jg
sahf
mov
xor
dec
add
adc
flds
jmp
or
pop
xor
xchg
push
mov
cmp
shlb
mov
dec
out
sub
pop
ficoml
mov
cmp
fucomi
les
jmp
add
xor
ret
jns
loope
inc
sar
bound
push
push
sub
fsubs
xor
enter
outsb
cmp
jnp
movsb
mov
dec
adc
pop
sub
mov
jne
pop
xchg
rol
das
jbe
test
das
xchg
es
sub
inc
sbb
inc
shrl
insb
outsl
cmp
push
add
cli
repnz
test
test
daa
repnz
and
pop
mov
mov
sti
in
xchg
pop
scas
enter
mov
movsb
mov
cmc
push
push
mov
add
gs
loope
add
sub
cmp
dec
inc
xlat
push
addr16
cmp
pop
jne
jg
jmp
inc
out
bound
inc
and
aam
scas
xor
xor
cli
aad
adc
mov
dec
mov
push
sbb
sub
orb
push
mov
pop
jecxz
add
mov
mov
nop
rorl
pop
add
mov
pop
lods
pop
gs
push
shr
icebp
out
call
scas
xor
inc
pushf
inc
dec
orb
push
mov
loop
push
outsb
push
pushf
cmp
sub
and
xor
arpl
pop
xchg
pop
or
stos
pmullw
rorb
mov
mov
push
jnp
push
mov
pop
inc
and
push
xor
sbb
push
shll
pop
sub
aam
add
cmp
repnz
pushf
mov
jle
or
test
mov
or
jmp
cmc
pop
xor
push
or
and
stc
mov
ja
or
add
jecxz
or
in
dec
mov
jbe
shlb
mov
or
inc
pop
call
mov
xchg
enter
sbb
sbb
jbe
pop
dec
imul
dec
cltd
pop
imul
or
jge
jmp
add
push
push
jmp
cmp
dec
cld
sbb
fldenv
mull
xchg
push
add
push
xchg
in
adc
test
push
pop
lret
imul
push
push
jmp
mov
add
insl
push
in
jmp
or
dec
jg
pop
cmp
sub
jp
or
pop
inc
test
adcb
mov
mov
lcall
push
iret
xchg
bound
mov
push
mov
in
int
jno
cmp
imul
sbb
xor
insb
andb
xchg
rolb
pop
jl
sbb
or
add
adc
leave
addb
sub
inc
mov
jno
popa
adc
xchg
sub
and
leave
xor
js
jmp
sbb
ror
adc
jmp
repnz
das
jmp
cmc
inc
cmpb
push
lahf
shlb
notb
out
mov
add
pop
jae
add
orb
jle
jo
mov
inc
dec
xchg
not
out
add
pop
sbb
push
in
pop
mov
dec
loopne
cmpxchg
inc
rcrl
out
cmp
push
cld
iret
outsb
sbb
sbb
sub
add
mov
jmp
out
jne
andl
pop
loopne
push
cmp
ror
inc
jge
lods
mov
leave
pop
daa
jmp
rol
push
data16
ds
test
push
movsl
cmp
popa
fcmove
add
jne
adc
scas
loopne
jp
push
sub
popf
lret
add
push
das
test
mov
iret
or
lods
mov
add
lret
daa
pusha
in
mov
inc
repnz
or
pop
aam
pop
bound
loop
mov
dec
cmp
xor
or
es
clc
pop
and
jmp
mov
psllq
data16
iret
push
add
push
mov
js
sarl
mov
test
addb
femms
mov
push
hlt
adc
mov
xchg
inc
push
xor
pusha
pop
sbb
xor
push
popl
jecxz
cmc
aas
push
lahf
push
xor
lea
push
pop
inc
add
mov
mov
pop
ret
int3
fcoml
xor
and
and
mov
not
push
lcall
imul
lods
adc
sti
das
jne
neg
xchg
or
cmc
bound
mov
and
pop
add
cmpsb
sub
sub
jnp
jl
sahf
xor
int3
cs
gs
xor
adc
sub
rcl
inc
rclb
enter
push
push
fimull
xchg
lods
and
jno
movsb
dec
fsubs
inc
push
fdiv
pop
dec
xor
jb
add
pop
icebp
sbb
mov
sub
add
sbb
add
loope
add
sbb
mov
jmp
mov
mov
shlb
fstps
sub
rorl
jp
add
fsubl
iret
inc
je
lds
rcrl
sub
cltd
cltd
lahf
jle
int3
mov
push
hlt
aam
push
scas
adc
mov
mov
loope
lahf
nop
xor
push
sub
and
shl
xor
negl
push
mov
push
rorl
leave
add
xor
jnp
mov
adcl
sbb
jl
jmp
pushf
or
ja
sar
lds
rcl
or
fstl
ss
scas
mov
roll
pop
sub
fldcw
lock
pop
imul
shlb
sub
jmp
or
sarl
adc
add
fsts
lcall
adc
shl
in
hlt
pop
xchg
mov
in
add
xchg
pop
scas
mov
div
fwait
xor
sub
xor
and
mov
or
jmp
push
into
push
or
in
insb
mov
xchg
mov
mov
add
jmp
cs
adc
enter
mov
ret
push
popa
and
rorb
push
and
clc
loope
cmp
test
mov
xchg
xor
xchg
insl
adc
pcmpeqb
push
es
fwait
movsl
sbb
or
imul
adc
or
lahf
repz
jmp
and
xor
lret
pop
daa
out
ljmp
arpl
jmp
cmc
and
mov
pop
out
dec
ljmp
pop
push
rorb
mov
shrb
or
fbld
ss
jmp
dec
cltd
push
sub
ficoml
rcll
test
inc
popa
mov
jmp
lods
push
xchg
sub
mov
mov
insl
inc
or
mov
clc
jb
sbb
or
test
inc
cli
inc
nop
mov
notb
jnp
lret
jo
out
pusha
jg
and
xor
mov
sbb
cld
pusha
hlt
cmc
mov
cwtl
sub
pusha
stos
pop
fldcw
pop
push
mov
add
dec
sbb
cmc
ja
dec
outsb
jmp
pop
repz
int3
pop
fwait
and
repnz
mov
loop
push
jmp
lret
add
ss
incl
stos
adc
push
sbbb
push
mov
xchg
daa
nop
imul
xlat
and
mov
ret
mov
loopne
pushl
ficoml
lret
jmp
add
and
jge
sarb
daa
sbb
add
frstor
loop
je
push
loopne
mov
sub
add
roll
lds
mov
jl
cld
xchg
pop
outsb
aam
sar
mov
enter
mov
add
movl
or
lds
mov
pop
cmc
xor
mov
inc
or
push
das
cs
arpl
xchg
mov
in
inc
add
or
test
inc
or
pop
push
out
pop
mov
pop
cmpsl
sub
bound
jge
lock
push
imul
nop
add
movb
adcb
cmp
inc
fwait
das
jmp
rcr
push
mov
call
cmp
out
add
mov
mov
mov
outsl
mov
push
fs
mov
repnz
jmpw
or
inc
hlt
daa
sub
mov
loop
rorl
push
movsl
mov
pop
orl
xor
mov
cld
sub
and
sub
lods
in
in
adc
pusha
rclb
pop
mov
stc
or
dec
ds
cmp
cwtl
lahf
mov
xor
xchg
addl
sbb
mov
sarl
pop
clc
cmp
add
jecxz
adcl
sub
and
adc
mov
pop
sub
shrl
adc
rcrl
jl
mov
rcrb
cs
mov
adc
inc
das
xor
pop
pop
and
pop
xorb
loope
lods
adc
and
add
sub
int3
out
pop
mov
decb
pop
add
subb
sub
mov
sbb
dec
dec
adcb
push
imul
sub
add
mov
mov
or
jle,pn
movsb
xchg
stos
aas
or
jge
in
inc
and
mov
jl
or
mov
push
ja
sbb
enter
sarl
jle
mov
inc
popa
inc
cld
out
add
dec
push
mov
call
dec
shlb
gs
jp
jge
icebp
or
imull
jo
dec
pop
cld
ja
gs
mov
pop
and
jmp
mov
in
cmp
mov
mov
jmp
dec
sbb
loope
or
orb
sub
jl
jp
loop
push
mov
in
outsl
or
out
in
pop
ss
xchg
jno
jmp
lods
cmpb
push
pop
in
mov
mov
inc
add
pop
and
push
fdivrl
pop
addb
pop
jmp
push
or
adc
or
and
jbe
les
add
loope
cmpb
jge
mov
enter
mov
addl
mulb
push
mov
mov
or
hlt
dec
mov
sbb
jb
jl
daa
or
add
aas
test
or
rcll
and
add
hlt
push
adc
mov
mov
xchg
addr16
xchg
jae
ret
iret
fcmovb
aad
add
enter
pop
push
dec
mov
sbbl
mov
pop
sub
lret
sub
push
nop
inc
or
bound
adcb
fcmovne
into
mov
testb
sub
jl
daa
mov
popa
or
aam
pop
push
pop
xor
push
push
xor
mov
xchg
inc
dec
scas
pop
ja
mov
or
push
lahf
dec
inc
mov
inc
dec
push
mov
add
cmp
xchg
cwtl
ds
inc
test
inc
pop
push
flds
push
fld
mov
pop
push
cltd
cmp
aas
mov
or
push
xchg
mov
dec
cmp
add
dec
dec
addl
mov
dec
jg
lock
mov
lea
mov
push
push
jl
adc
sub
adc
sbb
int3
xchg
mov
xchg
or
pop
xchg
not
rorb
loop
addr16
cmp
test
movsl
scas
inc
subb
aas
pusha
xor
lret
sbb
adcb
xor
inc
clc
icebp
icebp
xchg
dec
and
sahf
or
ljmp
cli
pushf
push
iret
adc
lds
nop
or
jmp
daa
xchg
pop
inc
gs
testl
mov
iret
xchg
mov
loop
std
pop
dec
andb
pop
pop
shlb
xor
aaa
add
jmp
mov
dec
sbb
sub
sub
push
add
es
stos
aam
inc
mov
mov
mov
fimull
cmp
rorb
rorl
jle
jmp
push
push
loope
stc
sub
outsb
js
add
sbb
xchg
cmp
lahf
or
and
jecxz
ds
imul
dec
loopne
xchg
fisttpl
je
pop
mov
int3
xor
mov
push
dec
xchg
adc
pop
loope
cs
aaa
mov
mov
jmp
fistps
stos
xor
ss
repz
verr
cmc
push
mov
das
mov
xor
cmp
sub
orl
cmp
and
xchg
adc
jmp
jae
or
cmp
pop
add
mov
sbbb
or
sbb
and
lcall
or
push
test
push
dec
mov
lock
adc
aaa
in
pop
push
pusha
rcrl
push
pop
aas
repz
add
push
imul
sub
shl
aas
lret
inc
sub
adc
push
dec
xchg
incb
shrl
and
jo
cmpsb
add
jge
xchg
pop
jns
sub
jle
pop
pusha
adc
inc
or
into
iret
insl
jecxz
cmp
push
adcb
imul
mov
dec
xchg
adc
add
lods
inc
adc
shr
adc
or
ljmp
and
and
or
arpl
enter
mov
jo
mov
dec
xchg
lea
add
xor
pop
add
sub
jle
cmp
cmp
shlb
inc
and
cmp
push
add
rcrb
loopne
sub
movl
add
push
xor
fcompl
jmp
jl
and
jmp
sbb
ret
test
push
mov
mov
inc
xchg
lds
pusha
and
jbe
imul
mov
sbb
or
push
xchg
mov
stc
pop
push
rolb
mov
add
popf
or
ss
and
in
test
lds
subl
jmp
cli
mov
push
hlt
or
inc
testb
push
add
push
jg
nop
lods
pavgb
add
je
shrb
or
jo
dec
add
pop
pop
loop
js
mov
lea
push
push
and
jmp
into
cmp
fcomps
cmp
inc
cmp
dec
and
and
dec
negb
mov
push
push
add
adc
call
pop
add
call
daa
cmp
or
push
or
das
inc
out
out
cltd
xchg
gs
pop
mov
add
or
xor
mov
ja
jo
mov
dec
and
ret
or
jns
shr
aas
into
in
push
push
push
nop
mov
nop
test
lret
loopne
ds
mov
xor
and
aad
cmp
mov
nop
adc
or
and
pop
pop
mov
push
aad
and
mov
push
pop
or
and
xor
push
testb
test
xor
xor
mov
lcall
sub
rclb
or
inc
push
je
mov
fldenv
js
sbb
flds
in
mov
fcmove
add
out
mov
lods
inc
jmp
adc
loope
adc
jne
stos
xchg
xor
mov
sub
and
sub
push
loop
dec
or
test
jecxz
dec
fadd
push
xchg
dec
hlt
add
orb
add
sub
bound
jle
push
push
fistl
mov
scas
cmp
lods
das
sbbb
insl
jb
arpl
pop
test
add
inc
xchg
stos
pop
out
or
or
add
pop
jmp
dec
sbbl
xor
stc
xchg
sbb
mov
xor
push
mov
add
fdivrp
into
jmp
and
sub
mov
xchg
mov
fiadds
adc
nop
enter
inc
ret
pop
or
push
shlb
or
jno
cs
sbb
push
mov
or
mov
pop
push
jmp
jl
or
andb
hlt
push
inc
push
loop
ret
jmp
idivl
or
frstor
push
add
cltd
push
push
add
or
jmp
ljmp
pop
mov
imul
ror
cs
inc
cmp
mov
pop
gs
pop
cwtl
add
pusha
jnp
add
and
shr
jge,pn
aas
mov
in
xor
cmpl
mov
jp
mov
push
xchg
adc
popf
jnp
in
scas
mov
jmp
mov
dec
stc
jbe
mov
pop
push
add
inc
lcall
or
xchg
push
push
xor
dec
repnz
cmp
data16
scas
nop
mov
xor
pop
adc
mov
mov
push
popf
jno
test
cmp
dec
add
lahf
jp
cld
adc
sbb
push
push
push
push
mov
or
add
pop
push
das
sar
mov
sbb
addl
jge
pop
pop
adc
addr16
cmp
or
jmp
xchg
jo
repz
bound
or
adcl
int
push
daa
cltd
into
push
adc
in
pop
rorl
enter
and
lret
push
pop
test
mov
pop
fimull
enter
xchg
push
xor
into
or
cli
and
dec
push
sub
dec
int3
jge
mov
pop
pop
in
nop
dec
cmp
jno
imul
inc
sub
mov
addb
jne
push
ja
pop
inc
test
sbb
jnp
mov
mov
aaa
hlt
sbb
add
sub
cs
jle
add
jmp
repz
xchg
hlt
insl
or
pushf
pop
push
cmp
adc
adc
dec
arpl
mov
pushf
xor
pop
dec
inc
xchg
jge
fsubr
repnz
add
jmp
sbb
jl
dec
iret
xchg
rclb
lahf
jp
jb
pop
rclb
stos
mov
lret
push
add
xor
pop
mov
xor
inc
push
out
push
and
stos
repnz
push
push
cmp
mov
xor
aaa
mov
push
test
xchg
repz
inc
mov
add
jmp
inc
and
into
dec
popa
mov
jmp
mov
sub
mov
sarb
neg
jmp
pop
std
fwait
add
mov
sub
pop
sub
imul
je
pop
icebp
adc
jb
bound
jo
movsl
and
inc
or
in
test
sahf
sar
gs
addl
stos
cmp
dec
pop
or
movsl
loop
pop
xor
into
sub
dec
in
in
rcl
fbld
ljmp
xor
gs
int3
outsb
roll
jle
ja
cmp
popf
std
daa
sar
jnp
mov
inc
add
pop
or
hlt
and
ror
sbb
add
pop
cmc
mov
mov
lret
push
add
mov
inc
orl
adc
add
mov
dec
cmpsb
loopne
inc
xor
movsl
push
push
icebp
test
cs
test
addb
es
xchg
icebp
out
xchg
ret
mov
test
stos
mov
push
pusha
outsb
loope
push
dec
sub
rorl
out
add
repz
out
int
cmp
jbe
cwtl
lret
cwtl
cmp
jb
jge
cmp
sub
rcr
adc
in
push
jg
add
insb
and
adc
out
xor
daa
jmp
and
rolb
mov
cmp
or
sub
insl
push
add
mov
sbb
aad
sub
mov
xchg
popf
jae
mov
xchg
and
out
or
pop
insb
jns
mov
aas
test
pop
repnz
and
aas
mov
enter
scas
in
fistps
push
mov
push
lcall
jg
pop
mov
pop
and
jmp
or
and
out
imul
cli
add
or
std
dec
jnp
add
into
stc
out
mov
push
sub
mov
sub
std
test
or
int
push
std
dec
jnp
pop
inc
stos
jne
pop
das
testb
push
push
sub
pusha
insb
test
xor
mov
daa
add
add
adc
hlt
out
mov
adc
mov
xor
or
adc
in
add
ds
mov
out
and
out
mov
lods
daa
loop
nop
adc
inc
and
rcl
cmpsl
jl
aas
enter
push
add
pop
and
ret
outsb
push
les
cli
dec
test
and
roll
jmp
dec
mov
js
jbe
int
or
xchg
xor
cmp
lret
adc
insl
push
and
jecxz
sub
icebp
lahf
icebp
jae
sub
jp
dec
sub
loopne
jmp
rolb
pop
mov
pop
cld
ss
loop
cmc
andl
dec
pop
scas
sbb
dec
xorl
neg
and
into
add
and
lret
pop
push
pop
jae
push
ja
je
add
js
xor
push
shlb
cwtl
jmp
or
in
sub
jo
out
pop
jmp
popf
jnp
and
jmp
mov
mov
sub
pop
jle
pop
sub
sbb
stos
dec
aad
ja
sbb
dec
or
inc
jle
cmc
call
insb
add
pop
cld
inc
push
pop
mov
lods
orb
jo
clc
rcrl
push
push
xchg
jae
sbb
jbe
imul
fs
or
add
pushf
aaa
inc
cld
sub
and
cmp
shl
sub
push
add
icebp
ljmp
cmc
mov
xorb
orb
mov
jle
jmp
inc
sub
jo
xchg
push
push
jo
out
mov
adc
or
xor
add
or
int3
pop
cmp
ja
arpl
or
data16
pop
sbb
or
insl
push
fwait
sub
out
pop
sbb
add
or
cltd
pusha
push
and
mov
sti
inc
adc
nop
cmp
jmp
into
in
sub
lahf
testb
cs
add
arpl
cmp
jno
movsb
loop
aam
daa
and
cmp
xor
jge
arpl
idivb
mov
fwait
mov
xor
xchg
push
add
push
push
inc
push
test
jg
pop
or
or
scas
pop
cwtl
add
jno
popa
dec
add
sub
jg
fimuls
fsts
dec
or
dec
mov
fildll
aad
push
pop
iret
fsubl
test
mov
or
inc
sub
inc
add
sub
sub
scas
add
fiaddl
inc
sub
push
mov
cmp
into
cwtl
sub
dec
loopne
ja
sbb
movsb
and
jo
mov
iret
je
xor
mov
outsl
inc
and
jle
dec
xchg
jno
outsl
decb
bound
aad
stos
nop
inc
in
add
xchg
jno
jns
lret
or
lods
ffree
mov
dec
das
das
fstpl
fmull
add
sub
pop
xchg
mov
xchg
addr16
or
orl
add
or
in
popf
lcall
ret
mov
sbb
jecxz
ljmp
add
pop
pop
push
lock
push
dec
sarl
sbb
sub
or
pop
inc
pop
sub
adc
and
inc
orl
or
push
fimuls
pop
data16
shlb
cs
mov
pop
fadds
in
fwait
sub
push
lret
dec
out
push
xchg
add
movsl
inc
xor
arpl
insl
pop
inc
add
mov
and
adc
mov
xor
cmp
add
inc
adc
push
lods
out
cli
pop
into
xor
mov
pop
cwtl
pop
dec
mov
add
xor
mov
daa
push
rcll
or
cli
lret
loopne
sbb
or
scas
mov
in
xor
iret
dec
mov
jmp
xorb
aam
roll
loope
mov
call
imul
dec
aas
xchg
and
test
pop
not
xor
nop
and
push
push
cli
mov
mov
ret
xor
jmp
push
adc
jmp
add
pop
inc
mov
aaa
adc
jbe
int3
lret
test
mov
jmp
mov
jp
mov
adc
add
add
xchg
dec
xor
lods
es
jmp
xor
adc
and
mov
cmp
aas
lods
repz
lret
std
popa
pop
jmp
popa
lcall
mov
xchg
cmp
inc
pop
cs
pusha
add
xchg
add
and
cmp
loopne
mov
and
adc
add
pusha
dec
adc
in
add
dec
adc
fsubl
mov
loopne
leave
jmp
jne
mov
cld
enter
test
ljmp
cli
cltd
data16
pop
add
in
mov
dec
push
scas
inc
loop
add
push
nop
std
icebp
subl
lds
pop
pop
popf
pop
jo
mov
push
daa
xchg
mov
dec
add
pusha
pushf
sbb
lahf
fsub
push
jne
jb
setno
jo
or
pop
inc
xlat
cmp
lret
jg
ja
mov
push
popf
or
movsl
nop
pop
mov
push
dec
aas
jl
pop
fnstenv
mov
or
lods
add
lds
or
cmc
jge
lock
xchg
push
call
icebp
pop
push
push
loopne
jl
and
out
sbb
shll
je
xchg
pop
ja
addr16
cmp
or
fsubrl
sub
pop
clc
pop
sub
test
add
inc
and
sub
and
add
jmp
add
call
daa
jmp
cmp
lods
jo
adc
mov
add
packuswb
pop
js
mov
lock
mov
repnz
stos
pop
inc
orl
ss
dec
or
push
les
jb
aam
xor
imul
cld
lret
or
jmp
dec
add
pop
cmp
jns
adc
sub
clc
mov
sub
push
mov
shrl
aad
shlb
pop
rorl
aas
dec
xchg
sub
pop
cmp
sub
enter
push
lahf
mov
mov
and
roll
or
icebp
add
rolb
outsl
jns
add
push
rcrl
loopne
mov
inc
add
pushf
xchg
fisttps
mov
adc
or
outsl
adc
lock
cmp
mov
dec
sahf
mov
sbb
xchg
and
pop
hlt
mov
jnp
adc
jmp
mov
notb
jge
dec
or
pop
les
mov
mov
push
ds
ja
adc
mov
add
xchg
jge
popl
push
push
mov
mov
das
mov
xor
jmp
or
push
popa
jmp
add
mov
cmc
call
fidivs
add
out
xchg
pushf
or
jns
mov
or
or
adc
cltd
or
push
sub
jl
pusha
test
stos
jne
sbb
xor
add
loopne
xchg
notb
sbb
xor
mov
popa
sub
outsb
mov
add
mov
push
push
and
xchg
jecxz
add
leave
adc
mov
test
inc
nop
mov
and
add
mov
xor
and
add
push
ds
pusha
jmp
add
jmp
xchg
or
xor
rol
cmp
adc
add
addl
aaa
cmp
mov
jg
popf
nop
lahf
sub
test
push
loope
jmp
jp
cmp
pop
cld
xor
jno
mov
sub
mov
mov
mov
and
and
dec
xor
sub
mov
ret
sub
sub
lret
add
es
leave
ret
int
jle
in
adc
std
lret
jne
push
loopne
mov
loop
push
mov
mov
repnz
inc
dec
mov
lock
and
sub
insl
cli
inc
adc
push
and
jge
mov
rolb
dec
daa
inc
sbb
inc
add
in
jmp
ret
inc
insb
xor
add
jmp
sti
fdivp
add
ljmp
dec
bound
imulb
cmp
shlb
arpl
xchg
rcrb
xor
xchg
orl
es
push
xchg
add
inc
and
jbe
xchg
cmp
push
sbb
adc
inc
adc
test
out
test
or
test
push
pop
cmp
mov
push
jmp
push
lock
sbb
inc
ret
jmp
lea
sub
stc
cmp
dec
xor
mov
mov
xor
inc
or
fstpl
les
jbe
add
or
dec
scas
fcoms
dec
pop
mov
data16
push
lods
call
jl
fsubrl
aas
mov
shll
add
sub
and
bound
cmc
ficoms
jne
mov
and
in
add
clc
pop
adc
cmc
loop
sbb
adc
filds
lcall
and
pop
idiv
xchg
iret
jbe
and
jmp
out
bound
adc
daa
pop
push
loop
out
inc
cmpsl
cli
sbb
pop
out
xchg
push
fxch
dec
xlat
xor
or
xchg
sub
jns
test
add
dec
sub
js
xchg
test
jl
pop
pop
sub
add
and
sub
divl
xchg
das
jmp
or
insb
jmp
jmp
xchg
mov
bound
hlt
adc
es
cmp
sbb
xor
sbb
sbb
pop
xor
divl
addr16
sbb
adc
leave
jle
sbb
sbb
xchg
pushf
xchg
sti
dec
push
mov
iret
test
out
les
addl
cmpsl
sbb
clc
dec
push
ds
call
add
adc
xchg
mov
cmp
xor
jnp
pop
imul
push
imul
sub
push
xchg
sbb
sbb
push
push
ret
mov
jbe
jbe
jmp
add
ljmp
shl
xor
insl
dec
push
adc
sub
add
es
add
sub
lock
cld
add
out
xor
add
xor
stos
xchg
call
dec
movaps
leave
xchg
jne
bnd
mov
cmp
sar
popa
push
lret
pop
imul
xchg
or
sub
jne
ret
je
jmp
sbb
or
xchg
jne
orl
jb
add
das
jnp
jo
jno
popf
jecxz
jmp
cwtl
dec
movb
mov
jns
pop
jp
mov
push
add
add
and
jmp
mov
mov
cmp
decl
movsb
ljmp
scas
inc
call
jnp
xor
ret
clc
pop
cld
inc
jbe
mov
cmpsl
dec
pop
adcl
jl
jb
inc
push
sti
sub
addr16
loop
dec
loope
jle
or
cmc
mov
xorb
adc
cmp
int3
ja
push
ss
test
sub
mov
out
mov
pop
xchg
xchg
jo
in
sbb
ja
mov
popl
sub
lock
pushf
sbb
push
sarl
or
and
add
add
or
mov
clc
or
mov
adc
mov
lret
pop
sbb
movlps
push
add
fcomps
push
mov
fwait
jle
sub
add
add
ud2
cmp
aad
or
ja
ds
add
sbb
popf
jbe
mov
jne
fildll
jb
in
pop
cmp
inc
fs
popf
add
sub
jp
mov
push
adc
outsb
pop
test
xor
and
aas
sub
scas
movsb
lcall
shr
js
pop
popf
pop
shll
in
subb
xchg
push
mov
stos
push
jo
xchg
push
adc
xchg
insb
std
cmp
dec
xchg
test
icebp
test
dec
bound
clc
imul
leave
inc
mov
fwait
mov
mov
pop
daa
sub
testb
pop
push
mov
dec
jmp
mov
ss
push
mov
mov
sbb
subl
push
sub
addb
pop
fnclex
and
or
outsb
jle
xchg
lcall
stc
aad
xor
fdivrp
imul
jnp
jns
jmp
mov
add
add
mov
cmc
cli
xor
jbe
push
sbb
xchg
or
test
lods
push
add
aaa
ficomps
mov
out
xor
or
loop
jp
js
sub
xchg
pop
cld
pop
mov
adcb
dec
jo
jl
das
mov
les
inc
add
jae
ljmp
jnp
ljmp
dec
cld
fnsave
and
xchg
imul
das
pop
in
sbb
mov
mov
mov
inc
arpl
add
sbb
xchg
jmp
push
or
stc
sub
das
mov
clc
or
mov
stos
sub
mov
dec
icebp
fwait
aas
cld
inc
mov
adc
call
imulb
int
sbb
dec
jbe
add
xchg
popf
pop
sub
int
rcll
jecxz
push
or
repnz
loope
gs
mov
dec
dec
or
mov
pop
and
add
int
aaa
test
repz
mov
push
dec
mov
sub
add
sbb
inc
popf
into
push
or
shll
movsb
insl
mov
cmp
subb
loopne
jb
xchg
dec
adc
jg
ljmp
lds
lahf
das
sbb
mov
mov
pop
decb
andb
sbb
mov
jge
ss
in
popf
xchg
jno
xor
rcll
mov
push
into
jp
xchg
scas
mov
sahf
or
in
dec
add
insl
xor
jnp
xchg
lret
sub
stos
data16
push
or
jmp
push
testl
jl
inc
inc
mov
adc
or
fcom
adc
aam
stos
push
dec
mov
and
into
or
mov
dec
add
not
shr
xor
or
cmp
xor
adc
cmpsb
insl
pop
push
jmp
scas
lret
cmp
lock
jl
push
dec
sub
push
add
fdiv
iret
add
jmp
inc
ret
aad
push
test
rclb
push
xchg
add
fsubrp
mov
addb
mov
pop
push
in
sbb
ljmp
clc
int3
add
lret
cmp
cmp
add
dec
leave
xchg
das
lret
leave
fldl
add
ds
add
jmp
pop
mov
call
adc
mov
cmp
jo
or
pop
bnd
out
xlat
mov
push
ret
add
popa
dec
pop
repz
das
and
add
or
arpl
inc
pop
lds
mov
out
pop
ja
mov
pop
mov
ss
pop
in
and
test
ljmp
mov
sub
nop
mov
sbb
std
outsl
mov
lahf
pop
ret
or
out
push
cmp
xchg
jmp
cs
add
cmp
sbb
imul
insl
push
mov
testl
or
jne
cmc
sub
xor
jg
pop
sbb
aam
test
cmp
push
nop
mov
pop
mov
clc
xorb
or
andl
pop
add
aas
std
fimull
push
les
ret
outsb
out
in
pop
ja
shll
push
jmp
hlt
imul
test
outsb
mov
jno
shr
pushf
lret
push
and
inc
push
jns
push
adc
rcll
orb
push
cmc
adc
rcrb
push
dec
outsb
xchg
adcb
shl
jle
ret
lock
cmp
popa
mov
hlt
repz
outsl
ret
push
sub
xchg
jmp
mov
in
sub
mov
shlb
pop
jnp
arpl
mov
pushf
add
mov
mov
scas
jmp
adc
lea
cltd
mov
push
add
push
xor
inc
rolb
call
fucomp
jae
enter
leave
sbb
xchg
mov
lods
stc
jbe
fs
inc
add
adc
xchg
stos
adc
nop
sub
mov
push
cmp
sbb
insb
fadds
lahf
mov
ret
cmp
loope
popa
dec
sti
add
outsb
dec
mov
std
inc
sbb
scas
mov
inc
outsl
std
lea
add
out
pop
shl
jmp
fsts
adc
leave
push
fisubl
fisubs
testl
mov
or
adc
pusha
xchg
xor
and
jne
xchg
xlat
inc
clc
out
rorb
sub
clc
sub
mov
inc
out
pop
cli
loop
xchg
mov
inc
dec
js
add
xor
jnp
mov
push
jmp
and
imul
xor
sbb
pop
xchg
fcomps
dec
stos
inc
push
jmp
xor
loopne
lods
push
mov
mov
pop
neg
andb
push
mov
jno
xor
xchg
arpl
data16
mov
mov
jbe
jmp
mov
push
sub
out
pop
pop
mov
jnp
and
mov
or
lret
das
orb
addr16
sbb
ror
nop
es
jb
mov
dec
scas
sbb
lret
or
and
add
imul
cmc
das
jle
pop
and
pop
mov
jge
fidivl
cli
bound
sbb
mov
or
sub
jmp
cld
mov
test
adc
sub
xor
and
lea
push
js
push
mov
pop
mov
cmpsl
add
repnz
dec
hlt
shlb
stc
or
jmp
or
cmp
pop
arpl
jge
jmp
or
or
js
adc
pop
sar
lret
inc
lea
addr16
out
push
lcall
inc
push
jp
add
or
fistpl
xor
or
cmp
lahf
pusha
lods
pop
or
add
ret
test
pop
ret
or
dec
mov
loop
jb
insb
and
xor
out
push
test
les
enter
inc
cld
je
adc
mov
insl
es
je
dec
and
lds
int
outsb
call
pop
stos
push
mov
mov
jmp
pop
hlt
push
fs
dec
xchg
pop
sarb
mov
fisubrs
sti
movl
mov
mov
mov
cs
adc
xor
mov
pop
mov
pop
mov
inc
icebp
cmpsb
imul
aas
adc
lea
mov
add
pop
xlat
out
pop
ds
movsb
or
ss
inc
xor
cmp
push
pop
out
fld
or
fisubrs
out
addb
jmp
mov
popf
pop
dec
test
loope
jae
ficoms
jg
adc
xchg
outsb
test
pop
push
jbe
inc
imul
pop
dec
dec
lret
add
adc
inc
subl
dec
into
mov
and
jmp
sub
mov
cmpsl
les
mov
fiaddl
sub
out
shl
out
fmuls
push
lock
cmp
dec
and
mov
out
pop
jmp
dec
jmp
pop
xor
lds
add
cli
test
adc
pop
push
fs
test
inc
mov
cmc
pop
dec
sub
push
cmc
xchg
pop
fs
xorl
mov
add
not
sar
push
sub
fistps
or
neg
push
mov
rcrl
lods
in
xor
push
shr
notl
aad
jg
pop
ret
pop
sbb
or
or
xchg
or
mov
inc
sbb
mov
sbb
sbb
xor
xor
sbb
mov
xor
xchg
movsb
mov
out
paddw
ja
add
in
mov
push
or
or
or
or
dec
or
inc
dec
mov
xor
inc
mov
outsb
imul
les
jge
add
in
loope
add
sbb
push
jmp
or
ret
or
fistpll
aam
imul
dec
out
or
orl
sbb
shrb
fmuls
jno
add
add
movl
xchg
nop
cltd
subl
test
mov
mov
and
or
cmc
cmp
mov
jo
lret
mov
aas
or
fldcw
and
add
scas
add
and
imul
lods
and
imul
int3
and
mov
in
or
dec
mov
or
xor
cltd
test
mov
dec
pop
rol
or
jp
in
sbb
mov
and
das
and
mov
cmp
cmp
push
jp
add
lret
add
fiaddl
loopne
rcl
adc
sbb
push
xor
or
or
les
jecxz
inc
in
rolb
test
or
lsl
jns
sub
sbb
nop
or
and
aas
and
jnp
and
fcom
pop
lret
lret
in
dec
sub
sbb
or
data16
rcr
or
les
cmp
add
sub
gs
leave
dec
adc
js
popa
enter
mov
adc
sbb
pusha
pushf
cld
dec
call
out
nop
test
mov
inc
sub
jne
jmp
mov
mov
add
dec
or
pop
jne
mov
jp
fiadds
lock
rorb
dec
xor
jmp
loope
inc
xchg
sub
mov
jecxz
xchg
push
outsb
in
cs
jg
pop
cmp
sahf
fstps
loop
xor
std
push
or
inc
icebp
xlat
lods
fidivs
add
lar
jg
out
jmp
call
sbb
push
push
mov
pusha
cli
sub
loop
ret
or
movsb
xchg
sbbb
inc
aas
cmpsl
nop
das
pusha
cwtl
ret
out
pop
ja
push
cmpl
add
jnp
test
mov
rorb
push
leave
in
iret
idivb
js
pop
pop
ds
idivl
subb
mov
aas
xchg
adc
pop
cld
js
push
mov
inc
mov
add
loope
lds
in
hlt
shlb
out
mov
cmp
ret
ss
or
out
and
push
cmp
push
xor
movsb
mov
push
hlt
mov
jne
cmpsb
sub
pop
pop
test
and
inc
pop
jle
shl
add
arpl
call
dec
in
adc
les
add
push
call
jns
das
mov
hlt
push
roll
popa
or
mov
call
ja
inc
sbb
push
or
push
jmp
scas
push
push
mov
in
call
add
insl
push
inc
clc
repz
sub
inc
pop
cld
jo
clc
push
sub
push
addb
dec
jmp
adcb
and
dec
and
fcoml
and
fwait
xlat
push
rclb
wbinvd
mov
sarb
and
rcl
jmp
ja
add
or
pop
fbstp
inc
rcl
stos
les
pop
shr
or
jbe
add
insl
sub
arpl
cmp
cmp
mov
pop
loopne
xchg
ret
dec
sbb
jns
dec
jmp
jl
jp
addr16
and
dec
pop
xor
add
adc
sti
add
lret
scas
dec
mov
cmp
jmp
out
push
push
jmp
dec
sub
mov
neg
addb
cs
movsb
push
pop
jmp
pop
fidivrl
add
or
test
pop
xchg
or
adc
push
or
push
mov
pop
pop
jmp
mov
or
cwtl
cmc
pusha
mov
fildll
pop
out
lret
xor
idivb
clc
xor
or
and
jp
jecxz
scas
xor
insb
and
stos
and
push
adc
call
pusha
jne
inc
jae
inc
loop
imul
bnd
nop
mov
dec
add
lds
jne
mov
push
imul
sbb
inc
mov
xchg
sub
lock
jnp
and
mov
bound
ss
shrb
add
cli
lahf
xchg
test
into
add
push
dec
inc
ret
cwtl
addr16
out
ret
sbb
pop
or
sub
push
adc
jnp
jle
sub
cmpsl
repz
sti
loopne
cli
rolb
scas
sub
pop
adc
cmp
into
sub
ds
and
xchg
or
add
mov
add
lret
sub
jns
xchg
incl
imulb
xchg
sarl
pop
cmpsb
mov
add
push
sahf
test
cli
fistpl
jmp
lods
pusha
imul
mov
les
mov
sub
jl
push
inc
jb
stos
cmc
leave
jbe
cmp
jno
sub
out
add
rcll
mov
pop
pop
cmpl
dec
dec
enter
test
movsl
or
outsb
cmc
das
xchg
push
and
push
add
xchg
jns
inc
and
mov
sub
or
sub
cmpb
and
inc
push
mov
push
jne
push
and
fstpt
call
adc
push
ret
or
or
mov
loop
mov
mov
xchg
and
cmp
pop
xor
xchg
dec
sahf
inc
movsl
stos
push
lcall
mov
fcoml
pop
es
mov
push
in
shlb
neg
sub
dec
or
pop
cmpsb
mov
dec
clc
test
pop
ret
add
push
push
and
hlt
push
xor
inc
cltd
pop
inc
inc
dec
lods
stos
dec
jmp
push
mov
and
icebp
mov
repnz
ljmp
insl
xor
in
js
pop
mov
mov
ret
imul
ret
ljmp
test
jge
pop
mov
repnz
pop
insl
mov
test
xchg
clc
mov
mov
leave
out
adc
nop
hlt
inc
adc
add
lods
pop
pop
add
aad
or
push
out
pop
icebp
out
test
sahf
je
pop
pop
push
push
xchg
push
lock
loope
xchg
das
cmp
pop
cmpsl
je
xor
fidivrs
pusha
mov
dec
test
or
mov
leave
jge
mov
add
lods
or
add
xchg
dec
test
cmp
or
insl
dec
xor
mov
xchg
ljmp
jmp
mov
mov
xor
jmp
add
pop
mov
ds
or
jmp
inc
ret
cli
dec
pop
fidivl
push
sub
mov
and
das
cmp
mov
jmp
dec
ljmp
rorb
add
imul
pusha
xchg
xor
cltd
outsl
dec
arpl
sub
or
or
das
imull
cwtl
sbb
fsubrs
je
sub
std
jmp
mov
sbbb
add
ljmp
cmpsl
jnp
dec
jge
dec
arpl
sub
lret
sub
lahf
add
dec
inc
jecxz
cs
int3
lods
pop
sbb
push
sub
add
push
mov
push
add
orb
decl
pop
test
or
add
jmp
mov
inc
pop
imul
push
add
pop
sub
cld
popa
and
outsl
inc
out
mov
sub
cmp
or
dec
or
sbb
test
or
or
jmp
dec
jb
push
lods
push
push
daa
pop
push
mov
into
call
out
sbb
adc
push
mov
and
popf
rclb
pop
xor
pop
in
and
sarl
incl
out
or
lret
loop
and
push
xor
cwtl
cmp
or
mov
daa
jle
cwtl
pop
add
push
subb
sti
inc
jp
push
int
into
roll
dec
pop
loop
and
adcl
inc
rolb
and
and
push
or
std
push
addr16
sbb
mov
inc
jmp
xor
shll
jns
fldcw
adc
inc
mov
pop
jmp
push
sub
jg
test
test
dec
jp
loop
push
jnp
sub
jae
or
pusha
iret
call
pop
sub
scas
ja
inc
mov
gs
mov
push
scas
gs
add
mov
in
in
or
jbe
sti
lods
pop
addb
sub
pop
pop
andl
ret
push
in
adc
jmp
jne
sub
les
push
mov
add
and
mov
or
jbe
into
ret
pop
mov
sbb
push
push
mov
push
mov
pop
imul
jns
add
pop
or
dec
stos
push
fisttpl
push
scas
fdiv
jmp
sub
jns
jmp
jae
ret
xchg
aam
jbe
lds
xorb
inc
and
cld
dec
adc
stos
xor
clc
nop
arpl
jg
mov
jo
shrb
ds
clc
incb
nop
rcpps
lret
fadd
push
aam
xchg
hlt
pop
aam
cli
pop
lcall
inc
sub
push
push
inc
punpckhdq
adc
test
pop
pop
dec
mov
push
ret
sub
cmp
clc
add
jbe
and
mov
lods
pop
cmp
jp
xor
scas
add
mov
jecxz
xchg
stc
loop
jmp
rorl
cs
lret
pop
pop
shll
mov
push
shll
mov
sub
pop
and
inc
pop
push
push
fstpt
loop
rolb
int3
jno
dec
jg
stc
or
in
adc
subb
xchg
inc
pop
mov
in
sub
fsubl
cwtl
loop
jp
jo
insl
mov
lds
xchg
imul
push
mov
xor
ret
idiv
or
push
or
pop
mov
bound
pop
mov
jmp
push
std
add
push
mov
push
daa
jmp
add
cmp
imul
in
add
xchg
inc
push
push
aad
jmp
jp
sub
xor
add
loop
ljmp
in
dec
dec
scas
sub
cld
jne
xlat
in
outsb
add
mov
sbb
mov
nop
jne
ja
int3
or
dec
add
dec
xchg
pop
inc
push
aas
scas
out
sahf
pop
scas
add
sub
push
and
int3
out
cwtl
mov
jo
ror
xor
and
inc
sbb
lds
push
push
mov
data16
movsl
xor
repnz
fstps
loopne
mov
and
pushf
xchg
jns
and
add
sub
sub
shr
dec
and
add
push
outsl
loopne
dec
stc
adc
xchg
pop
jbe
push
je
subb
insl
jl
arpl
sub
sub
out
jno
shrl
out
in
add
mov
data16
inc
lea
jne
pop
add
jmp
loop
sub
out
jmp
adc
jmp
add
push
pop
and
pop
test
jecxz
push
cmp
mov
adc
ljmp
enter
push
loopne
and
test
sti
add
fs
sub
mov
inc
jge
pusha
dec
sbb
cwtl
add
xchg
push
ljmp
xor
loop
rol
mov
mov
push
out
std
push
stos
popf
cmpsb
movsb
xor
or
pop
inc
xor
in
cmpsl
nop
mov
and
pushw
sub
sbb
pop
sub
dec
adc
test
daa
mov
dec
aam
cs
cmc
jmp
and
add
das
pop
add
sub
sub
mov
xchg
push
pushf
bound
mov
into
iret
or
loope
sarb
xor
ret
rcll
push
lahf
xchg
icebp
test
sbb
sbb
jo
test
mov
inc
aas
lahf
bound
inc
jg
add
mov
push
aad
pop
cli
xor
je
fdivs
sub
aad
mov
adc
adc
sbb
mov
rclb
ja
mov
and
dec
sbb
push
clc
imul
daa
loop
xchg
sbb
lock
push
cltd
icebp
or
sbb
and
loope
push
push
bound
pop
pop
mov
and
jbe
push
int
add
push
xor
jmp
lds
adc
in
inc
or
mov
negb
pop
icebp
leave
xchg
incb
mov
hlt
stos
add
sub
add
mov
cld
sbb
aaa
add
pusha
cmp
and
nop
das
cmp
inc
dec
inc
cmpsl
test
push
imul
or
sub
pop
neg
in
mov
add
jns
cmpsl
imul
push
call
xor
mov
jg
scas
push
pop
or
lock
jg
jmp
push
or
sub
push
scas
dec
dec
test
movl
out
ret
dec
add
aas
jmp
xor
mov
es
repnz
je
or
xchg
jnp
std
scas
cmp
cli
mov
mov
jecxz
les
out
xlat
xor
pop
shl
pop
push
push
push
pop
lock
sbb
cmp
lahf
inc
leave
loopne
or
jmp
cld
inc
add
shlb
sub
inc
inc
or
icebp
ja
int3
and
push
xlat
jns
in
aam
jle
xchg
jge
sub
or
push
pop
sbb
pcmpeqw
inc
mov
cmpb
movsl
mov
push
sub
daa
in
jne
jb
jecxz
dec
jmp
aam
ja
out
cmp
imul
mov
sbb
pop
sbb
dec
iret
das
gs
mov
cmc
or
aad
add
mov
test
rcl
push
push
jno
and
call
push
or
cmp
xchg
inc
sub
in
add
daa
add
outsb
jbe
rolb
jo
jbe
cmp
lock
add
icebp
xchg
int3
add
or
push
mov
add
add
outsl
in
cmp
jle
sub
nop
daa
jnp
jns
pop
shll
jmp
dec
aas
pop
ja
leave
call
or
pop
and
push
inc
addl
sahf
hlt
addr16
jmp
mov
adc
shrl
push
jg
inc
mov
int
iret
cmc
mov
pop
out
cs
aaa
insb
pop
inc
sbb
lret
int
mov
push
dec
lods
mov
adc
pop
in
mov
jns
movl
add
dec
mov
inc
nop
adc
adc
and
push
or
sbb
int3
sbb
sbbb
shr
add
mov
scas
rclb
xchg
fimuls
add
sub
fdivrs
test
push
push
xchg
inc
shrb
aad
enter
xor
jmp
add
push
pop
ljmp
sub
dec
lods
ret
inc
or
inc
dec
mov
iret
push
xchg
in
pop
dec
stos
ss
mov
dec
mov
pop
add
pop
repnz
add
popa
dec
jbe
jb
sbb
xor
dec
or
mov
push
add
fdivrp
pop
adc
push
aaa
dec
jge
sbb
cwtl
pop
out
pop
jo
popf
push
les
pop
filds
jmp
jg
repnz
mov
and
in
push
push
mov
pop
pop
les
xor
popa
push
cmp
insl
lea
inc
inc
and
pop
mov
idivb
sbb
dec
push
mov
aad
cmpsb
xchg
ljmp
jmp
out
push
push
cmp
pushf
jmp
pusha
fisubs
mov
mov
ds
push
pop
shl
ja
sti
and
aaa
sbb
jmp
pop
add
sub
sub
jp
or
ret
cmp
xor
pop
scas
outsb
pusha
ret
pop
fwait
stos
add
inc
adc
jmp
add
sub
pop
mov
push
mov
in
cmpsl
rclb
lods
pusha
mov
lock
pop
shl
dec
cli
cmp
sub
jnp
ret
mov
pop
xchg
leave
and
stc
dec
push
les
mov
loopne
stos
loop
repnz
jmp
lahf
das
push
cmc
xor
pop
push
arpl
ret
add
nop
xchg
add
cmp
test
or
in
dec
mov
test
mov
push
ds
stos
inc
inc
jno
aaa
test
mov
dec
leave
data16
loope
xchg
cmc
pop
cli
adc
ljmp
call
adc
aad
test
mov
adc
fs
add
pop
mov
add
inc
add
sahf
fildl
cmpsb
jnp
jl
xchg
cmp
test
out
enter
cmpsb
and
jmp
xor
adc
sbb
in
add
pop
iret
stos
std
dec
cmp
subb
pop
cmpb
dec
pushl
dec
ret
ljmp
jno
adc
xchg
jmp
filds
negb
mov
imul
or
push
call
lret
mov
pop
xchg
jo
ljmp
pop
cs
pop
out
and
std
mov
adcb
add
jmp
lahf
iret
sti
push
and
mov
push
lods
in
mov
mov
pop
push
push
aaa
pop
ret
imul
sbb
mov
movsb
adc
sahf
aam
sbb
divb
das
test
mov
jns
fs
lods
pop
push
add
outsl
loop
inc
push
adc
mov
std
add
data16
mov
cwtl
clc
add
jnp
mov
mov
clc
fs
xchg
jmp
sar
push
nop
jmp
push
repnz
sbbb
jmp
dec
mov
std
or
jg
sub
mov
popa
fnstsw
js
pop
or
pop
or
mov
sbb
push
leave
add
jmp
daa
xchg
inc
push
lods
insl
insb
adcb
mov
push
push
or
sub
jge
mov
in
or
mov
lcall
js
push
and
neg
or
or
sbb
int3
ret
or
fnstcw
leave
jge
insl
push
imul
sub
sub
add
xchg
inc
test
add
push
je
cmpl
rorl
outsb
add
repz
flds
and
sbb
sarl
clc
pusha
nop
clc
pop
pop
sub
mov
sub
pop
ljmp
push
mov
aad
mov
stos
sti
shr
repz
sub
mov
sarb
push
cmp
jo
or
push
and
lock
inc
iret
test
adc
push
sub
in
add
cli
inc
int
xor
inc
or
sbb
adc
jne
inc
jmp
pop
mov
push
push
or
mov
pop
dec
lahf
adc
ljmp
inc
lea
das
jae
cmp
repnz
das
pop
imulb
dec
xlat
xchg
mov
push
push
dec
jnp
and
push
pusha
imul
dec
jne
rorl
inc
jle
adc
inc
test
lret
add
pop
xorb
push
jmp
inc
mov
jecxz
pop
or
mov
sbb
add
imul
sub
sbb
mov
jae
jmp
addr16
add
pushf
xchg
inc
out
sub
idivl
cwtl
push
orb
js
cmpsl
jg
lock
and
shrb
add
adc
dec
out
xchg
out
gs
mov
dec
call
aaa
fsts
pop
pop
testb
add
in
mov
pop
or
pop
stos
inc
xlat
test
mov
add
adc
movsl
mov
test
repz
cld
xchg
fldl
fadd
push
push
pop
call
sub
out
mov
pop
add
bsf
sbb
sbb
push
or
sub
jg
mov
inc
loopne
fisubl
mov
cmp
sarl
add
mov
test
nop
les
sbb
lahf
and
cmc
outsb
add
or
pop
pop
out
inc
mov
in
je
std
and
popf
aad
xchg
dec
clc
gs
push
mov
xor
mov
jmp
adc
stos
mov
inc
inc
push
inc
inc
fsts
mov
pop
loope
pop
ret
bound
mov
adc
mov
jo
adc
pop
add
fldt
cmc
lock
lock
xor
leave
nop
jnp
mov
push
mov
call
sbb
xor
cmpsb
xchg
or
data16
imul
or
lock
pop
hlt
test
xor
adc
jb
pop
repz
pop
sbb
and
jns
sub
test
cltd
pop
pop
ss
scas
add
jmp
rcrb
andl
test
sbb
jge
cmp
xlat
inc
dec
clc
dec
roll
add
adc
or
icebp
sub
test
jo
pop
add
xor
dec
cmp
add
jmp
add
popa
out
dec
xor
in
add
clc
pop
add
pushw
aaa
stos
es
xor
pop
sarl
fdiv
push
out
adc
repnz
sub
fucomip
cmp
insl
fmull
sub
repz
add
push
push
popa
jns
pusha
into
sbb
push
push
rorl
mov
imul
inc
pusha
icebp
mov
and
jne
in
add
lret
jno
test
scas
out
inc
enter
sbb
ret
lea
in
pusha
xchg
inc
pop
sub
or
inc
fldl
ret
sahf
mov
iret
sub
pop
lock
adc
out
ret
push
push
pop
dec
add
shrb
shlb
jbe
push
jno
mov
or
pop
add
xlat
cs
std
inc
adc
or
xor
xor
xchg
mov
data16
rol
push
mov
mulb
rol
adcl
push
xchg
sub
leave
add
bound
rolb
test
push
stc
imul
enter
mov
cmp
test
dec
pop
mov
std
inc
pop
cmpb
fisubrl
imul
sbb
pop
and
outsb
cmp
inc
std
xor
push
insb
jae
sub
in
mov
mov
mov
or
jae
jne
adc
dec
sub
jp
jmp
and
aam
add
dec
inc
jg
pop
mov
sbb
pop
push
push
dec
hlt
repz
pop
bound
and
js
call
inc
and
jg
jle
shr
and
sub
int3
mov
loopne
jp
fisubs
push
das
fwait
inc
push
mov
gs
into
jno
dec
push
mov
xor
xchg
fstpt
dec
inc
push
pushf
hlt
shrb
stos
jne
inc
add
mov
add
inc
das
sbb
into
test
sub
add
and
inc
add
repz
mov
shl
sub
out
andb
repnz
inc
add
iret
bound
pop
ret
cld
jge
push
push
push
xor
test
icebp
insb
ds
push
sub
pop
xchg
sbb
out
pop
out
xchg
or
jl
cs
mov
sub
mov
aaa
xchg
fs
dec
loop
sbb
pop
push
ss
push
push
in
mov
push
jmp
hlt
lcall
iret
pop
mov
into
ljmp
adc
in
sbb
push
cwtl
jnp
lahf
es
bound
dec
adc
dec
and
jg
mulb
and
or
inc
mov
cli
xchg
subl
adc
xor
js
or
xor
add
mov
jp
inc
pusha
mov
rcrb
pop
or
cmp
lret
mov
je
mov
cmc
lret
or
and
bound
ret
ds
dec
faddp
dec
mov
sar
cmp
push
add
inc
stos
inc
or
and
clc
out
shr
add
inc
test
mov
adc
and
divl
sbb
stos
popa
jmp
add
mov
jae
adc
lret
dec
ljmp
iret
sub
loop
sbb
push
add
add
loope
rorb
es
push
or
sbb
out
mov
push
sub
or
mov
xor
xor
adc
or
sub
sbbl
mov
push
fdivl
out
imull
addr16
lods
fs
mov
jmp
mov
mov
pop
cltd
orb
or
jle
mov
inc
dec
nop
or
push
mov
adc
lds
ret
add
stos
dec
dec
dec
jbe
es
iret
outsl
dec
repnz
stos
ljmp
pop
or
xchg
inc
movsl
loop
push
je
jns
cmp
in
lret
sub
enter
loopne
push
xor
mov
and
sub
or
adc
sub
adc
xchg
mov
fisttpll
daa
jmp
sub
xor
sysret
adcb
test
testb
xor
cltd
bound
pop
imul
adc
add
mov
xor
or
push
add
dec
jmp
and
out
stos
inc
cld
dec
mov
add
and
or
mov
sub
add
rorb
loop
mov
insl
xor
shll
push
jl
add
sbb
imul
dec
ljmp
movsb
loopne
jmp
rorl
je
pop
outsl
xchg
push
add
sub
dec
cmpsb
cmp
cmp
or
sbb
ret
aas
cmp
add
mov
lods
sbb
repnz
push
pop
inc
mov
xor
loope
dec
testl
ds
jp
mov
pop
fildl
or
imul
sub
daa
cwtl
push
in
pop
pop
les
lods
stc
adc
pop
icebp
imul
das
pop
xor
addb
add
cmp
adc
idivb
test
cld
push
adcl
fnstenv
in
xor
popf
jo
push
lret
add
ljmp
repz
push
mov
or
xor
cmp
add
sub
adc
or
xor
lock
xchg
xlat
mov
push
mov
std
rcrb
and
mov
sub
pop
cld
in
mov
lret
pop
test
in
outsb
fisubrs
outsb
xchg
push
xchg
pusha
mov
dec
outsb
out
test
or
imul
shl
aad
lret
inc
jp
pop
addb
dec
aad
pushf
mov
xor
pop
jmp
dec
push
dec
out
je
dec
mov
fcomps
lods
dec
add
sub
adc
fs
dec
out
lds
nop
inc
xchg
fwait
add
dec
add
sub
mov
sbb
ljmp
mov
sbb
mov
nop
pop
leave
jmp
ljmp
aad
push
sarl
ja
mov
push
mov
jb
lods
add
cltd
not
cmp
push
sub
pop
mov
mov
sbb
mov
fcomps
sbb
es
rorb
stos
adc
cmp
or
sahf
das
pop
push
jns
insb
add
mov
ret
add
jmp
cmpsl
test
add
jo
inc
mov
jmp
dec
pushl
dec
cmc
add
push
jmp
cmp
xchg
out
adc
mulb
add
aas
mov
jmp
loope
scas
inc
pop
ftst
fadds
lret
xlat
lods
js
push
in
push
xor
lret
sub
jno
push
pop
stos
sti
bound
push
fs
add
inc
add
xchg
sbb
test
push
pop
jo
xchg
int3
xchg
pop
cmp
and
out
rolb
add
pop
cs
pop
leave
jae
push
push
ret
out
repz
mov
adc
fucomp
mov
mov
out
dec
outsb
in
test
mov
xchg
mov
clc
out
or
cld
mov
bnd
push
push
push
add
push
push
aaa
mov
js
sbbb
adc
jo
and
inc
and
add
sub
sub
push
popf
xchg
cwtl
dec
add
jo
cmpsb
repnz
daa
out
or
push
aad
cmp
xchg
rclb
shrb
sarl
add
sub
lea
test
loope
aad
push
repnz
cmp
push
lcall
pop
push
pop
mov
ficoms
cmc
pop
ljmp
fcomi
and
adc
add
shlb
pop
sub
fsubrp
inc
and
fstpt
mov
lcall
push
inc
pushw
hlt
add
sub
dec
lds
inc
mov
pop
pop
sub
sahf
push
jmp
pop
ds
in
mov
mov
je
sbb
or
inc
pop
cwtl
add
or
rorl
neg
pop
or
insb
test
add
mov
std
sub
jbe
test
mov
test
push
xchg
cmp
add
pop
dec
add
fucomp
lods
mov
lds
mov
pop
scas
xchg
insb
or
jmp
fs
mov
dec
jge
sub
push
push
fs
add
push
fdivs
cmp
mov
xchg
in
cli
mov
pop
push
outsb
mov
js
cmp
and
dec
xor
popa
les
repz
jns
addl
divps
out
inc
loopne
je
ret
inc
xchg
inc
movb
ret
popf
jle
pop
xchg
push
arpl
loope
sub
push
sub
lods
adcl
xor
jmp
repnz
aam
in
xor
jnp
sub
pop
cmc
dec
mov
imulb
cli
push
jp
pop
push
xchg
add
mull
or
out
dec
mov
mov
sarb
xchg
add
cmpsl
lahf
repz
scas
xchg
pop
adc
int
jecxz
daa
shl
mov
movsb
in
in
idivb
sbb
call
xor
adc
rcll
pop
xor
push
jge,pn
jl
and
add
test
out
and
add
jne
xor
cmp
daa
jmp
imul
and
cmp
cmpsb
cld
test
mov
add
inc
into
decb
jae,pn
lods
std
mov
test
in
inc
fmuls
mov
loop
jle
or
jle
pop
mov
and
sub
imul
test
test
jge
rcrb
mov
add
int3
scas
or
add
adc
enter
jp
xor
shr
jmp
aad
test
enter
mov
mov
pop
xchg
sub
pop
sar
jae
jle
rcrb
add
jmp
cmp
dec
ljmp
cmp
dec
xor
jmp
push
mov
rcrl
jns
or
call
mov
in
out
fstpl
lods
mov
or
and
das
inc
xor
push
daa
push
or
loopne
xor
ljmp
jnp
fnstenv
jne
call
xor
rcll
add
lock
neg
dec
or
mov
enter
pop
jo
sahf
add
clc
stos
test
pop
and
sbb
dec
add
pop
adc
jp
ss
das
lret
add
jle
aaa
push
jns
pop
daa
xor
or
push
ret
push
jno
cmp
jmp
rclb
rcrb
pop
dec
scas
adc
sub
xchg
mov
lret
adc
pop
sbbb
mov
push
pop
push
testb
lods
ljmp
dec
xchg
inc
xchg
adc
cmp
add
ja
das
jbe
jmp
pusha
std
pop
mov
dec
pop
out
push
loope
mov
mov
and
dec
mov
iret
pop
shlb
aas
sub
and
out
push
xchg
jl
testl
jmp
imul
sub
popf
icebp
sbb
jo
mov
cmp
jae
inc
jo
addr16
dec
pusha
loope
out
inc
or
in
or
push
jno
cmpsl
add
popf
inc
push
or
std
out
mov
push
jne
mov
or
and
flds
mov
jmp
pop
shl
in
movsb
js
aaa
mov
pop
pop
enter
push
adc
jns
push
inc
sub
leave
or
sub
adc
scas
mov
xchg
shlb
popf
jno
mov
clc
cltd
cmc
test
outsb
frstor
rolb
icebp
sub
adc
ljmp
cltd
out
sub
imul
loop
sub
push
rorl
push
cli
out
mov
daa
mov
clc
add
cmp
lds
cmp
mov
out
jns
loop
xchg
das
add
inc
movsl
aaa
rolb
leave
pop
cmp
jp
mov
addl
ss
rcrb
jae
jne
add
or
xchg
pop
ss
test
sbb
std
xlat
out
mov
in
leave
ds
and
jns
jno
popf
arpl
iret
mov
add
mov
incb
test
or
mov
mov
or
in
xor
imul
or
cmp
arpl
sbb
cmp
out
xchg
sbb
aad
dec
jnp
sbb
stos
mov
pop
in
adc
push
add
popa
jmp
sub
mov
and
inc
pop
inc
push
or
push
ja
sub
adc
push
dec
add
jo
jbe
dec
mov
or
inc
pop
pop
mov
aas
sbb
dec
in
hlt
mov
dec
add
into
mov
mov
jnp
push
pop
arpl
outsl
push
mov
adc
jae
sub
mov
jmp
aaa
fcomps
mov
addr16
cmpsl
mov
cmp
shrb
in
lcall
subb
add
push
push
daa
aaa
sar
shll
repnz
or
adc
or
dec
mov
shll
adc
sub
loope
add
push
jl
pop
repnz
int3
repz
jmp
sti
sub
mov
mov
and
lret
sub
data16
mov
jnp
sub
in
inc
imul
and
jmp
gs
lods
push
pop
push
mov
movsb
push
push
push
pop
jle
jnp
xchg
and
pop
pop
fcoml
stc
insb
xor
fdivrl
in
push
sbbb
and
std
rcll
push
es
or
imul
nop
mov
in
mov
mov
push
mov
jbe
pop
adc
loope
cld
mov
stos
add
je
pop
mov
fadd
sbb
and
orb
cli
outsb
jge
push
add
out
push
jmp
push
push
mov
sub
iret
pop
push
cli
inc
sahf
jmp
or
addr16
dec
and
cwtl
mov
aam
jle
mov
or
push
mov
sbb
lret
or
cmpsl
lods
out
mov
jecxz
or
outsl
sub
jnp
orb
fcoms
ret
push
add
repz
adc
rcrb
jge
js
pop
and
push
pop
pop
and
add
enter
xor
dec
push
xchg
or
xlat
jns
orl
add
in
arpl
out
shlb
pop
je
dec
call
dec
pushf
mov
xchg
lahf
mov
jmp
jmp
adc
in
sti
test
repz
adc
jmp
jl
dec
mov
pop
js
test
enter
das
test
dec
int
push
and
pop
hlt
mull
into
jg
out
push
xor
icebp
pop
inc
out
push
aaa
popf
mov
test
stos
inc
jp
push
ljmp
mov
push
xor
jo
and
inc
mov
jl
cmp
dec
jne
add
lret
into
aam
xorb
xor
mov
ret
and
cmc
les
pop
nop
fcomps
pop
leave
shr
xorb
sub
jp
pop
scas
mov
or
fs
enter
je
mov
push
or
and
xchg
jl
aaa
xlat
das
into
rorl
adc
sub
dec
xchg
adc
or
loop
dec
je
loop
iret
out
shll
testl
mov
cmp
data16
cli
push
push
jmp
mov
das
mov
out
test
or
into
rcl
jmp
cmc
lds
mov
andb
sahf
sub
or
xlat
add
ret
add
repz
inc
xchg
rorl
jmp
out
repz
mov
ret
mov
dec
push
xchg
xlat
jne
mov
sbbb
stos
cmp
aas
mov
mov
mov
jnp
push
mov
xchg
jne
jmp
sub
loopne
mov
ret
push
enter
dec
or
mov
lret
push
cmc
inc
cmp
stos
dec
test
mov
dec
inc
sub
xchg
cltd
inc
lods
cmp
test
aas
das
loopne
add
adc
xor
jmp
pop
mov
in
inc
pop
inc
and
sbb
cmp
sbb
push
jne
mov
xchg
sub
dec
xchg
mov
inc
add
out
insb
sub
push
into
jmp
in
mov
das
mov
orb
and
adc
push
mov
sub
in
cmpsb
mov
xlat
fs
leave
xor
pop
push
mov
and
sbb
popf
mov
je
jmp
add
fstps
adc
sbb
mov
lock
or
out
pop
add
jmp
mov
fidivrs
movsb
cmp
mov
mov
aad
cmpsl
pop
jbe
add
adc
adc
push
lds
pop
pop
inc
push
shl
lods
pop
and
sub
jecxz
add
cmp
sub
mov
orb
ds
fs
mov
xchg
jmp
mov
xor
jmp
mov
jbe
nop
jnp
jle
cmp
fimuls
popa
push
icebp
adc
les
shll
nop
mov
pop
lahf
add
cld
inc
mov
push
ret
lods
inc
jmp
jo
or
and
pop
sbb
hlt
dec
sbb
sub
push
sub
inc
push
sub
adc
pusha
pop
lcall
inc
cltd
inc
mov
pusha
sbb
lods
pop
mov
test
push
inc
add
sub
jge
hlt
movsb
into
or
pop
testl
and
fimull
int
pusha
sbb
sub
sub
aas
add
cs
and
cs
call
pop
movsb
add
pop
jns
lods
jns
cmpb
push
inc
sahf
cmpsb
std
mov
les
jge
cwtl
fimuls
jae
adc
or
push
cmp
cmpsl
xchg
fildll
jmp
mov
inc
fucom
mov
stos
test
fdivp
jmp
imul
xor
xlat
adc
lahf
je
xor
gs
lods
test
cli
mov
inc
pop
ja
xor
or
mov
imul
jae
pop
dec
jns
inc
add
push
jle
jmp
push
stos
xor
ret
subb
adc
neg
dec
rcrb
mov
or
add
dec
add
pop
fbstp
clc
je
aas
jmp
stos
fsubl
iret
dec
pop
stos
lcall
jp
divps
outsl
pop
enter
pop
cmp
movsl
imull
inc
pusha
das
and
cwtl
popf
adc
in
add
mov
js
imul
xchg
pop
pop
xchg
xchg
pop
or
cli
in
popf
add
sub
fs
fsubrp
out
fs
cwtl
mov
or
imul
ja
sbb
jmp
shrb
lret
or
negb
fstpl
push
adcb
mov
cmpsb
adc
neg
mov
adc
lahf
roll
lods
pop
pshufw
mov
jge
pop
neg
js
cwtl
adc
jnp
std
add
sbb
leave
out
push
adc
loop
inc
xchg
inc
pop
sbb
push
in
sbb
or
sub
in
shrb
cli
je
dec
and
xchg
fnstsw
fcmove
in
push
arpl
dec
push
mov
cmp
push
xchg
in
ret
cmp
lock
jae
es
or
int3
fdivrl
mov
cmp
repz
repnz
daa
popf
ret
lret
sub
add
outsb
pop
or
iret
add
push
jns
dec
xchg
push
sbb
loopne
xor
adcl
int
jne
and
arpl
sub
pop
les
incl
cmp
sbb
sub
pop
and
or
dec
adc
mov
shll
sbb
sub
ljmp
jne
jo
mov
or
cmp
pop
jmp
cmpl
ret
lock
popf
inc
insl
jge
fistpl
pop
sub
out
aad
fdivr
loop
mov
and
scas
adc
lea
pop
cmpsb
in
hlt
push
jp
push
inc
xchg
lods
cmc
mov
and
rclb
shlb
test
pop
mul
xlat
sahf
jbe
std
data16
inc
adc
or
ss
mov
or
je
rcrl
jmp
insb
cmp
lods
in
das
aad
sub
pusha
add
not
dec
jmp
stos
jg
nop
sub
aad
sub
nop
xchg
dec
cvtpi2ps
or
stos
aam
lds
or
pop
mov
adcb
pusha
sbb
xchg
push
loopne
lret
bound
cmp
mov
ret
add
lds
ja
inc
inc
inc
fimuls
push
stc
into
or
cmp
adc
es
dec
pop
mov
xor
jmp
or
cmp
insl
clc
subl
cmp
jge
add
aam
inc
orl
sub
dec
popf
popa
jge
and
fs
out
js
cmp
loop
adc
sub
and
ds
cltd
or
pop
sub
mov
push
pop
pop
push
clc
inc
pop
jge
ret
or
pop
sub
push
cmpsl
mov
xor
orb
xor
or
xchg
jns
lahf
dec
or
jno
into
in
xchg
cmp
pusha
decb
mov
ja
sar
or
xor
daa
or
es
inc
clc
loope
sub
dec
aaa
cmp
or
hlt
fsubrs
mov
add
shr
mov
lds
cmp
inc
inc
addl
cmp
mov
lds
sub
pop
hlt
mov
sti
xor
and
mov
das
loop
movsb
in
mov
jl
inc
xchg
fnstsw
out
mov
and
cltd
xchg
dec
test
shr
and
rcrb
clc
add
jmp
loop
addl
imul
adc
adc
pop
lret
icebp
cmp
je
push
add
inc
shl
lods
push
jae
mov
inc
lret
xchg
jbe
test
jge
cmp
cmp
push
or
lods
cmp
mov
mov
mull
mov
xchg
shrl
leave
pop
std
dec
xor
rol
arpl
mov
test
add
lods
orl
leave
out
lahf
inc
aaa
mov
pop
daa
sub
repz
dec
jp
sbb
or
fstl
repz
or
xor
mov
jns
test
cs
pop
stos
in
add
xor
push
jb
lock
rclb
pop
jecxz
xlat
cli
shrl
mov
xchg
lea
test
and
xor
dec
shll
push
pop
sbb
lds
add
fmuls
ss
dec
ret
push
les
xchg
ljmp
rorl
imul
outsl
jp
or
jno
cltd
push
sbb
sbb
add
mov
dec
or
pop
int
sbb
mov
stc
pop
sub
and
jl
aas
mov
ja
jmp
lock
add
repnz
inc
fisttpl
hlt
cs
loopne
sbb
push
mov
pop
es
loope
and
cltd
gs
and
jmp
lahf
fiadds
cwtl
or
cwtl
push
and
in
or
pop
fwait
or
aad
lea
mov
imul
mov
jb
pop
mov
insb
add
xor
xchg
enter
push
imul
add
ds
addr16
adc
mov
sti
jp
ret
das
mov
jp
mov
insl
call
mov
and
scas
pop
pop
push
jmp
cs
loop
jge
test
jmp
pop
pop
cmp
pop
cmpb
ds
fcompl
hlt
sbb
and
mov
rcrl
or
jo
push
push
rolb
sbb
xor
jp
repz
sub
mov
outsl
hlt
sbb
cmp
push
add
jmp
pop
mov
xor
sub
rorb
mov
adc
pop
add
push
ret
and
pop
xor
ja
rolb
sbb
mov
push
lahf
push
scas
ret
out
fiaddl
jp
xchg
jmp
xor
adc
push
cmp
cmpsb
pop
notl
jmp
inc
and
sbbb
mov
jmp
iret
cmp
push
push
ret
push
pop
pop
rorb
push
jne
jbe
inc
xor
mov
pop
cld
adc
push
inc
adcb
icebp
mov
push
add
ss
adc
pop
leave
dec
sti
into
dec
push
jmp
mov
lods
xchg
test
loope
mov
sbb
addr16
out
mov
fsin
pop
cld
test
push
std
mov
push
add
mov
push
pop
inc
sub
andl
icebp
push
pusha
cltd
mov
adc
bound
xlat
in
add
dec
or
sarb
sub
jns
xor
imul
je
or
jp
lret
dec
sub
ljmp
push
insb
addl
inc
inc
fdivs
cwtl
mov
xor
std
inc
inc
orl
pop
push
loope
jb
push
sbb
pop
call
cmp
lret
aad
fstl
stos
xlat
mov
and
xor
lahf
jae
and
cmp
subb
repz
add
pop
mov
pop
xor
xchg
push
mov
fsts
gs
sbb
and
or
aas
xor
negl
loopne
push
ret
sbb
scas
pop
in
arpl
sahf
daa
push
call
adc
pop
xor
pop
push
test
movsb
or
mov
movsl
fcoml
or
adc
in
es
addb
std
add
jl
adc
push
test
mov
sub
frstor
push
loopne
mov
ss
sub
jae
sub
setl
shr
shrb
jmp
hlt
sub
mul
andl
out
mov
in
mov
adc
aam
dec
pop
stos
cs
or
or
mov
aaa
nop
push
inc
add
xlat
jbe
in
push
and
jmp
mov
sbb
mov
rcll
pop
jmp
scas
and
bound
sbb
and
sub
cmpl
push
mov
cmc
sti
adc
sub
sti
imul
push
popa
adc
sub
sub
push
and
pop
or
push
or
mov
cmp
inc
xlat
adc
add
loop
pop
sub
cmp
aas
adc
pop
mov
adc
loopne
push
mov
lods
loop
jl
or
push
jno
xor
push
bound
pusha
or
test
sbb
sub
mov
sub
je
cli
add
push
mov
subb
fists
or
fiaddl
pop
xor
iret
je
xchg
jg
mov
mov
ficoms
lods
movsl
out
in
mov
fst
out
arpl
stos
lret
popf
je
cltd
das
or
daa
add
scas
leave
pop
cmp
mov
cmp
mov
add
mov
shl
push
mov
invd
pop
loopne
jbe
sbb
add
pop
mov
adc
orl
jmp
repz
adc
pusha
notb
bnd
stc
mov
pop
ljmp
dec
not
icebp
add
jne
pushf
and
and
mov
into
rcll
and
rcrb
sbb
cld
push
dec
and
in
dec
jbe
pop
sub
push
jmp
lock
and
mov
fstl
pop
mov
mov
inc
xchg
pop
mov
pop
das
and
mov
movsl
pop
rcrb
les
pop
shll
fistpl
out
mov
rorb
call
cmp
cli
cli
arpl
cmp
or
adc
mov
or
in
bound
or
add
dec
scas
fldenv
sbb
xor
scas
push
jmp
dec
jo
xchg
popa
in
repz
mov
into
sarb
cmp
fistpll
clc
mov
sub
push
or
insb
pop
jmp
jmp
aas
add
rcl
dec
mov
jae
add
lea
mov
sarb
imul
fmull
push
gs
jne
push
scas
popf
inc
push
into
and
add
aaa
aam
imul
in
sub
in
add
pop
mov
sbb
ljmp
test
pop
push
pushfw
pop
ljmp
push
test
pop
or
jne
push
loop
das
lret
push
dec
sub
movsb
and
cmp
sub
or
or
push
jnp
jmp
pop
cli
sbb
pop
cmp
ja
lods
clc
loope
testb
xor
xor
rorl
push
pop
pop
jle
mov
or
aaa
pop
pop
out
jge
jmp
mov
mov
or
mov
or
push
mov
bt
jmp
xor
cmpsb
push
popl
ds
jmp
mov
dec
jbe
push
jmp
int3
scas
pushf
cmp
mov
out
adc
mov
fdiv
adc
dec
repz
add
push
dec
popa
test
push
iret
int
sub
lea
inc
mov
mov
cmp
ljmp
sub
ret
movl
mov
pop
jae
xor
sbb
shl
push
mov
and
adc
rolb
icebp
or
shl
hlt
dec
jmp
mov
jmp
pop
push
jo
sbb
dec
sub
aad
sub
fs
divb
sbb
adc
shl
add
outsl
mov
cmpsl
lock
sub
push
pop
mov
out
sub
aam
rolb
push
dec
test
cltd
ds
add
dec
and
jo
dec
and
xor
std
js
inc
lock
clc
and
or
add
push
mov
mov
out
mov
popa
lea
roll
pop
xor
push
repz
or
mov
mov
pop
mov
lods
cli
add
pop
test
std
icebp
pop
rolb
or
in
dec
cltd
pop
fbld
xor
ret
push
xor
fildll
test
mov
jl
push
imul
adc
fildll
addr16
in
cs
into
loop
movsl
stos
xor
andl
in
sub
fstps
sub
clc
sbb
shll
pop
mov
jecxz
in
sbb
fs
jp
out
inc
mov
jg
dec
xchg
addl
bound
and
hlt
icebp
push
dec
lods
adc
es
and
add
and
or
jae
push
adc
je
sbb
jl
das
xlat
call
in
or
push
xchg
mov
ret
mov
sbb
stos
cmp
dec
stos
or
shr
pop
in
jmp
adc
dec
or
loope
mov
into
add
add
add
das
xor
lock
repz
dec
in
std
fbstp
sbb
fs
in
push
adc
push
add
mov
jno
jmp
adc
rolb
push
push
push
mov
rcrl
push
sub
cmp
nop
mov
jae
sbb
sbb
data16
jmp
mov
fiaddl
jg
add
scas
repnz
mov
cmp
jmp
push
lds
insb
lahf
jmp
lods
jne
out
inc
add
jg
fs
int3
iret
dec
pop
sub
sub
push
lds
das
cwtl
mov
in
mov
pusha
push
jb
push
inc
xlat
jmp
xchg
pop
jge
and
mov
add
add
lret
adc
mov
push
ficoml
cltd
daa
jmp
cld
adc
mov
inc
das
decl
sub
cmp
daa
fmuls
jl
xlat
dec
mov
inc
pop
or
gs
andl
cmpb
xchg
xor
adc
mov
push
jecxz
andl
test
pop
mov
mov
rorl
sbb
dec
mov
std
in
xlat
xor
and
cmp
push
jmp
xchg
mov
out
and
push
push
or
mov
or
push
jb
pop
cld
mov
mov
ljmp
sub
jmp
push
or
adcb
sub
push
ss
pop
fisttpl
imul
scas
lods
dec
adc
pop
mov
pop
mov
lock
js
sub
mov
add
je
insl
addl
adc
ljmp
sarb
adc
out
cs
adc
add
adc
and
xchg
adc
movb
repz
outsl
inc
xchg
mov
cmpsl
push
loopne
jmp
and
inc
outsb
or
adc
cmp
mov
push
push
adc
decl
js
bnd
sbb
dec
pop
lahf
mov
sbbb
or
jl
push
xchg
mov
mov
pusha
push
push
push
jne
jl
mov
in
lds
push
mov
adc
xchg
sub
int
loop
sahf
mov
adc
std
and
add
push
jmp
in
add
jnp
out
mov
sbb
add
adc
gs
int
and
stc
xor
or
sti
sar
xchg
jmp
fwait
cmp
daa
stos
adc
or
jns
add
sub
cmp
xor
jmp
cmc
popf
or
lock
fnstenv
dec
incb
test
adc
mov
arpl
inc
movsl
divb
adc
ja
fcoml
dec
je
mov
sahf
inc
cli
dec
ds
and
dec
pop
mov
adc
lods
or
add
mov
enter
pop
push
popf
jbe
shlb
add
pop
add
mov
mov
xlat
sti
or
xchg
adc
push
loopne
fmuls
daa
inc
inc
add
and
and
or
or
bound
jle
or
mov
pop
lea
sbb
ret
push
fildll
pop
fcompl
cld
addb
fucomp
movsb
xor
lock
pop
mov
inc
add
mov
push
jno
pop
mov
sahf
subb
hlt
add
cmp
sub
lret
inc
dec
mov
shrb
ret
inc
mov
sti
cli
testl
xchg
enter
inc
xchg
out
popf
jl
dec
add
and
fdivrs
sub
into
sti
pop
jbe
mov
pop
mov
mov
loopne
cmp
and
stos
add
cmp
dec
mov
or
bound
push
inc
sbb
add
add
sub
add
loop
aaa
popf
je
enter
or
inc
jge
xchg
addr16
es
add
aas
sub
cmp
push
xchg
inc
add
lods
xchg
ret
pop
hlt
dec
sbb
inc
mov
jp
mov
pop
and
push
out
mov
bndldx
dec
frstor
popf
xchg
jge
add
out
test
sub
xchg
shll
pop
push
sbb
sbb
sbb
pop
jmp
xor
ljmp
pop
mov
push
xor
push
jmp
sub
iret
popf
shlb
outsl
int3
and
daa
and
arpl
mov
ljmp
int
xchg
mov
test
push
add
pop
fbld
push
ret
push
push
push
dec
inc
mov
les
mov
lret
push
decl
repnz
fnop
mov
pop
push
js
inc
and
pop
cmp
cmp
jg
pop
xor
pop
not
sub
lods
mov
and
pop
mov
sbb
inc
xor
mov
jp
loopne
in
push
add
push
push
jmp
rcll
add
inc
neg
ljmp
jmp
xlat
scas
sbb
mov
push
push
jmp
ret
shl
pop
sub
mov
inc
jmp
pop
sub
jmp
imul
mov
popf
fstl
nop
pop
dec
addr16
ds
pop
dec
push
lods
mov
or
dec
pop
inc
decb
and
jge
aas
fistpl
loopne
mov
xchg
jmp
dec
pop
shlb
jl
rorl
adc
inc
les
push
repnz
outsb
stc
mov
outsl
or
jl
in
xchg
fistl
add
inc
adc
mov
mov
or
mov
ret
test
lock
repnz
les
sbb
inc
and
rol
decb
sbb
add
movsl
scas
sub
out
dec
push
icebp
mov
jle
incl
lahf
pop
push
pop
jmp
inc
imulb
and
push
mov
jae
inc
in
aad
and
pop
fidivl
adc
jl
pop
mov
add
cmp
push
jns
adc
cmp
xchg
rorb
pop
sbb
xor
cmp
and
fisttpll
pop
ljmp
out
pop
test
rorl
and
sbb
mov
mov
cmovns
pop
test
lods
and
adc
inc
stos
orb
mov
ljmp
dec
jne
out
bound
rclb
sbb
add
push
xchg
pop
xor
jb
sarb
shrl
xchg
mov
iret
sbb
inc
and
out
xchg
and
pusha
jmp
popa
gs
xor
andl
or
adc
test
adc
ret
enter
pusha
shlb
mov
adc
pop
mov
push
add
xchg
sub
mov
dec
jo
jl
fstpl
call
sbb
mov
pop
add
dec
mov
out
fstpl
call
mov
outsl
cmp
divb
out
hlt
fstps
ret
sbb
andb
cs
subb
xchg
rcll
mov
cmp
push
xor
aam
fildl
addr16
cmc
lahf
push
aam
xor
pop
xorl
ret
jecxz
mov
in
ucomiss
xchg
sub
push
push
popf
xchg
inc
cmp
add
inc
sbbl
cs
dec
movsl
clc
sti
and
mov
loop
or
pop
or
gs
push
out
pop
into
icebp
jbe
xlat
daa
mov
lods
pop
and
jl
mov
xchg
jo
pop
test
out
mov
cmp
sub
add
lods
dec
fisubrs
mov
aas
jnp
push
mov
andl
int
outsb
nop
cli
or
pop
pop
cmp
stc
dec
or
mov
ficoml
dec
aad
or
cs
fcos
rolb
dec
push
and
sbb
mov
imul
pop
mov
pop
aam
pop
jmp
push
pop
push
dec
mov
sub
mov
pop
bound
sub
push
lahf
je
fsubr
arpl
xchg
divb
jno
inc
clc
cmpb
icebp
pop
pop
mov
sub
jb
aas
mov
pop
adc
push
stc
int3
add
pop
dec
nop
push
hlt
pop
push
mov
jl
mov
filds
sbb
push
imul
filds
xor
jo
mov
jecxz
outsl
mov
xlat
data16
mov
mov
mov
in
jbe
cmp
pop
mov
add
sbb
mov
roll
pusha
jae
das
pop
lcall
jb
pop
mov
imul
lock
rorl
mov
mov
or
andb
push
add
jmp
shlb
push
xchg
push
call
pushf
loope
add
or
dec
cli
xor
stc
xor
ds
dec
xor
fimuls
inc
imul
adc
mov
loop
je,pn
sub
std
into
jmp
adc
mov
adc
dec
addb
in
rorl
or
jmp
mov
js
hlt
fs
jle
mov
add
xor
lods
sbbb
mov
fmuls
mov
ss
imul
inc
adc
or
push
es
incb
or
test
sub
inc
cmp
mov
adcl
or
pop
jno
fucom
add
mov
inc
les
sbb
rclb
dec
cmp
ret
mov
shll
outsb
pop
xlat
push
inc
mov
ficomps
lods
movsl
fdivrl
sbb
lods
daa
or
or
data16
fnstsw
les
fadds
xchg
and
mov
sahf
scas
jno
xchg
scas
cmp
dec
movsb
mov
fs
mov
das
ret
je
loopne
sub
pop
pop
pusha
pop
shlb
jae
dec
xor
mov
adc
popf
pop
pop
mov
mov
lods
mov
mov
mov
xor
nop
mov
rorb
pop
mov
jbe
test
add
fsubrl
fsubr
ljmp
fldcw
inc
mov
jo
sub
fmuls
push
mov
roll
adc
sub
pop
pop
adc
sbb
sbb
ret
dec
push
daa
sbb
sub
inc
imul
sbb
sub
icebp
pop
clc
add
scas
stos
mov
and
lret
rcr
mov
lds
popa
push
sub
or
xchg
jp
sbb
inc
or
adcb
push
xor
jb
shlb
ss
add
push
inc
dec
mov
mull
xor
sub
lods
ficomps
in
jnp
adc
aas
add
sub
and
inc
call
fcoms
xchg
pop
stos
add
xorb
bound
lods
nop
in
ret
mov
jmp
adc
mov
pop
pop
int3
das
test
xorl
or
inc
mov
jp
insb
jmp
daa
push
daa
push
jge
cmp
dec
leave
sub
add
in
lret
ljmp
jge
mov
in
mov
clc
imul
mov
dec
mov
sub
inc
xchg
mov
sub
std
and
jmp
out
aas
sub
dec
in
pop
add
fbstp
sbb
push
jbe
daa
stos
loope
repnz
jp
movb
xchg
add
outsb
insl
sbb
insb
xchg
jle
or
push
xchg
push
repnz
scas
add
adc
adcb
xor
jb
sub
mov
add
test
aam
or
pop
xlat
inc
adc
mov
pop
mov
ror
xchg
dec
mov
loopne
push
mov
mov
xchg
push
lret
lret
or
and
mov
fisubrs
dec
hlt
test
push
out
pop
xchg
pop
xchg
jne
add
mov
sbb
push
mov
test
bound
pop
rcrl
mov
shl
lret
testb
mov
fsubrl
mov
xchg
or
sbb
mov
inc
pop
sub
into
mov
dec
ret
mull
jne
cmp
mov
mov
inc
mov
and
pop
jge
pop
fdiv
adc
data16
add
pop
jmp
cmp
int
stc
es
pop
rol
ret
daa
adc
and
fwait
andl
rclb
in
sub
mov
imul
rorl
clc
insb
jg
push
repnz
sti
sub
lea
cmpsl
add
cmc
mov
inc
pop
dec
lock
sbb
mov
xor
dec
add
mov
cmpsl
rolb
aam
jp
mov
loopne
pop
pop
cmc
xor
ret
outsl
push
out
dec
movd
push
sub
adc
mov
sti
cmp
test
jmp
out
imul
pop
mov
lock
repz
push
lcall
fadds
push
test
xor
pusha
mov
loopne
daa
dec
dec
sbbl
or
pop
cld
jecxz
or
outsl
push
sub
inc
adc
xor
fmuls
in
adc
jp
fs
loop
or
scas
loopne
das
pop
add
xlat
daa
inc
notl
push
pop
mov
rcr
mov
xor
jp
addb
sbb
jno
lock
inc
repz
call
clc
shl
dec
jp
add
add
pop
aas
daa
cs
mov
push
or
adc
add
dec
mov
movsb
cmp
iret
gs
lcall
sbb
dec
mov
push
ja,pn
pop
addl
xchg
shl
pop
std
ret
filds
loopne
xchg
dec
lahf
cwtl
stos
fs
cld
inc
push
pop
mov
or
xor
sarb
ret
cmc
jo
std
push
mov
mov
int3
xchg
pop
sub
rolb
addb
cmpsl
repz
adc
rcrb
sbb
or
pop
xchg
inc
or
ds
and
or
cmp
cld
mov
add
daa
pushf
push
push
push
push
loopne
mov
xchg
pop
fwait
inc
jnp
jns
mov
and
test
adc
cmpl
int3
jmp
mov
les
add
pop
sub
xchg
xchg
fsubs
mov
xchg
icebp
adc
jecxz
xor
jno
adc
push
lods
jno
sbb
sbb
mov
xchg
pop
jg
lahf
dec
js
jnp
pop
mov
push
sub
in
mov
int3
test
test
sub
sub
adc
lock
cmpsl
mov
scas
out
push
outsb
xchg
test
daa
push
stc
mov
xchg
inc
push
jne
pop
imul
jb
aad
lcall
push
cmc
push
sahf
dec
lcall
leave
ja
call
add
cmp
or
dec
cmc
xor
jbe
push
in
arpl
or
mov
push
push
in
sub
mov
mov
add
shll
jmp
and
inc
cmpsb
rclb
mov
movsb
xor
sub
mov
or
sub
inc
sarb
add
pusha
jne
push
sub
shrb
pop
xor
add
cmpsb
pop
das
jmp
push
mov
jno
out
out
sub
test
cmp
sbb
push
daa
cmp
les
orl
cld
aad
dec
jmp
call
in
jecxz
cltd
adc
sbb
add
test
popa
pop
xor
or
std
dec
clc
ljmp
fiaddl
ret
add
jmp
xchg
push
add
loope
inc
xor
sbb
push
mov
jmp
xchg
stc
pushf
cmp
mov
sub
jmp
repnz
xor
ror
adc
mov
mov
mov
sarb
inc
push
loop
add
push
add
cld
and
adc
adc
jecxz
stos
xchg
pop
add
lret
xor
cmpsl
add
jno
adc
pop
call
mov
inc
mov
repnz
popl
cld
pop
cli
je
cli
mov
inc
and
mov
xchg
call
pusha
pop
mov
mov
inc
pop
loop
pop
int
xchg
adc
imul
loope
outsl
in
dec
jmp
sar
movsb
clc
into
cmp
je
pop
push
insb
addb
call
jg
push
pusha
fstpt
rclb
pop
pop
mov
mov
cmp
or
repnz
lret
inc
shlb
test
xchg
or
addb
sub
jo
add
cmp
out
or
dec
pop
mov
jmp
insb
rol
repz
xor
mov
shr
pusha
sbb
lock
jmp
stc
xchg
cwtl
add
jb
jnp
add
cwtl
push
jl
movsb
lcall
sub
dec
nop
adc
pop
stos
pushf
scas
sub
cltd
sub
lods
inc
pop
movsb
pop
xchg
in
pop
pop
push
push
push
je
push
add
push
push
push
pop
xchg
mov
loope
cmp
fbld
jg
or
and
hlt
stos
mov
aam
push
lods
cmpsb
out
sub
jmp
and
pop
push
jmp
enter
cmp
add
pop
dec
mov
cmp
sbb
lods
fs
enter
xchg
sub
icebp
fbstp
or
fsubs
jmp
mov
arpl
outsl
subb
call
dec
mov
add
cmp
pop
jmp
cltd
out
mov
sub
xchg
ror
inc
cmp
fmuls
call
push
add
jge
pop
xor
lahf
gs
mov
cmp
sub
addb
pop
idivb
jo
push
push
iret
adc
or
adc
mov
mov
xor
add
or
or
add
cwtl
jae
sub
xor
int3
jns
pop
jp
or
inc
or
mov
pop
jno
mull
sub
jo
sbb
cmc
pop
dec
out
cmpb
pop
int
jb
or
mov
or
jmp
ret
data16
xchg
data16
pop
push
scas
dec
adc
test
leave
xchg
add
dec
repz
pop
aas
jmp
cmpsb
push
xchg
adc
mov
sub
cmpsb
mov
and
cs
mov
push
cmpb
ljmp
xchg
fimull
aam
je
and
add
sub
xor
push
jmp
pop
std
inc
or
adc
sub
mov
repnz
pushf
add
xlat
adc
mov
add
xor
dec
jp
or
fucompp
jns
cmp
mov
pop
push
insb
aaa
enter
pop
and
mov
fs
jbe
les
mov
push
in
push
push
pop
sbb
insl
int
or
adc
dec
cmc
mov
adc
filds
inc
das
add
sbb
push
or
mov
and
in
mov
imul
std
nop
sbb
pop
mov
nop
inc
lock
jmp
push
mov
das
pusha
or
mov
int3
nop
mov
add
sti
jmp
push
stc
jne
ja
loop
pop
xchg
push
fstpl
sbb
stos
mov
cmpsb
pushf
and
lds
inc
mov
adc
out
xlat
xchg
fsts
push
test
adc
stos
movsb
cmpsl
pop
adc
daa
mov
outsl
negb
ja
jl
push
xchg
inc
fcoms
adc
adc
mov
adc
or
push
out
pop
cmpsb
inc
cld
pusha
mov
ja,pn
mov
push
mov
scas
mov
imulb
sub
cwtl
pushf
and
and
lret
dec
sbb
fwait
adc
sub
sub
cmp
loope
lods
xchg
fildll
cmc
xchg
clc
in
pop
add
out
mov
aas
cltd
sahf
mov
push
jmp
les
dec
mov
adc
divb
lds
mov
and
jg
leave
and
cltd
loop
cmpsb
push
repz
add
aad
jnp
mov
in
mov
mov
enter
jns
pop
int
adc
insb
pop
push
popa
popf
mov
jmp
mov
data16
xor
adc
ds
pop
push
push
lea
dec
ret
ja
mov
dec
lea
jg
mov
add
lret
pop
sub
shrl
ss
xchg
sub
in
jnp
jp
aam
xchg
arpl
cmp
jo
sbb
inc
cmp
push
sub
test
jle
popf
filds
mov
mov
pop
sub
jg
jmp
push
pop
mov
scas
jae
jb
dec
push
inc
lods
aam
jns
in
pop
and
test
push
xor
inc
fsubr
add
push
filds
push
or
sub
pop
and
pop
push
push
in
sub
call
scas
jae
insl
cmc
fisubrl
add
cmp
mov
dec
shrl
or
lds
paddq
stos
pop
lea
jbe
mov
in
stos
jo
pop
push
push
movsl
jae
jmp
ret
cli
mov
ljmp
fwait
mov
mov
mov
icebp
mov
lock
push
and
pop
pop
fnstenv
pushf
ret
pop
in
mov
push
test
adc
negb
aam
push
push
push
aam
outsl
hlt
inc
in
lahf
inc
ja
mov
mov
icebp
dec
and
clc
mov
xchg
inc
sub
fs
in
ljmp
jmp
stos
bound
std
jne
out
je
mov
lds
addr16
std
movsb
xor
sbb
push
cmpb
sub
fcom
aaa
add
ljmp
adc
and
cmp
push
add
or
leave
jg
and
inc
push
xchg
adc
xchg
movsb
add
xchg
ror
mov
sub
mov
mov
inc
cwtl
addr16
idiv
fstp
imul
dec
mov
and
aas
cmp
push
push
jmp
jmp
jecxz
cli
lret
mov
adc
push
jmp
and
leave
xlat
sub
pop
ljmp
xorb
jmp
mulps
pop
xchg
jg
mov
out
lds
push
mov
out
lahf
rol
add
inc
pop
not
inc
gs
jno
push
mov
jmp
sub
mov
jmp
mov
xchg
mov
add
jae
mov
pop
mov
cld
or
xor
add
xor
stc
jmp
dec
add
inc
xor
cltd
pop
jmp
out
pop
inc
sbb
and
iret
xor
fisubrl
mov
add
jnp
scas
inc
or
or
xor
and
push
xchg
sub
or
pop
insl
dec
mov
enter
mov
popa
or
xor
pop
js
push
inc
bndldx
or
pop
pop
push
shll
shlb
adc
dec
js
ret
lock
test
lods
inc
mov
hlt
push
pop
push
or
pop
push
mov
jge
and
fwait
push
outsb
aas
pop
push
neg
dec
shrl
and
dec
pop
adc
mov
test
rclb
jmp
ds
insb
dec
pusha
fcomps
insl
decb
adc
add
push
cmpsb
xor
inc
xor
movsb
jns
push
imul
pusha
xchg
add
shr
inc
push
cmp
jmp
push
mov
loopne
add
popa
out
daa
jmp
pop
inc
add
addl
in
jp
js
cwtl
cmp
lods
add
mov
dec
out
lahf
lock
shl
adc
adc
loopne
xchg
lret
cmpsb
lods
jl
lock
fwait
repnz
cmpb
add
mov
cmp
les
outsb
jecxz
pop
subl
subb
mov
jp
pop
bound
push
mov
or
sub
repz
cs
dec
jmp
mov
fisubs
add
in
sbb
xchg
sti
sub
movsl
rolb
sbb
lret
loopne
pop
cmpb
xchg
mov
cmp
xchg
push
push
stc
add
pop
popa
push
mov
jl
pop
sarl
imull
add
xchg
nop
inc
loopne
or
jmp
pop
or
popf
scas
cmpb
test
dec
pop
or
fisttps
mov
mov
das
xor
repz
lods
jmp
adc
dec
xor
sti
jno
sub
test
shl
clc
and
call
lock
imul
push
dec
mov
leave
sub
loop
in
lea
adc
dec
inc
shll
jp
xlat
push
lea
sub
mov
inc
sub
xor
sub
pop
adc
and
icebp
rclb
int
push
xor
push
in
out
or
xor
xchg
add
push
mov
jbe
pop
mov
out
pusha
inc
pop
cmp
leave
dec
in
inc
rclb
outsb
fnsave
int3
add
sarb
jge
sub
inc
dec
add
popa
mov
jecxz
jno
xor
add
or
cltd
nop
push
bound
pop
jmp
and
sub
mov
pop
dec
jns
add
call
cwtl
mov
jge
outsl
push
sbb
and
add
push
notb
push
test
stos
jecxz
add
push
repnz
fdivs
adc
xor
pushf
push
ljmp
mov
or
add
ret
or
fcmovnb
in
enter
sbb
pop
sub
push
aaa
pop
sub
mov
sarb
pop
inc
test
cmp
xor
ret
jne
loop
in
add
xor
inc
fidivrl
push
mov
popl
scas
cmpsb
ret
push
rorl
into
mov
mov
lahf
cwtl
cld
jae
subl
repz
mov
or
aam
or
pop
mov
fs
ja
pushf
adc
or
jbe
cmc
push
mov
pop
jnp
xchg
movzwl
jns
mov
imul
pop
mov
les
fimuls
aad
mov
icebp
xchg
pop
mov
testl
adc
out
jle
jae
cwtl
mov
push
dec
xor
nop
repnz
lds
les
neg
push
inc
outsb
mov
out
inc
dec
neg
cs
xor
sbb
inc
or
jo
push
and
push
into
pop
add
cwtl
aas
mov
shr
xchg
and
push
loopne
lods
jmp
push
into
sub
leave
add
or
stos
push
jge
xor
cld
ja
test
sub
sbb
out
push
js
dec
rorl
xor
xor
rol
or
fistpll
inc
dec
out
or
das
lds
adc
cs
jmp
add
push
outsl
not
xchg
filds
and
xor
data16
test
or
pop
mov
mov
jnp
hlt
cli
jb
sub
dec
clc
cmp
aaa
pop
rorb
mov
add
adc
adc
jmp
pusha
das
sbb
cmp
mov
call
call
aad
pop
daa
sub
dec
mov
jns
mov
add
xor
add
shr
fucomip
rolb
and
test
inc
and
push
test
add
lea
add
dec
xchg
jae
add
leave
sbb
in
mov
mov
push
sti
out
ss
mov
icebp
daa
jns
xchg
sbb
gs
adc
sbb
lds
call
mov
dec
sti
mov
pop
icebp
in
jmp
mov
and
and
mov
das
pop
pop
and
cs
pop
push
faddl
call
push
push
ja
mov
cs
dec
mov
jno
js
push
mov
sub
jo
mov
push
out
rcrl
movsl
cmc
sub
jge
das
mov
jmp
sub
inc
jg
mov
scas
leave
aam
imul
push
add
sub
sahf
add
cmp
test
sbbl
pop
inc
push
xchg
out
xor
faddl
jle
fiadds
push
pop
pop
sub
addr16
pusha
xor
push
jb
in
inc
inc
aaa
aam
adc
fidivrs
or
int
lods
fwait
xchg
ljmp
pushf
push
dec
inc
push
jmp
les
cmpsl
add
popf
pop
sarl
sub
pop
xchg
lock
jno
dec
push
or
loopne
add
cli
cmp
jl
movsl
imul
jmp
shrb
jno
je
push
sub
push
dec
pop
cmp
mov
js
dec
mov
sub
sub
ljmp
xchg
jg
rcrl
adc
out
mov
inc
push
or
roll
icebp
push
mov
adc
cmp
add
and
sbb
shr
rcrb
and
sub
lock
pop
jg
mov
loope
cmp
stos
pop
push
dec
int3
sub
cmp
stos
jl
gs
ret
cmp
pop
mov
add
in
push
es
mov
cld
outsl
jle
fs
add
mov
mov
push
pop
jp
pop
pop
mov
pop
ds
xor
jge
push
inc
push
fs
or
adc
addb
mov
aam
and
inc
add
add
std
adc
and
jmp
loope
into
loope
sbb
or
mov
mov
leave
push
push
push
jnp
addb
js
shlb
xchg
add
jns
test
inc
orb
mov
sub
xor
inc
mov
les
push
imul
pop
lds
lea
pop
ds
cmp
jl
or
mov
inc
das
in
dec
insl
les
pop
pop
daa
fbstp
jne
repnz
jmp
in
pop
push
stos
test
jle
leave
inc
add
mov
push
jbe
mov
add
mov
imul
inc
pushf
mov
pop
pop
rorl
dec
int
cld
dec
cltd
imul
adc
cmpl
inc
jmp
stos
mov
cli
cmp
shr
aam
mov
mov
pop
jmp
pop
cmp
pop
daa
pop
adc
add
pop
cmpsb
ss
adc
nop
notl
fs
sub
cmp
sub
fisttpl
jge
push
jmp
pop
rcrb
cmp
stc
shlb
fcoml
mov
pop
push
std
xor
loop
orb
add
pop
sti
popa
lret
sub
cmp
mov
rcl
dec
dec
cs
jns
ficoms
dec
out
sub
in
mov
and
inc
loopne
aaa
and
mov
add
push
stos
jmpw
inc
mov
jne
loope
aas
lods
and
stos
movsl
jmp
ficompl
stc
add
mov
sub
push
fdiv
pop
mov
subl
outsb
in
test
rolb
pop
cwtl
rorl
add
shlb
mov
mov
inc
sub
pushl
jae
push
push
add
outsl
add
rcrb
pop
or
dec
mov
hlt
incb
in
xchg
lods
pusha
pusha
ds
arpl
xlat
mov
cmc
fs
mov
imul
pusha
cmc
mov
pop
lret
xchg
xchg
push
or
mov
ss
jmp
pop
push
mov
lds
ret
sbb
cmc
ljmp
jecxz
mov
cmp
or
test
insl
or
sbb
adc
and
rcrl
out
mov
push
pop
mov
sub
lods
push
dec
outsb
in
js
dec
popf
sbbl
rol
mov
jecxz
or
jl
jmp
lock
add
add
aam
jb
xlat
sub
and
mov
mov
xchg
aam
or
lods
in
mov
jae
je
mov
pop
mov
inc
sub
dec
scas
sub
jmp
andb
cmp
stc
ljmp
add
push
test
popf
lret
test
push
lock
xchg
lock
out
and
ret
jmp
sbb
divl
cwtl
and
xchg
mov
aam
jns
mov
enter
xchg
inc
test
xchg
sub
pusha
or
not
in
mov
pop
or
adc
sub
stc
js
jnp
fisubrs
push
or
leave
iret
mov
mov
jnp
insl
jp
movsl
mov
jns
mov
dec
rclb
xchg
addr16
xor
sub
mov
leave
lcall
cmp
movsl
sbbb
loope
jmp
and
cmp
mov
insl
xchg
inc
mov
clc
xchg
mov
dec
loope
pusha
xor
fsubs
sbbb
test
lock
fists
ljmp
inc
pushf
cs
daa
add
pusha
daa
cmp
iret
and
ficoms
test
xlat
sub
inc
sti
lods
out
add
sbb
movsl
push
push
inc
mov
or
fs
pop
and
add
mov
bound
push
add
push
popf
lock
add
push
into
xlat
pop
push
cmp
sub
xor
je
push
mov
cmc
cwtl
pop
push
loop
and
mov
sub
test
stos
test
adc
cmp
and
xor
add
out
icebp
loopne
ror
or
enter
loopne
xor
mov
adc
pop
inc
addl
xchg
rcrb
in
add
jae
int3
mov
sbb
je
rorl
lods
cli
test
neg
push
add
movsb
mov
sub
int
inc
mov
in
dec
dec
inc
inc
push
arpl
mov
push
or
and
adc
jbe
paddd
sub
iret
lret
inc
cltd
rcll
pop
cmp
insl
xor
cltd
add
testb
loop
or
xor
cmp
xchg
pop
adc
or
or
dec
pop
not
popf
nop
popf
mov
or
jnp
jo
push
sbb
or
push
nop
mov
mov
and
int3
mov
lock
xchg
hlt
cmp
mov
inc
hlt
push
cmp
or
frstor
andl
pop
xlat
mov
jbe
pop
int
int
hlt
adc
adc
imul
mov
sub
dec
enter
popf
icebp
dec
out
in
inc
pop
jmp
loop
cltd
aad
mov
add
push
outsb
mov
adc
lods
int
cli
sub
das
cmpsb
cmp
mov
jmp
adc
adc
out
or
pop
inc
push
rol
add
loope
dec
add
sub
xor
jnp
dec
and
mov
jnp
xchg
fnstsw
out
jnp
lret
push
arpl
fimuls
jg
sub
xchg
hlt
push
jns
or
into
cmp
sar
pop
mov
jmp
inc
dec
push
mov
mov
jb
and
or
movsb
xchg
in
aas
dec
std
mov
rolb
mov
sub
add
bound
shrl
out
mov
xor
push
stos
mov
jmp
test
sub
adc
dec
mov
pusha
sub
addr16
inc
test
imul
shll
inc
inc
scas
shrl
add
push
push
cmc
jle
push
mov
adc
shll
mov
or
sub
adc
push
push
sarl
and
adc
sub
inc
or
lock
cli
repnz
popa
mov
test
movsb
inc
adc
sti
mov
or
xchg
pop
mov
leave
push
jae
jecxz
push
imul
xchg
push
dec
lods
xchg
jmp
sbb
jge
mov
mov
jnp
out
add
xor
sbb
pop
popl
scas
jno
xor
cmp
fs
mov
enter
lcall
dec
mov
and
in
inc
sub
and
imul
inc
cmp
lcall
sarb
or
rcrl
or
insl
lcall
jnp
addb
aam
xor
pop
push
jmp
loope
in
out
add
loopne
pop
and
and
jmp
int
xor
pop
pop
cli
shr
ret
pop
cltd
mov
or
dec
pop
add
mov
div
jge
adc
push
mov
xor
pop
jmp
in
insb
lahf
add
inc
or
insb
jns
mov
pop
shlb
loop
ret
jne
mov
push
push
add
rorb
adc
mov
sahf
mov
add
mov
scas
hlt
shrl
enter
mov
test
or
pop
hlt
es
push
sub
ja
aad
sbb
adc
fs
cmp
adc
mov
in
out
nop
xchg
dec
scas
sub
push
mov
mov
adc
xchg
xchg
jge
sahf
mov
inc
popf
decb
into
xor
or
lock
repz
outsb
jns
mov
push
mov
xor
icebp
and
out
add
push
cs
jg
lds
pop
mov
xchg
jns
cmc
and
ret
pusha
ret
add
out
testb
adc
xor
sbbb
cmpsb
out
sub
repz
hlt
add
pop
ret
pop
lock
pop
dec
sub
sbb
lahf
pop
les
push
js
pop
push
mov
aas
xchg
mov
ficompl
adc
and
cmp
popf
shlb
pop
cmpsb
sub
push
shlb
pop
pop
xor
mov
add
nop
mov
repnz
jo
jae
das
pop
mov
inc
xorb
inc
inc
out
imul
shl
cmc
mov
xlat
jle
or
enter
xchg
aad
and
xchg
add
adc
lret
inc
or
pop
add
inc
loopne
xor
jle
push
sarb
sub
loope
sub
scas
mov
push
and
dec
outsb
in
insl
shrl
jno
icebp
scas
pop
pop
push
push
das
es
jmp
push
mov
ja
cmpsl
and
and
rol
filds
inc
cmp
inc
lods
out
shll
add
lea
mov
ljmp
test
jecxz
rclb
push
or
or
sbb
sub
pop
ret
jmp
movsl
mov
cmp
andb
inc
sub
push
std
sbb
fdivrs
push
xchg
push
rcr
cmp
orb
loope
inc
popf
mov
pop
loopne
pop
test
or
adc
and
sub
lcall
cmp
test
test
add
stos
ret
jmp
pop
movsl
xor
icebp
mov
ja
scas
inc
stos
lods
pop
cmp
test
ja
mov
push
adc
addb
pop
push
js
push
ret
mov
jb
jo
add
mov
add
mov
idiv
jle
or
dec
add
xor
and
mov
ds
cmpsl
pop
das
nop
add
shrb
adc
sbb
lret
loop
imul
jo
cli
inc
jecxz
cmp
push
ja
scas
inc
out
mov
sub
out
movsl
jo
je
sub
ret
push
pop
fcmovb
decl
mov
aaa
mov
addb
inc
or
pop
pop
rolb
cwtl
xchg
jp
movd
xor
cmc
mov
jmp
daa
cmp
hlt
or
pop
pop
cwtl
jmp
mov
pushf
out
push
adc
xchg
add
add
inc
es
xor
out
inc
int3
pop
pop
mov
jnp
or
jo
jmp
out
mov
lods
push
dec
push
jp
rorb
pop
adc
imul
push
icebp
lods
das
popa
pop
jle
adc
ret
sub
popa
stc
push
jns
mov
pop
pop
mov
leave
data16
in
push
jae
pop
jmp
mov
adc
ja
xor
leave
cli
ja
mov
pop
inc
or
sarb
jle
call
sbb
adc
jg
test
mov
jne
cmp
loopne
fimuls
insb
add
out
adc
jne
pop
mov
and
push
and
sbb
clc
sub
jmp
push
sbb
or
adc
and
ficoms
stc
imul
xchg
ss
inc
ds
inc
movsl
out
lods
xchg
bound
inc
or
loopne
jge
xchg
push
or
shrl
push
in
jp
leave
dec
movsl
or
add
jmp
push
mov
jmp
je
push
dec
pusha
cltd
or
jmp
mov
in
or
xor
cmp
dec
xor
xchg
mov
lock
inc
cmp
test
jmp
daa
call
fsubrs
or
lods
cmp
xor
loop
outsb
clc
cltd
pop
push
jmp
call
adc
dec
pop
fsts
pop
adc
and
push
push
pop
movsb
in
pop
shrl
xor
or
aas
sub
icebp
test
sbb
aaa
sbb
aaa
adc
push
fstl
xchg
mov
and
out
cli
sub
imul
jle
xchg
idiv
ret
aad
ficomps
popf
jmp
and
push
hlt
add
push
and
pop
sbb
or
scas
lret
gs
adc
xor
sub
neg
nop
addr16
adc
or
or
cli
mov
mov
xchg
cmp
int3
test
mov
push
add
pop
ret
popf
add
adc
adc
adc
popa
mov
int
imul
push
mov
in
or
arpl
and
aad
pslld
xor
stos
ss
std
gs
add
xor
daa
daa
push
add
jl
jmp
pop
sub
mov
fsubr
mov
add
jg
add
mov
mov
mov
jae
xchg
and
mov
push
pop
pop
push
cmp
xchg
sub
data16
stc
mov
cmp
jmp
subl
push
mov
adc
rolb
inc
pop
push
into
mov
pop
push
add
lret
cmp
jge
cmp
push
notl
enter
cmpsl
pop
flds
jl
mov
adc
or
nop
sub
mov
lds
gs
inc
pop
cmp
inc
jmp
add
movsb
hlt
jmp
mov
cmp
and
dec
push
inc
add
jb
push
cmp
clc
scas
sub
adc
xor
aad
fstpt
xchg
pop
les
arpl
jle
sbb
push
pop
adc
sahf
mov
push
cmp
call
push
es
pop
rcll
lock
outsb
or
flds
arpl
or
mov
lods
in
sub
dec
cli
andb
rcl
pop
rorl
pop
sbbb
dec
sub
inc
pusha
inc
pushf
cmp
call
and
adc
adc
aad
inc
jg
in
lock
imul
add
add
sub
or
mov
sub
outsl
inc
addr16
add
stos
into
mov
in
lods
dec
jecxz
sub
iret
fcompl
mov
pop
jg
push
cmp
stc
pop
sbb
push
jmp
mov
xchg
daa
fsubrs
jns
popa
add
push
inc
cmc
jo
add
inc
mov
sub
push
mov
pop
subl
mov
pop
mov
test
lret
ret
ljmp
mov
xchg
jno
cmpb
lahf
xchg
icebp
jmp
out
test
jnp
mov
repnz
or
jge
adc
add
jmp
pop
fldl2t
lcall
xchg
and
hlt
sub
ficoml
cmovo
scas
lcall
xor
jge
pushf
in
int3
xchg
jg
addr16
inc
popf
push
loop
jmp
push
loope
cmp
jmp
pushf
test
push
hlt
jl
popa
sub
and
fadds
add
aam
sub
dec
xorb
adc
pop
jne
adc
sub
sbb
xchg
into
push
movsl
xchg
add
pop
jmp
enter
push
inc
cli
xor
or
pop
lcall
push
mov
dec
test
add
pop
sti
mov
jmp
cli
push
loop
push
push
lds
xlat
jp
lcall
movsb
mov
inc
lcall
mov
or
push
push
and
aaa
add
adc
xchg
dec
dec
or
lcall
ret
inc
ds
push
cmc
in
imul
jge
test
out
push
fadds
jne
fs
and
and
cmp
stos
add
adc
mov
or
sti
push
aad
xor
movsl
mov
pop
sti
iret
xchg
adc
or
push
sub
js
or
shr
pop
sbb
xor
jmp
not
cs
jp
fisubrl
sti
call
or
sub
jg
dec
jg
inc
leave
mov
sub
lods
pop
repz
xchg
mov
jmp
std
mov
gs
fidivl
rolb
sub
fucomp
xor
mov
ds
xor
clc
or
loopne
mov
imul
aaa
das
jp
in
push
mov
jmp
pop
in
repnz
adc
mov
add
push
mov
or
xchg
and
pop
xchg
dec
scas
bound
loop
push
pop
fadd
jmp
jg
xor
inc
imul
pop
adc
out
addr16
in
adc
nop
pop
push
fs
fdiv
inc
nop
ret
jae
sub
fwait
dec
xor
pop
dec
mov
roll
dec
std
or
push
cmp
ss
test
cs
orl
or
add
jmp
mov
push
sbb
jmp
ret
pop
ret
js
ret
adc
pop
call
nop
xchg
xchg
mov
push
mov
les
pop
mov
adc
and
push
test
or
mov
adc
xor
xchg
adc
jmp
xor
fdivp
lret
push
xchg
jae
or
cmp
inc
and
dec
push
jbe
mov
and
add
into
leave
repz
xor
inc
dec
outsl
in
in
sarl
out
out
les
aas
mov
fistpl
stc
jg
pop
test
and
or
jbe
xchg
ss
inc
jg
jne
add
mov
sbbb
mov
cmp
xor
xlat
insb
pop
pusha
pop
or
frstor
into
es
xor
cs
jae
add
test
sbb
push
mov
jmp
push
push
add
add
xchg
jmp
pop
xchg
cmp
add
xor
icebp
dec
pusha
fisttps
push
gs
imulb
call
dec
popf
andb
or
inc
pop
sub
mov
mov
jnp
mov
lea
or
adc
sbb
sub
dec
call
or
ret
or
jmp
and
cltd
adc
outsl
pop
lahf
das
push
jmp
addb
add
fisttpll
cld
mov
mov
data16
add
and
fdivr
movsb
xchg
mov
sbb
fstps
rol
ds
mov
imul
aas
inc
pushf
cmp
mov
mov
inc
movsb
mov
mov
adc
mov
adc
jge
sbbb
in
test
shll
outsb
pop
test
sub
pushf
sbb
cmp
imul
movb
fstl
cld
ja
cmp
negl
and
fidivrs
add
repz
or
dec
pop
and
mov
lds
mov
popf
and
cmpsl
rorb
mov
mov
xchg
hlt
and
pop
mov
lret
ret
imul
sbb
push
imul
pop
cmp
test
inc
sub
fidivrl
xchg
jge
cmp
in
push
sarl
inc
xchg
adc
cs
jb
add
push
cmp
repz
cs
adc
push
popa
sub
jg
leave
pop
pop
inc
or
fistps
sub
pusha
jnp
notb
or
mov
push
mov
xor
fcmovb
cs
and
sub
xor
pop
jnp
mov
mov
or
gs
and
jmp
sub
inc
test
mov
and
xchg
scas
divl
dec
sub
add
insb
add
les
or
ljmp
sbb
xchg
push
sub
es
jg
cltd
movd
or
cmpsb
fld
or
sbb
or
inc
aaa
sub
int
shr
clc
out
outsl
mov
clc
xchg
out
sbb
popa
mov
push
imul
sub
lds
inc
cs
adc
mov
sub
sbb
ljmp
mov
xchg
pmovmskb
fadd
pop
cmp
jns
push
aad
push
add
cltd
psubsw
jne
js
repnz
sahf
nop
push
cmp
vucomisd
mov
dec
sbb
pop
imul
inc
adc
lds
cs
sub
sub
pop
cltd
aam
mov
fidivl
not
jnp
cmp
add
sbb
pop
jns
dec
ret
push
gs
test
mov
pop
jo
add
xchg
and
dec
mov
pop
pop
xchg
not
out
push
out
jo
rorl
or
or
push
inc
adc
mov
push
xchg
xchg
je
push
dec
jge
add
mov
js
mov
and
dec
test
adc
inc
jo
mov
or
mov
testb
dec
pop
scas
sub
jg
test
add
jo
jg
push
loope
or
or
push
mov
movswl
push
xor
sbb
imul
sub
pusha
lods
loop
pop
mov
or
sub
dec
ret
mov
out
addb
lret
and
testb
outsl
aam
pop
or
loopne
xor
fxch
ds
dec
mov
lahf
in
cwtl
adc
dec
sti
pop
add
mov
and
add
push
mov
xor
outsl
add
push
cwtl
jns
add
arpl
fiadds
rorb
mov
aam
xor
sub
jmp
popf
xchg
pusha
and
stos
or
aas
pop
xor
jmp
push
or
pop
sub
nop
das
sar
xchg
xchg
gs
mov
bound
inc
pop
push
push
hlt
jbe
jbe
das
push
mov
adc
cmp
lods
add
pop
in
pop
repnz
push
pop
es
pop
scas
dec
in
repz
clc
jb
mov
daa
andb
mov
cmp
inc
pop
sahf
inc
sbb
pop
mov
xorl
jg
popf
adc
inc
push
lods
jae
idiv
pop
out
push
cmpsb
inc
add
and
cli
pop
jne
aad
mov
mov
add
gs
cmp
mov
add
leave
add
adc
dec
pop
sarl
sbb
adc
pop
sbb
add
mov
sar
insb
hlt
lock
ret
push
aad
pop
pop
pop
data16
repnz
imul
jmp
es
cld
inc
test
mov
pop
and
fsubrl
push
jno
and
pop
andl
mov
mov
iret
roll
sbb
ret
cmp
inc
or
jle
cmpsl
pop
mov
mov
pop
pop
push
inc
push
push
testl
adc
ds
and
mov
jmp
test
jae
pop
jo
pop
out
and
adc
jmp
pop
inc
xor
sbb
and
add
in
adc
fisttpll
arpl
loop
xlat
add
insb
loope
jmp
std
adc
add
jae
mov
fs
mov
mov
adc
add
shr
scas
mov
adc
push
cmp
clc
rcll
cmp
imul
lret
or
push
cli
jg
sbb
mov
add
fistps
xchg
iret
adcb
dec
aaa
add
cwtl
xchg
inc
das
out
add
sub
add
pop
pop
jnp
sbb
pop
testl
nop
into
movsb
jo
mov
fadds
push
aaa
push
pop
shr
jle
xor
inc
xor
mov
int
or
fsubs
and
cmp
les
into
fmull
adc
stos
xchg
sub
decb
inc
and
repnz
ret
sbbl
inc
sbbl
orl
popa
cmp
xchg
ret
sbb
mov
pop
jb
mov
out
pop
mov
mov
jg
or
jno
add
mov
pop
repz
mov
add
imul
mov
scas
jle
dec
or
loope
jmp
neg
cmp
dec
hlt
cmpsl
ficoml
popa
outsl
movl
movd
mov
pop
push
into
loop
pop
and
outsb
lock
enter
dec
sbb
xor
inc
outsb
rorl
or
dec
sbb
ret
push
add
test
clc
push
jmp
push
sub
insl
hlt
or
lret
test
push
xchg
xchg
ret
xchg
inc
test
mov
or
stos
out
pop
mov
push
daa
push
or
add
xchg
movb
dec
add
inc
jmp
es
jg
lcall
push
sbb
cmp
ficomps
imul
push
push
mov
sbb
stc
lahf
and
pop
and
addb
xchg
incl
xchg
mov
fwait
and
jge
cmc
popf
shlb
call
ret
push
popf
jnp
jmp
push
mov
sbb
jp
mov
and
jle
cmovo
push
mov
add
loopne
add
sbb
add
stos
jmp
cmpsb
stos
or
xchg
pop
adc
hlt
mov
leave
cli
and
bound
and
outsb
add
out
ss
inc
rorb
mov
sar
lods
mul
xor
pusha
xor
int3
inc
push
or
mov
mov
bound
test
addb
mov
pusha
nop
sbb
or
jmp
out
dec
adc
push
sbb
adc
jae
dec
insb
shrb
call
adc
push
inc
sti
rcll
mov
jmp
jne
xchg
push
js
icebp
xor
adc
rcrb
dec
pusha
xor
xchg
popf
ficomps
dec
lahf
pusha
pop
nop
cmpsb
and
add
push
or
dec
push
xor
add
add
or
mov
add
movsl
cld
mov
cmpb
les
and
push
push
push
in
jp
dec
add
cmpb
and
mov
imul
or
dec
cmpsb
mov
repz
loopne
dec
fidivrl
pop
push
pop
dec
incl
imul
cmpsl
and
js
fimull
push
fs
lock
sbb
fldenv
cmpsl
les
and
inc
cmpsl
lds
pop
in
bound
sbb
loop
out
xor
adc
sarl
or
nop
jae
cmp
push
add
in
sarl
sahf
dec
mov
hlt
test
movl
scas
push
mov
and
fcomi
xchg
arpl
or
jle
xlat
dec
out
clc
lahf
hlt
jno
jmp
icebp
cmp
jb
dec
call
fldl
aad
push
fucomp
or
sub
and
out
jmp
xor
repnz
gs
push
jmp
sub
mov
add
push
clc
mov
pop
mov
add
out
mul
push
mov
or
stos
fmuls
or
sti
push
adcb
adc
lea
mov
jnp
or
imul
xchg
test
dec
mov
mov
add
rcrl
int3
mov
jl
int
outsb
jle
js
decb
push
popa
popf
clc
adc
pop
pop
cli
ret
jbe
leave
xchg
push
jns
xchg
fwait
push
push
pop
push
lock
cltd
cmp
sahf
inc
mov
pushf
adc
addr16
cmpb
das
pop
add
mov
orb
loop
subb
in
dec
iret
mov
outsb
and
or
add
pusha
or
xchg
repnz
or
adc
inc
cmp
mov
out
fnsave
sub
fisttpl
push
dec
mov
daa
insl
jl
movsl
loopne
and
dec
je
loop
dec
out
jne
push
inc
cmp
imul
outsl
mov
mov
mov
cmp
jae
movsb
push
stos
adc
jb,pt
dec
sbb
sbbb
push
add
inc
pop
push
icebp
xchg
loop
inc
dec
xchg
and
leave
in
xchg
fistps
cwtl
sub
adc
ja
clc
sub
adc
pop
and
jnp
and
shr
sub
int3
pop
test
mov
loope
in
xor
mov
xor
stos
add
sbb
loop
insb
sub
push
sub
add
jbe
jmp
in
push
lds
inc
in
enter
cmp
ja
loop
sysret
sbb
fistps
pop
push
inc
inc
sub
andl
cmp
jmp
aaa
sarl
push
mov
stc
xchg
cmp
dec
scas
fcmovu
dec
inc
daa
and
jmp
push
shl
xchg
push
or
sub
aas
cld
and
outsl
mov
not
xchg
fisubs
push
out
ror
data16
pusha
in
xor
insl
cmp
outsl
mov
cmp
mov
xchg
pop
notl
push
popf
mov
dec
or
push
daa
adcb
mov
jns
cli
testb
sbb
lcall
inc
or
xchg
cmp
sbb
jg
in
pop
orl
dec
pop
mov
push
pop
lds
lret
not
sbbb
pop
and
xchg
dec
lret
push
push
lods
pop
add
add
lahf
add
push
idiv
sti
in
repnz
sub
xor
lds
pshufw
lcall
fdivrl
push
dec
lret
jg
xor
in
insl
popf
fxch
fs
rcr
cwtl
add
xchg
push
pushf
shr
loope
jno
push
jns
jmp
lock
cmp
lcall
jmp
pop
std
push
inc
jmp
push
push
mov
xor
fs
stc
xor
mov
inc
aad
stos
rclb
cs
and
in
shr
shrb
std
fistpl
in
mov
mov
jmp
rcll
arpl
cmp
dec
push
repnz
jmp
rcr
sub
cmp
lock
add
add
pop
loopne
sbb
add
inc
mov
xor
test
dec
scas
jo
out
sbb
test
rclb
out
adc
xor
mov
jecxz
rcr
adc
jae
movd
lock
neg
mov
sbb
and
pop
pusha
adc
js
and
sbb
rorl
push
mov
push
pop
gs
or
mov
insl
and
sub
imul
or
add
mov
mov
sti
or
out
push
les
jmp
popa
or
flds
push
dec
jl
les
dec
jne
insl
sub
nop
and
out
inc
inc
js
push
cmp
out
jb
or
int
je
cmp
jmp
mov
dec
out
shll
push
adcl
dec
in
sub
sbb
jbe
test
push
insb
xor
movmskps
mov
mov
inc
fs
int3
icebp
dec
roll
sti
shl
cs
in
jmp
add
sbb
xchg
repnz
or
adc
mov
jmp
jecxz
sub
push
gs
push
shrl
ret
xchg
jecxz
adc
sub
push
lds
xor
pop
out
dec
fildl
ret
mov
sub
xlat
or
cmpsl
push
nop
fmulp
sub
out
push
xor
testb
jo
or
ss
cs
pop
pop
fisubrl
fiadds
pop
pop
jmp
pop
add
inc
cwtl
enter
dec
fbld
sub
jns
sub
lods
popf
pusha
in
push
flds
das
mov
data16
lret
imull
jge
sub
lret
inc
or
xchg
adc
push
gs
lock
dec
inc
add
or
loope
add
add
jg
mov
pop
ficoms
jecxz
add
shrb
mov
lods
add
mov
or
mov
jae
jns
jmp
dec
inc
mov
nop
mov
insb
add
and
std
xchg
loopne
pop
repnz
xchg
mov
sbb
push
jmp
fimuls
cs
inc
adc
gs
pop
add
insb
scas
negl
push
mov
hlt
inc
ljmp
cld
dec
std
sub
mov
dec
mov
rorb
pop
push
or
inc
pop
add
dec
out
ja
mov
xchg
in
test
jnp
sti
sarb
push
shll
daa
mov
pop
leave
xchg
push
rcr
in
fists
popa
pop
out
push
clc
xchg
rolb
inc
call
inc
or
pop
pop
cmp
lds
lods
aam
pusha
dec
imul
nop
or
and
push
testb
ja
rorb
pusha
repz
das
xor
shrb
lods
dec
fbld
lret
incb
es
add
outsb
jno
pushf
sub
adc
in
arpl
jl
mov
filds
orl
dec
mov
test
inc
lea
clc
dec
dec
pushf
push
adc
push
popf
clc
fisttpl
adc
mov
roll
dec
or
sbb
adc
jle
ret
dec
cld
pop
xchg
push
jl
ja
imul
pop
std
pop
adcb
pop
jmp
incb
rorb
xchg
inc
push
lret
ljmp
jns
dec
push
xlat
add
push
push
jg
xorl
bnd
inc
jmp
mov
dec
jp
cmp
add
movb
in
rorb
js
xor
je
push
icebp
aas
addr16
inc
mov
push
outsb
call
cmpsb
neg
nop
rorl
insb
push
pop
sbb
pop
in
into
es
mov
push
adc
xchg
dec
and
cmp
mov
aas
push
jmp
iret
push
dec
dec
cmp
xchg
inc
adc
inc
push
pusha
cmpsl
cmp
inc
cwtl
scas
jp
ds
dec
add
ret
out
or
jecxz
pop
pop
movsl
je
ss
movsl
shr
and
pop
pop
push
adc
or
jno
insl
loop
add
shl
jecxz
mov
in
xor
sti
jnp
xor
cmp
mov
or
in
ds
dec
std
dec
jl
add
xor
ja
adc
mov
and
xor
or
fmull
notb
shll
adc
mov
movsl
pop
aad
ret
add
xor
add
aam
leave
fstpl
out
push
rcrb
push
pop
xchg
stc
rolb
es
jg
push
popa
jl
push
pop
loop
add
jmp
xor
scas
call
cmp
adc
and
call
test
push
dec
mov
dec
jmp
out
adc
lods
dec
nop
popa
dec
inc
jg
mov
xor
daa
cmp
je
div
aas
jecxz
or
lock
mov
in
ret
inc
sub
daa
loope
inc
pop
std
fs
aas
dec
js
mov
pusha
sti
jno
das
add
mov
xchg
push
jnp
int3
std
push
hlt
fs
pop
mov
jbe
add
out
mov
repnz
imul
xchg
inc
daa
jne
repnz
ja
xchg
add
dec
repz
mov
pop
pop
clc
jne
scas
pop
int
sub
in
out
pop
jmp
movsb
sub
sbb
fucomip
fsubs
xlat
jle
mov
and
inc
negl
dec
sub
mov
jns
mov
shl
out
sub
sub
mov
sti
fidivl
dec
lret
push
aas
dec
adc
sub
in
ret
dec
rclb
add
xor
inc
loop
pop
dec
mov
sub
push
sub
or
mov
inc
roll
mov
ret
mov
push
mov
pop
or
cld
popf
cmc
sbb
push
or
in
push
mov
cwtl
adc
ret
push
repnz
arpl
mov
adc
pushf
mov
mov
mov
add
rcr
loope
inc
adc
xchg
xor
pop
dec
test
pop
ja
aam
jp
dec
movsl
add
negb
pop
pop
js
xchg
jle
push
aas
mov
gs
nop
xchg
pop
push
inc
xchg
aas
jnp
stos
movsb
inc
mov
jo
xor
inc
push
xchg
mov
leave
clc
ud1
adc
xor
push
int3
out
add
sub
jmp
ss
mov
jmp
push
enter
push
cli
insl
and
imul
xchg
adc
clc
mov
out
outsl
aas
movsb
xadd
mov
das
loopne
ss
sub
jno
das
out
pop
pop
mov
xchg
ret
adc
mov
jo
pop
cli
mov
or
fcoms
sub
pop
and
cmpsl
dec
jge
imul
es
jg
mov
and
or
xor
test
inc
push
adc
icebp
add
popa
cwtl
sbb
fadd
mov
push
pop
ffree
cmpb
and
mov
loop
jns
fsubl
or
test
push
xchg
jmp
pop
mov
push
push
pop
mov
mov
addr16
add
mov
inc
jmp
push
mov
dec
addr16
rcrb
push
dec
clc
mov
lock
lret
mov
neg
jmp
add
iret
jg
jp
add
mov
mov
pop
xchg
jo
lret
mov
push
cs
sbb
jmp
mov
addl
pop
mov
add
sub
sbb
hlt
ffreep
test
fsubp
mov
push
repz
inc
orb
xor
loope
jno
jl
mov
lds
orl
adc
pop
sub
add
jge
int
pop
xor
adc
decl
pop
addr16
loopne
mov
pop
pop
inc
lods
inc
inc
pop
inc
test
popa
lods
add
notl
xchg
ret
mov
pop
push
mov
in
std
xchg
xor
or
in
test
or
push
inc
adc
push
adc
mov
inc
push
add
add
push
scas
or
hlt
jb
cmp
loope
add
jmp
inc
sub
in
insb
test
in
fdivl
or
imul
out
adc
mov
and
sbb
or
fsubs
call
xor
xchg
out
inc
gs
cli
xlat
cli
sbbb
sub
dec
cmp
andl
mov
mov
pop
inc
out
out
aad
ret
cmp
add
xor
pop
and
xor
stos
lods
or
xchg
jp
rcrl
sbb
push
add
mov
pop
sub
pop
mov
mov
lods
fldl
mov
mov
lods
outsb
add
jae
in
jge
inc
das
pop
add
adc
sub
push
out
or
adc
icebp
out
cmpsl
insl
mov
sub
add
sbb
inc
xor
jns
jle
jbe
jmp
in
loope
xor
push
nop
pop
pop
bound
loopne
orb
cli
es
dec
test
pop
mov
adc
adc
inc
aaa
adc
lock
loop
mov
or
sub
movsb
push
mov
cmp
ja
or
in
test
xchg
push
pop
or
pusha
inc
shr
xor
stos
and
stos
lock
push
jmp
sbb
adc
jmp
adc
jb
lds
jle
or
addr16
jns
call
mov
xor
shl
add
pop
jp
xchg
xor
mov
pop
add
jnp
lock
inc
mov
imul
aad
out
shl
mov
and
sbb
mov
xlat
fldcw
std
outsb
pop
imul
xor
add
sub
push
push
dec
sub
rolb
mov
out
cs
cmc
stos
push
adc
in
in
push
xchg
imul
cwtl
adcb
or
add
fwait
push
je
mov
xchg
out
sbb
arpl
dec
jmp
xor
sub
mov
xor
add
mov
sbb
and
jno
adcb
pop
inc
adc
xlat
push
std
jmp
push
jg
lods
or
or
cli
into
push
mov
pusha
push
cmp
adc
or
pop
sub
lret
add
pushf
js
or
xchg
pop
add
sbb
nop
gs
xor
jne
ret
aaa
aas
inc
jmp
in
sub
xchg
sub
sub
loopne
into
imul
mov
enter
xlat
cmp
push
xchg
into
idivl
cs
das
incb
insb
sbb
scas
je
add
jmp
ret
popa
insb
ds
outsb
aam
adc
sub
dec
pop
pop
xor
call
clc
lods
scas
cs
shlb
jg
push
ljmp
pop
pop
ret
pop
jb
ds
jmp
and
out
add
jl
repnz
jbe
push
scas
push
sbb
jmp
out
push
bound
or
or
jnp
orb
lcall
mov
out
mov
jnp
and
pop
icebp
or
dec
aam
lods
push
xchg
add
cwtl
mov
std
je
xchg
add
sub
xor
pop
fs
adc
mov
add
mov
inc
mov
add
mov
jmp
cmp
aas
ret
cmpsl
pop
idivb
jns
xchg
jmp
xchg
mov
pop
rolb
add
push
test
xchg
pop
movups
nop
sbb
shlb
and
xchg
sub
add
mov
mov
bound
cmp
push
imul
mov
sbb
std
pop
cmp
mov
push
imul
xchg
cltd
test
fadds
rolb
popa
fucomi
xor
dec
jle
mov
jne
push
xor
lcall
addr16
push
popf
push
mov
sbb
out
pop
out
jge
pop
jmp
mov
lret
sub
or
add
or
adc
shlb
sbb
mulb
push
jne
je
cmova
jae
je
repnz
jmp
push
push
aaa
pop
dec
xor
psubsw
or
pop
enter
gs
aas
rcll
cwtl
mov
adc
xchg
jg
std
and
mov
sbb
pop
and
imul
cmpb
xchg
mov
dec
add
sub
pop
xor
testb
pop
pop
add
rcl
xor
and
inc
daa
ja
pop
loop
hlt
and
or
fidivs
or
inc
xchg
scas
rorl
xchg
mov
adc
push
repz
fdivs
push
ja
mov
cmp
popa
push
scas
jmp
adc
push
mov
or
jmp
bound
into
inc
jne
xor
nop
lds
shl
jecxz
cwtl
mov
add
mov
loope
scas
sub
mov
sub
or
mov
or
xchg
sub
out
xchg
lock
lea
inc
cmp
iret
vpshufd
imul
loop
add
xor
sbb
push
gs
ret
or
push
jmp
cmp
cltd
loopne
clc
stos
mov
pop
and
add
add
dec
mov
cmpxchg
xchg
imul
ljmp
and
ret
aaa
xchg
divl
movsb
xchg
xchg
add
sub
add
and
cld
outsl
pop
mov
xchg
or
push
and
fsubr
push
push
mov
lds
out
sub
sbb
mov
add
or
adc
jmp
push
ret
xchg
pop
cs
scas
mov
add
or
mov
jbe
pusha
push
cmp
mov
sub
inc
cmpb
mov
or
push
jmp
dec
cmc
outsl
mov
sub
rclb
dec
jae
add
add
and
lahf
sub
and
and
out
sub
addr16
insl
xor
sub
jmp
rcll
das
sti
fs
sti
int3
iret
icebp
mov
scas
push
jae
adc
mov
call
sub
fldcw
imul
sub
pop
push
fwait
movsl
cld
js
mov
idiv
xchg
or
inc
data16
dec
jmp
pop
dec
add
js
inc
mov
adc
imul
shr
rol
inc
mov
je
jb
sbb
inc
cmp
fcoml
push
sbb
xor
mov
or
adc
loop
aaa
jge
or
daa
in
add
cmp
das
rcrb
sub
sbb
into
outsl
add
cwtl
jmp
add
add
sub
aas
or
sbb
ss
xchg
cmc
out
mov
in
bound
push
pop
push
jmp
adc
add
pop
les
or
sub
outsb
imul
xlat
test
cld
adc
shlb
mov
gs
mov
mov
pop
inc
xor
or
aas
lock
push
xchg
add
jle
and
fcmove
dec
xchg
inc
cltd
dec
dec
jle
or
lret
and
mov
roll
sub
outsb
pusha
xor
stc
sub
xchg
or
mov
shlb
mov
jl
sub
pusha
je
lds
add
sbb
xchg
pop
push
pop
adc
andb
mov
inc
xchg
fs
iret
cmpb
aaa
ss
inc
fistpll
and
push
sub
out
loop
xor
imul
and
push
push
inc
es
cs
cmpsb
pop
pop
jp
mov
stos
cmpsl
jge
ss
sbb
es
adc
sbb
xor
mov
rorl
repnz
cmpsl
pushf
sbb
nop
xchg
iret
call
lea
leave
divb
inc
lds
dec
push
in
outsl
cmc
mov
xchg
inc
dec
jbe
lds
add
jle
or
iret
add
add
xchg
pop
xor
sub
lock
cmp
loopne
fldt
mov
push
pop
dec
lret
sbb
and
pusha
add
std
add
xchg
cmp
aad
ds
xchg
dec
rclb
add
xor
negb
dec
mov
sub
aam
arpl
adc
aad
push
mov
into
sub
xchg
dec
popf
xchg
and
push
or
xor
jle
add
or
sbb
mov
cmp
fcomps
push
and
test
push
push
mov
fcmovb
push
pop
js
fbld
mov
or
dec
ds
xchg
pop
inc
aam
aam
dec
add
xor
cmp
and
bswap
clc
adc
xchg
icebp
xchg
loope
adc
imul
push
aad
pop
mov
aas
sub
pop
outsl
icebp
jle
pusha
push
sub
not
add
or
lods
inc
and
lds
test
dec
loopne
push
sub
test
push
mov
cli
adc
adc
pop
mov
les
add
xor
pusha
in
mov
stos
jo
mov
jg
imul
adc
cmp
lock
inc
jbe
mov
ret
push
dec
pop
fdivr
jmp
scas
aam
jmp
add
mov
push
lcall
mov
jae
out
sbb
int
andb
jmp
lods
mov
addr16
mov
aas
in
insl
rorb
sbb
mov
or
dec
adc
dec
push
stc
out
ljmp
lahf
pusha
rorl
fs
inc
xchg
repnz
lret
add
mov
bnd
loope
dec
sbb
out
mov
dec
pop
pop
or
mov
ret
dec
pop
sti
cmp
nop
stos
fistps
and
push
mov
sub
out
das
jmp
les
pusha
adc
xchg
jns
xchg
pop
scas
repnz
lret
xor
ja
loop
xor
and
sti
mov
mov
pop
jmp
add
stc
pop
sub
cld
movsb
addl
sbb
push
jmp
xchg
outsl
popa
dec
inc
ss
xor
mov
repz
xchg
mov
popa
xchg
outsl
movsb
jmp
mov
ljmp
sbb
mov
jns
orb
push
xor
in
cwtl
arpl
rcl
add
ds
lcall
outsl
pop
insb
ret
in
roll
dec
movb
mov
ret
popa
inc
and
mov
push
inc
sub
add
int
push
mov
jne
les
je
ror
mov
add
in
add
jmp
push
stos
xor
add
jmp
in
call
rep
add
int
test
popf
int
xor
pusha
jnp
inc
pop
inc
cmp
or
pop
in
mov
add
loop
jne
pop
and
out
cmpsl
xlat
mov
inc
nop
pusha
and
inc
fcmovne
cmp
pop
fdivr
cmp
js
cmp
cmp
scas
pop
xor
decb
and
lea
xor
inc
pop
dec
mov
or
pop
pop
loop
sub
leave
fstp
fistl
xchg
mov
push
adc
out
test
nop
into
daa
and
sti
pop
lret
and
mov
ficomps
or
jg
pop
fwait
mov
aaa
das
jmp
sti
push
imul
pop
and
arpl
inc
sub
mov
adc
mov
or
jle
add
paddusw
fbld
fsts
inc
sahf
or
mov
mov
push
nop
les
dec
or
cmp
lods
daa
loope
pop
cltd
insl
push
jp
mov
movsb
mov
dec
xchg
mov
ret
in
fldt
mov
jle
scas
xchg
out
sub
mov
push
imul
or
push
mov
repnz
cmp
and
sbb
sub
out
shlb
jb
scas
out
dec
xlat
in
push
pop
pop
ja
mov
add
les
addr16
dec
rolb
add
adc
out
inc
or
and
and
push
cmc
sti
imul
jmp
icebp
push
push
cmc
int
add
pop
mov
pop
xor
pop
adc
sbb
push
push
mov
add
std
and
ss
xor
aam
das
push
pop
or
int
ja
shlb
test
sahf
and
rolb
mov
pop
dec
js
adc
push
enter
or
sub
shlb
jmp
push
push
repnz
lret
and
leave
fld
cs
shrl
das
cmpsb
mov
das
gs
aaa
subb
push
sbb
pop
dec
xor
lods
and
xchg
call
cmpsl
and
lods
fistpl
dec
sub
cmpb
dec
rcl
pusha
push
mov
or
jae
pop
xor
clc
into
or
imul
sub
mov
shufps
and
mov
cld
jge
xchg
movsb
and
mov
push
or
add
push
xor
xchg
stc
jecxz
push
es
mov
call
mov
jb
push
xchg
dec
or
in
ds
xor
cmc
push
xor
add
pop
popf
sbb
mov
hlt
add
in
ljmp
mov
add
jmp
test
mov
out
push
cwtl
popf
xchg
add
sub
cmpsb
cs
inc
ljmp
push
add
vmovups
and
sub
pop
subb
out
inc
cmp
xlat
jns
das
add
pusha
jp
in
inc
test
fwait
add
jmp
dec
adc
lods
cmp
daa
add
movsl
lock
and
cli
mov
pop
dec
pop
scas
mov
dec
mov
loope
dec
test
adc
fucomp
sbbb
xchg
adcb
movsl
mov
or
ljmp
or
ja
mov
add
cmp
adc
ret
mov
leave
cmpsb
mov
aas
pop
mov
jae
adc
mov
icebp
clc
adc
cwtl
push
mov
push
push
dec
add
cmp
mov
lret
push
sub
add
pop
aas
jae
add
test
insb
cmp
adc
cmpsb
push
dec
rorl
ja
mov
pop
mov
jmp
push
sub
lock
fsubrs
out
lret
ret
icebp
cmp
pop
xchg
arpl
add
icebp
in
test
dec
aam
mov
add
dec
mov
mov
jle
or
addl
out
das
test
lret
aaa
adc
dec
stos
into
mov
pop
pop
in
cmp
mov
xchg
sub
shrl
adc
add
loopne
xorb
out
mov
inc
cltd
adc
push
out
testb
sbb
icebp
jo
fisttps
aas
popa
xchg
inc
or
insb
jg
orl
sub
or
push
dec
pop
xor
cmp
sbb
mov
and
js
jnp
aaa
mov
pop
add
data16
add
xchg
dec
mov
adc
movsl
push
and
or
sbb
sbb
xor
sub
add
iret
nop
or
cli
nop
shlb
arpl
sar
inc
jmp
xor
pop
push
push
xchg
leave
shrb
into
dec
cmp
jae
jmp
insb
mov
dec
lock
cld
dec
add
mov
adc
out
add
and
adc
ret
sub
out
or
cmpsb
imul
gs
in
stc
popa
adc
je
inc
xlat
push
mov
leave
clc
popf
jbe
dec
outsl
aam
mov
movsl
push
push
cld
push
roll
mov
push
pushf
add
push
sub
sti
rorl
add
inc
gs
je
gs
mov
stos
inc
mov
add
mov
mov
xchg
add
pop
add
jne
add
or
adc
push
and
arpl
mov
jno
ja
mov
cwtl
imul
xor
repz
or
rep
pop
jae
pop
push
fcomps
xchg
hlt
popf
xchg
push
mov
sub
pop
adc
pop
outsl
mov
int3
dec
lea
mov
sub
or
or
arpl
pop
out
xchg
mov
notb
mov
mov
cmp
add
sub
loope
push
jnp
add
addb
dec
pusha
pop
ja
add
cmp
addl
or
xor
dec
add
sub
jne
cli
std
and
push
cwtl
xor
or
or
inc
sbb
sub
mov
outsb
fnstenv
push
and
scas
fidivrl
push
fsubs
ret
xor
inc
inc
lret
repnz
add
xor
ret
out
dec
xor
flds
jmp
jo
add
sub
pop
fldl
fcmovnb
notl
out
cmp
push
mov
loope
pop
pop
pop
adc
mov
jle
push
les
pushf
mov
not
cmpsl
loop
or
loope
lcall
jge
ficoml
cmp
mov
jno
mov
insb
adc
push
fmuls
pop
fidivrl
add
fstpt
test
add
pop
push
adc
dec
or
xor
lock
push
sbb
out
xor
sub
or
push
sbb
inc
pop
popa
enter
or
push
dec
push
pusha
mov
pop
push
xchg
sub
cmp
cmc
ja
imul
pop
push
leave
jmp
pop
inc
not
pusha
test
mov
cmp
jl
sbb
fs
add
cld
pop
mov
mov
push
jge
add
add
sbb
in
sub
mov
inc
mov
mov
scas
add
sub
mov
sbb
testl
push
sbb
mov
into
gs
ljmp
jno
in
add
mov
cli
imul
xor
or
inc
xchg
and
mov
scas
mov
sbb
ja
mov
or
in
sbb
pusha
jle
emms
dec
push
popa
in
pusha
aas
arpl
daa
bsr
dec
dec
pop
stc
fstpl
push
imul
or
jmp
dec
test
mov
jecxz
bswap
push
jmp
inc
and
pop
add
add
jmp
xchg
scas
xchg
push
pop
pop
and
mov
sub
mov
dec
jg
popa
popf
jle
xor
jmp
lock
data16
push
popa
loopne
loopne
repz
mov
lret
cli
xor
lds
pop
add
sub
mov
out
mov
enter
cmp
sub
dec
or
imul
pop
xchg
jae
or
loop
and
push
imul
pop
stos
add
gs
push
add
xor
repnz
sbb
pop
sbbb
cld
mov
jno
in
es
into
xchg
push
or
aas
shl
into
fldl2e
pop
sbb
jae
push
pop
push
lds
or
mov
push
pop
pop
dec
movsl
adc
adc
xchg
shr
out
or
push
cld
popa
das
mov
aam
shlb
push
mov
mov
orb
outsb
das
jmp
dec
and
int
jmp
mov
std
out
shr
inc
neg
dec
adc
jnp
push
add
or
cmpsb
dec
roll
mov
mov
aam
inc
gs
scas
add
pop
mov
xor
add
dec
cmp
mov
loop
lds
nop
mov
dec
orb
in
and
or
fstl
mov
repnz
add
sub
mov
adc
sbb
loop
jb
stos
out
dec
call
mov
dec
adc
cmpsl
sbb
pop
mov
dec
fucomp
push
jp
add
jae
dec
jne
lock
xchg
add
dec
jmp
sahf
push
mov
sbb
or
cmp
sub
inc
nop
inc
daa
jnp
pop
and
fisttps
jns
inc
push
shl
nop
or
repz
int3
pop
xchg
dec
or
jns
stos
add
push
in
orb
ja
cli
popa
add
and
sub
xchg
movzwl
pop
cmp
add
add
add
enter
mov
loope
cs
in
or
roll
adc
pop
mov
cld
pop
sti
int3
or
sarl
mov
add
jle
dec
add
lock
jmp
or
mov
cmpsl
mov
lea
jb
aas
push
cltd
mov
sbb
stos
adc
add
xor
push
fldenv
add
sub
dec
add
pop
jmp
aaa
pop
push
addr16
or
ljmp
dec
xchg
clc
int
mov
outsb
xor
in
add
out
loopne
pop
pop
sub
mov
imul
mov
pop
sbb
add
push
sbb
mov
mov
pop
das
loopne
call
sub
add
pop
test
add
cmp
pop
rclb
push
mov
sahf
mov
mov
movsl
dec
xchg
pop
pop
cltd
inc
popf
hlt
outsb
daa
int
lock
inc
jo
ljmp
mov
or
jb
mov
xchg
jno
movsl
pop
add
fadds
outsl
repnz
inc
add
xor
add
clc
or
out
lea
pop
sahf
xor
pop
push
mov
pop
jmp
sub
dec
bound
gs
aam
fcoml
dec
mov
mov
lret
xor
fincstp
rorl
mov
jmp
imulb
ret
pop
lods
jae
data16
aam
push
mov
pop
jo
jo
inc
call
ds
test
xor
sbb
xor
loope
mov
inc
cli
pop
pop
fldl
shr
push
data16
push
hlt
or
mov
mov
call
nop
test
push
cld
pop
rcr
and
or
cli
in
push
popa
mov
jg
ds
add
into
clc
dec
aas
add
cmp
shll
mov
mov
sub
mov
aam
push
or
enter
inc
pop
test
push
das
mov
and
or
inc
jns
test
pop
aam
jmp
sbb
mov
add
pop
icebp
loope
xor
mov
mov
inc
sub
lret
test
or
fwait
jbe
scas
rolb
push
push
push
inc
pop
push
ficoms
loop
xchg
xchg
loope
sbb
and
scas
ficoms
lds
adc
cmp
test
test
fucomi
es
in
scas
mov
pusha
cmp
pop
adc
push
adcb
js
sub
or
fidivrl
adc
fldcw
lret
pop
stc
add
clc
es
add
subl
shrl
stc
pusha
push
cmp
in
jbe,pt
or
dec
cs
xchg
sbb
xor
and
nop
sub
dec
mov
adc
sbb
pop
sbb
aam
std
in
push
in
std
pusha
or
test
or
pop
xchg
dec
scas
jge
pop
lock
jmp
mov
xchg
adc
xchg
fistps
adc
ss
adc
push
inc
bound
cmp
sbb
cs
mov
mov
dec
sbb
xchg
mov
arpl
push
mov
adcl
xchg
dec
and
out
pop
add
call
scas
jnp
dec
add
orb
sub
and
lock
adc
xor
ss
cmp
test
out
adc
pusha
lret
inc
in
cmp
jg
mov
push
movl
add
xor
test
jge
jnp,pn
cmpsl
aad
cltd
das
jmp
and
sbb
fnstenv
shll
inc
cmpsl
repnz
xor
sbb
push
les
ret
testb
fs
mov
call
add
out
pop
cmpsb
fwait
push
sub
repnz
lea
std
sbb
stc
idivl
or
roll
xor
or
add
lea
sub
jo
jmp
out
movsb
out
adc
sub
subb
sbb
test
outsb
cli
mov
xorb
cltd
add
xchg
dec
movsb
pop
sub
lret
jns
hlt
or
outsl
pop
scas
aam
and
cld
into
ljmp
lods
add
push
adc
add
fcmovnbe
notb
imul
jecxz
int3
jmp
xchg
xor
push
sub
ja
outsb
jo
pop
push
xchg
push
or
imul
jne
sti
fs
inc
aas
mov
jns
pop
jg
fwait
cmp
inc
cld
xchg
pop
das
lea
add
xor
lcall
xchg
mov
lret
add
sub
adc
fadds
push
out
and
lahf
push
push
out
mov
sub
test
sbb
push
add
pop
cmp
imul
pushf
mov
jmp
fldcw
mov
faddp
shll
inc
lcall
add
mov
aam
add
xor
aas
xor
adc
sub
push
push
bound
jge
add
test
clc
call
test
loopne
or
call
xchg
or
sbb
je
aas
mov
push
dec
push
es
neg
or
add
adc
mov
addl
fdivrs
popf
and
mov
cmp
or
mov
daa
dec
xor
and
mov
inc
sub
cmp
popf
mov
test
dec
aad
add
cmc
and
mov
hlt
jae
adc
fxch
js
scas
sub
sti
adc
sub
mov
or
stos
cmp
push
or
neg
incb
loopne
fwait
push
lds
std
hlt
in
jmp
add
pop
jmp
movsb
xchg
clc
jae
jbe
mov
lahf
rcll
imul
fwait
cli
sbb
fnstenv
inc
jl
and
or
jnp
mov
in
ljmp
cmp
pop
testl
mov
sub
sbbb
cmp
pop
or
and
and
xchg
inc
mov
mov
push
cli
adc
pop
pushf
mov
shrl
pusha
jno
es
pop
jmp
pop
inc
push
test
out
adc
sbb
popa
nop
pop
sbb
sbb
push
sub
imul
pop
push
test
addb
cmp
and
adc
jp
mov
sbbl
mov
pop
sbb
or
sub
sbbl
cwtl
sbb
sub
xlat
jbe
nop
shlb
mov
dec
pop
xchg
nop
jge
dec
movsl
test
stos
cmp
jno
mov
pop
dec
cmp
pop
mov
daa
inc
orb
imul
mov
popa
cmp
or
push
out
fs
dec
mov
xor
ret
popa
cmp
mov
fdivrl
dec
adc
add
cmpsl
sbb
or
cli
jmp
cmp
xor
adc
nop
imul
sub
shr
pop
cmp
pop
adc
bound
dec
push
out
pusha
cltd
pop
stos
sbb
sub
cwtl
bound
add
xor
or
add
push
out
jmp
cmpsl
sub
push
mov
cmp
rorb
stos
xor
add
gs
out
sub
lods
cmc
adc
pop
ja
sub
out
out
pushf
adcb
jmp
dec
das
push
mov
in
ja
pop
inc
lock
mov
add
lds
cs
leave
ds
inc
mov
rcll
sbb
inc
sti
jge
sbb
push
or
shlb
mov
add
or
jmp
dec
xchg
rcrb
inc
test
lea
sti
jne
xlat
jmp
push
jmp
pop
lds
and
xchg
cwtl
mov
outsl
out
jp
idivb
aas
mov
dec
push
jmp
or
sub
jo
mov
adc
dec
ss
out
adc
test
shlb
jg
aas
hlt
pop
pop
mov
shr
mov
or
out
loope
push
jle
movb
add
add
dec
sub
movsb
loope
fldl
cmp
call
or
sbb
pop
xchg
dec
neg
and
jmp
out
xorl
jbe
popf
jg
leave
push
sbb
sti
adc
out
popa
and
outsb
mov
inc
sbb
inc
cmp
mov
jmp
mov
lahf
repz
xlat
sub
push
jmp
lock
scas
imul
cmp
add
jmp
cli
mov
sbb
push
push
pop
loopne
xor
pop
dec
jae
pop
lret
cmp
dec
popa
push
fcmovne
lret
pop
hlt
jp
call
inc
cmp
inc
pusha
or
mov
rorb
mov
test
xchg
shlb
lock
fidivl
scas
and
testl
sbb
push
pusha
adc
aas
aam
sub
xchg
push
and
adc
dec
adc
jp
jmp
data16
or
jg
push
pusha
pop
lea
pop
pop
add
movb
jmp
cmp
aam
ret
push
xchg
sub
lret
outsb
or
inc
orl
rolb
sub
stos
sbb
sbb
adc
push
sub
lea
ds
or
push
pop
sub
pop
daa
call
add
subb
je
lret
adc
or
pop
arpl
das
hlt
add
push
aas
add
pop
mov
add
inc
mov
pop
xchg
sub
xor
leave
cmp
pop
ret
inc
sbb
dec
jo
xchg
arpl
rdtsc
ljmp
dec
popf
ljmp
icebp
add
inc
cwtl
or
pusha
sub
andl
lret
mov
dec
loop
push
nop
insw
sbb
or
inc
inc
or
movaps
pop
cmp
xorl
inc
adc
push
jne
inc
pop
inc
xchg
cmp
mov
or
cmovne
or
xchg
nop
mov
int
jl
xchg
inc
out
or
cltd
je
mov
mov
enter
mov
sub
push
rcll
jl
dec
ljmp
or
and
cmc
inc
dec
add
adc
push
inc
inc
call
sub
and
nop
inc
int3
imul
popf
das
lahf
mov
loopne
sub
rcpps
lret
mov
leave
pop
aad
ss
scas
movsl
adc
inc
cmp
push
pop
pop
or
and
pop
bound
clc
or
or
subb
jae
dec
xor
out
pop
xor
sub
addr16
push
ret
push
pop
add
orl
call
ss
add
aas
mov
push
mov
xchg
test
inc
xchg
cmp
cmp
shll
dec
sub
jle
pop
adc
xchg
repz
adc
mov
mov
sub
jmp
inc
inc
xor
dec
xlat
imul
adc
and
ljmp
dec
ret
mov
add
pusha
dec
outsb
push
insl
pop
adc
insb
or
mov
dec
add
push
mov
add
sti
and
lds
add
and
dec
mov
in
mov
dec
add
or
nop
mov
int
out
add
jbe
pop
mov
push
pop
ja
inc
mov
not
cmpb
or
xchg
mov
shr
inc
lock
loop
jne
pusha
pusha
sbb
fcoms
fs
lock
xlat
dec
cmpsb
mov
xchg
jmp
pushf
test
mov
scas
pop
dec
or
push
pop
mov
icebp
push
push
jmp
pop
lret
subl
xchg
mov
add
sub
cmp
lock
push
dec
js
mov
out
pop
add
into
not
add
adc
lds
pop
dec
adcb
decb
mov
hlt
lret
pop
jbe,pt
or
xchg
lds
sub
dec
stc
mov
jmp
add
push
les
adc
aas
push
pop
and
mov
rcll
push
push
jns
les
or
mov
push
aad
jmp
sub
xor
jmp
test
adc
pop
jnp
sub
test
lods
push
in
mov
idivl
dec
aas
lods
add
xchg
inc
mov
or
shrl
xor
ficompl
cmpsb
pop
jb
pop
cmp
fisubs
mov
enter
push
push
adc
pop
clc
xchg
shrb
fdecstp
imul
das
xchg
movsl
jl
push
ljmpw
or
dec
test
xor
rolb
push
push
inc
xchg
stc
push
aaa
or
pop
push
sub
cmp
inc
dec
rorb
xor
setp
lock
adc
pop
mov
mov
jae
test
imul
pop
mov
test
loope
push
das
stos
sub
pop
add
push
jmp
aas
aaa
xchg
mov
mov
imul
pop
inc
les
or
push
imul
mov
cmp
out
in
neg
in
scas
add
jmp
fcoms
out
scas
out
push
xchg
xchg
mov
jl
addl
jnp
lcall
cwtl
out
iret
stos
aaa
mov
scas
sub
test
fcomps
aam
lds
mov
mov
pop
sub
icebp
int
pavgw
jmp
lret
adc
jmp
jge
and
add
sub
neg
imul
or
das
cmc
cmp
cs
or
test
ret
jns
leave
inc
sbb
shrl
sbb
inc
lods
sbb
mov
sbb
lret
inc
pop
inc
push
in
out
and
and
or
dec
fcomps
xchg
out
mov
cli
hlt
push
mov
xchg
xor
test
fxch
mov
xchg
sub
pop
push
mov
cmp
repnz
pop
sahf
jne
jne
fs
lea
or
push
add
and
dec
pop
lods
push
loop
subl
popa
inc
es
inc
loopne
sub
push
dec
daa
pop
jmp
js
push
pop
idivl
and
adc
and
pop
jmp
stos
addb
fstps
mov
push
aaa
pop
jmp
cld
inc
in
cld
icebp
loope
inc
pop
sub
mov
jmp
clc
pop
mov
sub
xchg
add
xor
sbb
hlt
xor
call
rcl
dec
stos
add
xchg
inc
sub
sub
adc
mov
ss
adc
xor
add
std
ja
movsl
ret
jmp
int3
fcoms
mov
loop
xchg
repz
and
rol
pop
or
jnp
pop
sub
pop
add
xor
pop
push
or
adc
jl
xor
push
xchg
pop
movsb
mov
xor
ljmp
sub
inc
jmp
mov
lock
jg
add
fldt
or
pop
lret
add
sub
cmp
dec
int
add
hlt
mov
les
int3
jmp
int
xchg
xor
decb
pop
lods
ljmp
xchg
push
mov
dec
shrb
andb
jmp
adc
gs
cmc
adc
test
adc
pop
scas
mov
xchg
hlt
pop
or
fsubs
aas
jg
mov
mov
lahf
add
jmp
dec
pop
push
push
fistps
and
mov
push
out
ljmp
push
ja
scas
ds
popf
gs
cmpsl
aad
mov
push
adc
mov
loop
test
in
lret
push
bound
mov
loopne
mov
sub
xor
or
sub
test
out
xor
push
mov
inc
loop
shr
insb
mov
in
ret
or
loopne
jecxz
dec
leave
call
and
mov
push
repnz
fmull
rcrl
pop
and
cmp
pop
outsb
cwtl
int
les
push
mov
fwait
inc
add
jb
mov
push
das
jp
aam
rcll
jp
shr
add
mov
lods
dec
jbe
push
popf
jo
out
or
aam
sbb
ret
mov
pop
test
inc
and
nop
jge
jae
pushw
inc
dec
shlb
cld
addb
or
pop
mov
sbb
rolb
scas
pop
pop
push
push
push
mov
fidivs
cmpsb
dec
ret
or
jnp
outsb
sahf
lahf
inc
sbb
pusha
pop
push
leave
jne
mov
int3
in
xchg
out
xchg
adc
std
imul
push
mov
adc
sub
jbe
clc
rolb
je
clc
jge
xchg
sbb
push
add
inc
xchg
jno
pop
jo
pop
add
push
iret
loop
roll
inc
hlt
mov
or
jno
cmp
sub
mov
and
push
mov
sbb
push
pop
mov
adc
inc
sub
push
pusha
or
inc
or
push
pop
push
sub
mov
and
add
jns
mov
xor
and
or
out
adc
pop
lods
stc
clc
aas
xchg
push
add
ljmp
mov
mov
jmp
cmpsl
dec
loop
loop
mov
mov
bound
sbbl
jg
hlt
push
lock
fcomp
pop
not
or
xor
cmpsl
cmp
inc
cli
mov
mov
cli
jmp
fucomip
cld
sbb
mul
and
add
ja
jle
mov
test
icebp
and
pop
cmpb
clc
rorb
and
pop
add
jnp
leave
fistps
mov
std
leave
cmc
bound
fstl
pop
aas
imul
add
ljmp
and
pop
pop
mulb
lds
push
xchg
inc
pusha
push
dec
pop
std
addr16
jg
jle
jo
stc
pop
adc
test
into
rcl
cmc
daa
rcll
loop
sti
imul
fwait
pop
sub
xor
mov
inc
inc
push
inc
out
test
jno
xchg
mov
inc
inc
jle
add
jmp
stos
lret
pop
mov
jl
cs
sbb
cmp
and
inc
add
jae
jbe
out
cmpsl
cld
inc
adc
and
mov
pop
pop
add
arpl
xchg
inc
repz
loope
push
mov
mov
stos
xchg
mulb
ret
imul
sti
ffreep
fmull
push
jno
jp
or
pop
fdivl
pop
stos
jb
add
jne
iret
mov
cmpl
lahf
cmp
jmp
in
cmp
out
stos
cmp
jmp
out
xor
cmp
and
hlt
push
and
into
rclb
sub
into
and
cli
add
xlat
sti
neg
or
repnz
cmp
and
push
imul
add
test
cmp
pop
mov
or
imul
popf
cmp
in
dec
dec
adc
dec
fs
mov
test
negb
fsubrp
or
add
jl
jno
jp
leave
sarl
or
pop
popa
add
dec
pop
inc
test
mov
loop
add
xchg
int
addb
shlb
sub
repnz
mov
repnz
sbbl
or
jp
aaa
xor
mov
lahf
xorb
push
inc
in
or
mov
arpl
adc
in
push
insb
sahf
das
test
shrb
cld
es
and
imul
dec
push
les
int
dec
or
dec
push
int
jg
cmpsl
xchg
cmp
in
mov
pop
dec
es
mov
inc
pop
xor
loope
ds
cmpsb
adc
pop
push
mov
mov
scas
jl
sbb
pop
in
pop
popf
andb
mov
adc
shrl
fucomp
cs
jl
inc
pop
mov
les
sub
orl
je
adc
xchg
mov
sub
ror
addr16
out
data16
cmp
add
xor
out
xlat
adc
or
push
imull
call
jg
push
jmp
scas
addr16
shll
inc
jge
sub
jge
fsubs
not
sbb
out
xchg
lds
mov
pop
pop
lcall
leave
sub
aas
fsubr
xchg
add
loope
iret
stos
xchg
mov
gs
rol
les
add
sub
push
xor
push
das
mov
sbb
mov
or
pusha
out
popf
sbb
scas
dec
out
xor
push
inc
mov
xchg
repz
push
jb
popf
cld
mov
or
push
call
or
aaa
in
insl
add
sub
push
mov
jnp
roll
adc
mov
jg
add
or
or
sub
sahf
fisttpll
insl
sbb
ret
sub
push
pop
out
push
mov
lock
xor
sub
pusha
fdivrp
add
add
jmp
cs
sahf
jbe
aad
rorl
rcrl
xchg
cli
dec
sub
lret
mov
dec
bswap
and
xchg
xor
and
ss
testb
or
inc
call
adc
pop
or
pop
hlt
orb
test
notl
or
bound
loopne
xchg
inc
fdivl
je
sub
daa
les
test
idivb
lahf
in
scas
insb
inc
sub
jmp
in
repnz
xchg
in
push
js
dec
popf
mov
xchg
jge
cli
dec
rcll
pop
dec
mov
sub
cmpsb
push
das
adc
sub
jnp
pusha
das
mov
hlt
xor
xor
pop
jp
or
js
jl
add
imul
mov
jbe
adc
add
jmp
dec
sti
pop
add
dec
mov
sbb
adc
call
popa
pop
stos
call
sbb
sub
jmp
jecxz
pop
push
xor
mov
cmpsb
in
dec
or
xor
sbb
filds
xchg
inc
pop
cwtl
shl
mov
imul
idivb
mov
and
jmp
pop
xchg
mov
stos
sub
cmp
and
sub
xor
dec
or
pop
pop
shl
inc
pop
dec
ficomps
xchg
xor
add
lret
mov
aaa
adc
ja
jno
and
sarl
adc
xchg
or
jecxz
pop
loopne
and
mov
sbb
ljmp
and
jae
push
push
pop
jmp
adc
xchg
jns
das
shrl
dec
adc
loope
pop
add
addb
mov
test
mov
je
sbb
dec
test
or
inc
dec
pop
dec
aas
inc
int3
je
mov
add
jmp
sub
mov
scas
sbbb
sub
adc
addb
push
inc
mov
inc
int
lods
out
xlat
or
xor
add
in
cs
dec
fisubs
pop
pop
and
mov
cli
pop
lods
sub
daa
dec
xor
or
imul
incb
inc
xchg
stc
paddsw
xlat
mov
dec
adc
pop
push
xchg
dec
mov
push
in
mov
inc
inc
loope
movaps
dec
popf
pop
add
dec
push
add
xchg
jg
sbb
add
int3
xchg
mov
sub
pop
out
add
jmp
inc
xchg
roll
xchg
and
jl
mov
mov
xor
pop
dec
rorl
mov
sbb
push
repz
adc
xor
inc
call
jmp
enter
dec
push
mov
push
xor
jmp
push
in
jp
inc
lods
adc
mov
shl
je
sub
sub
pop
push
jmp
subb
jbe
rol
mov
aad
int
push
dec
adc
inc
sbb
dec
push
pop
clc
adc
jmp
jns
pop
xor
dec
push
add
sbb
push
sarb
ljmp
cld
or
mov
add
and
in
test
jmp
mov
push
lcall
cmpb
cmp
jbe
push
lods
outsl
cmpsb
int
inc
and
ljmp
iret
mov
dec
ficomps
imul
cmp
push
fisubrs
das
pop
inc
lret
sub
iret
jg
jne
out
enter
jo
int3
xchg
and
sub
in
or
or
insb
popa
loop
sbb
jge
iret
pop
xchg
not
scas
or
fisubs
jmp
mov
cmpb
add
movsb
sub
add
orl
add
pusha
bound
icebp
insl
pop
out
add
xchg
mov
xor
faddl
pop
adc
sbb
mov
adcb
dec
pop
test
push
insb
xor
inc
mov
inc
shr
jmp
add
sbb
mov
aaa
inc
jno
add
jbe
xchg
fistpll
jmp
sbb
ret
jne
push
daa
pop
roll
mov
js
lock
inc
loope
push
jle
adc
mov
fidivs
mov
jge
add
stc
pop
sub
jmp
in
xor
add
or
push
jge
xor
gs
ds
stc
mov
inc
loope
and
stos
bnd
mov
jno
vmwrite
imul
std
rolb
mov
dec
or
mov
inc
push
jl
jmp
cmp
xchg
jae
cmp
adc
pop
lret
in
arpl
or
mov
inc
jmp
dec
div
inc
or
push
icebp
mov
loop
jne
ret
outsl
add
ds
jae
call
neg
dec
cmpsl
mov
adc
cmp
add
inc
lods
loopne
je
xor
sub
imul
jmp
jp
js
adc
push
gs
adc
push
jg
jnp
pop
cli
add
push
dec
outsl
jmp
ficoml
push
mov
lret
mov
cld
jmp
add
push
into
xchg
int3
and
int3
inc
pusha
xchg
lods
mov
lret
pop
xor
sub
cmp
pop
cwtl
out
mov
subb
mov
pop
mov
mov
push
mov
pusha
mov
shl
pop
sub
mov
ret
cmp
imul
imul
cmpl
xor
cmp
push
add
imul
push
hlt
cmpsb
jp
jge
or
mov
lds
jo
iret
nop
sbb
cli
jl
jmp
insl
out
push
push
pop
fs
jo
sub
and
scas
jecxz
push
adc
negl
mov
xor
or
outsb
push
xor
mov
out
sbb
inc
lods
insb
sub
push
dec
js
inc
data16
enter
jnp
xchg
xor
sbb
shrb
and
jbe
es
push
dec
sbb
mov
test
test
push
out
enter
fmuls
cmp
pop
cld
imul
or
jbe
jp
in
out
rolb
jmp
add
je
jnp
or
or
inc
ret
and
stos
das
pop
pop
fbstp
sub
inc
dec
repnz
add
push
push
jmp
lods
cli
sub
mov
mov
data16
jp
xchg
out
fs
clc
mov
dec
mov
add
les
xchg
frndint
mov
adc
shlb
pop
xchg
inc
mov
out
sbb
pop
pop
sub
add
dec
jnp
sub
sub
sub
pop
cmp
sub
mov
pusha
push
cmp
dec
xchg
neg
cltd
add
sbb
leave
clc
sbbl
mov
mov
into
jmp
xlat
or
inc
data16
sub
pop
push
sub
wbinvd
mov
jmp
and
mov
nop
xor
adc
pop
sbb
aad
rcrb
scas
mov
stc
js
xor
push
add
push
andb
jg
or
data16
ja
mov
inc
stos
xor
jmp
push
push
in
lds
pop
loope
addb
jle
mov
push
addr16
sbb
jne,pt
mov
push
add
and
xor
adc
scas
xchg
outsb
push
or
xchg
mov
pop
jno
pop
jg
inc
add
or
aaa
and
clc
adc
inc
ljmp
mov
adc
push
push
int3
scas
and
std
mov
add
cwtl
jo
jns
lds
fmuls
inc
mov
dec
repnz
stos
add
imul
outsl
mov
jmp
jmp
aas
pop
cli
cmp
push
icebp
nop
mov
push
in
pusha
sub
sbb
jmp
loop
cld
add
or
mov
bound
xbegin
cmc
out
add
pop
jg
add
cmp
jbe
out
popf
dec
cmp
and
in
sub
push
mov
add
loopne
fwait
inc
ret
add
dec
jge
lea
xchg
popa
es
pop
push
mov
sbb
mov
out
dec
push
mov
pop
add
add
dec
les
pop
jae
add
adc
dec
or
add
jp
or
adc
sub
pop
inc
and
push
addr16
cmp
add
dec
lahf
pop
into
popf
push
mov
dec
fs
imul
inc
jno
aaa
sbb
loopne
xor
out
dec
fiadds
mov
dec
push
add
jnp
fucomp
dec
cmp
shlb
lahf
testb
in
out
lret
in
inc
xor
pop
div
xor
inc
fistpll
fisttpll
pop
cld
psrad
js
or
lods
xchg
divl
mov
push
lahf
mov
loop
adc
or
add
jae
jmp
sahf
pop
or
daa
adc
sub
push
dec
psubb
jmp
psrld
push
mov
mov
pop
pop
push
xchg
das
ret
out
inc
mov
sub
adc
push
jmp
iret
jmp
pop
nop
mov
xchg
mov
jbe
out
cli
lea
xor
inc
arpl
imul
inc
mov
add
push
add
ljmp
into
mov
in
add
cmp
jmp
psubd
das
fnstenv
mov
xor
loope
clc
shlb
daa
sbb
loope
adc
std
push
sub
xor
mov
or
outsl
sbb
mov
out
inc
or
shl
or
pop
sub
arpl
loope
dec
cmp
mov
fmuls
sub
call
sub
jnp
mov
dec
inc
add
test
pop
sti
cmp
lahf
push
dec
dec
fildl
ficoml
addr16
lcall
scas
and
nop
rcrl
jmp
push
pop
incb
dec
fnstcw
xchg
and
cmp
pushf
jae
push
sub
or
int
aas
les
lds
stos
mov
mov
or
inc
sarl
cmpsb
inc
adc
out
xchg
push
jmp
das
stos
push
fdivr
cmp
hlt
sub
add
mov
rcrl
sub
push
lods
push
mov
stc
inc
in
std
push
mov
int
iret
test
outsl
sbbb
cmp
cld
add
pop
rcll
add
addr16
fadds
sub
cwtl
leave
xchg
push
in
int3
data16
popf
inc
rcrl
sub
sub
icebp
shlb
aas
mov
ds
daa
cmp
and
test
push
push
mov
mov
nop
xor
xchg
mov
pop
and
adc
or
jmp
pop
push
scas
or
aam
inc
ljmp
pop
aad
xchg
jmp
cmp
xchg
adc
sub
cld
pop
ficomps
mov
jmp
shl
or
je
mov
cld
ret
jg
xchg
sbb
mov
dec
or
or
dec
neg
or
and
adc
test
adc
adc
inc
mov
xor
sub
pop
jl
ja
add
xchg
pop
pop
jo
xor
add
lds
cmpsb
jmp
les
dec
addb
lahf
push
xchg
inc
push
pop
lds
jbe
iret
push
sti
scas
cmp
sbb
sbb
pop
decb
add
jmp
shl
mov
pop
fwait
movsl
cld
xlat
inc
mov
lock
xor
sbb
cmp
add
hlt
jmp
adc
jmp
sbb
pop
cmovb
pop
push
lds
int3
imul
adc
leave
sub
inc
js
sbbb
jmp
sub
sbb
mov
dec
sti
ficompl
push
dec
lret
scas
cmp
ret
bound
mov
sbb
not
or
mov
jp
sbb
pop
inc
xchg
or
mov
add
push
dec
shll
loop
ret
addr16
mov
popa
shr
cmc
clc
lds
push
and
inc
xchg
int3
rcrb
sub
fcmovne
sbb
push
push
push
pop
loopne
jno
insb
push
jbe
push
imul
push
inc
push
out
jge
int3
jae
cmc
rclb
xor
add
mov
mov
cmpsb
jle
adc
test
icebp
inc
fnstsw
into
pop
pop
xor
xchg
jnp
imul
push
mov
insb
xchg
sub
pop
inc
cld
adc
pop
ljmp
push
or
inc
test
adc
sbb
sub
cmp
mov
add
jmp
icebp
inc
mov
dec
fidivrs
stos
fcmovnu
sub
jmp
jne
jnp
push
sbb
or
cltd
je
out
les
call
or
fstps
sbb
jge
jb
pop
jb
pop
lret
push
pushf
rcll
cmp
push
mov
insb
adc
pop
cld
call
add
pop
jmp
mov
std
insb
and
icebp
xlat
push
or
inc
xor
ret
push
mov
xchg
xor
push
xor
loopne
icebp
jno
aaa
or
nop
or
pop
lods
xlat
sub
add
add
jne
mov
push
in
lods
cmp
dec
add
dec
and
cs
xchg
mov
or
ret
cmp
adc
cmp
fs
loope
sub
xor
pop
ss
lcall
jp
or
call
loop
jbe
cmc
stos
or
arpl
mov
shll
mov
rcrl
xor
mov
lret
sub
or
push
push
faddl
repz
shl
cli
enter
jge
adc
enter
shrl
scas
mul
dec
xor
xor
fs
add
popl
dec
xor
fisttps
mov
gs
add
rol
or
and
test
xor
sbb
sub
sbb
fbstp
test
mov
test
aad
scas
mov
dec
decl
mov
bound
inc
xor
adc
mov
pop
test
mov
shrl
orb
icebp
les
movsb
loope
test
inc
je
xor
cwtl
dec
push
jmp
xchg
and
mov
inc
mov
xchg
in
sub
cmpb
inc
repz
lret
push
stc
adc
push
push
add
mov
jle
add
xor
xor
jmp
pop
hlt
fmul
jnp
sub
jb
xchg
jns
lret
in
mov
stc
sub
fstpl
xor
sarb
xchg
add
xchg
xor
fmuls
xor
mov
or
call
cmp
sbb
rolb
gs
fsubrs
inc
cmp
or
pop
jmp
push
add
jmp
xlat
lret
pop
outsb
fimull
and
sarl
into
sbbl
daa
push
ja
push
lods
push
mov
in
scas
push
out
lret
out
pop
jo
jmp
fsubrl
aad
push
std
xor
inc
popf
add
push
mov
add
sbb
movsl
aam
mov
adc
iret
jge
adc
out
push
mov
jmp
xor
push
je
je
sub
sahf
jmp
pop
mov
push
orl
or
test
push
pop
cs
cmp
push
xchg
jle
push
aad
cmp
mov
adc
adc
add
jecxz
dec
sahf
or
cmp
fidivrl
pop
daa
adc
paddusw
jge
sub
sbb
lret
adc
daa
jmp
add
loope
imul
cmc
filds
xchg
fwait
pop
dec
lds
loop
loop
jp
neg
subb
cmp
mov
in
push
push
add
xor
jmp
or
in
pop
movsl
push
pop
jno
lods
jl
pop
add
jns
mov
mov
jae
sbb
xchg
xlat
cmp
mov
sarl
stos
push
add
test
cli
mov
in
into
dec
push
fimull
or
push
cmp
psubsw
out
aaa
ret
fnstenv
pop
cmp
ja
or
push
mulb
decb
pop
jb
inc
testl
push
rcl
jae
sub
sub
fildll
test
ja
rcrl
jnp
fucom
push
stos
sub
jbe
dec
push
push
cwtl
rorb
add
jns
adc
or
repnz
or
sbb
xor
sub
mov
int3
nop
adc
jge
xchg
xor
shr
or
inc
ret
lds
pop
hlt
gs
lcall
adc
xchg
pop
mov
adc
ljmp
sub
push
or
mov
add
push
mov
pop
jmp
ret
aas
dec
mov
mov
or
lret
dec
add
dec
jbe
mov
in
out
mov
pop
dec
adc
notl
fs
mov
or
das
xchg
idivl
xchg
insl
fldt
mov
and
aad
pop
push
rcrb
push
inc
mov
xor
xchg
jbe
ret
cld
ret
jmp
push
push
aas
cmpsb
sub
push
jmp
aad
cwtl
push
bound
dec
clc
mov
cmp
rclb
stos
push
ja
mov
jmp
mov
mov
cmpsl
out
jecxz
push
mov
jb
push
cltd
and
cmp
jne
loopne
mov
pushf
mov
je
popf
jmp
ds
pop
xor
roll
jle
or
pop
push
add
xor
popf
cmc
int3
out
popa
dec
lahf
fnstenv
test
loop
jmp
inc
add
pop
or
jmp
mov
test
or
cmp
push
repnz
adc
and
jbe
add
loope
push
nop
add
push
arpl
jne
adc
mov
push
pop
push
xorb
jb
adc
pop
sbb
inc
les
mov
daa
lock
xchg
push
aam
repnz
xor
add
in
push
xor
jl
add
inc
je
ss
shll
jae
repz
shlb
es
sub
or
cli
or
add
in
les
loopne
xchg
pushf
pop
fldcw
or
jle
outsb
in
or
push
inc
cmpsb
aam
sbb
xor
push
dec
mov
or
data16
ljmp
push
lods
sbb
pop
adc
mov
dec
neg
ret
add
xchg
repz
dec
push
shll
xlat
rol
or
cmpsb
or
stos
aas
adc
loopne
int3
sub
out
pop
leave
pop
subb
mov
outsb
popa
cwtl
dec
pop
or
iret
pop
pop
and
jl
leave
roll
je
mov
push
pop
js
push
jl
dec
add
cmc
inc
lcall
push
push
mov
pusha
jmp
pop
and
xchg
popf
inc
das
add
mov
jns
loope
jmp
add
cmp
or
adc
cmpsb
jecxz
push
decl
arpl
add
std
xlat
mov
add
and
sub
jp
and
mov
jne
xchg
pop
sub
stc
or
and
and
inc
mov
mov
cmp
ret
mov
aam
pop
inc
in
sarl
daa
add
ss
and
cmp
pop
jmp
loopne
ljmp
call
mov
insb
shlb
pop
push
insb
mov
xlat
sub
adc
mov
jnp
inc
pop
mov
mov
or
in
decb
das
push
xor
test
jle
fs
pop
dec
xor
inc
mov
cmp
fcmovu
pop
lock
pcmpgtd
adc
in
add
enter
lods
push
es
add
mov
push
cmp
pop
fcmovnu
sub
into
jmp
stos
mov
add
mov
inc
or
xor
push
stos
sbb
loope
stos
dec
leave
mov
push
pop
push
jne
sbb
fwait
jle
add
mov
xor
aad
rol
pop
sub
bound
sbb
xchg
inc
xchg
dec
and
or
push
repnz
cwtl
pop
shr
mov
push
hlt
adc
cmp
adc
inc
jle
frstor
jl
hlt
or
push
jnp
lea
icebp
cmpsb
faddp
cli
pop
jns
xchg
jle
and
push
jge
mov
jge
adc
inc
cmp
pop
push
fisttpll
sbb
divb
shr
and
pop
xchg
sub
jmp
push
cmpsl
cmpl
lods
dec
push
push
or
iret
pop
add
insb
sub
lock
sub
loopne
je
push
jmp
popf
sbb
loop
dec
aam
into
lret
or
js
hlt
jbe
inc
or
sysret
ja
subb
mov
and
push
ljmp
andb
sub
push
mov
pop
push
stos
out
ljmp
adcl
adc
cmp
pop
enter
add
jmp
repnz
aam
inc
dec
inc
sub
std
hlt
or
mov
shll
movsb
mov
adc
mov
push
pusha
xchg
sub
push
push
jmp
adc
cmp
jo
iret
pop
add
daa
shrb
or
nop
iret
gs
dec
pop
mov
dec
das
mov
push
mov
lret
add
xor
jle
or
pop
mov
cmp
xor
jl
jle
enter
fs
pop
sub
clc
rcl
xorl
pop
cmp
imul
fwait
lods
je
adc
dec
xlat
das
jle
mov
cmp
xchg
ret
inc
out
dec
cwtl
inc
add
test
jmp
call
or
mov
pop
mov
jne
dec
xlat
mov
xor
add
add
inc
inc
cld
jmp
incl
inc
das
cmp
sbb
sub
psadbw
adcb
xor
aaa
push
aas
jne
in
pop
jns
push
addl
add
mov
pop
sub
adcb
cli
pop
cmp
cmp
lods
mov
icebp
inc
fldl
lock
repz
mov
pop
loop
lret
mov
lds
push
loopne
inc
add
and
jnp
push
inc
in
xchg
pop
mov
dec
sub
rcll
jno
lods
mull
sbb
add
and
pop
neg
push
pushw
cwtl
mov
mov
adc
pop
mov
scas
loop
add
out
mov
pop
mov
call
test
inc
jmp
fwait
xchg
or
sbb
jl
sub
cld
jp
lret
cwtl
imul
dec
outsb
and
cs
inc
jmp
and
and
es
dec
mov
pop
sti
and
shll
push
lea
lret
and
inc
sti
jp
xchg
hlt
sti
ljmp
bound
inc
imul
bound
repz
adc
inc
xor
mov
cltd
scas
mov
xchg
xchg
mov
fcom
sub
jge
mov
outsb
das
popf
rolb
jmp
dec
insb
add
icebp
pop
shr
push
mov
daa
fldcw
out
mov
mov
add
xchg
inc
ret
pop
daa
inc
cmpl
popa
inc
pop
jg
inc
pop
ljmp
imul
cwtl
lods
cmp
fsubl
mov
push
pop
and
and
pop
add
push
jmp
lahf
loope
out
enter
or
outsb
pop
stc
cmp
mov
cli
shlb
addb
xor
adcb
push
or
cmp
sbb
or
pop
mov
push
lret
dec
aas
sbb
push
adc
and
pop
pop
lea
popl
pop
xchg
jl
or
mov
xor
and
pop
xchg
addl
push
nop
add
push
in
push
pop
mov
sub
scas
sub
mov
inc
shr
lahf
or
jge,pn
push
jo
adc
mov
mov
lret
and
fimull
or
pop
push
jmp
mov
dec
nop
and
sbb
or
or
add
add
rcll
loopne
xlat
push
stos
sbb
jecxz
scas
repnz
xchg
cli
pusha
repz
adc
dec
fistl
mov
jmp
popa
add
les
sarb
sbb
jbe
into
sub
pop
shlb
repnz
add
cwtl
dec
cs
or
movlps
jmp
xor
cmp
lds
inc
mov
pop
out
lret
test
cld
jo
push
orb
add
mov
in
push
adc
adc
rcrl
lret
add
js
aaa
add
mov
mov
inc
sti
rcrb
mov
cmp
aaa
out
bound
or
mov
out
mov
pop
mov
ja
sub
or
es
lods
sar
inc
jbe
dec
enter
push
push
inc
pop
stos
add
nop
sbb
ficoml
sahf
cmp
movsl
pop
in
jle
mov
dec
add
dec
shl
gs
mov
lret
fnstsw
cmp
sbb
adc
data16
xor
cmpb
fists
test
cmovno
pop
add
dec
inc
adc
fwait
dec
jmp
add
inc
out
shll
cs
cmpsl
dec
xchg
inc
shl
in
cmp
outsl
fnstsw
adc
insb
lock
pop
jmp
dec
add
popa
sbb
or
push
gs
insl
or
dec
add
imul
jl
sub
lcall
roll
add
pop
lahf
aam
jl
pop
mov
jmp
pop
bound
mov
popa
shrb
loope
rorl
stc
les
and
pop
jecxz
js
cmp
pusha
loop
sbbl
mov
jle
mov
icebp
movsl
ss
or
add
cmp
pop
nop
stc
js
sub
or
jmp
adcl
lahf
sbb
cmp
aam
push
add
cmp
dec
mov
or
shlb
add
adc
pop
out
punpckhdq
push
fs
shrl
lahf
xchg
jl
mov
es
mov
ret
push
jmp
jecxz
push
mov
icebp
add
adc
test
pop
call
pop
sub
std
xlat
mov
cmc
cmp
inc
jnp
std
xor
sub
add
or
sbbb
jecxz
lea
aad
cmp
pop
xchg
fstl
cmp
movsl
add
xor
mov
dec
push
dec
fucomi
mov
aam
lds
sbb
mov
outsl
mov
inc
and
add
test
jmp
data16
mov
js
jl
mov
xacquire
pop
or
jb
dec
jno
test
or
jae
and
push
xlat
leave
inc
and
out
repnz
add
sarl
stc
xchg
add
or
roll
pop
and
jo
and
pop
cld
mov
pop
stos
imul
cltd
dec
pusha
xchg
cmp
pusha
out
out
and
xchg
push
in
cmp
lock
pop
push
push
xor
adc
daa
das
pop
jo
push
dec
xor
adc
push
xor
xchg
cmc
test
and
add
mov
jmp
pushl
rcrb
dec
xor
movsb
push
scas
dec
or
fdivrs
cmpsl
jne
pop
or
xor
push
push
movl
fcmovbe
pop
sbb
adc
movhps
sub
mov
and
leave
mov
scas
adc
scas
enter
ja
inc
add
and
xlat
in
cmp
jmp
push
dec
mov
cmp
mov
inc
shll
sti
mov
repz
out
leave
lar
das
les
xchg
subb
or
adc
and
rcl
add
aad
push
push
xchg
dec
xchg
or
and
out
es
cs
inc
sbb
jmp
xchg
int3
or
test
cmp
adc
shlb
sub
jg
std
mov
fs
add
jge
ds
jmp
sub
dec
sbb
xor
int
xor
shrl
hlt
mov
jle
es
dec
or
jmp
jecxz
imul
ret
popf
ficoms
jmp
push
mov
inc
test
push
stos
push
mov
push
jns
mov
nop
subb
out
nop
push
and
icebp
mov
jbe
hlt
xchg
lahf
les
mov
mov
sub
pop
mov
xchg
cwtl
lahf
icebp
imul
iret
hlt
mov
xchg
dec
jp
les
movsb
add
mov
in
iret
shl
xor
mov
add
pop
xchg
sub
push
testl
jmp
adc
insl
xlat
sub
adc
sbb
sbb
jno
xor
es
fidivs
xor
js
dec
shlb
dec
jmp
xlat
je
sar
push
mov
lahf
jns
loope
jmp
push
add
stos
add
xchg
pop
mov
cs
push
test
in
into
rcl
jp
into
adc
pop
inc
stos
fwait
push
xor
sbb
jp
or
or
das
pop
fsubrs
int
mov
or
fsts
add
xor
jge
mov
xchg
sub
sub
sbb
movsl
jge
mov
fucompp
adcb
add
mov
inc
insb
js
dec
dec
mov
outsb
hlt
imul
dec
int
push
mov
ljmp
loopne
jbe
add
sub
push
outsb
repnz
out
imul
pop
outsl
adc
adc
cli
or
repz
pop
inc
leave
inc
idivl
push
push
xchg
jno
rolb
jb
push
mov
xchg
push
ret
dec
lea
push
add
or
cmp
in
mov
loopne
nop
lds
xor
pop
push
add
cli
pop
iret
or
inc
cmpsb
pop
std
push
inc
mov
push
dec
sub
clc
pop
jecxz
subb
mov
xor
dec
xchg
mov
push
xor
and
adc
movsl
scas
mov
ficomps
inc
mov
inc
or
pop
lahf
fcoml
jmp
je
pop
bound
je
jo
xchg
lret
sbb
pop
adc
lods
fisubl
xchg
dec
popa
push
mov
enter
div
into
imul
mov
jb
cmp
clc
movq
clc
add
add
adc
inc
and
nop
fwait
fs
inc
mov
add
test
pop
pop
xor
jg
or
popa
adc
pop
dec
loope
loope
cmp
pop
sub
pop
push
pop
int
imul
push
dec
rol
loop
shr
repnz
into
jo
xchg
ja
std
xchg
jl
bound
add
mov
lret
push
jmp
test
xchg
fstpl
mov
cmpsl
lock
and
cld
outsl
out
sbb
cmp
push
mov
imul
clc
cld
inc
or
sub
loop
jl
pop
leave
cmp
icebp
pop
orb
mov
pop
dec
dec
dec
es
pop
xor
adc
xchg
jbe
add
lods
fdiv
or
pop
shl
shrl
mov
jl
nop
xchg
push
jmp
mov
mov
fimull
mov
or
mov
bound
pop
shlb
xchg
adc
and
or
jmp
dec
loopne
jne
inc
lahf
add
gs
mov
loopne
cs
js,pn
subb
negl
mov
fistpll
or
jmp
push
ss
arpl
popa
jge
sub
add
xchg
mov
push
mov
and
and
pusha
fldt
mov
and
push
sahf
inc
pop
icebp
lret
dec
fists
daa
sub
mov
sub
iret
out
sub
jl
pop
jmp
push
pusha
rolb
shr
orb
xchg
dec
filds
frstor
mov
and
pop
jns
inc
mov
dec
fadds
fistps
insb
mulb
lock
dec
call
scas
jecxz
mov
repz
jns
cs
nop
ja
mov
imul
sbb
pop
pop
fdivl
jle
adc
sbb
mull
sub
pop
pop
test
push
mov
fs
dec
add
mov
hlt
aas
idivb
inc
push
aas
add
imul
inc
dec
inc
jl
in
outsl
or
push
or
insl
jo
repz
xchg
push
pop
add
ljmp
mov
adc
aam
sub
sub
sub
rcrb
dec
push
movsl
sti
jbe
scas
lock
cmp
test
jb
or
movsb
jae
push
dec
in
jbe
pop
xorb
cmp
lcall
or
xlat
inc
aaa
or
sub
mov
pusha
jecxz
es
xchg
sbb
mov
push
orl
daa
loopne
dec
pop
pop
xor
or
aam
or
cmc
adc
xchg
aam
pop
ds
jb
or
or
push
pop
dec
jmp
mov
into
dec
lods
inc
popa
out
cmp
dec
cs
dec
pop
cmp
cmp
push
les
les
je
add
sbb
dec
cli
ret
pop
mov
pop
jmp
ret
stc
adc
test
jge
movsb
or
lcall
dec
dec
push
add
jne
or
pushf
push
movsb
dec
fsubrs
sbb
push
icebp
add
sub
sub
js
add
sub
cltd
fsubrs
push
data16
add
cmp
neg
fsubr
rol
mov
out
and
ret
outsb
jnp
subb
xchg
loopne
sbb
dec
add
repnz
jne
js
bound
int3
or
cmc
cmp
fistpll
cli
pop
push
shl
call
xor
cli
cmp
sbb
add
lahf
cmp
cli
ds
mov
in
js
sbb
inc
push
inc
and
out
insl
ret
or
pop
add
fbstp
es
scas
test
push
fisttpl
sbb
cmp
and
xchg
pop
push
lret
pop
fists
push
mov
mov
dec
pop
xchg
add
adc
xchg
add
dec
mov
insl
aaa
pop
adc
push
pop
jmp
sbb
jmp
sub
add
scas
enter
subl
sbbb
xchg
or
in
ljmp
push
adc
fnstcw
dec
shrl
mov
sbb
dec
outsl
loope
gs
in
push
pop
out
vmread
gs
sub
movsb
flds
jg
mov
xlat
or
pop
in
lods
out
jb
push
mov
inc
mov
and
out
inc
ret
mov
sub
test
jg
test
or
repnz
sub
push
icebp
jne
imul
ja
adc
cmp
cmpl
xor
rclb
jp
and
imul
pop
mov
pop
adc
pop
push
mov
repnz
call
repnz
pop
lds
lea
lds
sub
or
add
imul
mov
ljmp
incb
lods
ds
xorb
push
jmp
into
or
outsl
push
mov
sbb
imul
cmp
jl
jo
or
xor
daa
mov
test
and
pop
cmp
sbb
lds
cs
xor
sbb
inc
sbbb
nop
leave
xchg
jns
xor
jmp
or
mov
jge
hlt
cmc
ljmp
mov
jmp
ret
sahf
fmuls
rcll
jg
loopne
pushf
push
add
xchg
jge
cmp
popf
daa
push
aad
bound
into
bound
jne
ja
adc
dec
jle
sbb
dec
ds
ds
orl
pop
push
inc
or
loopne
xchg
aad
push
adc
cs
push
mov
js
loopne
dec
cmc
icebp
test
xchg
daa
pop
sbb
rolb
inc
xchg
pop
stc
imul
jnp
push
or
inc
dec
mov
or
popa
xchg
cmp
cmp
pop
xchg
inc
aaa
lods
or
xchg
push
aas
dec
inc
das
or
push
inc
adc
sub
xchg
orl
lret
test
cld
cld
mov
icebp
sbb
push
cwtl
mov
arpl
push
cs
push
or
add
and
loop
mov
fwait
mov
push
xchg
sub
lea
ljmp
pop
dec
add
lock
daa
or
mov
dec
adc
shr
adc
add
or
mov
repz
or
add
inc
cli
dec
ljmp
push
xorb
pushf
jmp
xor
out
or
xchg
sbb
xor
xor
stc
adc
jge
add
mov
outsl
inc
or
mov
loopne
jns
push
movsl
imul
and
and
or
imulb
mov
inc
add
push
lea
cmp
jp
xor
or
xor
bound
or
addr16
lock
bound
xor
adc
ja
jmp
and
and
xor
nop
xor
pushf
icebp
and
and
fucomip
adc
aas
sub
test
or
imul
ss
or
xchg
sub
es
or
subb
rcrb
sbb
dec
subl
or
adc
outsl
int3
or
xchg
mov
pop
inc
mov
inc
pop
movl
add
sahf
add
sbb
les
cwtl
or
sbb
aaa
or
or
or
adc
cltd
stc
dec
mov
mov
jne
xlat
push
adc
insb
lcall
xchg
cmpb
subb
dec
or
inc
jl
cli
xor
and
lods
jecxz
adc
pop
es
lock
adc
sub
xchg
movups
adc
imul
shll
push
out
dec
add
mov
xor
ret
bound
shl
add
add
sbb
cmp
adc
inc
xor
test
inc
js
icebp
clc
arpl
sbb
incl
pop
push
add
adc
pushf
aaa
sbb
cmp
popf
sbb
data16
fmuls
imul
sbbb
out
outsb
xchg
lret
push
sbb
imul
shl
pop
add
xchg
in
or
out
loopne
jl
in
dec
pop
cmpsl
mov
add
ret
push
push
add
mov
inc
lods
pusha
mov
lahf
xchg
xlat
mov
dec
inc
xchg
xchg
shl
movsl
pop
add
jae
mov
add
sub
jmp
outsb
fs
mov
jg
jmp
and
push
test
fiaddl
mov
sbb
loope
fucomp
fmull
pop
dec
push
cmc
repz
jo
push
or
sub
push
shlb
adc
mov
push
xchg
in
add
cli
and
call
mov
push
mov
push
lds
mov
sub
and
jecxz
and
out
ds
pop
jbe
out
add
jp
neg
xchg
lock
sbb
xchg
popa
lods
dec
call
das
xchg
stos
mov
insl
pop
inc
mov
cmpsl
icebp
data16
and
cmp
lret
aas
xchg
push
jge
cmpsl
push
push
and
ja
ja
fs
mov
sub
pusha
xchg
fcomps
test
push
loop
rclb
jo
push
decl
ret
pop
and
mov
mov
mov
fistps
xor
icebp
jnp
jns
push
clc
cmp
lret
push
xchg
xchg
flds
imul
movsl
cltd
hlt
ret
mov
ret
mov
imul
sub
pop
sbb
jmp
movsl
pusha
add
jecxz
pop
pop
sbbb
adc
push
push
cmp
stc
mov
mov
xchg
sbb
lret
push
sbb
std
nop
xor
aas
and
mov
int
in
outsb
adcb
dec
ja
aaa
sub
mov
inc
pop
cmp
or
jmp
jl
and
jle
sbb
sarb
mov
jae
xchg
cmpsb
mov
push
shrl
popf
dec
ret
je
sub
aam
scas
mov
mov
test
or
fistps
mov
gs
xchg
jno
xor
pop
mov
pop
loope
das
or
lret
cmp
pop
pop
lds
dec
scas
lret
jmp
test
push
fstps
jmp
out
gs
mov
xor
in
out
adc
nop
mov
inc
jmp
mov
jmp
mov
mov
xchg
push
inc
and
jno
dec
repz
cmp
adcb
mov
push
mov
jmp
add
sbb
rol
and
dec
leave
add
add
and
icebp
xchg
mov
push
xchg
and
xchg
cmpsl
mov
fadds
or
adc
out
add
mov
jo
testl
add
mov
or
add
mov
push
push
idivb
leave
xor
fs
ret
pop
mov
push
jmp
mov
sbb
adc
je
inc
not
addb
mov
and
lock
xor
cmp
das
xchg
mov
les
out
popf
jmp
shrl
into
pushf
xorl
push
das
loope
fstl
inc
shll
test
cmc
enter
add
xor
jmp
xchg
pop
shrb
push
jg
or
pop
subl
sbb
imul
lods
sub
addb
push
mov
jmp
sub
sbb
punpcklbw
pop
push
push
jae
movl
or
or
push
lds
das
stos
push
pop
js
sub
inc
lahf
jmp
std
add
notl
cli
paddsw
in
add
inc
xor
fistps
xor
fistl
dec
sbb
adc
pop
xchg
inc
or
loop
add
pop
mov
pop
das
jmp
mov
dec
jle
arpl
cmpb
mull
add
gs
xor
xor
inc
mov
pop
add
sbb
mov
test
jae
xchg
loop
jno
popa
push
mov
xchg
adc
pmuludq
aaa
xorl
inc
dec
push
arpl
mov
push
add
jp
lds
adc
sub
movsb
inc
and
js
test
pusha
sbb
push
dec
sub
in
test
sub
inc
xor
jmp
call
jae
cli
and
add
inc
sub
push
jae
jbe
jmp
insb
sbb
adc
pop
dec
push
mov
jle
sub
fisubs
adc
add
xor
das
push
sbb
adc
stos
cmp
hlt
test
ds
cmp
ds
add
add
pop
andl
add
or
add
jne
loope
and
adc
push
and
jbe
add
roll
incb
sti
sub
addb
movsb
jmp
dec
adc
clc
das
pop
xabort
mov
mov
int3
cmpsl
aaa
xchg
push
push
pusha
jne
push
imull
and
push
cmpsb
jmp
xchg
pop
sub
jmp
jp
jp
dec
mov
lds
adc
dec
cld
push
sub
test
add
sub
das
sti
aam
add
push
push
dec
dec
stos
sub
xor
sub
jmp
repz
adc
jnp
das
sub
clc
fimull
or
inc
lods
adc
sub
adc
enter
jmp
nop
push
and
mov
daa
call
and
je
push
insl
mov
dec
cmp
insl
sub
or
dec
jg
lcall
fwait
inc
xor
and
inc
mov
rorb
shl
push
mov
jmp
outsb
in
ret
add
xor
test
xor
inc
jp
adc
fsubp
cmc
or
sub
cmp
repnz
add
dec
cmp
or
dec
pushf
fiadds
inc
mov
pusha
mov
jg
mov
int3
fmulp
inc
notb
mov
rorb
stos
pusha
push
jg
jmp
jl
xchg
dec
mov
enter
ja
loop
or
outsb
dec
xchg
xlat
adc
pop
scas
cmpsb
daa
or
fsubl
xchg
push
add
push
nop
xor
push
add
or
xchg
pop
or
add
sarl
push
dec
pop
in
mov
dec
je
pusha
cmp
pop
jl
pop
push
fcom
ds
les
push
repz
push
mov
mov
jecxz
cmp
push
inc
or
sub
add
notl
xchg
data16
dec
jns
jge
inc
or
or
pop
ja
jne
jne
mov
fucomip
or
add
sbb
xor
out
mov
mov
add
pusha
fsubrp
addb
stos
cwtl
int
mov
or
xchg
push
icebp
repnz
cltd
cmp
xor
call
jnp
outsb
xchg
add
xchg
push
mov
sub
insl
xchg
adc
add
fwait
outsb
xor
adc
mov
mov
fistl
dec
mov
jno
inc
jmp
inc
shll
lds
je
mov
jle
mov
lock
dec
ret
in
cltd
das
mov
and
daa
mov
hlt
xchg
push
test
js
push
xchg
lods
jp
and
xlat
dec
das
xlat
mov
dec
pop
negl
das
insl
cmp
clc
and
adc
xor
stos
adc
imul
insb
add
push
mov
adc
shr
add
sbb
lahf
or
push
pop
mov
push
xchg
and
mov
out
add
js
xor
cmpsl
cmp
scas
xor
outsb
in
mov
pop
pop
push
xchg
sbb
dec
mov
adc
jle
push
fisttps
or
iret
cmpsl
movsl
mov
lret
fdivrp
rorl
arpl
not
pop
shrb
and
xor
sbb
add
adc
cltd
call
and
jmp
ret
shl
jge
fsubl
add
pop
dec
cmp
cmp
lods
outsl
jmp
push
cmpsb
out
das
mov
insl
mov
jmp
pop
xchg
xor
adc
xor
sbb
inc
push
pop
pusha
push
adcb
notl
push
arpl
mov
mov
xchg
xlat
adc
jmp
aad
push
or
pop
pop
pop
movsl
ret
push
adc
fnstcw
xlat
fldcw
in
add
ja
pop
or
jge
frstor
lea
inc
jle
sub
sti
push
mov
pop
cld
jo
mov
cmp
sub
pop
dec
xor
xor
xchg
push
adc
sbb
or
ss
popf
inc
dec
lods
or
mov
add
fs
test
mov
xchg
or
ljmp
lock
mov
jae
or
xlat
bound
ss
jmp
push
into
push
sub
jmp
add
adcb
xlat
pop
fdivr
sub
push
shlb
push
mov
in
repz
scas
popa
out
sub
lea
mov
xchg
mov
flds
jo
mov
mov
jl
movsb
scas
sub
add
sbb
dec
cmp
pop
add
mov
fidivl
push
cmp
pusha
mov
mov
pop
or
shr
scas
inc
xchg
add
add
inc
pop
adc
xchg
xor
push
hlt
push
inc
add
sub
and
movsl
jg
xchg
jle
add
repnz
add
or
ret
xchg
jge
shrb
jge
adc
cmp
sub
cmc
addr16
pop
sub
adc
push
jo
jmp
mov
not
pusha
dec
stos
or
or
xor
inc
sbb
daa
dec
xor
push
xor
cwtl
hlt
jnp
das
mov
dec
push
and
cmp
bound
xchg
nop
dec
jnp
mov
adc
lahf
enter
std
xlat
push
or
or
push
xlat
cs
sahf
sahf
add
xlat
jmp
orb
push
mov
mov
jp
loopne
das
jbe
push
bound
push
loopne
and
mov
adc
mov
add
add
or
addl
pop
lds
ja
cmp
cmp
dec
sarb
out
bound
lea
or
xchg
fwait
adc
stos
cwtl
hlt
sbb
subl
xchg
sub
ret
or
testw
mov
push
movsl
sbb
push
or
stos
mov
dec
aad
imulb
add
push
dec
je
push
cli
punpcklwd
call
push
sbbb
shrb
dec
mov
jg
movsl
popa
out
decb
out
rorb
push
in
sarl
orl
daa
jg
loope
imul
mov
push
rclb
push
cmovl
add
add
mov
or
les
es
mov
jle
cmp
sbbl
mov
lahf
js
xchg
bound
stos
dec
cmpsb
inc
push
jmp
stc
inc
enter
add
push
sahf
mov
imul
je
nop
pop
dec
outsb
sbb
fldl
mov
inc
sub
add
mov
push
xchg
sub
xor
inc
mov
adc
adc
mov
les
and
lock
push
pop
lods
ds
imul
mov
and
pop
mov
jnp
fwait
push
push
mov
sarb
add
push
xchg
add
inc
adc
sti
mov
cmc
push
sub
mov
jmp
xor
das
pusha
je
insb
fs
add
movsl
in
sub
xchg
lret
pusha
adc
inc
cwtl
push
add
mov
mov
mov
insb
mulb
popf
jbe
pop
add
mov
pop
scas
or
out
cs
and
loope
add
fildl
jb
cld
xchg
pop
push
push
push
clc
add
jmp
inc
stc
jmp
add
jg
dec
xchg
ljmp
hlt
add
push
imul
cs
sbb
sub
dec
nop
clc
xchg
add
stos
cmp
andl
in
and
xorb
out
or
and
popf
pop
sub
add
push
and
mov
pop
cmp
pop
add
call
ds
xor
int
cmp
sub
das
mov
leave
jae
into
or
loope
add
in
xor
add
mov
cmpsl
ss
mov
daa
pusha
add
ds
mov
adc
sbb
lret
add
cltd
xor
xchg
call
or
pop
cmp
xchg
jns
xchg
sub
inc
push
add
sub
mov
addb
sti
xchg
pop
das
js
add
and
dec
pop
jne
mov
xor
jmp
and
add
xchg
test
out
in
add
stc
sbb
jp
adc
jmp
sub
xor
adc
push
push
in
aas
or
lcall
cmp
mov
ret
insl
testl
lret
push
pop
dec
cli
sub
sub
in
xchg
scas
add
mov
int3
sbb
orb
and
mov
adc
fdivl
jmp
jmp
ja
pusha
test
das
lahf
ljmp
leave
and
loope
adc
stos
or
je
stos
cmpsl
lahf
push
push
jmp
pop
mov
and
xor
lods
insl
shl
jmp
out
ja
cli
enter
push
leave
jae
xchg
push
push
stos
mov
add
gs
jecxz
mov
or
inc
or
arpl
jmp
mov
fmuls
roll
xor
sub
jmp
shrb
jp
das
xchg
cli
imul
sahf
cmp
or
dec
out
jno
pop
add
js
inc
jnp
jbe
mov
repz
lock
fwait
inc
push
sub
and
out
xchg
add
push
cmc
rcl
loopne
inc
sbb
or
sbb
mov
and
cs
push
pop
std
push
outsl
test
push
jae
jmp
pop
and
jnp
sub
ficoms
mov
pop
inc
sub
lret
arpl
lods
jns
test
sbb
cs
add
inc
and
xor
out
cmp
sub
push
pop
push
or
out
fists
xor
push
loopne
jmp
rol
add
jmp
ds
sub
sub
push
lock
push
xor
popf
ret
dec
sahf
add
pop
les
in
or
adc
outsl
fstpt
ret
push
outsb
pop
punpckhbw
out
xchg
test
jmp
cmp
jo
lret
repnz
lret
sahf
out
in
ljmp
pushl
xor
push
subl
pop
jge
call
in
test
sbb
sahf
sub
sbbl
loopne
add
mov
insb
push
nop
jae
pop
mov
jg,pt
mov
push
jle
shrb
jbe
lret
inc
push
or
in
push
sbb
push
cmp
inc
ds
loopne
jecxz
and
push
mov
mov
xchg
xchg
push
or
stc
sbbb
jge
jo
xor
adc
stos
fisttps
imulb
jmp
xchg
sbb
mov
lgdtl
outsl
repnz
pop
mov
repz
push
mov
mov
add
ljmp
repnz
inc
jne
dec
stos
imul
xchg
sub
cld
mull
and
push
adcb
loope
pushf
add
inc
and
adc
test
sbb
jae
ljmp
xor
add
pop
sub
pop
xchg
xor
ja
hlt
rorb
adc
in
aas
and
sbb
cld
push
push
ljmp
or
jmp
or
push
push
movsl
xchg
roll
inc
popa
jp
clc
xor
and
dec
notb
jo
push
pop
jno
es
test
es
fnstsw
and
bound
lahf
mov
test
inc
rolb
jne
leave
mov
pop
add
scas
test
pop
inc
sti
or
pop
adc
mov
jns
lods
push
inc
dec
xor
insb
add
jno
stos
xorl
repnz
xor
or
and
dec
loopne
xchg
or
aaa
inc
jmp
xor
rcll
mov
iret
stos
lret
inc
mov
push
mov
xchg
not
jmp
mov
cwtl
push
insb
lods
nop
xor
jb
mov
sbb
jnp
das
jmp
mov
mov
fcomps
ljmp
push
xchg
jno
lret
push
cmp
jnp
enter
or
rcll
or
popf
add
sub
pop
or
sbb
jmp
mov
mov
stc
push
add
clc
pop
mov
aad
gs
xorb
ret
les
pop
xchg
call
adc
repnz
inc
jmp
roll
push
fldenv
sbb
mov
pop
sub
mov
push
add
push
mov
jmp
arpl
lcall
loope
js
jne
push
jmp
jo
cltd
mov
dec
xchg
mov
sub
push
adc
call
mov
ret
or
imul
sub
inc
inc
add
mov
inc
add
outsb
jg
loop
aaa
jnp
sbb
test
cmp
arpl
test
arpl
and
insl
adc
jl
cmc
push
add
push
sbb
fs
pop
and
lods
dec
loop
jo
nop
sbb
je
pop
or
or
insl
mov
jns
xchg
sbbl
push
xlat
inc
shr
xor
cwtl
xlat
clc
fildl
xchg
jmp
lret
jp
xor
jb
fistpll
cmp
aad
adc
sbb
mov
imul
outsb
jno
cmp
mov
scas
adc
ljmp
fbstp
mov
cmp
das
add
cmpsl
inc
cmp
push
lahf
jns
cmp
jecxz
mov
hlt
cwtl
or
inc
pop
push
mov
mov
and
jno
add
jmp
jmp
xchg
push
add
adc
stc
dec
inc
xchg
or
sub
call
arpl
scas
and
inc
adc
adc
pop
jle
sub
loopne
jmp
adc
das
dec
push
jb
jg
add
or
xchg
ljmp
imul
push
lahf
insl
push
and
push
xor
xor
bound
int
jae
sub
lds
lods
push
fs
pop
rorl
sahf
adc
ds
adc
xor
sub
lcall
cmp
out
jl
jb
and
jmp
test
dec
stc
sub
xchg
inc
das
jnp
adc
inc
add
inc
push
jmp
insb
loopne
adc
loopne
add
push
pop
pop
inc
jne
dec
adc
adc
jae
cmp
add
mov
dec
ljmp
cmp
inc
push
push
xor
lret
sub
jp
sub
dec
mov
sub
push
jle
aaa
adc
jb
lret
pop
in
js
xchg
arpl
and
sbb
jl
mov
loop
or
jbe
enter
pop
js
shlb
pop
test
jmp
sbb
push
push
mov
xor
mov
push
pop
push
push
pop
push
sar
cmp
mov
loopne
mov
ds
scas
outsl
adc
mov
and
outsb
pushf
pop
mov
inc
sub
or
and
shrl
xor
mov
inc
imul
push
jmp
mov
js
repnz
jmp
sbb
into
push
int
aas
or
shrl
and
cmp
lret
shl
mov
push
sbb
mov
shrb
data16
movsl
dec
ret
les
lret
mov
cmp
cltd
jmp
push
inc
cmp
jmp
push
int3
ret
lods
push
mov
bnd
sub
fldl2t
stc
ljmp
pop
stos
or
insb
xchg
jne
push
orb
sbb
mov
in
add
aas
or
aas
ljmp
push
lcall
sbb
sbb
cmp
clc
jns
mov
fnstenv
push
inc
rcr
sub
push
mov
push
sub
aad
repz
pushw
inc
sub
mov
pop
pop
or
pop
cmc
subl
lret
test
pop
shl
std
pop
das
out
cmp
jmp
mov
jge
xchg
dec
dec
xchg
push
mov
std
xor
push
stc
adc
xor
inc
filds
jne
cmp
ds
push
addl
call
and
cld
add
jne
jmp
ffree
jle
sub
faddl
push
pop
pop
and
je
xor
mov
pop
inc
iret
arpl
and
pusha
push
mov
and
xchg
pop
and
ret
imul
inc
push
sub
cli
dec
xchg
pop
jne
add
js
leave
pop
sti
cmp
xor
rorl
xor
aad
negl
jo
call
xchg
stos
out
pop
out
jge
sub
adc
fucomp
jae
fmull
sar
ss
dec
gs
daa
clc
leave
and
adc
add
data16
or
nop
fcoml
add
jecxz
adc
push
adc
sub
sub
jnp
loope
xlat
pop
xchg
scas
rol
jg
push
in
leave
test
lret
aaa
icebp
jnp
lret
cmp
and
jp
out
bound
ds
loop
add
push
popl
push
xchg
stos
out
insl
je
cld
or
icebp
dec
testl
dec
pop
sub
jg
or
rorl
imul
es
jae
jmp
jb
mov
dec
test
jnp
pusha
adc
test
add
pop
ja
cmp
jo
jnp
mov
and
not
subb
xchg
push
shlb
cmc
outsb
cmp
add
xlat
inc
test
movsb
jnp
and
pusha
adc
or
mov
xor
jp
push
adc
jmp
insl
push
fs
pop
dec
lret
add
pop
loope
pushl
popf
mov
or
add
jg
xor
push
xor
push
std
cmp
inc
jmp
imul
sbb
add
or
roll
jnp
or
cpuid
or
xlat
xorb
sub
das
add
push
jmp
push
push
add
fnstenv
and
insb
int3
pusha
das
loop
xchg
push
outsb
jl
cld
inc
push
push
inc
add
xchg
bound
sub
aas
pop
ss
jl
ficoml
sub
inc
sbbl
scas
push
add
add
jnp
es
and
ja
or
lret
in
lret
fildll
push
decl
adc
jb
mov
xchg
jae
in
cmp
or
cltd
cmp
std
or
cmp
and
movsl
push
mov
jns
jle
repnz
mov
jo
movl
mov
dec
cmp
add
cmp
xchg
sub
mov
popf
pop
cmc
inc
jmp
pop
pop
ret
sti
add
inc
not
xor
push
shr
ficomps
sbb
and
stc
rcrl
clc
xchg
divb
xlat
add
loopne
push
add
push
jae
jl
arpl
mov
mov
cmc
xchg
lods
repnz
mov
pop
sub
cmp
sbb
jl
or
lret
lds
lock
pop
add
jecxz
shrb
sub
dec
jg,pt
lds
push
call
jbe
fmull
rcll
stos
inc
lds
fldcw
pop
repnz
test
mov
roll
fwait
addr16
insl
dec
xlat
arpl
pop
sub
cli
fmull
and
add
jmp
aad
daa
hlt
sahf
out
jbe
arpl
dec
pcmpeqw
pop
das
ja
hlt
out
loopne
sub
movsl
int
jecxz
mov
sub
add
push
inc
das
nop
shrl
cmc
xchg
adc
or
fbstp
inc
aad
cmp
inc
mov
lock
push
mov
and
or
ss
in
cld
xlat
sbb
push
push
pop
inc
hlt
mov
cltd
and
outsb
xchg
rolb
inc
dec
sub
mov
ret
pop
jmp
jle
jns
mov
adc
and
adc
and
shr
out
sti
push
mov
sub
gs
repnz
loopne
push
sbb
ljmp
add
or
sarl
inc
repz
push
inc
and
dec
jmp
test
shl
add
enter
sbb
in
jp
pop
pop
mov
pop
nop
add
push
test
sub
fildl
pop
mov
jae
and
mov
ja
jmp
push
addb
aad
sub
push
clc
add
mov
enter
shlb
push
adc
nop
inc
pop
mov
stc
ds
and
clc
xlat
sti
int3
pop
stc
adc
xchg
mov
test
and
inc
push
adc
pop
sti
les
jmp
fistpll
or
arpl
cmp
pop
lahf
xor
pop
pop
das
out
pop
frndint
in
and
add
or
add
ficoms
adc
fwait
sub
fcoms
sbb
je
dec
inc
cld
addl
mov
add
std
pop
mov
jmp
pop
fdivs
pusha
and
pop
dec
adc
pusha
aam
push
jl
push
sub
or
add
cli
lahf
inc
mov
popa
or
das
or
pop
xchg
scas
mov
pop
aad
rcr
pop
lds
or
adc
push
outsb
xor
mov
aas
cmc
pushf
add
mov
pusha
dec
adc
add
in
mov
cld
xchg
add
jae
inc
into
xlat
movsb
sahf
sbb
pop
test
fnsave
dec
inc
push
jmp
mov
push
mov
jo
in
xchg
mov
jmp
mov
and
sbb
lock
bound
adc
adc
inc
imul
push
into
outsl
push
test
or
or
sub
insb
xchg
iret
sti
aam
adc
xchg
add
mov
ss
add
push
cmp
scas
ret
add
mov
xchg
cmpb
add
pop
cmp
push
in
iret
or
pop
sub
cwtl
or
add
mov
testl
popa
add
pop
orl
and
or
push
xchg
jl
xchg
cmpsl
std
inc
xor
inc
gs
pop
push
adc
cmc
dec
add
jge
jnp
jg
add
std
add
in
stc
iret
pop
hlt
pop
sbb
add
inc
cltd
cmp
jo
mov
mov
push
loop
bound
sahf
sub
shll
inc
out
jne
add
cmp
or
sub
push
outsl
testl
inc
add
mov
xor
mov
je
out
aas
test
adc
add
sub
sahf
mov
daa
push
mov
or
push
add
pop
test
addb
or
icebp
sbb
lcall
xchg
add
pop
pop
or
mov
push
add
push
pop
icebp
or
in
repnz
jmp
xor
and
les
ljmp
jge
aas
lcall
pop
pop
sub
adc
adc
sub
pop
xchg
pushf
push
xor
pop
push
lret
jno
xor
push
dec
pushf
nop
mov
jmp
psubsw
rcl
and
loope
mov
jge
roll
jmp
cmp
adc
inc
ljmp
or
and
inc
add
jne
add
push
out
push
push
fmuls
push
imul
or
shll
pusha
cld
sbbl
push
dec
cs
mov
lods
rclb
jl
sub
dec
in
ret
jmp
inc
dec
negb
mov
mov
xor
and
or
mov
mov
movsb
xacquire
and
jne
xor
roll
addb
pop
push
sub
ds
sbb
jmp
add
aad
icebp
xchg
jno
je
add
mov
or
ja
sub
push
or
or
pop
decl
fbld
cmpsl
push
mov
push
cmp
daa
add
add
dec
sbb
fldl
mov
sbb
jmp
jmp
or
or
mov
mov
popf
inc
sub
or
nop
negl
inc
decl
adc
xchg
add
push
cwtl
roll
dec
push
mov
outsb
xor
pop
xor
lret
pop
pop
in
xlat
cwtl
test
adc
mov
sahf
push
test
add
jecxz
movsl
or
inc
addr16
jp
pop
shrl
inc
outsl
shll
dec
movups
imul
jl
sub
or
pop
mov
mov
push
jnp
add
sbb
ljmp
push
sub
repz
popa
fwait
ljmp
dec
daa
push
shrb
dec
push
pop
sub
adc
idiv
rorb
shr
call
or
inc
pop
mov
shl
pop
jmp
mov
adc
jmp
or
adc
sti
and
pop
loope
test
sub
or
mov
in
add
pop
jnp
or
xor
cmp
decb
test
in
lret
gs
push
mov
and
pop
push
jo
or
xor
mov
cmp
and
rolb
sarl
les
mov
xor
adc
mov
mov
pop
and
dec
es
xchg
scas
loopne
repz
jmp
sub
mov
mov
jmp
imul
data16
jmp
sar
sarl
iret
push
inc
fs
adc
push
jmp
rorb
sbbb
pop
mov
adc
push
xor
cmp
rorb
idivb
xor
pop
clc
dec
scas
cs
mov
pop
inc
dec
daa
into
push
cli
orb
jns
jl
add
cmp
sub
lock
ret
sub
xchg
mov
lcall
incb
ret
rcrb
jno
addr16
cltd
inc
add
dec
or
stos
xchg
hlt
add
cltd
pop
idivb
add
dec
jo
jne
inc
inc
std
and
add
push
push
mov
into
lea
aaa
test
mov
mov
mov
rorl
pop
sbb
clc
mov
inc
in
scas
mov
jmp
mov
imul
dec
lea
pop
mov
cmp
dec
add
push
push
jecxz
pop
xor
add
orb
push
pop
mov
pop
sub
dec
out
xor
call
xlat
add
jb
pop
jg
cmp
jmp
add
inc
push
xor
lahf
or
sbb
ret
push
jge
pop
hlt
adc
add
cmp
add
lods
es
jne
lret
or
xlat
adc
out
add
xor
in
add
in
ror
icebp
es
dec
mov
rcll
jmp
sub
addr16
push
mov
ret
sub
cmp
out
clc
and
mov
stc
lock
gs
scas
lea
mov
add
div
mov
stc
push
push
cmp
pop
pop
or
stos
pop
repz
repz
and
ret
mov
mov
dec
xor
repnz
cld
in
mov
notl
xchg
test
fldenv
fistps
subl
inc
push
cmpsb
pop
push
in
fstpl
imul
or
ret
push
add
push
push
loopne
xchg
push
mov
add
in
push
add
jmp
pusha
or
sub
push
inc
or
pop
mov
pop
add
and
out
push
cmp
xchg
fsubrl
push
push
jg
jmp
scas
shr
push
mov
sub
cmpsb
xchg
dec
pop
sti
mov
ja
and
mov
fiaddl
and
jmp
mov
mov
cld
cmpsb
dec
and
outsb
push
dec
push
jnp
lock
sub
add
test
out
mov
ror
dec
mov
mov
inc
or
or
outsl
out
jecxz
jl
adc
in
inc
adcl
aam
xor
pop
sbb
push
add
mov
mov
mov
out
mov
xchg
jge
mov
xlat
dec
or
jmp
mov
inc
dec
push
add
add
jmp
mov
testl
mov
cmp
aaa
dec
lods
sub
arpl
sbb
push
push
and
das
xchg
ret
add
push
repnz
cmp
sub
test
dec
dec
out
dec
clc
repnz
out
pop
jbe
dec
test
jmp
scas
insl
clc
mov
pop
pop
and
mov
sbb
xchg
fsubrs
insb
aas
inc
lock
ja
nop
and
mov
test
outsl
pop
cltd
lods
gs
or
outsl
mov
addl
cmpsb
sub
adc
addl
push
dec
xchg
adc
adc
hlt
pop
dec
mov
icebp
and
pop
pop
into
addr16
lret
jmp
arpl
sti
loopne,pn
lods
xor
push
add
int3
aam
xor
cmp
jbe
add
popa
xchg
lock
arpl
push
inc
in
dec
push
dec
pusha
idivb
sbb
mov
cmp
sub
shlb
pop
push
or
push
pusha
ds
push
push
gs
fsubp
sti
daa
in
sti
sbbl
pusha
repz
xchg
aaa
pop
test
adc
sub
rorb
xchg
dec
xor
or
and
push
into
loope
iret
sbb
out
push
or
stos
sbb
pop
pop
sub
dec
addb
repnz
and
pop
jmp
mov
incl
push
mov
rorb
add
sub
push
add
aaa
push
and
clc
outsl
push
jne
dec
aam
add
or
pop
sub
sbbb
rorl
out
adc
mov
xor
aas
test
lret
pop
xor
jmp
xchg
aad
mov
add
sub
xor
mov
xor
mov
test
clc
mov
cmp
scas
add
lods
pop
add
sub
test
inc
lret
mov
jno
int3
movsl
push
out
pop
dec
shll
fcoms
adc
out
outsb
mov
loope
inc
cmpsl
mov
xchg
push
insl
jmp
repz
sbb
sub
xchg
pop
pop
add
add
xlat
aad
loopne
mov
addr16
mov
dec
jmp
jno
xchg
xor
xchg
in
mov
loopne
and
dec
repnz
xlat
add
push
jp
sub
cmp
add
fsts
shlb
push
pop
push
and
and
fldl
inc
daa
xor
jbe,pt
mov
adcb
and
inc
fsts
push
imul
lahf
add
call
icebp
mov
xchg
add
ds
das
mov
insb
xchg
loope
or
jp
loopne
sbb
adc
cmp
add
add
jge
ret
xor
mov
cmc
cs
xchg
xchg
lret
and
nop
ljmp
jbe
push
sub
or
jmp
imul
push
stos
idivb
test
mov
clc
and
ja
pop
or
cmp
or
jle
daa
insb
mov
mov
pop
push
scas
pop
or
fsubp
lock
mov
xor
nop
add
test
notb
jae
mov
pop
scas
imul
lds
sub
popa
mov
mov
and
das
loope
pusha
addr16
inc
or
xor
and
repnz
adc
lock
sub
pop
sbb
outsl
icebp
pop
icebp
mov
cli
pop
pop
add
cmp
lret
sub
cld
sub
cmc
adc
push
xor
test
lods
lods
xlat
hlt
rcrl
mov
inc
xchg
cld
mov
mov
imul
insl
add
test
cmp
or
ret
jmp
cmp
fld
rclb
push
mov
xor
stos
adc
mov
add
dec
stos
dec
cmpb
les
aam
pop
push
push
sbb
sub
daa
and
pop
jns
in
mov
xor
pop
push
das
aam
push
cmp
push
push
mov
inc
rcrl
mov
stos
mov
mov
sub
int
bound
stc
pop
push
jne
pop
inc
push
scas
repz
jnp
or
xor
lds
cmp
dec
in
out
or
pop
cmp
mov
lock
add
jmp
inc
push
dec
aaa
dec
mov
iret
mov
lret
shr
xor
or
cli
arpl
rcr
pop
orb
jb
inc
lret
das
jg
jb
orl
mov
push
and
mov
and
pop
sbb
mov
jg
sar
js
xchg
andl
adc
out
shl
sbb
insl
push
mov
xchg
mov
inc
clc
inc
daa
sub
sbb
fbstp
movsl
push
call
add
or
mov
icebp
push
inc
add
or
or
xchg
mov
pop
shlb
add
neg
sub
dec
sub
ljmp
pop
addb
and
in
daa
and
xor
sub
and
outsl
add
rolb
xchg
popa
sarl
or
std
pop
inc
sub
stc
cmpsl
push
flds
pop
jp
or
push
cmp
sti
cmp
sub
in
nop
ljmp
mov
and
inc
dec
sahf
test
pop
arpl
jl
push
xchg
jne
in
int
jmp
cmp
adc
jge
push
sub
add
jbe
call
dec
rol
pop
jmp
pop
xor
in
pop
lret
cmp
mov
cmp
enter
jge
add
push
sub
inc
jl
lock
das
lret
js
loop
jae
jg
push
addb
push
or
pop
idivl
dec
lods
roll
push
cmpl
mov
add
pop
push
pop
sub
sbb
add
addb
xlat
jbe
hlt
push
mov
add
out
notb
and
push
lods
adc
jb
js
dec
cmc
mov
rcll
jmp
add
out
jmp
pop
pop
aam
push
lock
dec
sbb
lcall
not
adc
std
stos
leave
pop
and
push
out
imul
or
aad
push
push
mov
mov
pushf
add
aad
mov
xlat
push
mov
inc
or
jle
mov
or
ja
js
jge
inc
ret
mov
push
mov
adc
xchg
addl
ja
clc
ret
fisttpl
or
push
inc
in
icebp
add
lret
jmp
cmc
into
sub
add
jp
adc
inc
sbb
xor
push
subl
mov
lahf
hlt
or
call
leave
ljmp
push
and
push
clc
mov
adc
jp
hlt
loop
push
repnz
inc
andb
and
imul
pop
sti
jl
jmp
push
or
xchg
jmp
push
and
xor
cli
aam
bound
ja
cmp
xor
sbb
push
mov
or
test
hlt
in
daa
jg
nop
mov
aas
sub
out
mov
sbb
fstpl
mov
add
in
jo
xchg
lahf
sbb
jae
xor
cld
jg
ja
mov
lock
jle
test
add
cmp
loopne
dec
pop
inc
jmp
xchg
adc
insl
jmp
stos
js
mov
or
pop
jb
mov
fdivl
call
outsl
add
mov
in
les
sbb
adc
fidivl
mov
ljmp
out
pop
cmp
ret
fistps
pusha
xchg
jmp
rcrb
sbb
popf
rolb
push
lret
mov
xchg
es
push
mov
pop
mov
lods
xlat
dec
mov
rorl
in
insb
addl
jno
cmp
pop
pop
pop
sub
arpl
enter
adc
cltd
sub
div
jge
adc
sti
je
in
xor
and
mov
stos
dec
aaa
xchg
jl
hlt
jnp
pop
mov
inc
cs
sbb
and
cli
add
sub
fsubrp
out
fwait
jo
mov
gs
ror
jg
mov
pop
pop
dec
shl
mov
test
outsl
lea
enter
mov
js
adc
cmp
or
and
add
jmp
push
aam
add
les
ds
lahf
fcomps
adc
iret
adc
aas
ret
into
jl
or
pop
js
daa
jmp
mov
push
push
add
sbb
daa
xor
das
adc
test
jnp
mov
ds
pop
cmc
insb
inc
scas
pusha
daa
shl
aad
fcmovb
add
xchg
add
sti
leave
mov
inc
lahf
shl
add
fldl
movsl
aad
adc
inc
jl
xor
mov
pop
xor
mul
adc
vmovdqu
pop
and
mov
push
lahf
cli
outsb
add
lcall
xchg
mov
jl
das
shlb
sbb
lahf
fldcw
or
dec
sub
aad
mov
dec
inc
or
fwait
or
inc
mov
xor
xor
pusha
pop
add
cmpsb
cmpsb
cmp
pop
sti
pop
add
cmp
aas
and
xchg
ret
insb
jl
mov
gs
repnz
add
pop
std
add
das
jecxz
push
push
subb
jns
push
push
push
push
pop
add
jno
jmp
pop
adc
push
mov
push
mov
add
popa
gs
movsl
std
pop
add
aam
js
popf
jnp
mov
dec
ret
dec
add
or
es
push
push
call
mov
or
or
xchg
jmp
dec
push
cld
fisttps
ljmp
xor
lret
sub
and
les
and
inc
insl
inc
pusha
cmpsb
leave
xor
movsl
pop
sub
imul
rcrb
lds
sbbl
lahf
add
jno
dec
sbb
or
dec
imul
jmp
dec
stos
sahf
fisttps
jmp
sub
aas
test
ret
popf
sub
mov
sti
add
data16
mov
sub
aaa
mov
fadd
xchg
push
pop
pop
lcall
mov
ret
xchg
testb
dec
mov
jg
add
cmp
mov
add
inc
gs
xchg
pushf
mov
push
jns
sub
addr16
shrb
imul
aas
jmp
testl
outsb
jbe
test
pop
add
aas
les
pop
push
pop
neg
adc
daa
loop
xor
sbb
mov
inc
jnp
push
push
scas
dec
mov
or
or
sbb
rorb
dec
pusha
in
stc
or
xor
xchg
adc
dec
rorb
orl
repnz
scas
xor
sub
addl
jmp
dec
repnz
jo
push
mov
push
ljmp
dec
mov
dec
xor
add
xor
push
push
mov
xchg
mov
out
adcb
sub
sub
imul
cmp
cmp
imul
loope
add
adcl
add
jmp
outsb
push
dec
in
daa
fs
xor
outsb
fistpl
ljmp
mov
aad
addb
add
pop
pop
js
leave
mov
jmp
sbb
popf
pop
lcall
lret
cmp
popf
aad
inc
fdivl
sti
sub
add
and
push
push
xor
pop
idivb
test
lods
decl
ja
xchg
cld
inc
iret
roll
push
mov
or
xor
hlt
sbb
das
mov
inc
cmc
outsl
xchg
pop
add
jmp
mov
cs
dec
les
jp
dec
repnz
inc
inc
loop
adc
testl
into
sub
mov
cmp
sub
push
adc
loopne
pushf
ss
cli
lret
dec
sarb
fisubrl
and
mov
movsl
repnz
addr16
pop
roll
xor
adc
lods
sub
xor
mov
mov
cld
or
adc
or
and
push
call
je
movsl
jo
or
fbld
adc
jmp
jl
dec
xor
mov
xchg
jge
dec
hlt
mov
mov
fiaddl
test
ljmp
rep
lahf
add
xor
push
pop
pop
mov
ljmp
flds
fwait
sbb
shrl
add
sbb
cmp
in
sbb
imul
mov
call
out
repz
xor
outsb
mov
mov
cmp
lods
pusha
jg
adc
jbe
jp
xor
bound
adc
cmp
std
xor
pop
sub
jl
xchg
ret
jmp
sub
pushfw
add
shr
ja
je
out
adc
clc
xchg
jo
adc
jp
dec
notb
fsubrs
test
jecxz
or
adc
mov
push
je
adc
ljmp
data16
roll
int
sub
push
out
xor
add
push
popf
mov
cltd
sub
push
and
mov
out
jle
movl
nop
adc
mov
mov
dec
mov
sar
mov
add
loopne
push
ret
or
push
push
cwtl
push
adc
inc
dec
add
dec
in
lret
pop
push
sub
mov
rcrl
cmpsl
inc
enter
sub
imul
pop
scas
xor
cmp
jmp
pop
push
mov
and
insb
or
or
imul
and
testl
jo
push
mov
mov
pop
xor
xchg
movsl
cmp
sbb
sub
iret
lock
adc
or
sub
rcrl
inc
jmp
clc
xchg
sti
and
mov
sarb
out
popf
addb
enter
mov
add
cmp
and
adc
inc
in
fsubl
push
add
imul
mov
xchg
pusha
leave
pop
loop
jno
push
mov
rcrb
sub
add
xchg
lret
outsl
divl
pop
sbb
push
ror
inc
rcrl
lds
mov
lahf
rcrl
sti
aas
adc
inc
jbe
in
out
xchg
out
mov
jp
adc
out
ficompl
or
sub
pusha
test
iret
adc
jnp
in
jmp
dec
repz
jmp
mov
add
or
enter
sbb
pop
adc
add
out
sarb
mov
xor
sub
fadd
add
test
mov
sub
adc
jle
and
push
push
repnz
call
js
push
not
or
push
or
pop
cmp
into
jb
or
hlt
jmp
test
cmpsb
ljmp
std
push
mov
xor
pop
inc
sub
add
mov
adc
dec
loope
xchg
imul
mov
mov
xor
mov
inc
cmpsb
shll
lods
xchg
mov
cmp
sbb
mov
test
pop
aad
lea
out
sbb
std
push
xor
shlb
mov
ja
pop
cmp
fsubp
das
add
adc
mov
dec
adc
out
nop
mov
out
pusha
push
leave
cmp
inc
call
or
fisubrl
aaa
or
js
dec
xor
dec
sti
mov
ja
cs
movsl
mov
and
test
push
pop
push
push
or
push
pop
inc
jle
jl
ret
and
aam
lods
inc
lock
dec
push
loope
xor
adc
adc
aaa
and
or
add
cmpsl
inc
pop
or
lock
ret
mov
xor
sub
jnp
ja
pop
loopne
hlt
jne
cmp
out
out
and
adc
add
xchg
repz
xlat
pop
add
jp
jle
or
jmp
inc
sub
and
mov
ret
mov
jb
movsb
jge
int
dec
jbe
dec
cmpb
mov
add
and
mov
nop
push
push
mov
sti
sub
ret
leave
xchg
sbb
mov
mov
xor
aam
scas
aas
fisubl
push
jae
add
push
mov
dec
nop
movsl
adc
sbb
xchg
inc
fstpl
orb
daa
scas
push
xchg
sti
and
or
mov
add
inc
cmp
and
ja
insl
jl
loop
cmp
add
xchg
outsb
xor
hlt
xchg
push
mov
adc
test
mov
adc
adc
sub
scas
add
roll
pop
mull
mov
cld
ret
mov
or
jnp
shrl
and
lods
cmp
mov
enter
and
adc
in
ljmp
insl
out
lret
std
leave
ret
insb
push
mov
xchg
faddl
out
loopne
mov
or
je
jge
push
push
or
addr16
add
cmp
rclb
rcll
push
or
jle
andb
pop
and
cmp
and
xchg
les
pop
fistpll
push
repz
jno
jo
cld
sub
cmp
icebp
mov
std
sti
and
les
int3
add
mov
inc
pusha
fnstcw
adc
xor
cld
pop
out
push
stos
out
sub
loop
xchg
xor
jb
push
cld
jo
cmp
jo
sub
pop
out
out
sub
pop
dec
xlat
inc
in
mov
jbe
mov
add
jecxz
xchg
xchg
faddl
mov
push
aad
and
pop
pop
pop
shlb
dec
call
pop
aam
sti
xlat
and
int
add
jecxz
rolb
cmp
addl
push
inc
pop
push
adc
mov
cld
adc
leave
std
push
lock
push
movsb
test
add
in
pop
lahf
outsl
testl
test
fildll
pop
movsb
shr
pop
cmp
aaa
add
and
or
push
mov
push
sti
lods
adc
sub
cmp
cmp
aam
out
sub
and
testb
aas
sbb
es
and
aas
xchg
cmp
or
scas
jae
pop
mov
inc
or
call
and
xor
mov
mov
xor
mov
sub
xor
arpl
inc
jbe
or
jp
aaa
lret
jne
enter
aad
sub
mov
subb
sub
clc
xor
in
jl
mov
sub
and
lahf
xchg
mov
ss
and
jbe
rcrb
test
fs
xchg
add
jo
js
xchg
mov
mov
pop
add
test
fdivrs
xchg
inc
sub
iret
call
xor
mov
adc
notb
inc
fcomi
mov
pop
mov
xchg
mov
jecxz
pop
fadd
call
imul
push
cmp
pop
push
mov
jno
xchg
add
loop
push
xchg
xor
test
shr
push
ret
pop
insb
sub
sbb
jns
in
pop
sub
or
pusha
dec
add
clc
not
sbb
pop
jmp
sub
in
cmp
mov
cs
and
mov
and
mov
and
cs
add
ret
aad
or
aam
and
rorl
insl
aam
jg
add
add
pushf
rcll
xchg
dec
cld
pusha
stc
jnp
xchg
aaa
xor
jl
in
ds
fmul
jo
dec
mov
jl
or
inc
mov
cmp
mov
loope
sbb
add
xor
push
into
add
lret
push
jmp
out
xchg
stc
lods
test
cli
clc
test
sbbb
jmp
subl
orb
add
imul
sti
jnp
mov
out
cld
push
movsl
mov
es
push
dec
or
mov
add
cmpsb
movsb
test
js
outsb
mov
fbld
add
inc
ret
daa
ret
shlb
loope
adc
sub
sbb
sub
in
aas
pop
mov
jmp
pop
pushf
mov
loop
jne
inc
push
ficomps
pop
mov
dec
test
mov
dec
inc
filds
mov
or
and
pop
popf
not
js
dec
dec
and
or
sub
jns
ds
mov
add
imul
lods
cwtl
outsb
jmp
repz
and
or
xlat
mov
sub
fstps
mov
pop
xchg
mov
push
outsb
add
inc
lods
cmc
lret
jno
push
outsb
imul
shrb
cmp
addb
mov
stos
outsb
push
gs
ljmp
push
push
mov
fdivl
push
mov
add
pop
stos
cmovg
add
insb
jmp
lahf
adc
test
sub
pop
test
adc
icebp
push
je
jmp
out
addb
iret
dec
push
movsb
mov
cs
jno
lret
adc
ret
mov
in
lahf
dec
stos
pop
push
mov
cmc
push
imul
mov
ret
ss
clc
popa
xchg
or
inc
jecxz
or
xor
aas
rcrl
es
sbb
xchg
mov
sub
movsl
dec
repz
test
fucomip
or
mov
movsl
or
stos
xlat
int3
pusha
or
pop
add
dec
nop
jg
dec
sbb
addr16
iret
dec
mulb
add
sub
push
mov
icebp
int3
xor
push
jo
xchg
fbstp
jne
sub
pop
xchg
fsubrl
xorb
inc
hlt
xchg
or
pop
ret
push
icebp
cmpsl
mov
stos
test
adc
daa
das
lods
fnstsw
add
xor
adc
adc
pop
scas
or
repz
adc
pop
stos
or
or
arpl
sbb
pop
inc
call
sub
or
cmp
xor
in
mov
vhaddps
or
test
loope
add
jne
aaa
out
cwtl
dec
jle
std
cmp
dec
pop
cmpsl
loop
push
dec
mov
add
push
or
call
xor
pop
cs
test
and
in
shrl
dec
jo
add
daa
lahf
cmp
cli
dec
subb
roll
mov
or
test
inc
or
sahf
mov
insl
push
ret
xor
add
getsec
xor
mov
lret
cltd
pop
les
or
push
frstor
lret
xlat
pop
sub
loop
andb
add
in
jle
js
lahf
mov
sti
xorb
test
movsb
cmpb
inc
ljmp
add
sub
xor
rorl
dec
push
daa
push
xchg
inc
mov
clc
fs
mov
dec
inc
pop
add
mov
add
int3
jle
inc
shl
inc
imull
sub
mov
das
shrl
stc
imul
loope
xlat
data16
divb
or
movzwl
frstor
ret
add
fistl
test
arpl
test
add
pusha
add
sub
popa
sbb
repz
cmp
or
push
shl
les
mov
xchg
dec
dec
icebp
andl
lret
cmp
outsl
adc
xchg
in
mov
lds
lods
outsl
inc
cmpsb
or
push
sbb
outsb
sub
jmp
pop
pop
adc
pop
mov
sub
adc
mov
xchg
pop
mov
push
mov
xor
sub
fld
outsl
movsb
push
lock
adc
dec
dec
push
xor
sbb
pop
stos
arpl
pop
jo
dec
push
push
mov
hlt
sbb
mov
subb
in
xchg
pop
aaa
pop
and
and
adc
pop
push
adc
cs
jmp
icebp
test
out
cmpsl
rcrb
push
adc
inc
pop
daa
sub
iret
push
pop
stos
add
xchg
mov
imulb
dec
add
dec
jl
mov
xchg
jbe
ret
sub
push
add
sbb
adc
rorl
mov
cs
rol
pop
mov
lret
xchg
xor
dec
or
mov
shll
add
dec
sbb
test
lcall
inc
or
mov
push
into
movsb
adc
das
lock
sbb
jg
sub
mov
loop
and
inc
sbb
mov
stos
je
xor
sub
clc
lret
cmp
iret
lods
fwait
lahf
into
lret
or
sub
or
sbb
dec
call
clc
and
mov
pop
jmp
mov
add
inc
js
pop
mov
rcrb
rcll
xor
or
push
sub
mov
pop
push
sbb
ret
or
sub
xchg
jmp
mov
xor
inc
and
push
sbb
add
lret
jae
jge
mov
sub
mov
jmp
mov
or
clc
inc
mov
pop
jmp
bound
jecxz
ss
sub
ljmp
iret
pop
pusha
push
lcall
jbe
xor
xorb
fistl
lahf
pop
or
jb
and
push
push
in
inc
lods
mov
insl
sbb
mov
xchg
cmp
and
jmp
rolb
loopne
jl
sub
in
xlat
dec
leave
ss
inc
stos
push
mov
dec
nop
fwait
nop
sub
add
jne
and
mov
pop
xor
push
jmp
out
sub
sub
mov
or
call
mov
pop
push
stos
dec
popa
cmp
out
mov
push
stc
pusha
das
push
inc
cmp
dec
jo
jmp
insl
and
fs
scas
push
stos
mov
xchg
jle
mov
dec
pop
test
cmpsb
push
dec
adc
fldenv
or
lods
jmp
lds
xor
in
jp
sub
add
pop
mov
push
push
jmp
addr16
xlat
inc
fildl
push
cwtl
andb
std
std
cmp
std
inc
xchg
stos
mov
scas
mov
mov
pop
push
lock
push
mov
or
and
pop
mov
mov
dec
inc
subl
insb
scas
pop
adc
jl
int
js
inc
and
and
inc
or
adc
mov
push
mov
push
das
push
pop
sub
sbb
add
mov
jle
lock
jmp
faddl
pop
cld
mov
lds
add
push
scas
jle
jo
dec
or
push
pop
or
mov
push
lcall
add
xor
fucomip
lods
sahf
in
pop
lahf
xor
das
or
adc
dec
add
repz
jne
fsts
pop
push
pop
mov
in
cwtl
aaa
test
inc
push
mov
adc
mov
fisttps
shl
dec
rorl
insb
insb
movsb
pusha
daa
adc
mov
dec
mov
push
pop
sbb
xchg
cmp
cmc
out
js
shll
add
rorl
jp
push
jmp
jae
dec
outsb
adcb
dec
push
shll
imul
sbb
loope
jnp
call
addr16
jo
data16
insl
xchg
in
movsl
push
repz
mov
mov
jge
mov
out
mov
and
lods
cmp
cmc
add
in
loopne
cmp
or
add
adc
call
ljmp
std
outsb
jo
push
mov
add
fsubr
imul
pop
arpl
cltd
mov
aam
push
rol
xor
loop
xchg
add
jg
sbb
jmp
sub
cmp
mov
mov
and
push
orl
mov
fs
jmp
xchg
sub
mov
fiaddl
and
pop
ret
addb
pop
mov
mov
add
or
add
out
cmp
push
stos
inc
jo
mov
mov
sbb
add
clc
popa
pop
loop
test
inc
idivl
jmp
inc
sbbl
out
cmp
in
test
or
push
inc
rolb
jne
sub
and
lds
out
clc
imul
pushl
icebp
pop
jl
lahf
test
cmp
imul
sti
add
popa
addb
xchg
cs
xchg
push
cwtl
in
lahf
leave
loopne
das
out
cmp
push
ret
push
data16
nop
bnd
insb
bound
loope
jnp
neg
xchg
pop
out
xor
sbb
cmp
push
outsb
stos
add
lock
pop
inc
mov
or
sub
sub
adc
jp
add
aaa
popf
add
mov
movsl
cmpsl
push
sub
sbb
and
aad
sti
out
daa
cmc
or
js
fs
shrb
mov
dec
ret
or
ud0
dec
in
pop
inc
mov
xor
leave
stc
xchg
add
push
inc
adc
pop
sub
sub
push
loope
jecxz
loope
push
push
imulb
rcrb
and
loope
jno
cmpsb
xchg
sbb
inc
test
add
add
imul
rclb
inc
sarb
and
inc
sbb
aad
cmp
testl
stos
pop
xchg
cmp
or
jg
scas
push
add
push
std
push
jmp
cmp
and
sub
jno
cld
pop
fcomps
mov
outsb
pop
mov
pop
sub
jg
jmp
pushw
sahf
push
xchg
ret
mov
in
xor
jl
pop
idivl
sti
xchg
sbb
lcall
and
adc
clc
inc
push
mov
dec
sub
call
mov
call
fdivrp
pop
pop
aaa
pop
sub
es
sahf
ret
icebp
pushf
movb
sub
jbe
inc
subl
ret
or
xor
test
enter
in
pop
inc
sbb
leave
loop
clc
jbe
push
icebp
sbb
enter
or
rorb
jle
neg
adcb
push
add
sub
push
push
daa
movsb
or
pop
dec
enter
xchg
push
xor
aas
or
clc
lahf
dec
mov
mov
dec
and
push
push
jmp
mov
pop
insb
ret
inc
sub
mov
or
call
or
adc
dec
mov
shl
or
cwtl
popa
loopne
jno
mov
xor
sbb
pusha
gs
cmp
dec
push
add
pop
insl
mov
mov
insl
cld
mov
mov
and
add
stc
lret
or
dec
sbb
cmp
sub
das
lods
adc
stos
xor
and
pop
and
mov
push
inc
push
jns
push
dec
negl
outsl
loop
and
cmp
neg
add
rolb
bound
inc
add
inc
cmp
ds
dec
mov
cli
mov
mov
adc
aad
orb
sbb
flds
pop
pop
sbb
mov
sub
jl
and
andb
pop
test
jbe
push
dec
dec
cmp
add
or
in
add
pop
out
cli
ss
sub
adc
pushl
or
push
inc
mov
mov
ret
cmpsb
mov
or
ret
imul
cs
iret
or
inc
jae
or
mov
pop
enter
icebp
or
jno
push
pop
jmp
jp
dec
or
das
roll
xchg
subb
loop
lds
stos
roll
aas
inc
inc
push
xchg
test
cmp
imul
pop
stos
xor
fsub
mov
or
cmc
ds
roll
mov
je
bound
aam
lds
test
mov
push
jmp
sub
sub
insb
push
lods
dec
push
xor
mov
add
add
mov
incl
and
rorb
orb
pop
ja
pop
pop
or
pop
pop
push
fldcw
jnp
movsl
xlat
in
adc
sub
idivl
shll
shlb
pusha
xchg
xchg
xchg
sbbb
push
push
pop
inc
cmp
or
sbb
lahf
inc
mov
fcmovnu
add
outsl
mull
push
mov
xor
les
sub
mov
dec
add
push
jmp
shrb
dec
dec
das
xor
orl
and
rcll
or
add
out
xor
mov
cmp
inc
mov
xor
popa
dec
sbb
pop
into
pop
cmpsb
pop
xor
mov
or
in
cwtl
repz
pop
stos
cmp
dec
adc
lock
in
std
dec
and
fcompp
mov
adc
js
mov
mov
pop
mov
inc
inc
mov
fists
cli
fadds
imul
js
mov
push
inc
or
pop
fwait
mov
xchg
mov
enter
pop
jns
imul
outsb
jg
daa
rcrb
mov
inc
test
aam
fstps
addl
out
dec
fdivrp
jb
pop
into
in
lock
dec
sub
loope
add
stos
nop
dec
imul
push
or
jbe
and
dec
das
testb
inc
stos
cmpsl
cmp
in
jnp
jbe
mov
inc
or
and
enter
fidivl
stos
jge
xchg
jno
ds
mov
sbbb
shrb
enter
push
leave
and
mov
lods
in
and
pop
pop
shr
neg
and
push
mov
push
sbb
jp
orb
lret
iret
roll
jo
ret
repz
cltd
pop
inc
mov
mov
jle
test
cld
push
out
and
out
enter
push
jmp
out
adc
stc
or
or
popa
pop
push
out
mov
repz
repnz
adc
cmp
int
pop
subb
lahf
add
and
data16
nop
std
push
pop
pop
mov
dec
adc
lcall
fnstenv
pop
or
jl
inc
jmp
stc
inc
cmp
push
mov
insl
rcrb
add
xor
in
pop
mov
inc
xor
jge
jmp
push
test
dec
add
mov
and
mov
mov
mov
pushf
loopne
cmp
add
lahf
cwtl
sbb
xor
js
jmp
pop
xlat
out
or
roll
sbb
add
scas
sbb
loope
jl
adc
testb
mov
push
cwtl
adc
mov
add
shr
jnp
inc
clc
or
push
jbe
popa
sti
test
inc
lods
xchg
loope
add
jb,pn
into
push
adc
add
and
subb
or
jmp
push
dec
pop
sahf
sub
cmp
jmp
add
daa
stc
fcmove
push
xchg
xor
or
mov
loope
push
cmp
mov
out
dec
mov
or
push
add
insb
add
mov
xor
add
push
andb
lock
cld
scas
loop
adc
inc
call
ds
rcrl
xlat
xchg
shlb
push
data16
mov
in
push
inc
inc
orb
xor
dec
jae
mov
hlt
or
ffree
cmc
cld
lahf
dec
sbb
mov
fsubrs
add
and
pop
sbb
fstps
or
xor
mov
jl
jno
jmp
ret
inc
cmc
and
adc
repnz
bswap
adc
imul
adc
xor
cmp
aad
jne
js
sahf
lret
adc
lds
xor
je
sub
mov
jne
push
dec
xchg
dec
dec
pop
push
jmp
push
mov
mov
negb
in
inc
addb
in
jecxz
sub
mov
fadds
cmp
aas
les
lret
mov
sub
or
daa
icebp
push
or
adc
adc
sub
push
push
inc
out
pusha
outsb
scas
push
dec
dec
addr16
outsb
adc
cli
enter
mov
xchg
pop
xor
push
gs
cld
jmp
stos
fistpl
push
test
imul
cs
push
not
shr
add
xor
adc
dec
and
mov
jmp
cmpl
cs
cmp
cmc
adc
jle
mov
push
adc
sbb
jae
dec
inc
mov
mov
dec
mov
test
notb
test
xor
in
add
mov
sbb
push
jl
xor
cmp
mov
push
aaa
xchg
sub
or
push
dec
sbb
inc
pop
shlb
jmp
sbb
mov
mov
and
ja
adc
std
inc
pop
fsin
rol
mov
dec
mov
cli
push
stos
add
addl
pusha
jmp
subb
inc
test
jae
or
movsl
roll
sbb
ret
or
stos
std
in
push
adc
test
cli
repnz
adc
jmp
jae
jmp
fildl
fidivs
lcall
iret
sarb
add
adc
xlat
and
cmp
andb
or
das
hlt
ja
or
shl
add
lods
xor
dec
push
xor
and
mov
ja
sub
inc
mov
jge
inc
mov
pop
cwtl
inc
xor
mov
sbb
pop
rolb
inc
mov
xor
pop
sub
dec
sbb
cmp
or
rolb
push
push
pop
pop
jmp
push
xor
jmp
push
mov
dec
cmp
and
popf
and
adc
cli
std
add
nop
dec
pop
adc
sub
add
sub
lods
pop
push
inc
push
cmp
xor
shr
add
sbb
jg
ljmp
lds
sbb
pop
test
stos
scas
ljmp
push
pop
jmp
inc
pop
nop
int
jno
adc
ljmp
enter
mov
fs
inc
test
dec
adc
cwtl
in
testl
mov
aas
sbb
outsl
mov
std
test
jmp
stos
adc
js
test
rorb
adc
xchg
or
decl
xchg
test
lcall
xor
sbb
insb
push
and
jg
add
inc
push
rolb
jmp
add
daa
mov
and
flds
jg
hlt
xchg
push
pop
add
sub
stc
jne
push
and
daa
std
rcrl
lods
adc
mov
sbb
push
mov
les
movsb
or
shr
xor
dec
sub
test
fisttps
fucomi
leave
mov
or
loop
das
rorl
shll
add
sub
inc
dec
das
and
out
mov
jnp
mov
out
pop
or
jg
fimuls
or
pop
cwtl
dec
jmp
out
fsubr
adc
enter
push
pop
jmp
pop
shr
sbbb
cmp
mov
mov
pop
into
inc
xor
push
xchg
not
or
push
push
mov
mov
add
push
pop
or
xor
xchg
ror
cmp
test
lahf
cmp
xor
out
xor
xchg
inc
ret
fsubl
pop
shrl
add
rorb
jmp
lods
das
fsubrl
out
mov
cli
pusha
addr16
lret
sub
push
push
xchg
pop
add
cmp
adc
in
shld
cmp
push
jb
popa
mov
bound
push
sarl
add
cld
in
jge
cmpsb
outsl
pop
jp
psubb
jp
das
cmpsl
jecxz
rcl
out
adc
mov
xor
push
mov
lock
daa
cmp
mov
ja
cmpl
adc
push
push
sarl
cmp
add
call
mov
pop
xchg
and
sbb
mov
cld
movsl
loop
pop
xchg
loop
mov
shll
pusha
push
add
inc
or
mov
clc
ret
xchg
loopne
nop
sbb
sahf
js
orl
pop
xchg
aam
shrl
cmp
ror
call
or
mull
push
xchg
pop
inc
and
daa
popf
adc
sbb
daa
call
mov
and
cmp
adcb
fldcw
mov
dec
scas
xor
mov
sub
cmp
mov
ja
inc
mov
dec
push
sub
sbb
mov
pop
jne
pop
mov
lock
sub
pop
popf
xchg
cwtl
das
jno
iret
repz
push
inc
or
xor
scas
cmp
and
stc
jge
mov
pop
jmp
pop
add
maxps
push
popa
loopne
ret
lretw
or
lods
xor
mov
fmuls
dec
ljmp
das
push
jmp
or
fidivl
fldl2t
push
gs
push
push
andb
les
pop
add
push
sub
ret
xor
xor
out
jmp
push
xor
pop
repnz
addr16
or
and
test
scas
mov
inc
pop
imul
rcl
pop
ret
push
dec
push
xor
jnp
imul
jmp
ss
xor
push
ret
push
jne
call
xchg
std
dec
cmp
mov
rcrb
lret
jge
inc
in
mov
loop
lret
lods
dec
sbb
adc
sub
sarl
xchg
jle
or
loope
sub
lea
adc
into
incb
cmpsl
cmc
mov
sub
das
jmp
fimull
xor
cmp
cmp
dec
pop
cmpsb
mov
int3
imul
sbb
outsb
add
insb
or
add
mov
cmp
stos
adc
or
fcmovu
mov
mov
jmp
add
cmp
mov
daa
dec
jne
dec
push
into
adc
jl
pop
insb
add
jmp
fnstcw
lods
adc
lahf
cmp
mov
scas
testb
and
lods
rorb
and
mov
add
inc
pop
lods
outsl
mov
adc
arpl
xchg
es
cwtl
push
add
add
jl
ds
pop
repnz
pop
shlb
ss
daa
dec
push
inc
sbbl
push
notl
in
and
ljmp
or
int3
addl
sub
jmp
icebp
sub
and
xchg
push
dec
ja
cmp
addl
loope
rcrl
push
jnp
cmpsb
adc
jb
icebp
and
inc
xchg
pop
sub
mov
sub
dec
inc
popa
pop
adc
adc
push
and
int
fwait
xor
cmp
icebp
add
or
or
out
jle
and
add
cmp
mov
add
sub
rorb
icebp
scas
inc
add
fisttps
xlat
jo
mov
or
jmp
fabs
aad
xchg
mov
push
add
add
fsts
shrb
cmp
mov
cmpsl
sub
mov
inc
in
movsl
and
xor
adc
sub
and
add
hlt
fwait
nop
pop
push
scas
fcoml
jmp
mov
aas
call
mov
stos
enter
push
mov
xor
subl
sub
jmp
out
mov
test
fcoml
push
inc
imul
push
xchg
mov
mov
repz
or
fdivp
sub
dec
in
call
in
scas
push
jnp
pop
arpl
push
and
inc
pop
imul
add
mov
sub
mov
jg
or
pop
push
jp
imul
jmp
or
pop
test
mov
adc
pusha
in
sbb
lds
adc
mov
out
int3
jne
push
pop
je
sub
xchg
clc
add
leave
std
das
mov
rclb
jmp
push
inc
jg
in
add
push
inc
inc
or
pop
pop
pop
sub
push
xor
fs
lret
cmpl
cmp
push
cld
push
inc
movsb
stos
int3
lahf
pop
aas
not
cmp
outsb
dec
lods
mov
daa
sub
inc
in
loopne
mov
xor
sbb
faddl
jb
and
ret
push
mov
xchg
sub
pop
jns
rolb
jmp
lods
mov
daa
jmp
rorl
cmp
push
and
shrl
es
adc
pop
jmp
mov
stos
popf
mov
test
je
out
in
repnz
add
outsl
retw
push
mov
push
pop
xor
fiadds
add
mov
mov
mov
aad
sub
test
notb
push
inc
push
push
or
add
sbb
mov
in
mov
rcll
daa
pop
mov
mov
add
dec
nop
shll
xor
mov
sub
lds
out
jg
jnp
push
mov
push
jb
and
adc
imul
adc
sub
fsubrp
rcl
jbe
sbb
ljmp
adc
pusha
mov
daa
xor
push
sbb
adc
popa
dec
cmpsl
xchg
push
shll
scas
inc
dec
fs
mov
div
sub
popw
sbb
mov
push
mov
bound
push
loopne
jmp
loope
xchg
insl
dec
dec
jg
sahf
rolb
mov
test
xchg
jo
mov
mov
inc
push
mov
shrb
sbb
or
push
ljmp
cwtl
dec
outsb
adc
cli
xor
push
xchg
jmp
xchg
pop
cwtl
or
scas
outsb
sub
mov
pop
jne
dec
push
mov
sbb
addb
jmp
dec
add
add
mov
in
xor
push
inc
jg
sub
pop
cmpl
mov
wbinvd
lds
adc
xchg
and
pop
or
ja
inc
jecxz
ret
inc
push
shlb
mov
flds
in
sti
add
cmp
cmpsb
pop
subb
dec
testb
sbb
sub
leave
mov
lret
cmpb
pop
jo
js
xor
jbe
pop
and
arpl
insl
stos
push
aas
daa
jnp
aam
jmp
pop
stc
lods
int3
jbe
hlt
iret
loop
sar
sub
mov
pop
lods
mov
mov
xchg
hlt
aad
sub
adc
xlat
sbb
push
test
mov
andb
xlat
sahf
in
aam
jmp
mov
adc
inc
loop
in
mov
mov
xchg
or
jmp
sub
insb
inc
dec
ljmp
fists
ret
int3
pop
push
mov
repnz
jo
mov
cmpb
dec
jg
out
jmp
andb
cmp
sahf
pop
sub
outsl
xchg
cmpsb
push
or
sbb
pop
jl
inc
notb
sbb
lds
jg
add
in
xchg
stc
stc
sbb
sbb
lods
mov
clc
mov
inc
call
fisubrl
movl
das
xchg
inc
adc
popf
addb
enter
mov
dec
add
cltd
cmp
in
popa
jp
idiv
sbb
and
in
jne
add
in
or
out
cmp
inc
shlb
loope
ds
lods
sub
xchg
sub
sbb
cmp
test
mov
and
shr
push
pop
adc
sub
pop
pop
mov
repz
cmp
and
or
es
sub
fadds
and
sbb
push
out
sub
je
add
inc
call
jmp
sub
rcrb
inc
les
stc
enter
out
inc
cmc
mov
outsb
repnz
inc
push
jno
cmp
out
cmc
stos
lock
mov
int3
int3
insb
in
in
push
xchg
jmp
jmp
xchg
xchg
pop
mov
js
add
dec
pop
jp
enter
testl
ljmp
test
out
adc
pop
jg
add
and
cld
adc
sub
hlt
inc
or
loope
add
fildl
mov
and
int3
fiaddl
sbb
scas
lds
xchg
jnp
mov
inc
js
or
add
push
push
test
xor
idivb
test
or
jmp
dec
add
js
inc
ror
out
adc
jmp
movsb
dec
mov
sbbb
sbb
sub
dec
inc
sbb
repnz
jb
sub
jg
xchg
adc
stos
testl
imul
or
je
shl
push
ret
add
mov
jmp
mov
jae
sub
out
pop
mov
das
jne
fwait
add
inc
add
add
and
cmp
dec
pop
dec
in
data16
jmp
popa
cs
in
sbb
das
hlt
pop
push
add
and
inc
xchg
imul
add
add
and
shlb
ds
cmc
jmp
mov
push
jmp
dec
repz
mov
sub
jle
nop
xchg
fsubp
lods
aam
in
and
repnz
cmp
or
repz
or
push
mov
clc
nop
sbb
sbb
stos
popf
xchg
sbb
addr16
mov
addl
outsl
outsl
popa
int
iret
or
jae
add
dec
and
add
xor
inc
jmp
mov
mov
sbb
not
adc
or
jge
xchg
mov
jg
movsl
mov
mov
sub
das
inc
pop
pavgw
sub
jbe
push
js
or
bnd
xchg
stos
negl
sbb
jae
sbb
mov
push
jns
sub
xchg
sbbb
loop
push
pop
push
sub
adc
out
dec
ret
lahf
subb
jl
and
jnp
add
add
lcall
jns
lret
jmp
pop
push
bound
pop
jge
push
xor
jne
inc
dec
inc
cs
idivl
add
or
pusha
add
jp
pop
scas
push
dec
loope
cs
cmp
repz
aam
push
xor
xchg
std
inc
or
xchg
shlb
add
jp
aad
add
adc
lods
add
movsl
icebp
cltd
mov
jg
lret
ret
fdivr
outsl
xchg
mov
loop
sub
add
aas
mov
pop
jmp
add
xor
popf
mov
cmpsb
or
or
int
scas
sbb
jp
dec
inc
leave
xor
fcompl
daa
push
mov
lock
inc
pop
inc
push
mov
adcb
inc
loop
mov
pop
lods
push
fnstsw
xchg
lret
outsl
sub
pop
dec
xor
push
push
mov
sbb
push
jmp
sub
xchg
out
push
out
mov
aam
pop
dec
push
ss
xor
mov
bnd
pop
adc
rorl
lret
repz
es
int
inc
jg
lock
push
loope
sbb
mov
inc
subb
nop
daa
leave
push
mov
lock
mov
fwait
add
dec
xchg
add
sub
sarb
inc
sahf
fdiv
push
push
sbb
jmp
lods
or
lds
cmpsb
clc
or
pop
lcall
loopne
push
push
xlat
fiadds
mov
call
adc
add
inc
inc
pop
cmp
add
fadd
inc
hlt
pop
adc
sub
cmp
inc
pop
mov
mov
sub
and
inc
js
dec
lods
loopne
neg
push
push
out
and
sbb
dec
sbbl
push
sub
sbb
mov
cs
outsb
repz
jmp
into
add
or
pop
xor
add
adc
adc
sarl
ja
jl
push
add
lods
movsl
loope
push
jnp
jne
movsb
dec
sub
mov
popf
adc
xchg
lds
mov
and
push
sub
imul
clc
ljmp
jb
cmp
mov
ret
or
ret
mov
xchg
jae
das
mov
or
and
gs
icebp
scas
dec
out
test
add
imul
mov
je
in
rcrb
jmp
push
jle
push
jmp
js
into
enter
push
dec
jmp
or
pop
arpl
xor
hlt
add
sub
push
pop
pop
jge
nop
xchg
add
and
mov
cmpsl
jo
mov
inc
lcall
fdivl
jle
dec
mov
leave
sti
je
stc
stos
test
adc
adc
iret
lds
push
jbe
pop
sbbl
leave
xor
addb
loope
jg
nop
jge
popf
adc
push
data16
mov
xorps
add
and
scas
frstor
adc
inc
jmp
xchg
ss
mov
subb
or
xor
sub
add
add
daa
mov
imul
xchg
adc
out
mov
sub
popf
das
mov
ret
das
mov
es
mov
ja
ja
rorl
adc
sbb
pop
push
test
jl
push
jne
inc
je
cld
sub
mov
pop
xchg
push
lock
push
ror
popa
sub
cmc
iret
ljmp
daa
lock
in
shl
lock
out
or
addr16
lea
push
shr
add
adc
mov
mov
xchg
outsb
push
imul
push
mov
ret
jb
add
or
xorl
sub
ret
add
stos
sbb
cmp
jmp
or
jle
loopne
negl
das
mov
xor
adc
push
push
push
jo
daa
pop
dec
sub
add
addr16
sti
fxch
cmpsl
mov
push
jne
jae
pop
xchg
add
iret
pop
add
and
add
cmp
paddw
or
mov
xorl
mov
sub
push
mov
pop
popf
mov
cmp
cmpsb
xchg
stos
xlat
push
adc
stos
in
inc
pop
loopne
add
push
push
push
pop
loop
rcr
ja
xchg
add
push
and
and
lahf
push
mov
iret
or
add
fiadds
inc
shll
mov
jge
jbe
mov
arpl
push
cs
sahf
dec
dec
lods
cmp
and
pop
cmp
jnp
cmpsl
ljmp
pusha
mov
loopne
push
pop
dec
test
mov
xchg
or
mov
or
cmp
fnstenv
add
push
mov
hlt
xchg
jne
inc
xor
jle
add
iret
mov
fwait
dec
movsl
sbb
mov
out
push
push
xchg
sub
adc
cmp
inc
add
fdivrl
cmpb
notl
mov
dec
clc
or
dec
stos
arpl
jle
ja
inc
dec
ss
adc
inc
pop
adc
jg
int
adc
push
dec
jle
cmpb
mull
popa
or
jmp
scas
push
icebp
test
cli
jge
repz
push
cld
push
mov
jecxz
and
mov
data16
sub
add
sub
jmp
and
and
movb
inc
push
push
jmp
push
pusha
mov
pop
inc
push
dec
mov
cs
pusha
add
scas
stos
jge
lock
jo
push
and
ficompl
pushf
mov
cmp
mov
inc
clc
lcall
pop
out
push
imul
mov
dec
sbb
or
jbe
sbb
adc
or
or
push
sub
mov
or
dec
and
sub
das
sbb
pop
and
aad
mov
jmp
std
mov
faddl
add
adc
mov
stos
pop
clc
sbb
or
mov
mov
xor
adc
jecxz
add
mov
push
mov
xchg
shll
xchg
mov
or
or
mov
rcl
lods
pusha
das
inc
adc
push
dec
andl
cli
imul
loopne
test
jmp
outsl
ret
push
mov
ret
jmp
inc
orb
cmc
pop
neg
std
cmpsb
lret
or
cmpsl
insb
pop
cmp
lahf
in
iret
ljmp
push
hlt
cmpsl
stc
lret
or
js
dec
push
pop
jmp
pop
scas
sub
cltd
std
jmp
push
js
ret
mov
xchg
out
push
xor
arpl
lea
push
lahf
pop
pop
ja
push
jb
out
sub
push
add
sbb
xor
cs
lret
dec
fs
add
jnp
fcoml
sarl
mov
push
pop
jmp
push
sub
xorb
add
repz
jbe
fs
data16
in
cmp
dec
mov
mov
jmp
inc
xchg
insb
adc
add
sbb
mov
ljmp
inc
in
sar
and
mov
jnp
sarl
leave
push
pusha
out
xlat
pop
adc
inc
jmp
outsb
push
push
adc
in
pshufw
test
insb
sub
add
xlat
cmp
xchg
sbb
push
cs
add
push
in
arpl
lock
jmp
loope
test
fstpl
cmc
mov
stos
lret
mul
xor
jg
daa
inc
add
adc
shll
dec
adc
add
pop
dec
not
jmp
fs
iret
call
dec
mov
ficompl
adc
fildll
inc
sahf
mov
cwtl
add
ret
add
push
lock
adc
out
or
mov
loop
mov
add
mov
loop
pop
mov
std
ljmp
pop
aad
sbb
sub
xor
imul
push
or
push
add
sub
sub
add
jp
icebp
dec
pop
add
js
adc
pop
xor
and
push
pop
mov
jnp
in
mov
test
mov
push
mov
cmc
inc
lods
sbb
pop
inc
std
push
cs
inc
nop
pop
sub
mov
gs
mov
mov
mov
pop
pop
and
sub
rcr
sub
imul
into
ret
or
sbb
jne
pop
or
inc
sub
jmp
mov
lret
pop
movb
pop
vmovhps
js
sub
and
sbb
jg
gs
inc
shll
in
mov
adc
sbb
add
hlt
jne
das
int3
out
fisttps
lods
adc
out
lret
adc
rcr
ljmp
or
mov
enter
inc
push
xchg
mov
daa
jp
aad
sahf
sub
xor
clc
gs
lock
jb
mov
out
shr
mov
or
icebp
pop
je
pop
fdiv
imul
rcr
imul
repnz
xor
push
push
lds
push
mov
nop
pushf
addb
das
and
shl
mov
int
fmuls
daa
or
or
add
push
pop
mov
sahf
movsb
xorb
ficoms
test
inc
in
mov
add
dec
decb
sahf
inc
sbbl
movsb
xchg
ficoms
cmpsb
add
fwait
jno
insb
inc
int
push
jp
shl
or
pop
mov
and
mov
push
xchg
sbb
stos
jno
neg
popa
push
cmp
xchg
xlat
fs
ret
or
in
cmp
loop
dec
adcl
mov
test
mov
dec
not
imulb
nop
jmp
mov
nop
fcoms
test
mov
and
mov
add
out
xchg
xor
push
xor
sahf
pop
dec
mov
push
add
in
adc
push
call
das
jne
and
or
and
push
adc
aas
xchg
clc
or
leave
fistl
cmp
or
pop
mov
ds
jg
inc
lock
xchg
or
notl
pop
sar
and
push
ljmp
xchg
mov
xchg
cmpsl
jecxz
sub
jne
dec
pushf
add
std
cltd
arpl
imul
outsb
mov
fsubs
jns
pop
add
lcall
fisttpll
int
je
roll
fsubr
cmpsb
enter
sub
xor
out
sub
add
mov
scas
and
stos
mov
push
stos
in
push
movl
scas
xchg
push
scas
pop
das
mov
lods
leave
cmp
pop
mov
cmp
test
pop
jbe
lods
pop
rcrb
push
and
adc
pop
add
loopne
in
or
push
fprem
adcl
xchg
add
orb
add
inc
or
std
lods
xor
stos
div
fisubl
ds
mov
add
jmp
mov
or
mov
insl
and
lods
push
mov
nop
add
int3
mov
in
mov
arpl
mov
push
sbb
pop
jns
sbb
out
dec
cmpsl
adc
mov
dec
int3
in
sbb
mov
in
mov
cli
and
inc
es
pop
xor
enter
add
lock
stos
push
pop
bound
cmpsl
sbbb
in
gs
lahf
mov
je
xor
pop
fldl
mov
xor
push
pop
add
add
insl
clc
mov
out
mov
add
int3
cmpsb
or
mov
cmc
xor
push
sub
xchg
push
cmp
shrl
jle
pop
rcrb
xor
or
jp
push
inc
stos
add
int3
jmp
cwtl
push
xchg
add
test
adc
xchg
jmp
jne
ja
sti
adc
adc
push
fstps
sub
push
lcall
cmpsl
lock
push
cmc
add
pop
insl
cwtl
lods
push
fildl
shrl
scas
mov
mov
ret
dec
jmp
test
stos
adc
rorb
sub
add
pusha
test
mov
push
jp
cmc
jge
jg
add
lret
std
push
je
inc
out
js
push
xor
sbb
xchg
jo
mov
in
ljmp
outsb
aaa
dec
adc
push
sbb
adc
push
adc
movsl
stc
push
sbb
cld
inc
enter
cwtl
jne
pop
incb
mov
xchg
fwait
and
in
nop
xchg
and
xor
ficomps
ds
imul
lcall
imul
clc
sub
ljmp
stos
gs
imul
or
inc
push
dec
stos
add
mov
fildl
pop
push
push
xor
cltd
cltd
xchg
push
jmp
mov
push
out
mov
int3
rcrl
xchg
popa
out
pop
adc
jb
shr
mov
pop
pop
lret
in
cs
js
sbb
inc
lods
stos
mov
insb
aas
mov
cmp
dec
mov
cwtl
outsl
test
mov
xor
inc
xchg
add
shll
pop
insb
pop
xchg
pushl
lret
shrl
sbbb
mov
gs
testb
test
rep
das
pop
dec
or
add
mov
pop
mov
addb
ret
pop
xchg
add
stos
int
inc
fists
jle
and
addl
stos
add
stos
inc
mov
pop
stc
ficompl
ret
mov
jne
cmpsb
shl
or
sbb
lret
repnz
cmp
push
sub
je
cmp
sub
jecxz
out
inc
loop
imul
inc
jbe
jmp
nop
lahf
push
mov
jne
in
push
out
add
sti
push
mov
fbstp
lods
adc
sub
enter
daa
out
pop
mov
data16
jmp
dec
xchg
js
sbb
ret
push
push
adc
xchg
push
or
mov
push
mov
test
movsb
mov
ret
lret
or
adc
ficoml
or
adc
jmp
cmp
fstpl
mov
out
pop
cld
ljmp
adc
fisubs
mov
pop
jmp
xor
nop
mov
pop
xor
push
mov
push
xor
je
stos
add
out
sbb
mov
xchg
jbe
jns
or
jmp
mov
rcl
je
jp
push
call
push
push
pop
or
push
pop
lock
push
mov
leave
scas
cs
ficompl
dec
adc
aad
dec
pop
pop
xchg
cli
xor
mov
bound
cmc
push
out
or
sub
or
pop
fimull
mov
push
adc
xchg
xchg
repz
mov
nop
pop
dec
push
jmp
shl
cmp
mov
inc
mov
pop
aam
pop
ds
jmp
pop
loopne
dec
cmpsb
mov
sbb
mov
mov
mov
mov
mov
insb
jg
insb
xchg
imul
dec
push
into
wrmsr
add
fisubs
js
mov
test
std
pop
sbb
icebp
inc
xchg
mov
cmp
push
mov
pop
testb
data16
sbb
dec
xor
dec
movsb
sbb
push
fs
add
bound
push
xchg
inc
mov
mov
test
pop
popf
enter
mov
pop
add
jae
dec
sub
mov
ds
outsl
add
mov
lcall
lahf
or
lahf
mov
fistpl
popf
mov
rcrb
mul
fcmovu
xchg
jb
nop
xchg
scas
pusha
test
rcl
jae
inc
ljmp
shl
in
sbbb
add
cmpsl
aad
mov
lds
imulb
jns
and
xchg
aad
mov
or
and
jge
sarb
add
inc
dec
cli
cmpsl
stos
sbb
pop
mov
lds
out
cmc
mov
or
std
stc
aad
jmp
inc
fyl2x
out
xchg
mov
inc
push
pop
rol
stc
ljmp
push
out
fnstsw
dec
movhps
es
inc
in
sbb
push
jmp
dec
push
daa
sbb
rorb
pop
xor
pop
std
loop
push
jno
mov
pop
jmp
into
dec
out
adc
ss
push
xor
hlt
fadds
and
lock
and
cs
lock
iret
push
lcall
addb
fmull
push
movsb
mov
mov
mov
xorl
and
ror
repnz
fcompl
addr16
insb
popf
icebp
sti
xchg
sub
dec
mov
push
xchg
mov
xlat
adc
es
ljmp
add
sbb
je
stc
sub
lret
iret
pop
mov
adc
jmp
ret
xor
sub
jmp
jge
push
das
fldz
cmpsl
push
mov
or
fistpll
inc
mov
in
repz
mov
mov
mov
xlat
inc
dec
aas
cmp
jg
push
rcrl
stos
and
loop
jmp
xchg
fdivrl
jecxz
sub
or
push
or
cmc
cld
add
shr
sub
jbe
or
out
fcomps
mov
add
pop
ljmp
xchg
or
cltd
push
push
mov
arpl
and
xchg
pop
push
insb
mov
add
adc
loopne
gs
ss
push
in
and
aaa
jmp
test
inc
push
push
cld
ret
dec
imul
jne
test
cwtl
pop
push
xor
pop
cmp
dec
dec
push
sub
pop
xchg
xchg
or
pop
mov
inc
icebp
stos
mov
inc
mov
lret
int3
or
inc
push
mov
jmp
data16
push
add
scas
push
inc
pop
adc
pop
pop
adc
adc
mov
js
sub
xlat
push
adc
insl
or
test
xchg
outsb
stc
ret
push
push
adc
lcall
mov
incb
pop
fs
mov
adc
add
mov
jle
mov
pop
andl
or
test
pop
push
cld
sub
sub
int3
and
mov
or
hlt
enter
xchg
movsl
sti
lret
stos
inc
mov
and
lock
jmp
pop
and
jmp
stos
addl
cli
cmp
add
shr
lods
hlt
cmpsl
add
call
ds
fwait
out
add
and
cmp
cmp
inc
dec
xor
pop
in
cmpsl
cmp
mov
sbb
outsl
pop
scas
and
std
jmp
mov
pop
push
enter
xlat
rcrb
dec
xor
ljmp
mov
aam
or
out
xchg
ret
add
push
loopne
mov
orb
sbb
neg
xchg
or
and
pop
jge
into
mov
stc
sub
pushf
xor
fnstenv
sbb
cld
or
jle
sbb
jmp
mov
add
cli
add
mov
inc
repnz
xor
sub
push
sbb
pop
ja
adc
xchg
ja
shll
rcrb
xor
xchg
stos
add
mov
call
push
jle
jne
dec
sbb
pop
sahf
add
xor
int
les
push
add
js
mov
cmp
xor
jmp
out
push
clc
inc
jno
push
jmp
push
mov
mov
rorl
mov
push
sub
adc
or
sbb
pop
hlt
stos
outsb
dec
xchg
mov
push
lcall
dec
pop
movsl
call
mov
in
jecxz
push
and
xchg
inc
pop
aas
mov
popa
fdivs
outsl
cmp
jns
enter
xchg
sbb
jnp
jmp
xchg
jne
shll
add
outsl
int
jns
and
push
std
add
out
pop
push
arpl
inc
cltd
add
out
sub
xchg
pop
adc
mov
xchg
dec
test
push
je
sbb
or
pop
inc
nop
in
adc
nop
shr
xchg
sahf
shlb
popa
fbld
add
cmp
xor
cmc
push
mov
nop
ret
pop
pop
loopne
mov
scas
icebp
xor
jae
or
daa
orb
cltd
jl
fists
bound
addr16
or
incb
mov
xchg
dec
pop
inc
jnp
adc
stc
test
mov
dec
lea
faddl
and
inc
in
setno
and
scas
nop
pop
jmp
adc
mov
popf
push
or
mov
stc
test
inc
stc
imul
pusha
into
rclb
test
add
inc
cs
or
shll
mov
xchg
xchg
add
pop
ret
iret
rol
xchg
mov
inc
add
push
mov
mov
add
xor
rclb
and
hlt
or
fcoms
inc
inc
shl
shl
dec
mov
clc
mov
lock
andl
mov
or
arpl
dec
movsl
fnstcw
add
lret
mov
xorl
jmp
gs
jg
movsb
call
or
sbb
push
jmp
and
pop
xor
or
push
inc
and
je
roll
shlb
scas
add
shrl
loope
mov
clc
push
mov
lret
cwtl
dec
das
ljmp
lcall
int
xchg
push
xor
jmp
push
jg
inc
add
jmp
negl
incb
nop
nop
push
jns
dec
dec
fcmovnbe
mov
xchg
jl
fisttpll
push
push
sub
movzwl
enter
push
and
xorl
das
pusha
push
dec
and
loope
add
fbstp
mov
jg
mov
push
cmp
fldl
sti
push
pop
not
add
aam
cmp
add
fisttpl
lret
dec
cld
repnz
push
pop
mov
or
sub
dec
ja
jns
icebp
paddsw
jecxz
xor
mov
mov
pop
rol
xor
mov
pop
mov
mov
movsb
int
xchg
sarl
mov
pusha
adc
negb
xor
cmp
rcl
ret
add
xor
mov
jmp
xor
push
jmp
push
xlat
pop
adc
sbb
mov
pop
sub
mov
stos
pop
add
imul
adc
or
and
sub
pop
jmp
sbb
cmp
decb
mov
lretw
dec
inc
mov
or
push
das
inc
add
sbb
sub
pop
jne
or
shl
xchg
lds
jmp
clc
pop
lds
not
fists
dec
adc
ret
mov
adc
ljmp
xor
imul
cmpsl
shlb
sub
lret
jle
or
arpl
sub
cmp
loop
or
or
inc
lds
jmp
jbe
das
push
lds
or
testb
cmp
adc
jbe
inc
dec
cmp
jmp
pushf
adc
add
fldenv
fisttpl
push
add
jle
and
add
enter
mov
pop
inc
and
nop
sub
insl
lret
jnp
inc
adc
xchg
pop
sub
or
rcrl
mov
jmp
ds
cmp
lret
pop
sub
aaa
cmp
and
mov
call
inc
ds
cmp
pop
not
jle
sub
xchg
cld
inc
xor
jae
mov
dec
cwtl
in
xlat
add
jns
lcall
mov
scas
ja
add
cmp
or
mov
test
subb
jg
mov
aas
mov
outsl
push
xchg
push
insl
push
jns
cmp
mov
jmp
and
pop
or
adcb
push
xchg
sti
ss
pop
insb
movsb
xor
mov
pop
faddl
pop
iret
add
shll
inc
insl
mov
or
cmp
dec
mov
cmc
out
xchg
mov
xacquire
into
xchg
push
stos
push
mov
push
fdivr
lahf
add
jmp
movsb
xor
jp
das
pop
push
cld
inc
insb
sbb
sbb
add
sbb
lock
test
scas
imul
cmp
out
in
dec
leave
push
testl
xchg
ror
inc
inc
push
data16
xor
mov
jmp
bound
pop
sub
mov
xlat
inc
lods
mov
sub
popa
push
xor
jnp
add
adcb
in
push
lea
jae
sub
sub
das
pop
test
mov
daa
nop
icebp
dec
xchg
fimull
ljmp
pop
adc
cmp
pop
xlat
mov
add
push
sub
std
es
dec
imul
jl
iret
cli
cmc
adc
or
and
cmpb
fldt
sti
push
add
xchg
inc
stos
repnz
shlb
inc
jbe
push
fidivs
sti
dec
mov
sbb
daa
aaa
ds
dec
xchg
int3
pop
mov
add
cmpsl
or
add
mov
sub
test
movsb
andb
push
into
lods
dec
test
add
loope
push
adc
add
out
dec
xor
sub
sub
xchg
rcll
mov
mov
pusha
jp
mov
pop
in
jmp
mov
mov
pop
imul
jmp
mov
jg
mov
mov
divl
push
add
mov
sbb
fcmovu
jo
ljmp
stc
cmpsl
xchg
and
imul
jnp
mov
int3
sub
push
mov
pop
dec
xor
mov
pop
mov
add
mov
xchg
loopne
jge
sub
mov
lds
sbb
jo
dec
pusha
movsl
das
icebp
stc
cmp
inc
push
adc
leave
xor
pop
sub
lea
aam
xchg
aas
mov
lds
cmp
sub
jp
push
push
adc
scas
scas
adc
pushf
adc
fsubrs
fs
lea
cwtl
inc
add
aaa
inc
and
jae
add
lahf
dec
add
sub
xchg
jo
mov
push
pop
incl
pop
subb
mov
andb
lds
popf
or
pop
leave
mov
mov
xor
iret
pop
stos
add
dec
push
add
mov
ss
sub
out
add
sar
pusha
sbb
in
xor
mov
jmp
rcl
add
data16
pop
xor
push
xchg
add
testb
inc
pop
push
pusha
dec
ds
xchg
js
mov
test
pop
sarb
lods
fnsave
xchg
sarb
cltd
dec
jnp
and
push
jmp
mov
es
test
jmp
sbb
arpl
ret
movl
cld
cmpsb
or
dec
filds
adc
inc
jmp
adc
push
mov
bound
add
loopne
call
pop
jmp
je
push
gs
mov
push
lods
cmpsb
pop
adc
aas
mov
xchg
int3
push
mov
and
add
xor
lcall
cmp
sarb
and
daa
inc
xor
mov
push
inc
pop
pop
push
std
and
add
bound
add
test
int3
push
sub
cmp
repz
mov
xlat
in
sbb
sbb
lods
push
push
lock
and
xchg
gs
inc
lods
lods
retw
jmp
inc
sub
jo
pop
push
jbe
jmp
imul
pop
clc
pop
adcb
popa
inc
mov
xchg
xchg
jmp
mov
test
stos
mov
cmp
add
mov
cmc
js
out
mov
rorl
out
or
mov
ss
mov
lahf
imul
dec
aad
xchg
loope
call
push
jne
setae
stos
bound
shr
insl
or
adcb
mov
xchg
dec
dec
lods
ja
mov
rolb
jge
lock
nop
not
aam
cmp
cmpb
nop
jno
mov
inc
nop
jp
dec
jge
xor
popf
and
push
ret
push
jb
sarl
xchg
sub
je
or
adc
or
add
movsb
cs
mov
out
and
mov
bnd
add
imul
sub
cmpsl
hlt
xchg
or
jnp
add
mov
dec
push
jmp
mov
add
adc
aaa
push
mov
add
adc
aad
out
adc
ljmp
bound
cmp
pop
jnp
pushf
push
mov
outsb
cmp
pop
sbb
ret
add
mov
aas
xlat
push
mov
fwait
pop
pop
mov
pop
cmp
enter
xchg
shrl
sub
jmp
rep
pop
add
movl
stc
dec
sbb
jne,pn
movsb
shlb
sub
add
sarb
inc
add
xor
hlt
push
mov
dec
pop
or
pop
mov
lret
jg,pn
inc
cmpsl
inc
adc
pushf
shll
or
pop
pop
mov
inc
pop
push
push
cmp
stos
push
mov
xor
out
mov
sbb
lock
adc
push
aaa
xor
je
daa
dec
lods
in
add
or
push
dec
sub
lahf
jp
mov
mov
push
cmc
sub
pop
pop
add
aas
sbb
add
sub
jno
test
nop
xchg
and
cld
stos
mov
mov
out
add
leave
push
push
cli
xchg
mov
das
mov
outsl
into
jnp
sbb
adc
hlt
pop
pop
fadds
pop
into
mov
mov
or
add
daa
enter
add
inc
inc
xchg
and
adc
jmp
inc
xor
sub
push
scas
loope
add
pop
jmp
xchg
pusha
jl
inc
in
inc
fbstp
data16
or
jmp
mulb
lods
sbb
xchg
das
pop
inc
jns
imul
popa
hlt
sub
jae
pusha
mov
push
sub
mov
push
inc
mov
or
fwait
loope
add
test
add
push
or
jmp
jecxz
push
mov
mov
xchg
inc
adc
movsl
scas
leave
fdivrl
mov
pop
sbb
rclb
push
arpl
add
fiadds
or
sub
lds
fidivs
movsb
add
repz
int3
dec
mov
jle
xchg
cmp
bound
pop
pusha
and
movsl
mov
jo
add
jg
into
push
jno
arpl
adc
mov
push
jae
movsb
and
mov
es
mov
mov
shlb
jae
test
xchg
jmp
jp
mov
sub
not
sarb
add
cld
xor
test
push
pop
push
clc
subl
scas
dec
dec
cs
push
adc
aam
insl
imul
fcom
or
xor
je
or
jb
mov
sub
sahf
test
push
mov
add
inc
jo
xor
stos
loop
cli
adc
mov
push
rcl
stos
jo
add
aas
sbb
movsl
dec
dec
lock
xor
sbb
insl
shrb
adc
mov
int3
push
jmp
dec
fcmovb
mov
sbb
incb
ret
push
pop
movsl
sti
cmpsl
pop
adc
mov
stos
test
mov
push
js
adc
out
mov
xchg
cmpsb
addr16
das
pop
and
push
shll
icebp
mov
xor
push
lea
jo
lahf
pop
lea
jmp
into
add
add
ds
fstpl
aas
outsl
lds
cli
mulb
adc
pop
mov
shl
add
lds
cmp
cmp
cmp
enter
push
bound
add
shrl
add
out
loop
shr
sub
ret
and
mov
addr16
jecxz
adc
pop
popa
cmpb
dec
daa
subl
dec
push
push
push
clc
dec
adcb
stos
cmp
dec
dec
mov
stos
int3
push
mov
cltd
pop
push
push
sub
add
jbe
jb
jo
pop
mov
das
jmp
add
and
add
subb
cmp
ret
push
jno
or
push
jmp
shr
mov
addl
jecxz
adc
mov
fst
subl
xor
inc
pop
pop
cs
xchg
dec
dec
stc
insb
inc
mov
ljmp
popl
inc
xchg
jmp
cmp
les
and
xchg
rorb
inc
scas
pop
sub
jmp
sbb
iret
and
dec
addb
sbb
nop
and
mov
jmp
pop
xor
into
push
sar
push
xor
cmp
sbb
inc
push
lret
or
dec
lea
add
adc
adc
cmpsl
orl
inc
fucomp
inc
or
adc
test
inc
stos
add
and
cli
fsubl
cmp
adc
add
mov
cmp
sub
add
add
fcomps
push
fwait
punpckhdq
cmp
inc
loopne
lea
adc
jl
lret
shll
insb
jo
xor
adc
aas
push
pop
jbe
cltd
pop
aad
fucomp
int3
add
pop
es
mov
sub
inc
sub
cmc
xor
lcall
in
ds
mov
jo
add
outsl
js
add
cmp
push
es
loopne
xor
stc
ds
sub
dec
xchg
pop
add
jl
cltd
jo
test
xchg
int3
in
xor
ficoml
pop
mov
dec
cmpsl
pop
pop
dec
movsb
popf
jl
xor
cli
add
mov
dec
push
mov
add
jae
or
mov
mov
nop
cmp
scas
jns
lahf
roll
mov
xlat
cmpl
inc
mov
jmp
and
mov
loope
sub
stos
shl
aaa
mov
cmp
out
xchg
push
int
mov
mov
in
xchg
aaa
lock
xchg
push
imul
xor
cmp
sub
add
and
jne
add
adc
in
lock
daa
pop
jno
sub
sti
jl
add
fistps
mov
rclb
xor
and
sub
test
lods
and
pop
add
jne
xchg
sahf
add
inc
in
sbb
sbb
add
xor
in
repnz
inc
sbb
lcall
pop
nop
in
sahf
or
pop
add
xchg
xlat
in
xor
push
rorl
push
add
jae
pop
fcompl
add
inc
push
and
arpl
mov
dec
jg
repnz
pushf
add
stc
cs
xchg
sub
push
cmpb
cmp
mov
arpl
mov
mov
mov
ljmp
inc
lock
add
pop
clc
sub
test
hlt
cmp
mov
in
nop
loopne
sub
imul
and
mov
or
icebp
jnp
popf
add
mov
leave
insb
fisttps
mov
adc
sbb
xlat
cmc
and
test
jb,pn
inc
adc
adc
pushf
int3
sbb
inc
mov
or
or
fdivl
jg
call
add
and
shll
pop
mov
gs
test
adc
les
roll
les
pop
sahf
xor
cmpsb
outsl
cwtl
inc
or
lods
lcall
or
dec
mov
rclb
sbb
enter
mov
add
jl
add
cmp
daa
adc
pusha
push
pop
inc
sbb
xlat
test
lret
add
cmpsb
imul
add
mov
add
pusha
mov
movsl
sub
pusha
les
xchg
add
pusha
push
lcall
mov
inc
and
cmpsb
scas
add
xor
mov
add
inc
lock
xor
mov
xor
pop
mov
std
mov
xor
cltd
add
test
scas
iret
adcl
sbb
cmc
test
bound
pop
hlt
adc
dec
sub
mov
out
nop
and
imul
xlat
cmp
mov
add
pop
repnz
mov
fimull
dec
add
jb
xchg
add
mov
add
cmp
dec
add
stos
maxps
cwtl
scas
add
cmp
lahf
jp
lcall
dec
fadds
add
cwtl
add
pushaw
mov
subb
fiaddl
sub
in
repnz
xor
sahf
add
push
add
pop
add
cmp
popf
je
stos
and
pop
add
imul
daa
into
and
mov
add
jp
outsl
iret
inc
in
pop
sub
add
idivb
mov
sub
pusha
add
xor
dec
and
add
adc
in
mov
mov
int3
fmull
outsl
popa
mov
push
mov
push
and
mov
daa
out
mov
and
clc
nop
sub
jbe
dec
jne
rcll
inc
cld
xor
pusha
add
shr
cmp
xor
stc
cmp
lds
add
out
imul
iret
inc
call
sbbl
fcoml
fs
andl
sub
and
xor
jp
outsl
jo
add
test
loopne
jnp
addl
ja
add
mov
ds
add
push
std
les
add
or
sub
orb
mov
popa
sub
adcb
out
mov
ja
je
andl
xchg
add
sahf
aam
mov
jae
adc
shrl
cmc
add
xchg
pop
adc
cmp
cmp
subb
add
jecxz
xorl
lods
iret
xor
dec
test
jnp
add
insl
xchg
ljmp
cld
sbb
xchg
subb
mov
fadds
popf
add
adc
clts
mov
iret
andb
cld
xchg
sbb
movsb
sbb
inc
xchg
sub
nop
or
mov
and
xor
cmp
fwait
lds
push
lea
inc
cwtl
repnz
sub
fnstcw
cmpsl
dec
add
jo
or
jp
les
and
gs
hlt
push
inc
pop
lahf
add
int3
and
mov
sti
jo
outsb
cmpb
filds
test
mov
cmpsb
aas
pop
mov
imul
xchg
sub
addr16
ss
xchg
add
roll
add
push
ret
push
adc
inc
std
arpl
jnp
add
sub
sahf
add
sbb
rorl
adc
lret
insb
shll
fs
push
mov
loop
add
cmp
mov
je
sub
repz
addr16
inc
jo
mov
jg
test
faddl
or
mov
dec
incl
dec
sub
inc
xchg
add
sub
stc
pop
lcall
xchg
cs
cwtl
adc
pop
inc
xchg
xchg
xor
pop
jl
adc
rol
add
fisttpll
xchg
test
pusha
adc
stc
sbb
outsb
scas
repz
arpl
pushf
sbb
add
mov
fiaddl
stos
mov
inc
ja
xlat
in
xchg
pop
cs
ret
lea
call
iret
adc
insl
add
adc
shlb
aaa
imul
dec
sbb
mov
test
pop
nop
aam
sub
or
mov
mov
add
dec
adc
fists
cmp
sarl
inc
je
std
mov
or
imul
lods
xor
mov
cmp
or
add
test
adc
inc
shlb
inc
cld
sbb
cmp
cwtl
sub
add
outsl
imul
enterw
or
sbb
addb
jbe
mov
sub
lock
add
lahf
add
cs
pop
push
dec
notl
add
mov
pop
mov
xor
pusha
xlat
mov
mov
add
mull
jns
add
sbb
sub
add
or
sub
add
mov
dec
je
fimull
jle
repz
inc
fstps
lods
js
test
setae
in
pop
sbbb
pop
jb
out
dec
mov
ret
fst
faddl
jb
add
mov
add
mov
inc
int
dec
loopne
addr16
adc
jae
cli
pop
std
cwtl
push
cmpsl
push
dec
add
out
sar
fldl
sbb
add
pop
aam
in
dec
xchg
add
mov
cwtl
jmp
xor
push
dec
outsl
jmp
add
dec
fcomps
dec
insb
add
jg
mov
or
push
cmpsl
sub
call
cmp
bound
scas
or
int3
push
adcl
push
insb
xchg
mov
lods
test
ret
add
fadds
xchg
sub
jl
jg
mov
or
idivl
adc
lret
add
outsb
mov
push
add
stc
rclb
mov
test
lods
pop
or
xor
shlb
enter
adc
inc
jle
add
mov
cltd
lret
push
and
daa
enter
sbb
sub
das
adcb
dec
and
ljmp
stos
aaa
mov
xlat
jl
sti
ds
pop
adc
inc
jnp
ret
add
mov
jmp
push
and
add
xchg
mov
add
jecxz
lcall
mov
add
pop
pop
mov
rorb
sbb
add
int3
add
sub
add
jecxz
xchg
outsb
aas
loopew
getsec
push
add
cmpsb
adc
add
mov
fwait
jecxz
js
dec
xchg
nop
shlb
leave
add
jns
adcl
add
add
std
push
mov
dec
scas
pop
ds
loop
scas
aas
xchg
push
mov
fyl2x
xchg
andb
shrb
xor
or
movdqu
cmpsb
mov
mov
icebp
add
xchg
sub
out
cmp
or
xor
xor
push
les
rcr
repnz
add
mov
cmp
scas
sbb
pop
dec
jge
mov
loopne
subb
xchg
sub
jmp
fdiv
adc
sub
decb
inc
shll
andb
push
cwtl
mov
enter
xorl
mull
push
iret
mov
arpl
ret
pop
add
lahf
xor
adc
adc
ss
xchg
add
inc
js
rcrb
xor
sub
or
pop
add
push
xchg
jb
fsubrs
roll
lock
sbb
mov
add
dec
cmp
movsl
fldl
pop
dec
ret
cmpsl
mov
cmc
mov
cli
add
rolb
js
sahf
and
push
ds
xor
dec
xchg
fiadds
xchg
cmp
mov
cltd
pop
hlt
xor
adc
dec
psrad
pusha
fdiv
adc
and
inc
or
dec
cs
sub
adc
mov
cmp
add
adc
xlat
jns
out
push
add
repnz
lds
test
pop
mov
arpl
and
inc
jbe
mov
add
or
movsb
imul
fmull
mov
jb
add
xchg
inc
mov
out
pop
lods
jno
sbbb
jo
add
mov
push
imul
stc
dec
push
pop
jno
dec
pop
sbb
orl
jge
and
push
paddsw
pusha
sbb
dec
push
push
test
inc
clc
cmp
sub
add
mov
inc
sub
insl
mov
pop
jae
add
leave
sub
popf
xor
lcall
std
aam
sbb
loopne
jnp
add
or
adc
cld
aad
mov
jae
and
fstpt
jo
ret
dec
enter
push
orb
bound
mov
dec
test
aam
cmp
jne
out
sub
call
xchg
addr16
xchg
or
in
insb
pop
sbb
or
dec
inc
leave
add
add
push
mov
jge
push
lcall
lea
icebp
iret
and
sti
dec
pusha
push
and
pop
or
add
mov
movsl
shlb
cmp
add
add
mov
imul
dec
out
pop
in
addr16
sahf
out
cmp
xor
fstpl
ficomps
dec
dec
lods
sbbb
pop
ret
cmpb
arpl
add
addr16
mov
adc
sarl
or
add
sub
insb
adc
adc
add
fistpl
cmp
ret
mov
addb
pop
pop
mov
je
cwtl
mov
scas
and
out
pop
rclb
scas
xor
pop
push
cmp
aam
repz
nop
pop
push
mov
add
ljmp
pop
inc
jmp
pop
negb
jle
jbe
movb
out
sbb
pop
scas
sub
ds
in
ljmp
idivb
jg
mov
add
and
cld
call
push
pop
jl
add
in
cs
or
shll
cmp
xchg
cmp
or
movsb
lret
sbb
ret
shll
add
movsb
cld
sbb
adc
aad
in
out
inc
pop
ret
clc
push
lcall
jl
repz
fcomps
in
add
jge
cmp
rorb
dec
outsl
in
sub
call
dec
add
fwait
adc
popa
add
xchg
mov
push
or
pop
cmp
pop
data16
and
cmp
mov
sbb
mov
add
jne
rcrl
adc
mov
add
jae
push
inc
mov
mov
jmp
bound
add
xor
jmp
rclb
test
inc
and
stc
flds
mov
iret
jns
jmp
call
add
push
pop
dec
sbb
out
loope
inc
pop
ljmp
pop
test
addb
sub
das
or
cmp
addb
aad
lcall
ffreep
dec
mov
clc
cmp
mov
jns
pop
or
in
pop
add
ja
arpl
push
fadds
push
pop
inc
and
sbb
sub
aam
das
aaa
and
and
fwait
orl
cmp
mov
mov
push
push
adc
mov
add
fldl
jno
incb
push
or
inc
pop
orl
add
out
dec
mov
inc
push
dec
cmp
and
cmc
frstor
mov
add
mov
repnz
lret
sbbl
push
arpl
fldl
inc
xchg
cwtl
xchg
rclb
adc
pop
repz
push
dec
aas
push
add
ja
aam
cmp
xor
subl
mov
loope
mov
xchg
fcomps
inc
pushf
mov
lcall
scas
push
xchg
adc
jge
inc
cmp
xor
mov
stos
movsl
sbb
movsb
sub
adc
sub
push
xchg
xor
sub
lods
and
cmp
aaa
js
in
mov
jg
xchg
sbb
pushf
xchg
cmpb
dec
aaa
add
mov
jae
test
aad
lods
mov
lock
mov
dec
pop
mov
subl
ds
cmp
xchg
jp
into
mov
xchg
dec
inc
or
aad
loope
mov
adcl
pop
xchg
icebp
rcr
rolb
mov
andl
fmuls
subl
or
or
xor
and
test
sub
xor
push
adc
lea
xor
pop
mov
xor
lock
push
mov
inc
mov
mov
xor
mov
fists
out
and
rorl
mov
sub
or
sar
je
or
imul
and
mov
fsts
push
cwtl
in
pop
mov
and
xor
shld
push
pop
pop
or
je
hlt
or
mov
enter
inc
ss
orb
cmpsl
sbb
aas
rcl
clc
sub
pop
inc
loope
dec
adc
out
cmp
sahf
inc
adc
test
mov
fisubl
adc
cwtl
inc
xchg
fs
inc
and
mov
popa
mov
fstps
mov
fnsave
lock
aam
add
fs
andb
out
ljmp
add
xor
lods
loopne
and
inc
mov
cmp
xchg
mov
add
push
cmp
inc
dec
fwait
xchg
sbb
inc
ret
mov
outsl
test
adc
inc
divl
inc
cmp
mov
movsl
and
loop
adc
xchg
les
or
or
mov
shl
dec
mov
xchg
adc
pushf
fcomps
mov
pop
push
and
cmp
mov
fwait
test
xorl
mov
fcomps
and
rorb
inc
imulb
js
cmpl
aam
jl
mov
push
sbbb
mov
xor
test
aad
stos
and
aam
enter
cld
mull
and
nop
push
cmpsl
push
inc
pop
inc
in
and
mov
rolb
call
andl
call
dec
test
jo
add
test
data16
adc
sbb
mov
clc
gs
in
sbb
mov
jle
add
clc
xorb
xor
xchg
stc
jmp
and
inc
add
adc
scas
sub
lds
cmp
mov
and
sbb
cmp
leave
mov
lcall
aaa
and
fadds
in
or
icebp
cli
pop
mov
mov
mov
xor
scas
add
or
and
in
pop
pop
push
std
or
ja
add
push
dec
adc
jl
in
mov
daa
dec
mov
loope
jge
cs
xchg
pop
movsb
cmp
daa
data16
add
inc
aaa
aas
dec
es
add
test
add
and
mov
mov
xchg
aas
adc
mov
lods
push
ret
xor
add
loop
sahf
jae
rolb
mov
add
movsb
jae
jns
mov
dec
sarl
dec
xchg
push
ret
lock
loop
nop
xchg
cld
mov
pop
xor
fldl
inc
push
add
mov
es
or
aam
add
lcall
or
aaa
gs
mov
cmc
and
mov
xchg
cmp
or
pop
sub
nop
fmuls
fnstenv
adc
or
dec
enter
ror
cli
inc
stos
or
dec
and
dec
mov
sbbb
push
xchg
hlt
sbb
add
jle
nop
sbb
add
sub
testb
mov
jecxz
andl
mov
xor
mulb
mov
lods
enter
push
jae
mov
jle
mov
jo
pop
xor
jg
mov
paddd
leave
pusha
movl
sub
or
xlat
outsl
fdivl
call
ss
inc
loopne
push
sbb
pop
repnz
dec
xchg
movsl
mov
add
iret
jbe
sbb
int3
cmp
dec
loopne
or
int
and
rolb
jp
sbbl
mov
cltd
xchg
xor
dec
jl
push
xchg
add
ss
mov
lock
pop
cld
int3
and
dec
mov
sub
iret
xchg
adc
add
je
jnp
stos
jne
clc
add
in
test
mov
mov
cmp
jle
sbb
js
fcomp
loopne
and
ret
mov
test
pop
jno
mov
dec
dec
xor
add
push
loopne
dec
lods
dec
popa
mov
push
insl
aaa
testl
jae
add
mov
popa
and
xor
fcoms
or
sub
in
andl
jo
pop
xchg
les
test
push
mov
add
pop
cmp
dec
jnp
add
fdivrs
gs
xchg
test
cwtl
roll
mov
lahf
popf
sbb
pop
dec
push
repz
cmp
inc
mov
popf
add
int3
pop
daa
and
push
movsb
xor
rcl
add
sbb
addl
adc
lods
lea
xchg
js
and
loope
and
add
mov
jle
lds
pop
xor
ret
aaa
pop
inc
xchg
sarl
test
cmp
mov
mull
xchg
and
or
xor
loopew
mov
pop
add
lea
sub
sbb
rol
mov
add
ret
and
dec
cmp
mov
inc
imul
add
cmpsl
cmp
xchg
cwtl
dec
xchg
push
in
mov
sbb
fimull
jg
test
fsubs
clc
adc
adcl
ss
leave
xor
out
ret
xchg
mov
shl
push
loope
adc
dec
mov
test
mov
and
call
stc
sbb
add
gs
mov
mov
loopne
push
dec
jb
rorl
aas
mov
and
mov
daa
jb
nop
sub
adc
loopne
pop
std
pop
push
fucomi
xchg
add
inc
imul
pop
cmp
add
xchg
dec
sub
mov
shlb
and
and
push
inc
sbbb
inc
in
data16
inc
and
popa
aaa
mov
mov
xor
out
insb
pop
lods
inc
jg
and
aas
mov
inc
out
inc
mov
jge
lock
loopne
into
jns
lcall
popf
je
andl
mov
xchg
push
mov
and
pushf
cli
add
cmpsl
add
push
or
mov
mov
pop
mov
mov
mov
xor
sbb
in
pop
gs
and
add
jp
frstor
clc
push
pusha
outsb
xchg
ljmp
jae
add
aam
mov
rcrl
pop
xor
pop
xor
xor
inc
cmp
pop
aas
cmp
xchg
jmp
xlat
push
add
loop
pop
adc
nop
or
cmp
mov
add
aad
pop
xchg
cmp
cmp
enter
lock
mov
dec
movl
lods
push
rcrl
add
jmp
sub
dec
add
insl
dec
or
add
sub
loop
push
cmp
adc
jb
pushf
mov
mov
mov
lds
mov
frstor
cld
je
jns
dec
addb
jnp
lea
scas
clc
xorl
mov
and
pop
cmp
add
call
dec
pop
mov
push
hlt
push
xor
push
cmp
or
call
push
cmp
loope
call
inc
call
jno
enter
add
adc
sub
test
and
add
int
repnz
sarl
hlt
enter
jb
cmpsl
mov
dec
sbb
add
pop
inc
dec
ljmp
les
cmp
mov
mov
out
cmc
dec
pop
mov
or
cltd
xchg
lds
fwait
and
push
mov
adc
push
fs
xchg
cli
outsl
add
dec
push
imul
in
pop
movsl
mov
shl
push
aam
test
pop
sbb
mov
lods
bound
dec
jl
jp
leave
sbb
fcoml
es
jge
jge
cmc
scas
movsl
das
add
ja
cmp
pop
cmp
imul
mov
inc
cmp
pop
cwtl
dec
je
jge
sbb
subl
or
int3
pushf
jl
pusha
adc
icebp
hlt
inc
sbb
jnp
inc
loop
call
dec
mov
out
add
or
mov
cs
mov
or
and
inc
push
xchg
sub
mov
add
aas
nop
stos
inc
das
jp
push
dec
andb
and
mov
adc
fiadds
lock
jmp
add
into
ret
xchg
test
mov
pop
jae
sbb
incb
sub
lcall
jmp
pusha
dec
inc
xor
and
movd
fnstcw
push
push
and
ds
push
gs
mov
add
test
pusha
or
pop
clc
mov
mov
inc
inc
inc
mov
inc
cli
xorb
ds
mov
jmp
xor
pop
mov
add
popl
das
inc
mov
les
cmpsb
sub
movsb
fistps
xchg
popa
jnp
add
add
add
push
xlat
bnd
push
dec
jns
xor
pop
popf
cmp
add
cli
rep
add
fwait
add
lock
pop
mov
jbe
cmpsb
in
insl
cmp
cmp
ret
jle
das
je
mov
iret
or
pusha
sbb
outsb
pusha
loopne
lahf
add
notb
into
in
xor
dec
movaps
xlat
pop
movsb
sbb
adc
inc
loope
sahf
sub
sub
stc
push
mov
add
xlat
add
mov
inc
dec
leave
mov
repz
cmp
data16
mov
scas
testb
push
jb
xor
pop
popf
and
add
loop
adc
xchg
test
test
xor
loop
add
push
pushf
mov
mov
xlat
lcall
add
mov
cmp
xor
add
scas
into
mov
xor
mov
pop
out
cmpsl
sub
add
jae
lea
lods
stc
enter
jo
add
jle
fcmove
insb
jl
out
imul
or
movsl
add
add
stos
add
mov
hlt
pop
aaa
pushf
push
cmp
pop
pop
data16
shrb
pop
sub
adc
add
add
incb
mov
mov
jne
sbb
add
jecxz
lcall
push
xchg
decl
pop
int3
iret
hlt
xchg
das
add
push
cmp
dec
cltd
xchg
and
pop
fwait
pushl
sbb
and
sbb
mov
stos
add
test
adc
xchg
test
ret
inc
xor
icebp
xchg
pop
mov
sbb
in
or
pop
push
xchg
mov
add
cwtl
insb
xchg
in
jnp
push
add
sbb
and
cmp
movsb
push
in
jecxz
imul
lahf
add
notb
aas
in
fdiv
popf
aaa
sub
rol
cmp
add
inc
pop
test
add
mov
scas
jns
add
inc
subb
cli
mov
cmp
das
jae
lds
fdivp
mov
stc
add
mov
addr16
add
adc
imul
cwtl
xor
nop
in
std
add
sbb
dec
mov
add
mov
std
mov
nop
add
les
pop
add
es
sbb
add
fistps
mov
jmp
jbe
les
add
int
insl
xchg
clc
add
into
cld
jbe
shlb
pop
push
inc
out
jl
lcall
xchg
xor
mov
add
push
scas
mov
aam
inc
divb
adc
and
fdivp
or
xor
or
loope
jno
pop
xchg
sbb
rcl
pop
loopne
fwait
cwtl
add
sub
out
lret
and
xchg
test
pop
mov
jecxz
or
loopne,pn
sbb
and
rolb
add
add
pop
std
cmp
push
xor
push
add
mov
xor
add
mov
test
sub
iret
out
add
inc
inc
pusha
and
mov
decl
cmp
outsl
jae
pop
fidivrl
fnsave
jle
in
dec
sub
and
insb
xor
js
pop
pop
int
iret
add
mov
js
cmp
pop
mov
xchg
nop
sub
add
jle
add
roll
dec
push
lea
imul
cwtl
je
idivb
mov
xor
inc
shlb
and
sub
insb
je
into
add
mov
insl
lock
lret
cmp
fcoms
push
dec
xlat
xor
ja
dec
add
or
add
dec
adc
mov
dec
incb
in
and
mov
add
dec
icebp
fs
add
cmp
pushf
add
es
mov
mov
adc
jl
aad
and
arpl
push
jp
jno
sub
push
or
popa
popa
cwtl
and
mov
adc
push
push
add
test
fisttpll
jl
sub
mov
push
fldt
inc
cmp
sbb
add
or
rorb
cmp
sbb
push
ret
add
jbe
mov
sbb
rorb
and
cwtl
pop
pop
add
mulb
adc
cmp
jbe
cmp
xor
sbb
test
mov
add
fadds
xor
out
ja
pop
lret
cmp
sub
jmp
lcall
add
inc
add
inc
jno
mov
and
jl
cmp
dec
shlb
call
cmc
xor
jecxz
or
add
scas
insb
stos
lods
ret
sarb
add
sub
push
cli
je
jne
fadds
ja
stc
leave
dec
cmp
setg
dec
push
lcall
fsubrl
cmp
arpl
add
xchg
cmp
add
lods
cs
std
repz
add
test
and
push
pusha
pop
xor
int3
push
mov
rorb
adc
ret
dec
add
mov
adc
add
sbb
mov
mov
mov
xor
dec
push
push
fmull
test
insb
xchg
cmovle
sbb
mov
mov
movsb
pop
fadds
jecxz
push
dec
xchg
loopne
daa
add
hlt
adc
shlb
fcompl
mov
add
adc
imul
cmpsb
scas
dec
je
or
pusha
mov
mov
mov
push
shlb
add
or
xor
or
jnp
add
sar
pop
cmp
mov
mov
pop
scas
nop
dec
add
leave
cmp
or
nop
inc
mov
dec
ror
push
and
cmpsb
fwait
int3
bound
xor
mov
sub
adc
mov
xchg
cmp
in
cmp
push
add
xor
mov
adc
cmp
fisubrl
rcrl
cmp
imul
dec
xor
pushf
xor
xchg
adc
mov
xor
or
and
ret
clc
cmp
mov
cmp
xchg
xchg
inc
ss
iret
push
push
add
mov
xchg
add
adc
sub
or
into
adc
sbb
ja
mov
lods
mov
push
adc
mov
add
nop
insb
aad
cmp
mul
cltd
lods
mov
cmpsb
mov
in
sub
dec
aam
xor
cmp
pop
fdivs
xlat
inc
daa
xchg
ljmp
and
movsb
push
inc
inc
or
and
es
xor
pop
cld
or
mov
add
jl
xchg
cmc
aas
adc
je
cltd
jns
push
mov
push
call
jle
jns
inc
mov
clc
jge
pushf
insl
mov
mov
inc
sub
jae
or
mov
inc
subb
mov
sub
out
mov
mov
and
jb
mov
pop
push
mov
dec
inc
dec
mov
sub
std
xchg
fs
pusha
clc
pop
push
ficomps
stc
cmp
add
xchg
flds
cmp
mov
cwtl
mov
sub
add
pop
xor
add
mov
ja
lock
insb
inc
pusha
and
bound
scas
cmpsb
add
add
sbb
dec
dec
xor
mov
ds
and
mov
mov
or
shrb
or
icebp
pop
xor
je
add
cmp
int3
sbb
sbbl
jo
ret
or
pushf
rcl
rorl
or
push
adc
mov
jo
es
xor
xor
das
and
dec
sub
inc
cmp
mov
adc
and
dec
xor
add
clc
adc
test
std
sar
xchg
mov
xchg
add
jmp
or
mov
dec
cld
testl
dec
cmc
sub
jo
push
and
pop
je
push
sbb
add
sti
add
dec
xchg
and
imul
add
stos
leave
negl
andb
notb
sbb
bound
push
cmpb
cmpb
mov
cld
sub
mov
add
adc
push
inc
icebp
xchg
fistl
fdivs
cmp
lret
cld
cmp
pop
push
lock
dec
sbb
into
dec
mov
dec
sbb
clc
or
shl
mov
imul
jo
pushf
hlt
push
xor
std
sub
into
add
adc
sub
shlb
cmp
xchg
add
aaa
xor
fidivl
cmp
sbb
sub
xchg
and
add
adc
cs
fwait
js
xor
xor
rclb
xor
adc
cwtl
push
clc
mov
sub
mov
cmp
test
add
cld
movsb
imul
sbb
xchg
popa
cmp
mov
pop
xchg
shl
sub
lea
xchg
xor
mov
imul
push
ja
and
cwtl
dec
xor
repnz
mov
jg
out
xchg
stc
add
cltd
sti
js
inc
push
jl
add
in
inc
jno
add
dec
aaa
pop
inc
add
leave
mov
mov
sub
out
mov
dec
push
mov
sbb
mov
add
and
adc
pop
mov
loop
push
cli
add
imul
adc
cmp
je
jl
nop
push
sub
mov
inc
imul
lret
adc
add
test
xor
rclb
cmp
shlb
mov
popa
push
xor
inc
dec
add
dec
and
iret
or
and
inc
cmp
mov
and
dec
adc
xchg
sbb
push
push
xchg
jne
or
push
push
xor
xor
ja
lret
dec
mov
cmp
out
xchg
ss
jo
jge
cmp
xchg
inc
pop
movsb
movsb
cld
dec
test
je
mov
pusha
and
dec
sbb
push
push
dec
test
xor
mov
sub
xchg
enter
or
adc
sbb
pop
push
inc
push
test
or
mov
push
and
adc
xor
mov
xor
ja
sub
mov
xchg
sub
inc
and
imul
or
cwtl
pusha
or
pop
in
ret
fs
nop
cli
inc
shlb
adc
ljmp
fmuls
and
cmp
ja
cmpsb
dec
es
shrb
push
and
dec
add
xchg
jmp
roll
popa
adc
mov
insb
inc
or
xchg
adcl
xchg
nop
nop
xor
scas
lcall
hlt
pop
mov
fs
popa
fistps
push
mov
sbb
popf
into
arpl
stos
jl
shll
mov
js
and
cmpsb
mov
cmp
push
pop
iret
pop
pusha
cmp
sbb
and
repnz
pushf
lock
add
push
out
fbstp
pop
leave
cmpl
or
pop
addr16
aad
push
jo
push
dec
or
leave
and
mov
mov
jns
sbb
mov
lret
stos
or
add
loop
lds
in
sarb
sub
sbbb
push
mov
jo
dec
add
stos
mov
aaa
add
adc
jecxz
test
rol
lcall
ror
popf
adc
xchg
lock
or
hlt
leave
jns
mov
lds
mov
mov
pushl
or
xor
xor
addb
push
das
cmpb
inc
clc
mov
pop
je
aad
add
add
or
sbb
cmp
ret
stos
add
xor
adc
xor
cli
mov
repz
cmpb
mov
mov
mov
inc
inc
jnp
clc
in
adc
adcb
push
xlat
in
pop
cmpsl
add
cmp
flds
in
jl
lods
std
mov
push
add
add
mov
je
xchg
push
mov
xchg
rolw
aam
addr16
xchg
xor
popf
cmp
mov
xchg
xorl
sarb
leave
mov
loop
cwtl
cmpb
or
and
enter
push
in
ret
dec
sub
push
mov
jg
xchg
nop
pushaw
inc
add
loope
mov
xchg
test
nop
xor
mov
xlat
pop
add
pusha
push
ret
lock
mov
rorl
js
rolb
aad
cli
mov
adc
enter
mov
adc
xor
lret
dec
mov
jns
mov
or
lods
add
clc
mov
ret
inc
xor
enter
mov
sti
xor
xchg
mov
mov
or
cwtl
xchg
mov
hlt
pop
aad
cmpb
xchg
pusha
xor
or
mov
mov
adc
rolb
cli
mov
or
xor
sub
stc
jl
push
cmpl
add
test
push
shl
lret
inc
les
or
adc
andb
rcrb
cmp
dec
fdivs
mov
mov
les
or
in
lret
push
push
and
das
idiv
mov
and
jbe
imul
sub
mov
cwtl
addb
es
mov
pop
lret
xorl
rolb
jp
fidivrl
call
or
cmp
mov
jge
jmp
xchg
fldl
mov
mov
xchg
pop
test
push
andb
mov
fmuls
xchg
loope
fs
mov
inc
or
jp
push
push
fsub
andb
gs
testb
xchg
push
xor
mov
or
mov
roll
xchg
and
shr
pmulhw
add
sti
mov
sbb
cli
mov
pop
mov
std
add
in
add
mov
and
out
rorb
sahf
fs
hlt
fcomp
adc
sahf
add
mov
mov
cmp
das
mov
fs
xor
add
adc
cmc
and
rclb
mov
jp
pusha
clc
and
scas
jns
cmp
lret
sub
inc
sub
pushf
xchg
and
test
mov
mov
fwait
jl
xor
push
sub
dec
pop
sbb
fdivrl
les
mov
leave
push
cmp
add
mov
sub
test
or
jbe
mov
mov
jbe
pop
fadds
mov
es
push
sbb
sub
add
push
mov
mov
cmpsb
lock
pop
les
movsl
int3
lock
ret
sub
mov
push
pop
push
lock
loop
je
or
mov
or
inc
leave
xor
cmpsb
js
dec
add
or
roll
mov
pushl
inc
shl
cwtl
xor
sub
add
mov
sar
xchg
cltd
mov
push
add
mov
lds
test
xchg
or
and
or
mov
ds
andb
sahf
push
dec
jo
jp
pop
mov
mov
popa
loop
aaa
sbbb
dec
lods
mov
mov
imul
lods
add
push
jecxz
add
aam
mov
push
scas
das
add
push
sub
repz
bound
sbb
xorl
xchg
inc
add
sbb
fwait
scas
and
push
loopne
push
sbb
jo
lods
fnstsw
out
jmp
xor
in
push
std
rorb
adc
mov
xchg
in
or
mov
adc
mov
adc
shll
jo
xchg
cmp
inc
jmp
pop
pop
sbb
cmpl
ljmp
lea
xor
jmp
ficompl
sub
sbb
shlb
loope
push
sbb
cld
lahf
and
add
daa
sbb
add
mov
jp
push
out
into
add
xchg
icebp
stos
xor
hlt
popf
cld
xorl
or
cmpb
jge
and
lock
inc
jge
lcall
pushw
out
pop
imul
pop
fnsave
adc
add
mov
jp
cmpsb
mov
mov
mov
sbb
fisttps
jp
ja
leave
adc
sbb
sarb
xor
xchg
lahf
std
clc
aam
pop
pop
rdtsc
jle
add
mov
sub
mov
mov
xor
nop
pop
or
sarl
pop
mov
pop
and
loope
rcll
and
xchg
arpl
dec
out
jno
inc
and
data16
jno
add
pop
scas
les
lret
cmp
daa
xchg
and
loopne
adc
shr
mov
adc
aad
sbb
add
jmp
mov
pop
mov
enter
sbb
cmp
loop
mov
outsb
mov
push
adc
xchg
fisubs
loop
jge
or
xchg
lahf
mov
push
xchg
fsubl
mov
add
dec
mov
pop
add
or
mov
leave
lock
cwtl
sbb
or
pop
push
jo
loopne
sub
insb
fistpl
pusha
stc
add
push
cli
test
and
jge
sbb
cwtl
out
lods
movsb
loopne
cmpsl
push
lret
sbb
jle
jb
clc
aam
or
cli
insl
sbb
inc
add
sub
xor
inc
push
lods
lods
outsb
clc
pop
adc
call
loop
mov
lret
out
xor
adcb
mov
dec
int
push
mov
push
xor
test
bound
mov
push
fs
test
cltd
cli
cmp
lock
ds
sbb
dec
pop
push
mov
icebp
clc
and
push
push
add
loop
repz
hlt
inc
add
adc
or
pop
mov
call
inc
stos
dec
enter
mov
and
xor
lea
fcompl
add
xor
sbb
shr
inc
sub
mov
inc
pop
mov
loop
mov
xor
jge
add
adc
mov
pop
out
add
or
xchg
push
outsl
xchg
or
push
arpl
in
iret
int3
dec
cltd
sbb
inc
call
sbb
orl
sbb
outsl
or
adc
xor
pop
jbe
sbbb
fiaddl
add
cld
or
in
xor
mov
mov
pop
cmp
pop
ret
mov
push
add
inc
inc
shlb
mov
mov
in
loopne
pop
mov
mov
int
call
cmpl
loop
cmp
adcl
add
test
sbb
mov
test
add
sbb
repz
push
and
js
pop
rolb
in
aaa
sbb
mov
loopne
mov
loopne
mov
orl
cld
mov
and
cld
xor
fistl
mov
mov
add
stos
daa
fidivs
or
pop
mov
out
mov
mov
sub
xchg
jo
loope
fcompl
dec
scas
xchg
or
xchg
repz
cmp
xchg
xor
mov
or
inc
xchg
nop
push
sub
orb
lcall
xor
bound
mov
dec
sarb
adcb
pop
push
mov
pop
cs
out
add
push
or
loopne
cmc
cltd
ja
push
fiadds
mull
insb
jp
push
dec
loopne
cmp
iret
aaa
mov
push
aam
mov
inc
lahf
aaa
add
insl
in
jecxz
or
sub
subb
xor
dec
jl
call
aas
push
lahf
add
scas
imul
mov
loopne
les
hlt
add
stc
cmp
fldl
cmp
outsl
add
in
pop
addr16
add
data16
iret
rolb
push
fimuls
outsb
cwtl
adc
inc
les
jno
in
add
inc
mov
push
mov
xchg
fsubp
and
loope
dec
aaa
and
mov
add
sub
pop
adc
add
sub
ljmp
or
adc
fildll
adc
clc
add
push
in
add
xlat
pusha
mov
or
sbb
add
xor
std
push
insl
mov
inc
cwtl
mov
pop
ljmp
sub
clc
fiaddl
rcrl
enter
jl
add
mov
outsb
loop
int3
add
sub
xchg
out
mov
lret
addb
test
cmc
and
lock
push
xorb
bswap
xchg
add
and
jae
loop
mov
shlb
into
inc
sub
fdivl
adc
mov
mov
subb
add
push
or
or
lods
and
arpl
pop
xor
and
pop
jnp
andb
or
and
sub
mov
sub
jmp
aam
decb
mov
lods
cmpb
cwtl
test
rcrb
inc
push
subb
or
movsb
sub
sub
and
leave
or
sbb
jge
dec
jo
jmp
enter
and
mov
or
ljmp
sub
dec
repnz
mov
sbb
enter
nop
add
sbb
jle
cmp
push
lods
jp
loopne
insb
cmp
mov
mov
add
inc
insl
out
fimuls
sub
inc
cmpb
daa
imul
loop
cmp
shr
mov
ja
jl
leave
arpl
cmp
gs
add
add
fs
cs
sbb
adc
mov
dec
addr16
adc
jns
gs
push
mov
sub
and
loop
add
das
xorb
fcoml
dec
inc
add
push
push
insb
mov
sub
push
xor
add
inc
or
bound
pushf
add
and
and
ja
bsf
adc
out
fbstp
imul
sub
into
fs
sbb
ljmp
push
aam
nop
xor
pop
sbb
adc
add
and
dec
cmp
or
movsb
xor
pusha
adc
sbb
lock
mov
out
dec
inc
push
bound
mov
ljmp
cvttps2pi
add
insb
push
lcall
stos
es
push
push
sub
ljmp
sub
cmp
push
bound
mov
ss
pop
jnp
cwtl
data16
out
fdivrs
cmpsb
test
xchg
sahf
nop
xorb
cwtl
shlb
fs
add
test
loopne
sub
ss
add
outsb
ret
sbb
sbb
push
in
pop
adc
push
es
out
jmp
mov
jl
adcl
lock
fdivl
or
nop
insb
jnp
addr16
loopne
loop
call
outsl
add
adc
pusha
roll
pop
add
push
xor
je
inc
lods
outsl
cs
adc
mov
and
lret
mov
hlt
gs
fcmove
loop
xor
dec
and
out
xor
ds
mov
or
xor
adc
pop
pop
or
clc
xor
pop
mov
mov
subb
push
xor
shr
hlt
cmp
adc
inc
xchg
loope
sbb
lret
shl
or
inc
mov
or
add
push
and
add
lock
xor
addl
dec
aaa
mov
aam
nop
insl
aam
push
jge
movzbl
push
dec
jo
xor
sbb
sbb
jle
mov
mov
outsl
or
out
mov
adc
jnp
add
push
pusha
dec
mov
jge
mov
sub
aam
test
mov
fnstenv
xchg
enter
cmp
inc
xchg
and
sbb
int3
pushf
adc
jg
les
mov
scas
pop
ja
mov
cmp
or
xchg
mov
inc
jnp
add
outsl
scas
aaa
jmp
inc
nop
push
loopne
add
lock
mov
mov
push
cmp
aam
push
adc
and
es
mov
in
inc
xor
mov
sbbb
ret
mov
jns
inc
inc
mov
inc
mov
pushf
outsb
xchg
add
or
mov
sarb
push
and
loopne
ret
xor
inc
jl
cmp
and
pushf
mov
mov
ss
or
adcb
les
push
xchg
mov
sbb
movsb
test
imul
or
pop
test
pushf
pop
jmp
psrld
cmp
xor
shlb
pop
and
pop
je
loopne
push
dec
add
pop
mov
push
ret
out
add
test
mov
and
jb
mov
mov
pop
sbb
mov
dec
mov
daa
hlt
add
or
push
add
loop
sub
dec
ret
out
sbb
add
push
dec
std
loopne
in
inc
in
push
pop
loopne
adc
mov
mov
pop
ljmp
sub
add
fnstcw
aad
mov
push
mov
push
outsb
fdivrl
jo
pop
adc
mov
out
pop
mov
and
dec
mov
dec
loopne
push
fdiv
sbb
popa
mov
in
pop
call
or
adc
xchg
xchg
cld
xor
push
rolb
sarb
mov
pop
add
sarb
adc
ret
lahf
arpl
outsl
test
movswl
push
pop
xlat
rorl
xchg
test
sub
shr
pop
ret
mov
xchg
mov
fwait
mov
pop
adc
sbb
call
pop
add
rcrb
add
pop
insl
sbb
jp
outsb
inc
sub
dec
cmp
pop
cmpb
push
add
jle
divb
push
cmp
dec
test
andb
adc
inc
sbb
mov
push
in
rolb
dec
enter
pop
loope
inc
insb
les
pusha
dec
movsl
add
cmp
dec
es
das
lock
or
insb
aam
icebp
adc
insb
shlb
into
inc
cli
psubd
mov
repnz
testb
push
hlt
adc
ja
es
xchg
cld
or
leave
mov
sub
fcomps
inc
and
jo
and
bound
ret
lret
fmuls
bound
in
mov
cmpsl
fadds
inc
xor
push
cmp
push
scas
mov
xor
enter
iret
imul
cwtl
call
sub
les
mov
mov
or
pop
inc
push
add
fidivl
push
add
sbb
push
xor
imul
popa
adc
sbbl
jle
sbb
add
inc
lods
mov
fs
pcmpgtb
clc
xor
sub
outsb
clc
pushf
lock
je
call
push
nop
jg
jmp
mov
in
ret
mov
nop
nop
push
jns
cli
push
add
push
mov
mov
sbb
scas
mov
or
wbinvd
lods
xchg
in
mov
hlt
test
loop
sarb
push
jp
inc
push
pop
inc
add
rorl
mov
cs
xorb
fsubp
call
andb
adc
push
or
les
outsb
dec
loopne
call
xchg
or
stc
sub
sti
xor
out
pop
xchg
ret
add
push
sub
and
sbb
sub
and
add
sub
scas
inc
subl
ljmp
aaa
jae
ja
sbb
idivb
sbb
adc
pop
lcall
or
and
ja
push
cmp
arpl
pop
sub
mov
test
ret
pushf
imul
nop
dec
js
dec
adc
xor
lcall
adc
push
les
sub
mov
inc
add
mov
mov
push
mov
or
mov
inc
xchg
cmp
subl
pop
adc
movsb
sbb
mov
adc
or
sub
outsl
cs
and
sub
mov
add
inc
insb
add
jno
jo
ljmp
cli
and
insb
mov
pusha
xor
mov
xchg
or
xchg
lock
cmp
push
cmp
daa
mov
push
pusha
dec
and
imul
out
clc
push
lret
and
jno
sbb
push
adc
pop
adc
jns
add
mov
xor
sub
ret
pop
and
insl
shl
pcmpeqw
add
xchg
nop
mov
repnz
pop
ret
dec
insb
inc
sub
gs
sub
mov
xchg
pop
and
das
nop
repnz
add
push
movsl
cmp
int3
mov
test
push
loopne
push
lods
movb
div
imul
or
or
add
xchg
in
es
pop
sbb
pop
std
or
adc
inc
call
adc
rcll
push
fnstcw
movsb
dec
or
add
xor
int3
xchg
sbb
loopne
jg
xchg
outsl
out
add
es
int3
fstps
sbb
and
push
inc
fadds
push
pop
les
adc
and
cmp
add
adc
lods
mov
adc
mov
adc
mov
bound
imul
data16
jg
push
and
jl
subl
and
and
daa
outsb
insb
mov
xchg
cld
xor
insb
pop
mov
clc
adc
fwait
inc
lods
or
clc
cmp
and
inc
insl
mov
xor
cmp
and
mov
pop
ljmp
movsl
or
ret
cwtl
js
xchg
and
push
pusha
clc
sub
int3
test
inc
shlb
test
in
add
mov
loop
inc
dec
or
sub
push
inc
push
cltd
sbb
push
leave
adc
pop
andb
sbb
je
lods
push
rcrb
mov
mov
add
shlb
jne
mov
dec
sbb
sarb
or
testb
and
cli
push
or
or
les
shlb
jno
out
adc
fcoml
xchg
mov
add
push
jnp
sbbl
mov
mov
adc
adc
add
mov
inc
outsb
loop
xor
jp
push
sbb
imul
mov
leave
clc
syscall
arpl
fcoml
jae
pusha
andb
cmp
mov
loopne
inc
mov
add
jno
jns
sbb
mov
add
push
flds
push
es
mov
call
jns
push
and
mov
push
xor
add
inc
daa
push
pop
pop
push
mov
ret
xchg
jmp
mov
fs
in
fsubl
cmpsl
cwtl
inc
inc
testl
cmovno
xor
int
add
push
mov
jl
jg
add
sbb
lret
out
jbe
subb
mov
inc
popa
adc
add
cs
cld
and
inc
and
aad
out
lahf
xor
cmp
and
add
andb
xchg
sbbl
add
dec
cmpb
or
dec
add
xchg
mov
std
mov
aam
loopne
test
stc
fcoml
std
add
ret
loopne
test
jns
cmp
enter
sbb
xchg
mov
or
push
outsl
add
sub
jo
push
ljmp
fdivl
ret
add
sar
xor
andb
push
or
xor
loopne
iret
mov
popa
call
push
adc
push
nop
adc
mov
push
inc
and
sub
push
xor
loopne
mov
mov
rorl
pop
xor
ljmp
inc
xchg
jnp
jmp
popf
movsl
ret
dec
add
push
fiadds
pop
pushf
leave
mov
pop
add
bound
mov
sub
clc
stos
pusha
mov
ljmp
mov
andb
aam
aas
cwtl
xor
js
lcall
or
out
add
sub
push
sub
adc
loop
hlt
sarb
pop
pop
mov
icebp
jge
sbb
and
jle
orb
cmp
in
popf
fcoms
mov
or
loopne
cwtl
sarb
mov
inc
xchg
faddl
mov
xor
mov
inc
pusha
call
cwtl
mov
sbb
dec
push
push
and
fsubrl
mulps
subb
xchg
sbb
jae
mov
mov
and
pushf
or
loopne
fwait
or
adc
xor
loopne,pt
push
arpl
mov
jl
push
inc
movsb
or
inc
rclb
add
jo
inc
push
call
mov
cmpsb
push
int3
test
cmp
insb
and
jl
fidivrs
dec
loopne
mov
jno
xor
adc
jl
push
fs
sbb
cmp
dec
cmpb
fmull
fcomi
adcl
rclb
add
pop
mov
jle
add
rorb
fnstcw
push
test
pop
cmp
or
or
insb
dec
mov
dec
and
mov
jmp
cmpsl
or
ret
lret
mov
push
mov
popa
ret
cmpsb
add
scas
mov
int3
inc
jg
cmpsl
dec
push
add
dec
sub
jmp
outsb
mov
and
imul
or
push
in
sub
mov
and
add
call
mov
add
cmp
enter
loop
push
xor
inc
add
mov
pushf
and
call
jae
adc
lcall
daa
out
xchg
dec
xchg
adc
push
mov
stos
fcomps
pop
push
pop
and
mov
data16
adc
ret
jo
aad
pop
js
hlt
mov
stc
add
push
bound
neg
jne
lock
add
jle
outsl
shrb
fimull
cmp
fwait
add
sub
ljmp
sub
adc
dec
jno
jns
sbb
and
inc
mov
or
push
sub
cltd
shl
jb
pop
push
mov
or
mov
cli
addr16
add
iret
dec
shll
and
xchg
rorb
add
pushf
mov
mov
push
and
inc
xor
add
or
cli
or
out
or
add
dec
lret
andb
mov
enter
adc
xchg
lods
mov
dec
add
popf
pushf
lcall
sub
mov
mov
je
aam
add
pop
mov
mov
sub
notb
fisubrl
or
out
lods
and
fcom
mov
mov
mov
sbb
ljmp
mov
fisubs
fstl
add
push
mov
or
adc
faddl
jne
or
mul
mov
into
pop
and
fiaddl
mov
dec
adc
and
insb
xchg
js
insl
jno
push
dec
inc
and
test
pop
insb
call
loopne
cs
sbb
test
shrb
or
sbb
testb
lret
lret
push
add
or
fiadds
addb
andb
decl
aam
dec
mov
dec
arpl
pusha
das
mov
sbb
add
mov
push
xchg
imul
je
incl
add
or
shr
arpl
bound
enter
add
cli
incb
mov
test
sahf
pusha
orl
cmp
pop
push
icebp
push
mov
scas
inc
filds
ret
inc
je
fcoms
push
mov
jae
xor
enter
or
fidivrl
pop
fs
rol
inc
adc
popa
mov
loopne
add
adc
les
fiadds
hlt
cmp
rcrb
popa
inc
jmp
pop
push
mov
push
ljmp
mov
add
mov
jo
cs
cwtl
and
cmp
addl
int3
adc
push
add
add
cmp
mov
sub
jns
sbb
jb
xchg
lock
dec
mov
cmp
jbe
sbb
pop
loopne
xor
adc
aad
mov
cmp
out
and
xchg
sub
push
lock
jne
cmc
add
xchg
or
or
mov
push
add
lock
or
out
adc
cmp
sbb
jb
hlt
jnp
out
cmc
mov
mov
mov
xor
fsubrl
pop
cld
push
or
push
dec
sub
sbbb
and
jecxz
stc
add
das
push
cmp
popa
push
imul
ds
mov
setne
pushf
pusha
push
je
clc
push
or
mov
imul
cli
mov
add
mov
jmp
movsb
mov
adc
pop
push
xor
loopne
lods
shrb
xor
cmp
or
out
fcoml
adc
fyl2xp1
dec
pop
mov
aam
gs
jns
icebp
aaa
pop
enter
and
dec
add
fildll
pusha
pop
ljmp
loopne
adc
inc
mov
inc
mov
pop
xchg
call
push
xchg
dec
or
testl
testb
cmp
push
or
xchg
push
inc
adc
add
sahf
xchg
cmp
fisubl
mov
in
jb
jmp
into
aaa
aam
popa
mov
mov
jb
enter
push
pop
add
fisubrl
xchg
insb
push
or
loopne
in
das
shrl
sbbb
ljmp
faddp
xor
or
cmp
push
cwtl
lcall
push
add
out
xor
inc
mov
fsubrs
cs
adc
adc
loop
jp
pop
js
subb
pop
inc
inc
je
cmp
out
clc
push
dec
pop
adc
inc
add
enter
insb
lods
clc
inc
pop
in
mov
popa
daa
jmp
add
sbb
fwait
adc
add
mov
enter
mov
sbb
daa
sub
mov
cmp
cmp
rcrl
sbb
and
sbb
les
xchg
add
sbb
add
mov
xchg
mov
cmpsb
lret
notb
push
mov
xlat
enter
imul
xchg
pushf
and
pop
rol
push
inc
or
sbb
sub
jge
mov
inc
xor
jp
adc
sbb
push
push
sbb
pushf
add
add
mov
cwtl
mov
mov
insb
iret
lldt
mov
cwtl
aad
in
mov
shl
sbb
jp
push
xchg
xchg
shlb
lock
sub
pushf
push
es
ficoms
cmp
call
dec
or
cmp
or
fsubrp
mov
pop
cmp
arpl
pusha
lahf
lods
and
xor
pop
insb
dec
xlat
orb
xchg
push
dec
movsb
movsb
shl
add
daa
xchg
add
testl
add
push
push
pop
adc
cs
and
adc
or
ja
add
cmc
xor
ret
sbb
mov
inc
pop
fwait
insb
subb
dec
add
rcr
movsb
dec
rcrb
pop
dec
call
cmp
add
xchg
ljmp
pop
aad
push
and
xor
pushf
aas
add
into
jecxz
sar
mov
cmc
aam
pop
pusha
add
popf
sub
repz
jbe
orb
add
adc
loopne
cmp
bound
jecxz
mov
push
ss
sbb
nop
push
and
mov
sahf
rcrb
sub
movsl
add
xlat
insb
loopne
mov
jo
inc
mov
in
mov
rorl
add
inc
fnstcw
data16
mov
push
sbb
xchg
pop
add
cmova
inc
mull
pushf
mov
or
jg
call
hlt
sbb
add
loop
xor
pop
or
test
jb
sbb
data16
sbb
mov
invd
and
inc
insl
arpl
aam
jb
jge
xor
mov
cmp
xchg
inc
push
stos
sar
sub
push
mov
adc
sbb
cmp
stos
dec
hlt
pop
pop
sbb
stos
and
sbb
xchg
in
inc
imul
lods
ret
add
ljmp
call
inc
fmuls
in
mov
add
call
insb
pop
ret
add
pop
adc
rolb
jne
pop
add
and
lcall
dec
enter
xorl
fcmove
negb
add
arpl
rorl
add
lret
ljmp
xchg
add
stos
or
fcompl
sub
sbb
xchg
es
add
xchg
addb
ljmp
dec
sbb
xchg
add
outsl
pop
dec
cwtl
int3
dec
cmp
jbe
fs
icebp
add
pop
notl
ljmp
out
into
int3
cmp
ret
pop
sub
dec
pushf
lret
jg
fs
addr16
mov
add
pushf
outsl
and
add
mov
or
xor
stos
das
in
cli
or
clc
pop
adc
rcrl
lock
mov
add
mov
dec
xor
add
sub
data16
or
push
jo
and
push
xchg
rclb
movsb
movsl
or
iret
hlt
cmp
hlt
mov
aad
stc
imul
fisttpl
dec
jno
filds
push
xor
cwtl
push
fidivrs
dec
orb
pop
and
mov
jnp
mov
call
cmp
jae
add
sahf
add
or
cmp
add
andl
movsb
cmp
pop
sahf
or
idivb
nop
mov
fcoml
inc
cwtl
dec
out
jb
cmp
testb
pop
outsb
inc
add
cmc
shll
add
rclb
stos
mov
cmp
cwtl
dec
je
in
outsb
js
mov
push
popf
nop
xchg
lcall
xchg
add
fimull
or
rorb
push
je
add
in
clc
mov
test
pop
mov
inc
and
and
bound
sbb
pop
and
pop
mov
das
fwait
sbb
push
pause
lods
xlat
inc
lcall
test
sbb
daa
adc
pop
push
sbb
and
in
mov
shr
add
sbb
enter
mov
sbb
aaa
mov
adc
add
imul
mov
fsubrl
inc
pop
add
mov
int3
inc
dec
add
ds
sub
mov
fdivrs
lock
push
in
mov
test
xor
sub
dec
add
xchg
mov
add
xchg
and
aam
mov
mov
pop
mov
add
add
movsb
pop
jmp
outsl
in
daa
jb
mov
adc
mov
xor
pop
and
adc
mov
call
hlt
test
inc
xchg
out
loope
outsb
push
test
inc
add
mov
ss
roll
ss
jl
push
call
insb
adc
jmp
hlt
dec
fiadds
loopne
pop
pop
mov
sbb
push
insl
xor
mov
mov
adc
subl
or
fprem
jns
sbb
add
jnp
push
dec
jb
add
out
xchg
mov
mov
inc
mov
mov
lods
mov
push
inc
cmpsl
rol
mov
pop
xchg
roll
clc
adc
notl
xor
in
mov
and
cmpb
fidivl
jbe
scas
les
push
fs
mov
hlt
xor
add
push
jb
dec
loope
jecxz
or
push
in
sub
ds
adcl
pushf
mov
sub
js
and
push
sbb
add
test
sahf
ljmp
insb
cmp
inc
xchg
pusha
call
and
adc
repnz
insl
movsl
shr
sbb
mov
sarb
mov
add
push
fiadds
rorl
cld
xor
lods
rorb
pusha
call
xchg
adc
add
fisubl
loopne
jmp
in
inc
mov
test
ficomps
xchg
pop
addb
add
sub
call
movsb
fimuls
adc
sbb
addr16
das
cmp
call
in
mov
mov
mov
mov
aas
mov
pop
in
sub
in
dec
dec
lahf
nop
loopne
testl
in
cmp
inc
xchg
add
jae
daa
jno
push
xchg
test
add
loopne
and
loop
pop
enter
add
add
fistps
or
insb
aad
mov
xor
and
cld
jmp
lock
cld
add
data16
rcrb
dec
sub
xchg
pop
cmp
pop
add
data16
add
and
fildl
loop
add
pop
push
pop
add
dec
xor
adcl
lock
fwait
jmp
xchg
jno
in
ljmp
les
aam
lock
cmp
lgs
fcoml
dec
jo
lock
pushf
and
test
add
xchg
sbb
jmp
xor
mov
pop
loopne
hlt
test
loopne
adc
mov
jmp
cwtl
cmp
jns
out
int
loope
in
cmp
aam
pop
jbe
pop
xchg
loopne
or
ds
or
mov
imul
adc
xchg
jp
dec
sub
enter
inc
popf
js
cli
inc
sbb
push
pop
addr16
add
mov
and
rclb
adc
pop
adc
outsb
movb
inc
inc
dec
enter
xchg
pushf
xchg
adc
aas
data16
mov
add
lahf
push
jle
mov
dec
or
inc
fidivrl
stos
or
and
hlt
push
sbb
add
mull
sub
cwtl
pop
dec
sub
into
pop
sarl
add
push
insb
xlat
repz
in
jne
mov
ret
dec
leave
mov
pop
sbb
mov
mov
add
dec
andl
jmp
mov
xchg
mov
dec
nop
add
popa
sti
jo
cmp
daa
addr16
in
lret
and
adc
ficoms
add
dec
and
aam
daa
xor
ret
icebp
pop
pushf
adc
jle
pop
lret
mov
aaa
mov
sub
js
mov
das
push
and
or
or
in
jmp
xchg
cli
test
out
stos
jno
mov
out
dec
mov
shl
clc
mov
fldlg2
push
shrb
add
and
fxch
ja
testl
add
xchg
or
jge
arpl
adc
outsl
xorb
and
stos
pusha
or
fldl
add
repnz
js
mov
add
in
ljmp
loop
fmull
lret
loopne
jns
rcrb
pop
mov
push
push
loop
mov
adc
leave
mov
daa
inc
push
aad
mov
add
aad
and
mov
nop
add
ss
xchg
xchg
cmp
pop
mov
jmp
jle
call
lret
adc
cltd
sbb
popa
enter
pop
ljmp
loop
mov
mov
xor
xchg
mov
add
ss
sbbb
mov
lds
scas
ljmp
push
jno
test
push
arpl
pop
or
pop
mov
pop
or
ja
sbb
jnp
cmp
and
add
mov
mov
mov
cmp
jo
rcrl
add
loopne
aaa
jl
jl
pusha
mov
popf
inc
jl
pop
jne
xor
and
ss
imul
add
cmp
rorl
or
jo
add
imul
test
sbb
xor
push
inc
jg,pt
push
add
arpl
adcb
loopne
aaa
or
jg
insl
push
jns
adc
jno
jecxz
je
jp
or
xchg
lock
pop
jbe
fadds
adc
insb
or
pushf
or
outsb
sbb
add
dec
cmpl
and
sub
mov
mov
add
pop
push
loop
adc
mov
dec
sub
cmpb
or
mov
mov
sbb
and
add
daa
xchg
or
xor
cmpl
test
push
mov
adc
daa
ret
add
nop
cmp
xchg
bound
mov
mov
aam
aad
add
dec
movsb
jecxz
xor
rcrl
cmp
or
or
ljmp
add
mov
aam
shrl
mov
in
pusha
es
add
pop
rcll
les
hlt
mov
pusha
int
addb
mov
jl
lret
xchg
cld
xchg
aam
fs
fisubl
pop
sub
shll
xchg
jb
and
and
mov
cli
imul
imul
les
inc
or
hlt
inc
ljmp
and
inc
lret
mov
mov
and
jae
loop
pop
loope
cs
notb
shrb
shlb
outsb
movsb
clc
mov
mov
jb
dec
push
push
andb
inc
lods
loope
push
and
mov
sub
cwtl
mov
and
add
sub
pop
jo
xchg
inc
pop
insb
lock
in
dec
mov
inc
mov
inc
es
insb
mov
inc
push
and
or
in
dec
xor
mov
andb
sbb
or
xchg
and
test
dec
push
test
cld
xchg
addb
cmpsl
test
inc
push
pusha
mov
and
loope
cmp
andb
push
lock
scas
jle
ds
out
insb
mov
iret
add
jns
in
incl
lahf
sub
add
mov
cmp
dec
fwait
iret
jl
insl
pop
jle
insl
inc
in
pop
mov
repnz
outsb
icebp
ficomps
pop
enter
mov
movsl
addb
insb
call
js,pt
mov
jmp
xchg
jne
cmp
std
pusha
mov
inc
push
test
adc
sbb
lahf
and
or
jb
dec
push
notb
test
ret
test
addr16
xchg
sarl
pop
xor
js
add
in
pop
or
ret
je
push
stos
or
dec
add
into
test
dec
adc
add
mov
xchg
pop
in
dec
in
ja
pop
push
mov
inc
push
jle
fucomip
daa
sub
popa
sahf
jno
add
push
movsb
add
pop
out
ret
xchg
iret
les
cmpl
mov
sub
aas
cld
and
out
push
add
fbstp
aas
mov
add
in
add
jge
pusha
rcrb
push
shrb
add
push
mov
test
mov
aad
cmp
pop
jecxz
add
into
bound
add
outsb
ret
lods
mov
in
pop
add
mov
ret
mov
inc
repnz
sub
mov
loop
mov
int3
out
outsb
push
addl
add
addr16
imul
mov
push
pop
sub
add
stc
jbe
add
fildl
or
mov
sub
fcoml
mov
cmc
add
fxam
adc
call
fimuls
incb
mov
loop
or
inc
add
dec
scas
inc
lods
add
pop
jo
sbb
jmp
adc
lock
lgs
pop
adc
insb
subb
sub
inc
ret
mov
xor
cmpsb
pop
xchg
mov
sub
movsb
or
add
iret
bound
sbb
and
hlt
ficoms
les
mov
sub
sub
xchg
push
inc
xorb
lds
mov
movsb
push
out
mov
push
mov
mov
je
testb
iret
mov
fcomps
sbb
push
inc
out
aam
jmp
insl
imul
inc
int
jp
xchg
test
pop
dec
cmp
mov
sub
sarb
cmp
xor
cs
fisttpl
lock
add
fs
push
mov
push
jp
jo
xor
mov
loopne
cmp
add
inc
mov
adcb
int3
xor
int
test
adc
mov
loope
subb
add
out
and
push
add
xor
adc
push
add
and
cmp
add
aam
bound
das
dec
in
fwait
push
add
imul
dec
inc
out
scas
pusha
orl
xchg
rcll
popa
add
pushf
mov
sub
cmp
inc
repz
add
dec
dec
add
mov
jne
adc
arpl
dec
aas
lret
and
pop
pop
push
mov
add
sub
ja
pop
les
bswap
arpl
cmp
enter
and
pop
lock
arpl
mov
add
inc
or
xor
sbb
pop
and
xor
mov
push
insb
jmp
mov
mov
jne
out
add
je
or
jp
cltd
sub
adc
fists
or
mov
and
jnp
sbb
dec
into
sbb
add
ja
data16
push
loop
mov
clc
jns
cmp
popa
jno
push
outsl
xor
div
stos
and
add
fcompl
inc
xorb
inc
fadds
dec
sbb
xor
sub
pop
enter
lret
pop
icebp
jnp
loope
mov
inc
dec
add
pop
dec
loopne
sbb
cli
sbb
rorl
loopne
rorb
or
or
sbb
push
push
push
pop
sub
dec
sbb
ret
outsl
and
pop
adc
or
add
xor
mov
inc
imul
xacquire
punpckhbw
add
sbb
mov
cmp
or
lds
lret
inc
add
pop
js
movsb
sbb
es
cwtl
aas
push
mov
jns
lock
add
inc
loop
adc
mov
pop
mov
or
cmpsl
sub
adc
xchg
nop
adc
add
in
or
or
insb
xlat
push
and
sbb
mov
and
cmpsl
xor
daa
psubq
aam
test
test
adc
in
xlat
mov
and
adc
out
add
dec
rcrb
les
andb
and
mov
in
or
imul
repnz
xor
mov
mov
imul
xlat
add
rolb
shll
mov
mov
or
fnsave
cmc
xchg
adc
xor
sub
mov
xor
pusha
add
and
scas
jo
xor
bound
fstps
mov
jo
int
popa
lods
pop
and
xchg
xorb
sbb
sbb
inc
pop
adc
mull
xor
mov
jno
and
jmp
push
mov
inc
cmp
xor
popf
push
roll
dec
hlt
mov
ret
pop
pop
add
loope
int
add
lea
popa
pop
or
ljmp
mov
sbbl
jno
andb
mov
js
stos
push
adc
dec
jae
test
pusha
sub
jnp
cmp
mov
add
dec
movsl
cmp
or
pop
xlat
adc
jmp
cmpsb
cwtl
mov
addb
xchg
inc
add
sbb
dec
clc
popf
adc
xchg
jg
js
repnz
mov
mov
rorb
mov
dec
aas
cmp
sbb
test
mov
cs
jmp
push
fimuls
sub
fbld
or
add
mov
ja
mov
scas
cmp
jmp
js
push
stos
addb
dec
mov
adc
loope
lods
add
xchg
cld
add
sub
int
inc
lfs
call
repz
lret
loop
sub
popa
mov
pop
scas
sar
cmp
adc
cmpsl
mov
mov
rcrl
add
pop
in
fidivrl
in
pusha
and
lret
mov
imulb
dec
pop
pusha
add
fwait
shl
add
xchg
sub
and
cltd
fmuls
clc
scas
shl
adc
divb
add
sub
ret
add
mov
sub
add
dec
or
out
adc
inc
dec
add
pop
mov
inc
movsl
lods
in
mov
rorl
pop
add
add
sub
outsb
and
std
and
inc
leave
hlt
mov
out
sahf
sub
xchg
rol
cmp
ds
out
add
mov
mov
sub
clc
out
add
xchg
out
test
popa
fldl
ds
cli
ret
and
jle
mov
fcmove
cmp
int3
fimuls
add
jb
mov
pop
dec
or
xchg
daa
xor
push
notb
cmpl
scas
cmpl
sbb
cmpsl
pusha
jne
cmp
xchg
imul
movb
jbe
jmp
cs
jp
add
push
lret
jb
movsb
sub
add
cli
bnd
jo
mov
idivb
xor
and
xor
insb
push
hlt
scas
imul
add
inc
push
bound
sub
cld
xchg
mov
sub
mov
incl
sub
adc
test
aam
add
leave
int3
cmpb
ss
jp
rcrb
jl
dec
sbb
fcoml
pusha
and
insl
clc
pop
call
int
stc
and
in
inc
loop
dec
cmp
inc
orb
lcall
push
add
fucomi
dec
push
or
and
lret
frstor
inc
jnp
pusha
jbe
add
sahf
cs
add
movsb
jge
rcl
dec
sub
rsqrtps
xchg
dec
jo
scas
push
nopl
mov
dec
add
popf
out
pop
dec
cmp
jae
mov
sbb
lret
mov
add
adc
cmc
mov
cwtl
adc
jp
arpl
sbb
xor
sub
stos
pop
fcmovne
push
test
fists
in
pop
adc
pop
xor
aam
std
sub
inc
add
leave
loope
add
mov
inc
jmp
bound
stos
pusha
cmp
mov
and
or
lds
mov
xor
fld1
sub
mov
cmp
push
xor
je
dec
int
jp
mov
lcall
pushf
clc
outsb
sbb
xor
mov
xchg
pop
lods
dec
add
rolb
and
les
mov
xor
add
jp
pop
fmuls
mov
mov
in
cwtl
add
mov
dec
shlb
xor
enter
sti
hlt
shlb
and
notl
call
ror
mov
inc
lcall
jmp
sbb
ja
mov
pop
add
adcb
cmpsl
sbb
jae
fwait
lock
sub
shrb
lds
dec
sbb
add
pop
xor
push
xor
dec
pop
imul
jp
rcll
gs
xchg
xchg
and
mov
sub
add
stos
pop
push
dec
lcall
dec
stos
adc
rcrb
gs
pop
jmp
into
add
sub
dec
jge
add
cmp
cmpsl
add
lods
nop
call
and
add
ds
pop
jne
test
add
adc
jg
sbb
push
and
pop
sbb
sub
pushf
ss
aam
shll
add
out
adc
cmp
jno
jo
cltd
in
inc
fcomps
xor
test
hlt
push
add
mov
xchg
adc
pop
test
mov
mov
inc
add
in
jno
inc
dec
int
add
pop
sbb
mov
mov
sub
adc
add
xor
and
popa
je
sub
cmp
push
cmpsl
pop
test
add
add
cmpsb
xor
shlb
fsubrl
jp
cmp
xor
cmp
rolb
aas
aad
pusha
mov
sub
push
rorb
shrb
nop
xchg
add
fsubrs
loope
sbbb
fwait
out
cmovg
nop
rclb
xchg
test
cmp
jns
cmp
pushf
jne
cs
mov
stc
fdivl
push
inc
pop
adc
sarl
cwtl
or
lods
mov
sub
or
sub
insb
mov
mov
pop
movsl
ss
pushf
arpl
les
icebp
dec
pop
mov
dec
add
sbb
outsb
add
ss
mov
adc
xchg
adc
mov
in
icebp
mov
jp
scas
test
orb
leave
add
outsb
mov
fwait
clc
test
sarl
dec
in
push
repnz
add
int
js
jecxz
add
mov
sbb
dec
insb
addb
cli
mov
jno
mov
dec
add
cltd
mov
dec
or
movsl
mov
add
stos
addr16
in
pop
add
mov
loopne
aaa
xchg
add
arpl
pop
xor
fwait
xor
mov
mov
mov
jg
add
sbb
mov
add
shlb
dec
mov
divl
dec
add
or
movsb
iret
xor
lret
inc
xor
sub
mov
sbb
jbe
ret
mov
andb
mov
dec
pusha
out
gs
add
stc
outsl
imul
lock
into
ljmp
xorl
mov
ja
out
mov
in
add
and
sbbb
add
shlb
dec
adc
pop
push
pop
scas
mov
sbb
add
rolb
and
hlt
sbb
adc
fcompl
stos
cli
push
cmp
sbb
mov
outsl
mov
or
ret
adc
add
enter
lret
nop
in
add
xlat
jb
in
sbb
push
pop
and
add
push
insl
push
test
mov
and
inc
stc
jmp
add
mov
cmpsb
ja
out
stc
fldcw
add
mov
lahf
sti
adc
sbb
dec
add
jmp
fistl
mov
cs
or
shrb
lock
xor
into
xchg
test
mov
push
loop
les
in
addb
mov
mov
mov
lahf
dec
lock
sbb
loopne
test
fmul
jne
add
ret
xchg
dec
ds
push
mov
push
jl
roll
leave
out
or
outsl
cwtl
outsb
ss
add
mov
test
test
fistl
lock
xor
in
add
hlt
jg
dec
pop
cmp
push
push
les
sbb
lea
into
add
pusha
add
cld
fwait
cmp
lds
sub
adc
jl
sub
outsb
pop
cmovns
in
call
stos
pop
mov
sbb
dec
push
pop
pop
dec
xlat
mov
rcr
push
lods
rcrb
push
js
sarl
lahf
ljmp
pusha
and
inc
push
es
add
sub
fbstp
and
mov
std
js
xorb
add
loopne
gs
dec
fldenv
fdivl
jp
repz
fidivs
xchg
inc
jmp
lods
inc
xchg
mov
add
cli
je
add
or
cmp
or
inc
les
add
out
fcomps
sahf
in
lahf
adc
or
lock
jae
jne
push
and
iret
rclb
xchg
pop
add
and
add
les
loop
movb
xchg
nopl
lcall
inc
push
rcrb
aas
sbb
imull
jl
add
sbb
mov
push
test
inc
out
jmp
loopne
and
sub
adc
cmp
loop
ljmp
adc
mov
push
pop
add
sub
mov
ror
loope
inc
sbb
xchg
xchg
add
lcall
xlat
test
pusha
movsb
sub
mov
std
data16
ret
inc
andb
fisttpl
push
cltd
cli
sbb
outsl
into
mov
sub
clc
add
sub
inc
aam
ret
dec
push
lods
jmp
daa
loop,pt
add
jl
mov
cs
iret
sbbb
push
in
jmp
inc
rcpps
pusha
mov
dec
testb
mov
push
outsl
sub
out
cs
nop
iret
test
jae
loopne
inc
pushf
push
jp
cmp
cmp
adc
arpl
loop
mov
in
inc
les
push
call
jg
pop
dec
mov
addb
pop
aam
inc
adc
add
movb
shlb
xchg
test
cmpsb
arpl
adc
cmp
hlt
into
xor
cli
pop
test
aaa
xor
pop
push
rcrb
dec
mov
and
add
fbstp
pusha
add
jns
call
enter
clc
in
pusha
and
adc
adc
push
jmp
fnstsw
pop
add
xchg
rolb
add
cld
aas
call
std
and
xor
mov
ss
and
mov
and
xor
mov
add
push
scas
imul
nop
mov
cli
xlat
insl
push
mov
push
inc
mov
mov
push
add
fbstp
lret
jno
add
outsb
add
pop
jne
int
mov
inc
xor
add
mov
in
insb
dec
add
mov
test
jecxz
ficomps
add
mov
mov
sarl
out
subb
mov
add
into
mov
add
cmpsl
cmp
and
add
cld
xchg
mov
int3
or
push
icebp
add
popa
mov
mov
into
jecxz
add
add
push
out
xchg
and
sti
add
lock
test
add
fisttps
xchg
pop
add
push
inc
mov
or
mov
adc
seta
mov
sub
out
add
xchg
jle
push
inc
repz
ljmp
add
clc
stc
jne
push
xchg
sub
lahf
fs
add
sbbb
or
loopne
cwtl
dec
add
daa
or
nop
add
stc
shl
xor
or
jbe
or
xchg
xor
adc
pushf
test
adc
xor
sub
sbb
add
adc
add
outsb
sbb
mov
gs
xor
xchg
mov
xchg
loopne
cmpb
movq
dec
sbb
cmp
adc
sub
inc
aam
xor
cmp
out
int3
adc
adc
push
push
movsb
sbb
jne
pop
pop
lret
add
push
or
pop
fwait
paddusw
movsl
into
xor
int3
outsb
and
jae
push
or
inc
add
jns
inc
xorl
sub
mov
sub
push
cwtl
ror
filds
adc
mov
push
lea
add
out
sbb
cmpsl
mov
adcl
sub
stos
mov
call
push
jns
mov
and
addl
inc
push
xchg
lcall
call
mov
mov
or
dec
mov
mov
test
je
shrb
mov
daa
insl
in
fcompl
testl
jbe
mov
adc
fcomps
mov
push
loope
ds
mov
sti
adc
fisttpll
add
pop
dec
incl
stc
aad
js
int
adc
daa
jp
push
add
stos
or
insl
cmovl
out
pusha
dec
jmp
sbb
add
in
adc
adc
pop
push
xchg
push
and
cmp
ljmp
mov
fists
fstpt
and
lea
shlb
inc
repz
test
mov
mov
xchg
loopne
not
or
add
fldenv
addl
lods
push
test
dec
pop
test
or
mov
add
xor
jle
add
roll
xor
inc
cmp
pusha
adc
cmp
add
cli
jne
inc
cmovs
pop
add
stos
imul
fnstcw
sahf
cmp
sbb
bound
dec
in
jnp
out
adc
add
pop
push
mov
or
add
lds
dec
mov
rclb
add
test
cmp
jecxz
pop
jnp
xchg
leave
imul
mov
pusha
lcall
clc
stos
outsl
sub
xchg
adc
push
lods
fldenv
mov
pop
jno
push
repnz
ror
inc
mull
push
in
lcall
out
mov
xchg
aad
sub
adc
sub
mov
push
int
sub
add
cli
cmp
push
sbb
mov
test
popf
push
add
sub
or
push
xor
subl
cmp
ret
dec
xchg
lahf
rorb
cmp
adc
mov
adc
jp
aam
sarb
or
dec
pushf
cli
aad
cli
sbb
inc
dec
in
test
imul
scas
mov
adc
add
xchg
lcall
test
xchg
add
jecxz
add
in
je
add
jno
out
mov
sahf
dec
clc
pop
pop
sub
and
pop
leave
or
iret
ret
ljmp
jno
mov
dec
notl
jl
testb
mov
bnd
push
out
out
pop
lret
add
mov
rcrb
in
cmp
fsubs
out
inc
dec
loopne
mov
fs
sub
add
movsl
inc
mov
cwtl
push
inc
fistps
or
adcb
loopne
mov
call
scas
pushf
es
sub
jl
add
les
aam
call
cmp
sbb
pop
fldcw
shrl
jno
lods
jmp
push
xchg
lds
cltd
roll
out
mov
pop
mov
cwtl
pop
add
mov
push
pop
fildl
lock
add
pop
mov
pop
or
and
mov
sti
movsb
rorb
push
adc
or
xlat
add
inc
jns
cmp
cli
inc
sbb
pop
adc
sub
cwtl
dec
movsb
andb
and
add
fcomps
mov
mov
mov
jb
add
sbb
sub
add
jne
imul
and
xchg
aad
push
test
stos
xor
add
mov
inc
sbb
xchg
scas
add
rorb
add
mov
sbb
push
xor
std
mov
dec
and
lock
rcll
sbb
rolb
add
lods
jo
cmp
push
pop
iret
lret
pop
or
jnp
pushf
or
sbb
pop
inc
int3
xchg
inc
call
lock
jnp
cmp
flds
jno
inc
cmp
xor
add
mov
add
jp
pop
mov
and
cmp
out
xchg
fidivs
int
dec
aas
inc
hlt
cmpsl
sahf
arpl
add
fcmove
test
pop
jmp
and
dec
scas
sbb
add
shll
in
aas
jns
ljmp
pop
outsb
pop
add
mov
popa
insl
push
call
ja
lcall
mov
inc
pop
sti
pop
add
int
mull
fbld
repz
nop
sbb
mov
jo
pop
sahf
mov
repnz
push
or
mov
enter
inc
jnp
pop
in
sarb
lret
int
pop
stc
fs
inc
stos
and
sti
mov
movsb
call
and
hlt
sbb
sti
cmp
js
pusha
add
mov
sti
mov
pusha
inc
aam
jne
repnz
push
add
ja
rcl
mov
cmp
loope
jg
add
imul
push
sarb
jg
push
xor
mov
mov
sbb
jne
dec
enter
add
or
pop
jo
jg
lahf
add
xchg
xor
jbe
lods
orb
rorb
jns
add
movsl
mov
cwtl
ja
push
fisttpl
jecxz
js
jae
push
add
sbb
inc
scas
hlt
add
jp
xor
cmpsb
in
cmp
lret
std
add
inc
popa
xchg
inc
mov
or
sub
and
jne
icebp
iret
cwtl
xor
xor
mov
and
mov
or
fs
lods
push
cmp
bound
sbbb
xlat
xor
add
jl
sub
test
adc
std
fimuls
inc
pop
es
loopne
outsb
roll
pop
mov
cltd
or
pop
pop
jb
and
push
in
fwait
push
das
test
cmp
xlat
stos
xchg
dec
sub
cmpsl
pop
jle
addr16
shlb
mov
rolb
cmpsb
arpl
test
push
cmp
pop
loop
lock
or
mov
push
andb
lea
cmpsl
adc
add
mov
push
out
inc
and
or
sbb
push
fdivrs
mov
push
jl
cmc
push
leave
aaa
in
add
int
xor
add
mov
or
jg
pop
in
fadds
pop
mov
xchg
add
je
insb
mov
lds
orb
mov
jno
adcl
add
jle
pop
in
jmp
mov
jp
daa
sbb
inc
jecxz
mov
ss
or
es
out
into
dec
fadds
sbb
test
add
lods
or
mov
imul
out
pop
ds
jg
sahf
cmp
mov
scas
inc
cmp
push
jle
subl
add
add
sub
sbbl
add
inc
ds
scas
filds
das
jmp
dec
add
cmp
hlt
std
pop
xchg
pusha
add
lds
mov
addb
insb
dec
imul
pop
in
clc
push
push
aam
add
xchg
into
jo
cmp
lcall
scas
mov
movsb
mov
dec
inc
es
xchg
pusha
adc
cwtl
jmp
pushl
and
xchg
jns
cwtl
test
outsl
daa
sbb
aaa
sub
dec
scas
or
xlat
fnstenv
popf
dec
adc
pop
jno
pop
addb
add
inc
sub
add
sbb
xor
movb
inc
add
xchg
or
inc
xchg
jle
add
or
inc
xchg
orb
add
mov
xchg
jae
les
dec
std
push
sbb
push
xor
add
shll
insl
xchg
jae
mov
pop
inc
incb
xchg
mov
dec
sub
loopne
adc
or
je
daa
add
addb
clc
pop
pop
mov
dec
stc
lock
in
add
sbb
mov
scas
popf
jne
nop
test
mov
movsl
lea
fwait
insb
mov
cmc
nop
or
or
mov
jae
hlt
jmp
inc
or
lods
nop
pop
mov
xor
inc
or
nop
dec
test
dec
lcall
data16
adc
in
mov
and
stc
adc
wbinvd
lds
adc
adc
xlat
inc
sbb
inc
aam
test
pop
les
adc
ret
rclb
dec
mov
and
adc
cli
adc
cmp
add
ljmp
inc
sbb
into
push
mov
dec
lods
add
testb
fcoms
mov
jge
bswap
fsubl
xchg
mov
sbb
inc
pusha
mov
popa
add
sbb
sub
add
xlat
incb
call
in
dec
cmp
out
call
mov
fldt
xor
pusha
or
out
push
popl
push
xor
xor
xor
andb
shl
adc
lret
mov
add
pushf
neg
sbb
pop
stc
ret
mov
inc
mov
xchg
push
add
sbb
or
mov
mov
int3
xlat
std
sbb
sub
add
cs
add
lret
pop
insl
pop
enter
insb
push
jo
lea
or
int3
xchg
test
fucom
inc
add
into
jmp
mov
popa
stos
add
cmp
mov
js
ljmp
fildl
clc
rolb
notl
fldcw
add
shll
lock
adc
lret
add
cmp
cmpsl
lcall
mov
mov
add
pop
pop
and
loopne
mov
in
cli
stc
sub
and
jl
pop
pop
int3
mov
dec
insl
xorb
adc
xchg
pop
mov
rorl
jecxz
sti
jbe
test
call
pop
mov
rcll
repnz
push
cmp
aaa
jp
js
aam
in
ficoml
notb
mov
jg
pop
test
pushf
sub
fistpll
mov
inc
aad
lods
test
rcr
stc
push
add
fcompl
push
sbb
and
pop
add
push
pusha
mov
xchg
or
popa
sub
jo
add
movsb
cld
rolb
repz
pop
test
sbb
mov
in
imul
inc
jo
cmp
fimuls
adc
sti
sub
or
mov
dec
dec
xchg
flds
insb
sarb
in
outsb
adc
xlat
imul
sbb
push
ljmp
and
or
push
add
dec
adc
push
sub
icebp
xor
icebp
clc
outsl
add
je
imul
mov
leave
adc
xchg
clc
jo
jb
in
dec
push
sub
fnstcw
iret
add
add
cld
dec
mov
sbb
test
add
scas
jne
jle
xchg
sbb
sbbb
out
jge
cmp
cmpsl
adcb
add
xchg
push
cld
push
jle
add
xchg
sub
jge
aaa
jmp
inc
outsb
pop
push
push
test
mov
and
cltd
lock
imul
sub
jg
push
hlt
pop
inc
add
pop
shll
cmp
dec
push
pop
adc
int3
pop
movsl
pop
mov
cmc
cmpb
adc
cmpsb
sbb
dec
lock
pop
std
xorl
push
jns
enter
test
push
dec
push
add
push
mov
inc
jno
xor
add
pop
mov
add
adc
stos
xlat
pop
add
sbb
xorb
add
orl
xrelease
das
and
test
add
mov
or
cmp
ss
insl
inc
cmp
jl
mov
clc
pop
cmpsl
cmc
pop
les
sbb
xchg
add
jo
cmpsl
push
cmp
add
push
sub
loope
sub
roll
cmc
stc
js
add
ret
lret
mov
add
adc
xor
push
mov
jge
add
negb
lods
and
jmp
mov
sbb
call
stos
adc
and
add
out
mov
data16
add
fdivs
cmp
imul
xchg
sub
data16
cli
movb
cmp
or
adc
rcrb
add
adc
test
pushf
ljmp
and
rorb
pusha
imul
and
inc
shlb
add
ds
lock
xchg
in
testb
insl
xchg
outsb
fs
inc
sbbb
or
mov
jle
jmp
ret
mov
enter
jl
outsl
adc
sbb
int3
add
imul
movsl
in
add
shlb
pop
lods
push
xchg
sbb
mov
lods
and
cmp
xchg
ljmp
outsb
clc
push
adc
mov
js
adc
mov
repnz
mov
xor
shll
push
fstpt
mov
arpl
loopne
add
add
sti
jmp
mov
push
sbb
daa
add
mov
jnp
jne
mov
xor
xchg
xchg
pop
fwait
cmp
sbb
je
mov
jge
jp
and
add
in
push
scas
jp
inc
fdivrs
fstpl
aaa
mov
es
out
sbbl
push
cmp
rcrb
add
push
sbb
xchg
cmp
pushf
and
pusha
xchg
or
sbb
addr16
lcall
mov
hlt
shlb
and
out
call
add
lret
push
aas
cld
lock
outsb
add
out
and
sub
and
xchg
rcll
add
imul
cmp
aaa
add
jno
dec
cmp
inc
inc
loope
jl
and
ds
adc
popf
push
jbe
shl
xchg
loope
lods
mov
ficoms
push
jns
lea
sahf
daa
adc
mov
gs
fldt
imul
push
roll
cli
push
lret
mov
sub
fists
aas
mov
add
ret
cmpsb
shlb
cwtl
int3
add
fs
pop
jns
add
shll
cmp
add
das
xor
scas
sbb
jb
push
jle
cld
add
lock
sub
out
and
mov
lods
ss
aaa
add
push
enter
xchg
out
mov
dec
pop
lods
add
pop
cld
dec
push
popl
pusha
or
jl
lret
mov
pop
xchg
dec
rolb
or
pop
divl
jge
sub
js
test
add
pusha
cmp
ret
or
cmp
int
inc
add
jge
xor
or
add
inc
jne
fnstenv
imul
mov
pusha
pop
pop
pop
shll
fcmovnb
js
add
sahf
sub
or
sub
addr16
adc
lods
loopne
cld
pop
sub
mov
add
jmp
sar
xor
pop
sub
ret
rclb
push
and
mov
sbb
sub
jb
push
add
ja
nop
inc
dec
xor
xchg
inc
mov
or
mov
mov
cmp
gs
pop
fldl
cmp
orb
test
add
add
ret
mov
ss
add
in
sti
or
aam
pop
or
xlat
and
lock
inc
shl
add
hlt
pop
cwtl
xchg
popf
neg
xor
repz
cmpsb
ja
xor
adc
add
sub
xor
ljmp
lret
mov
dec
in
cwtl
push
add
mov
loope
or
outsl
pop
jp
mov
test
movsb
inc
push
mov
jge
pusha
push
adc
fldl
inc
jnp
daa
inc
in
dec
test
pop
push
ja
add
add
pop
pop
sub
push
sbb
push
les
paddsb
push
mov
push
movsl
mov
stos
rcrb
loop
inc
subl
filds
add
fidivrl
cmp
mov
add
gs
cmp
sahf
or
adc
adc
addw
pop
adc
icebp
dec
pop
aad
mov
inc
iret
mov
xor
test
xchg
nop
add
xchg
and
cmp
pop
pop
roll
jns
xor
inc
sub
loopne
mov
adc
cmpsl
mov
hlt
sbb
add
movsl
xorl
add
xchg
int3
test
das
pop
or
lods
mov
mov
sbb
sub
and
bound
push
or
jl
mov
push
add
pop
bound
les
andl
std
cmp
sbb
jae
add
js
jno
int3
fsubs
fcmovnu
or
sbb
push
popa
cli
pushl
stc
sbb
push
rclb
es
or
movl
clc
movsb
or
xchg
dec
add
jecxz
in
jae
sub
outsb
push
xchg
movsl
pushf
mov
cmp
sub
jle
jmp
and
enter
xchg
add
mov
std
mov
mov
add
add
lahf
jl
xchg
std
or
jecxz
and
cmpsb
subb
pop
xchg
flds
hlt
inc
shll
fwait
mov
mov
cli
and
rolb
adc
ficompl
pop
dec
xchg
stos
daa
in
add
add
nop
xchg
pop
push
cmp
faddl
lcall
popf
mov
cs
add
mov
fs
cmp
cmpsb
dec
xor
adc
stos
jae
fs
sub
sbb
pop
add
add
enter
cli
add
loop
or
imul
call
mov
lds
pop
aas
xchg
movsb
push
sub
and
popf
mov
loop
idivl
js
enter
repz
hlt
add
xorl
xchg
xchg
xlat
fdivs
sub
or
int3
and
fiaddl
jge
mov
mov
xor
fisttps
in
shrb
mov
mov
cmpsb
cmc
and
cld
mov
inc
sbb
pop
sub
arpl
dec
cmp
rcr
push
lock
ljmp
mov
sbb
cmp
out
jo
dec
jb
or
scas
clc
add
mov
push
rclb
or
dec
xchg
pop
pusha
rol
pop
and
mov
adc
aad
ret
push
daa
sbb
push
movb
incb
adc
push
sbb
jmp
adc
lcall
or
jae
pop
xor
es
add
mov
int
pop
out
adc
jmp
mov
adc
pop
sbb
cltd
cmp
mov
jmp
sub
lahf
orb
add
push
fwait
xor
cmp
add
and
inc
jecxz
in
in
ret
mov
int3
inc
adc
rolb
pop
add
push
or
cmp
sub
ljmp
mov
push
jmp
testl
sbbl
cmc
adc
cmp
movsb
clc
sub
push
jle
cs
add
stc
iret
push
rcrb
in
pushl
mov
mov
add
cmpsb
push
cmp
xor
add
sub
xchg
add
add
into
loopne
xchg
cld
cltd
sbb
data16
dec
add
cmp
cmp
sub
mov
push
mov
inc
xchg
add
clc
lret
xchg
in
movsl
scas
add
in
arpl
cmp
in
cli
ror
lock
inc
xchg
lret
or
int
jb
mov
mov
out
addl
mov
aas
add
gs
pop
fs
add
in
dec
jo
jae
pop
out
call
jno
or
sbb
repnz
add
and
lods
std
xor
xor
xor
mov
sahf
daa
or
sub
adcb
cmp
and
lcall
clc
add
push
fcmovnbe
outsl
mov
mov
jae
rolb
sti
insb
clc
xchg
sub
in
shl
pop
jo
dec
push
fcoms
push
pop
xchg
add
fisubl
lods
pop
cli
add
jg
rol
cltd
cmp
ficoml
xchg
add
ljmp
cmp
hlt
sarb
or
filds
push
inc
inc
cwtl
and
add
out
adc
pop
popa
ja
and
jbe
mov
roll
mov
mov
insl
aas
add
popa
add
je
jge
pop
pop
rcll
push
ss
jg
mov
add
sbb
mov
pop
inc
aas
xor
add
inc
dec
add
cmp
add
dec
lods
shlb
insb
aas
out
mov
xchg
inc
mov
lock
xchg
sbb
push
pop
movsb
lds
cmp
or
mov
add
adc
add
mov
ret
dec
orl
out
add
std
add
mov
outsl
lock
sarb
hlt
xor
add
cmp
xchg
add
mov
xchg
stc
or
shl
movl
add
js
cmp
test
mov
jne
add
dec
pop
fdivrl
add
push
mov
inc
mov
sbb
mov
inc
out
xor
sub
add
aad
in
loopne
lods
fimuls
inc
adc
mov
loopne
cltd
call
pop
data16
sarb
ja
dec
push
orl
push
pop
rolb
je
xor
adc
sbb
mov
and
ficoml
loopne
fiadds
push
cmpl
adc
pusha
in
aaa
pop
orb
out
adc
movswl
add
filds
rcrb
les
lea
ja
add
aaa
sbbl
enter
add
outsl
add
pop
lcall
add
stos
inc
mov
aaa
cld
fiaddl
cmpsl
loope
fcmovne
sub
cmp
and
jp
adc
pusha
pop
js
inc
inc
mov
lcall
lock
mov
cltd
add
loop
inc
mov
mov
push
lods
mov
xchg
or
fistpll
roll
fldt
and
sbb
mov
pop
sarb
and
and
or
cmc
fisubrs
lock
sub
pop
fldl
xor
outsl
xchg
push
arpl
outsb
int3
in
das
push
out
pop
add
cmp
push
adc
hlt
inc
pushf
sub
push
push
pop
inc
inc
add
sahf
outsb
cli
icebp
xor
xor
addb
ret
cmp
dec
call
test
sub
mov
stos
push
jmp
push
jbe
add
sbb
adc
inc
and
fldl
mov
and
sbb
orl
cmpsl
mov
mov
or
push
nop
jecxz
add
xor
push
or
ret
andl
inc
dec
ds
mov
leave
mov
cmpsl
icebp
hlt
jl
or
pop
sbb
lcall
fidivrs
rcr
sti
ret
leave
stc
push
add
or
add
sbb
jge
or
jbe
pop
pop
loope
push
xchg
repz
imul
jecxz
push
rclb
nop
pop
or
ds
rclb
and
es
add
fadds
lea
pop
sahf
call
add
push
pop
jo
int
test
cmp
xchg
jae
out
push
rolb
xor
test
add
lods
jb
lock
outsb
jbe
add
ds
scas
or
stos
mov
dec
mov
sbb
sbb
pop
shrb
sbb
repz
xor
push
fisttps
jnp
loope
incb
xor
inc
imul
jecxz
push
insl
enter
fwait
cmp
ss
shl
test
addl
mov
lock
or
add
jb
mov
cmc
add
mov
das
or
or
pop
shl
sub
jbe
out
add
add
add
lcall
loop
add
add
pop
lods
jge
enter
pop
shrl
lock
adcb
mov
push
add
stos
push
test
push
adcb
or
add
loop
lds
add
or
out
cs
aaa
mov
cmp
mov
add
lds
outsl
dec
lahf
test
and
add
inc
mov
insb
mov
ret
iret
xchg
cwtl
mov
sub
mov
icebp
cs
push
sub
pop
mov
jae
add
repz
or
jl
daa
aaa
mulb
cld
adc
inc
je
adc
add
xor
out
jge
mov
add
add
add
int3
arpl
imul
or
cmp
test
xor
mov
and
push
xchg
or
adc
aas
push
mov
push
in
inc
cmp
popa
mov
inc
gs
sbb
inc
sbb
and
aad
sarl
fs
aam
or
fwait
xchg
scas
mov
add
cmp
jno
mov
into
add
push
cmp
add
and
mov
add
xchg
imul
loop
ret
cmp
movl
pop
add
ss
ret
movb
jge
sbb
imul
adc
pusha
adc
add
mov
outsl
mov
add
scas
popa
rcrb
push
dec
shl
aam
mov
xchg
add
or
pop
push
outsb
pop
jmp
add
out
cmp
adc
fisubl
subl
lahf
lret
xor
jns
push
call
push
jo
sbb
push
fwait
mov
cmp
fcmovu
cmp
or
jns
jnp
sbb
loopne
sarb
push
add
insl
out
jnp
inc
fs
and
cltd
out
add
pusha
cmp
jg
jne
add
jbe
pop
add
test
loop
test
sbb
fisubs
stos
adc
notrack
cmp
mov
xor
addr16
mov
fwait
inc
sub
in
mov
and
mov
add
cmpsl
lock
xor
mov
sub
adc
or
fadds
and
clc
xor
shrb
outsb
xlat
aam
lods
loopne
jl
cmp
in
iret
out
into
cwtl
mov
add
stc
mov
cwtl
cmp
mov
dec
test
inc
pusha
stos
repz
data16
lret
insl
inc
mov
jmp
cltd
push
stos
or
add
jb
insl
fadds
fistl
dec
subps
mov
xchg
xchg
or
cmc
pop
jae
mov
pop
orl
sub
clc
sbb
cmp
mov
shrb
and
cli
insb
add
lock
mov
sub
mov
test
mov
add
iret
loopne
mov
scas
int3
push
stos
out
xchg
aaa
add
inc
xchg
loopne
add
iret
sub
lahf
sub
dec
sbb
and
or
add
jae
xchg
es
xchg
push
popa
mov
pop
xor
pop
adc
js
icebp
or
adc
xor
mov
push
fists
xchg
mov
scas
lods
cli
addl
sub
popf
sub
fnsave
dec
xorb
pop
fcmovnbe
mov
jno
mov
dec
outsb
daa
push
ret
sub
std
stos
clc
push
lock
pop
jae
add
cmp
pop
and
mov
repnz
out
dec
mov
inc
cli
js
jmp
push
lock
shlb
fisttps
cmpb
aas
cmp
cld
add
sar
or
adc
out
sub
int
add
sbb
cmpsb
movsl
dec
jecxz
stc
sub
loopne
mov
add
jge
add
mov
lahf
sbb
in
subb
sub
cmp
mov
sbb
push
add
rcll
out
cli
cld
add
loop
les
push
push
add
divb
hlt
arpl
jmp
lock
es
in
loop
stc
sub
sub
lds
aaa
mov
adc
and
rorl
add
mov
fbstp
add
movsl
or
nop
add
pinsrw
mov
add
pusha
test
les
pop
inc
insl
jmp
or
jbe
enter
add
in
stc
scas
xchg
add
mov
ret
addr16
push
jo
out
add
in
ja
add
jae
or
jmp
and
adc
inc
or
iret
fiaddl
add
sbbl
mov
add
jg
add
ss
and
in
out
adc
movsb
xor
cmp
sub
icebp
test
lcall
xchg
stc
loopne
mov
pop
ljmp
add
movsl
pop
or
pusha
pop
adcl
jmp
pop
fildl
daa
dec
clc
inc
js
ret
ljmp
add
push
jmp
pop
testl
mov
loopne
jp
jle
add
cmp
shlb
xor
and
xor
push
loopne
add
mov
imul
sub
in
pop
push
pusha
xorb
push
dec
add
pop
test
pop
rcr
dec
int3
add
lds
jle
cs
bound
or
cwtl
inc
adc
add
cld
dec
adcl
je
bound
dec
push
test
jg
cmp
xchg
add
add
sti
push
mov
dec
pop
jmp
testb
js
push
imul
into
popf
push
in
shlb
add
fwait
shrb
out
mov
mov
fildll
mov
enter
sub
or
pusha
and
and
xor
icebp
add
and
fisttpll
cmpsl
xor
call
fldenv
sbb
pop
push
testl
frstor
and
jmp
jle
std
sub
int
cmpsb
push
stos
sti
shl
das
xor
hlt
xchg
fdivrl
xlat
call
pop
mov
aad
int3
add
jg
repnz
and
add
jl
add
les
add
mov
ja
jnp
cmp
insb
inc
jns
into
in
adc
push
loopne
mov
cmpsb
sub
lea
clc
inc
and
sahf
test
cmp
and
cmp
mov
lahf
shll
ja
mov
icebp
add
insb
mov
or
imul
pop
shlb
rclb
jnp
dec
pop
inc
xchg
xchg
das
jne
add
xorb
jecxz
jmp
idivl
imul
out
sbb
andb
lcall
dec
cmp
bswap
mov
aam
mov
stos
dec
subb
add
imul
sub
or
adcb
or
xor
test
add
mov
mov
out
repnz
enter
in
notl
add
out
sbb
daa
test
sbb
cltd
adc
xchg
ljmp
sbb
xchg
and
nop
sbb
push
add
and
adc
cwtl
je
cld
push
lock
sbb
rclb
sub
xchg
subl
repz
sti
cmp
push
xchg
bound
mov
add
insl
sbb
push
inc
fiaddl
in
int3
pop
pop
xor
fidivs
sar
adc
mov
jle
mov
fdivrs
fmul
nop
add
push
clc
dec
mov
add
jle
aad
rcr
repnz
inc
leave
orb
sti
insb
pop
and
mov
mov
bound
mov
rcl
adc
std
pop
and
adc
and
cltd
rolb
into
sub
xlat
xchg
dec
outsb
lock
pop
sbb
push
xchg
sub
mov
xor
ret
mov
pop
xor
sar
andb
or
pop
jl
push
arpl
sahf
shlb
out
pop
loopne
cmp
mov
and
add
ret
pop
xchg
mov
setge
addr16
fs
sub
cmp
int
cmp
rorl
lret
xor
je
scas
faddl
loop
jmp
push
add
pop
arpl
pop
pop
inc
shlb
mov
xor
push
test
repnz
add
rclb
insb
gs
dec
ja
nop
faddl
mov
nop
jne
mov
das
sub
ljmp
add
and
insb
jno
outsl
inc
and
mov
stos
push
pop
lods
add
xchg
jg
jbe
test
sub
fistl
pop
in
sbbb
fwait
xchg
jge
mov
xor
bound
testl
dec
push
sbb
mov
rclb
fisttps
mov
popf
sbb
fldt
ljmp
mov
inc
add
out
pusha
andb
in
in
out
sti
sbb
out
inc
cld
jo
sub
pusha
sub
gs
mov
rcrb
repnz
inc
add
xchg
test
js
add
sub
mov
fs
out
mov
fiaddl
pushf
loop
cmp
or
pop
add
or
dec
rcr
xor
add
or
mov
ficoms
je
jae
cmp
call
lahf
lcall
test
xchg
data16
je
fstpt
outsb
clc
addb
mov
add
jo
ds
notl
push
mov
aas
pushf
xchg
sub
and
mov
adc
add
push
inc
into
xchg
pop
mov
mov
add
inc
jl
mov
pushf
add
and
fisttpl
sub
aaa
out
add
xchg
repz
add
cmp
inc
pop
int3
aas
add
mov
mov
jae
iret
roll
xorl
add
clc
scas
xor
adc
lret
cmp
sti
dec
cli
mov
add
jno
push
add
mov
mov
sub
jle
cmpl
outsb
fs
aad
jne
add
mov
adc
sbb
mov
pop
cmp
sbb
mov
sub
mov
add
and
xor
add
pop
pop
ja
pop
loopne
or
mov
outsb
or
mov
inc
bswap
cmpsb
mov
leave
jb
nop
cld
ljmp
int3
sub
adc
xchg
es
mov
pop
divb
loop
popf
cmpsb
movsb
mov
jns
add
mov
jmp
add
dec
rsqrtps
nop
cmp
pop
pusha
xchg
lock
test
add
sarl
mov
mov
mov
in
loopne
sbb
jl
pop
sarl
out
jge
or
lret
mov
add
in
sub
or
inc
add
pop
cmp
adc
int
inc
shl
ret
cmp
push
mull
jno
cwtl
stos
add
mov
xchg
scas
xchg
incb
insb
rcl
dec
mov
push
mov
mov
dec
ja
in
test
lods
aas
fcmove
xorb
ss
fwait
or
daa
inc
xor
add
inc
sbb
add
pop
push
inc
mov
or
outsb
push
dec
push
ljmp
sub
in
sbb
sbb
xor
ja
xchg
stos
mov
sbb
cmp
adc
outsl
in
les
add
add
outsb
sub
add
loop
push
addb
pop
sti
jecxz
add
imul
dec
cmp
adc
loope
cmp
cwtl
add
pop
inc
into
iret
and
push
mov
lcall
lret
pop
cld
adc
mov
cmp
inc
mov
loopne
les
bound
das
xchg
decb
test
sbb
xor
outsb
cmpb
pushf
mov
sub
stc
push
dec
add
out
sub
cmp
sbbb
adc
mov
rcrl
push
push
jae
add
adc
xchg
enter
ds
adc
imul
push
inc
cmpsl
adc
xor
enter
inc
mov
mov
inc
movsb
add
imul
pop
outsl
ja
fimuls
xchg
cmp
xchg
push
lods
add
push
out
imul
xor
stos
test
add
sahf
mov
mov
sbb
dec
shrl
inc
loopne
dec
mov
movsb
add
sar
fwait
or
cmpsb
test
int3
xor
sti
and
hlt
push
dec
cmp
add
gs
loopne
pop
cltd
jnp
sahf
pop
push
dec
cld
cwtl
test
shll
add
es
adc
cld
in
push
push
lret
in
or
xchg
adc
inc
fiaddl
andl
stos
vdivss
mov
add
and
popl
int
add
xchg
mov
jle
fisttpll
nop
aas
daa
add
add
jle
stos
sbb
test
add
mov
testl
insb
loopne
mov
fdivrl
add
mov
mov
push
arpl
sbb
sbb
pop
add
scas
add
mov
sti
mov
icebp
loopne
add
mov
add
jb
divl
xchg
ret
xchg
movb
sbb
cwtl
sub
xchg
ljmp
push
cmp
jo
ja
pushf
rorb
dec
sbb
dec
loope
mov
push
popf
lods
sub
add
icebp
call
sub
add
lahf
sub
push
daa
sub
fildl
pop
xor
test
movsl
jmp
inc
outsb
test
xor
sbb
add
xlat
sahf
mov
add
aad
fsubs
jle
pop
ljmp
aaa
mov
fadds
xor
mov
sbb
mov
call
xchg
dec
mov
ljmp
add
int3
loopne
add
xor
call
in
in
gs
add
and
mov
push
hlt
testb
pop
fwait
cwtl
je
fiadds
jns
mov
imull
adc
insb
mov
hlt
push
xorb
or
sbb
andb
and
cmp
xor
sbb
lcall
test
add
int
int3
hlt
jle
add
push
jl
fdivr
adc
dec
mov
scas
cmp
mov
add
mov
xchg
add
pop
push
imul
inc
mov
pop
push
adc
aam
add
cld
cmp
loopne
repnz
jmp
add
xor
inc
cmp
mov
mov
sbb
xor
mov
andb
push
loop
daa
sub
push
inc
imul
xchg
xchg
xor
add
push
in
ret
popf
mov
movsb
outsb
and
sub
mov
fcoms
shl
mov
add
aam
jl
dec
push
or
inc
icebp
add
fdivr
cmp
adc
mul
addb
out
and
pop
pop
inc
lea
clc
cmp
fildl
popf
sub
out
mov
adc
imul
hlt
fldl
pop
mov
ret
and
jp
add
cld
xorb
mov
sbb
cmc
lods
mov
stos
sub
loope
or
xchg
adcb
sti
dec
push
rclb
mov
cmp
repz
push
push
ljmp
mov
inc
mov
std
data16
xlat
in
or
add
pop
loopne
cmp
mov
adc
add
sahf
pop
dec
hlt
sbb
add
xchg
std
imul
movsl
jno
add
push
faddl
inc
xor
push
pop
mov
fs
leave
movsl
js
or
in
add
inc
jp
arpl
or
addl
xchg
scas
push
hlt
pusha
push
int3
mov
mov
les
xlat
fcompl
inc
sbb
push
sbb
sub
xchg
xchg
mov
xchg
call
rclb
fisubs
in
adc
pminsw
in
and
mov
sbb
mov
jmp
fnstsw
add
aaa
mov
addb
enter
rolb
pop
and
lahf
xchg
jmp
add
orb
or
jp
js
fmull
add
sbb
or
in
sub
hlt
xchg
sbb
dec
mov
cmp
andb
inc
cmp
and
or
dec
pop
aad
and
mov
xchg
jo
xor
adc
pushf
sub
shll
lds
int3
push
mov
andl
push
pop
gs
and
jge
shl
inc
sbb
xchg
cwtl
add
ja
mov
out
ja
add
mov
inc
xchg
in
clc
xor
xchg
ret
inc
add
fs
test
std
dec
and
mov
lock
add
jle
mov
sub
nop
rorb
lock
sbb
jmp
cmp
orl
xor
lret
inc
inc
add
push
sub
push
mov
jecxz
jns
add
xchg
adc
pop
jp
lahf
aas
pushf
das
xchg
or
movsb
lods
add
in
imul
push
out
inc
test
mov
in
push
sbb
pop
mov
or
cmpsl
cmc
add
mov
add
cmp
pop
iret
mov
inc
stc
notl
fwait
xor
xchg
xchg
or
jo
inc
push
lahf
enter
push
insb
jae
mov
ret
xor
push
mov
aaa
mov
data16
and
insb
enter
and
xor
roll
pusha
daa
pop
stc
and
cwtl
push
cmc
push
push
test
adcb
and
cmp
add
jl
add
lods
hlt
js
and
mov
mov
aam
inc
sarb
lea
jne
jae
add
pop
inc
cmpb
inc
int
mov
sbb
test
and
jb
ret
inc
sti
ljmp
cli
ss
xchg
lea
shl
adc
fiaddl
sbb
enter
push
inc
in
push
mov
gs
andl
aas
leave
pushf
es
fldl
cltd
lods
lods
int3
push
pop
jo
testl
sub
mov
in
subb
xchg
mov
sub
push
push
test
and
add
aam
daa
xor
stos
xor
lcall
cltd
add
scas
std
pop
enter
hlt
loopne
incl
or
ficomps
loopne
jecxz
mov
adc
mov
jns
add
das
inc
cmp
jmp
cmpb
les
mov
mov
pop
insb
hlt
pushf
mov
pusha
ss
pop
pop
push
add
jae
jns
fstpl
inc
cld
mov
add
imul
cli
fildl
into
sbb
testb
stos
xchg
fdivl
mov
aaa
mov
add
pop
fldl
rorb
jle
adc
test
add
mov
ficoml
das
cmp
cmp
xchg
test
mov
add
cmp
cmp
test
mov
mov
add
jle
fs
or
xor
in
xchg
addb
cmp
mov
or
not
andb
pusha
inc
rcrb
sub
add
ljmp
cmc
add
pop
jle,pn
lods
add
sbb
icebp
push
jnp
xchg
add
lret
push
push
cmp
jb
add
inc
sbbb
mov
movsb
add
jecxz
inc
pushf
add
sub
fmull
add
andl
jle
enter
push
sbb
lcall
data16
mov
test
add
js
int
adc
add
add
mov
mov
ja
addr16
cmpsb
xor
push
add
push
fstpt
stos
add
scas
incb
pusha
lds
push
sub
add
cmp
xlat
push
cmp
push
scas
push
addb
mov
sub
jmp
cmp
push
inc
mov
pop
adc
mov
add
push
cmp
sub
jb
add
mov
rcrb
nop
jo
cld
pop
sbb
fsubrs
mov
jo
cmc
mov
mov
shr
das
ja
add
xor
jno
pop
or
in
out
rclb
cli
add
add
xor
lods
add
pop
nop
mov
dec
add
pop
mov
add
rolb
test
inc
pop
outsb
cwtl
add
push
data16
cmpsl
add
cmp
dec
add
scas
roll
insl
sbb
mov
lcall
pushf
push
loope
mov
push
sbb
pop
hlt
sub
add
popa
repnz
fsubrl
movsb
shlb
sub
pop
cmp
xor
sbb
imul
sub
or
mov
mov
repz
sbb
out
sbb
add
outsl
xchg
outsb
dec
dec
mov
shrl
add
inc
es
lahf
add
lock
or
mov
filds
pushf
ja
jb
insb
ds
pop
pushf
cwtl
sbb
data16
sub
push
lret
dec
inc
inc
nop
mov
xor
ret
or
mov
inc
and
add
xor
xor
rol
inc
mov
pop
adc
mov
out
in
aam
aam
adc
add
out
add
mov
addr16
dec
insl
icebp
add
ljmp
fs
movsw
or
mov
cmp
rolb
flds
aad
mov
scas
es
loop
loope
daa
popa
and
or
push
stc
adc
xchg
orl
inc
mov
imul
xchg
lock
jg
add
or
clc
sub
push
sbb
clc
fists
xchg
jbe
out
dec
and
xchg
rcrl
insl
cmpb
adc
jb
call
mov
iret
pop
add
xchg
and
cmp
or
ret
das
test
xchg
push
out
cli
pop
cmpsl
pop
decl
add
mov
pop
add
std
cmp
rcrl
idivl
inc
fistpl
aas
repz
pop
push
jo
add
sbb
imul
add
and
add
sub
scas
call
sbb
xor
ret
lcall
add
lds
pusha
inc
xchg
ljmp
aaa
rclb
lods
add
or
clc
and
out
loopne
repnz
jo
add
add
adc
test
and
shrb
pusha
decb
adc
xchg
adc
xchg
in
pop
movsb
push
sub
push
js
fcoms
adc
hlt
stc
loop
push
into
pusha
je
add
popf
sub
mov
add
repz
cmp
sub
mov
jmp
lods
sti
push
test
sub
ud0
rclb
mov
adc
cmpsb
ret
or
xchg
lcall
aad
adc
icebp
mov
test
ret
rorb
and
push
in
cmp
es
out
jo
mov
call
popa
test
movb
xchg
mov
pop
lock
fdivrl
fcomp
fistps
add
inc
arpl
pop
ljmp
loopne
lret
xchg
or
dec
push
push
jmp
add
test
mov
cltd
push
cld
shlb
inc
decl
mov
cmpsl
or
inc
pop
bound
add
scas
fldt
iret
jmp
jb
xor
rorl
push
ret
add
pop
mov
mov
push
lcall
inc
rorl
lods
call
inc
sbb
adc
or
das
or
inc
mov
lock
pop
lret
hlt
cs
mov
sahf
ret
cmp
jne
mov
dec
popa
pop
pop
inc
adc
push
test
nop
dec
add
icebp
jge
or
fldcw
or
and
mov
out
and
jmp
mov
test
fdivrl
sub
add
xchg
mov
adc
inc
and
pop
loope
nop
cmpsb
adc
add
jns
sbb
adc
sbb
aaa
push
push
cmp
push
push
inc
ds
cwtl
add
stos
ret
out
test
or
mov
add
add
pushl
fs
pcmpgtd
cmc
mov
sbb
mov
mov
add
je
dec
push
adc
mov
sub
lds
les
push
into
and
ret
popa
jb
aas
xor
stc
mov
mov
inc
cld
fisttps
outsb
mov
sarb
mov
rolb
cltd
sub
out
lock
add
int3
xchg
add
scas
imul
fs
cmp
inc
mov
jmp
out
sbb
pop
test
jb
scas
testl
dec
or
cmpb
and
test
mov
lock
add
sbb
fnstcw
jecxz
popa
adc
pop
xor
push
js
sub
enter
add
cmc
add
add
or
loopne
lds
inc
fildl
xchg
add
mov
cmp
sbbb
test
cli
jecxz
or
sbb
add
sub
push
add
inc
bound
xor
sbbb
push
push
rorl
fldl
sub
add
adc
lods
jl
pop
mov
test
dec
dec
mov
inc
or
repz
fcoml
outsb
pusha
inc
ret
sbb
adc
add
jecxz
stos
jg
cmp
and
mov
mov
dec
clc
add
sbb
fnstenv
xlat
loopne
jne
cmp
dec
scas
add
gs
addb
test
adc
cmpsl
sbb
stos
mov
pop
sbb
loop
jmp
or
lock
lahf
rol
jg
mov
add
push
and
add
in
mov
ds
jmp
add
aas
scas
lret
pop
xor
pop
sbb
push
push
or
pop
insl
sub
nop
jp
sbb
testl
xor
pop
arpl
cld
addl
pop
int
mov
in
cwtl
shl
lock
add
mov
cmp
jnp
shl
std
dec
sarl
and
pop
das
orl
xchg
add
pop
jp
mov
addb
bound
xchg
andl
scas
add
sub
mov
add
adc
or
dec
cli
sub
jecxz
lahf
ret
pop
fdivrl
call
enter
subl
xchg
push
mov
frstor
cmp
outsl
add
ret
sahf
xlat
les
cmp
inc
sub
dec
insl
jp
mov
mov
gs
sub
mov
addl
mov
and
dec
pop
jo
call
mov
push
xchg
and
sbb
ret
inc
push
dec
addl
pop
scas
dec
loop
loope
rclb
and
sub
stc
aaa
add
add
cld
push
mov
cs
inc
or
or
add
outsl
cli
adc
popf
sbb
insl
mov
inc
mov
int3
add
fdivp
sub
cld
push
fwait
add
mov
inc
aam
mov
addr16
mov
lods
std
xorb
sub
imul
mov
int3
sbb
in
sub
hlt
and
push
jle
jmp
sahf
add
cmp
dec
dec
imul
sub
sub
add
jmp
xchg
push
lahf
into
divb
ja
and
jnp
lsl
popl
push
add
test
jne
add
jo
inc
insb
and
add
dec
fcomip
paddb
mov
cwtl
dec
xchg
sub
ds
push
add
loopne
in
shr
xor
dec
insl
rolb
or
stos
xchg
jmp
shld
mov
int
sbb
idivl
rorb
mov
dec
sub
dec
mov
add
fbstp
sbb
and
pop
adc
cmp
pop
or
mov
mov
adcl
enter
pusha
sub
dec
add
divl
ja
int3
add
mov
adc
lea
stos
pusha
add
pop
testl
add
push
adc
sbbl
imul
lea
jge
scas
loopne
arpl
add
xchg
mov
mov
or
xor
pop
insb
in
ficoms
out
inc
and
js
arpl
sbb
js
xchg
sub
inc
mov
cmpsb
mov
xor
xchg
add
xchg
cmc
dec
and
inc
add
movsl
adc
decl
loope
mov
add
repz
add
movsl
or
sub
add
lret
insb
call
push
outsb
jbe
and
dec
decb
mov
inc
add
arpl
lret
push
dec
insb
add
sub
mov
in
pop
sbb
mov
mov
and
mov
sahf
xor
loop
and
mov
push
pushf
inc
ficompl
ret
or
sub
mov
mov
aam
std
lret
xlat
sti
push
sbb
dec
mov
jb
inc
andb
lods
and
add
inc
int3
loopne
enter
pop
or
cmp
imul
jg
js
sbb
fadds
adc
adc
dec
test
sbb
popf
aad
sbb
std
insb
test
rclb
lds
xchg
mov
mov
sub
jno
jo
test
mov
sbb
roll
mov
and
and
loope
and
xor
pop
stos
shlb
push
mov
fistpll
or
and
push
jno
ret
inc
add
je
dec
int3
mov
jle
mov
push
iret
jo
add
cmp
dec
add
test
enter
and
popf
jmp
add
mov
add
jge
faddl
dec
add
cmpsb
adc
jecxz
int
les
cld
imul
test
pop
into
loop
push
movaps
sbb
and
add
cwtl
lret
rol
icebp
cwtl
inc
cmpsl
mov
jge
add
pushf
adc
gs
mov
popa
loop
xchg
add
dec
or
sbb
add
xor
js
daa
sahf
loope
fiaddl
int
add
mov
aam
lret
sub
clc
insb
cmp
adc
cmpsb
rclb
sub
sub
pop
xchg
push
cli
and
scas
cmc
les
mov
jl
mov
dec
test
and
xchg
jge
mov
aas
mov
sub
js
es
add
dec
rclb
add
movsb
out
xor
arpl
jge
add
inc
ret
push
inc
loop
pop
inc
fcmovu
shld
fistpl
dec
add
mov
adcb
lods
nop
sbb
mov
xchg
add
cmp
push
xchg
jbe
add
cmpsl
adc
adc
mov
cmp
rcll
push
xchg
aaa
rdtsc
sbbl
loopne
and
dec
movsl
add
mov
xlat
cmp
scas
daa
and
push
dec
ljmp
xchg
lods
cli
push
sti
add
cmpl
mov
dec
pop
aas
mov
mov
cmp
xor
pushf
aam
jns
add
popf
sub
xchg
xlat
incl
les
fildll
and
roll
stc
outsb
mov
pop
popf
and
es
mov
add
mov
sub
stc
ja
add
pop
aas
lods
sub
lcall
xchg
add
les
hlt
pop
add
and
inc
test
sbb
xor
add
pop
inc
lret
dec
mov
push
xlat
faddl
add
dec
cmp
xor
js
nop
cmp
add
clc
or
aad
xchg
and
xor
add
movsb
addb
enter
and
lret
icebp
jecxz
shlb
dec
mov
mov
inc
movsb
jo
rclb
pop
add
push
pop
sbb
push
test
add
push
notl
jo
pop
mov
lods
imul
add
and
mov
add
mov
and
nop
scas
add
dec
pop
mov
out
test
mov
imul
mov
dec
dec
xchg
ds
push
inc
sbb
add
aam
sub
mov
mov
add
mov
add
fcomip
test
insl
sbb
data16
aad
xor
cmp
mov
adc
in
js
int3
sub
fs
pop
cmpsb
es
cmp
dec
xchg
push
rclb
jecxz
mov
add
scas
sahf
popa
dec
add
mov
mov
add
mov
stc
aaa
into
adc
add
push
push
aas
dec
insb
push
add
enter
sub
or
push
popf
insb
jo
add
scas
fwait
adc
mov
test
push
lea
andb
or
dec
and
bound
xchg
popa
add
cmpsb
add
pop
push
shll
fstl
add
cmp
repz
shrl
lcall
mov
dec
test
add
ror
out
xchg
inc
clc
cld
mov
cmp
mov
or
or
gs
inc
clc
add
inc
sub
cli
xchg
addl
aam
add
add
scas
sub
xchg
mov
pop
mov
in
jae
mov
jg
xor
add
lds
in
or
xchg
cs
les
sbb
clc
rcll
cmp
fldcw
add
pop
add
add
xchg
sub
jbe
ret
jno
xor
js
subb
jg
pop
sbb
mov
add
test
add
mov
or
jo
enter
push
movswl
push
dec
add
js
repnz
push
enter
add
mov
or
and
sbb
jmp
push
add
hlt
jo
add
in
dec
jbe
add
icebp
mov
out
add
push
jno
jp
and
cmc
sub
movsb
pusha
sub
add
mov
push
enter
mov
push
jle
add
xchg
jb
cli
ljmp
inc
js
sti
xorb
ret
push
test
gs
enter
add
cmp
call
push
or
fsubs
cmpb
lretw
jmp
sub
clc
and
popf
fsubp
xchg
add
dec
shlb
and
cmp
add
fsubrs
xchg
test
xchg
jb
sbb
or
pop
or
lock
loopne
orl
fdivl
cmpb
or
test
nop
loopne
cwtl
pop
fstps
sbb
push
jbe
mov
pop
xor
nop
inc
lods
rolb
and
mov
bound
int3
add
sbb
lods
mov
add
shl
pop
punpckldq
and
fcmovnu
and
add
sbb
ret
pop
mov
call
insb
and
cmc
add
daa
popa
xor
add
jle
xor
stc
cli
dec
and
mov
mov
add
cmpsl
xlat
shll
lods
add
call
add
nop
lock
icebp
lea
or
insl
push
pop
xchg
add
inc
lods
mov
jne
mov
mov
mov
cmp
add
test
xchg
loopne
aam
inc
mov
pop
popf
je
and
add
out
add
jae
xchg
add
das
mov
or
cld
rcr
int3
add
je
mov
pop
daa
xchg
mov
dec
or
add
pop
pop
push
add
shll
andb
lock
mov
fldenv
fisttpll
in
or
movsb
lock
jnp
pop
divl
add
adc
outsb
in
mov
stc
imul
out
in
push
cmp
pop
mov
and
xchg
push
xchg
add
jecxz
test
add
cwtl
repnz
xor
xor
mov
je
aam
dec
add
sahf
sbb
add
lahf
sbb
pop
cmc
pmulhuw
lods
aam
jg
or
jle
lahf
push
ss
out
pop
and
and
xor
xor
add
shll
dec
jge
pop
test
dec
add
outsl
pop
jmp
add
xchg
test
or
sti
ljmp
inc
nop
sbb
cltd
xlat
int
cmp
mov
icebp
xor
add
insl
xchg
add
lea
movhps
xor
and
fstps
pop
fsubl
push
sahf
sbb
adc
mov
or
mov
mov
add
sub
and
loopne
ret
or
add
cli
es
inc
xlat
call
xchg
add
outsb
movsb
dec
sbb
inc
fildl
cltd
ret
or
sbb
lock
pop
adc
cmp
rol
dec
lods
or
add
pcmpgtd
gs
and
xchg
pusha
test
loop
fwait
add
loope
and
daa
add
dec
mov
add
fadds
test
cltd
call
call
ljmp
add
aas
push
push
and
in
add
push
sub
cmp
mov
mov
cmc
jecxz
push
add
stos
ret
in
or
add
adc
sbb
cmp
fninit
xchg
adc
inc
lret
xchg
imul
add
or
sbbb
cmpsb
mov
or
add
jno
cli
incb
and
sbb
mov
stc
lahf
jno
fcompl
add
add
push
mov
xor
adcl
xor
stc
out
jb
add
inc
fwait
out
jno
add
das
sbb
mov
add
dec
mov
or
lret
push
jo
adc
mov
add
stos
sub
jg
fcoms
ret
mov
mov
sub
pop
pusha
mov
xor
scas
push
insl
and
pop
rcrl
add
lahf
shr
test
jp
addl
in
mov
cmp
fsubr
pop
ds
add
gs
pop
addr16
scas
sub
imul
push
mov
mov
add
idivl
pop
add
mov
scas
arpl
add
xor
xor
stos
or
adc
clc
movsb
push
loop
lds
adc
add
jae
push
add
in
lret
mov
scas
push
inc
add
sbb
or
fnsave
out
cwtl
pop
jge
sub
loopne
in
xchg
push
adc
mov
inc
add
push
scas
addb
sub
dec
ja
insb
pop
add
call
es
nop
add
jb
add
pop
add
rcrl
sbb
rcl
push
pusha
fadds
popf
pop
sbb
xchg
add
add
xchg
cmpsb
xchg
dec
ret
addr16
inc
int3
dec
xor
rolb
movsb
xor
lds
xor
adc
or
lcall
rorb
cmp
cmpsl
or
lret
add
sbb
shlb
inc
xchg
in
add
test
sub
dec
pusha
sarb
dec
imul
idivb
repz
inc
and
cmpsb
cmp
test
cwtl
roll
in
adc
jg
add
stos
mov
adc
inc
movsl
adc
fs
les
or
pop
dec
fdivs
in
scas
adc
cmpl
pop
nop
add
jmp
mov
sbb
xor
orb
les
pusha
dec
inc
icebp
push
xor
repnz
add
rcrl
push
inc
popl
jb
jg
xchg
fists
andb
imul
cld
mov
jo
add
lahf
dec
clc
adc
pop
dec
and
mov
ror
shlb
push
mov
shl
lock
sbb
add
out
daa
in
fiadds
loop
es
call
sbb
imul
adc
popa
inc
mov
inc
add
arpl
mov
scas
loopne
sub
mov
dec
jnp
add
nop
xor
out
cmp
xorb
pusha
repnz
mov
subb
lods
adc
loopne
pusha
andl
add
lea
cmpsb
push
loope
xor
out
inc
andl
inc
add
adc
sub
inc
hlt
inc
in
bound
loope
xchg
mov
adc
clc
lret
enter
cmp
or
lock
mov
mov
lods
lcall
and
shll
lock
add
xabort
xchg
dec
mov
mov
and
add
add
dec
inc
push
add
mov
adc
idivl
movsl
add
pop
and
pop
std
add
adc
sarb
sahf
xchg
pop
and
lahf
sub
in
test
insb
xlat
push
in
cmpl
cmpsl
inc
fxch
mov
pop
leave
jo
imul
jo
push
jle
inc
adc
cli
mov
xor
sub
cwtl
add
and
jecxz
sarl
lods
sbb
fwait
push
add
add
mov
sahf
push
jecxz
test
clc
add
in
adc
es
adcl
mov
repnz
push
add
adc
mov
xor
loope
jns
mov
lea
insl
out
sahf
add
adc
mov
sbb
add
popa
sub
ds
mov
pushf
shrb
or
in
jne
fs
iret
sbb
inc
cmp
jmp
mov
hlt
mov
fiaddl
inc
pop
pop
xor
and
pop
cs
jne
shlb
leave
test
cmp
aas
insb
out
add
das
or
repnz
mov
sub
pop
add
sbb
cmpsl
and
push
jns
pminub
pop
call
dec
cmp
cmpb
repnz
je
or
mov
bnd
inc
ficoml
insl
cwtl
pop
enter
jnp
push
sbb
outsb
pop
loopne
or
mov
ret
nop
call
in
cmp
mov
popa
testb
sub
jns
mov
add
mov
pop
adc
jecxz
loop
out
xor
in
enter
sub
xchg
add
lahf
add
pop
icebp
fwait
mov
sub
cmc
add
add
dec
in
xchg
sbb
es
cld
add
add
push
jae
add
out
sub
add
sbb
sbb
shr
sub
add
shll
sbb
ret
fists
mov
sti
adc
or
aad
mov
and
cli
inc
pop
lock
roll
add
out
notl
fsubr
pop
aas
xchg
stc
int3
or
negl
mov
pop
xorl
pusha
add
stos
xchg
ror
jge
add
push
pop
cmp
pop
out
or
push
jno
xchg
rorb
mov
rorb
cld
mov
push
inc
mov
jmp
add
mov
add
inc
adcb
inc
popl
mov
mov
add
xor
xor
insb
lock
test
inc
cmpsb
xchg
pusha
sub
fwait
add
add
loop
testb
xchg
popf
adc
inc
mov
and
push
mov
jbe
clc
sbb
sub
cwtl
add
sarb
add
movsl
adc
fs
arpl
cld
movsb
mov
xchg
cmp
movsl
xorb
mov
push
pop
mov
mov
les
insb
sbb
sbb
push
push
aas
rorb
adcl
clc
cs
popf
xchg
js
add
dec
mov
cli
or
insb
mov
add
pusha
push
lcall
sub
or
jp
xor
sub
sub
jg
xchg
mov
mov
pop
rcll
jle
adc
xchg
add
xchg
mov
pop
ljmp
dec
adc
inc
cltd
jo
bound
jmp
dec
and
add
jg
call
aad
jge
and
pusha
lret
fldl
arpl
jp
int3
mov
push
js
pop
adc
add
movsl
stc
jg
rcrb
cmpsb
pop
es
ret
inc
xchg
stos
int3
inc
push
clc
jbe
cmpsl
and
into
jge
flds
idivb
ja
push
mov
loope
xchg
adc
mov
xchg
mov
push
inc
mov
xor
mov
mov
or
push
inc
add
cmpsl
ljmp
adc
mov
popf
div
pop
mov
sub
mov
inc
xchg
pushf
roll
pop
into
repz
imul
jl
jge
mov
and
pusha
push
outsl
cmp
daa
imul
pop
cld
orl
mov
add
ret
mov
stos
jne
xor
push
mov
add
pop
add
mov
lock
mov
sbb
cmpsl
add
pop
addr16
add
int3
clc
add
nop
in
out
push
jnp
cmp
adc
jl
sbb
js
add
add
and
ds
push
cmp
jno
add
ds
pusha
mov
adc
push
xor
adc
inc
xor
cltd
mov
cli
xchg
mov
in
dec
ja
pop
notl
adcb
sbbl
sub
and
push
and
and
cmp
imulb
add
xor
add
mov
outsb
divl
pop
lret
pushf
cld
addl
sub
add
jnp
push
sbb
repz
out
ret
push
and
cmpsb
or
pop
nopl
gs
or
sub
aaa
jne
xchg
lret
sbb
dec
insl
std
mov
or
inc
ljmp
fmul
pop
or
clc
test
movsl
decb
adc
loopne
push
lcall
xor
mov
mov
shlb
push
mov
mov
push
jne
stc
sub
add
sysenter
xchg
movsb
adc
cmc
in
pop
mov
or
jl
imul
inc
cmp
fpatan
adc
out
and
xor
dec
lods
popf
arpl
xchg
add
js
loop
jne
movsl
insl
adc
inc
arpl
add
push
pop
adc
ljmp
loope
sbb
mov
or
int3
add
xor
dec
fistpll
hlt
add
or
insb
adc
cmp
cmp
pushf
mov
cld
pop
push
test
jne
add
inc
sub
dec
push
pusha
mov
xchg
scas
xorb
xchg
mov
add
and
jmp
sub
mov
add
push
cmpb
and
imul
jg
pop
in
leave
push
jge
icebp
adc
ja
pop
rorb
jae
adc
loope
test
cltd
or
bswap
aam
inc
adc
popl
in
inc
enter
add
fstp
and
xor
lock
mov
add
jle
add
inc
arpl
mov
cltd
add
jmp
iret
lods
lods
jne
and
pushf
bound
andb
mov
push
in
jae
clc
and
addr16
push
lahf
jns
cmp
lea
das
ss
pushf
pop
inc
sbb
xchg
adc
pop
pop
into
or
mov
add
outsb
mov
pop
add
jno
iret
xchg
fcomi
nop
cld
add
aaa
or
mov
jmp
inc
lahf
out
jmp
sub
movsb
or
es
movsl
in
xchg
pop
pop
hlt
mov
jbe
cld
inc
roll
pushf
sub
xchg
lock
subb
sub
lods
push
cltd
outsl
adc
popa
lds
adc
adc
push
mov
fwait
nop
mov
adc
or
lcall
arpl
test
fwait
add
or
mov
jmp
inc
xor
add
movsb
dec
adc
sbb
outsl
or
jl
add
mov
cmpsb
mov
lods
out
sub
popa
popf
mov
adc
mov
adc
addb
add
and
push
pusha
je
xor
cwtl
lcall
lods
cs
lock
dec
out
dec
mov
repz
lock
add
jne
daa
push
paddb
mov
loopne
push
inc
cmp
mov
popf
xchg
push
mov
pop
lock
add
sbbb
or
push
sbb
mov
add
add
pop
add
out
push
dec
clc
or
aas
pop
lds
mov
loopne
fsts
or
pop
push
push
push
sub
testl
ss
jl
mov
addl
jmp
popa
mov
jnp
mov
pushf
sti
in
cwtl
in
syscall
xlat
cld
fisttps
scas
orb
enter
insb
loop
pop
push
shlb
das
jmp
fisttpll
mov
fsubr
fsubrl
rorl
out
ja
int3
cs
mov
imul
aas
adc
popf
xchg
add
stos
andl
pop
iret
das
add
push
loop
add
int
mov
dec
repnz
pop
mov
jg
popf
inc
shr
adc
dec
sarl
add
fdivrl
in
lret
out
repz
ficomps
and
vpsubsb
loope
pop
dec
pop
pushl
cmp
sbb
sbb
mov
in
inc
add
xchg
popa
jbe
popf
lret
lahf
lock
sub
cmp
aas
shrb
cmp
or
cmp
jo
xchg
and
test
mov
and
pop
out
nop
repz
repnz
add
add
mov
cli
call
mov
pusha
or
add
out
sbb
adc
jmp
inc
mov
mov
add
lds
jg
push
clc
xlat
cmp
dec
xchg
and
loopne
sbb
aas
ljmp
mov
dec
test
fs
pop
dec
add
xor
in
xchg
scas
mov
add
add
xor
rorl
and
mov
jl
mov
test
xor
imul
jo
push
nop
jo
add
out
inc
sarl
sbb
leave
add
mov
push
cwtl
dec
or
and
xchg
leave
and
add
inc
xchg
popa
add
jmp
mov
movsb
dec
inc
cmc
mov
repnz
inc
aam
inc
add
inc
pop
push
ret
inc
and
jne
sub
movl
test
or
cli
iret
add
dec
adc
mov
cmp
jnp
add
shll
testl
add
hlt
and
das
push
pop
sub
xor
js
outsl
add
cmp
mov
cwtl
or
shr
orb
adc
add
sbb
rorb
orl
pop
dec
mov
rclb
aam
and
rorb
or
aaa
in
push
rorb
add
cli
int3
pop
outsl
push
les
inc
cmp
std
bound
jle
movsb
xor
xor
call
imul
lock
add
test
pop
lock
lahf
sub
sbb
inc
movsl
pop
add
loopne
fcmovu
sub
inc
inc
xchg
mov
adc
push
cld
and
xabort
lret
cmpsl
or
add
fwait
mov
lds
jge
addr16
cld
add
sar
out
in
add
jae
das
enter
negb
inc
jns
pop
and
adcb
add
test
dec
outsl
pop
int3
xchg
mov
inc
sub
add
outsb
inc
mov
enter
add
insl
repz
inc
in
mov
leave
add
pop
fdiv
inc
ljmp
insb
and
add
xor
pop
sbb
add
push
daa
cli
shll
xor
arpl
mov
pushl
fcoml
add
shll
mov
push
jo
mov
add
fcomi
mov
dec
push
and
arpl
jmp
adc
xchg
or
test
push
les
aas
addb
iret
pop
dec
lock
aaa
pop
push
test
push
movsl
cli
cltd
add
nop
popf
cmp
call
jne
adc
xor
sbb
cmp
int3
movsl
fcomp
lock
lock
rol
and
stc
into
add
les
pop
add
mov
push
mov
jbe
xchg
adcb
loopne
mov
call
pop
mov
shrl
dec
mov
cmc
js
loopne
or
sbb
or
xchg
clc
mov
out
rcrb
cmp
sbb
fs
xchg
mov
das
lock
xchg
dec
je
cmp
ror
add
and
nop
cmp
jle
jge
xchg
fcoms
push
mov
and
jg
jg
popf
add
subb
ds
push
fildl
mov
aaa
add
scas
lahf
jle
sti
jge
push
aad
jecxz
scas
add
mov
xchg
ds
jle
js
and
add
das
mov
pop
jbe
out
enter
add
push
push
daa
jb
int3
inc
xchg
and
das
add
adc
jg
adc
sub
jb
or
pusha
sqrtps
sbb
xchg
sahf
add
inc
iret
xorl
rol
in
add
jecxz
mov
add
pop
lds
scas
enter
add
repnz
mov
sub
out
adcl
imul
jp
std
add
fwait
dec
ret
jnp
xor
xor
sub
add
xor
push
ret
add
mov
lods
mov
xor
xor
jp
lret
jno
lods
dec
pop
inc
jo
xchg
loopne
movsb
jmp
test
ss
pop
inc
xchg
sub
pop
out
arpl
ds
mov
pop
sub
jbe
xor
scas
xchg
js
pop
xchg
push
pop
mov
rorb
fimull
add
icebp
sbb
test
jo
inc
lea
cs
adc
imul
push
incl
or
int
test
xor
into
nop
xchg
add
pop
stos
outsb
pop
mov
je
repnz
cmpsl
insl
add
movsl
jns
mov
cli
inc
les
je
pusha
jle
and
pop
xor
mov
adc
adc
rcrb
or
cmpsb
add
sbbl
loope
mov
add
pop
dec
sbb
fwait
aas
or
jle
cwtl
sti
add
sbb
push
jmp
dec
xchg
push
mov
inc
mov
out
les
insb
xor
cmp
test
or
add
fiadds
jnp
adc
jl
es
adc
xchg
ljmp
add
cmp
fsubrs
push
nop
push
int3
mov
add
bound
das
icebp
adc
js
sub
and
das
movsb
mov
adc
jmp
push
lods
cmp
xchg
std
in
and
mov
bound
adc
xor
jle
pop
sub
adcl
int3
iret
fcomps
dec
push
jnp
xor
xchg
cwtl
mov
ds
js
xor
pop
add
pop
pop
popf
xor
in
popa
mov
mov
add
pusha
add
jge
je
jns
sub
inc
lods
and
mov
add
loope
jns
sbb
xor
data16
add
aaa
dec
ret
shrb
cmpsb
xor
jle
jp
or
xchg
cmpb
xor
sahf
add
mov
add
cmp
or
test
inc
addl
movsb
xor
add
ret
aam
jp
or
xchg
jo
xor
mov
bound
mov
sub
pop
jecxz
mov
cwtl
sub
pop
adc
adc
test
aaa
push
dec
dec
call
testl
push
sub
add
rorb
test
or
rclb
push
xchg
adc
repz
int3
jnp
add
cmp
test
push
loop
xchg
lods
inc
push
test
xorb
rclb
mov
mov
subb
and
addl
mov
cltd
push
lock
jno
jne
shlb
ja
inc
jns
jge
push
mov
sub
dec
mov
stos
add
xor
jno
es
and
pop
or
fnstenv
cmp
pop
pop
jne
out
in
inc
cmp
or
sbb
inc
add
scas
jns
loopne
add
adc
test
and
repnz
je
lret
addl
js
add
push
mov
sbb
mov
adc
cmp
add
pushf
mov
or
test
dec
dec
inc
jle
bound
aaa
sbb
mov
inc
adc
das
jmp
fiaddl
and
pop
pop
sub
xor
mov
cmp
mov
ja
push
jmp
xchg
jg
push
fs
adc
sub
cwtl
int3
mov
dec
adc
jl
mov
dec
or
sub
inc
sbb
je
or
adc
sahf
sub
cmp
pusha
insb
dec
out
push
ret
filds
outsl
jnp
imul
adc
iret
cmp
addr16
rcrb
ljmp
imul
nop
adc
push
call
adc
mov
shrl
mov
test
pop
aaa
mov
mov
xchg
andb
push
and
pushf
adc
lods
jge
lock
cwtl
xchg
adc
lods
sbb
fisubs
loope
mov
outsb
cmp
into
jns
mov
jo
and
xor
xor
jne
and
adc
inc
add
pop
mov
add
outsb
jns
movsb
add
jne
jp
xchg
add
and
sub
es
shlb
test
jns
pop
sub
int
sub
shlb
hlt
in
adc
test
out
mov
sbb
sbb
fimull
fmull
pop
jmp
sub
add
xchg
shrb
mov
mov
and
or
call
leave
pop
inc
cmp
push
add
jbe
add
push
xor
fwait
or
xor
and
or
subl
xor
out
nop
dec
fistpll
jl
pushf
pop
inc
fwait
add
or
call
add
pop
sub
roll
adc
jo
add
test
mov
mov
mov
hlt
add
cli
in
add
js
loop
dec
jle
add
add
dec
cmp
and
dec
inc
lock
pop
setne
icebp
mov
add
fisttpl
push
pop
mov
push
loope
vmovapd
pop
lcall
dec
jg
pop
icebp
xchg
in
loope
mov
nop
aad
mov
mov
cwtl
aam
sbb
cltd
pusha
add
xor
pop
mov
and
aam
xchg
test
xor
adc
pop
adc
stos
addl
xchg
mov
mov
jbe
xchg
xchg
inc
add
inc
push
add
scas
shr
mov
mov
insl
mov
or
test
add
push
push
add
jae
add
imull
xchg
aam
gs
cmp
cmc
subl
inc
andb
scas
psubd
stc
hlt
dec
adc
sbb
mov
lcall
scas
add
ljmp
mov
scas
enter
xor
xchg
pop
jne
add
mov
xorb
insl
je
fadds
sahf
lret
cmc
stc
mov
dec
dec
add
sbb
and
loope
push
ret
sub
cld
dec
dec
xchg
test
loopne
dec
aaa
inc
push
stos
lods
std
sahf
js
in
push
push
imul
mov
gs
cmovae
dec
xchg
mov
pop
add
dec
sub
mov
add
adc
fcomi
int3
lock
and
dec
inc
cmp
mov
dec
fmulp
add
push
mov
std
rcrl
xor
inc
loopne
xchg
mov
test
add
mov
cmc
sbb
stos
sub
cltd
repz
cmp
in
add
clc
mov
add
adc
add
mov
xchg
ret
mov
out
fstps
rorb
loop
pop
nop
sub
addr16
or
lock
pop
xchg
imul
jmp
pop
sub
mov
xchg
fucomp
aad
addr16
data16
mov
mov
push
and
pusha
add
dec
push
dec
sub
add
fadds
adc
or
dec
sbb
pop
pop
pusha
xchg
and
inc
jns
xor
test
shlb
add
and
cmp
out
sub
add
add
push
jnp
test
add
movsb
pop
test
cmc
cld
xchg
notb
push
paddw
dec
stos
mov
xchg
fisubs
jo
sub
cmp
add
xchg
mov
xchg
mov
out
js
ja
sbb
fwait
or
aad
ret
stos
in
jno
out
repnz
jmp
xor
pop
cmpl
adc
add
dec
imul
mov
lea
sbb
ja
fst
pusha
dec
loopne
push
cmp
jle
mov
and
push
lods
push
addb
mov
ljmp
adc
aad
pop
adc
jmpw
push
loope
fcmovb
in
and
mov
loopne
push
jp
add
xlat
fadd
clc
rorb
add
scas
idivb
syscall
jns
lret
inc
fsubl
and
lods
pushf
pop
add
push
das
push
or
inc
les
xchg
push
dec
rcr
ljmp
inc
push
hlt
fsts
sub
push
and
push
add
ficompl
sub
inc
in
int
sti
or
lods
mov
xchg
add
and
nop
stos
lea
clts
out
out
test
cli
adc
movsb
jo
mov
lahf
add
lds
testb
mov
add
mov
mov
sbb
add
je
add
cwtl
sub
push
test
mov
cltd
and
xor
sub
push
jns
add
mov
pusha
push
add
jo
in
or
addr16
or
push
push
cmp
inc
pop
and
add
or
mov
pop
push
ficoml
icebp
dec
add
mov
out
in
cmc
pusha
das
mov
cmpsl
aas
hlt
push
popa
fistps
adc
fmul
bound
add
add
mov
data16
ss
mov
lods
push
imul
mov
rolb
out
pop
fmuls
cli
mov
xor
test
clc
out
fistl
pusha
cli
mov
testb
sbb
pop
sbb
cmp
lgdtl
push
pop
pop
mov
std
xlat
push
or
and
scas
mov
lcall
js
adc
or
push
lea
or
jo
add
jno
addr16
xchg
add
xor
dec
and
int
leave
sub
nopl
hlt
adc
push
xchg
faddl
xorl
mov
por
pushf
push
push
rcr
inc
pop
sbb
pop
shr
add
mov
push
out
movsl
xchg
int
jmp
xor
jmp
mov
in
fldenv
pop
lock
xchg
addb
jae
add
rcll
movsl
fsubs
add
sbb
in
cld
loopne
add
jno
aas
cmp
ret
push
sarb
cmp
sub
adc
adc
xchg
push
fistps
add
xchg
pop
roll
ss
movsl
outsl
aad
add
pop
out
mov
or
dec
out
lock
and
lods
mulps
shrb
outsb
test
jg
lds
cmpb
stos
ss
xchg
lret
cmp
add
and
xlat
aad
sub
add
jnp
hlt
loope,pt
mov
pop
rorb
mov
jns
aam
add
jno
pop
jmp
xor
insb
cli
out
jb
fwait
inc
or
call
fcomp
dec
mov
repz
rol
xchg
xchg
xor
out
stos
lret
sarb
jp
push
lea
movsb
adc
aad
add
test
pushf
movsl
mov
ret
dec
in
push
repz
xor
sub
inc
rcl
pusha
lret
xor
push
gs
fwait
out
sub
mov
lret
sub
sub
cmp
fmul
ret
sub
sbb
mov
cmp
cmpsl
xor
mov
pop
push
or
jno
jae
in
add
popa
imul
fs
jp
jl
mov
dec
and
xlat
add
insl
aaa
mov
cli
pusha
mov
imul
pusha
and
fdivp
or
push
faddl
mov
lods
xchg
insl
les
repnz
popa
cwtl
fwait
adc
sahf
adc
dec
jle
jge
mov
loopne
cltd
shll
dec
jecxz
pop
outsl
mov
xor
in
xchg
pop
jno
jmp
test
movsb
jo
and
mov
nop
idivb
mov
mov
clc
mov
test
ss
std
inc
arpl
jne
int3
ds
push
xchg
iret
sbb
popf
ss
sti
cmp
lds
and
sbb
jnp
adc
xchg
jo
push
daa
stos
loop
add
mov
aam
push
cmp
xor
xchg
rorl
add
dec
movsl
iret
fs
orb
lcall
aas
xchg
je
xor
xchg
adc
mov
add
lods
cmc
aaa
jp
and
test
dec
add
test
aas
imul
fimull
imul
cmc
add
incl
add
or
mov
dec
ds
add
cmp
out
enter
xchg
enter
jg
rclb
pop
cmc
std
scas
add
lds
stos
mov
inc
add
mov
xchg
aaa
popa
rcrl
or
movb
jne
test
popf
adc
lods
sbb
sbb
mov
dec
push
aas
call
cltd
add
clc
repnz
sbb
pop
ja
mov
dec
and
inc
add
pushf
mov
insb
arpl
stos
add
cmp
sarb
push
daa
inc
loope
mov
inc
xchg
jns
arpl
cvtdq2ps
jp
shrb
or
outsb
call
mov
inc
aaa
fimuls
mov
repz
or
outsl
jnp
inc
xchg
and
add
adc
out
mov
dec
add
inc
ljmp
lcall
ficoms
cmp
adc
lock
test
dec
call
fdivrl
xor
out
jp
sub
pusha
adc
popf
or
cltd
ss
movsb
pusha
loope
xlat
jl
invlpg
add
cmc
adc
xchg
fadds
jbe
mov
mov
cwtl
cmp
shl
loop
inc
pop
aam
add
and
mov
jp
xchg
add
push
lea
dec
push
insb
and
push
sbb
inc
pop
sti
dec
ljmp
lahf
jb
lods
sbb
sbb
push
xchg
jp
cltd
lods
daa
je
ret
mov
pop
inc
add
lock
jle
mov
sbb
outsl
in
test
mov
cmp
push
push
add
popf
sub
inc
jbe
cwtl
mov
fs
jmp
push
push
stos
xchg
sbb
add
gs
jp
ret
es
inc
or
mov
push
cmp
jae
and
xor
addr16
push
bound
fisttpll
jg
jg
ja
popf
dec
iret
pop
ljmp
fildl
out
sti
sbb
imul
dec
test
push
sbb
xor
sbb
jmp
das
nop
cld
push
test
inc
cld
sbbb
xchg
cli
cwtl
inc
push
leave
and
mov
loopne
sub
jbe
or
add
aas
hlt
and
mov
push
pop
push
add
lcall
or
and
and
mov
add
or
dec
andl
dec
lahf
mov
mov
inc
push
mov
pop
scas
ret
pushw
jge
mov
sub
or
adc
inc
dec
cmp
mov
add
out
not
or
pop
scas
loop
sbbl
add
mov
pop
jl
dec
jge
cmp
jmp
iret
sub
mov
push
mov
in
inc
add
popf
cli
dec
and
test
stos
and
ds
dec
mov
addl
add
shr
push
inc
inc
wbinvd
or
jle
dec
aad
out
pop
ret
xor
leave
bswap
pop
arpl
movsl
ret
add
push
insb
jle
sarb
or
or
cmp
es
enter
dec
iret
in
pop
adc
jmp
add
inc
outsb
cmp
imul
js
xchg
jo
in
outsl
es
iret
mov
shrl
shrl
cmp
js
subl
stc
popa
lcall
dec
je
out
loope
jo
inc
or
outsb
cs
pop
and
gs
imul
jp
incb
or
push
call
pop
ret
pop
mov
addl
ret
das
add
xor
jbe
cs
fisubl
pop
xor
or
sub
ret
and
inc
push
ret
or
mov
adc
rolb
enter
iret
xchg
add
mov
fisttps
xor
adc
jno
in
push
notl
sbb
cwtl
sub
aam
mov
fstps
cmp
mov
data16
popf
adc
test
movsl
mov
or
add
test
setge
ret
cmp
mov
cmpl
andb
xor
das
sbb
stc
jae
les
inc
sub
push
adc
insl
push
mov
movsb
gs
test
or
xor
imulb
pusha
or
push
ret
pop
ret
xchg
mov
mov
pop
ret
push
sti
inc
sub
sbb
or
in
addr16
push
repnz
adc
add
dec
sbb
xor
mov
cmpsb
sahf
add
xor
mov
rcrb
add
lea
sub
cmpsl
pop
sbb
mov
sub
stos
add
shlb
mov
xor
dec
popl
and
xchg
xor
shll
inc
je
int3
les
mov
and
add
je
xor
cmp
daa
jno
mov
pop
mov
popa
dec
push
jmp
lds
jne
jno
adc
sub
cmp
and
push
fisttpl
or
sbb
add
jecxz
lahf
jl
cwtl
js
sub
or
sub
test
mov
enter
pop
ret
xchg
mov
mov
pop
ret
lahf
cld
mov
jmp
pop
sub
mov
icebp
adc
in
clc
add
test
rep
pop
push
sbb
ret
and
inc
push
ret
lods
in
push
cld
clc
add
scas
nop
ja
orb
mov
imul
push
cmovle
pop
pop
adc
xchg
nop
push
xchg
das
ljmp
ret
je
inc
js
arpl
sbb
mov
add
adc
nop
mov
int
push
scas
sbb
test
pop
sub
and
nop
jle
aaa
addb
ja
lcall
add
movsb
push
push
rdtsc
leave
pop
popa
mov
pop
ljmp
mov
adc
dec
mov
in
and
mov
adc
call
push
negb
jae
outsb
mov
mov
adcb
add
cwtl
rol
cld
mov
jle
mov
mov
adc
push
insl
loopne
movsb
sub
pop
ret
adc
inc
stos
loopne
push
ret
add
mov
and
popf
and
inc
je
sbb
or
push
loopne
lea
shll
xlat
cmp
add
and
daa
adc
js
cld
add
aaa
cmp
imul
jl
enter
dec
and
sub
andb
mov
jno
and
sub
add
pusha
pop
add
inc
sub
push
mov
popa
aaa
sti
ss
cs
adc
xchg
jg
add
aaa
sub
jle
scas
push
xchg
subl
mov
in
xchg
loopne
pop
sbb
mov
jo
cmp
sbb
and
xor
lcall
mov
and
inc
xor
out
fmuls
adc
sbb
add
sbb
int
add
xchg
mov
cmpb
and
loop
sub
sbbl
cmp
inc
jmp
mov
xor
nop
push
or
repz
pop
add
imul
and
adc
test
outsl
int
cmp
ss
mov
sbb
add
push
adc
test
add
sub
inc
add
dec
sbb
sahf
mov
les
xor
xor
mov
push
xchg
xchg
loop
mov
or
push
les
jge
enter
pop
outsb
popf
add
push
mov
mov
ja
xor
xorb
inc
and
inc
and
jae
add
cmp
insl
xchg
cld
in
in
adc
sub
adc
xor
and
lea
push
mov
ret
lods
xchg
xchg
inc
push
test
inc
call
sub
cmc
out
add
in
pop
pop
mov
aam
push
pop
sbb
subps
iret
daa
add
inc
mov
popf
add
orb
nop
adc
mov
add
scas
jb
scas
and
mov
mov
xchg
sub
add
stos
insl
mov
sahf
push
fwait
in
xchg
cmc
push
jo
pop
imul
sbb
popa
sbb
pop
add
addr16
push
push
cmp
and
pop
mov
xchg
xchg
or
fistl
xchg
jbe
sub
sub
adc
hlt
lret
aad
js
xor
shrb
mov
outsl
push
test
insl
inc
cs
adc
add
out
mov
lds
loop
out
enter
push
sub
jnp
cld
stos
xchg
adc
push
add
int3
pusha
mov
call
bound
aam
pop
adc
or
mov
lea
sbb
jb
call
sub
lea
and
inc
in
push
pusha
add
mov
cmc
pop
pop
cmpsb
xor
into
lock
mov
xor
js
test
add
xchg
lods
popf
sbb
sbb
dec
es
dec
jno
ret
xchg
mov
cltd
mov
add
out
fcompl
cmp
jecxz
ret
inc
out
mov
movsl
adc
js
into
and
clc
fldcw
or
sbb
xor
inc
add
mov
push
push
push
fwait
sub
subl
cli
mov
add
popf
push
and
test
add
mov
lods
in
sbb
aam
fildl
or
js
rolb
sub
dec
mov
mov
xor
int
loopne
xchg
leave
xchg
dec
aam
cmp
sar
fldl
dec
insb
add
xor
and
sbb
cmovge
mov
test
les
repnz
or
dec
mov
les
push
sbb
adc
cmp
faddl
push
daa
dec
push
xor
nop
and
sub
cltd
imul
push
faddl
test
ret
add
and
lcall
cs
outsb
or
xchg
pop
adc
mov
mov
lret
movb
jb
ficomps
jae
push
cmp
lea
pop
inc
adc
sar
lea
push
cmp
mov
ljmp
inc
cmp
daa
ficompl
int
add
mov
pop
mov
jae
shlb
pop
jne
push
xor
scas
fdivr
pop
add
sti
push
cld
xor
dec
mov
xchg
loopne
lods
xor
mov
je
add
mov
shr
clts
fdivs
add
repz
add
jne
xor
enter
aad
not
add
mov
rol
in
aam
cmp
shlb
add
pushl
movb
es
add
sahf
mov
xor
clc
pop
jg
shrl
ljmp
mov
fwait
xor
js
dec
popa
or
sbb
mov
mov
loopne
adc
xchg
add
or
rcll
and
sbb
xor
sarb
mov
lock
mov
loopne
stc
xchg
xchg
push
dec
call
jns
lods
imul
into
mov
pop
add
mov
push
or
loopne
inc
jne
or
or
jno
sbb
push
xchg
sbb
jbe
sub
lret
inc
mov
and
rolb
inc
sub
jle
divps
jge
xchg
mov
add
nop
scas
sub
adc
jge
add
dec
fiadds
popw
fsts
xchg
shll
push
int3
mov
pushf
mov
cmpsb
aas
xchg
stc
fs
not
mov
cltd
cld
push
jmp
lea
mov
pusha
call
push
inc
fwait
pusha
andb
mov
pop
add
xor
mov
sub
je
jne
pop
xor
mov
dec
shlb
pop
hlt
cs
aam
sar
lea
popa
repnz
rolb
sub
cld
pop
mov
clc
insl
cld
and
sub
pop
sbb
call
push
mov
sub
mov
mov
jo
idivb
pop
int3
mov
jno
push
call
test
call
mov
xor
sahf
or
cmp
add
filds
pop
sbbb
or
rclb
xorps
push
and
add
jge
or
add
dec
dec
push
out
leave
jmp
cmp
jb
sbb
inc
jae
jnp
sbb
jae
adc
adc
pop
pop
pop
pop
leave
popf
xchg
orl
dec
mov
add
mov
lock
jecxz
mov
jmp
pusha
push
sub
and
popa
out
call
add
sbb
add
cld
lock
pop
int
shlb
add
stos
or
sub
add
ret
inc
sbb
cmp
punpckhdq
mov
cmc
test
pop
add
xchg
scas
out
jae
pop
scas
pop
xchg
sbb
inc
stos
and
jne
push
pop
and
gs
loopne
pop
aas
dec
lods
mov
daa
ljmp
add
jae
imul
stc
inc
pop
xor
insl
mov
mov
xor
dec
add
insl
jp
push
pop
dec
popa
out
outsl
shr
insl
adc
fcmovne
mov
lret
inc
jl
jae
mov
inc
sub
imul
out
jp
and
rcrb
jns
mov
mov
repnz
sub
or
sub
sbbb
test
loop
sar
es
movsb
lock
mov
movl
ss
mov
add
lods
cwtl
test
test
pop
nop
pusha
jl
push
pop
test
xor
xor
mov
mov
nop
fiadds
pusha
xchg
int3
inc
add
test
mov
lea
das
or
in
pop
xchg
aam
inc
nop
imul
jmp
add
ret
cmp
nop
sub
mov
outsb
repnz
nop
mov
repz
sbb
das
fnstsw
inc
inc
xor
rcrb
rcrb
in
mov
mov
imul
pusha
mov
leave
cmp
jns
out
dec
cmpb
and
imul
mov
sbb
pusha
or
fdivrs
sbb
enter
hlt
mov
push
and
sub
mov
inc
or
out
add
mov
mov
movsb
movsl
or
in
roll
adc
aaa
inc
add
je
ret
cmp
adc
xor
xchg
pop
inc
add
mov
mov
pop
or
das
sbb
push
sbb
mov
mov
rcrb
aas
add
mov
movswl
adc
inc
mov
add
pop
mov
in
push
mov
imul
jns
daa
std
ret
sub
xchg
insb
adc
fs
cmpb
shll
or
cmc
or
and
movsb
sti
fwait
jo
or
push
repnz
mov
mov
pop
mov
mov
sarb
inc
mov
sub
pop
xor
cmp
push
mov
pop
mov
gs
ror
add
cmc
es
sbb
and
in
jmp
push
and
loope
mov
in
inc
scas
lock
popa
int3
mov
sbbb
ret
in
jecxz
pusha
stc
lret
push
mov
ds
xlat
daa
mov
add
xchg
sub
cltd
call
popa
rorl
das
and
jp
pop
fdivrl
iret
cmp
mov
dec
pusha
std
call
pusha
and
push
xor
sub
cmp
fstps
movl
xlat
shlb
dec
pushf
cmpsb
or
and
jge
dec
and
add
ret
adc
movsl
aaa
jae
add
imul
jg
dec
add
push
dec
sub
xchg
mov
test
adc
mov
dec
or
pop
jp
shl
jmp
enter
mov
adc
fisubl
mov
sbb
mov
and
sbb
mov
sub
sti
sub
movsl
insb
es
stc
pusha
lds
pop
jg
xorl
nop
add
xor
add
rorl
sbb
pxor
push
dec
or
adc
sbb
pusha
sbb
add
add
inc
xchg
xor
ds
popa
insl
adc
call
add
int3
lock
push
and
aas
push
push
fs
rorb
inc
shrl
lods
pop
mov
mov
sahf
pop
and
inc
mov
push
stos
lcall
xor
adcb
mov
cmpsl
stc
aaa
filds
lret
xor
mov
or
popa
addl
push
inc
jl
pop
fs
movsl
loope
jg
nop
sbb
fisubrl
pop
scas
adc
dec
inc
ss
loop
mov
in
add
sarb
or
mov
outsb
scas
outsl
dec
cmc
push
jbe
loopne
mov
add
rorb
pop
fwait
xor
pop
fdivrl
mov
or
mov
cwtl
scas
sub
test
adc
fcomp
dec
lods
stos
cwtl
stos
pop
js
in
jne
add
xor
xchg
leave
sub
or
popa
lds
mov
mov
mov
lock
imul
xor
aas
jp
lahf
mov
sarl
push
sbb
test
jp
sub
mov
or
mov
sbb
test
push
jle
cs
gs
mov
ret
test
xor
lahf
aaa
xchg
jo
icebp
xchg
mov
in
dec
ret
pop
fiadds
test
test
ret
xor
and
dec
stos
or
inc
fs
imull
aas
mov
sbb
push
cld
jo
xchg
lods
orb
inc
into
adcb
sub
hlt
shll
popa
mov
lcall
cs
data16
les
pushf
icebp
sbbl
movswl
add
in
push
cs
jg
add
shlb
adc
mov
adc
and
icebp
cmp
ss
mov
add
mov
into
mov
aaa
fwait
call
iret
lock
xor
clc
pop
cmpl
add
or
cli
aam
mov
mov
jmp
insl
and
or
divl
xor
cmpsl
mov
pop
fsubs
bound
sub
dec
gs
popf
push
push
and
dec
xchg
add
icebp
aas
mov
lock
jmp
inc
sub
add
gs
mov
and
ljmp
push
addb
mov
jne
pop
add
scas
xlat
inc
cmp
pushf
sbb
jl
mov
add
es
ds
mov
mov
add
sbb
mov
adc
mov
jl
pop
xor
pop
movsb
push
add
cmpsb
fldl
lods
push
and
pop
jp
popa
fcompl
sbb
imul
jns
out
pop
inc
add
inc
movsb
scas
xchg
mov
mov
mov
sbbb
jnp
lahf
jno
push
out
and
jmp
mov
jge
scas
call
fidivrl
mov
cltd
add
iret
inc
repz
dec
mov
andb
testb
xchg
pop
jl
icebp
lret
xorl
jp
xchg
add
mov
popa
adc
gs
dec
add
mov
nop
jl
add
add
inc
mov
add
xchg
repnz
push
out
addl
jnp
dec
jo
and
add
loopne
sub
out
push
and
or
ds
or
and
lock
xchg
call
adc
adc
mov
or
jbe
mov
pop
and
fists
in
dec
and
add
cmp
ds
add
test
dec
aad
add
out
mov
inc
add
mov
inc
sub
lahf
sti
add
test
add
cltd
mov
and
sbb
imul
addb
add
mov
dec
and
inc
ret
pop
mov
xchg
mov
mov
mov
add
xchg
in
mov
dec
adc
inc
xor
cmpsl
movsb
fs
xchg
mov
add
xchg
or
push
mov
lcall
cmp
jecxz
push
arpl
add
or
jns
sub
inc
ret
xchg
cwtl
mov
int3
mov
add
je
pushl
or
push
add
rolb
jl
push
add
in
ljmp
inc
push
mov
push
rcll
lahf
xor
scas
lret
loope
jb
fwait
test
add
inc
add
xchg
xchg
fsubrs
add
test
rorb
push
add
add
aas
inc
cmc
sbb
and
sub
fwait
sub
jns
push
test
insl
add
aad
add
add
lret
clc
pop
nop
stos
sbb
pusha
mov
ds
lods
insb
xor
sub
testb
mov
inc
js
out
add
pushf
sbb
adc
ds
cmp
in
cmp
nop
inc
push
mov
aas
dec
add
fnstsw
adcl
rcl
xchg
mov
jnp
addr16
dec
sbb
call
rcr
jb
adc
outsl
mov
pop
aad
inc
add
loop
cli
imul
cmpsl
rolb
leave
add
stc
into
adcb
jl
or
or
jecxz
mov
and
mov
popf
loop
push
xlat
xor
dec
jnp
cmp
add
mov
xlat
cltd
pop
dec
mov
and
cmp
add
nop
popa
mov
cwtl
lret
push
dec
and
xchg
xchg
or
fmull
inc
sbb
push
and
xlat
add
lea
add
pop
or
out
jbe
loopne
dec
out
add
lods
cltd
icebp
add
xchg
in
ja
and
jl
add
mov
sarb
mov
jo
push
mov
pop
push
inc
outsb
push
mov
inc
add
and
call
jle
and
xor
pop
xlat
and
pusha
xchg
inc
xchg
or
fmul
push
fisubs
add
lret
xlat
pop
loopw
adc
mov
xor
test
int
das
jnp
in
jmp
adc
xchg
add
inc
xchg
cwtl
sub
inc
leave
push
and
mov
rcll
es
add
rol
or
lcall
movsb
push
stos
outsl
std
xor
adc
lcall
add
fnstenv
sbb
iret
inc
push
inc
cmp
ret
addl
shlb
dec
test
cmp
add
mov
test
js
popf
add
test
add
lods
insl
addl
sarb
push
dec
and
add
and
mov
mov
push
pop
inc
in
mov
cltd
push
je
nop
jo
cmp
lea
sub
add
fs
cmp
outsl
dec
add
int
jge
add
cmc
sbb
add
mov
adc
idivb
aam
pushf
add
sub
imulb
dec
loopne
rolb
xchg
add
decl
rorl
xchg
cld
fildl
and
xchg
sbb
cmp
shrl
or
loop
shl
mov
inc
rorb
popa
add
jae
fs
ret
jl
sub
repz
add
pop
jmp
and
pop
shl
lods
add
xlat
add
test
into
push
mov
pusha
mov
jb
insb
dec
xor
push
dec
call
fistpl
push
pop
mov
cmp
mov
repnz
push
popf
in
je
orl
push
jmp
sub
clc
stc
add
xor
adc
add
leave
lock
and
scas
jo
mov
imul
out
data16
jne
cmp
and
cmpsb
jnp
push
stos
mov
mov
cmp
cmp
imul
jmp
jae
or
mov
inc
add
xlat
sub
std
and
dec
add
adc
nop
sub
and
add
adc
subb
add
lock
loope
jne
bound
addr16
cmova
les
clc
adc
fwait
addl
pop
idiv
sbb
fimull
mov
add
scas
out
or
cmp
stos
adc
xchg
je
mov
sti
sub
add
out
add
dec
xchg
add
inc
enter
inc
push
mov
rol
ret
in
jge
mov
push
jmp
insb
xchg
out
add
roll
cmp
inc
push
mov
sarb
add
lcall
pop
sbb
inc
jp
xchg
cmp
aad
jns
ss
lods
xor
jne
cmp
cmpsl
xchg
andb
jo
rolb
pop
repnz
fadd
sar
repz
sub
cmp
jo
pop
stc
jns
movsb
inc
lods
jl
add
insb
fnstsw
push
add
loopne
or
xor
aam
add
jbe
fucomip
clc
add
ret
scas
lock
in
movsb
or
testb
cltd
test
jnp
mov
pop
mov
cmp
jne
add
shrl
adc
les
xchg
scas
sbb
fdivs
jae
add
mov
movsl
mov
inc
inc
pop
cmp
pop
subb
add
ret
cs
pop
xchg
mov
popa
inc
cmpsb
rorl
ds
das
fdivl
mov
loope
push
jnp
adc
jmp
mov
leave
mov
je
in
pop
into
jo
incl
movl
cmp
les
add
fs
testl
jns
aas
hlt
and
mov
cli
jge
mov
push
fmull
inc
pop
ja
add
jp
das
adc
push
lock
xchg
cmp
mov
xor
movsb
mov
cld
dec
inc
add
or
cmp
cmp
xor
xchg
int3
pop
call
mov
or
pop
andl
inc
loopne,pn
xchg
inc
loope
and
shr
cmpb
js
outsl
push
pop
testb
lods
loope
add
ja
aaa
jle
xor
sub
iret
push
fdivs
cmp
jb
sbb
mov
adc
mov
mov
cltd
in
or
clc
jle
jecxz
pop
push
xor
xchg
pop
xchg
and
add
test
sub
addl
andb
add
pop
psubq
mov
push
and
js
add
notl
pop
imulb
or
sbb
mov
cmc
bound
imul
jns
ja
mov
jo
add
inc
mov
movsb
add
lods
xor
imul
xchg
xchg
iret
push
daa
jecxz
test
ret
or
push
pop
frstor
xor
mov
pop
shll
repnz
out
lret
sbb
pop
add
cs
add
push
pop
pusha
add
add
aaa
xchg
iret
jp
flds
hlt
rcrl
movsl
xchg
sub
roll
xchg
out
bound
push
add
fsubs
add
jb
roll
js
jno
jmp
fists
fcompl
adc
push
dec
add
adcl
add
inc
loopne
ljmp
add
nop
xor
jns
or
add
shrl
lcall
push
pusha
rolb
add
stc
stos
pop
add
rorb
pop
jbe
pop
mov
aam
and
insb
fcomps
clc
icebp
push
sbb
addr16
dec
and
cmp
int3
adcb
pop
loop
clc
pusha
cmp
mov
stos
arpl
stos
punpckhwd
sbb
mov
jnp
loop
push
dec
daa
clc
mov
into
xchg
sub
and
pop
repz
cs
xchg
enter
inc
ret
stos
mov
push
aad
add
push
js
lock
or
add
mov
adc
pop
in
xchg
insl
out
sbb
jae
in
enter
pop
adc
and
sbb
fldenv
test
or
add
xchg
push
aaa
add
or
in
xor
xchg
xorb
mov
dec
add
sbb
sbb
add
call
jno
pop
pop
pop
push
dec
add
ljmp
pop
aam
pop
clc
je
ds
add
mov
sahf
xchg
dec
xor
lock
pop
cmp
call
mov
stc
nop
mov
push
imul
push
pop
enter
push
cmp
jbe
add
jge
pop
pop
out
add
in
push
es
or
sub
add
mov
inc
pop
xchg
int3
sub
mov
sub
lds
negb
xchg
push
lahf
add
fnstcw
cmp
xor
ljmp
inc
mov
dec
mov
in
das
cli
xorb
and
test
mov
fidivs
jo
mov
dec
inc
ljmp
sub
add
inc
and
mov
nop
jne
scas
add
mov
mov
ret
sbb
call
adc
div
and
pop
xor
sbb
es
mov
int3
xchg
push
loopne
and
add
lret
add
dec
stc
or
xchg
fnstcw
ljmp
out
sub
outsb
sbbb
cmp
pop
loop
xchg
rol
and
addb
int
flds
fwait
add
outsl
pusha
rorl
fisttpll
mov
sti
inc
adc
int3
pop
cmp
push
nop
xchg
nop
hlt
cld
push
mov
xchg
pop
inc
xor
sbb
jnp
add
inc
fwait
xchg
add
mov
cltd
mov
cmp
cmc
dec
mov
add
adc
add
jae
movsl
add
js
je
jle
jmp
cmovl
add
pop
add
adc
or
lds
xchg
shlb
sbbb
add
fsubrs
and
add
xor
rcll
xchg
mov
clc
testl
or
pop
dec
shr
sbb
xchg
mov
enter
add
lcall
inc
adc
push
adc
inc
add
sub
fnsave
mov
pop
dec
add
mov
xor
sbb
fistl
adc
pop
pop
ljmp
sbb
cli
je
add
in
stc
pop
jl
out
add
popa
push
xlat
jge
push
test
in
add
jb
push
adc
sahf
add
ret
test
pop
test
daa
pop
sbb
add
xchg
add
fstl
data16
inc
adc
or
and
adc
sbb
mov
pop
mov
inc
pop
or
xorl
pop
dec
jecxz
add
frstor
pop
push
clc
nop
insl
incl
xorb
adc
fnsave
mov
add
int
loopne
lds
icebp
imul
sub
mov
sbb
pusha
inc
mov
sbb
loopne
cwtl
stc
rcl
add
loope
ljmp
or
daa
mov
inc
rcl
insb
xor
jg
ss
in
out
jp
mov
mov
jl
addl
idivl
add
mov
jnp
adc
jo
pusha
mov
lret
add
leave
add
in
dec
add
xorl
ljmp
loopne
aas
cld
cmpsl
ja
push
negb
add
push
arpl
mov
mov
adc
cld
add
fcoms
xchg
scas
sarb
scas
movlhps
ja
shlb
or
xorb
out
cmp
add
lds
pop
movsb
popa
add
push
cmp
andl
mov
lods
inc
rol
lea
push
push
jns
sub
test
xor
or
fisttpll
mov
addb
lahf
xchg
cmp
pop
xchg
orb
push
cmp
xchg
and
add
test
adc
fwait
push
icebp
and
push
add
mov
nop
add
adc
adc
iret
pop
push
jo
test
sbb
dec
inc
pop
mov
rclb
pop
fcom
add
clc
nop
ja
sub
fldt
sbb
or
push
push
repnz
out
aad
into
mov
adc
std
lds
or
movsl
jnp
shrb
iret
fldl
jmp
xchg
pop
subb
lcall
mov
dec
stos
stos
pop
bound
test
push
aad
add
and
push
adc
add
xor
pusha
repz
cmp
cs
xchg
xchg
call
cmp
sbb
add
add
jb
pusha
jle
add
sbb
add
jp
jl
mov
jns
addb
jae
shlb
lods
add
push
arpl
sub
cmp
mov
mov
jmp
ret
lcall
aam
dec
add
push
insb
int
or
or
push
stos
mov
push
aam
scas
es
pop
mov
mov
popa
loope
jne
add
out
push
outsb
lcall
mov
or
sub
pop
dec
hlt
sbb
sbb
add
cmp
push
es
scas
lods
add
inc
loop
cmp
js
es
mov
adc
pop
add
cmp
fiadds
or
adc
xchg
or
pop
cmp
push
dec
lods
lahf
dec
xor
inc
cwtl
or
mov
in
sbb
pop
sbb
add
cltd
into
pop
xorb
or
mov
or
pop
jecxz
pop
daa
out
mov
inc
adc
cmpsl
in
mov
pop
clc
xchg
js
imull
sarb
dec
mov
popa
roll
fnstenv
add
xchg
or
hlt
add
js
xchg
loopne
rclb
fdivp
xlat
cmc
dec
nop
cmp
pop
jp
aaa
int3
and
add
inc
pop
sbb
stos
sbb
and
dec
sub
insl
push
add
sti
jecxz,pt
mov
sub
dec
dec
add
add
adc
adc
pusha
adc
in
jno
adcb
add
and
je
add
adc
int
lods
enter
xchg
outsb
cmp
and
loop
pop
xchg
xchg
ret
mov
cmp
jp
jnp
leave
mov
mov
mov
xor
inc
in
pushf
inc
adc
cmovns
fs
lods
push
or
inc
fdivl
adc
or
adc
sbb
sbb
bt
push
ja
add
arpl
pop
pop
or
mov
add
lahf
sbb
es
ror
roll
mov
out
sti
push
in
ror
xchg
ret
fistpl
jnp
inc
pop
mov
xor
xor
pop
cmp
cwtl
add
mov
push
pop
sub
dec
add
adc
push
add
mov
fst
jp
mov
dec
movq
int3
add
cmpsb
inc
lods
mov
add
ss
or
stos
test
scas
jns
addb
push
mov
push
add
sub
lock
and
jecxz
add
sub
clc
outsb
add
sub
test
jbe
sub
adc
repnz
xchg
add
sub
add
fsubr
ficomps
popa
das
lcall
inc
xor
add
insb
aaa
push
paddb
es
mov
loopne
pop
add
pop
adc
int
dec
lods
push
cmp
iret
or
pop
sbb
repnz
loopne
dec
ret
xchg
push
bound
inc
arpl
movsb
push
add
je
mov
sub
mov
pusha
out
testb
jo
add
or
rcrl
iret
jp
adc
pop
outsl
pusha
lcall
and
jo
pop
sub
insl
add
cmp
mov
in
dec
addb
sub
xchg
xor
pop
stos
adc
test
xchg
xchg
add
js
ja
and
fiadds
sbb
pop
in
shl
test
lods
js
fldl2t
dec
mov
add
push
std
nop
mov
ds
imul
add
push
add
sub
outsl
roll
and
out
adc
shll
xchg
sbb
mov
pop
adc
mov
movsl
nop
ja
loop
add
insl
inc
arpl
cmp
inc
shlb
mov
push
out
aad
push
inc
jb
divl
add
int
inc
add
jp
mov
push
add
cmp
adc
sti
out
mov
and
sub
std
xor
or
add
xchg
xor
out
insl
insb
mov
push
add
or
add
jno
insb
mov
shlb
cmp
pop
cli
push
out
fbld
ds
xor
jne
into
jp
cli
es
fldl
inc
push
or
pop
lods
mov
imul
lcall
sub
aam
push
add
loopne
adc
enter
jg
xchg
imul
lcall
jle
scas
emms
cli
push
mov
fidivs
xchg
int3
sub
sub
or
sbb
sahf
lret
pop
sbb
in
pop
sub
sbb
add
lds
test
sbb
ret
inc
add
pop
lret
mov
push
test
aas
adc
add
xchg
pop
cmp
xchg
loopne
lret
xor
mov
stos
fstps
cltd
addb
push
lods
add
xchg
test
jp
shlb
xorb
add
aaa
insb
mov
scas
ret
xor
cmp
cmp
mov
and
mov
je
push
adc
sub
push
pop
mov
jns
jle
cmpsl
pop
add
pop
add
adc
cmp
movsb
and
add
xchg
adc
cmp
dec
cmp
xchg
adc
in
pusha
adc
jg
jmp
jne
sub
in
mov
jo
sbb
cmpsl
roll
in
or
shlb
testb
test
and
rcrl
mov
lahf
outsb
jmp
jae
xchg
pop
ret
movntq
out
jecxz
nop
add
fcomps
lds
test
nop
inc
pop
scas
xchg
inc
shll
cs
push
cmc
add
add
xchg
test
lods
and
lahf
outsl
adc
mov
popl
cltd
mov
lods
dec
fisubl
cmpl
repz
mov
jmp
xchg
jnp
push
cmp
rcll
pop
pop
ds
aaa
pop
add
dec
int
cltd
add
fwait
in
inc
fildll
loope
pop
aaa
sbb
rolb
nop
mov
popl
rcrl
inc
fcmovb
mov
xchg
nop
dec
cmpsl
and
lock
cmp
mov
repnz
aas
and
jne
inc
pop
inc
ret
call
xlat
xchg
add
jg
inc
cmpsb
and
jnp
cmp
mov
push
adc
dec
sub
stc
mov
sarb
inc
sub
cmp
mov
pushf
xor
test
or
ja
push
mov
push
mov
outsb
dec
cli
inc
push
pop
mov
inc
ljmp
not
add
fwait
mov
fnstenv
push
movsb
or
stc
cmpsl
jl
push
hlt
nop
push
add
lcall
push
jp,pn
in
sbb
fwait
das
cmc
xchg
cmp
out
mov
shrb
fwait
cwtl
aam
push
mov
imull
nop
int
stos
mov
ret
adc
loopne
loope
or
cmp
hlt
add
pushf
mov
add
xor
fildl
mov
in
or
or
xchg
pop
repz
mov
jnp
mov
in
pushf
push
loopne
add
lahf
out
aaa
pop
jnp
add
push
mov
out
jmp
add
pop
sub
mov
in
cmp
int3
xor
xor
and
push
sub
adc
call
and
pop
int3
pop
and
push
mov
pop
fisttpll
mov
push
cmp
dec
cwtl
xchg
cmc
pop
mov
add
mull
mov
jl
cmp
adc
and
into
cmp
psrad
cmp
ret
adc
pop
pushf
add
mov
xor
sub
mov
pusha
lahf
sbb
pop
mov
lea
icebp
in
call
inc
sahf
mov
shlb
cmc
lahf
aam
mov
stc
adc
xchg
rcl
add
adc
jno
jecxz
mov
jnp
fnstcw
mov
push
xchg
out
fadd
in
and
in
and
jmp
andl
push
add
pop
ficoms
pop
mov
shl
pop
leave
jmp
and
repz
testl
ror
movsb
cwtl
inc
add
xchg
daa
jno
cmp
mov
aad
push
hlt
testl
fsubl
and
rcrb
fcomp
jae
ret
sbb
std
jno
xchg
cs
sbb
or
jnp
pop
shl
mov
clc
add
ret
fwait
jbe
add
out
dec
mov
mov
in
xchg
mov
add
enter
jne
mov
jae
add
je
dec
stc
loop
inc
jl
pop
pop
adc
out
xor
cmp
and
xor
mov
lock
aas
test
xchg
and
mov
scas
add
imul
ret
sbb
aas
inc
xor
icebp
test
enter
push
cmp
and
mov
popa
jo
pop
js
sbb
cld
leave
rcrb
xchg
adc
clc
jle
shrl
test
cmc
out
lret
pop
push
and
les
xor
sub
jmp
xchg
popf
roll
sbb
sbb
repnz
inc
cmp
das
jbe
cs
xor
mov
or
lret
adc
push
sub
mov
iret
mov
cwtl
ret
lds
sub
jb
sbb
xorl
cmc
add
shl
xchg
mov
add
outsb
cmpsl
movsb
clc
cmp
lock
add
inc
add
jnp
add
fstl
scas
sbb
mulb
push
pop
mov
add
add
addr16
sbb
das
test
sbb
inc
sub
or
sbb
cmp
inc
xchg
cmpsb
cs
movsb
add
dec
ficomps
dec
xchg
mov
add
fisttpll
cwtl
pop
mov
xchg
ds
inc
add
pushf
ret
push
add
into
cmc
xchg
mov
dec
sbb
es
cli
jb
adc
sbb
sbb
jp
xlat
dec
addr16
mov
hlt
imul
mov
add
mov
cmp
rcrl
adc
add
sbbl
popf
xor
insl
or
test
shlb
xchg
xor
scas
xor
jbe
or
pop
and
xor
dec
add
mov
sbb
dec
sub
loopne
and
insb
jbe
add
sub
add
icebp
mov
and
cmp
cmpb
push
cs
out
das
aam
pop
jns
fcoml
mov
add
push
aad
sub
fiadds
mov
mov
cld
push
dec
jb
add
jns
scas
cld
lock
stc
jg
aas
jmp
lahf
lret
fsubrs
daa
std
and
or
movsl
or
sbbl
nop
add
add
das
out
jns
int3
or
jo
or
adc
test
sarl
mov
daa
arpl
jo
ds
add
pop
inc
jg
pop
or
xor
stos
jno
fsubr
or
out
mov
and
rcll
jge
pusha
lods
push
adc
add
jp
xchg
sti
in
push
jno
jns
adc
je
jl
lods
xchg
sahf
push
sub
sbb
add
mov
or
add
mov
adc
sti
sbb
les
fistl
rcrl
or
nop
push
xor
jne
and
push
out
mov
dec
filds
mov
rcll
fsubrl
mov
and
lods
mov
repnz
orl
add
es
and
sar
ja
daa
dec
add
aam
jge
in
xchg
and
mov
sub
stos
mov
sbb
ljmp
seto
popa
addb
dec
dec
lret
fisubs
test
dec
imul
jo
call
cmpsw
std
pop
lds
dec
cli
ret
leave
pop
es
cltd
sbb
inc
inc
or
xor
or
aas
inc
pusha
inc
fildl
push
adc
pushf
mov
add
movsl
dec
ret
dec
pusha
and
fsubrs
inc
fldenv
outsb
outsl
ret
shll
bound
or
lods
add
cwtl
into
test
movsl
lock
inc
or
pushf
in
shlb
add
outsb
ret
inc
das
rcrl
les
dec
xlat
inc
cmp
xor
std
fnstcw
push
loop
xchg
mov
add
fwait
sbb
lock
cs
xchg
loop
cmp
add
cwtl
inc
popf
sbb
js
mov
cli
xchg
or
pop
pushf
xor
sbb
sbb
addr16
mov
mov
mov
jp
repz
xchg
sbb
push
sub
clc
shrl
or
inc
movl
add
lods
push
leave
xor
cmp
or
or
stc
adc
add
jae
add
sarb
test
shrb
add
rorb
loopne
andb
push
pusha
add
add
adc
sahf
movsl
mov
adc
clc
popf
pop
xchg
cmp
dec
mov
loop
dec
ret
and
or
popf
mov
rolb
mov
dec
ret
out
in
and
adc
mov
xor
sbb
pop
dec
movl
dec
xchg
fadds
mov
or
cld
sub
stc
clc
sbb
andb
xlat
mov
pop
push
mov
adc
clc
mov
push
scas
sarl
les
adc
jns
mov
cmp
movntq
out
pop
shlb
fisubs
push
jnp
add
test
pshufw
add
add
das
cmpsb
push
jns
mov
cmp
cmp
add
cltd
mov
pop
xchg
push
rcll
enter
nop
shll
pushf
add
das
mov
or
data16
andb
cmp
idivb
repnz
dec
mov
in
or
ret
pop
pusha
mov
cltd
jne
add
add
or
adc
popa
insb
lock
test
add
nop
lods
js
insb
cmp
or
adc
or
add
mov
pop
out
and
es
int3
xchg
push
orb
push
xorl
and
sub
aam
xchg
clc
dec
test
adc
test
dec
xchg
xchg
pusha
aam
adc
or
adc
push
pusha
sbb
addr16
and
mov
addr16
push
and
add
mov
imul
and
jns
dec
sub
cmp
sbb
add
xchg
push
daa
dec
inc
jnp
jns
movsl
daa
add
mov
xor
dec
rolb
jmp
push
popl
or
in
xor
and
adcb
or
cmpsb
stc
rorl
pop
call
inc
lock
in
mov
ds
movsl
push
add
lahf
lret
hlt
iret
rorb
bndstx
push
pop
mov
mov
ret
add
sub
and
and
xor
lock
into
inc
or
lea
rorb
loope
adc
dec
or
rorb
je
add
sbb
rolb
add
pushf
mov
jo
lods
jo
adc
cmp
add
cmpsb
mov
call
test
xchg
jo
cmp
cs
dec
test
nop
mov
pop
add
je
xchg
push
iret
sbbb
jno
add
cmpsl
xchg
daa
and
rolb
aas
adc
push
xor
adc
sbb
adc
repnz
sbb
xor
jbe
aas
sub
cwtl
fildll
or
dec
mov
je
and
adc
xchg
push
or
iret
repz
pop
int
cmpsb
sub
cmp
jge
sub
pop
mov
mov
test
inc
nop
mov
mul
add
push
xor
mov
cld
sbbb
loope
jne
js
lods
add
mov
fwait
push
rolb
sti
scas
js
stos
inc
loopne
sarb
addl
bound
mov
sbb
int3
pop
adc
mov
scas
or
cwtl
adcl
mov
imull
inc
sub
fdivrs
jle
les
les
sub
and
mov
rol
sub
rcr
jge
and
cs
sbbb
adc
in
or
cmp
cmp
sarb
call
xchg
mov
aaa
cmpsb
filds
jae
pop
stos
cmp
jp
loopne
and
popf
xchg
sarl
ja
dec
inc
rcr
push
and
nop
js
movsb
outsb
adcl
adc
xor
cmp
and
add
mov
in
test
add
mov
aam
or
std
pushf
push
add
pop
arpl
sub
xor
push
add
adc
sub
jmp
call
cmp
cmc
das
push
inc
shl
test
push
std
adc
adc
sbb
xor
test
outsl
not
flds
test
lahf
or
mov
movb
add
das
in
xchg
rorl
js
mov
cli
in
xor
xor
or
das
push
cmpsl
fs
push
add
call
shlb
mov
add
jecxz
inc
or
fadds
mov
clc
mov
xchg
add
inc
xor
adc
or
xchg
adc
mov
push
fisubl
mov
sti
lods
xor
js
pop
adc
sub
outsl
test
test
iret
dec
pop
rolb
mov
aaa
int3
imul
push
sbb
mov
and
test
mov
cmp
addr16
mov
pop
and
mov
cld
dec
daa
icebp
aad
insb
inc
sbb
stc
hlt
dec
vpavgb
movsl
popf
out
and
jge
jmp
je
inc
sbb
pop
inc
int3
add
rclb
and
movsl
pop
psraw
jp
jae
push
dec
mov
dec
sbb
dec
test
adc
daa
pop
xor
mov
hlt
js
je
insl
in
inc
adc
inc
inc
enter
pushf
push
sbb
movsl
sbb
sbb
sarl
adc
and
sbb
popa
cs
in
stc
mov
dec
sti
sbb
cld
pop
enter
fucomip
sbb
ret
or
pop
jae
cwtl
sub
add
adc
imul
insb
jg
cmp
sub
fsubrs
sub
add
xor
push
loopne
js
jae
sub
sbb
and
insb
cmc
stc
mov
pusha
push
mov
test
xchg
punpckldq
loopne
adc
movsb
in
xor
test
imul
sbb
push
int
push
fimull
loop
and
inc
sbbb
pop
orb
pushf
pusha
flds
jg
pop
cwtl
cmpsb
xor
repz
mov
or
loope
repnz
arpl
stos
pushf
and
test
addr16
jg
mov
pop
js
in
nop
popa
xchg
fcoms
sbb
pop
xor
je
lcall
mov
sbb
or
jle
shll
sub
mov
dec
jne
dec
inc
test
lock
xor
xor
mov
loopne
mov
in
movsl
inc
xchg
add
iret
and
and
adc
aam
mov
push
addl
sub
xchg
cmp
jecxz,pt
sti
out
cld
jl
sarb
mov
decl
add
mov
out
insb
pop
lods
sub
cmp
shlb
lret
add
add
dec
jmp
add
sub
or
inc
push
inc
add
repnz
mov
pop
push
mov
add
sarl
add
dec
aas
je
or
inc
enter
adc
jbe
mov
xchg
xchg
add
inc
into
xchg
mov
in
and
lods
add
mov
add
inc
test
sbb
push
add
sarl
or
aad
out
add
sar
call
mov
les
dec
daa
mov
push
xchg
shr
or
add
mul
inc
xchg
adc
dec
into
psubw
xlat
mov
loope
dec
cs
xorb
es
inc
cmp
and
xor
pop
mov
in
or
add
sbbb
sarl
iret
pusha
dec
mov
sbb
aas
sbb
ret
push
lret
adc
or
lds
jne
lcall
push
cmp
popa
and
inc
sub
addb
mov
add
pop
jmp
xchg
das
in
inc
cld
insb
jp
hlt
jae
inc
pop
jge
cmp
mov
aad
sub
jl
or
and
stc
add
jo
test
add
cmpsl
ljmp
dec
add
in
pop
dec
add
sub
xchg
adc
test
cmpsb
lahf
jne
mov
loopne
inc
loope
aad
xchg
jmp
cmp
js
dec
dec
daa
inc
add
repnz
ljmp
sahf
in
gs
ljmp
fdivrs
xchg
and
xchg
dec
xlat
hlt
mov
pop
add
nop
filds
lock
jmp
add
xchg
repnz
aas
sub
push
popf
mov
ds
lock
add
xor
lcall
outsb
jl
dec
rorl
or
in
cld
insb
or
inc
insl
lret
in
mov
sub
dec
sbb
test
or
leave
call
js,pt
or
in
xchg
les
or
outsb
into
sbb
add
cmpsb
and
mov
inc
dec
enter
mov
or
or
dec
mov
add
jg
scas
inc
popf
sub
int3
sbb
and
and
daa
fimull
jl
add
inc
je
jecxz
or
xchg
adc
enter
int
enter
loopne
inc
inc
inc
jl
inc
subl
int3
and
adc
shll
mov
and
mov
mov
jae
aam
add
sub
sbb
xchg
xor
iret
cmp
xor
xchg
andl
push
testb
add
clc
jle
inc
add
cmp
sbb
mov
jne
or
adc
push
enter
sbb
loop
add
dec
mov
ret
mov
inc
fisubl
pop
adc
xchg
subb
inc
sbb
insl
dec
ror
in
jb
test
add
jg
cs
or
nop
add
mov
lods
and
mov
rorl
or
das
jno
mov
movsb
mov
mov
xor
mov
jns
popa
les
dec
mov
das
and
jecxz
inc
movsb
clc
lret
nop
or
outsl
pop
push
inc
dec
lea
dec
insb
sbbb
pushf
les
out
inc
jne
out
inc
sub
pop
fmull
xchg
and
mov
loope
xor
in
inc
inc
addl
add
movsb
add
sarb
jecxz
or
loope
inc
cmpl
loop
jb
dec
test
mov
in
mov
push
cmp
dec
and
or
lret
mov
pop
pop
into
or
or
int3
adcb
jbe
xchg
or
in
adc
icebp
sbb
sahf
pop
cli
leave
mov
lds
mov
inc
add
mov
push
add
or
cwtl
and
lahf
adc
and
mov
or
push
add
mov
sbb
dec
aas
ret
cmp
mov
cmp
jl
rol
nop
insb
iret
scas
sti
je
nop
pop
and
inc
mov
in
cmp
xchg
sbb
inc
jmp
sub
scas
or
cmp
incb
or
inc
leave
add
adc
or
inc
inc
pop
ret
push
xchg
jle
incl
pop
xchg
sbb
cmpsb
lds
aam
repnz
jno
pusha
push
sti
adc
aad
or
test
jmp
adc
daa
je
pop
andb
adc
cwtl
in
cmp
mov
repnz
and
add
add
iret
jb
pop
mov
add
sbb
mov
jb
add
push
insb
push
leave
push
mov
test
aaa
add
dec
jbe
pop
orl
dec
adc
lods
loop
add
dec
jecxz
sbb
pop
cmp
repz
out
es
mov
fdivrl
dec
adc
cmp
sbb
or
inc
addr16
mov
add
shr
inc
mov
pop
pushf
sbb
scas
fsubs
test
cld
inc
daa
in
or
mov
push
mov
adc
mov
fmuls
dec
stc
enter
cmp
mov
test
xchg
push
xor
and
or
fmuls
inc
push
xchg
xor
enter
mov
mov
incl
lods
jle
mov
inc
add
fwait
xor
movsl
popf
jno
pusha
out
xor
adc
inc
jmp
and
and
inc
jae
adc
cmp
fimull
dec
or
rol
or
sub
add
or
loopne
orb
xor
or
sbb
rcrb
mov
nop
fs
inc
daa
add
adc
xorl
cld
add
adc
push
shlb
loop
pop
jl
in
sub
inc
inc
xor
or
mov
jge
shrl
cmp
rorb
jge
fs
movsb
adc
or
add
add
inc
sbb
movsl
repnz
adc
sub
fdivr
dec
fdivs
mov
or
pushf
aam
fdiv
add
repnz
jo
mov
mov
push
xchg
cltd
popa
das
add
pop
or
scas
inc
xor
sbb
jnp
mov
mov
sbbb
add
cmp
mov
add
dec
inc
ficomps
mov
cltd
sbb
add
xchg
sub
mov
test
gs
push
push
fsub
xchg
and
adc
cld
testl
ds
xchg
inc
jns
shlb
dec
insl
mov
rolb
nop
push
dec
mov
add
cmpsb
sarb
adc
ret
pushf
enter
dec
dec
imul
das
fxch
inc
xchg
daa
je
cld
sbb
sub
aas
xchg
sbb
cmp
sbb
lcall
sbb
mov
xchg
shrb
jne
aaa
push
jae
mov
dec
dec
cmp
mov
mov
pop
lret
loopne
jge
push
pop
cli
lahf
xor
orb
fsubl
cli
shrb
inc
and
inc
xorl
mov
fsubl
cmp
add
enter
adc
pop
or
js
hlt
pop
nop
loop
add
cmpb
adc
stos
mov
jle
jae
ficoms
movsl
int
mov
add
test
test
pusha
pop
push
sbb
inc
das
jns
movsb
mov
ror
pop
out
dec
sub
mov
shrl
cmp
adc
cli
sbb
inc
loopne
add
and
add
cwtl
lahf
out
push
rolb
jmp
xor
cmp
test
test
inc
arpl
add
adc
scas
sub
repnz
push
add
ja
add
mov
sub
dec
mov
xor
inc
sahf
sub
test
mov
pop
or
call
xchg
ret
jge
repz
inc
js
jg
add
push
ss
aaa
rcrb
test
sub
js
sbb
jp
rcrl
aas
std
daa
cmp
adc
dec
mov
or
call
cltd
daa
lock
push
iret
cmp
mov
dec
dec
lods
call
xor
and
loop
dec
sub
or
add
cmc
add
jle
loop
sbb
mov
std
jecxz
test
test
mov
or
pop
cmp
mov
sub
mov
cmp
lods
mov
lret
daa
mov
mov
rorb
roll
inc
inc
leave
jns
or
xchg
push
lahf
addb
scas
rolb
fdivr
inc
pushf
out
mov
and
js
fidivrl
xchg
andl
jl
xor
pop
sub
mov
aaa
jno
or
insb
in
xor
insl
data16
mov
shll
cmpsl
sub
add
jge
lret
cmc
movsb
cmp
mov
cld
sub
push
test
push
mov
add
leave
divl
neg
clc
xchg
or
mov
lret
ds
movsb
sbb
shrl
mov
fs
int3
pusha
in
sbb
add
lea
fwait
pusha
add
bound
add
sub
decl
add
pop
movsb
mov
mov
xchg
movsb
adc
sbbb
jl
sub
jl
push
insl
pop
in
aad
adc
cld
jl
push
mov
xchg
mov
shlb
fsubl
pop
rolb
and
mov
xchg
sarb
in
cmpsb
inc
xor
jb
fcmovnbe
push
test
out
mov
stos
les
mov
and
enter
lods
repz
xlat
insb
js
adc
mov
jo
dec
inc
lret
xchg
mov
push
js
mov
stc
aam
andb
cld
cs
jns
nop
in
outsb
sub
hlt
add
fidivrs
cwtl
lods
rorb
jae
cmp
dec
pop
stc
ja
aam
rcrb
pop
dec
das
lods
and
mov
sbb
popf
push
adc
cmpl
lods
in
push
adc
adc
mov
lret
rcrb
adcl
cmpsb
mov
call
sbb
add
out
pushf
sbb
fdivrl
stos
add
aam
sti
in
loop
xchg
cwtl
add
bound
inc
add
pop
shlb
pop
stos
sbb
inc
leave
xor
scas
mov
xchg
lock
in
adc
lods
jp
and
or
push
in
pop
das
les
jg
add
std
lcall
cmp
sbb
mov
xchg
dec
jns
sub
pop
pop
cmpsb
in
shl
test
call
rol
xor
inc
in
leave
add
xchg
lods
mov
mov
imul
sbbb
and
inc
adc
cwtl
jae
adc
cmp
stc
add
push
inc
es
jo
inc
jg
mov
mov
mov
adc
or
shl
xor
fnsave
inc
lds
cld
adc
js
sub
and
add
adc
xchg
xor
add
adc
scas
mov
shlb
inc
negb
sbb
mov
adc
add
dec
ret
ds
subl
mov
jmp
pushf
sarb
jmp
mov
clc
sbb
ret
push
int3
add
inc
bound
xor
push
mov
mov
aas
and
das
test
clc
call
shl
inc
call
pop
cld
in
add
int3
inc
dec
nop
mov
dec
js
push
fdivr
and
js
cwtl
addr16
mov
push
add
sbb
or
mov
bound
sbbl
and
sub
imul
cld
pop
and
dec
or
loop
mov
xor
in
fwait
jmp
sub
add
or
xchg
jns
mov
roll
ds
push
call
adc
or
and
in
or
fimuls
pop
cwtl
xor
ljmp
lods
sub
hlt
push
rclb
pop
and
idivl
dec
dec
shlb
pop
mov
add
push
pop
mov
ror
cltd
add
mov
in
mov
leave
rclb
cmpsl
inc
jl
pop
cli
hlt
push
outsb
dec
add
ret
out
jle
add
jb
add
adc
mov
add
mov
push
pop
and
pop
adc
rorl
aas
jne
pop
jp
insb
mov
dec
les
mov
inc
pop
add
cmc
pushf
pusha
movsl
or
pop
xlat
mov
jns
push
jge
into
rcrb
stc
push
or
adc
fcompl
inc
pop
loope
xor
dec
mov
mov
inc
lret
xchg
mov
push
cmp
rcrb
add
mov
adc
sbb
add
stc
rclb
jge
add
scas
inc
xor
add
shll
fimull
into
sbb
jbe
hlt
pop
sbb
inc
fcoms
inc
inc
sbb
popa
call
push
xor
mov
cmpsl
rorb
dec
add
inc
shl
insb
andl
cli
hlt
movsb
rcrb
adc
or
adc
das
test
call
or
adc
mov
add
popa
push
push
js
push
lods
pop
clc
add
cltd
mov
cld
add
or
movb
movsb
mov
or
and
and
call
clc
movsl
fstp
rolb
adc
sahf
adc
in
arpl
pushl
cmpb
int
push
add
roll
adc
jo
mov
or
pop
imulb
dec
jnp
add
imul
into
add
jl
leave
arpl
and
call
cmp
inc
lods
mov
repnz
jge
je
and
das
lock
test
xchg
stos
xchg
fsubs
or
add
push
sbb
xchg
push
add
int3
repnz
scas
xor
stos
mov
xchg
cmp
push
sbb
nop
ss
in
test
lds
mov
xchg
lock
and
out
fadds
jns
xor
aam
xchg
inc
mov
mov
in
add
incb
in
je
lret
gs
das
cmpsl
cmp
mov
loop
jae
ljmp
cwtl
clc
negl
or
pop
je
cmp
jle
sarl
ret
sti
inc
jecxz
xchg
dec
cmp
or
repnz
adc
jae
nop
xchg
adc
sbb
movsb
mov
cmp
xchg
push
add
stos
and
sar
scas
mov
or
movsb
xchg
repnz
cld
fs
sub
shll
leave
repnz
cmpl
mov
cld
inc
mov
xchg
mov
in
mov
das
sub
fisubs
insl
clc
dec
fstpt
fists
mov
or
inc
pushf
popf
mov
adc
in
mov
or
adc
cltd
imul
or
cmove
cmp
xor
std
mov
mov
sbbb
jne
and
je
lods
sbb
add
sub
lcall
jnp
push
je
aas
aad
or
mov
les
mov
inc
popf
jle
adc
shlb
icebp
push
cld
mov
add
adc
lods
enter
cli
mov
push
repz
add
cld
push
push
inc
adc
outsb
decb
xchg
pop
mov
cmp
sub
adcb
jno
or
aam
jmp
nop
jnp
push
decb
jp
mov
xchg
call
adc
das
jns
mov
cmp
ret
inc
pop
add
push
faddl
ret
or
dec
cld
adc
mov
loop
xor
stc
adc
push
aad
addb
popf
push
in
sbb
movsl
add
les
pusha
jae
std
add
inc
xchg
xchg
or
popl
cmc
pop
inc
push
cmp
dec
cmp
nop
lret
loop
rorb
cmc
bound
adc
das
enter
jne
in
les
sbb
enter
add
fcomi
xor
inc
test
add
cmpsl
das
jl
push
add
fists
xor
mov
mov
cmp
pop
dec
and
je
movsb
mov
and
scas
imul
test
push
cmp
add
cmpl
push
push
and
enter
push
mov
and
cld
movsb
sub
add
cli
mov
scas
add
sti
test
cmp
fiaddl
out
rolb
pop
and
add
sub
dec
sub
add
sbb
xchg
xor
mov
push
sbb
sub
inc
cmp
bound
imul
cld
fwait
stc
daa
or
adc
out
mov
div
xchg
jb
daa
rol
xor
jo
pop
add
adc
clc
loopne
movsb
cmp
mov
dec
mov
cmp
loope
fisubl
rorl
and
leave
add
push
int3
add
outsl
notb
out
pop
and
inc
push
add
das
outsb
gs
pop
and
sbb
in
cmp
sbb
aas
push
mov
loope
in
clc
insb
mov
call
mov
movsl
sbb
fcomps
mov
mov
xor
add
lods
dec
jmp
sub
leave
sbb
fildl
mull
test
or
das
andb
sti
sub
dec
sub
into
cmp
in
ss
xor
int3
xor
int
mov
mov
jae
pop
push
addr16
nop
in
dec
stc
add
cs
mov
scas
pop
jns
js
xchg
xor
add
push
bound
sbb
loopne
test
dec
xchg
sbb
in
mov
pop
and
lods
jnp
stc
and
mov
mov
dec
shl
movsb
pop
fdivr
sub
cmc
testb
add
in
jb
add
add
sub
jl
cmp
inc
cwtl
mov
xor
scas
pop
stos
hlt
test
fs
sbb
aam
scas
mov
xchg
cld
lret
cwtl
mov
aaa
adc
adc
jae
in
int3
pusha
add
push
iret
push
adcb
mov
jge
or
mov
adc
adc
add
and
std
dec
or
shrb
mov
leave
push
adc
xchg
lret
mov
ret
xchg
dec
and
ret
sbb
in
les
cmp
cmp
inc
or
dec
ds
jmp
dec
aad
cld
pop
les
xchg
sbb
rcrb
mov
ljmp
mov
int
aas
or
bound
shlb
outsb
add
adc
sub
xchg
adc
sub
sbbb
jns
test
pop
xor
mov
hlt
lods
test
shr
outsb
mov
int3
in
inc
jae
in
xor
clc
mov
adc
pop
xchg
nop
mov
mov
pusha
xchg
jne
push
adcb
lret
outsl
jae
xchg
roll
mov
xchg
mov
decl
mov
add
mov
push
mov
fwait
sub
cvtps2pi
loop
add
adc
mov
inc
fidivl
mov
movsb
cltd
push
popa
xchg
outsb
pop
cmp
pop
rolb
roll
inc
incb
inc
sub
push
mov
mov
pop
xchg
aam
inc
imul
sbb
and
push
push
and
addr16
and
or
inc
nop
testb
pop
sbb
inc
inc
jge
test
mov
in
mov
xchg
add
or
inc
iret
ljmp
cld
adc
andb
fadds
test
sub
xor
test
hlt
or
push
js
out
cmp
dec
add
cmc
adc
lret
daa
leave
nop
ficomps
xchg
aas
and
jae
pushf
push
mov
mov
pop
out
cmc
jp
movsl
cmp
mov
test
leave
leave
shrb
mov
xchg
es
jbe
pop
dec
sbb
xor
les
mov
pop
test
cmpsb
and
scas
inc
cmp
xchg
cld
or
js
jo
inc
and
add
cmp
mov
fcoml
add
and
fsubrp
sti
add
pop
push
inc
cmpsl
adc
fsubl
pop
sbb
mov
addl
insb
or
orb
aam
enter
rcl
fidivrs
xor
mov
inc
dec
data16
mov
clc
lods
arpl
mov
sbb
test
test
add
outsl
mov
dec
add
xchg
inc
popl
in
sti
outsl
mov
dec
aas
js
popa
mov
fsubs
adc
push
cmp
js
fadd
add
fbld
loop
loopne
sbb
pop
shll
adcl
das
insl
test
lock
inc
push
dec
or
dec
pop
mov
push
pushf
hlt
divl
push
pop
dec
xorl
ror
or
sbb
push
xor
stc
sub
push
add
insl
stos
pushf
out
xchg
ret
vxorps
add
mov
push
xor
cmpsb
aam
cmpsl
fcoms
and
mov
jmp
xchg
cld
jbe
ret
fdivrs
les
jmp
push
pop
inc
cwtl
and
add
push
jns
adc
push
imul
aaa
xchg
mov
cltd
lods
es
je
loopne
adc
lds
xchg
lock
add
mov
arpl
mov
push
cwtl
sub
dec
inc
jg
and
std
mov
jne
outsl
mov
cli
add
mov
inc
aas
aam
stos
and
out
and
cmp
fs
into
push
inc
fwait
cmc
sarl
call
pop
and
inc
mov
xor
in
or
add
stos
pop
add
mov
popa
or
sub
cmp
xor
lds
mov
aas
mov
ljmp
loope
dec
mov
fidivrl
add
jno
cmp
das
cmp
sbbb
and
or
jne
call
out
int
mov
or
adc
adc
xchg
inc
lods
insb
call
pop
xlat
and
rcrb
dec
mov
dec
daa
lds
xor
les
jmp
or
outsl
cmp
cmpsb
jmp
scas
sahf
add
push
sub
pop
sub
repz
or
aaa
dec
xor
pushf
mov
das
js
fiadds
mov
fiaddl
pop
in
add
shlb
adc
xor
xor
sbb
dec
in
cmp
xchg
lret
movsb
fdivl
add
push
inc
loope
fwait
xchg
add
sub
pusha
cmp
xchg
shlb
movsl
xchg
xchg
mov
or
mov
sub
lods
call
hlt
movb
mov
stc
popa
inc
insb
sbb
lret
mov
dec
lahf
push
add
jne
js
out
jg
pop
adc
push
fs
add
dec
aaa
jge
lods
pop
test
lret
fdivr
rolb
add
jno
inc
push
les
mov
mov
adc
mov
into
scas
xchg
xchg
rolb
cltd
pop
dec
inc
add
mov
mov
mov
test
mov
xor
jns
xor
cs
daa
mov
fisttpl
subl
enter
sbb
out
pusha
shlb
sub
sbb
dec
mov
xchg
pushf
lcall
inc
stos
into
cs
ljmp
sub
xchg
dec
xor
sti
roll
jae
sbb
in
pop
cmp
or
or
add
push
push
or
add
popf
inc
pop
cmp
sti
push
aam
flds
sbb
fsubrl
ret
jmp
adcl
xor
xchg
pop
sub
adc
sbb
sub
mov
aam
mull
jbe
jb
daa
add
push
fisttps
xabort
dec
jno
mov
ret
mov
sbb
add
popf
push
and
das
movsb
add
pop
out
or
arpl
dec
dec
push
fcoms
and
add
imul
mov
dec
inc
inc
shlb
mov
xchg
roll
push
popf
mov
mov
xchg
xor
aad
and
scas
in
in
addb
pop
in
in
jge
jg
repz
xor
test
add
sahf
push
push
cmp
fwait
xor
scas
sub
push
dec
cmp
mov
add
dec
aad
je
add
and
mov
js
cmp
stos
pop
dec
idivb
mov
inc
push
add
cli
aam
mov
into
mov
mov
adc
lock
test
out
js
add
inc
jp
popf
pop
enter
movsb
out
cmp
sub
sarl
and
add
outsl
stc
and
test
in
cli
xor
outsb
clc
mov
jbe
and
sahf
clc
xchg
jo
int3
movsb
sub
pusha
je
inc
aam
xchg
stos
addr16
fadds
insb
add
cs
ds
add
dec
xor
sub
pop
sub
sub
and
mov
aam
das
insl
pusha
bound
pushf
push
clc
add
cld
cmp
add
sub
js
in
mov
dec
rorl
sahf
cmc
mov
adc
cltd
out
push
daa
cli
xchg
xor
std
icebp
cmp
fidivs
in
sub
fnstcw
pop
test
cmp
pop
rcr
add
add
inc
fisubrl
cmpb
add
pop
pushf
aam
in
test
stc
or
add
clc
pop
fwait
dec
cs
mov
cmp
push
mov
push
movsb
dec
push
jg
rclb
jl
iret
add
cmc
xchg
fs
sub
orb
in
xchg
sbbb
mov
int3
decb
inc
xor
mov
aam
jo
das
lcall
enter
add
aad
mov
repz
nop
pusha
inc
sub
mov
outsl
jbe
mov
mov
iret
dec
out
out
mull
ret
pushf
push
inc
lds
pop
jns
jnp
pusha
xlat
lret
cmp
adc
jecxz
mov
xor
movsl
cmp
movsb
clc
or
pusha
jo
add
sbb
and
les
ror
adc
or
popa
jb
pop
add
add
testl
pop
test
fmuls
add
inc
daa
movsb
mov
and
jmp
jo
dec
push
sar
jl
dec
or
or
lret
insb
xchg
or
std
sbb
cmp
inc
xchg
sbb
mov
lret
adc
adc
mov
add
aam
inc
and
fs
mov
sbb
leave
popa
inc
int
pusha
and
fdivl
push
add
jp
mov
push
fs
mov
hlt
pop
enter
clc
les
adc
enter
outsl
and
hlt
lahf
add
cmpsl
test
rorb
test
das
mov
sbb
jo
sbb
push
mov
push
dec
fnstsw
ret
hlt
inc
add
sbb
mov
and
movsb
ret
mov
rorw
scas
in
fsubl
int3
jmp
mov
dec
inc
call
mov
dec
in
push
pop
xchg
jne
adc
and
pop
popl
mov
pop
outsb
outsl
ret
and
and
add
gs
push
stos
mov
adc
dec
sti
fiadds
call
ficoms
pusha
outsb
add
mov
mov
xchg
inc
sub
iret
mov
enter
dec
test
jp
mov
pop
mov
inc
add
sub
cld
and
jns
xchg
cmp
in
dec
mov
or
je
je
cwtl
in
add
push
and
pusha
call
adc
dec
sub
fsts
mov
mov
cmp
je
sahf
hlt
inc
jo
and
add
adc
add
jecxz
out
cs
enter
cmp
push
cmc
out
or
addr16
pop
add
adc
push
cmp
mov
dec
hlt
repz
or
mov
xchg
push
dec
mov
sbb
pop
push
sbbb
cmp
or
insb
xor
push
mov
pusha
push
es
ss
repz
mov
and
pop
shrb
adc
sarl
inc
sahf
in
xor
mov
loop
shlb
mov
or
test
sub
stc
pop
jg
fs
test
cmpsl
in
dec
lds
jno
leave
sbb
mov
inc
sahf
ret
sti
dec
loopne
sbb
xchg
shlb
mov
xchg
sti
lcall
addb
xchg
into
jne
adc
or
int
fisubrs
push
ljmp
sbb
add
ja
sub
sub
imul
pop
adc
out
pop
pop
aad
adc
add
dec
cli
ljmp
push
into
sbb
pop
push
add
in
mov
filds
icebp
cmp
rcr
mov
cli
out
mov
cmpb
in
xor
movsl
rcrb
mov
sub
das
test
cmp
rcrb
loopne
dec
dec
adc
jnp
or
dec
ljmp
add
repnz
cs
dec
stc
dec
jo
adc
addb
sahf
jle
jnp
pop
push
add
fdivl
sldt
cltd
xchg
mov
mull
dec
iret
nop
fdivl
out
jp
inc
es
inc
mov
fldl
icebp
lods
clc
xchg
mov
enter
fdivrs
lock
ret
inc
flds
addl
outsb
test
lock
pop
xchg
loopne
addb
adc
ret
scas
add
dec
mov
push
iret
lcall
lock
jp
add
lock
inc
or
repz
add
mov
les
mov
fists
ds
in
in
inc
mov
rclb
enter
gs
sbb
repnz
lret
pop
cwtl
fildl
arpl
mov
mov
in
imul
jge
cld
xchg
sbb
clc
gs
sub
pop
add
fs
xchg
std
sbb
daa
pop
movsl
or
lods
inc
push
stos
sub
scas
pop
js
lret
in
fimuls
pop
xor
adc
dec
rcll
mov
movsb
jl
fdivl
adc
fiaddl
ss
nop
imul
mov
sbb
adc
popl
mov
js
sub
and
lock
bound
adc
cwtl
movsb
nop
xchg
movb
add
sbb
fisttps
mov
and
rcr
sub
push
push
mov
shl
and
and
or
or
clc
push
mov
cli
push
and
leave
mov
pop
and
lock
lds
add
add
or
les
mov
jle
int3
out
daa
pop
jmp
xor
mov
add
pop
mov
or
push
and
data16
enter
mov
or
push
scas
enter
in
sub
xor
lahf
jo
sbb
test
jae
jge
mov
add
frstor
xchg
lods
push
xchg
test
cbtw
fisttpl
cli
add
add
fiadds
in
sbb
enter
or
and
pop
push
dec
popa
int3
jns
mov
shlb
addb
roll
mov
mov
mov
cmp
inc
mov
pop
pop
dec
xchg
pop
movl
popf
shll
mov
js
inc
pop
add
or
ror
je
or
inc
add
xchg
mov
sub
rcr
rorb
xor
push
inc
adcb
hlt
outsb
sbb
dec
mov
mov
add
lahf
aaa
or
xchg
rclb
add
fimuls
push
mov
fcompl
addr16
jae
mov
xchg
mov
add
fdivl
jmp
les
mov
clc
aam
scas
cs
imul
cmp
dec
mov
cmp
adc
add
mov
adc
mov
mov
cs
xlat
mov
mov
cmp
outsb
pop
out
jg
int3
add
push
frstor
shll
stc
push
adc
xorb
push
xchg
jl
mov
xor
shll
nop
mov
jne
add
add
cld
add
lahf
xchg
jns,pn
frstor
fcoml
cwtl
int3
mov
mov
les
fs
pusha
in
mov
mov
std
push
add
push
sbb
mov
lahf
ret
pusha
andb
mov
dec
push
cwtl
cmp
jb
pop
mov
mov
dec
sarl
mov
test
sbb
add
jp
add
mov
int
xor
and
sub
loop
and
dec
lea
pop
jle
cltd
push
adc
mov
mov
add
xor
movb
loopne
cltd
mov
popf
and
xchg
push
or
scas
xlat
mov
lds
push
dec
mov
scas
pop
dec
les
pop
push
notb
lret
in
fstl
mov
add
lret
add
cld
inc
je
cmp
push
movsl
sub
or
and
repnz
popf
push
movsl
jmp
sbb
pop
mov
shlb
jmp
add
insl
in
and
add
insb
add
push
mov
xor
mov
push
adc
and
nop
stos
je
mov
xor
push
mov
xor
xchg
and
pop
pushf
sbbb
mov
repnz
addr16
mov
cwtl
pop
fidivl
cwtl
push
icebp
mov
add
cmp
lcall
and
mov
add
adc
imul
mov
push
jo
scas
andl
mov
add
sbb
sbb
xchg
push
rcrb
aad
mov
test
push
arpl
adc
dec
adc
mulps
ljmp
xor
int3
and
dec
or
mov
sbb
in
pop
std
dec
and
add
xor
addb
pop
fldenv
dec
push
mov
cmp
mov
das
xor
inc
add
pop
ds
sbb
or
sub
sub
push
push
mov
mov
les
adcb
ds
adc
aas
fcompl
mov
add
add
mov
pop
fiaddl
jmp
popf
adc
cmpsb
je
out
dec
aam
jno
jae
pop
mov
xchg
xor
adc
jmp
sub
jecxz
add
dec
cld
and
pop
mov
inc
and
addr16
sti
push
pop
sub
pop
dec
testl
inc
xchg
clc
fidivl
mov
out
out
push
xchg
inc
inc
or
fsubl
jmp
or
into
mov
add
enter
negb
and
nop
js
push
cltd
add
imul
sub
test
addr16
adc
popa
sbb
lcall
je
pop
jle
shlb
mov
les
pusha
pusha
inc
mov
push
pusha
cmp
roll
add
fcoml
nop
cli
and
lret
int3
and
scas
addb
movsb
rol
jno
aas
adc
mov
and
add
push
add
inc
ret
in
fsubrs
xchg
movsb
in
mov
das
xchg
rorb
xor
mov
xchg
mov
mov
xor
sub
addr16
lds
imul
addl
and
push
or
roll
and
or
pusha
pop
dec
adc
fildll
loopne
add
aaa
bound
adc
or
mov
loop
cmp
jmp
test
push
fadds
sbb
mov
sub
mov
loop
lock
scas
add
adc
jecxz
mov
das
xchg
nop
clc
ljmp
inc
cs
jns
dec
xor
push
cmp
imul
push
mov
test
or
push
pop
xchg
sbb
add
rcll
aaa
pusha
pop
xor
popa
sbb
dec
mov
mov
test
or
cmp
in
xchg
pop
add
idivl
sub
scas
push
fnstcw
cltd
add
sahf
or
mov
pop
cmpb
daa
in
mov
popf
mov
outsl
push
add
icebp
pop
mov
cwtl
or
and
add
adc
dec
sbb
xlat
mov
jb
sbbb
test
in
adc
jle
mov
daa
push
test
and
das
add
pop
push
stc
jle
or
xchg
test
and
std
or
pusha
jo
xchg
icebp
mov
xorb
popa
test
mov
clc
add
aaa
mov
cmp
aaa
jmp
mov
add
mov
mov
or
aaa
pusha
sbbl
orb
xchg
bnd
xor
mov
fsubl
rorl
sti
xchg
or
or
xchg
or
bnd
pop
scas
insl
xchg
mov
inc
mov
and
inc
sub
enter
inc
cmp
lret
jl
xor
sbb
push
shlb
mov
push
addr16
lds
dec
insb
je
sub
jp
adc
orb
dec
mov
add
jmp
inc
jecxz
mov
jnp
cmp
iret
xor
sub
ja
cmp
pop
aad
call
lahf
push
xor
inc
addb
js
insb
add
push
mov
or
xor
enter
push
call
sub
mov
jmp
sub
dec
cwtl
add
sarb
es
ret
adc
icebp
sbb
int
lahf
mov
mov
js
add
mov
ss
popf
icebp
xchg
pop
flds
xchg
lock
addl
cmp
sbb
and
mov
xchg
sub
sbb
push
clc
xor
fsubrl
xor
hlt
insl
sbb
adc
sub
ljmp
fwait
std
and
push
mov
insb
loope
mov
inc
add
sub
sahf
pop
cmp
fs
cwtl
pusha
and
or
pop
fcompl
push
jo
into
push
add
ss
sbb
mov
mov
loopne
sub
orb
push
mov
dec
sbb
popf
je
sub
fcompl
cmp
int3
or
pop
adc
or
pop
sbb
xor
inc
imul
inc
sbb
xchg
sbb
dec
aas
enter
add
add
xchg
inc
les
sbb
mov
inc
in
add
push
nop
cwtl
add
xchg
and
or
fisttpll
loope
cs
ljmp
dec
cwtl
test
leave
rcrl
pop
push
xor
fucomp
xor
sub
clc
lds
cwtl
pop
pop
add
jnp
mov
cmpsb
xchg
aam
cmc
and
dec
add
pop
xchg
test
in
sbbb
repnz
inc
push
ljmp
xor
in
mov
or
jno
or
mov
in
and
push
sahf
pop
nop
adc
aaa
addl
add
lock
cmpsl
adc
sub
js
popa
add
dec
adc
pop
xchg
inc
and
or
cmpsb
xor
dec
and
push
mov
xor
fnsave
cmp
aas
push
nop
add
sub
jle
add
or
and
pusha
mov
sub
mov
stos
or
je
popa
out
shr
clc
mov
enter
push
mov
js
or
mov
mov
mov
iret
inc
mov
js
fldt
pop
and
jno
dec
sub
fstl
imul
fdivs
add
sub
add
test
jle
inc
mov
cmpsl
fwait
jns
inc
mov
lahf
fwait
push
rol
xchg
mov
mov
cmpsl
or
jl
add
outsl
sbb
add
inc
andl
fdiv
sahf
cs
jo
push
outsl
mov
adc
push
add
adc
enter
jb
aaa
adcl
cmp
cmp
jg
add
notl
call
pop
jmp
aam
dec
cmp
cmpsb
pop
lret
sbb
into
jno
insb
push
scas
cwtl
adc
loop
sbb
icebp
outsb
mov
aam
push
shlb
lods
fwait
push
adc
lods
loopne
movsl
fwait
or
sbb
and
shrb
add
xchg
test
add
ret
jbe
sbb
mov
mov
add
lret
inc
rorb
ljmp
ret
or
insb
xchg
lea
jnp
xor
cwtl
cmp
and
sub
jae
loop
sbb
adc
dec
mov
test
das
imul
fs
pop
add
adc
xorps
repnz
mov
mov
or
out
pop
jae
sub
mov
lods
orb
imul
bound
shrb
sub
fcomps
xor
mov
add
inc
inc
mov
dec
cmp
ret
cwtl
pop
xchg
insb
call
jbe
pavgb
rcl
push
adc
and
es
adc
mov
sub
mov
mov
fldt
add
inc
push
mov
andb
mov
add
fdivrl
btr
add
fsubrl
add
cmc
xor
dec
jb
pop
inc
or
mov
pop
xchg
jno
sbb
add
xchg
ljmp
xor
rol
mov
pop
push
push
adc
in
pushf
test
xchg
or
jbe
adc
in
jg
jb
pop
out
mov
xchg
dec
cmp
inc
in
addr16
int
gs
and
push
inc
sbb
push
ret
rcrb
pop
call
addr16
xchg
lods
add
jmp
jbe
mov
cmp
in
repz
xchg
insb
stos
in
int
pop
and
adc
rorl
fstpt
dec
dec
insl
lock
lods
mov
add
movsl
pop
fisttpl
jbe
repnz
in
lahf
jb
sahf
int3
and
or
jg
sub
mov
pop
arpl
and
sbb
push
cwtl
test
or
and
add
pop
jge
lds
dec
pushf
sbb
inc
jae
cld
and
lcall
push
xchg
sbb
in
in
ljmp
bound
xchg
adc
loop
incl
mov
fnstcw
leave
xchg
mov
push
xor
cmp
popf
scas
rorb
loop
jo
mov
cmpsb
stos
ret
add
repnz
cwtl
insl
paddsb
or
mov
dec
sub
js
adc
xor
lds
lret
in
mov
pop
rcl
or
add
or
daa
jg
mov
mov
mov
test
cmp
pop
add
sbb
mov
mov
add
test
leave
sbb
pop
mov
clc
sub
sbb
add
shll
jmp
mov
clc
mov
dec
inc
test
inc
dec
sub
mov
int3
inc
insl
leave
push
mov
push
push
mov
pop
mov
and
mov
inc
mov
xchg
dec
iret
test
sub
mov
je
jg
ret
pop
and
sbb
roll
cwtl
push
sub
insb
xchg
mov
add
ja
fs
insl
add
xchg
notl
filds
loop
mov
fimuls
rorb
jge
pusha
cmc
mov
stos
mov
icebp
out
ret
fadds
mov
in
mov
imul
jl
pop
or
mov
push
fs
lcall
dec
test
mov
popf
ds
lods
and
jns
push
xchg
loop
add
andb
loopne
jg
je
bound
test
enter
dec
sub
cli
cmp
lret
jo
lods
fdivr
out
mov
mov
and
adc
sub
jbe
aad
pop
or
and
pop
lcall
jge
xor
and
lret
scas
jecxz
sbb
adc
fwait
orb
lock
add
fcoml
ds
mov
and
add
or
sti
popf
test
mov
mov
jl
orb
mov
sbb
ljmp
ja
xchg
sub
and
mov
loopne
test
les
aam
cwtl
nop
mov
in
dec
mov
mov
test
in
popa
sbb
dec
and
mov
lahf
mov
xor
fsubs
pop
sbb
jo
jae
cmp
push
pop
insb
mov
xor
pop
xor
arpl
dec
pop
mov
into
xor
pop
je
test
mov
push
xor
loope
dec
outsb
jle
cltd
fwait
or
push
ljmp
pop
fcoms
sti
and
pop
push
mov
pop
inc
jge
daa
loop
xchg
daa
sub
xorb
jmp
push
add
sti
fwait
push
test
and
out
pop
iret
mov
lahf
jmp
lcall
push
out
or
loopne
jo
int3
jno
sbb
ljmp
mov
sbb
imul
arpl
stos
cmp
cwtl
jo
pop
stc
or
jle
push
popf
lods
adc
jg
add
cmp
sahf
dec
lret
sbb
sub
and
xchg
addb
jb
sbb
xchg
stos
sbbl
pushf
ret
add
push
and
cwtl
sub
lds
addr16
in
pusha
lds
pop
imul
xchg
je
mov
sub
popl
pop
nop
push
xor
insl
fadds
pop
les
mov
push
push
inc
movsb
push
out
iret
inc
cmp
ss
mov
push
fs
fs
gs
fs
and
sti
add
pop
mov
sub
js
sub
std
lods
loop
popf
clc
sbb
mov
adc
inc
pushf
pop
adc
or
adc
adc
sub
stos
movsb
sbb
pop
inc
bound
or
jbe
mov
mov
test
jecxz
cwtl
adc
and
mov
xor
lods
dec
mov
adc
sub
add
mov
mov
add
ret
loope
jmp
mov
jecxz
inc
dec
push
mov
ljmp
jmp
mov
test
ds
add
jp
pushf
insb
mov
das
cmp
test
ror
rcr
subl
mov
jmp
push
xchg
pop
or
ret
mov
jl
jge
scas
addl
out
pop
in
rclb
pop
pop
adc
push
cs
add
loop
mov
xchg
cmp
imul
pusha
fcomps
mov
pop
shlb
movhps
lds
mov
call
mov
push
icebp
push
mov
dec
jmp
in
push
cmpb
inc
jbe
xor
and
in
jg
cmp
popa
jecxz
sbb
ljmp
data16
or
lret
pop
enter
add
dec
fs
test
xor
rclb
or
pop
adc
dec
sub
lea
or
add
sbb
mov
mov
dec
xchg
test
fstl
ficoms
cmpsb
jo
sarl
lret
bound
xchg
gs
repnz
mov
add
jmp
test
gs
pop
mov
jno
dec
add
pop
lods
inc
add
fs
jb
cmc
sti
mov
cmc
mov
pop
add
loop
das
fiadds
adc
jne
sub
cmc
fiaddl
jmp
sub
shrl
call
pop
jnp
cmp
pop
mov
nop
sti
jmp
xchg
pop
jns
inc
push
or
movsl
jge
clc
popa
cmp
outsl
add
testl
push
sub
sub
mov
pshufw
pop
push
sub
push
loop
push
push
mov
and
into
adc
lds
ljmp
xchg
and
cmc
push
pop
jmp
xchg
insl
jmp
add
cmp
out
hlt
sub
xor
insl
pop
sti
pop
push
jnp
pop
pop
ret
sub
xlat
imul
es
sub
rolb
mov
sbb
mov
cmpsb
mov
nop
sbb
xlat
lcall
jns
inc
xchg
repnz
mov
dec
and
sub
aam
jge
mov
ret
sbb
inc
mov
adc
shrl
and
data16
push
lea
test
test
mov
call
sbb
cld
or
pop
cmpsl
adc
xor
test
push
mov
ficoml
test
mov
push
mov
pop
jmp
push
stos
rcl
addl
into
xchg
mov
loope
jb
add
push
in
and
popf
cmc
sub
das
lods
and
jp
push
push
inc
sub
mov
jle
jg
and
push
adc
sub
fucomi
dec
ret
les
add
mov
xor
mov
mov
xchg
aad
add
pusha
lret
dec
sbb
cmp
jmp
mov
and
inc
sbbl
movl
shl
sbb
or
sbb
xchg
jle
push
or
pop
je
dec
adc
xchg
lds
xchg
into
xor
andl
pop
mov
movsl
add
nop
add
mov
fildl
ret
mov
nop
mov
lock
pop
mov
popf
inc
sbb
flds
xorl
sbb
leave
outsb
mov
adc
std
xor
jp
add
xchg
movsl
cs
mov
add
add
popa
mov
and
jmp
pop
rclb
pop
jmp
jae
adc
add
pop
out
dec
push
outsl
cmp
inc
pop
and
decb
movzbl
scas
imul
add
jge
adc
out
lea
fiaddl
lods
inc
insb
mov
add
pusha
and
sbb
pop
sub
mov
add
jnp
jo
push
or
stos
mov
add
jae
or
pusha
ror
in
push
movsb
push
sahf
mov
fidivs
orl
add
lcall
icebp
addb
sti
mul
xor
sub
lock
xchg
adc
int
add
and
cmpsl
sub
push
fldz
insl
cmp
addr16
add
sub
push
xchg
lea
sbb
add
outsb
sub
adc
mov
push
push
push
enter
cli
loopne
fisttps
dec
push
xor
adc
or
xor
mov
sahf
push
orb
mov
xor
and
adc
xor
orb
add
test
push
adc
push
mov
out
sbb
xchg
mov
out
adc
mov
jp
adc
mov
mov
xor
add
pop
sub
mov
icebp
loope
lock
add
int3
scas
xchg
sub
aas
mov
lahf
and
dec
mov
ret
or
popa
dec
repnz
mov
cwtl
fwait
call
mov
xchg
stos
mov
xchg
jno
cs
jle
add
popf
ljmp
mov
and
sti
pop
dec
arpl
negl
dec
xchg
adc
scas
int
push
pop
aaa
sahf
add
out
jg
into
pop
sub
push
enter
clc
loopne
sbb
cmpsl
add
shlb
sub
mov
ret
or
roll
jg
push
nop
js
xor
or
fs
xor
add
cmpsb
xor
xor
sub
sbb
pop
sub
arpl
stc
sub
mov
sub
pop
bound
cltd
orl
jmp
inc
cmp
push
push
and
jns
sbb
dec
xchg
and
je
andnps
fwait
or
or
add
ss
and
adc
pop
lds
jnp
call
mov
imul
mov
aas
add
jle
pop
mov
lcall
add
mov
insb
popa
rol
fsts
pusha
adc
xchg
cs
or
nop
sub
pop
lods
pop
add
loop
hlt
insb
pop
roll
and
pusha
insl
jb
xchg
add
sub
aas
add
inc
jge
ret
sub
sbb
jmp
sbb
pop
mov
add
clc
pop
call
mov
fcoml
push
cli
cmp
xor
rolb
nop
mov
mulb
mov
xor
mov
pop
or
out
loop
jge
push
xchg
imul
add
lret
mov
inc
jo
dec
xor
push
xchg
lret
jecxz
into
add
data16
shl
fiadds
jns
sub
jmp
add
mov
rcr
out
call
ja
adc
cmpsb
addb
add
xor
movswl
mov
mov
punpckldq
mov
and
xor
sbb
and
shr
mov
iret
rorb
inc
test
arpl
clc
push
mov
mov
pop
xchg
repz
sbb
cmp
push
test
xlat
or
and
pop
jns
ljmp
dec
and
sbb
jecxz
mov
push
into
test
loopne
cmc
rcr
push
pop
faddl
xor
xchg
mov
dec
cld
lret
rorl
mov
sub
je
sbb
mov
pusha
ja
inc
or
in
out
test
mov
lods
and
mov
pop
push
jno
xchg
sarl
cmp
sbb
rcrb
or
aad
outsl
ret
test
mov
jmp
in
or
cmc
xor
adc
mov
into
sub
jl
xchg
pop
test
add
or
mov
pop
call
push
dec
out
sub
aas
jle
xchg
dec
out
or
jmp
sarb
add
sub
dec
sub
sub
sub
cmp
inc
andl
pop
push
fwait
dec
push
sti
outsb
add
mov
jecxz
xchg
xor
sub
pushf
popf
jbe
scas
sub
inc
jns
sub
xchg
dec
jb
mov
mov
mov
lahf
mov
xlat
outsl
dec
inc
jp
cmp
mov
or
insl
push
mov
inc
shlb
push
dec
push
nop
and
pop
pop
imul
pop
cmpl
mov
sub
shrb
adc
add
test
sub
dec
jg
push
pusha
adc
lret
addl
lcall
loop
movsl
sub
ret
pop
mov
stc
dec
repnz
xchg
or
or
insb
testl
inc
and
out
pop
xor
cmpb
test
push
and
nop
and
push
daa
xor
ret
mov
das
lods
mov
and
cmp
out
jo
in
mov
js
cltd
test
push
push
jno
pusha
add
test
lret
jb
add
push
out
mov
inc
fmuls
sbb
js
push
cmp
out
xchg
sub
rclb
dec
int3
sub
imul
mov
and
ljmp
roll
mov
rclb
pop
dec
push
mov
adc
rorl
scas
fcmovu
rol
out
sub
inc
mov
ficomps
jmp
xor
xor
jbe
call
or
sub
jae
xchg
push
xchg
enter
jo
xchg
stc
fdivrl
cmpsb
jl
test
dec
rolb
pushf
pushf
dec
dec
mov
inc
shll
mov
inc
xor
aam
mov
push
clc
lods
mov
in
rcr
jle
dec
push
movsb
jno
pop
pop
out
push
add
jne
mov
add
xor
sbb
or
and
and
xor
arpl
pop
cwtl
shrb
add
sbb
addr16
jmp
dec
and
jno
xchg
and
xor
lret
shlb
stos
out
out
mov
jo
sbb
testb
int
jge
int
xchg
fwait
xchg
push
outsl
andb
out
leave
add
mov
pop
jl
jne
lahf
test
pusha
fadd
es
or
xor
sbb
repnz
add
or
cs
pop
aas
and
xor
jbe
shrb
dec
jmp
cmp
mov
push
jne
clc
stc
sub
sbb
adc
jbe
lock
xor
pop
les
push
mov
pop
sbb
jl
add
movsl
fdiv
dec
or
in
ret
add
test
aas
ja
test
sub
add
mov
sub
add
xchg
adc
nop
sbb
addr16
ficompl
or
or
gs
add
iret
sbb
testl
mov
xchg
xchg
mov
pop
add
loope
repz
insb
mov
or
pop
sbb
fs
out
rolb
cmp
pop
jecxz
mov
aaa
das
add
cmpsb
or
dec
pop
scas
fistpl
mov
xchg
mov
test
das
or
arpl
pop
and
fstpt
jbe
out
or
test
adc
inc
add
push
sub
call
scas
mov
clc
inc
dec
roll
fdivrl
mov
pop
test
mov
xor
rcll
jbe
dec
add
inc
loopne
rclb
xor
mov
xor
sbb
dec
xchg
sub
and
fwait
lret
loope
cli
xchg
popl
and
out
mov
pusha
ja
or
insb
incb
or
jge
sbb
arpl
dec
dec
iret
pop
nop
fadds
les
push
addb
push
push
cmp
mov
enter
or
sbb
divl
or
xor
adc
ja
iret
lds
in
inc
xor
push
test
jb
dec
or
iret
pop
sbb
andb
rcrb
or
or
lds
pop
adc
in
and
mov
add
dec
int3
aam
loopne
add
daa
mov
jmp
lret
ljmp
mov
int3
ret
int
movsl
mov
ds
jo
mov
filds
adc
xchg
xor
sub
mov
and
lret
or
adc
std
enter
stc
and
pop
sbb
shll
insb
or
or
movsb
aam
clc
inc
movsb
sub
ja
xchg
add
xchg
test
dec
leave
adc
add
fimull
icebp
jl
cmp
addb
popf
hlt
call
sti
add
inc
and
adc
popf
roll
mov
inc
xor
push
mov
popa
test
mov
es
xchg
out
add
imul
leave
je
sub
sub
das
aaa
xor
or
in
xor
movsb
dec
sub
cmp
loopne
xor
sbb
lds
das
lods
lods
roll
or
mov
lock
and
push
xor
and
dec
jge
shll
test
mov
or
cmp
pop
imul
imul
testl
or
or
adc
jo
cmc
add
cwtl
xchg
lock
mov
sti
in
mov
scas
cmp
test
add
dec
icebp
pop
mov
jne
push
pusha
ficomps
cltd
sbb
gs
cmp
add
ja
mov
sub
rorb
dec
pop
sub
test
ret
push
insb
or
jno
jecxz
aam
shll
push
lock
or
scas
xchg
dec
or
pop
lret
rolb
sub
fdivrs
add
inc
push
dec
xchg
ds
subb
pop
call
lds
std
cmp
push
or
jmp
orb
aad
push
and
dec
xchg
scas
imul
add
and
sub
enter
mov
push
into
ret
lahf
mov
add
clc
in
loope
pop
bound
fisttpl
rolb
jbe
cmp
jl
lea
add
adc
cmc
movsb
mov
pop
in
push
xor
xchg
out
test
jae
mov
mov
sub
test
add
cmp
sbb
js
pop
add
mov
mov
outsl
movsl
push
add
decb
push
fs
mov
jg
pop
pop
aaa
lret
lahf
dec
les
daa
xchg
jmp
popa
insl
mov
sub
in
mov
pusha
clc
mov
cmc
pop
jb
dec
in
push
adc
shrl
xchg
test
iret
push
mov
mov
push
int3
sbb
scas
popf
and
add
out
cmp
mov
es
ljmp
xor
insl
int3
dec
and
insl
adc
js
sbb
sbbb
mov
pop
jmp
fldl
scas
imul
xor
cli
mov
adc
xchg
in
dec
test
dec
jp
sbb
push
mov
and
push
movsl
xor
rcrb
xor
into
mov
movsl
sbb
lods
pop
lods
repnz
lret
mov
test
pop
adc
jne
pop
push
add
add
sbb
mov
add
repnz
aam
outsb
pop
mov
or
inc
popl
sbb
loope
cwtl
and
js
add
popf
leave
icebp
jp
or
hlt
add
jmp
mov
sub
xor
sahf
ret
nop
xchg
icebp
js
roll
insl
or
rcrb
daa
lock
cmp
adc
inc
fsubl
sti
inc
or
in
rcrl
sbb
sub
nop
or
jmp
inc
xchg
add
scas
mov
mov
fcompl
decl
xor
int3
stos
or
cmpsb
loop
jle
arpl
fcomi
pop
mov
dec
push
mov
sub
jns,pn
scas
dec
push
shlb
mov
test
sub
mov
repz
nop
add
push
ror
push
push
pop
pop
fxtract
sub
add
lock
push
xor
push
mov
xchg
rcll
or
mov
mov
cmp
imul
sti
fidivs
sub
mov
adc
xchg
cli
lods
int3
sbb
hlt
lock
mov
nop
jle
lock
adc
movsb
adc
fistl
clc
pop
jne
mov
and
mov
jo
push
cmp
mov
fadds
fsubl
rolb
mov
xor
rcr
mov
rolb
xor
push
lea
popf
aas
sub
inc
dec
call
mov
leave
xor
fstp
imul
sbb
scas
pop
pop
push
out
adc
shl
xchg
add
or
pop
push
hlt
inc
add
push
fildll
mov
ds
lahf
mov
sbb
incl
or
call
imul
mov
adc
loop
repz
subl
in
out
test
inc
cmpl
and
xchg
test
sub
sub
div
imul
mov
pop
icebp
dec
sub
adc
push
out
sbb
xor
sbb
sub
popf
jle,pt
outsl
add
push
push
jae
stos
add
xor
adc
sub
notb
dec
das
fldl
nop
push
inc
push
inc
dec
dec
dec
sbb
mov
stc
mov
pop
fs
push
mov
or
cmp
inc
lods
test
push
dec
adc
add
jmp
shl
shl
fs
add
aam
xor
mov
add
jb
jno
adc
xchg
xchg
inc
or
pop
sub
or
adc
outsb
les
loopne
cmp
pop
ja
sub
in
cmp
jmp
cmp
stos
sbb
or
mov
mov
inc
in
add
xchg
jno
add
enter
aad
imul
adc
push
cli
pop
or
add
cmpsb
xor
repnz
xchg
mov
loope
cwtl
pusha
loope
mov
pop
mov
dec
out
mov
int
fs
shlb
popf
mov
add
push
cld
sarb
sub
xor
mov
rclb
and
jnp
sbb
push
add
pop
xor
loopne
adc
inc
add
add
add
stos
dec
es
dec
enter
lret
popa
jg
ja
repz
sub
out
imul
popf
stos
out
mov
clc
pop
pop
outsb
mov
cmp
cmp
sub
xchg
push
jbe
xor
and
cwtl
cmp
lock
loope
sub
and
and
enter
movsb
movsl
leave
lods
mov
aaa
add
fstpt
push
jecxz
mov
and
mov
out
loope
cmpsb
xchg
dec
push
dec
and
imul
add
lds
mov
out
push
adc
sub
sub
pop
pop
push
aaa
pop
add
xchg
aad
adc
sub
adc
inc
adc
xor
test
std
test
mov
insl
imul
push
mov
fldenv
jns
xor
lods
and
cmp
call
dec
in
rol
mov
fmull
push
pop
jp
inc
pop
imul
cmpsb
cmpsl
sahf
incl
inc
xchg
mov
fcmovbe
adc
adc
mov
test
jge
cmp
jns
test
dec
nop
jp
pop
stos
add
testl
fildl
ja
popa
xchg
jb
jbe
xchg
gs
int
out
sbb
sbb
or
inc
cmp
push
push
or
scas
mov
mov
pop
outsl
add
popa
dec
pusha
stc
test
enter
mov
iret
cmp
js
and
sbb
dec
push
ds
out
add
push
stos
sbbb
sbb
cmp
push
popa
lds
push
clc
aaa
xchg
fimull
popl
pop
pop
or
jnp
jle
hlt
add
and
insb
and
popa
push
lods
add
sub
mov
loopne
or
test
mov
cmp
repnz
pop
pop
bound
xor
cmp
mov
mov
dec
pusha
jnp
jo
push
add
addl
shll
dec
pop
cmpl
sbb
test
test
and
fistpl
or
test
sub
fmuls
xchg
and
shlb
insb
mov
mov
ja
sub
ds
mov
and
jg
cmpsb
mov
xor
and
inc
and
std
sti
lods
cwtl
push
into
stos
inc
sti
pusha
je
faddl
out
stc
mov
inc
mov
je
shll
pop
pop
xlat
add
dec
mov
pop
bound
cmpsl
mov
cmp
adc
mov
and
pop
push
fcoml
test
fildl
xchg
loop
stos
or
adc
mov
xchg
adc
pop
call
iret
outsl
hlt
js
lock
outsb
icebp
add
shlb
scas
ds
mov
call
loope
lods
mov
xchg
insl
cmpl
add
pusha
jo
int3
mov
jl
rol
pusha
popa
jle
mov
div
mov
push
or
fcompl
lahf
xor
xchg
enter
je
mov
add
inc
into
sahf
push
gs
xor
jnp
sub
mov
add
icebp
pop
adc
mov
xchg
dec
pop
mov
inc
and
sahf
fadds
pusha
fstl
mulb
jne
add
addr16
mov
jp
outsb
hlt
or
lcall
add
sbb
jne
call
mov
xchg
pop
push
fwait
pop
outsb
dec
test
xchg
in
cmp
ret
adc
sub
nop
pop
jo
test
imul
inc
std
negl
jge
or
sub
dec
add
xlat
aaa
fwait
insl
cmpb
jle
in
das
push
jge
add
scas
jp
or
xor
popa
dec
stc
push
xchg
es
mov
push
and
pop
popa
pop
jmp
sti
cmp
inc
cmp
and
sahf
lcall
fs
icebp
mov
mov
orl
faddl
les
roll
xchg
sarl
pop
enter
xchg
popa
popf
jmp
sbb
pushf
mov
shr
mov
int
xor
xorb
sub
mov
xchg
insl
add
in
test
pop
mov
xor
cli
mov
pop
sub
lret
sbb
adc
dec
dec
pop
dec
and
in
mov
push
cmp
rolb
sbb
insb
jmp
enter
sbb
add
dec
push
xchg
ret
jo
pop
adc
fcomps
or
outsb
shll
sub
xchg
adc
orl
xchg
mov
adc
adc
shlb
push
mov
pop
stc
pop
dec
and
push
aam
mov
cmp
les
or
rcrl
mov
add
insb
movsl
mov
jmp
dec
inc
pop
scas
fiadds
adc
fadd
and
inc
and
jle
jbe
add
int3
dec
or
cmpsb
sbb
mov
inc
jo
add
sbb
pop
or
pop
and
cmp
jmp
jnp
adc
scas
cli
popa
cmp
xor
xchg
es
arpl
les
cmp
inc
loope
not
faddl
inc
sarb
repnz
nop
repnz
pop
leave
pop
and
mov
cld
fldz
add
ror
jl
mov
popa
icebp
inc
add
mov
stos
scas
popa
cmc
mov
cmp
mov
incb
sub
pop
mov
nop
ja
shll
ret
mov
ljmp
js
bound
lahf
loopne
mov
sti
fwait
inc
mov
jb
ficoml
sub
mov
cmp
sbb
repz
xor
cltd
sti
movsl
adc
sbb
jne
xorl
or
test
adc
mov
push
adc
and
mov
add
jo
lret
inc
and
xor
loop
subl
xor
subl
fiaddl
mov
sbb
int3
test
push
pop
test
sbbl
std
cltd
jne
movb
pop
pop
xchg
mov
jmp
or
jge
rolb
dec
jg
lret
sbb
pop
les
sbb
daa
repz
sbb
arpl
push
push
enter
jns
dec
mov
ja
in
push
push
sub
shrb
cs
sbb
pop
jmp
cwtl
outsl
inc
pop
add
lock
pop
cmpsl
push
imul
and
shlb
mov
sub
sbb
or
mov
std
jle
repnz
repz
sti
test
popa
or
fs
mov
dec
insb
pusha
push
cwtl
out
cmp
pop
sub
jmp
xor
js
add
lods
je
hlt
mov
xor
dec
fldenv
sub
orl
fwait
push
scas
lods
and
mov
push
mov
loopne
std
sbbb
add
insl
outsb
pop
sbb
outsl
iret
pusha
adc
mov
lods
jns
data16
jecxz
sti
and
call
xor
jmp
adc
sarb
addr16
lods
mov
push
adcb
pusha
xorb
adc
dec
mov
pop
xor
xchg
xor
push
out
sub
test
adc
xchg
js
or
cmp
adc
or
nop
or
mov
xor
popf
fs
add
dec
pop
clc
repz
stos
add
movsb
mov
pushf
shlb
lock
xchg
jbe
jae
shl
dec
movsl
mov
push
sbb
pop
ret
loope
dec
push
into
adc
nop
sub
adc
xor
or
sub
movsb
mov
jl
mov
mov
inc
mov
imul
jl
adc
sti
or
insb
adc
xor
xchg
sub
decb
movsb
dec
addb
pop
shlb
or
cmc
xor
push
lock
call
out
sub
push
je
icebp
cmp
push
sahf
dec
xchg
sub
inc
mov
cmp
in
inc
mov
pop
cmp
nop
punpcklbw
outsl
push
hlt
lock
jmp
mov
cmpsb
mov
and
sbb
dec
mov
xor
jns
gs
in
test
jmp
outsl
jno
insb
rorb
bound
shrb
jne
out
add
pop
jno
jle
out
sub
cmp
xor
adc
adc
nop
test
pop
push
lcall
cmpsb
xchg
push
mull
xor
xorl
enter
or
notb
and
jo
jmp
jg
pop
mov
sbb
les
sarb
mov
add
in
in
xchg
orb
mov
pop
hlt
add
sbb
add
mov
xor
dec
popa
add
inc
ljmp
adc
faddl
add
jl
jne
sub
xor
push
shlb
add
stc
jle
add
xchg
adc
pshufw
lock
add
stos
insl
push
jg
in
mov
jb
aaa
or
lds
push
mov
inc
mov
sub
and
cmp
sub
xchg
jle
mov
push
loopne
in
andps
xchg
inc
gs
ja
std
add
jno
jnp
lea
int
jg
fucom
mov
add
int3
pop
jnp
nop
or
xor
add
dec
cmp
and
outsb
add
das
jmp
mov
inc
mov
mov
icebp
out
inc
call
mov
aad
add
add
imul
mov
jl
add
rcll
xor
popf
jne
dec
nop
icebp
xchg
sub
in
and
adc
push
cwtl
pusha
shrb
dec
rolb
sub
jecxz
daa
repnz
js
aam
push
shlb
subb
int3
jo
sbb
dec
adc
add
leave
xor
hlt
notl
or
xchg
test
inc
pushf
sbb
pop
dec
lds
int3
fs
mov
or
pop
push
in
inc
add
or
shrl
inc
cmp
mov
dec
adc
mov
aaa
aam
stos
call
mov
jl
add
dec
clc
out
push
push
rolb
mov
jbe
xor
jns
add
xchg
andb
push
xchg
mov
str
mov
mov
jo
aaa
call
add
je
push
or
xlat
or
out
jg
jmp
call
jg
xchg
jmp
test
add
popa
fldl
lods
outsl
mov
mov
cld
ljmp
jb
mov
dec
roll
mov
adc
inc
fmull
test
push
cmp
shlb
rorl
lods
add
dec
cld
mov
shrl
fcmovne
add
xchg
pop
mov
in
call
jo
mov
push
dec
hlt
add
jge
and
rolb
adc
sub
adc
jb
or
lods
out
int
sub
xor
dec
add
sti
test
lret
pop
hlt
fsin
add
sub
add
jns
jnp
jle
jne
sbb
pushf
stos
mov
inc
cmpsb
xchg
push
into
push
dec
xor
mov
add
mov
xchg
ja
cld
inc
aaa
adc
rolb
xor
cmpb
mov
test
cwtl
or
mov
pop
incb
sti
push
or
and
xchg
repnz
outsl
add
mov
adc
loope
inc
out
adc
fdivs
add
adc
dec
fisttps
lods
pop
shr
test
ja
cwtl
sub
inc
or
sbb
lea
jl
sahf
jg
xor
cmp
dec
mov
loop
add
sub
pop
mov
add
jge
or
xchg
je
jne
arpl
xor
or
test
or
clc
or
int
test
mov
les
dec
add
pop
hlt
add
fwait
leave
mov
adcb
cmp
add
imul
jp
imul
mov
add
dec
icebp
insb
scas
gs
push
pop
inc
mov
mov
mov
add
into
sbb
ret
add
and
orl
repnz
add
hlt
shlb
xchg
imul
lahf
movl
repnz
pop
and
int
int3
aaa
cmpsl
adc
dec
mov
xchg
pusha
pop
jns
insb
mov
sar
sbb
pop
add
or
adc
bound
pop
push
mov
add
aaa
jge
aam
stos
ret
add
mov
mov
or
dec
pusha
insb
sub
outsb
add
incl
dec
add
insb
jle
roll
popf
mov
orb
mov
test
mov
mov
cmpsb
add
hlt
or
or
adc
ja
loopne
popl
aad
jmp
cmpsl
add
rcll
aaa
lock
repnz
add
enter
mov
pusha
push
and
pop
add
xchg
adc
pop
scas
xor
add
push
jmp
pop
movsl
xor
js,pn
sub
cmp
xor
insb
inc
movsl
adc
add
inc
inc
loop
add
shlb
hlt
orl
add
add
iret
add
xchg
into
inc
roll
test
inc
jmp
mov
cwtl
adc
push
js
sti
fs
dec
push
subb
pop
outsb
mov
and
push
pusha
out
mov
aaa
out
cmpsl
mov
outsl
add
jl
pushf
cmp
fists
outsl
mov
dec
dec
add
lock
inc
shlb
inc
cmp
sbb
cmp
jno
add
push
lods
add
rcl
mov
push
std
cmc
sbb
inc
dec
mov
adc
rclb
dec
sbb
jb
mov
sbb
add
sarl
cmp
jno
add
ficomps
dec
lcall
shl
hlt
add
ret
pop
xor
cmp
and
mov
fisubrl
jb
sbb
jmp
sub
lahf
fs
addr16
sub
jle
dec
cmp
inc
mov
rsqrtps
push
stc
mov
fstps
outsb
jno
andb
pop
out
push
add
or
in
jecxz,pt
push
std
xchg
in
test
push
add
sti
inc
stc
lds
push
pusha
loope
pcmpgtd
lock
shl
jmp
addl
mov
popa
inc
imulb
loopne
add
push
adc
lock
aas
add
add
bound
pop
dec
sbb
add
push
inc
call
mov
mov
cmp
add
lock
mov
add
divl
pusha
add
cltd
out
jle
fildll
pop
lret
push
push
sub
subb
mov
mov
fldl
dec
in
test
push
ljmp
js
lcall
imul
pop
fs
push
int3
mov
addl
stc
add
loop
jecxz
push
xor
cltd
mov
add
imul
dec
add
jnp
add
cmp
lods
xchg
test
and
cmp
mov
sar
xor
das
cs
mov
and
inc
fmuls
popa
cwtl
jb
nop/reserved
test
add
lahf
jecxz
add
bound
dec
cmc
xlat
rcll
cs
adc
add
pop
fisttpll
test
sbb
jno
add
sbb
imul
pop
mov
cmpsb
add
ret
cwtl
sbb
cli
ss
xchg
movlps
push
pop
push
scas
movsl
test
sbb
mov
push
add
testl
rolb
es
mov
pushf
clc
fisubs
mov
inc
loopne
sub
add
pop
ret
add
mov
xchg
mov
int3
lret
jmp
out
mov
fildl
dec
dec
roll
push
sbb
pop
lret
cs
scas
mov
stos
mov
ds
ss
mov
dec
ds
pop
mov
dec
add
cs
mov
imul
fdivrp
and
lcall
add
and
or
sub
add
xor
pop
pop
inc
add
or
add
pop
addr16
sbb
add
push
jle
lock
ja
nop
outsl
rcrb
inc
inc
dec
out
stc
mov
cli
add
fcomi
and
lret
hlt
add
int
ret
adc
shlb
sub
inc
rcl
adc
add
or
xchg
sbbb
sub
dec
sbb
daa
add
pop
test
mov
mov
lret
jl
and
pusha
mov
push
dec
sub
pop
movsb
add
in
stos
repz
mov
add
push
mov
add
or
rcrl
out
mov
out
sbb
orb
data16
and
cmp
sub
mov
pop
add
xchg
movsb
add
scas
lods
inc
inc
out
lret
add
sub
scas
and
lret
aaa
dec
push
add
loopne
add
lret
adc
cmp
mov
add
stos
mov
aam
or
iret
movsl
sbb
mov
mov
adc
xor
nop
xor
lods
adc
mov
add
pushaw
stc
dec
dec
add
pushf
xorl
or
jb
mov
cmpsl
test
stos
xchg
add
imul
and
mov
out
enter
enter
in
sub
arpl
and
es
or
add
xor
push
adc
mov
bound
cmp
arpl
pop
adc
xor
enter
mov
mov
nop
in
xchg
hlt
stos
xor
xchg
arpl
repnz
add
pushf
leave
insb
gs
call
push
push
jne
insb
push
out
jg
fadds
outsb
xchg
adc
xor
popa
std
cmp
jl
add
sbb
add
lahf
sub
fildl
out
test
add
das
push
cmp
push
mov
sarb
lock
add
sarl
push
fbld
and
rcrb
add
xchg
es
mov
push
dec
mov
incl
jns
add
push
in
push
dec
add
jo
sti
xchg
out
or
dec
aas
inc
or
pop
pop
add
loope
inc
repz
pop
mov
push
arpl
faddl
or
int3
add
sub
jecxz
add
mov
shrb
add
and
in
out
clc
jecxz
xor
jg
movsl
mov
add
outsl
adc
dec
or
rclb
jle
mov
jg
in
add
js
in
mov
and
jae
push
imul
jno
js
jge
push
fldenv
mov
add
cld
std
pop
das
sahf
and
jns
add
lods
sub
shll
mov
fsubs
push
scas
push
mov
shlb
adc
fdivr
loopne
sub
lods
jo
pop
ret
rolb
dec
pop
fdivrl
clc
int
add
lret
sbb
pop
sub
add
in
fdiv
sbb
dec
mov
xchg
inc
js
xor
negb
gs
test
mov
sbb
gs
pop
cwtl
data16
mov
loope
aas
repz
jno
and
mov
xchg
sbb
sbb
int3
nop
xor
orb
les
push
push
sub
sbb
cld
mov
test
and
xor
add
sub
xor
lahf
and
and
faddl
aam
push
shlb
and
jbe
sbb
out
mov
adc
and
add
mov
cs
mov
out
xor
adc
cmpsb
add
add
jnp
sbb
lods
outsl
cmp
and
push
mov
mov
addr16
mov
pop
jmp
repz
rorb
xchg
loopne
test
cmp
insb
sbb
mov
and
xor
cmp
das
and
imul
imul
jo
pop
jne
mov
add
xchg
sub
xor
fldenv
push
mov
jne
mov
add
fcoms
insb
inc
add
jmp
jnp
mov
lods
mov
addl
fcmovnbe
push
cmpsl
xchg
xchg
mov
jmp
inc
js
cmpsl
mov
lock
nop
aam
add
loopne
jb
jl
jo
xchg
mov
add
dec
sbb
push
xor
and
pop
or
inc
ljmp
adc
in
scas
mov
mov
je
jp
pop
movsb
mov
pop
testl
add
test
jnp
xchg
mov
pop
mov
mov
divb
mov
pusha
mov
jb
add
cmpsb
inc
jo
out
add
pop
push
and
clc
mov
mov
and
ret
and
cmp
cwtl
add
add
cmp
add
movsl
aaa
and
popf
stc
xchg
mov
jp
stc
data16
out
inc
int3
inc
mov
es
xor
xchg
push
add
and
dec
inc
inc
mov
ror
insl
push
dec
xor
xchg
into
cmp
movsb
inc
sbb
fdivr
push
ja
shlb
mov
fs
and
push
stos
pop
mov
enter
icebp
mov
into
inc
rcll
out
inc
mov
or
lods
xchg
jo
ret
stos
jne
mul
inc
out
add
lock
add
imul
jns
inc
mov
mov
enter
fadds
or
lret
inc
and
push
and
jne
lahf
mov
mov
adc
arpl
mov
in
cmp
add
cli
aaa
jne
cmc
mov
push
add
push
clc
pop
mov
mov
cld
adc
mov
es
or
mov
sbb
mov
and
call
clc
shlb
mov
push
fldl
sbb
lahf
add
lods
int
ret
cmp
mov
dec
clc
ret
pop
sub
pop
xlat
push
xchg
jnp
add
sbb
mov
out
adc
leave
add
sbb
jae
sarb
add
mov
xchg
sbbb
add
sbbl
or
pop
rol
and
dec
mov
loopne
mov
adc
arpl
loopne
jb
cwtl
push
jmp
push
aaa
lods
lock
rorl
and
enter
xchg
and
and
jno
jne
jae
cmpsl
or
mov
dec
adc
in
add
cmp
ret
out
repnz
mov
mov
ret
ljmp
mov
jg
test
add
addl
mov
cmp
or
jg
hlt
adc
jl
inc
or
out
or
in
setg
xorb
or
push
push
mov
movl
jae
les
mov
and
sbb
and
test
orl
mov
xor
addb
outsl
jecxz
pop
adc
mov
push
xor
mov
out
pop
in
lret
mov
inc
das
imul
nop
and
add
insl
fsubs
pop
xchg
xchg
les
je
call
ja
imul
adcb
mov
jne
jl
cmp
inc
mov
adc
lock
xor
jmp
mov
mov
dec
add
insl
mov
cs
adc
add
sahf
dec
cmp
and
je
in
and
cs
jno
inc
sbb
mov
aad
sbb
popa
xor
lea
add
xor
or
add
cmp
daa
fs
jae
add
xorl
and
jmp
xchg
jns
add
insb
xor
mov
add
and
ficoms
add
xor
loope
dec
shlb
jno
adc
loopew
cmc
cmp
repnz
in
jae
mov
adc
ljmp
and
rorl
lahf
shl
cmpsl
sbb
xchg
lods
or
pop
cmp
pushf
and
aas
in
add
fmull
xchg
sub
push
mov
mov
in
je
xor
xchg
ror
subb
xchg
add
xlat
fstp
data16
dec
sbb
dec
push
loopne
daa
daa
xor
sbb
push
jae
int3
add
jmp
adc
in
push
push
jecxz
arpl
mov
cmp
ret
lds
setae
insb
leave
mov
loop
xor
ds
add
sbb
cmp
daa
insl
cmpsb
adc
aam
xchg
mov
xchg
je
mov
and
ss
je
cmp
in
add
stos
fsubs
and
jbe
dec
daa
xchg
add
jns
movsb
sub
add
lea
push
clc
xor
mov
or
nop
xchg
jge
inc
dec
xchg
or
adc
imul
xlat
mov
jno
fcompl
sbb
test
or
mov
jo
mov
stos
pop
mov
and
sbb
add
sub
cmp
pop
loopne
ja
cmp
mov
sbb
add
mov
fnstenv
lods
leave
mov
shlb
xor
faddl
repz
clc
mov
in
add
loope
clc
out
lcall
daa
popa
pop
dec
xchg
std
addb
enter
push
lock
lods
mov
jae
mov
jle
pop
icebp
flds
enter
rolb
mov
lods
jno
mov
ret
mov
outsl
lret
xchg
ret
xchg
jp
xor
lea
lcall
add
mov
aaa
jge
mov
daa
pop
and
fs
mov
xchg
push
sbb
pop
daa
pop
cmc
xchg
pusha
add
out
adc
mov
sbb
cmp
pop
lods
and
add
inc
loop
adc
fstpl
inc
js
xchg
jl
ret
add
cmp
jnp
or
xor
shrl
call
jge
loopne
inc
add
sbb
repz
je
dec
jo
sub
sub
mov
or
pop
aam
sub
pop
clc
les
fmul
add
dec
adc
lahf
pop
pop
jns
mov
mov
into
std
enter
mov
jae
dec
and
mov
jne
filds
and
shlb
add
gs
lds
mov
inc
pushf
popa
movsb
adc
add
xor
les
and
in
add
inc
rcrb
push
pop
mov
mov
outsl
dec
xchg
sbb
pushf
fdiv
orb
add
add
jp
adc
test
js
call
push
dec
inc
inc
add
sub
inc
pop
fsubrl
mul
adc
popf
add
mov
or
clc
sub
arpl
pusha
lods
loope
inc
xor
popf
insb
push
jl
adc
mov
sub
add
das
sbb
in
cmpl
sbb
xorl
cmp
jecxz
jmp
addr16
loop
inc
rcrl
push
dec
inc
mov
pusha
dec
aam
xor
xchg
xchg
dec
inc
out
inc
add
xchg
gs
jmp
hlt
jns
cmp
lock
mov
aam
mov
mov
outsl
sub
mov
fisubl
movsl
loopne
stos
push
and
sti
jmp
xor
lods
outsb
fld1
and
in
enter
stc
inc
inc
test
and
out
ja
or
rorb
inc
sub
fnstsw
repz
inc
clc
pusha
pop
je
daa
push
xchg
push
imul
xchg
sbb
in
add
lahf
cmp
xchg
pop
mov
and
sarl
sub
push
adc
aad
cwtl
inc
jne
add
adc
sbb
sbb
xor
jns
sbb
mov
sub
adc
xchg
push
iret
cwtl
inc
xor
data16
add
fcomps
std
add
mov
lods
int3
mov
xchg
sub
out
loopne
or
inc
mov
enter
insb
loop
xor
add
and
pop
inc
repz
mov
int3
xor
jmp
je
sub
mov
add
les
inc
faddl
jle
out
ja
xchg
cltd
jmp
movsl
fcoms
sub
and
loope
imull
out
nop
daa
mov
jle
aam
fst
inc
pop
jno
mov
xor
pop
pop
adc
bound
push
sub
sub
out
sub
je
sbb
xchg
bound
mov
mov
add
loope
push
negl
jo
cmc
add
inc
mov
jnp
hlt
jge
jle
add
mov
idiv
adc
dec
std
adc
xchg
andl
adc
jle
jnp
add
mov
jne
cmp
xor
or
ja
mov
xorb
cmp
out
adc
cmp
mov
ficompl
xor
jns
aam
movb
pop
mov
ja
push
add
mov
and
insb
jns
test
inc
je
hlt
lock
ret
jp
push
sub
jno
mov
cmp
sbb
inc
adc
leave
sub
pop
xchg
rcl
sub
addr16
test
and
int
push
push
push
or
clc
ficompl
iret
mov
movsb
pushf
push
lret
mov
outsb
aas
sub
call
xchg
outsl
addl
push
fcoms
adc
xor
mov
mov
mov
add
xor
mov
sahf
add
dec
cmp
sub
xor
push
mov
mov
adc
xor
ret
jl
lods
jb
dec
imul
sbb
cwtl
mov
in
hlt
dec
call
lock
scas
mov
iret
shll
or
insb
pop
pop
jb
scas
pushl
fnsave
outsb
mov
push
inc
add
xchg
inc
pop
test
or
shl
push
enter
jp
cmp
push
int3
inc
add
add
jns
adc
or
jb
mov
insl
jne,pn
add
ja
cmp
dec
mov
add
pusha
jp
add
arpl
mov
out
or
xor
mov
loop
outsl
adc
lahf
add
ja
pusha
fchs
sbb
add
xor
xor
sahf
mov
add
gs
push
sub
loope
pop
cmp
and
cltd
roll
test
push
or
mov
lea
mov
jl
and
das
gs
add
inc
in
int3
mov
xor
cmp
adc
andb
jae
mov
shrb
ret
outsl
scas
leave
xchg
mov
imul
pop
add
incl
sub
xchg
cmp
sub
add
enter
sbbb
test
jae
pop
sbb
test
inc
loopne
mov
mov
into
and
and
fst
loope
mov
sub
popf
adc
daa
cmc
sbbl
ljmp
push
sbb
in
pop
test
jecxz
or
insb
ljmp
aas
cmpsl
movsl
rclb
or
xor
inc
cli
lret
or
sbb
sub
scas
pop
cwtl
jmp
mov
dec
shr
insb
cwtl
aas
and
sbb
cmpl
je
inc
pop
dec
pusha
or
sbb
mov
push
add
xchg
scas
fwait
bound
adc
lret
test
bound
into
fwait
std
and
int3
cmpsb
pop
sti
xchg
cmp
pop
and
subb
sub
sub
and
sbb
out
and
dec
jmp
mov
mov
adc
xor
dec
pop
je
mov
repnz
repnz
add
push
cli
mov
sub
outsb
arpl
lcall
lret
dec
js
and
add
aam
negb
ds
add
lcall
fldl
test
jmp
js
std
rolb
cmpsl
and
test
pop
xchg
imul
mov
sub
mov
add
imul
outsb
call
mov
jo
cmpsb
mov
popa
daa
or
cmp
roll
popa
jmp
jmp
aaa
add
pop
push
fisubrl
mov
daa
cmpsl
addl
mov
adc
xor
jae
dec
pop
sub
jne
mov
xchg
insb
fsubrl
in
and
xchg
fcoml
add
jle
cmp
jmp
and
cmp
fmull
in
cmp
add
sbb
mov
rclb
and
mov
add
ja
fmul
push
push
daa
lea
rcl
ja
pop
je
mov
faddl
mov
loopne
or
xor
or
mov
and
mov
dec
mov
cmp
movsb
enter
ret
cmc
xor
test
in
mov
loope
add
add
fisubs
into
mov
hlt
add
mov
in
add
cwtl
add
test
das
jns
or
mov
dec
add
xor
js
jl
daa
push
call
jns
sbb
sbb
call
int3
xor
stc
lods
jnp
cmp
push
pushw
pop
inc
out
rol
add
push
and
fnstcw
push
clc
cmp
mov
cli
rcrb
add
movsb
xor
push
and
mov
out
push
rcrb
dec
xor
test
adc
dec
mov
dec
dec
and
iret
sahf
xchg
in
rcl
cmp
js
ret
insb
push
or
push
sbb
pop
mov
arpl
insb
add
daa
pop
mov
clc
adc
popa
loopne
inc
outsl
adc
add
test
repnz
pop
jno
cmpb
dec
xor
ja
out
adc
push
scas
subb
lods
insl
xchg
cmp
xchg
or
sbb
sbbl
jo
cmpsb
mov
add
sub
xchg
hlt
push
push
shr
nop
or
orb
add
out
sbb
repz
add
mov
int
xor
inc
jge
sbbl
push
test
aas
jne
cmp
int
pushf
mov
pop
adc
inc
mov
mov
std
sbb
pushf
fstps
mov
add
addr16
arpl
dec
pusha
xor
inc
pop
jmp
cmpsl
out
mov
pusha
loopne
cmc
xor
leave
imul
pop
shrl
jnp
push
dec
ja
call
cmp
lahf
iret
or
sti
stc
jl
mov
push
mov
pop
push
push
inc
les
jo
push
mov
insl
hlt
mov
add
inc
mov
pop
data16
cmp
or
ljmp
out
outsl
jecxz
pop
fs
scas
std
orb
lds
movsl
stos
ds
and
push
mov
test
ret
notb
cwtl
aad
add
in
cmpsb
mov
add
jne
push
adc
lods
jle
nop
xchg
add
inc
and
push
mov
push
pop
or
in
lods
out
mov
sbb
mov
rorb
clc
xchg
enter
daa
mov
aad
nop
test
mov
pop
rcrl
jo
jg
and
iret
sbb
shrb
mov
push
lods
js
jae
jb
xchg
cmp
mov
adc
dec
es
mov
ja
inc
aaa
flds
aas
and
mov
insl
ja
das
sbb
cmpsb
rol
jecxz
pop
in
cwtl
subb
int
ret
mov
push
pop
and
add
pop
cmc
add
and
mov
inc
aad
lds
mov
jge
pusha
jle
fsubp
cs
out
enter
sti
fiadds
pop
repz
mov
fdivs
icebp
dec
jno
or
dec
ja
push
xor
out
lret
cmp
add
adc
sbb
cmp
adc
add
sub
add
pop
or
test
call
mov
out
mov
cmpb
pop
fists
js
imull
push
mov
aaa
add
shl
and
shll
add
jbe
xchg
jle
shlb
pop
cli
mov
xor
sbb
ljmp
gs
cltd
in
add
adc
dec
mov
pushf
xchg
sub
dec
add
gs
ja
cmp
aaa
cmc
test
jl
outsl
sbb
mov
xchg
sbb
orb
add
cmp
mov
add
inc
clc
mov
notl
pop
arpl
ret
cmc
and
jne
rcrb
mov
mov
lods
mov
add
mov
aad
push
daa
and
or
aam
int3
cmc
popf
mov
call
pop
ficoms
sub
add
jb
aad
movsl
loope
test
neg
add
jns
bound
in
add
jg
out
jle
dec
movsb
add
lock
adc
cmp
movsb
orl
add
add
push
push
xchg
jns
mov
or
mov
int
inc
mov
dec
cmp
into
xor
jg
lcall
mov
inc
stc
add
orb
test
mov
mov
daa
inc
mov
leave
call
ret
shl
pushf
or
out
xchg
mov
pop
jno
inc
outsl
jg
stc
inc
jns
sbb
psllw
addl
jbe
and
adc
mov
aad
inc
or
pop
xchg
test
out
sbbb
in
outsl
dec
loopne
inc
popf
lahf
pushf
xchg
in
std
ret
or
jmp
pop
rorb
xlat
xor
inc
ljmp
pushf
or
sub
add
sub
and
repnz
add
add
xchg
fisttpll
xlat
push
pop
fsubl
fdiv
mov
and
add
pop
cmp
dec
adc
scas
cmp
fildl
lock
lods
pop
dec
adc
bsf
std
jns
daa
pop
fsubr
das
je
or
cmpsb
sbb
jno
repnz
inc
adc
push
cmc
push
es
call
mov
stc
xor
das
inc
dec
mov
enter
jl
mov
push
pop
hlt
aas
fmuls
in
xor
inc
xchg
pop
pushf
adc
orb
inc
fwait
cwtl
mov
push
mov
aas
imul
call
popa
fs
dec
sbb
push
mov
shrb
mov
push
and
repz
les
loopne
add
pop
add
loop
rcrl
pop
dec
gs
mov
add
inc
std
scas
mov
adc
adc
ret
insb
mov
ret
cwtl
inc
add
push
mov
cmc
xchg
sbb
mov
lods
inc
or
test
test
lret
mov
xor
cmpb
lea
xorb
inc
mov
imul
push
mov
test
insl
xor
xchg
push
mov
aam
stos
cwtl
push
adc
and
hlt
in
mov
pop
adc
dec
mov
pop
jg
push
sti
imul
xchg
mov
add
aam
cmc
daa
and
add
dec
fildll
mov
mov
and
adc
add
push
ja
or
push
sbb
lret
pop
daa
les
loop
mov
lahf
ja
and
mov
mov
lods
int
cmp
lret
cli
xrelease
bound
cmpb
lcall
sub
add
inc
dec
clc
xchg
xchg
addr16
xchg
pop
sbb
add
add
out
inc
xchg
add
dec
repz
sub
jl
xor
leave
lret
push
adc
in
adc
sub
mov
wbinvd
sbb
mov
bound
add
mov
inc
inc
mov
inc
pop
jle
mov
inc
pop
and
ret
sbb
jmp
pop
add
push
iret
cmp
jg
dec
lea
outsb
addl
mov
out
incl
adc
in
psraw
insl
sbb
iret
pop
and
lock
jmp
jle
rol
imul
pushf
jb
daa
stos
push
cmp
es
adc
jns
sbb
mov
jp,pn
movsb
fcoms
mov
jno
cmpsl
jno
sbb
lods
movsl
in
mov
gs
orb
nop
pop
mov
pop
jb
add
in
xchg
mov
mov
lock
mov
dec
cwtl
dec
add
cmp
lea
mov
addr16
xor
leave
lret
add
rcrb
sub
imul
adc
repz
nop
jl
sub
subb
std
dec
dec
sarl
jg
mov
lods
add
icebp
sub
mov
xchg
xlat
xor
push
lods
sbb
test
std
jmp
dec
loopne
insb
jmp
xor
pop
push
addb
jle
mov
sbb
dec
add
fsubrs
mov
cs
mov
insb
xor
sub
je
mov
hlt
jbe
add
clc
add
ret
inc
mov
aad
add
call
pushf
adc
movsb
add
les
loop
scas
sbb
pusha
lods
jo
imul
push
push
and
ret
mov
loopne
repz
outsb
add
or
mov
dec
ffreep
sbb
jle
jo
fs
pop
out
je
test
adc
call
mov
add
mov
mov
jp
lods
jne
js
stc
add
fisttps
imul
jl
add
loop
rolb
mov
aam
lahf
push
jg
sub
mov
mov
or
in
fadds
xor
fidivl
dec
mov
add
jbe
int
lahf
mov
mov
xchg
xchg
add
cmp
jne
mov
add
pop
pop
loope
pushf
sbb
daa
adc
repnz
ret
rclb
flds
sbb
push
inc
mov
pop
xchg
sarb
cmp
fsubrs
aas
push
or
pop
int3
outsb
subb
jae
push
shlb
pushf
clc
mov
clc
jae
dec
mov
clc
and
arpl
mov
sub
adc
test
loope
clc
subb
outsl
addr16
adc
mov
and
out
jo
loopne
cli
loope
jle
lods
popfw
inc
push
out
cmc
dec
sub
xlat
ljmp
inc
sub
add
sbb
push
xchg
popa
jmp
stc
jb
insl
mov
popa
cmpsl
out
add
jbe
fiadds
add
lods
xchg
jns
adc
fs
mov
das
push
and
test
inc
int3
add
and
lds
imul
mov
add
xor
out
icebp
cs
mov
mov
mov
mov
mov
loopne
cli
pop
insb
les
pop
pop
inc
adcl
jle
test
dec
lods
push
mov
push
cmp
push
mov
sub
stos
in
jae
or
jo
lret
mov
or
jg
scas
add
es
mov
xor
inc
outsl
insl
shrb
adcl
and
adc
add
rcrl
sti
ljmp
add
and
xor
aaa
outsb
movsl
add
lods
stc
pop
in
lcall
ljmp
enter
push
loopne
inc
xor
popa
add
cwtl
loope
pop
aaa
and
xchg
xchg
shr
mov
adc
inc
lea
jecxz
cmp
sub
cmp
jmp
push
pop
pop
mov
int
dec
xchg
stos
or
inc
arpl
rcr
jmp
nop
aam
faddl
popf
mov
jo
and
push
inc
enter
add
aas
popa
or
mov
cmp
sbb
mov
cmc
sub
hlt
inc
push
cltd
adc
shrl
mov
idivl
iret
popa
mov
or
push
and
inc
cld
es
dec
outsb
clc
add
ljmp
lock
pop
pop
aad
sub
mov
inc
je
mov
sub
ja
enter
pop
lret
rcrb
mov
clc
mov
andl
cmpsl
xor
test
test
xchg
inc
out
fdiv
test
cmova
daa
mov
sub
in
xor
cmp
cld
jno
addl
ret
rol
sub
sbb
or
data16
jb
xchg
add
scas
cmpsl
arpl
je
fs
movsb
mov
mov
movsb
or
pop
cmp
loope
repz
stos
ljmp
insl
sub
pushf
mov
loopne
les
je
pop
jge
test
sub
daa
jne
xchg
dec
mov
xor
dec
push
inc
or
lock
jno
mov
repnz
mov
loope
add
xchg
ret
adc
orb
push
pusha
cmpsl
or
cmc
das
dec
adc
add
cmp
mov
mov
mov
and
add
or
scas
cmp
fsubrl
jp
aas
es
add
inc
xchg
test
xor
sub
xor
test
hlt
popa
and
lahf
xchg
out
or
adc
mov
lret
mov
add
push
aam
pop
mov
and
cwtl
lahf
adc
incb
cltd
in
aaa
mov
and
clc
mov
mov
shl
sbb
or
inc
cmp
cmpsl
cli
sbb
or
jp
cwtl
add
iret
jnp
scas
add
pop
push
xchg
pushf
enter
push
xchg
xor
adc
sbb
xchg
test
push
mov
or
leave
add
std
xor
out
lds
in
pusha
push
and
test
push
pop
push
add
cmp
sbb
or
popa
mov
loop
xor
mov
add
stos
imul
out
roll
loope
cmp
int3
aaa
leave
cmp
dec
push
add
fisubrs
nop
enter
push
dec
cmp
shlb
jle
mov
xchg
insl
aam
mov
insb
add
repz
xorl
dec
pop
add
sub
sub
mov
sbb
adc
shlb
nop
mov
daa
notb
jno
lahf
cld
roll
mov
jnp
in
add
leave
call
xchg
mov
pop
adc
add
jno
outsl
ss
xor
mov
inc
sbb
ret
dec
adc
repz
int3
lahf
sbb
jns
sbb
pop
inc
mov
adc
negl
int3
mov
jbe
cmp
dec
push
in
dec
call
pop
sub
adc
sub
test
mov
push
push
sbb
sub
add
outsl
dec
mov
loope
xchg
sbb
mov
sar
dec
popf
ret
ja
shlb
clc
dec
add
and
add
xchg
inc
jecxz
sbb
ss
add
fisubrs
xchg
fmuls
sub
adc
int3
pop
cld
pusha
inc
inc
loop
xor
call
push
in
outsl
sti
out
lahf
push
call
cmc
icebp
mov
shll
les
popa
jnp
in
scas
add
daa
adcl
and
push
adc
mov
xorl
addl
or
insb
lcall
and
xchg
loope
ja
inc
in
sbb
dec
xchg
xchg
lahf
paddsb
call
ja
sub
clc
sub
or
jmp
or
nop
sbb
xor
call
and
xchg
outsl
pop
into
sarl
loopne
pop
frstor
cmpsl
inc
and
add
in
jbe
push
ficoml
pop
sub
js
mov
jg
fisubs
and
jbe
mov
and
jne
movsb
mov
mov
scas
daa
popa
or
mov
fsubr
es
or
mov
dec
loop
sub
or
pop
subb
repz
movsb
movsb
adc
das
roll
and
sub
add
xchg
shll
ds
data16
push
sub
pusha
and
add
push
or
movb
dec
test
dec
inc
andl
insb
test
int3
inc
xor
adc
cmpsb
aas
cmp
jecxz
add
adc
adc
add
ficomps
rolb
pop
and
fs
pop
scas
and
push
xchg
xor
xor
cmp
mov
aam
rdtsc
mov
pop
test
add
in
jb
fdivl
pop
cltd
push
mov
pop
mov
push
sbb
cmpsb
cwtl
loopne
push
mov
ret
in
data16
jnp
rclb
add
shl
cmpsl
mov
sub
lahf
out
push
and
nop
clc
ret
jge
inc
arpl
or
out
ja
sub
jle
fadds
jle
jo
sub
pusha
mov
xor
mov
stos
mov
pop
or
fstps
clc
popa
and
or
rcrb
out
pusha
or
leave
imul
dec
pop
push
jp
out
jmp
int3
test
jno
and
fstpl
pop
mov
loopne
xchg
jo
int
jmp
clc
mov
loopne
cmp
add
xor
xchg
add
mov
out
dec
or
push
push
mov
add
adc
fld
jle
sub
jge
pop
pop
sub
daa
mov
and
lock
stos
lahf
popf
mov
dec
in
stc
lret
les
daa
push
ljmp
sbb
adc
lahf
and
sub
nop
fmull
nop
inc
jbe
sub
pop
js
popf
dec
jg
sbb
insb
cli
mov
repz
fld
mov
and
iret
paddusw
fdivrl
mov
xor
mov
test
cmpsl
or
pop
je
pop
cs
aaa
test
pop
cltd
int3
push
mov
sbb
push
add
inc
in
sub
xchg
test
shl
xor
xchg
add
add
call
pushf
xchg
pop
sarb
lock
daa
pop
outsb
into
xor
xor
stc
loope
pop
add
dec
mov
jmp
cld
push
mov
mov
inc
mov
sar
sbb
add
xor
inc
mov
out
push
data16
in
xor
aam
fs
xor
xchg
jb
cmc
inc
andl
push
stc
jmp
mov
push
cmp
lcall
fldl
int3
sub
shl
nop
push
outsl
mov
test
lcall
jne
insb
stos
fdivrl
popa
or
mov
fldt
imul
ja
inc
roll
and
pop
lds
incb
mov
sub
jle
and
fldcw
and
and
pop
fstpt
xorl
mov
daa
inc
das
pop
pop
and
rolb
mov
aam
adc
adc
add
and
out
and
pop
lods
or
test
shrb
sub
add
leave
xor
lahf
xchg
movsb
cmp
mov
sbb
je
or
pop
das
mov
push
add
in
test
mov
pop
in
pop
les
js
xor
mov
or
pop
int3
insb
sbb
shlb
movsl
andl
add
sbb
popf
jmp
inc
clc
rorl
jns
lods
repz
mov
adc
fwait
add
cmpsb
sti
stos
mov
je
call
fs
pusha
sbb
sti
lods
sbb
jp
int
adc
add
ret
dec
inc
mov
jmp
cmp
aas
pop
test
push
test
not
adc
add
loop
mov
xor
push
aas
aad
je
imull
add
jb
movsb
ret
jns
movsb
in
mov
pop
and
mov
xchg
sbb
sbb
fldt
pop
fcoms
fldcw
iret
call
dec
in
out
jg
add
sub
jecxz
enter
jno
add
stc
arpl
stos
cwtl
mov
add
dec
popf
or
cmp
jge
lock
or
ss
inc
jp
sbb
and
jl
xor
sbb
mov
in
shlb
les
fsubp
sub
subb
sbb
add
ffree
mov
scas
js,pn
cld
inc
sahf
sbb
add
cmp
adc
pushf
pop
movsb
sbb
xlat
add
or
mov
int3
orl
test
xor
push
add
leave
mov
sbb
fsubrl
mov
xchg
notb
int3
sti
dec
movsb
adc
adc
std
pushf
mov
addr16
fadd
jnp
mov
mov
pusha
sbbb
add
and
loopne
shlb
add
int3
ljmp
add
mov
pop
or
jbe
or
insb
cmp
and
std
or
ds
pop
testb
mov
adc
sub
ret
add
je
fwait
sbb
leave
xor
add
pop
dec
movb
mov
xor
mov
test
ret
ret
pop
add
mov
dec
arpl
dec
jne
clc
popf
dec
pop
inc
shl
aas
adc
daa
lcall
int
jbe
jno
jb
xorb
sbb
cmp
push
sub
mov
nop
xor
add
mov
nop
dec
inc
cmp
xor
fisttpll
call
sub
pop
aad
in
or
push
mov
pop
or
sub
arpl
adcb
fisubl
jmp
mov
pop
push
jl
jb
mulb
push
ja
sub
iret
enter
cmp
bound
mov
hlt
insl
fsub
or
icebp
cmp
divb
popa
mov
and
mov
add
roll
push
add
jae
adc
xchg
loopne
nop
lock
cli
jle
mov
orb
add
xchg
je
mov
movsb
pop
sahf
call
sahf
je
add
add
in
das
xchg
aam
mov
std
sbb
aaa
xor
insb
loopne
add
lcall
pop
xor
call
mov
sub
mov
fdivrl
pusha
outsl
fildl
mov
push
inc
push
add
cmp
aas
xor
cmc
and
nop
fs
and
add
popa
insb
in
jg
xor
jns
sub
push
mov
and
push
add
pop
or
aas
inc
and
leave
sub
jo
jns
popf
mov
push
enter
and
lods
dec
ja
push
mov
jl
jmp
and
insl
pop
call
loope
mov
in
jno
add
lds
mov
rorb
movsb
cmpsb
sbb
ja
mov
notb
je
movsb
bnd
in
movsb
jnp
push
xchg
jl
call
mov
shl
pop
lods
mov
in
fs
cmpsb
arpl
pop
jns
add
dec
add
imul
sub
sti
les
mov
adc
pop
add
lock
push
out
cmp
push
pop
stos
add
stc
jmp
push
clc
loopne
aad
adc
pop
push
call
mov
cmove
or
leave
call
aas
xchg
and
and
int3
sbb
xor
test
orb
jo
out
les
add
lods
xor
loope
dec
jne
push
add
es
imul
fwait
mov
add
sbb
cld
or
loopne
test
sbb
inc
add
adc
int
cmp
adc
add
arpl
inc
jnp
repz
call
call
add
dec
mov
mov
mov
mov
cmp
push
scas
jno
stos
lock
shll
fcmovnu
push
inc
cli
notl
mov
int3
repz
or
or
sub
ljmp
lock
das
cmc
mov
mov
mov
lods
adc
je
stc
cmp
mov
jne
add
in
psubd
dec
and
mov
and
imul
jb
inc
xchg
divb
xchg
jo
call
rclb
inc
push
addl
std
or
cwtl
hlt
incl
loop
test
jae
dec
push
xor
lcall
ret
dec
add
sub
cwtl
jbe
xchg
cli
add
mov
add
outsb
jno
push
or
sub
push
mov
cmp
inc
std
pop
push
test
or
jns
sbbb
mov
daa
shll
jnp
sub
ds
rolb
gs
sub
shll
mov
pop
inc
jno
fadds
lods
ljmp
add
xor
movsl
inc
loop
add
cmp
inc
shrb
add
loope
movsl
cmc
pop
popf
nop
js
imul
dec
xchg
mov
inc
pop
or
cwtl
or
jmp
add
fdivs
in
jo
hlt
xorb
and
sbb
inc
dec
enter
mov
test
mov
pop
loop
xor
xlat
pop
jnp
pusha
adc
add
stos
enter
inc
inc
pop
cmp
cmp
ja
cmp
imul
fldenv
fdivp
subb
insl
mov
jo
and
repnz
xchg
or
and
cli
cmpsl
and
rorb
les
sub
out
inc
loopne
lahf
cmc
push
in
int3
js
es
pop
or
mov
or
daa
adc
push
inc
popf
ret
jb
jnp
sub
por
lods
cmp
mov
les
add
inc
jnp
dec
insl
out
stc
add
mov
test
pop
cmpsb
xchg
movsl
scas
je
cmp
add
mov
stos
cltd
in
xchg
pop
and
cmp
jb
daa
sar
push
cwtl
mov
repnz
push
xchg
mov
dec
lock
jns
mov
out
sahf
adc
cmc
sub
push
pop
into
inc
mov
mov
sbb
cmc
cmp
mov
push
push
mov
cld
fs
aaa
fistps
xor
mov
or
adc
inc
pop
dec
mov
dec
imul
pop
scas
dec
int3
adc
and
cmc
sub
enter
dec
mov
nop
std
sbbl
add
sub
je
or
addb
or
mov
sbb
shl
pusha
mov
sahf
sub
pop
add
xchg
fsts
cld
lock
xchg
sub
and
sub
fdiv
add
xchg
jnp
pop
icebp
pop
mov
call
enter
jle
add
jnp
and
cld
aaa
repz
xchg
mov
cmp
add
iret
sbb
inc
push
lahf
loop
pop
cld
dec
cmpsl
push
sbb
sbb
leave
cmpsb
adc
loope
repz
inc
addb
mov
push
dec
dec
inc
mov
pop
fisubs
push
fs
loopne
xchg
jecxz
in
or
rol
adc
and
sub
add
movsl
mov
add
mov
mov
daa
lds
out
pop
stos
xchg
xorl
jl
mov
cmp
mov
mov
inc
mov
je
adc
pusha
out
jle
icebp
xchg
add
lahf
int
cltd
orb
or
mov
cwtl
cmpsl
inc
cmp
repz
mov
in
mov
lods
mov
in
or
inc
mov
jmp
add
jne
negb
loopne
push
stc
adc
and
dec
pusha
sub
or
pop
mov
ss
ja
aam
mov
dec
sub
xchg
ljmp
out
adc
icebp
xchg
add
jne
out
xchg
inc
aam
ret
pop
sbb
xorb
add
pop
mov
nop
sub
ret
cmc
xor
cld
jmp
mov
add
cltd
stos
dec
jg
pop
jle
pop
sbb
mov
mov
mov
xor
cwtl
outsl
inc
cltd
and
cmp
stc
test
je
in
push
ljmp
es
mov
sbb
sbb
cmc
out
add
btc
pop
es
movsb
int3
mov
mov
mov
aam
icebp
sub
test
pop
jg
or
std
dec
mov
inc
and
jl
imul
xor
mov
fcompl
push
and
je
cmpb
and
pop
add
adc
aaa
test
and
pop
call
xor
inc
sbb
push
pop
add
arpl
test
cmp
cmp
orb
or
out
add
lods
inc
pop
insb
loope
adc
imul
sub
mov
add
js
push
xchg
mov
pop
pusha
les
cmp
adc
add
fidivrl
clc
xchg
mov
add
pop
lods
fcompl
lds
jbe
and
test
aam
mov
add
lods
test
mov
mov
push
add
xchg
mov
adc
dec
lcall
or
push
fdivrs
clc
das
mov
call
in
pop
xor
xor
dec
pusha
repnz
test
clc
and
xor
frstor
mov
je
lahf
add
push
mov
cs
test
adc
mov
mov
jb
or
lods
rclb
insb
mov
jne
push
xchg
loop
xor
lcall
mov
cld
xor
dec
jmp
sarb
mov
pop
popf
push
bound
cld
clc
push
clc
decb
xchg
stc
adc
sbb
daa
dec
lcall
mov
mov
outsb
idivl
inc
jo
add
push
pop
mov
jnp
jne
mov
shlb
les
jo
sbb
inc
jne
mov
inc
jle
data16
shrl
and
call
fidivs
dec
int3
cmp
lods
mov
jl
jbe
out
sub
push
xchg
test
fadds
adc
mov
loopne
out
adcb
enter
mov
or
daa
xchg
ds
cmp
enter
and
add
ja
sbb
sbb
jne
lock
sarb
inc
mov
add
sub
bnd
dec
clc
adc
jno
dec
outsl
ss
or
xlat
mov
cmp
loop
cmp
int3
pop
jp
icebp
cmp
sbb
pop
pop
call
or
test
mov
sub
leave
cwtl
lcall
jg
add
sub
add
fbld
insl
in
cs
incl
mov
test
mov
inc
das
and
or
stc
imul
inc
mov
nop
or
add
cmp
stc
in
mov
daa
cmpsb
pusha
std
fnstenv
add
jbe
clc
xor
jb
xor
cltd
push
mov
dec
xchg
loopne
jb
pop
roll
mov
dec
sbb
mov
popf
or
inc
sub
into
loop
lahf
mov
xchg
ss
incb
jp
shl
pop
std
sub
ja
hlt
js
mov
rol
cmc
fisttpl
jecxz
sub
nop
sub
mov
lcall
and
repz
pop
ret
pop
pop
inc
sub
stc
les
xchg
nop
test
sub
sbb
mov
cld
add
andb
jmp
adc
jne
lahf
pop
xor
cmp
call
shlb
sbb
je
sbb
lods
mov
cmp
xchg
cmp
inc
scas
mov
jns
add
mov
xor
and
cmp
notb
pop
pusha
xchg
std
in
mov
pop
ja
or
mov
push
adc
in
pushf
les
jecxz
dec
mov
adc
lods
loop
xor
insl
jl
idiv
pop
jg
or
jno
jg
add
insb
cmpsl
adc
cmp
xor
push
popa
movsl
pop
arpl
rcrl
mov
stc
add
in
loope
dec
test
shll
pop
sub
test
adc
sub
xchg
or
mov
in
add
or
jg
outsl
dec
pop
repnz
js
jo
xchg
cmpsl
js
imul
fwait
leave
adc
adc
inc
mov
pop
pop
sub
sub
lock
or
cmpb
jg
add
push
and
jecxz
mov
aad
fsubr
add
movsl
dec
insb
in
outsl
inc
insb
sbb
mov
jl
inc
push
add
jne
inc
jb
inc
pop
mov
pushf
xor
or
data16
jmp
fs
xor
dec
jl
in
mov
xchg
jno
pop
inc
les
and
push
and
pop
sbb
psrlw
jno
and
imul
add
lods
add
jb
in
push
and
es
mov
adc
push
xor
mov
adc
push
test
jl
mov
cltd
imul
inc
stos
das
scas
js
sahf
std
mov
push
test
outsb
ja
sub
clc
pop
add
cmp
fadd
in
and
and
sbb
pop
adc
repnz
lahf
lret
dec
or
push
out
ds
xor
or
dec
and
push
push
fsubrl
xchg
add
cmp
lcall
pusha
bound
lock
insb
pushf
add
test
je
scas
cmpsl
push
xchg
jno
adc
add
mov
mov
cltd
or
jg
clc
dec
fs
lcall
dec
adc
add
xchg
dec
testb
nop
mov
movsl
enter
xor
dec
int3
mov
je
add
or
fdivrs
sbb
cmp
xchg
fists
inc
test
je
inc
loope
imul
mov
leave
mov
stc
add
add
cld
movsb
out
insl
popf
add
subb
and
stc
hlt
lods
sub
xchg
insl
test
js
fisubl
push
ficompl
lret
roll
add
or
xor
shll
add
or
pop
clc
faddl
or
jmp
dec
or
mov
mov
subb
xchg
push
xor
inc
add
push
mov
movsb
movsb
or
pop
mov
mov
or
or
mov
rorl
movsl
pop
sbb
testb
jmp
jbe
add
popf
lods
and
mov
or
xor
mov
pop
adc
pop
test
sbb
adc
les
cwtl
int3
mov
jg
jg
mov
jmp
jne
fcompl
data16
out
cmp
mov
pop
add
mov
sbb
dec
mov
xchg
das
add
cmp
fisttps
add
jbe
jne
cmp
jecxz
test
or
pusha
mov
pop
xchg
int3
add
hlt
and
push
enter
repz
jo
cli
add
es
sbb
mov
adc
leave
xchg
adc
mov
jne
stos
jg
insl
inc
fbstp
in
cmp
shrb
or
jne
test
popf
cmp
jg
roll
aad
aas
sub
loop
add
sbb
mov
adc
sub
xchg
lcall
jmp
jno
push
cli
dec
sahf
lret
jle
enter
cmpsl
mov
loopne
jmp
out
pop
push
cmp
lods
mov
push
gs
xor
pop
and
add
mov
push
jbe
or
adcl
aas
and
add
jbe
dec
push
cmp
or
xchg
loope
mov
fildll
sub
leave
aas
dec
dec
adc
push
or
xlat
daa
ljmp
and
ss
xor
scas
jp
dec
mov
mov
push
mov
flds
push
sub
add
jnp
daa
loopne
mov
push
adc
inc
mov
dec
out
imul
subb
in
and
pop
xchg
adc
jp
or
pop
insb
negl
push
fbld
negl
cmp
popa
inc
jae
cmp
cltd
push
mov
hlt
push
loopne
mov
add
sub
lds
dec
add
xchg
pusha
lahf
jl
xor
pop
push
mov
push
mov
push
pop
leave
mov
jle
mov
insl
mov
insb
push
push
or
push
push
pop
push
bound
pushl
adc
lret
push
push
stc
and
push
pop
pop
addl
xor
flds
lea
add
mov
bnd
xchg
xor
orb
in
repnz
aaa
xchg
into
and
hlt
in
fbld
and
out
or
mov
mov
jmp
or
sub
cwtl
daa
and
cmp
aaa
pop
pop
stc
dec
mov
or
push
inc
fs
xchg
lods
push
add
dec
icebp
add
imul
out
push
xor
push
sub
inc
and
pop
int
add
sbb
mov
cld
mov
popf
std
insb
mov
inc
test
sbb
or
pop
je
daa
adc
mov
adc
repz
sub
adc
xchg
dec
ret
mov
dec
push
clc
imul
mov
pop
aam
aad
xchg
das
mov
fwait
shl
inc
out
add
mov
push
push
pusha
xchg
dec
adcb
lock
or
mov
sarl
negb
inc
mov
popa
addb
jb
andl
mov
jge
mov
mov
push
loopne
out
add
mov
rorb
flds
imul
xchg
shlb
rcll
pusha
insb
push
decb
js
mov
jp
data16
out
pusha
lods
adc
aas
mov
add
movsb
rcrl
and
jl
mov
mov
push
repz
mov
push
add
pusha
aam
mov
popa
jno
adc
push
jo
and
pop
pop
lods
imul
in
mov
cli
sub
pushf
lahf
arpl
xchg
xchg
xorb
fidivrl
lcall
aad
mov
cmp
lds
pop
xor
popf
pop
adc
outsl
cmc
push
add
pusha
fsubrs
push
xchg
add
xchg
insl
movl
leave
mov
cmpsb
cmc
jae
inc
add
sbbl
pop
cmc
in
outsb
enter
add
shll
mov
clc
xchg
sbb
xchg
icebp
jg
xchg
sbb
pop
xor
or
icebp
adc
cmc
aam
adc
adc
mov
int
or
fldl
nop
mov
pop
jecxz
dec
adc
call
cmp
add
stos
xor
fisttps
lods
outsb
dec
xchg
dec
mov
fstps
and
das
fidivrs
fcoml
mov
loopne
xchg
xchg
movq
mov
and
pop
add
call
dec
ss
mov
pop
add
adc
jmp
xchg
xlat
test
jge
mov
sub
ljmp
cmpsb
in
jae
jns
loop
lahf
imul
leave
cmp
jb
xchg
gs
es
mov
mov
jle
jnp
not
call
insb
cld
adc
push
add
in
dec
stos
jns
ds
add
movb
or
in
adc
pop
addb
and
movl
push
mov
in
jno
xchg
addr16
pop
add
sarl
push
sbb
sub
pop
aam
and
loopne
clc
into
push
out
add
xchg
call
adc
and
out
cmp
xor
lea
ljmp
dec
int
in
sbb
jge
imulb
cmpb
scas
rcrb
icebp
stos
call
push
iret
fdivl
add
and
mov
inc
mov
adc
out
bound
mov
or
aaa
push
push
jne
je
jg
push
clc
test
dec
fidivrl
fistl
mov
or
mov
arpl
xchg
mov
inc
test
bound
adc
xor
cli
fstps
mov
in
xchg
sub
popf
cmp
shll
jg
mov
add
rol
lfs
ret
das
xlat
or
sbb
push
test
mov
bound
faddp
sbb
inc
xor
add
xchg
dec
orl
push
mov
sbb
jle
sub
or
push
mov
xor
sbb
fists
adcb
or
enter
inc
ret
jmp
dec
inc
fcoml
cmp
loopne
ja
aas
cmp
add
mov
mov
in
add
in
dec
push
repnz
add
ds
xchg
jge
sbb
jno
rclb
jecxz
fsubrl
dec
mov
into
mov
pop
lods
rorb
fstpl
add
xchg
sbbl
mov
jmp
sub
pop
fdivrl
mov
and
add
pop
je
pusha
in
mov
scas
push
sbb
in
rcl
popf
jge
jl
pop
testl
and
das
jmp
mov
xor
invlpg
call
in
ljmp
mov
add
loopne
mov
out
jne
pop
inc
and
add
lcall
add
mov
add
and
addb
insl
cmc
lods
or
sbb
pop
and
sub
popa
mov
push
inc
jnp
mov
fxch
inc
push
je
mov
je
push
mov
pusha
mul
mov
sub
enter
subb
lods
add
inc
cmp
xchg
and
andl
test
adc
add
or
ret
xor
test
fadds
cmpsl
inc
add
pop
subb
cmp
jle
sbb
pusha
test
xor
popaw
cmp
sarl
dec
and
inc
dec
adc
bound
xor
or
push
les
jp
push
movsl
adc
mov
xchg
mov
add
mov
cmp
dec
clc
icebp
pop
push
test
or
pop
jnp
js
mov
call
jb
clc
rolb
cmp
loopne
pop
stos
mov
xor
inc
push
ljmp
add
nop
xchg
cmp
pop
pop
notl
lods
add
mov
mov
pusha
dec
or
mov
or
push
inc
inc
sbb
aaa
ja
jne
out
dec
fwait
pop
mov
xchg
idiv
fsubl
adc
call
pop
cld
push
push
jo
pop
or
mov
adc
test
and
sub
je
mov
dec
nop
imul
lods
inc
cs
lods
pop
add
test
mov
add
pop
push
mov
or
int
data16
dec
or
hlt
add
xchg
cmp
dec
push
fucomip
sub
or
and
ds
jb
push
mov
pop
int
inc
add
sbb
pop
out
mov
ja
fcompp
dec
adc
stos
nop
inc
pop
int
add
cmp
mov
fistpll
shrb
jmp
imul
aaa
cmp
cltd
sti
mov
or
mov
inc
cs
jae
sub
pminsw
lods
pop
sahf
inc
rcll
mov
roll
or
and
jle
sbb
add
adc
js
repnz
pushf
scas
cld
stos
fdivr
es
adc
outsl
sbb
test
xor
out
xor
add
sbb
and
jnp
jo
iret
loopne
or
inc
test
adc
pusha
int3
sub
rcrl
test
dec
fxch
cmpsl
stc
xchg
lcall
nop
push
push
loop
add
sbb
flds
jl
enter
insb
push
test
pop
mov
push
rolb
xchg
adc
bts
and
add
movsl
dec
in
aad
popf
push
sbb
popf
push
adc
cmp
dec
push
iret
jnp
push
sbb
jge
sti
push
push
pusha
imul
aas
mov
or
pop
pop
add
lcall
push
add
call
and
push
scas
mov
mov
adcl
int3
inc
jge
repz
and
cmp
aas
sub
lods
or
mov
imul
mov
inc
xor
push
and
mull
push
add
mov
lcall
add
pop
or
jl
ficoms
out
push
repz
adc
push
mov
sub
bound
sub
mov
cmc
fiadds
mov
or
sub
push
daa
inc
cld
pop
adc
xchg
pusha
loop
pop
pop
xor
pop
jne
cld
ljmp
cmp
add
xchg
lds
call
pop
sahf
dec
loop
xchg
pop
dec
add
in
push
xor
clc
lret
adc
imul
imul
or
in
or
js
xlat
add
push
or
das
scas
cmp
cmp
jp
pusha
repnz
dec
leave
jmp
outsl
inc
jge
pop
jmp
loope
gs
push
pop
adc
dec
shll
push
xchg
adc
add
pop
repz
movsl
mov
lahf
sub
inc
imul
add
sti
shrb
int3
push
push
mov
pop
fnstenv
stos
popa
xchg
je
add
xchg
add
lea
add
shl
push
mov
iret
sahf
inc
jo
loop
add
xchg
or
jo
mov
add
addb
outsb
adc
dec
into
inc
mov
jp
add
xor
stc
sub
add
pop
adc
mov
je
push
imul
add
push
pop
insb
repnz
and
push
in
sub
inc
xchg
inc
lods
inc
les
adc
push
push
rcrb
in
hlt
dec
jp
xchg
cwtl
in
xchg
jg
xor
sbb
adc
imull
int3
pop
nop
repz
mov
sub
pop
add
fcmovne
mov
jae
test
pop
mov
popf
int3
dec
insb
outsl
add
jns
jns
xchg
pop
mov
add
pop
rclb
mov
jmp
pop
and
xchg
mov
mov
adc
neg
stos
mov
loopne
pop
sub
cmpb
out
mov
cmp
adc
and
mov
clc
fcomps
mov
sbb
xchg
dec
xor
test
jo
push
add
sub
popf
repnz
call
loope
add
mov
xorb
or
xchg
inc
aad
xor
mov
idivb
add
mov
rorl
inc
dec
cmp
add
lds
dec
into
clc
dec
cld
gs
ja
movsl
jns
add
jno
popa
int
sub
jnp
jnp
add
enter
inc
scas
cmpb
pop
mov
push
sub
or
xlat
fidivrs
dec
aam
clc
cmpsb
cmp
dec
stos
aas
addb
push
outsl
loop
or
les
popa
dec
out
imul
test
subb
adc
fs
mov
jo
sahf
addb
mov
add
int3
xor
test
pop
xchg
incb
pusha
adc
fcoms
inc
cmpb
and
mov
mov
add
and
mov
mov
push
dec
push
mov
das
add
xchg
sti
mov
leave
push
pop
mov
add
mov
mov
add
andl
cmp
int
pop
nop
lahf
push
das
gs
add
sbbl
push
cmpb
push
push
cmp
decb
sbb
push
mov
add
out
sbb
sbb
sbb
repnz
and
popa
adc
out
add
cmp
or
andb
daa
clc
mov
xlat
xchg
mov
sub
in
js
jge
gs
ficoml
jge
mov
sbb
mov
lock
lcall
and
mov
stos
add
jb
xchg
scas
cmpb
addr16
push
xor
lods
mov
sbb
imul
insl
or
inc
pop
subb
and
sub
sti
movzwl
or
in
insl
xchg
add
inc
fnsave
sbbb
outsl
adc
out
lea
fisubrs
call
adc
notb
jnp
and
mov
das
inc
push
ds
outsl
jmp
rcrl
ret
xchg
sbb
cmp
and
sub
add
outsl
jb
nop
pushf
mov
add
and
inc
into
je
inc
adc
imul
shll
sahf
loop
jo
je
inc
lds
adc
jae
sbb
sbb
and
xor
pop
cmp
stos
xchg
jge
out
jecxz
icebp
and
jns
lcall
ja
cwtl
and
clc
push
inc
sbb
lds
sbbl
mov
mov
mov
xchg
pop
in
dec
repz
rol
cmpsl
inc
scas
or
movsb
loopne
lret
mov
jne
sub
jnp
and
jp
or
gs
add
mov
and
xchg
scas
into
repnz
jle
mov
add
push
xchg
je
mov
jecxz
hlt
xor
adc
jne
mov
mov
mov
or
popf
movsl
and
mov
incl
jb
cmpsb
jecxz
adc
mov
or
loopne
ja
mov
and
cmp
stc
out
adc
in
jno
shlb
lea
dec
pop
lret
sbb
mov
sbbb
inc
dec
or
in
ret
push
ficompl
jns
ja
cltd
adc
lods
and
adcl
xchg
add
aam
mov
sub
in
and
fcoms
test
xchg
adc
insb
add
push
es
stc
or
xor
mov
and
arpl
outsl
mov
add
jmp
mov
dec
sbb
jmp
xchg
or
cmp
and
sbb
inc
sbb
xchg
insl
adc
cmpsl
or
mov
jle
mov
incb
or
adc
or
inc
pop
xchg
pop
sbb
push
and
scas
loop
popa
daa
xchg
bound
add
cmp
stc
or
arpl
ja
mov
mov
andb
bound
adc
lahf
dec
out
pop
scas
mov
mov
adc
pop
cld
mov
inc
pop
pusha
push
pop
out
daa
xchg
cmp
outsb
mov
dec
in
or
push
push
inc
fcomps
jg
mov
push
daa
sub
adc
push
mov
pop
sub
xchg
ret
leave
or
insl
shlb
adc
jp
aas
cmp
nop
cmp
cli
movsb
dec
cmc
stos
add
mov
cmp
and
add
cld
fdivrs
movswl
cmpsl
arpl
rcrb
jb
sti
cmp
jl
sbb
mov
sub
or
mov
inc
mov
mov
xor
pusha
push
mov
inc
inc
ds
xchg
mov
sti
cltd
mov
xor
adc
popf
mov
xchg
pushl
repnz
add
jnp
mov
fmull
inc
sbb
ret
das
std
popf
add
mull
je
push
inc
add
lret
ja
mov
notl
fisubrl
lods
dec
decl
inc
cmp
cwtl
js
xchg
push
inc
idivl
cmp
push
jo
add
push
mov
cwtl
pop
lahf
and
jne
clc
enter
pop
popf
or
pop
sub
xchg
xchg
lock
in
aam
fldt
fstl
aam
add
aam
cmp
cltd
pop
pusha
into
daa
mov
inc
daa
repz
sbb
aam
cs
out
xchg
add
call
push
icebp
dec
xchg
pop
ret
push
pop
xchg
nop
pusha
out
lds
mov
sub
add
push
pusha
xor
mov
push
pop
pop
mov
or
repnz
mov
mov
adc
sbb
jmp
sub
mov
mov
fdivp
test
gs
je
js
adc
sbb
mov
test
adc
add
mov
jmp
jae
mov
jg
jge
jle
popf
daa
in
dec
aad
je
addr16
sar
lcall
lods
inc
testb
aad
mov
xchg
test
add
sub
jo
popf
fbstp
cmp
jmp
and
jo
mov
call
mov
push
cmpsb
lret
add
sub
pop
popf
test
loopne
xorb
push
jo
fldt
mov
push
rcl
add
fisubl
fstpl
xlat
fmull
movsl
stc
cmp
cmp
mov
popf
pop
and
jle
out
ret
in
in
cmp
mov
sbb
in
mov
mov
ja
stos
ds
repnz
in
add
aad
fnstsw
jo
nop
cmp
aaa
add
shll
rorb
out
sbb
jns
xchg
shll
jnp
cmovp
cmpsl
pop
push
mov
pop
mov
aaa
sbb
push
enter
into
push
add
pop
xchg
daa
jmp
or
adc
adc
rorb
sub
addr16
test
arpl
jecxz
mov
mov
ja
mov
stc
jl
jmp
idivb
rcl
lods
daa
popaw
int
rolb
lret
add
lock
ret
test
clc
inc
push
das
xchg
adc
mov
dec
mov
andb
dec
xchg
or
imul
or
push
adc
pop
mov
sbb
xchg
inc
sub
or
adc
fdivs
adc
test
pusha
sub
faddl
test
mov
lods
add
pusha
mov
popa
pop
enter
adc
jno
add
lds
or
loope
inc
cmp
cmp
enter
popa
adc
or
push
push
mov
pop
xchg
pop
fsub
dec
add
cmp
lea
popf
and
imul
sarl
sbb
pop
add
mov
cmpsl
ss
xor
mov
dec
jmp
pop
jmp
daa
push
xchg
mov
mov
sbb
dec
cmpsb
mov
push
pop
pop
mov
sahf
jns
dec
loop
or
js
xchg
dec
pop
shl
xlat
dec
das
sbb
bound
sub
js
data16
add
mov
mov
pushf
call
clc
test
int3
mov
mov
bound
cli
in
xor
div
jl
ds
mov
jmp
push
inc
or
jecxz
mov
cli
outsb
and
lea
pop
je
inc
sbb
test
insl
add
cltd
sub
or
loopne
es
sbb
inc
nop
stc
sbb
pusha
push
cmpsb
pop
cmp
mov
add
stc
inc
pop
clc
imul
aam
lock
int
cmp
inc
andl
sahf
add
sbb
xor
lods
jp
add
dec
xor
pop
mov
fwait
daa
fndisi(8087
push
mov
add
add
pop
mov
jbe
add
ss
push
mov
dec
add
int3
cld
icebp
jecxz
push
push
fiaddl
mov
loopne
xor
andb
lret
or
or
add
cmpsb
aam
and
int3
daa
lds
lea
loopne
filds
cmp
mov
es
cmp
iret
enter
and
cmp
and
dec
or
xchg
pop
mov
test
dec
shr
push
cmp
push
lret
adc
test
cmpsb
xor
xchg
add
and
fidivl
movsb
mov
mov
pop
data16
xchg
and
stos
icebp
jmp
mov
fs
mov
test
negl
push
inc
pop
push
inc
pop
add
mov
push
fisttpl
cli
test
add
sub
mov
mov
cmc
mov
frstpm(287
js
jno
pop
ljmp
xchg
dec
into
das
and
add
shl
xchg
mov
daa
lcall
xor
mov
dec
mov
dec
ss
cmp
fs
fwait
inc
rol
cmc
pop
pop
adc
mov
je
faddl
popa
mov
pop
dec
in
sbbb
xchg
inc
push
push
in
cmp
das
enter
mov
pop
sub
bound
shlb
call
mov
dec
sbb
lahf
bound
test
or
sub
cwtl
popf
sbb
rcr
pop
cmpsl
stos
or
in
dec
das
pop
shrl
adcb
mov
loope
pop
mov
dec
mov
sbb
sub
das
mov
xlat
mov
les
mov
es
push
xchg
cld
cmp
leave
inc
fisttpl
xor
push
imul
pop
add
test
and
jne
adc
mov
adc
xchg
add
inc
bound
add
pop
nop
push
pminub
aaa
imul
test
xchg
ss
jne
xor
lds
jb
es
xlat
jae
stos
das
dec
sbb
jecxz
outsl
push
addr16
jns
mov
add
or
xchg
and
xorb
aam
sbb
roll
ret
or
jg
dec
fisttps
out
sub
mov
push
loop
adc
in
xchg
ret
mov
add
adcb
add
inc
pusha
sub
mov
insl
mov
mov
add
enter
andb
mov
out
add
pop
dec
loop
sub
ret
push
scas
xor
jo
rorl
push
jmp
xlat
dec
jmp
inc
sbb
pusha
pop
negl
mov
push
bound
stos
xor
adc
mov
or
add
dec
sub
jmp
xor
popl
daa
out
out
add
in
mov
push
pop
iret
clc
ljmp
dec
ret
push
loop
leave
xchg
adc
jg
push
adc
add
adc
in
btc
je
movsl
andl
sbb
inc
movlps
sbbb
mov
push
add
mov
push
aam
xchg
loope
push
outsl
ljmp
or
leave
xchg
jl
mov
and
and
push
rolb
inc
inc
mov
bound
out
add
mov
and
stos
mov
arpl
adc
push
faddl
movsb
sub
mov
xor
pop
ror
in
cmp
les
movsb
sbb
les
sub
push
push
jmp
popf
push
sub
pop
add
xlat
mov
ucomiss
aaa
jmp
and
cmp
fldenv
push
or
lss
insb
add
lret
fmull
dec
add
push
mov
sbb
adcb
int3
sub
into
jno
cli
lret
push
inc
adc
jmp
mov
xchg
insb
sbb
flds
jnp,pn
add
mov
push
jge
shlb
pop
sub
pop
pushf
cmp
dec
rcl
add
les
dec
scas
jo
add
dec
loope
in
das
sub
loope
pop
rclb
mov
movsb
int
loopne
xor
add
popf
mov
fidivrl
mov
faddl
add
fsubrl
lret
add
nop
inc
cmpsl
ret
cmovle
adc
and
mov
jl
imul
enter
mov
inc
imul
xor
cmp
and
cmpsb
insl
addb
mov
cmc
nop
ja
mov
dec
cwtl
push
int
std
out
pop
mov
mov
movsb
adcl
and
das
jae
or
inc
outsl
pop
add
dec
jnp
inc
lret
mov
push
daa
push
push
jge
in
pop
pop
xchg
orb
lahf
std
inc
fists
or
jle
rolb
pop
jmp
mov
nop
out
push
es
sub
adc
in
shlb
mov
loopne
test
or
cmp
push
or
pop
incl
std
pop
adc
int
jge
xor
cs
cmp
dec
test
sti
neg
mov
mov
inc
daa
mov
test
jmp
add
adc
mov
jecxz
adc
loopne
fldt
adcb
rcrb
add
hlt
shlb
cwtl
jbe
mov
aam
pop
push
xor
roll
push
mov
pop
add
cwtl
popa
sub
inc
mov
shlb
push
push
cmp
in
popf
fldenv
xchg
push
pusha
lock
mov
loop
xchg
or
pop
push
out
addr16
jecxz
dec
fsubrs
xchg
pop
mov
lcall
out
repnz
push
or
mov
aaa
add
hlt
outsl
mov
pop
add
and
repz
pop
mov
rolb
xor
jne
filds
mov
nop
out
and
pop
mov
daa
jp
xchg
ret
sub
jns,pn
nop
ret
jp
mov
dec
aad
fstpl
repz
cmp
or
js
dec
adc
dec
loop
lea
jmp
repnz
mov
out
adc
cld
sbb
lahf
pop
outsl
pop
jmp
mov
enter
push
dec
lcall
stos
cmp
ss
loop
and
and
adc
test
dec
dec
mov
mov
fsubl
adc
mov
and
repnz
cmc
inc
mov
pushf
add
ljmp
xorl
and
js
add
sub
das
pusha
mov
cmp
xchg
cwtl
mov
xchg
shrl
push
arpl
pop
mov
or
inc
lret
xchg
hlt
and
jo
sub
jnp
and
mov
ret
inc
jp
mov
adc
pop
sub
xor
sub
push
add
mov
add
das
xor
out
loope
mov
cmpsl
xchg
test
shl
ret
in
hlt
xchg
xchg
adc
clc
icebp
ret
mov
roll
and
push
push
cld
push
and
mov
inc
fistps
fisubs
pop
movsl
pop
pop
lods
jne
idivl
sarb
repnz
and
rorb
jmp
cmpb
lods
jae
rcl
popl
sub
call
push
and
or
mov
xor
pop
push
mov
popf
inc
push
and
rcrb
pop
rcrb
add
mov
jp
pop
mov
xchg
loope
or
sub
out
push
rcrl
pop
sbb
pop
xchg
or
and
and
les
dec
mov
pop
test
stos
and
xchg
xchg
cmp
adc
shrb
add
push
adc
mov
mov
adc
jge
mov
nop
xchg
mov
adc
or
push
inc
push
push
test
or
push
roll
cmp
pusha
mov
insb
pusha
adc
xor
loopne
lcall
cmp
pop
jnp
cltd
or
push
add
jge
xchg
mov
push
push
cwtl
repnz
add
pop
inc
push
fcomi
adc
aaa
pop
xlat
inc
pop
mov
push
mov
lods
orb
xchg
insl
int
movsl
mov
xor
imul
out
mov
cltd
xor
shll
lret
leave
fadd
inc
and
pop
lret
and
jne
sub
das
fildl
ds
add
pusha
and
bound
inc
js
and
jns
inc
ret
pop
test
push
xor
dec
test
ds
paddsb
sbb
stos
sbbl
orl
add
aam
and
lea
push
scas
outsl
inc
or
jle
test
mov
jge
fwait
mov
or
mov
inc
jbe
inc
adc
xchg
fisttpl
or
xor
call
stc
dec
sub
icebp
fadds
dec
punpckldq
mov
pop
jg
and
je
inc
jns
rcrl
mov
std
adc
inc
cltd
test
imul
inc
or
or
ret
in
jb
pop
out
adc
jnp
movsl
mov
mov
add
in
aaa
gs
mov
daa
adc
and
mov
adcb
and
popf
pop
out
and
add
divb
add
add
push
pop
sar
outsl
fdivs
popf
and
mov
adc
mov
adc
mov
add
test
popf
or
pop
nop
add
stc
scas
subb
pop
rorl
lds
test
ret
mov
add
arpl
popa
nop
push
xor
pop
dec
xor
mov
movsl
xor
scas
cmp
cld
add
flds
lds
or
xor
mov
popa
cmp
push
mov
stos
dec
add
sbb
push
outsb
jl
lods
movsb
or
and
push
in
out
xor
mov
nop
js
jno
cs
inc
loop
or
dec
xchg
dec
mov
pop
call
dec
pop
pusha
popa
rorl
lods
inc
stc
or
push
outsl
enter
outsb
or
pop
aas
daa
nop
mov
add
clc
cmp
inc
sbb
jne
in
cltd
mov
lea
push
or
xchg
xor
mov
sub
adc
inc
sub
sub
jp
fistpl
dec
and
or
mov
sbb
mov
rorb
cmp
pop
movsl
mov
inc
lea
out
sub
adc
xor
cmp
paddd
jp
leave
mov
mov
adc
pop
rclb
or
xlat
icebp
pushf
and
popf
mov
inc
inc
sub
adc
cmp
sar
mov
sbbb
dec
pop
cmpsb
icebp
imul
jmp
or
xor
inc
push
jno
xor
inc
adc
fstpt
clc
ret
or
or
lahf
jl
aam
sbb
jmp
lcall
mov
dec
pop
test
cmp
jnp
es
mov
outsl
stos
mov
mov
jl
mov
mov
pop
mov
dec
mov
icebp
leave
adc
out
xchg
mov
add
and
ret
aad
pop
mov
aam
shlb
sub
loope
movsb
loopne
pushf
aas
sub
or
mov
inc
ja
inc
add
scas
test
or
push
lods
hlt
add
loop
mov
out
sub
decb
lahf
faddl
shll
arpl
es
push
add
pop
std
ret
clc
lods
xor
lret
call
mov
icebp
inc
xchg
scas
test
popf
mov
dec
movsb
mov
adc
mov
insl
mov
add
out
jb
mov
ret
ret
xchg
shl
in
or
mov
add
std
xor
in
lret
in
pusha
mov
push
mov
mov
mov
clc
adc
std
in
sbbb
pusha
jno
cmpsl
adc
xlat
jns
add
dec
push
inc
add
jnp
jle
jmp
jge
push
add
in
or
jbe
jle
subb
mov
mov
add
and
add
lds
addr16
lods
and
xchg
or
push
enter
pop
push
xchg
adc
lock
add
gs
pop
outsb
adc
add
add
mov
jmp
jmp
dec
cmp
rcrb
iret
jl
lods
call
movsb
out
test
insb
lds
shl
cmp
push
xor
inc
out
daa
dec
mov
out
je
fidivrl
mov
push
les
aaa
jae
add
sub
push
inc
sbb
icebp
test
adc
scas
ror
inc
mov
inc
or
xchg
test
repnz
popf
sbb
ret
cmp
je
fiadds
add
scas
adcl
xlat
hlt
xchg
orl
cld
pop
ds
enter
ds
lock
mov
jb
push
mov
fdivp
xchg
cmp
xorb
sbb
popf
fisubrl
popf
sbb
jecxz
push
loop
push
nop
add
mov
pop
push
pop
push
push
mov
and
sbb
pop
mov
add
and
icebp
sti
add
or
inc
sbb
leave
mov
lods
loopne
stos
addl
bound
aaa
adc
fnop
xchg
fisttpl
mov
sarb
sub
xchg
xchg
inc
inc
cmpsb
xchg
pop
mov
xchg
dec
inc
sbb
dec
ss
fiadds
call
jmp
xor
sub
mov
pop
jb
push
inc
sub
or
arpl
add
xchg
repz
sub
jmp
enter
lahf
jg
cmp
pop
push
out
loopne
jae
and
pop
int3
push
je
mov
fmull
add
add
insb
hlt
push
mov
sbb
mov
or
sahf
push
and
fmuls
stos
adc
cmp
add
jmp
call
xchg
sub
shll
enter
addl
add
adc
mov
lock
mov
andb
mov
or
and
mov
outsl
clc
fildl
shll
inc
loope
int
lret
lds
cmp
cltd
mov
push
fildll
cwtl
and
ss
dec
xchg
ja
aad
cld
pusha
daa
mov
cmp
fsubl
lret
and
cmp
mov
xchg
push
add
call
or
sahf
inc
clc
jge
and
push
int
add
mov
sub
adc
xchg
dec
xchg
mov
adc
jle
mov
mov
mov
lods
pop
dec
fiadds
repnz
dec
xchg
movsb
push
pop
dec
sbb
add
mov
mov
or
jne
dec
fs
jecxz
into
out
push
js
add
enter
mov
testl
les
xchg
cwtl
xchg
push
add
add
popa
pop
push
aas
and
jno,pt
add
xchg
pop
stos
xchg
fwait
dec
rclb
mov
sbb
cld
sahf
sbb
pop
pop
sbb
add
leave
das
call
xor
test
aam
add
mov
clc
inc
lds
lret
stos
daa
push
sbb
or
daa
sti
iret
jo
imul
lret
push
or
cs
adc
jmp
test
in
aas
into
and
xor
mov
push
push
xchg
push
sbbb
xor
xor
dec
push
std
nop
bound
mov
je
dec
adc
add
and
jnp
push
fcoml
inc
add
jg
repnz
orb
jb
sbb
jbe
shl
loopne
dec
jle
or
and
jne
push
xchg
lret
or
or
je
imul
popf
lret
cld
faddl
cmp
pusha
sarl
xchg
in
add
cmc
mov
lods
test
jle
call
nop
subl
dec
inc
pop
testl
rcrl
xor
das
nop
pusha
int
cmpsl
out
add
ds
jno
or
sub
andb
inc
push
lods
cmp
leave
pop
cmp
psubb
mov
pop
nop
jle
ret
add
mov
jb
inc
pop
arpl
mov
inc
les
add
add
dec
pop
shll
mov
inc
cmp
cmpsl
dec
jno
dec
mov
sbb
xor
adc
out
mov
movsb
cmc
mov
cmp
or
mov
inc
scas
mov
push
mov
pop
xor
nop
loop
pop
call
cmp
pushf
fwait
add
and
xor
nop
insl
sbb
loope
in
push
ss
es
or
jmp
pop
and
xchg
int
imul
enter
ja
in
inc
adc
pop
inc
or
lret
cmp
mov
in
add
ret
pop
xchg
mov
sub
outsl
mov
test
popf
pop
gs
pop
mov
loop
xor
pusha
lods
imul
xchg
outsl
sub
shlb
icebp
and
mov
xchg
push
sub
scas
jmp
cs
add
into
mov
fsubl
adc
popf
and
pop
adc
push
sub
mov
fisttpll
xchg
nop
or
mov
xorl
jnp
sub
mov
push
sarl
outsb
dec
clc
mov
add
adc
hlt
inc
adc
xchg
std
movsb
pusha
pop
mov
cmp
adc
pop
jecxz
jmp
mov
mov
ret
addb
in
fldcw
xchg
out
mov
pop
mov
inc
loop
add
call
pop
add
xchg
sub
outsb
in
and
mov
cmp
je
pusha
xor
push
inc
push
cltd
rorb
enter
outsb
mov
mov
sub
add
enter
push
and
add
push
pcmpeqb
jns
or
hlt
push
scas
arpl
addr16
imul
push
xchg
mov
pop
ljmp
and
mov
cmp
mov
mov
call
add
push
or
out
fwait
or
cld
sub
ficoml
pop
inc
in
adc
or
sarb
fimull
bound
jo
cmp
daa
xchg
aam
das
pop
dec
cmpb
mov
lods
daa
daa
popa
inc
out
mov
cmp
xor
mov
stc
cmp
xor
pusha
cwtl
dec
incl
sub
xchg
mov
pusha
addr16
mov
xchg
aaa
out
out
mov
mov
loopne
push
cmpsb
xchg
popa
inc
into
dec
fadds
or
mov
loope
mov
add
push
repnz
adc
cmp
mov
loop
pop
dec
pop
test
mul
and
das
xor
or
fildl
mov
push
mov
aam
ja
in
xorl
mov
xor
xchg
and
and
pop
add
and
call
loopne
or
pop
sub
and
hlt
sbb
fsub
in
bound
xchg
inc
pop
sti
xor
loope
push
pop
sarl
lods
cld
jl
dec
in
lea
fs
sbb
cmp
fildl
pop
pop
pop
scas
jnp
pop
add
push
adc
pop
sub
repz
jo
outsl
add
mov
mov
pop
mov
out
add
gs
pop
dec
cmp
push
xchg
nop
push
pop
jns
push
pop
mov
sbb
pusha
jecxz
gs
mov
push
mov
jo
mov
in
push
ds
pop
or
push
push
add
jno
dec
pop
das
xor
mov
mov
add
movb
fs
adc
pop
mov
xchg
and
pop
sbb
mov
and
icebp
je
imul
lcall
jp
out
fdivp
into
rsqrtps
clc
add
adc
sbbl
lock
aad
call
xchg
or
xchg
aad
jnp
mov
mov
add
das
js
pop
mov
dec
stc
xor
repz
xchg
cld
pop
dec
test
inc
pusha
sbb
sub
inc
xchg
ret
popf
daa
jp
inc
das
xor
add
xor
push
cwtl
out
into
addr16
pop
sbb
or
jno
xchg
push
add
dec
sub
inc
pop
xchg
div
dec
test
mov
nop
repz
sti
mov
sub
leave
pop
in
push
ja
push
in
pop
mov
icebp
dec
dec
mov
xlat
negb
jmp
jp
int
loopne
aaa
sbb
mov
inc
jmp
and
mov
test
sbb
jb
mov
stc
sub
push
aam
jb
clc
sbb
stos
dec
fisubs
add
aam
lods
cmpsl
in
incl
int3
test
cmp
sti
mov
or
fbld
pop
pop
sbb
inc
dec
out
cli
lods
pop
pop
das
push
inc
xor
mov
stc
inc
mov
rcr
fnsave
mov
and
pop
cli
dec
xchg
aaa
xchg
add
xchg
syscall
and
fwait
ja
push
mov
and
sub
cs
lds
mov
loope
daa
aaa
loopne
jecxz
gs
pop
push
xchg
mov
add
cmp
mov
and
sbb
insl
popa
cs
loope
imul
xchg
mov
and
mov
push
mov
cld
mov
sbb
sub
inc
inc
or
and
or
xor
test
cmpb
pop
push
sbb
mov
mov
fcomps
add
cltd
je
xor
ret
dec
sub
stos
inc
jb
stos
and
and
movsl
shl
fwait
ds
sub
and
jbe
mov
mov
push
xlat
mov
insl
or
in
adc
out
push
push
fldln2
cmpsl
jno
xchg
pop
out
sub
xor
xlat
repnz
xchg
sbb
testl
and
adc
xchg
xlat
cmp
add
adc
call
mov
or
dec
cld
inc
lret
bound
mov
bound
cmp
outsb
fwait
sub
in
loope
push
xchg
mov
test
sub
je
aam
jno
xor
lds
lods
ljmp
or
ss
lcall
ss
js
sbb
popf
loopne
lea
call
xor
add
or
jge,pt
ret
mov
mov
add
or
mov
orb
jge
pushl
lret
pop
cmc
leave
mov
pop
push
iret
rolb
and
mov
nop
pusha
loop
dec
pop
mov
xchg
mov
fbld
das
popa
call
fwait
lods
jle
mov
fmul
scas
outsl
dec
pop
fwait
int
adcb
iret
test
arpl
lret
xchg
imul
aaa
icebp
and
push
clc
loopne
mov
popa
cmp
test
adc
das
push
xlat
adc
call
arpl
pop
mov
add
cmp
lods
and
dec
xchg
aas
pop
xchg
jmp
push
hlt
outsb
push
out
loopne
push
or
cld
xchg
pop
loopne
fldl
mov
sarl
jns
sbb
outsb
add
clc
repnz
orb
xor
mov
sub
cs
xlat
or
leave
fbstp
cmpb
popa
xchg
xchg
or
mov
xchg
push
push
cmpsl
cmp
fdivl
and
or
add
xchg
ljmp
xchg
add
sub
daa
orb
or
dec
rol
fisubrs
mul
and
test
mov
or
std
out
xor
lret
movsb
test
mov
std
mov
jp
ficompl
fnstsw
mov
popf
stc
lods
shlb
cmc
adc
add
or
aad
xchg
mov
aam
and
pop
and
or
xor
notb
ret
mov
inc
xor
outsb
pop
push
sub
add
lahf
das
fstps
xchg
and
xor
lods
and
add
mov
stos
add
int3
dec
xchg
mov
std
xorl
xor
xchg
mov
in
jle
mov
xchg
cltd
xor
ret
xchg
inc
add
ljmp
inc
sub
test
in
lret
nop
ret
jmp
cmp
pop
push
xchg
in
imul
sub
andb
das
or
ds
test
sbb
fildll
jmp
movsl
rcll
adc
and
mov
and
sub
out
mov
loopne
and
dec
and
or
aad
sub
pushf
loope
icebp
add
push
test
lret
xorb
je
repz
push
es
adc
xor
add
cs
cld
rolb
xchg
inc
insl
mov
cli
jp
add
daa
cwtl
adc
fidivs
and
fiadds
add
je
mov
adc
pop
test
iret
cmovp
or
dec
int
loope
divb
add
mov
pusha
sbbb
lret
cmp
jecxz
cltd
adc
imul
mov
repnz
adc
pop
sub
fistl
in
ror
dec
xor
pushf
nop
pop
cmovp
dec
aas
jmp
pop
xchg
bound
fstps
adc
pusha
comiss
fldcw
add
addr16
pop
aam
jp
into
bound
popa
mov
cwtl
mov
push
xor
and
xlat
movsb
mov
scas
sahf
add
jmp
lahf
jg
jo
mov
nop
sbb
dec
push
stc
in
mov
cli
xchg
or
sbb
xor
insb
push
cld
jo
add
or
adc
and
xchg
fstl
sub
mov
or
push
pusha
fldt
sbb
pop
and
xor
stos
mov
shl
adc
or
mov
push
adc
shlb
lock
addl
pop
pusha
mov
cmp
pop
popa
jbe
jmp
inc
jo
add
shll
push
in
repz
pop
pop
and
push
dec
idivb
lock
hlt
add
fdivr
daa
mov
test
std
rolb
cwtl
mov
inc
pop
cs
jl
sub
pop
xor
pop
out
loope
push
inc
lods
insl
dec
mov
or
aaa
jns
das
adc
mov
sub
shrb
pushf
push
pop
pusha
push
add
add
lret
lcall
inc
push
adc
dec
stc
repz
bound
gs
add
push
sbbb
shrl
fsubp
xor
xchg
dec
add
mov
mov
dec
repnz
shrb
jmp
arpl
pop
sub
faddl
cltd
daa
inc
gs
mov
push
add
fwait
mov
or
mov
mov
icebp
popf
and
sub
pop
mov
cmp
add
out
cmc
inc
xchg
and
in
call
ds
loopne
gs
push
jle
cwtl
lea
mov
mov
adc
adc
fwait
ret
mov
mov
popf
xchg
insb
in
xor
mov
or
or
aas
push
cmp
mov
add
sahf
mulb
call
hlt
test
pop
int
insb
cmp
cmp
sub
mov
xchg
mov
adc
and
jmp
push
jmp
dec
jo
and
filds
xchg
add
pusha
mov
ss
orl
add
sub
add
jge
les
aam
shlb
push
test
loop
jno
in
xor
adc
iret
lods
pmulhw
push
mov
mov
mov
sbb
pop
jno
cs
in
imul
dec
inc
sbb
stos
jo
movsb
sub
mov
pop
add
mov
and
add
mov
out
xchg
sub
mov
gs
adc
xor
gs
add
dec
int3
dec
pop
add
xchg
sub
jo
insl
bound
lds
outsl
push
adc
sbb
sbb
inc
sbb
in
xchg
add
xor
and
dec
cltd
jbe
in
xchg
mov
lods
and
add
les
xchg
mov
or
xor
xor
lds
add
mov
mov
dec
in
movsb
mov
mov
pop
sub
jb
add
fwait
outsl
cli
dec
aaa
fsubrl
pop
lea
cmp
mov
ret
or
mov
mov
ficomps
mov
inc
ret
jne
cltd
and
inc
mov
test
and
cld
fnclex
add
outsl
push
enter
outsb
dec
adc
sub
cmp
mov
sbb
inc
shrl
xchg
and
jg
mov
jmp
sbb
mov
shrb
xlat
sub
xlat
dec
loop
mov
mov
xlat
xorl
insl
or
test
scas
jo
sti
cmpsb
and
add
mov
add
lret
sub
cmpsl
cmpsl
outsl
cmpsb
pusha
lods
imul
add
mov
xchg
shl
jle
inc
lods
adc
mov
lahf
xchg
sbb
notl
jge
mov
mov
jne
sub
adc
or
loop
and
jo
test
mov
nop
clc
nop
mov
and
stos
fidivrs
out
rcll
lods
mov
lret
jecxz
and
dec
test
lcall
push
jge
xor
adc
popf
scas
xor
movzwl
ret
jnp
cmc
out
dec
das
clc
js
aas
cwtl
and
lock
out
aaa
adc
clc
pop
icebp
cmp
loopne
loop
test
push
mov
and
loopne
rolb
inc
aas
sbb
pop
mov
cld
xchg
jl
nop
out
repz
mov
inc
cld
mov
out
jns
test
sub
pop
insl
popa
popa
popa
lahf
fisubrs
or
and
mov
pop
enter
jg
and
imul
and
add
lods
out
mov
les
popa
add
adc
pop
cli
lss
jg
clc
lcall
add
sbbl
movsb
add
xor
and
xor
lods
loopne
sub
sub
and
and
or
and
mov
insl
clc
jecxz
pop
sahf
test
nop
cli
cltd
leave
mov
xcrypt-ecb
cmpsl
mov
cmp
jg
les
cwtl
jae
aam
push
add
pop
adc
fs
mov
je
loope
jge
or
cli
mov
push
adc
mov
xchg
lret
push
outsl
jmp
jp
inc
or
shlb
lds
adc
orb
fmull
or
mov
scas
adc
lcall
inc
fidivs
out
mov
and
adc
sbb
popf
je
shrb
lret
lock
dec
stc
fnstsw
out
cmp
or
add
enter
push
or
pop
jmp
add
popf
xor
adc
mov
adc
pop
mov
enter
and
clc
push
sbb
dec
push
pop
add
or
sbb
aas
xor
ffreep
sub
add
jns
adc
movsb
es
nop
push
or
popf
in
dec
rol
mov
popf
loope
fs
adc
outsl
ds
sbb
mov
push
inc
out
push
or
lods
adc
out
inc
out
mov
add
xchg
ja
lret
xchg
xor
hlt
and
and
sbb
insl
mov
sahf
sub
xlat
loop
push
movsl
push
mov
shll
mov
mov
movsl
popa
imul
cmp
xor
fisubrs
push
jecxz
inc
mov
mov
push
repz
test
pop
sub
add
adc
fisttpl
push
pop
pop
sarb
fcoms
cmp
dec
adc
mov
aam
add
inc
jae
dec
fsubrs
faddl
xchg
pusha
xchg
adc
jmp
add
xchg
xor
lds
add
not
mov
dec
adc
add
pop
xor
mov
shll
arpl
dec
sub
push
cmp
loope
or
cmpsl
jno
add
outsb
pop
sbb
lds
inc
and
jl
js
sub
dec
mov
cmpl
mov
testb
fwait
jno
and
pop
adc
sbb
pop
sbb
add
mov
add
jae
pop
pop
mov
daa
xchg
jno
xchg
pusha
cmpsb
jmp
in
push
push
lods
jle
subb
filds
mov
repz
fwait
push
dec
sub
dec
fwait
int
push
cli
mov
loope
mov
jp
add
arpl
push
push
cmp
lods
jmp
jmp
push
lods
dec
dec
movsb
mov
mov
sahf
add
xor
push
nop
push
xchg
or
push
push
jne
and
icebp
add
push
pusha
adc
pop
mov
adc
cmpsb
lock
push
ret
fldcw
adc
negl
pop
nop
push
call
imul
dec
jnp
add
xor
push
push
jbe
dec
mov
pop
lret
pop
add
pop
jb
fdivs
pop
sub
xlat
shlb
mov
jo
pop
mov
pop
popa
inc
xchg
in
in
pop
mov
or
adc
pop
sbb
test
jecxz
or
dec
je
inc
mov
nop
xor
pop
jns
popl
movsl
mov
test
test
loopne
or
pop
xchg
push
pop
filds
jmp
js
cltd
dec
pop
lods
popf
rcrl
sarl
add
mov
dec
sar
cmp
clc
mov
mov
mov
arpl
adc
xchg
mov
dec
cmpb
ret
in
jns
in
in
and
sbbb
add
sbb
aad
ljmp
fcoml
imul
pop
int3
or
insl
jge
outsb
xchg
subb
mov
inc
stos
add
cmpsb
mov
lea
mov
loopne
les
xlat
nop
push
push
sub
jno
xchg
sbbl
lods
popa
push
nop
je
add
mov
into
push
pushf
popa
fcmovnu
jo
test
popf
xlat
add
mov
add
loopne
adc
dec
dec
sbb
cmp
xor
inc
ljmp
ficompl
bound
sbb
push
or
and
ss
sbb
fdivp
jg
jo
call
js
pusha
sbb
add
int
xchg
stos
sub
adc
aaa
push
mov
adc
daa
enter
sbb
lods
pop
inc
mov
push
test
and
loop
or
lcall
push
fiadds
je
inc
mov
cld
lahf
out
out
and
add
pop
mov
xor
lock
xor
add
and
cmc
pusha
outsb
or
and
inc
inc
pop
sub
lcall
sbbb
loope
das
imulb
dec
nop
push
and
jle
xchg
mov
mov
xor
inc
add
mov
push
outsb
xor
xchg
mov
sbbl
sub
movups
cmp
popf
loop
lock
jns
or
lcall
sbb
or
mov
lock
mov
mov
insl
dec
test
enter
push
imul
cwtl
xor
mov
test
jbe
xchg
aam
mov
fldcw
push
sbb
cltd
add
in
lcall
pusha
push
cmpsl
cwtl
cld
clc
dec
sbb
inc
cltd
and
jge
fidivl
in
xchg
push
nop
push
cs
add
and
call
addb
mov
je
pop
pop
mov
xchg
add
lods
cs
mov
mov
dec
xchg
imulb
cmpsb
push
loop
pop
loopne
add
mov
mov
faddl
outsl
jne
inc
cmp
std
pop
das
je
stos
push
add
aaa
mov
ret
dec
fwait
int
xor
dec
popa
add
or
dec
push
inc
push
pmaxsw
push
xor
or
mov
aad
fisubrl
mov
jmp
js
mov
frstor
pop
mov
clc
mov
add
mov
repnz
add
pop
dec
pop
cmpsl
das
push
mov
call
inc
pop
mov
lods
mov
mov
jnp
jge
sub
inc
fwait
out
lahf
inc
or
inc
dec
pusha
pop
addr16
sarl
xchg
scas
outsb
imul
cmc
test
lcall
sub
add
sti
fidivrl
xlat
daa
xor
fwait
pop
shl
or
pusha
mov
push
add
lcall
pop
fs
test
push
orb
stos
pop
fdivr
dec
xor
inc
dec
jmp
cmp
pop
push
std
xchg
xchg
dec
jb
mov
pop
jecxz
lods
add
aam
add
nop
out
loopne
lods
pop
add
lret
sbb
add
pusha
xchg
xor
ror
scas
push
adc
mov
incb
xchg
sbb
test
fdivrs
sti
mov
idiv
imul
pop
popa
popf
fstpt
pop
out
mov
mov
loop
mov
xchg
adc
xchg
cmpsl
and
mov
mov
push
ja
inc
outsb
fstl
fimuls
dec
xchg
push
mov
loop
pusha
mov
xor
adc
sbb
cmp
movsl
mov
movsb
and
cmp
mov
push
movswl
outsl
dec
add
add
sub
popf
cld
cs
dec
mov
scas
rcrl
test
push
push
sub
inc
lret
adc
pop
in
adc
std
dec
iret
mov
pusha
ja
and
add
sarl
jmp
dec
rcrl
pushf
in
fdivs
mov
lods
fmull
aad
sbb
sbb
mov
jle
fwait
mov
ja
adc
sub
out
adc
cmc
fsubrl
fcomps
cmp
addb
pop
mov
stc
push
and
popf
lods
cmpsb
xchg
xor
cli
pop
in
daa
cwtl
shrb
add
sbb
mov
lret
mull
lods
ja
xor
xchg
xor
mov
pushf
test
test
sbb
dec
jmp
movsb
xchg
or
add
test
push
mov
test
imul
mov
dec
xor
popf
and
xchg
pop
dec
out
mov
jmp
push
test
dec
or
mov
addb
add
clc
aas
add
pop
dec
adc
xor
push
fsub
xchg
and
or
pusha
mov
ret
mov
mov
cld
js
orb
push
jns
push
jl
push
mov
or
pop
mov
pusha
mov
xchg
bound
jecxz
int
jle
pop
cmp
mov
xor
insb
cs
xchg
mov
add
loop
out
enter
and
clc
mov
loop
mov
cld
xor
xor
pop
faddl
inc
int
cmp
and
push
sbb
test
in
fildll
push
stc
jl
fwait
jle
xchg
dec
pusha
and
and
mov
pop
sbb
add
cwtl
add
aas
je
das
popa
aaa
xchg
add
pusha
lods
movsl
dec
sub
dec
pop
dec
repz
sti
jno
xchg
popa
insl
mov
in
dec
sbb
xchg
mov
jno
adc
cmp
loopne
add
push
dec
or
pop
in
inc
cmp
loopne
fs
popf
je
mov
dec
jne
jno
jle
jmp
test
push
fcomi
fcmovnu
sarl
lods
xor
mov
jae
je
das
mov
outsb
xchg
cwtl
add
loop
dec
cmpb
push
pop
lret
lret
in
mov
mov
sti
imul
add
add
test
xor
cwtl
sahf
loope
mov
enter
xchg
and
jmp
ret
mov
nop
mov
int
mov
repnz
add
mov
scas
pmulhw
sub
call
mov
lods
dec
stos
push
test
cmpsl
push
add
cmp
adc
stos
adc
pop
pop
add
popa
push
add
push
add
xchg
xor
aaa
cmpsb
out
sub
shll
add
rorb
call
mov
das
leave
addr16
inc
jmp
adc
loope
sub
push
enter
sbb
inc
push
sub
data16
popa
push
jnp
mov
jo
rcl
push
add
pop
outsl
cmc
xor
adc
aas
add
cmp
jne
mov
cwtl
loope
imul
add
clc
je
inc
sbb
mov
mov
test
and
adc
ljmp
xchg
and
insl
ss
push
cmp
mov
fildl
addb
or
fcomps
and
pop
sub
add
loop
in
stos
mov
in
inc
sbb
int
les
cwtl
mov
cwtl
cmp
mov
pop
push
jnp
leave
push
jo
test
dec
cmp
xchg
test
mov
loopne
jae
sahf
and
fimull
pop
push
adc
test
out
dec
jl
testb
pop
outsl
mov
pop
add
repnz
lret
sub
sbbb
push
loop
add
aaa
pop
and
mov
nop
gs
and
xchg
loope
xor
and
inc
mov
fs
dec
xor
outsb
test
mov
mov
adc
test
iret
add
xlat
mov
add
cmp
les
into
stc
adc
xor
or
repz
pop
sbb
repz
js
hlt
or
shlb
ljmp
data16
push
pop
into
xorb
adc
jg
into
pop
lods
out
das
or
je
imul
rcr
fiadds
gs
and
sbb
and
or
mov
push
loopne
ret
add
std
fnstsw
ret
push
cli
bound
sub
fnstenv
xchg
push
sbbb
and
and
sub
jb
mov
leave
loope
out
jo
popf
mov
add
sbb
mov
add
jg
dec
pop
add
repz
cwtl
enter
add
and
push
dec
and
cwtl
add
or
dec
mov
dec
out
mov
jo
lock
inc
xor
push
jo
xchg
mulb
fnsave
or
inc
jno
aam
xchg
lock
mov
xor
inc
dec
mov
jp
pop
and
sub
inc
int3
dec
mov
sub
pop
out
or
popl
mov
pop
sbb
mov
bound
insw
jbe
add
outsl
int
sbb
mov
or
fmuls
std
adc
sbb
pop
pop
mov
inc
sbb
jae
mov
shl
inc
ret
pusha
push
idivb
rorb
scas
jns
in
push
add
push
adcb
mov
mov
mov
fisttpl
dec
sbb
cmpsb
and
inc
xor
mov
inc
and
jl
sbb
lock
and
pop
add
mov
pop
lcall
mov
add
mov
stos
les
dec
std
stos
test
cmp
jmp
dec
pop
int3
dec
push
pop
stc
in
test
xor
cmp
sbb
pop
inc
inc
cmpsb
ja
arpl
out
or
jge
xchg
mov
push
ret
push
sahf
or
loopne
fsubl
add
insb
push
and
mov
mov
jns
add
pop
or
or
fimuls
cmp
fcoml
xchg
cmc
adc
pop
sub
pop
imull
mov
or
inc
xchg
frstor
jnp
mov
and
mov
punpckhwd
ror
sub
mov
in
je
push
inc
mov
dec
outsl
roll
enter
in
inc
pusha
addl
push
fwait
test
fistpl
adc
jl
mov
pop
push
repz
adc
pop
js
pop
repz
roll
outsl
push
push
clc
xor
pop
fcoml
or
fsubl
xchg
aam
push
fildll
pusha
enter
push
hlt
call
in
push
mov
imulb
add
pop
imul
ret
scas
sub
mov
test
mov
xchg
mov
or
js
pop
fcmovnbe
adc
scas
adc
sbb
nop
push
sub
or
cmp
cmp
pop
push
sti
mov
xor
test
into
push
incl
and
mov
fwait
jne
cmpsb
xchg
subb
mov
sbb
jns
inc
inc
xor
das
jmp
or
and
or
vmovaps
pop
fisubrs
add
daa
push
dec
jp
dec
ds
in
test
dec
push
test
shrb
add
add
or
lock
sub
stc
sub
or
xlat
xchg
push
in
add
mov
push
aam
pop
xor
push
leave
dec
in
clc
das
push
and
nop
adc
fimull
push
call
pop
push
adc
out
jge
adc
pop
mov
pop
push
js
dec
mov
cld
loope
out
das
add
in
stos
and
sub
add
sbb
pop
pop
mov
das
dec
adc
aam
jae
js
xchg
hlt
test
pop
ficoms
ja
leave
loop
jge
roll
cmp
je
fildl
hlt
stos
nop
fyl2xp1
sub
rcrb
imul
mov
add
pop
cmp
sbb
dec
dec
loope
mov
inc
sbb
stos
inc
icebp
xor
adc
loope
jmp
sbb
aad
lea
jmp
adc
daa
dec
or
xor
loopne
sbb
pop
in
add
xchg
addr16
imul
or
gs
aaa
add
shll
les
cs
mov
jbe
jae
popa
sub
push
pop
pusha
and
xor
fcmove
mov
stos
jb
adc
xor
sub
rcr
mov
mov
or
mov
ficoml
xchg
aaa
mov
jb
push
adc
cld
xor
mov
pop
stc
xchg
pop
mov
sbb
pop
addl
push
sub
cmp
loop
cmp
cmp
or
and
push
adc
sub
mov
and
stc
sub
and
push
inc
sbb
addb
push
and
pop
mov
mov
mov
push
sbb
je
mov
mov
movsb
and
cmp
jl
insl
sub
fistl
cmp
cmc
and
js
sub
test
sub
add
adc
cld
addr16
lds
adc
popf
adc
xor
mov
cwtl
movsl
sub
mov
das
sub
mov
push
leave
push
loop
pop
push
repnz
add
xchg
gs
jbe
dec
pop
mov
xor
xchg
int
rclb
test
add
add
cmp
sbbb
dec
popa
or
pop
push
leave
xor
or
adc
clc
adc
add
xchg
flds
bound
fldenv
adc
js
mov
push
lahf
jno
and
mov
xchg
mov
sub
add
adcl
push
fcomp
add
sbb
xor
pusha
popf
jmp
sbb
push
push
std
data16
xchg
sbb
inc
mov
loopne
xor
sbb
push
fidivrs
xchg
mov
xchg
cld
lret
push
jp
xor
adc
mov
call
pop
imul
mov
add
sbb
mov
pop
mov
xor
mov
fnstsw
lcall
jecxz
fidivrs
add
int
scas
jae
sub
in
mov
mov
dec
lahf
cld
pop
inc
and
push
add
sti
mov
test
push
push
fstpl
imul
add
inc
adc
sub
shlb
repnz
mov
adc
xor
out
mov
dec
sub
dec
jmp
pop
push
xor
ljmp
cmp
add
imul
lahf
scas
sarb
cmp
out
mov
push
cld
mov
dec
push
fisttpl
jno
and
jecxz
lds
mov
imul
imull
sbb
add
mov
cltd
adc
in
push
clc
mov
jb
add
and
es
imul
enter
leave
subb
lcall
push
sbb
mov
test
in
fnstcw
xor
push
out
dec
fisttps
in
mov
cmp
xor
jmp
or
dec
xlat
aas
mov
dec
adc
sbb
ret
loop
mov
imul
aas
shll
cli
outsl
hlt
or
push
xor
dec
push
sbb
jmp
lret
ss
dec
lock
pushf
mov
je
rcll
dec
pop
gs
and
adc
xchg
mov
xchg
sbb
inc
inc
jnp
out
adc
fsts
mov
xchg
stos
fwait
je
hlt
add
dec
mov
adc
mov
mov
iret
cmp
mov
adc
iret
dec
test
lret
pop
or
or
xchg
lds
mov
xor
jle
mov
pushf
imul
sti
pop
fsubrs
out
mov
push
xchg
xchg
imul
jno
movsb
movsl
fiadds
into
cmpsb
push
or
pop
imul
leave
addb
xor
mov
adc
sbb
sbb
add
inc
insb
or
add
mov
addr16
add
sbb
stc
mov
lock
jl
pop
mov
daa
out
sbb
into
int3
leave
add
cli
mov
pop
xchg
stc
clc
mov
or
leave
loope
loop
and
pop
sbb
fucomip
gs
xchg
popa
inc
pushf
insb
faddl
mov
pop
int3
xor
rclb
and
int
fs
pusha
mov
fmuls
or
cmc
ljmp
ss
aad
xor
shrb
jecxz
into
mov
push
cmp
add
sub
jbe
sarb
mov
dec
cmp
jns
sub
fmul
xchg
adc
adc
in
mov
data16
outsl
mov
xor
into
arpl
adc
xor
add
das
insl
cmovo
enter
pop
mov
xor
and
inc
xchg
jg
fistpl
mov
add
sarl
xchg
and
test
jns
call
push
lahf
mov
and
popa
fildl
rcrl
in
jmp
lds
movsl
push
cmp
cmp
out
or
jbe
pusha
sbb
dec
leave
mov
sub
push
loopne
enter
dec
mov
das
mov
loopne
inc
adc
aas
dec
pop
cmp
addb
adcb
pop
mov
cs
in
repnz
ss
push
or
jecxz
repz
fwait
jg
imul
movl
pop
fsubr
and
add
aas
pmaddwd
pop
push
test
popf
jne
push
push
sti
jp
add
gs
mov
aad
sub
xor
xor
pusha
jl
pusha
mov
and
sbb
or
add
call
xor
or
adc
popa
repnz
pop
mov
push
add
xor
scas
inc
aaa
out
dec
mov
xchg
jmp
shl
and
fs
jmp
push
add
inc
jmp
nop
inc
dec
jge
mov
push
jnp
adc
push
jl
outsl
movsb
add
scas
fdivl
ficompl
test
push
xchg
test
daa
add
inc
test
or
push
adc
mov
mov
pop
pop
xor
pop
incl
fs
faddl
adc
lret
inc
cs
add
and
and
adc
enter
xlat
mov
scas
loope
adcl
es
pusha
aaa
jl
dec
sbb
xchg
xor
mov
mov
cmp
out
fsubrs
fdivs
fldcw
xchg
in
les
cli
sub
enter
roll
mov
jb
pop
rorl
mov
sub
xor
popf
sub
les
leave
and
mov
jge
pop
mov
lea
add
sub
leave
fidivrs
inc
adc
dec
arpl
int
pop
push
and
outsb
loopne
mov
addb
mov
or
adc
and
inc
and
mov
push
ret
and
adc
push
pop
scas
lahf
lods
rcrl
and
test
pop
movsl
repz
jo
outsl
xchg
or
aam
fdivrl
enter
adc
cld
scas
mov
and
daa
inc
push
nop
cli
or
xor
cmp
cli
ljmp
xor
fisubl
and
leave
cmc
jno
lods
and
mov
dec
pop
dec
dec
mov
in
adc
inc
inc
xor
inc
adc
and
jbe
mov
xor
stc
push
xor
popa
pop
ret
dec
shl
jo
in
lret
mov
jno
mov
shl
or
dec
push
xor
stos
loope
mov
or
add
jo
mov
das
inc
mov
sub
dec
mov
mov
pusha
jg
mov
je
ljmp
in
nop
shlb
sbb
add
xor
into
pop
outsb
popf
add
mov
mov
sub
and
nop
loopne
xchg
jmp
mov
fsub
cmpsb
and
mov
jbe
ret
lret
into
mov
or
add
cmp
loope
sbb
pop
and
test
cwtl
into
push
pop
pop
aad
andb
es
mov
mov
sbb
xchg
xor
test
or
push
pusha
push
lahf
les
jmp
lret
popf
dec
in
jbe
fildll
or
fidivrs
scas
fnstenv
lods
dec
xchg
out
jbe
ljmp
mov
pop
push
inc
sbb
cmp
mov
addl
int3
mov
add
pop
mov
popa
pop
sbb
sbb
mov
cs
or
fiaddl
popf
xchg
lcall
pop
loopne
mov
sahf
out
adc
mov
movsl
shrl
std
pop
inc
xchg
pop
data16
sti
arpl
pop
push
pop
adc
mov
sti
call
adc
push
jne
push
into
out
add
push
pop
xchg
adc
and
fcoms
push
fildl
inc
push
or
push
les
lock
sarl
jecxz
call
out
loope
adc
cmpsl
sub
rclb
mov
inc
mov
mov
out
add
push
cmp
push
xlat
insl
pop
sarb
and
push
pop
jae
push
cmc
mov
mov
into
fwait
and
add
repz
lods
mov
jg
aam
mov
push
or
pusha
sbb
mov
xchg
sub
dec
repnz
incb
jo
addr16
push
add
xchg
or
xchg
lods
ucomiss
xor
cmp
inc
or
cs
loopne
mov
or
lcall
loop
pop
setge
push
jae
imul
hlt
pop
lret
xchg
addr16
shlb
inc
daa
pop
push
out
push
lods
icebp
rcrl
fdivl
lret
inc
test
mov
sub
jne
add
adc
mov
filds
mov
push
jp,pn
pop
daa
pop
popa
or
testb
sbb
mov
or
aam
jno
inc
aaa
or
pop
jmp
je
test
out
jg
mov
xchg
aam
ja
xor
das
sub
lcall
sbb
mov
pop
sub
and
push
jns
pop
pop
popa
mov
and
xchg
jecxz
adc
sub
mov
in
data16
pop
pusha
mov
push
mov
cmp
pop
or
mov
push
lahf
mov
xchg
pop
mov
cld
out
int
adc
sahf
insb
sahf
addb
mov
xchg
dec
ss
inc
lret
cltd
push
push
sub
pop
and
sub
mov
jge
add
ja
lods
shrl
add
inc
sub
sub
pop
dec
add
mov
xlat
xor
leave
daa
hlt
inc
dec
jg
adc
shll
popa
pop
cmpsl
inc
add
stos
icebp
lods
and
xor
pop
mov
cmp
mov
lret
rcrb
and
cld
sbb
leave
fs
dec
das
out
out
add
loope
mov
cli
inc
pop
pusha
roll
clc
popa
push
mov
adc
push
pop
out
sahf
ret
aaa
fadds
fidivl
add
cli
pop
sar
lret
addps
push
adc
adc
jmp
mov
and
or
push
xlat
dec
push
mov
and
pop
jnp
push
dec
adc
jae
push
cmp
pusha
aad
adc
das
fmuls
jmp
mov
or
sub
cmp
cmp
jno
jl
mov
adc
mov
or
cmc
inc
mov
mov
loop
stc
sbb
jno
adc
sti
dec
test
js
subb
push
sbb
sbb
pop
das
xchg
stc
or
mov
push
roll
in
aad
sbb
cmp
mov
and
jns
sbb
mov
out
sub
xor
dec
or
mov
mov
jno
xor
jmp
sub
mov
das
je
lcall
sub
outsl
sahf
sbb
js
cmpsl
xor
insb
pop
push
xor
sbb
sub
jl
outsl
adc
jmp
loop
mov
pop
std
jle
mov
loope
mov
loop
mov
or
inc
addb
daa
and
add
les
mov
mov
mov
dec
icebp
sbb
ror
test
sub
xor
xchg
push
arpl
mov
xchg
sbb
int3
loopne
ficoml
jp
and
mov
cmp
test
jle
das
into
fsubr
mov
push
daa
or
and
add
jge
inc
inc
cmp
jnp
enter
int
rcrb
pop
nop
out
or
pop
notl
mov
xor
fldenv
nop
fwait
ret
cmpl
jge
add
add
mov
push
add
xchg
movsb
or
xchg
push
sahf
rolb
pop
add
js
stc
xchg
sub
outsl
push
add
cld
cli
dec
cmp
inc
inc
jnp
push
test
pop
mov
sbb
jb
and
jmp
xchg
jmp
mov
add
out
shl
leave
sub
rcrl
cmpsl
in
inc
push
mov
mov
inc
pop
jno
mov
lret
mov
mov
xor
mov
xorb
jg
iret
popa
pop
cld
mov
sub
push
ficoml
adc
add
push
cli
jno
pop
nop
sub
add
dec
dec
out
jo
mov
jmp
test
sbb
jnp
push
dec
add
or
xor
jo
xchg
shll
sbb
sub
xor
test
mov
ss
jnp
add
jp
mov
lock
ret
repz
aam
jecxz
adc
lds
in
adc
pop
pop
inc
xchg
imul
stos
mov
dec
movsb
nop
xchg
shll
inc
jmp
cld
add
lahf
test
push
imul
jle
inc
sub
sub
xchg
test
or
xchg
mov
dec
push
testl
sub
aad
ret
xor
push
push
lds
cmp
mov
lahf
cmp
cs
rolb
cmp
fldt
inc
push
fidivrl
outsb
add
pop
push
or
in
sbb
test
xor
jo
aaa
lods
mov
lods
aam
mov
or
inc
dec
mov
ds
imul
and
sbb
iret
enter
jp
inc
lods
pop
imul
xor
scas
dec
pusha
popa
roll
xchg
mov
icebp
push
and
sahf
shlb
cltd
mov
arpl
inc
bound
std
sub
xchg
les
ljmp
cltd
jge
mov
inc
incb
data16
xchg
pop
nop
xor
mov
ja
push
jb
ret
rcll
rolb
inc
sbb
addb
cmp
mov
inc
cli
test
cli
flds
mov
jnp
loopne
and
cld
pop
aaa
js
mov
popa
rorb
pop
xor
lahf
add
mov
stc
add
rcr
fcomp
pop
aas
inc
jae
push
int3
inc
pop
ss
xchg
xor
mov
lea
cmp
push
icebp
sar
aam
lds
cli
shrb
movsl
sbb
add
fildl
adc
in
das
xchg
push
clc
xchg
scas
inc
adc
cvtsi2sd
add
imul
mov
xor
ljmp
jp
icebp
call
mov
dec
sbb
adc
dec
nop
testb
jb
xchg
cmp
out
subl
mov
rcr
xchg
push
add
in
cmovae
loope
pop
je
dec
mov
adc
je
push
das
sub
mov
popf
fcmovnb
js
andl
daa
int3
cltd
push
xchg
lods
sbb
popf
jecxz
sub
cmpb
jmp
insl
mov
dec
sbb
arpl
iret
outsl
inc
lods
push
pop
mov
gs
rol
mov
mov
cmp
sbb
or
push
mov
aam
hlt
scas
lret
mov
sbb
cld
jl
cmp
rorb
dec
repz
add
out
add
and
cmp
and
push
adc
fdivrs
adc
in
clc
out
add
xchg
mov
add
pushl
jge
repnz
add
pushf
mov
dec
push
add
sub
dec
cmp
mov
xchg
cmc
in
sub
es
dec
shrb
xchg
fidivrs
movsl
push
popf
mov
xor
imul
mov
pop
xchg
fsubrl
xchg
popf
add
test
pop
push
add
in
scas
add
xor
xchg
mov
mov
add
push
andb
ja
fs
rclb
movaps
push
imul
cs
mov
push
add
sbb
pop
and
xor
ja
std
fs
add
int
mov
out
mov
je
bound
mov
add
push
loop
pop
xchg
fstps
mov
or
aam
ljmp
insb
outsl
mov
repz
lods
and
or
mov
push
nop
jmp
mov
ja
cli
pushf
iret
insl
clc
enter
sub
popf
mov
mov
les
popa
aaa
int
popf
aaa
pop
add
xor
test
loope
mov
cs
xchg
add
inc
mov
jecxz
scas
mov
imul
into
ds
mov
inc
cmpsb
in
add
mov
jmp
cld
add
cmpsl
or
sbb
mov
xchg
popf
shll
fists
xor
xor
cmp
dec
mov
sub
mov
movsl
inc
fs
in
add
jbe
test
cmc
movsl
mov
into
call
jmp
xlat
dec
lods
mov
popa
mov
xchg
lahf
adc
jge
adc
push
cwtl
icebp
xor
pop
mov
xchg
xchg
icebp
lcall
and
aaa
add
jle
jmp
mov
and
div
mov
xor
repz
jecxz
mov
pop
pop
insl
jl
scas
jg
or
add
not
dec
push
or
xor
sub
popa
lods
ds
adc
cmp
popf
aam
inc
scas
jae
adc
pusha
pusha
pop
pop
add
mov
cmc
add
das
adc
in
xchg
add
cwtl
sub
and
popa
dec
and
jnp
sub
lret
stc
cmp
mov
and
xchg
push
xchg
je
dec
jl
out
stc
push
out
fistps
xchg
fldt
xor
or
lahf
int3
cli
xor
das
mov
xchg
icebp
push
dec
call
lahf
inc
js
out
outsb
mulb
into
jnp
lods
add
pop
add
popf
sub
mov
fnstsw
sbb
mov
sub
popf
and
into
mov
dec
cmpb
std
pop
out
xchg
push
das
pop
cmpsl
lret
add
mov
mov
lret
cwtl
loopne
add
cmp
mov
xchg
hlt
call
adc
xchg
sar
add
push
add
stos
int
cmp
lock
mov
and
xchg
les
test
mov
les
lret
cmpsl
subl
popf
call
gs
pushf
and
or
je
mov
psubw
add
scas
bound
xchg
ret
adc
lods
sbb
jmp
subb
std
inc
dec
lock
or
loop
pop
jecxz
jo
lods
es
push
add
lret
clc
push
outsb
or
arpl
cmp
xor
dec
popf
jmp
lods
jo
mov
enter
ror
dec
fsin
fwait
iret
inc
add
stc
imul
add
pushf
loopne
pop
cmp
rclb
pop
cmp
outsb
test
lock
pop
cmp
inc
sbb
lcall
sbb
sbb
pop
and
adc
add
bound
jno
je
in
mov
inc
dec
add
cmp
and
xor
add
popa
lods
add
inc
std
fstps
jne
xor
jae
dec
add
aas
push
jnp
cmpb
pop
add
mov
loop
leave
pop
push
hlt
xor
mov
fcmovu
aad
sbb
add
jb
xchg
in
jge
mov
loop
push
jae
add
or
jns
stos
push
lods
add
shlb
lock
in
xor
and
jb
add
ret
sbb
repnz
add
rcl
ret
add
test
imul
mov
fcomip
test
cmp
movl
insb
and
mov
dec
sbb
add
cmp
out
test
hlt
mov
nop
pusha
sbb
icebp
test
inc
xor
je
loopne
arpl
mov
xchg
test
insl
cwtl
lods
sti
inc
imulb
or
stos
jbe
mov
add
push
push
inc
add
inc
xor
or
loope
cmp
andl
sbbb
push
add
jg
out
and
repz
add
scas
jp
xor
pushf
xorb
movsl
jnp
aaa
cmp
leave
repnz
pop
js
xor
cmp
out
in
sbb
jp
adc
push
add
sub
or
test
clc
fsubs
xor
pop
cltd
out
pop
arpl
and
mov
call
pop
pop
add
mov
mov
pushf
push
shlb
xchg
push
add
adcl
dec
data16
add
lock
dec
adc
add
dec
ljmp
sub
inc
and
jae
xchg
mov
inc
pop
inc
out
ss
pop
dec
aaa
add
popa
sub
shl
sahf
sbb
lods
pop
and
push
scas
add
ret
das
gs
test
cmp
add
sub
js
add
out
push
sub
clc
mov
inc
movsb
sbb
es
das
cmc
xlat
inc
xor
or
loopne
push
mov
pusha
or
shll
mov
cmp
jo,pt
addb
adc
and
cwtl
and
in
in
scas
mov
adc
cs
adc
ljmp
mov
xor
hlt
pop
mov
sarl
cltd
fwait
movsb
mov
jae
add
mov
cmpb
aas
fildll
cwtl
inc
push
add
xchg
aad
mov
fsubs
out
lods
and
inc
push
add
addb
imull
bound
arpl
add
xchg
scas
insb
nop
xchg
cmp
ds
jno
jb
testb
xor
push
out
ret
lret
or
mov
sbb
mov
pusha
sub
out
mov
mov
and
or
adc
test
in
shrb
or
xchg
add
js
pop
add
loop
cmp
sbb
nop
lock
orl
hlt
dec
pop
je
ds
filds
pushf
jl
sbb
xchg
cmp
roll
shrb
dec
xor
push
push
mov
xor
flds
ret
int3
movsl
mov
inc
mov
aad
and
add
and
add
mov
add
outsb
and
add
mov
out
adc
sbb
inc
je
dec
push
sbb
and
or
jge
cwtl
lods
loopne
flds
out
mov
xor
xchg
mov
pop
add
sbb
mov
lock
sbbl
push
aam
iret
cwtl
pop
add
movsb
and
inc
fs
push
jns
out
mov
sub
lods
push
add
fmull
cmp
icebp
or
cmpsl
mov
sbb
in
add
cs
or
mov
nop
loopne
adc
add
mov
mov
add
xchg
adc
fstl
cld
int
iret
test
jle
iret
mov
push
lock
add
inc
or
sbb
mov
xchg
lods
add
mov
shrb
fwait
jbe
mov
popa
add
add
pop
repz
jno
add
dec
es
leave
sbb
in
pop
mov
fsubrp
add
cmp
jge
xor
mov
sbb
out
sub
aad
mov
aaa
popa
pop
dec
popf
jl
mov
mov
ret
adc
pop
add
pop
sbb
in
push
push
iret
or
mov
and
jb
sbb
cld
aam
cli
add
mov
and
dec
push
mull
add
arpl
xchg
add
data16
and
add
test
xchg
cmp
jo
add
jp
add
and
ja
pinsrw
inc
in
nop
bswap
out
imul
add
jle
out
adcl
pop
push
das
pop
ds
imul
xchg
mov
jne
sbb
jle
mov
mov
out
cli
and
or
add
dec
std
lock
dec
pop
and
mov
cmp
mov
sub
shll
andb
xor
mov
lret
add
xorl
repz
xorb
ret
cmp
push
push
rclb
inc
add
stos
xlat
test
repz
mov
cmp
mov
enter
cmp
mov
mov
add
add
pop
add
shr
xor
pop
hlt
out
sub
popf
cmpsl
mov
add
jb
jg
and
add
pusha
mov
bound
es
lods
dec
in
enter
add
js
cmp
pop
inc
jmp
jge
jb
addr16
lock
xchg
mov
lods
loop
or
ds
call
sbb
inc
sarb
les
jg
sti
mov
add
sbb
in
xor
mov
insl
pop
out
mov
int3
sub
lahf
cli
cmp
xor
adc
inc
test
xor
cmp
es
pop
mov
jae
mov
adc
add
fstpl
bts
mov
lods
test
mov
pop
loope
sar
imul
push
ljmp
mov
add
out
add
mov
or
iret
add
mov
addb
icebp
dec
addr16
stos
cs
add
inc
enter
jne
pusha
and
mov
int3
xchg
sbb
pop
push
cmp
nop
cmp
sbb
jnp
xchg
jo
inc
sub
mov
cltd
push
dec
push
add
add
xor
lcall
mov
loopne
test
push
add
mov
sbb
adc
mov
adc
inc
movsb
aaa
adc
jmp
push
scas
cmpsl
and
xchg
jo
pop
or
call
in
dec
push
mov
cmpl
inc
jno
inc
xlat
xor
mov
adc
xor
insb
pop
adc
xchg
sbb
dec
cmc
push
add
filds
inc
lea
cmp
lcall
mov
push
incb
jae
mov
push
add
mov
in
mov
inc
int3
or
xchg
sbbb
in
ret
aam
stos
add
pop
and
sub
cmpsl
mov
mov
test
cmc
jp
xchg
es
push
dec
add
jle
pop
and
inc
xchg
cwtl
adc
push
add
daa
mov
js
adc
or
mov
add
arpl
push
pop
addr16
sub
push
pop
mov
lock
jnp
hlt
insb
jne
mov
fldl
scas
inc
xchg
and
push
repnz
push
fadd
imul
popa
lock
shll
ja
add
dec
fists
pop
add
lods
jns
ror
or
stc
inc
daa
leave
push
dec
sbb
out
lods
test
jg
sub
sbb
cmc
mov
mov
loopne
shrb
xchg
fwait
add
add
dec
stos
arpl
sbb
jb,pn
cmpsl
add
roll
jle
or
push
push
mov
add
stos
imul
adc
scas
mov
filds
pop
out
and
lret
xchg
mov
test
pop
add
insl
push
add
xor
imul
ljmp
shr
insb
add
add
inc
std
mov
stos
sbb
in
push
add
mov
mov
pop
xor
inc
mov
add
mov
xchg
cwtl
inc
mov
loope
xor
or
and
sarl
bswap
adcl
and
push
jecxz
pushf
mov
les
cmp
in
enter
repz
dec
add
movsb
mov
addb
sbb
and
pinsrw
jbe
add
fmul
push
push
cmp
in
add
inc
es
jp
outsl
icebp
add
imul
cmpsl
test
xor
dec
cmp
push
rcrb
xchg
jg
jp
pusha
jo
adc
movsb
je
out
push
pop
xor
lcall
orb
loop
test
add
aas
add
inc
and
out
mov
stos
cmpsl
mov
rorb
or
add
stc
aad
add
jae
clc
stos
or
add
or
adc
dec
fisubrs
aaa
pop
call
xchg
add
inc
xchg
int3
in
lods
mov
add
les
adc
rorl
sbb
pusha
mov
addr16
sbb
daa
loopne
push
or
push
lret
out
pop
lcall
add
adc
jbe
aas
sbb
scas
mov
movsb
test
jns
in
in
inc
shrb
ds
scas
adcb
lahf
jb
and
lds
enter
add
call
xor
dec
outsl
xchg
xor
insb
push
sub
fcoml
das
loop
fisttpll
enter
inc
mov
fwait
cmp
ja
mov
sar
mov
add
pop
inc
outsl
lret
adc
std
xchg
dec
pop
lahf
xchg
push
mov
insb
jae
rcrb
sarb
out
or
and
lock
icebp
push
cmp
push
xor
lcall
enter
rcr
les
and
add
fcmovnu
repz
pushf
movq
cld
dec
mov
lahf
addr16
sub
xor
flds
cltd
mov
dec
or
cmpsl
add
insl
adc
in
fisubrl
sbb
icebp
push
cli
add
and
jbe
and
sub
int
and
inc
mov
or
add
lock
mov
jo
inc
sub
inc
pop
fcomi
fbstp
arpl
stos
mov
jno
jbe
cmpsb
adc
aam
setae
xchg
and
push
xor
inc
xchg
or
inc
loopne
add
add
fcoml
push
sti
in
iret
loop
lods
inc
pusha
ja
cwtl
out
out
add
add
and
aaa
in
pop
out
pusha
sub
pop
shl
push
mov
xor
out
inc
js
or
push
scas
adc
xchg
pop
pop
dec
sub
dec
dec
or
jle
stc
jne
or
lea
cmp
test
add
jnp
lods
loope
cwtl
xor
in
pop
mov
hlt
pop
fiadds
jmp
inc
movsb
jle
sbb
push
mov
inc
add
push
imul
enter
push
rorl
loopne
jo
mov
lods
sbb
repz
sub
add
and
sub
mov
mov
xchg
in
add
inc
jbe
jp
or
mov
add
push
add
mov
test
adc
bnd
adcb
scas
mov
ds
movsb
shlb
xor
lahf
sbb
jo
jmp
adcl
xorb
jb
xor
cmp
dec
and
push
add
or
adc
subl
fxch
sbb
or
add
jl
dec
sbb
mov
cs
inc
aaa
pop
inc
sub
popa
pop
adc
dec
iret
fadds
icebp
movsb
mov
mov
mov
add
mov
shll
les
add
int3
pop
pop
or
inc
jge
sbb
inc
jns,pt
cmp
xchg
lods
pop
xor
dec
icebp
add
push
jo
add
into
pop
shrb
stc
jl
mov
and
ds
arpl
out
mov
adcl
faddl
int
mov
aam
rcrb
pusha
jecxz
and
mov
mov
bound
and
add
xchg
rclb
sub
fadds
pop
filds
jmp
sbb
xchg
mov
dec
jecxz
mov
or
and
or
mov
adc
sub
aad
into
add
xchg
flds
sar
jno
stos
inc
add
sub
and
test
or
dec
stos
mov
jecxz
call
addl
fldcw
and
js
sbb
dec
cli
and
les
push
or
scas
aam
add
xor
mov
xchg
pop
xchg
xor
scas
jb
xchg
or
dec
enterw
add
cmp
pop
mov
mov
mov
lret
aad
cld
stc
aad
in
jns
mov
in
add
push
dec
clc
push
stc
pop
mov
insb
fprem
ja
clc
add
popa
xor
aaa
and
mov
cmp
mov
push
or
mov
std
popa
add
outsb
hlt
pop
push
out
sbb
push
or
cld
mov
negl
xchg
imul
mov
adc
pop
cmp
add
gs
dec
std
dec
popa
aad
push
jmp
lret
push
lret
stos
cmp
cmpsl
mov
insl
loop
cmp
xchg
test
inc
inc
or
hlt
jmp
es
sbb
out
daa
popf
lcall
pop
fcmovnu
mov
inc
add
and
cmpsb
pop
sub
faddl
pop
mov
mov
cld
imul
les
mov
or
insl
mov
andl
xor
sub
and
xchg
adc
pop
mov
cmp
icebp
repz
jge
add
push
repnz
int3
mov
adc
mov
add
mov
ja
aad
mov
pop
and
sub
jnp
loopne
psraw
xchg
roll
and
mov
jbe
popaw
or
and
data16
popf
sub
nop
inc
pop
fimull
addb
std
test
mov
add
fsubr
jecxz
jo
in
or
and
mov
or
adc
cltd
add
inc
clc
inc
or
test
pusha
add
adc
and
xor
push
sbb
inc
or
mov
jbe
ret
outsb
push
test
pop
cwtl
into
cmpb
mov
icebp
xchg
mov
and
jo
jo
cli
cld
js
decb
cld
and
add
pushf
push
xchg
push
and
fsubl
add
push
pop
dec
imul
add
or
sbb
xchg
cmp
push
test
repz
pop
or
xchg
dec
ds
outsl
xor
or
xchg
ret
ja
push
mov
out
int3
mov
and
sub
insl
ds
mov
xchg
pop
push
jg
push
shll
test
ret
popa
add
imul
sti
sub
xchg
xor
inc
xchg
add
xor
cmp
insl
cmp
and
adc
xorb
in
and
lret
xor
mov
xorl
stos
sub
pusha
adc
pop
xchg
bound
sub
fidivrl
inc
xor
cltd
movsb
and
ja
idiv
ret
insb
add
pop
cld
cmp
jle
shll
sar
fidivrl
stc
lret
adc
subb
insl
inc
lahf
pusha
mulb
dec
sub
cs
sbb
pop
aas
cld
add
sbb
icebp
adc
sbb
mov
cmp
stc
sbb
and
dec
rolb
mov
lret
adc
and
movsb
mov
rcll
mov
mov
xchg
sub
lods
inc
and
jb
clc
cld
jp
out
sbb
cld
inc
adc
loopne
mov
stos
sbb
clc
xchg
add
out
cwtl
push
into
mov
add
rorb
dec
clc
inc
adc
pusha
jnp
dec
cmp
cmp
lret
in
add
jge
pop
imul
cmpsb
jns
xor
jl
mov
js
sub
outsb
cwtl
or
mov
out
dec
add
or
push
pop
sbb
fs
jne
hlt
and
stc
inc
add
adc
stos
lret
cmp
mov
sub
and
jle
or
push
js
mov
xor
dec
and
out
sub
clc
mov
imul
add
je
push
icebp
sub
pop
jl
sbb
add
pop
loop
and
sub
xor
les
in
push
loopne
mov
lock
stc
push
inc
push
add
ss
and
add
jg
xor
lods
adc
call
jb
dec
or
enter
add
test
mov
sub
pop
jge
mov
push
test
add
inc
mov
and
ds
or
roll
pop
lahf
adcb
jnp
mov
sub
xor
push
add
insl
iret
pop
out
xchg
xchg
cmp
je
pop
dec
jns
or
mov
mov
stos
push
adc
out
xchg
loop
sub
dec
add
test
cmpb
dec
cltd
mov
jp
add
push
cmp
sbb
std
and
mov
bound
xor
sub
int
fs
jnp
clc
in
push
loopne
xchg
fwait
dec
loope
in
add
add
and
jecxz
sbb
dec
and
xor
inc
dec
add
adc
stos
ret
jb
or
fs
addr16
pop
rclb
cmc
sub
push
dec
idivl
push
hlt
stos
sub
sbb
push
cld
insl
hlt
push
pushf
lock
cld
outsl
add
loope
add
sub
xor
and
out
jmp
out
and
stc
je
je
arpl
jno
rcrb
hlt
or
enter
push
bound
fldenv
scas
out
mov
push
lea
clc
xor
sbb
adc
enter
xchg
xorb
lock
clc
adc
dec
cmp
mov
orb
sahf
add
das
pop
stos
adc
xchg
add
push
push
les
ret
add
roll
add
pop
sub
jg
fcompl
xorb
cmp
and
or
imul
sti
adc
dec
gs
inc
fs
and
sub
add
xor
and
adc
sbb
xchg
in
push
adc
push
addl
rorl
or
andb
mov
xor
sbb
repnz
into
dec
xchg
pusha
in
out
bound
add
sub
imull
test
popa
aam
nop
xchg
cmp
andb
orl
ds
add
and
sbb
gs
mov
inc
arpl
mov
mov
add
or
cmp
test
test
pop
cmpb
inc
loope
sahf
aaa
inc
cwtl
sub
mov
and
cld
xchg
mov
ltr
incb
test
inc
pop
dec
add
add
subl
add
xor
decb
jno
imul
jg
jp
shll
cmp
and
xor
adc
dec
cmp
add
xor
out
dec
cli
mov
int
add
mov
aam
push
and
inc
or
cmp
cmpb
sti
divb
mov
add
sub
pop
xchg
scas
movsl
mov
enter
cmp
daa
and
mov
jle
or
mov
adc
cs
int3
sbb
and
pop
jnp
std
mov
xchg
xor
adc
pop
cmp
pop
stc
xor
or
and
pop
fucomi
inc
mov
clc
cmp
mov
faddl
dec
xorb
mov
mov
mov
add
test
or
mov
mov
fs
test
add
sub
fsub
fadds
push
mov
in
addr16
mov
cmp
shlb
stos
adc
pop
lods
add
in
sub
add
sahf
cmc
out
or
ljmp
stos
adc
mov
jge
cmpsl
inc
shr
sbb
mov
mov
in
clc
mov
dec
aas
pop
cmpb
pusha
xor
push
fdivrl
fisubl
add
pop
sub
inc
nop
add
insb
mov
sub
mov
fs
lahf
repz
add
andb
enter
outsb
xchg
nop
add
add
shrb
pop
mov
pop
xchg
mov
mov
icebp
repnz
jg
dec
push
mov
jo
add
pop
push
mov
inc
or
bound
rol
add
fbld
rolb
or
mov
aam
or
ds
decl
cmp
in
nop
lds
aam
sbb
outsl
hlt
loopne
adc
push
inc
pop
mov
xchg
test
jle
or
or
insb
inc
pusha
nop
sub
jmp
testl
mov
and
dec
add
mov
popf
outsl
adc
fwait
push
pmaxsw
shlb
and
jns
add
push
mull
adc
mov
jbe
fiadds
dec
addr16
dec
xor
lcall
pushf
and
test
add
or
xchg
pop
inc
lock
sbb
and
and
mov
rcll
sbb
pop
nop
inc
cmpsb
xchg
cwtl
cmp
jmp
mulb
popl
repnz
dec
addl
or
adc
mov
nop
sti
add
rclb
push
xchg
pushf
pop
adcb
mov
sbb
push
jae
mov
cmp
stos
or
dec
or
adc
push
into
sbb
shr
pop
lahf
mov
std
pushf
jb
sbb
cmp
clc
dec
pop
inc
adc
mov
add
or
in
adc
add
mov
jb
push
and
inc
and
pop
inc
dec
mov
inc
pop
movsb
sub
inc
xchg
jnp
stos
mov
dec
jno
sub
inc
mov
jne
inc
inc
cmp
mov
mov
xor
fsts
sbb
dec
xchg
xchg
bnd
mov
add
inc
push
push
stos
adc
shlb
xchg
sahf
xor
pop
movsb
out
bound
adc
add
repz
dec
mov
js
out
adc
insb
loopne
add
push
rolb
push
jecxz
scas
and
adc
mov
jmp
jge
sbb
pop
add
add
pop
cmp
pushf
arpl
inc
inc
mov
jno
mov
cmc
sub
sahf
jne
out
add
cmp
loopne
lahf
into
cli
xchg
add
int3
sbb
outsb
add
mov
xor
dec
or
lock
push
and
mov
bound
pusha
mov
pusha
xchg
and
mov
add
jns
aas
rcll
mov
fimull
push
cld
test
loopne
jae
ret
pusha
sarb
ds
pop
jp
or
xchg
in
lret
and
inc
dec
push
jne
add
mov
xchg
daa
mov
and
add
in
test
sbb
dec
mov
adc
sub
sub
fists
adc
mov
xor
push
xor
ret
cltd
or
xor
jnp
mov
addb
clc
and
ljmp
imul
add
cwtl
cltd
decb
mov
sti
call
push
xor
in
add
add
mov
pop
sbb
loope
inc
fnsave
cs
jg
les
push
aas
scas
inc
sub
add
adc
fwait
insl
pop
add
rcrb
mov
or
aas
hlt
aas
cmpb
xlat
ja
sub
mov
out
xchg
mov
xchg
lds
add
stos
sub
int
orb
add
xor
jnp
xorb
stos
cmc
cld
xor
into
test
ret
bound
jge
leave
outsl
pop
rolb
movsl
jae
aad
inc
lret
add
sub
lods
mov
sbb
pop
and
sub
mov
adc
pusha
dec
std
add
cmp
pop
outsl
adcb
lea
push
rcll
mov
cltd
inc
add
fcomip
add
fidivrs
mov
cwtl
pop
add
sbb
push
add
inc
cmp
pop
xor
xchg
pop
nop
cwtl
js
pop
hlt
add
fimull
jl
pop
mov
mov
clc
into
add
cmp
and
xlat
push
add
add
add
enter
xchg
lea
andl
jbe
add
mov
add
inc
push
je
call
scas
sub
jp
pop
pop
jg
add
lods
jbe
xor
mov
roll
nop
dec
scas
sub
cmpsl
faddl
sub
mov
add
push
orb
das
xlat
add
mov
enter
add
pusha
fcoms
shll
xchg
add
or
push
mov
lret
stos
addr16
rcll
jns
pop
jl
inc
inc
inc
mov
mov
sti
mov
mov
xor
mov
fmul
iret
ret
sar
mov
jl
insl
mov
movl
lahf
fsubs
mov
or
in
jb
test
nop
sbb
dec
xchg
nop
mov
js
arpl
into
jns
add
push
shrl
pop
shlb
adc
daa
mov
jno
out
xchg
cmp
dec
pusha
in
mov
ret
mov
daa
jecxz
mov
popf
mov
pop
lret
mov
jle
add
add
scas
hlt
pop
jg
fdivp
add
lock
popa
in
sub
lcall
lock
add
mov
sub
jnp
mov
add
fmuls
jno
pop
mov
add
lock
lods
sbb
imul
inc
ret
add
pop
lcall
cltd
mov
sbb
cmc
iret
jae
cmp
adc
movsl
cmp
pushf
add
push
out
clc
push
in
out
pop
into
enter
mov
dec
mov
sub
nop
sub
add
fcmovb
add
lods
fstpl
rcrb
loope
iret
push
test
mov
push
xchg
dec
inc
dec
aad
out
cmpsl
cmova
movsl
add
inc
pop
adc
xchg
loopne
or
in
jmp
enter
clc
lods
sbb
mov
call
or
das
fldl2e
mov
add
sbb
xorb
push
mov
push
fcompl
or
cmpsb
stos
adc
add
adc
sbb
adc
adc
inc
sbb
lret
imul
xor
mov
cmp
mov
cmp
xchg
scas
pop
add
add
lret
cli
mov
xchg
aam
cwtl
fistpll
add
pop
fiaddl
sahf
out
pop
ja
add
mov
adc
cld
inc
pop
pop
add
mov
add
test
and
es
jnp
aad
xchg
mov
movsb
insl
fstps
jle
add
mov
repz
mov
add
dec
adc
xchg
xchg
sub
pop
sbb
add
stos
sbb
mov
xchg
add
sbb
push
add
and
call
sbb
or
pop
jb
mov
or
insl
pop
jne
pusha
and
ret
push
andb
aaa
cmp
add
push
or
cmp
add
pop
lret
inc
cs
dec
pusha
scas
push
dec
push
popa
xchg
pop
xor
shlb
lea
es
call
pop
scas
pop
add
jge
into
xchg
sub
hlt
mov
fisubs
hlt
jg
imul
and
jbe
add
mov
or
cmp
add
inc
das
aaa
mov
imul
sarb
stos
add
mov
mov
lds
dec
stc
add
cmp
jb
adc
repz
and
mov
push
aas
xchg
add
movsb
add
inc
mov
shlb
sbb
cltd
andl
mov
mov
mov
add
in
jo
dec
inc
mov
rclb
xchg
repnz
addr16
mov
lods
mov
cs
mov
sbb
jecxz
lods
pusha
or
faddl
ret
js
fsts
adc
dec
pop
xchg
gs
andb
imull
jbe
sub
push
mov
xor
add
push
leave
cmp
insl
cltd
or
repnz
add
lcall
pop
arpl
ljmp
data16
arpl
mov
cmp
cmpsl
in
inc
ror
or
popa
mov
add
pop
je
lahf
inc
imul
cs
adc
adc
jmp
add
in
inc
add
mov
or
test
call
rorl
mov
add
sub
test
add
aas
mov
cld
cmp
add
test
adc
cmp
movsb
lahf
mov
ror
add
nop
int
mov
xor
sbb
push
push
inc
lret
test
movsl
inc
es
sbb
pop
mov
add
xlat
cmp
fnstenv
push
add
cli
int
add
popa
cs
sbb
gs
out
aad
cmp
outsl
in
mov
addb
mov
addb
outsb
and
pop
lahf
cmp
add
fs
or
push
xor
jo
clc
jmp
rclb
or
jns
test
orb
add
in
sbb
sbb
ds
xchg
jns
fwait
jne
setge
int
ret
push
add
adcl
mov
out
es
test
sub
sub
mov
cmp
mov
inc
cmpsl
push
add
dec
movsb
pop
aam
xchg
or
cmp
adc
or
mov
push
add
xchg
mov
or
stos
add
mov
sub
add
rcl
cwtl
jo
imul
add
mov
xchg
fldenv
orb
push
mov
or
push
xor
outsb
cwtl
inc
push
ss
push
xchg
adc
xor
push
aad
fisubl
mov
add
add
jmp
test
sbb
sub
jne
jmp
aas
out
int
pop
jns
push
mov
add
mov
testb
fldcw
test
std
loopne
sub
stc
dec
shlb
sarl
mov
mov
mov
cwtl
addr16
iret
pop
add
fcmovbe
fs
add
mov
or
sar
mov
add
and
add
dec
jbe
push
jecxz
add
and
mov
ja
dec
into
nop
mov
lcall
lods
jge
push
hlt
xor
test
ljmp
movsl
daa
loopne
mov
push
xchg
nop
mov
cmpsl
cli
jnp
mov
pushf
pop
lcall
test
dec
and
mov
adc
int3
mov
add
or
mov
xor
push
stc
sti
repz
cmp
xchg
cltd
clc
fldl
jp
out
jns
push
sub
test
or
push
add
jnp
push
sbb
sbb
add
lds
cmpsl
int3
pop
mov
xchg
icebp
jnp
xchg
fsubrl
mov
cmp
pusha
adc
inc
sbbl
out
sub
insb
fsubs
ret
out
sub
jl
sahf
mov
mov
sbb
add
cmpsb
addb
nop
jbe
aam
roll
pop
clc
rolb
mov
mov
inc
cmpsb
add
ds
adc
xor
mov
ret
stos
test
pop
xchg
sahf
jbe
in
into
add
mov
imul
jbe
out
ds
mov
iret
jo
pusha
add
daa
jp
repnz
into
cmp
in
loop
fnstenv
add
and
jecxz
lcall
mov
sbb
shrb
add
mov
add
jle
js
inc
faddl
lds
bnd
mov
sbb
stc
sbb
cmc
roll
jo
out
lret
arpl
enter
lock
bound
inc
lods
and
rorb
or
ds
add
pop
aas
fst
xchg
push
add
mov
mov
lcall
decl
pop
subb
cli
cmpl
and
sti
mov
add
and
inc
jo
aad
gs
cmp
or
pop
push
adc
xrelease
or
add
sbb
outsl
sub
cwtl
or
or
jle
das
cmp
sub
fidivrl
xor
inc
inc
or
pop
aad
xorb
add
push
cltd
mov
mov
add
mov
ja
dec
add
popa
clc
out
add
jno
mov
ret
xchg
or
roll
jo
sbb
adcb
fldl
clc
inc
inc
cs
or
add
cltd
sub
testb
mov
enter
push
add
fcomps
inc
pop
or
mov
sarl
std
xchg
insl
testb
imul
into
and
jg
sbb
sti
nop
adc
cmp
cmp
push
lcall
push
rcr
je
mov
jle
out
pop
daa
xchg
jecxz
outsb
jo
lahf
and
aas
out
jg
sub
les
mov
xchg
mov
jbe
icebp
cld
les
mov
pop
xor
pavgb
rclb
sub
xchg
jmp
xchg
mov
movsb
add
jg
add
aam
sub
shlb
jo
add
and
rcrl
add
push
xor
dec
repnz
add
outsl
data16
dec
inc
cmp
mov
dec
pop
cmpsb
nop
inc
xchg
cmp
cmpsl
pop
push
mov
xor
push
mov
push
lea
xor
mov
repnz
xor
adc
add
aaa
imul
inc
ret
fnstenv
xor
test
inc
test
aaa
lahf
xchg
out
push
dec
mov
jge
cmp
sbb
lock
xchg
pop
movsb
inc
or
ja
int3
fdivrp
xor
xor
sub
inc
jo
mov
add
jle
push
sbb
lea
cmp
call
sti
xchg
or
scas
add
xor
mov
and
add
in
das
xchg
inc
add
inc
repz
sbb
in
inc
fcoml
sahf
loopne
icebp
in
jp
add
xchg
fstpt
inc
stos
add
push
sub
add
cwtl
jno
ljmp
mov
and
test
inc
enter
cmp
cmp
pop
push
or
jp
add
outsl
cmp
scas
mov
adc
adc
stos
inc
call
mov
adc
mov
rolb
sbb
clc
icebp
gs
add
test
xchg
cltd
shll
add
sbb
fwait
mov
fiadds
in
loop
repnz
outsb
and
lods
fs
aas
nop
and
mov
dec
jge
sbb
cmp
adc
loopne
xchg
xorl
js
jb
pop
xor
ds
sbb
adc
outsl
cs
fnstcw
pop
jmp
cmp
xorl
xchg
fiadds
das
fldt
lods
ret
sbb
cmp
pushf
int3
les
std
sbb
mov
add
int
test
ffreep
into
pop
mov
hlt
mov
inc
div
iret
addr16
pop
cmpsb
or
rorb
out
sub
dec
movsl
lds
cltd
push
add
xlat
mov
daa
cld
shlb
sub
out
sarl
mov
je
dec
test
add
mov
call
les
sbb
nop
stos
adc
dec
xlat
andb
sahf
xor
mov
int3
add
or
jge
pop
and
xor
cmpsl
data16
je
or
enter
in
add
lock
jp
pop
mov
int3
add
cli
cmp
adcl
arpl
adc
and
lahf
lret
shlb
add
dec
push
aas
mov
add
xor
outsb
push
pop
push
fcoml
jbe
loop
fidivs
jno
pop
jle
lret
pop
adc
mov
aad
popf
sbb
and
cmpl
cmp
sbb
sbb
pop
mov
push
repnz
and
add
lds
adc
addr16
sbb
add
in
mov
in
addl
int
test
mov
cmp
in
lret
dec
xchg
lret
mov
int3
xorb
faddl
xor
pop
pop
add
insl
inc
mov
xchg
test
and
std
in
add
adc
mov
insl
and
add
cmp
xchg
loop
add
push
or
pop
arpl
push
xchg
xchg
jno
mov
mov
lea
sti
pop
mov
fidivrs
sub
movsb
out
push
in
adc
jle
les
movsb
sbb
inc
fs
sub
leave
adc
dec
stos
popa
pop
les
jmp
mov
sbb
and
subb
sub
add
add
mov
test
xchg
pop
sar
ljmp
inc
cmp
movsl
nop
pusha
cwtl
xlat
add
pop
push
xor
in
inc
outsl
orl
imul
rcll
mov
in
out
pop
cmp
cmc
andb
insb
lahf
stos
mov
in
idivb
lods
ss
sub
add
adc
pop
nop
lods
inc
adc
sarl
cmp
mov
jnp
in
leave
add
shlb
mov
lahf
or
sbb
pusha
mov
xchg
inc
or
loopne
enter
xlat
jp
test
dec
rol
adc
test
fs
dec
mov
or
mov
popa
out
add
push
xorl
xchg
sarb
inc
and
call
daa
cmp
push
sti
insb
bound
xchg
shlb
adc
adc
test
cmc
into
je
jno
leave
add
mov
js
test
and
dec
scas
cmp
into
dec
repz
scas
out
aas
loopne
add
push
imul
lahf
pop
dec
out
and
pop
rolb
push
cwtl
popf
push
sbb
roll
jg
or
sbb
pop
hlt
add
mov
jl
mov
jae
subl
add
outsb
jne
jl
or
jo
mov
repz
out
loop
inc
pop
push
imul
lahf
or
push
add
movsb
push
or
int3
shlb
mov
mov
pop
xchg
add
jp
pop
dec
icebp
mov
pusha
out
test
es
fs
dec
add
stos
cmpsl
cmc
adc
pop
pop
stos
lahf
loope
inc
ljmp
adc
add
jno
push
cwtl
adc
out
imul
cltd
mov
add
mov
cs
mov
popf
imul
aam
cmp
in
cmpsb
into
xlat
add
ss
mov
repz
test
and
loop
adc
pop
add
and
or
adc
push
xchg
xchg
dec
add
jecxz
test
inc
mov
movsb
jge
cwtl
cmp
xor
mov
out
push
xor
xchg
sbb
clc
and
mov
add
or
nop
loope
jns
jo
add
xchg
cmp
fisttpl
mov
mov
mov
sub
arpl
lea
add
jl
and
ds
jg
scas
cmc
jge
add
jmp
cs
xchg
daa
pop
add
xor
pusha
insl
mov
push
mov
lods
fidivrl
outsb
lods
or
add
jne
sbb
aaa
add
sarl
ror
xchg
dec
xor
aas
orb
push
pop
fldenv
in
mov
xor
add
aas
or
out
cmp
mov
outsb
cmpl
mov
int3
loopne
push
in
dec
push
fidivs
rcl
push
mov
jo
inc
lock
out
add
loop
mov
cmp
cmpsb
sub
dec
sbb
mov
and
outsl
in
jge
add
outsb
inc
inc
rolb
ds
add
xchg
mov
and
xlat
lcall
test
sti
sub
add
dec
aaa
adc
fisubl
loop
xchg
push
jns
repz
push
add
sti
push
add
pop
loop
xchg
add
or
xchg
mov
gs
outsl
loope
push
cmpsb
lret
pop
jns
add
fists
inc
add
in
inc
mov
sti
cs
sbb
add
enter
pop
jl
add
sbb
jae
sub
xchg
into
inc
xchg
scas
decb
mov
sbb
pop
mov
scas
jo
cmpsl
push
daa
mov
dec
add
pushf
repnz
mov
mov
dec
add
scas
jb
dec
loopne
and
cs
jne
jecxz
mov
movsl
ret
addb
push
push
scas
out
inc
dec
les
cmp
clc
add
xchg
pop
push
mov
add
ret
aad
hlt
sbbl
call
xorb
ljmp
push
dec
adc
inc
or
mov
pminsw
sub
cld
test
inc
in
faddl
xor
xor
xchg
pusha
add
mov
add
add
cmp
xchg
dec
jmp
and
loop
dec
dec
inc
call
sbb
popa
cwtl
and
aas
add
fcoml
xchg
jnp
test
add
pop
gs
aaa
imul
push
nop
mov
stos
pop
fadds
jp
pushf
add
fnsave
test
and
fidivrs
sti
mov
mov
icebp
lcall
mov
add
into
push
lods
popf
and
fneni(8087
pcmpeqd
xchg
inc
popf
out
andb
test
mov
sub
jp
jno
or
xor
enter
jmp
add
insb
jecxz
and
fmull
xor
mov
xchg
jno
iret
imul
pop
push
inc
sldt
popa
cmp
jne
ret
cmp
xchg
or
pop
in
ja
add
cmp
pop
test
pop
pop
adc
sarb
lods
jae
mov
sbb
add
andl
sbb
lret
int
xor
aad
repnz
jb
dec
fnop
loop
dec
jp
adc
jmp
or
adcl
in
fcomi
jle
sub
sbb
add
hlt
jge
pop
mov
pop
add
ret
popa
mov
sub
add
cltd
adcb
fdivl
sbb
jae
lds
jmp
pop
cmp
popf
test
in
pop
xchg
add
xchg
jp
sbb
xor
aam
mov
outsl
inc
adc
jns
and
popf
or
and
and
jae
pusha
xchg
adc
rorb
pop
fadds
pushf
mov
cltd
xchg
inc
mov
add
push
insb
or
mov
xchg
cwtl
inc
inc
mov
test
pop
jge
in
rolb
mov
cmpsb
cwtl
sbb
fs
lahf
add
loop
lret
lods
outsb
mov
push
inc
pop
ret
movsb
mov
repz
and
pop
cltd
out
jg
adc
lods
sbb
ss
pop
ja
fiaddl
cmp
out
xchg
or
psrlq
lahf
inc
call
cltd
cmp
push
add
add
jle
lret
leave
cmp
out
rclb
cli
iret
add
pushf
clc
sbb
popa
xchg
mov
hlt
loop
mov
xchg
sub
mov
addr16
out
push
adc
sarb
adc
inc
dec
in
pop
push
clc
and
mov
cs
pusha
pushf
cmp
jb
mov
jno
adc
cmpsb
add
and
rcrb
mov
adc
push
dec
fdivl
mov
add
in
sub
jl
pop
adc
xor
push
mov
xlat
pop
pushf
lods
out
shrl
rolb
pop
sarb
add
imul
mov
stos
adc
add
movsb
int3
xor
enter
shlb
lret
pxor
adc
in
xor
add
fdivl
add
loope
popa
sbb
or
clc
dec
add
sbb
adc
push
add
hlt
xor
aaa
mov
in
add
ljmp
xor
mov
add
mov
andb
fmuls
lods
add
cld
mov
mov
add
xchg
aas
adc
and
add
sub
fcomps
movsl
inc
mov
add
add
lock
adcl
lods
iret
jo
inc
repnz
aad
insl
clc
mov
add
inc
mov
lcall
add
and
xor
pop
cs
dec
ror
gs
xchg
mov
adc
mov
push
sub
jge
sub
mov
or
xor
das
cmp
addl
negl
daa
outsb
add
push
fisttps
jo
mov
loop
add
xchg
cwtl
cmp
xor
lods
pusha
fcom
mov
dec
enter
mov
add
mov
and
add
ficoml
icebp
add
stos
cmp
jns
xor
or
test
aam
inc
loop
add
loopne
in
jle
add
pop
jns
lret
add
leave
fimull
in
sbbb
mov
sub
jle
pop
js
lahf
dec
add
and
or
jle
test
cmp
mov
inc
jnp
push
mov
lret
xor
aaa
push
lods
add
add
cmpsl
leave
mov
cmpb
int
cs
movhlps
stos
add
daa
rol
add
mov
aas
and
pop
iret
mov
push
popa
fdivp
cmp
loopne
or
jge
cmp
insb
add
mov
add
ja
mov
add
pop
mov
xchg
add
mov
mov
add
dec
popf
push
sub
incl
pop
imul
sbb
aam
div
xor
out
add
test
ja
fidivrl
scas
pusha
daa
movsb
pop
xor
pop
sub
jl
jnp
add
jle
ds
pop
arpl
inc
add
sbb
loopne
pop
adc
inc
or
and
icebp
add
orb
xor
sbb
sub
call
in
pop
cmp
cmp
dec
loopne
popf
sbb
sbb
movsl
out
and
push
push
ret
mov
cmp
mov
add
sbb
cltd
push
add
push
jmp
adc
imul
xor
aas
dec
bswap
pop
aam
add
loopne
adc
stos
movsb
add
mov
inc
fisubl
add
dec
mov
add
sbb
dec
add
ss
sbb
loope
mov
fistps
push
xchg
aad
fdivs
xchg
mov
add
jge
sarb
aam
mov
enter
lret
jle
cmp
bnd
cmp
in
lidtl
daa
mov
cmp
push
add
or
add
xchg
mov
call
bswap
mov
mov
nop
mov
fidivrl
pop
push
lods
stc
js
shlb
iret
mov
pop
lea
mov
cmp
scas
ds
add
add
sub
push
in
lahf
add
imul
outsb
mov
pop
add
jg
mov
and
rolb
xor
sbb
ss
push
add
inc
subb
sbb
mov
and
pusha
wrmsr
dec
repnz
sti
jnp
or
fnstenv
add
out
sub
loopne
cmp
rcrb
jge
popa
pop
jne
pop
and
adc
add
int3
stc
mov
inc
loop
les
inc
jp
dec
add
sbb
xchg
or
loop
and
add
cmpsl
cmp
test
in
js
add
ss
stos
dec
roll
in
dec
cld
daa
add
aaa
mov
or
mov
rcll
inc
pop
ret
push
mov
sub
xchg
dec
fldl
ja
popf
in
adc
data16
scas
jmp
jo
add
movsb
xor
mov
and
mov
shrb
sbb
mov
loop
add
loop
les
xchg
jnp
mov
stos
add
xchg
lret
fists
xor
push
xlat
jg
lret
mov
xorb
add
and
imul
push
cwtl
jns
js
loop
das
xchg
add
nop
sahf
cmp
dec
in
fisubs
jae
cmp
mov
cli
subb
xchg
jbe
nop
mov
sub
or
add
sti
mov
adcl
repz
addb
btl
lock
pop
test
add
mov
fwait
add
and
pop
fs
lret
mov
pop
mov
in
and
out
iret
int
dec
inc
adc
xchg
jle
add
subl
gs
in
mov
cmp
add
lcall
call
xorb
add
adcb
push
mov
pop
ja
dec
div
lock
out
add
add
mov
enter
loop
lods
push
in
jmp
cwtl
mov
sbb
mov
rcrb
push
cmp
add
or
incb
repz
jl
int3
and
push
push
aam
loop
rcrl
je
lcall
and
xlat
add
in
mov
push
aam
pop
dec
adc
add
pop
cmp
cmp
pop
xchg
adc
add
shl
push
mov
movsb
repz
pusha
shll
int3
push
adc
jecxz
push
orl
into
lods
push
pop
adc
insl
mov
loopne
loope
xor
js
add
cmp
jo
jle
mov
mov
hlt
pop
push
std
pop
psraw
mov
push
inc
sub
adc
ds
ljmp
push
fs
pop
add
mov
adc
call
or
cwtl
test
and
shl
xor
mov
cmp
daa
lea
adc
add
or
and
mov
mov
imul
sub
sbb
out
mov
cld
sbb
pop
cwtl
shl
gs
out
cmpsl
adc
insb
ret
cmp
xor
outsb
push
iret
ss
sub
add
scas
sbb
add
add
and
mov
mov
dec
inc
lret
cmp
mov
cwtl
mov
adc
adc
loop
xchg
xlat
mov
jmp
mov
mov
dec
pop
cs
push
push
sub
jns
mov
add
xchg
mov
sarb
pop
inc
ja
mov
mov
sbb
add
ljmp
dec
movsb
lock
mov
mov
xchg
lods
mov
mov
add
lock
and
jg
mov
xchg
cmp
das
and
and
xor
mov
jne
and
and
mov
mov
pop
sarl
pop
inc
shll
sbb
xlat
mov
clc
rcr
cltd
pushw
lahf
sti
xlat
movb
push
sub
stos
and
daa
incb
adc
cmpsb
loop
aaa
ja,pt
jo
mov
repz
into
push
jmp
dec
pop
and
hlt
push
xor
sbb
push
lods
js
sbb
testb
enter
ret
sbb
addb
inc
pop
outsb
pop
add
outsl
out
inc
inc
push
xor
or
sbb
pushf
jne
xchg
imul
inc
push
cwtl
ja
push
cmp
rcll
cmp
add
push
shl
and
test
lock
jno
pop
hlt
mov
fmull
add
sub
dec
xchg
inc
adc
sub
lods
sbb
pop
aam
xchg
out
xchg
imul
cmpb
xchg
add
fldl
add
icebp
repnz
xchg
sti
mov
push
ss
add
fsub
imul
adc
adc
jbe
add
jmp
xchg
repz
jno
add
pop
jmp
push
sub
push
cmpsl
dec
lahf
dec
pop
push
pushf
outsb
ja
loopne
lahf
sub
add
movsb
xor
xor
add
or
add
cwtl
push
push
or
sbb
adc
mov
shlb
jb
inc
jns
shrb
pop
in
add
test
inc
pinsrw
xchg
mov
inc
push
inc
mov
sbb
sbb
mov
push
gs
sbb
in
and
rclb
cltd
ja
pop
add
jae
mov
shrl
and
loopne
and
imull
imul
sbb
sub
add
scas
pusha
inc
lods
jl
cmp
or
and
add
add
nop
test
push
pop
pop
xchg
in
mov
addl
sbb
sahf
rolb
inc
lret
add
aad
inc
cmpsb
jp
xchg
add
cmp
add
das
fs
sbb
stc
scas
push
lret
add
mov
mov
int
cmc
pop
cmp
push
outsl
or
inc
mov
int
pop
fs
or
shlb
ja
pop
addl
popa
pushf
js
sbb
test
into
movq
xchg
stos
xchg
mov
xor
outsb
les
sbb
pop
add
data16
fimuls
dec
dec
push
cmp
mov
adc
add
inc
sarl
and
xchg
dec
test
xchg
jnp
push
lea
cli
mov
pop
rol
testb
lcall
imul
cld
test
add
gs
insb
jl
insl
push
divl
jg
or
push
mov
js
rcl
add
cld
movl
dec
inc
jge
sbb
add
add
les
movsb
pusha
sbb
mov
or
add
pop
mov
add
sbb
pusha
aas
stos
std
add
outsb
icebp
cmp
les
push
fmull
hlt
push
lock
dec
sub
filds
dec
test
shll
dec
jo
sbb
add
jne
push
add
inc
or
adc
shrb
xor
loope
movsb
xchg
push
sub
mov
sbb
dec
xorl
mov
popf
mov
in
push
hlt
sahf
xor
fmull
adc
and
mov
mov
mov
movsb
clc
mov
pusha
insb
jge
mov
ja
jo
icebp
dec
jnp
mov
js
pop
jmp
cmp
cmpsb
pop
xor
leave
es
cmp
add
jne
mov
lret
and
in
das
add
jmp
mov
add
and
ljmp
or
mov
inc
in
push
pop
imulb
mov
clc
add
xor
shlb
rclb
lods
cld
adc
sbb
cmp
add
fbld
cltd
and
aas
push
daa
push
int3
xchg
pop
add
cwtl
hlt
enter
incl
fwait
and
lods
push
sarl
lods
jnp
lcall
loope
pop
mov
inc
es
in
xlat
add
lret
fwait
cld
rolb
shrb
fst
mov
push
nop
sbb
inc
adc
inc
xchg
add
jno
xchg
into
lock
adc
xlat
fistpll
cmpsl
fsubrs
pop
bound
adc
and
popf
pusha
jle
pop
mov
popa
mov
sbb
movsl
fistpll
dec
inc
fwait
mov
xor
and
and
pop
cmp
xchg
je
enter
sub
clc
rcrb
pop
out
sbb
add
jbe
adc
test
aam
mov
push
add
cmp
addl
das
push
mov
into
add
inc
gs
aam
pop
mov
adc
adc
push
add
loope
fwait
cmp
addr16
xor
popa
ljmp
jl
or
sbb
daa
add
push
cwtl
jne
jg
inc
shl
sti
sbb
cli
hlt
loopne
adc
test
mov
add
pop
shr
out
mov
add
movsl
inc
dec
jno
add
test
repz
pop
add
push
pop
jbe
fimuls
in
test
jns
adc
je
adc
loope
and
and
and
cmp
add
cwtl
inc
ljmp
or
xchg
rolb
icebp
cmpsb
repnz
push
clc
rclb
je
pop
adc
sub
loope
call
in
lret
aas
xchg
psubsb
negb
nop
jnp
clc
add
insb
push
inc
inc
fwait
add
test
adc
in
add
fcoml
xor
pop
mov
in
aas
ret
pusha
mov
dec
jb
or
in
mov
add
rcrb
jecxz
push
imul
push
fmul
orl
popl
sbb
pusha
ja
add
jae
dec
dec
test
fld1
test
add
adc
les
mov
push
stc
fidivs
sub
mov
and
xor
addb
popa
add
mov
jmp
imul
mov
xlat
jns
imul
push
ret
sub
jle
icebp
sbbb
imul
jp
sarb
push
sub
jne
jns
and
add
xchg
imul
add
pop
jl
dec
lds
sbb
mov
or
jg
adc
in
pusha
test
jmp
add
loope
dec
les
aaa
incl
push
out
mov
cwtl
test
aas
add
int
dec
pusha
push
cltd
add
inc
mov
pop
pop
mov
mov
cmp
test
xor
out
push
jg
psubusw
cmp
cmp
out
mov
lods
leave
xor
cmp
sub
cli
push
cmp
sbbb
out
add
ret
mov
fdiv
nop
jge
aaa
push
add
sarl
push
jo
pop
adc
push
mov
mov
js
cmp
inc
in
mov
daa
xchg
and
fldcw
cld
push
nop
insl
cmp
cltd
jne
mov
add
nop
jle
xor
jo
mov
and
in
dec
mov
rorl
incb
push
test
mov
mov
mov
mov
aad
sub
negb
icebp
cmp
mov
enter
sbb
insb
mov
lcall
jns
mov
add
xor
movsl
les
addr16
mov
pop
push
arpl
and
das
js
pop
into
push
xchg
jno
or
dec
imul
xchg
sbb
cmpsl
rcr
jmp
jge
or
or
idivl
jp
pop
push
and
int3
mov
mulb
bound
in
xchg
or
cmp
clc
mov
sti
add
dec
sub
int3
pop
cld
xchg
data16
mov
stos
mov
adc
mov
jp
jbe
or
add
push
sbb
jp
movsb
lret
add
movsl
mov
dec
in
mov
pop
add
cmp
dec
add
add
mov
sbb
mov
cli
call
cmp
fmull
hlt
movsb
and
arpl
subb
in
imul
dec
add
test
inc
and
pop
pop
push
sub
ljmp
cmp
and
subb
test
or
clc
fs
adc
imul
cmp
dec
fistpll
movsb
test
add
inc
or
jl
sbb
sub
mov
cmpsl
adc
or
jbe
push
add
sahf
cld
enter
lidtl
jp
cli
push
out
mov
loop
ret
pop
shr
test
xor
out
add
stos
lods
dec
sbb
ffreep
fnstcw
cld
xchg
add
testb
push
jp
repnz
loopne
add
mov
movsb
pop
dec
and
orb
movl
popa
les
xchg
test
pop
es
in
dec
add
xlat
sti
std
add
xor
cmp
sbb
mov
lcall
add
fnstsw
mov
cmpsb
add
jno
rolb
cs
movsb
mov
dec
cli
insl
and
test
shl
jo
pop
popf
push
cmp
ret
lods
movsb
add
imul
mov
xchg
jle
mov
stos
mov
jae
add
add
add
aam
dec
pop
sub
sbb
or
push
push
add
cmp
cmpsl
das
cmp
cmp
bound
loope
push
fwait
adc
inc
and
mov
rolb
or
sbb
stos
jo
inc
cli
das
mov
pop
xchg
nop
and
push
or
fdivrl
dec
subb
mov
lret
pop
mov
cs
xchg
add
cmc
adc
or
daa
dec
int3
imul
sub
adc
and
int
xor
cmc
inc
sub
mov
add
popf
sub
mov
loopne
add
addr16
jae
adc
lds
aaa
adc
lods
xchg
insb
loopne
add
or
pushf
dec
adc
add
mov
cmpsb
inc
dec
ja
add
mov
push
mov
aaa
xchg
arpl
mov
bound
mov
js
and
jl
lock
pushf
es
mov
shrl
jo
ret
shl
shll
and
and
or
mov
jne
sbb
mov
out
ltr
xchg
jb
inc
call
popf
or
cmp
xor
rcl
out
cmpsl
inc
or
rcrb
lock
or
jge
les
dec
push
lock
mov
jg
cmp
and
rcr
xchg
xchg
sbb
pop
cmp
shl
add
or
rorw
leave
dec
cmp
cmpsl
lds
pop
int3
out
ds
pop
inc
pushf
sbb
push
sub
lret
and
pop
sbb
shrb
push
mov
mov
add
aad
adc
add
push
mov
or
imul
fdivs
push
fnstcw
pxor
and
xchg
add
dec
add
clc
push
adc
les
mov
and
subl
add
or
int3
sub
dec
fadds
inc
push
imul
andb
or
and
cmp
dec
inc
xchg
inc
stos
dec
std
xchg
pusha
aas
mov
pusha
and
test
aaa
arpl
jbe
add
adc
dec
xchg
xor
addl
cmp
hlt
cli
cmpsl
sbb
jbe
mov
adcb
out
movsb
cmpb
lret
hlt
icebp
mov
push
test
add
cmp
adc
std
cmpsl
push
lea
rclb
ja
push
pop
outsb
jl
imul
rorl
das
dec
mov
aad
ffreep
fcoml
and
mov
mov
xor
add
ret
xbegin
sub
push
sub
pop
clc
fcomip
loopne
add
mov
push
ret
pop
cmc
icebp
js
xor
sbb
inc
inc
mov
je
cwtl
push
sbb
jno
push
add
lock
nop
sbb
or
test
test
pusha
mov
bound
cmc
push
mov
clc
es
xchg
dec
sub
pop
jae
push
adc
movsb
in
andb
out
pushf
add
push
sub
les
test
jg
mov
mov
imul
cmpsb
xchg
shlb
adc
mov
flds
xchg
xchg
js
lcall
push
push
xchg
faddl
lock
xchg
xlat
xchg
int
insb
or
sub
xor
out
imull
sub
xchg
mov
sbb
lahf
jnp
xor
icebp
mov
jns
in
xor
add
push
pop
inc
pop
rcr
and
out
test
lret
int
je
sub
imul
ds
mov
cli
push
roll
out
push
stos
inc
fsubs
add
push
ja
mov
adc
push
mov
sub
lock
mov
nop
add
mulb
bound
xlat
scas
xchg
mov
lods
xor
inc
cmp
daa
pop
rcrl
ud1
aam
sub
or
fs
bound
in
shrl
add
push
push
nop
jae
ret
and
xorl
adc
call
xchg
add
dec
push
lock
lret
push
inc
xlat
stos
add
push
les
inc
rolb
sbb
mov
dec
mov
or
repz
imul
sub
cmc
pop
cmp
push
cltd
in
rcl
shlb
cmpb
fs
xor
xchg
shl
add
stc
mov
add
cmc
idiv
out
push
aaa
xchg
or
xor
lds
xor
xchg
xchg
jns
add
push
ljmp
gs
sbb
out
repnz
cmp
mov
das
xchg
add
push
pop
push
inc
pushl
cmpsb
jl
cmp
mov
adc
test
insb
addb
repnz
cmpl
fs
inc
add
cmp
jmp
add
or
es
and
loop
repnz
jns
add
cmpsb
fxtract
pop
ret
mov
cwtl
pop
sub
lea
lock
add
push
jno
mov
pop
pop
arpl
movsb
clc
add
add
rorl
jne
int
pushf
or
popf
push
lcall
inc
loop
clc
mov
or
in
jno
pop
cmc
cwtl
je
and
xor
test
mov
xchg
dec
lahf
or
inc
xchg
nop
xor
xor
jnp
and
sub
xchg
pushf
or
sub
and
or
dec
sbb
inc
push
in
loope
aas
addr16
xchg
push
xchg
enter
fistl
push
addb
hlt
insb
mov
pusha
and
pop
cmp
mov
adc
add
shll
cmp
cwtl
add
imul
loopne
jbe
push
cmpsb
add
lock
test
cmp
fistl
test
and
pop
xchg
xchg
xor
cmp
aas
mov
mov
jg
subb
out
add
lods
icebp
sub
add
add
jae
mov
cmpsl
add
std
lds
push
sub
xchg
out
add
jne
dec
and
add
mov
push
sar
adc
call
cmc
push
dec
adc
jnp
stos
enter
pop
or
into
inc
fdivr
push
sub
lcall
and
sub
pop
mov
xor
in
jl
jne
cs
push
aas
enter
ret
iret
adc
dec
shll
xchg
sub
repnz
mov
fisttps
add
pop
andl
pusha
mov
xchg
sub
data16
mov
int3
mov
mov
iret
sub
cmp
or
ja
mov
fwait
sub
add
jb
mov
and
adc
je
and
mov
add
mov
mov
xchg
dec
dec
pop
mov
add
add
scas
and
add
pop
fwait
in
repz
jne
shl
movsb
or
cmp
inc
or
jbe
push
sbb
push
jge
fiadds
pop
cld
jecxz
dec
pop
loope
mov
out
hlt
fcmovu
or
aam
sub
mov
fbstp
gs
scas
test
push
imul
out
and
enter
movsl
dec
gs
es
push
dec
add
mov
pop
push
movsb
pop
rolb
add
aad
inc
dec
arpl
ss
mov
sbb
xchg
pop
fldcw
cltd
dec
inc
ja
outsb
hlt
add
sub
and
dec
aaa
add
or
jl
mov
cmpsb
dec
push
mov
sub
test
jne
xchg
je
push
adc
out
add
jp
add
das
shl
out
add
pop
mov
stos
jne
cmp
jge
push
xor
jge
in
or
mov
jo
jno
pusha
xlat
add
cmc
push
mov
sbb
mov
cmp
cmpsb
pop
cmpsl
rcrl
xchg
movsb
add
mov
add
iret
inc
jb
pop
mov
mov
dec
dec
stc
add
jmp
shr
xchg
fdivl
fwait
lock
into
inc
cld
popa
repz
cli
inc
inc
scas
sub
jae
pop
in
orl
das
lods
pop
add
pop
add
sbb
mov
mov
mov
jg
daa
add
sub
sbb
jnp
leave
or
imul
push
loope
pop
add
loop
leave
and
sub
ds
dec
mov
or
pop
lock
push
jae
add
mov
xor
mov
mov
and
adc
add
lcall
add
shl
cvtdq2ps
mov
add
addl
insb
add
in
or
shr
pop
mov
loopne
imul
sti
adc
push
es
rorl
push
in
cmp
push
mov
movsl
push
fimull
and
loopne
aaa
neg
das
add
out
loope
popf
arpl
xchg
adc
cwtl
xor
dec
fsubs
add
mov
xchg
in
add
mov
loope
loopne
or
fists
nop
cmp
popa
jae
add
pop
add
push
adc
mov
daa
dec
fisubrs
add
jmp
push
xor
imul
jo
dec
and
mov
clc
fcomps
cmp
sarl
sbb
lret
push
cmp
add
inc
pop
shlb
inc
xchg
cmp
test
dec
jp
push
mov
notb
pop
rorb
xor
push
jne
test
cmp
xor
inc
mov
enter
jmp
stc
das
cmp
in
andb
out
sar
nop
xor
cmc
mov
jmp
cmp
sub
mov
dec
es
xchg
je
pop
imul
mov
cmp
or
lds
imul
into
addl
dec
hlt
add
call
int
wbinvd
xor
aam
enter
dec
add
pop
mov
jo
pushf
push
push
push
push
sbb
add
sbb
test
mov
arpl
test
orl
add
mov
push
out
cmp
adc
fidivl
jle
fnstcw
sub
push
add
cmp
out
cmpsl
ljmp
jle
dec
mov
clc
add
sub
push
sbb
jns
and
push
daa
popa
loope
data16
sub
cmp
adc
in
out
mov
ret
lea
cmp
and
pushf
xchg
pop
js
roll
int3
xchg
loopne
test
add
mov
orl
jns
cmp
hlt
mov
outsb
out
dec
cmp
xor
adcb
and
mov
fiaddl
or
add
xchg
lret
iret
mov
push
and
out
test
popf
dec
stos
popa
ret
in
aam
inc
in
xchg
or
and
lret
adc
fstl
cmp
add
sbb
call
pop
test
out
sbbl
push
cmp
icebp
fidivs
add
xor
shll
jne
push
call
lret
push
mov
fiaddl
adc
xor
add
pop
in
into
fdivrl
fstps
int3
enter
add
pushf
add
or
jne
push
pusha
add
ljmp
add
xchg
add
add
out
jbe
aas
sti
cmp
das
add
and
lret
inc
xchg
pop
fiaddl
push
lods
jmp
adc
sahf
ds
push
add
dec
sbb
pop
sbb
or
cmp
add
or
rolb
lcall
addb
xlat
xor
call
rcll
add
cmp
jns
es
mov
adc
xor
mov
push
sub
add
push
movsl
add
xchg
push
cltd
sub
or
in
pusha
mov
mov
add
push
les
orb
hlt
cmp
inc
lods
sub
bnd
add
cmc
cmp
adc
pop
aad
add
cmp
add
push
jl
fs
out
filds
xor
loopne
jae
adc
fstpl
mov
sbbb
xor
lret
dec
jnp
sti
mov
lock
add
out
jle
mov
sbb
mov
pop
sarb
add
repnz
sub
es
pop
lcall
out
fnstcw
sbbb
add
mov
pop
xchg
and
js
add
mov
or
imul
dec
lcall
xchg
and
add
movaps
aas
add
shll
sub
fldt
into
add
adc
push
dec
ret
rolb
sbb
imul
and
xchg
add
out
or
rcll
mov
rcl
cmpl
ja
fsubl
inc
xor
push
inc
out
dec
mov
inc
jl
mov
aad
cmp
add
in
push
push
dec
leave
pop
in
or
aam
nop
sub
decl
dec
mov
and
and
iret
lea
inc
out
shrl
add
ret
add
fidivs
pandn
add
sub
in
aad
jbe
jl
pop
flds
shll
cmp
and
imulb
sub
pop
in
mov
scas
divb
ret
add
aas
xchg
das
cmp
divl
add
sbb
pop
adc
ss
and
add
xadd
into
lahf
cmp
jle
add
std
cmp
call
imul
movsl
lock
es
cld
pop
dec
out
add
inc
sahf
add
in
xor
pushf
hlt
sub
lock
loope
mov
lahf
and
stos
add
xor
add
ds
dec
rcll
fmuls
mov
sbb
sub
adc
bound
push
adc
add
inc
cmpsl
or
fmull
addl
add
movsb
cmp
sbb
adc
and
orl
sbbb
out
call
cmp
data16
cmp
cmp
adc
add
sub
loopne
subb
push
or
xchg
pop
push
fsubs
in
xchg
pop
test
xorl
jg
adc
xor
add
pusha
test
fadd
mov
xchg
push
or
add
dec
cmpsb
icebp
int3
mov
pop
ja
jo
repz
popa
add
loope
sbb
mov
nop
xchg
int3
mov
or
cmp
pusha
cli
dec
cmc
js
push
jge
pushf
cmp
in
insb
cli
inc
jle
pusha
stos
add
frstor
lcall
roll
out
js
cmp
lea
int3
adc
sub
or
push
fdivr
andl
js
jb
loopne
mov
add
out
fadd
inc
std
pop
cmp
outsb
loop
jg
call
jae
pop
es
int3
and
sub
adc
jno
shll
push
push
ds
mov
mov
xor
xorl
roll
mov
mov
mov
dec
jno
sub
mov
inc
xchg
pop
xor
sahf
cs
push
ss
or
jb
and
xor
shlb
loop
sub
jl
mov
mov
ja
jmp
xchg
mov
into
enter
stos
push
cmp
pop
loope
lret
sarb
popa
xor
icebp
pop
dec
pushf
je
pusha
ret
and
scas
dec
out
push
push
jne
adcb
cmp
mov
jo
das
add
test
jns
js
mov
lods
ljmp
addr16
into
rolb
stos
fwait
dec
mov
mov
mov
sar
mov
orb
in
in
aam
gs
fxch
jecxz
jle
adc
pcmpgtb
cwtl
push
inc
cmpsl
iret
lahf
lds
xchg
data16
cmpb
stos
mul
mov
sbb
or
xor
divb
cltd
add
xchg
movsb
dec
inc
lret
or
sbb
inc
or
loop
rol
incb
push
in
xchg
insl
lock
repnz
iret
pusha
push
xor
jl
sbb
adc
pop
jp
rorl
adc
shlb
pop
jp
movb
rcl
dec
in
jae
add
xchg
or
mov
js
xchg
or
and
inc
inc
inc
mov
jnp
cmp
fwait
in
fs
jo
add
xchg
imul
jl
lock
jo
or
mov
push
inc
mov
movsl
cwtl
or
idivl
mov
out
fcoml
add
dec
aam
iret
jo
pop
icebp
push
inc
fistpll
mov
iret
testl
aad
push
pusha
add
jne
pop
jb
call
mov
jmp
popf
ljmp
mov
add
sbb
clc
out
add
cld
cmpsb
add
and
lds
inc
push
lret
test
dec
push
inc
add
call
out
in
sbb
sub
negb
push
xchg
add
push
add
fistpll
dec
imul
mov
clc
cmp
aaa
cmp
insl
jl
mov
add
sbb
addb
test
loopne
mov
sbb
call
shl
inc
cmpsl
mov
inc
iret
sti
mov
je
dec
xor
pop
iret
pop
adc
xchg
xor
insl
xor
inc
add
pop
movsl
xor
add
test
insb
out
sbb
ljmp
shll
aaa
cmp
cmpsb
dec
pusha
pop
jo
fs
test
or
cmpl
push
nop
inc
push
in
pop
xor
inc
dec
cmp
out
push
mov
push
cmp
sbb
sub
fists
sti
loope
flds
xor
shlb
lcall
leave
shr
int3
out
mov
test
push
fsubs
mov
add
test
hlt
mov
push
xor
cmc
add
and
int3
pop
in
dec
push
pop
enter
fwait
cmpsb
cld
or
es
jne
add
xor
mov
and
rclb
rcrb
sub
sbb
mov
mov
sbb
shll
mov
in
sub
add
pop
add
cmp
adc
pop
enter
jle
adc
shrb
add
cltd
mov
add
rep
test
enter
and
mov
ret
add
pop
jge
xchg
ljmp
cmp
jle
xchg
lcall
or
xor
push
push
fistpll
push
cmp
add
jecxz
or
movsb
and
movsb
inc
das
adc
or
iret
and
add
xchg
cltd
adc
add
push
or
mov
ljmp
or
inc
imul
lret
mov
sbb
dec
arpl
xchg
mov
add
hlt
faddl
loopne
rolb
sub
outsb
inc
into
xorb
call
stc
lret
jbe
jle
push
sbb
mov
xor
adc
cs
pop
xchg
out
stos
cs
movsb
sbb
sahf
fs
mov
test
inc
adc
iret
jmp
or
push
outsl
out
out
mov
xor
shrb
notl
xchg
cmp
fmuls
lcall
xchg
lods
pop
nop
dec
incb
lret
cs
je
and
shrb
sbb
dec
sti
xor
xor
and
push
inc
xor
lret
cwtl
pusha
add
mov
sbb
add
lock
imul
xchg
insb
pop
enter
xchg
ljmp
add
shll
jmp
es
int3
jbe
rorl
js
add
shlb
hlt
xor
lret
cwtl
pop
imul
inc
sbb
sbb
xchg
sub
sahf
or
test
push
add
push
cmp
sub
jo
daa
or
jecxz
hlt
sub
test
dec
sub
int3
mov
pop
dec
out
sbb
arpl
test
out
fadds
mov
xor
and
mov
lods
pusha
fwait
jns
pop
imul
popa
xor
sub
mov
lret
frstor
or
mov
add
push
mov
imul
cmc
cmpb
fsts
mov
mov
or
xor
ror
and
ficomps
mov
lret
sub
push
call
dec
mov
leave
inc
shrb
push
fwait
lods
mov
push
sub
pop
add
add
and
add
cmp
arpl
pop
or
add
mov
pop
jo
cmp
xchg
pop
aaa
mov
hlt
xchg
cli
cmp
push
jno
adc
and
jae
sarb
ljmp
or
sub
add
xor
ds
sub
test
push
push
nop
xchg
ds
ret
rorl
outsl
and
push
xchg
add
or
sbb
inc
jmp
add
jne
dec
adc
ljmp
sbb
mov
push
imul
mov
jo
mov
or
lret
shr
push
arpl
mov
push
cld
cmp
or
negl
add
fistps
ja
or
xchg
loop
dec
cwtl
enter
xchg
popf
xchg
ds
aas
pop
outsb
add
add
pop
je
jp
push
add
add
sub
fstpt
xor
pop
add
mov
sbb
and
xchg
test
outsl
cltd
mov
shrb
push
sub
and
push
add
pop
dec
sbb
ljmp
daa
mov
ret
and
addr16
sub
jg
movl
mov
sbb
orb
shlb
add
add
jl
inc
mov
push
lods
imul
mov
jg
orl
and
xor
mov
insl
inc
push
test
ret
stc
pop
pop
sbb
xor
loope
ss
mov
adc
inc
fadds
mov
mov
icebp
iret
xor
filds
into
das
aam
and
push
fwait
sub
movsb
push
add
xchg
test
or
push
fcoml
in
add
sti
cmpsb
ret
lcall
addr16
or
lods
mov
pushf
adc
jg
fstpt
pop
call
nop
add
jns
sub
movsb
call
sub
add
and
mov
enter
lods
add
mov
and
mov
pop
pusha
pop
add
std
enter
in
sbb
jno
imul
sbb
mov
push
adc
xor
test
jbe
mov
aas
cwtl
insb
dec
lahf
sbb
fadds
and
xchg
xorps
and
pushf
stos
jae
cwtl
or
jb
xor
bound
les
fiaddl
and
jge
dec
dec
inc
cwtl
push
push
in
movsb
imul
test
or
sub
mov
sub
cwtl
mov
add
or
clc
and
out
stc
out
out
shrb
out
sbb
das
pushf
faddl
mov
pop
test
loopne
pinsrw
sarl
jno
xor
sbb
cwtl
pop
jns
pop
nop
xchg
add
aas
insb
mov
sub
and
pushf
adc
daa
or
jmp
xor
mov
push
sbb
push
push
xchg
add
mov
or
cmp
and
xchg
shlb
inc
ds
test
lret
shrb
pop
xchg
mov
jp
mov
adc
mov
sub
lret
js
jecxz
repnz
lods
cmp
xor
bound
orl
xor
or
fsubl
sbb
arpl
enter
xchg
insb
dec
ret
jb
cmp
or
inc
mov
add
pop
outsl
jg
pushf
and
xlat
addr16
mov
lret
dec
hlt
jecxz
sbb
push
sub
push
push
xor
xor
push
adc
push
imul
test
cli
gs
mov
sub
loopne
cmc
loop
xchg
mov
sub
xchg
or
fs
and
xlat
imul
lret
pop
add
cmpsb
in
adc
and
inc
inc
mov
loopne
aas
je
pop
in
pop
fcompl
inc
insb
add
and
xchg
addr16
lods
dec
push
ljmp
add
pop
sub
push
mov
int3
mov
mov
in
popa
cwtl
xchg
repz
pop
mov
mov
loopne
pop
shlb
mov
aaa
test
icebp
sub
push
mov
lods
das
mov
and
or
or
lods
jg
jle
xor
jb
xor
fs
pop
repnz
pop
in
es
mov
rcll
inc
fs
mov
and
push
addb
subb
mov
fs
movsb
ja
es
mov
outsb
add
iret
xorl
out
pop
mov
pop
xchg
cmpsl
in
adc
or
shlb
rclb
inc
push
and
sbb
test
ds
pop
adcl
adc
mov
push
ja
dec
mov
inc
push
xchg
out
imul
add
pushf
sbb
mov
jbe
lcall
dec
icebp
repz
add
mov
or
cmp
pushf
adc
cmp
mov
cmp
fcoms
fadds
das
cld
enter
mov
xor
add
or
cmp
pusha
inc
mov
inc
lods
mov
nop
add
pop
inc
pushf
cmp
jno
xchg
mov
sub
jl
sbb
sub
push
jmp
imul
lret
aad
gs
cli
subb
add
pop
iret
cmp
push
mov
mov
xchg
daa
jecxz
pop
xchg
mov
lahf
add
add
or
sub
add
and
subl
subl
aad
add
test
dec
inc
push
add
mov
jecxz
or
jl
and
mov
addb
decb
pop
out
sbb
repz
sbb
pusha
push
stc
mov
cmp
xor
out
js
sbbb
shlb
add
aas
or
and
test
push
cld
add
xor
and
test
sub
add
pop
inc
add
out
imul
and
mov
std
add
push
add
add
cmp
jmp
adcb
adc
or
shlb
and
xchg
or
sub
adc
pop
imul
dec
xor
pop
sbb
mov
xor
sub
test
adc
xchg
jno
mov
gs
movsb
or
add
popa
push
mov
jo
mov
mov
call
xchg
adc
jno
imul
xchg
cmp
and
mov
sub
and
adcb
push
movl
rcll
cli
add
and
xchg
add
fadds
rolb
xchg
push
filds
mov
inc
push
jmp
inc
mov
daa
adc
data16
out
sbb
bound
loopne
jbe
or
cmpsb
xchg
mov
add
xor
mov
mov
add
fisttps
loopne
enter
jne
add
subb
and
in
iret
mov
cmp
hlt
add
icebp
add
mov
add
push
aad
sbb
in
into
call
sbb
nop
or
mov
sbb
jbe
pop
xor
cmpb
js
or
lds
inc
out
pop
sub
mov
sbb
nop
les
or
setp
mov
xchg
fidivrl
and
inc
imul
xchg
int3
add
sub
filds
rolb
sarb
and
cs
xchg
lahf
call
dec
jg
mov
jne
addl
mov
loope
push
jl
add
push
sahf
adc
add
aam
mov
jmp
mov
std
push
mov
sub
push
sbb
lret
fcmovnu
mov
dec
mov
out
mov
lret
pop
cltd
ss
xor
pusha
pop
fstpl
push
xor
sbb
jo
dec
sbb
inc
rol
pop
dec
dec
out
cmpsb
nop
add
adc
adc
xor
lock
aas
insb
movsb
js
fcomps
jle
mov
mov
cmpsb
xor
jnp
icebp
xchg
add
add
jne
sub
sub
or
cmp
shl
pop
pminsw
add
push
pop
fbld
fisttpll
xor
inc
movsl
pop
subb
sbb
loope
pop
and
pop
addb
dec
xchg
and
mov
dec
xchg
xor
imul
shrl
loopne
das
or
mov
xor
adc
popa
and
xor
fsqrt
ja
sbb
imul
add
scas
sub
mov
hlt
fs
test
add
dec
push
and
ret
add
xchg
andl
jae
data16
inc
mov
mov
mov
andb
lcall
mov
push
loope
xchg
lods
add
mov
pop
mov
xor
insb
out
adc
arpl
in
cld
add
mov
fs
adc
sub
aam
repz
les
push
ja
jns
dec
jge
cmp
mov
rcl
cmpsl
call
std
xchg
orl
xor
shrb
cmp
push
pop
outsl
cmp
imul
data16
je
adcl
ss
jae
sub
mov
and
add
ret
add
roll
mov
xor
lods
loopne
pop
insl
mov
inc
adc
push
add
push
sahf
pop
neg
nop
or
iret
pop
jbe
xchg
sbb
jo
call
xor
sub
dec
lods
add
dec
xor
loopne
lret
test
fdivp
dec
gs
ds
les
mov
fisttpll
out
dec
scas
cmp
adc
repnz
js
adc
and
cs
xor
outsb
pop
insl
sahf
mov
jg
dec
fdivl
inc
xchg
fistpll
adc
adc
imulb
jecxz
fidivs
fbstp
scas
flds
fwait
xchg
inc
insl
inc
popl
test
adc
jo
fcmovnb
pop
sbb
sbb
or
push
adc
out
sbb
call
jmp
adc
pop
jne
push
sub
cmp
dec
sahf
mov
mov
inc
jecxz
leave
lea
pop
mov
out
add
sub
cli
and
dec
or
pushf
cmpsl
xchg
shlb
dec
addr16
das
or
add
add
not
xchg
add
xchg
sbb
loop
jbe
add
inc
outsl
cmp
mov
inc
cmp
or
jns
dec
mov
jbe
in
sub
ret
cvtpi2ps
cmp
push
xchg
push
js
add
sbb
mov
lods
pop
dec
cmp
mov
or
rolb
pusha
stos
dec
loope
cmp
xorl
notl
ret
mov
add
fisubl
cmp
jno
or
jmp
fdivrp
repnz
push
rcl
in
dec
sbb
cmp
xchg
lock
enter
add
inc
dec
gs
and
mov
mov
or
sbb
pop
xchg
xor
and
or
inc
clc
je
lods
and
add
sbb
repnz
jbe
sub
push
xor
bound
push
fs
sbb
insl
adc
add
xor
inc
lahf
jecxz
and
add
enter
push
pop
dec
add
mov
push
add
lods
test
pop
sbb
pop
push
popa
add
jmp
add
adc
lea
movsb
add
push
cmpsb
add
lods
sbb
pop
movsb
adc
push
cmpsl
test
ds
and
test
add
sub
add
xchg
lods
pop
mov
orb
mov
nop
fs
das
and
add
insl
sbb
arpl
cwtl
lcall
push
negl
je
adc
sub
cwtl
inc
jmp
addr16
mov
cmp
xor
sub
lock
mov
pusha
movsb
pusha
shll
xchg
and
sub
sbb
inc
mov
mov
loopne
mov
les
jl
sbb
push
hlt
roll
pop
in
and
xchg
int
add
cmpsb
mov
in
jns
xchg
jo
out
jbe
add
fldcw
add
push
or
adc
add
cmpsl
sarb
jae
add
xor
fimuls
or
and
repnz
push
pop
cmpb
adc
xchg
pop
out
cmpsl
jnp
mov
sahf
iret
addb
cld
mov
mov
outsb
lds
inc
dec
push
sbb
xorb
add
icebp
sub
add
lret
and
enter
adc
sub
call
in
sub
add
mov
push
add
adc
jb
inc
lods
pop
setnp
push
sbb
add
dec
mov
jge
pop
xor
pop
pop
push
loope
rcll
in
push
inc
sub
or
push
mov
inc
cmp
mov
fsubr
daa
addl
xchg
mov
or
xor
mov
xchg
jmp
mov
shlb
scas
and
adc
and
mov
push
or
cmp
mov
dec
adc
push
add
imul
out
or
out
jno
sbb
xchg
jecxz
jb
add
lds
fsubrs
stos
in
fwait
cltd
imul
repz
fdivr
rcrl
jle
fldt
stc
les
insb
mov
es
pop
mov
jl
scas
fs
jge
and
inc
testl
lea
cmp
stos
sub
xor
cmp
jb
add
push
jmp
xchg
les
xor
roll
sbbb
cmpsb
jl
push
push
cltd
pop
push
in
add
shr
push
add
push
cmp
out
loop
loope
inc
call
enter
and
push
mov
dec
loopne
mov
dec
lret
mov
dec
jns
cs
add
or
mov
dec
dec
call
push
cmp
push
add
push
out
and
xchg
ss
mov
jae
push
add
aam
pop
inc
pushf
sbb
inc
mov
movl
sbb
arpl
adc
mov
push
add
sub
aad
cmp
in
push
repnz
flds
mov
jb
xchg
add
xchg
lods
xchg
test
je
jbe
add
dec
or
mov
vpshufhw
popa
pop
inc
xor
shrl
cmp
and
jl
add
loopne
xor
fs
adc
sbb
sub
cld
nop
andb
or
add
stos
js
cwtl
xor
sbb
pop
push
mov
add
inc
das
adc
sbb
mulb
adc
mov
add
clc
aam
mov
pop
aaa
add
mov
mov
cmp
call
out
add
mov
fiaddl
mov
jb
add
rolb
ljmp
shrb
stc
rcrl
int3
mov
push
dec
mov
push
popa
or
cmovle
push
push
inc
pop
shlb
add
test
aad
sub
or
jecxz
or
xlat
stos
mov
shll
pushf
add
mov
test
enter
add
int
scas
xchg
pop
dec
jne
add
cmpsb
or
nop
inc
add
ret
sub
jge
cmp
push
jnp
insl
mov
imul
dec
add
mov
add
adc
add
insl
js
in
add
mov
inc
imul
add
adc
jecxz
orb
push
call
inc
pop
push
scas
sub
xlat
sbb
sub
cmp
int3
rcll
loope
je
out
xchg
jg
hlt
fldenv
xor
mov
dec
lret
add
add
xlat
cmp
addb
popf
aaa
pmaddwd
xor
pop
cmp
xchg
cmpsb
repz
mov
ret
sub
mov
arpl
inc
fisubrl
add
cmpsb
bound
xchg
push
rolb
jno
dec
fwait
inc
into
ljmp
pop
in
movsb
add
arpl
aad
lods
push
add
lcall
pop
in
jge
fimuls
lret
mov
sar
and
xchg
sti
loope
inc
in
add
in
dec
sub
dec
repnz
sahf
sub
jle
addr16
pop
fs
add
lds
xchg
add
cmp
or
shrb
lcall
xor
inc
add
xchg
clc
pop
xchg
push
int3
mov
cmp
pusha
inc
push
or
sub
add
out
dec
test
mov
fidivrl
and
jbe
add
jmp
loope
add
popa
popf
out
enter
mov
imul
mov
push
inc
jb
sti
jge
pop
xchg
dec
push
add
push
adc
cmc
in
call
push
nopl
ret
push
addr16
mov
xchg
pop
add
es
mov
jbe
add
dec
icebp
lods
popf
clc
push
sbb
insb
int
or
add
inc
mov
lock
adc
add
adcl
loop
add
fstpl
sub
sbb
mov
pop
mov
pop
lcall
mov
add
pop
mov
sbb
mov
mov
sti
nop
clc
stos
pop
in
adc
hlt
or
lret
fidivl
cmpl
das
shrl
sub
add
inc
sbb
rclb
pop
test
nop
push
add
jle
insl
sub
dec
add
inc
sub
and
das
push
adc
and
push
or
push
ja
add
fldcw
in
add
in
push
mov
sbb
imul
mov
sbb
scas
add
sub
mov
add
jne
jb
or
add
add
xor
fwait
test
xchg
xor
add
in
mov
add
pop
push
xchg
sbb
sbb
lock
pop
add
jmp
out
fldl
or
xor
rol
add
shlb
add
pop
lahf
and
jae
repnz
push
pop
pop
test
xor
inc
test
ret
repnz
out
and
xor
push
and
sbb
jo
mov
or
sub
mov
std
mov
incl
int
adc
xor
ret
mov
adc
ss
fsub
adc
adc
and
inc
adc
adcl
sub
push
push
adc
ss
out
and
or
jo
gs
add
cmp
jo
mov
add
dec
icebp
lea
or
xchg
or
mov
dec
pop
push
cli
push
sub
arpl
pop
or
leave
sbb
fsub
fldt
xor
in
shlb
pop
pop
fs
mov
fucomp
xchg
sbb
imul
dec
int3
pcmpeqw
movb
leave
ret
das
mov
inc
cmpsl
add
add
adc
int3
movsb
mov
mov
lods
mov
xchg
jecxz
pop
or
test
dec
adc
test
push
rolb
imul
mov
pop
mov
popa
lock
cmp
xchg
movsd
ficoml
scas
ss
dec
jp
add
cmp
subb
jmp
mov
xchg
pop
lods
adc
sbb
in
add
or
add
sbb
test
sub
aaa
adc
mul
and
jl
mov
add
sub
jg
xor
dec
xor
adc
add
shl
add
mov
out
mov
mov
mov
sub
push
or
mov
aas
shrb
push
sahf
mov
cmpsl
outsl
roll
push
pop
sti
cmp
test
dec
xor
push
sub
mov
jecxz
sahf
jae
sbb
adc
cmp
add
inc
dec
xchg
dec
lret
add
out
stos
sbb
out
jo
xchg
es
or
sbb
jl
cmpsb
out
add
leave
pop
mov
adc
push
mov
xor
inc
sbb
je
add
data16
lds
cmp
xchg
out
mov
dec
xchg
mov
dec
cmp
rorb
push
mov
ret
movsb
pusha
cwtl
pop
add
xlat
pushf
jle
pop
int
adc
fcoml
rolb
inc
and
test
and
addr16
stos
dec
clc
cwtl
xor
sbb
jmp
and
sub
lock
add
mov
push
mov
inc
icebp
inc
lods
in
add
xchg
aam
jbe
push
push
mov
mov
call
nop
cwtl
jno
cmp
dec
dec
roll
pop
enter
fwait
add
div
push
pushf
mov
out
daa
jbe
and
and
rcrb
adc
cli
add
cltd
fistl
mov
mov
sbb
or
cmp
std
xchg
cs
dec
sahf
jnp
ja
ja
add
sbb
add
dec
or
add
repnz
add
xor
subl
xor
add
sub
int3
push
fwait
or
cmc
out
adc
xchg
cld
loope
add
popa
aas
je
inc
xor
cmp
sub
daa
rorb
mov
into
mov
jge
add
pop
pop
cmp
and
mov
pop
add
mov
mov
dec
cmp
or
cwtl
jo
push
cmp
sbb
dec
mov
add
mov
inc
ja
cmp
dec
xorb
sub
in
pop
xchg
lret
testl
popf
rcrl
cltd
ljmp
xor
fidivl
jg
cmp
sbb
add
sbb
mov
inc
cwtl
mov
loop
movsl
add
mov
sbb
ljmp
mov
into
aaa
adc
in
xor
and
xor
popa
or
jb
mov
mov
sub
cld
imul
dec
xchg
dec
add
lods
mov
movsb
movsl
int3
ss
pushf
add
aas
push
and
pop
das
cmp
testl
popf
and
inc
xchg
mov
call
add
xchg
push
test
xor
pop
push
scas
dec
add
sbb
jb
add
adc
test
repnz
movsb
popa
jmp
push
imul
sbb
mov
stos
pop
push
jnp
add
aam
mov
aas
in
mov
jo
adc
push
repz
sub
test
pop
xor
addr16
movb
add
mov
mov
jb
lock
mov
mov
or
sbb
add
mov
push
inc
lds
adc
mov
adc
fdiv
mov
fwait
inc
xor
ret
push
int
lods
mov
or
cmpsl
jmp
movsb
std
mov
clc
inc
add
add
jnp
inc
shrl
icebp
rcrb
iret
popa
je
sbb
popf
ja
and
shrl
jecxz
icebp
out
cwtl
add
ljmp
fdivs
sub
mov
es
cmpsl
add
data16
and
andnps
mov
loopne
ltr
xor
xchg
add
mov
and
pop
or
mov
lods
dec
icebp
add
jge
or
sub
mov
iret
cmp
pop
add
lods
sub
jbe
andb
add
mov
adc
sub
mov
filds
mov
lahf
push
jo
mov
cmpl
fmuls
cwtl
pop
pop
addl
and
xchg
insl
add
ds
mov
hlt
ret
push
xchg
inc
mov
sub
in
cmp
movsb
leave
pop
adc
rclb
jne
add
clc
or
mov
sbb
xchg
fbld
shrb
roll
ljmp
sub
sbb
jno
mov
mov
pop
std
js
cltd
cmc
in
cmpl
inc
hlt
rcr
xor
jecxz
popf
xorl
jnp
fwait
sti
in
cmp
pop
fcomps
mov
enter
mov
loopne
test
xor
add
push
fnstcw
xor
sbb
int
add
data16
add
shlb
jl
inc
add
popa
loope
cmp
mov
inc
sbb
and
ficompl
mov
pop
iret
push
sbb
loopne
mov
xchg
cmp
xchg
arpl
add
fs
add
scas
lds
pop
mov
mov
cltd
xchg
lock
mov
popf
mov
mov
fnstenv
cli
and
or
pop
aam
add
push
enter
mov
xchg
popf
sbb
inc
inc
idiv
adc
add
stc
scas
in
add
xchg
add
stos
sub
adc
sbb
ja
mov
shl
jmp
and
mov
out
mov
mov
xchg
mov
imul
mov
xchg
mov
push
add
dec
mov
push
jno
add
enter
cli
or
push
cs
xchg
roll
js
push
mov
aam
xchg
ss
shlb
or
pushf
mov
mov
push
incb
jns
mov
push
jae
pop
cmpsb
lcall
lret
call
mov
add
ljmp
add
push
pop
cmp
add
dec
pusha
insb
add
jnp
addb
jae
jno
sahf
outsl
dec
jl
loopne
add
push
mov
mov
xchg
loopne
ja
jne
mov
dec
push
jmp
inc
adc
push
and
das
add
ja
fcoml
push
pop
mov
mov
jge
pop
xchg
jmp
cwtl
adc
test
inc
xlat
adc
cmc
call
sbb
mov
mov
and
clc
out
pop
sub
or
fbld
cmovns
fiadds
dec
lock
mov
pop
add
xor
cld
lahf
sub
icebp
and
add
sbb
add
cmp
shll
or
pop
call
add
adc
lret
xor
popf
push
iret
dec
es
loop
pop
pop
mov
pop
or
inc
push
daa
sbb
cmpb
add
push
add
fstps
add
rorl
mov
add
fnstcw
pusha
mov
repnz
pop
or
popf
mov
lret
add
push
xor
xchg
inc
lds
pop
sbb
xchg
lock
pop
test
ficompl
aas
pusha
add
pop
mov
int
std
xchg
mov
jl
cwtl
mov
adc
push
add
sub
mov
mov
and
mov
in
pusha
xchg
js
xor
nop
test
cmc
ror
xor
adc
repz
adc
or
xor
aad
inc
add
enter
das
out
inc
dec
out
leave
mov
out
xlat
cmp
pop
mov
push
xor
inc
ja
mov
lahf
lock
flds
dec
mov
xorb
mov
pop
jnp
xor
xor
pop
pop
jle
movntq
aad
addb
sub
add
cmp
rolb
insl
mov
mov
mov
repnz
cmc
pop
test
push
stc
movsb
add
mov
cmp
jo
xor
cmp
shl
jno
jle
test
movsb
sub
or
rclb
jne
add
stos
rcr
cmpsl
fisttpl
mov
sti
push
inc
imul
push
cmp
in
cli
pop
lahf
add
jne
int
je
cltd
add
mov
pop
dec
mov
fldcw
aaa
jne
nop
add
mov
inc
push
add
push
popf
mov
aas
xchg
fwait
inc
mov
lock
inc
add
in
inc
push
test
scas
mov
fiaddl
loopne
xor
cwtl
out
out
add
movsl
fwait
cld
rorb
adc
push
pop
mov
mov
dec
popa
mov
jmp
push
mov
sbb
add
cmp
pop
add
sub
jne
test
sub
xchg
mov
mov
and
xor
push
mov
add
cli
repz
mov
dec
xlat
add
cmpsl
sbb
test
fistps
cmp
pusha
call
push
mov
pop
ljmp
rorl
in
subw
fdivs
jbe
lahf
lods
fwait
mov
lret
add
and
test
add
and
insb
mov
dec
or
lds
jbe
add
test
fwait
std
mov
aam
test
xchg
inc
cld
xchg
loop
add
testl
add
lret
ret
xor
fisttpl
cli
pop
add
jmp
mov
test
push
in
add
cmp
mov
outsl
loopne
cmp
adcb
addl
mov
sbb
imull
cmp
jae
popf
lret
jb
scas
mov
test
fnstcw
nop
add
sbb
loop
sbb
stos
xchg
pop
stos
aad
pop
mov
mov
inc
into
add
stos
sbb
in
lock
js
push
xchg
scas
inc
into
pop
outsl
and
add
addr16
and
jecxz
cmp
data16
cmp
mov
into
cmp
cld
add
push
test
inc
push
add
or
mov
xor
clc
inc
adc
mov
xchg
add
xor
mov
sbb
pop
in
shrb
cmp
push
loope
cmp
add
test
add
xchg
cmp
fiaddl
arpl
dec
xor
add
mov
adc
ljmp
nopl
xchg
cs
cmp
pop
call
pop
and
daa
add
mov
dec
cmp
cmp
dec
jle
inc
add
scas
add
int
pop
dec
inc
fisubs
movsb
fmuls
jns
add
es
enter
push
pop
stos
mov
jnp
or
pop
push
fdivrl
and
jge
sub
enter
mov
icebp
daa
jae
mov
adc
test
out
cmpsl
or
and
sub
bound
lods
inc
add
pop
mov
or
movsb
add
mov
sub
cmp
or
sbb
lea
mov
mov
add
outsl
jo
xor
add
xchg
inc
or
jecxz
nop
rolb
push
mov
lds
push
fcomip
add
and
test
cld
ja
add
pusha
adc
mov
pop
sbb
enter
xchg
stc
sbb
dec
add
pop
arpl
cmpsl
loope
insl
call
and
add
outsb
pusha
push
loopne
and
add
add
imul
movsb
mov
cmpsl
xchg
ror
adc
add
and
fmul
pop
adc
push
into
mov
add
pusha
mov
cmpsl
int
push
jbe,pt
xorl
pusha
mov
das
add
pop
or
add
cmpsl
nop
loop
sub
jne
push
push
xchg
rclb
add
sub
clc
cmp
add
aaa
add
subb
and
pop
mov
cmp
das
xor
cli
jmp
insl
cwtl
jle
xchg
push
xor
cmp
mov
sbb
inc
fs
out
inc
add
sbb
mov
pop
jg
xchg
call
enter
add
mov
jne
sub
popf
push
push
fmull
cltd
add
xchg
int
add
nop
adc
mov
fmull
add
pushf
add
sbb
clc
xlat
adc
or
fisubl
ret
cmp
push
sub
mov
jmp
fs
rorl
sbb
sbb
mov
xlat
or
push
pushf
mov
cld
dec
mov
pop
jo
sbb
cld
dec
stos
into
loop
add
jb
xchg
movsl
in
loopne
push
inc
fucomip
cmp
inc
inc
stc
xor
rcrb
rolb
push
add
fiadds
add
push
daa
push
mov
add
ljmp
add
adc
or
push
cmp
loopne
add
mov
and
adcb
std
push
daa
mov
sbb
rolb
int3
mov
add
aad
xor
mov
jnp
roll
pop
inc
mov
rcrb
in
sub
add
shll
add
xchg
scas
scas
testb
sbb
andl
add
in
cld
adc
adc
aas
xor
jo
enter
push
inc
push
lcall
mov
add
pop
movsl
push
add
sub
rcl
cmp
or
jb,pt
and
insb
xchg
or
add
or
cmp
ljmp
sbbb
cmp
sbb
ds
and
roll
sahf
pushf
jnp
add
dec
lock
mov
popa
cmp
mov
add
push
mov
jnp
add
fnstsw
or
dec
insb
add
adc
mov
notl
cmc
loopne
fsubrl
lret
or
out
jecxz
add
lahf
sbb
dec
in
xchg
add
pop
dec
mov
out
inc
lret
add
stos
pusha
add
jmp
fcmovne
pop
dec
inc
shll
mov
fxam
aam
fiaddl
outsb
ds
insl
adc
mov
loopne
sbb
jg
cmp
add
in
mov
push
add
cmc
dec
test
gs
mov
mulb
cmpsl
xchg
jmp
lds
mov
pop
xchg
pop
lea
pop
insb
inc
inc
inc
mov
pop
add
push
dec
lock
aas
gs
inc
fsubs
mov
cmc
mov
adc
jmp
incl
scas
faddl
xor
adc
jns
cmp
enter
add
leave
lret
add
adc
add
ljmp
add
or
jne
mov
inc
sbb
fldl
cmpsl
mul
int3
ljmp
mov
call
xor
cwtl
push
xchg
scas
and
inc
jne
add
mov
loopnew
xor
sbb
jmp
shrb
inc
sti
es
or
add
jnp
div
inc
push
hlt
cmpsb
ret
repnz
lahf
in
enter
push
mov
ss
ljmp
lods
rorb
cwtl
sub
out
add
adc
xchg
ret
faddl
jne
adc
add
xchg
repnz
incb
push
jp
lcall
add
jmp
add
fistpl
pop
xchg
push
add
cltd
or
xchg
call
hlt
mov
lret
aam
add
stc
xchg
ljmp
push
rcr
pop
mov
movsb
jle
inc
and
add
les
stos
outsb
xor
add
and
addr16
fwait
add
add
mov
std
and
inc
jae
loop
mov
aas
add
sarl
adc
jne
add
daa
mov
in
pop
lock
jg
data16
repnz
add
cmpsb
pushf
stos
jp
inc
popf
add
inc
push
push
sbb
mov
add
outsl
mov
jne
pop
mov
add
addr16
xor
xchg
fsubrs
mov
dec
call
inc
xchg
add
lcall
int
add
xchg
add
out
ja
pop
inc
pop
flds
aad
aam
stos
mov
jnp
cmp
inc
add
sbb
jg
xor
ret
hlt
sbb
inc
mov
jne
fimuls
imulb
cmpb
sbb
jns
sbbb
jge
xchg
fadds
aad
push
xchg
push
gs
or
mov
in
mov
push
adc
aam
add
into
test
push
push
stos
les
xchg
xchg
lock
push
sub
push
addb
add
lods
sub
add
mov
cmp
sbb
int
dec
gs
xlat
jge
lcall
dec
lahf
cltd
mov
test
sub
mov
xlat
lods
mov
lahf
shl
cli
mov
pusha
jns
jnp
or
add
add
rorb
ljmp
add
int3
pop
outsl
adc
add
mov
sahf
add
scas
pop
or
xchg
pop
adc
cli
fcmovne
sbb
xorb
inc
inc
out
pop
icebp
sbb
aas
nop
imul
std
add
loope
dec
add
out
push
mov
nop
xchg
jo
xor
push
in
jns
aaa
ret
push
lahf
add
imul
and
or
insl
mov
mov
pushf
inc
sti
add
push
add
fbld
pop
scas
into
add
lret
sbb
sub
lods
out
and
ret
pop
sub
or
mov
xlat
add
pop
addb
iret
or
test
add
cmp
sbb
jmp
add
push
popa
sub
idivb
test
pop
jns
sbb
repz
pushl
add
hlt
xor
icebp
bound
xor
repnz
inc
outsl
cmp
lahf
pop
fcmovne
inc
divl
xlat
dec
inc
push
dec
loopne
and
jo
add
sub
cmp
mov
sbb
sub
inc
xchg
out
mov
mov
xor
fcompl
xlat
dec
inc
xorb
outsl
aaa
inc
in
repnz
add
xchg
xchg
outsb
or
out
jp
cs
or
movsb
sbb
lahf
aad
cs
sar
cmp
xchg
lret
idivb
mov
push
push
test
add
xchg
add
inc
fiaddl
jmp
movsb
pop
add
jge
out
push
mov
insl
ret
cmp
adcb
xor
fstpt
adc
call
cld
les
rolb
sti
add
in
roll
call
adc
fwait
mov
pop
xor
mov
hlt
mov
adc
xor
xchg
add
push
lods
fisubrl
push
es
scas
add
cmp
add
aas
and
pop
cwtl
jge
enter
mov
movsl
add
cmp
ljmp
test
gs
add
das
cmpsb
loopne
xor
dec
jl
jo
hlt
add
and
mov
lock
inc
test
cltd
or
in
add
cmp
bound
fiadds
jmp
push
adc
in
cmp
add
jmp
rcll
sbb
xchg
pop
cmp
mov
rorb
cmp
mov
lret
add
cmp
cmpsb
add
jecxz
lods
lock
push
fsubr
push
inc
push
pusha
cmp
notb
adc
loopne
jge
cs
pop
add
jae
xor
push
mov
and
and
sti
sbb
into
push
out
sub
fneni(8087
pop
jno
sbb
fisubs
dec
add
dec
out
shll
mov
inc
stc
add
inc
sub
icebp
adc
adc
hlt
push
add
movsl
push
inc
jl
mov
andl
adc
dec
ret
gs
add
jl
push
cwtl
jbe
scas
pop
pop
mov
adc
cld
ja
loope
aas
ret
shl
jb
outsl
adc
mov
addb
clc
in
and
movsb
mov
push
pop
add
mov
push
fisubrl
dec
add
pop
lahf
insl
clc
cmp
inc
push
shlb
call
mov
mov
imul
sti
xor
add
xchg
je
add
adc
add
popf
sbb
stos
in
mov
add
dec
test
dec
faddl
cld
mov
sarb
das
fs
adcb
add
lock
jne
xchg
out
addb
cmp
dec
adc
mov
add
mov
rcr
and
aas
jl
add
lgs
addb
aad
lock
inc
repnz
jae
rcrb
add
iret
add
aad
out
pop
fistpl
jmp
add
cmc
popf
xchg
testb
add
adc
fmull
sub
clc
and
movsl
add
repz
in
imul
bnd
test
mov
out
jmp
popl
pop
in
xor
cmpl
orb
add
adc
push
mov
and
fadd
and
sub
es
mov
movsl
jo
hlt
lock
mov
cmp
dec
sub
cmp
psadbw
jnp
ljmp
psubusb
jmp
adc
xchg
add
push
add
cltd
jle
jl
push
xchg
repnz
mov
pop
pop
push
add
popa
aaa
loop
push
mov
add
test
pop
pusha
mov
rolb
test
cmpsb
add
mov
jbe
jb
add
mov
jl
pop
enter
jp
cld
jns
out
add
mov
mov
aaa
sub
jo
mov
hlt
jno
fildl
jmp
push
xchg
inc
push
jnp
idiv
add
mov
and
mov
in
add
jg
push
xchg
js
add
xor
data16
add
mov
test
add
mov
fwait
add
lahf
pusha
sbb
add
enter
cltd
push
sbb
adc
clc
push
lods
adc
add
mov
xor
cmp
add
add
push
sub
mov
add
mov
push
xchg
mov
xchg
insl
arpl
sbb
add
and
xor
dec
add
cld
cwtl
adc
ds
leave
add
inc
sarl
add
popf
jge
push
ss
mov
push
nop
ud1
cld
sbb
add
scas
sbb
add
inc
sub
pusha
ljmp
pop
cmp
mov
les
and
clc
mov
sbb
cmpsb
mov
sbb
jnp
jle
add
fldt
shrl
nop
add
inc
loopne
sbb
dec
jns
xorb
ret
push
xchg
dec
add
aas
xor
pop
leave
bound
xchg
fsubl
mov
jmp
cli
lret
dec
mov
add
int
sub
lods
xchg
nop
jo
add
mov
jno
loope
push
sub
in
or
sbb
add
dec
jns
pop
into
or
sub
and
push
add
fdivrl
pop
testl
lods
gs
or
in
jb
add
inc
and
push
clc
pop
jl
clc
loopne
add
mov
sub
jecxz
into
lock
mov
push
cltd
rcll
cmp
xchg
sub
sbb
repz
fdivl
add
dec
aaa
cmp
int3
movsb
sub
outsb
ja
scas
sub
sbb
sbb
push
pushf
sarb
add
lds
iret
sbb
add
add
sub
cmc
das
dec
mov
jne
jo
outsb
adc
ret
gs
inc
nop
cwtl
xchg
add
mov
in
push
inc
pusha
add
cmp
fnstsw
push
and
rcrl
add
je
mov
add
and
ret
mov
dec
mov
shlb
pop
push
cmc
arpl
add
sub
mov
andl
shrl
std
lock
adc
jle
add
pop
add
sahf
cmpsl
xor
dec
adc
repz
movsl
clc
push
add
jl
and
daa
and
push
sub
push
scas
jge
sub
add
sub
rorl
pop
add
pop
fisttpll
pop
jnp
int
xor
mov
mov
pop
xor
dec
add
out
pop
mov
inc
or
push
adc
add
dec
xor
pusha
add
sbb
popa
fwait
add
mov
xor
movsb
adc
cmp
int
jne
adc
fstpt
sbb
shr
xchg
mov
repnz
into
icebp
pop
mov
pusha
add
push
test
pop
inc
pusha
pop
cli
cwtl
ja
add
inc
and
mov
sub
pop
in
bound
scas
das
hlt
lods
add
dec
dec
insl
jl
pop
aam
dec
sbb
sbb
add
pop
inc
lret
nop
cmp
add
test
ss
leave
pop
std
jnp
add
fists
das
es
mov
add
cltd
movsl
jmp
pop
enter
sbb
or
std
add
insb
mov
adcl
aas
push
and
mov
faddl
xor
cmp
flds
and
pop
lret
xchg
and
into
lock
outsl
cmpsl
incl
dec
icebp
mov
addl
inc
xor
xchg
and
mov
dec
popa
pop
xchg
xor
push
xor
mov
div
pop
loope
fldl
mov
add
rorb
cli
and
add
lret
jno
das
xchg
pop
in
imul
ss
xor
mov
jmp
xchg
daa
roll
push
pop
dec
fidivs
mov
xor
out
lods
in
inc
add
pushf
push
add
jmp
cld
lea
rcrb
and
mov
incb
add
sbb
stc
push
inc
ljmp
mov
xchg
sub
rolb
out
jno
xchg
mov
add
xchg
xor
aad
mov
jo
xor
inc
adc
rolb
mov
mov
gs
push
dec
sub
cmp
movsl
in
cmp
mov
repnz
or
fdivrl
add
jb
jbe
out
push
jmp
xor
rorb
adc
iret
xor
outsl
add
fprem
mov
pop
mov
push
js
dec
test
or
dec
addb
inc
adc
xchg
push
push
clc
adcl
notb
add
pop
add
loope
push
add
sub
push
cmpl
jns
add
jecxz
jmp
fidivl
push
icebp
or
xor
xchg
jnp
cmp
iret
adcb
push
dec
push
add
in
ret
add
orb
xchg
add
pop
es
outsb
sub
and
mov
add
inc
ret
out
decb
jnp
and
testb
dec
inc
into
aaa
pushw
mov
adc
inc
push
adcb
scas
int3
mov
and
mov
or
xor
ret
dec
bound
mov
pop
sub
add
outsb
or
enter
shll
faddl
out
pop
add
ficompl
xor
push
xchg
adcb
leave
cmpsl
adc
and
loopne
add
mov
lret
cmpsb
imul
mov
addb
lods
fadd
stos
enter
popa
add
jo
je
and
jle
divb
pop
int
imul
jno
fmuls
arpl
in
adc
xchg
into
and
leave
add
cmc
dec
cld
add
adc
sbb
mov
mov
popf
and
cmp
shll
icebp
or
cmp
addr16
movswl
mov
test
rolb
lods
je
repz
mov
shr
jo
push
add
ljmp
add
sbb
les
sahf
sti
add
xchg
cmpb
push
movsb
rcrl
out
pop
sub
xlat
lds
mov
or
pop
mov
and
mov
add
mov
inc
pop
in
cmovs
xor
jae
add
in
subb
mov
or
je
lcall
jo
add
clc
mov
add
sarb
add
or
loop
add
inc
jnp
push
ds
enter
movsb
andb
sbb
imulb
fdiv
xor
mov
push
in
mov
cmp
or
aaa
pop
add
popa
pop
ret
jle
dec
lea
add
jne
and
lahf
test
add
mov
jle
add
pop
int3
movsb
insb
add
add
pushf
add
jp
cmp
jo
cmp
sub
pop
pop
sbb
subb
imul
cmp
mov
mov
push
add
jno
inc
xor
dec
in
add
fmul
or
and
pushf
push
mov
mov
pshufw
add
adc
and
mov
sub
out
add
pop
scas
jb
fld1
push
sbb
lea
mov
sub
ss
mov
add
sbb
add
in
stos
push
mov
popf
out
sarb
or
pop
add
movsl
push
cmc
adc
push
cltd
add
ret
xorb
sub
cmpsl
or
add
movzbl
dec
bnd
pop
and
add
dec
fs
or
add
test
pop
cmp
lock
or
adc
sub
push
in
push
jl
sbb
notl
notb
add
std
adc
add
dec
loopne
cmp
scas
loopne
fscale
lret
push
add
add
pop
dec
xchg
into
push
or
out
push
call
sub
pop
fstl
pop
xor
rclb
test
sti
lret
and
mov
add
shlb
nop
pop
popa
inc
push
pop
add
ficoml
xor
xor
clc
add
inc
adc
push
adc
sub
bnd
push
lret
fsubl
ja
lock
pop
xchg
mov
dec
push
xchg
add
fists
mov
add
mov
es
shr
mov
add
imul
rcrl
jnp
add
jge
or
push
cs
jmp
daa
xchg
inc
fldl
call
cmpb
sbb
xchg
inc
aas
push
dec
add
add
dec
push
add
dec
inc
add
je
sub
cmc
add
xchg
clc
outsb
arpl
ljmp
jno
inc
movl
dec
fs
test
inc
add
lcall
cli
cmp
fmuls
mov
mov
and
fwait
jp
mul
ds
adc
inc
das
inc
daa
mov
enter
sets
mov
xor
mov
ss
mov
xchg
dec
clc
fisubrs
cli
or
fnsetpm(287
xchg
push
add
lock
add
repnz
jge
shl
ja
je
in
adc
stc
xchg
ltr
pop
int3
jg
mov
xor
mov
nop
xchg
fucomp
sbb
mov
in
stc
scas
ffreep
add
aad
out
ret
gs
loopne
pop
cli
sub
dec
sbb
xchg
scas
rcrb
movsl
into
pop
jg
push
or
mov
add
push
das
out
icebp
mov
push
movsb
shrb
push
inc
call
orb
add
in
dec
add
pushf
leave
jp
sti
rolb
mov
mov
inc
test
add
push
popaw
or
mov
xor
daa
push
nop
adc
jb
xor
or
imul
and
not
inc
outsl
faddl
inc
jmp
or
adc
and
std
cmp
add
push
movsl
loopne
cmp
xchg
jmp
jno
jg
mov
mov
adc
mov
and
cmp
push
sti
sub
dec
out
add
pop
lock
push
add
sti
lret
in
and
pop
cltd
add
test
incb
outsl
call
ret
mov
inc
xchg
sub
add
adc
pusha
inc
movb
sub
rcrl
testb
push
movsb
aam
xlat
sbb
add
sub
dec
sbb
icebp
je
test
sub
std
lock
nop
jg
add
shlb
test
or
fnstsw
mov
add
shlb
lods
gs
add
cmpsl
out
or
addr16
loopne
add
mov
icebp
inc
loope
xchg
loopne
mov
xchg
leave
sub
mov
subb
lcall
mov
insb
add
call
dec
mov
mov
or
subb
daa
lea
dec
push
add
inc
test
push
ret
mov
and
adc
test
ficomps
sbb
mov
mov
negb
jmp
in
mov
nop
sarl
mov
push
push
scas
es
dec
cmp
rcr
aam
pop
mov
mov
adc
or
test
hlt
dec
pusha
hlt
imul
push
and
arpl
add
mov
icebp
adc
jp
pop
mov
pop
mov
lods
add
sbb
movsl
enter
dec
rcrl
nop
clc
sub
test
xor
add
inc
aaa
add
push
push
sbb
adc
dec
push
cmc
push
add
decb
js
add
jmp
out
inc
pop
loope
repnz
mov
sbb
and
push
negl
pop
sub
dec
pop
add
and
insb
sahf
pop
test
cmpl
add
rcrb
add
xchg
scas
fldt
test
push
out
adc
add
cmp
insb
hlt
add
leave
repz
add
fistps
stc
fildl
lock
xchg
pop
add
pop
andb
jo
add
push
or
mov
pusha
orb
jle
repnz
hlt
pop
adc
and
cltd
mov
stos
add
or
popa
jo
rolb
pop
enter
mov
scas
add
fsubp
sti
mov
addr16
faddl
push
cmp
popa
xchg
loopne
adc
pop
movb
das
call
xor
jecxz
mov
xor
inc
fnsave
outsb
add
dec
xchg
push
mov
shr
add
aaa
data16
sbb
andb
xor
add
xor
lods
add
xchg
jae
add
or
or
pop
daa
push
adc
mov
sti
push
fs
test
xchg
cmp
sbb
and
and
sbb
cmp
or
xchg
push
jecxz
push
cmp
or
imul
xor
xor
pusha
mov
jmp
xlat
imull
out
aaa
inc
pop
push
hlt
lret
pop
adcl
pop
cmp
xchg
gs
aad
loope
loopne
int3
call
mov
jp
les
das
rcrb
mov
mov
adc
cmp
adc
or
push
inc
add
stc
test
push
aam
cld
in
les
mov
ficoms
int
sbb
int
fsubrs
in
fwait
icebp
cmp
pushf
outsl
add
and
call
add
dec
adcl
cwtl
inc
jg
cmp
push
sbb
sub
in
repnz
sbb
or
or
imul
cltd
and
cmpsl
add
mov
xchg
ret
test
sti
pop
in
pop
ror
rorb
mov
adc
pop
push
xorb
fistpl
and
and
pop
gs
in
and
aas
sbb
notl
mov
jnp
mov
fdivr
movsl
aas
into
xor
jae
mov
cwtl
inc
sbb
iret
daa
jne
lods
fimull
popl
inc
jmp
test
inc
aas
xor
cmpb
sbb
jno
mov
enter
sti
jge
lods
push
mov
nop
lock
shrl
adc
in
fnstcw
add
jle
lcall
movsb
mov
incb
pop
dec
sub
or
push
outsl
pop
or
add
mov
sbb
test
xchg
repz
mov
inc
add
fnsave
add
cmc
leave
dec
adc
mov
lea
push
pop
mov
inc
inc
pusha
cwtl
idivb
xor
lea
in
add
and
cmc
fadds
push
mov
push
and
ror
add
jmp
push
mov
pusha
lock
add
sahf
pop
push
cmp
in
lods
test
adc
fs
mov
mov
jmp
scas
stos
sub
jne
pop
pop
orl
jbe
add
jg
enterw
mov
adc
int
and
inc
pop
add
lahf
cmpsl
adc
add
jmp
sti
jle
add
xchg
rolb
mov
push
add
iret
cli
or
xchg
int3
add
and
call
xchg
mov
int
cmc
xchg
mov
pop
pop
pop
jmp
out
pop
les
in
mov
sub
pop
mov
loopne
out
add
popf
ljmp
arpl
push
aas
in
cmp
int
inc
lea
stos
push
cli
push
add
sbb
movsb
fnstenv
rcrl
pusha
aam
add
sbbb
cmp
add
sarl
xchg
jge
cmp
pop
cmpb
cmp
push
mov
sbb
lret
adc
xor
or
mov
mov
jno
movsl
scas
lods
dec
mov
add
dec
pop
mov
jl
add
loope
mov
stc
lret
dec
shrl
push
dec
leave
cmp
pop
jmp
out
pop
xchg
mov
or
add
out
outsb
stc
push
add
das
fnstenv
push
cld
inc
adc
in
pop
inc
fs
inc
mov
fisttpl
and
add
xor
and
jne
mov
frstor
xor
xor
xor
sbb
pop
imul
add
mov
lret
rolb
loop
insl
jl
pop
cwtl
les
adc
ds
mov
loope
fdivs
and
pop
mov
fldt
stos
js
dec
sub
push
dec
das
dec
adcb
sbb
loopne
ffree
adc
dec
roll
insl
adcl
cmpsb
add
popa
out
inc
popf
ror
jns
gs
push
mov
push
bswap
sbb
icebp
sbb
push
jno
fidivrs
jae
dec
mov
and
aad
or
adc
lds
push
adc
sbb
or
push
mov
incb
push
add
xorl
inc
addb
pop
subb
sbb
add
add
imul
adc
add
lock
add
clc
or
and
inc
push
lods
repnz
add
pop
movsb
je
or
inc
add
push
xchg
push
outsb
cltd
or
aaa
jo
std
add
mov
xor
xchg
cmpsl
sub
lods
and
mov
stc
jns
xchg
add
repnz
xlat
lods
sbb
cwtl
or
inc
pop
xchg
movsl
adc
pop
lock
adc
int
scas
mov
add
repnz
inc
outsb
and
add
jmp
rorb
xor
roll
mov
mov
cmp
rclb
and
add
enter
shlb
inc
dec
push
xor
loop
add
dec
inc
div
add
or
add
fld
adc
add
add
jae
jmp
jg
repz
add
jmp
das
and
push
sbb
sbb
dec
hlt
fcoms
sbb
push
xchg
bound
push
push
popa
mov
stc
add
out
loop
sbb
add
adc
aad
mov
mov
hlt
ljmp
xchg
jmp
add
addb
mov
add
xchg
rcrb
mov
movsb
iret
add
cmp
jae
add
or
add
mov
insl
popa
jmp
sarl
lods
jnp
cmp
mov
push
push
pop
sbb
sahf
inc
inc
addb
dec
call
add
sbb
stc
subb
sbb
aaa
sahf
add
pusha
adcl
inc
call
pop
idivl
add
subl
mov
pop
inc
mov
int
push
add
mov
cmp
or
push
testb
pop
pop
mov
das
xor
fcmovnu
movsb
mov
sub
lea
imul
adc
cmp
iret
mov
add
notb
and
pop
nop
jmp
xchg
push
add
clc
mov
mov
mov
sub
inc
fcompl
cmp
inc
jb
cs
and
adc
add
sub
mov
cmp
push
cmpsb
dec
pop
orb
inc
ret
add
sub
repz
icebp
inc
add
bound
or
jl
jl
pop
cmp
add
xor
inc
push
aad
out
or
pop
insb
insl
mov
add
and
or
out
mov
test
mov
mov
out
dec
sbbl
pop
add
stos
lret
sbb
push
add
popf
dec
push
add
cmpsb
cltd
out
mov
nop
add
pusha
repz
rcr
mov
push
popl
push
lret
nop
and
insl
add
mov
cs
and
add
mov
add
cmp
mov
and
sbb
fidivrl
test
mov
jl
psrld
je
push
in
and
mov
pushf
pop
scas
aad
dec
push
add
inc
nop
push
shl
mov
fisubs
repz
and
pop
mov
pop
add
sub
test
jmp
data16
sub
mov
daa
push
inc
stc
mov
push
add
pop
push
insl
adc
aaa
ja
add
xchg
rep
sti
sub
ror
mov
mov
into
inc
fdivs
and
pop
xor
sbb
out
xchg
jge
ds
in
test
fsubrl
clc
jge
add
lret
push
cmpsl
jle
push
sub
xchg
ret
adc
push
icebp
lods
mov
push
or
add
pop
scas
clc
fiadds
add
imul
xor
mov
adc
adcl
sahf
test
and
in
or
pop
add
insl
out
xor
xchg
popa
call
push
add
sbb
adc
jle
call
mov
dec
sarl
sbb
sar
and
shlb
gs
out
stos
pmulhw
idivb
mov
orl
add
stos
mov
int3
jns
dec
es
push
ss
push
xor
stc
test
idivl
dec
jg
dec
movlps
adc
cwtl
xchg
std
cmc
xchg
jl
dec
fistpll
ja
and
int
add
xchg
push
fs
push
add
inc
lods
pop
jae
aad
xchg
inc
mov
lods
call
cmc
jge
pop
push
mov
sbb
add
popf
loope
mov
add
test
mov
jecxz
mov
pop
mov
in
jns
add
ret
mov
and
pop
in
add
push
repz
cmp
dec
push
xchg
cmp
iret
imul
imull
cmpsb
out
daa
lcall
pop
push
popa
push
or
and
dec
sbb
mov
or
stos
pop
sahf
inc
inc
xchg
xor
or
insb
dec
int3
rolb
sbb
sub
in
add
aad
test
cli
inc
pop
or
sahf
cwtl
jo
fistpll
clc
mov
sbb
or
sub
es
lock
out
loopne
js
popa
out
and
rcr
cld
add
add
cmp
icebp
fwait
cmc
push
adc
add
add
call
xchg
ret
sub
mov
add
add
xchg
ret
xchg
nop
push
add
rolb
arpl
add
and
adc
cmp
hlt
in
ret
push
adc
and
push
add
jb
jp
and
push
add
cmp
or
inc
mulb
pop
arpl
icebp
jecxz
sbb
cmp
pop
movsl
insb
test
leave
fiadds
aaa
xchg
cwtl
lds
shrb
sbb
shlb
add
dec
add
jecxz
add
inc
hlt
sub
mov
sub
push
lret
cmp
jmp
and
sub
testl
mov
sbb
repz
int3
cld
es
movsb
add
dec
push
dec
hlt
dec
add
imul
in
xlat
lret
leave
jl
sub
nop
push
push
aaa
addl
call
pop
or
pop
dec
out
shrl
sub
lret
repz
push
out
jecxz,pt
test
dec
stos
test
mov
or
mov
loop
sahf
data16
popa
outsb
pusha
roll
fists
ret
cli
into
inc
jo
rcrb
fistpll
sbb
movsb
adc
ja
into
mov
hlt
mov
adc
push
icebp
push
mov
test
sub
pop
ret
xchg
in
enter
cmp
xchg
mov
push
popa
orb
fists
push
in
add
fimull
in
lahf
lret
and
fnsave
in
nop
add
inc
movsl
and
add
lret
aad
pop
add
cmp
inc
jno
add
lret
rclb
jnp
test
ret
stc
mov
add
imul
mov
dec
push
flds
ljmp
dec
jbe
in
push
pop
inc
and
outsl
pop
rol
mull
jbe
mov
mov
dec
xor
add
xor
pop
dec
std
xorl
prefetch
int3
fildl
mov
xorb
mov
xor
add
mov
lret
gs
stc
les
in
dec
lret
pop
mov
adc
mov
rclb
int3
sub
leave
dec
sbb
or
mov
add
xor
and
out
sub
ss
les
adc
cmp
sub
push
js
mov
xorl
movb
lcall
cmp
dec
into
push
popf
stc
int3
cmp
rol
mov
test
pop
in
les
ret
lahf
mov
sbb
xor
xchg
push
psrld
inc
xor
inc
push
push
sub
and
cmp
sbb
lea
mov
pop
pop
into
movsb
and
mov
repz
and
xor
enter
pop
mov
jge
sbb
dec
xor
adcb
data16
push
scas
ljmp
add
xlat
jae
iret
pushf
rolb
add
aas
cmp
hlt
push
cmp
or
and
dec
sub
in
mov
fs
loope
add
sarb
sbb
xor
jge
outsb
jb
mov
mov
and
push
add
xchg
mov
into
and
inc
es
call
xor
add
pushf
shlb
loope
and
icebp
imul
xchg
jle
cmp
add
sub
out
push
lahf
jo
add
lock
lcall
pushf
in
mov
pop
lods
and
pop
mov
call
movsl
bound
loopne
fiaddl
cld
repz
rcll
push
mov
adc
gs
inc
pop
fwait
xchg
pop
test
cmp
add
xchg
out
aad
popf
add
push
jo
push
and
imul
mov
and
or
testb
xor
mov
adc
mov
adc
mov
je
add
mov
in
fiaddl
add
adc
in
jbe
push
les
cmp
addl
jmp
push
outsb
ret
mov
pop
or
fcoms
shl
add
pop
dec
jne
add
jle
mov
ret
mov
push
mov
or
add
ss
cmp
push
dec
add
xor
js
cli
jle
popa
imul
lock
ds
hlt
cmp
add
sub
xchg
movsb
dec
jne
aas
sbb
fadds
inc
dec
shll
add
test
or
dec
cli
xchg
loope
xor
mov
in
mov
pop
mov
cmp
repnz
arpl
shlb
mov
xchg
sti
popa
and
ret
adc
call
sar
stc
inc
lock
out
sub
cmp
aad
cmp
jle
fidivs
or
pop
push
mov
inc
repnz
add
sti
shll
cmp
dec
mov
out
lea
mull
mov
rorb
ret
sub
push
in
fdivrl
push
fimull
adc
dec
xor
aad
xorb
fiadds
cwtl
and
sub
int3
and
jb,pt
xorb
add
and
ss
addr16
jnp
and
cmp
das
sbb
into
mov
mov
pop
pop
movsl
shr
ljmp
or
mov
cmp
stc
icebp
pusha
or
push
lock
mov
xchg
dec
int3
mov
test
fildl
push
inc
loop
jnp
add
insb
sbb
mov
bound
mov
dec
movsl
fwait
pop
test
in
lahf
test
add
xchg
inc
cmp
mov
clc
mov
add
stos
dec
scas
repnz
cmpb
pusha
adc
jecxz
push
pop
daa
loope
andl
nop
shll
ret
add
daa
pop
cmp
sbb
xor
nop
mov
mov
repz
jbe
loopne
movsl
aad
pop
mov
pusha
dec
arpl
cmpsl
xor
xchg
mov
clc
aad
loop
add
sub
cmc
fld
mov
cmp
inc
jne
push
loop
les
adc
and
add
xchg
inc
xchg
and
sahf
fwait
jno
or
jmp
cmp
push
inc
push
das
data16
or
hlt
inc
add
sbb
test
std
adc
jo
mov
lea
xchg
mov
xor
outsl
mov
xorb
pop
repz
cmpsl
pop
adc
loope
push
add
rcrb
out
mov
cs
jns
mov
orb
es
movb
dec
cmp
cwtl
or
and
xchg
cmp
xchg
in
mov
in
pop
adc
mov
dec
mov
xor
lods
add
fists
addl
jns
jo
rcr
add
mov
add
adc
sahf
mov
sub
xchg
nop
push
dec
adc
dec
aad
aas
addb
mov
lea
enter
cmp
mov
sub
fwait
mov
popf
out
out
add
pushf
shll
dec
mov
pop
negl
push
inc
aas
adc
shl
inc
dec
inc
frstor
cmp
inc
dec
popf
mov
in
add
negl
cld
popa
sub
int3
nop
mov
push
mov
mov
call
test
mov
jl
lahf
test
add
andb
cwtl
test
mov
sub
xlat
sbb
dec
xor
stc
mov
add
ret
add
outsb
popa
push
push
scas
mov
add
jno
test
pop
jp
arpl
in
pushf
out
add
or
inc
xlat
int
mov
jbe
out
jno
rclb
push
mov
mov
pop
jnp
jmp
mov
jecxz
in
hlt
lods
xchg
mov
pop
mov
inc
mov
daa
dec
das
add
adc
and
dec
ljmp
mov
sti
mov
scas
or
aaa
rclb
cmpsl
adc
test
ja
cld
sbb
lret
pop
pop
sbbl
add
mov
shlb
pop
pop
gs
cs
add
sub
inc
aas
insl
push
sbb
sub
icebp
mov
out
xchg
jle
push
popa
cmp
repz
adcb
mov
sahf
lcall
pop
popa
nop
cli
test
clc
dec
lods
orb
push
sbb
jb
add
add
fdivl
nop
or
decb
cmpsl
adc
outsb
add
rorl
xchg
pop
jp
and
push
out
les
jmp
gs
stc
add
sbb
out
clc
clc
xchg
push
repnz
lea
ja
repnz
movl
test
out
add
rcrl
mov
ds
pop
sbb
and
add
push
sub
int
cmp
cs
mov
sbb
outsb
sbbb
addb
icebp
add
mov
xchg
mov
pop
and
push
enter
sarb
push
push
and
push
push
mov
dec
orl
sbb
push
aaa
cmp
add
push
jg
mov
adc
push
lods
cmp
mov
add
add
in
pop
mov
test
sbb
add
jecxz
sub
adc
and
insl
add
out
push
add
xchg
mov
fistpl
push
aad
clc
sbb
pop
push
ljmp
out
add
add
lcall
popf
jne
notb
js
inc
or
or
push
scas
loope
xor
rolb
or
fs
ret
mov
mov
outsl
testl
aam
ret
sbb
outsb
out
repnz
xor
adc
test
test
jo
in
dec
add
jle
add
adc
fidivl
test
and
movsb
orb
mov
push
fildl
dec
push
sbb
xchg
inc
jl
or
gs
xchg
and
xor
xor
pushf
into
pop
mov
adc
mov
inc
roll
mov
mov
mul
and
popf
add
sub
sbb
add
insl
leave
xor
and
mov
jnp
jg
adc
fnstcw
sub
push
inc
inc
pop
adc
jbe
syscall
sbb
repnz
cld
fadds
lds
int3
mov
cmp
dec
cmp
sbb
aad
in
add
rorl
cli
pop
daa
imul
fiaddl
mov
pop
orl
pop
push
sbb
lret
mov
fidivrs
loopne
xchg
add
dec
add
dec
and
cmp
push
in
popa
pop
mov
or
xlat
lods
into
jle
push
adcb
mov
add
gs
andb
mov
pop
or
addr16
or
sbb
repnz
jbe
push
add
mov
cmpsb
les
pop
gs
fsts
int3
jecxz
push
add
and
orb
test
jmp
out
out
fdivl
and
mov
add
inc
push
aad
rclb
push
and
dec
pop
add
add
js
cmp
inc
lock
ljmp
pop
and
popa
outsb
sbbl
xchg
stc
push
sub
pushf
mov
xor
mov
dec
add
sbb
ret
jno
lret
add
data16
dec
jb
subb
sub
add
cmp
xchg
ja
loopne
pushf
call
cwtl
int3
add
stos
repz
sbb
or
int
add
das
dec
pop
cmp
out
movsb
bnd
add
outsb
mov
nop
mov
dec
cli
aam
fadds
mov
aaa
add
cmc
movsl
cmp
ret
pop
xlat
insl
or
add
push
cmp
pop
mov
mov
mov
shlb
add
jg
xchg
pop
inc
lds
in
mov
jmp
sbb
test
sub
scas
dec
test
cmp
add
int3
xchg
hlt
sbb
popa
aas
andb
jno
out
jae
push
add
sub
cld
divb
mov
pop
lods
pop
icebp
dec
imul
fwait
inc
xorl
out
add
aaa
and
sti
pop
mov
stc
sbb
cmp
sbb
or
adc
add
push
sub
mov
cmp
les
aas
push
dec
hlt
adc
sub
sbb
fdivl
ret
add
loopne
cmpsb
and
add
push
push
jp
push
ljmp
xlat
add
pop
fmull
mov
add
push
fcomps
loopne
aam
and
insb
lock
out
or
fwait
lret
sub
out
jb
add
in
jae
adcb
andb
sbb
jg
and
add
or
add
push
adc
mov
xor
add
mov
xchg
mov
js
jle
mov
adcb
cmovne
pusha
movlhps
cmp
movsl
xlat
out
push
mov
or
push
add
loopne
lock
mov
stos
shlb
cmpsb
vucomisd
nop
mov
add
stos
inc
pop
add
xlat
push
int
add
call
add
push
pop
scas
imul
dec
or
mov
fwait
inc
xchg
push
xor
ljmp
pop
add
lret
pop
xchg
dec
xchg
ret
or
shlb
sti
clc
dec
lds
cmc
add
dec
mov
pop
cmpsb
fadds
jae
jo
jno
jb
xchg
popl
loopne
test
push
bt
shl
or
addb
fnstenv
adc
ja
mov
in
add
test
or
add
pop
shrl
jno
cmpsl
jmp
cmc
loop
cmp
mov
scas
adc
sahf
shl
add
bound
jg
adc
mov
lock
or
loop
xor
cli
stos
xor
adc
jae
xor
inc
cltd
jb
add
pop
sub
cs
add
sub
nop
or
mov
outsl
jg
shlb
int3
add
mov
push
cmp
in
dec
mov
add
aaa
pop
hlt
mov
in
mov
mov
les
or
inc
cld
add
xchg
add
dec
pop
out
jecxz
xchg
jne
rclb
flds
cmpsb
jae
stos
inc
pop
add
outsl
adc
push
cwtl
and
mov
lods
or
roll
out
xor
repnz
lock
sti
popf
add
pop
xchg
in
fadds
out
jp
xor
lahf
cld
sbb
cmpsb
lret
adc
icebp
add
je
or
inc
mov
pop
jo
adc
in
add
pop
mov
adc
mov
mov
aaa
loope
data16
sbb
dec
pop
enter
add
stos
into
and
lcall
or
add
jg
icebp
mov
adc
cmp
adc
add
and
loopne
jbe
ret
pop
repz
sub
int
xor
scas
mov
mov
sub
shrb
inc
mov
out
pop
mov
dec
add
fstps
xchg
pop
ret
inc
pop
out
jmp
stos
addr16
nop
add
dec
out
add
hlt
dec
push
test
pop
dec
add
pusha
xor
lret
repz
xchg
sub
dec
mov
add
xor
dec
dec
dec
sub
mov
adc
dec
add
sub
out
sub
pusha
fstl
jle
loop
psubq
and
pusha
out
push
inc
fiaddl
mov
mov
loopne
dec
ja
add
into
lret
jge
loope
ss
int
out
pop
dec
mov
mov
mov
pop
push
and
add
gs
mov
loope
movsb
mov
inc
mov
lahf
cmp
insl
jmp
leave
add
loopne
negl
loope
cmp
push
in
inc
mov
icebp
icebp
je
les
xor
pop
push
jns
stos
out
dec
fisttpl
nop/reserved
mov
cmpsb
pop
mov
sub
add
aaa
fnstcw
shrb
and
add
xor
push
jp
andb
sub
call
adc
nop
cwtl
add
inc
ds
jle
xchg
jnp
add
mov
add
hlt
pushf
jb
testb
frstor
pop
je
mov
outsl
xchg
pop
or
mov
xor
jmp
shl
jbe
hlt
add
je
fwait
lret
test
repz
fidivs
mov
loopne
pusha
and
or
and
loope
fsubrs
pop
test
mov
arpl
or
loopne
cld
add
pop
sub
add
sub
clc
cld
add
mov
sbb
adc
data16
add
ficoms
sub
cmp
sub
jae
add
mov
pop
leave
sahf
les
add
notb
shrl
fwait
repz
jecxz
stos
mov
and
xchg
sub
mov
push
lahf
cmpsb
push
cwtl
adc
or
loope
imul
pusha
scas
repz
sbb
fisubl
jne
stos
pop
popf
fadd
out
mov
daa
stos
add
cld
stos
movsl
sbb
lahf
popf
add
jecxz
inc
add
clc
xchg
scas
add
sti
movsl
push
jno
shl
ss
cmc
add
nop
add
push
jb
sbb
das
add
lods
cmp
mov
or
add
xor
sar
lock
and
mov
fcompl
add
pop
jo
cwtl
cmp
add
add
outsl
jmp
jbe
lods
cmpsl
out
stos
push
mov
inc
push
mov
cmpsb
mov
repz
sti
lea
pop
push
mov
mov
lds
fdivrp
xorb
loopne
repz
xchg
add
add
xchg
push
cs
andl
mov
stos
or
subb
faddl
in
or
push
xor
add
paddw
pop
adc
xor
mov
test
inc
jmp
xchg
loopne
or
sbb
jg
dec
mov
mov
js
add
jle
movb
rolb
xchg
inc
inc
cmp
notb
call
shll
nop
popa
add
xor
mov
jbe
enter
jmp
mov
add
push
aaa
inc
fs
dec
jb
dec
stos
xor
sbb
push
add
scas
insb
jmp
add
xor
stos
dec
adc
sub
jns
adc
jg
shl
add
add
xor
mov
mov
and
xchg
inc
jb
mov
pop
aas
insl
mov
mov
icebp
fcmovbe
xchg
movb
imul
cmpsl
add
jns
xor
adc
pop
push
add
push
add
out
in
mov
les
scas
jl
rclb
add
ficomps
push
add
shr
xchg
jb
or
and
jae
fldl
fwait
mov
inc
scas
mov
add
sahf
xor
cmp
mov
mov
mov
ljmp
loop
in
imul
pushl
xchg
and
sub
push
xor
add
inc
mov
ret
pop
add
sbb
lods
in
add
push
int
test
mov
inc
les
sbb
add
jbe
xchg
ss
and
mov
incb
sub
push
lock
pop
pushf
in
push
rcrl
clc
sub
jmp
cmp
clc
inc
lret
or
insb
xchg
aad
jmp
stos
xchg
cmp
mov
mov
jp
and
je
cmp
adcb
push
dec
sub
pop
inc
add
add
or
aaa
enter
xchg
ja
movsb
sbb
mov
jmp
jge
add
neg
cmp
leave
pop
movsl
mov
add
rcrl
xchg
addl
call
xchg
in
xor
sbb
insl
ljmp
scas
test
cwtl
adc
incb
add
stc
jp
add
mov
jo
add
pop
xchg
add
shrb
mov
loop
inc
pop
lcall
sbb
cmp
mov
fidivrl
rorl
and
mov
ffreep
jnp
aas
mov
push
jg
mov
lock
adc
add
ja
add
or
adc
js
mov
inc
mov
aas
xor
push
dec
outsl
add
stos
and
int3
icebp
pop
mov
jl
loope
aam
push
mov
adc
in
jecxz
add
setge
aas
xchg
and
insl
add
xchg
clc
test
xor
sbb
nop
inc
pop
cmpsb
add
enter
iret
test
add
lods
scas
ljmp
add
cmp
cltd
stc
addr16
cmp
fldt
movsl
adcb
scas
mov
loopne
xor
mov
or
add
or
rol
mov
test
icebp
ret
mov
cmpsl
loop
in
pop
add
in
xor
mov
mov
inc
jns
jae
jbe
mov
lock
xor
gs
aam
imul
stos
cmc
jbe
pop
add
pop
push
out
mov
mov
sti
std
ja
ljmp
pop
xchg
push
cwtl
insb
and
mov
jb
xlat
int
adc
add
daa
test
addr16
mov
pop
xor
add
mov
and
pop
mov
add
ret
data16
insb
jno
pusha
pop
je
jge
and
lahf
inc
mov
lds
lret
add
pushl
jl
xchg
mov
cmp
ficomps
int3
xchg
call
cwtl
jle
repz
mov
lcall
jmp
and
add
dec
add
add
dec
aas
cmc
mov
lods
cmp
lret
movsb
lcall
mov
push
call
popa
pop
mov
popf
jge
pushf
test
push
add
mov
insl
hlt
dec
add
repnz
cmp
lret
out
fstps
mov
and
mov
mov
pop
pop
lea
add
sarl
jno
js
out
sub
push
daa
movsl
ss
push
cmp
add
mov
enter
mov
out
fisttpl
int3
mov
add
dec
adc
ljmp
orb
push
jecxz
sbb
add
mov
out
cmp
push
sub
add
xor
jg
inc
dec
scas
ljmp
stos
xor
enter
ficompl
aam
pop
xchg
faddp
test
mov
add
mov
out
arpl
pop
mov
jp
popw
jp
or
push
lods
mov
mov
add
stos
test
adc
stc
adc
inc
sbb
int
add
mov
gs
push
xchg
mov
fcomi
cld
fsubs
ds
dec
sub
ss
cmpsb
in
sahf
fisttpll
sub
int
pop
sbb
in
mov
and
adc
sbb
lods
jnp
pop
and
movsl
cli
data16
dec
mov
cwtl
jnp
xchg
sbb
sbb
cmpsl
add
sbb
push
jmp
cli
pop
sbb
insl
popa
mov
mov
insl
stos
push
int3
fiadds
out
fldcw
and
adc
pop
pop
dec
cmp
add
mov
out
enter
in
add
add
jp
pop
dec
add
mov
add
mov
test
add
loop
fisubrs
mov
add
out
sub
neg
int3
in
add
xor
and
or
pop
fnstcw
outsb
ljmp
je
mov
mov
cld
mov
sarl
iret
mov
dec
rcrl
add
cld
bound
jge
push
add
dec
dec
jae
sub
mov
xor
push
xchg
xchg
or
out
add
jo
lock
sti
and
lods
inc
sub
loopne
xchg
mov
fisubrs
test
in
loopne
or
imul
and
xorl
push
xchg
cmpsb
dec
inc
jno
mov
gs
jo
nop
or
push
pusha
pcmpeqd
aas
pop
loopne
rorl
subl
adc
insl
push
outsl
clc
jnp
out
xchg
inc
lods
pop
int3
mov
add
imul
add
dec
rorl
and
test
cmc
mov
fcomps
cmp
insb
fnsave
bndstx
jne
add
jmp
push
pusha
add
jno
add
jns
in
pushl
es
icebp
jle
idivb
lock
ss
xchg
mov
inc
aas
inc
pusha
and
mov
js
pop
nop
mov
mov
mov
cmp
dec
mov
push
dec
pop
testb
xor
dec
sub
lcall
addl
push
iret
sbb
add
scas
nop
inc
or
out
sbb
dec
lret
pop
and
inc
sbb
xlat
lock
pop
cld
adc
and
cmp
movsl
mov
outsl
dec
divb
push
inc
pop
popa
mov
unpcklps
adc
and
or
add
or
pop
add
js
jbe
rclb
add
sub
and
add
fiaddl
in
jae
add
add
les
dec
sbbb
dec
setl
jmp
cwtl
and
out
rcl
mov
ja
fnstenv
ret
add
or
sub
cmp
cmp
pop
pusha
stos
add
xor
inc
cmp
lahf
mov
fs
mov
ja
pusha
pop
xor
ljmp
cmc
inc
mov
push
cmpsb
scas
decl
xor
pop
aam
sub
sbb
sub
add
mov
and
pop
cmp
inc
lock
scas
cli
sub
jne
out
repnz
fiaddl
pop
mov
add
jne
xchg
ljmp
inc
call
icebp
cs
sbb
jl
aas
out
add
and
add
in
into
mov
fwait
aad
cmpsl
leave
inc
mov
push
pusha
jle
insb
add
inc
xor
loopne
or
add
loop
xlat
push
sub
lods
add
mov
dec
cmp
add
mov
call
xchg
and
out
mov
into
xchg
mov
add
mov
jg
add
js
push
rorl
sarb
push
pusha
inc
insl
pop
in
mov
xor
fiadds
mov
and
rcll
cmp
and
push
add
dec
push
adc
xchg
das
mov
loop
ja
out
adc
lds
sub
fimull
push
adc
adc
insl
push
inc
sarb
or
loopne
push
cmp
sahf
inc
lret
addb
fdivr
inc
out
icebp
incl
mov
es
add
push
xchg
test
dec
inc
push
jmp
andb
cmp
jae
pushf
push
jne
add
or
es
fadds
aaa
pop
fdivp
jecxz
add
mov
push
push
aam
push
sbb
xchg
iret
popf
mov
mov
push
adc
and
push
roll
mov
xor
fsubrl
xor
push
scas
nop
pop
add
in
popa
addr16
xchg
into
mov
and
cmp
icebp
aaa
call
into
jne
enter
sbb
cld
mov
jle
fcmove
cmp
mov
pusha
mov
lret
iret
or
add
inc
add
daa
in
sub
push
xor
aad
dec
int3
nop
or
pushf
jmp
loope
or
cwtl
in
cmp
xchg
xlat
out
mov
int
aad
fidivl
arpl
mov
hlt
jno
add
xchg
punpcklwd
or
rcr
icebp
cmp
adc
mov
jp
push
push
sar
in
mov
jne
addr16
adc
add
jo
test
enter
movsl
xor
mov
push
mov
int3
pop
test
sub
ror
mov
in
and
dec
add
mov
fs
xchg
mov
sbb
mov
out
add
and
add
daa
xor
cmp
idivb
lret
add
cmc
mov
sarl
xchg
mov
cltd
mov
add
xor
mov
dec
xchg
add
idivb
js
jle
xchg
adc
aaa
dec
test
mov
xor
sub
mov
add
negb
pop
xchg
mov
pop
jb
add
jns
lret
jecxz
int
fsubrl
movsb
aas
mov
jnp
cmp
add
xchg
fildll
jb
xor
inc
xor
jg
hlt
outsl
mov
fucomp
add
loope
popa
insb
push
lea
xor
mov
add
hlt
inc
aas
sbb
enter
add
lods
imul
push
divb
inc
push
sbb
mov
xchg
jge
jbe
adc
push
test
add
and
or
inc
jo
xchg
jns
sbb
sbb
add
add
in
cmp
mov
sbb
les
add
popa
lret
jo
ficoms
movq
inc
or
es
add
sub
mov
mov
addr16
mov
int3
sub
add
jge
cmpsl
and
inc
pop
xchg
stos
inc
add
ds
sub
or
dec
sub
xorl
sbb
inc
int3
cwtl
add
outsl
fs
mov
insl
lds
push
xchg
test
jg
mov
dec
inc
dec
lret
add
pop
sub
push
dec
jecxz
cmp
pop
xor
or
lret
adc
test
mov
and
push
pop
xor
test
jno
out
fcompl
add
clc
loopne
stos
mov
lds
lcall
fadds
add
lods
or
add
pop
in
arpl
insb
cmp
aas
scas
cmp
and
mov
xchg
xor
push
mov
lock
add
and
and
cmp
negb
sub
dec
add
ret
lcall
jge
movsl
gs
and
sbb
mov
insb
and
cmp
xor
jmp
or
add
xorb
test
inc
aaa
lds
rorb
call
inc
and
or
in
and
pop
cmp
adc
loope
das
les
push
sbb
pop
jae
push
add
pop
add
pushf
imul
bnd
push
sbb
lcall
cmpsl
mov
les
out
adcl
push
sub
sub
dec
xor
or
pop
xor
pop
fiaddl
movsb
or
jb
add
sbb
out
dec
cs
cmp
dec
pop
dec
inc
add
sub
jecxz
cmpsl
lods
jmp
test
ret
ja
push
andb
call
jno
sub
dec
dec
push
pusha
popf
jle
shl
sbb
mov
out
pop
push
push
cmp
add
jge
shld
cmp
shlb
add
sub
aad
bound
lea
or
dec
xor
xchg
pop
pushf
enter
ficomps
scas
jo
mov
das
add
pop
or
inc
hlt
add
push
fiadds
jae
and
jecxz
and
enter
inc
roll
imul
add
ror
cltd
add
clc
add
inc
adc
or
lock
add
aaa
lret
ret
adc
test
sbb
adc
and
jl
orl
xchg
add
bound
fstpt
cmp
add
sub
js
add
jmp
arpl
mov
movsb
mov
sub
cmp
xchg
in
les
xchg
mov
add
pavgb
movsl
les
orb
jno
mov
out
xorl
push
push
repnz
jecxz
data16
negb
rcl
and
sbb
cmp
jbe
int
out
mov
inc
dec
push
out
or
pop
mov
hlt
and
xchg
mov
daa
pusha
cmp
sbb
sub
lcall
in
jp
xor
mov
add
repz
or
popf
xchg
jecxz
scas
xchg
add
inc
adc
dec
fmuls
add
mov
mov
jp
andl
add
or
in
lcallw
cmc
push
sbb
pop
mov
dec
cltd
xor
pop
inc
xchg
adc
les
xchg
mov
lock
push
dec
jnp
mov
nop
xchg
adc
clc
out
or
and
aam
mov
mov
lock
sbb
ret
pop
jb
push
inc
fildll
in
mov
fwait
add
add
in
test
sti
push
cmpsl
subb
vshufps
in
lods
cmp
mov
ret
into
rcll
inc
outsl
dec
sarb
add
push
cmp
rep
jmp
mov
ljmp
into
push
mov
dec
sub
xchg
push
ret
dec
mov
adcb
popa
mov
loopne
xchg
add
mov
add
sbb
push
scas
sub
popa
add
loop
ret
iret
cld
mov
popf
inc
sbb
imul
rcr
cmp
out
add
mov
std
cld
dec
ficoml
push
mov
nop
mov
add
fwait
add
adc
adc
outsl
lret
sub
xor
lea
and
jae
and
or
subl
mov
or
inc
mov
test
or
and
outsb
add
out
rcll
int3
xchg
cmp
xchg
stos
sub
mov
lret
inc
mov
ss
nop
cmp
sbbb
int3
jo
sub
inc
fwait
ror
pop
repnz
add
pusha
push
jbe
ja
in
in
rcr
mov
rcrb
pop
js
sbb
pop
adc
add
jl
inc
inc
dec
inc
lods
rcrb
or
loope
jp
mov
fld
or
das
aaa
movsl
sub
lods
int
adc
sub
test
negl
into
lock
les
inc
lods
cmp
lret
dec
push
rcr
xor
rcrb
and
add
andb
add
push
pushf
incl
dec
cmp
lock
add
fwait
sub
cmp
add
mov
xchg
movsb
test
pop
cmp
rcll
int3
lods
or
fldl
fsubs
test
xor
addl
or
cmpl
xchg
add
dec
jne
xor
jp
fs
shrb
test
or
call
mov
add
hlt
dec
ret
aam
data16
sub
push
cmc
push
push
add
push
dec
pop
inc
mov
inc
roll
int
xor
mov
mov
hlt
xor
push
aam
movsl
cwtl
add
add
mov
loopne
add
jle
fnstenv
mov
gs
pop
add
and
ficoml
sub
mov
mulb
sub
dec
lret
push
mov
add
andl
ficoml
mov
jp
iret
add
aas
lds
and
dec
mov
or
mov
pop
dec
mov
xor
es
mov
push
sbb
inc
or
xorl
scas
loope
pop
pushf
cmpb
mov
add
and
sbb
out
push
add
pop
add
cltd
cmp
add
lahf
sub
rclb
fiadds
sbb
push
scas
cli
mov
out
mov
xor
add
push
cmp
adc
testl
sub
ds
or
xorb
xchg
pusha
and
repz
call
add
push
push
pop
add
push
inc
stc
push
cmp
roll
lcall
lret
mov
faddl
mov
lock
xor
sbb
sbb
cwtl
test
add
dec
outsl
push
mov
lock
and
add
add
lea
daa
add
adc
pop
push
jne
add
add
stos
cs
ljmp
sbbb
nop
lret
push
push
sub
add
cmpsl
cmpxchg
xor
aam
add
arpl
outsl
mov
pop
movsb
sarl
in
ljmp
test
sub
sbb
mov
cltd
push
fiadds
fs
sbb
ja
jno
inc
sbb
xor
and
aas
add
or
lret
add
mov
rol
rcll
hlt
data16
scas
inc
in
adc
adc
mov
rcrb
add
jne
hlt
aad
out
loop
add
jp
insb
push
xor
imul
jne
ljmp
inc
repz
mov
movsb
xor
sbb
dec
jg
inc
cltd
mov
sbb
xor
jbe
sahf
push
push
jae
add
pop
xlat
adc
lea
sbb
popf
mov
add
xorb
mov
cld
jae
mov
jecxz
xor
add
aam
stos
push
xchg
fidivl
pusha
sbb
loopne
jg
push
pop
or
ret
sub
pop
add
cmp
mov
inc
push
pfadd
dec
add
xchg
rcrb
add
in
adc
add
in
sbb
mov
xor
test
fisttpl
mov
adc
pop
dec
dec
sbb
mov
in
inc
pop
jae
jge
add
inc
fsub
addl
into
pop
stos
addb
lock
int3
mov
xor
enter
push
inc
mov
xor
jecxz
rcrl
mulb
add
pop
mov
popf
mov
lods
jg
xlat
pusha
int3
push
leave
ss
pusha
inc
cmp
pop
add
cmp
and
pop
lock
xchg
out
les
mov
lahf
fadd
icebp
push
rcr
in
jbe
push
xchg
dec
subb
pop
std
addr16
mov
cld
push
xchg
dec
and
call
filds
cwtl
xchg
cli
add
dec
lea
jbe
mov
sbb
add
orb
xor
add
cltd
add
xchg
jnp
faddl
ljmp
mov
mov
add
pusha
mov
push
mov
clc
jg
popf
or
sti
and
shlb
adcb
pop
enter
jb
add
or
push
add
sub
jg
mov
inc
xchg
add
icebp
outsl
lds
xchg
add
loope
int3
inc
int3
add
mov
shll
insl
out
inc
mov
stc
or
dec
cltd
mov
xchg
add
mov
sbb
inc
xchg
arpl
xor
jg
inc
js
add
push
aad
inc
xchg
mov
leave
sub
push
mov
cmc
fsubr
cvttps2pi
rcrb
hlt
xor
sbb
xchg
fldl
jae
cmp
mov
shlb
bound
lahf
nop
and
or
add
xchg
out
out
or
sarb
add
ljmp
jmp
xchg
sub
xor
xor
mov
xor
cmc
add
pushf
sarl
call
call
mov
xor
and
and
add
in
cmpsb
push
lret
add
or
add
in
xor
xor
cmp
and
hlt
movsl
sbb
or
inc
mov
sbb
xor
add
add
and
xchg
movsl
xor
loopne
data16
sbb
out
jae
mov
test
sbbb
add
xor
sub
mov
inc
jno
jb
incb
lret
cli
push
adc
dec
xchg
or
lds
lcall
inc
adc
int3
mov
add
inc
xchg
jp
dec
out
pop
insl
jmp
popa
js
icebp
xchg
mov
and
je
pop
pop
testl
add
adc
inc
xchg
inc
out
out
pushf
mov
xchg
jecxz
ds
jns
dec
repz
nop
jp
jo
call
mov
add
movsl
fs
rcrb
add
add
cmp
pop
fldenv
xor
adc
pop
test
jb
cmpsb
add
push
aam
rcrl
sahf
push
fs
js
shlb
and
add
mov
sub
into
dec
ja
push
lds
je
sbb
dec
fimuls
dec
or
add
ss
in
icebp
push
push
insl
cs
lret
add
xchg
mov
mov
pop
loopne
dec
outsl
shlb
push
mov
mov
loope
test
jmp
pop
jne
inc
fs
and
stos
pusha
hlt
adc
push
inc
jecxz
clc
cmp
jecxz
push
mov
and
movsl
mov
adc
in
xchg
add
dec
mov
xlat
pushf
add
ss
mov
adc
mov
testl
sub
push
and
imul
pop
sahf
or
xchg
or
outsl
in
xor
adc
pushf
mov
pop
xor
add
lock
roll
sub
int3
sbb
xchg
push
fdivrl
cmp
movsb
imul
dec
mov
xor
into
ja
mov
jo
add
lcall
add
mov
es
adc
jge
add
dec
lock
sub
mov
cltd
add
loopne
fiadds
shl
scas
loope
xchg
outsb
mov
fs
ja
add
leave
sub
push
mov
test
mov
movb
and
adc
add
push
jo
dec
lock
push
mov
push
rcl
hlt
pop
mulss
test
rcrb
push
add
jle
mov
add
decb
add
jbe
test
int
inc
xchg
and
push
ss
ret
jle
add
jnp
out
mov
add
fisubrl
pop
mov
add
aam
cmpsl
rcrb
inc
inc
pusha
or
and
rcr
in
sti
add
dec
mov
repnz
lods
xchg
add
stos
dec
movl
pop
cmp
and
int
mov
inc
xor
outsb
adc
mov
pop
mov
fbld
add
jmp
pop
in
ret
orb
das
xchg
add
sub
sbb
xchg
or
dec
in
andb
jbe
add
cwtl
orb
roll
pushf
xchg
jmp
add
adc
ds
inc
or
rcr
mov
cmp
or
cli
in
pop
scas
add
jmp
incb
rorl
jns
inc
sub
add
out
repnz
add
ljmp
gs
int3
add
mov
iret
out
sbb
sbb
add
sarb
mov
adc
push
or
push
xor
mov
lock
fcmovnb
add
dec
adc
loop
mov
fprem1
xorb
repnz
sbb
push
add
call
sbb
sbb
jno
add
inc
data16
add
clc
fptan
jl
xchg
imulb
movsb
lea
add
mov
cmp
cmp
push
incb
add
aaa
sub
lea
sub
add
dec
out
roll
imul
js
lods
jb
add
imul
pusha
add
mov
xchg
dec
push
jl
lea
rcrb
subl
add
or
fadds
pop
imul
shll
shrl
mov
mov
incb
std
pop
out
aad
or
add
cmp
cltd
sub
hlt
adc
push
out
cmp
inc
xor
push
scas
sub
mov
punpcklbw
test
add
inc
or
popl
inc
mov
cmp
leave
iret
cmp
daa
xchg
addb
insl
sub
add
std
outsl
sub
push
add
enter
js
gs
and
jmp
add
dec
push
mov
add
pop
mov
stos
ror
popf
pop
add
lea
add
movsl
push
pop
xchg
aas
inc
nop
test
insl
aam
aad
and
push
add
pop
add
in
bound
filds
adc
mov
or
mov
pop
mov
add
nop
in
xchg
add
jae
and
add
andl
out
sbb
ljmp
loope
lods
and
add
xor
pop
mov
pop
das
lea
add
call
sbb
out
fidivl
pop
sbb
dec
movsl
pop
adc
add
cmc
jae
add
daa
enter
dec
cmp
ds
js
adc
test
popw
repz
add
mov
scas
inc
repnz
jecxz
clc
add
rdpmc
bound
daa
pop
sarb
aam
and
mov
add
adc
jnp
sbb
mov
gs
mov
xchg
loop
adc
add
lods
or
pop
jo
in
in
xchg
iret
rolb
addl
movsl
lahf
inc
rolb
cmc
dec
cli
lret
mov
pop
shlb
icebp
dec
xchg
filds
inc
add
stc
pop
mov
mov
aam
pop
sbb
lret
or
ja
imul
dec
and
jg
add
mov
call
dec
xchg
sbbl
aas
cmc
add
xchg
jo
add
jg
roll
addr16
lock
test
add
pop
or
sub
add
dec
sahf
test
cltd
pushf
add
fimuls
stos
scas
imul
inc
add
adc
mov
je
rorl
pop
jbe
cld
mov
add
jle
cwtl
or
insb
xchg
add
pop
sbb
test
add
jb
and
adc
adcb
rorb
clc
jmp
pop
sbb
pop
sarl
jecxz
bswap
mov
add
mov
push
add
aas
add
jmp
sbb
sbb
sti
mov
in
aas
cmp
push
in
pop
mov
in
ror
pop
aaa
push
repnz
push
loope
add
int
dec
ficoms
mulps
jl
pusha
insb
cltd
cli
fwait
call
and
pop
adc
out
rcrb
or
lods
dec
add
in
std
repz
fdivrl
and
aad
add
sub
sbb
add
rcrl
hlt
stc
sbb
push
add
dec
mov
js
mov
jmp
and
jne
add
loop
stos
dec
shrb
push
mov
in
and
stc
cmp
push
stos
lds
jnp
add
imulb
xchg
push
mov
jl
lahf
cmc
inc
out
push
in
add
arpl
sbb
movsl
xchg
mov
add
dec
imul
aas
outsb
and
pop
sub
jl,pn
movsb
or
movsb
add
jge
out
or
xchg
out
push
xchg
xchg
stos
inc
jecxz
faddl
mov
outsb
insl
add
pusha
or
fadd
cmpsb
dec
dec
fs
jo
icebp
pop
hlt
mov
push
subb
jbe
das
scas
add
push
mov
mov
cmp
adc
lret
js
psraw
cmp
push
lds
pusha
mov
add
sub
inc
jle
jb
sbb
pop
lock
mov
inc
pop
adc
push
pop
mov
mov
insl
sbb
add
in
js
in
movsb
or
or
jnp
and
cmp
sbbl
int3
sbb
mov
cmpsb
es
repnz
cmp
xchg
sbb
cmpb
xchg
lock
in
xchg
cwtl
sbb
jecxz
sbb
jb
dec
mov
push
cs
mov
aas
pop
sldt
mov
push
push
test
pop
xor
je
sbb
mov
push
rclb
sub
or
incb
pushf
test
movsb
inc
mov
test
mov
add
pop
out
clc
add
mov
add
in
push
adc
popf
gs
mov
add
adc
add
xor
pop
data16
add
or
add
loop
scas
shlb
out
add
cltd
cwtl
xchg
out
mov
xlat
jae
jp
stc
popf
out
push
and
imul
jl
lock
outsl
adc
cmp
mov
add
es
mov
pop
daa
pop
cmp
xchg
int
mov
dec
js
push
dec
mov
xchg
pusha
mov
pop
xchg
pop
ja
mov
push
int
cmpsb
add
mov
cmp
xor
push
dec
sbb
aad
leave
enter
and
xor
loop
stos
addr16
xchg
fstps
outsl
in
xchg
push
in
out
jb
test
xchg
jecxz
lds
cmp
xchg
aam
adc
sub
push
jo
and
adc
adc
mov
dec
and
cmp
cmc
fcompp
in
add
mov
mull
adcb
fucomi
fcoms
mov
inc
xchg
jns
xor
nop
sub
and
xchg
cld
mov
add
daa
pop
push
sbb
mov
outsb
xor
jmp
push
xchg
add
push
jo
call
outsb
mov
cmp
ljmp
shrl
lods
and
imul
pop
ljmp
add
jnp
arpl
mov
pop
incb
jae
mov
push
icebp
hlt
inc
add
lds
ret
sub
pusha
clc
cmpb
adc
push
cld
aaa
cmpsl
in
xlat
jns
add
rclb
int
sub
gs
mov
insb
mov
scas
lret
into
mov
shll
push
pop
cmp
xchg
int
adc
or
jbe
push
jecxz
das
add
and
pop
xchg
test
add
test
add
push
int3
sarb
out
pop
or
bound
cmc
sbb
jnp,pn
mov
pushf
or
push
mov
out
dec
loop
jle
add
mov
sbb
add
xchg
ljmp
ja
mov
pop
add
js
rcrb
pop
pop
push
jb
xor
add
sbb
call
adc
ret
out
lret
and
push
dec
aas
andb
stos
div
jmp
add
icebp
adc
and
mov
add
jp
inc
jmp
jno
add
mov
das
adc
mov
hlt
and
cmc
movl
lret
pop
jmp
inc
add
divl
dec
cmpsb
mov
fnop
mov
xor
incb
data16
add
mov
or
push
rcr
out
jb
ds
add
stc
dec
add
jl
xchg
aaa
push
inc
and
jle
xchg
or
add
std
add
outsl
out
ret
clc
mov
or
in
sti
and
pop
lret
flds
add
stos
loop
test
adc
test
adc
and
inc
mov
out
pop
nop
lahf
outsl
jge
sbb
test
repnz
xor
arpl
test
cmp
outsb
add
mov
repz
mov
mov
scas
dec
add
mov
or
loopne
cltd
add
mov
cmc
sbb
sbbb
popf
push
bound
stc
mov
jae,pt
aam
add
adc
mov
pop
and
adc
inc
jle
add
or
sbb
cwtl
outsb
push
cmp
pusha
push
push
testb
adc
xor
push
int3
cmp
push
xchg
xor
cld
push
negb
pop
es
sbb
ljmp
js
sbb
lds
inc
cmp
sub
in
fisubl
lods
add
addb
inc
add
xchg
cmpsb
filds
stos
push
pop
inc
cmp
es
push
xorl
imul
inc
test
cmp
xchg
add
ret
dec
lods
je
add
repz
pop
mov
adc
add
lods
or
lret
jl
jo
andl
pop
cmp
sti
mov
notb
cltd
mov
mov
in
push
lret
popa
rcl
ret
mov
adc
adc
add
pusha
jns
es
inc
aaa
cmp
insl
mov
inc
jnp
sbb
addb
sub
lock
inc
xchg
mov
test
fmuls
mov
add
nop
cltd
bound
cwtl
push
es
add
pop
addl
sub
inc
fimuls
pop
add
push
fsts
adc
subb
or
dec
stos
in
add
mov
xchg
arpl
add
mov
rcr
cmp
fadds
mov
or
add
pop
xor
addb
fsubs
push
clc
nop
andb
xor
and
xor
lea
pop
cmp
aad
or
stc
sbb
mov
repnz
xor
cmp
lods
push
mov
shr
xchg
cltd
lock
lcall
cli
pusha
add
push
inc
inc
cld
pushf
add
out
dec
mov
js
or
daa
sbb
test
pop
and
aas
mov
adc
cwtl
dec
xor
mov
inc
scas
ss
add
movsl
sbb
es
add
adc
pop
jns
aam
dec
ja
shll
ljmp
das
add
sub
scas
daa
push
cmp
rcll
push
push
cmp
add
jmp
sbb
add
sub
pop
xor
repnz
lods
dec
inc
mov
add
roll
loopne
dec
out
xchg
lock
dec
cmp
cmp
out
rorl
xor
or
pop
or
jle
in
gs
xor
xor
cmp
cwtl
and
dec
cmp
add
call
adc
mov
add
mov
add
rcrb
pop
push
and
sub
jo
add
mov
push
aam
iret
add
popf
ficoml
cmp
pop
loopne
mov
add
ds
aas
add
pop
es
add
addr16
ret
inc
xchg
mov
add
adc
and
rolb
lahf
add
mov
enter
add
in
pop
shr
push
add
sbbb
mov
loopne
pusha
adc
adc
cmp
shlb
inc
aas
sbb
cli
out
mov
or
xchg
xor
add
mov
push
sub
call
mov
andb
cmp
sub
adc
inc
je
or
fadds
adc
or
dec
adc
sbb
sub
mov
repnz
add
loope
cmc
xchg
outsl
ljmp
movsb
out
out
mov
dec
das
jl
repnz
sahf
outsb
mov
mov
adc
out
sub
mov
sbb
push
jo
stos
inc
movsb
mov
ret
pop
mov
inc
aad
xchg
outsl
aam
bound
cld
loopne
sbb
lret
je
repz
shrb
std
lcall
pusha
in
add
cmpb
rcrb
imul
aad
add
sarb
pusha
add
cwtl
xchg
fldcw
clc
sub
jle
pop
lock
cmp
insl
add
data16
rcll
cmp
push
push
add
cmp
mov
xor
xchg
nop
cmpsl
inc
int3
aaa
scas
icebp
add
into
loopne
pop
faddl
cld
xor
leave
sub
lock
sbb
sub
ret
je
fldl
popf
sub
dec
mov
sbb
mov
add
lret
jo,pn
aas
pop
movsb
xor
clc
pop
orb
or
or
jl
xchg
sub
in
pop
jns
or
iret
hlt
mov
gs
fadd
bound
int3
add
jb
ja
pop
cmp
xor
mov
add
fcom
into
xchg
andb
sub
roll
insl
stos
and
add
sbb
ret
inc
out
mov
fdivrl
xchg
scas
mov
ljmp
push
dec
clc
mov
sar
lea
add
jg
pop
and
xchg
addr16
mov
add
lea
mov
sbb
add
lock
inc
test
inc
xor
je
jecxz
mov
repnz
mov
fmuls
in
inc
mov
mov
incb
pop
push
popa
jo
or
aaa
cmp
adcb
inc
add
divb
scas
in
pop
add
mov
cmp
subl
aad
ja
loopne
mov
add
insb
add
pop
push
jb
nop
pop
or
lcall
insl
stc
repz
icebp
jne
mov
cmp
shrl
out
add
aaa
imul
xlat
lret
fadds
js
mov
add
xor
sub
aas
mov
es
mov
aad
inc
sbb
and
adc
stos
add
push
mov
jns
rol
add
sbb
pop
mov
push
les
pusha
shlb
add
sub
add
aaa
sbb
mov
xchg
add
inc
and
add
cwtl
lea
push
inc
repnz
pushf
shll
clc
and
or
add
sbb
negl
or
clc
lds
pusha
int3
icebp
cmp
jae
add
sbb
pop
clc
mov
ret
sub
adc
xor
cmp
add
int
mov
stc
iret
loopne
cmp
push
dec
and
jns
cmpb
fiadds
les
stc
fprem
mov
add
scas
mov
leave
mov
add
fsub
mov
add
push
push
jle
push
jns
add
xchg
and
jnp
adc
mov
xor
add
cmp
lcall
push
push
jl
add
inc
mov
je
cmp
aas
bound
js
lods
mov
and
fsubl
pop
jle
dec
ds
jge
fisubl
inc
or
mov
cmp
sbb
lahf
inc
add
fsubr
sub
jge
xorb
faddl
inc
das
lea
push
loopne
hlt
add
jb
movsb
cmpl
inc
ljmp
loope
jmp
xor
and
dec
fcomps
arpl
fdivr
add
jo
cmp
fwait
jl
push
push
sub
cltd
sbb
cmp
or
cwtl
add
shrb
pop
fwait
call
add
jle
dec
imul
cmp
mov
or
pop
inc
mulb
loopne
add
push
sbb
add
mov
mov
fwait
movb
mov
pop
clc
lret
dec
or
fsubr
mov
adc
add
add
xor
imul
cwtl
adc
pusha
lret
pop
jbe
cmp
fld
mov
cmpsl
and
test
loope
pop
mov
lcall
dec
mov
sub
add
xor
inc
pop
sti
push
jae
and
dec
scas
stos
add
xchg
sbb
call
jmp
mov
mov
rorb
mov
insl
lods
les
repnz
fmuls
sbb
and
cs
adc
in
inc
sbb
or
hlt
les
adc
xchg
imul
cmp
add
adc
inc
lea
daa
icebp
or
and
testl
jg
xor
sub
ja
pop
add
add
pop
and
mov
in
imull
rclb
flds
or
loopne
xor
add
lods
in
sbb
add
jnp
test
dec
ret
push
dec
insb
sbb
add
jns
mul
stos
in
jo
xchg
outsl
repnz
sub
lldt
movsb
mov
push
mov
fldt
mov
hlt
mov
mov
popf
push
out
mov
cmp
sub
in
push
adc
xlat
sbb
push
rcrb
cmpsb
aas
push
mov
jg
pop
lahf
enter
xor
into
pop
and
dec
xchg
fs
pusha
les
jne
add
xchg
mov
cli
rolb
jmp
in
push
jo
sbb
jno
aaa
inc
dec
dec
add
call
ficomps
pop
sub
int
add
mov
sbb
cmp
jg
cwtl
inc
mov
fcomps
push
mov
push
popf
push
shr
loopne
jns
jg
add
fcompl
add
fs
mov
mov
sbb
in
loope
push
and
add
push
push
fstp
add
or
out
cmp
insl
add
daa
sub
jmp
js
or
and
add
xchg
dec
aad
add
xlat
test
sbb
push
or
pop
dec
add
jg
add
loope
mov
pop
std
imul
mov
cmp
push
ffreep
and
into
mov
xchg
or
inc
cmp
cs
sub
jle
add
pop
fisttpl
imul
push
out
add
ret
mov
mov
je
lock
popf
add
in
pusha
in
add
xchg
mov
mov
aad
or
in
or
sub
arpl
or
dec
xchg
xchg
cmp
cltd
sub
test
popa
rorb
dec
movsb
mov
add
inc
pop
adc
adc
lcall
out
lcall
dec
arpl
icebp
cmc
ljmp
in
sbb
loopne
mov
dec
cwtl
sbb
shr
sbb
imul
sub
pushf
or
insl
push
cmp
sbb
add
and
mov
dec
repz
rol
pop
jo
add
rcrl
das
cwtl
add
mov
add
mov
dec
das
cli
jo
add
adc
sub
cmp
lret
jno
xchg
push
sbb
test
mov
adcb
push
movsl
and
jb
out
mov
add
or
dec
add
adc
mov
mov
push
and
addb
arpl
fstl
fisttps
jge
fstps
jmp
fwait
cmp
cltd
inc
mov
add
scas
jmp
in
pop
rolb
jecxz
je
adc
jg
popa
jnp
mov
add
dec
mov
adc
int
sbb
out
inc
fistpll
and
add
push
mov
xor
cmp
mov
jp
jns
add
fldenv
cmc
fiadds
add
pop
das
movb
add
cmp
xchg
lahf
push
cmpsb
add
xchg
mov
cmpsl
in
sbb
pop
xor
inc
jne
js
cmp
dec
add
or
xlat
push
and
inc
out
adcl
adc
insb
in
aas
mov
scas
cli
mov
into
imul
loopne
pop
mov
ret
adc
outsl
dec
subb
inc
rorb
out
mov
push
adc
dec
add
mov
lock
insb
popf
cmpsl
shlb
pushf
scas
out
pop
add
or
and
call
mov
repnz
add
dec
jecxz
faddl
fidivrl
adcb
inc
iret
ret
inc
hlt
rep
andb
add
jae
dec
xchg
fnstsw
pop
inc
add
mov
pop
stc
and
imul
cmp
repnz
cmpsl
add
or
xor
and
pop
lret
clc
add
pop
jb
add
or
pop
jne
inc
movsb
stos
add
loopne
pop
xor
cmp
and
xchg
push
add
fcoms
jbe
sbb
xor
ror
into
cs
mov
mov
inc
pop
adc
sub
add
rolb
jnp
cs
dec
dec
pop
add
stos
xorl
nopl
sbb
add
and
jne
adc
cmpsb
lcall
popa
cmp
pop
bound
mov
add
add
add
stc
hlt
adc
cmp
test
adc
ss
push
sbb
les
jnp,pt
add
lock
imul
jge
fnstcw
inc
in
cwtl
add
imul
sbb
or
sub
cmpsl
fsubrl
lods
mov
lods
or
xor
pop
cmp
enter
push
push
pop
clc
pop
mov
sbb
pop
xor
mov
and
ljmp
jle
xor
add
pusha
cmp
pop
add
mov
cmp
xchg
mov
movsl
bound
fcomip
sbb
mov
mov
ljmp
div
and
push
popl
inc
mov
sub
jnp
jno
flds
mov
xchg
adc
add
imul
dec
iret
cmp
cmc
movsb
add
push
ljmp
add
icebp
lods
xchg
push
data16
mov
sbbb
push
push
and
mov
push
xchg
pop
xchg
movsb
add
cmpsb
fistl
add
popa
out
lds
cli
pop
push
mov
out
and
push
add
test
mov
enter
mov
fadds
mov
aaa
add
mov
adc
push
dec
jne
arpl
fs
mov
cmpl
add
add
mov
cmpsl
add
fiaddl
add
mov
add
into
pop
pop
or
add
es
push
xlat
mov
aaa
adc
aam
stc
mov
add
mov
mov
lods
cmp
adc
xor
addl
add
inc
arpl
cmp
cmp
jnp
pop
add
fdivr
repnz
adc
cmp
imul
je
mov
xchg
lahf
sub
int
ds
fwait
cmp
push
inc
xchg
shlb
das
jmp
sbb
add
je
lods
sbb
add
addr16
push
sbb
jg
add
mov
pop
lea
and
mov
add
stc
icebp
inc
sbb
pushf
lahf
call
in
xchg
sbb
mov
rcl
leave
pusha
add
sbb
jne
add
inc
fsubl
push
jp
xchg
add
xor
movsb
stc
mov
xor
sti
add
stos
insb
outsl
xor
and
movsb
jp
add
cli
jg
ds
jl
jnp
add
aaa
mov
adc
data16
cmp
mov
in
test
cmp
xchg
jecxz
pop
and
adc
pop
pop
pop
popl
sub
scas
adc
insl
shlb
add
jbe
or
cwtl
dec
add
adc
mov
ret
iret
call
cmp
fldt
lea
dec
push
clc
push
pop
inc
xor
rorb
rcrb
or
push
xor
mov
sbbb
sbb
adc
rol
add
xor
test
arpl
and
sbbb
jge
mov
imul
clc
daa
add
dec
inc
incb
imul
rol
add
xor
xor
mov
add
adc
ja
sbb
fsub
cmc
add
and
insb
xchg
add
push
into
data16
jbe,pn
mov
sub
xchg
mov
inc
mov
mov
or
mov
push
cwtl
jl
mov
mov
mov
dec
cld
lock
std
mov
test
addr16
add
sbb
sbb
aad
pop
mov
sarb
add
dec
sbbb
icebp
adc
inc
mov
fwait
stos
xchg
loopne
pop
dec
outsl
dec
cmp
int3
push
insl
mov
shl
add
xor
xor
movsb
mov
loopne
or
neg
add
mov
out
pop
xchg
adc
test
jnp
jo
fldenv
daa
cmp
pop
movsl
xlat
add
jg
pop
inc
fadds
add
jns
int
inc
jne
imul
push
jge
clc
add
ss
pop
add
and
das
fiaddl
or
dec
cmp
jo
xchg
push
pop
lret
arpl
rcr
mov
shrb
mov
mov
and
test
scas
xchg
fidivrs
mov
cmc
xchg
cmp
mov
movsl
or
inc
jle
add
mov
outsb
add
lds
add
jg
movsb
cmc
mov
sub
inc
in
dec
cmp
fsubs
out
pop
rorl
pop
sub
call
lret
cli
daa
jl
add
dec
mov
or
add
sbb
iret
mov
hlt
lret
xor
cmpsl
imul
fdivl
dec
jno
add
ds
push
mov
test
cwtl
jl
xor
and
inc
js
aad
add
fsubrl
push
xor
fmuls
ja
or
dec
xor
pop
inc
add
mov
leave
push
lret
mov
pop
xchg
add
sbb
xchg
xchg
and
test
push
add
ljmp
cld
or
lahf
or
das
sbb
sub
mov
pop
lret
mov
lea
cmp
loopne
pop
iret
jp,pn
inc
add
shrb
loope
pop
cmpb
inc
outsb
flds
add
movsb
push
loop
in
or
test
cmpl
and
jne
cmp
outsl
rclb
push
int
addr16
cli
jmp
jecxz
cmp
dec
cmp
or
stc
hlt
add
pop
scas
or
repz
sub
cli
insb
cmp
jl
mov
pop
popf
sbbl
into
icebp
add
dec
in
aaa
adc
mov
aas
add
and
pop
repz
cld
pop
test
fs
outsb
gs
mov
dec
push
insb
or
cwtl
mov
sbb
lahf
test
dec
jae
adc
sarl
push
lock
add
fstps
aad
xor
add
cmp
dec
jo
push
mov
int
adc
pop
je
add
aam
ja
xor
repz
add
ds
cld
inc
jge
aas
add
jnp
add
add
in
add
inc
pusha
int
add
add
add
add
cltd
xchg
call
add
xchg
das
je
in
mov
adc
cwtl
test
mov
and
add
pop
pop
nop
dec
cmp
mov
mov
mov
loopne
imul
pusha
or
test
cmp
pop
inc
xchg
pop
bound
dec
add
push
loope
mov
enter
movsb
sbb
xchg
inc
jae
xchg
push
dec
jae
call
adc
pop
mov
add
fdivrp
push
push
addl
js
insb
dec
aaa
dec
add
cmp
loope
stos
pop
jae
add
push
mov
les
or
add
jg
test
add
push
lea
iret
xchg
shlb
sub
fstpt
out
filds
ja
sbb
movsl
add
add
movb
add
scas
jecxz
sub
daa
arpl
add
mov
jo
cmc
add
addr16
das
imul
sub
call
mov
in
fadds
sub
es
sbb
into
nop
add
out
repz
adc
or
jmp
ficompl
add
rcl
iret
decl
pusha
and
int
add
pop
cmp
cmc
sbb
jl
cmpsl
mov
or
aam
cmpb
dec
gs
add
jne
mov
test
dec
lahf
xor
fistpll
sub
clc
mov
and
fistpl
add
dec
cmp
push
add
addl
add
leave
mov
mov
add
out
cli
cmp
jo
iret
push
push
pusha
or
mov
mov
jbe
aam
lret
mov
jns
sbb
lods
jmp
andb
adc
inc
cwtl
add
cmpsb
fldt
push
scas
fnstcw
or
xor
add
push
jle
push
dec
mov
fildl
sar
movl
push
push
lahf
in
add
inc
pop
in
mov
push
dec
testb
imul
pop
inc
lcall
inc
jmp
add
leave
xor
pop
and
sub
cmpb
sub
add
jns
movsb
jp
inc
loopne
push
sub
lss
out
inc
mov
js
cmp
loope
add
loope
daa
hlt
jo
sete
pop
testb
les
jl
and
stos
fistl
xchg
add
xchg
mov
dec
jns
add
sub
loopne
add
mov
pop
je
push
add
dec
push
pop
iret
stc
sub
jnp
in
arpl
into
dec
cmpb
add
ds
lret
mov
add
shl
arpl
pushf
xor
lret
incb
add
xor
push
loope
add
rcrl
sub
sbb
dec
mov
pop
mov
xchg
push
add
test
andl
pusha
or
mov
je
pop
jp
add
movsl
cmpsl
mov
mov
imul
xchg
pop
out
cmp
scas
add
xlat
ret
sahf
add
loopne
xchg
je
std
pusha
adc
or
mov
addb
test
mov
roll
mov
popf
xchg
add
cli
jae
jb
mov
xor
cld
subb
adc
push
xchg
nop
ljmp
and
pop
sbb
test
push
jge
xorb
stos
call
shlb
push
add
int
sbb
test
jmp
mov
add
xor
sar
push
add
add
sub
mov
add
test
les
fldl
pop
jg
add
addr16
les
fcmovnbe
lods
adcb
sbb
and
inc
push
mov
adc
dec
inc
sbb
xor
or
pusha
sub
jge
add
xchg
mov
and
mov
lahf
push
ljmp
not
xor
or
or
dec
and
test
adc
into
ret
push
imul
inc
mov
jo
cmp
and
cmp
shrl
int
pusha
loopne
leave
dec
dec
add
add
test
dec
cmp
aaa
mov
push
mov
push
cld
xchg
or
imul
adc
xor
lock
add
imul
add
dec
movsl
cmp
test
mov
lahf
out
sbb
out
mov
scas
adc
add
call
add
gs
out
pop
inc
stc
or
arpl
enter
pop
mov
ficomps
adc
push
loop
pop
mov
and
sub
add
xchg
sbb
and
mov
push
cmp
adc
jg
sbb
in
inc
and
sub
divb
xor
cltd
pavgb
and
mov
call
add
and
mov
sbbb
popa
pop
repnz
push
and
and
push
dec
or
aam
mov
jg
cmp
dec
aas
xor
xchg
iret
inc
xchg
sub
inc
adc
adc
push
mov
les
nop
adc
enter
adc
shlb
sub
aas
mov
subl
outsl
pop
orb
sbb
andb
add
sbb
and
jno
cmp
xchg
add
push
push
scas
stos
add
lret
ljmp
aad
outsb
adc
lea
inc
data16
scas
push
sbbb
pop
lea
add
or
test
nop
int3
adc
pop
cmp
js
enter
sub
rorb
lods
cmpsl
adc
mov
icebp
inc
lcall
pop
adc
insb
sbb
sbb
sub
fwait
addb
fisubrs
jge
push
add
mov
jmp
rorl
sub
sub
and
sub
insb
shl
xchg
movsb
loopne
add
jbe
subl
pop
xchg
sbb
clc
pop
jge
nop
fs
and
adc
jo
lods
leave
jne
lock
jns,pn
fisubs
fcompl
jmp
pusha
and
xchg
sub
xchg
and
repnz
inc
mov
int
or
cmp
pop
jb
arpl
pop
hlt
lock
adc
xchg
mov
out
and
cmp
xchg
pusha
mov
dec
jmp
add
jne
popf
pop
mov
lret
mov
mov
add
xchg
adc
in
daa
ljmp
pusha
ret
scas
cmc
and
fldt
jmp
add
push
rcrl
xchg
mov
hlt
add
mov
sbb
jmp
mov
fistl
lret
js
xor
inc
movsb
fistps
or
loope
mov
fistl
xlat
ljmp
or
sub
add
or
scas
dec
inc
hlt
push
out
fcompl
outsb
int3
call
shll
call
xchg
lret
xchg
imul
inc
lods
push
mov
xchg
scas
and
jno
popa
pop
pop
out
add
mov
icebp
cmpsl
popa
aam
insl
cli
movsb
jno
insb
push
sub
add
filds
in
push
jno
ret
imul
lock
or
cmp
xchg
pop
outsl
ja
and
hlt
inc
dec
jo
sbb
mov
inc
push
andb
mov
xor
insl
mov
rclb
mov
adc
jl
push
xor
mov
xor
mov
jge
stos
test
call
loopew
cld
sub
aad
out
or
nop
mov
arpl
ljmp
add
ret
adc
arpl
adc
je
push
scas
aas
xchg
push
and
lahf
push
into
adc
fidivrs
mov
dec
ds
shrb
adc
mov
mov
mov
add
jns
inc
sub
mov
sbb
rcrl
gs
jg
daa
scas
sub
cmpsl
push
mov
pusha
mov
filds
xchg
jmp
mov
cmp
mov
pop
call
ljmp
pop
cwtl
aaa
mov
mov
and
lods
mov
push
mov
sbb
sub
inc
dec
out
mov
stos
and
cli
mov
enter
leave
sbb
orb
add
in
mov
mov
push
cmp
pop
lret
pop
ds
bound
mov
jle
imul
enter
mov
pop
movsl
ljmp
ret
repnz
push
cs
and
cld
add
pop
aas
dec
dec
add
pop
rclb
les
dec
fdiv
arpl
ret
mov
jmp
testb
in
clc
inc
dec
clc
xchg
add
push
sahf
mov
cmp
inc
sbb
pushf
add
sub
sbb
outsl
sbbb
fs
and
mov
sarl
add
push
push
add
shl
add
enter
xor
add
insb
jo
movb
sbb
mov
flds
add
mov
out
mov
jl
sub
dec
add
js
mov
loopne
add
push
ret
sbb
mov
add
adc
inc
out
sti
inc
leave
pop
mov
jo
dec
cld
sub
incb
nop
mov
or
and
or
fs
loopne
roll
cmpsb
add
push
filds
add
fs
or
xchg
add
xor
add
test
leave
shrb
enter
jno
rolb
or
dec
pop
insl
inc
inc
add
mov
mov
in
ret
inc
lea
mov
scas
mov
adcl
test
jno
push
out
sbb
icebp
cwtl
inc
mov
cs
daa
xor
sti
test
mov
je
add
arpl
inc
mov
decl
popa
lds
add
add
sbb
add
mov
mov
dec
lods
push
call
jmp
mov
lds
sub
xchg
sbb
out
sti
fs
jae
push
mov
mov
rolb
test
fldenv
popf
roll
cmp
jo
out
fcmovu
mov
fwait
jg
or
mov
fadd
add
out
sub
shlb
add
dec
lods
pop
xchg
push
add
roll
daa
fs
fstpl
add
pushf
mov
les
mov
adc
mov
mov
pop
mov
loop
xor
inc
lret
adc
push
or
aad
add
xchg
mov
insl
mov
xchg
inc
lds
or
popa
mov
pop
fsubr
add
arpl
add
shlb
xchg
pop
mov
or
inc
inc
cmc
out
push
jb
adc
lods
inc
cmp
xchg
fisttpll
hlt
fisubrl
out
xchg
inc
jl
cli
add
and
add
cmp
add
roll
sbb
call
adc
stos
repnz
popa
rolb
scas
adcb
inc
je
add
jl
filds
push
stos
sub
add
loopne
sti
add
lea
dec
daa
jbe
xor
pusha
and
pop
lds
les
scas
subl
add
inc
cmp
shrl
dec
cltd
testb
cmp
pop
and
insb
int3
mov
mov
call
pop
fsubr
xchg
adcb
lret
daa
rolb
pop
jp
and
push
loope
dec
or
adc
repnz
add
rclb
call
push
push
mov
leave
push
xchg
mov
mov
add
call
roll
insl
add
pop
icebp
push
xchg
add
int
mov
daa
mov
inc
jp
sbb
jg
rcrb
jge
aas
xor
cmp
push
rorb
nop
mov
cwtl
sub
mov
rclb
xchg
loopne
mov
add
ss
test
and
add
sub
add
xchg
fldz
clc
bound
adc
jecxz
inc
or
mov
sub
push
add
and
lahf
dec
cmpsl
sahf
mov
dec
mov
es
add
sbb
xchg
jle
fcomps
and
cmpsb
jns
add
cld
loopne
andb
add
pop
mov
dec
mov
xchg
push
dec
sbb
sbb
fwait
inc
push
adcb
insb
mov
pop
movsl
xor
pop
add
sub
ret
pop
test
outsl
add
inc
idivb
adc
out
and
push
jne
and
sahf
subb
cmp
mov
fnstenv
xor
xchg
jae
add
test
inc
in
add
sbb
stos
scas
adc
jl
aaa
mov
xorl
and
lods
rcll
cli
add
and
mov
cwtl
mov
and
mov
inc
sbb
cmp
add
or
ds
adcl
pop
je
jb
cmp
jg
sahf
add
cwtl
sbb
xchg
out
add
fwait
je
pop
sbb
xchg
add
pop
or
cld
leave
aas
jmp
les
mov
add
mov
push
stc
jne
pop
push
insb
aaa
add
sub
mov
and
inc
cmp
repz
aaa
clc
jmp
fiaddl
sbb
ret
pushf
pusha
repnz
add
out
enter
push
push
push
sbb
or
xchg
add
pushf
fnstcw
or
adc
add
jecxz
testb
add
mov
inc
stos
cwtl
orb
test
sub
mov
sub
ss
fmul
add
add
das
cwtl
aas
inc
insl
jns
mov
jp
lock
add
iret
push
xchg
push
xchg
add
jle
arpl
fcoms
lret
inc
in
or
add
jo
sbb
loopne
mov
sbb
icebp
rolb
out
fcomps
pop
call
popf
in
ja
out
mov
and
divb
add
lret
add
cwtl
jo
jmp
add
shlb
out
pusha
lods
and
inc
lea
xor
pop
add
sbb
faddl
ss
push
lret
lahf
out
sbb
cld
mov
xor
push
pushf
mov
add
lock
add
popa
and
adc
xchg
in
pop
sbb
add
mov
push
mov
in
out
inc
jmp
stos
mov
add
faddl
dec
add
dec
mov
add
test
je
inc
add
dec
push
mov
pusha
push
in
xchg
add
loopne
mov
dec
fistps
or
in
xchg
iret
or
ficoms
outsl
or
xorl
add
sarl
sub
and
cmp
les
rcl
ret
jl
pushf
aam
rorb
inc
xor
lods
add
xchg
mov
inc
cmp
lret
jbe
cmp
ljmp
sub
js
or
andb
pop
xchg
or
push
lcall
mov
inc
gs
xor
jo
orb
cmp
mov
mov
pop
push
cmp
popf
xchg
divl
xchg
pop
and
pop
stos
sub
add
mov
in
mov
mov
int3
fsubl
mov
or
outsl
pop
mov
add
pop
insl
mov
and
or
mov
insb
andl
adc
out
js
or
or
and
add
aad
nopl
and
mov
add
pop
cli
or
outsb
cmp
push
and
imul
addb
and
movsb
mov
fs
xor
aas
std
sti
xchg
cmp
pop
xor
icebp
dec
jo
and
push
sbb
sarb
dec
xor
add
les
adc
stos
testb
add
sti
daa
pop
xor
inc
inc
push
add
loope
mov
xchg
jmp
cmpsb
or
ljmp
mov
mov
js
add
int
insb
adc
add
jp
lods
and
mov
mov
andb
and
cld
shrb
cs
daa
add
jae
and
invd
dec
movsb
sub
push
cltd
lret
dec
icebp
rolb
push
daa
adc
pop
sahf
add
imul
rcr
jnp
loope
add
mov
in
xchg
lret
pusha
das
inc
mov
test
add
mov
lock
je
fs
aas
and
add
pop
xor
idiv
jle
sbb
ret
dec
jmp
xchg
push
push
mov
add
mov
into
sbb
push
subl
dec
data16
enter
mov
inc
push
lds
insb
in
lods
fdivl
add
mov
mov
in
pop
insl
and
xor
adc
stos
or
stc
testb
mov
mov
ffreep
add
jne
push
lods
outsl
mov
fdivrl
aaa
pop
add
orl
outsl
cltd
sbb
jle
push
mov
push
rclb
cltd
pop
enter
or
lea
les
cmp
lret
cli
add
in
in
cmc
movsl
jmp
xor
cmpsl
inc
add
lahf
sbb
push
aad
jmp
push
adcb
outsb
mov
jns
sti
mov
add
scas
add
out
popf
sub
xchg
jbe
or
add
xchg
pop
pop
adcb
xor
test
jmp
in
xchg
arpl
pop
cwtl
call
add
push
movsl
sub
decl
or
mov
add
aam
aad
in
imul
adc
mov
cwtl
jmp
fmuls
movsb
sbb
js
mov
cs
call
mov
xchg
add
pop
sbb
or
pop
push
nop
add
fldcw
jne
xchg
ja
loop
add
sbbl
out
inc
cld
pop
cmp
cwtl
inc
push
movsb
add
enter
add
adc
mov
or
xchg
cmp
jl
lock
dec
adc
xchg
add
movsb
std
inc
les
orl
cmp
andb
ds
pusha
xor
subb
adc
jne
fisubs
xchg
jmp
push
xor
ret
lds
mov
outsb
hlt
test
adc
fstps
add
jns
add
ret
repnz
inc
push
fcmove
add
jle
pop
std
fmuls
or
fstpt
rolb
aad
or
pusha
pop
fldcw
mov
sbb
fadds
lods
sbb
add
stos
movsl
xor
add
dec
ret
mov
add
adc
dec
add
dec
xchg
add
addr16
push
add
add
js
push
repz
int
cmp
inc
call
add
xlat
xchg
mov
aas
mov
andb
mov
nop
lret
idivb
lods
add
and
test
sti
and
add
sbbl
cmpl
movl
shr
xchg
jl
int3
sarb
outsb
sbb
push
add
loope
sti
or
push
int
push
pop
inc
mov
sub
bound
ds
ljmp
lea
hlt
movsb
xchg
scas
test
add
jne
movsl
jmp
mov
loop
add
xor
mov
repnz
shll
adc
loop
cli
pop
jp
fs
or
pusha
loopne
lock
dec
or
loopne
les
lods
xchg
dec
sub
add
jo
mov
lock
movsl
mov
sub
mov
psubusb
scas
xor
push
jb
shrb
pop
xor
pcmpeqb
out
dec
mov
gs
roll
mov
orb
mov
xchg
pop
jae
add
add
inc
add
adc
std
iret
loopne
mov
pop
xor
add
jl
ret
loopne
incb
lods
sbb
dec
enter
add
sti
push
xchg
aas
jl
or
sbb
jbe
test
ret
pop
xchg
and
les
in
iret
dec
add
sub
addl
add
cli
and
pushw
mov
sbbb
lods
mov
int
add
sub
add
dec
lods
pusha
pop
add
jp
inc
and
sub
mov
mov
fsubrl
adc
xchg
jecxz
add
or
add
pushf
loope
aaa
add
test
int3
sbb
jo
pop
dec
aam
inc
outsb
adc
and
jg
sbb
cmp
adc
roll
or
inc
mov
lahf
mov
aas
add
fmull
cmpsb
nop
or
ja
scas
sbb
xchg
fmull
push
loopne
xorb
out
mov
cmp
gs
xchg
pop
jo
inc
dec
insb
cmp
push
xor
andb
jb
sub
pop
sub
leave
jp
mov
jno
inc
inc
mov
dec
add
mov
shlb
sub
mov
std
loopne
addb
out
imul
add
push
sbb
cmp
jge
lods
and
and
xlat
sbb
fdivrl
mov
and
xchg
test
mov
xchg
jle
and
int3
cmp
sbb
subb
inc
es
bnd
nop
sbb
cmp
adcl
adc
jge
cli
mov
cmp
fsubl
aas
and
ficoms
inc
subb
add
aam
es
jle
and
or
or
and
cmp
xchg
dec
mov
cltd
xadd
or
push
xor
add
je
and
xor
test
cld
popa
or
pop
icebp
mov
addl
das
add
in
sarb
add
jp
and
mov
add
cmp
pop
mov
xor
jecxz
adc
fucomi
push
xor
add
mov
xchg
push
xor
lret
mov
xor
inc
ja
add
pop
call
aaa
leave
fwait
mov
add
and
mov
add
in
xchg
dec
add
out
outsb
or
andl
cwtl
add
fisubrs
test
jnp
mov
into
out
mov
rol
add
adc
movq
sti
lcall
je
or
push
xor
jmp
jb
mov
cmp
add
imul
cmp
push
clc
fnsave
mov
inc
pop
jbe
cmp
mov
mov
dec
nop
add
arpl
out
data16
jb
sub
sub
add
loope
test
add
ss
imul
notl
or
adcl
cmp
sbb
and
xor
sbb
les
negb
adc
add
mov
sub
dec
pop
sbbb
add
movsl
scas
dec
shl
xor
mov
outsl
mov
pop
jae
add
test
out
push
ds
xchg
ds
in
popa
sbb
frstor
rcrb
mov
adc
rorl
push
pop
mov
jp
add
mov
lock
scas
xchg
test
add
test
movsb
add
xor
push
add
cwtl
addb
xor
add
inc
test
cmpsl
xor
push
rorl
in
pop
mov
add
inc
dec
inc
popf
mov
addl
pop
add
xchg
xor
vmread
mov
jp
sub
insb
cmp
push
sbb
call
fwait
jmp
xchg
pop
arpl
mov
ret
jp
or
into
xor
jo
push
pop
pop
jnp
add
stc
cwtl
fiadds
or
adc
add
jo
out
stc
pop
test
loopne
adc
add
cmp
call
scas
jno
inc
pop
dec
xor
pop
enter
cmp
jmp
sub
imul
push
nop
mov
sbb
lock
mov
fnsave
fimuls
incb
repnz
jns
adc
test
aam
insb
in
andb
in
or
add
adcb
inc
xor
lret
cmp
fdivp
nop
and
add
cmpsb
mull
nop
jl
sub
repz
jo
or
cmpsl
fcmovnb
and
add
stc
adc
out
add
xor
in
aad
ss
pop
faddl
and
repnz
jg
add
leave
rclb
push
shlb
mov
daa
xchg
insb
loopne
adc
dec
add
lret
in
mov
inc
push
or
lea
pop
or
test
push
scas
mov
rcl
test
or
sub
xor
addb
fdivrs
sbb
xchg
cltd
jp
mov
lcall
cld
adc
and
in
add
cli
in
shrb
aam
add
jmp
js
setno
pop
pop
movsb
add
cmc
lods
push
fadds
shrb
imull
cmp
jnp
push
add
subb
into
adc
adc
jp
icebp
add
fcomps
jge
pop
test
fnsave
pop
in
jecxz
mov
mov
aam
pop
fsubl
add
and
ficompl
lock
mov
sti
mov
mov
sub
jo
pop
aas
fildl
inc
mov
in
add
add
ja
jg
add
xor
jp
mov
das
push
cmpsb
call
add
mov
dec
jl
stos
mov
jmp
call
mov
mov
mov
je
ficoml
cmp
add
add
inc
mov
int
ret
test
jne
leave
jg
adc
out
mov
rcl
inc
sub
mov
cwtl
cld
shll
push
inc
xchg
mov
clc
add
mov
fdivrp
and
test
hlt
andb
dec
fs
xor
mov
cmp
addr16
cmp
test
dec
sub
loop
mov
adc
sbb
movsl
or
dec
mov
mov
aas
cmp
ret
mov
add
scas
das
xlat
or
add
xor
lods
xchg
adc
xor
xchg
cs
rorb
push
xor
nop
xchg
or
push
add
out
ljmp
pop
cs
mov
fwait
insb
sbb
jbe
push
movd
xchg
leave
xchg
add
mov
mov
mov
add
dec
xorb
fisubl
jmp
mov
jle
dec
pop
add
inc
aad
add
les
dec
inc
les
add
daa
inc
cmc
mov
cmp
mov
lds
cltd
hlt
test
dec
add
out
adcl
jmp
subl
lcall
mov
mov
pop
jnp
hlt
mov
adc
xor
jbe
insl
jb
inc
or
push
sub
daa
loop
dec
dec
push
or
iret
les
add
sub
mov
xor
aas
rolb
jp
push
jbe
mov
xor
ret
xorb
imul
sbb
sbb
es
movsb
loopne
jbe
fcomps
into
xor
cwtl
ret
or
lods
cli
aas
or
orb
xchg
push
test
sub
hlt
popf
inc
jnp
aam
add
sub
insb
daa
rcrb
inc
add
das
mov
lahf
jge
sbb
inc
cld
xorl
xchg
mov
lret
sbb
and
jno
lahf
push
std
stc
int
loopne
pop
push
mov
in
add
sbb
hlt
jge,pn
push
add
sbb
cmp
inc
cmp
mov
xlat
lea
das
shlb
stos
dec
pop
popf
sarb
pop
sbb
lea
outsl
lods
pop
push
or
scas
fidivrs
push
jecxz
rcrb
add
jmp
ret
push
imul
das
test
pop
push
mov
add
push
stos
jecxz
js
xlat
add
movq
lcall
les
pop
pop
push
inc
xor
and
pop
aam
fwait
push
push
pop
pusha
call
repz
mov
mov
std
lock
push
mov
add
dec
sub
add
ficomps
jle
push
loop
add
mov
stos
popf
push
sub
cli
pop
test
mov
pusha
lret
or
xor
add
adc
leave
ret
jg
and
sti
or
scas
addb
pop
adc
add
fildl
mov
test
roll
sbb
mov
jmp
cmpsl
add
jne
loopne
jl
rolb
leave
cs
into
sub
ds
add
mov
mov
imul
movsb
sbb
mov
inc
psadbw
dec
xor
mov
pop
mov
cld
and
sub
add
outsb
addr16
mov
pop
mov
ljmp
inc
hlt
jle
mov
dec
xor
sub
mov
call
dec
xchg
xchg
add
jge
add
mov
int3
mov
sbb
out
adc
movsb
mull
sub
cli
into
add
adc
add
xor
sub
add
mov
mov
sbbl
sub
cbtw
sub
fiaddl
ret
shl
xlat
add
inc
enter
sub
daa
fdiv
inc
pop
add
test
push
add
jg
sbb
cli
rcrb
xchg
and
mov
or
push
add
inc
sarl
or
mov
xchg
pop
mov
ss
mov
or
sbb
push
ja
scas
lar
into
mov
inc
add
das
xchg
int3
jg
add
cmpsb
lcall
je
bound
add
out
adc
add
pop
push
hlt
out
rcrl
push
sbb
lods
sbb
cltd
push
scas
xchg
in
loop
push
adc
cwtl
xor
push
or
mov
push
pop
jno
lock
jmp
xchg
xor
or
je
inc
add
cmp
aas
cld
mov
sub
sbb
jo
xor
mov
fildll
stos
jge
aam
lods
sbb
cmovge
insl
filds
ficomps
in
movsb
test
call
xorb
add
and
je
sahf
inc
mov
mov
cmpsl
dec
cmp
cwtl
cmpsb
add
push
add
or
fmuls
add
pop
jge
sub
in
mov
pop
iret
out
aam
xchg
lods
mov
mov
hlt
rolb
rcrl
push
add
inc
call
clc
add
dec
sub
sub
outsb
push
in
shrb
pop
and
push
into
or
insb
xchg
or
sbb
pop
jg
add
roll
aaa
rorb
fwait
add
idivb
xchg
mov
xchg
pop
cmc
sbb
jg
jo
add
fldcw
test
iret
scas
testl
insl
hlt
scas
dec
lods
lock
adc
sub
and
addl
rorb
sub
pusha
hlt
iret
stos
add
test
fcomps
or
pop
loope
add
and
push
insl
pop
and
jno
mov
addr16
add
pop
out
popf
mov
inc
bound
hlt
or
lds
stc
xchg
rorb
push
add
sub
int3
les
gs
add
mov
add
ds
push
test
mov
int3
dec
xor
or
hlt
mov
mov
mov
add
clc
inc
into
in
pop
mov
pop
dec
aas
sahf
rcll
bound
xor
inc
negb
or
lret
test
shl
push
push
lahf
ficomps
ret
imul
seto
hlt
in
dec
push
sub
or
mov
pusha
mov
testb
outsl
mov
xchg
mov
es
push
inc
imul
fcmovbe
push
add
clc
call
xchg
pusha
sti
cmp
mov
int
push
pop
lock
jge
daa
fs
hlt
movsb
pop
sub
lcall
xor
rolb
dec
icebp
dec
add
or
mov
bound
dec
roll
cld
cmpsl
push
sarb
add
scas
insl
sti
adc
psraw
add
or
aas
aad
inc
add
movsl
lds
dec
xorb
jae
sti
inc
inc
lahf
add
pop
jbe
jecxz
nop
dec
les
jge
add
mov
call
imul
popf
add
jns
mov
sub
push
push
test
add
loop
subb
xor
pop
js
xor
pop
cmp
imul
out
inc
mov
pop
mov
daa
fldl
dec
in
jne
rol
mov
add
adc
addb
jae
add
pop
push
das
popa
sbb
loopne
in
add
jle
pop
js
enter
add
les
or
mov
xor
cmp
jae
mov
cmpsb
mov
mov
test
add
in
xchg
mov
adc
ljmp
pop
add
add
cmpl
jbe
push
js
inc
add
fmull
push
push
inc
push
push
or
scas
inc
pop
addl
mov
add
cmp
enter
std
rol
inc
add
fdivrs
adc
jle,pn
out
inc
pop
adc
mov
addr16
xchg
mov
int3
ljmp
stc
movsb
out
insb
jmp
pshufw
add
sbb
xchg
sbb
jnp
cmp
add
imull
cmp
inc
xchg
xchg
sbb
jecxz
dec
jle
adc
sti
push
add
jge
cmp
in
sbb
aam
flds
rolb
sub
mov
fdivrl
dec
icebp
cld
movsb
xorb
jecxz
mov
fldt
stos
out
into
sbb
mov
adcb
idiv
movsb
push
adc
push
pop
xchg
loop
iret
dec
rcrb
int3
mov
jg
inc
mov
cmp
jbe
sub
ja
adc
sbbl
outsb
xor
pop
pushf
clc
or
cmp
add
or
and
loop
mov
cltd
push
or
sub
add
push
mov
rcll
and
mov
jae
stos
mov
mov
inc
imul
cmp
add
add
mov
adc
aaa
push
call
cmp
sub
sbb
in
sbb
add
cld
xchg
sbb
stos
rclb
jbe
mov
aas
incb
sub
adc
pop
mov
daa
pusha
sbbb
pop
out
lcall
pushf
aaa
xor
push
sti
sbb
lods
out
or
cmp
dec
add
ss
add
jns
incb
sarb
jo
and
lahf
loopne
popf
jp
push
push
fstpt
hlt
and
pop
add
pop
aas
int3
or
adc
sub
aam
add
js
cmp
mov
call
in
pop
repnz
sar
push
ret
mov
push
jo
xchg
inc
aam
cmp
and
xchg
add
mov
add
sub
jmp
mov
and
adc
loopne
mov
add
out
mov
xlat
nop
sub
test
pop
inc
xchg
cmove
rolb
inc
pop
out
jl
andl
stos
adc
adc
adc
push
popl
lret
cwtl
bswap
dec
in
dec
ss
inc
or
add
sti
dec
adc
testb
jno
or
lds
cmp
push
push
jp
movnti
daa
mov
ljmp
or
dec
fldcw
rcr
dec
or
or
arpl
les
rcl
jno
add
pop
cmp
movsb
nopl
sti
pusha
into
cltd
daa
add
out
ret
push
add
jo
or
lret
cmp
repz
popf
mov
incb
push
inc
pop
xlat
scas
rolb
adc
add
dec
hlt
sahf
xchg
sbb
push
gs
and
fucom
or
add
cmpsl
cwtl
fadd
fdivrl
out
cmp
fadds
or
test
sahf
mov
inc
push
stos
add
pop
in
andl
call
add
inc
lock
loopne
xlat
add
push
inc
test
mov
fadds
inc
inc
addb
sti
add
push
gs
aaa
dec
out
dec
jle
xor
dec
add
push
ficompl
add
lds
out
stc
or
mov
out
les
push
add
cmp
std
push
test
push
mov
add
ss
aam
adc
jmp
movsb
add
cmp
add
pop
mov
mov
cld
addr16
or
add
pop
and
mov
or
js
or
lods
push
rcl
popa
add
ds
fbstp
xlat
in
adc
iret
cmp
xchg
lods
addb
aas
test
mov
sub
add
inc
pop
add
lods
xor
pop
add
push
or
cmp
loopne
or
push
pop
inc
add
add
jns
or
push
adc
cmp
add
fldl
fildl
stos
push
ret
cld
mov
imul
mov
add
shr
and
lret
add
js
mov
pop
push
and
loop
in
std
add
xor
fisttps
movl
aad
nop
sbbb
and
or
push
icebp
inc
data16
cli
addl
sub
or
jmp
mov
int3
xor
inc
cld
es
cmp
incl
xchg
xor
jmp
mov
hlt
jae
repnz
test
fstpt
out
mov
add
dec
data16
fdivr
imul
sub
xor
int3
call
jl
jo
mov
rcrb
cli
sahf
ret
jnp
ja
dec
dec
xchg
and
jl
mov
leave
cltd
add
jbe
fdivrs
mov
mov
or
cmpsl
add
test
subps
sub
adc
lret
stos
andb
jns
add
je
sub
or
cli
pop
add
sub
xlat
add
scas
shrl
dec
and
ja
je
loopne
jle
jmp
fadds
adc
mov
xor
inc
mov
shlb
insl
fmull
add
sub
fildll
inc
mov
xchg
daa
mov
cld
lret
mov
jp
push
jecxz
add
sub
scas
aas
pop
sub
fistl
jae
pop
test
and
add
fdivl
movb
mov
fnstsw
sti
xchg
add
dec
repz
mov
jno
loope
cltd
pop
xchg
push
sbb
fldt
add
pop
push
sbbb
lds
mov
add
stc
mov
lcall
cmp
jns
out
xor
jg
inc
leave
test
and
dec
add
addr16
sbb
push
adc
cmp
or
xlat
add
hlt
out
add
enter
enter
popa
cmpsl
gs
push
rorb
test
inc
out
xchg
add
xor
lds
pop
add
add
sub
fs
add
push
pop
outsb
ss
les
sbb
push
jnp
inc
add
xor
add
push
movsb
std
add
jmp
push
xchg
xor
add
repnz
out
rolb
sbb
call
aas
sub
enter
adcb
mov
mov
sahf
pusha
std
xchg
cmpsb
pop
add
data16
pop
dec
xor
clc
pop
add
loopne
fs
sbb
std
sub
das
nop
push
in
shrb
xorb
and
adc
push
add
xrelease
cmp
into
sub
stos
add
jbe
mov
add
xchg
mov
add
cld
xchg
fisttps
inc
push
lret
test
cmp
insl
fadds
mov
in
push
cmpsb
in
mov
testl
adc
jp
jne
add
into
int3
fists
or
mov
dec
and
je
nop
xor
add
mov
sub
and
fnstenv
push
in
mov
add
sbbl
mov
into
add
shrl
call
test
push
pop
addb
aaa
fwait
xor
shlb
add
arpl
aam
fdivrl
add
stos
pop
push
push
lahf
shlb
test
push
push
in
mov
cmp
mov
inc
pushf
push
pop
inc
int
ret
sbb
mov
ja
adc
pop
sub
fwait
str
std
xor
lahf
cmpb
out
lock
ret
push
xchg
cld
daa
shl
shl
inc
add
rcll
add
add
adcb
shr
or
je
add
in
mov
mov
cld
sbb
jae
aaa
adc
xchg
xchg
bound
mov
xlat
imull
inc
rcl
cmp
in
adc
ss
add
add
jo
pop
xchg
jno
xchg
fbstp
fisubs
jp
add
mov
and
pop
and
mov
dec
cmp
dec
jecxz
aam
dec
add
mov
lock
add
aam
subl
movsl
inc
into
jbe
dec
sub
in
add
mov
test
add
cmp
mov
out
mov
inc
jb
add
lock
cmp
movsl
ret
mov
mov
add
xchg
imul
cmpsb
sub
dec
xor
fdivs
adc
mov
cmp
pop
int
sbb
mov
cmpsl
movsb
loop
xor
mov
inc
mov
inc
decb
cli
out
add
jmp
roll
pop
xor
push
test
ret
and
jmp
sub
mov
bound
aaa
inc
cmp
imul
int3
sub
pop
or
mov
in
adc
add
bound
repz
outsb
ret
cmp
mov
xchg
push
jl
fs
test
pusha
aam
xchg
sbb
data16
jae
cmpsl
cmc
or
pop
pop
inc
push
sbb
lock
inc
in
add
mov
lret
xor
test
pop
das
or
aam
inc
rclb
push
movsb
cs
incb
dec
add
das
sbb
repnz
ret
cwtl
rolb
adc
sub
das
jl
pop
sti
push
xchg
mov
or
mov
push
pop
add
mov
push
sbbl
add
fnstenv
push
out
xor
jbe
aam
fiadds
shlb
test
std
pop
in
add
xchg
xchg
rcr
add
inc
pcmpgtb
dec
je
rorb
sahf
pop
ss
cmp
orb
scas
xchg
add
and
jge
xlat
mov
int3
sbb
fmull
out
cld
xchg
add
pop
xor
arpl
ret
adc
es
inc
enter
insb
inc
loopne
jns
add
push
mov
fwait
int3
outsb
pop
imul
adc
add
pop
sub
scas
jmp
dec
fistpl
in
sbb
inc
out
scas
add
mov
out
push
cmpl
adc
movl
jne
adcb
cmp
cwtl
xor
jbe
test
dec
test
loop
or
or
pop
scas
and
adc
adc
pop
mov
out
cmpsb
mov
jp,pt
mov
pusha
sub
les
pop
icebp
add
mov
dec
mov
rcrb
cmp
add
mov
mov
pop
jb
add
call
add
mov
jecxz
cmp
mov
repz
push
cs
movl
pushf
push
add
or
sar
stos
pop
adc
add
adc
clc
pop
mov
mov
shll
add
inc
jnp
daa
add
jp
adc
mov
inc
mov
outsl
add
push
or
adc
add
dec
pushl
lds
movsl
insl
ja
mov
add
cmp
jg
jb
add
xor
rolb
sbb
mov
inc
push
sub
add
cmp
xchg
aad
sti
repnz
jle
sub
xor
sbb
dec
mov
inc
enter
cmp
mov
jmp
call
movl
mov
in
add
std
jns
arpl
add
hlt
sub
cs
adc
cmp
add
andl
push
ss
push
inc
in
inc
cld
sbb
pushf
lock
nop
cmp
int3
push
cli
mov
pop
sbb
hlt
movl
stos
test
adc
xchg
adc
std
inc
faddl
scas
dec
sbb
or
add
and
dec
lods
mov
inc
mov
sub
icebp
xor
add
push
jbe
sarl
mov
lret
push
call
mov
jle
pushf
mov
xchg
daa
faddp
mov
test
push
jmp
cs
cmp
stc
out
ss
pushf
lods
dec
add
fists
ror
in
cmpl
cmp
rclb
add
in
lea
pop
push
iret
les
lds
pop
arpl
xor
test
cwtl
add
push
xchg
mov
sub
in
xchg
insl
adc
xor
add
call
push
orb
sbb
adc
add
into
pop
adc
jl
pop
mov
div
rcrl
mov
pop
xor
loopne
add
bound
movsb
adc
sarb
pop
add
jb
movsl
daa
std
icebp
iret
add
mov
add
loopne
in
inc
pop
mov
es
add
sub
ficomps
sub
sub
mov
into
gs
movsb
dec
aas
push
xor
ja
mov
and
add
or
sbb
mov
dec
iret
xlat
jno
inc
fldl
test
aad
jecxz
xor
xchg
sbb
lock
lcall
add
push
dec
cmpsb
hlt
jb
add
loopne
popa
add
xor
test
ljmp
pusha
out
cltd
lahf
mov
sbb
adc
nop
data16
cmp
xchg
or
lahf
push
push
cmpsl
call
in
push
adc
sbb
or
jbe
and
cmp
aas
sbb
int3
dec
push
inc
add
xchg
jo
xor
or
gs
jmp
cltd
lds
push
xor
enter
add
or
push
jnp
xor
fwait
inc
stc
add
sbbb
xlat
movsl
cmpsb
cmc
add
or
shll
ljmp
lods
add
shlb
flds
adcl
sbb
aad
sub
inc
rcl
jnp
or
je
sahf
xor
mov
push
sub
fiaddl
cmp
jl
add
mov
movsl
and
xlat
in
adc
mov
stos
jp
fnstenv
add
add
jbe
icebp
outsl
sbb
or
add
out
mov
outsb
orl
mov
jo
insl
dec
pop
add
mov
xchg
xchg
sbb
xor
orl
pop
mov
add
cmp
xchg
out
add
push
pop
xor
inc
inc
sub
adc
jecxz
cltd
shrb
ljmp
xchg
orl
icebp
push
loopne
add
stos
or
rorl
outsb
lods
stc
nop
inc
jno
add
pop
xchg
dec
and
push
or
mov
in
test
push
mov
lret
movsl
jle
fmull
add
stos
cmpb
add
push
dec
add
in
xlat
into
in
pop
sub
and
iret
dec
or
push
mov
inc
xchg
jo
jg
add
mov
dec
add
out
cli
add
pop
fistps
rcr
xchg
shrb
movb
add
je
and
xchg
add
loopne
jnp
movsl
xchg
enter
mov
cltd
mov
push
orb
mov
addl
icebp
js
cmpsl
mov
pop
push
pop
sbb
ja
push
lods
jmp
add
xor
inc
mov
pop
popa
adc
dec
pop
cmpb
and
jp
cmp
pop
cwtl
dec
mov
aas
out
add
adc
popf
jnp
fadd
push
insl
add
iret
mov
adc
lods
inc
push
rorl
mov
and
jno
add
icebp
mov
insb
pop
fcoms
add
push
in
jmp
xchg
pop
cmp
cmpb
pusha
pop
outsb
xor
mov
xchg
dec
inc
and
pop
cmpsb
out
push
rol
add
xlat
pop
or
sub
adc
out
sti
mov
xchg
sub
fmull
fimuls
scas
movsb
add
scas
inc
xor
hlt
add
sbb
pushf
push
sub
add
jne
cmp
js
xor
iret
add
sti
inc
jg
mov
adc
test
jg
add
repnz
fnsave
xchg
add
and
idivb
sahf
lret
dec
mov
arpl
add
pop
sbb
mov
psrad
jae
scas
push
push
pavgb
movsb
lcall
loope
pop
add
call
jle
add
imul
cs
int
ret
leave
add
push
out
inc
lcall
or
jmp
pop
ret
enter
mov
mov
push
das
cmp
add
sbb
out
sbb
aas
into
mov
jle
pusha
jbe
outsb
inc
xor
clc
out
cmp
mov
jp
pop
mov
bound
mov
imul
mov
push
subb
xor
into
cltd
inc
xlat
or
clc
fwait
das
int
push
xchg
fildl
add
add
lahf
sbb
cmp
loopne
pop
pop
add
pop
xor
lods
shr
pshufw
sub
and
push
fmul
jnp
push
xorb
or
mov
jae
sbb
out
pop
bound
push
pop
inc
or
loop
frstor
je
hlt
sbb
add
adc
add
mul
fiaddl
or
xchg
popa
mov
rorb
sbbb
push
and
fmuls
xor
pusha
xlat
add
add
andb
jno
mov
loopne
cmp
pop
xor
dec
lods
out
mov
ficoml
cmpb
inc
dec
sub
imul
or
push
aad
enter
cltd
pop
mov
pushf
add
and
in
out
mov
jne
add
and
fs
js
outsb
sbb
test
add
shl
add
xor
pop
ljmp
out
idivb
xchg
pop
scas
add
dec
jns
inc
in
inc
xor
push
mov
push
and
jmp
repnz
add
pop
dec
out
rorb
iret
nop
test
cmp
call
jp
lcall
push
popa
mov
scas
and
mov
ja
shl
cmp
cmpsl
mov
outsl
and
loopne
add
out
dec
rol
in
xor
add
inc
fcomps
movhps
jo
sbb
add
lret
or
call
cmpsl
aas
xchg
mov
cmp
pop
jns
add
adc
data16
mov
and
jo
inc
js
and
movsl
push
fcoms
popf
add
shl
dec
ljmp
repz
add
xchg
adc
cmp
mov
orl
xor
mov
sbb
add
jmp
in
add
inc
pop
and
cld
ds
and
lods
in
mov
movsl
ret
add
test
inc
pop
jae
xor
loopne
fisubl
cmp
add
popa
and
lock
pop
shlb
adc
mov
scas
cmpb
pushf
cs
add
cmpsl
imul
daa
and
mov
enter
pop
adc
aas
fstl
and
xor
pop
out
scas
insl
add
fdivs
xor
pusha
cmc
mov
rol
adc
aaa
pop
inc
cltd
adc
mov
mov
loop
inc
test
cmpsl
dec
cli
and
pop
dec
sti
dec
lods
inc
xor
lret
dec
loopne
std
inc
jns
nop
lret
adcl
into
and
inc
fdiv
pusha
jne
add
icebp
mov
push
cwtl
rorb
aaa
sub
mov
outsb
lcall
sbb
adc
in
hlt
add
and
out
loopne
add
jmp
cmc
outsb
sbb
dec
aas
pop
push
jbe
data16
add
inc
adcb
fwait
dec
cmp
add
mov
adc
mov
inc
mov
out
ss
cwtl
dec
add
callw
sub
mov
lret
fcoml
mov
lock
sbb
xor
rolb
mov
sub
cmp
fidivl
or
aaa
mov
push
aas
jl
out
pusha
pop
inc
add
adc
addr16
mov
mov
or
push
sahf
cmp
sbbb
movsl
adc
add
popa
ret
ret
inc
push
imul
lea
dec
lods
out
ljmp
adc
jge
mov
add
movb
jg
add
jl
add
lods
xchg
pop
scas
les
jae
or
lock
xor
ss
pop
and
pushl
mov
dec
orb
out
aas
icebp
popf
test
push
inc
sarl
mov
stos
and
add
pop
lock
push
xor
push
in
in
inc
cmp
roll
jmp
into
adc
add
lock
in
push
pusha
cmpsb
or
je
jge
xchg
xchg
movsb
inc
enter
add
aaa
mov
add
popf
mov
hlt
mov
call
fists
out
cmp
add
push
lcall
daa
stc
arpl
aam
mov
popf
sub
ret
lahf
gs
mov
adc
jbe
pop
scas
in
add
jge
inc
inc
and
xchg
inc
aas
xor
xchg
shlb
scas
add
cmp
push
push
movl
pop
push
and
enter
lds
push
subb
cld
add
jne
dec
add
adcl
add
push
xchg
xchg
add
dec
xchg
fadds
ret
lahf
push
outsl
or
fsubrs
pop
decb
jnp
add
insl
rcl
pop
jbe
pop
dec
int
pusha
add
lock
stos
xor
or
push
hlt
and
popf
xchg
scas
sti
in
sbb
test
mov
lock
add
lods
pop
dec
sbb
test
add
jno
in
push
add
sahf
push
lret
xor
popa
int
cld
add
roll
stc
jo
push
add
or
pop
pop
add
scas
jecxz
daa
ljmp
lock
jo
mov
cmp
sub
imulb
imul
add
add
add
arpl
mov
pop
add
fwait
push
sbb
jmp
lret
or
ror
xor
xor
imul
loopne
mov
addl
lods
sub
jae
adc
mov
cmp
sahf
std
shr
xor
adc
inc
sbb
rcl
xor
push
ds
mov
fsubrs
cmc
fidivrl
notb
nop
std
lret
out
cmp
jae
mov
xchg
mov
adc
mov
adc
insb
inc
inc
loop
repz
cwtl
add
push
icebp
in
rol
add
in
mov
pop
push
clc
add
cmc
mov
imul
cmpsl
add
fisubl
add
aam
fildl
xchg
fadd
mov
sub
lods
dec
js
rcrb
dec
inc
pop
dec
jmp
cmpsb
fiadds
inc
push
sub
lds
xchg
add
es
lret
js
enter
or
add
push
out
pushf
mov
add
and
jns,pt
add
lea
add
xor
push
jns
add
cmp
test
cmpsb
mov
mov
sub
rclb
inc
mov
cmp
cli
jb
mov
ja
cltd
test
mov
mov
loop
mov
repz
dec
push
aad
pop
cmovs
ja
add
loope
test
stc
add
jge
push
jo,pn
jl
pop
and
cmp
popa
mov
inc
out
icebp
sbbb
and
jae
lds
jmp
xor
fiaddl
sub
ds
call
mov
add
data16
fsub
je
mov
dec
add
inc
push
or
xor
add
cmp
test
mov
mov
cmp
pusha
adc
or
popf
scas
hlt
inc
jmp
mov
pop
mov
and
push
adc
lock
shrb
or
and
cmc
inc
jb
sbb
pop
xor
adc
add
fnstcw
dec
daa
in
jne
add
repnz
push
add
push
testl
jp
sti
lds
pop
outsl
mov
rcrb
inc
mov
add
in
pop
cmp
mov
and
xor
sub
dec
dec
cld
sbb
or
jmp
add
inc
mov
xor
mov
mov
cmp
xchg
mov
push
inc
add
and
pop
push
cmp
int
pushf
pop
sbb
mov
out
add
lods
fs
add
or
mov
sub
negb
cmp
push
cmp
mov
lds
cs
xchg
cmp
or
xchg
push
mov
sbb
push
or
cli
xor
and
mov
jp
lods
jge
xor
out
add
fdivrp
cmc
add
jae
mov
lret
jg
add
fdiv
add
sbb
outsl
jmp
fnsave
add
mov
jns
movsl
pop
sbb
pop
adc
cmp
sub
dec
fadds
call
jp
fidivrs
mov
leave
out
inc
jbe
mov
xchg
add
pushf
orb
cli
aaa
jle
mov
jl
jb
call
sbb
mov
sahf
push
pop
jae
and
jns
pop
into
shlb
dec
xchg
cmp
pop
adc
push
inc
lock
sbb
add
ss
or
push
lcall
fwait
jg
stc
add
ja
jb
mov
mov
nop
and
jno
or
in
aaa
inc
pop
mov
dec
mov
test
pop
stos
pusha
mov
and
sub
in
adc
jge
mov
insl
mov
test
stc
xchg
mov
or
mov
push
out
js
pop
or
inc
rclb
cwtl
jb
jns
mov
cld
mov
scas
addb
mov
xchg
cmp
jle
int3
add
fiaddl
roll
cli
xor
fs
mov
outsb
mov
loop
jp
std
mov
dec
adc
and
sbb
push
nop
jb
outsb
sub
sar
cmp
inc
shlb
outsl
icebp
and
add
test
jb
fldl
push
jp
sbb
test
ret
xchg
jae
sbb
test
mov
fisttps
mov
in
cmp
add
mov
sbb
dec
call
jno
ret
mov
insb
add
xchg
fcompl
mov
add
and
icebp
jno
daa
roll
or
cmp
ror
out
push
bndstx
and
or
inc
pop
in
fbstp
xor
cmpsl
pop
out
xor
add
add
in
mov
dec
daa
cld
dec
xchg
add
pop
mov
leave
cmp
add
mov
cmp
lret
add
repz
push
xor
rorb
inc
int3
insl
inc
mov
movsb
push
outsl
out
push
test
xor
add
stos
jge
add
fdiv
jno
jp
pop
add
push
and
cmp
push
dec
add
test
sahf
ljmp
out
popf
dec
movl
add
sbbb
xchg
xchg
adc
adc
and
insb
stc
cmp
sbb
rcrl
js
imul
push
pushf
lds
mov
add
pusha
mov
loop
mul
sbb
into
or
pop
cmp
insb
fbld
sbb
imul
dec
cmp
int
fnsave
out
int3
lea
push
test
push
add
mov
mov
cmp
mov
stos
ljmp
lahf
jb
cmp
mov
mov
xchg
iret
scas
mov
sbb
and
sub
xor
inc
icebp
cld
stc
pop
mov
daa
addr16
inc
mov
add
push
xchg
xor
es
ret
je
add
and
pop
add
push
andb
add
jl
clc
jbe
add
sub
add
stos
or
sbb
add
ljmp
jp
cli
inc
cwtl
lret
lahf
xchg
icebp
sahf
scas
rcrb
add
cmpsl
pandn
dec
add
mov
arpl
iret
movsb
aam
ljmp
dec
lret
pop
test
je
push
push
imul
add
fsubr
xor
pop
imul
xor
sub
or
adcb
mov
pop
add
lock
inc
pop
pop
imul
fdivl
cmp
push
in
scas
leave
test
sbb
pushf
jecxz
xorb
mov
sbb
mov
add
fcomip
pop
xlat
out
add
and
std
add
sbb
into
lods
push
adc
loope
adc
rol
out
add
pop
in
insl
popa
sbb
ret
sub
popl
add
jge
divb
jns
shrd
sbb
inc
push
push
mov
dec
pop
sti
cmp
sbb
sub
add
add
leave
lea
paddw
adc
adc
outsb
hlt
lret
add
pop
sbb
repnz
into
push
cmovge
add
fs
add
movsb
add
idivb
sbb
repz
cmp
jne
adc
mov
xor
mov
inc
pusha
cmp
dec
sub
cmp
add
or
aam
mov
cmpsl
lret
call
dec
arpl
jb
push
sub
sbb
iret
push
xor
cmp
pop
rolb
in
in
add
bound
in
or
pop
or
add
clc
lea
dec
out
pop
xor
addb
int3
or
cld
mov
aas
aad
push
push
sbb
add
push
insl
or
in
shrb
inc
or
lds
xor
dec
loope
rclb
gs
push
mov
jb
popa
jp
mov
push
sbb
pop
mov
loopne
pop
cmp
ret
out
mov
mov
repz
jge
shlb
and
and
mov
pushf
add
jle
jo
aad
lods
adc
dec
dec
sub
adc
xor
scas
lds
push
pop
xor
add
fisttpll
xor
in
mov
pusha
lahf
aad
add
sub
push
shlb
and
jge
add
fwait
clc
sub
fs
xchg
pop
loopne
xor
or
in
sub
test
pop
int3
add
adc
pop
pop
and
iret
loop
icebp
cmp
adc
aaa
xchg
cmpsb
daa
fmull
xor
pop
in
push
sbb
ljmp
push
xor
sub
int3
lds
stos
push
ret
repz
xchg
inc
fdivl
add
push
sti
pop
mov
mov
or
jo
or
addr16
mov
inc
ret
jae
lahf
add
adc
fisttpll
sub
push
sarb
cs
jl
xlat
push
or
es
stos
mov
add
or
fstps
add
enter
dec
movsl
xchg
xor
popf
data16
xchg
cltd
sbb
xor
sbb
mov
movsb
sub
bt
and
leave
rclb
in
cmp
pusha
test
mov
insb
lahf
inc
pop
xchg
call
jno
xorl
cltd
dec
pusha
enter
adc
xorb
fs
ljmp
and
push
add
jle
lahf
or
jno
push
xchg
mov
fcoms
sub
orl
sahf
iret
rolb
adc
add
jle
hlt
aaa
mov
idivb
outsl
adc
ret
testb
dec
or
cld
mov
adc
pop
add
leave
ss
add
sub
ret
push
add
dec
and
icebp
test
outsl
shrl
repz
adc
cld
int3
movsb
and
nop
lock
ljmp
gs
mov
xchg
movsl
mov
jmp
xchg
and
xchg
cmp
das
mov
scas
add
xchg
enter
mov
push
roll
jmp
add
ss
addr16
mov
pusha
pop
xorl
mov
int3
push
xor
add
add
xchg
push
xchg
jns
lock
faddl
push
rorb
sbb
or
les
icebp
andb
pop
add
adc
hlt
adc
mov
and
and
loopne
inc
or
lock
add
pushf
add
enter
mov
aam
cmp
icebp
add
mov
push
inc
add
push
test
xchg
stc
mov
adc
mov
movsl
push
add
pop
mov
sub
ret
add
pop
rcrl
test
add
push
int
jb
sub
inc
mov
mov
mov
mov
xchg
push
movsb
and
mov
pop
jno
lods
out
mov
jnp
scas
mov
add
test
add
mov
xchg
sub
sbb
rorb
aad
jg
cmp
popf
arpl
jmp
sub
pop
push
pop
out
shl
outsl
sub
sbb
xchg
pop
sarb
pop
cmc
nop
add
mov
push
in
cmp
xor
es
mulb
ljmp
adc
jae
les
sbb
add
xchg
es
js
sbb
push
int3
and
in
into
imul
lcall
aam
dec
and
dec
sub
add
jg
das
dec
jmp
aaa
cmp
xchg
iret
jae
jle
mov
adc
mov
call
cmp
push
mov
les
cld
jne
leave
ds
popa
scas
dec
push
cmp
xor
pop
rclb
faddl
lock
pushf
mov
call
leave
movsb
xlat
xorb
add
cmc
adc
mov
mov
add
mov
les
lods
push
mov
cs
adc
push
fwait
aad
sbbb
add
pop
dec
xchg
add
mov
push
in
lea
pop
push
insb
test
je
cwtl
ja
sub
mov
clc
dec
mov
inc
lret
sbb
rorb
arpl
lock
and
inc
or
mov
imulb
cld
mov
add
or
mov
sub
loopne
or
stc
jne
add
rorl
mov
call
inc
mov
inc
jnp
add
scas
das
pop
add
test
mov
add
xchg
mov
add
ja
add
rcrl
and
shr
fbstp
mov
mov
sub
adc
movsb
push
enter
add
and
mov
sbb
add
add
insb
movsl
cmp
scas
add
imul
call
mov
xchg
sbb
mov
cmp
pushf
mov
lcall
add
test
cld
imul
sub
pop
aad
testl
xchg
xchg
cs
inc
sbb
jmp
out
enter
cmp
adc
mov
add
int
xor
pusha
rorb
inc
add
adc
xchg
xchg
out
and
jle
add
add
rcll
dec
dec
add
jns
insb
and
xor
adcb
daa
orb
rolb
sti
sub
add
push
call
push
hlt
pop
sub
mov
fldl
push
fs
pop
inc
mov
push
add
dec
push
ror
add
or
inc
int
outsl
add
sti
sahf
lock
push
add
adc
sub
dec
pop
cmp
pop
dec
push
adcb
pop
add
lods
mov
rcrb
mov
cmp
xor
add
mov
jle
inc
mov
shll
jmp
jecxz
lahf
inc
mov
cli
sbb
pop
add
jp
dec
push
inc
data16
xchg
or
pop
or
fwait
shlb
jae
add
jo
fwait
jno
xchg
fstpl
fxch
mov
or
lds
add
scas
jne
stc
adc
add
insb
pop
mov
push
je
inc
xchg
jmp
in
daa
jo
jo
add
pushf
clc
and
pusha
jg
mov
mov
rorb
and
outsb
int
sbb
mov
scas
xor
add
call
push
inc
mov
gs
push
push
xchg
cmp
or
clc
push
repnz
and
cmp
movl
or
loopne
rcrb
stc
dec
dec
and
addl
or
push
mov
jmp
mov
add
cmp
cld
jmp
shlb
jbe
loopne
pop
inc
jge
adc
in
insl
pop
xor
jne
bound
or
addr16
orb
dec
add
repz
xchg
mov
dec
add
mov
jmp
les
shll
dec
mov
ds
adc
mov
sub
adc
stos
mov
add
push
mov
pop
dec
popa
stos
mov
dec
scas
mov
mov
rclb
loopne
mov
pushl
mov
mov
shl
push
and
xchg
add
add
jne
cld
dec
aad
pop
sub
ret
cs
sub
push
fdivr
xorb
add
movsl
push
punpckhwd
xor
mov
push
sub
call
jg
andb
mov
pusha
sub
dec
adc
pop
lahf
rcrb
jl
add
fs
sbb
adc
rcrb
ja
add
test
jle
lods
scas
jbe
mov
mov
ja
add
push
or
adc
xchg
push
add
enter
mov
cmp
push
add
subb
mov
xor
xor
cmp
pop
ja
out
add
jle
pop
pop
or
sbb
or
lret
arpl
jo
pop
movsb
aas
and
popf
repnz
fwait
mov
cmp
int
and
xor
xor
addb
daa
lods
mov
and
add
bound
in
push
mov
pop
push
add
xor
leave
mov
out
fsubs
jo
pop
sbbb
aam
rcll
repnz
cmp
and
mov
push
sbb
stos
push
es
push
push
xor
add
inc
add
sbb
and
pop
ficomps
xor
cwtl
push
daa
iret
xor
jns
mov
mov
pushf
mov
and
add
mov
adc
jge
sub
and
movb
jo
subl
in
push
pop
and
ret
in
ss
push
out
outsl
mov
test
test
or
insl
jno
pop
fstps
sbb
inc
adc
and
jne
stc
nop
sub
push
nop
test
rorb
inc
cmpsb
sbb
push
xor
roll
adc
sub
adc
add
call
out
cmp
or
jb
pop
decb
pop
in
orb
dec
jae
imul
add
jg
pop
cmpsb
sub
idivb
cmp
add
mov
xchg
sbb
mov
insb
adc
mov
rcrb
mov
inc
add
cmp
lds
int
in
int3
bound
imul
xor
push
enter
add
jae
cli
add
xchg
scas
add
mov
cs
and
cmp
dec
inc
out
jge
add
cmpsl
xorb
dec
out
loopne
bound
xchg
lds
and
push
outsl
or
movsl
push
sbb
jg
xor
push
scas
nop
sti
push
lret
bsr
lret
jge
mov
jge
add
inc
ss
fstpt
pusha
add
fdivrl
cmp
orb
je
push
iret
nop
rolb
lock
add
xor
add
fildl
xchg
xor
stos
decl
and
arpl
add
sub
loop
es
cmp
in
add
subb
mov
movsb
push
orb
lea
scas
mov
or
pop
fwait
mov
data16
jno
mov
je
dec
add
jbe
xchg
add
push
popa
imulb
ss
rolb
add
mov
jno
int
xor
push
add
ljmp
nop
pop
jmp
nop
and
fcomps
adc
sub
jmp
or
jo
add
xlat
xchg
xor
int
dec
into
add
pop
loope
jnp
add
mov
jns
add
pop
les
mov
sbb
test
xor
stc
mov
xor
or
jg
test
jae
add
xchg
xchg
and
js
cmpsb
push
rcrb
mov
jmp
and
xchg
and
hlt
dec
push
ret
fiaddl
pop
mov
pop
add
fs
cld
adc
scas
or
or
sub
insl
jmp
lret
daa
enter
mov
aas
mov
scas
jno
mov
cmp
les
adc
adc
xor
add
xor
xlat
add
mov
lahf
and
jge
xchg
sti
pusha
imul
out
shl
dec
and
add
pop
add
xchg
inc
sbb
daa
shl
pusha
mov
xor
adc
mov
add
icebp
dec
xchg
xchg
dec
mov
pop
test
push
add
testb
mov
push
in
and
add
out
cmp
add
es
insb
add
sbb
add
jge
dec
cmp
popa
jmp
push
jbe
add
add
add
and
call
stos
cs
xor
and
movsb
cli
inc
adc
inc
add
push
out
sub
sbb
cmc
mov
adc
lahf
add
mov
or
js
stos
addb
mov
push
arpl
push
inc
cwtl
add
call
cwtl
aas
stc
and
cmc
pop
adcb
cmc
lret
xchg
dec
aad
pusha
pop
pop
cmp
loopne
inc
shrb
cmp
sub
jmp
cli
ljmp
in
test
addr16
adc
cltd
insb
add
aaa
sti
xor
xlat
jmp
out
cmp
xchg
ljmp
sub
fistl
lods
into
inc
adc
xor
add
or
and
xchg
push
imul
mov
imul
addr16
nop
add
adcb
outsl
lea
adc
pop
bswap
dec
and
loop
jno
stc
sub
dec
and
mov
iret
adc
movsl
pop
push
sub
adc
push
and
add
pop
cmp
push
jbe
test
repz
mov
xor
dec
lock
add
ds
or
scas
lahf
cmp
clc
add
gs
mov
add
cmpsb
hlt
call
jle
add
add
mov
adc
jo
mov
sub
mov
add
movsl
inc
dec
sahf
cmc
rclb
dec
add
in
dec
and
aas
jns
neg
xor
xchg
mov
ret
popf
sbb
je
inc
xor
sti
pop
or
add
enter
mov
pop
je
mov
add
push
cld
and
js
js
cmp
hlt
in
imul
jmp
pop
push
add
mov
lock
or
xchg
fiadds
addr16
movlps
lea
shrb
mov
std
mov
cmpsl
into
sbb
icebp
out
repnz
inc
jecxz
andb
fmuls
add
ljmp
or
xchg
dec
fldenv
sahf
pop
es
add
lret
sti
adc
push
or
shrl
repnz
xchg
add
jmp
sbb
in
subb
mov
sbb
or
add
adc
cltd
add
xor
insb
fwait
add
les
mov
fidivl
xor
mov
jbe
push
mov
mov
sbbb
add
cld
xlat
dec
int3
add
sbb
mov
lcall
fiadds
insl
dec
out
mov
xchg
data16
sti
add
or
mov
xchg
repnz
lret
push
xor
and
incl
inc
mov
rorb
aad
and
cmp
ficoms
jl
cmp
and
add
xchg
mov
add
out
test
out
add
add
stos
push
fistl
sub
pop
add
clc
fwait
addr16
loope
test
jmp
cmp
lret
add
mov
mov
adcb
xchg
fs
mov
hlt
loop
sbb
dec
push
movsb
filds
add
jp
add
jle
add
jbe
add
or
mov
sub
mov
mov
add
insb
andb
add
stc
xor
jo
add
das
test
adcb
flds
jae
fsubrl
or
xlat
cmc
adc
das
add
js
dec
jo
in
out
aas
outsb
inc
pop
xor
aaa
shll
out
les
adc
jnp
cwtl
mov
lcall
inc
xchg
jmp
xchg
jne
jp
mov
lahf
pusha
pop
outsl
and
stos
or
sbb
jae
sub
sub
dec
fcompl
jb
pop
jne
xchg
cmp
xlat
or
in
mov
cmp
push
xchg
pop
sarl
out
int3
test
outsl
and
add
push
into
dec
mov
hlt
xor
loop
rep
lock
mov
mov
push
ljmp
push
test
inc
loopne
inc
sbb
or
jo
pop
add
jno
sbb
into
clc
pop
xorl
add
rcl
les
mov
add
adc
movsb
cmp
xor
add
adc
pop
jl
sbb
inc
insl
jae
push
add
adc
sahf
pop
outsb
xchg
sub
popf
lock
addb
sbb
add
in
xchg
add
lea
mov
or
dec
aas
add
test
mov
jl
xchg
pop
jmp
add
xchg
sub
fcmovnb
sub
add
push
add
xlat
stc
dec
imul
lock
mov
inc
cmp
xchg
xchg
add
clc
jp
mov
lock
cwtl
pop
inc
mov
push
ret
gs
inc
add
mov
popf
mov
inc
push
fwait
repz
in
adc
lcall
ret
cmpsb
sbb
add
jl
push
push
imul
or
jno
stc
test
mov
cmpsb
enter
jb
mov
in
je
sbb
adc
sarb
add
mov
jno
and
cmp
pusha
mov
xchg
mov
dec
add
out
pop
aas
cmp
subb
inc
pop
cmp
or
loopne
daa
inc
add
in
sbb
call
mov
out
pop
and
aad
push
shr
js
lea
cmc
faddl
xchg
jbe
enter
repnz
xor
inc
add
mov
imul
jo
xchg
and
aad
stc
cltd
pop
sbb
or
add
jge
jmp
pop
or
fldcw
call
iret
push
cmpsb
scas
mov
test
xorb
call
test
scas
add
add
repnz
mov
mov
adc
xorb
mov
jo
pop
leave
sub
mov
pusha
scas
push
cmp
fiaddl
cltd
cs
mov
ret
loopne
test
push
movsl
std
imul
fimull
add
pop
mov
rolb
inc
nop
mov
dec
and
mov
es
outsb
sti
push
xchg
inc
adc
push
dec
add
mov
xor
dec
fimull
ljmp
adc
enter
paddsw
cmp
sub
aaa
call
adcb
stos
jmp
das
out
mov
lret
iret
pop
fstpl
push
add
stc
je
push
repz
loop
and
shl
add
js
insb
inc
add
jp
jl
add
adc
popf
adc
stos
sbb
dec
outsb
mov
cmpsb
sbb
mov
lods
sbb
xor
fsubr
inc
inc
jle
push
fildll
mov
jne
inc
nop
and
add
dec
xchg
cld
push
and
dec
and
dec
jbe
push
add
mov
sbb
add
jmp
jp
hlt
dec
sub
sub
ds
rol
adc
add
ficompl
dec
inc
nop
push
jecxz
test
xor
mov
cmp
add
sub
inc
pop
movups
dec
adc
push
adc
or
ljmp
add
movsl
scas
repnz
stc
ljmp
mov
dec
sbbl
jo
add
xor
inc
cmp
sbb
inc
sahf
add
inc
fwait
out
subb
add
lret
jno
lea
js
add
fsubl
sbb
add
std
repnz
sub
mov
jle
pop
cli
add
or
xor
add
add
xchg
mov
daa
cmp
pop
add
ss
std
cli
lret
add
pushf
push
add
dec
cs
fidivl
cmpsl
arpl
add
mov
cwtl
std
ret
adc
sbbl
add
and
testl
and
int3
mov
pop
sbb
test
fildl
imul
push
enter
addr16
cmpsb
daa
jnp
cmpb
and
movsl
sbb
orb
xor
cmp
lret
shrl
jae
aas
pushf
ja
adc
clc
push
cmp
jle
pop
shrl
daa
sbb
leave
out
add
test
xchg
pushf
and
inc
xor
mov
add
out
ja
cmp
mov
mov
or
into
jno
xor
xor
ja
scas
mov
lahf
fisttpl
and
mov
and
and
mov
push
adc
and
nop
mov
push
in
es
mov
imul
xchg
add
and
pop
dec
mov
pop
sbb
fldl
jbe
add
mov
cli
add
xor
cmp
mov
add
sub
prefetchwt1
push
xchg
add
xchg
fadds
jl
popa
in
sub
iret
sub
add
orb
addb
and
testl
loope
inc
cmpsl
add
in
addb
fs
out
push
jmp
jle
inc
insb
mov
adc
push
call
add
add
cwtl
xor
and
inc
push
pop
js
add
pop
in
add
mov
in
lahf
aaa
sbb
lods
jl
jp
xorb
xchg
inc
mov
scas
mov
xchg
test
add
cmc
sub
pop
xchg
and
mov
jno
jl
add
mov
popa
mov
mov
lods
fiaddl
cmpsl
cmp
sbb
scas
jne
add
push
sub
lea
loop
pop
cmp
or
and
nop
xadd
inc
push
push
xchg
pop
mov
add
sbb
out
xor
push
add
xlat
cltd
int
sub
or
mov
sub
xchg
and
sbb
dec
add
jecxz
repz
lea
add
mov
xchg
leave
or
mov
popf
and
cmp
inc
rolb
ljmp
pop
mov
sbb
std
mov
repnz
pop
or
jnp
addb
cmp
bnd
and
or
pop
test
xchg
pop
in
add
or
adc
mov
push
aas
shlb
inc
hlt
add
mov
xchg
jle
cmpsb
movsl
lock
push
mov
inc
addb
adc
dec
ud1
jp
pusha
cltd
ret
inc
add
adc
int3
insb
mov
in
push
add
and
dec
xchg
addr16
push
cmp
clc
mov
add
dec
jecxz
or
rorl
sar
clc
data16
cmp
loopne
sub
dec
push
addb
dec
movsl
sbb
xor
jns
movsb
fmul
sub
lds
mov
cli
popa
lahf
ja
fisttps
rcrb
add
mov
insb
xchg
int
lods
jo
mov
out
jp
pusha
test
adc
mov
add
or
pop
aas
hlt
jo
add
mov
inc
movsb
or
aaa
das
add
mov
pusha
lea
and
in
cld
cmp
incb
pop
imull
xchg
popf
and
push
add
pushf
xor
enter
add
mov
int
das
rclb
in
out
add
divl
push
xor
or
or
pop
dec
inc
aaa
add
jo
jp
sbb
dec
ficomps
xchg
push
arpl
daa
jg
dec
push
and
xor
fildl
lods
push
sbb
dec
iret
sub
mov
scas
xor
cmp
mov
push
stos
inc
div
sbb
and
sbb
push
movsb
rclb
sub
xor
ds
addb
call
push
cmp
inc
add
inc
mov
push
sbb
mov
xchg
pop
loope
xor
bound
inc
popf
clc
aaa
ja
cmp
int3
addb
pop
mov
in
jl
adc
push
sbb
push
adc
add
dec
ja
xchg
loopne
inc
xchg
add
sahf
aam
dec
hlt
cmc
jg
add
xlat
in
fxch
pop
daa
fs
or
mov
add
pop
in
cmp
or
sbb
movsb
or
fs
sub
movsl
add
gs
and
xchg
cli
xchg
add
sub
xchg
mov
rcll
pop
xor
add
inc
rcrl
cld
vdivps
jl
insl
pop
stos
bound
imul
mov
xchg
jnp
pop
pusha
es
hlt
nop
adc
adc
add
int
sahf
xor
add
dec
inc
aas
std
rcr
push
add
mov
dec
fstpt
cmp
pop
add
sbb
movsb
add
or
addb
pushf
sarb
fiaddl
push
xor
fmuls
add
repz
jle
mov
test
and
cmp
mov
imul
add
mov
fidivs
lcall
jo
add
add
std
int3
jmp
xchg
add
sbb
out
repz
aaa
imul
jnp
add
sub
lret
popf
add
and
repnz
dec
and
movsl
xor
scas
ficoml
leave
lods
jo
mull
rcrb
js
dec
add
mov
pop
cs
inc
sarb
add
lret
insl
aam
or
fisubl
xchg
push
test
in
add
mov
add
iret
mov
rcl
mov
xchg
test
in
ret
psrlq
add
popa
dec
jmp
add
sub
jnp
ss
cltd
mov
scas
nop
mov
add
pop
add
js,pn
push
or
mov
insb
add
arpl
add
jmp
test
push
jge
pusha
xchg
push
add
and
lret
loopne
push
pop
add
test
int
bound
add
in
or
adc
jg
fdivrs
sbb
incl
cmp
add
call
or
pusha
pusha
mov
lahf
mov
push
mov
push
push
inc
push
out
add
mov
lret
xchg
testb
adc
dec
or
leave
push
pop
adcl
mov
add
cwtl
int3
testb
lret
fwait
iret
and
in
dec
cs
jle
add
cvtdq2ps
stos
adc
add
les
add
lahf
dec
das
sbbl
cmp
pop
jp
psubusb
xchg
add
filds
fnstcw
or
test
xor
test
add
in
add
loope
adc
inc
xor
cmpsl
call
call
add
or
xor
inc
test
adc
push
icebp
add
push
sub
rclb
adc
icebp
and
pushf
mov
incb
inc
add
adc
call
push
in
int
push
loop
pop
daa
rcr
hlt
aam
shlb
popf
addl
inc
mov
jp
jns
add
inc
lock
mov
add
xchg
stos
xlat
mov
punpckldq
add
ret
cmp
sub
addl
pop
shrb
xchg
push
adc
clc
pop
je
mov
sarb
testl
test
iret
lahf
pop
in
or
jnp
or
test
call
js
mov
pop
jo
dec
sarl
adc
or
fadd
xchg
int
ss
sahf
das
mov
addr16
nop
or
jecxz
add
mov
sub
in
jge
mov
insl
mov
jno
pop
sti
jmp
jae
testb
fiaddl
imul
shrb
fwait
bound
ja
push
es
cwtl
add
sbb
and
add
pusha
shl
or
add
xchg
pop
inc
and
inc
mov
push
std
xchg
dec
pusha
sahf
xor
out
mov
das
xor
push
insb
pop
add
rol
loopne
ljmp
push
push
push
cmpsl
pop
or
or
add
orl
add
adc
clc
fcmovnb
insl
std
pavgw
jno
jge
pop
push
stc
add
mov
sarl
xchg
dec
or
arpl
pop
jp
jg
add
push
lods
ss
dec
mov
lea
or
add
pop
mov
add
adc
pop
test
ljmp
push
addr16
fildll
cwtl
push
in
movsb
push
cmpl
cmp
jne
aaa
jb
add
add
insl
paddb
mov
adc
jl
lahf
sbb
adc
fstps
in
hlt
mov
mov
dec
femms
xchg
and
sbb
xchg
inc
adcb
sub
test
adcb
pop
adc
pop
pop
ljmp
sbb
add
sbb
add
pop
adc
mov
imul
jb
jg
dec
and
mov
and
add
jbe
mov
fdivs
shlb
pop
das
xchg
test
fldcw
inc
push
punpckhwd
inc
lods
sahf
adc
jb
mov
sbb
out
sub
add
bound
sub
arpl
sub
adc
out
mov
pop
jne
pusha
icebp
and
repz
add
addb
lock
insl
cmpsb
xor
xor
cmp
mov
hlt
sbb
aad
loopne
pushf
sbb
outsl
pop
cmp
jno
lds
or
mov
mov
sbb
fs
mov
add
call
pop
xor
pop
stc
add
add
sar
leave
sti
add
jo
mov
push
test
adc
test
mov
mov
add
xchg
mov
std
loopne
xor
push
aad
icebp
mov
or
xor
filds
fdivrs
mov
or
lret
sbb
lret
mov
push
leave
in
inc
inc
lock
adc
cmp
rcll
pop
dec
adc
fneni(8087
mov
cmp
xchg
insb
lahf
inc
sbb
add
inc
jle
fwait
inc
add
in
xor
sbb
sub
jp
cmpsb
pop
push
fildll
imul
test
pop
cmpl
enter
inc
int3
bound
jne
movsl
inc
or
clc
sbb
or
loop
add
ret
nop
adc
into
mov
inc
lea
add
lahf
xor
mov
je
mov
cwtl
daa
das
movsb
pop
add
int
adc
inc
iret
stos
xor
ss
add
pop
mov
outsb
out
fiaddl
mov
je
inc
jg
inc
test
mov
inc
ficoms
push
int3
and
or
mov
jl
add
mov
fimull
inc
pop
ds
add
pushf
and
ret
nop
push
scas
test
dec
bound
aaa
and
and
fcoml
inc
adc
sub
fwait
aaa
adc
call
adc
sbbl
inc
cmp
push
leave
lret
test
sub
cmp
ja
aaa
xor
or
or
add
add
sbb
pop
popf
clc
enter
sub
mov
cmp
mov
add
ret
mov
insb
fs
sub
pop
pop
sub
pop
ljmp
push
sti
pop
ss
stc
dec
sub
scas
je
push
icebp
add
in
lds
roll
sub
jl
pop
fs
scas
cli
sub
mov
jne
xchg
cmp
inc
xlat
test
cmp
movsl
pop
sub
arpl
popa
sub
push
inc
xlat
push
mov
mov
addb
mov
or
sub
jne
outsl
scas
in
pop
stos
cmc
cmp
int3
or
aam
nop
add
adc
cltd
shr
sbb
rcl
and
lahf
xchg
or
sub
scas
inc
das
dec
jae
add
push
dec
lcall
scas
xor
cmpb
loope
mov
shrl
arpl
or
pop
enter
bnd
mov
cmp
ret
xchg
and
pop
inc
pusha
jae
sbb
call
sbb
pop
pop
std
addb
fucomi
cli
pop
scas
mov
inc
pop
xlat
or
test
mov
pop
push
mov
sbbb
jmp
testl
test
int3
jle
add
addb
add
mov
loop
lret
stos
sub
pop
add
sbb
push
adcl
xorl
arpl
movsl
sub
pop
dec
testl
mov
cmpsb
add
mov
movsb
add
and
loop
jecxz
in
xchg
dec
pop
sub
cmp
mov
dec
add
or
mov
into
cmc
mov
jl
imul
xchg
pop
adc
das
cs
add
fcompl
in
add
and
adc
add
sub
push
test
decl
add
xor
je
add
xchg
lret
push
ljmp
dec
scas
jmp
mov
add
sti
cmp
mov
jne
mov
push
adc
ss
xchg
mov
jns
adc
cmpsl
add
lret
add
mov
addb
sbb
xchg
jnp
add
pop
je
lea
dec
loop
lret
mov
sbb
mov
clc
repz
xchg
popa
lea
lods
mov
add
ss
jecxz
in
add
das
shll
neg
mov
mov
jg
sub
jno
add
xchg
mov
push
pop
pop
pop
jne
ja
mov
push
xchg
loopne
cmpb
roll
push
or
repnz
and
in
rorb
adc
in
pop
lods
xor
adc
inc
arpl
out
mov
mov
dec
xor
adc
and
iret
adc
inc
sub
mov
imul
jle
mov
inc
and
insl
lock
notl
orl
dec
into
les
cmp
mov
dec
popf
add
adc
sbb
inc
int3
sysret
sbb
lret
sarl
cmc
outsl
je
insl
call
sub
cli
hlt
loop
or
pop
sbb
nop
insl
mov
rcll
or
stos
mov
pop
aaa
jg
loopne
out
push
fidivl
push
addb
mov
leave
jns
mov
movsl
add
rcrb
add
jbe
and
fst
dec
push
sub
add
push
shll
sbb
loopne
xchg
mov
js
add
xor
sub
ja
add
sub
ret
push
jbe
pusha
mov
push
jge
xchg
add
lock
testb
std
dec
dec
dec
shl
add
daa
dec
push
icebp
xor
inc
addb
cmpsb
add
stc
push
sbb
xor
or
push
mov
mov
add
jp
dec
push
ret
lcall
and
mov
or
addb
mov
push
fstp
in
push
int3
loopne
add
fsubl
pop
jge
jns
push
add
and
or
add
and
push
pop
cmp
lahf
sbb
and
std
outsl
jb
jno
clc
test
add
pop
inc
add
out
sbb
pop
es
mov
shll
xor
mov
add
dec
mov
fsubrl
add
mov
in
xchg
inc
add
push
or
addr16
jae
cmp
lods
imul
and
xor
mov
dec
and
aaa
inc
adc
push
sub
push
pop
cmp
aas
loope
fidivs
add
cmp
js
cld
mov
rorb
or
mov
mov
dec
rorl
call
mov
sbb
xchg
pusha
cli
push
loop
sbb
add
sub
pop
mov
inc
cmp
and
inc
jno
add
movsb
push
push
fwait
pop
jmp
fstpt
scas
mov
pusha
add
push
jp
rcrb
dec
mov
mov
add
out
out
test
dec
push
jo
test
add
jo
and
cmc
jno
enter
xlat
cmp
out
loope
clc
mov
out
daa
bound
aad
mov
xchg
dec
into
jnp
jbe
cmp
or
lock
pop
lods
adc
add
jmp
aas
stos
mov
sbb
add
lret
cmp
cmp
xchg
xchg
jae
into
popa
cmp
xchg
mov
mov
sub
and
jg
jo
or
or
jl
adc
mov
insl
rorl
out
or
out
add
add
nop
jg
sbb
sbb
mov
cmp
lea
cmpsl
adc
rcrl
in
xor
add
or
out
icebp
mov
add
mov
mov
add
xor
and
pop
incb
mov
pop
add
xchg
mov
push
add
lea
sbb
dec
popa
movsb
pop
clc
jle
xchg
adc
mov
pop
shrl
add
cmp
add
xor
sbb
and
and
ja
mov
mov
aas
ds
inc
lret
ds
mov
sub
loope
mov
ffree
fs
stos
nop
clc
mov
shlb
mov
lea
dec
leave
mov
xchg
int3
cmp
pop
add
rcrl
andb
sahf
loopne
inc
mov
mov
push
xor
mov
mov
inc
mul
fsubrs
add
lds
xor
jmp
rolb
add
mov
and
and
movb
testb
cmp
and
addr16
and
aad
bswap
cmpsl
xchg
stc
and
add
xchg
mov
push
sub
nop
xor
lret
add
cmp
and
xorb
jne
aas
out
fdivrl
pop
shrb
push
jmp
jecxz
add
test
add
mov
push
stc
add
ret
or
push
aas
fadds
pop
lret
sbb
or
out
fs
adcb
jmp
mov
stc
fwait
add
mov
sbb
sub
fs
fisubs
shrb
mov
xchg
loopne
jmp
push
sbb
pop
fs
mov
sbb
popf
fnsave
add
clc
push
shl
cmp
std
add
xor
outsl
andb
jo
pop
xchg
sbb
adc
sbb
dec
jne
adc
btc
imul
rolb
pushl
mov
mov
cmp
jbe
add
ljmp
xchg
xorb
sar
cmp
cmp
test
cmp
or
int3
push
inc
cmp
or
test
xchg
and
ja
or
dec
mov
int
or
sub
cli
sbb
dec
pop
fdiv
push
pusha
stc
xchg
mov
out
stc
add
daa
add
jno
dec
dec
lahf
enter
or
mov
xor
mov
mov
mov
sbb
lret
pop
add
or
sbb
or
cmp
aad
push
mov
int3
add
fildll
lret
add
mov
insb
insb
inc
cmp
add
pushf
inc
and
pop
xchg
mov
add
pop
je
repz
outsb
mov
int
push
andl
stos
dec
testb
out
call
inc
js
xor
loope
pusha
gs
cmc
xor
push
and
adc
addb
lods
addr16
cli
mov
arpl
xchg
in
into
xlat
pop
add
rcr
shlb
adc
add
add
adc
sti
or
in
add
ljmp
xchg
insb
add
lret
cli
mov
lcall
fs
adc
xor
rcrb
scas
stos
pop
fistpl
sahf
and
add
mov
sub
or
push
int3
xor
add
or
mov
push
loopne
cmpsl
add
sub
mov
mov
or
aas
stos
inc
mov
xor
add
loop
adc
jae
xorl
aaa
add
add
icebp
daa
add
mov
add
cmp
aaa
daa
flds
fs
sbb
movsb
xchg
push
scas
pusha
or
pop
xchg
push
sbb
fadd
and
cmp
je
daa
sub
pop
popf
mov
mov
cmpsl
in
cmpb
add
jae
inc
aas
fs
cs
popf
add
fadd
addb
push
rorl
add
sbbl
xor
out
add
in
xor
push
adc
popl
xchg
lret
test
repz
xchg
cmpb
xor
jbe
xchg
lds
clc
outsb
sbb
and
loop
shl
add
jle
addl
add
js
or
fistpll
push
addl
cmp
movsl
arpl
stos
stos
push
fidivrs
roll
stc
push
jo
sbb
mov
mov
cs
mov
pop
test
mov
cli
cmp
imul
dec
aad
jecxz
and
push
push
arpl
lahf
cmp
call
stos
mov
add
cwtl
cmp
pop
mov
add
shll
cli
or
cmp
xor
mov
adc
lret
movsl
inc
movsb
and
or
mov
pusha
mov
cmp
jmp
sar
xorb
loopne
mov
pop
add
insl
stc
fs
in
mov
mov
shlb
pop
xorb
mov
out
sbb
cli
jne
add
dec
dec
cmpb
cs
lods
xchg
push
add
sbb
fldl
cmp
xchg
sbb
push
push
adc
push
jae
andb
das
cmc
fs
xor
push
adc
or
pop
pushf
xlat
add
sub
in
lahf
jmp
ljmp
xor
or
push
sub
sbb
xor
mov
loopne
jge
cld
xchg
cmpsb
dec
inc
pop
lret
cld
push
add
rcrb
lret
pop
push
xchg
scas
mov
or
add
sbb
pop
enter
or
mov
mov
out
add
or
mov
push
addb
negl
add
loopne
add
push
cmpsb
xchg
repz
jne
jno
jae
ds
pop
lods
std
cwtl
add
dec
popa
sub
out
pop
enter
mov
add
dec
lods
repz
sbb
orb
loope
pusha
inc
add
and
and
pop
add
and
bound
push
aam
mov
data16
or
mov
add
push
jl
lock
outsl
xchg
sbb
add
add
jle
daa
ss
cmp
push
jbe
xor
lcall
add
jge
mov
mov
imul
aam
add
cwtl
shlb
pop
in
out
leave
js
pop
les
pop
or
daa
insb
loopne
jae
inc
push
mulb
cmpsl
punpckhbw
jl
enter
mov
adc
add
test
lods
sub
jno
push
loope
mov
xor
mov
add
cmp
sti
clc
jp
and
xchg
daa
cmpsl
mov
add
loopne
in
sub
shll
pop
add
stc
jb
push
push
loopne
push
dec
xchg
mov
push
testb
loope
sahf
xchg
into
mov
lret
sub
add
int3
fidivrs
add
sub
mov
mov
add
or
addb
or
xchg
sti
sub
lret
add
aaa
scas
xchg
dec
inc
mov
mov
mov
jb
xchg
cwtl
xchg
add
push
test
cltd
adc
pop
sub
inc
inc
xorb
or
movsl
push
and
pop
sbb
and
add
xchg
sbb
dec
add
loope
pusha
shr
filds
cld
leave
cmp
sub
mov
xor
cmpsb
push
sti
add
lods
jnp
xchg
pushf
jmp
or
mov
dec
add
adc
pop
test
shlb
add
std
nop
xchg
popf
xor
das
pop
mov
ss
push
adc
add
js
xchg
lock
push
pushl
inc
push
sbb
xor
fxch
dec
cmp
add
rcrb
jno
dec
loop
subb
or
pop
dec
jge
xor
adc
int3
rolb
pop
jns
inc
push
and
add
xchg
mov
add
call
mov
add
pushw
jns
loopne
in
add
test
dec
dec
or
add
mov
sahf
xchg
adc
inc
sbb
sub
jge
ss
bound
fdivrs
dec
aad
add
inc
cmp
xlat
add
insb
cs
arpl
push
inc
test
inc
adc
clc
std
add
shrb
xchg
xchg
enter
gs
add
jmp
cltd
jnp
std
adc
bound
xchg
lcall
inc
aas
xchg
and
dec
add
sub
cmp
adc
add
push
int3
sbb
mov
jae
sub
add
mul
jecxz
mov
rolb
jae
adc
and
addb
testl
bound
clc
add
add
sbbb
xlat
push
add
int3
les
sahf
fsubrs
in
add
aas
hlt
inc
pop
mov
add
and
lods
cs
in
ljmp
add
shll
push
lds
jge
mov
insl
push
movsb
test
lahf
dec
fs
xchg
add
sar
lret
cmp
add
jnp
xchg
inc
loopne
aam
mov
mov
xchg
xor
stos
and
add
mov
jae
fcmovnbe
test
adc
mov
push
pop
add
sbb
dec
adc
test
fidivs
inc
jne
or
mov
scas
jmp
popa
aam
enter
jle
in
or
fsubrl
mov
arpl
mov
inc
pop
aad
clc
jb
add
les
fucomi
cmpsl
jg
add
mov
das
shl
pop
jge
mov
mov
outsl
fs
scas
add
add
dec
test
adc
fwait
call
nop
lock
pop
add
cmp
push
and
loope
mov
adc
hlt
and
cmp
sbb
inc
addr16
nopl
lret
and
add
lods
out
mov
adc
push
inc
and
outsl
dec
xor
mov
sbb
shlb
aad
and
sbb
daa
sahf
xor
in
pop
out
cmp
mov
fldcw
pop
mov
and
fdivr
sbb
mov
or
add
inc
lods
inc
out
pop
hlt
out
sbb
loope
test
mov
adc
sbb
mov
sbb
icebp
or
and
in
add
sub
cli
inc
add
and
imul
jns
fcmovnbe
add
sub
push
aaa
dec
cli
add
fs
jge
jp
dec
jne
ss
dec
and
add
arpl
mov
out
adc
cmp
mov
push
bound
adc
into
movsb
push
mov
and
xor
add
call
dec
into
in
cmpsl
jge
add
lret
inc
les
xor
sub
add
pusha
outsl
shll
mov
pop
fdivl
dec
ja
imul
js
add
notb
add
ljmp
loop
add
shll
sub
mov
repnz
insl
test
sti
cs
jle
inc
xor
add
inc
and
mov
sub
in
sub
cld
data16
ljmp
arpl
sub
xchg
jae
mov
or
mov
pop
lods
iret
adc
mov
add
fs
xchg
dec
filds
sbb
pop
lock
test
add
or
sub
dec
psubb
sub
jae
les
cmp
adc
pop
decb
frstor
lahf
adc
jge
add
mov
and
add
es
out
inc
push
xor
into
sbb
mov
js
pop
stos
sub
sub
mov
movl
popf
bound
mov
inc
test
iret
add
imul
ss
mov
leave
dec
sarl
lret
jecxz
jle
mov
clc
aam
mov
sbb
fldenv
daa
adc
xchg
adc
test
loopne
ljmp
jg
jmp
jno
inc
fimuls
jne
sbb
jb
xchg
sub
fisttpl
mov
repz
cs
add
fnsave
push
xor
xor
or
loopne
push
mov
pop
add
cmpsl
lods
mov
bound
xor
jmp
xor
push
es
hlt
pop
int
movsl
push
add
push
or
dec
das
add
insb
gs
add
int
sbb
movsl
push
outsl
and
add
cwtl
into
dec
push
cmp
push
stos
cwtl
imul
add
xchg
push
jae
add
xchg
xor
inc
and
lcall
xchg
orb
sub
cmpsb
pop
jnp
jo
lea
mov
in
movsb
pop
sahf
mov
stos
fcoms
cmp
xchg
out
das
or
or
ficomps
mov
or
mov
shrb
mov
retw
mov
imul
add
leave
into
push
or
jae
push
mov
push
in
push
or
stos
dec
hlt
push
add
cli
clc
or
push
inc
mov
cmc
push
sub
pusha
inc
jne
aaa
jo
fisttps
dec
rolb
xchg
sbb
negb
add
mov
mov
insl
je
cmp
add
call
cmp
lea
fldcw
lds
mov
mov
push
xchg
sti
xor
stos
jo
cmp
fwait
dec
repz
clc
adc
mov
and
or
roll
movsl
ficompl
rol
jo
test
adc
add
sbb
frstor
add
shlb
and
or
xor
mov
ds
orl
inc
shlb
mov
and
fisubs
add
sub
loope
adc
les
mov
push
jmp
mov
jo
jle
pop
test
add
push
inc
push
mov
add
cmpsl
cmp
mov
idivb
out
aad
sub
xlat
insl
add
mov
nop
insb
repnz
out
imul
testl
pop
cmp
je
ficompl
cmpsl
ljmp
addr16
jno
pop
cmp
je
push
add
dec
addr16
ljmp
into
je
in
testb
mov
faddl
xsha1
cmpsb
lea
or
les
clc
sub
dec
cmp
jo
lret
mov
add
mov
jle
jo
jno
mov
cld
shrb
sbb
add
dec
clc
cmp
test
pusha
cmp
lods
add
shlb
aam
cmp
jb
ret
add
clc
sbb
in
pop
sbb
add
dec
xor
xor
mov
testb
icebp
fimuls
push
cmp
pop
and
mov
pop
sahf
cli
mov
aas
mov
dec
fnstcw
add
loope
daa
lock
adc
rcrb
pop
sbb
xlat
and
stos
pop
loope
xor
jmp
inc
dec
pop
cmp
and
ret
pop
push
mov
mov
xchg
sub
out
sub
mov
bnd
add
fstpl
mov
or
movsl
pushf
gs
push
adc
jge
inc
xor
les
mov
xchg
pusha
push
mov
and
push
hlt
add
mov
stc
addl
inc
cmp
js
rclb
test
inc
roll
rorb
das
fldcw
aam
sbb
inc
cltd
push
sub
push
cmp
dec
loop
inc
mov
and
or
inc
adcb
into
pop
dec
add
cmp
mov
les
lods
sub
lods
pop
dec
lret
push
clc
mov
cs
fs
ss
cld
das
out
add
pop
call
push
sbb
fiaddl
loop
pop
jmp
pop
cmpsl
aaa
jne
dec
negl
hlt
mov
mov
sub
mov
dec
cli
sbbb
and
pop
jmp
sub
in
fnstsw
mov
rcrl
divb
test
in
add
sub
xor
push
sbb
popf
or
sarb
cs
mov
xor
call
repz
rcrb
int
stos
aam
xchg
add
icebp
lcall
pop
add
jbe
push
push
push
dec
das
add
cmp
and
cmp
mov
pushf
cmp
cmpl
add
xchg
lret
sbb
and
scas
in
repz
icebp
cmp
add
je
ds
imul
jae
in
lret
push
adc
add
and
push
add
sbb
mov
int
pop
xchg
mov
testb
popf
mov
jo
cmp
dec
popa
and
je
fiadds
xor
sbb
jmp
outsb
or
dec
int3
enter
add
stos
cmp
sbbl
mov
dec
scas
out
ret
daa
add
pusha
xchg
push
lods
push
sbb
scas
cmpb
sbb
mov
push
inc
jb
les
es
pop
add
jbe
popf
and
dec
faddl
outsb
pop
nop
ja
xchg
sti
sub
mov
int3
out
ljmp
add
out
out
xchg
push
push
sbb
mov
add
loopne
movsb
add
sbb
stc
pop
aas
add
add
int
aam
es
ja
pusha
outsl
les
cmp
mov
jbe
les
es
push
and
push
pop
push
fadds
push
add
xchg
stc
loopne
adc
pop
shld
sbb
dec
loopne
loopne
nop
mov
or
dec
mov
sbb
jg
push
pop
lahf
loope
inc
or
jl
mov
pop
cwtl
fs
jnp
sbb
fwait
hlt
mov
fldl
push
sarb
lock
add
andl
push
jle
lds
cltd
add
sub
mov
filds
jns
inc
mov
jo
add
dec
invd
mov
or
movsb
loope
mov
orb
add
iret
mov
xchg
aad
je
pop
sbb
dec
add
int3
in
xchg
pop
cmp
xchg
es
clc
add
lcall
test
xchg
fwait
add
mov
in
clc
pushf
clc
add
xchg
xchg
mov
pop
ja
xchg
xor
or
loope
cmp
mov
dec
xchg
cmpsb
jl
fiaddl
cmp
sub
lock
add
in
jno
mov
cltd
xor
and
and
pusha
rolb
nop
lock
push
cli
add
std
addr16
lods
xlat
jl
sbb
cmp
mov
mov
shlb
pop
push
test
pop
imul
jno
push
cmp
sbb
push
ret
daa
stos
test
xchg
lock
mov
and
or
push
dec
push
xor
sti
mov
loopne
daa
out
add
mov
shlb
push
sbb
adc
push
scas
in
gs
push
sub
inc
pop
aas
inc
cld
mov
in
and
nop
arpl
pop
add
aad
add
fnstsw
cs
insb
add
jp
out
sbb
cmp
push
add
daa
add
out
stos
jnp
sub
movl
pop
add
inc
and
push
cmp
out
pop
cmp
adc
xor
mov
and
mov
sbb
cld
sub
testb
lret
xor
sbb
dec
adc
inc
xor
call
popa
push
sbb
jl
sbb
insl
sub
movl
xchg
lods
nop
and
jg
nop
xchg
pop
daa
adc
pop
cmp
jl
and
push
inc
pop
mov
movsl
jno
add
pop
lea
sahf
add
or
mov
inc
push
loopne
out
test
jg
jo
xchg
add
xchg
inc
jmp
int3
xor
sbb
jo
push
mov
sahf
add
loope
pop
sbb
addr16
pavgb
adc
push
xchg
sub
enter
rcrb
cmpsb
jle
jl
cmc
sbb
dec
add
fcmovne
popf
pop
inc
outsb
jno
jmp
ret
cltd
fdiv
adc
xchg
ror
cmp
cmp
cli
sub
xor
test
testl
mov
jecxz
dec
movsb
adc
leave
int3
inc
aam
loopne
mov
pop
mov
mov
pop
ss
loopne
fwait
pushf
add
or
xor
adc
in
cmpb
sbbb
paddq
fstps
pop
add
popl
mov
pop
mov
ret
push
sbb
jg
push
sub
cmp
cmp
loope
and
push
sbb
xchg
xchg
pop
cmp
pusha
adc
push
mov
popl
xor
dec
sbb
das
dec
loopne
fnstcw
ja
add
mov
and
sbb
popa
or
xor
sbb
in
cmc
add
aam
sub
cmpl
lcall
inc
xor
mov
mov
jle
cmp
int3
add
mov
or
sub
imul
call
scas
xor
push
add
lods
jge
push
adcl
push
insl
cmp
adc
dec
jno
add
push
cld
aas
xchg
outsb
push
xchg
cld
add
dec
inc
ds
push
in
cwtl
add
adc
popa
scas
call
stos
outsl
hlt
ja
movl
push
inc
jae
and
or
add
push
add
pop
loopne
sbb
int3
and
push
add
jl
dec
sahf
fs
nop
nop
pop
pop
das
xchg
dec
pop
push
int3
push
xor
jg
loopne
lea
mov
lret
popa
mov
add
addb
xchg
int3
imul
adc
push
xchg
enter
push
iret
and
mov
mov
sub
dec
addr16
sbb
dec
xor
fs
jno
add
mov
jnp,pn
ds
push
dec
or
pop
push
lock
cmp
scas
adc
add
mov
add
cld
jb
jo
mov
push
es
testl
pop
std
loop
ret
xor
mov
test
iret
add
dec
daa
jae
sarb
dec
push
mov
push
add
xchg
pop
mov
pop
scas
add
subl
add
cld
jp
mov
add
push
test
shll
aam
aad
xor
scas
andb
inc
je
mov
pusha
clc
test
xor
frstor
sarb
stc
jns
insl
jle
out
mov
paddq
pop
in
lret
call
test
xor
push
stc
add
jne
fists
out
jl
cmp
add
and
hlt
inc
mov
fucom
pop
xor
shr
or
fdivr
xchg
sbb
inc
fimull
clc
pop
pop
add
mov
pop
add
pop
sbb
shlb
inc
push
sahf
push
popa
dec
icebp
loope
add
xchg
jg
ss
add
fstpl
mov
inc
push
pop
pop
outsb
jmp
cmp
add
fadd
add
js
shlb
jge
add
cmp
add
push
rol
std
lds
and
add
stos
add
leave
out
jle
mov
ret
add
dec
test
mov
jecxz,pt
cmpb
push
fcmovnb
mov
imul
lock
test
xchg
dec
fcmovu
mov
add
cwtl
jge
cmp
aas
lds
sbb
ds
addr16
add
and
cli
xchg
test
mov
test
cmp
mov
add
les
jecxz
repnz
add
xchg
sti
stc
cmp
pusha
jge
sub
out
lds
xlat
lahf
lock
data16
incb
sub
call
popl
imul
enter
add
fldt
dec
xchg
arpl
fildl
popf
lret
hlt
inc
or
repnz
mov
adc
adc
and
aaa
leave
ret
ss
lods
or
adc
push
xchg
cwtl
mov
mov
les
rclb
inc
lret
push
jo
cwtl
xor
movsb
lds
sub
pop
mov
clc
cwtl
cmp
cmp
add
cmp
adc
inc
push
movsb
dec
lock
pop
jo
mov
mov
jge
push
pop
inc
ljmp
cmpsb
xchg
xchg
add
imul
or
sub
mov
sub
pop
inc
xor
add
les
mov
outsb
shll
sbb
cmpsl
sub
add
xchg
push
pop
pop
jns
cs
or
inc
add
mov
push
inc
or
jl
rcrl
sub
or
daa
jmp
imul
add
scas
stc
add
jae
lock
add
xor
js
addr16
cmp
loop
mov
dec
jmp
in
mov
js
add
jle
mov
or
xor
sarl
add
mov
dec
adc
out
add
aam
xchg
pop
ljmp
pusha
in
mov
xor
sub
ljmp
add
incl
inc
rep
loop
adc
xor
push
cmp
mov
nop
ret
lock
push
hlt
ret
and
sub
insb
xorb
stos
shlb
shlb
in
and
imul
pop
push
sub
sar
js
mov
dec
inc
sahf
jns
or
mov
add
std
xchg
inc
add
jmp
mov
mov
pop
faddl
mov
adc
lds
or
cmp
aam
and
add
mov
mov
jge
rol
or
pop
jp
btc
mov
aam
les
dec
clc
and
xchg
mov
loopne
fidivrs
addl
jg
flds
orb
leave
add
mov
mov
jmp
dec
add
or
sub
enter
adc
mov
sbb
fistps
add
cmc
loope
lret
clc
inc
push
frndint
jno
out
lock
mov
popa
loope
sub
icebp
adc
xor
cmp
add
fwait
js
lret
xchg
push
leave
bnd
icebp
rolb
orb
lcall
ljmp
pop
negl
sub
sbb
inc
mov
add
int3
mov
adc
mov
repnz
popa
sbb
dec
fsubl
inc
or
jl
rorb
sbb
fs
push
aaa
xchg
fwait
add
or
fildl
hlt
inc
call
add
and
jp
pop
push
leave
sbb
repnz
push
ret
mov
add
add
js
jno
or
jno
movsl
adc
test
jecxz
and
inc
and
ljmp
pop
in
adcb
push
imul
mov
pop
mov
xor
nop
fstpl
pop
clc
jb
mov
lds
test
mov
add
cmp
shl
fs
or
inc
sahf
add
je
roll
movsl
pop
out
icebp
addb
data16
sbb
dec
push
jecxz
push
lcall
gs
mov
movsl
into
add
mov
jb
and
xchg
incb
inc
ds
lret
add
nop
xchg
outsl
sbbl
add
daa
inc
jnp
ja
add
pop
ret
out
mov
sbb
das
or
push
sbb
or
jmp
dec
aaa
testb
scas
add
inc
fdivr
cs
clc
repnz
push
ljmp
mov
into
test
and
je
adc
inc
mov
lods
sbb
outsb
hlt
and
mov
or
sbb
stos
into
loopne
xchg
je
sbb
std
and
and
add
mov
push
lsl
and
je
imul
fadds
dec
insb
jmp
add
data16
test
jmp
rorl
or
cmp
ret
or
xor
fdiv
xor
cwtl
push
cmp
std
sbbb
outsl
push
mov
push
add
mov
mov
in
sub
faddl
mov
adc
or
cmp
js
pop
push
inc
gs
ja
push
stos
lods
addr16
ret
mov
mov
in
stos
scas
and
jmp
cli
insb
les
mov
xor
loopne
pusha
mov
xchg
js
leave
jmp
cmpb
mov
mov
sub
mov
jae
and
cmc
and
int3
aas
sbb
add
xor
xchg
daa
ret
adc
push
outsl
mov
or
sarb
sti
xor
out
test
cmpb
int
mov
mov
xor
sub
add
fldcw
and
cmc
pushf
pop
add
or
and
sub
imul
or
mov
xchg
jbe
jle
lods
lahf
add
into
mov
sub
std
mov
scas
fiaddl
sbb
sbb
jae
adc
add
add
cltd
mov
dec
fldl
adc
cmp
icebp
iret
and
add
sub
add
dec
mov
push
pusha
aam
jl
ja
add
fisttps
shll
xlat
add
imul
inc
add
arpl
pop
cmp
imul
data16
pop
mov
icebp
xchg
push
enter
add
rcrl
pop
in
adc
jns
jecxz
cld
mov
add
sbb
sub
sbb
mov
mov
outsb
outsl
add
std
add
jge
fs
test
cwtl
in
jp
stos
push
sbbl
cmp
push
cmpsb
xchg
xor
lret
pusha
and
jg
fists
repz
cmpsb
pusha
stos
iret
xlat
nop
jp
ljmp
pop
leave
mov
fs
push
xor
dec
xchg
cmp
rorb
subl
mov
push
fmul
adcl
mov
pop
mov
out
xorb
push
in
add
jb
push
mov
imul
pop
es
push
adc
add
and
add
xor
adc
and
sbb
fwait
lahf
cmp
and
scas
pop
add
xor
push
mov
cmpsb
adc
sub
pusha
xchg
cmp
sbb
into
out
add
or
insb
insl
add
push
pop
je
inc
dec
scas
add
movsl
fwait
jnp
shl
mov
add
pusha
cmpb
add
hlt
mov
sub
jge
imul
rclb
push
ret
add
jno
pop
add
mov
shlb
gs
jnp
add
mov
ljmp
add
xchg
subb
and
and
pop
cmpl
or
mov
mov
mov
push
in
add
scas
xor
fdivrs
jae
dec
push
into
xorb
xchg
add
inc
icebp
add
jp
and
rcr
das
incl
push
movsb
mov
aad
inc
push
ljmp
cmc
or
mov
scas
rcrb
sbb
cmpsl
sub
mov
add
loopne
stc
pop
and
arpl
mov
push
push
popa
lock
push
cltd
add
fdivs
dec
cmp
bswap
mov
sarl
add
movsl
lds
shrb
test
dec
push
sbb
out
js
pop
std
add
or
or
dec
push
jl
pop
xor
cltd
out
cmpsb
mov
add
mov
adc
cmp
les
dec
jo
int3
push
in
mov
fcmovne
ficomps
jnp
arpl
jb
push
xor
xchg
push
push
leave
cmpb
jo
and
popa
xlat
js
dec
jns
add
jno
pop
sub
cmpxchg
outsl
xchg
and
es
fmulp
push
jns
ja
in
pop
or
xchg
adc
mov
stos
lock
dec
jp
dec
daa
pop
or
sarb
popa
inc
int
add
in
inc
add
test
cmc
icebp
jecxz
pusha
push
cwtl
sub
pop
aam
adc
add
sbb
add
mov
aad
inc
push
dec
jmp
push
mov
jle
add
lods
mov
verr
mov
cmp
shll
xor
fcomip
add
jmp
int3
ljmp
sti
adc
add
xchg
mov
sub
gs
add
add
sbb
int
leave
rcrb
push
sti
fiadds
movsb
call
xor
andb
push
mov
js
add
lea
into
push
mov
add
mov
push
mov
in
andl
push
sbb
in
add
xor
push
mov
orl
add
icebp
inc
push
out
or
and
add
int3
test
add
imul
sub
jecxz
lds
into
add
movsb
dec
push
jge
insb
in
rolb
call
inc
add
push
dec
sbb
mov
enter
add
lret
in
add
imul
adc
sub
or
into
push
or
mov
sti
add
xchg
pusha
repnz
xor
outsl
mov
cmp
jecxz
lret
add
lcall
mov
sbb
clc
daa
pusha
bound
add
push
pop
sub
and
test
fildll
in
js
loop
push
shlb
mov
or
jp
add
jno
pop
movsb
notb
test
pop
inc
jb
mov
rol
sub
jns
push
pop
shrb
fdivrl
add
push
pop
lcall
sub
aad
cwtl
xor
sbb
xchg
inc
xor
jae
sarb
push
jmp
sub
jb
add
loope
dec
test
mov
jae
xor
mov
xchg
inc
addb
aas
fwait
jge
cmp
xchg
add
sahf
or
mov
add
jnp
pop
test
testl
jle
cmp
jo
push
dec
negb
xchg
jae
loopne
pop
add
scas
jb
sbb
gs
jp
stos
add
jl
add
fiadds
jg
ror
mov
or
and
lcall
add
loope
cmpsl
sub
or
clc
mov
adc
in
lods
adc
jl
add
popa
fistpl
gs
add
mov
xor
add
movsl
xchg
xchg
lock
jl
add
mov
add
bound
adc
jmp
ret
es
fistpl
incl
pop
je
push
movsl
add
enter
daa
mov
dec
filds
gs
inc
sub
test
ss
orl
inc
pop
push
push
inc
setp
or
mov
pop
mov
jnp
or
es
jno
jo
shll
lods
mull
fcmove
movsb
add
insl
test
jns
loope
add
movb
xor
jo
mov
xlat
mov
mov
dec
jne
cwtl
and
or
fisubl
mov
repnz
and
add
in
sbb
add
sbb
sbb
pushf
jne
dec
jo
add
aam
jge
push
sbb
add
add
mov
mov
mov
icebp
add
lret
les
test
inc
pop
in
nop
xor
loopne
push
pop
add
fistpll
xchg
add
addr16
push
nop
sarb
cmp
dec
mov
push
sub
push
add
or
rclb
in
ljmp
add
cltd
add
cmp
mov
je
mov
jecxz
mov
stos
or
push
lea
out
outsb
sbb
push
push
es
or
or
lods
inc
xchg
jns
arpl
dec
add
jp
mov
add
stos
jmp
inc
mov
cli
or
js
jno
stos
fldl
push
lods
jle
aad
cwtl
fs
sarl
push
add
dec
sbb
data16
test
outsb
jmp
out
sbb
clc
push
rclb
add
sub
test
push
fwait
mov
sbb
add
mov
pop
fnstsw
add
hlt
cwtl
push
xchg
fadds
test
addr16
inc
jge
pop
test
cld
mov
add
sub
testl
push
xchg
add
cwtl
imul
in
xor
shrb
push
gs
test
inc
ret
pop
push
nop
rorb
lods
add
mov
mov
pcmpgtd
std
mov
les
enter
jne
adc
inc
leave
int3
add
fdiv
adc
sub
in
xchg
sbbl
dec
hlt
rorb
rcrb
push
lahf
in
add
xor
jg
std
imull
test
cmp
icebp
adc
les
xchg
add
mov
xor
mov
pusha
imul
nop
cmp
in
inc
xor
dec
fildll
jmp
xchg
pop
aam
inc
xlat
sub
ljmp
and
pop
adc
inc
stos
loop
aam
pusha
cmp
mov
mov
sbb
shr
fnstenv
jmp
pop
add
ret
or
mov
adc
movntps
cmp
mov
xchg
popa
rorb
inc
adc
add
or
and
mov
add
dec
sub
enter
jo
add
push
cltd
iret
add
mov
addr16
inc
jp
xchg
xchg
add
or
ret
inc
xchg
filds
lret
shll
fstps
jg
add
inc
sub
mov
sahf
mov
push
rolb
test
sbb
inc
in
xor
out
lock
fbld
lcall
push
inc
pop
call
mov
mov
js
sub
bound
mov
add
fsubrl
xchg
push
mov
inc
or
cmp
fldenv
jl
mov
in
cmp
add
mov
and
pop
aas
dec
add
sub
repnz
lcall
sub
cld
mov
js
sbb
pusha
xchg
test
ljmp
push
push
in
cltd
inc
adc
fcmovne
and
push
sub
stos
adc
mov
push
sub
pop
popa
adc
lods
add
int
xchg
xor
scas
and
push
sub
add
sub
in
in
push
add
addb
push
ret
or
xor
lret
mov
jae
pusha
imul
stc
lahf
rep
jge
lcall
arpl
lea
in
and
jl
in
fistl
ret
xchg
filds
scas
test
call
out
add
loopne
add
arpl
add
test
orb
lahf
icebp
mov
or
mov
shrl
cmpl
cld
out
dec
dec
add
lret
hlt
jae
pop
cld
js
xor
fidivs
jge
es
jl
add
push
pushl
call
mov
xchg
inc
jns
rcrl
push
fs
icebp
fdivrs
jne
rcr
inc
ljmp
or
pop
arpl
fdivrs
icebp
push
roll
es
push
jae
sbb
push
out
xchg
fimuls
imul
ret
jmp
xor
nop
push
push
xor
mov
mov
idiv
or
test
push
andb
fldl
jb
lahf
fs
aad
sub
push
fildl
idivb
loopne
xor
out
push
xor
add
imul
ficoml
xchg
enter
lock
push
add
and
aas
aad
aam
mov
loopne
mov
sbb
jo
in
xor
arpl
incl
sub
enter
pop
mov
cmp
inc
lret
out
add
or
mov
and
int3
scas
pop
mov
mov
gs
leave
pop
std
adc
lods
add
shrb
sub
mov
pop
dec
cmpsl
add
mov
pop
pushf
mov
push
ja
sbb
pusha
adc
push
pop
jg
push
stos
and
xchg
inc
outsl
add
sti
clc
shl
xchg
add
sbb
xor
xor
sub
ret
rorb
loopne
faddl
fmul
movsl
stc
test
lock
jle
add
add
mov
scas
fsubr
repnz
ret
shlb
lods
add
insb
out
popf
add
in
sti
cmp
std
jmp
in
jne
ret
jecxz
movsl
in
fiadds
inc
mov
repz
fisubrl
add
and
js
add
pop
pusha
adc
or
fbstp
adc
clts
cmp
test
cmpsb
dec
shll
stos
dec
pop
inc
jnp
mov
and
push
and
adc
daa
sub
add
movsl
inc
dec
lods
dec
aas
inc
cmc
pop
and
daa
movsb
stos
inc
or
inc
lods
adc
jae
nop
enter
adc
sbb
in
repz
add
pop
inc
fiaddl
aam
push
xor
movsl
add
scas
out
mov
jecxz
mov
out
jg
mov
shll
xor
cmp
or
adc
insl
or
push
sbb
mov
es
sub
xor
je
rolb
les
mov
cmp
jnp
cmp
fdivrl
movsb
push
fiadds
jo
dec
pop
je
jmp
mov
mov
cld
adc
popf
das
shlb
in
aas
icebp
add
jbe
sub
mov
stc
add
imul
notb
add
or
nop
and
add
sbb
mov
xor
pop
adc
mov
sbb
dec
adc
sti
pop
xchg
xor
and
xchg
push
addl
shrb
mov
jae
xchg
pop
aaa
add
or
popf
rcl
cwtl
adc
or
sbb
clc
push
xlat
add
mov
cli
aas
pop
pop
fnstcw
aaa
mov
or
sub
sub
add
push
mov
in
fdiv
push
pop
mov
mov
call
cmp
imul
stos
add
ss
xor
pop
fadds
dec
gs
jno
sub
pop
fistpl
jae
cmpsl
mov
and
nop
and
je
push
mov
out
outsl
sub
or
mov
data16
cmp
insb
ja
adc
and
shl
lods
mov
lock
mov
pop
outsb
add
sub
and
pop
test
out
pusha
testb
mov
nop
inc
int3
mov
shld
shrl
shlb
rolb
fwait
rcrl
add
fmull
movsb
add
xchg
stos
dec
rolb
inc
fbld
push
xor
mov
cmp
jmp
mov
add
clc
add
push
jl
cmp
scas
addb
or
aas
pop
roll
lret
add
imul
sub
shlb
test
jb
jecxz
add
xor
dec
dec
lock
js
test
add
rorb
add
scas
mov
pop
add
push
out
add
or
pop
rcl
test
dec
jle
add
cli
add
movnti
cwtl
and
xchg
jns
shlb
xlat
lds
icebp
add
cmp
sub
add
sub
dec
add
std
call
push
lods
pop
inc
mov
daa
mov
xchg
lock
out
loop
mov
inc
dec
ljmp
insb
bnd
add
xor
dec
test
inc
sbb
addr16
adc
pusha
push
adc
jmp
iret
mov
add
mov
xchg
mov
testl
mov
fs
adc
mov
xlat
ficompl
xchg
icebp
data16
mov
nop
repz
or
rolb
push
add
out
daa
add
test
xchg
je
pop
rolb
pop
mov
add
mov
and
add
inc
fdivrs
mov
iret
pop
hlt
and
lock
or
push
out
cwtl
jge
ret
pop
jbe
xchg
rcll
jmp
es
push
and
stos
cmpsb
pop
loopne
mov
insb
jno
adc
or
je
int
jp
pusha
cs
adcl
in
add
inc
mov
add
mov
push
clc
adc
dec
ret
pop
inc
addr16
sub
mov
call
in
add
mov
inc
loop
or
mov
incl
cmpsb
inc
jo
pop
inc
inc
push
adc
fcomps
pushf
push
movl
push
mul
or
add
inc
adc
inc
inc
mov
je
dec
sbb
test
fiaddl
or
jecxz
jl
mov
xor
and
mov
mov
xor
das
push
inc
mov
cltd
mov
bound
imul
flds
ja
and
rclb
xor
ret
jae
insb
mov
aas
and
add
xchg
adc
jbe
imul
imul
mov
cmp
ljmp
and
iret
ficomps
sarb
dec
loopne
lahf
lods
shll
mov
jne
add
int
in
add
loopne
mov
shlb
mov
bound
lahf
pop
fwait
inc
in
dec
ljmp
call
adcb
and
aaa
add
fldl
pop
stc
fwait
mov
dec
sbbb
xor
add
test
imul
testb
in
hlt
out
cld
cmp
repnz
lret
test
add
das
cmp
mov
jl
add
lret
pusha
xchg
sub
xchg
push
outsl
or
jo
add
mov
cld
add
xchg
add
sub
sbb
add
inc
add
scas
mov
jl
sbb
push
mov
push
stc
jb
or
mov
xchg
loop
xchg
mov
mov
sub
add
orb
lods
jp
fsubrs
lds
filds
pop
adcl
mov
jl
pop
orl
add
pushf
xlat
pop
pop
outsl
and
push
movsb
mov
ljmp
push
add
pushf
sti
xor
add
adc
push
and
or
jb
adc
pusha
test
sub
psubb
out
add
frstor
add
or
mov
push
xor
addr16
loop
xchg
sub
test
add
lea
add
pop
faddl
or
mov
add
lret
push
lods
vmovhps
mov
xchg
lcall
icebp
sbb
sbb
iret
mov
cmp
and
movsl
or
ret
sbb
dec
iret
dec
jb
add
pusha
arpl
push
pop
das
sub
insb
mov
dec
mov
inc
dec
ljmp
mov
shlb
adc
push
cmp
repnz
cs
pusha
insb
mov
out
fiadds
ds
sar
sbbb
or
call
add
push
imul
aaa
and
sahf
in
xchg
add
mov
out
loope
loopne
leave
add
sub
sahf
mov
mov
int3
cmpsb
add
add
loop
dec
add
inc
inc
and
and
cmp
arpl
mov
pusha
inc
jns
mov
sub
add
xor
cld
wrmsr
das
sbb
mov
outsb
aaa
mulb
pop
iret
pop
incl
dec
dec
xor
push
fsts
jl
inc
adc
jmp
or
cmpsb
add
into
mov
outsb
aas
add
mov
jge
add
inc
adc
adc
cmpsb
pop
pavgb
icebp
test
adc
adc
loop
outsl
sub
jb
jae
mov
inc
fbstp
jne
aad
push
mov
xchg
test
fstps
nop
sarb
push
stc
adc
add
clc
call
sbbl
add
adc
daa
lods
pop
sar
jecxz
test
ja
add
mov
aam
cmp
rorl
scas
cmc
fidivl
ficomps
or
adc
test
pop
mov
mov
mov
addb
sbb
test
push
mov
mov
das
add
bound
clc
enter
pop
cltd
roll
fnstsw
cmp
adc
leave
add
rorl
lret
cmp
sub
sbb
mov
and
dec
add
mov
outsl
add
es
sbb
or
mov
and
daa
sbb
push
fiaddl
add
jg
andb
outsb
add
lds
in
pop
inc
sbb
fwait
adc
das
ret
loopne
add
add
push
pushf
adc
pusha
mov
inc
jbe
cmp
mov
xorl
add
call
sub
xchg
lcall
mulps
jl
mov
lds
outsl
push
repnz
shll
adc
ret
cld
and
mov
add
sahf
jecxz
roll
push
das
and
pushf
xor
sub
lods
add
pop
out
mov
in
add
stos
xor
or
lahf
or
cmpsl
inc
js
sub
pop
mov
loopne
add
mov
or
hlt
xor
mov
shrl
int
dec
mov
xchg
dec
sub
add
mov
hlt
dec
add
jns
ds
and
out
cli
add
das
cmp
add
lock
sub
mov
pop
scas
push
and
xchg
mov
jl
rcrb
out
inc
into
mov
add
dec
enter
cs
add
cmpsl
mov
cmp
test
add
pop
test
ret
push
pop
shl
xor
push
or
add
push
pop
ret
dec
jg
hlt
jo
dec
loop
add
mov
sub
cmpsb
mov
push
xchg
sbb
data16
add
xchg
jns
xchg
in
std
jle
bound
and
pop
rolb
aad
adcb
fdivs
inc
lahf
js
dec
add
out
adc
push
nop
jo
sub
imul
test
xlat
and
inc
out
decb
pop
pop
push
out
pop
mov
xlat
add
or
cmp
add
stos
clc
add
cmp
xchg
sbb
outsb
add
jp
adc
addl
insb
sbb
fisubrs
imul
aam
add
jo
jecxz
mov
push
add
popa
jne
roll
add
push
shlb
je
mov
cmpsb
test
fsts
loopne
popa
int3
call
sbb
mov
cmp
xor
in
xor
cmp
mov
out
add
iret
lods
cmp
adc
testl
mov
roll
jbe
push
test
and
lods
out
xor
int
mul
add
jecxz
add
pushf
inc
adc
ljmp
mov
mov
fisubl
cmp
or
lds
imul
xabort
jmp
adc
jl
clc
jbe
or
mov
mov
push
mov
mov
lahf
dec
xor
aaa
adc
pop
add
cmp
pop
rolb
xchg
mov
mov
or
movsl
out
fsts
xchg
and
gs
xchg
stos
jp
add
fsubs
lret
test
sub
jecxz
jbe
lods
xlat
sbb
loopne
push
hlt
adc
repnz
call
add
sbb
cmpsb
pusha
pop
lret
enter
and
stos
adc
in
jnp
mov
or
xchg
pop
fnstcw
orl
mov
xchg
insb
adcb
ljmp
and
sarb
jecxz
sub
add
and
jb
ljmp
mov
xchg
insb
add
out
mov
minps
shll
xchg
aad
push
adc
scas
xchg
jg
push
jge
outsb
push
cld
mov
mov
lds
mov
clc
add
int
popf
repnz
je
jae
adc
arpl
pop
xlat
ljmp
stos
cltd
add
jge
std
cli
add
mov
mov
imul
out
les
imull
ret
inc
jl
jmp
ljmp
lcall
cmpsl
unpcklps
test
add
jl
loopne
fwait
add
sahf
mov
repz
sbb
sub
cmc
fdivrs
adc
fwait
xor
mov
stos
movsl
pop
lock
popa
lahf
pop
fimull
pop
mov
add
rcl
xchg
out
hlt
or
les
or
inc
lods
in
dec
addr16
mov
push
mov
adc
aam
cmp
inc
out
mov
pop
cmp
add
mov
inc
loope
testl
nop
or
add
add
inc
lods
int3
pop
push
xor
jle
cmpsl
dec
call
mov
popa
inc
call
xchg
jbe
lcall
or
subb
mov
scas
clc
and
stos
sub
jb
sbb
data16
add
stc
daa
aas
sub
ds
mov
idiv
add
into
inc
cmp
fnstcw
jle
add
pop
cmp
xorb
fisubrl
icebp
jno
xchg
and
out
push
mov
stos
out
dec
shr
aas
sbb
or
aam
pop
rolb
inc
outsl
add
insb
icebp
test
mov
ret
adc
inc
mov
add
xchg
cmp
sbb
add
fnstcw
and
sar
dec
add
xor
fistpl
dec
or
mov
xchg
xor
andb
sub
in
add
out
push
nop
xor
cmp
adc
add
jg
or
cwtl
je
popa
cmp
push
mov
cwtl
dec
loopne
sbb
or
jecxz
add
cmp
call
push
inc
sbb
jl
stc
adc
add
cmp
ja
pop
and
aad
pop
inc
pop
add
in
mov
imul
jb
adc
mov
jnp
nop
test
or
jne
out
hlt
movsb
pop
sar
ja
pop
mov
inc
add
xor
sbb
mov
faddl
add
data16
inc
push
pop
mov
clc
mov
stc
add
add
loopne
push
add
mov
popa
pop
imul
idivl
loopne
mov
add
jb
scas
push
push
stos
add
cmpsl
orb
loope
rorb
cli
in
adcb
add
xor
push
into
adc
addb
pop
out
lds
jno
or
lret
dec
sbb
nop
aaa
add
cmp
add
and
addr16
xor
sbb
shlb
pop
add
add
leave
mov
aaa
lods
mov
shl
fwait
pop
cmpsl
pop
sub
pop
testl
roll
push
sbb
lcall
xchg
add
outsb
push
std
jae
add
jnp
mov
call
push
pop
mov
add
aaa
outsl
lds
and
or
cwtl
outsl
mov
cmpb
popa
lret
je
add
leave
jp
mov
roll
repz
add
mov
icebp
inc
add
adc
add
addl
xchg
sub
mov
or
or
and
jp
xchg
mov
and
sub
aad
lock
and
mov
fldl
add
jae
fistpl
adc
mov
add
pushf
loopne
hlt
adc
sub
adc
mov
movsb
mov
pushf
add
jne
fmulp
add
arpl
add
xor
jae
jl
and
or
aas
shlb
mov
fwait
addb
std
es
push
add
add
cmpl
or
insb
imul
std
out
fsts
out
rclb
xchg
mov
jge
cwtl
sbb
mov
in
das
add
out
pop
lret
mov
lock
jg
mov
fiadds
sbb
rolb
mov
add
pusha
out
jbe
push
inc
iret
mov
mov
testb
xor
sahf
mov
jecxz
punpckhdq
dec
pop
je
insb
ret
test
jl
cs
jl
pop
shrl
cmp
push
dec
dec
sub
dec
jmp
sahf
movsl
idivb
iret
mov
rorb
xor
cmp
jmp
mov
orb
add
and
jb
les
add
mov
add
add
add
sub
ficompl
xor
dec
cmc
sbb
mov
cmp
add
lods
das
push
jne
jmp
mov
jae
shrl
and
xchg
push
aaa
xor
sbb
push
movsl
movb
loope
or
jmp
sbb
and
lds
pushf
add
test
xchg
xorb
xor
roll
xor
out
fbstp
fldenv
jecxz
inc
stos
imul
or
add
hlt
in
xchg
addb
out
out
dec
pop
movsb
add
fisttps
xor
sahf
add
pop
mov
scas
adc
add
test
call
popa
add
cmp
mov
js,pt
sbb
push
add
repz
stc
nop
inc
sub
pop
rorb
in
clc
or
xlat
push
shl
aas
add
cmp
negl
and
out
and
stc
pusha
add
daa
add
adc
andb
mov
and
fs
sbb
nop
in
sbb
addr16
xchg
push
jb
fwait
dec
insl
cmpsb
lods
xor
sbb
push
mov
push
add
loop
cmp
adc
dec
add
cmp
mov
hlt
or
mov
mov
out
sbb
pop
add
xchg
aaa
mov
fcmovnb
adc
imul
cmp
jb
xor
aam
sti
cld
sbb
pop
dec
and
rolb
fs
insl
sbbb
bound
mov
sbb
sarb
cmp
pop
sarl
jb
aam
in
sbb
inc
pushf
pop
add
jp
pop
sbb
cmpsb
lea
mov
add
arpl
mov
enter
bnd
mov
xchg
lea
or
cmp
add
outsb
jmp
test
cmpsl
inc
add
sahf
rol
mov
add
jbe
lret
sub
inc
das
pop
cmpsb
pop
sub
sub
inc
in
xchg
lods
lahf
sbb
repnz
scas
shrb
cmc
dec
jne
cmp
xor
jmp
cmpsl
daa
out
mov
stos
cltd
paddb
xor
insl
jns
inc
inc
adc
cli
dec
add
ret
jo
orl
jo
add
aaa
and
cmp
add
fldl
mov
int
cld
dec
mov
movsb
sub
add
clc
adc
add
push
int
sbb
sbbb
notb
adc
xchg
cmp
add
add
rclb
xchg
dec
add
sbb
rcrl
sbb
cltd
mov
inc
cmpsl
and
add
je
pop
imul
aad
test
sub
add
xor
adc
incl
std
out
sbb
jnp
add
loopne
sahf
mov
jns
add
repz
data16
cltd
out
add
les
pop
cmc
testb
or
dec
test
add
jmp
imul
movsb
inc
aad
call
out
push
add
xchg
and
mov
mov
popf
add
daa
roll
dec
or
test
inc
stc
add
and
dec
push
cmp
lds
mov
lods
pushf
out
ret
in
andb
ret
nop
mov
out
iret
mov
outsb
add
jbe
lret
dec
add
cmpl
es
inc
inc
xchg
lods
mov
addl
lods
sti
dec
mov
pop
int3
in
add
je
and
xor
add
push
sub
cld
andb
push
pop
out
lods
inc
rcrb
mov
jmp
xchg
cwtl
add
lcall
dec
lret
shlb
sbb
jo
xchg
lds
loop
out
and
in
and
test
xor
jns
cmp
dec
leave
cmp
dec
jo
data16
out
xchg
add
sub
push
add
clc
xchg
fsubp
jae
das
add
push
push
popa
xchg
push
jns
jge
dec
add
cs
add
test
or
or
or
fildl
sub
orb
inc
in
and
sbb
fmull
inc
push
xchg
cltd
fwait
leave
add
lods
fnstcw
sarb
push
pop
adc
js
ret
add
fadds
loopne
sarl
push
mov
pop
out
cs
cmp
jne
inc
insb
orb
cmp
or
ret
mov
ljmp
adc
add
xor
loope
pop
mov
loopne
xor
and
outsl
xchg
inc
fildll
fcmovb
jmp
add
adc
adc
js
jge
cmp
pop
adcb
or
inc
cmp
add
or
leave
and
enter
and
addr16
jg
cli
inc
add
cmp
xchg
push
add
mov
divb
lcall
and
lea
xchg
pop
in
enter
fistpll
xor
das
inc
and
mov
loop
push
outsb
imul
pop
rcl
nop
dec
add
pop
out
pop
cmp
xlat
je
dec
mov
xchg
in
xchg
mov
cmc
orb
inc
aaa
js
jns
pop
xor
out
mov
add
ficoms
pop
adc
fnstenv
add
dec
fwait
movsl
test
iret
push
dec
loop
lret
and
xchg
add
adc
dec
les
sahf
call
popf
jle
lcall
out
sarb
mov
stc
adc
xchg
mov
lahf
jle
xchg
or
shr
pop
add
mov
push
pop
pop
cmp
push
pop
aaa
int3
inc
mov
lea
mov
jg
sarl
pop
sbb
xor
and
insl
repnz
pop
add
sahf
int
push
or
popa
fmull
sbb
lock
insl
dec
fnstsw
mov
add
push
add
in
and
mov
jnp
cmp
add
adc
std
sbb
stos
popf
lods
insl
inc
add
test
sub
adc
jg
sub
or
lret
pop
clc
bound
push
sub
popf
pop
jp
xor
cmp
jnp
cld
adc
lock
jg
adc
in
rclb
push
sbb
mov
inc
or
daa
pusha
add
jb
inc
mov
dec
add
shll
add
cmpl
push
fdivrl
and
ret
lock
std
dec
incl
inc
mov
adc
push
or
mov
add
ljmp
popf
dec
xchg
test
add
push
mov
inc
xor
inc
and
cmp
push
mov
nop
pop
inc
in
ja
dec
sarb
hlt
iret
jo
pop
push
mov
add
mov
icebp
xor
pop
xchg
dec
pop
dec
sarb
mov
add
rcl
arpl
aas
mov
cmp
stos
xchg
add
push
leave
insb
push
push
cwtl
pop
add
ret
daa
cmpsl
cmp
xchg
rorb
in
dec
pop
cmp
push
adc
out
add
shll
or
and
dec
xchg
add
outsb
mov
add
fisubrs
mov
add
sar
mov
xchg
std
ffreep
test
psubb
es
shlb
jl,pt
add
mov
aad
add
xchg
enter
mov
sub
ljmp
in
add
iret
sahf
hlt
mov
dec
add
sbb
dec
jb
fadds
mov
xor
cwtl
stc
je
inc
pop
xor
jl
and
nop
inc
cs
into
and
mov
pop
dec
xchg
xor
jb
das
dec
and
ljmp
sbb
popf
mov
mov
adcb
mov
in
or
lods
add
stos
orl
cmp
and
dec
jle
sbb
sub
pop
aas
inc
dec
mov
pop
shlb
adc
andnps
dec
or
insl
sbb
or
fcomps
inc
mov
cmp
adc
push
add
lods
loope
lock
ds
jmp
add
cltd
pop
sbb
jae
mov
add
xchg
out
js
aaa
jmp
add
adc
sbb
mov
icebp
fcoml
add
xor
add
in
gs
testb
dec
iret
iret
add
sahf
mov
xchg
cltd
test
add
xor
and
xor
push
jbe
popa
fidivs
das
sub
dec
add
xchg
int3
cmp
pop
inc
xchg
pop
mov
and
xor
mov
pop
xor
movsb
fwait
mov
add
lahf
dec
loop
enter
repnz
push
mov
inc
out
lock
mov
cltd
adc
loopne,pt
add
scas
stos
push
add
lods
mov
jbe
shl
add
xchg
ss
add
loopew
mov
add
jmp
or
add
sub
xlat
mov
test
insl
jmp
add
jp
add
in
addr16
aam
mov
shl
fs
mov
pop
jae
jnp
push
xor
mov
cmp
and
sbb
cmp
lcall
fiadds
and
ss
inc
lods
cmp
mov
js
mov
outsl
or
rcr
jnp
add
lahf
jo
push
push
lret
jl
xchg
and
je
xchg
pop
cltd
imul
push
add
adc
aaa
pop
aad
cmc
mov
push
xchg
sbb
pop
rorl
sbb
fildl
and
int
fucomp
ret
add
xchg
mov
ljmp
iret
inc
jle
push
pusha
push
cmp
out
jo
push
cmp
jge
add
lahf
sub
push
loopne
fcos
add
xchg
xchg
xchg
add
ret
cld
fisttps
jp
mov
or
xchg
fisubrl
fsubs
imul
or
dec
jge
mov
xor
mov
xchg
lret
push
jbe
out
xchg
aad
fcomp
sub
sbb
sarl
jne
push
adc
inc
les
add
sub
shr
pop
add
test
repnz
mov
repz
and
out
mov
add
mov
jns
int
daa
push
das
enter
ds
jmp
movsb
push
and
mov
xor
xchg
jb,pn
rorb
addr16
ja
add
lcall
inc
rol
add
orb
and
add
pop
fwait
pop
cmp
jns
ret
and
pushf
dec
and
jle
mov
and
add
add
sbb
add
mov
enter
add
mov
mov
lret
mov
xorl
xchg
lock
jg
jge
add
dec
and
adc
add
sub
daa
push
loope
cmp
lahf
sbbl
jge
add
adc
push
shl
xor
cmp
mov
test
pop
mov
aaa
or
adc
push
add
push
rorl
cmp
jecxz
loope
lock
add
mov
shlb
scas
inc
xorb
or
pop
inc
cs
xor
iret
push
pushf
sub
out
ss
roll
aad
adc
cmpsb
rolb
jae
push
mov
adc
lock
filds
out
rcl
and
lea
mov
daa
add
cmp
fstpt
sbb
dec
movsb
add
imul
or
cs
dec
jmp
cmpsb
test
pop
and
mov
pop
mov
adc
xchg
shrb
shll
xor
add
cmp
arpl
cmpb
enter
xor
mov
lods
mov
nop
sbbb
sbb
pop
sbb
pop
mov
add
add
sbb
int
ljmp
lcall
mov
imul
mov
gs
pop
or
adc
lds
insl
add
add
or
fwait
pop
aam
add
pusha
aaa
and
dec
mov
add
pop
add
imul
ret
js
mov
pop
inc
adc
push
lods
xor
push
add
mov
sbb
or
shlb
add
popa
sahf
mov
or
push
and
add
sub
shll
daa
mov
xchg
sahf
pushf
mov
stc
inc
jge
cmp
and
add
loop
scas
cltd
stos
xor
add
jno
scas
shl
sahf
add
pop
sarl
add
xor
mov
push
or
cltd
bnd
test
pop
add
push
sub
adcl
jnp
mov
call
ss
xchg
cmp
sarw
and
xor
mov
push
mov
test
or
cltd
sbb
and
pop
and
mov
test
inc
sbb
int3
sub
and
and
loope
sub
or
movb
or
pop
pop
sub
fsubrs
mov
pop
jae
ljmp
pop
or
sbb
insl
mov
jbe
sbb
jp
arpl
push
popa
mov
push
ret
push
push
pop
ror
sbbb
inc
jl
test
xor
pop
or
in
lock
aam
add
popf
clc
push
loop
add
xchg
fs
je
mov
sbbb
cmpsb
mov
js
out
imul
push
add
add
mov
out
mov
dec
pop
cmpsl
mov
fwait
out
xchg
pusha
add
shlb
pop
stos
outsl
call
loopne
cs
mov
addr16
mov
rol
mov
jbe
add
shr
andl
dec
add
daa
test
sub
jecxz
push
lahf
rorb
cmpsl
cli
pop
mov
or
jge
mov
addl
scas
add
jp
sbb
cmpsl
pop
mov
nop
sub
cmp
scas
lds
or
push
push
mov
add
mov
ds
or
push
stc
add
cld
lret
push
and
jmp
into
scas
sub
jne
fisubl
mov
add
ja
xor
test
jmp
dec
inc
loop
bound
clc
roll
jle
or
inc
dec
and
scas
imul
fwait
inc
ja
mov
aad
xchg
out
add
xor
pop
mov
nop
xor
jecxz
inc
xor
cmp
add
pop
sahf
push
mov
cmp
aam
js
loop
test
pop
xlat
add
jns
in
icebp
out
xor
lret
add
daa
loope
lock
push
mov
loop
aad
fcmovnu
clc
lods
add
js
int
rcrb
add
lret
cwtl
cld
sbb
dec
cmp
hlt
cmpsl
cmc
adc
push
stc
call
in
jp
nop
sub
movsl
mov
mov
int3
bound
add
mov
addr16
add
cli
and
xor
jmp
cmpsb
adc
inc
pop
sub
movsb
cmp
add
jnp
ret
fistpl
mov
push
orb
add
out
mov
std
pop
mov
aas
ja
subl
xor
cmp
fldl
in
dec
push
sti
and
xor
xchg
dec
mov
mov
scas
loop
xor
mov
or
stc
fs
js
int3
fisubrl
push
jle
addr16
cli
sarb
push
mov
mov
lock
or
inc
lcall
test
add
in
push
xchg
sarb
or
fwait
and
clc
add
stos
xor
fidivrl
pop
insb
jno
add
sub
dec
and
dec
lahf
outsb
sbbb
adc
mov
add
mov
add
ret
leave
bound
fcmovnb
push
les
add
sub
cmp
divb
int
mov
loopne,pn
or
cmpl
add
mov
add
mov
jo
sbb
jmp
push
insl
add
mov
and
push
cmpsl
and
push
mov
add
rclb
and
in
je
add
adc
add
pop
xchg
ja
mov
add
push
push
cld
xchg
push
jge
add
or
aas
ds
xor
insl
nop
mov
inc
sbb
jne
pop
cmp
mov
arpl
movsl
stos
ss
add
sbb
fistps
popa
mov
xor
mov
andb
cli
in
sub
cmp
pop
pop
xchg
jno
add
cmc
test
jae
add
adc
mov
jg
loopne
xor
addl
mov
add
jmp
sbb
int
and
iret
add
push
loopne
add
cmp
xor
inc
sbb
push
insl
xor
int3
push
add
pusha
into
aad
xor
jecxz
sub
pop
iret
jg
nop
xorb
movsb
ds
jl
ljmp
or
rcll
and
lock
nop
fs
jae
and
xchg
aam
pop
fmul
inc
add
psubw
or
inc
mov
xor
lock
push
mov
imul
imul
xchg
mov
pop
fwait
test
jnp
sbb
repnz
ljmp
or
sub
push
lods
adc
adc
add
dec
pop
in
xchg
cmpxchg
fnstsw
xchg
mov
add
imul
ficompl
pop
outsb
mov
cli
lock
and
mov
xor
lahf
xor
das
add
add
fcmovnbe
stos
pop
jmp
shll
jge
inc
fsts
fwait
aaa
pop
add
mov
dec
nop
enter
adc
and
shlb
es
or
push
push
add
mov
jle
std
daa
loopne
jge
and
xchg
aas
sbb
mov
inc
lea
mov
mov
mov
add
negb
cli
and
or
iret
push
arpl
fstps
jb
add
cmp
loop
cli
lock
pop
ljmp
push
xchg
ds
mov
pop
add
pop
lods
cwtl
sbb
xchg
add
sbb
dec
push
and
add
jge
mov
push
lds
or
mov
lcall
mov
pop
and
stos
sbb
rcl
shl
pop
inc
sbbb
add
pop
dec
xchg
add
sbb
imulb
pop
movsb
and
cmc
dec
xor
add
jo
pop
or
jge
sub
dec
jg
sub
aas
jp
mov
inc
stos
pop
dec
mov
ljmp
cmp
add
scas
ja
mov
add
cwtl
test
sbb
into
jmp
lods
push
or
dec
fbld
jae
push
mov
pop
sbb
jbe
std
iret
xchg
je
jp
add
fucomip
xorb
js
cs
jbe
add
adc
mov
sbb
orb
add
mov
arpl
call
add
cmpsl
push
and
movsb
lret
insb
cmc
mov
push
push
mov
sbb
into
pop
rclb
cld
push
fwait
jno
in
cmp
rorl
idivb
add
mov
cli
jns
push
jbe
test
loopne
push
fdivr
jmp
shrl
lods
and
pop
add
push
inc
ror
jae
jno
add
xlat
lret
jnp
mov
push
cli
dec
js
adc
repnz
mov
add
add
loope
mov
jne
rolb
loop
jns
sbb
jo
mov
call
leave
push
pop
pop
cmp
adc
sbb
add
cmpsl
or
cmp
fs
sarl
mov
sub
ljmp
jle
in
inc
add
clc
mov
jne
fisubrs
add
imul
push
and
scas
adc
cmpsb
xchg
into
mov
pop
icebp
js
test
and
popf
jne
inc
mov
stos
lret
and
sbb
movsl
and
pop
in
mov
add
movsl
pop
xor
je
mov
popf
sub
mov
xchg
sti
mov
add
and
addl
pusha
push
je
add
lret
pushf
dec
xchg
incb
mov
in
jno
xor
dec
sbb
stos
or
pop
stos
ret
add
ljmp
setle
cmp
rcr
pop
cmpsl
lds
arpl
mov
decl
add
nop
inc
call
dec
sbb
mov
mov
dec
xchg
xor
jg
in
xchg
pop
into
popa
iret
push
inc
jbe
jb
push
popf
lret
mov
pop
mov
js
dec
add
divl
loope
mov
fisubrs
add
sahf
lds
add
cmp
movsb
arpl
xchg
xor
inc
cmp
aaa
shlb
add
cmp
mov
jecxz
push
pop
mov
add
pop
sub
in
cli
fdivr
pop
add
jl
push
fs
inc
add
popf
jle
add
enter
or
mov
add
cwtl
dec
aas
movsl
out
rol
test
sti
cmp
xchg
or
movsb
cmpsl
cmc
push
or
test
push
pop
lea
jge
imulb
sub
in
shr
int3
add
iret
jp
mov
and
jns
add
adc
fnstcw
aam
leave
add
stc
inc
lods
mov
mov
jmp
and
add
loopne
aas
sbb
pop
cmp
jl
aaa
int3
movsb
add
movsl
sub
mov
add
mov
sub
and
popa
divb
jl
add
dec
mov
jnp
push
push
adc
add
mov
shlb
pop
ds
shll
add
mov
testb
lods
out
add
xchg
pop
pop
add
dec
add
cld
inc
sbb
dec
inc
into
loope
add
jmp
xchg
add
sub
mov
clc
mov
push
mov
fnstenv
shlb
in
pop
push
cmpsb
and
add
push
les
clc
out
sbb
jecxz
lcall
rolb
mov
out
push
jp
add
shlb
cmp
xor
test
fildll
jg
add
pusha
call
cwtl
jbe
lret
and
sahf
and
std
mov
or
and
xor
xor
jecxz
shll
xor
xchg
push
dec
and
lods
add
icebp
mov
push
sti
xchg
rolb
stos
leave
addb
ss
fidivs
movd
add
cmp
cmp
dec
cmp
ret
dec
shl
sub
pop
test
stc
or
sub
int3
mov
add
addr16
cmp
adc
xor
shll
push
add
loop
cmc
add
jbe
insb
lcall
mov
lods
pop
das
xor
dec
in
push
cmp
js
mov
mov
subb
roll
out
in
jbe
cmpsb
cmp
adc
popl
aas
sbb
cmpsb
push
or
scas
cmc
add
push
inc
sbb
pop
and
push
sarl
pop
loop
sbb
ret
xchg
nop
inc
daa
jmp
lea
jns
fimull
inc
mov
add
cmp
fdivrl
add
nop
ret
add
rcll
cmp
ror
add
add
cmpl
ja
fistpll
xchg
mov
add
mov
push
insb
test
ja
xor
int3
ficomps
in
add
sbb
aam
fidivl
add
add
mov
or
pop
sldt
jg
mov
pop
enter
and
popl
bound
jae
sbb
sub
xor
jno
out
jnp
and
mov
adc
add
cmp
sub
add
in
aaa
cmp
pop
and
data16
dec
add
popf
sub
xchg
dec
sbb
add
pop
mov
int
mov
xchg
loop
push
dec
lahf
jmp
pop
jno
jecxz
inc
fs
sub
cmp
push
out
pop
add
enter
stos
adc
push
inc
ljmp
inc
mov
sub
test
fcompl
add
shrb
imul
shlb
add
aad
pop
add
shlb
jne
fldl
mov
xlat
mov
inc
add
push
sub
jnp
jo
pusha
ret
lock
push
dec
jl
jbe
mov
push
lret
or
ds
fsubrp
int
sub
cltd
mov
lds
cmp
mov
les
aam
push
iret
andb
lahf
xchg
push
add
clc
add
out
dec
pop
add
or
and
fs
push
cli
push
sbb
xchg
and
outsb
add
fidivl
cmp
fadds
iret
test
jecxz
add
pushf
jg
aad
xor
mov
jo
lcall
fs
pop
dec
push
xor
add
stos
js
add
aad
out
mov
xchg
insl
add
add
and
or
cltd
int
fcomps
add
sub
imul
test
les
inc
roll
sarb
pop
push
pop
push
es
cmp
ljmp
cmc
push
add
adc
mov
jg
push
int
xchg
sbb
jl
leave
mov
push
sub
scas
sahf
xlat
outsb
xchg
shlb
sahf
xor
testl
clc
dec
imul
in
cmpsb
add
mov
icebp
outsl
or
and
loope
or
lods
add
scas
add
sbbl
add
mov
pop
xor
mov
jmp
mov
jns
mov
in
push
in
pusha
pop
sbb
rcrl
push
add
sbbb
fistps
add
xlat
xor
xchg
rcr
cmp
xor
add
mov
ret
pop
fdivrp
adc
add
pushf
frstor
rolb
jo
scas
std
sbbl
add
add
jnp
jns
and
out
rorb
inc
rolb
aam
jge
jp
and
fwait
in
call
rcrl
add
cmp
pop
out
push
add
mov
or
lods
sub
mov
xchg
sarl
add
pop
in
cmc
jg
sbb
out
cmpsl
in
jp
pop
pop
imulb
cmpl
inc
sub
lods
incb
stc
mov
xchg
dec
and
mov
xor
xchg
add
jmp
push
mov
mov
sti
add
add
push
xlat
mov
adcb
lock
mov
sub
scas
js
cmp
popf
mov
mov
add
or
mov
or
mov
pop
sbb
adc
sahf
mov
or
mov
xchg
dec
in
mov
mov
jmp
imul
inc
imul
insb
cmp
pop
arpl
add
xchg
lcall
xorb
jbe
cltd
pop
or
out
inc
arpl
add
orb
ret
call
out
rolb
push
add
popf
fldt
pop
mov
mov
mov
jne
dec
ret
xor
lret
add
push
popl
or
add
shll
pop
push
and
std
add
mov
xor
stos
daa
xor
push
pusha
fs
push
aas
ror
dec
stos
pusha
add
and
faddl
add
sti
pop
lret
add
and
pop
cwtl
rorl
adc
ret
push
pusha
jno
add
adcl
movsb
adc
add
sub
pop
add
jae
cmp
push
jp
add
mov
mov
adc
popa
add
sbb
add
add
and
shr
jl
test
sbb
rorb
add
jge
mov
lret
xor
fldl
add
cmpl
cwtl
add
push
test
addl
inc
sbb
jne
shlb
pop
sub
lods
add
add
jl
in
repnz
ja
repz
testl
inc
fs
cld
mov
addl
xchg
ss
lahf
cmp
ljmp
clc
out
in
fnstcw
addr16
test
paddd
dec
jae
sub
pop
in
cmpsl
sbb
lcall
iret
hlt
dec
and
inc
adc
into
test
sbb
movd
scas
shr
xor
pop
mov
add
sub
mov
adc
add
test
push
add
jae
mov
insb
cltd
in
cmp
adc
xor
cmp
add
iret
push
sbbl
sub
cmp
add
psubusb
add
enter
stc
shll
mov
add
push
test
lods
sbb
pop
fbstp
rolb
pop
and
imul
push
pop
push
lds
mov
ljmp
and
iret
and
in
add
loop
fwait
test
addb
push
gs
xchg
sub
add
add
scas
cmp
test
sub
mov
mov
adc
pushf
enter
inc
fdivs
sub
test
cwtl
fmull
adc
inc
scas
cli
jmp
in
pop
popf
pop
sarb
jl
cmp
lahf
loopne
mov
and
in
cld
mov
cmp
pop
xchg
pusha
or
lcall
cmc
cmp
dec
xor
adc
add
adc
sbb
jl
cmp
mov
dec
mov
jo
filds
sarb
add
sti
stc
or
inc
sub
cmp
dec
jno
mov
cmpsl
push
pop
inc
fcompl
setl
mov
in
xor
out
add
push
cmpb
mov
mov
adc
pop
push
jp
mov
orl
mov
idivb
in
movsl
jge
cwtl
add
mov
add
push
je
fsubs
adc
or
int3
scas
loopne
ret
sbb
pushf
into
cwtl
xor
inc
outsb
xchg
test
insl
lds
pop
pop
mov
sbb
mov
sahf
in
inc
in
mov
loopne
shl
add
imul
std
testb
imul
jmp
sbb
mov
sub
adc
scas
add
jmp
sbb
je
sbb
and
mov
xor
inc
loopne
mov
into
push
add
inc
pushw
insl
cmp
and
add
inc
inc
adc
in
gs
mov
loopne
mov
and
test
shlb
inc
mov
or
pop
add
dec
cmp
add
les
and
daa
ljmp
sbb
lock
sub
or
add
test
dec
inc
push
pop
or
mov
or
je
fwait
mov
mov
push
hlt
xorb
clc
dec
mov
add
stc
push
rorb
ljmp
mov
add
fmull
and
add
fwait
cmp
add
inc
stos
out
jae
aas
add
fucomp
dec
pop
mov
add
pop
jle
cmpsl
icebp
loope
clc
or
add
add
push
and
pop
repnz
dec
aaa
xlat
add
dec
aad
cltd
inc
repnz
and
arpl
popl
movsl
add
insl
pop
inc
sti
inc
add
and
mov
fdivrs
and
int3
add
flds
cmpsl
jne
xchg
jo
mov
pop
lahf
push
inc
das
xchg
sub
in
icebp
pop
add
sub
mov
xchg
insb
add
push
pop
cmpsl
add
fistpl
daa
add
cmova
jno
leave
lret
mov
add
clc
ljmp
xchg
dec
push
pop
int3
mov
mov
cmpsb
mov
inc
movsl
cld
addb
test
rcrb
pushf
lea
stc
pop
or
rcrb
bt
and
jp
rcll
fs
mov
add
jnp
rorb
adc
dec
add
sbb
dec
or
imul
dec
mov
add
add
xchg
add
inc
fadds
arpl
in
cmp
add
dec
cmp
xor
pop
lods
inc
bound
xchg
dec
push
pusha
or
ds
es
out
inc
push
inc
cmp
pop
add
sbb
mov
jnp
and
lea
dec
pop
ss
iret
pushw
and
dec
or
dec
or
int3
pop
add
inc
add
daa
cmpl
sub
cmc
in
rcll
push
test
inc
cmp
into
add
dec
xor
aam
mov
pop
loope
inc
push
lcall
dec
mov
stos
mov
test
std
fildll
outsl
mov
int
ret
insl
sub
out
stos
lret
dec
xlat
add
sub
pop
jg
clc
or
push
add
popf
and
pop
jge
adc
inc
add
dec
mov
dec
push
add
inc
jo
jo
add
jno
inc
or
in
sub
popa
mov
push
mov
cs
mov
add
pusha
xor
lcall
pop
push
repnz
adc
push
ds
push
out
das
loop
call
mov
in
into
test
add
fs
pop
push
popa
ltr
sbb
mov
les
pop
pop
cmp
lods
inc
adc
insb
sub
int3
jo
sbb
xchg
push
fistpll
inc
add
ficoml
xchg
addr16
lcall
icebp
sub
sbb
add
xchg
mov
insl
negl
jae
dec
mov
add
scas
cmp
loope
mov
mov
mov
popf
xor
aam
addr16
insl
cmc
ljmp
mov
sbb
leave
xchg
add
cmp
mov
addl
push
mov
pop
push
and
outsb
xor
mov
imul
add
lods
in
pop
add
cmc
jl
lods
lock
and
sarb
push
mov
and
hlt
cmc
cmpsb
add
push
stos
shrb
movlps
add
jg
mov
addl
pop
arpl
or
mov
insb
adc
add
pop
lods
nop
and
push
cwtl
loopne
pop
jnp
pmaxsw
jmp
test
lahf
add
and
sbb
inc
enter
fstpt
rcr
fldl
and
xchg
mov
xchg
in
pop
dec
les
sub
rclb
add
je
cmpsb
rcrl
and
cmp
xor
sub
pop
add
add
xor
push
cwtl
stos
and
mov
fimuls
std
xor
into
pusha
nop
out
push
dec
cwtl
xchg
add
pop
sahf
daa
add
fadds
ret
xchg
add
fidivl
gs
xor
add
mov
mov
mov
mov
rorb
push
dec
roll
jmp
icebp
lahf
lcall
adc
add
out
aam
xchg
test
insb
sbb
dec
push
inc
cmp
out
push
cmp
mov
ss
jmp
je
cmp
mov
inc
pop
incl
push
sbb
add
popa
or
imul
add
loopne
push
add
mov
imul
dec
test
cmpsb
cmp
mov
movsb
call
add
cmp
inc
daa
outsb
mov
mov
test
loope
adc
pop
add
insl
jbe
cmp
jl
and
and
push
cmp
movsb
bnd
mov
out
shlb
mov
mov
stc
andb
pop
add
lret
xchg
sub
cmp
mov
jge
sub
mov
rcrl
jp
js
outsb
jne
jnp
lcall
sbb
sbb
lahf
cwtl
imul
and
mov
jbe
lret
mov
jle
add
push
notb
into
and
mov
shrb
push
push
xor
inc
sub
pop
mov
andl
lock
shrb
fadds
je
jnp
jae
nop
xor
les
scas
imul
rcrl
pop
pusha
mov
mov
jns
add
lret
dec
sbb
int
cli
adc
pop
sbb
pop
fistpll
pop
sbb
loope
jmp
dec
ljmp
push
pop
mov
out
jns
push
cmp
mov
add
pminsw
push
mov
xchg
add
and
add
adc
add
sbb
adc
mov
and
adcb
pop
add
xchg
dec
ret
addb
sarb
sub
aam
mov
pop
sub
mov
pusha
addb
ret
mov
add
stc
fdivrs
iret
push
sbb
sbb
xchg
in
pop
icebp
jno
cmp
add
dec
push
bound
fistps
add
mov
jne
inc
sub
into
cwtl
xchg
push
jecxz
or
jnp
mov
cmp
shrb
popf
icebp
andl
inc
out
push
out
mov
add
loop
sub
push
pushf
push
cwtl
pushf
pop
xchg
fcompl
rcll
jle
cli
sub
pop
push
cmp
push
pop
outsl
sahf
enter
pop
xchg
xor
andl
or
scas
mov
mov
dec
cmpb
sahf
addr16
pop
push
sbb
add
rclb
js
scas
in
aad
mov
pop
dec
insb
inc
pop
mov
and
add
mov
bound
mov
add
loope
mov
add
cmp
call
xchg
fs
cmpsl
cmp
iret
and
add
lret
or
pusha
sub
xor
out
movsb
push
add
js
inc
push
add
mov
or
pop
xor
mov
mov
mov
jmp
add
cmp
xchg
mov
movsb
mov
inc
into
add
hlt
or
scas
fadds
clc
adc
inc
in
push
xor
xchg
jb
ds
aas
dec
pop
in
dec
or
lock
adcb
pushl
lret
sbb
andb
sub
or
add
cmp
cmc
xor
lret
das
scas
test
adc
add
cmp
adc
scas
pop
dec
mov
popa
sbb
and
outsl
push
mov
int3
add
inc
sbb
cmp
ljmp
jbe
aam
imulb
mov
xor
in
andl
xchg
pop
es
inc
mov
sub
jle
jbe
add
add
call
cwtl
int3
loopne
add
and
andb
pop
jle
inc
or
inc
outsl
mov
addb
cmp
jmp
js
cmp
xchg
sbb
jne
xlat
sbbb
inc
mov
or
outsb
shlb
loop
dec
push
divb
jns
mov
add
insb
push
push
or
scas
and
popf
add
add
jp
add
mov
lret
or
jle
dec
xchg
insl
aas
jnp
sbb
les
sub
xchg
adc
adc
pop
mov
clc
cmp
adc
shrb
pop
inc
push
dec
inc
cmp
or
push
sbb
pop
xchg
aas
insl
in
add
sub
and
xchg
sbb
test
pop
shr
sarb
cwtl
lcall
mov
jno
imul
add
xor
xchg
cmp
push
and
clc
adc
pop
inc
inc
mov
pop
xchg
adc
stc
cli
sub
pop
ds
pop
popf
jmp
xor
pusha
aas
andl
and
xchg
or
loope
xor
and
pop
int
pop
mov
mov
dec
aam
and
add
cmp
out
outsb
bound
lret
in
jmp
mov
mov
adc
pushf
push
cwtl
cmp
dec
dec
jge
out
imul
xchg
loope
call
std
dec
mov
add
jg
cmpsl
fistpl
add
dec
into
enter
cmc
xchg
cwtl
and
nop
add
sub
pop
add
push
jno
fisttps
mov
jge
aaa
icebp
mov
pop
ja
add
cmp
add
push
mov
icebp
add
in
xor
out
mov
cmc
add
sub
jnp
mov
jno
xlat
add
inc
aad
push
push
je
out
and
mov
cmp
clc
andb
pop
jno
icebp
add
jg
sub
in
and
imul
pop
add
add
xor
xor
xchg
adc
jnp
mov
pop
cmp
cmp
push
xchg
aas
lods
daa
in
add
mov
idivb
xor
adc
jbe
adc
jge
lock
cmp
lahf
mov
inc
movsb
add
sub
lcall
movsl
xor
inc
jg
add
push
leave
and
data16
popf
push
cmp
mov
mov
jecxz
or
add
xchg
lock
sarl
add
and
loopne
sub
mov
mulps
adc
call
lock
mov
scas
pop
push
daa
cmp
repnz
notl
subl
jns
mov
sbb
addr16
xor
cmp
inc
sbbl
jns
imul
cmpsl
adc
add
iret
or
cmp
pop
cmp
pushf
dec
pusha
jo
push
sbb
inc
aam
hlt
xchg
jns
sub
call
inc
cmpsl
fldenv
xchg
cmp
or
inc
sbb
mov
outsb
cltd
add
out
fmuls
daa
inc
add
lret
cmp
pop
aam
lock
add
or
cmp
dec
or
jecxz
xor
fildl
inc
loope
lds
out
dec
add
xchg
cmc
pop
xchg
fdivr
xor
ror
lock
in
adc
push
test
shrl
andl
push
sbb
sbb
xor
nop
int3
cltd
popf
pop
and
out
push
push
jo
jae
sbb
push
xchg
call
push
bound
add
sar
mov
arpl
mov
mov
or
lock
and
add
daa
inc
nop
push
lahf
fimuls
xchg
xchg
aaa
mov
push
push
test
xchg
fwait
pop
int
mov
iret
fsubs
push
pop
adc
add
subb
and
mov
daa
xorb
add
dec
inc
sub
sbb
push
push
add
mov
outsl
icebp
push
cld
add
stc
jge
add
inc
lcall
mov
push
std
int
xchg
and
push
jb,pt
add
adc
jns
pop
or
and
inc
mov
push
subb
lcall
loopne
std
call
fsubr
ljmp
add
jne
xorl
add
inc
pop
scas
pusha
cmp
jl
ret
ss
nop
add
imul
mov
add
popa
hlt
data16
ljmp
add
jge
nop
icebp
add
outsl
push
jns
pop
aaa
lahf
pushf
cld
mov
in
mov
mov
lods
and
pop
scas
lock
outsb
pop
jo
repz
cli
push
movsb
cmp
and
pusha
add
paddw
adcb
jno
xchg
cli
ret
mov
and
subb
fadds
mov
stos
cld
je
adc
cs
incl
sub
outsl
ljmp
inc
loopne
insl
xchg
xor
push
insb
cmpsb
mov
adc
push
outsl
mov
jns
and
cmp
sub
jl
je
add
xchg
pushf
movsl
movsb
sub
or
mov
in
mov
add
ret
pop
jg
or
imul
add
scas
stos
add
mov
sbb
cmpsb
movsb
daa
stos
add
mov
cmc
xor
call
cmp
jno
xchg
cmp
adc
jnp
push
inc
push
mov
ficomps
pop
pop
pop
fstpl
dec
shrb
adc
stos
xlat
inc
sti
inc
aas
loopne
testb
jge
in
js
jmp
dec
jns
adc
mov
ja
addb
push
rclb
add
loope
iret
push
addr16
mov
dec
lods
inc
les
add
out
in
cmp
or
jmp
rcrl
xchg
fisttpl
mov
mov
negb
xchg
add
jle
cmpsl
fcoms
cli
sbbb
jge
push
push
and
cmp
adc
add
sar
cmpsl
jb
iret
shrb
add
xchg
jmp
jl
adc
push
sub
fcomip
or
int3
or
add
and
dec
push
adc
cli
je
loopne
push
fimull
jo
jne
pop
inc
les
mov
add
xchg
lcall
or
and
and
test
and
pop
add
lock
xchg
push
lret
adcb
outsb
mov
add
dec
inc
xchg
loop
add
pop
stos
xor
and
sub
in
sbb
leave
jg
push
sbb
out
in
inc
cli
outsl
jo
adc
in
add
dec
pop
aam
testl
xlat
mov
jae
mov
xchg
dec
shlb
test
xchg
lea
mov
shll
add
fisubrs
xor
jl
add
xor
cmp
icebp
fcoms
add
inc
sub
scas
mov
test
add
in
cmp
test
sbb
rcll
push
lahf
add
adc
int
push
fsqrt
add
cltd
test
push
xchg
sbb
imul
add
jmp
shll
or
add
test
mov
jae
shl
cmpsl
hlt
sbb
fmul
ss
out
imul
push
xchg
mov
ja
dec
add
and
js
call
adc
add
test
push
jbe
add
stc
lea
sar
jmp
outsl
mov
xor
push
cmc
sub
sub
xor
in
neg
cmp
cld
inc
push
mov
cli
insb
sub
stos
jae
int
mov
or
ret
jne
jg
into
pop
or
mov
jp
loop
mov
mov
jl
add
ret
jo
pop
imul
leave
jle
pop
dec
mov
jge
pop
mov
jo
xchg
jp
and
jbe
add
or
lods
add
add
push
mov
inc
sbb
pop
or
xchg
shlb
sub
cmpsb
push
pop
sub
add
in
ret
testl
xchg
mov
out
mov
call
arpl
adc
rorb
fmul
or
nop
sub
or
jl
ficoms
push
subl
or
stc
mov
add
cli
inc
out
dec
call
dec
cwtl
mov
mov
outsb
or
outsb
add
pop
bound
jo
sahf
pop
add
outsb
mov
xchg
add
add
leave
mov
add
jl
mov
jmp
cwtl
pusha
loop
add
fs
or
bound
xchg
insl
loopne
jns
or
movsl
cmpsb
mov
sbb
mov
inc
adc
xor
xor
int3
int
add
sbb
add
pop
and
add
dec
mov
sbb
inc
in
push
jl
sub
ljmp
cmpb
xor
call
mov
cmp
cmp
and
clc
push
jl
add
lock
push
loope
ret
cmp
or
loopne
add
xor
sub
add
pop
push
push
sub
sbbb
xchg
mov
jbe
lods
mov
rcrb
cmp
clc
fcoml
mov
fldl
stos
loopne
sti
gs
pop
cmc
outsl
or
in
sub
and
fimuls
add
mov
shll
les
arpl
mov
push
popf
xchg
mov
xor
imul
mov
and
pusha
add
lock
sbbb
xchg
or
mov
test
mov
push
add
cmp
dec
add
clc
jno
in
sbb
cmpb
test
in
ja
pop
mov
dec
cmp
add
mov
lock
std
loop
sub
dec
punpcklbw
loop
pusha
cmp
xchg
cmp
pop
cmc
aad
in
cltd
enter
mov
nop
add
icebp
popf
push
adc
cmp
and
cmp
xor
lret
xchg
mov
push
stos
popa
and
xorb
add
lret
mov
subb
mov
andb
inc
add
push
xor
jle
rclb
in
jne
cmc
enter
sbb
loope
jg
out
push
popf
sbbb
dec
lldt
testl
add
mov
arpl
push
ss
adc
mov
stos
mov
or
and
dec
popl
xor
fstpt
push
adc
dec
out
pop
arpl
inc
add
in
xor
ret
add
test
add
pop
mov
cmp
addb
fmull
push
cmp
pop
cwtl
insb
dec
pop
xor
add
lea
push
fwait
dec
dec
pusha
add
lock
xchg
cmovns
mov
dec
push
loope
push
and
in
push
push
aas
fiadds
adc
dec
je
cmc
aam
adc
dec
push
mov
insl
cmp
lock
in
cltd
or
inc
add
pop
push
jnp
jns
sub
pop
jae
pop
mov
int3
sub
xchg
leave
in
ss
out
push
and
add
jne
or
xchg
mov
lret
add
test
mov
and
inc
insb
adc
sub
sub
or
das
xchg
and
or
nop
xor
stc
cltd
dec
add
addb
das
inc
mov
sbb
mov
std
inc
jle
adc
daa
mov
or
int3
pop
inc
and
test
jecxz
inc
pop
adc
mov
test
mov
mov
and
add
in
loopne
sbb
daa
adc
sub
inc
dec
jecxz
cmp
adc
push
and
ds
add
data16
sub
test
mov
stc
adc
xchg
out
add
in
jbe
psrlq
fcomi
andb
inc
push
jg
add
dec
insl
dec
dec
lahf
fmuls
add
inc
inc
in
loop
jno
jbe
in
push
push
popf
sub
into
jmp
add
ret
fwait
les
out
xor
dec
pop
addl
xchg
or
mov
lds
test
in
testl
sbb
mov
inc
inc
insl
shrb
and
rolb
outsb
pop
sahf
cmp
jecxz
pop
jmp
mov
fcomp
pop
jbe
lock
dec
add
jbe
add
xchg
sub
sub
call
add
out
cmp
add
sti
and
lods
imul
movsl
xor
push
pusha
lea
or
and
lods
and
call
push
sti
mov
cmp
mov
stos
cmp
sbbl
adc
cmc
cmp
sub
add
call
test
daa
pop
ret
xor
hlt
pop
clc
mov
add
xlat
mov
invd
adc
xchg
pusha
ljmp
xchg
adc
add
hlt
adc
adc
outsb
push
add
xchg
cmp
xor
pushf
add
andb
add
scas
jp
icebp
shll
xchg
aad
ja
jecxz
jne
add
mov
sub
add
dec
pop
roll
jle
sahf
inc
mov
jbe
out
adc
push
sbb
bnd
lahf
adc
xor
push
nop
jbe
mov
dec
xlat
pop
push
addl
sub
or
and
sbb
push
add
add
and
pop
dec
pop
mov
xor
out
pop
addr16
jae
loopne
mov
or
add
loop
or
popa
cli
incb
push
xchg
lock
mov
add
insl
shrl
out
iret
aad
bound
pop
cmp
fnsave
movsb
xchg
push
loopne
test
js
dec
mov
aas
ret
push
jmp
and
popf
sub
sub
xor
pop
in
or
sbb
xchg
pop
pop
mov
mov
add
int
bound
fdivrl
jb
add
outsl
cmpb
ret
push
enter
xorl
mov
jle
xor
or
jne
inc
daa
jno
push
inc
in
les
or
sub
std
push
repnz
aad
aas
fwait
xchg
and
pop
or
scas
out
mov
js
jns
push
cmp
and
xlat
add
lock
xor
rcr
add
mov
mov
cmp
enter
dec
mov
fistps
and
adcl
loopne
cmp
sub
mov
outsb
push
adc
clc
pop
test
mov
insb
push
roll
sub
jo
add
out
jl
sbb
push
sqrtps
mov
sub
pop
or
cmp
dec
pop
lods
sub
aas
push
xchg
jg
jg
popa
xor
jmp
enter
cmpl
arpl
inc
pop
push
or
push
push
test
out
inc
adc
jnp
sub
sbb
xor
adc
xchg
sbb
roll
cltd
adc
mov
push
adc
fadds
pushf
push
lock
ja
add
pop
in
fwait
cmp
enter
data16
fists
sub
cmp
hlt
daa
std
popa
addl
cwtl
je
add
leave
inc
lret
pop
daa
and
fisubrs
loopne
nop
scas
add
dec
orb
mov
mov
adc
in
call
add
loopne
mov
add
lods
cmp
sbb
inc
push
rolb
aas
add
in
mov
add
pop
nop
pop
adc
scas
call
lock
add
popa
pop
fisubrl
and
mov
add
xchg
add
movsl
mov
jecxz
insb
adc
mov
test
lds
jge
insb
add
adc
or
enter
call
pushf
or
and
dec
dec
add
out
in
xor
pop
jge
add
aas
popf
insb
ficoml
movsl
cmp
and
jnp
subb
cmp
mov
clc
les
rolb
rolb
push
insl
gs
dec
div
xor
fistl
lods
mov
jmp
push
mov
adc
inc
mov
cld
dec
out
cmp
add
cltd
popf
fcmovnbe
loope
rcll
mov
adc
lret
push
sbbb
sti
pop
incl
add
xchg
aad
arpl
jbe
nop
and
je
cltd
inc
sbb
shlb
and
pop
cld
dec
add
mov
push
fcom
dec
mov
xchg
cmp
aaa
ficoms
xor
xchg
lret
sahf
mov
das
add
je
pusha
out
imul
sub
xor
inc
sub
pushl
push
push
fldcw
mov
mov
jp
add
fcompl
test
dec
add
leave
int3
pop
clc
xchg
out
imul
mov
jne
mov
nop
mov
in
inc
mov
inc
mov
jecxz
pop
mov
xor
inc
ret
dec
add
fwait
pop
pop
negb
js
sub
dec
xchg
xor
mov
in
hlt
fwait
push
add
mov
rolb
push
fdivs
movsb
jecxz
adc
xchg
xor
push
cmp
inc
push
inc
cltd
jae
ret
xor
aad
cmp
add
je
and
push
ss
lock
out
nop
jmp
lcall
inc
jp
mov
mov
add
dec
and
mov
xor
inc
sub
pop
push
add
pop
fwait
daa
outsl
cmp
dec
add
aad
sub
push
sub
cli
daa
sbb
es
dec
pop
out
or
jg
inc
pusha
mov
push
mov
lea
mov
int
sub
xchg
in
mov
push
add
or
xor
pop
cmp
pop
and
sub
bnd
mov
shlb
jbe
test
sbb
out
pop
mov
in
push
sbb
testb
mov
movsb
in
add
int3
push
add
xor
loopne
int
mov
and
or
lods
jl
add
adc
test
sbb
mov
les
xchg
gs
add
test
mov
inc
xchg
mov
jge
pop
je
mov
xchg
cmp
mov
jns
add
push
sub
sbb
xor
rcll
cmp
popa
in
add
in
stos
jnp
push
in
add
xchg
lods
repnz
jle
dec
lods
cmc
loopne
mov
jnp
jmp
adc
cwtl
xchg
add
add
data16
xor
push
mov
add
imul
xor
xor
push
arpl
push
sbb
xor
movsb
xor
mov
cs
fisubrl
int3
sahf
sub
decl
inc
int
mov
stos
add
inc
sub
sbb
inc
je
xor
jns
fucomi
ds
stc
pop
mov
cwtl
mov
test
add
jge
jl
xchg
stc
jmp
aad
sbb
and
mov
cs
pop
dec
add
pop
mov
je
add
mov
out
add
xchg
xchg
xor
ret
or
aas
out
aam
pop
mov
add
fimuls
add
sub
push
add
xor
out
push
fmull
xor
inc
add
add
mov
insl
add
push
xlat
mov
bound
or
mov
and
cmpb
sub
pop
pop
sbb
mov
test
mov
pop
xchg
cmp
dec
adc
xor
or
add
or
lea
inc
test
mov
pop
mov
jo
aas
dec
jbe
sub
add
xchg
pop
pop
jl
jo
dec
add
mov
inc
jmp
lods
pushf
and
push
push
add
mov
jno
mov
pop
ja
nop
jl
add
and
jp
jmp
movsb
cmpsb
sub
push
lahf
add
dec
jle
add
sbb
jmp
insb
fists
jle
xor
mov
cwtl
out
mov
pusha
inc
outsb
mov
mov
scas
add
push
xor
adc
test
stos
or
sub
fdivr
jp
add
sar
jg
pop
sub
rolb
mov
hlt
out
add
xchg
pop
xor
sub
lret
cmp
mov
dec
lahf
cwtl
dec
or
arpl
sbb
push
adcb
adc
inc
cs
adc
add
mov
js
xchg
add
fs
mov
ds
dec
jns
loope
or
jo
adc
add
cltd
dec
jbe
in
mov
out
ss
sbb
rolb
jno
cmp
lods
sub
es
add
xchg
aad
mov
pop
add
incl
test
jle
push
mov
sbb
dec
sbb
clc
aas
sub
cmp
call
push
mov
mov
fs
pop
bound
add
jmp
mov
imulb
je
push
add
sub
stos
cmp
test
xchg
dec
adc
xchg
insb
fnstcw
sub
add
inc
rorl
movl
hlt
pop
jg
pushf
push
pop
or
jmp
loope
mov
adc
idivb
fwait
mov
in
repz
fildl
stc
fldl
gs
dec
in
loopne
jecxz
push
bound
add
hlt
xchg
mov
int
movsl
add
and
mov
pop
jae
add
mov
enter
add
push
xchg
lock
icebp
inc
jecxz
xchg
add
arpl
xlat
mov
push
ljmp
mov
push
xchg
push
mov
mov
add
out
rolb
xor
mov
inc
repnz
sub
add
xor
add
idivl
xchg
cwtl
xor
jg
jne
xchg
rcr
std
add
cmp
dec
cmpsb
xchg
imul
jns
shrl
add
inc
stos
call
add
mov
mov
sti
add
push
adc
add
adc
adc
scas
lock
leave
js
and
and
cli
or
and
insb
xchg
ja
repz
pop
fisttps
scas
out
xor
aad
fs
jns
movsl
data16
hlt
repnz
push
decb
xor
cltd
and
mov
mov
ret
in
outsl
mov
lea
add
rolb
loopne
aas
cmpb
dec
xchg
mov
ljmp
pop
push
mov
pop
fwait
test
push
es
iret
mov
adc
int
or
add
pop
test
inc
fwait
cmpsb
in
mov
out
dec
and
sub
pop
or
push
sarb
mov
loope
fildll
push
in
jbe
rorl
dec
scas
dec
adc
push
sbb
fnstenv
xor
test
pop
and
shlb
cmp
inc
add
pushf
pop
popa
xor
in
mov
les
sub
dec
mov
push
add
push
in
rorb
cmp
out
repnz
cmp
lcall
push
sarb
push
sbb
pop
ljmp
mov
mov
inc
dec
xor
ss
push
in
add
outsb
clc
xor
loope
rcrb
shrb
pop
xchg
fwait
out
adc
sbb
sub
bnd
push
in
and
mov
xchg
xchg
or
mov
push
lds
add
out
jmp
add
clc
js
pop
sub
lods
imul
pop
aaa
fwait
pop
jo
add
dec
insl
mov
popa
add
add
popf
aad
mov
test
add
setl
jne
jb
inc
jo
pop
add
pusha
push
xor
cmp
test
mov
push
add
mov
xchg
push
data16
addl
adc
fiadds
mulb
or
jb
push
add
xor
push
or
xchg
nop
outsl
cmp
jnp
cmpsb
mov
add
lods
jle
mov
vsubsd
movsb
add
mov
nop
pusha
add
in
xchg
fnstsw
lea
jns
adcb
jecxz
push
clc
jnp
mov
in
nop
cmp
add
cli
jle
cmp
inc
pop
mov
int3
mov
cmp
push
add
and
hlt
adc
add
lret
mov
roll
pop
cmpsl
jb
sbb
pop
ja
scas
lods
pop
cmpb
mov
mov
cmp
xchg
xchg
cmpb
mov
stos
add
push
sahf
out
mov
inc
int3
loope
scas
mov
or
push
pop
idivb
adc
syscall
add
dec
test
mov
lret
and
cmp
popf
pop
pop
test
repnz
or
xchg
mov
dec
cvtdq2ps
add
js
jg
and
fidivl
or
push
add
adc
xor
sub
sbb
lods
scas
lret
mov
enter
add
pop
mov
sbb
add
movsb
aas
pop
xlat
pop
or
loopne
test
add
scas
xchg
pop
call
pop
jg
aam
add
lahf
ret
xlat
jp
arpl
and
iret
push
mov
rol
adc
cmp
mov
in
pop
jl
stc
out
inc
daa
add
ljmp
add
rcr
in
push
pop
or
sub
push
scas
or
repnz
stos
lret
jp
add
imul
add
mov
push
scas
jle
pushl
xchg
and
mov
mov
popf
inc
lahf
shll
aad
pop
sti
sbb
mov
testb
mov
jnp
add
dec
cmpsl
sbb
push
add
inc
xchg
xchg
jp
add
mov
scas
or
jle
sbb
pusha
movsl
sbb
push
jge
lock
stc
add
pavgb
aaa
mov
stc
pop
pop
test
mov
leave
jp
aas
cmp
dec
fwait
cli
or
popa
jge
loopne
rolb
scas
jmp
in
push
loop
iret
into
pop
sti
cwtl
out
fiaddl
adc
leave
pushf
call
loopne
imul
andl
xchg
sbb
and
sub
fimull
and
fs
push
aaa
cmpsb
jb
add
mov
mov
jge
add
cmp
xorb
adc
add
inc
or
add
push
mov
sbb
add
out
out
jo
pop
pop
add
js
xor
jl
sbb
lret
cmc
inc
mov
adc
push
jg
mov
adc
push
xor
gs
loop
fsubrs
adc
add
imul
pop
pop
cmpl
and
xor
in
push
lods
movsb
mov
addl
sbb
pop
movhps
outsb
loopne
adc
sbb
dec
jns
inc
cmpsb
xchg
addb
sbb
or
xor
xchg
xchg
insl
ljmp
and
mov
xchg
addr16
mov
jmp
pop
add
notl
jbe
adc
imul
idivl
aad
daa
das
or
ja
fs
loopne
call
addr16
fwait
rclb
mov
mov
mov
cmc
leave
pop
add
push
xor
mov
inc
dec
out
in
inc
in
pmaddwd
loopne
scas
in
dec
lock
ljmp
popa
lock
inc
ja
lcall
fistpl
loopne
dec
push
adc
test
add
pop
lret
out
add
add
jg
loope
xchg
je
ja
add
sub
into
add
cmp
fnstsw
xchg
cld
scas
add
pop
mov
add
or
adc
add
add
popf
adc
mov
dec
add
int3
rolb
adc
add
sbbl
jnp
sub
inc
pop
mov
add
add
cmp
xchg
add
or
in
cwtl
test
xchg
pop
cmp
mov
inc
inc
adc
loopne
jns
mov
pop
pop
and
mov
aad
mov
imull
xor
outsl
cmp
add
inc
addl
xchg
mov
pushl
pop
outsb
pushf
lds
in
dec
mov
inc
xor
movsl
int
scas
add
test
sbbl
lret
push
lock
orl
xor
sti
cmpsl
dec
jge
pop
pop
push
push
dec
std
clc
sbb
sub
cwtl
aad
pop
sarl
and
adc
insb
add
int
addl
mov
push
mov
sbb
test
and
stos
add
jbe
add
dec
arpl
lods
stos
and
shrb
adc
cmpsb
xlat
test
add
dec
jge
cmp
outsl
or
pop
cmp
or
cltd
push
stos
out
seto
es
xor
jge
cmpsb
push
fwait
jecxz
stos
jae
add
shrl
aam
in
add
jp
jmp
cmp
popa
add
movsl
and
push
mov
pusha
daa
sbb
dec
stc
sub
xchg
aas
daa
cwtl
lock
call
inc
shrl
scas
imul
xchg
outsb
sarl
out
add
into
jbe
jp
sbb
pop
fsubrs
hlt
push
push
xchg
add
or
lret
push
jnp
pop
xor
sbb
stos
xchg
sbbl
mov
add
pop
fbld
scas
in
pop
sbb
mov
mov
and
dec
mov
lods
sub
add
sbbb
mul
pop
add
jb
inc
add
shlb
out
into
lret
jb
pop
int
push
mov
aam
sbb
mov
es
sub
loope
inc
mov
add
fwait
mov
out
mov
sbb
lret
jne
xchg
push
sbb
xorl
pop
mov
push
add
push
lret
add
fbstp
fdivs
pop
xlat
mov
ds
lret
sti
cld
add
mov
inc
pop
sarl
cmp
xor
jmp
xchg
push
xor
add
fdivp
test
add
jnp
lods
xor
sub
idiv
and
jmp
fs
sub
sbb
jle
icebp
add
xchg
std
loop
mov
shll
rolb
add
in
outsl
and
add
iret
rorb
cli
fs
pop
ja
pop
add
pusha
mov
push
dec
add
out
shlb
jbe
jge
popa
ja
or
sbb
addr16
xor
xor
sarb
add
sub
inc
fcoml
data16
dec
add
loope
insb
daa
pop
jp
aas
outsb
addb
rol
iret
add
cmp
xlat
adc
fdiv
add
sar
and
inc
and
mov
int3
and
fmuls
dec
cld
add
das
mov
test
mov
mov
mov
sub
mov
mov
scas
fdivrl
push
mov
xorl
bswap
adc
push
movsb
pop
add
ficoml
addl
pop
inc
cmpsb
adc
js
insl
add
or
cmp
sub
es
jge
rclb
gs
add
jb
sbb
push
xchg
testl
add
mov
test
mov
loopne
fcomp
sbbl
inc
js
pop
lods
adc
add
sbb
add
xchg
imul
add
frstor
mov
pop
stos
sbb
add
aaa
dec
jmp
mov
mov
movsl
sbbl
add
jne
mov
sbb
stos
sbb
mov
mov
mov
xchg
pop
add
pop
dec
ljmp
in
mov
arpl
add
daa
insl
insb
or
mov
leave
xchg
outsl
repnz
mov
pusha
or
add
cltd
sbb
lods
inc
jno
pop
shld
std
sarl
sbb
jge
add
enter
dec
and
call
mov
sbb
in
cltd
test
into
add
enter
add
jp
adc
jl
leave
adc
aad
add
mov
sbb
sahf
scas
jns
mov
insb
inc
stos
or
and
jne
adc
mov
or
mov
movsl
inc
sbb
subb
jge
jmp
rclb
mov
sub
dec
push
sti
lret
mov
loope
add
dec
push
aad
sbb
std
imul
jle
add
xchg
and
loop
add
fmulp
jl
xlat
and
imul
setns
sbb
push
cmp
gs
jle
sti
aam
xchg
dec
filds
and
in
loopne
pusha
mov
sub
dec
adcb
aaa
aam
push
icebp
adc
std
jg
pop
jge
cmp
and
mov
dec
cmp
jmp
jecxz
fwait
mov
in
pop
push
test
push
xchg
or
mov
sbb
jo
loopne
aas
mov
jns
fs
add
jmp
outsb
cmpsb
and
mov
xchg
cmp
pusha
and
add
mov
mov
add
push
cmp
or
jb
pop
out
stos
dec
inc
test
pop
and
dec
add
int3
pop
sub
divb
add
scas
rcl
rcrb
jnp
stos
jecxz
or
ss
lods
lds
or
cli
pop
add
das
xchg
rcrb
add
jo
jnp
es
jg
ss
add
mov
out
add
cwtl
mov
push
repnz
fldl
push
add
sub
cmp
xchg
aam
adc
xchg
or
jae
int3
hlt
mov
mov
sub
out
add
cmp
mov
add
lahf
fdivl
add
xchg
dec
lcall
mov
push
lret
in
jnp
ret
pushf
mov
inc
nop
mov
lds
fwait
jp
dec
scas
arpl
pop
pop
cmp
push
xor
int3
xchg
cmp
add
fdivl
adc
jns
hlt
enter
pop
jns
add
cmpsl
add
jl
call
push
in
rcrl
clc
inc
cld
cli
das
add
sub
dec
and
inc
add
push
push
jns
addb
sbb
add
fnsave
pop
jnp
rcpps
movsb
add
sahf
aam
add
push
mov
pushf
pop
fucomi
cmp
rorb
fs
sti
add
lods
or
cld
in
jbe
fnstenv
and
jns
es
cmp
nop
add
out
movsb
cmpsb
or
inc
cmp
dec
dec
pusha
xchg
rolb
xorl
jae
mov
adc
les
outsl
cmp
and
gs
mov
mov
aad
int
xor
das
and
dec
mov
addr16
push
add
xor
out
ds
adc
addl
add
push
aaa
add
mov
lret
xor
mov
dec
mov
aas
stos
enter
push
add
mov
cmp
adc
cmc
imul
cmp
ret
cwtl
xor
inc
adcb
mov
subb
push
test
push
test
adc
add
insl
dec
sub
mov
add
push
aam
pop
jne
aad
dec
mov
cmp
fisttps
pop
lahf
mov
cmc
sbb
mov
shrb
add
adc
repnz
and
stos
add
add
pop
es
add
scas
push
xchg
push
mov
jp
sub
lret
incl
pop
loopne
jnp
pusha
std
sub
mov
pop
outsl
iret
pusha
dec
pushf
pop
or
insl
push
dec
add
lds
sbb
daa
inc
cmpb
add
push
push
adc
filds
adc
fcomp
mov
and
cmp
xor
push
cwtl
mov
lea
xor
adc
push
add
sub
pop
add
cwtl
movsb
jle
sub
shlb
lahf
and
cmp
cmp
cmpsb
add
dec
ret
mov
dec
imul
mov
pop
add
mov
push
out
add
xor
roll
in
test
dec
pushf
stos
lds
out
dec
test
aam
loop
add
cmp
cmp
pop
test
cltd
inc
popa
in
fiadds
in
outsb
sub
lods
mov
mov
jge
stos
add
add
push
jle
in
pop
aaa
inc
add
or
mov
add
inc
push
jg
ficoms
and
aad
cld
leave
fldenv
mov
adc
mov
add
ret
push
jp
inc
add
jae
ds
pushf
rorb
pusha
shll
pop
push
xor
mov
pop
pushf
mov
movsb
dec
add
js
cmp
pop
mov
dec
clc
jo
xor
cli
inc
cltd
ja
mov
cld
xor
jl
adc
mov
sbb
and
add
fs
shrb
test
out
insl
clc
sahf
pop
cmc
inc
sub
pop
mov
mov
push
into
jns
js
into
mov
inc
push
mov
sub
cltd
mov
mov
out
aas
pop
stos
push
push
xor
add
and
push
mov
inc
icebp
cli
movsb
lock
mov
add
int3
mov
ficoml
add
pushf
xchg
std
call
rcrl
sbb
das
add
cmc
outsb
add
lds
test
mov
add
cmp
cmp
add
lods
fistpll
add
clc
sti
sahf
addr16
add
test
cld
insb
xchg
add
cltd
and
cmp
rcl
jnp
inc
lock
fcmovb
in
jns
ret
cli
movl
and
jo
fcomp
rcrb
add
sbb
mov
fsubr
into
mull
push
inc
add
fmuls
xor
xlat
scas
dec
outsl
ret
inc
mov
mov
lock
jmp
scas
add
xor
loope
repnz
adcl
add
mov
js
stos
test
jge
mov
pop
sub
mov
push
add
mov
pop
inc
insb
jo
ret
dec
les
sub
lods
push
mov
enter
nop
xor
gs
jno
call
add
iret
inc
inc
les
fcomps
imul
jp
jge
or
into
push
ljmp
push
push
sti
clc
add
xchg
cmp
test
pop
push
push
js
mov
sbb
rcr
in
jo
lahf
add
lock
popf
aaa
add
or
cwtl
xor
stos
pop
adc
mov
pusha
setnp
push
jo
pop
push
jno
adc
or
push
xorb
lods
pop
push
mov
pop
loope
sub
fmul
fcomi
insb
mov
scas
adc
fcomip
ljmp
and
xchg
inc
add
xor
icebp
pusha
je
sub
pop
push
pusha
pusha
stos
xorb
insl
in
add
sbbb
repnz
or
or
dec
add
ss
adc
push
fstp
dec
inc
xor
mov
cli
mov
in
mov
loopne
add
lods
dec
adc
and
mov
add
xchg
xlat
fadds
rcrb
test
mov
cmpsl
dec
outsb
and
push
cmp
mov
loopne
insb
xor
jl
jo
dec
mov
push
or
sub
aas
add
mov
xchg
fstl
pop
movb
aaa
imul
hlt
shlb
cwtl
jne
push
or
and
or
jne
incl
fsubl
std
daa
sahf
xor
sbb
add
sub
jne
out
sti
or
test
sbb
jp
add
je
std
jo
inc
aaa
dec
adc
mov
pusha
shll
lahf
stc
ds
or
ljmp
rclb
add
int3
fstl
mov
add
cmp
imul
aaa
shlb
or
sub
fisttpll
testl
into
add
mov
sti
mov
jge
loopne
stos
subl
mov
add
push
inc
jb
dec
movsl
push
xchg
adcl
inc
mov
jae
add
adc
add
aam
cvtpi2ps
cmp
xor
sub
mov
rol
out
test
dec
ret
test
mov
xchg
or
mov
les
add
add
push
mov
loop
push
ret
out
out
ret
lcall
sub
pop
xchg
icebp
lods
or
pusha
lods
daa
add
add
add
enter
cmp
inc
jp
lahf
ret
stos
psllq
mov
dec
and
std
sub
add
ret
mov
outsb
cmpsl
jge
icebp
push
sub
jmp
mov
xor
sub
inc
cmpsb
js
sub
loopne
into
add
jne
outsb
pusha
and
jle
jmp
inc
add
mov
test
int3
pop
inc
pop
stos
mov
divb
inc
dec
fiadds
xor
mov
arpl
fsts
pop
fldcw
add
pop
dec
rol
and
dec
sub
leave
or
jb
addr16
dec
adc
inc
sbb
cld
pop
push
add
jne
add
cmpl
orb
outsb
add
push
lds
cld
push
icebp
call
jo
xor
and
cmp
shlb
xchg
mov
mov
pop
jbe
ss
and
mov
stos
xchg
jle
mov
je
and
mov
movsb
ljmp
add
and
jle
xchg
addl
push
insb
pop
ror
add
push
jae
mov
js
add
stos
scas
pop
fwait
lret
mov
fcmovbe
mov
mov
call
xor
add
jl
pop
add
das
xor
in
scas
mov
callw
dec
push
pop
fs
or
pop
cmpsl
sbb
dec
in
xor
aad
cmc
mov
jecxz
ret
ss
add
pop
stos
mov
movsl
mov
or
int3
jne
cmpb
repnz
xor
dec
sbb
mov
mov
pop
mov
int3
rolb
or
dec
test
jge
mov
jecxz
subb
pushf
add
mov
lcall
mov
add
xchg
nop
jnp
inc
orl
add
mov
or
test
movsl
int3
in
pop
cmp
js
or
dec
pop
inc
lock
mov
outsb
jl
pop
fcompl
and
xor
push
outsb
mov
inc
in
xor
jp
iret
adc
add
mov
int
imul
inc
jmp
mov
push
add
sub
cmp
mov
xchg
dec
xchg
arpl
cltd
mov
push
cmp
data16
ja
push
jecxz
add
int
xor
inc
inc
mov
mov
jmp
xor
aas
fdivrl
ret
jno
jno
add
dec
scas
inc
or
stc
mov
add
add
inc
mov
inc
mov
add
js
popl
lea
ja
cmp
sbbl
xchg
jl
cld
inc
std
jmp
inc
sbb
shll
pusha
sti
cld
out
sbb
fistps
dec
lret
lock
pop
aam
xor
xchg
stc
add
gs
out
jne
add
cmc
jo
lcall
cs
cltd
cmpb
into
jp
and
xchg
in
xor
ja
push
cld
shll
sub
adc
aas
mov
pusha
insl
sbb
packsswb
jle
das
lcall
add
sbb
pusha
outsl
jne
add
dec
repz
popf
scas
jns
add
jl
incl
mov
xor
out
mov
sub
inc
mov
cs
sarl
outsl
fwait
inc
mov
loopne
jle
dec
mov
int
movsl
std
insb
iretw
add
popf
dec
test
mov
test
cmp
jo
xchg
negb
fsubrl
scas
add
cmp
mov
push
jmp
sbb
add
sbb
ja
lods
shll
and
and
mov
or
cld
dec
lcall
pop
imul
xor
adc
inc
rclb
dec
jno
testl
test
push
cmp
xchg
inc
add
shl
out
add
cmp
cld
sarl
mov
sbb
and
add
add
xchg
cmp
xchg
push
cmp
add
in
and
push
dec
jmp
fcomi
cli
and
and
add
xchg
cmp
xor
fcmovb
lcall
mov
xor
fcomi
dec
out
xor
es
inc
cmp
enter
add
adc
push
loope
cmp
inc
jge
iret
in
push
cmp
cmp
and
xchg
cmp
inc
dec
xchg
mov
and
mulb
jecxz
xchg
mov
lods
adc
test
lods
fwait
mov
xlat
inc
add
push
out
push
cvttps2pi
adc
enter
sub
pop
popf
xor
fiaddl
in
sub
push
gs
mov
xchg
add
push
js
repnz
xchg
mov
stc
das
add
clc
sub
ret
xchg
xchg
xchg
push
push
adc
les
add
or
mov
jne
dec
add
pusha
roll
or
out
lea
jae
xchg
out
andl
xchg
push
add
aam
sub
je
sub
xchg
popf
adc
and
cmp
lret
test
fistps
loope
pop
and
sub
dec
out
cltd
rclb
push
out
lret
mov
xor
adc
ss
add
cs
lret
sub
mov
dec
lods
add
iret
cmp
pop
cli
add
jecxz
mov
mov
push
iret
inc
mov
sbb
fucom
repz
sub
pop
shll
mul
dec
es
add
sub
or
jecxz
pusha
mov
add
push
xchg
pushl
add
mov
add
mov
dec
cmp
sbb
fstl
gs
adc
fcoml
mov
push
pushf
aas
or
push
sahf
push
or
js
dec
out
adc
jo
cmp
or
push
jnp
rolb
pop
lods
xlat
movsl
test
nop
pop
lahf
and
mov
add
or
loopne
and
outsb
sarl
jb
push
push
mov
add
cmc
mov
push
add
shlb
inc
call
xchg
dec
xchg
xchg
mov
push
push
mov
mov
inc
in
mov
mov
add
jmp
or
pushf
mov
jae
adc
lods
cmp
hlt
adc
movsb
add
ljmp
lcall
ret
add
pop
ds
aam
insb
mov
bsf
outsb
and
push
cwtl
repz
punpckhbw
inc
or
rorl
lods
cli
psubsw
pop
aaa
xorl
pop
push
lcall
mov
out
fmull
lea
aam
in
call
or
sub
inc
repz
incl
lods
movsb
and
push
pop
ret
cld
add
push
adc
ljmp
push
adc
add
inc
inc
and
mov
push
add
ret
pop
adc
dec
das
jo
aam
or
dec
loopne
std
pop
add
cs
out
adc
add
mov
int3
mov
mov
pop
mov
inc
mov
iret
movsl
xchg
xlat
add
sbb
inc
cmp
jnp
fnsave
movsl
scas
loop
add
ds
mov
imulb
xchg
lock
dec
pop
jg
adc
mov
add
icebp
sbb
dec
sbb
pusha
jbe,pn
out
sbb
nop
sarb
push
sbb
insl
inc
fdivrl
dec
cmpsb
test
push
cmc
movsb
cmp
and
repz
bound
jecxz
xchg
jge
adc
fidivrl
std
push
dec
pop
loopne
mov
cmp
repnz
out
mov
pop
mov
insb
add
pop
pop
mov
scas
add
push
jo
add
out
loopne
sbb
cmp
mov
mov
hlt
test
repz
mov
pop
movsl
notb
add
ret
fstps
sbb
and
das
loop
sahf
jp
add
mov
std
adc
adc
push
test
movsl
pop
sub
add
sbb
imul
add
int3
in
add
repnz
push
shll
iret
mov
cmp
add
mov
jle
add
and
push
push
out
mov
ret
add
push
sbb
fiadds
jne,pt
mov
test
cmp
mov
jg
pop
fbstp
aas
dec
xor
jmp
outsb
add
cmp
enter
sarb
mov
and
in
xor
inc
mov
cmc
and
add
mov
popa
add
adc
add
cmp
adc
adc
xor
das
std
and
push
verw
mov
shrl
mov
mov
test
mov
mov
imul
in
jb
lock
and
or
push
shl
add
idivl
and
sbb
pop
dec
add
les
insb
and
cmc
add
int
jb
arpl
push
xchg
insb
mov
inc
adc
mov
imul
mov
jno
jmp
mov
dec
add
int3
cmpsl
cmp
test
loope
imul
add
pop
or
faddl
adc
add
in
mov
cltd
mov
nop
mov
mov
fnsave
jle
jecxz
push
mov
out
in
cmpb
rclb
or
out
loop
jecxz
mov
int3
mulb
lds
adc
or
mov
sub
jae
popa
xchg
adc
push
test
and
sbb
pop
add
and
es
pop
xlat
add
mov
jbe
cmp
add
add
xor
sti
hlt
or
and
adc
bound
std
push
out
das
add
cmpsb
mov
loop
adc
test
xchg
cmp
inc
pop
repz
mov
nop
add
and
popa
add
enter
jg
loope
push
in
cli
jae
dec
adc
jle
push
enter
push
add
cmp
and
xor
inc
add
rol
mov
fnsave
jecxz
lods
daa
mov
xchg
popf
and
pop
mov
addr16
fmul
cwtl
sub
sbb
mov
stos
dec
mov
lret
add
sahf
pop
loopne
mov
or
xchg
shll
xor
aaa
in
pop
mov
stc
cmp
sub
cmpsb
gs
sbb
xchg
mov
pop
mov
mov
shr
inc
mov
push
push
adc
scas
xor
stc
add
pushf
sbb
clc
out
pop
mov
popa
mov
js
mov
loopne
mov
andl
pop
pop
jl
mov
lock
push
cmp
repz
or
jns
push
rol
add
jno
dec
jne
add
out
pop
xor
dec
cmp
dec
flds
push
cltd
inc
xchg
sbb
cmp
and
add
mov
add
sahf
stos
jo
sub
pop
add
push
insl
sbb
xchg
push
fdivl
mov
cmp
pop
scas
repnz
add
and
int
js
mov
dec
mulb
test
dec
ljmp
in
es
add
daa
sub
or
jbe
pop
scas
shlb
sub
ljmp
add
mov
mov
mov
push
push
and
fadds
push
jo
add
sub
nop
add
mov
nop
sub
cltd
inc
loopne
push
into
add
push
or
pop
push
add
sbb
jns
gs
pusha
cmpsb
enter
cmp
dec
add
jb
es
nop
test
cmp
xlat
add
orl
pop
xor
pop
lods
popa
das
decl
sbb
adc
add
and
cmp
or
cwtl
insl
rclb
jge
jl
js
cld
sahf
jno
ljmp
aam
adc
add
mov
addl
adc
insb
loop
pushf
mov
iret
xchg
cmp
jno
push
mov
and
dec
mov
jae
addb
andl
dec
icebp
add
inc
cmpb
adc
sub
in
test
lahf
out
mov
nop
mov
ficomps
xor
lahf
mov
and
str
arpl
pusha
adc
addr16
mov
fimull
outsb
sbb
sahf
mov
pop
jl
fdivrp
inc
lock
xchg
ds
mov
out
pop
cmp
fld
jns
and
adc
mov
in
cmc
stc
xchg
stos
add
dec
rcr
push
cmp
add
add
inc
jmp
scas
rclb
cmp
ja
les
popa
ficoms
xor
pusha
lret
xchg
add
lock
inc
sub
scas
movb
push
inc
gs
lret
sbb
sbb
sbb
inc
ffreep
inc
sbb
into
add
fcoml
add
sbb
pusha
fldl
popa
add
pop
in
cmp
mov
stos
dec
addr16
loopne
push
push
ja
add
gs
add
mov
stos
mov
add
mov
add
lret
push
xchg
mov
movsb
mov
jne
sti
jo
es
add
xor
xchg
dec
es
addr16
cmp
jbe
pusha
add
data16
int3
xlat
cltd
inc
jmp
jo
add
jb
push
mov
inc
or
inc
stos
sub
mov
aas
pop
imul
and
jno
add
adc
mov
popa
inc
push
movsb
lock
add
mov
inc
xchg
push
shr
dec
add
mov
xchg
add
shr
mov
xor
push
sbb
repnz
das
or
cwtl
jns
cld
jl
add
mov
sub
mov
fsubs
hlt
movq
add
push
cmp
into
jmp
or
add
test
pop
mov
lods
fsubrs
cs
jno
xchg
push
imul
xchg
xchg
push
cld
pop
and
push
in
fs
icebp
pop
cmp
jmp
xchg
mov
lock
ret
out
mov
rolb
or
and
cmp
jae
adc
setge
pop
testb
incb
jp
in
adc
lock
add
lcall
movsl
xchg
out
hlt
sub
test
cmp
les
mov
adc
faddl
clts
and
cmp
and
add
jl
mov
js
cli
adc
sbb
repnz
out
or
es
adc
loop
mov
enter
push
or
in
fs
mov
dec
pushf
addb
les
sub
incb
push
fcom
or
repnz
mov
jle
imul
out
shl
dec
outsl
push
dec
in
adc
scas
mov
xchg
xor
cmp
sbb
jae
add
popl
mov
mov
in
cmp
jp
ret
add
daa
int
sbb
pop
fsubrl
lea
ja
jnp
jmp
std
ret
push
push
or
add
sbbb
cld
mov
mov
ror
sbb
push
sub
add
stc
loope
fimull
add
pop
loopne
les
pop
sbb
xchg
pushf
mov
push
es
jg
pop
pop
test
push
xchg
mov
loopne,pn
inc
mov
lds
inc
add
sub
cmp
add
pop
dec
xchg
add
aad
add
std
xor
test
pand
outsl
mov
mov
ficoml
push
and
movsb
dec
jp
scas
inc
shlb
in
add
and
xchg
cld
add
jne
gs
mov
add
xor
dec
test
imul
fs
add
cmpsb
pop
push
adc
jbe
mov
ror
jo
add
cltd
call
push
xor
mov
add
jg
daa
dec
inc
insb
out
icebp
add
cmp
cli
shlb
lret
hlt
fiaddl
mov
lods
mov
loopne
std
mov
inc
or
xor
je
sub
lds
adcb
sarl
cld
rcll
xchg
loopne
stos
xchg
pop
mov
clc
stc
in
mov
jnp
je
loop
add
push
xchg
inc
mov
mov
xor
mov
mov
cmc
push
or
push
std
adc
lcall
lret
cmp
cmp
testl
dec
sub
aas
xchg
add
out
lret
std
adc
adc
inc
xchg
mov
dec
or
outsl
xchg
xchg
add
jle
mov
hlt
mov
addr16
stos
jo
out
jge
icebp
cwtl
push
cmp
ss
and
cmp
fs
jns
cmc
mov
enter
add
jnp
test
jbe
mov
push
std
xor
pop
incb
cmpsb
inc
cwtl
insl
xchg
pop
loopne
repnz
cmp
or
loopne
jo
mov
mov
testb
add
xor
pop
sbb
stos
aas
test
adc
and
mov
or
lods
mov
pop
mov
repz
push
mov
lret
or
xor
or
stos
pop
push
add
cld
fildl
les
adc
push
fwait
add
jp
mov
jl
scas
inc
xchg
inc
lcall
lock
adc
push
and
xor
aaa
inc
in
outsl
cli
andl
sbb
loop
ret
fcompl
cmp
cmp
ja
dec
sbb
jmp
inc
test
clc
iret
aaa
call
add
into
fisubrs
flds
xchg
sarl
add
imul
xchg
sbb
inc
cmp
push
add
lcall
add
jbe
or
pop
loop
inc
sti
sti
addb
sub
mov
cmpl
xchg
add
jb
mov
sub
mov
fadds
out
sub
out
adc
add
jb
mov
js
fcmovbe
and
shr
push
lock
add
or
push
ja
add
shrb
lds
cwtl
jns
outsb
mov
add
mov
mov
mov
cmc
iret
out
pop
mov
fstpl
std
mov
pop
inc
pop
fiaddl
jmp
and
fs
mov
sbb
mov
add
xchg
xchg
mov
fisubl
dec
push
dec
jne
inc
jl
inc
sub
fs
add
push
add
lock
lods
sahf
inc
dec
ja
push
jno
dec
xor
outsb
pop
clc
xor
in
adc
sbb
dec
cltd
adc
mov
data16
sahf
mov
dec
dec
push
push
pop
ds
or
cmp
and
dec
sub
out
adc
push
dec
js
movlps
rcr
test
add
loop
les
sarl
and
mov
loop
shr
xorb
lods
sti
pop
dec
data16
pushf
xorl
add
sub
lock
clc
cli
mov
and
add
mov
scas
inc
mov
clc
popf
mov
xchg
in
test
lods
push
in
sbb
andb
pop
mov
add
faddl
mov
nop
pop
inc
in
dec
test
leave
dec
or
push
lock
loop
in
cmp
lcall
and
adc
push
dec
in
pop
in
pop
nop
add
mov
cld
dec
cmpsl
inc
maxps
out
nop
subb
in
push
add
das
je
add
xor
jbe
and
mov
mov
arpl
cmc
push
mov
push
push
pop
xor
add
mov
xor
jns
inc
pop
push
scas
jns
pushf
loopne
push
and
shll
das
jo
and
hlt
mov
add
cmpsl
mov
add
cmp
add
cmp
cmp
lds
std
mov
test
hlt
fldt
ror
incl
stos
aas
loop
nop
add
fwait
stos
mov
add
jne
test
pop
pop
test
lods
and
cltd
ljmp
inc
ss
and
add
lea
add
xchg
xorl
push
adcb
mov
or
dec
orl
cltd
popa
pop
fiaddl
cmp
cmpsl
loop
jecxz
int3
data16
pop
lret
pop
aaa
add
dec
jo
cmp
and
adcb
push
xor
mov
push
negl
sbb
mov
xchg
mov
jp
and
lret
dec
sbb
push
mov
daa
jbe
add
push
adc
and
or
sub
jns
add
lods
xchg
add
sti
mull
divb
jo,pn
or
clc
aaa
data16
mov
cmp
sarb
stos
call
cmp
jns
xchg
mov
mov
add
and
adc
vmread
xchg
shll
leave
jo
dec
ja
add
loopne
das
andb
and
lds
mov
scas
ficompl
add
adc
or
cld
adc
push
push
aad
dec
sbb
lods
add
pop
xchg
cli
ljmp
repnz
xor
test
add
push
sub
or
nop
fstl
in
sub
cmp
out
push
jmp
mov
js
inc
or
add
push
jg
shl
add
dec
or
add
push
das
lret
pop
or
jmp
or
neg
add
data16
stos
dec
sub
insl
aad
add
ret
sub
pop
sbb
pavgb
mov
jo
add
mov
push
hlt
jle
scas
adc
int
sbb
dec
cltd
push
mov
add
loopne
mov
xor
pusha
dec
mov
and
scas
cmc
ss
popl
mov
sahf
jbe
add
lret
xchg
jmp
dec
add
test
adc
popf
hlt
out
add
jle
bound
cwtl
xor
cmp
hlt
cmc
add
or
inc
xorb
pmulhuw
insb
mov
or
icebp
pop
orb
push
mov
imul
mov
xchg
xorb
mov
adc
dec
pop
xchg
add
xor
imul
mov
ret
push
sbb
mov
add
call
imul
push
or
and
mov
xchg
xor
and
add
add
test
xchg
add
pusha
jo
push
cmc
add
daa
xor
int3
stc
dec
adc
psubusw
or
out
xorb
fstpl
mov
pop
dec
pusha
add
push
adc
inc
addl
mov
or
inc
call
icebp
adc
and
push
enter
loopne
xchg
movsb
add
clc
iret
dec
or
xor
cmp
insl
cmc
les
sbb
mov
jae
add
xchg
mov
lret
daa
push
add
and
lods
std
adc
push
ds
jl
jo
push
pop
lods
jns
pop
and
pop
subl
fcoms
hlt
dec
xor
jg
sbb
lret
add
dec
sbb
push
cld
add
into
add
out
jl
sarb
fmull
xor
add
in
dec
or
ret
push
and
fidivl
sarl
dec
aas
adc
std
daa
clc
nop
je
shrb
push
callw
call
add
jo
xor
mov
mov
pop
xchg
push
subps
pop
fiaddl
cmp
insb
xchg
add
leave
mov
add
xchg
sti
mov
out
add
arpl
mov
fbld
add
sti
push
add
int3
mov
mov
sub
fs
adc
aas
dec
mov
inc
sbb
ja
and
aam
xor
ds
mov
xlat
add
jg
scas
call
call
push
cld
adc
pop
mov
nop
pusha
iret
addl
mov
or
or
outsb
add
ss
push
inc
fdivr
lret
sub
xor
bound
sarl
imul
ficoms
push
and
pop
dec
test
inc
push
lods
je
add
inc
sarb
mov
pop
mov
loop
inc
dec
dec
mov
add
jmp
aam
cld
mov
add
fiadds
iret
sbbb
in
xchg
nop
inc
mov
and
enter
add
push
sbb
loope
in
test
or
repnz
inc
nop
mov
lret
mov
gs
out
pop
pop
sbb
decb
das
arpl
rol
sbb
jl
sub
repz
and
sub
std
jns
pop
cwtl
in
push
add
mov
fisttps
shrl
sbb
add
mov
jo
add
cmp
push
or
add
mov
loopne
cmpsl
add
push
loope
push
cltd
fsubs
push
repnz
mov
adc
xor
outsl
ds
fsts
inc
sub
mov
jb
leave
add
add
push
push
xchg
shl
js
rcl
and
stos
into
add
subb
pop
nop
sub
inc
sbb
and
pushf
cmp
mov
sahf
cwtl
stos
push
fistl
sub
movl
or
sbb
bnd
mov
popf
inc
and
out
xor
fld
aam
push
add
jns
jmp
sti
pop
es
xchg
adc
popa
adc
arpl
pop
ret
stc
loop
dec
aad
mov
imul
sub
les
and
in
cmp
loopne
aaa
out
cld
fwait
xor
adc
add
sub
xor
xlat
rorb
insl
mov
nop
jb
xor
nop
cmp
popa
jecxz
lcall
push
add
cmpsb
imul
mov
add
adc
cmp
mov
ds
inc
mov
add
stos
lods
pop
fimull
jno
and
adc
adc
in
out
inc
aam
or
push
cmpsb
repz
std
test
cmp
mov
push
roll
jmp
sahf
sub
lcall
xchg
out
dec
repnz
stc
scas
sbb
cmp
lret
mov
add
add
mov
frstor
in
mov
pop
std
jmp
pop
pop
add
loopne
xlat
dec
mov
mov
test
add
mov
cmpsl
inc
add
clc
or
or
js
cmp
dec
cmp
mov
mov
sbb
xor
shlb
or
lock
sbb
inc
ret
mov
adc
lock
sub
jg
mov
adc
sbb
call
push
lods
and
mov
lock
cld
pop
add
dec
jno
aaa
inc
add
cs
jg
test
jno
pop
cmpsb
and
adcl
add
in
inc
sub
lds
inc
mov
lret
andl
and
jmp
xor
xchg
push
mov
scas
bnd
pop
pusha
sbb
into
outsl
clc
inc
xchg
cmp
js
push
das
sub
loope
push
cmpl
cwtl
mov
mov
mov
adcl
mov
shll
in
mov
inc
or
push
lret
xor
ljmp
ret
in
push
mov
or
mov
lret
jns
stc
pavgw
in
loopne
sbb
jo
mov
add
xchg
les
sub
outsl
loope,pt
push
fmuls
pop
add
xor
inc
cmp
or
push
mov
xchg
push
sbb
verr
neg
push
cli
mov
loopne
mov
loope
sbb
push
xchg
mov
inc
mov
out
mov
arpl
add
pxor
sbb
test
popl
mov
inc
pusha
lret
sbb
enter
adc
fnstenv
jp
movsb
rclb
jno
push
mov
or
dec
inc
mov
std
or
fsubs
aad
jb
sbbb
in
pop
test
push
sbb
call
das
inc
dec
mov
lret
fbld
mov
jo
jle
int3
shl
cmp
push
pop
add
sub
push
outsb
aas
rclb
in
dec
mov
add
xor
add
repnz
push
or
mov
pop
lret
idivb
adc
add
test
pop
add
jmp
jne
repnz
jl
add
adc
xor
pop
pushf
sahf
fiadds
mov
and
ficoml
xor
and
cmp
mov
mov
sbb
loopne
mov
add
stos
sub
inc
jbe,pt
pop
mov
jl
cmova
pop
sub
test
cwtl
test
mov
push
xor
nop
movsb
sbb
movsb
add
push
popa
add
xchg
stos
and
nop
mov
add
xchg
shrl
sti
scas
imul
loopne
mov
js
hlt
inc
pusha
adc
imul
pusha
and
in
cmp
add
mov
pop
add
pop
xchg
mov
shlb
pusha
and
imul
in
adc
add
test
aad
notl
mov
outsl
cmp
add
fisubrs
add
sbb
pop
popf
xchg
shrl
jp
add
xchg
and
jl
les
test
out
pop
insb
aas
jge
add
das
fdivr
fldl
outsb
push
pop
add
or
add
das
xchg
imul
daa
jle
flds
inc
insb
outsb
dec
mov
xlat
dec
jb
nop
rcll
pusha
push
xor
jne
add
dec
pop
scas
cmp
gs
dec
lea
and
dec
inc
out
out
sub
test
sbb
mov
xor
out
push
inc
rorb
ret
mov
cmp
cwtl
and
pop
push
sbb
cmp
adc
mov
inc
add
pop
xor
xchg
imul
cwtl
adcb
adc
rorl
mov
xchg
push
pop
inc
subl
fdivrl
jecxz
jo
or
mov
loope
or
cmp
cwtl
cmpsl
cmp
ret
jle
mov
faddl
sbb
mov
and
jecxz
popa
outsl
lret
and
mov
cmp
xchg
xchg
mov
jo
lock
sbb
add
jl
add
rorb
test
orb
sbb
jno
xor
pop
mov
xlat
add
mov
int3
popa
sahf
mov
icebp
jo
cltd
and
pop
cmp
es
lahf
adc
adc
dec
mov
mov
popf
mov
lret
stc
add
mov
cli
addb
adc
push
pop
mov
jmp
scas
sarb
and
ds
mov
xor
insl
aad
mov
push
xor
mov
sar
add
cmp
adc
xchg
jp
lock
add
hlt
add
push
cmc
or
pop
popf
jo
int3
rclb
fdivr
add
sub
mov
scas
pusha
jne
mov
stos
cmp
test
adc
add
adcl
addl
add
roll
push
jge
add
inc
hlt
xor
clc
jae
loopne
pop
les
sti
into
or
stos
inc
orb
ja
xor
push
daa
hlt
add
xor
sub
add
pop
les
movsl
add
push
cli
lods
aam
in
jae
add
sub
xor
add
insb
cmp
mov
int3
jns
sahf
pop
or
dec
xchg
int
and
jmp
lea
xorb
sbbl
xor
in
inc
inc
loopne
sub
pop
loope
inc
jecxz
sarb
clc
sub
movsb
mov
ja
lcall
xchg
std
imul
sarb
ss
add
push
add
jo
sub
gs
add
cmp
add
pop
dec
inc
insl
movsl
add
dec
or
or
push
inc
cmp
jns
cmpsb
or
loop
unpcklps
insb
sub
fs
test
shll
add
stos
jno
call
loope
sbb
cmp
xor
mov
push
movsb
pop
loope
aad
push
cmpsb
add
cmp
mov
sahf
pop
jmp
sbb
fpatan
add
sub
aaa
xchg
leave
add
bound
pop
mov
addr16
push
and
sbb
repnz
lods
push
arpl
xchg
mov
pop
test
add
xchg
fldl
pop
and
dec
rorb
imul
aas
xchg
in
add
aam
push
sbb
jle
add
jae,pn
pop
push
push
aaa
add
repz
add
add
xchg
add
out
ret
inc
mov
xor
sub
cmpsl
sbb
sbb
inc
and
add
jg
pop
stc
xor
mov
mov
or
xor
out
inc
inc
in
rolb
jbe
add
js
pop
pop
insb
ljmp
into
jp
int3
pop
movsl
mov
mov
pop
add
inc
mov
sahf
and
repz
pop
sbb
xlat
mov
dec
jle
mov
push
and
push
out
sbb
add
je
nop
mov
push
add
inc
cmp
call
inc
dec
cli
inc
add
mov
mov
mov
pusha
in
or
dec
jae
push
fs
or
and
fadds
xor
mov
add
out
xchg
lods
add
cltd
sub
adc
cmp
cmp
ds
fcomps
hlt
mov
imul
dec
mov
out
jno
out
add
int
mov
adc
or
ret
add
in
mov
jnp
jp
in
add
inc
or
addr16
pop
or
inc
dec
cmp
add
pop
pop
xor
sbb
mov
stc
nop
ficompl
enter
mov
add
inc
cwtl
mov
xor
xor
nop
cmp
jns
add
xor
add
mov
cmpsb
mov
scas
add
hlt
mov
cmp
out
adc
add
dec
lahf
pop
add
andb
mov
cmp
lcall
pop
lahf
dec
add
rcll
and
add
sub
mov
jno
cmp
ds
push
call
add
inc
mov
fiadds
in
add
push
fsubs
and
add
sbb
add
scas
mov
pop
sub
add
outsb
push
insl
jge
jno
add
xchg
pop
xor
js
mov
sbb
test
dec
sub
add
popf
cmp
stos
xor
sbb
pop
dec
decl
test
loop
test
in
sldt
out
jb
and
in
js
movl
outsb
or
ja
cwtl
sbb
sub
lock
push
or
in
dec
sbb
and
inc
in
inc
popa
or
lds
xor
insl
or
enter
lahf
push
and
mov
fimuls
mov
test
add
jae
shrb
push
add
add
add
inc
ret
xor
xchg
daa
fwait
push
popf
cmp
pop
inc
ss
aam
adc
or
ds
andb
sub
movsl
mov
cwtl
add
cli
repz
inc
sbb
push
add
inc
and
cwtl
mov
mov
mov
or
or
loopne
in
add
and
mov
mov
add
pusha
mov
add
lock
out
je
push
ret
movsl
and
cmp
add
enter
sbb
mov
add
mov
pop
cmp
sub
fwait
cwtl
mov
add
pop
push
jo
adc
sbb
lcall
mov
add
add
iret
clc
dec
negl
sti
in
cmp
stos
ud0
mov
pop
out
test
lcall
push
xchg
push
mov
xchg
push
mov
or
dec
int
scas
ss
dec
or
push
mov
push
aad
loop
ffreep
cmp
mov
testl
je
add
jno
fisubs
rcrl
mov
push
push
mov
repz
add
fwait
push
stos
push
outsb
out
fcmovb
mov
mov
mov
inc
cmc
lcall
into
pop
sarb
xchg
push
ret
imul
add
jb
push
add
je
addb
jg
mov
inc
iret
push
fidivrs
out
cwtl
daa
sarb
movsb
out
jg
loop
push
ret
roll
sti
aad
call
add
psubsb
dec
ss
add
aas
mov
adc
idivb
adc
and
stc
cld
push
rcrb
pop
or
push
cmpsl
adc
adc
add
shrl
ror
testl
add
js
in
gs
insb
rorl
ja
ret
inc
add
subl
lock
dec
jmp
jecxz
into
int
inc
dec
and
add
clc
orb
add
inc
sahf
mov
and
add
popf
adc
mov
xchg
pop
pop
dec
mov
adc
cmp
xchg
gs
mov
and
add
push
pop
roll
push
hlt
scas
adc
push
pop
es
js
mov
dec
adc
fildl
out
test
cmp
push
pusha
aaa
pop
add
adc
stos
sbb
fnstsw
sbb
cwtl
loopne
mov
pop
dec
outsb
mov
loop
xor
sub
movb
cmc
dec
sbb
cmp
in
outsb
dec
sahf
xchg
cmp
or
mov
add
xchg
add
test
jbe
and
sub
mov
lods
jp
rcl
adc
add
fneni(8087
pop
testb
cmp
test
fiadds
pop
jl
inc
mov
adc
sub
add
fstps
gs
inc
adc
push
lcall
push
lods
add
xchg
cmp
jae
jecxz
sbb
cmc
inc
add
jmp
push
sub
sarb
xchg
xor
mov
sbb
sbb
mov
rolb
mov
inc
icebp
push
lods
dec
add
jle
xchg
movsb
test
mov
lds
daa
bound
inc
call
leave
cltd
jae
mov
pop
fiaddl
add
xlat
scas
cwtl
or
push
add
ss
adc
add
sbb
je
push
imul
sbb
aad
fstpt
popa
jg
cmpsl
cmp
add
cwtl
cmpsb
adc
add
fldl
mov
pop
movb
cmp
mov
xchg
or
xchg
inc
lahf
and
mov
lock
pusha
dec
dec
clc
jmp
sahf
jnp
movsl
push
incl
test
mov
jnp
add
mov
movsb
and
inc
leave
add
jl
push
repnz
add
fsubrl
add
mov
imul
lret
sub
aam
in
xorb
rcrb
pop
movsl
pop
push
dec
push
inc
lret
mov
push
jbe
loop
mov
add
cltd
add
vpunpckhqdq
jl
xchg
and
mov
sbb
outsb
add
ss
or
push
add
adc
push
imul
mov
dec
cmp
add
and
mov
add
cwtl
add
mov
sbb
fidivs
and
mov
movsl
aas
mov
jmp
cmpl
jb
add
icebp
push
add
or
das
sbb
sti
jmp
or
ret
mov
call
and
pop
adc
ja
pop
imul
in
dec
add
inc
mov
or
add
test
addb
sub
inc
jbe
je
adc
movsb
jecxz
mov
cwtl
dec
aam
xchg
ret
sub
dec
jmp
add
and
mov
xor
xor
add
mov
mov
adc
cmpsb
les
mov
add
adc
rolb
push
gs
jnp
ds
lds
mov
sbb
xor
push
out
rcr
mov
sbb
push
mov
push
jmp
insb
or
cmp
add
mov
cmpsb
and
pop
call
cmpsl
mov
pop
pushf
setno
xchg
inc
or
push
outsl
aas
adc
inc
jmp
cltd
xchg
add
mov
adc
mov
xchg
sub
add
testb
leave
xchg
out
inc
or
cmp
test
pop
subl
push
jne
mov
lahf
fldl
add
mov
rorb
cmp
mov
mov
dec
and
cmp
sub
jle
mov
test
pinsrw
scas
add
dec
loopne
dec
push
test
vpshuflw
out
jl
sbb
mov
push
sbb
iret
lcall
xchg
call
lret
add
insl
jno
push
movsb
jl
shlb
icebp
ljmp
mov
pushf
xor
xchg
lcallw
jecxz
in
lahf
imul
or
aas
sarb
cmp
cs
or
cltd
add
aaa
mov
xor
lcall
fwait
xor
pop
dec
mov
xchg
rclb
repz
add
fildll
insl
popa
cmp
or
and
xor
aas
repnz
dec
xchg
enter
bound
push
inc
add
and
mov
pop
mov
cmp
pop
out
adc
add
hlt
pop
mov
adc
xor
inc
inc
cld
in
cmp
mov
cld
cmp
int3
jne
js
add
call
xor
adc
xor
popf
inc
sar
shrl
loopne
push
add
inc
fs
nop
inc
pop
jno
lret
jle
dec
mov
mov
pop
push
inc
adc
pushf
mov
ficoml
jmp
loope
out
push
lahf
clc
and
add
inc
or
mov
repnz
add
xor
jae
stos
add
lcall
enter
enter
fcomps
cltd
stos
fs
adc
add
outsl
in
sar
and
mov
add
lds
or
add
insl
sub
mov
out
jbe
xorb
adc
inc
adc
dec
insl
test
insb
push
loopne
xchg
icebp
push
adc
mov
adc
stos
rcrb
fiaddl
in
out
or
pushf
mov
push
scas
sbb
mov
adc
xor
add
adc
and
pop
push
repz
xor
lret
push
jg
add
cltd
jmp
fiaddl
and
xor
mov
add
cmc
sub
mov
cld
dec
add
hlt
jle
test
loopne
mov
movl
dec
inc
jmp
add
call
fisubs
pusha
arpl
xchg
mov
pushf
test
fs
mov
out
bswap
add
cmc
add
sbb
adc
shl
add
rorl
aaa
add
xor
inc
bound
call
test
pop
loope
sub
sub
add
add
aad
mov
enter
adc
adc
mov
pop
add
jae
inc
mov
cwtl
xor
jmp
subb
mov
jne
add
cmpsb
push
and
pop
add
or
aam
xchg
or
ret
add
mov
add
jo
add
out
outsl
ss
mov
lea
inc
cmpsb
pop
push
jl
hlt
add
movsl
mov
jg
and
dec
orb
cmp
push
xchg
mov
movl
lret
pushf
add
movsl
push
add
sti
xchg
xchg
les
cmp
jecxz
out
jns
xor
ljmp
addr16
mov
aam
sbb
roll
outsb
test
add
lret
sub
mov
imul
sub
daa
push
mov
dec
pusha
xor
negl
jne
enter
xchg
ja
ret
add
push
push
lock
push
movsl
stos
shrb
negb
into
bound
mov
pop
or
jo
pusha
lock
cltd
loopne
add
lds
sbb
movsb
push
jno
or
jb
cmpsl
sub
jecxz
pop
out
jbe
enter
shll
push
add
ret
add
sbb
dec
test
out
add
or
and
add
orl
add
sbb
stos
cmp
mov
push
lods
lds
add
sbb
into
loope
es
leave
outsb
jmp
sbb
pusha
add
pop
pushl
insb
lcall
sub
fsubrp
popf
movsb
jle
sub
dec
xchg
push
add
add
loop
or
lock
lods
adc
nop
mov
and
scas
into
add
mov
pop
dec
cwtl
test
xchg
jg
bnd
add
jo
or
add
int3
mov
push
or
xchg
jge
add
fwait
shl
cmp
nop
lcall
test
add
lret
rorl
sarl
test
call
stos
mov
jnp
cld
add
aaa
mov
aas
movsbl
pop
les
sub
into
cmp
lret
fisttpll
imul
aad
movsb
push
xchg
push
icebp
in
loope
sti
dec
shl
das
add
xor
mov
loope
xchg
ret
cmp
dec
push
lds
xchg
and
mov
inc
add
pop
add
dec
add
cmp
test
push
pusha
jne
ss
adc
test
stos
arpl
add
cmpl
add
std
out
dec
fs
or
cmp
jl
les
or
je
xchg
outsb
fimull
or
or
and
push
sub
std
iret
aas
int
out
add
jo
dec
lds
mov
xor
xchg
sub
repz
push
and
sub
in
cmpsb
add
lahf
mov
testb
fimull
cmp
mov
add
push
dec
jno
mov
push
flds
daa
jb
or
lret
inc
mov
pop
or
fldt
pop
add
pop
fdivs
push
mov
testl
cmp
dec
xchg
test
call
jb
add
fstpl
dec
mov
cwtl
in
insl
sub
add
mov
mov
lds
sub
outsl
inc
sub
jecxz
xchg
sti
add
push
ljmp
and
add
pop
add
lea
jl
xor
stos
inc
mov
sbb
cmp
mov
rcr
push
movsb
add
jmp
push
jl
add
add
inc
jl
add
lods
outsl
adc
addr16
lock
stos
add
fucompp
mov
imul
xor
fs
stc
add
repnz
rorb
push
retw
xorb
xchg
jo
outsl
jns
inc
dec
out
cs
call
inc
and
mov
js
mov
jg
push
mov
add
int3
cwtl
fistpll
jecxz
jo
add
and
mov
mov
inc
add
cmpb
mov
jmp
lds
xchg
inc
sub
mov
hlt
popa
ja
dec
ror
cmp
in
push
add
jmp
jb
pop
cli
inc
mov
or
adc
stc
btc
loop
pop
das
not
cld
add
jne
scas
out
mov
pop
lea
add
icebp
xchg
adc
clc
mov
mov
xchg
add
cmp
adc
sub
add
in
iret
adc
mov
push
add
cmp
std
xchg
cmp
ljmp
sbb
or
stos
pusha
adc
fwait
test
in
addb
into
je
inc
cltd
add
push
lock
mov
sahf
and
lahf
pop
incb
adc
cmp
mov
add
sbb
test
dec
fxch
add
pushf
in
sbb
shlb
xchg
inc
decl
push
mov
push
pop
imul
jnp
xor
add
add
mov
sar
cmc
push
jg
add
ds
daa
nop
sub
pop
push
frstor
shrb
jl
push
jmp
popl
imul
add
andl
sti
out
loopne
add
dec
daa
xor
mov
add
fcoms
add
sbb
aaa
cmp
movsb
jo
add
mull
ds
and
clc
sahf
inc
incb
fidivl
in
fcomip
mov
add
dec
dec
cmp
out
outsb
add
les
mov
xor
cmp
fistpl
add
fsubrs
jnp
pushf
jl
mov
pusha
pusha
sbb
shlb
xor
xor
je
xor
pop
shll
outsb
rorl
add
fadd
xlat
jae
push
sbb
or
push
in
jl
ja
insl
leave
popa
lret
fdivs
loopne
pusha
fidivs
es
insb
int
loopne
repz
cmp
insl
fistpl
xor
push
je
divb
dec
ss
mov
add
pop
inc
push
ret
aas
add
add
imul
sbb
and
jecxz
imul
rol
add
jmp
add
insl
ljmp
push
add
cmpsl
mov
into
xchg
dec
je
add
xchg
push
rcrb
in
addr16
aas
dec
fs
incl
mov
mov
jl
mov
bound
cmp
mov
js
out
push
mov
xor
adc
aas
ds
adcb
sbb
push
mov
mov
inc
and
jle
mov
hlt
add
cmp
inc
cs
jp
add
mov
jmp
scas
shlb
imul
mov
dec
loope
add
fucomi
xchg
xor
shl
xchg
add
test
mov
push
pusha
pop
sarb
dec
clc
lret
ja
test
stos
inc
sub
jp
std
stc
jbe
out
or
leave
inc
pusha
inc
push
lcall
std
test
movsl
test
push
ret
cmp
inc
add
sub
adcb
aas
sbb
or
cmp
sub
int3
adc
inc
or
sti
inc
enter
sbb
jne
add
push
test
or
add
ss
mov
cmpsl
xor
dec
sahf
xchg
shl
aad
lds
push
jl
cli
rorl
into
stc
ficompl
cmp
mov
test
cmp
add
mov
sarb
sub
movb
lcall
aad
faddl
js
pop
add
xchg
jo
adc
cmc
sub
and
xor
leave
mov
adc
xor
fs
movq
scas
and
aam
daa
or
and
jb
call
sub
aaa
or
or
cmp
inc
jge
int3
mov
sahf
sbb
out
add
jns
sbb
adc
adc
inc
cltd
repnz
add
push
add
inc
pop
mov
pop
jge
addr16
cmp
in
push
mov
jae
add
or
imul
and
rcrb
sbbb
mov
or
dec
mov
xchg
pop
and
mov
int3
adc
or
pusha
shrb
je
loop
mov
add
sarb
sub
shrb
adc
cmpsb
sbb
and
fwait
or
mov
and
fists
lds
sub
imul
movsb
and
add
out
in
or
scas
int3
cmp
jo
xor
js
push
push
aad
adc
and
add
inc
pop
dec
add
jp
inc
mov
data16
ss
push
js
arpl
je
and
dec
cld
faddl
pop
in
jbe
jns
add
mov
xchg
xor
leave
inc
test
pop
jb
add
push
jne
cld
mov
mov
add
pop
sti
movsl
or
or
add
pop
out
pop
test
clc
or
jl
mov
xchg
roll
and
xchg
es
pop
add
mov
push
sub
dec
mov
pop
add
aas
cmp
push
pop
xor
cltd
inc
call
jno
cwtl
call
fisttps
enter
add
add
test
add
and
negb
dec
rorb
mov
loope
cmpsl
mov
fidivs
and
insb
fldt
add
mov
sub
les
inc
xor
mov
stos
push
nop
mov
jno
sarl
inc
xchg
movsb
push
daa
mov
fstpl
lret
mov
addr16
and
ljmp
pop
sbb
clc
add
ret
add
cltd
sub
int3
fsubl
add
stos
and
mov
test
push
inc
jno
mov
add
pop
mov
dec
fs
shlb
sbb
adc
rcl
lock
sbb
nop
je
xor
add
stc
shlb
sub
inc
add
sub
push
xchg
sub
pop
mov
pop
pop
cmp
mov
lea
adc
push
add
sub
arpl
rorb
enter
int3
outsb
shlw
int
push
push
xor
cmc
push
sub
insl
xor
lods
mov
cmpsb
out
adc
fildll
mov
adcl
ds
jle
add
or
jp
cltd
and
dec
mov
loope
dec
les
dec
adc
pushf
or
fcoml
mov
xchg
jb
movsb
xor
jl
test
jne
je
xchg
cmp
mov
stc
pop
dec
leave
loope
add
mov
dec
fadds
pusha
jo
or
push
xlat
cmpsb
jmp
pushaw
rol
cmp
inc
lahf
xor
rcr
sub
xchg
test
add
stos
call
adc
cmpsb
mov
xchg
xor
and
out
decl
mov
pushf
adc
stc
rorb
roll
pop
add
hlt
inc
mov
pop
fldcw
adc
xchg
mov
je
sub
faddl
loopne
push
and
add
mov
lret
or
cli
adc
adc
inc
sbb
or
xchg
adc
loopne
adc
imul
or
mov
add
cmpsl
inc
nop
cmp
filds
sub
mov
add
mov
or
xor
jnp
cmp
cmp
lods
imul
jp
pop
jae
popl
pusha
daa
sbb
cmp
enter
cmpsl
call
xchg
jb
mov
jo
jne
and
push
jno,pt
mov
xchg
mov
add
sub
xor
push
pop
cmp
sahf
aad
mov
add
test
je
repnz
xor
and
mov
inc
in
mov
sbb
loopne
repnz
and
aas
cwtl
rcl
push
flds
xor
cmp
mov
ljmp
orl
sbb
mov
pop
in
sbb
ficomps
fs
cmpb
cmp
ljmp
jg
jno
shrd
bswap
or
popa
leave
flds
loopne
xor
mov
jmp
int3
xchg
cmp
nop
push
cwtl
inc
lods
push
cmpsb
dec
mov
jns
stos
punpckldq
sub
xchg
out
dec
aam
popf
dec
sbb
in
stos
out
aaa
pop
inc
jns
jae
aad
sub
rcl
dec
jp
enter
fnstcw
xchg
loopne
out
mov
adc
mov
les
jno
pusha
inc
imul
push
sbb
popw
out
scas
xchg
int
dec
adc
rcll
adc
jb
add
test
ja
clc
dec
cmp
call
ja
jnp
add
add
xor
push
xlat
add
mov
sub
add
out
fcompl
pop
loope
dec
dec
fdivrs
mov
hlt
int3
inc
ficoml
je
loope
roll
inc
popf
jno
and
in
jge
out
adc
sub
add
pop
dec
sbb
mov
mov
and
ss
nop
dec
lods
popa
pop
int
add
fdivs
pop
mov
movsb
mov
add
mov
push
jle
jb
popa
scas
stos
dec
inc
es
and
sbb
push
push
fisubs
stc
insl
jno
rcll
xorl
mov
data16
sbb
stc
sbb
add
mov
test
inc
jns
add
dec
roll
scas
mov
mov
and
dec
push
shl
pop
cmp
lods
insb
jecxz
sti
mov
jo
pop
add
push
xor
shl
fstpt
cmp
fwait
add
xor
dec
dec
cld
rorb
dec
mov
xchg
xlat
xor
pop
clc
in
les
test
mov
add
push
fistpll
fcomi
stos
into
add
fiadds
inc
cmpsb
add
daa
adc
in
lahf
add
sub
movsl
cmpsb
daa
xor
cld
pusha
and
pop
rcll
cwtl
add
adc
and
add
jae
push
cmp
xchg
int
ret
sbb
movsb
test
adc
lahf
fldt
lea
or
jne
jmp
hlt
or
inc
aas
lret
adc
scas
cmp
and
testb
inc
pushf
jo
add
lds
das
stc
ljmp
arpl
fistpll
cmp
sbb
ret
or
test
mov
std
mov
pop
frstor
jae
sub
jle
and
fcomp
inc
insb
cltd
pusha
cmpsb
add
rcll
faddp
lods
adc
push
pushf
sbb
out
add
ret
ljmp
cmp
jnp
xor
dec
shlb
fidivrs
inc
cmpsb
jo
and
les
mov
imul
in
dec
mov
sub
andb
jo
xchg
insb
loope
mov
out
cld
push
inc
adc
sbb
adc
ret
cmp
cmp
lcall
in
add
jo
adc
popf
pop
inc
pop
push
xor
mov
stc
aaa
mov
jns
loop
mov
inc
pop
fwait
adc
dec
pushl
cmp
cwtl
pushf
cmp
xor
fucom
rorl
inc
add
outsb
mov
add
fiadds
xchg
xchg
scas
cwtl
mov
mov
xor
test
cmp
mov
lock
push
add
push
or
cmp
adcl
jb
add
arpl
xchg
fisttpll
fwait
mov
push
and
and
lcall
fcmove
in
dec
cmpsb
addb
and
ret
xchg
xchg
outsb
mov
outsb
push
adc
jg
xor
and
and
mov
pop
movsb
push
inc
fs
mov
dec
cmpsl
aaa
inc
xor
pop
dec
cmp
push
mov
sub
popf
xchg
test
rcr
inc
fwait
add
dec
outsb
xchg
or
cmc
sub
jb
cmp
lret
or
sti
push
ret
dec
cmp
cs
cmp
mov
xchg
cmp
sbb
add
lahf
cmp
test
sahf
push
xor
loop
icebp
jle
add
xor
jl
popa
in
insb
inc
test
in
mov
sbbb
sub
xor
negl
sbb
outsb
bound
inc
xor
movl
cmp
in
aas
inc
pop
inc
orb
xlat
jmp
inc
lcall
push
mov
and
push
jb
lcall
dec
sbb
cmp
out
push
add
and
xchg
inc
out
in
xor
xchg
lock
cmp
add
or
jne
add
icebp
mov
sbb
pop
xchg
pop
out
add
inc
jbe
add
add
pushf
mov
xchg
push
cmp
add
mov
add
mov
mov
sbbb
sub
adc
stc
aaa
add
dec
add
push
sub
xchg
fmul
out
in
push
jle
bound
into
inc
sub
cwtl
sahf
mov
mov
xchg
add
pop
cli
lods
dec
mov
es
jl
and
hlt
cld
push
fistpl
pop
ds
aas
sub
jno
sub
lret
mov
js
push
add
call
insb
mov
repz
add
or
inc
scas
or
jle
adc
xor
inc
mov
lahf
imul
pop
shlb
test
jl,pt
xorb
mov
subb
negb
les
dec
sbb
test
push
pop
imul
jae
dec
mov
adcl
roll
jno
stos
add
dec
xlat
add
sbbb
outsl
add
dec
dec
les
and
pop
jb
les
inc
ja
pop
add
loop
mov
add
hlt
nop
daa
push
xlat
loop
jmp
into
or
stos
mov
lock
orb
pop
sbb
mov
dec
pop
xor
faddl
pop
mov
lret
adc
stos
mov
leave
push
lock
sub
mov
jne
shl
fcoms
add
or
cmp
loop
jecxz
daa
add
mov
inc
clc
mov
dec
xor
lods
aad
pusha
cmpsl
ss
cli
jecxz
sbb
inc
cmp
fs
adc
mov
dec
mov
enter
xor
cmp
sub
cmp
and
add
cmp
arpl
mov
cmp
or
jp
pop
cmp
mov
mov
dec
and
movsl
ss
arpl
pushf
mov
decb
push
and
adc
jb
daa
jne
stos
fsubs
fwait
roll
mov
mov
cmpsl
dec
rcl
cmp
scas
popf
xchg
jg
mov
cltd
xchg
test
mov
mov
adc
rorb
xchg
imul
cmp
subb
gs
loope
iret
jb
cmpb
shll
pop
out
mov
cmpsb
pushf
add
or
jg
das
mov
mov
js
scas
imul
xor
ja
dec
inc
lods
dec
add
mov
addr16
mov
mov
gs
sbb
add
xchg
xchg
test
fadds
xchg
inc
movsl
inc
push
test
xor
mov
movl
cmp
stos
add
and
pop
out
cs
scas
add
push
out
shrb
lret
adc
push
mov
add
mov
jle
jmp
nop
add
mov
adc
adc
roll
sub
mov
mov
ret
and
sub
insb
adc
add
xchg
popf
cltd
jb
sbb
movsb
push
int
adc
sub
mov
sbb
add
push
sub
sub
add
mov
jno
lahf
inc
pop
mov
enter
push
fisttps
xor
or
mov
jae
fs
test
call
push
pushf
in
pusha
movsl
repnz
lock
sbb
arpl
cld
mov
or
iret
outsb
in
add
rcr
or
pop
enter
mov
icebp
inc
jl
hlt
or
dec
push
lret
mov
dec
xor
push
add
jmp
lret
sub
adc
xor
mov
call
add
icebp
sbb
and
lock
and
inc
mov
xchg
lds
fs
jmp
out
dec
pop
cmc
dec
add
push
adc
outsb
lahf
add
ret
push
cmp
xor
fwait
loope
test
pop
dec
push
add
push
gs
mov
lcall
out
add
mov
cwtl
inc
mov
loope
lods
xor
inc
add
jecxz
and
adc
pop
push
incb
push
dec
push
mov
gs
clc
fcmovne
or
and
popaw
dec
lret
pop
enter
xor
and
add
xchg
mov
es
les
jb
add
or
jmp
call
add
ja
nop
cwtl
sbb
jnp
add
cld
pop
mov
xchg
dec
lea
nop
adc
lds
mov
fdivs
sub
mov
add
mov
add
push
pop
jle
jmp
in
sbb
mov
cmp
xorb
mov
push
sahf
jns
inc
lods
test
rcrb
xchg
lret
repnz
sub
xor
bound
inc
mov
mov
dec
incb
into
outsb
mov
and
mov
mov
sub
nop
sub
in
push
in
fsubr
dec
or
mov
push
out
es
fs
inc
into
xor
add
sub
pop
mov
je
jp
add
idivl
mov
addl
stos
call
out
addb
lock
and
xchg
movsl
mov
dec
mov
lret
enter
lds
nop
sub
jecxz
adc
ljmp
sbb
jp
std
pop
mov
dec
push
ja
push
sub
repnz
orl
cltd
pop
pop
sarl
xchg
das
xor
mov
test
inc
push
dec
stos
stc
shll
inc
rcrb
cwtl
std
call
dec
pushf
push
adc
daa
push
jae
scas
sub
xchg
repnz
jbe
jp
xor
xor
mov
sub
popa
les
js
and
mov
ja
jmp
jae
xor
inc
lcall
cmp
roll
mov
lea
add
bnd
push
pop
popa
push
ljmp
and
aad
mov
aas
mov
mov
aam
hlt
mov
shlb
shll
xchg
mov
pop
add
cltd
and
jle
dec
test
add
xor
jns
xor
int3
sub
test
dec
push
dec
add
adc
sub
push
aad
sub
dec
mov
mov
sarl
cwtl
scas
sbb
shl
movsl
aaa
add
jo
imul
sbb
arpl
out
ret
icebp
stc
cmp
clc
js
or
add
adc
add
ja
out
dec
mov
into
add
jbe
cld
pop
icebp
push
or
jge
dec
xchg
test
ja
test
nop
fsubrs
repz
mov
lcall
mov
clc
cwtl
fs
cmp
lods
mov
aas
add
in
sahf
addb
cs
add
cltd
push
and
adc
jb
test
xor
cmc
testl
rclb
or
cmp
push
pop
cmp
jno
mov
and
mov
push
jne
in
add
rorl
mov
fcoml
out
xchg
ja
adc
test
fwait
imul
pop
fwait
pop
mov
es
xchg
popa
test
lret
lea
adc
mov
nop
rclb
xchg
jmp
dec
fmull
mov
std
add
mov
push
subl
je
xchg
test
popf
pop
fsubl
adc
mov
add
dec
and
mov
cli
fdivrl
sbb
cmp
cmpsb
mov
add
dec
push
sub
push
jmp
add
scas
fnstenv
cmp
pop
aaa
ljmp
in
jae
add
les
lcall
push
fsubl
repnz
cmp
sub
andb
aas
adc
enter
sub
xchg
hlt
arpl
pop
add
imul
ret
sub
and
push
test
ljmp
lods
sub
shrb
pop
inc
or
in
pop
popf
xor
xchg
and
jne
mov
pop
dec
nop
cmpsl
iret
daa
jge
sub
ds
and
daa
bnd
hlt
ret
push
push
or
ja
xor
inc
nop
js
xchg
mov
jl
pop
xchg
sub
fdivl
mov
int
jb
add
jo
test
jle
dec
push
push
mov
sarl
fadds
pop
icebp
mov
cmp
jmp
mov
lahf
dec
sbb
adc
jne
dec
jecxz
and
add
xchg
aas
adc
mov
insb
out
add
mov
out
pop
loopne
sub
rcl
xor
call
stos
jmp
daa
leave
and
adc
je
pop
cwtl
inc
aam
jmp
jnp
stc
rolb
stc
jbe
mov
mov
jg
filds
loope
xor
lcall
out
add
mov
pusha
or
lea
daa
fs
bound
ja
fdiv
mov
inc
mov
cmpl
sarl
inc
jns
add
popf
cwtl
jmp
adc
repnz
mov
xchg
or
cwtl
jnp
test
xchg
add
ret
adc
sub
jbe
sbb
jo
aam
sub
add
lahf
and
jne
inc
push
and
mov
mov
sarb
adc
xor
jbe
xchg
lcall
std
pop
pop
shlb
mov
sbb
lahf
fwait
mov
adc
iret
mov
mov
add
lods
sbb
mov
out
stc
icebp
lea
mov
fsubrs
ds
adc
mov
mov
add
bound
into
mov
add
and
inc
sbb
sbb
inc
pop
mov
dec
jnp
leave
fisubrl
pop
inc
addr16
or
in
jne
push
lods
clc
arpl
addl
das
loopne
and
or
jecxz
incb
fwait
les
js
mov
call
push
stos
decl
test
jo
inc
adc
std
add
push
dec
xlat
cmp
inc
jo
sbb
push
pop
in
fs
addr16
outsl
and
dec
adc
lea
jle
arpl
mov
dec
in
mov
test
lcall
psllw
push
inc
lret
xchg
fwait
xchg
adc
mov
ljmp
pop
hlt
or
and
inc
jne
in
inc
mov
and
out
scas
push
sbb
push
pop
jno
or
lcall
in
push
xlat
sub
mov
dec
cmp
dec
loopne
lods
and
hlt
dec
pushf
xor
pop
imul
shll
nop
sbb
shrb
es
jl
mov
push
dec
sarb
lock
bound
sbb
add
jp
xor
dec
mov
in
bound
pop
fldl
aam
xchg
pop
xor
int3
int3
cld
faddl
adc
jnp
arpl
dec
xchg
fcoms
jg
xor
mov
and
int3
lock
daa
out
inc
loope
mov
sbb
popf
dec
xor
loop
stos
cltd
call
or
es
daa
int3
inc
push
cmpsl
popf
pop
add
hlt
orb
and
daa
sbb
scas
cmp
mov
jo
pushf
adc
enter
maskmovq
idivl
lods
sti
add
hlt
xor
stc
xor
add
cwtl
push
add
sbb
dec
pop
push
adc
hlt
add
ja
pop
pop
pusha
mov
inc
cmpsb
pop
in
dec
pusha
arpl
lret
shrl
pusha
mov
std
sahf
push
call
pop
and
mov
aas
ret
jo
dec
lret
test
es
daa
adc
fcmove
dec
roll
push
pop
loop
ss
icebp
jmp
add
sahf
addb
js
adc
add
push
lcall
pusha
clc
mov
add
lods
lret
add
jmp
cs
mov
push
in
or
jo
or
jl
nop
push
dec
adc
inc
xor
sbb
addr16
pop
and
jl
dec
pop
loope
mov
enter
dec
and
int3
repnz
add
adc
insb
dec
repnz
in
mov
mov
rolb
loopne
jp
ja
repnz
add
inc
mov
sysexit
jne
rclb
sbb
or
add
lahf
jnp
aas
out
pop
lock
fwait
cltd
jp
lods
gs
push
les
cli
loop
inc
add
xchg
pop
or
inc
jmp
sbb
and
in
les
shrl
add
stc
scas
out
xchg
fmuls
orb
xchg
cmp
pop
mov
shrl
insb
sbb
inc
inc
fiadds
cmpsl
push
add
sbb
lock
mov
subl
movsl
push
rclb
ffreep
in
cld
insb
shlb
rcrb
sahf
and
sub
or
push
jl
push
lock
aaa
add
stc
xchg
popf
shlb
fadds
pusha
push
adc
dec
test
lret
andb
add
sub
or
pop
je
cmp
dec
in
enter
pop
cmpsb
or
icebp
dec
fistpl
fsts
push
pop
xchg
dec
addps
into
je
out
add
inc
or
hlt
mov
and
add
scas
xchg
jge
inc
jecxz
out
adc
loopne
stc
sbb
cs
mov
sub
mov
inc
mov
addl
cltd
fucomi
mov
inc
rcll
rclb
mov
mov
movsl
push
mov
in
adc
mov
ficoms
mov
inc
dec
push
pop
sub
test
clc
loop
aas
inc
fwait
mov
and
push
incb
push
test
push
fimull
jecxz
jbe
ret
xchg
nop
and
lock
movl
lret
fistpll
sbb
into
sub
push
cld
xchg
cltd
sub
rcrb
adc
add
arpl
subl
jp
sub
lock
push
adc
test
mov
sub
push
je
fstpl
add
jno
mov
add
cmpsb
icebp
test
sub
stc
jmp
push
add
adc
xchg
push
sbb
mov
ljmp
rolb
fstpt
hlt
orb
add
inc
lock
add
test
lret
mov
je
xchg
lods
xchg
fucomip
mov
inc
popf
hlt
mov
xor
add
cmp
imul
sbb
ja
ror
lea
in
xor
into
pop
cmp
leave
sub
decb
fsubrs
add
ja
cmp
mov
push
and
or
in
xchg
or
insl
add
jge
lea
add
shlb
sarl
aaa
test
loop
mov
inc
js
add
aaa
fnstenv
inc
pop
cmp
inc
fistpll
in
add
sbb
movsb
test
rcr
pop
inc
and
mov
add
mov
adc
testb
adc
insb
dec
pusha
in
loopne
addr16
clc
dec
sarb
pop
xor
test
mov
pop
fidivrs
sbb
push
jg
mov
aad
mov
push
hlt
or
fs
add
fwait
andl
xchg
pusha
pusha
fisubrl
jns
icebp
test
dec
sar
cmp
test
jb
lahf
ret
jecxz
movsl
xor
in
add
or
je
xor
nop
cwtl
push
mov
adc
mov
inc
gs
pop
dec
loopne
lock
xor
and
mov
test
das
fucomip
adc
test
fcmovne
sarb
dec
push
add
cmp
xchg
or
cltd
loope
add
cmc
inc
pushf
gs
rclb
pushf
sbb
add
mov
daa
cmp
push
mov
fldln2
dec
cld
jns
adc
push
push
test
add
daa
xchg
dec
pop
dec
pop
adc
push
jo
mov
jge
dec
out
pop
jns
adc
xchg
in
sub
xor
out
dec
lcall
call
add
inc
xor
lods
adc
jno
push
out
jbe
inc
int3
add
fbld
fwait
lcall
clc
add
push
insb
iret
stc
cmp
add
int
stos
lcall
mov
or
lahf
dec
push
inc
pop
xor
jl
inc
or
xchg
cmp
jno
inc
push
xor
fldcw
sub
bound
jbe
jle
xchg
and
or
sbb
in
popa
cs
testb
jp
sub
mov
shrb
xchg
inc
mov
mulb
add
xchg
lock
xor
add
in
push
inc
subb
adc
sbb
pop
pushf
inc
lcall
test
stos
cmp
add
imul
xor
sbb
ja
push
jbe
sbb
dec
adcb
popa
movsb
sub
dec
mov
inc
je
mov
cmp
jno
orl
aas
mov
push
xorb
add
and
mov
jmp
mov
add
adc
repnz
out
pop
sbb
call
sub
add
subps
test
mov
out
lock
xor
cmpsl
fistpl
inc
sbb
ds
mov
push
push
push
call
movsb
push
je
repz
clc
pop
jae
add
xor
push
mov
and
push
ret
dec
pop
inc
loope
jo
daa
cltd
idivb
jmp
aam
popa
jo
and
inc
pop
add
daa
nop
add
add
js
cmc
dec
in
addl
mov
icebp
mov
mov
pushf
add
rclb
lcall
xlat
xor
push
mov
ret
bound
fcompl
inc
xor
ja
scas
lds
test
add
xor
sub
js
hlt
adc
sarl
mov
inc
pop
cs
or
add
fs
repz
dec
cmp
out
push
lds
insl
add
mov
mov
adc
mov
or
mov
push
test
pop
push
mov
dec
rolb
loope
jge
xor
adc
popa
add
mov
push
xchg
xchg
jae
nop
pop
add
clc
mov
pushf
fucomi
adc
in
nop
adc
add
sbb
or
pop
call
fs
mov
pop
cwtl
sub
nop
inc
add
sub
dec
sti
int
dec
add
mov
dec
or
lds
test
sbb
pop
repnz
add
inc
test
adc
xor
sbb
rolb
xor
pop
xchg
leave
fistpl
adc
cmpsb
xchg
push
inc
mov
jb
xchg
jl
loope
je
add
jg
insb
push
mov
adc
addr16
mov
enter
je
push
mov
and
mov
data16
fstps
dec
cli
clc
and
mov
xor
mov
push
hlt
add
pop
je
loop
fnstenv
faddl
sub
and
lds
test
sbb
pop
xorb
pop
scas
mov
add
jne
cmp
mov
fcoms
adc
or
push
pop
lret
add
inc
inc
xor
icebp
sub
adc
clc
mov
lea
cli
pop
adc
lret
mov
xor
cmp
and
sub
lret
inc
add
push
mov
sub
test
in
xor
lahf
xchg
xchg
aam
sub
add
sbb
nop
pop
mov
or
xor
sub
mov
jecxz
daa
add
out
jns
inc
call
insl
rcrb
inc
nopl
push
lar
dec
sub
mov
roll
je
inc
addr16
fldt
xchg
mov
out
cli
jne
add
ret
int3
xchg
add
mov
in
add
movsl
test
lahf
scas
pop
mov
movsb
and
out
mov
rclb
fidivs
inc
sbb
add
loope
jle
ficompl
sbbb
xchg
hlt
add
mov
xor
es
pusha
push
popa
jno
push
je
pop
pusha
aas
dec
orb
call
dec
sahf
repz
dec
fmul
cwtl
add
inc
inc
lods
roll
push
in
pop
lea
pushw
rolb
cmpsb
push
fmuls
mov
and
sbb
lock
fsubr
or
or
rcrl
ret
jp
daa
out
or
in
adc
xor
fsubs
inc
dec
das
mov
sbb
cmp
fdiv
inc
cmpsl
add
push
dec
hlt
nop
add
inc
out
mov
dec
add
leave
shrb
in
mov
sbb
or
rol
inc
xchg
repz
jb
ret
jl
mov
int3
add
and
dec
adc
pop
add
cmpsl
add
pop
inc
xchg
cmp
movsb
mov
add
add
insb
dec
rcr
mov
inc
into
dec
adc
mov
jb
sub
mov
push
add
mov
insb
inc
jecxz
mov
cmp
dec
and
adc
in
cmp
jecxz
ss
jbe
fs
inc
fidivrs
pop
leave
pop
pop
inc
sbbb
cwtl
aam
ficoml
fdivrp
fxsave
dec
push
mov
push
inc
test
add
das
sub
roll
pushl
inc
les
and
xor
fsubs
or
jno
jp
xor
cld
add
ds
addl
popf
pop
inc
cwtl
mov
aaa
pop
or
and
loopne
add
sbb
fadds
or
repnz
lea
dec
mov
pop
je
cmp
jne
mov
add
dec
mov
mov
js
or
jno
fldenv
jmp
andl
inc
cmpb
push
push
or
sbb
mov
pop
inc
lahf
mov
jns
out
hlt
movl
cld
pop
in
sbb
je
cmpsb
and
movq
scas
fidivs
dec
ror
cli
and
cltd
mov
orb
nop
add
mov
pop
iret
inc
or
in
xor
stos
nop
jne
nop
add
mov
orb
inc
test
cli
arpl
aas
les
lahf
push
clc
fwait
mov
cmc
xor
mov
aam
int3
inc
sbb
push
xchg
and
nop
adc
mov
lock
add
int3
stc
stos
inc
sbb
cmc
add
push
add
dec
push
xor
or
jmp
or
cld
add
dec
movl
aas
add
xor
aam
enter
dec
call
movl
or
adc
adc
and
or
es
sub
test
inc
lahf
sahf
inc
hlt
clc
int3
xchg
sub
fsubrl
sbb
loopne
scas
cs
rcl
in
fwait
push
addr16
or
movsl
add
and
cwtl
pusha
test
lahf
out
xor
arpl
xor
or
repz
push
push
in
or
aad
or
and
or
sarb
sub
mov
add
pop
scas
adc
shlb
in
or
inc
mov
add
lea
pushf
bnd
mov
xchg
rcrb
mov
inc
fxtract
lret
clc
loopne
lods
add
push
xchg
pop
fisttps
les
dec
movsb
insb
decb
adc
add
add
bound
and
or
push
mov
addb
cmpsl
test
mov
daa
ret
add
cwtl
daa
and
push
and
push
jbe
add
pop
andl
jge
mov
addl
pop
icebp
test
and
dec
leave
pushf
jmp
cld
pop
add
ja
mov
add
mov
sub
loopne
lret
mov
xchg
jbe
mov
aad
xchg
test
inc
inc
sub
jo
add
jecxz
pop
loopne
push
mov
cmovle
add
mov
repnz
fadds
sahf
dec
fildl
mov
push
inc
xor
scas
add
xchg
je
and
pop
xchg
cmp
inc
cltd
arpl
mov
add
daa
inc
imul
push
push
sbb
rol
in
loopne
lahf
mov
mov
jae
or
sub
sbb
pusha
fwait
mov
insb
sarb
sbb
jne
push
pusha
add
iret
stos
clc
add
fisubs
sub
addl
or
cmpl
nop
pop
pop
cmp
mov
sbb
ljmp
popf
cli
pop
add
out
pop
adc
adc
lcall
jmp
xchg
sub
mov
dec
xchg
icebp
lods
add
gs
add
dec
jmp
sub
test
pop
xchg
stc
cwtl
sub
push
jle
paddw
xchg
add
ret
cs
add
les
daa
and
lahf
dec
fadds
xor
sbb
movsl
and
test
fidivs
xor
lahf
xor
in
sbb
jne
and
and
cltd
adc
lods
adc
and
xchg
insb
sub
sbb
adc
mov
and
fiaddl
cltd
push
mov
dec
push
and
shrl
jp
pop
jg
cld
xchg
cld
lret
add
incb
mulb
add
adc
inc
mov
rcl
scas
jl
add
adc
pop
aaa
orb
add
jo
test
jae
adc
or
jmp
test
xchg
push
pop
negb
add
pop
repz
sbb
xchg
mov
mov
inc
int3
cmp
push
jb
pushf
js
jmp
shll
cs
xchg
or
jne
dec
enter
js
add
add
outsb
cli
or
fwait
push
dec
rcll
xchg
cmc
nop
cmpsb
or
jg
jae
or
popa
dec
add
xchg
clc
mov
call
pusha
pop
je
push
pop
loopne
jp
std
jl
mov
or
sub
das
lock
push
jnp
add
mov
jge
adc
jo
sbb
add
xor
nop
icebp
sbb
mov
adc
push
ret
daa
pop
push
cwtl
and
add
lret
lahf
inc
daa
inc
jb
in
add
and
mov
push
jns
test
push
inc
ljmp
iret
insb
mov
cs
pop
pushf
add
and
scas
lahf
out
add
push
mov
mov
pop
adc
insl
xor
adc
icebp
add
std
daa
jns
in
inc
dec
dec
dec
cmc
and
in
in
mov
add
xor
sub
pusha
outsl
ss
sub
pusha
movsl
jno
pusha
mov
imul
jno
push
cmpsb
fadds
mov
inc
push
leave
or
ds
mov
add
andb
cmp
andb
and
ret
mov
out
cmpsb
dec
in
repz
jle
nop
cmp
sarb
mov
mov
pusha
fiadds
aad
nop
jecxz
pop
int
ret
pusha
sbb
add
inc
push
dec
shl
add
adc
aaa
pop
cld
dec
nop
adc
stos
pop
jmp
push
push
add
sub
insb
push
mov
loop
call
fsubl
cmpsl
jnp
sbb
mov
jge
dec
sub
sti
aas
sub
lcall
sarb
lock
xchg
in
dec
in
and
call
clc
hlt
je
mov
mov
push
pop
sub
mov
push
mov
mov
les
push
add
leave
push
mov
pop
mov
out
pop
jnp
jbe
stos
loope
mov
cmpb
jns
ljmp
mov
sub
lock
cmpsl
sub
or
pop
pop
add
push
inc
add
xor
das
xchg
sbb
lock
push
cmp
popa
add
lret
cli
test
adc
lods
adcb
es
sbb
icebp
push
fiadds
push
inc
sub
and
idivb
dec
mov
sub
orb
pop
mov
or
out
cwtl
jp
mov
add
dec
push
pop
test
fdivrs
cmp
les
push
add
sbb
clc
fadds
jmp
stos
out
dec
leave
fmuls
inc
mov
sub
call
xchg
mov
lcall
inc
ret
and
lods
xor
cltd
sarl
addl
or
cmp
sbb
shrb
jne
lret
add
lock
sbbb
dec
xchg
mov
jae
mov
adc
xchg
cmpb
and
ja
pop
mov
daa
js
or
lods
cmpsl
rolb
pop
xchg
mov
add
hlt
clts
aaa
sub
mov
add
sbb
and
add
subb
in
mov
icebp
jb
stos
pop
xchg
cli
cmp
lea
jne
repnz
jbe
cmp
mov
enter
jmp
push
xchg
leave
mov
out
adc
mov
add
xor
es
or
add
gs
movsl
add
mov
mov
nop
jb
xor
pop
jl
push
test
fcomps
pop
cmp
pusha
or
orb
lret
lds
add
pop
idivl
dec
cmc
leave
dec
insb
xorb
adc
sti
popa
in
dec
adc
ss
add
or
cmp
hlt
repnz
je
lds
jns
sub
add
lret
mov
loopw
add
mov
or
push
adc
jmp
jmp
mov
dec
rcr
adc
or
adc
or
stc
sub
decb
roll
loope
pop
mov
insb
dec
icebp
inc
push
mov
ds
lcall
fadds
pop
add
add
adc
lods
add
pop
mov
dec
aas
lret
inc
iret
add
inc
test
test
jge
add
jnp
pop
mov
dec
mov
clc
and
dec
hlt
test
cltd
inc
das
sub
les
jmp
inc
mov
push
movsl
pop
xchg
fildl
call
test
adc
rorl
dec
fcoml
xor
cmpsl
add
jno
jns
dec
icebp
cwtl
or
dec
pop
je
sub
push
xchg
out
bound
dec
dec
cmpsb
xchg
cltd
sbb
jns
movl
inc
cmp
pop
leave
add
fcmovb
jns
and
cmpsl
push
mov
inc
jmp
jl
ret
mov
pop
sub
scas
pop
arpl
push
loope
lods
test
les
call
dec
shll
in
inc
rclb
clc
pop
add
inc
cmpsb
imul
outsb
sub
xorl
push
add
jecxz
add
dec
ficomps
push
mov
xchg
movsl
pusha
cld
sarb
and
outsb
shlb
mov
dec
mov
fs
jns
fdiv
call
push
jbe
cmpb
pop
jmp
std
pop
adc
inc
pop
inc
cltd
sbb
cmpsb
popa
push
cwtl
sub
add
and
imul
fwait
pop
fimuls
icebp
cmp
sub
xor
cwtl
frstor
jg
mov
push
test
shll
and
add
sbb
clc
xor
movsb
mov
mov
push
dec
add
dec
add
repnz
xchg
insb
or
repnz
std
scas
mov
add
loop
sahf
sbb
das
push
notl
es
js
dec
jno
aas
ds
cmpl
into
pusha
adc
stos
lcall
mov
call
out
add
add
int3
clc
xor
sub
popa
cli
repz
cs
loopne
push
mov
js
lods
rcll
pusha
fs
mov
pop
push
mov
call
adc
idivb
cmpsb
bnd
test
push
or
xor
mov
cmpsb
sarl
lahf
ds
notb
inc
mov
into
jbe
insb
push
and
add
inc
cwtl
pusha
jge
push
sbbb
lods
movsb
outsb
add
imul
cmp
add
mov
out
mov
outsl
pop
add
mov
repnz
inc
hlt
push
and
mov
mov
mov
mov
push
add
push
xor
inc
adc
rcl
pop
cmp
mov
insb
incl
bnd
jns
and
out
or
cmp
int3
in
fidivrl
rolb
inc
push
jno
jg
pop
cmovns
enter
or
mov
shrl
out
add
cmc
enter
mov
jb
jl
or
add
cltd
jmp
push
imul
fstpt
sub
arpl
cmp
dec
sbb
add
and
mov
add
daa
xor
fnstcw
mov
lods
pop
lock
inc
and
outsb
add
in
xchg
clc
insl
add
fistl
stc
dec
shll
jp
inc
xor
insb
lds
js
repnz
lcall
in
or
sub
dec
dec
std
enter
adc
pop
pop
test
rorb
stos
jle
xchg
stc
dec
fmull
and
in
inc
mov
cmpsl
nop
shrd
je
insl
mov
cli
mov
pop
mov
inc
cld
cwtl
scas
cltd
sub
test
inc
and
lods
xchg
imul
sub
insb
add
jae
add
mov
hlt
dec
push
gs
fmuls
inc
scas
mov
pop
rolb
sbb
adc
test
push
add
add
inc
popf
push
sahf
mov
cmovb
dec
inc
mov
nop
inc
fcoml
adc
cmp
psubsb
aad
mov
daa
jg
jp
stos
add
add
test
mov
notl
shrl
and
jno
add
test
push
pop
inc
ret
adc
add
or
inc
mov
mov
mov
gs
outsb
dec
add
xlat
cmp
movsl
mov
mov
push
or
or
and
dec
and
stc
xchg
lcall
add
sets
test
add
popa
jne
sub
sbb
adc
add
and
xchg
sub
push
lock
cwtl
cld
xor
out
mov
mov
sarb
rclb
mov
add
popf
sub
fnstenv
insb
fistpl
sbb
loopne
fdivrs
sbb
jg
repnz
cmpsl
lret
sbb
sub
enter
sbb
lods
push
nop
test
cltd
pushf
add
or
add
dec
inc
jne
cltd
push
and
pop
nop
and
test
dec
in
mov
lds
inc
pop
dec
shlb
bound
add
sbb
clc
imul
push
leave
movsb
adc
loop
or
cmc
dec
xor
dec
mov
lods
cmp
stos
jmp
push
xor
add
and
and
xor
loop
pop
xor
mov
filds
cmpsl
xor
and
push
mov
cmp
mov
jge
jl
inc
mov
movsb
xchg
xor
xchg
outsb
arpl
jnp
pop
mov
fmull
test
mov
cmp
in
xchg
adc
movb
sbb
or
xchg
sub
rorl
add
mov
mov
add
dec
mov
or
pop
fnstsw
out
mov
inc
out
dec
fs
dec
fistl
icebp
cld
movsb
jo
add
popa
dec
test
imul
pop
cld
in
adcb
xchg
ret
mov
inc
xor
adc
push
fistpll
xchg
xchg
andb
or
adc
das
popa
pop
mov
hlt
cltd
adc
push
out
adcl
pop
xor
mov
xchg
sub
jg
inc
lahf
stc
and
sbb
sti
and
hlt
add
data16
push
fisttpl
push
jecxz
loopne
dec
sbb
add
or
push
add
iret
adc
push
insl
leave
xchg
mov
fwait
mov
repnz
add
loopne
mov
cmpl
stos
sub
hlt
push
mov
add
movsb
add
loop
es
rclb
je
mov
or
cmpsl
pop
stos
repnz
cs
sub
adc
cld
fdivrs
and
in
pop
fnstenv
int3
cld
mov
ret
and
pop
or
and
and
pushf
or
addb
in
inc
sti
and
stc
les
cwtl
sub
popf
add
pop
rorl
es
movsb
sbb
jns
push
insl
adc
mov
sub
rolb
mov
je
cs
mov
inc
mov
mov
jno
in
jae
sub
aam
xchg
xchg
dec
dec
pop
sub
testb
add
js
scas
inc
repnz
cmp
dec
and
pop
repz
jbe
push
pop
daa
loopne
add
xchg
pop
add
mov
outsl
and
xor
insl
enter
lods
loopne
cmpsl
lret
in
push
pop
loope
mov
xor
loop
mov
insb
xor
cmpsl
je
shrl
mov
das
cmc
rcrl
addl
stc
adc
jno
jge
mov
stos
add
xor
and
jg
popf
adc
and
nop
sbb
rclb
imul
add
jmp
fnstenv
push
cmp
shrl
icebp
mov
sub
and
sbb
dec
mov
les
inc
add
xchg
add
and
fsubs
push
jo
xor
in
pop
mov
push
in
loop
or
mov
jbe
xchg
dec
add
push
adc
outsl
in
and
add
push
mov
add
mov
hlt
xorps
or
movsl
and
jl
mov
dec
mov
xor
mov
jmp
mov
cs
xor
test
mov
jae
fwait
ja
jle
mov
and
push
adc
aam
xchg
loop
mov
call
cli
push
sbb
xlat
or
or
lods
sbb
push
rol
outsl
popf
pop
add
sbb
lret
add
test
movsl
push
popf
add
cwtl
push
clc
mov
loopne
test
mov
jmp
loopne
add
jle
and
sbb
sbb
pushf
lahf
adc
icebp
inc
push
test
sub
fcmovbe
sbb
inc
xchg
add
sahf
xchg
sub
je
mov
movsl
push
movsb
xor
xchg
popa
xor
adc
jnp
mov
push
fdivrl
fldl
jmp
lahf
or
dec
dec
mov
mov
je
sarb
test
xor
gs
test
call
lods
adc
or
push
inc
jne
and
jmp
dec
cs
and
rcrl
icebp
enter
cld
add
jb
andl
fs
xchg
dec
aaa
mov
mov
adc
pop
hlt
dec
je
mov
test
add
add
cmp
ja
fmul
pusha
mov
sbb
mov
dec
enter
mov
and
xor
add
pusha
pop
sub
add
push
xor
inc
int3
test
mov
fadds
cmp
inc
cmp
nop
jo
les
push
mov
stc
xchg
hlt
lret
je
dec
cld
sub
add
test
clc
repz
mov
sbbb
lods
in
adc
pop
mov
push
cltd
and
sbb
stc
lea
mov
nop
adc
out
repnz
cmpl
filds
adc
jmp
addr16
push
aaa
add
mov
jl
jmp
inc
mov
sub
add
std
dec
rclb
adc
clc
setp
add
mov
iret
inc
mov
mov
xor
hlt
faddl
dec
shll
pop
lcall
test
fisubs
cmp
mov
add
add
sbb
rol
inc
push
mov
call
add
xor
out
rorl
add
xor
ja
pop
jecxz
test
int
cld
adc
inc
and
sbb
add
test
lret
add
pop
and
mov
xchg
xchg
add
cld
push
push
fs
stos
enter
inc
xchg
push
lcall
mov
stos
xor
pop
jo
add
jne
add
pop
mov
rorl
mov
add
add
jb
in
out
insb
cld
leave
pop
add
add
mov
aad
daa
test
dec
arpl
add
stos
aam
shll
mov
jo
adc
lock
fs
ficomps
push
inc
inc
xor
mov
inc
inc
xchg
mov
cwtl
sbbb
sahf
jecxz
xor
mov
ja
xchg
cwtl
js
testl
adcb
push
or
cltd
or
jne
xchg
rolb
jl
aaa
out
xchg
fimull
add
dec
mov
int3
cmp
cli
lret
fwait
push
addb
adc
add
fidivrl
hlt
jbe
mov
jnp
xchg
xor
int
jle
inc
loopne
or
in
rcrl
xor
sbb
adc
je
jnp
test
ja
pop
aad
cmp
sbb
sbb
inc
pop
stos
out
aas
lahf
addl
jno
in
add
test
push
sti
add
adc
stos
sub
xchg
push
nop
push
outsl
lock
je
lds
add
sub
add
insb
adc
sub
cmp
sbb
jns
dec
cmp
adc
add
or
jmp
sbb
pushf
rcrb
sub
fadds
mov
inc
mov
and
jmp
hlt
xor
lods
imul
add
xchg
add
pop
lods
or
test
loope
in
lock
or
in
or
push
arpl
sub
jno
pusha
cmp
or
ds
pop
stos
push
pop
jne
or
cld
fs
ret
int3
dec
sbb
out
lret
pop
adc
xchg
dec
push
leave
xorb
adc
dec
or
mov
xor
nop
xchg
or
or
inc
inc
or
push
push
and
sub
jmp
adc
dec
inc
lahf
aad
inc
sbb
fndisi(8087
cmp
in
nop
imul
es
fidivrl
pop
xchg
icebp
sub
ror
sbb
or
loop
aad
int
lods
mov
sub
fisttpll
rcl
cmp
sub
mov
sbb
inc
in
pusha
dec
mov
add
pushf
mov
mov
int3
sbb
mov
movsb
mov
jmp
xor
sbbb
jle
lods
adc
fnsave
sbb
pop
sarl
xor
cmp
add
sub
popf
and
rol
push
xchg
adc
or
add
jne
repnz
clc
data16
or
jmp
es
sub
dec
sbb
leave
push
fdivrs
lret
push
pop
xlat
fsubs
rcrl
mov
pop
inc
movsb
aad
inc
fcmovnu
stc
add
adc
jae
add
ss
ds
frstor
add
mov
sti
add
push
sub
loopne
cs
jl
cmp
jmp
pop
xchg
aas
enter
xchg
mov
push
inc
jp
pop
out
ret
shlb
cld
xorb
xchg
out
lds
sar
lods
jmp
jo
push
or
sub
mull
cld
pusha
or
and
adc
mov
lahf
or
mov
or
and
xor
xchg
aaa
sarb
icebp
xchg
inc
xlat
stos
jmp
adc
mov
cmp
add
bound
lcall
jno
add
mov
mov
jp
add
daa
enter
xor
shrb
jne
and
pop
call
or
inc
cmpsb
jp
sbbl
inc
sub
dec
and
add
das
test
mov
jbe
sbb
and
jo,pt
stos
jp
mov
add
mov
push
add
mov
sahf
iret
adc
inc
add
cmpsb
mov
dec
ja
fimuls
inc
xor
sub
add
aaa
or
negb
pusha
rorb
data16
inc
ja
and
jle
loopne
add
mov
cmp
mov
ja
xor
fadds
movsb
aam
xor
pop
or
and
rcll
and
sbb
cld
inc
pop
imul
push
mov
adc
add
out
xchg
in
xchg
cmc
add
and
inc
xor
fstpl
jno
rorb
rcll
xor
inc
mov
pop
push
push
xlat
pop
inc
sbb
xor
jno
or
adc
imul
lea
mov
xchg
scas
movsl
lock
mov
sbb
and
insl
xor
bound
or
inc
cmp
xchg
adc
es
cmp
xchg
dec
mov
pop
js
xor
orb
push
nop
adc
or
in
orb
lock
push
ja
rorl
es
jbe
faddp
adc
sar
cld
inc
fs
sti
loopne
push
fcmovnbe
stc
clc
call
cld
stos
add
imul
pop
add
pop
pusha
jbe
adc
pop
add
stos
jb
xchg
in
mov
push
lea
std
std
sbb
pop
push
outsl
lcall
and
xor
lcall
mov
pop
and
sbb
jmp
out
add
sub
fs
lds
cld
mov
std
repz
jbe
add
aam
lret
dec
add
movsb
sub
les
xor
cmp
dec
pop
out
fmull
push
movsb
shl
sub
ja
mov
std
add
nop
int3
popa
fdivs
push
push
stc
xchg
mov
imul
adc
leavew
add
aas
adc
adc
das
pusha
stos
add
cmpsb
lods
add
cmp
jp
ret
dec
push
lea
push
int3
inc
fldcw
lds
inc
or
call
jmp
dec
cmp
faddl
outsl
je
adc
inc
or
mov
scas
int
rcrb
dec
es
mov
sub
pop
xchg
mov
cld
push
lock
jg
sbb
mov
or
lds
sbbb
or
mov
add
and
mov
scas
sub
popa
add
adcl
xchg
sbb
add
cmpsl
fnstcw
dec
sbb
mov
dec
lret
jmp
xchg
outsb
leave
xor
xor
xchg
addl
popa
and
sbb
in
adc
add
adcl
fdiv
aad
mov
cmp
add
jle
xchg
inc
adc
sbb
and
movsb
cmpsl
iret
aad
push
xor
inc
pop
fldcw
mov
dec
and
mov
loopne
mov
arpl
adc
add
sub
aam
pusha
imul
inc
shr
pusha
add
lds
xchg
pop
and
mov
and
add
mov
adc
push
mov
sub
mov
push
lahf
dec
jns
add
mov
inc
leave
or
sub
cmpsl
lods
inc
dec
movsl
xchg
pop
pop
mov
movsb
sub
filds
lret
fstps
lret
pushf
popa
out
sahf
sub
fs
add
mov
adc
add
jmp
pop
inc
insl
enter
ss
adc
add
xor
inc
inc
add
xchg
lret
or
mov
adc
add
push
icebp
mov
sub
push
mov
pop
ja
int3
cmp
add
mov
movsl
dec
and
push
cwtl
pusha
mov
mov
inc
xor
or
lods
dec
test
mov
mov
shlb
in
mov
incl
loop
xchg
ds
insb
adc
sahf
sbb
pop
or
leave
cmpsb
sub
sub
or
mov
flds
enter
add
mov
mov
imul
and
and
or
push
xchg
inc
addb
inc
xor
dec
sbbb
push
out
rolb
add
movsb
adc
inc
mov
sti
push
mov
and
push
fsubs
adc
je
int
iret
adc
push
out
mov
push
into
push
sbb
xor
add
dec
or
lods
mov
add
insl
nop
clc
or
adc
fsubp
sub
cmp
add
orl
mov
dec
sub
jge
ljmp
test
or
enter
stos
dec
jecxz
mov
loop
test
push
push
ljmp
cli
pusha
fs
xor
inc
in
adc
clc
add
setp
add
sbb
mov
xor
movsb
clc
dec
daa
push
jg
lret
dec
cmp
mov
out
pushf
adc
jbe
nop
push
dec
or
xor
pusha
xor
add
lods
jmp
int
adc
lret
bound
mov
scas
enter
jmp
stc
data16
push
cmp
xor
in
xchg
cmp
ljmp
mov
sahf
mov
sbb
sbb
push
sbb
hlt
into
pop
adc
pop
mov
popl
fisubrs
add
push
push
in
cmc
nop
adc
and
pusha
inc
add
mov
and
add
cmpsl
or
aas
cmpb
adc
cmpsb
sti
add
aad
roll
ret
test
xchg
and
imul
out
sbb
xor
add
shrl
sarl
xor
fs
out
outsb
cmovae
jae
adc
sarl
mov
clc
xor
insl
shll
std
dec
mov
jnp
push
test
bnd
jecxz
add
call
mov
mov
dec
lods
shlb
adc
out
cmp
mov
ds
lock
outsb
xchg
add
inc
or
mov
add
jmp
sbb
cmpb
aam
cmp
mov
lret
pop
cwtl
sub
inc
andl
enter
test
xchg
add
jl
outsb
cmp
pop
xlat
push
cmp
movsb
mov
jecxz
call
loopne
push
cltd
cld
setle
add
dec
dec
push
arpl
inc
push
sarl
add
lcall
idivl
pop
loopne
push
das
mov
sbb
popf
loope
add
xor
pop
test
inc
mul
pop
cmp
add
jle
js
popf
xlat
sub
loopne
andb
mov
push
imul
in
outsb
ljmp
inc
xor
xlat
or
add
std
mov
dec
mov
push
pop
fisubrs
add
or
popf
mov
mov
call
insl
add
sbb
push
jae
dec
add
mov
xor
popf
add
jecxz
mov
xor
imul
les
mov
fmull
mov
push
scas
push
cmpsb
adc
cs
call
aam
sbb
int
cwtl
iret
popf
ja
outsb
movsl
xor
sbb
add
scas
imul
dec
outsb
push
orb
in
subl
dec
pop
sub
add
add
xor
sub
add
xor
add
movsb
fmuls
loop
add
das
xchg
xor
adc
aas
dec
add
push
add
dec
fimuls
out
push
xchg
lock
jb
add
insl
push
add
popa
sub
aad
push
or
testl
mov
lret
data16
add
xchg
addr16
and
jle
movsb
cmp
xchg
sbb
inc
lds
sbb
popf
bound
out
ljmp
lods
fdivl
add
mov
push
inc
jp
xchg
test
int
and
add
add
jl
adcb
mov
xor
sub
nop
mov
loopne
mov
add
cmp
daa
push
push
dec
test
mov
movsb
add
add
jge
cld
adc
sub
add
aas
pop
fs
inc
addl
out
add
iret
mov
mov
jg
xorl
xor
mov
mov
shlb
mov
add
insl
lods
pop
mov
leave
xor
push
sub
loopne
cmpb
add
sti
mov
jecxz
in
xor
jl
sub
mov
insb
add
adc
ss
pop
push
push
in
and
push
fidivrs
sbb
hlt
out
movl
add
and
add
jns
mov
mov
adc
pop
add
mov
sahf
loopne
stc
and
std
or
push
xor
inc
fstp
into
std
enter
jno
addr16
movsb
xchg
cli
inc
testl
lods
xor
rcll
gs
sbbl
pop
cltd
sub
cmp
pop
sahf
arpl
adcb
or
iret
jo
icebp
mov
repz
push
fimuls
add
loopne
xor
lret
and
dec
fcoms
dec
aaa
mov
imul
nop
fldcw
bound
mov
xor
dec
psadbw
lea
mov
adcb
sti
pop
cmovno
in
fdiv
add
push
lock
or
sub
push
pusha
inc
cltd
loope
rcrl
lock
inc
cmp
xor
cmp
xchg
add
popf
jne
sbb
inc
cltd
frstor
add
jp
in
clc
cmp
fs
das
inc
aas
add
arpl
int
push
add
xor
aam
add
xor
movsl
xor
out
inc
add
inc
xchg
mov
add
mov
leave
imul
sub
shlb
inc
jge
add
sub
xor
mov
sbb
call
add
outsb
dec
shlb
ljmp
leave
popf
and
pop
andl
sub
aad
mov
nop
adc
push
sub
fistpl
push
imul
pop
xlat
xor
xor
movsl
out
fnsave
pop
cwtl
or
pusha
or
into
mov
out
dec
sbb
mov
into
xor
sub
cmp
rolb
lahf
test
add
addr16
pushw
adc
in
leave
add
ds
pushf
pushl
add
scas
mov
test
or
or
add
lock
and
dec
pushf
cli
cmp
or
out
sbb
pop
add
in
mov
and
and
pop
add
push
inc
jge
mov
xchg
sub
cmpsl
cltd
add
dec
sbb
cwtl
sti
and
add
clc
in
pushf
jle
sbb
pop
bound
imul
and
sbb
and
sub
xchg
test
lret
xchg
call
push
pusha
dec
bound
fiaddl
inc
jg
aas
add
or
add
stos
xchg
pcmpeqb
sub
sbb
push
jge
push
sub
jg
testl
jae
imul
mov
pop
fs
xor
cltd
adc
or
orb
add
xor
add
cmp
out
shrb
mov
sahf
pop
enter
aas
in
mov
adc
enter
or
inc
push
jnp
add
cltd
xchg
push
call
inc
mov
jns
add
jle
aam
fnstenv
mull
sbb
xchg
test
sub
mov
jo
sub
add
xchg
out
out
les
sbb
add
push
mov
pop
daa
rolb
inc
bound
pop
xor
add
xor
lsl
mov
ljmp
and
mov
add
cmp
pop
push
pop
movsb
cli
testl
fistps
str
stc
pushf
hlt
pop
or
sbb
or
leave
add
add
cli
push
in
push
add
stos
inc
arpl
pusha
mov
push
lcall
js
xor
xor
add
mov
pop
fimuls
jns
sub
cmp
faddl
mov
mov
lea
dec
mov
jb
bswap
rcr
jo
mov
das
dec
loopne
xchg
lcall
mov
inc
dec
jg
pop
xchg
push
mov
add
cs
imul
jne
mov
orb
adc
and
movsb
add
fsubrl
aam
xchg
pop
cmp
xlat
ret
push
lahf
jle
add
xor
pop
mov
call
add
push
pop
cld
in
jns
push
xchg
adc
jne
mov
scas
xor
xor
push
stos
add
cmpsl
sbb
ljmp
inc
push
mov
add
scas
or
adc
sbb
bound
sar
lret
aam
movsb
push
call
sbb
jp
add
cmpsb
xchg
mov
xchg
addb
hlt
scas
or
add
fisubs
adc
insb
add
add
sbbl
or
jb
and
xchg
popa
cmp
nop
movsb
add
xor
lret
repz
cmp
xor
inc
nop
ss
add
sbb
add
sbb
mov
cmc
pop
ja
adc
test
mov
dec
in
add
faddl
pop
mov
lret
add
pop
mov
add
arpl
cmp
push
mov
pop
mov
dec
testl
xchg
leave
xor
add
cmpsl
push
test
fs
enter
add
mov
mov
clc
jbe
insb
add
add
and
add
dec
xlat
lret
add
sysenter
sub
pop
rorb
xchg
adc
imulb
into
fadd
or
add
std
sbb
jmp
add
lret
ja
pop
cs
test
or
lahf
mov
mov
jl
sbb
cmpsl
and
fadds
mov
xchg
sahf
lock
xor
in
scas
inc
xchg
dec
leave
aaa
mov
and
ja
xchg
test
es
call
cmp
push
gs
fdivl
jge
out
jl
add
addr16
sub
jg
jb
add
icebp
xor
sbb
add
pop
dec
mov
sarl
mov
add
dec
fidivrl
jl
std
lock
fsts
push
add
add
rorb
xchg
adc
mov
jne
jbe
pop
out
mov
mov
add
sub
xchg
cmpsb
sub
push
orb
jge
mov
lods
push
or
cmp
imulb
push
roll
inc
roll
or
cltd
mov
sbb
inc
cli
mov
and
or
sbb
shlb
ret
mov
add
mov
inc
add
mov
jp
nop
sbb
jle
inc
dec
pop
jmp
movsl
repnz
pusha
and
jg
das
outsb
clc
mov
pop
xor
lahf
pop
scas
xor
xlat
test
dec
sub
xor
mov
cmp
aaa
lock
sti
mov
dec
fldcw
stos
movsl
call
mov
les
sbb
and
loopne
mov
add
mov
add
ret
out
jae
mov
jmp
data16
fildl
add
fs
push
testl
dec
ffreep
pop
nop
nop
ljmp
adc
cmpsb
mov
jmp
lods
mov
mov
and
lea
cli
into
mov
add
ret
loopne
sbb
scas
add
mov
jns
push
push
bound
ds
inc
add
xchg
push
or
or
aaa
gs
fldl
filds
repnz
push
or
adc
push
add
xchg
jecxz
daa
dec
cmp
jno,pt
dec
ficoms
sbb
fadds
inc
jle
js
mov
outsl
mov
xor
xchg
xchg
fmuls
sub
icebp
jmp
dec
repz
mov
incb
cltd
jl
mov
add
dec
cmp
stos
adc
mov
ret
loop
cwtl
pop
inc
inc
xor
xor
dec
add
insl
inc
fisubs
rcll
subb
mov
sub
rorl
sub
repnz
pop
mov
fs
out
adc
cltd
repz
cmp
dec
and
mov
adc
cs
aas
jle
dec
pop
push
inc
xchg
push
jp
fwait
xor
adc
insb
sub
pop
je
pushf
out
sbb
and
inc
subb
popa
jl
hlt
cltd
adc
addb
inc
data16
xor
outsl
or
aaa
cmp
add
sub
lock
dec
cwtl
sub
sbb
stc
mov
add
arpl
jnp
sbb
add
mov
out
sbb
xchg
ret
lret
add
add
imul
add
movsb
add
mov
aam
mov
and
outsb
sub
lahf
cld
out
insb
dec
cli
add
fdiv
das
sbb
or
xor
adc
mov
out
and
roll
stc
push
fndisi(8087
sti
dec
call
mov
aad
imul
jne
cmc
mov
jge
nop
arpl
add
inc
imul
jns
shrb
or
inc
add
mov
repnz
adc
lret
mov
push
xchg
popf
jbe
sub
push
xchg
cmp
cltd
adc
add
or
popf
sbb
leave
add
cmpb
add
or
cs
sub
roll
int
lea
xchg
pop
add
push
push
cld
inc
or
shrb
mov
xchg
sub
or
add
push
push
cmp
imul
xlat
jbe
xor
inc
cmp
jle
pop
sbb
andb
popf
enter
lret
ret
in
aaa
outsb
movsb
stos
and
add
dec
or
call
ss
adc
mov
xchg
aad
pop
iret
sub
outsl
push
or
and
aam
xor
mov
push
addl
sbb
mov
mov
bound
add
sahf
and
mov
pusha
lock
pop
add
xchg
cs
xchg
cltd
cwtl
or
es
stos
hlt
add
or
push
incl
nop
and
in
lret
fildl
pushf
mov
push
and
roll
mov
add
pop
add
mov
adc
fisubs
cmp
pop
add
leave
mov
pushf
pop
mov
arpl
pop
mov
add
das
ror
xchg
push
jmp
adcb
jg
add
cwtl
cmp
adc
xor
sub
ret
inc
in
mov
jb
push
fimull
loopne
std
ja
cmp
and
bound
pusha
cmp
add
inc
mov
aad
hlt
push
repnz
add
in
addr16
loopne
icebp
mov
adcb
add
xchg
pop
add
fistl
add
ljmp
add
ds
inc
cs
adc
fadds
xor
dec
fs
add
inc
cs
or
jecxz
int
push
inc
popl
and
dec
adc
in
outsl
jg
add
cmp
inc
and
cltd
pop
push
adc
mov
pusha
lret
roll
jg
xor
ret
ds
cmp
ja
push
pop
inc
jle
je
mov
cmp
fimull
xchg
mov
lea
dec
add
adc
scas
add
add
push
dec
jle
sub
pop
sbb
mov
cmp
adc
rolb
inc
mov
pop
dec
add
cmp
jge
sub
daa
imul
lods
loopne
scas
insl
cltd
add
add
jns
xlat
call
add
jo
cli
ret
imul
cmp
xor
sbb
scas
pop
rorb
mov
inc
xchg
inc
and
push
pushf
mov
out
adc
lock
testl
in
stc
std
xchg
add
sub
mov
mov
add
cmp
rcrb
push
add
adc
xor
push
pushf
add
enter
sti
shlb
mov
lcall
leave
cli
sti
jl
rcr
jbe
sbb
shl
cmc
push
ret
les
rcrl
mov
fmulp
scas
out
and
outsl
mov
or
dec
mov
clc
mov
loopne
fldcw
adc
sbb
sub
pop
cmpsb
sbb
clc
mov
inc
mov
into
mov
and
repz
mov
push
sti
add
add
cmp
jge
mov
fmuls
mov
and
daa
je
inc
add
into
push
sahf
lock
xchg
sti
add
push
cli
lret
popf
cmp
add
sbb
or
push
rcrb
add
pop
les
cmp
adc
xlat
xchg
addr16
scas
mov
xor
inc
test
adc
add
scas
sub
push
xchg
std
bound
cmc
push
data16
loope
add
popf
in
cmp
add
mov
mov
enter
pop
inc
add
incl
pushf
and
cli
lahf
fsubs
pop
xchg
imul
sub
in
out
ds
iret
mov
iret
lcall
pop
cmp
popf
cmpsl
adc
leave
mov
push
loopne
inc
mov
fisubs
mov
adc
in
and
jae
add
wrmsr
adc
and
adc
daa
sbb
sbb
sub
test
cmp
push
jge
adc
add
clc
push
push
getsec
sbb
stos
and
adc
out
jecxz
mov
clc
bswap
add
pop
mov
add
lea
adc
shlb
cmp
dec
pop
daa
dec
sar
inc
loopne
call
jecxz
lea
add
jbe
sti
pop
shll
dec
add
add
mov
add
push
jo
mov
and
into
pop
sbb
mov
xchg
pop
aas
add
leavew
mov
dec
cld
orl
cmp
bound
fcmovu
cs
add
leave
addb
sub
xchg
and
fistpl
cmpsb
ja
add
xor
jl
add
fs
mov
inc
sti
add
loopne
add
ds
adc
add
cli
adc
mov
sbb
sub
cmp
je
bts
mov
push
or
pop
pop
xchg
stos
pop
repnz
jnp
add
repz
cmp
add
push
lods
cmp
push
add
xor
gs
sub
add
decl
les
jl
stos
add
and
adc
inc
xchg
push
repnz
add
mov
push
test
xor
sbb
dec
mov
pop
xor
add
jmp
mov
xchg
mov
jle
add
movb
adc
mov
add
sub
adc
add
push
xchg
aaa
incl
mov
pop
pop
iret
aad
sahf
and
jmp
sub
xchg
xor
scas
sar
ret
out
add
sub
in
and
push
pop
mov
mov
lock
jge
sbb
test
jno
shrb
shll
testb
sti
andb
mov
mov
jmp
adc
bound
dec
loop
lds
insl
in
cmp
imull
aaa
orb
jl
add
rcrl
jp
cmp
fists
add
pop
xorl
in
pop
addb
pop
pusha
add
insb
fcomp
cld
or
cwtl
jge
dec
neg
adc
ljmp
jg
push
out
jge
filds
pop
push
cmp
inc
das
push
add
lretw
jo
mov
pop
insl
mov
les
jno
jle
add
pop
fistpll
xorl
xchg
pusha
add
fldenv
or
xchg
push
and
pop
add
lock
push
pop
test
sbb
add
fcomps
cmpsl
adc
add
and
or
fstps
cmp
cli
push
popa
and
imul
xor
mov
cli
movsb
aas
shl
add
mov
adc
aad
inc
nop
divl
clc
xor
adc
je
in
inc
mov
mov
pop
pop
cmc
test
cmp
je
pop
pusha
jg
stos
push
subb
mov
add
sbb
cwtl
test
fstp
std
push
rolb
in
popa
notl
sbb
fistpll
sti
dec
adcb
sbb
cmp
and
popf
mov
scas
sub
mov
push
cltd
pusha
nop
add
add
inc
or
adc
popf
push
int
scas
shl
mov
shrb
jle
movsb
jge
xchg
push
arpl
fstpl
sub
test
sub
xchg
cmpl
mov
dec
add
daa
cmp
mov
fistpl
add
inc
sub
sub
fmul
jno
or
or
inc
in
loope
sbb
add
insl
std
fistpl
mov
mov
push
push
addr16
call
aam
outsl
arpl
mov
popf
sahf
loope
jp
nop
or
mov
loop
loopne
stos
jge
pop
inc
gs
lcall
mov
jae
push
pushf
pop
rolb
inc
sub
sub
int
add
adc
sub
dec
or
in
add
movsl
sub
lea
dec
lcall
movsw
adc
cmp
lahf
add
mov
in
in
pusha
mov
inc
cmpsl
sub
dec
fistl
mov
sub
cs
jo
sahf
push
inc
outsb
cli
daa
xorb
sbb
xlat
incl
xor
cs
lcall
inc
sbb
xchg
sub
fucomi
hlt
mov
insb
adc
in
andb
incb
add
cmpsb
loope
cmp
mov
xchg
dec
mov
repz
adc
add
popf
dec
dec
xor
and
jecxz
and
mov
add
lahf
jp
std
adc
icebp
jb
and
pushf
add
add
shll
or
inc
mov
test
xlat
adc
push
or
bound
mov
add
add
jp
push
sbb
clc
lahf
cmp
lcall
add
fdivrs
jl
add
mov
scas
sbb
hlt
jnp
and
movsb
jp
lea
enter
add
jbe
loope
pop
scas
in
add
ss
call
mov
push
or
out
add
xlat
lret
loopne
dec
sbb
mov
fiadds
lods
add
sub
fimull
loop
jo
xor
add
add
ss
inc
lock
push
dec
cld
and
push
and
mov
xor
push
icebp
push
lea
jmp
and
jnp
add
fwait
inc
mov
in
cli
fbld
dec
data16
mov
sub
xchg
jnp
xor
mov
xchg
inc
shl
xchg
lahf
divl
addl
nop
sbb
in
mov
mov
rolb
and
push
movsl
push
push
and
add
scas
or
mov
cmpsl
cmpsb
shl
sbb
rorb
xchg
test
add
cmc
aam
mov
ret
lea
xor
push
nop
jae
pop
add
pushf
xchg
jecxz
js
cmp
or
jl
idivl
xchg
dec
aam
push
sbb
ret
pop
scas
inc
and
in
ss
add
add
andl
push
rorb
add
adc
jo
popa
inc
hlt
add
daa
add
sbb
add
in
cmp
stc
inc
dec
lcall
jg
add
push
jb
mov
jo
xchg
add
cmc
repz
lahf
cmp
add
fldenv
push
pop
mov
shlb
stos
ja
add
add
pop
lret
push
dec
test
add
call
sbb
add
fbstp
lret
pop
dec
inc
jno
and
jns
add
pop
inc
or
dec
add
sbb
das
push
add
bndstx
insb
rcrb
fstpt
jnp
add
xchg
xchg
add
and
and
aam
mov
loopne
dec
aad
pop
push
adcb
cmp
xchg
cmc
inc
in
outsb
repz
cmp
out
orb
add
push
inc
sahf
push
push
je
add
xor
sub
mov
loop
dec
cmp
leave
rolb
push
xchg
sti
mov
mov
jnp
repnz
fst
loop
repnz
and
mov
or
cmp
mov
aam
mov
mov
orb
outsb
test
and
mov
add
push
addb
cmp
fbstp
imul
pop
aam
out
jb
repz
xlat
sub
mov
add
dec
pushf
and
dec
xchg
dec
lods
jo
bound
fs
mov
and
add
into
dec
fsubl
enter
jge
dec
add
add
outsl
inc
xlat
bound
orb
orl
xchg
mov
fcmovbe
sbb
xchg
mov
in
add
mov
and
cmp
stos
fistl
inc
scas
push
aas
clc
gs
cli
jl
lock
adc
and
stos
psllq
mov
inc
push
ljmp
inc
dec
xchg
pop
movsl
add
adc
xor
stc
jmp
lahf
cmpsb
shlb
mov
xor
xor
cltd
add
idiv
fwait
lods
int
cmp
push
pop
pop
les
jg
push
leave
in
mov
aad
int
push
imul
sub
in
ja
das
push
cmp
add
sub
sahf
and
fistpll
cli
add
aam
add
fdivl
mov
jb
int
sbb
aas
iret
test
rclb
enter
add
mov
inc
dec
int3
push
sub
loopne
cmp
daa
push
jge
ss
mov
xor
add
ficompl
fdivrs
into
add
mov
xchg
or
sub
lcall
add
and
xchg
sbb
mov
idivl
stos
and
cmp
xchg
pslld
mov
adc
jmp
pop
cmc
add
mov
pop
shrl
add
mov
dec
adc
fsubrp
add
push
andl
pusha
mov
ja
jne
cwtl
les
les
sub
mov
jecxz
rorl
pop
xor
enter
and
push
pop
fsubs
int3
clc
add
or
lds
mov
jnp
add
xor
imul
psrlw
jle
pop
jecxz
test
pop
add
jo
jae
inc
cmp
jbe
les
or
xchg
push
rcrb
nop
xchg
mov
xchg
add
popf
cmp
fwait
jl
add
imul
sti
fbstp
inc
sbb
idivl
adc
test
add
xchg
and
fisttpll
push
adc
dec
sbb
add
jmp
outsl
ja
inc
xor
lock
or
mov
movsl
insl
mov
add
mov
dec
add
mov
icebp
stc
sub
test
adc
fistpl
add
je
add
xor
adc
ret
addr16
loopne
lods
add
movl
push
mov
add
mov
xchg
mov
adc
in
push
gs
ja
nop
add
rorb
add
lahf
push
pop
movsb
or
add
push
js
add
xchg
dec
icebp
add
pop
out
fldcw
mov
add
scas
es
fsubrl
pusha
nop
mov
jmp
jl
dec
stos
adcb
fmulp
sbb
js
nop
imul
jns
lock
cmp
sub
subl
lahf
repnz
pusha
mov
das
xorl
lock
xor
pusha
jle
out
pop
dec
test
jbe
add
fs
mov
scas
add
inc
stos
jnp
sbb
jmp
jle
and
sti
mov
stos
inc
pop
rorb
flds
pop
ss
test
mov
popf
enter
add
pop
mov
push
jmp
add
mov
roll
mov
jbe
rorl
add
xchg
sbb
cmpb
mov
xchg
and
enter
pop
sub
ret
add
in
jo
popf
add
add
sbb
incb
out
cmp
subl
add
test
or
test
addb
pop
loopne
into
sub
loopne
je
xchg
add
movsl
pushf
sub
xor
adc
cmpb
fisttpl
fsubrs
std
or
add
jne
xchg
and
ljmp
add
mov
fmuls
lret
inc
ret
adc
push
daa
lcall
scas
mov
cli
or
pop
repnz
dec
or
adc
lods
insl
adc
mov
andl
xor
test
xchg
cmp
pop
nop
aam
add
test
loopne
loop
sbb
inc
sub
lds
jecxz
je
jb
in
mov
in
xchg
and
push
add
pusha
flds
jnp
mov
cmp
stos
lret
mov
adc
mov
jne
cmc
mov
mov
mov
mov
mov
add
xchg
rcr
lods
cmpsb
cmp
ja
mov
shlb
cmp
inc
add
fisttpll
xor
adc
jle
mov
add
mov
fs
aad
pop
mov
sbb
imul
movsl
sub
aaa
jo
cmp
jmp
sbb
dec
mov
xor
jo
aad
add
ja
xchg
popf
mov
add
rolb
lock
cltd
xor
sub
jmp
cmp
push
mov
mov
rclb
push
out
pusha
gs
xor
loopne
sti
data16
fstpl
cld
int
shl
xor
outsb
cmp
add
cltd
test
cwtl
nop
add
jmp
sbbl
mov
addb
inc
ss
cld
ret
stos
add
inc
pop
xor
and
jp
push
repnz
fucomp
pop
cmp
int3
add
cli
mov
jno
add
out
sahf
sub
mov
cmp
insl
sbb
sub
jle
mov
pop
push
outsb
xor
std
add
mov
mov
push
cmpsb
js
int3
add
cmp
lret
xor
repz
test
and
dec
insb
ret
leave
add
enter
repz
mov
je
sbb
sub
push
xchg
ret
outsb
mov
pop
rcrl
movsb
pop
or
sub
scas
lods
add
pop
iret
push
in
cltd
pop
sbb
mov
imul
mov
outsl
mov
add
loopne
mov
lds
test
xchg
test
aas
jle
add
scas
setg
pop
out
sub
mov
and
sub
push
hlt
add
pop
mov
cs
mov
push
jo
fmull
add
pop
loop
push
cmp
cmp
dec
jl
push
dec
fidivs
and
fptan
and
mov
push
xchg
movsb
jmp
clc
shll
fcom
cli
out
lods
add
scas
jg
repz
adc
push
mov
xor
add
pusha
lea
daa
dec
sbb
or
call
lahf
test
pop
cmp
leave
sub
push
adc
push
stos
jge
out
lcall
test
testl
lock
and
movsl
aad
xor
sub
lods
fdivrl
dec
sbb
xchg
adc
mov
popf
cmp
add
xor
cmp
mov
rcl
xor
addb
jns
mov
add
lret
bound
loope
scas
xchg
jae
xorb
xor
push
mov
xchg
loopne
cmc
jo
iret
pusha
add
into
enter
leave
movsl
push
mov
sub
add
dec
adc
arpl
add
das
xchg
adc
dec
mov
std
jnp
mov
pop
add
xor
push
add
psadbw
dec
cli
repnz
cmp
cwtl
sbb
push
add
pop
leave
push
mov
call
mov
xchg
xor
ficompl
mov
dec
sbb
call
push
popf
faddl
cmpsb
cmp
pop
js
je
sub
adc
jle
lock
xchg
sbb
sbb
inc
dec
ss
and
push
aad
push
cmpb
add
fwait
das
sbbl
inc
loope
and
and
dec
fs
and
aas
or
lods
or
pusha
fneni(8087
jne
in
push
add
pop
mov
jo
inc
add
sbb
out
inc
add
subb
lock
jmp
mov
sbb
sub
shl
ret
xchg
testb
push
inc
mov
rcrl
repz
ficomps
cs
test
sub
jnp
jg
add
pushf
fnsave
in
add
lret
adc
ljmp
xor
scas
cmp
jo
fstpt
mov
mov
jl
jns
cmp
dec
add
push
jecxz
addr16
or
dec
std
movsb
add
stos
add
cld
push
sahf
sbb
mov
test
testb
imul
dec
lds
xor
test
out
add
sti
inc
mov
sbb
insl
test
ret
or
cmp
pop
inc
push
add
aaa
inc
cld
scas
dec
gs
js
popf
loopne
mov
cmpsl
test
pop
in
xor
lds
add
mov
xchg
test
les
stos
jns
addr16
orb
xor
dec
jle
sti
add
or
shl
or
xor
outsl
lahf
adc
or
sbb
rolb
in
aaa
nop
inc
push
jns
ja
add
andb
lock
inc
xlat
cmp
mov
rclb
xchg
dec
mov
jne
aas
pusha
dec
and
jle
add
sahf
insl
add
mov
cmpsb
daa
xchg
xor
std
pop
test
jb
add
mov
pop
push
add
mov
repnz
ret
add
push
dec
imul
inc
out
adc
pop
or
nop
addr16
dec
adc
inc
bound
cltd
dec
sbb
sti
pushf
out
loopne
pop
aad
dec
add
push
shlb
orb
adc
dec
add
xchg
repnz
add
mov
lret
in
add
push
add
sub
dec
jb
inc
lret
add
xor
sbb
leave
and
mov
push
adc
add
pushw
sub
ja
add
pop
sbb
and
pusha
sbb
sub
nop
jnp
inc
je
sbbb
shll
lret
fdivl
cmp
jnp
adc
fwait
jo
out
jl
pop
sub
mov
roll
add
cmp
add
lods
push
jbe
sahf
pop
jo
inc
jle
add
xor
push
push
xor
mov
push
adc
add
repz
or
adc
adc
dec
sbb
iret
sub
dec
dec
mov
add
arpl
sbb
cld
mov
sbb
add
push
inc
frstor
ss
inc
hlt
lea
mov
mov
add
popa
fstpl
stos
mov
xor
mov
dec
ljmp
lahf
jo
les
cwtl
in
xchg
pop
bound
jbe
pop
sbb
pop
data16
mov
xchg
inc
cmp
mov
nop
jno
add
inc
clc
js
in
sub
or
inc
mov
and
cwtl
add
mov
leave
sti
push
outsb
xlat
dec
fisubl
adc
insb
lret
stos
cmp
jne
xor
jge
mov
sub
xor
jno
jecxz
add
xchg
aaa
int3
in
fstpt
or
lret
sub
add
cmp
pop
add
shll
xor
dec
and
adc
mov
scas
xor
aam
pop
lcall
mov
jge
add
mov
add
dec
callw
int
and
bound
pop
mov
adcb
fdivs
adc
cmp
sub
leave
jo
les
sahf
repz
mov
movsb
and
or
setge
push
inc
sti
pop
test
dec
mov
inc
push
rorb
je
addl
cmp
inc
fcoml
pop
pop
add
mov
call
aad
shll
dec
fcmovu
fcompl
scas
push
xor
test
sub
movsb
outsl
xor
jecxz
push
sbb
sbb
in
loope
xor
jno
addb
loop
mov
add
jecxz
lret
fistpll
adcb
cli
jp
push
and
add
and
inc
test
add
inc
push
movsb
push
mov
add
sbb
and
jp
pop
clc
aaa
cld
jg
sub
iret
add
ja
movsb
push
jo
add
mov
pop
cmc
nop
insb
fiaddl
xchg
pushf
mov
sbb
addl
or
out
cmp
adc
in
mov
xchg
jae
pop
inc
push
xchg
xchg
pop
sbb
lcall
hlt
out
adc
iret
add
aas
shrl
and
push
pushf
mov
pop
xor
ret
aaa
ljmp
daa
add
cli
in
add
enter
jns
cmp
sub
jb
adc
int3
stos
add
das
dec
stc
cld
scas
xchg
mov
into
neg
andb
add
shlb
jnp
lret
inc
push
push
cmp
and
add
adc
ror
cmp
repnz
test
ror
pop
cmc
aaa
push
push
mov
popl
cmpb
loopne
pop
mov
push
addr16
pusha
sub
add
mov
pop
add
jl
mov
pushf
mov
addl
add
push
mov
int
pop
inc
shl
ja
mov
pusha
dec
xchg
cmp
xor
jecxz
add
xor
mov
insl
sahf
push
push
adcb
sub
pop
push
add
push
dec
arpl
movb
mov
inc
pusha
sti
mov
outsl
roll
xchg
idivl
movsl
add
xchg
in
sub
pop
lea
je
or
pop
add
test
mov
call
add
rol
mov
mov
pop
cwtl
fstpt
stos
mov
in
xchg
mov
push
lcall
lods
ja
adc
nop
add
xor
pop
fnstcw
int
nop
add
ffree
and
add
loope
jnp
and
ss
inc
dec
dec
dec
lds
adc
jbe
jb
adc
sbb
add
sub
add
stos
popf
sti
add
inc
lea
jbe
inc
sbb
faddl
mov
xchg
je
pop
push
sub
lret
in
rol
in
sbb
aas
or
or
lods
adcb
sahf
sbbb
cld
outsl
cmp
sbb
aam
xchg
sub
notl
cli
add
aam
sbb
or
jbe
testb
popa
mov
orl
inc
inc
sbb
adc
faddl
jno
out
jne
orb
repnz
mov
xchg
je
addr16
int
stos
add
or
shlb
mov
sbb
je
cmovnp
jle
or
cmp
dec
add
int3
cmpsb
push
in
push
add
sahf
adc
in
xor
mov
sti
loope
shrb
ficoms
mov
mov
sub
pop
xchg
shlb
icebp
pop
add
dec
aam
add
jp
or
inc
jb
jl
add
sub
sub
cltd
xor
add
xor
call
add
xchg
clc
sub
xor
push
stos
mov
rclb
inc
js
divl
test
xor
mov
loope
push
adc
adcb
adc
pushf
rolb
sarl
stos
lea
aaa
pop
repz
mov
add
push
pop
cld
int3
icebp
outsl
add
and
pop
les
mov
adc
cwtl
mov
xor
adc
push
orl
and
jns
addr16
das
outsl
fiadds
pop
xchg
fsubrs
out
pop
fs
rolb
ss
xor
sahf
mov
jb
ret
test
add
xchg
mov
xchg
std
cmp
and
adc
xor
test
adc
cltd
inc
in
std
scas
mov
movsl
in
or
cmp
rorb
pop
mov
dec
arpl
lea
push
mov
xor
js
xorb
dec
jl
andl
mov
add
cwtl
jmp
mov
sbb
lods
inc
mov
nop
sbb
inc
dec
cmp
insb
push
jg
mov
fisubl
sbb
add
cmp
and
push
mov
jo
add
mov
mov
cmp
dec
jnp
loopne
popa
pop
sbb
sbb
movsl
sub
cltd
push
repz
mov
dec
push
xchg
inc
ljmp
lods
push
verr
jge
mov
imul
shlb
add
inc
jne
pop
or
ftst
fidivl
les
fsubr
add
enter
and
pop
pop
push
jo
mov
in
jae
ja
push
mov
sbb
lock
inc
add
sub
leave
add
lds
push
aam
add
loop
add
sbb
add
popf
adc
cs
xor
push
xrelease
in
pop
xchg
daa
cmpsl
loopne
push
add
aaa
lret
fnsave
jo
add
roll
fildl
mov
call
ss
adc
nop
sbb
in
push
and
roll
repnz
std
out
add
mov
jg
xchg
inc
cwtl
mov
lds
xchg
jnp
cld
jge
out
in
or
out
pop
xor
nop
inc
jae
add
cs
push
cli
push
mov
add
cmovbe
into
cmp
add
bound
xchg
or
test
mov
jbe
add
and
pusha
mov
leave
xorl
push
push
shll
sahf
jae,pt
mov
xchg
in
test
call
dec
out
nop
add
jle
sub
test
js
imul
inc
xchg
test
add
andb
jnp
jbe
add
insb
sbb
movsl
sahf
ja
and
out
aam
in
popa
xchg
testl
push
add
orb
int
sub
and
inc
insl
jp
mov
sub
add
fucomi
dec
push
clc
mov
iret
and
and
aam
roll
cmp
test
hlt
insl
in
add
fs
cmp
lock
or
movsb
shrl
lods
inc
out
or
xor
pop
xchg
add
jbe
dec
mov
sub
pop
dec
mov
jns
dec
shlb
and
call
fdivrs
jmp
cltd
add
pop
add
fimull
mov
xchg
jnp
movsb
sbbb
sarb
cmp
pop
repz
js
mov
pop
addb
dec
adc
add
lahf
insb
jle
loope
push
dec
pusha
movups
jge
or
dec
scas
sbb
mov
sub
test
or
push
adc
popf
add
repnz
xlat
dec
adc
push
lahf
out
sbb
cmpsl
les
cmp
aam
pop
mov
xor
or
mov
jo
lcall
cmp
nop
inc
insl
inc
or
shl
pushf
enter
add
push
fistpll
out
loopne
scas
add
or
out
add
ret
add
aam
adc
js
pusha
sub
lret
gs
inc
add
or
clc
paddb
cltd
inc
cwtl
jp
pop
cmp
insb
add
mov
ffreep
fisttpl
jb
dec
fsubs
xor
dec
add
sub
pop
pop
dec
add
push
lea
les
pop
mov
dec
int
or
shl
cs
and
imul
or
test
jmp
push
add
in
fdivrs
add
enter
rcrb
push
or
fcmovbe
pop
pop
jle
pop
or
dec
add
out
fstl
push
mov
mov
add
clc
fiadds
hlt
aam
insl
push
cltd
add
mov
rcrl
dec
leave
jp
mov
or
inc
rclb
or
call
scas
lods
orl
add
lds
js
xor
stos
int3
add
scas
jbe
jno
push
add
push
jo
test
add
add
in
push
adc
out
add
or
cmpsb
add
shl
icebp
repz
xchg
ljmp
push
sahf
clc
dec
inc
sbb
mov
jle
jb
add
xor
push
cmpsl
add
mov
cmp
pop
popl
pop
clc
push
out
pop
loopne
pop
push
mov
xchg
mov
incb
cmpsb
repnz
std
cmc
call
movsb
mov
or
in
pop
cmc
mov
xchg
sbb
pusha
mov
sbb
add
fwait
lods
or
gs
repz
hlt
mov
rorb
and
fisubs
add
push
ljmp
adc
js
push
push
mov
push
add
loopne
repz
int3
cmp
bsf
inc
hlt
clc
addb
pop
daa
cmp
mov
xchg
ret
fiaddl
movsb
adcb
cmp
test
sbb
out
inc
test
jo
ret
pop
adc
movhps
add
mov
movsb
lods
mov
mov
pop
sbb
pusha
add
rorb
addb
mov
jne
pop
repnz
or
incl
inc
sbbb
add
iret
pop
mov
in
push
add
xor
dec
loop
adc
iret
adc
add
cmp
in
lret
cmpsb
scas
jmp
cs
inc
das
mov
xchg
pusha
aas
loopne
push
cmp
icebp
stc
and
mov
lock
pop
jbe
xor
bound
out
scas
or
push
scas
add
or
in
cli
cwtl
pop
xor
shll
xchg
xchg
adc
test
js
js
addl
lcall
sbb
in
sbb
mov
mov
inc
add
ljmp
push
push
inc
or
stos
lcall
adcl
jno
pop
xchg
loopne
add
push
movl
cwtl
xchg
andb
sbb
data16
sub
ret
sbb
mov
mov
add
or
or
mov
mov
add
inc
lea
jecxz
cs
loopne
add
mov
lock
mov
add
cltd
pop
or
scas
jne
xchg
scas
imul
sbb
test
mov
out
out
add
jbe
mov
pop
sbb
xor
inc
out
pop
add
xchg
xor
roll
mov
mov
daa
lods
sub
mov
cmp
scas
ret
sbb
add
xor
and
int3
icebp
or
pop
add
movsb
cmpsl
loopne
add
sub
mov
rcrb
add
ret
xor
pop
mov
sub
jnp
nop
shll
fsubl
or
clc
cltd
out
mov
cmpsb
jnp
nop
lock
push
add
mov
push
lahf
and
or
xlat
cmp
push
cmpsl
loope
push
jmp
mov
xchg
push
or
enter
je
or
and
mov
mov
mov
jo
insl
jno
adcb
add
and
push
pop
enter
pop
jno
add
jle
cmp
mov
fisubrs
or
pop
or
icebp
outsb
xor
iret
and
movsl
and
aad
push
xchg
js
push
cmc
pop
inc
rcl
out
mov
cmpb
inc
mov
iret
add
std
fisubs
mov
mov
cli
outsl
popf
lds
adc
addl
sub
cli
mov
pop
sbb
xor
mov
mov
push
ficoml
in
cwtl
xor
das
mov
daa
roll
stc
and
pop
popa
push
pop
add
js
orl
cld
push
inc
pop
jg
incb
push
rcll
stc
pop
daa
push
nop
cvttps2pi
xchg
add
int3
push
ljmp
cmp
cmp
dec
or
pusha
add
loope
dec
sbb
xor
mov
cwtl
xor
stc
add
repz
lret
add
lock
movsb
lock
jne
in
movsl
daa
arpl
mov
add
mov
lods
or
and
and
or
lcall
ds
add
jb
cmp
add
lret
idivb
fbld
jo
or
pop
incb
fs
subb
add
and
test
push
xor
scas
js
std
mov
pop
xchg
nop
rcrl
cmc
ret
push
int
xchg
out
mov
bound
lret
push
dec
loope
inc
out
jnp
add
jo
mov
fnstcw
push
push
into
ja
ror
fiadds
ja
sub
sub
stos
out
popa
loop
mov
push
call
outsl
hlt
jge
sub
movaps
into
popa
add
dec
jae
or
mov
and
inc
push
sbb
mov
mov
cmpsb
repz
cmp
push
outsl
add
pop
clc
pop
cmp
mov
stc
adc
cmp
xor
jmp
cwtl
pop
and
xor
pop
icebp
jae
movl
add
das
add
inc
push
fs
pop
mov
ret
cmp
mov
jno
inc
popa
pop
and
arpl
push
jecxz
lock
mov
or
and
sbb
or
in
in
nop
es
dec
sbb
sbb
shrl
xor
dec
aas
xor
data16
jbe
cmp
and
pop
mov
mov
add
sarb
or
inc
add
mov
dec
mov
add
jl
lret
je
jg
fstl
enter
add
mov
add
mov
and
sbb
cmp
mov
jg
cltd
mov
add
and
aad
mov
test
push
out
fidivs
incb
mov
aas
add
xor
mov
addb
pop
push
loopne
lock
clc
cmp
hlt
andb
nop
pop
push
pop
lcall
jge
xor
push
sbb
sub
pop
negl
mov
sub
push
roll
pop
out
stos
lea
add
clc
mov
add
xchg
cmp
xchg
mov
adc
and
xor
mov
add
hlt
ds
test
adc
mov
add
lock
roll
ja
adc
or
mov
jp
mov
addb
cwtl
xorb
daa
and
pop
repnz
push
xchg
int
sub
jle
mov
lcall
sbb
ja
xlat
add
aas
xor
lds
mov
jae
das
pop
imul
pusha
xchg
sub
insl
repnz
mov
cmp
sarl
xchg
adc
pop
cld
cmpsl
add
cmpsl
xchg
push
enter
sbb
dec
sahf
push
in
mov
mov
repnz
jo
sbb
std
sub
int3
mov
in
add
fisubs
cmpsl
out
push
adc
bound
ret
inc
rcr
and
fs
ret
outsb
adc
subb
imul
arpl
cmp
sbb
jmp
incl
fldcw
xchg
int
add
insb
jns
aas
pop
adc
lods
aam
add
lret
rorl
or
add
jb
nop
inc
in
add
repz
xchg
iret
mov
lahf
sbb
sub
cld
xor
xchg
ljmp
mov
push
dec
adcb
popa
dec
add
es
add
pop
mov
test
in
cmp
and
adc
pop
jmp
out
sbb
xor
stc
call
lahf
xchg
shlb
jg
mov
add
nop
pushf
mov
test
roll
lcall
aam
jp
mov
popa
sbbl
push
loopne
sbb
ret
inc
pop
clc
dec
test
xor
mov
enter
adc
xor
in
sbb
mov
jo
mov
xor
mov
mov
pop
xchg
movsl
sbb
xor
nop
arpl
pop
xlat
iret
xor
pop
add
adc
xor
daa
add
pop
std
aad
jecxz
std
jo
incb
mov
xchg
mov
dec
inc
cmp
and
add
mov
inc
fdivs
xor
inc
cmp
pcmpeqw
sub
clc
xchg
inc
fsts
push
xor
xchg
dec
call
out
adcb
adc
jno
add
push
mov
mov
int
sub
push
mov
sldt
sub
or
jns
add
pusha
push
test
shr
les
pusha
popa
mov
sbb
adc
fwait
dec
sub
nop
je
sub
sub
cmp
sbb
cmp
out
cmpsl
add
decl
or
clc
outsb
pop
inc
inc
out
mov
fbld
mov
mov
mov
xor
sahf
dec
xchg
cmc
jnp
pop
ljmp
ret
xchg
and
jmp
shll
and
cmp
ja
push
dec
inc
push
add
xchg
aaa
cmp
scas
add
add
ds
mov
and
sbb
insb
shrl
sub
int
pop
xchg
add
rcrl
cmpsb
and
decl
push
jbe
imul
mov
sub
into
adcl
insb
lahf
clc
cmpsl
leave
cmpl
test
pop
fcompp
pop
dec
pop
fistl
push
push
add
out
cltd
mov
adc
xor
pop
rcrb
std
mov
pop
lods
add
jg
repnz
dec
mov
add
adc
adcl
inc
jge
add
test
xorl
or
shlb
repnz
mov
push
imul
sbb
mov
add
push
lret
push
ljmp
and
sub
aam
jnp
add
cmp
xchg
imul
pushf
add
fsubrl
sbb
xchg
jnp
dec
adc
add
lret
call
pop
in
cwtl
push
push
fs
pop
inc
and
sub
lods
shl
mov
mov
bnd
add
out
les
pmulhuw
jp
inc
or
stos
jecxz
in
add
scas
ja
or
xchg
in
dec
mov
add
loopne
sub
mov
mov
pop
add
outsl
movsb
repz
ds
stos
jmp
rolb
lret
jae
pop
mov
or
adc
imul
pop
add
or
add
addr16
push
add
popa
pusha
sbb
ficoms
test
jne
rorb
sete
cmp
push
push
fstps
pop
jge
add
adc
jbe
rcll
sbb
mov
mov
outsl
out
nop
sbb
out
and
in
dec
add
fcomps
inc
push
cmp
int3
add
loopne
lds
jle
sub
sub
jmp
add
mov
nop
rcrl
add
popf
outsb
jbe
add
pop
add
push
lahf
xor
sbb
test
stos
xor
cltd
mov
in
push
fwait
stos
jne
out
insb
adc
movl
bound
sbb
loop
jl
sub
pop
push
and
ja
push
pop
add
jne
push
add
mov
add
add
mov
stos
pop
fidivrs
bound
push
cli
jmp
in
arpl
inc
push
xchg
sbb
mov
dec
add
and
scas
or
mov
sub
mov
cwtl
arpl
loopne
mov
xchg
popa
andb
push
cmp
stos
mov
mulb
jl
cmp
mov
dec
inc
add
repz
and
nop
sbb
dec
ljmp
sub
and
xchg
std
mov
fidivrs
add
dec
cmp
dec
rcll
add
dec
mov
mov
sub
add
add
loop
repz
jle
aad
sub
dec
out
add
pusha
ret
mov
shlb
jle
dec
das
fs
mov
cli
andb
lea
xlat
mov
mov
mov
pop
jae
rcrb
movsb
add
lret
pop
jno
jle
pusha
ss
bound
mov
or
loop
cmp
pop
adc
int3
jnp
imul
orb
data16
rcrl
mov
call
shrb
xchg
lock
adc
stos
inc
repnz
loopne
popa
mov
push
cmp
lahf
inc
push
mov
jmp
cmp
je
push
or
xchg
test
add
enter
jle
pop
pop
mov
call
cmpsl
loopne
push
arpl
add
int
lods
sbb
or
sarb
iret
mov
cmp
lret
adc
in
xlat
dec
loopne
std
xor
inc
adc
inc
aam
mov
cmp
cwtl
movsb
xchg
sbb
add
add
and
insl
cmpl
cmp
xchg
cld
xchg
add
out
cmp
xlat
mov
cmp
add
jo
mov
or
out
jbe
sub
das
in
xchg
cmp
enter
dec
jge
cwtl
cmc
sbb
mov
inc
or
or
dec
iret
xor
inc
sub
add
repz
xor
shrb
arpl
ja
lret
cli
sbb
add
xchg
insl
mov
sbb
sbb
imul
fiaddl
lret
shrl
adc
mov
jecxz
xchg
insb
jb
add
jne
and
mov
add
cmp
cwtl
movsl
mov
sub
andb
xchg
add
add
outsb
insl
mov
cmp
add
ret
call
cmp
add
cmpsl
or
aas
sub
jg
cmp
cli
js
or
inc
lock
sub
mov
leave
sarb
mov
iret
inc
and
cmp
cmpsl
push
mov
sbb
inc
fcmovu
add
inc
loopne
or
add
jge
adc
mov
add
pop
adc
es
push
xchg
hlt
mov
fsubrp
sbb
int3
cs
mov
add
inc
mov
add
adc
lods
mov
inc
or
push
fsubs
test
push
jge
xor
fistpll
fs
jmp
mov
test
shll
pop
add
cmpsb
cmp
and
fisttps
dec
cmp
movl
rorl
inc
cwtd
test
dec
add
pop
test
push
stc
add
push
loop
mov
je
dec
jmp
dec
jnp
and
pop
jne
inc
push
sub
mov
inc
jb
xor
outsl
dec
push
add
cmp
mov
xor
xor
sub
mov
or
adc
int
pop
in
push
lds
daa
mov
decl
adc
adc
add
sbb
mov
stc
sbb
loop
test
sbb
mov
lea
cmp
lret
leave
and
movsb
int
add
fildll
lds
addb
mov
and
call
adc
stc
imul
out
popl
aam
xchg
push
test
test
outsb
xchg
add
sub
psubusw
pop
xchg
pusha
cmpsl
ret
or
add
xchg
push
mov
sti
cs
mov
rcrl
xor
scas
or
add
je
inc
add
in
lds
adc
push
movsl
inc
or
xchg
mov
inc
hlt
add
nop
addb
cmp
push
es
sub
add
andb
pop
outsb
jle
fbld
loopne
int3
add
push
out
mov
xor
orb
dec
pop
pop
in
lret
outsb
sbb
in
in
pop
cmp
dec
pop
enter
out
xchg
add
xor
mov
add
adc
jns
outsl
das
int
ds
sbb
bound
dec
pop
hlt
mov
jb
cltd
dec
mov
mov
pop
add
adc
jne
push
mov
ljmp
nop
and
cmp
leave
add
adc
mov
dec
out
mov
fs
add
xchg
adc
xor
xor
or
or
sbb
jno
push
inc
repz
dec
xor
repnz
add
popa
mov
sub
inc
and
popf
push
xchg
adc
xor
icebp
add
mov
xchg
call
jg
xor
les
adc
sldt
lods
or
jg
pop
pop
mov
pop
mov
clc
dec
push
mov
cmp
sbb
and
xchg
fcomps
lock
and
pusha
addb
dec
jg
add
cmp
fmull
inc
mov
mov
pop
cmp
push
les
loop
xor
subb
cwtl
cli
int3
or
mov
sbbb
call
dec
add
adc
add
sub
and
adc
add
inc
ja
jle
xchg
fs
mov
push
push
xor
sbb
sbb
test
out
sbb
dec
inc
in
daa
repnz
loopne
xchg
out
aaa
fidivl
rolb
popa
push
sbb
mov
fcomi
aad
mov
pusha
shll
fstpl
push
dec
add
jo
jmp
xor
xor
mov
push
jecxz
test
add
hlt
nop
fnstenv
sub
inc
add
xchg
call
cmpsb
adc
add
aas
pop
sbb
mov
xor
add
ret
dec
enter
subb
repnz
popf
jmp
fbstp
jl
add
push
add
clc
loopne
cld
das
stos
pop
fidivrs
pop
sbb
push
fadds
add
jmp
lret
aas
out
xchg
push
push
andb
pop
shlb
xor
cld
or
fs
mov
pop
bound
jb
test
mov
add
lret
frstor
mov
dec
pop
mov
adcb
and
jmp
push
jmp
sub
movsl
pusha
push
pop
inc
xchg
je
add
jle
push
mov
cmp
or
push
movsl
jl
push
add
mov
iret
aam
mov
pusha
js
int3
aad
jb
xchg
add
or
sete
push
je
add
pop
inc
pop
mov
call
dec
add
out
pop
add
and
int3
jg
pusha
repz
cmp
adc
add
add
sbb
push
aam
jl
sub
sub
add
cltd
rorb
in
add
fldcw
cmc
add
test
cmpl
cmp
add
xchg
jge
xchg
adc
mov
pop
fs
test
xor
jbe
sbb
xor
pop
inc
add
add
jb
adc
mov
xchg
push
push
jbe
mov
cld
test
sbb
cs
and
outsb
in
push
pop
jno
add
shl
jno
push
xchg
mov
adc
leave
push
add
out
adcb
loopne
xchg
pop
inc
int3
adc
shlb
add
inc
push
adc
mov
add
lcall
cld
in
add
adc
scas
lea
add
add
out
add
cmp
jo
add
push
adc
cmc
or
and
sbb
lret
jge
mov
jp
push
test
loopne
pop
and
scas
mov
test
rolb
pop
int3
inc
js
icebp
and
leave
mov
loopne
push
mov
and
or
in
cmp
aas
cli
mov
lea
dec
dec
lahf
jecxz
lcall
test
scas
pop
pop
push
mov
push
mov
or
jb
int3
adc
insb
movsl
orl
xlat
and
cwtl
xor
testl
lret
shlb
inc
add
int
stos
push
mov
outsl
scas
movsl
add
dec
shr
pop
add
fsts
jbe
lea
or
push
and
aas
dec
sub
jl
inc
adc
ljmp
add
orl
and
or
loope
cli
fcompl
add
sbb
loopne
mov
jo
popf
loope
dec
divps
and
and
popa
or
inc
dec
sar
test
mov
push
add
ss
in
add
pop
dec
push
ja
jae
add
lret
scas
movsl
or
rcrb
mov
push
mov
in
mov
inc
in
add
and
jbe
out
inc
push
mov
stc
or
add
xchg
idivb
jge
mov
add
xchg
fdivrs
xchg
pop
adc
iret
jecxz
add
push
inc
outsl
xlat
sbb
add
xorl
inc
adc
add
lret
into
rorl
or
fistpl
in
adc
test
push
je
scas
add
cmp
lahf
pop
add
pop
bound
add
add
push
rorl
and
jo
add
push
sbb
add
cmc
bound
ljmp
pop
data16
adc
dec
ret
mov
fdiv
push
addb
mov
test
roll
dec
sub
sbb
add
idivb
gs
sub
sbb
mov
add
into
xor
add
sub
aas
inc
and
add
dec
jl
mov
cs
mov
inc
cltd
jns
mov
popf
rcl
mov
call
add
pop
sahf
fistl
iret
xchg
pop
loop
xor
pop
test
and
js
push
repz
fdivl
push
loop
adc
iret
loopne
cmp
inc
test
faddl
mov
mov
pop
push
sbb
push
cmp
jbe
and
hlt
dec
add
enter
add
adc
clc
add
mov
hlt
sub
push
mov
ret
stos
push
adc
cmp
mov
aaa
add
ret
jge
sbb
lahf
add
xchg
iret
add
mov
jb
jl
jne
add
jmp
loopne
sbb
and
add
pop
add
and
cmp
add
call
lds
and
inc
ljmp
add
xorb
jp
subb
cmpsl
xchg
sahf
add
push
or
rol
testb
test
shlb
in
je
dec
sbb
lret
rclb
mov
mov
cld
adc
lock
cmp
xchg
jns
sbb
jg
mov
scas
add
fcmovbe
mov
aas
sub
jne
pusha
jecxz
stos
push
add
cwtl
push
pop
sub
cmpsl
cltd
inc
jne
fcoms
xchg
ja
pop
and
sbbb
xor
xor
and
or
push
fiaddl
in
or
jmp
add
cwtl
cmp
popf
arpl
fs
mov
mov
xchg
lcall
jae
in
shr
aaa
ja
push
test
mov
jb
sbb
mov
outsb
cmp
pop
or
mov
mov
mov
add
sarl
push
mov
std
cli
dec
push
pop
xlat
pusha
add
cwtl
and
and
imul
mov
add
jl
lldt
pop
lcall
cmp
scas
call
sub
dec
orl
dec
push
jg
push
loopne
lea
negl
fs
nop
pop
add
dec
add
into
adcb
orl
and
ret
das
hlt
movsb
mov
and
addr16
stc
in
or
ja
mov
rorl
inc
xchg
lea
mov
clc
fidivrl
push
jo
sar
sahf
mull
dec
aad
insb
xchg
scas
jle
or
ret
push
sub
and
sbb
push
add
insb
cmp
mov
add
dec
lahf
popf
or
ror
test
repnz
jno
lock
jnp
add
adc
cmc
pop
test
dec
xor
sbb
add
push
in
xorb
faddl
push
or
stos
lea
repz
shr
mov
sub
mov
mov
dec
fs
xor
mov
int3
mov
xchg
adc
repnz
push
lretw
pop
xor
sbbb
test
add
inc
repnz
push
push
dec
push
loope
and
pop
mov
clc
pop
mov
add
inc
dec
daa
mov
and
or
cmp
mov
and
and
fsubr
aaa
addb
lock
aam
or
add
push
inc
loope
add
cs
add
repz
test
enter
mov
pop
mov
or
inc
mov
imulb
jae
add
call
push
les
xlat
xor
test
cmp
mov
iret
out
cmp
xchg
jb
xchg
sbb
add
jecxz
push
es
movsb
xor
dec
popf
pushf
inc
in
scas
xchg
xchg
add
or
add
add
add
int
bnd
ljmp
mov
dec
mov
pop
add
fdivs
pop
and
mov
mov
xchg
add
sbb
sub
xor
loopne
cwtl
add
dec
rcrl
fdivrs
push
cmp
lcall
int
add
mov
pusha
ss
loope
push
insl
jb
lock
repnz
or
lods
mov
cmp
add
sub
or
jle
hlt
pop
mov
fidivrl
fadd
add
push
jle
daa
cmp
call
push
xchg
sbb
cmp
add
nop
bound
inc
push
movsl
popa
lcall
add
xchg
btrl
or
into
cmp
add
mov
cltd
pop
rol
add
ljmp
mov
cs
inc
add
int3
mov
add
mov
xor
mov
push
insl
je
cmp
jns
popa
or
test
js
jl
cmp
dec
adc
cmp
cli
call
fs
mov
add
mov
xchg
pop
mov
cltd
inc
adc
jb
mov
add
add
clc
jg
imul
push
and
test
and
push
push
sti
xchg
jne
lods
or
dec
jno
faddl
add
mov
sahf
add
push
int3
out
mov
or
jno
push
xchg
mov
push
sub
cmpps
orb
inc
das
xor
or
mov
sbb
add
fucomip
push
ftst
imul
add
ret
adc
out
inc
imul
sbb
fnstcw
gs
adc
movb
loop
cmp
arpl
mov
dec
mov
jmp
adc
pushf
jge,pt
sbbb
mov
pop
sub
roll
fsub
fs
stos
mov
lds
push
adc
outsl
repz
add
jbe
mov
add
stos
or
push
lock
jo
repz
cltd
test
popf
jnp
cmpsl
scas
pop
addl
and
inc
or
aam
in
add
mov
xchg
adc
pop
jp
add
add
add
arpl
iret
push
pop
cld
daa
lods
add
addr16
in
mov
jb
add
repz
mov
and
ret
js
out
pusha
lea
xchg
or
rcr
fwait
add
mov
xor
mov
and
dec
jb
add
outsl
xchg
cmp
shrb
lret
mov
ds
mov
pop
lods
adc
pop
mov
into
daa
jg
mov
js
adc
fsts
repz
push
out
lds
add
push
enter
pop
mov
mov
clc
pop
cmp
inc
xlat
test
mov
jmp
jbe
hlt
dec
sub
cwtl
cmp
shll
clc
fadds
add
out
or
ljmp
cs
add
into
out
test
lds
mov
dec
pop
inc
mov
fwait
orb
cmp
push
jecxz
cmpsl
jnp
inc
pop
xor
jmp
mov
mov
enter
dec
jb
pop
addb
dec
sub
lea
mov
mov
shlb
ss
sbb
pusha
push
fcoms
xlat
push
ret
pusha
lds
mov
pusha
out
scas
jo
ss
jns
cmp
insl
xor
fidivrs
or
add
enter
loope
mov
pop
xchg
test
je
xor
mov
inc
xchg
cmp
fnstcw
aaa
push
roll
mov
add
ret
mov
js
add
es
mov
or
pop
push
loopne
sub
stc
add
or
call
testl
mov
fucomp
rcll
xor
inc
mov
icebp
imul
sub
xlat
shrb
adc
enter
and
sbb
and
loopne
pop
pop
mov
sub
cmp
test
xchg
add
push
stos
xor
adc
push
addr16
add
lods
outsb
fs
rorb
pusha
call
dec
add
push
je
inc
fsubp
xchg
cmp
mov
push
adc
mov
into
lret
or
add
clc
dec
dec
stos
ja
add
pop
mov
mov
xchg
sbb
push
imul
xchg
hlt
jmp
xchg
enter
add
sbb
pop
add
ja
dec
jp
inc
add
pusha
shlb
inc
nop
jo
cwtl
imul
jge
int
xor
add
fdivrl
or
push
adc
mov
sbb
add
xor
dec
adc
lock
hlt
lahf
xchg
dec
lock
movsb
mov
mov
xlat
ja
std
jecxz
imul
data16
fadds
stos
add
nop
xchg
xchg
mov
fidivrs
inc
push
push
popf
jl
jo
lahf
mov
sarb
pop
push
mov
sub
mov
loope
mov
cmp
mov
andl
not
mov
add
nop
test
mov
pop
add
ds
add
add
leave
daa
call
add
mov
pop
fmul
inc
mov
imul
fchs
int3
pop
push
push
ljmp
mov
inc
jl
jnp
cmp
push
maxps
sub
mov
sbb
gs
mov
nop
cmp
inc
xchg
lock
fsubl
push
sbb
out
sti
sbb
movl
add
cmp
add
or
add
gs
mov
or
add
dec
sbb
push
insb
add
xchg
std
stc
sbb
or
adc
xor
out
dec
fwait
inc
movsl
jne,pn
add
xor
mov
iret
aas
adc
fistps
popf
and
jecxz
nop
xlat
fmull
cmp
rorb
lods
pop
fnstcw
xor
mov
test
clc
lods
sbb
sbb
gs
cmpsb
lods
push
or
sbb
add
pop
jae
push
outsl
adc
and
jns
stc
rorb
inc
cmp
jecxz
mov
popa
jnp
movsb
dec
add
jae
dec
sub
fnstenv
cwtl
and
icebp
cmp
dec
lock
sbb
rol
jnp
nop
cld
ds
cmp
or
xlat
pop
mov
or
xchg
adc
lret
mov
xchg
in
add
dec
das
pusha
pop
imul
sub
and
add
xor
hlt
les
sbb
inc
into
rolb
loope
call
push
and
nop
dec
movsb
dec
dec
adc
in
adc
mov
and
shr
lea
mov
loope
stos
sbb
jge
in
xchg
sbb
loop
push
or
icebp
pop
out
cmp
mov
insb
sti
cmc
xor
cwtl
jo
mov
jle
xchg
pop
nop
xchg
pop
lret
sbb
ljmp
stos
or
pusha
cmp
inc
mov
pop
mov
ret
add
fnstenv
aas
dec
mov
cmp
push
or
mov
adc
das
or
or
in
mov
stos
push
clc
xor
or
enter
fldenv
add
mov
ret
rorb
lcall
inc
ret
int
outsb
sbb
nop
mov
mov
add
popf
cmpsl
enter
jae
sbb
and
add
sarb
and
mov
cmp
pop
or
or
dec
adc
out
loopne
jp
inc
ss
shlb
mov
mov
or
add
lock
lock
xor
add
shrl
mov
push
arpl
mov
imulb
inc
inc
cmpsl
adc
in
shl
sub
jae
xchg
ret
mov
rolb
inc
pusha
mov
lret
rol
or
lea
jge
cmpsl
jmp
inc
nop
lock
sbb
fidivrs
add
pop
or
fsubrl
out
cmp
mov
jl
int3
xchg
inc
xor
mov
test
inc
aas
cwtl
aaa
lcall
add
shll
and
je
xor
adc
dec
dec
inc
add
mov
or
xor
mov
ret
pop
or
daa
sub
in
pop
sbb
mov
add
test
add
mov
fldlg2
insl
in
rorb
adc
add
addr16
ljmp
mov
faddl
insl
add
add
and
clc
iret
pop
jno
sbb
sbb
imull
push
mov
adc
jp
scas
outsb
movsl
push
and
sub
cmp
dec
jbe
mov
clc
cmpsb
add
pop
mov
xlat
data16
popa
sub
and
cmp
sbb
xchg
pop
std
sbb
xchg
add
loope
xchg
mov
pop
lahf
inc
in
outsb
sub
out
xchg
out
dec
in
negl
movsb
roll
push
addb
xor
int3
mov
dec
idivl
fwait
bound
test
clc
and
mov
ja
mov
cmp
or
ljmp
sub
xchg
or
add
rdmsr
roll
scas
mov
xchg
ja
out
add
nop
rolb
jge
jns
mov
out
xor
pop
pop
xlat
xor
push
jp
or
jae
dec
sub
add
add
idivl
mov
add
lea
data16
cmp
inc
outsl
scas
push
add
add
add
cmp
call
in
pop
ss
xchg
scas
xor
cmp
nop
in
inc
fbld
add
mov
bound
and
mov
mov
sbb
enter
shll
mov
jno
add
popf
push
pushf
fnstenv
pop
dec
push
dec
add
add
mov
mov
repnz
xor
je
pop
add
mov
verr
cmp
das
pop
adc
out
outsb
cmp
jne
andb
and
jnp
dec
jg
push
pop
mov
clc
loopne
das
jns
push
ss
inc
add
push
adcb
movsl
mov
int3
stc
test
rolb
jno
add
lock
aas
test
push
or
sbb
cld
and
pop
movsb
fdivl
push
shll
add
sub
sbb
sub
into
jnp
sbb
fldenv
or
cmpsb
sbb
or
mov
mov
mov
rolb
into
xor
fistps
sub
mov
or
leave
imul
pushf
jmp
ss
aad
in
sarb
and
inc
iret
ficompl
sbb
lahf
add
cmc
popf
mov
sbb
adc
neg
add
cmp
jge
xor
int
cli
popa
movsb
add
xchg
pop
cmpsb
mov
pop
jl
lcall
and
lret
push
aad
add
lock
mov
pop
push
arpl
nop
xchg
pushf
repnz
push
pop
roll
xchg
or
jp
scas
add
sbb
add
or
adc
mov
scas
test
xor
repnz
bound
cld
xor
cmc
xchg
mov
pop
jae
adc
pop
xor
add
xor
je
adc
in
fs
cmp
or
add
enter
jg
rclb
add
adc
sbb
xor
and
stos
test
cmovns
mov
out
movsb
add
daa
jnp
pop
lret
inc
push
sub
or
mov
or
add
add
in
js
push
mov
in
add
mov
je
repnz
aas
adc
cmp
scas
jle
loopne
jnp
mov
cwtl
ss
pushf
fdivrs
scas
dec
mov
add
jno
jmp
daa
dec
sbb
add
fldenv
add
fdivrs
adc
adc
mov
jae
fwait
adc
idivb
dec
loop
sub
and
or
fistpl
xchg
push
add
fs
sub
test
pshufw
pusha
hlt
jg
iret
push
aas
adc
xor
add
scas
lods
jae
add
pop
cmp
push
stc
repnz
stos
ja
add
mov
push
cmp
test
into
dec
insl
ss
pop
add
push
incl
add
aam
and
mov
js
lret
lahf
iret
mov
call
inc
loopne
mov
cmp
subb
jb
sbb
jg
jmp
aam
sbb
and
pop
lock
add
xchg
mov
enter
or
adc
add
and
add
inc
push
mov
in
jl
imul
sbb
add
jno
dec
pusha
jns
cld
sub
mov
stc
sbbb
cmp
and
or
les
push
es
add
xor
add
mov
add
jle
sub
xchg
sub
mov
mov
and
xchg
push
orl
xchg
out
add
add
jg
push
push
fidivrl
dec
and
dec
and
popf
stos
add
fucomip
pusha
or
jp
pop
pop
mov
adc
lods
add
xor
pop
dec
inc
test
add
loop
jp
add
cli
aad
push
jecxz
rclb
jmp
mov
js
test
xchg
add
std
jmp
pop
or
add
sbb
and
add
insb
andb
or
dec
mov
add
inc
scas
add
outsb
jnp
lds
sbb
xchg
repz
fidivrl
add
and
cwtl
mov
jmp
aam
clc
and
andb
mov
das
xchg
and
sub
sbb
add
xchg
sub
iret
and
sbb
pop
imul
aad
cmpb
mov
adc
mov
adc
inc
inc
cli
shlb
jecxz
outsb
in
call
addr16
lds
inc
adc
cmp
pushf
push
xchg
xor
insb
or
xlat
xchg
or
rorl
sub
rolb
stos
cmpsl
sub
mov
js
jb
mov
add
push
push
popa
push
or
rcl
bound
add
cmpsl
sbb
out
jnp
sub
adc
rolb
mov
notb
add
and
int
sub
or
fucomip
adc
rolb
jle
stc
add
clc
push
add
aad
icebp
pop
pop
lods
add
pop
and
mov
mov
fsubs
es
jmp
mov
push
sbb
pushf
fs
or
xchg
out
rolb
dec
pop
push
in
add
jbe
pop
inc
shll
xchg
pop
dec
mov
cld
outsl
push
mov
adc
ror
testb
add
adc
das
rclb
js
lret
lret
loopne
adc
mov
jg
ficoms
scas
add
fmul
out
hlt
mov
mov
add
add
and
hlt
pop
int
add
test
add
iret
mov
add
adc
pop
add
leave
dec
movl
xchg
add
add
nop
or
and
pop
outsl
xchg
mov
leave
int3
mov
push
jp
std
jge
ret
pop
shrb
data16
test
add
push
inc
cmp
mov
mov
lahf
shl
xor
jp
in
stos
icebp
pop
test
mov
and
les
or
pop
sub
cmpsb
lds
dec
mov
divb
lods
add
lcall
fcoms
cmp
mov
shl
sub
roll
ret
iret
dec
pushf
jmp
aad
or
add
popa
imul
outsl
clc
roll
add
xchg
in
xor
mov
cmpsl
fisubrl
and
and
sbb
ljmp
xor
das
cmp
scas
fimull
add
int
dec
negl
cmpsb
cld
inc
cmp
loopne
add
pop
leave
icebp
inc
push
xlat
mov
add
and
insl
je
test
xor
inc
mov
push
mov
ja
mov
xor
adc
mov
int3
or
mov
jo
and
iret
test
pop
fidivl
popa
inc
sbb
out
push
dec
push
sbb
add
xchg
mov
ja
mov
add
ds
and
mov
mov
mov
or
add
mov
addb
sub
push
leave
nop
or
pop
enter
jmp
jg
cltd
add
inc
push
lcall
add
cmc
xchg
rcr
sbb
sahf
and
rclb
lret
xor
rclb
pop
gs
test
sbb
sbb
or
add
addr16
dec
add
adc
out
add
test
mov
jae
imul
add
in
sbb
xorl
or
mov
xor
scas
adc
sbb
pop
mov
push
jae
inc
jecxz
add
out
add
scas
nop
dec
add
and
mov
into
fbld
xchg
mov
and
sub
mov
nop
or
mov
sbb
arpl
add
rcr
imul
sub
and
adc
add
xor
add
sarl
or
insb
ret
pop
cld
test
sbb
pop
mov
mov
scas
and
shl
enter
xchg
popa
mov
inc
sbb
mov
ret
xor
sbb
sub
mov
test
and
sub
imul
add
les
enter
jmp
fmuls
test
jle
scas
xor
mov
inc
add
cli
push
xor
int3
add
in
data16
or
or
sub
and
out
xor
shlb
repz
incl
int3
imul
mov
cmp
adc
add
fwait
mov
add
jg
cmp
mov
xchg
out
ljmp
orb
iret
js
pop
push
and
or
imul
inc
int3
les
jmp
push
mov
push
daa
xchg
pop
mov
inc
xor
nop
add
cmp
fs
flds
jge
mov
adc
add
sbb
incl
mov
in
jno
shl
pop
add
sbb
mov
movsl
js
pop
pop
mov
sbb
loope
stos
jo
into
cs
lods
push
sub
adc
sub
inc
dec
incl
mov
outsb
rorl
jbe
outsl
sub
jp
add
pop
cmpsb
aam
xor
jmp
add
out
inc
add
sti
add
cmp
dec
clc
xor
or
sahf
mov
fldt
add
adc
pop
cld
repnz
xchg
pusha
insb
xor
push
mov
adc
adc
add
mov
shrl
and
push
xor
jb
sub
pop
stc
cmp
movsl
fsubrs
test
or
stc
adc
xchg
jl
add
iret
out
mov
dec
inc
aaa
add
enter
cmp
pop
int
scas
std
scas
call
inc
and
jge
adc
push
push
or
xchg
daa
in
pop
jo
add
sti
orb
out
xchg
add
sahf
divl
ret
adc
jmp
add
cmpsl
sub
int
sbb
ret
je
rcrb
clc
xlat
add
mov
stos
cmp
sbb
pop
xor
and
add
jae
leave
jmp
lret
sbbb
out
push
or
xchg
adc
mov
and
inc
cwtl
in
mov
sbb
lret
cmp
mov
fcoml
jb
add
mov
je
lret
lods
es
movsb
jb
push
cmp
faddl
cs
mov
sbb
xchg
inc
inc
xchg
add
sub
add
cmp
cwtl
das
pop
or
push
rorl
mov
loopne
jnp
add
cmp
mov
add
push
fisubs
push
imul
xchg
sbb
stos
add
mov
popf
sub
arpl
in
bound
cs
mov
test
xor
xchg
ja
mov
cmp
xchg
jecxz
push
inc
out
rolb
sahf
cmp
pop
add
push
xchg
inc
rorl
mov
loope
add
push
pop
subb
and
sbb
jp
xchg
sbb
sti
add
mov
test
xorb
add
sbb
adc
rclb
add
jmp
jp
xlat
movsl
into
inc
int3
cmp
jl
cmp
and
idivl
inc
js
outsb
mov
out
mov
push
movsl
dec
sub
add
divl
fwait
sbb
add
leave
cmpb
cmp
jns
pop
inc
aas
pop
int3
pop
nop
movsl
and
lods
dec
sbb
and
xchg
popa
imul
andb
aas
sub
or
adc
jge
mov
movl
add
imul
stos
inc
loopne
xorb
jbe
jg
ljmp
sbb
sub
subb
jl
jno
add
in
add
cmpsb
js
push
xlat
adc
sti
mov
and
sbb
dec
and
add
jno
cmp
mov
ljmp
rol
jg
in
sbb
mov
fst
inc
mov
in
out
rolb
add
popf
loop
xor
daa
add
inc
imul
jecxz
inc
jg
jno
or
push
sub
add
incb
mov
inc
inc
gs
xchg
dec
call
iret
mov
aam
add
sub
inc
in
add
mov
insl
push
xchg
xor
sbbb
add
bound
popa
hlt
lock
push
jl
ret
mov
je
jp
js
sahf
add
notb
xor
test
or
lahf
jbe
add
sbb
adc
pop
and
inc
or
push
pop
cmpsl
bound
dec
test
int
gs
and
mov
iret
sbb
notb
in
or
mov
ljmp
jnp
mov
inc
add
cmp
pop
inc
inc
push
lods
xor
xchg
dec
sbb
sub
xor
mov
sbbb
lock
pop
inc
popf
add
in
add
cli
cwtl
imulb
leave
addr16
sbb
fisttpll
sub
bound
cmpsl
jbe
testb
or
jnp
stc
loop
imul
mov
push
xchg
push
jle
cs
test
add
mov
adcl
push
xor
sbb
mov
xor
cmp
jmp
sbb
inc
scas
pop
adc
mov
add
sti
add
add
cld
and
aad
fiadds
pop
adc
testl
push
out
sub
mov
add
stos
adc
add
into
mov
xlat
mov
sahf
lods
pop
inc
lock
jb
xor
std
sbbl
mov
jno
or
and
sub
rolb
loopne
dec
xchg
add
jle
loop
xchg
stc
xor
test
loope
or
adc
lods
cmp
xadd
ja
shlb
mov
push
mov
jge
mov
add
inc
les
add
cs
scas
stc
add
outsl
sbb
pop
test
xor
aad
in
xchg
and
xchg
add
lret
mov
xlat
xor
pusha
cmpl
fdivrs
outsl
sub
add
mov
xor
add
mov
test
jne
mov
add
movsb
xchg
sub
cmp
mov
jnp
add
xchg
adc
lds
push
lcall
inc
push
adc
mov
sbb
rolb
dec
pop
sbb
xchg
insb
xchg
ljmp
push
add
pop
mov
mov
push
pop
pusha
add
adc
add
inc
test
mov
out
sbb
mov
jle
mov
add
cmp
lods
xorb
dec
ret
pop
xor
addl
add
add
stos
scas
xchg
add
cmpsb
add
add
cld
or
pop
adc
dec
mov
imul
push
xchg
out
push
and
loope
cmp
xchg
push
adc
cwtl
add
xlat
jbe
jno
or
push
test
xor
jmp
loopne
dec
adc
xchg
arpl
jmp
add
push
or
mov
add
shll
xorb
add
fildl
pop
dec
flds
mov
pusha
inc
loope
mov
ja
and
xchg
mov
shlb
mov
roll
push
pusha
fsub
test
add
ret
add
jl
test
mov
loop
lds
pop
fimuls
push
push
pop
test
add
xrelease
pusha
dec
sbb
lret
cmp
mov
add
insl
push
fiadds
lea
fldl
fdivrs
out
jne
cli
stos
dec
jae
rorl
xchg
and
out
add
mov
cmpl
push
mov
and
out
add
mov
dec
add
cwtl
ret
repz
mov
jne
stc
pop
lock
or
or
cmp
or
xchg
ljmp
jle
add
pop
aam
loop
sub
test
imul
jmp
in
adc
aaa
loop
xchg
sub
inc
mov
sbb
push
inc
addl
and
sbb
leave
jp
pop
mov
adcb
xchg
xchg
frstor
mov
inc
das
sbb
sub
add
rol
ss
outsb
imul
ja
xor
popf
lret
cli
arpl
or
add
sbb
sub
test
ror
cmp
fcmovbe
mov
jp
ss
jnp
test
test
outsl
add
into
rorl
dec
andl
adc
jne
arpl
add
into
cmc
and
clc
adc
add
popf
mov
cli
mov
repnz
lret
adc
inc
sbb
les
add
inc
or
adc
ja
add
loop
push
lret
in
aam
scas
push
test
es
out
dec
jns
add
int
cmp
jmp
lods
add
out
aam
and
rorb
ljmp
fldenv
int
inc
jle
cli
add
xor
cmp
fadds
cmp
data16
jecxz
ja
adc
xorps
mov
add
mov
and
add
enter
shrl
fsubrl
les
imul
add
repnz
stos
jmp
movsl
out
mov
rcr
pop
adc
sbb
dec
sub
movsl
dec
jae
icebp
add
in
cmpb
rolb
or
dec
insl
imul
dec
mov
rcrb
mov
in
xor
popa
and
adc
imul
hlt
insl
mov
loop
cmp
mov
sub
orb
iret
es
xchg
mov
or
add
adc
add
add
repz
loop
loopne
push
pusha
and
fcmovnu
pop
test
pop
aam
jmp
mov
xor
sbb
xor
rorl
inc
cld
out
arpl
add
leave
cmpb
out
xchg
sahf
xchg
fbstp
lahf
js
push
nop
add
mov
jl
add
enter
xchg
ss
inc
shl
jg
pusha
stos
dec
add
xchg
outsb
subb
addb
push
jmp
push
sbb
mov
iret
cmp
pop
add
lods
leave
jge
icebp
cmp
adcb
cmp
pop
xchg
popa
add
adc
repnz
clc
lock
push
push
aas
andb
in
fsub
jno
cmp
push
adcb
mov
std
jne
xlat
test
mov
adc
mov
push
into
add
leave
in
adc
ret
or
mov
lods
add
cmp
xchg
ret
and
scas
lods
imul
cmp
lds
mov
adc
pop
jnp
add
fstpt
add
cld
push
pcmpgtd
into
scas
add
sub
and
pop
loope
pop
jecxz
pop
mov
and
xor
add
fsubrl
rorb
clc
lahf
add
clc
cmpsl
or
dec
xor
mov
or
mov
add
loopne
xor
or
rorl
cmp
pop
fnsave
mov
or
aaa
ds
testb
or
leave
xchg
sbb
sbb
out
jb
cmp
jg
adc
add
test
pop
out
in
push
shlb
sbb
cwtl
dec
add
movsl
mov
loopne
les
xlat
in
cmp
pop
inc
sub
hlt
fcompl
mov
cltd
out
psraw
mov
push
lcall
and
jl
mov
adc
mov
add
pop
and
sbb
mov
pop
xor
sub
mov
cmpsb
lcall
pop
test
inc
or
and
clc
imull
add
jmp
push
add
cwtl
add
mov
sbb
sbb
sbbl
int3
out
mov
mov
add
repnz
adc
andb
push
mov
or
and
xchg
pop
lret
popa
inc
ds
adc
cltd
mov
call
add
incb
sbb
adcb
js
mov
xchg
add
mov
add
xchg
test
dec
cmc
dec
mov
pop
add
cli
mov
or
jnp
adc
das
sub
xchg
add
movsl
in
push
mov
adc
andl
add
fwait
cld
sarb
sub
xor
push
fidivs
out
imul
pop
and
ljmp
add
lds
add
mov
pcmpeqb
add
int3
addr16
mov
int
push
adc
inc
mov
mov
inc
adc
sbb
lea
cli
jne
loope
cld
iret
adc
call
stos
orb
ret
xor
push
and
xor
out
inc
repnz
and
aam
cli
in
add
out
xlat
adc
pop
sbb
push
mov
add
mov
loopne
data16
adc
sub
fnsave
xchg
mov
mov
and
lock
add
inc
shll
and
leave
mov
mov
lods
jbe
iret
leave
jns
cmc
or
in
push
subb
cmpsl
mov
out
pusha
cltd
in
adc
leave
lret
sarb
adc
cmp
add
pop
mov
jp
testl
mov
ja
ja
add
pop
push
xchg
test
aaa
jl
cmp
repz
xlat
dec
pop
dec
inc
and
mov
rclb
incb
jle
repnz
inc
cmpl
call
pop
jo
xchg
inc
fimull
jnp
movsl
cmp
add
xchg
bound
mov
cmpsl
sbb
add
addr16
out
imul
clc
mov
mov
inc
jp
or
adc
xchg
push
mov
shr
lock
out
std
into
xchg
dec
and
add
pop
cmpsb
test
inc
pop
jbe
add
add
ret
xor
add
adc
add
or
clc
push
ja
sub
push
and
loopne
aad
fwait
pop
dec
jnp
lret
jmp
jns
int
out
pop
add
push
loopne
jge
push
add
jo
imul
pushf
add
sbb
test
add
rcrb
add
or
add
insb
xor
jb
xchg
fcomp
mov
shr
cmp
pusha
xor
pop
xorl
repnz
clc
pop
mov
loop
xchg
mov
jmp
les
add
outsl
icebp
adc
add
dec
andl
inc
xor
xchg
add
enter
xchg
push
jae
icebp
add
push
insb
mov
inc
fs
call
popf
mov
cmpsl
or
dec
iret
xor
cli
icebp
ljmp
dec
or
cmp
and
addr16
dec
stos
cmp
stc
cmpsb
cmp
testl
sub
add
or
data16
fistl
add
sbb
cli
jecxz
and
in
add
mov
pop
inc
lret
xor
das
fcompl
cmp
sahf
ds
or
inc
pop
cmp
add
or
sub
ljmp
dec
sbb
andl
popl
pusha
inc
inc
inc
enter
into
sbb
xchg
add
mov
sub
orb
fisttps
lods
push
xchg
and
push
add
repz
out
scas
or
push
scas
in
pusha
or
pop
loopne
nop
add
repz
loope
fs
add
and
in
xchg
cmp
mov
inc
mov
rorb
cld
rorl
enter
ror
xchg
mov
inc
shrb
mov
add
xchg
add
test
in
imull
dec
xlat
fiadds
cwtl
jae
mov
cld
dec
mov
add
and
mov
add
imulb
movb
add
mov
arpl
call
lock
mov
repnz
lret
inc
das
push
mov
js
mov
xor
jbe
out
add
popa
xor
pushl
ret
add
ret
push
in
lods
repz
pop
cli
and
cmp
mov
lds
add
mov
fcmovbe
mov
push
fs
mov
add
aam
pop
xchg
gs
add
mov
mov
and
pop
lea
push
xor
sub
imul
jge
add
dec
sarb
push
nop
xchg
repnz
mov
dec
pop
aaa
pushf
add
xchg
and
ror
push
push
and
jb
push
and
sbb
out
mov
sbb
shlb
inc
rolb
in
dec
pop
sub
stos
xchg
in
push
cmp
data16
xchg
xchg
cli
xchg
or
or
shlb
sahf
xor
and
pusha
movb
push
pop
insl
xchg
int
jne
xor
nop
jg
addr16
addb
mov
adc
and
ret
repz
sbbl
ja
add
mov
xor
arpl
in
xchg
sub
jp
xor
and
cmp
pop
mov
jge
add
lds
cmp
clc
pop
movsb
xchg
sbb
mov
mov
fwait
imul
rolb
in
mov
cs
add
pop
jecxz
outsl
add
loopne
js
cmp
or
jbe
sbb
out
call
cld
insl
jge
sbbb
out
xor
mov
cmpsb
jns
add
and
add
lea
data16
push
jl
imul
cltd
inc
movsb
sub
scas
in
mov
jne
cmp
pop
mov
test
add
nop
cld
lcall
cmp
sub
aam
mov
adc
xlat
add
aad
mov
sub
inc
add
in
push
cmc
stos
jno
iret
cmp
lods
shl
push
outsl
daa
sti
lods
popf
cmpsb
add
aas
rol
outsb
add
pusha
adc
cs
push
fsubrp
inc
sub
popa
cmpsl
add
add
subb
inc
add
int
lds
aam
jnp
fs
cs
outsb
shrd
jns
es
push
push
pop
xchg
adc
jo
dec
nop
mov
lret
ss
nop
stos
fildll
add
dec
sbb
cmpsl
cli
data16
add
loope
loop
push
pop
dec
cmpl
cmp
sub
bound
sbb
cmp
and
pop
jp
jle
sbbl
mov
add
sub
rcl
adc
add
mov
subb
or
add
fs
cltd
pop
xchg
insb
push
xor
xchg
nop
nop
push
leave
lahf
add
push
ljmp
pop
mov
in
add
aas
adc
iret
clc
scas
aaa
cmp
cwtl
mov
or
sub
arpl
add
ret
stos
jo
add
imul
fldenv
adc
mov
push
fistl
cltd
push
popa
jge
push
pop
dec
and
jb
xchg
jnp
adc
mov
mov
dec
imul
add
aad
ret
add
add
sub
roll
xchg
add
pop
repz
or
clc
jp
imul
popf
out
imul
push
mov
testb
or
loope
divb
add
xchg
imul
add
lcall
insb
ret
cmc
jle
push
mov
mov
pop
pop
ljmp
jge
add
in
outsl
std
negl
push
addr16
pushf
dec
jmp
add
das
sbb
testb
shrl
xchg
push
mov
xchg
movsl
mov
pushf
addb
out
cld
sbb
push
pop
mov
ficoms
add
data16
cwtl
fildl
push
call
lcall
movsl
cmp
add
mov
jmp
fnstsw
xor
inc
add
fmul
jecxz
mov
add
dec
sarl
inc
sbb
imul
in
jbe
lods
inc
enter
cmpsb
cmp
or
fldcw
call
add
sub
addb
fdivl
cmp
cmp
out
out
scas
repnz
fs
outsb
stos
ror
fnsave
add
sbb
add
lods
adc
mov
add
mulb
or
xor
es
or
test
add
add
leave
jmp
addr16
sbb
jne
aad
sub
into
add
sbb
cmp
cmc
push
subl
add
icebp
jbe
scas
mov
movsl
add
xor
pusha
mov
gs
std
fiaddl
sbb
pop
mov
add
cmc
imul
and
test
pop
push
cld
movsb
jbe
mov
fbstp
inc
and
cmpb
out
jno
test
xchg
adc
shll
xor
dec
pop
xchg
add
lret
hlt
and
sbb
cmp
add
bound
mov
hlt
imul
xchg
mov
cmpsb
lcall
pop
std
mov
sbb
icebp
lahf
test
mov
cmp
xor
add
cltd
fmuls
adc
scas
and
cmp
xor
test
iret
add
cmpsl
sub
cld
xlat
pusha
sti
inc
ror
push
jl
xor
pop
jmp
pop
and
pop
push
icebp
add
mov
sbbl
lret
shll
shlb
push
sbb
push
xchg
jb
adc
ds
mov
mov
ja
inc
add
inc
cmp
in
pop
or
aad
test
fstpt
dec
out
add
push
stos
in
pop
fwait
loopne
sub
mov
loope
loop
mov
sbb
test
mov
rcrl
sbb
repz
test
les
push
xchg
iret
call
sub
jne
mov
mov
mov
shll
sub
jno
pop
jb
aas
movb
xchg
insl
mov
mov
cmp
test
jb
pushf
xor
add
repnz
xchg
xor
pop
mov
or
xchg
push
test
mov
push
shll
sbb
cmpsb
push
arpl
add
imul
mov
loopne
fs
add
or
imul
mov
push
sub
xor
jno
fadds
fisttps
push
shl
mov
cmp
dec
mov
mov
dec
les
adc
add
xchg
fs
mov
imul
mov
or
les
jae
sbb
lods
xor
subl
push
xchg
out
jnp
xchg
je,pt
jg
add
push
sbbl
loop
add
lret
data16
paddw
shlb
fsubs
rclb
jbe
pop
adc
fs
adc
sbb
movsl
push
ja
testl
rcrb
mov
je
pop
jno
mov
das
mov
sub
movb
mov
mov
pop
lods
lock
fiadds
repz
insb
jecxz
mov
push
outsl
adc
cs
inc
add
or
jle
pop
jb
orb
inc
jo
add
xor
sbb
shlb
aad
adc
add
jg
mov
add
cmp
add
outsl
mov
or
push
add
jne
or
pop
and
add
in
movsb
test
push
add
and
mov
mov
mov
cmp
mov
in
jns
insb
pushf
xchg
ja
pop
xor
sbb
test
or
lret
add
cmpsl
cmc
sbb
repz
inc
pop
out
mov
int3
stos
mov
ficompl
movsl
insb
cmp
push
subb
jns
repz
ffree
mov
lods
xchg
cmp
cld
add
sub
inc
loop
clc
push
test
mov
mov
psubw
jle
int
push
dec
adc
call
xor
pop
mov
aad
out
movsl
add
mov
test
push
out
cmpsb
dec
stos
or
sbb
sti
and
lods
adc
mov
push
test
fbld
pop
add
movsl
std
out
ljmp
or
push
mov
jg
mov
faddl
add
movsb
jae
lods
dec
lods
mov
xor
cmc
pop
mov
shl
adc
push
inc
mov
mov
out
imul
movb
mov
cli
in
movsl
loopne
pop
add
jno,pt
add
fcomps
jbe
add
or
mov
add
call
rolb
cs
xlat
lret
pop
jo
shlb
mov
mov
pop
or
add
jne
add
bound
in
xchg
or
xchg
add
jns
add
xor
mov
sub
scas
rcr
hlt
push
pop
imul
outsl
in
and
push
adc
and
xor
add
sarl
aaa
xor
cmpb
sub
fnsave
inc
out
dec
dec
add
push
and
add
and
adc
pop
mov
xor
sub
jae
and
outsb
pop
jnp
jg
rolb
or
jmp
psllw
push
ret
into
push
addl
das
xorb
sbb
gs
jo
sub
sbb
xchg
cltd
sarl
dec
test
roll
add
stc
cmp
rolb
iret
and
aam
and
fsubrs
dec
or
mov
pushf
xor
hlt
outsl
push
mov
test
inc
clc
mov
scas
push
jle
or
adcl
call
xchg
int
rcl
push
push
cmp
mov
cmp
add
mov
and
pusha
add
bound
ret
xor
adc
aas
sbbl
push
mov
mov
mov
lock
push
subb
mov
add
idivb
jge
xchg
mov
ja
mov
push
lock
pusha
mov
movsb
xor
pop
adcb
repz
andl
fimull
mov
pop
fs
cli
and
test
xor
mov
addr16
mov
inc
adc
es
add
lea
popf
sub
data16
jne
sub
add
pop
adc
xchg
js
cmpsl
sbb
add
sbb
aas
pop
sbb
repz
sbb
lods
test
cs
ja
add
and
js
fimull
out
addr16
movsl
mov
jbe
rorl
add
int3
jp
push
xchg
cmp
pusha
push
push
push
divb
pop
cli
roll
in
cli
pusha
dec
jle
pcmpeqw
xorb
lods
dec
add
jns
data16
pop
pusha
xorl
jmp
jns
popf
fwait
or
das
ja
jno
and
aas
jp
lods
mov
testl
mov
push
icebp
add
and
dec
fcomps
call
lods
push
popf
xor
pop
sub
sub
pop
mov
inc
dec
add
pushf
cmc
add
add
cmpsb
and
je
daa
xchg
rcr
fidivl
sbb
lret
jl
inc
fwait
mov
mov
stos
and
add
pop
mov
xchg
repz
outsb
fsubr
punpckldq
fcoml
test
fidivrl
pop
pop
and
mov
add
cwtl
sub
cmp
daa
mov
cmp
cmp
cmp
jl
add
add
sub
adc
fisttps
dec
scas
dec
adc
pushf
lea
ljmp
lret
cs
sahf
push
test
pop
jge
incb
aas
jmp
pop
cmpsl
add
imul
stos
mov
xchg
sbb
ret
sub
shll
pop
cmp
and
repz
inc
hlt
hlt
add
adc
in
roll
popa
lahf
js
lcall
popf
shll
and
pushf
push
jmp
push
mov
push
and
mov
adc
inc
clc
int
insb
cmp
and
test
mov
push
sub
fstpt
adc
lret
das
sub
test
test
nop
push
sbbb
int3
sbb
lds
add
ds
add
outsb
jle
xchg
cld
hlt
dec
xchg
out
xchg
add
xor
insl
mov
push
js
inc
shlb
mov
add
enter
pop
mov
jnp
push
je
bound
negb
add
fnsave
movsl
and
in
lahf
sbb
add
hlt
xchg
jecxz
jno
add
pop
mov
roll
sub
xchg
test
xchg
sbb
test
jnp
sbbl
lcall
dec
pcmpgtb
push
loopne
dec
sbb
lcall
pop
stc
divb
hlt
or
pop
imul
adc
repz
add
or
ret
movsb
stos
pop
push
add
dec
pusha
imulb
add
aad
je
add
test
or
mov
addl
insb
mov
loopne
jbe
std
in
xor
lcall
or
jo
fwait
add
aad
inc
fistpl
add
inc
in
insl
push
and
call
aaa
ret
push
andb
pop
sbb
test
pop
xor
cmp
sub
jmp
inc
add
cmp
sub
or
sbb
fisubs
pop
daa
cmp
cs
cmp
in
std
xchg
nop
mov
bound
xchg
mov
test
xor
int3
ret
lea
pusha
enter
cmp
aad
je
inc
inc
push
data16
ljmp
jmp
and
fidivrs
outsb
add
mov
nop
rolb
add
dec
movsl
push
rorl
lret
mov
les
call
mov
orl
mov
push
cmp
cli
mov
sbb
bound
add
jl
add
sahf
mov
adc
aas
xchg
add
fadd
cmp
test
pop
or
mov
jno
xor
test
orb
mov
stos
and
push
inc
sub
ret
pop
lahf
es
data16
add
xchg
mov
inc
add
iret
lds
lods
sbb
sub
inc
loopne
ss
jo
lret
add
fiaddl
cmp
add
orb
sbb
jmp
enter
cmpsb
movb
or
clc
call
lcall
jle
adc
dec
aas
repnz
pop
push
gs
push
jo
lcall
cmp
negl
ficoms
cltd
push
dec
inc
jle
mov
lea
iret
mov
add
mov
lret
push
std
inc
es
shl
mov
cmpb
stos
sub
sbb
testl
lahf
inc
xor
sbb
adc
testl
rolb
jmp
and
pop
fldenvs
lret
icebp
push
test
sub
data16
mov
xor
hlt
push
add
fisttpl
or
or
pop
xor
js
add
loopne
mov
jae
paddd
mov
xlat
les
aad
faddl
add
inc
dec
cmc
int
das
add
fisubl
add
jp
fwait
ds
int3
iret
mov
es
notb
xor
pushf
out
gs
add
mov
inc
pop
jne
testl
in
roll
orb
xor
push
call
add
mov
pmaxub
fdivrs
dec
jne
add
arpl
aad
push
add
adc
mov
mov
pop
rcr
mov
ss
mov
push
scas
leave
adc
adc
pusha
mov
call
sbb
or
popf
fiadds
call
mov
out
shll
pop
sub
add
in
gs
fwait
sbb
mov
or
cmpsl
ss
testb
sbb
jmp
sbb
aas
outsl
inc
xor
add
lret
mov
push
mov
fsubrl
mov
add
add
xor
cmpsb
sub
gs
jbe
ret
push
stc
mov
popa
sbb
sbb
pop
mov
jge
xor
jmp
inc
push
inc
add
xor
cmc
pop
or
test
sti
pop
data16
jo
mov
or
stc
and
movsb
jmp
sub
push
test
lock
inc
leave
call
and
fldcw
jle
sbb
add
das
repnz
mov
pop
jp
roll
sahf
in
push
int
jo
fdiv
out
pop
cmc
std
f2xm1
in
xchg
aas
loope
and
mov
lea
mov
dec
in
xchg
dec
jns
or
xor
or
mov
add
fbld
mov
stos
mov
dec
repz
mov
mov
pusha
and
mov
add
jae
pop
or
mov
je
add
sbb
filds
call
add
clc
xchg
and
add
lods
or
loopne
xor
push
sbb
cmpsl
les
call
cmp
adc
shlb
sub
outsl
pop
mov
jns
cwtl
popa
dec
jo
cwtl
test
mov
sub
addr16
lahf
call
xor
lret
aad
and
pop
add
std
ret
or
lahf
data16
or
push
addl
add
xor
les
or
add
xchg
ret
and
fs
dec
inc
sbb
mov
clc
lock
mov
adc
test
mov
pop
js
enter
mov
and
pop
hlt
dec
mov
add
mov
test
cs
ljmp
xor
sbbb
stc
filds
cmpsb
xchg
subps
lahf
inc
mov
push
mov
insl
sub
and
out
clc
jg
jl
lock
or
xchg
add
call
ds
aaa
fsubr
loopne
in
add
mov
nop
inc
lock
xchg
into
es
in
adc
push
xchg
lds
nop
scas
add
ret
pop
pop
iret
xor
or
add
sub
gs
mov
xchg
jl
std
add
loope
or
fdivrs
add
insl
dec
xchg
daa
adc
add
push
jbe
add
mov
or
scas
jnp
push
shll
xor
xorl
xchg
outsb
sarb
cli
pop
mov
jae
sbb
mov
adc
mov
jecxz
fadds
cmp
rcl
mov
mov
sbb
or
sub
sbb
jo
mov
mov
add
pushf
and
pop
add
fsub
mov
sub
mov
imul
scas
xchg
xor
push
ds
add
dec
dec
lcall
mov
inc
xchg
ret
imul
pop
aad
and
xchg
xchg
test
dec
jae
sbb
jg
sti
bnd
repz
add
mov
mov
pop
movsl
popa
rclb
and
inc
xchg
xor
add
add
push
mov
sub
pusha
push
pop
call
sbb
insl
aaa
je
shl
sbb
sti
imul
jnp
cld
add
movsb
subb
or
adc
mov
lret
pop
pop
int
insb
inc
dec
andl
jg
stos
inc
and
call
push
xchg
fdivl
add
mov
dec
add
cld
daa
dec
and
movsl
cli
add
pop
addr16
jno
mov
sbb
ret
cli
mov
in
mov
dec
push
nop
icebp
add
outsb
jnp
and
mov
adc
fs
mov
push
xchg
sahf
test
mov
repnz
adc
cmp
add
inc
pop
mov
dec
push
mov
out
dec
out
or
repz
fadds
popf
sahf
rorb
add
cmp
pop
movsb
xchg
and
cli
fwait
stos
cs
xchg
incl
xlat
pop
clc
inc
faddl
in
add
fwait
xor
lods
les
add
lcall
mov
roll
mov
xchg
sbb
add
sbb
jb
mov
les
adc
add
sahf
inc
and
xor
ret
fmull
sub
or
lock
or
loop
sti
adc
sbb
jge
push
mov
hlt
pop
repz
adc
cmp
inc
test
inc
add
nop
pushf
or
xor
mov
push
sahf
push
and
jp
add
andl
mov
cmc
xchg
push
lret
adc
or
push
pop
sbb
jle
pop
fisubs
mov
cmc
add
or
sbb
inc
xorb
sbb
jns
push
adc
dec
outsb
aas
xor
ret
popf
not
mov
add
rcl
cmpsb
add
jp
add
and
add
repz
mov
add
push
add
or
xchg
add
subl
push
mov
hlt
mov
cmp
pop
mov
xchg
sarb
sbb
cmp
sbb
sub
cmpsl
mov
movq
imul
pop
dec
jns
add
lret
loope
xlat
addb
add
popa
cmp
jne
push
cmp
cmp
adc
adc
jb
or
fisubrs
stc
cld
js
ljmp
push
inc
xchg
out
repz
mov
jle
push
aas
insb
mov
or
repz
add
test
mov
add
mov
xchg
repnz
adc
inc
mov
jge
sbb
sbb
dec
imul
jo
mov
xor
cwtl
sarb
cmc
lcall
push
xor
jmp
shlw
gs
add
mov
jo
add
and
sub
xchg
popl
mov
add
pop
out
add
fisubl
in
xlat
dec
adc
lret
and
loop
dec
add
push
and
jl
and
mov
fcomip
push
cmp
mov
outsl
repnz
pop
add
pop
mov
add
scas
vmovaps
cmp
mov
add
adc
int
inc
outsl
montmul
cmpsb
xor
and
cmpsl
jmp
cwtl
imul
orl
loop
sbb
test
stos
sub
cmpsb
jnp
add
clc
dec
insb
xor
das
push
ror
subb
push
bsf
aaa
outsb
aad
adc
test
jle
icebp
inc
push
or
sbb
jecxz
mov
push
in
push
add
xor
dec
jne
push
push
mov
mov
aam
add
push
add
xor
loop
pop
push
jmp
subb
lret
dec
ja
add
push
and
or
sub
mov
sub
add
loopne
out
lret
daa
roll
pusha
imul
lods
jecxz
mov
mov
cmp
rorb
add
dec
adc
fstpt
mov
cwtl
stos
pop
mov
xchg
mov
mov
rorb
push
jno
add
dec
std
pusha
dec
fisttps
add
insl
xor
insb
add
mov
mov
lock
pop
cmp
xchg
jne
loope
js
inc
rcrb
sub
mov
dec
movsl
inc
add
xor
mov
ret
add
add
roll
mov
into
pop
add
mov
mov
stc
data16
cmp
xor
lret
psrld
lahf
add
add
fsubs
add
rclb
cmpsb
add
imul
cmp
fcoml
pop
in
gs
in
loopne
test
leave
in
stc
xchg
mov
cmp
xorb
add
mov
sub
lret
pusha
adc
mov
jg
add
lret
and
call
out
nop
inc
and
lods
test
movsb
es
inc
push
adc
add
pushf
mov
sub
in
into
add
lds
add
jl
in
shl
scas
add
pop
add
xor
arpl
jle
sbb
push
or
dec
cwtl
xchg
btc
push
pushf
aaa
cli
loopne
mov
pop
mov
addl
cmpsb
jno
sub
je
add
mov
xor
pop
add
mulb
and
test
cmc
adc
inc
pop
push
popw
xor
outsb
add
pop
sbb
out
add
sub
jae
cli
repnz
adc
push
outsl
pop
fcmovu
mov
xorb
dec
insb
pusha
fs
fldl
xchg
sbb
in
js
mov
sahf
clc
dec
inc
rclb
or
lret
or
cs
data16
rorb
je
repnz
lods
es
lret
and
ret
ret
jno
push
popf
repz
inc
orl
mov
cmp
imul
mov
lahf
mov
je
pop
and
insl
notb
dec
pusha
popf
cli
add
mov
xchg
add
push
xor
pop
jmp
add
pop
loope
add
push
xor
roll
adc
cli
nop
test
aad
inc
out
xor
jae
add
add
jbe
add
hlt
mov
inc
into
inc
dec
add
in
inc
xor
sbb
in
dec
adc
cmc
or
push
in
and
out
push
add
xor
and
mov
and
shrb
sbb
test
xor
fiadds
sbb
mov
and
popf
mov
stos
jbe
popl
adc
and
inc
je
sub
mov
sbb
out
add
xchg
es
xor
aam
adc
mov
or
sub
mov
cmp
outsl
push
outsb
or
and
nop
mov
sahf
je
mov
add
cmp
xor
add
sub
cwtl
idivb
aas
loopne
add
mov
or
test
xlat
inc
add
orl
mov
pop
ret
mov
lret
cmp
outsb
cmc
mov
testl
mov
cs
push
pop
and
clc
sbb
ja
pop
mov
movl
pushf
test
adcl
pop
add
iret
push
shlb
add
test
add
lahf
xor
cmp
add
add
inc
jbe
add
adc
jg
inc
mov
sahf
pop
std
sbbb
pop
jo
dec
jnp
add
fdivrs
adc
cmpsl
jl
mov
loope
imul
outsl
rolb
inc
xor
pushf
or
xor
shl
mov
inc
or
xor
xchg
add
jp
loopne
sbb
jno
fstpt
lock
dec
call
lods
add
gs
cs
add
dec
or
adc
js
xchg
enter
dec
movsb
aas
mov
lds
mov
pop
inc
xchg
sbb
dec
sysenter
jp
dec
shl
jne
test
dec
inc
aas
fdivrp
add
mov
dec
add
sbb
mov
add
xor
daa
pusha
loopne
xchg
mov
xchg
dec
pop
or
sbb
push
add
pop
pop
ja
push
xchg
mov
in
rorb
add
lock
pop
arpl
cwtl
add
fbstp
xchg
cmp
imul
push
ret
or
fiaddl
jo
add
repz
add
dec
mov
mov
pop
mov
pop
lret
sbb
mov
and
movb
and
add
test
add
cmpsb
scas
xor
iret
xchg
add
push
cmp
int
add
adc
leave
mov
add
mov
inc
out
pop
enter
movsl
push
std
mov
mov
addr16
sbb
pop
push
subl
lock
xchg
add
jnp
pop
push
out
sarl
add
outsb
pop
int
jne
push
ret
inc
jo
fidivs
push
add
hlt
adc
inc
and
fldl
cli
xchg
cmp
icebp
sbb
lret
dec
lea
mov
loopne
xchg
dec
jmp
jae
jg
push
fadds
cmp
in
arpl
jnp
or
xchg
pop
add
ret
subb
ret
adc
fcomp
cmc
dec
mov
aaa
jp
loope
fnstcw
lret
std
je
add
and
int
add
aaa
pop
pop
jecxz
mov
adc
cmpsl
mov
neg
bound
repnz
push
push
adc
sbbb
rolb
nop
sahf
lahf
daa
movsb
orb
dec
enter
add
pusha
xor
addr16
add
push
orb
sub
shll
add
out
xor
adcb
add
ret
jns
movsb
std
lret
adc
in
cmovs
rcrb
imul
dec
popf
add
sub
ret
sub
adc
call
cmpsb
mov
cs
daa
pop
dec
cwtl
jp
loope
shlb
inc
fdivrl
push
xchg
sbb
fs
imul
loope
clc
xlat
pushf
pop
jg
mov
mov
mov
insl
fildl
push
stos
flds
lods
jle
sub
scas
out
fcompl
loop
popa
and
dec
leave
xor
outsl
sarb
mov
add
cmp
sbb
and
xor
mov
movl
ds
mov
xor
mov
hlt
pusha
lret
rorb
fsubrs
popa
das
inc
and
ret
xchg
data16
mov
imul
dec
sub
cmp
push
cmp
ficoml
adc
dec
pusha
sbb
mov
xchg
and
loop
int3
push
in
fbld
movsl
push
nop
mov
lea
xor
in
roll
xor
ljmp
add
or
out
outsb
push
shlb
insb
fldt
cmp
add
sub
jo
xor
in
mov
push
rorb
fwait
add
out
cmp
adc
sub
ret
int3
sub
inc
add
lss
pop
in
dec
add
rcr
cmp
mov
loop
scas
fwait
cmc
xchg
dec
rcr
in
iret
add
inc
push
fwait
add
leave
mov
jg
ds
roll
mov
fwait
nop
jecxz
insb
bound
and
sbbb
cmp
mov
xchg
add
lcall
nop
jl
push
enter
sbbl
xchg
fdivl
ret
jnp
rol
addb
loope
lea
sbb
fsubs
jns
xor
sbb
inc
cwtl
sarb
sahf
ret
mov
jb
mov
sub
push
insb
add
cmp
clc
xchg
stos
add
sti
sbb
inc
mov
fldenv
push
mov
jno
lds
into
lret
ljmp
fxch
loopne
loope
sbb
or
add
adc
add
or
popa
jb
dec
adc
and
mov
mov
sbb
jle
mov
xchg
or
pop
pop
dec
test
push
dec
add
fisubs
jge
scas
stos
mov
loop
outsb
ljmp
inc
aaa
dec
mov
add
jb
add
sub
and
inc
add
aad
popl
add
dec
arpl
add
sbb
dec
stc
mov
adc
lods
int3
rcll
sbb
mov
std
adc
push
cmpsl
add
dec
movsb
fwait
pop
push
dec
sarl
repz
pop
lds
add
scas
mov
or
cld
adc
push
push
aaa
dec
xor
sahf
in
cmp
icebp
pop
add
repz
add
and
call
insl
cwtl
mov
dec
sub
add
mov
xchg
mov
icebp
loop
lret
pop
xchg
pop
mov
xor
imul
cli
add
in
lret
or
in
ds
mov
outsb
or
leave
xor
jle
fucom
dec
rcrb
call
xchg
enter
les
mov
cli
cltd
jbe
data16
cmp
cmp
add
or
sbb
daa
frstor
jno
push
mov
or
add
cmc
jae
neg
pop
outsb
add
push
or
add
mov
add
and
shll
rolb
loope
add
and
mov
ss
pop
shl
rcll
inc
xchg
aam
sti
mov
test
shlb
xchg
add
in
popl
int3
fnstsw
fiadds
int
movsb
jnp
add
lock
sbb
lahf
xor
movl
add
cmpsb
and
push
jno
or
xlat
cmp
sarb
repnz
leave
inc
sbb
xchg
popa
jge
mov
ret
outsb
repz
cwtl
mov
pop
add
imul
rclb
fsubp
push
cmp
frstor
dec
lcall
mov
jo
pop
add
and
popf
shrb
int
test
insl
add
sub
add
js
lret
movsl
add
pop
ljmp
add
xchg
int3
push
popa
cmp
je
xchg
fsts
pop
ret
add
test
dec
fstl
sbb
pop
mov
sbb
daa
add
cs
and
lcall
xor
pop
fstpl
push
add
flds
mov
and
mov
mov
jns
pop
dec
pop
jno
cmp
mov
addl
jge
js
add
dec
sar
mov
cmp
lret
add
or
test
jae
jb
adc
mov
js
add
packuswb
add
and
add
mov
in
add
out
mov
push
movsl
lds
rorb
sbb
fadds
cmp
sub
xchg
push
add
lds
jp
sarl
adc
pusha
rcrb
jmp
cmpsb
scas
add
jo
into
out
dec
out
add
push
insl
in
rcll
add
sub
pop
jmp
push
cmpb
frstor
dec
roll
or
jae
xchg
xchg
add
push
add
adc
inc
into
add
lret
cmp
push
aaa
rorl
test
out
rolb
scas
aas
push
fiaddl
pop
or
push
testl
cmpsb
lods
or
aaa
fildl
adc
rolb
and
scas
add
sbb
stos
adc
cmp
hlt
mov
mov
in
loopne
cmp
pop
pop
test
mov
sbb
add
adc
ja
add
push
add
fmuls
leave
popf
outsl
mov
cmp
and
incb
add
push
jnp
xorl
pop
and
mov
inc
xor
aam
or
jb
adc
cmpsb
inc
sbb
add
insl
cmp
aam
pop
mov
in
popa
sub
lods
or
iret
fucomip
stc
js
adc
stos
pop
ret
pusha
and
sub
adc
jne
cwtl
sbb
loopne
mov
jle
inc
pop
lcall
lret
push
adc
jns
push
mov
lret
mov
pop
out
int
lock
mov
leave
or
pop
add
movsb
xorl
sub
call
mov
inc
mov
push
addl
dec
pop
fsqrt
push
and
sahf
dec
add
ret
push
add
loop
jecxz
sub
inc
fcoms
mov
xchg
add
xchg
in
xorb
dec
push
and
xor
mov
test
arpl
outsl
add
xchg
xor
push
jno
add
shrl
sub
popf
sbb
add
inc
jbe
add
cmp
pop
xchg
ss
cmc
test
add
scas
sub
sbb
out
shll
adc
test
aad
or
push
int
inc
ud0
out
mov
lods
negb
cli
mov
jge
fcoml
insb
push
fstl
jae
sbb
mov
mov
add
je
pop
daa
pop
test
sbbl
add
fildl
xchg
lock
notl
aas
inc
jo
jecxz
ja
pop
xor
cmc
shlb
pop
in
mov
jmp
mov
rclb
pop
dec
sbb
add
or
push
xchg
and
add
sub
push
or
xchg
and
lods
adc
insl
cmpsb
lods
cltd
inc
rolb
mov
fidivl
jp
rorb
sbb
and
aaa
stc
and
add
jno
lods
sbb
sbbl
ds
jge
cmp
pop
fadd
mov
roll
sub
fstl
pop
add
cmp
cmp
inc
lahf
aam
aaa
mov
dec
adc
mov
add
into
int
jp
cmp
leave
shr
adc
dec
and
jno
rcrb
and
test
sbb
lret
add
mov
push
leave
std
aam
stos
add
test
stos
sbb
pop
mov
add
gs
jmp
push
bound
lock
jno
cmp
or
sbb
cmp
pusha
hlt
rcrb
add
in
das
push
popa
test
add
cltd
into
cmp
shrb
movsl
add
mov
nop
adc
sgdtl
mov
sbb
ja
push
mov
outsb
or
mov
lock
sbb
fwait
mov
jl
add
fs
xlat
adc
or
fcompl
adcb
jecxz
and
ss
pop
movsl
add
push
cmp
std
sbb
lock
add
sbb
jno
sbb
mov
out
mov
add
dec
lds
shl
loopne
xor
cs
xchg
push
and
popf
jmp
push
nop
sbb
jne
lock
aas
mov
cmp
inc
dec
cs
mov
mov
mov
test
mov
inc
jl
dec
xchg
mov
ss
xor
leave
inc
cmp
es
divl
loop
adc
push
ret
jmp
lahf
pop
mov
in
xlat
add
xchg
jp
add
mov
out
mov
and
push
daa
fwait
leave
push
xchg
fisubrl
cmpb
pop
xchg
add
es
mov
fldl
cs
push
sub
add
scas
xchg
pop
cmc
lahf
movl
mov
loopne
lret
push
sbb
pop
and
aaa
add
ja
addr16
xor
cmp
mov
cmp
cld
sub
inc
xchg
loopne
lcall
aas
pusha
in
ret
repnz
adc
dec
pushf
fildl
add
andb
mov
add
in
add
add
xchg
xor
sub
nop
mov
add
loopne
mov
mov
adc
dec
int3
add
lods
fwait
or
cwtl
push
lods
out
fs
and
mov
add
inc
pop
pop
mov
jp
pop
inc
jle
fldl
xor
out
andb
xchg
mov
xor
jno
std
jb
cmovl
xchg
lcall
sub
in
add
jbe
dec
scas
cmpsl
orb
mov
loop
xor
mov
pusha
adc
stos
into
fbld
push
test
and
ja
or
dec
ret
mov
insb
sub
loopne
add
andb
lret
nop
fmull
push
or
outsb
shrb
cmp
subb
mov
add
arpl
in
cmpsl
fidivrs
mov
adc
pop
dec
andb
cmp
or
cmpsb
or
gs
clc
or
xor
mov
add
sub
mov
jl
sbb
lret
inc
mov
mov
mov
gs
andb
pop
cmp
jbe
add
sahf
sbb
sbbb
std
push
daa
and
out
sub
bound
pusha
jle
mov
jb
jp
idivb
add
pop
sub
jmp
scas
add
dec
insl
les
add
test
inc
outsb
inc
mov
cwtl
jo
pusha
dec
sbb
add
jnp
movsl
xor
pop
sub
mov
xor
add
xor
shl
add
test
repz
or
movsb
int3
or
into
mov
inc
dec
or
pop
add
xchg
pushf
rorl
aam
std
mov
dec
xor
mov
je
stc
mov
push
cld
add
aad
inc
loop
leave
sbb
pop
lods
xchg
push
stos
mov
pop
add
adc
dec
push
add
out
rcl
add
iret
rcrb
push
mov
repz
stos
push
or
shr
int
fwait
adc
xor
in
addb
add
inc
sbb
push
subb
jp
int
jmp
dec
dec
and
mov
cmp
add
pusha
cwtl
mov
out
imul
pop
outsb
sub
ljmp
or
mov
sbb
cmp
or
xchg
stc
add
xchg
add
mov
in
out
add
push
outsl
inc
add
jge
xchg
add
gs
ja
adc
or
hlt
add
add
out
lret
add
add
and
or
add
les
mov
jns
sahf
add
popf
xchg
cltd
call
scas
cmp
aam
push
or
jns
hlt
jmp
lret
jo
sarl
jmp
add
repnz
sub
unpcklps
mov
jnp
xor
adc
call
add
pop
or
dec
insb
sbbl
adc
dec
add
scas
push
mov
loop
add
aam
pop
aad
add
add
sbb
cmpsl
jb
stos
inc
subb
imul
psrld
or
inc
and
cs
loope
cmp
add
insb
and
mov
arpl
rep
pop
jnp
mov
xchg
stc
ret
add
fstl
daa
in
mov
adc
mov
add
popf
cmpsl
or
and
sub
adc
js
add
push
add
shrb
cmp
cmp
mov
vmovlpd
fwait
outsl
sbbb
add
movsl
dec
shll
imul
icebp
jbe
add
loope
jno
fistpl
add
notb
add
mov
jle
add
inc
push
int3
add
out
std
roll
xchg
or
push
jmp
push
daa
int3
rolb
add
jae
add
mov
ret
adc
jne
add
adc
fildl
jae
sahf
int3
pop
pop
addr16
dec
inc
cmp
jge
dec
pop
pop
inc
pop
dec
push
xchg
aas
xor
push
je
andb
mov
sub
mov
jb
sub
jnp
shll
rorl
ret
pushf
leave
jbe
in
inc
sbb
js
add
cs
enter
and
idivl
lcall
xchg
add
fnstenv
stos
pop
or
jl
xor
mov
push
ret
push
add
xchg
and
cmpsb
pop
das
push
add
mov
cmp
mov
mov
adc
sub
les
sbb
add
add
cmpb
add
insl
mov
push
add
idivl
inc
xchg
inc
mov
lds
in
imulb
mov
sbb
and
jns
jle
pop
mov
xorl
or
sub
xlat
mov
pop
lcall
scas
jmp
jmp
xor
jne
jae
cwtl
les
pop
outsb
subb
aad
into
inc
lret
push
dec
jg
cli
fstpl
cmp
daa
add
loope
fs
cmp
fists
pop
sbb
popl
xor
ret
add
cmp
shl
loopne
push
add
out
fs
test
dec
cmpsb
add
scas
xchg
mov
lds
inc
adc
shl
adc
xchg
fimull
add
into
mov
xor
adc
add
push
ficoms
dec
jg
add
hlt
jne
lret
addl
inc
cmp
cwtl
add
je
dec
push
add
adc
add
add
sbb
sbb
mov
push
in
les
int
mov
out
lret
into
pop
pop
aam
cli
cmp
add
adc
scas
subl
fmul
test
lods
loope
inc
jl
dec
push
mov
mov
xchg
fmul
push
and
lods
les
arpl
lods
orl
sub
scas
xchg
add
dec
adc
add
lods
cmp
lock
popa
sti
dec
cmp
pusha
ficoms
enter
adc
pop
out
dec
and
inc
and
add
add
loope
add
lahf
adc
cmp
add
imul
jg
add
cwtl
pop
test
add
cmp
mov
dec
sbb
std
xlat
sub
jne
pop
subb
call
inc
add
inc
shl
xchg
pop
sbb
andl
mov
jle
dec
xorb
and
loopne
xor
sbb
or
and
and
mov
add
mov
jnp
add
out
and
fcomip
add
cmpl
push
sub
and
add
jge
roll
dec
jecxz
jl
add
xchg
push
gs
cwtl
cmpsb
pop
sti
add
xorb
add
xchg
push
sbb
into
outsl
js
dec
or
adc
xor
lret
mov
addb
sub
and
sbb
imul
fisttps
mov
mov
mov
cmpsb
or
add
sbb
out
cmpl
std
subb
xchg
cmp
xchg
ja
fldenv
adc
sarl
push
add
pop
cmp
cmp
insl
pop
out
lcall
jns
dec
sbbb
test
push
cmp
loopne
aaa
add
pop
adc
lea
add
test
out
jl
add
inc
push
shll
or
dec
addl
add
mov
sti
add
pop
test
jmp
enter
add
xlat
fprem
cmc
add
fisubrl
xor
and
mov
jecxz
push
push
pop
push
push
std
out
test
add
sbb
adcl
jmp
add
jns
push
negb
mov
loop
add
xchg
dec
mov
sbb
push
lods
inc
adcb
mov
out
mov
mov
mov
lret
in
lock
sti
into
shlb
test
adc
addr16
pop
andb
cli
cltd
bound
sti
inc
push
in
daa
je
push
ja
lods
push
add
sub
jecxz
add
jbe
mov
idiv
loope
aaa
cmp
scas
mov
mov
add
pop
insl
add
mov
jb
inc
pop
dec
std
add
add
xchg
cmp
add
inc
lret
push
push
sbb
sbb
setne
add
les
fldt
aas
add
or
cmp
pop
push
mov
jbe
pop
mov
push
movsb
xor
push
sbb
xor
adc
test
add
ror
bnd
cmp
jne
neg
jno
pop
sub
and
dec
add
fs
aad
cmc
pop
adc
xchg
mov
xor
ljmp
cmp
jo
lods
mov
adc
je
sbbl
sbb
mov
es
jmp
mov
sub
in
add
dec
mov
push
sahf
int
add
push
std
xchg
adc
fdivl
divl
add
sub
adc
roll
sbb
adc
lods
test
not
mov
push
xor
adc
sarl
faddl
call
xchg
sub
ja
lea
pop
sbb
shll
xchg
inc
add
cmc
icebp
jecxz
add
pop
nop
int3
filds
or
jb
fstpl
adc
add
in
jp
pusha
es
imul
sti
cltd
mov
js
pop
dec
jp
add
or
xlat
inc
scas
pop
add
sbb
lcall
loope
lods
jl
add
into
dec
ds
add
dec
pop
sub
lea
cmc
aad
add
lods
clc
test
adc
in
pusha
xor
add
scas
test
jp
xor
enter
add
dec
push
scas
lahf
pop
inc
and
jne
mov
test
cmp
loope
js
sbb
mov
aas
jge
popf
sti
popa
lcall
jp
cwtl
inc
add
mov
movsb
pop
inc
test
aad
cmp
andb
popa
jecxz
gs
icebp
ja
add
lock
pop
jge
or
scas
into
pop
mov
add
in
andb
leave
push
clc
xchg
pop
sub
jmp
pushl
push
dec
xchg
cbtw
inc
sbbl
stos
int3
add
insl
daa
loopne
inc
add
scas
mov
mov
pop
shrl
add
sti
mov
or
les
bound
sub
mov
mov
inc
jns
xchg
sub
pop
push
adc
inc
xor
cmp
xor
jmp
add
mov
ja
add
incb
js
jmp
fs
add
ficomps
sub
pop
inc
sbb
orb
or
add
cmp
int
mov
cli
mov
xor
add
jmp
cmp
pop
mov
push
loope
add
cltd
ret
sub
mov
adc
add
or
rcrl
mov
stos
js
pusha
jo
test
popf
xchg
repnz
ds
rorl
push
lss
add
rclb
sahf
and
add
push
mov
int3
cmc
jb
inc
orl
scas
adc
int
mov
fiadds
mov
or
mov
xchg
pop
xchg
or
outsb
add
sbb
add
fs
mov
add
hlt
cmp
addl
mov
lods
dec
add
push
iret
adc
push
pop
scas
add
test
or
cli
dec
sbb
cmp
hlt
mov
or
repnz
dec
sub
in
ret
mov
add
sub
roll
dec
add
into
imul
sti
jecxz
call
add
adc
jbe
repz
pop
flds
push
test
dec
cli
xor
and
pop
add
push
push
lret
cmc
mov
dec
or
add
push
pusha
inc
dec
add
pop
jp
or
add
int
je
mov
xor
movsl
push
jmp
loop
jo
ljmp
cmp
call
add
mov
xor
lods
test
cmc
imul
inc
mov
pop
lea
ficoms
faddl
data16
push
das
add
xor
mov
icebp
xchg
cmc
repz
ret
stos
outsl
cltd
leave
mov
push
push
jno
loop
add
push
xor
add
mov
push
pushf
lret
xor
mov
int
inc
cwtl
scas
jp
add
push
lcall
bound
repz
out
rolb
mov
jo
fidivrl
push
jne
add
pop
push
jmp
add
cmpsl
dec
cld
xchg
mov
jmp
mov
stos
fmuls
es
cli
ja
enter
add
std
push
repnz
cmp
add
in
ss
ljmp
dec
movsl
mov
cli
test
mov
dec
in
adc
push
xor
mov
xchg
jne
pop
outsl
es
pop
nop
mov
add
addr16
fsubr
jb
loop
add
mov
rcpps
pop
ret
and
fldcw
pop
xchg
pop
shrb
psadbw
pop
add
or
adc
sub
mov
jge
push
int3
gs
icebp
cmc
jns
jb
ljmp
stc
push
inc
stos
adc
inc
cmp
test
ja
adcb
out
jbe
push
mov
or
sub
or
fcomps
das
add
jge
int
leave
cwtl
and
faddp
jmp
and
imul
sub
push
xor
add
xor
movl
add
insl
addb
dec
lahf
testb
into
fs
nop
les
pop
xor
dec
mov
xchg
mov
in
je
push
adc
xor
or
mov
repz
xchg
or
aaa
mov
pop
stc
je
loope
fildl
scas
stos
add
sub
mov
jecxz
mov
lock
add
rclb
cmpsb
mov
add
leave
or
xlat
xchg
fimull
mov
dec
andb
sbb
mov
shlb
in
aaa
sub
cmp
or
loopne
insb
testb
add
ret
xchg
adc
ja
jno
pop
mov
add
xchg
jmp
insb
cwtl
add
xchg
out
lret
cld
imul
mov
cwtl
popf
add
jmp
adc
add
or
pop
add
push
and
mov
add
jmp
inc
je
add
add
in
push
xor
and
mov
cli
xor
ret
add
lds
inc
imulb
mov
xchg
in
mov
pushf
inc
push
aam
adc
inc
mov
movsb
fsts
jecxz
ret
mov
inc
repnz
adc
add
mov
fnstenv
rcl
cmp
mov
and
sub
sar
mov
xor
push
adc
add
cmc
cmp
pop
cli
call
xchg
or
adc
ja
sub
cmp
sub
nop
in
add
imul
out
cmp
and
xchg
and
ja
mov
add
ljmp
jb
jecxz
dec
pop
add
adc
adc
rcr
and
inc
mov
popf
das
add
ja
pop
loop
sbb
test
movl
lods
adc
xor
loope
icebp
test
cli
mov
push
cs
or
loopne
add
xchg
test
xlat
jl
push
testl
inc
jno
add
pop
fwait
addb
rol
lret
sbb
and
sbb
jl
hlt
nop
dec
mov
mov
mov
dec
add
sbb
mov
in
fidivl
add
cmpsb
add
sarb
lret
jno
out
jae
dec
add
xchg
scas
ljmp
inc
aas
iret
cmpsl
inc
popa
mov
xor
adc
adc
push
add
jmp
add
callw
in
sub
mov
ss
imul
mov
push
pop
shrb
pusha
lods
sub
cli
jb
add
sub
add
pushf
adc
js
popf
adc
mov
jp
push
aad
ja
add
add
out
mov
add
stos
push
xchg
jb
lcall
cmp
out
add
push
jl
test
sub
xor
rol
push
clc
xchg
fs
lahf
aas
dec
cltd
jae
shlb
mov
pop
ret
outsl
clc
and
pop
stc
nop
rolb
add
ret
dec
add
in
scas
pop
and
cld
mov
icebp
mov
dec
or
arpl
adc
inc
add
or
inc
jo
xchg
sbb
ljmp
push
leave
mov
inc
push
jp
mov
add
ret
lret
sub
or
xchg
in
xchg
faddl
stc
out
sahf
push
jne
xchg
ret
scas
add
arpl
or
or
loope
add
push
inc
hlt
mov
sahf
push
mov
pop
pop
test
adc
bound
pop
xor
je
lods
mov
imul
les
ja
rorl
addb
push
mov
add
rcl
pop
repz
dec
sti
pop
jnp
sbb
cmp
or
mov
rolb
mov
popa
jno
and
sti
mov
jge
aas
xor
addb
and
adc
xchg
test
rcrb
add
ja
daa
xchg
and
in
add
fadds
add
adc
jl
scas
xchg
add
data16
adc
and
gs
or
ja
cmp
jl
sub
sbb
arpl
test
js
insb
mov
add
mov
or
sbb
mov
xor
add
fdivrl
shl
subb
xlat
add
addr16
xchg
xchg
roll
push
xor
subl
inc
repz
add
cltd
sbb
add
stos
pushf
push
push
sbb
ss
sarl
mov
inc
mov
addl
mov
gs
add
mov
sbb
adc
bnd
jp
cmp
js
loop
cltd
outsb
jg
add
jbe
movsl
ds
rclb
lret
jmp
xchg
mov
divb
adc
mov
pop
pop
dec
pop
lahf
rorb
inc
jo
jbe
in
or
sub
jb
sbb
jl
stc
dec
mov
jne
add
sarb
mov
sahf
cmp
popl
mov
sub
mov
adc
aad
popf
jne
fwait
push
sbb
adc
flds
mov
out
mov
jo
sub
or
in
aas
mov
add
adc
sub
sbb
add
lahf
enter
popf
fwait
dec
sbb
jnp
xor
sub
add
pop
lock
ficoml
add
js
push
dec
dec
inc
mov
insl
add
add
and
inc
cmpsb
sub
clc
sbb
jge
out
cwtl
cltd
add
in
jae
rcr
addb
fidivl
mov
mov
andl
and
jb
out
pop
mov
movsl
sbb
dec
adc
aam
loope
sub
cld
cltd
dec
shlb
clc
mov
add
xor
mov
test
inc
roll
out
pop
sbb
jecxz
push
push
gs
mov
add
push
insb
add
xchg
aas
adc
sub
lods
movsb
xchg
add
scas
dec
sub
push
cmp
jae
sarl
leave
shlb
rolb
aas
adc
xchg
repz
xchg
cmp
call
jp
lods
fiaddl
movsl
in
sbb
add
or
aam
mov
fnsave
loop
in
add
mov
repnz
pop
fstpt
dec
rcrb
rolb
fimuls
inc
loope
shlb
inc
add
outsb
insb
pop
ret
sub
fxch
rcrl
mov
cmp
ds
add
sbb
add
mov
xor
data16
or
and
test
jnp
out
xchg
sub
mov
add
add
sbbb
data16
sbb
imul
dec
aas
mov
add
jmp
lods
scas
jp
fldcw
subb
mov
add
mov
xchg
add
mov
adc
cmc
rorb
mov
pop
lea
sub
and
add
mov
int3
cli
add
mov
add
xchg
repnz
xchg
nop
cmp
movsb
add
push
dec
aam
cmp
push
jo
sub
add
orb
dec
out
cmpsl
add
ds
pop
xadd
push
sub
mov
push
ljmp
cmp
add
in
mov
pusha
lcall
mov
mov
add
or
int3
jne
add
sti
repnz
sbb
mulps
test
or
add
pop
jg
loopne
jle
add
es
xchg
pop
and
dec
add
adc
jge
add
xor
andps
or
gs
stc
pop
call
push
sub
add
cvttps2pi
ret
scas
inc
and
add
test
add
sbb
add
imul
in
test
pop
cmpsb
fbld
decl
lahf
dec
pop
jnp
pushf
movsl
push
test
out
or
ljmp
xchg
out
into
jl
addb
mov
add
pop
pop
lcall
popa
bound
pop
add
imul
daa
jp
mov
push
shl
loop
sbb
in
adc
jl
lds
push
jg
out
push
dec
shl
nop
and
out
push
xor
pushf
mov
dec
ds
pop
and
cmpsb
xor
pop
int3
push
es
inc
add
xchg
repnz
add
mov
aaa
add
repnz
inc
movsb
hlt
test
add
insl
mov
sbb
sarb
mov
enter
or
sbb
inc
mov
add
fwait
out
xor
add
fmul
xor
push
mov
lcall
pop
pop
lahf
sbb
popf
sub
pop
mov
cmp
test
xor
mov
in
sub
add
jno
leave
sub
sub
pop
data16
xchg
push
repz
adc
adc
push
rol
or
rcll
jbe
enter
jne
ret
mov
pop
mov
jecxz
outsl
shlb
mov
cmpl
repnz
or
ret
mov
ret
pop
loopne
add
mov
mov
dec
add
in
xchg
or
pop
xor
sbb
cmp
xchg
sbb
push
movsb
movsb
daa
push
push
divl
or
and
xorb
jmp
bound
inc
xchg
mov
cmp
add
sbbl
les
add
sbb
pop
push
mov
and
xor
pop
test
cmpsl
arpl
loop
cmp
sbb
mov
test
mov
test
insl
pop
sub
push
inc
cmp
xchg
sbb
cli
ss
sub
mov
addr16
arpl
jb
es
adc
xchg
pop
adcb
jecxz
enter
mov
nop
jnp
ds
mov
pop
push
mov
xchg
rolb
or
out
in
fcomps
mov
ret
outsl
xlat
mov
out
add
xor
mov
inc
add
shlb
xchg
leave
or
mov
cmpsb
enter
xchg
rolb
fisubrs
jg
push
lea
add
repnz
sbb
add
push
cwtl
sahf
sbb
dec
sub
sbb
sbb
mov
mov
mov
iret
sarl
add
jb
pop
adc
cmp
adc
jo
sahf
clc
mov
fidivl
push
dec
lock
scas
clc
outsl
lcall
mov
outsb
sbb
push
and
push
cld
rcrl
dec
loope
or
addb
fwait
and
cmp
in
fs
add
out
cltd
cmpsb
jb
mov
fistpll
add
sub
pop
cmp
jnp
inc
lods
stos
rorb
sub
mov
mov
xor
int3
int3
sbb
and
inc
mov
inc
fs
lock
inc
testb
mov
pmaxsw
sbbl
mov
add
or
out
pushl
pop
cmp
icebp
and
pop
ljmp
in
loop
jno
repnz
cmp
add
pushf
cli
mov
lock
lret
jg
cltd
movsb
stos
add
je
jge
cmp
jae
iret
sarl
jl
outsl
pop
imul
xchg
sbb
mov
andb
incl
sub
icebp
push
jge
cmpsb
popf
iret
clc
add
add
add
inc
xor
out
lret
bound
iret
into
pop
add
pop
sahf
icebp
mov
testl
mov
push
cld
push
repnz
pop
pusha
hlt
and
stc
jecxz
add
xchg
sbb
test
fwait
adc
scas
xorl
add
xor
lock
pop
jecxz
lods
xor
pop
sbb
int
dec
inc
push
leave
cmp
mov
sahf
add
aaa
inc
rol
mov
push
mov
nop
add
inc
dec
inc
push
movsl
xor
mov
xchg
sbb
push
lcall
add
pusha
push
or
cmp
lods
adc
roll
mov
dec
add
mov
mov
inc
loopne
icebp
mov
cmp
add
cmpsb
dec
push
lcall
fsubs
pusha
cmp
sbb
pop
stc
xchg
add
push
mov
add
icebp
jmp
pop
and
pop
ss
adc
cmpsl
xchg
cmp
push
shlb
mov
xchg
dec
nop
push
int3
add
xlat
mov
stos
dec
repz
push
add
aam
les
adcl
shlb
ret
or
and
shr
fadds
jp
stos
ja
mov
dec
call
cwtl
xchg
or
inc
adc
dec
add
rorl
scas
add
je
sbb
rcrb
test
ret
xor
rolb
daa
push
cmp
add
cwtl
push
scas
or
insl
xchg
aam
movsb
cmp
xor
jo
out
test
outsb
add
scas
fwait
loop
call
stc
in
add
das
xchg
pop
sub
ret
nop
and
fistpl
adc
lahf
pop
test
or
mov
or
add
cmp
sbb
les
or
push
fiadds
push
pop
js
jl
adc
push
xchg
add
push
adc
pop
mull
pop
jno
clc
cmp
aam
int
adc
in
shlb
inc
nop
jmp
subl
xchg
inc
loop
loope
sub
cmpsb
pop
lods
fisttpll
push
shl
add
into
push
add
clc
xor
lret
xchg
lods
nop
pusha
bound
inc
or
test
add
xor
pop
fs
add
push
mov
loopne,pn
mov
add
or
pop
scas
movl
rolb
inc
js
mov
sbb
lock
jg
addl
loop
setl
imul
imul
push
push
orb
ffree
add
inc
fimull
loopne
mov
add
mov
loop
and
sub
xor
adc
push
jbe
rcrb
pop
iret
add
cmp
fadds
xor
jmp
add
dec
ret
stos
insl
mov
sub
mov
or
test
jmp
jle
roll
xor
gs
adc
adc
data16
mov
add
xchg
out
jle
daa
pop
add
add
out
mov
adc
ss
jmp
xor
fsub
nop
addr16
addl
jp
subb
dec
neg
or
rolb
xlat
push
push
paddb
push
mov
sbb
sbb
mov
add
sub
add
jecxz
gs
mov
je
mov
sbb
sahf
pushf
add
not
add
shlb
in
mov
and
out
pop
inc
cmp
mov
incb
xlat
add
mov
mov
les
push
and
rclb
data16
mov
add
xor
scas
push
pop
lds
dec
out
jecxz
cli
and
add
xlat
outsb
lock
jb
pusha
mov
sbb
aam
enter
ljmp
aad
negb
stos
add
push
or
or
pop
pop
not
notb
outsl
in
ds
call
ror
mov
shlb
pop
inc
mov
add
inc
pop
push
call
mov
jbe
inc
pusha
push
adc
mov
mov
add
cmpl
xchg
adc
push
add
ds
in
mov
inc
or
add
cmp
add
push
and
and
fistl
dec
int
dec
lret
pop
fmull
add
pusha
cwtl
xlat
add
mov
xor
cmp
enter
enter
movl
inc
xorb
xchg
rcrb
and
sbb
outsl
add
ret
jno
iret
inc
fistpll
sub
push
int
mov
xor
add
dec
jae
lahf
dec
mov
add
negl
xchg
add
pop
sub
mov
arpl
loope
or
in
cmc
das
mov
mov
addl
mov
push
adc
sub
add
push
jns
xor
jp
movsl
add
out
test
mov
adc
push
mov
adc
push
cmp
fbld
push
pop
sbbb
pop
ret
xchg
mov
jns
sbb
in
add
jp
andl
adc
or
add
lods
and
aas
les
sbbl
mov
adc
out
or
lods
jmp
outsl
pop
lret
add
loopne
xor
and
mov
cli
out
ja
mov
bound
pop
add
xor
jmp
fwait
and
pop
pop
add
inc
shrl
and
lcall
mov
fildl
push
xchg
pushf
les
ss
push
enter
xchg
xor
fiaddl
and
js
push
popa
add
jg
lds
imul
sbb
xor
adc
add
mov
cs
lods
jne
das
xchg
fisubl
jnp
add
ljmp
sbb
add
sbb
pop
idivb
pop
sbb
repz
mov
or
stos
pop
pop
rol
enter
lea
push
and
mov
jns
add
insl
pushf
cmp
mov
loop
cwtl
xlat
push
popa
in
cmpsb
ljmp
fdivs
es
mov
add
mov
mov
test
add
sarb
fsubl
xor
arpl
cmp
add
or
mov
clc
dec
push
jne
sbb
leave
push
addb
sub
call
cmpb
inc
add
adc
add
out
popa
cwtl
fstl
pop
test
xor
loop
adc
sub
xlat
cld
add
in
xor
ret
cwtl
mov
out
cmp
ja
stos
inc
cwtl
lea
out
aaa
inc
inc
cwtl
addl
movl
push
jns,pn
push
mov
rcrb
adc
jne
nop
scas
arpl
or
inc
jae
xchg
aad
movl
sub
push
es
xchg
jb
sub
int3
outsw
adc
push
adcl
cli
adc
cmpsl
xchg
push
inc
push
push
mov
and
xor
adc
adc
mov
loope
inc
or
push
cmp
movsb
add
xor
fwait
and
sbb
adc
in
mov
jne
ds
inc
aad
dec
sbb
loopne
les
xor
xchg
mov
jge
jne
add
jg
aad
pop
jle
add
fs
adc
dec
push
xor
cwtl
mov
or
push
xor
or
adc
adc
leave
mov
pop
adc
inc
or
cmp
movsl
adc
xor
adc
fisttpl
adcw
pop
dec
and
xchg
dec
mov
cs
push
inc
sbb
push
aas
adc
cmp
xchg
push
subl
and
loope
hlt
or
popa
xchg
or
adc
les
add
or
adc
and
push
xchg
xor
sub
push
fs
imul
adc
js
adc
sbb
dec
push
xchg
les
das
and
aam
sub
adc
arpl
insb
mov
and
stc
fs
adc
inc
fs
lds
adc
testb
xor
adc
add
ss
jge
push
inc
dec
inc
jle
ret
and
mov
lock
or
ret
dec
push
and
push
adc
and
les
adc
je
stos
loop
pop
mov
mov
popf
sbb
in
aas
sbb
in
cmpsl
sbb
sbb
or
jl
xor
cmpb
repnz
pop
nop
pusha
cld
inc
xchg
arpl
and
arpl
enter
dec
pop
add
hlt
pusha
popf
sbb
in
jl
adc
lock
xchg
xor
pusha
sub
fcoms
add
nop
ds
call
adc
int
sbb
mov
or
mov
mov
icebp
mov
mov
sub
fmuls
aas
sub
sbb
int
cmp
xor
in
js
jge
lret
jbe
sbb
icebp
test
or
fsubp
sbb
mov
dec
ret
cmp
cltd
jb
mov
mov
xor
inc
inc
push
push
add
data16
movsl
and
adc
inc
stos
shll
fstps
aad
test
jae
adc
dec
fiaddl
lock
rcrb
cmp
push
mov
mov
ja
or
insl
inc
xor
mov
bound
rorb
dec
inc
adc
mov
mov
nop
push
mov
jno
sub
movsl
push
gs
mov
mov
sbb
dec
sub
inc
or
add
sub
adc
push
mov
and
cmp
inc
lods
les
pop
shlb
pop
addb
sub
jo
dec
or
or
adc
out
inc
cmp
adc
inc
shll
pop
adc
nop
sub
fsubl
and
add
les
pop
xchg
and
sub
jle
push
cmp
test
and
add
inc
adc
adc
aaa
cs
repz
pop
adc
sub
adc
push
jo
std
pop
push
adc
loopne
addr16
sti
inc
add
arpl
add
xchg
loopne
sub
adc
loopne
fwait
inc
lea
pop
adc
push
add
jns
pop
and
or
aad
lret
int3
push
push
adc
jnp
add
out
sbb
add
or
push
xor
fwait
and
sbb
cmp
aam
mov
lahf
scas
sub
iret
int3
xor
inc
cltd
int
jnp
sbb
mov
test
mov
into
dec
mov
out
mov
adc
and
cmp
mov
adc
enter
jnp
out
pop
out
jns
or
inc
mov
add
pop
arpl
js
int3
inc
rcr
add
sbb
add
sub
dec
pop
sub
sub
or
lock
sub
mov
sub
bound
adc
xchg
add
dec
ret
jmp
jns
push
in
pop
shlb
mov
add
and
push
sbb
adc
adc
int
inc
andl
xor
push
bound
adc
mov
inc
fisttpll
das
add
sub
jns
or
sbb
cmp
sbb
xchg
sub
sbb
sub
inc
or
sbb
xor
adc
and
sub
sbb
addr16
shlb
cmp
xchg
jmp
push
stc
or
outsl
add
jae
push
add
lods
add
xchg
fcompl
cmpsl
cli
add
sahf
mov
lcall
aaa
cmp
les
pop
notb
inc
das
pop
adc
movsb
lock
cs
and
push
fstsw
mov
add
out
push
add
std
dec
sbb
lcall
add
add
mov
sbb
pop
loop
loope
add
inc
dec
pop
or
add
mov
jne
mov
sbb
mov
push
adc
pop
ret
mov
inc
int
sbb
in
rol
scas
or
fildl
adc
stos
add
xchg
lds
ds
add
mov
loope
xor
dec
cmpsb
inc
push
filds
add
sbb
dec
imul
mov
xor
add
xchg
and
mov
add
cmp
cld
push
inc
xor
and
sub
xor
push
loop
adc
fdivs
mov
inc
jo
rclb
jle
inc
jb
js
xchg
jl
add
std
cmc
ljmp
or
xor
cwtl
sub
mov
roll
mov
pusha
rclb
mov
insl
jo
cmp
lods
jl
cmp
xchg
iret
mov
sbb
ja
jno
add
loope
xor
das
addb
rorl
repnz
aam
scas
add
push
inc
ja
js
jno
add
mov
aas
or
add
addr16
pop
cli
mov
rcl
das
xor
cmp
add
xchg
aad
and
les
mov
dec
inc
xor
cwtl
stos
popa
add
ret
push
jg
cmp
push
sub
cmp
or
and
mov
or
sub
dec
add
push
jle
and
cmpsb
mov
add
fisubl
int
cmp
sbb
cmpsb
icebp
push
sub
jo
mov
mov
and
daa
adcb
sti
mov
jnp
loopne
or
pusha
jne
scas
imul
int3
pop
xor
jo
dec
insb
testl
lock
mov
add
push
jl
add
jbe
aam
call
filds
jbe
add
iret
mov
mov
out
mov
rolb
ja
call
push
add
inc
mov
out
jns
loope
imul
ljmp
add
jp
jbe
fidivrl
enter
add
or
icebp
mov
add
sbb
cmpsb
ljmp
add
sub
xchg
js
aad
shlb
shrl
xchg
push
push
inc
es
sti
mov
fcoml
cmpsl
push
inc
xor
jbe
or
xchg
mov
add
ss
mov
add
inc
bound
scas
sarl
jmp
sti
dec
mov
out
pop
lahf
cld
mov
and
mov
push
add
test
sbbb
pusha
xchg
pop
pop
std
add
add
outsl
scas
xchg
add
push
out
icebp
pop
add
push
shrb
sbb
push
jae
push
adc
mov
in
push
inc
add
xlat
pop
sahf
aam
pusha
ss
sbb
cmp
xchg
jmp
int
or
subb
xchg
mov
mov
xchg
pop
xor
add
shrl
out
call
add
pop
movl
fs
ret
ljmp
and
negl
rolb
sub
nop
push
xor
jge
out
stc
xor
mov
cld
mov
add
inc
mov
mov
negl
movsb
push
dec
mov
pop
aas
mov
andb
mov
dec
pop
movb
aaa
adc
lods
ds
popf
cmp
mov
cmpsb
sub
xchg
test
cmp
add
pop
jns
scas
mov
inc
cli
gs
adc
rorb
add
daa
ja
sbb
inc
cmp
sbb
std
call
outsl
add
clc
sub
cmp
dec
mov
pop
pushf
xchg
add
inc
or
aaa
push
rol
sub
pop
sbb
out
arpl
aad
sub
add
and
and
mov
int3
cld
inc
push
add
insb
mov
pop
inc
int
mov
rorb
stc
sbb
outsb
mov
sub
push
enter
mov
pushf
scas
dec
pop
jg
add
lret
pop
sbb
xchg
jmp
dec
lret
addb
out
incl
xchg
inc
test
mov
ss
enter
push
mov
push
adc
mov
fdivs
lea
mov
inc
sbb
push
and
loope
insl
cmp
mov
and
ss
sarl
add
in
push
mov
adc
jo
mov
mulb
pop
aad
jno
add
xorl
mov
add
add
xlat
rol
rcll
sub
mov
insl
pop
and
in
jmp
lret
outsb
add
xor
divl
icebp
in
add
push
and
add
push
xor
add
aad
cmp
movsl
pop
add
xchg
shll
add
repnz
pop
jl
push
jbe
add
aad
pop
into
je
cmp
dec
xchg
sub
loop
jge
pop
push
in
and
push
cmpsb
cli
mov
call
sub
add
loope
orl
sti
movq
push
sbb
mov
dec
lret
movsl
add
push
add
stos
pop
jg
add
pop
in
add
push
push
add
pusha
imul
adc
das
xor
in
push
aam
push
cmp
pop
or
xchg
xchg
daa
mov
sub
inc
test
in
aam
mov
inc
pusha
push
rclb
jmp
add
push
flds
push
in
stos
pop
xchg
hlt
test
lods
fnsetpm(287
lret
mov
push
lahf
jge
xor
add
popa
nop
xor
out
sub
sbb
or
mov
mov
inc
xor
sbb
add
adc
xchg
mov
call
das
add
subl
ds
jmp
mov
add
in
push
add
in
jns
and
or
xorl
push
xchg
pusha
into
int
sbb
pop
jnp
xchg
add
pop
mov
inc
add
lcall
andl
xchg
mov
sub
push
xor
in
shlb
cwtl
sub
add
push
stc
push
add
inc
in
lods
sbb
push
pop
sbb
adcb
xchg
xor
cwtl
scas
jo
pcmpgtb
aaa
shl
mov
xchg
aas
add
insl
sub
cs
add
inc
cmc
cmpsl
jnp
adc
mov
popa
sub
lds
movsb
add
cwtl
aam
mov
movsl
clc
stos
push
and
mov
mov
mov
stos
dec
push
xchg
sub
xor
call
repnz
icebp
wrmsr
fidivrl
add
loop
std
push
and
sub
dec
add
scas
jns
dec
shll
pop
insb
repnz
or
pop
inc
fisttpl
shlb
js
pop
rcr
and
rcrb
xchg
sub
pushf
insl
mov
dec
add
mov
add
es
cmp
cli
icebp
das
cli
mov
push
shl
push
adc
lods
cmp
xchg
add
fiaddl
dec
popa
stc
test
sub
sub
punpcklbw
into
lds
adcl
ds
bound
fisttpl
sbb
sbb
pusha
push
in
pusha
add
or
stos
mov
lods
sti
jge
add
cwtl
imul
sbb
not
fcoms
ljmp
sar
mov
repnz
add
iret
add
stos
xchg
jecxz
adc
add
pop
and
and
adc
sub
nop
sub
rcl
add
cmpsl
and
aas
lret
pop
jp
mov
mov
jo
xor
push
add
movsl
xchg
or
add
ljmp
xor
leave
jge
mov
jb
addl
lock
sti
push
into
and
lock
addl
pop
sti
xor
mov
lds
and
mov
fcomps
out
das
sbb
rcrl
dec
and
add
jmp
and
std
pop
sub
in
shlb
loop
pop
adc
loop
xor
add
jmp
daa
testb
jae
mov
popa
xor
mov
scas
sbb
push
sbb
xorl
fdivl
addl
mov
shlb
xchg
xorb
pop
aaa
push
mov
mov
add
icebp
daa
or
xor
pop
addb
rcrl
mov
das
xor
fisubs
pusha
add
inc
adcb
lea
xor
sbb
dec
iret
subb
fdivl
jle
add
dec
jae
sti
or
addl
loope
fistpll
sbb
inc
jo
fs
add
adc
push
mov
cmpsl
adc
or
enter
jbe
add
mov
and
add
cli
pusha
aad
in
mov
out
repnz
pop
jecxz
addr16
add
inc
adc
and
mov
arpl
roll
adc
jno
addr16
add
std
jg
faddl
sbb
cwtl
inc
adcb
hlt
test
test
push
popf
int
mov
jo
sub
sbb
add
or
pusha
add
pusha
pop
scas
loope
push
mov
mov
pop
and
add
test
mov
punpckhbw
jmp
add
cltd
jge
lock
add
dec
lret
dec
loopne
mov
xor
lahf
cltd
in
cmpb
sbb
dec
je
or
pop
add
int3
fbstp
in
sahf
js
add
push
repnz
mov
pop
add
pop
mov
inc
mov
test
jp
xor
add
fnsave
dec
je
sub
add
mov
out
adc
or
fs
xor
loop
out
add
outsl
fildll
mov
jno
xor
in
xchg
jl
cld
das
add
sub
push
rcl
jne
add
cld
push
mov
insb
sbb
dec
pop
inc
mov
pop
test
rol
inc
les
push
and
popf
sbb
sub
pop
ljmp
rorl
loop
xchg
mov
stos
add
jecxz
pop
dec
inc
sbbb
xor
push
in
jae
loope
test
std
cltd
xchg
jmp
mov
pusha
in
scas
mov
sub
mov
jle
es
mov
xorb
roll
add
dec
insb
push
add
inc
movsb
cld
add
add
add
jp
mov
jmp
or
dec
push
shr
je
and
mov
push
push
loopne
xor
add
jge
call
jl
add
xchg
andb
xabort
push
mov
add
shlb
ret
shl
mov
js,pt
add
out
adc
push
dec
jecxz,pt
add
adc
xor
popf
inc
frstor
add
movsb
push
in
mov
jnp
sub
sbb
and
pop
cmc
call
iret
cmp
dec
add
cmpsb
jne
sub
aas
loop
xchg
xchg
rcll
ds
add
mov
ja
add
add
clc
hlt
add
or
add
sub
shll
pop
jge
dec
jp
rcrb
xchg
or
mov
add
mov
lret
lahf
dec
in
loop
mov
mov
sarb
mov
lds
xchg
cmc
rorl
les
dec
add
pop
je
jb
stc
jmp
xor
stos
or
loopne
dec
insl
je
add
add
movl
xchg
dec
mov
add
push
fucomi
mov
add
push
dec
jb
push
xchg
addb
fs
push
pop
cmp
repz
sub
jp
mov
adcb
add
adc
inc
and
add
dec
xchg
jge
sbb
adc
cmpb
cmpsb
cli
jp
dec
and
mov
sbb
mov
inc
xor
jmp
fadds
xlat
mov
ja
test
push
insl
inc
movsl
mov
setae
popf
xchg
loop
outsb
shl
mov
std
adc
inc
nop
add
repz
xchg
push
cli
add
xor
pop
leave
mov
scas
pop
xchg
sub
xchg
and
mov
shr
shlb
add
mov
inc
cld
xchg
punpckldq
xchg
mov
and
pop
scas
xchg
enter
pop
or
mov
xor
add
insb
subb
or
mov
cmp
lea
sub
adc
or
fwait
jne
lods
popf
pop
xorb
cmp
adc
adcl
push
lahf
insb
outsb
mov
jp
subl
cmpsb
int
xlat
sbb
sbb
sahf
add
mov
mov
fidivs
mov
pop
or
sub
stc
fimull
imul
clc
or
sbb
lods
pop
sub
add
outsl
xchg
clc
push
xor
cmp
xlat
add
push
add
mov
sbb
outsl
push
pop
xor
or
pop
mov
adc
fistpll
das
pusha
xor
std
mov
popa
pusha
mov
sti
add
add
fs
mov
arpl
cli
xchg
adc
sub
movsw
and
push
mov
fadds
imul
rol
test
int3
jp
jbe
int3
int3
mov
dec
xchg
arpl
xor
test
out
pusha
mov
out
sub
movsb
jno
ja
xchg
sub
add
fmull
sbb
xchg
push
add
lahf
adc
imul
adc
leave
orb
mov
aad
push
sahf
xchg
orb
ja
adc
cmp
out
add
hlt
lods
mov
cmp
sbb
inc
inc
or
pop
push
sub
xor
ljmp
or
cmp
nop
add
mov
fistl
outsl
test
add
push
push
push
add
bound
pop
je
pop
xor
xor
lret
cwtl
int3
add
cld
in
or
adc
dec
les
cmp
aad
lods
cmp
push
iret
jno
and
out
in
mov
push
jge
xor
shl
fwait
add
inc
into
sub
mov
pop
mov
jae
add
and
pop
mov
ret
xor
inc
shll
add
rcl
or
cmp
xchg
lock
lcall
adc
stos
insl
add
or
test
cwtl
cmp
test
shlb
lock
imul
mov
aas
test
jns
cmp
in
sbb
and
add
pop
jb
mov
xchg
cli
mov
loopne
xchg
movsl
addb
je
stc
sbb
add
jo
incl
es
push
int3
and
test
mov
repz
adc
fdivrl
xchg
out
mov
push
cmp
in
lods
pusha
add
loop
push
mov
or
inc
mull
add
scas
cmp
cli
add
popf
lds
mov
mov
add
push
inc
out
sahf
iret
inc
add
mov
inc
sub
in
pop
int
add
dec
cmp
add
fcmovb
jmp
dec
popf
add
push
test
push
and
add
mov
add
push
add
add
cwtl
adc
cmp
mov
push
sbb
es
scas
pop
xchg
xorb
adc
add
mov
push
mov
push
xor
stos
cmpsl
add
stc
pop
mov
xor
dec
lret
add
or
aad
or
call
cmp
cmpsb
add
or
push
mov
add
xchg
in
dec
sbb
adc
xlat
sarl
dec
cli
dec
push
mov
lock
insb
add
mov
jnp
add
je
test
pop
xchg
sub
sarl
stos
iret
sbbl
sub
mov
pop
add
xchg
inc
nop
rcr
adc
ja
ss
ret
lea
movl
or
and
add
xchg
es
mov
out
flds
dec
xor
or
inc
imul
insb
xor
cmpsb
roll
aaa
pop
xchg
shll
mov
lds
or
dec
inc
data16
inc
push
adc
cmp
iret
and
inc
filds
mov
decl
nop
sub
or
adc
test
jge
or
inc
ljmp
and
shlb
movsb
and
inc
loopne
scas
pusha
mov
mov
sbb
test
in
add
movsl
and
dec
movsb
les
add
xchg
inc
mov
adc
sbb
inc
inc
out
lods
push
fwait
lret
ss
pop
cmp
ds
cmp
xor
inc
dec
jns
or
add
outsl
add
push
sbb
mov
push
inc
mov
dec
jo
add
call
sahf
test
adc
addl
dec
sbb
mov
xchg
adc
adc
orb
mov
icebp
and
mov
mov
sub
xchg
enter
sbb
xorl
mov
cs
sub
imul
shl
pop
adc
lahf
xor
push
or
pop
stc
cwtl
jmp
jns
mov
add
out
bound
test
test
inc
cmpsb
pop
add
push
adc
xor
add
or
xor
add
inc
jae
jle
adc
jb
mov
mov
pushf
mov
lahf
mov
mov
and
pop
inc
mov
mov
or
inc
inc
loope
dec
dec
add
test
subl
inc
xor
je
and
lea
in
popf
movsb
aam
push
loopne
jnp
add
inc
sbb
pop
and
and
lock
xchg
int3
daa
je
iret
fcmovbe
xchg
xchg
add
cmpsb
mov
or
or
and
nop
int
inc
jnp
mov
or
dec
dec
fwait
xor
outsb
xlat
jge
fucom
dec
lods
negb
xor
shll
xchg
xchg
ret
inc
aam
adc
test
out
xchg
cwtl
add
and
xor
xchg
xor
or
mov
in
outsb
adc
mov
clc
add
out
push
mov
jbe
out
mov
frstor
cmpsb
loopne
mov
or
jo
int
xor
out
jmp
jne
scas
sub
mov
adc
jae
xchg
sub
pusha
out
loopne
mull
popf
cmc
add
push
dec
fists
mov
divl
fdivl
hlt
or
add
adc
xchg
add
hlt
lret
xor
jns
mov
add
sub
pop
inc
mov
daa
or
loop
arpl
xor
dec
ret
inc
insb
add
xor
add
lcall
jbe
and
push
insb
popa
ss
roll
add
bound
mov
and
mov
jmp
jecxz
adcb
add
mov
cmp
pop
cmc
stos
imul
mov
or
sub
subb
daa
loop
fisttpl
mov
pop
mov
xchg
test
add
mov
or
xchg
lahf
out
hlt
subb
in
mov
mov
aaa
inc
jmp
rcl
cmc
aas
adc
lret
pusha
mov
cmp
mov
push
push
or
ret
adcb
scas
inc
sub
sbb
mov
loope
xchg
push
jnp
js
cld
out
out
adc
push
dec
add
imul
loop
xchg
inc
dec
mov
sarl
mov
dec
xor
add
pushf
lcall
nop
hlt
cmp
addb
xchg
mov
jmp
adc
push
scas
je
test
inc
xchg
out
mov
aas
adc
add
dec
xor
daa
nop
or
mov
push
les
adc
sub
test
leave
or
add
sbb
ret
jmp
iret
lds
js
hlt
rol
push
add
notb
sbb
jmp
xchg
sbb
gs
adc
adc
xor
test
cwtl
pop
mov
movsl
hlt
dec
sbbb
push
adc
stos
add
vshufpd
hlt
add
lret
fisubs
push
or
test
inc
dec
push
add
jecxz
inc
mov
rol
add
lcall
adc
cmc
cli
mov
add
cld
push
lea
push
adc
rol
push
cmc
pop
xor
lds
inc
jo
and
jo
imulb
pop
pop
dec
pop
inc
or
es
add
icebp
mov
lahf
das
mov
nop
lret
outsl
lret
add
and
jne
or
in
jmp
out
out
cmpb
mov
pusha
push
insl
inc
add
jecxz
bound
push
js
add
lods
push
and
in
cmp
xchg
xor
nop
add
inc
je
test
pop
add
push
xor
je
iret
popf
inc
imul
andb
push
adc
pop
int3
sbb
or
sbb
mov
push
add
sub
push
imul
fildl
fiaddl
movsb
xchg
mov
pop
cmp
orb
ret
loope
push
js
jns
add
pushf
movsb
insb
rcl
add
adc
daa
mov
mov
ljmp
addl
cwtl
lds
add
test
xor
sbb
add
pop
mov
cmp
cmp
mov
int3
add
mov
or
cmp
pushl
ds
add
xor
in
sub
cmc
movsl
mov
rolb
insb
mov
mov
popa
add
test
pop
xor
in
aad
out
inc
xchg
mov
shlb
jne
das
aam
add
xchg
mov
pop
push
roll
arpl
pusha
fs
shll
cmpb
pop
mov
or
or
scas
andb
andb
aas
add
mov
mov
add
add
add
cmpl
and
add
push
inc
mov
xor
jbe
popa
ds
pop
add
push
and
addr16
inc
in
push
or
imulb
clc
mov
xor
add
daa
sub
xchg
mov
mov
lods
xchg
add
xor
add
mov
cmpsb
stos
int3
mov
outsb
dec
jno
and
enter
andl
pop
add
cmp
fiadds
push
mov
add
dec
jns
pop
jbe
inc
les
lods
or
test
xchg
mov
jp
cmp
add
inc
adc
xor
add
aas
jne
jo
loop
js
shll
add
jp
add
or
lock
push
lods
enter
nop
jo
push
xchg
pop
add
cs
enter
out
or
mov
push
cmpsb
jecxz
and
xchg
fs
arpl
call
inc
add
cmp
and
rorl
inc
xor
out
std
cmp
mov
adc
hlt
loopne
inc
pop
movsb
dec
fucomi
sti
add
sub
lods
add
and
das
dec
cmpsb
or
push
imul
add
mov
and
xlat
call
and
scas
adc
pop
lcall
out
into
jae
xchg
mov
add
sbb
cltd
inc
movsb
loop
nop
sbb
add
cmp
push
je
imul
hlt
subb
sbb
or
mov
test
lret
sahf
pop
insl
or
subb
and
lret
and
cmpsl
push
or
add
cmp
loop
mov
or
fstpl
sbb
or
push
orl
sub
in
add
jns
sbb
jl
add
push
adc
add
sub
xor
and
outsl
in
lea
push
incl
mov
push
lods
aad
xor
pushf
sub
subl
dec
mov
test
and
and
aad
pop
nop
pop
add
and
mov
sarb
repnz
mov
incb
cmp
ret
hlt
jge
push
add
fdivs
mov
lret
imul
stos
push
push
pop
mov
cwtl
add
inc
addr16
mov
or
mov
mov
adc
xor
mov
add
or
scas
pop
test
sub
mov
add
in
dec
xor
addl
or
mov
mov
rorb
jae
sub
mov
and
aam
dec
inc
cmpsl
jl
pop
mov
int
cltd
and
nop
jbe
xor
add
jne
xchg
outsb
add
inc
sub
flds
mov
popa
inc
xchg
cmp
jns
mov
imul
sbb
add
push
dec
outsl
test
or
adc
mov
dec
pop
lock
jg
pop
push
mov
movb
stos
push
aam
bound
xor
pop
push
mov
and
dec
sub
jnp
loopne
addb
in
cld
sti
or
cmp
int3
cmpsl
jns
rolb
les
filds
add
in
dec
cmpsb
int3
sub
jl
mov
movb
add
push
sti
sub
and
mov
in
call
add
fucomi
enter
push
movsb
inc
sbb
xor
test
push
rcll
xorl
dec
testb
adc
in
ljmp
jle
fs
push
mov
push
add
imul
or
add
adc
push
aaa
add
cmp
mov
push
and
sub
call
jnp
imul
sar
sub
xor
enter
pop
call
sbb
outsl
sub
inc
mov
xchg
imul
or
pop
shrb
inc
and
push
cmpsl
and
sub
nop
xor
xchg
js
adc
cwtl
mov
jnp
add
mov
lods
sub
push
cmp
add
push
add
cwtl
xchg
add
mov
movsb
mov
mov
lock
xchg
add
mov
test
fildl
mov
fs
cwtl
cwtl
sbb
pop
pushf
push
mov
sub
movsl
add
test
and
filds
xor
mul
add
aam
xorb
push
xchg
add
movsb
aad
mov
inc
mov
add
push
pop
rdmsr
add
sub
push
xchg
aas
addr16
and
inc
cmpsl
jne
or
mov
addb
fs
xchg
xor
or
mov
hlt
add
ficomps
jne
mov
addb
repz
negl
jno
jo
lahf
pusha
cld
out
cmp
add
add
aas
cmpl
mov
mov
roll
es
sahf
in
mov
inc
cmp
inc
clc
mov
lock
idivl
sub
dec
xor
push
lret
imul
loope
shl
cli
pop
inc
and
and
rcpps
clc
xchg
push
jmp
mov
xchg
pop
aam
add
mov
mov
add
mov
pop
cmp
les
cmpsb
mov
xlat
add
bound
add
aaa
mov
fistps
loopne
sub
pop
mov
into
outsl
mov
cli
inc
shlb
or
loopne
scas
cmc
mov
fstpl
sub
mov
imul
jle
mov
jl
fabs
adcb
das
sub
xor
addb
adc
jo
ds
sbb
and
dec
inc
xchg
jp
adc
inc
loopne
movsl
pop
and
jb
adc
test
mov
dec
mov
lods
cmp
subl
mov
mov
insl
ds
mov
or
adc
jne
shlb
push
mov
call
and
jne
inc
push
add
in
imul
push
sbb
mov
and
or
add
or
shr
pop
jae
sbb
rcrb
sbb
cmp
jmp
jl
mov
push
ret
jnp
cmp
adc
fs
scas
adc
xor
mov
sbbb
aaa
ja
inc
adc
mov
or
pop
bound
ror
lea
dec
fwait
cmpsb
mov
lea
lock
fs
popa
mov
ljmp
add
dec
pusha
cmp
loopne
fdivrs
add
iret
loope
and
jle
cwtl
or
inc
movb
testb
pusha
push
mov
and
lods
pusha
sbbb
xor
clc
dec
adc
adc
out
push
push
in
out
push
js
aaa
sbb
ds
test
xor
daa
lock
imul
lea
int
xor
negb
popa
push
dec
repz
enter
push
jl
mov
loope
dec
sbb
mov
sar
mov
js
pusha
loopne
jno
pop
lds
jl
pusha
xor
or
cmpb
add
inc
xchg
fcoms
adc
mov
ja
into
and
loopne
sbb
inc
fdiv
push
loop
mov
ljmp
in
in
js
adc
out
dec
or
imul
adc
in
push
bound
adc
sbbb
and
inc
shll
mov
mov
dec
loopne
cld
pushf
push
inc
lock
push
adc
rcr
cmc
movsl
inc
mov
orl
sub
in
inc
inc
inc
int
cmp
cmp
and
adc
ss
dec
cmp
mov
xchg
inc
es
rcr
sub
mov
push
ret
popa
inc
enter
jae
and
push
add
popf
push
mov
add
fiaddl
jp
inc
add
jmp
cmp
cmp
sbb
push
push
loope
pop
push
sbbl
adc
adc
out
sbb
pusha
js
lea
and
cmp
lret
sbb
insb
mov
pusha
js
adc
jp
inc
jg
shrb
in
pop
arpl
xor
popf
adc
sbbl
enter
stos
out
cmp
mov
inc
inc
imul
push
sbb
cwtl
add
out
add
sub
push
dec
mov
dec
cmp
or
add
xor
cmpsb
mov
clc
cmc
mov
and
push
imul
or
lock
pop
mov
mov
mov
jae
pusha
xorb
add
push
mov
add
jno
xor
add
add
cmp
inc
sbb
mov
lock
add
push
and
rol
fdivl
cmpsl
and
add
rorl
call
dec
jo
lock
adc
fsubl
insl
loopne
cs
or
xchg
inc
mov
and
and
aam
pusha
or
sub
xor
mov
icebp
xchg
xor
mov
clc
push
adc
cld
ror
push
and
xor
out
lds
pop
insb
pusha
les
sub
shrb
pop
add
dec
pop
enter
mov
lods
push
adcl
fs
push
mov
outsb
shll
roll
mov
add
inc
pop
or
add
daa
loopne
les
pop
adc
adc
das
shrb
mov
add
mov
movsb
sub
lock
movsb
shl
add
int
insl
loopne
pusha
jl
cmp
pop
mov
out
inc
scas
ret
repnz
add
push
xchg
stos
shll
cmp
shr
jo
and
push
call
adc
add
dec
and
sar
popa
addr16
mov
test
push
imul
loopne
push
add
mov
mov
sub
push
shlb
pop
pusha
push
ljmp
cwtl
jl
pop
sbb
and
adc
fwait
xor
sub
repnz
pop
cmp
enter
sbb
adc
inc
jmp
and
lods
les
pop
mov
icebp
lds
adc
das
and
rcrl
inc
mov
inc
fildll
and
insb
pusha
aam
and
inc
mov
pusha
subl
fs
shl
les
scas
rolb
push
addl
add
les
int3
sub
xchg
faddl
cmp
popa
rcr
test
push
not
mov
cmp
xor
inc
stos
pop
js
mov
dec
clc
or
adc
fbld
popa
loopne
loopne
or
mov
mov
sub
arpl
jb
mov
in
pop
and
enter
push
or
stc
inc
repz
or
and
push
mov
xor
or
ja
pop
dec
add
push
loope
cmp
out
push
jnp
add
cmc
sub
xchg
sbb
idivb
push
add
cltd
add
push
cmp
bound
fwait
add
add
pop
push
lahf
popl
cs
movsb
pop
push
cwtl
and
and
jns
inc
mov
adc
lods
pusha
lea
jg
mov
xchg
sub
xchg
rorb
push
cmp
lock
mulb
sbb
cmpsb
xor
cmp
adc
add
xor
mov
mov
mulb
mov
cld
dec
and
xor
mov
push
jno
push
imulb
orb
adc
mov
mov
inc
push
inc
test
faddl
repnz
enter
and
cmpsb
push
mull
sarb
and
int
jb
sub
lock
pusha
into
adc
xchg
adc
lock
mov
dec
repz
mov
xchg
inc
pusha
sarl
inc
pusha
shll
inc
mov
lods
and
leave
test
xor
or
push
shl
arpl
mov
scas
cmc
loopne
mov
rclb
rolb
std
sub
or
int
add
stc
subl
mov
sbbb
rol
mov
scas
sub
jg
cmp
sbb
mov
and
shrb
inc
cmc
idivb
and
push
aad
es
lock
push
adc
jle
xor
or
popa
data16
push
xor
pusha
flds
inc
test
cmpsb
cltd
scas
sarb
dec
popf
clc
sbb
inc
lcall
add
and
in
clc
push
nop
fsubs
push
ds
cld
dec
mov
and
sarl
inc
pusha
fadd
and
sbb
ds
popa
test
mov
xchg
sarb
pusha
js
icebp
and
push
inc
push
mov
addl
les
pop
or
sub
pusha
pusha
mov
or
stos
mov
and
or
ljmp
hlt
in
pop
push
js
pop
mov
jl
cmpsb
push
cmc
pusha
rol
push
inc
xchg
icebp
push
sub
push
lahf
popf
je,pt
inc
shl
or
adc
xor
out
pusha
rol
adc
es
inc
jns
xchg
pop
pusha
add
lock
mov
fsubrl
ljmp
andb
adc
popa
push
pusha
ret
aad
jmp
mov
hlt
jl
adc
jb
adc
lock
lds
es
lretw
test
cmpsl
mov
xchg
dec
dec
rcrb
je
jnp
xor
cmp
sbb
js
cmp
push
test
add
movsb
dec
insl
add
mov
add
cmc
mov
push
add
sbb
mov
or
xchg
orl
fsubs
pop
pop
push
inc
jno
cmp
rolb
sbb
push
xchg
test
popa
out
lock
push
fwait
and
jecxz
mov
aad
adcb
fistps
cltd
fs
xorb
mov
cmc
inc
adc
adc
pop
xor
mov
pop
xchg
addl
adc
insb
sbb
or
popa
add
mov
test
add
push
mov
push
lahf
sub
popa
and
add
pop
addb
in
jl
or
and
loopne
pop
mov
rclb
push
loopne
xchg
cmp
test
mov
xchg
fs
and
inc
pusha
rorb
cmp
add
jmp
scas
orl
shl
sub
std
xchg
roll
je
and
or
push
pop
daa
xor
rol
adc
pop
test
insl
sbb
add
or
ficoms
inc
cwtl
insb
sbb
adc
sub
dec
into
inc
inc
mul
addb
lahf
pop
add
add
sbb
movsl
popa
and
pusha
add
push
dec
mov
inc
aad
lock
in
xchg
in
mov
mov
sub
push
loopne
lods
call
sarb
in
push
sub
dec
shrb
xlat
jl
add
fimull
rclb
pop
cltd
enter
loopne
push
jge
xchg
push
pop
inc
cli
cwtl
popa
sub
mov
pusha
insl
push
add
mov
inc
sar
add
mov
pop
gs
rol
dec
call
fcoms
pusha
mov
in
ret
scas
xor
and
pusha
push
repnz
mov
xor
xchg
jno
clc
mov
in
clc
sbb
adc
and
inc
stc
orb
movsl
lock
sub
icebp
jo
popa
xchg
ud0
test
stos
nop
sti
add
adc
mov
enter
loopne,pt
iret
lds
jmp
inc
mov
movsb
cmp
add
nop
rclb
dec
lcall
ds
shll
stc
fwait
insb
in
adcb
rorb
out
pop
popa
and
pusha
add
inc
lock
ljmp
and
inc
test
ljmp
ds
cmp
popf
in
add
lock
or
xorb
mov
sbb
call
jne
inc
sub
sbb
pushf
cmp
das
pop
push
roll
roll
xorl
jne
jmp
mov
rcll
mov
pop
es
or
mov
mov
xchg
mov
xor
dec
fadds
push
test
sbb
xchg
ds
add
mov
cmpsb
sbbb
cmp
cltd
scas
xchg
push
push
pusha
sbbb
sub
stos
mov
adc
add
xor
stos
xor
pusha
js
xlat
adc
and
cmp
pusha
xchg
sub
add
fidivrs
adc
pop
or
or
sub
stos
push
cmp
mov
sarb
nop
push
pop
pusha
sbb
pop
jl
cld
nop
adc
cmpsl
xchg
inc
mov
test
inc
xor
arpl
jb
dec
rcl
push
add
test
pusha
cltd
incl
data16
sub
fcomps
pop
rolb
shl
xchg
enter
rolb
add
shl
push
pusha
subb
out
popl
mov
loopne
xchg
shl
or
loopne
andl
mov
xor
inc
ror
push
popa
sub
pusha
outsl
mov
inc
lock
adc
push
dec
mov
cmpsb
pushf
pusha
pusha
cmp
xor
pusha
icebp
fdivr
in
call
adc
das
xor
pusha
jns
in
push
cld
mov
adc
int3
adc
mov
xchg
mov
in
pop
and
inc
adc
sub
test
stos
jne
add
inc
sub
xchg
xchg
cmpsb
inc
rol
mov
scas
mov
add
out
shl
clc
inc
bound
rorb
hlt
inc
shll
dec
ror
in
xor
rcrb
stos
fildl
clc
xchg
push
js
test
pusha
mov
lcall
inc
pusha
shll
pop
add
sub
iret
xchg
sbb
inc
adc
cmpl
popf
mov
and
push
out
hlt
les
xchg
pusha
lock
xchg
data16
adc
out
mov
gs
sahf
jnp
int
xor
movsb
jg
aaa
mov
dec
fiaddl
pop
lock
lret
push
clc
adc
rol
icebp
dec
mov
pusha
mov
mov
jl
inc
sub
ffree
xchg
sub
shll
push
es
cmp
sub
and
pop
sub
pusha
sbb
rcrb
jle
inc
xchg
sahf
pusha
mov
jbe
clc
inc
adc
adc
inc
addb
ss
je
popa
data16
dec
xlat
push
mov
lock
aam
inc
adc
enter
push
js
in
sti
cs
xchg
pushf
pusha
mov
lods
inc
xor
xor
pusha
js
inc
sbb
pop
icebp
xor
pop
lods
pusha
adcb
pusha
rcrb
push
ret
pop
cmp
dec
data16
xor
clc
pop
jne
or
addr16
lahf
cmp
pusha
cmpsb
adc
pusha
fstps
mov
pop
pusha
add
push
iret
push
outsb
cwtl
and
or
stc
int3
jle
pop
push
pusha
fsubrs
xor
in
lret
push
out
incl
outsb
ds
cmpl
rcrb
and
mov
or
outsb
pusha
push
adc
xchg
hlt
and
js
stos
or
sbb
inc
or
push
mov
push
mov
xchg
inc
rcll
mov
xchg
inc
roll
inc
add
popl
inc
add
xchg
fs
cwtl
adc
addr16
loopne
hlt
jno
out
pusha
pusha
adc
test
lock
bnd
push
test
fs
into
xorb
dec
and
mov
xor
test
cmp
xchg
sub
movsb
mov
or
loopne
lock
movlps
insl
add
mov
dec
insb
dec
les
movsb
sbb
cmp
mov
mov
push
pop
leave
dec
add
mov
xchg
int
and
rcrl
into
inc
pushw
jno
out
shrl
xor
mov
cmpsl
and
lahf
or
movsb
sbb
popf
jecxz
out
cwtl
xor
daa
popl
mov
ret
xlat
dec
sub
and
loop
int3
push
mov
xor
inc
xlat
imul
jno
mov
sbb
push
pop
hlt
add
lods
sbb
bound
movsb
shll
mov
rolb
xor
les
push
or
fdivr
sbb
sbb
imul
pop
sbb
pop
xchg
and
mov
add
out
dec
xor
fadd
xchg
cltd
dec
dec
push
sub
sbb
mov
xchg
rolb
add
inc
fsubs
lods
mov
inc
pop
sarb
call
adc
out
adc
adc
inc
push
and
push
shlb
mov
jne
push
jb
or
push
adcb
icebp
pop
dec
iret
mov
pop
adc
add
fdivrs
in
pop
hlt
push
jp
rcr
or
jge
cmp
adc
aaa
mov
adc
pop
xor
pop
jno
lods
adc
push
pop
adc
or
xchg
dec
dec
mov
or
push
lcall
jb
cmp
sbb
or
bound
xor
inc
or
sbb
push
sbb
sbb
xor
jp
adc
nop
popf
shlb
sbb
or
test
mov
and
adc
xor
pop
shlb
xchg
cmpsb
or
inc
cli
inc
push
and
jl
sbbb
push
repnz
dec
mov
inc
sub
jbe
jge
mov
in
push
jb
rcr
xor
cwtl
mov
and
mov
rolb
mov
xchg
iret
pop
mov
push
add
jle
dec
sbb
scas
dec
mov
test
sub
xorb
inc
xchg
ret
sbb
movb
cmp
popa
push
inc
pop
mov
insb
das
push
mov
outsl
aaa
push
inc
repz
and
andb
mov
movsb
call
enter
sbb
sbb
rclb
lahf
and
sbb
inc
sbb
call
add
sub
pop
rorb
push
jno
enter
mov
pop
dec
jp
cmp
or
and
pop
mov
sub
jno
sti
imul
fists
popf
push
push
fmulp
jle
sbb
push
or
aas
ja
or
je
insb
fs
adc
sub
cwtl
sahf
add
sub
mov
das
push
jp
cmpsl
iret
js
sbb
dec
sbb
jle
fisubrl
cmpsb
mov
pop
push
and
mov
xchg
movsl
test
mov
dec
test
loopne
pop
add
pop
inc
mov
addb
lea
jne
ret
int
xchg
lret
insl
pusha
xchg
or
fidivs
and
mov
leave
xchg
test
push
mov
cmpsl
cltd
and
test
sub
jmp
add
mov
lcall
dec
jno
fs
cmp
addr16
xorb
outsb
jns
popa
jp
add
mov
sbb
pusha
or
popa
dec
das
cwtl
or
add
jmp
dec
xor
fs
ret
lock
lock
sbb
fiaddl
inc
jb
movsl
xor
jl
hlt
fidivrl
add
lret
jb
xor
adc
xorb
pop
push
fmuls
xchg
xchg
leave
adc
pushf
inc
xor
add
add
int3
jae
cltd
fcoms
mov
add
mov
mov
mov
dec
fists
sub
xchg
add
ja
enter
int3
adc
add
sub
xor
or
mov
adc
fistps
jg
add
hlt
into
mov
and
rolb
xchg
js
push
dec
inc
lds
insb
insb
add
and
js
push
stos
add
xchg
sub
ljmp
pop
cmove
or
bound
jle
cmpb
xor
xadd
test
call
inc
test
xchg
add
inc
pop
dec
add
inc
cwtl
aam
ja
mov
cmp
les
gs
je
mov
or
jno
sub
les
push
mov
jo
fidivl
jns
std
dec
push
adc
or
add
out
in
jnp
int
sar
lret
add
push
inc
pop
cmpsb
pop
mov
add
adc
testb
gs
or
or
mov
sub
addr16
add
pop
push
inc
aam
add
mov
push
icebp
inc
push
adc
add
mov
jp
test
ldmxcsr
in
stc
pop
lock
sub
addb
adc
js
jecxz
xor
add
mov
and
rolb
add
add
mov
lds
or
addl
sarl
mov
imul
mov
ss
stos
mov
xor
aaa
scas
js
popl
inc
mov
psubw
xchg
adc
nop
shrb
xchg
ds
add
xor
enter
je
addr16
gs
lret
mov
xchg
pusha
pop
stc
mov
xor
fistps
into
push
es
bound
insb
adc
or
fistpl
mov
add
andb
cmpsb
mov
add
int
dec
mov
add
loope
xchg
add
je
lock
cmp
sbb
aam
int
bswap
mov
ljmp
jb
mov
xchg
push
sahf
fs
sbbl
test
jg
xor
mov
jae
add
or
jo
cmp
mov
jb
popf
add
jle
cmp
xchg
mov
push
inc
pusha
push
aaa
add
xchg
inc
jmp
shlb
rcll
ds
loopne
adc
mov
out
clc
jmp
add
or
adc
imul
sub
add
rcrb
inc
add
andl
jle
add
push
enter
loop
pusha
jl
pop
xor
cmc
mov
pop
or
inc
in
dec
sbb
xchg
pop
aas
fwait
jge
xchg
pop
es
cwtl
loop
inc
scas
mov
sti
push
sbb
or
test
into
movsb
cmp
in
shl
inc
pop
sub
popa
add
pop
push
inc
lods
shlb
testb
inc
lret
scas
jmp
add
daa
pop
test
shlb
outsl
lock
cmp
mov
fimull
imul
pop
push
arpl
cld
test
loope
cmp
add
dec
add
sbb
scas
lret
jo
mov
add
xchg
mov
pop
mov
sti
les
pop
fstpt
leave
lret
adc
ret
add
sahf
mov
and
std
pop
add
adc
mov
mov
call
cmp
rorb
loopne
sbb
add
xor
icebp
or
pop
cmpsb
incb
das
int
xor
push
out
xchg
xchg
nop
push
cmp
out
es
call
icebp
test
hlt
inc
adc
fsubl
jns
xor
push
inc
sub
inc
cmpsb
in
push
add
dec
push
push
mov
add
sub
inc
sbb
movsb
out
sbb
jo
add
leave
xor
add
xor
ret
cltd
cs
cwtl
sbb
roll
jne
jge
data16
cvtdq2ps
lock
add
xchg
lcall
add
and
mov
and
add
andl
int3
pushf
xchg
shlb
leave
cwtl
jl
xor
aaa
pop
mov
add
jp
mov
inc
popa
push
mov
cltd
push
jmp
fcmovbe
inc
ret
dec
jne
adc
aam
xor
shl
add
add
cmc
xchg
out
add
inc
push
pushf
aas
push
mov
aam
xchg
xchg
add
xor
test
xor
lds
cwtl
mov
pusha
imul
mov
add
push
jae
jbe
not
add
aad
pop
jg
xlat
ja
pusha
shlb
insb
fisttps
xchg
jl
pop
imul
shlb
cld
adc
add
or
adc
mov
test
sbb
fcoml
adc
pop
dec
out
add
sub
add
xorl
dec
mov
pop
add
fsubrl
les
out
add
aaa
and
into
popf
rolb
addb
ret
and
shll
call
cli
mov
push
inc
decb
add
pop
dec
and
push
clc
inc
test
hlt
jne
adc
in
push
add
shlb
rorl
out
fnstenv
ljmp
ficoms
loopne
adc
cmpsl
popa
add
mov
push
andl
arpl
popf
scas
or
xchg
pusha
inc
cmc
ja
dec
cmp
shlb
lds
rclb
or
and
mov
mov
xlat
stos
pop
addl
out
and
mov
jnp
loopne
dec
popa
mov
push
push
outsb
add
in
dec
and
shll
sub
dec
add
jne
and
add
jno
pop
add
pop
sti
xchg
add
gs
pop
sub
sbb
push
into
rolb
add
in
pop
mov
lods
icebp
sahf
mov
xchg
std
leave
in
aas
push
mov
add
ja
dec
fldcw
fs
mov
sbb
adcb
divl
add
push
xchg
test
mov
add
and
mov
aam
add
pop
xchg
cltd
in
sub
push
xchg
mov
test
pop
xor
jl
xor
loope
lock
add
xchg
add
mov
pop
add
jle
add
sahf
rolb
sub
jns
sub
add
xchg
add
inc
add
mov
addl
sub
loop
or
adcb
mov
push
pop
in
add
add
and
mov
add
cmp
jns
pusha
enter
sarb
and
and
in
aam
sub
pop
fs
lahf
adc
ja
clc
add
rolb
jle
iret
xor
add
or
pop
sub
aam
int3
stc
clc
popf
jbe
pop
in
add
aas
xchg
pop
xchg
faddl
lods
pop
outsl
add
inc
xchg
add
insl
loopne
and
dec
psraw
jecxz
fldt
aad
insb
add
pop
clc
out
mov
aas
cwtl
xor
pop
push
sbbb
or
scas
fcoml
add
cmpsb
jecxz
and
sub
and
push
add
jne
movsb
mov
xchg
sub
imul
cmp
xor
pop
popf
xchg
add
aam
jp
dec
mov
add
sbb
sub
ja
pop
and
pop
sbb
adc
jg
mov
inc
dec
incb
rclb
in
iret
add
fldenv
dec
jecxz
pop
add
ret
jo
add
out
sarl
loopne
ja
cmp
repnz
incb
mov
add
das
mov
sbb
add
fcoms
movl
inc
cmp
cli
add
xchg
xchg
jo
cmc
jg
push
xchg
mov
pop
into
jb
add
push
lahf
call
pop
sbb
mov
pop
mov
mov
addr16
dec
mov
icebp
push
enter
mov
pusha
jb
adc
lret
sub
cld
nop
jg
mov
add
add
jns
push
adc
or
sbb
add
lds
add
jae
out
shrl
dec
mov
sbb
pop
std
inc
flds
lods
cs
js
jno
mov
pop
xchg
push
mov
enter
int
add
mov
cmpsb
nop
push
leave
sub
xor
cmp
out
inc
mov
inc
adc
mov
mov
sti
shlb
ljmp
push
mov
sbb
enter
icebp
mov
push
outsb
filds
inc
and
fs
push
add
push
loop
dec
jb
addb
into
and
and
call
xor
mov
jb
pushf
push
sub
mov
mov
jl
orb
inc
rol
jle
mov
jo
xor
ret
pusha
clc
add
mov
jmp
or
leave
or
test
pusha
xor
inc
cli
dec
adc
popf
out
add
jno
movsbl
rcll
or
xor
mov
scas
mov
fmul
mov
or
mov
loop
popa
push
and
fimull
enter
rolb
add
hlt
push
mov
xchg
xor
xchg
mov
dec
pop
mov
pop
add
ja,pn
or
rorb
cmpsb
vmwrite
cmp
popf
dec
jecxz
bound
jl
in
add
pop
cmp
push
cmc
fstps
repz
stos
jae
jecxz
in
in
pop
rorb
pusha
pop
icebp
lcall
mov
xor
mov
idivb
pop
imul
dec
fneni(8087
sbb
fimuls
mov
mov
lret
js
aas
and
icebp
repz
xlat
jg
pop
adc
or
xor
lret
jns
add
or
jns
or
fdivs
lret
mov
push
and
pop
add
add
pop
jle
js
cli
imul
aad
push
add
scas
enter
fs
sub
adc
clc
add
rcll
xor
cmp
enter
test
cltd
lds
push
and
cmp
pop
sarl
push
or
rcrb
and
rolb
dec
ds
mov
mov
fiadds
lea
jbe
dec
xor
call
mov
jmp
cmpb
fcomps
push
aad
in
or
jecxz
xchg
add
sahf
adc
dec
fsub
inc
mov
in
inc
fsubrs
hlt
xor
gs
add
dec
or
cmp
stos
jno
add
pop
cmp
cmp
gs
jo
flds
sbb
pop
sbb
mov
pop
pop
add
lahf
ds
lret
insb
and
push
fisttpl
test
mov
add
ds
stos
sub
ret
inc
ljmp
and
sub
or
popf
xor
ficomps
add
movsb
pop
xor
pop
xlat
inc
push
popf
lock
add
push
add
pop
add
repnz
and
stc
xor
cmp
pop
cmpb
cmpsb
dec
dec
cmp
test
inc
adc
sub
pop
in
sub
push
clc
add
cmp
add
out
jp
mov
jo
imul
scas
fadds
pusha
shrl
add
insl
mov
cmp
and
xorb
jo
clflush
ss
daa
jae
es
jb
mov
adc
movsl
lods
insb
shrl
daa
cld
pop
xor
push
rcrb
cmp
dec
mov
or
mov
jg
lods
jns
xor
stos
popf
sbb
push
dec
xchg
adc
and
les
inc
dec
popl
test
lret
add
push
xorb
push
mov
mov
jae
nop
and
popf
adc
add
pop
adc
jp
jae
sbb
mov
inc
les
or
mov
leave
inc
jb
fwait
jne
mov
js
mov
adc
adc
lcall
jb
shlb
inc
mov
dec
xor
cmp
cs
push
pop
shrb
sarl
add
fwait
aaa
movsb
stos
and
xor
xchg
pop
mov
add
cmpsb
or
xor
popf
jecxz
add
into
sbb
lods
lcall
fldenv
dec
sbbl
xchg
pop
xadd
mov
fldl
and
sbb
ret
dec
jnp
mov
xor
sbb
jge
add
repz
cs
push
pop
fistpl
mov
mov
jg
sbb
and
xor
mov
add
or
pop
sbb
enter
stos
aas
loope
andl
mov
lock
add
push
inc
or
test
int
inc
notb
jo
ret
add
add
iret
add
scas
cmpsb
sub
lods
test
mov
movsb
push
enter
and
rolb
in
mov
aam
cmp
add
sbbl
rep
sbb
add
sub
jl
cmp
arpl
cli
add
sub
add
mov
jle
add
mov
add
mov
cmp
aad
cmc
mov
dec
rcrl
add
inc
inc
or
pop
or
dec
jmp
popa
jle
fadd
mov
pusha
int3
lahf
mov
loope
mov
fbld
lcall
jge
jo
push
jmp
loop
sub
cld
jnp
add
inc
jmp
or
jnp
add
scas
cwtl
test
es
mov
add
mov
movsb
arpl
mov
mov
test
pusha
inc
add
xor
movsl
pop
mov
add
mov
add
cmp
sbb
and
sti
adc
push
aam
and
xor
fwait
xchg
inc
add
cld
fdiv
jns
adc
arpl
inc
dec
dec
nop
push
scas
jg
pop
adc
mov
push
push
sub
jge
outsb
jnp
and
push
out
int
push
fs
pop
cmpsl
test
shrb
or
pop
pop
xor
push
fcoml
mov
call
lret
mov
arpl
add
es
ja
dec
test
cli
iret
in
add
xchg
hlt
sub
sub
out
add
test
enter
add
lods
lret
cmp
pusha
add
mov
pop
jmp
imul
enter
inc
mov
pop
dec
bound
divl
jae
push
push
ja
add
mov
push
adc
add
cld
or
pop
sbbb
push
add
jecxz
add
out
and
dec
sub
mov
xchg
adc
dec
js
jge
add
or
leave
jno
add
jae
cmp
imul
lock
cli
hlt
xchg
ficomps
cmp
or
push
adcb
mov
push
pop
pop
fldcw
add
and
or
dec
inc
in
lret
jae
lds
popa
aaa
xchg
cld
out
cmp
jecxz
dec
sbb
or
jnp
addb
inc
loopne
pop
test
jecxz
fisubl
pusha
add
mov
push
mov
aam
rcll
or
mov
inc
and
stos
mov
orb
sbb
mov
rclb
movsb
jecxz
add
push
dec
sub
gs
mov
inc
shlb
inc
cmc
cmp
add
ret
nop
out
pop
xlat
adc
pop
faddl
jecxz
leave
inc
adc
sbb
sub
add
xchg
test
sbb
mov
movl
in
ss
add
push
mov
add
in
daa
add
jecxz
icebp
lods
jnp
dec
inc
orl
xchg
enter
mov
js
inc
mov
subb
mov
loope
clc
xor
pop
gs
enter
pop
pop
dec
add
sub
jmp
cmc
test
mov
arpl
popf
jge
pop
xchg
adc
int3
aaa
rorb
rcl
add
dec
rclb
push
add
push
mov
inc
test
add
in
mov
push
lods
xchg
pushf
rol
jmp
loope
iret
or
cwtl
cli
add
and
sbb
ja
daa
jno
aas
mov
aad
les
pop
pop
xchg
xchg
lcall
jmp
jbe
movsl
lock
mov
cmpsl
subb
pop
pop
fiadds
xor
mov
adc
push
mov
add
adc
outsb
inc
inc
xchg
jo
pushf
jmp
addb
sbb
adc
xchg
int
lods
add
loope
dec
add
mov
mov
lock
add
repz
cmp
filds
pusha
mov
sbb
xchg
lock
sarb
jbe
lret
lcall
test
loopne
lds
nop
adc
dec
xlat
pop
loop
shll
loopne
lea
int3
jg
add
jmp
sbb
scas
dec
fdivl
call
mov
daa
push
sub
jae
add
pusha
xchg
mov
pusha
adc
mov
jmp
sahf
and
mov
or
bound
iret
cld
in
pop
jl
and
push
shl
and
fistpll
aad
lss
fldl
cmp
add
out
lock
xchg
mov
jecxz
sahf
je
les
add
mov
nop
gs
jnp
fadds
aam
jnp
data16
xor
mov
cmp
sar
jmp
mov
add
test
push
pusha
and
test
orl
add
sub
fwait
and
stc
rcrb
mov
and
enter
cmp
incl
cmpl
adc
xor
add
pusha
mov
pushf
mov
call
out
jns
mov
mov
add
xchg
fdivrp
xchg
daa
and
lea
jg
popa
mov
cmp
xchg
cld
mov
in
int3
js
and
out
add
push
loopne
inc
push
es
add
pop
add
sbb
xor
pop
pop
gs
add
push
sub
add
dec
push
popf
daa
xchg
loopne
xorl
inc
rcrb
add
mov
sub
adc
add
add
enter
or
aas
lcall
aam
insb
out
add
push
pop
dec
mov
ret
pop
nop
movsb
push
cltd
or
je
es
pushf
add
stos
jmp
xchg
add
clc
popl
scas
add
mov
jbe
jne
add
jmp
lret
clc
pop
pop
mov
push
sub
add
dec
outsl
rclb
mov
dec
call
inc
in
jl
adc
jl
out
and
lock
inc
js
jecxz
mov
cwtl
mov
push
and
pop
in
xchg
sbb
xor
add
arpl
add
ret
adc
testl
add
cs
stos
push
idiv
ja
sbb
jge
das
mov
add
add
cmc
jle
mov
insb
js
add
and
add
add
xor
or
sbb
cmp
popl
pop
loopne
flds
ljmp
cmp
sbb
mov
ret
push
inc
xor
loopne
lahf
sub
or
mov
mov
add
and
mov
gs
xor
mov
sub
jbe
sub
popa
cmp
push
imul
add
pop
mov
pop
add
pusha
xor
pop
aam
push
pop
std
xor
int
and
fnstenv
mov
jl
rolb
adc
cmpsb
clc
add
add
in
jne
shlb
int3
push
jmp
adc
hlt
sub
dec
add
fidivrs
add
test
xor
add
pop
pop
sub
bound
push
ret
adc
cmp
mov
into
push
pop
and
pop
mov
movsl
pop
dec
sbb
es
or
add
insb
dec
xchg
adc
jl
and
sbb
push
fwait
data16
jae
pop
je
inc
orb
jl
loopne
jns
cmp
push
add
js
mov
xor
mov
loop
pop
mov
dec
aad
arpl
add
xchg
sub
lods
filds
data16
inc
les
ret
adc
mov
add
lahf
fsubs
pop
mov
in
insb
pusha
ljmp
pop
fsubrs
inc
js
add
jl
pushf
mov
addl
ficoms
mov
fninit
add
in
xor
divb
add
jmp
adc
xorb
lods
rcr
cmc
cld
dec
push
aas
dec
jo
xlat
push
xor
shlb
cmp
jmp
in
mov
jle
pop
add
sarb
dec
add
arpl
lret
pushf
das
and
add
pop
jmp
adc
ret
add
lret
lock
lea
dec
add
pop
add
add
das
push
filds
iret
push
sub
sbb
mov
pop
ud0
pop
jl
add
mov
add
pushf
sbb
add
pusha
cmc
mov
daa
push
adc
cmp
add
jbe
mov
ds
sbb
sub
adc
jmp
push
xchg
sub
ds
ja
jo
pusha
push
push
push
add
dec
and
adc
leave
and
pop
push
addb
ds
cltd
lret
stos
add
cmp
pop
ja
mov
lcall
mov
inc
rorl
fmul
inc
mov
or
int
cmp
std
addb
or
lods
or
cmc
add
jne
cmpsb
daa
mov
xorl
sub
cmpsb
insb
mov
xor
test
stc
pop
leave
xor
mov
mov
lret
sub
add
dec
mov
hlt
je
pop
mov
jo
add
lods
lcall
add
push
cld
sbb
add
push
dec
jg
cwtl
ds
adcl
add
shl
sahf
jae
or
pop
xor
bswap
repz
add
je
pop
cs
lret
pop
outsb
or
dec
in
add
shrb
pop
and
inc
pop
aas
loop
xor
jae
add
xchg
cmp
or
nop
adc
lret
pop
aaa
jne
add
sub
add
mov
hlt
add
fwait
rcl
or
xchg
mov
aas
push
pushf
sbb
leave
dec
sbbb
jbe
lods
inc
add
stos
mov
add
sub
fidivrl
pop
or
lea
mov
add
push
inc
cmp
sbb
push
add
sbb
fisttps
rol
rclb
mov
add
dec
push
std
lret
cltd
mov
cwtl
jge
mov
push
xchg
adc
les
add
leave
addl
mov
xor
sbb
hlt
ret
cld
hlt
mov
roll
lods
decb
sbb
movsl
xchg
xor
mov
pop
in
out
and
add
cwtl
das
imul
clc
and
stc
add
insb
imul
addl
cmc
stos
add
xor
jb
sbb
fwait
in
out
mov
in
adcb
mov
fmul
cmp
add
mov
popl
push
cltd
rcrl
fildll
mov
add
and
add
icebp
mov
or
lock
xchg
push
add
jb
sbb
adc
mov
cwtl
mov
pop
clc
jp
out
adc
jns
lahf
or
add
mov
icebp
mov
nop
loopne
mov
pop
add
fcoms
pcmpgtd
add
insl
jmp
mov
pop
cmpl
insb
shlb
add
cli
mov
test
call
lret
sub
adc
movsb
fs
push
addb
pop
push
fmull
xorb
xchg
add
jl
movsl
add
adc
jecxz
jg
and
dec
stos
cmp
add
xchg
sub
mov
ret
cwtl
sahf
addb
jo
notb
mov
hlt
sbb
jne
arpl
mov
and
mov
clc
add
popf
sarb
add
les
call
jno
pop
or
fcoms
push
and
cmp
fcomps
sbb
je
int3
adc
inc
add
ljmp
fiaddl
add
addr16
bound
ffree
imulb
add
mov
leave
in
das
xchg
xor
in
stc
fwait
inc
jp
jg
add
jo
push
es
or
adc
add
jb
ja
loope
jge
add
adc
nop
mov
cmp
aad
sbb
sbb
mov
outsl
out
jne
into
lods
arpl
lcall
rclb
loope
push
aam
pusha
rorl
mov
sub
add
push
adc
test
aaa
push
fiaddl
repnz
add
lret
fdivrl
xchg
iret
pop
std
fwait
hlt
mov
and
pop
add
jo
add
push
cmpsb
rolb
aas
mov
stos
mov
inc
fs
mov
pop
inc
or
nop
pop
cmp
js
adcb
or
cmp
mov
xchg
sarb
mov
pop
fwait
lcall
mov
xchg
add
std
xchg
or
aaa
cmp
push
fisttpll
xchg
add
daa
cmp
imul
add
jns
ds
loopne
sub
stos
push
add
cmp
dec
in
cwtl
cmp
and
xchg
pop
push
add
push
pop
ret
clc
stos
add
icebp
jns
call
fdivrs
dec
add
insl
imul
rcrb
add
repz
mov
add
iret
lret
xchg
push
popa
aaa
loop
sub
call
inc
dec
ds
std
mov
add
sub
aaa
loope
adc
and
mov
imul
lods
add
inc
push
in
scas
je
push
pop
mov
push
jno
pop
or
shll
clc
add
xchg
pop
lret
add
add
and
fisttpll
orb
lods
and
fwait
add
rcrb
insl
dec
add
mov
dec
jo
adc
add
lret
cmp
adc
push
out
and
sbb
out
xchg
ret
addr16
clc
push
test
mov
add
test
mov
sub
test
push
mov
loop
add
lock
mov
push
and
fwait
jno
push
mov
jne
add
sbb
pusha
roll
add
and
pop
add
popa
clc
cltd
xchg
or
and
add
aas
mov
add
lock
je
jnp
shrb
dec
daa
out
addr16
sbbl
inc
stc
in
int
pop
cli
popf
imul
or
cmovnp
xchg
mov
out
jp
decb
out
push
pop
add
push
mov
sub
jle
ss
shll
ljmp
orl
dec
fdivrl
sub
xchg
insl
add
cwtl
xchg
mov
jl
add
jo
mov
scas
cmp
pop
jno
dec
addb
add
idivl
dec
ret
mov
xchg
scas
sub
add
mov
lea
cmp
popl
xor
push
xchg
frstor
test
push
div
adc
and
arpl
mov
push
mov
sub
adc
push
clc
mov
fstp
cld
sub
mov
xor
cmpb
sar
jle
add
pop
ljmp
out
int
mov
add
or
mov
adc
cmc
push
mov
inc
add
dec
aam
lahf
add
pop
xchg
add
inc
inc
shlb
cmpl
dec
add
mov
pop
js
rorl
cmpsb
push
push
repz
outsb
inc
jmp
and
sub
xchg
scas
mov
addb
sahf
add
outsl
cmc
jo
movsl
inc
add
mov
fucomp
xchg
sbb
sbb
mov
mov
in
sbb
push
sub
sbb
xor
add
rcll
mov
push
cmp
xchg
mov
shll
fbld
dec
fmull
fwait
scas
jae
jmp
cmp
add
call
add
jne
sub
and
test
push
adc
push
xor
jmp
dec
add
add
push
in
repz
test
int3
sbb
ja
add
lea
addb
adc
sarb
mov
dec
add
mov
xchg
jle
sbbl
mov
add
sarl
shrb
push
jb
push
repz
iret
pop
inc
fucomip
xchg
and
sbb
pop
in
repnz
jb
xchg
and
mov
rolb
je
sub
fs
mov
sub
test
or
jno
push
rcr
ljmp
pop
js
push
orb
sub
adc
int3
popa
inc
scas
out
jne
cmp
adcb
push
movsb
dec
add
mov
add
pop
fsqrt
lods
das
orl
je
add
ss
mov
jmp
add
into
adc
orl
cmp
ljmp
pop
sub
push
stc
adc
enter
xor
inc
lahf
add
mov
jbe
mov
pop
and
mov
or
add
cltd
mov
das
bound
popa
les
scas
aas
push
add
shlb
aad
insl
in
adc
or
jbe
adc
test
pcmpgtd
xchg
push
shl
mov
cmpb
sbbb
gs
fidivrl
cmp
dec
jl
push
clc
adc
ret
repz
sahf
bound
xchg
push
in
cmc
movsb
or
sub
ret
sahf
sub
cwtl
mov
push
xchg
sbb
cmpsb
ja
cmp
shrl
ss
and
jmp
add
push
inc
and
rorl
jnp
icebp
inc
pop
pop
mull
nop
add
mov
sbb
mov
pop
pushf
jg
pop
mov
lods
add
loope
mov
into
mov
or
insl
push
call
pop
push
sbbl
mov
cmp
add
sahf
push
fmuls
xor
add
inc
jmp
inc
xchg
adc
repnz
aam
out
cli
pushf
add
jne
cs
lahf
sti
add
stos
ds
mov
mov
ret
add
stos
or
dec
int3
and
ret
xchg
dec
out
add
insl
call
cmp
add
push
xlat
cwtl
mov
mov
and
and
add
fsubrp
pop
mov
in
jne
cmpb
popf
xchg
shl
xor
fdiv
aas
add
mulb
stos
or
jmp
mov
mov
outsl
pop
sarb
fmuls
rcrl
cmp
flds
scas
jecxz
add
aad
fildll
shlb
sbb
movsb
xchg
push
mov
iret
fadd
add
dec
ret
rcrl
add
inc
dec
daa
sub
cwtl
fadds
shrd
bound
testb
add
fcomps
pop
aam
xor
lahf
xchg
add
sbb
jb
cltd
pop
fadds
sub
outsl
or
mov
fisubrs
sbb
cs
in
or
push
jnp
mov
pop
rcrl
das
hlt
xchg
mov
in
add
jbe
inc
push
cwtl
push
cmp
add
add
mov
es
jg
xlat
movsl
sub
scas
in
mov
fsubs
mov
std
add
jge,pn
pop
sbb
xor
add
cmp
rclb
in
xor
sti
add
testl
cmp
in
mov
push
rolb
xchg
and
inc
lcall
fiaddl
or
fistpll
iretw
mov
or
and
sbb
imul
cmp
cmp
or
xor
pushf
loopne
test
out
insb
rcrl
imul
loopne
jb
add
dec
punpcklwd
inc
or
subb
dec
cltd
fs
mov
sbb
add
mov
xor
sub
incl
or
aaa
loopne
mov
int
leave
lcall
es
addb
lock
repnz
or
cmc
cltd
ja
pop
push
mov
mov
cmpb
ds
add
mov
xchg
inc
fadds
pop
sbb
adc
mov
mov
shl
xchg
sub
and
xchg
inc
pop
bound
outsb
in
add
cmpsl
mov
cmp
mov
inc
push
pop
dec
push
push
push
std
inc
fldl
shlb
adc
xor
jb
pop
sbb
js
pop
push
cmp
sub
subb
loope
jge
cmp
adc
and
and
mov
push
add
xor
push
xor
cmp
mov
ljmpw
jae
push
cmp
jno
jge
mov
out
test
cmp
aas
cmp
pusha
inc
mov
shrl
mov
cmc
pop
fs
arpl
insb
out
ja
push
cwtl
in
jl
pusha
mov
test
ljmp
popf
add
idivl
jl
add
mov
sbb
in
or
and
add
sahf
or
das
lods
in
inc
test
cmp
fld
mov
fsub
and
sti
aad
xchg
out
ss
adc
add
cmp
jnp
lea
inc
cwtl
cmpb
cwtl
pop
push
loop
inc
push
loope
iret
mov
je
and
sbb
rclb
clc
cwtl
xor
mov
or
scas
pushf
cmpb
pop
subb
nop
add
push
ds
and
sbb
pop
pop
adc
rcrl
test
cmpsl
mov
lds
xchg
add
mov
ret
push
add
in
xchg
push
add
mov
loop
inc
fnstcw
add
jp
xor
lahf
jo
add
mov
mov
add
shl
dec
adc
test
add
mov
jle
nop
lods
in
dec
movlps
popf
jno
pop
hlt
in
inc
push
loop
loopne
js
add
xchg
sbb
or
cmp
add
xchg
mov
inc
mov
das
mov
push
rol
out
loope
mov
dec
arpl
mov
imul
add
lock
and
dec
arpl
dec
test
mov
adc
dec
mov
and
movsb
add
push
push
lods
xor
cltd
bound
mov
lcall
sub
inc
push
ficoms
dec
test
inc
cld
push
aaa
dec
mov
inc
add
dec
or
adc
pop
cmp
aad
mov
add
repnz
jmp
fadds
clc
pop
iret
mov
mov
lahf
pop
add
fnstcw
or
ds
daa
cmp
mov
xlat
jmp
mov
movsl
mov
add
arpl
push
das
cltd
mov
cmpl
add
push
push
sbb
sbb
movsb
adc
testl
or
add
adc
jo
add
aas
xlat
je
andb
xor
ja
add
sti
lock
mov
jl
mov
cmpsb
subb
rdmsr
dec
push
movsb
add
js
cmp
ret
and
aaa
and
stos
and
mov
out
or
test
xchg
fwait
pop
mov
mov
lret
lock
jo
cmp
jbe
adc
lcall
daa
and
mov
mov
ja
fisttps
push
inc
add
inc
lods
mov
xor
sti
push
fstl
aas
xchg
addl
adc
or
cmpsb
add
jb
and
cmp
jnp
cmp
or
xorb
lcall
inc
ret
roll
stos
sub
mov
int3
outsl
push
push
out
roll
add
jb
jne
jae
add
push
ret
cmc
out
add
dec
xchg
sbb
test
popa
scas
sahf
jne
add
mov
cmp
push
lret
and
push
adc
mov
dec
enter
aas
lea
sub
sbb
pop
arpl
in
daa
add
dec
addb
push
data16
mov
les
xchg
mov
add
adc
inc
addb
xchg
and
mov
mov
adcl
add
decb
adc
sub
inc
jo
lea
aad
inc
imull
adc
cmp
inc
jne
ret
addb
mov
cmp
in
dec
repnz
ds
jl
add
push
pusha
add
je
add
les
pushf
cmp
jne
mov
loope
loop
push
ljmp
loopne
lret
call
loope
frstor
movl
or
fisttpl
mov
call
pop
mov
into
cltd
pop
fs
sti
loopne
es
gs
mov
mov
insl
push
adc
bound
movsl
push
call
pop
add
data16
lahf
aas
xor
sbb
or
adc
pop
inc
movsb
aam
cwtl
pop
add
rolb
outsl
mov
adc
int
mov
cmc
inc
and
les
in
inc
dec
mov
lods
sarl
add
and
inc
pop
cmp
sbb
mov
pop
mov
sarl
scas
inc
or
adc
cld
dec
add
or
inc
rolb
leave
lcall
add
inc
push
dec
xchg
jl
and
sub
lahf
mov
test
mov
je
add
gs
mov
add
movsl
xor
inc
dec
call
setb
cmp
dec
mov
xchg
add
repz
xchg
pop
sub
sbb
into
rcrb
or
and
fwait
outsb
pop
shrl
and
out
add
and
fildl
loopne
int3
adc
pop
adc
outsb
shlb
jle
jo
cpuid
daa
out
rol
dec
inc
mov
rdrand
add
xor
andb
push
add
and
inc
inc
lds
mov
cmp
jbe
adc
nop
or
add
sbb
pop
inc
lahf
and
mov
mov
in
xor
or
out
outsb
lods
xchg
test
sahf
movsb
aam
fadds
mov
ljmp
dec
clc
dec
sbb
out
idivl
cmp
add
push
filds
fstps
mov
jnp
xchg
scas
mov
add
imul
les
add
adc
pop
jns
push
negb
movsl
lods
mov
push
loopne
js
add
or
pop
or
out
cmp
repnz
and
mov
movsb
repnz
add
int3
sarb
decl
inc
sbb
inc
add
sub
fwait
mov
jae
jb
adc
xor
add
cmp
ret
divl
mov
xchg
das
adc
test
push
pusha
sbb
aas
fs
add
lock
cmp
cmp
mov
fs
and
push
pop
dec
sahf
or
add
sti
test
and
and
ret
or
adc
inc
add
movntq
sbb
fsub
gs
jae
jne
push
add
adc
add
jge,pn
add
fs
add
mov
and
popf
cmpsb
add
add
out
mov
xchg
add
mov
inc
cmovge
push
arpl
adcl
pop
mov
add
mov
mov
out
mov
jp
mov
push
les
jae
mov
and
stos
xor
dec
ds
ljmp
imull
fnstenv
loopne
imul
jbe
nop
mov
inc
add
sub
dec
cltd
loope
and
gs
call
adc
mov
or
dec
jns
sub
jo
sub
sbb
lahf
and
loope
add
flds
out
fs
adc
mov
mov
loop
cmpsb
xchg
pop
add
adc
jbe
into
and
mov
icebp
stos
mov
cwtl
out
out
stc
sbbl
loopne
push
xor
pop
test
insl
lock
mov
hlt
mov
inc
mov
mov
nop
lock
in
or
call
mov
fcomi
aas
xor
add
cmp
loop
or
lret
xchg
mov
ds
mov
inc
sbb
sub
out
or
sbb
add
jbe
call
vpunpckhwd
and
sahf
pop
daa
add
push
pop
jmp
push
mov
mov
xlat
push
in
jecxz
push
cmpsl
sbb
ss
pop
scas
inc
push
fisubs
inc
push
cmp
pop
add
adc
adc
cmc
pop
sbb
cmp
sti
add
cld
xor
push
add
mov
mov
xor
sbb
out
adc
je
arpl
xchg
add
inc
mov
jge
add
ljmp
push
jns
cmp
jne
push
sbb
xchg
xchg
mov
enter
fcomps
in
sub
push
rcrb
cmc
lock
xor
jp
add
rcrl
cld
adc
js
add
dec
imul
aam
iret
lds
push
add
loopne
aas
push
int
out
ret
and
fbld
aas
push
mov
in
lods
sbbb
lcall
int3
negl
loop
push
outsb
popa
mov
adc
daa
addr16
push
in
add
sbb
xor
das
loop
and
cmp
push
add
sub
addb
cs
dec
jne
fimull
mov
mov
xor
cmp
add
movsl
test
inc
push
scas
sbb
into
hlt
sbb
jne
icebp
sbb
inc
outsl
les
dec
xchg
sub
sub
gs
sub
mov
dec
hlt
insl
push
xorl
push
ret
add
dec
js
lcall
scas
aas
mov
psraw
sub
or
je
push
cmpsl
jb
or
dec
mov
and
add
add
test
popf
insl
int3
xor
pusha
mov
mov
ret
dec
cmpb
out
movsl
mov
addr16
les
or
jp
mov
je
cmp
jmp
add
add
mov
sub
out
or
ds
lea
dec
pop
test
lods
mov
mov
jmp
sub
repnz
pushf
mov
jo
adc
shlb
test
lahf
scas
mov
and
mov
push
add
fwait
jne
in
add
rcrl
sbb
rolb
decb
push
jno
xchg
loop
mov
pop
sbb
stos
mov
stos
sub
sti
and
cmp
call
out
push
mov
pop
add
std
test
lea
cmp
xchg
xchg
push
stos
adc
mov
or
repz
or
into
rolb
jle
sbb
lahf
iret
mov
add
mov
call
das
testl
cld
add
call
setnp
jle
add
jl
into
testb
mov
inc
cmp
andl
addr16
subb
mov
dec
pop
in
int
out
sti
std
enter
cmp
popa
int3
or
add
adc
in
lea
stc
cmp
cmpb
into
insl
jge
into
pop
fbld
jno
jo
bound
sbb
or
and
add
adc
das
add
dec
sbb
fildl
fwait
or
xorl
inc
lret
mov
jnp
and
jbe
jns
cmp
xchg
dec
mov
stc
or
in
fistps
sbb
push
jg
add
mov
xor
add
xlat
popa
bound
dec
xor
inc
sbb
push
lods
rcrb
sub
test
cmp
jecxz
add
ret
outsl
jno
paddq
pop
mov
fnstenv
jno
pop
and
jno
sub
stos
push
xor
push
add
movsl
mov
stos
pusha
sub
xchg
inc
lods
sub
adc
shlb
add
int
ljmp
mov
and
pop
andl
mov
inc
stos
in
add
xor
fistl
push
jg
or
ja
insl
loopne
int3
popf
mov
or
add
add
je
pop
mov
adcb
sbb
jl
cmp
pop
or
inc
imul
lods
fstl
dec
add
xor
pop
scas
loop
adc
add
cmp
inc
sti
mov
jnp
cmp
push
pop
add
int3
ds
pushf
mov
mov
shll
and
test
sbb
bound
aam
add
mov
mov
sub
ja
lods
addb
fnsave
outsl
testl
fistps
movsb
clc
sbbl
inc
into
ret
movsl
xor
push
lock
out
mov
sub
mov
mov
sub
test
mov
lods
es
and
xor
mov
in
or
dec
add
mov
cmp
les
sti
fsubl
adc
pop
dec
xchg
dec
les
add
lret
jmp
mov
cmpsb
pop
push
enter
rclb
test
insl
ret
std
cwtd
xchg
add
outsl
inc
jno
sbbb
cs
pop
jmp
mov
xor
add
fdivl
mov
push
mov
cli
ret
pop
addr16
mov
lret
push
pop
popa
sbb
test
add
sub
scas
jne
mov
push
clc
fisttpll
dec
mov
pop
lock
jns
lahf
add
jo
mov
cwtl
popf
ds
addb
xchg
sub
add
sbb
aas
js
add
push
fnsave
jl
push
pop
jno
loopne
lret
pop
maxps
sub
ja
mov
add
arpl
fiadds
xchg
sub
add
mov
xor
inc
fimuls
push
std
pop
orb
nop
cmp
inc
pop
cmp
aaa
mov
push
jb
jbe
mov
test
sar
roll
ficoml
dec
addl
xchg
wrmsr
or
fmull
add
mov
inc
add
mov
inc
sub
mov
pop
adc
jae
int
add
test
mov
add
cmp
and
cmp
mov
ljmp
aad
repz
cmp
xor
rorb
ljmp
mov
mov
mov
movsl
cld
cmp
dec
adc
cmpsl
adc
cwtl
add
rcll
lea
loop
mov
mov
xor
movl
lea
add
jle
push
out
jne
add
mov
loop
add
cli
loopne
mov
pop
dec
mov
add
mov
bound
jl
shlb
mov
push
and
push
dec
lahf
fcoml
jae
pop
in
push
fucom
mov
je
add
cmovns
xchg
push
inc
movsb
mov
add
lea
mov
xor
xchg
divb
int3
out
mov
jl
add
out
ror
enter
lods
rcrl
add
loopne
pusha
jb
inc
dec
in
add
inc
push
rolb
popa
arpl
in
inc
push
dec
movsb
add
mov
xchg
xor
lahf
cmpsb
pop
dec
or
add
stos
xorl
popfw
sbb
xor
enter
add
and
sbb
mov
pop
test
jge
xorb
sbb
pop
xor
cmp
jnp
imul
stc
hlt
jg
lahf
add
loop
or
add
repz
jg
dec
fbstp
add
sub
outsb
lock
lret
mov
dec
movsb
add
push
jne
add
out
mov
push
add
cmp
mov
xchg
inc
negl
shll
inc
ret
add
repnz
repz
rclb
cmpsb
dec
cmp
push
std
mov
inc
ret
stos
inc
push
jp
and
push
sbb
or
fnstenv
lods
push
xor
add
jnp
adc
dec
sbb
enter
add
adc
lods
pop
add
jg
int3
push
int
cmp
add
sti
add
add
push
movsl
or
add
sbb
inc
sbb
call
dec
sub
mov
aam
mov
fsubrl
add
xchg
hlt
stc
jbe
data16
xor
rorb
pop
ja
std
shl
xor
cltd
push
loopne
adc
imul
push
pop
add
nop
push
inc
add
pushl
pop
push
fs
push
leave
shlb
lret
mov
mov
xor
dec
inc
rolb
shrb
fdivl
cli
stos
mov
add
imul
mov
push
cld
dec
dec
inc
lock
xor
dec
movb
rorb
lea
imul
add
jge
sbb
mov
testl
sti
nop
pop
cmp
add
shrb
jnp
mov
stc
cltd
cmp
cwtl
add
psrlq
lock
mov
xor
add
jp
inc
pop
mov
mov
add
push
or
inc
add
xor
adcb
and
cwtl
lods
sti
cld
xor
xor
xor
jne
jbe
pop
fnstenv
add
enter
shll
add
mov
lret
incl
xchg
je
std
mov
jo
dec
leave
fs
incl
inc
lahf
ja
pop
shrb
cmp
jbe
xchg
cld
jo
push
or
cltd
outsb
dec
mov
test
add
mov
xorl
sbb
aas
mov
push
adc
lea
sub
fstpl
pushl
sub
in
add
bound
outsl
cmp
div
mov
add
adc
xchg
dec
xor
dec
add
adc
mov
inc
cmp
push
in
and
adc
es
and
sub
les
add
subb
dec
movsb
cmc
add
rcrl
cmpsl
sbb
jp
fdivrs
call
inc
add
stc
add
jp
or
push
jno
sbb
pop
test
inc
push
xchg
outsl
add
jb
sbbb
cld
inc
adc
popa
pop
in
cmc
and
in
or
fisubrs
out
sbb
mov
xchg
adc
xor
xchg
mov
dec
add
pop
imull
add
jns
mov
sub
pop
add
out
iret
dec
out
fiaddl
adc
pop
cmp
aam
add
add
inc
and
mov
xchg
sub
loopne
push
xor
cs
addb
loop
fildl
cli
cmpsl
cltd
pop
jo
mov
adc
aad
nop
movb
sub
aas
jae
and
scas
or
jns
and
add
std
adc
call
fcom
popf
mov
push
mov
push
cli
add
movsl
or
imul
jo
cld
dec
jb
add
push
cmp
out
jnp
add
adc
mov
add
leave
xor
insb
pop
sub
rclb
in
inc
js
jg
clc
dec
add
lcall
push
sahf
test
jae
cmp
out
rolb
in
inc
test
dec
int3
add
jg
rcrb
fwait
daa
outsl
clc
jl
add
mov
test
xchg
adc
adc
add
inc
or
sub
loopne
or
inc
jmp
adc
icebp
pop
cmp
mov
xchg
pop
rcll
test
sub
push
push
sbb
scas
lret
xchg
jmp
sbb
jp
cs
sbb
xor
jbe
ret
lahf
mov
fcoms
nop
test
or
sbb
add
int3
inc
repnz
or
or
or
jae
sbb
out
addl
stc
and
xchg
push
shrl
int3
jmp
fdivr
jo
cs
xchg
add
lret
fimuls
rcr
les
in
incb
inc
stos
rcrb
dec
cmpsl
ret
and
mov
sarl
add
stos
mov
xchg
rcll
repnz
inc
fmuls
fstpl
sbb
int
in
les
jmp
insl
jns
cmp
stos
inc
or
xchg
cmpsb
add
into
inc
incl
adc
popa
and
loop
shrb
jmp
xchg
mov
adc
push
stos
nop
cld
add
incl
xor
lock
repnz
repnz
outsb
insb
jmp
add
jge
fs
ret
jno
add
adc
xor
mov
inc
ja
push
sbb
push
mov
int3
or
xor
jle
stos
xchg
push
dec
push
hlt
add
adc
xlat
or
dec
mov
test
adc
jl
mov
scas
mov
cltd
jnp
into
xor
mov
sbb
dec
mov
repz
add
add
insb
cmpsb
lcall
push
sbb
xchg
mov
sub
shr
or
add
in
add
sub
aam
push
pop
jo
dec
mov
iret
rolb
jmp
jecxz
push
mov
add
sti
notl
repnz
add
inc
pop
inc
push
int3
xor
sub
mov
roll
jge
add
or
in
adc
nop
hlt
adc
xor
mov
shlb
add
mov
sti
dec
popf
push
cmp
in
mov
pop
jle
call
mov
lods
shr
imul
leave
sub
add
sub
adc
pushf
cmp
aas
or
xchg
scas
inc
daa
or
sbb
mov
aad
arpl
mov
ljmp
add
sub
inc
push
push
mov
je
mov
fcmovnu
jo
and
sarl
mov
out
mov
cmp
inc
add
pop
out
jb
mov
shl
cmp
add
pop
lcall
int3
cmp
stos
mov
nop
push
movsl
add
sub
jo
lods
xchg
outsl
adc
sub
mov
jb
mov
push
inc
icebp
mov
and
sub
fcmovu
add
xor
lods
push
cmc
testb
fdivrp
ss
clc
push
add
push
add
sbb
xchg
cltd
clc
push
xor
cmp
fsubr
mov
sub
add
int
cli
jo
cmpsb
pop
cmp
inc
xchg
mov
test
jp
addr16
nop
mov
xchg
lgs
pushf
xchg
jg
pop
pop
mov
mov
cs
jp
int
xor
add
sbb
setbe
dec
lock
add
repnz
bound
clc
add
pop
ret
cmpsb
movsl
les
push
fwait
mov
push
arpl
call
inc
jbe
jns
and
sub
mov
pop
push
jp
mov
jge
and
ljmp
clc
stos
cmpb
and
cmp
sub
loopne
adc
pushf
push
jae
lods
pop
add
out
lcall
and
add
add
out
ds
cmpsl
or
pop
insl
das
inc
jbe,pn
scas
add
pop
inc
inc
push
gs
dec
add
add
pop
xor
cmp
add
cmp
xchg
repz
shlb
fstl
and
jecxz
ss
mov
push
dec
in
repnz
dec
jl
dec
inc
push
movups
mov
jbe
add
cmp
das
fwait
incl
mov
adc
cmp
stos
aas
mov
sub
movsb
insb
call
movsb
cmp
add
sub
or
adc
mov
or
das
pop
or
xchg
sub
test
sbb
pusha
inc
repnz
enter
push
adcl
dec
cmpsb
add
mov
cld
popa
lcall
inc
fisubrl
and
out
mov
xor
jge
or
dec
jle
and
lea
fldenv
pusha
sub
add
cltd
and
ds
add
mov
add
mov
negb
shll
pusha
mov
sbb
dec
mov
shlb
xchg
sub
mov
andl
cmp
sbb
xlat
push
add
and
lea
imul
push
iret
scas
cli
inc
je
add
pop
test
bound
out
nop
cmp
lods
pop
pop
add
mov
xchg
and
push
mov
add
jno
jmp
add
cld
sub
insl
jae
rcrl
mov
sahf
repnz
das
mov
ljmp
nop
add
repz
negb
ret
insl
xor
cltd
gs
in
cs
add
sub
nop
add
push
iret
or
dec
les
call
fdiv
jg
rol
bound
lcall
sbb
pop
sub
enter
sub
pop
mov
imul
loope
mov
mull
xadd
mov
jno
cmp
push
xor
fisubrs
in
add
xorl
xchg
xor
fcomi
call
cmp
add
nop
addb
fbld
mov
adc
add
movsl
push
xor
popf
subl
add
sub
push
mov
pop
add
mov
jo
sub
xor
outsl
mov
dec
cmpsl
and
and
loope
outsb
repz
hlt
femms
ficomps
daa
cmp
mov
cmp
pop
call
arpl
jecxz
call
pop
fistpl
mov
push
test
jns
dec
mov
in
sbb
aaa
push
ss
mov
out
xor
loope
and
inc
ds
in
mov
add
in
ret
mov
jnp
test
pop
lret
inc
in
loopne
loopne
loop
jo
rcl
and
xchg
adc
dec
mov
faddl
imul
mov
sbb
jne
adc
pop
add
nop
or
jb
pop
fdivp
fucomp
push
je
or
rcr
lret
xchg
add
xlat
cli
mov
jp
shlb
and
xor
add
add
js
jl
andb
pop
aaa
pop
popa
mov
loopne
arpl
dec
jmp
add
sub
rcr
insl
or
add
lock
cld
filds
addr16
cltd
ss
mov
and
adc
and
leave
jae
outsb
push
mul
jl
sbb
sbbl
andnps
fcoml
flds
aam
cld
es
call
in
addr16
in
je
je
or
movhps
popa
sbb
int3
mov
rolb
mov
out
cmc
add
cmp
pop
cmp
mov
lods
fsubl
jno
dec
cmc
daa
add
fnstcw
orb
je
push
rcrb
add
mov
jns
and
cmpxchg
loopne
pop
aas
inc
push
pusha
inc
pop
add
arpl
int
add
dec
add
xor
fwait
loope
rorb
loopne
push
mov
sub
dec
add
xchg
stc
lret
mov
cmc
add
cmp
adc
mov
inc
repz
add
call
test
cmpb
cwtl
add
stos
add
popf
scas
pop
cmp
add
push
xorl
sub
xor
andb
and
xor
pop
xchg
xor
sbb
mov
or
fadds
push
pop
outsl
jmp
mov
ja
repz
je
cld
andb
lret
add
lea
mov
sbb
add
fcmovb
jge
inc
mov
sbb
and
sub
psubusw
ljmp
adc
test
adc
es
call
cmp
fadds
mov
xlat
jecxz
pop
cmp
fwait
sbb
sarb
addb
pusha
xchg
pusha
mov
mov
sarl
adc
ljmp
jo
ret
jne
nop
rclb
out
pusha
mov
mov
mov
xor
mov
roll
pop
lret
adcl
xlat
aas
mov
fsubs
or
add
clc
and
arpl
push
insb
mov
jne
test
and
sub
and
adc
fcompp
add
or
cmp
push
add
push
push
sahf
and
push
sub
dec
add
add
call
dec
mov
xor
std
roll
xchg
adc
lds
push
pop
cmp
inc
cmc
cli
das
mov
or
xchg
add
push
addb
or
cmp
ds
shlb
add
aas
add
or
jae
add
xchg
fsubl
cld
cmpsl
rcrb
rolb
mov
jle
add
aam
xchg
sbb
or
inc
xchg
stc
addb
add
push
inc
dec
pop
mov
inc
push
or
ss
fidivrs
jle
mov
cmp
push
fnsave
add
sub
mov
add
add
fmuls
adcb
shl
mov
dec
test
sbbl
jg
push
xchg
pop
int
cmpsb
jg
sub
mov
scas
mov
mov
jo
jl
movsb
mov
mov
out
imul
add
shlb
mov
into
sub
bound
pop
adcl
mov
popa
add
dec
or
jbe
push
dec
clc
scas
ds
jnp
or
test
in
es
adcb
sub
jno
mov
push
sub
leave
add
adc
cmp
sub
adc
pop
rorb
push
scas
fsubl
cmp
andb
outsl
jbe
mov
mov
mov
clc
jo
inc
xorb
add
pop
sbb
mov
decl
add
stc
and
cmp
test
add
out
adc
pop
stos
outsl
subb
add
and
loope
ds
fwait
push
add
xchg
test
subb
or
pop
aas
mov
movsb
movsb
mov
repz
inc
sub
test
fs
stc
aad
sbb
jge
and
shll
push
mov
ljmp
outsl
mov
mov
shlb
push
add
stos
lret
mov
inc
push
xchg
and
out
add
add
add
js
pop
and
inc
xor
jno
mov
sbb
inc
fxch
arpl
jnp
jo
sti
jne
or
xchg
inc
jo
or
arpl
in
add
pop
fists
fisubs
je
sbb
scas
pop
popf
cmp
cmc
daa
xchg
lret
test
flds
sub
lret
jmp
xchg
mov
or
ja
cmpb
arpl
dec
and
rorb
mov
imul
lods
out
jmp
in
add
js
cwtl
and
add
jecxz
adc
or
cld
ret
out
sbb
hlt
mov
adc
addr16
pushf
xchg
jnp
sbb
inc
mov
fsts
cmp
push
push
adc
movups
mov
pop
dec
inc
xor
jge,pt
push
fildl
jns
aam
or
jp
or
pop
xor
and
daa
cmp
adc
in
js
lcall
ret
jl
jo
xchg
lods
out
cwtl
xlat
sarb
mov
add
addb
testl
loop
and
add
mov
clc
fwait
xchg
dec
aaa
and
lea
or
in
cmp
push
cltd
adc
inc
xor
and
movsb
jb
les
imul
ret
movsb
push
cmp
arpl
fildl
xchg
sub
test
cmp
add
lods
adc
jns
stc
xchg
jnp
loopne
dec
adc
inc
hlt
and
imul
fidivrs
and
add
ror
lahf
push
in
aam
mov
ret
call
inc
test
xchg
inc
cwtl
and
movsl
pop
adc
and
xchg
call
lret
loopne
mov
push
xchg
add
shl
dec
mov
add
jns
add
sbbl
popf
xchg
xchg
repnz
outsl
push
xor
add
rcr
pop
les
test
push
add
adc
xor
dec
add
aam
addr16
mov
add
adc
sub
xchg
outsl
xor
add
leave
fidivs
mov
push
cmp
fsubr
sahf
test
sbb
cmp
cmpsb
jl
xchg
dec
movsb
int
rol
pop
test
inc
add
gs
stos
movsb
pusha
rorl
scas
pop
es
jl
loope
mov
and
pop
mul
mov
in
sbbb
loop
mov
mov
cmp
in
add
push
int3
xor
inc
test
pop
movsb
cmp
push
mov
repnz
xchg
push
sub
cmpsl
pop
push
ds
lcall
mov
sbb
xchg
push
xchg
stos
adc
adc
xor
add
push
sub
push
pusha
mov
inc
repnz
or
jmp
mov
sarb
dec
push
dec
xchg
xchg
jle
jmp
pop
subb
cmpsl
aas
pop
mov
imul
leave
arpl
addb
dec
enter
pop
sub
cmp
es
test
push
sub
arpl
inc
or
mov
cmp
scas
int3
popa
lret
xchg
insb
popa
xchg
mov
or
cwtl
pushf
inc
call
scas
adc
mov
inc
in
popa
xchg
push
cwtl
shlb
sar
rorl
jbe
rorl
les
cli
mov
mov
pop
gs
mov
subl
test
addb
ljmp
imul
hlt
ret
or
pop
shll
inc
mov
sbb
jmp
call
lods
xchg
pop
xchg
mov
add
test
mov
mov
sub
lcall
adc
push
sbb
mov
into
inc
enter
adc
add
aad
pop
hlt
frstor
loope
dec
cwtl
and
push
sti
xchg
sbb
pop
mov
mov
add
sub
dec
mov
cli
fwait
jge
mov
test
je
cs
inc
jno
loope
hlt
add
sbb
adc
add
loop
dec
cmp
sahf
movsl
std
emms
les
pop
or
adc
add
jb
jl
jne
xor
in
dec
sbb
mov
xor
and
nop
sarb
add
scas
jno
jle
and
mov
imul
fisubrs
js
or
add
es
into
add
inc
and
mov
stos
push
andl
lahf
xchg
std
popa
adc
adc
cmp
adcb
mov
adc
xor
pop
test
add
xchg
ljmp
lods
sbb
sub
ror
in
dec
test
shrb
push
add
xchg
ds
or
rorl
mov
les
add
pop
lock
mov
leave
inc
or
fdivl
pusha
pop
cmp
push
add
scas
push
aaa
jnp
je
enter
jo
adc
jle
cmp
xchg
xchg
sub
and
jns
out
mov
cltd
add
xchg
inc
out
xchg
lods
add
adc
arpl
cmp
xor
inc
and
test
add
mov
xchg
xchg
inc
and
jle
pop
adc
cmpb
subb
jae
add
movsb
leave
lods
fistl
pop
sub
add
cmp
xor
rcll
xor
mov
xchg
jge
aaa
hlt
pusha
pop
in
and
add
and
and
sbb
xlat
xor
leave
inc
mov
cltd
aaa
push
subb
test
mulb
push
ljmp
rcr
and
add
mov
inc
lret
and
lea
add
loope
jne
fbstp
pop
and
lret
out
pop
mov
cmpb
repnz
sub
maskmovq
notl
into
pop
and
cmp
add
fs
aas
add
push
mov
mov
adc
adc
ret
ds
add
cwtl
jb
xchg
mov
pop
and
push
clc
push
rcll
mov
decb
and
mov
xchg
dec
push
inc
sub
pop
xor
mov
xchg
outsb
in
cltd
pusha
orb
push
out
mov
add
sub
fiadds
xchg
add
xchg
xchg
jge
and
je
jno
lock
or
pop
call
sbb
std
fnstenv
and
cltd
push
inc
xor
mov
hlt
jns
or
pop
cmp
jbe
mov
xchg
jl
cmp
shlb
iret
cmp
mov
inc
std
add
or
mov
call
ss
adc
jo
into
and
xchg
les
lock
mov
push
loop
in
xchg
add
fidivl
shlb
adc
mov
pop
or
mov
add
outsb
mov
mov
add
adc
popf
mov
mov
and
jo
push
scas
fsubs
lock
adc
fisubs
das
call
mov
test
lcall
xor
mov
push
push
xchg
sbb
in
adc
mov
lods
add
xor
mov
test
add
mov
inc
into
sbb
nop
xor
popa
cwtl
xchg
push
js
rclb
fldenv
adc
mov
enter
pop
and
jge
cmp
aas
cli
adc
jmp
and
cmp
dec
sbb
repnz
pop
enter
sbb
dec
inc
repnz
add
shrb
movsb
sub
xchg
xchg
pop
pop
insb
and
test
add
xchg
sub
rolb
pop
mov
dec
pop
mov
rorb
mov
and
dec
adc
xchg
lds
aas
xor
sub
add
bound
aam
push
xor
or
mov
add
mov
out
pop
adc
lahf
push
and
inc
dec
negb
add
mov
push
pop
mov
adc
clc
rolb
cmp
mov
faddl
lods
jbe
roll
cmp
mov
fs
jp
add
ret
sub
mov
js
das
xchg
mov
inc
insb
inc
jnp
imul
fisttps
pop
and
bound
nop
lea
std
add
xchg
or
mull
lcall
lret
pusha
in
cmp
cmp
outsl
adc
pushf
mov
mov
inc
or
add
dec
lea
inc
cwtl
push
mov
sub
sub
fs
or
add
insb
or
fmuls
imul
mov
std
test
xchg
fidivs
inc
or
fcomps
jb
pop
adc
adc
fidivl
add
fdivs
adc
les
xor
loop
jno
sub
or
out
out
inc
jmp
dec
fs
sub
in
in
loopne
add
dec
int
dec
call
hlt
nop
mov
fsubrl
enter
jns
dec
xor
and
jno
xor
xchg
rcll
imul
and
loope
sbb
cmp
add
hlt
aam
and
sub
jmp
sbb
bound
xor
cmp
ucomiss
shl
xchg
inc
ret
pop
aam
pop
add
outsb
ljmp
adc
insl
inc
fcomps
pop
jg
jecxz
adc
add
and
sub
lock
test
mov
in
shlb
add
outsl
sbb
pop
jl
xorb
push
xchg
or
and
sub
nop
dec
and
and
inc
xchg
and
mov
lock
adc
pop
dec
dec
cs
xor
call
rclb
adc
mov
in
int3
add
mov
popf
add
rclb
mov
in
inc
fimull
pop
pop
call
adc
inc
xchg
cmpsb
add
xor
mov
mov
or
scas
or
rcll
mov
add
sbb
push
clc
out
pop
push
pusha
clc
mov
popl
sbb
stos
leave
cmp
mov
iret
fwait
add
cmp
push
pop
jge
in
push
mov
add
adcb
and
xchg
add
xchg
add
loopne
fdivrl
mov
and
in
push
fsubrl
je
icebp
sub
push
xchg
add
xchg
scas
push
lock
mov
in
mov
add
xchg
sbb
inc
cmpsl
mov
xchg
xchg
pop
sub
sub
add
imul
mov
pusha
in
add
xchg
sub
cmp
jns
adc
mov
imul
mov
adc
sbb
orb
sub
xchg
jle
dec
fcoml
in
cli
mov
dec
add
xorb
xchg
add
mov
out
or
into
int3
es
cmp
xor
es
xchg
ds
jp
enter
lods
leave
mov
mov
xchg
xchg
rcrb
or
mov
add
out
and
jno
sub
cli
inc
xchg
dec
sbb
and
cwtl
adc
xchg
jns
inc
flds
cmp
pop
add
out
inc
sub
adc
adc
mov
fmul
push
jle
jne
std
test
shrl
xor
es
push
add
mov
int3
inc
je
cmp
xor
sub
pop
ss
les
test
dec
cmp
and
scas
mov
dec
test
mov
push
mov
inc
push
clts
add
or
pop
xor
test
adcl
mov
mov
lods
inc
fs
rcr
dec
test
fxch
mov
jbe
add
mov
cmp
pusha
add
scas
or
aad
add
cmp
fdivrl
test
and
push
jo
lcall
je
imul
mov
stc
pop
push
and
js
xchg
fimuls
push
icebp
daa
dec
movsb
inc
adc
adc
popf
and
mov
pop
add
xchg
dec
and
cwtl
and
inc
ds
jmp
fsubr
mov
rol
sahf
popa
icebp
mov
bound
addr16
jl
xchg
jle
cmp
mov
push
xchg
xchg
mov
sbb
jge
outsl
mov
xor
dec
or
call
fcom
sarb
xchg
inc
sub
andl
cmp
add
negl
sbb
repz
loop
int
pop
test
movsl
fnclex
jo
adc
incb
jp
cmp
jmp
sub
fsubrs
sub
mov
sbb
mov
jb
cs
pop
ffree
dec
pop
jbe
mul
or
movsb
adc
mov
jne
jge
add
shl
outsb
cmp
and
mov
leave
cmp
sbb
lods
xor
and
push
dec
loopne
jecxz
pop
cmp
movsb
adc
inc
dec
and
mov
arpl
cmp
xchg
add
addr16
mov
add
rolb
aas
jl
jbe
fsubl
or
sub
inc
xor
add
lods
ficompl
add
mov
cmova
sub
push
jns
mov
jne
rolb
add
fsts
mov
bound
out
sbb
mov
shll
test
ds
or
in
ja
outsb
sub
add
pushf
inc
dec
push
pop
xchg
mov
push
mov
inc
shl
ja
sub
popf
subb
lcall
and
test
ja
adc
lea
dec
lret
sub
pop
aam
adc
imul
lahf
pusha
shll
call
aad
add
ljmp
ss
add
stos
jg
pop
mov
fimull
les
cld
out
inc
bound
adc
add
cwtl
push
inc
scas
mov
and
lock
cmpsl
insb
mov
in
int
add
addb
cmp
inc
push
xor
loopne
mov
loopne
jl
jmp
in
and
pop
inc
ja
mov
inc
testl
icebp
inc
push
pop
inc
mov
in
and
add
stos
xchg
mov
dec
repnz
fs
sub
jmp
int3
sbb
dec
adc
subb
push
aad
test
mov
ss
add
cltd
cmp
mov
push
cmp
push
imul
mov
push
push
cmpl
mov
xchg
cld
insb
add
clc
dec
mov
add
adc
cmp
add
ja
push
xchg
out
out
jb
and
rolb
inc
sbb
movsb
xchg
mov
cmp
pop
adc
out
mov
push
mov
jmp
lods
sbb
sbb
pop
loopne
scas
incl
cld
imul
push
insl
clc
inc
mov
pop
shrb
xor
fiaddl
push
xchg
add
xor
add
push
inc
repz
movsb
jns
add
insl
add
inc
icebp
movsl
andb
jge
jo
xor
loope
jl
ret
jge
fadds
add
les
fwait
enter
add
cld
jecxz
pop
jae
pop
mov
scas
sbb
dec
lret
leave
fsub
and
inc
subb
out
pop
dec
jle
add
in
sti
xchg
xor
jo
stos
xchg
cltd
push
mov
sub
mov
fistl
sbb
je
sub
xchg
add
lret
repnz
repz
and
adc
add
cltd
scas
cwtl
xor
mov
xchg
lods
xor
mov
insb
mov
pop
add
sbb
lret
je
push
addps
test
imul
ficoml
mov
adc
fwait
and
sub
cmc
rolb
add
es
jb
cmp
sbb
hlt
int3
rcrb
add
and
je
leave
aas
push
daa
int
lret
nop
int3
divb
mov
fldcw
mov
and
pop
mov
fsubp
mov
push
adc
sahf
cmpsb
pop
or
shll
push
sub
add
cmc
xor
mov
mov
out
popa
sub
out
test
pusha
add
or
divl
ret
add
add
fnstenv
dec
cmp
rcrb
sti
dec
xor
sbb
or
jg
add
xor
fiadds
pop
cmp
or
mov
pop
add
test
jo
xchg
ret
popa
in
dec
adc
out
and
stos
rdpmc
leave
add
pop
xchg
movsl
dec
addb
jnp
adc
bound
xchg
repz
sub
cs
cmpsb
je
inc
addr16
xor
xchg
out
cmp
mov
jle
inc
fsubs
cmp
jae
jo
or
add
out
mov
lock
jns
lcall
add
add
mov
add
adc
shlb
loopne
sub
into
das
add
mov
rcll
lods
leave
mov
mov
popf
add
add
jecxz
dec
leave
sbb
lods
and
roll
cmp
arpl
into
cmp
out
sahf
add
sub
mov
test
and
inc
cmp
inc
test
jno
mov
loope
sub
scas
or
mov
cmp
xchg
jns
pushf
inc
xor
adc
inc
cmpps
repz
or
out
sub
lcall
mov
mov
mov
imul
mov
cmpsl
repz
xorl
cli
lea
cwtl
cwtl
dec
pop
mov
mov
xor
adcb
sahf
popf
jbe
add
popa
push
int3
mov
and
int
jl
test
xor
mov
fwait
cmpsb
jmp
cltd
cmp
xchg
push
or
pop
push
add
pop
hlt
mov
inc
add
scas
inc
mov
xchg
test
or
pop
test
mov
and
in
add
xchg
xchg
je
ret
inc
clc
xchg
adc
and
movsb
in
add
cld
pop
dec
loop
es
sub
push
ret
lods
jnp
xor
mov
push
outsl
inc
cld
addb
call
fmuls
add
add
or
xchg
clc
mov
push
and
and
xor
dec
jmp
dec
dec
out
adcl
xor
cmp
movsl
inc
jle
or
pop
sub
test
aad
mov
add
fdivr
and
jl
xlat
mov
xchg
pushf
divl
andb
mov
loope
mov
sub
xchg
mov
ret
inc
lods
outsb
test
dec
pusha
adc
rorb
loop
add
dec
adc
xor
cmp
and
add
testl
adcl
xlat
cli
pusha
xchg
clc
call
cmp
xorb
xorb
sbb
dec
add
movsl
cs
add
xchg
out
and
loop
shrb
fbstp
lcall
push
fnstenv
xchg
and
mov
ds
mov
add
sbb
push
loope
jo
daa
add
xor
cltd
clc
add
into
inc
mov
inc
or
fstpl
mov
inc
xchg
mov
fsubl
ds
add
jp
jp
add
push
or
add
mov
insb
mov
lret
xchg
pusha
les
js
push
sbb
mov
add
adc
sub
xor
add
and
mov
out
nop
mov
into
fs
imul
pop
fwait
push
adc
jae
nop
movsl
adc
mov
inc
mov
add
add
dec
ds
or
fcoms
fisubrs
xchg
test
adc
rolb
sbb
mov
loop
xor
sub
outsb
sbb
enter
ds
test
and
jo
xchg
push
cwtl
inc
dec
cmpsb
inc
mov
ljmp
loop
jnp
jge
xor
fdivs
mov
mov
movsl
in
push
sbb
mov
add
loop
xchg
cmp
pusha
dec
xor
je
and
dec
ret
jne
imul
sar
pop
in
xchg
push
mov
pop
fdivrs
mov
fdivl
add
jl
test
mov
push
mov
popf
xchg
mov
dec
mov
mov
fidivs
dec
fldt
sub
cs
adc
cwtl
mov
cmc
jnp
xor
cmpsl
movsl
sub
rclb
mov
js
aam
pop
les
jl
sarb
adc
popa
adc
dec
add
add
leave
xchg
mov
icebp
lods
pop
mov
and
cmp
or
cmpsb
push
lea
xor
es
and
inc
sub
sti
aam
push
and
hlt
and
imul
add
add
xchg
jl
les
push
push
sbb
in
std
test
ret
cmpsl
mov
jo
pop
je
add
ja
jecxz
cmp
add
ljmp
ret
add
frstor
push
mov
repz
or
dec
jg
js
jl
idivl
sub
push
and
inc
mov
inc
decb
add
xchg
jb
inc
and
sbb
xor
push
ror
ja
jecxz
pop
mov
xchg
add
iret
int3
sbb
movl
dec
jae
lods
push
fstps
inc
adc
repnz
addl
cmpsl
std
adc
test
mov
add
xor
mov
out
vcvtpd2dqy
mov
pop
or
je
lret
lock
das
mov
ja
sbb
push
mov
inc
repz
pop
and
sub
cmpsb
mov
pushf
add
jecxz
movsb
leave
jp
lock
mov
repnz
pop
je
stc
add
jnp
jne
mov
sub
bound
jmp
dec
add
adc
popa
call
mov
pop
je
scas
push
dec
les
cmovns
push
xchg
test
adc
xor
js
pop
xchg
pop
adc
push
ret
xor
inc
adc
orb
mov
incl
add
cmp
pusha
or
les
fcoml
jmp
test
mov
and
dec
stos
movsb
mov
fsubrl
xchg
add
cmp
and
test
xor
sbbb
xlat
out
nop
in
inc
or
daa
mov
or
add
cmp
adcb
movsl
nop
pushf
push
add
aaa
iret
and
cs
js
dec
in
push
mov
gs
ljmp
pop
lea
adc
aam
call
cmp
inc
subb
ss
inc
repnz
or
adc
mov
lock
mov
cmp
lret
mov
add
je
and
mov
push
add
addr16
mov
sbbb
pop
fidivrl
loopne
in
xor
daa
mov
cld
jp
jo
cmp
hlt
fwait
inc
xchg
dec
xor
cmp
mov
lock
add
call
jno
js
lcall
mov
out
cmp
add
push
sahf
cmp
cmp
inc
sbb
push
cmp
jle
stos
outsb
pop
or
add
outsl
test
dec
add
je
addl
mov
push
hlt
clc
lods
sbb
mov
cli
add
mov
das
inc
int3
fdivr
sbb
xchg
adc
mov
out
out
push
mov
bound
and
push
jae
xchg
pushl
adc
mov
cmp
sub
rcrb
dec
xchg
xor
insb
lock
addb
add
cmpsl
rcll
jb
lahf
adc
adc
jnp
adc
and
push
lret
dec
pusha
cwtl
push
xchg
pushf
dec
inc
xchg
adc
pop
lret
pop
mov
xor
jno
std
add
adc
repz
insb
lock
add
inc
in
dec
and
push
xchg
aaa
fisubs
cmp
pop
cmp
and
inc
jl
jg
bound
adc
repnz
call
in
shlb
and
loope
push
add
sub
xor
xchg
xor
ljmp
add
ss
bound
sbb
pop
pushf
or
outsl
add
adc
and
cmp
mov
adc
out
repz
loopne
stos
inc
pop
adc
lock
or
push
mov
clc
xchg
or
push
and
cwtl
out
mov
pop
dec
mov
xchg
and
sahf
adc
or
push
test
push
adc
cmpsb
aam
jbe
add
enter
fstl
daa
jmp
mov
mov
cld
pop
cmp
dec
popa
in
add
xlat
jge
xchg
test
repz
test
dec
adc
xor
cmpl
cwtl
or
lret
out
and
sub
in
aam
sub
pusha
pop
out
adc
lods
in
add
dec
movsb
loope
cmpsb
rolb
out
jecxz
cli
mov
cmp
push
sub
pop
cmp
fldt
mov
dec
shlb
mov
add
syscall
or
xchg
adc
imul
pop
cmp
mov
clc
cld
mov
les
stc
test
jl
adc
push
push
xchg
std
in
xchg
lcall
fistpll
flds
aaa
lret
mov
fdivl
mov
push
shrb
and
add
test
pushf
movsb
mov
add
mov
lret
mov
aaa
sahf
dec
inc
xchg
imul
cmp
insb
add
rol
sub
movl
mov
pop
scas
gs
in
int
sarl
fs
xor
sub
add
dec
xchg
and
add
push
jl
roll
int3
adc
mov
jg
and
inc
roll
insb
jae
dec
adc
mov
cmp
adc
pushf
cltd
and
movsb
add
in
mov
cwtl
aam
movsl
and
xchg
sub
cmp
test
adc
les
jne
hlt
in
rorb
fiadds
les
xor
popl
rcl
adcb
or
mov
loop
negl
fadds
leave
add
mov
sbb
call
inc
cmp
icebp
push
cmp
push
inc
sbb
jae
sbb
pop
sub
mov
xchg
pop
sbb
xor
stos
add
sub
sub
adc
roll
sub
xchg
jne
cmp
popf
or
out
mov
mov
inc
mov
test
test
ret
shlb
inc
or
shrl
mov
add
sti
add
add
push
pop
adc
test
sbb
add
push
arpl
xchg
inc
sbb
xor
pop
in
lock
xchg
pop
dec
xchg
push
call
sbb
movsb
or
out
dec
call
fimull
add
xchg
out
or
fsubrs
adc
mov
inc
out
leave
sub
inc
mov
pop
lret
mov
enter
ror
jg
movsb
fsubl
add
cwtl
xor
xchg
loope
and
pusha
mov
sbb
mov
dec
sbb
xor
jp
les
inc
mov
icebp
roll
hlt
xchg
pop
ds
mov
xchg
adc
add
sarl
jp
call
or
sub
adc
fadds
sub
push
inc
mov
cld
sub
push
pop
and
xor
orb
mov
push
clc
or
enter
insb
popa
push
adc
xor
mov
into
pop
and
sbb
mov
cmc
inc
push
out
xchg
mov
add
xchg
gs
sbb
xor
mov
popa
jo
lret
ret
mov
std
adc
add
sbb
inc
mov
es
mov
push
add
stos
xlat
ja
dec
movsb
aam
push
xor
push
sub
mov
daa
push
imul
std
shrl
adc
rorl
or
mov
lea
inc
hlt
sbb
rcl
adc
jb
stc
xchg
adc
movsl
mov
and
xchg
and
rcrl
add
pop
test
add
in
mov
mov
sbb
lds
adc
fisubrl
sub
daa
bound
adc
bound
dec
jle
shll
sarl
shlb
xor
add
cld
add
fcomps
pop
adc
test
adc
adc
aaa
movlps
out
or
cmp
int3
shrb
popf
fmull
add
sub
cmp
std
mov
rcll
cmp
lret
shlb
mov
mov
mov
shl
cwtl
mov
add
popf
iret
imul
lret
mov
jno
pusha
sub
test
sar
add
out
cld
mov
bnd
mov
xor
jno
mov
setg
scas
mov
sub
mov
and
jecxz
inc
xor
test
gs
movsb
pop
iret
jae
repnz
push
ror
mov
cmp
mov
out
mov
mov
cmp
cmp
bnd
pop
daa
mov
xchg
cmp
enter
jo
fsubrs
cmp
jmp
out
adcb
add
cld
add
into
out
stos
cmpsl
inc
loop
rclb
lcall
fnsave
mov
or
add
mov
jl
ljmp
xchg
cmc
add
jle
push
and
or
scas
mov
mov
xorl
mov
andb
or
jl
mov
ret
lcall
add
aaa
shlb
xchg
pop
jb
lock
inc
and
imul
js
repz
adc
pop
inc
outsb
psubsw
pop
cmp
push
test
in
dec
pop
mov
pusha
inc
repz
addb
mov
je
cwtl
xlat
mov
dec
add
pop
shll
mov
xchg
xor
push
incb
jnp
mov
mov
sub
subb
dec
arpl
hlt
mov
fsubp
and
pop
fmuls
in
sub
orb
inc
in
jbe
lea
jp
add
jmp
cmp
arpl
scas
mov
mov
mov
sbb
jmp
dec
mov
xor
mov
mov
adc
mov
cs
cli
mov
push
aaa
cmpb
loop
fildl
es
mov
push
test
hlt
and
std
mov
mov
idivl
pop
xchg
pop
sub
pcmpgtb
add
inc
push
jb
dec
mov
push
es
cmp
add
cmpb
push
jno
cmc
pop
lret
in
sti
push
mov
lock
lea
mov
stos
push
enter
adc
js
adc
xchg
push
sbb
mov
pop
or
xchg
mov
xchg
int3
add
adc
out
movl
xchg
sub
jg
mov
add
dec
and
or
cmp
or
dec
add
xor
int3
popf
cwtl
add
fidivs
and
inc
jl
xor
lock
pause
pop
in
push
in
sub
push
loope
lock
cmp
aas
arpl
es
int
shlb
jmp
fidivrs
sti
add
dec
mov
dec
dec
pop
mov
xor
pop
and
movsl
add
fcoml
and
jnp
push
xlat
in
and
movsb
add
sahf
leave
test
jp
or
enter
sub
in
add
sbb
sub
addr16
push
cmp
ret
mov
dec
add
jmp
bound
icebp
ret
mov
dec
js
cmp
xor
mov
nop
add
cmp
movsb
int3
and
push
mov
push
mov
add
cltd
lcall
or
out
loope
fbstp
and
daa
movsb
mov
lock
inc
add
or
test
push
dec
in
pop
aam
adc
je
in
mov
cmp
test
xchg
js
dec
add
push
lods
jg
iret
jae
add
xchg
incb
pop
cld
mov
cmp
cmpsb
sub
inc
xor
mov
add
push
loop
pop
adc
dec
popf
and
faddl
and
cmpb
test
shr
mov
lods
ret
cmp
dec
inc
iret
fsubrs
and
loopne
leave
xchg
mov
imul
les
xlat
shll
xchg
sbb
and
popa
lds
push
stos
scas
dec
inc
and
push
push
stos
ret
push
mov
les
xchg
pop
fiaddl
dec
mov
bound
add
shll
push
cltd
rolb
and
xor
adc
cmp
pushf
mov
adc
lods
mov
jbe
pop
inc
jl
lcall
mov
cmp
mov
sbb
outsb
je
sub
pusha
pop
add
mov
je
int3
loopne
cmp
adc
fadds
and
out
lcall
rolb
sub
pop
popf
dec
mov
jecxz
sarl
popf
test
sbb
mov
mov
adc
cmpb
lret
pop
rcrl
enter
inc
fnstcw
add
mov
jl
add
out
mov
or
enter
nop
lods
les
and
enter
add
sub
les
xchg
xlat
or
adc
lahf
dec
in
add
cld
loope
or
mov
test
aas
xchg
fcoml
in
xchg
and
dec
mov
pop
xor
sub
fmul
push
insb
cmp
clc
xor
mov
cmpsl
hlt
adc
sub
popf
pusha
test
adc
push
pusha
flds
sub
add
enter
nop
out
and
pop
frstor
adcb
lret
mov
add
fwait
je
jg
stc
int
pushf
push
add
add
popf
xor
inc
out
fisubs
pop
sbb
testb
pushw
and
nop
hlt
jecxz
inc
pusha
lret
sarl
sub
cmp
lds
jae
and
push
add
rclb
out
and
add
cmp
add
pop
ret
mov
push
and
mov
and
xor
push
jne
call
sbb
lahf
int3
fcompl
add
adcl
xor
sbb
and
dec
loopne
push
mov
ret
xchg
loopne
scas
lds
adc
ret
cmp
fnstsw
popa
pop
or
or
sbb
and
pusha
ljmp
scas
fisttpll
daa
mov
lods
jno
add
and
dec
mov
adc
xchg
outsl
pusha
aam
je
add
mov
mov
and
dec
add
sbb
add
fnsave
cltd
xor
daa
jg
push
cwtl
add
dec
push
testb
xlat
or
xor
sub
in
sub
and
ds
loope
inc
jle
outsl
push
pushf
hlt
fst
and
sbb
inc
add
sbb
add
testl
lock
clc
pop
pop
and
inc
pop
cld
add
jg
fs
mov
sub
add
in
jnp
mov
push
cmp
pop
sbb
and
daa
stos
and
mov
test
fisubl
mov
pop
js
jg
rcrb
mov
inc
xchg
rorl
shrb
lods
aaa
add
aas
fdivr
inc
ljmp
testl
ds
mov
cmp
add
jmp
jns
jg
loope
jge
hlt
sbb
insb
mov
scas
fisubl
sub
push
movsb
push
ss
shl
bound
clc
jecxz
xchg
imul
cld
mov
mov
loopne
cli
sar
in
fbld
mov
dec
jne
push
fnstsw
add
imul
js
add
pop
push
fsubs
inc
lods
js
and
jno
out
adc
push
sbb
mov
fnsave
dec
sbb
sarb
dec
and
adc
add
int3
nop
adc
ficoms
xchg
xor
movsb
adc
inc
lret
loop
js
adc
mov
dec
xchg
cmpsl
std
sub
cmpb
add
inc
cmc
fimuls
bound
test
mov
xchg
mov
flds
jae
cli
sbb
in
cmp
int3
xchg
adc
or
jmp
add
cmp
jne
paddd
in
sub
lock
add
mov
scas
inc
mov
popa
cwtl
sub
add
xor
mov
inc
fidivrs
rorl
pop
mov
roll
movsb
enter
inc
cmp
adc
and
mov
or
nop
push
out
insb
mov
push
fidivrs
inc
jbe
test
imul
cmp
xchg
test
mov
fsts
xor
add
mov
insb
sahf
in
das
out
popa
adc
mov
adc
jg
test
sbb
mov
lock
sahf
popf
out
cmp
mov
ficompl
push
les
inc
shl
add
iret
mov
sub
push
out
dec
insb
stos
dec
repnz
xchg
jge
mov
adc
adc
dec
ss
and
jl
mov
shlb
stos
sti
data16
sub
in
jne
nop
movsb
in
xchg
js
clc
mov
fs
out
jno
pop
fidivs
icebp
aaa
add
xchg
fistpll
add
add
dec
mulps
lret
adcl
leave
mov
push
mov
pop
mov
faddl
rclb
jp
add
add
mov
rclb
xchg
ds
mov
sbb
xchg
rclb
add
dec
and
clc
je
ss
imul
push
inc
mov
jne
adc
adc
or
or
pusha
jne
pop
enter
cs
xorb
or
push
mov
inc
push
or
psubsb
shr
subb
cli
cltd
jle
lds
fsubl
pop
add
pop
subb
test
mov
jl
mov
jns
push
pop
and
or
sbb
jge
xor
das
nop
dec
mov
jl
movsb
imul
insl
pushf
dec
adc
loop
mov
call
js
push
mov
jle
xchg
adc
stos
mov
xchg
int3
add
push
fidivl
aas
xor
xchg
es
ds
sub
mov
loope
sub
jns
lods
pcmpgtd
jno
ljmp
jnp
push
test
cmp
sbb
repnz
ljmp
scas
add
inc
fiaddl
cmp
leave
stos
push
inc
test
mov
mov
fisttps
xor
and
dec
mov
mov
mov
andb
pop
andb
xchg
pop
lea
add
jmp
addr16
cmp
daa
rcrl
adc
cld
into
mov
int
cmp
sbb
pusha
in
cmpsb
cmp
or
out
add
ss
hlt
sbb
sbb
pusha
pop
push
pop
dec
and
mov
lock
imul
inc
lret
data16
or
push
adc
add
dec
pop
or
insb
inc
dec
mov
aas
jne
out
cmp
xchg
add
sbb
and
fiaddl
sbb
sbb
cwtl
adc
mov
sbb
sbbl
lahf
loopne
jno
lahf
test
cmp
and
stos
nop
test
stos
dec
add
movsb
pop
add
sarl
enter
xor
pop
test
inc
adc
push
in
dec
shl
mov
add
in
cmp
or
loopne
mov
xorb
and
rcll
pop
and
lock
or
mov
mov
loopne
dec
loop
stos
add
jecxz
jle
call
orl
inc
popa
sub
lds
frstor
mov
daa
in
dec
inc
push
pop
sar
call
add
sub
push
fiadds
repnz
addps
pop
mov
hlt
add
jns
xor
inc
fildll
add
xlat
mov
cld
mov
lahf
fdivl
pop
xor
dec
add
jne
in
into
xchg
jnp
mov
mov
cmp
cs
xchg
mov
cltd
pushf
xchg
test
sub
std
cmp
inc
fnstsw
inc
aas
add
fcoml
mov
cmp
or
mov
jno
sar
inc
jmp
mov
or
fsubrs
jg
pop
es
mov
rorb
in
mov
inc
lret
cmc
call
rolb
lock
xchg
jl
inc
shl
sub
dec
sbb
notb
xchg
mov
add
dec
inc
sub
inc
lahf
andl
or
movsl
enter
inc
and
in
rcrl
xchg
mov
pop
push
adc
sbb
xchg
add
lahf
mov
sub
or
adc
test
pop
or
inc
enter
popl
fsubs
popf
stos
inc
sub
sbb
les
jge
mov
enter
inc
int3
jae
rolb
in
pop
jg
dec
pop
enter
in
nop
ret
lock
cld
jg
add
popf
in
add
cmp
cmp
nop
mov
adcb
adc
mov
stos
pop
sub
add
adc
xor
and
loop
push
and
shll
fdivs
mov
push
pop
insb
add
xchg
xor
pop
dec
jg
movsb
mov
cld
cmpb
jne
aaa
call
int3
xchg
cwtl
mov
jge
xor
add
dec
mov
ja
pop
scas
and
cmpsb
xchg
push
add
aam
inc
xchg
push
mov
add
dec
mov
jg
nop
movsb
jb
enter
in
sbb
xchg
nop
inc
pop
mov
decl
inc
pusha
xchg
jmp
imul
aaa
or
insb
cmc
dec
and
popa
mov
out
add
xchg
std
test
mov
cmp
ret
jl
sti
add
cmp
push
and
mov
loopne
xchg
fsubrl
and
arpl
add
pop
loop
or
lahf
fisttps
lock
insb
iret
std
addr16
pop
mov
lods
add
dec
repz
dec
lock
push
adc
push
iret
mov
dec
out
mov
add
divb
and
mov
or
dec
inc
and
pop
dec
or
pop
xor
dec
add
fidivrs
or
jle
mov
and
sub
pop
cltd
add
sbb
or
mov
lds
js
inc
jo
inc
test
fwait
jp
add
adc
or
in
xchg
or
roll
and
pop
enter
lret
xchg
xor
xchg
dec
add
fsubl
pushf
or
inc
lret
push
mov
pusha
test
movsb
arpl
or
popf
cmpsl
test
fmulp
sbb
or
in
out
stos
test
ja
repz
mov
mov
inc
lock
fistps
test
xor
jle
mov
add
shrb
fnsave
or
add
push
in
or
pop
pop
test
and
inc
cmp
sub
mov
dec
and
sub
inc
rclb
stos
orl
clc
mov
fmull
notb
pop
fcoms
push
movl
int3
out
lmsw
mov
xor
arpl
pop
mov
inc
xchg
cmpsl
insb
jl
test
out
lods
test
outsl
enter
xchg
sbb
fs
pop
jmp
xchg
mov
mov
adc
jmp
mov
jecxz
rolb
int
enter
xchg
or
inc
lahf
xchg
mov
cmp
pusha
lods
xor
push
pushf
ret
in
xorl
mov
dec
repz
xchg
jae
dec
jbe
cmpsl
daa
lcall
jno
add
movsl
xchg
cmp
and
test
rorb
push
add
push
xchg
aam
push
cmp
lods
nop
adc
mov
inc
subl
int
out
or
mov
test
add
adc
push
adc
dec
pushl
bnd
fildll
inc
mov
cmp
jns
and
xchg
insb
scas
or
jg
popa
pop
and
loopne
jl
xchg
pop
repz
or
add
sbb
push
enter
xchg
dec
or
nop
call
movsb
pop
fcoml
or
dec
sub
add
sub
setg
mov
xorb
mov
mov
pop
imul
addl
cltd
mov
subb
jo
in
cld
adc
in
mov
inc
loop
int3
sbb
fldenv
push
inc
lret
adc
push
xchg
mov
in
cli
jb
test
pusha
es
mov
mov
adc
push
add
ds
ret
xchg
int
aad
in
pop
mov
dec
scas
jecxz
fs
add
xor
sbb
fcomps
jo
daa
xchg
push
jns
insb
fldln2
dec
jl
clc
pop
lds
movsl
jecxz
jb
sbb
cmp
cwtl
sbbb
xchg
es
popf
and
add
in
sahf
dec
or
test
mov
out
pop
stc
xchg
inc
call
xor
in
loop
in
inc
gs
add
xor
fldcw
xor
push
xlat
insb
add
lcall
faddl
in
lret
and
or
push
add
dec
sbbb
jne
sub
mov
jno
hlt
cmp
nop
mov
push
cmc
inc
nop
lock
push
and
inc
adc
push
nop
jge
inc
sbb
sbb
daa
repnz
icebp
jge
push
pop
push
dec
dec
js
mov
inc
cmpb
cmp
xchg
add
cmp
adc
negb
cmp
inc
push
mulb
inc
and
mov
les
add
rorb
movsl
push
adc
push
and
scas
or
push
or
add
add
add
xchg
adc
cmp
and
adc
jg
push
repz
xchg
add
iret
das
sbb
adc
jle
add
xchg
nop
add
add
fcoml
adc
out
xchg
or
cld
and
lock
sbb
and
add
out
jbe
add
and
rorl
arpl
and
test
xor
mov
enter
add
mov
pop
in
pop
and
icebp
mov
mov
sarl
scas
pop
je
sub
adcb
sarb
add
inc
dec
sub
fmuls
leave
es
je
adc
std
loop
fcoml
xor
and
mov
mov
xor
xchg
pop
xor
les
jo
jmp
pop
jns
fucom
adc
lret
in
and
fs
add
pop
or
lock
repnz
jl
cmp
xorl
pop
push
shlb
mov
lret
mov
push
adc
xor
mov
sbb
jne
jo
clc
lcall
push
lds
xchg
cmp
or
popf
int
mov
test
dec
dec
sub
mov
push
cmpb
sti
sub
xor
or
add
push
test
cvtps2pi
adcb
and
sub
jp
mov
les
mov
xor
sahf
aam
jmp
pusha
add
dec
rol
fwait
out
add
mov
cmc
xchg
xor
mov
add
push
cmp
push
add
test
repnz
cmpl
cwtl
add
jo
jns
push
sub
mov
aas
nop
mov
push
add
out
mov
scas
mov
pop
popf
adc
add
pop
cwtl
fmuls
loopne
and
enter
mov
clc
mov
sbb
mov
add
subl
push
js
push
xor
nop
and
add
repz
add
xlat
repz
push
cld
or
push
sub
ficoms
sub
push
pop
aam
and
mov
dec
mov
sub
fsubs
loop
add
fwait
repz
js
and
enter
add
add
shll
push
les
out
pusha
xor
and
adc
or
mov
cmp
xchg
push
sub
in
add
mov
add
fs
std
jp
fiadds
cmp
loope
or
inc
dec
es
push
sub
cwtl
dec
out
rcr
test
pop
call
js
jl
and
cld
adc
pusha
add
lock
add
add
stos
mov
inc
cmpsl
shrl
mov
add
jb
aad
mov
sbb
dec
or
mov
lcall
ljmp
out
xlat
inc
hlt
pop
sbb
sub
or
into
jg
aad
xor
xchg
leave
pop
loop
dec
add
cmp
imul
or
test
repnz
aas
inc
push
lret
mov
and
add
stos
bound
inc
dec
add
mov
mov
imul
push
gs
scas
mov
mov
jo
ret
jne
add
lret
xor
icebp
roll
inc
and
mov
pop
xchg
add
cmp
inc
sbb
add
adc
repz
push
insb
adc
ss
stc
and
int3
in
add
inc
pop
mov
aas
ds
xchg
pop
cs
push
js
sub
aam
xor
int3
sbb
xchg
cmpb
movsb
add
test
push
adc
or
in
je
scas
fdiv
fs
faddl
pusha
inc
mov
dec
lds
push
push
pop
push
cmpl
test
dec
mov
add
sbb
sub
xor
nop
push
pop
movsb
and
nop
jo
lea
jl
rorb
lods
add
hlt
sub
movsb
aas
jbe
inc
or
push
and
loope
std
adc
adc
xchg
inc
push
mov
inc
adc
imul
xchg
xchg
xchg
nop
add
push
ss
add
mov
add
jmp
repnz
xor
push
mov
push
cmpb
les
xor
sub
dec
mov
aaa
inc
or
aas
mov
dec
add
fmuls
xchg
mov
fs
cmp
push
test
or
lds
idivl
fucomip
sub
icebp
std
scas
xor
pushf
and
lea
adc
xlat
repnz
clc
jmp
arpl
les
push
push
lds
imul
call
push
out
clc
into
mov
jno
mov
push
rcrb
sbb
ss
js
jg
and
push
add
lahf
pop
add
cmp
pusha
inc
sub
adc
fiaddl
sti
xor
push
mov
call
scas
inc
sub
or
mov
cmp
jno
sti
xor
add
mov
mov
jle
cmp
pop
pushf
sub
clc
movl
push
ja
out
sub
rol
call
daa
xor
lock
cmpsb
add
inc
in
and
test
in
add
dec
jmp
test
adc
js
sub
push
jle
add
cmpsb
rorl
cli
ret
test
out
in
test
test
inc
mov
movsb
lods
mov
cmp
push
cli
pop
arpl
imul
jl
inc
sahf
add
inc
fbld
pop
repz
lods
orl
adcb
jo
add
dec
je
add
loopne
xor
inc
sbbb
xor
mov
mov
push
ljmp
or
sub
sti
sbb
add
aad
test
out
cmp
into
mov
inc
inc
cwtl
pop
mov
push
test
mov
and
dec
mov
in
cmpsl
test
repnz
and
popf
or
movntq
shl
cmp
addb
cli
ss
movsb
adc
jno
add
icebp
inc
into
jmp
cs
rolb
pop
mov
imul
cmp
mov
cmp
mov
adc
dec
jp
jns
insb
loope
je
adc
push
or
cmp
xchg
movsl
inc
dec
cld
sbb
call
jnp
cmp
lods
add
jae
out
cld
mov
fnstcw
data16
bound
dec
mulb
call
aaa
insb
and
add
sub
push
cmpb
dec
cltd
inc
in
std
add
push
out
mov
mov
xchg
or
xchg
cwtl
pushf
adc
mov
add
xchg
aaa
dec
mov
cmp
data16
mov
sbb
xor
dec
rolb
add
mov
inc
ficoms
push
movb
jmp
sbb
pop
out
clc
add
mov
lea
ficompl
cwtl
sbbb
adc
mov
notb
jo
mov
push
adc
lock
dec
inc
repz
pop
repnz
icebp
sub
adc
outsl
mov
dec
out
aad
orb
insb
test
xchg
push
pop
add
lcall
or
add
dec
fwait
test
xchg
dec
xor
shrl
jb
mov
bnd
push
enter
pusha
subl
jmp
icebp
jp
insb
adc
jge
pop
mov
add
leave
lds
adc
jecxz
fs
lock
add
mov
pop
gs
out
inc
sbb
add
pushl
test
in
and
lret
add
push
testb
out
js
push
aas
xor
xor
testl
dec
ficoms
jae
pushf
add
inc
sub
or
orl
aaa
and
cltd
inc
push
mov
enter
sub
cwtl
data16
mov
pusha
jnp
cwtl
sub
sarl
mov
cmp
sub
cmpsl
jle
push
fcomip
rcrb
add
add
cmp
inc
scas
jl
cmp
push
xor
jle
sub
je
cwtl
aaa
adc
enter
xchg
ja
into
arpl
in
add
jp
loopne
data16
fmull
lods
lcall
mov
fwait
loopne
add
insl
popf
sub
push
mov
jnp
mov
pop
call
aas
jp
andb
xor
stos
jae
add
jecxz
enter
popf
push
pop
je
pop
repz
movsb
add
push
mov
sub
out
inc
or
mov
push
xchg
xchg
ds
pop
mov
and
les
add
mull
xlat
ret
add
rclb
push
add
pop
rcrb
or
xor
add
rclb
xchg
mov
call
decl
stos
lock
add
xlat
sbb
push
filds
and
sbb
rolb
push
int
push
ror
loope
test
cwtl
pusha
div
nop
lods
imul
mov
inc
test
sub
out
into
imul
xor
lret
push
cmpsl
mov
xchg
test
add
inc
jl
mov
out
ds
xchg
in
dec
fs
sti
subb
ss
mov
mov
add
inc
js
nop
and
add
cli
inc
add
loopew
sub
cmp
lods
push
and
incl
pop
jbe
push
lock
cmpsl
cwtl
loopne
adc
js
test
inc
add
ljmp
adcb
ror
jb
inc
xchg
sub
and
data16
mov
imul
jnp
adc
and
icebp
je
add
loopne
in
out
xchg
imul
out
mov
mov
mov
lock
add
and
scas
nop
push
clc
xchg
add
shl
sub
pusha
mov
add
addr16
pop
flds
xchg
lcall
pop
mov
mov
pop
nop
pop
pop
inc
jnp
push
in
dec
jle
add
popf
jb
mov
outsb
xchg
add
lock
out
dec
mov
push
xchg
add
icebp
cmp
add
or
subb
xlat
roll
xor
inc
in
or
dec
sub
xchg
repz
push
push
repnz
icebp
icebp
add
xor
gs
pushw
movsl
out
pop
jle
sub
jnp
pop
jo
pop
inc
mov
push
mov
lods
push
notb
xchg
xor
sahf
ret
jg
add
jecxz
orb
jp
mov
insb
punpcklbw
fists
icebp
push
std
mov
mov
daa
xor
cld
scas
sub
inc
out
pop
dec
add
mov
fs
inc
pop
out
mov
ret
cmp
cwtl
adc
sub
mov
or
sub
cmp
dec
push
jge
aas
push
dec
data16
mov
mov
shrl
pop
xchg
insl
pop
scas
les
xor
add
adc
mov
lock
pop
divl
inc
es
adc
add
sub
stc
into
mov
push
loopne
add
in
sbb
movsb
mov
dec
sbb
mov
push
and
sbbb
rclb
sahf
cmp
xor
enter
mov
adc
adc
inc
push
jge
test
sbb
add
mov
bound
mov
daa
subb
popa
push
aad
adc
jp
adc
not
add
shrb
xlat
jae
jle
cmp
mov
nop
imull
out
or
lock
std
push
inc
pop
iret
sub
jo
cmp
scas
lahf
dec
jno
hlt
fildll
add
jne
and
inc
add
sarl
imul
test
test
push
aas
xchg
cwtl
pop
enter
cmp
pop
xchg
adc
push
add
push
dec
add
sbb
stc
cld
aas
dec
push
fldcw
lods
mov
push
mov
in
add
cmp
dec
xlat
add
mov
add
enter
mov
repz
aas
sbb
lret
add
stos
icebp
adc
mov
adc
adc
or
push
sbb
sti
add
fisttps
pop
push
xchg
mov
mov
sub
lret
nop
test
cmc
add
dec
fs
fs
mov
loop
cmpb
pop
and
adc
es
ret
add
xchg
addr16
inc
jno
rclb
pop
dec
mov
mov
xor
cmp
shr
ja
push
adcl
mov
and
test
repnz
xchg
dec
pusha
sbb
jo
add
adcb
sahf
nop
mov
adc
mov
adc
add
das
addb
out
sub
je
int
call
push
scas
sub
pusha
loope
icebp
add
xchg
pop
es
std
into
fcmove
or
leave
shlb
test
hlt
shlb
mov
sbb
mov
xchg
sahf
shrb
movl
clc
fwait
dec
ja
daa
or
and
add
xchg
or
pop
arpl
and
mov
cmpsb
insb
sbb
jnp
neg
or
sahf
imul
add
mov
insb
pop
fcomps
adc
xor
repz
sub
and
push
jmp
mov
cvtps2pd
insl
jne
push
or
add
lock
shrl
cmp
add
dec
mov
or
and
jecxz
sub
jle
gs
dec
xor
dec
ret
jge
sub
jo
fmuls
mov
push
cmp
dec
out
outsb
mov
and
adc
mov
or
faddp
pop
arpl
xor
movsb
inc
in
xor
dec
jmp
ficoml
add
lods
pop
incb
loope
int
and
and
test
add
pop
cld
fldl
xchg
inc
sarl
mov
loopne
xor
mov
add
mov
enter
add
or
imul
insb
add
mov
enter
mov
dec
je
pop
dec
sub
pop
lret
movsl
sub
enter
cmp
pop
jge
rcrl
test
fwait
cmpsl
jbe
inc
or
lds
subb
sbb
mov
aam
dec
clc
movsl
sbbb
pop
aad
enter
xor
in
mov
adcl
add
jmp
jb
push
sahf
dec
pop
rorb
lret
xor
mov
movsl
sbb
movsb
cmp
mov
sub
mov
or
sahf
xchg
aam
shll
xchg
or
push
and
pop
lea
adc
jne
and
jle
fs
cmp
mov
mov
cmc
add
push
stos
jg
and
call
xchg
filds
mov
inc
bound
out
cmp
enter
andl
and
jbe
inc
loopne
gs
or
or
sti
cs
mov
dec
mov
cltd
sbb
mov
push
mov
popa
call
call
popf
call
mov
and
pop
stos
mov
rcrb
std
pop
dec
das
nop
add
out
cld
sub
jns
inc
cwtl
xor
add
mov
ret
test
imul
hlt
rorb
out
mov
add
or
jns
out
push
fwait
leave
add
test
jp
es
cmp
xchg
jns
sub
stos
mov
fistpll
push
dec
and
fadd
dec
jle
fwait
adc
add
dec
dec
fs
xor
sub
push
clc
mov
sub
fdivs
sarb
cmp
jmp
lcall
or
fisttps
adc
rolb
in
mov
mov
std
fs
pop
loopne
jne
clc
pusha
arpl
push
hlt
popa
mov
aam
testl
inc
mov
mov
add
inc
in
lret
clc
push
inc
jl
pop
fisubrl
dec
jae
pop
jo
xchg
cwtl
aad
xchg
testl
dec
outsb
cltd
repz
adc
or
xchg
add
cmpsl
add
push
rorl
daa
adcb
ja
cwtl
xchg
sub
test
add
lods
cmp
sarb
mov
test
iret
cmpsb
jmp
push
pop
cmp
dec
sti
fwait
fs
hlt
lret
sbb
sahf
insb
or
mov
push
iret
sub
repz
mov
xchg
adc
aam
lea
push
shr
dec
imul
or
or
xchg
mov
pop
add
inc
cmpsb
xlat
jo
inc
cmp
les
dec
stc
faddl
mov
cld
lods
sbb
in
nop
xchg
mov
cmpsb
dec
or
test
sbb
loop
jge
mov
test
sti
adc
push
sub
jl
add
jg
cmp
stc
sbb
mov
mov
dec
ja
sbb
cwtl
sub
in
insb
cmpb
jl
in
pushf
pop
call
pop
xlat
loope
and
lods
and
mov
mov
insb
xchg
rcr
pop
jne
push
arpl
enter
call
fs
ss
loopne
call
pop
in
jns
xchg
adc
pop
jno
shll
mov
loop
pop
cmp
fisubl
clc
xlat
js
add
pushf
enter
mov
fmuls
sub
xchg
xchg
cltd
movsl
sbb
mov
dec
inc
xchg
dec
or
mov
adc
dec
and
fnsave
in
xor
xchg
push
lock
dec
dec
mov
add
aas
push
repnz
movsb
inc
imul
popa
dec
mov
or
adc
pop
ret
popf
imul
push
xchg
or
rcll
inc
das
add
fisubrl
je
cmp
or
sub
pop
cmp
addb
roll
or
jae
loopne
test
pop
add
add
push
notl
inc
dec
int
pop
cwtl
sub
mov
dec
dec
mov
out
add
xchg
fsubrp
adc
cmp
in
movsb
call
in
cmp
gs
sub
movsb
dec
jae
test
mov
add
adc
sbb
and
testb
bound
dec
sub
push
push
addl
nop
add
loope
imulb
je
jge
adc
add
mov
mov
push
add
les
sarl
pushl
adc
bound
mov
or
icebp
mov
enter
ja
sub
popf
pop
lods
mov
je
jno
lock
aas
adc
cmpsb
nop
add
sbbb
orl
sub
mov
cwtl
jg
bound
pushl
in
je
stc
jbe
pmullw
pop
fildl
xchg
add
mov
scas
jp
add
dec
cmpsb
das
shll
dec
jns,pt
in
sub
movsl
sbbb
mov
mov
xor
pop
pusha
sbb
pop
xchg
jae
lock
add
dec
and
sub
icebp
sarb
rcll
testb
pop
insl
mov
adc
push
jae
push
push
dec
jg
shl
mov
push
lods
in
adc
roll
pop
inc
xor
mov
repnz
mov
add
std
lods
popa
test
xchg
add
add
pop
ja
cmp
popf
rcll
cmpsl
mov
sarl
push
dec
lods
inc
out
mov
je
icebp
and
sbb
insl
xlat
mov
stos
add
sub
sbb
iret
repz
and
cmp
mov
je
ret
push
dec
mov
mov
les
and
jl
mov
sub
jle
ds
dec
cmpsl
movlps
addb
lods
push
add
movsb
loopne
call
pop
jmp
add
mov
loope
into
dec
stc
inc
mov
adc
inc
gs
push
addb
scas
cmovs
push
or
adc
cwtl
xchg
xchg
fcoml
sar
fsubs
mov
int3
adc
or
sti
pmaxub
daa
dec
mov
mov
pop
std
dec
mov
cld
add
ljmp
inc
and
push
adc
sbb
xor
mov
loopne
mov
sbb
cmp
mov
sbb
adc
popf
dec
aad
movsb
cld
mov
jbe
add
mov
lods
push
inc
out
js
or
adc
pop
jmp
addb
out
pop
dec
lcall
push
xor
mov
shl
divb
add
rorb
sar
pop
cmp
xchg
and
icebp
mov
sbb
arpl
es
add
cmp
cmpsb
pop
bound
add
dec
pop
idiv
inc
dec
push
adc
mov
cmp
and
gs
cmp
add
fsubs
out
pop
and
dec
push
enter
push
lods
test
cmp
mov
adc
add
jns
dec
xchg
ja
test
xor
jnp
xor
inc
xor
test
lock
hlt
adc
cs
lahf
and
jae
add
gs
sahf
lods
and
jns
cmc
popa
xchg
push
xor
pop
inc
sarl
add
add
bound
add
jl
rclb
xchg
xor
andb
jo
in
popa
imul
add
and
adc
loope
fildl
in
and
gs
loopne
lods
inc
jle
pop
push
rorl
inc
repnz
adc
fs
jo
loopne
je
inc
sub
push
test
popa
mov
popf
add
inc
int
out
push
ja
adc
cmp
dec
add
testl
or
fsincos
popa
add
pushf
add
pusha
rclb
mov
adc
xor
lret
mov
push
adc
xchg
ja
jae
fidivrs
inc
or
out
clc
jmp
cwtl
pusha
inc
sub
pop
imul
shl
fbstp
add
mov
roll
rol
sub
sarb
mov
addr16
xchg
xchg
and
test
or
loopne
inc
push
mov
push
sbb
inc
adc
cmp
mov
pop
add
lds
in
xchg
popf
call
ds
sbb
add
aaa
push
dec
jmp
into
add
iret
adc
add
bound
sub
adcl
inc
inc
push
movsb
mov
pop
scas
add
insb
in
xlat
xchg
adc
cld
push
je
or
xor
or
out
leave
add
movswl
fcmovbe
push
mov
mov
cld
sub
adc
das
push
sbb
int3
sbb
xor
xor
cltd
aaa
sarl
ss
adc
add
iret
ficompl
test
or
sbb
push
aaa
xchg
and
fisubrs
rorb
cs
outsb
add
sub
add
mov
jns
jl
or
out
jno
aam
push
add
pop
xor
fistps
pop
mov
mov
jo
inc
xchg
jo
leave
mov
mov
cs
pusha
cmp
jo
loop
pop
sub
add
push
lahf
cmpsl
repz
cmp
iret
cs
add
stos
enter
jne
pop
lret
pusha
mov
add
lea
das
movsl
add
stos
xchg
jne
out
call
mov
or
arpl
and
mov
test
test
stc
mov
mov
pop
fimull
lcall
loopne
mov
filds
dec
sub
or
ficompl
or
data16
cmpsl
arpl
cmp
push
mov
cmp
loop
xchg
and
dec
dec
into
add
mov
jle
add
or
pop
inc
xor
inc
aam
pusha
or
and
cmp
add
dec
subb
mov
in
inc
pop
aaa
pusha
pop
mov
add
add
out
cltd
pop
lcall
testb
lahf
mov
repz
mov
das
lods
shlb
xchg
sbb
inc
inc
mov
data16
pop
mov
je
dec
inc
out
and
leave
pushf
xor
push
add
ffreep
insb
jb
call
or
adc
js
mov
add
cli
les
and
fsubs
cwtl
out
loopne
push
push
movsb
fwait
jl
sbb
cs
in
mov
out
and
push
lock
inc
out
mov
nop
push
subb
jle
aas
cmp
mov
sub
in
mov
cmp
das
rolb
jnp
add
sbb
imul
cmpsl
cmp
mov
push
cwtl
cmpsb
clc
and
sbb
jecxz
mov
mov
add
or
add
stos
sbb
pop
adc
imul
mov
pusha
sbb
dec
pop
mov
in
push
add
inc
test
ljmp
pop
adc
and
and
adc
mov
mov
fsubrp
or
test
pop
xlat
and
loopne
mov
std
xlat
add
jne
outsl
inc
inc
call
cmp
js
rcr
cld
add
add
clc
cmpsl
lcall
dec
add
mov
mov
pop
ljmp
inc
inc
mov
pop
cmp
lahf
add
roll
pushf
push
xchg
jnp
jecxz
sub
lods
mov
sub
sbb
cli
shll
faddl
dec
loopne
jmp
ljmp
stos
inc
lret
cmp
mov
inc
mov
push
fistpl
dec
fistpll
xor
dec
and
or
mov
insl
jp
add
aas
fwait
push
adc
les
lcall
pop
or
inc
insl
mov
cmp
pop
pusha
lds
sub
jmp
add
pusha
sbb
jno
xor
popa
add
les
sub
and
add
adc
add
loope
mov
mov
mov
xchg
xor
arpl
and
aaa
add
inc
jbe
ds
lret
xorb
dec
loopne
dec
cmp
addl
xchg
mov
dec
aam
aad
pop
cmp
sub
clc
pop
mov
cmp
sub
add
popf
jnp,pn
and
adc
shl
andb
or
mov
mov
adc
jl
inc
test
jae
add
mov
int
sub
pop
sub
xor
sub
cmp
aam
loope
fwait
stos
addb
dec
addr16
out
xor
add
loopne
roll
dec
call
xchg
sbb
jmp
nop
scas
faddl
or
mov
in
mov
aas
cmp
xchg
adc
lret
xor
bound
adc
movb
mov
insb
pop
sbb
jbe
mov
out
cs
inc
and
test
add
jne
push
sbb
scas
pop
cmp
adc
pushf
inc
push
arpl
je
or
jg
cmp
xchg
xchg
add
jb
add
xchg
stos
out
pop
leave
cmp
sub
add
or
mov
clc
adc
ret
rolb
nop
and
mov
xor
xor
into
shrb
push
mov
iret
add
outsb
enter
sbb
mov
sub
cmpsb
add
je
inc
ret
xor
and
ret
sub
rorl
loopne
call
cmp
fsubs
sbb
stos
cmp
mov
push
mov
mov
xlat
and
out
les
xchg
outsb
mov
xor
pop
test
lock
cwtl
std
stos
mov
pop
push
xor
sub
mov
mov
lods
stc
dec
mov
les
adc
lds
or
inc
stos
push
add
sbb
clc
ret
mov
mov
pop
cltd
lds
inc
jle
mov
icebp
aad
notl
dec
outsl
dec
add
ret
mov
and
xor
sub
xor
sbb
lcall
arpl
sahf
addl
clc
or
jne
jmp
inc
jmp
mov
xor
stos
push
popa
scas
add
mov
lcall
dec
out
pop
push
pop
and
dec
adcb
and
test
in
mov
das
scas
add
popa
pop
pop
mov
sarl
in
mov
add
xchg
mov
pop
add
sub
movsb
mov
or
clc
pusha
loopne
mov
rolb
sbb
mov
mov
sub
cmpb
aam
outsb
stc
fcoms
movsb
push
xchg
push
inc
dec
in
add
fwait
aad
mov
mov
sub
or
xor
add
add
push
aam
mov
or
loopne
movsb
inc
enter
dec
push
inc
pop
adc
adc
jge
cmp
movsb
enter
sub
loope
test
or
add
in
data16
push
jmp
das
clc
mov
loopne
dec
sbb
sbb
in
ja
in
add
loop
xchg
xchg
push
mov
and
jnp
add
adc
pop
adc
jb
inc
sbb
cmp
xchg
jne
mov
out
movsb
adc
ret
sahf
adc
pusha
adc
icebp
and
sub
push
nop
loop
add
adc
cltd
in
mov
les
cli
push
popa
cld
loop
out
and
mov
stos
mov
cltd
jecxz
add
and
rcll
out
jmp
pop
testl
out
lock
stos
push
addb
mov
dec
sbb
xchg
pop
hlt
xlat
xor
inc
movb
mov
mov
lds
and
scas
mov
pop
lret
add
lcall
cmp
and
mov
sbb
jo
jle
fimull
cmp
daa
hlt
imul
lds
mov
mov
mov
mov
lahf
stc
rolb
mov
jmp
push
push
sub
xorb
cwtl
pop
rcrl
push
mov
pop
shlb
inc
push
pop
cmp
pop
in
push
shl
bound
add
daa
and
out
ds
xorb
testl
ja
rclb
add
pop
jmp
aaa
dec
ficoms
mov
add
out
je
mov
fsubs
inc
int3
icebp
xor
mov
add
push
cs
scas
mov
mov
or
into
and
jl
je
sarb
faddl
pop
pop
shrl
dec
addl
rdtsc
cmp
add
dec
dec
or
out
scas
sbb
add
les
mov
cli
in
cs
pop
cmpsb
adcb
negl
push
xor
rorb
orb
cmp
mov
ljmp
jmp
push
adc
dec
lret
add
lock
or
and
es
shl
push
add
andl
icebp
push
and
loopne
xchg
sarb
scas
lret
mov
in
pop
mov
xchg
mov
cli
adc
jle
imul
or
adcl
rcll
hlt
mov
das
pop
xorl
or
sbb
lea
cmp
dec
imul
or
test
add
sub
inc
inc
popf
add
jae
xor
out
dec
and
into
cld
nop
lea
pusha
add
push
enter
mov
das
adc
mov
lea
subb
daa
lods
push
sub
fisttps
pop
fs
add
loop
leave
add
adcb
into
push
mov
add
push
in
lds
daa
sbb
cmp
adc
mov
sahf
push
dec
bound
jl
jb
jo
in
loop
rolb
mov
push
mov
out
jp
dec
adc
add
cmp
add
pop
dec
daa
mov
test
outsl
inc
pusha
cmp
add
dec
fldenv
sub
adc
add
out
les
call
and
xchg
test
dec
mov
test
xchg
pop
add
add
mov
dec
sub
adc
lea
or
lret
movaps
xlat
lock
or
out
mov
dec
inc
sahf
add
inc
jns
add
cltd
lret
pop
std
lods
lret
dec
and
adcl
scas
insl
loop
cs
cwtl
inc
lods
pop
sbb
or
cs
mov
leave
out
jo
in
adcb
mov
cli
dec
push
int3
add
pushf
fisttps
leave
sub
fsubrs
stos
jnp
scas
testb
mov
test
mov
pushf
rolb
std
or
icebp
daa
or
lds
and
xor
push
adc
lods
adc
dec
sub
pop
adc
sarb
add
mov
mov
andb
ljmp
jg
and
mov
dec
test
inc
xor
enter
test
outsl
int3
cld
add
addl
into
add
ret
testb
cltd
add
mov
xchg
cwtl
gs
add
clc
ret
fnstenv
xchg
lock
adc
add
data16
cmp
jns
aas
xchg
xor
out
pusha
sbb
sub
adc
ss
dec
mov
adc
scas
fs
jne
and
pusha
movsl
js
or
xor
jno
ss
iret
test
xchg
sbb
add
pusha
stos
inc
jae
inc
add
outsb
dec
fidivrl
adc
inc
sub
sarb
rolb
jbe
adc
test
nop
pop
pusha
cli
ja
or
xchg
push
jp
js
outsl
add
shl
add
jno
mov
cli
xchg
push
ds
cmp
mov
jno
mov
je
mov
pop
movb
pop
ja
ljmp
mov
add
ficompl
mov
xor
or
add
out
xchg
jnp
xorl
or
shll
aaa
push
repnz
xchg
shll
outsl
loopne
rcll
cmp
xor
inc
sbb
mov
fsubl
cmp
addl
mov
mov
inc
push
xor
dec
ja
dec
cmp
mov
jne
xor
enter
push
jge
lea
adc
xchg
sbb
push
stos
fdivs
add
xchg
pusha
bound
roll
and
mov
pop
cli
mov
lcall
mov
mov
insl
xor
movsb
clc
add
repz
add
push
cmc
jne
cmp
fiaddl
pop
sub
inc
shlb
push
aam
jnp
adc
popa
xor
adc
dec
orl
push
adcb
xchg
and
out
movsb
lahf
cli
clc
andb
xchg
mov
pop
ret
shll
in
push
pushf
sbb
js
xchg
fs
ss
jbe
add
ret
add
subl
mov
movsb
popa
scas
testb
mov
nop
int3
cltd
add
pop
rol
adc
add
lods
bound
loope
pop
ret
jne
inc
out
lcall
pusha
mov
pushf
add
lock
ret
cmpsb
mov
shll
mov
xchg
jno
outsl
jp
out
outsl
adcl
push
mov
lret
xor
mov
cltd
repnz
mov
popa
cmp
insb
jbe
jns
roll
sbb
arpl
insb
mov
int3
add
subl
jns
cmp
adcl
cmc
add
arpl
in
or
jge
xlat
addr16
test
pop
push
sub
fimuls
jae
pop
mov
out
cmpl
dec
or
lcall
and
movsb
je
popf
pushf
enter
adc
mov
test
les
sbb
mov
and
mov
jno
push
cmp
popf
xor
push
jp
jb
cmc
js
dec
enter
fwait
xchg
mov
sbb
add
ret
or
push
add
ss
lret
leave
mov
gs
and
inc
sub
adc
mov
add
add
jle
lds
sub
adc
or
mov
roll
scas
mov
or
cmp
or
push
shlb
lds
orb
mov
aas
cwtl
mov
scas
push
mov
sub
lret
in
jmp
daa
outsl
out
and
lcall
je
xor
pushf
and
xor
loopne
lods
repnz
and
ret
or
push
mov
xor
push
dec
pop
cld
xchg
lods
iret
test
bound
les
aad
out
jno
xchg
inc
dec
jb
push
jmp
xchg
or
ja
add
or
rolb
enter
popf
adc
mov
into
leave
and
or
or
adc
and
lods
insl
sbb
pop
loopne
fcompl
rorb
insl
add
mov
dec
adc
pop
pop
inc
adc
rcll
add
dec
push
push
inc
lds
adc
xchg
lods
pop
in
shr
and
lahf
mov
xor
mov
adc
loopne
inc
or
and
cmp
fadds
add
xchg
mov
rcrl
test
add
std
scas
hlt
setle
jo
stos
xchg
jmp
aam
xchg
fadd
or
xorl
adc
sub
nop
sbb
dec
dec
xchg
mov
fadd
inc
cmp
inc
cli
sti
stc
add
mov
lods
add
xchg
ror
mov
mov
mov
shll
or
ret
inc
cli
fsub
aad
in
sbb
aam
add
incb
subl
xchg
push
and
xor
and
int3
add
stos
mov
push
xor
cli
push
add
pop
xchg
jle
mov
adc
aam
pop
mov
shl
cmp
subb
xchg
mov
fwait
mov
enter
adc
dec
sub
or
call
test
decl
rclb
xchg
push
jbe
nop
in
popf
call
ds
loop
pop
push
xlat
add
jns
fadds
cmp
outsl
aaa
mov
xor
into
or
jno
lock
pop
or
aam
mov
inc
adc
dec
std
jg
adc
jns
dec
push
dec
fs
inc
arpl
cmp
dec
das
adc
dec
pusha
pop
mov
or
cltd
adc
add
xor
outsb
mov
addb
mov
and
inc
loopne
xor
xchg
mov
jns
prefetch
or
add
mov
or
popl
ss
mov
mov
xlat
add
nop
ljmp
push
push
and
cmp
shlb
dec
popa
or
jb
clc
adc
popa
inc
repnz
xorl
sub
inc
adc
lock
fmuls
sub
pop
mov
rcrb
pop
and
std
fildll
and
subl
lds
inc
inc
bound
pusha
jge
jnp
js
add
into
dec
test
mov
cmp
aad
cld
pusha
pop
fdivl
nop
dec
dec
test
dec
xchg
lock
pop
xchg
fnstcw
mov
test
adc
test
xchg
out
add
add
hlt
push
jne
lock
mov
push
scas
mov
jo
dec
clc
xor
dec
ret
jno
js
aam
xor
bound
jbe
xlat
jnp
cmp
push
inc
leave
sbb
xchg
fstpt
clc
iret
add
ja
sbb
roll
or
pop
into
das
fsub
adc
adc
jmp
fs
and
xchg
add
and
outsl
or
mov
and
cmp
push
and
xchg
int3
je
mov
inc
fdivrl
pop
imul
jno
test
add
mov
divl
fdivr
mov
les
jbe
add
jecxz
pop
aaa
in
std
sti
xor
adc
popa
inc
das
and
dec
adc
imul
inc
and
aas
or
sbb
sahf
ret
xor
add
adc
mov
cli
pusha
cmc
jns
insb
lea
lcall
inc
mov
or
or
adcl
xchg
mov
mov
add
pop
xor
cmp
mov
sbb
mov
xchg
in
sbb
add
les
sub
push
popf
lret
cli
adc
or
jae
xor
and
je
jo
adc
mov
or
add
cmp
imul
sbb
aad
jns
inc
or
sbb
jno
push
lret
insb
and
and
cltd
add
or
ja
mov
sub
adc
test
push
std
and
push
adc
adcb
jno
jl
xchg
out
nop
cmp
jo
sbb
add
dec
dec
add
lock
add
ds
jecxz
bound
outsl
gs
popl
inc
pushf
xchg
mov
out
add
hlt
xchg
inc
dec
add
rcr
fucompp
xor
popf
mov
jb
xor
sub
pushf
jl
std
mov
and
iret
or
adc
arpl
dec
mov
rorl
cmp
imul
add
jnp
andl
or
sti
or
sarb
shll
xchg
pusha
mov
and
adc
and
daa
sub
push
or
sbb
loopne
icebp
add
push
imul
sbb
and
std
psubsb
loope
push
jo
cld
pop
xchg
lods
fidivrl
cmpsl
nop
mov
cmc
dec
push
xchg
mov
add
mov
in
mov
psllw
sub
jnp
mov
jmp
pusha
xchg
and
enter
pop
inc
imul
in
sarl
add
push
jle
idivl
sbb
jmp
pusha
jbe
rol
add
ss
jle
and
dec
mov
lcall
es
aad
adc
mov
test
shl
mov
pushf
int
push
insl
mov
pop
adc
cs
cmpsl
add
sbb
mov
nop
and
inc
pop
es
xchg
mov
inc
and
mov
dec
cwtl
dec
adc
lods
lea
add
or
mov
add
or
jge
xchg
jae
add
pop
cmp
xor
add
jmp
add
rolb
loopne
negl
sahf
xlat
cli
xchg
insb
ret
sbb
les
outsl
pop
adc
cmp
insl
inc
xor
push
lds
and
mov
cmp
adc
mov
in
test
cmovne
daa
sbb
ss
sti
add
or
inc
mov
leave
aad
fildl
xchg
or
int3
lahf
xlat
pop
bound
dec
xor
add
pop
decb
std
cli
mov
addb
pusha
movsl
inc
cmp
xor
clc
cmp
push
insb
jle
cwtl
sbb
mov
xor
push
std
inc
ror
cmp
movsl
xchg
inc
mov
mov
and
test
repnz
or
adc
jne
insb
enter
adc
mov
mov
js
add
xchg
cmpb
xchg
add
push
cmp
dec
jno
add
xor
jp
push
jge
mov
and
xchg
sti
mov
jecxz
add
add
mov
ret
subb
je
ja
js
xchg
dec
inc
lcall
movl
int3
les
mov
add
or
mov
cmp
jno
clc
add
mov
subb
jmp
inc
lea
add
adc
add
out
scas
pop
mov
in
jg
mov
pop
in
nop
xchg
jnp
pop
sub
nop
adc
push
jno
popf
sub
inc
or
cmp
pop
aad
mov
js
fs
iret
add
xor
adc
and
lret
repnz
mov
push
lcall
push
xor
sbb
mov
test
jmp
out
inc
adc
or
inc
imul
pop
mov
shl
test
xor
movsl
mov
mov
insl
add
pop
repnz
and
sbb
fdivs
cmc
mov
xor
out
outsl
xchg
rcll
jl
adcb
call
xor
adc
add
mov
cli
mov
imul
jb
jg
add
jns
cmp
or
mov
fadds
inc
out
sub
push
pop
jg
mov
fidivrl
mov
sahf
jo
jns
mov
ljmp
push
shrb
add
repz
xor
adc
cmc
add
aas
xor
or
rolb
pop
jns
and
andb
test
mov
mov
mov
jl
jl
mov
dec
in
int3
cld
mov
lock
es
pop
insb
adc
jb
sub
testl
pop
add
cmc
popf
jno
cmp
cli
inc
and
add
jns
cmp
fstl
int3
jecxz
adc
push
outsl
pop
fidivl
mov
hlt
xor
push
cmp
mov
jnp
les
cmp
andb
stos
fcoms
loope
lods
cld
cmpsb
jnp
adc
stos
in
popf
push
sub
mov
add
xor
shll
les
rcrl
xor
mov
test
js
mov
jnp
enter
or
jno
ror
fsubr
pop
jno
xchg
jns
ja
ja
mov
icebp
add
push
in
cld
out
pop
mov
imulb
test
xor
in
jne
inc
loopne
mov
hlt
daa
add
fsubl
add
arpl
xchg
push
xlat
and
push
in
inc
pop
stc
inc
popa
add
mov
fwait
test
sub
pop
cmpsl
jns
jmp
jo
adc
sub
mov
xor
push
add
or
mov
dec
pop
add
das
rcl
jp
mov
mov
adc
ljmp
jne
cwtl
pusha
ret
mov
cmc
sbb
inc
outsl
sub
push
nop
shll
xchg
xchg
pop
xlat
rclb
inc
add
and
pusha
ss
or
adc
xchg
fcoml
aam
nop
jns
adc
nop
cld
jge
jge
add
inc
stc
dec
aad
into
xor
movsb
jo
inc
cmp
cmc
andb
pushf
sub
inc
jmp
adc
add
int
sub
std
xor
lods
nop
cmp
std
in
push
fwait
jns
or
dec
and
mov
pop
or
shrb
outsb
mov
xorb
pushf
and
add
cmp
cwtl
dec
xor
add
pop
gs
jno
decb
js
cli
dec
cmc
cmp
xor
inc
jne
adcb
push
or
adc
cwtl
ret
and
ja
push
inc
mov
bound
mov
mov
sub
and
lret
cmp
outsl
pushf
int3
adc
cmp
cli
pop
push
mul
fs
add
mov
or
add
xchg
mov
aad
fwait
inc
dec
dec
or
adc
mov
sub
stos
mov
and
sub
leave
adc
es
push
push
xchg
dec
and
jb
xlat
in
pop
sbb
mov
or
mulps
ds
sub
inc
sbb
xor
nop
cmp
lcall
push
add
adc
std
mull
mov
sar
add
pop
inc
dec
pop
cmp
in
and
xchg
mov
sub
push
das
add
js
test
jo
push
and
push
outsb
xchg
xchg
add
and
mov
add
orl
pop
imull
cmp
js
test
and
sbb
push
test
icebp
movsb
rclb
lods
cs
sbb
mov
inc
adc
pop
mov
jno
ror
mov
imul
nop
sub
jg
shlb
ss
add
mov
add
xchg
addb
jecxz
lock
or
sbb
inc
mov
add
pushf
mov
pop
push
stos
and
xor
rolb
xchg
jmp
dec
outsl
pop
in
xchg
xor
or
push
adc
fisubs
pop
inc
flds
ss
das
inc
loopne
or
push
jns
inc
xor
adc
ljmp
xor
cli
or
sbb
add
sahf
pop
mov
lods
inc
mov
dec
js
insb
inc
in
cld
jns
enter
ror
xor
addl
inc
xor
adc
test
xor
mov
cli
xchg
or
cmpl
mov
pop
or
push
aad
adc
cmp
add
aaa
mov
dec
xchg
clc
mov
movsl
popa
lods
mov
xlat
packssdw
dec
fcomp
jbe
cmpb
fstpl
mov
adc
adcb
xor
sti
dec
divl
mov
cld
out
jo
and
rcl
add
and
repz
and
inc
sbb
cmp
rol
or
rcrl
cmp
js
loop
mov
pop
cltd
in
rolb
mov
adc
pushf
and
js
jo
mov
mov
push
rcrl
scas
push
scas
jns
add
dec
fldenv
fwait
cmp
sbb
out
je
add
aad
lcall
repnz
ret
dec
and
inc
or
cmp
add
inc
jmp
or
cmp
imul
in
inc
cmp
jmp
pushf
cwtl
shrl
jo
mov
jbe
rcll
or
subb
dec
ds
lods
add
clc
aam
fldcw
add
inc
push
aas
lret
aas
bound
nop
sub
and
in
xorb
xchg
jb
repz
mov
mov
cmp
add
mov
push
rorb
xor
test
faddl
mov
or
dec
jne
xchg
mov
daa
push
or
dec
pop
insb
mov
mov
fadds
lods
cmp
sub
pop
dec
mov
sub
push
roll
daa
xchg
jecxz
mov
and
addb
push
xchg
loopne
es
in
loope
inc
popf
lock
add
add
pop
mov
cmp
pop
and
lods
clc
stos
loope
cli
push
pop
inc
sbb
jns
adc
xor
jg
cmp
mov
out
sbb
int3
seto
inc
data16
jp
jno
fsubs
or
inc
shlb
and
add
cmc
popf
cmp
in
adc
lret
jno
add
jmp
test
cs
jno
enter
movsb
pop
clc
jl
mov
lcall
add
push
inc
aam
jmp
rolb
add
jmp
lock
outsb
cmp
or
mov
fcoms
arpl
xchg
mov
mov
jb
dec
pushf
adc
rol
addb
xor
std
inc
mov
add
in
or
pop
jnp
les
pop
inc
xchg
mov
sub
add
insb
ljmp
imul
ret
sbb
dec
stos
sbb
test
mov
lods
mov
or
pop
pop
outsl
mov
push
adc
fildl
cmp
mov
add
push
bound
cmpsl
cwtl
or
cli
dec
push
out
fdivrl
push
repnz
sub
iret
int3
stos
ret
push
or
push
adc
sbb
push
rcl
dec
ja
add
test
inc
or
cli
pop
push
sub
xchg
mov
mov
adc
fistpl
inc
pop
rcl
sbb
inc
stos
jmp
or
imul
mov
daa
inc
out
xor
pop
repz
adc
data16
pushf
and
jnp
lods
adc
insb
lahf
pop
and
jno
jo
push
test
xchg
into
add
lock
cmp
test
stos
in
xchg
add
stos
push
in
pop
add
inc
and
fildll
push
add
js
xor
insl
add
adc
push
sub
add
mov
repnz
mov
push
xchg
or
add
or
addb
add
or
cmp
jae
pop
dec
inc
add
jge
adc
push
add
mov
ss
pusha
out
xor
or
cli
adc
mov
jns
xchg
and
mov
insl
sub
jno
xchg
stos
repz
mov
inc
adc
leave
xchg
add
fimuls
lock
call
push
inc
daa
pushf
cltd
ret
fdivr
mov
test
outsb
mov
shl
leave
inc
cmp
xorl
stos
mov
rolb
dec
fcoml
scas
not
pop
cli
cltd
faddl
mov
mov
add
sahf
iret
nop
inc
cmp
mov
or
or
cld
loopne
aas
int3
pop
or
and
xchg
sbb
dec
sub
stos
xchg
cmc
pop
int
pop
inc
fucomip
or
arpl
add
loopne
testb
push
dec
xorl
jns
or
addr16
pop
add
pop
imul
add
mov
les
pop
scas
je
dec
hlt
out
mov
or
rcrl
fchs
push
adc
cmp
cmp
and
mov
in
test
add
addr16
inc
std
test
cmp
add
xor
adc
cwtl
cwtl
add
sbb
push
sub
ja
add
mov
imul
jl
inc
insl
fs
les
xchg
mov
cmc
push
or
in
pop
or
arpl
mov
fwait
add
mov
adc
ja
aaa
and
cmp
xchg
fisttpl
lods
add
push
adc
dec
cli
fldcw
inc
pushf
loop
inc
push
or
test
adc
or
xor
dec
push
jae
sub
loopne
cs
push
in
xor
xchg
jb
fiaddl
adc
dec
xor
sub
add
sub
nop
push
outsl
pop
adc
cwtl
repnz
jo
aaa
test
inc
jecxz
add
pop
popf
adc
xor
or
inc
das
mov
add
sbb
mov
enter
jne
jge
sarl
cwtl
popl
les
repz
mov
cmp
or
dec
andb
add
push
sbb
or
push
push
sbb
stc
out
enter
ds
push
sbb
sbb
mov
pop
or
add
nop
add
clc
lock
dec
and
mov
in
icebp
adc
ljmp
xchg
xchg
ret
add
movsb
fadds
dec
cmpsl
incb
pusha
cmp
mov
mov
xchg
faddl
jb
or
inc
xchg
std
testl
lds
sbb
add
jmp
pop
add
std
xor
dec
andl
mov
jl
and
fdivs
outsl
cmp
sbb
cwtl
push
adc
adc
and
adc
jne
pop
mov
sti
xchg
sbb
sbb
adc
divl
xlat
hlt
pop
std
add
sub
rcrb
or
ja
jae
add
gs
cwtl
inc
pop
lock
pop
fs
add
cld
xor
out
ret
cmp
mov
or
push
ret
cmp
divl
jl
add
adc
cmpsb
nop
xor
jae
nop
adc
mov
adc
popa
dec
xchg
faddl
inc
rcll
aad
jmp
mov
or
stos
adc
and
jne
sbb
add
add
push
insl
pop
inc
jg
mov
movsl
cmp
mov
add
fwait
and
mov
loopne
aad
in
insl
cmp
pop
or
xlat
xchg
movsb
in
lcall
cmp
adc
jnp
mov
sub
or
cwtl
rorl
lods
mov
and
push
dec
mov
pop
pop
inc
insb
sbb
je
sbb
jns
andl
je
adc
or
add
aad
scas
jb
ss
xor
mov
adc
ret
sbb
dec
inc
add
push
bswap
add
loop
rcll
bound
dec
aam
add
jmp
mov
inc
call
pop
popf
orb
or
cmc
js
add
push
adc
dec
cltd
clc
lods
and
mov
add
xchg
cmp
or
in
cmp
in
xorl
out
jne
xor
cmp
div
mov
lret
repnz
xor
sub
gs
add
xchg
mov
or
lods
icebp
push
inc
out
test
stos
cmp
lret
icebp
jno
mov
xorl
test
add
jb
jne
cld
and
and
test
fsubr
imul
hlt
add
add
cmp
lods
jno
or
sbbb
or
push
xchg
sub
and
add
lret
jne
and
inc
comiss
pop
mov
shr
dec
imul
repz
xchg
fadds
jo
xor
pusha
add
cmp
roll
aaa
push
addr16
adc
sub
or
imull
sbb
mov
cmc
test
lcall
jne
push
pop
lods
mov
sbb
add
cmp
xchg
mov
mov
aaa
lret
pushf
push
mov
cli
pop
pop
and
pop
insb
andb
adc
or
stc
mov
adc
push
push
mov
jl
adc
lahf
enter
push
push
cmpsl
mov
add
jle
xchg
mov
cmpb
cwtl
dec
mov
xor
cld
cmp
add
mov
sub
jle
xor
movsb
imul
cmp
xor
fdivr
fwait
test
out
add
in
stc
dec
add
mov
outsl
pop
jo
mov
clc
xchg
add
lods
mov
incb
pop
dec
sub
sub
xchg
rclb
push
mov
je
add
loopne
jo
jmp
enter
fs
jns
cmp
pop
jns
add
push
mov
fs
add
xor
iret
test
jb
inc
add
jg
add
jb
pop
mov
and
mov
sub
add
arpl
std
stc
lds
rorl
das
pop
stos
cmp
jnp
aam
in
lods
pop
add
inc
scas
jb
xchg
push
add
dec
add
js
jno
jns
in
cld
dec
sbbb
in
mov
jecxz
addb
push
or
add
aad
inc
lods
or
add
cmpsl
outsb
outsl
and
jl
mov
mov
push
out
inc
popf
pop
pop
mov
loopne
add
shrb
xchg
push
popf
int3
mov
arpl
mov
std
jbe
movsb
test
pop
mov
jecxz
movl
test
xor
and
stos
and
jmp
loopne
mov
and
clc
sbb
shl
or
enter
adc
sbb
mov
lret
xchg
movsb
in
inc
and
xchg
lds
fsubs
aam
push
or
out
sbb
ja
out
xchg
mov
xchg
arpl
or
cmp
add
sub
arpl
xchg
dec
mov
xor
push
pusha
lds
dec
mov
jmp
add
push
stc
xor
addb
mov
push
mov
push
cmc
lods
adc
mov
and
sahf
pop
sbb
or
mov
xchg
mov
adc
not
inc
jg
jmp
inc
out
push
push
cwtl
jo
sbb
sbb
das
mov
add
ja
xor
and
add
and
inc
pusha
fadds
dec
dec
inc
je
sub
lods
pushf
mov
popl
cli
adc
sub
outsb
cmp
outsl
dec
dec
dec
shrb
jnp
insb
add
mov
movsb
jl
or
xlat
lahf
sarl
inc
mov
lock
cmpsb
dec
fstps
or
and
adc
out
push
add
mov
aam
push
rorl
cwtl
leave
inc
inc
mov
add
hlt
xchg
rorb
jo
mov
je
cli
ud0
test
sbb
and
jns
pop
loopne
loopne
xlat
andl
jns
roll
inc
sub
push
movsl
jno
add
bound
lods
mov
test
mov
sbb
cmp
dec
adc
push
cld
inc
add
insb
mov
roll
je
push
cld
loop
sbbb
mov
add
xor
or
fistl
mov
xchg
add
test
test
repz
dec
add
fcoms
mov
inc
ret
pusha
mov
in
jle
rclb
xchg
std
in
cmp
xchg
inc
inc
mov
mov
mov
xchg
sbb
repz
jg
mov
jb
adc
and
jle
call
rorb
stos
dec
and
repnz
adc
jae
test
xchg
and
push
mov
mov
aam
repnz
jb
rol
and
cmpsl
xor
cld
pop
jg
push
cmp
pop
sbb
in
dec
dec
pushf
shll
psadbw
jns
or
hlt
adc
xorb
dec
cmp
mov
dec
push
aam
and
insb
cmpb
xchg
lock
cmpsl
adc
cmp
inc
or
pop
lea
icebp
push
push
add
add
lahf
add
insb
stos
in
mov
lods
add
add
mov
addl
push
or
stc
mov
mov
enter
mov
in
dec
cmp
or
pop
aam
add
pop
xchg
push
ret
and
mov
mov
xchg
sbbb
scas
flds
imul
pop
shlb
jb
xchg
mov
cmp
je
add
hlt
test
dec
xchg
jae
add
xchg
in
popf
mov
xor
pop
js
andb
pushf
sbb
dec
push
call
movsb
es
mov
into
mov
mov
pop
xorb
mov
mov
cmpsl
ds
mov
lea
fidivl
adc
push
aas
pop
es
ret
sbb
adc
adc
movsb
incl
sub
add
and
test
push
jb
or
in
cld
inc
mov
out
push
daa
popa
xor
xor
fstpl
pop
jp
pop
push
sbbl
fcomps
daa
cmc
js
sbb
inc
ja
push
adc
sti
test
or
enter
insb
pop
stc
xchg
lock
cmpsb
in
push
roll
push
mov
sti
in
je
adc
call
mov
repz
fbstp
ret
and
mov
pop
jno
add
cmp
jecxz
lods
aad
jne
shrb
and
vmovaps
push
cmp
cmp
inc
out
inc
mov
imull
push
and
pushf
andb
outsl
add
jo
aam
sub
jge
xchg
jns
mov
stos
icebp
jo
adc
stc
nop
pop
adc
mov
mov
dec
and
add
invd
jg
jp
stos
mov
adc
nop
or
fwait
and
icebp
aad
cld
jbe
pop
inc
mov
cs
nop
sar
add
or
jae
xchg
mov
xor
testb
popl
push
jbe
std
popf
and
loope
cmp
les
fwait
jmp
les
jl
pop
ror
sub
xchg
jno
pushf
sbb
lcall
insb
jge
scas
call
inc
xchg
cmpsl
dec
jnp
jle
mov
jo
add
xchg
add
add
or
xor
call
mov
cld
dec
mov
jnp
aas
add
lret
push
push
inc
cmp
sbb
sub
xchg
aaa
push
imul
xor
popf
stos
xchg
xlat
push
enter
aam
in
add
lfs
imul
hlt
nop
push
imull
and
dec
inc
loop
mov
arpl
in
cmp
jnp
sub
xor
aas
xlat
out
sbb
sbb
cli
repz
pushf
arpl
mov
add
and
pop
mov
cmc
inc
jnp
add
gs
add
nop
pusha
sbb
loope
test
lds
add
mov
push
xor
sbb
cmp
mov
inc
mov
leave
xorb
cld
push
fstpl
cmpsb
adc
aam
in
push
call
out
xor
xor
adcb
pop
cmp
dec
je
pusha
arpl
push
mov
aam
add
cmp
inc
jl
mov
adc
and
add
mul
cmpsb
mov
lea
fs
cmp
out
pop
shll
jo
push
add
jl
or
push
in
ds
push
loope
cmpsb
sbb
add
loopne
add
ljmp
addl
popf
outsb
les
cltd
scas
xor
jp
push
pop
rcrb
outsb
scas
aam
push
pop
pushf
std
out
push
add
xchg
inc
icebp
lahf
mov
mov
push
xchg
aas
xchg
movsb
jnp
scas
xchg
add
cmpsl
pop
jg
adc
push
loopne
add
stos
pop
out
sbbb
add
lcall
xchg
loope
mov
xchg
lock
and
aaa
dec
test
or
clc
mov
ja
lds
hlt
mov
mov
fnstcw
add
cmp
stc
icebp
mov
mov
cmp
or
cmpsb
lods
dec
jb
adc
xchg
add
je
stc
movsb
orb
into
jne
ja
adc
push
inc
movsb
xor
jne
cmc
add
xor
nop
inc
aam
xchg
or
ja
les
inc
les
pop
sub
stos
test
jb
movb
pushf
add
rolb
sub
push
fsubs
cltd
pop
mov
push
jb
xor
lods
out
jecxz
or
mov
or
pop
cmc
push
adc
add
loop
in
push
pop
pop
stc
lret
aad
pop
push
add
shll
sbb
call
jae
add
es
push
pop
add
mov
add
ficomps
addr16
dec
xchg
inc
daa
cmp
ja
incb
or
pushf
pextrw
dec
test
mov
ja
push
add
add
in
mov
mov
mov
cld
loopne
adc
je
std
lods
mov
mov
add
add
ffree
dec
dec
mov
rcrl
adc
cvttps2pi
ror
inc
adc
add
das
and
addr16
rolb
push
pop
ljmp
dec
pop
or
into
mulb
ss
cli
cmp
xor
add
push
mov
add
mov
mov
add
aam
inc
mov
mov
xlat
add
pop
and
sub
out
add
es
add
jbe
sbb
cmp
les
lods
ss
in
add
cs
loopne
mov
jo
add
adc
push
pop
test
or
add
xorb
stos
pop
inc
push
cwtl
jg
push
loopne
adc
sbb
pop
cmp
inc
cwtl
mov
add
jno
test
arpl
cmp
les
fwait
xchg
lea
outsb
iret
add
imul
lods
add
inc
enter
sarb
jae
push
int
xchg
mov
icebp
movsw
fwait
lock
add
pop
lods
cwtl
inc
rcr
aaa
insl
add
xor
icebp
fucomp
flds
arpl
lret
adc
mov
xor
jno
add
dec
aaa
inc
and
lds
sub
pop
adc
add
dec
aam
pop
gs
out
int
xchg
imul
xchg
aad
arpl
stc
fnstenv
daa
push
pop
add
fldl
es
in
dec
cltd
cli
or
mov
mov
mov
addr16
pop
icebp
xchg
pop
add
mov
sbb
sbb
hlt
std
ds
cmp
mov
jle
push
add
test
xor
je
dec
jg
subb
xchg
mov
push
call
add
fwait
fs
xchg
dec
add
aad
lcall
leave
pop
xlat
ljmp
pushf
push
inc
daa
orl
popa
mov
mov
insl
jecxz
mov
pop
mov
add
or
and
adcb
movups
icebp
push
loopne
mov
cs
xchg
mov
ja
stos
adc
add
mov
cli
and
push
pop
jnp
cmp
scas
shrl
fwait
movsl
add
push
or
ss
or
stos
sbb
fs
in
pop
sbb
sahf
int3
sbb
xchg
insb
jecxz
sar
rcrb
dec
xor
add
cs
ss
fdivl
pop
fdivrs
add
repnz
orb
cli
sbb
or
push
cwtl
les
movsl
add
cmp
add
adc
shrb
outsb
cmp
mov
rcrb
clc
pop
gs
inc
xchg
aad
daa
in
mov
push
stos
loop
rolb
scas
call
bound
sub
dec
into
cmc
xor
mov
into
mov
sbb
arpl
jbe
sbb
inc
adc
add
movsb
repz
add
and
clc
enter
xchg
add
sarb
add
stos
add
or
and
outsl
or
in
adc
cmp
mov
insb
lods
add
inc
xchg
pop
fdivs
mov
in
sub
jecxz
popa
roll
out
and
fs
mov
popa
adc
in
push
push
sbb
inc
mov
popf
jge
sbb
xlat
sbb
and
ds
xchg
mov
je
pop
int
xor
in
or
add
and
add
aas
das
clc
lret
in
dec
fisubl
rolb
shl
sbb
pusha
and
and
out
xor
cmp
mov
jecxz
imul
and
or
xchg
jne
mov
pop
aam
cli
sub
adc
add
push
inc
push
int
loopne
lcall
push
hlt
adcb
and
push
pop
fistps
push
push
sbb
dec
xor
push
cmc
jmp
sbb
arpl
pop
xchg
jbe,pn
dec
add
je
sbb
lods
enter
pop
nop
lret
es
roll
hlt
and
add
sbbb
repz
add
adc
sbb
aad
or
fsubrp
inc
out
cli
scas
add
jmp
rolb
xchg
xchg
xchg
insl
or
add
add
psrad
mov
mov
jnp
cmpsl
repnz
enter
sahf
nop
pop
cmp
in
sub
mov
jecxz
shlb
inc
pop
jo
pop
xor
in
in
cmp
movsb
cwtl
adc
mov
add
mov
orb
lock
daa
sub
mov
stos
adc
pop
pop
mov
aad
rcr
add
jbe
sbb
nop
pop
adcl
xorb
dec
and
add
xchg
push
cmp
stc
mov
add
pop
lods
repnz
imul
psrld
xchg
movsl
jecxz
movsb
lret
mov
push
lret
pop
sbb
mov
mov
add
mov
push
inc
mov
pusha
add
add
subb
add
inc
aam
xlat
pop
ret
aaa
syscall
sbb
imul
stos
push
cli
inc
mull
je
cmc
test
add
push
or
add
and
inc
call
pop
add
mov
add
add
insb
repnz
lock
jnp
dec
pushf
add
add
ret
xlat
dec
xchg
add
movb
stos
popa
es
adcl
jns
mov
cld
add
jns
cmp
jnp
movsl
adc
fnstenv
xor
cmp
mov
jmp
add
dec
xchg
je
mov
add
and
and
mov
aam
or
pop
in
and
push
imul
sbb
dec
mov
xchg
outsl
xchg
rclb
in
adc
cmpsl
orl
ret
fsubrs
add
jl
out
insl
add
and
jae
adc
xchg
xor
aas
pop
pop
adc
pop
jnp
xchg
inc
mov
mov
add
jle
push
add
dec
dec
movsl
jg
lea
sub
xorl
rcll
inc
pusha
or
rclb
mov
xchg
addb
xor
bound
or
or
lea
sbb
in
pop
sbb
je
lret
aam
mov
loopne
xchg
addb
int
shl
and
cmp
dec
adcb
into
add
outsb
movl
movb
jp
jo
push
lock
hlt
and
ljmp
dec
ja
repz
dec
jp
push
mov
js
addb
rorl
movsl
cmp
inc
push
and
add
xchg
add
enter
dec
push
add
push
sub
pop
int3
ficomps
jbe
add
repz
pop
cwtl
rorl
std
push
inc
sti
jno
pop
mov
shr
cmpsb
mov
pop
call
scas
mov
inc
sub
and
sbb
push
enter
lods
test
sub
xorl
ss
pop
mov
imul
cmp
cmp
and
sbb
faddl
rclb
cmp
or
xor
imul
jle
and
xor
inc
cmp
je
sub
pop
mov
push
rol
adc
daa
test
out
xor
pop
test
loopne
stos
push
mov
xchg
addb
push
and
rolb
or
jo
in
add
cmpsl
dec
test
mov
out
and
je
add
stos
das
bound
jecxz
dec
dec
adcl
sbbb
shlb
in
add
push
pusha
in
mov
lds
add
mov
fwait
imul
in
icebp
jg
push
cmp
mov
pop
fsubs
fcom
add
stc
pop
cs
xor
inc
jecxz
jns
fs
inc
ja
ss
lret
loopne
lods
xor
das
sub
pop
push
popa
popf
addb
sub
pop
inc
xor
push
out
dec
cmpsb
add
out
or
sbbb
fidivrs
sbb
push
dec
insl
inc
hlt
out
mov
push
jle
push
add
lret
mov
enter
out
jg
push
add
xchg
mov
mov
push
sbb
inc
jmp
lret
js
sub
xchg
add
jmp
pop
sbb
add
nop
test
subb
adcb
mov
fsubs
enter
mov
mov
fldcw
and
and
dec
xor
test
mov
push
mov
test
jp
sub
and
out
iret
cs
add
pop
rolb
xchg
and
push
push
scas
icebp
repz
gs
imul
ffree
pusha
and
jp
add
ja
pusha
add
stos
push
popa
xor
adc
pop
push
add
ret
xchg
xor
and
sbbl
push
add
stos
ret
inc
add
jbe
mov
xchg
lahf
push
sub
xor
push
sub
add
daa
jle,pn
int3
test
mov
add
test
push
imul
mov
pop
jns
add
inc
cmp
testl
or
loope
inc
push
cli
add
lea
add
sbb
mov
xor
les
std
add
push
sbb
out
mov
push
es
fdivrl
mov
and
push
push
cmp
mov
or
add
push
loopne
add
roll
repz
iret
ljmp
add
xor
lret
sbb
push
push
push
je
imul
push
mov
test
loope
pop
add
and
data16
cmpsb
mov
cwtl
movsl
inc
int3
mov
mov
jge
ret
pop
xchg
int
adc
inc
cmp
out
pop
pop
fnstsw
jg
ret
out
clc
mov
jo
or
jbe
mov
imul
mov
add
loop
cwtl
push
in
nop
push
ret
cltd
ss
push
popf
or
sbbl
adc
cs
adcb
je
add
inc
jl
jne
cli
bound
scas
sbb
mov
movsl
mov
mov
xor
rorl
lock
or
jnp
lret
fprem1
les
loope
xor
jo
and
cmc
pusha
fistps
add
mov
frstor
sub
decl
mov
or
lock
pop
add
sbb
add
lock
push
es
add
insb
test
out
sub
add
adc
outsb
pop
lock
cs
jne
xchg
orl
dec
in
dec
stc
push
xchg
lret
in
cmc
cmp
ss
push
sbb
jbe
xlat
add
xchg
add
dec
mov
sub
pop
add
dec
mov
push
add
shll
add
push
mov
jnp
push
lret
sub
jge
out
add
icebp
es
and
mov
js
rorb
jmp
test
cli
addr16
cld
fiaddl
lret
andl
inc
push
mov
lea
adc
mov
mov
and
cmp
imulb
lea
popa
push
cmp
add
sbb
and
fidivl
add
mov
out
pop
add
pop
lret
stos
test
adc
pusha
push
scas
inc
test
cmp
xchg
cmp
fadd
test
fdiv
dec
cmc
inc
add
xlat
cmp
enter
add
ja
pop
loop
test
and
dec
pop
push
inc
jo
jecxz
rcrl
cmp
push
addr16
and
sub
add
aad
xchg
add
add
mov
push
jp
movsl
sahf
add
jl
cmp
and
xchg
in
std
imul
sub
lcall
hlt
divb
jecxz
stos
sar
jl
or
pop
cs
sbb
xor
fwait
xor
loope
cmp
ret
popa
push
cs
imul
xchg
aas
mov
lahf
sbb
or
mov
xorb
pusha
mov
jl
mov
dec
clc
bound
imul
es
xor
adcb
jb
mov
iret
scas
pop
add
push
or
pushf
and
mov
popf
shlb
lods
popa
xor
jo
jae
add
lcall
mov
add
stos
push
push
push
xchg
insb
pop
pop
add
out
dec
cld
mov
scas
repz
xor
push
jle
iret
into
mov
pusha
mov
sti
jmp
ja
les
sbb
or
mov
push
dec
and
add
mov
mov
add
inc
mov
jns
shrb
cmp
push
add
shr
imul
fucom
mov
and
adc
jo
add
int
jmp
scas
and
dec
push
add
clc
or
lahf
add
out
add
inc
pop
lds
jae
xchg
add
in
add
add
mov
cmpsb
pop
fsubp
clc
outsl
push
jb
adc
push
cmp
push
loopne
flds
insl
aaa
dec
sti
inc
lahf
add
push
xchg
push
jecxz
cld
sub
jg
add
rolb
leave
dec
ret
inc
loope
cmp
mov
add
lea
cmc
ds
das
inc
in
cmp
or
cmp
subl
add
adc
mov
add
ja
shlb
and
pop
aad
fs
lret
add
dec
mov
add
xor
inc
std
flds
push
orb
cltd
inc
add
jno
out
dec
dec
push
shlb
movsl
jecxz,pn
push
sbb
fwait
lock
dec
xchg
jbe
sarl
movsl
aas
xchg
sbb
mov
shlb
test
subb
icebp
hlt
inc
lock
jmp
ret
pop
jne
and
or
jp
leave
fadds
popa
inc
loop
dec
sub
fwait
push
movl
mov
cmpsl
mov
divb
add
cs
cmp
add
addl
add
mov
add
inc
enter
adc
add
lock
push
cmp
cli
shl
faddl
xor
ret
inc
mov
inc
sahf
popa
mov
mov
add
loopne
add
into
pop
jae
rorb
in
mov
mov
mov
mov
pop
movsb
add
sarl
xchg
or
fnsave
and
push
test
out
movsl
je
orb
sbb
daa
add
sahf
cmp
jne
xchg
add
jmp
fcmovnu
sub
push
jmp
addb
xchg
aam
sub
xchg
std
ret
and
out
jb
inc
or
fwait
int
mov
leave
shr
add
sbb
cld
test
or
add
pop
adc
mov
aaa
pop
ret
push
sbb
jle
add
jbe
push
add
scas
xlat
or
mov
mov
lds
pop
arpl
jle
enter
add
inc
jns
shlb
mov
xchg
cmp
mov
inc
inc
push
push
loopne
int3
mov
sbb
movl
lea
xor
inc
ljmp
cwtl
pop
add
arpl
jmp
lcall
lret
add
add
mov
adc
es
jl
add
pop
add
pushf
xor
ret
or
add
adc
xorb
inc
sub
mov
mov
loop
lahf
mov
and
loopne
ds
cltd
pusha
dec
nop
jns
xchg
cmp
lret
ja
das
lock
icebp
arpl
mov
adc
popf
push
mov
mov
movsl
roll
and
in
lods
addps
addr16
add
dec
jge
xor
clc
xchg
add
ljmp
sbb
mov
xchg
push
aas
add
inc
sti
leave
bound
jbe
and
xor
cmp
and
add
xor
test
in
xchg
test
adc
xlat
jo
loop
pop
mov
imul
orl
and
daa
pop
loopne
add
js
out
push
roll
add
cld
inc
inc
add
jmp
push
xor
fwait
repnz
or
nop
pop
or
lods
movsl
clc
jno
dec
jmp
or
cmp
test
xchg
jb
add
adc
mov
xchg
out
xor
mov
rcr
add
in
or
loop
sbb
jl
fwait
jne
andb
add
sbb
cltd
mov
sbb
out
addr16
xchg
or
rcll
or
hlt
cmpb
adc
and
mov
cld
xor
outsl
inc
add
sbb
add
mov
sahf
dec
orl
sub
inc
scas
lods
repnz
inc
dec
dec
loopne
push
stos
and
inc
jbe
fstpl
add
pop
or
mov
xorl
sbb
mov
add
push
ret
repz
pop
out
bound
sub
xorl
shll
out
mov
in
add
mov
jno
js
add
xchg
push
adc
stos
push
sbb
pop
cmpsb
sbb
leave
out
sub
add
mov
fsubrs
cld
inc
repz
rorb
rcr
cli
out
loop
push
or
lods
inc
jo
mov
adc
inc
push
sub
out
orl
cli
mov
repnz
add
in
je
loope
mov
repz
fcomip
sar
adcb
fidivrl
sub
repnz
out
xlat
sbb
mov
cld
mov
sbb
das
aaa
cmp
cmp
pop
add
loop
out
add
xor
pop
cmpsb
call
cmp
push
rcrb
mov
xor
sub
test
imul
imul
or
jne
push
addr16
xor
add
and
sub
insb
loopne
inc
cmc
mov
add
int3
lret
lock
mov
lret
jl
mov
xchg
shrb
push
fstps
or
mov
push
jl
add
sbb
xchg
mov
add
scas
add
js
mov
mov
dec
and
xchg
xchg
call
loop
or
add
jl
xchg
repnz
add
xor
or
mov
mov
loopne
inc
sub
xchg
not
or
mov
add
add
in
sub
repz
movsb
leave
mov
push
mov
test
jns
les
add
sbb
adc
inc
push
test
add
cmp
xchg
rep
lret
fcomps
aam
insb
test
add
loopne
xchg
imul
js
mov
ja
shrl
pop
sti
pushl
cmp
out
fistpll
sub
sbb
popf
add
shl
or
jb
add
push
loope
push
push
ljmp
dec
imul
mov
rep
cmp
add
data16
or
sub
xor
dec
adc
pop
adcl
mov
divb
pop
sbb
sub
sub
loopne
pop
mov
test
lods
sbb
call
pusha
add
push
sbb
add
stc
icebp
int3
movsl
dec
jl
add
or
inc
push
pop
jmp
add
xor
das
or
and
ds
add
pusha
lock
add
jne
mov
lahf
bound
and
insb
add
and
loopne
sub
mov
or
or
inc
hlt
int3
repnz
out
lds
loope
in
mov
and
mov
loop
subb
pop
sti
xchg
movsl
out
add
push
out
stos
add
xor
and
fisubrl
xchg
push
push
sbb
stc
sbbl
out
push
push
jno
xor
xor
add
rolb
popa
jno
cmp
add
je
out
pop
gs
xlat
add
cmpsb
popa
pop
dec
les
pusha
in
inc
movsb
dec
dec
push
inc
loope
and
and
push
push
mov
or
pop
mov
mov
push
push
out
adc
pop
adc
adc
ljmp
and
out
pop
push
test
es
adcb
sub
imul
mov
xor
insb
out
mov
lea
mov
push
popf
mov
filds
test
cmp
test
popf
inc
inc
cmp
inc
add
sub
push
and
mov
jmp
xchg
xlat
cs
je
jl
out
aam
pop
cmp
iret
add
rcll
dec
or
xor
mov
xlat
add
subb
add
ja
mov
orl
adc
lahf
fiadds
shl
js
pusha
mov
add
cmp
cmp
addl
icebp
push
cmp
inc
shl
shll
push
sub
mov
mov
push
pop
andb
test
xchg
xor
daa
add
jo
in
shlb
lahf
cmp
aam
imul
sub
mov
jo
push
ss
push
popa
mov
pop
add
or
cmp
adc
sub
lcall
cmp
pushl
data16
adc
jns
insl
orb
lret
lret
xchg
into
std
ds
bound
in
add
subl
mov
add
gs
mov
add
cmp
jne
jne
mov
mov
cld
adc
or
add
call
add
divl
dec
pop
jo
cmp
jecxz
or
add
lret
mov
lret
xor
inc
mov
jecxz
add
xchg
sbb
pop
jb
xor
pop
add
movsl
stos
mov
sub
mov
leave
loopne
mov
add
or
inc
add
mov
ss
or
jae
inc
dec
push
mov
rclb
lahf
xchg
clc
sbb
add
mov
and
movb
sub
dec
test
movsb
adc
loope
aas
add
shlb
mov
cmpb
es
add
jo
mov
add
xor
mov
sub
sub
cmp
shrb
pop
sbb
dec
sub
add
mov
mov
mov
lea
call
xor
das
add
addl
pop
subb
inc
jo
add
mov
jg
enter
jne
divl
add
mov
xor
out
in
dec
clc
xlat
in
push
sbb
mov
in
fdivs
sbb
pop
addl
ficomps
icebp
push
push
mov
mov
arpl
fs
mov
dec
cmpsl
jne
push
enter
loope
incb
and
add
notb
clc
fwait
mov
inc
mov
mov
sti
daa
outsl
les
je
pop
inc
sub
push
movsl
aaa
jbe
cli
push
int3
dec
fadds
cltd
mov
outsb
pop
push
jp
in
ja
add
mov
mov
jnp
pop
add
add
test
hlt
int
jae
xor
loopne
inc
push
push
xchg
and
and
xor
dec
xor
int3
imul
or
cld
add
cmp
adc
into
add
insl
popa
frstpm(287
mov
les
push
loopne
xchg
scas
xchg
add
test
xor
pop
mov
psrlw
add
add
pusha
js
aas
add
cwtl
loop
pop
or
aam
enter
std
adc
or
add
sbb
shlb
cmp
cld
in
push
jecxz
rolb
out
std
or
imul
mov
push
push
and
xchg
mov
lods
lds
rcll
mov
outsb
xorl
jno
aam
xchg
jg
mov
mov
lea
in
iret
jnp
in
add
lret
push
cltd
scas
in
movsb
mov
bswap
sbb
testb
or
cmp
rolb
jb
add
jns
aam
je
aam
xor
test
cli
pop
add
jp
sub
pushf
punpcklbw
fsts
rol
xchg
xchg
inc
jb,pn
push
add
inc
mov
add
out
movsl
sub
loopne
add
adc
data16
xchg
outsb
sub
outsl
add
or
pop
pop
pop
hlt
add
in
mull
cmp
insl
push
dec
dec
into
jge
mov
subb
ss
add
mov
jbe
rolb
sti
loopne
mov
std
stc
lods
daa
dec
mov
insl
push
or
fldl
add
push
sub
in
inc
ret
add
jo
cs
shr
movsl
mov
scas
mov
cli
in
mov
add
addr16
movsl
mov
imul
fcoms
mov
sbb
adc
mov
ret
aad
pop
ja
js
es
add
roll
pop
icebp
mov
add
dec
test
adc
push
mov
add
push
shlb
push
pop
xor
cwtl
add
sbb
push
cmp
gs
insl
xchg
inc
push
pop
popa
mov
rolb
shlb
imul
adc
cwtl
lods
add
stos
push
dec
dec
sahf
and
add
adc
jl
imul
test
lods
insb
pop
daa
sbb
jns
mov
out
add
push
xchg
jecxz
mov
sbb
ljmp
mov
add
cmp
and
in
stos
dec
call
xchg
rolb
cld
push
leavew
add
cmp
aas
aas
sbb
xchg
mov
out
cmp
out
mov
and
test
imul
in
cmp
movsl
sbb
loope
add
mov
cwtl
sub
cmpsl
fs
sub
mov
loope
sub
pop
or
push
xchg
mov
loop
add
pop
inc
movsb
nop
popa
cmp
sub
loopne
lods
adc
cmpsl
push
dec
jne
sbb
aas
dec
enter
inc
jge
aam
xchg
add
xchg
cmp
xor
xchg
negb
icebp
mov
xchg
add
jne
sub
add
mov
xor
lock
cmpsl
mov
cltd
shlb
push
and
xchg
xchg
cmp
loope
xorl
rorl
adc
ds
and
or
sub
mov
sbb
pop
or
cmp
mov
movsb
inc
loope
fwait
cltd
in
add
mov
cmpsl
adc
mov
aas
shr
xchg
fiadds
xor
sbb
ja
mov
test
mov
je
popf
js
jo
mov
cwtl
or
icebp
mov
stos
imul
or
gs
andb
jbe
adc
idivl
dec
lods
jno
jle
adc
js
add
lea
pop
adc
pop
or
mov
add
in
add
sbb
adc
jns
xchg
sbb
mov
js
xchg
push
insb
mov
or
sbb
faddl
adc
pop
and
pop
ja
fcomi
push
shlb
repnz
aad
add
jbe
xor
ljmp
adc
push
aaa
cmp
xor
add
cltd
test
mov
push
sar
scas
xchg
and
add
pop
cmp
jne
les
add
or
aad
dec
mov
xlat
dec
xchg
or
add
adcl
ljmp
andb
xchg
add
cwtl
addl
inc
test
sub
pop
mov
dec
xchg
mov
mov
mov
test
mov
test
in
ficomps
add
test
jns
mov
imul
test
xor
jge
fwait
adc
jmp
pop
aas
push
popf
inc
dec
cmp
sub
call
iret
vminpd
fnsave
add
or
mov
add
jge
or
xor
inc
mov
data16
out
push
push
das
inc
and
sbb
xchg
imul
mov
loopne
add
push
ss
dec
inc
in
iret
movsl
roll
mov
popa
ret
xor
jo
cmc
loopne
cmp
add
mov
push
and
fimuls
fsubs
pushf
lret
pop
or
add
xchg
sbb
pop
addb
daa
mov
jne
cmp
and
mov
xchg
xor
stos
jecxz
sub
add
popf
and
mov
mov
cmp
inc
add
push
cmp
ljmp
xor
adc
cmpsb
in
in
jmp
inc
pusha
cmp
and
arpl
jne
mov
cmp
cld
fisubrl
cld
push
das
scas
cmpl
cmp
dec
subl
adc
or
mov
rcll
or
stos
imulb
mov
and
jo
cmp
pop
cmp
fwait
iret
jmp
std
adc
insb
pop
add
inc
add
push
adc
popf
or
jo
add
cmp
push
add
movsb
mov
add
in
fwait
jl
fmul
in
add
xor
adc
xor
sub
shlb
add
stos
inc
dec
xor
mov
xchg
pop
out
add
inc
lret
jmp
sub
jmp
cmp
xchg
add
aad
hlt
movsl
and
and
pushf
lahf
mov
sub
fisubs
andb
repnz
add
cmp
push
daa
jmp
or
outsb
cli
mov
sbb
push
dec
pop
mov
add
push
jne
inc
inc
xor
popa
xor
lods
fbstp
add
pop
or
ds
xchg
loop
sbbl
adc
stos
sbb
lock
cmp
sbb
iret
pop
popf
xor
pusha
shll
gs
add
xchg
icebp
add
or
adc
mov
out
add
push
dec
sti
pop
mov
shlb
mov
stos
out
or
dec
insb
loopne
movsl
sub
add
mov
test
es
inc
mov
shll
fdiv
aam
int
or
cmpsb
aad
enter
push
mov
test
add
imul
rorb
fsubrl
jbe
clc
sub
lods
test
and
ljmp
lock
pop
push
enter
sarb
sarb
push
ret
jl
aad
subb
lret
push
int3
hlt
or
add
std
fwait
xor
mov
scas
inc
es
and
enter
jl
out
das
pop
lock
xorl
mov
call
ds
sbb
cmp
and
fucomip
lahf
inc
mov
stc
xorl
sahf
addb
push
mov
inc
outsl
nop
enter
fs
fnstsw
lods
pop
add
xchg
lods
popf
or
ds
dec
xchg
pop
fwait
push
testb
sbbb
ljmp
add
js
aad
loope
adc
out
jge
cwtl
lcall
pop
sbb
out
test
dec
or
mov
jecxz
insl
addl
pop
rep
xchg
lcall
insb
xchg
or
pop
jge
arpl
movsb
jmp
pop
jp
and
or
jl
pop
xchg
xchg
sbb
xor
lret
sbb
sub
xor
dec
cltd
pop
verw
loope
jp
cmp
jle
scas
bound
push
push
aaa
mov
add
mov
lcall
inc
inc
pop
add
dec
xchg
sbb
jnp
add
std
mov
repz
jae
es
popa
or
sbb
push
pop
sahf
xor
mov
sub
dec
popf
cmp
jp
mov
mov
lea
fists
clc
lds
cmp
cmc
out
push
lock
add
mov
xor
stos
or
cmp
gs
sbb
pushf
adc
mov
je
mov
mov
mov
imul
xor
popa
jnp
xor
pop
loop
enter
add
and
pushl
mov
into
cmp
les
xchg
idivl
ds
push
enter
fiaddl
cwtl
cld
popf
clc
out
movsb
jo
addl
inc
int3
cwtl
sub
mov
in
xor
lods
in
cmc
jge
sahf
jmp
and
mov
ret
aaa
rol
loopne
push
movsl
or
lods
mov
add
pop
pop
lea
and
loopne
in
flds
negb
dec
stc
jl
add
dec
outsl
out
add
ficompl
pop
movsl
rorb
xchg
add
out
adc
in
adc
leave
add
aas
lahf
and
add
and
cld
add
xchg
mov
shl
mov
aam
in
movsl
jno
les
pop
jne
sbb
fwait
popa
xchg
add
or
jnp
and
add
and
add
xchg
imul
adc
cs
orl
add
pop
xchg
clc
enter
add
push
pop
ret
outsb
mov
mov
push
int3
orb
add
mov
push
inc
mov
inc
inc
orb
add
addr16
cmp
or
filds
pcmpeqb
xchg
enter
out
cwtl
pop
add
mov
cltd
xchg
add
negl
jmp
ja
add
jge
mov
aad
add
add
test
es
jo
mov
dec
add
repnz
call
sub
dec
sbb
insb
mov
mov
clc
data16
lock
push
sub
ja
xchg
int3
dec
sti
lahf
cs
push
mov
lock
adc
cwtl
pop
incb
dec
adc
jge
push
rol
mov
push
push
repz
jecxz
add
add
jl,pn
and
fidivrs
or
push
orb
sbb
mov
push
push
je
add
cmpsl
hlt
push
pushf
fdivl
daa
add
in
sbb
mov
repz
movsl
cmp
adc
dec
sub
push
adc
out
addr16
loopne
and
adc
mov
shrb
xor
mov
inc
loope
test
mov
cmp
pop
rorb
add
pop
xor
add
xchg
mov
mov
cld
out
ffreep
sub
jae
cmp
mov
add
stos
jns
mov
mov
add
add
adc
in
rclb
add
arpl
dec
dec
in
jecxz
call
outsl
add
decb
jg
push
and
rol
push
cmc
in
scas
pop
push
cmp
push
add
rclb
add
test
rclb
add
aam
adc
sbb
popl
mov
aad
cld
xor
fsubrl
add
mov
mov
mov
lcall
ja
popa
cltd
clc
pushf
nop
and
xor
add
arpl
fadds
sub
sbb
add
mov
adc
adc
push
fsubs
stos
out
stc
dec
inc
popa
adc
scas
add
xchg
lahf
xor
xchg
in
movsl
rcrb
lcall
sbb
dec
sub
out
xor
js
jmp
nop
cld
add
rorl
inc
add
aas
je
fwait
mov
rorb
arpl
mov
jb
xchg
cmp
adc
pushf
pop
adc
iret
ret
mov
push
and
addr16
sub
shlb
inc
jb
add
nop
shrb
pop
cmpsb
bound
mov
fucomi
addb
imul
xchg
inc
add
pop
sbb
cwtl
mov
mov
bound
cs
int3
jnp
add
sbb
and
cli
xor
mov
mov
mov
add
adc
lods
aas
and
sub
xchg
in
cmp
mov
popf
mov
sbb
loopne
incl
insb
int3
xor
add
push
out
dec
lds
sbb
add
add
daa
and
cmpsw
jecxz
jnp
inc
addl
mov
je
jo
jbe
ret
mov
shl
std
sbb
data16
aas
fcoms
lods
ljmp
add
pop
lcall
xchg
outsl
das
pop
ret
ficomps
add
mul
dec
cmp
add
bound
enter
or
sub
repnz
scas
add
sbb
rolb
cwtl
mov
xchg
inc
movsb
cmpsb
dec
fimull
ud0
stc
mov
adc
aam
les
icebp
lock
cwtl
sub
out
ljmp
adc
mov
rcl
cmp
scas
loope
and
stos
cs
clc
adc
cmpsl
loopne
mov
icebp
xor
inc
or
out
rolb
insb
in
mov
cwtl
movsb
leave
mov
icebp
dec
jne
xor
lods
das
add
add
inc
fcomps
enter
pop
sub
adcb
add
fsubl
es
std
inc
add
sbb
or
cmp
add
aad
ss
or
cmp
or
adc
pop
lea
enter
test
or
jl
cli
and
sbb
add
enter
xor
lods
jae
pusha
sbb
mov
add
aam
ds
inc
add
inc
mov
stos
push
lds
fpatan
add
cmp
dec
add
out
fimuls
cltd
jecxz
std
dec
popa
add
pushf
repz
add
and
and
in
stc
fidivl
fldcw
mov
mov
add
jb
xor
add
sbb
sub
mov
push
mov
cs
mov
popf
add
pop
xorb
enter
mov
incb
jp
xchg
sbb
in
leave
adc
add
jecxz
pushf
ficomps
lret
popa
add
test
in
arpl
sti
mov
repz
test
mov
inc
ja
or
roll
push
popf
gs
daa
test
fstl
add
add
ljmp
inc
mov
movsl
call
add
push
test
dec
cs
xchg
inc
dec
fs
add
sbb
add
mov
addr16
fildl
sub
push
inc
je
mov
add
or
fildl
mov
ret
aas
and
add
les
mov
xchg
sbb
pop
dec
repnz
xlat
jno
aaa
ret
dec
add
lret
scas
pop
imul
mov
negl
jb
add
popf
jp
les
cmp
mov
xlat
sbb
test
add
cmp
enter
xchg
shl
pop
adc
add
cmp
ja
jno
aaa
and
add
outsl
adc
push
push
sbb
add
xlat
push
iret
pushf
mov
and
pop
pop
mov
shlb
rorl
scas
cld
push
arpl
jl
fs
fcmovu
add
mov
pusha
cmp
dec
rorb
adc
sub
add
in
pusha
xchg
jo
dec
add
adc
les
add
jmp
ret
scas
add
and
push
add
rorb
lods
cmpsl
push
jne
gs
fldl
sub
in
cmp
lcall
imul
add
xchg
inc
loop
jle
cmp
add
imul
lret
adcb
pop
jbe
sub
fidivrl
add
popf
cld
lock
sub
xor
add
cmpsl
mov
add
mov
repz
cmp
pop
je
ljmp
jmp
and
mov
cmp
add
dec
fbld
jbe
push
popf
xor
inc
push
or
movsb
lea
aad
idivl
push
add
and
sbb
fwait
add
mov
pop
mov
and
and
and
call
xchg
loopne
cltd
rcl
nop
sub
pop
mov
insl
jle
and
ja
jne
bound
mov
jg
add
pop
add
stos
mov
jne
addb
std
sbb
inc
jp
add
in
cmpsl
add
adc
mov
xlat
add
mov
sub
popf
push
push
sbb
fmul
or
mov
es
or
xor
inc
dec
fidivs
sub
cmp
jb
rorb
push
pop
sahf
sub
add
fcompl
adcb
and
lahf
add
cmp
and
sbb
insb
mov
scas
xchg
das
in
adc
lods
mov
pushf
add
mov
add
jle
mov
and
add
sbb
pop
rolb
add
cwtl
sub
cmpb
in
jmp
into
movsb
jg
or
mov
jp
add
xchg
xchg
sub
xchg
add
mov
rolb
pop
add
dec
aas
jno
dec
lahf
in
add
mov
sub
jo
roll
je
in
das
insl
jae
fmuls
gs
and
xor
arpl
and
fstps
daa
outsl
popf
leave
or
scas
repz
or
lcall
add
dec
jb
push
repz
ljmp
add
ficoms
psubsw
xchg
sbb
push
dec
inc
in
aas
xor
sar
daa
or
mov
and
adc
push
push
cld
add
cmc
push
dec
or
loopne
adc
ljmp
xor
fs
inc
loope
mov
icebp
sbb
lock
sbb
loopne
and
mov
cmc
sahf
mov
xor
jmp
inc
cmp
lods
mul
mov
es
xchg
add
scas
sub
daa
loopne
fcompp
cmp
add
xchg
and
psraw
pop
jns
cmc
or
mov
imulb
or
xchg
push
aam
sub
arpl
push
mov
daa
ret
mov
enter
add
lods
mov
xchg
add
add
add
cmp
loopne
arpl
sbb
jbe
orb
add
push
out
les
add
sbb
test
push
mov
leave
sbb
xlat
mov
jb
into
or
add
push
sbb
push
jae
inc
xor
cmp
sub
mov
into
xor
test
xlat
mov
xchg
adc
cmp
jo
aam
jl
push
inc
pop
sub
in
cld
jno
sub
xchg
lods
pop
pusha
inc
cmpsb
inc
dec
jle
int3
rcrb
adcb
out
in
push
scas
cmpsb
in
or
jp
mov
btc
cmpb
or
iret
and
adc
inc
test
xor
add
loope
out
rolb
and
sti
mov
cmp
js
ret
dec
mov
enter
lds
or
jb
pop
and
stos
movsl
cmp
out
aas
ret
clc
sbb
hlt
pcmpeqb
loopne
out
fcomp
mov
cmp
jnp
inc
jns
add
pop
ret
rolb
sbb
insl
scas
push
mov
pop
add
cmpsl
popa
test
out
pop
jg
add
adc
mov
jne
lret
aaa
movl
jg
iret
add
shll
arpl
mov
dec
xlat
fisttps
and
loopne
bound
int
repnz
in
imul
cmp
xor
pop
fsubrs
push
das
inc
or
push
into
dec
lahf
mov
add
mov
xchg
jle
stc
test
filds
xchg
and
dec
add
adc
stc
ret
in
sbb
add
sbb
mov
repnz
dec
inc
add
popa
les
push
add
and
add
scas
push
inc
fsubrl
into
mov
pop
sub
sub
int3
stc
add
and
call
lds
jl
add
arpl
jp
pop
xor
dec
add
push
aad
or
jl
shlb
and
add
sbb
call
or
fdivp
bound
push
cmp
loopne
push
and
add
dec
inc
cmp
repnz
xlat
lret
mov
cs
add
jno
xchg
add
jecxz
aam
rclb
cmp
mov
movsl
push
in
xchg
pop
or
add
sbb
orl
inc
faddl
nop
scas
pusha
shrl
out
add
call
insl
xlat
pop
add
or
sub
lahf
in
mov
mov
inc
idivb
repz
add
xchg
add
mov
dec
add
fcmovnbe
pusha
and
adcb
add
cmpsl
data16
hlt
pop
jg
cmp
add
int3
loop
or
push
add
mov
mov
hlt
mov
pusha
xchg
cli
sbb
js
add
dec
ret
add
cmc
jp
push
push
pop
loop
add
cmp
or
and
mov
das
out
sbb
add
mov
stos
in
shl
daa
daa
lea
or
fistpll
adc
imul
adc
lock
rcll
enter
scas
cmp
xor
add
movsl
int3
popf
push
pop
fiaddl
es
xor
movsb
mov
add
loopne
mov
add
roll
add
das
mov
mov
sub
xchg
pop
in
inc
add
inc
clc
jge
negb
add
cltd
pop
arpl
cmpsb
int3
add
push
fmuls
hlt
cmp
xor
xchg
pop
fsubrs
cli
dec
scas
or
add
pop
xor
repz
sub
dec
add
jno
add
pop
inc
aad
sub
add
and
sub
je
stc
jge
jl
orb
or
add
dec
cmpsb
or
shr
nop
shl
sbb
sub
dec
jo
adc
rorw
add
xor
int3
mov
lock
jno
mov
cs
pushf
pusha
push
cli
sarb
add
cltd
xchg
jg
cmp
fs
in
mov
jge
ja
fdivr
or
or
adc
mov
push
pusha
shll
push
jge
vmread
mov
call
es
out
syscall
out
mov
iret
insl
push
push
pop
jne
pop
add
fldcw
xchg
std
inc
aas
scas
mov
mov
cmp
add
ret
das
mov
dec
jmp
lock
add
fcmovne
xchg
adc
add
mov
xchg
in
outsb
jge
add
jbe
nop
add
leave
popl
sbb
push
cld
cmp
add
loope
idivl
xchg
cwtl
cmp
and
xor
pop
cld
add
arpl
ret
cmpsb
add
mov
mov
add
lret
mov
and
adc
shrb
pop
out
xchg
add
push
jge
push
in
sbb
mov
jb
xchg
shlb
rcr
dec
add
or
or
mov
add
dec
xchg
aam
push
adc
jno
mov
and
pop
and
out
sbb
andb
push
arpl
filds
dec
xor
mov
dec
mov
outsl
repnz
sbb
or
xor
add
rcrb
push
add
mov
xchg
mov
fsubrl
add
mov
subb
sbb
cmpsb
inc
xor
add
mov
fisubl
sub
in
mov
mov
sbbb
push
add
mov
adc
hlt
sub
or
or
jg
lcall
push
cli
lock
cmp
sbb
xchg
add
pusha
pop
loopne
push
pop
or
push
sub
mov
mov
in
ret
add
mov
flds
xchg
or
pushf
je
jne
nop
xchg
add
xchg
adcb
into
sbb
ret
arpl
pop
xor
dec
or
stc
in
add
jmp
cmc
mulb
push
sbb
add
mov
inc
lahf
add
insl
adc
push
or
mov
add
sti
out
add
lret
add
lods
cs
add
loope
cmpb
mov
mov
popa
fdivrs
fildll
mov
and
stos
dec
push
pusha
sub
subb
jge
mov
ss
mov
ret
cmp
dec
jg
add
loopne
add
jecxz,pn
mov
mov
inc
clc
add
dec
das
shll
jp
pop
nop
add
push
out
clc
lods
mov
cwtl
xchg
push
frstor
inc
add
test
rorl
xor
sub
out
mov
and
push
dec
adc
sar
out
or
mov
pushf
gs
and
adc
cmp
xchg
mov
sbbl
js
xor
dec
pop
add
aad
mov
inc
insb
mov
aas
data16
dec
inc
ss
fstpl
cld
add
ret
mov
cmp
mov
dec
nopl
lods
sub
jl
cmp
and
mov
ror
adcl
add
sub
add
decb
mov
mov
fidivrl
std
or
mov
fidivrs
jnp
add
insl
cmp
adc
popf
jno
scas
lret
inc
dec
inc
aad
jbe
scas
test
cmp
lret
add
jns
pushf
fistpl
repz
xchg
out
js
mov
and
inc
jo
test
loopne
push
scas
insl
jb
pop
andb
sahf
cmp
aaa
add
xor
test
pop
mov
imul
sbb
ljmp
or
xor
add
cld
and
fidivrl
inc
stos
movsl
or
sbb
mov
mov
sub
out
nop
loopne
xor
xor
push
mov
inc
push
pop
add
fcoms
into
jnp
inc
insl
xchg
call
add
mov
movsl
outsb
add
ljmp
add
mov
jns
add
je
push
sbb
add
int
roll
or
insl
test
hlt
test
mov
sbb
pop
xorb
jl
mov
mov
dec
mov
sbb
pop
inc
orl
test
mov
jo
mov
call
hlt
add
jmp
sbb
push
sarl
test
pop
adc
jg
insb
sub
xchg
arpl
or
cli
in
subb
cmp
inc
or
mov
out
and
rclb
in
jo
dec
rcrl
cmpsl
mov
lock
mov
lods
or
pop
add
in
scas
xor
push
out
sbb
js
movsb
pop
sub
and
xlat
jae
fsubrl
pusha
add
movsb
aad
add
cmpsb
enter
mov
add
cmp
les
pop
cpuid
xchg
cmp
scas
mov
add
sub
add
pop
call
mov
mov
xchg
xor
ret
mov
and
fstpl
mov
push
push
jne
jbe
cmp
dec
and
fdiv
sbb
cmpsb
fdivrs
mov
or
push
imul
addl
adcb
add
rcr
xchg
cmp
mov
mov
xchg
adc
stc
in
popa
mov
xchg
mov
xor
sbb
inc
or
xchg
loope
add
pop
cmp
sub
inc
imul
ficoml
in
pop
pusha
adcl
cmp
in
xchg
loope
sahf
sbb
add
push
mov
or
mov
mov
add
outsb
scas
push
imul
hlt
inc
jmp
fldenv
dec
adc
sub
repnz
rcrb
or
lods
xchg
add
add
jg
stc
movsb
orb
pop
add
adc
add
rcr
or
push
rorl
rorb
and
lods
add
shll
adc
sbb
jle
sarb
lock
pop
push
add
or
test
inc
icebp
mov
mov
pop
or
fwait
out
xor
and
pop
shlb
push
lock
push
jo
enter
add
lret
jb
add
jle
push
rolb
xchg
or
and
std
add
test
lods
add
aad
in
out
lea
cwtl
lods
add
bound
mov
push
dec
xchg
add
xchg
std
pop
mov
sbb
out
rcr
xchg
stc
jb
xor
mov
outsb
das
adc
jmp
scas
and
add
push
pop
loop
shlb
add
or
sbb
jno
outsb
paddusb
xchg
add
sub
imul
out
add
cmp
dec
mov
jle
mull
inc
xchg
add
cmp
shll
jmp
pushf
scas
pop
sbb
ja
imul
dec
int3
cltd
jne
add
xor
lahf
mov
stos
inc
sysret
shrl
addb
xchg
add
popa
rcl
inc
add
out
imul
xchg
fisttpll
dec
inc
add
xchg
int
subb
or
mov
clc
mov
scas
sahf
cmp
mov
dec
in
push
and
jl
loopne
subb
int3
insb
pop
add
add
xchg
jle
jg
push
mov
pop
and
test
iret
mov
es
adc
or
xor
in
lods
dec
shll
into
loope
sti
add
push
mov
xor
add
lods
pop
pop
cmpsl
int
add
push
addl
insb
cmpsb
add
loop
adc
xorl
or
jne
sbb
lock
push
pop
insb
pop
cwtl
or
add
xchg
mov
into
xchg
test
xlat
mov
divb
xchg
mov
in
jno
add
push
sbb
ret
mov
je
shlb
add
sub
and
sbb
pcmpgtw
sub
mov
and
pusha
lahf
mov
in
sub
shl
add
xchg
mov
stos
lock
mov
cmp
shlb
push
jne
daa
nop
xchg
cmp
push
xorl
mov
xor
add
cmc
mov
add
xor
popa
add
xor
jo
mov
sahf
xorl
mov
test
adc
or
int3
cmpsb
inc
mov
xchg
adc
add
mov
cmp
jecxz
in
pop
pop
imul
add
decl
pusha
adcl
inc
cmp
and
sub
pop
sbb
fwait
hlt
add
push
movswl
add
add
cmp
jecxz
int3
mov
outsl
in
dec
fwait
pop
add
rorb
ret
movsl
mov
and
cmp
fwait
nop
rolb
add
cmpsl
je
test
mov
mov
aaa
leave
mov
add
xchg
xor
rolb
mov
sti
cltd
jbe
and
rcrl
in
add
or
sub
lods
mov
xor
adc
int
lcall
mov
mov
mov
aas
inc
cmp
sub
mov
pop
mov
inc
adc
pop
add
pop
mov
repz
imul
mov
rolb
adc
add
sbb
xor
nop
notl
jae
jno
mov
enter
xchg
filds
mov
aam
dec
dec
aam
add
stos
fwait
push
call
cs
subb
lret
mov
add
loopne
mov
push
add
or
add
mov
pop
mov
xor
sbb
cmp
cmp
mov
push
xor
and
pusha
fcompl
rcr
pop
inc
fstl
add
pusha
sbb
push
mov
mov
inc
cld
mov
sub
xor
arpl
jne
repz
leave
mov
sub
mov
fisubrl
test
scas
add
sub
sub
push
add
stos
scas
mov
sub
lcall
push
aaa
in
cwtl
mov
push
lret
mov
pop
adcb
jg
cmp
push
nop
hlt
lcall
loop
cmp
mov
or
clc
out
in
leave
jbe
mov
sbb
mov
mov
mov
sti
push
push
sub
ss
loop
or
lcall
add
shll
add
out
call
cmp
ret
lret
add
lock
sub
lods
jmp
scas
cmp
outsl
inc
push
aas
jae
jb
add
aaa
lret
cmp
add
adc
jb
les
inc
adc
jno
addb
mov
jo
push
sub
adc
enter
shlb
pinsrw
or
inc
hlt
mov
sub
addb
test
mov
cmpsb
add
aad
out
add
cs
orl
rolb
mov
fs
fcompl
add
js
mov
add
out
pusha
sbb
scas
add
jge
out
add
lods
jg
cs
iret
and
jle
sahf
mov
out
arpl
sub
pop
test
dec
or
out
dec
shr
add
and
or
dec
cmp
into
enter
jle
mov
mov
pusha
hlt
cltd
roll
sbb
mov
xchg
loop
gs
mov
add
pop
pushf
hlt
adc
and
out
pop
sbb
push
inc
xchg
xchg
or
ss
out
sti
fwait
adc
jbe
out
lret
fistpll
lods
mov
popa
aaa
daa
add
inc
add
mov
sbb
add
in
cmpb
push
je
fwait
push
mov
inc
mov
jne
pop
rep
sbb
loopne
mov
xor
rorl
nop
jge
lock
mov
cltd
push
int3
scas
add
cli
xchg
cmpsl
mov
iret
mov
js
lahf
adc
in
and
jne
add
into
inc
xchg
stc
xchg
sbb
xor
lret
mov
fdivl
pop
ds
imul
test
sbb
dec
mov
xor
popf
jmp
shlb
dec
jl
xor
loop
pop
mov
in
push
adc
sub
xor
addr16
mov
mov
sub
es
lods
jp
or
rolb
mov
adc
cwtl
insl
stos
push
cwtl
adc
pushf
lods
jle
es
xor
add
shlb
loopne
mov
sub
hlt
add
and
rolb
pusha
aad
test
scas
stos
lahf
lea
outsl
loope
inc
lock
cmp
pop
aaa
lods
add
push
mov
std
in
mov
insl
mov
cmpsb
hlt
jge
mov
xchg
into
cs
stc
xchg
add
push
ds
mov
or
cli
lea
add
loopne
mov
es
je
outsb
add
outsl
sbb
or
cmp
fcomps
mov
cwtl
mov
pop
mov
mov
cmp
add
aas
push
subb
outsl
add
loope
int3
clc
pop
btc
cmpb
add
rcrl
add
adc
jb
enter
dec
ljmp
sbb
inc
cvtps2pi
cmovae
or
pop
cmp
out
push
xchg
and
sarb
cmp
cli
in
xchg
movsl
xchg
xor
add
cmp
inc
or
out
loopne
jne
mov
adc
mov
push
lods
add
dec
cmp
adc
add
cld
push
xchg
pop
and
cmp
jg
subl
ja
cs
cwtl
adc
add
add
xor
aaa
cmp
lret
or
dec
loop
int3
xchg
ljmp
js
pop
add
xchg
andb
mov
push
dec
pop
cmp
pop
pop
mov
push
adc
mov
pop
mov
sbb
fimull
adc
lahf
cmpb
inc
in
mov
fidivrl
mov
cmp
js
into
flds
in
cmp
fisubrs
or
add
dec
sbb
gs
shlb
rcll
dec
sbb
lods
int3
jmp
pusha
into
fdiv
fs
testl
cmp
xchg
dec
add
add
or
sar
xor
jo
add
adc
mulb
sbb
cmpsb
xchg
inc
cwtl
fsubrs
xor
adc
dec
push
push
add
push
loopne
scas
sbbb
fbstp
pop
add
sub
lock
mov
mov
repz
je
std
add
and
pushf
lahf
jmp
jo
lods
addb
pop
icebp
and
adc
push
dec
in
stos
add
pop
fiadds
cmp
add
ror
or
ret
add
cmp
repnz
orb
add
scas
push
cmp
push
pop
in
or
dec
enter
cmp
push
cmpsb
mov
add
lea
test
aad
fmulp
mov
bound
ret
adc
xorb
lods
je
sbb
repnz
subb
cld
pop
or
pop
lock
or
insl
sahf
stos
dec
cmp
dec
mov
out
cmpb
xchg
mov
adc
push
and
jg
add
mov
inc
enter
xchg
sbb
fidivrs
adcl
sub
add
fsub
add
es
or
out
and
and
jno
jae
sbb
stos
jmp
adc
mov
pop
test
je
ficoms
inc
add
popf
cmc
adcl
out
sbb
insl
add
enter
push
xchg
mov
cmc
jno
fisttps
cmp
sbb
mov
xchg
adc
mov
push
lcall
push
pop
xorb
mov
loope
mov
xchg
add
jno
scas
sbb
shlb
lea
or
dec
mov
ja
arpl
lock
test
cmpb
xor
leave
jle
inc
sub
mov
adc
inc
jp
xchg
pop
pop
mov
and
jp
aad
cmp
add
popf
adc
add
shlb
lock
out
add
idivb
or
fwait
push
ret
je
shl
popf
inc
sub
and
into
adc
fcmovu
pop
mov
test
pop
mov
test
xorb
jge
and
pop
jl
rcl
inc
in
ds
sbb
test
pop
dec
pushf
or
subl
adc
xchg
and
cmp
orb
add
sub
loopne
xchg
mov
mov
sub
jle
mov
or
xchg
orl
sbb
call
out
push
dec
add
fld
jnp
adc
ret
cwtl
test
addl
andb
xor
dec
or
add
mov
iret
ret
cld
scas
bound
mov
add
into
cmp
xor
mov
add
jl
jge
shlb
pop
ret
test
jno
sbb
andb
push
ret
push
xor
mov
pop
pop
cli
add
xchg
lods
loop
inc
pushf
es
xor
add
mov
lock
hlt
test
xchg
add
push
fldcw
arpl
lods
mov
stc
movsl
mov
mov
sahf
xor
pop
test
add
add
aad
xchg
sub
fmul
scas
icebp
gs
das
jecxz
and
dec
and
dec
mov
mov
dec
mov
into
push
sbb
or
add
sbbb
push
jnp
sbb
add
in
in
aad
mov
roll
cmpsl
lods
icebp
inc
jne
add
aaa
sbb
popl
adc
enter
cld
scas
or
jb
fwait
add
into
inc
insl
pop
jne
xlat
data16
mov
xchg
cmc
loopne,pt
mov
push
out
mov
jecxz
add
sub
add
mov
adc
mov
mov
inc
push
cwtl
sbb
jne
add
sbb
xlat
mov
cli
push
add
sahf
repnz
fists
inc
sarb
roll
mov
pusha
cwtl
push
mov
outsb
cld
add
add
loopne
adcb
dec
add
lcall
jp
loopne
pop
mov
xor
add
out
pushf
mov
mov
popf
mov
not
pop
lret
push
dec
add
jle
and
fucomi
cmp
mov
repz
addl
mov
stos
loop
shr
cwtl
push
pop
inc
ds
add
xor
sbbb
test
add
xchg
push
and
add
jbe
leave
xor
call
addr16
outsl
mov
js
add
call
push
or
add
roll
cmp
test
mov
nop
pop
test
loop
mov
xchg
ffreep
stos
ss
mov
insb
sub
add
push
iret
jns
lock
jb
add
sub
jecxz
aam
vmread
sbb
loop
add
cmc
mov
jbe
add
inc
test
aas
icebp
mov
sbb
xor
stos
scas
xor
insb
cmp
cltd
sub
in
mov
jmp
pop
mov
dec
roll
testl
mov
push
lahf
dec
pop
pop
pop
inc
imul
adc
jp
cmp
rcll
js
jbe
repz
popl
sub
xchg
inc
leave
push
and
xchg
push
mov
or
fnstsw
add
scas
and
aam
inc
hlt
xor
pop
cmp
fistps
and
rcll
fwait
xlat
mov
call
cmpsl
add
mov
mov
xlat
je
xsavec
push
stos
add
push
or
or
lret
lcall
mov
loop
xor
sub
call
add
int3
dec
jecxz
cmp
jo
cmp
add
mov
cs
sub
loop
fwait
pop
ja
pop
jnp
or
stc
and
sbb
fsubrl
das
add
lahf
clc
sub
push
int
lea
add
sbbl
xor
mov
push
push
fnstcw
or
and
or
add
addr16
xchg
pop
shlb
cltd
pop
cmp
add
adc
add
add
popf
lcall
mov
aaa
popa
pop
fnsave
addr16
and
call
or
dec
les
add
lret
dec
sbbb
adc
dec
add
cwtl
adc
aam
inc
inc
adc
jp
fdivl
lret
fwait
test
popf
mov
rcrl
sub
hlt
push
jge
adc
popf
sub
push
inc
push
pop
cmp
jb
clc
nop
cltd
pop
add
sbb
fstl
cwtl
jbe
sub
je
mov
insl
add
and
outsb
in
subps
add
nop
sub
lea
das
fiaddl
xor
fadds
push
adc
popa
jae
adc
cmp
add
mov
filds
xor
icebp
jge
pop
inc
sub
mov
add
or
mov
dec
mov
add
sbb
lock
movsb
test
jne
add
dec
or
in
cli
inc
add
mov
lods
nop
adc
ss
push
and
mov
jmp
pushf
adc
pusha
es
xchg
lcall
cmpsb
add
xor
pushf
sbb
adc
cmp
mov
sub
sbb
cmp
mov
outsb
mov
push
data16
ss
out
loop
test
and
shrl
mov
orl
bswap
out
mov
jno
push
add
aad
xchg
or
add
cwtl
and
sub
pop
pop
jo
cmc
mov
je
popa
xor
pop
aad
repz
rolb
jge
ficompl
add
mov
push
add
mov
mov
cltd
out
ret
add
mov
arpl
imul
ja
push
mov
mov
das
xchg
add
jle
adc
ja
icebp
adc
push
repnz
push
addr16
js
inc
cmp
xchg
stc
cmp
dec
push
lods
mov
xor
xchg
gs
ja
std
in
and
repnz
mov
push
cltd
pop
mov
shlb
ud1
push
cmpsl
scas
lea
cmp
add
sub
dec
leave
cmp
or
add
inc
inc
xchg
out
fcmovbe
int
adc
fnsave
pop
mov
or
aad
pop
shl
hlt
lock
out
or
cmp
sbb
movsl
mov
fsubl
add
mul
lret
idivl
jb
inc
rolb
sti
psubsb
icebp
and
add
xor
loope
orl
popa
adc
mov
mov
arpl
mov
sbb
subl
mov
mov
jle
mov
sub
jnp
mov
divb
xor
jo
in
outsl
in
rol
lret
test
add
adcl
sub
popa
sub
enter
cmpsb
and
sub
sbb
lods
adc
add
bound
add
mov
and
testb
into
add
mov
enter
outsl
xor
lea
jle
inc
push
addb
incb
pop
shrb
iret
andl
push
in
int
xor
sbb
cmpsl
mov
dec
loope
or
es
negb
sbb
jnp
inc
ja
mov
adc
push
dec
clc
xchg
and
adc
nop
mov
daa
add
mov
mov
pop
cli
inc
push
sub
xor
mov
jmp
sub
test
int3
jge
call
add
cmp
in
test
subb
popa
and
mov
es
mov
dec
movsb
dec
pop
add
jnp
pop
icebp
xchg
dec
xchg
jb
jae
cmc
das
cmp
mov
pop
mov
pop
cmp
inc
push
adc
es
and
cmp
daa
inc
jl
out
idiv
adc
sbb
and
cmp
mov
add
dec
xchg
sarb
sahf
push
add
sub
pop
xlat
jns
add
rcrl
and
movsw
addb
fwait
mov
mov
pusha
int3
add
test
ljmp
fs
lea
hlt
out
fstps
sbb
movsl
lret
add
mov
pusha
lock
lds
or
dec
int3
xor
into
inc
jno
jecxz
pop
add
push
call
and
cmp
jns
push
arpl
add
pop
mov
sub
dec
fcomps
cld
or
jbe
pop
inc
xchg
cmp
jb
xor
jecxz
add
or
mov
inc
push
mov
mov
stos
lock
xchg
add
and
call
pusha
mov
pop
add
bnd
imul
add
aaa
cmpsb
adc
mov
sysexit
fmull
add
ljmp
lods
and
xchg
std
add
rol
mov
cmpsl
inc
js
iret
jle
fnsave
stc
repnz
fld
cmp
add
mov
movsl
subb
lahf
add
out
jo
fcom
test
cmp
movb
add
adc
add
daa
lods
aam
call
outsb
sahf
cs
iret
add
lret
in
mov
mov
in
add
rorb
dec
sub
add
add
push
fdivrs
cmp
xchg
add
cltd
repz
psubusw
movsb
sbbb
and
loop
ficomps
adc
push
add
rcll
aas
xchg
out
add
daa
ret
mov
or
mov
adc
add
sti
jp
mov
lock
in
sahf
add
fisubs
rclb
shlb
jge
add
cmp
mov
push
mov
xor
adcl
jno
add
clc
adc
movnti
sahf
leave
dec
jecxz
bound
push
pop
add
dec
es
sub
gs
mov
and
cmp
mov
lret
ret
aas
rcrb
or
cmp
inc
or
movsl
pop
out
xor
test
fwait
jbe
loopne
ljmp
int3
mov
and
in
sub
xlat
daa
xchg
xor
lock
es
insb
add
mov
lret
lds
adc
sbb
mov
loopne
lods
shlb
pop
inc
pop
addb
mov
mov
addr16
test
inc
mov
adc
or
push
dec
push
inc
jne
pusha
gs
and
ret
lret
mov
fstl
jne
scas
into
andb
ds
pop
cmp
push
int
push
mov
cs
mov
movsb
xchg
and
add
fs
sbb
pop
push
mov
adc
sub
shrl
mov
loope
cli
mov
pushf
les
test
pusha
push
mov
ds
and
daa
cld
add
in
out
lret
das
and
ror
loopne
pop
fistps
xor
outsb
inc
add
test
jp
fdivs
mov
or
mov
add
gs
cmp
rcrl
mov
jnp
sbb
loope
lock
push
add
push
pop
in
xor
rdpmc
in
or
xor
xor
jg
je
cmp
imul
mov
fdivrl
pop
and
rcll
add
insb
mov
mov
pushaw
adc
add
mov
xlat
bound
in
sbb
mov
sub
clc
sub
pop
cmpsl
test
or
inc
cmp
mov
js
push
pop
push
xor
sbb
sub
lods
aas
cmp
pusha
loopne
inc
das
jnp
sbb
aad
addb
jbe
add
std
outsb
mov
lock
xchg
push
addl
pop
sti
xchg
and
sub
dec
clc
sub
mov
movb
jb
fdiv
loope
call
xor
aaa
sub
pop
mov
bound
out
sub
xor
or
out
pushf
and
jp
push
in
mov
in
imul
or
nop
add
aas
rcrl
aas
push
jmp
imul
jb
es
and
push
movsb
dec
mov
inc
daa
push
lret
push
dec
push
or
push
outsl
mov
out
insb
xor
xor
es
aaa
push
add
lret
pusha
jb
jns
in
sbb
xchg
sarl
and
mov
xor
push
push
lret
mov
addr16
dec
add
xchg
aad
inc
inc
add
mov
or
jns
add
add
sub
sbb
and
pop
add
dec
divl
jp
jns
fs
xchg
arpl
inc
test
fwait
out
add
push
cmp
or
test
pop
and
jp
sahf
pop
movsl
fidivrs
daa
cli
sbb
push
rol
or
in
and
push
loopne
mov
adc
hlt
enter
cmp
dec
les
push
scas
ja
test
add
inc
add
sbb
jbe
aad
add
clc
and
jle
push
push
orb
pusha
je
mov
enter
fs
and
sbb
add
stc
adc
dec
orl
insb
stos
pop
in
add
dec
lock
fldenv
jl
push
fists
das
subl
and
add
xor
dec
adc
pusha
jb
mov
rcrb
push
imul
cmpsb
add
push
pop
mov
sbb
or
mov
push
add
movl
and
cmp
pop
ficoml
outsb
push
and
andl
pusha
inc
imul
and
xchg
ljmp
adc
mov
ret
mov
in
mov
mov
mov
scas
jp
pop
lods
inc
js,pn
lods
add
jmp
out
xor
jmp
pop
cltd
ds
sbb
cmp
jle
add
cmc
loop
push
add
inc
add
inc
rol
adc
and
std
jg
rclb
test
cli
mov
cwtl
add
add
push
dec
push
mov
dec
imul
clc
dec
pop
out
inc
mov
out
cmc
xor
leave
cmp
lcall
cmp
imul
push
and
movb
cmp
inc
fmuls
sahf
cmp
loopne
add
jns
cmp
dec
jp
shll
repz
jle
in
sbb
mov
inc
insb
push
cmp
punpckldq
shll
cltd
sahf
outsl
inc
lcall
mov
out
sbb
dec
add
iret
jnp
mov
xor
je
add
icebp
cmpsl
jp
aad
inc
mov
sbbl
les
popa
mov
subb
mov
cmp
add
and
jnp
or
lret
add
or
rorb
nop
and
push
sub
push
mov
cmp
and
xchg
std
sub
fldl
clc
mov
in
add
sarb
movlps
mov
sub
add
imul
mov
addr16
fcompl
ljmp
outsl
sarl
xchg
fistpll
push
cmpsb
ret
movsl
dec
inc
and
dec
jp
mov
add
in
cmp
fs
test
iret
filds
jne
xlat
and
mov
mov
jno
lahf
out
inc
in
pop
sbb
mov
jns
in
push
nop
pop
add
or
repz
clc
dec
sbbl
xor
mov
sbb
jae
in
in
add
sub
inc
test
fidivrl
das
out
jb
cmp
mov
xchg
adc
shrb
or
add
pop
add
sti
outsb
nop
or
fistl
loopne
je
add
lea
or
or
ret
lods
pop
cmpsl
sub
add
cmp
aaa
call
cmp
push
rcrb
jae
and
mov
mov
call
inc
xchg
fistpl
sbb
lahf
cwtl
rcl
add
mov
jle
pushf
hlt
pop
add
fdivr
sub
push
mov
pop
dec
inc
cmc
int3
insb
enter
mov
adc
jecxz
or
cwtl
pop
orb
les
and
add
mov
jecxz
pop
popf
jns
add
and
pusha
lret
gs
mov
jmp
add
push
jnp
mov
mov
mov
loop
js
and
call
test
addb
inc
jg
shlb
mov
sti
mov
jo
mov
cld
and
neg
adc
and
or
sbb
or
in
cmc
jne
dec
add
fs
xchg
sbb
scas
mov
mov
dec
rcrb
sub
mov
jp
mov
mov
outsl
add
popa
or
lret
psubq
lcall
bound
sahf
pop
xor
dec
add
mov
lret
or
add
xor
push
adc
xchg
push
mov
inc
add
push
jae
das
xor
and
dec
in
sub
mov
adc
jnp
add
lds
pushf
mov
sti
popf
ss
and
inc
xor
es
fmull
repz
mov
jne
add
dec
insl
push
push
movsb
or
xchg
out
dec
add
pop
gs
push
clc
test
jmp
ds
jbe
sahf
testl
sub
add
fld
scas
mov
add
gs
cli
inc
add
ret
lahf
subb
cmp
cltd
sbb
les
cmpsb
push
outsl
dec
lahf
testl
int
add
ffree
dec
xor
nop
sbb
and
or
inc
jnp
fstl
cmp
fsubl
add
dec
iret
bound
addr16
lods
fwait
test
dec
aam
sub
pusha
sub
xchg
scas
adc
int
adc
mov
cmp
pop
cmc
icebp
jo
mov
push
lods
mov
shrb
or
mov
and
dec
rolb
pop
in
nop
add
inc
shl
in
inc
pop
adc
ljmp
fimull
cmp
aaa
jae
lret
lods
into
rcrb
dec
les
test
xchg
cwtl
mov
add
shlb
and
mov
add
add
jne
inc
and
iret
add
xchg
adc
add
mov
aaa
add
lock
jo
out
cmp
or
std
fidivrl
xchg
leave
inc
out
mov
dec
leave
sbbl
je
clc
mov
repnz
cmpb
hlt
mov
push
sub
add
idivl
mov
add
bswap
test
cmpsl
ljmp
rcr
add
test
mov
shll
pop
mov
push
xor
mov
movsl
filds
jae
rclb
add
push
ret
cmpsb
push
pushf
add
movsl
xlat
pop
sbb
clc
lea
sbb
pop
and
add
push
jbe
or
xchg
add
xchg
mov
mov
dec
outsb
jecxz
stos
sbb
outsl
push
mov
xor
sbb
add
cmc
cmp
aam
mov
and
add
cmp
sub
mov
or
jle
lods
movsb
dec
inc
inc
add
adc
add
sub
popf
add
pop
sahf
cmp
test
push
mov
gs
hlt
mov
dec
loope
mov
dec
pop
mov
aas
jecxz
fxch
faddl
mov
xchg
push
sahf
add
popf
popa
mov
int
pop
push
call
xor
sbb
cmp
flds
mov
or
stc
loope
pusha
fcoms
data16
push
popf
mov
addr16
adc
cmpsb
movsl
mov
jno
and
sbb
jle
or
add
pop
aam
jae
and
arpl
nop
outsl
dec
jbe
and
cmp
lock
sub
or
push
dec
add
cmpsb
jnp
test
or
adc
jne
add
pop
pop
jb
push
pusha
pusha
data16
lods
add
ss
mov
lods
cld
inc
dec
add
cwtl
jae
lds
mov
and
mov
cmp
adc
and
cs
pop
add
mov
add
les
mov
leave
int
lods
add
out
or
mov
inc
test
sar
inc
aad
add
or
outsl
in
idivl
or
lock
xchg
pop
xor
push
subb
stos
jp
jl
add
mov
inc
add
inc
ja
iret
and
add
int
jo
scas
jmp
loope
sub
mov
pusha
and
add
xor
sub
pop
add
or
push
adc
imul
lret
loopne
add
xchg
daa
xor
and
adc
insb
lret
jno
add
mov
cmp
sbb
cmp
stc
pop
outsb
addr16
adc
add
scas
loopne
aad
add
pop
mov
clc
mov
mov
xor
jg
inc
iret
add
cli
pop
sbb
bound
int
push
or
add
mov
pop
sarl
fsubr
add
and
push
inc
js
adc
pop
add
xchg
add
jecxz
inc
cmp
dec
icebp
jne
add
loopne
mov
cmpsl
aad
mov
add
or
imul
out
adcb
mov
add
fdivs
add
jg
or
test
add
add
mov
add
xchg
rorl
add
out
inc
mov
test
out
jg
cmp
jb
push
stc
popf
addb
sub
add
jge
cmpsl
in
ja
push
mov
xor
stos
xchg
call
mov
aaa
nop
loopne
add
mov
sub
ljmp
jecxz
xchg
jae
shl
sub
add
loopne
or
push
jg
inc
popa
pop
push
sarb
mov
js
out
mov
loop
mov
loopne
xchg
call
adc
lcall
sar
icebp
xor
add
or
pxor
shll
popa
push
jmp
push
add
jno
andl
add
imul
pop
inc
add
jbe
add
cmc
dec
dec
jbe
add
test
test
mov
add
add
xor
lods
adc
punpcklbw
adc
pop
testb
xor
xor
and
fldl
jb
xor
cwtl
popf
movb
xor
sbb
sub
loope
inc
loopne
xchg
sbb
inc
adcl
cmp
sub
adc
sbb
nop
int3
xor
add
inc
jle
loop
incl
cmpsb
int
inc
insb
mov
xor
mov
and
xchg
cmp
lahf
clc
push
sahf
iret
jp
cmpb
fwait
mov
inc
rcrb
enter
adc
add
pop
sbb
mov
add
faddl
shlb
xor
ror
mov
push
add
popl
pop
hlt
test
jbe
call
es
sbb
test
add
sub
or
fld
pusha
mov
sbb
imul
divl
xor
cmp
xchg
xor
pop
cld
shlb
inc
int
jmp
xor
push
in
sub
subb
push
cmp
lods
popf
aas
or
pop
jmp
insb
xchg
mov
out
add
cmp
pop
movsb
pop
aas
dec
add
mov
in
jae
sbb
or
inc
and
or
enter
mov
js
in
andb
pusha
mov
test
push
xchg
pop
movsl
sub
out
xlat
aad
jl
dec
jnp
push
stc
jno
in
add
push
movsb
pop
lds
into
shr
dec
xor
mov
or
notb
mov
cmpsb
cmp
sbb
mov
lcall
movsb
ret
cmp
cmp
adc
adc
mov
or
sarl
aad
push
inc
movsb
inc
fs
sub
or
and
jno
ds
lds
dec
xor
dec
stos
push
pushf
inc
sbb
push
test
mov
sub
aas
and
inc
sbb
jae
cmp
in
and
andl
icebp
in
verr
aaa
shl
add
mov
into
and
lods
jmp
push
lea
ss
push
jne
loop
pushf
and
adc
mov
fcompl
int
loope
add
pop
cmp
jno
pop
push
push
enter
add
pop
jns
stos
cld
and
pop
mov
cli
add
or
add
push
cmp
lahf
xorl
jle
sbb
and
mov
inc
dec
rcrb
jnp
dec
and
sub
cmp
dec
enter
out
inc
in
mov
adc
aad
arpl
sbb
mov
and
cs
ds
or
jg
adc
pop
int
xor
divl
fbld
lcall
pop
xchg
cmp
mov
xor
movzwl
jp
fidivrl
sbb
inc
push
jbe
lock
pop
iret
xor
addl
sub
dec
pop
enter
pop
dec
mov
inc
dec
pop
rolb
jne
fwait
add
adc
pusha
in
psrlw
pop
ret
cmp
xchg
fstpt
lods
mov
mov
or
pop
lea
inc
lret
jecxz
into
clc
adc
rclb
aad
lcall
rcrb
inc
fiaddl
and
pop
fucomip
pop
adcb
cltd
scas
pop
jl
in
daa
in
sbb
rdtsc
loop
dec
inc
shld
pop
xor
push
and
mov
push
adc
inc
jle
sub
and
das
xchg
out
popf
push
add
stc
gs
add
cmp
out
test
push
daa
pop
cmpsl
fdiv
add
inc
pop
lea
movl
mov
cmp
add
mov
or
cmp
sbb
mov
mov
xor
adc
daa
xchg
mov
in
ds
call
pop
adc
testl
add
dec
je
ljmp
shrl
jp
add
bound
push
scas
and
fcompl
sbb
mov
sbb
pop
mov
push
je
outsl
or
and
jae
loopne
bound
push
cld
mov
and
mov
ja
adc
sbb
mov
aad
sbb
push
aaa
mov
xlat
lcall
loopne
call
xor
mov
data16
xor
es
stc
or
mov
leave
mov
movsl
pop
mov
mov
les
mov
cli
jecxz
stc
sti
pop
cltd
pop
push
stos
mov
bound
in
aam
mov
and
repnz
xor
repz
mov
dec
cs
fiaddl
xchg
jmp
in
aam
pop
cmp
daa
faddl
xchg
jb
sbb
fisubl
popa
ds
mov
push
xor
mov
dec
jge
sub
lret
sbb
mov
jbe
inc
pusha
xor
incb
sub
xor
jge
inc
add
fcoms
adcl
inc
xcrypt-cbc
cmpsl
push
imul
adc
hlt
in
jae
cs
xor
sarl
pusha
jge
pop
dec
dec
js
mov
jns
sbb
pop
xchg
inc
das
fstpl
into
pop
cmp
scas
lahf
and
fcoml
fistps
jo
movsb
into
pop
or
shlb
inc
and
inc
xor
or
scas
dec
addl
dec
and
pusha
xor
or
sahf
sbb
mov
mov
out
rcr
pusha
les
test
int3
add
xchg
cmp
xor
adc
das
test
adcb
loopne
addb
pop
adc
mov
add
bound
inc
dec
nop
or
negb
add
inc
pop
jne
add
arpl
jle
mov
dec
pop
or
out
and
xor
out
pop
gs
mov
mov
ret
inc
xor
mov
cmp
lock
add
mov
pop
aad
and
inc
sbbl
inc
and
mov
add
or
ret
mov
xor
nop
or
lret
sub
fwait
lods
imul
cmp
out
aaa
rolb
fistpll
repz
xor
repnz
sub
add
mov
add
sahf
outsb
sarl
or
or
add
stc
and
pop
mov
cwtl
adc
icebp
or
loopne
aas
pop
mov
pop
scas
outsl
rcrb
and
mov
repnz
mov
add
inc
dec
loopne
or
fistpll
bound
mov
mov
scas
sbb
or
jnp
or
pop
loop
push
inc
xor
into
in
cmp
pop
insl
mov
xlat
loope
pushf
and
or
andb
into
pop
stc
dec
loopne
cmp
int3
mov
mov
inc
fsubrl
scas
fidivrs
xlat
or
push
mov
stc
add
inc
cmp
cmp
pop
mov
mov
scas
cld
sbb
in
movsb
mov
ret
pushf
pop
xchg
call
and
or
aaa
mov
fucomip
xchg
ficomps
cld
sti
daa
aas
aad
mov
repnz
hlt
pop
test
add
das
aad
arpl
sbb
call
test
xor
and
pop
xor
pusha
cmp
jae
aaa
cwtl
or
cmc
cmpb
xchg
xchg
xchg
sar
pop
xchg
sbb
or
aas
iret
out
mov
cwtl
js
pop
clc
xor
jl
movsb
or
push
mov
push
aam
faddl
push
sub
and
cmp
dec
dec
mov
xchg
and
adc
int3
or
or
ret
sub
popa
push
sbb
cmp
xor
mov
adc
xor
push
mov
loope
in
add
in
fmull
fadd
or
fldcw
or
adc
adc
jo
dec
xchg
mov
lods
fwait
pop
icebp
dec
sbb
andb
loop
xor
pop
add
shll
mov
push
arpl
dec
and
mov
add
inc
cmp
add
sbb
dec
add
cmp
and
clc
test
jp
fldcw
pop
stc
gs
mov
lea
addl
xchg
sbb
sbb
dec
inc
push
sbb
stc
lret
popa
imul
loope
sbb
mov
push
push
fwait
pop
jb
cmpl
pop
mov
addl
test
sub
add
jnp
test
lea
imul
xchg
lock
and
into
xor
pop
roll
add
clc
jns
sbb
icebp
sub
adc
sbb
pop
mov
ret
mov
imul
pop
cs
into
cmp
push
add
fcompl
sbb
jge
or
sbb
inc
fsubrl
addb
shlb
mov
pop
xchg
les
jge
jecxz
adc
gs
leave
jne
jo
clc
adcb
je
push
add
xor
nop
test
sub
int3
or
or
mov
sbb
inc
ficoms
pusha
sbb
add
insb
push
loope
adc
cmp
cmpsb
mov
add
add
and
mov
jns
and
add
roll
testl
add
xor
ret
aas
stos
add
inc
cwtl
mov
cmp
dec
mov
add
aam
xor
sbb
dec
jl
hlt
pop
mov
jo
xchg
fisubrs
imul
sbb
inc
mov
shll
js
popa
mov
mov
add
jmp
xlat
add
adc
jbe
pop
fsub
fldl
adc
je
add
mov
jge
push
xlat
lcall
ret
or
mov
orb
inc
stos
ja
mov
pop
or
mov
mov
cwtl
adc
in
or
rcll
inc
sbbl
pusha
movsl
and
inc
mov
jns
scas
aas
xor
add
xchg
sub
ret
adc
xchg
cmp
jnp
add
jg
adc
loope
stos
fstpt
lods
or
push
rorb
cwtl
xchg
add
pushf
cld
pop
dec
adc
pusha
jno
dec
add
cmp
mov
jb
inc
imul
pop
sbb
enter
push
sbb
cs
xorb
movsl
fnstenv
lds
ds
add
arpl
push
add
mov
add
int3
scas
add
out
jg
adc
push
xor
jle
mov
add
push
lods
xlat
pop
imul
pop
movsb
cmp
shlb
jnp
jb
stos
cmp
jp
pusha
sub
pop
fs
jae
pop
mov
or
out
rcr
cs
xor
lock
out
add
aas
xchg
dec
sub
loope
data16
ret
iret
xchg
jns
and
add
pop
jo
dec
out
in
or
out
mov
inc
das
lcall
gs
stos
popa
xchg
mov
mov
lods
aam
xchg
jbe
add
loopne
mov
add
into
push
push
cs
sub
add
inc
stc
rcrl
dec
mov
add
xchg
mul
ja
sub
dec
mov
push
jne
inc
lahf
mov
cld
cmp
adc
pusha
dec
out
popf
jae
roll
loopne
and
mov
push
push
add
mov
rcrl
jl
outsl
mov
sbbb
mov
fwait
repnz
mov
sahf
mov
nop
mov
sbb
and
rolb
dec
inc
or
or
cmp
das
scas
sub
xlat
xchg
sbb
sbb
icebp
push
mov
dec
btc
or
inc
sub
pop
add
xchg
pop
xchg
inc
insl
cmp
shrb
push
das
adc
sub
add
test
sub
add
in
fadd
sar
adc
scas
psubusw
and
mov
mov
loop,pn
cvtps2pi
lock
and
pop
sbb
cwtl
pop
lds
sub
imul
inc
daa
add
mov
push
jecxz
push
add
lds
filds
add
sahf
inc
cmc
sbb
add
xchg
pop
dec
je
pusha
add
leave
add
jg
add
ror
cmp
inc
mov
pop
testb
jp
push
jno
ja
add
lcall
jp
add
mov
jp
sbb
loope
in
lret
mov
cmovl
add
fstpl
loope
testb
cmc
cmp
and
add
pusha
jmp
out
add
out
pushf
and
inc
je
dec
dec
jl
push
inc
adc
cs
sbb
roll
fs
sub
mov
xor
mov
dec
dec
push
std
rorb
nop
jns
add
jb
sbb
adc
iret
add
inc
dec
cld
add
dec
ret
push
add
pop
in
add
mov
sbb
sbb
push
jnp
add
rclb
stc
add
xor
add
pop
add
add
imul
test
inc
mov
add
adc
dec
and
lods
push
mov
pop
cltd
xchg
flds
jnp
insl
mov
loopne
inc
add
das
jb
cmp
dec
add
ss
pop
mov
cmp
cmpsb
mov
out
stos
repz
xorl
adc
nop
scas
add
popa
test
add
or
add
je
push
sbbl
mov
and
sti
ja
add
mov
add
xor
addl
cmp
call
add
xchg
and
lcall
ret
add
imul
and
and
das
int
sbb
cmc
cli
xor
ja
out
push
cltd
sbb
mov
fmuls
insb
sbb
add
arpl
aam
xor
jmp
jne
add
jp
mull
and
pop
push
shlb
cmp
nop
jle
mov
decb
add
adc
add
or
cmc
fcoms
in
pop
pushw
add
lret
ret
aas
out
adc
icebp
iret
add
sub
xchg
adc
push
add
add
jecxz
xchg
push
ljmp
into
int
mov
in
sar
pop
jecxz
add
or
pop
inc
jb
dec
sub
inc
insb
pop
xor
add
push
pop
mov
andb
outsl
arpl
jb
hlt
add
xor
and
inc
cwtl
sbb
fildl
add
hlt
xchg
add
js
add
inc
int3
jg
scas
mov
add
bound
and
xchg
outsb
inc
sub
push
stc
add
cmpsb
dec
in
jl
add
mov
adcl
xor
cmp
sbb
sbbb
add
arpl
push
xor
inc
mov
loope
or
inc
push
add
shlb
add
push
loopne
sub
mov
add
sti
xor
ljmp
movsb
mov
pop
inc
shl
test
mov
cmp
adc
clc
loop
push
mov
sahf
scas
pusha
adc
pop
or
shrb
and
dec
nop
fldcw
adc
aad
out
das
add
mov
stos
xor
inc
sbb
lock
cli
inc
mov
sbb
imul
cmpb
xchg
pop
mov
xor
add
adc
push
cs
pusha
mov
insb
sub
pop
mov
shr
xor
jmp
or
jg
xor
mov
and
sti
push
dec
enter
stos
sbb
lret
cld
mov
add
push
movsl
shlb
data16
push
rcll
and
fdivrs
inc
add
es
xor
sbb
arpl
jp
add
and
mov
jo
jecxz
add
jno
loopne
popf
outsl
sub
rcrb
push
xor
xlat
cld
cltd
sbb
iret
inc
dec
icebp
int3
pop
fsub
add
sub
orb
mov
xor
mov
outsb
test
mov
aam
sub
add
jge
jl
mov
out
xor
mov
mov
loope
lahf
push
pop
out
mov
jb
push
sbb
xchg
or
adc
loop
pop
xlat
add
sbbb
pop
rcll
test
repnz
cwtl
sbb
adc
mov
test
xor
jno
sbb
add
mov
out
push
push
out
cmp
add
jno
push
and
shlb
mov
roll
and
xchg
fstp
dec
rolb
xorb
add
fldcw
dec
es
pop
rolb
mov
sbb
push
or
mov
dec
incl
cmp
sbb
mov
and
add
popa
pop
add
outsl
fists
aas
repnz
rcrb
or
ja
push
dec
xor
pop
push
jnp
lret
divb
sbb
popa
add
shlb
jo
add
or
xor
lret
cmp
shlb
pop
add
imull
stos
add
sub
cmovl
pop
push
adc
lods
and
mov
add
jmp
inc
sub
cmpb
add
inc
lret
jnp
xchg
push
push
loop
movsb
es
mov
ret
fs
test
or
jne
clc
sahf
fwait
lock
jae
addb
aad
sbb
and
adc
mov
es
lea
imul
and
xchg
mov
jnp
inc
sub
cmpsb
sbb
xor
aaa
ret
imul
call
push
add
pop
cmpsb
inc
pusha
jecxz
dec
pop
fcomps
daa
insb
shrb
lods
inc
adc
jnp
xor
aas
lds
sbb
add
mov
cmp
or
jmp
sbb
ret
insl
into
gs
aaa
add
and
inc
inc
inc
jl
add
xchg
addl
add
outsl
ljmp
nop
lods
push
subb
or
pop
stc
std
les
mov
lcall
test
jnp
sbbl
add
and
les
jbe
xor
xchg
and
inc
fdivl
push
cmpsb
cli
or
pushf
push
mov
or
jae
add
dec
adc
inc
js
outsl
fiaddl
pushf
cmpsb
cmp
adc
add
dec
fiaddl
xor
dec
cwtd
xor
push
add
mov
add
sub
int3
push
pop
nop
xchg
bndstx
fs
pop
shr
lds
out
sub
test
or
pop
cs
pop
mov
add
sti
inc
addr16
pop
test
aas
pop
adc
inc
loop
fldcw
and
xor
add
int
jae
mov
inc
das
test
lcall
loopne
fnstenv
pop
arpl
mov
add
mov
rolb
movl
test
dec
aam
std
add
xchg
es
pop
cli
addb
cmp
rcl
add
mov
fldl
insb
pop
and
lock
xchg
xchg
xchg
dec
push
pusha
je
test
cltd
fcomps
pop
mov
es
and
fdivrs
nop
lock
add
or
and
add
mov
enter
inc
push
sub
jmp
pop
daa
jle
xor
aad
push
lods
fucomi
jbe
xchg
mov
xor
add
lods
cli
ret
incl
pop
cmp
clc
mov
jg
test
lock
or
adc
hlt
pop
add
sahf
pop
inc
add
cs
jo
lock
sbb
adc
out
xor
mov
popa
leave
mov
insb
sbb
push
dec
call
outsl
pop
add
dec
mov
mov
add
add
mov
mov
aas
mov
xchg
pushf
cli
cmp
sbbb
out
orb
sbb
xchg
push
popf
pusha
fiaddl
sahf
test
aaa
cmp
adc
sbb
sub
and
hlt
mov
in
add
movsb
aas
loope
sbb
cwtl
imul
add
add
or
mov
jo
rorb
inc
cmp
ds
leave
inc
mov
pop
cmp
sbb
add
push
and
rorb
mov
sbb
nop
cmp
push
sbb
push
jns
outsl
rolb
iret
sbb
add
cwtl
movsl
sbb
or
push
test
fldt
inc
dec
or
pop
hlt
jo
dec
cmp
nop
add
fstps
mov
sub
popa
add
sbbl
shrl
insb
pusha
lret
xor
push
push
xor
mov
add
adc
movsl
lods
sbb
add
iret
inc
pop
enter
cmp
das
cmp
push
xchg
mov
repnz
popf
sbb
inc
in
add
push
fdivs
mov
add
insl
cmp
lret
fucomp
add
jnp
lds
jle
mov
daa
cmp
cmp
nop
inc
cli
sub
dec
add
test
adc
inc
int
ja
adc
push
cmp
lea
sbb
ss
addl
inc
and
cld
xchg
lods
add
add
jo
mov
cltd
push
daa
push
mov
loope
cld
mov
add
lea
shlb
fbstp
mov
push
nop
mov
push
es
shll
test
loop
cmp
das
fldt
jns
jp
add
scas
cmp
add
or
xchg
fiaddl
rcrb
jmp
push
mov
jge
push
adcl
xchg
adc
mov
add
orb
adc
xor
ret
add
and
mov
mov
int3
mov
add
jge
cmpsb
mov
xchg
push
pop
mov
lock
sub
jns
jp
pusha
test
adc
mov
push
adc
movsb
mov
pop
ja
mov
jb
ret
stc
sbb
mov
add
cmp
out
hlt
in
aam
pop
out
jl
fcmovne
data16
dec
or
andb
iret
fldl
inc
dec
xchg
pop
sub
into
pop
cmp
add
inc
sub
test
out
sbb
add
insb
push
mov
dec
cmp
add
fwait
jg
adc
add
into
es
sbb
cld
or
out
mov
mov
mov
movsb
add
jns
xchg
fisubrs
pop
loopne
shll
pop
dec
ret
add
push
inc
movsb
rcrl
pop
and
or
cmp
mov
inc
or
xchg
add
enter
fisubrs
adc
pop
test
and
hlt
push
mov
into
rorl
pop
das
lock
or
cltd
add
push
addl
ds
jge
adc
iret
test
add
les
sbb
and
xchg
pop
testl
mov
xchg
cmp
es
lock
add
bound
test
or
cmp
out
leave
icebp
sub
add
and
fs
aas
add
adc
repnz
adc
jbe
popa
adc
add
ljmp
or
std
add
sub
repz
add
push
or
add
sahf
add
stos
faddl
roll
sbb
insb
cmp
stc
or
push
add
jb
call
adc
insl
filds
lds
addb
mov
jae
rclb
jg
pop
lahf
sub
mov
jo
inc
into
sub
cmpb
fildl
push
pop
sub
push
adc
add
xor
js
inc
xor
or
or
sbb
in
mov
xchg
int3
pop
frstor
sub
xchg
add
cs
and
sub
aas
movsb
add
push
and
push
lcall
jns
add
xchg
ret
fcompl
jbe
icebp
sub
pop
lods
and
xor
pop
lahf
xlat
jge
outsb
ljmp
and
cmp
mov
fsubrs
and
pusha
and
call
inc
mov
test
dec
prefetcht2
int
cwtl
outsb
mov
or
rol
adc
adc
xchg
mov
push
mov
movsb
inc
and
xchg
inc
cwtl
fs
movsl
rol
enter
leave
mov
lds
fwait
jbe
inc
push
add
fistpl
sub
or
lock
stc
add
loope
sbb
cmpsb
jge
inc
call
jl
add
ret
lcall
shr
jns
sub
test
cmpsb
adc
add
fs
mov
test
xor
mov
int
addb
add
cli
orl
filds
out
sub
inc
xchg
in
xchg
push
es
push
jg
fldenv
mov
add
insb
fcomps
push
jge
inc
inc
movsb
cmpsb
inc
ret
pusha
call
mov
addr16
repz
lods
mov
mov
in
ficompl
sti
push
push
clc
cmpsl
cld
lods
cmp
jb
push
inc
dec
inc
jmp
push
aam
lds
add
int
push
jno
jmp
in
stos
aas
das
out
pop
out
sbbb
add
push
mov
rorb
int
cmpb
in
sub
test
push
xchg
in
lods
mov
push
add
jl
insl
cmp
aad
jmp
dec
test
xorb
fldl
push
rol
nop
dec
jb
mov
mov
stos
sub
mov
roll
fdivrl
sbb
rcr
add
cmpsl
adc
or
sub
jmp
add
lret
rorl
int
jne
push
cmp
jge
cmpsl
jno
adc
cli
addb
out
js
les
lods
sub
mov
sbb
add
push
dec
push
add
adc
cmp
add
dec
popa
les
inc
mov
sub
mov
push
adc
rorb
addr16
xchg
js
inc
pop
pop
add
or
ret
mov
pop
inc
fmul
mulb
dec
hlt
aas
add
or
mov
je
cmp
mov
add
cmp
movl
fcmovb
cmpsl
dec
popa
imul
pushf
pop
popf
pop
jb
lret
out
fs
mov
inc
cmpsl
add
xchg
add
inc
dec
sub
add
jle
push
repnz
jae
add
lock
mov
and
rcl
add
mov
aas
xor
outsl
fcmovb
jno
dec
add
dec
aam
fadd
inc
nop
pusha
movsb
pop
cwtl
cs
xor
pop
roll
sbb
or
jbe
push
inc
push
or
pusha
dec
sbbb
push
add
cmovnp
jne
add
push
loop
dec
ret
adc
aaa
add
inc
sub
outsl
jne
xor
out
imul
test
sub
ja
jb
andl
inc
xchg
mov
movl
pop
cmp
fildll
lea
add
or
ss
pusha
mov
xor
lock
mov
cld
xlat
adc
setb
popa
pop
add
lahf
push
and
int
cli
push
ss
pop
jo
dec
out
mov
pop
mov
mov
rol
add
sub
mov
add
mov
or
aaa
sbb
add
and
mov
daa
cld
sbb
ret
and
in
mov
sbb
cmp
loopne
mov
inc
shll
call
adc
adcb
aaa
mov
lcall
push
push
jge
lock
mov
mov
in
push
dec
mov
pop
test
mov
sbb
mov
jb
mov
cmc
rolb
pop
cmp
dec
mov
aaa
push
clc
je
lods
rclb
int3
pop
faddl
mov
adc
add
mov
sub
mov
iret
sarb
repz
push
pop
lods
cli
pop
data16
cld
sub
xor
bound
xchg
push
add
and
iret
nop
adc
test
add
loop
xor
jae
sub
add
adc
cmp
mov
movsb
int3
std
adc
pop
sub
mov
out
inc
loop
in
add
outsl
imul
hlt
inc
mov
rcrl
imul
sbbl
movsb
and
add
jno
push
lret
push
pop
push
pushf
add
xor
push
inc
jl
add
cmp
lahf
popf
dec
pusha
pop
push
loope
popa
xchg
add
adc
mov
pop
dec
and
push
xor
das
add
int3
adc
leave
sbb
insl
xor
loop
cmp
arpl
pop
sub
data16
inc
add
add
pop
adc
sbb
loope
and
jle
mov
mov
ljmp
xchg
and
xor
scas
push
sarb
inc
lea
pop
out
mov
xor
sbb
mov
mov
rcrl
lcall
xchg
inc
add
aas
pop
cwtl
add
outsb
xor
xchg
add
and
stos
rorb
or
rclb
add
mov
jne
and
call
mov
lods
cltd
es
hlt
inc
and
sarl
repnz
lcall
xchg
cltd
xchg
pusha
jnp
cmovnp
outsb
inc
ret
sbb
add
push
andb
out
orb
mov
call
and
push
js
sbb
movsb
fwait
rolb
dec
inc
mov
xchg
jns
cmp
ret
jge
popf
je
iret
pop
sub
daa
hlt
adc
push
lock
data16
addr16
pop
sbb
xchg
adc
push
add
in
test
icebp
out
cltd
mov
inc
movsl
push
add
loop
dec
imull
mov
orb
lcall
dec
inc
int
outsl
lods
push
dec
je
hlt
movb
jmp
inc
xchg
jp
sbb
sti
faddl
jno
push
mov
inc
jo
add
ret
iret
xor
stc
jae
jbe
cmp
inc
add
mov
and
les
sbb
inc
push
in
stos
dec
mov
pop
iret
and
test
xor
out
mov
push
dec
aad
push
sub
cmp
popa
mov
shrl
sarb
loopne
leave
mov
adcb
jae
add
mov
pop
mov
out
jnp
pop
jne
pop
dec
mov
testb
sub
rolb
ret
inc
in
adc
adc
fists
iret
sub
cmp
pusha
push
sub
mov
xchg
pop
fildl
jbe
push
loope
add
xor
sbb
stos
dec
nop
inc
cli
jmp
lods
sbb
push
mov
xlat
movb
loop
sub
ret
cmp
mov
inc
movsl
and
jns
mov
test
dec
cltd
popa
stc
and
lods
add
sti
sbb
test
rcr
fsubr
lock
push
aas
mov
ret
movb
adc
pop
fldl
inc
popf
mov
add
mov
jecxz
loopne
int3
or
xor
and
mov
jne
pushf
filds
lods
pushf
stc
inc
mov
test
and
xchg
loopne
cmp
lock
xor
lahf
icebp
push
and
jno
add
mov
add
xor
test
add
lods
test
outsb
sub
and
pop
scas
ror
push
xchg
or
clc
outsl
clc
or
dec
bound
rclb
pop
cwtl
cs
sbb
jae
mov
int
and
or
aaa
imul
sbb
sbb
and
push
sub
sbb
adc
cmpsl
dec
inc
cmp
sbb
jp
adc
or
mov
jo
cmp
xor
cmp
or
mov
adcb
or
pop
lods
cmc
pop
xor
inc
xchg
mov
or
pop
pusha
fsubp
inc
das
push
dec
cmp
ret
fsubr
dec
lods
cmc
incl
leave
test
cmp
sti
add
pop
add
bound
inc
or
testl
inc
dec
cli
ja
das
lods
lods
fmuls
push
insb
pop
lea
imul
addr16
movsl
fcoml
add
aaa
ja
mov
repz
or
sub
ljmp
in
dec
fwait
add
in
sahf
popf
orb
pusha
cmpsl
adcl
mov
jne
mov
jo
sbb
test
clc
jns
adcb
jno
cld
or
push
dec
psrad
mov
dec
arpl
push
popa
loop
add
cwtl
mov
xchg
scas
mov
add
and
addb
mov
push
repz
mov
out
xchg
pushf
dec
add
push
add
test
jns
in
mov
jno
hlt
add
cli
add
push
lea
xchg
cmc
rsm
add
jg
inc
jo
xorl
add
or
popa
cmp
cmpsb
cmc
xor
inc
inc
lock
push
pushf
mov
xor
jmp
je
adc
rcrb
andb
push
jg
fdivp
pop
or
sub
test
inc
test
and
add
mov
or
push
pop
or
inc
mov
jle
mov
cli
rorb
lea
xchg
mov
pop
pusha
rorb
ja
outsl
pop
mov
xor
loop
addb
into
adc
aas
mov
call
inc
xchg
pop
call
or
fisttps
cli
add
imul
push
lret
pushf
clc
add
cmp
push
xchg
push
inc
mov
push
sub
dec
frstor
sbb
sarb
inc
add
and
stos
insb
ret
add
push
xchg
fsubrp
je
in
sbb
movsl
into
pop
or
jne
js
jge
fiadds
mov
mov
sbb
fidivrl
js
add
add
dec
and
push
sbb
sub
test
popf
mov
subb
fsts
out
inc
xchg
push
xchg
incl
mov
push
jb
sarl
mov
mov
loopne
mov
dec
mov
inc
xor
push
lods
mov
mov
xor
or
add
push
and
inc
shrb
ret
cwtl
mov
xchg
sbb
nop
lds
decb
dec
fistl
mov
jl
or
jno
test
xchg
adc
rcrb
movsl
add
iret
lea
pop
adc
cmp
xchg
fdivl
pop
xchg
into
ss
and
or
imul
add
and
fidivs
addb
lds
adc
or
inc
rol
xchg
and
adc
push
call
aas
mov
mov
jns
add
push
imul
add
dec
mov
cmp
pop
leave
sub
xchg
mov
into
push
pop
lahf
adc
inc
fistl
xor
add
int
add
ficomps
out
cmp
leave
orb
xlat
inc
mov
pop
add
inc
sti
adc
arpl
adc
out
clc
movsb
movsl
fiadds
xor
pushf
inc
aad
add
insl
jge
lock
in
fistl
and
insl
sub
xor
es
pop
iret
and
rolb
testl
inc
in
sti
ret
cmp
xor
adc
cmp
in
cmp
js
roll
dec
ret
movsb
je
int
pop
push
adc
test
int3
js
and
adc
imul
xlat
sbb
je
xchg
add
or
cwtl
iret
xor
sub
daa
pop
mov
sbb
dec
xchg
push
cwtl
cmp
cmpsl
sub
xor
adc
aad
in
movsb
jno
add
mov
dec
lcall
in
jnp
repz
xor
enter
mov
test
sbb
ljmp
lea
mov
pusha
add
sub
mov
fsubrs
or
popa
loop
push
adc
ja
add
sub
dec
inc
add
xor
mov
push
lea
push
mov
pushf
cmp
dec
xchg
mov
stos
stc
add
fnstcw
dec
popf
add
pusha
push
and
xchg
cmp
add
fisubs
sub
jle
push
movsb
popf
dec
into
or
aas
out
pop
pushf
mov
shl
lahf
neg
ret
scas
mov
ficoms
sbb
mov
xchg
shlb
adc
ret
cmp
dec
loope
cmp
cwtl
loop
mov
scas
stos
add
out
inc
out
sub
mov
dec
aaa
je
cmpsb
adcb
movsl
fs
daa
cli
outsb
int
outsl
mov
mov
jmp
test
add
mov
popf
andl
jle
pop
xchg
dec
pop
and
push
ret
push
push
cmpsl
subb
xor
mov
cmp
xor
xchg
out
pop
js
pushf
mov
add
adc
outsl
sub
sbb
jnp
fsubs
xchg
fstps
in
xorb
das
mov
mov
xchg
push
cltd
shrb
out
push
imul
in
adc
cmpsl
mov
popf
mov
add
cmp
add
and
xchg
insb
orb
fimull
andb
sub
inc
add
jo
mov
pusha
out
pop
cmp
add
mov
or
push
add
rcr
mov
add
aas
jge
sahf
cwtl
loopne
stc
add
in
inc
or
dec
and
add
mov
iret
rcrb
js
push
aam
movsl
sub
jmp
fdiv
movsb
in
loopne
cmp
xchg
movsl
sbb
mov
out
xorb
cmpsl
mov
mov
and
call
mov
test
out
scas
adc
inc
add
inc
mov
call
rep
add
mov
adc
rclb
clc
movsb
or
cmp
pop
jge
sbb
decb
mov
xor
and
push
and
cli
je
clc
add
dec
mov
hlt
xchg
out
mov
mov
fstps
test
adc
jo
mov
test
movsl
add
jae
inc
cvtps2pi
mov
repz
rorl
pop
and
insb
and
cmp
pop
inc
movsb
and
jb
add
lcall
jle
jmp
shr
arpl
imul
nop
rcl
adc
sbb
and
into
pusha
adc
in
out
pop
push
inc
push
inc
dec
sarb
mov
inc
rclb
cmp
sub
sub
cmpsb
movq
cltd
xor
xchg
and
add
mov
sbb
js
jecxz
mov
push
nop
mov
sbb
mull
pop
ficomps
add
leave
rolb
inc
dec
fwait
xchg
pop
or
jge
mov
das
dec
mov
xor
jo
orb
mov
add
es
call
jge
out
add
sbb
xchg
call
cmp
mov
push
lahf
sub
push
xchg
call
inc
cmp
inc
int3
test
sbb
lahf
add
mov
loopne
cli
into
lds
mov
inc
scas
add
xchg
mov
sbb
sub
jne
cs
clc
add
popf
mov
pop
stos
cli
iret
and
dec
sub
decb
test
adcb
mov
or
ja
and
popf
rol
xchg
mov
fnstsw
pushl
adc
scas
daa
jnp
subb
and
mov
sub
lahf
pop
mov
lds
mov
cwtl
sbb
jbe
test
mov
mov
and
add
gs
jp
scas
fs
test
xchg
dec
adc
test
pop
inc
cmp
inc
inc
lods
xlat
push
adc
cmp
push
sbb
stc
dec
aad
addb
dec
mov
xor
jmp
add
out
rolb
dec
or
gs
or
adc
jl
push
pusha
test
and
mov
inc
jns
fisttpll
test
push
cwtl
int3
and
out
adc
xchg
sub
insl
xor
or
pop
sub
mov
decb
jmp
orl
mov
adc
xchg
and
and
push
xchg
push
test
xor
add
mov
fadds
ja
ret
or
cmp
enter
push
add
jno
rclb
sbb
mov
push
add
in
adc
cmpsb
pop
inc
xchg
push
insb
dec
pop
xchg
add
sti
movsl
ror
pop
push
inc
xor
test
mov
mov
cli
clc
and
ds
loope
ds
addl
clc
jbe
arpl
nop
mov
js
mov
adc
add
inc
dec
or
pop
int3
hlt
and
fisttps
popf
pop
cmp
subb
or
adc
jnp
add
and
push
rclb
mov
cmp
and
outsb
data16
pop
mov
xchg
dec
nop
inc
mov
or
imul
mov
and
sub
rcll
subb
ret
mov
loopne
push
push
scas
pop
fwait
aad
dec
push
out
popf
movsb
andl
iret
sub
outsb
add
fucomi
pop
or
xchg
add
or
push
cmp
xor
add
insl
dec
cmp
fldcw
fisubs
pop
inc
add
insb
jbe
sarb
adc
inc
out
test
test
pop
jno
adc
out
and
std
adc
adcl
mov
add
jne
aad
orb
pop
add
icebp
daa
lret
lock
cmp
adc
xchg
adcb
shr
xchg
add
sbb
dec
pusha
cmp
pop
mov
pushf
imul
mov
or
repz
adc
aad
xchg
loopne,pn
ss
mov
mov
lret
sub
hlt
std
inc
and
push
lock
clc
loope
push
decl
add
outsb
jl
jg
dec
nop
out
inc
rorb
insb
ret
lahf
mov
lods
add
push
inc
jae
icebp
jno
add
mov
dec
out
push
adc
mov
add
inc
scas
dec
cmpl
inc
or
fldcw
fsubrs
hlt
dec
adc
pop
dec
loopne
inc
ja
in
pusha
stos
sbb
mov
mov
orl
in
fisubrs
jne
add
das
cmp
push
es
jg
xchg
add
xor
sub
cmp
add
aas
xor
cmpsb
dec
sub
movsl
mov
pop
pop
sbb
and
inc
inc
xchg
sbb
test
add
mov
xchg
or
push
sbb
fwait
inc
mov
dec
or
jbe
addr16
loope
jae
lahf
cld
mov
ret
pop
es
add
out
cmp
lahf
xchg
imul
stc
adc
dec
or
jl
jb
push
sbb
pop
jbe
add
cmp
neg
or
in
push
adc
mov
cmp
sub
inc
js
cmp
fwait
dec
je
push
enter
mov
jno
pop
lret
dec
and
sub
pop
add
fisttpll
leave
icebp
adc
xchg
xchg
mov
pop
aam
fiaddl
inc
cmp
inc
pusha
mov
cmpsl
or
sub
inc
pusha
fnstenv
or
fmul
add
pop
sahf
hlt
rorb
xor
das
aas
shll
insb
mov
add
andb
dec
add
iret
bound
dec
jno
fwait
push
jo
mov
or
out
pop
int3
inc
sub
cltd
fisttps
addr16
cwtl
fmul
add
stos
add
pop
xor
orl
push
loope
lds
mov
aad
nop
adc
ja
fidivrl
jae
mov
and
add
imul
mov
iret
pop
and
cmp
mov
mov
xor
add
dec
mov
push
push
pop
outsb
lret
mov
or
mov
imul
jg
add
cmp
bnd
movsb
fadds
inc
addr16
xchg
sbb
jno
adc
ret
inc
pop
add
aaa
fildl
shrb
mov
xor
push
pop
add
lahf
inc
xchg
daa
xchg
clc
int
std
xchg
subb
lret
adc
mov
inc
imul
cld
add
ja
pop
lret
xchg
sub
jmp
je
insb
pushf
add
repz
lock
stc
stos
subl
lea
adc
xchg
push
leave
sub
add
cmp
xchg
shlb
mov
or
data16
mov
and
or
scas
xchg
xchg
nop
icebp
test
call
xor
in
mov
xor
xor
mov
hlt
addr16
mov
fdivp
sub
dec
dec
xchg
leave
add
aas
in
fildll
mov
fisubrs
add
xchg
adc
notb
pop
nop
push
in
sbb
mov
pop
fsts
je
into
add
sbb
mov
iret
std
andb
out
jge
cmp
addr16
sbb
or
inc
xchg
push
push
aas
add
ljmp
adc
push
jp
add
sub
pop
insb
test
rcr
stc
sub
add
sarb
lahf
jae
loop
dec
cmpsl
loope
in
jmp
aam
cs
cmpsl
iret
and
xor
or
scas
mov
jns
add
popf
push
es
sub
flds
pop
xor
inc
push
sub
lgs
in
fcoms
rol
mov
jo
mov
mov
xor
xor
popa
push
adc
dec
mov
and
add
rorb
dec
fmul
add
insl
leave
pushf
int3
xchg
sbb
pop
mov
lods
inc
cmp
or
fldt
fs
pop
ret
dec
jl
jmp
popf
lea
sub
adc
insl
dec
out
jle
je
add
mov
aas
add
insl
cmp
mov
mov
inc
shl
in
add
push
shl
push
cmpsb
pop
lds
push
arpl
ss
xor
js
add
popf
rcrl
pushf
lret
adc
and
pop
cmp
loop
cld
ret
and
popa
int3
pop
push
dec
test
popf
dec
cmp
int3
and
addb
in
cli
icebp
or
add
pop
jg
dec
cmp
push
add
pushf
cmpsl
nop
sub
xlat
add
mov
movsb
xchg
and
mov
ljmp
lock
sbb
pop
jg
adc
and
enter
add
lret
lock
add
outsb
test
xchg
cmp
and
cmc
xchg
and
loope
xor
add
mov
lock
add
insl
movsl
jns
add
push
cmp
jo
imul
adc
cwtl
add
adc
pop
push
mov
pop
add
xor
fidivl
push
jns
sub
js
ret
clc
repz
iret
sub
xchg
fisubrs
shlb
push
cmc
sbb
push
inc
in
js
mov
out
add
sbb
in
shll
and
add
jns
lea
dec
push
xlat
push
adcl
mov
and
adc
lcall
dec
or
jecxz
xor
cmc
mov
or
xchg
repz
inc
cmpsb
inc
ds
mov
movq
pop
xchg
mov
fistl
lcall
cmpsb
sub
xlat
push
test
add
mov
or
insl
stc
test
cmpb
push
and
sub
and
inc
adc
pop
xor
aas
aaa
cmp
add
std
fnstenv
or
shr
sub
in
xchg
test
add
cltd
xchg
dec
mov
inc
ja
scas
mov
nop
push
push
decw
push
lret
pushf
add
xchg
xor
mov
jne
adc
inc
loop
sub
call
int
outsb
xor
jo
enter
mov
out
add
test
iret
fstpt
fiadds
push
or
cmp
call
ja
stos
xor
push
mov
dec
arpl
jb
mov
stos
add
daa
repz
aas
icebp
push
mov
nop
pusha
call
cmp
dec
aaa
in
insw
xchg
sub
adc
faddl
xchg
nop
in
lret
cmp
fs
xchg
shrl
arpl
cmp
in
or
notb
ljmp
mov
fdivs
daa
add
xor
push
arpl
pushf
std
sub
lret
jecxz
sbb
imul
jns
add
pop
test
sahf
jnp
jns
mov
icebp
add
inc
inc
pop
out
cs
and
add
add
negl
dec
sarl
push
inc
push
and
loope
cmpsb
and
jnp
adc
lcall
mov
cmp
mov
int3
fisubs
mov
mov
fcoms
add
push
ret
aaa
push
push
bound
mov
es
ljmp
and
pop
add
daa
add
lock
push
mov
push
push
add
push
adc
fsub
pop
add
fmull
sti
mov
sub
and
xchg
inc
adc
sub
jge
mov
fs
and
adc
adc
je
fcmovu
into
add
jle
aad
in
jmp
mov
adc
cld
dec
mov
call
fldt
test
push
loopne
cmp
mov
xor
mov
xchg
nop
push
push
scas
or
movd
je
jns
mov
xor
dec
add
jmp
xlat
lahf
mov
xor
add
incb
mov
leave
pop
pop
test
push
cmp
inc
in
or
pop
adc
movsb
pusha
in
mov
xchg
add
add
jg
pushf
cmpl
pop
jl
push
roll
mov
daa
fistpll
add
int
subl
mov
inc
push
adc
and
xchg
inc
pop
or
out
pop
add
mov
xorl
sahf
adc
in
xor
and
or
pushf
mov
push
movsl
sub
int
add
outsb
clc
or
iret
sbb
or
popa
mov
dec
cmp
add
pushf
fistpl
jnp
and
aaa
add
pushf
cltd
idivl
dec
andl
popf
nop
stc
jl
xchg
push
sahf
sub
jl
in
popf
mov
jbe
into
and
lods
jmp
sbb
addr16
dec
lcall
lds
lret
into
rolb
cmc
cmp
mov
push
inc
js
add
sub
ljmp
add
sti
fiaddl
mov
xchg
or
mov
and
push
daa
mov
shrb
insb
pop
cmp
mov
add
in
jl
xorb
imul
lock
jno
ret
lock
test
ljmp
adc
addb
clc
push
cltd
jle
add
and
adc
popf
imul
sbb
sub
adc
cmp
imul
in
jns
add
ret
mov
jge
mov
mov
and
dec
pop
enter
lahf
into
andb
das
adc
or
ja
inc
jge
lret
loopne
fisttpll
je
cmp
repnz
ret
mov
and
mov
jl
sbb
iret
add
arpl
movsb
mov
std
dec
sbb
pop
add
dec
mov
aam
adc
push
sub
int
push
mov
mov
lahf
orb
jg
hlt
ljmp
add
push
jmp
inc
leave
nop
fiadds
xchg
bound
and
push
add
lahf
test
jmp
and
mov
add
dec
inc
call
sub
insl
sbb
ds
dec
add
dec
es
dec
pop
lock
pusha
mov
adc
cwtl
loop
add
ret
ljmp
mov
adc
pop
in
xchg
push
sub
or
nop
dec
push
add
aas
jl
in
push
hlt
and
xchg
outsl
cmp
add
int3
daa
aaa
mov
or
or
jno
iret
sarb
dec
test
mov
add
jnp
or
test
sub
or
aas
add
iret
sbb
cld
inc
cmpsl
or
sbb
mov
add
lods
pushf
xor
and
popa
fld
insb
outsb
add
pop
lea
xlat
sub
cld
xchg
aaa
add
mov
cli
add
jbe
cmp
pusha
shl
lcall
leave
pop
jb
add
test
aas
pop
cld
push
and
insl
out
es
movsl
cltd
nop
pop
das
inc
sbb
and
repz
inc
sub
pusha
jns
dec
lock
add
or
push
pop
xchg
jb
loopne
add
xchg
mov
clc
aam
push
shrl
push
cmp
mov
sub
fadd
mov
loop
js
pop
cmp
dec
sbb
mov
arpl
and
mov
pop
gs
add
xchg
add
ficompl
mov
mov
add
in
add
inc
aas
and
xor
xchg
mov
out
fadds
into
ds
add
fwait
xor
add
jb
ret
push
xor
mov
cmp
cltd
int3
popa
pop
or
fdivr
cwtl
xor
pusha
dec
mov
mov
int
sbb
lock
mov
mov
pushf
shl
cmp
mov
andl
add
dec
stos
inc
jns
jl
inc
push
imul
adc
fimull
add
cld
loope
jne
sub
pusha
mov
aam
mov
xchg
and
lcall
loop
add
or
adc
dec
pop
insb
cmp
mov
punpcklbw
xor
xbegin
dec
faddl
bound
mov
dec
mul
push
mov
mov
je
jecxz
add
outsb
jmp
adc
loop
rolb
dec
movsb
and
add
mov
loop
testb
cli
cwtl
enter
addr16
je
rcll
das
movsl
xor
or
xor
dec
mov
stos
mov
ret
sbb
jl
adc
pop
sar
mov
jae
orb
xchg
push
add
fcomps
fisttps
mov
hlt
jecxz
cmp
push
cld
mov
pop
cs
addl
test
loopne
cmp
lds
loope
ljmp
inc
sbb
fneni(8087
mov
xchg
xchg
rolb
and
or
pop
push
ja
pusha
add
inc
adc
lret
jl
clc
iret
cmp
jmp
add
sbb
jnp
cwtl
pop
nop
movsb
sbb
lods
movsb
sbb
push
mov
pop
sub
mov
mov
loop
enter
lahf
mov
loopne
ret
and
movsb
call
fldl
imul
hlt
add
test
adc
add
sbb
xchg
mov
pop
and
dec
icebp
cmp
inc
pop
adc
inc
jo
ss
pusha
bound
out
and
mov
fimuls
insb
aaa
test
and
adc
rclb
mov
dec
dec
mov
sub
jmp
pop
test
xor
fcoms
and
mov
ja
negb
pushf
cmp
scas
dec
lods
or
leave
les
xorb
dec
add
imulb
adc
push
cmp
fmull
and
cwtl
mov
and
xchg
mov
xchg
adc
insl
shlb
mov
cmp
pop
enter
fdivp
jg
add
loop
pop
dec
inc
sub
add
add
xor
aas
push
pushf
dec
inc
les
mov
inc
add
dec
add
xchg
jp
popa
fwait
orb
add
aas
in
sti
gs
inc
pop
add
xor
lret
pop
dec
fisubl
push
insl
dec
and
into
sub
cmp
mov
inc
pop
fnstenv
shufps
add
cmc
add
pop
add
in
sbb
pop
mov
insb
and
mov
push
push
in
pop
adc
mov
inc
lcall
rcr
fs
or
dec
and
jo
cmp
movl
lds
jmp
mov
imul
sub
xor
fcoml
stos
lods
add
leave
sub
test
out
shr
pusha
pop
dec
push
fimull
or
dec
rorl
and
lahf
rol
aaa
adc
add
in
xchg
mov
sbb
cmp
add
fstpt
mov
sbb
popa
invd
push
add
xor
pusha
aad
inc
in
jg
imul
sub
les
mov
pop
cs
in
sbb
lock
and
into
add
pop
rorb
mov
sbb
pusha
xor
jg
push
loop
cld
and
push
arpl
je
mov
sbb
push
adc
inc
pop
pushf
loopne
add
dec
dec
jns
push
cmpb
mov
insl
add
push
imul
jno
dec
xchg
add
ret
bound
outsb
je
cmp
inc
cwtl
cmova
push
push
mov
add
mov
lock
and
sti
add
out
stc
jb
mov
lods
cmp
mov
jmp
cmp
les
push
cmc
mov
adc
popf
add
mov
add
sbb
dec
or
and
int3
fs
jmp
push
or
mov
fnstcw
sub
mov
cmp
inc
jns
sbb
or
and
std
add
rolb
jp
jg
loopne
xchg
ds
test
mov
add
sub
inc
cwtl
push
insl
push
and
sbbb
xchg
pop
sub
orb
std
lret
adc
fstpt
jmp
fnstsw
push
add
repz
jo
and
cmp
repnz
and
psraw
int3
jge
mov
aam
addb
jecxz
out
sbb
jb
cmp
aam
mov
mov
adc
jge
stc
jbe
sbb
dec
mov
imul
add
pop
movsl
push
cmp
pshufw
and
push
push
mov
testb
ficoml
lea
loopne
push
mov
enter
mov
negl
aas
xor
cld
rcrl
adc
es
lea
xor
addr16
dec
xor
subb
cwtl
sahf
pop
mov
pop
push
sub
mov
mov
or
xor
test
and
outsb
mov
cltd
aam
xor
stc
jb
ljmp
stos
push
icebp
aam
test
arpl
xchg
andl
je
add
push
inc
cmp
add
pop
push
addb
or
sahf
repz
into
popa
lods
pusha
lock
xor
add
adcl
cmp
add
test
call
test
jmp
add
add
jg
adc
mov
aad
or
lods
push
add
ret
jecxz
push
mov
popa
test
pop
nop
mov
xchg
add
int
dec
xlat
lret
insl
dec
mov
jge
push
insb
sbb
sub
or
cmp
vpcmpgtd
mov
mov
roll
adc
lcall
in
pusha
add
add
scas
pusha
popa
pop
cmp
add
xor
sub
mov
and
pop
mov
hlt
sub
pop
leave
fildll
sbbl
shrb
cmp
clc
adc
inc
xchg
mov
pop
mov
fdivr
push
fwait
and
ja
lahf
push
fisttpl
int
cmpsb
test
mov
mov
jecxz
cmp
and
add
sarb
loopne
cwtl
sbb
jg
inc
imul
test
out
add
ror
cmpsb
popa
mov
lock
out
shl
sub
add
std
sub
sbb
sub
jmp
fildl
pusha
xchg
push
adc
mov
xchg
xchg
hlt
movsl
mov
pop
mov
adc
sbb
stos
add
loope
jg
rcll
add
ja
cmc
loop
xchg
cmp
push
or
ljmp
push
pop
scas
pop
dec
es
push
cmpsl
inc
gs
add
loop
mov
and
test
mov
outsl
xchg
pop
lds
push
pop
sub
adc
mov
add
daa
cwtl
inc
call
leave
xor
sub
xchg
mov
xor
cmp
ss
test
push
arpl
mov
popf
loope
mov
or
hlt
hlt
testb
movsl
jno
inc
or
or
in
imul
adc
cld
int
xor
outsl
or
mov
stos
xorb
jle
movzwl
test
mov
add
jns
sahf
mov
inc
adc
push
sarb
lcall
fisttpl
dec
outsl
pop
mov
movsl
enter
bts
cld
mov
cmove
push
out
xchg
jge
add
dec
lret
test
inc
mov
add
popf
add
cmp
adc
cmp
xchg
add
jae
jo
mov
cmp
sbb
sbb
out
push
fidivrs
xor
nop
test
add
lock
jmp
repnz
mov
xchg
cmp
and
dec
fsubrl
add
leave
pop
lds
int
mov
jb
outsl
pushf
add
mov
push
add
sbb
sbb
lahf
dec
pop
rcrl
lds
sbb
icebp
and
push
cmpsl
jle
adc
inc
mov
mov
add
fistl
rol
js
sbb
pop
or
push
mov
add
int
dec
adc
in
pop
test
or
mov
into
clc
add
xor
xor
mov
push
mov
jmp
aaa
aad
sahf
bound
add
sbb
mov
sarb
adc
xorb
les
and
loopne
cld
sub
sbb
push
std
ret
adc
adc
inc
loopne
loopne
mov
sbb
xor
xchg
adc
adc
es
test
xor
and
adc
je
mov
insb
fstpt
leave
aad
sbb
inc
repnz
mov
mov
mov
sub
xchg
push
add
pop
out
mov
jb
xchg
mov
cmp
pusha
add
xor
add
inc
mov
sub
in
lods
arpl
cwtl
mov
sbb
leave
jo
and
daa
add
dec
rorl
cmc
push
ss
or
in
xchg
adc
inc
inc
add
jnp
or
or
and
dec
adc
dec
mov
inc
jns
stos
cmp
add
test
call
cs
rcll
cmc
cmp
adc
jno
sahf
int3
xor
sub
sub
gs
lods
inc
sar
adc
jne
cmp
mov
lock
int
notb
inc
add
dec
loopne
inc
push
or
sbb
ret
sbb
scas
mov
rolb
mov
cmp
and
or
jae
rdtsc
and
push
mov
pop
pop
xor
pop
add
add
ror
femms
sarb
jae
lods
inc
int3
adcl
mov
sbbb
push
sahf
stos
push
adc
jmp
add
push
pop
in
cld
cld
loope
mov
fbld
scas
int
rolb
mov
dec
repnz
push
ret
mov
dec
jo
push
lds
fdivrs
movsb
mov
add
rcrl
fwait
call
in
jae
mov
test
gs
add
movsb
lock
sbb
lock
mov
and
test
sub
movsl
mov
pushf
add
sbb
push
das
pop
ljmp
adc
jo
cmpsb
mov
add
dec
fiadds
xorb
xchg
mov
jo
push
ret
or
mov
ss
shlb
cmp
dec
adc
pop
dec
pop
out
pop
test
loope
mov
nop
push
sbb
add
mov
sub
add
pop
ret
inc
lock
pusha
lods
sbb
cmp
mov
add
insb
popa
mov
add
xchg
jg
into
and
cmpsl
ds
push
pop
xchg
xchg
mov
and
push
add
inc
pop
test
loop
mov
fadds
sti
cmp
enter
or
dec
xor
add
bswap
lcall
jmp
loopne
cmp
adc
push
add
dec
add
out
fistps
cmc
add
mov
cmp
in
lret
xor
xor
push
push
hlt
fwait
inc
mov
add
int
hlt
in
sub
mov
adc
ds
inc
or
mov
add
cmp
push
add
int3
ret
jo
test
frstor
xor
sahf
mov
aam
out
push
dec
and
mov
and
mov
out
mul
idivb
das
lahf
or
inc
sbb
sub
ljmp
and
push
add
pushf
push
jae
cmpsl
fists
mov
dec
inc
iret
or
mov
cs
in
rcll
pop
pxor
jbe
add
xor
lods
lock
fs
sbb
hlt
add
je
mov
sbb
nop
repz
in
sbb
mov
daa
shlb
test
cli
iret
pop
gs
xlat
add
and
aas
rclb
clc
add
mov
inc
ss
insl
mov
mov
out
lret
mov
pop
pop
test
pop
test
add
inc
insb
xchg
adc
adc
lods
push
add
and
and
xor
stos
aad
mov
movsb
add
jae
out
ret
loope
xchg
fcmovbe
push
fs
add
pop
add
jb
pop
inc
xchg
xor
add
or
sub
mov
inc
mov
add
lds
push
mov
and
cmp
jg
fldcw
pop
cmpsl
pushf
mov
add
sub
mov
mov
rcr
and
and
pop
enter
pop
jnp
scas
push
and
pop
cli
push
sbb
test
sbb
lock
nop
inc
js
rolb
push
aas
xor
cmp
jge,pn
inc
es
adc
jp
jo
fs
pop
jb
rcr
inc
jl
add
js
jo
int
insb
add
sub
inc
sub
xchg
adc
adc
test
inc
cwtl
add
mov
clc
loop
mov
xchg
sub
fdivl
add
in
data16
movsl
sbb
add
mov
mov
lea
adc
lret
data16
cli
shll
and
sbb
xchg
dec
inc
punpckhbw
sub
and
mov
nop
lock
dec
xor
pushf
pusha
nop
xorl
into
fdivs
mov
hlt
xchg
adc
fsubrl
mov
repz
add
btr
add
popf
ljmp
out
or
xchg
insb
sbb
icebp
shl
ja
mov
pop
sbb
mov
sarb
jae
push
into
fcoms
sub
stc
leave
pop
lahf
in
mov
add
in
mov
ja
and
ret
faddl
mov
xchg
les
sub
lahf
addb
aad
popa
mov
pop
mov
jmp
dec
cmc
or
inc
rolb
fcmovb
mov
stos
pop
in
jbe
pop
push
cmpsl
and
jns
add
lods
xchg
inc
test
dec
ret
inc
xchg
and
sub
lret
mov
lea
sub
sbb
adcb
negb
enter
out
sub
mov
insb
nop
fld
pop
jle
add
popl
adc
jns
add
xor
les
sbb
fsts
xchg
and
and
add
scas
aaa
andl
adc
jg
or
mov
sbb
movsb
cmp
cmp
mov
jp
cmpb
add
ret
jmp
leave
sti
sbb
jp
add
mov
adc
fnstenv
add
outsl
or
cmpsb
fcompl
mov
adc
leave
add
pusha
rolb
cmp
test
enter
add
ds
pop
cs
add
jne
aam
sbbb
sbb
js
and
lret
mov
adc
stos
mov
sub
dec
xchg
mov
adc
popa
and
clc
dec
mov
div
add
sub
movsb
add
out
xlat
push
aas
mov
mov
outsb
cmp
cmpl
loopne
aaa
and
lock
add
sbb
jo
mov
jg
add
inc
in
mov
test
pop
pop
push
inc
mov
jbe
jb
inc
xchg
xor
adc
scas
push
and
mov
pop
popf
decb
rcrl
nop
inc
push
je
xor
and
xchg
add
pushl
and
pop
or
cmp
xchg
jecxz
dec
adc
and
push
ret
pop
lcall
jnp
or
int
lods
inc
add
insl
push
out
add
add
cmp
push
pop
shlb
lock
cmp
gs
push
aam
add
or
aaa
ljmp
fisubs
adc
dec
add
inc
xor
idiv
adc
add
cmp
lahf
jb
sbb
inc
mov
lods
or
xchg
cmp
in
jl
pushf
or
inc
loopne,pt
sbbl
aaa
das
dec
in
add
hlt
scas
dec
adc
push
xchg
mov
ret
mov
sub
cmpsb
inc
mov
cltd
cmp
lock
sbb
es
imul
add
xor
ficomps
insb
add
scas
in
and
add
aaa
mov
fs
mov
or
loop
adc
add
mov
lcall
das
mov
jmp
mov
int3
movsb
pop
mov
mov
add
jbe
hlt
mov
in
daa
jecxz
cwtl
je
das
popa
add
insl
adc
mov
movsb
cmp
idiv
repz
lret
and
cmc
lock
push
dec
xor
mov
jp
push
inc
test
rclb
adc
sbb
add
mov
and
nop
bound
add
cmc
fistpl
sahf
notb
jo
loop
pop
stos
js
jne
lcall
cmp
sub
push
xchg
ss
jmp
mov
pop
data16
jecxz
push
xchg
mov
sti
dec
xor
mov
in
addb
push
dec
add
push
dec
add
dec
