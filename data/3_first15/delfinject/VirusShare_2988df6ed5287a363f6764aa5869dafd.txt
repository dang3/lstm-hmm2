push
call
ret
ret
in
pop
cmp
pop
imul
or
inc
les
ficomps
jae
insl
pop
enter
int3
cmp
push
cmp
dec
mov
and
fcomps
out
mov
je
sbb
adc
mov
xlat
adc
fistpl
push
and
cli
sbb
sub
cmovne
scas
shl
mov
sbb
test
dec
popa
adc
sahf
mov
lret
sbb
ja
and
ds
dec
mov
bound
adc
sti
pushf
jo
lds
sub
pop
sub
lods
mov
xor
mov
cmp
mov
xor
cmp
mov
mov
cmp
fsubl
ds
ret
and
fists
cmpsl
mov
mov
cwtl
and
movsb
jge
outsl
jne
rcll
repnz
xchg
mov
int3
mov
sahf
stos
ret
push
jne
sub
push
cli
ds
pushf
adc
enter
jg
notb
pop
scas
test
pop
lret
test
callw
cli
mov
inc
xlat
jecxz
nop
repnz
xchg
push
or
mov
stc
into
mov
fcom
movsl
push
push
popa
ss
dec
sbb
sbb
out
stos
mov
push
mov
cmp
add
pop
mov
pop
imul
or
clc
pushf
add
push
push
cmp
int3
xor
aas
pop
icebp
subb
out
das
xchg
aad
std
adc
jae
xchg
pusha
lahf
enter
dec
inc
dec
cmp
arpl
insb
xchg
out
or
xor
lock
sbb
mov
imul
sub
fadds
xor
fs
xchg
aam
push
cmp
add
js
inc
sub
repnz
adc
push
or
xor
cmc
loopne
sub
xchg
sbb
lahf
test
jae
cmpsl
xchg
test
add
adc
and
dec
cltd
push
enter
out
sub
mov
std
xor
andl
pop
sti
fisttpll
inc
mov
sti
sub
mov
lds
pop
xor
out
inc
cwtl
pushf
and
and
bnd
ja
adc
xchg
pushf
inc
inc
inc
shr
lea
xchg
pop
mov
jp
xchg
add
add
repnz
push
fsubrp
testl
dec
loopne
push
mov
test
mov
inc
es
out
and
mov
mov
mov
and
mov
repnz
mov
insb
mov
scas
in
mov
jmp
jp
mov
pop
add
lock
push
in
dec
adc
xor
and
add
and
rcrl
dec
xlat
jae
jmp
test
call
pop
arpl
fcomps
out
fldcw
xchg
push
sbb
mov
test
mov
lret
dec
out
movsl
fidivrl
and
mov
push
arpl
sub
lock
je
jmp
rcrb
dec
push
aaa
cli
andb
inc
icebp
jge
push
sbb
sbbl
scas
scas
cs
fcompl
mov
mov
out
jmp
push
clc
pop
mov
lea
cmpsl
es
add
mov
lods
mov
mov
jl
mov
lea
repnz
or
ret
ds
mov
mov
popa
mov
xchg
mov
push
pop
bound
mov
icebp
mov
fmull
jge
or
aaa
stc
fcomps
xor
or
mull
push
or
es
inc
pop
and
xchg
xchg
pop
test
in
fimull
pop
add
popf
dec
fs
jns
jae
in
cs
push
in
xor
sbb
test
fstpl
insl
cmp
test
xchg
movl
cmp
lret
lock
push
inc
xchg
sbb
cmpsb
xchg
pusha
sub
aad
scas
bound
es
adc
in
mov
cwtl
sub
fsub
xor
lahf
mov
rorl
fmuls
fst
inc
jo
shll
aas
cli
push
dec
cmp
mov
add
mov
sbb
xchg
jnp
jae
push
inc
xlat
cli
mov
in
sub
lods
dec
and
inc
pop
xchg
cmp
cmp
xchg
add
add
sub
aaa
lret
jmp
imul
dec
sub
jg
inc
aad
dec
outsl
add
pop
ffreep
pop
jp
rclb
mov
jp
jle
stos
inc
push
adc
pusha
push
mov
jmp
mov
gs
push
lock
das
pop
lods
dec
popa
dec
push
out
add
cmp
lcall
mov
scas
lea
or
test
pop
aas
or
ret
fdivl
pushf
imulb
insb
std
fstpl
add
dec
ds
rcr
lds
mov
cld
mov
xchg
sahf
jp
sub
mov
mov
pop
adc
mov
dec
pop
cmpsb
dec
pusha
mov
loopne
sub
cmp
in
dec
jle
jns
xchg
dec
fcoml
and
test
addr16
test
imul
pop
hlt
cmp
push
popa
sbb
iret
rcr
cwtl
repz
pushf
xor
lcall
mov
mov
push
mov
in
cmp
fidivrl
push
cmc
insb
aaa
push
sarb
stc
repz
pop
into
jmp
pop
xchg
lods
mov
mov
repnz
popf
inc
xor
roll
repz
loopne
sbb
jns
dec
gs
stos
popf
cmp
cli
inc
inc
incl
hlt
push
push
std
pop
ret
in
push
push
jnp
or
aad
ret
clc
jns
jns
rclb
inc
lds
sahf
sub
stos
adc
insl
cltd
sub
or
pop
arpl
inc
push
mov
cmp
sub
and
arpl
shlb
sub
mov
icebp
xchg
mov
push
out
push
jle
sbb
scas
cs
sbb
xchg
mov
xchg
fiadds
mov
inc
testb
push
xor
cmp
push
or
sbb
adc
add
insb
int
push
and
push
cld
das
jo
mov
xlat
xchg
out
push
scas
sti
nop
add
rcl
xchg
imul
jnp
dec
subl
bound
in
mov
iret
fcmove
ficomps
adc
dec
inc
push
add
cmp
fistpll
ds
addr16
fwait
adc
pop
outsl
lahf
pop
cwtl
out
xchg
jb
mov
sbb
insl
and
mov
scas
pop
mov
arpl
lahf
jecxz
out
mov
or
mov
lock
dec
das
outsl
xchg
or
xor
pushf
arpl
pop
xor
mov
or
mov
jmp
or
push
roll
push
xchg
in
movsb
leave
mov
imul
or
dec
test
popf
pusha
cltd
jp
mov
aas
in
pop
aam
mov
popa
dec
sti
imul
stos
push
cwtl
jae
pop
cmpsb
aam
in
les
lret
push
mov
imul
mov
inc
push
insl
ret
inc
pop
adc
inc
push
jmp
clc
add
pop
sub
xchg
cmpsb
xor
aam
out
mov
sbb
mov
fstpt
jmp
pop
mov
and
mov
xor
pop
js
shrl
push
cld
inc
aaa
lret
shld
xchg
enter
fs
sub
and
outsl
inc
adc
or
jo
sbb
push
inc
shl
nop
and
ret
pushf
dec
sbb
fisubrl
jg
jbe
mov
dec
rolb
lea
adc
push
ficoms
pusha
or
in
inc
ja
iret
dec
test
lock
xchg
mov
adc
aad
arpl
into
inc
add
es
xor
std
jmp
fidivrs
xor
ret
mov
and
nop
dec
mov
sbb
fdivrs
ja
push
ror
pop
icebp
lret
xchg
in
or
mov
pop
sahf
mov
pop
push
insb
test
push
xchg
jnp
and
stos
int3
ljmp
out
jbe
shrb
and
mov
push
adc
xchg
mov
or
jg
clc
sbb
rcl
in
sbb
loop
mov
aas
mov
bswap
add
adc
iret
adc
pushf
mov
xchg
xlat
lret
mov
push
and
cmpsb
sbb
and
lods
xchg
popa
mov
cwtl
nop
lea
repnz
jle
idivb
mov
sub
mov
lea
cltd
sarb
inc
js
icebp
lcall
jbe
xchg
ja
inc
popf
inc
loop
pop
mov
dec
jnp
jno
push
xchg
or
ret
mov
shlb
in
sbb
lods
jns
mov
cwtl
rcrb
mov
push
sub
mov
lcall
adc
jns
pusha
shl
lea
push
xor
insl
inc
imul
sbb
sbb
dec
test
sub
adc
sbb
testl
xchg
movsl
jno
jl
ret
push
xchg
pop
lock
push
jb
loope
ljmp
inc
jl
idivb
xchg
movsb
stc
imul
pop
jmp
jle
fdivr
cbtw
sub
mov
enter
shlb
cmp
jb
and
divb
add
sub
jmp
mov
sbb
pop
dec
and
shrb
ror
into
gs
pushl
and
call
dec
aad
jp
mov
sbb
nop
mov
add
shlb
imul
shrl
jb
movsb
jo
dec
fisttpll
inc
pop
data16
enter
imul
aaa
cli
scas
mov
mov
xor
aaa
xchg
fwait
dec
xchg
inc
push
xchg
enter
cwtl
out
fs
sti
int
fsubl
test
jae
jg
push
mov
fsubs
lahf
xchg
ret
out
sub
inc
mov
jbe
sub
add
call
cmpsl
lahf
inc
or
addr16
lea
or
es
test
popf
pop
push
rorl
jge
rcl
rclb
sahf
xchg
xor
jne
cltd
xor
dec
cltd
je
ret
dec
repz
ret
int3
pop
xchg
and
xchg
mov
pop
inc
inc
cmpsb
cmp
lea
pop
daa
into
nop
or
daa
jl
arpl
fwait
mov
pop
jno
sub
xchg
imul
push
lret
dec
cltd
ret
fld
fcmove
xor
push
cli
jge
xor
jae
je
lret
mov
loopne
xchg
lret
imul
hlt
fmull
ss
mov
pop
pop
jge
negb
stos
test
and
dec
jns
repnz
fsts
inc
xor
jg
jg
ss
in
out
imul
mov
and
xor
push
jb
mov
jge
add
jns
scas
adc
rolb
pusha
mov
aas
outsl
mov
fidivrs
sti
and
jno
inc
pop
outsl
jmp
lret
ficoml
push
and
loopne,pt
pop
jecxz
xchg
fs
push
mov
sti
mov
out
mov
dec
call
movsl
sldt
jg
gs
pop
pop
int
mov
jle
sbb
cmc
inc
sub
pop
xchg
packsswb
mov
xor
fcmovnu
int
pusha
jno
stos
iret
push
push
mov
adc
mov
clc
pop
out
xchg
incl
cmpsb
dec
push
popa
sub
dec
dec
jno
xchg
popf
jns
mov
out
inc
addr16
jecxz
push
ljmp
dec
imul
lea
fs
mov
pop
arpl
arpl
xchg
sub
lds
stos
dec
push
push
sbb
sarl
test
jns
push
out
xchg
xor
lock
insl
sub
sti
pop
test
fsubrl
hlt
je
fucom
and
aad
sbb
and
jmp
add
xchg
mov
lods
int
inc
mov
and
aam
cltd
mov
sbb
push
bound
jle
aas
xchg
pop
dec
add
and
incb
movsb
mov
scas
adc
fstps
push
fcompl
adc
sar
and
fnstsw
xchg
mov
jae
mov
inc
out
loopne
loope
nop
mov
aas
push
xor
mov
or
adc
inc
and
movl
imul
outsb
arpl
pminub
push
popf
imul
lahf
lcall
ret
std
mov
test
sub
das
shlb
dec
inc
lret
cli
sbb
xchg
mov
pop
xor
jo
xor
pop
mov
sub
bound
test
push
xor
mov
mov
fsub
in
xchg
mov
pusha
test
mov
es
outsl
test
and
mov
adc
push
mov
add
jle
lods
xchg
mov
ja
in
xor
out
aam
sbb
cmc
cltd
sti
pop
and
sbb
dec
into
sbb
and
or
sub
es
in
mov
enter
xchg
test
mov
clc
ret
sbb
add
pop
add
popa
out
orb
adc
aad
fisttps
andl
add
aaa
int
cmpl
and
sbb
aas
jnp
or
sub
push
cmp
leave
mov
cld
fbstp
push
xor
test
lahf
out
int
pop
incb
inc
imul
or
rolb
xchg
lret
shrb
scas
test
inc
cs
mov
sbb
and
arpl
and
inc
adc
test
test
dec
addr16
mov
push
jns
arpl
clc
test
push
jmp
into
mov
imul
je
nop
loopne
xlat
std
cmp
loopne
cltd
icebp
iret
mov
inc
mov
and
cmpsb
icebp
jge
mov
xchg
div
test
pop
test
push
fs
icebp
sbb
scas
leave
sub
jle
je
or
add
xor
xchg
xchg
mov
int
mov
inc
mov
insl
inc
aas
cld
sub
jb
je
push
lahf
rcrb
dec
into
aaa
ret
sbb
mov
lcall
mov
or
addr16
js
or
add
jo
mov
lea
cmp
fdivs
pop
fnstcw
cltd
jmp
jg
mov
scas
out
das
test
scas
xchg
pop
shlb
lcall
xchg
sbb
test
ljmp
es
add
or
out
sbb
fisubs
cmpsb
xor
addl
fstps
adc
cmp
aas
enter
les
out
xor
jnp
out
iret
mov
push
leave
leave
ss
push
arpl
daa
js
and
popf
stos
xchg
mov
dec
xlat
outsb
bound
cmp
cli
imul
dec
jb
test
cmp
dec
lahf
rorb
adc
imul
or
ja
jb
lock
adc
mov
loop
push
pop
pop
aad
dec
dec
pop
sti
data16
jge,pt
mov
jnp
pusha
and
in
rclb
mov
mov
mov
pop
add
cmc
mov
mov
and
lret
jmp
std
push
xlat
push
mov
sub
adc
rclb
shll
cmp
mov
push
mov
out
insb
inc
sbb
mov
enter
xor
lcall
xchg
idivb
movsb
mov
imul
pop
popa
xchg
bound
or
stos
pop
push
jo
es
ljmp
mov
pop
lea
inc
addr16
insb
jns
adc
push
hlt
cli
mov
test
dec
inc
imul
push
adc
je
xor
fisubrs
jae
ds
pushf
das
jnp
and
jo
mov
mov
mov
sbb
cmp
jnp
mov
pop
jmp
orb
mov
sub
and
cmp
sub
das
or
test
jb
shlb
pop
adc
xor
rcll
cwtl
test
inc
cltd
push
out
insb
in
stos
imul
je
xor
lret
cmp
mov
xchg
aam
fisubrl
rcl
push
and
adc
fcomp
pop
ljmp
jle
fisubl
or
adcl
jl
jno
or
loop
in
mov
mov
xchg
sub
jg
jp
repz
repz
xor
jl
insl
dec
stc
or
jno
outsb
fisubrs
push
xor
pop
push
mov
sbb
jecxz
nop
arpl
dec
rol
xchg
pusha
gs
stos
and
movsb
inc
cmp
rcll
mov
shrl
rorb
sbbb
xchg
jnp
xchg
lock
xor
jae
les
test
cmc
nop
mov
int3
lds
mov
pop
jne
subb
stos
stc
pusha
inc
xchg
push
popf
test
insb
les
jno
idivb
mov
mov
and
jg
lods
dec
mov
jecxz
lcall
xchg
inc
jge
cmpsb
out
scas
pop
data16
and
inc
shlb
cmp
mov
lods
sbb
mov
shrl
mov
cmc
add
push
and
push
jl
js
test
cmp
les
inc
push
or
mov
insl
or
push
or
and
sbb
xchg
adc
inc
push
pop
icebp
sub
cmp
rorb
scas
stc
bound
and
sbb
jb
loop
jbe
cmp
mov
int
adc
sbb
and
popf
adc
scas
loop
incb
xchg
enter
inc
ljmp
in
xor
jno
cmc
pop
xchg
inc
mov
mov
loopne
in
mov
jo
loopne
adc
or
adc
dec
xchg
ret
decl
push
out
test
cmp
mov
xor
or
sub
aaa
jns
dec
jp
mov
pop
push
push
cli
or
data16
mov
imul
jmp
cmp
or
mov
in
mov
push
sub
jne
add
sahf
xchg
mov
mov
mov
mov
jno
mov
lret
dec
loopne
fsts
xchg
loop
aas
leave
aas
aas
in
adc
and
leave
inc
mov
aam
int3
sbbb
cmp
mov
or
adc
jae
pavgw
cmpsb
pop
dec
lds
movsb
adcl
loopne
xor
sbb
xchg
jne
xor
push
lret
sub
pop
outsb
jae
sti
inc
cmp
or
mov
cmc
lret
mov
pop
cmp
mov
cmp
xchg
mov
shll
call
add
sub
std
out
jo
subl
pop
sub
lcall
mov
loope
cmp
dec
add
and
or
std
adc
dec
cwtl
cmpsb
test
mov
jge
stos
and
icebp
lds
mov
jbe
imulb
dec
insb
pop
aas
push
mov
jecxz
sbb
sahf
adc
mov
idivb
in
jp
loope
sbb
lock
or
or
movsb
jge
sub
ljmp
jo
or
aaa
lock
xor
sbb
xor
or
std
ret
lods
dec
or
adc
jns
mov
push
ret
jl
pushl
push
aam
stc
test
adcb
fwait
arpl
filds
outsb
ljmp
test
jl
jp
jnp
sbb
and
sbb
adc
leave
xor
aas
xor
xchg
xchg
mov
push
loope
push
das
popa
ret
inc
mov
xlat
stos
mov
movsl
adc
fnsave
xor
lea
fmull
push
jl
push
jae
sbb
aas
loope
cmpsl
int3
dec
clc
or
test
sub
adc
sub
cmp
adc
adc
adc
fs
cmp
imulb
or
inc
dec
out
shll
mov
mov
imul
pushf
cwtl
adc
test
out
in
adc
rolb
jmp
xchg
xor
insl
xchg
decb
add
rorb
add
and
fsubs
jne
into
add
mov
push
jno
sub
or
ljmp
aas
cmp
push
loop
jmp
imul
pop
pop
dec
cmpl
mov
inc
loop
xor
and
cmp
pop
push
inc
push
insl
sub
jbe
inc
into
cltd
pop
push
jmp
leave
fldcw
sbb
mov
std
loopne
jno
mov
popf
and
pushf
mov
cld
jmp
cltd
pop
test
aaa
push
mov
jp
pop
push
mov
push
and
jl
lret
jae
jmp
mov
cltd
sbb
sti
jg
out
std
pop
aad
or
stc
pop
adc
mov
pop
test
and
cmp
mov
push
decl
out
pop
or
push
imul
mov
ja
jnp
sbb
cli
jnp
pop
xchg
mov
pop
icebp
xor
push
push
cwtl
push
jb
arpl
inc
mov
xlat
or
xor
add
cmp
fsts
fstl
sub
sub
stc
dec
sbb
imul
sub
lahf
mov
es
clc
aas
loop
sbb
or
mov
ficompl
cld
or
out
popf
adc
cmp
pop
fiaddl
push
rorl
mov
movsl
movsl
and
adc
ss
sti
fstps
sub
jnp
add
jle
cmp
add
stos
sub
adc
sub
movb
stc
aas
add
push
cld
mov
cmp
push
mov
int3
repnz
jb
cld
or
aas
repnz
or
mov
mov
mov
out
das
movsl
int
jne
cmp
loope
xor
xlat
insb
mov
mov
pop
aaa
and
add
push
in
repnz
mov
mov
pop
jnp
adc
pop
stos
sbb
out
xchg
jl
arpl
and
scas
fildl
mov
inc
popf
gs
lret
pop
adc
call
push
pop
fistpll
movsb
lret
in
xor
cmp
or
bound
jo
ret
int3
pushf
mov
ret
pop
hlt
cmc
cmp
push
dec
iret
push
jge
mov
rol
ja
sbb
xchg
jmp
inc
into
sub
push
inc
mov
leave
dec
or
jnp
mov
jmp
roll
fldcw
adc
mul
push
rcll
lahf
or
lods
rcll
roll
in
mov
sbb
inc
inc
sbb
enter
add
xor
shrl
jb
fisubs
hlt
rolb
jae
add
sbb
sub
push
fstl
or
inc
lret
mov
fisttpll
jbe
xchg
pop
pop
xor
hlt
popa
rdtsc
fiaddl
imul
xor
or
aam
pusha
xor
notl
imul
mov
fwait
repz
inc
mov
xor
mov
test
and
dec
pop
scas
cmp
je
adc
jo
cmp
and
repnz
inc
cmp
rcr
loope
mov
outsl
repz
in
xlat
lock
cmp
lds
mov
test
ja
inc
das
aaa
popf
imul
xor
jns
insb
jo
cld
xchg
add
sbb
mov
rcr
pop
out
sbb
ret
xchg
ljmp
push
push
pop
xchg
mov
and
sub
flds
idivl
mov
outsl
sub
push
test
sbb
adc
jp
arpl
xchg
xchg
jmp
push
aad
mov
divl
or
daa
lock
pushf
nop
jae
cltd
sbb
stc
fnstsw
lds
cmp
out
aad
or
and
mov
sub
mov
aaa
mov
icebp
xchg
push
addr16
div
daa
aas
mov
mov
loop
adc
jae
jae
jb
mov
sti
addr16
push
jae
ret
rcrl
sbb
fs
lcall
leave
adc
and
fnop
sub
and
mov
icebp
sub
mul
aad
push
ret
fdiv
dec
lods
pop
dec
and
fidivrs
mov
or
jmp
xchg
sbb
adc
mov
repz
push
jle
and
and
inc
sbb
jge
jne
xor
int
je
jecxz
xchg
adc
fwait
xchg
xor
cmp
xor
adc
mov
aaa
xchg
dec
push
mov
dec
xlat
lret
push
or
movl
fwait
dec
hlt
jl
jecxz
pushf
and
dec
push
aad
stos
fmull
movsl
mov
adc
mov
add
cmpsl
push
test
pop
push
jg
and
movsl
lock
pop
les
xor
jne
push
daa
adc
cmpsl
ret
dec
sbb
push
mov
cwtl
ljmp
sbb
mov
and
stos
mov
call
shrb
lahf
popa
mov
push
inc
mov
add
inc
in
out
mov
mov
fs
dec
or
lret
cmpsb
pop
stos
xchg
pop
bound
daa
jmp
sbbb
adc
daa
and
sbb
jg
sub
out
pop
xor
adc
jp
sahf
lods
cmp
repz
xor
mov
into
xor
push
and
insb
push
jg
rcll
jne
mov
jnp
sub
bound
jecxz
jp
call
mov
in
mov
mov
xchg
mov
jns
loopne
rorl
gs
add
or
xorl
jl
data16
pop
xchg
jb
movsl
mov
cmp
lcall
daa
cli
ret
scas
movsl
or
mov
pop
jle
push
icebp
jb
mov
xchg
lcall
out
and
gs
xor
push
sub
stos
sub
sub
mov
lds
out
lods
std
ds
mov
roll
cltd
lods
push
cld
fldl
sbb
aaa
mov
mov
aaa
outsb
dec
sbb
pop
cmp
mov
mov
pop
sbbl
fsubrl
cmp
mov
scas
jmp
sub
mov
push
test
or
mov
outsb
lods
mov
andb
and
pop
lock
mov
insl
mov
test
mov
fsubrl
mov
jl
xchg
push
js
xchg
jbe
arpl
xchg
fdivl
pop
lods
loop
int3
xchg
rorl
and
cmp
lret
rcll
fisubrl
std
in
nop
pop
pop
imul
sub
outsl
andl
xor
outsl
or
mov
push
jo
sarb
mov
jecxz
iret
leave
or
sub
jne
cmp
stc
cmp
push
shll
pop
cmp
gs
cmp
repz
sahf
andb
push
sbb
enter
sub
in
cmp
andl
movsl
and
push
mov
push
pop
outsl
ret
inc
jns
lods
jbe
mov
inc
ret
xor
push
pop
mov
sbb
push
mov
pusha
adcl
jg
pop
cmp
inc
push
fs
lcall
or
test
jb
popf
sbb
fmull
testl
movsb
xchg
repz
fmull
and
xchg
jns
and
shlb
sub
fbstp
outsl
xchg
cltd
cmp
mulb
out
xlat
leave
mov
das
imul
inc
ja
inc
mov
scas
sub
sub
adc
fsubrl
xor
arpl
lcall
xchg
insl
xchg
pop
fcomip
in
fs
div
sahf
ret
nop
mov
dec
xorl
ljmp
cwtl
sub
mov
push
jecxz
sbb
pop
shl
adc
int
nop
jmp
faddp
in
hlt
pop
lock
ret
xchg
aaa
clc
sub
pand
mov
pop
das
dec
test
inc
inc
adc
jae
cmp
mov
xchg
xchg
xor
cmpsb
sub
adc
in
xchg
cli
hlt
xor
stos
sahf
out
das
add
adc
jns
push
xchg
ret
mov
scas
or
lea
jle
pop
mov
mov
enter
shrb
add
cmpsb
xor
xchg
mov
xor
lret
pop
ror
xchg
pop
and
xchg
cld
dec
jge
push
mov
jp
pop
or
xchg
pop
sbb
mov
imul
lcall
fdiv
fmuls
in
pop
xchg
test
jmp
xchg
popa
clc
add
out
cltd
mov
xor
jl
dec
dec
mov
out
popa
out
sysenter
or
std
pusha
mov
inc
or
in
push
mov
inc
add
insl
xor
test
xchg
mov
add
xchg
pop
and
mov
push
pop
mov
pusha
mov
xor
or
add
adc
and
sti
aam
pushf
adc
les
sub
adc
fstpt
lods
pop
roll
les
mov
pusha
fsts
sub
fdivrs
mov
push
out
in
push
sub
sahf
mov
pop
divl
cld
cwtl
xor
and
bound
pushf
mov
movsb
out
pop
jmp
in
cmp
sub
jmp
repnz
adc
mov
int3
fists
cs
mov
sbb
xor
mov
ss
cmpl
jg
in
or
sahf
incb
mov
test
lods
push
pusha
mov
hlt
std
mov
aas
movsb
arpl
mov
cmp
and
ds
test
andl
cld
mov
movsb
push
lds
inc
jnp
cmp
jle
out
pop
mov
mulb
push
pop
dec
dec
fisubl
pop
mov
push
hlt
inc
mov
jae
xlat
test
roll
bound
jb
int3
push
je
sti
and
bnd
jg
dec
fldenv
andl
out
and
or
push
out
loopne
in
dec
inc
mov
mov
ja
add
ss
add
lods
sbb
fldl
mov
andl
mov
nop
pop
push
add
cwtl
cmp
inc
fwait
mov
xchg
adc
addr16
cmpsl
imul
and
bound
cli
adc
mov
pop
movsl
sarl
in
jae
iret
lcall
lock
movnti
aas
lods
or
add
xchg
adc
sub
outsb
mov
lods
xorb
adc
mov
mov
cmp
and
pop
movsl
xchg
pusha
fmul
push
out
iret
sbb
pusha
or
stc
insb
decl
push
jne
mov
mov
inc
filds
add
jp
aas
in
sbb
outsl
mov
push
push
cmpsl
popf
mov
jecxz
scas
fnstcw
jp
js
popf
jnp
and
les
int3
xchg
sahf
subb
mov
andb
sarb
int
pushf
push
and
cltd
jle
outsl
sbb
xor
push
lea
out
rorb
int
mov
xchg
mov
inc
sahf
sbb
std
mov
fildll
fwait
pop
cmpsb
into
sub
movsl
ret
fiaddl
or
insb
and
out
cs
lods
xorl
cli
call
sbb
sbb
dec
push
mov
push
dec
push
data16
push
out
rol
call
dec
xchg
arpl
jecxz
or
mov
sbb
aaa
adc
sub
xchg
dec
aad
push
adc
jno
cmp
aam
mov
jmp
push
cltd
enter
push
sbb
stc
jne
and
xor
leave
cmc
repz
int
lock
out
xorl
ss
push
jbe
in
in
inc
push
fnstenv
mov
xchg
dec
ss
mov
ds
pop
ds
rcl
sbb
and
xor
test
stos
js
je
sub
shl
mov
xlat
cmp
aad
pop
fisubl
mov
test
ret
inc
rcrb
in
sbb
xchg
sbb
fisubrl
pop
or
push
mov
jnp
xor
xchg
inc
inc
popl
xchg
lock
jmp
or
decb
mov
xchg
popa
jmp
es
jp
outsb
orb
cmpl
rolb
dec
and
jg
or
jmp
xchg
rolb
add
or
fwait
stos
push
push
mov
pop
fsub
dec
aad
pop
push
leave
pop
sub
sub
mov
inc
in
dec
cmp
aaa
dec
pop
cmpsb
lahf
mov
insl
jge
cwtl
jbe
adc
imul
enter
xlat
subb
xchg
les
mov
in
nop
push
popf
pop
add
xor
push
xor
dec
les
divl
lahf
cmpsl
orb
push
jno
lret
xor
std
add
pop
xchg
scas
sahf
out
push
fcomps
dec
or
mov
mov
clc
cmp
jb
push
jae
out
push
xchg
xor
int3
dec
rcrl
mov
pop
pop
xchg
es
test
inc
or
or
adc
push
xor
int
sbb
fwait
mov
movsl
mov
xchg
cwtl
adc
sbb
mov
inc
xchg
ret
sbb
incb
add
dec
mov
jl
ds
adc
pop
test
scas
hlt
pop
dec
push
pop
loope
cmp
mov
ja
addb
mov
xor
fwait
push
dec
push
add
call
testl
mov
mov
inc
and
fcoml
mov
push
fs
popf
jo
outsb
adc
dec
xchg
jo
or
ss
dec
divb
inc
mov
sub
push
iret
mov
jle
cld
je
mov
je
mov
sysexit
push
rolb
fst
mov
test
dec
xchg
xchg
cmpl
mulb
inc
call
gs
jle
sbb
clc
pop
pop
mov
or
out
xchg
ud0
jge
iret
inc
xlat
jne
in
jns
mov
mov
push
mov
pop
push
mov
xor
popa
sub
js
test
push
lock
int3
jno
add
inc
mov
lret
jle
inc
sbb
dec
mov
inc
cmpsb
icebp
lods
xchg
out
sub
fsubs
ficoml
imul
mov
sub
xlat
repz
xlat
loop
mov
push
addr16
fnsave
sahf
jns
insl
push
fdivrl
adc
scas
mov
out
cmpsl
sarl
push
jae,pn
popa
dec
cs
out
and
and
sub
roll
fisubrl
pop
mov
bound
dec
in
into
xor
xor
jae
or
es
mov
test
out
rcrb
inc
stc
sbb
imul
orl
sbb
mov
movsl
test
jecxz
push
sbb
xor
ds
push
add
rcrb
insl
and
int3
sbb
das
out
inc
cs
setne
aas
dec
adcl
fstpl
and
mov
push
mov
fistl
or
cli
mov
push
test
test
mov
adc
mov
mov
pop
add
call
ja
cmp
mov
jle
es
or
add
aam
test
dec
push
repz
adc
ret
mov
cld
loope
aas
jp
popa
xlat
sbbl
das
stc
add
idivb
jl
add
cmpsl
dec
rcll
xorl
sahf
push
and
xor
jb
dec
dec
lock
icebp
mov
cmp
xor
sub
mov
jge
xor
int3
stos
sub
sbb
cs
ljmp
jb
lahf
daa
dec
push
jecxz
jl
sbb
bound
and
andb
repz
cmc
push
shll
dec
dec
imul
xor
sub
adc
pusha
mov
jb
inc
sarl
xor
mov
les
mov
lods
out
loop
cli
les
fistl
xor
psadbw
add
add
fstpt
lahf
hlt
xchg
insl
jns
popa
loope
jb
outsl
shl
inc
mov
pop
or
cmp
dec
jo
inc
movsb
lcall
rcrb
xor
dec
lea
xlat
dec
fadds
cmp
xor
xor
jg
jno
dec
out
mov
inc
shl
push
rcrl
fwait
lds
dec
or
pop
pop
push
dec
mov
fcmovnbe
jb
ljmp
mov
out
add
adc
clc
popa
repnz
cltd
or
cmp
xor
inc
xor
jp
sub
mov
mov
ja
in
cld
insb
out
test
xchg
jmp
dec
jo
das
cmp
outsb
inc
xchg
gs
loopne
xor
cmp
pop
sbb
nop
loop
addl
enter
iret
fst
sbb
in
aam
in
jne
push
mov
xchg
ret
or
xchg
pmaxsw
clc
add
sub
mov
jmp
inc
mov
pop
or
fisttpll
and
xchg
fstpl
add
loop
xchg
rolb
pop
and
mov
pushf
mov
push
cwtl
and
sbb
xchg
push
and
add
cltd
mov
sub
adc
mov
mov
adc
loop
inc
xchg
iret
aad
pop
popf
fisttps
popa
mov
test
or
mov
jbe
fistps
out
xchg
loope
mov
data16
jge
les
fldenv
aas
and
cmpb
xchg
mov
mov
mov
push
test
jl
mov
clc
aas
ds
fucomi
push
nop
mov
cmp
fmull
out
fdivs
xor
lods
test
jmp
jecxz
or
mov
pop
imul
jmp
addl
negl
aad
test
fnstcw
pop
or
sbb
push
jbe
mov
jns
inc
xchg
dec
jmp
mov
in
rcrb
sahf
mov
cli
hlt
jnp
xlat
adc
js
jns
or
pop
xor
or
sbbl
and
xor
leave
inc
sub
pop
push
push
insb
adc
and
mov
test
sub
lahf
lahf
adc
dec
xor
jns
in
cmp
mov
insb
loopne
fsub
mov
jle
xchg
dec
out
nop
or
aam
jb
ss
add
jo
out
xor
pop
std
sbb
and
cmp
mov
xchg
cmp
in
mov
bound
mov
into
in
xchg
or
sbb
ret
xor
fwait
insb
pop
cmp
jbe
rolb
lods
and
loop
cli
or
cmc
es
inc
cmp
jecxz
pop
jl
xchg
cs
out
inc
es
mov
jnp
cmc
in
imul
cmc
push
or
out
js
jecxz
cmp
jae
ja
orl
mov
adc
cld
mov
or
sub
sbb
loop
das
mov
test
flds
lahf
fmuls
or
imul
sub
pop
ja
and
js
daa
mov
mov
into
loopne
mov
cli
mov
lahf
aam
mov
mov
mov
adc
into
loop
xchg
addl
pusha
in
pop
add
xchg
movsl
movsl
or
mov
lcall
or
sub
dec
xlat
mov
sar
jp
mov
hlt
imul
dec
sbb
inc
ds
jno
pop
les
lret
mov
mov
and
xor
push
push
mov
andb
negb
dec
icebp
mov
int3
push
test
aam
rorl
jno
jno
out
gs
jno
loop
cmp
push
sub
inc
jo
sbb
or
sbb
je
or
or
fwait
roll
add
cltd
loope
or
xchg
adc
loop
pop
lds
das
fmul
cltd
daa
add
stos
aad
insb
das
cmp
or
mov
inc
sub
sub
ss
mov
aaa
cmpsb
jecxz
mov
movsl
scas
mov
mov
aad
test
iret
lret
adc
inc
push
mov
fisttps
fnsave
fsubl
cltd
inc
aaa
pop
xchg
push
or
mov
sbb
in
or
test
push
loopne
pop
xchg
jns
pushl
rolb
fwait
xchg
xchg
iret
in
xor
cli
push
das
adc
pop
ljmp
adc
test
jae
popa
outsb
xchg
repnz
call
scas
mov
mov
mov
insb
and
arpl
mov
push
push
inc
and
jmp
jnp
sti
imul
jp
adc
pop
ror
sub
sahf
adc
imul
scas
fistps
adc
popf
add
mov
orl
sub
push
inc
shlb
les
add
into
inc
mov
mov
lods
insb
push
stos
push
out
rcrl
out
push
cld
out
cvttps2pi
push
fadds
mov
out
popa
test
xor
cmp
inc
push
sti
adc
mov
sbbl
pop
mov
cmpsl
insl
jg
jne
push
xchg
cld
in
dec
idiv
sub
sub
scas
push
sbb
mov
xorl
orb
test
adc
sbb
jge
jp
test
dec
or
sub
addr16
test
dec
dec
jg
push
mov
add
iret
or
adc
push
es
in
sti
and
push
jae
jb
sti
xchg
aad
push
xor
mov
lea
rcrl
std
popf
cmpsl
pop
jb
mov
push
jge
rorb
dec
xchg
jecxz
or
fdivr
xchg
lcall
fs
sub
xor
outsb
sub
in
aas
add
dec
out
test
fimull
loop
lret
xor
xchg
jecxz
mov
xor
fcomps
int
inc
xor
add
pop
lea
adc
jge
pop
adc
add
mov
mov
icebp
testb
sub
lock
cmp
lea
or
imulb
mov
ljmp
insl
inc
push
lret
rorl
pmaxub
loope
data16
lods
xor
adc
sbb
daa
dec
sbb
cmpsl
xchg
push
xchg
fsqrt
lods
jle
ja
fisubs
in
cld
inc
mov
xchg
stc
cmp
andl
push
add
lods
test
dec
test
mov
mov
and
repz
xchg
cmp
subb
push
cmp
je
mov
push
std
push
les
in
stc
xchg
xor
inc
in
mov
sub
sub
repnz
xchg
cmpb
xor
hlt
shll
shl
add
mov
add
pop
cmc
cmp
int3
xor
xor
mov
mov
insl
stos
mov
mov
sub
inc
dec
inc
andb
ffree
xchg
mov
push
aaa
ficomps
lahf
int
nop
repz
lcall
lret
sbb
movl
mov
inc
mov
pop
insb
repnz
jle
mov
scas
scas
shr
and
xchg
push
cmp
repz
pusha
outsl
push
orl
sub
sub
pushl
inc
filds
add
jbe
lret
int
xor
cs
cmpsb
mov
in
inc
das
outsl
movhps
punpckhwd
jnp
repnz
fs
movsl
push
lret
lahf
outsl
outsl
das
jmp
mov
cmp
ret
sbb
push
and
inc
mov
ret
js
in
or
inc
imul
dec
xor
shll
lret
in
in
mov
cs
mov
push
clc
bound
push
sbb
xor
dec
add
and
dec
inc
pop
imul
das
lret
in
pop
or
sbb
imul
test
ljmpw
fwait
push
ret
mov
push
movsb
das
sub
ret
ja
scas
adc
pop
mov
sbb
test
cltd
lret
shrb
sahf
test
sub
fldenv
dec
lds
in
sub
movsb
jmp
push
inc
mov
icebp
jg
sub
es
xchg
adc
outsl
nop
cwtl
sbb
fimull
and
mov
jg
mov
aas
inc
xchg
ja
inc
movsl
xchg
lock
sub
dec
adc
sbb
mov
test
scas
mov
das
pop
mov
inc
jb
insl
add
es
cltd
insl
xor
cli
sbb
jge
popl
xor
mov
fsubl
push
fdivl
pusha
xchg
push
fildll
lods
movsb
fs
fidivrs
pusha
ljmp
adc
pusha
or
mov
mov
shll
lock
xor
jbe
mov
popf
rcll
sub
jmp
pop
sbb
leave
inc
mov
insb
mov
jns
test
or
push
mov
sarb
inc
cmp
rcrl
bswap
jns
test
push
popa
inc
sahf
xor
sbb
ret
push
lock
pop
push
pop
cmp
jle
pop
push
jbe
jns
pop
incl
testl
dec
jmp
jmp
sbb
or
scas
sbb
dec
adc
sub
aas
mov
imul
jle
mov
sbb
pop
repnz
lahf
bound
pop
lahf
sti
dec
or
jmp
pop
fiadds
dec
lahf
sbb
dec
popa
xor
test
pop
ss
popa
jmp
jge
pop
dec
mov
fwait
test
dec
mov
mov
mov
adc
fdivr
pop
jmp
cmp
inc
mov
lcall
cmp
movsl
dec
into
mov
fidivrs
sahf
jnp
lock
imul
lods
popf
mov
in
sbb
inc
sub
dec
sub
aam
mov
inc
mov
push
insb
fadds
fildl
push
sbb
xor
push
inc
cvtpi2ps
xlat
xchg
sub
add
mov
aas
and
sahf
dec
adc
adc
mov
jl
xor
je
pusha
shrl
and
pop
mov
push
jne
lds
js
inc
push
out
in
fninit
daa
es
cmp
or
cmp
or
aas
sahf
mov
je
cld
movsl
into
push
icebp
jno
fdivs
popa
and
repnz
scas
sbb
xchg
lock
enter
jmp
or
sub
bound
sbb
mov
ja
xor
inc
jl
sub
cld
mov
sti
leave
movsl
fiadds
sarl
je
aas
jle
std
iret
ja
jg
ficoml
imul
test
jb
cmpsl
jae
xchg
jb
shr
rcrl
popa
mov
push
popa
test
das
mov
mov
popl
and
cmp
push
pop
mov
push
dec
call
dec
lods
repnz
in
idivb
sub
ret
pop
ja
bound
cld
jae
shrl
push
mov
jp
aaa
xchg
cmpsl
lret
inc
xor
bound
imul
dec
mov
shl
xchg
add
or
aam
inc
push
and
cltd
jl
insl
fistps
cmp
mov
xchg
mov
inc
add
es
add
cltd
scas
mov
leave
test
sub
mov
in
xor
sub
sub
das
jns
sbb
lahf
test
fucomi
js
bound
mov
fisubs
cmpsl
jae
inc
mov
cmp
push
xchg
sti
movb
mov
lcall
or
or
push
out
add
sarb
lret
jb
sub
movsb
push
mov
jo
and
pop
xchg
push
out
mov
rolb
cmp
mov
lret
imul
pop
int
je
pop
jmp
sahf
imul
les
outsb
mov
jle
inc
dec
and
push
xchg
fwait
call
cmp
adc
rcr
dec
cmpl
sub
pop
cwtl
cmp
jne
jb
enter
js
movsb
imul
or
push
pop
jmp
aas
test
mov
cmp
imul
scas
fldl
sub
adc
stos
mov
je
xor
mov
xor
push
mull
dec
mov
push
or
jle
push
popf
pushf
mov
or
add
xor
adc
inc
and
inc
jmp
into
ss
popa
rcrb
push
inc
fldl2t
call
cmp
pop
outsl
pop
lods
add
loop
lret
cs
ret
inc
jo
add
fldt
fmull
sbb
sbb
push
out
cltd
lahf
pop
jno
xchg
dec
mov
inc
or
and
cs
jecxz
roll
clc
mov
aas
clc
cmp
lock
sbb
popf
xor
in
ffreep
cmpsl
pop
and
enter
xor
and
or
adc
ss
out
in
enter
adc
test
jb
sub
inc
mov
xchg
xor
stos
fcmovu
add
sbb
push
push
popa
xchg
bound
or
or
push
pop
daa
jl
add
fsubs
mov
sbb
lods
mov
dec
sbbb
addl
scas
sti
stos
mov
mov
popa
pusha
jbe
add
daa
loopne
test
xlat
ja
mov
test
jl
mov
fcompl
data16
dec
mov
dec
mov
fbld
sub
jo
pop
push
cmp
xchg
fmull
decb
jns
lcall
adc
adc
fistl
inc
pop
icebp
push
rcr
or
hlt
xchg
cld
fs
xor
insl
aas
add
es
test
pusha
xchg
not
in
and
lock
sarl
test
sub
mov
cmpsb
idivb
pop
push
inc
jl
adc
jno
test
mov
shl
in
cltd
jns
movsl
mov
fwait
cmp
orb
mov
jp
inc
jp
inc
cmp
jne
push
sub
xor
jne
jne
imul
or
xchg
mov
jl
push
add
cltd
notl
dec
daa
jmp
push
mov
cmp
daa
bound
int
hlt
shrb
or
clc
mov
sbb
out
pop
jb
pop
nop
lahf
add
mov
and
mov
mov
jp
xchg
inc
mov
jnp
inc
mov
inc
sub
push
ror
ret
inc
fildll
fs
fcomps
mov
add
int3
push
outsl
or
xchg
xor
push
cmc
xor
popf
mov
inc
fs
pop
in
mov
fpatan
icebp
fsubrs
mov
in
out
std
cltd
fidivl
xchg
lods
and
push
lods
test
imul
popf
orb
xor
sti
mov
testl
imul
mov
adc
aaa
mov
or
jns
movl
rolb
jo
sbb
inc
shll
lods
xchg
add
push
add
mov
aaa
sub
sub
push
cmpsb
or
jmp
imul
pop
mov
lret
lret
push
pop
mov
xchg
push
lods
or
loop
fwait
std
in
sub
xchg
push
lahf
mulb
jb
dec
sbb
push
jnp
lods
test
dec
sub
pushf
imul
pop
data16
cmp
fisttps
gs
test
jbe
js
xor
js
mov
push
mov
insb
xchg
pop
sbb
cmp
push
push
or
add
sbb
ds
repnz
pusha
mov
or
fwait
xchg
cltd
mov
fwait
cmpsl
or
sbb
shlb
fistpl
aas
sbb
lock
lcall
mov
into
mov
dec
leave
inc
sbb
in
out
adc
fisttps
int
mov
sub
push
out
dec
add
sti
lahf
mov
into
cmpb
clc
ret
movsl
mov
adc
das
sub
push
imul
jge
xrelease
xorb
and
mov
cmp
adc
fcmovne
push
dec
aaa
jge
sub
xlat
scas
pop
lds
jnp
mov
push
sbb
dec
lea
repz
and
jno
push
pushf
jae
pop
sbb
aad
in
cmp
mov
test
jae
mov
jae,pn
aas
xor
nop
outsb
sub
dec
or
pusha
popf
iret
jecxz
lret
repz
lcall
xchg
inc
js
xlat
sub
xlat
sub
pop
int
inc
ret
cmp
aaa
push
mov
mov
xchg
out
pop
mov
jno
aaa
lcall
lea
inc
int3
cs
test
mov
imul
mov
mov
cmp
jge
imul
mov
mov
test
sub
test
adc
or
nop
push
push
addr16
repz
pop
pushf
int
and
mov
sbb
mov
push
lcall
xor
mov
xchg
dec
lds
je
pop
in
iret
inc
add
ss
cs
pop
test
test
mov
push
mov
stos
lods
call
insl
roll
xlat
adc
mov
dec
inc
mov
xchg
inc
sahf
pop
es
mov
imulb
das
call
mov
mov
aam
out
push
push
test
pop
js
testl
sub
test
stc
lahf
fistps
sbb
add
rorb
xlat
pushf
in
es
test
push
pushf
fsts
in
das
adc
ret
mov
cmp
jb
cltd
fsubl
pop
call
push
adc
dec
fs
push
cmp
jmp
sbb
cld
incb
cmpsb
and
les
addb
nop
mov
lods
mov
jmp
scas
popf
out
ss
xor
xchg
in
adc
fwait
pop
mov
add
push
int3
cli
jle
lahf
jb
enter
js
sbbl
pop
sub
xor
pop
mov
insb
loope
adc
add
sti
mov
std
aam
repz
das
jne
das
jmp
lret
dec
shll
jnp
loopne
inc
lret
add
outsl
cld
add
add
sub
mov
push
mov
lods
add
repz
outsb
mov
clc
or
inc
or
scas
stos
and
mov
inc
mov
insb
dec
inc
stos
mov
mov
mov
popf
scas
fwait
xchg
jo
mov
imul
pop
mov
fcomps
push
dec
ljmp
mov
lods
pop
dec
mov
fadds
sub
repz
pop
scas
or
cmpsb
cmc
ret
pusha
iret
sti
and
lcall
test
sub
sub
cmpsl
cmp
inc
fs
loop
ljmp
or
inc
pusha
js
inc
jecxz
mov
push
or
loope
fs
lods
push
or
add
das
jb
shll
sar
push
jle
mov
mov
div
shl
fcmovnbe
jg,pn
int3
xchg
fsubrs
clc
loopne
test
aas
add
rolb
test
sbb
dec
stos
adc
test
jp
mov
and
cmpb
and
lods
out
xchg
shll
iret
clc
push
jbe
lret
jne
popf
fldt
mov
adc
lret
icebp
mov
lods
or
push
enter
mov
push
jnp
lcall
jo
mov
ljmp
lahf
dec
mov
cld
jle
ljmp
push
or
out
push
push
movsb
imul
pop
push
pop
xchg
daa
jne
pop
and
xchg
stc
imul
adc
pop
jl
pushl
sub
or
ret
sti
test
imul
orb
mov
mov
and
sub
push
or
stos
nop
divl
sbb
rclb
mov
ret
int
repnz
out
lock
pop
push
mov
push
pop
push
cmp
arpl
ss
mov
lock
in
mov
xchg
mov
loope
lcall
ja
pop
std
or
mov
mov
sti
loopw
xchg
dec
jno
loop
mov
xlat
mov
push
mov
fadds
mov
popa
fbstp
aad
daa
jnp
or
call
cmpsl
rcr
lcall
imul
jecxz
imul
mov
lret
cltd
fildl
push
jl
in
jg
les
mov
test
aam
leave
add
test
leave
and
stos
mov
lret
mov
out
es
repnz
or
jmp
lea
cmp
outsb
cmpsb
divl
mov
ret
pop
mov
push
inc
test
jbe
sub
jg
jge
xchg
xchg
push
pop
push
add
mov
adc
lret
stc
xchg
negl
mov
rcrb
pop
sahf
push
out
mov
mov
mov
add
call
hlt
cmp
mov
dec
out
in
push
jecxz
inc
ficoms
pusha
int
lods
push
xchg
jge
jl
xor
in
add
popa
sti
xchg
hlt
dec
sub
mov
pop
mov
mov
inc
pop
pop
mov
sbb
cld
and
mov
repz
rcr
movsb
repz
inc
sbb
repz
negb
and
jecxz
cmp
sahf
gs
or
mov
inc
ljmp
mov
je
movsb
addb
filds
imul
add
xor
mov
sub
popa
cs
push
mov
repz
cli
add
flds
imul
out
stos
mov
inc
les
in
fstl
cmp
sub
pop
push
stc
add
push
int
inc
call
xchg
cmp
mov
dec
fidivs
lret
pop
ja
add
cmpsl
pop
adc
or
fwait
in
insb
gs
scas
mov
push
fwait
add
push
push
fsts
int
push
cmp
outsl
fwait
shrl
pop
scas
or
clc
imul
idiv
cmpsl
cmp
mov
fwait
stos
stos
xor
adcl
je
iret
cmpsb
xor
cmpsl
std
inc
sbb
ret
out
scas
cmp
daa
ss
push
xor
sbb
test
push
cld
call
push
sub
sbb
xchg
pop
mov
jb
ficoml
test
std
data16
lods
push
jb
mov
leave
sub
mov
jg
pop
lret
into
xchg
sti
jne
test
jno
test
or
pop
push
push
mov
rclb
xchg
sub
inc
mov
dec
add
cli
popf
cmp
mov
inc
lods
fwait
mov
adc
xchg
xor
mov
xor
loope
std
xchg
ja
add
fwait
shr
rclb
xchg
mov
pop
jne
std
jne
adc
ret
mov
popf
enter
mov
xchg
mov
mov
xchg
adc
in
mov
dec
jbe
sarb
push
or
sarl
and
ja
cli
aam
add
out
pop
and
int
inc
push
push
jns
movsb
je
dec
mov
cmpsb
xlat
inc
scas
std
sub
loopne
mov
loope
icebp
push
mov
test
pop
gs
push
fisttpll
cmove
shrb
push
pop
mov
adc
push
std
sahf
and
sbb
nop
mov
lcall
movsl
jl
enter
jle
xchg
hlt
scas
mov
sub
notl
loopne
mov
fists
xchg
push
ror
sub
pop
out
fcom
cmp
mov
pop
add
test
fidivrs
push
xchg
mov
cltd
inc
adc
or
scas
fs
roll
fs
iret
and
repnz
inc
cmc
sub
movsl
sbb
popf
sbb
mov
cwtl
cltd
sub
mov
mov
cmp
cmp
xchg
or
cmc
adc
pop
das
and
xchg
mov
xchg
mov
js
lahf
pusha
push
aam
jns
push
cmp
ret
lds
mov
mov
addr16
pop
xchg
fldenv
mov
mov
cmp
bound
push
out
push
sbb
sub
rolb
jle
push
pop
and
cmc
ret
test
inc
add
dec
idiv
arpl
nop
push
jp
mov
mov
fcmovbe
xchg
aas
pop
inc
cmp
stc
imul
cld
dec
jo
mov
dec
imul
adcb
dec
push
test
out
jno
mov
inc
dec
fstpt
sbbb
out
dec
ss
pop
subb
push
mov
pop
xor
jmp
pop
nop
sbb
clc
out
jle
cs
int
bswap
xchg
xor
mov
jmp
movsb
sbb
push
mov
adc
mov
fiadds
jb
jle
fsubrl
push
sbb
roll
outsl
mov
xor
push
xchg
shll
test
cmpsb
sbb
jle
fidivs
roll
sub
sbb
addb
or
cwtl
addr16
in
fiaddl
call
outsb
jp
jle
cmc
ljmp
cmp
addr16
pop
inc
push
pop
fwait
stos
out
jle
push
pop
cmp
lcall
xlat
xchg
je
fadd
adc
popf
jno
push
cmpsb
cld
nop
or
repnz
and
icebp
test
orl
pop
dec
mov
push
inc
jecxz
sub
in
in
int3
test
lcall
stc
pusha
aas
test
pop
jb
scas
sub
or
and
sbbb
xchg
leave
lods
pop
mov
hlt
mov
sbb
adc
cwtl
and
mov
iret
inc
xchg
inc
or
test
shrl
aaa
adc
adc
popf
pushf
pop
jo
dec
movsl
iret
lcall
jge
add
dec
dec
outsb
shrl
inc
xor
incb
aam
mov
mov
jb
call
mov
mov
push
shlb
adc
xchg
rcr
push
xchg
jecxz
jmp
xchg
mov
pop
pusha
jns
or
jg
addr16
cwtl
xor
out
dec
push
mov
push
add
outsl
outsl
outsb
cld
shlb
lahf
dec
push
mov
lret
mov
sahf
sbb
loop
testl
mov
pop
and
jle
loopne
pop
add
and
adc
xor
popa
cmp
sub
and
imul
enter
mov
fwait
jb
jmp
push
repz
insl
lock
jle
xchg
dec
test
dec
adc
xchg
and
iret
stc
imul
jg
push
icebp
scas
lock
aaa
insl
xlat
pop
sti
pop
inc
in
js
outsl
cmc
idivl
fdecstp
mov
pop
or
cmp
add
dec
mov
fdivs
fs
aad
mov
mov
push
sbb
dec
int
lds
ret
xchg
inc
je
icebp
mov
mov
sub
outsl
lcall
push
mov
jmp
xchg
decb
xchg
adc
cwtl
or
push
cmpsl
inc
lods
es
cltd
adc
gs
add
adc
repz
sbb
hlt
out
ljmp
daa
stc
pusha
jmp
xor
insb
mov
test
jmp
into
leave
cmc
adc
mov
lods
rcr
movsl
dec
mov
jecxz
cmp
into
xor
aaa
sbb
out
mov
hlt
mov
movb
adc
lcall
dec
push
pop
jge
js
sbb
imulb
sub
add
pop
int3
cs
mov
mov
dec
add
sbb
rclb
adc
mov
cmpl
movsb
lcall
popa
js
mov
xchg
mov
mov
iret
sub
add
dec
sbb
pop
sahf
mov
jecxz
fildl
push
xor
ss
int3
fdivl
icebp
push
icebp
dec
cmpsb
jl
adc
push
push
xchg
xchg
cmpl
pop
icebp
push
xor
mov
aam
pop
shrl
mov
mov
and
bnd
fldcw
push
dec
popf
xor
xchg
fcoml
fidivl
jg
pop
pop
sarl
pusha
shl
jmp
aas
scas
fiaddl
dec
mov
dec
ret
adc
lock
cmp
add
xor
into
pop
xor
sbb
int
shll
or
js
sub
mov
cmpsl
repz
repnz
shlb
in
pop
inc
pop
aas
and
xor
loopne
popa
scas
mov
dec
fdivrl
cmp
repnz
hlt
mov
testl
pop
lock
pop
test
cltd
cmp
test
insl
nop
cli
sub
push
test
and
aad
mov
fs
push
test
test
fistpl
loope
sahf
adc
xchg
mov
iret
cmc
sbb
popl
push
addl
iret
or
inc
mov
cmp
lcall
in
loope
jnp
insl
das
xor
popa
xchg
mov
iret
xchg
jns
jnp
gs
sbb
cmp
sbb
add
lods
movlps
fistl
cli
and
xchg
dec
push
pop
xor
lods
out
loopne
xchg
push
xchg
add
pop
ret
cmc
add
xchg
lret
xchg
incl
adc
add
cmp
jmp
fcmovb
sarl
fwait
in
or
aas
cltd
xchg
and
pop
push
arpl
mov
xchg
jmp
je
xchg
pop
jle
repz
mov
push
out
or
clc
mov
fcmove
xchg
xchg
mov
andb
sbb
push
adc
push
cld
ret
cmpsb
jl
stos
iret
clc
jae
lcall
jbe
fmuls
hlt
add
outsl
fildl
lcall
int3
jge
cmp
outsb
add
sarb
loope
dec
pop
or
repz
iret
into
push
xchg
pop
cli
jle
dec
jno
in
pop
mov
xchg
pop
das
filds
jns
xchg
xor
fbld
xchg
push
jl
add
rcrb
lods
pop
jne
push
xchg
xor
cltd
roll
mov
rorb
mov
mov
mov
inc
lahf
sti
cld
int3
stc
push
sub
jns
xor
mov
xor
xchg
pop
add
push
mov
fdiv
cmp
cmp
arpl
pop
sbb
inc
cmpsb
sahf
shll
out
fcompl
sub
sti
je
push
stos
call
push
mov
sti
cmc
and
mov
jno
ret
ss
push
cmp
adc
out
repnz
add
mov
out
add
fcomps
mov
stos
add
inc
mov
pminub
inc
lock
adc
bound
lcall
xchg
enter
pop
or
xlat
jge
xchg
xchg
and
inc
jge
mov
mov
jge
sub
into
loopne
mov
jg
or
aaa
pop
nop
lods
fisttpll
pop
movsl
inc
stos
pop
movsl
inc
inc
sbb
inc
mov
ret
test
pop
jmp
icebp
rorl
clc
sub
arpl
stc
stc
adc
out
insl
ljmp
add
xchg
xlat
jbe
sub
orb
push
jbe
test
sbb
test
ja
pop
imul
and
repnz
mov
pop
fwait
lds
and
insl
pop
dec
adc
jbe
mov
repnz
insb
sub
test
out
add
push
aam
dec
stc
filds
jecxz
enter
insl
jbe
jno
fldenv
and
xchg
pop
cmp
rorl
dec
mov
js
das
xor
adc
in
xchg
adc
sub
xchg
lea
out
adc
js
jmp
mov
or
stc
jne
push
hlt
pop
lea
sbb
push
aam
ror
sarl
cli
and
pop
mov
dec
cld
ret
inc
push
enter
add
je
jge
int3
jg
sti
push
mov
fsub
mov
gs
test
ds
movsb
push
in
push
xchg
mov
adc
aad
xchg
bound
mul
inc
lret
sbb
push
cwtl
scas
jne
icebp
cmp
cmp
es
imul
iret
push
mov
jmp
and
dec
int3
dec
sbb
das
cs
loopne
push
add
lret
addr16
cmp
or
or
cmp
xchg
sbb
in
and
aam
xchg
outsl
push
clc
es
testl
adc
outsb
hlt
jne
jo
adc
mov
push
jmp
in
jmp
jl
sbb
out
test
add
mov
jmp
mov
add
and
jl
add
sub
push
cld
lock
pop
test
mov
imul
lds
fwait
add
or
insl
mov
jns
fiaddl
arpl
outsb
divl
and
jecxz
call
jecxz
push
shl
push
aam
pop
mov
lock
lret
dec
mov
mov
pop
mov
cld
pop
cmpsb
in
push
jmp
call
and
and
cld
arpl
push
cs
sub
push
ret
pop
call
pop
mull
mov
pop
xor
xchg
movsl
xlat
aad
out
insl
sbb
pand
jle
sbb
adc
or
mov
jb
xchg
out
scas
cmp
xor
insb
addl
xchg
cmp
xorb
pop
pop
leave
jle
roll
mov
dec
aas
adc
add
lahf
lahf
inc
es
add
mov
inc
push
pop
push
dec
mov
cli
int3
shrl
ja
fcomps
pop
push
fcomip
aad
mov
mov
pushl
rolb
lcall
jb
aam
jno
or
cmp
cltd
popf
dec
pop
lock
ficomps
or
out
push
cmp
test
push
lcall
call
addr16
push
pusha
xchg
mov
fldcw
stos
rorl
imul
xchg
icebp
add
xchg
add
add
mov
xchg
and
cmc
adc
jne
stos
cmpsb
cmp
in
movsl
lods
sub
mov
js
cmpsb
pop
outsb
loope
shlb
lds
dec
fsts
inc
mov
aas
dec
adc
and
jo
cmpsl
cmp
pusha
rcrl
ljmp
shll
in
rclb
test
testl
nop
test
repnz
stos
sub
jp
dec
lahf
xor
mov
mov
mov
jg
xchg
sbb
fcoms
outsb
xor
jns
mov
xor
xchg
or
jnp
lcall
movsb
aas
pop
push
xchg
adc
adc
or
sbb
add
xchg
push
push
out
pop
fcmove
out
jp
push
xchg
lret
scas
xchg
test
inc
xchg
xchg
lods
addr16
movsb
les
jecxz
mov
sbb
mov
and
loop
fldl
out
hlt
loopne
and
inc
pusha
or
in
inc
ljmp
nop
outsb
adc
movsb
push
iret
mov
xor
addr16
inc
xchg
sbb
jae
push
dec
cmp
push
lock
add
sarb
sbb
cltd
pop
fisubl
or
xor
fistl
jl
popl
jo
out
movsl
xchg
stc
call
xchg
sahf
add
push
sub
push
sub
fs
mov
and
mov
ja
cld
shrb
xchg
fldcw
sbb
test
fs
xor
adc
or
and
rorb
lcall
into
add
jno
mov
xor
out
dec
xlat
push
aam
shll
mov
sbbl
inc
incl
xor
bound
mov
and
and
hlt
cmp
les
mov
ror
add
add
xorb
lods
jno
dec
fcomp
jb
pushf
ficompl
fwait
xlat
ds
ret
rcll
jae
mov
adc
clc
cld
stc
dec
inc
add
add
cmp
cld
and
mov
in
dec
pop
xor
push
insl
lret
int
xor
fbld
inc
es
inc
cmp
out
subl
mov
out
and
push
jae
mov
out
mov
lcall
cmpsl
pop
push
mov
and
dec
add
dec
sbb
inc
push
and
fsts
cltd
stos
cltd
mov
push
xchg
into
call
ret
nop
gs
bound
sub
fwait
adc
lahf
mov
aaa
mov
sbb
pop
out
loopne
mov
adc
inc
iret
or
mov
mov
test
sbb
lret
ret
mov
sbb
cmpsl
adc
std
int
jg
push
mov
sub
daa
addb
cmp
push
clc
outsb
push
pusha
into
xor
fmulp
orb
xor
lds
aad
cmp
pop
dec
ret
shlb
gs
cli
clc
add
aam
jge
insl
push
add
je
and
mov
sub
mov
mov
jbe
cmp
test
dec
dec
mov
fsubrs
ret
mov
sahf
push
inc
push
popf
or
pop
in
inc
outsb
incb
cmp
adc
push
js
adc
mov
mov
pop
pop
adc
add
pop
loopne
pop
cmpsl
xchg
cmp
xchg
scas
cmp
mov
fs
and
adc
cmp
int
lds
mov
and
xchg
fdivrl
mov
add
sub
gs
jno
cmp
sbb
or
mov
mov
inc
rclb
lret
and
lods
imul
out
pop
es
ror
and
pop
and
iret
push
rclb
nop
mov
and
cs
push
push
js
sub
xor
in
addb
flds
push
mov
fisttpl
out
sbb
int3
or
sbb
aaa
jp
std
pop
push
mov
insl
repnz
and
add
lock
dec
std
repz
aaa
test
mov
aad
test
cmpsl
shll
mov
add
sbb
shrb
adc
adc
pop
nop
sub
std
adc
in
daa
mov
js
int
xchg
pop
xchg
add
inc
mov
rorl
in
pop
mov
cmp
and
mov
xor
xchg
fiaddl
mov
push
jecxz
aas
adc
bound
fcompp
xor
dec
push
mov
scas
xchg
scas
pop
add
adc
mov
ds
xchg
push
repz
je
dec
loope
xor
sahf
xchg
loopne
mov
enter
inc
or
callw
fisttps
sbb
add
sbb
outsl
mov
xor
out
sub
push
push
les
js
adc
ficomps
idivb
sub
xor
jecxz
mov
xchg
adc
lock
into
xchg
pop
cmpsb
ret
sub
pop
mov
push
mov
fistl
jp
add
pop
or
push
ja
pop
clc
les
cmp
mov
sub
imul
or
xor
lcall
sub
stos
or
stos
fisubrs
jbe
enter
nop
adc
dec
push
imul
out
or
push
popf
lods
add
mov
sbb
loope
insb
call
frstor
jnp
jle
iret
repz
cs
fidivl
adc
push
adc
cld
xchg
ficompl
and
push
sbb
mulb
xor
mov
das
inc
call
in
call
pop
icebp
mov
dec
cld
xchg
lret
pavgb
xor
in
out
dec
nop
adc
inc
jnp
jb
es
loop
push
imul
icebp
out
pop
jg
mov
add
movsl
imul
mov
repz
fisttps
outsl
pop
mov
cli
and
lea
std
addb
adc
inc
mov
jnp
fsts
ret
mov
test
js
dec
mov
imul
fstl
cmpl
add
mov
xlat
ljmp
mov
mov
push
mov
repnz
or
inc
insl
dec
inc
push
xchg
add
push
ret
pop
data16
jge
leave
push
scas
mov
mov
cwtl
mov
sub
pop
popl
and
jl
push
sbb
lret
adc
test
mov
leave
lea
push
pop
adcl
fildll
dec
stos
mov
lds
cmp
lret
push
lds
insl
es
mov
jb
mov
stc
mov
jge
mov
push
mov
movsb
repz
or
clc
ss
xchg
push
push
push
mov
test
jp
inc
dec
jmp
ljmp
repnz
stc
arpl
adc
cmp
rol
sarb
rol
pop
mov
adc
insb
notl
mov
jae
daa
out
xchg
pop
add
push
repnz
fsubrs
pusha
loopne
cwtl
sub
ret
inc
and
cld
cmp
pop
push
jno
std
pusha
sub
bound
nop
mov
inc
je
mov
sbb
std
mov
imul
rorl
mov
adc
aas
xchg
in
fidivs
into
sub
jl
sub
jno
mov
or
nop
dec
sti
nop
roll
push
xchg
jb
push
sub
leave
push
lahf
mov
out
ds
sbb
sub
push
ljmp
inc
out
shll
cli
mov
add
ds
mov
out
dec
popf
cmp
pop
out
add
lahf
and
push
jmp
xorb
sbb
imull
les
test
stc
push
or
mov
pop
sub
mov
mov
mov
ret
shr
inc
lcall
lea
pop
out
jae
movsb
mov
decl
add
add
jae
xchg
cltd
loop
jnp
xchg
lds
fcoml
sbb
orb
jb
fs
or
lock
loope
stc
jge
es
jmp
jl
jno
ficomps
outsl
pop
jae
mov
push
leave
mov
adcb
xchg
push
ret
nop
fmulp
icebp
fnstenv
loop
out
pop
iret
xchg
cmp
movsb
addb
add
movsb
lock
cmc
dec
lds
inc
iret
inc
jno
cmp
xchg
xor
stos
xchg
fwait
sub
dec
sti
mov
cmp
es
bound
cmc
sbb
pop
cld
push
jne
js
ljmp
push
sbb
subl
push
mov
jg
add
lcall
jbe
adc
hlt
in
push
repz
cmp
push
xchg
sub
mov
add
shl
ret
fisubs
cmp
fwait
xchg
ret
call
inc
xchg
mov
pop
test
fwait
push
ss
roll
cmp
mov
lock
pushl
lods
rorl
scas
xor
xchg
jmp
and
jbe
dec
jg
sbb
fldenv
fcomip
inc
enter
xlat
popf
ja
mov
das
js
xchg
daa
jg
xchg
adc
ffreep
add
test
lahf
sahf
sub
ljmp
nop
and
int3
loope
mov
addl
lods
mov
inc
fucomp
push
movl
cmp
push
cli
xchg
dec
mov
repnz
cs
jp
cmp
mov
imul
lret
adc
sub
or
out
clc
inc
xor
adc
dec
push
mov
out
out
iret
pushf
inc
dec
mov
sarb
and
arpl
pop
jmp
lret
arpl
loop
or
push
mov
dec
sti
sub
push
std
adc
cwtl
ror
adc
add
sub
mov
or
aaa
adc
add
insl
push
dec
out
into
add
nop
push
mov
test
sbb
dec
xchg
ljmp
dec
outsl
sub
in
mov
iret
cmp
loopne
push
lcall
clc
aam
sub
dec
xor
mov
mov
es
fstl
xchg
arpl
and
jmp
rcl
and
imulb
data16
outsl
inc
psrad
std
rcll
or
inc
les
ljmp
add
push
bound
les
iret
aas
test
sti
ret
sarl
out
pushf
xchg
imul
sbb
mov
aam
shrl
shl
lret
nop
imul
push
xor
adc
dec
daa
or
jae
push
test
xchg
pop
in
aaa
sbb
jl
add
sbb
divl
mov
movsb
lds
roll
cmc
mov
insl
cmp
testb
pop
cmp
mov
xchg
fs
pop
jbe
dec
xchg
movsl
push
test
cli
or
subb
xor
shrb
mov
push
xor
sub
sbbb
jb
cld
bound
scas
pop
mov
cld
mov
ficomps
out
xchg
mov
scas
mov
outsb
fs
xor
mov
add
sbb
fcompl
cmpb
mov
popa
loopne
arpl
jecxz
or
mov
roll
movsl
daa
pop
mov
jle
fcoml
add
jae
mov
mov
sbb
dec
adc
cltd
sti
dec
mov
out
mov
sarb
imul
xchg
popl
xchg
ja
mov
mov
sbb
out
insb
sbb
sbb
push
imul
sahf
arpl
sub
mov
xor
lret
adc
mov
js
add
inc
mov
jbe
iret
cli
lea
pop
pop
js
xor
dec
out
sti
mov
iret
pop
hlt
xor
sbb
insb
xchg
mov
sahf
or
mov
pop
in
mov
jecxz
stc
xchg
pop
pop
imul
stc
loopne
xchg
dec
sub
sti
adc
pop
inc
fistpl
insb
popf
cmp
sahf
jno
cmpsl
insl
xor
mov
push
aam
mov
stos
cmp
test
psrad
xor
cmp
or
lods
into
add
mov
scas
test
cltd
jp
sbb
popl
or
mov
daa
and
subl
ds
mov
jo
mov
hlt
or
in
cwtl
jnp
aaa
mov
xchg
mov
sub
sbb
rorb
jle
mov
pop
popa
ret
sbb
sbb
loop
xor
push
inc
shrl
xchg
or
xor
jle
ss
add
rcrl
sub
inc
shr
add
and
mov
out
lods
jne
shrl
ljmp
mov
mov
adc
or
pop
call
mov
push
stc
scas
mov
sub
mov
xor
adcb
aam
add
sbb
push
shlb
push
add
cs
lret
fcomi
xchg
jns
lahf
imul
stos
sub
out
mov
andl
mov
sub
das
insb
push
nop
incb
pop
dec
pusha
add
sub
paddw
ss
or
sbb
mov
stc
dec
xchg
and
aad
or
outsl
jmp
test
sub
scas
mov
jo
bound
shl
inc
out
push
xchg
fwait
jno
jge
ljmp
sbb
out
add
jbe
sbb
jno
iret
push
sbb
push
shl
aam
mov
negl
adc
mov
mov
ljmp
ret
fidivrl
mov
push
adc
std
sub
mov
test
mov
dec
lea
and
mov
data16
xchg
xchg
mov
cmp
lahf
sbb
call
cmp
sub
je
sbb
iret
push
push
cli
dec
aas
or
cmp
cwtl
and
sbb
inc
repnz
jo
jge
push
scas
cmpsb
xchg
inc
test
mov
mov
push
bound
mov
test
ret
inc
pop
repnz
or
jl
scas
add
addr16
or
cmp
mov
mov
push
lahf
ds
pushf
pop
prefetch
mov
inc
sub
mov
pextrw
popa
cvtps2pi
pop
adc
rorb
cmp
sysexit
jl
nop
shrb
jae
jecxz
lcall
dec
xchg
cli
hlt
pop
mov
xor
lods
enter
add
mov
push
dec
in
add
jl
outsb
out
add
or
and
imul
cmp
mov
fwait
push
nop
mov
nop
lods
shll
ds
shrb
adc
rcrb
adc
inc
xchg
mov
lods
sub
or
jmp
adc
fcompl
mov
sub
xchg
loopne
xor
lds
imul
adc
dec
push
popa
mov
push
fisubrs
xchg
cltd
cmp
fidivrs
shr
pop
inc
jne
xchg
pop
pop
mov
mov
pop
test
clc
xchg
mov
mov
imul
push
ljmp
mov
aas
lcall
inc
shll
popa
mov
jecxz
movsb
dec
push
outsb
mov
jle
inc
int3
and
imul
arpl
jne
repnz
scas
fbstp
lret
sub
mov
fsub
dec
arpl
pop
lcall
jle
ljmp
das
ds
mov
in
xchg
lds
and
jns
add
push
out
movsb
sbb
and
in
aad
mov
sbb
jbe
inc
jno
jmp
icebp
or
jge
sarb
cmpsb
lea
xchg
or
ret
mov
fs
jo
mov
insb
xchg
dec
jg
xor
loopne
shlb
and
cmpsb
mov
jmp
push
ds
mov
or
popa
ja
out
stos
mov
out
or
or
mov
movsl
pop
or
icebp
xchg
vorps
pop
jg
and
insb
dec
jae
inc
fs
adc
es
mov
leave
out
mov
cmpsl
shlb
cwtl
push
push
jnp
cmpsl
idivb
pop
or
adc
jno
js
aaa
jo
adc
or
pop
arpl
js
mov
loopne
test
pop
jne
mov
dec
popl
pop
mov
jne
divb
add
mov
bound
in
ret
pop
mov
nop
cmpsb
xchg
add
outsb
movsb
shl
cwtl
leave
les
push
sub
test
hlt
or
nop
ljmp
xor
test
pop
out
lcall
outsb
fstps
mov
lods
stos
xor
daa
mov
mov
add
andb
jne
xlat
xchg
xchg
mov
lods
or
jg
shl
sbb
mulb
aad
add
lock
int3
enter
cmp
jbe
adc
mov
in
call
or
mov
dec
xchg
mov
inc
pop
adc
jae
inc
xlat
xlat
data16
or
out
push
jp
sub
lret
cmp
inc
and
movsl
mov
mov
push
xchg
pop
mov
sub
cltd
test
addr16
adc
das
mov
fwait
insl
or
ret
push
mov
add
lret
outsb
enter
mov
jg
out
ljmp
loopne
arpl
jecxz
imul
push
jne
stos
sbb
ja
xor
stos
fists
add
or
sarl
fisubs
inc
xchg
pop
icebp
xchg
mov
xchg
or
inc
enter
jbe
rorl
add
sub
inc
push
jl
shll
cmc
jecxz
sub
cmp
xchg
sbb
cmp
lret
mov
adc
fisubs
ljmp
inc
jle
inc
push
mov
jae
mov
lock
aaa
pushf
je
mov
jp
xchg
cli
push
jmp
dec
add
dec
ljmp
dec
jp
cmp
dec
mov
mov
sbb
jle
js
fcompl
inc
mov
sub
imul
stos
iret
mov
into
lods
mov
test
push
test
cmp
mov
cmp
xor
outsl
cmc
ret
cltd
jge
inc
cmp
cwtl
ret
mov
scas
and
shrl
cli
push
ret
lea
ljmp
xor
lahf
cmp
pop
mov
cmp
mov
clc
daa
mov
pop
sub
test
sub
test
loop
dec
jae
fcmovne
fiaddl
jne
into
pop
gs
enter
in
and
cmp
mov
out
leave
fsubrl
push
xor
adc
daa
clc
sub
andb
testb
adc
pusha
je
ret
xchg
in
mov
enter
jne
hlt
pop
setge
mov
leave
or
cld
jno
sbb
addl
int3
lret
inc
mov
or
repnz
mov
div
jo
inc
testl
jg
push
add
scas
in
add
enter
push
sub
mov
or
push
or
fistpl
xchg
clc
adc
add
fisttps
dec
lds
movsb
xchg
stos
std
pop
fdivrs
mov
sbb
jg
arpl
out
pushf
std
ss
test
xchg
lds
adcl
cltd
sahf
cmpsb
sbbb
test
outsb
out
mov
shll
lret
cs
or
stc
shrl
scas
lds
hlt
cmp
push
adc
arpl
push
cwtl
pusha
pop
daa
pop
mov
cmp
xchg
ret
out
pushf
dec
insl
and
lahf
imul
ds
aas
dec
sbb
inc
inc
loop
in
xor
cmpsb
movsb
out
leave
dec
sbb
clc
mov
insb
push
pop
rclb
shl
scas
push
jmp
mov
call
mov
push
int3
push
push
lcall
fisttps
insl
das
mov
lahf
test
cmc
dec
out
xchg
ljmp
pop
into
in
xchg
loopne
push
aaa
sbb
adc
push
sbb
jbe
pop
bound
mull
jmp
or
add
shll
lret
and
int
fxam
mov
into
dec
aaa
push
or
add
loope
les
mov
cwtl
xor
xchg
call
and
out
scas
into
add
imul
orb
sub
jns
xor
js
adcb
jl
leave
fstenv
mov
xor
push
imul
xorl
bound
xchg
cmp
jo
lret
xor
loopne
int3
or
jno
xor
gs
or
sub
sti
jecxz
jbe
mov
jno
pop
fldl
test
xor
push
dec
out
into
dec
mov
mov
dec
fmull
jecxz
xor
mov
jb
aas
outsl
mov
mov
mov
cli
or
jmp
mov
in
sti
jae
push
sub
inc
idivl
sub
lds
lahf
jg
fdivl
aaa
mov
ret
fcomps
pop
xor
push
xchg
jmp
mov
ljmp
adc
sub
xlat
mov
dec
or
xor
pop
ror
sbb
fisubrl
dec
jge
adc
sbb
xchg
or
or
cmp
jl
mov
cld
adc
add
pop
mov
int3
lcall
xchg
das
ficoml
add
mov
pusha
jne
mov
out
les
and
pop
loope
addr16
lcall
jg
jno
push
shll
pusha
or
and
jp
or
icebp
push
pop
sbb
or
add
aad
jmp
dec
or
imul
mov
fsubs
push
sbb
sbb
push
jecxz
jmp
cmpsl
loope
cmp
repz
inc
jae
add
lret
jg
pop
aam
pop
imul
insl
xor
sti
loopne
arpl
jmp
dec
mov
dec
lock
ret
lcall
xchg
xorl
pushf
xchg
stos
cli
dec
mov
xor
jle
dec
inc
mov
outsb
pop
pop
cli
pusha
sub
pop
or
in
in
jne
cmp
adc
push
shll
lahf
cmp
pushl
lcall
jl
jle
mov
or
lods
adc
pop
gs
pop
repnz
xchg
fsubs
xchg
fisubl
mov
and
sbb
aaa
mov
adc
cmpsb
push
loop
mov
jecxz
xor
aam
movsb
push
scas
xchg
mov
or
out
xchg
xchg
ret
lahf
fs
fldcw
and
push
push
xor
lods
mov
mov
add
cmp
or
sti
sbb
xchg
push
cmpsb
fnstenv
shlb
or
popf
push
sub
into
sahf
fsubrl
fistps
push
stc
lret
lods
jle
push
jns
push
leave
movsb
rcll
mov
int3
fs
fwait
outsl
or
sbb
jb
mov
pop
add
fistl
or
in
iret
push
not
aad
lock
call
mov
xchg
into
lea
jmp
adc
lea
dec
movsb
sbb
pop
lret
fiaddl
xchg
cli
pop
sbb
test
dec
divb
xchg
testl
es
mov
push
ljmp
push
pop
ret
cli
fists
mov
mov
repnz
test
nop
sub
fiaddl
rdpmc
mov
mov
jecxz
add
jb
insw
fucom
insb
insl
or
fisubs
and
push
fwait
js
mov
pop
pop
pusha
mov
je
bound
sti
sbb
pushl
xchg
or
nop
mov
mov
cmpsb
sbb
xchg
mov
jp
dec
push
lahf
outsl
aaa
leave
rcll
pop
fisttps
cmp
add
push
lods
push
inc
or
out
ljmp
cltd
xor
cmp
inc
call
sbb
adc
sarl
adc
mov
js
mov
cmpsl
iret
std
inc
inc
addr16
sbb
add
fisubl
cli
jle
sub
in
xchg
inc
fiadds
lret
aam
cli
adc
mov
iret
mov
lods
inc
ret
gs
xor
imul
data16
ret
jg
cmp
jle
imul
aas
adc
das
repz
push
jae
xor
dec
sbb
mov
push
sti
scas
sahf
outsl
jnp
push
sbb
cmp
dec
sbbl
test
sbb
dec
filds
mov
out
arpl
ret
jne
inc
in
xchg
inc
jl
loope
fs
mov
lods
xchg
jns
push
orl
jnp
jecxz
add
imul
cmp
jae
ss
clc
test
xor
xor
cmp
add
dec
mov
adc
mov
out
int
ds
ljmp
jge
std
test
cwtl
pop
inc
les
lret
scas
add
shr
fisttps
icebp
xchg
and
adc
not
imul
hlt
ja
sarl
cmc
mov
mov
jno
addl
and
test
or
shrb
mov
call
mov
mov
inc
lods
mov
iret
shlb
dec
psubusb
addb
jne
imul
mov
xor
and
clc
jmp
xchg
add
jecxz
and
fcoml
in
lea
lds
or
mov
jle
inc
pushf
pop
xchg
nop
test
cltd
insl
inc
lods
xor
stos
gs
fists
sbb
ss
add
mov
repnz
in
and
xor
xor
lods
repz
xchg
stos
insl
sti
js
repnz
shr
jecxz
jae
or
aaa
mov
jg
stos
mov
and
outsb
xlat
sbb
adc
rcrl
lcall
test
xor
jl
or
rcrb
orl
shrl
clc
cmpsl
movsb
xor
je
lds
inc
out
xchg
xchg
adc
add
pop
xor
sbb
in
pop
mov
fnstcw
cs
scas
cwtl
inc
push
stos
mov
int3
es
call
mov
mov
and
push
das
mov
xchg
push
jne
mov
lods
mov
inc
or
aad
out
push
loope
je
xlat
fidivl
test
dec
mov
add
cmpsb
dec
and
jmp
xchg
int
cld
lahf
jno
fisubrl
fsubrs
sbb
dec
decb
out
je
call
push
xchg
cli
dec
mov
nop
repz
dec
les
jae
divl
mov
leave
mov
mov
in
sbb
cmpsb
xchg
aad
push
rcl
push
cmp
mov
mov
aaa
call
fadds
loopne
leave
pushl
test
sub
test
ljmp
mov
notl
testb
popa
int
fdiv
cli
enter
jnp
cmp
imul
mov
cs
jnp
jge
dec
pushf
push
xchg
cmp
ret
outsl
orb
out
or
xchg
adc
lcall
shrb
lds
cmp
jge
in
insl
sub
pop
mov
sti
aas
mov
fs
xor
xor
xor
out
sbb
lea
popf
sub
xor
push
push
jno
push
repnz
push
fbld
icebp
and
lahf
mov
mov
pop
test
lahf
leave
add
shll
mov
dec
icebp
insl
popf
nop
push
add
test
cs
push
mov
cmp
lock
sub
jecxz
or
jl
add
sbb
xor
out
mov
call
mov
pop
cmp
mov
dec
addr16
hlt
int3
pusha
jnp
sub
test
xchg
inc
pusha
mov
fistl
stos
lea
push
adc
cmp
pop
dec
loopne
stc
push
cmp
stos
dec
jb
stc
ret
mov
mov
cmp
pushf
push
mov
xor
mov
das
pop
xchg
sahf
xchg
push
pop
mov
outsl
fisttpl
sub
push
icebp
inc
arpl
mov
push
pop
jecxz
aas
push
cmp
imul
push
jg
inc
ficomps
cs
lock
repnz
int3
into
sahf
rcll
add
push
stos
push
pusha
jmp
pop
rcr
push
cmp
fdivl
and
fwait
leave
addb
aaa
pushf
idiv
xor
mov
popa
in
arpl
and
dec
mov
add
cld
inc
pop
sahf
xchg
les
xor
mov
loope
pop
sahf
insb
rolb
jmp
xor
mov
jbe
jb
cwtl
lds
pop
cmp
popf
xchg
mov
gs
arpl
sbb
inc
jae
lahf
dec
mov
stos
add
movsl
and
test
inc
sbb
pop
iret
mov
es
out
imul
mov
pop
test
sbb
cs
jnp
test
lcall
xor
movsl
sbb
adc
xor
cmpsb
test
insl
pop
inc
dec
or
mov
rolb
xlat
mov
push
insb
adc
lds
data16
and
fmulp
fcom
push
inc
cmp
das
fwait
xchg
ds
jae
movsl
cli
xor
xor
xlat
das
add
sub
std
enter
pop
data16
push
jnp
imul
int
jl
into
dec
test
or
pop
ror
or
push
mov
pop
clc
aas
insb
adc
mov
dec
inc
mov
sbb
dec
jbe
pop
cmpsb
arpl
fnsave
sbb
lret
pop
imul
imulb
into
xor
or
adc
push
adc
sti
shll
inc
mov
jl
xor
mov
mov
lods
dec
pop
frstor
out
dec
je
xchg
rorb
sahf
stos
dec
pop
xchg
push
xchg
pushf
cmpsl
pop
gs
or
jae
xor
cmc
test
sub
mov
int3
jo
dec
je
dec
xor
mov
jl
pop
scas
sub
shrb
dec
lea
push
outsl
and
jne
dec
jmp
jle
xchg
push
jle
xor
inc
mov
in
sarb
xchg
add
push
in
test
xor
mov
push
subl
sbb
or
sbb
sbb
subl
jne
es
dec
mov
addb
inc
and
add
stos
xchg
push
imul
stc
lahf
add
jno
not
js
and
cmp
fs
add
mov
inc
xchg
pop
nop
es
push
jae
or
mov
outsl
add
xchg
inc
mov
inc
aas
xchg
adc
xchg
adc
loopne
aas
and
roll
push
mov
fildll
dec
xchg
lret
sahf
stc
call
xchg
add
or
frstpm(287
cmovnp
clc
cmpsl
aad
mov
xor
shlb
mov
in
aad
cmp
ds
xor
xchg
jne
je
push
mov
test
mov
sub
cmp
sbb
shll
and
mov
inc
fstps
pop
cltd
outsl
push
cmpsl
xchg
and
sbb
or
jg
dec
rolb
pop
adc
inc
xchg
fdivs
xchg
jno
sub
cmpsb
pop
lret
jg
cmp
loopne
push
out
dec
pop
xchg
lods
mov
addr16
sbb
jg
icebp
push
aas
fnsave
and
jb
addr16
mov
subb
or
test
fcomi
fdivrs
aas
gs
mov
bound
inc
int
sub
xchg
cwtl
vfpclasssd
not
sub
mov
stos
jle
int3
rcr
mov
sub
mov
inc
cmc
jno
sbb
inc
orl
inc
pop
daa
repz
mov
pop
fs
xor
jg
ret
jne
cmp
popf
fisubrl
out
jp
clc
inc
fwait
daa
add
out
addl
les
insl
test
or
jl
test
hlt
fidivs
pop
call
rcrl
mov
jle
aad
jnp
bound
outsb
xor
inc
cmp
int
push
xchg
push
ljmp
sti
jecxz
add
mov
outsl
push
mov
outsb
out
push
adc
inc
addl
add
cmpb
xor
outsb
mov
cmp
repz
pop
push
xor
dec
mov
pop
sbb
clc
add
jmp
sarb
mov
dec
or
xchg
aas
out
or
push
std
std
and
stos
mov
pop
das
and
test
icebp
pop
je
out
inc
pop
xorl
test
cmp
in
xchg
mov
sahf
xchg
roll
ss
stos
ficompl
mov
out
cmc
mov
fistl
cwtl
test
sbb
ljmp
loop
fprem
loop
mov
shr
mov
and
flds
into
out
insl
mov
pop
mov
mov
adc
adc
movsl
add
or
jnp
push
inc
pop
and
icebp
ss
xlat
pop
pop
lret
test
fbstp
mov
inc
out
movsl
xchg
das
cmp
push
dec
xor
ret
jne
and
ds
pushf
int
mov
xchg
loopne
push
cmpsb
add
dec
outsl
xchg
inc
das
shrb
sbb
add
xor
cmp
pusha
daa
or
sqrtps
jp
stc
and
inc
pop
pop
test
mov
xor
jb
add
ss
sub
mov
ljmp
xor
loop
mov
xchg
adc
adc
add
dec
idivb
cmp
inc
mov
pop
ja
jle
imul
scas
jg
into
or
pop
aaa
dec
jne
mov
mov
cmp
and
mov
cwtl
mov
or
pop
mov
test
imul
push
cmp
sbb
and
mov
clc
sub
sub
jl
sahf
pusha
sbb
mov
notl
push
lock
out
jmp
xchg
push
insb
add
xchg
mov
mov
lcall
je
push
add
mov
add
mov
sbb
fptan
mov
cltd
ja
fiadds
iret
clc
fistpl
mov
or
in
sbb
sti
cmp
lods
jmp
movsb
nop
out
jg
pop
popf
xchg
xor
fs
mov
nop
inc
xor
dec
xor
pop
inc
xor
lods
inc
jne
stc
sub
leave
sar
fcompl
cmp
test
sub
add
push
mov
push
inc
adc
sbb
xchg
icebp
xor
int
subl
adc
jge
in
aas
add
and
ret
rorl
fcomps
cmp
jns
lret
jecxz
jb,pt
mov
nop
subl
bound
iret
xchg
les
int
mov
lahf
xchg
sbb
int
or
add
inc
pop
jp
cmpb
frstor
add
movsb
clc
lods
test
lahf
sbb
fwait
and
adc
sbb
or
into
std
push
test
dec
dec
cmp
ss
push
cmp
outsb
sbb
insl
les
cmc
call
out
andps
es
bound
cmc
ja
scas
daa
jb
sbb
adc
leave
cmp
xchg
inc
aad
or
mov
clc
mov
into
push
xchg
call
out
push
pop
lahf
sub
stos
push
and
test
inc
in
push
dec
shll
xor
mov
ret
xchg
jns
xor
cmp
ds
and
xchg
jl
faddl
sub
xchg
aaa
lret
sub
sub
in
push
jne
sahf
lock
push
push
mov
das
aaa
jae
loope
fistps
inc
dec
cld
stos
xchg
frstor
cmp
push
adc
cmp
les
xor
pop
imul
push
push
ja
mov
xor
xor
call
testl
mov
repz
enter
sub
pushf
gs
test
fsubrs
xchg
jno
sub
add
mov
inc
cli
out
sarl
popa
adc
pop
insb
clflush
cmp
clc
pushf
test
adc
adc
hlt
xor
or
pop
fimuls
popf
lcall
jbe
fucomp
push
and
and
pop
ja
jno
push
flds
iret
int
ret
sub
mov
divb
fstpl
push
pop
push
in
aaa
push
icebp
xor
int
jg
cmpsb
jno
sbb
fisttpll
loopne
mov
jns
cs
leave
imul
xchg
fadds
adc
movsl
dec
sub
shlb
mov
cmpsb
mov
or
dec
mov
pop
int
lods
push
pusha
mov
ljmp
out
cli
subl
lock
and
jno
dec
into
outsb
or
pop
iret
enter
sti
inc
xchg
mov
pop
jmp
mov
cmpsl
mov
aad
cwtl
xor
mov
mov
mov
insl
pop
shlb
lods
lret
sbb
mov
and
push
div
xchg
daa
repnz
test
imull
adc
mov
stc
fisttps
aaa
pop
ret
fs
pop
jno
jle
frstor
jae
pusha
stc
adc
cmpsl
mov
cld
loopne
sbb
sub
fisubs
mov
mov
or
xchg
xchg
lds
add
gs
shll
out
shrb
test
bound
daa
fnstenv
xor
mov
push
sub
dec
cmp
and
into
dec
cld
mov
arpl
mov
cmp
loope
out
addr16
scas
or
adc
leave
into
pop
add
sub
dec
cwtl
adc
leave
test
sub
leave
out
xor
sub
adc
loope
mov
ja
clc
and
dec
daa
cmpsb
lahf
ds
popa
shr
xchg
or
leave
add
popa
ss
pop
fcoms
add
pop
sub
stc
sub
push
push
jbe
cld
lretw
push
mov
xchg
test
fsub
pop
cli
push
adc
flds
mov
sub
cmpsl
mov
ret
xchg
stc
ds
in
or
sahf
mull
int3
add
jge
int
inc
jle
xor
cmp
dec
and
sbb
hlt
out
sarl
mov
out
ret
push
jbe
hlt
fdecstp
xor
adc
aam
push
adc
faddl
fwait
insb
add
ret
js
xor
and
insb
mov
fs
mov
jo
inc
cmc
in
test
xchg
bound
aam
fisubrs
or
cmp
addr16
lds
xchg
jp
jb
test
sbbl
ss
out
dec
pop
or
xchg
mov
sub
mov
iret
cmp
mov
imul
and
adc
xor
pop
dec
lcall
jge
ficoms
loope
dec
sbb
addr16
push
xor
and
std
leave
rcrl
cmp
sti
movsb
jl
mov
aam
mov
and
push
insl
into
call
ljmp
jmp
mov
test
xor
fsubl
jns
cmp
aaa
push
rolb
push
sbb
jne
ficompl
jmp
gs
mov
das
hlt
out
cwtl
jb
push
adc
adc
fwait
sbb
or
movsb
xchg
xor
negb
dec
aaa
in
or
mov
adcb
cmp
in
out
pop
imul
mov
aad
mov
dec
lcall
lcall
loopne
les
int3
push
je
fists
dec
add
repnz
inc
xchg
add
aas
mov
stc
mov
addr16
cmp
fs
sbb
cmpsl
mov
mov
and
daa
and
out
int
mov
jle
xchg
xor
imul
sub
xor
icebp
sbb
ss
pop
popa
imul
xchg
ss
push
push
pop
push
cltd
pop
push
call
mov
arpl
xchg
xor
enter
cmp
rolb
js
popf
jno
cmp
or
jecxz
frstor
cwtl
pop
pop
adc
out
pusha
pop
xchg
or
ret
push
jo
shlb
data16
lods
stos
and
push
cmp
xchg
mov
ja
mov
int3
adc
es
lret
jp
imul
sub
cmp
test
cmp
incl
xchg
ud2
sub
pop
add
icebp
mov
imul
push
dec
jne
aas
and
inc
addr16
cmpsl
rdtsc
dec
data16
add
rcrb
xor
xchg
rclb
fisubl
lret
adc
mov
jge
nop
sarl
pop
leave
xor
outsb
cli
pop
xchg
call
stc
ljmp
sahf
test
xor
arpl
cltd
dec
ficompl
push
add
scas
mov
cmp
sub
in
mov
mov
xchg
adc
repnz
adc
jo
sbb
jmp
mov
push
sub
cmp
cli
xchg
jp
adcb
mov
mov
mov
push
jo
cltd
sar
stc
out
in
loop
xchg
xchg
push
mov
mov
mov
enter
jl
sbb
pop
jns
arpl
lock
rcr
mov
xchg
sub
push
xorb
adc
gs
dec
clc
adc
sbb
mov
push
xor
mov
repnz
push
mov
out
in
pusha
sub
lahf
push
sbb
xor
adc
fstpt
aas
dec
icebp
repnz
outsb
bound
pop
stos
dec
inc
mov
adcl
les
arpl
int3
mov
xor
mov
jae
sbb
lcall
jp
cmpsl
fs
inc
jb
mov
shrl
adc
imul
mov
rcrl
into
cmp
test
mov
jl
and
or
test
xor
mov
inc
jmp
jb
cmp
loopne
sbb
bound
add
orb
push
gs
ficoms
add
push
sub
scas
or
jg
stos
fs
in
mov
push
add
mov
jbe
shll
sti
jno
jne
sti
adc
sub
cli
xchg
lds
xchg
lods
mov
fcmovne
or
fisubl
xlat
xchg
idiv
push
pmaddwd
outsl
test
ss
pop
sbb
push
mov
dec
lock
movsb
orl
sbb
push
mov
mov
cmp
es
xor
xor
xor
outsl
mov
jge
pop
imull
orb
ja
in
lea
in
inc
sahf
mov
jae
sgdtl
clc
cmp
incb
icebp
stos
std
cmpsb
ret
movsl
and
mov
movsb
push
loope
xchg
xlat
xor
scas
cmp
push
jge
fld
out
mov
and
ja
ret
push
or
cmp
cmpl
decl
push
into
icebp
xor
sub
sbb
lods
mov
push
sub
jae
lcall
push
and
sub
mov
outsb
dec
test
aam
fwait
mov
cli
or
outsb
imul
xchg
dec
dec
int
movsb
ja
sbb
pmuludq
adc
sub
cmp
cmpsb
push
xor
sbbb
rclb
icebp
idivl
shl
jl
lcall
mov
lret
fld1
out
xchg
add
and
in
jg
test
mov
mov
sbb
lods
inc
inc
fidivrs
dec
cmp
lock
bound
pushf
adc
loopne
test
mov
popa
movsb
xor
and
inc
rcll
jb
or
mov
cld
mulb
out
jbe
inc
es
addl
sub
sarl
int3
pop
mov
cmc
cmp
fwait
das
mov
add
aam
mov
adc
dec
push
or
jmp
shl
pop
sti
mov
subb
and
ret
mov
sbb
cmp
loop
xchg
dec
mov
pop
aaa
mov
cld
je
js
shll
adc
cmp
jmp
cltd
push
and
adc
pop
xor
sbb
xchg
stos
jg
xchg
mov
pop
sbb
or
orl
jmp
adc
sub
loop
push
jl
pop
and
mull
mov
and
pop
test
shll
or
gs
jecxz
cld
dec
daa
pop
notb
fucomip
ret
xchg
mov
lcall
xlat
jns
dec
adc
movsl
aas
and
in
jb
call
pop
sti
dec
inc
enter
pop
sub
movb
bound
xor
repnz
inc
nop
cmpb
sbb
xor
cs
sub
push
or
push
adc
leave
popf
mov
mov
aad
lock
subb
xchg
js
out
inc
mov
roll
ficoms
mov
scas
pop
mov
push
fwait
jl
es
cmp
mov
mov
mov
add
mov
call
daa
adc
push
sahf
ficoms
xchg
pop
jae
jg
in
lret
les
add
xor
pop
xchg
pop
cmpsb
sbb
jb
int
xchg
insl
popa
mov
xchg
repnz
lret
fstps
or
add
inc
xchg
or
and
shll
mov
inc
repz
xor
push
push
imul
mov
test
cmpl
and
fs
dec
insl
fcmovnbe
sar
pop
jne
adc
lret
dec
out
scas
dec
ret
push
ss
and
shll
pop
push
inc
xchg
jmp
js
aad
pop
icebp
xchg
pop
orb
add
repnz
imul
in
inc
inc
mov
push
pusha
loopne
jge
loop
pop
sti
inc
in
out
aam
mov
sub
enter
bound
xchg
ret
pop
mov
push
mov
cmp
push
push
and
stc
jns
and
or
stos
xchg
and
pop
push
xor
lcall
mov
lock
loope
or
pop
jb
and
lcall
icebp
andb
xchg
cmpsb
mov
nopl
lahf
cmp
and
adc
mov
nop
jge
jbe
lods
sti
add
lcall
rcrb
xlat
mov
fisubrl
repnz
sub
jge
cmp
in
and
and
lcall
sub
es
sub
repnz
xchg
movl
and
fisttps
pop
nop
fdivl
scas
rorb
xchg
jns
cli
mov
jmp
repz
jb
mov
adc
jge
ljmp
outsb
and
mov
outsl
rcr
dec
lea
in
pushf
cmp
imul
test
cltd
mov
jno,pn
and
push
scas
divl
cmpsl
movsb
xor
fistpll
fs
cmp
jl
add
in
ss
imul
cmpsb
fcmovu
xor
pop
inc
xor
jp
les
or
jns
push
and
loopne
out
push
push
aad
in
jnp
or
or
dec
inc
add
mov
call
and
cs
test
or
fcoml
and
mov
add
cmpsl
testb
mov
aaa
fidivrs
cmpsl
cwtl
outsb
push
iret
je
pop
dec
jo
cli
mov
jle
fldl
sub
push
out
mov
sub
xchg
xor
pop
xchg
pusha
jb
lock
mov
push
es
lret
test
xor
out
jnp
fs
fsubs
test
xorb
push
es
adc
or
and
add
inc
cmp
aaa
pop
pop
mov
into
call
jno
out
lock
inc
mov
ret
fmull
cmp
xchg
mov
sbb
xchg
std
push
jo
ret
daa
fisttps
jne
cmp
movsb
gs
movl
pop
or
mov
inc
iret
mov
xchg
xchg
out
push
add
bound
ss
rcrb
pop
cmpsb
mov
push
and
fmulp
addr16
aaa
rcll
ss
sub
push
mov
scas
and
call
adc
sub
popf
cmp
cmp
xchg
push
jb
out
jp
fwait
push
inc
mov
fildll
jg
lcall
dec
mov
daa
inc
xorb
ja
sbb
scas
hlt
xchg
lahf
pusha
jmp
test
data16
sub
sub
ss
data16
testl
pop
push
adc
push
mov
push
or
cwtl
sbb
dec
mov
pop
outsb
adc
jge
jmp
sbb
push
cmpsb
mov
inc
mov
lret
mov
out
or
test
and
sbbb
das
out
shr
int
imul
sub
sbb
or
xor
add
jl
out
out
repnz
fstl
iret
sub
pop
inc
ret
popa
push
adc
insl
in
jo
in
sbb
add
mov
aam
push
inc
stos
aaa
int
add
mov
repz
andl
jg
cld
fadds
jmp
sarb
xchg
xor
outsb
fs
xor
lret
sub
sbb
aad
int3
lods
mov
mov
icebp
push
xchg
jmp
mov
push
in
pop
jecxz
xor
shlb
mov
cmp
xchg
xchg
pop
pop
mov
add
lods
pop
rcl
fs
negb
addl
dec
dec
loope
sub
mov
faddl
and
es
add
xor
push
es
fisubrs
cmpsb
add
sbb
mov
lea
lahf
cmc
dec
jge
push
clc
sub
push
stos
xchg
cli
pop
push
dec
cmc
lcall
into
add
pop
mov
xchg
cmp
shrb
push
stc
out
sub
aas
adc
loope
push
xor
fildl
pop
ret
movsl
insl
add
xchg
inc
sub
cltd
sbb
inc
mov
mov
add
adc
xchg
xchg
jmp
sahf
in
push
leave
and
mov
popa
adc
pop
stos
dec
rorl
aam
or
cmp
fbld
cwtl
test
sub
test
xchg
jp
mov
notl
xchg
push
hlt
push
or
sbb
mov
rorb
ret
in
arpl
mov
push
aaa
sbb
incb
jae
xor
inc
adc
sbb
mov
hlt
cmp
scas
push
mov
sbb
gs
inc
iret
jle
push
adc
inc
out
pushf
jbe
lahf
mov
idiv
pop
inc
imul
sbb
loope
pushf
mov
roll
dec
outsb
inc
push
jbe
fnstcw
add
pop
xor
pop
mov
fistps
cli
pop
fcmove
cs
in
xchg
les
outsb
or
xor
or
leave
rorl
pop
stos
or
jbe
dec
and
push
push
pop
pop
xchg
pop
jp
lds
fwait
lods
subb
ss
stos
adc
xchg
ficoms
popa
out
mov
ficompl
mov
fs
mov
fidivrl
aad
xlat
in
pop
sarl
push
mov
pop
lahf
mov
das
mov
mov
es
lcall
movsl
sub
out
ret
je
mov
cld
arpl
sub
jnp
loop
mov
mov
sbb
push
cmp
add
movsb
sub
mov
xor
paddsw
add
ret
add
push
jecxz
inc
hlt
pop
and
add
and
iret
in
cmp
scas
xchg
pop
sub
shll
jo
cmp
xchg
add
stos
lahf
test
push
mov
jg
cwtl
mov
jecxz
pop
fiadds
mov
or
jnp
out
sbb
xor
mov
adc
fistl
shlb
test
or
jae
pop
mov
xlat
les
xor
pop
sub
xor
ss
cli
xor
mov
stos
std
cmpsb
xor
imul
aam
imul
sbb
lods
sub
dec
loopne
shlb
jo
int
mov
xor
repz
jmp
lcall
jg
int
dec
arpl
outsb
mov
and
lods
dec
mov
and
mov
out
es
movsl
and
iret
shll
add
in
mov
add
test
hlt
ja
fcmovbe
mov
sti
jo
cld
push
mov
std
mov
sub
adc
lea
pop
and
inc
xor
and
jno
pop
in
pop
ja
xchg
push
cmp
cmp
cmc
cli
mov
addl
adc
loop
dec
jae
out
add
rcl
lods
aad
adc
lahf
fwait
out
stos
pop
outsl
test
inc
pop
cmpsb
adc
dec
mov
mov
lea
subl
ds
pop
adc
aam
push
fisttpl
inc
aas
adc
popf
ja
adc
test
test
adcb
aam
mov
scas
aam
bound
icebp
fcoms
out
jae
es
outsl
arpl
xlat
and
cmp
adc
jnp
aam
ja
repz
call
push
iret
pushf
lods
mov
rcll
in
sbb
mov
inc
dec
aad
pop
sbb
jb
mov
enter
mov
mov
cmpb
data16
dec
mov
lcall
mov
hlt
mov
movsb
sbb
push
test
sub
ds
mov
outsl
in
sahf
xor
or
aaa
loopne
mov
xchg
fidivs
pop
call
sub
mov
xlat
xor
shrl
or
and
add
sub
push
cwtl
adc
adc
sbb
or
jbe
pop
dec
xorw
stos
sahf
inc
xchg
xchg
cmp
ret
insb
pop
jge
mov
shll
aas
fsubl
jae
adc
movsb
hlt
cmpsl
or
sub
push
jbe
sbb
subps
ljmp
add
std
cmp
ja
fimuls
into
pop
inc
ffreep
mov
sub
testl
inc
push
cld
lcall
mov
or
xchg
inc
ljmp
xchg
pushl
ja
adc
inc
arpl
cmp
push
cmp
jp
xchg
lcall
jg
push
ss
push
andb
sub
jmp
push
and
int
cmpsl
and
mov
cli
sub
xor
xor
mov
and
inc
xor
or
inc
ljmp
ss
pop
adc
sub
dec
pop
inc
lods
mov
push
sub
movsb
inc
shlb
xor
test
inc
sub
adc
pop
adc
cmp
pop
fdivl
inc
dec
cs
sbb
xlat
xchg
dec
stos
lea
js
ret
inc
inc
ds
adc
in
imul
icebp
sub
sbb
cld
mov
sub
nop
loop
jns
pop
push
jns
sub
fdivl
jo
cmc
push
leave
scas
shrl
inc
jbe
push
push
xor
xchg
lock
inc
fcmovbe
sbb
addr16
loopne
inc
push
filds
bound
filds
add
je
pop
ja
iret
inc
mov
sub
movsb
daa
sbb
imul
cmp
in
sbb
shrl
xchg
pop
fnstsw
jo
int
cmp
lea
repz
testb
enter
insl
mov
cld
imul
mulb
xchg
loopne
mov
add
xchg
jno
pop
adc
dec
sarl
or
mov
je
mov
cltd
daa
lcall
clc
shll
stos
pop
cmp
cltd
dec
pop
repz
and
dec
cmp
int
add
push
cmp
andl
js
outsb
xlat
jge
test
jmp
sbb
sub
xchg
arpl
or
cmp
jae
ja
xchg
out
aaa
adc
pop
repz
mov
jns
in
mov
ror
cmpsl
xor
les
aaa
fsub
rcrb
xchg
shll
lods
and
bound
xchg
cs
push
sub
cmp
jl
int
jmp
mov
push
fwait
xor
mov
out
aaa
xor
insb
cmp
and
scas
mov
push
or
pop
ja
sub
jecxz
pusha
mov
pop
lock
iret
test
xor
jo
fsub
push
inc
hlt
mov
mov
loopne
jecxz
and
push
sti
xchg
aam
outsb
sbb
stos
sbb
push
pmulhw
lds
jp
jle
xchg
mov
es
js
jmp
and
add
push
lock
orl
or
inc
rcr
add
dec
fistps
jb
push
shl
xor
cmpsl
mov
pop
sbb
jns
xor
mov
std
mov
mov
push
push
inc
ret
cmp
or
inc
mov
jbe
inc
mov
jnp
aam
jne
cmp
aas
dec
shlb
pushf
sahf
scas
cmp
cmp
aaa
inc
dec
pop
xlat
fs
pop
mov
jle
movsl
ss
lret
into
sub
fsub
push
mov
mov
xchg
ss
fldl
fucomi
inc
shlb
arpl
lcall
or
insl
mov
fsubrs
js
mov
mov
push
les
adc
popf
mov
insl
xchg
push
jmp
bound
sbb
inc
push
lds
repz
mov
int
lock
dec
jae
in
mov
js
sti
or
dec
push
sub
cmpl
add
pop
cmp
xor
pop
into
or
add
push
xchg
cmp
xchg
push
jge
scas
mov
lods
push
mov
add
push
sub
inc
push
aas
mov
mov
xor
bound
lahf
xor
mov
mov
cmpl
mov
push
lcall
shlb
adc
sub
xchg
inc
loopne
fs
dec
cltd
clc
dec
scas
mov
mov
dec
clc
pusha
sub
xchg
sub
mov
sbb
stc
sbb
inc
pop
mov
cmp
enter
ljmp
mov
sarl
fisubrs
sti
inc
dec
mov
pop
jae
fsubs
pushf
sub
mov
shrd
mov
push
pop
push
sbb
daa
sub
or
std
jo
lcall
cmp
adc
xchg
dec
mov
mov
push
cmp
shll
jle
pop
cmp
inc
xchg
push
loopne
icebp
cmp
lea
test
pop
adc
lcall
cmp
int
test
dec
ficomps
dec
mov
push
inc
adc
dec
and
mov
ljmp
cmp
repz
lock
sbb
inc
jae
aad
imul
imul
xchg
cmp
lret
int
mov
push
imul
call
fidivs
cld
lock
jle
fsubrl
ffree
pop
sbb
sarb
cmpsb
movsl
cmp
sub
gs
jo
push
dec
sub
dec
sbbl
test
dec
dec
dec
adc
and
push
push
idivl
mov
sub
dec
dec
test
jb
and
pop
cs
das
test
jb
and
add
jge
dec
mov
mov
mov
repz
inc
inc
das
gs
les
cmp
push
cltd
dec
test
xchg
clc
jle
or
daa
jmp
mov
cmpsb
mov
jae
sub
insb
mov
call
cmp
dec
loope
xor
pop
rcr
add
mov
les
cmpsl
mov
xchg
cli
imul
jg
mov
call
inc
mov
cmpsl
jp
out
lret
sbb
or
cwtl
push
cmp
inc
cs
scas
mov
or
fsubrl
pop
mov
in
lods
mov
int3
shlb
xchg
xchg
push
inc
jnp
cld
add
lods
inc
add
xor
sbb
push
lds
add
push
aad
sbb
cmpsb
inc
movsb
enter
mov
cwtl
and
shl
add
push
test
xchg
in
out
sbb
int
fcompl
xor
inc
rol
jp
popa
enter
mov
std
dec
lret
xorl
add
or
repz
xchg
imul
push
cmp
mov
push
jb
insb
rorb
or
mov
xchg
hlt
push
dec
sbb
adc
inc
je
mov
cmpsl
mov
fcoms
dec
dec
in
mov
aas
add
ret
xor
mov
insb
jo
push
mov
cli
mov
dec
cmp
iret
div
into
subb
or
sti
imul
inc
test
aas
mov
leave
adc
mov
dec
frstor
add
add
fwait
aad
adc
in
pop
jg
adc
nop
stos
sbb
fcomip
stc
hlt
push
sbb
and
mov
mov
sbb
push
lods
dec
xchg
xor
in
icebp
mov
imul
jne
faddl
movb
nop
pop
mov
out
lock
pop
lock
out
ja
cwtl
sahf
dec
movsb
std
fwait
pop
mov
inc
fnstcw
das
push
sti
shlb
fbld
mov
js
xchg
cmp
jle
hlt
es
int
scas
test
popf
cmpl
test
pushf
dec
lret
pop
add
hlt
loop
adc
sbb
in
push
pop
lods
adc
outsb
lds
clc
adc
hlt
push
xor
or
dec
xor
adc
mov
outsb
pop
pushf
jns
notb
pop
leave
cmp
sub
pop
pop
mov
mull
sarl
sub
add
pop
mov
repz
lods
mov
ja
popf
out
push
add
mov
sbb
cs
inc
or
push
push
jge
jns
in
pushl
dec
add
add
imul
lret
jne
fsubl
mov
inc
jg
dec
clc
test
loope
outsl
sub
cld
mov
unpcklps
outsb
in
mov
lret
call
shll
pop
and
mov
xchg
scas
leave
mov
or
fdivr
adc
int
cmp
and
dec
jb
popw
mov
add
pop
aam
pushf
xor
push
dec
dec
sbb
loop
pop
sub
sbb
dec
add
sbb
inc
sbb
mov
ljmp
jnp
sbbb
inc
xchg
cmpsl
fidivl
shlb
mov
adc
sub
lret
dec
mov
dec
mov
cmovb
sub
jno
insb
ds
xor
adc
sti
add
mov
cmp
and
jne
enter
or
popf
ja
cld
jg
mov
ret
dec
mov
add
xor
movsb
push
mov
cmp
scas
and
pushl
shl
mov
addr16
in
jb
inc
push
cmpsl
ret
xor
scas
jp
fidivrl
in
ljmp
ret
inc
cli
adc
mov
js
es
push
sbb
dec
sub
test
fs
stos
into
sti
cmpsb
cmpsb
in
inc
pop
jbe
les
dec
push
cwtl
push
negl
aas
imul
fsts
mov
test
jmp
xorb
stc
and
rol
and
xor
mov
repz
jge
shlb
jl
xlat
sbb
sti
fwait
daa
mov
pop
or
pop
test
psllw
cmp
mov
loopne
jecxz
adc
jge
pusha
or
jns
jge
lods
pop
rcrb
pop
ret
mov
xlat
xchg
in
xorb
jmp
or
test
mov
clc
out
mov
inc
repnz
incl
xor
rolb
lods
sub
fisubrs
inc
xor
les
xor
subl
cmpsl
jle
and
mov
sbb
mov
mov
push
sbb
in
icebp
aam
add
adc
inc
dec
cmpsb
ss
pop
ss
out
decb
into
cmpsb
cmp
bound
fnstsw
inc
jge
repnz
dec
pop
lahf
lcall
insb
and
iret
mov
xchg
ss
xchg
lcall
dec
xchg
fdivrl
scas
jns
xchg
ficoms
ret
dec
idivb
push
push
dec
mov
xor
push
xor
clc
into
xchg
lahf
pop
adc
fwait
pop
mov
ret
pop
xchg
scas
int
daa
jo
dec
add
dec
bound
dec
xchg
das
test
cmpsl
ljmp
mov
jbe
shlb
not
scas
pop
call
filds
dec
add
xor
xlat
cli
dec
xor
sub
enter
xlat
mov
jp
inc
push
sbb
inc
xchg
sbb
cmp
out
shlb
into
inc
xor
sub
lods
dec
cmp
and
mov
ljmp
out
xlat
in
cmpsl
push
test
pop
xchg
pop
pop
hlt
push
stc
mov
and
push
or
in
push
lds
std
mov
xchg
popa
jl
fdivl
sti
jmp
stos
inc
stos
aas
pop
sbb
es
jno
mov
scas
in
inc
mov
outsb
fnsave
push
loop
jne
ljmp
add
dec
push
mov
lret
push
jmp
jns
pop
lods
roll
or
arpl
cmc
mov
mov
adc
mov
push
sub
fimuls
idiv
xchg
xchg
push
dec
sbb
pop
ljmp
into
pop
lea
sbb
sub
mov
and
push
movsb
pop
xor
stos
mov
mov
mov
in
shl
or
cmp
out
sub
push
fs
lcall
lods
scas
subb
xlat
xorl
pop
lock
int
sub
or
push
stc
and
bound
mov
add
ds
jle
int3
xchg
ljmp
mov
lret
les
aas
xor
popa
or
stos
dec
dec
push
add
mov
dec
ljmp
mov
adc
cmp
push
mov
out
ficoms
sub
std
jle
push
pop
movb
cwtl
out
jne
mov
xchg
sub
int
cmp
jae
jl
mov
adc
bound
jmp
ret
jno
jmp
mov
shll
mov
cmp
lcall
mull
push
fldt
or
or
jg
ficomps
nop
mov
fucomi
sub
rcrb
pop
jmp
punpckldq
lock
iret
pop
lock
or
adc
addr16
pop
mov
mov
cmp
dec
mov
imul
cmp
inc
sbbb
jecxz
add
mov
sbb
stos
cmc
mov
test
nop
fucomip
jle
loope
add
mov
mov
hlt
dec
jb
push
in
je
mov
lds
sub
and
push
outsl
loop
and
call
mov
xor
testl
cmc
cmp
divl
pop
jge
in
sub
dec
jp
mov
cs
jge
sbb
mov
je
repz
mov
fidivrl
pushf
cmp
pop
aad
cmp
xor
pop
nop
aad
sahf
jle
mov
jg
daa
outsl
in
sahf
inc
inc
and
add
call
sti
stos
daa
mov
jns
testl
hlt
adc
aam
mov
pop
sub
xor
push
and
push
ret
sbb
aaa
and
xchg
mov
repz
push
xor
inc
or
fwait
inc
cmp
jo
pop
out
subb
fs
mov
pop
jmp
lret
inc
add
mov
mov
inc
aaa
lods
outsb
cli
jg
and
ret
int3
jbe
stos
xchg
dec
rorl
loop
inc
cmp
imul
or
imul
test
in
xchg
ror
or
andl
inc
xor
lods
sbb
xor
loop
mov
aam
and
sub
sub
loopne
xchg
pop
pop
sub
rorb
out
cmp
push
inc
in
and
or
incb
sub
fdivr
movsl
iret
loopne
cmp
sub
dec
fimull
jae
jns
xchg
aaa
cmp
or
sbb
jl
xor
fcmovnu
push
loopne
imul
movsb
rcrb
mulb
push
adc
test
data16
je
scas
in
lock
fisubrs
adcb
in
mov
jge
js
xor
stc
or
ss
rcrl
shll
adc
dec
adc
add
push
sbbl
push
arpl
add
sbb
or
call
lods
cmpsl
lcall
add
cmp
push
push
mov
dec
push
mov
mov
rorl
jne
in
xor
add
les
aas
jle
out
mov
cli
xor
xchg
or
sbb
dec
sub
sub
fbstp
xchg
hlt
xor
sbb
push
or
in
push
mul
xchg
push
rsqrtps
cwtl
push
cwtl
adc
cli
sub
loopne
mov
cmp
cld
ja
dec
cmp
adc
or
out
or
add
and
out
std
mov
pop
addb
push
mov
pop
fstps
js
test
and
mov
aas
add
into
cmp
xchg
pop
sbb
mov
aaa
push
stc
test
mov
lods
cwtl
cmpsl
test
enter
addr16
test
jl
pop
lret
ljmp
cmp
js
mov
dec
pop
ds
sti
inc
out
nop
out
int
mov
push
or
call
xor
sub
pop
loopne
mov
dec
subb
xchg
aam
jge
push
in
cmp
sub
xchg
lea
sub
add
jg
adc
inc
pop
inc
dec
rcrl
out
pushf
icebp
inc
pop
cmp
clc
xchg
jo
push
adc
lds
adc
enter
mov
xorb
sbb
and
lcall
mov
dec
divb
cmpsb
jg
lods
adc
pusha
out
loop
pop
ret
cmc
push
dec
cmpsb
test
movsb
gs
fwait
ror
adc
into
call
add
xchg
ror
push
ret
in
sbb
enter
adc
xchg
call
mov
and
add
sbb
xchg
gs
je
mov
lock
sub
lds
xor
adc
cmc
and
mov
leave
cld
outsl
jge
aad
or
dec
pop
pop
add
popa
mov
jmp
subb
adc
sahf
mov
push
adc
iret
mov
or
ror
xchg
add
call
adc
cmpb
mov
test
pop
sbb
in
sbb
cs
in
sub
scas
inc
rol
xor
aas
ret
pop
lret
or
and
add
or
adcb
sub
dec
adc
mov
mov
add
fwait
out
and
dec
jne
sbb
pop
pop
jp
mov
jbe
test
les
sbb
or
aad
mov
std
int3
xchg
xor
jp
inc
stos
xchg
sahf
or
scas
ja
mov
dec
stos
sbb
jmp
and
sti
nop
lock
jecxz
add
pop
or
in
adc
adc
into
aaa
xor
iret
and
shl
and
mov
imul
sbb
stos
push
leave
iret
loop
out
test
aam
add
sbb
data16
ljmp
aas
sub
cltd
mov
xchg
fstpt
sub
mov
insb
mov
popa
fsubrs
ret
flds
scas
aad
inc
xor
stos
adc
xlat
xor
imul
cmpsb
sbb
or
mov
push
fidivrl
jns
test
mov
pop
cwtl
inc
push
xor
and
jecxz
je
xchg
lods
inc
jecxz
out
dec
dec
js
mov
rolb
and
jmp
jbe
sub
aam
mov
jecxz
shll
in
add
in
xchg
or
push
lret
and
push
gs
pushf
mov
push
mov
or
jge
cmp
inc
call
xor
adc
das
jg
sub
xor
inc
add
pop
loop
cmpsb
cld
jmp
pop
xchg
jg
jnp
jnp
adc
pop
xchg
mov
mov
enter
nop
nop
cmpsl
outsl
pop
or
je
sub
dec
imul
cmpsl
ds
jecxz
shl
jns
inc
or
mov
inc
add
repnz
ret
jo
cmp
decb
adc
and
lock
push
mov
mov
in
imul
stos
cmp
push
push
cmp
pop
mov
adc
fiadds
cmp
jge
xor
mov
mov
pop
clc
or
pop
cmp
daa
aas
lcall
pop
mov
scas
sbb
xchg
add
inc
fimull
lds
or
movb
inc
jne
xchg
xlat
jle
into
out
ds
pop
nop
scas
icebp
es
xchg
xlat
push
sbb
cmp
mov
xor
pop
sbb
popa
add
movsl
ret
sbb
or
clc
cmc
int
shll
mov
inc
xchg
sub
push
sbb
ret
sbb
nop
adc
mov
cmp
jnp
scas
mov
jnp
add
mov
cmp
stos
sub
sub
cmp
xorb
shrl
mov
xchg
cmovnp
pusha
loop
movsl
pop
cs
mov
cltd
test
loopne
iret
and
mov
cwtl
stos
add
sti
push
jl
adc
ds
cld
insl
and
mov
jns
pop
ja
mov
fldcw
pop
dec
jnp
insl
test
mov
and
pop
mov
cmp
icebp
enter
addr16
pop
shl
sti
faddp
roll
cltd
add
adc
pusha
adc
adc
mov
push
outsb
sbb
xlat
ljmp
mov
clc
push
cmpsb
push
mov
push
adc
mov
sahf
shlb
inc
rolb
jl
mov
xchg
popf
jmp
mov
inc
sbb
outsl
stos
jmp
repnz
imul
xor
xor
dec
or
push
into
mov
bnd
sahf
add
adcb
lock
dec
fnsave
popa
test
add
shl
stc
and
int
dec
icebp
sbb
loopne
daa
nop
mov
push
mov
jns
nop
mov
mov
jbe
jl
add
int
mov
ss
or
out
pushf
dec
testl
sbb
sub
imul
push
aam
lret
jne
fwait
mov
sbb
mov
adc
and
repnz
mov
mov
push
jl
or
xchg
loopne
hlt
js
dec
cmp
jp
mov
fs
ss
push
mov
not
mov
xchg
lock
or
inc
adc
out
fidivs
shl
fisubs
pop
mov
daa
sub
and
rorl
push
xchg
cli
cmp
out
cltd
lcall
fmulp
sti
clc
mov
fidivrl
dec
imul
mov
sti
es
dec
or
test
lods
cmp
popf
test
pop
mov
data16
lret
push
stos
pop
cmpsb
cmovnp
lock
fldt
data16
mov
dec
adc
mov
jns
imul
xchg
or
repz
jo
lock
xlat
aaa
cmc
in
js
fnstcw
aad
xchg
or
push
jge
cmpl
mov
and
out
push
xor
jge
lahf
inc
mov
fildll
mov
xor
addps
and
sbb
ficoml
iret
sbb
cltd
sbb
mov
mov
cmp
scas
lret
stos
das
in
dec
inc
fmul
incb
xorl
ror
inc
or
jge
or
cmp
iret
push
dec
addr16
cmc
and
out
or
lahf
mov
xchg
cltd
sti
pop
inc
mov
ja
cmp
xchg
pop
stos
pop
mov
jne
das
push
dec
dec
in
or
xor
repz
icebp
xchg
mov
mov
mov
mov
adc
hlt
dec
loop
ljmp
imul
or
aam
insb
sub
xchg
add
leave
bound
cmp
push
mov
cmpsb
test
mov
mov
jl
mov
xor
xchg
mov
sbb
aam
lcall
daa
arpl
xchg
jp
nop
pop
mov
xchg
dec
lds
sbb
dec
pop
lcall
or
mov
loopne
inc
out
out
dec
sbb
adc
add
inc
cmpsb
rorb
mov
pop
call
mov
outsb
pop
jnp
hlt
mov
jae
mov
pusha
movsb
inc
xor
and
or
lods
inc
push
in
loope
add
jge
inc
fdivs
test
add
repnz
movsl
mov
popa
cli
cmp
jmp
push
xchg
or
adc
xor
add
xchg
stos
mov
inc
movsb
je
pop
aaa
add
push
mov
push
xlat
or
test
sub
mov
dec
pop
pop
cmp
mov
xor
out
es
leave
imul
mov
or
cmp
pop
fisubs
mov
and
arpl
sbb
mov
outsb
les
sarl
jo
ljmp
ljmp
dec
scas
fsubs
and
in
inc
test
in
cltd
mov
dec
popa
adc
dec
sahf
leave
out
lret
sti
loope
loopne
cmp
ja
fmul
sub
jno
mov
mov
xchg
mov
test
pop
xor
fadds
ret
pop
mov
stc
and
jb
mov
and
inc
cmpb
fs
xchg
and
mov
data16
nop
outsl
sahf
sbb
pop
or
ret
cmc
test
call
push
and
inc
lock
jo
jl
xchg
ret
cmpsb
roll
sti
push
or
pusha
sub
dec
inc
mov
mov
push
and
faddl
sub
femms
inc
movsl
aas
pop
jge
xlat
mov
iret
sbb
and
mov
jbe
sub
iret
jns
in
sub
xor
js
mov
lret
cmc
jle
test
xor
push
rcr
out
pop
scas
fdivl
sbb
mov
cmp
push
fs
shrb
enter
pop
lret
xor
stc
xor
mov
dec
push
sbb
jecxz
jo
adc
or
push
int3
ds
or
mov
iret
jecxz
or
clc
fsubp
mov
jo
sahf
inc
adc
in
mov
repnz
sub
mov
ja
fisttpl
mov
xchg
and
int
sub
out
leave
inc
fbstp
movsl
sub
jbe
cmp
lret
je
sub
xor
mov
push
push
adc
push
mov
pop
dec
ror
jecxz
fimull
cmp
or
mov
int
cmp
xor
cmp
leave
push
mov
repz
push
clc
xlat
dec
mov
mov
sbb
popf
in
repnz
adc
inc
fisubrl
jno
shr
sbb
cmp
or
jl
cwtl
outsb
movsl
pop
xor
xlat
lods
mov
das
mov
cmp
dec
insl
inc
mov
bound
sbb
out
pop
and
daa
sbb
and
pop
adcl
dec
andl
dec
push
scas
fs
xor
xchg
dec
push
adc
icebp
push
gs
lret
leave
mov
sub
push
outsl
mov
shlb
loopne
movsb
into
shlb
shll
xor
mov
push
mov
mov
pushf
mov
mov
repnz
push
cmc
adcb
test
rolb
in
decl
pop
add
stos
push
dec
in
mov
xor
mov
or
loop
jecxz
add
divl
cmp
pop
fisttps
pop
push
pop
xchg
repz
xor
push
dec
xchg
dec
mov
jmp
repnz
push
in
jp
or
push
mov
imul
push
jp
mov
cmpl
lret
jne
or
jmp
divl
ret
cwtl
sub
aaa
jnp
mov
scas
and
xchg
loop
mov
dec
push
inc
mov
rolb
cli
arpl
pop
sub
pop
fs
fdivl
dec
loop
inc
and
in
popf
sub
repz
jp
pop
lock
loopne
fnstcw
lock
fwait
cmpl
scas
mov
push
xchg
into
xchg
aad
fcompl
inc
scas
mov
cmp
cmp
ficoms
push
mov
push
mov
out
leave
pop
sbb
push
xor
mov
mov
mov
pop
mov
xchg
leave
test
cltd
cmp
dec
in
push
in
xchg
pop
lahf
aad
call
hlt
mov
out
loope
fisubl
push
dec
gs
push
aad
cmpsb
es
sub
sub
je
out
sub
mov
pop
test
sub
insl
bound
push
mov
call
inc
xor
aam
inc
push
fidivs
adc
mov
jl
out
jno
pop
lret
xchg
jge
xchg
aam
sub
ret
and
rdtsc
xchg
movsl
imul
je
cld
enter
mov
cmpsl
lods
repnz
sub
sbb
in
nop
das
jle
pushl
fistpll
or
cmp
bound
mov
stc
js
aas
fstpt
adc
out
push
ss
es
fistps
popa
cld
imul
sbb
scas
cmc
cld
and
fistpll
jo
test
in
sbb
xchg
jo
xor
dec
sbb
xor
lock
push
push
in
shr
movsb
mov
imul
xchg
clc
inc
jno
rcll
jne
pop
dec
mov
mov
jg
pop
clc
icebp
in
std
or
push
loopne
in
jle
xor
out
pop
mov
xchg
in
add
fwait
xor
jp
mov
addr16
je
in
jae
das
aam
dec
jl
neg
xchg
js
mov
clc
insl
fimull
sub
test
mov
mov
loopne
mov
into
add
pushf
pop
loope
and
push
sub
sub
and
or
daa
jge
stos
call
jo
mov
sahf
inc
or
xchg
ds
cmp
cmp
xor
inc
or
jno
and
or
xor
xchg
cld
jge
mov
inc
and
js
adc
inc
pop
or
pop
sub
push
arpl
mov
jge
and
jmp
pop
fldcw
adc
test
dec
push
mov
jmp
cmp
callw
jno
adc
adc
icebp
xlat
or
jbe
sbb
mov
or
rorb
mov
push
test
mov
push
clc
ss
out
jae
jge
push
sbb
add
push
cs
daa
ljmp
cli
mov
adc
stos
mov
mov
mov
sub
xchg
repz
fldt
ret
and
lret
movsl
rcrl
enter
ds
push
fwait
je
fisttps
loop
shufps
lods
adc
mov
test
stc
adc
cmc
dec
inc
dec
jbe
jmp
or
popa
imul
outsb
sbb
push
add
jmp
inc
cmp
fbld
and
hlt
lret
ja
enter
mov
inc
xor
inc
pop
gs
jbe
lcall
ljmp
mov
jo
cmpsb
add
and
mov
pop
dec
aad
mov
pop
lret
push
maskmovq
mull
lahf
roll
lahf
cwtl
and
ficomps
cmpsl
inc
loop
out
lahf
mov
sbbl
mov
mov
repz
pop
jg
mov
xor
sub
nop
pop
dec
cltd
sbb
pop
loope
or
jle
push
xor
mov
inc
int3
push
mov
mov
inc
das
sarl
jecxz
inc
rolb
leave
push
mov
mov
stc
lods
cmpsw
mov
test
or
jge
out
sub
xchg
jg
cmp
jmp
js
fldt
pop
dec
sub
mov
pop
dec
aas
xchg
stc
xchg
idivb
mov
movsb
ljmp
adc
pop
and
mov
add
dec
outsb
movsb
aas
mov
add
lods
daa
mov
pop
cmpsb
jb
xchg
inc
notb
push
cltd
mov
mov
sbb
or
sbb
rolb
aam
push
repz
divb
fcompl
mov
xchg
insb
lods
adc
cmpsb
decb
daa
pushf
pop
js
popf
lcall
inc
andl
repnz
push
push
pmuludq
enter
or
lahf
testl
ret
adc
std
lods
push
notb
out
es
pushf
dec
add
mov
adc
ret
scas
leave
rorb
shr
aam
lret
push
orl
pop
mov
jo
adc
or
call
stc
aam
testb
adc
int
mov
adc
sahf
fwait
scas
sbb
add
push
xchg
mov
adc
inc
sbb
pminub
ljmp
pop
inc
adc
daa
or
add
cld
in
int
and
iret
into
adc
js
sub
scas
or
cmpsl
and
test
add
cmp
dec
mov
bound
lahf
loop
jns
rorb
lods
iret
shll
aam
dec
rclb
loop
or
in
pop
adc
mov
inc
xor
and
jae
enter
loop
mov
iret
jne
xlat
sbb
dec
cmp
jns
xchg
jmp
adc
xor
movsb
out
push
arpl
insl
ret
lods
subb
pop
inc
aas
shlb
imul
fists
rolb
stc
imul
jbe
out
or
mov
in
imull
xchg
sub
in
mov
add
loope
loop
fstpt
and
inc
daa
roll
cmpsl
mov
sbb
cmp
ja
jae
repz
jl
jmp
xor
sub
push
sub
loop
push
stos
jo
mov
int3
mov
jns
pop
int3
shrb
ffree
in
imulb
mov
mov
leave
fs
jp
repnz
add
sahf
and
xchg
pop
cmpsl
lods
enter
pusha
fwait
jl
sbb
lds
inc
jl
scas
lret
notb
xchg
sbb
ja
xchg
les
xor
pop
lods
lcall
add
test
push
pop
sbb
push
adc
loope
fs
cmp
sub
inc
cmp
mov
outsb
not
sub
jae
xor
data16
lret
jge,pn
ret
cmp
cmp
fisttps
push
sbb
jg
jae
je
xor
das
frstor
out
sub
xchg
mov
iret
insb
mov
ret
pop
cli
pushf
ds
call
shll
data16
inc
jno
xchg
jnp
repz
dec
adc
dec
mov
ja
xchg
cmp
add
pop
push
cmpsb
push
or
fnstenv
mov
dec
jle
or
das
js
imulb
cmpsl
sti
fistpll
pop
fs
and
ret
es
cmp
mov
out
into
xchg
pop
stc
imul
lret
insl
mov
dec
xor
inc
jge
lods
mov
dec
pop
push
fstl
push
mov
sub
bound
mov
popf
mov
ljmp
mov
rcl
mov
sub
xor
sbb
inc
nop
enter
sarl
add
pop
sahf
pusha
sbb
mov
add
loopne
sub
xor
pushf
cmp
lcall
test
inc
and
aas
mov
rcr
dec
jge
ret
ljmp
mov
sbb
lock
out
sub
aam
xlat
bound
pop
mov
xor
xchg
in
cmp
cmpsb
fs
jne
imul
push
cli
add
icebp
int3
dec
fs
or
into
shrb
fistpl
std
xchg
and
cmp
inc
mov
push
lods
pop
shr
fndisi(8087
in
xlat
mov
roll
sbbb
and
inc
call
ret
outsl
adc
sbb
or
popa
iret
loop
mov
int3
call
inc
sub
jne
rolb
cmp
enter
rcrl
push
xor
sahf
push
cmpsl
data16
test
inc
add
out
into
and
arpl
lret
jl
inc
and
jmp
fcmovbe
aaa
sub
push
mov
xor
aas
cltd
cld
dec
inc
stos
rorl
sub
hlt
dec
adc
add
push
dec
div
jnp
cmp
sub
and
lahf
gs
dec
push
into
dec
lret
inc
faddl
movsb
inc
cmpsb
dec
pop
xchg
pop
xor
adc
dec
jge
jle
xlat
je
dec
pop
dec
pop
fisttpll
push
movsb
mov
inc
in
add
jb
movsb
cli
lret
loopne
pop
bound
int3
enter
xlat
movsl
jne
iret
xor
mov
pusha
dec
in
stos
out
out
negw
sbb
mov
or
call
sub
in
aaa
mov
push
mov
xor
pushf
sti
inc
lret
fsts
cmp
mov
out
sub
ret
sub
cmpsb
adc
xchg
mov
mov
push
fiaddl
aaa
xchg
int3
fcmovne
mov
inc
xor
dec
add
jnp
out
jge
mov
outsl
xchg
outsl
xchg
inc
clc
lock
xchg
adc
popa
pop
call
jno
push
rol
jp
aas
mov
sbb
je
in
sub
mov
pop
add
lret
sbbb
xchg
adc
pop
xor
subl
js
xor
xchg
push
int3
xchg
jg
and
je
or
or
rol
lods
pop
xchg
mov
pop
adc
sub
hlt
stos
out
jmp
sbb
inc
jbe
lods
mov
insl
xchg
sub
imulb
mov
fsubl
mov
pushf
push
xor
fisubrl
stos
sub
cmp
xlat
cmpsb
sbbl
ffreep
in
jge
push
outsb
add
ror
mov
xlat
pop
push
and
jl
or
add
cli
add
outsl
imull
cli
cmp
inc
mov
ret
int3
lahf
and
xchg
hlt
cmp
jb
test
add
cmpsb
or
push
arpl
xchg
sbb
pop
test
imul
cmp
push
jge
inc
leave
pop
xor
inc
aaa
loope
pop
xor
and
xchg
test
mov
jb
stos
cld
push
and
scas
push
sbb
add
xor
xchg
adc
hlt
xor
mov
mov
adc
jo
fwait
nop
adc
jge
pop
lods
mov
rolb
in
sarl
jle
and
xor
mov
je
fdivs
in
or
cwtl
dec
rcr
adc
cmc
sbb
cli
adc
mulb
fsqrt
inc
jb
jmp
das
imul
loope
aas
mov
sub
lret
adc
pusha
sbb
lea
mov
inc
hlt
mov
pop
insl
js
cmp
adc
imul
or
xchg
shll
push
cmp
adcb
lds
shll
int3
in
jne
hlt
dec
xchg
test
inc
sti
dec
pop
popa
or
pop
cmpsb
pop
fs
popa
negb
loope
cmpsl
cmp
mov
test
and
jmp
stos
add
dec
out
lcall
ja
hlt
mov
xor
in
xchg
pop
xchg
fs
mov
pop
sub
pop
gs
aad
sti
js
shr
cld
iret
lahf
mov
mov
mov
jb
or
xchg
fs
es
sub
and
pop
into
out
inc
xchg
push
jo
shl
mov
inc
mov
or
dec
push
xchg
xor
int3
cltd
jle
aam
adc
into
sub
xor
and
lret
fistps
test
hlt
push
jl
leave
dec
and
lret
xchg
out
outsl
hlt
dec
fnsave
sub
mov
dec
ret
dec
cmc
mov
inc
inc
ljmp
cmp
test
std
repnz
or
mov
pop
pop
pop
jecxz
inc
out
cmp
fidivrs
fistpll
xor
xor
test
jg
test
outsb
push
mov
daa
data16
sbb
mov
xchg
cmovne
outsb
js
pop
repnz
add
push
pusha
mov
testb
mov
lods
out
outsl
shrb
jo
adc
mov
push
jg
std
cmc
adc
jge
dec
call
push
out
mov
cs
xchg
out
decb
pop
pop
out
mov
add
cmpsl
add
jo
pop
jno
adc
stos
pop
sub
mov
xor
push
jl
cmp
repnz
mov
sub
lahf
out
sahf
lret
dec
sahf
ret
cmp
loop
jae
adc
divl
xor
into
into
dec
repnz
adc
dec
and
push
xchg
shll
xchg
inc
pusha
in
xchg
into
in
loope
push
sti
mov
idivl
sahf
cwtl
or
mov
in
hlt
sub
rcll
sbb
add
sub
cmp
fldt
leave
lock
cmp
subl
bound
jns
loope
out
mov
adc
aam
andl
adc
inc
and
xchg
int
jg
dec
push
inc
adc
dec
inc
ret
cmp
shlb
inc
das
jp
jb
mov
sbb
ja
outsl
aam
mov
xchg
data16
imul
mov
sub
xchg
bound
cmpsb
js
testb
cmc
jmp
pop
fcoml
movsl
scas
repz
ljmp
mull
stc
dec
mov
inc
scas
fidivrl
dec
cmpsb
or
out
cmp
in
outsl
adc
dec
mul
add
and
mov
sarl
icebp
enter
addr16
leave
dec
xchg
lcall
mov
mov
mov
inc
jl
and
xchg
fwait
mov
out
fisttps
fimull
jp
das
xor
mov
push
inc
daa
inc
mov
dec
sbb
mov
dec
add
jecxz
jno
cmp
xor
outsl
popa
fs
std
ja
dec
push
std
dec
fbstp
std
or
push
push
xlat
adc
xchg
mov
xchg
je
push
or
mov
fistpll
dec
dec
pushf
add
test
int
or
sub
sbb
lds
pop
jecxz
mov
jns
push
cmp
xchg
sbb
pop
mov
popl
cmp
and
lret
mov
std
mov
mov
jae
pop
adc
push
hlt
pop
dec
push
sbb
shlb
push
xchg
popf
add
dec
rcr
or
outsb
test
clc
xlat
cld
push
fmull
push
aaa
inc
out
decb
enter
inc
pop
jne
pop
enter
fisubl
enter
rcr
inc
subl
jo
popf
mov
shrl
and
push
stos
pop
lret
loopne
outsl
fldenv
lret
insl
cmp
inc
ja
les
icebp
mov
xchg
imul
or
into
out
sub
movl
pop
add
mov
sub
in
push
pop
xchg
cld
jl
xchg
sti
in
add
sarl
gs
ljmp
add
or
or
mov
in
icebp
mov
imul
adc
pop
aas
test
gs
fstps
aas
adcb
and
sbb
lock
cwtl
cmp
jmp
aaa
lret
mov
cli
xchg
add
xchg
push
mov
dec
lock
sahf
push
fstpl
enter
mov
js
into
ds
sbb
adc
loop
add
mov
sub
mov
mov
js
lret
push
fidivs
sub
mov
add
ret
test
push
call
jmp
lret
bound
rorb
test
xor
xchg
lods
cltd
xchg
sti
ljmp
pusha
es
hlt
in
jp
in
and
pop
stos
jbe
or
mov
jae
pop
mov
movsl
aaa
mov
aas
test
sub
pop
or
ja
mov
sar
sbb
sbb
dec
push
sub
shrb
popf
add
repz
daa
iret
jp
in
jno
lods
jne
adc
xorb
jp
xchg
mov
push
outsb
lcall
adc
add
nop
out
push
inc
jmp
out
out
cmc
fdivr
icebp
ja
rol
sbb
xchg
in
cld
in
jae
mov
xorb
lea
mov
cmp
xor
fcoms
out
jno
std
push
hlt
stos
add
dec
leave
sahf
inc
mov
gs
sub
int3
roll
ss
jg
add
clc
loope
outsl
mov
leave
sbb
or
frstor
aaa
adc
ss
movsb
int3
jmp
pop
or
pop
or
and
push
lea
sub
ja
imul
leave
sub
out
lret
adc
pop
cltd
cld
and
pushf
mov
jnp
pusha
loop
lods
xchg
push
mov
xor
xchg
adc
popa
outsl
cmp
mov
movsl
cmp
scas
addb
pop
sub
movups
sub
sub
ljmp
shr
lret
and
inc
std
mov
test
dec
jmp
cmpl
xor
xchg
mov
add
jb
xchg
sub
outsl
mov
adc
pop
ljmp
nop
lods
dec
ljmp
mov
and
outsl
sbb
xchg
out
adc
cwtl
jp
out
stos
mov
stc
sti
mov
das
and
iret
inc
lods
andl
push
pushf
dec
les
and
outsb
ljmp
fs
jle
lods
and
enter
lods
and
add
add
mov
std
ss
inc
push
faddl
js
sbb
inc
adc
dec
dec
xchg
mov
mov
push
push
bound
mov
and
add
inc
std
loopne
or
fidivs
add
mov
mull
mov
jno
jo
jecxz
nop
jecxz
out
cmpsb
scas
dec
rorb
lods
jae
lahf
xchg
aaa
or
popf
fsubrl
push
mov
mov
mov
mov
cltd
push
cs
pop
push
stos
enter
jle
mov
inc
or
icebp
addr16
outsb
stos
mov
cltd
or
xlat
enter
and
into
xor
dec
mov
xchg
fcomip
imul
jb
cmpsb
mov
pop
sub
push
inc
adc
std
jo
jle
xchg
aam
mov
cwtl
orb
pushf
in
push
daa
loope
mov
cmp
add
adc
jle
in
inc
mov
mov
aad
or
stc
in
fsts
ds
inc
ret
mov
jo
inc
daa
or
out
lods
cmpsb
hlt
add
and
lcall
fcmovne
test
cwtl
dec
or
cmp
add
xchg
inc
rcrb
dec
test
pop
aaa
xor
in
and
mov
inc
mov
pop
shlb
xor
aam
stc
mov
dec
cli
jl,pt
mov
push
mov
mov
insl
fmul
popa
das
testl
aad
test
and
cmp
cs
cmp
imul
xor
scas
lock
sbb
out
dec
hlt
jbe
mov
call
pop
push
mov
lea
iret
xor
mov
or
ror
insb
lcall
jge
int3
cmp
push
out
inc
push
cli
cmpsb
stos
dec
in
sub
sub
xchg
inc
out
mov
jecxz
lahf
sub
orl
xchg
pop
shll
add
outsb
aam
xor
hlt
shll
mov
and
mov
jbe
les
add
daa
stos
sub
jl
cmpsl
mov
scas
popa
sbb
dec
movsb
xor
fidivrs
push
gs
pop
outsb
ret
rol
jo
jno
mov
jno
cmp
fsub
aad
pop
mov
inc
in
lcall
add
dec
imul
call
mov
xor
sub
pop
lahf
repnz
sub
push
leave
data16
scas
mov
xor
jnp
sub
mov
push
push
sarl
aam
cli
xchg
push
cmpsl
pushf
std
std
in
mov
dec
cmp
ja
ret
lcall
ljmp
and
aaa
fwait
mov
ret
adc
jne
ret
cltd
jg
dec
cmp
sbb
das
imul
mov
out
xchg
in
test
insl
out
sub
lods
insb
icebp
scas
adc
enter
xor
sub
inc
mov
pushf
pop
cmp
rcrb
rorb
inc
aas
in
fcomps
xor
lcall
test
jae
mov
pusha
cmpb
sarb
cmp
out
lods
dec
dec
mov
lock
lret
push
orl
test
pop
in
cmp
add
dec
fdivl
rclb
std
mov
and
test
arpl
call
sti
adc
sub
xchg
ret
fbstp
mov
fcom
in
sub
xchg
mov
lret
ljmp
into
and
ss
mov
stos
push
cmp
xchg
inc
repnz
rolb
pop
xor
mov
adc
cld
jbe
mov
adc
ret
out
and
sbb
push
lock
xchg
cmp
dec
push
dec
cmp
cmp
daa
pop
mov
jns
fldcw
mov
adcl
mov
mov
arpl
jno
jne
dec
mov
repz
shlb
in
mov
int3
fisttps
push
push
pop
mov
dec
lea
pop
pop
inc
fldt
cmp
gs
cmp
int
fldl
fdivl
pop
push
test
cmp
dec
adc
aaa
xchg
jae
pop
out
cli
stos
rclb
cmc
loop
ret
push
pop
iret
pop
mov
dec
lods
cmp
jo
icebp
xchg
and
inc
or
mov
shll
push
filds
add
mov
cmp
outsb
repnz
push
mov
sub
aad
imul
gs
popf
aaa
shll
sbb
push
movsb
cwtl
pop
jns
inc
lods
dec
jecxz
icebp
fildl
push
cwtl
popa
outsl
pop
je
sbb
mov
imul
loopne
syscall
bound
sub
sub
push
dec
in
das
and
mov
mov
das
xchg
xchg
mov
and
mov
push
jae
ljmp
push
or
sub
push
pusha
xor
test
out
and
push
pop
sbb
out
add
jge
inc
and
xor
pop
jne
cmc
push
sbb
sub
test
inc
rcrb
xor
lds
int
cld
sbb
push
stos
leave
repz
xchg
pop
add
stc
xchg
popa
lock
and
lods
dec
sub
xchg
mov
test
test
sbb
subl
push
push
aad
pusha
lods
lcall
outsl
lea
lahf
lret
mov
push
popf
cmp
mov
inc
sar
xchg
adc
clc
insb
push
lods
in
mov
imul
ss
xchg
mov
call
mov
pop
pusha
shrl
pop
addr16
mov
insl
fistps
aad
mov
std
push
mov
out
mov
cld
in
das
dec
sbb
outsl
movsl
ss
pop
pop
or
xor
lahf
and
adc
sub
sub
hlt
fdivp
jl
mov
or
xlat
push
dec
mov
mov
xor
adc
sub
je
inc
pop
lret
mov
push
ret
fcompp
cmp
pop
scas
jle
pop
dec
hlt
mul
jbe
jnp
add
int
dec
mov
ret
sarb
int3
push
addl
xchg
or
int
pop
inc
pushf
lods
fcoms
lcall
aam
cli
int
xchg
out
and
dec
aas
pop
mov
cli
jle
lds
hlt
idiv
out
call
out
daa
rcrb
sbb
rcl
bound
addr16
cmp
pop
sbb
xchg
arpl
fwait
xchg
cmp
adc
enter
lret
mov
imul
int
ret
test
stc
sub
xor
push
test
popf
clc
ficompl
pusha
les
push
xor
cld
jecxz
or
pop
test
and
add
adc
xchg
loope
ret
lcall
jg
cmp
aas
in
adc
sub
sahf
cmp
lcall
lret
insb
xchg
xchg
jp
cmp
cmp
dec
mov
js
jnp
or
dec
sar
aam
pop
add
pop
in
pusha
sub
ljmp
and
ja
push
shl
in
push
mov
sahf
test
shl
inc
lods
sub
and
mov
cmp
dec
sub
and
data16
inc
sarl
iret
fstpl
sahf
cmpsb
jb
inc
cmpsl
dec
mov
pop
adc
shll
ret
cmc
lret
xchg
fidivrs
jmp
mov
push
rcr
mov
push
pop
leave
push
daa
pop
enter
pop
cmp
xchg
fwait
jae
mov
scas
or
sub
mov
mov
inc
jecxz
xor
pop
jecxz
xor
push
mov
add
jp
fists
subps
shrb
scas
xchg
les
adc
shll
int
jbe
add
in
mov
jg
hlt
es
and
mov
out
xchg
orl
imul
je
mov
xchg
mov
xorb
mov
or
adc
test
mov
jno
ret
sub
jne
out
mov
ljmp
and
ficoml
notb
ss
sub
scas
adc
pop
imul
push
test
xor
sbb
mov
xchg
test
adc
bound
ja
pop
jge
inc
sub
adc
repz
imul
je
jecxz
xor
push
fwait
cmp
add
adc
inc
xchg
fnsave
pop
lds
add
mov
fidivrl
xchg
je
pop
sub
pop
lea
ret
push
lods
shrb
in
call
xor
pop
das
inc
dec
sub
or
mov
in
outsl
xchg
push
push
bound
cmc
push
int3
mov
cmp
pop
push
rorl
jns
ret
dec
rcr
sub
rcll
rorb
cmpsl
sahf
xor
inc
lods
enter
dec
out
cmp
lahf
push
shrl
ljmp
sub
loop
daa
addr16
cmpsl
lea
sub
cmp
shlb
fstl
push
loop
hlt
dec
mov
adcl
addl
cmp
jge
and
fs
popf
sbb
stc
mov
jp
andl
jb
nop
add
es
pusha
mov
js
mov
pop
sbb
lret
jmp
addr16
arpl
fsubrs
jb
stos
and
mov
mov
inc
pop
mov
xlat
bound
mov
sbb
arpl
xor
jle
icebp
adc
ret
popf
push
jbe
sti
jge
xchg
addr16
aas
mov
sub
cwtl
jge
repz
cmp
cld
mov
or
or
ror
mov
push
lds
cltd
sbb
enter
popa
sbb
cmp
shr
stc
sti
adcl
jno
inc
enter
xchg
les
repz
sbb
jmp
add
mov
cwtl
incl
test
inc
aas
or
adc
xchg
push
xchg
in
push
and
je
mov
insl
arpl
push
sub
mov
std
push
pusha
dec
addr16
addl
rorl
aam
mov
out
or
xchg
test
ja
call
jbe
outsl
mov
stos
das
movsl
int3
pop
push
loope
push
scas
sbbb
push
push
popf
add
push
out
lret
and
scas
daa
nop
push
mov
cltd
xlat
jg
inc
sbb
je
lds
cmpsb
pop
enter
cmp
mov
js
push
aas
icebp
rcrl
jmp
fwait
out
add
adcl
call
rol
mov
loop
cmp
push
mov
sub
xchg
shll
cli
jge
aaa
cmp
clc
and
ds
shlb
std
loope
push
ss
in
dec
test
jo
lcall
fsubs
pushf
mov
xor
les
adcl
jb
movsl
inc
jo
sti
sub
sbb
adc
mov
mov
sbb
sub
lods
push
inc
pop
lock
adc
adcl
push
aas
cltd
and
in
jbe
xchg
xchg
es
popa
push
or
outsl
popf
jmp
sub
cmp
lock
push
shll
xchg
sub
dec
cmpsl
rorb
shrb
data16
cmp
sahf
or
fistl
pop
in
loopne
mov
in
cmp
inc
dec
mov
fcompl
cwtl
lods
lods
pop
sahf
ss
and
mov
sbb
es
jno
addr16
js
mov
jg
ret
and
dec
inc
out
jb
sub
and
scas
cwtl
push
ja
fimuls
pusha
rorb
shll
fildl
mov
cmp
jae
stc
inc
or
mov
add
repz
ficoms
xlat
les
pop
arpl
inc
fwait
pop
fistps
hlt
aad
jns
or
lods
lcall
cmp
movsl
test
push
lret
mov
aad
adc
lahf
push
rorb
push
mov
inc
jecxz,pn
enter
mov
xlat
xlat
lret
test
xchg
dec
int3
or
pusha
xor
or
add
scas
outsb
xchg
xor
sub
ror
pop
sub
lods
jp
mov
repnz
loop
jge
pop
cld
imul
pop
stos
cli
adc
sahf
in
xchg
xchg
int3
xorl
out
cmp
push
fistpl
adc
inc
in
int
sbb
out
dec
mov
push
dec
dec
sub
scas
shrl
inc
pop
xchg
push
mov
insl
shrl
pop
pop
pop
inc
adcb
loop
add
xor
insb
inc
cmpsl
xor
mov
xor
cli
xchg
adc
cmp
fildl
pop
mov
adc
addr16
dec
cmp
arpl
sbb
cld
enterw
add
loop
insl
sub
sub
orl
lods
sub
and
arpl
push
mov
test
pop
adc
pop
dec
sub
or
pop
or
lret
jb
test
aam
js
fwait
push
and
mov
dec
scas
ret
sti
imul
add
pop
dec
out
jecxz
iret
cltd
dec
mov
shll
aas
cmp
clc
subb
lret
mov
sti
lock
subl
sahf
xlat
and
pop
outsl
push
mov
repz
and
mov
mov
lret
sbb
ja
cmc
movsl
mov
jbe
ss
pop
dec
xchg
jmp
lock
xchg
mov
cmpb
scas
in
mov
in
jg
mov
nop
push
shll
or
lcall
lret
mov
loopne
daa
lahf
or
lods
sbb
pop
xchg
jl
test
repz
ljmp
adc
cmp
stc
jae
daa
ds
std
inc
xchg
push
and
hlt
in
sub
sub
cs
or
lods
push
movsl
mov
and
int3
fdivrs
ret
in
das
push
shlb
xor
lea
pop
fwait
out
inc
lods
cmp
add
ss
lret
pop
jne
jb
xorl
aas
or
and
inc
sub
aaa
pop
pop
sub
mov
sbb
pop
ret
sub
scas
sub
or
dec
stos
pop
loope
mov
jg
sub
iret
and
and
mov
cli
mov
bextr
push
dec
add
int
mov
cmpsb
std
das
add
testb
push
jo
ror
stos
cli
inc
mov
sub
add
cwtl
xchg
ret
and
jge
add
push
dec
test
inc
popf
ret
lahf
test
xchg
jp
insl
push
pop
into
pop
imul
pop
push
cmpsb
and
cmp
shlb
jmp
hlt
cmp
fcmovbe
adc
arpl
cmpsb
loop
lock
out
mov
sub
iret
mov
pop
push
into
or
repnz
adc
bnd
adc
adc
lahf
mov
sbb
leave
push
jnp
and
mov
cmpsb
pop
dec
ffree
pop
jns
add
fiaddl
pop
rcr
scas
dec
jo
jl
sbb
add
jp
xchg
fs
lahf
cld
sub
js
dec
sbb
jecxz
fwait
and
inc
scas
push
fisubrs
jae
leave
popa
int
push
adc
xor
negb
repz
and
lds
fdivrs
clc
dec
push
xor
jp
mov
adcl
clc
outsl
dec
in
aaa
xor
call
or
daa
fldenv
xor
inc
push
cmpsb
not
sub
adc
jo
cmpb
test
mov
lahf
jg
aas
mov
and
maskmovq
divl
pop
bound
xor
subb
mov
jno
push
in
xor
jge
push
adc
push
movsl
out
sahf
enter
xor
mov
ja
stos
outsl
pop
cmpsl
push
test
pop
adc
sub
lea
fisttpll
jmp
lret
push
sbb
push
int
pop
movsb
fsubrl
sub
in
popf
inc
dec
mov
inc
add
dec
mov
call
cs
fsubp
fs
mov
mov
lods
and
sub
dec
out
push
sbb
leavew
xchg
ja
mov
pushl
cli
pop
xchg
inc
cmpsl
mov
aaa
imul
cmc
outsb
dec
inc
push
in
js
enter
test
int
lret
mov
xchg
sub
add
mov
fistpl
mov
dec
push
add
and
aas
movsl
jno
jle
pop
and
pop
sti
stc
notl
fcmovnb
lock
rorb
jle
fstl
fisubrs
cmp
stos
dec
jae
clc
inc
idiv
lds
daa
ss
dec
aad
jb
outsl
dec
les
movsb
cli
or
popa
xchg
or
ds
pop
stc
sbb
test
test
pop
lods
dec
mov
lret
imul
mov
cld
push
mov
xchg
aaa
xor
pusha
jge
orb
in
loope
arpl
shlb
xchg
mov
sbb
xor
aaa
cmp
outsb
and
add
dec
andl
cltd
or
inc
loop
clc
push
jo
add
stos
fndisi(8087
faddl
fsubl
inc
dec
imul
pop
jp
xchg
fs
pusha
adc
stos
push
call
rclb
sbb
or
jg
dec
cmpsl
adcl
xchg
jbe
gs
lret
pop
mov
and
or
aad
daa
adc
enter
addr16
les
push
lea
sbb
push
in
rcll
sub
sti
mov
jne
jne
add
test
mov
dec
pop
pusha
cmp
jg
aas
mov
mov
sbb
xor
sbb
repz
js
cltd
pop
and
push
pop
mov
push
mov
mov
mov
jle
push
in
sub
movb
fdivs
xchg
mov
into
jecxz
test
inc
jae
push
push
mov
cmc
mov
cld
sti
push
lea
mov
icebp
mov
mov
aad
dec
inc
iret
jmp
lcall
lock
push
fimuls
les
or
dec
push
inc
mov
mov
add
sub
arpl
cmp
add
out
sbb
movsl
arpl
fidivrl
cmc
mov
mov
pop
sahf
mov
out
cmp
and
scas
inc
xor
mov
push
mov
mov
test
cld
in
loopne
mov
xchg
push
nop
adc
push
or
sub
add
cwtl
data16
sbb
jge
adc
out
sbb
lds
xor
and
sahf
lcall
int3
push
hlt
or
mov
in
pop
adc
dec
mov
outsb
jg
in
in
and
push
mov
test
sbb
jp
jno
dec
jle
lock
add
test
cmp
fdivrl
dec
xor
dec
mov
sahf
test
xchg
cmp
popf
push
xor
les
inc
bound
test
test
out
pop
out
jl
loop
pop
or
dec
and
dec
sub
shlb
into
les
leave
les
enter
cld
pushf
fnstenv
lcall
sub
lods
pop
inc
xchg
int3
dec
pop
sbb
pop
shl
sbb
push
or
push
cld
mov
aam
sbb
push
movsb
mov
test
jns
sub
pop
or
xchg
mov
cmpl
mov
add
mov
jl
hlt
shr
dec
push
and
jb
jb
or
pop
mov
cmc
pusha
mov
pop
mov
adc
ss
je
fnstenv
pop
fwait
sbb
xor
adc
es
xchg
xchg
sahf
sbb
push
subb
pop
mov
jne
aaa
inc
je
mov
push
ja
dec
pop
movsb
mov
js
pop
push
mov
jns
add
inc
dec
inc
xor
icebp
popa
in
mov
push
jle
int3
dec
outsb
cmp
lea
add
stos
or
mov
inc
mov
lods
mov
loop
leave
rolb
mov
nop
loopne
adc
notl
pusha
add
xchg
mov
lods
cmc
fdiv
sbb
and
imulb
lret
push
sbb
insl
push
in
fisubs
xor
bnd
mov
test
mov
sub
fdivs
and
out
pop
and
xchg
int
and
mov
lcall
lods
sub
mov
pop
stos
add
test
int3
shll
adc
fcoms
or
insb
aad
or
add
and
ret
scas
test
sbb
pop
lcall
cmc
pop
mov
fcomip
sbb
addb
mov
inc
dec
lods
rcrl
xchg
or
push
clc
and
arpl
sbb
es
out
push
imul
jp
into
fldt
or
sbb
filds
sti
cmpl
adcl
and
test
lods
jne
lret
pop
mov
xchg
int3
jno
cs
scas
stos
jns
mov
int3
hlt
insl
loopne
idivb
or
test
and
push
xchg
pop
mov
call
mov
lods
nop
std
xchg
js
aad
aam
jno
xor
cmp
test
pop
addr16
arpl
outsb
and
push
lret
xchg
aas
xlat
stos
push
mov
mov
pop
notb
push
clc
push
jle
mov
decl
dec
into
jnp
lahf
cmc
flds
xor
dec
dec
aas
lcall
cmp
xor
xor
xor
sahf
push
cs
xchg
and
push
shrb
mov
loopne
push
test
sbb
sbb
jmp
xchg
push
jne
sbb
jecxz
cmp
lcall
repz
movsb
jb
jo
jne
icebp
sub
mov
rclb
cmp
add
mov
adc
popf
xchg
negb
or
cld
fmull
popa
pop
mov
std
cmc
pop
movsl
jmp
mov
pop
mov
mov
data16
in
mov
xchg
fcoms
mov
xor
push
adc
and
loop
add
int
ret
stc
ja
das
or
cmp
fdivs
add
or
in
lret
sti
cs
add
sbb
xchg
mov
jo
pop
mov
mov
aad
inc
int
ss
icebp
fcmovu
xchg
nop
clc
sahf
cmp
cltd
roll
jns
pop
mov
aam
mov
xor
add
imul
inc
aam
sbb
idivb
xor
cmp
or
sub
sbb
add
rcrb
ds
outsb
jb
shll
arpl
jbe
push
es
cmpl
imul
mov
adc
inc
cmp
jbe
and
mov
popf
push
jno
xchg
mov
xchg
sar
or
scas
add
test
mov
lock
pop
cli
dec
test
test
pusha
nop
scas
jbe
daa
outsb
ss
mov
lea
imulb
aad
hlt
arpl
mov
mov
aad
mov
sub
fucomi
lret
out
ds
sahf
insl
or
inc
cmp
mov
sbb
dec
push
in
inc
fidivrs
je
das
scas
cmc
cmpsl
test
cld
inc
cmp
dec
inc
inc
jne
pusha
push
push
push
mov
test
je
arpl
xor
cmpsb
inc
int3
jg
mov
pop
shll
pop
jnp
xchg
or
insb
xchg
cmp
popf
jp
add
shll
fisubl
mov
fistpl
into
movsl
add
jnp
xchg
mov
shr
push
test
add
adc
sysexit
pop
movsl
mov
fsub
push
sub
push
shrl
dec
cmpsb
fwait
jmp
cmpsb
cld
sbb
push
cwtl
and
in
imul
xor
sub
dec
int
jbe
add
aam
mov
icebp
add
push
xorl
insb
ss
jno
mov
shlb
jbe
in
lret
dec
pop
jns
arpl
mov
dec
out
test
enter
jmp
jle
es
xchg
popa
mov
fistl
mov
add
in
mov
push
pop
enter
adc
sbb
aaa
lock
push
stc
enter
push
xchg
or
enter
ss
xor
pushf
cmp
mov
pop
lea
hlt
add
movsb
jo
mov
add
sub
out
fbstp
dec
decl
int3
ljmp
mov
push
test
pusha
xchg
jle
aas
dec
popf
repnz
aas
iret
and
sub
ret
sti
fcompl
push
cs
jae
inc
nop
and
push
in
jmp
rorl
push
mov
inc
imul
psrld
xchg
mov
cmpsl
push
push
mov
pop
fists
out
inc
movsl
shl
sahf
sbb
cmp
in
jb
or
scas
data16
pop
cmp
mov
je
js
and
mov
adc
jge
adc
aaa
icebp
inc
mov
jne
cld
pop
outsb
cmp
and
in
sub
es
pop
mov
popa
lret
leave
xchg
mov
mov
or
or
dec
sarb
test
in
push
dec
add
push
fnstsw
jp
pop
or
xor
add
xchg
std
icebp
pushaw
std
add
add
lcall
mov
cwtl
fsub
fbstp
add
shll
mov
push
lock
jbe
fs
rcll
test
pop
dec
popa
push
or
adc
jno
ret
mov
movsl
mov
mov
and
aad
adc
mov
adc
push
outsl
shrl
lods
and
fdiv
data16
and
ja
test
xchg
out
jl
cs
scas
xchg
imul
je
mov
xor
das
sbb
sbb
mov
repnz
outsl
push
xor
inc
sti
leave
mov
fcmovnu
push
mov
pop
loope
loop
xor
xchg
mov
fsubrl
mov
mov
adc
loop
mov
movsb
lcall
outsl
fldl
outsl
clc
cmpsl
outsl
mov
push
test
scas
data16
orl
in
mov
or
sti
sti
push
adc
jl
fwait
push
in
dec
jo
cmc
popa
insl
stos
fcmovnb
dec
cwtl
adc
in
xchg
cmp
adc
ja
daa
pop
fldl
adc
repnz
fadd
push
sub
jecxz
pop
pusha
sub
in
popa
dec
das
dec
scas
pop
daa
fwait
adc
sahf
fidivs
inc
leave
xor
data16
or
ljmp
popf
jns
popf
xchg
mov
dec
das
sub
xchg
and
insb
ret
cmpsl
movl
inc
inc
insl
mov
dec
dec
in
jg
add
sub
shrb
imul
sbb
das
das
int
and
mov
push
rorb
adc
cltd
dec
sbb
push
adc
jo
aam
mov
cwtl
lea
jmp
xlat
push
je
fsubs
xor
push
xchg
push
sub
cmpsw
daa
cmc
les
add
mov
jg
inc
sbb
and
sub
dec
fwait
popf
inc
iret
mov
sbb
xchg
mov
mov
imul
hlt
mov
sbb
push
add
cmp
dec
sub
xchg
cli
lea
inc
rcrb
dec
sbb
pop
push
mov
movsb
test
outsb
mov
mov
movsb
fsubrl
stos
pop
push
sbb
bound
stos
sbb
inc
mov
and
pop
cltd
inc
iret
add
push
push
mov
dec
push
gs
and
lcall
add
mov
cmpb
add
or
imul
mov
sbbl
sub
add
movsl
shl
leave
aam
stos
das
loop
inc
out
sub
cmpsb
je
idivl
ss
mov
mov
lods
fldt
insl
cld
jo
icebp
arpl
pop
sbb
sub
lods
push
jp
or
scas
xchg
dec
mov
cli
mov
dec
lcall
xor
ss
pop
lods
mov
fstl
mov
fsubrl
inc
sub
jne
sbb
mov
pop
add
push
cmp
jl
mov
jae
fistpl
and
sbb
test
leave
jl
pusha
cld
bound
push
sbb
xchg
movsl
push
fimull
shrl
mov
adc
and
mov
or
mov
dec
lods
xor
popa
movsb
push
testl
gs
repnz
mov
out
ror
or
dec
jns
add
loopne
jg
cmp
xor
insl
jmp
aad
cmpsb
xchg
mov
xchg
aad
push
jecxz
xchg
xor
lods
xor
push
or
xchg
pop
pmullw
cltd
call
lret
fwait
loopne
or
mov
call
push
and
xchg
sbb
orl
add
mov
daa
xor
sub
repnz
xchg
pop
out
push
hlt
xchg
add
dec
add
push
insl
std
xor
adc
nop
jno
test
pop
jno
lds
dec
mov
gs
mov
pop
lds
dec
mov
jp
jb
dec
or
call
lods
jmp
arpl
fwait
inc
bound
int3
gs
scas
and
jb
push
sbb
out
jp
daa
cmp
lret
or
in
arpl
int
ss
inc
sbb
das
stos
addl
push
sbb
xor
dec
and
jmp
fnstcw
sub
stos
enter
dec
pop
pop
and
nop
gs
test
xchg
jmp
mov
xor
insl
arpl
jae
data16
push
xor
jecxz
xchg
mov
push
mov
insl
in
or
cmpb
jnp
xchg
ja
jnp
or
sub
add
pop
push
mov
sbb
in
out
cmp
jge
adc
insb
jne
xor
cwtl
sub
adc
sub
out
adcb
jg
mov
jl
mov
dec
sub
jmp
bound
xor
adc
cld
jne
dec
cmp
stos
jae
push
and
mov
jbe
aad
xchg
xchg
aaa
jb
in
dec
sarl
mov
testl
shl
inc
repnz
int
mov
adc
test
mov
pop
pop
lcall
sbb
mov
clc
add
mov
jecxz
mov
bound
pop
sbb
test
int
std
pop
cmp
add
insl
mov
jne
iret
mov
cld
bnd
cmpsl
loope
mov
push
mov
cmp
lea
test
or
inc
cmp
ficomps
orl
mov
daa
sub
jno
dec
scas
lds
push
cmc
addr16
add
xchg
push
ljmp
push
xchg
fcoms
add
sub
arpl
or
xor
and
or
iret
mov
fcom
jg
sbb
fiadds
xchg
stos
decl
arpl
pop
clc
push
rorb
add
lock
pusha
sbb
add
sbb
gs
mov
xchg
push
incl
pop
cmp
pop
pushf
xor
pop
xorb
and
movsb
mov
fdivrs
out
sub
xor
mov
into
int
je
lods
stos
lahf
or
fwait
scas
adc
pop
enter
or
scas
out
sbb
outsb
aas
add
add
fxch
rorl
add
repnz
icebp
push
jl
iret
jo
iret
adc
lods
stos
fsubl
cltd
das
js
lods
push
divl
pop
pop
xchg
repnz
xor
xor
call
rcrb
adc
ret
int3
and
mov
loopne
or
pop
lds
add
bound
mov
push
pop
add
xor
bound
subb
cld
cmp
push
lret
sets
std
aam
shlb
jle
mov
iret
adc
xor
sub
mov
xor
or
dec
mov
out
mov
sti
fidivs
jle
cmc
mov
and
stc
std
bnd
jnp
int
into
stos
sub
popl
bound
dec
mov
iret
int
int3
lock
push
dec
push
into
insl
jp
insb
insb
enter
data16
shll
fsubl
push
decb
xchg
sbb
cmp
push
mov
mov
cmp
incb
pushf
cmp
adc
inc
lret
push
lock
pop
lds
into
sub
xchg
adc
sbb
xchg
rdmsr
ds
push
loope
dec
jo
lods
lods
stos
mov
sub
subb
adc
push
repnz
adc
add
mov
hlt
sbb
mov
jle
addl
out
lods
adc
jnp
inc
sub
in
pop
lcall
mov
icebp
es
scas
xchg
inc
aaa
mov
mov
adc
into
shrb
mov
hlt
lret
aaa
sub
outsl
jae
mov
cmp
popa
and
inc
jo
int3
pop
push
pop
sub
jnp
subb
mov
jnp
ret
xor
push
inc
mov
leave
loopne
leave
popf
fcoms
fs
stos
clc
in
scas
mov
test
pushf
insb
addr16
push
jmp
mov
adc
outsl
xchg
dec
out
test
xchg
push
push
xchg
adc
sbb
rcll
pushf
dec
out
push
cmpsl
repz
test
lock
and
dec
fmuls
jnp
mov
sub
imul
clc
rol
pop
jecxz
int
es
push
adc
outsb
jnp
add
sbb
pop
cmp
push
pop
xchg
cmpl
std
add
cmpsl
imul
mov
sti
mov
sub
and
cmp
pop
push
imul
rol
fnstenv
ss
gs
lods
xchg
in
push
add
aam
or
dec
mov
in
mov
js
or
loop
mov
dec
xchg
out
in
sub
das
xor
ret
lahf
ljmp
ret
rcl
pop
outsb
fisubrs
popa
in
mov
inc
cmpl
cmpsl
shrl
iret
mov
aam
or
out
bound
adc
std
lock
pushl
push
lretw
mov
push
sub
outsl
add
mov
pop
ja
inc
cmp
sti
cs
or
sarb
cld
test
push
repnz
dec
push
outsb
dec
enter
push
fwait
jne
in
movd
mov
dec
jo
xchg
lds
jge
aaa
dec
sub
mov
stc
subl
jnp
cmp
in
xchg
jb
inc
fidivrl
lahf
push
mov
cmc
nop
cwtl
ret
popf
pop
adc
rcll
sub
stos
ss
and
fs
movsl
imul
shlb
add
sub
mov
test
js
inc
aas
mov
shl
outsl
dec
jecxz
mov
and
xchg
or
rorb
xor
pusha
mov
xchg
es
stc
or
lds
or
fsts
lahf
rcl
sbb
scas
les
jmp
and
mov
adc
dec
inc
sub
jne
pop
stos
fistl
fisttpll
rcl
ret
or
cmp
xchg
pop
push
bound
clc
in
js
pop
js
std
ljmp
movsb
addb
xor
sahf
add
or
sub
mov
test
pop
nop
xor
mov
addr16
inc
sbb
ret
imul
sbb
rclb
fnstsw
arpl
cmc
mov
or
add
fstl
cmp
ss
mov
in
xorl
out
outsl
xchg
sbb
loopne
push
int3
lods
outsl
inc
std
jns
and
jecxz
out
jecxz
xor
movsl
loope
mov
xchg
mov
daa
sarl
in
push
and
jb
cmp
shlb
push
into
pop
inc
jp
sub
addl
dec
sub
sub
inc
inc
ret
dec
xor
xchg
jecxz
je
sbb
jbe
jns
xchg
adc
add
sarb
int
imul
sbb
pop
fmull
icebp
in
cli
pop
jae
mov
or
out
lret
out
push
scas
mov
xchg
jae
dec
sbb
xor
mov
jl
mov
and
and
and
loop
jne
push
sbb
addr16
jno
fs
out
cltd
dec
pop
xchg
sbb
cmp
cltd
inc
adc
adc
mov
mov
test
inc
pop
popa
push
imul
adc
dec
push
into
adc
idiv
pop
cmp
int
push
ror
mov
mov
call
lods
cmp
cli
pop
ljmp
mov
lea
clc
push
aas
push
xor
or
adc
test
je
dec
dec
lock
lds
gs
jo
fwait
nop
pop
cmpsl
mov
outsl
sbb
imul
int
jmp
sub
insb
mov
pusha
jae
mov
mov
pop
imul
lds
cmp
inc
push
inc
gs
cmc
inc
cmp
cmp
pop
or
add
push
stos
cmp
cmc
out
jmp
mov
mov
cmpb
aas
jo
mov
jmp
sbb
out
ret
popf
lret
das
aas
jle
sub
and
sub
jge
arpl
xchg
xchg
clc
adc
jo
xchg
sti
add
mov
lea
hlt
inc
arpl
in
sbb
or
or
adc
xor
jp
xchg
cmpsb
or
mov
ret
pusha
inc
pop
mov
out
pushf
xchg
loop
push
add
mov
cmp
cmp
sub
fsubrl
add
outsb
gs
loop
mov
sahf
mov
cld
icebp
mov
adc
add
mov
dec
pop
in
clc
mov
repz
adc
fcomps
pop
jmp
jne
lods
mov
scas
and
into
outsl
das
jmp
test
and
imul
lret
leave
mov
mov
mov
scas
mov
push
stos
jo
xor
xchg
push
js,pn
push
dec
pusha
push
jg
test
roll
lahf
pop
sub
mov
xor
rorb
sbbb
sub
out
ficompl
push
dec
and
cltd
pop
ret
outsb
mov
insb
inc
mov
xchg
sub
xchg
je
mov
jmp
pushf
call
jno
cwtl
jns
xchg
imul
loopne
cmp
mov
in
negl
sti
cltd
jns
mov
pop
or
mov
sub
outsl
dec
movsb
xchg
sbb
sbb
sti
jns
test
insb
adc
scas
jo
sub
icebp
into
fs
test
jl
outsl
push
sub
xor
movsl
hlt
xor
cs
sti
es
popf
aad
jle
or
insl
add
sub
jp
mov
xchg
or
push
clc
mov
fnstenv
mov
pop
out
cld
fwait
adc
mov
mov
cmpsl
aas
and
cmpsb
movsb
xchg
stc
add
cmp
mov
xor
imul
leave
or
mov
je
lods
and
test
mov
mov
jno
popf
inc
or
fs
jno
or
lcall
and
mov
dec
out
pop
dec
inc
xchg
xchg
dec
jo
rcrl
inc
add
cmp
popf
xor
xchg
xlat
xchg
sbb
mov
test
mov
cmp
add
push
icebp
xor
dec
xchg
lds
jae
outsb
push
dec
sbb
xchg
inc
and
jb
sbb
js,pt
arpl
xchg
dec
out
xor
pop
cmp
popf
into
dec
rcr
js
mov
or
adc
xor
push
push
and
jl
cmp
and
mov
ret
jnp
push
cltd
adc
xor
push
mov
ds
xor
cmp
mov
fstpt
cwtl
aam
stos
xchg
cltd
fs
adc
adc
dec
adc
testb
adc
repnz
imul
testl
xchg
dec
sub
inc
in
in
jge
sarb
mov
daa
jp
push
hlt
mov
inc
inc
pop
lock
or
hlt
jge
xor
outsl
ja
cli
ds
shlb
idivl
lahf
mov
xor
add
jp
nop
loope
cmp
fidivl
icebp
or
pop
mov
inc
mov
adc
pop
movsl
push
add
and
fcoms
add
xor
lahf
xchg
addl
adc
or
mul
push
xor
xchg
das
sub
fwait
fwait
repnz
nop
push
cwtl
cltd
lcall
jne
test
mov
ja
mov
mov
push
cltd
nop
fdivr
ret
inc
pop
fsubrs
dec
sub
aas
cmp
dec
and
mov
sbb
icebp
sub
fdivl
pop
jg
repz
pop
sbbb
mov
dec
dec
testl
xchg
stc
mov
ficompl
ret
xlat
es
mov
inc
sarb
out
or
dec
movsl
sub
jo
jnp
push
adc
int3
or
mov
and
jae
aam
ret
pop
test
ret
outsb
jbe
imul
jo
nop
iret
jecxz
lret
or
nop
popl
mov
int
lods
jne
in
insl
sbb
adc
out
mov
or
ljmp
lret
test
push
ret
incl
add
es
jae
cmp
rol
inc
scas
test
and
jae
rorl
test
jne
fadds
jmp
pop
sub
fstps
dec
pop
xor
in
mov
leave
lea
sbb
xor
add
adc
imul
jbe
bound
jle
repz
jbe
and
out
mov
push
int3
je
and
pop
mov
jns
out
xlat
xchg
repz
fstpl
add
mov
sbb
enter
js
insb
push
lret
es
mov
enter
xor
xchg
push
shlb
cmp
movsb
popa
popf
pop
mov
cmc
inc
xchg
stc
lcall
mov
loope
xor
clc
inc
inc
add
testb
nop
push
dec
and
outsb
ss
popa
lods
pushf
pop
inc
stc
aaa
mov
xchg
jae
shl
call
dec
dec
mov
mov
ja
cli
add
and
ret
lods
sub
inc
sub
rolb
mov
sbb
pop
sbb
mov
add
stos
imul
jne
mov
sbb
pusha
lds
repnz
xchg
xor
enter
outsb
jb
hlt
ss
js
and
xor
fidivl
in
test
shrb
mov
xor
fdivrs
and
cwtl
push
fisubrs
dec
sbb
aaa
inc
je
cmpsl
push
inc
dec
and
loop
push
push
cmp
push
dec
sti
xor
xor
insl
mov
mov
aad
or
mov
mov
lret
scas
lahf
sub
cltd
cltd
scas
push
mov
hlt
stos
sbb
es
xchg
push
les
push
in
call
mov
sub
cmp
decb
inc
rolb
shr
ja
shll
sub
sbb
int3
mov
xchg
ret
aam
mov
jns
push
xor
lods
mov
pushl
les
mov
cmp
add
mov
mov
push
sarl
pop
fisubl
test
gs
push
jo
mov
cmc
dec
fstp
fiaddl
ret
mov
std
roll
outsl
test
test
rcll
jae
or
scas
jb
mov
lock
lea
add
cmc
insb
test
dec
add
mov
ret
jge
jne
mov
aam
std
mov
mov
stos
adc
add
jle
cmc
adc
movsb
out
or
jmp
cmp
adc
nop
adc
fwait
push
pop
fcoml
cli
sub
xor
push
mov
cmpl
lcall
lret
inc
repnz
ss
jg
scas
cli
pop
pop
es
faddp
pop
push
push
testb
cli
pop
stc
xchg
pop
lock
mov
adc
pop
fsubs
rclb
fcoml
bound
and
sbb
fwait
shll
fdivrl
jge
into
jbe
jns
outsb
xor
outsl
inc
pop
mov
insl
and
and
dec
sub
stc
pop
dec
xchg
es
and
cli
push
push
or
xchg
lahf
sahf
gs
fstp
lods
jmp
and
add
jmp
xchg
mov
dec
or
dec
inc
jecxz
cmp
xchg
push
aam
sbb
add
add
fistpl
ret
jg
push
dec
adc
mov
jo
sar
mov
cmp
mov
negb
inc
jmp
rorl
mov
cmp
or
inc
xchg
lock
fdivs
popl
je
mov
add
jb
cmp
pushl
ja
leave
sub
incl
mov
lods
mov
cmp
push
add
and
icebp
movsl
push
and
adc
scas
xchg
or
cmpsl
lods
inc
cmp
mov
jnp
subb
fstl
hlt
cli
and
push
and
cmpsl
lea
scas
nop
aam
arpl
sub
pop
dec
and
mov
cltd
fnstenv
stos
into
out
int
clc
sbb
pop
adc
cmp
mov
push
push
xor
in
xchg
mov
or
mov
pushf
rolb
sbb
mov
int
inc
mov
cli
add
mov
aam
pop
pop
sub
cmp
mov
fidivrl
cmpsb
data16
inc
icebp
fidivs
subb
inc
jae
lret
shrb
stos
lock
xchg
cmc
nop
xor
xor
cmp
jb
cld
sub
jbe
rorl
and
pusha
jne
add
cmpsl
mov
dec
lods
xlat
pusha
cmp
jno
xchg
or
addr16
iret
ret
adcb
enter
shll
add
jecxz
adc
roll
inc
pop
outsb
ljmp
push
ret
ror
cmp
push
pop
mov
in
imul
pop
dec
ljmp
mov
fstp
cmc
arpl
sbb
fidivl
mov
sti
cmp
jg
inc
pop
cmp
adc
cmpsb
sbb
xor
mov
outsb
mov
movsb
out
nop
clc
sub
idivb
scas
fmul
lods
test
rcrb
into
lahf
push
jbe
adc
iret
or
pop
pop
into
adc
dec
inc
imul
or
stc
mov
shrb
cwtl
sub
adc
add
dec
pop
xchg
mov
cmp
stos
pop
clc
lahf
aaa
xor
loop
cmpsb
adc
inc
push
ljmp
in
mov
jle
lods
out
lods
aad
or
xor
fisubs
mov
xor
mov
std
fxch
sub
xor
adc
rclb
test
add
stos
fwait
lods
test
mov
sub
lods
daa
repz
jne
movsl
enter
shlb
push
dec
pop
sbb
scas
sub
sub
adc
negl
sarl
push
mov
mov
pop
cli
cmp
adc
sahf
into
cmc
sbb
sbb
out
repnz
xchg
pop
stos
mov
add
sub
insb
xchg
adc
stos
xchg
fdivl
mov
or
ror
leave
in
icebp
xor
in
mov
decb
jp
subb
inc
data16
movsb
ljmp
jmp
add
mov
pushf
jp
test
jae
dec
push
cltd
mov
fildll
lahf
inc
out
push
jb
in
cmp
or
and
jo
stos
aam
stos
add
test
mov
and
jge
jge
sub
dec
push
out
lods
movsl
pop
sarb
nop
pop
push
mov
jbe
js
fsubrl
mov
mov
imul
or
pop
mov
jnp
ffreep
sbb
or
addr16
bound
cmp
cwtl
adc
pop
push
int3
or
and
ja
push
dec
inc
or
xchg
and
stc
pop
iret
daa
mov
jg
insl
pop
dec
clc
test
pusha
repnz
add
out
arpl
cwtl
sbb
jnp
adc
lock
js
sub
loop
outsb
and
call
fsubr
push
xlat
imul
adc
mov
push
aas
roll
shrb
push
dec
and
and
dec
and
js
mov
push
lea
xchg
jge
add
xchg
std
bound
sub
jns
cld
dec
aad
stos
mov
push
aam
push
insl
mov
fists
or
mov
add
aas
dec
xlat
scas
push
scas
add
fmuls
sub
stos
sub
mov
lods
lods
std
leave
jp
sub
mov
int
xor
xchg
mov
fnstcw
enter
sbb
nop
adc
pop
dec
jecxz
iret
gs
push
imulb
adc
cltd
decl
push
jecxz
or
int3
pusha
mov
lret
fwait
mov
xor
inc
pop
xchg
adc
popf
xchg
into
mov
sarb
push
pop
aad
sbb
cld
xchg
mov
dec
and
movsl
sarb
loop
pusha
ja
test
cmpsb
xor
cltd
push
into
hlt
cmc
mov
pop
insb
std
xchg
dec
scas
movsl
mov
push
pop
sbb
xor
lcall
outsb
mov
xor
out
popf
inc
dec
gs
inc
jmp
mov
cmpsl
xor
mov
pop
je
lods
lcall
lods
popf
pop
sub
leave
inc
cmpsl
mov
test
mov
scas
repz
ljmp
aaa
xor
loope
add
pop
pop
imul
imul
imul
mov
jp
jle
push
lret
mov
mov
jb
or
pop
jl
pop
mov
lret
xor
sahf
xchg
popf
xchg
repz
aad
add
cmpsl
adc
or
dec
rep
loopne
pop
or
dec
ficoms
xchg
inc
pop
psllw
sbb
iret
push
jg
dec
push
jnp
adc
push
in
lea
adc
in
cmpb
out
movsb
and
mov
push
and
pop
mov
mov
pop
xchg
jbe
pop
inc
or
push
push
adc
jmp
jp
push
jp
mov
fwait
pop
cmpl
nop
fidivrl
xor
pusha
ss
adc
cli
imul
popf
lds
fld
xor
mov
adc
mov
dec
lahf
mov
and
bound
xorb
xor
repnz
stos
jne
inc
xchg
jecxz
push
push
mov
arpl
shrb
pop
lret
mov
or
cmpsb
out
sbb
xor
in
adc
out
popf
iret
push
jge
aaa
dec
push
xor
sarl
scas
dec
push
jecxz
enter
lea
inc
sbb
add
mov
pop
add
cmpsb
push
pusha
xchg
jno
cmp
jnp
mov
je
push
push
rorl
pop
mov
dec
pop
and
aaa
stos
test
pop
push
mov
hlt
in
jmp
add
mov
adc
mov
scas
lods
cmp
jae
in
arpl
dec
mov
notb
sub
fs
mov
inc
clc
scas
adc
popa
push
dec
in
jo
xor
sbb
arpl
push
movsl
inc
dec
loopne
jb
iret
dec
jecxz
dec
push
aas
jp
xor
sbb
dec
aad
fcomps
mov
push
mov
and
push
dec
cmpsb
test
sbbl
iret
fmuls
pop
test
popf
mov
sub
mov
mov
sub
pop
loope
sbb
out
cmpsb
adc
mov
pop
je
and
test
dec
push
ret
inc
sarb
push
fwait
out
xor
inc
push
hlt
adc
repz
ret
into
sub
movsb
test
xor
mov
or
lahf
sti
or
repz
jne
out
imul
add
leave
mov
sbb
hlt
cld
or
or
xchg
sbb
sub
loopne
mov
stos
jmp
pusha
fdiv
lods
or
mov
and
push
inc
popa
js
dec
inc
push
scas
sub
cmp
loop
outsl
cld
mov
sub
pusha
fbstp
push
clc
loopne
sbb
insl
pusha
xor
mov
sub
add
enter
cld
adcb
xchg
and
pop
or
ds
mov
or
ds
addl
testb
roll
mov
push
or
scas
loop
in
lea
cs
sbb
ret
fnsave
push
and
ds
push
hlt
push
jg
push
xchg
or
aam
lea
adc
jcxz
movsb
and
fadd
into
pop
jbe
cmpsl
es
mov
aas
inc
mov
cmp
imul
ljmp
jno
pushf
jns
popf
subl
sub
ret
inc
js
into
addr16
xor
pop
jnp
leave
scas
and
or
cmp
mov
rorb
aaa
mov
xchg
mov
ljmp
adc
pop
jecxz
int3
lret
out
cld
cmp
jl
testl
inc
pusha
mov
sbb
imul
inc
mov
pop
daa
test
or
xchg
mov
pushf
mov
idivb
sbb
sub
inc
and
jl
jg
jb
das
int3
lcall
pop
adc
dec
xor
notl
shll
shrb
sub
push
roll
jl
adc
in
dec
jl
cmp
pop
popa
fildll
cs
sub
fcoml
mov
imul
scas
or
aam
xchg
jnp
mov
add
pop
sbb
and
test
lods
leave
ja
repz
sbb
mov
lea
pop
mov
dec
mov
add
mov
mov
pop
ljmp
lret
lahf
xlat
outsb
mov
shr
push
out
stos
inc
pop
int3
mov
out
sbb
lds
push
insb
mov
lock
pop
mov
xchg
lds
jnp
pop
and
jmp
sub
sbb
jae
or
pushf
mov
outsl
mov
arpl
cmp
inc
inc
imul
add
ss
or
das
lock
mov
mov
xchg
aas
aad
fisubrl
cmp
and
insl
ljmp
sub
popf
movsl
dec
es
js
xor
push
cmp
nop
es
jnp
mov
pop
les
pop
push
mov
dec
test
sub
sbb
add
pop
mov
push
test
scas
jge
cmp
mov
mov
mov
push
jp
and
stos
fbstp
jb
dec
xchg
cs
or
add
xchg
mov
andl
popf
push
push
xchg
pop
int3
lahf
cmp
into
ds
loope
mov
lea
pushl
mov
dec
aas
and
addr16
push
sub
cmp
push
adc
stc
outsb
imul
loopne
loopne
js
push
xchg
insl
or
sbb
inc
enter
fmull
loop
add
fldt
jo
mov
inc
pop
pushf
or
pop
adc
cmc
xorl
aas
sahf
lret
jl
mov
push
dec
lret
push
adcl
dec
roll
out
mov
mov
mov
hlt
xor
movsb
push
or
aas
repnz
inc
cmp
fwait
out
mov
pushf
jp
imul
test
aam
adc
int
cli
fsubr
in
test
test
jns
ds
add
std
int3
stos
push
xor
cmc
pop
inc
and
adc
mov
mov
jbe
add
push
out
push
scas
lahf
ljmp
xor
xchg
inc
adc
xor
nop
arpl
test
jecxz
pop
sub
or
inc
popf
xor
sub
in
test
cli
pop
dec
push
cmp
mov
cwtl
and
mov
scas
mov
std
xor
dec
pop
adc
cmpsl
cmc
cmpsb
pop
dec
sub
cltd
mov
hlt
push
mov
cmpb
mov
fdivrs
mov
sbb
js
aad
sub
sub
push
jp
rcrl
ficoml
inc
mov
mov
xchg
jge
add
dec
jp
mov
fistl
sbb
dec
ss
bound
aam
add
ja
mov
xor
imul
xchg
add
je
fistl
cmp
and
sub
clc
sbb
adc
push
xor
add
cli
inc
pop
daa
xchg
xchg
lock
dec
mov
xchg
jbe
sbbb
stos
popf
push
mov
cwtl
sub
cmc
pop
ret
and
out
bound
sub
inc
aam
push
pop
std
xchg
xor
mov
dec
jp
cmp
jmp
int3
mov
mov
in
in
sbb
lcall
xor
cmp
aad
xchg
mov
xor
test
inc
and
sub
dec
xor
push
jb
scas
scas
sbb
loop
mov
out
std
cs
add
pop
fwait
nop
push
cwtl
or
push
push
dec
or
xchg
pop
xor
movsb
push
ja
in
push
fwait
jl
xor
data16
push
out
inc
cmpsb
mov
leave
xchg
jb
icebp
cmp
xchg
jp
lcall
cmc
out
cld
pusha
in
mov
inc
insb
lea
sub
addr16
xchg
daa
inc
mov
xchg
mov
dec
call
insl
xchg
imul
nop
jns
popf
sbb
loopne
mull
cmpsl
mov
pop
loope
cmp
lret
xchg
sti
out
jne
cmc
data16
inc
xor
inc
or
stos
and
fimull
sub
inc
adc
and
adcb
xor
cmp
stos
or
pop
repz
push
or
fnclex
aaa
call
cltd
sub
and
dec
int
add
sbb
inc
repnz
lcall
sbb
sbb
fildll
jne
sbb
mov
arpl
icebp
jnp
mov
fsubrs
sub
inc
adc
ret
addr16
and
arpl
pop
adc
xor
mov
cwtl
xchg
sbb
jle
mov
cmp
mov
mov
pop
cmp
pop
inc
aam
sbb
mov
add
int
or
sub
jp
jmp
scas
std
lea
mov
push
mov
icebp
cltd
bound
test
lahf
sbb
mov
int
inc
das
add
call
pop
in
jo
insl
stc
inc
in
pop
call
frstpm(287
xchg
xor
ja
jb
and
add
push
out
sbb
jb
ret
xor
leave
xchg
push
mov
mov
movsb
lds
sarb
push
mov
movsb
sub
sbb
std
adc
gs
cmpsl
mov
std
nop
push
adc
es
fidivrl
cmc
cmp
cmp
sub
push
inc
imul
inc
push
push
pop
adc
rcrl
inc
pusha
scas
mov
jns
rorl
pushf
mov
bnd
inc
fnstsw
jae
adc
sub
dec
lea
fsubp
xor
adc
movsb
aam
pop
jb
sbb
rclb
addr16
ljmp
ds
pop
xchg
cmp
rcr
cmp
arpl
mov
and
sub
or
sbb
adc
push
sbb
popf
mov
and
dec
jns
xchg
cmp
inc
call
loope
mov
loope
or
stos
or
outsl
xchg
or
dec
push
and
loope
or
xlat
rcrb
ja
inc
sbb
stc
pop
pushf
mov
sbb
pop
mov
jb
jae
leave
ds
mov
dec
xor
push
mov
ret
fxam
add
mov
adc
mov
movsb
push
dec
or
pushf
cmpsb
and
push
sub
mov
dec
push
dec
jge
cmp
mov
adcb
pusha
xor
ffreep
xor
lret
cld
hlt
and
ficoml
mov
int3
mov
inc
cmpsb
add
lods
test
sub
daa
sbb
cld
jne
mov
mov
je
stos
out
lcall
add
push
std
jmp
cli
sub
or
mov
out
hlt
xchg
jge
out
out
lods
int3
dec
mov
sub
in
push
pminub
push
lcall
bound
fisubs
clc
outsl
test
loope
cmc
or
ljmp
xor
push
jl
je
shll
mov
jecxz
les
push
mov
push
sbb
sbb
test
add
cld
ja
pop
xchg
add
ret
addr16
adc
mov
sbb
and
out
shlb
push
add
pusha
adc
inc
or
gs
mulb
mov
divl
pop
fcom
mov
cmp
or
push
pop
sbb
ret
ret
inc
cli
call
add
cwtl
cmp
pushf
push
das
sbb
add
add
shr
mov
subb
call
enter
dec
repz
mov
jp
mov
repnz
gs
and
cmp
int
pop
int
loopne
jb
addr16
xor
or
mov
lds
je
loop
dec
enter
adc
loope
or
in
std
and
mov
dec
pop
sub
xor
xor
ret
xchg
mov
movsl
inc
xchg
mov
push
xchg
sti
insl
jb
mov
stos
pop
jecxz
adc
sbb
test
mov
cwtl
fmull
xor
add
or
iret
sbbl
lcall
lock
xor
adc
sahf
lret
lock
cmpsl
call
jb
shll
movb
insb
vmovsd
push
insb
jne
int
mov
lret
clc
mov
pop
push
cmp
je
ljmp
leave
lcall
cs
in
inc
roll
dec
pop
sub
fstpl
inc
dec
jno
xchg
inc
sub
or
cmc
dec
test
icebp
mov
int
pop
pop
and
out
jp
jmp
out
in
and
clc
mov
repz
ja
cli
rcrb
push
mov
xor
xor
das
sahf
push
xchg
push
in
or
imul
leave
mov
mov
mov
mov
lret
xchg
ret
scas
repnz
out
bound
push
call
mov
sub
mov
pop
xchg
or
in
sub
mov
pop
packssdw
daa
mov
outsb
add
push
cmp
and
xlat
sahf
loopne
aas
jo
roll
lret
icebp
dec
orb
lods
ss
dec
and
rcll
pop
nop
lods
xchg
jbe
jp
pop
push
sub
jo
pop
scas
outsl
pop
pop
jge
push
or
fmulp
loope
lods
ja
shll
xlat
cmp
adc
jne
fcmovbe
dec
add
xor
in
jo
or
in
stos
add
inc
or
scas
call
cltd
mov
ret
mov
sub
fldl2t
xor
jl
mov
lock
mov
jns
and
std
xchg
mov
xor
andb
mov
popa
iret
negb
rcr
mov
ljmp
shlb
cmp
pop
mov
es
test
mov
sub
push
mov
popf
js
cmpsl
fiadds
pusha
iret
shl
das
xchg
out
rclb
lea
imul
adc
jecxz
adc
cmc
sarb
icebp
jg
jo
or
cmp
xchg
push
movsl
or
push
fxam
mov
xchg
add
dec
enter
cli
mov
rclb
jb
mov
mov
pop
dec
add
and
gs
add
jno
bswap
dec
idiv
cmpsb
dec
jecxz
mov
jmp
je
pop
mov
je,pn
mov
movl
mov
dec
ss
stos
stc
pushf
lret
push
clc
icebp
lahf
adc
push
aas
fimull
aas
mov
out
cmpsl
cmp
gs
mov
lret
call
movsb
sub
inc
bound
xor
lcall
cmpsb
pop
lcall
push
imul
nop
rcll
push
fldt
dec
jmp
das
jbe
or
int3
push
int3
int3
shlb
ret
or
cmp
imul
or
insl
imul
inc
push
outsb
xor
dec
outsl
inc
outsb
bound
pushf
clc
jnp
lods
xchg
add
adc
addr16
pop
xchg
pop
mov
daa
push
pusha
mov
stos
mov
cltd
mov
mov
lods
dec
repz
scas
mov
mov
dec
lret
mov
stos
xchg
xor
popa
pop
not
xor
les
mov
outsb
test
jne
lea
and
jecxz
je
or
xchg
fmul
testb
mov
cmc
xlat
aas
pusha
cltd
jg
mov
lcall
cltd
mov
outsb
popa
rcr
cmp
popa
icebp
cs
dec
out
notb
mov
sbb
cmp
pop
dec
lods
lods
mov
notl
push
adc
jbe
push
cwtl
fmul
fbld
dec
jae
aas
popl
dec
ds
std
out
or
dec
out
mov
fs
sahf
xlat
aas
xor
stc
sub
orl
cmp
rcll
push
or
in
xor
mov
mov
jb
pop
xchg
fidivs
arpl
push
xchg
xchg
jg
and
dec
pop
pop
mov
inc
sbb
pop
inc
xor
xor
enter
xlat
fdivrs
push
stc
rcll
ja
sbb
hlt
ja
aaa
addr16
scas
jo
stos
sahf
data16
ljmp
sbb
cmpl
push
les
sub
lods
sbb
les
je
mov
mov
add
push
cmpsb
pusha
int
adc
pushf
xor
in
lea
push
cli
xchg
jne
dec
and
lea
ja
fcmove
and
lahf
dec
push
test
cs
cmp
shrl
addr16
in
jne
xor
scas
daa
mov
mov
dec
movsl
push
cltd
and
cwtl
cs
cmpsl
dec
pop
mov
aas
cmp
sub
lods
xor
pop
sub
test
notb
push
sub
mov
mov
push
jp
mov
mov
test
cltd
pop
add
pop
adc
sub
in
jecxz
jo
arpl
imul
and
frstor
sub
repz
es
mov
push
insl
lock
cli
and
aam
leave
sub
shlb
adc
mov
jle
flds
jns
mov
mov
cmp
jo
dec
mov
mov
and
stos
sub
xchg
xor
sti
adc
outsb
das
sub
in
or
lods
mov
fldt
mov
inc
gs
js
mov
fcoml
xchg
stos
add
dec
cmpsl
or
sti
out
push
jmp
repnz
gs
das
xor
and
adc
push
push
and
aad
das
mov
xor
inc
fadds
jmp
xor
adcb
lds
xlat
push
inc
fwait
sti
lret
push
xlat
jg
sarb
mov
xchg
or
add
fstl
add
addr16
and
gs
ret
and
outsb
orb
mov
test
aaa
and
nop
fwait
out
dec
mov
sub
jo
or
xor
or
dec
add
dec
and
cmc
gs
dec
dec
out
mov
fdivr
jno
and
std
pop
add
fidivrs
jae
daa
scas
lret
punpckhdq
mov
or
sbb
out
ret
fisttpll
jge
ljmp
xor
or
mov
sub
cs
ret
lret
pop
hlt
mov
inc
dec
mov
jle
stos
jae
int3
popa
push
rclb
pop
jbe
and
xchg
gs
popa
cs
lock
stos
mov
rcr
sub
lahf
rcrb
andl
and
test
ds
sbb
lods
dec
mov
pop
mov
xchg
sbb
pop
out
cmpsb
push
icebp
sbb
push
adc
andps
cmpsb
pop
fisttpll
pushf
outsb
cmp
mov
clc
mov
adc
cmp
repnz
call
xchg
in
sbb
icebp
push
ja
fs
mov
in
and
mov
and
lds
testl
out
rorb
pop
inc
clc
outsb
in
mov
mov
dec
xchg
xchg
dec
mov
pop
or
scas
push
pop
jmp
mov
fwait
mov
pop
adc
divb
outsb
mov
scas
ljmp
loopne
fadds
lods
in
xchg
inc
inc
or
pop
mov
adc
lret
add
and
mov
mov
loop
fnstenv
mov
xchg
mov
dec
inc
cli
pop
icebp
xor
jnp
roll
insb
xchg
add
sub
test
pop
dec
stc
js
dec
stos
sbb
int3
jmp
dec
mov
inc
popa
adc
outsl
clc
push
mov
out
sbbb
je
call
jns
out
xor
gs
sbb
lea
jo
int
adc
jne
gs
push
ja
rcll
push
xchg
or
cmp
and
hlt
sbb
pop
stos
mov
cltd
out
mov
sbb
and
mov
push
lret
in
cmp
xchg
xor
and
sub
mov
ja
es
mov
jmp
les
lea
sbb
fldcw
dec
mov
fisubrl
add
pop
xchg
jmp
aam
jb
lods
les
push
testl
in
mov
aam
sbb
ja
mov
outsb
les
fsubp
inc
xor
out
jo
push
inc
repz
jns
lret
pop
xchg
filds
pop
or
orb
pop
mov
mov
lods
xor
push
clc
dec
dec
xchg
idivb
sti
cwtl
mov
ret
outsl
and
pop
mov
push
loop
jne
scas
add
sub
adc
iret
idivl
adc
push
lea
xchg
lcall
out
stos
jns
les
fcompl
cli
insb
jecxz
icebp
xor
loop
stos
mov
mov
push
xchg
push
and
loop
fmuls
stos
jmp
sub
stos
out
push
rclb
xchg
and
iret
xor
rcl
or
and
push
jle
out
push
cmpsl
mov
lcall
mov
or
jp
sbb
cli
push
push
insl
and
sbb
lea
ljmp
rorl
push
iret
adc
adc
push
cwtl
subl
clc
inc
sub
xor
imul
fsubr
fdivr
dec
mov
mov
fcmovnbe
inc
outsb
push
sub
adc
out
add
pop
andb
cmp
dec
popf
outsb
shr
mov
loope
xchg
or
pop
fildll
in
clc
arpl
fisttpll
les
arpl
cmp
mov
fstl
dec
mov
mov
adc
out
jecxz
fdiv
mov
mov
clc
imul
imul
mov
popa
cmp
push
or
push
inc
adcl
mov
fistl
push
xor
cmpsl
stos
ret
jb
test
jge
pop
fisttps
shl
stos
stos
inc
fadds
subb
and
ret
insl
aad
movsl
pop
int3
in
mov
xlat
sbb
inc
data16
andnps
cmp
movsb
outsl
hlt
push
cmp
jbe
xor
xor
mov
pop
jmp
addb
adc
fs
xchg
hlt
ds
push
lods
mov
inc
jne
std
in
dec
xor
loop
pop
aaa
jb
addb
pop
pop
xchg
fisubrl
popa
icebp
add
fldl
aaa
out
mov
mov
mulb
push
gs
dec
rcll
in
inc
loopne
jmp
hlt
lcall
sbb
xlat
add
mov
leave
mov
sub
xor
or
aad
push
sbbb
adc
pop
mov
xchg
scas
inc
test
push
mov
jecxz
cmp
stos
imul
dec
outsb
or
or
pop
pop
or
icebp
mov
jns
scas
xchg
mov
loop
inc
lea
mov
ret
gs
and
insl
jb
shlb
push
push
in
cltd
jo
sbb
movsb
mov
je
mov
sti
mov
adc
cwtl
mov
xlat
out
es
mov
andb
sbb
iret
mov
std
pcmpeqw
icebp
imul
dec
cli
ds
call
cld
fcmovne
mov
pop
cld
or
adc
mov
ret
bound
cmp
test
imul
push
enter
lcallw
loope
cmp
ja
pop
add
push
lods
sub
dec
jns
jge
mov
int
cmpsl
cs
dec
dec
xorl
fldenv
sbb
leave
mov
dec
add
es
jae
mov
jmp
cli
add
sub
test
repz
push
lds
sbb
mov
or
sub
mov
std
lcall
jns
int3
adc
bnd
cmp
test
sbb
sbb
sub
ljmp
dec
ficoml
mov
popf
imul
sarl
and
add
inc
xchg
xorb
xchg
dec
xor
outsl
sti
mov
movsb
call
inc
xlat
stc
inc
nop
int3
repz
jns
lret
js
sub
sub
sub
sbb
xor
sub
mov
pusha
loope
dec
or
xchg
pop
cmp
das
xchg
mov
push
fldln2
cld
pop
mov
and
ljmp
rcr
push
dec
adc
pop
es
push
leave
push
popa
adcb
xchg
lods
lea
fnsave
xchg
pop
pop
lds
rcll
dec
orb
imul
jmp
lods
loop
ret
jle
sbb
into
pop
adc
add
repz
js
fs
cli
push
mov
mov
call
push
inc
sub
dec
push
xchg
mov
sub
mov
int3
fnstsw
push
sub
add
add
nop
ja
outsl
dec
inc
out
jle
ss
mov
push
sub
js
hlt
sbb
mov
and
and
jae
test
mov
sbb
xor
je
xchg
outsl
dec
loop
xchg
inc
movsb
jp
test
lods
dec
or
aas
cli
xchg
and
xchg
push
pop
enter
test
mov
leave
lods
stos
mov
mov
cmp
ss
sbb
jl
lods
outsl
stos
or
mov
sub
jnp
movlps
xchg
stc
jns
icebp
mov
and
and
and
cmpsl
aas
cmp
repnz
jmp
sahf
sub
mov
cli
push
vpmaddwd
jp
dec
mov
rorl
or
mov
add
xchg
bound
lods
xor
cwtl
enter
enter
movsb
push
push
mov
test
std
divb
dec
pop
adcl
cmp
xor
lock
inc
dec
inc
or
dec
sti
aaa
jecxz
test
idiv
dec
push
stc
fdivrl
xchg
jle
sbb
frstor
or
dec
add
testl
repnz
jo
cmpsl
test
mov
test
cld
ss
lds
out
mov
xlat
mov
and
xchg
and
gs
sbb
loopne
xor
xchg
dec
mov
xchg
fildl
icebp
gs
std
pop
xchg
rcrb
in
adc
dec
daa
adc
mov
in
mov
sbb
and
push
fscale
dec
shll
aaa
sbb
fidivrl
push
adc
push
stos
sbb
mov
pop
icebp
ss
inc
mulb
jne
movsb
xor
test
int3
mov
sti
xchg
loope
icebp
ss
cmp
loopne
jl
fldl
ss
les
vpsubsb
mov
sub
push
cltd
test
fistpl
dec
out
cld
leave
mov
push
xchg
push
sub
and
test
push
loopne
call
jle
bound
cs
pop
ret
data16
mov
sub
dec
jmp
xor
stos
cltd
mov
lds
mov
dec
not
fdivrp
pop
adc
sbb
sbb
popa
lcall
test
mov
dec
popf
stos
aas
ret
inc
in
jne
inc
jo
repnz
add
clc
imul
xor
inc
push
sub
loopne
dec
shll
add
xchg
dec
pop
popa
cmp
jae
pop
je
mov
jae
dec
fiadds
mov
jl
mov
test
mov
mov
in
clc
add
mov
cmp
data16
xchg
push
push
or
pushf
fs
clc
popf
fwait
loop
scas
adc
jp
xor
cmp
or
loopne
jbe
movsl
pop
lock
aam
jne
or
jns
and
rorb
mov
jae
nopl
and
xorl
mov
movq
mov
loop
inc
lret
xor
into
xor
test
cmpsb
test
imul
or
rorl
cmp
mov
adc
insl
fcomps
mov
cmpb
xchg
cwtl
push
fs
mov
in
jg
mov
iret
std
push
inc
iret
movsl
jle
jmp
pushf
mov
addr16
push
rorb
adc
das
inc
dec
in
leave
and
scas
loop
mov
shl
fs
lds
std
dec
iret
hlt
outsb
xor
mov
fsubp
mov
jmp
pop
testb
mov
fnsave
push
enter
pop
cmp
insb
mov
dec
pop
stos
dec
or
dec
jl
xchg
inc
and
out
hlt
pop
xchg
hlt
dec
fdivrs
std
in
mov
xchg
sbb
fstps
add
and
out
lahf
pop
in
pop
decl
or
push
mov
shll
mov
aas
cmp
out
jge
lods
stos
sbb
int3
mov
mov
imulb
sbb
jmp
sbb
mov
inc
test
inc
in
xchg
and
push
mov
mov
xchg
out
je
xor
out
loopne
aad
adc
sbb
mov
scas
adc
xchg
or
das
push
inc
cli
out
cltd
dec
push
pop
sub
lea
push
fs
pop
sub
lret
fadds
jge
mov
popa
mov
in
mov
push
sbb
dec
loop
cmc
inc
adc
and
aas
ljmp
adc
scas
shrb
aas
mov
jnp
lds
mov
mov
daa
test
cpuid
das
mov
xchg
outsl
repnz
test
sub
dec
mov
scas
inc
inc
int3
orb
andl
cld
sbb
mov
shrl
icebp
repnz
xchg
push
imulb
fsub
stc
cmp
pop
lcall
push
loopne
pop
jb
call
lea
dec
movsb
dec
jae
and
out
mov
sbb
fcoml
add
hlt
inc
dec
jle
icebp
fnstcw
xor
and
sbb
sub
lcall
sub
and
notb
loopne
and
fbld
cmp
call
or
add
ja
or
fwait
enter
ljmp
mov
and
inc
in
inc
pusha
insb
sbb
push
aam
sub
jo
push
lods
mov
push
mov
adc
lods
std
pop
push
xor
jmp
stos
push
loopne
roll
jae
iret
cmp
cmp
jo
ljmp
ror
or
fisubrs
adc
sub
repz
lods
push
pop
decl
sub
dec
ja
ljmp
incb
xor
out
xor
pop
pop
ss
inc
xchg
ds
dec
jmp
loopne
sub
and
fsubrs
inc
sub
jne
or
sub
sbb
cld
jnp
loop
ljmp
or
icebp
inc
pop
adc
ss
add
mov
xchg
jmp
loop
fistl
adc
adc
les
aad
mov
popa
aaa
repnz
push
inc
js
stos
outsb
dec
and
cli
pusha
mov
orl
shll
cmp
fisttps
cmp
jmp
enter
or
push
xchg
je
jg
sbbb
mov
fs
xchg
pop
fists
inc
pushf
mov
pop
or
xor
cmpb
cmp
adc
pop
xchg
push
divb
jne
xchg
fs
mov
divl
mov
xchg
les
mov
das
fldcw
test
sarl
cld
or
cltd
cltd
pop
test
les
push
pop
sbb
xchg
negl
xor
jp
cmp
jge
push
xlat
xor
shlb
insl
inc
je
out
inc
sub
mov
mov
aad
fisubrl
xchg
add
cmpsb
fdiv
inc
loope
push
or
dec
sahf
jmp
fldcw
ja
mov
ds
or
out
or
inc
not
fldt
cmp
arpl
movsl
in
inc
adc
popf
xchg
add
aam
xor
xchg
es
lahf
fldt
jl
cmp
cmpsl
lret
sbb
sbb
subl
xchg
orl
push
xor
aam
sub
addl
mov
cmovae
fwait
cmp
std
jle
mov
adcl
push
jmp
xchg
out
jp
sbb
mov
inc
pop
inc
and
outsb
iret
lret
loopne
jp
jl
xorl
adc
cmp
and
jp
jle
xchg
xchg
mov
scas
dec
mov
in
pusha
xor
adc
fadd
mov
inc
xchg
pop
and
nop
cmp
jmp
rcll
xchg
mov
rorb
xchg
mov
cmpsl
jb
ljmp
jle
movsb
inc
sub
jg
into
push
mov
fildll
sub
aas
mov
mov
and
jecxz
cmpsb
sarl
sbb
xchg
fcmovnbe
xchg
pop
in
in
push
mov
cmc
fisubrl
int
into
cmp
or
cmc
sub
xor
jmp
rcll
push
xor
xlat
pop
jne
clc
scas
hlt
insb
aam
mov
or
ror
push
adc
es
dec
sahf
pop
xor
adc
int
cmp
std
out
push
add
imul
adc
xchg
jae
add
cld
jl
add
mov
cmpsb
xchg
pop
stos
xor
pusha
mov
les
shll
fwait
adc
cmp
inc
cmc
in
out
jbe
sub
imul
push
jle
or
xor
adc
mov
aad
fcompl
cmp
daa
out
pop
pop
dec
adc
add
cmpsb
lahf
lret
jmp
insb
add
xchg
mov
jmp
dec
jbe
lods
lcall
fisttpll
js
scas
loop
push
push
mov
mov
gs
push
pop
inc
jae
shll
dec
inc
jl
push
dec
popa
or
les
adcl
popf
mov
xor
stos
mov
fstps
nop
dec
push
cmp
stos
adc
es
jae
in
cmp
je
dec
push
mov
push
xor
xchg
pop
xchg
pop
pop
sbb
xchg
icebp
icebp
cs
shl
fisttps
jne
push
dec
or
adc
mov
dec
int
shlb
inc
test
rolb
dec
adc
sbb
inc
ja
cmp
insl
cmp
gs
leave
mov
rclb
daa
addr16
inc
aaa
mov
xchg
pop
push
mov
xchg
pop
mov
push
scas
and
sbb
adc
xchg
mov
ljmp
xor
sub
in
mov
lods
adc
aad
pop
mov
xlat
add
call
arpl
push
push
inc
inc
jno
mov
dec
xchg
sub
pusha
push
cs
jp
mov
pop
xlat
popf
adc
push
dec
aaa
dec
out
or
push
adc
inc
adc
lcall
inc
stos
xchg
sub
int3
sub
add
daa
xchg
and
aam
mov
dec
mov
cmc
pop
daa
ja
repnz
gs
jmp
fs
pop
mov
frstor
je
push
fmuls
ss
mov
repnz
jns
or
repnz
adc
aas
inc
inc
enter
jmp
pop
aaa
mov
inc
fildl
adc
inc
das
sub
sub
cld
jbe
cltd
icebp
xor
das
and
fcmovb
xor
dec
mov
test
loop
jae
add
pop
inc
sti
adc
stc
shrl
mov
add
jo
imull
cmp
pop
fiaddl
xchg
lods
insl
clc
call
aas
decl
loopne
sub
int3
jmp
jno
adc
mov
dec
aas
dec
mov
dec
fstpl
push
gs
sahf
int
cs
fisttps
movb
add
lcall
scas
inc
fisttpll
mov
lahf
outsb
jo
adc
mov
pop
pusha
mov
fucompp
xlat
int3
dec
fcomps
mov
mov
add
mov
mov
xchg
or
aad
push
je
jmp
fucomp
pusha
push
mov
loopne
addb
xor
adcl
test
xor
pop
mov
push
ret
cli
into
sbb
outsb
enter
sbb
test
mov
imul
xor
insb
adc
push
or
orl
add
loop
outsb
cmpsl
ja
pop
inc
push
inc
and
inc
xorb
sub
int3
movsb
xor
jp
mov
cltd
pushl
in
mov
mov
or
add
cltd
mov
cwtl
jne
fs
sub
fwait
pop
mov
mov
adc
xchg
call
xchg
jbe
sub
ss
inc
jnp
pop
xchg
mov
popf
mov
xchg
jmp
jg
xchg
xchg
adc
call
jnp
ljmp
hlt
mov
test
mov
add
jbe
sbb
lds
icebp
xchg
lods
out
sahf
xor
xchg
stos
dec
outsl
incl
push
jno
ja
icebp
mov
jle
sbb
mov
lods
enter
and
xor
mov
fiaddl
dec
mov
cwtl
les
outsl
into
jne
aaa
mov
jae
cmpl
xchg
cmp
xor
arpl
rcrb
lods
add
shl
mov
xlat
outsb
pop
jbe
adc
lcall
scas
lret
sub
xor
jno
stc
mov
fmulp
outsl
aad
cltd
jo
mov
jno
adcl
cmpsl
sbb
push
sbb
hlt
inc
xchg
imul
gs
les
sub
pop
fwait
into
les
xor
ja
xchg
pop
ud2
lock
xor
cmp
xchg
cmp
fmull
hlt
insl
pusha
jbe
add
cli
cltd
mov
cmp
xor
jmp
mov
pop
and
jno
loopne
adc
push
fistpl
cmpsl
dec
cmc
mov
sbb
xchg
push
stos
push
fwait
dec
repnz
jns
jmp
imulb
gs
mov
ret
jns
pop
adc
mov
pop
and
mov
mov
bound
add
jecxz
dec
xor
lods
frstor
out
and
jns
fldl
int
mov
push
stos
lock
push
leave
repnz
data16
rclb
jno
imul
sub
sbb
push
gs
outsb
push
jle
push
lret
arpl
add
stos
adc
ss
jg
dec
jge
shll
les
add
negl
mov
jae
push
loop
push
in
push
repz
mov
sub
xchg
lcall
sub
inc
test
pop
daa
in
lods
lods
jl
mov
cmp
negb
xor
pop
movsl
xlat
and
mov
sbb
jo
sbb
jmp
in
idivl
loop
leave
daa
sbb
outsb
add
or
jb
push
gs
add
mov
mov
lods
lods
mov
xchg
xchg
mov
add
jl
in
adcl
xchg
sarl
or
or
aam
cwtl
add
rol
add
icebp
sbb
cwtl
lea
sub
mov
imul
rolb
cmp
mov
xor
mov
aaa
push
and
repnz
int
mov
mov
sqrtps
and
fs
lea
jl
push
mov
xchg
lods
jo
test
mov
push
sbbb
or
xor
push
cltd
jae
xor
mov
in
mov
hlt
lods
lcall
sahf
in
sti
cmp
pop
test
jmp
jg
aaa
pop
inc
xor
sub
adc
jnp
sbb
lret
xchg
pop
stos
movsl
rcrl
add
aad
lock
loope
aad
push
and
test
aas
mov
add
fists
test
test
lahf
push
fistl
cmp
loope
add
xor
fcomi
test
mov
mov
out
inc
pop
mov
bnd
stos
adc
sub
cmpsw
push
xlat
mul
or
inc
or
push
add
fcmovne
fcoml
int3
add
outsl
loop
xor
mov
and
pop
andl
sub
outsb
mov
sub
sub
bound
sbb
xlat
and
mov
sbb
ret
loope
dec
test
lret
mov
lret
mov
outsb
push
dec
mov
add
jbe
das
cmp
jmp
xchg
push
add
mov
fldl
cwtl
or
cmpsb
or
cld
das
arpl
mov
and
add
cli
sbb
cmpsb
inc
imul
push
jb
add
jg
inc
stc
popa
jle
out
cmp
ds
insl
inc
dec
ss
push
nop
jb
xor
and
into
popf
mov
jnp
inc
pop
loop
loopne
dec
mov
pop
pop
cs
push
or
lods
push
int3
mov
cmp
out
aad
mov
push
addb
stos
jb
sbb
push
add
jg
push
mov
mov
adcl
shll
mov
dec
jmp
cwtl
add
adc
dec
pop
sbbb
or
cltd
shrb
into
or
lret
scas
inc
push
rclb
movsb
add
cmpl
hlt
xchg
outsl
int
mov
hlt
loopnew
pop
data16
andl
imul
popf
mov
and
clc
adc
xchg
push
jo
int
lret
fwait
and
sbb
sub
divl
push
fbld
sbb
xor
jbe
or
nop
xchg
jns
jne
mov
pop
inc
icebp
pusha
xchg
stos
loop
rclb
sti
notb
movsl
addb
stos
add
cli
adc
aas
shr
push
sbb
imul
cmp
and
daa
mov
dec
aaa
xor
add
cmp
js,pn
mov
add
out
leave
stc
stc
add
inc
xchg
mov
subl
sbb
in
incl
das
xor
dec
loopne
and
add
rol
xor
add
bound
imul
mov
jge
aas
ficomps
dec
mov
cmc
pop
lock
sub
jmp
mov
sbb
fidivrs
sbb
jb
push
repnz
out
cmp
mov
pop
sbb
push
sub
lret
or
add
fwait
mov
adc
cltd
repnz
clc
dec
dec
xchg
loopne
xchg
out
cs
add
cmp
test
mov
ja
jecxz
ficoml
dec
push
jne
add
sbb
out
iret
lahf
mov
push
shlb
mov
fwait
shrl
mov
or
jns
in
inc
sbb
lds
mov
cltd
stos
xchg
sub
mov
lods
bound
or
mov
ret
jecxz
shl
out
dec
fs
jmp
mov
sub
inc
scas
push
jge
mov
adc
dec
xor
mov
xchg
test
lcall
and
add
jg
fmuls
push
ror
and
pop
xchg
addr16
cs
mov
icebp
fnstsw
adc
ret
push
test
push
and
xchg
jecxz
loop
sub
in
or
sbb
mov
das
jno
sub
stos
pop
cltd
pop
xorb
xlat
addr16
lret
fwait
adc
jo
fimull
xchg
dec
pop
das
loop
stc
aaa
insl
push
dec
scas
and
test
mov
pop
mov
shlb
test
mov
lea
mov
sti
dec
pop
test
jns
arpl
std
pop
dec
xor
pop
push
lret
mov
nop
push
mov
das
xchg
adc
inc
inc
call
adc
scas
xor
sub
data16
icebp
jnp
xor
aas
inc
inc
and
and
and
repz
inc
xchg
lods
mov
xchg
aad
mov
jae
loopne
sahf
sbb
aaa
adc
lret
xchg
mov
cli
daa
dec
cwtl
xchg
fnstenv
inc
xchg
fdivrl
cli
ret
pusha
mov
pop
call
gs
call
iret
push
std
scas
sub
mov
popa
xor
das
rcrl
pop
mov
push
xor
lret
or
call
rcl
sbbb
xchg
or
sbb
cmc
imul
push
test
sbbb
pop
stos
jnp
leave
jl
mov
sub
decl
les
adc
inc
cmovno
daa
or
fwait
cwtl
cwtl
ret
cmc
or
sub
mov
adc
dec
jbe
sbb
rol
pusha
mov
pop
addr16
fisttps
xchg
xor
or
add
icebp
js,pn
adc
xor
cld
ja
xchg
sahf
call
popa
shlb
mov
pop
lret
stc
xchg
and
or
test
and
js
mov
iret
cmp
dec
xchg
sub
cmp
push
in
shlb
push
sub
inc
push
sbbb
out
jecxz
lods
jne
jns
jae
xchg
imul
sbb
imul
ja
repz
dec
addr16
les
xor
cmp
adc
pushf
mov
mov
clc
pop
sub
cltd
adc
popa
and
xor
rcrl
pop
insb
pop
mov
pop
lea
repz
fcomip
aad
jl
push
xchg
xchg
sub
in
push
iret
mov
loopne
cmpsl
jle
mov
jmp
xchg
das
mov
xchg
mov
cmpb
add
ljmp
inc
in
xor
aad
adc
scas
loop
dec
mov
pop
mov
insl
sbb
rol
test
daa
sbb
fadds
enter
clc
pop
jg
std
sub
cmp
movl
xchg
sahf
dec
imul
aaa
out
mov
ja
test
call
ret
jno
sub
ss
out
les
enter
adc
and
int
mov
sub
mov
jns
inc
scas
sbb
jnp
popa
cmc
nop
popf
fs
push
xchg
push
mov
xchg
pop
push
cld
fs
mov
pop
sub
fldenv
lock
xchg
pop
mov
inc
cmp
mov
jns
roll
mov
and
mov
mov
adc
jns
mov
ret
jmp
mov
mov
inc
xor
inc
pop
xchg
jmp
loop
cmp
xchg
loop
xorl
leave
loop
gs
or
das
mov
popl
into
arpl
lahf
and
lock
push
cmp
andb
xchg
xchg
cmp
mov
stos
test
add
pusha
loopne
dec
test
cmp
pop
jns
add
stos
dec
pop
push
xorb
and
loope
cmp
or
inc
scas
fisubrl
adc
mov
mov
gs
jg
jns
pop
pushf
hlt
je
adc
mov
push
repnz
scas
inc
pop
stc
imulb
push
out
in
inc
mov
scas
test
lcall
icebp
and
outsl
xchg
push
jl
pop
shrl
or
jbe
adc
or
outsb
and
mov
pop
push
rorl
push
sub
adc
push
cmp
nop
out
or
jecxz
jl
shr
inc
cli
jns
in
adc
fbld
xchg
pop
scas
out
push
out
xor
lahf
daa
in
mov
icebp
lds
jg
es
mov
insl
pop
dec
pand
jmp
push
push
and
into
scas
dec
jle
sahf
pop
cmpsb
pop
or
mov
push
cmp
les
arpl
ret
pop
scas
fwait
sbb
outsb
pop
dec
xor
test
das
xchg
mov
push
dec
pushf
mov
xchg
aas
adc
ror
and
out
jmp
addl
mov
scas
mov
cmp
jb
push
mov
sti
inc
push
out
bnd
cld
jae
mov
and
daa
dec
insl
mov
dec
lahf
xchg
orl
sub
jnp
jb
lods
push
ljmp
aaa
xchg
push
jge
xchg
inc
sub
pop
xor
iret
insl
pop
pop
in
dec
push
fcompl
ret
xchg
out
ja
inc
xlat
inc
test
jmp
dec
mov
les
loop
push
roll
cmpl
and
repz
test
xor
inc
xchg
pop
sbb
pop
push
les
call
fwait
xchg
aas
and
cmp
imul
ss
adc
scas
dec
inc
iret
fs
inc
mov
jae
rcr
les
mov
int3
call
lods
rclb
jmp
les
cmc
push
mov
js
subl
shlb
dec
mov
call
push
xchg
or
lods
imul
rorb
stos
push
or
push
fmull
ret
sub
mov
xchg
mov
es
in
jbe
movsl
mov
mov
mov
mov
xchg
push
push
mov
adc
shrb
test
iret
xchg
jne
mov
xchg
enter
sbb
fstps
stc
sti
scas
cmp
test
and
lea
pop
fistl
mov
xchg
add
sahf
fwait
push
std
adc
pop
nop
cs
mov
loop
je
fdivr
adc
push
mov
imul
cmp
call
fimull
lret
mov
mov
add
dec
jecxz
fisubl
cmp
in
stos
dec
jmp
sub
or
out
imul
mov
pop
clc
fcompl
push
sbb
mov
xor
push
imul
jnp
jae
mov
sub
push
jo
inc
cmp
jecxz
sbb
adc
pop
adc
dec
mov
or
or
ljmp
xchg
daa
enter
add
mov
jp
out
insb
popa
mov
fidivrs
pusha
and
push
add
movsl
out
in
int
sbb
sub
and
in
pxor
ficompl
or
int
cmp
sbb
sbb
jecxz
xchg
shll
sub
mov
mov
pop
lock
mul
ja
shrb
xlat
adc
sub
shr
mov
or
pop
movsw
lea
insb
cmp
stos
test
sub
ds
mov
fsub
jp
adc
add
lahf
mov
arpl
andb
ficoml
fwait
add
sti
jae
insl
cltd
stos
lods
out
adc
outsb
push
inc
xchg
adc
xchg
mov
ffree
fcmovbe
std
mov
mov
sub
cmp
mov
scas
sub
jb
push
subb
int3
fbstp
pop
outsb
lcall
bound
jne
subb
sub
call
sub
push
jecxz
scas
cmp
inc
int3
out
xchg
inc
cs
icebp
les
icebp
mull
loop
sbb
out
inc
mov
mov
pop
pop
or
loop
adc
push
sbb
stos
in
mov
rclw
fbld
subb
jp
inc
mov
mov
push
inc
ljmp
mov
aam
sub
call
cs
push
jp
loop
in
xor
cmp
and
aaa
and
sbb
int3
sbb
mov
mov
out
insl
aad
xchg
icebp
std
xlat
sbb
pop
mov
push
popa
add
add
jo
dec
cmp
adc
add
mov
cmp
stos
loop
or
insb
popl
or
fs
pop
jae
fisubrs
xchg
mov
in
into
sbb
enter
repnz
repnz
stos
dec
adc
mov
mov
xlat
mov
xor
mov
cmc
mov
jbe
test
fimull
cmp
inc
xorb
jecxz
movsl
or
mov
mov
aad
imul
adc
imul
adc
cmp
lock
cld
lret
fsubr
or
adc
fnstenv
fnsave
mov
xchg
sbb
mov
adc
push
flds
stos
pop
adc
sub
cwtl
xor
sub
add
and
orb
xor
mov
cmp
xlat
xchg
aam
daa
testl
lea
cld
aad
xchg
lahf
inc
idivl
mov
pop
xchg
repz
lods
cmp
addr16
pop
scas
jno
xchg
xchg
insl
pop
dec
sbb
shll
outsb
pop
mov
sub
cmp
arpl
xchg
pop
divl
cmpb
jecxz
jecxz
into
in
lret
sti
loop
jo
lahf
repz
in
testb
or
inc
mov
lods
jno
sbb
dec
pop
or
mov
sbb
jo
shr
pop
xor
or
dec
hlt
xchg
dec
pop
jbe
addr16
pop
out
sbb
ficomps
test
fxtract
mov
insl
fadds
cli
lock
and
aas
and
popf
repz
clc
test
cmp
fwait
lods
movsl
cmp
dec
gs
and
dec
cli
decl
lea
fs
in
push
ds
xor
and
jno
decb
jl
sbb
pop
xchg
inc
or
outsl
sahf
mov
add
mov
push
jg
or
out
mov
jmp
sub
scas
mov
inc
mov
inc
xor
out
popa
lods
cmpsl
cmp
xchg
inc
mov
push
jmp
mov
add
jns
jno
push
repnz
divb
inc
pop
add
std
inc
dec
imul
or
not
lahf
add
and
add
sub
inc
push
mov
mov
imul
lret
jo
sub
negl
pop
arpl
and
push
sbb
shrl
push
mov
rcll
scas
imull
cmp
out
push
aad
mov
daa
mov
jbe
test
cld
mov
clc
push
push
mov
mov
and
jecxz
inc
stos
mov
mov
ds
popa
loop
pop
sbb
jno
or
rcrl
aad
jecxz
popa
pop
mov
xchg
pop
scas
hlt
ficoml
popf
adc
jl
lahf
or
push
push
jb
inc
lods
nop
sahf
push
icebp
ret
mov
mov
in
stc
pop
inc
es
mov
sbb
jmp
cmp
and
gs
sub
and
pop
repz
add
out
and
jne
cmp
push
mov
pop
fwait
jle
fcompl
fistps
orb
ret
aad
push
cmpsl
es
bound
push
sub
mov
mov
inc
sub
sti
push
inc
jl
jo
in
decb
sti
cmp
mov
out
mov
sarl
divb
das
inc
mov
mov
mov
dec
cmp
ds
into
fildl
mov
jmp
loopne
pop
dec
sbb
sbb
ds
lahf
add
test
or
repnz
fnstsw
mov
jl
stc
cs
jmp
cli
push
mov
rol
mov
mov
or
nop
pop
fabs
call
xor
push
lods
or
mov
lahf
xor
repnz
lret
mov
fsubrs
mov
mov
jmp
push
into
ret
in
lahf
sbb
fprem1
xor
cs
dec
push
cmpsl
in
gs
movsb
xchg
jo
inc
sbb
pop
sahf
dec
mov
mov
fistpl
jo
add
scas
stc
inc
inc
sub
mov
loope
xor
mov
addr16
int3
dec
into
movsl
ss
pop
pop
ljmp
repz
mov
lock
lods
xchg
jae
sbb
sbb
test
add
iret
jl
cmpsb
jo
into
adc
adc
sbb
mov
inc
testb
iret
jnp
mov
ds
and
iret
lahf
pop
sbb
test
rcrl
jg
or
int
jecxz
jbe
je
shlb
xor
fwait
mov
dec
test
xor
inc
lock
jb
inc
add
mov
ja
or
js
sbb
pop
jecxz
cmp
mov
add
mov
dec
mov
and
mov
add
rclb
pop
cmp
cwtl
push
jb
mov
les
and
mov
in
iret
sub
or
es
loopne
dec
int
sbb
sbb
push
movsl
fistps
insb
fidivl
arpl
shrb
dec
jg
xchg
cmp
loope
fdivl
mov
sbb
push
pop
stos
and
mov
mov
fstps
inc
int
inc
add
outsb
arpl
mov
xchg
call
bound
int
mov
push
arpl
imul
sub
jo
ja
test
int3
cmc
popf
mov
sbb
dec
inc
shll
inc
sbb
leave
das
cli
mov
jne
mov
jbe
out
aas
add
dec
loop
pop
jmp
adc
push
or
stos
jae
test
xor
mov
add
push
rorl
in
pushf
movsb
addb
mov
xchg
loopne
test
jle,pt
push
adc
es
xchg
pop
ja
and
cwtl
sbb
cmp
pop
cmp
popf
pop
push
scas
sbb
fiaddl
pop
outsl
add
aas
cmp
adc
push
push
dec
je
stc
pop
aam
nop
je
cmp
dec
inc
mov
mov
cmpsb
sti
inc
or
andl
mov
insl
jmp
mov
push
xor
and
inc
mov
rolb
dec
cmp
flds
icebp
xor
in
push
fdivrs
push
add
push
hlt
adc
mov
data16
int
lahf
xchg
mov
popf
sti
scas
mov
inc
adc
push
pop
std
subl
popf
mov
jge
lea
jns
push
mov
push
or
sbb
adc
je
jecxz
imul
stos
push
pop
xchg
xor
mov
and
rcr
mull
les
adc
pop
popf
push
hlt
push
ret
pop
cwtl
or
push
jb
jo
mov
ljmp
pop
sbb
in
and
aas
pop
es
add
outsl
add
rcrl
lock
cwtl
test
cmpsb
mov
mov
sahf
fistl
adc
inc
and
jo
pop
cmc
popa
in
jg
imul
push
int
shll
push
out
pop
adc
ss
dec
jns
std
push
mov
inc
hlt
scas
cmc
add
sub
mov
xor
enter
mov
inc
dec
jmp
cmp
and
inc
add
or
insl
inc
pop
daa
inc
jmp
and
ss
insb
fldl
sbbl
int
int3
sub
scas
mov
push
and
daa
idivl
mov
clc
or
mov
mov
jecxz
cli
les
adc
inc
push
push
dec
jb
sub
fs
mov
adc
insl
sbb
push
lods
popf
and
or
jecxz
scas
out
push
push
loop
xor
jnp
jge
jmp
scas
xchg
ss
fdivrl
arpl
jae
push
sbb
mov
out
insl
mov
ja
inc
gs
int3
pop
adc
fnstcw
int3
stos
push
fs
mov
aas
and
inc
inc
inc
cmpsl
inc
scas
jb
sarl
sub
xchg
lock
sbbb
out
mov
repz
jns
cmpsl
cltd
fldenv
jns
fdivrp
dec
lahf
adc
nop
sbb
addr16
adc
arpl
push
or
sbb
pushf
cld
or
cmp
movsl
nop
imul
push
subb
jge
lcall
fstpl
ss
add
jecxz
xchg
sub
dec
loop
sub
lds
jne
test
scas
in
aaa
sarb
sub
mov
gs
adcb
xor
inc
sbb
bound
xor
addr16
pusha
jle
mov
mov
sub
test
or
iret
popa
jbe
xor
push
mov
mov
sahf
out
push
adc
inc
adcb
adc
sub
repz
mov
in
jns
pop
jae
pop
addl
dec
sub
xchg
fwait
arpl
pop
popa
push
dec
xor
aas
inc
cmp
push
adc
in
mov
out
fidivrl
sub
mov
push
jne
and
xor
jp
or
int
pxor
js
rclb
lea
ja
ret
clc
cmpsl
push
pop
mov
icebp
sub
xor
adc
cmpsl
cmp
inc
mov
inc
fisubrl
and
clc
lds
pop
es
mov
pop
loop
mov
data16
mov
negl
cs
int3
cmp
cmpsl
inc
ret
mov
je
sbb
imul
mov
add
arpl
or
jo
xchg
std
orb
clc
mov
in
insb
aam
stc
jae
add
in
repnz
mov
xchg
jo
jp
mov
enter
mov
and
xchg
sub
dec
inc
or
mov
clc
jnp
testb
sar
das
fnstsw
stos
mov
jnp
stc
dec
ds
lods
rcrb
push
mov
je
ss
sbb
add
dec
adc
std
fisttpll
jns
outsb
test
repnz
cmp
rorb
inc
mov
leave
repnz
lods
lds
in
fs
adc
andb
sbbb
push
dec
dec
pop
adc
lahf
addb
sub
test
mov
jne
pop
movsb
adc
pusha
test
ljmp
stos
lret
push
int
mov
aam
or
sub
inc
mov
hlt
ljmp
arpl
test
loopne
aad
push
mov
inc
inc
and
ja
pop
sbb
jo
add
or
and
lods
ja
orl
sbb
jmp
sub
lock
scas
rolb
es
int
adc
xor
mov
movsl
repnz
push
pop
mov
ds
iret
in
mov
mov
daa
dec
pop
js
dec
xchg
sub
mov
mov
xor
mov
mov
sti
mov
lret
add
popa
lcall
sbb
sub
xchg
and
or
jne
incb
mov
es
mov
andl
leave
iret
js
in
test
mov
cs
and
jns
lods
xchg
sub
mov
inc
pop
push
rcl
push
in
hlt
sbb
push
cmpsb
out
cmp
scas
jb
jnp
shll
sbb
mov
mov
ja
mov
sbb
add
jo
jno
add
jp
subb
sub
cli
adc
int3
int
test
cmp
dec
aad
xor
repz
sbb
push
inc
sar
outsb
insl
sbb
and
hlt
in
loop
insb
pusha
pop
test
cmp
dec
jg
cmp
repnz
jecxz
movsl
jmp
cmp
cmc
add
loopne
in
and
repnz
jge
loope
xor
or
sub
mov
push
lods
int
aam
outsb
xor
stos
loope
sahf
daa
in
inc
and
insb
scas
iret
sbb
push
cmp
aam
xor
jbe
aaa
test
lret
inc
std
fidivs
xlat
rcll
lcall
jmp
loope
inc
push
jb
sbb
cltd
in
stos
sbb
cmpsb
movsb
sbb
jp
xchg
lcall
loopne
mov
mov
popa
mov
int
insl
movl
dec
push
int
out
or
test
inc
push
adc
pusha
fistl
inc
adc
adc
jnp
mov
daa
dec
inc
pusha
xor
or
push
mov
ds
cmp
lods
push
and
aad
cmp
cmp
push
pop
push
xor
mov
xorb
xchg
or
mov
cmc
xor
stos
lods
sub
cmc
pop
pop
lahf
popf
les
out
mov
inc
mov
cmpsl
jbe
mov
frstor
mov
lahf
mov
lock
mov
mov
push
mov
inc
adc
push
inc
stos
sbb
negl
imul
bound
mov
sub
es
das
in
cwtl
test
loope
cmc
int3
push
jge
mov
call
xchg
aas
jo
pop
and
fcom
pop
adc
insb
aad
enter
lcall
lcall
loope
outsb
mov
mov
mov
shl
test
and
sbb
cmp
neg
jle
sarl
mov
rcll
pop
mov
popf
xchg
divl
mov
frstor
or
jae
and
mov
jl
lcall
pop
jno
bound
enter
cmp
das
add
loop
stc
movsl
xor
lea
insl
push
in
inc
in
loope
fcoms
push
addl
xlat
xor
mov
jmp
mov
sub
cwtl
cmp
inc
test
daa
sub
sbb
out
ljmp
push
stos
mov
enter
pop
push
pop
mov
into
sbb
xor
inc
xchg
push
outsl
popa
add
dec
les
pop
imul
jne
inc
or
mov
out
push
repz
cld
inc
in
jg
cmp
bnd
imul
cmpsb
push
cmpsl
in
loop
clc
popf
cmp
or
insl
bound
xor
mov
mov
test
subl
setl
sub
shll
ds
fcompl
cli
jmp
adc
add
mov
push
inc
and
pushf
add
jae
push
sub
push
mov
jae
inc
xchg
pop
pop
push
scas
stos
imul
lods
loop
jns
add
mov
xchg
lret
dec
dec
mov
add
iret
cmp
and
xchg
adc
dec
pushf
call
sub
popf
insb
xchg
jnp
push
sbb
notb
cmc
test
fabs
xchg
cmp
sub
popf
push
jbe
xchg
and
decl
aas
xchg
cmpsb
leave
scas
xchg
and
nop
inc
pop
repnz
mov
test
pop
or
fsubrs
xchg
mov
inc
rol
inc
xchg
sbb
ss
and
iret
and
adc
testb
push
adc
es
inc
lcall
xchg
fidivs
dec
adc
pop
or
or
jb
outsb
int
lds
and
pop
push
pop
push
push
stos
add
lret
pusha
push
mov
dec
jae
bound
je
push
mov
ss
js
sbbb
cwtl
repnz
fldcw
and
out
faddl
or
sub
lret
outsl
and
mov
insl
movl
movsb
mov
add
and
lods
and
or
pop
mov
jo
jge
test
push
xchg
push
ja
cmp
or
jmp
xchg
or
add
xchg
stos
mov
daa
adc
mov
aam
in
push
in
mov
and
xlat
test
sbb
popa
xchg
loope
cmp
mov
and
push
fadds
inc
sub
xor
fcoms
jbe
sub
dec
sbb
inc
push
lret
sbb
popf
movsb
sub
cld
sub
xor
mov
imul
mov
rep
push
and
jge
cmp
aas
pop
add
pop
pop
jb
jl
cmp
aaa
push
sub
mov
gs
sbb
cmpsb
movsb
stos
mov
jbe
push
adc
dec
xchg
mov
cmpsb
sbb
pop
subb
sbbl
xor
int3
push
mov
sbb
outsb
or
dec
adc
rcll
xor
pop
fsubl
fldl
add
rclb
sub
pusha
shll
mov
jno
into
testb
cmp
push
xor
movsl
inc
inc
jg
adc
inc
xchg
mov
lahf
dec
lods
xchg
scas
das
or
jae
out
cmpsl
rclb
fdivrs
adc
jl
and
sub
hlt
inc
lcall
adc
pusha
sub
nop
mov
out
sub
xor
sbb
in
xor
dec
pop
pushf
int3
xchg
test
lcall
mov
loop
int
jbe
mov
imul
push
outsb
lcall
clc
or
or
xor
push
arpl
stos
mov
mov
mov
popf
shll
add
lret
xchg
cmp
pop
mov
scas
pushf
pop
xlat
rolb
push
jb
mov
arpl
push
fbld
sub
sbb
lret
cmpl
cmp
ss
stc
je
fdivl
xor
clc
test
xchg
mov
rolb
stc
movb
push
cmpsb
cmp
push
cwtl
aam
mov
icebp
les
pop
xor
sbb
cmpb
adc
rolb
jne
xor
cld
divb
mov
xchg
adc
in
movsb
popa
test
or
cmpsb
xor
sbb
mov
xor
rcrb
clc
push
lcall
adcl
adc
sahf
mov
frstor
xchg
ljmp
mov
jno
out
clc
cli
push
inc
divl
bnd
xchg
mov
jg
inc
mov
iret
cmpsb
loopne
push
mov
mov
sub
xlat
jg
setae
xchg
push
pop
push
pop
push
aas
sbb
addl
adc
cwtl
add
mov
test
lret
mov
cmp
add
dec
dec
mov
xchg
adc
stos
aaa
push
jae
and
mov
pop
in
cltd
movsb
flds
xchg
std
jae
sub
mov
xor
push
sbb
insl
inc
call
jne
movsl
mov
gs
call
and
rcrl
lds
inc
fisttpll
xor
push
inc
out
jg
int
subb
mov
loop
xchg
cltd
sub
cmp
add
cmpsb
dec
pop
jp
cmp
jns
or
adc
call
int
fs
push
ljmp
inc
into
loopne
push
sub
or
xchg
js
sub
test
inc
push
xor
popf
mov
popa
fsubl
mov
fisttps
jae
std
rclb
in
cmpsb
ja
jmp
mov
iret
ficomps
stos
inc
push
inc
rcl
pusha
dec
pop
in
mov
loopne
std
hlt
lahf
jo
xor
dec
mov
xchg
xor
or
add
test
out
xchg
repz
clc
test
xor
pop
aam
andl
adc
cmpsb
das
pop
movsl
xor
mov
iret
rclb
mov
xchg
je
adc
push
sub
dec
and
add
pop
dec
cmp
add
ja
cli
test
or
arpl
jecxz
sub
js
dec
xchg
pusha
lock
aad
mov
cmp
dec
jns
jg
and
push
pop
xchg
popa
pop
adc
inc
les
push
pop
adc
cmpsl
int
dec
out
add
enter
daa
jo
pusha
outsl
xor
popa
cltd
mov
push
mov
mov
xchg
and
fsubr
pusha
mov
flds
inc
cltd
and
aam
call
xchg
or
mov
jno
mov
add
ss
jp
in
shll
mov
sbb
je
les
or
push
xor
sbb
js
shrb
in
push
cli
fcomp
mov
cmpsb
movsb
xchg
cmp
inc
sbb
movsl
xchg
jo
mov
dec
or
jae
inc
repz
dec
lcall
mov
sahf
jle
jbe
aas
idivb
cmp
inc
or
stc
sbb
push
in
sbb
dec
subb
push
pop
cmp
fistpll
hlt
xchg
cmp
pop
cmpsl
dec
std
fld
push
out
jbe
mov
fisttpll
fsubr
xor
sub
jl
and
jmp
lret
pusha
pop
js
xlat
cmp
and
pop
decl
dec
pop
jecxz
and
dec
jno
push
stos
shrl
pusha
insb
sbb
dec
push
cmp
push
jnp
icebp
pop
cltd
push
sub
cld
insl
lods
jae
sub
insl
xchg
sub
cmpl
lods
pop
test
pop
iret
pushf
lods
sub
lods
scas
mov
jle
fistpl
adc
insb
popa
iret
dec
xor
popf
std
repnz
push
and
shlb
xchg
inc
sbb
hlt
sbb
sbb
xchg
jb
push
lahf
sbb
clc
mov
or
mov
shlb
je
nop
inc
push
xchg
lcall
insb
mov
arpl
or
and
outsl
sub
dec
jne
lahf
jo
popl
mov
repz
in
mov
fldt
sarb
jmp
dec
fstps
rol
mov
test
sbb
lcall
push
call
jp
hlt
lret
sub
add
dec
lds
rorb
les
add
jo
movsl
addr16
or
push
dec
lret
dec
inc
mov
mov
pop
imul
pop
cmp
fcoml
pop
les
enter
xlat
sti
addr16
test
icebp
lock
xlat
jb
pusha
stos
xor
test
mov
imul
call
stc
insl
mov
cld
inc
sar
or
adc
mov
les
addr16
push
or
pop
sti
cmc
sbb
pop
adc
ficomps
ret
adc
jge
xchg
cltd
adc
pop
mov
loopne
stos
loopne
js
xorb
fsubrp
mov
pop
or
mov
push
les
nop
out
out
daa
fsts
lock
dec
dec
xor
popa
enter
cmp
dec
dec
cld
leave
inc
sarb
push
inc
cld
pop
adc
shlb
roll
das
sbb
movl
jl
fisubl
add
mov
sub
xchg
hlt
or
xlat
loop
or
sbb
dec
dec
lds
push
lods
mov
cmpl
mov
inc
cs
or
aas
fstl
inc
out
cmp
stos
cwtl
and
xchg
mov
or
xlat
sbb
jmp
test
cmp
xchg
jge
mov
fs
mov
loope
lret
mov
lods
and
mov
sub
adc
repnz
pop
lcall
sahf
popa
dec
loopne
repnz
popf
gs
iret
push
xchg
std
xchg
outsb
pop
push
mov
int3
xor
fdivrs
aas
xor
mov
xchg
data16
iret
insb
es
das
or
fs
out
adc
mov
cld
inc
dec
mov
pop
mov
pop
push
out
pusha
pop
jmp
jge
adcb
mov
sbb
rorb
cmp
dec
out
cs
shll
enter
in
in
cs
add
ds
cmp
dec
dec
jg
out
sub
mov
add
roll
sbb
jecxz
or
sub
jecxz
add
jo
add
loope
mov
lods
loopne
cmc
jo
mov
cwtl
add
or
xor
inc
push
imul
movsb
xlat
cmp
lret
mov
mov
std
hlt
rolb
xor
icebp
pop
shlb
sti
rol
or
incb
mov
ret
data16
call
fnstsw
mov
sub
add
das
xchg
cmpsl
lea
fs
test
loope
jmp
and
or
iret
jg
sbb
inc
jb
leave
fldt
sub
in
push
lock
push
notl
push
clc
push
dec
inc
sar
dec
mov
or
adc
and
mov
push
xlat
push
sub
jne
xchg
mov
lea
jnp
lea
mov
push
nop
mov
push
in
jae
ret
add
cmp
push
sub
psubw
lahf
pop
mov
xor
std
in
mov
or
inc
push
jmp
mov
fdivs
addr16
cmp
adc
push
das
cli
lods
popa
xchg
js
fmull
or
je
in
fwait
pop
repz
inc
adc
cmpsb
movsb
repz
sbb
cli
mov
fwait
adc
inc
mov
xchg
das
pop
sar
sbb
mov
jnp
adc
pushf
call
mov
adc
pop
in
pop
push
icebp
cmpl
push
mov
rcll
lret
sbb
ljmp
or
sbb
popf
mov
jo
stc
scas
outsb
mov
clc
and
add
sbb
idivb
cmc
push
mov
insl
jbe
pop
ss
mov
shl
mov
sbb
out
cli
jno
sub
ss
fnstsw
mov
xchg
cld
clc
mov
jp
push
sbb
lods
and
pop
xor
enter
fwait
rcrl
inc
mov
lods
sub
in
inc
nop
out
xchg
repnz
jo
jb
iret
test
add
cmpsb
scas
pop
sbb
dec
push
adc
lret
sub
into
cwtl
xor
rolb
cmpsb
cmp
fwait
pusha
ss
fnclex
cmpsb
repnz
rclb
test
dec
rcll
xchg
jno
addr16
daa
mov
and
xchg
and
dec
push
jl
push
push
into
and
xor
loopne
dec
lcall
lret
outsb
addl
xchg
fmulp
dec
sahf
pop
popa
cmc
ljmp
xchg
fidivl
mov
arpl
addr16
dec
and
lahf
dec
cli
jg
mov
sbb
xlat
push
or
loope
inc
adc
outsb
mov
scas
loop
leave
sub
or
hlt
cmp
in
or
call
cmpsl
push
sbb
jg
pusha
jno
into
xchg
add
mov
sbb
ss
fdivr
lret
adc
or
pushl
jb
stc
repz
mov
mov
sub
fs
fstp
arpl
push
push
mov
or
aaa
or
dec
lret
loopne
sbb
div
xlat
stc
cmp
fcomip
clc
jbe
pop
pop
mov
addb
lock
outsl
jmp
jge
xor
dec
xorps
mov
sbb
or
xchg
lock
fisubs
sbb
jmp
jbe
loopne
mov
repnz
cli
outsl
in
sub
jl
pop
fisttpll
mov
mov
mov
aad
mov
int
repz
sbb
xchg
fdiv
clc
xor
xchg
sub
inc
add
popa
sub
mov
jg
pop
push
mov
cmp
movsl
addr16
mov
les
and
ficoml
push
data16
xlat
incb
arpl
stos
js
xor
pop
incl
rorb
outsb
loop
decb
jo
popa
test
push
pop
cmc
mov
xor
jns
cmp
loop
mov
or
adc
and
mov
and
out
add
inc
adc
pop
mov
dec
cmpsb
inc
rorl
pop
mov
or
notl
sub
repnz
sar
mov
mov
sub
xor
loope
sub
pop
sbb
nop
das
xchg
mov
pop
bound
lahf
xchg
pop
jb
mov
das
xchg
and
pop
pop
ja
daa
xchg
xor
adc
pop
push
fwait
std
sbb
pop
fsubl
bound
daa
or
inc
inc
jecxz
scas
sub
xor
xchg
je
mov
hlt
inc
popa
cs
fldt
jle
cmp
shll
or
movsb
xchg
ret
mov
pusha
sub
xchg
clc
inc
rorb
push
push
pop
popf
sbbb
pop
outsl
jno
jmp
das
dec
cmp
xor
daa
addr16
insb
pop
push
mov
inc
xchg
cmc
out
pop
imul
nop
dec
loope
jmp
pop
sbb
dec
pusha
push
mov
xchg
dec
pushl
out
sti
aam
sbb
mov
pop
out
inc
out
loope
mov
xchg
in
push
mov
enter
mov
and
and
mov
push
pop
aaa
mov
push
mov
lcall
adc
mov
mov
inc
outsl
mov
pop
jle
gs
aas
dec
push
xor
cmp
push
jbe
ds
xchg
jno
movsl
and
mov
scas
adc
mov
jno
icebp
push
fcmovbe
rorb
negl
mov
sub
and
cmp
pusha
dec
inc
or
shrl
enter
mov
scas
mov
lret
daa
xchg
icebp
test
inc
nop
xor
mov
jle
js
push
mov
dec
dec
pop
popa
dec
jl
and
or
arpl
or
xor
adcl
cltd
pop
dec
xchg
aas
dec
sub
or
loopne
cmpsl
xchg
repnz
lahf
vandnpd
enter
roll
xchg
lcall
dec
andl
std
sbb
repnz
inc
xor
push
mull
imul
mov
es
outsb
sti
push
out
inc
sub
push
sub
insl
andl
cltd
jne
sbb
decl
xchg
mov
pop
shll
sub
ljmp
loopne
jnp
push
lcall
mov
push
push
aas
scas
test
jl
mov
push
icebp
ja
inc
xchg
cltd
pop
lods
adc
mov
fistpl
jp
insl
adc
add
mov
out
test
add
and
pop
addr16
ficoms
mov
aaa
add
mov
ja
in
hlt
lcall
inc
std
dec
dec
leave
sbb
arpl
xor
test
jo
popa
mov
insb
ds
leave
xor
fiadds
cmp
paddd
inc
mov
out
cmpsb
mov
cmpsl
xor
lods
aaa
into
hlt
clc
dec
jbe
loopne
sub
sub
mov
movsl
cmp
pop
push
call
push
push
inc
sub
xchg
fstpt
inc
cmp
mov
sbb
aad
nop
sub
loope
sub
dec
sbb
int3
movb
test
jg
cmpsb
daa
sub
jecxz
sar
mov
jbe
cmpsl
lods
sbb
and
pop
out
mov
stc
stos
add
mov
and
and
push
pop
sub
int
fsubl
pop
push
mov
adc
push
xchg
mov
cmp
cmpsl
iret
jecxz
mov
jo
xchg
push
addr16
ds
repz
mov
pop
sarb
stos
dec
enter
out
ljmp
cmp
cwtl
pop
clc
mov
popa
and
and
adc
lcall
mov
fisubrl
dec
stos
lahf
inc
in
shll
rcl
data16
push
jmp
xor
mov
push
and
jmp
mov
test
add
push
leave
push
cmp
jmp
push
push
pusha
sub
xor
imul
leave
push
stos
je
sub
insb
loop,pn
and
cld
and
in
icebp
leave
repz
lods
xorl
jnp
or
cmp
push
cmpsl
out
out
aad
inc
dec
loop
test
insb
cmp
inc
lahf
lods
lcall
mov
out
iret
mov
mov
lea
mov
lods
ljmp
je
repnz
arpl
fmul
pop
inc
test
push
enter
xor
or
rcr
adc
clc
or
or
mov
pop
out
adc
dec
in
imul
sub
lods
push
xchg
ss
pop
mov
je
jecxz
xor
add
inc
cli
ljmp
lock
int
js
int3
int
mov
addl
jle
into
loope
add
je
mov
push
push
mov
mov
adc
fcomps
fs
lret
insl
and
popa
hlt
or
imul
jge
push
mov
les
cmc
add
scas
mov
push
push
into
or
mov
cs
sbb
cmp
repz
les
pop
xchg
dec
leave
aam
sahf
sub
mov
lods
pop
add
hlt
add
jae
pop
cli
dec
add
jno
popa
pop
addr16
sub
push
sub
aam
leave
push
das
dec
loop
cmpsl
test
dec
cmp
out
sub
mov
adc
shlb
mov
loopne
pop
xor
or
test
call
js
pusha
and
jl
xor
mov
mov
roll
cmp
jno
mov
mov
sbb
lock
stc
aad
dec
cmc
dec
inc
adc
mov
and
sub
xor
mov
stc
test
and
leave
movsl
aad
mov
lods
jle
sbb
jne
push
mov
mov
hlt
jp
lds
imul
sub
push
push
lods
movsl
mov
mov
sbb
cmpsb
mov
leave
mov
das
sbb
push
or
push
icebp
lret
pop
pop
divl
sub
pop
inc
inc
jmp
adc
push
stc
leave
imul
push
das
aas
clc
sbb
rcrl
insl
aam
pop
or
adcl
inc
and
or
jno
pop
and
xor
or
mov
dec
jb
pop
out
and
ja
aad
jmp
imul
mov
stos
dec
sti
sbb
call
sub
inc
add
xchg
jbe
in
subl
mov
xchg
das
cmp
add
push
adc
add
stc
cmp
fs
pushf
mov
mov
add
dec
popa
cmp
adc
mov
pop
aaa
loopne
pop
das
mov
or
fisubrl
outsb
lea
mov
sbb
test
les
mov
insl
mov
add
mov
pop
pop
fldl
push
lock
int
sbb
mov
fs
xchg
adc
jmp
loope
sti
push
imul
out
mov
jmp
dec
adcl
lods
cs
adc
sub
jne
inc
sbb
push
ljmp
mov
subl
mov
xor
mov
gs
stos
adc
fs
nop
sahf
fsubl
cmp
cmp
cwtl
dec
and
adc
sub
cmpsb
xor
push
push
out
add
add
mov
push
xchg
adc
inc
out
sbbl
pusha
into
loopne
ret
and
jae
inc
xchg
adc
mov
jl
mov
ljmp
mov
pop
add
rcrb
fmuls
cmp
cmpsl
icebp
cmp
addb
or
xchg
lock
cwtl
cmp
stos
enter
mov
pop
clc
dec
sub
cmpsl
orl
adc
fisttpll
divb
cmc
xchg
xchg
and
jp
dec
fnstcw
rorl
outsl
out
arpl
mov
pop
out
test
in
fnstenv
mov
jne
pop
and
sub
pop
fs
mov
call
andl
cmp
mov
mov
or
mov
xchg
mov
or
xchg
xchg
lds
decl
mov
cwtl
repz
cmp
mov
ret
icebp
aas
push
and
sbb
mov
ret
cmp
arpl
lds
add
mov
push
jnp
stc
cmp
cltd
std
data16
aam
loope
fnstsw
lahf
inc
jecxz
in
adc
stos
lea
inc
rorl
xchg
dec
and
mov
and
lock
pop
cmpsl
popa
rcrb
adc
les
mov
orb
sarl
push
jmp
ret
pushf
mov
fnstcw
arpl
xor
adc
add
mov
jle
clc
cmp
stos
dec
test
out
fistl
bound
inc
jge
aas
or
ds
add
test
dec
insl
pop
jp
pop
daa
mov
cmpsb
adc
out
xchg
push
pop
sub
pop
out
out
mov
mov
lds
fistl
sub
insl
lds
scas
clc
mov
divl
and
fidivrs
lcall
jmp
adc
stos
fidivs
ret
push
pop
js
xchg
push
rcrl
jl
xor
inc
jae
pop
mov
add
mov
js
ret
push
and
and
ret
and
pop
xor
jg
dec
mov
out
jl
xor
int
scas
adc
popf
fldt
mov
cmpsl
mov
int
add
test
mov
rcrb
cmpsb
outsb
adc
adc
daa
in
call
sarb
dec
cmp
cmp
xor
or
lret
mov
jmp
jecxz
flds
mov
jle
jae
testl
xchg
int3
pop
addr16
int
outsl
call
cs
faddp
hlt
repz
mov
sub
push
stos
out
lahf
mov
loopne
mov
cwtl
xchg
arpl
jae
sub
sub
sbb
cmp
jp
fwait
add
mov
dec
lahf
cld
xchg
icebp
mov
inc
mov
scas
jnp
pop
pop
ror
es
xchg
scas
sbb
loop
sbb
and
pop
mov
cmp
inc
js
jmp
jp
xlat
sbb
sbb
dec
aaa
adc
mov
xchg
push
sub
mov
and
mov
leave
jmp
mov
daa
pop
jecxz
mov
mov
fcoml
mov
cmp
sub
or
xor
pop
inc
mov
xchg
inc
repnz
lods
les
mov
mov
out
add
std
jmp
stos
jo
dec
sub
mov
push
clc
jno
mov
out
dec
mov
shl
adc
xchg
fstpt
scas
add
or
push
dec
sub
aas
mov
insb
xchg
aad
xchg
jns
dec
dec
dec
mov
hlt
jp
cmp
dec
arpl
xor
test
inc
pop
imul
sbb
jecxz
sbb
mov
push
xor
mov
adc
mov
fcmovu
xchg
sbb
pop
imul
int3
pushf
lods
daa
jge
clc
jb
loopne
mov
and
imul
jbe
aam
les
gs
pop
mov
out
pop
notb
in
fucomp
adc
sub
adc
pusha
aas
in
popf
add
scas
mov
fsubr
fldt
fisubrs
sbb
mov
push
push
jl
add
push
jmp
inc
daa
mov
fisttpll
je
data16
loopne
push
repnz
pop
xor
outsl
orb
movsb
sub
cmp
push
fisttpl
adc
je
arpl
sub
lret
xchg
push
stos
lahf
or
sbb
in
clc
mov
sub
jg
adc
mov
xor
cmp
push
int
fisubrs
sub
into
roll
out
jge
mov
ret
mov
pop
int3
fwait
or
jns
fistpl
mov
lahf
adc
push
aad
lret
sbb
xor
in
ret
add
mov
and
mov
pop
popf
mov
sub
out
sub
add
das
lods
jge
cmp
and
mov
lods
sub
fidivrl
lret
jl
test
in
ja
in
mov
inc
or
mov
fidivs
xor
scas
cmp
int3
jmp
ljmp
out
out
popf
push
pushf
or
bound
or
out
and
sbb
xor
mov
sahf
sti
mov
jl
fnstcw
fiaddl
sub
xchg
insl
pop
mov
sbb
adc
shrl
adc
stc
adc
test
push
sti
call
xor
mov
dec
shlb
push
aam
in
shll
jne
mov
xchg
rep
jge
ret
xor
or
jge
push
adc
pop
aas
movsb
inc
inc
out
js
cmp
icebp
pop
mov
push
mov
js
jbe
mov
dec
ja
push
jae
std
stos
add
cmc
shrb
mov
fstps
cmp
imul
push
adc
testl
outsb
mov
or
adc
sub
adc
xchg
sub
pushf
insb
repz
dec
ror
in
jmp
arpl
inc
cmp
push
aaa
push
subb
dec
test
cli
add
or
fs
fimuls
mov
cmp
arpl
mov
add
cmp
cmc
xorb
dec
shrl
push
stc
dec
add
add
mov
mov
dec
imul
jmp
jns
xchg
clc
mov
aam
sti
xchg
push
sarl
ficoms
push
pop
aam
dec
scas
pop
imul
rcll
and
ds
sbb
pop
mov
loope
xchg
ja
repz
sbb
aad
out
mov
push
aaa
and
jnp
iret
das
in
aam
cltd
cwtl
jne
sarl
andl
test
out
cld
dec
fmull
jno
mov
cld
add
mov
mov
mov
xchg
push
test
cwtl
push
pop
pop
jns
or
lahf
pop
lret
in
je
enter
or
subl
or
addr16
mov
cmp
sbb
cmp
cmp
orb
sbb
mov
jle
xor
mov
mov
mov
push
inc
and
add
and
stos
mov
inc
mov
dec
or
adcb
jl
movsl
cli
jmp
xlat
ss
jecxz
xchg
mov
mov
or
adc
and
imul
outsl
enter
inc
in
sub
pop
aaa
pushf
divb
jl
and
rcrl
sub
fs
jo
jns
sar
push
sbb
shlb
data16
repz
adc
mov
jmp
mov
dec
sub
call
jns
inc
sarb
jns
or
ss
jg
cmpsl
jle
sbb
out
xchg
jae
test
inc
mov
mov
mov
daa
clc
and
les
fistps
xorb
adc
aam
cmpsl
lret
sahf
enter
mov
jmp
jmp
scas
push
xorl
scas
pop
jae
xor
pop
movsb
out
jbe
cmp
call
xchg
xchg
xchg
pop
fsubr
xor
mov
jns
aas
ja
xchg
out
mov
push
xor
outsb
lahf
and
adc
mov
or
lret
sbb
xor
insl
negb
pop
fstpt
jg
cmp
aam
lea
add
xor
pop
cmc
stc
call
mov
sub
mov
nop
divps
mov
arpl
mov
cwtl
cltd
push
mov
out
inc
loop
jo
imul
aas
add
icebp
les
ja
mov
mov
xchg
push
cli
dec
sub
dec
movsl
inc
mov
xor
dec
jae
rorb
push
adc
adc
in
aaa
ljmp
inc
xor
stos
das
les
lret
dec
lahf
es
iret
add
imul
jne
push
mov
xchg
aad
add
xchg
aaa
test
inc
les
fs
pmaxub
xchg
lea
movsl
mov
out
filds
jno
jmp
mov
cmp
nop
fnstsw
cld
daa
push
in
sub
push
inc
push
jl
rcll
outsb
inc
idivl
adcb
imul
dec
pop
test
nop
mov
out
push
cltd
clc
pop
sub
jae
inc
out
es
in
pop
rorb
outsl
fs
sub
mov
movsl
ret
or
ss
cmc
sbb
ljmp
fwait
jg
jge
dec
push
fnstcw
clc
cmpb
jmp
std
push
add
sub
lret
bound
xchg
jno
inc
mov
push
ss
xchg
xor
sub
mov
fs
incb
or
test
mov
lods
call
push
into
xchg
iret
pushf
iret
clc
stc
popa
pop
push
pop
jo
add
outsl
mov
xor
inc
in
fnstcw
imul
jbe
and
dec
sbb
xor
test
aas
andb
mov
test
rcrl
xchg
add
sub
sbb
negb
fcoml
lret
ljmp
mov
pop
add
imul
leave
int3
xchg
mov
outsl
cwtl
stc
sub
cmp
and
inc
fstps
dec
jg
cmp
xchg
push
stos
mulb
and
mov
inc
loope
ficomps
movsl
sub
or
xchg
lahf
fnstcw
jmp
xrelease
arpl
cld
adc
aad
push
add
adc
daa
or
popl
andl
vpaddsw
sbb
lods
into
mov
mov
iret
ret
arpl
sub
repz
aad
xchg
jae
rolb
adc
imul
mov
std
int3
and
cwtl
push
or
and
mov
jmp
les
test
into
push
xlat
cmpsl
xchg
int
push
xchg
pop
xor
cld
loop
jnp
aam
mov
add
sbbl
cld
int
shlb
pop
mov
bound
addb
cmp
add
xor
cltd
xor
inc
push
cmp
inc
push
adc
dec
push
jo
or
cs
jecxz
lret
jmp
filds
push
in
add
jns
int
lods
sbb
mov
ljmp
out
imul
movsb
jo
push
mov
dec
fsubrl
mov
mov
pop
fildl
mov
jne
mov
push
imul
sti
popf
stos
cmp
mov
add
in
cmp
mov
mov
ja
test
sbb
pusha
ret
imul
xchg
mov
jne
cmp
cmp
cltd
dec
stos
sahf
pop
inc
add
stc
push
cmc
lods
cli
je
stos
std
jo
fdivrl
add
jno
aad
push
das
xor
adc
subb
dec
ljmp
outsl
or
cmp
dec
aad
into
adc
ja
or
adc
push
sbbb
cmp
cmp
jbe
aad
push
je
daa
lahf
pop
mov
divl
popf
gs
ret
add
jnp
xor
int
addb
cmpsb
push
push
sub
imul
jmp
ret
fmull
ss
ja
insb
add
das
cmp
sti
lea
imul
movsl
fists
sbb
xor
xchg
inc
or
add
and
sub
xchg
mov
ljmp
setle
dec
dec
xlat
dec
jle
dec
cltd
fiadds
lret
jle
mov
test
hlt
lds
lods
lock
decb
push
mov
xchg
mov
lea
outsb
xchg
jne
mov
push
movsb
push
mov
repnz
and
cmpsb
inc
fdivr
mov
scas
dec
mov
push
ret
jns
xchg
adc
loopne
ret
push
inc
adc
xor
pop
test
or
mov
lock
jecxz
ficompl
xor
xchg
xchg
xor
fdivrl
jno
or
dec
mov
movsl
pop
ljmp
inc
mov
fistpl
lods
out
test
mov
mov
cmp
enter
stos
sbb
cmp
push
enter
fcmovnu
sbb
mov
or
sbb
push
sbb
psraw
xchg
push
dec
repnz
jge
fdivrp
jb
dec
gs
cli
scas
sti
sub
pop
dec
push
fistpll
cwtl
or
jl
mov
clc
mov
xchg
push
rcl
sub
dec
jae
jnp
cld
sahf
xchg
je
in
cwtl
xchg
xor
out
mov
mov
inc
sub
fs
dec
stos
movsl
nop
sub
mov
dec
inc
movb
sub
fldcw
sbb
outsl
mov
mov
push
xorb
fucomi
leave
in
jmp
mov
addb
jg
push
mov
jl
daa
loop
loopne
push
inc
jbe
mov
sub
jg
add
ds
popa
add
dec
pop
inc
out
mov
push
out
sub
pop
clc
dec
push
dec
push
and
sub
dec
fdivl
push
nop
sbb
sub
in
add
inc
out
jl
in
test
enter
out
pop
stc
add
scas
push
cmc
xchg
pop
cmc
jb
clc
je
mov
add
adc
aam
and
mov
loop
lock
dec
mov
push
ss
pop
cltd
aad
in
jb
pop
sub
insb
adc
push
mov
xchg
andb
pop
stos
inc
es
ret
inc
shll
xor
adc
gs
mov
test
push
stos
and
xor
sbb
push
xchg
in
push
or
adc
nop
popa
inc
sbb
dec
scas
xchg
pop
sbb
lcall
dec
mov
ret
push
sub
xor
xor
and
or
fdivl
xor
lret
mov
sub
ret
fisubrs
dec
mov
stos
addr16
jp
cmp
sbb
js
adc
cltd
mov
iret
push
mov
icebp
sub
aaa
aad
sub
cwtl
stc
add
push
fisttpll
xchg
push
cmp
mov
shr
fwait
adc
jne
lcall
loopne
ss
mov
xchg
xchg
bound
fisttpll
and
sbb
rcrb
aam
push
inc
inc
jb
and
aas
jae
inc
push
add
mov
dec
repz
mov
jae
mov
loopne
fdivl
std
push
inc
cmp
or
pop
cmp
adc
and
cmp
and
pusha
inc
fs
push
xchg
mov
xor
pop
rolb
imul
jl
add
or
adc
scas
add
jle
test
push
imul
jo
setno
sub
mov
orl
add
insb
xor
in
xor
inc
pop
pop
hlt
sti
rorl
sbb
mov
cmc
mov
movsb
repz
add
adc
mov
lret
mov
and
fs
sub
ret
cmpl
lahf
cmpsl
bound
sub
std
and
xor
fildll
or
push
mov
cli
or
adc
xor
ljmp
mov
xchg
push
mov
loop
sub
mov
ret
outsb
stos
test
stos
jp
enter
jbe
dec
add
movsb
pop
lods
mov
sub
mulb
pop
out
popa
lcall
xchg
or
sahf
add
cmp
lods
mov
jnp
sbb
push
jp
push
loop
and
jne
imul
int3
mov
push
int
push
pop
aas
adc
or
aaa
sbb
icebp
int
hlt
dec
test
mov
mov
fwait
adc
scas
jbe
fldt
int3
in
scas
push
cmpsb
cmpsl
xchg
and
cld
xchg
pop
nop
das
pop
jnp
xor
jmp
bound
mov
mov
cmpsl
dec
xchg
xchg
in
sub
push
std
mov
push
push
inc
fimull
mov
cmp
data16
jecxz
in
rcll
adc
mov
or
add
mov
push
inc
popa
pop
into
push
pop
repnz
stos
inc
sahf
cmpl
test
fwait
xchg
test
fdivrs
pushf
dec
adcb
push
std
dec
sbb
sti
arpl
bound
nop
arpl
repz
push
imul
popa
pop
test
pop
mov
adc
add
repnz
aad
jp
mov
adc
les
je
push
mov
loope
js
movsl
inc
xor
pop
jle
jmp
mov
stos
int
out
and
stos
cmpsl
ret
call
xchg
mov
les
cli
inc
leave
mov
add
imulb
fwait
jae
rcll
and
ror
test
and
push
xchg
cmpsl
frndint
lret
mov
mov
mov
sbb
sbb
inc
aad
and
pop
nop
push
sti
dec
repz
rolb
ds
sti
cmp
push
adc
inc
adc
push
je
push
pop
gs
bound
sbb
adc
add
movsl
icebp
inc
loopne
mov
sub
adc
pop
sub
sub
out
sbb
sbb
push
divl
or
cmp
mov
int3
mov
movsb
ficoms
in
xor
imul
loop
mov
sti
daa
enter
mov
push
movsl
sub
xor
xchg
cmp
inc
or
xor
stos
divl
mov
shl
ja
aad
mov
ljmp
out
sbb
fdivr
or
inc
push
mov
mov
and
mov
stos
loop
sub
dec
mov
ja
mov
or
mov
imul
fdiv
fcmove
divl
aaa
cld
adc
das
fistpll
ret
mov
inc
sbbb
push
cli
arpl
sbb
sbb
mov
add
in
jnp
sbb
mov
int
or
mov
int
xchg
aam
or
vcvtsi2ssl
add
cmp
ja
jbe
cmp
push
fs
push
sarl
xchg
mov
sub
xchg
xchg
fstpl
das
sbb
mov
mov
fcomip
clc
sub
rcll
lret
ljmp
pop
sti
dec
sub
jno
dec
lcall
jmp
sbb
cli
cmp
cs
cmp
mov
or
inc
adc
cmp
mov
rorl
mov
imul
sub
cmp
sub
shrb
add
imul
xchg
cmpsl
iret
inc
mov
bound
push
xchg
pop
and
push
scas
mov
sub
out
dec
push
hlt
xchg
sbb
test
arpl
push
mov
adc
clc
adc
arpl
pop
pop
mov
cli
or
pop
sarb
xchg
add
mov
inc
out
movsl
faddp
imull
jp
cmp
imul
inc
dec
sbb
out
sbb
fisttpl
mov
mov
cltd
mov
in
cmc
dec
test
add
or
ret
xlat
sti
ss
popa
and
daa
cmp
mov
push
push
inc
loopne
out
xchg
inc
sbb
push
mov
lods
jnp
sub
lahf
mov
loope
in
in
xor
mov
cmc
outsb
pop
insb
out
shll
jne
sarb
dec
popf
push
iret
lock
shlb
leave
pusha
lods
jl
xchg
repnz
xchg
push
xchg
push
cmp
test
push
mov
pop
in
loopne
xchg
popa
xor
es
cmp
sub
nop
or
xchg
sbb
or
lret
dec
xchg
test
fisttps
test
add
and
dec
les
out
inc
insl
and
or
sbb
inc
lret
pusha
ds
std
and
imul
pop
cld
cmp
inc
gs
xchg
movsb
jb
icebp
in
push
rclb
xor
pop
jae
scas
outsb
movsl
cmp
push
clc
jge
dec
aaa
call
sbb
xchg
pop
jns
inc
pop
stc
jg
cmp
cwtl
ja
mov
cltd
sbb
pusha
out
sub
jns
xor
scas
cmp
popf
fsub
icebp
xchg
push
sbb
int3
jge
add
jno
ljmp
and
ds
and
test
jmp
daa
gs
sub
out
rcrl
pop
jo
push
cld
add
pop
cs
or
adc
shrb
or
into
jmp
pop
xchg
loop
movsb
decb
mov
orl
cmp
mov
fs
mov
mov
repnz
mov
rcll
inc
xor
iret
or
and
jo
mov
and
iret
inc
and
and
push
xchg
lcall
jecxz
ror
cli
jno
nop
inc
jo
ss
imul
out
jl
mov
fucomip
ficoml
ret
add
jecxz
test
js
inc
push
ret
cmp
daa
inc
sub
sahf
add
xchg
out
add
cmp
ljmp
jge
bnd
ss
adc
xor
mov
loop
fcompl
push
mov
sti
pop
mov
lds
repz
movsb
fidivrs
out
ret
fnsetpm(287
push
daa
sub
fimull
jmp
fists
ja
mov
jecxz
mul
flds
adcl
cld
cmc
in
xchg
je
or
sub
dec
scas
rcr
push
cmp
ljmp
xor
lock
mov
lahf
xchg
mov
into
cmp
fadds
pop
nop
pushf
xchg
dec
dec
jg
jns
xchg
inc
ss
push
shlb
fs
push
mulb
fidivrs
jno
sbb
sbb
mov
lods
sbb
pushf
sub
or
mov
outsb
sub
or
movsb
jmp
inc
fimull
aas
or
sti
lea
push
outsl
out
je
lret
dec
jmp
adc
out
cli
data16
cmp
lahf
mov
iret
mov
js
dec
insb
stc
add
mov
xor
das
leave
xchg
lock
mov
popa
add
jne
sahf
and
dec
pop
and
lods
fnsave
imul
fwait
dec
iret
clc
clc
testl
inc
outsl
fucompp
jbe
inc
xlat
fcompl
sub
mov
add
icebp
ror
push
sahf
pushf
jmp
cli
inc
pop
add
jb
lret
sahf
ss
popa
push
or
cmp
add
ds
inc
cmp
fldenv
int3
mov
pop
add
jbe
icebp
dec
push
sar
xchg
jge
ret
or
cs
push
frstor
pop
cmp
xlat
mov
outsb
fidivl
dec
add
adcl
int3
fistpl
bound
jbe
mov
mov
cmpsl
mov
call
xchg
cmp
mov
aad
shll
sub
stos
cli
cmp
mov
dec
loope
jecxz
jmp
imul
test
jns
sti
mov
jb
xor
adc
outsb
outsl
jno
sbb
dec
sahf
je
push
adc
jnp
cwtl
xchg
or
shll
dec
mov
lock
frstor
and
mov
mov
lds
add
pop
dec
mov
movsl
sub
dec
mov
xchg
mov
xchg
sub
lods
dec
icebp
loopne
mov
inc
popf
xchg
mov
add
gs
or
cmc
hlt
xchg
cmp
mov
pop
rcrl
pop
mov
clc
pop
jb
test
inc
mov
mov
or
mov
mov
in
subl
or
fcompl
cmpsb
jne
in
or
xchg
das
cmp
mov
mov
rcll
adc
test
lock
jecxz
lcall
addl
mov
mov
jecxz
mov
sbb
mov
cmp
sbb
jle
insl
inc
xchg
inc
cwtl
loop
add
dec
jae
inc
ficomps
aam
sahf
mov
push
pop
push
ret
cmpb
sbb
mov
push
outsb
jmp
push
imul
jp
pop
ret
xor
push
fistl
mov
cli
xchg
xchg
adc
add
push
shlb
imul
imul
rcrl
push
lahf
hlt
and
or
push
add
or
and
dec
pop
dec
into
and
stos
dec
call
dec
outsb
test
lcall
cmp
lret
lods
push
inc
sub
mov
dec
cmc
jl
rcl
sahf
push
mov
xchg
sbb
adc
sub
stc
fiadds
mov
inc
es
sti
stos
mov
pop
int
xor
mov
jne
adc
std
jbe
out
pop
aad
shrb
lret
lahf
mov
jmp
cmp
xchg
mov
lods
mov
sub
mov
push
cmp
dec
jge
push
das
shrb
cld
mov
test
mov
lds
or
add
and
push
data16
cmp
or
xor
pop
cmc
jl
or
dec
push
popa
sub
lods
aaa
mov
jns
loop
aad
lods
or
jne
cwtl
and
outsb
dec
cmp
aam
out
sbb
push
sub
outsl
sub
mov
subl
fiadds
ds
or
push
outsl
xor
xchg
pop
adc
xchg
loope
fistpll
pop
stos
jo
and
out
push
pop
inc
in
jb
sbb
push
imul
loopne
jne
jge
adc
ss
cmc
xor
test
xor
stos
ret
xchg
lock
scas
mov
push
xchg
mov
rcrb
mov
sahf
mov
in
loop
xchg
lahf
sbbb
mov
sbb
lods
pop
adc
and
inc
xchg
mov
jle
cli
or
lods
add
scas
jo
in
and
test
ret
jnp
fs
ret
jge
rcrb
test
popf
pop
xchg
xor
lods
xchg
and
and
jmp
jbe
push
repnz
scas
stc
push
les
cmpsb
xchg
or
cmp
or
mov
and
insb
adc
push
jno
movsl
or
xor
adc
xlat
xor
push
aad
cmpsl
add
or
out
xor
fnsave
out
xor
sbb
hlt
jmp
loopne
ljmp
push
popa
out
in
pop
mov
mov
jle
pop
lods
jbe
fistpll
xlat
cmp
in
inc
mov
fcoms
inc
mov
dec
rep
push
push
scas
mov
adc
dec
add
and
clc
mov
and
gs
inc
push
orb
jecxz
frstor
xchg
sbb
or
and
or
rorb
mov
dec
and
stc
add
mov
lods
mov
adc
mov
andb
orb
loop
sahf
xor
hlt
cltd
inc
bound
mov
or
jae
repz
int3
inc
test
mov
ds
scas
adc
mov
inc
push
mov
xchg
dec
xchg
inc
push
cltd
nop
sbb
lret
inc
pop
mov
jns
jbe
mov
lods
xchg
gs
mov
hlt
mov
dec
inc
pop
or
cltd
les
adc
inc
or
pop
sub
and
mov
jmp
std
or
fstpt
xor
shl
jmp
or
popf
je
cmp
out
or
mov
mov
mov
xchg
and
cmp
dec
jp
sub
aaa
adc
push
sbb
pushf
imul
jg
iret
cmpsb
xor
dec
pop
pushf
mov
into
or
int3
jne
aad
repz
jnp
pop
out
sub
mov
xor
scas
adc
rcrl
cli
or
iret
clc
or
ret
inc
stos
fadd
push
xorl
dec
daa
loop
and
js
push
jecxz
sub
jle
sub
gs
add
lea
in
icebp
inc
mov
push
test
leave
lock
sub
stc
mov
dec
adc
stos
pop
std
stc
aad
mov
pop
jo
pusha
or
call
daa
adc
inc
or
lds
loop
mov
lds
jae
jmp
pop
push
loopne
test
xchg
pusha
cld
mov
das
ds
lds
rcrl
fs
loop
sbb
jno
fwait
ret
lahf
mov
mov
filds
xchg
xor
jbe
jb
adc
or
push
xor
sbb
insl
push
pop
nop
cmc
mov
das
or
adc
sbb
or
test
ficoml
out
vmread
arpl
shll
repz
aam
cmp
nop
xor
ja
roll
dec
hlt
dec
ljmp
cmpsl
pop
into
mov
and
lret
rep
mov
cmc
xchg
mul
jo
jne
out
mov
push
imul
std
mov
add
repnz
shrb
enter
mov
repnz
pop
push
inc
in
inc
push
je
pop
movsl
test
ret
jnp
stos
std
sub
cli
inc
xchg
cltd
iret
mov
daa
jnp
out
sub
and
cmc
iret
xor
jecxz
out
or
xor
mov
and
push
push
rcrb
xlat
lcall
lahf
ljmp
jecxz
outsl
dec
xchg
outsl
adc
call
fmull
ret
shlb
scas
jno
out
mov
xchg
in
mov
xor
xor
addr16
movsl
fwait
xor
jecxz
adc
xlat
pushf
mov
in
xchg
pop
mov
mov
out
push
add
in
pop
in
mov
cmp
repz
cmp
fcomps
call
fidivrl
pushf
and
mov
mov
je
adc
aam
hlt
jle
inc
push
jl
cmp
or
lret
sahf
adc
and
sbb
mov
loopne
sub
dec
sti
dec
repnz
push
stos
mov
inc
sub
ret
nop
mov
mov
dec
push
jmp
sbb
scas
lahf
and
push
sbb
popa
out
pop
or
rolb
mov
xchg
cmpsl
sbb
ds
xchg
cmpsb
cmp
jmp
sbb
shl
lret
sub
jle
stos
fsts
ljmp
hlt
in
inc
mov
addr16
push
enter
push
cmp
aam
fidivrl
clc
inc
rclb
jo
rcll
mov
flds
daa
jb
add
arpl
inc
jp
pop
nop
mov
inc
xor
cmp
mov
cwtl
roll
stos
jne
sbb
push
xlat
xchg
enter
aam
jge
out
and
scas
xchg
lcall
test
outsl
lock
mov
cltd
or
aad
jp
out
and
inc
sarb
jne
pop
and
xor
pop
dec
orb
ja
pop
mov
jbe
pop
inc
sub
mov
mov
rorl
push
push
push
or
fildll
pop
add
pop
scas
jp
lds
push
and
int3
cmp
or
xor
xor
cmpsl
xchg
push
jl
sahf
pop
lret
icebp
add
cmpb
adc
dec
mov
out
mov
inc
jecxz
inc
and
xchg
mov
mov
cmpsb
fsts
dec
dec
fsubs
add
pusha
pop
mov
xor
iret
push
insl
divl
fildl
mov
sub
imul
pushf
dec
cmp
in
xor
adc
popf
fidivl
popa
jg
out
jle
xor
mov
clc
push
xor
pop
jmp
adc
gs
shrl
jl
shlb
lret
lret
push
test
jle
lahf
test
or
leave
sub
jb
cmp
repnz
dec
add
cli
fdivrl
stc
xor
lds
add
xchg
lahf
loope
xchg
stos
pop
cwtl
daa
pop
pusha
xchg
pop
or
lret
jl
adc
hlt
jo
fmull
cmp
stos
outsl
mov
push
mov
jecxz
out
scas
pop
push
add
aaa
mov
mov
mov
or
pop
imull
mov
inc
test
push
outsl
popa
notl
sbb
xchg
dec
pop
fstpt
sub
adc
mov
outsl
mov
mov
push
xchg
mov
cld
std
sbbl
add
inc
js
gs
addr16
out
repnz
movsl
shlb
stc
inc
cmp
scas
dec
fcoms
cmp
xchg
bound
dec
shlb
fildl
fdivrs
in
xor
jg
bswap
push
mov
jns
mov
sub
in
adc
push
aad
lcall
pop
aam
loope
rclb
mov
aad
push
pusha
push
add
stos
mov
push
mov
xor
cmp
inc
out
jg
nop
in
cmp
pushf
std
aad
xor
call
sbb
ret
sti
scas
and
nop
stc
les
shl
test
push
aad
jp
in
lock
add
add
ficompl
int3
push
icebp
mov
test
push
fdivr
fcompl
mov
jbe
jb
rolb
cld
sub
sahf
dec
lahf
incl
movl
sub
in
sbb
sbb
sub
pop
fwait
add
sbb
jo
dec
sbb
sbb
add
pusha
movsb
shlb
mov
negb
inc
mov
dec
mov
xchg
jns
test
shrl
mov
and
sarl
popa
xchg
xlat
incl
xor
aad
fcmovnbe
lcall
xchg
mov
mov
cmpsl
hlt
push
xchg
add
push
movl
mov
jle
imul
ret
mov
or
add
jae
mov
cmpsb
push
out
call
sub
jo
aam
xlat
and
insb
sti
inc
and
adc
mov
test
cmpsl
cmpsb
add
add
testb
mov
ret
dec
in
jb
cs
xor
or
dec
jp
push
ret
adc
cmp
gs
push
sti
push
mov
je
mov
jns
sub
sbb
adc
pop
inc
addr16
aas
dec
push
sarb
sbb
lea
lahf
xor
lods
nop
mov
inc
clc
adc
mov
xchg
andl
mov
ret
cmp
pop
mov
add
lcall
xchg
xlat
orl
and
pop
mov
mov
adc
or
sub
ror
vpcomuq
pop
gs
lahf
imul
rolb
out
jae
es
mulb
mov
cwtl
shrl
jb
ljmp
in
and
xor
lcall
push
testb
jo
mov
sub
gs
adc
add
insb
int3
popa
cld
mov
cmc
xchg
sub
imul
inc
push
jg
sbb
ja
aam
xchg
mov
pop
fiaddl
add
into
mov
bound
sub
gs
pop
int3
cld
jl
mov
push
add
cld
sub
fistpll
loope
and
sub
leave
scas
xor
test
incl
add
lods
fldenv
mov
sbb
fdivrp
mov
inc
cwtl
or
pop
sbb
and
mov
in
out
fsts
ss
imul
inc
out
cmpsl
fcmovne
insb
or
inc
cmpsl
jne
mov
ds
movsb
or
or
out
xor
sbb
mov
jns
pop
cmp
stc
or
pusha
pop
insb
mov
dec
sbb
mov
and
jmp
mov
mov
aas
mov
stc
hlt
push
or
push
xor
cs
movsb
xor
in
in
mov
xchg
ljmp
sub
dec
sub
jl
or
imul
mov
sub
cmp
mov
mov
pop
pop
lds
cmp
sbb
popf
fwait
dec
movsb
add
xchg
imul
gs
adc
fstps
enter
scas
xor
jmp
mov
pop
repz
push
addr16
fcompl
jg
das
fsub
push
lods
aad
jmp
ja
stos
fs
out
cs
xchg
in
pop
in
cmpsb
xor
jle
push
loop
orb
sub
pop
pop
xchg
into
leave
xchg
imul
stos
orl
aam
bound
xorb
inc
repz
loop
dec
lret
push
cltd
mov
flds
mov
push
sbb
push
push
fs
call
lods
sub
cld
fcoms
sahf
push
sbbb
mov
xchg
orl
out
in
jge
push
test
cmpsb
xor
add
xchg
fcmovu
add
rolb
in
mov
pop
xor
inc
push
pop
out
mov
pop
cwtl
les
pop
lock
jb
data16
dec
push
je
aam
rcr
movsl
sub
mov
xchg
pusha
stos
ja
cmovo
adc
test
push
sahf
out
xorb
sbb
test
dec
nop
pop
add
divl
sbb
rolb
dec
xor
sahf
in
mov
fs
xchg
push
xchg
pop
adc
ret
hlt
sub
lret
pop
std
cmp
test
pop
mov
sub
aaa
sbb
add
mov
shll
jle
aad
cwtl
jle
xchg
inc
popf
mov
mov
dec
add
adcl
dec
ss
sti
mov
adcl
push
lret
in
xchg
jmp
and
sub
in
dec
jns
rcr
rcr
daa
sub
out
cmpl
fwait
add
jno
sahf
push
mov
rcrl
jae
je
dec
inc
daa
repnz
test
mov
adc
add
jg,pn
iret
push
pop
cltd
pop
add
js
mov
test
addr16
std
fnstenv
filds
aad
cmp
ds
repz
test
fcompl
push
xchg
add
mov
adc
in
scas
xchg
or
icebp
dec
cmpsb
push
sub
mov
pop
pop
push
xchg
insl
test
add
ror
mov
sbb
js
mov
test
inc
mov
mov
adc
mov
xor
dec
lret
xchg
add
popf
in
ret
das
icebp
or
push
bound
out
xorl
push
and
lds
jmp
test
jnp
pusha
leave
int3
in
jmp
repz
xchg
mov
rcrl
aas
pop
mov
push
fadd
jno
or
mov
fimull
mov
test
lcall
or
push
test
in
adc
test
push
cmp
hlt
pop
pop
ds
sbb
jl
cmp
scas
test
jbe
cmp
cmpb
stos
mov
mov
scas
scas
shrl
loopne
outsb
je
jp
jne
test
pop
aaa
mov
ljmp
dec
add
aam
repnz
call
lods
mull
aam
add
mov
movsl
testl
mov
pop
inc
push
push
xor
roll
jp
mov
mov
cld
rorb
push
or
jo
lret
rcrl
inc
sbb
jmp
addb
mov
stos
add
pop
dec
mov
dec
or
lock
jp
je
fldcw
pop
jl
push
and
imul
into
sub
aas
nop
daa
xchg
sub
aam
pop
dec
mov
cmp
jge
imul
icebp
pop
inc
mov
or
or
sub
sbb
dec
push
ja
stos
in
lcall
ret
mov
andl
xchg
stos
xchg
sbb
cltd
and
adc
add
or
inc
in
adc
ds
repz
inc
dec
cwtl
cmpsb
adc
jmp
cwtl
imul
iret
pop
cmp
fdivs
out
add
into
hlt
sbb
es
and
mov
push
sub
jb
xor
mov
dec
ds
adc
insl
andl
outsb
testb
jle
push
add
push
xor
xor
pop
mov
mov
sub
clc
jg
lock
add
arpl
dec
lods
pushf
inc
pop
or
cmc
hlt
or
cmp
cmp
fnstenv
int3
sbb
dec
mov
xorl
fldl
in
bnd
mov
dec
rcrl
mov
cmp
daa
stos
pop
cmpsl
out
out
int
int3
lretw
adc
lock
cmpsb
cld
pop
dec
xchg
sub
mov
cmpsb
stos
shlb
loop
loop
jbe
inc
jnp
loop
adc
filds
out
mov
xchg
add
mov
sti
jmp
jb
ficoms
xchg
punpckhbw
xchg
jle
pop
movsl
jp
fbld
lods
icebp
aas
movsl
add
xchg
pop
sub
pop
mov
icebp
ss
or
jnp
jnp
in
es
or
inc
scas
test
cmp
fistl
aam
bound
das
add
adc
bound
and
lock
pop
jg
cmp
lock
xchg
pop
cmp
jb
push
add
test
or
loope
add
mov
repz
pop
cmp
dec
push
out
outsb
or
xchg
lods
imul
sahf
ret
pop
fstps
inc
lods
int
insl
pop
push
jmp
dec
mov
fdivs
in
lcall
popa
imul
add
ja
ljmp
push
push
insb
cs
dec
mov
mov
cld
cmpsb
popf
test
pop
mov
fbld
inc
jl
and
cmp
dec
jl
cld
sbb
movsb
inc
inc
dec
ds
xchg
fnstsw
or
call
mov
cwtl
mov
add
or
in
push
fidivs
push
adc
fcmovnb
cmp
ss
movsl
push
xor
sub
cmc
mov
mov
shl
jl
jne
movsl
iret
xchg
xlat
fsubrl
shlb
xchg
add
inc
or
ds
jmp
sbb
xchg
mov
and
mov
dec
xchg
pop
sub
out
jecxz
xor
mov
push
cmp
stos
xor
or
sbb
es
lret
xchg
pop
xchg
dec
xor
cld
aam
fidivl
cmp
inc
lcall
mov
mov
pop
mov
adc
pop
sbb
jl
add
sub
daa
pop
inc
je
pop
imul
out
cmpsl
pop
test
hlt
dec
mov
gs
cs
je
es
and
jns
call
inc
inc
loopne
jne
cmp
push
orb
add
scas
imul
dec
mov
xchg
xor
xchg
bswap
out
mov
inc
xchg
or
in
loop
inc
or
movsb
adc
lret
jg
leave
cltd
adc
stos
jbe
enter
push
hlt
in
out
enter
mov
xor
fisubs
insl
out
shll
ret
or
xchg
sbb
xchg
sub
js
jecxz
fistpl
stos
cmp
scas
xchg
pop
inc
rep
jne
lret
inc
je
push
adc
repz
pop
add
sub
in
dec
inc
movsb
pushf
ss
mov
imul
xchg
dec
push
xor
cmp
ret
cmp
adc
outsb
xchg
dec
sbbb
scas
sub
inc
cltd
fdivrs
pop
jnp
sub
dec
stc
xlat
es
push
push
outsl
mov
hlt
int
fwait
adc
repz
movsb
bound
pop
push
mov
pop
repz
sbb
jmp
std
mov
clc
nop
pop
inc
adc
out
scas
imul
jae
push
test
incb
jae
in
mov
notl
xchg
or
sub
inc
addr16
int3
mov
das
decl
mov
das
xor
mov
mov
sub
ret
pop
cmpsl
scas
clc
lock
leave
cmp
ss
or
push
inc
cli
mov
in
add
cli
ss
sti
jbe
lods
in
inc
aas
add
icebp
test
fmuls
test
sbb
cltd
mov
jmp
mov
mov
and
push
jl
stc
sbb
adc
push
push
or
lock
jae,pt
pop
call
or
push
into
jo
pop
xchg
nop
cmpsb
push
add
rep
cld
or
xor
jmp
fwait
gs
mov
dec
mov
mov
cmp
xchg
into
or
insl
movsb
in
and
add
xor
cmp
cld
jae
jne
ret
sub
xchg
push
dec
dec
push
or
cmp
fsts
dec
mov
sbb
lret
std
pop
push
xchg
pop
outsb
and
lea
inc
fcompl
fs
loop
sbb
adc
inc
adcb
sbb
and
enter
cld
mov
int3
lahf
addr16
jl
mov
xlat
dec
cltd
bound
ja
inc
pop
cs
out
jge
pop
les
cmp
dec
mov
sbb
push
jne
or
push
rclb
sbb
xchg
rcrb
ja
andl
lds
test
lds
inc
dec
mov
adc
mov
mov
rcrl
sub
iret
inc
pop
mov
mov
or
mov
sbb
adc
loope
push
out
xchg
ret
sbb
bound
int
inc
dec
adcl
xor
and
popf
push
jg
data16
imul
ret
stc
mov
rcrb
sbb
lods
fdivrs
adc
inc
mov
push
out
mov
rcrl
gs
or
mov
xchg
std
adc
mov
cli
cmpsb
aas
cmpsb
mov
push
sub
test
in
add
outsb
pop
aas
adcb
xor
sbb
loopne
repnz
shll
mov
jmp
add
sub
in
cmp
je
cwtl
jno
xchg
pop
movsb
shrl
push
popa
cwtl
push
add
jmp
jno
xchg
cwtl
sbb
sbb
mov
jle
mov
cmp
loop
repnz
dec
popf
pop
hlt
mov
insl
dec
fidivrl
sti
stos
je
aaa
test
mov
xchg
jmp
dec
lods
pop
and
daa
sbb
cmp
lea
ljmp
data16
xor
mov
xchg
or
es
popf
pop
mov
mov
or
leave
rorb
push
jmp
jmp
in
jge
or
mov
inc
sbbl
inc
inc
mov
ss
enter
outsb
stos
fwait
stos
in
movsb
pop
pop
mov
cld
dec
rorl
stc
cmp
out
xor
imul
mov
roll
movsb
jecxz
jg
in
jns
mov
push
ret
dec
mov
jbe
les
scas
divb
dec
xchg
stos
mov
sbb
cmp
sbb
sarl
xchg
add
add
icebp
cmp
and
jmp
inc
lock
inc
movsl
rcll
out
cmp
inc
fmul
repnz
lcall
xor
push
pop
jnp
sub
dec
push
pop
and
je
rcrl
jmp
mov
inc
pop
insb
push
jge
sbb
pusha
leave
movsb
test
adc
scas
push
ret
cmc
mov
enter
jl
ss
inc
push
test
jb
mov
lahf
daa
outsl
lret
pushf
cmc
fistl
out
nop
cmc
and
xor
outsl
sub
cmp
leave
scas
cmp
cmp
or
sub
mov
data16
and
pop
sbbl
xchg
pop
sti
pop
mov
inc
push
lds
dec
xor
adc
arpl
mov
pusha
je
pop
adc
ljmp
rclb
mov
repnz
subl
sub
scas
sub
out
cmpsb
mov
mov
int
fsubrs
int3
cmpsb
cmc
mov
mov
xlat
jo
popf
sahf
jnp
aaa
subb
les
js
sbb
repz
inc
insb
insl
mov
push
into
leave
loope
fnstsw
dec
test
xchg
jno
dec
mov
or
lcall
pop
xchg
pop
and
flds
or
test
cld
cmp
sub
loop
cld
repz
adc
daa
xor
jno
xor
clc
mov
jecxz
outsl
cmp
call
es
insb
inc
outsb
mov
pop
aaa
cld
repz
or
ja
xor
adc
inc
xchg
push
dec
inc
cmpb
sbb
push
pop
mov
ret
mov
and
and
jb
add
inc
xor
push
or
into
add
mov
mov
adcb
and
repz
dec
or
sub
dec
ret
push
xchg
fidivrs
mov
fists
dec
mov
push
sti
xchg
lcall
xor
in
cmp
mov
xor
xor
ss
jmp
add
push
xor
cmp
xchg
mov
leave
stos
mov
and
push
call
jns
into
pop
pop
push
sub
cmp
cmc
rcl
xchg
xchg
ja
shr
and
xchg
jns
movsl
xchg
xchg
sub
inc
movsb
add
cmp
cmpsb
lea
xchg
jmp
cmpsb
in
xchg
and
dec
mov
mov
inc
call
mov
mov
lea
outsl
adc
ficoms
pop
fistps
jne
mov
enter
pop
jb
pushf
dec
int3
pop
addr16
add
mov
sub
mov
aas
rcl
in
add
push
add
adc
and
push
adc
xor
jno
cwtl
xor
repnz
leave
jno
stos
ljmp
fisttpll
cmc
ljmp
pusha
xchg
int3
cmp
nop
pop
xor
dec
dec
icebp
push
js
fwait
adc
jmp
dec
pop
popf
jg
push
jne
aad
push
addr16
out
imul
ljmp
mov
cwtl
mov
subl
mov
lcall
inc
mov
ss
push
lock
jbe
call
pushf
inc
shl
push
aaa
in
test
jg
sub
push
xor
jnp
lret
mov
and
and
lret
mov
fimuls
adc
push
inc
scas
push
popa
lds
vcvtps2pd
popf
rorl
adc
dec
aaa
push
xchg
jecxz
ret
push
jb
or
jl
pushl
dec
test
jns
cmp
stc
pop
add
cmp
mov
jb
jno
inc
sub
lock
cmpsb
repnz
adc
hlt
stos
sbb
push
mov
dec
xchg
call
js
testb
push
out
jecxz
div
insl
jl
mov
pop
test
xchg
std
xor
pop
mov
add
dec
inc
stc
xchg
pop
xchg
jl
mov
xor
jge
loopne
sub
into
es
nop
out
add
push
cli
xor
dec
test
jg
dec
xchg
mov
hlt
out
mov
stos
inc
sub
rcll
mov
push
iret
jb
gs
in
cmp
mul
popf
pop
add
hlt
sub
xchg
inc
add
ret
aaa
fsub
push
enter
inc
sbb
or
lods
repnz
in
jne
xor
push
and
pop
adc
cltd
push
xchg
popa
or
add
lret
aam
sub
and
es
rcll
pushf
or
push
mov
add
bound
cli
add
nop
mov
sbb
mov
jno
push
pushf
xchg
mov
xchg
aam
pusha
gs
add
add
or
call
sbb
test
and
add
dec
lahf
les
mov
dec
mov
mov
test
or
jno
mov
inc
insb
lret
dec
pop
sub
movsl
cmpsb
cwtl
and
push
xlat
data16
add
es
sbb
lods
sub
mov
out
stos
aad
inc
outsl
push
xor
sbb
movl
or
dec
fwait
xchg
fs
or
cmpsb
and
mov
leave
adc
leave
mov
test
enter
int
sbb
mov
push
xchg
sarl
jg
loop
test
lahf
jl
jmp
xchg
fisubrs
loopne
lds
and
mov
mov
lea
dec
outsb
lock
sub
adc
sbb
lcall
sub
cmp
lahf
sbb
cmpsb
shl
or
dec
or
icebp
dec
add
leave
and
jno
scas
mov
les
dec
sub
imulb
jl
mov
mov
push
cmp
out
push
pop
faddl
add
xchg
in
sti
pop
push
cmp
and
inc
loopne
lods
jnp
out
in
jbe
fnstenv
into
imul
divb
cmp
sbb
cwtl
bound
stos
pop
sbbl
rcr
sub
mov
jg
movsb
pop
cld
lds
pop
and
cltd
mov
dec
dec
xor
mov
adc
hlt
jmp
inc
lods
into
sbb
inc
ljmp
mov
std
adc
xor
call
nop
in
rcrl
lahf
ja
dec
loopne
sahf
out
mov
inc
imul
ret
fldl
push
cmp
or
stos
icebp
call
popf
xor
decl
sbb
pop
pop
xchg
inc
into
mov
or
pop
imul
xor
repnz
dec
scas
pop
mov
jl
mov
dec
pop
push
hlt
xchg
mov
mov
sarl
pop
arpl
fsubl
push
jg
mov
jecxz
inc
sub
movsw
mov
cwtl
jmp
ja
push
or
push
stos
loop
xchg
pop
test
xor
fidivs
add
je
test
push
cmp
mov
push
lret
leave
cmp
add
int3
aas
jns
xor
cli
pop
pop
jne
in
add
cmp
mov
rorl
jbe
repnz
test
stos
lods
arpl
rcrb
rorb
jo
mov
jno
push
adc
ret
or
ljmp
dec
nop
and
or
mov
or
adc
xchg
jmp
sahf
add
fcoml
out
sub
jb
ror
hlt
stc
outsl
inc
bound
jp
in
call
iret
les
pushf
inc
mov
testb
cwtl
outsl
in
mov
mov
mov
shl
test
jns
test
adc
lea
jl
sahf
std
mov
ljmp
es
test
into
or
sub
popf
dec
xchg
pop
pop
jbe
jnp
aas
leave
arpl
push
scas
push
mov
jge
out
jns
out
cmp
int3
addr16
xchg
mov
pop
bound
and
push
pop
sub
fistpll
xchg
ss
inc
adc
or
pop
mov
xor
repz
push
test
mov
xor
push
outsl
orb
mov
mov
pop
call
ds
pop
sbb
in
in
sbb
pusha
push
sbb
andl
dec
push
das
mov
fwait
or
inc
xor
je
in
push
loop
fs
push
js
mov
cs
enter
push
mov
nop
js
in
movsb
mov
cmp
dec
mov
adcl
jge
mov
jmp
outsb
call
mov
mov
cmp
mov
outsl
mov
aas
inc
jecxz
cmc
repz
test
push
push
xor
pop
sbb
clc
inc
push
and
fistps
hlt
jmp
dec
and
sub
pop
loop
mov
adc
gs
inc
push
mov
sar
sbb
mov
xchg
mov
sub
sbb
divb
jp
loop
lds
int
or
mov
pusha
aas
push
arpl
adc
and
mov
in
jp
mov
pushf
out
std
ljmp
jno
aam
out
je
daa
fsts
loop
inc
xchg
and
xlat
lods
lret
lahf
repnz
push
add
xor
and
repz
xlat
rorb
inc
add
in
mov
out
rorl
in
dec
dec
movsb
enter
mov
insb
jmp
pusha
sub
inc
push
repnz
dec
sub
push
inc
mov
ret
or
cmc
imul
xchg
dec
aam
inc
into
sbb
or
add
fldl
jbe
cmpsb
mov
loope
loope
in
pop
xchg
mov
push
jne
and
js
fildl
call
xchg
ds
ljmp
fs
mov
into
iret
sbb
xor
xor
dec
mov
push
mov
cmpsl
jge
pop
xorl
pop
clc
outsb
mov
lods
sbb
xor
cmp
cmp
ljmp
pop
sub
dec
pop
ffreep
movsb
test
and
stos
dec
jmp
push
out
mov
xor
in
es
adc
fidivs
xchg
xchg
add
or
mov
repz
int3
push
inc
xor
mov
into
inc
adc
push
xor
lahf
loopne
stos
or
inc
int3
add
fwait
inc
das
jmp
enter
fdiv
les
scas
jg
xchg
hlt
sbb
jno
or
pop
lret
xchg
mov
add
sahf
mov
insb
push
and
push
js
and
and
sbb
cmp
bound
or
cmc
jo
movsb
mov
adc
or
in
popf
scas
mov
cmpsl
sti
inc
sub
js
xchg
lea
leave
jmp
mov
inc
and
imul
pop
clc
mulb
pop
loop
add
subl
pop
adc
mov
xchg
push
mov
or
stc
mov
imul
xchg
xchg
xchg
fs
mov
aas
lret
mov
dec
mov
cltd
out
xor
add
jmp
mov
insl
push
les
jae
or
pusha
out
sbb
mov
add
or
and
and
das
add
arpl
pusha
or
or
aas
add
push
lea
pusha
mov
mov
xchg
jecxz
repz
mov
cmp
and
out
xchg
mov
jns
in
mov
adc
cmp
inc
mov
rcrb
sahf
lret
mov
cmp
pop
xchg
push
push
int3
dec
mov
mov
shl
xor
cmp
cmp
sub
mov
idivb
out
or
cs
call
out
repnz
mov
inc
pop
dec
stc
xchg
cmp
sub
mov
mov
es
cmc
and
sbb
and
bound
or
scas
fwait
mov
popa
rclb
mov
sarl
insb
or
adc
mov
push
mov
inc
repz
jns
jnp
xchg
addr16
mov
rorb
rcl
scas
insl
movsl
sahf
cmc
int3
xchg
cmc
loope
add
mov
aad
sub
jo
lock
mov
call
pop
lcall
xchg
sbb
out
out
jp
sahf
xor
cs
fsubrp
out
and
mov
notb
cmp
aas
fwait
adc
or
jmp
mov
add
jne
fsubrs
mov
pop
pop
lea
pop
and
out
sbb
lods
int3
out
je
movsl
sbb
cmp
xchg
mov
lods
sbb
dec
push
test
sbb
fisubs
stos
cmpsb
jmp
xor
adc
dec
xor
xchg
pusha
dec
in
push
inc
test
adc
sub
mov
jge
hlt
inc
lret
loop
xor
movsl
inc
jnp
int3
jbe
jns
cmpsl
out
pop
pop
inc
or
fst
xchg
rcrb
stc
cmc
mov
or
ror
addb
cmpsb
mov
andl
push
jmp
movsb
jmp
cli
and
jbe
pop
fldenv
xchg
ss
addl
rcrl
hlt
xchg
out
faddl
or
push
xchg
stos
fisttpl
sbb
mov
mov
in
movsb
out
repz
push
fs
test
mov
hlt
mul
daa
jbe
xchg
lahf
scas
adc
xchg
scas
cli
pop
jno
daa
adc
push
sub
cmp
ret
pop
fistpll
mull
and
inc
sbb
dec
je
add
sbb
add
jp
pop
mov
jb
inc
xchg
add
aam
mov
or
jae
jl
mov
and
clc
lea
cltd
inc
stos
rcr
rcl
push
test
sbbb
and
or
push
adc
stos
adc
repnz
fstpl
shl
daa
add
ljmp
mov
cmp
jno
jb
cmpsl
dec
xor
mov
cwtl
xor
lea
out
das
xchg
pop
push
adc
mov
addr16
fdivs
mov
int3
or
fnstenv
adc
adc
cmp
and
movsb
dec
mov
dec
jg
sti
jno
jbe
cmp
bound
pop
cld
fidivrl
fnstsw
add
stc
mov
stos
lahf
stc
and
inc
pop
sub
out
mov
fsubrs
inc
dec
mov
hlt
in
mov
sbb
movsl
or
test
xchg
daa
dec
jnp
std
dec
aaa
mov
jne
and
aas
or
push
out
aad
fucom
sbb
stos
pop
stc
sbb
xchg
adc
cli
xor
jmp
neg
fstpt
adc
ja
call
push
shrl
mov
push
rcll
and
push
dec
gs
push
sub
add
int3
push
jae
pushf
push
adc
dec
push
es
fnstsw
sbb
xor
pushf
aas
mov
mov
push
inc
sub
mov
pop
mov
mov
test
add
push
xor
loope
insb
insb
sub
outsl
xor
xchg
mov
stos
mov
jno
nop
cmp
in
push
adc
fs
and
lds
mov
mov
scas
mov
jge
out
push
movsl
cmp
pusha
inc
pop
xor
sbb
pop
pop
lea
pusha
movsb
jno
jbe
adc
fcmovb
addb
jbe
push
jecxz
test
lds
push
mov
in
push
xchg
dec
xor
push
enter
inc
xor
inc
and
push
sti
jo
pusha
pop
jmp
adc
std
scas
xchg
jbe
mov
shlb
jno
push
popa
jle
call
nop
fs
fdivrl
dec
cmp
cmp
fimuls
icebp
inc
out
sbb
dec
and
mov
inc
fstpl
cmc
sbb
sahf
test
lcall
mov
ja
cmc
jae
sub
lret
neg
shl
scas
mov
lret
pop
sub
cs
pop
jns
adc
dec
xlat
inc
imul
or
jne
jne
rclb
inc
call
jle
mov
stos
sub
or
je
xchg
insb
push
xchg
pop
ja
fidivrs
mov
mov
dec
mov
sbb
sbb
xor
pop
sti
stc
cmp
adc
scas
mov
ja
mov
push
dec
in
or
sub
movsb
imul
cmp
mov
movsb
and
and
mov
loope
jl
xor
cli
mov
xor
mov
fnstcw
sub
mov
scas
push
xlat
inc
stc
mov
lcall
ficoml
imul
nop
dec
aaa
xchg
mov
jp
jae
sub
mov
jbe
fwait
aam
and
or
push
fwait
xor
in
mov
movsb
add
adc
and
subl
in
cmp
mov
in
sub
pop
sahf
mov
into
mov
mov
in
lods
test
mov
sub
add
insb
in
and
je
scas
int3
or
hlt
nop
xchg
sub
xchg
jnp
es
cmp
xor
repnz
mov
lods
xchg
mov
nop
dec
dec
xchg
cmc
dec
fwait
pushf
sbb
nop
js
or
sbb
mov
test
clc
jmp
mov
xchg
add
cmp
iret
mov
sbb
xor
cmp
mov
into
js
pop
cmp
xchg
adc
daa
ret
xor
push
cmp
and
mov
xor
aaa
shlb
dec
ds
fmul
testl
iret
xor
popa
pop
hlt
and
xor
mov
out
int3
repnz
xchg
mov
add
filds
sub
ret
dec
pop
cmp
out
and
pop
xlat
mov
mov
movsl
lcall
push
data16
in
jnp
andb
movsb
push
rorl
mov
or
movsb
push
ret
mov
aas
pop
push
adc
gs
inc
cmpsl
stc
mov
repz
xchg
aam
out
je
ret
movsb
jbe
add
lock
mov
lods
in
mov
adc
add
ret
iret
sub
mov
and
jno
mov
cs
ja
and
ss
addr16
aam
test
inc
int3
sub
or
ret
sub
jmp
shl
or
cmp
call
ja
push
cmpsb
cltd
insl
mov
sbb
stc
sahf
lcall
jae
cmpl
push
stc
insb
cmpsb
pop
xor
andb
sub
inc
push
shll
sbb
nop
cltd
in
mov
shlb
or
out
jbe
inc
sbb
mov
xor
sub
pop
aad
mov
inc
push
sbbb
in
jecxz
int3
mov
and
sbb
xchg
movsl
xchg
push
scas
ss
xchg
orl
mov
mov
pop
pusha
idivb
or
inc
mov
fsubr
push
js
cs
ret
in
addr16
mov
aaa
xorl
xor
mov
mov
notl
lock
pop
std
out
mov
push
pop
cmp
cli
jnp
push
ret
sahf
inc
mov
ret
enter
lods
mov
stos
cltd
cmpsb
mov
fsubrs
pop
pop
cmpsb
xchg
and
ljmp
sbb
mov
push
rcl
xchg
es
int3
js
scas
jo
jo
and
aad
clc
hlt
fwait
std
cmp
lea
cmp
aad
cltd
imul
outsl
movsl
mov
je
dec
jp
cmp
jo
xchg
dec
aas
test
ja
and
jo
sbb
xchg
rcr
inc
mov
icebp
and
das
data16
scas
adc
xchg
fsubs
jmp
dec
sbb
push
mov
adc
cltd
mov
es
mov
dec
xorl
lret
fmuls
sub
mov
jno
lcall
pushf
repnz
jg
jae
shlb
xchg
aam
sahf
js
data16
in
jp
push
imul
pop
or
outsb
or
lgs
pop
add
insb
or
push
pop
and
adc
insb
int3
addr16
mov
in
mov
add
mov
sub
push
cmp
icebp
mov
push
ss
adc
dec
daa
inc
xchg
mov
mov
subb
outsl
stos
aad
dec
sbb
push
sti
adc
into
dec
xchg
mov
dec
push
adc
adc
cmp
js
lret
xchg
mov
adc
sub
sbb
test
inc
dec
das
jge
xchg
rorl
pop
lds
shrl
dec
mov
loopne
in
out
cli
adc
push
fiaddl
daa
push
sbb
inc
fwait
jl
jb
add
or
lock
add
jmp
push
sub
pop
int
xchg
scas
lret
aad
ds
adc
mov
scas
mov
sbb
lods
push
xor
cwtl
dec
dec
cmpsl
mov
cmp
stos
and
ret
add
out
push
lea
mov
jne
lcall
adcl
mov
cwtl
mov
jp
inc
xorl
pop
mov
or
dec
xchg
xor
lcall
inc
fistpl
and
cld
es
ret
ja
push
xchg
pop
inc
jae
jmp
fwait
or
xchg
pop
into
test
aaa
cmpsb
sarb
dec
js
out
ss
stos
out
jnp
dec
pusha
dec
xor
js
push
push
lods
sub
jl
push
inc
dec
and
jb
enter
push
push
pop
sub
adc
ret
mov
mov
sbb
mov
sarl
call
aas
cmc
xchg
lods
icebp
addr16
outsl
xchg
and
add
mov
or
inc
sub
fs
aas
inc
and
arpl
mov
push
cmpsl
loopne
popf
cmp
out
out
clc
push
rcr
pop
repz
int3
push
mov
repnz
pusha
ss
outsl
mov
mov
and
icebp
addl
rorl
and
pop
mov
int
mov
mov
out
mov
jno
inc
jo
aaa
dec
xchg
out
cld
inc
or
cltd
and
scas
inc
and
xchg
jmp
call
pop
jge
je
add
iret
cmpsb
ja
dec
push
mov
sahf
sub
nop
mov
push
xor
test
dec
dec
popa
cmp
pop
inc
add
mov
fistps
outsl
aaa
push
inc
pop
or
lahf
adc
ret
in
xor
mov
jp
cmpsl
pop
push
repnz
pop
scas
mov
movsl
mov
or
int
and
mov
xlat
negb
sti
cmp
cld
sub
jl
enter
ds
scas
add
mov
ret
into
sub
fisubs
lock
cld
insl
mov
jns
or
nop
push
mov
mov
fisubs
loope
sbb
push
incb
fists
movsb
jle
mov
mov
cmp
test
sub
insb
or
sbb
int
jmp
sub
cmp
std
push
xchg
push
orb
dec
cwtl
inc
loop
ds
andb
pop
adcl
ret
push
xchg
pop
aad
lret
scas
stos
inc
pcmpeqd
aam
and
or
ljmp
xor
mov
imull
movsl
push
pop
jg
mov
int
rorl
lret
push
call
add
lret
std
cltd
mov
jae
icebp
mov
mov
movsl
xor
andl
andl
and
jnp
rorb
mov
pop
aam
andb
sub
adc
je
sbb
notb
es
adc
inc
out
jmp
stos
lods
push
dec
iret
sub
aam
xor
sbb
stos
cmp
movsb
sbb
inc
pop
pop
repnz
fbstp
in
dec
in
in
cmp
cmp
add
jns
arpl
jns
adc
push
das
popf
pop
xchg
es
inc
fsubl
aaa
mov
jo
jae
or
fs
orl
jle
jae
push
cmp
xchg
stos
sub
xchg
push
or
aaa
adc
adc
ljmp
adc
push
sub
outsl
ss
fcmovbe
push
pop
cmpsb
out
lds
jg
and
adc
xor
pop
mov
imul
sahf
jge
push
push
popf
cmp
mov
jp
sarl
sub
aaa
mov
popa
sahf
loop
lret
lret
push
call
repnz
push
imul
xchg
pop
mov
pusha
jecxz
and
popf
mov
lcall
out
sarb
data16
lea
inc
xchg
js
pop
ja
js
fiadds
push
mov
pop
lods
cltd
sub
pushf
mov
xor
jmp
stos
test
jg
dec
shlb
inc
push
adc
xchg
inc
gs
push
adc
push
xchg
and
shl
sahf
push
fstpt
fldcw
ret
ret
ds
fs
mov
loopne
jbe
rol
adc
insl
into
idivl
cmpsb
cmp
push
sbb
movsl
xchg
in
or
xlat
adc
xor
jnp
mov
fildl
leave
jmp
lods
mov
or
mov
pop
popf
xor
loop
test
imul
dec
lcall
jnp
mov
adc
xchg
and
cli
cwtl
unpcklps
sbb
popf
nop
adc
lods
inc
push
dec
data16
pop
push
lcall
ffreep
and
int
insl
push
sti
das
dec
and
stos
xchg
sub
push
aas
rcrb
js
and
push
orl
ficomps
or
in
fdivrs
popa
sbb
int
xchg
sub
sbb
js
fs
test
and
xchg
mov
test
js
and
cmc
pushl
popf
test
add
xor
in
adc
or
movlps
pop
mov
sbb
hlt
jo
pop
insl
sahf
leave
out
mov
lods
and
sbbl
aam
push
cli
or
std
pushf
or
popa
filds
dec
mov
rep
js
xchg
cmp
mov
xchg
inc
pop
ret
andl
pop
add
mov
jns
push
push
cmpsb
or
jg
mov
fidivs
scas
jge
pop
jp
adc
inc
xchg
jae
mov
idivl
cmp
pop
ffreep
sbb
cltd
stc
or
mov
jmp
jbe
repnz
sbb
xchg
daa
adc
dec
mov
int3
notl
addb
test
mov
jl
rcr
in
push
xchg
mov
in
imul
push
jecxz
dec
inc
lock
arpl
aaa
mov
stos
loope
mov
xchg
addr16
cld
add
mov
mov
sar
popa
sbb
or
mov
lret
rol
inc
ficoml
xchg
sub
sti
jecxz
or
jne
js
cmpsb
push
xchg
dec
xor
iret
adc
sti
xchg
setno
adc
fwait
mov
addr16
jp
mov
shll
lods
fdivrl
jg
cmp
push
mov
scas
icebp
repnz
movsb
mov
fisubrs
xor
outsb
into
jecxz
sahf
iret
fmul
rcrl
mov
test
push
xor
and
int3
gs
pop
push
insl
adcb
mov
cmpl
roll
js
lret
sahf
int3
sub
enter
add
or
push
ss
sbbl
out
inc
push
lret
xor
adc
ret
lods
int
add
cmp
in
outsb
icebp
xchg
enter
and
addb
push
cmc
or
mov
cwtl
aas
fists
test
insb
shrb
pop
push
dec
and
cmp
push
pop
rorb
nop
mull
subl
loopne
mov
xor
shll
aad
fistps
xchg
nop
rcll
in
inc
outsl
push
and
fs
lock
pop
shll
push
adcb
bound
test
mov
lock
adc
cld
add
xor
lods
mov
xor
out
test
test
jns
mov
scas
inc
adc
inc
and
dec
lahf
lods
cwtl
sti
xchg
push
pop
sub
daa
dec
cmp
inc
adc
pushl
sub
cli
out
sbb
lret
mov
rcr
data16
jge
or
lods
lods
mov
jae,pn
xchg
arpl
ljmp
stos
or
rcr
movsb
jnp
or
mov
setb
cld
cmp
dec
fldcw
jg
sbb
cmp
gs
fcom
test
inc
popf
inc
popa
jno
mov
ljmp
lea
rol
in
mov
in
mov
in
or
mov
and
push
xor
cmp
cwtl
test
into
addb
push
sub
inc
cwtl
sbb
ljmp
jbe
mov
lcall
in
adc
mov
lahf
jbe
lods
xchg
add
cli
data16
sub
mov
push
adcb
jg
add
sarl
lcall
push
jns
xlat
mov
push
cmp
add
pop
jp
sarb
ret
frstor
dec
xchg
cwtl
lret
lds
dec
mov
cli
icebp
leave
andl
cmp
xchg
dec
out
xor
and
fimull
add
jae
aas
push
mov
cmpsb
stos
mov
sub
jne
jae
bound
sub
repz
lahf
daa
lahf
out
or
std
shl
mov
cld
call
andl
xchg
or
cltd
negb
cmpb
cltd
loope
mov
sti
xchg
lds
pop
sub
xchg
adc
imull
imul
xor
dec
xchg
out
out
add
leave
aam
add
subl
iret
dec
aam
fs
in
outsb
mov
pop
xchg
andb
push
mov
xor
lock
fistpl
mov
in
test
daa
call
stos
imulb
mov
pusha
xor
iret
cmp
cli
mov
inc
das
jbe
cld
sbbl
pushf
or
pop
in
or
push
insb
mov
adc
and
jno
insl
mov
xchg
or
adc
call
outsl
adc
jecxz
push
xor
outsl
loopne
loop
mov
push
cmp
jg
mov
frstor
jmp
pop
sbb
jo
lret
imul
xor
push
mov
enter
sti
ljmp
je
jns
pop
loope
popa
xor
js
sbb
adc
inc
lds
cmpb
loope
pop
jo
cli
cmp
addr16
jns
testb
or
cmpsb
fwait
inc
jns
jg
jbe
bound
xchg
test
punpcklwd
mov
andl
mov
push
xchg
xor
push
add
mov
mov
cmpsl
mov
roll
cmpsb
arpl
roll
jle
rorl
rcrl
das
leave
out
mov
jne
scas
test
push
push
into
xor
jae
bound
bound
fimuls
ds
jae
mov
test
jnp
lock
jl
dec
sub
out
fldcw
mov
mov
roll
push
mov
sbb
int
sub
test
sbb
jae
cmc
xchg
xchg
adc
and
xchg
jmp
ds
jnp
cmpb
pop
sbb
arpl
cmp
fsubl
iret
or
add
repnz
in
ficoms
loope
jl
pop
icebp
xor
pusha
out
adc
pop
ror
fisubrl
push
pop
outsb
jg
data16
xchg
pop
fistps
mov
test
sbb
clc
ljmp
bound
or
out
div
or
and
sbb
cmp
pop
sub
loopne
das
mov
jge
push
xchg
mov
out
lret
int3
out
dec
cltd
push
jp
xchg
mov
xor
pop
stos
xor
int
lods
xor
aaa
outsl
pop
call
cmp
cmp
popf
pop
enter
xor
lret
paddsb
and
jae
iret
dec
xchg
bound
popf
outsl
push
dec
mov
and
fmull
sbb
cmc
ror
adc
sbb
xchg
ss
arpl
xlat
ja
pop
push
iret
sub
xchg
dec
mov
jo
outsb
cmp
outsl
nop
mov
fs
popa
jnp
ja
popa
pop
insl
notb
push
add
sub
insl
jp
mov
faddl
js
adc
or
notb
gs
xchg
sub
dec
push
hlt
cwtl
insb
clc
mov
test
addb
ss
or
xor
lds
fwait
jo
movsl
dec
push
insb
push
cmpsb
andl
hlt
mov
lods
arpl
scas
mov
and
cmp
jmp
dec
or
pop
jge
push
out
inc
fs
mov
mov
mov
daa
notb
xchg
adc
xor
dec
fcomi
cmpsl
mov
daa
mov
pop
shlb
mov
es
and
ret
daa
xor
pusha
int
jmp
sub
adc
repnz
fidivl
push
or
repz
jp
pop
popa
or
push
ja
cmpsb
das
push
nop
or
inc
mov
sub
pusha
mov
dec
mov
stos
imul
lock
xchg
mov
out
jg
mov
scas
arpl
jmp
xlat
aad
xchg
jbe
dec
adc
add
lret
mov
cmp
jbe
adc
imul
mov
rolb
jle
lahf
imul
scas
jmp
ja
gs
pop
rcl
or
inc
daa
mov
mov
call
sbb
adc
adc
fwait
xchg
or
mov
out
push
faddl
sub
or
fcoms
popa
insb
sub
sbb
inc
and
sub
arpl
push
cmp
pop
xchg
aaa
minps
mov
pop
cmp
add
jl
mov
push
aaa
rorl
mov
daa
push
inc
in
sub
sbb
rorb
jae
add
mov
and
ficomps
stos
inc
cmp
loope
aam
std
shll
idivl
test
scas
jmp
inc
pop
mov
std
out
ret
pushf
sar
test
pop
xor
aas
sbb
pop
aam
add
shrl
aaa
push
aam
sti
mov
fdivl
enter
sar
mov
and
mov
cmpsl
test
or
aas
stos
sub
push
std
dec
xchg
fldl
sub
jnp
and
add
dec
outsb
or
idivl
dec
mov
xor
fmul
xchg
dec
pop
dec
jae
xchg
sahf
notb
pop
ret
and
xor
insl
das
cmp
jo
imul
xor
push
sarb
ljmp
subl
push
in
push
cmpsb
movsb
xor
mov
pop
mov
js
jl
add
push
enter
pushf
in
jne
adc
movsb
adc
add
aam
mov
in
dec
xchg
gs
sti
in
js
or
jo
loop
push
xchg
lods
jge
es
jne
sbb
xchg
cmp
mov
or
rcll
adc
add
ja
out
es
mov
cld
stc
mov
jno
je
sbb
std
je
pop
pop
pushf
ret
inc
add
pop
mull
out
xchg
std
cmp
sub
sahf
pop
imul
cli
ret
and
xchg
push
xor
and
xor
mov
sbb
sahf
push
int
pop
test
inc
scas
mov
mov
push
xchg
iret
or
push
pop
jl
out
insl
fcmove
jns
rcrl
sarl
pop
xorb
sbb
loop
mov
loopne
sbb
jb
loope
jl
stc
adc
xchg
push
addb
jl
aas
mov
xor
mov
add
aad
cmpsb
add
inc
lret
mov
xchg
outsb
clc
stc
xchg
scas
cmp
jo
gs
add
stc
inc
jae
dec
cmp
ficoms
adc
dec
mov
dec
adc
sub
pop
and
xchg
dec
mov
or
bound
push
push
fdivl
and
out
lea
and
pop
jae
sarl
and
imulb
lods
out
sahf
inc
aam
mov
mov
out
cwtl
cli
push
or
push
dec
mov
decb
and
mov
stos
test
sbb
inc
ret
inc
fistl
dec
xor
xchg
adc
pop
loope
add
or
push
adc
mov
es
dec
mov
movsb
inc
xchg
sub
fnstenv
test
std
mov
mov
mov
lcall
and
lea
or
inc
mov
pop
movsl
lock
and
mov
daa
das
mov
pop
jne
jne
mov
lods
jo
xchg
outsl
xor
or
not
mov
push
arpl
sub
fdivrl
mov
pop
bound
add
mov
mov
subb
cmp
loopne
mov
xchg
jp
addb
mov
fsubs
popl
mov
mov
shll
or
lea
mov
imul
xor
mov
mov
loope
arpl
xor
cmp
ret
dec
cli
or
xchg
jnp
mov
and
cmp
in
sti
sub
jg
mov
cmpsl
in
add
and
jns
call
outsb
int3
fwait
sub
cmc
add
loopne
cwtl
outsb
jne
adc
fistps
enter
andb
push
mov
pop
data16
lcall
sbbl
int3
pop
cmp
and
daa
xor
repz
repnz
mov
pushf
aad
dec
and
lds
sbb
jecxz
lea
jge
push
push
xor
jge
pop
out
gs
fcmovu
leave
icebp
cmp
in
imul
ljmp
mov
dec
outsb
scas
in
pop
ficompl
lds
cmp
je
cmc
sbb
sbbb
das
hlt
fstpt
in
insl
notb
loop
movsl
or
cmp
sarl
adc
jecxz
test
shll
push
dec
mov
and
cmpl
lock
jne
cli
aas
lret
push
in
adc
inc
dec
lahf
insb
mov
dec
cmpsb
loopne
xor
movsl
or
adc
xchg
cmp
in
adc
hlt
xchg
xchg
repnz
loopne
cmp
pushf
push
movsb
xor
fsubr
mov
sbb
cld
push
cltd
inc
jbe
mov
jle
mov
dec
push
pop
shld
aam
lods
fwait
mov
outsl
add
sbb
cmp
imul
lods
ljmp
pusha
adc
out
js
aas
pop
fnsave
dec
enter
stos
push
or
outsb
mov
dec
insl
xor
int3
lock
adcb
sarb
push
dec
push
stos
dec
fsubrs
rcrl
in
daa
arpl
and
add
arpl
pop
mov
or
inc
aam
add
jl
popa
sub
mov
mov
xchg
pop
sub
lods
xchg
push
push
sbbb
mov
xlat
jo
xchg
cmpsl
sub
stos
adc
mov
xchg
cmp
popf
xor
jae
jo
add
jnp
sbb
ljmp
pop
and
inc
push
mov
rcrl
mov
dec
pop
sti
jno
pop
repnz
jo
das
repz
ret
jno
jmp
arpl
sbb
jg
out
fadd
xchg
xor
pop
setle
arpl
mov
popa
addr16
xor
sub
jl
inc
and
sub
push
fmuls
cli
test
jp
inc
inc
pop
scas
dec
fdivs
jmp
mov
mov
xchg
pop
mov
icebp
in
push
shl
out
inc
mov
out
out
cmp
cmpl
pushf
dec
jecxz
addl
inc
daa
jne
adc
ficomps
push
xchg
sbb
stos
cs
mov
out
ljmp
rcll
sub
add
lahf
imul
mov
cs
ja
add
aas
loopne
cld
movsl
test
pushf
fsubl
dec
mov
outsl
lret
dec
dec
xor
sti
scas
cmp
dec
xchg
ja
mov
das
xchg
xorl
out
push
out
movsl
scas
inc
movsb
jl
push
push
lahf
out
lret
daa
xorl
arpl
in
inc
fisubrl
stos
fucomp
and
mov
int3
int3
repnz
cmp
push
out
test
ds
jne
jb
xchg
rol
scas
lea
adc
call
or
fbld
outsl
xchg
negb
or
and
popf
pushf
int3
pop
shl
inc
shll
out
rorl
fdivs
push
cmp
cmp
and
outsl
cmpsb
ret
out
or
push
push
loop
and
pushf
sub
or
push
cld
repnz
add
mov
insb
ds
adc
sub
aas
mov
xchg
mov
fs
cmp
mov
mov
insb
cli
cmp
adc
push
xchg
ljmp
mov
int
push
rol
popl
fstpl
in
sub
xor
dec
mov
sub
insl
add
push
sub
mov
adc
inc
std
pop
mov
mov
mov
cld
stc
lds
inc
out
ljmp
jns
mov
gs
sahf
jno
inc
adc
adc
mov
mov
pop
into
shl
and
jae
adc
mov
adcb
push
sub
roll
mov
movsl
addl
fcoml
test
testl
xor
imul
jae
or
mov
lea
lcall
sar
inc
in
je
add
cmp
inc
inc
test
or
push
xor
fidivrl
push
xor
sbb
fisttpl
adc
adc
stc
repnz
lret
xchg
pop
dec
push
scas
mov
nop
lret
mov
idiv
arpl
cwtl
ret
mov
pand
pop
jl
inc
pop
leave
dec
clc
xor
push
push
push
sub
add
jo
pop
repz
fcmovnu
and
push
add
dec
jge
jecxz
xchg
btc
pop
mov
lcall
cmpsl
aas
pop
leave
xor
sub
cmpsl
xchg
mov
ss
in
adc
aas
pop
repz
mov
sti
or
pop
mov
add
lods
or
pop
push
jle
call
mov
lds
jge
mov
in
fwait
inc
ret
pusha
cmp
shll
xchg
xchg
aas
push
jns
dec
dec
cmp
mov
xchg
leave
xor
nop
xchg
add
scas
shrb
std
jae
cli
loopne
test
sbb
ficompl
fs
repnz
inc
fidivrl
adc
xchg
shrb
add
cli
int3
inc
inc
mov
or
roll
jp
je
pushf
imul
shr
inc
scas
cmp
pop
sbb
jnp
cld
in
andl
pop
push
ss
iret
jae
mov
les
fldenv
pop
aad
pop
adc
fucom
inc
dec
mov
jbe
adc
cmp
test
arpl
pop
xorb
gs
dec
cld
xchg
int3
pop
mov
mov
push
inc
lret
cmp
mov
cmp
daa
sbb
call
lods
add
adc
data16
loop
pop
inc
in
stos
xor
cmp
enter
je
lahf
adc
mov
cmp
pop
out
ljmp
out
push
pushf
pop
mov
ss
stc
and
push
push
mov
aaa
stc
or
mov
imul
push
outsb
xchg
jns
adc
insb
inc
dec
out
cmp
mov
clc
add
repnz
cmpsb
lcall
test
mov
cmp
push
cmp
push
lahf
cltd
cmp
andl
mov
aas
test
cmc
cwtl
das
jecxz
cmp
jle
loopne
js
jnp
mov
ss
daa
std
sub
inc
adc
push
inc
pop
fildll
xchg
pop
pop
push
jno
sub
enter
cmpsl
mov
jnp
push
dec
sub
xor
xchg
repnz
lock
aas
imul
cmovl
xor
pop
xor
cmp
dec
sub
mov
xlat
push
inc
repnz
rcrl
stc
or
jg
call
push
gs
lock
enter
xchg
mov
sarl
test
addr16
imul
rcrb
bound
push
add
fyl2xp1
jo
xor
scas
inc
pusha
push
or
push
xor
imul
das
add
scas
adc
paddsw
xchg
mov
testl
es
mov
scas
xor
push
insb
mov
fmulp
cmp
sbb
aaa
mov
ljmp
mov
fisubrl
movsl
hlt
xor
mov
ret
lret
push
add
popf
cmp
sub
inc
pop
sbb
mov
cmp
mov
xor
sbbb
jo
and
stc
jmp
and
dec
sub
sbb
adcl
mov
push
cmpsl
into
inc
scas
int3
lret
lahf
gs
push
or
and
stc
call
mov
or
mov
sub
ljmp
xor
mov
or
je
xchg
inc
movsl
pop
addr16
jno
les
jmp
inc
dec
sbb
dec
lock
daa
movzwl
push
movsb
sarb
int
xchg
mov
lods
aad
bound
xchg
xor
xor
hlt
pop
rcr
cld
mov
and
ret
jae
mov
jns
jne
push
cs
mov
aam
jg
mov
pop
push
mov
inc
or
outsl
jbe
sub
pushf
xchg
dec
sub
adc
repz
xor
sub
test
mov
imul
dec
and
jbe
loopne
loop
cmp
insl
in
jge
push
imul
jno
xchg
jnp
sbb
or
pop
mov
mov
sub
and
rorb
cli
nop
add
rcrb
pop
mov
lods
inc
dec
idivb
inc
adc
cmp
xchg
frstor
cli
sub
in
pop
push
mov
or
mov
movsl
outsb
fbstp
push
test
mov
addr16
pop
out
sbb
sarb
or
xchg
hlt
or
xchg
aaa
push
or
xor
mov
aam
les
sub
sub
out
mov
rol
es
enter
int3
sbb
dec
and
ljmp
and
testb
adc
xchg
jg
pop
push
cmp
out
push
mov
mov
call
push
aaa
xchg
je
fistps
aas
add
fs
lahf
dec
iret
cmp
dec
add
adc
popf
sti
jb
dec
inc
popf
sub
push
scas
or
pop
testl
outsl
inc
mov
in
test
fidivl
insl
xor
sub
jg
mov
sub
in
in
test
jb
mov
and
test
imul
sbb
fwait
xor
arpl
fadds
pop
adc
and
and
cli
adc
mov
inc
push
fsubl
xchg
add
fwait
mov
xchg
out
sub
mov
pop
rolb
fistl
or
aam
pop
sub
decl
sbb
lds
outsb
aas
mov
dec
imul
outsl
jp
xor
mov
icebp
sub
xchg
jno
hlt
cmpsb
xchg
mov
sbb
ss
push
dec
pop
out
xchg
pop
sgdtl
mov
add
mov
and
lea
loopne
inc
add
mov
out
cltd
test
mov
testb
pop
cmc
pop
and
lret
xchg
stos
xor
or
mov
jmp
mov
cmc
lret
xor
sub
divb
and
mov
adc
cmp
or
loope
addr16
sub
std
fmulp
jnp
dec
lcall
push
lret
inc
mov
enter
jp
xchg
pop
mov
jge
mov
xchg
dec
popa
insb
test
fistpll
pushf
fldl
scas
or
fs
jl
push
fidivs
mov
xor
sub
outsl
add
lcall
mov
insb
mov
imul
or
pop
rorb
sbb
xor
sub
fidivrs
leave
fcomp
aad
mov
push
not
shlb
pusha
dec
pop
fadds
cmp
popa
js
xor
add
pop
inc
dec
iret
pusha
adc
push
or
test
mov
addb
test
popf
shrw
xchg
cltd
fdecstp
cmp
shll
add
push
mov
xor
jns,pt
lods
test
in
pop
sub
int3
jle
sub
cmc
in
lods
nop
inc
cmpsb
int3
jne
and
hlt
in
xchg
adc
push
mov
and
sti
test
xchg
repnz
mov
subl
sub
adc
add
jmp
cwtl
or
sbb
pop
popa
icebp
adc
int3
bnd
loope
aad
sahf
je
es
inc
push
repnz
add
inc
movsb
ljmp
sub
sub
push
add
sbb
mov
clc
or
lret
mov
popf
repnz
cmp
pop
and
cltd
inc
hlt
push
mov
mov
cs
adc
inc
call
andl
movsb
out
or
lahf
std
xor
and
mov
cld
lods
sbb
orl
cs
jp
pop
cmp
int3
outsb
inc
cmp
in
sbb
bound
mov
pop
in
dec
daa
jmp
stc
ja
testl
rcrl
sbb
mov
push
jle
and
jg
sti
scas
fmul
dec
leave
jo
dec
out
jle
add
dec
xor
divb
mov
ljmp
sahf
movsb
outsl
shll
out
xchg
jo
js
push
mov
ds
test
lahf
loope
sbb
lret
repz
mov
push
push
add
inc
xor
cmc
mov
call
scas
cwtl
mov
fwait
sub
mov
fstpt
lea
mov
shrb
mov
or
loopne
push
in
jmp
push
xchg
enter
push
cmpsl
push
sbb
sahf
xchg
sbb
pushf
push
jno
fcmovbe
aaa
jne
sbb
push
inc
add
jp
push
xor
push
inc
cltd
mov
dec
pop
arpl
push
cmc
push
pushf
mov
mov
sbb
std
leave
pop
iret
ds
xor
mov
outsl
imul
xchg
push
push
sbb
enter
lock
fsubr
icebp
jle
into
mov
movsb
xchg
mov
es
mov
xor
ss
sub
and
clc
inc
repnz
xchg
les
jl
mov
dec
shll
dec
push
movsl
push
into
or
mov
ret
mov
lret
out
das
mov
lret
mov
jae
cmp
arpl
testl
fs
and
ljmp
fcomi
xor
rorl
cs
sub
mov
call
pop
or
movsl
arpl
stc
jl
hlt
add
fwait
add
sub
mov
in
mov
pusha
pop
fdivrl
push
sbbb
adc
jbe
xchg
mov
xchg
sub
pop
clc
jge
loopne
mov
inc
jne
insl
cmp
dec
ret
into
inc
inc
imul
add
jmp
outsb
ficompl
aad
dec
fisubs
fstpt
aad
test
adc
pop
pop
mov
lock
adc
hlt
cmp
shll
jecxz
lods
sub
int
mov
pop
cmpsb
icebp
loop
and
jbe
dec
dec
mov
jb
jb
pop
sbb
int3
jge
inc
dec
fidivs
adc
mov
cmpsl
add
cmpsl
mov
or
inc
out
sbb
mov
pusha
sub
sahf
or
pop
jae
jb
lds
push
cmp
movsl
js
into
cmpsb
pop
sbb
outsl
cld
call
jnp
or
testl
fidivl
xchg
pop
insl
jnp
cs
ss
or
lret
decl
jno
mov
popf
xchg
jmp
adc
popa
xchg
cmp
jae
pop
fwait
jmp
sub
rcl
rcrb
push
icebp
xor
andb
mov
faddl
fimuls
in
pop
out
xlat
add
sub
rolb
mov
call
mov
add
fcmovnbe
adc
in
or
and
mov
js
inc
addb
mov
cmp
sbb
test
in
xchg
adc
or
sbb
dec
adc
adc
insl
dec
push
cmpsl
dec
adc
shrb
bound
in
sbb
sub
lock
sbb
or
adc
sub
lods
repnz
adc
inc
cmp
jg
sbb
insb
push
and
pushf
aad
addb
addr16
sbb
sarl
mov
push
lods
inc
push
cmp
inc
lcall
hlt
cmp
movsl
xor
xchg
cmp
nop
adc
and
mov
int
int3
mov
inc
test
sub
pop
push
lock
and
jnp
inc
mov
jmp
dec
adc
jg
cmp
sub
rclb
xchg
lock
cs
push
leave
inc
jp
shrl
and
push
push
push
push
and
shrl
arpl
inc
pop
adc
mov
rorb
mov
repz
jbe
scas
mov
dec
adc
sub
test
jle
xor
mov
das
addb
in
pop
dec
push
mov
mov
repnz
ss
fwait
lahf
ja
sbb
push
xor
mov
jge
mov
adc
loope
push
cmp
adc
imul
jmp
mov
inc
icebp
fwait
cmp
stos
je
mov
adc
jmp
sbb
sub
cltd
test
push
popf
push
vpmaxsw
fwait
inc
ficoml
mov
mov
icebp
jmp
or
mov
jb
mov
mov
fistpl
mov
pop
and
stos
sub
int
xchg
leave
inc
sbb
js
dec
dec
sbbl
mov
or
fsubrl
sub
pop
push
pop
sbb
cli
fiaddl
dec
xchg
mov
pop
mov
sbb
pushf
xchg
aas
push
cmc
jbe
sbbb
daa
mov
dec
mov
and
adcb
ss
cltd
jmp
adc
std
scas
rcll
pushf
xchg
std
dec
test
dec
jns
stos
test
jl
test
dec
int3
enter
pop
cmp
fwait
or
inc
std
test
enter
xchg
lods
pop
rcrl
aam
fstpl
mov
inc
std
mov
sbb
aas
xor
daa
add
and
dec
sub
popf
cs
jle
cli
jecxz
lods
mov
shrb
jecxz
insl
roll
clc
dec
movsb
arpl
cmp
imul
and
xor
lahf
inc
mov
mov
jb
adc
pushf
dec
lcall
xchg
btc
add
enter
push
ss
jle
rorb
push
dec
inc
pushf
enter
jbe
mov
and
sbb
and
insb
shl
and
add
jne
inc
shr
sub
mov
out
push
push
iret
sbb
mov
add
cli
or
std
jge
fcompl
dec
jb
cmpb
cmp
notb
and
inc
mov
insl
addr16
jns
jne
stos
mov
mov
xchg
sub
adc
mov
push
loop
mov
incb
cmp
out
gs
xor
dec
push
sbb
out
into
inc
mov
insb
in
stos
cli
adc
int3
xchg
xchg
popa
or
adc
xor
dec
lret
or
pusha
sarl
pushf
sbbl
aad
sub
push
dec
push
or
add
adc
cmp
jl
add
push
xchg
adc
pop
mov
jno
and
mov
jae
lret
leave
cmc
dec
pushf
cwtl
add
js
cmp
mov
call
dec
mov
popa
shrl
shrb
pop
scas
push
mov
sub
mov
mov
xchg
or
in
mov
xchg
xchg
add
sbb
mov
enter
mov
out
fcoms
sbb
cwtl
jne
jp
dec
xchg
rcll
mov
and
dec
xchg
mov
mov
sub
es
call
insl
and
xchg
sbb
js
jmp
mov
sbb
test
loop
mov
pop
fwait
pop
jbe
mov
mov
in
push
loop
pop
jmp
icebp
popf
fwait
cmp
mov
or
movsb
popa
out
jl
add
out
out
out
jl
sub
int3
sub
mov
out
inc
imul
iret
sub
cmp
sahf
inc
pop
cmp
add
ret
push
lret
pop
push
imul
lea
add
jae
aaa
loop
adc
imul
and
scas
scas
jmp
pop
pop
and
movsb
divl
leave
or
loopne
je
das
fisubl
push
dec
jmp
stos
sub
xchg
mov
pop
insl
fisubrs
sub
add
scas
pop
repnz
dec
rcll
sbb
jecxz
je
push
jbe
stos
sub
cmp
fimull
sti
mov
push
cmp
ss
add
not
mov
pmullw
or
pop
and
mov
icebp
enter
popa
push
aas
adc
roll
add
mov
das
icebp
fmuls
push
pop
adc
mov
punpckhbw
hlt
iret
xchg
shl
dec
push
pop
and
mov
xor
ja
xor
iret
add
xlat
shrb
in
inc
mov
and
leave
out
sbb
sub
aas
in
dec
pop
leave
stos
pop
mov
mov
sub
arpl
inc
or
dec
test
mov
jbe
pop
xchg
stc
subb
lea
push
and
pusha
mov
pop
push
pop
xchg
in
mov
out
xor
leave
mov
sub
out
shrl
inc
sbb
insl
hlt
inc
mov
mov
sti
push
ss
sbb
aam
cmp
into
xchg
push
mov
movsb
negl
adc
ss
stos
and
popa
mov
je
rcrb
sub
xlat
xchg
ret
ja
sub
inc
aam
xchg
jmp
shr
aaa
jnp
add
pop
aad
pop
push
loope
lods
sahf
cwtl
jbe
adc
fxch
shl
int3
lret
in
mov
dec
push
pop
pop
dec
and
inc
cmp
adc
mov
xor
lods
xor
xchg
inc
loopne
adc
mov
mov
movsbl
mov
stos
cwtl
scas
push
imul
jns
jb
sbb
js
fildll
push
mov
imul
js
or
test
dec
insl
mov
repz
idivl
sbb
fwait
and
fisttpll
das
mov
cmpb
push
cwtl
mov
push
enter
subb
inc
jne
cmp
jnp
pop
popf
lods
mov
sub
int3
lret
ficoml
sbb
mov
adc
sub
rcrb
ret
mov
adc
cltd
cmp
sahf
dec
filds
dec
popf
cld
push
jne
push
xor
gs
mulb
test
imull
and
sbb
or
sbb
je
cmpsl
pop
fdivs
enter
jb
or
mov
das
adc
int3
xor
lea
fwait
sbb
push
in
in
pusha
mov
in
xchg
sbb
jmp
nop
lret
pop
popf
or
pop
fstps
lret
mov
jns
out
xchg
inc
cltd
jmp
imul
mov
xor
out
stc
clc
mov
pop
and
andl
sbb
xchg
xlat
mov
inc
out
inc
popf
xchg
pop
and
mov
aam
insl
lret
xchg
aaa
in
xchg
push
cmp
jae
out
mov
cmpsb
dec
cmp
lea
out
adc
or
push
fcomps
icebp
pop
jg
pop
aaa
unpcklps
dec
lock
pop
push
xchg
test
or
xor
mov
mov
cmpsl
pop
rol
push
sti
pop
jge
jnp
test
add
seto
stos
or
cmp
mov
clc
test
insl
andb
mov
pop
mov
xchg
jns
lret
and
sbb
ja
cld
enter
or
lea
xor
out
mov
stos
bound
push
and
icebp
lret
loope
adc
push
mov
push
inc
ret
leave
cmp
aam
cmpsl
cmp
insb
mov
add
and
mov
mov
bnd
aad
sti
dec
xchg
das
out
nop
negb
cmp
push
imul
aaa
das
stc
insl
rcrb
sarb
cmc
cmp
dec
adc
jmp
int3
out
mov
aam
movsb
pop
mov
sbb
inc
sbb
xor
pop
mov
or
or
xchg
ret
and
push
or
pusha
adc
dec
xchg
fistpl
clc
movsb
test
decl
imull
jle
xchg
lock
iret
xchg
cs
out
cmc
loopne
cmp
cltd
or
pop
mov
repnz
jmp
or
xor
pop
sub
sub
cmpsb
icebp
xor
mov
pop
mov
mov
fisubrs
orl
daa
sti
sub
fwait
cltd
sahf
mov
lds
lret
mov
iret
and
adc
ret
mov
fstpt
push
jecxz
ja
test
sub
push
fisubrl
fwait
stc
jg
mov
pop
mov
mov
dec
mov
movsl
mov
and
ds
jnp
mov
sub
inc
cltd
loopne
loop
mov
xchg
mov
mov
sahf
pop
cltd
mov
sbb
out
mov
xchg
popf
pop
push
push
ss
mov
addr16
movsb
sbb
ds
jno
test
push
sub
or
leave
repz
dec
mov
mov
dec
cli
cwtl
movlps
push
dec
ret
int3
lcall
and
mov
push
dec
movups
lret
mov
jle
ljmp
push
xor
shrb
wrmsr
movsb
mov
mov
hlt
shrl
xor
stos
repnz
cmc
data16
notb
or
sbb
adc
cs
and
xor
cmp
popa
ja
icebp
cmp
pop
hlt
idivb
repnz
dec
inc
loopne
movb
inc
mov
ret
mov
aad
nop
sti
sub
ljmp
jecxz
cli
mov
lea
std
mov
lcall
sbb
mov
icebp
pop
lret
shrb
pop
mov
xor
fsubs
mov
in
out
fdivs
jne
pop
data16
mov
dec
mov
fs
dec
jnp
call
push
jb
test
lock
ljmp
push
mov
mov
rep
inc
test
mov
pop
inc
pusha
loopne
cmp
cmp
cmc
ljmp
outsb
les
daa
mov
into
jo
push
int3
mov
xchg
test
pop
mov
shlb
push
add
xchg
sarb
mov
inc
inc
push
aaa
clc
xchg
push
push
into
test
fwait
push
daa
bound
pop
sahf
push
cli
sti
add
cmp
xchg
insl
bound
leave
out
mov
stc
daa
cwtl
xchg
ss
movsb
mov
leave
loop
pop
mov
cmpsl
lods
or
fs
mov
add
jecxz
cmp
fwait
add
cmp
imul
inc
rcl
mov
icebp
mov
jo
insl
cwtl
out
push
adc
push
movsb
push
rclb
ja
xchg
mov
jo
daa
subb
and
outsb
mov
sub
xchg
push
mov
sbb
dec
clc
roll
das
xchg
les
push
cmpsl
push
xchg
sbb
xor
negl
lret
or
cmpsl
pop
mov
adc
nop
jne
stos
sbb
sbb
fwait
dec
js
pop
pop
push
loop
pop
imul
in
fs
stc
xchg
stc
sbb
dec
outsl
test
mov
aad
shrb
in
jae
lds
repnz
push
cltd
and
inc
mov
mov
push
push
mov
xlat
insl
jno
jp
cld
loope
fimuls
fcoms
out
in
push
cmpsl
fdivl
out
xor
mov
or
jmp
xor
inc
push
pop
adc
ljmp
mov
push
aad
or
or
pop
jo
call
lds
test
add
fadd
cwtl
addr16
popa
pop
out
fbstp
mov
int
dec
fistl
or
mov
push
lret
xor
mov
repz
mov
arpl
jecxz
sahf
jb
stos
fsts
movsb
int3
fildll
lds
sub
popa
jg
xor
outsb
mov
jnp
mov
je
shrl
add
into
mov
jmp
lods
insb
push
push
pop
and
dec
mov
and
arpl
jge
push
cmpsl
inc
inc
xlat
dec
into
fnstcw
cmc
clc
in
mov
je
sbb
cmp
xchg
int
or
lcall
or
repz
dec
mov
fs
add
and
out
pop
jae
lods
push
add
xor
stos
mov
imul
lods
mov
mov
jge
dec
sub
daa
xor
lret
icebp
daa
fcoml
sti
mov
jle
cs
mov
jecxz
mov
cmp
push
jo
cmp
push
out
add
hlt
cmc
xchg
in
jl
js
jge
addr16
sub
sbb
fsubr
clc
das
jecxz
ljmp
fneni(8087
or
sub
leave
push
test
mov
ja
fsubrp
lcall
insb
mov
xchg
ret
fnstenv
subb
cmp
and
imul
and
in
mov
gs
lds
aaa
lods
sbb
mov
fildll
pop
inc
out
mov
int3
outsl
or
in
popf
subb
data16
push
mov
das
adc
adc
cmp
jnp
add
scas
stc
stos
push
rolb
subl
movntps
pop
xchg
das
cmpsl
call
mov
mov
lods
mov
sub
adc
lahf
xchg
out
pusha
cltd
inc
inc
aad
loop
cli
xchg
jne
jno
push
stos
lea
popl
mov
xor
pop
cmpsl
push
push
dec
cmp
int3
dec
in
jp
std
int3
cld
shll
add
out
xor
inc
cli
mov
xor
fs
loop
mov
mov
fdivrs
addr16
sahf
sbb
pop
sub
imul
push
jb
sub
mov
cli
sbb
mov
xchg
add
adc
cmp
and
scas
mov
add
add
add
in
mov
push
fldlg2
and
enter
mov
dec
fldl
fwait
add
jl
ret
repz
std
pop
cmp
pop
into
and
sub
mov
int
jg
sbb
sub
cmp
enter
jle
adc
scas
add
mov
out
stos
pushf
mov
push
loopne
sub
sbb
mov
mov
dec
popf
cmpsl
cwtl
push
dec
fisubrl
cwtl
insb
or
xchg
mov
mov
leave
or
aam
inc
sub
rclb
mov
inc
mov
fists
lret
sbb
mov
jge
xchg
adc
sub
aad
or
pusha
mov
scas
inc
dec
and
cli
int
sbb
adc
gs
push
mulb
pop
icebp
jns
insb
sahf
sbbl
pop
mov
lods
mov
xchg
hlt
jno
inc
push
jne
pop
stc
xor
repz
bound
mov
sub
pop
fmul
xchg
lret
sub
add
xchg
inc
aam
sub
jl
cld
fs
loop
icebp
ljmp
xor
mov
mov
and
sub
cmp
cld
pusha
xchg
imul
es
outsb
adc
inc
jg
push
sub
insl
or
sbb
ljmp
rorb
repz
out
or
and
repz
mov
lock
lods
sub
mov
pop
subb
jb
push
jnp
in
dec
mov
or
inc
mov
xchg
in
icebp
lret
or
leave
shlb
jne
dec
hlt
xchg
sbb
push
lret
imulb
mov
aas
stos
nop
dec
bnd
mov
inc
icebp
or
mov
adc
push
mov
icebp
enter
addr16
divl
lea
mov
pusha
ret
movsb
jnp
sbb
inc
inc
out
pop
mov
sub
inc
fidivs
mov
jb
call
aaa
pop
cltd
test
xchg
jbe
and
lock
lahf
js
adc
pop
ret
jno
icebp
adc
sbb
sbb
dec
in
stos
sbb
sahf
data16
cmpsl
push
cmp
hlt
mov
test
push
mov
xor
cwtl
cmc
daa
dec
push
pop
loop
out
xor
cs
jo
dec
js
lock
mov
mov
fwait
lcall
leave
add
in
int
dec
int3
push
sbb
data16
lds
mov
cltd
enter
pop
pusha
mov
cmpsb
pusha
scas
cmpsl
in
dec
pop
mov
add
mov
add
cmc
test
push
outsb
js
sbb
push
cmp
ja
ret
cld
mov
bnd
xor
lcall
out
or
fcomps
fsubrl
mov
cmc
lea
mov
rcll
adc
dec
xor
xchg
sub
fistpl
mov
jmp
mov
loope
push
scas
pop
pop
push
dec
and
int3
jp
fiaddl
sahf
shll
aam
sarl
mov
ds
and
dec
xchg
test
and
dec
push
addr16
sub
pop
outsl
sbb
cmpsb
push
pop
in
addb
out
aad
inc
in
fs
push
out
daa
arpl
sub
mov
std
loop
test
xor
popf
and
ljmpw
lret
mov
call
cld
movsb
negb
adc
jo
xchg
sbb
arpl
scas
fcomip
adc
mov
stos
jnp
fcoms
add
dec
popa
xchg
push
mov
shlb
pushf
mov
cli
lock
or
cs
or
mov
dec
cltd
stos
and
sub
pop
in
mov
outsb
jns
clc
lock
fldcw
mulb
in
mov
pop
jae
xchg
lret
loope
mov
out
shll
inc
sbb
imulb
lret
insb
bound
push
cmp
scas
fisubs
sbb
dec
inc
out
negl
jno
fscale
fnstsw
sbb
mov
clc
dec
mov
jmp
getsec
mov
ljmp
xchg
sub
mov
push
movsb
arpl
jns
sub
arpl
mov
inc
jno
xchg
adc
roll
scas
pop
push
xor
es
mov
movb
xor
mov
and
sti
cmp
mov
xor
add
scas
jb
ret
test
in
dec
gs
enter
mov
pop
test
or
scas
in
rcrb
clc
lock
mov
sub
es
fldt
push
arpl
push
pop
scas
out
xchg
ds
jbe
dec
inc
out
ljmp
lret
pop
push
sbb
call
mov
cmp
out
cli
mov
daa
jae
adc
lahf
rcll
mov
bound
mov
pop
aam
xchg
stos
jns
dec
aas
in
dec
xlat
xchg
in
sub
gs
js
adc
fwait
pop
ljmp
mov
fdivl
testl
xor
pop
arpl
test
jne
rcll
mov
icebp
pop
jne
sti
insb
jmp
inc
sub
out
imul
xchg
jmp
mov
or
outsb
fstpl
rcl
jle
xchg
data16
ljmp
xchg
pop
push
frstor
inc
or
cmp
pop
ret
rorl
popf
mov
test
fsubrl
ljmp
lcall
clc
test
clc
inc
sbb
mov
adc
decb
shrl
xchg
rcr
sti
adc
shlb
pushf
gs
flds
stos
mov
into
cli
clc
push
test
scas
dec
or
je
lahf
int3
mov
dec
testb
into
or
fwait
test
dec
sarl
imulb
xchg
mov
pushf
xchg
mov
xlat
jg
leave
aas
ds
fdivrl
push
inc
inc
lret
gs
add
or
mov
cmpsb
add
cmp
pop
sbb
mov
cmp
push
cmp
loope
jo
stos
xchg
lods
xorb
movsl
sahf
pop
sbb
sbb
aas
imul
int
enter
fnstcw
cmp
pop
xor
cs
adc
mov
mov
fs
or
outsl
mov
add
mov
push
jle
cmp
dec
cs
or
cmp
mov
cmp
inc
mov
dec
pusha
xchg
mov
daa
cmpsl
xchg
vcmpsd
mov
repz
pop
in
mov
sarb
jmp
mov
jb
insb
cmpsl
or
shll
mov
aas
add
inc
cmp
sarb
inc
pop
stos
movsl
mov
sbb
adc
rclb
xor
mov
repnz
shrb
jnp
jmp
sub
jl
push
sub
loopne
inc
jo
hlt
push
push
and
xor
in
ret
aad
jl
shlb
xorb
push
add
add
dec
int3
jle
aas
and
sarl
jmp
out
into
test
mov
mov
testl
mov
loopne
or
push
mov
std
ja
out
push
testb
std
aas
mov
fbld
das
sbb
outsb
adc
scas
pop
shlb
call
or
insl
pop
dec
pusha
sbb
mov
loope
dec
shll
push
inc
mov
mov
mov
std
inc
push
call
std
xorl
mov
jns
pop
dec
sub
bt
mov
insb
xchg
or
fldlg2
mov
icebp
outsl
xchg
rcrb
in
xor
out
sbb
or
test
dec
jne
xchg
movsl
ret
adc
shrl
shrl
test
fsubrs
and
mov
mov
stos
orb
sbb
rorb
jo
jno
pop
mov
xchg
cmc
ret
jmp
mov
sub
pop
or
sub
xor
sbb
mov
pop
and
std
dec
sbbl
inc
rcll
ja
das
shl
fisubrs
pop
and
xchg
outsb
test
out
aad
loopne
leave
push
jno
jno
call
jle
push
lret
fwait
mov
push
shrl
mov
adc
je
in
fsts
dec
pop
dec
adc
jb
sub
lds
scas
mov
push
pop
imul
stos
loop
push
xchg
insl
inc
fidivrl
xchg
mov
int3
xchg
lcall
adc
push
roll
jmp
ljmp
xor
inc
std
sbb
xorl
dec
stos
insl
xchg
andb
or
and
mov
loopne
into
fldcw
xor
in
pop
int
stc
add
jle
lea
addl
movl
ret
push
dec
mov
or
and
cmpsb
push
mov
add
rcrb
inc
or
ret
inc
xorl
add
data16
dec
mov
subb
arpl
jae
push
cmp
mov
add
mov
lret
test
daa
pusha
aad
addr16
lods
popf
test
hlt
xor
add
adc
xor
dec
fsubs
imul
and
xchg
cmpsl
mov
jl
xchg
nop
xor
mov
adc
dec
inc
dec
lods
cmc
lret
mov
mov
js
aad
rcl
jbe
rcll
je
adc
fsubl
sub
mov
out
adc
jle
lea
push
push
jns
dec
mov
add
xchg
sbb
mov
loopne
inc
stos
cmp
ja
test
hlt
sahf
enter
push
cs
push
dec
inc
pop
ljmp
jb
inc
mov
insl
mov
xor
lods
fs
stc
or
cmpsl
cli
push
pusha
or
cli
push
cmp
or
push
dec
xchg
and
sti
add
adc
pop
loop
pusha
jmp
mov
adcb
out
lds
mov
aam
pop
inc
imul
or
sbb
or
aaa
push
loop
push
or
cli
inc
cwtl
movsl
cmpl
addl
das
cli
or
sub
scas
dec
sbb
call
adc
cmp
insl
add
push
push
mov
icebp
jnp
into
jp
fnsave
jb
xchg
sub
int3
push
loop
jge
mov
mov
in
cmp
lahf
cmp
les
loopne
pop
sub
push
mov
or
iret
or
or
sub
xlat
mov
add
xchg
loope
test
dec
outsb
fistpll
xlat
mov
das
stc
xor
sub
popf
inc
addr16
divl
test
dec
pop
fistl
adc
mov
imul
dec
lcall
hlt
out
lea
ds
pop
cmp
lret
xor
jnp
xchg
xchg
xor
frstor
pop
fdivs
cmp
jae
stos
mov
iret
out
enter
enter
jo
enter
test
icebp
aaa
fsub
fs
inc
push
ljmp
pop
sub
mov
shll
icebp
xchg
aaa
dec
cmp
xor
xchg
repnz
jne
inc
mov
aas
data16
pop
test
fcom
push
xor
xchg
cmpl
data16
call
sub
dec
jno
test
adc
movsb
insb
pop
push
imul
mov
push
jmp
sbb
xor
dec
cmpsb
loopne
out
inc
pop
jae
dec
push
push
inc
add
outsl
mov
push
pop
xor
aaa
mov
int3
dec
mov
cmp
sti
xor
push
xor
xchg
sbb
addr16
lds
in
mov
ds
and
leave
pop
jnp
push
jle
test
mov
daa
mov
mov
xchg
cmpsb
jg
cwtl
or
call
xchg
xchg
jg
xchg
insl
pop
int
pop
fidivs
xchg
aad
lcall
jns
pop
cltd
ss
jbe
pop
push
into
sub
in
inc
iret
mov
ret
in
and
cmp
test
in
xchg
or
mov
sub
inc
mov
clc
leave
fldl
push
sbb
lods
in
jno
and
sbb
and
push
push
xchg
jp
ret
mov
jl
inc
lods
cmp
int
divl
mov
test
ja
push
add
inc
sbb
cmp
mov
inc
movsl
xchg
stos
pusha
mov
inc
outsl
aas
shr
sub
ds
lcall
std
jns
adc
adc
push
cmp
xor
push
xchg
pop
insl
jae
mov
cwtl
popa
mov
inc
aas
dec
or
sub
iret
cli
inc
aas
fcoml
mov
ret
inc
mov
push
xor
pusha
dec
les
hlt
out
xor
in
push
inc
sbb
pusha
repz
popa
sbb
push
mov
aaa
inc
xor
pop
das
ss
cld
leave
in
push
inc
xchg
rep
or
adc
cmp
inc
lock
test
std
cmpsb
popf
outsb
loope
adcl
aas
sbb
clc
ss
aam
fwait
out
mov
ljmp
or
dec
fnstsw
inc
push
mov
mov
mov
repnz
push
sbb
xlat
out
mull
cs
cmp
sbb
addr16
bound
clc
mov
testb
lret
sub
notl
out
cmp
lods
jbe
jmp
lahf
arpl
arpl
add
cmp
out
pop
sbb
push
sbb
ja
push
ja
add
fbstp
in
jnp
fwait
inc
xor
test
xchg
outsl
xchg
mov
test
push
pop
and
add
sbb
mov
jmp
popf
dec
add
arpl
int
fimull
xor
rorl
jge
lcall
push
inc
sahf
outsb
ds
ja
add
cmc
cmpl
lods
add
cmpb
aam
add
negb
rolb
inc
jmp
aaa
rcrb
cs
rolb
jbe
pop
pop
stos
cmpsb
add
ja
into
arpl
in
jp
or
mov
outsl
sub
xor
bound
or
int
add
into
jp
add
pop
xchg
icebp
loop
xchg
xchg
icebp
lret
ds
jle
push
icebp
mov
xchg
push
pop
dec
scas
ret
mov
aam
pop
adc
std
daa
sub
push
adc
jbe
mov
hlt
sbb
call
pop
push
dec
pop
movsb
arpl
fidivrs
int3
sbb
xlat
fiaddl
int
push
mov
out
sub
mov
lock
out
adc
sahf
pop
flds
popa
sub
stc
cwtl
bound
outsb
push
test
xchg
cld
dec
in
adc
movl
and
jmp
sub
insb
pop
mov
shl
add
lods
iret
sub
push
or
mov
jmp
test
mov
subb
jecxz
enter
mov
xchg
lcall
add
in
shll
ja
movsl
nop
gs
or
push
xchg
mov
cmp
jecxz
jg
inc
sarb
xchg
xchg
notl
add
pop
xor
push
les
mov
inc
insl
nop
xchg
aaa
fidivs
notb
andb
aas
stos
roll
cmp
add
lds
mov
in
out
mov
jp
xchg
xor
popa
shlb
sbb
mov
mov
mov
das
mov
inc
repz
repz
inc
cmpsl
pop
or
mov
adc
imul
mov
cmp
cmp
adc
lcall
cmp
adc
bound
lock
imul
fnstenv
out
mov
subl
add
cmpb
loope
rcrb
cmpb
mov
jne
insb
call
sbb
dec
cmp
pushf
pop
xor
jge
lret
add
cmpb
xchg
lret
xchg
fcompl
or
dec
xchg
pop
mov
movsb
dec
inc
stc
divb
pop
aaa
lods
push
mov
add
enter
or
pop
mov
push
cltd
xor
clc
pop
mov
test
pop
stos
out
sbb
repz
gs
jp
lods
or
insb
cmp
mov
stos
daa
jno
mov
adc
pop
clc
fsubrp
mov
mov
mov
add
bound
movsl
jns
mov
pusha
or
mov
pop
fiaddl
in
test
pop
jg
push
jl
or
sbb
mov
and
lcall
jns
xor
or
mul
shl
mov
pop
test
or
je
adc
movsb
shll
nop
add
pusha
fisubrl
mov
dec
and
jg
or
in
lahf
dec
or
out
aaa
or
std
lock
lods
jecxz
fimull
frstor
test
rol
inc
rcrl
insb
inc
ds
push
popf
adc
ja
cmp
popf
cmp
inc
push
jmp
mov
scas
dec
pop
movsl
jo
fwait
or
popa
pop
adc
cmpsb
test
leave
clc
push
push
out
aad
frstor
fisubs
or
subb
add
lret
mov
cmp
repz
test
test
mov
dec
xchg
in
fdivrl
ds
and
rorl
mov
inc
xchg
ret
hlt
xor
mov
aas
jo
add
cltd
add
out
cmp
stos
pusha
sbb
xchg
std
imul
cmpsb
aam
cmp
jae
ljmp
fwait
xlat
iret
sub
fldl
test
mov
jnp
jmp
data16
fwait
jl
dec
push
inc
fnsave
mov
addb
jmp
jge
lds
jne
leave
xchg
push
cmpsl
mov
dec
mov
popa
das
sbb
outsb
dec
mov
test
nop
xor
jnp
push
testl
ret
data16
cmpsl
icebp
sub
xchg
loopne
mov
fmull
out
jl
loopne
shl
push
jmp
bound
dec
pop
push
rcll
repnz
jge
das
sbb
daa
roll
in
pop
push
cmc
aam
cmp
or
icebp
xor
xchg
xchg
int
fs
mov
imul
loopne
sub
adc
mov
cld
mov
mov
ss
inc
ljmp
ret
cs
daa
outsl
orl
cmp
scas
push
mov
mov
xchg
test
sub
out
add
icebp
mov
ds
cmp
sahf
nop
into
shlb
mov
clc
mov
enter
cmc
cmp
adc
pop
lret
stos
mov
xor
fisubrs
dec
out
cwtl
aam
mov
lret
inc
rclb
or
pop
les
sbb
fimuls
pop
stos
inc
ds
inc
aam
adc
faddp
mov
insl
in
jne
fisttpll
aas
jmp
icebp
mov
sbb
cmp
mov
xchg
in
sbb
pop
xor
cmp
pop
testl
cmp
pusha
adc
adc
hlt
and
sub
fistpl
sbb
or
ret
push
adc
xchg
lods
aad
hlt
mov
rclb
and
jl
xchg
cmp
xor
mov
fsubp
xor
xchg
sti
xchg
dec
push
ljmp
sub
xor
rcrb
lret
add
sbb
scas
insb
shrl
dec
xor
dec
ljmp
test
into
xor
adc
mov
inc
inc
lock
mov
enter
mov
std
jmp
shll
popa
ss
xchg
xchg
out
stos
outsl
mov
movsl
leave
test
sarl
jg
inc
push
test
fnsave
jmp
aaa
jge
and
pusha
sbb
or
sbb
pushf
mov
sbb
shlb
inc
cli
lret
in
and
lods
scas
ss
inc
outsl
das
jno
cld
sahf
lret
xchg
imul
popa
stos
rcrl
stos
dec
mov
mov
testl
add
arpl
mov
sbb
or
mov
data16
xlat
in
scas
mov
adc
cs
mov
push
jnp
shrb
add
or
in
sbb
mov
fs
sbb
dec
xlat
cli
mov
popf
xor
aas
sar
lock
addr16
je
dec
scas
std
ss
push
jl
mov
out
xor
xorb
xchg
pop
ja
cmpsb
or
mov
ret
add
and
dec
cli
jb
loopne
pop
inc
fiaddl
arpl
cmp
outsb
rcrl
adc
mov
out
cmp
push
cmp
jnp
lods
or
xor
cmp
adc
pop
icebp
lcall
pushf
das
dec
adc
xchg
je
sub
adc
loope
push
mov
dec
mov
sarl
rolb
pop
mov
pop
stos
sbb
aam
jecxz
xchg
lahf
dec
sti
inc
imul
xchg
jle
xor
movsb
out
cmp
scas
or
adc
aas
scas
fwait
mov
jg
push
sub
aad
cli
int
xor
lret
xchg
dec
pop
pop
xor
jle
lahf
cld
and
mov
mov
test
sub
cmc
jb
cld
and
fsubp
jnp
cmp
repnz
lea
cwtl
rcrl
and
jecxz
sti
cmp
jmp
roll
sub
dec
inc
shr
es
push
jnp
mov
push
sbb
cs
outsb
notb
lods
das
push
push
jo
shlb
mov
xor
shl
daa
outsl
mov
rolb
out
shll
or
mov
das
ds
jl
pop
sub
xchg
lret
add
lcall
jmp
fstpt
outsl
mov
cmp
and
repnz
mov
ss
jle
fmul
inc
xchg
test
or
sub
mov
fdivrs
adc
sahf
rep
cwtl
movsl
jo
ficomps
fucomp
out
in
js
jae
inc
fcoml
sahf
sub
pop
in
popa
push
lea
fwait
ret
cli
mov
inc
mov
push
jecxz
jnp
xchg
idivb
sbb
jae
movsb
mov
imul
sub
lret
sub
pop
fs
jne
loop
mov
add
fstpl
mov
push
xchg
add
shrb
add
mov
push
and
out
mov
in
ds
outsb
in
push
test
stc
inc
imull
and
cmp
sti
ss
or
imul
and
pop
insl
les
inc
dec
xchg
sbb
lahf
addl
mov
and
sub
mov
add
loopne
ret
shrl
push
arpl
cmp
pop
aaa
les
xlat
out
notb
loopne
adc
inc
rorl
pop
out
sbb
pop
int
repnz
xor
fwait
xchg
sub
lods
repnz
out
imul
lea
rorl
ret
movsl
adc
stc
pop
orb
xchg
aas
mov
mov
xor
fnsave
mov
sbb
stos
add
inc
push
cmp
push
push
mov
lret
in
pushf
mov
insl
xchg
ret
jne
jno
push
sbb
push
mov
pop
aad
bound
mov
fcomi
addr16
xchg
mov
repnz
inc
push
push
xlat
cwtl
sti
es
loopne
lods
lcall
mov
cmp
test
out
xor
movsl
xchg
aam
out
jle
xchg
sbbl
cwtl
sub
loop
inc
add
rol
push
and
cmpb
mov
cmp
rcrb
or
lret
sub
mov
fistpll
scas
push
ret
jne
insb
sub
or
sbb
add
test
outsl
pop
push
rolb
inc
mov
sarb
les
pop
ds
mov
pop
out
ret
dec
pop
lret
scas
mov
sub
sbb
cmc
mov
loope
ds
cmpsb
and
insb
into
inc
dec
mov
mov
add
xchg
or
insb
repz
push
das
pop
jmp
in
xor
push
loope
mov
and
push
push
sahf
push
mov
popa
cmp
lahf
movsl
and
xchg
or
scas
mov
push
mov
mov
scas
fstpt
mov
push
lcall
mov
dec
sub
push
fnstcw
mov
adc
push
adc
cltd
loop
dec
add
dec
ds
frndint
popl
nop
mov
lea
repz
mov
sti
mov
je
xor
fadd
pushf
into
insb
and
clc
dec
sbb
ja
xor
lahf
imul
mov
jb
jnp
js
or
and
je
fs
shlb
cld
test
and
add
xor
in
aas
fsubrs
mov
inc
cmc
rcr
add
cmp
pop
push
insl
outsl
and
pop
in
lahf
lock
jae
aad
mov
mov
mov
cltd
cmp
jbe
mov
xchg
jo
iret
cmp
stos
pop
and
aas
rol
push
scas
sub
into
inc
and
lcall
add
dec
in
inc
in
fsubl
lods
sub
ja
xor
mov
scas
inc
cwtl
lods
in
out
sti
adc
jg
push
adc
mov
xor
sbbb
pop
xor
push
jno
ret
or
xchg
js
sub
pusha
xchg
jae
sbb
in
pop
cld
pop
js
mov
and
fcomps
xchg
movsl
jne
mov
mov
call
cmp
pop
scas
mov
xor
std
mov
imul
sub
inc
push
outsl
or
sbb
jo
inc
in
std
lock
aas
data16
int
jmp
repz
cmp
mov
push
sbb
data16
lds
cmp
filds
in
push
test
iret
sub
xor
addr16
test
in
lock
addr16
mov
push
cmc
cwtl
lods
imul
jl
pop
push
rol
add
fnstcw
xorb
mov
mov
outsb
mov
xor
js
mov
push
push
repz
icebp
shll
mov
jg
inc
and
add
lcall
rol
jg
sahf
pop
dec
jb
pop
inc
xacquire
or
lret
adc
add
jmp
dec
rcll
sub
stos
fucomi
popf
add
popa
mov
adc
sub
dec
dec
add
insl
aas
sbb
and
std
mov
outsb
mov
jmp
sub
fcmovne
or
sbb
and
movsl
xchg
pop
pop
push
xchg
mov
dec
xchg
sub
cmp
adc
bound
dec
dec
xchg
mov
jl
imul
or
bound
cli
mov
xlat
add
out
inc
cwtl
loop
add
sub
iret
lods
mov
mov
and
push
xchg
aad
int
pop
add
add
xchg
mov
pop
or
cmpsl
pop
in
cmp
out
cmp
popa
leave
pop
mov
push
stos
xchg
mov
or
iret
loopne
outsb
mov
cltd
cmp
stos
int3
iret
jnp
sbb
mov
add
mov
mov
loop
lcall
ficomps
push
lahf
adc
and
fnstsw
aad
mov
cmc
in
mov
adc
inc
or
mov
ss
cmpb
shll
enter
stos
push
testl
cld
mov
xor
sti
ds
in
xor
filds
cld
int
jmp
loopne
aam
imul
push
divl
pop
push
sbb
outsb
pop
sub
add
cmpsl
popf
enter
sub
jo
inc
sbb
nop
cmp
dec
pop
cltd
leave
cmp
pop
ret
fidivrl
mov
stos
mov
inc
mov
arpl
mov
bound
inc
jbe
add
mov
mov
cld
sbb
xchg
outsb
lock
dec
insb
mov
ret
das
lea
test
adc
jbe
movsl
sarl
repz
inc
and
inc
adc
je
adc
arpl
leave
sbb
ds
mov
adc
sti
and
enter
loopne
adc
sbb
push
jp
imul
stc
cs
sbb
mov
insb
jae
adc
mov
cld
mov
lock
cli
cmp
cmp
movsl
xchg
mov
sbb
popa
lret
stos
and
cld
mov
test
fcomps
int
int3
add
sarl
and
add
add
movl
and
sarb
aad
add
mov
pop
or
mov
xchg
outsw
dec
out
jmp
cmp
or
mov
pusha
fadds
cli
and
xchg
fnsave
push
imul
ja
movsb
lcall
xlat
push
sti
xchg
pop
sti
cmp
sbb
sti
lcall
outsb
pop
dec
or
faddp
mov
pop
mov
cwtl
outsb
push
int
les
nop
sub
cli
pop
sbb
jno
out
xor
ds
jl
mov
fcomi
fildl
insl
xor
insb
hlt
xchg
fs
in
cmpsb
dec
in
adc
pop
daa
dec
xchg
xor
sub
rolb
sahf
call
mov
inc
mov
inc
test
push
push
repnz
fsub
inc
bnd
int
add
sub
iret
jg
out
push
xor
and
pop
pop
int
lcall
and
in
pop
bnd
cmc
jle
loopne
pop
addr16
cmp
fs
jle
sti
pop
pop
jno
fldt
nop
or
mov
jge
xor
scas
cmp
adc
fmuls
dec
mov
cmpsb
push
mov
cmc
pop
lock
outsb
mov
jmp
xchg
stc
jmp
jmp
stos
xchg
and
pop
jl
adc
fldenv
jbe
adc
push
jl
in
sub
cli
jge
cmp
add
jne
jmp
ja
mov
bsr
inc
test
pop
and
mov
inc
aas
pop
inc
push
scas
jns
aam
dec
xchg
loopne
sti
js
mov
cmpb
or
mov
and
jno
jno
jns
testl
sbb
pop
and
jns
sti
sbb
pop
xchg
sbb
stc
cmpsb
cmc
mov
daa
daa
push
stc
movsl
stos
das
dec
ficoml
stc
dec
or
jg
icebp
xchg
iret
negl
inc
cli
pushf
xor
xor
out
add
test
repz
and
rclb
aad
test
cmpsl
shl
push
jnp
inc
rcr
aad
xchg
or
imul
mul
call
inc
daa
inc
dec
shrb
ss
inc
adc
mov
cmpsb
sub
inc
mull
add
pop
das
lret
psubusw
mov
and
scas
mov
push
xchg
sarl
sbb
loop
push
xchg
mov
mov
mov
out
orb
fildl
ss
jl
mov
jb
sbb
mov
icebp
clc
test
shrb
in
aas
arpl
testb
cli
lret
dec
pop
sub
iret
adc
dec
xchg
mov
out
mov
add
mov
jbe
or
mov
clc
std
jo
add
ss
gs
cmp
push
ljmp
inc
imul
push
mov
pushaw
loope
adc
adcl
push
cwtl
aad
imul
and
pop
nop
ss
sti
lret
in
mov
fbld
out
or
daa
lock
repnz
dec
sti
xorl
clc
outsl
mov
loop
lcall
mov
shll
stos
nop
push
xor
xchg
mov
and
xor
mov
mov
lods
cmpsl
ret
aas
std
push
shll
pop
mov
mov
inc
sbb
testl
lahf
cs
mov
lcall
rclb
test
adc
inc
or
es
mov
mov
xor
sbb
fs
mov
je
xchg
adc
icebp
xor
das
addl
fsubrs
out
js
push
addr16
stc
lahf
mov
inc
mov
arpl
movsl
loopne
fists
outsl
ds
out
inc
push
xlat
scas
not
ds
call
mov
mov
addl
xchg
push
pop
fdivs
mov
push
or
mov
mov
clc
cwtl
ljmp
mov
xchg
clc
add
mov
pop
push
fsub
sti
mov
xlat
lahf
lret
divl
xchg
and
cld
mov
mov
cmp
jg
push
inc
jl
push
fbld
cmp
loopne
and
pop
xor
jo
out
xchg
mov
leave
movsb
cmp
das
clc
jb
sbb
imul
or
sbb
xchg
inc
or
mov
xor
push
push
xchg
xor
es
aaa
dec
sub
mov
pop
pop
imul
jl
xor
les
fdivrs
dec
adc
icebp
dec
lret
push
aaa
arpl
dec
pop
jns
mov
dec
add
xor
das
jne
outsb
cmp
inc
imul
data16
push
jmp
and
xor
leave
xor
mov
cmpsb
or
push
cmp
and
movsl
loop
and
jb
jg
and
jnp
insb
popf
mov
out
dec
std
movsl
xchg
pop
sar
mov
mov
lock
sbb
xor
push
out
sbb
xor
nop
mov
push
mov
cmp
jns
jl
mov
popf
inc
loopne
xchg
arpl
xor
mov
popa
or
dec
sub
xlat
aad
xchg
sbb
sub
rorl
jnp
mov
jl
or
cmp
scas
nop
xchg
mov
scas
or
nop
xchg
fdivl
adc
xor
mov
sbb
fld1
mov
lods
sbb
frstor
dec
mov
inc
xchg
adc
jno
cmpsb
dec
mov
jno
cmp
pop
cltd
adc
pop
push
ds
sub
adc
ja
bound
mov
push
sub
xor
jmp
mov
xor
mov
sub
adc
ret
or
or
and
mov
in
divb
sub
push
mov
loopne
test
in
inc
je
cmp
mov
insl
adc
in
pop
cwtl
dec
mov
pusha
jne
cwtl
cmp
xor
stos
cli
es
mov
loop
pusha
push
add
cld
mov
push
cwtl
xor
fadd
aas
lret
xchg
mov
mov
fs
or
jp
hlt
xchg
dec
pop
gs
cltd
jo
sub
pop
ret
into
xchg
pop
xlat
push
hlt
pop
es
adc
sti
fbstp
jmp
fcoms
inc
dec
lahf
cmc
inc
pop
pop
sbb
or
xchg
loopne
push
sbb
mov
push
mov
xchg
call
xlat
inc
jmp
fiaddl
test
or
inc
into
pop
test
inc
movsl
repnz
mov
jns
orb
jge
dec
jg
jmp
pop
outsb
cltd
movsb
xlat
inc
out
jecxz
inc
les
and
jns
adc
inc
repz
lock
fnstcw
mov
mov
push
or
imul
xor
push
push
movsl
add
cmp
sub
pop
mov
dec
xor
xchg
std
mov
bt
sbb
cld
sbbb
or
rolb
adc
xchg
outsl
movsb
jl
sbb
loopne
out
cld
out
addb
push
mov
lcall
bound
add
sub
popf
pop
leave
out
dec
mov
push
sbb
out
xor
xchg
jecxz
shrb
int
int3
fwait
lahf
jmp
cmpsl
mov
in
out
roll
stc
insl
mov
adc
xchg
sub
mull
cmp
movsl
stc
lds
or
out
int
test
mov
mov
sbb
out
test
xor
rcll
nop
jae
cs
lahf
cwtl
xchg
pop
lahf
cs
dec
test
mov
adc
push
pop
mov
int3
mov
jecxz
shlb
movsb
in
mov
adc
int3
cld
iret
pop
mov
out
into
add
mov
into
push
push
mov
into
mov
lret
addr16
sub
mov
das
loopne
cmpsl
rcll
jmp
pusha
jns
in
dec
shll
loopne
imul
add
ficoms
sbb
pop
out
jmp
add
cs
inc
push
pusha
stc
loopne
push
hlt
push
iret
xchg
shll
add
and
pop
dec
nop
and
addl
add
push
stos
mov
es
inc
push
xchg
or
jo
xor
xor
nop
ficompl
or
jecxz
icebp
mov
jne
fsts
dec
icebp
pop
leave
jbe
mov
xor
das
push
ss
sbb
lods
sub
push
mov
imul
or
xor
xor
icebp
add
push
scas
dec
sti
pop
push
jg
mov
inc
sbb
cmp
jg
in
mov
je
xchg
or
dec
in
icebp
pop
or
pop
cmpsl
in
inc
push
int3
shll
jecxz
mov
lods
cmp
jl
stc
sub
loopne
or
xchg
aam
dec
test
add
leave
xor
dec
mov
test
stos
push
jno
cld
sbb
jl
fwait
cmpsl
and
sub
mov
fcmovu
jg
inc
ss
jmp
inc
cmpl
xor
leave
pop
loopne
adc
or
jbe
int
and
fiadds
inc
xor
mov
aam
add
cli
lea
sbb
mov
xchg
mov
jg
xchg
mov
pop
xchg
enter
pusha
scas
push
lods
nop
scas
xor
movsb
pop
xchg
jnp
fmull
cmp
inc
pop
mov
int
sti
mov
mov
cli
push
xchg
mov
ret
in
data16
hlt
inc
fdivrl
call
pop
push
ror
mov
pusha
jbe
add
cld
loop
xor
add
fisubrl
lahf
hlt
lcall
mov
inc
in
sbb
jnp
in
cmp
cmp
inc
cmpsb
dec
or
in
mov
inc
daa
fsubs
mov
das
scas
lods
pop
jae
xchg
ret
xor
imul
cs
loope
mov
add
leave
mov
pusha
rcll
addl
push
fiaddl
push
cltd
lea
sahf
adc
cs
inc
mov
xlat
inc
in
aad
push
out
aam
dec
sbb
sub
rcl
mov
and
fucomi
bound
aaa
mov
push
fs
and
icebp
pop
std
int3
mov
dec
loope
and
mov
inc
sub
aaa
jns
xchg
test
aam
jg
sbb
inc
pop
push
outsl
pop
cmp
in
jge
loope
out
mov
sbb
movsl
add
loope
xchg
or
out
notl
jg
push
dec
add
inc
fmull
sahf
mov
int3
in
xchg
arpl
mov
push
icebp
rcll
cmp
cmp
aaa
sbb
lret
decb
int3
jb
in
clc
out
xor
adc
lods
test
lcall
daa
adc
dec
lcall
lds
inc
mov
subb
out
push
daa
mov
add
lcall
ret
xchg
xorb
cmp
ffreep
addr16
movb
xchg
cld
jp
imul
jmp
scas
popf
call
pop
pop
inc
xchg
insb
mov
mov
dec
jmp
repz
fsubs
or
popa
stos
or
iret
or
pop
cwtl
xchg
adc
cmc
or
inc
xchg
sub
adc
aad
mov
ljmp
mov
mov
in
lock
daa
pop
jge
mov
jge
fs
pop
fwait
ret
movsb
xchg
pushf
insl
add
xor
jbe
fisubs
add
cmp
pop
mov
push
jo
add
jge
sbb
arpl
es
sub
and
sti
jp
cmp
rorl
adc
jp
pop
inc
add
ljmp
inc
push
ret
xchg
sbb
loope
mov
data16
mull
out
xor
xor
mov
sbb
call
out
push
add
mov
mov
shrb
cltd
mov
ret
push
adc
sbb
dec
dec
pop
jbe
sar
xchg
in
dec
cld
les
sub
stc
pushf
movsb
pop
repz
cmp
mov
pop
clc
mov
cmp
adc
test
inc
ret
push
cs
decl
mov
mov
pop
mov
xchg
adc
sub
xor
icebp
out
popa
jmp
cli
test
and
jecxz
cmc
les
ficoml
repz
sbb
ss
add
mov
xor
arpl
mov
sbb
push
mov
idivb
push
add
cmpsb
pop
xor
out
test
sub
adc
push
dec
fcoms
adc
dec
dec
sbb
bound
pushf
js
pop
movsb
push
iret
rol
push
insl
ret
loop
cmp
addl
shll
sti
jae
lods
sub
mov
and
mov
leave
ret
and
mov
out
aas
sbb
sbb
inc
fs
hlt
mov
or
in
cmp
dec
sub
and
pop
aaa
pop
mull
mov
add
sbb
mov
or
cmc
xchg
cli
sbb
call
testl
inc
adc
addb
or
pop
rcll
rol
add
nop
mov
xor
cli
adc
push
xchg
pop
sbb
sbbb
es
es
adc
icebp
decb
jns
sahf
mov
nop
enter
int3
stos
or
lretw
mov
pop
push
jns
xchg
into
test
add
inc
xchg
clc
insb
cs
cmpsb
or
ret
xchg
arpl
pop
rorb
pop
iret
or
inc
jb
push
jge
insb
call
inc
cmp
test
add
add
and
mov
jno
lock
inc
aas
cltd
cs
ja
mov
add
lea
xor
pop
vpsrld
sahf
stc
and
adc
xchg
cmpsb
mulb
cmp
in
insb
mov
pop
imul
mov
push
or
inc
jbe
pop
sbb
xor
fildl
lahf
cmpsb
dec
jne
xor
enter
jmp
mov
and
push
out
sbb
stc
imul
and
inc
fmul
jns
lods
adc
mov
int3
test
dec
test
mov
jl
stos
daa
popf
cs
popa
es
push
and
add
ret
fdiv
cmp
sti
jle
or
push
mov
imul
sub
lds
inc
sub
mov
dec
push
pop
and
xor
rorb
cmpsl
mov
mov
adc
lods
mov
add
addr16
frstor
jmp
dec
fldl
fists
pop
jp
and
in
movsl
insb
xor
xor
cmpsl
push
cli
cmp
xor
pusha
jno
je
popf
push
jnp
in
dec
jmp
and
fcoms
mov
fsubl
loope
pop
cmpsl
lds
pop
int
or
pop
jne
jno
ret
xor
popa
jne
subl
ret
xor
cmc
daa
or
or
in
dec
pop
test
cmpsb
add
inc
popf
mov
mov
jge
pop
add
and
add
adc
imul
cld
mov
aad
fwait
outsl
and
gs
popa
pop
adc
push
icebp
cmp
add
popa
pop
add
repnz
and
sarb
pop
inc
jae
jecxz
adcl
decb
inc
int3
popf
push
iret
inc
divl
ficomps
or
test
jnp
cltd
push
dec
pop
stos
in
out
int3
dec
popf
sti
ja
lock
sbb
cmp
xor
cwtl
jp
and
andl
loopne
inc
cs
xor
sub
adc
sti
inc
jns
in
aaa
cmpsb
pop
push
rolb
repz
dec
sbb
hlt
pop
rol
lahf
add
cmp
mov
in
push
lea
es
shll
jnp
rol
bound
inc
ja
pushf
cmpsb
mov
cs
das
into
in
jmp
jmp
in
clc
jl
addr16
xor
jle
xor
adc
es
idivl
mov
add
loop
out
das
mov
jp
pop
lods
loop
les
lods
aaa
adc
fisubl
repz
jp
shll
mov
lret
jmp
push
inc
jg
mov
notl
sbb
mov
mov
push
call
mov
hlt
bound
lods
mov
push
movsb
repnz
in
shll
lods
lcall
divb
sbb
push
mov
leave
jne
push
dec
or
pop
cmc
mov
test
fsubrp
mov
jge
push
nop
cmpsb
sub
out
lock
stos
adc
aad
mov
pop
cmp
jmp
dec
shll
pop
sub
pop
inc
loopne
sbb
into
insb
fcom
push
nop
scas
and
clc
sub
popf
inc
stc
inc
push
sub
push
mov
pop
or
lods
je
pop
dec
rol
push
fldl
je
lds
and
sbb
jnp
out
jecxz
daa
xchg
and
fnstenv
adc
jg
xchg
incl
loopne
mov
mov
fdiv
cmc
fmull
xchg
push
and
inc
xor
jge
push
das
xchg
out
pop
pop
addr16
mov
add
mov
ja
cmpsl
mov
xchg
je
sbb
fucom
mov
pop
ret
aas
sub
xor
outsb
rorl
jge
xchg
clc
dec
add
add
aam
xor
jp
mov
or
out
xor
scas
lahf
dec
out
push
daa
idiv
mov
dec
xchg
mov
add
sbb
xor
std
mov
adc
and
xor
sahf
pcmpeqb
leave
jmp
bound
mov
stos
sub
test
adc
rol
outsl
les
repz
push
jle
xlat
lock
jne
stc
inc
push
in
insl
or
loop
xor
mov
push
ror
shr
add
sbb
adcb
xchg
push
jp
push
aaa
dec
or
cltd
insl
call
insl
inc
mov
push
mov
mulb
jb
lods
jae
adc
pop
push
jmp
test
inc
je
pop
mov
jle
movsb
mov
out
sbb
ret
mov
fxch
jmp
test
decl
mov
mov
mov
cltd
mov
cmp
movsb
xlat
les
xlat
cmp
je
ret
xorl
in
frstor
mov
pop
loopne
call
xor
xor
test
movsl
lahf
or
and
xlat
pop
idivl
xchg
bound
or
adc
xor
out
push
jg
sarb
mov
push
pop
lret
popa
sub
je
pop
faddl
fbld
ljmp
mov
loope
xchg
pop
sub
fdivrl
ja
or
xchg
hlt
cli
inc
or
cld
out
or
or
or
test
pop
lea
cmp
fwait
add
mov
imul
mov
xor
popf
pop
test
jecxz
sbb
mov
mov
add
push
test
xchg
out
adc
shlb
stos
fsubrs
pop
aaa
xor
ss
mov
ds
xor
aam
popf
cld
mov
in
clc
cmp
cmp
push
jo
mov
scas
sub
jge
ret
pop
cli
push
push
insb
rolb
xchg
dec
data16
test
jg
pushf
fldenv
popf
negl
jbe
or
out
repz
fsubrp
ds
mov
lahf
adc
cmp
icebp
push
in
outsb
pop
xorl
mov
pop
push
test
inc
mov
xchg
dec
dec
sub
dec
adc
mov
pop
cli
inc
sbb
mov
lahf
or
xchg
fildl
dec
loope
push
outsb
and
fs
cmpb
mov
cmp
enter
daa
pop
dec
pop
shlb
xor
push
ret
cmp
into
js
sbb
jnp
cmp
je
fwait
les
push
add
sbb
mov
mov
add
in
dec
cld
cmpsb
push
repz
xchg
clc
fs
pop
icebp
jmp
or
add
sub
push
mov
mov
cld
pop
xchg
mov
jbe
dec
test
call
shl
rorb
enter
insl
mov
mov
das
mov
pushl
sbb
pop
push
or
dec
ds
fstl
fldenv
daa
daa
in
xchg
into
loope
mov
and
test
stc
push
sub
jmp
fwait
xorl
mov
ret
push
lea
ljmp
xchg
adcl
mov
xchg
cmpsl
xchg
sub
inc
pop
and
in
or
out
sub
push
les
pop
insl
dec
fimull
cmpsl
xor
in
xor
stos
sub
inc
jg
ljmp
jg
push
pop
jg
mov
and
inc
dec
scas
nop
dec
mov
push
scas
pop
mov
loop
cld
or
jle
push
cmp
test
pushf
ret
je
cmpsb
testl
add
jecxz
and
test
xlat
movsb
mov
into
loop
jecxz
cld
mov
add
adc
fsubl
cmp
mov
pop
mov
jp
test
pop
xor
pusha
shl
daa
or
imul
cmc
push
mov
mov
pop
or
xchg
loope
sub
cmp
or
adc
adc
fmull
filds
or
mov
sub
xchg
out
jge
jl
push
pushf
jne
rcrb
lods
mov
mov
int3
nop
adc
mov
mov
or
inc
sbb
cmpsl
mov
jb
shl
xchg
pop
pusha
xchg
jmp
test
pop
push
int3
ja
add
adc
sub
dec
pop
push
repnz
leave
das
int
mov
xchg
sbb
insb
ljmp
inc
lret
sub
mov
lock
popf
xchg
pop
out
mov
mov
mov
arpl
int
bound
push
iret
jmp
xor
out
out
cmpsl
movl
idiv
adc
push
ds
loope
les
dec
sbb
int3
xchg
test
sub
add
xchg
jg
push
push
add
rcrb
mov
cld
mov
ds
fildl
clc
sbb
es
cmp
inc
es
in
mov
loope
int3
imulb
sbb
int3
push
sbb
lea
mov
sub
cmpsb
ret
shlb
cmpsl
xor
push
push
mov
inc
leave
pusha
mov
push
push
pop
cli
pop
test
cmc
pop
cmp
xchg
das
xchg
clc
es
inc
stos
pop
pop
mov
in
jecxz
pop
out
rclb
in
fcomip
aam
pop
push
adc
or
popf
mov
inc
add
data16
dec
idivl
pop
clc
add
cmp
mov
xchg
xor
mov
mov
sbb
inc
dec
decb
sub
or
cli
lea
mov
mov
add
push
sbb
pusha
dec
cmp
mov
jl
mov
mov
sbb
data16
adc
pop
xchg
mov
and
rcll
sub
hlt
adc
cmp
daa
frstor
pop
stc
pop
insb
in
lahf
pusha
or
add
sbb
std
pushf
fyl2x
int
adc
or
pusha
pop
movsb
inc
mov
sbb
ret
int
scas
push
pop
gs
popl
add
or
fs
mov
pop
lods
mov
jbe
cmp
and
or
out
jl
jnp
sbb
popa
dec
andb
out
fsts
xor
xchg
cltd
mov
pop
mov
sub
push
xlat
shlb
push
arpl
mov
cmpsl
pop
cmp
pop
or
es
orb
mov
cmpsb
enter
repz
mov
aaa
in
cs
or
cs
test
repnz
jbe
or
cmp
sti
mov
sbb
movsl
addr16
rcrb
faddl
push
bound
sub
movsb
or
adc
leave
mov
jg
cs
dec
movsb
out
xchg
pop
inc
xor
outsl
mov
pop
pop
inc
jno
adc
xor
in
pop
or
out
inc
lods
dec
enter
imul
sbb
mov
mov
fcoms
jp
scas
cmc
mov
add
add
fwait
stc
sti
jecxz
cmc
jns
sub
jmp
cmp
cltd
movsb
std
movsl
push
sub
push
adc
push
sbb
jp
lret
popf
xchg
shll
xchg
daa
aam
lret
xchg
movsl
in
stos
or
xchg
adc
in
or
inc
push
imul
nop
push
cmp
xchg
push
push
jg
pop
add
cmc
pop
ret
sub
hlt
dec
movsl
pusha
insb
in
aas
xchg
jo
xchg
adc
repnz
enter
pop
inc
aam
loope
xchg
mov
stos
stc
xchg
push
cwtl
and
jmp
cld
hlt
or
and
ljmp
push
popf
das
cmc
jns
test
imul
pop
cld
mov
and
add
dec
jmp
adc
jge
addl
inc
jnp
pop
jnp
inc
xchg
sub
pop
sbb
mov
fcomi
mov
notl
out
adc
sub
adc
xor
dec
xor
mov
arpl
sub
fnsave
call
jnp
sbb
lds
mov
cmp
loope
ret
push
sub
jmp
das
pop
pop
dec
rorb
adc
jl
xor
arpl
imul
jmp
cli
mov
push
ret
andb
out
mov
inc
or
dec
mov
mov
inc
mov
out
dec
push
ljmp
call
inc
sti
rcrl
dec
or
mov
mov
ret
and
iret
pop
pop
lret
mov
out
std
push
lcall
lods
insb
cmp
hlt
vunpcklps
xchg
mov
adc
fidivrs
xchg
imul
lds
jg
ss
in
xor
sub
cmpsl
cltd
cli
xor
mov
add
and
adc
add
fidivl
gs
std
or
push
jmp
loope
lds
xchg
ret
test
and
test
adc
repnz
dec
fisttpll
lock
jbe
sbb
jmp
stos
push
imul
inc
lret
mov
push
dec
add
enter
inc
xchg
mov
cmpb
push
cmp
or
push
shrl
adc
shrl
xchg
xlat
sub
outsl
adc
imull
mov
or
mov
test
mov
jl
daa
repnz
and
xor
neg
add
push
inc
sbb
daa
xchg
mov
adc
cmp
data16
fcompl
std
push
push
leave
cltd
mov
pop
repz
jmp
mov
pop
pop
pop
mov
mov
negl
xor
fs
jl
dec
push
lret
mov
das
sti
loope
sbbl
ss
andb
testl
mov
pop
bswap
shll
add
sbb
sub
adc
xorl
jae
in
pushl
and
jno
and
mov
mov
add
push
mov
call
aas
je
mov
pop
xor
jle
je
dec
fldenv
std
fistpll
and
inc
cmp
push
ja
addl
mov
sbb
adc
sub
mov
lock
aas
or
sbb
in
fs
and
test
xor
call
adc
std
roll
mov
cmp
in
fstpt
push
push
outsl
into
aaa
shrb
and
xor
pop
add
push
cltd
push
dec
jb
jge
test
lock
mov
aam
dec
mov
jecxz
mov
xlat
mov
addb
cmp
movb
nop
lods
or
out
xchg
add
scas
xchg
sbb
push
and
jno
push
rcrl
jmp
mov
mov
mov
dec
xlat
mov
inc
adc
dec
mov
pop
loopne
cmp
or
jle
insl
jl
mov
push
out
int
aam
int3
add
imul
bound
add
pop
cmc
cwtl
mov
sbbl
fistl
pop
mov
ss
inc
mov
push
and
jnp
jmp
pop
idivb
lea
pop
ljmp
mov
xlat
shll
mov
dec
repz
lcall
mov
xchg
add
mov
fsubrl
sub
es
lock
outsl
ja
shlb
xchg
push
sub
pop
inc
sbb
pop
filds
lock
sahf
in
ljmp
xor
or
ds
sbb
imul
cmp
mov
fadds
push
ret
cwtl
out
cli
push
mov
cmp
in
or
insl
pop
xchg
add
mov
xchg
pop
test
mov
adc
les
xchg
dec
icebp
imul
push
push
mov
int
xchg
jne
and
pop
mov
negl
lret
in
inc
mov
pop
je
inc
xor
add
push
cltd
sub
sbb
cltd
jecxz,pn
push
stc
or
or
jns
out
cmp
push
adc
push
dec
dec
lea
mov
xchg
das
sbb
inc
pop
adc
dec
jno
shlb
movsb
pusha
jne
xchg
fmulp
sbb
push
xchg
rolb
add
fmull
mov
or
add
aas
hlt
xchg
arpl
dec
and
ror
sbb
pop
inc
mov
sub
enter
xchg
ljmp
cmp
dec
and
mov
mov
movsb
inc
fidivrs
xchg
lcall
mov
xchg
sub
test
dec
sbb
dec
and
dec
sub
in
xchg
out
dec
mov
pop
ret
mov
mov
imul
push
mov
repnz
out
push
leave
fimull
lods
in
push
or
dec
sub
cmpsb
sub
mov
push
jne
pop
repnz
imul
mov
arpl
lret
xor
mov
in
sarl
mov
jnp
sbb
jo
mov
mov
or
pop
mov
mov
mov
and
jbe
lret
mov
cmp
sub
into
addr16
movsl
mov
inc
xchg
sub
mov
aad
lock
jbe
fldenv
push
imul
sub
int3
jmp
xchg
int
pop
adc
sbb
xchg
hlt
sub
lret
mov
mov
stos
cmp
mov
daa
add
stc
adc
adc
jle
cltd
loop
add
pop
inc
xor
jno
mov
pushf
cmc
fnstenv
adc
int3
xchg
idivl
cli
fldt
jno
outsb
inc
mov
or
push
inc
add
sbb
jecxz
mov
add
sbb
push
jnp
inc
repnz
and
gs
xchg
outsb
enter
aad
mov
jae
fwait
clc
mov
add
push
cld
cmp
insl
loop
push
xchg
enter
iret
out
lds
int3
adc
dec
in
mov
out
cmp
shl
stos
mulb
inc
shlb
and
sub
xor
inc
dec
loop
xchg
jmp
inc
xchg
cltd
aam
push
cmpsb
mov
jnp
inc
in
sti
xchg
dec
or
jl
xchg
out
aam
jecxz
mov
push
lds
fsubs
sub
adc
nop
js
loopne
mov
in
idivl
out
and
pusha
or
data16
pop
and
lds
int
push
xor
and
inc
cltd
xchg
sahf
cmp
push
sub
inc
cmp
fbstp
adc
fs
jp
pop
adc
mov
mov
pop
sub
out
push
mov
mov
mov
sub
dec
jl
pop
dec
pop
lock
inc
and
lahf
xor
jae
scas
lret
frstor
and
adc
pop
in
inc
inc
enter
pop
popf
enter
jns
pop
loop
daa
mov
lods
adc
mov
jecxz
dec
jle
dec
xchg
mov
push
insl
scas
cmp
sub
jp
pop
mov
jne
repz
bound
xchg
push
ja
das
cmp
inc
pushl
jne
ret
js
addr16
or
fcmovnb
fdivrl
hlt
add
lods
pushf
jns
leave
insl
and
inc
dec
jl
jo
xor
repz
imul
sbb
jnp
inc
sbb
inc
js
ret
iret
int3
or
shr
xlat
pop
cmp
push
and
mov
inc
push
mov
test
sub
mov
xor
lods
stc
pop
and
ret
lret
mov
mov
and
cmpsl
sahf
mov
cmp
mov
insb
int3
mov
jae
cmc
mov
xor
cmpsl
jmp
das
rolb
out
cmp
sub
mov
lea
lea
cwtl
out
and
sbb
sub
loop
in
sub
dec
inc
out
call
or
dec
or
pop
jmp
push
inc
test
dec
lods
push
cs
es
stc
data16
pushf
mov
push
cmc
das
inc
pop
mov
adc
adc
js
lds
push
cwtl
cs
mov
and
pop
adc
lahf
dec
lock
outsb
rep
imul
shll
leave
sub
mov
iret
inc
mov
fnstenv
aad
call
les
cmp
inc
in
adc
adc
xlat
inc
xchg
jnp
dec
out
xlat
push
mov
and
cmp
icebp
jno
das
inc
or
ja
jg
bound
and
lds
cmp
aad
jno
xchg
mov
cld
mov
lea
jmp
cltd
pop
and
call
insl
loope
mov
movsb
fsubl
mov
out
or
pop
xor
lret
mov
mov
inc
jecxz
enter
jns
movsb
dec
cmp
inc
xchg
rorb
imul
and
mov
mov
inc
repz
fs
inc
mov
lods
out
dec
mov
icebp
in
inc
lods
daa
dec
cmc
adc
xor
notl
push
jno
dec
scas
jmp
add
pop
inc
add
in
scas
pushf
sub
ja
lea
ss
gs
sar
ljmp
xor
cmp
dec
push
rcrl
xchg
std
cmpsb
xchg
cld
mov
adc
jg
pop
inc
push
rclb
loop
jge
in
pop
rcll
popa
mov
xchg
sub
aas
fdivrl
jl
adc
sbb
xchg
add
mov
add
mov
mov
clc
xchg
insl
sub
dec
or
or
and
loope
fstsw
sbb
out
aas
mov
lds
dec
dec
sub
pop
dec
xorb
dec
xchg
xor
mov
push
add
insb
push
ds
xchg
rorb
mov
ja
sub
lock
sarb
inc
bound
imul
ja
jle
and
dec
push
ficoml
push
xchg
mov
dec
leave
mov
cmc
jmp
pop
mov
xchg
popa
in
jl
xchg
sub
fisttpll
cmp
mov
dec
mov
in
outsl
pusha
add
jecxz
movsl
inc
cmp
or
pop
das
add
lods
push
lds
sahf
mov
mov
jae
add
adc
imul
pop
roll
test
dec
sub
cltd
jmp
cmp
push
xlat
repnz
lock
arpl
ret
pop
lds
adc
cli
push
pop
pop
push
lds
hlt
jae
cs
push
xlat
push
xchg
jp
mov
aad
bound
add
sub
subl
and
js
rcl
test
stos
shl
in
mov
sbb
lods
dec
cld
lahf
push
cld
rorl
mov
dec
xorb
add
popa
ds
push
in
popf
pop
leave
popa
jbe
jp
mov
repnz
mov
mov
jbe
mov
pop
mov
fistps
add
xchg
fsubr
pop
mov
in
push
pusha
mov
call
inc
add
aad
adc
rorb
insb
hlt
lods
pop
cmc
push
out
sarl
or
push
pop
sub
xor
and
push
jne
out
ja
sti
jno
pushf
cmp
lret
mov
add
or
movsb
das
add
and
add
jbe
pop
rcrb
popf
inc
jae
gs
daa
repnz
insl
cmp
mov
mov
mov
lret
stos
sbb
mov
sarl
leave
dec
xchg
jns
mov
cmpsl
pop
pop
jle
shll
in
in
out
xchg
daa
fistpll
dec
lcall
rcrl
std
xor
cld
test
mov
fs
call
or
xor
cmp
push
mov
notb
mov
dec
les
push
js
roll
cld
xchg
std
shll
mov
fs
cmc
into
lea
movsb
push
fisttpl
push
cmp
push
sbb
push
jg
and
or
adc
cmp
mov
sub
add
xor
and
xchg
pop
lea
push
pop
inc
mov
hlt
push
inc
xorb
rcr
xor
mov
dec
add
and
push
movsb
inc
mov
jl
push
mov
cmp
aaa
add
xchg
divl
mov
mov
aad
cmp
sbb
sbb
bound
shlb
pop
inc
out
out
das
mov
mov
pop
pop
cmp
push
mov
or
xor
jp
ljmp
and
out
sahf
repz
lcall
inc
lahf
fbstp
call
or
adc
sbb
sub
cmp
jo
jmp
pop
jnp
hlt
mov
xlat
mov
insl
movsb
xor
cmpl
xor
push
dec
pop
add
cltd
cmp
fiadds
sarb
test
inc
mov
xchg
mov
das
push
mov
gs
xor
sar
popa
imul
imul
jle
adc
jge
pop
scas
mov
call
and
sub
addr16
divl
sub
cmp
sahf
sub
push
mov
daa
mov
mov
mov
lret
les
shrb
ret
adc
scas
xor
pop
xchg
sbb
xchg
xchg
out
sub
ds
xor
push
or
lret
jle
js
arpl
lods
mov
or
jno
cli
and
leave
mov
push
imul
shlb
out
cltd
imul
enter
and
sub
pop
pop
or
fucom
in
and
jns
movsl
ljmp
ds
push
and
and
jno
add
push
add
repnz
lods
mov
test
adc
push
outsl
int
jbe
sub
clc
adc
sti
and
lock
push
sbb
in
negb
pop
int
mov
mov
xchg
cmp
add
jne
jns
ret
imul
js
inc
addr16
gs
into
cld
mov
aam
dec
xor
int
jo
sti
mov
jmp
or
sub
xchg
ds
imul
repz
in
mov
mov
in
lret
mov
cltd
mov
cwtl
out
fsubp
int3
pop
xchg
scas
cmpsl
inc
pop
adc
or
repz
cmp
clc
push
fsubrl
flds
mov
xor
inc
adc
cltd
inc
ret
mov
out
jmp
scas
arpl
adc
mov
adc
adc
push
pop
lret
mov
rolb
dec
sbb
or
pushf
or
mov
popa
jns
sti
xchg
movsb
inc
sub
rcrb
pop
xchg
or
pop
sarl
mov
inc
and
pop
fs
adc
mov
inc
int3
movsl
pushf
popa
std
and
insw
insb
xor
test
cmp
fwait
jmp
jnp
xor
push
dec
call
outsl
jnp
iret
aam
pushf
push
or
jle
jmp
movl
or
mov
add
test
xor
mov
call
stc
gs
hlt
sub
adc
mov
lods
jno
cmp
cmpsb
xchg
call
fst
push
in
mov
mov
push
out
outsl
cmp
or
lods
cmpsb
mov
cmp
gs
movzbl
push
push
xor
and
arpl
jb
xchg
lods
jge
aaa
roll
mov
jo,pt
aad
jmp
xor
popa
sub
jle
dec
in
sub
aam
cld
arpl
ljmp
add
imul
adcl
out
movsl
cmpsb
xor
cmp
nop
test
les
adc
jb
ficompl
add
or
mov
mov
push
loopne
rorl
int
inc
pop
sub
xchg
sti
jmp
ds
pop
testb
lods
xchg
iret
fbld
xchg
cmp
int
jp
in
push
sti
pop
pop
test
jns
xor
scas
lock
test
mov
push
jnp
loope
das
mov
dec
mov
xor
sub
push
loope
cltd
daa
jge
jae
dec
jge
mov
inc
data16
pusha
ret
into
dec
ret
ja
ds
add
and
inc
scas
lret
sub
or
movsb
and
jno
es
in
cmp
in
pop
pop
inc
xchg
cmc
aad
xchg
dec
in
adc
sbb
adc
ret
pushf
into
xchg
or
push
aad
leave
xor
js
mov
pushf
xor
inc
ljmp
xlat
fisubrs
xchg
mov
push
in
ja
mov
bound
pop
aam
mov
fsubrl
addr16
aad
adc
aaa
movsl
sub
pop
adc
inc
cmp
ljmp
stc
pop
fsubr
aam
jne
or
or
or
sbb
sarb
or
sbb
inc
imul
cs
fiaddl
dec
lods
adc
pop
icebp
mov
and
outsb
scas
iret
or
and
mov
mov
sbb
jecxz
je
push
mov
mov
pusha
xchg
push
test
imul
fsubr
jns
xor
int3
hlt
xadd
inc
mov
mov
xchg
loopne
dec
cltd
xchg
jecxz
push
inc
outsl
fidivl
mov
loopne
mov
fs
popf
aas
clc
jbe
shrl
icebp
rorl
pop
popa
fisubl
adc
lcall
bound
push
repz
cmp
jg
push
add
mov
lock
hlt
mov
sub
dec
adc
dec
lret
vmaxsd
xchg
sahf
repz
inc
lret
out
jmp
inc
popf
idiv
mov
or
pop
mov
jp
xor
outsl
cmc
jge
sbb
xor
mov
sub
add
sub
xchg
jl
ds
xlat
aam
scas
mov
les
add
rclb
in
test
sti
push
fildll
in
pop
mov
jae
xchg
push
aas
enter
cmp
out
and
pushf
fsubrl
int
inc
pusha
enter
sub
ds
call
icebp
stos
call
stos
push
sub
jecxz
call
and
mov
and
cmp
adc
imul
adc
fstl
out
jno
xor
xor
cltd
mov
jmp
test
pushf
push
imul
xchg
xor
push
dec
popa
push
jg
dec
rcll
and
mov
lcall
dec
mov
repnz
sbb
mov
vcmpss
add
imul
clc
fs
inc
nop
insb
or
lea
push
imul
adc
cs
xchg
icebp
rol
testb
test
inc
scas
stos
sbb
in
rcrl
sarb
sahf
xchg
pop
cmp
cmpsb
push
add
mov
hlt
imul
subb
insb
cld
outsb
mov
cmp
lods
out
jnp
sub
pop
add
jo
lds
call
add
adc
push
pusha
push
dec
jge
mov
mov
hlt
pop
inc
jmp
movsl
jle
rol
add
xchg
jno
lods
idivb
cmpb
mov
cwtl
jnp
sub
mov
mov
das
lcall
popl
jae
add
push
sbb
shl
cmp
popa
inc
insl
pusha
dec
ret
xchg
dec
or
dec
push
hlt
and
sub
movsb
je
sub
mov
test
mov
pop
xor
xchg
push
jnp
cs
mov
lahf
add
mov
into
xlat
ficoms
cmp
xchg
lock
or
xchg
bt
adc
mov
subl
xor
mov
and
sbb
sub
ljmp
outsl
enter
inc
imull
jecxz
cmpsb
xchg
inc
and
xor
mov
hlt
adc
pushf
insb
imul
movsl
mov
jge
xchg
pushf
xchg
xor
int
stos
nop
mov
push
cmpsb
sbb
push
lcall
enter
das
movsb
add
push
push
leave
mov
push
add
movsl
shlb
sub
mov
jae
imul
and
xchg
mov
lock
push
push
mov
sub
xchg
sub
shr
dec
lods
pop
dec
imulb
leave
sbb
xor
dec
pop
lahf
push
aad
sarl
and
ret
sub
jle
mov
pop
mov
test
mov
lea
xor
out
repz
mov
int3
jo
cmpb
mov
lods
add
dec
insl
dec
jl
cmp
in
mov
pop
xchg
pop
sub
fs
and
fdivr
or
cmc
int3
add
mov
dec
pop
jae
xor
jnp
les
addr16
enter
cltd
fimuls
jno
pop
rorl
pop
mov
pop
inc
pop
and
cltd
cmpsl
cmp
movsb
inc
das
xchg
ret
sbb
cltd
loop
add
jecxz
rcrl
les
into
xor
mov
adc
loopne
aas
jne
lods
push
jg
mov
push
jne
loope
stc
out
jecxz
movsb
insl
sub
xor
pop
scas
mov
mov
sti
aad
cmp
imul
test
enter
push
ss
shl
dec
lea
in
div
out
mov
and
xor
and
and
cmp
pop
addl
dec
jl
inc
fbld
fcomps
fsubrl
push
push
mov
or
iret
push
xor
outsb
mov
mov
into
adc
add
jg
and
aas
push
nop
cltd
add
pop
fisubrl
in
cmp
cmp
or
push
jae
adc
or
popf
das
repz
jecxz
fiaddl
insl
call
jb
in
addb
push
and
inc
test
cmpsl
jnp
sbb
xchg
lret
repz
push
cmp
ret
add
lcall
cmp
fdivp
fcomps
jmp
inc
daa
iret
push
and
ds
leave
mov
push
lahf
sub
daa
push
dec
xor
adc
mov
dec
addr16
xchg
fcmovb
addr16
add
sub
adc
jnp
mov
add
sahf
insl
push
iret
loope
lret
lock
outsb
int
inc
dec
dec
cmpsl
mov
in
js
xor
jb
dec
adc
xor
dec
dec
test
jmp
inc
jno
stos
and
stos
incb
mov
sbb
fistpl
dec
or
mov
pop
sub
pop
in
pop
or
inc
es
in
ret
mov
cmp
pop
mov
int3
jl
or
je
sbb
lret
fidivl
imull
sti
or
out
cmp
sbb
pusha
lcall
int3
or
push
push
incb
pop
adc
xor
dec
or
xor
xorb
enter
add
or
pop
cs
icebp
gs
jae
ds
outsb
jge
inc
dec
cmp
pushw
rorb
push
jns
outsb
dec
dec
aas
test
mov
add
aad
insl
mov
cmc
mov
or
mov
gs
int
sbbl
mov
jo
mov
pop
test
push
jle
jl
push
lcall
notl
test
les
cmp
mov
fnstenv
loope
sbb
and
push
imul
adc
stc
stos
push
sbb
jne
cmc
mov
mov
sbb
jmp
cmpsl
fcompl
and
inc
jecxz
leave
inc
push
movsb
mov
mov
pusha
arpl
xor
bound
sub
push
bound
nop
cmpxchg
mov
sbb
mov
push
xor
sbb
dec
outsb
cltd
mov
mov
mov
sahf
mov
call
adc
and
lock
lods
nop
or
call
movsl
sub
outsl
and
nop
dec
fcoml
inc
shl
pop
sub
push
clc
push
xchg
or
rclb
in
mov
xor
mov
gs
fidivs
or
cwtl
imul
jmp
cltd
stos
jg
push
and
daa
inc
pop
pop
jno
aad
das
jnp
pop
xchg
clc
dec
mov
inc
add
push
xchg
pop
dec
das
jo
fmull
cs
popf
push
push
repnz
lahf
test
pop
xchg
lret
sub
jmp
inc
out
loop
push
or
pop
out
cli
add
xchg
lret
add
adc
ret
repnz
icebp
mov
outsl
iret
arpl
or
subl
faddp
jp
call
or
adcb
stos
push
mov
lret
jecxz
xchg
jmp
pop
xor
push
sub
mov
pop
dec
mov
lock
mov
adc
cli
or
xchg
nop
adc
mov
mov
xor
sbb
insb
pop
aad
test
in
mov
add
into
xor
fiadds
fsubrp
in
js
push
loop
inc
mov
pop
out
mov
fldt
mov
or
repnz
sbb
sub
adc
mov
fsubrp
fidivs
pop
leave
mov
movl
faddl
scas
je
mov
jl
pop
addl
std
mov
sub
inc
cmpsl
cmp
add
in
ret
and
jne
push
xchg
cmp
jnp
jno
repz
shr
jg
and
xchg
stc
and
adc
sbb
dec
xor
clc
mov
push
pop
sub
mov
clc
movsl
push
movsb
jo
push
push
sbb
add
ret
push
adc
or
push
lea
xor
cmp
movsb
fldt
pop
mov
aam
imul
mov
fucomi
cwtl
mov
inc
sbb
sub
pop
ficoms
sbb
inc
test
inc
adc
mov
dec
xor
mov
fmul
xchg
jnp
mov
scas
mov
leave
xor
xor
xor
cmp
mul
pop
jae
mov
dec
mov
and
nop
add
es
push
js
xlat
lahf
mov
lds
sbb
fldcw
adc
mov
aad
mov
mov
test
in
push
and
push
out
fcmovbe
xchg
or
mov
sub
icebp
cwtl
iret
lcall
inc
or
aas
xchg
xchg
ljmp
add
test
jmp
loope
aam
mov
xor
xchg
xchg
bound
mov
inc
xchg
cmpsb
pop
and
xor
xchg
cmpsb
inc
aad
fcoms
dec
arpl
cmp
mov
mov
mov
imul
movsl
jne
inc
sti
cltd
dec
mov
in
adc
mov
enter
xchg
cmp
mov
jns
js
pop
and
xchg
or
hlt
pop
movb
mov
inc
enter
jmp
out
push
out
sub
push
test
xchg
mov
push
push
jnp
jp
dec
shl
mov
sub
mov
cmpsl
jmp
add
iret
inc
test
ror
ljmp
mov
dec
cmp
add
sbbl
adc
test
adc
std
add
icebp
sbb
sbbb
mov
lods
mov
notl
call
mov
and
pop
lock
in
sti
mov
call
or
mov
pushl
out
out
orl
mov
or
mov
or
jne
pop
or
mov
daa
dec
rclb
loop
push
add
inc
nop
test
roll
sub
jge
inc
inc
call
jne
aad
push
mov
pop
jmp
sub
mov
sub
scas
js
inc
lahf
pop
and
sbb
cmpb
sub
int
repz
orb
lcall
mov
cs
inc
mov
mov
mov
insb
cmpsl
add
stos
jns
pop
xor
nop
rol
scas
push
jg
push
add
rcr
out
jae
out
jg
or
mov
lret
loope
in
push
xlat
sub
in
hlt
fsubrs
xor
std
sub
add
jns
inc
jae
and
or
adc
fistps
stos
dec
shlb
mov
sub
xchg
or
shrl
stc
push
test
xor
orb
mov
pop
mov
fs
jmp
adc
fdivl
ror
movsl
push
test
mov
push
mov
lret
sub
rolb
inc
sti
cld
hlt
pop
ret
sub
jne
cs
pop
adc
cmp
ret
cmpsl
loopne
push
stos
mov
or
das
push
mov
je
pop
push
pop
stos
pop
mov
push
mov
mov
and
stc
xchg
jne
mov
aam
stc
scas
daa
iret
pop
mov
pop
sbb
outsb
loop
mov
aam
lcall
cmp
lahf
cld
inc
fistpll
ficoml
xchg
inc
mov
fdivrl
xor
pop
dec
inc
shll
add
sbbl
in
hlt
rcl
mov
push
pop
movsl
xchg
dec
int
gs
inc
pop
in
xor
mov
mov
scas
push
fbstp
mov
or
or
je
in
pop
xor
addl
dec
or
add
shlb
aaa
dec
and
daa
mov
push
inc
cli
or
sbb
xchg
rorb
jns
scas
leave
cwtl
mov
fisttpl
or
mov
js
adc
jl
mov
movsl
push
dec
mov
mov
cmp
add
mov
scas
stc
pop
rcl
inc
pop
mov
repnz
pop
pusha
ficoml
nop
add
fwait
test
and
add
fdivl
lahf
cmp
dec
mov
xchg
bound
cmova
fwait
push
xor
dec
gs
pop
cmc
shll
mov
inc
ss
mov
sub
popf
sub
xchg
jmp
gs
and
fnsave
xchg
ljmp
mov
fs
add
in
in
mov
mov
push
jbe
mov
test
push
mov
and
out
mov
push
movsl
and
jmp
repz
arpl
add
and
dec
cmp
xor
jne
mov
ret
push
stc
clc
jno
cmc
rcrb
sub
mov
pushf
mov
icebp
inc
cmp
jb
dec
adcb
mov
ljmp
push
add
xor
pop
cmpsb
loop
int
xor
ret
jle
push
push
xor
xchg
sbb
popa
call
es
cwtl
pop
mov
in
bsf
int3
fadds
and
add
pop
sub
sqrtps
divl
and
jle
sbb
push
push
scas
lds
xor
lcall
fstpt
dec
jmp
jae
ljmp
int3
sbb
insb
cmp
mov
mov
fstpl
add
mov
jle
xchg
dec
nop
popa
clc
cmpl
adc
adc
lds
scas
pop
int
cmp
xor
sbb
push
pop
cmp
out
adc
jbe
test
in
pop
add
xor
push
imul
push
push
mov
bound
stc
mov
iret
push
jno
push
fildll
aam
popa
jno
bound
mov
mov
test
cmp
jb
lock
bswap
insl
cli
push
jae
xor
fwait
push
inc
xchg
mov
das
adc
dec
dec
sub
aad
repnz
push
pusha
pusha
stos
lret
push
mov
mov
aas
and
test
lods
insb
mov
fs
dec
rorl
bound
mov
hlt
lret
adc
outsb
lret
jmp
pop
std
ret
out
sbb
or
add
push
adc
rcrb
pop
loop
jbe
nop
repnz
dec
fidivrs
daa
in
fsubp
inc
mov
push
jno
sub
sahf
dec
imul
enter
addr16
lahf
add
push
lock
add
out
cltd
out
mov
inc
dec
int3
dec
push
sub
test
pusha
xchg
in
sub
aam
repz
and
mov
ret
dec
add
sahf
loopne
xchg
and
inc
jbe
push
add
pop
push
loope
cltd
mov
insl
test
ret
jo
mov
nop
shll
das
pop
jg
and
in
ret
sbb
mov
xchg
xchg
adc
add
scas
popa
dec
ss
push
aad
dec
adc
mov
push
jg
jge
sub
cmp
pop
sub
xchg
xchg
stc
je
cmp
repnz
pop
lcall
popa
mov
jbe
xor
push
aad
sbb
enter
xlat
je
cld
cmpsl
sub
pop
int
xor
push
xchg
xor
push
mov
dec
je
xchg
outsl
add
inc
xchg
add
ds
repnz
push
pop
xchg
aas
inc
ret
xchg
icebp
cmp
xchg
jge
jnp
aas
adc
inc
rol
xor
mov
popa
pop
fildll
sahf
bnd
inc
addr16
pop
movsb
push
jmp
test
rcrb
jae
movsb
pop
cmpsl
adc
push
ja
add
out
sbb
bound
xor
cmpsl
cmpsl
sbb
jo
ljmp
mov
jmp
jno
cwtl
push
adc
dec
dec
lods
fmulp
mov
cli
or
or
cmpsb
or
pop
cmp
xchg
les
jp
and
or
out
iret
add
adc
xor
xchg
in
das
fsubrp
add
push
nop
inc
arpl
add
cmpsl
mov
aaa
jb
cmp
cmpsl
inc
les
scas
inc
stc
mov
xchg
shlb
xchg
add
or
fimull
test
arpl
repz
jne
loope
test
mov
adc
jg
pop
mov
adcb
repz
test
in
cmc
test
out
mov
xor
lea
sub
push
cmp
scas
js
mov
loopne
pop
xorb
out
scas
push
mov
sub
jp
dec
and
push
jbe
out
inc
movsb
clc
pop
loopne
lea
adc
cmp
movsl
mov
imul
push
jecxz
popa
shrl
icebp
jno
adc
push
daa
add
pop
mov
sub
out
shrb
mov
xor
xchg
jnp
and
sub
adc
fscale
popa
jmp
ret
pmaxsw
xchg
sbb
in
mov
xchg
inc
jb
mov
mov
cld
popl
rorl
push
mov
inc
cld
out
arpl
pushf
addr16
xorl
es
icebp
cmpsl
fiaddl
ficoml
pop
push
push
xor
outsb
or
sbb
mov
repnz
addl
movsl
das
out
cmpsl
mov
mov
stos
iret
xchg
arpl
or
or
sarb
push
jmp
in
shrl
xchg
pop
dec
ljmp
mov
je
mov
mov
fwait
cmp
std
fsubl
imul
fyl2xp1
test
pop
loope
and
or
in
mov
sbb
dec
jo
shrl
loopne
dec
notb
mov
mov
ret
ja
jnp
out
adc
lea
xchg
xchg
xor
in
loope
cli
lahf
sahf
push
push
mov
pusha
lret
imul
cltd
add
inc
push
jp
aam
mov
in
je
jo
or
popa
mov
pop
mov
test
dec
mov
add
jo
xchg
cli
shlb
cmpsb
or
inc
adc
jmp
mov
and
into
sub
cwtl
sub
loopne
and
rcll
push
lods
call
xchg
dec
popf
stos
jo
sbb
adc
push
jb
mov
push
outsb
add
push
mov
jg
pop
daa
dec
mov
shl
imul
rorl
imul
push
cs
adc
cld
xchg
jo
cmp
mov
out
fdivl
pop
int3
jle
sub
add
sahf
xor
test
mov
packsswb
popf
mov
cmc
incl
dec
clc
mov
mov
data16
sbb
xchg
jecxz
pop
lcall
adc
jae
insb
mov
cmc
push
adc
push
sbb
and
cmp
push
mov
lock
pop
fmuls
nop
cld
scas
or
cld
ja
and
mov
sbb
push
mov
imul
in
and
jns
push
adc
out
sbb
xchg
and
push
push
and
jge
ficompl
push
or
and
rcrb
rcll
loop
repnz
dec
mov
mov
push
jbe
out
cltd
fsubr
cmpsb
into
xchg
sbb
mov
ret
in
rorl
in
sub
push
cltd
aaa
xor
sub
insb
jmp
add
xor
sti
inc
sbb
xor
inc
jecxz
in
das
adc
add
mov
pop
cmp
and
and
xor
popa
scas
and
jo
testb
out
das
adc
stos
xchg
xchg
jae
cmpsl
popf
cmp
clc
push
test
shll
dec
das
or
icebp
sbb
mov
pusha
and
and
push
jmp
aas
adc
scas
rcr
xorb
jp
cmc
test
dec
sti
mov
pop
cmp
pop
popa
xchg
cwtl
push
es
and
in
jmp
jp
mov
pop
pop
pushf
loopne
mov
dec
sub
sub
loopne
mov
es
mov
jnp
inc
cli
cmp
addr16
mov
scas
popf
inc
inc
jb
sarb
cmp
cld
sbb
mov
shrb
dec
xchg
mov
jecxz
loopne
nop
movsb
inc
inc
mov
cwtl
fwait
pop
push
or
ja
loope
mov
xor
out
jp
test
or
sub
stos
pop
mov
sub
sub
xor
jge
leave
ds
inc
push
das
xchg
add
xchg
pop
mov
sbb
int
test
pop
mov
scas
das
test
hlt
loope
outsb
xchg
jns
shrl
cwtl
lods
sub
adc
jne
mov
mov
mov
cli
jno
push
dec
cmc
adc
sbb
cmp
xor
stos
and
mov
add
add
lret
lret
mov
mov
std
adc
int3
sub
fsubrs
jp
andb
je
addr16
xor
and
iret
cmpl
out
sbb
mov
jb
pop
sub
add
sbb
outsb
out
sub
enter
ss
outsb
xchg
test
nop
fisubs
push
sarb
mov
sub
int
jmp
inc
pop
jbe
sbb
jmp
jl
xchg
adc
mov
or
movsl
gs
mov
mulb
mov
adc
xchg
scas
mov
push
inc
mov
fwait
loope
shlb
pop
dec
sti
add
or
les
inc
cld
push
out
jle
push
xor
or
push
xchg
jle
and
icebp
daa
lahf
push
pop
cli
xor
fistl
sti
out
into
test
cmp
insb
mov
sbb
pop
aaa
add
mov
pop
out
push
sbb
test
push
jle
scas
loop
scas
add
divl
gs
decl
loop
and
mov
stos
aaa
aas
xor
jp
test
pop
mov
bsr
in
push
shlb
sbbl
or
insb
adc
pop
xor
xor
xchg
mov
lock
mov
popf
xor
jge
push
cmp
movsb
sbb
add
fnstcw
out
add
sub
adc
mov
aad
nop
or
lcall
mov
in
shr
mov
stc
cwtl
fucomip
inc
sbb
push
xchg
mov
pusha
aas
inc
jg
inc
pop
push
push
testl
loopne
fisttpll
jbe
pop
sbb
sbbl
adc
repnz
movb
add
xchg
in
aad
out
xchg
sbb
lahf
cmp
mov
outsb
stos
hlt
push
xchg
inc
in
int3
mov
adc
test
ljmp
sub
sub
jmp
push
pusha
mov
and
lock
mov
cld
xor
mov
mov
sub
jg
test
mov
sub
mov
sbb
xor
mov
stos
lahf
gs
arpl
ret
mov
sub
in
popf
jbe
cmp
jns
addr16
addr16
aas
adc
dec
das
mov
mov
lds
out
inc
std
inc
xchg
ret
inc
jb
enter
xor
lds
sbb
mov
popw
jb
mov
cltd
sub
lret
rcll
push
sbb
dec
push
lcall
lret
es
add
pop
fisttps
mull
popa
mov
mov
cmpsb
jle
jae
aaa
aas
pop
ror
stos
fimull
dec
xchg
in
and
scas
pop
in
popf
mov
insb
lods
dec
test
mov
mov
or
outsb
push
pop
cmpsb
fildll
xchg
and
cmp
ret
inc
rorl
inc
sbb
inc
lret
pop
adc
cli
fs
jmp
mov
xchg
lret
lea
test
cwtl
and
insl
inc
out
ss
mov
aaa
push
int
xor
inc
enter
sti
lock
and
mov
movsl
daa
dec
lock
cmp
xorl
or
mov
lret
fmull
test
sbb
and
lods
stc
data16
and
mov
jmp
add
jle
jg
pop
stos
jle
lret
jmp
ljmp
sbb
mov
cmp
es
xchg
cwtl
fs
sti
lock
push
xor
pop
adc
cld
jns
cmc
or
adc
and
xchg
mov
cld
sbb
out
aad
mulb
push
mov
inc
std
push
int
push
cmp
pop
iret
sar
in
loope,pn
xchg
into
mov
push
xchg
pop
in
lret
test
addr16
pop
dec
stc
inc
out
push
xor
xchg
push
jnp
jno
pop
jne
sbb
xchg
adc
adc
test
aam
in
pop
mull
lock
jbe
rcrl
jecxz
mov
mov
rcll
outsb
jmp
jecxz
mov
in
xor
adc
mul
mov
xor
lret
jne
inc
clc
pop
fimull
inc
lds
dec
xchg
cmc
mov
shrd
add
xlat
cmp
push
out
mov
loopne
push
mov
les
lods
scas
loope
mov
xchg
movsb
pop
imul
imul
outsl
jae
shll
ja
jnp
inc
push
sarl
cmp
pop
test
sbb
xchg
cld
mov
in
mov
adc
addr16
stos
pop
mov
xor
enter
mov
movsl
mov
pop
sub
outsl
leave
jne
lahf
psubusw
mov
pop
jmp
inc
sub
jne
cmpsl
and
pop
jp
stos
xor
mov
add
mov
jp
fnstcw
ljmp
dec
dec
cmp
pop
add
and
repnz
adc
mov
ds
gs
or
cmp
stc
jg
mov
aad
mov
mov
xor
data16
ret
test
adc
and
cwtl
adc
jae
test
insl
test
and
ds
adc
xchg
push
loopne
test
call
and
incb
jmp
jle
ret
xchg
and
xorb
xchg
or
push
sub
pop
lock
cltd
in
mov
inc
data16
or
unpcklps
inc
cmc
sbb
rorl
pop
add
push
mov
jne
adc
mov
pusha
jns
push
orb
cmp
iret
sub
int
aas
pusha
loope
aad
pushl
aam
sub
xor
jmp
mov
cmpsl
mov
mov
xor
icebp
pop
rolb
dec
mov
adc
mov
adc
add
shlb
sbb
mov
cmp
mov
mov
pop
stc
or
jbe
std
loop
int3
lret
mov
out
jmp
inc
insb
test
test
sti
jns
dec
cmp
mov
xor
sub
js
mov
push
sub
push
cld
pop
or
jno
dec
daa
mov
cmp
dec
push
inc
and
stos
imul
mov
pop
pop
dec
mov
lea
aas
cmp
dec
rcrl
jmp
mov
xor
subl
add
jl
int3
push
ret
je
cli
in
pop
sarl
cmp
dec
xchg
mov
cmp
pop
lret
jo
add
and
test
fsubrs
mov
fisubl
xor
fidivrs
stos
cmp
push
or
inc
push
aas
fucomip
adc
xorl
in
push
and
int
push
clc
xchg
ret
daa
xchg
jle
cmp
dec
xchg
ss
xchg
mov
xchg
and
dec
pop
lock
mov
cmp
jle
dec
xorb
in
aad
sub
mov
mov
mov
ret
test
jno
jno
and
pop
cmp
dec
or
mov
jl
or
push
and
ljmp
subl
mov
jne
push
cmp
jno
sahf
aas
dec
test
xor
je
mov
rcll
lea
jns
cs
push
in
insb
in
xchg
stc
push
lea
and
aam
and
testl
jns,pn
add
movsb
cmp
add
mov
pop
mov
iret
in
mov
cmpsl
ljmp
lock
lret
jns
jno
inc
jl
mov
inc
jo
mov
adc
test
or
or
xor
mov
mov
es
sbb
push
xchg
mov
dec
push
jl
fmuls
sub
jg
or
xor
pop
enter
roll
inc
aam
mov
jns
data16
xchg
mov
cld
xchg
or
sub
and
dec
cmp
in
scas
xchg
mov
fsts
int
adc
cmp
sub
sahf
daa
into
in
lock
aam
pop
icebp
mov
inc
push
lret
aaa
adc
inc
ss
sbb
gs
loopne
dec
iret
xor
nop
xchg
enter
or
sti
xchg
stos
lret
adc
sets
pop
mov
mov
jmp
loopne
cmpsl
mov
imul
dec
das
mov
pop
cmc
sbb
testb
ret
sbb
cltd
xor
imul
or
loope
jne
sbb
mov
or
sub
clc
scas
mov
ffreep
cmp
and
imul
cmpsl
stc
sbb
insb
push
clc
outsb
stos
pop
mov
ss
int
imull
adc
or
imul
or
add
pop
push
lret
jb
popf
sbb
jno
std
subb
or
movsb
xorl
ss
imull
inc
push
pop
jb
pop
outsb
dec
dec
pop
leave
xor
pop
add
cmpb
in
aad
cmpsb
into
dec
adcl
dec
mov
or
fnstcw
gs
cmp
mov
pop
adc
mov
daa
orl
icebp
and
jp
adc
loope
movsl
sbb
lret
lahf
add
fdivl
add
stc
xchg
cmp
test
mov
das
push
test
loopne
adc
jg
test
incl
out
jmp
outsb
or
in
in
mov
ficoml
mov
lret
shlb
lods
pop
jo
lcall
cmpb
xor
push
mov
push
sub
inc
push
cmp
lret
sub
jecxz
je
jns
out
adc
ret
mov
repz
decb
cli
xor
adc
stos
imul
sar
xchg
loop
jg
jge
std
jmp
adc
add
bound
ljmp
sbb
testl
xor
test
hlt
lret
ficoms
int3
lret
xor
sub
xor
cmp
and
repz
cmp
mov
sarl
or
test
insb
cltd
mov
fistpll
sbb
pop
jb
cs
sti
enter
outsb
inc
jge
enter
mov
sbb
jno
xor
mov
mov
jmp
lea
stc
es
adc
scas
cltd
push
roll
jae
cmp
jle
jno
popf
pop
shr
fwait
sbb
shrl
xchg
xchg
repnz
shrl
push
out
mov
jecxz
in
mov
jl
jae
sti
push
test
movb
rcll
test
push
or
pop
mov
icebp
dec
jno
scas
push
lret
jp
out
push
and
sbbl
daa
movsl
add
jp
daa
pop
pop
imul
scas
xchg
add
mov
xor
xor
in
push
mov
ss
cmc
pop
sbb
pusha
xchg
hlt
fimull
xlat
mov
cmp
mov
pop
xorl
adc
pop
outsb
fadd
pop
iret
pusha
call
lods
mov
push
jno
enter
fisubrs
sbbb
std
cltd
jo
mov
clc
out
test
xchg
ret
aas
ficoml
stc
mov
loop
test
mov
inc
lods
hlt
sbb
in
mov
pop
inc
out
repz
test
aad
lods
jnp
in
les
ss
ficompl
mov
sub
or
enter
std
rclb
and
aad
mov
test
dec
add
int3
sbb
cwtl
in
cs
fdivrl
mov
in
mov
movb
jno
js
repnz
push
cmp
push
push
cltd
adc
dec
cltd
sbb
dec
shrl
pop
mov
inc
je
fisubl
ja
xchg
imul
push
out
rolb
fcoms
rcrb
iret
xchg
out
das
xchg
cli
sbb
fistpl
push
inc
push
mov
pop
and
xchg
or
pop
mov
mov
out
cwtl
push
pop
out
sub
push
hlt
mov
lock
push
push
addr16
sub
xchg
test
iret
xchg
xchg
sbb
or
cmpb
pop
outsb
pop
xchg
pusha
sbb
and
add
int
xor
mov
dec
mov
flds
cmp
inc
xor
pop
pushf
das
xor
insb
jns
std
dec
lcall
and
subl
inc
bnd
jbe
mov
and
push
test
cmc
outsb
cmp
enter
or
adc
jo
pop
mov
pop
xlat
fsubs
incl
push
into
imul
insb
movsl
mov
fmull
mov
call
push
mov
jmp
mov
test
int
mov
xchg
cmpsb
or
sbb
mov
xchg
rol
mov
rcrb
repz
sub
stos
mov
mov
pop
call
lahf
pusha
or
shlb
mov
jae
sub
dec
movsl
mov
push
dec
nop
loop
cmpsl
call
lods
mov
inc
pop
and
xchg
inc
mov
scas
pushl
jmp
les
aam
jne
cld
mov
mov
adc
sub
addb
pop
jecxz
in
incb
pop
imull
sub
adc
mov
jp
cmpsl
in
loopne
mov
xchg
pop
mov
push
shl
mov
popa
push
les
sahf
test
mov
lds
inc
fidivrs
adc
fcompl
mov
out
xor
hlt
stos
outsl
cmp
jno
addr16
cmpsb
xor
cmpsl
inc
mov
adc
or
xchg
dec
outsb
shll
dec
mov
mov
mov
jp,pt
out
and
dec
std
mov
in
push
dec
in
adc
pop
imulb
dec
adc
js
dec
sbb
push
fldt
mov
xor
pop
iret
into
fdivs
lea
mov
sub
mov
push
stos
test
pop
imul
les
out
aad
je
scas
je
in
xchg
add
mov
das
out
cwtl
iret
sbb
add
stos
jns
call
push
pop
cltd
pop
inc
adc
pop
pop
mov
fs
adcl
and
cmp
xchg
addl
int3
test
iret
pop
test
inc
popf
aam
jbe
bound
and
fnstsw
iret
iret
leave
add
push
imul
adc
mov
mov
int3
pop
push
loop
or
fistl
pop
mov
insl
push
cmpsb
xor
push
push
push
daa
mov
jo
fdivrl
dec
sub
mov
xchg
movsb
sub
leave
mov
or
dec
push
jecxz
shll
cmp
fcmovnu
ret
pop
ja
loopne
inc
push
mov
inc
call
movsl
mov
test
jmp
insl
xor
jns
and
std
jbe
je
sbb
xchg
sbb
fstpt
dec
sub
mov
sbb
cmc
and
xor
and
dec
aaa
sub
adc
scas
inc
stos
add
aam
clc
repz
xchg
test
mov
mov
leave
dec
mov
jp
stos
mov
mov
inc
imul
mov
cmp
popf
xchg
negb
das
dec
adc
and
jg
lea
xchg
stos
loope
outsl
cwtl
adc
mov
and
iret
adc
shl
insl
dec
cmp
ljmp
sarb
iret
lds
and
cltd
sub
cmp
fldenv
ret
cld
aaa
xor
lret
mov
and
mov
std
or
in
in
sbb
and
inc
add
arpl
out
scas
or
das
je
xchg
xchg
movsb
mov
popa
mov
dec
mov
cmp
aam
setno
lcall
test
movsb
fisttpll
movsl
and
pop
call
les
add
push
mov
fadd
lods
call
mov
data16
sub
in
and
dec
loopne
adc
aaa
lcall
data16
flds
mov
sbb
pop
pop
mov
mov
addb
xor
xor
mov
push
or
pop
cmc
gs
fadd
add
das
mov
pop
outsb
lahf
sar
and
fiadds
add
roll
mov
cwtl
stos
or
sbb
clc
or
cmpsb
sbb
scas
lods
sub
stc
jp
mov
pushf
addr16
xchg
lret
icebp
mov
cld
lret
push
xor
lds
xchg
add
pushf
push
rclb
xchg
mov
movsb
sbb
ss
pop
or
pop
test
mov
adc
test
dec
mov
clc
jnp
pop
jp
and
push
jnp
push
cmp
mull
pusha
xor
dec
das
xor
mov
in
sub
mov
jns
adc
mov
loope
jb
xchg
sbb
mov
adcb
cmpsl
push
movsb
push
dec
pop
leave
and
stos
and
pop
aas
adc
push
or
xor
leave
dec
and
sbb
aam
cwtl
jg
adc
mov
dec
out
pop
into
jo
or
ss
es
xor
aas
shlb
clc
fistps
sub
call
loop
mov
adc
insl
loopne
xor
dec
dec
or
sbb
mov
push
jp
daa
inc
gs
cmp
adc
in
push
cmp
jle
jle
je
pop
out
movsl
emms
mov
mov
sub
pop
ja
inc
xlat
sti
aaa
repz
sub
jge
push
stc
jl
pop
subl
loopne
pop
shld
je
sub
movsb
inc
sbb
stos
sbb
clc
in
enter
jmp
dec
jle
mov
push
test
dec
sbb
sbb
mov
iret
dec
jp
sbb
jo
sbb
dec
ret
mov
inc
xchg
out
fldcw
mov
jnp,pn
ja
dec
fwait
jg
cwtl
or
mov
pop
sti
cmp
mov
cmpsb
fstl
dec
addr16
std
cmp
insl
adc
sahf
mov
or
xchg
cmp
mov
dec
fadds
add
inc
mov
push
dec
xchg
or
add
pop
jae
mov
inc
out
daa
stc
add
cmp
push
enter
jl
call
cmp
inc
sbb
sub
mov
cltd
lret
sub
movsl
adcb
lock
rep
mov
jb
mov
xor
xchg
lahf
cmp
inc
fimull
xchg
mov
les
dec
inc
fistpl
lds
cld
mov
inc
sub
cltd
mov
addl
stos
sahf
sub
std
test
out
lea
mov
or
xor
xlat
jno
pop
push
pop
mov
mov
lock
aas
and
jns
sbb
adc
push
jne
mov
mov
cli
fimuls
push
enter
cmc
fldt
push
nop
popf
cmpb
sub
add
out
insb
fidivl
cmc
adc
push
movsl
es
and
in
cwtl
insl
dec
or
xchg
test
push
cs
inc
jecxz
and
lock
jmp
scas
add
fwait
sti
ss
les
movsl
mov
shrb
negb
in
setno
fildl
sub
sbb
lcall
sarl
dec
andb
aas
ret
mov
data16
inc
pandn
or
and
mov
leave
or
dec
nop
shlb
sbb
fidivs
iret
push
xor
and
fcom
xor
pop
in
ds
xchg
push
jno
mov
xor
fisttps
xor
jecxz
test
stos
cmp
inc
rcrb
jmp
ret
mov
insl
ss
mov
lcall
lcall
jo
test
jmp
add
cmp
ficomps
ss
jmp
lods
shlb
adc
xchg
sbb
into
or
push
dec
jmp
shrb
sbb
mov
push
popf
mov
outsl
sub
add
mov
add
push
inc
adc
in
jo
dec
call
vmovaps
fiadds
sub
das
lret
mov
lea
testl
rcrb
mov
mov
xor
out
les
inc
in
out
pop
inc
xor
push
jmp
imul
test
aaa
mov
leave
xchg
out
fwait
negb
xchg
int3
insl
test
popa
mov
clc
add
in
sub
repz
mov
nop
scas
cmp
pop
rcrb
mov
adc
nop
or
mov
jno
int
stc
lods
rcll
push
xchg
icebp
insl
out
fmull
add
call
addr16
call
mov
xchg
pop
jns
mov
xchg
mov
xlat
add
ss
daa
andl
cmpsl
mov
bound
pusha
rcrb
int
jne
inc
cmp
inc
icebp
insb
sbb
stc
addl
imul
je
bswap
clc
popf
lods
pop
push
hlt
inc
or
notb
scas
xchg
aas
jmp
inc
cltd
sub
sub
ljmp
lock
loop
and
xchg
decl
cmp
xor
mov
and
fwait
stos
jns
push
jle
xlat
or
and
pop
in
push
inc
pop
lock
add
gs
or
lret
and
rcll
stc
jnp
stos
pop
test
pusha
mov
xor
stc
stc
mov
in
aaa
repz
shrl
sub
xlat
pop
cmp
mov
adc
or
or
add
imul
xchg
or
int3
out
lret
inc
xchg
jbe,pn
hlt
push
cmp
jno
adc
ret
push
mov
mov
ds
pop
lcall
mov
addl
sbb
ljmp
cmp
pop
mov
push
sub
idivl
mov
xor
repz
jo
movsb
pop
xor
push
and
js
lock
inc
add
mov
loopne
fisttps
push
dec
das
call
cs
mov
mov
outsl
mov
enter
pop
fiaddl
sbb
adc
xchg
rol
ds
mov
pop
or
sbb
sub
cld
movsb
mov
testb
sub
mov
sbb
jno
adc
mov
sahf
sub
mov
push
repnz
sub
push
push
popf
decl
into
inc
dec
or
lods
mov
mov
jb
dec
in
or
mov
addr16
imul
insl
cmp
lret
das
scas
xor
pop
insb
adc
popl
out
cmp
jecxz
subb
cwtl
nop
jne
fisttpll
popa
cmp
and
sti
push
jne
in
js
daa
rolb
out
pop
jl
mov
add
cld
lock
adc
inc
dec
das
xchg
in
jp
cltd
mov
xchg
fdivp
mov
mov
inc
cmpsl
cld
movsb
ja
jno
lea
lds
dec
rol
lahf
mov
lods
pop
mov
and
jge
mov
or
inc
out
sub
mov
sbbl
push
les
sub
xor
imul
cs
das
cmpsl
mov
out
dec
sti
mov
in
or
mov
mov
mov
outsb
repz
js
xchg
es
adc
xchg
fucompp
adc
cld
sbb
mov
xchg
inc
sarb
push
cmp
sti
fs
xchg
sub
xlat
rcl
mov
add
rcrb
mov
cli
push
mov
popa
jp
out
call
inc
adc
pop
cltd
mov
cwtl
xor
inc
fistl
pop
iret
ret
push
inc
imul
fildll
pop
shrb
mov
lret
inc
adc
adc
fcoms
xchg
ds
pop
notl
jae
cmc
je
pop
fidivrs
insb
cli
pop
mov
int
cs
test
icebp
cmp
inc
or
adc
in
lret
or
and
test
cmpsb
xchg
xchg
sahf
pop
and
clc
pop
dec
pop
lods
or
inc
stos
push
hlt
rcrb
or
lcall
xor
and
dec
je
and
or
or
add
ss
dec
jl
xchg
jo
ss
add
test
in
xchg
and
loop
int
mov
add
mov
outsl
adcl
je
shr
mov
jnp
ja
repz
ja
pushf
test
adc
das
test
enter
test
xor
icebp
dec
sub
enter
shrl
sub
add
or
or
pop
inc
idivl
inc
mov
xor
mov
push
imul
jnp
in
mov
and
daa
into
or
mov
cmp
pop
lret
bnd
pusha
xchg
xor
push
pop
jno
mov
enter
and
ljmp
mov
and
jb
xor
mov
push
push
sbb
jmp
sbb
int3
loopne
cld
sub
cltd
push
mov
push
call
push
push
mov
mov
in
lods
mov
pmaxsw
popf
lods
xor
clc
ret
adc
sbb
arpl
add
push
cmp
movsl
dec
insl
and
repnz
out
xchg
and
mov
pop
nop
vaddpd
leave
pop
psllq
arpl
mov
shlb
add
pop
mov
lds
ficompl
mov
stc
aas
outsb
notl
mov
shll
push
mov
xchg
pop
mov
xchg
fdivrl
lret
test
dec
mov
mov
jg
ret
lds
movsl
hlt
pusha
lahf
push
lea
and
adc
into
add
and
fsubrl
jb
cmp
fiaddl
loop
sub
dec
outsl
int3
jg
sahf
jmp
or
lret
repz
gs
faddl
xchg
stos
or
notb
movsl
ja
push
imul
sub
sbb
jge
fisttps
inc
xlat
jae
sar
xchg
mov
xchg
enter
shrb
push
sbb
ss
pop
xor
cmpsl
adc
cltd
push
pop
popa
outsl
jl
rorb
or
sub
std
push
cmp
fmulp
in
adc
mov
sbb
mov
ja
scas
jecxz
sub
mov
lea
add
es
xor
lock
lock
out
subl
xor
out
dec
cltd
cmp
xor
dec
mov
sbb
out
push
or
ret
mov
dec
xlat
cs
movsl
in
loope
mov
dec
pop
sbbl
mov
add
pusha
cmpb
movsl
mov
jmp
das
fwait
dec
inc
lahf
mov
cli
dec
test
push
cs
test
mov
int3
clc
popa
push
mov
int3
in
xchg
inc
jmp
sbb
sbb
and
dec
pop
pusha
dec
sbb
in
or
and
leave
dec
sub
clc
jmp
shll
into
repnz
arpl
mull
popf
xchg
mov
xor
jmp
jmp
push
movsl
pushl
jae
or
and
pop
sbb
pop
jbe
mov
cmp
daa
sub
iret
lods
and
xor
out
rolb
mov
aas
cmp
out
dec
into
sub
xchg
mov
sbb
xchg
jge
cli
hlt
test
sti
incb
loopne
mov
loop
movsl
outsl
sti
in
bnd
iret
sbb
pop
loopne
add
fimuls
cltd
jns
xchg
or
loop
nop
mov
xor
shl
ret
adc
mov
inc
jb
dec
mov
loope
dec
incb
and
das
dec
ret
subl
fimull
push
clc
jae
pop
loopne
jecxz
adc
cmp
out
push
inc
jge
into
xor
into
xchg
xlat
add
inc
pop
ljmp
cltd
pop
js
test
and
test
mov
jbe
inc
mov
inc
pushaw
loopne
lret
push
xor
add
xor
stc
mov
mov
stos
inc
adc
adc
ret
pop
pop
icebp
add
mov
lret
insb
pop
jp
test
out
pop
xor
popa
mov
sbb
or
xchg
mov
mov
jecxz
mov
xchg
lods
ret
xlat
and
or
ret
sti
testb
outsl
es
aas
xor
sub
xor
jne
xchg
mov
outsl
mov
inc
mov
fcompl
bound
mov
ret
dec
push
cmp
outsl
add
icebp
mov
fldt
out
or
jbe
fucomp
dec
sub
pop
sub
lods
dec
push
and
push
std
dec
mov
das
cmpsl
cmc
fcomip
inc
lds
or
mov
movsb
cmp
loope
xor
test
pop
ret
dec
inc
dec
fnsave
aaa
ret
adc
xchg
xlat
jl
sbb
pop
pop
sbb
and
sub
es
cmp
mov
push
add
push
add
jg
inc
dec
movsb
fisubrl
dec
mov
sub
mov
sbb
pop
cwtl
cmp
mov
fimull
test
out
push
scas
dec
inc
int
daa
dec
ds
inc
add
jne
fldl
fldcw
cmp
int3
mov
clc
sub
aas
idivl
es
das
imul
adc
inc
pusha
sbb
dec
sub
xchg
out
cmc
jmp
sub
ja
stos
ret
mov
aaa
push
xor
in
imul
inc
cmp
pushf
mull
pop
xor
rep
sbb
mov
divl
lds
lods
sbb
test
or
je
add
mov
push
fwait
gs
jo
pop
and
cmp
sti
pop
jmp
push
jmp
test
icebp
pop
daa
movsb
pop
pop
ja
ljmp
adc
psubsw
imulb
jle
cld
iret
xchg
jge
icebp
out
lock
dec
fisttpl
clc
add
nop
jns
movsb
pop
sbb
in
cmp
or
mov
aam
xor
mov
inc
hlt
rep
data16
pusha
fisttpl
mov
jl
adc
add
cmp
xor
mov
xchg
sbb
fistpl
push
pop
mov
shrb
sbbb
cs
leave
sysret
push
mov
xchg
sbb
outsl
inc
cltd
out
bound
add
or
ljmp
out
xor
jae
push
outsb
and
das
or
adc
ss
shlb
dec
test
jp
fadds
or
add
adc
dec
rolb
dec
push
sbb
jp
les
sub
jg
hlt
or
mov
pop
sbb
cld
lods
mov
adc
iret
mov
lods
ret
xchg
inc
imul
test
sbb
jg
icebp
sbb
xor
nop
clc
jge
jne
add
jp
imul
outsb
push
stc
das
jb
sbb
pushf
test
mov
shl
dec
loope
push
pop
add
cltd
stos
ss
mov
cltd
push
pop
js
jge
xchg
pop
lcall
aaa
xchg
inc
addr16
push
fwait
cmp
xchg
xlat
push
and
mov
jno
xor
mov
out
mov
scas
pop
adc
inc
cltd
mov
dec
jl
mov
jae
xor
hlt
sbb
push
push
pop
and
dec
and
loop
shl
mov
lcall
in
int3
hlt
bound
pushf
sbb
add
mov
adc
mov
daa
jle
sub
test
jl
xor
fs
roll
pushf
insl
pop
jbe
mov
add
pop
jl
lea
fstps
call
adc
sbb
mov
mov
lret
fdivs
inc
cmp
arpl
clc
and
inc
je
insl
mov
xlat
cmpsb
xchg
arpl
in
xor
fdivrs
rolb
js
fcoml
shl
gs
stos
pop
push
cltd
lret
ret
je
idivl
cmp
push
mov
fimuls
leave
cmpsl
cmpb
jmp
dec
xchg
ja
imul
xlat
mov
add
adc
cmpsb
dec
nop
add
xor
jns
add
loop
cbtw
add
add
inc
mov
into
mov
stc
aaa
push
fsubrl
push
jg
mov
dec
adc
pop
je
add
adcb
movsl
jle
jge
xchg
jo
sub
xor
dec
loopne
fildll
lods
cmp
or
inc
insb
sub
push
mov
pop
rorb
dec
sahf
ss
mov
sub
pop
aaa
add
mov
pop
mov
sbb
daa
or
faddl
sub
popf
cmpsl
push
test
adc
cmc
inc
ja
sub
mov
push
push
sbb
mov
loopne
push
cmpsl
sub
lret
mov
mov
xor
clc
movsb
loope
mov
cltd
and
xor
lods
mov
cmpsl
clc
pop
ljmp
in
movsb
or
inc
and
cmc
popf
xchg
ret
push
dec
mov
cmp
outsl
or
cmp
addr16
enter
sub
jb
out
pop
adc
push
ret
jecxz
mov
loope
and
sub
repnz
sti
inc
popa
adc
adc
filds
fsubrl
jnp
mov
and
sbb
dec
and
mov
repnz
pop
cmc
cmp
div
and
sbb
or
stc
push
fidivrs
or
jge
mov
xor
pop
dec
cld
out
into
fists
test
lods
fld
popf
fidivl
jb
mov
into
mov
mov
lahf
jne
mov
xchg
jle
lods
insl
in
outsl
sbb
test
jbe
dec
out
into
cmc
je
scas
xchg
aad
inc
aam
or
in
int3
pop
push
outsb
pop
outsl
pop
sub
insb
or
jno
mov
out
das
icebp
mov
ret
pop
mov
dec
pushf
orl
call
fiadds
jnp
and
mov
mov
add
mov
hlt
mov
rol
mov
js
jmp
mov
nop
push
sub
imul
xchg
pop
shlb
adc
dec
or
sbb
xor
es
sahf
stos
lahf
push
xchg
imulb
cmp
inc
xorb
mov
dec
jecxz
pop
adc
out
mov
mov
inc
icebp
and
sahf
mov
and
sub
out
out
inc
ret
cmp
mov
sahf
icebp
dec
lock
aam
push
xor
cmp
popa
cs
mov
jge
aam
stos
jle
inc
xor
test
sub
sbb
inc
std
imul
in
push
dec
and
je
sbb
fdivs
inc
bound
or
lret
ja
cmp
xor
testl
cmp
and
add
mov
stos
ss
push
inc
outsb
lods
dec
sub
ja
lcall
jne
fnsave
mov
add
repz
jns
sub
nop
divl
test
nopl
repnz
nop
xor
cmp
cltd
int
pop
add
jecxz
stc
aaa
jg
sbb
xor
andl
mov
cltd
mov
add
cmp
adc
cld
gs
gs
scas
in
adc
pop
aaa
or
xor
mov
jmp
push
movsb
xor
ret
mov
movsb
dec
add
mov
pushw
cmp
mov
pop
push
jb
jno
sbbb
mov
outsl
mov
data16
jecxz
stos
pusha
mov
clc
add
sti
xchg
fwait
inc
in
es
cmp
dec
dec
sbbl
mov
xchg
movsl
jmp
adc
int3
cmp
dec
adc
xor
ja
in
cld
push
xor
add
sbb
fxch
dec
rcrl
pop
filds
iret
ss
jl
out
mov
adc
pop
les
inc
push
pop
ds
data16
adc
and
aam
gs
lcall
and
cmc
mov
jb
and
in
xchg
ljmp
inc
gs
xor
mov
xlat
std
mov
inc
push
inc
repnz
cmpsl
mov
dec
adc
lret
lret
push
dec
mov
sahf
pushl
fwait
jae
mov
xchg
mov
and
jne
lea
andl
sti
xchg
lock
inc
out
mov
test
jo
fsub
xchg
enter
aaa
daa
loope
aaa
mov
xor
insl
mov
pop
cmp
xor
xor
mov
dec
mov
movsl
fsubs
dec
nop
dec
leave
xlat
mov
shr
adc
mov
add
jne
loopne
pop
push
stos
pop
shlb
fstpt
push
lret
sahf
fists
pop
xchg
jo
shll
cmpb
iret
push
jecxz
sbb
dec
ss
push
shrb
xchg
sarl
pop
fidivrl
inc
mov
mov
cli
das
sub
xchg
dec
clc
das
push
test
xchg
xchg
sub
jmp
sahf
xchg
jb
jmp
mov
and
jle
in
cmp
ret
fldenv
imul
std
test
loop
int3
mov
and
int3
mov
push
mov
cwtl
clc
sub
mov
mov
sbb
ja
cmpb
pop
push
or
push
mov
pushf
cmp
push
mov
imul
add
mov
les
push
ja
fcoms
cltd
push
rorb
lock
add
mov
or
push
cmp
push
insb
mov
mov
jne
popl
sbb
test
filds
int
inc
or
push
aad
loop
lods
call
addr16
out
sub
cmp
bound
ds
fs
xor
fistps
and
mov
pop
or
pop
adc
pop
adc
into
aam
out
adc
pop
push
aam
testb
movl
out
pop
adc
mov
rcrb
add
pusha
or
inc
push
es
mov
mov
push
ljmp
outsl
mov
add
mov
sbb
test
stos
addr16
and
in
xlat
imul
aas
sub
add
push
mov
pop
inc
xor
push
std
sbb
mov
and
dec
sub
xor
rcl
mov
pop
movsl
loopne
mov
cmpl
jge
mov
adc
lods
movsb
dec
push
fcoml
cmp
imul
lods
mov
xor
dec
cmp
cli
mov
push
lods
sub
jl
jae
lock
ss
and
push
mov
mov
testb
jne
subb
out
push
dec
cmp
pop
cmpsl
add
jbe
push
and
repnz
insl
jmp
adcb
sar
mov
xchg
sbb
add
xlat
mul
mov
cmp
loope
xor
jo
and
cmp
aam
pop
xor
repnz
xchg
mov
dec
adc
push
mov
dec
push
daa
cmp
and
ja
loope
filds
xor
test
rorl
imul
mov
mov
and
loop
pop
xor
in
dec
add
push
jmp
inc
fdivs
test
or
dec
cmp
sub
jbe
push
push
sti
cmp
fcompl
jne
pop
lahf
test
sub
bound
cltd
xchg
ret
es
xchg
rcrb
sarl
scas
mov
mov
mov
in
fimuls
stc
mov
mov
notb
inc
outsb
repz
ljmp
jp
fmul
sbb
jbe
out
dec
sti
dec
mov
icebp
fwait
lods
fistps
or
es
std
in
aaa
call
test
in
mov
popf
adc
dec
pop
inc
jb
mov
stos
out
xchg
rorb
dec
mov
neg
jnp
jnp
call
cmpsb
into
sub
shrl
push
in
int
lock
out
xor
inc
faddl
std
mull
pushl
enter
xchg
repz
dec
jae
inc
xchg
enter
stc
push
dec
sarl
or
fucomip
mov
call
or
sub
xlat
iret
lahf
sahf
jnp
bound
adc
adc
sub
and
pop
pop
ljmp
cmpsl
jne
testb
push
adc
inc
add
mov
outsl
lea
adc
xchg
arpl
sbb
mov
dec
xchg
popa
pushf
or
add
ljmp
xchg
aaa
adc
sbb
pop
sbbb
xchg
subl
sbb
loopne
mov
test
push
mov
xlat
and
push
out
and
cmpsl
popf
push
imul
sarb
xorb
pop
adc
xchg
pop
sbb
jo
push
les
aad
ss
shrl
jmp
jb
inc
cmc
loopne
jl
enter
dec
jmp
xor
jo
div
xor
pop
lahf
leave
pusha
sarb
test
add
cltd
lret
ja
cld
insl
lea
cmp
stos
pop
push
pop
inc
mov
xor
mov
mov
hlt
jg
push
daa
rorl
push
jmp
pop
inc
inc
ficomps
mov
std
mov
pop
xchg
repz
cmp
or
ja
sub
pop
rcll
xor
sahf
or
xchg
lods
loop
mov
add
cmp
popf
nop
mov
aad
ja
push
mov
xchg
mov
inc
mov
imul
sbb
push
fisttpll
repz
push
repz
mov
test
dec
ret
pushf
xchg
cmp
fisubrl
and
in
fstps
xchg
repz
lahf
or
jmp
movsl
jge
dec
pushf
mov
mov
loopne
sbb
dec
mov
dec
cmp
xchg
sbb
repz
add
xor
cmp
inc
pop
xlat
jns
pop
push
mov
pop
fildll
lock
jo
jbe
les
sbb
sub
out
pushf
or
insb
daa
mov
xor
andb
mov
jnp
mov
xor
shrl
pop
mov
jo
nop
mov
test
dec
dec
imul
pop
add
mov
aam
push
roll
and
sbb
or
add
les
hlt
adc
mov
in
aas
sbb
movsb
xor
in
jnp
fildl
mov
pextrw
test
push
insb
adc
pop
and
or
out
adc
mov
das
cmc
add
sbb
pop
outsb
stos
push
sub
xor
sbb
lret
pushf
daa
das
mov
mov
mov
pushf
cmpsb
out
movl
aaa
ljmp
mov
cli
das
adc
scas
adc
setge
pop
and
insb
pushf
adc
sbb
cmp
cs
pop
inc
jmp
cmp
push
jb
rcll
xchg
lret
xchg
fsub
popf
xchg
add
push
inc
xchg
call
fucomp
rcr
mov
and
xlat
into
and
or
cwtl
lods
or
push
stc
xor
stos
ret
test
cmpsl
xor
out
and
xor
sahf
stos
aas
cmc
dec
aas
enter
xchg
pop
jno
xchg
rolb
push
adc
push
and
outsl
rcrb
lcall
shrl
mov
lods
lret
sarb
push
jge
mov
test
jl
mov
into
fs
lret
int3
push
insl
out
movsb
pop
in
and
or
das
sbb
adc
mov
lret
xlat
xor
out
jmp
addr16
dec
enter
mov
mov
frndint
loopne
cmpps
enter
xor
inc
cmc
xlat
sub
pop
mov
mov
mov
stc
adc
loop
xchg
daa
in
sbb
movsl
jle
ja
inc
add
mov
nop
push
xchg
pop
push
push
in
xchg
adc
mov
outsb
in
scas
xor
jle
jg
notb
addr16
push
pop
and
or
push
mov
in
inc
sbb
out
inc
lods
mov
in
or
push
adc
outsl
inc
cli
das
repz
adc
adc
scas
lahf
addr16
iret
jbe
bound
insb
adc
sti
aam
je
and
addr16
in
mov
sbb
loopne
mov
shrl
fcomi
lcall
jbe
jo
fldt
adc
cld
es
test
xchg
scas
lods
jb
sub
push
xchg
repnz
aas
test
mov
bound
push
mov
jne
mov
lahf
xchg
stos
pop
aaa
iret
or
pop
sub
sbb
pop
xchg
mov
aam
dec
inc
or
je
pop
enter
movsb
mov
into
dec
pop
pushf
jnp,pn
lcall
je
cltd
clc
sbb
clc
cmp
cmpsb
movsb
aad
ficoml
xlat
sahf
cmpsb
pop
adc
repnz
sub
fstpl
scas
popfw
xor
data16
icebp
pop
and
faddp
mulb
add
ret
ror
sub
inc
cld
clc
adc
pop
add
and
adc
inc
fcoml
gs
cmpsb
push
out
jl
pop
repz
rcr
xchg
sbb
leave
xor
orb
mov
js
divb
test
addr16
sbb
lcall
in
int
sub
pop
adc
pop
cmp
cmp
arpl
jno
stos
fists
outsb
insl
out
adc
push
std
xchg
lea
fisubs
gs
enter
fsubrl
add
sub
dec
loopne
pusha
leave
arpl
add
fsubrl
push
pusha
xchg
pop
subb
sub
shl
xchg
insb
es
rclb
xor
sbb
out
popf
push
mov
mov
dec
jecxz
mov
lock
popf
daa
mov
adc
inc
loopne
fcmovne
push
mov
xchg
fdiv
sub
fsubl
js
jnp
imul
shll
mov
adc
popf
mov
in
js
in
mov
lock
pop
jg
mov
out
jg
cmovae
sbb
fcomps
mov
pop
mov
in
setge
and
ljmp
shll
cmpsb
fcoms
xor
gs
ljmp
pop
inc
loop
or
aam
mov
xchg
es
adc
add
adc
cmpsb
ja
fbstp
push
and
mov
jge
jmp
fmuls
xor
jo
shr
pop
fimull
sub
cmp
mov
jg
push
pop
enter
and
adc
mov
scas
adc
movsb
lods
rcrl
out
dec
push
insb
movsl
xor
add
fcomps
mov
aam
jno
push
add
test
fildll
sbbb
jnp
cmp
sbb
scas
pusha
lods
hlt
xor
jg
push
dec
jle
mov
or
test
fmulp
mov
dec
push
adc
push
mov
sbb
popf
mov
xchg
jecxz
leave
jno
pop
xchg
sbb
pop
sub
xchg
jne
xchg
xor
cwtl
mov
cmc
in
and
scas
adc
daa
xor
out
xor
cmpsb
mov
pop
cmp
mov
mov
mov
punpcklwd
clc
stos
mov
clc
push
int
movb
in
sub
cmp
dec
loop
sbb
push
test
add
insb
inc
pop
xchg
testl
data16
mov
ret
enter
test
cs
ljmp
aad
stc
stc
jbe
repz
jp
push
jmp
cwtl
fstl
xchg
dec
xchg
aaa
mov
jge
xchg
imul
dec
les
push
add
xchg
cmp
sub
xlat
xor
fdiv
movsl
repz
testb
mov
addr16
and
adc
xlat
xchg
cltd
jbe
ret
cmc
sti
xchg
add
inc
lds
jp
cmpsl
mov
push
sbb
daa
out
fstl
push
adc
mulb
js
xchg
xchg
adc
cmpsb
sti
in
mov
push
mov
or
jge
add
inc
cmp
dec
hlt
in
popf
popf
bound
xchg
jnp
fsubrp
sarb
mov
hlt
shl
scas
jl
or
inc
jbe
in
rol
pop
sub
insl
push
mov
add
or
xor
add
js
sbb
rorl
push
nop
dec
adc
cmc
sarb
add
pop
add
push
mov
inc
xorl
inc
mov
xlat
outsl
add
dec
xchg
sub
jge
mov
jne
jae
dec
sahf
cs
mov
xor
adc
in
fimull
mov
dec
rcrl
add
dec
stos
insb
dec
jle
cmp
mov
xchg
aam
sub
mov
inc
xor
push
test
push
mov
mov
and
lds
or
rol
mov
ds
jle
dec
sub
cmp
sbb
ficoms
mov
aam
cwtl
add
push
cmp
jl
jb
push
mov
xlat
shrb
adc
mov
mov
enter
ja
inc
jge
stos
dec
cmpl
testb
shl
hlt
clc
fs
adc
lcall
dec
movsl
pop
push
cmp
mov
xchg
loope
pushf
daa
jecxz
lods
push
cmp
push
in
movsb
lret
xchg
push
push
mov
or
sbb
mov
xor
sub
jecxz
loop
inc
in
xlat
jmp
mov
xchg
pop
and
mov
or
ret
pop
lods
repz
pop
fnstcw
lsl
cmpb
mov
scas
xor
jg
cmp
mov
pop
mov
jmp
push
xchg
pop
jge
divb
lcall
cli
mov
or
rorl
lods
lea
sbb
jo
add
push
xor
lret
fs
fwait
or
movsb
out
cmp
pop
or
dec
je
xchg
inc
adc
jl
xor
mov
xor
leave
fsubrs
or
push
rcll
das
insl
xchg
ret
adc
cmp
popa
cmp
fimull
imul
mov
stc
mov
jg
fimull
popf
icebp
dec
dec
jae
daa
inc
inc
sahf
lcall
insb
insl
push
dec
push
bound
xchg
cmpsb
rol
lahf
add
xor
or
ds
loope
inc
cwtl
adc
sub
bound
clc
cmp
sub
lds
jl
jl
sub
adc
repnz
std
sub
mov
and
negb
ljmp
inc
inc
in
or
pop
jb
arpl
or
push
mov
dec
mov
mov
loop
int3
or
movsb
push
cmp
jle
ss
ficoms
leave
mov
mov
jmp
add
jmp
jb
add
popf
sub
ljmp
stos
sahf
outsb
filds
mov
mov
icebp
inc
pop
enter
xlat
loopne
pop
ljmp
mov
lahf
jecxz
add
jnp
xor
out
and
int3
lret
xchg
cs
cmp
dec
shlb
lret
cwtl
in
js
in
mov
stos
or
insl
mov
or
dec
jp
xor
mov
pushf
push
jo
jb
mov
cmp
in
xor
ret
mov
aad
popf
movsl
dec
bound
sti
sahf
int3
pusha
hlt
fisubl
adc
in
push
xchg
push
pop
test
ss
lea
lods
add
ljmp
cmpsb
rorl
add
xor
lods
in
lea
sbb
cwtl
or
sub
push
add
adc
int3
dec
scas
mov
xor
push
cmp
ss
ljmp
xor
dec
xor
adc
test
mov
or
les
sub
ret
enter
cmc
punpckhdq
bnd
fwait
inc
stos
cmc
xchg
fldenv
fdivrl
xor
fdiv
rcrb
mov
cmpsb
push
popf
in
lock
pop
add
ss
repnz
push
in
adc
cmp
and
inc
inc
add
cmp
inc
fimull
inc
jge
mov
pop
sub
fcoms
sti
or
xchg
js
push
movsl
std
into
or
sub
cmpsl
aam
cmp
ret
xchg
fstl
sarb
inc
xor
mov
ljmp
es
pop
mov
adc
xchg
popa
imul
les
arpl
adc
mov
push
orl
jle
out
outsb
bound
daa
out
cmp
popf
lret
dec
mov
sub
add
cld
inc
inc
mov
xor
out
lahf
call
and
loopne
ficoml
or
cmp
adc
stos
cmpsl
xor
xor
and
lret
inc
xor
leave
and
xchg
out
inc
sahf
and
ret
sub
or
adc
call
adcb
imul
cmp
shlb
sbb
adc
xor
frndint
fistpl
fbld
xor
jno
xchg
stos
jp
dec
push
fstpt
std
mov
xlat
add
jge
jno
xor
pop
and
pop
mov
divl
loope
and
in
jo
pusha
cwtl
in
adc
hlt
pushf
add
jno
adc
fistpll
enter
jbe
std
push
jbe
std
push
xchg
mov
lcall
mov
ret
mov
sbb
mov
jl
clc
pop
dec
ficoms
push
pop
ljmp
add
cltd
icebp
mov
in
std
cmc
push
jle
mov
pop
pop
jns
outsl
xchg
scas
fisubs
pop
dec
ret
push
adc
push
bound
add
or
into
pop
dec
cmc
xchg
mull
cmp
pushl
mov
ja
inc
sub
into
dec
cmpsb
repz
hlt
xchg
nop
lods
je
test
cmp
inc
push
adc
out
popf
pop
xchg
xor
jge
int
jg
fwait
loopne
clc
sub
in
jmp
or
out
clc
cmp
call
pop
outsb
mov
cli
in
dec
jg
je
loopne
test
loopne
sub
mov
lods
insl
rcr
sub
mov
jge
sub
or
sbb
cmp
dec
lea
nop
test
mov
cwtl
call
dec
imulb
movsb
jb
into
arpl
adc
mov
inc
gs
and
xor
sbbb
jmp
leave
mov
imul
pop
loope
xchg
mov
xchg
divb
int
nop
or
pop
icebp
fcomps
test
inc
jnp
push
cmp
data16
in
jns
imul
or
and
cwtl
test
or
mov
jmp
jae
jl
test
cmpsb
dec
sahf
push
lret
jbe
fisubl
andl
insb
inc
and
cmp
in
xor
sti
sub
roll
repz
test
push
push
push
ss
sub
jne
dec
mov
cmp
cmc
aaa
adc
mov
ss
pop
sub
or
subps
or
push
sbb
dec
mov
and
push
xchg
dec
fsub
aam
std
call
push
je
adc
adc
cmp
les
cltd
addr16
and
jae
add
xor
or
add
das
out
or
xchg
xchg
subl
push
mov
push
and
mov
push
inc
or
pop
sbb
test
push
repnz
pushf
lods
add
loopne
pop
das
dec
imul
pop
ljmp
mov
sub
jns
mov
pop
mov
daa
cmc
push
dec
push
lahf
mov
and
inc
inc
ret
push
mov
stos
rcr
loopne
adc
clc
inc
adc
push
cs
or
cmpsl
imul
shll
loope
xchg
add
ret
ss
pushf
push
mov
addb
call
cld
sub
and
xor
push
cmp
xlat
mov
dec
mov
test
movsb
movsl
clc
or
mov
aad
jl
inc
fdivl
pop
push
stos
bnd
inc
pop
outsl
and
outsl
xchg
jl
pop
icebp
and
push
stos
cmp
incl
mov
outsb
mov
ja
ljmp
aam
fcomps
mov
add
repz
ficomps
loopne
xchg
inc
sbb
fmulp
jae
sbb
sbb
into
jl
clc
loope
mov
bound
inc
aad
pop
cmpb
notl
jg
mov
xchg
sbb
js
jb
cmpsl
fnsave
cmp
sbb
adc
outsb
mov
inc
inc
push
lock
mov
mov
popf
add
div
pop
lock
mov
push
jp
and
dec
or
mov
push
shr
push
negb
adc
pop
cli
je
pop
mov
daa
xor
repz
lret
ds
orl
aam
in
outsb
sub
push
jge
dec
sub
aad
ss
aaa
jp
pop
int
outsl
mov
fwait
jno
lret
movsb
gs
cs
pop
xchg
cltd
push
mov
push
fnsetpm(287
mov
adc
loope
movsl
cmp
iret
pop
xor
aad
outsl
or
pop
mov
insl
jb
movsl
mov
shlb
jp
gs
lods
sub
push
ja
jmp
cmpsb
jnp
jae
pop
cmp
sti
rcll
cmpsl
sub
sarb
inc
out
jns
jp
sub
adc
mov
les
inc
aam
xor
or
adc
int
test
movb
cmp
push
iret
mov
stos
fmulp
cltd
js
in
mov
cmp
adcb
adc
ja
in
inc
test
scas
loopne
dec
push
and
cltd
fs
cld
int3
push
inc
dec
inc
pop
adc
inc
pop
in
mov
xor
popa
sbb
jp
cmp
cmp
jl
add
fs
xor
inc
jge
enter
clc
fiaddl
dec
xchg
sahf
leave
fwait
js
and
fistl
js
push
add
and
ret
enter
movsb
sti
xorl
imul
icebp
aad
inc
pop
push
add
inc
push
test
test
insl
cltd
mov
mov
shlb
mov
nop
daa
xorb
inc
rcrl
cs
pop
lahf
push
and
outsb
imul
lret
push
test
sbb
push
or
sub
sti
cwtl
lods
lods
cs
push
push
inc
mov
inc
jmp
jbe
jae
inc
jae
cmpsb
out
mov
pop
pop
call
lea
and
xor
jno
lock
setg
loop
push
cmc
xor
mov
jmp
xchg
pop
adc
mov
push
test
lods
faddl
movsl
and
scas
repz
adc
xor
fiadds
inc
adc
push
push
cmp
push
xchg
rorl
sbb
pop
push
sbb
inc
mov
dec
mov
orl
xchg
pop
call
jecxz
push
or
loopne
stos
mov
mov
or
dec
lds
adcl
decb
pusha
js
in
pusha
cltd
fnsave
inc
pop
mov
mov
xrelease
pop
sti
adc
and
gs
popf
test
aad
fmull
aaa
out
mov
iret
fisttpl
lods
add
jns
xor
jmp
cmp
add
test
sub
ret
cmpsb
shl
jge
mov
leave
in
pop
adc
push
push
sub
lret
adc
repnz
sarb
or
jo
nop
sbb
cmc
jae
jmp
daa
call
into
in
sub
inc
leave
hlt
push
mov
lock
pushf
in
or
loope
rcrl
pop
mov
popf
push
ljmp
adc
pusha
jg
gs
popf
jle
adc
mov
shlb
sbb
push
fwait
push
xchg
lret
mov
sbb
xor
adc
fsub
mov
pop
push
push
mov
adc
aaa
xchg
pop
out
into
push
pop
and
adc
lods
dec
mov
mov
add
sbb
sub
loopne
insl
pop
xchg
dec
scas
mov
xchg
xlat
push
aad
stc
lcall
push
sbb
into
xchg
mov
add
push
sti
test
pop
sbb
cwtl
xchg
in
imul
adc
fdivl
ja
and
cmp
into
stc
ljmp
sub
push
stos
xchg
and
lahf
xchg
fwait
sbb
ljmp
sti
icebp
test
jg
repz
leave
fadd
lock
imul
inc
sbb
in
mov
mov
and
xor
push
clc
jbe
dec
fsts
loope
mov
sub
mov
lods
push
cs
sbb
loop
adc
xchg
cmp
das
mov
or
notl
mov
mov
bound
push
data16
jo
mov
push
pop
sub
daa
repz
in
add
test
fwait
inc
pop
in
jns
inc
jecxz
push
nop
inc
jnp
int3
pop
pop
and
les
mov
popa
int3
xor
push
ja
mov
aaa
cld
out
mov
dec
xor
add
repnz
shl
daa
pop
add
sub
dec
movsl
aam
fcom
test
fs
frstor
mov
test
or
out
test
sbb
xchg
jae
push
push
and
sbb
jge
rcll
jb
movsb
mov
movsb
xor
cmp
xor
arpl
lods
das
xchg
add
push
inc
push
mov
dec
cwtl
stos
lcall
push
jle
aas
sbb
mov
movsb
mov
outsb
dec
int
int3
ret
jg
or
xor
push
and
lea
shrl
mov
xor
pop
and
mov
cmc
push
add
xchg
adc
and
movsb
xor
loope
cltd
mov
xchg
rorb
inc
sarb
xchg
sub
pop
and
dec
and
inc
scas
movsl
fsts
dec
out
inc
cmp
push
adc
clc
adc
ja
mov
mov
cmp
pop
push
push
out
lock
xchg
or
leave
xor
or
or
xor
gs
jecxz
repnz
test
arpl
std
hlt
ja
sbb
dec
or
or
sub
call
xchg
xchg
inc
jnp
enter
sbb
pusha
popfw
lahf
inc
inc
push
xor
repnz
nop
pop
xor
clc
in
movsl
dec
inc
adc
sbb
dec
in
adc
in
xchg
mov
lea
mov
mov
xor
cmp
movsb
sbb
sub
arpl
sub
cmpsb
push
sub
jno
aad
divl
mov
or
adc
sbb
aas
pop
push
dec
cmc
push
cmp
sub
mov
mov
mov
sbb
divb
clc
repz
jmp
lods
and
scas
lcall
and
and
xor
dec
jmp
mov
mov
fistpl
and
sbb
mov
push
push
test
sbb
loop
ljmp
gs
int
je
fs
pop
pop
movsb
andps
or
xor
clc
repz
or
mov
mov
sbb
in
popw
outsl
call
cs
xchg
hlt
jmp
movsb
pop
cmpsb
test
push
or
lret
jecxz
inc
ja
repz
stos
insb
scas
sub
flds
repz
xchg
add
leavew
cmp
lods
sub
cli
repz
pusha
leave
repnz
mov
clc
cmpsb
jle
fiadds
frstor
sub
out
xor
in
dec
push
pop
cmp
and
mov
in
frstor
jne
outsl
aas
cmpb
jp
mov
aad
lret
inc
rolb
add
cmp
push
pop
ficompl
mov
loopne
fldt
xchg
add
mov
mov
outsb
stos
pop
repz
es
ljmp
push
sbb
loop
mov
mov
nop
xor
call
sub
inc
leave
fnstsw
mov
pop
jl
pop
xchg
or
jmp
dec
dec
into
push
lods
xchg
aaa
adc
adc
hlt
lods
pop
ljmp
test
cmp
cmovnp
mov
pop
mov
pop
jne
or
jb
jmp
imulb
xor
aam
pop
and
inc
xchg
xor
add
jns
bound
stc
xor
std
push
icebp
sbb
pop
bnd
mov
cmp
aad
test
movsl
jecxz
jp
cmp
insl
out
lods
dec
enter
or
mov
cmp
je
out
inc
out
mov
dec
fcomps
adc
out
pop
push
mov
jg
hlt
fildl
mov
inc
outsl
xor
std
mov
andl
sbb
jb
push
outsl
xlat
sub
adc
insl
jle
push
mov
cmp
fidivl
jbe
dec
andl
nop
cltd
sti
cmp
imul
std
sbb
daa
mov
popl
int
bnd
shlb
pop
fstpt
dec
mov
jmp
add
mov
fisttpll
mov
mov
and
or
push
in
ja
enter
jb
scas
scas
push
subb
out
stos
lret
ret
mov
es
or
mov
cli
les
fldcw
push
lds
and
xor
aas
loop
push
sbb
bound
popa
movsb
mov
scas
aas
in
js
push
cmp
cwtl
test
sub
jno
ja
js
jge
emms
and
fs
mov
cwtl
adc
sub
push
dec
xchg
sbb
enter
jns
or
iret
popf
xchg
pushf
sub
push
popf
pop
out
sbb
rclb
mov
sub
dec
jle
mov
lods
adc
xor
sbb
push
in
sbb
in
scas
stos
icebp
aam
shl
mov
push
add
sbb
out
mov
mov
ret
mov
loop
and
dec
sub
pushf
lea
js
test
andb
push
dec
sbb
imul
jno
mov
shll
pop
int
xchg
push
dec
pop
in
inc
mov
xorw
push
rol
fisubrs
mov
iret
jns
clc
push
hlt
cli
sti
fistpl
lock
jno
pop
jg
inc
sub
ret
xchg
add
and
xor
inc
add
mov
adc
mov
inc
inc
push
mov
pop
mov
enter
xchg
out
enter
mov
dec
lock
sbb
mov
cli
dec
into
sbb
inc
mov
test
lret
and
inc
dec
xchg
test
push
ret
xchg
negl
lret
les
fsubrs
push
and
out
cmp
pop
adc
outsb
test
push
test
int3
push
test
out
cli
test
lahf
jae
dec
adc
add
add
or
cltd
ret
repnz
orl
jae
rcrb
lods
sbb
push
bound
out
and
push
and
push
stos
sbb
sub
jo
adc
in
sub
jbe
and
daa
out
cmc
mov
mov
and
or
lock
dec
mov
inc
adc
dec
adc
jbe
js
jl
push
scas
push
test
cmp
xor
cmp
push
bound
dec
or
stos
xor
push
in
fcmovb
pushf
mov
repz
sahf
loopne
fcoms
mov
in
mov
and
cmc
stos
sub
dec
in
mov
mov
push
mov
add
mov
xchg
push
and
test
fstpt
lods
insl
cmp
xorb
mov
mov
test
cmp
add
daa
rcrl
push
inc
mov
adc
xor
lea
decl
popa
pop
pop
jno
sti
les
adc
inc
add
lods
jne
jb
ret
out
int3
fsub
pop
mov
lret
gs
in
fidivl
nop
xchg
dec
cmpsl
adc
inc
pusha
out
xchg
outsl
xchg
mov
dec
fldenv
or
cmpsb
mov
gs
aaa
inc
sbb
aas
or
xchg
loopne
inc
jnp
push
movsl
mov
xor
mov
in
out
inc
adcl
inc
pop
xchg
sbb
stos
mov
adc
mov
mov
js
or
movsl
xor
aaa
stc
push
mov
mov
sbb
pop
movsl
sti
mov
push
or
cs
jl
push
or
in
mulb
int3
mov
test
add
out
jg
lds
dec
in
gs
mov
xchg
popa
aad
das
in
jno
inc
movsl
scas
sahf
mov
test
cmp
xchg
stos
es
fstp
fs
and
adc
adc
dec
iret
in
sbb
mov
in
cmp
and
inc
cli
mov
out
and
jbe
pop
cmpsb
pop
xor
mov
aas
mov
and
addr16
clc
add
ljmp
iret
cmp
aaa
scas
inc
jnp
mov
out
into
adc
mov
loope
push
das
jl
ud2
leave
adc
movsb
outsl
cmp
dec
xchg
cmp
xchg
es
addb
add
test
addl
and
xchg
shrl
push
and
xor
xor
repnz
lret
jae
enter
or
jns
mov
sbb
adc
cs
cmpsb
cmpsb
shlb
inc
repz
xchg
mov
push
popf
push
in
mov
movsl
movsl
push
jnp
hlt
ja
or
push
ficomps
inc
jge
mov
mov
dec
mov
mov
push
dec
aam
push
jno
in
pop
or
jne
push
push
lods
jmp
jmp
adc
xor
in
jp
and
mov
pop
add
adc
adc
and
fsubl
shlb
jno
nop
loop
push
push
mov
lods
lods
jg
enter
loope
adc
aas
movsl
or
movsb
mov
or
push
inc
cld
stos
comiss
ja
insl
jbe
js
ret
iret
or
mov
adc
jo
shlb
repnz
add
xchg
and
data16
jno
mov
mov
pop
lock
inc
xchg
iret
jno
rolb
jp
test
lret
pop
cmpsb
shl
push
ds
sub
cmp
push
scas
lahf
out
mov
inc
xchg
inc
fwait
or
dec
sub
shlb
movsl
sub
ds
iret
gs
nop
and
xchg
pop
cmp
mov
andl
cltd
arpl
bnd
fwait
shl
call
inc
pop
les
mov
add
testb
mov
dec
repnz
inc
sub
and
pop
in
push
xchg
hlt
add
mov
add
fistl
mov
fdivr
xchg
xchg
jle
xchg
test
mov
xchg
ljmp
shrb
call
shll
adc
in
insb
xchg
pushf
mov
adc
ja
push
xchg
push
stos
sub
push
rorl
xchg
ret
aaa
jecxz
dec
out
ds
dec
add
in
fnstsw
nop
jl
aaa
leave
roll
xchg
decl
sahf
cli
push
adc
push
or
rolb
xchg
insb
xchg
mov
stos
dec
jno
dec
sbb
aaa
jle
sbb
add
add
mov
mov
ret
adc
lods
mov
or
dec
mov
jo
mov
inc
test
mov
sub
xchg
repnz
pop
aad
sub
lret
dec
xchg
jecxz
out
movsb
popf
jl
add
jl
inc
scas
fst
insl
dec
mov
inc
mov
sarb
and
jle
sbb
into
or
and
imul
sub
add
daa
dec
fstl
cmpsb
mov
jno
push
arpl
xchg
lods
and
mov
in
push
fadds
test
mov
stc
or
clc
cmc
xchg
cmp
negl
insb
or
aas
imul
int3
adc
lcall
lods
ficomps
subl
inc
into
shr
sub
imul
mov
push
andl
clc
lods
jmp
push
dec
xchg
jnp
or
xchg
decb
lods
rcrb
sbb
aad
daa
int3
pop
jb
cmpsl
mov
or
jmp
mov
dec
mov
ds
movsb
in
push
pop
test
leave
xchg
mov
insl
ljmp
inc
pop
ret
daa
jmp
xchg
mov
adc
cmp
inc
add
lods
mov
cmp
push
xchg
mov
xchg
inc
sbb
add
or
aas
inc
outsb
fsubl
std
inc
jmp
fistps
inc
fistl
les
pop
pusha
mov
jle
movsl
xchg
and
mov
jle
mov
leave
pusha
fldl
clc
loop
xor
fs
aam
jge
loop
jecxz
js
xchg
fwait
popf
inc
mov
add
scas
sti
lods
xchg
sub
and
hlt
fistl
push
out
or
sub
dec
lcall
pop
gs
imul
jbe
xor
fildl
icebp
jmp
dec
mov
push
adc
xor
mov
js
mov
lds
insb
cmpsb
xchg
mov
pop
paddw
and
lret
shlb
bound
shlb
test
fcoml
mov
pop
push
xor
imul
mov
in
mov
inc
mov
mov
push
push
dec
addr16
icebp
std
out
enter
fiadds
dec
cmpsl
shll
sub
imul
cmp
sbb
xchg
aas
jmp
movsb
leave
ret
or
mov
sbb
add
or
mov
and
daa
lret
xor
ja
enter
xchg
xor
cmpsb
stos
int
xchg
out
mov
stc
adc
mov
gs
loopne
das
pop
xchg
sub
mov
mov
loop
xlat
add
lret
shrb
lds
mov
mov
out
fldenv
out
fisubl
movsb
repnz
cmpsb
stos
and
xchg
mov
imul
dec
jg
cli
mov
or
in
inc
push
mov
sub
hlt
scas
arpl
js
lret
sbb
std
and
mov
imul
or
or
neg
sub
roll
in
pop
xchg
gs
mov
mov
mov
dec
jmp
inc
cmpsl
cmpsl
inc
aam
test
inc
daa
sbb
push
shlb
adc
pushf
inc
stc
sub
xchg
mov
fistpl
xor
xchg
xchg
sub
lods
fucomp
ja
mov
and
ds
xchg
jae
sub
and
movaps
push
mov
call
or
mov
push
jle
sub
sbb
jo
mov
aad
gs
fld1
push
xchg
add
insl
fisttps
mov
iret
and
sahf
int
push
push
sub
in
cmp
push
mov
inc
fstps
sub
add
xchg
cs
loopne
cmp
mov
jp
jne
dec
xchg
adc
xchg
lds
aam
inc
pusha
cmp
int
xor
imul
cltd
cmpsb
test
or
aad
insb
ds
lea
xor
fbstp
push
mov
pop
xor
mov
and
mov
rorl
mov
out
push
push
popf
jnp
testl
mov
or
adc
rcrl
ss
pop
ret
jmp
xchg
lock
pop
stc
jnp
mov
mov
daa
or
lret
jb
sbb
dec
out
loope
pop
or
loop
pop
jbe
mov
stc
shl
pop
adc
popa
hlt
out
adc
lea
sahf
mov
ja
pop
or
pop
into
cs
mov
push
cmp
xchg
cmpsb
mov
bound
sub
int
adc
inc
inc
outsb
mov
mov
sar
pop
andb
ja
cmp
addr16
cmp
nop
jne
es
inc
jmp
into
out
pusha
sub
sbb
stc
mov
and
mov
jecxz
push
rol
sti
push
fidivrl
das
mov
xchg
xlat
xchg
test
push
shrd
imul
rcrl
sbb
adc
push
loopne
outsl
jo
mov
dec
adc
imul
daa
clc
jmp
xor
xor
cmp
leave
test
and
push
and
inc
pop
loopne
popa
leave
test
repnz
sub
xchg
sbb
pop
cmp
xchg
mov
xor
adc
inc
dec
jle
nop
push
clc
mov
sbb
cmp
cmc
ret
xchg
arpl
ret
test
sbb
adc
cmp
cmpsl
jb
cltd
mov
xchg
repnz
xor
add
inc
jo
jmp
pop
push
pop
imul
xor
outsl
cli
lret
mov
mov
xchg
sti
mov
int
push
mov
xchg
inc
scas
add
lcall
es
ficomps
push
adc
mov
sbb
mov
add
cmpsl
fstpt
nop
dec
gs
sub
fstps
out
xchg
addl
pushf
add
dec
push
sbb
cmp
mov
popa
xlat
sbb
and
jge
sub
roll
cltd
sub
fmuls
lds
jne
addr16
push
cmp
and
sbb
sbb
dec
out
ljmp
and
mov
test
and
jle
cmc
sbb
push
xchg
add
js
xchg
xchg
popa
jnp
cmp
movsb
jbe
notb
sbb
mov
test
cmp
pop
pop
and
and
pop
aas
lahf
fnstcw
xchg
cmp
fdivs
hlt
cmp
or
sub
insb
fnstsw
fxch
sbb
inc
pop
test
inc
cmp
call
jge
mov
cmc
mov
fcompl
push
xchg
aad
pop
stos
jp
sub
sbb
scas
clc
into
ficoms
sbb
mov
mov
cmp
popa
sahf
sar
js
inc
pop
mov
test
mov
idivl
arpl
jle
or
or
divps
subl
pop
cwtl
fwait
jge
sbb
idivb
mov
vpmaxsw
js
inc
icebp
sub
mov
and
aaa
lods
mov
push
lock
ret
pop
sbb
sbb
cmp
or
out
cltd
xor
push
mov
cmp
xor
cmp
mov
outsl
jno
and
mov
push
adc
lds
call
mov
cltd
mov
lret
mov
lret
in
lea
aad
xor
and
dec
jecxz
cmp
scas
scas
in
lret
inc
cltd
and
xor
add
mov
int
testb
push
pop
and
inc
inc
test
rcrl
test
add
out
cld
mov
sbbb
lcall
std
inc
mov
sbb
sbb
mov
add
inc
mov
or
pop
add
cli
pop
fistpl
push
and
or
lcall
sbb
xchg
cmp
push
push
push
cmp
sub
je
sub
rorl
jne
xlat
ds
test
daa
in
jmp
lock
es
loope
ljmp
in
int
inc
pop
outsl
gs
mov
sar
hlt
add
div
into
jnp
mov
test
inc
mov
int
stos
leave
das
sub
pop
dec
pusha
leave
mov
and
ret
mov
add
gs
xor
mov
add
sub
test
push
mov
enter
push
movsl
push
pop
mov
inc
push
mov
aas
aam
repnz
cmp
jae
mov
les
mov
add
fwait
fwait
and
inc
push
adc
dec
add
test
ret
loope
jns
fldenv
sbb
jge
outsb
push
ret
iret
or
out
xor
popf
inc
lds
popf
cltd
cmp
add
add
mov
clc
fmuls
bswap
ret
insl
and
mov
aad
outsb
push
ret
ja
test
inc
mov
ss
jnp
fcmovnbe
pop
push
orl
or
rclb
fidivs
sbb
or
pushf
cmp
jbe
fs
das
shll
seta
movsb
ret
bound
push
in
into
popf
dec
add
fdivrp
xchg
mov
xor
sbb
xor
sarb
ret
rcr
mov
roll
into
xchg
js
ja
outsb
jno
popl
pop
cli
and
neg
in
sbb
and
lock
not
lret
xchg
sbb
mov
inc
sbb
sbb
cmp
es
xor
jns
mov
add
mov
adc
dec
fnstenv
repnz
shrb
cmp
add
sub
mov
sbb
mov
push
movsl
dec
pushl
sbb
sub
jp
repz
and
cmpsl
rcl
mov
inc
mov
add
jbe
inc
addb
xor
mov
std
inc
push
mov
mov
pushf
ds
shrb
xchg
cmpsb
rorl
fs
sahf
popf
enter
jo
pop
xchg
clc
and
sub
aam
push
jmp
jl
cmp
les
xor
push
pushl
and
fwait
cmp
mov
inc
add
out
icebp
and
and
lcall
mov
mov
mov
and
scas
je
hlt
ret
lahf
xchg
xor
sbb
out
xor
repz
add
push
fwait
bnd
ss
out
mov
movb
fcompl
les
insl
dec
cmpsl
iret
mov
ret
xlat
loop
hlt
popf
lods
or
je
mov
jecxz
das
dec
sbb
fcoms
sub
and
jecxz
lcall
out
mov
icebp
sub
pushf
insl
jecxz
dec
insl
mov
test
mov
out
mov
jecxz
ror
testl
lods
cmp
add
imul
loop
shll
xchg
sbb
test
lea
fwait
add
mov
add
xor
test
out
pop
aas
ljmp
lcall
xor
f2xm1
cmpsb
movd
inc
pushf
mov
cmp
or
subl
dec
jno
dec
out
mov
xor
clc
xchg
or
lds
cmp
mov
inc
push
mov
push
ss
das
and
xadd
je
push
jg
add
add
mov
mov
cmpsb
ret
into
pop
dec
mov
add
fs
jae
xor
stc
mov
mov
mov
xchg
jb
int
push
je
mov
mov
mov
dec
sbb
into
loop
bound
mov
inc
ds
xchg
mov
fsubs
shlb
dec
stc
mov
mov
mov
push
xor
pop
sub
dec
inc
xchg
inc
lret
pop
cmp
and
lock
push
out
add
push
jmp
pop
dec
xorb
ja
pop
adcl
sbb
inc
jge
add
lcall
cs
dec
int
in
sar
mov
cmp
scas
cmpsb
loop
es
out
mov
clc
jl,pt
fs
in
daa
dec
loope
rcr
pushf
mov
sbb
pop
test
jne
call
ljmp
push
push
pop
inc
or
fildl
mov
sahf
mov
fs
out
adc
lcall
mov
ret
and
push
add
push
dec
xchg
les
cmp
insl
add
xchg
and
sbb
inc
loope
rorl
int
les
adc
mov
fxch
out
int
jno
mov
mov
inc
push
adc
insl
fwait
push
sbb
mov
ljmp
out
mov
out
pop
sbb
xchg
out
int
push
test
js
notl
jmp
add
stos
xchg
lods
push
loop
sbb
mov
jo
inc
or
mov
pushf
lds
xchg
sahf
cmp
inc
fldcw
je
fwait
into
notb
push
mov
jecxz
jb
or
push
cmp
push
jne
dec
andl
repz
dec
push
cs
cmp
ffreep
scas
in
dec
mov
cmc
or
xchg
faddl
cmp
call
data16
sti
clc
fcomps
adc
loop
notl
mov
leave
std
dec
aaa
mov
enter
into
mov
xlat
sbbb
aas
into
rol
gs
dec
cs
or
mov
movsl
dec
sub
mov
and
pop
cmp
aam
adc
les
push
inc
mov
adc
xor
cli
push
inc
loop
dec
add
ret
out
popf
jg
or
jo
mov
es
test
jp
adc
arpl
mov
sub
test
leave
out
nop
sbb
sub
pop
add
hlt
pushf
push
stos
in
les
fs
push
fdivrs
pop
outsb
nop
pop
xlat
or
xor
adc
sbb
sbb
mov
pop
sub
fldl
xchg
push
jne
pop
push
fst
xchg
pop
mov
dec
jbe
jns
xor
fprem1
mov
lret
inc
mov
cmp
jecxz
inc
repnz
pop
xlat
and
xchg
jno
xchg
ljmp
cltd
test
jp
call
dec
jnp
pop
or
jecxz
inc
and
les
pop
leave
enter
push
cmpsl
scas
adc
push
or
adc
nop
test
fwait
addr16
sub
popa
ss
pop
xchg
hlt
xorb
test
loop
mov
andb
and
loope
ja
out
iret
inc
fildl
cmp
sbb
jae
xchg
int3
push
or
lret
repz
sahf
sbb
sub
fwait
xchg
outsl
popa
dec
fs
add
mov
add
mov
jg
inc
cmp
or
xchg
jp
push
mov
xor
ficompl
enter
lahf
mov
push
outsl
es
es
leave
jb
xchg
push
lret
adc
mov
adc
aas
flds
test
xlat
push
jo
xchg
add
roll
adc
mov
mov
div
push
loop
dec
ficoml
fs
add
mov
je
in
call
loop
leave
cmp
loope
add
inc
cmc
push
jmp
sahf
cmc
sub
or
pop
push
or
punpcklbw
mov
int
sti
rclb
cmp
inc
jnp
cli
mov
jno
cs
xchg
aad
test
jno
push
jl
push
stos
mov
enter
icebp
in
imulb
mov
push
or
push
mov
test
or
enter
je
loop
mov
fwait
sbb
mov
inc
mov
inc
call
lret
mov
pop
cmovae
sub
mov
lods
lds
fcomps
cmpsl
aaa
jmp
adc
in
add
inc
ljmp
cmpsl
and
sarl
cltd
add
std
gs
cmp
shrb
inc
ds
xor
movsb
std
xchg
lds
add
mov
push
push
and
mov
inc
sbb
ss
scas
adc
push
mov
loope
inc
shl
stc
dec
mov
mov
jno
pop
icebp
sti
repz
dec
testb
int
inc
push
jl
pop
push
jno
add
sbb
jnp
lret
ret
sub
das
in
mov
add
dec
lods
pop
aad
xor
dec
lds
sbb
sahf
jl
xchg
mov
sete
pop
and
jns
fs
push
pop
xchg
cmp
jmp
dec
push
insl
jb
dec
arpl
cmpsl
pop
mov
fstpt
push
and
pop
sub
mov
jae
int3
sarl
adc
stos
mov
mov
pop
cmc
sub
and
mov
aad
in
iret
call
pop
movsb
mov
dec
inc
adcl
ret
jp
sub
outsl
aam
rorb
ja
xchg
push
sbb
subw
stc
pop
jmp
stos
add
mov
and
xchg
or
sub
sub
inc
inc
lahf
fldenv
loop
hlt
cmp
mov
mov
inc
pop
pop
test
int3
adc
push
fs
subl
jne
xor
lods
push
push
jg
mov
and
mov
jecxz
repnz
push
cmp
push
or
cmc
sti
test
lahf
call
sub
lds
insb
ret
outsl
xchg
sbb
in
iret
lock
push
add
jg
sub
push
pushl
pop
inc
out
inc
aaa
arpl
mov
dec
sub
mov
dec
sub
sub
mov
jnp
popf
aad
push
shrb
or
icebp
rcll
pop
cmpsb
not
mov
pushf
or
jg
icebp
stc
mov
xchg
ret
cltd
fsubs
in
inc
push
sub
sti
adc
bound
inc
jnp
test
jp
add
xor
cmc
sub
scas
push
mov
and
pop
cmp
cli
ret
aaa
mov
mov
mov
test
pusha
in
sub
pop
jge
imul
loope
cmp
add
add
push
and
jge
loopne
push
enter
andl
cwtl
mov
je
pop
mov
leave
int3
xor
lds
sbb
lock
jno
clc
sahf
enter
test
inc
gs
icebp
jae
fs
ret
rcl
push
out
mov
push
mov
fcoml
scas
add
insb
sbb
mov
jns
push
rcrb
cld
xchg
push
push
shrb
js
iret
xchg
mov
mov
lds
sub
lock
scas
mov
out
cwtl
popf
pusha
fcmovnb
xchg
in
sub
cwtl
jns
xchg
cmp
cmc
push
dec
push
aam
xchg
fisttpll
inc
popf
gs
jnp
mov
pop
push
in
mov
sub
fisubrl
insl
sub
movsl
addb
inc
insl
and
mov
lea
insb
xchg
xchg
sbb
jns
dec
and
mov
int
mov
dec
inc
mov
repz
lea
hlt
mov
in
stos
into
loop
jne
xor
add
adc
sbb
stos
inc
repz
push
inc
dec
sbb
dec
sbb
cwtl
call
sti
loop
faddp
movsl
cwtl
and
cltd
ja
cli
lcall
xor
pop
shr
inc
sar
cli
add
fyl2x
cmc
cs
adc
pop
mov
lods
pop
push
mov
add
mov
dec
out
lret
cli
adc
into
imul
imul
in
mov
ret
and
and
adc
stc
shl
lret
xchg
xchg
push
adc
leave
lret
lahf
lock
push
mov
sbb
cmp
subl
js
jecxz
clc
push
xlat
sbb
push
loope
fsubr
dec
int3
pop
cs
cwtl
push
sbb
popf
sub
cmpsl
fstl
push
push
cli
mov
cmp
iret
lret
pop
xchg
pop
fcoms
mov
stos
lods
arpl
ss
and
das
dec
insl
insl
lret
rorl
push
push
pop
mov
out
and
jb
flds
mov
aam
leave
insl
mov
dec
rcll
cli
push
aad
loope
push
jbe
sbb
pop
jle
sbb
and
mov
inc
pop
jne
pop
dec
cmp
sbb
inc
cltd
fmul
mov
inc
push
and
lret
cld
inc
ljmp
das
adc
jbe
xor
iret
or
int
ret
insl
push
dec
sub
push
cmp
jl
test
and
dec
sub
mov
sub
decl
add
inc
out
jae
ret
shrl
jl
add
xor
cwtl
jmp
test
dec
cmp
iret
xor
push
and
mov
sbb
add
dec
xchg
sbb
xchg
ds
inc
xchg
and
leave
bound
fistps
add
push
mov
sahf
dec
and
inc
sti
fidivrl
xchg
xor
rcrb
pop
mov
iret
mov
mov
and
in
inc
and
scas
or
inc
mov
sbb
dec
cld
ja
and
mov
test
mov
push
push
jo
fnstcw
scas
push
lret
jle
ja
shrl
ret
insl
jg
add
mov
popw
hlt
cmc
sub
mov
add
push
rcrb
lea
mov
ret
adc
pop
and
xadd
push
roll
gs
out
sub
loopne
aaa
adc
adc
sbb
daa
insb
sub
les
jmp
aad
mov
ds
test
mov
pushf
in
movsl
in
jl
movsb
dec
dec
xchg
lret
mov
imull
mov
packssdw
xor
xchg
loope
roll
cmp
mov
imul
popf
fmuls
fwait
rorb
fcompl
or
jne
hlt
add
push
mov
movsl
push
mov
enter
out
xlat
popa
ret
mov
add
fcoms
xor
add
addr16
cmp
xor
je
inc
cmp
mov
mov
xlat
dec
sub
add
je
sub
cmp
mov
pop
cmp
in
mov
push
push
jb
pop
push
hlt
dec
aad
in
outsl
fiadds
or
shlb
sub
enter
arpl
js
lea
jbe
cwtl
mov
stos
pusha
pop
mov
pop
sub
adc
out
or
inc
test
pushf
in
nop
pop
test
addr16
mov
xchg
pop
inc
jg
imul
inc
int
inc
in
adc
out
je
lods
pop
jno
jne
cmpsl
cltd
xchg
incl
xlat
sub
pop
push
stos
mov
sarl
sbb
int
mov
lcall
add
jmp
sbb
mov
ret
push
pop
insl
jae
in
fidivrs
test
fisttps
lcall
pop
ss
push
add
rorl
dec
xorb
outsl
mov
jb
and
sbb
cmc
xchg
mov
insl
or
mov
dec
mov
movb
test
pop
sbb
xchg
popf
jge
push
test
push
std
test
pop
mov
mov
mov
test
mov
jecxz
loope
ds
mov
dec
pop
outsb
repnz
xchg
xor
imul
adc
push
xchg
fimull
lds
fisubrl
test
adc
pop
inc
clc
test
sbb
dec
pop
pop
lahf
and
ss
xchg
mov
mov
pop
je
gs
jb
xchg
andb
ret
lcall
imul
push
movsl
pop
inc
jmp
outsl
jp
pushf
les
jo
aaa
mov
lods
outsl
mov
dec
xor
xchg
xchg
stos
cmp
cmc
xor
sub
add
mov
jae
add
and
stc
test
rcr
push
push
xorb
mov
data16
mov
sbb
xor
dec
cs
outsb
mov
lea
std
or
mov
pop
aad
sti
and
sbb
pop
adc
andl
push
jbe
inc
push
inc
jle
add
inc
dec
inc
inc
scas
jg
sbb
xlat
std
stos
pop
sub
sti
aas
mov
int
in
mov
add
fld
lret
sbb
mov
testb
popa
lea
or
or
jl
aam
fadd
sub
sub
aas
xor
mov
jl
je
pushl
mov
and
rcrl
bound
ffreep
or
insb
add
adc
or
inc
icebp
xchg
sahf
pop
pop
or
hlt
sub
cli
inc
test
adc
aaa
cmp
mov
fstpt
mov
ss
lret
jb
push
in
loope
cld
xchg
and
icebp
aam
lods
push
xor
lret
aas
add
dec
in
mov
imul
ret
jne
outsl
loopne
in
jg
mov
iretw
sahf
mov
rol
push
push
imul
cwtl
sbb
test
sbb
pop
sub
test
dec
test
out
xlat
enter
add
pop
cmpsb
rclb
gs
aam
cltd
daa
cwtl
sub
push
ss
inc
rcrb
lahf
mov
addb
test
in
pop
test
jne
push
jae
adc
jmp
repz
ja
vpermilpd
inc
cmp
and
cltd
inc
mov
xchg
subl
jg
fwait
sti
push
sbb
push
in
push
mov
clc
jo
dec
out
ljmp
cmp
inc
cmc
adc
cmc
inc
aam
pop
pop
iret
sbb
test
jo
outsb
cmc
outsb
cmp
inc
int3
xchg
mov
aad
inc
mov
cmp
imul
lock
push
cmp
push
scas
int
jbe
xor
pop
mov
adc
mov
fdivs
aam
cmp
mov
dec
xchg
jb
inc
jb
jns
in
cmp
and
loop
mov
adc
mov
shl
mov
icebp
mov
mov
roll
cmpsl
loope
cli
outsb
daa
pop
sub
popa
lods
mov
js
mov
fs
jns
and
dec
ret
ds
arpl
int
rcr
pushf
jno
sub
mov
xor
andl
cs
jle
sarl
mov
pushf
ret
sbb
shll
cmc
add
sbb
divb
mov
dec
in
in
fcomip
pop
iret
push
cmp
call
jp
push
xor
push
shrl
adc
test
inc
out
push
je
mov
jb
jecxz
add
jb
and
flds
mov
dec
mov
push
fidivs
and
mov
lahf
loope
push
jmp
push
and
ja
or
mov
and
ljmp
jg
scas
xchg
mov
jp
or
push
pop
xchg
ljmp
ss
mov
fs
and
fsubs
jo
stc
fcompl
sub
adc
jae
int3
in
jl
shlb
test
imul
or
shl
push
or
and
aam
popf
add
or
jbe
shll
popa
xchg
sar
data16
xchg
ret
inc
test
outsb
pop
cltd
cmpsl
icebp
shlb
lock
mov
xor
jmp
mov
into
lret
clc
push
adc
push
loopne
xor
cltd
and
adcb
pop
leave
and
adc
rclb
stos
and
push
loope
add
std
adc
push
lods
fcompl
mov
filds
and
jg
dec
testb
shll
mov
sub
es
jp
aas
loop
std
and
cmp
aam
daa
mov
mov
sub
shrd
jle
ret
sti
lods
add
xchg
lcall
xor
ljmp
out
mov
xchg
loope
movsl
aam
xchg
push
jns
fst
ds
sbb
cmp
pop
jmp
int3
mov
cs
popa
mov
scas
push
sub
cmpsb
rolb
sbb
and
push
or
sub
add
aaa
sbb
jmp
sub
ret
cmc
into
sbb
int
arpl
lea
int
rolb
sbb
aaa
cmpb
lods
sbb
pop
push
inc
or
mov
loop
stos
push
in
fsubl
sub
jnp
aad
movsb
xchg
push
xorl
inc
add
add
movsl
adc
scas
loopne
mov
out
xchg
jns
lcall
adc
or
fsubs
mov
cld
lods
mov
mov
and
fwait
sbb
sbb
mov
cmp
hlt
pushw
jo
jmp
mov
cs
push
jge
test
andl
pop
fcomip
and
and
ja
jo
mov
stc
mov
gs
push
jo
out
out
pop
push
stc
pop
aam
mov
inc
push
xchg
lahf
aaa
jbe
xor
sub
outsb
repz
popf
sahf
and
test
and
push
repz
idivb
mov
adc
jmp
sbb
mov
push
out
stos
add
push
leave
outsl
pop
loopne
adc
stos
imul
pop
jp
fs
cmc
sub
push
fldt
dec
mov
pop
jno
xor
inc
push
out
dec
addr16
pop
sub
out
pop
stos
dec
mov
repnz
xor
movsb
int3
pop
subb
xor
std
fnstcw
repnz
jae
and
imul
arpl
or
cmp
add
mov
pop
adc
push
lret
pop
add
ja
sbb
or
xchg
sub
fs
scas
inc
test
cli
or
inc
pop
pop
xor
ljmp
push
in
xchg
hlt
daa
mov
out
loop
shrl
test
jno
push
or
ljmp
add
add
and
out
and
xchg
cmp
loopne
ret
in
mov
paddq
cmc
js
dec
dec
cmp
popf
pop
sub
mov
pop
test
or
cmp
test
mov
sub
mov
dec
xchg
das
iret
mov
cld
pop
sub
loopne
movsb
lret
ja
cltd
adc
pop
push
push
push
hlt
into
orb
mov
sub
lahf
mov
mov
mov
push
pop
data16
shrb
xchg
cmpsl
sarb
ret
aas
inc
and
and
rorl
xor
fidivrl
mov
popf
or
push
test
call
repnz
enter
daa
inc
mov
mov
inc
cmp
test
loop
mov
xor
in
add
and
sub
mov
inc
sar
inc
ss
loop
fwait
mov
cmp
pop
rcr
pop
lods
lods
movsb
dec
sub
and
xor
ret
jg
push
cmpsl
mov
add
sub
fwait
adc
sbb
lret
and
mov
mov
outsl
cmpsl
cld
popa
iret
pop
lods
leave
mov
pop
mov
pop
adc
loopne
leave
inc
cld
cmp
add
ret
bound
push
or
out
sbb
cwtl
mov
ds
and
sub
mov
out
incl
inc
or
push
insb
sub
out
sub
pop
jp
add
push
fsubp
ja
loope
pop
scas
fidivs
mov
sub
mov
push
dec
jb
or
fldt
insl
aaa
or
pop
mov
loop
and
outsl
mov
loop
adc
dec
rorl
ja
out
hlt
jl
add
insl
repz
add
and
ret
lahf
xchg
jmp
jl
test
lods
out
rcrb
aas
and
mov
cmp
loopne
pop
movsb
cmp
faddl
movsl
jae
popa
out
into
loope
cmpl
lock
xchg
dec
je
into
xor
in
mov
xchg
adc
adc
jno
js
popa
popa
jns
sbb
int
mov
scas
pop
xor
add
fwait
add
or
loopne
dec
lods
out
mov
pop
xchg
ljmp
adc
inc
xchg
cmpb
mov
mov
adcl
scas
pop
rcrl
jns
aaa
inc
rclb
scas
stos
inc
cmc
mov
xchg
or
push
sub
loop
mov
popa
fstpt
pop
mov
out
and
push
push
lods
in
cmp
stos
mov
xchg
cmc
push
xor
out
cmpsl
roll
sti
sub
lds
and
push
sahf
cmpb
gs
pop
cs
mov
push
dec
push
outsb
xor
mov
ja
imul
lcall
fcmovbe
jns
outsl
out
push
clc
mov
xor
mov
lods
dec
lea
dec
imul
ljmp
inc
nop
sbb
pop
xchg
pushf
frstor
jb
cmpsl
xchg
in
iret
or
lock
dec
xchg
add
jle
inc
sbb
in
and
ljmp
adc
push
mov
repnz
ret
dec
mov
inc
add
push
lods
test
add
adc
jo
lds
ljmp
cld
push
inc
shlb
xchg
inc
test
fsubr
and
or
mov
add
es
jle
xor
xchg
fwait
or
dec
stos
xchg
imull
mov
cmpsb
cltd
inc
mov
mov
int
cmc
ror
imul
aam
mov
and
stos
add
or
xchg
mov
inc
insb
mov
inc
and
mov
inc
push
out
jp
mov
cwtl
push
das
out
into
call
movl
lret
push
test
lods
jae
loopne
lea
les
scas
das
fiaddl
filds
add
addr16
mov
arpl
dec
aad
push
mov
add
arpl
movlps
jecxz
sahf
popa
or
test
push
mov
iret
les
lret
leave
ret
xchg
mov
xor
mov
add
cmpsb
fcomps
std
or
jmp
testl
clc
mov
xchg
adc
ja
test
ret
mov
xor
pushw
out
mov
xor
jmp
pop
mov
dec
cld
fcmovu
inc
jae
pop
adc
jg
nop
mov
sbb
shll
cli
aaa
push
call
push
xor
leave
and
sbb
sbb
sub
repnz
ljmp
testb
sub
jne
insb
into
xor
ret
lahf
gs
je
sti
ljmp
sahf
stos
and
jae,pn
movntq
sbb
xchg
insb
repnz
ret
stc
in
adc
mull
add
adc
dec
xchg
sub
fdivrs
xchg
clc
mov
cli
clc
mov
sbb
and
or
adc
nop
jo
or
adc
lock
fidivl
rolb
clc
aam
and
leave
aaa
push
add
or
idivl
sahf
out
push
sbb
pop
mov
call
rcrl
mov
pop
int3
jl
cltd
ret
sbb
adc
lahf
mov
push
loop
xor
iret
mov
insl
pop
pop
xchg
inc
gs
inc
push
fs
xchg
insl
sbb
scas
add
or
pop
stos
loop
test
mov
icebp
fwait
xchg
fcoms
jns
mov
pop
inc
cmp
add
mov
mov
lds
push
jmp
test
repz
cli
es
mov
inc
rcrb
ljmp
dec
std
xor
mov
mov
leave
div
mov
rcll
int3
sahf
lahf
adc
mov
or
lds
inc
inc
or
xchg
adc
xor
sub
cmp
out
outsb
xchg
inc
aas
push
daa
daa
adc
movlhps
and
mov
lods
adc
xchg
enter
shr
jnp
outsl
cld
clc
ss
dec
mov
inc
loopew
inc
jbe
or
mov
inc
insl
aas
in
into
cmp
mov
inc
adc
or
and
icebp
pop
adc
or
jb
or
std
fiaddl
dec
lret
outsb
inc
adc
jmp
int
mov
jnp
add
notl
xchg
mov
adc
jno
push
repz
mov
adc
xor
inc
add
jno
rcrl
gs
aaa
sub
iret
rcrl
outsl
popf
imul
adc
fisttpll
jae
mov
mov
push
int3
in
pop
mov
fisubrs
lods
sbbl
loop
leave
out
or
addr16
or
xor
jge,pt
cmpsb
pop
and
les
out
mov
mov
rolb
jecxz
mov
cmp
leave
xchg
mov
mov
add
mov
cmp
and
aam
loopne
test
shl
xchg
nop
or
pushw
push
adc
cmp
in
das
pop
popa
inc
cmp
mov
lret
mov
mov
or
js
shlb
cld
imul
add
jne
into
out
bound
lret
sub
jae
sbb
lret
or
out
insl
or
and
pop
mov
inc
test
insb
add
xor
loop
xor
mov
enter
mov
cmp
mov
scas
fcoms
cs
adcl
xlat
int
jae
cmc
mov
xor
ret
shll
jge
pop
lds
icebp
aaa
xor
xchg
adc
mov
mov
mov
mov
or
push
xor
and
repz
data16
push
cmp
dec
scas
pop
mov
aas
pop
out
xlat
push
fidivl
and
outsb
mov
xchg
xchg
iret
pop
loopne
ja
adc
mov
jbe
cwtl
popa
addr16
pop
jno
inc
ss
cmp
push
mov
pop
popf
jl
aam
mov
mov
xor
mov
jbe
movsb
adc
mov
inc
sahf
dec
loope
mov
sbb
cmp
adc
mov
subl
fadds
fwait
pop
mov
test
sbb
sub
lds
jge
icebp
cltd
daa
push
in
mov
lahf
in
xchg
shll
or
xchg
adc
cmpl
imul
sub
pop
pop
les
mov
es
sbb
sbb
jmp
xchg
stos
mov
roll
xchg
push
xlat
xor
inc
jecxz
sbb
xchg
cmp
and
mov
loop
roll
sub
dec
popf
and
sub
dec
sbb
xor
in
xchg
pop
push
inc
dec
loop
je
add
nop
dec
inc
push
jbe
xchg
movsl
aam
or
xchg
inc
push
xchg
pop
fwait
inc
lret
jp
enter
in
lds
push
stos
and
add
sbb
mov
test
xchg
dec
pop
notb
rolb
mov
imul
sar
lds
lcall
iret
mov
pop
and
sub
insl
mov
js
jg
cwtl
mov
in
popf
cmp
lea
push
adc
cs
dec
frstor
into
and
test
dec
and
les
lods
sub
shrb
xor
ja
xchg
pop
out
push
cmp
xchg
pushf
mov
sub
leave
adc
mov
pop
xor
xor
xchg
mov
lock
cmpsl
aad
stc
sbbb
or
mov
lods
subl
gs
xor
std
jae
mov
xchg
add
dec
push
dec
aas
jb
pop
inc
cltd
out
dec
inc
aam
xchg
xchg
sub
sub
adc
sar
mov
dec
daa
mov
sub
and
lds
rcrb
ja
xchg
js
jb
xchg
xchg
adc
dec
enter
not
or
pop
inc
movsl
and
sbb
neg
mov
aam
scas
xor
dec
push
nopl
push
mov
dec
jo
mov
and
movsb
loopne
mov
ficoml
mov
and
dec
push
je
cwtl
inc
jle
adcb
cmp
test
add
push
sar
fdivl
lock
test
xor
pop
push
pop
jo
test
addb
xchg
jmp
push
in
out
inc
push
inc
shr
aam
adcl
inc
call
lcall
jle
add
and
ljmp
jp
mov
or
shrb
test
dec
lea
aaa
push
enter
or
arpl
dec
mov
shrl
mov
lret
mov
and
sbb
add
dec
dec
jae
repz
test
ljmp
pop
out
imul
adc
int3
imul
jg
aad
pop
or
xor
dec
cli
call
popfw
mov
scas
sub
cli
rorl
sbb
aam
fdivl
out
mov
sub
fwait
push
cmp
sub
outsb
sbb
push
loop
icebp
xchg
es
popa
mov
aaa
orb
adc
xor
ret
div
dec
lock
jp
sahf
cmpsl
add
iret
out
dec
sbb
pop
or
sub
add
inc
fimuls
scas
inc
add
or
int
mov
push
outsb
icebp
fwait
jbe
add
call
mov
cld
int3
mov
les
and
mov
stc
jae
and
pop
sub
sbb
dec
leave
outsb
add
inc
mov
add
les
xor
cmpsb
and
xchg
mov
xor
adc
out
inc
data16
scas
je
call
mov
into
push
jecxz
clc
pusha
jnp
jnp
or
repz
out
in
leave
xchg
mov
inc
int3
popf
pop
mov
insl
loopne
adc
mov
add
xor
popa
mov
sub
imul
test
jbe
jp
cmc
ljmp
xchg
cmp
test
inc
stc
aad
lods
mov
push
xor
outsl
add
les
mov
fnstenv
repz
and
ss
ss
cmp
aad
push
xchg
pop
and
jbe
mov
cmpsl
xchg
xchg
sub
cmp
xchg
dec
cmp
roll
repnz
int3
stc
pop
xchg
test
jnp
add
cmc
mov
outsb
in
sub
aad
repnz
out
mov
push
sti
or
jl
gs
mov
push
inc
repz
fldl
sbb
adc
pop
xchg
insl
rolb
lahf
es
in
in
test
imul
mov
insb
mov
xlat
test
inc
or
inc
bound
jge
scas
psrld
loop
and
filds
sbbb
cmc
xchg
out
mov
popf
cmp
out
aam
ds
cmp
adc
in
mov
lds
cmpl
pop
pop
mov
je
in
scas
jp
aas
lods
outsl
imul
int
xchg
clc
icebp
daa
jg
sub
lret
pop
fnstcw
cmpsl
sbb
je
pop
jbe
adcb
mov
push
mov
ja
jae
pop
adc
lea
jecxz
sahf
lret
leave
jp
pop
cmp
std
bound
addr16
lds
adc
addr16
mov
shrl
dec
lods
push
adc
and
idivl
lret
lret
pop
add
push
inc
sub
loope
dec
mov
notl
mov
and
inc
lea
adc
movzwl
dec
loop
shlb
ret
add
mov
lea
push
es
ja
les
mov
and
test
lahf
inc
sti
push
sub
jbe
dec
push
pop
arpl
mov
ficompl
sub
aaa
xchg
hlt
pop
pop
pop
cli
add
pop
mov
sub
call
aad
jg
sbb
xchg
pop
pop
mov
das
lcall
jecxz
stos
mov
cmpsb
push
cs
enter
cmpb
rcl
pop
add
inc
push
fcomp
test
ljmp
daa
outsl
cld
mov
mov
imul
sbb
or
mov
inc
pop
dec
leave
add
out
xchg
shrb
imul
xchg
icebp
cmp
hlt
sub
pop
mov
or
and
mov
push
fisubrl
or
add
insb
stc
arpl
jb
faddl
mov
lods
leave
or
and
mov
outsb
lods
inc
xor
add
mov
pop
dec
cltd
test
xchg
and
shll
in
adc
js
push
mov
cmp
adc
pop
add
in
mov
pop
push
in
mov
push
testl
and
loop
roll
shll
jle
add
daa
mov
ret
xlat
cmp
sbb
cmp
cmc
jne
ds
sbbb
outsb
xor
mov
jle
or
cmp
les
shl
xor
fldcw
out
std
outsb
repz
xor
pusha
push
das
mov
shl
dec
rcrb
jnp
xor
ret
jno
cli
add
pop
pop
cli
jp
sub
xchg
xchg
movsb
ret
jge
mov
addl
filds
addr16
cmpb
mov
mov
cmp
xor
fisttpl
push
js
cmp
insb
idiv
xchg
popf
inc
dec
out
inc
bts
arpl
and
push
and
mov
jg
mov
in
out
out
push
inc
orl
or
inc
scas
lods
int3
inc
fcomps
cmpsl
daa
ljmp
push
push
mov
dec
nop
push
sub
lds
dec
adc
push
xchg
or
push
or
in
dec
mov
rcll
mov
sbb
pop
pop
xchg
mov
jge
stos
andb
xchg
dec
inc
jmp
aas
sbb
std
shrb
rdtsc
xor
ds
pop
jns
outsb
and
add
mov
fs
push
xchg
sub
lret
les
pushf
test
daa
mov
xor
mov
je
mov
jbe
movsb
imul
mov
loop
xchg
push
nop
dec
jge
cmp
loope
into
loope
pop
test
dec
add
jg
xchg
gs
adc
dec
inc
mov
cmpsl
shl
dec
scas
dec
cli
push
lods
xchg
push
add
push
insb
dec
in
mov
in
xchg
out
or
adc
arpl
xor
or
dec
mov
pushf
shll
push
pop
sub
outsb
xchg
mov
andb
dec
push
pop
fmuls
push
in
stos
loope
icebp
int3
lret
xchg
adc
jo
fisubs
xchg
into
leave
cmp
or
ficomps
mov
ds
es
fldenv
out
dec
cli
mov
inc
fdivs
push
shrd
stc
mov
stc
mov
out
adc
insb
cmp
pop
add
mov
adc
cmpsl
pop
adc
sahf
hlt
mov
mov
mov
and
cmpsb
xchg
roll
sub
xor
dec
movsl
adc
or
xchg
xor
add
cltd
test
sbb
xchg
adc
xacquire
filds
sub
inc
lcall
inc
insl
sbb
sub
hlt
and
ja
pop
imul
and
cld
jg
lock
shrb
jmp
sbb
and
fdivrs
rorl
xchg
pop
mov
pushf
aas
mov
push
and
inc
inc
out
repz
adc
int3
gs
dec
xchg
sbb
add
orl
fs
and
push
jno
adc
xchg
or
push
pop
or
loop
pop
lock
cmc
dec
dec
lret
sbbb
push
push
mov
add
jp
cs
and
xchg
adc
imul
jmp
or
ljmp
hlt
add
or
pop
cs
dec
jl
jmp
mov
jne
orb
into
imul
fisttpl
insb
push
loope,pn
addb
in
pop
std
jbe
jnp
push
loopne
mov
dec
jne
sahf
cmp
push
mov
cmp
lea
out
mov
push
xchg
jns
rcll
and
scas
mov
andl
lea
aam
xchg
sahf
pop
xchg
cwtl
cmp
mov
mov
cmp
jae
pushf
cmpsl
pop
or
inc
push
push
lcall
stc
dec
inc
out
xchg
adc
ss
in
push
push
jns
mov
int3
mov
dec
aas
mov
cvtpi2ps
jmp
mov
aas
cmp
xlat
push
mov
dec
out
and
psubsw
ficoml
mov
adc
aad
push
je
test
inc
push
mov
bound
lahf
stos
lds
push
lods
adc
mov
sbb
out
push
jl
lret
fisubl
sub
imul
movq
idiv
mov
or
mov
cmp
cwtl
jmp
data16
loope
xor
jecxz
aas
add
add
dec
cmp
js
mov
je
mov
call
scas
shlb
jle
adc
mov
cwtl
sbbb
adc
lods
lcall
cwtl
mov
push
push
insl
inc
mov
pop
pop
aad
sbb
pusha
arpl
add
cmp
mov
mov
push
adc
and
mov
insl
lcall
test
ja
xchg
out
fs
nop
cmp
adc
ret
cmp
dec
jg
mov
mov
mov
dec
mov
sub
outsb
inc
cld
adc
arpl
fistpll
mov
test
lea
and
mov
and
jle
add
rcr
inc
loop
ds
pop
test
fnstsw
pop
xchg
iret
add
jge
push
stc
sbb
in
or
mov
and
mov
xchg
inc
test
jecxz
pop
and
push
fwait
xchg
popl
jnp
or
pop
je
or
gs
cmc
xlat
cmp
leave
jecxz
sbb
and
mov
xor
mov
mov
push
outsb
xchg
lds
xchg
inc
mov
sti
movsb
xlat
pop
daa
int3
jno
out
aas
add
insl
cmc
jg
je
push
xchg
popf
sbb
ret
mov
xchg
and
jmp
out
rclb
push
mov
jg
or
xchg
push
imul
xchg
jbe
pushf
and
jecxz
add
into
fiaddl
int
les
dec
out
pop
mov
jp
dec
scas
dec
stos
and
mov
sub
jne
pop
popf
addr16
jl
mov
repz
cwtl
jnp
pop
xor
or
xor
repz
xchg
movsb
xchg
daa
and
cmpsl
adc
or
push
dec
popa
movsb
scas
or
pop
mov
mov
adc
flds
sub
jns
push
ss
mov
and
pop
aaa
sbb
cmp
mov
push
arpl
loopne
mov
and
or
movsl
into
and
push
or
ret
pop
cmp
dec
xchg
inc
fcomip
inc
push
popf
mov
stos
int3
jl
pop
push
xor
or
push
cwtl
andb
push
aaa
mov
pop
hlt
and
xchg
inc
jbe
cmp
dec
sub
mov
mov
mov
push
sub
mov
sbb
sbb
mov
mov
add
loope
pop
pop
cwtl
xchg
inc
jo
jl
fwait
in
pushf
das
cli
add
shlb
daa
dec
pop
xor
out
cmpsb
sbb
mov
fsubrs
testb
js
cmp
dec
adc
int
mov
mov
data16
xlat
cltd
add
cmp
or
mov
and
lods
and
or
mov
call
cltd
push
mov
xor
sbb
pop
nop
test
lahf
dec
pushf
ja
sbb
andb
movsl
push
pop
paddd
and
mov
aam
adc
jae
out
push
xchg
popa
sub
popa
xchg
js
pop
sub
pushf
pop
add
cltd
push
mov
pushf
push
push
pop
dec
push
dec
into
test
xchg
push
cli
out
mov
dec
xchg
and
dec
sahf
mov
xchg
je
jecxz
sbb
jmp
aas
mov
mov
rorb
jecxz
xchg
mov
je
into
in
pop
xchg
sub
sbb
inc
pop
jl
pop
and
fimuls
sbb
hlt
lret
imul
inc
imul
outsl
sub
dec
out
cmpsb
imul
loope
into
mov
inc
mov
test
imul
jmp
cmp
or
pop
push
fsubl
mov
fs
lods
rcr
cltd
bound
lods
arpl
test
mov
cmp
lahf
inc
push
movsl
and
jg
je
sbb
mov
rorl
pop
fcompl
mov
imul
inc
push
jae
fdivs
jg
push
xchg
xchg
sub
loope
arpl
xor
dec
sbb
inc
xchg
mul
out
leave
push
add
lea
inc
pop
adc
jg
insl
mov
shlb
lahf
add
test
jge
dec
daa
scas
xchg
mov
inc
inc
lret
scas
in
rcl
mov
or
xchg
leave
add
and
sbb
sub
scas
mov
mov
mov
mov
in
add
mov
dec
cli
mov
push
ljmp
cltd
sbb
add
mov
rcl
dec
int3
add
shll
imul
in
jge
cs
or
shl
into
repz
movsl
in
push
add
imul
fsts
rcll
loop
fstl
lret
iret
pop
insl
mov
add
popf
sahf
fmuls
dec
cli
in
scas
outsl
push
xor
nop
cmp
sbb
mov
das
mov
scas
jge
push
scas
mov
loop
popf
cltd
ljmp
add
fistl
xor
scas
fldl
ja
or
mov
or
test
fsubrl
adc
inc
stc
sti
or
push
xor
adc
sbb
and
pop
and
dec
mov
loope
adc
lea
mov
stos
jb
xchg
jg
insl
inc
ja
ret
jl
xchg
dec
push
mov
in
adc
xor
pavgb
dec
mov
pop
or
rcrb
aaa
rclb
and
pusha
int3
std
shlb
jne
test
adc
loope
pop
into
cli
test
sub
movsb
mov
inc
or
mov
sub
daa
lret
mov
test
or
dec
push
lea
ret
lds
sbb
mov
aas
or
imul
jmp
das
dec
xchg
rclb
jnp
pop
jge
loopne
sahf
in
inc
ret
insl
aaa
cmp
imul
in
dec
inc
add
mov
push
push
and
bound
mov
mov
adc
sti
enter
mov
adc
iret
dec
push
push
ljmp
subb
dec
pop
fwait
push
xchg
pop
xchg
sar
inc
jo
xor
cmp
xor
fsub
hlt
stos
cmp
fsubl
movsl
imul
stos
idivb
and
inc
mov
outsl
cld
repz
cs
dec
and
mov
dec
dec
cltd
and
das
std
fsubl
cmp
imul
push
gs
and
jno
inc
mov
loopne
push
jp
pop
mov
dec
repz
dec
xor
mov
mov
mov
cmp
loope
fdivr
add
or
pop
cmp
daa
js
fnsave
adc
or
dec
or
mov
fwait
or
stos
fxch
adc
mov
dec
pop
cmc
ret
mov
dec
cmpb
mov
jno
push
push
adc
daa
rcrb
icebp
rolb
sarb
and
in
or
ret
inc
loopne
jo
mov
dec
adc
mov
inc
ret
daa
adc
adc
es
pusha
rcl
pop
push
dec
cmp
xchg
xlat
test
mov
xor
push
orl
pop
dec
pop
jne
adc
push
jmp
push
mov
insb
push
add
enter
lock
push
push
push
sub
adc
ficompl
mov
insl
popf
cmc
nop
add
adc
insl
or
inc
aas
cld
lds
mov
inc
mov
mov
add
test
test
pushf
sub
ficoms
in
mov
jl
mov
cli
sbb
push
cmp
cmp
dec
or
lods
mov
jmp
push
push
cwtl
fadds
out
sahf
mov
jmp
lods
push
pop
xor
sbb
hlt
data16
pop
mov
pop
je
js
pop
inc
scas
lret
ret
jle
js
cmp
xor
mov
fimuls
jno
outsl
fs
pop
sti
pop
cmp
cmp
xchg
dec
addr16
mov
ret
jne
pop
sub
jecxz
loope
cmpsb
cmpsl
adc
mov
pop
sbb
out
scas
xchg
jb
mov
jbe
movsl
and
push
sbb
mov
test
dec
fisubrl
jge
pop
add
dec
mov
lret
mov
xchg
in
mov
gs
sarl
aad
inc
jmp
pop
push
add
jp
into
inc
cmpsb
loop
jle
and
pusha
sbb
pop
mov
es
mov
aad
gs
push
push
inc
lret
xor
or
fnstenv
call
ss
fistl
dec
and
fbstp
gs
inc
imul
xor
cmpsb
addl
and
jp
rorl
xor
pop
push
pop
add
lret
leave
pop
jl
loopne
aam
cmp
xchg
lds
sub
pop
cwtl
in
mov
stos
je
ss
scas
xor
sbb
shll
mov
mov
pop
cmp
mov
sub
movsb
cmp
sbb
aas
fiaddl
fdivrs
lcall
mov
out
cltd
add
and
imul
fldl
mov
or
cld
xchg
daa
pop
orl
push
cmp
add
sbb
lret
mov
lds
or
inc
repnz
add
sti
pop
stos
add
insb
js
aad
mov
sbb
add
fcompl
xor
int3
jmp
out
pop
mov
fisttpll
lods
scas
mov
mov
shrl
xor
inc
sti
call
pop
psrad
mov
aaa
jb
push
aad
and
push
inc
aam
fs
sbb
lahf
sbb
and
push
mov
gs
adc
shrl
mov
add
mov
cmp
xchg
inc
jecxz
xor
insb
cmp
repnz
mov
shr
aam
mov
sbb
lods
xlat
mov
sahf
xchg
jbe
push
stos
out
push
xchg
call
or
cmpsl
lret
sub
and
cmp
bswap
and
nop
mov
fidivrs
lods
inc
adcl
data16
int3
out
mov
divl
movsb
cld
jmp
jnp
dec
xor
dec
or
sarb
xor
lock
push
test
or
stos
decb
mov
sub
into
testb
push
lret
jg
or
xor
xor
mov
mov
loopne
lock
rcl
mov
jg
test
add
mov
mov
decb
jge
imul
imul
jb
loope
arpl
xlat
faddl
mov
mov
jae
sub
int3
and
push
imul
mov
mov
sti
das
aaa
sub
push
inc
ss
es
push
add
shlb
imul
bound
aad
jmp
pop
xlat
and
std
mov
cltd
mov
mov
into
les
nop
outsl
lock
push
cmpsl
sti
xor
push
outsl
jg
ljmp
mov
call
stos
dec
stos
adc
shr
jge
daa
sub
add
mov
int3
ret
cmp
mov
rorl
xor
aas
inc
pop
pop
rolb
into
ficomps
pop
cmpsl
hlt
pushf
into
nop
mov
imul
cwtl
add
ljmp
mov
scas
or
lahf
mov
inc
push
xchg
inc
xchg
test
js
aaa
sub
dec
jns
popf
arpl
sbb
cmpsb
cmp
sbb
mov
dec
mov
aad
and
mov
mov
push
sti
dec
inc
inc
stc
push
dec
mov
push
xchg
rorl
lds
sbb
or
xorb
roll
jne
inc
push
jp
add
test
pop
dec
mov
je
pcmpgtb
rolb
xchg
mov
xor
mov
rcrb
or
jp
aam
dec
adc
lret
lock
jns
out
inc
pop
lcall
cwtl
sub
cmp
enter
sub
scas
jp
xor
sub
inc
shll
sub
or
stos
mov
xor
mov
cli
lcall
scas
daa
cmp
int3
js
inc
mov
mov
xchg
sbb
dec
pop
pop
rol
jecxz
js
popf
sbb
cmc
sahf
fisubrs
in
lret
jne
outsl
aas
out
fsubl
or
xor
pop
scas
je
rcll
fnstsw
std
dec
and
sbb
lahf
clc
jp
sarl
pop
scas
inc
mov
push
out
outsl
sbb
sahf
shr
adc
loopne
test
pop
call
push
pop
and
adc
add
shll
pop
jmp
sub
sbb
in
mov
mov
add
pop
cmpsl
mov
es
push
lahf
push
data16
aad
sti
aaa
sbb
ret
scas
sub
adc
cmpsl
ss
arpl
mov
xchg
insl
and
sar
mov
mov
push
ja
test
sub
inc
stos
cwtl
mov
pop
arpl
test
sub
stos
jno
stc
cwtl
dec
push
mov
push
xor
push
lret
bnd
fsubp
push
inc
insb
hlt
push
mov
pop
cmp
pop
adc
addr16
in
jecxz
xchg
enter
ret
icebp
pop
xor
push
inc
pop
mov
fst
call
jle
dec
add
cmp
stos
pop
push
and
inc
mov
lock
add
addr16
cmp
repnz
mov
xchg
iret
in
out
insb
sbb
mov
lret
push
sbb
xchg
sbbl
ds
ss
adc
fdivs
or
xorl
imul
cmc
sbb
mov
adc
push
fsts
aad
xor
pop
mov
sbb
or
pop
aad
stc
cmpsl
sahf
adc
icebp
int
rcll
lcall
ss
flds
adc
dec
jb
in
jle
adc
outsl
ret
sub
xlat
dec
pop
subb
dec
lea
xor
outsl
mov
push
xchg
or
fs
in
cli
mov
movsb
repnz
fsubs
mov
mov
xchg
ret
push
mov
xor
sahf
inc
push
fistps
out
icebp
xor
lea
dec
jecxz
jb
ror
pop
divl
adc
sub
sarl
les
bound
leave
push
cli
lsl
mov
clc
adc
jl
nop
mov
jge
popf
mov
xchg
inc
lret
xor
orl
lods
mov
sbbb
insl
pop
or
inc
mov
dec
andl
in
and
ret
hlt
iret
pusha
sub
aam
mov
jecxz
rcll
cmpsl
outsl
mov
notb
pop
adcb
adc
jne
xor
ret
mov
jg
adc
cld
xchg
mov
cmpsb
les
add
mul
ret
mov
pop
enter
push
jmp
lahf
xor
cmp
mov
push
xor
xchg
loop
adc
out
repz
mov
sbb
int3
int3
jnp
scas
test
pop
push
adc
sar
inc
and
pop
ss
xor
iret
xor
mov
gs
mov
and
mov
mov
ret
and
cmp
fwait
addb
jge
push
lahf
jb
and
mov
and
call
xchg
mov
fnstenv
dec
sub
out
les
jl
filds
pop
add
and
xor
or
sar
and
aas
xchg
std
test
lahf
test
sub
gs
stc
add
mov
add
jb
popa
popf
dec
js
aad
dec
adc
mov
lock
jne
mov
stc
out
push
sbb
adc
cmp
das
cli
mov
xchg
mov
mov
push
je
cltd
out
cmpsl
fbld
dec
ljmp
lret
out
xchg
or
jnp
jmp
bound
movsb
add
mov
and
jbe
aad
orl
push
cmp
loopne
dec
jp
lret
sbb
jno
pop
cmpsl
push
fidivrl
sbb
dec
inc
adc
xchg
stos
mov
sahf
sbb
imul
jmp
sub
jg
lds
lds
shl
inc
lret
add
push
mov
loope
hlt
lahf
xor
xor
adc
mov
fcoml
out
ljmp
mov
sbb
cltd
rclb
mov
js
pusha
push
mul
and
scas
pop
mov
daa
std
scas
mov
inc
popl
aaa
push
out
push
jl
adc
add
mov
pop
fnsave
push
sub
test
mov
adc
xchg
cmpsb
sub
cmp
pop
arpl
stos
lods
push
push
xor
fldl
movnti
scas
push
vmread
add
sub
inc
push
loope
scas
xor
loopne
cmpsb
inc
fsubrs
xchg
pop
fiadds
mov
mov
adc
push
notl
nop
cmc
or
add
out
lds
push
xor
loope
ja
loopne
mov
mul
sub
and
add
or
lods
mov
aam
int
fbstp
scas
add
int
cmpsb
je
inc
iret
dec
daa
repnz
mov
or
dec
mov
stc
addr16
movsb
dec
mov
arpl
cli
inc
ror
rorb
aam
jnp
lret
inc
cpuid
repnz
sub
mov
ds
insl
decb
imul
lock
data16
adc
ja
cld
imul
mov
popa
lods
inc
fists
imul
ljmp
add
add
ret
imul
icebp
test
cwtl
mov
add
add
aaa
faddl
imul
mov
pushf
mov
daa
sbb
xchg
add
add
aas
in
xor
xchg
pushl
movsb
xchg
repnz
dec
into
icebp
add
ret
sahf
es
stc
sbb
or
or
decb
jno
add
inc
add
out
into
cmp
and
add
lret
fistpl
imul
arpl
jbe
cltd
int
mov
fnstenv
stc
inc
push
mov
pop
inc
movsb
mov
in
sbb
and
sbb
jo
mov
pop
mov
repnz
or
pop
or
js
xchg
jbe
sub
add
or
xor
dec
call
or
jbe
shl
movsl
or
xor
jb
mov
jecxz
cld
cmp
xor
dec
inc
idivb
test
imul
stos
dec
cmp
jns
xchg
push
fstpt
cltd
subb
test
aaa
jbe
std
add
jle
jo
xchg
and
in
pusha
int
inc
mov
clc
xchg
les
aam
outsb
outsb
dec
cmp
jmp
sahf
cmp
sbb
jecxz
test
rcrb
loop
out
mov
mov
js
mov
pop
frstor
out
out
cwtl
lcall
cltd
loope
jns
mov
in
add
mov
out
in
dec
lods
lods
and
pushf
dec
cmp
xchg
cltd
add
addl
rcr
aas
pusha
int3
lahf
shl
pop
or
inc
bound
insl
fs
or
dec
xor
sub
mov
clc
pop
mov
mov
cli
push
nop
add
aas
pushf
xlat
jno
cli
push
insb
mov
mov
mov
into
cmp
imul
mov
mov
push
ficomps
mov
mov
pop
pop
xchg
push
popf
scas
cld
push
fidivrs
cmp
and
inc
push
xchg
loop
out
add
or
fiadds
adc
or
mov
and
jle
jb
mov
pop
fdiv
jns
and
add
mov
push
testl
in
ret
dec
fadds
test
leave
pop
cmp
hlt
xchg
jnp
es
pusha
andl
arpl
inc
push
add
in
jp
dec
mov
repz
imul
push
pop
aad
add
push
xchg
out
push
jle
fimuls
pusha
adc
pop
xchg
jb
pop
lret
xchg
pop
les
inc
pusha
and
adc
movb
fwait
lods
adc
adc
mov
push
movsl
and
insb
mov
xor
mov
cltd
xchg
inc
cmpsl
lds
scas
push
jmp
pop
cmp
xchg
shlb
dec
out
mov
imull
xor
test
mov
repz
in
mov
jo
pop
mov
xchg
sbb
dec
and
jns
xor
rcrl
fwait
out
xlat
fsts
gs
push
cld
inc
hlt
pushf
dec
adc
rclb
stc
out
and
stos
aam
fwait
arpl
data16
cltd
dec
sahf
dec
jmp
sbb
xchg
fdiv
mov
lods
loope
cmp
js
insl
and
cmc
push
push
adc
xchg
xor
jmp
in
cltd
xor
mov
xchg
cmp
cmpsl
mov
cmp
popf
mov
cmpsb
testb
pop
ja
inc
outsl
add
lock
xor
lahf
pushf
and
mov
cmpsl
stos
xchg
lods
sbb
cmpsl
out
and
pop
sub
add
jmp
call
bound
call
jp
ss
cwtl
cmpsb
xchg
dec
mov
inc
sahf
jmp
add
dec
ret
cmpsl
lds
hlt
clc
cwtl
roll
imul
inc
or
insb
addr16
or
xchg
sbb
add
je
mov
leave
push
stc
cli
mov
mov
ret
pop
mov
push
jl
orb
cli
pop
jo
inc
std
xchg
dec
sbbb
and
mov
dec
dec
int
jge
add
pop
arpl
fcompl
adc
cmpsl
out
pop
inc
stos
stc
fildll
aad
sbb
cli
mov
loop
loope,pn
or
inc
or
mov
mov
js
add
push
sar
mov
xor
loop,pt
bound
or
xchg
and
xor
js
mov
sbb
stos
inc
xor
sbb
mov
dec
pop
fndisi(8087
mov
and
xor
adc
jo
repnz
mov
cmp
cli
std
movsl
popl
data16
lret
push
out
cmc
data16
pusha
jecxz
and
inc
lds
pop
sub
in
stos
push
scas
inc
pop
out
pop
push
ficompl
push
jmp
loope
gs
push
push
adc
iret
cmpsl
push
push
jb
mov
incl
in
rorl
fisubrl
mov
sub
nop
cmc
mov
xchg
sbb
test
xor
jnp
sub
shr
adc
add
xchg
int
mov
xor
pop
cwtl
pushf
push
cld
fimull
scas
or
pop
lods
mov
sbb
cmp
mov
jmp
rorl
jb
call
jbe
pop
loop
ja
das
rorl
dec
mov
lcall
mov
addb
jae
mov
xor
mov
pop
mov
out
dec
movsb
cli
jecxz
imulb
scas
lcall
sub
into
sub
mov
ret
cmpb
out
fsubs
and
mov
mov
sbb
inc
jbe
add
test
cmp
fiadds
ret
inc
lock
jb
into
gs
pop
dec
jae
andl
addb
in
adc
js
aam
dec
scas
leave
shlb
cmpsl
jb
lret
pop
mov
cmpsb
loopne
leave
ds
jne
ja
lea
pop
sbb
ljmp
int3
xchg
cwtl
sahf
imul
std
pop
lahf
xor
xchg
jge
aam
jno
imul
adc
out
sub
in
cmp
out
xchg
add
jmp
nop
pop
pop
sti
pslld
xor
int3
ljmp
pop
hlt
subl
dec
aaa
int3
loope
adc
ja
lock
fstps
cs
pusha
insl
cmpl
push
mov
cs
repnz
and
push
push
mov
cmc
je
push
cmp
push
repz
mov
dec
pop
pop
adc
andl
rcrl
cld
js
ljmp
cltd
push
mov
pushl
lods
int
iret
adcb
test
or
sbb
jns
pop
test
js
in
aam
bound
adc
jbe
xchg
xor
mov
stos
outsb
ss
test
mov
xor
cmpsb
loope
push
jge
and
or
sub
inc
rcrb
push
out
push
mov
mov
scas
inc
add
xchg
inc
jg
testl
mov
loop
dec
push
addl
xor
push
cmp
das
cld
loop
xor
loopne
xchg
push
cmp
dec
cmpsl
jo
loop
cmc
inc
pop
push
push
insb
pop
cli
pushf
mov
stc
mov
mov
cmpsl
sbb
push
nop
jecxz
or
xchg
inc
mov
aaa
movsl
or
or
into
scas
cli
xchg
fdivrl
push
lea
xchg
xchg
add
jmp
fcomps
loopne
scas
scas
aad
sub
mov
adc
sbb
int3
xor
movsb
dec
lds
pushf
xchg
test
mov
test
aad
xchg
mov
fidivrs
fidivrl
or
sbb
bound
add
and
cmp
lret
adc
mov
pop
jnp
adc
fnstcw
xchg
pop
mov
sbb
loopne
and
sbbb
jecxz
inc
out
mov
mov
dec
imul
fcmove
inc
mov
mov
and
aad
outsb
add
sbb
adc
andl
lock
std
push
outsl
xor
bound
and
jns
cmp
clc
dec
aaa
adc
cmp
push
test
cmp
xchg
fimuls
mov
outsl
mov
inc
sti
out
xchg
in
jle
popa
rolb
adc
inc
add
outsb
shll
js
ja
idivl
addr16
cmpsl
popa
pop
cmp
aad
je
add
pop
xor
mov
test
sub
and
ror
sub
bound
insb
clc
jp
jmp
jge
jns
mov
cli
mov
les
inc
pop
daa
outsb
subl
int
cmp
inc
sub
adc
bswap
xchg
adc
movsb
es
cmp
nop
icebp
lcall
adc
movsb
into
cmpsb
jle
xlat
imul
lahf
cmpsb
mov
pop
pop
push
insl
mov
inc
inc
inc
shrb
cmp
add
ljmp
pop
jl
stos
pop
cmp
mov
inc
mov
jecxz
jge
arpl
fsubrs
loop
jae
pushl
xchg
inc
lahf
dec
mov
add
xor
loop
imul
xchg
dec
add
sbb
test
sub
dec
mov
dec
jbe
fstpt
icebp
mov
xor
adc
add
cmc
sbb
sbb
mov
popf
aas
cld
sti
xchg
int
or
inc
and
in
jmp
loope
add
jns
and
sbbb
adc
pop
adc
fwait
in
lahf
out
push
adcl
insb
and
jno
and
orb
fwait
cmc
sti
jnp
mov
cli
outsb
sbb
fwait
mov
orb
sub
mov
cmp
xchg
test
xor
or
mov
dec
into
adc
cwtl
inc
sbb
cli
cmp
mov
lcall
fistps
ficoms
mov
outsb
js
ret
shrb
lea
pusha
sub
repnz
xchg
mov
fcomps
cmpsl
hlt
inc
loopne
mov
mov
insb
bound
imul
loopne
push
ret
sbb
cmp
and
dec
cmovb
mov
jnp
cmpsl
pop
ret
popf
lahf
in
je
pop
inc
sub
out
cwtl
pop
inc
pop
es
sbb
testl
lret
iret
pop
sahf
ljmp
mov
mov
pop
pop
mov
fldlg2
mov
test
adc
add
sub
hlt
gs
es
xor
mov
outsb
pusha
dec
xor
divb
stos
movsb
xor
mov
test
jne
xchg
push
adc
add
into
inc
and
inc
cmc
in
jmp
cmp
dec
dec
fstps
cmp
std
sbb
push
xor
and
movl
sbb
fidivrl
push
pop
jb
push
and
xor
xor
pop
push
test
jecxz
push
dec
pop
adc
cmpsl
rcll
outsl
or
out
cmc
rclb
cmp
jle
shll
inc
sub
subb
sbb
add
cld
cmp
aad
dec
xchg
shll
pop
xor
push
cmpb
push
je
out
fisubs
daa
ret
test
aam
divb
fisttpl
shll
divl
mov
les
xor
enter
mov
fisttpll
scas
mov
sub
into
push
outsl
pop
imul
int3
adc
push
dec
push
xor
cs
and
rorb
xor
fs
arpl
movsl
xor
mov
adc
inc
adc
in
jae
mov
add
jle
push
mov
sub
stos
test
stos
in
outsb
ret
push
fldl
lods
aas
sbb
and
push
mov
adc
call
fmuls
in
pushf
out
dec
mov
jg
inc
stos
pop
repz
push
push
dec
js
in
stos
fwait
jb
sbb
push
cbtw
mov
out
aaa
movsb
push
repz
adc
mov
or
bound
popa
test
mov
jg
ja
imul
mov
xor
enter
or
popa
movsbl
pop
xchg
mov
jae
sub
into
ficomps
or
xchg
xlat
lahf
adc
xchg
sbb
pop
add
push
lods
mov
pop
inc
lods
add
cmp
adc
cwtl
inc
adc
xchg
mov
jl
xlat
sub
jg
xor
repnz
jno
pop
ret
or
enter
aad
push
clc
cld
cmpsb
sbb
outsl
imul
mov
sbb
mov
sbb
mov
in
rcrb
nop
dec
test
inc
out
outsl
arpl
int3
cmp
hlt
mov
sub
fadd
nop
or
fcoml
in
sbb
xlat
sub
xor
lods
push
xor
imul
scas
orl
sub
aas
adc
lods
hlt
lds
ret
xchg
in
addb
adc
pop
movsl
in
and
les
xchg
sub
cmp
loop
scas
mov
loopne
cmpsb
and
mov
out
addb
adc
loope
jnp
std
scas
lret
incl
pop
or
jmp
js
test
mov
mov
push
jle
mov
scas
xor
dec
inc
jg
in
push
cld
cmp
incb
mov
ljmp
jle
notl
mov
test
xchg
adc
cld
mulb
inc
cwtl
jns
lock
mov
into
aaa
jmp
mov
mov
pop
arpl
icebp
cld
mov
xor
mov
pop
dec
out
cwtl
lahf
daa
wbinvd
mov
leave
sbb
push
and
cmp
cltd
lret
xchg
ljmp
fwait
scas
inc
adc
inc
sub
mov
adc
shl
out
mov
xor
sbb
add
adc
adc
add
add
movsb
ds
cmp
test
xor
and
pop
push
sbb
xchg
pop
lods
and
pop
cmpsb
popf
sub
aaa
in
arpl
imulb
jbe
mov
das
add
popa
roll
lea
dec
orb
jnp
test
test
mov
cmpsb
jnp
dec
or
xor
sbb
iret
push
mov
xchg
ss
inc
in
sub
jo
ficoms
fbld
inc
into
insl
jbe
les
adc
enter
daa
mov
adc
fs
sbb
xchg
fs
out
jp
mov
orb
cmp
jns
sub
mov
lret
cmp
jp
ss
in
testl
cmc
push
jge
add
fidivs
out
mov
imull
test
call
es
cmc
out
rcll
ljmpw
in
inc
adc
outsl
jl
mov
add
rcrl
cmp
mov
lods
mov
mov
test
jb
adc
mov
cmp
fsubs
push
lcall
ret
stos
mov
xchg
jb
cmp
mov
push
or
or
fwait
push
sub
pushf
push
push
and
mov
jecxz
inc
jmp
aad
cmp
pusha
inc
and
mov
jecxz
xlat
dec
lahf
inc
inc
dec
pop
xchg
xchg
ds
inc
das
mov
adc
aam
pop
div
loope
xor
orb
pop
add
mov
xchg
lds
adc
or
repnz
dec
adc
aam
dec
cmp
cmpsb
test
xor
sub
inc
out
pop
test
adc
shrl
mov
lock
jnp
cmp
fcmovbe
push
lret
mov
loop
cld
mov
sub
sub
test
sbb
and
lret
dec
int
xchg
loope
enter
stos
jmp
dec
and
movsl
lret
int3
push
dec
fwait
repnz
ret
add
xor
loope
mov
arpl
jge
sub
pushf
pop
in
add
xor
adc
xchg
mov
adc
jnp
ret
dec
mov
sbb
mov
add
fldcw
pop
lahf
ja
mov
cld
in
fcmovnu
xchg
push
jle
clc
pop
xchg
stos
or
jle
push
in
repnz
mov
jp
in
jecxz
push
cmp
fisttpll
xor
cli
mov
in
std
xor
insb
mov
mov
ljmp
jbe
bound
adcl
push
lahf
les
insb
sub
daa
int3
xchg
jmp
xchg
outsl
dec
stos
inc
arpl
fcoml
and
test
xchg
mov
sbb
test
adc
dec
fld
frstor
aaa
scas
sti
stc
in
jnp
add
pop
sbb
push
xor
mov
pop
add
push
push
pop
repz
push
popf
in
push
ret
mov
cmpl
lret
scas
cmpsb
jno
adc
xlat
mov
add
fwait
mov
daa
inc
cmp
mov
inc
push
or
mov
or
and
imul
add
cmc
jnp
sahf
cmp
movsb
inc
push
test
push
repz
xchg
lret
and
pop
pushf
scas
mov
stc
lcall
xor
sbbl
jbe
ficompl
push
jg
int3
sub
add
out
jae
xor
jle
cmpsl
fstl
mov
adc
mov
scas
mov
rclb
adc
rcr
xor
in
in
scas
cmp
add
ljmp
or
lcall
mov
out
push
xchg
jp
cmp
sub
pushf
pushf
hlt
xchg
enter
lock
pop
dec
xor
push
cltd
xchg
ret
stc
xor
or
or
aam
je
inc
mov
das
test
dec
mov
mov
call
cmp
arpl
adc
inc
add
pop
jnp
pop
leave
movsl
pop
rcrb
push
cld
icebp
cltd
xchg
scas
cmc
dec
xchg
in
jp
fst
bnd
daa
rolb
jo
xchg
jg
sbb
or
mov
roll
shrb
cwtl
outsl
jge
iret
adc
push
jp
mov
test
dec
xor
inc
movsb
test
addr16
cmp
lret
and
sub
or
cltd
stc
sbb
into
mov
repz
outsb
mov
das
xor
adc
cmp
je
outsb
mov
sub
mov
xlat
cmp
mov
dec
lods
stc
adc
xor
and
ds
xchg
insl
jle
aad
jns,pt
flds
in
adc
cmp
nop
xchg
shlb
aad
jbe
outsl
add
mov
jnp
sbb
pop
test
pop
mov
lds
mov
int3
mov
stos
xchg
mov
mov
les
loopne
outsb
dec
push
cmp
fidivs
sbb
mov
xchg
push
adc
imul
xchg
sti
test
push
adc
push
lahf
mov
mov
clc
imul
dec
movsb
adc
push
mov
sub
fcomi
push
ret
inc
cmp
sub
pushf
sub
lret
ret
sbb
adc
mov
and
mov
dec
add
sub
arpl
loope
xchg
call
mov
mov
adc
jle
mov
fwait
cmp
mov
cmp
xor
push
andl
push
mov
out
xor
mov
outsl
inc
fcomps
dec
test
lock
dec
das
divl
sbb
stos
in
in
adc
lret
xchg
sarb
ret
sbb
sbb
add
shll
fadds
fsubrs
fcoml
adc
mov
dec
jle
scas
sbbb
mov
mov
shrb
aaa
fisubs
mov
add
in
jl
pusha
xor
jae
mov
loop
push
push
cli
cmp
notb
ret
push
les
jl
in
push
sahf
sub
sub
push
xchg
cmp
pusha
xchg
lahf
adc
pop
sbb
and
lret
popf
sti
and
movsb
adc
push
sbb
sub
pop
fnstcw
cmpsl
dec
scas
sbb
test
and
sbb
out
out
cltd
add
mov
and
push
data16
mov
lds
mov
loope
daa
aas
movsl
push
cmp
add
cmp
cmp
pop
jne
cmp
or
lock
push
mov
cmp
imul
aad
pushf
mov
mov
lods
cmp
push
xchg
dec
cli
movsb
jae
fldt
mov
cli
mov
push
or
sbb
cmc
xchg
inc
fs
test
xchg
icebp
js
scas
push
je
jl
sahf
adc
cmc
cli
ds
inc
lret
mov
std
lods
cmp
insl
inc
and
pusha
jge
sti
mov
adc
shrl
pop
lret
xor
mov
pop
dec
das
fbstp
loopne
jno
sub
push
lea
repnz
push
and
push
mov
jecxz
push
out
push
push
clc
push
sbb
lret
xchg
dec
mov
xchg
cmc
fiadds
leave
inc
jecxz
xchg
or
insb
dec
mov
add
shlb
bound
sbb
dec
xchg
fcmovne
or
add
jecxz
mov
inc
push
test
jge
int
daa
sbb
scas
jnp
pop
mov
mov
sub
adc
out
and
mov
mov
jb
sub
pop
mov
push
mov
push
shl
aas
sub
or
movsb
jns
nop
or
out
or
jecxz
mov
jne
enter
mov
ret
in
test
pop
adc
mov
sub
add
inc
daa
std
setle
pusha
int3
sub
pop
daa
lea
pop
push
fsubrs
or
lock
push
pop
push
mov
shrb
pop
cmp
and
sbb
es
pop
xchg
xor
lahf
or
mov
fs
pushf
jno
pop
pop
mov
adc
popa
dec
lods
mov
cmp
subl
sub
push
data16
mov
movsb
mov
jecxz
cmc
sbb
pop
add
mov
ret
pop
das
and
scas
je
push
daa
dec
outsb
ficompl
cmc
jmpw
loop
and
enter
sbb
xchg
neg
dec
mov
add
pop
mov
jno
jge
add
pop
dec
mov
jnp
push
cmovl
pop
adc
insb
pop
pop
in
addr16
inc
mov
lds
and
and
xchg
mov
jbe
arpl
sub
or
test
pop
fdivrp
fdivrs
jno
arpl
data16
dec
jp
outsl
mov
scas
mov
xor
lcall
mov
shrb
dec
mov
xchg
mov
jo
sbb
pop
out
gs
xor
das
sub
or
in
in
stc
adc
xchg
xchg
pusha
insl
dec
out
lea
lds
subb
and
add
mov
jge
cmp
loope
push
and
insb
dec
mov
cmpsb
inc
mov
call
stos
push
jb
add
enter
adc
rcll
adcb
mov
sbb
xor
fistpll
xlat
push
in
xchg
jo
sti
in
insb
scas
mov
push
sti
adc
shlb
mov
xor
xchg
push
loope
sbb
dec
in
pop
pop
add
shll
ss
je
xor
insb
pop
lods
shufps
std
bound
mov
faddl
idivb
mov
sub
out
dec
repz
sub
cmp
mov
xor
mov
clc
scas
gs
loop
mov
pop
lds
lret
xlat
jne
sub
dec
out
into
mov
std
fisubrl
mov
imul
cld
out
xchg
pop
orl
fisttpl
movsl
mov
xlat
lahf
dec
and
jle
in
adc
mov
mov
sub
xor
jmp
xor
push
push
cltd
aaa
adc
mov
jmp
push
add
fidivrs
fsubl
out
ss
dec
add
ja
xchg
pop
xchg
mov
call
pushf
adcb
fld
dec
and
addr16
inc
push
stos
sub
sbb
mov
lds
pop
cld
sbb
push
dec
fwait
mov
mov
nop
mov
loope
jb
sbb
or
enter
mov
iret
pop
push
or
setno
movsb
insl
pop
mov
repz
mov
aad
mov
gs
push
pop
jmp
shr
jb
leave
add
cs
mov
mov
sub
add
push
xor
mov
in
in
loopne
out
in
push
cli
or
popa
or
mov
fldcw
stos
movsb
cmp
fimull
insl
shrb
in
gs
and
jnp
fcoml
xor
adc
lods
ret
test
icebp
popf
mov
out
mov
cmpsb
dec
in
xor
cltd
and
jecxz
test
xor
lret
stos
popf
aaa
daa
stos
adc
nop
pop
test
cli
mov
cmp
cltd
adc
call
sub
and
ss
push
js
test
jecxz
popa
pop
popf
fcmovnu
in
fs
out
lods
ret
cmp
fisubrl
inc
jmp
arpl
pop
xor
push
xchg
pusha
cmpsb
enter
scas
mov
adc
mov
fcmovb
cmp
stos
lds
lgdtl
int3
faddp
push
in
sti
pop
pop
mov
lock
and
aas
dec
mov
push
push
pop
mov
int
sub
mov
test
add
jbe
cltd
and
xor
push
dec
mov
xorb
jge
sub
mov
push
repz
xlat
sub
mulps
push
movsb
in
sbb
pop
mov
lret
rcr
mov
push
imul
and
call
push
xor
jno
fldl
flds
ss
push
mov
int3
xchg
jge
in
daa
mov
pop
add
stc
lods
mov
mov
popf
sub
fiaddl
repnz
scas
shrl
push
popf
popf
jo
sbb
push
cmpsb
cmp
repz
mov
outsb
push
sub
mov
and
nop
sbb
mov
mov
shll
sbb
add
dec
int3
add
mov
hlt
scas
les
jae
push
add
sbb
sub
in
mov
mov
daa
sbb
jle
aad
aam
arpl
push
xchg
cmp
rcll
xor
adc
in
mov
push
pop
xor
enter
add
jl
push
dec
hlt
cltd
stos
pop
mov
pop
jle
jnp
rorl
inc
int3
mov
ret
sub
frstor
lea
push
sub
mov
lea
cltd
jbe
imul
add
ret
cmpsl
addr16
shrb
popf
and
lret
jge
js
jecxz
xchg
push
dec
pop
mov
xchg
icebp
mov
out
pop
mov
fsubl
sub
adc
pop
inc
movsb
ss
jne
jno
out
ds
sub
arpl
cmp
inc
xor
push
ds
data16
popf
shl
xchg
lret
nop
jae
shlb
push
mov
popa
js
fistpll
and
ror
addr16
shll
jne
icebp
lock
mov
cmp
arpl
jp
xchg
cs
mov
xchg
fnstsw
icebp
dec
dec
mov
push
pop
jne
insl
xor
inc
adc
test
sub
jle
sti
mov
and
mov
push
add
addr16
add
arpl
jns
std
xor
sbb
jne
pop
inc
aaa
mov
cmpsb
clc
repz
lahf
jge
pushf
mov
hlt
outsb
jnp
xchg
leave
out
cmp
inc
lock
or
and
divl
or
and
jb
nop
imul
lods
inc
mov
cmp
and
xchg
mov
call
cmp
push
adc
jecxz
and
jp
and
int3
jns
mov
sti
aas
push
xor
repnz
jle
push
mov
stc
std
mov
test
jecxz
out
inc
xchg
out
dec
push
ljmp
rcrb
test
cwtl
jae
cmp
or
xchg
push
adc
adc
sub
pusha
out
mov
stos
push
and
subb
lret
test
out
daa
dec
xchg
push
cmp
jno
test
sbb
cmc
inc
clc
jmp
iret
add
out
in
mov
ja
hlt
fmul
test
push
int3
scas
cwtl
movsb
add
pop
jae
lds
mov
scas
sbb
sub
lret
pop
dec
jecxz
pop
pop
and
aas
idiv
loopne
inc
dec
incl
roll
cmp
sbb
bound
rolb
dec
cmp
je
es
ss
dec
ret
mov
lock
nop
aam
sti
cmc
mov
push
repz
inc
jl
fidivs
mov
and
dec
pop
lahf
fsts
ljmp
xchg
or
movd
jb
xor
xchg
sar
mov
lcall
imul
adc
and
inc
sbb
cwtl
out
clc
pop
dec
icebp
mov
add
mov
in
cmp
aas
xchg
sub
test
cld
es
test
nop
in
inc
mov
inc
inc
ss
jmp
inc
dec
push
nop
push
test
mov
sub
test
add
cmpsb
pop
outsb
shlb
mov
and
imul
or
sub
push
scas
lods
xor
sub
lods
mov
daa
inc
ljmp
lea
fisubrl
jo
xor
mov
pop
inc
shlb
fwait
xchg
add
popf
jle
gs
addr16
mov
subb
or
push
xchg
movsb
pop
ret
rol
sbb
mov
lock
cmp
pop
pop
xchg
cmc
push
push
sbb
mov
imull
mov
or
sbb
mov
out
jp
fisttps
pop
jle
add
push
cmpsb
pop
sbb
add
pop
out
movsl
push
cs
int3
pop
cwtl
lret
dec
bound
fnsave
int3
and
cs
mov
je
jbe
sub
sub
add
test
mov
shlb
mov
cmp
lock
inc
movsl
fcmovnu
inc
add
dec
icebp
je
outsb
shlb
inc
jecxz
lds
pushf
lds
fidivl
je
jb
call
std
stc
inc
dec
pop
lock
inc
rcrb
sub
mov
sahf
shll
adc
lods
cs
cmpb
insb
or
imul
sti
mov
lock
or
jo
lret
insb
cmp
sbb
jle
ljmp
pop
pushf
jge
lahf
cmpsl
pop
xor
push
es
scas
jno
lods
mov
fsts
push
pop
mov
shrb
sub
sti
scas
fsubrs
pop
jae
dec
jns
push
movsb
mov
inc
push
push
and
xor
or
xchg
lret
sub
addr16
or
aam
pop
pop
ret
mov
jl
ja
cltd
leave
add
cmp
dec
mov
add
bound
rcrb
xchg
scas
mov
js
loopne
jae
jbe
inc
mov
xorl
mov
out
idiv
test
test
sbb
fwait
or
push
stc
imul
in
imulb
jns
add
jae
popa
xlat
popf
xchg
in
jmp
lret
and
mov
lret
mov
std
pop
out
adc
jmp
dec
or
mov
push
pop
push
mov
fidivrs
lock
daa
aaa
test
push
sub
stos
sbb
addr16
sbb
fisubl
sbb
cwtl
and
xchg
sahf
cmp
cwtl
clc
rcrb
push
push
and
test
es
les
shll
and
adc
jo
lahf
jbe
jge
imul
add
dec
mov
push
pop
mov
movsb
rclb
insl
decl
mov
inc
std
cmp
jg
push
add
das
and
mov
fimull
adc
cmp
sub
aam
push
dec
adc
test
xor
mov
jmp
adcl
push
sub
add
mov
enter
or
or
mov
sbb
push
dec
dec
movsb
and
lcall
and
cltd
inc
stc
sub
or
outsb
xlat
pop
add
lret
push
out
jg
pop
pop
mov
stos
dec
aas
cs
negl
lret
je
ret
nop
jge
test
lock
cmc
mov
pop
adc
int
call
stos
aam
iret
mov
movsl
icebp
and
jmp
popf
imulb
neg
cmpl
stos
xchg
gs
call
aam
xchg
sti
sbb
fdivl
shrl
fisttpll
push
in
sarb
adc
ret
dec
dec
ja
xor
push
rorl
aam
cmp
in
mov
popf
jnp
jns
iret
rcr
stos
loope
movsb
jno
jb
scas
testl
push
pushf
adc
daa
push
xor
daa
add
sub
inc
dec
clc
rcrl
aaa
sub
mov
enter
imul
add
pop
dec
addb
sub
sub
or
out
xchg
sub
bound
sbb
pop
mov
sbb
jno
pop
xor
xchg
push
scas
mov
jecxz
xor
mov
js
xor
xchg
cwtl
sbb
inc
jp
pop
popa
xor
jae
push
mov
rorl
mov
push
stos
sub
pop
test
adc
call
loop
or
and
cmp
sub
frstpm(287
cli
daa
mov
mov
stc
or
push
mov
loopne
les
icebp
xorb
or
push
dec
int
fs
xor
mov
out
iret
in
push
inc
xor
addr16
and
rcrl
jmp
mov
es
out
mov
aam
or
imul
das
xor
cmp
sti
push
mov
sbbb
sub
and
lcall
dec
xchg
iret
adc
jbe
mov
adc
aad
cmp
loope
cmp
mov
dec
in
pop
das
dec
mov
rcr
insl
xchg
adc
out
push
icebp
imul
mov
test
bound
or
mov
sidtl
sub
xchg
inc
push
fistpll
push
sub
cld
loopne
sub
or
dec
inc
ror
ficoml
loope
sub
push
icebp
inc
dec
sbb
cmpsl
adc
sahf
int
jmp
or
adc
nop
mov
gs
push
lock
and
aam
inc
jp
xor
dec
dec
pop
in
nop
insb
adc
push
xor
out
jmp
add
mov
repz
sub
push
sub
sub
sub
enter
in
or
out
pop
push
inc
sbb
xlat
mov
mov
cmp
rorb
out
shll
clc
pop
mov
mov
jb
lea
inc
es
fadd
insl
jbe
mov
or
mov
pop
xchg
and
inc
lock
pop
idivb
mov
mov
push
xchg
mov
out
imull
pop
out
mov
lods
loopne
xor
outsb
out
aaa
push
sahf
jo
add
fsubrp
mov
and
rcrl
repnz
sub
mov
mov
add
test
dec
jno
lea
bound
xlat
push
sahf
jnp
add
xchg
sub
mov
mov
leave
xchg
pop
mov
jo
pop
mov
fwait
adc
inc
mov
push
cmp
gs
inc
jmp
or
mov
out
lret
mov
aam
mov
inc
jge
mov
jbe
lods
xor
imul
push
dec
dec
insl
test
outsb
icebp
into
hlt
insb
jne
xchg
inc
adc
popf
loopne
movsl
mov
sbb
mov
xchg
xchg
je
jg
jmp
aad
push
pop
mov
cltd
mov
movsl
ret
pop
test
pop
jae
sbb
inc
orl
adc
mov
mov
xor
ret
jp
call
loop
gs
xor
ret
aad
out
call
bound
mov
test
pop
mov
jmp
cmp
push
jb
xchg
loope
js
into
or
sub
mov
pop
push
mov
stos
loopne
fwait
lcall
jnp
cli
lea
push
stc
mov
nop
stc
cmpb
xchg
stos
inc
push
push
jno
das
outsl
fmull
pop
inc
inc
fwait
jns
aam
lcall
outsb
ret
lods
daa
mull
xor
sarb
es
inc
jae
mov
inc
les
or
rorl
aaa
pop
and
arpl
call
xchg
inc
mov
inc
mov
mov
xchg
ja
ficoms
push
gs
inc
add
test
adc
neg
mov
jge
pop
mov
sarl
outsb
jo
dec
jb
cmpl
movsl
enter
movsb
ret
pop
cwtl
jb
in
sbb
int3
mov
jne
and
aam
xchg
fbstp
int
pop
call
jno
lods
mov
jns
push
std
pop
cmp
sbb
shrl
out
bound
cmp
mov
icebp
std
xchg
inc
jmp
dec
stc
aaa
movsl
cld
adc
add
in
outsb
cmc
aam
dec
and
adc
rclb
mov
jne
out
imul
or
pop
xchg
lret
gs
xchg
mov
or
xor
clc
lods
jl
sbb
jno
out
mov
pop
shlb
mov
aaa
xor
out
mov
test
data16
int
imul
sbb
test
pop
lds
bound
pop
and
and
mov
into
stos
sub
sbb
or
movl
adc
xchg
pop
shlb
js
mov
lret
add
and
sbbb
and
cli
jl
movsb
dec
adc
es
push
jb
stc
inc
cld
mov
mov
mov
inc
fwait
mov
imul
cld
jl
mov
les
xchg
push
mov
test
mov
icebp
daa
iret
mov
lods
cwtl
jp
fisubs
or
xor
rorb
repnz
xlat
stc
bound
sbb
pause
adc
jmp
sbb
xlat
inc
in
outsb
mov
int3
ret
dec
sub
pop
fwait
punpcklbw
inc
xchg
das
adc
scas
hlt
outsb
aaa
mov
cmp
push
push
push
push
pop
rclb
mov
dec
shlb
pop
add
dec
or
shl
aad
mov
xchg
je
test
out
pop
adc
outsb
xchg
cltd
xchg
cwtl
stos
out
popa
xorb
fdivp
mov
aaa
xor
aam
lret
pop
mov
mov
fstps
in
lcall
cmp
out
js
cld
mov
lea
and
cli
dec
push
je
aam
mov
adc
and
mov
sub
rclb
adc
cmp
mov
loope
ss
jecxz
loope
mov
ror
or
pushf
aas
mov
mov
into
pop
in
inc
nop
push
push
jns
adc
sbb
inc
pop
bound
into
aas
in
lds
xor
sub
andb
mov
aam
popa
xor
jae
xchg
ret
sbb
push
cmp
rcr
lea
push
fcmove
orb
in
lods
jo
adc
jbe
movsl
xchg
sti
inc
aas
xchg
xchg
xchg
dec
mov
pop
push
pop
push
aas
subb
mov
pushf
mov
mov
pop
inc
mov
je
push
lret
mov
sbb
ret
and
gs
mov
ret
out
inc
nop
iret
jecxz
stc
in
mov
xchg
fprem1
enter
inc
and
repnz
call
insl
cwtl
loope
or
imul
imul
loope
jecxz
add
imul
fistps
movsb
clc
call
pop
lds
jmp
pop
mov
ja
jbe
das
push
je
cmp
sbb
cmp
jge
push
sbb
lret
popa
ret
mov
imul
push
mov
pop
fstl
mov
xor
adcl
mov
jae,pn
loop
lahf
aam
cli
inc
sbb
lea
mov
in
xchg
mov
or
push
or
fcoms
adc
inc
bound
push
sbb
add
sarl
daa
dec
es
ljmp
in
cli
fstpt
sub
sti
or
gs
dec
enter
roll
add
std
and
pop
fbstp
retw
mov
add
adc
enter
mov
lret
xchg
xor
jecxz
sbb
jle
push
pop
push
push
int3
push
cmpsb
das
sbb
cwtl
addr16
mov
add
iret
call
ret
dec
aad
test
cli
rcrb
clc
inc
insl
mov
pop
xchg
xor
inc
push
sub
mov
jb
push
jp
lea
fists
lock
xlat
adcl
lds
gs
jnp
push
push
fadds
jecxz
and
xchg
outsl
mov
sbb
sar
and
xor
jo
or
jmp
cltd
mov
fists
test
clc
sbb
imul
xchg
sub
adc
xor
xchg
lahf
pushf
jo
fs
xor
jle
inc
js
mov
stc
in
mov
mov
push
jae
mov
push
add
movsl
sub
inc
hlt
into
inc
aad
or
mov
sbb
shlb
lahf
lret
nop
dec
cmp
push
add
jo
pop
add
cmpsl
stos
loopne
push
xor
fnstenv
xor
sub
popf
mov
and
bound
mov
test
and
es
cmp
push
mul
mov
jae
jl
daa
ds
push
adc
push
push
in
imul
mov
mov
pop
xlat
fldt
jno
adc
scas
mov
repnz
xchg
mov
mov
pop
in
pop
test
repnz
sbbl
icebp
adc
and
jns
xor
mov
leave
fisubrl
pop
pusha
rcrb
std
and
mov
pop
lret
fcomi
sbb
cmc
imull
inc
mov
mov
stc
inc
push
push
xchg
xor
and
mov
ret
shll
rcl
mov
arpl
in
lods
into
cmpl
jnp
mov
jno
and
push
packuswb
pop
sbb
pop
and
cli
lea
in
cld
pop
pop
and
mov
loop
push
loopne
shlb
or
mov
jl
mov
stos
in
fiaddl
xchg
lret
jae
out
int3
push
lods
scas
dec
pop
lcall
push
or
fwait
repnz
add
mov
pop
mov
popf
test
sub
sbb
push
ja
adc
ja
leave
cmp
cmp
dec
gs
inc
adc
mov
push
ret
paddq
mov
imul
mov
std
pop
arpl
notb
in
adc
cwtl
dec
nop
int3
shll
int
aam
xchg
mov
or
mov
decb
sahf
js
push
push
loopne
jno
inc
jge
xchg
out
fmuls
mov
push
enter
or
sbb
call
pop
jp
loopne
test
mov
sbb
jbe
lds
pop
cmp
popa
xchg
adc
jb
add
dec
mov
jp
cmp
cltd
sbb
push
jno
add
sbbl
shrb
xor
mov
mov
cmpsb
jo
cmp
hlt
jp
cs
mov
lock
xor
int3
pop
clc
movsl
int3
adc
subl
xor
jge
mov
adc
mov
test
popa
and
orb
xor
cwtl
pop
mov
push
jg
adc
mov
and
lcall
ds
lahf
dec
in
cmpsl
and
test
loopne
js
xchg
outsb
pop
inc
rorb
and
sbb
jecxz
mov
roll
popa
and
sub
xchg
sub
pop
fidivs
pop
ret
mov
and
sub
fstpt
loopne
rcll
ja
inc
lea
idivb
cmpsb
xlat
pop
shr
mov
sahf
xchg
inc
push
adc
dec
dec
roll
rolb
mov
jmp
pop
xchg
dec
and
inc
popf
in
outsl
xchg
addr16
mov
jmp
enter
adc
mov
cmpsl
lds
in
push
xchg
mov
int
and
or
sub
mov
jl
call
mov
icebp
nop
sahf
xor
in
cltd
add
mov
inc
lahf
mov
in
add
xchg
cltd
shr
inc
ficoml
lret
adc
iret
jns
ja
dec
xchg
xchg
daa
mov
repz
sub
fs
imul
pop
jae
adc
dec
push
or
xchg
jle
mov
cmp
xor
ret
xchg
in
sbbl
xchg
mov
jecxz
mov
cmpsb
dec
mov
jg
aam
inc
mov
das
add
lods
push
dec
cmp
add
inc
jmp
sub
aam
jno
insb
or
xchg
cmp
ret
cmpsl
mov
cmpsl
scas
xchg
outsb
xor
popl
xchg
sahf
sbb
out
inc
outsl
scas
xor
repnz
imul
sbb
cmpl
cmpsl
mov
imul
aad
pop
xchg
outsb
fs
fstl
arpl
jecxz
inc
sub
out
pop
inc
fcoml
clc
pop
push
aad
inc
jne
imul
mov
test
stos
and
jns
xlat
jo
push
test
pop
jg
push
xor
imul
loopne
add
test
loope
out
fs
jb
add
ret
mov
cwtl
mov
mov
xchg
jp
inc
push
mov
pop
ret
jne
shr
or
subb
xchg
arpl
sub
jle
outsb
inc
xor
insl
sti
xchg
xchg
imul
fwait
lock
lods
lahf
xchg
sub
fucom
push
add
xor
pop
jge
adc
xbegin
rcll
cmp
jecxz
jne
xor
cmc
jae
ret
cmp
add
shrb
ror
repz
stos
jae
cltd
mov
sub
loope
xchg
ja
shll
test
jne
xorl
jnp
push
push
xchg
jl
test
jnp
or
mov
jle
add
aas
xchg
mov
lret
jmp
cld
data16
adc
xchg
push
lret
and
xchg
icebp
in
xlat
ficoms
test
movsl
push
rcrb
imul
push
dec
push
mov
test
out
push
xchg
xchg
mov
fimuls
fidivrs
int
mov
jp
mov
int
sbb
aad
adc
pop
int
pushf
mov
scas
popa
ficoml
xchg
loop
sbb
cmpsb
cmp
add
add
fwait
pop
scas
and
aad
xchg
pop
push
sub
pop
imul
or
adc
movsl
adc
or
push
dec
and
ds
fsubs
dec
push
pop
push
in
pop
leave
push
scas
jl
sbb
cltd
dec
cmp
mov
adc
js
add
rorb
stos
cmpb
xor
lret
mov
in
ret
pop
lahf
sub
bound
add
inc
out
cld
stc
pop
or
inc
je
in
andb
std
lods
sub
mov
inc
cltd
gs
mov
push
je
cld
adc
xor
cmp
pop
dec
push
fwait
jecxz
pop
lock
add
mov
rcl
cmp
stc
pop
scas
out
mov
pusha
or
lea
jl
inc
lods
int
and
jp
inc
hlt
dec
mov
jo
lret
mov
popf
inc
call
dec
or
pop
inc
mov
mov
inc
jns
in
cmpsb
repz
shrl
jo
mov
dec
cs
and
jb
gs
in
jge
or
sub
mov
push
ret
div
psrld
cmp
push
lcall
xor
push
nop
fdivs
push
aaa
cltd
sbb
adc
push
push
enter
pushf
push
jno
xchg
mov
in
cmp
mov
cmp
adc
pop
aad
int3
inc
jne
sub
out
xchg
push
mov
ja
lret
ja
imul
dec
iret
mov
loop
data16
sub
inc
outsl
sub
sbb
sbb
sub
pusha
adc
jl
or
fildll
js
cmp
mov
and
push
cmp
and
rorb
inc
clc
inc
xor
pop
mov
addl
adc
daa
mov
push
dec
fstps
pop
jl
jno
loopne
xchg
mov
jno
test
jle
push
ja
add
xor
imul
out
lret
repnz
scas
stc
cmp
push
ja
into
movsb
adc
xor
es
push
ja
cmp
and
loopne
push
inc
jp
xchg
adc
pop
sub
sarb
sahf
mov
popl
pop
adc
and
push
sub
inc
pop
and
daa
stc
aam
aaa
jnp
inc
mov
ljmp
or
cmp
xchg
subl
out
or
test
icebp
fmull
es
mov
xor
mov
jo
sti
shlb
mov
aas
xor
out
sarb
insb
cmp
rol
loop
pop
mov
aaa
mov
mov
adc
xchg
cmpb
fsubrs
xlat
aad
add
push
xchg
pop
test
xchg
loopne
test
dec
out
rcll
ss
or
cmc
lods
data16
or
and
aas
pop
in
popa
inc
pop
fmull
add
xor
or
xchg
stos
inc
repnz
xchg
cli
bound
jl
jb
int3
shlb
int3
push
pop
andb
mov
and
xchg
ja
mov
cmp
adc
mov
add
sub
mov
das
mov
or
add
dec
cs
in
aam
xchg
popa
pushf
jmp
xchg
push
sbb
push
fcomps
push
jle
sahf
test
test
imul
fcmovnu
into
cmp
subb
inc
jl
call
roll
sub
out
rorl
push
fsubrl
jne
aam
xor
insb
mov
cld
cmp
push
mov
sbb
mov
cmp
xchg
add
ret
and
push
sub
pop
xor
rcrl
mov
cmp
out
xor
mov
inc
mov
xor
push
bnd
inc
fsubrp
aad
and
and
inc
fadds
or
lret
scas
or
popa
pusha
sbb
outsl
pop
xchg
cmpsl
mov
int
and
sbb
adc
mov
xchg
inc
roll
mov
aas
jno
movsb
rol
shrl
imul
adc
addr16
pusha
jmp
fnstenv
jl
mov
aam
pop
notb
push
mov
shlb
lods
sbb
jne
adc
mov
lret
loop
imul
clc
mov
xor
ret
frstor
cmp
lret
js
push
mov
mov
xor
xchg
lods
sti
mov
stc
into
fwait
cwtl
jb
mov
adc
lahf
repnz
push
mov
xchg
mov
sbb
repz
mov
jns
jp
in
lods
lret
pop
insb
sub
mov
dec
pop
adc
mov
jl
int3
pop
cmovge
dec
xchg
xor
jle
stos
inc
mov
cmp
mov
mov
xor
xchg
mov
jbe
add
or
dec
icebp
movsb
jl
imul
xor
fisubl
out
jnp
sub
jnp
cli
sbb
sbb
jae
jb
roll
lea
es
jne
inc
sbbl
pop
and
dec
popf
or
aad
ljmp
popa
imul
inc
decl
lods
jle
in
mov
push
jg
push
mov
sbb
jno
mov
and
cmp
movsl
xor
into
jge
and
dec
in
jae
cmpsl
mov
clc
inc
pop
imul
push
xor
out
loop
pop
enter
jecxz
jmp
es
push
pushf
lea
stos
clc
in
dec
test
push
inc
test
nop
sbb
test
pop
mov
cmp
and
sub
mov
and
pop
jne
stos
mov
loopne
mov
inc
push
daa
inc
mov
pushl
and
xchg
jbe
or
dec
arpl
push
xchg
cmp
xor
lea
loop
test
mov
flds
iret
std
mov
lcall
mov
jo
dec
push
dec
add
imul
lods
inc
inc
push
ds
pop
pop
ljmp
cmpsl
test
leave
dec
dec
push
pop
sub
mov
cmpsl
cmp
or
and
jmp
jl
jns
cmp
dec
test
push
pop
or
lret
adc
dec
cmp
dec
and
xchg
in
das
xchg
jns
dec
xlat
inc
pop
rol
fldenv
scas
rorl
mulb
stos
scas
jl
dec
jns
push
cmp
outsb
leave
or
fisubs
xchg
iret
repnz
daa
mov
repz
cmc
mov
xchg
movsl
jmp
xor
in
push
scas
jle
or
or
in
mov
mov
sbb
in
insb
rorb
cld
dec
test
jne
mov
cld
jmp
pop
push
orb
jle
push
push
mov
cwtl
xor
sbb
xchg
xchg
das
loope
pop
jg
mov
scas
shlb
cltd
loopne
jo
sbb
jo
pop
sub
movsl
addr16
mov
mov
push
pop
cmc
jg
enter
lahf
push
adc
cltd
jne
repz
xchg
mov
sbb
pusha
adc
sbb
or
mov
mov
xchg
sub
cs
cltd
push
roll
fmuls
xchg
pop
cli
jl
ja
sbb
daa
sarb
std
push
jnp
inc
jae
mov
inc
aad
enter
outsb
insb
repnz
inc
jle
adc
add
and
adc
shrl
std
cld
mov
jbe
adc
xchg
int
pop
ret
vorpd
dec
dec
std
rcll
push
pop
mov
push
sbb
in
xor
sub
inc
or
mov
inc
pop
cwtl
inc
sbbb
int3
es
adc
adc
inc
jns
mov
test
gs
xchg
adc
pop
add
in
ja
sub
adc
mov
lock
fistpl
cmp
cld
push
mov
and
mov
pop
int
jns
push
in
mov
cmp
dec
inc
mov
mov
xchg
inc
hlt
push
dec
aad
adc
addr16
lods
outsl
std
sarb
fisttpl
cli
mov
add
push
aaa
adc
lret
rclb
sbb
mov
xchg
notl
lret
jge
push
adc
pop
mov
inc
fists
scas
aaa
test
dec
pop
cmpsl
sub
xchg
jb
sbb
and
in
pushf
push
movsb
aas
and
cmp
pop
std
push
out
xchg
xchg
cmp
loop
gs
cli
je
out
push
add
mov
mull
cld
out
xor
xchg
sbb
inc
adc
adc
cltd
popf
aas
pop
dec
repnz
mov
sbb
faddp
add
jno
cmc
pop
js
add
mov
scas
xchg
fmulp
and
faddp
dec
int
aas
aaa
movsb
mov
inc
loopne
imul
mov
jns
fucom
mov
push
xor
fbld
lock
sub
icebp
adc
mov
dec
cltd
fisubrl
dec
popf
stc
mov
lret
push
xor
cli
stc
jge
sbb
ret
inc
or
xchg
arpl
hlt
sbb
dec
inc
in
call
imul
icebp
push
push
or
inc
movsl
ljmp
js
jle
ljmp
ret
test
imul
jmp
cmp
adc
fwait
mov
adc
in
pop
sysexit
in
xchg
add
stc
jp
xchg
ret
jecxz
data16
add
lret
fcmovne
call
adc
das
shlb
pusha
outsl
xchg
cli
xor
inc
xchg
lret
mov
mov
aad
lock
mov
mov
repz
pop
loopne
loop
and
mov
pusha
lsl
gs
sub
xor
das
mov
fcmovnbe
and
add
jmp
cmp
cmp
je
add
jno
or
mov
jp
leave
mov
or
adc
cmpsb
push
rcrl
nop
aam
jns
mov
rorl
fisttpl
icebp
pop
pop
cmp
jnp
push
push
mov
inc
add
dec
addr16
aam
mov
xchg
shll
pop
inc
mov
aad
lock
hlt
stos
hlt
imul
rorb
and
sarl
push
push
leave
fwait
cmpsb
and
subl
fs
inc
outsl
push
sub
insl
daa
push
mov
xchg
adc
jmp
aad
inc
sbb
test
fildl
sub
jo
je
bound
cmp
xor
fs
lods
fdiv
cmp
add
jmp
cmp
cwtl
xor
stos
mov
jp
mov
pop
lods
ret
orb
addr16
adc
icebp
das
fdivl
jbe
pop
push
out
cmp
das
mov
shll
ja
ja
scas
in
bound
sub
fisubrs
sti
ds
xchg
loopne
fsubr
add
jno
stos
push
outsl
test
sub
int3
iret
push
ljmp
dec
sub
les
ljmp
xchg
lret
lret
mov
add
ljmp
push
int
scas
fstl
inc
outsb
rorl
xchg
jle
push
mov
mov
mov
xchg
cltd
jbe
pop
jno
add
pop
jge
sub
lea
sub
lods
outsl
dec
enter
jle
repnz
int
jno
push
mov
or
js
inc
mov
and
add
sti
repnz
lds
and
inc
es
push
das
loope
jns
or
mov
shl
jmp
sbb
mov
shll
push
rolb
xor
in
sbb
sbb
push
fcoms
lret
pop
inc
stos
outsb
test
stc
cli
pop
add
mov
or
mov
sub
movsl
mov
and
test
and
adc
lods
or
hlt
adc
test
and
aam
jle
jno
add
mov
lods
int3
lret
insl
push
adc
or
push
fdivs
lock
push
fdivs
fldt
xchg
cmp
jnp
xor
and
in
out
negl
cmp
or
sub
xchg
adc
les
sub
jl
mov
rorb
push
push
outsl
adc
ds
inc
mov
movsl
adc
imul
push
push
and
jnp
lds
xor
push
and
repnz
push
lea
lods
push
into
arpl
or
fnstenv
xchg
push
xchg
mov
loopne
movsl
mov
xchg
mov
mov
scas
mov
inc
pop
repz
test
fmul
aam
cmpb
add
aad
addr16
push
xchg
aad
mov
push
out
ret
adc
aam
add
fsubp
pop
xsaves
jp
ss
inc
and
mov
mov
and
sub
push
jbe
push
jecxz
jns
cmp
in
mov
daa
ret
outsl
mov
inc
dec
mov
xchg
inc
outsb
pop
xchg
mov
push
sbb
js
push
das
movsb
inc
adc
inc
sbb
xchg
dec
and
xor
insl
cs
sbb
inc
test
sub
pop
je
pop
cmp
xchg
cmp
daa
xor
push
nop
push
sbb
dec
pushf
fs
repz
sbb
jecxz
sarl
mov
fstps
pop
mov
adc
test
jne
in
push
xor
add
sub
jno
orb
es
or
stc
mov
cmp
xchg
push
inc
orl
imul
cs
add
ret
cld
pusha
stos
leave
test
je
inc
sub
sti
roll
cmp
xchg
mov
push
jg
repnz
pop
mov
cs
or
test
mov
sub
sbb
inc
lahf
adc
lret
sbb
adc
mov
jle
mov
pushf
sub
sahf
fdiv
add
aas
xor
sbb
jle
jmp
cmc
frstor
shlb
stos
sbb
ss
rclb
pop
out
push
jmp
cmp
or
aas
repz
fwait
mov
fiaddl
mov
enter
cli
lods
mov
lret
popaw
add
int3
insb
call
mov
loope
pop
xor
cmc
xchg
jns
mov
dec
sub
loopne
mov
imul
repnz
cmp
js
xor
inc
and
lods
out
testb
mov
leave
mov
lret
or
stc
mov
cmp
push
jae
das
lret
gs
push
in
mov
std
cwtl
ljmp
mov
shr
xor
adc
mov
aaa
inc
cmp
vpsraw
out
xor
xchg
cmp
jbe
insb
mov
xchg
mov
mov
xchg
sub
dec
inc
std
sub
fs
aad
sbb
loopne
add
cs
test
stc
in
push
scas
inc
cmpsl
xor
out
bound
xorb
sbb
lret
mov
jl
out
stos
outsb
and
adc
lea
repnz
and
cmp
xor
jo
leave
negl
iret
insl
xor
sbb
insb
dec
inc
mov
mov
dec
cmpsl
loope
hlt
mov
cmp
cmp
adc
pop
popa
addb
call
data16
shll
xor
lret
insl
inc
cwtl
incl
fidivrl
jmp
add
daa
lods
or
xor
jge
xchg
aaa
sub
inc
add
lods
jge
xchg
push
scas
adc
in
mov
ficoml
iret
xchg
mov
int3
mov
jbe
jnp
cmp
test
loop
inc
movsl
cltd
or
inc
dec
mov
idivb
cwtl
sbb
mov
and
inc
cld
jno
adcb
leave
cmp
addr16
xor
loop
test
cmp
pop
pop
jne
fidivrs
jb
add
dec
dec
data16
inc
ret
daa
and
imul
sub
inc
nop
das
shlb
enter
mov
fdivs
int3
loope
nop
push
lock
rclb
cmpsb
imul
sub
in
lret
jno
int3
stos
mov
xlat
sarl
jne
cmp
lcall
sub
cmp
test
lock
lret
push
sub
pop
popf
ss
movsl
push
loope
outsl
adc
add
add
dec
subb
jecxz
push
int3
adc
ss
mov
mov
xchg
sub
push
pop
fbld
mov
add
mov
pushf
andl
cmpsb
push
mov
adc
push
sbb
sub
inc
test
add
jne
js
pop
stc
cwtl
xchg
sub
pusha
fidivl
addl
fsubs
or
sub
push
movsb
push
loop
test
jnp
push
into
push
inc
xchg
jle
mov
das
jbe
mov
or
mov
addr16
js
cli
mov
and
roll
leave
push
faddl
adc
test
aaa
dec
inc
mov
in
cmpsl
and
pop
syscall
adc
jno
inc
sub
mov
sahf
les
xchg
out
mov
and
adc
mov
lcall
sub
mov
pusha
or
test
sub
icebp
push
inc
imul
popa
out
push
sbb
ss
add
mov
xchg
in
movsl
jne
inc
mov
mov
sub
lods
xor
loope
out
push
push
jo
cld
incl
push
inc
jae
and
aam
and
pop
ret
aas
add
call
stos
movsl
adc
xchg
lcall
lret
pop
jl
imul
push
fstpl
sbb
cli
rorb
popa
sbb
sbb
cmpsb
std
ljmp
outsl
and
std
push
cmp
popl
jns
std
xchg
inc
sub
lods
and
mov
outsl
sub
daa
ss
jl
and
stos
iret
mov
or
jecxz
xor
insl
das
add
jle
mov
shl
insl
aad
pop
push
xor
in
push
pop
pop
sbb
xchg
stos
cmp
lods
adc
jmp
adc
jg
popa
dec
or
and
inc
dec
jae
aad
or
inc
jmp
cmpsb
xor
dec
inc
jns
xchg
icebp
ds
pop
sub
or
push
js
jo
sti
inc
add
sub
divl
xchg
adcb
sbb
mov
mov
ret
jg
push
fdivl
or
je
leave
pop
inc
stos
popf
cmpsl
test
add
insb
jae
xchg
sub
xor
scas
divl
mov
std
push
and
pop
insl
sub
mov
sub
repnz
dec
clc
jecxz
outsb
testb
xchg
jl
push
pop
xchg
add
jno
loope
dec
in
jg
xorb
pop
fiadds
arpl
mov
arpl
and
nop
xor
shll
and
mov
or
popa
add
mov
cmp
lods
jmp
stc
cmpsl
xchg
adc
cmc
test
push
jno
mov
mov
sbb
repnz
sbbb
jne
mov
pop
xchg
xchg
mov
mov
mov
pop
push
ds
xor
mov
jae
mov
add
inc
mov
adcl
ja
out
adc
int
fld
mov
pop
cmp
icebp
in
cmc
mov
jp
aas
xor
addr16
shrl
or
out
dec
mov
push
mov
je
jmp
add
lods
jnp
dec
xor
in
sub
test
add
enter
inc
mov
dec
and
mov
xchg
fucomip
pusha
jb
mov
mov
repnz
mov
les
shrl
pop
xchg
jg
fistl
movsb
xchg
dec
cmc
cmpsb
adc
addb
xchg
in
ss
test
xchg
mov
sub
aaa
add
and
pop
push
mov
push
jns
add
push
jmp
in
in
or
scas
cli
int
scas
or
cmc
jge
mov
or
push
fs
test
movsl
jmp
sub
sbb
fcmovnu
loopne
add
and
inc
xchg
xor
lcall
inc
push
iret
cld
mov
in
stos
push
js
das
add
repnz
int3
dec
fsubrl
dec
sahf
scas
mov
push
int3
arpl
or
sbb
outsl
gs
xor
inc
and
iret
sub
repz
xchg
mov
jle
mull
xlat
mov
and
mov
push
repnz
mov
inc
sarb
pop
or
repnz
sub
test
daa
stos
adc
cltd
stc
outsl
dec
mov
popf
or
testb
cmp
clc
jae
insb
aaa
shl
jne
imul
push
sub
data16
pop
and
pop
lahf
mov
fdivl
cmpsb
mov
cli
xchg
mov
push
push
negb
mov
mov
dec
cmp
push
xor
sub
sbb
inc
jne
adc
loop
xor
inc
inc
daa
into
pop
jmp
repnz
mov
mov
jmp
adc
dec
ljmp
xchg
gs
scas
mov
repz
std
push
in
sub
jns
into
xchg
mov
mov
xor
dec
lcall
mov
fstp
xlat
inc
pop
call
or
fcompl
insl
jae
cmpsl
es
mov
lods
mov
pop
sbb
adc
lock
fistpll
fstps
jo
aas
add
dec
jns
and
cmp
pusha
repz
jbe
idivl
dec
outsb
xchg
jge
mov
inc
pop
or
jge
call
repz
ds
ss
and
aas
jns
push
pop
adc
cwtl
lds
push
cmp
push
cmp
jne
mov
es
sbb
bound
mov
fidivl
enter
push
push
jo
adc
push
pushl
mov
adc
cwtl
into
pop
lods
mov
xor
sbb
out
jns
xor
inc
jo
stc
mov
jecxz
movsl
lods
sub
or
xchg
fmull
xor
add
es
das
nop
fs
inc
ret
xchg
cmp
mov
sub
and
and
in
mov
es
cmp
dec
cmovg
inc
mov
and
pop
imul
cmp
mov
aas
fsubrp
jl
xchg
sub
ja
pop
xor
jp
pop
mov
inc
add
cmp
push
mov
lret
out
nop
inc
pop
test
xor
xor
mov
mov
mov
or
cmp
sahf
arpl
sbb
dec
xchg
add
insl
stos
add
neg
lea
scas
adc
xorb
jb
rcrb
xchg
mov
movsb
hlt
int
pop
out
push
cmp
cmpsb
dec
sub
into
ret
mulb
sub
and
pop
cmp
jne
add
sub
add
cmp
adc
mov
lods
mov
test
dec
addb
inc
stos
js
add
jmp
jg
xor
push
push
ret
pop
imul
dec
mov
rcrb
repz
xor
push
mov
mov
and
mov
dec
mov
push
mov
cmpsb
test
xchg
sub
jge
popa
ret
les
lea
lret
xor
ss
add
lds
xlat
cltd
stos
sub
push
enter
ret
adc
xor
incl
lahf
mov
daa
repz
rcrb
loop
outsb
cmp
sbb
dec
and
daa
int
mov
aas
push
jmp
dec
clc
pop
mov
or
jo
jbe
arpl
adc
ljmp
jmp
icebp
mov
mov
lret
popf
xor
adc
fisubl
add
push
or
lods
add
dec
mov
push
in
fists
and
out
std
test
outsl
out
rol
cli
shr
mov
iret
test
dec
pop
mov
xlat
scas
pop
arpl
xor
sub
loope
mov
jo
dec
jmp
sbb
pop
pop
gs
stos
andps
pop
or
in
jl
add
add
cmp
fdivrl
aam
push
gs
adc
rcr
jno
mov
out
aam
adc
fldl
mov
shl
sub
xor
mov
rorl
aaa
push
in
dec
into
push
xor
mov
xor
add
lret
repnz
adc
fistl
cli
enter
sub
les
sbb
cltd
push
adc
cmp
call
adc
movsl
jle
icebp
out
and
sub
loope
fld
mov
loope
lret
leave
test
ret
mov
mov
lock
xchg
fwait
xchg
mov
cmp
push
push
push
cmpsl
mov
xor
push
icebp
mov
sub
movb
sarl
or
mov
fiaddl
outsl
lret
rorb
jo
mov
lods
gs
push
jp
dec
sbbl
pop
jg
sbb
fwait
sbb
pop
imul
sub
xchg
test
sti
adc
sbb
movsl
inc
rcrl
jne
addr16
dec
jae
xchg
add
xor
inc
outsb
or
and
les
xlat
jl
aam
popf
jp
arpl
mov
repnz
subb
add
aam
mov
shll
mov
cmp
lea
insl
js
inc
mov
hlt
dec
or
addr16
inc
adc
inc
cmp
mov
mov
jmp
and
test
sbb
sub
les
mov
ja
dec
and
adc
and
push
mov
add
cmc
popf
orl
bound
cmp
pop
fnsave
das
jmp
push
adc
arpl
lea
lret
cli
adc
mov
push
hlt
lcall
add
mov
or
sahf
xchg
add
dec
sbb
add
fldcw
sti
data16
pop
movl
in
pop
nop
and
push
and
cltd
or
mov
mov
ret
mov
loope
inc
sub
and
and
sbb
cmpb
je
pop
inc
add
mov
jno
mov
fstl
ret
mov
sbb
in
inc
inc
insl
jno
aam
imul
add
outsl
jo
popf
mov
loope
adcl
imul
adc
mov
imul
jecxz
xchg
push
or
cmpsb
loope
loop
cmp
fsubl
mov
pop
push
das
imul
subl
pop
jl
add
lcall
sub
push
inc
adc
jnp
jb
sbb
mov
hlt
test
mov
push
push
lcall
or
pop
pushf
js
inc
dec
xlat
dec
add
jo
xor
xlat
out
sbb
xlat
mov
mul
ret
or
inc
repz
int3
rcll
pop
xchg
ja
mov
rcrb
xor
push
and
push
jae
dec
pushf
xor
jns
push
rorb
fs
cmp
ja
adc
sub
cmp
gs
in
inc
adc
push
jl
aam
fisubrs
jae,pn
inc
in
insb
xor
push
adc
iret
cmpb
jno
push
sbb
xor
add
addr16
shrb
lret
jae
mov
cmc
lds
lcall
lret
or
mov
xchg
adc
cmpsl
or
mov
xlat
add
push
aam
stos
mov
adc
fdivrp
clc
mov
and
sbb
movsb
mov
pop
aam
imul
shrl
adc
cmp
xor
sahf
lahf
jg
or
inc
daa
iret
sub
fcoml
adc
adc
ja
pushf
lret
add
test
pop
lret
inc
movsb
pop
insl
in
push
xchg
mov
pusha
popf
in
in
test
mov
and
sub
sahf
mov
sahf
imul
lods
mov
jmp
sbb
mov
fidivrl
aad
int
fcompl
xchg
mov
sarl
test
lret
icebp
or
and
inc
lahf
mov
xlat
mov
clc
add
dec
jb
gs
daa
or
add
mov
or
jle
cmc
call
das
aad
aam
int
dec
mov
sbb
dec
xor
std
mov
dec
arpl
hlt
inc
mov
rcl
fisttpl
jns
imul
mov
mov
pop
das
jo
add
sbb
pop
aaa
sub
and
pop
or
aas
push
pop
inc
and
pop
sbb
or
push
sub
imul
bound
pop
cwtl
ds
xor
mov
stos
push
mov
mov
loopne
mov
mov
ret
pusha
andl
push
mov
cld
pop
mov
shlb
inc
inc
fcompl
xchg
xchg
dec
insl
adc
out
ljmp
xor
lret
incl
insb
or
pop
rcrl
sub
adc
data16
rorl
icebp
std
gs
hlt
lods
outsl
ficoms
dec
cmp
mov
fs
push
inc
stos
outsl
mov
xchg
add
mov
icebp
into
jno
jle
call
sahf
loope
and
sbb
movsl
mov
out
scas
dec
cs
fiaddl
and
lret
add
das
jg
mov
lcall
dec
imul
sbb
mov
aaa
mov
dec
mov
mov
xchg
in
dec
sub
xor
cltd
mov
in
daa
repnz
je
jbe
mov
pop
inc
sti
sbb
call
testl
in
test
daa
mov
movsb
and
jo
sbb
cmp
repz
mov
dec
dec
jmp
cmpsb
subb
dec
or
inc
or
and
sti
mov
daa
rcrb
das
jle
fldt
aaa
pop
pop
and
mov
fidivrs
mov
push
dec
mov
push
nop
jmp
inc
dec
xchg
pop
fnstsw
outsb
pusha
xor
std
rcll
mov
lret
in
xor
outsb
mov
lcall
data16
add
js
aas
test
mov
xchg
testl
leave
pushf
ficoml
and
lahf
cmp
xchg
shlb
dec
xor
inc
imul
repz
out
in
ret
xchg
jl
lcall
pop
adc
pusha
xor
mov
cmp
pop
rclb
loope
decl
inc
lea
dec
mov
fsubr
inc
push
movsb
fdivrs
pop
mov
cli
data16
loop
cmc
xor
and
outsl
pop
adc
pop
mov
scas
jo
bound
test
je
mov
addr16
or
xchg
xchg
mov
push
mov
stos
repz
ret
xor
pop
rorb
stos
fadd
add
lret
sbb
cmp
test
or
inc
pop
imul
sbb
xlat
mov
in
jns
push
fisttpl
outsl
mov
push
test
inc
xchg
subl
cmpb
xlat
lret
sub
mov
push
decb
fcoms
and
in
insl
jge
movsb
adcb
and
jp
clc
xor
xchg
call
lcall
lcall
outsl
xchg
std
xor
inc
mov
inc
jl
mov
lret
ss
jne
out
gs
ja
add
adc
ret
pop
subl
or
cmc
pushf
mov
pop
cld
sbbb
in
push
sub
and
pusha
mov
mov
cli
das
loope
or
cld
pusha
and
ret
xchg
movsb
cmp
ret
mov
icebp
jne
out
push
andb
pop
pop
je
mov
sub
push
push
mov
clc
push
loop
or
push
and
jl
aaa
or
cmp
fnstsw
scas
or
movsl
hlt
jb
bound
incl
test
loop
jmp
jle
dec
sti
push
dec
xchg
mov
loopne
mov
mov
mov
mov
loopne
stos
push
mov
add
addr16
stos
mov
mov
mov
fcom
jge
insb
rcr
cmc
movsl
xlat
aam
push
adc
cmp
cmpsb
dec
stc
xchg
in
movsl
arpl
lea
add
cmovbe
xor
dec
ficomps
sbbl
cld
mov
outsl
outsb
test
repnz
fldt
les
adc
xor
lcall
inc
aaa
in
sti
je
arpl
mov
mov
out
mov
xchg
or
push
sbb
inc
cli
arpl
mov
cmp
push
xor
pop
lcall
cwtl
cmpsl
inc
or
dec
mov
outsl
test
push
jle
rclb
rcrl
jbe
fimuls
loopne
and
insl
mov
sti
adc
out
pop
xchg
divl
mov
in
push
repz
fwait
clc
jl
push
sub
movl
pop
dec
leave
inc
mov
lods
sub
push
adc
xchg
lret
aas
adcb
out
aad
sub
je
cmpsb
add
aad
clc
das
adc
lods
inc
das
xchg
sub
test
dec
sub
xchg
sbb
pop
push
mov
xchg
mov
or
fsubrs
inc
sti
cmpsl
mov
xchg
mov
and
pop
fistps
xchg
push
iret
jae
or
aaa
jb
loopne
dec
std
pop
push
das
cltd
fdiv
sti
push
sub
es
out
sahf
stc
test
add
icebp
loopne
jno
xchg
mov
es
mov
push
adc
inc
sub
fistpl
push
sahf
test
lods
cmp
ret
div
push
cmp
test
lret
mov
sub
scas
arpl
bound
int3
dec
sub
shll
filds
jne
inc
dec
mov
push
add
mov
jp
inc
jge
fidivrs
in
outsl
push
imul
push
in
mov
push
test
mov
ja
sbb
or
hlt
mov
sbbl
test
sbb
es
mov
je
sub
aaa
sub
inc
mov
xchg
jbe
xchg
pop
ljmp
sub
mov
imul
mov
add
inc
push
or
dec
cld
popa
test
lds
fcmovb
aaa
cmp
xor
push
lahf
dec
push
add
mov
jne
pop
in
xchg
push
sbb
lock
iret
add
xchg
inc
push
repz
push
repnz
ss
imul
sub
clc
addl
mov
push
imul
fwait
cmc
stos
adc
or
sbb
shll
jle
std
fnstcw
pop
fdivrs
add
jbe
out
ds
lds
dec
sbb
sbbb
loopne
shrb
test
fistpl
je
bound
adc
leave
imul
das
jns
stc
add
push
inc
fidivl
inc
sbb
fdivl
sbb
test
iret
mov
xchg
sub
and
xchg
cltd
dec
in
cmp
test
sbb
mov
sahf
adc
les
std
outsl
push
pop
add
dec
inc
jae
aas
in
jns
stos
dec
pop
pop
movsb
ret
xor
adc
sti
out
add
jns
and
test
xchg
scas
out
add
xchg
xchg
fildll
jne
mov
pop
xchg
daa
or
cmpsb
gs
jnp
or
pop
bound
inc
sub
fnsave
pushf
fs
cs
xor
cmpsb
test
mov
bound
jp
add
xchg
fcompl
lret
int
jmp
stos
aaa
rorb
rcr
mov
outsb
sbb
pop
pop
xchg
bound
push
je
push
loop
sbb
add
cmp
into
scas
push
pop
push
data16
jmp
cmpsl
dec
push
add
pusha
mov
and
push
fildll
incb
push
rol
adcl
cs
test
sub
das
push
lock
aas
jns
mov
sarl
addr16
rclb
fbld
lea
dec
pop
pop
adc
jmp
adc
mov
sub
or
adc
loop
add
dec
and
or
jmp
mov
jbe
adc
add
call
push
gs
pushf
leave
imul
jmp
ja
jmp
test
nop
push
pusha
es
aas
popa
pop
icebp
std
movsl
out
sub
jmp
or
mov
sbb
sbb
xchg
popf
aam
outsl
and
xlat
movsl
cmp
hlt
arpl
push
insb
xchg
lcall
xor
pop
pop
sti
lahf
popf
cmp
ss
addb
jns
mov
sarb
dec
std
shll
or
ret
mov
inc
scas
and
les
scas
mov
pop
xor
in
xchg
and
dec
icebp
mov
add
jns
sbb
or
sarb
icebp
xchg
xor
cmp
je
out
scas
test
xlat
dec
test
push
add
lcall
insb
aas
out
es
fistps
fsubrl
cmp
dec
sub
leave
mov
cld
xchg
inc
loopne
je
mov
cmpsb
pop
clc
push
dec
bnd
and
in
push
jnp
mov
mov
add
loope
cmc
mov
loop
mov
push
mov
inc
mov
subl
push
sbb
pop
out
incb
aas
clc
pop
push
cmp
adc
pop
popa
xor
repz
ss
int3
mov
sbb
pop
dec
out
or
and
push
std
cs
mov
cs
insl
and
out
mov
insl
xchg
int3
xchg
xchg
dec
adc
jb
int3
in
xchg
push
enter
push
jno
bound
push
out
call
adc
ljmp
into
outsl
fcomps
lahf
mov
mov
pop
icebp
aad
push
push
jle
fcoms
enter
loope
xchg
mov
sub
ret
pushf
cmp
mov
mov
aaa
cmp
icebp
add
cwtl
in
mov
xchg
roll
mov
and
inc
movsb
das
dec
scas
ret
sub
stos
leave
sub
dec
es
push
xchg
cmc
jnp
std
inc
jecxz
jl
shll
test
sub
sbbb
addl
cmp
ss
addr16
sub
pop
xlat
std
mov
mov
push
jne
mov
dec
push
jmp
ficompl
or
repnz
sbb
sub
push
daa
mov
pop
jo
movsl
ret
jl
pop
fwait
push
xor
ds
xor
xchg
mov
xchg
push
xor
sbb
call
mov
inc
stos
push
out
fsts
adc
inc
add
call
loop
popa
insb
inc
ret
add
ret
xchg
pop
xchg
shrl
int
inc
inc
fcmovbe
push
imul
in
pop
sbbl
lods
aam
mov
cltd
push
lret
icebp
inc
rorb
mov
inc
ss
imul
aaa
inc
or
sahf
mov
mov
inc
xchg
xchg
in
arpl
add
add
fidivrs
xchg
push
test
rcll
mov
xchg
adcb
fdivr
xchg
stos
or
xor
xlat
xchg
or
in
shrl
sarl
inc
pop
lret
push
testl
xor
push
xor
add
in
test
popf
mov
incl
aas
mov
andb
repz
cmp
bound
xchg
jb
test
cmp
fisubl
lods
sub
push
inc
loop
dec
mov
pushf
sarl
pop
mov
rclb
inc
sbb
dec
addr16
test
mov
inc
test
sbb
daa
xchg
mov
lock
rcl
popa
adc
rcpps
fcoms
xchg
es
and
mov
fidivrl
test
mov
push
xlat
inc
push
lea
imull
adc
pop
sbb
call
stc
daa
daa
icebp
les
stos
inc
sbb
js
js
std
imul
ljmp
loopne
leave
jl
bound
int
mov
push
mov
imul
je
mov
leave
push
test
stos
clc
inc
orl
gs
dec
pop
in
inc
aas
dec
cmpsl
push
xchg
push
mov
sub
sbb
test
mov
xchg
sbb
xchg
dec
dec
jns
or
movsb
stos
movsl
shlb
cmp
sahf
pop
insb
inc
add
in
daa
gs
push
mull
xor
idivb
movsl
pop
call
mov
cli
push
out
test
jle
hlt
mov
mov
and
ds
fmull
lods
jmp
in
jecxz
lods
call
and
xchg
sub
jp
push
mov
xor
jns
ds
popf
pop
fbld
jge
repz
stc
in
sahf
push
pop
mov
jge
popf
push
sub
cmpsl
fsubs
std
or
lcall
adc
mov
push
add
aad
jmp
push
xor
movsb
push
jmp
fwait
es
adc
or
inc
cs
std
sub
dec
pop
into
jecxz
jne
xchg
xor
aaa
insl
call
mov
sti
cwtl
mov
pop
movsl
push
or
and
leave
lcall
sub
cmp
enter
dec
add
les
movsl
pop
pusha
xchg
xchg
xchg
ja
int
movsl
mov
inc
mov
push
cwtl
jmp
xchg
xchg
sbb
mov
cmpsb
xchg
fs
sub
sbb
fadds
add
out
xor
xlat
mov
ret
add
subb
or
dec
push
bnd
sti
mov
add
mov
xor
mov
cli
jae
pop
push
mov
cs
icebp
stos
daa
adc
pop
sarb
mov
hlt
adc
testl
xlat
cmp
popf
push
mov
arpl
and
pmaxub
cmpsb
sbb
sarl
lret
fisttpl
mov
or
in
jmp
testl
xchg
jns
xlat
add
sbbl
sbbl
or
adc
pop
add
mov
push
adc
push
add
jnp
into
sbb
data16
or
data16
inc
dec
pop
mov
inc
push
nop
notb
mov
fnsave
jne
or
pop
int
dec
push
or
leave
dec
test
je
lea
cld
clc
lock
roll
sub
movsb
fldt
shl
sub
adc
mov
adc
imul
jl
neg
pop
jno
mov
mov
xchg
aaa
xchg
sbb
movsb
sbb
mov
adc
push
mov
xchg
mov
imul
xor
and
scas
pop
inc
hlt
mov
jg
vmovntps
add
cmp
mov
out
int
test
es
mov
fistpl
sbb
fwait
js
sbb
xchg
cmpb
jecxz
outsl
les
dec
repnz
pop
repz
test
ljmp
lret
ss
in
in
test
mov
dec
push
xchg
outsb
rorl
lret
ret
sub
ret
or
stos
nop
in
and
inc
mov
inc
add
movsl
push
mov
mov
push
push
gs
lcall
push
sub
mov
popl
loop
jbe
adc
mov
mov
pop
jne
addr16
fcoml
jl
in
xor
xchg
xchg
push
insb
lret
push
pop
xor
orl
pop
lods
mov
loopne
test
sbbb
inc
pushl
scas
mov
ficoml
in
add
jp
push
jb
add
xchg
std
ja
movsl
imul
lret
dec
inc
out
clc
sub
cltd
lock
cs
icebp
cmp
xchg
jp
mov
js
jmp
cmpsb
popa
imul
lds
test
sub
xchg
sbb
arpl
mov
je
jmp
dec
sahf
ja
pop
adc
jmp
push
jmp
xlat
sbb
and
out
ss
out
sub
popl
mov
ret
adc
dec
fildll
and
fistpll
dec
ja
sbb
mov
ret
rolb
inc
in
int3
shrl
mov
pop
jge
xchg
xchg
sahf
aad
fbstp
pop
out
lret
inc
pushf
push
rolb
lea
es
xor
stos
pusha
inc
pushf
and
mov
mov
lahf
mov
cli
push
sbb
sub
jb
xor
lds
inc
sub
or
arpl
push
adc
loope
fwait
jnp
dec
lock
lods
cld
cmc
frstors
sbb
clc
xchg
cmp
arpl
inc
scas
aas
xchg
xlat
jnp
jbe
aam
push
mov
repz
xchg
adc
cli
aam
pop
ss
pop
ds
mov
xchg
cltd
movsb
sarl
aam
xor
out
pop
loopne
adc
dec
test
adc
or
pop
dec
mov
hlt
add
adc
nop
int
inc
jg
notl
xchg
popf
jmp
mov
cmpsb
pop
xlat
sar
dec
ss
outsb
insl
popf
pop
jg
jae
sahf
shrb
enter
xor
loope
jb
jbe
fwait
shll
jmp
pop
aas
adc
inc
and
push
lret
push
push
negb
push
mov
rcrl
jne
add
pop
cmpb
mov
sbb
das
and
mov
clc
mov
xor
popf
pusha
popf
adc
mov
mov
lods
cmp
dec
das
rol
cltd
stos
lock
adc
jle
and
shll
outsb
xor
lds
in
movsl
cmp
add
cmp
movsb
jle
ret
mov
dec
sub
scas
adc
sbb
inc
pop
xchg
add
jae
mov
out
cmpsl
cmp
fisubl
int3
sub
popa
je
pushf
in
cmp
jge
xchg
icebp
aam
mov
dec
pop
repnz
repnz
fsubl
pop
or
repnz
aas
in
test
test
sub
mulb
movsb
ja
push
cmp
cmc
cltd
adc
leave
xor
jb
xchg
sub
cvtpi2ps
add
sbb
jnp
jge
daa
pop
pop
mov
or
enter
mov
push
xor
in
dec
mov
xlat
lret
jmp
mov
inc
sbb
xchg
mov
add
xor
cmp
lret
mov
sarb
mov
jl
and
inc
rolb
mov
lea
rcrl
xor
cmp
or
ja
xor
cmp
adc
add
mov
sub
xor
sbb
pop
notb
shrl
jl
jl
inc
mov
mov
xchg
bound
mov
mov
loopne
sub
int
cmp
inc
sbb
sar
ds
or
push
jecxz
repnz
out
hlt
lock
push
int
andb
in
cltd
lea
mov
xorl
lret
ret
push
sub
popf
cmp
inc
sub
push
add
or
aas
hlt
push
sub
inc
pop
and
ret
sub
mov
movnti
hlt
mov
add
push
inc
adc
sbb
mov
cmp
daa
adc
adc
push
lret
pop
rcpps
mov
xlat
dec
cmove
call
es
rorb
lea
loop
xorl
add
mov
sub
mov
cmpsb
and
shr
fprem1
stos
mov
mov
adc
rclb
xor
mov
mov
ja
test
dec
jmp
and
xor
dec
lret
outsb
add
cmp
xor
adc
and
xor
xchg
xchg
shll
xor
enter
sub
mov
push
add
addb
fisttpll
push
dec
add
jmp
nop
aad
bound
push
negb
lcall
adcl
cmpsb
cli
pop
stos
mov
push
repz
adc
sub
pop
enter
jbe
das
insl
inc
sbb
aaa
scas
mov
xor
push
gs
lods
fdivl
enter
loope
fcoml
int3
lods
aas
fldl
adc
fwait
stc
mov
out
mov
scas
fcomip
xchg
cli
mov
mov
mov
jne
mov
jp
dec
pop
mov
sti
adcl
clc
jo
lret
int3
js
insl
or
fldl
xor
dec
pop
cmpl
inc
xor
fmulp
and
dec
or
jno
sbb
insb
js
fsts
jg
dec
loope
inc
addr16
fcomp
lea
out
fdiv
outsb
int3
in
xchg
mov
mov
sahf
lods
add
xchg
mov
xchg
mov
in
je
mov
iret
arpl
xor
aad
fsubrp
adcl
lahf
adc
lock
jae
push
push
sub
mov
push
imul
adc
mov
orb
push
mov
xchg
push
pusha
lods
jl
insl
dec
scas
pop
call
cltd
jne
push
in
push
lock
add
js
xor
bound
movsl
inc
pop
add
aaa
popf
jecxz
nop
enter
cltd
adc
sbb
mov
lcall
arpl
inc
xchg
pop
call
pusha
adc
pop
push
xor
mov
push
in
inc
push
adc
or
shlb
loope
dec
sub
iret
daa
lock
fimuls
cmp
and
lock
popa
fucomip
out
pop
imul
jo
mov
cmp
shll
pop
in
inc
push
loopne
mov
mov
sbb
dec
fists
outsb
loope
sub
insb
insb
lods
jno
jl
out
mov
leave
das
cmpsl
addb
call
add
bound
fisttpl
mov
inc
jno
lods
insb
cmp
pop
insb
je
sti
dec
sahf
pop
jp
cmpsb
mov
mov
icebp
jnp
loope
rcl
pusha
xor
pop
push
add
enter
sahf
cli
arpl
mov
cmp
inc
daa
divb
js
dec
mov
clc
jecxz
adc
sarb
jo
push
orl
call
scas
test
int
cmc
xor
fcoml
pop
mov
xorb
stos
dec
repz
test
pop
and
jo
xlat
lods
addr16
inc
pop
repnz
mov
xchg
mov
leave
jl
out
and
sbb
xor
mov
adc
push
add
lock
mov
jecxz
pop
leave
inc
push
jp
push
ret
ret
loopne
into
stos
pop
add
movsl
ljmp
shll
jae
mov
adcb
cmp
dec
xchg
cmc
push
push
push
cmp
scas
add
push
loopne
inc
xor
pop
lods
xor
adc
arpl
js
mov
push
push
mov
cmc
jnp,pt
xor
jo
cmp
lcall
sub
cmp
xchg
xor
insb
xchg
and
fldt
out
sahf
dec
test
push
stc
mov
or
jns
std
bound
andb
jae
inc
xor
or
outsl
popa
xchg
lea
pop
into
mov
clc
out
mov
std
sbb
xchg
dec
sub
or
sbb
stc
inc
data16
decb
lea
inc
xchg
jb
push
mov
sub
jle
push
pop
fs
ret
arpl
adc
xchg
lock
xchg
cmp
add
xor
mov
fldl
push
cli
mov
inc
inc
addr16
mov
inc
adc
cs
data16
imul
nop
jns
add
mov
cmp
push
and
leave
repnz
pop
push
xchg
iret
sub
rorl
shrl
outsb
lret
icebp
add
fisubs
ficompl
dec
in
xchg
stos
ds
aaa
mov
inc
and
cld
pop
or
jae
pop
mov
xor
dec
lods
fsub
out
insb
push
sbbl
pusha
xor
jbe
aas
mov
popa
into
inc
call
arpl
into
sti
fwait
jnp
das
or
cwtl
lret
jne
mov
dec
push
mov
add
inc
ret
push
mov
xlat
push
leave
and
in
dec
dec
cmp
jno
roll
cmpsl
shll
scas
push
add
lret
ljmp
clc
xchg
xlat
xchg
cmp
negb
pushf
xor
popa
inc
jmp
decl
inc
cmp
adc
pop
dec
mov
pop
gs
xchg
outsl
inc
add
jl
pop
mull
mov
mov
cmp
lods
ljmp
in
lods
and
jp
mov
stos
jmp
fistpll
dec
mull
mov
push
rcll
push
inc
in
sub
rorb
sbbl
rorl
mov
sbb
push
jl
push
dec
out
and
mov
aam
jmp
and
mov
bound
xor
mov
mov
addl
sahf
data16
cmpsl
or
jmp
pop
xor
sti
add
fdiv
or
dec
xchg
stos
ror
aas
sbb
cmpsl
cmp
cmpsl
sub
xchg
in
ret
mov
lea
dec
fisttps
gs
or
jns
les
sub
pop
shl
aas
divb
jge
vdivps
jp
mov
adc
push
fwait
mov
mov
mov
insb
dec
daa
stc
enter
insb
lret
mov
or
adc
test
push
sub
pop
sbb
lock
test
fcoms
dec
jmp
outsb
bound
ret
adc
and
fwait
mov
test
clc
fwait
inc
xlat
sbb
ss
ds
sub
sbb
scas
imul
arpl
dec
push
push
cltd
lds
into
dec
scas
loopne,pt
jmp
outsb
mov
dec
ss
mov
adc
dec
bound
movsb
bound
push
add
sbb
or
push
in
stc
adc
xchg
pop
pop
pushf
sub
div
add
sbb
cmp
push
sbb
cmp
adc
outsb
sti
xchg
pop
dec
xchg
repz
iret
and
pusha
jae
arpl
jle
ss
or
mov
xchg
lock
and
xchg
mov
js
xchg
out
adc
add
scas
rclb
imul
mov
ret
add
mov
dec
bound
xchg
sub
subb
mov
fdivr
ret
and
js
mov
push
xchg
ret
mov
imul
loop
xchg
xchg
and
mov
rclb
dec
in
les
lret
leave
sbb
movsl
out
fs
mov
xor
or
pop
bound
adc
push
push
mov
ror
ss
lret
cmp
jb
lahf
scas
lods
mov
sub
mov
dec
std
cmp
gs
test
xchg
fs
loopne
hlt
fiadds
ret
lods
add
or
mov
enter
je
int3
ss
adc
subb
push
jge
divb
imul
loopne
or
sbb
call
test
in
inc
imul
push
scas
pop
jnp
dec
out
and
mov
in
mov
stos
sbb
jecxz
push
inc
movsl
pop
or
movsl
lcall
fwait
sub
xchg
std
lods
mov
mov
or
xchg
les
mov
cmp
popf
mov
mov
popa
jecxz
sub
test
dec
mov
mov
push
cmp
sbb
test
and
jg
in
cmp
xchg
xor
jmp
lds
push
xor
or
pop
adc
roll
jmp
mov
mov
cmp
repnz
sbb
sbb
out
subb
jecxz
repnz
mov
rcrl
jo
ds
test
mov
push
sahf
nop
mov
out
sub
dec
in
cmp
aas
inc
hlt
add
mov
lret
mov
popf
dec
outsb
push
scas
mov
es
inc
mov
in
jo
dec
adc
sub
inc
arpl
ret
scas
pop
sub
xor
ja
jg
xlat
sub
shll
inc
ja
in
mov
xchg
outsl
and
xchg
inc
fiadds
std
mov
in
je
add
shrb
or
gs
mov
sub
jbe
sbbb
lds
hlt
jge
ror
aam
mov
fsubrp
mov
arpl
xor
addr16
leave
jecxz
mov
scas
aad
sbb
fisubrl
jno
popf
jnp
out
fldt
aas
or
movsl
sub
fwait
arpl
adc
repnz
xchg
clc
push
iret
aas
jge
or
aad
xchg
dec
jmp
bound
popf
pop
fnsave
lahf
fimull
inc
cld
jo
in
or
jbe
mov
loope
mov
call
sub
mov
push
dec
xor
adc
xor
add
mov
and
push
inc
call
mov
jo
les
mov
pop
jp
int3
mov
movsl
sub
cmpsb
cld
xor
out
fwait
jae
dec
lea
std
arpl
mov
xchg
mov
arpl
push
mov
fidivs
insb
jecxz
push
jns
lock
test
or
adc
inc
dec
ss
xchg
sbb
adc
in
and
cmp
xor
adc
shr
xor
pop
out
fiadds
insl
pop
cmc
in
or
fiadds
xchg
jne
push
mov
adc
and
mov
lods
lret
mov
push
enter
inc
out
sbb
jmp
cs
push
les
mov
pop
dec
fbstp
cwtl
inc
arpl
outsl
orb
cltd
mov
jns
dec
mov
xchg
cmp
std
sbb
add
repnz
lods
loope
adc
bound
xlat
loop
cmp
daa
pop
cmpsl
test
push
lods
push
popa
sbb
insl
push
insl
inc
movsb
inc
std
movsb
add
mov
jo
test
ljmp
movsl
pop
repnz
hlt
fdivl
cli
movsb
ja
xor
lret
mov
scas
jbe
rcll
push
pop
pop
lods
jle
aam
inc
pop
cmc
pop
push
ficomps
jb
cmpsb
xor
clc
out
pop
cld
pop
ljmp
sub
notb
sbb
xlat
test
xor
adc
movsb
sahf
adc
lcall
fs
xlat
push
fadds
or
pop
or
cltd
mov
cmp
add
fsubl
scas
imulb
or
dec
inc
mov
xchg
add
push
scas
add
xor
loope
dec
sbb
sbb
cmp
lcall
inc
mov
cmpsl
gs
test
pop
or
mov
lret
adc
push
insl
push
dec
xchg
mov
push
test
xchg
addr16
punpckhwd
pusha
lds
mov
repnz
clc
add
jns
imul
cs
push
xlat
dec
dec
mov
sbb
jge
fs
lret
negb
loop
cmp
inc
or
lret
mov
repnz
inc
aad
jae
out
sti
ss
cli
mov
mov
mov
pop
lret
xchg
push
dec
xor
add
arpl
push
sub
in
or
fstpt
rcl
xorl
and
inc
or
inc
sar
in
icebp
orb
test
adc
and
inc
hlt
je
mov
sub
mov
pop
mov
fptan
pushfw
push
xor
imul
jno
loop
add
in
cmp
sbb
inc
push
mov
inc
add
mov
sbb
scas
cmp
ret
jb
xchg
inc
xor
lods
stc
pushf
lret
push
and
enter
sub
bound
andl
and
pop
mov
dec
aaa
push
dec
cld
mov
dec
icebp
sub
cs
push
aaa
int3
inc
fildll
cmp
pop
nop
movd
or
loope
xchg
xchg
mov
aas
loope
dec
fs
push
inc
xor
push
out
mov
xchg
cld
into
push
loope
inc
jle
in
cmp
fldt
xchg
mov
mov
stc
and
lret
cmp
xchg
in
popa
sbb
addr16
fisttpll
addr16
in
in
repnz
sbb
dec
push
dec
nop
insl
mov
xchg
xlat
mov
cli
mov
xor
outsb
inc
sbb
pop
and
movsb
xor
or
and
jno
sbb
mov
xor
inc
stc
fisttpll
loop
repnz
dec
ret
in
cli
xor
dec
cmp
push
inc
add
adc
call
mov
int
mov
mov
loop
mov
inc
bound
in
fsubr
xor
jno
loope
scas
addr16
test
mov
push
inc
inc
add
push
fdivs
adc
pop
mov
test
push
lods
mov
pop
fwait
sbb
push
or
outsb
popa
cld
mov
add
jb
push
stc
adc
lods
adc
aam
pusha
jns
jle
sbb
mov
stc
test
xchg
cli
addb
cmp
inc
adc
jb
insl
mov
xchg
hlt
mov
adc
cmp
sbbb
push
mov
jl
test
lahf
movsl
dec
dec
mov
cld
adcb
push
jno
popf
stc
scas
insb
push
push
add
pop
jp
add
cwtd
inc
pop
pop
and
outsb
into
mov
notb
xchg
sahf
cmp
mov
or
and
mov
jnp
andl
bound
loopne
int3
jle
mov
pop
fwait
scas
daa
jno
add
repnz
test
push
pop
ja
es
fadds
dec
adc
xchg
outsb
add
pop
stc
test
push
std
int3
nop
aas
dec
xor
out
and
sbb
out
sub
aaa
in
cmpsb
mov
sub
lahf
fst
dec
popf
xchg
sbb
inc
or
dec
sti
dec
lods
mov
test
outsl
xchg
gs
jnp
popf
lods
lds
ret
fistpl
insb
and
int3
pop
dec
push
sub
xchg
mov
in
cmp
cmc
xchg
add
fs
rcr
lock
inc
mov
or
pop
sbb
mov
dec
scas
push
mov
mov
ret
sub
or
cmpb
sbb
hlt
jns
xor
in
jge
or
pop
mov
in
jle
pop
cmp
sub
mov
lock
lods
jg
mov
popa
arpl
pop
push
or
enter
sbbl
jno
adc
rolb
outsl
lret
es
out
lock
iret
push
mov
fcmovbe
xor
mov
jno
std
sub
popa
out
cmp
jbe
jo
dec
pop
ud2
std
and
cmpsl
add
push
xor
enter
test
ljmp
xor
pop
add
insl
jo
dec
inc
xlat
enter
clc
mov
sbb
mov
sub
push
mov
sub
sbb
xchg
pusha
mov
rclb
cmp
ret
or
pop
aad
pop
dec
lods
mov
push
mov
in
dec
adc
mov
mov
test
inc
and
gs
sub
and
adc
sub
and
lods
addb
fld
orl
sti
aas
into
cld
icebp
and
rclb
sbb
mov
cmc
push
ret
pop
xchg
dec
leave
adc
mov
xchg
xor
push
or
in
jo
das
jo
in
std
ret
rorl
stc
xorb
add
dec
scas
lock
or
adc
and
inc
inc
push
sbb
xor
sub
fs
fadd
fsts
ds
in
jle
test
jns
call
out
mov
xchg
dec
or
insb
popa
pop
mov
sub
xor
pop
shll
xchg
je
or
pop
xchg
inc
sub
inc
movsb
mov
mov
and
xchg
xchg
inc
fists
popa
ja
xchg
jb
popf
sbb
or
jg
scas
mov
shll
push
test
xchg
inc
stc
inc
into
lods
pop
mov
data16
jecxz
sbb
sbb
mov
frstor
fisubrs
pop
sub
or
push
dec
add
daa
dec
xchg
cmpsl
dec
dec
pop
and
dec
imulb
iret
pop
xchg
daa
orb
mov
mov
repz
hlt
test
hlt
cmp
mov
test
jecxz
imul
stos
jecxz
adc
dec
sti
repnz
sub
mov
call
or
inc
inc
enter
loope
xchg
xchg
pop
push
or
fwait
adc
mov
push
push
add
lahf
sbb
imul
xor
cli
dec
testb
mov
or
rol
sbb
rorb
fnsave
dec
cltd
or
cli
test
lds
jnp
add
shrb
mov
or
lret
loopne
mov
or
mov
xlat
out
fxch
fisttpl
inc
mov
push
dec
jb
sub
loop
xchg
out
xchg
daa
inc
mov
nop
jns
mov
jge
and
adc
out
cmpsl
rcrb
or
lea
in
xchg
sub
adc
js
xlat
mov
mov
aad
std
inc
and
mov
jae
pushf
sub
sahf
mov
sti
lret
out
test
dec
push
sbb
jle
push
insb
and
lds
movsl
push
mov
jge
and
adc
sub
push
inc
imul
jo
daa
jno
xor
imull
lret
loopne
jne
adc
cmp
mov
jno
mov
push
xlat
jp
jl
out
mov
pop
popl
lea
int3
rorl
or
sbb
fs
pop
aam
loop
jo
adc
lret
xchg
mov
je
gs
idivb
jle
push
loop
adcb
xchg
cwtl
add
leave
fmuls
out
jge
add
xchg
mov
repz
sbb
in
cmp
popa
in
pop
jl
mov
xchg
jnp
xor
or
popa
popf
fadds
pop
fwait
adc
cmp
cmp
subb
loopne
xchg
and
sub
cltd
pop
cmp
push
jmp
negb
test
or
mov
xchg
dec
insl
in
or
push
cmp
clc
or
jge
sub
stos
or
inc
sbb
in
add
jbe
xor
jmp
xchg
or
ljmp
jb
sub
mov
dec
test
push
xor
pop
pop
inc
mov
in
pop
push
int3
inc
movsb
mov
mov
in
iret
push
es
test
into
ja
cmpsl
pusha
mull
xchg
sbb
fimuls
lret
xor
icebp
dec
dec
sub
pushf
xchg
push
jno
push
sahf
mov
mov
xchg
jno
mov
arpl
shrb
sahf
repz
fiaddl
fbstp
sbb
sub
cmpb
stos
jne
dec
loope,pt
imul
negb
mov
add
inc
lcall
popa
mov
push
xchg
leave
ds
mull
test
jecxz
incb
les
call
into
call
add
fmull
add
cmp
clc
add
in
and
cmpsl
cmp
clc
mov
shrl
xchg
dec
shll
pop
out
push
cs
adc
cld
or
mov
sub
and
mov
ljmp
cli
and
shll
pop
pop
in
push
cmp
pop
shlb
out
ja
and
jg
dec
mov
das
jnp
pop
frstor
sbb
repz
adc
add
push
xor
inc
leave
rcll
mov
jne
push
out
lea
cmp
jnp
dec
jmp
lods
xor
popf
rcrl
vmwrite
mov
push
aad
aaa
sbbb
movsl
cmpb
fcomip
movsl
fiaddl
mov
cmp
mov
push
or
inc
pusha
ja
push
jecxz
mov
inc
xchg
pushf
xor
mov
stc
mov
xlat
cmpsl
push
mov
and
inc
ret
push
mov
repnz
in
push
out
inc
les
arpl
mov
or
cmp
filds
sbb
and
es
pop
mov
lret
jg
jg
lods
dec
cmp
scas
inc
mov
enter
or
lock
sbb
movsl
out
cmc
mov
sbb
cwtl
mov
mov
sbb
movsb
pop
divl
mov
test
or
fidivs
and
xor
cmp
cmp
pop
push
adc
dec
push
or
jle
jns
shlb
arpl
movsb
mov
sbb
mov
out
xor
jae
dec
sub
dec
mov
iret
icebp
daa
jp
pop
lahf
lds
add
or
fwait
dec
or
pushf
stos
test
pop
leave
mov
es
adc
lock
in
push
xchg
adc
fidivrl
mov
inc
jns
adc
inc
adc
popl
clc
stos
mov
jae
fcmovnbe
aaa
lea
jbe
in
push
sub
movsb
sahf
cmc
lock
add
fwait
push
xor
mov
mov
stc
dec
inc
mov
mov
cmpb
pop
or
push
mov
ror
xchg
sbb
or
jnp
test
push
mov
mov
mov
je
xchg
jb
pop
xor
xor
lock
je
and
pop
jnp,pt
addl
push
cmp
subl
xor
push
out
mov
fdivr
imul
lock
in
sub
aam
in
xor
mov
stos
les
inc
gs
scas
fs
das
sahf
cmp
dec
stos
jns
push
aad
jb
mov
stos
lea
cmp
add
pushf
rcl
xchg
xor
pop
xchg
test
xchg
aad
xchg
lret
outsl
push
pop
cmp
or
add
lods
xchg
mov
insl
xchg
mov
addr16
xor
and
lcall
arpl
mov
icebp
xchg
pop
stc
adc
aaa
inc
sbb
pop
bound
or
test
or
cmpsb
or
mov
push
adc
cmp
lahf
or
mov
pop
aas
xchg
pop
xor
sbb
sub
mov
outsl
pop
adc
sub
mov
insl
nop
mov
sbb
mov
out
sbb
in
jmp
aad
je
cmp
out
imul
mov
lock
repz
leave
sbb
or
rolb
add
imul
xchg
cmp
test
xor
fildll
sbbl
or
out
jp
addl
jmp
mov
lret
push
sub
imul
std
iret
pop
out
push
sbb
adc
sub
out
outsl
lock
pushf
pop
pushf
push
lcall
out
lock
in
adc
fwait
bnd
into
dec
add
loop
jb
inc
mov
mov
popa
pop
mov
das
sub
dec
jecxz
or
jl
sbb
push
adc
and
in
push
cld
cli
xchg
jp
hlt
push
jecxz
push
repnz
fcmovnbe
add
mov
mov
dec
stc
dec
test
jbe
pushf
adc
jb
pop
sbbl
jnp
sbb
loopne
stos
cmp
cwtl
sti
in
adc
or
mov
sbb
test
aam
out
andb
xchg
inc
xor
dec
add
lods
lods
mov
ret
mov
push
loope
sub
gs
imul
cmp
jbe
push
lea
pop
cmpsb
loope
add
mov
fwait
ljmp
xor
jp
jo
pop
cltd
sbb
jmp
ficompl
enter
ljmp
xchg
ret
or
cmpb
into
fcoml
mov
aas
pop
or
or
cmpsb
xchg
jmp
inc
jecxz
sbb
dec
dec
bound
aam
cli
pusha
stos
mov
int3
cmp
jecxz
inc
les
inc
xchg
pop
popl
sarb
shrl
inc
and
or
fwait
push
dec
adc
inc
dec
sbb
dec
xor
mov
lock
pushf
cltd
popa
dec
mov
icebp
mov
ss
cmp
into
lcall
xchg
mov
or
movsl
pop
xor
int3
xchg
mov
adcb
dec
mov
mov
rclb
hlt
push
sub
cmp
or
xchg
insl
lods
incl
outsl
sub
push
in
out
mov
mov
es
or
mov
lea
mov
sbb
fcmovb
jae
sub
jbe
in
mov
and
push
pop
xor
mov
repnz
rcll
push
jnp
fcmovnu
lock
cld
pop
xchg
jl
inc
scas
pop
shlb
pop
mov
pop
data16
filds
movsl
inc
mov
pop
push
setno
fisttpll
cs
pop
cld
clc
xchg
push
cmp
loopne
lods
mov
insl
mov
fists
dec
mov
pushf
xchg
clc
rclb
and
cmp
xchg
sbb
jne
addb
sub
sub
and
inc
test
cwtl
dec
mov
inc
imul
pushf
aaa
mov
movsl
sbb
push
inc
xchg
lods
test
or
sub
xchg
les
dec
jle
jecxz
mov
and
out
xor
pusha
out
stos
and
cmpl
and
mov
cmp
xor
mov
xor
inc
inc
mov
push
or
pop
xchg
mov
cs
jmp
or
or
and
xchg
ds
shrl
arpl
int
mov
adc
js
aam
fstps
mov
dec
xor
lea
clc
push
lcall
xchg
cmc
das
ret
roll
ljmp
lret
mov
iret
mov
inc
dec
inc
pop
movsl
lock
mov
mov
sarb
cmp
xor
mov
js
pop
xchg
sub
mov
cmp
inc
xor
push
arpl
xchg
inc
cmp
adc
in
mov
rcrb
sbb
mov
je
popa
sub
repnz
jns
jp
imul
dec
xor
push
out
cmp
push
cmp
icebp
jae
dec
sbb
nop
test
pop
xlat
lds
scas
or
fwait
jnp
add
movzwl
flds
sub
xchg
in
mov
popa
inc
adc
sub
repnz
push
or
xchg
jecxz
subb
jecxz
lcall
scas
add
cld
push
and
inc
in
xchg
cmp
test
push
adc
ret
movsl
mov
lea
sub
sub
inc
push
sbb
lea
hlt
shlb
shll
fisttpl
mov
mov
clc
xchg
inc
lret
mov
sub
dec
test
and
lods
adc
mov
sti
insb
push
jg
test
stos
mov
arpl
test
popa
into
lods
lock
sti
fstps
push
aam
cmp
in
icebp
jns
mov
dec
push
lret
xor
or
inc
loopne
cmp
jae
repnz
push
je
hlt
pop
add
push
shl
out
div
jecxz
lret
dec
xor
and
mov
cli
mov
push
dec
or
pop
rcrl
repz
xor
pop
adc
adc
xor
iret
mov
in
xchg
mov
sub
hlt
test
inc
or
mov
push
mul
aam
pop
sbb
lret
push
push
je
pushf
mov
cmp
mov
inc
cmpsb
mov
loopne
add
icebp
aaa
lcall
aaa
jne
add
push
xor
es
nop
xlat
out
xor
jl
in
mov
jnp
dec
pushf
jae
or
dec
and
mov
cmpl
push
sbb
cli
cltd
inc
push
iret
mov
adc
jg
adc
inc
and
clc
push
out
sbb
push
scas
shll
into
xor
aaa
cli
cwtl
sbb
cwtl
dec
and
mov
lret
scas
cmp
aaa
outsb
cmp
jecxz
aaa
and
cli
in
add
mov
sbb
xchg
jecxz
xchg
pop
jecxz
xchg
inc
daa
add
or
aam
scas
nop
push
clc
ffree
lods
in
mov
mov
adc
popa
dec
fcoml
imul
std
lret
cmp
imul
lds
sub
sub
add
xchg
add
sbb
lods
xor
ret
pop
mov
mov
mov
mov
insl
decl
xor
push
ss
cmc
push
repz
add
and
mov
pop
iret
clc
int3
adc
push
das
insl
test
movsb
adc
pop
push
movsb
fistpl
enter
fcomp
pop
imul
sbb
or
dec
rcr
or
in
aaa
loop
int
shll
cmp
fistpl
jno
testb
filds
cmp
xchg
lock
fbstp
lret
adc
gs
mov
shlb
mov
xor
cmp
pop
pop
pusha
sahf
sbb
notb
cld
sub
mov
les
fs
xchg
mov
dec
popa
addr16
out
xchg
xchg
dec
xchg
sarl
push
jae
jle
ror
cmpsl
and
cwtl
jnp
inc
ret
dec
popf
inc
inc
jg
or
fildll
ds
inc
enter
arpl
pop
lods
jb
mov
ss
jl
mov
mov
xor
fnstsw
std
cmp
pop
mov
cmpsl
mov
sar
cmpsb
add
in
rcrl
stc
jae,pn
std
scas
nop
jae
inc
mov
decl
outsb
out
jmp
jb
and
int3
inc
mov
sbb
mov
idivl
sarl
rcll
xor
shll
or
cmp
lahf
sub
ja
xor
adc
push
mov
pop
inc
sub
lret
into
mov
sbb
mov
push
test
mov
aas
xchg
imull
cwtl
sub
jae
mov
popf
xchg
pop
enter
cmpsl
push
mov
aam
adc
pandn
scas
lock
adc
mov
pop
fbld
sub
push
sub
pop
add
out
outsl
sub
div
cmp
xor
mov
cli
lds
popa
jmp
mov
mov
lret
mov
popf
cmp
push
cmp
movsl
adc
add
cmp
int
lea
sub
notb
mov
adcl
scas
stos
push
jl
mov
mov
pop
xlat
fidivrs
fisubs
sub
inc
stos
push
lock
js
or
jl
and
rcrl
mov
icebp
jecxz
test
xor
add
jb
les
cmp
ret
jg
lods
mov
or
pop
dec
loope
sahf
adc
xchg
pop
pop
and
mov
xor
fsts
jg
ds
jb
and
push
xor
sub
out
cld
xor
rclb
jge
xchg
sbbb
rolb
aaa
dec
and
mov
lret
pop
test
push
cmpsl
cmp
dec
rorb
dec
addl
lock
cmp
inc
std
lods
lcall
jg
push
fwait
mov
xchg
pminsw
repz
inc
jl
aas
mov
mov
movl
pop
js
xchg
insb
mov
dec
push
rorl
mov
enter
imul
js
clc
pop
leave
sbb
mov
fst
cmpsl
orl
pop
sbb
push
mov
dec
push
adc
daa
roll
daa
or
cs
pop
rclb
stos
outsl
aam
std
ret
add
mov
push
sub
mov
mov
cmp
test
cmpsl
aas
xor
js
cmp
or
addr16
lret
mov
les
nop
ja
adc
ret
pop
lds
jno
pop
and
jnp
jecxz
pusha
cmp
add
sub
or
nop
mov
inc
cltd
aam
mov
jge
aam
push
insb
int
hlt
fisttps
add
push
lahf
fwait
scas
mov
sbb
pop
in
aam
inc
out
mov
jmp
loop
and
jl
xorb
into
inc
or
dec
lahf
inc
cmpl
adc
data16
push
push
push
or
xor
xchg
in
setb
push
sar
dec
js
imul
add
xchg
inc
mov
popa
jmp
gs
dec
and
push
push
cmpsl
fidivrl
ds
xlat
adc
inc
and
or
outsl
daa
jb
xlat
pop
mov
add
or
sub
sub
adc
xor
aaa
mov
fs
sbb
les
add
loope
shll
mov
adc
push
jl
push
xor
and
jnp
inc
jmp
jle
xlat
out
cmp
adc
and
xor
push
xchg
jae
inc
lcall
cmp
ror
cmp
icebp
add
negb
lds
sarb
lds
pop
push
push
jo
cmp
pop
out
inc
in
lods
sub
mov
test
out
fsub
mov
push
sub
movsl
cmp
pop
inc
adcl
in
sub
gs
mov
add
insl
fistl
js
js
rclb
push
or
adc
fldt
mov
pop
aaa
pop
lods
push
jno
movsl
repz
movsl
pop
dec
das
lods
push
es
xchg
insl
lret
mov
data16
and
sbb
test
ret
int
sahf
sbb
popf
cmp
mov
mov
jne
call
scas
push
test
mov
fbstp
pop
ljmp
xor
in
jb
pop
aas
cmpsb
nop
dec
lret
inc
push
enter
std
push
cmp
or
dec
adc
or
xchg
fldenv
push
cmc
push
push
loopne
push
mov
ret
es
mov
loope
fstpt
mov
pop
push
stc
lock
jp
in
jl
mov
xor
mov
cld
movsl
xor
test
fimull
mov
stos
lret
and
mov
fcmovu
mov
and
mov
out
call
outsb
jb
mov
leave
jne
lret
mov
fldt
mov
mov
inc
pop
cmp
dec
lods
mov
sub
in
cmp
in
inc
sbb
fstl
ljmp
jns
mov
sbbl
inc
sti
mov
idivb
xchg
dec
and
xchg
fidivs
out
add
pop
xchg
imul
dec
out
fld
cmpsb
push
ss
xchg
cmc
scas
fsubl
jmp
jmp
and
shrl
ficoml
loopne
mov
test
roll
sarb
mov
rorb
fs
imul
rclb
outsb
addl
adc
fildl
xchg
gs
bound
jne
inc
inc
sbb
shrb
and
push
xchg
lods
cmp
or
inc
mov
fs
out
xor
adc
loop
pop
pusha
repnz
jno
sbb
push
push
jae
orb
sub
pushf
xchg
mov
test
mov
cld
ret
mov
and
hlt
movsb
pop
je
cmp
ss
scas
in
pop
int
push
add
xchg
in
add
frstor
fisubrl
dec
notb
push
jmp
xchg
adc
jno
push
nop
sub
push
cmc
cmp
sub
jmp
inc
data16
out
push
std
pop
repnz
das
insl
lds
lea
loopne
movsb
xor
lock
adc
aas
jae
mov
push
jae
stos
aam
sti
jnp
xor
push
mov
sub
jg
mov
inc
out
call
inc
es
scas
in
arpl
in
inc
call
out
add
rolb
ss
push
and
xor
adc
out
scas
push
and
dec
pop
jp
xchg
sub
testl
ret
daa
sbb
js
push
cmp
mov
out
dec
pop
ja
pushf
xor
mov
cmp
mov
pop
jno
cmp
mov
xor
xchg
mov
inc
mov
pop
nop
popf
xlat
insl
por
fdivrs
arpl
in
rclb
std
push
dec
and
call
outsl
jp
dec
xor
dec
outsb
andl
cmp
scas
ja
mov
out
test
cmp
pop
outsb
push
cmpsl
sbb
push
gs
or
pushw
mov
sub
adcb
adc
push
xor
nop
inc
leave
cmp
xchg
scas
push
lret
sbb
pusha
mov
push
push
jge
cmp
pop
aam
jmp
imul
sub
sbb
cmp
xchg
adc
pop
mov
and
fs
lret
xor
out
fldlg2
aam
int3
stc
loop
divb
or
fwait
lds
daa
jno
pop
mov
mov
mov
adc
sub
pop
push
xor
inc
xchg
or
adc
ljmp
lods
loopne
push
jnp
dec
mov
add
push
cmp
iret
rorl
jmp
movsl
cli
gs
testl
xchg
inc
adc
cld
cwtl
push
jnp
xchg
fistps
pop
int
mov
repz
inc
scas
into
push
xor
mov
adc
adc
xchg
popf
in
mov
call
dec
mov
jbe
insb
movsl
mov
pop
insl
mov
bnd
outsb
xor
cmpsl
adc
iret
fisubl
bound
scas
dec
lods
test
popa
mov
pop
rorb
push
mov
test
inc
cmp
mov
enter
push
sbb
push
dec
stos
ret
sbb
test
loope
pop
jne
ret
cli
fldenv
sub
inc
adc
cmp
xlat
test
das
push
jae
or
push
and
push
xchg
aas
lock
mov
pop
mov
sub
jg
cs
mov
xor
test
xchg
sahf
mov
jp
mov
test
push
push
pop
cmp
pop
inc
xchg
aas
or
and
sub
repnz
push
hlt
sub
popf
addr16
sub
sarl
xchg
add
adc
lahf
jl
inc
test
mov
repnz
add
negb
ret
and
cmc
dec
out
jno
jmp
lods
and
pop
mov
je
jmp
sbb
int
push
and
ret
mov
arpl
sbb
movsw
arpl
mov
adc
xchg
xchg
or
popf
add
mov
or
sarl
lahf
mov
push
movsl
dec
test
cmp
clc
mov
aam
xchg
mov
addr16
es
jo
add
dec
fsubrl
jno
inc
test
mov
popf
je
xor
dec
push
fs
stc
adc
outsl
push
enter
sub
xchg
and
test
mov
jle
ret
sahf
enter
or
xchg
jmp
cltd
data16
adc
negl
fdivrs
fiaddl
in
pop
mov
orb
push
lea
outsb
cmpsl
std
dec
sbb
push
and
int
dec
orl
dec
insl
lds
shrl
out
jb
dec
mov
adc
lods
jg
mov
ret
sbb
jo,pt
bound
xchg
mov
outsl
cmp
xor
ljmp
imul
adc
xlat
pop
jg
dec
mov
mov
gs
popa
push
xlat
vrsqrtps
mov
push
lahf
push
lcall
add
mov
xchg
dec
xor
pop
xor
stos
cltd
mov
lods
loopne
add
push
dec
or
imul
mov
pop
cwtl
in
loop
adc
jl
aaa
stos
outsl
cld
sbb
scas
stc
lock
sub
xchg
add
pusha
mov
push
in
imul
inc
pop
xchg
mov
out
out
arpl
push
shl
jmp
inc
pop
sbb
ficomps
lfs
and
jle
je
sbb
int3
mov
test
ja
push
out
adcl
pop
pop
fs
cs
popa
add
test
outsb
pusha
rol
movsb
int
mov
push
fildl
loopne
xor
enter
std
xchg
test
scas
fstp
push
test
cmp
sbb
data16
pusha
movsl
or
inc
fidivrs
test
sar
add
mov
inc
insb
pop
cmpsl
nop
add
aad
inc
sbb
aam
jno
xor
fcomps
mov
clc
movsl
mov
jp
sub
dec
xchg
and
repz
.byte
.byte
sahf
push
sbb
mov
add
push
push
cmp
sbbb
aad
jb
sbb
pop
jg
lds
lds
push
mov
es
test
mov
div
and
inc
inc
push
cmp
test
and
mov
pop
sub
sbb
xor
push
pop
mov
std
fstl
jne
inc
imul
add
mov
btr
shrl
xlat
les
mov
sub
rclb
sti
bound
inc
sbb
push
push
mov
jo
and
dec
in
or
ret
das
lods
sub
mov
sbb
call
arpl
sbbb
sarl
je
dec
push
cmc
das
adc
sbb
sbb
jbe
pop
lahf
aad
dec
nop
imul
testb
sbbl
and
lcall
push
outsl
aas
enter
std
jp
adc
add
popaw
sub
inc
outsb
jns
add
cmp
sti
pusha
push
inc
push
sbb
mov
cli
cmpb
sub
adc
cltd
push
insb
inc
xor
fnstsw
jne
sbb
jle
cmp
sbb
cmpsb
jns
and
loope
cmp
and
jae
sbb
jb
jl
mov
mulb
jle,pn
mov
aam
sti
xor
cmp
lock
das
mov
test
sub
jns
rcrb
test
subl
mov
enter
lahf
cmp
inc
test
mov
and
clc
icebp
int
sbbb
jne
jae
pop
clc
xchg
inc
lahf
shl
xchg
push
cmp
jmp
call
cmp
out
jmp
sbb
dec
pop
cmp
push
js
int
push
push
mov
cmpsb
lods
pop
sbb
cltd
addr16
mov
out
jne
jg
sbb
push
test
xchg
adc
imul
cwtl
adc
cmp
ds
sbb
mov
inc
mov
ja
outsb
cmp
fwait
xorl
pop
dec
push
pop
adc
mov
pop
int3
and
out
pop
pop
clc
mov
sar
jns
push
pop
mov
in
fdivl
adc
adc
dec
push
push
xchg
cwtl
fmull
nop
adc
pop
iret
mov
lea
daa
cld
out
call
lods
xor
ss
mov
add
cmp
and
dec
mov
add
mov
cmp
inc
mov
pop
mov
jl
adc
ljmp
std
sbb
jle
les
sbb
pop
xorb
sbbb
repnz
les
mov
mov
inc
movsl
inc
inc
sub
xchg
xchg
or
cmpsl
das
nop
pop
inc
outsl
sub
packsswb
pop
add
fsubs
mov
sbb
pushf
xchg
add
mov
mov
push
or
mov
stos
dec
inc
subl
faddl
fisubs
adc
lods
sbb
jp
or
lahf
jae
xor
add
push
mov
jb
jmp
cmp
adc
cs
push
ljmp
out
mov
nop
fwait
or
cli
repnz
push
fadd
or
xchg
mov
dec
inc
push
adc
jecxz
out
das
ret
outsl
cmc
sub
shll
mov
and
ror
dec
xchg
inc
lret
lcall
adc
pop
adc
mov
nop
push
je
dec
adc
jmp
adc
or
mov
mov
xor
nop
jmp
cmpsl
popa
notl
sub
aaa
dec
shl
jnp
int3
jg
fld
in
pop
add
xchg
cmp
gs
xchg
sub
sub
fcmovu
inc
call
nop
push
mov
aad
mov
scas
cmp
dec
fisttpl
push
xor
and
sub
lahf
daa
lahf
xchg
xchg
push
fdiv
sar
fadds
lret
lahf
addl
ljmp
fndisi(8087
mov
add
fdivrs
mov
mov
pop
stos
dec
in
sub
xchg
mov
lahf
pop
ljmp
in
ljmp
shrl
ljmp
adc
xchg
repz
scas
nop
ficoms
dec
clc
data16
movsl
inc
add
xchg
sub
and
sbb
inc
aas
sbb
jmp
add
xor
adc
stos
sahf
xchg
rcrl
or
repnz
pusha
jmp
rcll
mov
aad
stc
sbb
ds
lea
and
cmp
dec
push
push
repnz
inc
aaa
dec
out
jbe
lea
cmp
cmp
js
hlt
aam
ja
pop
jl
ror
mov
movsl
dec
inc
lcall
fcmove
lods
xchg
xchg
test
jbe
or
stos
xchg
sti
cld
ljmp
loope
dec
stos
jl
push
incb
cmp
out
call
daa
pop
xor
jae
js
push
lods
mov
ret
in
mov
cwtl
xlat
and
sbb
push
adc
sbb
xchg
aam
jl
mov
pmulhw
xor
adc
outsl
mov
repnz
lret
push
cmp
inc
mov
mov
jns
repz
push
dec
add
inc
push
lds
aaa
inc
ss
test
push
jecxz
push
aaa
mov
xchg
fsub
cmp
scas
sub
bound
sbbb
insb
adc
iret
daa
inc
stc
sbb
ja
jl
cmp
das
mov
cmp
pop
pusha
pop
xor
cmp
mov
outsl
repz
xchg
add
and
dec
lret
mov
cmp
push
cmp
and
inc
sbb
in
xchg
pop
xchg
xor
mov
inc
cmp
sub
mov
pusha
lds
out
cltd
js
in
stc
pop
insb
hlt
xorl
add
xor
dec
pop
jp
jle
pop
jo
push
rolb
outsl
stos
add
pushf
cmp
das
sbb
adc
popl
popf
xor
mov
fwait
mov
lahf
xchg
cmp
clc
mov
ret
pop
out
loope
or
cmp
nop
movups
clc
cmp
pusha
jmp
push
outsb
mov
mov
idivb
sbb
jbe
xor
sbb
and
movsl
pop
push
add
aas
aad
adc
add
fwait
xor
fmulp
add
test
dec
rorb
mov
and
mov
cmp
jns
mov
sbb
xchg
in
dec
xlat
adc
daa
mov
test
mov
out
and
ret
mov
addr16
inc
pusha
pushf
aas
xorl
test
xor
imul
out
sub
push
push
mov
scas
gs
into
jns
adc
into
jg
sbbl
pop
mov
out
push
mov
les
xchg
movsl
pop
daa
mov
dec
leave
add
ljmp
bound
xchg
mov
xchg
sub
test
jp
mov
and
pushf
mov
and
fsubrs
mov
daa
dec
cmp
pop
.byte
.byte
.byte
and
inc
mov
stos
lods
daa
cmpsl
mov
adc
fmuls
mov
or
aaa
sbb
mov
mov
sub
adc
add
xchg
aaa
push
fsubr
mov
notl
imul
cmpb
repz
lret
jne
jmp
xor
dec
or
arpl
or
test
mov
movsb
loope
sub
test
mov
mov
jns
fisttps
pop
adc
jge
jo
out
jne
lcall
in
dec
incb
sbbb
sub
adc
adc
insl
arpl
sub
add
or
and
cmpsl
dec
pop
out
xchg
pop
pushf
outsl
mov
mov
daa
and
shl
ret
sbb
and
mov
loope
dec
mov
or
fstl
loopne
sbb
scas
inc
push
xor
lahf
xabort
inc
lret
mov
pop
jno
push
push
popa
rorb
dec
mov
andb
jge
test
fisttpl
dec
pop
lea
hlt
push
fs
xor
adc
sbb
into
call
out
lea
push
std
or
arpl
movsb
add
and
test
mov
adc
mov
rolb
inc
push
dec
lcall
stos
pop
push
or
pop
mov
mov
pop
in
int
fidivs
sub
jg
mov
sbb
fsub
inc
jp
icebp
inc
adc
inc
inc
idiv
insb
mov
pop
out
out
pop
and
imul
inc
cld
dec
push
hlt
or
test
sbb
bnd
jp
pop
fsub
inc
ret
or
push
je
sbb
xor
push
or
std
fistps
xchg
xor
mov
adc
outsl
fdivrl
fs
pushf
shlb
aad
sub
lret
pop
outsb
inc
popa
xor
xlat
dec
addr16
mov
inc
and
lods
or
insl
popf
pop
cmp
in
jmp
jmp
ljmp
cld
lret
data16
scas
dec
shrb
mov
out
arpl
loope
js
mov
leave
jb
in
jnp
pop
loope
fcompl
push
dec
push
outsb
lock
xchg
jge
out
inc
in
jl
cmp
subl
fcoms
xor
popa
sub
dec
or
sahf
in
mov
jl
es
nop
data16
mov
pop
dec
rcll
fisubs
jp
xor
sub
push
mov
outsl
mov
sub
test
xor
xchg
mov
mov
add
rclb
in
mov
sbb
mov
jbe
mov
insl
push
sub
hlt
aas
sbb
pop
pop
mov
mov
lahf
pop
add
mov
mov
movsl
lock
xchg
mov
xlat
arpl
and
call
adc
inc
pushf
loope
lret
add
gs
pop
ja
sbb
int3
out
mov
aaa
adc
fdivp
push
aad
jmp
fstp
in
les
pop
cli
sahf
xchg
fcmovbe
push
sub
jecxz,pn
shr
mov
in
es
movsl
jl
es
mov
mov
dec
daa
clc
rcr
sub
dec
xlat
pop
mov
fildll
cld
sub
in
jp
repz
je
ss
lcall
sbb
outsl
inc
test
in
add
es
xchg
out
add
sub
sub
add
sbb
dec
push
ljmp
nop
pop
lcall
cmp
cmp
popa
or
jg
pop
movsb
mov
cmpl
cmp
in
jno
addr16
pop
mov
sbb
xor
cmpsb
or
leave
inc
std
mov
mov
mov
and
rcll
xor
sub
pop
mov
lret
cmp
jb
add
lahf
add
sar
cmp
pop
or
sti
cld
jl
inc
mov
movsb
push
iret
xchg
xor
or
pop
jge
push
sub
rcrb
cmp
and
daa
inc
mov
idivl
lcall
mov
aaa
sarb
xlat
sbb
cmp
pusha
push
sbb
aad
out
pushf
inc
mov
rcl
inc
and
cmp
popf
mov
mov
mov
test
in
mov
jecxz
jecxz
and
inc
fists
jmp
and
jp
sahf
adc
add
repnz
and
mov
sbb
mov
mov
in
push
sti
xor
ss
push
les
push
mulb
fdivl
dec
lds
icebp
xor
movsb
ja
jmp
rorl
cmp
testl
lods
aam
cmpsb
mov
lahf
cli
iret
mov
push
jbe
add
int
push
into
mov
sahf
ret
cmp
pop
test
pushf
push
sub
lds
cmp
cmp
and
sbb
xchg
inc
push
mov
dec
adc
jne
shlb
dec
test
mov
inc
aas
mov
loop
aam
mov
push
sub
push
mov
jl
xlat
pop
fwait
or
int3
les
js
fwait
leave
aam
adc
shrl
in
aas
test
outsl
sti
cmp
mov
mov
cmp
cmp
and
stc
punpckldq
lds
addl
jbe
and
mov
leave
adc
cmp
leave
dec
in
mov
loope
lods
and
andl
rorl
xchg
xchg
xchg
sub
jbe
mov
fs
in
dec
sub
jle
sub
lret
mov
jl
daa
pusha
es
lods
stos
push
and
inc
lea
cli
iret
ficoms
push
outsl
push
sbb
sbb
dec
jb
jmp
xor
mov
lahf
leave
lahf
shll
mov
pop
scas
mov
mov
aad
lods
sub
jbe
fnstcw
lret
outsb
push
xchg
add
jmp
xor
jno
add
adc
fwait
push
fs
int3
imul
jnp
jb
xchg
nop
stos
movsb
and
inc
xor
lahf
mov
into
aad
mov
fimull
mov
cli
pop
add
leave
jbe
cmpsb
xchg
nop
sub
push
pop
imul
mov
rcrb
push
pop
hlt
sub
hlt
fidivrl
imul
inc
mov
jge
add
dec
das
jo
imul
repnz
shrl
push
mov
imul
cmp
pop
xchg
add
inc
movsl
sbb
fistpll
dec
out
mov
jmp
roll
stos
xchg
sub
shll
call
inc
leave
call
adc
aam
movsb
in
jne
and
test
xor
push
xor
lret
repz
mov
int
lss
cmc
fs
popf
lods
es
push
add
hlt
fstpl
pop
clc
push
out
hlt
sbb
in
pop
pextrw
jl
icebp
insb
das
dec
push
sub
xor
repnz
arpl
shl
xlat
ret
sub
sub
repz
lds
and
fmuls
and
xchg
insl
push
and
ljmp
mov
popf
jns
and
int3
inc
or
or
ljmp
pop
ja
mov
cmc
inc
cmp
or
cwtl
lret
test
mov
pop
cmp
divb
lods
ja
adc
stos
in
xlat
and
push
inc
xchg
push
outsl
adc
jmp
cs
in
out
aad
in
popa
or
push
cmp
stos
sbb
sbb
add
push
or
dec
mov
loopne
jmp
xchg
and
and
jno
stc
test
jbe
add
ja
out
jecxz
es
add
jge
jne
and
nop
notl
outsb
jl
je
pop
ljmp
lock
jae
sbb
inc
and
and
pop
push
mov
cmp
scas
inc
adc
inc
int3
push
repz
out
cmc
and
mov
popa
adc
adc
lcall
shrl
cltd
nopl
aas
push
ret
sbb
xchg
movsl
add
popa
sub
pop
and
stc
movsb
bound
cmpsl
jecxz
mov
mov
or
jnp
and
jns
loopne
cwtl
cmp
aam
pusha
cmpsb
add
mov
in
xchg
leave
shrb
mov
bnd
mov
push
aas
int
dec
push
cltd
dec
out
decb
mov
push
jge
mov
pop
mov
test
insl
arpl
test
leave
mov
jns
filds
push
mov
mov
mov
mov
xchg
xor
pop
fwait
push
inc
adc
ss
aas
mov
loop
and
push
cmp
test
test
repnz
mov
xor
out
repz
sbb
sub
push
scas
mov
js
iret
and
in
and
or
fs
ja
cmp
jmp
xor
scas
mov
hlt
cmc
xchg
add
push
mov
das
mov
pushl
stc
fs
cmp
mov
mov
jecxz
add
in
mov
in
stos
cltd
push
push
inc
sti
popa
cmp
jb
pop
or
pop
add
fdivrs
add
adc
mull
jns
pop
dec
das
bound
mov
adc
je
add
int3
js
test
xor
inc
lods
pop
sub
stos
lods
clc
pop
lret
sbb
arpl
clc
insl
idivl
loopne
cmp
sbb
imul
push
and
push
dec
mov
mov
adc
push
pushw
mov
jmp
jns
pop
push
mov
imul
nop
fisubs
scas
dec
jmp
mov
jns
cmc
mov
mov
mov
lds
lods
in
cmc
inc
lcall
loopne
aas
pusha
or
mov
xor
sbb
or
mov
mov
test
inc
mov
add
inc
mov
jns,pt
enter
lret
mov
cmp
pushf
inc
lods
popf
test
jl
jnp
mov
xchg
add
std
in
xchg
xor
jg
or
pusha
movsl
and
push
imul
mov
pop
std
sub
xor
mov
out
inc
and
xchg
lahf
shr
andl
adc
mov
iret
and
fistpll
or
add
dec
pop
sub
out
sti
xchg
mov
fidivs
xchg
or
cld
inc
mov
jl
cmpsl
daa
inc
bound
sbb
cmp
xor
sti
push
movsb
and
das
add
cmp
fs
cmpsb
and
add
mov
sbb
fdivl
les
hlt
pop
out
lea
pop
jg
mov
mov
add
into
pop
test
aaa
sub
repz
push
xor
enter
loop
xor
push
ret
adc
divl
jl
imul
int
ret
repz
xchg
fsubs
inc
cmpsl
loope
jp
and
mov
cld
fstp
fdivl
mov
mov
daa
lret
in
imul
cmp
out
push
outsl
mov
jg
jne
sub
ds
adc
std
xchg
mov
cmp
sbb
mov
cmpsb
pop
dec
pushf
inc
xorb
push
stos
pusha
scas
jmp
repnz
out
lock
adc
jnp
aam
call
push
cwtl
hlt
lock
xor
arpl
popf
mov
jns
xchg
js
inc
cltd
js
or
loopne
mov
add
lret
jp
xor
cmp
leave
mov
jbe
adc
sbb
pop
xor
mov
test
stc
pop
dec
push
mov
pushf
mov
rorl
dec
mov
push
sub
andps
cmp
and
xchg
in
pop
into
orb
pop
fisttpl
mov
fldt
les
sbb
mov
inc
add
pop
mov
xor
cmp
insl
sahf
jge
outsb
add
pop
pop
lods
xlat
inc
adc
ret
or
lock
outsl
cmp
mov
xchg
jp
flds
js
dec
fistl
movsl
fmuls
add
cmp
data16
xor
push
ds
es
adc
xlat
sbb
mov
clc
adc
mov
pop
cmp
nop
lcall
js
add
push
inc
add
mov
in
mov
or
inc
stc
mov
fmuls
ret
sbb
outsb
mov
outsb
xchg
lcall
ret
and
mov
adc
inc
nop
cwtl
rcrl
or
jmp
adcl
addr16
clc
ljmp
inc
jno
pop
mov
test
xor
arpl
cld
xlat
cmc
cmc
loopne
add
and
rol
add
xorb
and
subb
loope
jb
pop
pcmpgtd
aaa
int3
outsl
and
xor
loopne
inc
jmp
mov
add
pop
imul
std
jp
es
mov
popf
add
idivb
pop
aam
inc
ret
ss
add
xor
mov
aaa
sbb
jb
pop
mov
dec
outsb
in
lock
push
or
mov
cmpl
cltd
ret
sbb
in
jp
sbb
jae
ljmp
cmp
push
adc
std
push
sub
jg
push
mov
inc
sbb
lcall
jae
add
pop
sbb
mov
enter
adc
mov
xchg
push
test
mov
movsb
std
pop
leave
lock
push
jp
fcmovnb
and
out
lahf
bound
mov
imul
jns
in
movsb
sub
pop
pop
inc
das
mov
dec
or
aaa
cwtl
mov
jmp
arpl
add
shll
lds
addr16
or
cmpsl
sbb
sub
mov
adc
jmp
adc
jmp
mov
inc
pop
jo
mov
mov
adc
pop
fnstsw
ror
shl
mov
push
test
or
in
jbe
push
ss
dec
push
pop
in
xchg
jbe
insl
inc
repnz
adc
movsb
push
outsb
mov
ss
pusha
and
push
cmc
out
subl
cs
in
sbb
cmp
jne
mov
jmp
ss
mov
add
in
pop
xlat
imul
fstpl
enter
fisttpl
add
mov
inc
loopne
pop
mov
mov
inc
pop
lret
and
std
out
push
repz
orb
inc
das
or
movsb
addr16
iret
ja
sti
lods
xchg
sbb
out
mov
xlat
negb
jecxz
ja
cmc
outsb
jge
xchg
iret
les
lock
xchg
test
ret
pop
sbb
push
xlat
xchg
repnz
push
inc
lret
lock
inc
inc
push
pop
test
popf
out
and
aad
sub
cld
jmp
xor
jmp
sbb
ljmp
popf
and
jno
jnp
ret
mov
ret
fists
push
inc
sbb
js
mov
mov
jecxz
mov
jg
fld1
movsl
sub
adc
popa
dec
rolb
add
adc
fdivl
cmp
fmull
push
call
fldenv
jp
addr16
mov
and
std
cli
lods
dec
stc
pop
test
jmp
call
jbe
jecxz
jns
movsl
pop
pop
jns
and
enter
fcmovb
andl
push
stos
ret
div
push
stos
into
xchg
cs
sub
lods
lock
data16
leave
fwait
inc
mov
or
add
adc
test
lods
lret
ss
mov
mov
or
and
sbb
xchg
daa
negb
pusha
sbb
xchg
pop
ljmp
js
or
movl
popf
data16
addr16
xor
jle
bound
ljmp
in
adc
andl
mov
fpatan
ds
lock
gs
test
sahf
fistpl
leave
movsl
jns
jp
sbb
in
mov
add
pop
repz
xor
xchg
in
popa
fisubrl
pop
aas
mov
sub
push
jns
mov
xor
inc
adc
inc
aad
cmp
test
stc
shll
jnp
jl
shrl
adc
sub
mov
mov
in
std
lcall
mov
addr16
arpl
fs
data16
pop
sbb
xlat
xchg
dec
mov
sbb
or
push
jbe
sub
jmp
xchg
add
xchg
and
xchg
push
pop
call
adc
leave
pop
fdivrl
or
imul
and
in
insb
ss
mov
push
mov
cmp
ds
cmp
add
jle
mov
movsb
mov
xchg
pop
outsl
mov
ja
push
popl
lods
sub
repnz
inc
stos
push
test
ss
jl
icebp
notb
push
lds
mov
fdivrl
pushf
hlt
xchg
test
push
cmpsl
cmp
and
push
cmp
fwait
xchg
outsl
mov
testl
es
xchg
enter
mov
scas
dec
cmc
mov
push
fdivp
test
add
test
push
push
dec
adc
pop
add
lods
lock
jne
fiaddl
push
out
xlat
mov
int
pop
je
mov
sbb
shlb
insl
mov
pop
out
and
add
push
sub
xor
cs
pop
ja
stc
ljmp
nop
out
inc
jbe
lahf
mov
jl
das
es
popa
test
test
xchg
rcrb
mov
jge
jg
insb
push
das
lods
cmp
outsb
mov
mov
insb
sub
mov
mov
repz
aaa
sub
adc
dec
es
push
inc
and
iret
or
sub
inc
das
push
jmp
xchg
cmp
fidivl
sbb
xchg
in
sbb
cli
arpl
mov
aaa
arpl
jecxz
in
sbb
test
fcompp
and
mov
nop
pop
jnp
fadds
dec
lcall
imul
sbb
mov
loop
sub
jbe
push
lea
aas
scas
pop
or
xchg
js
xchg
dec
pop
adc
dec
xchg
iret
in
repz
inc
inc
sub
inc
sub
scas
outsb
rcll
sbb
imul
dec
into
pop
jp
push
ljmp
ror
inc
in
xchg
roll
cmpsl
loope
adc
lcall
jno
test
jle
xchg
or
int
push
scas
or
insb
fnsave
lock
ficoms
mov
adc
fs
enter
pop
adc
mov
cmc
jmp
cmp
add
mov
and
bound
cmc
sahf
call
stos
xchg
test
adc
icebp
aaa
inc
sub
ret
cmp
sbb
movd
mov
test
push
cmp
cmp
mov
test
lret
jge
xor
data16
stos
int3
stos
push
rcrb
pushf
shrb
inc
push
xchg
inc
aad
insl
shlb
loop
mov
fnstsw
cmpsl
or
push
fs
in
inc
jl
ljmp
into
repnz
arpl
xchg
dec
fnstsw
scas
pop
mov
pop
fidivs
lods
lock
or
mov
inc
shr
stc
test
sub
and
xor
scas
lahf
sti
test
shll
dec
rorl
jo
push
nop
popa
or
push
mov
cmpsb
or
pop
xchg
mov
xchg
pusha
dec
and
push
repnz
push
sub
pop
dec
dec
sti
pop
xchg
pop
pop
xchg
and
and
sbb
sbb
mov
sub
daa
sbb
inc
xchg
pop
gs
pop
sahf
out
aad
xchg
dec
das
std
iret
push
iret
add
nop
xchg
imul
dec
jecxz
dec
shrb
test
pushf
cmp
pop
sahf
mov
in
inc
cmpsb
in
jb
dec
aaa
cs
es
xor
cmp
stos
adc
pop
jp
out
inc
mov
scas
rcrl
test
repnz
movsl
scas
repz
mov
call
or
and
sti
aas
das
les
xlat
add
inc
fcmovbe
hlt
addr16
mov
inc
jne
dec
inc
test
pop
add
in
je
mov
jle
rcrb
out
inc
js
nop
nop
mov
jg
sub
cmp
xchg
cmp
push
push
push
xlat
cmpsl
roll
ret
cmp
aas
mov
lods
nop
mov
rcrl
or
push
bound
and
lcall
adc
push
push
sbb
mov
ljmp
jl
mov
sbb
cmp
inc
jns
lcall
xchg
and
pop
and
or
xchg
push
lret
sub
arpl
mov
gs
mov
xchg
orl
sbb
nop
mov
sbb
lahf
push
mov
popa
scas
loopne
mov
jne
jg
dec
gs
je
out
pop
xor
out
jo
jmp
xchg
pop
data16
in
fwait
cli
stc
and
loope
xchg
cmpsl
js
cld
fldt
xor
insl
dec
dec
mov
not
pop
jg
ds
push
lcall
lods
mov
out
loope
push
out
sub
or
lods
leave
sub
adc
mov
mov
inc
aas
inc
xor
into
mov
daa
testl
and
cmp
dec
pop
mov
mov
lea
adc
dec
lcall
nop
filds
mov
jmp
fdivrs
fs
xor
mov
test
cmpsb
sub
mov
jg
loopne
push
lods
stos
xchg
add
push
sbb
stos
mov
gs
pop
imul
js
push
pop
dec
mov
add
sbb
mov
sub
lods
aaa
inc
in
loope
in
ficomps
jnp
push
mov
arpl
mov
sbb
sbb
testl
mov
or
stos
pop
xchg
pop
sahf
leave
fmul
sti
add
mov
cmp
push
sub
jnp
movsb
adc
pushf
jl
fistl
mov
adc
fimuls
add
outsb
je
lods
mov
out
mov
movsl
idivb
jne
or
mov
rcl
je
and
sbb
test
jmp
imul
dec
addr16
stc
xchg
fsubrl
xor
sbbl
cmpsb
fcoms
pop
mov
lock
mov
sbb
das
or
out
xchg
jno
adc
repnz
xor
sti
sbb
push
jns
push
add
mov
faddl
xlat
inc
int
inc
mov
mov
jp
push
mov
sarl
arpl
add
nop
mov
enter
sbb
dec
lock
jecxz
sbb
dec
sbb
shl
idivb
push
pop
jne
lret
inc
mov
lods
jle
jp
jecxz
hlt
es
adc
inc
ds
out
push
stos
cmp
cmpsb
or
lods
cwtl
push
scas
popf
rol
xchg
stc
cmp
dec
mov
xchg
add
in
sub
xor
call
aaa
stc
call
sti
jmp
jae
sbb
test
add
mov
js
call
xor
jbe
in
std
ljmp
xchg
mov
imull
loop
xor
je
xlat
jecxz
data16
mov
imulb
xor
dec
and
out
outsl
mov
mov
imul
push
mov
test
iret
addb
xor
or
mov
ljmp
iret
mov
in
sar
iret
test
jl
fadds
adc
jae
insl
mov
mov
pusha
cmp
pop
pop
xor
mov
mov
sub
call
mov
lahf
aaa
mov
roll
sub
scas
sbb
fs
push
mov
cs
mov
dec
notb
out
jmp
test
rcll
or
sbb
add
sbb
jne
inc
aad
mov
lahf
fnstcw
enter
iret
sub
add
fs
pop
sbb
pop
sub
pusha
jo
int3
popa
xor
xor
aas
leave
addr16
push
scas
in
push
cld
push
iret
lcall
sub
and
scas
pavgw
outsb
mov
popa
mov
fs
cli
insl
mov
ss
aad
scas
adc
mov
outsb
cmp
mov
sbb
shll
imul
xchg
jbe
sbbl
sarb
mov
iret
scas
mov
inc
mov
mov
pop
lods
or
pop
xor
lds
add
lds
stos
mov
fldcw
insb
rcll
bound
xorb
inc
cmc
fld
lock
dec
fsubl
test
push
mov
xchg
cltd
push
xchg
dec
pop
outsl
roll
and
jg
cmpsl
lcall
call
add
test
sbb
mov
mov
sti
push
jmp
or
pop
mov
fdivrs
mov
insl
inc
inc
enter
test
shll
das
idiv
int3
hlt
imul
mov
adc
mov
stos
int3
jne
lock
aaa
sbb
ja
outsl
lods
and
sub
and
add
aam
jmp
and
pop
jle
sbb
cli
fstl
xor
sub
jns
cmp
into
and
test
sbb
jp
or
xor
dec
arpl
jb
out
iret
rcl
xchg
fs
roll
orb
mov
lret
xor
mov
in
cmp
pop
icebp
push
repnz
mov
ja
insb
inc
pusha
xor
jmp
jg
adc
xor
jnp
xchg
mov
jmp
or
push
xchg
fnsave
cmp
shr
sub
xchg
push
inc
aad
sarb
dec
cli
and
sarb
xor
jmp
fdivp
mov
out
cmp
or
je
sbb
sub
jg
push
in
sbb
xchg
push
sub
mov
dec
xor
mov
adc
mov
add
sub
es
push
and
dec
mov
or
fwait
pop
fdivl
daa
xchg
mov
jns
adc
jg
sbb
sbb
data16
aam
sbb
inc
gs
cmp
jbe
pushf
loope
mov
jbe
mov
xlat
es
push
cli
movsb
pop
add
push
aam
xchg
loop
jl
fs
and
dec
mov
jecxz
pop
sbb
mov
pop
rorb
xlat
and
mov
jecxz
sahf
bound
sub
inc
aaa
insl
es
sbb
lret
lods
les
enter
push
push
xlat
jns
inc
cmp
fwait
xor
mov
cmpl
pop
mov
xor
mov
jno
shr
adc
or
sbb
xor
in
inc
mov
mov
push
and
hlt
fidivs
or
sbb
fnstsw
and
push
add
xor
sbb
mov
cmp
call
cmpsl
fwait
push
or
imul
dec
cmp
ret
div
pop
adc
add
inc
adc
fs
mov
and
fcomp
pop
mov
or
cmpsl
or
pop
add
scas
push
push
pop
jne
test
jne
adc
sbb
dec
pop
sbb
pop
mov
out
or
or
ret
daa
add
fwait
lods
movl
fists
jle
out
xchg
les
push
push
movb
out
jl
mov
mov
inc
xor
xlat
repz
movsl
nop
mov
insl
mov
flds
addb
test
and
inc
shrl
inc
push
inc
out
stos
jns
mov
test
jne
outsb
jle
jg
fcoml
jecxz
xchg
dec
stc
lar
adc
add
sub
out
cld
ss
cmp
data16
ficoml
pushf
dec
cwtl
sub
push
dec
incb
out
scas
pop
add
pop
sub
add
testl
xor
mov
stc
jle
pop
xchg
push
mov
out
jge
divps
test
and
repnz
push
fwait
adc
in
mov
clc
sbb
dec
adc
cwtl
into
cld
dec
mov
xchg
adcb
ret
jo
jno
dec
or
xchg
dec
jnp
mov
stos
aad
push
xor
lret
push
mov
sbb
into
dec
xlat
out
rol
inc
jmp
sub
insb
enter
ds
pop
inc
scas
sub
push
push
or
xor
sub
stc
dec
bound
sub
mov
mov
enter
xorb
xor
mov
cltd
push
fstps
iret
and
imul
repnz
pop
or
jno
popa
sbbb
xor
ss
or
call
loopne
fcomip
jae
js
dec
dec
scas
pop
jl
stos
xchg
js
inc
xchg
jo
scas
adc
test
add
fmul
xor
test
addb
and
inc
and
cmp
dec
mov
cwtl
ds
mov
ret
repz
loop
mov
ret
xor
pop
add
fisubl
loop
pop
in
mov
jb
negb
xlat
cmp
outsb
xchg
or
das
push
adc
add
add
dec
js
mov
dec
mov
aaa
testl
push
pusha
dec
andb
mov
popa
jg
sti
sbb
pop
push
out
jg
lock
jne
or
scas
adc
xchg
leave
lds
cwtl
push
xor
ljmp
xchg
mov
pop
xchg
mov
mov
pop
insl
xor
jb
repnz
imul
stos
dec
jg
lock
pop
iretw
inc
cmpsl
out
addl
or
fs
fadds
popa
cli
jmp
mov
fcompl
xlat
popf
sti
push
inc
push
adc
cmp
pop
jl
mov
push
dec
pop
iret
mov
aaa
lock
sbbb
addb
cwtl
dec
and
mov
sub
into
nop
iret
pop
out
repnz
mov
shlb
sbb
addr16
jle
push
addr16
mov
sti
shrb
cltd
ficoml
mov
sbb
out
decb
fbstp
outsl
sbb
dec
out
add
and
in
or
or
adc
jo
cmp
mov
call
pop
mov
mov
fnstenv
mov
mov
sub
jecxz
add
nop
mov
psrlw
imul
lcall
rcrl
mov
sub
rdmsr
sarl
nop
mov
lcall
fs
lods
pusha
sti
js
ljmp
es
bound
stos
inc
outsl
mov
scas
mov
daa
das
sub
lret
pop
mov
add
es
js
imull
mov
es
or
mov
shlb
and
incl
enter
pushf
or
sub
lock
or
aad
mov
pop
mov
push
pop
maskmovq
imull
xchg
imul
bound
cmpsb
lret
loopne
jp
in
jne
push
iret
xlat
add
add
shll
xchg
push
inc
pop
xchg
add
dec
pop
in
push
js
and
aam
lret
orb
inc
xor
sbb
xor
leave
cmp
and
ja
xchg
add
xchg
movsb
or
xchg
add
jecxz
std
pushf
lahf
xchg
push
mov
jle
test
nop
xchg
jmp
lcall
mov
mov
pop
xchg
testl
dec
mov
imull
pop
xor
xchg
in
outsb
filds
cmp
in
sub
push
mov
ss
jle
or
in
aas
mov
mov
jb
inc
xor
loope
lods
mov
ljmp
dec
jecxz
mov
and
hlt
mov
inc
dec
mov
pop
orb
shll
pusha
shll
xor
ret
movsb
sub
sbb
add
push
dec
test
insb
jg
and
orb
mov
icebp
adc
ret
cwtl
jge
shlb
mov
int
dec
or
jae
push
loope
fldln2
outsb
mov
jp
xchg
das
movsl
push
dec
mov
into
and
cmpsl
push
mov
jp
je
sub
add
push
aaa
enter
sbb
dec
imul
inc
les
fwait
pop
pop
mov
push
in
jg
into
and
stos
mov
pop
lds
inc
sbb
rcll
dec
lcall
cltd
cli
jp
in
mov
loope
xor
test
sbb
rorl
leave
and
xor
pop
adc
sbb
scas
dec
jnp
in
cmpsb
jmp
xchg
in
dec
mov
cmpsl
ljmp
mov
mov
std
aad
jne
dec
fistpll
pusha
sbb
rol
dec
outsb
fs
mov
les
adc
testb
push
or
mov
cltd
cmp
scas
mov
sub
sub
in
mov
sub
sahf
xchg
jns
mov
out
mov
add
dec
es
dec
sub
push
inc
xor
aaa
cmpb
fdivrl
adc
test
in
add
mov
jl
hlt
shr
jge
cli
sub
aam
fs
addb
xchg
sub
jno,pn
cmp
ljmp
stos
lds
aad
cmpsb
xchg
icebp
insl
jnp
out
sbbl
fimuls
pop
xchg
pushf
loopne
and
movsl
nop
or
push
rcrb
dec
xor
lock
xor
xchg
cwtl
lret
imul
popf
and
arpl
or
xchg
mov
mov
add
sahf
insb
out
data16
inc
outsb
movsl
jmp
inc
xchg
pop
repnz
mov
in
jg
not
mov
sbbl
call
mov
andl
add
rcll
testl
jo
pop
fnstenv
ss
ret
idivl
xor
push
imul
int
adc
loopne
push
movsb
push
sub
std
dec
sbb
dec
std
out
pushf
insl
inc
es
dec
or
loopne
adc
lret
mov
cwtl
sub
lea
sbb
or
push
addr16
into
inc
mov
mov
shl
into
adc
xchg
cmp
das
xchg
lret
or
sub
mov
pop
mov
fwait
inc
outsl
hlt
ljmp
jne
jp
dec
mov
xor
xor
and
mov
cmpsb
lahf
icebp
mov
cld
lods
push
push
jle
std
call
push
gs
movsb
add
mov
mov
inc
pop
lahf
les
fnstcw
jns
daa
and
test
mov
in
or
and
push
mov
sub
daa
mov
cmpsb
xchg
push
cmp
mov
daa
negw
or
pextrw
jne
push
int
test
dec
jne
hlt
cmc
sub
jb
adc
mov
lds
data16
in
les
stos
into
sbb
fsubp
or
dec
mov
aad
les
and
mov
fldenv
push
ljmp
xor
clc
out
sub
pop
or
inc
jl
fs
sti
pop
clc
push
aad
jl
stos
cmp
aas
fnstcw
pop
loop
adcb
popa
push
mov
xadd
xlat
lock
or
imul
and
std
and
pop
lahf
dec
xor
xchg
xchg
hlt
push
and
or
push
pop
push
std
test
dec
in
sub
cli
xor
pop
add
lret
mov
inc
jnp
in
fs
aaa
pop
jb
push
and
repnz
or
fwait
into
jecxz
and
cmp
movsb
cmp
pop
mov
iret
cmp
sub
add
imul
je
in
arpl
stos
dec
jnp
mov
and
sbb
adc
mov
pop
jp
push
or
sbb
jae
mov
test
and
inc
mov
into
mov
test
test
xchg
scas
sti
bound
imul
mov
frstor
cltd
cld
inc
sub
in
xchg
out
inc
mov
aam
subl
dec
inc
pop
aad
movsl
jbe
mov
xchg
and
je
dec
mov
adc
out
stos
ds
sbb
enter
mov
scas
gs
ret
push
es
stc
xor
fsubl
jmp
js
or
pop
mull
push
cmpsb
mov
push
call
lea
jecxz
pop
xchg
out
icebp
aaa
jecxz
add
aam
fdivrs
scas
cmp
pop
adc
adc
jle
or
bound
or
jl
push
lret
call
data16
vmovups
fucomi
data16
adc
xchg
mov
add
mov
xchg
mov
adc
xor
cmp
gs
ret
cmc
repz
clc
ret
pushf
sbb
loop
or
xchg
stos
xor
lret
clc
xlat
je
xchg
and
mov
inc
mov
repnz
mov
mov
and
or
sarl
dec
test
mov
mov
pushf
inc
sbb
lock
lret
sub
and
mov
dec
mov
sbb
dec
mov
rol
jmp
pushf
push
push
les
and
cmp
subl
in
shrl
aad
jo
add
repz
divb
orl
insl
mov
mov
mov
inc
movsb
xor
xchg
into
cmp
sbb
rclb
or
or
jp,pn
cli
jmp
loopne
pop
jno
xlat
inc
add
shll
dec
sbb
int3
popf
cmp
jns
jo
sbb
aad
or
gs
clc
cmc
and
test
das
mov
dec
cmc
sbbb
test
fidivrs
xor
dec
lods
pop
je
add
mov
cmp
cmp
xchg
stc
add
movsl
push
jo
xchg
int3
shrb
and
xor
or
xlat
jae
mov
out
into
dec
movsl
mov
popf
movsb
popa
hlt
cmc
jmp
mov
cmp
fs
sbb
stos
and
xchg
ficoms
inc
mov
pop
pop
rorl
orl
jb
sub
xor
jne
stos
mov
cmc
xchg
mov
xchg
jmp
outsb
add
add
cwtl
sbb
cmp
push
ljmp
fwait
cltd
mov
xchg
ja
repz
mov
mov
icebp
xchg
xor
adc
cmc
bound
add
data16
iret
imul
arpl
lahf
popa
push
and
imul
andw
fwait
bound
jmp
scas
mulb
adc
lods
mov
sbb
mov
sub
shll
js
imulb
in
dec
jmp
int3
dec
test
and
jg
sar
cmpsb
xor
shrb
pop
and
stos
inc
cmpsl
and
dec
mov
xchg
sbb
jge
mov
inc
mov
xchg
stos
push
int
stc
jae
mov
xchg
shlb
xchg
jae
pop
adc
inc
inc
cwtl
push
push
mov
mov
ror
cmp
and
adc
push
jae
cld
add
incl
cs
cmp
mov
enter
mov
cli
inc
inc
and
outsl
jmp
out
xor
shl
rolb
jo
or
lock
xchg
mov
mov
iret
rcr
fs
xor
and
xchg
movsl
leave
insl
add
cmp
cltd
pop
dec
jge
or
out
shr
fs
rolb
imul
sbb
xor
dec
mov
cmp
sbb
mov
xchg
sub
inc
mov
nop
es
or
lock
jbe
inc
xor
mov
jae
loop
stos
inc
fcoml
aaa
rcrb
adc
push
lods
or
jl
adc
cmp
pop
aad
xchg
adc
add
pop
cmpsb
andb
mov
fwait
outsb
inc
fucom
or
cmp
lods
sub
andl
rorl
push
mov
int3
fdivl
cmc
mov
pushf
mov
sti
pop
mov
push
push
dec
mov
sbb
js
jno
loop
int
cmp
testl
insl
data16
adc
sub
sbb
mov
aam
fs
mov
leave
aaa
arpl
fwait
mov
xchg
xchg
pop
outsb
xchg
push
arpl
es
jp
add
pusha
lcall
mov
xlat
cltd
dec
ljmp
insl
rclb
inc
lea
rorb
mov
and
fwait
inc
ss
sbb
jge
les
pop
dec
push
fnstsw
test
cmc
stos
aaa
xchg
int3
sbb
inc
mov
mov
bound
add
push
cmp
out
fucomip
xor
mov
jno
pushf
inc
stos
testb
push
lcall
jge
xor
ja
ja
imul
add
mov
adc
push
jmp
inc
ret
ja
fisttps
cmp
cmp
dec
outsl
int3
sbbl
out
mov
leave
jnp
pushf
mov
icebp
jbe
add
adc
ss
pop
les
cld
cld
cltd
pushf
push
and
sub
dec
add
adc
inc
arpl
add
and
out
lcall
popa
lock
cmpb
loopne
imul
sbb
mov
pop
jno
daa
mov
mov
outsb
cwtl
xchg
gs
push
add
or
and
or
leave
inc
mov
ds
push
into
in
outsb
lds
or
movsl
ficomps
test
jle
ds
scas
aam
outsb
fldt
in
pushf
nop
out
rorl
and
mov
mov
xchg
std
push
cmp
xchg
xlat
movsb
xlat
call
inc
jae
mov
dec
or
push
and
in
inc
push
push
inc
leave
mov
loop
sbb
cmp
dec
mov
mov
push
inc
inc
addr16
dec
mov
cmp
mov
ljmp
into
dec
das
add
nop
loop
pop
sti
fadds
xchg
int
mov
mov
mov
loopne
mov
push
loop
jge
push
push
out
pop
pop
cmp
xor
inc
shll
and
inc
fwait
cmp
inc
sub
jl
fs
ja
cmp
cmc
movl
leave
pop
test
push
mov
lods
xchg
push
add
pop
lret
pop
push
in
test
out
leave
sub
inc
sbb
nop
das
clc
sahf
test
cli
push
xchg
add
orl
les
clc
and
shlb
sti
pop
xchg
pop
jns
xor
cmp
sub
cmp
lahf
into
test
jbe
fadds
pop
push
daa
pop
jno
adc
pop
mov
sub
jae
pop
xchg
repz
test
mov
rorb
rclb
lahf
scas
int
loope
add
sub
pop
push
cmp
pop
cmpb
out
in
jmp
cmc
call
cs
and
shrb
jge
xchg
icebp
pusha
clts
xchg
pop
xchg
cmpb
pushf
fldl
add
loopne
sbb
xorl
sbb
ds
jo
lcall
ret
or
sti
mov
leave
leave
clc
rclb
pop
xchg
pushf
adc
dec
fldt
in
xchg
xchg
xlat
add
in
sahf
inc
jno
add
out
push
mov
je
imul
jp
cmpsb
fucomp
add
push
pusha
cltd
pop
xchg
out
add
fs
cmp
repz
out
add
jbe
mov
and
daa
mov
jmp
stos
mov
xchg
cld
bound
jl
stc
iret
pop
push
sbb
sti
cmp
sub
mov
jbe
dec
push
mov
stos
cmp
loope
stc
inc
xor
jns
jnp
and
jp
jbe
sbb
jp
mov
mov
and
imul
xchg
mov
adcl
xor
insb
fldenv
and
push
push
xchg
ja
add
out
movl
cmp
test
sbb
inc
pusha
xchg
mov
inc
divb
sub
push
cmp
in
adc
addb
cmp
jmp
test
es
aas
inc
push
dec
sub
cld
pop
inc
push
aam
cmpb
pop
jg
lcall
test
iret
lds
fiadds
shl
repz
push
jo
pop
nop
cmp
adc
ja
inc
lock
cld
sub
lret
xchg
notb
icebp
cs
fdivrl
sbb
std
in
and
xor
jmp
loope
inc
xchg
and
repnz
pusha
sub
sbb
sub
inc
ret
mov
mov
mov
jmp
mov
jle
mov
xchg
xchg
cwtl
std
mov
sub
rclb
xchg
cmpsl
mov
mov
cmp
add
mov
and
mov
inc
lcall
cmp
push
lahf
fisttps
inc
sub
inc
imul
add
push
mov
or
xchg
xchg
leave
test
push
pop
icebp
sub
cmp
jmp
adc
pop
lret
cs
jne
xchg
xor
dec
push
shrb
mov
add
pop
bnd
movl
add
and
mov
dec
test
std
sbb
into
shll
in
adc
mov
dec
push
adc
push
inc
loop
xor
sahf
pop
jo
xchg
pop
mov
rcrl
cmpsl
fistl
jae
pop
xchg
fisubs
leave
cvttps2pi
jno
xchg
mov
repnz
xchg
adc
and
mov
jp
sbb
xor
nop
mov
xchg
stos
push
out
add
mov
or
or
mov
int
mov
ljmp
xor
push
cmpl
cmpsb
jns
std
test
adcb
cmp
mov
adcl
inc
jl
adc
lret
and
add
sub
and
mov
xor
mov
aad
push
jae
andb
bts
fwait
movsb
bts
cmp
adc
jg
jmp
mov
mov
mov
call
insl
cmpsb
test
outsb
shl
fidivrl
xchg
and
aam
mov
pop
out
push
ja
out
nop
data16
dec
mov
push
ds
test
lea
lcall
fimull
into
sti
cmpsl
pop
push
test
cltd
lods
loopne
jbe
xchg
ror
fisttps
add
mov
mov
pop
add
sti
adc
xchg
loop
push
in
sub
push
aad
or
out
sub
ljmp
lcall
daa
test
in
fcompl
aam
popa
stos
sub
int
dec
aas
cmp
cmp
push
aad
ds
add
es
inc
adc
fsubs
and
mov
arpl
aad
mov
add
mov
scas
data16
loope
dec
pop
lahf
adc
sbb
aad
jg
ror
mov
jno
cltd
lock
clc
mov
add
in
sbb
push
cmp
cmc
mov
xchg
loopne
cmpb
rcrl
test
add
cmp
add
sub
xchg
sbb
adc
lcall
xor
mov
lret
xchg
jle
or
movsl
dec
arpl
repz
push
xor
and
lahf
pop
cmpsb
mov
enter
jns
pop
jae
lret
xchg
adc
mov
jg
andb
cmpb
sbb
test
xchg
add
mov
and
xlat
aas
mov
rolb
cmc
cmp
jecxz
mov
xchg
push
aaa
in
lcall
or
adc
sub
cmc
pop
subb
mov
xchg
dec
sub
or
aad
ffreep
jmp
clc
lods
dec
jo
push
insl
leave
test
sbb
lcall
inc
jne
ret
and
js
std
xchg
push
fisubrs
and
push
and
or
icebp
push
and
jl
cli
fimull
mov
xor
add
fcomps
test
aas
adcl
leave
sbb
scas
mov
lds
ljmp
aaa
mov
inc
pop
mov
movsb
aaa
push
addr16
push
out
popa
lock
lods
xor
sar
sbb
jnp
into
pop
rcrb
dec
ret
jl
out
negl
pop
leave
sti
dec
test
mov
aas
fnstenv
pusha
insb
movsl
add
shrl
mov
inc
push
jge
es
xchg
shr
xor
xor
mov
rolb
rcrb
and
mov
out
aas
ret
sbb
pop
cmp
nop
stos
fldcw
std
xchg
insb
dec
jns
mov
jbe
lret
aas
mov
add
push
and
daa
movsl
cmp
lret
push
enter
subb
popa
mov
mov
mov
int3
jecxz
shlb
jmp
out
or
movsb
push
xor
aam
scas
mov
sarb
popa
cmpb
add
mov
cmpsb
xchg
jb
int
sbb
imul
scas
dec
add
xchg
ja
and
andl
cmpsb
ja
loopne
lcall
mov
push
inc
jmp
jo
aas
insl
mov
lock
sbb
call
mov
outsl
add
push
pop
gs
mov
cmp
add
sahf
pusha
xchg
rcrb
sbb
ss
and
inc
mov
scas
push
push
loope
pop
sbb
in
cld
fadds
outsb
dec
sbb
inc
fimull
mov
inc
jno
jnp
js
inc
lea
movsb
xchg
cmc
xor
cmpsl
jg
pop
cmp
inc
or
popa
in
leave
lock
adc
mov
sbb
sbb
mov
cwtl
in
mov
insb
dec
push
out
add
hlt
outsb
and
js
cmp
out
inc
mov
pusha
cmpsl
jle
mov
lret
les
sub
imul
fnstsw
cmp
xchg
aaa
aad
movsl
lock
xchg
gs
xor
test
mov
rorl
std
pop
int3
cmc
xor
xor
or
adc
xchg
sub
fwait
fs
lret
add
inc
xor
push
xchg
jne
shl
fcoml
imul
in
adc
cltd
mov
pop
add
add
and
fs
xor
mov
sub
sbb
inc
sub
lret
daa
xor
jge
xchg
add
movsl
fs
out
ror
stos
data16
int
dec
add
jb
mov
je
xchg
shlb
out
jl
notl
pop
loop
leave
fisubs
sbb
xorl
mov
inc
dec
and
jle
jns
int
out
add
mov
mov
inc
jb
cli
hlt
cmpsl
sbb
and
pop
pop
lahf
ret
mov
cmp
mov
arpl
movsl
sbb
or
lods
bound
jmp
mov
lret
cmp
imul
jle
aad
cmp
insb
test
push
jp
adc
add
or
sub
sbb
cmp
dec
imul
scas
pusha
push
lret
cmp
jp
xor
insl
bound
pop
lods
jb
xchg
testb
pop
out
mov
sub
insb
adc
cmp
xchg
lea
mull
xchg
jb
pop
cmp
out
clc
daa
mov
leave
mov
sub
or
std
popa
in
inc
lock
add
jle
insl
cli
sarb
in
rol
das
iret
jnp
imul
dec
cmp
fisttpl
fucom
jns
sub
push
mov
xor
ljmp
add
xchg
mov
or
jne
pop
xor
jno
scas
jbe
and
je
das
dec
push
mov
jbe
push
mov
xor
call
push
xchg
scas
aad
sub
rcrb
push
fcmovu
out
push
sbb
dec
in
loopne
inc
dec
cli
ja
int
xor
ret
inc
sub
push
mov
mov
scas
mov
ret
shlb
xchg
xchg
or
sahf
mov
lea
ja
mov
lods
rcrb
or
mov
fistps
or
mov
mov
mov
cmp
mov
iret
aam
cli
dec
pushf
push
push
push
sbb
xor
or
mov
cmp
shl
in
fiaddl
int3
lods
or
xchg
fnstcw
and
mov
pop
insb
stc
loop
lds
push
test
push
dec
sbb
sbb
sub
mov
sbb
sbbl
lahf
movb
jns
and
mov
js
outsl
cmp
je
testl
sbb
sbb
roll
rolb
mov
out
mov
lret
icebp
and
dec
in
insb
push
out
mov
adc
mov
ds
pop
aas
fnsave
cmp
outsl
orb
xchg
push
add
pop
dec
stc
sbb
stc
lcall
leave
mov
fisubl
jmp
sahf
or
cmp
packuswb
push
push
lods
inc
in
std
jb
cmp
sub
cmpsl
test
cmp
cmc
test
and
fwait
pop
jae
jne
in
aas
movq
sarl
sub
mov
shlb
popa
rol
jae
jl
inc
mov
pop
in
cltd
mov
fnop
adc
aad
fsubs
aad
stos
jle
cmp
rorl
mov
lret
mov
gs
out
outsl
jmp
movsl
adc
fcoms
test
lret
mov
or
mov
xchg
out
adc
cmp
iret
dec
cmp
mov
and
push
sahf
lock
add
inc
enter
inc
cmp
push
test
jmp
ficoms
xor
push
bound
mov
mov
icebp
pop
test
jle
mov
push
inc
out
push
jns
clc
dec
scas
sahf
mov
es
stos
nop
call
subl
pop
or
gs
fisubrs
fisubrl
mov
scas
mov
out
scas
jp
nop
lods
notb
inc
jp
fmulp
sub
enter
push
or
arpl
fs
aam
inc
and
bound
inc
sbb
sbb
stos
clc
mov
xor
lds
sbb
ss
popa
cmp
enter
out
pop
js
gs
dec
lods
out
stos
xchg
lahf
sti
test
mov
cmp
js
or
ljmp
xor
in
data16
fcmovne
addr16
mov
adc
and
pop
aad
ret
fisttpl
dec
sbb
enter
jb
jb
add
sub
das
clc
jmp
pop
out
stos
and
or
test
call
inc
out
fdiv
jnp
and
gs
inc
flds
pop
push
shl
mov
jg
push
mul
push
repnz
insl
enter
dec
sbb
pop
jno
outsl
repz
cmpsb
cmc
jb
mov
nop
sbb
lcall
fbstp
push
xor
pop
or
cmc
xchg
push
out
push
popa
push
mov
push
lahf
aaa
cwtl
loopne
mov
mov
dec
xor
lahf
aam
loop
mov
test
js
push
enter
mov
mov
push
pop
mov
mov
fmuls
and
sub
push
dec
pusha
xchg
pop
fs
loop
pop
sbb
dec
xchg
mov
setns
sarl
push
push
push
loope
iret
mov
loopne
cmp
mov
ret
in
xor
push
and
or
xor
out
xchg
scas
shl
mov
stos
mov
mov
add
fwait
pop
lock
out
in
pop
jp
in
or
sub
inc
shll
in
dec
push
ficoms
sub
adc
inc
jp
iret
pop
push
insb
insb
inc
int
lock
inc
push
sbb
or
dec
fisubrl
mov
frstor
iret
imul
daa
sub
mov
loope
and
loop
js
mull
xchg
and
dec
es
push
push
sub
jno
outsl
scas
imul
fldcw
inc
jnp
pop
push
cwtl
inc
aad
push
outsb
mov
xor
sahf
push
xlat
adc
mov
lahf
dec
push
lods
inc
xor
add
fmul
fcomps
in
movsb
aaa
leave
pavgw
rcll
shlb
leave
in
add
add
mov
scas
cmp
mov
mov
fbstp
add
repz
push
sub
gs
pushf
xchg
push
sti
out
test
out
leave
mov
xchg
and
dec
or
and
mov
ss
lret
add
mov
mov
lock
mov
iret
rcll
add
icebp
stc
mov
jmp
jecxz
in
mov
xchg
imul
out
movsl
mov
pop
adc
mov
dec
int
cmp
mov
les
jecxz
jns
xlat
lods
inc
aad
inc
xor
rcrl
xor
out
pop
dec
mov
pop
pop
jns
xchg
push
jo
pop
pop
push
daa
dec
fmull
sarl
insl
iret
adc
movsb
pop
fwait
and
sbb
mov
rcr
cmpsb
and
psrad
lahf
lahf
sub
rolb
iret
hlt
insl
add
add
mov
and
mov
aas
xor
jle
inc
ja
lock
pushf
cmp
stos
inc
cmp
or
ja
cmp
mov
movsb
xor
js
sbb
lds
inc
mov
addb
xor
out
dec
lock
cltd
lods
pusha
xchg
fistpll
sub
or
rorl
ljmp
inc
shrb
sbb
scas
pop
pop
imull
lret
fs
aad
pushf
out
mov
loope
push
cmpb
push
sbb
in
mov
outsl
scas
push
lea
push
or
adc
xchg
mov
push
push
pop
loope
xorb
sub
divb
push
clc
pop
sbb
mov
and
out
leave
sbb
movsb
ror
dec
push
sbb
dec
pop
inc
jb
popa
insl
pop
gs
hlt
xchg
mov
in
xor
movsb
pop
dec
ja
xor
pop
out
cs
lcall
lret
mulb
cmp
cmpsl
dec
and
push
movsl
cli
push
push
inc
outsl
in
rcrb
call
mov
xor
xor
iret
cmp
xchg
xchg
adc
fldenv
mov
push
ror
jg
loopne
cmp
or
ds
jnp
mov
imul
push
enter
and
loopne
mov
push
rol
iret
aas
std
jl
std
sbb
lret
ljmp
arpl
or
xchg
push
inc
mov
pop
xchg
adc
mov
test
ds
lret
jae
sbb
repz
rcrl
scas
negl
mov
pushf
mov
mov
pop
mov
mov
push
push
daa
lds
pop
jno
pop
push
push
and
mov
sub
std
std
jecxz
test
add
xor
sbb
fistpl
ljmp
add
jp
dec
jnp
imul
std
push
icebp
sub
imul
movsl
call
cmpsb
push
in
push
inc
rcll
push
cmp
repnz
imulb
cmp
push
pusha
push
fsubrs
pop
lret
jno
nop
pop
daa
pop
and
cmp
cmp
test
inc
cwtl
adc
insl
mov
subps
sarb
imul
inc
mov
insl
fsubs
push
rep
cltd
cmp
xor
inc
adc
inc
xor
adc
sub
movsb
pop
jne
scas
dec
xchg
push
divl
cmp
loope
xlat
and
hlt
std
inc
imul
enter
lahf
dec
jle
mov
dec
cs
es
orl
pushf
call
adc
push
sbb
in
loop
mov
xchg
sub
xor
xchg
fwait
jle
cwtl
dec
ja,pn
jecxz
push
jne
daa
cwtl
cwtl
imul
add
bound
or
in
test
cmp
cmp
addr16
pushf
daa
push
cmp
clc
lret
xchg
pop
sub
xchg
jb
pop
test
jl
movl
in
mov
test
in
sbb
idivb
mov
fnstenv
insb
pop
int3
aam
stc
popf
xchg
dec
mov
cmp
mov
add
dec
add
and
xchg
inc
dec
add
xor
add
add
sbb
add
add
add
add
add
add
add
addb
add
addb
addb
add
cmp
add
lock
orb
add
add
addb
add
sbb
add
add
add
add
pop
add
add
add
add
js
add
nop
add
addb
add
add
add
add
addb
add
fadds
add
lock
addb
add
sbb
add
add
add
adc
or
orb
add
and
add
cmp
add
push
add
adc
add
in
add
testb
sbbb
add
or
or
add
loopne
add
clc
add
xorb
add
dec
or
subb
add
inc
add
cmpb
sbbb
orb
adcb
add
mov
or
cmpb
add
fmuls
sub
add
sbb
add
add
add
add
adc
add
add
add
sbb
add
xor
add
dec
add
add
pusha
add
add
js
add
nop
add
add
test
add
rolb
add
add
add
lock
add
or
add
and
add
cmp
add
push
push
add
push
sldt
addb
cmp
add
cwtl
push
add
mov
add
enter
add
add
loopne
add
sbb
add
add
add
add
add
lock
cmp
add
adc
add
sub
add
sbb
add
add
add
add
pop
add
jg
add
add
pop
pop
add
jo
add
mov
add
mov
jg
add
jg
add
pop
add
sbb
add
add
add
add
add
or
add
pop
add
add
add
sbb
add
add
add
add
add
or
add
pop
add
add
add
sbb
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
sbb
add
add
add
add
add
or
add
add
add
add
sbb
add
add
add
add
add
or
add
add
add
add
sbb
add
add
add
add
add
or
add
add
add
add
sbb
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
sbb
add
add
add
add
add
or
add
add
add
add
sbb
add
add
add
add
add
or
add
add
add
add
sbb
add
add
add
add
add
or
add
add
add
add
sbb
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
test
add
add
add
sbb
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
enter
add
add
sbb
add
add
add
add
add
add
add
fmuls
add
add
add
sbb
add
add
add
add
add
add
add
call
add
add
add
add
add
add
add
add
add
clc
or
add
add
add
add
add
add
add
add
add
add
or
add
add
add
sbb
add
add
add
add
add
add
add
sbb
add
add
add
sbb
add
add
add
add
add
add
add
sub
add
add
add
sbb
add
add
add
add
add
add
add
cmp
add
add
add
sbb
add
add
add
add
add
add
add
dec
or
add
add
add
add
add
add
add
add
add
add
pop
or
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
js
add
add
add
sbb
add
add
add
add
add
add
add
mov
add
add
add
sbb
add
add
add
add
add
add
add
cwtl
or
add
add
add
add
add
add
add
add
add
add
test
add
add
add
sbb
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
enter
add
add
sbb
add
add
add
add
add
add
add
fmuls
add
add
add
sbb
add
add
add
add
add
add
add
call
add
add
add
add
add
add
add
add
add
clc
or
add
add
add
add
add
add
add
add
add
add
or
add
add
add
sbb
add
add
add
add
add
add
add
sbb
add
add
add
sbb
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
sbb
add
add
add
add
add
or
add
add
add
add
sbb
add
add
add
add
add
or
add
add
add
add
sbb
add
add
add
add
add
or
add
add
add
add
sbb
add
add
add
add
add
or
add
std
or
xor
add
pop
decb
add
add
mov
or
xor
add
rolb
add
add
hlt
add
add
add
sub
or
xor
add
pop
add
add
add
nop
add
add
pusha
pop
or
in
add
inc
or
add
add
add
or
rolb
add
in
or
rolb
add
mov
or
rolb
add
test
or
rolb
add
push
adc
add
add
add
or
rolb
add
hlt
adc
add
les
or
rolb
add
add
sbb
add
add
add
add
add
add
or
rolb
add
sbb
add
add
add
add
test
add
inc
push
or
loopne
add
and
or
rolb
add
pop
or
loopne
add
les
or
push
add
add
and
add
add
add
or
add
add
or
hlt
add
add
add
add
pushf
xor
add
add
add
add
xor
add
add
or
sbb
add
cmp
add
add
add
add
add
add
add
add
xchg
or
xchg
add
add
inc
or
addb
add
add
add
dec
or
clc
add
add
dec
or
dec
add
add
or
int3
add
add
or
in
add
add
push
or
mov
add
enter
push
add
add
or
movsb
add
add
pop
or
adc
add
rcrb
add
push
add
call
add
add
bound
add
add
or
or
adc
add
and
add
add
xor
or
adc
add
dec
arpl
add
add
pop
arpl
add
add
jo
or
adc
add
pop
add
inc
add
inc
add
push
add
add
inc
add
dec
add
add
inc
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
push
add
push
add
inc
add
inc
add
add
add
inc
add
inc
add
dec
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
pop
add
inc
add
inc
add
add
add
add
inc
add
add
add
dec
add
or
inc
add
add
inc
add
add
dec
add
add
or
add
push
add
dec
add
add
dec
add
add
or
inc
add
inc
add
push
add
add
dec
add
push
add
dec
add
push
add
pop
add
dec
add
push
add
add
dec
add
push
add
inc
add
dec
add
pop
add
inc
add
add
push
add
or
dec
add
inc
add
inc
add
dec
add
add
add
push
add
dec
add
add
dec
add
dec
add
push
add
inc
add
dec
add
push
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
push
add
add
inc
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
addb
incl
add
inc
add
inc
add
mov
add
mov
add
mov
add
mov
add
addb
add
add
add
add
add
add
incl
incb
incb
incb
incb
cld
add
cld
add
clc
add
clc
add
push
add
push
add
jmp
add
inc
add
inc
add
inc
add
cld
add
cld
add
cld
or
cld
ud0
cld
aas
cld
aas
cld
aas
jg
incl
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
incl
add
test
add
add
add
mov
add
add
add
rolb
add
add
add
add
add
add
add
add
push
add
psubb
add
add
add
test
out
jmp
sbb
ficompl
out
fcmovu
jmp
cmp
inc
add
inc
add
jmp
add
jmp
add
jmp
add
push
pop
clc
ud0
cld
pop
aas
aas
aas
cld
pop
clc
ud0
lock
jmp
add
jmp
add
jmp
add
inc
add
inc
add
incl
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
incl
add
lock
add
add
pushl
add
std
mov
pop
std
mov
pop
std
mov
pop
std
mov
pop
std
mov
pop
cmp
mov
push
fldl
add
jl
add
add
data16
add
add
jle
add
jg
add
jg
add
jg
add
jle
add
jl
add
js
add
jo
add
pusha
add
add
add
add
add
inc
pop
inc
pop
incb
pop
incb
pop
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
pushl
aas
pushl
add
call
add
incl
incl
incl
ud0
add
incl
aas
incl
jg
incl
incl
incl
incl
decl
lcall
aas
decl
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
add
add
addb
adc
add
and
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
loopne
add
and
add
inc
add
or
add
add
add
std
clc
push
jg
jmp
aas
inc
pop
inc
pop
clc
cld
add
cld
add
cld
add
cld
add
cld
add
clc
inc
pop
inc
pop
jmp
aas
push
jg
clc
std
call
add
add
add
add
add
add
add
add
add
add
add
addb
add
incl
add
loopne
add
mov
add
add
add
sub
add
mov
inc
add
test
add
sbb
add
mov
add
add
add
cld
pop
cld
pop
cld
pop
cld
pop
jmp
adc
inc
adc
incl
jg
add
aas
incl
add
test
inc
adc
jmp
adc
cld
pop
cld
pop
cld
pop
cld
pop
incl
add
add
add
add
add
add
add
add
add
add
add
addb
add
incl
pop
cld
add
pop
cld
add
pop
cld
add
pop
cld
add
pop
cld
add
pop
cmp
add
faddl
add
faddl
add
mov
add
inc
add
add
add
jbe
add
jle
add
jg
add
jg
add
jg
add
jle
add
jl
add
js
add
jo
add
pusha
add
add
add
add
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
pushl
pushl
add
call
add
incl
incl
incl
ud0
add
incl
aas
incl
jg
incl
incl
incl
incl
decl
lcall
aas
incl
add
add
add
add
add
add
add
add
add
add
add
addb
add
incl
add
add
or
add
sbb
add
push
add
sub
add
inc
add
add
add
inc
addl
add
add
pusha
xor
add
sbb
add
push
add
sbb
add
sbb
add
loopne
add
add
add
cld
pop
push
pop
jmp
add
inc
sar
xor
incl
clc
jg
sbb
sbb
jg
push
sbb
lcall
or
decl
test
pop
incl
loope
jmp
add
push
pop
cld
pop
ljmp
add
add
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
mov
xor
xor
xor
xor
xor
xor
xor
add
xor
adc
xor
xor
xor
add
xor
adc
xor
adc
xor
mov
xor
add
cmp
adc
xor
repz
clc
xor
xor
sbb
xor
repz
add
xor
cmp
adc
adc
xor
xor
clc
xor
add
xor
xchg
adc
sbb
xor
xor
repz
aas
xorl
add
xor
xor
adc
xor
xor
add
xor
cmp
adc
xor
repz
xor
xor
xor
xor
cmp
xor
xor
cmp
sbb
sbb
xor
xor
xorl
xor
add
xor
xchg
adc
xor
cmp
cmp
cmp
xor
add
xor
sbb
xor
xor
add
xor
cmp
xor
xchg
adc
xor
clc
xor
repz
add
xor
xor
xor
cmp
xor
xor
xorl
incl
xor
xor
xor
xor
xor
xor
xor
mov
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
sub
add
and
add
adc
add
add
add
add
add
jl
add
adc
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
add
xor
and
xor
xor
cmp
xor
add
xor
and
xor
xor
xorl
cmp
xor
xor
add
sub
and
xor
cmp
aas
xor
xor
xor
add
and
xor
cmp
xor
xor
xor
add
sub
sub
and
xor
cmp
xor
xor
repz
add
xor
and
mov
cmp
xor
add
inc
and
xor
xor
repz
add
sub
and
and
cmp
repz
xor
mov
and
popl
xor
repz
cmp
xor
and
and
xor
cmp
cmp
xor
xor
mov
xor
xor
xor
xor
xor
cmp
and
and
xor
xor
repz
xor
add
xor
xor
mov
xor
xor
xor
xor
xor
cmp
and
xor
xor
xor
repz
add
xor
xor
xor
mov
xor
xor
cmp
add
xor
xor
xor
cmp
xor
xor
xor
xor
clc
repz
xor
xor
xor
xor
xor
xor
xorl
add
add
add
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
mov
xor
xor
xor
xor
xor
xor
xor
add
xor
adc
xor
xor
xor
add
xor
adc
xor
adc
xor
mov
xor
add
cmp
adc
xor
repz
clc
xor
xor
sbb
xor
repz
add
xor
cmp
adc
adc
xor
xor
clc
xor
add
xor
xchg
adc
sbb
xor
xor
repz
aas
xorl
add
xor
xor
adc
xor
xor
add
xor
cmp
adc
xor
repz
xor
xor
xor
xor
cmp
xor
xor
cmp
sbb
sbb
xor
xor
xorl
xor
add
xor
xchg
adc
xor
cmp
cmp
cmp
xor
add
xor
sbb
xor
xor
add
xor
cmp
xor
xchg
adc
xor
clc
xor
repz
add
xor
xor
xor
cmp
xor
xor
xorl
incl
xor
xor
xor
xor
xor
xor
xor
mov
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
sub
add
and
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
cmp
div
xchg
mov
xor
add
inc
inc
inc
or
mov
xor
popl
add
xor
pop
push
xor
mov
cmp
xor
ud0
xor
xor
cmp
aas
add
xor
dec
pop
ud0
xor
xor
mov
xor
repz
add
xor
inc
aad
out
in
xor
xor
repz
add
xor
dec
pop
ud0
xor
xor
mov
xor
repz
add
xor
inc
aad
out
in
xor
xor
repz
add
xor
dec
pop
ud0
xor
xor
mov
xor
repz
add
xor
inc
aad
out
in
xor
xor
repz
add
xor
dec
pop
push
hlt
xor
xor
mov
xor
repz
add
xor
inc
aad
out
in
xor
xor
repz
add
xor
dec
pop
push
hlt
xor
xor
mov
xor
repz
add
xor
inc
inc
inc
inc
inc
xor
xor
clc
repz
add
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
add
xor
xor
xor
aas
push
xor
add
xor
xor
stos
mov
xor
mov
add
xor
xor
add
xor
xor
xor
clc
repz
add
sub
add
and
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
repz
xor
add
xor
xor
inc
arpl
xor
xor
xor
xor
xor
add
xor
xor
inc
xor
xor
xor
cmp
xor
xor
add
xor
xor
arpl
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
xorl
xor
add
xor
xor
inc
arpl
xor
xor
xor
pushl
xor
xor
add
xor
ss
xor
xor
xor
cmp
add
xor
xor
inc
xor
xor
xor
cmp
xor
xor
add
xor
ds
xor
xor
cmp
xor
xor
add
xor
xor
inc
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
repz
xor
add
xor
xor
xor
inc
xor
xor
xor
add
xor
xor
inc
xor
xor
repz
add
xor
inc
inc
inc
xor
cmp
incl
add
xor
data16
xor
repz
add
xor
xor
data16
xor
repz
cmp
xor
add
xor
xor
out
jecxz
xor
xor
incl
xor
xor
xor
xor
xor
xor
cmp
add
sub
add
and
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
inc
xor
xor
inc
xor
pushl
xor
pushl
add
xor
sub
xor
mov
xor
add
xor
xor
xor
aas
xor
add
xor
arpl
xor
cmpl
xor
xor
stos
inc
xor
xor
xor
cmp
xor
xor
xor
add
xor
inc
sub
xor
xor
xor
cmpl
xor
add
xor
stos
and
xor
xor
xor
xor
add
xor
push
and
xor
xor
xor
clc
pushl
add
xor
stos
inc
push
xor
cmp
clc
cmpl
aas
xor
add
push
inc
mov
xor
cmpl
aas
cmp
xor
add
xor
stos
inc
sub
xor
cmp
repz
clc
aas
xor
add
xor
mov
xor
xor
xorl
xor
xor
add
xor
xor
stos
inc
xor
xor
xor
xor
aas
xor
add
xor
xor
and
xor
xorl
xor
add
xor
xor
inc
xor
xor
xor
xor
aas
xor
xor
add
xor
mov
xor
xor
cmpl
xor
add
xor
xor
stos
inc
xor
xor
xor
xor
add
xor
xor
data16
xor
xor
xor
cmp
add
add
add
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
aas
pushl
xor
add
xor
xor
xor
xor
mov
add
xor
mov
adc
mov
xor
xor
pushl
add
xor
adc
cltd
xchg
adc
cmp
add
xor
adc
xor
cmp
repz
xor
adc
xor
xor
cmpl
repz
cmp
xorl
adc
adc
cmp
clc
repz
add
sbb
xor
cmp
repz
add
cmp
xor
adc
xor
cmp
clc
xor
sbb
adcl
cmp
repz
xor
sbb
adc
xor
xchg
cmpl
clc
xor
xor
orl
adc
cmp
cmpl
xor
xor
adc
xor
cmp
xor
xor
xor
clc
cmp
add
xor
adc
xor
xor
xor
add
cmp
sbb
xor
cmp
add
xor
cltd
adc
adc
mov
decl
xor
xor
xor
xor
mov
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
sub
add
and
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
repz
xor
xor
add
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
add
xor
and
xor
xor
cmp
xor
add
xor
and
xor
xor
xorl
cmp
xor
xor
add
sub
and
xor
cmp
cmp
xor
add
and
xor
cmp
orl
add
cmp
xor
and
xor
cmp
xor
repz
xor
add
xor
inc
xor
xor
xor
add
xor
xor
cmp
and
xor
xor
xor
repz
xor
add
xor
xor
mov
xor
xor
xor
xor
xor
cmp
and
xor
xor
xor
repz
add
xor
xor
xor
mov
xor
xor
xor
xor
xor
cmp
inc
xor
xor
xor
cmp
popl
add
xor
xor
xor
mov
xor
xor
popl
xor
xor
xor
xor
xor
xor
xor
cmp
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
sub
add
and
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
mov
add
xor
and
and
cmp
mov
xor
add
and
and
and
inc
xor
clc
cmpl
pushl
xor
add
and
sub
cmp
xor
mov
add
and
mov
inc
cmp
aas
xorl
xor
and
xor
cmp
inc
cmp
cmp
xor
cmp
popl
add
and
and
xor
inc
inc
cmp
decl
addl
cmp
xor
xor
mov
xor
add
xor
xor
xor
xor
xor
xor
xor
xor
incl
add
xor
xor
xor
xor
pushl
xor
mov
inc
inc
xor
cmp
and
mov
xor
add
cmp
inc
xor
xor
xor
xor
xor
inc
and
cmpl
clc
xorl
add
xor
and
and
xor
cmp
add
cmp
and
and
stos
and
cmp
xor
xor
mov
add
xor
stos
and
and
mov
decl
xor
xor
xor
xor
mov
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
sub
add
and
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
repz
xor
xor
add
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
add
xor
and
xor
xor
cmp
xor
add
xor
and
xor
xor
xorl
cmp
xor
xor
add
sub
and
xor
cmp
cmp
xor
add
and
xor
cmp
orl
add
cmp
xor
and
xor
cmp
xor
repz
xor
add
xor
inc
xor
xor
xor
add
xor
xor
cmp
and
xor
xor
xor
repz
xor
add
xor
xor
mov
xor
xor
xor
xor
xor
cmp
and
xor
xor
xor
repz
add
xor
xor
xor
mov
xor
xor
xor
xor
xor
cmp
inc
xor
xor
xor
cmp
popl
add
xor
xor
xor
mov
xor
xor
popl
xor
xor
xor
xor
xor
xor
xor
cmp
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
sub
add
adc
add
or
add
add
add
add
add
pop
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
int3
int3
int3
int3
int3
int3
int3
int3
or
mov
ja
ja
emms
jo
pop
jo
orb
pop
jg
ja
orb
xchg
js
ja
sldt
add
add
ud0
incl
add
add
int3
int3
int3
int3
int3
int3
int3
int3
sub
add
adc
add
sldt
add
add
add
add
js
add
adc
add
adc
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
int3
int3
int3
int3
int3
int3
int3
int3
rolb
add
add
or
ja
ja
ja
or
sti
sti
sti
sti
sti
sti
or
mov
mov
sti
sti
sti
sti
or
mov
mov
sti
sti
sti
sti
or
mov
mov
sti
sti
sti
sti
or
add
add
add
int3
sarb
int3
int3
add
or
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
add
adc
add
sldt
add
add
add
add
js
add
adc
add
adc
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
int3
int3
int3
int3
int3
int3
int3
int3
add
add
add
or
add
ja
ja
int3
ud2
jnp
jnp
jo
add
mov
mov
mov
jnp
jnp
jnp
add
mov
mov
mov
sldt
add
add
add
lock
str
add
lock
or
rorb
add
int3
int3
int3
int3
add
or
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
add
adc
add
sldt
add
add
add
add
js
add
adc
add
adc
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
movq
jg
jg
pop
div
div
div
lock
jg
jg
pop
div
div
div
lock
jg
jg
pop
div
div
div
lock
jg
jg
pop
div
div
div
lock
add
add
add
push
out
out
out
out
out
out
loopne
add
add
add
add
int3
int3
int3
int3
int3
int3
int3
sub
add
adc
add
or
add
add
add
add
add
pop
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
int3
int3
int3
int3
int3
int3
int3
int3
or
mov
ja
ja
emms
jo
add
ja
sldt
add
add
orb
jo
add
ja
emms
ja
ja
pop
orb
incl
add
add
int3
int3
int3
int3
int3
int3
int3
int3
sub
add
adc
add
or
add
add
add
add
add
pop
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
int3
int3
int3
int3
int3
int3
int3
int3
or
mov
ja
ja
sldt
add
add
orb
ja
ja
ja
sldt
add
add
orb
ja
ja
ja
ud0
incl
add
add
int3
int3
int3
int3
int3
int3
int3
int3
sub
add
adc
add
sldt
add
add
add
add
js
add
adc
add
adc
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
int3
int3
int3
int3
int3
int3
int3
int3
add
add
add
int3
int3
ud0
push
int3
int3
ud0
push
int3
int3
pmuludq
lock
int3
ud0
push
int3
int3
pmuludq
lock
int3
ud0
push
int3
int3
pmuludq
lock
int3
ud0
push
int3
int3
paddb
iret
add
int3
int3
ud0
incl
or
int3
ud0
incl
int3
int3
int3
add
add
or
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
add
adc
add
or
add
add
add
add
add
pop
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
int3
int3
int3
int3
int3
int3
int3
int3
or
mov
ja
ja
emms
ja
ja
ja
emms
js
ja
ja
sldt
jo
add
orb
ja
ja
ja
ud0
incl
add
add
int3
int3
int3
int3
int3
int3
int3
int3
sub
add
adc
add
sldt
add
add
add
add
js
add
adc
add
adc
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
int3
int3
int3
int3
int3
int3
int3
int3
add
add
add
or
add
ja
ja
int3
ud2
sti
sti
sti
sti
lock
or
mov
or
mov
sti
sti
sti
sti
or
lock
mov
mov
add
or
sti
sti
sti
sti
lock
movswl
int3
or
sti
sti
add
or
sarb
int3
int3
add
or
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
add
adc
add
or
add
add
add
add
add
pop
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
int3
int3
int3
int3
int3
int3
int3
int3
or
mov
pop
pop
ja
pshufw
add
ja
pshufw
jo
orb
add
add
ja
emms
pop
pop
pop
pop
ja
ud0
incl
add
add
int3
int3
int3
int3
int3
int3
int3
int3
sub
add
adc
add
sldt
add
add
add
add
js
add
adc
add
adc
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
int3
int3
int3
int3
int3
int3
int3
int3
add
add
add
int3
int3
ud0
push
int3
int3
ud0
push
int3
int3
ud0
push
int3
int3
ud0
push
int3
int3
ud0
push
int3
int3
ud0
push
int3
int3
ud0
push
int3
int3
ud0
push
int3
int3
ud0
incl
add
int3
ud0
incl
or
int3
ud0
incl
int3
int3
int3
add
add
or
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
and
inc
add
data16
add
and
jae
je
popa
add
je
and
jo
outsl
add
imul
outsl
add
and
imul
imul
popa
add
add
add
add
add
insb
add
and
inc
add
add
and
imul
outsb
add
je
and
jbe
popa
add
add
add
add
add
dec
add
popa
add
add
add
and
jbe
popa
add
add
and
imul
outsb
add
je
and
jbe
popa
add
add
add
push
add
and
push
add
add
je
add
add
outsl
add
add
arpl
arpl
add
je
popa
add
insb
add
adc
push
add
imul
add
ja
outsb
add
add
jb
outsl
add
add
outsl
add
add
add
jne
add
je
and
insl
add
je
push
add
add
add
jne
imul
jae
and
dec
add
add
and
jbe
add
jae
imul
and
xor
add
add
add
imul
popa
add
je
push
add
add
popa
add
add
outsb
add
add
add
add
add
add
jae
and
popa
add
add
popa
add
add
add
add
imul
add
add
add
imul
and
arpl
insb
add
jae
jae
and
outsb
add
insl
add
and
and
add
add
jb
outsl
add
add
outsl
add
add
imul
add
add
jae
and
add
jo
je
jns
adc
dec
add
jae
je
and
data16
add
add
add
jae
and
add
jo
je
jns
add
sbb
inc
add
add
add
jae
and
je
jns
jo
add
add
outsl
add
add
jne
jo
jo
outsl
add
je
add
add
add
add
add
imul
jne
insb
add
jb
and
insb
add
outsb
add
jae
and
popa
add
add
add
outsl
add
add
insb
add
add
add
add
outsl
add
add
outsb
add
jne
add
and
add
je
popa
add
add
outsb
add
add
jne
data16
add
add
add
add
and
insl
add
arpl
push
add
je
popa
add
add
outsb
add
add
jne
data16
add
add
add
imul
and
and
and
add
add
outsl
add
add
outsl
add
outsb
add
add
outsl
add
add
outsl
add
outsb
add
arpl
je
add
add
bound
push
add
je
and
je
jns
jo
add
add
outsl
add
add
jne
jo
jo
outsl
add
je
add
add
add
outsl
add
add
add
add
add
add
add
add
add
add
push
add
popa
add
add
add
add
jne
je
sbb
dec
add
js
and
insb
add
outsb
add
and
insb
add
outsb
add
je
push
add
arpl
add
add
add
add
add
outsl
add
outsb
add
arpl
je
and
je
imul
add
add
jne
je
add
add
insb
add
add
add
and
arpl
outsl
add
outsb
add
arpl
je
add
add
add
popa
add
imul
insl
add
add
jne
insl
add
add
and
outsl
add
and
insb
add
outsb
add
and
popa
add
add
ja
add
add
js
arpl
add
add
add
add
add
outsb
add
jo
popa
add
add
je
and
jo
jb
outsl
add
jns
and
arpl
popa
add
outsb
add
je
and
bound
imul
add
add
inc
add
and
dec
add
je
and
jae
jne
jo
jo
outsl
add
je
add
add
jns
and
je
push
add
add
jb
outsl
add
jns
add
inc
add
data16
add
and
je
add
insl
add
outsb
add
je
outsl
add
and
insl
add
jae
je
and
bound
add
add
jo
add
imul
add
add
add
add
add
add
imul
and
inc
add
arpl
add
add
add
add
add
inc
add
and
imul
outsb
add
je
and
jae
jne
jo
jo
outsl
add
je
and
imul
je
push
add
add
dec
add
dec
add
and
jbe
add
jae
imul
add
add
add
jne
add
je
and
jb
add
add
je
add
add
jb
and
data16
imul
add
add
add
jne
add
je
and
jb
add
add
je
add
add
add
popa
add
jae
add
add
dec
add
dec
add
and
jae
add
jbe
add
and
arpl
popa
add
outsb
add
je
and
arpl
outsl
add
outsb
add
arpl
je
add
push
add
jno
jne
add
je
and
jb
add
add
je
add
add
add
popa
add
jae
add
add
add
and
arpl
insb
add
add
je
and
jo
jb
outsl
add
jb
popa
add
and
popa
add
add
add
add
outsb
add
add
add
add
outsl
add
je
and
add
data16
add
add
je
and
jne
jae
add
sub
add
add
push
add
imul
add
ja
outsb
add
add
outsl
add
imul
add
add
jb
jb
outsl
add
add
add
imul
add
add
add
jbe
add
and
add
add
add
outsl
add
add
add
jo
outsl
add
add
add
dec
add
jbe
popa
add
add
add
outsl
add
imul
add
add
jne
je
push
add
add
popa
add
add
outsb
add
add
add
add
add
add
add
add
outsb
add
add
popa
add
add
outsb
add
add
jb
jb
outsl
add
and
je
outsl
add
add
outsl
add
imul
add
add
add
jbe
add
add
add
add
popa
add
add
dec
add
dec
add
and
jae
add
jbe
add
and
data16
imul
jb
add
add
add
outsl
add
outsb
add
arpl
je
imul
and
outsb
add
je
and
popa
add
add
ja
add
add
jns
and
jb
jne
insb
add
jae
add
add
dec
add
je
ja
outsl
add
imul
add
outsb
add
add
arpl
push
add
add
add
add
outsl
add
je
and
jne
outsb
add
add
arpl
push
add
add
add
add
outsl
add
outsb
add
arpl
je
imul
and
jb
add
jne
jae
add
add
push
add
add
add
js
jo
imul
add
add
add
outsl
add
insl
add
outsb
add
add
outsl
add
add
jne
jo
jo
outsl
add
je
add
add
add
add
add
add
je
outsl
add
jns
and
outsb
add
je
and
add
jo
je
jns
str
outsl
add
je
and
outsb
add
je
and
data16
jne
outsb
add
add
add
je
popa
add
imul
add
insb
add
jae
jae
and
imul
jne
outsb
add
add
imul
add
add
add
je
popa
add
imul
add
insb
add
add
add
and
arpl
jb
add
je
add
add
add
outsb
add
add
add
outsb
add
and
push
add
add
outsb
add
add
jb
add
jp
add
add
popa
add
and
add
imul
and
jo
add
and
popa
add
jo
insb
add
arpl
popa
add
add
outsb
add
add
add
popa
add
outsb
add
je
and
arpl
push
add
add
add
push
add
add
jae
imul
and
ja
push
add
add
outsl
add
outsb
add
arpl
je
add
add
popa
add
and
outsb
add
je
and
bound
imul
and
imul
jo
outsl
add
je
and
jb
popa
add
add
and
sub
and
add
add
add
add
outsb
add
arpl
je
imul
and
inc
add
add
add
add
jb
popa
add
add
jne
insb
add
add
add
add
outsl
add
insb
add
add
outsl
add
add
imul
and
jae
outsl
add
imul
add
add
add
add
add
jae
jae
and
popa
add
add
add
outsl
add
je
and
popa
add
add
add
insb
add
add
add
and
imul
jne
jae
add
add
dec
add
jbe
popa
add
add
add
outsl
add
je
and
push
add
outsb
add
add
add
add
add
add
add
add
add
jae
and
outsb
add
je
and
popa
add
add
popa
add
add
add
add
jbe
imul
add
add
push
add
add
add
outsb
add
jbe
popa
add
insb
add
bound
insb
add
push
add
add
jae
and
outsb
add
je
and
popa
add
add
popa
add
add
add
push
add
add
add
add
add
jae
jae
cmp
push
add
add
add
add
jne
add
je
add
add
push
add
add
jae
imul
and
das
add
add
add
add
jae
jae
and
data16
insl
add
insb
add
and
imul
outsb
add
je
and
jae
jne
jo
jo
outsl
add
je
add
add
add
outsl
add
add
insb
add
add
jns
je
add
and
jae
add
je
add
add
imul
add
add
add
imul
and
push
add
outsl
add
add
imul
adc
dec
add
je
ja
outsl
add
imul
add
jae
and
add
ja
outsb
add
add
add
add
add
jb
imul
add
jae
and
jne
outsb
add
add
arpl
push
add
add
add
add
add
add
add
jo
jo
add
add
outsl
add
outsb
add
arpl
je
imul
and
outsl
add
and
jb
add
add
add
add
outsl
add
je
ja
popa
add
add
add
popa
add
jae
add
add
outsl
add
outsb
add
arpl
je
imul
and
popa
add
outsl
add
je
add
add
outsl
add
outsb
add
arpl
je
imul
and
jb
add
add
add
jns
and
jo
add
jb
add
add
outsl
add
add
jne
data16
add
and
jae
jo
popa
add
add
add
jbe
popa
add
insb
add
bound
insb
add
add
push
add
arpl
imul
add
add
jae
and
popa
add
add
popa
add
add
add
outsl
add
outsb
add
arpl
je
add
add
add
outsl
add
imul
add
add
jae
and
outsb
add
je
and
arpl
outsl
add
outsb
add
arpl
je
add
add
add
popa
add
outsb
add
je
and
jae
add
add
add
jb
and
jb
add
add
jbe
add
add
data16
add
and
jae
outsl
add
imul
add
add
jae
and
arpl
insb
add
jae
add
add
add
add
and
insl
add
outsb
add
and
jb
add
add
add
arpl
add
sub
and
arpl
popa
add
outsb
add
je
and
jae
jo
insb
add
arpl
add
add
add
outsb
add
arpl
je
imul
and
je
imul
add
add
jne
je
add
add
outsl
add
outsb
add
arpl
je
imul
and
jb
add
jne
jae
add
add
add
add
and
insl
add
outsb
add
and
insb
add
jbe
add
add
add
data16
add
jns
insl
add
outsl
add
add
and
insb
add
outsb
add
jae
add
add
imul
and
outsb
add
insl
add
and
je
outsl
add
and
insb
add
outsb
add
add
add
je
and
imul
add
ja
outsb
add
add
add
outsl
add
add
outsl
add
je
add
add
add
add
outsl
add
je
add
add
push
add
outsl
add
add
popa
add
jns
and
outsl
add
add
and
data16
insb
add
jae
add
add
jo
add
popa
add
add
outsb
add
add
outsl
add
insb
add
add
insb
add
arpl
imul
add
add
jo
add
popa
add
add
outsb
add
add
outsl
add
and
imul
jo
jb
outsl
add
jb
add
jae
add
add
jo
add
popa
add
add
outsb
add
add
insb
add
add
add
and
imul
jo
jb
outsl
add
jb
add
jae
add
add
outsl
add
imul
add
add
jo
add
popa
add
add
outsb
add
add
outsb
add
add
outsl
add
sub
add
imul
add
add
add
je
imul
je
imul
and
popa
add
add
add
jae
and
jb
add
jne
imul
add
add
add
add
jae
popa
add
add
add
add
and
insb
add
outsb
add
add
add
jb
outsl
add
add
outsl
add
add
jb
outsl
add
add
add
add
add
add
outsl
add
and
jae
outsl
add
imul
add
add
inc
add
add
add
jb
outsl
add
add
outsl
add
add
jo
je
imul
add
add
jb
outsl
add
add
outsl
add
add
outsl
add
add
jne
jo
jo
outsl
add
je
add
add
add
outsl
add
imul
add
add
add
add
add
outsl
add
add
jne
jo
jo
outsl
add
je
add
add
add
jo
add
popa
add
add
outsb
add
add
outsl
add
add
jne
jo
jo
outsl
add
je
add
add
outsb
add
add
outsl
add
imul
add
add
add
jb
outsl
add
add
outsl
add
add
popa
add
imul
and
outsb
add
je
and
jae
jne
jo
jo
outsl
add
je
add
add
add
add
add
jae
jae
and
data16
insl
add
insb
add
and
outsb
add
je
and
jae
jne
jo
jo
outsl
add
je
add
add
jns
and
jo
jb
outsl
add
add
outsl
add
add
popa
add
imul
add
add
add
add
jae
jae
and
popa
add
add
popa
add
add
add
outsb
add
add
jae
add
add
add
popa
add
outsb
add
je
and
popa
add
jae
imul
and
jb
add
jne
add
je
add
add
add
add
jae
jae
add
inc
add
imul
add
add
je
je
add
jo
je
imul
and
je
outsl
add
add
add
add
add
add
add
add
add
add
outsl
add
add
add
outsb
add
outsl
add
insl
add
je
imul
add
add
jb
jb
outsl
add
and
outsl
add
and
arpl
popa
add
add
add
imul
outsl
add
imul
add
add
add
jb
popa
add
jns
and
data16
outsb
add
je
imul
and
and
add
jb
jb
outsl
add
and
outsl
add
and
insb
add
popa
add
add
add
add
imul
outsl
add
imul
add
add
add
jb
popa
add
jns
and
sub
and
add
add
jae
outsl
add
imul
add
outsb
add
je
imul
imul
je
imul
and
inc
add
jb
outsl
add
add
add
add
outsl
add
add
outsb
add
and
push
add
add
insl
add
and
and
add
add
outsl
add
outsb
add
arpl
je
imul
and
je
outsl
add
add
add
add
outsl
add
outsb
add
arpl
je
add
add
add
add
arpl
outsl
add
outsb
add
arpl
je
imul
add
add
arpl
outsl
add
outsb
add
arpl
je
add
add
add
add
outsl
add
imul
add
add
jb
jb
outsl
add
and
and
and
and
add
add
add
outsb
add
add
jb
jne
jo
je
add
add
jns
jae
je
add
and
arpl
popa
add
add
add
add
popa
add
add
imul
and
outsb
add
insl
add
add
add
add
arpl
arpl
add
jae
and
add
outsb
add
add
add
add
data16
jb
and
data16
jne
insb
add
add
add
outsb
add
popa
add
add
add
jb
add
insl
add
outsb
add
add
add
insb
add
jo
bound
outsl
add
jb
add
add
add
jae
and
outsb
add
je
and
jae
jne
jo
jo
outsl
add
je
and
dec
add
outsl
add
jae
adc
add
outsb
add
je
and
outsl
add
add
and
arpl
insb
add
jo
bound
outsl
add
jb
add
add
add
jne
and
daa
add
add
add
jae
and
popa
add
add
popa
add
add
add
add
outsb
add
and
jne
jae
add
add
jns
and
popa
add
outsl
add
add
jb
and
data16
jb
insl
add
add
add
imul
add
add
outsl
add
je
jb
outsl
add
add
jne
jae
je
and
push
add
and
popa
add
add
popa
add
add
add
outsl
add
and
jb
add
outsl
add
imul
and
arpl
outsl
add
je
jb
outsl
add
add
jb
outsl
add
and
add
arpl
imul
add
add
add
add
add
add
arpl
imul
add
outsl
add
add
add
outsl
add
add
outsl
add
outsb
add
add
add
add
arpl
imul
add
outsl
add
add
add
popa
add
and
outsb
add
and
arpl
outsl
add
je
jb
outsl
add
add
jb
jb
outsl
add
and
insb
add
popa
add
add
add
add
add
imul
add
outsl
add
add
add
jb
outsl
add
and
je
push
add
je
jb
add
insl
add
add
add
js
jo
add
je
imul
and
jbe
add
jae
imul
and
and
add
add
jne
je
and
data16
jne
outsb
add
add
add
add
insb
add
popa
add
add
add
outsb
add
add
je
and
add
jae
imul
add
add
outsb
add
add
insb
add
arpl
imul
add
dec
add
add
add
add
outsl
add
je
imul
add
add
add
popa
add
outsb
add
je
and
jb
add
add
add
imul
pop
add
jbe
add
ja
jb
imul
outsb
add
and
data16
insb
add
and
data16
imul
add
add
popa
add
outsb
add
je
and
jb
add
add
add
jb
arpl
push
add
pop
add
popa
add
outsb
add
je
and
ja
jb
imul
and
je
outsl
add
add
jb
arpl
push
add
adc
dec
add
jbe
popa
add
add
add
jb
arpl
push
add
and
je
jns
jo
add
add
outsl
add
jo
jb
add
jae
imul
and
add
jb
outsl
add
xor
inc
add
outsb
add
outsl
add
add
jb
add
je
add
add
add
jo
outsl
add
popa
add
jns
and
data16
insb
add
and
je
outsl
add
add
popa
add
add
add
add
and
data16
insb
add
and
dec
add
add
add
add
jae
arpl
add
add
add
add
add
arpl
add
push
add
push
add
add
push
add
inc
add
add
inc
add
add
dec
add
insl
add
add
dec
add
data16
add
jo
add
add
push
add
add
outsb
add
add
outsb
add
add
inc
add
insb
add
add
push
add
add
add
insb
add
add
inc
add
add
add
add
outsl
add
or
dec
add
data16
jb
insl
add
je
imul
pop
add
outsl
add
data16
jb
insl
add
add
add
add
add
outsl
add
add
dec
add
add
popa
add
arpl
add
add
add
add
add
add
add
bound
outsl
add
je
push
add
add
add
add
pop
add
add
add
outsl
add
add
add
insb
add
add
add
and
je
outsl
add
add
insb
add
add
add
and
je
outsl
add
add
add
insb
add
add
imul
add
add
push
add
bound
add
dec
add
push
add
popa
add
arpl
add
add
add
add
add
add
outsl
add
add
insb
add
push
add
add
insb
add
jae
add
add
add
add
outsl
add
add
add
add
add
add
add
add
jb
je
add
add
insb
add
add
popa
add
outsb
add
je
and
add
popa
add
and
popa
add
add
outsl
add
insl
add
add
add
add
imul
jae
adc
inc
add
push
add
add
add
add
add
imul
jae
add
add
outsb
add
pop
add
imul
popa
add
jae
pop
add
popa
add
outsb
add
outsb
add
sub
inc
add
imul
add
add
add
add
jb
imul
and
dec
add
popa
add
add
add
je
and
add
je
popa
add
add
add
add
je
jb
add
insl
add
inc
add
jb
outsl
add
and
arpl
jb
add
je
imul
and
ja
imul
outsl
add
and
add
jbe
imul
and
arpl
outsl
add
je
add
je
sbb
inc
add
jb
outsl
add
and
arpl
jb
add
je
imul
and
ja
imul
outsl
add
and
arpl
insb
add
jae
jae
sub
inc
add
outsb
add
outsl
add
add
outsl
add
jne
jae
and
popa
add
add
add
popa
add
insb
add
add
add
jb
and
imul
imul
bound
insb
add
and
ja
imul
outsl
add
and
inc
add
outsb
add
add
insb
add
add
add
add
add
popa
add
and
outsb
add
and
jo
popa
add
add
je
and
ja
imul
outsl
add
and
push
add
jb
add
je
and
add
jbe
add
and
imul
outsb
add
je
and
popa
add
add
popa
add
add
je
and
outsl
add
and
daa
add
add
add
outsb
add
je
and
push
add
and
popa
add
and
dec
add
add
add
push
add
add
outsl
add
insl
add
add
popa
add
outsb
add
je
and
arpl
push
add
add
add
imul
bound
insb
add
and
imul
dec
add
push
add
outsl
add
and
outsl
add
and
dec
add
dec
add
add
and
inc
add
outsb
add
outsl
add
add
popa
add
add
add
and
jbe
imul
bound
insb
add
and
ja
imul
outsl
add
and
insl
add
add
insb
add
add
add
jne
and
imul
add
and
outsl
add
je
and
outsl
add
and
jb
popa
add
add
adc
dec
add
outsb
add
and
imul
add
je
add
add
add
arpl
add
add
jne
bound
sub
add
jne
and
imul
outsb
add
je
and
imul
insl
add
outsb
add
sbb
dec
add
je
and
add
outsl
add
add
and
je
imul
jb
jae
and
popa
add
popa
add
insb
add
bound
insb
add
inc
add
jb
outsl
add
jo
dec
add
add
js
and
arpl
popa
add
outsb
add
je
and
bound
add
add
add
jae
and
je
push
add
add
and
jo
jb
add
imul
jae
and
insl
add
outsb
add
and
imul
insl
add
add
and
inc
add
outsl
add
jo
dec
add
add
js
xor
add
outsb
add
je
and
arpl
jb
add
je
add
add
outsl
add
insl
add
add
add
outsl
add
add
inc
add
and
data16
jb
insl
add
and
popa
add
add
add
jne
jb
jb
add
je
insb
add
and
popa
add
je
imul
sub
inc
add
add
outsl
add
je
jb
outsl
add
add
popa
add
outsb
add
je
and
push
add
and
imul
add
add
add
jae
and
imul
and
jo
popa
add
add
je
and
push
add
popa
add
insb
add
and
je
outsl
add
add
imul
and
popa
add
add
add
insb
add
and
outsl
add
and
inc
add
outsb
add
add
je
jae
adc
dec
add
and
push
add
and
data16
jne
outsb
add
add
outsl
add
and
and
add
outsl
add
add
outsl
add
je
add
je
sub
add
jae
imul
jbe
add
add
add
add
add
outsb
add
je
popa
add
add
add
add
outsl
add
add
add
add
add
outsl
add
outsb
add
add
outsl
add
and
arpl
outsl
add
je
add
je
and
dec
add
and
je
outsl
add
imul
bound
popa
add
add
add
add
add
add
jns
jae
je
add
and
imul
je
popa
add
add
add
add
imul
popa
add
and
imul
add
and
imul
outsb
add
je
and
jbe
popa
add
add
add
arpl
outsl
add
and
imul
add
and
imul
outsb
add
je
and
jbe
popa
add
add
add
add
add
imul
and
imul
outsb
add
je
and
jbe
popa
add
add
add
popa
add
outsb
add
je
and
arpl
push
add
add
add
add
and
jae
imul
and
outsl
add
and
popa
add
and
imul
outsb
add
push
add
jae
jne
jo
jo
outsl
add
je
add
add
insb
add
jo
bound
outsl
add
jb
add
add
outsl
add
insl
add
je
pop
add
jne
je
and
outsl
add
and
jae
jns
jae
je
add
and
jb
add
outsl
add
jb
arpl
add
sbb
add
jbe
popa
add
and
add
add
and
outsb
add
je
and
popa
add
add
ja
and
add
popa
add
imul
adc
dec
add
jbe
popa
add
add
add
insl
add
add
and
jae
imul
adc
dec
add
jbe
popa
add
add
add
insl
add
add
dec
add
jae
je
pop
add
outsb
add
popa
add
add
add
insl
add
add
dec
add
jae
je
and
dec
add
add
js
sub
inc
add
imul
add
add
add
add
add
add
add
insl
add
add
dec
add
jae
je
and
add
je
popa
add
add
jb
outsl
add
and
jae
je
jb
add
insl
add
add
add
add
je
and
arpl
popa
add
popa
add
imul
and
outsl
add
je
and
outsl
add
and
bound
outsl
add
outsb
add
add
add
add
add
add
je
and
arpl
outsl
add
outsb
add
add
jne
je
and
outsl
add
and
bound
outsl
add
outsb
add
add
add
add
add
add
je
and
imul
add
and
outsl
add
je
and
outsl
add
and
bound
outsl
add
outsb
add
add
add
add
add
add
jne
je
and
outsl
add
and
insl
add
insl
add
jb
jns
and
ja
push
add
and
add
jo
popa
add
add
outsb
add
and
insl
add
insl
add
jb
jns
and
jae
je
jb
add
insl
add
add
jb
jb
outsl
add
and
jb
add
add
outsb
add
and
and
add
and
add
add
add
je
jb
add
insl
add
add
add
add
add
jb
jb
outsl
add
adc
add
jo
add
je
jns
and
imul
jb
add
add
add
add
add
popa
add
insb
add
add
add
add
add
add
add
add
add
add
outsl
add
and
daa
add
add
add
outsl
add
jb
arpl
add
add
add
outsl
add
add
outsl
add
outsb
add
add
add
add
imul
add
outsl
add
add
insl
add
insb
add
insl
add
outsb
add
add
add
jo
add
popa
add
add
outsb
add
add
outsl
add
add
insb
add
add
add
add
outsb
add
add
outsl
add
je
add
add
add
je
and
and
add
outsl
add
add
outsb
add
add
and
arpl
insb
add
jae
jae
and
jb
add
imul
jb
popa
add
add
outsb
add
add
jb
outsl
add
jo
sbb
push
add
outsl
add
add
je
jns
and
and
add
add
jae
and
outsb
add
je
and
add
imul
adc
push
add
add
popa
add
and
ja
jb
imul
and
add
jb
outsl
add
sbb
push
add
jb
add
add
add
jb
add
je
imul
and
add
jb
outsl
add
cmp
and
and
add
add
add
add
add
jb
jb
outsl
add
cmp
and
and
add
add
add
add
imul
and
imul
add
and
outsl
add
je
and
outsl
add
and
jb
popa
add
add
sub
inc
add
outsb
add
add
add
jb
imul
and
je
outsl
add
add
and
jb
add
add
add
add
add
add
outsl
add
jb
arpl
add
add
je
jb
add
insl
add
inc
add
add
imul
add
outsb
add
push
add
imul
and
arpl
popa
add
add
add
add
jb
outsl
add
and
je
push
add
add
add
and
add
add
push
add
and
imul
dec
add
push
add
add
add
and
insl
add
imul
je
push
add
add
add
insb
add
jae
jae
and
and
add
outsl
add
add
outsl
add
outsb
add
add
and
arpl
insb
add
jae
jae
and
outsb
add
insl
add
add
add
add
insb
add
add
add
and
add
imul
jae
and
add
je
and
add
add
and
outsb
add
je
and
popa
add
add
ja
and
add
jo
insb
add
arpl
popa
add
add
and
sub
and
xor
and
add
add
and
arpl
outsl
add
jo
outsl
add
add
je
and
outsb
add
insl
add
add
add
add
insb
add
add
add
and
add
imul
jae
and
add
imul
and
insb
add
jae
je
and
add
add
and
outsb
add
je
and
popa
add
add
ja
and
add
jo
insb
add
arpl
popa
add
add
sbb
inc
add
outsb
add
outsl
add
add
jb
add
je
add
add
imul
and
and
and
add
add
add
add
popa
add
outsb
add
je
and
outsl
add
add
and
data16
insb
add
and
and
and
add
add
add
add
outsb
add
popa
add
add
add
je
jb
add
insl
add
add
outsl
add
insl
add
je
and
daa
add
add
add
add
add
jae
and
outsb
add
je
and
popa
add
add
popa
add
add
add
outsl
add
jo
outsl
add
add
je
and
outsb
add
insl
add
push
add
outsb
add
popa
add
add
add
jb
outsl
add
add
je
jns
and
jbe
popa
add
add
adc
add
popa
add
add
add
jb
outsl
add
add
je
jns
and
jo
popa
add
add
add
outsb
add
popa
add
add
add
jb
outsl
add
add
je
jns
and
jbe
popa
add
add
sbb
dec
add
jbe
popa
add
add
add
add
add
add
add
add
add
outsl
add
and
daa
add
add
add
outsl
add
add
push
add
add
add
add
add
add
add
inc
add
imul
popa
add
add
jne
outsb
add
add
push
add
outsl
add
add
jns
pop
add
add
jae
add
jns
or
push
add
add
add
add
jns
or
push
add
jne
jb
jae
add
jns
push
add
jb
imul
jns
or
push
add
je
jne
jb
add
jns
sbb
push
add
popa
add
insb
add
and
je
outsl
add
add
jb
add
je
add
add
add
add
je
outsl
add
jns
sbb
inc
add
arpl
add
je
outsl
add
and
data16
jb
and
daa
add
add
add
outsl
add
add
outsl
add
outsb
add
add
popa
add
outsb
add
je
and
popa
add
jae
imul
and
popa
add
add
add
add
add
and
and
add
add
arpl
je
add
dec
add
jbe
add
inc
add
arpl
pop
add
popa
add
jne
popa
add
jns
or
inc
add
bound
jb
jne
popa
add
jns
add
add
arpl
push
add
jb
imul
dec
add
jns
add
dec
add
outsb
add
add
dec
add
insb
add
push
add
jne
add
jae
je
or
push
add
jo
je
add
bound
add
pop
add
arpl
je
outsl
add
add
or
dec
add
jbe
add
bound
add
or
inc
add
arpl
add
bound
add
add
push
add
outsb
add
add
outsb
add
add
data16
arpl
add
add
outsl
add
add
jne
jo
jo
outsl
add
je
add
add
js
arpl
add
je
imul
and
imul
jae
popa
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
bound
jae
je
jb
popa
add
je
and
inc
add
jb
outsl
add
aas
add
arpl
arpl
add
jae
and
jbe
imul
popa
add
add
outsb
add
add
je
and
popa
add
add
add
jae
and
and
add
outsb
add
add
outsl
add
add
add
add
add
add
add
add
add
data16
add
add
add
jae
jae
and
and
add
jns
jae
je
add
and
inc
add
jb
outsl
add
add
add
add
outsl
add
add
add
add
add
add
pop
add
and
arpl
popa
add
add
add
add
add
outsb
add
add
push
add
add
jne
outsb
add
je
imul
and
data16
imul
add
add
popa
add
add
inc
add
bound
add
dec
add
jb
add
inc
add
jb
add
dec
add
jns
add
dec
add
outsb
add
add
jne
insb
add
add
jne
add
add
add
add
add
je
add
inc
add
jb
outsl
add
and
arpl
jb
add
je
imul
and
jbe
popa
add
imul
je
and
outsl
add
and
jae
popa
add
add
add
jb
jb
popa
add
sub
push
add
jb
imul
je
and
outsl
add
and
jae
popa
add
add
add
jb
jb
popa
add
and
imul
add
and
outsl
add
je
and
outsl
add
and
bound
outsl
add
outsb
add
add
add
popa
add
imul
je
and
outsl
add
and
jae
popa
add
add
add
jb
jb
popa
add
and
imul
insb
add
arpl
imul
add
add
outsb
add
popa
add
add
add
popa
add
imul
je
and
je
jns
jo
add
add
outsl
add
jbe
add
jae
imul
sbb
dec
add
jbe
popa
add
add
add
popa
add
imul
je
and
outsl
add
add
popa
add
add
outsb
add
add
popa
add
add
add
popa
add
imul
je
and
outsl
add
add
popa
add
add
outsb
add
add
add
add
add
add
sub
or
and
add
outsl
add
insb
add
add
outsl
add
add
outsl
add
jbe
add
je
and
jbe
popa
add
imul
je
and
outsl
add
and
je
jns
jo
add
add
add
add
add
outsb
add
add
add
add
add
add
add
add
add
jb
data16
add
and
ja
push
add
and
arpl
outsl
add
jbe
add
je
imul
and
jbe
popa
add
imul
je
and
outsl
add
and
je
jns
jo
add
add
add
add
add
outsb
add
add
add
add
add
add
add
add
add
popa
add
imul
je
and
outsl
add
add
data16
add
adc
dec
add
jbe
popa
add
add
add
jb
add
insl
add
outsb
add
add
outsb
add
popa
add
add
add
popa
add
imul
je
and
je
jns
jo
add
add
jo
add
popa
add
add
outsb
add
add
outsl
add
add
jne
jo
jo
outsl
add
je
add
add
outsb
add
js
jo
add
je
add
add
popa
add
imul
je
and
add
jb
outsl
add
adc
add
add
outsb
add
insb
add
add
js
arpl
add
je
imul
and
and
add
jae
jae
add
je
imul
and
data16
imul
add
add
insb
add
popa
add
add
add
add
outsl
add
outsb
add
add
add
imul
outsl
add
and
bound
jns
and
jp
add
outsl
add
add
insb
add
popa
add
add
add
add
outsl
add
outsb
add
add
jbe
add
data16
add
sbb
inc
add
add
je
imul
and
jo
outsl
add
outsb
add
add
outsb
add
add
data16
add
sbb
dec
add
jbe
popa
add
add
add
outsl
add
outsb
add
add
and
outsl
add
add
popa
add
add
outsb
add
add
outsb
add
popa
add
add
add
insb
add
jae
jae
and
je
jns
jo
add
popa
add
je
xor
inc
add
arpl
add
jae
and
jbe
imul
popa
add
add
outsb
add
add
je
and
popa
add
add
add
jae
and
and
add
add
add
data16
add
add
add
jae
jae
and
and
add
arpl
arpl
add
jae
and
jbe
imul
popa
add
add
outsb
add
add
je
popa
add
imul
add
jbe
add
data16
add
or
add
je
jb
outsl
add
add
and
push
add
add
jb
imul
insb
add
add
add
add
outsb
add
je
jb
jne
arpl
je
imul
sub
inc
add
arpl
add
je
imul
and
and
add
outsb
add
add
outsl
add
add
add
add
add
je
and
and
add
add
and
add
add
add
jo
jo
insb
add
arpl
popa
add
add
outsb
add
add
jb
jb
outsl
add
xor
inc
add
jb
insl
add
je
and
daa
add
add
add
outsb
add
popa
add
add
add
jb
and
imul
outsl
add
jo
popa
add
add
insb
add
and
ja
imul
and
popa
add
add
insl
add
outsb
add
add
outsl
add
add
jb
add
insl
add
outsb
add
add
outsl
add
and
data16
jb
insl
add
je
and
daa
add
add
add
popa
add
imul
je
and
insl
add
je
push
add
add
popa
add
add
and
outsb
add
je
and
jae
jne
jo
jo
outsl
add
je
add
add
add
add
add
add
add
add
add
jae
and
outsb
add
je
and
popa
add
add
popa
add
add
add
outsb
add
add
add
and
jbe
popa
add
add
pop
add
outsb
add
popa
add
add
add
jb
add
insl
add
outsb
add
add
add
add
add
add
add
outsb
add
outsl
add
add
add
outsb
add
popa
add
add
add
jb
add
insl
add
outsb
add
add
add
add
add
add
add
outsb
add
outsl
add
add
add
add
data16
add
add
outsl
add
jns
or
dec
add
add
and
add
jb
outsl
add
and
and
add
imul
and
outsb
add
je
and
data16
jne
outsb
add
add
outsb
add
popa
add
add
add
imul
outsb
add
insl
add
adc
push
add
outsl
add
add
popa
add
jns
and
outsl
add
add
and
data16
insb
add
jae
adc
inc
add
insb
add
and
popa
add
arpl
add
jae
and
add
outsb
add
add
add
add
add
add
add
outsl
add
add
add
outsb
add
add
data16
add
imul
or
inc
add
jae
imul
add
jne
insb
add
add
outsb
add
popa
add
add
add
jne
insl
add
jb
imul
imul
jne
je
adc
inc
add
jbe
imul
outsl
add
and
bound
jns
and
jp
add
outsl
add
add
popa
add
add
and
arpl
push
add
and
add
jb
outsl
add
adc
dec
add
je
add
add
and
outsl
add
add
data16
add
and
dec
add
jbe
popa
add
add
add
insb
add
popa
add
add
add
add
outsl
add
outsb
add
add
jo
add
popa
add
add
outsb
add
add
cmp
aaa
mov
pop
fwait
cmp
add
add
jnp
add
add
insl
outsl
fs
outsl
popa
add
mov
outsl
jae
adc
add
xchg
inc
js
inc
je
insb
jae
adc
dec
insl
addr16
imul
push
add
push
push
jns
gs
add
outsb
imul
je
insl
add
add
jae
je
insb
jae
adc
dec
insb
jo
sbb
push
imul
adc
outsl
outsb
jae
add
es
outsl
outsb
je
outsl
insb
jae
adc
jo
add
inc
push
js
push
adc
dec
bound
add
pop
inc
insb
popa
jae
gs
adc
push
push
dec
inc
outsl
outsb
jae
jae
adc
arpl
gs
add
dec
gs
popa
addr16
adc
jns
dec
outsb
outsw
add
inc
push
popa
jb
popa
outsb
je
add
and
popa
jb
je
insb
jae
sbb
inc
outsl
insl
insl
inc
je
insb
add
push
dec
popa
je
add
mov
outsl
jb
jae
adc
push
je
inc
arpl
add
push
push
add
push
jb
dec
outsl
outsb
add
push
imul
sbb
push
gs
je
add
push
push
push
dec
add
pop
push
je
push
je
insb
jae
adc
bound
add
movl
add
sub
popa
jo
imul
imul
fisttpll
imul
adc
outsl
addr16
adc
gs
jo
outsb
je
jae
adc
outsb
jb
add
movsl
dec
jne
je
dec
outsl
outsb
add
fsts
fs
je
push
je
insb
jae
sbb
inc
insb
addr16
adc
fs
je
insb
jae
adc
arpl
imul
outsb
jne
add
mov
jb
outsb
je
jb
add
push
imul
add
inc
outsl
insl
insl
inc
insb
add
popl
popa
je
inc
add
dec
insl
insl
add
adc
popa
jo
push
je
insb
add
push
dec
fs
popa
jae
inc
outsl
insl
jo
outsb
outsb
je
adc
fs
insb
outsl
bound
add
xchg
dec
fs
je
gs
insl
push
inc
dec
add
push
dec
fs
jns
dec
popa
je
jbe
push
inc
dec
add
rorb
push
jns
push
inc
dec
add
sub
push
jns
inc
popa
jae
add
repz
fs
jns
push
imul
dec
fs
gs
jne
arpl
je
imul
dec
fs
js
gs
imul
fs
jns
add
in
fs
je
gs
insl
add
dec
dec
fs
bound
add
push
insb
dec
gs
jo
xor
add
push
jo
xor
adc
jae
insl
jo
gs
adc
inc
js
arpl
dec
gs
outsl
jb
add
dec
bound
pop
insl
popa
outsb
popa
addr16
adc
imul
pushf
jne
jb
jo
push
jae
add
jmp
arpl
jo
adc
inc
imul
adc
inc
jne
je
outsb
jae
adc
dec
fs
push
push
push
add
jns
fs
dec
dec
popa
outsb
fs
gs
outsl
arpl
je
adc
fs
outsl
arpl
add
or
dec
dec
dec
popa
outsb
fs
gs
je
arpl
adc
fs
jne
data16
adc
fs
je
arpl
adc
dec
fs
je
arpl
imul
adc
dec
fs
jae
imul
fs
imul
add
inc
dec
fs
je
arpl
outsl
outsb
jae
jae
adc
dec
fs
je
arpl
push
inc
inc
popa
jae
add
bound
push
gs
jne
arpl
je
imul
add
push
dec
fs
outsb
je
jb
gs
add
bound
inc
jne
je
insl
push
jb
outsb
jae
popa
jb
outsb
je
jb
js
add
out
dec
fs
js
gs
imul
add
insl
dec
fs
outsl
arpl
je
popa
outsb
fs
add
decb
inc
outsl
insl
jo
outsb
outsb
je
adc
je
inc
jb
gs
inc
popa
jae
add
inc
dec
fs
dec
dec
popa
outsb
fs
gs
adc
dec
fs
inc
push
inc
outsl
outsb
outsb
arpl
outsb
add
mov
jo
jns
inc
inc
add
fs
fs
gs
jns
adc
push
inc
insb
imul
dec
fs
push
inc
fs
jae
add
in
fs
jae
imul
insl
bound
jae
adc
inc
insb
outsl
bound
push
jb
je
arpl
jae
adc
fs
gs
jne
arpl
je
imul
je
arpl
jae
adc
dec
fs
push
je
add
lods
dec
fs
outsl
fs
dec
dec
inc
add
add
fs
adc
fs
je
xor
adc
dec
fs
jne
je
jo
jb
inc
outsl
jb
inc
popa
je
add
iret
dec
fs
jne
push
arpl
imul
addr16
adc
fs
push
dec
add
scas
dec
fs
jne
push
arpl
imul
fs
gs
fs
imul
fs
outsl
outsl
imul
popa
outsb
popa
addr16
adc
fs
outsl
outsl
imul
adc
fs
dec
imul
gs
outsl
jb
popa
jae
add
adc
push
push
dec
add
lea
pop
popa
jb
add
out
dec
fs
gs
gs
dec
dec
popa
outsb
fs
gs
adc
push
gs
adc
gs
fs
popa
data16
inc
dec
fs
popa
jae
add
xlat
dec
fs
push
add
xor
dec
push
push
push
dec
gs
fs
outsb
outsw
add
add
xor
push
bound
outsw
add
outsl
add
gs
push
add
push
outsl
jo
movb
inc
insb
imul
addr16
inc
insb
imul
je
add
outsl
insb
outsl
jb
or
inc
je
inc
popa
arpl
inc
outsl
outsb
je
inc
push
je
cmove
inc
push
dec
push
pop
inc
dec
inc
push
push
inc
push
or
outsb
je
inc
outsl
insb
outsl
jb
or
insb
push
imul
js
or
outsb
je
dec
imul
inc
outsl
outsb
je
dec
popa
insl
gs
or
popa
outsb
jae
push
gs
data16
outsb
je
push
je
insb
or
push
dec
insb
fs
jb
popa
je
dec
jb
gs
or
inc
jb
popa
je
pop
or
jb
inc
jb
popa
je
push
dec
outsb
push
push
inc
outsl
jb
push
push
imul
jb
outsb
arpl
pusha
or
je
imul
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
and
inc
add
add
add
add
add
add
add
add
and
inc
add
add
add
add
add
add
add
add
and
inc
add
add
add
add
add
add
add
add
and
inc
add
add
add
add
add
add
add
add
add
add
xor
add
push
add
add
add
add
add
add
add
xor
add
pop
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
call
pop
pop
mov
pop
mov
pop
mov
pop
cmpb
jne
mov
pusha
lea
push
xor
pushl
mov
mov
call
jmp
mov
popl
add
popa
lea
push
call
call
jmp
popl
add
jmp
add
jb
gs
xor
cs
insb
add
cmpsl
add
add
lea
lods
or
je
mov
mov
rep
jmp
add
inc
add
dec
mov
add
movsl
xor
add
push
push
pushl
push
call
mov
mov
add
push
push
call
add
mov
xor
lea
and
mov
mov
addr16
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
je
mov
or
je
add
mov
add
sar
rep
add
jmp
mov
push
mov
push
mov
add
mov
mov
mov
mov
mov
mov
pop
pop
mov
add
mov
mov
mov
mov
fstcw
lea
push
push
push
push
push
mov
add
push
push
push
push
call
push
ret
push
mov
pusha
push
mov
mov
cld
mov
mov
inc
mov
inc
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
jae
xor
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
je
push
sub
mov
pop
mov
inc
jmp
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
sub
jne
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
push
mov
sub
rep
pop
jmp
dec
shl
mov
inc
mov
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
cmp
jae
cmp
jb
inc
push
mov
sub
rep
pop
jmp
cmp
ja
add
push
mov
sub
rep
pop
jmp
mov
inc
xor
shr
je
adc
mov
push
mov
sub
rep
pop
jmp
pop
sub
mov
popa
pop
ret
add
add
mov
and
add
sub
cmpw
jne
pusha
mov
mov
mov
add
add
mov
lea
lea
mov
mov
call
stos
add
cmpl
jne
popa
ret
pusha
mov
mov
add
mov
add
call
mov
cmp
je
add
jmp
sub
sub
shr
add
add
movzwl
shl
add
add
mov
add
mov
popa
ret
push
mov
lods
or
je
xor
mov
shr
jae
xor
dec
jne
jmp
xchg
pop
ret
cmpsl
push
and
cmpsl
push
add
nop
adc
out
je
jne
dec
add
cmpb
mov
add
add
add
add
add
xchg
inc
dec
add
add
add
lock
xor
add
add
add
or
je
aad
scas
rep
xor
scas
aaa
mov
pop
xor
inc
leave
sbb
mov
jne
or
dec
in
mov
lret
enter
jg
loope
icebp
pop
cmp
pop
mov
das
mov
mov
jnp
mov
xor
scas
mov
out
imul
or
ret
pop
lcall
adc
xchg
inc
loop
test
lret
push
jno
test
ss
pop
es
pop
mov
gs
mov
sbb
and
hlt
mov
clc
out
cmp
aas
jl
stos
xor
mov
mov
mov
mov
xchg
fidivl
hlt
int3
jb
pop
ja
dec
sub
jne
or
add
scas
and
inc
loop
add
cld
shr
fdivl
xchg
hlt
sub
add
add
add
or
add
add
dec
add
and
xchg
inc
dec
add
xor
sub
jp
add
or
imul
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
jp
add
or
mov
add
jl
add
jl
add
jl
add
jl
add
or
jnp
add
or
sarb
add
or
fistpll
add
or
jmp
jl
add
jnp
add
or
add
jns
or
or
cmpl
sbb
or
mov
outsl
insb
gs
jne
xor
cs
insb
add
jbe
jo
xor
cs
insb
add
gs
xor
fs
insb
add
gs
xor
fs
insb
add
imul
insb
add
jb
imul
add
jbe
jo
xor
cs
insb
add
xor
cs
insb
add
gs
jne
xor
cs
insb
add
insl
arpl
xor
fs
insb
add
outsb
imul
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
add
add
add
add
jl
add
add
add
jl
add
add
add
jl
add
add
add
jl
add
add
add
add
sbb
or
add
add
xor
add
add
add
or
add
add
push
jge
add
add
add
or
add
add
add
push
jns
inc
jb
gs
je
imul
gs
jne
jb
push
popa
insb
jne
inc
js
add
add
je
gs
outsl
popa
jb
push
jns
add
add
gs
je
push
imul
inc
add
add
jb
popa
insb
imul
arpl
add
jb
jne
jb
push
popa
insb
jne
inc
add
add
addr16
gs
popa
insb
jne
inc
js
add
add
push
popa
jae
dec
gs
inc
jb
add
add
gs
jb
popa
jns
je
dec
dec
outsb
fs
add
pop
push
jb
arpl
outsl
jne
gs
jbe
outsb
je
add
dec
outsb
je
jb
gs
jo
outsb
inc
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
xor
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
cmp
inc
and
add
fisubs
push
adc
and
dec
add
and
stos
sub
lock
push
outsl
and
loopne
lods
adcb
mov
and
inc
je
inc
dec
int3
dec
jle
mov
dec
inc
or
push
push
je
imul
inc
add
add
xor
pushf
sub
test
or
test
sbbl
subb
add
movsb
loope
inc
xor
mov
adc
add
xchg
mov
add
cmp
js
je
mov
mov
insb
jb
cmp
fs
add
xchg
push
enter
dec
jb
cmp
xorb
enter
jb
cmp
sub
sub
cld
and
loopne
fmul
fdivs
jb
sbb
push
orl
mov
outsb
call
add
inc
and
fdivl
add
mov
push
xor
pop
jmp
sub
xor
add
xor
sbb
sbb
and
rol
push
mov
adc
push
int3
push
call
mov
test
jne
xor
add
pop
lret
mov
push
add
or
rcl
ret
femms
lea
loopne
mov
nop
push
ds
addl
aas
les
xor
push
pop
nop
mov
cmp
cmp
pop
sbb
fadds
xor
add
dec
mov
mov
push
pop
or
rclb
xor
and
inc
cmp
add
push
mov
push
xchg
push
adc
mov
nop
aas
push
push
orb
call
xchg
add
inc
push
jmp
mov
inc
mov
jns
adc
jne
add
adc
cmpsl
fst
daa
xchg
aas
pusha
or
jmp
dec
add
dec
cmp
pop
aam
jge
fbstp
loope
call
test
pop
pop
pop
add
je
repnz
add
xor
jge
sbb
add
call
fmul
ja
popl
and
sbb
or
sub
add
cltd
gs
xchg
or
fdivs
add
je
fbstp
push
iret
add
sbb
sub
sahf
test
push
add
adc
sar
lock
cmpsl
sub
or
push
or
jle
jge
add
bound
fcmovbe
lock
rclb
incl
jecxz
adc
out
adc
add
push
sbb
nop
out
cmp
mov
test
cmp
or
sarl
fs
adc
and
mov
add
not
dec
clc
jp
fs
flds
sar
add
popa
add
pop
push
push
push
lds
jns
lret
and
cmp
add
movsl
fsubl
dec
adc
dec
in
or
push
data16
push
nop
sbb
jl
pop
lds
adc
rolb
push
push
and
jae
and
out
ja
dec
sbb
mov
je
push
xchg
jg
pop
fisubrs
jne
mov
dec
xchg
add
movl
filds
cwtl
jmp
pusha
aas
add
add
sub
push
psubsw
or
adc
xchg
sbb
adc
cmpsb
mov
dec
test
pop
ljmp
add
xchg
add
je
xchg
and
xchg
add
sub
dec
inc
cmc
xor
cmp
or
add
xchg
nop
jbe
add
fldl
call
sarb
push
pop
inc
adc
sub
push
test
shrl
jmp
leave
xor
mov
mov
add
imul
xor
add
and
adc
sahf
add
add
pop
leave
cld
testl
xchg
test
add
sbb
jae
fisttpll
loope
out
fiadds
call
dec
inc
loop
adc
lods
xor
mov
add
aas
push
xchg
add
xor
pop
aam
cmp
add
sub
jl
xlat
push
add
call
ja
add
inc
arpl
test
leave
or
out
inc
fs
adc
call
and
int3
sbb
cmpsl
int
pop
movsl
and
cmp
add
aaa
and
or
pop
mov
sub
inc
aas
cmpsl
xchg
gs
add
bound
orb
jne
ja
add
mov
loopne
lea
sub
pushf
es
pop
call
icebp
push
xor
addl
mov
push
mov
and
jmp
add
push
orb
test
lcall
sub
imul
dec
rcrb
cmpsb
jp
and
cmpl
add
adc
sbb
add
adc
inc
adc
add
push
adcb
cwtl
sbb
or
jnp
push
out
cmp
add
jae
ror
push
je
add
mov
jmp
int3
inc
mov
mov
add
mov
ret
cs
pop
es
dec
add
push
cmp
lods
cmp
pop
add
mov
addl
push
fs
pushl
int3
andb
xor
add
push
jle
add
pop
xlat
out
bound
pop
sub
test
clc
sysret
mov
xchg
cmp
das
mov
add
xor
pusha
rolb
add
jo
dec
daa
sbb
repnz
movb
pop
add
add
xchg
xchg
ret
cs
jmp
mov
add
dec
stc
repnz
test
int3
test
sbb
xchg
enter
sub
out
mov
hlt
leave
adc
dec
cmp
aad
cmp
mov
in
cmp
pop
add
je
xorl
in
jne
xor
add
push
push
lret
inc
bndldx
in
fistpl
loopne
push
cmp
xchg
adcl
dec
or
cmp
cmp
add
test
leave
jns
add
xchg
stc
add
dec
aad
int
adc
push
jmp
pop
movsl
rcr
outsl
sub
negb
or
lea
add
mov
add
mov
add
pop
add
add
push
cld
adc
cmp
call
add
adc
mov
addl
lock
sbb
pusha
add
adc
movl
mov
ret
or
add
cmp
leave
test
enter
or
es
add
sbb
loop
cwtl
in
add
add
adc
or
push
test
sub
rolb
and
xchg
add
loopne
dec
incb
adc
dec
fnstenv
loope
and
inc
nop
jecxz
push
out
cs
add
push
sbb
scas
add
xor
adc
ret
add
and
mov
testb
js
sbb
cmpsl
rorb
sub
cmp
push
mov
mov
call
fidivs
push
xor
mov
or
and
sti
fadds
pop
and
add
lock
pop
add
lret
push
pop
andl
movsb
mov
leave
clc
dec
rcl
mov
popaw
ror
aas
jle
add
aaa
sub
repz
xor
add
jge
push
xchg
imul
loopne
sbb
add
jmp
and
inc
jne
adc
sub
daa
in
xchg
or
ljmp
add
xor
or
or
je
imul
xabort
mov
pop
add
dec
xchg
xor
inc
cmp
pusha
shll
rcll
dec
es
mov
add
movsb
xor
dec
add
dec
nop
hlt
lcall
inc
pop
rcrl
xchg
jecxz
inc
adc
insb
add
sub
cmp
bound
or
or
adcl
jl
add
dec
sbb
mov
mov
push
jle
cmp
andl
adc
cmp
mov
add
adc
pop
add
xchg
scas
sbb
les
nop
imul
lea
cld
movsl
push
jg
cld
or
or
inc
mov
and
addr16
roll
fsubs
es
add
sub
loopne
or
add
je
nop
aas
dec
pop
pop
sbb
iret
xor
adc
cmp
dec
loopne
insl
cmc
outsl
out
push
xor
ds
pop
incb
adc
xchg
int3
leave
call
call
imul
jne
cmp
or
mov
add
sti
xor
add
xchg
mov
add
push
add
in
push
dec
subb
dec
pop
pop
ljmp
shlb
loope
je
add
addb
insb
jle
xor
dec
xlat
sbb
jg
pop
lods
add
pop
jle
out
shr
add
push
xchg
or
dec
fsubs
add
sbb
lcall
add
cmp
or
test
add
mov
mov
vucomisd
iret
mov
cmp
pusha
xchg
jmp
add
cltd
xor
xchg
add
pop
pop
xchg
dec
lret
add
repnz
mov
imul
lods
jno
test
pop
sub
xor
mov
pop
pop
movsl
or
stos
or
cltd
cld
jmp
leave
push
pop
push
xor
and
cmp
in
sti
add
mov
adc
sub
inc
test
jge
xor
adc
add
ret
cmpsl
mov
push
bnd
clc
sub
prefetch
dec
add
jl
hlt
clc
sahf
add
cmp
cs
jbe
or
push
dec
inc
cs
or
push
imul
add
call
push
rol
cmp
cmp
addb
pop
push
and
xchg
sbb
push
mov
xor
sbb
xchg
inc
jmp
cmp
dec
andb
pop
test
and
add
cmp
cli
sub
sub
lea
test
and
fdivrs
add
mov
inc
add
cmc
test
add
ret
lock
movsb
inc
inc
add
jmp
cwtl
punpckhbw
and
cmp
push
add
cwtl
jmp
push
or
addr16
test
dec
aas
or
ret
inc
sbb
add
push
or
cmpsb
imul
or
cmp
sub
jno
push
adc
add
leave
inc
or
mov
imul
mov
test
add
cwtl
add
pop
add
mov
cmp
or
mov
mov
jmp
aas
inc
mov
insl
pop
xor
push
or
dec
and
add
and
lcall
sbb
pop
pop
mov
dec
in
add
out
mov
dec
jg
add
js
push
icebp
or
add
add
cmp
jl
xlat
sub
inc
pop
lds
cmp
loop
pusha
add
addr16
orl
sahf
add
sub
sbb
imul
pop
pusha
adc
add
testb
xchg
stos
push
int3
lcall
inc
fcomps
mov
sbb
push
add
push
incb
add
dec
xor
movl
xchg
addr16
cs
pop
and
ret
push
push
sbb
nop
adc
xor
add
add
xchg
sbb
adc
mov
pop
xlat
or
movsb
push
xchg
fistpll
add
js
mov
gs
cmp
lcall
and
jmp
sahf
lret
dec
orb
inc
mov
or
dec
arpl
add
xor
and
cmp
sub
cs
pusha
cmc
fadds
sub
mov
andl
jmp
add
jmp
cmpsl
xchg
mov
pop
repnz
cld
jbe
sbb
xor
andb
add
mov
add
insb
subb
inc
clc
add
ljmp
dec
add
jge
movsl
cmp
clc
adc
add
lret
xchg
call
add
dec
jle
jge
xchg
or
and
das
and
call
xlat
bound
ret
dec
test
mov
rorb
nop
mov
or
cmpb
mov
cmpsb
inc
std
add
sbb
mov
adc
push
int3
add
adc
out
dec
dec
cwtl
loopne
lock
scas
add
pop
call
add
sub
mov
and
jge
sahf
or
test
ret
es
int3
enter
je
add
into
fcmovnu
lret
add
add
loopne
jecxz
and
sub
push
and
out
mov
rcrb
leave
add
adc
psubb
add
nop
push
xor
enter
xlat
test
add
cmp
ja
je
pop
sub
vmread
rep
incb
cmpl
add
movsb
xchg
mov
jl
xchg
sbb
adc
std
sbb
pusha
lret
push
lcall
add
xchg
adc
add
nop
rorl
jns
jbe
cmpb
jne
aam
jnp
rorb
out
add
and
inc
lock
inc
push
adc
test
xorb
or
andb
cmp
int
pop
dec
into
cmc
adc
mov
or
ja
js
xor
push
push
lea
push
lods
and
ja
mov
repz
int
insl
cmp
mov
push
in
jl
and
jmp
pop
xor
xchg
add
cmpl
jae
movzwl
imul
cmp
add
add
shrb
or
mov
sbb
js
mov
in
pusha
pop
js
in
or
mov
mov
fwait
pop
pop
xlat
insb
movl
call
std
fists
pop
stos
add
je
and
outsb
mov
shlb
cmp
mov
pop
fcom
stos
mov
mov
add
aaa
aas
jp
mov
pcmpeqd
add
add
sbb
push
test
loopne
jle
cmp
push
inc
into
test
shlb
sbb
fnstenv
inc
dec
scas
jne
add
sbb
repnz
loop
fildl
sar
push
add
mov
fiaddl
mov
or
sbb
jne
push
adc
in
add
dec
out
and
and
add
sbb
mov
inc
stos
cmp
add
std
cld
or
fiadds
sbb
nop
cmp
loopne
adc
add
mov
sbb
rep
roll
adc
xor
add
jno
in
imulb
mov
xchg
cwtl
adc
jno
cld
iret
add
sub
mov
movsb
fildl
or
jns
lcall
add
mov
jae
add
mov
stc
cmp
mov
dec
mov
fnstenv
roll
mov
ret
rorb
nop
sub
imulb
mov
jmp
int3
lods
add
sbb
jl
add
add
push
inc
addb
sti
and
mov
sub
or
mov
and
add
popa
pop
pop
rcrb
xor
sub
enter
dec
test
pusha
and
jmp
add
xor
in
xor
push
ja
add
clc
subl
add
xor
or
mov
xor
sbb
pop
int
add
aam
adc
testb
add
fdivrs
cmp
sub
in
inc
push
repnz
pop
bt
je
fisttps
popa
jb
mov
add
adc
add
ret
or
mov
inc
not
jmp
test
jmp
in
je
inc
add
jne
pop
and
cli
cmp
jae
dec
add
add
inc
add
ss
fsubrs
rolb
cld
dec
cld
nop
add
mov
lods
sbb
adc
ret
je
fsubs
or
add
das
rolb
loopne
clc
add
push
push
sbb
add
and
xor
push
mov
and
fiadds
pop
jne
loop
cmpsl
or
add
sub
cwtl
add
and
pop
mov
popa
add
pop
aaa
add
xor
jae
ss
push
add
das
push
add
repz
pop
dec
adc
push
push
pushl
roll
and
inc
hlt
mov
in
push
or
mov
enter
lcall
sub
sbb
add
jno
ret
dec
xchg
clc
and
cmp
or
mov
sub
dec
add
push
inc
push
inc
pop
inc
add
outsl
jb
popa
outsb
roll
fdivl
jg
sbb
push
push
dec
cmp
add
jae
imul
push
jne
dec
rcr
mov
mov
xlat
add
jo
xor
mov
inc
add
adc
cli
jecxz
mov
xchg
testl
jge
xor
ss
mov
cli
add
sbb
add
inc
loopne
push
divb
jmp
gs
add
dec
or
dec
call
inc
or
leave
sub
popl
or
lock
cltd
insb
xchg
pop
add
mov
call
push
loop
loopne
stos
mov
and
fcomp
adc
add
cmpb
pusha
mov
in
leave
add
pusha
push
add
pop
push
sar
pop
addr16
inc
sbb
in
cmp
hlt
sbb
andl
int3
cmpsb
divb
rolb
mov
je
cmp
lea
adc
mov
push
fldenv
ret
mov
test
push
sbb
movsl
dec
shrb
jge
inc
add
nop
push
add
add
repnz
test
pop
pop
fs
ret
add
subps
cld
jns
mov
add
inc
cmp
add
inc
popl
sbb
or
pop
faddp
mov
call
pop
xor
pop
push
loope
sbb
lock
psadbw
hlt
cs
pop
add
outsb
cmp
or
cmc
or
add
pop
and
add
or
push
in
jecxz
lods
add
je
xchg
sbb
mov
aaa
xor
push
inc
and
rorl
add
push
or
jp
lret
jg
ds
mov
popa
jne
cmpb
sbb
adc
imul
cli
in
push
push
call
push
sbb
fistpl
push
push
add
push
add
mov
cltd
shl
dec
jnp
sbb
push
mov
jg
sbb
or
clc
push
adc
jl
outsl
add
inc
add
add
or
sub
add
cmpsb
add
push
loope
imul
pop
fmuls
cmp
pop
mov
adc
inc
ja
hlt
fiaddl
lock
push
addps
orb
repz
lret
xor
mov
sbb
cmpsl
add
outsb
cld
call
dec
dec
or
mov
test
push
jmp
and
out
mov
add
cmp
cli
out
push
je
pusha
stos
mov
loopne
mov
jno
ja
imul
add
sbb
add
and
mov
mov
or
sub
test
push
push
mov
movb
mov
cmc
cmp
inc
rorl
add
fstpt
sbb
stos
mov
shl
push
roll
jl
cmpsl
and
out
mov
inc
add
addb
outsl
pusha
aad
pop
add
movl
stc
or
mov
jecxz
lcall
inc
fimull
inc
sub
movsl
mov
nop
add
mov
sub
hlt
add
xorl
sbb
and
subb
call
addr16
add
mov
fiaddl
imul
je
clc
push
inc
mov
add
cmp
jne
fs
aam
push
imul
inc
add
xchg
into
sbb
add
shrb
rolb
dec
das
pusha
sub
adc
mov
fldl2t
sbb
xchg
sarb
cmp
sti
sbb
adc
andb
pop
adc
andl
adcb
mov
pop
mov
call
call
add
cmp
or
mov
dec
cs
cltd
add
pop
xor
mov
mov
call
shll
cmp
ds
push
sbbl
mov
enter
pop
dec
gs
data16
mov
andl
push
inc
or
pusha
add
xchg
lock
dec
push
mov
leave
xor
js
nop
push
cmp
adc
adc
lea
aam
pop
sub
add
inc
or
aam
mov
xorb
lods
shlb
add
xchg
mov
jo
in
stc
dec
xor
movq
pop
sub
inc
push
sub
mov
sbb
clc
jno
add
aas
orl
sub
push
cmp
adc
sub
inc
adc
push
pop
and
cmp
std
xor
push
mov
mov
enter
leave
jp
int
and
iret
call
sbb
into
sahf
adc
fcomps
or
lret
sub
lea
jecxz
add
add
and
add
es
push
cmc
loop
dec
pop
cmp
loopne
cmp
adc
andb
cmp
rclb
popl
je,pn
sbb
call
arpl
add
xchg
pop
pushf
or
aaa
add
dec
or
adc
cmp
sahf
push
and
adc
je
pop
ja
in
xchg
jecxz
push
mov
sbbb
inc
cmp
dec
jne
jo
push
add
sbbl
pushl
jg
add
cmp
mov
roll
push
xchg
cmpl
push
or
orb
jmp
test
fstpt
dec
add
xor
add
xchg
add
shlb
out
sahf
mov
pop
mov
mov
add
cmpsb
or
scas
mov
pusha
inc
mov
dec
add
xor
fcmovnbe
js
pop
add
xor
or
repz
add
add
loopne
sbb
fadd
sub
movsl
pusha
add
mov
pop
jge
mov
movsl
popl
or
test
sbb
movsb
adc
add
test
aaa
mov
jge
je
mov
jmp
loopne
sub
rcrb
add
pop
in
mov
xorb
xchg
jp
add
jno
add
jne
cli
and
ret
fxch
rcll
sub
adc
call
sub
sbb
xchg
add
push
shll
cmp
cmpsb
add
sbb
dec
xchg
test
enter
nop
cmp
and
add
arpl
mov
xor
orb
repnz
adc
push
xor
mov
or
push
xchg
sub
mov
decl
and
mov
push
pop
addl
andb
fs
lea
fiaddl
sbb
add
push
and
aaa
daa
add
dec
pop
sub
fcomps
mov
or
mov
or
xor
add
push
call
sarb
aaa
fiadds
add
ret
and
out
sbb
adc
xorb
and
inc
push
or
mov
mov
pop
aas
add
jmp
sbb
or
mov
jne
jo
outsb
dec
add
push
ds
add
insb
lds
or
pop
mov
inc
or
lock
and
mov
push
pop
add
cmp
cs
jns
cmp
add
pop
push
jg
and
ljmp
adc
push
sub
or
cmp
pusha
lret
mov
add
add
insb
sti
cmp
jmp
mov
outsl
jb
imul
cmp
addr16
arpl
xorl
sub
scas
lret
int3
insl
mov
sbb
nop
mov
xchg
lods
cmc
and
add
mov
dec
clc
dec
jl
lock
push
add
pop
push
lea
add
fcomps
adc
mov
adc
push
sbb
add
mov
mov
pop
dec
xchg
fisubrl
push
and
push
inc
jg
addb
inc
loopne
xchg
daa
mov
dec
pop
jbe
sahf
pop
rol
mov
outsb
add
jb
inc
add
and
sub
fs
ja
add
subl
adc
pop
mov
cld
loope
adc
sub
rolb
nop
mov
mov
sub
movl
imul
push
cmp
in
sar
repz
mov
ljmp
push
and
add
dec
sti
xchg
js
sub
insb
movsb
sbb
or
push
push
push
add
jnp
nop
test
or
daa
into
add
pop
xor
in
fldenv
loop
mov
add
add
push
addb
xchg
rolb
rorl
stos
sub
push
and
cmp
or
arpl
pop
xchg
or
add
imul
inc
add
and
add
xor
cmp
or
pop
mov
push
test
add
push
les
and
mov
inc
dec
inc
adc
mov
inc
or
scas
cmp
add
pop
add
push
pop
sbb
add
and
add
repnz
mov
cld
add
aas
ds
enter
loop
movsb
xor
loope
cld
cld
iret
add
xor
cli
cmp
mov
dec
sub
dec
push
xor
jbe
add
aam
xchg
pop
dec
idiv
stos
add
cmp
or
inc
mov
pop
mov
mov
add
cwtl
dec
sbb
xor
sub
xchg
and
cld
rcrb
add
jne
and
mov
ja
push
add
arpl
push
push
sysenter
pop
pop
and
jg
aam
jno,pn
out
jmp
push
add
push
push
push
test
in
or
mov
cli
das
loop
add
cld
dec
iret
sub
xor
mov
in
cli
jle
mov
into
push
mov
add
sbb
aas
and
movsl
loopne
add
icebp
cmp
mov
lret
xor
sbbb
add
cwtl
cmpl
push
shr
dec
pushf
push
xchg
add
adc
and
pop
or
dec
add
insb
rol
fsubp
test
or
inc
dec
pop
pop
ret
xor
or
mov
jecxz
scas
loope
in
mov
add
and
add
lret
pop
adc
pop
jecxz
adc
xchg
nop
add
inc
js
add
inc
loop
cmp
jo
add
in
mov
cmp
xchg
adc
imul
flds
cmpsb
clc
bswap
mov
sbb
cmp
fidivrl
pop
sub
pusha
push
sbb
mov
add
inc
in
testb
push
adc
insb
pop
pop
sahf
add
sub
push
dec
xchg
xor
cld
dec
jl
cmpb
jle
mov
iret
aaa
add
stc
add
jl
add
jg
sti
xchg
push
lock
cli
dec
inc
dec
fists
jns
dec
mov
mov
dec
cld
addl
push
inc
cwtl
icebp
sarb
xchg
mov
lret
cmp
repz
mov
ljmp
aam
test
ljmp
lcall
scas
and
jne
cmpl
or
sbb
lock
xchg
cmp
scas
mov
cld
jns
cmp
faddl
xchg
pop
xor
sar
and
cmp
icebp
jl
jmp
jbe
add
cltd
test
aam
lret
pop
push
repz
add
ficompl
cmp
leave
add
inc
pushf
aad
cmp
adc
dec
jg
loop
mov
sbb
inc
sub
jne
xor
icebp
push
mov
lods
loop
fs
aad
add
pop
xor
mov
cltd
pushf
xor
and
push
add
adc
sbb
rcll
int
cmp
mov
pop
push
jns
add
popa
xchg
jl
push
icebp
dec
add
test
add
dec
sub
in
xchg
jl
push
dec
lock
mov
add
pop
clc
mov
push
sub
or
or
add
inc
ss
decb
pop
ud0
add
jns
cmpsl
dec
jne
lcall
cmc
add
push
or
adc
jg
add
push
cld
aad
adc
or
addb
add
dec
andb
jno
add
adc
fnstcw
add
mov
mov
int3
hlt
and
das
adc
xchg
inc
lea
stc
mov
push
add
test
inc
lock
test
inc
bound
jnp
data16
mov
int3
push
mov
or
fisttpl
jmp
push
js
pop
and
mov
das
adc
sti
add
repz
push
jo
in
add
out
fidivl
add
push
mov
cmp
cmpsb
cmp
repnz
sbb
test
and
inc
ucomiss
cmp
in
rolb
mov
inc
popa
jl
orb
mov
ss
mov
adc
push
mov
push
mov
pop
add
inc
rorb
ret
es
adc
into
mov
ds
mov
fadds
sub
fwait
hlt
or
push
stos
ja
cli
add
push
xor
sub
xor
cmc
push
sbb
or
leave
in
push
push
cmp
or
mov
sbb
jecxz
lds
ficoms
or
or
lahf
push
cmp
jb
subl
jne
sbb
add
loope
hlt
mov
sub
or
add
nop
add
cmpl
subb
jno
jge
shl
mov
daa
add
adc
add
mov
jae
pop
pop
pusha
push
jle
and
mov
dec
add
sbbl
push
adc
movd
add
xor
fnstenv
sbb
xor
movsb
mov
add
xchg
enter
add
or
jne
add
lock
into
stc
jge
loopne
mov
pop
mov
cs
lock
xor
pop
pop
inc
frstor
jge
aas
and
lret
xor
push
inc
cmp
sub
add
leave
pop
pop
aad
mov
xchg
or
add
cltd
and
jno
add
sub
popf
dec
dec
and
sub
ret
iret
call
adc
sbb
xor
push
add
mov
idivb
add
sbb
add
arpl
mov
cmp
clc
pop
cltd
inc
or
push
pusha
jmp
cmpsb
dec
mov
mov
subb
push
jge
push
mov
pushf
and
int
std
add
call
data16
dec
or
fiadds
push
add
shrl
mov
add
mov
jl
out
insl
add
fimuls
shll
xor
filds
andb
jmp
pop
cmp
add
or
pop
test
push
notl
mov
pop
xchg
add
lret
dec
xchg
or
push
add
ror
push
push
orl
or
pop
arpl
mov
into
sub
mov
test
inc
mov
dec
mov
mov
fdivrs
pushf
mov
mov
daa
stos
jl
jbe
clc
cltd
and
add
pop
fisttpll
jo
push
les
add
add
fldenv
loop
cmp
add
dec
mov
daa
xor
pop
and
dec
clc
mov
push
add
dec
add
push
or
pushf
cmp
cmpsl
or
inc
pop
xchg
je
add
loope
adc
in
push
lret
sub
inc
add
inc
jno
adc
jmp
xor
filds
push
test
push
je
add
jmp
or
or
hlt
cs
and
inc
test
out
jmp
fdiv
and
mov
push
sbb
pop
jne
add
clc
xchg
or
int3
jg
cwtl
dec
cltd
xor
mov
inc
clc
adc
add
movb
sbb
jge
test
test
mov
ja
insl
cmpsl
jb
add
imul
xor
sbb
subb
je
push
js
add
add
adc
insl
add
data16
movups
ljmp
mov
mov
pop
push
ret
cwtl
xchg
add
repz
lea
jle
or
call
stos
cmp
add
rolb
add
inc
cmp
or
das
and
sub
xor
clc
scas
dec
jo
jecxz
je
fsubp
mov
fistl
and
pop
ljmp
inc
cmp
dec
movb
inc
inc
cmpsb
lods
push
inc
lock
jg
jmp
xor
fists
imul
or
jb
out
pop
push
xor
andb
pop
inc
pop
fildl
push
ja
cmp
push
inc
adc
call
dec
sub
mov
inc
jo
mov
aas
dec
loopne
inc
and
faddl
and
ret
pushf
nop
inc
cmp
add
mov
inc
enter
add
fimull
jno
int3
aam
aas
outsl
test
mov
fs
lds
pop
sbb
push
std
pop
loope
aaa
inc
dec
push
jg
add
imul
repz
sub
fiadds
and
xor
cmpb
jge
in
cmp
sbb
lahf
and
pop
inc
add
mov
lock
dec
xorb
add
adc
leave
sub
inc
sbb
sub
or
push
inc
and
rolb
cwtl
and
stos
add
or
ror
xchg
dec
loopne
fsubrs
push
je
jb
gs
jg
add
std
jae
fcoms
rolb
test
or
faddl
push
dec
cli
mov
add
inc
mov
add
clc
xchg
push
cmp
and
sbb
fsubr
cmp
call
xchg
add
lret
pop
ss
pop
imul
dec
dec
lods
cmp
rolb
pop
cmp
cld
add
add
mov
inc
jmp
mov
xchg
add
in
outsl
or
mov
hlt
ljmp
lock
adc
cld
in
xor
je
loop
add
add
jge
rcrl
arpl
js
jg
jbe
cmp
or
fists
lock
add
fwait
out
or
add
js
mov
add
push
adc
push
or
lea
je
xchg
mov
xchg
in
cmc
sahf
lock
sbb
and
clc
insl
mov
push
mov
mov
leave
js
sti
jp
pop
mov
push
xor
or
inc
jmp
pop
pop
sub
aad
ljmp
jne
sbb
dec
shl
test
dec
mov
xchg
cmp
mov
sub
or
jle
add
jmp
mov
mov
cld
add
inc
sbb
dec
gs
mov
add
orb
adc
add
jecxz
or
and
dec
dec
pop
add
or
es
add
xchg
jae
push
sub
add
or
sub
cmp
jmp
add
add
push
mov
add
fstl
add
call
leave
adc
sub
lds
pop
loope
enter
lods
push
pop
sbb
mov
ja
add
test
mov
mov
dec
jne
adc
sbbb
loopne
pop
inc
add
sub
dec
pop
jecxz
adc
jmp
push
add
and
movsb
pop
pop
push
push
sbbb
call
je
xor
pop
outsl
imul
add
pop
cli
add
lock
jl
shlb
mov
jmp
mov
jbe
jnp
sbb
aam
dec
mov
sub
xchg
and
mov
push
adc
sbb
sub
and
fs
xor
push
sbb
testb
adc
int
or
dec
les
sub
pusha
in
mov
push
push
rcrl
add
push
ret
and
mov
xchg
mov
sbb
sub
push
mov
add
push
test
or
adc
jmp
xlat
cmp
adc
xchg
rolb
es
mov
jecxz
xchg
lock
adc
stc
orl
push
inc
scas
clc
test
mov
push
add
adc
cmpsb
inc
ret
jmp
loopne
jbe
add
dec
jb
mov
pop
add
sbb
inc
mov
jnp
add
pop
nop
push
inc
aas
loope
jg
mov
repz
push
idivl
and
cs
mov
repz
xchg
lds
arpl
cwtl
add
sub
add
pop
mov
inc
push
rcrb
loopne
mov
add
int3
xor
and
lahf
adc
cmp
or
pop
jmp
lods
ret
inc
cmp
xor
xchg
pop
sbb
pop
cld
inc
fwait
cmp
in
sub
adc
mov
dec
add
mov
cwtl
or
and
mov
cltd
or
sub
push
mov
pop
add
push
or
loop
push
add
mov
icebp
xchg
mov
pop
mov
repnz
mov
add
jne
cs
mov
sub
sarl
add
and
shl
movsb
cmp
test
fiaddl
cwtl
jp
rolb
pop
cmp
push
rolb
mulb
add
pop
add
je
ja
lods
pop
jno
add
addl
stc
inc
jle
sub
lock
mov
in
or
xchg
jne
es
pop
pop
add
pusha
incl
fsubrl
push
push
cmp
lret
jle
push
das
dec
cmp
enter
icebp
pop
movsb
sbb
mov
add
sub
adcb
cmp
or
jge
mov
add
mov
adc
lods
shll
daa
pop
push
loop
add
adc
push
push
nop
or
test
cmpsb
rcrl
ss
lock
mov
in
movsb
add
test
sub
sub
daa
repnz
pusha
xor
dec
sbb
pop
sub
inc
xchg
jbe
int
adc
xlat
and
dec
stos
aas
add
jl
je
xor
add
aad
lea
rcrb
fisttpl
sub
cmp
add
fmulp
shr
mov
es
sub
pop
or
ret
iret
aad
shlb
adc
test
inc
inc
add
mov
cwtl
cwtl
xor
pop
mov
enter
ret
mov
add
add
or
adcb
add
out
inc
add
jb
or
cmp
inc
push
and
adc
pop
adcb
mov
sbb
sbb
stc
add
add
mov
mov
add
aam
flds
add
adc
hlt
shl
sub
xor
cmp
or
add
mov
lds
mov
aaa
cli
jbe
cmp
or
xchg
add
jge
and
mov
mov
add
jmp
cmp
pop
mov
adc
cmp
inc
add
xchg
add
aas
push
sbb
test
int3
pop
into
sbb
ret
inc
mov
push
add
nop
sbb
enter
mov
push
mov
hlt
push
daa
lret
into
pop
ds
or
sbbl
mov
pop
pusha
fisttps
add
add
leave
repnz
bound
inc
clc
jl
cld
jp
loope
mov
add
test
lds
aad
iret
decl
js
jo
mov
push
stos
mov
out
cmp
jmp
and
test
notl
out
sbb
mov
inc
imul
cmp
jl
pop
xor
cmp
pushl
xor
pushf
popf
sti
jmp
jle
push
inc
mov
add
sbb
cld
sarb
int3
repnz
test
jge
sbb
nop
fildl
inc
add
stos
clc
scas
adc
jecxz
cmp
pushf
mov
testb
inc
aam
testl
jp
iret
shll
hlt
pop
fsub
fadds
ds
push
add
cmpsb
scas
mov
pop
add
jbe
pop
dec
dec
in
xchg
jo
in
add
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
lret
push
fwait
xchg
and
add
les
aad
bound
lret
aas
cli
dec
loopne
add
mov
adc
fs
or
mov
add
pop
loop
jo
movsl
and
push
add
mov
aad
xchg
popa
add
rcrb
or
psrld
fcmovnb
pop
adc
mov
pusha
cmpl
ss
cmp
xor
jle
mov
jmp
test
jb
add
jne
not
loopne
rolb
inc
pusha
xlat
cmp
jb
add
ja
popf
repz
addb
pop
testl
je
xor
jnp
push
jecxz
lock
mov
pusha
and
add
adc
pop
add
repnz
ret
insl
pushl
add
call
and
flds
rolb
test
adc
or
in
in
adc
roll
rorb
push
jb
hlt
cltd
mov
mov
inc
add
mov
nop
das
adc
xor
adc
and
addl
add
push
stos
push
shl
cvttps2pi
sub
loopne
incb
add
cltd
sar
add
outsl
lods
dec
ljmp
mov
out
or
call
ljmp
dec
add
dec
movsl
add
pop
aaa
in
pushf
sub
pop
sub
or
mov
or
mov
cld
ret
loopne
in
push
stc
push
cmovb
or
add
clc
pop
push
subl
and
xor
dec
out
fs
inc
aad
or
les
add
data16
std
adc
add
test
adc
xchg
mov
mov
xor
adc
jmp
fs
dec
sub
call
js
imul
push
adc
sub
push
popf
repnz
fbld
fnstenv
mov
add
and
sahf
add
mov
push
imul
mov
adc
clc
enter
lock
sbb
add
xor
inc
cmpl
jge
xor
loop
call
push
ret
inc
test
into
or
pusha
ds
push
mov
xor
mov
mov
pop
dec
andb
add
sbb
out
jg
movsl
clc
adc
push
ja
jl
xor
jge
add
or
sub
sub
sbb
mov
or
test
mov
mov
dec
adc
sar
add
sub
insl
jmp
outsb
pop
xor
pop
xor
mov
add
int3
out
add
mov
cmp
cmp
fsub
push
or
mov
mov
or
add
or
add
mov
lret
add
and
testb
dec
dec
loope
inc
push
imul
cmp
and
jle
add
fdivrs
dec
cmp
and
cltd
add
push
inc
pop
fdivs
mov
or
pusha
jmp
loope
dec
std
es
pushf
in
cmp
and
adc
enter
xchg
mov
and
test
movsb
jb
loopne
scas
nop
scas
mov
sub
jl
and
je
jo
mov
add
cmp
in
jb
cmp
sbb
int3
xorl
in
jb
or
loop
mov
call
push
clc
pusha
and
xchg
lock
call
cmpsb
adc
loopne
cltd
add
rorl
or
ret
call
mov
add
and
jnp
add
js
cmp
jae
fs
push
test
inc
femms
inc
xchg
mov
les
cmc
pop
into
mov
in
cld
sbb
pop
pop
lock
add
sbb
jl
hlt
and
cmc
xchg
test
in
jb
stc
cmp
sbb
and
cld
and
xchg
shl
enter
loop
push
cmp
out
out
call
jmp
ret
andb
out
in
jb
cmp
sbb
rolb
jl
or
and
xchg
xlat
aad
mov
sbb
sbb
and
and
ficoms
shll
cmp
inc
inc
lds
add
and
xchg
jae
add
in
jb
cmp
sbb
into
iret
xchg
push
add
jb
cmp
mov
mov
mov
and
mov
jb
cmp
mov
and
jge
add
call
out
adc
xor
add
or
insb
gs
dec
addb
push
filds
inc
jb
push
add
jle
mov
rorb
add
pop
ljmp
adc
cmp
adc
popf
push
or
std
mov
pop
rcrb
inc
js
add
jb
hlt
mov
pop
xor
mov
cmp
addb
jo
pop
loope
adc
pop
test
or
adc
dec
jne
je
dec
add
outsl
jb
cmp
andb
inc
inc
jo
jmp
or
outsb
mov
mov
add
hlt
test
or
fmuls
dec
fimull
mov
js
adc
insb
mov
inc
pop
mov
push
sub
push
add
loop
rorb
inc
je
add
jns
mov
popa
pop
hlt
pusha
and
fcoml
push
outsb
xor
shr
and
or
inc
dec
jbe
scas
data16
push
sub
mov
dec
ret
mov
cmp
push
bound
mov
popa
jmp
pusha
sbb
mov
nop
imul
mov
rol
or
decb
xchg
pop
ficoms
rcrb
jmp
insb
pop
dec
inc
cmp
and
jle
inc
pop
or
inc
push
outsb
fs
pop
nop
push
sbb
pop
mov
cmp
mov
mov
pusha
xchg
dec
ss
test
rolb
mov
hlt
cmp
xchg
add
scas
rolb
add
outsl
aam
add
mov
add
ljmp
add
mov
mov
or
repz
sub
add
mov
add
nop
fs
pop
enter
xor
arpl
mov
shrb
jo
inc
imul
sbb
das
or
push
mov
mov
pop
and
ret
jb
pop
gs
jmp
outsl
fs
pusha
and
pop
push
bound
jae
mov
addr16
sbb
or
push
cmp
push
mov
popa
loop
mov
incl
add
dec
add
cmp
shr
pop
add
repz
pop
or
cltd
add
push
adc
or
add
add
bswap
mov
mov
call
sub
add
loope
lret
pop
dec
push
xor
sub
popf
inc
jnp
ret
mov
sbb
out
dec
cmc
pop
ds
inc
xor
sub
insl
cmp
stos
adc
add
mov
xchg
mov
ret
movsl
js
scas
aaa
pop
add
emms
push
add
cmc
clc
sbb
repz
je
mov
movsb
cwtl
or
jp
ja
pop
test
sub
sub
cmp
add
movzbl
push
xlat
add
sub
pop
scas
ja
push
or
call
inc
add
sbb
pop
add
incl
and
adcb
or
jmp
fs
sub
aaa
dec
clc
insb
into
sbb
pop
shll
out
push
add
xchg
loope
push
pop
dec
hlt
cmp
fwait
cmpl
or
add
xchg
sbb
adc
fisubl
push
or
inc
movups
dec
add
clc
cld
add
lock
add
mov
fisttpl
add
je
inc
mov
xchg
cmp
sbb
js
jl
push
aas
sbb
dec
push
out
add
test
repz
test
hlt
lcall
sbb
lock
les
daa
or
test
mov
int
fstpt
push
xor
bound
jg
ss
stos
xor
pop
jmp
mov
inc
sbb
push
test
icebp
in
or
dec
das
rcll
in
dec
cwtl
insb
add
sub
and
push
cltd
inc
sub
lret
adc
push
das
adc
rcl
xor
ret
idiv
cmp
dec
pop
adc
mov
mov
sub
pop
add
xchg
flds
sbbl
push
mov
push
adc
loopne
cmpsl
mov
add
pusha
xorl
test
sbb
add
stos
lahf
into
sbb
add
push
addb
add
mov
add
sti
addr16
lahf
loopne
cmpb
adc
mov
cmp
jl
inc
push
out
mov
cmp
jne
add
test
jg
jl
add
aas
mov
jge
add
sub
popf
cmp
jne
sub
xchg
mov
sbb
pop
movsl
es
add
sbb
push
add
inc
xor
mov
push
sbb
rclb
and
inc
andl
add
xor
cmp
icebp
add
rorb
aad
cmp
pop
mov
ds
mov
add
jecxz
xor
add
push
add
loop
push
fwait
lock
add
xor
js
xchg
xchg
test
push
or
jge
adc
je
call
rolb
xchg
add
insl
clc
xor
rolb
call
sbb
add
fstpt
push
jmp
je
add
inc
or
add
enter
mov
in
adc
ret
pop
cltd
add
ds
nop
je
rcrb
mov
sbb
add
pop
cs
roll
loopne
add
lods
push
call
mov
pop
fldl
pop
dec
inc
sbb
test
subl
leave
cmp
xlat
dec
mov
repnz
inc
stc
popw
dec
fsubr
shrb
fldl
and
jl
adc
add
push
in
incb
adc
sub
mov
mov
xor
lret
lods
adc
je
jp
add
mov
decl
mov
mov
out
add
xor
aas
or
push
jb
or
call
fwait
lret
inc
lock
inc
push
sbb
push
and
cmp
dec
pop
cli
or
enter
add
pop
inc
cmpl
mov
sub
inc
push
lret
rolb
mov
pop
mov
jle
clc
orb
stos
cltd
mov
enter
and
mov
clc
cmp
add
cli
or
adc
pusha
lea
cwtl
in
addl
push
or
xor
cmp
inc
add
jno
push
push
and
xchg
pop
mov
arpl
sbb
clc
push
inc
int3
sub
jbe
jb
out
bsf
dec
in
hlt
pop
iret
sbb
push
or
call
rol
mov
lcall
fnstcw
nop
psubq
jbe
outsl
mov
fs
add
dec
add
dec
mov
add
loopne
adc
push
js
and
push
or
out
movswl
pop
mov
mov
pop
dec
into
dec
lcall
dec
fcoml
add
cmp
cltd
push
mov
xor
add
rcrl
into
add
xor
sub
xchg
add
hlt
or
pusha
out
cmp
into
pop
add
stos
jae
add
es
push
jmp
fbstp
mov
mov
addb
sbb
fisubrl
jmp
or
ljmp
adc
mov
cs
or
mov
es
lock
popa
jne
push
push
hlt
ss
add
sbb
dec
nop
mov
xor
cmpb
pop
lcall
rcll
lret
add
pop
movsl
push
es
cmpsl
pop
or
push
loopne
add
pop
movb
cmp
mov
or
sub
xor
jb
add
ja
imul
inc
in
mov
mov
sub
ret
sbbb
add
push
ja
add
rol
aam
bound
out
es
je
lods
xchg
jg
add
mov
add
sahf
push
cld
cmpb
xor
fidivs
pusha
jae
and
bound
or
add
cmpsb
enter
jnp
jb
in
or
cmp
fs
xor
dec
or
int3
and
adc
jns
add
push
jo
dec
pop
fdivrl
roll
xchg
rclb
lea
les
cltd
add
cmc
cmpsl
fs
xor
mov
sub
or
pop
jne
mov
and
testl
add
sbb
pop
add
mov
inc
add
das
push
ret
icebp
xlat
add
lea
add
leave
mov
faddl
mov
lock
cwtl
jmp
pop
lret
push
push
push
dec
inc
mov
out
add
or
jne
lea
scas
sub
icebp
xchg
dec
loopne
push
push
and
cmp
cmp
or
add
and
and
cmp
pop
or
add
testl
pop
xchg
mulb
jnp
add
hlt
bound
mov
push
js
fsts
ret
inc
jmp
push
xchg
cmp
and
push
or
lods
loopne
add
jmp
mov
dec
movsl
push
jns
sbb
push
dec
sbb
lock
ja
add
or
push
jl
or
divb
mov
loopne
add
push
add
add
pop
jecxz
iret
dec
lret
sbb
pop
inc
push
addb
inc
loopne
add
cmp
mov
add
add
xchg
mov
add
aas
push
ja
add
inc
add
loopne
add
cmc
dec
inc
call
mov
cmp
bound
loope
mov
sub
sbb
daa
adc
add
dec
cmp
mov
and
add
inc
iret
sub
movsl
xchg
add
shll
push
ret
sarl
xor
pop
adc
nop
add
jb
dec
icebp
and
fistps
sub
popa
or
pop
into
clc
xor
add
or
and
sti
add
fldcw
add
lahf
lock
dec
add
shll
cwtl
inc
add
and
adc
cmp
cli
lret
mov
rorl
sub
cmp
jecxz
add
jne
dec
outsb
shr
add
jnp
jmp
or
aas
xchg
lock
cmp
ret
shlb
pop
fildl
testb
pop
add
popa
xchg
push
inc
mov
jge
add
sub
inc
arpl
add
leave
push
xor
xor
xor
jp
or
decb
jns
xchg
in
xor
xor
push
xchg
add
or
add
lret
ja
pop
dec
sbb
mov
pop
push
pusha
adc
inc
filds
xsave
jae
sbb
add
stc
jl
add
xlat
cmp
lcall
imul
leave
pusha
imul
push
rorl
call
or
add
mov
or
pop
fwait
cmpsl
add
sbbl
add
dec
push
jo
jno
dec
add
les
add
daa
or
add
adc
shr
add
pop
call
push
cmp
xor
jne
hlt
punpckhwd
pop
clc
mov
test
enter
and
push
adc
ss
add
testb
mov
icebp
sub
imul
jl
lods
pop
clc
or
out
fdivrs
std
push
cmpsl
and
cmp
gs
loopne
lea
add
cwtl
xor
in
fiaddl
mov
jge
push
nop
cmp
push
fsubs
ja
jle
addb
out
sbb
sti
sbb
mov
ja
lret
add
sbb
pop
add
inc
loopne
negl
dec
mov
xor
imul
rcrl
sub
inc
ss
jle
loop
add
or
pop
jne
add
push
add
mov
jecxz
icebp
add
jb
bound
pop
cmp
adc
pop
clc
lock
pop
nop
xor
pushl
push
add
outsb
call
add
test
jg
push
loope
xlat
xchg
add
enter
addr16
mov
ljmp
xchg
into
dec
dec
and
or
xchg
filds
jmp
adc
ret
adc
sub
or
in
mov
add
lods
mov
xor
cmpsl
push
mov
lcall
decl
push
sub
cltd
imul
and
sub
inc
insb
add
pop
mov
add
lock
scas
push
and
add
dec
jae
sub
mov
ss
add
ret
ja
je
pushf
add
mov
mov
add
jb
mov
sbb
add
mov
add
or
push
hlt
push
and
inc
daa
push
fdivs
add
xchg
or
add
dec
mov
add
outsl
xchg
rolb
add
popf
or
push
int3
imul
xchg
jle
cwtl
shll
pop
add
daa
mov
add
fcoml
pop
sbb
sbb
add
push
add
xchg
and
sub
xlat
add
jp
xor
add
sub
xor
dec
mov
sub
mov
sqrtps
nopl
es
or
mov
push
shlb
add
push
push
add
les
add
or
mov
jmp
add
push
xchg
pop
add
xlat
jmp
testl
stos
xor
adc
xor
add
add
xchg
fidivl
inc
add
dec
shrl
adc
das
jp
call
add
xchg
pop
addl
inc
or
push
push
mov
dec
mov
sub
add
fcmovne
dec
pop
jge
add
les
cmpl
adc
jnp
jmp
sti
or
je
add
mov
add
and
mov
lcall
mov
jno
dec
jmp
add
sub
ret
and
jae
jne
pushf
xchg
mov
jp
push
aaa
gs
mov
add
je
pushw
jle
pop
mov
add
stos
and
cwtl
mov
or
das
into
or
mov
in
pop
dec
les
pop
mov
inc
sahf
dec
inc
sub
pop
rol
pop
and
xor
add
pop
mov
cmp
stos
cmp
scas
push
jbe
dec
lods
add
ja
scas
jnp
add
push
xchg
aam
mov
dec
or
scas
ss
add
sti
inc
pop
pop
outsb
je
add
dec
push
sarb
push
push
cmp
dec
adc
aam
nop
jno
xor
add
mov
sub
stos
adc
gs
adc
clc
and
mov
nop
mov
and
imul
and
or
jp
pusha
cmp
das
lds
loopne
xor
repz
add
push
mov
add
and
mov
sub
inc
rcrl
mov
bsf
mov
loopne
ja
cmpl
push
lock
add
adcl
lock
insl
pop
scas
aad
push
inc
add
mov
add
jae
arpl
and
lds
sub
dec
sbb
or
aaa
insl
mov
aad
sub
daa
pop
fs
xadd
js
jmp
push
nop
inc
test
jns
add
mov
clc
push
cli
test
lahf
dec
adc
je
inc
xor
shrb
test
jl
popa
test
les
insl
jge
lock
dec
fcompl
fs
add
add
sbb
fmuls
pop
in
add
mov
call
add
lret
jb
jo
add
test
add
mov
mov
rcl
and
in
adc
dec
add
sbb
mov
mov
out
inc
std
mov
shl
inc
pop
sub
nop
inc
ret
daa
ret
sub
mov
jmp
sub
popf
xor
mov
int3
daa
add
js
adc
inc
adc
sbb
dec
mov
pop
add
mov
adc
mov
adc
dec
sbb
mov
dec
and
fdivs
push
push
insl
add
aad
push
pop
gs
es
dec
popf
mov
cmp
test
pop
inc
push
xchg
add
adc
sub
addr16
cmp
lods
addb
es
mov
add
mov
daa
add
push
or
mov
pop
lea
push
push
add
pop
nop
pop
inc
arpl
fiadds
rcpps
add
dec
or
in
add
dec
and
call
add
mov
sbb
les
mov
ss
cmp
jmp
popf
in
sbb
hlt
inc
mov
outsb
sbb
inc
sarl
leave
fistps
lods
test
xor
mov
and
decb
nop
add
push
sub
jmp
pop
or
and
aaa
pop
dec
lods
cld
rorb
js
insl
addb
push
gs
addb
push
sahf
insl
subl
jo
sub
mov
xor
out
aas
jo
sbb
add
hlt
stc
add
dec
adc
in
mov
scas
inc
jno
fildl
sbb
js
incb
sti
add
jg
cmp
jne
icebp
push
adc
inc
call
insb
add
pop
pop
cwtl
stos
jmp
sbb
sarl
add
pop
les
orb
inc
add
or
addl
dec
je
or
ljmp
and
ja
jne
adc
pmaxsw
fcoml
sbb
xsavec
jno
pop
jmp
xor
cmp
push
cld
loop
les
in
or
popl
push
shr
addr16
mov
xor
outsb
sbb
addb
jne
pop
hlt
lock
mov
adc
inc
addb
push
mov
mov
dec
mov
sub
jne
into
mov
orb
dec
lock
dec
mov
int3
shrb
push
or
or
imul
add
sub
mov
cmp
push
adc
add
dec
jmp
inc
push
bound
cmp
pop
daa
jmp
pusha
inc
in
stc
aaa
in
add
and
jmp
das
xor
nop
mov
mov
ret
flds
add
or
adc
or
into
adc
clc
push
out
push
loopne
call
push
mov
fsub
nop
add
adc
into
add
or
add
and
jo
cs
movsb
andl
adc
adc
mov
xchg
mov
fsubs
cmp
pop
add
or
jns
add
lock
and
test
or
leave
add
je
data16
xchg
dec
cmp
cmpsb
mov
xchg
shl
cli
hlt
cmp
push
mov
call
loopne
jb
add
cmp
dec
or
pop
adc
mov
movsl
or
add
add
and
xchg
lea
dec
lret
pusha
fs
jmp
pop
aas
xchg
and
pusha
pushf
xchg
mov
test
sbb
adc
and
pop
movsb
mov
mov
cmpsl
inc
mov
mov
mov
aad
mov
cltd
movsb
jp
dec
mov
das
xchg
cld
mov
ret
add
cmp
jb
je
inc
add
or
out
add
imul
mov
scas
popf
je
fimuls
adc
mov
mulb
rcrb
xchg
add
pop
adc
leave
push
jecxz
mov
add
lock
subl
sub
or
add
lret
adc
adc
sbb
jno
xchg
pushw
les
in
leave
mov
mov
sti
mov
dec
arpl
pop
repnz
mov
push
add
adc
or
mov
xchg
sub
test
xchg
andl
test
int3
sub
inc
mov
clc
jns
lcall
dec
xchg
sbb
filds
and
sub
add
lahf
flds
xor
out
pop
sbb
inc
ljmp
and
test
inc
and
aam
push
sbb
inc
mov
jne
hlt
sbb
scas
add
mov
pop
arpl
pop
pop
movsb
add
mov
and
test
push
fmuls
lea
push
adc
add
rorl
xor
data16
add
sti
cmp
repz
inc
dec
test
add
xor
xor
idivb
add
loope
and
add
add
add
add
inc
pop
std
inc
mull
shr
adc
in
add
jnp
les
ljmp
push
dec
repnz
ja
jns
nop
xor
cli
pop
adc
shl
mov
mov
imul
add
cmpsl
jl
add
mov
xor
enter
pop
clc
mov
cmpsb
fldl
sub
jb
adc
inc
and
add
out
test
add
lea
adc
add
push
or
push
jbe
lahf
push
and
xor
dec
add
add
adc
loop
jl
add
mov
cmc
add
lret
adc
or
sub
mov
or
dec
push
and
add
pop
and
inc
cmp
inc
subb
jb
push
inc
mov
pop
cmc
xor
cwtl
dec
stos
ret
call
out
subl
cmp
add
pop
push
or
psubw
insl
gs
and
stos
cli
add
adc
dec
add
leave
ja
add
dec
adc
je
cli
sbb
in
add
mov
movsl
in
pusha
in
mov
shrb
out
je
shlb
adc
sbb
in
jle
jmp
lds
icebp
dec
add
sbb
adc
adc
std
push
cmp
test
outsb
sbb
cmp
mov
mov
nop
cmc
enter
ss
rcr
cmp
add
lahf
imul
sub
aam
mov
and
add
pop
fsubr
add
cld
sub
xchg
cmp
lds
fcomps
mov
mov
adc
mov
sub
shrb
inc
clc
idivb
hlt
cmp
enter
roll
pop
mov
dec
arpl
in
push
sub
les
aas
xchg
and
cwtl
rolb
lock
mov
add
mov
add
push
hlt
mov
pop
iret
mov
sub
sbb
ss
stc
inc
or
mov
fstpl
add
dec
xchg
mov
mov
jo
add
push
push
insl
das
fs
mov
cld
push
pop
add
or
repnz
popa
mov
push
add
and
jge
inc
xor
loopne
xchg
add
push
mov
sub
cmp
add
test
pop
add
push
mov
je
add
aam
test
add
xor
pop
mov
inc
inc
and
add
icebp
sbb
mov
mov
cmp
or
and
mov
inc
jb
add
imul
enter
popa
jle
sbb
inc
add
fld
sub
insb
xchg
push
add
adc
rorb
cmp
pusha
add
call
pop
sbb
and
dec
push
notb
push
mov
jl
and
xlat
js
xor
mov
addl
xor
and
les
inc
dec
mov
xor
es
aas
inc
xor
divps
sbb
add
mov
or
lods
push
loope
adc
je
insb
mov
xor
int3
out
push
add
cmp
sub
test
inc
inc
add
fcoml
sbb
cli
mov
sbb
enter
dec
mov
mov
hlt
rcrb
or
mov
cmp
adc
rep
scas
fsubl
test
sub
adc
xchg
or
aas
jo
aas
pushf
pop
add
lahf
cwtl
lahf
mov
nop
aaa
js
mov
dec
or
mov
test
andb
scas
pop
cmpsl
sbb
fs
je
mov
mov
lock
cmp
flds
cld
xor
cwtl
iret
adc
in
movsb
xor
repz
adc
mov
pushf
js
xorl
inc
sbb
stc
clc
andl
hlt
xchg
addb
sbb
and
aas
adc
inc
leave
inc
rolb
repnz
xchg
imul
stc
dec
das
and
push
add
je
xchg
data16
push
sub
or
and
xchg
addb
add
sti
shll
dec
pop
xchg
pop
cld
xchg
sub
xor
jae
xchg
call
sbb
nop
inc
cs
cmp
cld
jne
out
mov
pop
adc
add
add
or
mov
mov
add
popf
xor
xchg
pop
mov
mov
or
push
jb
cmp
aam
inc
inc
xchg
and
shlb
push
mov
mov
add
sbb
push
add
dec
dec
push
in
mov
cmp
std
jl
sbb
leave
xchg
sbb
sbb
push
pushf
sarb
iret
jmp
cld
ret
inc
inc
add
loop
or
or
stos
push
clc
pop
dec
cld
inc
add
stos
xorl
and
stos
pop
adc
or
rol
pop
or
mov
add
xchg
add
add
ljmp
push
pop
in
stos
add
jmp
loop
jge
andl
push
mov
mov
stos
xchg
add
popa
fdivl
divl
push
add
inc
dec
pop
or
adc
xchg
push
stos
cmp
clc
and
jae
addb
cmp
sbb
push
loop
add
add
sub
fldt
mov
dec
add
faddl
add
dec
jne
add
xor
ljmp
jecxz
aas
jae
add
add
sub
es
sbb
inc
push
add
and
and
add
cmp
jbe
jg
jmp
pushf
xchg
rclb
and
add
shlb
pop
jbe
dec
mov
jp
sub
call
not
cvtdq2ps
inc
loop
lock
pop
shlb
add
and
outsb
inc
add
and
std
es
jg
push
add
add
jge
cld
aam
sbb
jle
add
cs
inc
cmp
fidivl
jle
add
adc
sub
sub
xor
inc
pop
sub
repnz
add
imul
add
or
mov
jmp
scas
icebp
or
or
pop
push
dec
testl
shr
test
jmp
rclb
mov
das
in
sbb
or
sarl
or
stc
cmp
adc
add
push
mov
sbb
add
cmpsb
fwait
push
push
cld
xor
xchg
popa
jmp
nop
xor
sub
popa
inc
xlat
je
cmp
lock
add
test
je
or
cmp
daa
mulb
jo
and
dec
xchg
adc
sbb
add
or
add
lods
cmp
rcrb
test
jmp
sbb
add
mov
mov
push
clc
cwtl
push
and
es
xor
add
jl
in
xor
xor
gs
ss
movb
push
xlat
jmp
inc
jbe
cmp
sarl
outsl
lret
andl
cmp
scas
mov
movsb
jno
scas
xor
sub
mov
decb
insb
add
mov
xchg
pop
add
imul
add
shl
jbe
cmp
dec
add
and
ret
cmp
dec
addb
add
sarb
push
inc
jl
popa
sub
lret
sbb
inc
mov
pop
pop
ret
inc
cld
sub
push
lret
add
into
daa
cs
repz
add
push
mov
adc
and
add
es
mov
add
ja
xchg
fsubs
cld
add
or
in
and
jno
add
add
push
mov
iret
ja
mov
in
add
sub
ficoms
mov
sbb
adc
xchg
add
dec
inc
jne
jmp
mov
xor
in
add
cli
inc
mov
dec
inc
pop
push
adc
loopne
xor
and
push
loop
jne
mov
cld
jecxz
xor
mov
leave
repnz
cltd
mov
shll
add
jbe
add
adc
sub
or
add
rorb
cmc
xchg
push
or
cmp
testw
lahf
pop
adc
jle
add
adc
inc
push
in
shr
bound
aas
cmpb
adc
add
gs
mov
in
pop
loopne
fabs
call
or
fldt
add
cmpsb
test
add
addb
pop
fidivrl
fbstp
lea
add
mov
inc
sub
adc
call
sub
sub
cmpb
mov
xchg
or
add
dec
or
cmp
cmp
movlps
sbb
xor
jo
sbb
dec
js
adc
cmp
in
or
pop
data16
cmpsb
adc
xor
pop
sub
add
and
sub
mov
mov
ljmp
push
add
inc
push
mov
addr16
cs
enter
sysexit
test
push
into
mov
repz
mov
add
testb
dec
add
or
fidivl
jae
add
push
nop
rclb
add
hlt
fildll
xlat
mov
ret
fidivl
mov
fwait
mov
mov
or
out
add
and
jne
dec
out
add
add
stos
add
sbb
and
ss
xor
addr16
andl
cmpb
shl
stos
add
repnz
mov
xor
mov
push
test
pop
lock
add
fnclex
add
add
or
add
or
call
sub
jo
cmp
ret
add
sub
movsb
pop
add
add
je
push
sub
fists
jo
pop
aam
add
sbb
sbb
and
popa
xchg
loope
cwtl
div
dec
mov
push
inc
add
add
aas
jmp
fucomi
fwait
add
clc
test
popa
sahf
cmp
ffree
mov
mov
nop
add
xchg
and
add
aas
sub
dec
add
add
fimull
add
push
test
and
mov
xor
dec
mov
adc
xchg
cmp
imul
nop
pusha
es
hlt
jl
add
mov
mov
mov
hlt
push
add
push
jne
sbb
jno
mov
add
add
add
add
daa
add
in
mov
sub
xor
mov
jp
lds
adc
adc
inc
inc
and
inc
loopne
cwtl
test
add
or
or
cld
les
in
and
sub
rcrb
add
lea
mov
lds
jae
mov
push
add
xlat
and
movsb
mov
cmpb
dec
sbb
mov
cs
jo
dec
jbe
or
scas
jns
xorl
jge
or
lods
and
loopne
ret
rorb
fwait
jo
xchg
setl
and
clc
add
inc
inc
push
aam
push
or
mov
and
pusha
in
jnp
movsl
pop
dec
hlt
xor
jecxz
push
not
mov
pop
or
shl
cli
fsub
mov
or
loopne
add
push
jno
mov
out
add
mov
and
popf
push
jg
and
or
jl
add
push
ret
adc
mov
clc
mov
add
test
adc
fs
sub
shr
add
icebp
cmp
jmp
repz
pushw
and
dec
mov
clc
cmp
add
and
popf
mov
adc
cli
jae
jl
add
shlb
xchg
add
add
jmp
xchg
adc
sub
dec
jecxz
setne
loopne
jne
loope
sbb
leave
xor
inc
adc
mov
lret
nop
in
popf
lret
test
cltd
add
test
adc
add
jmp
loop
inc
pop
ds
pushf
cmc
add
daa
sbb
add
sbb
lret
push
leave
addb
jbe
and
sbb
or
in
xor
daa
or
adc
push
iret
sarb
add
add
cs
or
sub
aas
push
dec
movsl
push
loopne
popf
stc
cmp
jbe
pop
scas
xchg
popa
or
cmp
mov
add
popf
xchg
or
cmp
inc
cmp
sar
or
push
lahf
push
les
mov
push
adc
add
dec
paddsw
out
pop
add
mov
lahf
outsl
mov
js
hlt
add
in
aad
cmp
inc
inc
inc
add
add
mov
add
add
fdivp
enter
or
or
add
ljmp
dec
jne
jle
in
arpl
cmp
dec
addr16
sub
loop
pop
mov
jo
add
pusha
movsb
test
in
ret
xchg
popf
rorb
push
jl
inc
lods
xlat
dec
in
add
cwtl
add
das
loope
loopne
jns
add
hlt
loop
or
sbb
aam
shl
inc
lss
sbb
pop
lods
xlat
push
adc
push
and
add
xor
clc
push
jne
xor
add
in
jge
lock
incl
jae
aas
dec
in
adc
daa
mov
fstps
and
cmp
or
in
sarl
sbb
jl
pusha
pop
mov
incl
add
sub
jae
lods
dec
add
andb
and
decb
in
je
jge
add
sbb
xchg
sbb
cmc
shrl
insl
cmp
add
repnz
lahf
mov
inc
inc
add
inc
dec
dec
sbb
dec
dec
add
dec
push
push
push
cmp
mov
pop
add
popa
bound
jae
jo
add
imul
outsl
add
jb
je
jbe
ja
add
xor
xor
xorb
sub
add
sub
add
jge
cmp
sub
add
daa
or
add
push
call
xchg
pop
stos
add
or
add
clc
or
adc
xchg
ret
jmp
hlt
sub
cmp
repz
fsubrl
xchg
incl
data16
loope
mov
cmp
add
and
jmp
add
xchg
in
loopne
push
dec
add
pop
jle
jno
sub
test
rcrl
add
or
inc
lahf
add
xchg
andb
add
add
xor
lock
cli
adc
stos
lret
xchg
pop
pop
jle
or
dec
adc
mov
faddl
add
jg
adcb
ds
out
cmp
adc
in
jno
pop
mov
dec
inc
dec
in
call
jbe
sub
movl
roll
decl
xchg
lods
add
jle
cli
fldpi
fisubl
add
and
adc
xchg
out
cmp
push
nop
push
xchg
jnp
jo
mov
add
pop
lahf
sbb
push
movsl
cmp
xlat
test
fildll
adc
add
dec
leave
or
imul
add
add
pop
jo
and
sub
out
push
mov
insl
lods
sbb
enter
gs
fdivrs
inc
rorb
or
mov
dec
pop
inc
sub
hlt
push
push
lods
les
pushf
push
pop
or
cmp
je
xchg
sti
lea
mov
imul
xor
mov
mov
and
outsl
mov
dec
add
pop
mov
or
push
and
mov
loop
xchg
sbb
or
inc
or
cs
jb
add
push
push
inc
push
ror
loope
aad
insb
xchg
and
hlt
ljmp
aam
lods
lahf
jg
push
mov
leave
das
or
jle
or
add
mov
push
adc
mov
pop
cmp
test
daa
and
hlt
sbb
pop
adc
dec
xor
lcall
fstps
lret
add
xor
or
jl
jecxz
loopne
fld1
mov
xor
xchg
testb
add
jne
loop
add
xchg
add
test
xor
add
adc
pop
sub
and
mov
add
decb
fcompl
mov
add
shll
in
jge
add
mov
or
cmp
add
adc
pop
and
testl
mov
cmp
add
jo
lock
mov
and
add
sarl
sbb
pop
das
xchg
out
rolb
add
not
stos
cli
ja
mov
lock
ret
or
gs
push
add
idivl
push
into
inc
les
jne
or
and
push
enter
and
cmpsb
ficomps
movsl
test
pop
in
lret
jb
add
xlat
push
sarb
mov
mov
insb
movsl
mov
and
xchg
lock
sub
mov
inc
jg
add
lahf
mov
jnp
das
jns
sbb
push
hlt
push
inc
jae
xchg
adc
push
sbb
dec
add
fs
jne
or
mov
shr
rolb
xlat
arpl
or
lret
add
inc
pushf
movsb
sbb
out
jno
scas
fisttpl
pop
mov
mov
xor
cld
jno
push
mov
sub
negl
push
scas
shl
test
add
xchg
bswap
clc
daa
add
aaa
push
xor
mov
xchg
test
xor
sbb
sbb
rorb
push
add
mov
lods
out
xor
cmp
jne
lcall
sbb
imul
mov
push
push
dec
adc
add
or
push
cld
test
xchg
inc
add
mov
fs
add
mov
xchg
mov
andb
jae
in
stos
jle
lods
push
pop
test
add
adc
jne
mov
push
pop
cs
add
dec
icebp
call
xchg
sub
aaa
subb
sbb
fstpt
push
test
cmp
add
cmp
mov
ljmp
xor
test
out
js
and
in
add
test
dec
mov
mov
xor
mov
mov
xchg
fwait
adc
pop
es
sbb
clc
ljmp
add
inc
mov
inc
inc
sub
jo
stos
sarb
movsb
enter
cwtl
xchg
cld
or
fadds
add
das
rcrb
add
pop
lock
or
push
bound
je
hlt
adc
adc
sub
movsl
fs
popa
imul
push
adc
call
in
lret
add
mov
sub
add
hlt
pop
cmc
sub
mov
movsl
loop
and
cmp
pushf
dec
in
insl
mov
push
cltd
adc
dec
mov
mov
add
je
xor
repz
out
mov
js
xchg
push
xchg
in
jl
add
pop
lds
adc
pop
mov
adc
call
in
sub
lea
xor
jmp
cltd
decl
mov
xchg
pop
dec
sarb
and
lods
lds
lret
rorb
add
test
add
cmpsl
jns
mov
fldenv
pop
and
add
nop
dec
push
and
fstpl
fwait
push
shll
add
lea
cmp
add
mull
loope
outsb
fldl
in
mov
jb
cs
jae
inc
ret
and
inc
jp
cmp
mov
ja
test
cli
dec
mov
pushf
add
and
cmp
mov
sbb
inc
pop
jo
rorb
test
xor
jae,pn
push
idivb
pop
ja
outsb
xor
cmp
mov
aam
adc
inc
jb
xor
add
lret
jbe
shrb
jle
add
add
clts
fdivrs
jae
add
repz
into
jne
xor
add
fimull
aad
add
rol
iret
shr
rclb
mov
subl
add
fsubrl
out
repz
call
mov
ja
xor
cld
add
mov
sbb
mov
jo
jl
daa
xchg
aam
and
mov
loope
inc
jp
pop
in
mov
pop
cli
cmp
and
and
call
mov
sub
push
and
lods
jo
xchg
jne
add
shrl
jecxz
jmp
cmp
pop
or
add
clc
mov
cmp
rcrb
cmp
cmp
outsl
icebp
rcrl
repz
lods
mov
cmp
roll
ret
clc
dec
add
das
mov
repnz
jno
add
test
pushf
loop
ficoms
add
inc
add
adc
sbb
add
dec
stos
adc
push
dec
stc
xchg
mov
or
cmp
add
pop
cwtl
pop
lea
xchg
add
fsub
sarl
lock
scas
call
sub
mov
ljmp
jl
dec
lds
mov
dec
int
icebp
popa
jle
das
aam
mov
cmpsl
add
pusha
pop
pop
pushf
push
fidivl
xchg
adc
pop
add
xchg
stc
cmp
mov
pop
aas
add
jae
xchg
jnp
sysenter
sbbl
enter
and
loop
xchg
scas
add
add
add
adc
jbe
add
pop
and
test
cmp
addb
loop
mov
mov
sar
scas
add
sbb
jo
adc
mov
lea
rep
pcmpgtd
inc
pop
rcrl
xor
loopne
fs
cld
add
jg
les
mov
orl
subl
leave
out
add
movsb
mov
int3
stos
and
dec
mov
or
cmpb
call
in
add
add
pusha
scas
or
pop
enter
and
int3
fiadds
loopne
inc
aam
cmp
jge
rclb
and
pop
adc
imulb
pop
aam
inc
call
test
fs
push
rorb
fmul
push
add
xor
je
in
enter
push
sahf
dec
mov
lahf
sub
inc
add
in
xor
ja
dec
sahf
out
test
cmp
clc
add
dec
aam
fiadds
adc
pop
mov
rcll
iret
jle
arpl
mov
inc
popa
fildll
out
hlt
dec
test
fisubs
inc
mov
lods
cmpl
dec
mov
fdivrl
cwtl
pop
add
es
add
cli
and
aam
ja
xchg
cmp
fnstenv
sbb
loope
cs
sbb
mov
in
nop
fdivl
dec
dec
sbb
sub
mov
xchg
dec
pop
pop
jno
jmp
test
push
and
dec
mov
jb
rorb
nop
in
rcll
pop
fldenv
or
mov
jnp
push
pop
or
dec
inc
out
add
incl
add
jecxz
xchg
hlt
inc
cmp
xchg
add
sub
or
lret
test
dec
xor
xchg
loope
cmpsl
jbe
stc
and
add
cli
mov
push
or
je
mov
adc
btr
repz
sub
jo
movsl
or
sub
int3
rcrb
dec
jns
add
std
pusha
addr16
add
xchg
lret
pop
hlt
lahf
xlat
push
pop
dec
rorb
inc
sbb
aad
push
aam
xor
leave
xorl
dec
in
add
jb
ret
popa
inc
addr16
pop
cmc
mov
wrmsr
stc
icebp
pop
or
aas
or
cwtl
add
dec
inc
repz
xchg
jmp
das
out
push
sbb
push
cmp
push
add
or
bound
push
sbb
test
or
add
lods
xor
push
enter
mov
ljmp
sarb
pusha
mov
std
leave
adc
mov
add
cmp
dec
xchg
pusha
add
cld
mov
dec
add
sbb
pop
push
push
push
sub
pusha
test
add
clc
leave
push
push
vmovlps
and
sub
sbb
adc
add
mov
jmp
and
mov
or
pop
add
and
push
int3
cld
xchg
enter
pop
aas
mov
inc
mov
push
cmp
loopne
sbb
fucomi
add
push
xor
les
sub
popf
cwtl
jle
cmp
pop
sub
mov
out
mov
adc
add
add
mov
clts
clc
jecxz
cmovb
mov
mov
pop
dec
add
push
rolb
dec
call
inc
mov
add
and
cld
lcall
pop
mov
add
and
mov
xlat
orl
adc
ljmp
and
cwtl
std
push
dec
pop
push
mov
add
faddl
and
fwait
test
add
adc
rclb
enter
mov
test
sarb
mov
nop
add
jne
jg
test
icebp
outsl
inc
inc
js
popf
mov
jbe
adc
rolb
xchg
mov
xchg
add
and
imul
jl
add
loop
pop
inc
rcr
or
jae
addb
or
mov
mov
shl
lret
add
push
push
dec
stc
lahf
test
inc
add
inc
pop
xchg
xor
rorb
pushf
mov
addr16
orb
cmp
xchg
jne
pop
pop
nop
outsb
popf
mov
and
push
leave
jp
jb
dec
jge
in
ja
add
daa
or
jle
movd
push
and
and
jns
add
in
inc
insb
push
hlt
mov
mov
sub
mov
xor
xchg
loope
fsubs
sub
mov
scas
addb
mov
mov
jl
adc
sbb
mov
pop
fmull
dec
jns
insb
lret
and
mov
inc
in
fwait
mov
pop
addb
movsb
incb
popf
sbb
or
and
adc
es
out
addb
jge
push
pop
xchg
mov
inc
dec
repz
push
dec
add
mov
mov
add
ss
dec
jl
add
inc
mov
or
add
mov
inc
decb
lods
imul
sub
or
hlt
mov
pop
mov
mov
jg
mov
push
xor
shrb
adc
cltd
push
js
je
xlat
movsl
adc
adc
add
xchg
lret
iret
int
add
push
xchg
pop
cmp
mov
roll
mov
pop
nop
mov
sahf
mov
pusha
fldenv
add
add
pop
cmp
jmp
sub
pop
enter
nop
in
sbb
stc
jmp
mov
mov
jns
dec
cmp
lea
xchg
fmull
loopne
xchg
add
xchg
push
lock
or
add
sbbl
sbb
inc
sti
or
rcll
leave
fadds
push
mov
or
mov
movsb
inc
pop
mov
lods
gs
loopne
fists
mov
xchg
pop
mov
outsl
and
jo
popl
jle
mov
xchg
pusha
inc
in
mov
adc
clc
xchg
cmp
and
cmp
jle
pusha
repnz
or
adc
and
add
add
sub
jp
add
mov
pop
dec
mov
call
or
pop
mov
xor
lret
sub
inc
insb
add
jae
sbb
inc
lds
xor
add
ja
adc
and
mov
add
daa
adc
add
add
out
sbb
add
sub
sub
in
in
jl
and
ds
cltd
and
out
aam
mov
jnp
pop
outsl
lcall
mov
mov
add
daa
inc
xor
outsl
fisubl
add
and
pop
stos
jo
add
fildl
aaa
scas
lcall
mov
mov
fmul
add
leave
test
aam
jne
jnp
adc
mov
lret
scas
jge
ds
in
and
clc
xchg
ficompl
movsl
jge
xchg
dec
into
out
ds
nop
sbb
push
or
cmp
addr16
push
dec
gs
mov
add
clc
jae
or
fidivl
add
out
test
push
loop
sbb
dec
iret
mov
inc
inc
cltd
scas
std
lcall
adc
test
xchg
fdivl
stos
jecxz
and
mov
inc
xorl
int3
rcll
pop
pop
inc
dec
das
jnp
or
les
es
add
xchg
and
dec
jbe
std
dec
into
cmp
mov
push
xor
push
cmp
fadds
add
xchg
push
mov
test
stos
jne
add
out
das
js
cmp
adc
mov
rcll
pop
lods
mov
and
clc
sub
sub
jl
cli
adc
sbb
or
mov
push
add
dec
pop
inc
loop,pn
ret
cmp
adc
out
add
data16
inc
sub
inc
cld
sub
push
daa
jne
and
pop
pusha
add
jns
mov
aas
addr16
call
in
adc
push
lock
out
mov
hlt
jb
stos
add
lret
fs
sbb
scas
dec
add
out
rcrl
add
add
inc
shrb
push
dec
jb
cmp
bnd
loopne
out
das
pop
xchg
andb
xchg
clc
add
in
cld
mov
dec
repnz
lods
push
sbb
je
pop
arpl
loopne
andb
sti
or
lea
push
andl
dec
insb
mov
fimuls
pop
sub
dec
les
sub
mov
add
mov
fists
fsubrs
lahf
push
add
adc
ljmp
inc
sub
mov
or
and
mov
nop
sbb
adc
or
lock
stos
xor
jle
adc
sub
cmp
sub
adc
sbb
add
jp
cmpsb
xchg
sub
mov
cmpb
sub
jb
fdivl
vcvtsd2si
ret
cmp
inc
fcomps
add
daa
jnp
jg
jmp
fldl
repz
push
push
jmp
loop
cmp
add
jbe
ffreep
pop
pop
push
jae
jmp
icebp
or
dec
pop
and
mov
dec
daa
mov
testl
imul
aam
mov
sub
add
popf
loop
pop
push
dec
jmp
mov
rorl
add
stos
popa
xor
add
adc
data16
incb
mov
fmulp
sar
lock
add
push
add
ja
cmpsl
stos
test
movsl
fwait
or
push
bound
icebp
jl
xchg
sbb
inc
ljmp
sub
and
sub
xor
sub
in
out
fs
call
xchg
push
loop
adc
int
push
add
repnz
cmp
into
jb
cmp
jle
popa
add
pop
clc
sub
sbb
sbb
jae
pop
mov
lret
cmovne
or
add
sbb
inc
mov
in
add
cli
jbe
nop
lahf
or
ljmp
jge
cmpb
or
push
xchg
stc
sub
je
mov
ss
xchg
cmp
enter
loopne
sldt
add
add
adc
aam
or
jb
inc
jl
sub
pusha
inc
add
adc
mov
repnz
add
lret
imulb
cwtl
pop
push
push
and
add
loopne
sbb
dec
lahf
es
mov
inc
add
adc
or
aad
inc
lds
popf
push
ret
out
repnz
sti
jb
push
and
lfs
jne
adc
add
movb
xor
lds
cmpsb
rolb
adc
mov
fs
mov
cwtl
sbb
push
mov
and
enter
sub
dec
add
or
add
and
add
xor
aam
add
adc
scas
cmp
loopne
add
mov
adc
pop
inc
test
mov
clc
adc
int
cmp
add
adc
pop
aam
add
sub
cmp
jo
leave
js
add
mov
in
mov
inc
jne
adc
pop
pop
xlat
lea
call
pushw
inc
inc
inc
add
out
icebp
or
jnp
pop
and
jg
dec
push
mov
test
nop
xchg
cmp
jo
in
push
or
add
or
or
jle
rorb
xor
mov
add
cld
and
or
lret
insb
aad
xor
mov
cmp
dec
faddp
xor
add
in
je
icebp
push
je
add
inc
test
pop
adc
jle
dec
rorb
mov
rcl
data16
call
sarb
dec
push
xor
ss
pop
cmp
push
inc
std
in
and
mov
in
jbe
jo
cmp
mov
or
add
sbbb
push
sub
aas
jmp
add
sti
rol
jne
jp
or
dec
dec
bound
stc
sbb
push
lret
pop
cmc
addb
or
sub
add
movsl
jmp
mov
add
lock
leave
pop
daa
add
jnp
outsl
and
enter
sbb
add
imul
test
mov
adc
add
dec
movb
push
pop
dec
adc
test
aas
inc
push
repz
mov
add
mov
iret
add
xor
stos
add
jecxz
sbb
sti
and
mov
xchg
and
pop
or
pop
add
rol
clc
cmp
push
call
arpl
stc
and
or
lods
cmp
jno
fwait
imull
lock
or
out
adc
les
jp
add
mov
cmp
adc
fisubrl
jae
pop
cmp
je
pop
leave
mov
adc
mov
cli
jl
mov
sbb
and
add
adc
mov
mov
inc
sub
and
pop
mov
xor
and
or
mov
cmp
mov
add
outsl
stos
or
les
sub
lds
add
mov
adcb
mov
or
int
push
sub
sbb
lods
mov
xchg
stos
arpl
jmp
jne
sub
xchg
or
sub
jecxz
add
cmpsl
adc
dec
mov
loope
add
push
add
movsb
mov
lret
movups
push
mov
js
and
push
add
or
or
mov
into
roll
leave
or
sbb
sbb
repnz
inc
xor
test
mov
pusha
cli
jp
test
int3
push
and
mov
push
sub
pop
xchg
and
pushf
mov
sub
hlt
add
and
nop
cmp
cmp
add
outsb
xor
in
enter
mov
or
adc
mov
jmp
scas
add
and
dec
mov
pop
pusha
adcl
cld
cli
ret
lcall
add
cmovae
pop
xchg
push
or
mov
sub
sbb
cmp
add
inc
ficomps
jo
mov
mov
fs
sub
stos
mov
mov
rorl
adc
mov
add
sub
and
sbb
inc
les
ret
add
xlat
add
cs
jl
and
add
or
pop
inc
test
jb
adcb
daa
mov
js
dec
sti
jnp
adc
add
inc
xchg
pop
fadds
lock
nop
and
add
stos
int
out
push
pop
or
fdivrl
inc
xor
add
loope
ret
sbbl
pusha
cwtl
mov
add
int
mov
push
add
insb
nopl
shl
lods
fdecstp
add
fiadds
add
cmp
inc
test
add
jle
inc
outsl
sub
lea
pop
and
push
lods
cli
xor
lock
aam
push
test
loopne
rol
mov
jno
add
insb
pop
adc
andb
mov
les
cld
dec
push
inc
add
jmp
in
add
enter
arpl
jle
ja
outsb
xchg
add
aas
add
add
in
shlb
add
fistpll
adc
dec
or
push
jo
dec
and
fs
add
xor
sub
add
call
aam
push
add
xor
push
add
mov
in
lea
lds
push
push
cld
hlt
notl
movsb
outsb
shll
mov
xor
inc
sahf
inc
ret
sarb
aas
dec
loope
push
mov
xor
inc
mov
mov
mov
push
or
fst
jno
add
out
sbb
and
dec
or
adc
xor
out
add
sarl
loope
pop
ret
add
xor
and
jne
or
jae
add
cmc
add
or
adc
enter
movb
mov
push
and
imul
inc
xor
test
mov
add
fs
das
jno
out
fadds
cwtl
subb
enter
xlat
or
push
scas
testl
mov
cmc
sbbb
sbb
pop
jmp
testl
mov
mov
add
or
sbb
insb
mov
pop
rcll
arpl
lock
add
test
cmp
adcb
jns
mov
push
or
fs
rolb
bound
add
imul
icebp
push
sbb
inc
mov
leave
rolb
mov
jb
xor
add
push
pop
pop
cmpb
and
ret
lds
adc
cmp
stos
pushf
add
in
dec
xor
iret
fs
add
sti
flds
or
mov
sbbb
cmp
add
sbb
adcb
inc
add
cwtl
loop
lock
add
nop
out
fadds
lahf
test
cwtl
enter
out
add
mov
jmp
mov
int
and
mov
add
or
enter
pop
getsec
ret
adc
lea
jle
or
add
loop
shr
add
cmpb
and
jno
xor
add
mov
adc
or
adc
mov
mov
daa
sbb
flds
outsl
add
loope
mov
inc
xor
lea
add
mov
fisubl
dec
pushl
pop
sti
sbb
add
aad
mov
scas
rolb
jno
nop
loopne
mov
or
aad
jne
mov
popf
insl
inc
imul
je
pop
in
sbb
mov
adc
add
inc
adc
pop
mov
adc
dec
and
inc
mov
pusha
andl
repnz
xorb
jg
add
mov
jle
fwait
sub
add
fsubs
fs
out
cli
loope
ljmp
filds
into
sbb
add
and
js
add
cld
and
pop
cmp
and
fldenv
add
in
test
aad
push
jp
jl
pop
and
cmp
or
gs
lods
inc
les
inc
out
and
hlt
jge
add
mov
jb
add
add
rclb
inc
testb
pop
add
cs
xlat
bswap
jo
and
xchg
stos
rolb
add
adc
adc
add
xchg
xor
js
jnp
add
or
je
mov
add
rol
add
addb
xorb
int3
stos
xor
call
sub
jge
hlt
out
lcall
leave
mov
inc
stos
add
pop
cmp
lret
mov
jle
outsl
ljmp
subl
enter
push
test
fs
decb
adc
add
mov
add
mov
jmp
in
add
cmpb
add
mov
cmp
nop
jge
mov
xlat
sub
push
xor
roll
mov
es
outsb
popa
cmpsb
mov
stc
push
insl
arpl
aas
rcrb
add
loop
subl
xchg
pop
push
push
push
add
jl
test
call
pop
enter
fldenv
xchg
mov
push
clc
mov
and
xlat
scas
cli
testb
sub
js
push
add
and
jae
add
mov
dec
stc
mov
fimull
testb
or
ljmp
add
adc
push
cli
sub
mov
xlat
bound
lret
test
fimull
sti
sub
jmp
sub
bound
nop
xlat
xchg
jns
cld
jo
mov
mov
sbb
fmull
adc
fcmovnbe
or
and
inc
orl
pop
test
cld
sub
enter
push
push
add
fistpll
sahf
sub
xchg
adc
jg
test
mov
insb
out
inc
ror
ret
add
pop
add
xor
or
push
cmp
mov
push
scas
fsubl
faddl
jno
cmp
cmpsl
in
insb
add
insl
mov
dec
mov
fcompl
stc
and
xchg
mov
mov
out
shlb
mov
addb
or
cmp
mov
std
sub
sbb
mov
aaa
adc
test
aas
or
fstpl
adc
mov
test
sbb
and
inc
pop
aas
les
insb
add
pop
or
fdivrs
add
or
adc
mov
pop
ficomps
mov
test
or
dec
fadds
add
push
pop
or
xchg
rcrb
adc
add
in
push
and
add
lret
dec
aaa
or
in
pop
ds
movsb
add
cmp
les
stos
adc
adc
inc
clc
mov
and
or
adc
mov
je
loope
shlb
sti
add
push
add
add
jb
shll
add
fst
les
popf
cmp
mov
and
loopne
add
sbb
out
sub
sbb
daa
or
add
xor
jmp
pop
mov
aas
mov
inc
rorb
add
dec
loopne
cli
pop
call
jge
sub
jae
add
add
loope
and
or
rcrl
pop
negb
xor
cwtl
in
inc
sbb
jg
sub
movsl
cmpsl
xchg
lock
cmpsl
shll
push
jle
push
js
loope
xchg
sbb
sbbl
jl
add
sub
addr16
ret
or
test
popa
lods
movsb
mov
xor
sbb
inc
pop
adc
sbb
add
or
mov
add
mov
stc
pop
add
dec
aaa
das
or
xor
add
out
pop
out
or
xor
add
or
gs
lock
jns
call
push
push
jbe
scas
jecxz
ds
in
lcall
out
aaa
add
inc
push
adc
pop
shrl
cmp
enter
add
or
inc
push
inc
or
cld
mov
cmp
movsb
lcall
dec
movsb
lahf
add
clc
jecxz
test
sbb
add
add
push
add
data16
daa
mov
mov
inc
push
or
fcom
clc
test
add
lods
cmc
out
adc
loop
cmp
adc
mov
push
add
and
push
mov
xor
pop
outsb
rorl
cs
add
xor
fadd
add
pop
fiaddl
out
cmp
cwtl
xor
iret
add
outsb
pop
aam
mov
push
into
or
sbb
add
dec
lret
dec
outsl
cmp
xor
icebp
add
add
mov
mov
add
jp
fldenv
or
in
add
inc
lds
fldenv
xchg
cmp
into
add
xchg
add
pushf
shlb
std
and
or
add
loope
xchg
sbb
addl
sub
rol
or
add
cmp
inc
enter
sub
lea
clc
fs
shll
cmp
incl
call
test
add
mov
add
inc
pop
pop
adc
and
sbb
cld
out
mov
inc
stos
fistl
sub
mov
enter
dec
les
rcrb
mov
mov
xchg
xor
addr16
cmp
and
push
pop
add
jmp
pop
push
cmpsb
das
jo
nop
ljmp
test
xchg
sub
das
push
movb
pop
push
jmp
enter
pop
mov
fdivrs
mov
das
mov
dec
fwait
push
nop
lret
pop
sysret
xchg
loopne
enter
add
xchg
std
jmp
int3
and
cs
in
or
jnp
add
mov
jno
push
cmp
mov
add
mov
sub
je
in
inc
or
xchg
in
xor
xor
ret
xor
ror
mov
xor
add
sbb
shll
dec
pop
mov
dec
or
in
pop
cmc
mov
add
insl
les
loop
xor
or
lock
jge
jbe
add
sub
mov
jae
imulb
cmpsb
add
js
fbstp
cmp
dec
add
xchg
jnp
sbb
push
lock
add
jb
mov
cmc
and
sarl
call
das
cmp
mov
sub
add
sbb
cld
loopne
and
pushf
push
push
and
das
out
adc
mov
call
dec
sbb
push
std
xor
add
out
lret
in
jmp
pmullw
or
cmp
add
icebp
mov
inc
mov
jae
lock
jo
aam
mov
add
cmpsb
pop
xor
lahf
popa
lret
outsb
je
rclb
pop
enter
or
fs
inc
call
pusha
jo
clc
xchg
xor
adc
mov
cmc
pop
popa
pushl
add
dec
inc
jecxz
lret
test
mov
jle
js
and
dec
fs
inc
push
icebp
pusha
hlt
test
rcrb
mov
pop
add
mov
or
sub
xor
inc
in
popa
ret
xchg
test
data16
stos
sub
repnz
fs
push
pushf
and
dec
push
adc
cmc
cld
rolb
out
lahf
inc
ds
and
xor
pop
xor
mov
sar
mov
add
add
mov
push
in
add
fdivr
stos
clc
add
inc
mov
xchg
add
hlt
jle
jl
add
mov
or
dec
hlt
push
mov
lret
jmp
push
test
nop
nop
add
xor
sub
pushl
ficoms
cmp
ss
add
push
hlt
cld
ficomps
mov
adc
mov
or
cmc
inc
adc
stos
sbb
adc
and
push
add
lahf
fs
bound
and
push
push
xchg
jmp
xchg
xchg
add
out
inc
push
loopne
add
xchg
aas
and
push
inc
xor
dec
inc
add
or
and
clc
icebp
pop
rolb
or
idivb
sub
add
jae
testb
mov
xchg
in
nop
mov
outsb
in
cmpsb
or
add
enter
pop
add
or
jle
pop
rolb
cmp
push
add
hlt
and
cmp
sbbb
xor
xor
in
xor
lock
pop
imul
divb
lret
nop
xchg
inc
mov
pop
adc
lret
aam
add
push
adc
mov
test
pop
imull
cmpb
xchg
sub
ja
sbb
mov
negl
mov
clc
or
or
xchg
xor
pop
or
push
ja
sbbb
out
add
faddl
loop
addb
push
aaa
mov
fdivr
pop
add
cmp
push
pop
sub
ja
add
frstor
sbb
push
inc
sub
mov
or
add
adc
add
push
ds
xlat
and
sbb
add
xor
sbb
add
pop
je
inc
ret
xchg
or
dec
std
das
out
add
sbb
aam
addl
les
pushf
or
popa
push
push
mov
xor
pop
add
inc
cmpl
dec
mov
ss
pop
inc
push
stc
push
orl
dec
add
daa
lock
mov
cli
sub
add
rcl
cwtl
or
out
sbb
pushf
sbb
scas
jno
mov
xor
mov
xchg
faddl
push
and
sbb
mov
into
test
or
dec
fimull
adc
pop
pusha
inc
xor
dec
pop
add
out
add
and
or
sti
xor
mov
pop
jle
or
and
fwait
push
addb
add
push
or
cmpsl
int
adc
add
stc
xor
cmp
aad
add
or
xor
add
sub
xor
add
ja
jnp
add
mov
push
stos
fs
and
add
cmpsb
lcall
xor
je
inc
test
mov
add
call
jo
add
mov
sbb
out
loope
nopl
lea
cwtl
fists
cmp
inc
xor
add
cmp
fs
ds
nop
dec
jmp
dec
jle
add
lods
push
test
clc
in
cwtl
cmpsl
add
cli
mov
test
cmp
xor
scas
mov
push
idivb
fs
add
mov
add
shrl
jo
outsb
pop
push
or
js
stc
push
mov
and
sub
nop
push
mov
testb
bound
flds
cltd
out
mov
lea
cwtl
sbb
push
add
test
add
addr16
xor
movsb
add
mov
add
or
cmp
pop
outsl
sbb
loop
mov
xchg
cs
xlat
adc
add
cmp
xchg
cmp
es
out
push
add
add
jmp
mov
dec
and
add
sarb
les
jecxz
cmpb
enter
or
int3
int3
jecxz
shrb
shll
aam
mov
push
in
fdivrs
add
xor
sbb
push
inc
loopne
out
add
fisubs
sbb
mov
in
jne
inc
in
shrb
nop
lock
add
addr16
push
dec
adc
add
shll
enter
jmp
add
in
cmp
aas
cs
lret
push
xchg
incl
in
loop
adc
pop
in
jp
sbb
xor
decb
and
je
cmc
adc
and
xor
xor
and
push
dec
inc
lcall
mov
add
add
pop
jae
push
outsl
or
pop
push
lods
jmp
pop
sub
in
add
in
aas
add
out
add
add
mov
aaa
sub
sar
xor
add
and
push
aam
lock
jg
loop
or
add
ret
pop
shlb
adc
jg
push
rorb
add
jne
mov
clc
xor
shlb
addr16
loopne
add
sbb
mov
xor
adcl
xor
pop
pop
add
adc
pop
jmp
xchg
jg
add
jle
mov
add
lret
sti
push
cmp
pop
movl
sub
jle
add
ds
sbb
inc
int
xadd
sbbl
mov
add
add
rorb
orb
fstpl
sbbb
flds
sbb
pop
fildl
push
loope
enter
pop
add
jbe
cmp
push
mov
add
pusha
pop
pop
adcb
sbb
xchg
popf
adc
adc
roll
pop
add
shlb
xor
add
add
shl
repnz
jbe
sbb
loope
xchg
loopne
mov
cmc
shlb
cmp
cld
cmp
decl
sbb
xchg
popf
cmp
cmp
stc
sbbl
sub
add
inc
sub
add
sub
ljmp
jo
out
add
inc
sbb
push
in
and
pop
and
roll
and
idivb
jecxz
and
loope
and
mov
jo
mov
andl
sub
mov
movsl
shlb
out
fs
add
add
inc
scas
xchg
fldcw
test
push
js
mov
add
jp
jg
jg
js
sbb
sbb
add
mov
jl
add
out
mov
ja
mov
sbb
jb
mov
mov
jae
mov
jno
xorb
enter
adcl
push
inc
xchg
xchg
mov
adcb
jo
add
pop
and
jecxz
loopne
or
lahf
sbbl
fwait
add
cltd
rclb
sbbb
mov
dec
jo
add
mov
orl
loopne
orb
inc
mov
add
mov
add
inc
addb
ret
adc
jecxz
lock
add
sbbl
add
test
jecxz
in
pushf
es
add
xor
bound
popf
push
mov
mov
cmpsb
repnz
sbb
cld
pandn
cpuid
fneni(8087
shlb
rcrb
mov
pop
mov
stc
add
loopne
adc
dec
xor
add
lock
adc
cmpsl
nop
xorb
mov
jmp
aas
add
repz
sbb
and
mov
cmp
push
and
enter
xor
das
mov
add
mov
sahf
mov
xor
push
add
add
mov
data16
adc
add
mov
in
sbbb
push
cld
add
pushf
fbld
add
dec
or
xor
ret
fidivs
addb
mov
pop
dec
jne
dec
repz
push
push
test
das
pop
inc
cld
sub
imul
jecxz
xorb
adc
out
inc
lods
mov
add
sub
repnz
jl
jns
mov
clc
inc
ds
imul
adc
push
lods
cmp
jmp
nop
jo
call
notl
push
cmp
add
push
out
lock
movsl
movb
gs
jae
test
jbe
adc
je
add
fists
sbb
dec
add
repz
pop
in
sbb
pop
add
subb
add
lret
mov
pop
add
rcrb
add
push
add
test
sub
call
fs
out
mov
pop
add
push
stc
jge
dec
leave
enter
insb
add
stos
mov
repz
add
and
je
sahf
or
add
xchg
push
ret
add
incl
ret
xlat
sbb
fs
cmp
scas
pop
sarb
roll
shll
sbb
dec
or
mov
jno
rep
add
adc
sbb
leave
gs
cmp
mov
stc
jbe
aas
fsubp
mov
push
fld
and
cmp
add
sub
mov
test
arpl
inc
sbb
scas
and
xor
add
add
inc
sub
mov
xchg
dec
cltd
mov
mov
xchg
xor
xchg
push
adc
xchg
add
cmp
mov
add
add
push
aaa
xchg
cli
mov
and
movsl
jecxz
lock
sub
xchg
mov
hlt
sti
pop
cli
push
xor
push
clc
xchg
ret
mov
or
stos
add
sub
cmp
inc
xchg
adc
and
fiadds
movsb
xchg
or
mov
cld
and
push
xor
and
jmp
mov
inc
inc
or
xor
or
incl
and
and
repnz
leave
repz
imul
sub
sub
lock
or
fsub
repnz
cmp
pop
fs
fcmovbe
mov
sub
adc
mov
mov
inc
sub
sub
notb
pop
sbb
test
fs
sub
sbb
mov
out
xor
lods
xchg
cld
mov
nop
or
push
add
inc
xchg
lret
add
sub
pop
inc
push
and
sbb
push
cmp
lahf
xor
or
mov
das
lret
gs
or
pop
cmove
sbb
cmp
push
lea
pushf
sbb
or
aas
add
popf
pop
and
repnz
push
pop
inc
jmp
in
mov
adc
mov
mov
add
stos
mov
sub
push
mov
icebp
les
adc
and
and
inc
aas
popf
lods
addb
add
mov
cmpsl
dec
or
mov
icebp
sbb
and
inc
jbe
cmp
shlb
je
add
pop
inc
stos
add
or
add
add
add
xor
xor
ret
pop
jo
and
lar
or
add
mov
mov
sbb
test
jge
add
repnz
hlt
mov
inc
cmpsl
test
adc
loopne
pushf
add
rclb
add
mov
dec
add
ret
jg
sub
lock
mov
lret
and
pop
mov
push
fsts
out
add
push
shlb
add
test
sbb
cmp
add
cmpsb
adc
pushf
sub
shrb
xchg
aas
mov
add
ds
mov
bound
sbb
add
sbbb
or
leave
xlat
in
movsb
sarb
add
sub
jle
pop
lret
add
xchg
pop
fisubrs
xor
pusha
iret
sbb
jns
stos
sub
push
lahf
aam
jmp
aas
push
push
cmpsb
xlat
ss
or
pop
test
xchg
or
jg
dec
pop
mov
je
lcall
pop
adc
bound
lods
adcl
or
shl
icebp
and
lock
insl
sbb
push
push
lcall
inc
inc
push
test
mov
jl
ljmp
sbb
mov
add
sbb
mov
push
add
sub
adc
cld
repz
jecxz
mov
clc
jmp
xor
xor
push
push
pop
xchg
mov
repz
jp
fildl
cs
test
push
sbb
xor
and
jl
mov
sbb
fmuls
shrl
push
stc
mov
mov
insl
add
mov
pop
aaa
add
push
mov
addl
jmp
aam
mov
pop
sbb
mov
test
lahf
pop
jl
loop
add
loop
inc
in
mov
sbb
pop
cmp
ljmp
mov
dec
push
int3
add
push
add
out
add
inc
cld
pop
add
lods
push
adc
mov
orb
xor
fcompl
test
sbb
les
cs
cmp
jo
mov
cmpl
add
test
movb
add
sbb
pop
stos
pop
movsl
out
bound
add
mov
xor
add
sub
mov
testb
ficoml
push
xchg
mov
inc
add
mov
mov
add
js
je
inc
add
add
sbb
xchg
xchg
stc
add
mov
mov
fs
mov
faddl
daa
and
add
mov
paddusw
shl
add
inc
push
cmp
xorl
pop
push
push
cmp
enter
lcall
add
shl
mov
mov
es
xor
jle
mov
rcrb
add
inc
push
push
rorb
mov
adc
jno
add
fwait
sub
paddsw
loopne
test
push
jl
add
cmp
inc
adc
fisubl
and
stos
mov
lock
jg
push
adc
rolb
test
xchg
jmp
jge
add
mov
adc
rclb
sub
inc
shlb
rolb
push
mov
jno
mov
in
add
and
pop
mov
inc
add
int
imul
push
lret
fst
sahf
hlt
xor
pop
add
cs
pop
arpl
add
dec
and
cli
inc
add
dec
push
sub
add
idivb
pop
decl
push
mov
adc
add
mov
add
inc
lock
incl
adc
les
loop
ret
push
cmpb
adc
add
scas
stos
call
inc
add
and
ljmp
mov
clc
loope
jae
add
and
negb
push
push
add
dec
jbe
push
icebp
stos
add
addr16
int
notb
mov
push
repnz
lahf
pop
add
mov
pop
jae
add
xchg
jne
pop
shll
dec
scas
inc
push
lea
mov
cmp
add
add
push
inc
add
cmp
pop
incb
jmp
lret
or
cs
push
adc
adc
push
sub
ret
mov
mov
add
adc
sbb
addb
rorb
add
dec
push
jbe
xchg
lock
xor
je
xchg
inc
add
jne
into
addb
cmpl
mov
add
cmpsb
mov
dec
push
int
sub
es
mov
dec
nop
ds
pop
fnstcw
sbb
inc
push
test
ljmp
pop
push
xchg
and
dec
cmp
or
outsb
loop
hlt
mov
roll
jns
loope
andb
jb
ret
rclb
inc
inc
cmp
ror
sbbb
inc
insb
test
sub
fdivs
jb
frstor
jmp
jge
movb
fisttpl
cld
inc
inc
lea
ficompl
dec
sbb
mov
dec
sbb
adc
int3
xor
dec
add
fildll
test
push
cmp
push
add
xlat
je
cs
inc
in
loopne
or
sub
cmc
test
call
imul
or
mov
and
push
in
inc
add
xor
xor
and
scas
push
fwait
aam
lahf
dec
add
arpl
loopne
add
add
data16
pop
fdivr
in
jo
add
cmp
test
push
jmp
sub
hlt
add
mov
lahf
pop
loope
mov
sub
in
aaa
add
insl
std
es
xor
rclb
add
add
mov
data16
mov
loop
ja
sbb
outsb
pop
dec
stc
movb
push
xchg
sub
add
lea
jno
jae
cmp
cltd
pusha
or
sahf
sbbl
add
add
mov
ds
std
cmc
mov
sub
add
icebp
mov
fsubrs
pop
imul
pop
cld
ss
clc
sbb
dec
mov
jae
aad
les
add
orl
adc
sbb
add
nop
test
mov
aaa
sbb
shll
dec
movsl
add
shrl
jo
adc
xchg
fldl
mov
add
jbe
cmp
push
or
in
jae
lret
cmp
sub
clc
dec
pushf
xchg
add
xor
sub
add
addr16
add
add
inc
les
inc
subb
pop
cmp
sub
test
shlb
sub
cmpsl
enter
push
lea
push
add
lret
rep
nop
sub
or
jl
mov
or
mov
xor
gs
adc
mov
fisttpl
add
add
shl
jb
xchg
test
adc
testb
arpl
sbb
repnz
push
js
mov
push
or
loope
lea
std
repz
cld
jne
adc
subb
add
mov
test
push
xchg
daa
je
loopne
cli
nop
jne
cmp
pop
dec
pusha
push
sub
jg
insl
add
cwtl
adc
inc
call
ljmp
xchg
roll
dec
and
xor
add
cmpsl
push
insl
add
pop
mov
add
mov
scas
add
inc
movl
les
leave
mov
mov
dec
xchg
pop
adc
ja
shrl
and
dec
adc
add
sub
pop
es
pop
jmp
push
ds
mov
jge
movsl
mov
pop
pop
add
sbb
sbb
mov
ret
das
es
sub
inc
ja
nop
add
xor
jns
cmp
add
inc
and
inc
inc
idivl
push
rcr
test
xor
mov
loop
lds
dec
sbb
adc
jle
xor
add
mov
mull
dec
add
push
test
add
pop
inc
dec
movsl
inc
orb
xchg
mov
clc
loop
fdivrl
test
adc
add
xchg
xchg
addr16
incl
push
cmp
mov
mov
fs
icebp
add
jb
insb
xchg
dec
out
cmp
clc
jge
add
test
xchg
jl
sbb
ljmp
sbb
or
lods
push
hlt
add
imul
cli
push
jg
mov
add
or
pop
add
or
nop
push
aas
js
jne
add
or
scas
push
dec
add
pop
inc
incb
lahf
jle
ret
add
fwait
scas
sbb
mov
repnz
add
test
sbb
xor
xor
mov
push
rolb
jp
add
fdivr
xor
xor
mov
dec
rolb
enter
cmp
enter
inc
dec
in
lahf
and
adcb
call
or
dec
cli
insl
add
xchg
addb
jb
add
fndisi(8087
add
sub
mov
jnp
add
xbegin
add
adc
add
dec
incl
sahf
and
test
cmpb
mov
popa
cmp
smsw
dec
pop
jo
add
clc
jl
sub
inc
cld
shlb
cld
addl
je
mov
push
push
jg
add
inc
push
adc
pusha
add
adc
fs
fadds
aaa
jmp
loop
add
cmp
adc
cmpsl
cmc
sbb
sbb
push
int3
or
jne
xchg
sbb
jnp
and
add
shrb
mov
add
cmp
add
xor
popa
dec
addb
rolb
addl
hlt
andb
push
jne
test
push
jbe
and
mov
push
jmp
adc
push
sbb
or
jne
into
inc
lods
mov
add
ret
nop
hlt
pop
xchg
pusha
test
dec
add
cmp
inc
add
in
rcrl
insl
add
jns
and
fstpt
jle
add
push
out
fisttpll
adc
cs
sti
mov
std
outsb
arpl
xchg
sub
dec
jg
inc
dec
rolb
add
into
sti
jle
add
leave
jge
pusha
xchg
adc
cmp
not
add
add
pop
mov
add
loopne
add
pop
out
add
sub
movsl
outsl
adc
add
roll
in
sbb
inc
and
leave
xor
movsb
inc
cmpsb
add
or
push
add
jo
add
push
jle
pop
cltd
add
jg
clc
inc
jb
rcrb
inc
mov
xchg
rcrb
lods
shl
lahf
cmp
mov
lcall
add
in
jge
mov
mov
dec
push
arpl
cmpb
push
add
adc
sbb
outsl
lds
lcall
popa
add
or
and
sbb
and
add
popf
out
outsl
cmp
es
lods
sub
add
popf
sti
and
add
mov
test
rcrb
add
mov
jg
sub
fld1
cmp
jnp
inc
lds
sbb
mov
ss
add
mov
sbb
add
movsl
cmpb
loop
out
push
xchg
mov
aaa
mov
fdivrl
mov
add
scas
inc
in
fmuls
mov
push
es
leave
jle
pusha
add
xor
sahf
imul
daa
lea
push
adc
mov
add
mov
push
and
out
mov
loopne
add
inc
push
fcmovbe
sbb
jo
add
stc
mov
mov
add
mov
inc
movsb
imul
popa
jle
out
rcrl
in
add
shrb
dec
lods
dec
cmp
daa
fnsave
iret
add
popaw
pop
jb
cmpsl
cmpsb
loopne
add
push
jae
insl
jnp
loopne
add
imul
mov
add
in
xchg
faddl
popf
stos
in
in
add
mov
jg
add
push
sbb
pop
loope
pop
incb
lea
cmp
out
inc
xor
mov
mov
mov
cmp
sbbl
ror
add
pop
add
les
fwait
repz
push
mov
idivl
push
and
and
push
add
push
jp
inc
xchg
push
sbb
and
sub
inc
popa
inc
push
mov
pop
push
pusha
addb
pop
dec
push
mov
add
lret
cmp
mov
in
mov
mov
test
orb
frstor
mov
xchg
repz
into
push
int
ja
pand
outsl
sub
xchg
dec
stos
jp
loopne
add
inc
xchg
add
aad
pushf
mov
mov
cmc
push
xchg
orb
call
add
repnz
adc
add
fucomip
push
dec
jge
mov
jle
movsl
stos
adc
push
and
arpl
daa
sub
jns
pop
lret
jo
add
gs
enter
xchg
pop
add
sub
sub
xchg
inc
and
sub
and
ds
nopl
pop
adc
daa
add
pop
test
roll
mov
cmp
div
add
jecxz
and
push
sbbb
int
push
shrl
mov
cld
or
xor
mov
sti
jbe
and
add
add
mov
in
jno
enter
dec
out
imul
add
orb
mov
mov
jmp
rolb
sub
ret
dec
mov
fildll
mov
les
lea
add
imul
inc
add
cmpsl
insb
lcall
pop
movsb
aaa
jle
roll
in
pop
dec
or
les
aad
rcrb
xor
pop
jnp
jo
test
push
rcrb
and
cmp
loop
xchg
popl
into
setno
lock
adc
or
jae
sbb
mov
lret
pop
js
add
pop
aas
add
add
aam
mov
pop
cmpsb
inc
mov
mov
sti
mov
dec
add
push
repnz
stos
add
mov
loop
pop
xor
adc
inc
sub
cwtl
and
lock
pop
clc
fs
push
pusha
sbb
mov
sub
add
adc
inc
sub
add
test
sub
in
lock
xchg
test
pop
add
jne
fs
subl
mov
add
cld
test
push
in
sbb
pop
dec
push
dec
add
xor
mov
roll
sub
xor
movups
lcall
or
gs
or
test
enter
jp
lds
pushf
sbb
pop
push
shll
add
xor
cmp
or
divl
xchg
xchg
mov
add
aam
aaa
add
addl
lock
lock
add
sbb
jbe
out
aad
xor
or
cmpb
or
adc
fistpl
fadds
shlb
nop
mov
enter
add
lods
pop
fadds
push
push
cmpb
jg
ret
cmp
push
pop
add
call
push
aam
and
mov
pop
sbb
dec
nop
movsl
cmp
add
cs
fsubs
add
stos
and
add
lods
mov
jne
add
add
loopne
mov
divb
psubb
dec
add
es
push
stos
cmpsl
dec
pop
push
xlat
mov
push
or
xor
add
add
test
jle
lret
addb
lret
push
add
ret
inc
dec
sbb
or
mov
jns
xor
mov
xor
hlt
fstl
xchg
int3
sbbb
ret
jns
das
fmuls
out
test
adc
mov
mov
and
scas
mov
cwtl
cmc
pusha
or
jmp
push
scas
addl
daa
xor
call
dec
jne
fistps
in
xchg
fwait
repnz
or
sub
pop
ret
add
ljmp
and
sub
mov
test
ljmp
sub
add
jp
sub
add
test
scas
xor
push
jl
cmp
sahf
inc
stos
add
pop
pushf
aas
mov
inc
adc
or
in
adc
push
xchg
bound
dec
adc
scas
leave
pushf
outsl
mov
add
sti
push
popa
push
or
rorb
jg
sbb
pop
loopne
push
js
fiaddl
imulb
sub
add
cld
cmp
push
jl
dec
lret
xchg
sbb
scas
fdivl
push
add
loop
inc
add
mov
sub
cmpsb
sub
adc
jae
inc
add
push
pop
in
sbb
clc
cli
sub
or
push
or
adc
movsb
add
cmp
mov
stos
dec
adc
or
je
scas
call
xchg
clc
adc
cld
xor
call
jle
push
orb
roll
popa
add
push
inc
add
sub
pop
pop
adc
int
sbb
inc
mov
stos
faddl
ret
push
les
ret
pusha
daa
mov
add
mulb
out
jge
add
leave
add
pop
jecxz
or
sbb
mov
cmpb
inc
or
enter
sub
push
mov
inc
push
pop
adc
add
inc
xchg
mov
ret
add
mov
pop
adc
sub
and
dec
or
add
in
xchg
nop
movsl
pusha
or
inc
add
sub
cs
push
add
jb
incb
lahf
int
pop
sbb
lods
pop
push
mov
jno
jp
mov
jmp
add
push
push
mov
int3
xchg
ret
pop
add
and
mov
stos
call
adc
lock
andb
push
ds
ja
insl
add
push
cs
sub
mov
sarl
xchg
shlb
sub
push
push
add
repnz
pop
lods
int
add
mov
add
xchg
xor
add
sbb
roll
popf
loopne
enter
es
ret
fadds
shlb
add
sbb
pusha
push
cwtl
sub
xorl
mov
roll
add
inc
adc
push
add
and
enter
jg
or
cmp
cmp
mov
subl
dec
adc
rolb
add
mov
jbe
mov
mov
mov
sub
rclb
pop
paddd
loopne
add
xor
add
or
sbb
and
xor
stos
push
mov
add
xchg
mov
mov
add
cwtl
outsl
cmc
cmpsb
hlt
lods
mov
push
sbb
or
cmp
mov
sbb
and
add
sbb
call
loop
es
cmp
add
dec
movsl
xchg
mov
cli
push
add
je
popa
call
movl
push
out
test
inc
cmp
and
xor
jecxz
add
aaa
test
cmp
or
lret
or
add
inc
loope
cmp
gs
leave
jl
jae
add
adc
add
cmpsb
call
stos
cmp
or
pusha
cmp
cmp
mov
adc
add
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
add
hlt
and
cs
aas
add
inc
incl
mov
rolb
mov
stos
insl
bound
add
mov
cmp
xor
jle
push
add
add
addb
int3
mov
mov
and
add
push
dec
or
cs
pop
adc
or
cltd
pop
test
sub
pop
addr16
dec
xor
xlat
stos
sub
repnz
ja
adc
and
out
insl
js
xchg
jg
sti
add
lcall
add
movl
push
pop
add
mov
sub
add
inc
and
and
cmp
mov
push
ret
adc
add
sub
push
add
shlb
add
or
dec
add
test
mov
xchg
push
sub
jge
cmp
lahf
cmp
adc
mov
pop
das
jo
enter
adc
roll
xor
xchg
or
xchg
dec
xor
enter
rclb
test
xor
adc
cmp
pop
and
sbb
cmp
adcb
stos
pop
fs
mov
cmp
pop
mov
daa
jne
adc
sbb
dec
aaa
dec
repz
dec
pop
cld
je
repnz
mov
xor
add
mov
and
dec
xor
push
push
rclb
nop
je
jne
pop
and
test
dec
adc
cltd
dec
xor
adc
clc
sub
int
mov
loopne
inc
cltd
jmp
mov
arpl
les
outsb
repnz
xchg
cmp
mov
mov
adc
xor
and
or
dec
test
pusha
inc
sbb
add
inc
mov
cwtl
push
add
mov
adc
add
jnp
sub
dec
adc
or
push
cmpsb
inc
push
inc
xor
test
cmp
pop
dec
sub
xor
stc
jne
jae
dec
push
add
and
jmp
add
and
push
jge
or
cmp
jns
or
push
cltd
push
mov
popf
xor
andb
pop
mov
popa
lods
cmp
stc
and
mov
out
add
mov
mov
in
cld
mov
loop
add
mov
jns
pop
in
add
jnp
sub
cmc
je
les
pop
pop
add
clc
lcall
inc
sbb
out
add
mov
push
jno
or
mov
ljmp
cmp
fistpl
dec
jmp
or
add
mull
test
pcmpeqb
lcall
cli
popf
jo
add
or
out
add
dec
and
inc
std
es
imul
imul
sbb
rolb
or
cli
sbb
jg
mov
adc
and
pop
push
addr16
xlat
mov
lock
or
divl
add
sti
and
push
cltd
movsb
ljmp
lods
cmp
jmp
cmp
jne
push
std
sub
push
cmp
dec
push
push
add
jo
rclb
cwtl
sbb
adcb
add
and
or
subl
lcall
stc
pop
push
movsl
inc
orb
push
add
cmp
and
rolb
cmp
adc
cmp
cmp
sahf
and
enter
data16
xor
or
movl
repnz
adc
mov
adc
xchg
nop
movsl
add
cmp
mov
xchg
jle
test
sbb
push
adc
dec
xor
pop
sub
mov
add
and
or
push
cmpsl
bound
sbbb
mov
lahf
loopne
jb
add
call
and
mov
xchg
aas
and
jnp
adc
imul
dec
jbe
outsl
mov
das
adc
lods
icebp
lret
add
data16
fcomip
or
and
mov
pop
scas
pop
push
dec
adc
dec
shl
je
or
adc
jl
add
mov
add
and
push
movsl
mov
je
push
int3
orb
pop
das
xchg
push
adc
aaa
mov
jle
outsl
mov
inc
cmp
pop
in
clc
out
inc
ds
jecxz
jo
inc
add
mov
xorb
add
sbb
out
xchg
add
cmp
sbb
mov
dec
pusha
mov
js
add
cltd
lahf
ljmp
add
out
cmp
add
popf
fadds
sbb
sub
popa
inc
arpl
and
test
xor
out
and
dec
and
push
mov
aas
add
push
jae
inc
add
in
loop
aam
cmc
fcmovnu
dec
mov
mov
lea
pop
ja
mov
aas
mov
pushf
sub
lds
leave
stc
xor
xor
iret
addr16
xor
in
add
bound
cmp
fsubs
dec
jg
inc
add
mov
ljmp
jmp
add
sti
or
les
sub
mov
repz
add
mov
or
inc
xor
dec
mov
pop
sbb
add
pop
mov
adc
and
inc
inc
dec
add
cwtl
dec
fs
add
xchg
mov
cmp
mov
repnz
sarl
fldl
add
mov
orb
addl
and
pop
add
js
lea
push
in
add
daa
dec
aas
int
iret
cmp
sti
dec
sbb
add
push
fisubl
nop
addb
rclb
loopne
add
lcall
add
enter
sub
push
inc
adc
adc
add
or
aaa
lods
popf
add
ret
push
xchg
mov
add
or
or
andl
jo
push
cmp
xchg
and
addl
add
loop
lret
push
sbb
push
addb
dec
insl
pop
enter
cld
add
sarb
mov
movsl
adc
xcrypt-cbc
cmpsl
push
push
shll
xchg
xor
pop
add
xchg
cmpsl
lods
in
fs
add
jmp
or
push
mov
cmp
pop
add
ret
adc
or
add
mov
movsb
push
adc
and
subb
cmp
loop
in
sub
add
jno
inc
add
and
dec
lock
cmp
jge
test
and
test
mov
lods
push
push
sub
ficomps
js
pop
add
sub
dec
or
jbe
push
cld
sbb
inc
add
dec
pop
inc
mov
mov
loopne
mov
daa
xchg
roll
add
xor
imul
push
addl
ret
jbe
mov
add
or
int3
add
jne
or
jo
add
dec
push
ret
jmp
and
add
data16
cltd
add
and
inc
mov
push
push
nop
sbb
xor
dec
add
push
or
cwtl
push
ret
cmc
add
cmpsl
jo
repnz
jmp
xchg
xor
mov
push
lock
push
mov
into
xor
sub
mov
shll
cmc
sbb
enter
push
mov
mov
or
add
or
fstl
pop
add
xchg
lock
add
push
jne
jle
mov
or
add
loopne
mov
xor
jae
imul
and
das
dec
ljmp
hlt
data16
or
scas
inc
in
adc
sbb
push
jb
mov
cmp
inc
test
add
cli
push
insb
xlat
incb
jl
inc
xor
mov
je
arpl
push
sbb
rcll
outsl
lds
or
inc
loop
pop
sbb
addl
inc
dec
jne
dec
sbb
lcall
add
and
movl
shlb
test
pop
cmpsb
scas
in
outsb
mov
and
aaa
jo
jae
and
lock
inc
dec
sbb
adc
mov
cli
leave
ljmp
mov
dec
mov
add
push
and
rcrl
lea
inc
ret
mov
cmp
pop
test
add
fwait
cmp
loop
xchg
sbb
sbb
out
add
cld
dec
stos
add
ret
push
inc
lea
add
cmp
jge
test
out
or
xchg
clc
movb
pop
enter
xchg
call
jnp
aam
and
lock
xor
or
jo
add
or
push
sbb
adc
add
nop
js
je
jle
inc
pop
mov
add
arpl
xchg
add
dec
insb
lret
push
mov
mov
mov
mov
add
mov
pop
or
add
scas
dec
and
adc
lret
add
dec
es
mov
cmp
jle
jnp
jns
jge
out
add
jl
pop
cmpsb
and
pop
or
nop
shlb
and
das
add
test
pop
pop
mov
into
mov
out
dec
add
xchg
inc
jb
out
nop
cmpsb
or
pop
call
cmc
dec
les
decl
sbb
out
ljmpw
pop
or
je
adc
add
aad
pop
stos
add
mov
rorb
cmc
add
mov
clc
int3
or
jmp
sbb
or
dec
stos
mov
dec
mov
jg
aas
rclb
jo
cmp
push
add
cmp
jle
adc
out
add
dec
lods
pop
dec
arpl
adc
ljmp
pop
stos
fimull
mov
cmp
inc
pop
ja
pop
push
loopne
xor
mov
cmp
lods
cmpb
in
and
ljmp
shlb
out
sub
js
adc
push
arpl
add
cmp
xchg
inc
outsb
addr16
hlt
jo
sbb
js
sub
sti
add
jb
sahf
popf
dec
faddl
jp
imul
imul
inc
inc
push
ja
sbb
push
jl
cmp
sbb
add
xchg
or
pop
xor
outsl
aas
add
jno
push
mov
imul
jns
ljmp
data16
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
add
jno
mov
popa
adc
je
xchg
cmp
rorb
dec
outsb
jecxz
dec
stos
cmpb
and
jg
inc
or
call
sbb
shlb
push
push
ja
jo
arpl
inc
cmp
jecxz
push
popa
lock
push
sub
add
adc
xchg
mov
inc
outsb
add
fnstsw
add
adc
imul
roll
pusha
jns
add
out
mov
dec
xor
add
adc
push
je
add
cmp
andl
push
add
insl
data16
test
add
adc
jo
lods
push
bound
sahf
inc
mov
add
shlb
sbb
jbe
add
insb
pushf
mov
jno
push
popa
imul
jnp
ret
les
icebp
pop
into
pop
adc
add
jne
mov
mov
les
addb
out
xchg
sub
test
inc
pop
cmpsb
xchg
cltd
mov
sbb
lret
cwtl
sbb
push
notl
push
mov
xor
enter
call
cmp
inc
add
cmp
ret
pop
and
pop
push
cmc
sbb
lods
mov
popa
sarl
xchg
xor
shrb
add
inc
enter
cmp
jg
add
outsl
xchg
jmp
jp
jecxz
push
ljmp
mov
ss
out
add
mov
dec
test
or
push
movsb
ss
fwait
jne
int
imul
loopne
in
pop
ljmp
pop
std
mov
add
lcall
mov
or
push
sbb
andb
adcl
pop
movsb
add
sub
in
divb
add
adc
movsl
pop
push
cmc
in
loopne
jae
fiaddl
ret
sbb
add
test
jb
push
decb
scas
popa
popf
pop
or
cmp
add
in
call
loopne
add
cwtl
lods
push
add
dec
push
add
divb
add
data16
mov
jmp
hlt
mov
mov
inc
inc
leave
pusha
sbb
and
lret
into
adc
mov
call
rorb
pop
clc
mov
shl
pop
push
pop
sti
outsl
daa
xchg
xor
addl
sbb
rcrb
test
sbb
sbb
jle
pop
jne
fdivs
sub
mov
pop
cld
mov
cmp
add
jne
mov
jmp
stc
sbb
in
test
leave
les
xor
push
xor
in
sub
popf
jl
or
enter
cmpsl
ljmp
add
add
test
add
cmp
imul
andb
into
aas
fnstenv
inc
add
dec
mov
xor
mov
lea
add
jns
add
adc
shrb
inc
add
jae
mov
adc
cmp
arpl
mov
pop
cmp
push
add
mov
das
jo
add
add
out
mov
mov
fimuls
sarb
pop
jp
push
mov
mov
pop
and
add
stos
add
pop
jle
add
and
lods
xchg
adc
rclb
or
xchg
mov
push
cli
add
out
push
sti
sub
inc
add
pop
sbb
or
movsl
jp
adc
add
repnz
cmp
add
ret
adc
mov
pop
inc
push
cld
sbb
lcall
pop
repz
jno
add
clc
je
mov
dec
inc
add
loopne
xor
cmpsb
jae
xchg
mov
pop
pop
subl
and
jnp
add
subb
mov
out
mov
rolb
add
mov
jmp
add
xor
xchg
and
mov
iret
mov
icebp
mov
fwait
xchg
add
popa
cld
xor
jo
add
lret
pop
add
add
insb
sub
or
lods
mov
push
sbb
or
inc
pop
jae
cmpsb
mov
xchg
ret
lea
pop
push
sbb
sbb
add
out
ficoms
add
sbb
or
jmp
in
add
push
cli
dec
mov
add
push
pop
pop
or
cmp
pop
push
in
adc
call
jl
jnp
and
dec
addb
clc
ljmp
add
pop
add
int
push
jne
inc
out
jo
pop
popa
aaa
rorb
add
sbb
movl
add
outsl
lds
hlt
cmpsl
in
xchg
clc
mov
jl
xchg
leave
cmpsb
scas
jo
mov
and
lods
add
std
shlb
ss
add
cmp
test
pop
mov
rclb
hlt
xor
add
adc
out
push
cltd
into
add
mov
arpl
fs
aam
push
pusha
and
or
pop
mov
aas
sti
pushf
jecxz
add
pop
insb
adc
sbb
cmovo
rolb
movsb
leave
ficompl
pop
ds
andb
scas
adc
add
xor
in
adc
jb
cmc
icebp
outsl
ror
daa
add
lods
inc
cmpb
je
sub
pusha
mov
frstor
or
jmp
mov
push
push
roll
stos
sbb
push
cmc
mov
in
stos
add
or
pop
scas
pushf
add
rolb
dec
mov
adc
clc
and
pop
das
mov
inc
roll
add
sbb
lods
gs
rcrb
lock
add
push
mov
imul
jae
xor
jecxz
or
push
aad
rorl
add
and
call
push
stos
jno
inc
dec
sbb
mov
fsubl
popl
or
mov
sbb
mov
and
add
mov
out
lock
jne
test
jno
rorb
add
push
out
cmc
cmp
sgdtl
mov
imul
add
call
arpl
jbe
mov
ljmp
cmp
push
add
mov
mov
or
icebp
sub
push
pop
add
daa
inc
mov
js
sbb
aas
mov
mov
and
push
int3
call
mov
add
jno
insl
cmp
and
decl
jnp
rcrb
jle
sbb
and
nop
pusha
push
or
add
ret
movb
notb
sub
mov
test
push
rorl
into
call
add
test
cld
aas
add
push
push
inc
add
or
addr16
fldt
inc
sbb
push
add
cwtl
inc
xor
push
inc
xor
add
or
jbe
xor
test
movsb
div
js
or
out
push
add
pop
lds
mov
mov
add
push
jbe
rolb
inc
jp
sti
bound
dec
cwtl
jae
add
movl
add
mov
pop
sub
jle
nop
jp
inc
jne
addr16
sbb
add
push
pop
repnz
or
and
mov
inc
mov
mov
cmp
fadds
add
lahf
notb
mov
dec
pushf
add
push
dec
or
iret
clc
adc
adc
push
je
push
add
or
or
lret
dec
sbb
mov
scas
jno
push
mov
out
jle
push
add
mov
adc
and
mov
lahf
add
cmp
cmp
adc
pushf
sarb
push
int3
nop
loopne
add
cmp
and
inc
push
sub
cmpl
lods
push
xchg
mov
shl
jle
or
repnz
aas
jmp
push
call
add
jno
dec
adc
push
mov
add
mov
in
inc
outsl
push
in
cmp
sbb
push
add
cmp
inc
popf
clc
sarl
push
loopne
mov
sub
pop
push
sub
test
jae
and
in
sub
dec
sbb
rorb
add
dec
add
add
xchg
add
pxor
gs
jbe
in
test
pop
add
or
add
cmpsb
fisubs
icebp
cmp
add
fistpll
add
rorb
pop
fildl
mov
dec
adc
or
adc
xchg
iret
sub
enter
hlt
and
roll
mov
mov
add
ret
xor
dec
rcrb
add
push
cmpb
movb
xchg
andl
popa
add
cmp
shlb
ficoml
push
or
xor
push
ja
scas
mov
mov
and
or
adc
lds
dec
out
jnp
repz
and
addb
add
pop
in
inc
jle
push
aas
or
or
add
jo
jle
ljmp
pop
jno
int3
jl
out
dec
je
stc
in
cmp
repnz
and
decl
sbb
movsl
add
jmp
add
dec
pop
and
cltd
mov
inc
push
sub
cmp
pop
cmpb
fbld
pusha
cmpsb
or
add
push
pop
sbb
xor
in
inc
jp
push
shr
pop
loopne
sub
mov
pop
mov
adc
loopne
and
sbb
js
cmp
add
pop
mov
cmp
push
push
or
jl
pop
jbe
pop
rcl
mov
pop
add
movsb
cmp
sub
xor
adc
cltd
int3
fs
sti
jo
mov
push
xlat
xchg
mov
add
pusha
mov
cmp
add
adc
or
or
rcrb
iret
aam
inc
add
pop
jbe
push
pop
adc
xorb
or
mov
add
xor
nop
adc
call
sbb
sar
psubb
add
sub
sbb
test
icebp
and
filds
push
jns
inc
das
stos
dec
mov
jecxz
popa
xor
cwtl
dec
cmp
add
push
sbb
sbb
add
sti
cmc
push
mov
push
sub
mov
nop
inc
add
adc
push
rolb
dec
sub
dec
adc
and
cmp
add
ret
mov
push
jne
mov
call
or
add
jmp
sub
add
enter
sbb
aaa
xchg
inc
es
nop
lret
add
pop
xchg
cld
sub
add
and
mov
in
mov
sbb
loope
loopne
add
js
icebp
loop
mov
int3
les
test
rorl
mov
aad
add
aam
test
push
adc
inc
or
add
pop
ret
jnp
add
mov
add
or
xchg
inc
mov
or
lret
loopne
test
data16
js
jge
or
ljmp
iret
arpl
rclb
add
movsb
add
add
mov
sub
inc
and
mov
xchg
add
cmpsb
adc
mov
pop
sub
dec
jge
and
les
je
adc
pop
hlt
jp
xchg
loope
jmp
mov
adc
pop
lret
mov
adc
orb
xchg
jl
cwtl
clc
pop
and
jnp
push
cmc
or
fwait
outsb
sub
add
pop
and
fucomip
call
jp
imul
xor
push
push
push
or
inc
push
faddl
cmpsb
dec
jecxz
outsb
cld
sbb
jo
int3
mov
adc
push
push
xor
pop
into
rcr
sbb
fstpl
leave
jge
add
push
andl
or
add
aas
mov
mov
mov
dec
aas
movsb
add
pusha
hlt
xor
sti
pop
rolb
es
lods
cmp
pop
cmpsb
xchg
cld
xor
jb
sbb
testb
and
loope
sub
rolb
mov
jmp
push
adc
in
and
sar
sbb
pop
adc
outsb
sub
movsb
xorb
mov
jge
or
push
pop
sti
clc
ljmp
and
inc
inc
sub
cmp
dec
cmp
add
mov
lods
stc
inc
scas
pop
mov
push
xor
rclb
lds
pop
mov
sbb
mov
add
mov
mov
rcr
orb
and
stos
xor
add
out
xchg
fistpl
in
or
call
add
mov
test
push
add
mov
sbb
adc
cmpsl
ja
popa
jmp
or
mov
loopne
sbb
fsubrs
xor
lock
sbb
or
cmpb
sub
pop
add
adc
stc
add
cmp
arpl
nop
fs
push
andl
lret
das
pop
and
test
mov
or
cltd
add
add
sub
movsb
fcoms
and
in
ljmp
test
mov
jg
loopne
xor
testb
stos
cmp
lea
dec
decl
ficoml
stc
and
imul
in
pop
into
int3
add
sbb
pop
add
imul
add
xor
adcb
add
mov
cmp
bound
clc
and
dec
push
shll
stos
add
fcomip
andl
mov
mov
add
mov
pop
idivb
pop
lret
add
andb
mov
jo
add
adc
ret
add
loopne
cltd
mov
jae
add
addl
lock
out
pop
jb
push
or
sbb
jle
or
push
testl
jecxz
rorb
and
dec
or
nop
mov
lret
sbb
clc
shll
mov
add
mov
in
jne
jmp
add
lds
rdmsr
add
das
in
lods
push
sub
subb
mov
mov
xchg
lods
paddsb
loopne
xchg
sbb
add
mov
add
lret
push
or
sub
xor
add
adc
ds
adc
loope
add
enter
inc
andb
shrl
js
add
jmp
mov
add
sbb
push
add
leave
insb
in
pop
dec
add
iret
sbb
lods
pop
and
subl
mov
and
cmpb
add
adc
sbb
and
enter
pop
call
fcmovb
dec
out
leave
add
sub
cmp
mov
rolb
adc
jbe
jmp
sbb
xchg
mov
pop
lcall
xor
mov
je
jmp
mov
ret
add
fwait
shlb
je
push
pop
or
mov
xlat
push
lods
fimuls
jle
lea
orb
xchg
ret
lahf
sub
jns
pop
fwait
adc
push
sub
add
add
sub
sub
jp
push
sub
andl
je
aaa
fs
jae
add
int3
sbb
add
lea
pop
cmp
mov
xlat
out
filds
sub
lret
popa
cmp
shlb
push
out
ds
push
mov
adc
mov
add
xor
cmp
lea
and
push
pop
add
es
add
adc
pop
sub
dec
mov
add
gs
push
sub
in
dec
seto
lock
and
dec
loope
adc
or
mov
imul
add
xchg
mov
mov
and
add
leave
pop
adc
mov
sbb
dec
jns
rcll
cltd
rcrl
xlat
lods
lock
adc
and
sbbb
xchg
aas
jg
sub
cmpsl
mov
cwtl
icebp
call
add
mov
repnz
mov
mov
adc
jl
cmpsl
fadds
fistps
outsb
stos
xchg
nop
cld
test
push
rorl
mov
inc
flds
inc
add
sarb
dec
or
pop
movsb
fs
into
push
test
scas
and
xor
mov
mov
adc
shrb
pop
in
add
push
ss
xchg
jecxz
lds
repz
dec
cli
ret
push
mov
pushf
rcl
popa
cwtl
cs
add
fs
pop
push
add
dec
add
sub
test
add
cmc
sbb
dec
xchg
or
ror
fs
cld
ret
add
push
addr16
js
outsb
adc
ffreep
mov
imul
scas
sbb
sub
add
leave
xchg
out
daa
ss
popf
add
mov
shr
enter
popa
call
mulb
sbb
xchg
pop
dec
or
jae
xchg
fucomi
add
xchg
add
adc
shl
jns
data16
mov
outsb
cmp
shll
add
add
xchg
xchg
lret
mov
jnp
pop
xchg
out
cmp
and
add
xor
adc
clc
fucomp
in
fidivrl
movsb
addl
pusha
cld
push
add
dec
push
adc
mov
add
mov
loopne
cs
aam
cmp
dec
xor
push
ja
mov
add
push
popa
leave
or
sub
les
dec
addr16
out
into
add
in
sub
sub
adc
in
lret
dec
cmp
dec
dec
mov
dec
xchg
je
jecxz
shlb
ljmp
add
jno
or
mov
inc
xchg
test
adc
and
movsl
sbb
stc
sub
and
xchg
mov
xlat
das
xor
je
push
imul
data16
add
mov
imul
faddp
outsb
and
inc
lods
mov
inc
aas
add
xchg
mov
sahf
add
test
loopne
mov
xchg
add
cld
je
inc
out
jae
push
es
out
adc
je
add
and
sub
test
fwait
push
rorl
or
pop
sbb
adc
xor
jae
popf
rorb
std
cmpsl
add
jle
les
aas
adc
sbb
sbb
mov
cmpl
xor
insb
push
cmp
in
fdivr
sub
sub
ret
ja
adc
shl
add
sub
aad
jmp
pop
mov
push
mov
loopne
add
outsl
pop
lea
enter
lds
mov
push
xchg
addl
push
pop
fadds
sub
inc
pop
jae
jo
sub
add
int3
push
pop
js
add
or
pop
rcl
push
roll
test
jae
je
or
adc
sub
outsl
shll
stos
jbe
fsubrs
sbb
add
push
dec
insb
enter
adc
add
push
push
cld
lar
adc
and
mov
jecxz
lahf
add
add
mov
outsl
mov
es
mov
push
and
add
js
pop
add
inc
bound
ret
xchg
jo
ret
push
insb
std
mov
sub
andl
inc
add
loop
add
add
push
dec
popa
mov
jp
mov
jns
roll
mov
mov
andb
add
mul
mov
jg
add
jmp
fwait
or
sub
lds
sub
push
nop
sbb
sub
add
add
rolb
mov
call
add
adc
adc
shrl
xlat
fxch
adc
call
shlb
inc
add
pop
mov
add
adc
or
or
cltd
je
xchg
or
imul
addr16
inc
dec
push
and
call
faddl
add
es
pop
adc
jo
add
cmp
jae
gs
aaa
inc
fdivs
pusha
pop
lea
into
push
pop
add
xor
xchg
cld
or
in
xor
shll
cmp
or
cmpsb
push
mov
insb
add
imul
ja
psubsb
sbb
addr16
daa
adc
iret
cmp
push
jle
add
jmp
xchg
mov
add
iret
jle
sbb
pop
and
add
mov
lcall
nop
dec
std
and
add
addr16
dec
fisttps
sbb
adc
test
ds
and
push
imul
dec
push
ja
inc
mov
xor
or
jmp
pop
inc
jl
cli
mov
pop
in
repz
sub
add
out
lock
popf
xor
pop
push
icebp
xchg
mov
xchg
es
mov
push
cli
test
jecxz
fadds
in
imul
push
dec
enter
xchg
or
dec
lock
mov
add
out
fildl
and
imull
mov
xchg
inc
stos
add
xchg
mov
mov
fisttpll
sbb
or
push
testb
je
aas
mov
imul
add
push
fisubs
dec
pop
mov
or
test
and
push
lahf
sbb
cmp
add
sbb
ja
push
inc
xchg
scas
push
pusha
aas
testl
stos
lods
push
add
lret
mov
xchg
adc
jo
roll
imul
in
outsl
enter
adc
lahf
and
mov
lock
test
js
sbb
fiadds
fldenv
or
jp
adc
imul
insb
lret
and
jecxz
fcom
or
outsl
iret
add
mov
insl
sbb
mov
and
adc
rorl
sub
call
add
js
dec
lods
mov
pop
inc
mov
xor
cmp
push
std
pusha
xchg
and
or
popf
and
movups
ret
add
daa
je
or
addr16
insb
movsb
sub
addl
add
add
fisttpll
inc
test
add
inc
push
mov
lret
testl
add
and
repz
and
pop
adc
shr
xor
aad
loop
insl
mov
js
jg
les
outsb
and
xchg
xchg
add
and
adc
mov
sbb
lcall
inc
add
pushf
add
scas
lahf
enter
inc
cmp
mov
repnz
nop
nop
jnp
andl
pop
xchg
sub
xchg
popa
or
push
das
fists
pushf
push
stc
mov
adc
or
cmp
into
pusha
mov
adc
enter
test
mov
sub
into
pop
add
andb
push
lds
mov
jp
ja
add
outsl
and
add
clc
adc
jmp
sbb
sub
stos
fldt
push
pop
add
dec
and
mov
in
mov
push
fcompl
incb
and
add
pop
pop
dec
xchg
ja
ret
cmp
cld
xlat
fidivrs
push
popa
stos
and
addr16
lock
add
dec
test
mov
mull
das
jne
pusha
popf
stos
xor
mov
jno
pop
or
testb
push
jmp
dec
leave
pop
inc
add
loop
ljmp
cli
pusha
cmp
popf
jp
inc
and
test
xchg
inc
add
adc
xchg
xchg
xor
sbb
and
sti
jbe
jg
mov
add
push
dec
add
insb
dec
jg
mov
xor
cmc
bound
inc
idivb
leave
or
push
sahf
fsubl
dec
adc
js
rcl
mov
push
inc
addl
or
shr
test
icebp
push
mov
dec
inc
jne
cli
and
push
inc
and
inc
dec
sbb
sub
shlb
aas
add
push
sbb
mov
mov
jle
outsb
fsts
mov
add
dec
pop
push
mov
jb
out
mov
sbb
repnz
mov
aam
and
mov
xchg
scas
test
fmull
mov
sub
mov
lret
in
lcall
sub
cmp
push
call
cld
and
add
cmpsl
sbb
xlat
lret
aad
in
mov
cli
fadd
mov
or
dec
push
clc
and
add
lret
fdivr
jmp
cmp
imul
shlb
or
xchg
sbb
iret
sub
push
add
outsl
adc
xchg
xchg
std
lahf
and
add
jmp
cmpsb
cmova
push
add
repz
hlt
pop
mov
jbe
or
mov
xor
inc
pop
mov
adc
add
cmp
push
or
push
and
add
fwait
mov
les
pop
pop
xchg
cmpsb
inc
cmp
int3
popf
xor
push
add
or
clc
mov
sub
push
aam
inc
xor
ljmp
or
pop
or
unpckhps
push
loopne
sub
clc
lcall
repz
mov
cmp
sbb
mov
add
jno
add
xchg
enter
mov
jns
mov
add
in
jo
lock
push
js
cmpsl
adc
dec
add
jne
xchg
imulb
cmp
sarb
pop
adc
cmpsl
fs
and
loopne
mov
lock
cmp
inc
add
mov
repnz
dec
push
loopne
inc
pop
adc
shrb
cmp
stos
js
mov
push
insb
cmp
mov
dec
pop
push
imul
imul
dec
loopne
dec
push
dec
pop
les
ds
dec
lret
or
pusha
and
sti
clc
addl
mov
in
rcll
jae
push
daa
xchg
leave
rclb
add
into
rcr
les
scas
test
mov
xchg
cmpsb
add
push
stos
ja
lret
add
movsl
add
cmp
gs
je
lock
push
or
loopne
jne
add
imul
cmpsl
jb
aam
xor
mov
and
xor
je
xchg
xchg
out
clc
push
pushf
pop
mov
pop
sub
dec
sbb
pop
inc
mov
shlb
mov
and
cmp
cmpsl
stc
push
add
sub
clc
inc
xor
xor
arpl
aaa
fwait
or
push
or
pushw
fstpl
lock
mov
or
push
daa
push
pop
add
mov
mov
cvtdq2ps
push
iret
ljmp
and
jge
add
sbb
and
lock
addl
jmp
jg
in
movsl
shrl
loope
cmp
test
out
jns
movsb
pop
mov
mov
rclb
or
subl
int
add
shlb
add
imul
add
dec
arpl
add
pop
pop
xor
test
movsl
mov
xor
add
hlt
insl
outsl
mov
add
or
lret
pop
addr16
rolb
sti
movl
aam
push
enter
inc
pop
clc
adc
add
bound
dec
arpl
stc
jp
sub
hlt
xchg
mov
cmp
dec
mov
prefetch
or
dec
mov
setno
push
mov
cmc
xor
lock
mov
adc
mov
int3
cmovo
pusha
xor
std
in
arpl
xor
test
dec
jp
add
add
sbb
repz
pusha
in
jb
inc
das
filds
data16
cmpsl
repnz
inc
dec
nop
sub
push
daa
xchg
aam
mov
andb
or
inc
jne
pop
xor
and
idiv
push
popf
add
xchg
hlt
movsb
out
cmp
and
and
or
mov
test
mov
push
pop
jg
mov
jb
test
je
jecxz
mov
lret
outsb
dec
shlb
jne
insl
ret
cmp
inc
jbe,pt
shr
outsl
mov
test
ret
mov
push
pop
sahf
outsb
loopne
mov
nop
sbb
mov
add
call
and
outsb
add
imulb
aad
cltd
fimull
add
inc
mov
xchg
fcoml
sbb
mov
jo
xchg
adc
fcom
xor
add
adc
and
and
cmp
sub
das
enter
push
push
mov
jmp
and
xchg
hlt
jp
add
jl
in
test
pop
adcb
mov
add
cmp
daa
push
inc
lea
push
or
es
mov
xchg
mov
movsb
add
cmc
into
cmovne
mov
push
data16
mov
jnp
or
fdivrs
xchg
lock
mov
mov
mov
mov
xchg
sub
inc
add
add
aad
js
and
mov
and
sbb
movl
jmp
fstl
adc
mov
andl
loopne
and
test
pusha
and
add
adc
pop
leave
sarl
and
or
psubusb
add
scas
imul
xor
shlb
add
sbb
int3
xor
jmp
loop
dec
int
xor
add
in
or
add
inc
inc
daa
jg
add
lahf
or
and
movsl
add
pop
repz
push
jl
add
scas
mov
pop
in
jae
pop
addr16
push
hlt
lock
ret
call
dec
adc
xchg
lods
sub
add
jo
or
jno
cmp
add
scas
adc
clc
clc
test
sar
setae
loop
cmp
lret
mov
push
and
add
xchg
add
adc
and
test
cs
sti
jp
mov
add
sub
imul
add
xchg
pop
jmp
add
mov
je
jno
fmull
rorb
push
pushf
insl
inc
xor
push
lock
sbb
mov
add
lcall
sbbb
lret
sub
inc
push
cwtl
rorb
push
mov
pop
and
add
mov
mov
xor
push
out
loopne
jae
cmp
add
dec
decb
or
mov
sbb
add
fwait
aas
cmp
push
clc
dec
add
cwtl
push
lods
cmp
cmc
sbbb
mov
in
pop
dec
ret
aas
and
lock
lcall
loopne
jmp
push
aaa
fwait
leave
fmuls
scas
popf
add
lods
stos
add
or
sub
dec
cmp
insb
jmp
inc
or
add
pop
xchg
mov
cmpsl
jl
mov
es
test
and
pop
subb
pop
mov
xchg
sub
cmp
jnp
fisubl
out
lahf
addr16
out
addr16
ror
jns
pop
fsubrs
add
imulb
add
cmpsb
ret
stos
xorl
add
sbb
cwtl
pop
mov
je
lds
loopne
enter
mov
shr
xchg
or
cld
iret
pop
mov
mov
pop
add
jp
cmp
jmp
das
mov
jb
cwtl
sbb
not
push
test
mov
out
repnz
lods
aas
and
test
cltd
scas
jle
push
add
mov
clc
ds
xchg
and
mov
xor
sub
add
notl
leave
out
fadds
cmp
push
daa
dec
mov
lahf
lods
pop
popf
inc
add
sbb
loop
addb
je
ja
lret
add
or
clc
add
icebp
lods
adc
add
jg
adc
data16
rorb
push
push
mov
fnstenv
add
test
xor
add
add
inc
dec
cmp
dec
adc
in
add
in
lahf
hlt
mov
xchg
lea
andb
sub
add
movsb
or
xorb
jle
add
add
push
nop
fwait
cwtl
mov
adc
mov
lods
or
xor
cmp
mov
scas
pop
jl
push
xchg
lods
push
add
pop
lret
mov
ret
dec
int
cwtl
mov
rcrl
je
add
push
stos
add
aam
adc
int
push
xchg
cmpsl
push
inc
and
inc
jo
imul
adc
dec
shrb
pop
in
xchg
pop
in
mov
inc
stc
xor
mov
xor
mov
cmpsb
and
mov
fwait
movsl
sub
test
pop
fmull
aaa
push
sub
ja
mov
push
lret
or
sti
xor
or
shrd
sarb
add
bound
add
cltd
inc
sbb
dec
sbbl
dec
test
out
add
mov
mov
push
dec
add
bound
add
jmp
xor
jno
aam
mov
and
add
dec
daa
xor
add
movsb
ljmp
lods
or
cmp
adc
rolb
imul
out
fdivp
leave
fwait
gs
lahf
hlt
sub
mov
cwtl
inc
add
insb
push
aam
cmp
mov
push
out
or
push
popf
cmp
dec
dec
je
xchg
mov
xchg
inc
sbb
push
out
add
or
sub
dec
je
pusha
jnp
add
pop
popf
loop
loope
lock
add
scas
push
lods
pop
or
xor
mov
add
movsl
fsubrs
pop
or
xor
add
xchg
jge
and
rcll
jo
je
dec
dec
jl
dec
mov
pop
sub
add
cmp
ja
add
lret
fs
push
ljmp
push
xchg
mov
in
pop
jbe
adc
xor
cmp
add
stc
push
sbb
cld
lret
push
add
adc
dec
jo
pop
mov
rolb
cmpsl
push
mov
adc
pop
pop
mov
pop
or
and
add
inc
add
rorl
std
lret
or
or
xchg
push
daa
and
push
cmpsl
enter
in
addl
cmp
jb
and
pop
rorl
inc
push
enter
xchg
aas
push
call
cs
mov
sub
leave
adc
das
xor
add
add
xchg
in
mov
inc
add
mov
mov
adc
in
pop
add
int
fwait
or
inc
pop
mov
mov
pop
pop
adc
rcll
call
inc
clc
adc
add
xor
mov
pop
pop
daa
pop
dec
out
inc
push
and
push
fmuls
loope
rcll
aas
les
lock
xor
nop
or
jecxz
out
or
and
aaa
adcl
fsubl
jge
add
adc
aaa
push
push
lods
add
jne
cli
pop
inc
pop
and
testb
push
cwtl
pop
xor
xor
mov
pusha
int3
lock
push
sub
pop
xor
and
push
xor
adc
add
lea
addb
mov
cmpsb
xchg
jb
inc
add
mov
add
jne
test
adc
ret
add
pop
clc
rolb
xchg
or
fdivr
pop
rcll
lahf
jmp
inc
cmpl
add
adc
and
stc
or
pop
or
inc
push
push
sbb
rorb
inc
outsb
jne
add
sub
idiv
dec
mov
inc
inc
movsb
call
and
out
ja
sbb
push
jo
jne
mov
mov
out
mov
add
test
je
cmpl
mov
scas
sbb
add
sti
dec
arpl
xchg
cld
add
adc
gs
int
das
and
dec
add
mov
stos
add
loop
xchg
or
fistl
mov
pushf
test
pop
cmp
mov
jle
add
nop
inc
jmp
repz
xchg
jmp
mov
mov
jge
add
xor
or
mov
ret
bound
out
inc
daa
adc
or
xor
sbb
cmp
pop
adc
gs
jb
jg
mov
cltd
cmpsb
mov
sar
add
out
push
inc
clc
add
rcll
adc
inc
jnp
das
jle
fbstp
lahf
roll
jmp
sbb
cmp
inc
data16
pop
bound
mov
sbb
lock
and
nop
cli
add
xchg
icebp
and
pop
nop
sbb
xlat
fwait
testl
mov
es
add
test
syscall
out
xchg
mov
cmp
add
dec
cmp
ljmp
or
sub
add
dec
nop
repz
scas
add
shll
push
jecxz
add
jp
pop
jmp
and
sbb
mov
in
add
sarb
dec
inc
cld
jb
add
dec
mov
cld
xor
jo
mov
adc
inc
mov
clc
out
pop
hlt
mov
cmp
out
sbb
stos
adc
jmp
mov
or
add
hlt
mov
add
aas
sahf
or
lret
pop
pmuludq
dec
test
or
lock
push
add
mov
in
sub
mov
add
lcall
ja
or
sub
aam
shr
test
jbe
xor
imul
cli
and
sub
push
xor
dec
addl
mov
in
out
stos
add
xchg
insb
mov
mov
loopne
test
add
addl
mov
and
adc
pop
adc
in
loope
inc
or
jno
xor
xor
mov
sbb
leave
adc
cmpsb
adc
lods
add
lret
cmpl
mov
or
mov
add
push
pop
push
xor
imul
lret
adc
jle
mov
dec
adc
xchg
int3
sbb
add
dec
jmp
add
int
repnz
out
iret
into
add
add
cmpb
addl
out
test
inc
adc
push
and
and
jne
popf
stc
push
add
push
sub
iret
fadds
adc
push
pop
aam
movsl
fsubrl
add
dec
sbb
hlt
and
addb
mov
pushf
pop
push
ljmp
xor
mov
or
test
add
std
push
push
push
add
shlb
or
mov
xor
addl
push
mov
iret
shlb
cmp
adc
jg
das
pop
push
repz
sbb
cmpsl
faddl
rorl
les
mov
adc
dec
pop
add
loopne
cmp
mov
pop
loopne
andb
jl
inc
xor
adc
pop
xlat
mov
and
dec
mov
jle
cmp
dec
or
add
sahf
sub
adc
xor
push
xor
out
push
in
aad
ds
test
ret
add
std
cli
add
jne
push
cld
mov
push
mov
sbb
hlt
ficoml
add
mov
pushf
and
add
jp
mov
adc
add
inc
add
mov
adc
mov
add
cltd
lret
ret
xorb
fists
add
push
xor
sub
ja
mov
adc
mov
popa
xor
imul
cmp
dec
cld
lock
pop
add
cmp
xchg
scas
or
mov
mov
add
add
je,pt
in
add
scas
cmpsb
mov
mov
add
sbb
lock
sub
add
mov
rolb
xor
mov
cmpb
nop
add
or
femms
xchg
out
xchg
jb
sbb
pop
ret
mov
jle
and
out
jge
xchg
sarl
nop
sub
stc
add
leave
sub
rorb
roll
adc
push
lea
add
mov
or
add
ret
jo
lahf
das
jae
adc
dec
add
mov
inc
pop
mov
lock
sbb
movl
pop
shr
jo
mov
add
sbb
add
int3
pop
adc
hlt
fdivrs
mov
xor
daa
movb
dec
jbe
int3
pop
rolb
or
mov
add
sub
jb
jecxz
cli
push
or
orl
and
xor
push
cmp
add
mov
es
fcomps
test
inc
lret
adc
add
mov
icebp
jl
adcb
movsl
loopne
add
movsb
pop
add
lods
dec
adc
and
add
and
rorb
sbb
lret
jle
cmp
ds
jge
leave
inc
mov
rorl
outsb
cmp
add
mov
xchg
mov
orl
sub
add
hlt
cli
aad
lods
xor
push
adc
add
idivl
daa
aam
push
jmp
mov
fstpt
out
test
mov
mov
mov
add
repz
in
mov
pop
mov
test
cmpl
jg
add
shr
rolb
lock
cmpsb
lret
mov
xchg
dec
mov
pop
dec
pop
notl
or
icebp
pop
sbb
push
jnp
push
lret
imul
hlt
add
loop
push
aas
clc
mov
popl
movsb
push
es
xor
ljmp
add
lock
mov
aaa
jne
repnz
or
inc
test
xchg
add
xlat
xchg
pop
xchg
dec
inc
add
insb
adc
fdivr
add
add
inc
inc
aas
popf
add
adc
inc
add
and
mov
push
or
add
jae
imul
lea
xchg
add
in
lret
xchg
push
xchg
pop
orb
inc
xchg
push
inc
mov
or
dec
shrb
fiaddl
lea
dec
ljmp
pop
push
dec
and
loopne
outsb
gs
add
lahf
jl
sbb
sub
inc
mov
jnp
cmp
and
adc
test
push
stc
or
shlb
out
inc
add
or
shl
aam
in
mov
lea
in
jo
shll
xchg
adc
xchg
xchg
sbb
add
mov
push
xchg
lcall
mov
negb
movsb
adc
mov
cmp
pop
stc
xchg
jne
mov
push
fs
ret
add
mov
xor
add
cmpsb
adc
add
enter
fs
jg
pop
add
popf
dec
mov
cmp
xchg
fisttpll
call
stos
add
popa
add
inc
shr
lea
mov
jle
mov
js
pop
or
mov
mov
dec
add
pop
ja
enter
ret
ja
ja
popa
push
push
xchg
xor
add
push
test
jbe
es
mov
mov
cmp
push
ja
xchg
sbb
mov
inc
cmp
sbbb
mov
push
add
mov
mov
jp
ret
mov
scas
test
jae
ds
out
andb
leave
fldt
pop
lret
add
mov
and
add
xor
add
jae
hlt
fisubrs
adc
and
add
test
int
add
movaps
mov
push
aam
add
in
pushf
add
add
out
lret
adc
pushf
faddp
jns
daa
xchg
add
call
inc
and
neg
add
jge
push
add
xchg
psrlq
pusha
sbb
sbb
push
add
test
jne
ja
add
fsubp
fistpl
std
stos
insl
add
add
sub
push
add
notb
xor
cmc
incl
inc
lds
push
xchg
pop
sbb
fildl
add
mov
jb
std
loopne
cmp
add
push
lea
ficoms
insb
xorb
xor
test
sbb
add
lock
fcompl
movsb
push
sar
aas
test
cmpsl
aam
sub
jb
add
cli
xor
jmp
push
mov
xor
mov
push
mov
loop
popa
ret
cmp
add
pop
pop
pop
push
push
add
ljmp
jae
pop
add
and
jb
sbb
cmp
jns
add
addr16
inc
xchg
cmpb
adc
mov
pop
jmp
add
xchg
push
add
or
inc
push
inc
sbb
sar
dec
insb
xchg
lock
or
ljmp
stos
add
cld
sub
rolb
test
add
or
mul
jo
repnz
pop
cmp
cmp
daa
mull
or
pop
addb
cmova
jae
pop
push
cmp
inc
mov
pusha
and
push
pusha
adc
pop
add
jp
loop
pop
outsl
fld
dec
lock
sbb
fmul
sti
test
add
add
adc
jmp
fimuls
add
xor
push
sarl
add
mov
xchg
cmpl
mov
jmp
xor
and
push
and
mov
mov
push
add
lahf
fs
or
xchg
add
les
and
cld
mov
jnp
cli
add
sub
cltd
jne
outsl
push
jb
add
pop
xor
inc
je
or
xlat
push
xchg
push
out
add
push
jg
adc
dec
add
jae
outsb
adc
push
add
sub
mov
dec
xor
add
cmp
pop
add
mov
shrb
aam
inc
in
stos
add
sub
pop
push
fisttps
xlat
xor
add
push
les
mov
pop
cwtl
adc
dec
je
push
sbb
aaa
lea
or
int
add
jmp
inc
sbb
adc
mov
add
push
movb
xor
xor
or
add
cmpl
adc
push
clc
mov
jbe
lret
fsubs
adc
pop
inc
leave
xadd
addr16
adc
xchg
popf
add
sbb
push
icebp
mov
add
ret
push
add
dec
sub
and
insl
mov
cmp
dec
pop
les
cmp
hlt
inc
rcl
adc
add
adc
dec
adcl
int3
push
testl
lret
lods
pop
ret
add
icebp
movsl
js
clc
cmpsl
fadds
push
out
or
inc
add
cmp
or
mov
inc
sub
push
dec
push
stos
xchg
add
dec
and
adc
adc
mov
popf
and
xchg
add
adc
mov
lods
imul
fisubrl
sarb
movsb
add
mov
or
test
inc
hlt
int3
add
pop
fisttpl
scas
lock
push
add
add
outsb
fs
sbb
or
xor
scas
lret
or
add
mov
pop
into
inc
xlat
cmpb
push
inc
lods
mov
rolb
add
xchg
in
adc
add
or
jns
add
add
dec
mov
push
dec
cmpsb
mov
and
add
cmp
push
adc
adc
mov
xlat
push
adcb
ficoml
inc
adc
addr16
sub
push
xchg
cmp
add
mov
jp
shrb
pop
or
bound
and
inc
je
cltd
push
add
dec
nopl
das
push
ds
nop
add
adc
mov
push
test
or
pusha
addl
sbb
mov
or
xchg
cmp
mov
mov
mov
sar
loopne
and
fiadds
sub
dec
mov
pop
aam
jo
enter
pop
jl
test
jo
sub
or
mov
fnstenv
mov
mov
lods
orb
pop
and
loop
inc
mov
dec
adc
mov
push
call
test
add
cmp
add
jecxz
hlt
fstpt
dec
add
sahf
bound
add
mov
mov
mov
sbb
xchg
add
popa
nop
push
sbb
sub
add
add
ja
ffree
jecxz
jg
push
cmp
dec
add
in
gs
sbb
or
or
push
add
push
add
nop
aad
js
test
add
dec
lds
stos
mov
mov
add
cmp
into
lock
ljmp
xchg
sbb
in
andb
ja
add
sub
call
mov
jns
mov
int3
add
add
jge,pt
pop
push
fs
and
daa
mov
adcb
mov
pop
add
in
data16
push
negb
fwait
pop
inc
cmpsl
rclb
sbb
aas
test
loope
push
jae
mov
fldcw
aad
jbe
jo
add
mov
mov
add
mov
test
sub
cwtl
cmp
cld
mov
andl
add
cltd
sarb
repnz
cmp
add
jns
or
sub
cmp
inc
fstpt
push
addb
daa
mov
loopne
push
adc
rorb
stos
jecxz
mov
push
inc
mov
sbb
cmc
rcrl
add
sub
dec
xchg
sub
jp
add
mov
add
inc
fdivrs
repnz
or
pop
add
pop
mov
add
pop
repz
mov
pop
in
jmp
jge
sbb
push
pop
sbb
add
outsl
jo
add
jmp
cmpsb
loopne
add
sbb
adc
jae
outsb
jo
add
cltd
push
mov
jmp
imul
jae
add
sbb
in
sar
pop
add
aam
sbb
cmc
popa
mov
or
push
les
popf
inc
out
push
fdivs
mov
loope
mov
push
dec
sbbb
push
push
sub
or
adc
sarl
cmp
push
inc
pop
repz
and
pop
jmp
movb
or
add
sub
jnp
jg
nop/reserved
in
loopne
and
push
pop
sub
rolb
cld
sub
dec
ja
clc
xor
add
leave
je
js
aaa
lods
add
std
iret
cmpl
shr
pop
movb
dec
add
out
push
push
pop
sub
cmp
jne,pt
mov
rcrb
fmuls
add
sub
jmp
add
pop
mov
add
aaa
mov
popa
aas
loopne
ret
add
inc
jmp
aaa
xlat
add
adc
lret
dec
mov
aas
loopne
icebp
sbb
or
add
mov
loope
fsubp
cmc
add
andb
sbb
or
push
outsb
into
loopne
push
adc
jae
cmp
inc
mov
pop
ljmp
pusha
or
cltd
mov
in
notl
stc
pop
push
cmp
xor
mov
lods
pop
clc
pop
mov
jle
out
out
push
in
sti
popl
les
je
std
add
cltd
jno
lods
imul
ljmp
das
sub
aad
add
lods
sbbb
or
into
add
dec
adc
mov
mov
cmp
push
divl
add
sbb
mov
xor
outsb
shrb
jne
add
cld
loop
mov
lods
call
pop
int3
sub
jo
add
jecxz
inc
add
inc
int3
aas
dec
cwtl
out
add
ss
jne
jae
nop
roll
xchg
dec
mov
add
fistpl
imul
mov
jcxz
pop
add
nop
pop
inc
inc
call
mov
add
sbb
mov
fbstp
jle
aam
push
jl
jge
pop
in
es
ss
sub
dec
lret
mov
loopne
jb
add
push
jae
add
repnz
rclb
in
cmc
or
or
mov
pop
fwait
es
out
cmp
adcb
rcr
mov
pop
sub
gs
jo
fwait
pop
sbb
sbb
sar
mov
fsubrs
add
inc
daa
add
lret
push
fucomp
add
sar
btc
jge
and
dec
jns
add
repz
xor
mov
push
mov
push
push
testl
push
xchg
lods
sbb
mov
add
sbb
in
sbb
mov
push
mov
test
xor
mov
out
jl
aad
loopne
add
or
mov
cmc
rcll
dec
mov
add
inc
jmp
pop
sbb
jne
push
and
sub
aas
mov
cld
adcb
sti
add
add
inc
pushf
or
add
push
or
fnsetpm(287
jl
dec
imul
mov
rorb
add
cmpps
jp
ror
xchg
dec
xchg
les
mov
jle
cmpsl
add
jno
cld
incb
sbb
ss
mov
or
dec
pop
pop
and
jle
jl
add
or
lock
pop
add
lahf
xchg
pusha
sub
xor
ret
add
inc
jnp
adc
cltd
sub
jle
add
popf
jp
dec
add
mov
rolb
jnp
mov
pop
mov
int3
adc
xchg
mov
mov
fwait
dec
add
lds
incl
ss
push
ret
ljmp
stos
sub
cmp
push
iret
dec
dec
mov
imul
ret
xor
adc
mov
add
cmpsb
or
jb
add
inc
fmull
inc
mov
xor
xchg
cmp
incb
mov
in
sti
xchg
push
mov
inc
add
outsl
adc
addl
dec
es
jp
lock
sub
inc
cmpsl
je
jb
pop
add
daa
leave
pop
push
call
lcall
sbb
inc
test
std
cmp
es
repnz
out
mov
cmp
fld
adcb
stos
adc
fidivrs
nop
pusha
add
das
lret
add
jecxz
jecxz
push
repnz
sbb
add
stc
aad
mov
add
jl
jae
ret
negb
loope
in
insb
es
loopne
add
lock
fidivrl
cs
gs
or
fdivrs
cmp
mov
push
clc
in
mov
dec
dec
push
push
and
fistps
jns
xchg
add
dec
or
jl
adc
andb
add
sub
lahf
mov
lret
dec
mov
bound
mov
xor
inc
sub
lea
call
push
lods
scas
xor
add
hlt
in
pop
mov
push
stos
pop
test
add
test
push
add
push
inc
cmpsl
daa
test
adc
xchg
or
pop
das
ret
adc
mov
sbb
adc
or
push
mov
xor
or
inc
je
pop
mov
pushf
mov
dec
jge
jne
adc
cld
fs
cmp
add
xchg
out
addb
js
imul
sub
lds
mov
stc
add
add
xchg
pusha
sub
add
xor
mov
mov
and
inc
mov
mov
add
dec
xchg
movsb
adc
mov
mov
lds
pop
mov
es
add
sub
add
and
sub
adc
test
add
sub
pop
xorl
jbe
mov
push
add
outsl
push
mov
inc
roll
pushf
sbb
lea
sbb
aam
dec
lods
push
mov
clc
push
add
je
mov
aad
xor
and
sub
movsb
mov
mov
fs
pusha
leave
fmull
and
flds
jnp
xchg
repnz
dec
sub
cmp
push
adc
getsec
js
inc
xor
subb
jmp
lds
sbb
add
add
dec
inc
clc
adc
mov
popa
shlb
add
adc
subl
ljmp
and
mov
add
inc
adc
sbb
xchg
mov
xor
add
cmpb
es
clc
cld
pop
add
cltd
pop
popa
mov
mov
add
arpl
sub
dec
cmp
or
cmp
xor
inc
push
ds
add
or
clc
inc
or
shrb
or
jo
mov
mov
cmp
adc
cmp
pop
add
sar
push
jne
push
mov
pushf
ljmp
outsl
lret
pusha
shll
popf
push
sub
in
xor
add
pop
add
std
dec
jmp
adc
ret
popf
add
movsl
push
dec
sub
enter
addr16
test
fucomip
inc
mov
xor
jno,pn
adc
pop
xchg
ret
push
mov
jg
add
test
jne
mov
add
mov
adc
fstl
jb
loopne
jns
push
push
jne
add
mov
or
push
inc
pop
enter
in
or
or
icebp
jne
jmp
rolb
dec
xchg
jo
pop
ret
mov
jge
jle
add
mov
test
sub
mov
or
cmp
subb
ljmp
inc
xchg
ss
xchg
mov
add
push
or
xchg
adc
addb
sub
jmp
or
add
dec
push
scas
push
inc
and
add
les
fs
or
push
out
dec
mov
jne
add
xchg
les
and
cld
xchg
cmp
mulb
fs
repnz
movsb
add
mov
adc
call
sarb
jg
add
xchg
sbb
add
cmp
jnp
mov
movsb
in
rolb
xor
add
dec
fisttpll
push
push
jmp
in
cmp
nop
sbb
sbb
mov
inc
clc
jecxz
movsl
jno
adc
hlt
jle
add
in
lea
cmp
jo
add
xor
sbb
push
js
xchg
in
jmp
add
adc
es
sbb
adc
or
ret
mov
shl
add
clc
andl
mov
cmp
jno
nop
adc
adc
clc
dec
mov
shl
xor
adc
cmp
mov
pusha
sbb
incb
fldcw
mov
adc
inc
sbb
aam
inc
loopne
and
xchg
stc
loopne
and
lea
shr
arpl
dec
adc
sub
mov
mov
cmp
jl
fxch
test
xchg
lea
sub
hlt
daa
xorb
jne
jle
leave
add
push
mov
test
jae
add
or
add
xor
dec
mov
pusha
test
cmp
test
xlat
add
orb
fs
push
inc
dec
lret
into
loopne
leave
sub
js
pop
and
inc
rclb
pop
cmp
in
push
ljmp
add
sub
cmp
inc
add
mov
jo
aam
insl
clc
les
in
mov
cmpsl
shrb
push
xorb
movsb
inc
cmp
adc
mov
and
jo
add
push
in
inc
loopne
add
mov
jp
add
stos
pusha
xchg
leave
jmp
add
adc
lret
icebp
sbb
sbb
jne
add
test
jae
stos
mov
add
lret
loopne
sbb
jbe
mov
fwait
cmp
pop
add
sub
cwtl
lahf
xchg
dec
shrb
xchg
jns
sbbb
cmp
imul
push
ja
push
add
sbb
repz
xchg
add
and
push
lock
jmp
xchg
imul
jmp
mov
and
shl
or
sub
xchg
ficomps
cwtl
loop
iret
add
or
cmc
pop
adc
hlt
pop
add
int
movl
jo
adc
fimull
js
loopne
add
jl
hlt
jmp
jae
mov
xchg
mov
dec
push
cmp
out
add
out
adc
jnp
xchg
addr16
sub
inc
mov
add
sbb
sub
dec
jbe
cmp
imul
sub
arpl
inc
xor
test
cs
pushf
dec
nop
mov
stos
or
add
dec
je
cmpsl
or
in
add
sub
xchg
int3
add
xor
push
or
hlt
mov
addr16
mov
add
in
fs
add
lret
fcoms
sbb
sub
ds
cmp
or
add
mov
imul
cmpsb
push
in
cmp
jp
inc
enter
jge
pop
jg
lock
lods
sub
cmp
pop
or
and
in
cmpsb
add
shlb
daa
mov
int
add
mov
push
add
icebp
stos
lds
dec
add
daa
jmp
int3
out
leave
test
into
in
xchg
jmp
add
repnz
xchg
push
mov
mov
insb
mov
insl
in
mov
or
cli
add
iret
loopne
leave
out
add
ds
jns
sysret
sub
mov
loopne
xchg
fbstp
add
in
test
enter
push
cmp
cmc
mov
and
adc
or
jmp
jg
stos
add
sbb
mov
xchg
mov
inc
adc
adc
xor
dec
inc
xchg
aam
sarb
mov
fdivrl
mov
in
sub
pop
rolb
sbb
add
adc
sarb
in
jne
out
add
push
add
loope
rorb
or
add
ljmp
add
inc
sbb
stc
push
es
sti
mov
in
fwait
sbbb
test
push
pop
mov
push
add
jbe
cmpsb
cmpsl
cmp
mov
es
lahf
imulb
dec
jmp
ja
inc
popa
add
lahf
or
and
iret
and
push
ret
test
hlt
popa
push
call
sub
sbb
jmp
pop
jmp
xor
cmp
dec
or
aam
sti
lods
orl
cmpb
and
or
std
adc
dec
sbb
sbb
into
pusha
mov
clc
add
call
dec
icebp
add
scas
pusha
dec
add
icebp
rclb
out
cmpsl
push
inc
test
jg
cmp
and
inc
outsl
add
les
mov
or
cs
popa
xor
fidivrs
add
shrl
push
aam
test
fisttpll
jo
add
push
or
ret
adc
movl
lcall
in
cmc
rclb
inc
cmp
jne
scas
int3
jg
hlt
lret
lahf
lock
add
dec
jge
add
push
cmp
jo
xor
test
xor
jle
mov
and
inc
lcall
imul
and
into
mov
scas
fadds
mov
dec
jns
int3
xchg
or
shrb
adc
loope
fdivs
cwtl
add
xchg
push
cmp
sub
push
push
add
and
fidivl
cli
dec
add
movsb
inc
flds
dec
mov
push
enter
pop
push
sbb
push
test
cmpb
cmp
mov
and
lahf
push
sub
loope
mov
lods
pusha
loope
adc
jmp
or
xor
push
add
pop
add
pop
pop
xlat
jg
add
pop
out
add
das
mov
dec
lods
add
mov
pop
imul
sbb
mov
inc
pop
call
or
xchg
adc
lea
pop
sbb
xor
or
stos
add
inc
adcl
sbb
test
adc
dec
jmp
scas
pop
or
std
add
je
xor
add
xchg
in
leave
cmp
pop
push
gs
lods
decb
out
inc
sahf
adc
cmp
adc
sbb
call
or
push
pop
rclb
pop
add
fisubl
pusha
fildl
fsubr
outsb
mov
nop
add
jmp
lahf
inc
jno
roll
fmuls
add
mov
mov
ret
push
loope
sub
add
lret
add
cld
or
call
fldl
inc
adc
sbb
xor
sar
pushl
add
push
js
arpl
pop
iret
jg
mov
in
dec
add
clc
shrl
dec
sbb
loopne
add
fmuls
or
pushf
imul
pop
push
jne,pt
xadd
cmp
cmp
shlb
jg
xor
add
inc
shl
enter
jns
shl
test
xor
pop
aam
pcmpgtb
pop
or
dec
pop
mov
dec
inc
inc
mov
cmp
sar
add
and
ret
mov
es
add
fs
test
test
add
inc
lds
mov
jnp
dec
leave
scas
push
cmp
int3
add
out
icebp
ret
xlat
aas
testl
or
add
sbb
andl
cmp
je
aad
jns
cld
pop
into
add
sahf
stos
rolb
sub
ljmp
xchg
xchg
filds
in
xchg
in
add
push
filds
lcall
push
ret
leave
mov
rorb
imul
imul
outsl
es
loopne
add
js
pop
mov
rcrb
mov
rcll
sub
es
inc
clc
je
mov
aaa
fadd
fisubrs
push
shrl
push
insl
jg
jl
mov
dec
or
cmp
inc
xor
add
dec
movsb
ret
jns
xorb
add
jno
in
sbb
out
pop
add
sbb
orb
iret
loope
or
pop
xor
add
fmuls
in
mov
sarl
mov
lret
fwait
enter
jns
loopne
add
cmp
lea
mov
and
cmpsb
xchg
mov
sbb
insb
insl
adc
nop
lods
rorb
jb
xor
filds
rcrb
rcl
add
jo
mov
addb
sub
or
push
loopne
xchg
add
push
sub
add
scas
mov
push
sbb
dec
mov
mov
cmp
jo
addr16
xchg
pop
jo
add
dec
pop
xor
xorl
add
movsb
imul
add
lcall
mov
shl
inc
pusha
add
movl
hlt
or
outsl
add
pop
stc
pop
push
loopne
xor
or
xchg
or
mov
cwtl
jb
fimuls
sbb
inc
and
data16
pop
in
or
stos
cltd
jo
add
and
sub
cwtl
adc
ljmp
or
xchg
add
add
lea
mov
jo
dec
add
jae
subb
testl
in
cmp
leave
add
inc
jp
cli
sub
and
cmc
cltd
lret
cwtl
out
add
popa
mov
out
add
push
adc
inc
sub
add
fdivr
int3
shrl
push
nop
test
pushf
mov
call
mov
adc
mov
std
pop
jp
push
pop
jb
imul
cmp
loop
or
jb
add
mov
icebp
in
clc
add
dec
jmp
sbb
pop
add
movsl
rorl
and
push
sbb
out
pop
add
faddl
cmp
out
js
test
jne
dec
adc
add
sub
add
fbld
fnstsw
jecxz
mov
and
pop
inc
ljmp
sahf
cs
add
push
push
out
add
mov
sbb
add
push
movsl
add
jb
sub
dec
aam
rcrb
aas
movsl
push
dec
push
add
into
out
adcb
inc
enter
xchg
data16
add
sbb
dec
movb
nop
mov
add
testl
add
push
inc
repnz
push
add
add
out
pop
add
shl
aam
shl
loopne
add
loopne
push
add
and
aam
push
push
iret
mov
push
xchg
push
dec
mov
pop
add
andl
into
popf
out
jbe
push
es
jno
add
pop
xchg
pop
pop
jo
cmp
lret
enter
mov
sbb
dec
mov
pusha
or
test
mov
mov
xchg
lock
ret
mov
pop
rorb
cmp
add
mov
xor
outsb
add
cmp
push
add
dec
pop
add
jno
mov
sub
mov
pop
fldpi
sbbb
scas
cmp
ss
xchg
add
stc
cmpsl
test
push
cmp
add
dec
loope
xor
add
jno
pop
test
inc
or
pusha
lods
cmp
jle
test
rcrb
pop
fists
add
clc
push
dec
cltd
lret
call
and
adc
add
shlb
push
or
lock
nop
mov
push
add
mov
pop
pop
add
lea
mov
add
mov
stc
add
test
fyl2x
pusha
fdiv
mov
adc
add
out
imul
psraw
out
sarb
add
cmpb
cs
hlt
popl
or
cmp
js
jb
jle
cwtl
xlat
add
in
mov
movsb
rorb
les
add
aas
push
sub
popl
push
push
fs
sub
sbb
shlb
mov
mov
lahf
out
pop
mov
dec
cwtl
lahf
add
add
add
jne
fdivrl
fstpl
outsb
jo
push
jnp
push
jo
add
popa
flds
sbb
movsl
lock
jo
or
sbb
and
mov
and
add
lods
clc
push
dec
push
cmpsl
enter
aas
jno
mov
adc
out
test
add
pushf
sti
mov
lods
jp
pop
shlb
sub
stos
in
out
inc
jno
ror
cmpsl
cmp
add
jp
xchg
adc
pop
mov
ret
cmp
hlt
add
mov
jo
add
add
or
int3
dec
add
aas
movsb
pop
add
or
mov
orl
lret
xchg
pusha
out
cs
sbb
bound
inc
imul
inc
loopne
add
mov
mov
fldt
aas
adc
lods
jg
pop
push
add
cwtl
pop
loope
fs
mov
jle
pop
fmuls
pushf
add
fs
sub
aaa
fiaddl
mov
adc
mov
xchg
mov
add
pusha
cmpl
loop
fnstsw
jp
or
rol
daa
mov
inc
add
pop
rclb
ret
mov
jo
add
out
xchg
jmp
divb
lods
mov
mov
add
adc
out
sbb
dec
mov
ljmp
xchg
or
test
daa
mov
stos
sub
inc
rcrl
add
sbbb
add
jmp
push
loopne
mov
movhps
movl
arpl
arpl
sub
add
rcll
add
in
dec
test
icebp
rcl
inc
dec
in
repz
loop
mov
sub
addl
mov
adc
xchg
into
pop
repnz
inc
add
push
cmpsb
lods
pop
mov
call
pop
lcall
mov
inc
cmc
test
or
ds
xor
cmp
test
in
outsl
and
mov
xchg
jb
sbb
or
and
pop
pop
adc
loopne
add
and
jns
loope
mov
dec
lds
jno
ljmp
xor
popf
add
nop
es
push
fidivrs
mov
dec
lds
pop
dec
xlat
lods
mov
movsb
mov
pop
dec
add
out
fcompl
sbb
add
add
ror
pop
das
xor
push
adcb
icebp
ljmp
add
ficoml
sbb
fildl
repnz
gs
jmp
shlb
add
lods
add
push
and
loope
call
cld
xor
loopne
cmpl
aas
sub
jecxz
cltd
and
push
add
movb
mov
and
mov
mov
in
inc
mov
xchg
inc
pop
sqrtps
xor
in
sbbl
dec
inc
add
lds
call
cmp
mov
hlt
add
xchg
or
sbb
or
cmc
addb
push
pusha
pop
add
mov
fs
add
xchg
add
add
add
adc
adc
cmpb
jb
cmp
cld
paddb
add
jo
mov
rcrl
scas
inc
lea
add
jb
xor
inc
addb
sbb
add
shl
sub
pop
int3
ljmp
add
push
jp
add
mov
adc
shll
add
jb
and
adc
into
jns
add
pushf
cli
add
dec
iret
and
sbb
fsubs
jp
or
push
xorl
sbb
sbb
mov
das
add
rcr
call
push
push
cwtl
push
mov
ret
cs
lea
div
orb
cmp
out
mov
jge
mov
xor
pop
mov
std
push
or
inc
cmp
mov
add
mov
ss
and
testl
xor
add
enter
iret
rcrb
lea
or
add
shl
add
adcl
mov
sbb
pop
jle
in
pop
cmp
pop
ret
pop
mov
add
mov
add
adc
out
fidivrl
out
lds
into
and
lret
add
mov
inc
mov
dec
mov
inc
inc
data16
fsubr
sti
aas
aad
stos
lret
add
and
pause
fmulp
call
test
dec
call
add
inc
lret
pop
loopne
dec
push
cwtl
mov
bound
mov
add
add
pop
ret
es
dec
pop
dec
add
sub
fnstsw
jns
add
mov
enter
jp
dec
mov
jbe
test
mov
add
loop
mov
inc
add
add
jb
lods
mov
push
dec
add
xchg
dec
push
cwtl
push
cmpl
or
mov
adc
pop
das
xor
rolb
dec
mov
ljmp
lret
mov
clc
pop
outsl
mov
test
stc
sbbl
pushf
sub
aas
add
es
pop
push
and
fs
adc
add
pop
orb
shr
lock
push
sub
popa
or
sub
sarb
adc
movb
add
dec
clc
and
sbb
aas
or
mov
cmp
stc
add
sub
dec
movlhps
xchg
es
inc
cli
mov
call
mov
out
test
inc
add
mov
repz
pop
pop
flds
pop
or
shlb
lock
mov
mov
bound
sbb
add
add
lock
adc
jb
out
mov
cmp
add
clc
loope
inc
inc
imul
mov
add
les
sub
add
add
and
fs
ltr
jmp
call
notb
inc
cmp
clc
sbb
mov
push
fimull
mov
sub
push
add
cmp
add
sbb
call
arpl
adc
or
mov
push
add
add
cs
sub
add
push
gs
push
cmp
add
inc
mov
add
stc
mov
repz
push
rcrl
loop
xchg
or
cmpsb
or
ret
inc
xor
sbb
mov
jno
inc
push
aas
mov
in
aas
mov
sets
xorb
add
pusha
jne
push
dec
pop
add
jle
sbbl
dec
dec
xor
and
jmp
dec
sub
jbe
cmp
add
sub
push
pop
push
xor
ja
add
pop
mov
cmovs
jno
mov
sub
sbb
dec
adc
push
stos
mov
sub
mov
push
and
mov
adc
in
pop
inc
and
jle
mov
andl
add
sub
jne
mov
scas
add
sbb
jg
out
add
rol
mov
mov
add
inc
dec
jne
adc
add
fmull
nop
add
out
in
jbe
or
sub
pop
mov
movsb
int3
add
mov
push
and
adcb
xchg
cltd
shrl
in
add
mov
roll
cmpsl
loop
andl
inc
xchg
xor
hlt
sti
push
xchg
inc
add
enter
or
in
add
xor
aam
mov
lods
sub
dec
mov
lret
inc
add
or
or
mov
fwait
jb
popa
sar
int3
add
pop
adc
sbb
adc
push
loope
dec
mov
into
js
jle
sub
xor
iret
jo
rcrl
pop
ljmp
movsl
insl
and
int3
add
dec
lds
push
ja
les
sub
pushf
scas
add
in
lcall
cli
je
addl
incl
jb
sub
add
std
inc
pop
xor
pop
add
cs
and
es
rolb
mov
sbbb
xor
mov
call
push
mov
jae
iret
jns
sub
or
out
sbb
int
inc
out
and
or
xor
clc
jmp
pop
addl
movsl
insb
inc
and
inc
inc
mov
pop
jno
add
lcall
rolb
cs
mov
cs
add
gs
inc
adc
sbb
cmc
xchg
mov
push
pop
push
inc
frstor
pop
mov
push
shlb
inc
out
cmp
cmp
xchg
das
sti
in
adc
shrl
mov
cmp
cmpsb
and
add
adc
into
xor
mov
cmp
jb
jmp
inc
sub
std
orl
jne
inc
sub
or
incl
lret
insb
or
or
xchg
bnd
push
sbb
xchg
add
rorl
dec
cld
stos
add
ds
popf
push
rolb
inc
aaa
xor
and
sbb
cmp
subl
loopne
addb
cs
sub
nop
pop
loop
lahf
cmp
xchg
inc
aam
imul
xorl
cmp
lods
clc
cmpsl
ret
aam
push
dec
add
ja
shr
xor
adc
add
pop
das
and
push
stc
js
add
jo
cwtl
add
mov
add
fs
and
orl
in
add
sbb
out
pusha
adc
stc
test
pushl
data16
mov
je,pt
add
push
daa
add
shll
ja
jbe
add
lret
clc
sbb
js
add
pop
sbb
cmp
adcl
add
fisubs
xchg
scas
int
or
call
je
movsb
or
lea
push
mov
les
call
xor
dec
call
and
mov
icebp
sbb
xchg
mov
cltd
lret
jne
testl
cld
roll
push
inc
pop
aam
imul
add
sbb
push
add
push
push
inc
addb
push
and
ficomps
add
fidivl
pop
andps
test
fistps
aaa
jno
adc
out
das
insb
and
dec
clc
mov
ljmp
pop
xchg
je
push
aam
sbb
pop
mov
movsl
flds
pop
inc
mov
lock
hlt
aas
lret
dec
cmpb
sub
icebp
testl
sub
jae
inc
push
or
nop
lahf
add
clc
xchg
sbb
movsb
scas
loope
jp
jl
add
in
jmp
repnz
and
imul
sbb
js
rcll
sbb
dec
or
int
xchg
add
add
mov
jne
mov
mov
jge
adc
mov
sbbb
aam
push
xor
adc
add
mov
sbbb
popl
adc
lods
in
sub
push
dec
and
sub
push
dec
into
mov
js
jge
cmp
lahf
movsl
enter
decb
xor
add
push
fadds
mov
and
mov
xchg
jnp
jo
pop
add
outsb
add
cmp
inc
mov
and
cmp
sbb
pop
dec
sahf
pop
lds
mov
mov
inc
sbb
addr16
fidivrl
dec
push
incb
xor
cs
add
inc
add
add
and
push
cmp
cld
jg
xchg
scas
call
dec
add
popf
pop
fsub
dec
loope
add
jns
addr16
cs
add
cli
lods
in
shrb
es
add
xor
stos
and
cmpsl
in
mov
daa
add
jmp
sbb
clc
xor
adc
sub
je
js
add
mov
add
mov
push
data16
fistpll
ljmp
add
lea
mov
xor
roll
lea
xor
dec
cmpsl
fsubrs
out
jg
insl
jl
cmc
sar
imul
insb
mov
add
xchg
adc
add
add
jmp
add
mov
sub
add
xor
lods
lock
cmp
loopne
testb
add
mov
pop
inc
mov
cmc
test
icebp
jbe
sti
xor
inc
roll
fs
or
popa
imul
mov
pop
add
movsl
cwtl
adc
int3
pusha
dec
lock
add
xchg
push
or
jge
add
cvtpi2ps
xchg
pop
inc
adc
shlb
or
nop
fs
xchg
mov
dec
or
push
sbb
rclb
mov
and
test
pop
add
mov
jmp
jp
clc
aas
nop
mov
in
je
add
imul
jle
sub
cltd
popa
cmp
push
xchg
jmp
add
test
cs
add
or
hlt
clc
sbb
sbb
push
pop
mov
sbb
or
mov
push
outsb
je
xchg
inc
or
ret
jg
dec
dec
lock
or
pop
inc
sub
and
add
xchg
jo
ds
ljmp
in
pushf
mov
add
shrd
mov
lahf
je
call
sti
add
jl
and
add
out
add
cltd
push
or
enter
cmp
mov
or
xorb
add
jne
test
inc
les
out
push
push
sbbb
and
xchg
dec
psadbw
and
add
or
imul
cmp
aaa
add
or
sub
repnz
jno
cld
jp
push
test
sub
loopne
pop
fs
sarb
mov
add
fistpll
mov
cmp
insb
push
add
lahf
add
xchg
cmp
pop
add
lret
inc
pushf
jae
jne
add
fisttps
or
mov
jne
push
mov
jns
add
adc
jae
clc
insl
mov
add
jb
mov
outsl
or
adcb
cmpsb
or
dec
add
aam
xor
push
adc
jno
and
push
sbb
inc
push
push
push
inc
es
dec
call
add
mov
jmp
inc
cli
std
rcl
adc
sub
and
ja
lahf
jbe
orb
aas
stos
xor
pop
add
aaa
adc
add
addr16
jg
xchg
rolb
loop
dec
cwtl
sub
add
or
icebp
sbb
jge
add
jmp
nop
add
sub
or
jns
and
out
sub
add
push
pop
adc
sbb
pop
add
lds
aaa
arpl
popf
cs
pop
cmp
xor
cmp
jmp
adc
add
fildl
and
sbb
pop
add
out
ja
push
xchg
or
test
push
enter
add
mov
mov
or
add
xor
pop
add
movsb
dec
pop
stc
xchg
sbb
ss
inc
enter
je
push
fwait
jns
mov
add
jb
cwtl
mov
xchg
lret
lahf
sbb
jbe
fldl
pop
pop
inc
fs
popa
add
gs
lcall
outsl
insl
rcl
imul
sbb
gs
sub
adc
mov
imul
xlat
movsl
jg
add
jae
xchg
jno
js
jb
sbb
sub
and
mov
and
jmp
push
shll
pop
pop
mov
sbb
adc
jne
and
xor
aaa
test
mov
stc
mov
dec
scas
sbbl
or
inc
or
push
mov
cld
cvtpi2ps
pop
or
add
jo
sbbb
testb
les
add
and
popf
fistpll
adc
pop
mov
add
mov
aas
inc
std
sbbb
add
mov
add
xchg
or
mov
or
add
fadds
sti
mov
in
add
adc
jne
mov
pop
rcll
movl
lods
xchg
es
dec
adcb
cmp
lea
xchg
fdivrp
add
je
push
mov
xchg
add
shll
cmp
xor
dec
ret
imull
inc
mov
and
sub
jg
sub
adc
cmp
jge
or
adc
mov
fiadds
mov
push
fwait
push
cmp
add
mov
add
rcll
xor
add
cwtl
dec
push
add
insl
rclb
and
les
mov
add
sub
add
fsubr
add
daa
mov
imul
add
test
icebp
dec
ds
neg
sbb
leave
ret
mov
jmp
or
js
mov
xchg
int
ficoml
add
dec
ss
out
and
add
xchg
add
jg
add
push
movhps
and
inc
jmp
add
call
lahf
add
push
aaa
add
pop
rcr
aas
repnz
js
xor
pop
shr
loopne
in
add
mov
dec
add
or
cmp
jb
fcomip
mov
adc
jg
or
sub
loop
mov
ja
sbb
xchg
enter
pop
add
push
add
imul
jns
loope
mov
add
loopne
add
push
pushf
add
xor
mov
push
pop
jns
addb
mov
rol
adc
adc
dec
sbb
dec
cmp
inc
pop
sub
inc
jne
add
lret
scas
add
jl
sahf
ds
lea
sub
cltd
cmp
add
repnz
xchg
add
fs
push
fmul
imul
add
int
in
mov
mov
xchg
mov
ja
fsubr
add
add
lock
pusha
add
cli
push
jle
insl
jmp
clc
stos
add
out
cwtl
lea
add
or
sbb
mov
jno
sub
incl
bound
push
test
movsb
or
or
dec
add
call
mov
add
inc
les
inc
pop
mov
subl
add
inc
sub
pusha
dec
mov
add
test
pmullw
add
add
add
add
push
aad
or
sbb
sbb
inc
stc
add
sbb
sub
pop
inc
xchg
or
and
mov
push
add
lock
aaa
jp
jns
and
adc
add
sbb
add
inc
add
pop
add
add
test
repnz
mov
inc
pop
jl
or
push
enter
adcl
mov
sbb
cs
jmp
movsl
mov
clc
je
mov
xor
add
loope
adc
or
xor
pop
pop
mov
rclb
popf
cs
add
adc
pop
add
push
sub
add
sub
dec
adc
js
pop
inc
test
cs
and
add
in
in
pop
ds
sub
stos
leave
xor
pusha
out
sbb
inc
verw
or
cmp
jge
inc
xchg
inc
pop
or
dec
jg
jle
add
mov
xchg
addl
adc
ja
test
jmp
sub
push
movsl
push
ficoml
or
add
add
ds
sub
dec
je
xcrypt-cbc
cmpsl
push
or
and
dec
adc
mov
clc
cli
inc
insl
jl
je
add
or
dec
test
jmp
push
push
sub
gs
cmp
add
cltd
adc
mov
shrd
xor
dec
fnstenv
adc
add
push
pop
dec
bound
rorl
sub
rcrl
loopne
jmp
xor
leave
lds
adc
dec
add
icebp
sub
sub
push
andl
cmp
test
push
adc
pop
enter
xor
add
xor
sbb
ja
push
arpl
lock
dec
xor
push
cltd
mov
sub
cli
xchg
in
loope
push
jb
pop
inc
addb
imul
add
push
xchg
add
xor
pop
xchg
push
shr
add
loope
add
xor
out
cmp
rcr
inc
inc
mov
lods
nop
pop
jae
jnp
pop
aam
xor
push
xor
imul
nop
in
aas
add
call
cmp
add
sub
pop
xor
pop
test
mov
add
cld
sub
mov
add
lahf
test
inc
inc
lods
stos
clc
jb
jp
mov
testl
jle
add
fidivrs
mov
mov
or
sbb
or
cmp
add
xchg
or
rcll
push
pop
push
and
in
and
adc
cmp
add
mov
xor
jl
iret
mov
inc
sar
adc
mov
out
inc
add
xor
dec
dec
jo
and
dec
push
xor
popa
inc
pop
add
xor
cmp
testb
mov
aam
pop
dec
pop
jbe
add
inc
add
imul
mov
es
add
inc
enter
lcall
cmpb
add
ljmp
sbb
add
sbb
notb
jl
add
sub
cli
dec
or
add
jmp
or
dec
daa
orb
and
pop
and
jg
mov
repnz
das
pop
and
jmp
xchg
adc
add
enter
cmp
sbb
jns
xchg
xchg
nop
bswap
mov
pusha
add
ret
inc
and
inc
pop
pop
add
insl
push
mov
sub
and
jb
sbb
hlt
stos
popa
sbb
aam
xor
shl
ja
push
and
incb
xor
dec
icebp
out
std
push
xor
pop
shll
jge
jge
xor
imul
push
and
add
xchg
hlt
popf
xor
push
pop
and
sbb
repz
pop
nop
push
and
lea
adc
add
outsb
jae
gs
sbb
inc
clc
jne
outsl
mull
xor
mov
adc
adc
add
fs
xor
hlt
test
movsl
les
sub
dec
test
xchg
ja
push
jo
inc
outsl
add
jb
je
jne
movl
enter
add
movsb
pop
inc
test
mov
movb
push
out
push
fs
jbe
dec
add
mov
test
pop
push
jp
add
inc
sbb
or
xchg
mov
dec
rolb
add
sbb
adc
aam
mov
jp
add
or
jo
inc
jmp
add
dec
inc
nop
je
shll
inc
pop
and
dec
mov
inc
in
pop
pop
sbb
dec
js
nop
pop
repnz
sbb
sub
adc
pushf
or
mov
jo
movsl
cmp
std
adc
push
mov
outsb
add
cmp
mov
js
add
dec
daa
out
add
lret
shl
xchg
inc
jnp
mov
enter
incb
jmp
jae
lock
mul
je
addb
scas
in
add
cmp
sub
aam
flds
adc
or
push
mov
addb
push
pop
add
pop
sub
cmpb
data16
cmc
call
or
loopne
sub
lret
pop
mov
dec
add
loopne
add
jmp
xchg
fildl
or
movsl
notb
jo
dec
stc
inc
out
roll
in
cmpsl
cmpsl
loope
orb
sub
adc
pop
mov
sub
inc
add
push
pop
cmpsb
or
mov
mov
mov
cmpl
ret
and
pop
into
inc
add
adc
int3
add
negb
shr
add
hlt
cmp
mov
push
test
into
out
lret
add
pusha
imul
ljmp
lahf
loop
orb
fimuls
stos
add
in
pop
pop
pop
pop
pop
jmp
sbb
mov
add
call
mov
out
add
push
movsl
mov
mov
stos
add
test
sub
add
or
pop
jno
mov
jg
push
add
pop
sbb
xor
or
fisttpl
push
dec
xchg
inc
push
pop
int3
in
data16
lret
mov
lock
in
lea
jge
push
cmp
mov
mov
add
movsl
and
sbb
es
div
pop
jo
insl
pop
pop
pop
popf
xor
adc
sub
sbb
push
aaa
and
js
jae
in
adcb
dec
push
dec
dec
adc
add
cmp
or
pop
add
roll
mov
stos
pop
xor
testl
or
push
loopne
in
pop
mov
adc
push
adc
add
lock
add
cwtl
sbb
xchg
call
or
adc
adc
cmp
xchg
add
movsb
hlt
test
shrl
xor
mov
sub
stos
int
cmovne
stc
enter
xor
and
add
movsl
add
or
dec
add
and
dec
adc
jo
jmp
movb
fmul
out
sub
cld
loopne
cld
fs
in
pop
call
dec
and
add
adc
hlt
inc
or
add
adc
test
pop
xorb
mov
je
add
xchg
sbb
dec
jb
adc
add
jo
cs
imul
and
stc
add
mov
cmp
mov
xor
xor
rclb
add
enter
scas
mov
and
subl
push
sub
inc
fcmovb
xlat
gs
clc
and
add
push
mov
dec
in
cmp
xchg
lea
icebp
xlat
mov
adc
std
movb
dec
ds
outsl
pop
sbb
add
pop
mov
ret
add
add
std
out
jmp
xchg
adc
imul
push
cmp
xor
sahf
incb
out
mov
imulb
cmp
pusha
jae
mov
lods
pop
cmp
cmc
inc
pop
or
js
add
roll
adc
mov
dec
lock
and
push
hlt
mov
inc
das
fildl
and
inc
dec
or
jns
popa
call
pop
cmp
aad
adc
push
push
cli
push
cmp
cmpb
je
push
scas
aas
sub
add
mov
pop
adc
shlb
das
rorb
pop
add
mov
jnp
mov
pop
dec
popf
das
out
aam
hlt
and
icebp
add
mov
jns
ds
add
inc
sub
sbb
into
add
add
pop
and
push
mov
outsl
adc
mov
push
or
mov
sub
fnstsw
mov
or
add
insb
mov
mov
adc
divb
popf
xchg
sahf
or
aad
add
add
adc
add
or
push
jle
call
jmp
add
or
imul
dec
adc
add
inc
ja
sti
xchg
shlb
in
sub
pop
and
inc
insl
add
ds
je
and
and
subps
jb
and
stos
cmpsl
daa
add
insl
cmp
sbb
mov
hlt
test
xchg
or
inc
cmp
lret
push
xor
jae
sub
and
or
or
add
or
rcll
add
dec
pop
inc
cmovs
push
arpl
mov
xchg
xor
mov
mov
add
mov
and
mov
les
std
out
sarb
push
movsl
lock
daa
or
in
and
jb
insb
dec
lods
add
and
jno
adc
addr16
loope
jo
pop
and
push
arpl
mov
mov
sbb
or
mov
add
nop
les
sbb
and
mov
shrl
push
hlt
pop
movsl
add
mov
adc
and
jo
out
arpl
jne
dec
fs
mov
popf
pop
xor
mov
movsl
in
loopne
inc
add
movzwl
aad
into
movb
mov
sbb
and
inc
inc
push
sbb
sbb
add
mov
in
add
nop
out
mov
xor
add
and
add
adcb
xchg
adc
mov
add
pop
dec
add
iret
pop
lahf
ds
incl
mov
test
repnz
je
adc
add
sti
push
sub
jnp
add
pop
pop
mov
mov
mov
divb
cmp
mov
mov
pop
rolb
add
lahf
popl
dec
sub
sti
dec
mov
push
push
std
pop
cmpsb
dec
sbb
jb
fs
cli
jecxz
push
push
push
add
movsb
cmp
xchg
pop
adc
lahf
psrad
pop
mov
add
in
call
push
cmp
push
add
xor
jbe
popa
addl
popf
xor
rorb
add
inc
jo
jl
pusha
or
ljmp
pop
lods
loopne
add
or
mov
sub
cmp
outsb
loopne
sbb
mov
pop
inc
adc
jmp
mov
movsb
sbb
in
ja
inc
dec
jne
cli
popw
inc
push
or
xchg
jle
ljmp
ss
fiadds
cs
movsb
adc
jmp
mov
std
fstpt
pop
add
cmp
je
push
subl
add
test
ja
mov
imul
or
popa
ljmp
test
add
mov
js
pop
jp
add
pushl
mov
jmp
in
mov
ret
nop
dec
stos
cld
mov
sbb
xor
sub
inc
nop
jns
xchg
addb
clc
imul
mov
aam
push
lock
add
mov
sub
std
jp
inc
pop
mov
push
mov
add
add
push
mov
cmovae
mov
add
cmp
pop
addl
and
push
mov
inc
repnz
push
cmc
sbb
mov
mov
adc
push
psubw
dec
cmp
mov
pop
outsl
imul
clc
nop
jns
bts
loope
xchg
cs
repnz
adc
pop
mov
je
cmp
add
push
ret
push
jmp
nop
mov
cmp
jae
rorb
inc
mov
insb
and
in
add
dec
jne
adc
test
mov
decb
in
mov
jle
or
incb
mov
lods
fcmovne
add
add
or
jecxz
xor
jmp
pop
sar
pop
add
jg
sub
sub
dec
sub
scas
mov
or
fisubs
jp
add
jle
mov
lods
nop
xchg
add
xor
lea
xor
add
cmc
add
loop,pt
adc
pop
xor
ficomps
outsl
sti
lods
popf
add
jmp
ja
hlt
push
add
inc
stos
adc
add
adc
pop
aas
add
and
movsl
cmovne
aam
push
rcrl
nop
sbb
inc
push
stc
sete
jg
insb
daa
xor
xor
lahf
inc
ret
ss
add
push
sbb
add
lods
out
xchg
scas
shl
xlat
add
out
das
pop
sbb
in
out
mov
lock
jne
push
add
add
pop
leave
mov
sub
test
adc
stos
add
loope
in
pop
test
jl
and
add
push
in
add
pop
andb
add
loopne
push
add
dec
ljmp
fwait
pop
jp
adc
and
push
mov
insl
shr
inc
rolb
cmpsl
xchg
sbb
int3
jmp
call
daa
adc
push
mov
jmp
rcrb
jge
cmc
push
and
mov
clc
jnp
inc
mov
pminsw
lods
mov
and
aaa
pop
shll
mov
pushf
iret
cwtl
lret
sbb
rorl
mov
aas
sub
mov
mov
sahf
rolb
add
imul
or
add
fcoml
pusha
xchg
push
je
jl
icebp
jb
sbb
xor
pop
cld
ret
pop
sub
outsb
push
adc
movb
test
mov
sub
dec
add
mov
push
js
cmp
hlt
lea
imul
and
sbb
dec
insb
sti
push
add
cmp
inc
adc
jne
add
mov
xor
sub
scas
jge
fisubrs
xor
dec
hlt
sbb
mov
mov
add
xlat
call
lds
subl
loope
add
inc
cmpl
mov
mov
and
mov
push
pop
clc
fs
shr
das
push
cmp
lds
fsub
ss
and
repnz
jecxz
das
push
lock
or
pop
dec
movsl
sub
jp
xchg
movq
add
mov
sbbb
cmc
mov
and
pop
sarb
push
dec
dec
jns
mov
lret
mov
lods
in
inc
pop
pop
subb
sub
mov
sbb
xlat
test
and
adc
pop
mov
and
add
in
jb
cmp
cmp
cmp
repnz
mov
mov
pop
or
clc
add
loopne
js
add
pop
dec
mov
mov
pop
cld
sarl
xor
add
cwtl
add
dec
sub
jmp
or
sti
xorb
jae
or
xchg
xchg
cmp
arpl
movzbl
pusha
jne
incl
repz
jb
movsb
sbb
sti
inc
inc
jg
mov
add
lret
mov
push
and
xchg
outsb
jnp
dec
inc
jmp
in
push
push
inc
push
inc
xor
mov
and
sbb
sti
and
add
or
xchg
add
sbb
dec
xor
loope
xlat
add
in
mov
jae
mov
cmpsb
xchg
jno
add
adc
cli
test
jle
or
clc
mov
lds
mov
or
or
push
add
data16
aad
add
outsb
adc
adc
lahf
clc
jp
xlat
and
jg
mov
push
xchg
mov
and
sbbb
add
jnp
jo
xchg
add
adc
dec
mov
lret
add
lea
cmpsl
incb
add
sbb
faddl
adc
push
pusha
imul
jne
into
ds
lea
or
mov
or
sbb
push
cmpl
sub
movsb
add
dec
inc
sbb
xchg
daa
mov
popa
jp
add
xlat
push
into
call
lock
xor
enter
add
inc
rolb
add
ret
mov
xchg
add
xchg
pop
addb
sbb
inc
movb
out
inc
jecxz
aaa
push
sbb
pop
push
push
scas
fisubl
cmpb
movb
or
sub
sbb
movsb
and
cmp
cmp
lock
lahf
shlb
or
cld
imul
xor
and
inc
push
ret
test
daa
add
xorl
cmp
add
cmp
add
or
add
arpl
adc
call
call
and
add
sbb
test
and
sub
adc
outsb
and
mov
repnz
hlt
ss
cld
or
dec
mov
sti
push
cmp
inc
scas
orb
mov
jg
mov
pop
sbb
mov
jns
adc
lock
xor
cmp
add
jl
sbb
add
mov
adc
and
dec
icebp
sub
aaa
push
add
add
xchg
mov
add
aaa
pop
mov
movsl
lcall
imul
or
test
aas
jmp
add
test
aaa
push
pop
pop
data16
lods
add
lea
and
js
inc
push
rclb
cs
repnz
movsb
and
mov
data16
inc
sub
andl
mov
add
sbbb
es
jp
cmp
push
jne
mov
push
repz
je
sbb
xchg
jg
or
cli
sbb
push
dec
or
cmpsl
outsb
outsl
je
jb
cwtl
fiaddl
mov
dec
inc
dec
add
push
pusha
jae
cs
add
jne
mov
xor
lock
cmp
fiaddl
inc
mov
add
dec
sbb
rol
add
add
add
mov
dec
cmp
pop
clc
nop
testb
sub
and
dec
xchg
roll
incb
sub
push
cmp
dec
fstl
ret
cmp
sub
cmp
pushf
or
add
mov
jp
stos
and
cmp
push
das
xor
dec
ja
js
pop
cmp
sbb
jnp
scas
jo
clc
mov
sub
or
and
dec
and
aaa
push
dec
pusha
push
fsub
into
repnz
aas
adc
scas
and
pop
pop
push
inc
push
push
and
lock
fisttpll
mov
mov
loope
mov
dec
cmpsb
push
sarl
xlat
ds
int3
xchg
cmpsl
shll
lea
cs
dec
es
test
sbb
cwtl
frstor
arpl
add
adc
jb
loope
fcompl
outsl
add
js
popa
jmp
pop
hlt
faddl
imul
iret
xor
pop
and
pop
add
cmp
push
adc
rorb
mov
in
fmuls
add
insl
sub
fbld
push
jne
push
enter
add
sub
in
imul
sub
push
jle
js
das
pop
insb
popa
imul
mov
cmp
dec
sub
cmp
mov
outsl
loopne
pop
mov
arpl
jo
lds
push
dec
je
add
push
sub
mov
add
test
add
xchg
pusha
mov
add
cmp
test
cmp
mov
jb
iret
hlt
mov
mov
cs
xchg
mov
jo
in
jo
out
repnz
test
lods
les
add
lahf
or
movsb
js
jmp
add
mov
xor
loop
mov
pop
rorb
add
or
add
jl
add
dec
loop
pushf
loopne
sbb
outsb
adc
xchg
add
data16
add
or
push
call
add
xorb
jo
cs
movsb
xchg
jmp
rorb
and
enter
and
pushf
inc
cmp
add
jns
push
adc
mov
notb
xor
fidivrl
push
mov
insl
push
mov
push
gs
jb
cmp
sub
add
aad
mov
notb
jge
or
jae,pn
hlt
aas
test
and
adc
imul
pop
cmp
sub
lea
add
call
mov
loope
pop
sub
jnp
pop
sbb
shrb
and
mov
flds
subb
arpl
pop
pop
sahf
inc
aas
insb
pop
push
lret
sub
adc
pop
dec
sbb
test
mov
cld
lock
mov
jp
jmp
subl
mov
xor
mov
loope
sub
add
cmp
add
xchg
xchg
sbb
dec
or
mov
in
and
add
fs
pusha
sub
add
nop
sbb
sbbb
mov
push
sbbb
sbb
pushf
inc
add
test
xorb
aas
inc
push
add
test
or
leave
jbe
adc
mov
mov
xor
mov
cs
sub
dec
mov
lidtl
mov
or
hlt
inc
fcomi
dec
sbb
mov
leave
pop
jge
out
mov
fidivrl
in
sub
popf
leave
pop
loopne
cltd
jae
cmp
mov
movsb
xchg
mov
and
pop
cmp
enter
enter
dec
jp
jle
iret
out
cmc
add
fs
dec
aam
push
es
inc
sbb
xlat
or
add
popa
add
iret
or
jno
aas
loopne
push
fildl
call
pop
mov
sbbl
mov
mov
pop
stos
sarb
sahf
pop
in
mov
imul
cs
xchg
sub
sbb
test
cmp
add
jl
ljmp
push
mov
add
add
jno
insl
mov
and
and
push
leave
xor
xchg
mov
inc
pop
mov
jno
add
inc
test
cmpb
cmp
cld
cmpsb
addl
bound
call
inc
sbb
mov
mov
mov
mov
enter
inc
int3
rorb
sbb
add
loopne
pushf
xor
add
mov
mov
in
fs
pusha
insb
orb
pop
repnz
mov
inc
fmuls
inc
test
pop
mov
test
jo
add
and
popa
setns
arpl
sub
fisubrs
sbb
imul
enter
add
or
inc
add
dec
inc
mov
jno
add
and
add
sub
dec
add
xor
pushf
hlt
fldl
push
sbb
mov
ljmp
dec
add
pop
dec
sub
add
ret
punpcklwd
sbb
push
adc
lcall
je
mov
out
xchg
cwtl
scas
push
dec
adc
daa
jl
push
cltd
addl
pushf
mov
inc
or
add
inc
imul
aas
xor
adc
sub
aam
mov
int
jg
pop
js
mov
cmpsb
xchg
add
lock
or
adc
das
push
cli
and
scas
addr16
add
push
jg
or
test
or
xor
cwtl
dec
je
bound
in
add
adc
inc
in
dec
mov
out
push
add
stos
jl
mov
pop
xchg
call
leave
and
mov
inc
adc
in
mov
inc
pop
xor
pop
sub
add
and
addr16
inc
mov
ja
hlt
adc
or
and
xor
mov
mov
and
test
xlat
movsl
pop
add
hlt
imul
ret
cmp
pusha
cmp
add
testl
inc
jbe
inc
add
sbb
mov
sar
pushf
sbb
loop
aam
aaa
add
daa
add
movsb
sbb
jo
enter
lods
jo
cmp
jl
mov
inc
mov
push
fbld
dec
les
or
rclb
mov
mov
mov
mov
aam
lret
or
push
mov
mov
scas
and
xchg
in
je
jg
mov
sahf
cmp
mov
pop
mov
add
rolb
xlat
mov
les
loop
ret
jne
add
push
jo
push
push
add
js
dec
hlt
arpl
gs
out
mov
xchg
packuswb
add
cmp
fstpl
mov
sub
xchg
js
dec
int3
sub
push
in
test
pop
in
lods
add
das
clc
cmp
or
int3
ret
add
add
dec
cwtl
aaa
add
or
add
pushl
imul
cwtl
dec
jl
scas
mov
pop
es
cmp
jae
clc
mov
xor
enter
add
lea
adc
pop
add
or
add
add
aad
icebp
cs
mov
mov
mov
data16
and
jno
cmp
mov
test
mov
dec
push
add
cmp
mov
sarl
push
leave
cmpb
jl
enter
push
and
insb
lods
and
cmp
add
jo
insb
imul
cli
add
cmp
add
jmp
add
xchg
fcmovnbe
ja,pt
inc
and
bnd
mov
add
hlt
mov
add
fldt
or
xchg
mov
adc
add
add
sub
xor
sbb
popfw
jl
inc
push
add
dec
and
frstor
roll
fcom
repz
adc
outsl
loope
enter
imul
sub
mov
push
pop
push
into
mov
mov
inc
jne
pushf
sub
repnz
sbb
in
rorl
mov
cmp
cmp
cmp
adc
addr16
add
mov
sub
push
arpl
or
and
add
push
daa
outsb
push
and
aam
add
js
addr16
jno
inc
push
fadds
clc
repnz
dec
lahf
jp
push
add
cmp
fcmovb
pop
dec
shlb
icebp
and
sub
out
mov
and
fiadds
sub
loop
ja
add
repnz
insb
dec
popf
enter
lock
clc
cmp
add
push
fs
ja
nop
jae
jbe
es
add
outsl
nop
xchg
add
imul
jne
add
jno
nop
adc
sub
add
adc
and
es
mov
out
mov
inc
push
add
call
jle
dec
mov
push
repz
leave
pop
add
rclb
add
enter
psubusb
pop
out
sbb
sub
push
es
mov
ss
add
and
movsl
sbb
mov
mov
add
pushf
imul
in
iret
add
and
push
add
push
inc
add
push
or
xchg
push
popa
adc
jmp
andl
and
cwtl
mov
dec
les
notl
xorb
mov
cmp
scas
xorb
mov
cmc
ja
mov
pop
push
lods
xchg
push
sub
xor
add
or
pop
push
mov
or
sti
xchg
inc
jmp
mov
test
enter
aas
mov
dec
lods
movsb
pusha
jae
push
add
cli
bound
or
jl
fmull
std
test
adc
xor
jns
dec
cmc
into
jl
and
mov
add
sbb
sbbb
inc
or
movl
insb
cltd
jmp
cs
sbb
mov
mov
sub
xchg
dec
loope
fisttpl
add
cli
addl
inc
sarb
inc
push
or
jle
rcll
mov
inc
inc
cmp
loope
dec
je
or
push
adc
and
add
shr
push
das
mov
push
jns
sbb
mov
fs
cmp
je
push
add
mov
xor
or
xor
test
xor
and
sub
pop
mov
insb
mov
aaa
mov
movsb
roll
and
outsb
sbb
insb
outsl
fisubl
nop
pop
push
fadd
ret
and
sahf
pop
test
sbb
pop
dec
push
lock
inc
sbbl
icebp
mov
js
aad
add
push
push
xchg
and
or
adc
cmp
lods
mulb
add
sub
add
or
das
pop
add
pop
aad
push
addl
pop
mov
adcb
sub
pop
jg
add
notb
xlat
subb
bound
xor
cltd
dec
sbb
add
cmpl
jl
daa
sub
and
and
and
cmp
xchg
loope
test
add
mov
inc
add
cmp
cmp
xor
xor
xor
xchg
lods
add
xlat
sub
pop
jb
xchg
pop
cli
cltd
add
sub
add
sbb
jmp
pop
push
fwait
adc
out
test
adc
rcrb
js
add
sbb
jbe
jnp
or
add
add
add
addb
xor
and
cld
add
jne
ja
pop
add
sub
xor
xor
mov
bound
stos
lock
inc
push
add
or
aad
aas
adc
sub
shr
int
push
pop
or
lock
jbe
add
push
jnp
ds
rolb
mov
inc
push
add
lods
pusha
addb
fs
pop
dec
jnp
sbb
mov
xchg
mov
adc
lea
stc
dec
cld
mov
aas
imul
pop
xchg
js
xor
insb
pop
subl
xchg
aas
dec
loopne
arpl
adc
imul
sbb
xor
add
aad
xor
insb
add
add
add
lock
xor
test
inc
pop
jge
in
cwtl
fiadds
sub
rorb
push
mov
add
ja
pop
imul
add
nop
stos
lea
jge
mov
cmp
cmc
mov
push
incl
adc
add
es
sub
stos
arpl
pop
inc
add
mov
adc
pop
enter
addr16
lea
add
bound
push
adc
pop
inc
data16
and
addr16
jle
addb
mov
ss
cs
imul
push
scas
adc
inc
mov
stos
aaa
test
in
adc
out
cmp
dec
add
in
test
daa
lret
pop
jmp
test
repz
and
fdivrs
sbb
stos
inc
imul
pop
mov
fcoml
add
fdivrs
sub
cwtl
pop
inc
add
adc
iret
out
push
clc
mov
cmp
xchg
stos
movzwl
repnz
es
pop
add
jnp
cmp
add
rolb
cmpsl
add
mov
mov
xor
lret
pop
in
pop
sarb
call
mov
push
mov
scas
add
cmp
das
inc
dec
les
in
push
xor
sbb
loopne
subl
sbb
pop
pop
sbb
add
je
fdivs
lret
xor
clc
add
test
mov
jle
cmp
bound
and
sub
dec
fcomps
mov
pushf
xchg
sahf
fs
in
pop
add
ljmp
and
pop
adc
jo
in
call
sbb
sbbl
mov
sub
dec
mov
mov
faddl
insl
xor
push
push
sub
push
push
out
pop
movsb
mov
repnz
nop
sub
lds
cmp
insb
add
repz
and
add
and
add
cltd
dec
sbb
fstps
cmp
xchg
or
movl
cmp
icebp
mov
jns
add
xchg
push
sub
jmp
pop
lds
push
stos
mov
adc
cmp
push
sub
cmp
sbbb
das
fsts
cmpb
lds
add
sti
fildl
jbe
andb
in
adc
push
xor
repnz
xor
fsubs
enter
dec
jo
add
jno
scas
or
enter
pop
in
fiaddl
mov
dec
push
mov
loop
xchg
clc
push
out
data16
and
xlat
jp
filds
icebp
in
or
pusha
pop
lods
fmuls
xor
test
nop
adc
loope
int
jbe
fistpll
incl
daa
and
das
xchg
xchg
dec
aam
pop
add
jnp
outsl
add
mov
and
xlat
imul
test
jmp
ret
sub
test
movsb
out
or
cld
add
ret
fmuls
mov
or
pop
add
mov
inc
mov
jns
add
adc
or
xor
push
mov
in
pop
pop
mov
lea
addb
orl
xor
mov
sar
pop
add
sahf
add
sub
sub
mov
test
jle
mov
lea
push
inc
xchg
insb
pop
add
imul
mov
xchg
mov
xchg
jo
jnp,pn
add
push
push
add
dec
leave
sbb
clc
outsb
fildl
call
inc
and
inc
mov
xchg
or
loopne
mov
aaa
pop
popf
or
and
mov
mov
xor
lods
aas
and
add
orl
add
outsl
sub
arpl
scas
sbb
mov
dec
dec
pop
and
mov
movsb
popf
mov
sbb
sub
pop
cmpsb
movsl
and
push
push
mov
mov
ja
add
mov
lahf
lock
cmp
and
xor
mov
pop
push
fimull
enter
sti
inc
insb
and
jne
add
outsl
rolb
add
push
mov
shll
add
das
cmp
jp
insb
sbb
cli
nop
rcrb
mov
dec
jg
out
rolb
add
inc
and
iret
or
daa
add
sbb
add
and
push
cmpsb
add
mov
out
mov
and
enter
pop
adc
fsubl
push
cmp
or
add
js
push
nop
and
add
repnz
adc
or
cwtl
ljmp
xor
pop
test
add
jmp
rcrl
inc
add
daa
sub
pusha
mov
push
add
ja
ljmp
int3
lock
js
je
push
sarl
add
ja
and
mov
or
test
add
and
push
push
cld
dec
push
pop
cmp
nop
loopne
inc
xor
adc
stos
sub
cmp
dec
or
xchg
adc
inc
das
pop
inc
inc
add
sldt
jo
mov
push
sub
adc
call
pop
xor
in
aad
mulb
sbb
inc
fsubs
adcb
or
lret
loopne
add
push
pop
ffree
leave
push
jns
test
add
cmpl
aaa
faddp
add
add
cli
xchg
adc
xchg
push
lret
jb
lock
add
hlt
cmp
xchg
jge
add
mov
ds
mov
pop
sbb
cmp
and
and
aas
mov
jae
testl
pop
push
inc
les
ret
dec
and
or
push
jp
push
clc
push
dec
and
loopne
test
jne
add
pop
mov
pusha
mov
fcomi
adcb
loopne
dec
add
push
xchg
or
inc
or
or
in
js
mov
adc
mov
adc
push
mov
dec
or
sbb
sbb
push
add
sub
repz
and
sub
out
or
sub
in
ja
movsl
pop
dec
fdivrl
push
cmpsl
orb
pop
das
jae
pop
ds
mov
mov
call
or
pop
je
pop
sub
push
mov
mov
adc
lods
jne
and
sarl
sti
mov
ret
add
repnz
sbb
popf
adc
jg
mov
movl
cmp
push
roll
je
sbb
add
call
add
add
scas
cmp
pop
test
cmp
out
addb
movhps
cld
int
pop
sub
clc
mov
jecxz
stc
jne
shlb
test
mov
add
pushf
adc
mov
add
fs
mov
lcall
cmp
lods
andb
cmp
adc
loopne
add
call
out
or
pusha
sub
pop
or
aas
mov
and
adc
cld
add
cmp
and
jb
add
mov
add
pop
push
loopne
add
hlt
dec
adc
mov
jo
sbb
inc
repz
call
clc
sub
inc
sub
icebp
push
jbe
add
push
inc
pop
arpl
sub
xor
xchg
les
jge
jne
jae
pop
dec
or
in
jno
xchg
pop
scas
jmp
cmp
add
sub
xor
dec
add
aam
sub
insb
jmp
les
inc
mov
int3
mov
or
out
rep
push
jne
loop
or
ret
pop
push
call
push
xchg
pop
add
sti
adc
add
fildll
add
dec
ja
pushl
push
sbb
mov
mov
pop
dec
xchg
add
jno
sbb
icebp
out
xchg
js
loope
cwtl
sbb
clc
rorb
ds
jo
cld
dec
hlt
add
sbb
mov
cmp
sbbb
imul
enter
pop
jmp
pop
xorb
cld
loop
std
push
lock
lock
jne
test
ror
sub
into
push
mov
or
and
fs
push
bound
adc
dec
xlat
adc
xor
sbb
idiv
add
push
add
outsb
add
aad
loop
xchg
shr
add
lahf
es
adc
test
setae
push
mov
into
xor
mov
cmpsb
add
xor
lahf
dec
add
sub
dec
adc
mov
adc
dec
sub
lahf
mov
pop
lock
daa
jge
adc
imul
lahf
sub
add
call
bnd
data16
dec
add
pusha
orb
pop
mov
add
sti
add
dec
cmp
rolb
lcall
cmp
nop
das
add
enter
xchg
fmul
icebp
adcb
dec
movsl
lret
pop
inc
popf
bsf
push
or
xlat
fwait
dec
pusha
es
push
jne
mov
push
pop
or
pop
test
push
andb
fdivrs
fadds
mov
xchg
inc
sbb
js
stos
and
add
dec
mov
sbb
jp
add
mov
cmpsl
add
cmpsb
add
hlt
scas
insl
add
std
xor
add
aad
mov
int3
rcrl
hlt
add
sbb
outsl
fbstp
aad
call
aam
je
pusha
in
or
fstpl
rcrl
fmuls
adc
movsl
jbe
imul
bound
pop
mov
cltd
rcl
dec
mov
cmpsl
in
outsb
sbb
repz
ss
add
imul
fdiv
das
jne
jnp
enter
xchg
mov
jae
lds
nop
add
xor
add
clc
jnp
hlt
jg
add
arpl
sub
pop
mov
arpl
add
xchg
jp
push
add
loop
push
push
cs
dec
add
mov
loopne
int3
pusha
push
or
out
adc
lock
push
add
and
mov
add
pop
cmp
addb
or
jne
jae,pt
cmp
pop
outsb
icebp
add
pop
adc
and
add
subl
inc
push
clc
sub
lock
push
hlt
std
call
xchg
mov
jne
mov
adc
pop
test
addb
xor
addb
inc
and
clc
mov
or
add
adc
pop
shl
add
aad
jbe
cmpl
push
cwtl
subb
push
jne
xor
xchg
push
sbb
or
movsl
add
xchg
add
jne
xchg
stos
in
push
in
addl
or
fsub
cwtl
pop
mov
jmp
push
and
cmpb
pop
push
stos
out
xchg
aad
inc
inc
test
add
mov
mov
jne
or
lret
xor
and
dec
and
imul
dec
and
arpl
pop
sbb
flds
xor
cltd
cmp
pop
cmpb
jnp
jmp
inc
outsl
dec
and
pop
or
movsl
sub
jmp
pop
cmp
lcall
add
ljmp
aad
add
mov
repz
xchg
jne
rol
pop
dec
mov
add
sti
mov
ret
lret
or
aas
jge
add
out
dec
add
mov
ret
shlb
int3
pop
push
subb
push
inc
shlb
or
nop
fmul
adc
dec
mov
and
out
out
popa
fisttps
movb
test
nop
add
mov
mov
decb
aad
inc
mov
push
into
cmpl
jne
pushl
cs
dec
pop
inc
rcrb
ret
or
add
pop
adc
out
or
jbe
outsl
add
cli
je
das
xchg
adc
and
push
xchg
ret
sub
adc
cmp
add
movzwl
or
inc
jmp
inc
xor
ss
hlt
add
dec
adc
sub
or
enter
mov
jne
sub
push
pop
mov
mov
jo
add
addb
dec
repz
ret
dec
adc
dec
dec
jbe
sbb
sbb
in
add
sti
or
cmpl
setb
mov
push
pop
cwtl
fldcw
pop
repnz
mov
add
push
lea
dec
or
je
aaa
xchg
pop
add
loop
cmpsl
add
push
or
push
xchg
push
add
aas
cltd
mov
int3
pop
and
lea
out
jns
pop
mov
add
and
add
iret
bound
mov
mov
popf
push
shl
cmp
add
out
divl
test
xchg
cmpsb
mov
test
add
dec
cmp
aaa
pop
add
lods
or
nop
xchg
xchg
add
xor
incb
je
add
xchg
cmp
pop
ficoml
loope
cmp
inc
fcompl
mov
cld
out
jb
loopne
sbb
stos
sbb
add
push
dec
cmc
push
mov
cmpsb
dec
adc
clc
add
adc
cmp
jne
pop
push
inc
dec
hlt
addl
or
js
add
push
mov
mov
jb
cmp
cld
jno
data16
js
test
sbb
xchg
xchg
add
stos
les
stos
cs
add
jno
rcr
hlt
cmp
test
push
cmp
or
and
in
inc
aaa
push
push
movsl
incb
xor
or
xchg
mov
inc
adc
mov
mov
adcb
nop
add
mov
std
out
rolb
mov
aam
xor
jg
and
fsubs
les
in
loopne
push
add
mov
push
roll
jl
mov
leave
mov
jb
je
mov
testl
sbb
mov
add
icebp
add
dec
push
add
xor
sub
aad
ret
icebp
daa
mov
add
inc
jecxz
push
or
and
push
xchg
in
pop
lahf
add
cmp
sub
addl
mov
lea
sbbl
imul
cwtl
adc
add
ret
mov
xor
mov
fbld
or
fsubs
add
xchg
outsl
add
out
sbbl
xchg
mov
mov
add
je
push
inc
lock
nop
arpl
cmpb
xor
rcrl
inc
xchg
adc
lret
inc
rcr
add
inc
and
push
lock
lock
addr16
and
mov
sahf
dec
pushf
inc
xchg
add
lret
add
lret
push
adc
sbb
nop
push
inc
sbb
pop
push
je
jo
mov
adc
fs
dec
pmulhuw
push
cmp
push
add
mov
xchg
sbb
inc
mov
mov
stc
push
in
dec
add
loope
imul
cli
lcall
lret
jno
fcomps
ljmp
xchg
push
clc
sti
aaa
add
movsl
int3
add
pop
fadds
jge
add
lahf
inc
pop
out
lock
popl
mov
ret
pop
cmp
pop
cld
inc
jl
mov
add
lret
hlt
leave
add
movsl
cmp
in
xchg
add
adc
add
and
mov
lods
jae
in
add
push
int3
js
pushf
mov
or
rcrb
jbe
adc
jnp
mov
sub
les
mov
fsubrs
je
pop
inc
mov
inc
scas
out
dec
loope
in
or
out
mulb
lds
pop
mov
add
push
mov
add
enter
jge
mov
and
aad
int3
push
faddl
lock
fwait
add
pop
lret
test
jmp
jo
sub
and
xor
push
clc
inc
aam
add
stc
shrb
js
adc
mov
dec
test
cmc
test
out
dec
xor
add
jp
push
adc
iret
push
enter
lock
incb
loop
mov
fidivrl
inc
jmp
rorb
test
ss
in
shrb
push
mov
inc
fadds
cmp
lea
fucomi
push
lcall
mov
jnp
jecxz
cmp
xchg
daa
push
pop
jno
iret
add
push
add
add
lds
mov
gs
mov
pusha
cmp
outsl
sbb
add
lds
sub
mov
enter
xchg
add
mov
push
cmp
andl
fdivrs
es
add
sbb
outsb
mov
mov
pushf
mov
lret
add
ss
sub
or
test
nop
movsl
jbe
add
inc
push
mov
in
es
fwait
dec
jle
popf
add
cmpsl
aad
sbb
idivb
add
and
adc
dec
push
mov
sub
adc
xor
xor
mov
sub
fidivrs
movsl
mov
inc
cmp
mov
jmp
inc
sub
sbb
or
add
dec
ffree
inc
outsl
mov
or
decl
fiadds
xchg
adc
aas
mov
mov
push
les
testb
add
add
sbb
pop
fnstsw
jle
mov
add
or
fcoms
aas
leave
push
sti
mov
add
jae
add
mov
add
jns
pop
or
add
adc
bnd
add
push
cmc
verr
cmp
ljmp
and
add
orb
test
lock
psrld
pop
nop
add
push
sbb
je
into
mov
out
mov
das
repz
fs
jl
xor
or
add
push
sbb
cld
fwait
arpl
rolb
jmp
or
sub
add
cmp
dec
jne
pop
jo
mov
out
cmp
add
sub
lock
jg
call
inc
dec
jne
shl
enter
add
mov
mov
in
lock
and
push
add
adc
rclb
aam
sub
and
inc
and
dec
add
jbe
dec
daa
lcall
movsb
pop
xor
nop
imul
adc
or
or
sbb
jb
cld
cmp
push
clc
lret
daa
jmp
add
push
jne
cld
rcl
mov
test
mov
call
ret
ja
add
addl
decb
test
imul
ret
jge
addr16
imul
pop
pop
add
call
mov
push
adc
test
daa
add
pop
and
inc
add
test
inc
into
mov
jge
adc
mov
and
xor
imulb
mov
sub
jno
add
js
shlb
add
cld
sub
cmpl
add
xor
lock
test
add
daa
jge
or
and
add
fs
sbb
or
shl
js
mov
clc
and
sub
popf
in
push
movsb
je
push
pop
add
mov
jg
mov
mov
jae
lea
ja
dec
ror
popa
jnp
sbb
and
in
adc
add
pop
mov
sbb
mov
shl
popf
orl
movsb
popf
test
enter
mov
test
iret
rol
or
jmp
ds
jmp
lock
xor
repz
roll
fwait
rcrl
loope
roll
mov
cmc
add
dec
xor
xchg
mov
popa
push
out
lret
pop
xor
or
add
push
push
cli
add
ljmp
pop
sahf
imul
mov
sub
add
xchg
push
mov
mov
pop
and
or
jecxz
cmp
cs
add
lock
mov
stc
dec
pop
scas
cmp
mov
lret
pop
movsb
loopne
push
push
je
mov
pop
cld
jecxz
in
dec
mov
add
add
aam
imul
cmp
jae
jecxz
aas
addl
popa
dec
add
stos
jno
cmp
scas
jns
pop
pop
pop
gs
jge
fadds
aaa
rclb
ljmp
test
cli
and
sbb
sub
xchg
out
dec
nop
sarl
xor
sbbb
cwtl
or
lock
xchg
in
sub
add
fiaddl
mov
icebp
rorb
add
pop
sbbb
int3
dec
mov
and
or
cmp
mov
stc
fidivs
mov
dec
add
test
je
push
push
mov
sbbb
adc
jl
fsub
or
add
sub
push
mov
lds
nop
jne
pop
add
sub
call
incl
loopne
mov
mov
mov
add
shr
hlt
out
add
movb
and
or
test
pop
push
adc
and
add
mov
jae
movb
lea
jmp
mov
mov
and
jle
add
mov
movsb
stos
xor
and
rolb
jge
imul
fiaddl
std
dec
cwtl
call
add
and
inc
jp
add
push
lahf
cltd
test
shlb
xlat
add
or
pop
mov
je
addb
ljmp
inc
or
ret
mov
xchg
lds
cmp
adc
add
add
push
jge
or
leave
mov
orb
and
add
jbe
mov
pop
shrl
pop
lret
and
pop
ljmp
shr
ja
sbb
adc
test
xorb
xor
add
mov
jbe
add
add
fldenv
enter
sub
push
or
add
pop
test
mov
mov
movl
mov
hlt
adc
repnz
shrb
or
jne
push
add
jns
addr16
sbb
loop
dec
push
and
fsubrl
adc
adc
shlb
bound
add
push
out
adc
nop
jge
cmp
pop
enter
add
scas
cltd
xchg
rcrb
push
add
add
dec
push
popf
xchg
add
mov
mov
add
xchg
pop
call
nop
mov
in
push
xchg
or
mov
jb
fiaddl
and
jae
les
jmp
adc
daa
idivb
aas
cmp
inc
test
mov
and
xor
movl
dec
aad
xchg
adc
lret
aad
fistl
cmpsl
add
mov
nop
add
and
jb
sti
xchg
add
sub
push
imul
cmpb
jne
xor
add
je,pn
test
je
add
jmp
lock
add
clc
or
mov
sbb
mov
inc
inc
aaa
push
jg
add
in
cmpsl
hlt
dec
clc
je
push
imulb
push
xchg
sbb
sub
push
and
in
mov
mov
cmc
mov
inc
jl
inc
inc
pop
sbb
das
fdivl
scas
add
mov
pop
xor
shlb
pop
adc
test
adc
int
je
cltd
sbb
clc
cli
sahf
sti
add
test
dec
cmpsl
dec
in
fsub
pop
add
imul
pop
outsl
push
mov
jmp
xchg
sbb
les
add
xchg
lret
or
push
in
scas
aam
rcrb
cltd
and
dec
adc
add
mov
aad
mov
cld
adc
sub
shlb
in
jge
mov
xor
sub
pop
push
loop
test
xor
cmp
pushf
lcall
cmpsb
cld
inc
push
inc
jg
xor
repnz
adc
mov
lds
jne
push
adc
and
pop
iret
mov
rclb
pop
mov
es
mov
push
mov
loope
xor
or
jb
jns
out
dec
pop
push
or
fisttpl
xor
pop
inc
xchg
jbe
loopne
push
pop
ja
add
shll
adc
clc
add
movsb
sub
adc
mov
pop
cmp
icebp
add
push
cmp
data16
push
lea
jo
sbb
sbb
adc
mov
inc
adc
jns
push
mov
pop
push
mov
lock
lret
push
fildl
mov
sbb
add
xlat
dec
cmpl
push
mov
add
push
push
dec
sbb
inc
gs
push
fcmovnbe
jae
mov
sbb
popl
add
jmp
roll
sti
dec
lock
out
add
sbb
push
adc
and
inc
xor
mov
dec
sub
clc
mov
int
insb
add
dec
jecxz
xchg
jmp
cs
inc
pop
sub
inc
add
out
xchg
js
jne
push
and
mov
add
test
jle
call
hlt
dec
xor
or
and
jge
adc
out
stc
fs
cmp
mov
lret
add
aas
pusha
addr16
rolb
or
lcall
jno
push
popf
subb
sub
mov
cmp
addr16
adc
gs
dec
scas
mov
cmp
add
push
lock
clc
mov
jo
into
out
and
loop
ss
dec
out
add
mov
push
push
sar
pop
add
jmp
jo
and
jb
mov
add
je
inc
into
loopne
mov
jecxz
jg
jp
sub
push
in
mov
stos
sbb
mov
popf
in
add
cmp
mov
inc
fidivl
add
sub
in
sti
adc
pop
mov
xchg
or
lods
mov
in
dec
add
pop
andl
add
ja
aas
sahf
pop
test
sbb
add
inc
pop
ss
inc
xor
push
mov
xor
imul
mov
cmp
das
je
or
pop
nop
add
inc
xlat
cmp
or
jo
push
add
cmpsb
pop
dec
ret
cld
lock
jne
add
imul
push
pop
xchg
cli
imul
in
mov
sbb
leave
sub
ficomps
xchg
jne
cmp
add
push
mov
xchg
jns
add
and
push
mov
shl
sbb
add
cli
jl
cmp
add
movl
add
pop
and
pusha
xchg
imul
fildl
inc
lock
pushf
flds
lock
add
xor
cmp
add
or
jl
jb
add
jmp
sub
xor
loopne
add
push
test
nop
adc
mov
sub
adc
loopne
push
loopne
and
cmp
fdivrp
loope
push
push
fs
rcr
icebp
pop
sbb
mov
imulb
jne
insb
rcr
inc
bound
idiv
popa
iret
jge
mov
arpl
pop
insl
icebp
mov
and
add
movb
in
pop
negb
add
xorb
push
or
push
lahf
sbb
add
popf
jae
or
incb
cmpsl
imul
mov
ret
mov
xor
fbld
mov
or
mov
imul
hlt
cld
push
add
stc
aas
pop
data16
cli
loopne
xchg
cld
sub
or
xor
mov
adc
adc
mov
popf
data16
pop
adc
lahf
or
jg
add
stc
inc
xor
and
adc
in
sbb
std
adc
cmp
sub
mov
add
lahf
jne
add
xchg
xor
push
es
or
pop
jmp
xlat
test
cmp
add
repz
mov
push
mov
jnp
push
pop
fisttps
mull
pushf
fs
addb
fistpll
xchg
inc
sub
stos
or
gs
jmp
dec
dec
add
mov
imul
add
enter
sahf
push
idivb
push
push
add
lea
je
or
add
in
subb
add
movsl
fcmove
mov
dec
adc
inc
push
add
ret
add
sbb
cmp
in
sub
jg
mov
adc
push
clc
add
xchg
jg
push
or
add
xor
lahf
add
mov
enter
jae
loopne
iret
or
add
dec
call
fwait
pop
add
mov
inc
xor
test
lahf
es
add
pop
add
jne
cwtl
movsb
add
pop
xor
and
mov
faddl
xor
jmp
nop
cmp
stc
push
and
aam
sbb
movsl
or
fwait
xchg
sbb
mov
cli
in
xor
jno
loope
lea
orb
adcl
int3
cli
bswap
and
nop
pop
sarb
add
scas
dec
pop
mov
sti
push
enter
mov
ds
and
inc
hlt
ret
int
mov
adc
mov
cmp
dec
out
mov
xchg
cmp
jbe
outsl
rcrb
add
pop
mov
push
dec
hlt
das
add
in
dec
push
sbb
and
jg
add
dec
jb
push
incb
push
cmp
inc
cmp
test
mov
out
add
aaa
pushf
sbb
and
add
adc
mov
push
dec
mov
xchg
mov
add
or
sti
cli
fwait
aaa
add
icebp
enter
xchg
ja
sbb
mov
mov
inc
cltd
inc
les
popa
jo
add
add
xchg
mov
jae
shlb
add
pop
scas
testb
mov
mov
xchg
add
or
mov
or
or
sub
xchg
sub
jl
xor
add
sbb
or
jnp
nop
les
out
loop
test
sub
icebp
add
mov
mov
add
pop
sub
sbb
add
mov
icebp
jge
add
in
fnstcw
dec
push
jns
mov
push
add
fbld
rcrb
aad
xchg
inc
ja
pop
adc
add
cltd
imul
out
lds
or
inc
pop
sbb
dec
add
decb
add
add
mov
adc
mov
mov
lds
jns
pop
cmp
ficoms
xor
add
jns
dec
mov
dec
insl
test
das
add
sbb
jle
rorb
add
or
addb
mov
pusha
mov
xor
aas
fcompl
xchg
and
pop
xchg
fistps
mov
clc
cmpsb
xchg
std
icebp
push
jl
dec
inc
cltd
jne
mov
xor
sub
adc
shll
jns
pop
pop
pop
je
shr
repnz
add
add
movl
pop
xchg
mov
mov
and
sbb
or
dec
add
aad
pop
adc
cmp
inc
sbb
lods
inc
adc
jmp
fmul
adc
or
xor
or
stos
and
push
mov
cmp
loop
or
je
mov
out
push
cmp
test
push
and
mov
add
mov
xchg
es
repz
add
xor
addr16
ds
std
xchg
lea
cmp
pop
int3
and
sbb
and
lock
fcompl
ja
and
push
movsb
push
mov
pusha
lock
jne
roll
add
insb
stos
leave
loope
push
mov
inc
test
and
push
add
enter
stos
add
popf
xchg
loope
jge
das
jne
sti
cld
push
fnstenv
pushl
mov
mov
or
dec
in
popa
pop
lahf
add
inc
iret
loop
clc
adc
testb
daa
and
dec
push
xchg
insb
and
test
addb
and
lds
mov
test
sbb
aaa
lea
ss
adc
int3
and
mov
mov
in
daa
ljmp
outsl
add
jp,pn
xchg
fstpt
dec
pop
push
jmp
xorb
pusha
fst
pop
dec
adc
int
add
out
popa
jle
test
dec
mov
add
mov
sbb
and
fidivrs
jl
add
cli
sbb
mov
mov
lret
xchg
inc
sbb
push
pop
jae
dec
jnp
outsl
loopne
or
pop
cmp
sbb
push
ds
scas
adcb
pop
adc
rorl
mov
dec
push
sbbl
sbb
mov
cld
into
lahf
out
and
add
jo
or
lret
push
frstor
dec
add
and
cmp
loopne
jecxz
add
mov
les
or
imul
fidivrs
fs
add
jnp
loope
pop
add
or
and
add
sbb
add
mov
inc
xorb
adc
add
jo
test
in
jbe
add
push
and
je
decb
push
leave
fdivs
mov
mov
add
inc
mov
dec
add
add
call
inc
jle
add
mov
aam
adc
test
in
pushf
daa
pop
sub
test
add
sub
push
jmp
sbb
and
cmp
and
xchg
pop
adc
pusha
mov
add
pop
clc
loop
testl
fsubrs
and
add
adc
lods
add
iret
mov
xor
ss
add
loopne
and
movsb
and
add
in
jmp
sub
or
pop
inc
cwtl
loopne
lcall
add
and
popf
add
inc
in
or
call
and
fmul
sbb
ds
or
inc
xchg
adc
inc
inc
out
sar
add
int3
inc
lock
or
mov
cmp
sbb
adc
xor
and
cmp
and
xor
call
pusha
xor
add
or
aaa
and
push
decb
xor
js
xor
inc
or
xor
nop
aam
push
add
les
cld
pop
add
dec
cmp
mov
pop
fcomps
sbb
fucomi
push
arpl
test
or
sub
leave
nop
jns
xchg
mov
sbb
cmpb
cmpl
xlat
filds
and
ret
lea
mov
lret
shlb
sbb
js
add
add
xchg
clc
std
or
aam
andl
add
and
mov
pop
addb
and
mov
rol
psraw
add
jns
mov
pusha
movb
inc
test
mov
cmp
int3
clc
mov
dec
test
cmp
mov
push
xchg
mov
pop
sbb
call
test
sarb
add
push
add
sbb
mov
push
add
add
test
pop
sbb
or
movsb
andb
cmp
dec
add
outsb
je
insl
add
in
loop
out
cmpl
popa
add
xor
xchg
inc
sbb
xor
mov
mov
inc
push
and
in
or
pop
mov
aam
pop
or
cld
mov
cwtl
or
sbb
pop
sbb
loopne
insb
inc
loopne
pop
xor
push
add
push
pop
es
push
and
addb
mov
dec
pop
mov
mov
shr
fsubr
loopne
call
jo
pop
or
adc
sbb
and
jo
xor
and
std
cld
jnp
push
sub
pusha
add
jo
mov
dec
add
mov
add
add
or
push
add
add
inc
bound
jns
cld
arpl
add
or
mov
and
call
adc
cwtl
loop
cmp
mov
push
outsb
adc
or
fs
mov
adc
push
inc
add
add
inc
dec
dec
rclb
adc
arpl
std
pop
popa
jo
mov
js
jbe
and
popa
and
xor
cmp
xor
test
push
add
int3
lret
and
push
pop
xor
add
mov
cmp
add
adc
xor
dec
subb
imul
lock
and
and
pushf
and
mov
mov
inc
pop
jo
mov
rclb
mov
pop
inc
sub
mov
pusha
adc
mov
pop
sbb
leave
lea
mov
fwait
add
ds
dec
add
push
scas
mov
cmp
add
adc
sbb
push
xchg
divl
test
add
and
rorb
into
or
cmc
push
add
sbb
loope
and
add
and
pushl
or
out
or
sbbb
mov
push
add
aad
sbb
and
inc
or
jmp
aaa
stos
pusha
ljmp
sbb
xor
cmp
push
repnz
jo
rcl
add
mov
rclb
push
push
pop
outsl
lret
adc
std
or
sbb
inc
in
xor
loope
stc
cmc
sub
cld
rclb
or
jg
add
decb
xor
pushf
dec
test
loop
add
mov
adc
or
add
adc
inc
dec
add
pop
jno
hlt
sub
xchg
cwtl
stc
ss
addb
ljmp
or
rclb
pop
push
fcoms
and
cmp
or
fldenv
faddl
push
addr16
jecxz
add
jae
add
insb
add
add
inc
mov
add
js
adc
adc
aam
ss
inc
mov
push
fcoml
xchg
xor
cmpsb
test
cmp
add
nop
movsb
aas
jl
pop
pushf
and
adcb
nop
rcll
add
add
cs
pop
inc
in
dec
adc
popa
mov
mov
sub
cmp
sbb
push
mov
jnp
push
loopne
and
pop
dec
pop
sbb
adc
or
pop
cltd
pop
fdivrs
xchg
add
and
xchg
clc
cwtl
loopne
dec
xorb
pusha
xorl
clc
faddl
inc
xchg
test
cmp
xchg
pop
fadds
insb
adc
ret
mov
push
mov
add
imul
or
mov
rcrb
add
sbb
push
push
pushf
dec
cmp
sbb
mov
add
mov
shrb
call
mov
add
xor
incl
test
add
xor
je
xor
cmp
lods
out
cwtl
pop
adc
add
add
loopne
cmp
nop
inc
add
pushf
mov
cld
shll
add
dec
xchg
sbb
and
cmp
dec
fadds
or
addb
dec
in
push
pusha
sub
sub
pop
mov
add
adc
push
pushf
int3
ret
jno
push
cltd
mov
add
xor
adc
xor
in
push
orb
jo
rcrb
sbb
pushf
fs
popa
add
pop
sub
gs
shlb
pop
je
inc
add
dec
pusha
aas
add
add
enter
mov
out
push
lods
adc
add
shl
and
jl
inc
pop
out
sub
add
loope
call
and
ljmp
or
clc
jle
addb
jecxz
adc
mov
add
mov
jbe
repz
movsb
or
mov
adc
push
in
sbb
pop
dec
adc
fs
dec
jl
mov
lcall
pop
faddl
cli
adc
cmp
cmp
push
sti
mov
lret
inc
aas
cmp
or
adc
and
es
cmp
pusha
push
outsb
adc
mov
pop
cmpsb
movsb
add
fimuls
repz
xor
inc
adc
mov
add
andb
adc
dec
aam
sub
andl
cltd
adc
or
data16
jp
xchg
xchg
mov
dec
shl
mov
or
add
dec
xor
inc
outsb
orb
ror
fdivrp
out
sbb
mov
adc
push
cmovs
popa
mov
std
std
cld
in
add
xor
adc
imul
dec
scas
pop
or
in
xchg
dec
movsb
xchg
mov
scas
fdivp
mov
adcl
ret
xchg
or
cmpsb
enter
rorb
call
in
cmp
icebp
mov
dec
and
ds
add
push
mov
loopne
inc
inc
daa
cli
je
mov
cmp
push
punpckhbw
fs
dec
mov
inc
xor
inc
inc
imul
in
push
sti
scas
adc
outsl
outsb
add
xor
pop
loopne
inc
jle
mov
sbb
insl
daa
mov
xor
or
jne
and
inc
add
xor
in
sbb
sbb
push
xor
in
imul
imul
push
outsl
dec
jne
mov
xor
or
jo,pn
sub
je
fidivrl
outsb
inc
push
add
arpl
mov
sbb
sbb
jb
or
inc
js
cmp
and
andb
in
out
movsl
mov
loop
outsl
dec
inc
xor
push
jb
fsubl
push
add
decb
popa
outsb
mov
movb
imul
push
aam
cmp
adcb
adc
hlt
insl
jecxz
xchg
lcall
pop
mov
cmp
mov
push
adc
add
jle
mov
aad
mov
andb
sbb
sub
cmpb
sbb
test
es
outsl
add
dec
data16
jecxz
addb
rcll
or
pop
sbb
push
cld
ljmp
fs
or
adc
jp
mov
insl
pop
push
imul
xchg
add
cmp
movsl
xor
es
lret
int3
jns
push
nop
mov
movsb
rorb
inc
out
push
outsb
addr16
mov
scas
mov
jp
add
dec
fildll
sbb
jo
sbb
int3
pop
push
nop
xchg
dec
rcrl
add
dec
cmpsb
outsb
rolb
adc
loope
fiadds
dec
inc
pop
insl
jo
inc
mov
hlt
pushw
dec
push
outsl
mov
sub
out
xchg
pop
and
sub
push
adc
xchg
jb
in
xchg
add
int3
mov
nop
add
add
jbe
adc
cltd
stos
rolb
in
loope
daa
sub
adc
adc
cltd
add
movsb
pusha
aam
clc
jne
insl
popl
ficoml
mov
jp
adc
adc
pushf
xor
cmp
or
cwtl
mov
mov
aad
mov
jb
roll
subps
cmc
xor
add
inc
lret
pop
push
add
in
repz
add
dec
cmp
push
mov
dec
mov
data16
push
inc
into
sub
add
mov
add
lcall
sbb
mov
sbb
sahf
add
mov
mov
jbe
adc
jecxz
loop
inc
inc
fwait
in
xor
scas
mov
in
jae
mov
add
inc
mov
call
push
shrb
syscall
and
push
mov
orb
sbb
inc
push
out
jno
pop
sbb
inc
add
push
out
add
imul
es
mov
mov
mov
cmp
inc
xchg
and
dec
lret
bound
pop
leave
sbb
cmpsl
movsb
les
add
add
jno
inc
xorb
popa
pop
out
push
add
push
lahf
or
clc
inc
stos
and
mov
or
movsb
cmpsb
pusha
out
shrb
add
mov
cs
clc
in
add
imul
push
add
test
adc
and
cmp
dec
sub
loopne
aam
add
push
adc
or
push
adc
bswap
pusha
fisubrl
dec
add
push
cmpsb
xor
xchg
sub
les
dec
or
xorb
push
pop
mov
xchg
mov
scas
sbb
int
adc
xchg
push
addb
enter
pop
fdivl
cmp
sub
cs
adc
aaa
and
mov
jns
add
out
lods
mov
add
mov
clc
fnstsw
xor
stos
sbb
fldcw
fimuls
pop
add
or
test
test
add
orb
push
aad
jo
loopne
add
or
xor
sub
inc
cmp
xchg
inc
push
dec
out
dec
push
mov
punpckhdq
jp
or
iret
xchg
iret
lcall
iret
mov
iret
ror
fcmove
loop
ljmp
xor
add
adc
sbb
and
sub
xor
icebp
cmp
inc
dec
dec
mov
pop
punpckldq
jb
jp
or
iret
xchg
iret
lcall
iret
mov
iret
test
clc
push
xor
push
je
jbe
js
jp
dec
jl
jle
and
popf
jne
add
xor
loopne
push
and
push
leave
mov
aaa
add
cmp
add
fistps
jmp
or
sbb
cmp
pop
push
outsb
lods
mov
xchg
hlt
popf
clc
test
scas
cld
mov
test
out
sub
cmp
add
inc
sub
xchg
cmpsl
adc
cmp
movb
sbb
xor
jg
lahf
add
mov
fcompl
adc
sahf
add
dec
lahf
push
pop
pop
shrl
jno
xchg
jmp
adc
add
leave
and
shrl
jmp
stc
mov
sti
andl
pop
int3
add
cmp
add
jge
test
jbe
js
push
cmpsb
xchg
mov
out
out
ret
sbb
push
xchg
decb
subps
and
xchg
mov
lret
push
jle
sbb
xor
sahf
xchg
mov
add
xchg
xor
daa
push
sbb
addr16
add
cltd
xchg
mov
lfs
loope
xor
add
stos
shll
add
jbe
js
bound
ss
mov
leave
mov
aaa
mov
mov
or
push
test
lock
hlt
push
add
pop
das
pop
imul
cmp
mov
add
sub
mov
fsub
adc
cmp
test
orb
add
out
xchg
daa
mov
enter
iret
je
xor
inc
in
dec
add
js
jp
jl
add
sbb
xor
popf
dec
add
pop
lahf
fs
pop
sub
jae
subl
hlt
jle
jl
add
xchg
xor
push
inc
addr16
adcb
outsl
out
jne
mov
cmpsb
lock
hlt
int
lcall
add
or
pop
sarl
sti
cmp
repz
add
push
fcoms
jbe
adc
push
bnd
add
popf
cmp
cmp
ss
leave
pop
or
and
push
insl
cmp
mov
loope
cmc
jmp
dec
adc
cli
and
ficomps
xchg
mov
daa
fiaddl
cmp
leave
shl
jnp
and
jb,pt
je
sbb
pop
aas
lods
popf
les
xor
push
sbb
push
add
add
jb
je
sbb
xor
incl
sub
pop
loop
movsb
aas
lods
jl
push
mov
nop
daa
xchg
dec
xchg
xchg
repnz
movsb
add
mov
add
add
xchg
push
mov
aaa
roll
dec
jecxz
repz
daa
inc
outsb
addr16
jle
jle
jle
add
es
aaa
rcrb
dec
push
push
pop
cmp
xor
shl
arpl
out
icebp
add
adc
daa
call
cmp
hlt
pop
clc
cld
push
jb
jp
add
rclb
jle
inc
mov
mov
rcl
fcmovu
loop
ljmp
add
out
cmp
cmp
cmp
and
lahf
inc
in
push
xchg
push
cld
jle
bound
pop
jb
aas
jb
je
jbe
js
jp
jl
jle
jle
push
ret
push
ficoml
lahf
ljmp
cmp
and
cmp
pop
int3
xchg
dec
sub
pop
sub
pop
jb
jp
xlat
inc
jecxz
lock
sbb
sub
cmp
iret
inc
pop
dec
rorb
pop
pop
punpcklbw
jo
js
orb
nop
iret
cwtl
iret
mov
iret
mov
iret
ror
fcom
or
call
fadd
push
or
aas
mov
add
or
pop
xchg
pop
inc
pop
push
mov
daa
stos
shl
daa
rolb
fs
add
loop
shll
inc
sbb
inc
sub
xchg
cwtl
dec
repz
daa
pop
inc
pusha
addr16
movl
mov
repz
clc
testl
and
sub
add
jmp
cmp
inc
roll
loope
jmp
nop
clc
xchg
xor
mov
mov
les
out
hlt
in
clc
icebp
cld
loopne
add
je
jbe
js
add
jl
jle
xchg
ret
jl
mov
ret
pop
shll
fs
repz
sbb
aas
mov
mov
mov
rolb
mov
les
or
add
adc
hlt
inc
push
icebp
cld
pop
leave
pop
shlb
arpl
jg
mov
orl
mov
lahf
mov
lahf
enter
shrb
jo
add
or
or
cmp
add
sbb
and
cmp
pop
shll
fs
repz
js
jl
xor
push
bnd
stc
enter
sar
aam
fdivr
fdivl
pop
in
jl
add
rcrl
and
loope
jmp
xor
je
inc
cld
fs
insb
inc
jo
pop
push
js
jl
sbbb
sbb
jecxz
repz
fdiv
loopne
in
hlt
add
mov
ret
jp
xor
jbe
js
jp
jl
jle
dec
test
and
cmp
sbb
popf
rcrb
fcompl
cs
in
call
addb
and
sub
cmp
add
rcrl
inc
add
inc
repnz
jmp
xorb
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
sti
test
adc
or
cmp
inc
je
shrl
push
leave
pop
rcrl
xchg
notl
mov
and
aam
add
pop
hlt
mov
adc
ss
cs
sbb
add
lods
aas
inc
nop
push
rcll
pop
xchg
xor
mov
test
cmpsb
dec
das
mov
aaa
loope
adc
adc
sbb
sbb
jmp
sub
fildll
push
jo
iret
rol
repnz
push
cmp
and
fs
mov
cmp
ds
hlt
pop
jo
push
movsb
divps
cmp
or
movd
cmp
and
daa
jle
inc
add
inc
adc
jo
dec
decl
add
mov
call
mov
cld
sarb
pop
mov
aaa
cmp
dec
inc
push
add
jecxz
repz
add
jbe
js
mov
inc
das
cmp
add
insb
xchg
jle
inc
outsl
outsb
add
cmp
leave
inc
mov
mov
out
stc
sbb
mov
dec
insb
mov
je
sahf
imul
mov
insl
bound
push
add
dec
in
mov
add
pusha
xchg
sub
jb
add
or
mov
in
adc
inc
movsl
sub
xor
add
cli
xchg
add
jbe
loopne
mov
sarb
xchg
insb
sbb
incb
push
ss
pop
xchg
adc
js
xor
clc
add
dec
scas
or
sahf
mov
lret
stc
jb
je
jbe
js
dec
out
aas
repnz
clc
sbb
add
rolb
cvtps2pd
jne
add
arpl
pop
jne
jle
dec
movsb
push
mov
mov
loope
inc
xlat
sub
adc
orb
and
dec
enter
ret
pop
cmp
iret
push
cmp
add
sahf
in
loopne
mov
cmp
push
cmp
add
dec
xchg
jnp
popf
out
lods
add
jo
push
push
leave
roll
gs
aam
ffree
icebp
cmp
sahf
add
ja
jl
mov
dec
xchg
or
mov
fsubl
add
lock
jo
ds
mov
or
add
cs
xchg
and
cmp
dec
sub
cs
add
loope
jl
xchg
je
push
push
mov
insb
int3
orl
je
inc
call
into
adc
sbb
shl
out
in
call
in
int
jb
pop
pusha
xchg
insb
cmp
je
lahf
sbbb
dec
lret
lcall
imul
enter
add
mov
mov
sbb
and
cld
cmp
or
jae
adc
push
or
dec
mov
in
add
pop
je
mov
adc
sbb
xor
add
pop
xor
push
ss
and
out
fisttpl
aaa
add
mov
movsl
cmpsb
arpl
hlt
xchg
inc
mov
mov
js
ret
adc
loopne
repnz
add
and
mov
sub
xor
push
addr16
xchg
outsl
rolb
stos
iret
mov
mov
ret
and
jbe
inc
pshufw
pushf
popf
add
daa
add
inc
out
cltd
and
mov
adc
cmp
xor
sub
loope
add
mov
sbb
jb
add
daa
aaa
imul
sbb
out
xor
add
cld
leave
pusha
cmp
cmp
cmp
addr16
jp
inc
icebp
sub
jnp
shll
ja
test
add
in
call
clc
pop
inc
pop
pusha
mov
sbb
faddl
add
call
xor
push
jo,pn
add
test
cmp
icebp
mov
mov
add
ss
dec
rorl
add
addr16
and
cmp
fldl
xor
aaa
dec
cmp
add
sbb
pop
push
leave
je
iret
cmpsb
es
inc
add
stos
mov
fcompl
add
aaa
popf
dec
adc
dec
pushf
pusha
enter
add
cmp
push
dec
outsb
cwtl
jne
inc
add
adcl
mov
rcrb
xor
lcall
repnz
or
add
xchg
xchg
sbb
mov
xor
rol
cmp
leave
add
shr
fdecstp
loopne
cmp
pop
or
push
sbb
sub
pop
loope
jbe
fwait
jne
add
mov
in
add
js
cmp
cmp
sbb
cmp
and
xor
sub
js
repz
cmp
lock
dec
push
cwtl
sub
test
push
mov
nop
leave
xchg
popa
pop
pushf
sub
rclb
mov
hlt
iret
jb
add
fmull
cmp
inc
or
cmp
xchg
rolb
js
dec
dec
jge
ds
loope
pop
cmp
daa
fs
insb
inc
cmpsb
je
push
ds
jmp
cs
xchg
mov
js
cmc
add
push
aam
call
ds
lahf
adc
add
push
daa
and
cli
sub
lock
xor
pop
xor
sub
je
jl
inc
test
or
loope
xchg
sub
cmp
movsb
lock
nop
add
or
hlt
push
mov
sub
mov
and
xor
push
bound
pop
dec
mov
mov
mov
dec
int3
in
xchg
add
lock
in
call
jmp
sahf
push
mov
mov
test
cmp
dec
ljmp
add
fwait
mov
push
rorl
add
loope
add
add
test
mov
out
mov
mov
cmp
std
push
mov
scas
inc
or
pop
jo
jbe
js
jp
imul
add
and
test
popa
les
and
add
jmp
sub
add
xor
insb
dec
mov
or
xchg
ret
stc
lock
or
das
call
dec
add
adcl
test
inc
mov
xlat
lcall
icebp
popf
stc
add
sbb
cmp
sbb
mov
mov
add
push
push
xchg
ficomps
jo
repnz
int3
cld
es
cli
and
or
adc
call
lret
inc
dec
xchg
push
cmpl
imul
dec
push
cltd
sarb
dec
scas
sarl
shr
icebp
xlat
stc
fdivrp
in
mov
sti
sub
fdivrs
cmp
cmp
hlt
add
out
or
adc
es
add
aam
xor
punpckhdq
arpl
add
js
sbb
xor
add
sti
pop
or
sbbb
xchg
inc
inc
push
bound
mov
ljmp
push
subb
push
cmpsb
shlb
add
cmp
fmuls
jmp
push
test
add
leave
roll
inc
and
mov
pop
cli
pop
bound
in
lock
inc
xchg
mov
out
js
jp
push
jl
inc
decl
subb
scas
dec
mov
fadds
xorb
ret
rolb
mov
xor
lret
movl
xor
popf
and
rcrl
sbb
in
das
in
mov
and
dec
movsb
add
cwtl
lods
rclb
fs
add
cs
xchg
xor
add
addr16
in
call
sub
add
dec
push
pop
aas
pop
dec
add
push
cmpl
xchg
call
dec
in
outsl
add
repz
ljmp
cmp
rorb
xor
jl
je
arpl
mov
xchg
mov
inc
call
lock
mov
jb
adc
in
aam
daa
pop
pop
je
addr16
add
in
not
push
and
cmp
add
call
add
dec
sub
push
rol
and
and
pusha
add
jp
pop
pop
pshufw
xchg
mov
ret
xchg
add
adc
aas
pop
shll
jp
add
les
add
or
stos
dec
cs
rcl
fcoms
xor
inc
je
pop
add
jp
add
fcmovu
sub
loopne
mov
fnstenv
sbb
and
cli
sub
push
popf
jnp
shlb
add
fdivs
push
push
cmp
ror
mov
xchg
insb
jecxz
pushf
int
sbb
fsubrl
add
clc
sarb
push
mov
mov
rolb
add
mov
add
loopne
and
ss
inc
fs
mov
add
rolb
leave
push
js
into
jnp
add
inc
shll
stc
dec
add
sub
adc
ss
jns
cmovns
jns
mov
cmp
jne
sbb
cmp
popf
lcall
jb
jns
add
int
das
pusha
pop
cmp
add
xchg
mov
add
mov
shlb
cmp
xchg
cmp
nop
loopne
rdpmc
pop
jmp
popf
outsl
sub
xor
and
cmp
or
sbb
jnp
add
add
jb
je
mov
int3
add
js
mov
xor
shll
aad
fstps
push
in
jmp
cld
cmc
xchg
test
std
mov
or
add
mov
sbb
add
fsubl
pop
push
in
xchg
lock
hlt
mov
loopne,pn
cmp
add
adc
xor
ljmp
xor
mov
push
add
in
mov
sbb
mov
je
into
adc
inc
rclb
popf
add
push
add
aam
es
cmp
or
ss
dec
addl
inc
lock
jg
pop
push
in
mov
cmpsl
xchg
in
mov
mov
jbe
add
jp
jl
pop
movsb
add
push
lods
int
add
cmp
and
xchg
cld
repnz
ja
jle
or
add
fnstenv
mov
mov
and
xor
or
lahf
sbb
repz
fldenv
sub
sbb
xor
popf
add
sbb
das
mov
add
cmp
repz
xchg
inc
mov
dec
sti
push
add
push
call
mov
fsubs
enter
das
ret
clc
fmul
loopne
add
call
rcrb
mov
cmp
xchg
cmp
daa
sub
mov
jp
ljmp
jbe
outsb
xchg
iret
push
mov
jb
dec
cmp
and
fs
xchg
push
xchg
mov
fdiv
add
jo
add
and
inc
xchg
popa
mov
je
dec
test
xor
enter
dec
inc
inc
inc
dec
cmpsl
sbb
sub
js
jle
pop
add
add
or
mov
leave
inc
rclb
jl
jle
add
ret
test
pop
jnp
add
shrl
add
add
cli
sbb
dec
jae
xchg
cmpsl
cltd
lds
lock
rolb
out
xchg
std
cwtl
rcrb
es
into
out
xorl
repnz
in
jo
add
daa
xchg
lods
fwait
out
stos
in
test
loopne
incb
cld
setl
cld
xchg
jecxz
movsb
repnz
push
mov
icebp
pop
jns
lock
add
cli
and
adc
xor
inc
dec
in
mov
mov
cmp
aas
xchg
mov
cld
ss
and
and
flds
xor
cmp
inc
icebp
dec
stc
jb
pop
arpl
jb
movd
cmp
outsb
stos
add
mov
shl
xlat
std
jmp
icebp
cmp
fmull
add
and
fldcw
loope
jmp
lds
loopne
cwtl
cld
lahf
daa
stos
inc
mov
xchg
mov
loop
popa
xchg
dec
leave
pop
cmp
dec
das
jae
mov
aas
popf
daa
stos
les
rcrb
nop
push
dec
push
pop
rcrl
ja
lds
lock
cld
in
shrl
imul
lock
add
push
ja
lods
xchg
add
stos
sub
dec
add
loop
test
pop
cmpsl
arpl
andl
xchg
or
add
push
adcb
leave
scas
fdivrs
push
push
js
ljmp
pop
loop
add
repnz
adc
sbb
nop
jno
pushf
add
inc
and
pusha
shl
stos
cmp
aad
lock
or
push
inc
add
loopne
jmp
fs
cmp
add
push
into
and
loop
fmuls
cmp
add
jl
inc
xchg
leave
pop
mov
sti
incl
loope
jmp
or
add
imul
or
int3
dec
sbb
movsb
int3
cs
test
cmpsl
add
rolb
aas
mulb
dec
loope
clc
push
cmp
jmp
scas
add
gs
repnz
xchg
sbb
ret
adc
cmpsb
sbb
js
dec
sub
clc
push
pop
dec
leave
imul
mov
iret
mov
pop
mul
add
sbb
roll
ss
and
mov
ret
mov
repz
repnz
add
aas
adc
sahf
dec
orb
sbbl
repnz
fsts
and
add
roll
add
invd
imul
stc
nop
push
or
cs
sbb
and
jmp
je
cmp
fmuls
xchg
jp
jg
test
ftst
adc
cmpl
gs
loopne
jl
add
mov
adc
add
leave
lret
rcl
and
out
xchg
mov
cmpb
pop
mov
add
cmpl
shll
or
iret
lahf
ficoml
dec
lock
adcl
rcll
mov
pop
leave
in
icebp
add
and
lret
dec
add
unpcklps
ret
adc
sub
mov
push
dec
pop
pop
mov
jb
jp
adcl
and
ds
aad
lret
fbld
cmp
leave
pop
sbb
fnstenv
mov
lods
fs
cltd
xchg
mov
add
inc
jno
add
es
push
int3
add
cld
sti
enter
xor
nop
ja
jl
jb
add
std
loope
add
adc
sub
jnp
inc
aas
shll
int
adc
orb
sub
add
inc
dec
rcrl
add
js
ja
aam
sub
xchg
enter
icebp
es
lret
das
frstor
pop
add
add
or
sub
xorl
lahf
cmc
in
adc
sub
push
jg
add
pop
xchg
jp
mov
in
add
aas
adc
cmp
cmp
and
int3
xchg
sub
mov
out
lock
aam
pop
add
mov
call
add
icebp
ror
sub
add
mov
sub
out
pop
add
sbb
jmp
insb
jae
sbb
iret
icebp
cmp
xor
cmp
add
pop
lahf
jb
add
cmpsl
leave
mulb
ret
movsb
sarb
add
dec
xchg
pop
add
push
lahf
pop
xchg
jbe
add
mov
lcall
or
cmp
xorb
cmp
mov
daa
outsl
inc
mov
subb
insb
pusha
push
jb
in
ds
test
fs
add
dec
dec
popf
add
xchg
icebp
add
clc
or
cwtl
cmpps
sub
je
sbb
xor
sbb
push
aam
out
adc
lock
cld
das
add
inc
out
in
call
test
mov
add
out
jo
add
sbb
dec
sbb
mov
xchg
pop
out
in
xchg
cs
fwait
xor
cmpsb
xchg
ljmp
xchg
and
leave
mov
cs
xor
pop
test
out
inc
cmp
mov
dec
or
fstpt
out
fdivs
adc
cmp
lahf
shlb
test
enter
and
sar
xor
std
in
mov
call
jno
hlt
clc
out
sbb
stos
popf
scas
sbb
sbbb
lahf
dec
ret
or
dec
aas
icebp
fdivrp
repnz
add
dec
pushf
inc
mov
xchg
sbb
lret
pop
enter
je
mov
popa
inc
pop
add
cmp
add
out
div
repnz
add
pop
in
sarb
int3
add
xor
dec
xchg
mov
fimull
jns
pop
jmp
out
jecxz
adc
repnz
je
mov
add
jbe
lock
hlt
aas
mov
into
popa
in
add
movsl
add
pusha
rep
jns
add
es
adc
aas
nop
cmp
int3
ss
xchg
add
les
adc
call
popa
dec
imul
and
nop
xchg
or
mov
adc
jb
je
jbe
add
and
push
mov
aam
adc
hlt
xor
aaa
dec
sub
add
imul
scas
and
adc
lock
ljmp
or
add
popa
stc
adc
lock
int
pop
jns
add
xor
loopne
in
or
add
js
pop
add
int
stc
pop
ret
pop
sbb
fmull
add
loope
data16
pop
jg
add
mov
xchg
into
mov
andb
dec
add
call
xchg
and
cld
sbb
push
pavgb
dec
lds
add
mov
jno
jnp,pn
or
pop
dec
cs
ffreep
mov
xor
xchg
cwtl
adc
loop
jl
jle
inc
test
mov
repnz
cld
loop
ljmp
add
or
push
adc
aaa
add
lea
push
xor
jns
add
sub
xchg
add
nop
iret
test
aaa
xchg
fiaddl
loopnew
xchg
mov
loope
cmp
sub
lods
insb
js
add
pop
sub
test
add
out
sub
daa
mov
cmc
dec
pusha
and
mov
hlt
xchg
clc
scas
cld
lods
cmp
loop
cmpb
push
add
jl
xchg
loopne
aas
cli
adc
loop
insb
cmp
cmp
in
inc
add
add
cld
inc
repnz
add
pop
xchg
cld
push
xchg
mov
add
pop
adc
add
js
cmp
mov
push
cmp
imulb
inc
ret
mov
mov
pop
push
addl
dec
mov
ret
std
rorb
add
push
dec
pop
push
xchg
movsl
jb
test
add
mov
cld
repnz
lcall
add
lods
add
cmp
lahf
xchg
xchg
pop
stos
subb
cmp
shrb
xadd
or
dec
and
cmpl
dec
add
test
xchg
add
rolb
nop
mov
mov
cmp
push
add
mov
or
add
test
pop
das
sbb
sub
cmp
daa
push
mov
add
jle
or
lahf
adc
addb
or
lret
jmp
xor
add
jo
punpckhdq
call
cs
push
xchg
or
cmp
addl
inc
add
test
mov
jns
push
add
adc
cwtl
mov
dec
sub
add
and
scas
movsb
push
pop
push
push
aaa
inc
inc
xor
ds
xchg
add
dec
adc
push
add
inc
out
clc
sbb
cmp
cmp
loope
adc
invd
mov
sbb
pop
loopne
add
and
inc
xor
sbb
mov
andb
pop
cmp
jno
add
adc
add
iret
mov
add
rsqrtps
rorl
imul
push
jle
push
jl
pop
icebp
cmp
xorb
ret
mov
xchg
stc
orb
cli
les
adc
add
flds
xor
push
fstps
add
js
movsb
adc
imul
push
add
jnp
ds
fisubs
int
push
sub
jne
loope
icebp
clc
add
stos
pusha
repz
add
cmp
inc
add
clc
ret
cld
push
or
pop
jb
out
sti
sti
add
cmp
and
add
mov
xbegin
xchg
add
repnz
pop
sahf
dec
add
sbb
ds
ja,pn
adc
sbb
roll
jno
or
andl
mov
es
xchg
add
hlt
add
daa
enter
in
cmp
lar
jae
cmp
xchg
dec
mov
dec
or
xchg
in
cmpsl
add
add
and
pop
add
adc
aam
cld
clc
cmc
xor
xor
jp
inc
push
mov
mov
add
ret
lock
mov
icebp
popl
inc
pop
add
clc
xor
cli
jge
add
or
and
addl
push
negb
adc
or
cli
aam
xor
dec
test
add
pushf
xor
sbb
cmp
add
inc
scas
push
inc
test
jl
mov
lods
pusha
aas
lret
int3
loopne
in
andb
adc
xchg
lcall
sub
xchg
pop
xor
push
pop
cmp
loop
cmpsl
rolb
add
sahf
aas
js
jl
pop
add
ret
lods
enter
add
cmc
call
pop
sbb
or
int3
das
sub
add
adc
loopne
inc
mov
xchg
fdivrl
out
jl
loopne
std
sub
jg
pop
divb
fmuls
jg
rclb
cmpb
add
outsb
and
leave
xor
andl
orb
push
test
ret
faddl
mov
int3
jle
pop
mov
call
cmp
cmpsl
sbb
lcall
ret
aam
fcompl
mov
xchg
lods
rolb
movsb
pop
jle
mov
sahf
ljmp
add
add
mov
in
scas
or
clc
mov
les
int3
mov
sbb
es
xchg
lock
sub
js
faddl
push
aaa
add
or
xor
or
sub
in
fcomps
je
pop
inc
adcb
xor
pop
or
jl
adc
fs
in
aam
aam
test
sarb
mov
adc
shl
adc
fnstcw
mov
les
rcll
dec
dec
mov
dec
pop
jmp
pusha
lock
dec
push
add
xor
hlt
add
mov
movsb
mov
out
mov
lock
mov
enter
jo
jle
dec
fmuls
aas
push
loopne
loope
call
add
xchg
pop
or
jb
adc
adc
sbb
nop
add
sub
sub
fcomps
xor
add
push
lods
mov
in
call
pushf
pop
cs
add
jb
push
mov
mov
mov
and
in
aas
in
lahf
push
xchg
fcompl
dec
push
add
adcb
jmp
test
cs
mov
add
sub
popf
jno
cmpl
shrl
cs
push
jne
lea
daa
push
call
cli
fadd
sbb
int3
adc
call
sub
test
mov
mov
push
push
push
inc
mov
push
cmp
sbb
je
mov
mov
mov
nopl
sbb
jecxz
push
lea
test
sub
pop
add
or
pushf
inc
and
add
add
sbb
inc
add
or
and
add
orb
sub
ret
add
orb
or
fstpt
xchg
mov
lea
loopne,pt
xor
and
mov
jb
dec
push
sbb
lcall
push
mov
in
add
lcall
mov
dec
incb
sub
rcrb
pushl
call
push
add
inc
mov
stos
mov
aas
xor
or
add
je
js
lods
cmp
add
or
jmp
dec
jmp
in
sub
add
out
add
mov
pop
pop
add
bound
stc
add
rep
lea
loope
sahf
cli
pop
add
mov
fwait
cmp
cmpb
or
test
jg
aam
in
rclb
xchg
sbb
pop
sbb
shlb
mov
mov
pop
and
mov
cmpsb
mov
dec
cmpl
add
jge
lods
add
rorl
or
sti
addl
push
inc
ret
cld
sub
add
and
popl
add
ljmp
cmp
mov
loop
in
sahf
fsubl
mov
mov
repnz
and
or
cmc
ret
push
movl
push
lock
outsb
add
sbb
push
mov
add
jbe
stos
sbb
add
jmp
sub
cli
mov
cmp
movsb
mov
nop
cmpsb
dec
jne
mov
inc
loop
stos
mov
add
jg
mov
push
mov
pop
jne
outsl
and
mov
xor
jecxz
push
lcall
and
orl
fsubrl
aaa
ret
mov
xchg
push
movl
ds
jnp
hlt
jl
push
enter
in
add
push
and
loopne
push
adc
movsb
rolb
mov
add
xor
je
add
add
clc
jmp
xchg
add
push
cmp
addb
das
add
in
mov
and
ret
xchg
mov
mov
cmpb
and
and
add
test
xor
fmuls
push
in
rolb
push
xor
add
mulb
xchg
sub
subl
in
jecxz
pop
mov
pop
jb
pop
add
inc
mov
lds
cld
jge
inc
add
les
gs
std
mov
cmp
out
push
aam
shll
dec
inc
push
out
fmuls
sub
lret
loope
std
adc
jp
cmc
inc
xor
pushf
or
fldcw
inc
ja
mov
popf
add
dec
aaa
mov
inc
add
mov
pop
dec
or
xchg
shll
mov
sbb
lahf
cmp
xorl
scas
test
in
fstpl
mov
add
add
das
sub
jnp
and
fldt
push
rorb
mov
pop
add
push
stos
aam
cs
sub
jg
cmp
add
imul
in
add
sub
jg
fnstsw
add
mov
sbb
inc
or
fmuls
mov
pop
les
pop
test
movsb
out
mov
mov
xlat
pop
add
mov
icebp
cs
aam
xor
push
fwait
loopne
xor
fiadds
aad
mov
cmp
add
enter
add
sbbb
xchg
add
cmp
xlat
es
mov
xchg
pop
shr
lods
add
inc
out
add
negl
sbb
xor
dec
xchg
fwait
xchg
imul
cmp
mov
push
mov
add
clc
add
das
jl
add
push
jecxz
add
cld
pop
sub
lea
mov
das
sub
push
add
adc
cmp
popa
mov
insb
std
lock
adc
xor
xor
nop
mov
data16
push
dec
add
sti
pop
pop
push
test
imul
xchg
jp
sbb
pusha
repnz
addb
loope
xor
fnsave
xor
fwait
test
adc
movb
push
cmp
xlat
mov
cmp
lods
movsl
or
icebp
andl
pushw
addr16
jne
add
push
enter
pop
jmp
xor
adc
lahf
push
ret
pop
xchg
scas
inc
mov
leave
rdmsr
xchg
movsb
add
cltd
pop
jae
jle
cli
jno
and
jne
add
pop
push
fsubrs
xchg
xchg
arpl
push
shlb
rcrl
dec
in
jno
jp
icebp
cmp
adc
and
inc
ret
push
push
lcall
stos
add
cli
sar
testl
mov
fimull
inc
push
loopne
ss
bound
xchg
sbb
addr16
pop
jbe
mov
xchg
push
cmc
int
fisttpll
popa
insb
mov
inc
mov
push
add
cmp
dec
add
and
lret
mov
fsubrs
pop
xor
mov
ret
sub
add
mov
sub
ret
push
data16
pusha
or
or
mov
mov
inc
mov
pop
inc
add
jne
rcll
rcll
mov
or
rorb
aas
push
unpckhps
rorb
je
push
push
sub
xchg
pop
mov
sub
fdivs
ds
sub
mov
push
add
movsb
pop
jmp
dec
shl
or
mov
cmpl
jae
push
add
test
and
and
add
roll
mov
leave
shr
je
adc
sbb
inc
pop
mull
sub
dec
or
and
cvtps2pd
sub
std
fs
fildl
jne
xchg
bound
outsl
arpl
mov
push
icebp
outsl
fcomip
arpl
add
imul
push
js
aam
inc
int3
dec
sub
addr16
loope
shll
jb
imul
dec
or
push
ror
outsb
adc
ds
outsl
mov
jns
mov
in
xchg
or
das
inc
lods
bound
push
xchg
loop
cmp
mov
std
insl
icebp
arpl
or
mov
push
fs
mov
xlat
adcl
and
in
sbb
add
icebp
aas
inc
jg
pop
cmc
scas
and
jae
shr
pop
xchg
aaa
inc
inc
daa
cmp
dec
push
jnp
inc
mov
imul
mov
add
mov
movb
aad
ds
push
add
adc
jmp
sub
cmp
xlat
push
and
jne
xor
mul
mov
popa
pop
jle
clc
ret
mov
push
cmp
daa
sarl
pop
xor
lea
arpl
or
adc
lret
leave
push
sbb
xchg
lret
jno
jo
adc
sbb
js
call
bnd
lret
xor
repnz
cltd
stos
stc
push
xor
mov
testb
xchg
dec
jle
jle
sbb
pusha
out
lock
push
jmp
add
test
loope
test
sbb
cld
mov
sti
pop
js
shrl
les
sbb
fs
pusha
addr16
jg
and
aaa
fisubrs
or
in
pushf
mov
shlb
adcb
sbb
cli
mov
scas
mov
pushf
cli
int
int
add
xchg
mov
or
pop
mov
jle
outsl
daa
dec
lret
xchg
xor
cmp
int
out
and
jbe
jecxz
js
mov
pop
lock
loopne
dec
adc
mov
imul
js
scas
popa
jb
in
int
jae
inc
aad
xchg
clc
loop
sbb
arpl
push
cld
or
mov
xchg
or
loop
push
popf
outsb
movsb
jecxz
inc
or
call
xlat
lock
arpl
dec
mov
sbbl
sub
inc
jns
sarl
or
cmp
test
jl
xor
xorl
adcb
dec
icebp
stos
xchg
out
sub
dec
lahf
xor
shlb
pop
jbe
decb
fwait
xor
shll
das
icebp
mov
arpl
add
scas
xor
fnstenv
je
repz
sbb
ds
jns
jb
sbb
mov
leave
jmp
popa
test
daa
mov
pop
cmpsl
cwtl
andb
aas
xchg
push
fistl
push
sbb
ss
leave
inc
enter
inc
mov
mov
sub
notb
out
scas
int3
cmp
call
in
loope
lods
outsb
sub
pop
in
cld
pop
ljmp
xor
jle
lret
xchg
das
xchg
out
dec
xor
cs
mov
dec
adc
insb
add
clc
mov
inc
cld
and
daa
mov
add
add
nop
popa
sbb
mov
lock
fldcw
rcrb
pop
fmuls
popa
jns
adc
jbe
inc
loope
out
pushf
stc
aam
jmp
sti
jns
and
mov
sbb
cmp
ss
mov
test
sbb
lcall
insb
lods
lods
jne
jl
mull
inc
movsb
aad
mov
mov
mov
pop
flds
mov
mov
lahf
fwait
cs
push
push
outsb
les
out
push
je
inc
testb
pop
jns
dec
cmp
adc
pusha
ret
aaa
stos
cli
notl
add
out
push
sbb
inc
ja
dec
add
out
xor
jbe
jne
lods
push
fistpll
cmpsb
mov
cmpb
mov
cmpsl
lret
lret
dec
inc
jae
mov
adc
std
ljmp
xor
and
or
in
mov
mov
leave
mov
ss
std
and
mov
jno
jmp
inc
pop
mov
or
jecxz
mov
fldenv
jo
xor
push
stc
inc
mov
pop
or
dec
aas
out
and
and
xchg
ja
shrb
push
add
sbb
imul
inc
mov
pop
mov
pminub
pop
mov
or
jo
pusha
xlat
pop
stc
mov
shll
xchg
fs
ret
cmp
aam
sub
adc
jb
jnp
cltd
int3
into
aaa
mov
enter
adcl
sbb
inc
inc
addr16
sub
out
sub
test
pushf
inc
and
nop
sub
inc
sahf
add
enter
xor
sbbl
inc
test
or
sub
sti
mov
mov
nop
and
jecxz
out
push
add
outsb
and
loop
inc
test
mov
mov
dec
sbb
rcrb
mov
loopne
jnp
repnz
cs
outsb
and
jb
aam
push
testl
mul
add
pop
xchg
repnz
movsl
testb
jno
imul
cmpsb
ss
loop
and
sti
fcmove
imul
jg
stos
pop
jle
movb
push
rorb
ljmp
jmp
or
xchg
aam
ficomps
mov
add
add
mov
lds
hlt
jae
mov
adc
sub
xchg
lret
lds
adc
pop
and
jns
pop
xchg
int3
mov
or
pop
pop
inc
and
cmp
jne
bswap
loopne
and
idivb
xchg
or
pop
xchg
insb
dec
fnstsw
repnz
cmp
and
je
ror
test
fimull
pop
dec
ds
fldt
movsb
rcll
loope
fisubrl
cld
popf
mov
rcrl
jecxz
das
adc
fs
outsl
cmp
inc
or
pop
xor
notl
mov
loopne
pop
cwtl
test
and
sub
sar
jp
dec
jbe
sbb
and
ret
pusha
push
mov
out
mov
inc
aad
sahf
mov
mov
or
push
push
jge
test
lret
lds
leave
sbb
lret
icebp
bound
test
lahf
adc
jge
add
jo
loope
lcall
aam
pop
dec
lea
inc
aad
sbb
int
or
push
movsb
mov
jl
cmp
mov
xchg
movl
xor
repnz
rolb
jb
subl
popa
jbe
lcall
sbb
sub
insb
es
mov
mov
test
cmpsl
pop
xchg
rorb
scas
or
mov
mov
add
dec
dec
scas
je
das
fnstenv
xlat
ret
cli
jno
sbb
out
push
mov
jl
lds
repz
cld
ljmp
ljmp
sarl
dec
mov
daa
sahf
jo
sub
mov
cmp
or
mov
out
adc
sahf
and
xchg
mov
aas
ret
hlt
and
mov
mov
js
cwtl
fstpl
cmp
jl
sbb
jb
ret
dec
pop
jmp
gs
mov
or
push
in
mov
xor
leave
aas
push
cmc
mov
or
cmp
xchg
arpl
insb
xchg
cmp
cmp
mov
xchg
aad
fsubs
orl
ret
shlb
fwait
clc
mov
stos
out
lds
sahf
shlb
addr16
in
xchg
sbb
push
and
ret
xor
out
test
aaa
iret
add
adc
gs
jecxz,pt
rorb
xor
dec
mov
imul
les
push
mov
out
loope
icebp
jne
or
fwait
pop
xchg
xchg
rcr
mov
imul
mov
pop
jo
add
jne
mov
sbb
mov
push
sub
ret
xchg
adc
std
imul
and
push
push
cltd
mov
jns
dec
std
xor
outsb
sub
cmp
pusha
xor
jnp
jl
inc
iret
mov
jo
out
fs
and
mov
jle
cmp
lcall
jbe
sbb
push
mov
adc
add
test
mov
jg
jae
pop
pop
aam
iret
sbb
and
dec
push
arpl
test
gs
xchg
jno
add
mov
inc
sti
mov
jg,pn
xchg
lock
cld
push
shl
enter
das
negb
xlat
call
leave
push
xor
mov
fsubp
lret
movzwl
pop
dec
shll
sti
jne
and
cwtl
mov
cmp
mov
int3
mov
sub
sub
or
stos
mov
mov
xchg
pusha
int3
pop
icebp
add
cmc
nop
lods
loop
sbb
mov
jecxz
or
mov
push
push
adc
cmp
dec
pop
cmpsl
jecxz
adc
stc
shl
add
or
fcmovnu
pop
jmp
pop
ficompl
sbb
fldcw
jl
ret
xor
movsl
adc
xor
fimull
les
mov
inc
pop
cmpsl
mov
and
sahf
imul
xchg
arpl
in
aaa
je
lret
xchg
pop
add
or
sbb
or
int
pop
clc
out
sub
xor
cmpsl
mov
loop
loope
cs
adc
mov
lcall
lods
pushf
push
xchg
test
enter
into
and
in
fnstenv
sbb
arpl
fs
xchg
adc
movsl
jmp
mov
sbb
xor
push
and
push
pushf
mov
imul
cli
scas
jbe
push
nop
push
add
cmpsl
inc
iret
popf
adc
fiadds
mov
xchg
add
inc
push
cs
ret
mov
mov
bnd
ljmp
in
mov
popa
sub
icebp
int3
inc
ret
jne
cmp
dec
insb
rol
loopne
xor
mov
cmpsb
adc
push
in
and
fcoml
cmp
xchg
cwtl
idivb
ret
data16
adc
jnp
dec
inc
jbe
and
xor
fimull
adc
stc
repz
aas
push
pop
add
js
cltd
jl
test
adcb
adc
add
loopne
add
pop
xchg
inc
outsb
push
arpl
inc
lret
ss
shrl
fwait
xor
aaa
push
in
aas
in
xchg
fwait
sti
lcall
fcomp
dec
hlt
inc
push
cltd
add
movsl
push
lcall
xchg
and
mov
pop
jle
mov
enter
push
cmc
je
or
push
add
xor
fcmovnbe
movsb
shll
js
and
push
mov
mov
dec
ret
or
cmp
popf
inc
or
or
jae
add
mov
test
stos
call
andl
and
pop
push
lea
sahf
mov
push
inc
insl
loope
data16
xor
inc
repnz
sbb
adc
cmp
cmp
in
jae
cmpsl
fs
into
fsubp
push
pop
jle
fidivl
mov
jb
pop
xor
push
xacquire
xchg
add
es
adc
push
lret
fbstp
or
loop
or
jo
sbb
dec
pop
sbb
fldl
mov
push
mov
or
std
sbb
xchg
cmpsl
mov
jo
sub
or
mov
roll
push
es
ljmp
mov
gs
test
enter
jno
pop
test
or
scas
and
xchg
mov
stos
cmpsb
xlat
cmpxchg
cmc
push
es
cwtl
loope
jne
sbb
nop
fs
push
mov
int3
adc
jae
aad
out
dec
cmp
lcall
add
sub
jle
pushf
js
imul
insl
dec
repnz
add
sbb
push
enter
test
out
in
mov
cwtl
sahf
mov
cmp
cmp
fistpll
inc
inc
dec
xchg
jb
insl
xchg
shrb
cmp
icebp
xchg
dec
mov
sbb
insl
jno
cs
fcomps
mov
movsl
pavgw
loop
mov
lret
adc
add
arpl
in
push
mov
data16
dec
fwait
in
stos
imul
adc
lret
jmp
test
rep
adc
xor
jne
pop
cs
sbb
mov
insb
call
data16
mov
andl
lret
data16
pop
push
pusha
fwait
lahf
or
add
sub
xchg
jecxz
and
loopne
int
adc
orl
adc
and
lock
rcrb
jg
sbb
jg
out
les
pusha
fsubl
cmp
mov
adc
pop
shrb
mov
lea
xchg
dec
adc
mov
xchg
je
mov
dec
das
adc
ret
mov
shll
insb
enter
pop
mov
add
xorb
insb
into
dec
bound
stc
ljmp
stos
cltd
packssdw
lock
pusha
pop
sbb
jmp
mov
or
lret
enter
aaa
and
add
and
in
ficoml
mov
aas
movsb
repnz
adc
daa
sub
scas
jne
dec
fincstp
outsb
mov
sbb
push
rcl
push
xor
sub
inc
and
jmp
pushf
out
push
jmp
dec
pop
adc
aas
dec
mov
mov
inc
enter
lods
imul
xchg
sub
xchg
imul
jg
aad
sub
stc
jo
push
add
push
xchg
test
ret
jbe
push
dec
fcmovnu
jg
popa
pusha
push
xchg
and
lcall
sbb
ret
aam
or
inc
dec
pop
sarl
dec
ss
and
xor
inc
shll
push
push
add
mov
decl
shlb
popf
outsl
jg
ss
je
fcmovne
js
pushf
out
fsts
clc
add
jg
fsubrs
and
or
pavgb
stos
push
adc
jp
sub
and
sti
push
test
push
sub
orl
std
mov
jbe
adc
fisubs
pop
in
push
sbb
push
hlt
subb
and
popf
xor
mov
jns
jle
daa
test
add
pop
jnp
addl
loop
cmp
add
add
movsb
sti
stc
fbstp
push
movsl
fwait
in
and
gs
out
push
jge
loope
mov
push
ret
pop
sahf
mov
out
add
push
popa
daa
repz
jns
enter
das
and
pusha
push
push
shl
cwtl
jb
cmpsl
bound
xchg
call
fdivrs
es
jo
and
cmpsb
sub
inc
sub
lret
leave
xor
inc
mov
sbb
cltd
cld
out
fdivr
fwait
jb
popa
or
xchg
sub
push
sti
add
dec
and
ja
or
mov
sbb
inc
in
movsb
xlat
std
shlb
lret
stc
adcl
scas
or
dec
jbe
pop
mov
ds
adc
fnsave
jo
mov
xor
test
and
cli
es
aad
xchg
mov
fisubl
mov
add
mov
imul
shrb
push
je
cmc
mov
sbb
lock
push
mov
test
mov
fidivrs
push
and
xor
pop
push
stos
jg
js
push
fwait
xchg
jmp
ret
mov
mov
or
cmp
loope
stc
lock
ljmp
mov
xchg
cmp
or
fldln2
fsubl
and
fnsave
pop
cmp
pushf
cmp
iret
in
out
stos
aam
ss
mov
adc
mov
cmp
test
pop
leave
loop
lock
dec
sarb
xchg
shl
sub
or
mov
orb
daa
cmpsl
orl
adc
addl
mov
cltd
fmulp
inc
pop
pop
and
mov
sub
xor
or
and
adc
adc
gs
test
or
lret
cld
dec
mov
dec
inc
dec
insl
inc
cmpsb
rcrb
mov
fisubs
jmp
mov
fsubl
fstps
je
inc
in
leave
xchg
cld
jo
idivl
mov
ljmp
jno
jle
ljmp
sub
cmp
je
out
pop
sub
fnstsw
dec
movsl
lea
xor
repz
outsl
add
add
add
xchg
add
or
and
jo
popa
mov
aad
sarb
lds
jecxz
popa
cs
dec
sbbb
rcrl
mov
out
mov
cmp
mov
repnz
xchg
jp
lea
mov
sbb
rclb
adc
adc
cld
lcall
mov
jle
add
hlt
push
int3
test
arpl
and
push
cmp
inc
sets
xchg
into
jp
dec
call
jno
loope
pop
add
int
mov
push
icebp
movsb
xrelease
outsb
aam
pusha
imul
cltd
lahf
jne
scas
push
dec
bound
jns
jbe
mov
and
xor
imul
xchg
test
scas
pop
pop
andb
jl
test
addr16
leave
xor
loop
js
addr16
push
hlt
sub
xor
or
daa
enter
sub
sub
test
adc
mov
pop
mov
jge
or
mov
ja
sub
fisttps
enter
lcall
pushf
rol
inc
scas
clc
mov
push
cmp
push
in
in
sbb
mov
mov
ljmp
aaa
lods
mov
push
cmp
aaa
std
scas
mov
cmp
xchg
pop
fwait
dec
mov
sbb
push
int
ds
lods
movsb
enter
addl
push
test
or
aad
int
lret
aad
inc
lret
dec
cltd
cmp
fs
xlat
adc
jl
nop
sbb
sub
cld
arpl
hlt
scas
xchg
fs
and
mov
gs
popf
lds
sbb
das
xor
or
cs
push
lock
loope
mov
pop
push
add
and
mov
or
push
std
lds
xchg
and
out
jmp
sbb
adc
mov
test
lahf
xchg
jns
outsb
inc
je
xchg
push
rol
ficoml
dec
sub
xor
mov
aam
xchg
xchg
push
dec
xchg
mull
and
or
repnz
jmp
mov
sbb
add
xchg
adc
mov
fimull
imul
jl
imul
clc
in
sbb
ljmp
adc
jecxz
cmp
xchg
scas
cld
or
arpl
cmc
jne
mov
xchg
int3
dec
lods
or
cmp
pusha
mov
lods
and
aas
mov
repz
test
mov
addr16
pop
shrb
insb
push
inc
stc
jbe
je
sarl
daa
jg
fsub
cmpsb
inc
addr16
cmpsb
pop
jg
xor
fs
loope
sub
push
sbbb
fldcw
pop
xor
mov
pop
sub
movsl
in
dec
orl
call
clc
fsubrs
nop
repz
inc
iret
mov
shrl
insl
hlt
iret
sub
push
dec
pop
mov
loope
pop
jmp
stc
int
arpl
jb
out
dec
pop
and
mov
movsl
std
pop
sbb
sbb
fisubs
sbbb
fidivrl
mov
mov
iret
cld
fmull
out
xorl
nop
and
pop
xor
push
fucom
push
add
repnz
mov
fwait
in
jb
add
cwtl
int3
dec
adc
or
inc
pop
shl
lods
out
sub
inc
lds
xor
arpl
xor
aad
test
sub
inc
sub
xchg
cmp
inc
addr16
lret
hlt
mov
cmp
xchg
jae
mov
bound
sub
test
cltd
jle
dec
sti
ret
xchg
xor
jge
and
mov
mov
jmp
dec
jbe
mov
fstpt
addb
rcrb
insb
cmp
test
mov
out
and
es
lods
or
stos
in
ss
sti
or
jb
movsl
in
adc
inc
push
lods
test
aam
out
mov
popl
add
dec
sbb
jns
jmp
mov
add
fwait
test
xchg
popf
outsl
in
sbb
dec
and
sbb
jge
into
jae
and
mov
mov
out
in
es
adc
inc
mov
pop
push
jb
dec
xor
mov
add
pop
mov
cmp
pop
push
sub
push
pop
pop
ret
xchg
cmp
in
sahf
mov
iret
and
cli
popa
cmpsb
sbb
mov
push
push
xchg
sti
and
pop
mov
mov
dec
aaa
inc
mov
cltd
gs
repz
je
adc
mov
adc
mov
cwtl
out
lahf
xor
lock
xchg
mov
clc
mov
popf
adc
popa
sub
ret
in
jecxz
xor
pusha
mov
push
pop
xchg
mov
insl
scas
inc
or
lea
or
jne
sbb
inc
push
adc
mov
xor
push
test
movl
nop
and
pop
outsb
cmp
xor
ds
gs
push
loope
pop
mov
mov
inc
mov
mov
out
aad
pop
dec
push
test
or
fsubs
icebp
jne
in
cmp
lret
or
sti
pop
stos
or
mov
mov
inc
fstpl
lods
sti
call
mov
pop
push
mov
xor
xchg
dec
mov
add
dec
pop
xor
movsl
imul
mov
jo
cltd
lods
mov
test
gs
cs
adc
mov
push
pop
add
pop
mov
and
pop
inc
bound
fmuls
lcall
shr
lea
test
jne
pop
popf
dec
sbb
cmp
and
aam
mov
fisubrs
enter
mov
jbe
enter
xchg
jno
jle
fwait
and
lret
outsl
adc
fiaddl
push
xlat
les
jb
dec
pusha
jbe
xchg
cli
add
jb
sti
xor
ficompl
shr
push
sub
sub
jno
xchg
add
ficoml
setne
push
call
push
arpl
jg
pop
mov
inc
jp
jbe
and
jecxz
imul
daa
pop
adc
aaa
rorl
fists
jmp
daa
jns
mov
push
aad
push
cmp
jecxz
mov
xchg
stos
mov
sbb
push
in
mov
push
inc
mov
sbb
outsl
add
fistl
mov
cmpsl
daa
sbb
pop
idivb
mov
inc
cmp
dec
adcl
sti
test
test
imul
ret
mov
js
rcrl
scas
xor
aam
sub
shll
inc
dec
das
ss
push
mov
mov
push
fs
xor
cmp
iret
in
ljmp
mov
dec
in
mov
mov
pop
cmpsb
insl
jnp
pop
adc
gs
add
push
mov
iret
mov
nop
in
xlat
and
das
xchg
push
enter
sbb
mov
test
sti
jae
add
loopne
sub
cltd
mov
aaa
cwtl
inc
and
cwtl
pop
lret
mov
in
adc
in
pop
mov
pop
popf
in
lea
lret
sub
in
sbb
mov
sbb
push
pop
lock
ljmp
add
arpl
pushf
imul
movsl
cli
rcll
jl
test
cmp
xor
and
imul
xorl
pop
lods
mov
pop
and
inc
jmp
rorl
insl
xchg
sti
in
outsb
mov
add
icebp
cli
lds
dec
xor
pop
leave
jg
mov
add
or
jno
sub
subl
xlat
sbb
fldt
pusha
test
lods
mov
jne
mov
lods
test
pop
push
xchg
or
and
stos
cmp
pop
ficoms
cmp
mov
mov
dec
fistpl
stos
sbb
cmp
push
adcb
loopne
add
test
or
mov
xorb
inc
lcall
add
push
pop
dec
mov
dec
adc
jge
xor
mov
cmp
sbb
cwtl
test
dec
out
and
daa
push
inc
mov
sbb
pop
adc
cmp
add
add
xchg
fdivl
and
pop
dec
jo
cwtl
loopne
dec
stc
test
out
adc
in
or
pop
lds
mov
outsl
mov
lods
mov
adc
fldl
pop
or
push
sti
ror
dec
test
stos
dec
mov
cmp
in
pop
inc
push
mulb
out
shr
faddp
in
lret
in
fs
bound
sub
jmp
sbb
xchg
imul
rcr
sbb
test
sub
out
loop
jbe
sub
test
mov
ss
andb
push
mov
sub
pop
insb
testb
lret
push
addb
into
ficompl
fimull
repz
inc
inc
btr
test
add
fistl
pusha
arpl
dec
iret
scas
aad
sbb
add
loop
lds
pop
aaa
cmpsl
xchg
rclb
out
push
mov
jg
movsb
mov
push
clc
add
loopne
add
sbb
xchg
shrw
mov
outsb
sub
out
push
mov
push
and
mov
push
jmp
or
adc
adc
xlat
aad
dec
pop
xchg
or
jns
mov
leave
mov
bnd
push
sub
push
gs
jns
outsb
mov
jb
push
lds
xor
out
mov
pop
jne
pop
fcoml
mov
mov
and
pop
jle
sti
or
push
push
data16
jb
mov
dec
jae
outsb
test
daa
push
test
mov
push
push
mov
inc
in
jb
in
int
movsb
lea
outsb
hlt
rcrb
cmp
xor
adc
push
adc
jo
pop
gs
xchg
jge
es
push
jl
inc
add
outsb
or
mov
ret
andb
das
inc
std
cld
jle
stc
or
adc
pushf
xchg
adc
push
inc
scas
dec
ds
test
ljmp
insb
push
in
xchg
inc
sbb
test
mov
and
mov
ds
dec
int3
pop
les
push
pop
and
cld
mov
sub
mov
ret
jno
cmp
imul
out
xlat
adc
fs
lcall
lcall
push
jmp
ret
mov
aas
jl
mov
mov
xchg
and
out
pop
adcb
adc
mov
or
push
dec
adc
ds
stos
dec
addr16
lret
sub
pusha
mov
inc
fdivrp
mov
adc
xor
xchg
add
fcomps
mov
in
lcall
in
push
lock
jbe
repnz
jl
call
pop
pop
mov
mov
and
pop
cmp
outsb
outsb
mov
push
xchg
jns
sub
mov
stos
es
or
insb
and
jb
je
sbb
iret
add
ja
insb
clc
cs
fs
stos
daa
inc
outsl
loop
push
imul
xchg
lcall
sti
hlt
dec
and
insl
mov
mov
xor
mov
sahf
faddl
out
adc
test
mov
and
test
js
push
lods
notl
push
mov
std
jg
sub
mov
mov
ja
data16
pmulhuw
mov
unpckhps
jecxz
shl
sahf
das
push
xor
inc
xchg
sbb
add
lcall
inc
jnp
jecxz
sbb
jns
or
mov
js
add
jb
or
xor
dec
cli
xlat
xor
loop
push
nop
lret
in
xchg
mov
outsb
ja
jge
mov
aam
shll
and
ljmp
fisubl
adc
sub
pop
jo
inc
cs
pop
add
xor
je
mov
into
xor
outsl
jecxz
sbb
insb
test
sub
pushf
popf
lret
xor
or
ljmp
imull
jnp
mov
shrb
cld
jbe
ja
loop
ret
aaa
nop
cmpsb
mov
in
cmp
psrlq
dec
int
mov
loope
mov
dec
inc
xchg
mov
lock
cmpl
arpl
mov
pop
push
adc
dec
loope
and
mov
lea
imul
rcpps
aaa
mov
xchg
sub
inc
adc
inc
cmp
push
icebp
and
movsl
pop
pop
mov
cwtl
xchg
xor
cli
cltd
inc
push
shlb
lcall
dec
leave
lods
fstpt
mov
adc
cmc
aad
xchg
and
je
js
dec
test
dec
xor
push
jb
pop
leave
movsl
jo
cmp
imul
loopne
out
jae
adc
push
fisubl
je
out
repz
andl
mov
sub
std
je
adc
out
xchg
cmp
movl
out
cmpsb
imul
jo
ljmp
push
scas
inc
adc
js
adc
mov
sbb
xlat
fsts
adc
sbb
test
or
loopne
push
push
lret
jl
push
in
fmull
push
sbb
orb
mov
adc
pusha
cli
pmaddwd
inc
loop
sbb
xchg
mov
add
jecxz
push
xor
repz
cmp
push
lods
jo
dec
movsb
rorl
fmull
and
clc
fisttps
jb
xchg
int
test
push
and
dec
outsl
push
adc
or
icebp
or
xor
and
out
sti
out
adc
sbb
ljmp
lods
or
jne
push
js
stc
mov
or
fsts
jp
xor
sub
mov
call
test
sbb
push
adc
pop
enter
cmp
das
dec
shl
jmp
push
cmpsl
ret
add
cmpsl
mov
push
mov
sbbb
repz
pop
pop
xor
xchg
pushf
push
pop
stc
leave
xchg
xchg
push
adc
inc
jge
xor
test
push
rclb
xor
sub
in
les
es
mov
xor
cmc
fldcw
or
repnz
lds
shrl
jp
xor
sub
and
adc
xor
stc
adc
jno
mov
sti
ds
fisttps
fs
rcll
ret
imul
adc
rclb
cltd
daa
lcall
roll
daa
stc
mov
push
popf
lods
dec
sub
dec
pushf
sub
in
cwtl
jecxz
add
pop
push
dec
pop
popf
sbb
int
dec
movsl
mov
out
cmp
xor
sub
sbb
adc
cs
sarb
jo
xchg
jo,pt
or
mov
ret
jl
jl
mov
fwait
mov
mull
xor
jecxz
cmp
mov
adc
pop
push
insb
push
data16
mov
adc
push
xor
xchg
jp
int
inc
pop
mov
mov
outsl
and
je
push
inc
adc
xor
jl
mov
mov
jb
addb
cmpsl
adc
jp
lock
mov
ficompl
daa
adc
mov
sbb
icebp
pop
sti
mov
insl
xchg
outsb
lret
mov
jl
cli
cmp
into
in
shlb
andl
add
pop
int3
or
inc
faddp
dec
dec
aaa
aaa
pop
and
push
out
movsl
int3
sub
cld
inc
mov
pop
out
icebp
jecxz
push
inc
popa
loopne
xchg
mov
xor
bnd
out
movsl
jmp
mov
test
sub
cmp
ds
inc
lret
or
dec
and
jne
push
mov
xchg
jg
lcall
popf
mov
add
mov
xor
outsb
out
aad
xor
jb
lds
add
sub
cltd
sbb
outsb
mov
cmpsl
insb
fldenv
cmp
jecxz
inc
cmp
fs
scas
mov
and
xchg
jnp
and
outsb
imul
fidivl
sub
shl
addr16
out
sbb
xchg
outsl
imul
push
push
and
je
sub
inc
jecxz
sbb
pusha
pop
adc
pop
insl
repnz
pop
or
icebp
jmp
adc
mov
cltd
stc
je
sub
xor
dec
push
cmp
pushf
xchg
andl
inc
xchg
mov
sub
pop
xor
mov
sbb
popf
jecxz
dec
push
mov
and
mov
cmp
imull
sub
xchg
mov
lds
mov
add
jecxz
lods
jmp
rclb
nop
shlb
add
jl
ljmp
test
sbb
into
jb
jg
mov
lock
stos
subb
mov
insb
jl
pop
ljmp
mov
pushf
cmp
loope
filds
adc
pusha
sbbb
stc
aas
add
scas
adc
xchg
mov
rcl
xor
inc
inc
jo
sti
jno
pushf
xor
loop
adcb
xchg
ja
add
xchg
out
sbb
lods
fnstsw
je
fiaddl
xor
inc
push
scas
sub
fidivrs
sbb
push
roll
nop
into
jp
mov
pop
mov
push
or
jmp
inc
jp
outsl
push
pusha
pop
sub
xlat
mov
insb
xchg
pop
cld
jecxz
and
std
clc
mov
add
aas
insb
add
test
pop
mov
filds
pop
and
jns
inc
shr
push
pop
fiadds
xor
and
push
lret
or
das
mov
test
xchg
icebp
pop
scas
xor
xchg
icebp
jns
mov
scas
fisubl
loopne,pt
dec
nop
cmp
in
pop
mov
xor
xor
fdivrp
mov
jecxz
int
jo
mov
cmp
jno
jecxz
cmp
test
jno
jno
jne
mov
mov
pop
out
inc
pop
sbb
push
mov
arpl
jge
sbb
and
xchg
cmc
int
nop
push
in
xchg
pop
xor
pop
sbb
jae
inc
inc
mov
rcll
and
imul
or
inc
sbb
and
pop
jecxz
dec
add
data16
and
ret
imul
inc
scas
test
stc
jns
inc
xchg
xchg
in
dec
and
mov
and
leave
mov
out
subb
imul
cli
lret
stos
iret
jne
and
ds
mov
mov
mov
mov
dec
int3
adc
lret
pop
jae
mov
fsts
sub
mov
leave
into
push
test
and
inc
fs
add
xchg
xorb
roll
xchg
movsb
fisttpll
adc
fistps
mov
xchg
jmp
jns
or
adc
je
inc
add
or
inc
adc
std
fistpll
xchg
pop
mov
mull
mov
lea
jge
jg
add
jecxz
mov
jno
nop
xchg
sbb
negl
adc
shl
jbe
cli
loopne
push
test
mov
ljmp
insl
dec
fwait
test
int
or
int3
mov
inc
jb
and
and
push
stos
mov
mov
xor
popa
fsubs
jb
add
adc
out
pop
test
lea
mov
subl
insl
cli
and
fisttpl
jecxz
in
insb
pop
test
mov
push
mov
ss
mov
scas
pop
aam
hlt
ds
push
mov
int
pusha
dec
xor
fidivl
ret
inc
add
and
push
jle
mov
insb
insl
adc
jp
jge
mov
repnz
adc
mov
outsl
cmc
sbb
loopne
mov
xchg
or
sarb
or
jbe
sub
push
adc
test
outsb
pop
gs
inc
sub
aaa
je
mov
mov
mov
push
mov
shl
pusha
add
shl
inc
cli
pushf
stc
xchg
mov
pop
jne
sub
pop
pop
out
adc
mov
inc
xchg
cmp
aas
push
sbb
lret
xchg
add
add
inc
xorb
or
sbb
jp
push
push
adc
or
mov
push
movsb
dec
stos
xchg
or
pop
lock
test
mov
shl
xchg
sub
cltd
negl
dec
xchg
mov
sbb
mov
or
scas
xchg
in
mov
rorl
mov
loopne
dec
test
jg
mov
xchg
jge
daa
or
data16
mov
mov
pop
ss
insl
pop
mov
enter
mov
loop
arpl
pop
sbb
aaa
jns
jp
sbb
push
imul
mov
cwtl
push
orl
lret
out
sub
mov
jo
icebp
xchg
pop
fidivrs
dec
js
sub
jg
pop
or
dec
mov
xor
or
lds
int3
pop
mov
test
mov
push
lds
cmc
jae
add
xor
cmp
lret
outsl
xor
pusha
xchg
add
pop
aad
mov
jns
sub
mov
xchg
xchg
aas
mov
pop
in
rcr
ja
mov
ret
mov
scas
lret
std
sbb
pop
jae
js
add
or
push
imul
ficoml
pop
hlt
mov
cltd
test
aad
sbb
and
xor
or
popl
rcrl
inc
call
dec
ds
mov
dec
jecxz
imul
jbe
mov
lcall
outsl
cld
icebp
xor
cmp
scas
dec
aad
or
push
jo
adc
dec
and
mov
jmp
mov
iret
pxor
cltd
adc
lret
in
inc
xchg
ficomps
cld
pushf
hlt
cmpl
push
repz
pop
lahf
xchg
test
rcrb
mov
xchg
ljmp
jmp
jle
sbb
push
ja
fiadds
stos
fwait
mov
sbb
jnp
hlt
subb
aaa
imul
stc
sbb
scas
je
insb
lock
dec
icebp
inc
or
add
mov
adc
sbb
aas
xchg
dec
adc
in
int3
rorb
adc
adc
lods
adcb
jno
pop
in
movsl
mov
mov
rcrl
div
inc
lods
jnp
xchg
insb
mov
inc
das
in
cmp
cmpsb
sbb
inc
push
or
mov
pop
sbbl
and
dec
stos
cltd
nop
mov
lods
popf
push
jg
add
test
lods
in
and
add
ljmp
je
adc
mov
lcall
push
inc
pop
fiadds
mov
cmp
push
imul
add
out
mov
mov
and
sarb
test
into
mov
push
test
adc
jp
cmp
jge
outsl
mov
xorb
incb
addl
lds
xor
movsl
push
bound
mov
pmaxsw
mov
into
fadds
dec
xor
xchg
sub
lret
into
repz
push
stos
xchg
mov
clc
stc
cmp
outsb
add
sbb
sbb
out
sbb
std
pop
or
cld
pop
jmp
jnp
cld
or
test
mov
push
insb
and
outsl
aad
xchg
addb
mov
push
jne
pop
push
inc
lods
jne
hlt
nop
loope
push
ret
pushf
cmpb
nopl
addl
hlt
and
ljmp
and
xchg
int
mov
mov
fstps
loop
sub
pop
not
pop
dec
bnd
dec
ja
jle
fs
das
es
fisubrs
fwait
add
mov
xchg
xchg
enter
jge
jo
lret
pop
pminsw
insl
aaa
cmpsb
pop
push
pop
in
mov
jl
adc
mov
movsl
gs
or
out
sarl
shll
fwait
iret
stos
xor
xlat
adc
ja
jno
xchg
or
pop
cmp
nop
or
inc
mov
add
sbb
sub
mov
lods
mov
lret
lret
arpl
push
push
cld
add
das
jo
inc
mov
jp
mov
cmp
jae
push
ja
add
mov
and
xor
jno
sub
inc
mov
fwait
mov
insl
jbe
dec
out
cmpsl
pushf
xor
inc
xor
push
out
mov
cli
pop
pop
xlat
jmp
shrb
popf
subl
aaa
sbb
lcall
push
sbb
push
or
mov
dec
adc
xchg
jne
add
xor
gs
push
imul
pop
sbb
mov
ror
add
sub
aaa
pop
imul
and
cwtl
jno
lret
xlat
push
cmpsb
pop
jecxz
pusha
cmp
outsl
std
push
lret
popf
sub
andl
or
mov
adc
bnd
in
aas
xor
ret
inc
cmp
sub
fdivrl
cld
fidivl
mov
mov
enter
and
xchg
call
pop
ja
jecxz
ss
loopne
sti
push
stc
push
daa
xchg
insl
mov
and
mov
lcall
ret
movsb
sarb
mov
test
lcall
js
lret
xchg
xchg
pop
or
jecxz
push
ret
pand
inc
cvttps2pi
sbb
shrl
push
sub
aam
mov
push
jge
lahf
or
or
sti
and
das
test
out
out
cmpsl
mov
sarb
xchg
mov
dec
in
xchg
inc
ja
dec
in
lcall
adc
fistl
mov
cmp
cmpsb
std
lret
inc
push
or
push
push
dec
addr16
push
pushf
aad
addl
dec
adc
and
xchg
push
cltd
mov
cmc
into
ss
out
aaa
xchg
dec
mov
fdivrs
pop
fistpl
xor
mov
cwtl
xchg
negl
fstps
scas
jo
outsl
sbb
add
xor
xchg
add
xor
pop
out
fs
mov
loop
push
push
xchg
call
arpl
test
test
mov
into
leave
cmpsb
hlt
iret
and
mov
mov
rcl
sbb
shl
inc
sbb
gs
or
nop
or
inc
and
in
mov
flds
xchg
add
add
push
cmp
dec
sub
xchg
loop
jle
lea
sti
test
out
xchg
sbb
add
int
push
push
aas
and
pop
xchg
cmp
cli
es
sbb
std
xchg
out
test
jbe
test
and
nop
cmp
inc
fistl
mov
sbb
ret
xchg
sub
scas
adc
rol
test
inc
sahf
sub
call
aaa
cmp
or
mov
mov
mov
clc
mov
sbb
rcrl
ror
pop
cmp
inc
out
ds
jbe
sbb
call
xlat
fmulp
clc
aaa
xchg
testb
ss
in
sub
test
add
out
add
cwtl
inc
imul
lds
mov
xor
stos
dec
sub
insl
cld
mov
lret
jmp
cli
insl
add
xchg
rcr
int3
pop
mov
test
jnp
pop
loopne,pt
loope
movsl
mov
stos
outsl
aad
mov
inc
adc
jle
cmp
cmpsl
mov
aas
jnp
insl
jae
jmp
cltd
aaa
pop
and
adc
xlat
into
and
imul
outsl
ficomps
cmp
jecxz
popf
stos
stos
subl
or
movb
popf
outsl
pop
rclb
lahf
pop
std
test
movsl
sub
pop
mov
outsl
cwtl
sti
mov
and
push
sbb
jle
ss
xor
inc
push
adc
jmp
cmp
rolb
inc
jmp
or
mov
aam
sbb
dec
aam
pop
fldenv
loop
pop
pusha
stos
ja
pop
lret
orb
stos
out
mov
push
out
out
add
push
jbe
cli
shlb
cmp
or
movsb
adc
jge
jl
into
jb
mov
add
push
push
cmp
fcomip
push
sub
lods
movb
out
cmp
push
imul
mov
clc
jns
aas
in
cmc
pop
pop
gs
cs
nop
dec
fnstsw
pop
outsl
jmp
call
jae
fbstp
into
adcl
jmp
or
and
into
js
jmp
insb
fwait
push
and
xchg
adc
or
jb
pop
mov
les
sbb
stc
stos
pop
ror
repnz
jp
inc
inc
js
ds
xor
xor
pop
adc
cli
lcall
and
insb
orl
insb
sub
lcall
iret
mov
mov
sbb
rorb
mov
mov
or
shl
fisttpl
pop
out
mov
jb
movsl
inc
jmp
sub
iret
shrb
cmc
ror
sub
jno
xchg
rcll
xchg
fdiv
mov
jnp
addr16
cs
popa
int3
shll
dec
sbb
nop
out
push
dec
int3
imul
stc
xchg
lret
and
popa
mov
jae
popf
mov
dec
fistpll
mov
mov
dec
repnz
mov
cltd
cld
arpl
notb
lret
push
test
pop
push
das
cld
mov
mov
add
pop
fidivrs
das
ljmp
ret
fcomi
repz
cmpsl
fcomi
loop
cmp
test
mov
ret
shll
pop
insb
and
repz
cwtl
das
or
loop
mov
sbb
dec
arpl
enter
inc
in
jl
out
jae
xor
jbe
jne
mov
jge
add
cmp
lcall
mov
test
mov
mov
ficoms
dec
lods
inc
mov
push
inc
dec
mov
in
imulb
pop
cmpsl
add
sbb
test
cs
stos
or
cmp
mov
fistps
in
push
jno
das
cmc
xor
or
ds
mov
cli
xchg
inc
mov
push
jl
inc
dec
movsb
aaa
cmp
mov
jbe
scas
insl
into
mov
fldenv
xchg
cmc
mov
clc
push
adc
jl
cmp
pop
out
addr16
cmp
lods
jb
idivl
sti
sub
xchg
lods
mov
jecxz
leave
arpl
testb
mov
xor
icebp
lods
mov
push
dec
das
mov
fwait
test
out
das
pop
lock
xchg
add
jle
sbb
jb
push
outsb
lea
int3
xor
lahf
stos
dec
pop
insl
push
dec
out
or
test
or
mov
aas
scas
or
sbb
out
mov
lret
push
jno
cwtl
xor
push
and
and
loop
cmp
flds
ja
xor
jp
pop
pusha
pop
pop
jae
lods
cltd
xchg
pop
jge
loop
mov
add
in
dec
jo
cli
fimull
pop
pop
add
xlat
sub
mov
xlat
jns
sbb
test
bound
dec
and
orb
cmp
pop
imul
outsb
xchg
pop
iret
loope
sub
stos
jecxz
out
mov
sbb
mov
jb
jp
mov
out
mov
pop
push
jge
stos
add
inc
inc
adc
xor
leave
fisubrs
sbb
mov
and
or
sbbl
ss
xchg
push
les
xchg
dec
int3
push
js
inc
or
push
mov
je
fstpl
arpl
push
add
mov
add
orl
das
rcrl
es
adc
out
dec
shl
and
roll
and
test
aad
call
lds
dec
xchg
cltd
dec
fnstsw
int3
rclb
xchg
dec
gs
jle
ds
mov
pop
ss
lcall
fwait
xor
or
jb
xlat
dec
fistpl
mov
data16
fcoml
pmullw
pop
xchg
mov
stc
arpl
in
push
pushf
sub
lea
inc
push
cwtl
add
pmullw
jle
mov
mov
cmpsb
xchg
negb
loop
inc
jo
sub
popa
dec
or
mov
ja
dec
outsb
mov
push
test
sarb
jae
push
in
test
pop
iret
fistpl
mov
jne
pusha
and
xchg
adc
sahf
nop
sub
stc
outsl
outsb
loope
sbb
in
mov
add
clc
int3
and
pop
or
mov
cmc
movsl
xor
pop
adc
and
add
add
test
repnz
cmc
fldenv
lret
sub
or
dec
js
add
lods
rcrb
aas
pop
jo
outsl
cli
icebp
add
stos
mov
lock
in
iret
mov
sahf
test
jl
imul
mov
push
dec
push
iret
out
cmp
outsb
roll
mov
ljmp
ds
adc
and
ja
out
lret
lods
mov
mov
or
dec
out
iret
jnp
or
add
orb
jno
std
or
mov
dec
inc
clc
mov
int3
sub
fstps
adc
shll
or
xchg
daa
rcrl
stc
ja
data16
popf
mov
outsb
fistpll
sub
push
lahf
lcall
mov
mov
cwtl
lods
daa
divl
loope
aam
sub
cmpsl
stc
subl
movsl
pop
mov
jne
test
sbb
pop
inc
fistps
jl
fcoms
sub
adc
test
test
nop
dec
jns,pn
dec
push
ret
loopne
aad
cli
jge
xchg
mov
popl
jmp
iret
decb
xchg
cmp
ficomps
xchg
pop
int
adc
es
dec
xor
sub
jmp
mov
cmpb
push
aaa
icebp
insl
pop
and
pusha
xchg
data16
mov
movsb
out
push
or
jno
divb
shlb
leave
arpl
mov
out
inc
xchg
sbb
pop
cmp
leave
cli
lret
scas
xor
xor
jp
scas
and
jb
pop
jb
and
sarb
and
das
lahf
add
test
pop
inc
leave
je
inc
mov
fs
jmp
sub
sbb
lods
mov
cmp
and
adc
mov
fidivrl
cmp
xor
fisubl
cmp
insl
dec
lret
lret
lahf
int
mov
mov
cmp
inc
scas
mov
in
jmp
loope
mov
jp
and
xor
fiaddl
insl
jno
xchg
jbe
mov
push
popa
cmp
fldln2
loopne
jl
leave
sbb
adc
dec
cmp
fcoms
call
ror
xchg
mov
fmuls
ret
test
clc
cs
aad
mov
fdivrl
cmpsb
sub
std
pop
mov
test
jne
xchg
mov
pop
jg
das
leave
mov
ret
lea
lret
leave
fistps
out
jge
dec
cwtl
mov
jmp
inc
popf
push
addl
or
cmp
inc
sub
cmc
jno
sub
pop
out
mov
dec
add
clc
adc
cli
xlat
cmpsl
mov
sbb
es
dec
in
lods
mov
mov
cmpsl
dec
jmp
cmpsb
adc
dec
sub
sub
jo
mov
scas
mov
js
loope
into
std
inc
stc
push
xor
lcall
je
cmpsl
sub
xchg
int
repnz
aam
insl
enter
sarl
pop
push
sub
fsubs
pop
pushf
cmp
bnd
addr16
lea
cmp
xchg
cld
dec
jbe
adc
push
mov
test
sahf
movsl
pop
dec
cmc
jnp
in
xchg
xor
fs
enter
xchg
sub
frstor
sub
mov
loope
sarb
or
push
mov
pop
xchg
cld
movsb
xor
aad
sti
and
jp
leave
icebp
mov
xorb
lret
pop
pop
daa
call
mov
push
adc
pop
lret
inc
frstor
scas
ljmp
jge
mulb
clc
hlt
adcl
adc
ljmp
hlt
add
sub
xchg
and
outsb
xor
fisttpl
mov
jg
lcall
push
cmp
addr16
push
and
push
popf
icebp
pusha
xor
loope
push
xorl
out
rclb
and
sub
xor
dec
jno
sub
xchg
out
cs
or
xchg
jne
orl
inc
push
in
call
subb
sbb
mov
mov
add
clc
js
or
dec
cld
fcompl
fdivl
ljmp
std
fsubr
xor
icebp
shlb
push
test
mov
fiaddl
popf
pushf
dec
into
mov
iret
sub
mov
iret
stos
clc
or
push
mov
cltd
call
jne
push
enter
pop
jmp
dec
into
mov
push
repz
or
mov
adc
push
lcall
jnp
test
stos
sub
das
addr16
dec
mov
sbb
sub
or
ss
stc
xor
adc
xor
mov
and
cli
fcom
fcoml
cli
mov
sbb
cmp
add
icebp
cltd
push
movsl
xorl
inc
lds
orb
or
scas
or
into
notl
add
mov
sub
in
repz
sti
push
add
fdivl
push
bound
ss
int3
call
sbb
cltd
sub
lock
aaa
xchg
and
sarb
push
test
iret
mov
in
adc
pop
sbb
lahf
outsl
js
add
cmp
sub
outsl
iret
pushf
cwtl
lea
les
inc
xchg
jmp
adc
add
rorb
xor
inc
fcmovbe
push
sub
loope
test
gs
and
hlt
inc
stos
push
cmp
xchg
cli
jo
int
das
cmp
dec
and
mov
push
push
or
mov
push
aaa
jo
and
jge
jo
icebp
lea
out
fisttpll
in
mov
add
cmp
sbbb
mov
ret
jne
ret
pop
test
sub
test
lcall
mov
mov
stc
cs
mov
test
lahf
pop
xchg
cmp
push
add
and
mov
loop
push
je
sarb
mov
insb
push
jmp
xchg
mov
out
cmp
xchg
inc
pushf
test
dec
lock
test
xor
push
sbb
pop
sub
cmp
mov
int3
xchg
imul
ljmp
inc
jns
divb
sbb
push
inc
push
rol
loope
inc
and
inc
enter
test
or
pusha
mov
jb
inc
lds
jle
or
daa
xchg
es
inc
test
in
adc
push
sar
xchg
pop
mov
xchg
xor
inc
clc
int
arpl
lahf
xlat
in
jo
in
inc
xor
xor
xorb
xorl
xchg
fisubrs
movsb
aaa
push
pushf
xchg
xchg
cs
adc
cmp
pop
ss
mov
mov
xlat
es
loop
outsb
sbb
rorb
stos
fcmovu
cmp
xchg
ret
pop
jno
mov
or
es
jp
pop
jp
mov
and
sub
adc
ffreep
xchg
enter
or
or
dec
push
sbb
lea
iret
sbb
mov
pop
test
add
sti
dec
ficoml
and
mov
cmpsl
cmp
add
sub
insl
sub
xor
sbb
popa
stos
xchg
jmp
stos
adc
lods
add
test
and
pop
jnp
cmpsb
adc
mov
fsubrs
cmp
test
pusha
jge
dec
cmpsl
push
cmp
xchg
sahf
adc
out
movsl
pusha
jle
addr16
push
adc
dec
jl
dec
fucomip
jb
sub
push
nop
int3
inc
mov
xor
mov
xor
in
cmp
cwtl
sahf
push
movl
push
fnstenv
vpandn
push
or
out
jmp
cmpsb
fdivl
fstpt
enter
jge
add
sub
cmp
cltd
clc
push
cmpsl
pop
xlat
lret
xchg
shl
add
test
stos
xchg
add
rcr
push
hlt
mov
testb
decb
aam
popf
sub
and
pop
jo
cmp
loope
roll
test
push
test
popa
dec
sti
push
push
or
add
adc
icebp
xor
std
shlb
cmpsb
push
test
arpl
hlt
jmp
pop
jns
test
push
and
int3
and
push
sub
pop
outsl
push
aad
out
add
mov
mov
arpl
push
inc
test
and
mov
mov
dec
gs
sbb
and
adc
inc
mov
rorl
push
rcr
dec
lcall
cli
dec
adc
and
mov
loope
fcoml
sbb
es
ljmp
es
sbb
and
loope
mov
push
xchg
pop
mov
and
mov
push
mov
inc
test
inc
dec
mov
pop
ucomiss
adc
xchg
and
test
pop
popf
and
repz
mov
mov
add
pop
clc
pusha
outsb
fiadds
icebp
cltd
xchg
imul
mov
lea
in
pop
repz
and
push
inc
sub
xorl
add
rorb
sbb
mov
mov
sbb
push
adc
movsb
cmp
jle
lahf
repnz
hlt
in
xchg
lock
test
rcl
xor
cmp
cld
fsubp
add
es
sub
xchg
push
rcrb
fidivrl
cmp
mov
jae
jns
or
shrb
out
jo
rorl
sub
mov
repnz
push
xchg
ret
push
pop
hlt
imul
insb
xchg
gs
or
jecxz
or
in
shlb
inc
add
xlat
rcr
pop
dec
ja
lods
inc
cmp
cmpsb
fdivr
xchg
mov
inc
shrl
neg
lea
js
push
fldenv
cltd
mov
push
enter
repz
cltd
stos
ret
fists
imul
dec
jmp
pop
lods
fstl
icebp
mov
jmp
rolb
jb
ds
sbb
cmp
and
iret
adc
cmp
scas
fdivrl
loop
nop
cmp
or
aad
out
shr
xchg
pop
les
bound
dec
mov
sti
daa
cmpsl
ret
mov
shl
icebp
lock
bound
cmp
out
loope
mov
cld
frstor
negl
cmp
xchg
xor
loope
cmpsl
pop
inc
dec
mov
xor
popl
popf
pop
inc
pop
adc
and
jnp
cmp
insb
sbb
cmc
xchg
sbb
lock
cmpsl
cs
jmp
mov
cmp
pushf
ficompl
loopne
outsl
jle
scas
lods
jns
sub
or
lock
mov
lds
nopl
push
pop
jnp
jno
push
testb
mov
xor
and
jb
dec
sbb
pop
adc
jnp
in
stc
mov
clc
ljmp
lea
and
scas
daa
stos
test
push
mov
cmp
stos
sub
dec
test
xor
pop
xor
ja
cmpsb
mov
shrl
int3
pushf
or
mov
or
cmc
icebp
mov
ss
icebp
xchg
push
dec
inc
mov
cmp
push
loop
lods
icebp
pop
sbb
or
mov
cltd
jmp
data16
nop
pop
fs
shr
push
sahf
and
test
jnp
popf
popf
imul
sbb
shll
outsb
jl
jl
mov
test
popa
jmp
in
sub
ret
xor
xor
inc
xor
xchg
std
mov
fstps
ja
aaa
mov
mulb
stos
push
je
lods
sub
enter
int
movsl
aad
ret
pop
sti
mov
cmp
aam
lock
sbb
dec
enter
outsl
daa
add
ss
cwtl
jb
fiaddl
mov
lret
or
sbb
call
or
repnz
mov
jbe
cltd
fs
add
scas
pop
mov
inc
pop
rcrb
push
xchg
cmp
mov
xor
dec
lock
enter
push
sub
or
aaa
popf
adc
cmpsb
sbb
push
rolb
jle
jo
cmpsl
push
mov
sbb
insb
movsl
test
push
leave
push
repz
ds
adc
movsb
xchg
out
loope
outsb
test
inc
mov
pop
adc
add
mov
and
mov
mov
icebp
testb
inc
jbe
fs
pop
mov
outsl
jg
and
mov
adc
mov
repnz
add
mov
xchg
jle
enter
push
xchg
jns
fwait
cld
rcl
cmc
inc
psubq
sbb
xchg
xlat
ficoms
fcoms
push
jns
in
xchg
mov
jb
jg
sbb
xchg
pop
push
out
in
ja
das
out
fwait
pop
add
xchg
out
xor
movl
insb
nop
add
clc
imul
jns
or
jo
out
dec
dec
ds
lods
leave
jns
add
pop
push
inc
out
lds
cmc
mov
hlt
or
pop
add
jbe
pushw
cmc
insb
push
inc
mov
test
dec
icebp
bound
addr16
cmp
daa
int
repz
lea
std
or
fsts
leave
jne
jmp
sub
scas
das
adc
mov
lret
pop
repz
insl
xor
or
push
test
mov
jne
loope
clc
push
cli
mov
push
loope
sbbb
les
das
int3
xchg
bound
ficompl
cmp
and
push
insl
leave
aaa
sub
dec
mov
addr16
jns
or
jb
mov
ljmp
dec
je
lds
cwtl
aam
aad
sbb
loop
push
jmp
jb
mov
mov
jl
fstpl
dec
loopne
pop
ja
cmp
mov
int3
lret
mov
xchg
cmpb
mov
fstpl
push
sbb
mov
xchg
or
std
aam
xchg
ds
shrb
dec
das
subl
cmp
lahf
repnz
inc
aad
lea
inc
push
sbb
es
push
add
or
mov
cmovo
pusha
mov
jne
inc
cs
insl
lods
je
jl
popa
jmp
mov
and
xor
mov
data16
mov
or
adc
into
dec
jmp
pushf
jbe
mov
mov
cmp
pop
and
sbb
stc
sub
iret
in
push
and
xor
jg
push
shrl
popa
jge
add
imul
jecxz
inc
xorb
sub
mov
cmp
pop
ljmp
mov
mov
xlat
in
call
xlat
inc
pop
dec
jecxz
jbe
aaa
mov
gs
fwait
rclb
and
iret
notl
loopne
add
jne
jns
stos
and
mov
or
bound
gs
mov
or
in
insl
push
push
mov
cmp
lahf
clc
adc
sbb
aad
and
jle
push
cmp
stos
cmp
in
mov
mov
fwait
or
in
test
das
and
or
cmp
aad
push
xorb
dec
pop
or
cmpl
push
jnp
sbb
fimull
aaa
ljmp
pop
add
ljmp
inc
cmc
ret
jns
leave
nop
push
dec
out
push
test
imul
xor
popa
leave
hlt
out
push
sbb
mov
in
stc
pop
fcmovnb
and
pop
jno
cli
inc
and
and
sbbb
mov
push
jns
mov
mov
mov
lea
mov
test
pop
test
adc
jp
and
inc
test
stos
inc
inc
mov
lahf
or
push
enter
daa
repz
mov
or
jp
cld
lret
sbb
mov
leave
mov
test
lret
jmp
and
mov
lods
or
lods
push
mov
pop
jle
iret
fbstp
repnz
mov
arpl
add
adc
iret
fdivs
jmp
test
push
mov
adc
or
psrad
orl
mov
xchg
cmp
inc
push
fcompl
jge
orb
shr
loopne
and
ret
fwait
cwtl
xchg
cltd
testb
xor
and
lds
pusha
sbb
fistpll
mov
test
data16
ret
mov
pop
sbb
insl
sub
dec
jae
stc
mov
call
or
das
dec
sub
rep
pop
sti
inc
frstor
and
inc
inc
mov
xorb
add
jle
cmp
pop
es
das
xchg
imul
lock
shl
inc
les
pop
stos
sbb
xchg
sarb
mov
pop
fcompl
mov
je,pt
scas
xchg
jo
jp
lock
cmp
jnp
es
out
stos
test
stc
or
jmp
nop
outsl
daa
int
pop
adc
outsb
jno
shr
push
xor
jne
cltd
and
call
mov
mov
mov
je
xchg
push
imul
pop
pop
mov
movsl
xchg
dec
xchg
in
out
push
xor
repnz
lret
imul
and
mov
aaa
add
test
inc
pop
xchg
std
sbb
dec
sahf
jae
shl
jmp
dec
clc
pop
mov
jge
fdivrp
add
mov
pop
xor
subl
icebp
push
cmpsl
push
roll
sahf
mov
inc
push
fs
fsubs
jbe
xchg
bnd
ss
mov
lret
mov
out
lret
mov
cld
test
pop
out
scas
pop
mov
sub
ror
mov
clc
icebp
push
add
call
rorb
xorb
jp
sbbl
stc
xlat
pop
in
ss
scas
mov
movsl
mov
mov
lods
pop
xlat
sbb
fdivl
arpl
push
mov
fistpl
adc
outsl
sbb
repz
mov
cmp
dec
and
jl
inc
mov
add
jge
insb
stos
test
mov
xchg
mov
xchg
pop
mov
sbb
lret
push
jle
mov
pop
out
out
sbb
pop
xor
flds
addr16
sub
lahf
pop
pop
adc
loop
mov
mov
cmpsb
cmpsl
adc
xchg
jge
js
stc
sub
and
lea
scas
and
or
mov
fs
xchg
pop
mov
mov
cmpsl
call
xor
shll
mov
ret
inc
aas
or
mov
fidivrs
lods
daa
int3
es
mov
xor
push
pop
xchg
pop
lret
mov
enter
or
push
push
xchg
outsl
imul
mov
das
xor
and
mov
add
jnp
out
popa
mov
lock
mov
pop
add
xchg
xchg
or
in
icebp
jb
mov
mov
xchg
int
mov
lods
jno
inc
in
xchg
jmp
repz
fisubl
dec
cmpsb
jne
repnz
sub
fisubl
xchg
scas
add
gs
aam
inc
cmc
inc
fcoml
mov
test
xor
mov
stos
push
loop
push
cmpsl
mov
and
inc
dec
lcall
xchg
outsb
sahf
fdivrl
dec
mov
xlat
out
jp
pop
xor
addr16
aam
clc
xor
sub
shr
add
scas
add
addr16
call
lock
neg
and
cmp
xchg
add
and
les
fsubl
es
dec
notl
cmp
sbb
and
add
push
add
xchg
dec
enter
into
dec
mov
push
sub
sub
mov
jne
insl
push
sbb
sahf
push
sarb
dec
ljmp
leave
cltd
mov
cmpsl
add
cwtl
cmpsb
mov
ret
lock
dec
popl
lret
daa
and
adc
sub
push
pusha
mov
shl
fprem1
dec
mov
icebp
dec
sbb
mov
xchg
add
popf
mov
jne
lods
in
in
xorl
lret
in
fwait
bswap
icebp
mov
pop
imul
mov
or
jg
icebp
mov
mov
loopne
sbb
lret
push
adc
lea
pop
je
leave
jns
mov
xchg
in
scas
mov
jmp
mov
fmul
mov
xchg
or
cmp
pop
lea
sub
inc
ficoms
repnz
xor
push
orb
ljmp
int
imul
das
sbbl
dec
lods
cmc
mov
push
cmp
test
xlat
je
inc
hlt
mov
out
daa
adc
cmp
sbb
push
out
or
pop
mov
and
mov
and
lea
aaa
mov
add
into
mov
mov
xor
les
sbb
call
pop
loope
sub
insl
push
gs
movsl
pop
sbb
sbb
rorb
orb
sub
dec
sub
push
adc
xor
and
jae
shrb
inc
jo
insb
xor
mov
xchg
cmp
sub
leave
lds
jg
adc
outsl
fiadds
test
out
sbb
push
sbb
dec
push
xchg
stc
outsl
xchg
cmp
mov
in
jnp
leave
shll
in
sti
test
xor
lcall
mov
das
out
je
inc
pop
addr16
pop
pusha
rcl
fimuls
push
jae
xchg
jge
sub
iret
fst
dec
imul
mov
pop
movsb
lret
sub
or
stc
pop
outsb
add
outsl
fisubrs
xchg
cmpsb
jge
mov
in
sbb
add
cld
div
lahf
sbb
jmp
and
aaa
mov
ss
cmpsl
add
scas
inc
sbb
sbb
dec
add
popf
in
sbb
stos
out
dec
or
add
nop
jge
into
fsubrs
popa
out
repnz
jp
jg
sub
pop
or
sti
inc
dec
imul
cmp
js
ja
int
insl
mov
jp
cwtl
es
loop
adc
adc
imul
sahf
gs
into
aas
mov
sbb
cwtl
pusha
sub
add
aas
outsb
dec
cmp
decl
mov
push
add
fldl
jmp
fs
xor
test
xchg
mulb
insb
cld
mov
lahf
dec
outsl
add
jmp
nop
lds
out
xor
loope
and
add
shrd
mov
and
das
int3
mov
js
outsb
add
jmp
pop
fs
fildl
outsl
mov
adc
push
lods
imul
outsl
in
stos
roll
add
das
or
lret
in
lock
push
popf
dec
lods
dec
movsl
stc
das
scas
fs
outsl
xor
sub
sbb
fnstcw
inc
enter
arpl
clc
ljmp
pop
fucomip
std
lods
in
pop
mov
out
inc
inc
xchg
dec
in
sub
pop
mov
pop
lcall
mov
dec
scas
push
mov
movsl
aad
sbb
add
inc
test
jg
int3
es
pop
cwtl
scas
lods
mov
data16
enter
jmp
cmp
lret
push
xsha256
cmpsb
xchg
mov
fsubrl
mov
jge
push
cmpsl
mov
add
mov
je
and
lcall
adc
insb
ds
or
fwait
lods
enter
mov
ret
shrb
outsl
jge
cld
push
sbb
je
cmpl
jle
icebp
or
pusha
sbb
shl
or
xchg
ret
sbb
inc
sti
pop
xor
jmp
inc
adc
test
sub
fnstsw
add
inc
sbb
dec
sbb
push
mov
fs
sbb
push
cmp
inc
xchg
faddl
xchg
aas
scas
orb
mov
scas
mov
xorb
pop
sub
pop
xchg
jge
jne
ret
jo
fistpl
jne
push
cli
cmp
test
push
cmp
cmpsl
and
loopne
std
cltd
inc
in
mov
fbld
mov
push
push
mov
push
sar
test
stos
mov
cmp
xchg
ret
clc
jae
sub
popf
mov
ret
jge
mov
fwait
addr16
mov
pushl
jle
dec
adc
jl
dec
popf
push
push
xlat
jns
xor
inc
sbbb
sub
in
mov
rolb
scas
jo
adc
adc
mov
xor
mov
pusha
stos
push
out
enter
mov
push
mov
mov
lret
jge
xor
mov
out
out
sarl
push
mov
mov
sbb
cmp
sub
or
mov
jnp
pusha
pop
push
into
fwait
or
xor
and
sbb
mov
ljmp
aad
cmpsb
dec
scas
dec
popf
cmpsl
lds
and
int3
xchg
pop
inc
push
repz
ficompl
adc
mov
fisubrl
pop
shrl
hlt
cwtl
mov
adc
fistl
shlb
mov
cs
ja
jge
dec
fcoml
cwtl
mov
inc
inc
push
orb
mov
or
shlb
out
cmc
xor
fidivrl
popa
lods
loope
lahf
xchg
jge
bound
dec
pop
cwtl
sbb
mov
add
pop
push
aad
xorb
dec
sti
jae
into
stos
and
cmp
mov
fistl
dec
jo
icebp
lret
divl
pop
mov
pop
push
pushl
push
das
repz
pushf
mov
cmp
sub
dec
test
mov
loopne
xchg
or
mov
aad
mov
pop
mov
ret
sahf
mov
pop
xor
das
pushf
shrl
inc
or
sti
adc
xlat
jae
sbb
icebp
sub
jnp
add
add
mov
imul
mov
push
into
adc
adcb
out
test
jmp
popa
jbe
push
sbb
mov
pop
ja
insb
aas
jmp
cmc
in
je
fucomip
jp
andl
es
sub
leave
pop
push
dec
pop
mov
das
jbe
dec
jmp
data16
cmp
aaa
lret
push
cmp
mov
mov
mov
adc
test
outsl
clc
sub
inc
sbb
into
adc
mov
xchg
xorb
fsubl
pushf
loope
cmp
dec
pop
outsl
adc
loope
test
loopne
fisttps
and
sub
push
or
les
andb
cmp
sbb
mov
stc
add
fucomip
add
mov
mov
mov
or
mov
in
push
sub
jge
cs
leave
nop
pop
xchg
inc
adc
cmp
sahf
cs
rclb
mov
add
sbb
rol
aas
add
xor
pop
jle
enter
xlat
shrb
and
lcall
push
xchg
in
mov
fisttpl
mov
mov
jbe
and
push
xor
je
or
pop
inc
in
xchg
insb
cmc
daa
dec
pop
mov
stos
imul
lcall
and
enter
xor
shrl
mulb
dec
xchg
call
cli
stos
out
aaa
idivl
int
test
orb
in
repz
sbb
fnstcw
jbe
xchg
loopne
mov
loopne
add
repz
xchg
xchg
add
loope
xchg
pop
rcr
xor
lcall
push
mov
mov
fs
das
xchg
push
xchg
mov
jb
xor
pop
mul
lret
xor
or
in
push
lock
std
jge
mov
sbb
mov
jle
inc
xchg
push
mov
push
js
fwait
jns
or
xchg
das
in
into
inc
outsl
cli
jae
jg
fwait
sti
pop
jge
sbb
push
pop
ffreep
lahf
lea
or
sbbb
push
in
popa
loopne
loope
fidivrs
out
and
jns
sub
mov
aam
cmc
fwait
mov
test
int
int3
lret
repnz
jle
mov
add
test
xlat
pop
cmp
movsl
lcall
in
out
out
js
testl
insl
aas
cmpsl
inc
clc
pop
mul
cmpl
aam
test
int3
push
scas
call
dec
and
insl
hlt
std
sub
cmp
mov
xchg
scas
sti
xchg
xchg
pop
mov
xor
jmp
cli
sub
ss
push
lds
shll
jo
jp
xor
scas
mov
inc
jmp
inc
dec
adc
mov
js
sbb
push
push
out
cmp
push
mov
add
jb
mov
jnp
cmp
ret
into
cltd
push
mov
lea
cld
mov
cmc
lahf
orl
pushf
in
fists
loop
jmp
int3
test
pop
push
mov
and
in
xlat
xchg
mov
mov
in
scas
pop
jmp
xchg
fldl
dec
popa
in
mov
data16
mov
insb
xchg
dec
push
lret
inc
pop
xor
fildl
mov
bound
lods
jo
cmp
jno
fwait
lret
cmp
out
enter
jl
out
cli
xor
or
fsubr
pop
pop
mov
mov
lret
cs
scas
addr16
out
scas
pop
lcall
clc
scas
out
pusha
and
push
inc
xlat
push
pop
outsl
jmp
cltd
jne
in
loop
inc
into
mov
mov
add
lea
add
and
stc
sahf
ja
fisubrl
imul
outsb
icebp
clc
out
or
xor
in
test
fwait
jae
cli
dec
fcmove
push
xor
sub
clc
testl
test
aam
add
loopw
out
xor
lea
ret
shlb
je
mov
fcompl
jmp
add
cld
xchg
sub
or
sub
cld
setbe
jle
xchg
jbe
negl
cmp
fs
outsb
add
sub
push
xor
scas
faddp
pop
aad
mov
nop
pop
notb
test
mov
outsl
ss
push
ss
push
xor
test
dec
adc
push
out
stos
dec
shrb
mov
test
test
fistpl
dec
jp
imulb
dec
fmull
push
ret
pop
int
and
or
and
cmp
mov
inc
mov
into
fsubl
and
in
mov
enter
xor
jl
aaa
loopne
call
xor
fcompl
shlb
mov
scas
push
shl
bound
mov
clc
ljmp
cs
push
adc
jl
jecxz
adc
outsb
cmpsb
jmp
dec
pop
cmp
jbe
dec
gs
dec
and
pushw
lahf
lahf
imul
push
jae
and
xor
and
and
scas
sub
fistpll
gs
int
inc
jge
and
andl
and
lods
jl
sub
fnsave
cmpsl
out
sbb
outsl
push
movsb
push
add
arpl
xchg
outsb
data16
jnp
jge
jne
test
pop
mov
rcl
dec
adc
rcrl
jno
testl
cmpsl
xchg
mov
pop
out
ljmp
sub
stos
into
dec
in
insl
or
inc
inc
lret
je
lahf
ja
js
call
addr16
or
push
inc
push
push
lcall
insl
push
lret
pop
mov
push
mov
fsubs
mov
inc
mov
or
ljmp
int3
sub
ss
arpl
dec
mov
cmp
icebp
shrl
cli
fisttps
cmpsb
cmp
push
inc
push
clc
movsb
jl
or
jb
lea
mov
lock
xorb
fiaddl
jg
jl
mov
data16
icebp
cmp
or
data16
movsb
loop
iret
pop
and
adc
sbb
push
mov
push
lret
call
cmp
cli
xchg
xchg
mov
gs
mov
cmp
mov
inc
cmp
into
add
add
aad
insl
xchg
sub
dec
lcall
fimull
mov
mov
jge
pop
rcll
inc
ja
lcall
insb
jle
stos
add
xor
adc
ljmp
xchg
mov
outsb
test
cmp
jecxz
outsl
push
pop
jno
lods
push
or
mov
jmp
pop
stos
call
arpl
aaa
fcompl
and
xchg
adc
xor
scas
add
notl
fs
jns
in
xlat
mov
imul
jecxz
or
testl
ja
test
idivl
enter
pop
dec
cmp
loope
in
add
xor
ret
std
aam
push
push
xchg
repnz
ss
jns
sub
hlt
stc
scas
push
fadd
mov
shlb
dec
adc
pushw
sahf
mov
popf
dec
xlat
insb
call
rorb
add
repnz
popl
pop
leave
push
mov
push
rorl
or
in
addr16
leave
xor
dec
mov
je
mov
into
repnz
lcall
sbb
in
cwtl
push
outsb
notl
and
push
push
fisttpll
mov
and
arpl
adc
push
punpckhbw
ret
mov
jo
push
jb
xor
sbb
sub
insb
mov
mov
ja
xchg
aas
pop
fsubrp
adc
jmp
loop
sub
enter
mov
lock
pop
icebp
sub
mov
fisubs
je
outsb
lds
pop
and
decb
mov
cs
mov
int
test
push
cmp
mov
jae
inc
or
and
cmp
push
mov
rcrl
mov
scas
outsb
xchg
mov
pop
push
fistpl
mov
ret
sub
in
lods
mov
pop
popa
pop
movzwl
pushf
mov
lahf
mov
xor
inc
cmpsb
or
xchg
sbb
out
movsl
jge
jae
bound
xchg
xlat
inc
js
and
jecxz
inc
push
frstor
daa
mov
cli
xor
adc
aam
mov
ds
inc
mov
in
insl
dec
mov
fwait
push
sbb
push
inc
xor
cmp
sbb
aaa
jg
inc
push
xchg
lahf
in
cs
les
mov
sub
pop
aas
inc
in
pop
push
cmp
les
shll
mov
mov
lahf
ss
jb
aam
js
decb
jnp
mov
dec
out
dec
xlat
add
pop
fdivrs
push
inc
jae
std
cmp
xor
jle
adc
adc
data16
jp
iret
push
cmp
icebp
movsl
and
dec
mov
aad
mov
jns
jbe
cmc
jp
xchg
cld
rorb
addr16
stos
inc
frstor
jl
lods
pop
add
ror
xchg
out
leave
and
pop
inc
fists
push
rcr
mov
fistl
fsubrl
mov
pop
imul
add
ret
rcrl
fwait
into
jl
xor
ds
or
je
push
mov
mov
pop
test
pop
jge
push
adc
adc
fstl
stos
scas
lods
mov
push
mov
into
mov
fadds
in
push
jmp
idivl
or
add
mov
push
adc
adc
shlb
sub
dec
pusha
jne
stos
movsl
shlb
xchg
push
cli
jae
leave
adc
idivl
dec
xor
cmp
daa
fdivr
or
adc
jb
scas
mov
clc
xchg
fsubrp
gs
popf
and
movsl
dec
mov
inc
movsb
into
mov
xor
nop
mov
sbb
daa
test
inc
cmc
int3
stos
mov
imul
add
test
lcall
jbe
test
setle
jl
xor
mulb
cmp
hlt
xor
jle
or
data16
xor
mov
bound
test
mov
push
or
and
outsb
iret
inc
and
sub
xor
push
scas
out
dec
or
mov
lods
mov
and
call
push
mov
xor
xor
aas
gs
enter
ds
mov
out
inc
cld
sbb
push
or
dec
outsb
ret
pop
pop
xchg
mov
pop
mov
mov
push
jne
push
dec
sub
dec
rcrb
ds
mov
in
cld
xlat
hlt
out
mov
jmp
lds
dec
ficompl
jns
xchg
mov
je
aaa
push
cwtl
leave
incl
test
addr16
push
sub
or
push
aaa
jl
xor
pop
inc
sbb
iret
ffreep
into
out
scas
lods
xchg
sub
mov
or
movb
loopne,pt
jo
adc
pusha
outsb
mov
push
adcl
out
pop
inc
pushf
nop
mov
mov
loop
lock
xorl
test
dec
dec
out
and
clc
scas
cmpsl
push
jno
jecxz
jp
adc
nop
or
decl
loope
popa
push
cmovg
adc
bound
lcall
push
adc
loopne
and
push
adc
and
mov
insb
fdivr
fcmovnb
inc
out
jle
into
popa
andb
dec
xchg
push
frstor
xchg
das
sub
mov
pop
adc
xor
daa
ficoml
or
lret
push
add
inc
in
cmp
jp
arpl
pop
sbb
or
into
and
sub
les
jmp
adc
dec
rcrl
xor
lahf
cmp
jne
adc
mov
sub
mov
inc
jle
je
sub
test
xor
sub
cmp
dec
bound
add
fisubrs
cmp
lahf
mov
and
aad
les
mov
fdivl
ja
jno
jecxz
dec
in
push
int3
mov
pop
ret
ja
push
cmc
lods
adc
jno
and
clc
sub
orb
xor
xor
mov
rcl
cmc
stos
in
inc
jbe
and
cmpsb
lcall
cs
dec
mov
push
and
ror
adc
fmuls
out
xchg
fwait
enter
scas
cmp
outsb
mov
into
adcb
sub
ret
dec
inc
addr16
movsb
xor
adc
and
test
sub
pop
mov
daa
xchg
xor
add
sbb
out
loop
icebp
mov
out
sbb
mov
mov
push
loop
stos
cmp
xor
mov
fstpt
cld
add
stc
push
mov
test
adc
leave
sti
mov
les
es
xor
outsl
sbb
jg,pt
adc
xchg
testb
and
shll
lds
stc
mov
xchg
mov
aaa
sbb
test
mov
push
and
mov
jns
cmp
jle
lock
int
shl
mov
fiadds
arpl
mov
jp
pop
jmp
pop
aas
dec
and
mov
into
pop
adc
xchg
push
outsl
aam
out
cmp
out
push
inc
jl
div
into
repz
lret
in
in
dec
pop
add
das
pusha
push
mov
orb
stc
jno
inc
or
cmp
sbb
imul
xor
fsubs
inc
in
xor
xchg
cmp
out
sbbb
in
jns
loopne
es
mov
faddl
jnp
or
mov
pusha
adc
call
int
int
push
shlb
mov
arpl
push
mov
xchg
mov
or
mov
loopne
orb
xor
pop
inc
out
lock
ss
mov
push
pop
push
push
pop
roll
repnz
xchg
adc
mov
dec
mov
mov
jge
stos
addb
xor
inc
decb
pusha
sbb
std
fisubl
mov
adc
sbb
sti
pop
out
pop
cmp
mov
xor
outsb
push
arpl
adc
out
push
mov
jle
repz
mov
adc
jle
inc
mov
push
js
xchg
imulb
notb
fcomip
lahf
jg
push
fistl
xchg
or
sahf
dec
into
outsb
leave
xchg
push
idivb
add
sub
or
cmp
adc
movlps
hlt
sub
es
int3
repnz
int
lds
push
push
lret
mov
testl
adc
in
frstor
inc
push
push
mov
gs
cmp
push
mov
jecxz
scas
imul
dec
shlb
xor
mov
jb
add
test
jg
stos
jmp
push
mov
xchg
cmp
cmpsl
sub
and
sub
cmp
push
jg
mov
jecxz
ljmp
mov
xor
arpl
loop
orb
lret
sahf
ja
inc
ror
xchg
sahf
inc
pop
mov
jmp
int3
in
lea
ror
xor
sub
cmp
inc
in
jecxz
push
sub
xchg
mov
pop
xor
outsb
jge
loope
test
loop
and
push
adc
sahf
adc
outsl
testl
pop
jb
cmc
add
flds
add
out
mov
bound
mov
add
clc
push
adc
pushf
xchg
mov
lds
xor
and
mov
jne
ret
push
sub
jl
xchg
mov
rcrb
add
movsl
xor
leave
lahf
sub
mov
fwait
add
jle
nop
iret
testl
cwtl
xchg
push
mov
insl
push
and
mov
loopne
fwait
jmp
jle
xchg
insl
or
sbb
cmpsb
xlat
push
xchg
lcall
mov
stos
testl
sub
cmp
pusha
aad
sahf
push
mov
xor
jns
push
orl
popa
out
xor
sbb
mov
mov
inc
nop
push
sub
lret
mov
add
lret
lcall
sub
pop
jb
mov
pop
icebp
pop
in
insl
call
mov
adc
je
cld
push
mov
inc
mov
push
inc
in
or
lods
into
add
mov
shlb
add
fsubp
fiadds
cmp
sar
inc
arpl
dec
sbb
xchg
push
inc
insb
stos
pop
das
ss
scas
adc
jne
sub
mov
dec
push
xchg
orl
lahf
or
jbe
push
dec
adc
lea
rolb
adc
aaa
dec
les
insl
clc
filds
into
enter
cmp
cmp
mov
sbb
out
outsl
xlat
pop
dec
out
dec
dec
inc
pusha
cmp
rcrb
push
clc
lcall
mov
sub
mov
jno
sbb
mov
cmp
sbb
imulb
int3
mov
data16
dec
fs
sbb
adcl
hlt
or
jbe
and
out
push
pop
jae
pop
jg
lods
rcl
dec
mov
mov
and
add
int3
fstps
ds
fs
test
cmc
paddsb
fwait
jp
in
cmpsl
xor
jp
jnp
cmpl
lods
inc
pushf
mov
int
mov
sbb
dec
push
jmp
or
mov
shll
out
add
rcl
and
imull
mov
pop
lods
jnp
arpl
imul
insl
and
ss
rclb
in
fisubrs
mov
xor
xorl
fcoml
cmpsb
adc
loop
arpl
push
ss
std
int
pop
push
xchg
push
cwtl
push
aas
add
and
stos
fdivl
aam
mov
rep
and
inc
push
mov
inc
add
loopne
in
lcall
jno
mov
arpl
stc
fidivrl
jb
out
pop
aaa
cld
int3
test
jecxz
sub
jne
inc
pushf
sub
aas
sbb
sub
scas
mov
inc
pusha
into
push
adc
cmp
push
aas
mov
test
adc
mov
mov
pop
cld
sub
xchg
or
mov
dec
insb
dec
repnz
dec
xlat
int
fcom
popf
xchg
fdivrs
add
adc
repnz
aaa
jnp
mov
push
lcall
mov
mov
jnp
loopne
pop
or
pop
rcrb
pop
lcall
out
or
pop
dec
ds
xchg
movsb
inc
std
adc
repnz
lods
jmp
sub
mov
push
js
in
inc
fsts
lahf
mov
cli
xchg
mov
sahf
adc
pop
mov
fistps
sub
dec
fnstcw
scas
and
jmp
dec
sti
or
adc
fisubs
mov
orl
mov
adc
imul
xchg
imul
and
insb
daa
int3
outsl
push
lock
mov
xchg
mov
sbb
push
mov
arpl
mov
fisttpl
mov
aas
xchg
fwait
inc
pop
fcmovne
sub
scas
icebp
push
fnstenv
add
pop
mov
and
fwait
rcr
loop
lret
scas
inc
jle
inc
mov
mov
rorb
jns
mov
rcll
subl
inc
pop
ss
rcll
or
out
cs
or
mov
xlat
imul
inc
or
fcmovne
or
lahf
rorb
aam
xchg
inc
mov
pop
push
fstpl
int3
iret
jbe
popf
pop
fcomps
add
ret
popl
mov
inc
ficomps
add
pop
jge
sub
and
cmp
std
inc
mov
cmpl
aas
jo
test
lods
mov
lods
gs
cltd
dec
add
gs
sarb
pop
sbb
sub
lret
std
jne
lods
inc
cmp
ret
fistpl
mov
nop
arpl
in
pop
stos
or
cwtl
test
cmp
ja
sbb
push
or
outsl
dec
mov
and
lret
jb
jae
inc
pop
clc
popf
test
ss
xchg
imul
pop
orb
jl
imulb
sbb
mov
jg
mov
inc
adc
add
jne
or
xor
test
jl
mov
repnz
cmp
mov
pop
or
fbld
test
cmp
cmp
mov
testl
or
aam
out
or
aam
mov
gs
sub
mov
fadds
or
stos
sbb
mov
sbb
or
xchg
mov
xchg
pop
pop
xchg
add
cld
aas
xchg
add
ss
sub
xchg
cwtl
stc
adc
repnz
mov
shlb
xchg
dec
add
loopne,pt
push
mov
pushf
jne
pop
inc
adcl
stos
jmp
pop
loop
test
xor
imul
sarl
pop
mov
sbb
lret
icebp
pop
gs
adc
js
dec
cmp
lea
jg
add
cmp
enter
dec
std
cli
stos
sub
mov
sbb
pusha
cmc
jns
cwtl
movsb
cmp
jo
dec
outsb
ret
add
test
shrb
outsl
jle
data16
popf
jb
pop
push
sbb
xor
inc
test
pushf
stos
in
jb
xor
jle
rolb
mov
rorl
adc
xor
pop
nop
pop
xor
test
rorb
and
cmpsb
sti
xor
jmp
push
cmc
fidivs
push
cld
fs
adcl
xor
stos
test
loopne
rcl
shrb
out
xchg
and
inc
imul
jg
dec
mov
pop
les
jl
mov
outsb
stos
call
fbstp
imul
outsb
sub
push
sbb
out
sbb
push
xchg
lahf
add
orb
pop
mov
xchg
lahf
sti
cmp
pop
shlb
ss
sub
mov
xchg
lea
mov
call
dec
repz
movsl
mov
dec
cwtl
sub
movsb
sarb
rorb
pop
in
dec
xlat
or
sub
leave
pop
dec
dec
xor
mov
mov
test
test
xor
dec
inc
pop
xchg
add
lods
repz
cmc
jmp
js
addb
imul
ret
or
xor
xor
gs
xorb
rol
adc
mov
sbb
sbb
adc
jne
sub
xlat
gs
sar
bound
lea
lahf
imul
push
call
pop
imul
into
push
cmp
imul
sbb
clc
pop
aaa
jmp
aaa
inc
data16
push
dec
push
pop
mov
push
dec
adc
push
jle
daa
sti
add
fwait
sti
jne
push
bsr
daa
pusha
fwait
data16
icebp
inc
icebp
jno
lcall
xchg
adc
add
andb
mov
and
jp
add
ret
dec
stc
cmp
faddl
jno
cmp
aad
repz
mov
stc
dec
mov
iret
add
imul
scas
stos
shrb
adcl
cmc
out
lret
mov
mov
and
lcall
mov
sub
adc
or
adc
aad
cmc
cld
and
mov
mov
jne
adc
rcr
or
cli
adc
jp
and
pushf
hlt
cmp
bound
push
dec
adc
out
adc
dec
mov
jl
mov
mov
rclb
lods
or
xor
adc
fisubrl
out
sub
lock
add
mov
jle
or
cmp
outsl
xor
clc
iret
sub
popl
fwait
xchg
push
mov
es
mov
pop
insb
popf
add
mov
fstl
sub
stos
lds
push
ret
fbstp
sbb
mov
repz
movsl
bound
loope
fisttps
xlat
push
cmpsb
mov
int3
jg
sub
xor
cmp
mov
das
jne
sub
pop
into
enter
xchg
lods
add
lret
repnz
notl
xchg
jbe
add
inc
aam
sti
push
pop
je
fwait
push
dec
fld
lret
mov
cmp
dec
scas
enter
out
imul
popf
fsubrl
fsubrl
repnz
test
arpl
movsl
daa
call
add
mov
ret
mov
rcrb
je
pop
pushf
and
mov
xor
lds
pop
addr16
movsb
shlb
add
inc
cmpsl
mov
fstpt
popf
lret
orb
xchg
lods
sti
mov
or
cmpsl
push
mov
shrl
shlb
fs
iret
ja
loope
xlat
movsb
cwtl
shrl
jle
pop
xor
punpcklbw
xchg
enter
stos
out
or
mov
sub
mov
aas
ljmp
jmp
add
nop
mov
nop
push
cmp
shl
aas
cli
mov
xchg
movsl
mov
int3
ja
sbb
add
or
test
xchg
xorb
xchg
mov
ret
fwait
push
add
stc
fidivs
call
mov
jo
iret
add
mov
push
aad
sub
mov
xor
mov
outsb
jnp
clc
stos
scas
jg
xor
dec
loope
ret
mov
scas
pop
jmp
pusha
inc
ret
dec
add
addr16
cmp
divl
fs
sti
arpl
imul
bound
ror
rcl
xorl
xor
loop
mov
pop
ja
inc
inc
fsubl
push
aaa
test
jge
in
and
jne
and
popa
pop
sub
mov
lret
inc
or
inc
mov
test
testl
in
mov
sub
adc
dec
sbb
push
cmp
fldt
and
les
jb
add
or
sbb
inc
rsqrtps
dec
ss
in
popf
and
jp
aam
in
popa
pop
dec
movsl
mov
out
jp
dec
fwait
dec
push
idivb
arpl
cmc
inc
cli
cmp
loop
lea
xchg
outsl
mov
cmp
or
nop
or
pop
fwait
ss
outsl
fldcw
arpl
mov
mov
mov
cmp
into
call
std
dec
loope
je
xchg
mov
push
or
addr16
mov
mov
pop
inc
mov
jae
fistpl
lods
or
mov
fs
faddp
lret
fisttpll
mov
pop
xor
popa
hlt
je
adc
int3
out
add
push
sbb
mov
test
std
cs
xchg
mov
jns
in
in
enter
iret
push
data16
xchg
add
mov
fsubrs
cli
lret
pop
scas
fcmovnbe
adc
cmpsl
mov
mov
jecxz
or
dec
or
xchg
sbb
in
std
outsb
pop
arpl
scas
or
addr16
xchg
jne
scas
imul
push
orb
bound
jo
push
scas
in
push
xorb
push
fcmovnbe
lds
ljmp
shl
les
arpl
pop
inc
inc
data16
sbb
mov
inc
ss
fsub
push
and
in
pop
xchg
popa
cmp
movsl
and
mov
test
adcl
sbbl
orb
jl
xor
incb
push
cs
fcmovb
cwtl
fdivl
imul
int
les
add
xor
jb
add
in
push
jno
into
adc
insb
and
ss
jno
fsubrs
dec
or
jbe
inc
bound
mov
mov
dec
sbb
push
inc
ja
sbb
lock
inc
sub
mov
negl
pop
add
sub
in
inc
adc
or
adc
test
mov
cmp
fwait
jno
cld
loop
mov
mov
jno
insb
test
cmp
call
lock
jo
xor
into
mov
jbe
data16
push
in
cmp
pop
mov
andl
lahf
inc
xor
cmp
outsb
pushf
cmpsl
shll
mov
jae
or
inc
mov
ljmp
cmp
or
adc
dec
mov
outsb
cmp
cmp
ja
shl
mov
in
inc
jnp
les
out
xor
mov
fcompp
pop
add
int
cwtl
sub
xor
lcall
fisttpl
jne
mov
mov
and
sbb
pop
jo
jno
ds
pop
pop
pop
sbb
daa
movsl
mov
xrelease
pop
rolb
sub
cmpsb
into
inc
push
jmp
out
lods
sub
test
xor
and
push
sub
dec
popf
dec
lret
pop
sub
pop
lds
cmpsl
test
inc
sbb
lods
inc
out
pushf
rcll
je
movsl
std
test
icebp
mov
dec
out
lahf
das
sbb
mov
sbbl
nop
push
das
aam
addl
push
movsb
aad
inc
js
ljmp
sbb
jmp
fstpt
mov
mov
daa
inc
pop
stos
jbe
adc
test
pop
lret
push
loopne
sub
dec
icebp
mov
scas
jle
adc
and
jns
adc
xchg
insl
pop
push
jg
push
dec
les
jg
cmc
adc
inc
sub
inc
out
pop
jmp
or
mov
insb
cld
imul
or
sbb
sbb
ficoms
jmp
dec
sbb
jecxz
dec
mov
sub
mov
mov
mov
ret
shll
cmp
scas
and
mov
orl
inc
out
dec
cmpsl
mov
mov
mov
test
jnp
jns
lcall
lret
push
and
xchg
mov
in
mov
push
push
std
loope
or
fstpt
int
outsb
cmp
fldpi
xor
in
inc
loop
dec
mov
cmpsb
je
xchg
inc
stc
pop
or
insl
push
mov
push
pusha
mov
dec
push
jge
dec
adc
mov
fldl
mov
jp
out
xorl
xchg
or
addb
aas
cltd
xor
pusha
add
in
inc
mov
push
mov
orb
push
inc
sbb
lcall
jl
mov
cmp
mov
jecxz
xor
adc
jbe
loope
push
mov
mov
sub
bound
xor
js
sbb
fdivrl
shrl
cmpsb
pop
lahf
sub
cmp
adc
fwait
lret
push
fsubl
adcl
in
int3
pop
iret
inc
test
push
xor
and
mov
cmp
sub
cmpl
xor
xor
jmp
mov
dec
addb
loopne
push
dec
sti
lea
pop
jecxz
popf
xor
add
xchg
leave
daa
jmp
mov
imul
into
das
es
dec
mov
sub
jne
lahf
divl
shlb
push
inc
test
pop
jo
sub
lahf
inc
mov
out
cmpsb
lcall
orb
divb
gs
push
out
sub
inc
inc
cmp
mov
in
or
test
mov
iret
pop
pusha
xchg
and
push
pop
loope
rorl
aaa
jg
test
dec
xor
adc
jbe
pop
mov
daa
mov
dec
test
cmp
pop
mov
jae
jae
pop
push
pop
add
xor
jmp
adc
cmp
adc
push
fistps
leave
sbb
clc
add
push
popf
jle,pt
ss
adc
push
icebp
ret
pop
js
add
ss
push
mov
mov
movl
pop
pop
dec
insb
outsl
push
insb
ja
stos
aad
frstor
into
outsb
pop
cwtl
jl
outsb
and
lcall
test
xchg
sbbl
divb
lock
push
xor
aad
inc
xchg
adc
sbb
or
add
cltd
mov
sub
push
mov
xchg
test
test
icebp
or
shrl
push
mov
shll
mov
sub
enter
mov
arpl
les
inc
push
add
sbb
iret
repz
mov
cwtl
pop
gs
mov
fcomi
lahf
pop
fiadds
mov
in
pop
jnp
dec
stc
lret
loope
inc
xchg
mov
dec
sub
xor
xchg
and
fidivl
dec
in
int
movsl
jo
mov
negb
adc
pusha
dec
mov
or
fs
jg
push
pop
jmp
ret
ret
jl
jge
xchg
lds
lock
clc
adc
ret
sub
xchg
xchg
dec
movsl
mov
pop
mov
adc
push
lss
decl
mov
out
ja
into
sbb
inc
repz
fistpl
pushf
jmp
je
xchg
test
jg
add
add
dec
jg
int3
shll
jne,pt
out
fucomip
xchg
mov
jmp
lcall
test
loopne
jno
jb
add
in
pop
push
sbb
or
sbb
aad
cmpsl
cwtl
pushf
mov
push
cmp
pop
cmp
adc
push
pop
and
jmp
lods
sbb
push
lds
sbb
iret
cmp
insl
pop
repnz
mov
cmp
dec
aaa
lcall
or
lods
pop
adc
stc
cmpsl
jb
mov
cli
ljmp
fbld
sbb
ja
jg
dec
aaa
dec
push
adc
pand
aad
cmp
outsb
fnstcw
sar
dec
lret
pop
adc
dec
out
pusha
test
in
xor
mov
jl
popa
jnp
add
xor
fstp
mov
aad
jg
or
and
add
inc
and
jmp
bound
scas
cmp
sub
mov
xor
inc
dec
call
inc
push
cltd
push
xor
negb
aam
push
repnz
xor
js
sbb
movsl
fistps
shlb
xchg
enter
fsubrl
rorb
mov
or
pop
add
lods
xchg
pop
push
aam
fisubl
mov
inc
aas
sbb
es
dec
mov
sub
andb
xchg
xchg
lcall
mov
out
cwtl
sahf
jmp
mov
add
jl
inc
xchg
pop
outsb
xadd
mov
fimull
scas
mov
xor
mov
xchg
cli
sub
out
es
sbb
or
fidivs
in
push
lahf
inc
adcb
jmp
jae
lds
inc
mov
adc
daa
inc
dec
aam
out
stos
mov
xchg
inc
dec
fisttpll
pop
shll
push
mov
xor
push
scas
mov
rcrb
aam
fisubrl
lds
cwtl
cld
retw
or
push
aaa
outsb
out
incl
in
xchg
call
aaa
pop
rorl
pop
xchg
cmpsb
sbb
cmp
test
pop
xchg
int3
fimuls
or
lock
cmpsb
in
ret
push
cltd
pop
ljmp
dec
dec
shrl
xchg
mov
imul
fcompl
mov
sub
adc
popa
push
cmc
mov
popf
mov
into
dec
fmul
in
data16
cmp
jmp
sarb
mov
sbb
loopne
jl
pop
and
lcall
xchg
xchg
lock
adc
mov
test
sbbb
dec
ss
sti
jecxz
or
pop
lock
mov
mov
test
pop
repz
cmp
ret
testb
fisttpll
out
aas
dec
cwtl
lret
xchg
scas
dec
cmp
test
and
lea
cld
imul
movntq
out
mov
mov
loop
and
jmp
aam
push
stos
shrl
pop
rclb
test
cmovo
mov
int
xchg
push
imull
test
mov
add
xchg
pop
sub
inc
mov
insl
mov
lds
adc
ljmp
movsl
int
pop
xchg
out
push
push
dec
xor
push
mov
xor
lds
add
sbbb
pop
push
xchg
fs
stos
or
sbb
rorl
cmp
test
or
fpatan
jmp
sub
ret
repnz
test
push
inc
pop
sbb
dec
sub
xlat
dec
or
jno
inc
sub
sub
xchg
imul
orb
ss
iret
push
xchg
push
cmp
add
mov
lcall
push
in
hlt
out
loopne
mov
pop
sub
rolb
mov
fucomp
test
and
lods
sahf
adc
jns
mov
jmp
add
or
or
dec
dec
jge
inc
xchg
fs
iret
shll
mov
lods
mov
aas
inc
fdiv
frstor
xchg
jge
movsb
pop
das
pop
jo
adc
xor
das
fdivrl
push
outsb
inc
aad
or
sahf
testl
push
lret
mov
lahf
in
inc
dec
push
add
or
mov
jns
jnp
in
xchg
mov
loopne
int
lods
cwtl
les
xorl
mulb
and
or
out
out
xor
stos
or
imul
adc
ss
in
dec
leave
or
xor
iret
or
cmc
lea
and
dec
and
sub
mov
mov
pop
dec
scas
xor
inc
outsb
add
iret
pop
sub
pop
or
push
lret
std
cmp
daa
imul
adc
mov
mov
fs
xor
scas
lret
push
cs
ds
or
or
out
pop
stos
sbb
push
pusha
jl
cltd
push
pop
jge
dec
sbb
xchg
lock
cmpsl
jb
sbb
loopne
loopne
sbb
xchg
xchg
mov
push
push
or
andb
push
jb
adc
lcall
xor
xchg
test
call
sub
add
ja
xchg
xchg
cltd
mov
mov
in
pop
pop
and
sti
mov
fs
mov
fldenv
cmp
ffree
stos
icebp
xchg
mov
push
cmc
dec
and
shll
dec
dec
out
jge
rolb
jl
jmp
dec
jmp
shrb
lods
dec
adc
mov
ss
xor
push
in
mov
xorb
push
pop
and
sbbb
or
pop
int
nop
cmpsl
dec
insl
cmpsl
int
jne
js
mov
xchg
int
or
es
loop
fistpll
push
lcall
insb
push
sub
pop
push
jae
or
pop
push
sbb
inc
jge
pop
cmc
lods
icebp
scas
inc
imul
cld
xchg
mov
mov
jae
into
jne
mov
ret
testl
add
pop
fcmovnu
lahf
es
adc
in
lods
mov
xlat
ret
sti
pop
bound
adc
cmp
inc
cmp
sahf
cmpb
and
adc
jecxz
lret
jge
mov
arpl
mov
pusha
mov
adc
scas
popf
mov
xchg
jge
xor
lods
cmc
ret
fstps
nop
stc
enter
xor
and
mov
andl
lock
jno
and
cltd
cmp
stc
jns
fldl
push
add
add
mov
arpl
inc
rcrb
inc
adc
inc
dec
xchg
int3
into
into
repnz
sarb
test
in
cwtl
into
rorl
adc
mov
test
jns
adc
call
rcrl
je
push
push
popa
jae
sti
and
movsl
in
fisttpl
jp
push
push
sub
outsb
inc
push
imul
or
fs
sbb
fidivl
xchg
mov
jbe
pop
adc
adc
dec
jns
inc
push
sbb
adc
xor
fbstp
sub
addb
add
lea
movsl
stc
fwait
xchg
jne
cmpsl
and
imul
loope
shrl
cmp
xor
pop
fmuls
adc
test
jae
xchg
nop
les
shl
lret
into
incb
ljmp
stos
cmpsl
cld
and
pop
cli
cmpsl
mov
int
insb
sbb
out
das
xchg
es
lcall
sbbb
fucomi
mov
xor
out
addr16
fsincos
aad
sub
inc
test
xor
popa
mov
mov
add
pop
stc
mov
in
cmp
pushf
jae
sbbl
call
lcall
imul
pop
bound
test
pop
out
mov
cmp
cmpb
pop
out
dec
jb
pop
and
std
sub
push
or
shl
xor
pop
or
push
push
cmc
fidivrl
int
gs
adc
int
mov
daa
inc
lods
xchg
fistpll
fs
cmpsb
ds
jno
cmpb
sbb
aam
es
cmpsb
in
xor
dec
push
cmp
stos
call
dec
sub
dec
push
dec
aad
jecxz
pop
dec
scas
fcomps
push
rolb
test
add
add
xor
jg
mov
xchg
push
add
sub
mov
mov
jecxz
dec
cmp
sub
call
mov
jo
push
insb
ret
lods
xchg
mov
adc
adcb
sbbl
xchg
inc
jp
xor
or
stos
and
mov
or
mov
sub
in
adc
jo
addb
pushf
dec
add
pop
jb
aas
cmp
cmc
xchg
sub
jnp
aaa
adc
mov
sbb
mov
mov
cs
rclb
imul
adc
adc
dec
fwait
ret
popa
pop
ljmp
and
bound
or
sub
adc
push
jmp
mov
mov
jbe
mov
jnp
sub
push
pop
pop
notb
fdivs
les
clc
repnz
ret
ret
test
add
enter
adcl
sub
jns
rcr
xor
orl
and
adc
cmc
xchg
sbb
add
das
sub
pop
loopne
mov
fwait
pop
repz
lock
sub
lret
mov
daa
push
mov
outsl
orb
popa
icebp
sarb
out
add
mov
mov
test
mov
sbb
mov
fmull
jmp
cmc
dec
mov
sub
pop
jmp
sub
inc
aad
shll
and
aaa
scas
mov
adc
outsb
or
gs
rcrl
in
cmp
add
sbb
sarl
lret
or
data16
pop
push
ja
ljmp
stos
repnz
add
cmp
outsl
loope
and
repz
mov
cmp
push
and
and
dec
xchg
scas
int
sbb
xchg
xor
cmp
shrl
adc
scas
jge
addr16
xchg
lock
testl
std
cmpsl
dec
stos
je
fs
jmp
or
ljmp
fsubs
into
mov
cmpsb
add
minps
fistl
lea
in
dec
mov
add
int
lock
adc
movsl
sbb
cwtl
add
mov
test
fbld
sub
xor
das
inc
mov
leave
push
xchg
arpl
fldl
push
cmpsb
pop
std
mov
popl
rorb
xor
dec
xchg
jg
sbb
and
jns
aam
stc
dec
out
cmp
aaa
mov
dec
sbb
ror
xchg
sub
test
dec
xor
and
pushf
fdivl
pop
jae
push
add
add
add
mov
movsl
mov
jmp
mov
dec
jns
jp
incb
shrl
adc
fmull
ret
out
cmc
adc
test
clc
out
inc
hlt
ds
scas
enter
loopne
sbb
cmp
ds
loope
jecxz
movsl
xor
insl
lods
lods
ficoml
xchg
out
mov
pop
pop
test
push
stos
repnz
push
inc
repz
mov
shlb
in
pop
xchg
mov
xchg
xor
mov
ljmp
xchg
je
inc
mov
xlat
and
mov
shrb
ret
lea
into
movsb
mov
push
int3
xchg
dec
sub
mov
lods
test
inc
inc
xor
push
iret
jmp
in
xchg
dec
jne
cmp
push
addb
lret
insb
out
push
cs
mov
mov
fwait
ljmp
push
mov
lahf
xor
pop
xor
lea
adc
mov
sbb
mov
pushf
cmp
or
cmp
cmp
pop
add
sbb
fidivl
es
xchg
lods
lock
fisttpl
sti
call
roll
out
mov
xor
test
push
cmp
xchg
pop
pusha
mov
adc
xchg
or
ja
inc
lahf
pop
mov
xchg
xchg
popa
clc
inc
fwait
adc
jge
dec
dec
lret
and
sbb
adc
add
xor
lahf
and
imul
inc
cmp
mov
xchg
lret
mov
out
push
cmp
lea
rolb
aas
test
mov
int3
addr16
and
mov
add
mov
out
fwait
cmp
fucomi
mov
push
fdivr
jns
popfw
cmp
and
std
test
out
cltd
loope
out
pushl
jp
jmp
push
sbb
or
nop
nop
rcl
cmp
dec
cmp
jae
xchg
or
cmp
sbb
jmp
ljmp
pop
cmp
lret
xorl
push
rolb
add
aaa
fxtract
stc
ljmp
addr16
mov
jl
sub
insb
pop
popa
lahf
xor
adc
xor
popf
mov
lcall
cs
xor
jne,pt
out
clc
pop
jmp
test
mov
sbb
fisubrs
mov
and
inc
mov
lret
lock
lods
ss
jge
sti
js
gs
and
or
xor
adc
incb
adc
lods
neg
nop
aas
inc
gs
push
xor
push
nop
adc
andb
je
ss
xorb
lcall
lods
mov
mov
xchg
lahf
je
xor
xchg
dec
enter
xchg
jbe
mov
mov
pop
fldenv
add
mov
mov
mov
pop
jae
mov
adc
or
cli
mov
pushf
rorl
add
xor
aad
jge
inc
pop
adc
xchg
jg
push
sbb
fdivrp
int
ffree
das
push
cmc
loope
ja
divb
mov
testl
movl
mov
inc
or
and
sub
dec
pop
cmp
sub
xor
push
int
mov
mov
lahf
and
in
stos
shl
xor
roll
int
test
out
imul
shrl
push
in
dec
or
lahf
ret
jns
test
add
imul
pushf
mov
add
sti
sub
out
aam
daa
push
loope
pop
adc
into
adc
xchg
or
jp
jne
cmpsl
stc
frstor
lahf
mov
outsb
dec
adc
dec
xlat
jge
fwait
mov
movsl
mov
and
mov
test
push
sub
dec
cs
inc
jb
aas
xor
adc
mov
xor
shrl
fmuls
xchg
out
roll
into
cmp
stos
inc
mov
lret
sub
xor
jl
push
jb
xchg
fnstcw
jnp
sub
pusha
lret
icebp
shll
mov
fadd
xchg
pop
inc
jmp
aaa
daa
pop
insl
out
pop
sub
popf
loope
movsl
fwait
loope
adc
fdiv
je
or
cltd
out
pop
int
cmpl
xlat
lcall
push
cmp
xor
inc
mulb
pusha
in
mov
js
aam
cmp
test
xor
andl
mov
test
aad
pop
and
std
enter
and
ret
dec
xchg
and
mov
aam
addr16
mov
pop
lcall
popaw
mov
xchg
lock
add
iret
leave
sub
inc
pop
ret
inc
mov
lea
ret
jp
or
insb
cmp
push
mov
adc
lods
mov
dec
addr16
insl
scas
das
dec
roll
out
xor
loopne
cmpl
stos
pop
cmp
pop
in
decb
xor
lcall
movsl
sbbl
mov
jne
frstor
data16
dec
mov
pop
pop
cs
les
in
jecxz
sub
loope
lds
mov
dec
repnz
jne
aad
data16
popa
andl
push
test
test
ss
movsl
popl
mov
sbb
mov
data16
fwait
and
and
or
ss
jnp
sbb
mov
mov
pop
xor
mov
mov
outsb
lea
icebp
mov
mov
mov
xor
fldl
shrb
xchg
xchg
push
enter
mov
test
aas
xchg
add
xor
pop
adc
pop
mov
in
xor
sbb
pop
jns
outsb
jno
sti
jl
out
js
dec
fs
xchg
scas
cld
movsb
imul
push
ret
cld
int3
icebp
out
hlt
imul
cmp
enter
inc
sarl
mov
leave
jns
jge
mov
sbb
addr16
adc
adc
mov
pop
cmp
loop
add
mov
mov
fcom
imul
lahf
out
xchg
lea
cmpsl
lahf
and
adc
cmp
jbe
leave
cmpsl
popf
fs
push
and
es
imul
insl
dec
add
mov
pop
mov
fs
cli
sub
ficompl
adc
add
outsb
inc
push
xor
pusha
pop
scas
xor
outsb
xor
data16
adc
mov
in
push
push
add
cmp
int
xchg
xor
das
sub
shr
shlb
cmp
lods
ret
punpckhdq
pop
vxorpd
icebp
loope
push
sbb
mov
jg
dec
xchg
push
fmul
push
push
mov
iret
aas
pop
sub
sub
adc
js
hlt
filds
inc
fsubl
dec
lods
pop
pop
dec
xor
jge
xchg
popf
loope
pop
sbb
movsb
pop
fimuls
and
shrl
adc
lcall
inc
daa
xchg
push
jns
and
add
inc
outsb
inc
bnd
out
mov
lock
ljmp
mov
lret
sub
sahf
pop
jne
cmp
loop
and
bound
lds
fcompl
lret
push
mov
sti
es
iret
sub
jae
ror
mov
fwait
movsl
shl
xchg
fs
aaa
cmc
dec
lods
repz
stos
sub
cmp
push
push
js
les
imul
aam
add
add
clc
sub
pop
icebp
lea
loopne
and
stos
je
or
mov
sarl
jle
xchg
jp
es
stc
dec
cltd
push
ja
xchg
push
push
xorl
push
not
cmpsb
iret
fsub
cmc
movsb
mov
scas
jp
jns
cli
aas
jo
sti
movsl
outsl
js
or
out
xor
loopne
mov
push
mov
icebp
or
ds
es
jbe
xor
lret
sahf
sbb
stos
and
notb
and
pushf
dec
repz
out
or
arpl
sub
dec
or
add
out
xchg
xor
add
call
addl
push
sbbl
push
out
mov
mov
lock
push
cld
dec
or
adc
cs
push
push
ds
jg
mov
jg
mov
stc
mov
push
or
mov
fisubs
into
aas
loopne
bound
add
jg
sub
add
add
dec
movsl
fdiv
dec
jae
fisubs
inc
fiaddl
push
jo
sub
add
mov
arpl
push
inc
leavew
lahf
inc
pop
push
mov
mov
jbe
lods
popa
mov
ja
lret
add
shrb
lahf
call
adc
push
push
mov
or
jge
mov
cli
jge
adc
je
lcall
xchg
xor
lret
pop
fbld
out
inc
dec
sbb
pop
push
adc
sbb
loop
in
or
push
sub
in
fsubrp
mov
stos
aaa
pop
dec
mov
rcrb
push
lret
sbb
int
pop
xchg
call
jb
data16
cmp
fbld
or
arpl
push
pop
cwtl
pushl
jbe
daa
js
dec
imul
aaa
xor
lret
sub
fiadds
aad
mov
icebp
jle
es
popa
cmpb
mov
stos
fsts
mov
lea
or
xchg
movsb
fidivs
leave
addr16
std
cmp
push
mov
pop
xor
repz
popf
cltd
sahf
xchg
xchg
fs
jmp
pop
daa
outsl
cmp
cmpsl
xchg
aaa
and
out
fwait
inc
popa
cmovp
xchg
inc
mov
fnstsw
dec
ret
pop
cld
out
cmc
enter
push
sbb
mov
not
lea
jbe
out
insl
mov
cwtl
push
push
jbe
cmp
lahf
cmc
pop
lret
aaa
lcall
test
sbb
iret
pop
loop
addl
adc
sbb
mov
shrl
inc
in
sahf
shl
mov
out
adc
or
push
jecxz
sub
push
out
dec
jecxz
in
notl
fnstsw
and
int3
pop
scas
fwait
cmp
mov
xor
lds
data16
scas
push
iret
cmp
fisubl
inc
mov
adc
out
test
jne
andb
std
push
mov
pop
addr16
jne
sbb
mov
lret
push
jo
push
adc
mov
out
cmp
repz
sbb
ret
test
insb
lret
mulb
and
mov
cmp
lret
cmpsl
push
or
dec
mov
jb
test
adc
push
cmp
jge
imul
popa
adc
xor
das
push
jae
dec
sbb
cmp
bound
add
lods
mov
mov
ret
xor
mov
idivl
jl
add
xchg
divb
mov
mov
div
testb
jecxz
and
and
addr16
push
mov
sub
cmp
xor
pop
inc
out
les
int3
shrb
stos
cld
mov
jbe
fdivs
cmpsb
aaa
mov
sbb
lret
stos
adc
adc
or
loope
jnp
inc
ja
decl
fsubl
xor
push
hlt
dec
arpl
mov
add
iret
cmp
xor
stos
aad
inc
adc
mov
inc
int3
cmp
add
lock
out
mov
test
dec
les
mov
out
into
fsub
mov
xchg
sub
mov
xchg
imul
or
gs
mov
and
mov
inc
popa
inc
scas
jo
push
xchg
mov
out
test
lahf
mov
lahf
push
dec
adc
push
ljmp
test
adc
fdivs
icebp
mov
ficomps
iret
add
popf
stos
jne
sbb
xchg
push
lods
fadds
lock
add
or
push
inc
and
lock
aam
out
popa
es
or
cmp
mov
hlt
and
inc
dec
xor
loop
xchg
inc
les
movsb
mov
jns
daa
in
xchg
int3
mov
mov
loope
les
sbb
mov
out
push
mov
jmp
mov
aaa
jl
cwtl
mov
push
inc
test
mov
sbb
push
sbb
mov
inc
inc
daa
aam
insl
sbb
test
mov
fisubs
sbb
mov
jb
inc
addr16
cmpsl
xchg
cld
insl
add
pop
and
mov
mov
jns
int
mov
pop
shl
cmc
jne
push
shll
outsb
mov
insb
jb
sub
shl
clc
sub
jo
mov
pop
in
pop
shll
shrl
inc
repz
dec
cltd
mov
sub
xor
fwait
in
sahf
repnz
out
scas
jge
addr16
out
lea
adc
push
xlat
cmp
movsl
cmp
pop
mov
xchg
aam
xor
leave
sbb
out
mov
test
mov
rcrb
add
aam
arpl
mov
fadds
mov
jl
cmpb
push
push
pop
mov
dec
push
sub
or
dec
leave
push
mov
xchg
sub
enter
push
shl
mov
add
push
fmull
adc
add
sti
push
daa
mov
dec
jns
xchg
std
je
add
shlb
out
mov
lods
rcll
inc
fs
rolb
insb
mov
push
repnz
mov
jp
add
push
shrl
cli
out
pop
dec
push
arpl
push
or
stos
jecxz
dec
jne
ljmp
push
xchg
inc
ljmp
or
or
clc
addb
lds
xchg
cld
xor
mov
push
xor
aaa
ss
or
adc
ja
sbb
dec
cld
pop
push
dec
stos
loope
dec
lcall
mov
cltd
and
bswap
mov
into
sbb
sbb
mov
mov
call
daa
icebp
or
jae
add
or
stos
aam
icebp
cmp
add
pop
dec
push
daa
inc
imul
cmc
inc
fmulp
rcr
mov
push
mov
bound
fists
mov
pop
and
pop
jnp
addl
dec
mov
inc
repnz
cmc
push
mov
in
fisubrs
int
mov
test
cli
xor
and
or
imull
pop
inc
pop
dec
pushf
push
shrl
mov
mov
rorl
sub
and
lahf
aaa
outsb
adc
xchg
inc
mov
nop
je
push
or
xor
aaa
ds
ja
inc
std
pop
imul
dec
addl
xlat
test
sahf
mov
test
cmpsl
dec
dec
mov
call
sbb
mov
jno
lret
and
sub
loope
push
lea
mov
and
and
fmul
cmp
inc
cmp
scas
cmp
arpl
xchg
sub
pop
imul
xor
xlat
ret
mov
daa
cmp
add
pop
rol
sub
pop
das
push
mov
adc
xchg
jge
fnsave
xchg
jg
dec
jns
push
cs
out
rorl
pop
mov
jbe
out
jg
xchg
hlt
push
jne
ljmp
std
jo
sbb
and
iret
jns
flds
xchg
or
int3
enter
push
xchg
pop
xchg
mov
repnz
jb
fwait
mov
test
je
rolb
and
loop
ss
test
cld
stc
out
movsl
cmp
cmp
jge
push
lods
cmpsb
ret
jmp
push
cmp
inc
stc
test
mov
int3
dec
mov
fidivrs
movsl
jno
popa
pop
xchg
cltd
adc
imul
add
push
mov
push
js
mov
sbb
mov
mov
fdiv
pop
jecxz
lahf
cltd
jge
insl
nop
cltd
cwtl
into
mov
sbb
aaa
add
test
test
xor
iret
leave
or
mov
cli
ljmp
repnz
adc
mov
jecxz
lret
push
popf
dec
shll
dec
out
je
and
adc
lods
mov
shrl
push
sahf
in
jecxz
cli
test
sbb
inc
shl
xor
mov
mov
fstpl
jo
clc
sbb
fprem
push
cld
mov
xchg
or
cs
adc
pop
dec
mov
les
and
lds
and
mov
add
loope
mov
sbb
mov
add
jo
mov
add
incb
mov
push
mov
dec
pop
loop
jp
pushf
xchg
inc
pop
psubsw
sbb
xor
mov
inc
and
push
mov
loop
jmp
adc
or
or
cmp
dec
loopne
push
cltd
test
xor
aaa
xchg
daa
cmc
and
arpl
sub
out
push
push
jmp
rolb
loope
push
jnp
dec
sub
inc
mov
adc
aam
arpl
pop
ret
loop
and
cli
adc
ret
in
dec
jbe
ds
cli
sub
lock
xchg
rorl
mov
jg
stos
repz
test
push
in
push
movsb
test
ret
sahf
lret
pop
dec
rcll
fsubl
in
push
daa
cmp
inc
cmp
aaa
into
testb
sbb
std
dec
sti
sar
rolb
arpl
xchg
or
push
push
jae
imul
notb
cld
into
push
pop
pop
push
dec
out
pop
add
sar
adc
cmpb
mov
xor
gs
add
pop
xlat
je
das
hlt
scas
push
insl
and
lock
add
out
int3
ret
push
movsl
pop
test
jp
fxch
adcb
notl
into
ret
pusha
jbe
mov
in
ss
add
mov
or
inc
add
or
and
lds
hlt
push
cltd
insl
pop
jp
cmp
notl
pop
repz
imul
sub
mov
xor
out
dec
pushf
lahf
shrb
xchg
sbb
push
xor
out
push
hlt
fsts
pop
test
cmp
ret
dec
clc
pop
insl
cmovg
incb
movsl
cwtl
sbb
popf
aad
dec
loopne
leave
jbe
mov
cmp
jae
jnp
into
hlt
dec
lods
cld
push
pop
je
inc
adc
cs
cwtl
test
pusha
pcmpgtw
mov
or
cmc
in
lock
adc
popf
pop
adc
into
dec
jl
je
mov
adc
sub
mov
mov
mov
mov
jle
mov
mov
enter
dec
inc
ljmp
and
push
cwtl
dec
push
push
lret
xchg
ror
test
icebp
mov
pop
xchg
sbb
xor
pushf
cmpb
or
adc
cld
ljmp
rclb
sub
icebp
pop
and
mov
xchg
sbb
out
in
push
mov
dec
cmp
jmp
fnstsw
mov
pop
mov
and
imul
das
dec
mov
jns
adc
fcomip
stos
popa
and
test
jb,pn
dec
hlt
imull
scas
add
add
push
mov
ficoms
xor
sbb
ror
or
sub
mov
fdivs
lods
mov
sbb
testb
mov
fcompl
inc
dec
inc
push
inc
hlt
outsb
or
add
mov
push
mov
outsb
push
test
cmp
xchg
xor
loop
mov
inc
inc
pop
mov
mov
and
jnp
outsb
mov
inc
out
push
cmp
test
push
dec
jecxz
sbb
push
popa
sbbl
aaa
or
xor
mov
jns
stc
lea
mov
mov
push
xchg
cmp
xor
gs
pop
mov
outsb
pop
mov
push
cmp
jmp
and
les
xchg
mov
mov
mov
jo
xlat
jl
jl
fiaddl
or
jae
mov
lea
mov
push
je
leave
clc
fldl
push
es
pop
push
mov
mov
lds
stos
pushf
sbb
pop
pop
je
js
pmulhuw
fwait
or
out
fldl
cmpsb
cvtpi2ps
scas
mov
push
sub
pop
cltd
sbb
xor
mov
mov
mov
out
faddl
sbb
pushf
fdivrs
sbb
scas
mov
xlat
mull
jecxz
sbb
outsl
fwait
outsl
cmp
adc
or
push
cmpsb
cmp
fnstcw
jl
ss
ret
mov
xor
or
lret
or
mov
adc
xchg
call
rcrl
inc
aas
mov
dec
adc
cmp
fldl
mov
dec
aaa
xor
mov
jle
repnz
jns
push
shr
or
loop
stc
loop
inc
rcll
test
xor
test
and
pop
into
pusha
cwtl
xchg
lcall
cmp
not
cmp
mov
push
pop
incb
dec
or
jl
into
inc
insb
and
mov
push
cmpsl
int3
shr
pushf
push
push
int
or
inc
pusha
andl
dec
mov
pop
cmp
or
stos
aam
test
pop
pop
movsl
xor
jns
push
imul
pop
jecxz
push
cld
ret
sahf
mov
rorb
pushf
je
push
stc
jbe
aad
test
test
inc
mov
push
inc
repnz
ret
push
cltd
or
jg
xchg
call
loope
test
shlb
sub
pop
mov
xor
ficoms
or
pop
cmp
popa
mov
lods
sub
frstor
mov
sbb
sarl
aad
lahf
xchg
mov
mov
lds
addr16
movsl
mov
shll
pushf
push
rcr
in
fucom
in
push
jb
mov
repz
outsl
and
ror
shll
jae
cli
push
fistpl
fs
enter
add
cmpsl
dec
inc
shlb
mov
sbb
push
test
xchg
stc
push
pushf
jmp
jae
hlt
cmp
or
mov
cwtl
cmc
mov
sti
sti
inc
sbb
dec
data16
dec
divl
xchg
sbb
sbb
lods
popa
in
jo
mov
jnp
mov
sti
les
daa
daa
aaa
mov
add
sahf
or
sbb
cmp
mov
jmp
dec
mov
cs
adc
lods
or
fidivs
ljmp
outsl
or
fcompl
mov
mov
fs
icebp
rol
mov
pop
out
jne
push
lea
lds
push
jmp
popa
sbb
push
packsswb
xchg
cli
mov
cvtps2pi
pusha
push
call
jle
jns
pop
insl
in
sub
cmp
xchg
test
negb
mov
loope
lods
bound
xchg
xor
and
ljmp
add
mov
js
shr
icebp
mov
movmskps
jne
add
sbb
and
rcrl
mov
adc
aad
xchg
lret
lret
mov
lahf
cli
stos
xor
lret
rcll
xchg
or
lret
pop
es
and
jbe
sub
pushl
push
js
cli
dec
lcall
adc
pop
cmp
cltd
adc
jle
push
sti
ljmp
pop
bound
daa
movsb
enter
add
inc
push
fisttpl
pushw
pushf
shrb
test
ret
shll
ljmp
jnp
ljmp
iret
outsl
xchg
sahf
mov
in
sarl
out
mov
xchg
stc
and
push
push
or
arpl
notl
cli
iret
jle
mov
cmp
jo
test
cmp
addr16
std
roll
leave
mov
adc
test
jg
enter
xor
aad
mov
add
pop
cmp
add
and
bound
out
push
dec
push
xchg
mulb
and
scas
push
or
orl
add
ljmp
push
cwtl
cmp
cltd
inc
jmp
sub
xorb
add
xchg
fldenv
jg
mov
repnz
and
inc
adc
mov
push
xchg
adc
dec
mov
jl
pop
shll
pop
loopne
or
es
out
in
je
mov
pop
imulb
inc
arpl
loop
jl
xlat
int
and
jg
repnz
or
rclb
mov
jge
das
popf
stos
out
cld
adc
cmp
rolb
mov
mov
hlt
push
fisubrs
cmc
jo
loopne
ret
push
enter
repz
push
leave
sbb
ja
je
sub
mov
adc
fists
cli
stos
sahf
xchg
cmp
cmpsl
aas
test
or
pop
inc
in
xorl
cltd
fwait
mov
dec
loop
pop
out
cmpsb
xlat
fisttpll
ljmp
sub
in
fdivrp
xchg
or
loope
xchg
fcoml
in
imul
sar
jns
pop
and
and
and
inc
sub
mov
xor
jge
ret
push
scas
negl
out
cmc
rcl
out
pusha
jae
adc
negl
nop
add
xchg
sbb
or
pop
adc
fnsetpm(287
insb
adc
test
mov
mov
and
and
mov
add
sbb
sub
lcall
push
push
jmp
iret
cmpsb
lds
jo
arpl
rolb
aam
sub
orb
pop
sbb
pop
jle
inc
mov
cmc
xchg
adc
push
out
mov
fistps
test
ret
scas
pop
mov
fiadds
stos
push
stos
subb
ror
mov
out
jl
test
xor
popa
in
cmp
jecxz
gs
adcb
iret
into
mov
test
lods
inc
or
mov
xor
fdivrs
incl
js
sbb
fwait
mov
push
jbe
sbb
shl
ljmp
cltd
mov
dec
daa
idiv
lcall
cs
cmp
imul
repz
jmp
fs
mov
mov
xchg
jns
mov
mov
or
add
pop
sub
rclb
xchg
in
or
popf
call
cmp
inc
loope
and
pop
push
xchg
cs
add
pop
mov
sub
adc
pop
dec
ret
lds
leave
aad
pusha
mov
xchg
and
or
sbb
sub
push
push
pop
inc
sbb
add
cwtl
fwait
jl
mov
orl
fbstp
fstps
mov
adc
sbb
ror
inc
and
sub
sbb
into
movsl
xor
test
pop
push
push
fmull
mov
inc
add
in
jnp
jle
clc
mov
dec
hlt
adc
jl
in
dec
mov
sbb
xchg
xchg
adc
movsl
sub
pop
inc
lods
mov
mov
sahf
fisubl
jne
scas
aam
movsb
aaa
inc
addr16
dec
mov
jg
inc
hlt
ss
mov
dec
adc
xchg
into
cld
pop
mov
aaa
add
mov
jmp
pop
mov
addr16
ds
dec
imul
out
mov
xchg
out
pop
cmp
mov
jl
les
and
xor
in
sbbl
inc
mov
dec
sbb
rclb
adcl
adc
stos
xchg
fcomp
test
int3
xchg
sahf
mov
adc
mov
test
je
fidivl
push
mov
sbb
rclb
xor
andb
lock
lahf
es
addb
test
lea
lret
inc
sahf
push
mov
arpl
popa
sub
pop
lods
sbb
push
push
adcb
cli
incl
subb
dec
jecxz
test
inc
adc
clc
or
leave
xchg
pop
in
sub
rcll
jle
outsb
push
stc
cltd
jnp
xchg
and
jb
shlb
subl
mov
xor
adc
test
pop
mov
inc
sbb
std
xchg
arpl
sti
adc
mov
add
adc
xchg
mov
mov
dec
dec
testb
hlt
sahf
daa
subl
jp
fstpt
inc
or
stos
xor
imul
scas
xchg
jne
sub
push
pop
pop
add
or
xchg
cmp
sbb
sbb
sub
cmp
push
test
idivl
movsl
or
insl
insb
xor
or
pop
clc
pop
or
cmpsb
out
push
jmp
mov
jno
mov
xchg
mov
sbb
lret
fldenv
faddl
fnstsw
fisttpll
mov
repnz
clc
push
inc
fs
cmp
mov
test
das
xchg
sbb
icebp
aad
jl
inc
jmp
and
and
ss
cmpsb
cmp
aam
sub
sarl
mov
inc
inc
push
sbb
test
lcall
data16
shll
mov
data16
test
into
sbb
movsl
fbstp
rep
sbb
mov
fildll
ret
out
loop
mov
cmp
mov
popf
rcr
mov
ss
pop
pop
cltd
add
xchg
sbb
mov
in
cwtl
mov
adc
add
pop
and
inc
sbb
out
in
rcrb
cs
or
add
mov
or
xlat
jo
movsb
adc
pop
jecxz
cmp
stos
into
flds
add
arpl
adc
xchg
daa
outsl
xchg
dec
cwtl
in
je
mov
arpl
rcll
adc
clc
fdivl
sbb
push
or
adc
mov
mov
bound
sbb
push
out
lock
cltd
cmp
lahf
push
or
fwait
shll
jle
cmp
inc
and
xor
cli
dec
addb
push
add
out
or
sarl
add
pop
add
inc
jb
xchg
call
xchg
mov
fldt
jle
movsl
cmpsl
fimuls
je
pusha
arpl
popf
shll
sbb
mov
add
js
insb
cmpsb
imull
xor
dec
mov
jmp
fbstp
push
aaa
jb
cmp
pop
jecxz
fidivs
inc
or
mov
inc
xor
xorb
es
jle
mov
loope
addr16
shr
push
xchg
inc
ljmp
mov
mov
inc
stc
cmp
inc
cmp
outsb
leave
out
into
divl
lcall
cmp
mov
aam
clc
insb
xchg
sub
fwait
and
push
enter
repz
mov
sbb
test
jo
cmp
test
cmpsl
inc
jns
mov
filds
jne
pop
jb
pusha
aaa
insb
lock
cwtl
loope
in
dec
push
cmp
mov
inc
arpl
daa
jmp
imul
cli
mov
scas
push
fisubl
add
xchg
int
das
push
jmp
push
int3
and
pop
pop
ds
loopne
mov
sbb
inc
loop
movsb
std
out
mov
jo
movsl
sub
sub
pop
and
lods
mov
jl
das
jbe
xor
sub
adc
aas
pop
mov
gs
icebp
jnp
cmp
aam
add
cmpb
jmp
aad
testl
mov
push
test
test
imul
movsl
lcall
jno
cmp
test
roll
in
jge
sbb
fstl
push
mov
push
xchg
int3
scas
dec
xchg
inc
cmp
jnp
add
into
pop
mov
popf
lahf
scas
sub
lds
test
setbe
into
mov
loop
push
std
dec
pop
jl
mov
inc
cmp
out
dec
sahf
dec
dec
xchg
jae
cmpsl
mov
cltd
gs
lock
and
fucom
dec
mov
adc
mov
fsubrl
fnsave
mov
and
lahf
dec
cmpsl
mov
stos
and
repz
jo
and
or
pop
sbb
mov
adc
and
fwait
enter
cltd
idivl
sbb
ljmp
hlt
iret
jp
xor
xchg
jbe
inc
shr
clc
sbb
mov
push
push
push
cmp
rolb
cli
shl
into
pop
mov
push
cltd
cmp
pop
stos
and
add
push
sub
inc
xchg
enter
mov
pop
cmpsl
data16
adc
lea
sbb
push
hlt
push
dec
aad
idivb
and
fcoml
jp
push
pop
lds
mov
mov
and
xchg
push
cmp
loope
xchg
lods
or
rorb
xchg
fldt
xchg
in
jge
sub
jp
cmc
push
sub
pop
mov
fs
sbb
scas
lds
mov
xor
div
mov
ret
sbb
and
mov
jle
push
rcrl
add
shll
mov
cmp
mov
xchg
inc
mov
dec
leave
in
fsub
inc
add
call
push
mov
jb
test
sysenter
sahf
push
les
and
ljmp
add
in
pushf
mov
pusha
xor
aam
pop
sub
lods
add
movsb
lret
push
rclb
loop
mov
repz
shl
adc
cmpsb
mov
test
pop
and
adc
aam
sbb
imull
sti
addr16
sbb
idivb
sbb
hlt
in
and
adc
enterw
lods
inc
inc
push
fisttpll
mov
fs
mov
inc
je
mov
inc
pusha
repz
aad
push
cmp
mov
arpl
jbe
fdivrs
out
ret
xchg
lds
sub
outsb
jecxz
iret
sahf
ficompl
or
xchg
das
lods
jl
in
cmpl
aaa
mov
mov
add
xor
and
test
cmp
add
cmc
arpl
jge
push
xchg
sub
dec
imul
aas
mov
xor
jle
pop
lcall
cmp
mov
mov
icebp
daa
or
jl
hlt
cmpsl
int
or
xor
or
aad
cmp
filds
jno
inc
fmull
inc
jne
push
inc
cmp
test
mov
mov
pop
jge
lret
call
repnz
or
cmp
lods
add
adc
push
inc
xchg
jg
adc
into
or
mov
loopne
gs
add
jae
pop
aam
data16
sub
jle
subl
and
dec
stc
outsl
rorl
lret
stos
dec
cmp
add
pop
lock
lahf
adc
test
fsts
adc
sti
and
flds
pop
mov
icebp
cmp
into
cmpsb
ljmp
mov
sub
clc
cltd
aaa
fwait
sbb
or
ja
test
mov
repz
xchg
jmp
lahf
xor
sbb
andl
mov
push
out
xchg
fidivl
movl
aam
aaa
add
daa
push
jne
cmc
imul
adc
sbb
sbb
sbbb
pushf
and
aad
inc
cmpsb
add
and
inc
data16
mov
rol
push
push
push
mov
testb
mov
pushf
pushf
xchg
push
loopne
aaa
sub
cs
and
inc
mov
out
repz
jb
inc
jmp
dec
inc
or
mov
inc
dec
jbe
mov
cld
hlt
aas
icebp
mov
xor
leave
xchg
push
subl
mov
xchg
xchg
std
dec
es
adc
mov
pusha
jno
mov
xor
dec
rclb
pop
loop
decb
addr16
pop
jae
jle
sub
push
sub
ret
int
add
jp
mov
inc
dec
outsb
cmpl
dec
and
imul
rolb
mov
fcmove
sbb
or
push
outsb
dec
add
sti
popf
adc
cmovbe
repnz
pop
ja
out
cmp
lret
jmp
mov
dec
fs
jne
test
sbb
loop
jecxz
out
in
xchg
or
pusha
xor
and
sub
pop
shl
imul
dec
mov
popa
push
das
fwait
add
sbb
mov
fdivs
jmp
jne
fs
imull
adc
pop
adc
out
jl
mov
in
icebp
fidivs
sub
lretw
sub
mov
push
dec
in
out
and
fisubl
js
jb
sub
adc
dec
mov
cmp
pop
andb
cmpsb
sub
dec
dec
in
fnsave
mov
dec
sub
pop
xor
ret
sbb
sbb
adc
arpl
xchg
jne
add
xor
xcrypt-cfb
cmpsl
and
dec
or
cmc
dec
add
dec
or
mov
cmp
out
and
and
add
dec
js
imul
mov
add
cmp
test
hlt
aaa
mov
rcr
lods
dec
gs
xchg
aas
int
in
jo
pop
frstor
dec
cwtl
push
add
jle
inc
not
and
dec
mov
pop
sbb
adc
arpl
add
out
lcall
test
ljmp
popf
das
pop
xor
lods
outsb
push
ret
repz
sbb
dec
push
mov
xchg
xchg
inc
mov
adc
out
fwait
xor
outsb
shll
xchg
aaa
lahf
fnsave
mov
stos
test
pop
pop
and
jnp
add
arpl
addr16
pop
xchg
rcrl
adc
cmp
xchg
or
lea
scas
popf
int
fsubl
lcall
jbe
pushf
push
xlat
lcall
test
ret
cmp
clc
test
mov
xchg
mov
inc
mov
adc
repz
dec
in
or
aad
push
adc
lea
ret
xchg
daa
sub
adc
je
outsl
mov
inc
ss
mov
adc
aad
xchg
fimuls
fsubs
addr16
sub
daa
xchg
jno
ret
jecxz
in
add
jecxz
push
sub
xchg
jmp
popf
lahf
popf
test
adc
bound
outsl
cmpsl
lahf
xchg
addl
ljmp
push
sub
jle
ss
push
into
lock
xor
call
movsb
sti
and
into
out
sub
jge
shll
nop
push
gs
fisubl
inc
sub
enter
push
pop
aam
mov
nopl
mov
cmp
outsl
repnz
xor
adc
jns
int3
es
jge
lock
lock
std
jle
cs
cmp
lahf
dec
push
ret
fbld
in
cmp
cmovns
in
inc
mov
loop
stos
stos
lahf
in
addr16
lret
repnz
movsb
dec
call
mov
xor
cmpsb
cmpsb
das
mov
sbb
lods
js
out
cmp
mov
or
cwtl
rcrb
and
stos
pop
ja
sbb
movsl
movb
xor
imul
fadd
xchg
addr16
aam
cmp
xchg
loop
cs
test
xlat
lods
ja
pop
and
and
and
add
xchg
add
outsb
dec
push
mov
mov
sbb
pop
mov
mov
inc
push
inc
shlb
mov
cmp
mov
inc
orb
dec
or
arpl
mov
loop
and
ret
jne
repnz
repnz
std
push
jae
aaa
mov
icebp
repnz
push
sub
add
jecxz
xchg
mov
cmp
dec
es
shlb
or
fistl
out
rcll
pop
das
and
inc
xor
mov
push
mov
out
test
ret
add
inc
sub
cmpsl
rolb
leave
gs
pop
xchg
mov
sbb
imul
add
das
pusha
sbb
ss
sbb
insl
mov
push
pop
sub
add
and
insb
subb
dec
cmc
sub
push
and
sbbl
sub
fistl
and
out
add
dec
lock
orl
mov
pop
inc
sub
scas
jp
inc
sbb
jbe
pop
addr16
cmp
mov
repnz
imulb
in
adc
cmpsb
dec
mov
dec
insl
dec
xor
shl
xlat
pop
loope
mov
and
sti
jp
mov
or
push
movsb
xor
cmp
es
mov
cmpsb
daa
fisubrl
lds
mov
push
and
je
pop
ret
sbb
orb
mov
fisubl
out
in
pop
xchg
das
xchg
repz
and
call
xchg
in
adc
mov
xorl
xchg
aas
mov
xlat
mov
pop
addr16
adc
cmc
js
mov
inc
jg
repz
in
dec
rcll
jno
jge
les
fcom
and
divb
jecxz
push
pop
hlt
mov
dec
inc
in
mov
push
cli
jmp
mov
inc
jbe
push
icebp
jne
add
cmp
jae
pop
xor
clc
fldt
pop
lcall
xchg
push
call
xor
rclb
sub
repz
cwtl
sub
out
adc
pop
cmp
shrb
mov
adc
xchg
outsl
cmp
adc
insl
push
outsl
mul
ret
and
out
sahf
lret
in
popa
ffreep
outsl
dec
pop
popf
shlb
ljmp
fcoml
add
imul
ret
jbe
lods
cli
repz
fnstenv
adc
outsb
add
adc
pusha
sub
mov
jb
or
push
or
cmp
mov
or
pop
testb
pushf
test
fcoms
dec
pop
loop
mov
insl
jbe
dec
test
jecxz
sbb
insl
adc
popa
lea
xchg
mov
sub
shll
jnp
mov
daa
jge
add
das
or
or
cmp
into
adc
ret
push
jns
mov
int
loope
sbb
dec
xchg
mov
pop
jmp
sub
rcll
xchg
sahf
and
dec
mov
enter
add
push
test
faddl
push
mov
test
xorb
pop
mov
outsb
daa
lock
mov
cmc
rclb
xchg
sahf
mov
test
popa
cmp
mov
mov
mov
ljmp
sahf
mov
pop
popa
cwtl
es
jbe
push
mov
jmp
sbb
fnstsw
mov
in
and
or
sbb
lds
dec
xchg
pop
shlb
push
mov
mov
xchg
dec
fcmove
stc
mov
hlt
dec
pop
arpl
push
movsl
out
orb
push
hlt
mov
adc
sahf
xor
mov
int
pushf
arpl
mov
ret
adc
pushf
jge
push
xor
sub
pop
in
pop
jo
sbb
xchg
push
fwait
pushf
fmull
fdivrs
rcll
incb
jno
xlat
xchg
inc
xlat
jge
dec
int
jmp
flds
ljmp
les
dec
insl
cmpsb
insb
fnsave
movsb
inc
iret
movups
mov
add
xor
mov
xlat
pushfw
mov
pop
mov
fimuls
gs
push
dec
mov
add
adc
xchg
scas
inc
mov
aas
and
fidivs
jne
ljmp
pop
jo
pop
popa
clts
xchg
dec
inc
dec
mov
ljmp
adc
subb
mov
add
inc
mov
pop
push
mov
jge
mov
loope
xor
mov
pop
or
scas
push
pop
and
xorb
in
out
clc
and
lahf
ss
jecxz
daa
dec
jne
and
addb
xor
add
enter
fs
xlat
ja
jge
or
xchg
cld
std
jmp
adc
jle
cli
push
ljmp
adc
push
cwtl
pop
ret
inc
mov
dec
pushf
mov
or
ss
adc
in
mov
sti
xchg
mov
sub
jne
adc
and
dec
insb
adc
inc
pop
dec
push
lret
mov
xchg
push
ja
stos
aad
addr16
rorb
mov
inc
add
pop
aam
pop
mov
cmp
mov
mov
cmpsl
leave
clc
push
mov
mov
push
cwtl
sub
repnz
faddp
pop
sti
pop
lods
cmp
pop
ror
adc
dec
and
jne
cmp
and
or
mov
loopne
fisubs
test
addr16
dec
pop
fsts
outsl
pop
xor
dec
xor
ljmp
loopne
cwtl
dec
mov
xchg
test
lcall
das
loop
nop
dec
ret
mov
loope
mov
jge
aam
push
int3
push
xchg
ret
xor
pop
mov
loopne
adc
sub
je
push
daa
cmpsb
arpl
hlt
xchg
insb
incb
fistpl
mov
jne
mov
lods
daa
rol
sub
imul
cmp
les
jno
out
inc
adc
mov
cmc
dec
xchg
or
dec
jns
adc
dec
rorb
test
cli
mov
sub
insl
xchg
xor
icebp
jl
daa
cmp
jle
movsl
adc
fildl
repnz
pop
adc
test
jge
sub
jne
repnz
add
jne
push
cmp
xor
dec
aam
jge
mov
push
xchg
adc
imul
mov
test
repnz
les
dec
and
mov
out
stc
or
sub
dec
inc
sbb
pushf
xor
mov
push
adc
inc
arpl
lds
call
lss
cltd
xor
or
pop
ror
into
jnp
mov
inc
mov
ljmp
notb
ret
addl
in
jo
ret
lcall
in
jno
mov
js
adc
cmp
jb
inc
sar
cwtl
pop
sbb
inc
out
addr16
pop
jle
icebp
sub
pusha
inc
add
out
sbb
or
rorl
push
dec
jns
fdivrl
jmp
mov
aaa
dec
xchg
aad
ljmp
enter
shrl
add
sbb
loopne
xor
adc
or
sbb
sti
clc
jo
out
rorb
dec
adc
outsb
int
mov
xor
mov
sahf
shrl
mov
inc
xor
popf
out
adc
aas
stc
and
dec
sub
dec
inc
out
pop
sub
hlt
mov
mov
ror
sbb
mov
lods
fistpll
es
sbb
nop
xchg
ja
ret
insb
push
sbb
push
mov
ret
or
inc
lahf
push
enter
lcall
and
cwtl
push
repz
xor
lock
cmp
pop
popf
insl
jno
xor
jmp
jns
sbb
cmp
xchg
jns
xor
xchg
sbb
jp
sbb
mov
insb
cmp
andl
lahf
in
xor
push
jns
cmp
rdmsr
jno
inc
jns
stos
cmpsb
xchg
stos
fs
das
ds
aad
mov
and
or
jne
dec
bound
and
and
int3
lea
lahf
sbb
jns
jae
or
cmp
jb
test
cli
inc
cs
xchg
mov
xchg
iret
out
movsl
mov
or
adc
mov
lret
add
mov
jecxz
sahf
arpl
fdivl
ret
mov
loop
push
cmp
mov
scas
cmpsb
jne
stc
dec
jg
dec
sub
jecxz
cmc
mov
in
clc
push
inc
adc
inc
pop
mov
pminub
iret
add
fldl
insl
mov
pop
mov
cmpsb
mov
test
scas
mov
cmp
push
push
sub
leave
dec
and
int3
mov
mov
jns
mov
add
or
out
xchg
lret
sub
test
fyl2x
xchg
sub
push
fisubl
push
sub
movsl
dec
ret
idiv
cmp
imul
pop
jge
mov
lret
dec
mov
out
mov
jns
stos
leave
push
sub
mov
pop
and
push
add
mov
xchg
mull
loop
dec
ss
xchg
arpl
sbb
sbb
mov
pop
insl
out
xor
pushf
xor
mov
jns
dec
stos
pop
inc
dec
add
insb
fstps
add
loop
iret
fiadds
inc
decb
sti
and
mov
insb
cmpl
into
inc
cld
push
int3
sub
sbb
inc
mov
dec
popf
cmp
mov
scas
mov
aad
mov
sarl
add
div
mov
and
cmp
pop
push
cmp
addl
pop
pop
xchg
loopne
iret
icebp
test
mov
js
aas
mov
mov
sbb
aaa
pusha
icebp
scas
shll
adc
jno
insl
sahf
jns
enter
adc
stos
adc
xchg
pop
orb
stos
add
adc
mov
lret
push
lret
mov
rcll
dec
int3
lret
lea
mov
dec
ljmp
cli
ret
cwtl
mov
shlb
ss
test
ljmp
test
cli
lods
pop
pop
fs
mov
add
cltd
mov
push
test
fs
mov
movsb
sbb
jle
repnz
push
jg
adc
mov
insl
ds
push
or
mov
hlt
inc
jmp
sbb
jnp
mov
movsb
jnp
outsl
call
xorl
loope
sbb
fwait
pop
shlb
js
pop
push
outsl
dec
movsb
adc
notb
inc
sbbl
int3
adc
lock
inc
mov
add
push
adc
ds
fsubrl
adc
pop
sub
fistl
daa
inc
push
cmc
xor
adc
call
sub
cwtl
test
in
out
adcb
inc
lods
fildl
pop
sub
hlt
jnp
mov
test
adc
rcll
insl
mov
adc
dec
push
xchg
outsl
xchg
insb
and
rcrb
mov
aaa
push
dec
and
int3
and
incb
sti
and
push
xchg
xchg
dec
in
mov
jl
jne
sub
sbb
