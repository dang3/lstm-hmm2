xor
inc
ret
push
push
call
xor
push
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
mov
push
call
pop
orl
orl
call
mov
mov
call
mov
mov
mov
mov
mov
call
call
cmp
jne
push
call
pop
call
push
push
call
push
call
mov
mov
lea
push
pushl
lea
push
lea
push
lea
push
call
add
mov
cmp
jge
push
call
pop
push
push
call
call
mov
mov
pushl
pushl
pushl
call
add
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
call
ret
jmp
jmp
cmpl
jne
jmp
push
push
pushl
call
add
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
jmp
push
push
call
pop
pop
ret
xor
ret
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
mov
lea
push
mov
call
add
mov
mov
addl
ret
jmp
jmp
add
ret
ret
xor
ret
push
add
add
ret
add
popl
push
pop
push
xchg
push
xchg
add
push
pop
pop
push
xchg
push
xor
pop
xor
push
popl
pushl
ret
jmp
ret
ret
push
push
push
push
push
push
push
push
push
push
push
push
call
add
pop
pop
pop
pop
pop
pop
pop
ret
mov
ret
pop
push
xchg
ret
xchg
popl
push
ret
push
push
pop
push
pop
mov
mul
xchg
xchg
xchg
add
add
ret
push
xchg
add
ret
push
xchg
add
ret
push
add
add
ret
push
pop
ret
add
push
mov
push
push
push
xor
push
mov
xchg
mov
call
push
push
call
push
call
push
call
push
push
push
push
call
push
push
push
call
push
push
push
call
push
push
call
push
call
pushl
xchg
add
push
push
call
push
call
push
call
push
call
push
push
push
call
push
cmp
jae
ret
add
call
pop
decl
jne
mov
call
test
jne
xor
mov
jmp
cmp
jg
sub
cmpl
jge
add
xor
mov
mov
mov
add
mov
or
mov
mov
mov
add
mov
incl
sub
add
jmp
mov
call
mov
mov
mov
sub
cmp
jl
mov
add
xchg
call
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
add
mov
mov
andl
mov
mov
mov
or
mov
mov
mov
add
mov
incl
sub
add
mov
add
pop
pop
pop
pop
ret
push
mov
add
push
mov
cmpb
jne
call
test
je
cmp
jle
xor
mov
jmp
xor
push
push
pushl
mov
cmpb
je
push
jle
jne
fstpl
mov
or
add
mov
mov
lods
xor
insl
scas
sbb
push
adc
stos
lret
cmp
inc
mov
sbb
push
mov
jne
push
js
cltd
mov
lret
push
xor
iret
pushf
add
mov
enter
add
mov
iret
push
ret
add
aaa
dec
mov
imul
adc
sahf
sbb
test
andl
inc
or
shrl
subb
sbb
inc
cmp
shll
dec
lock
pop
sbb
leave
cwtl
sub
or
rcrb
in
adc
xlat
add
inc
jns
pop
pop
push
pop
sbb
jnp
sbb
xchg
adc
jne
and
add
mov
jae
mov
jns
or
ljmp
pop
faddl
add
in
imul
fnstenv
stos
dec
int
mov
mov
insb
or
bound
enter
dec
inc
sbb
inc
cmp
jae
imul
sbb
arpl
rcl
or
sbb
xor
xchg
js
add
xchg
fs
fbstp
outsb
push
sub
cld
ret
jne
mov
and
add
dec
xlat
lods
es
mov
cld
mov
push
popa
test
fs
ss
adcb
xor
or
testb
mov
sti
add
push
mov
aaa
loop
clc
inc
mov
adc
xor
mov
push
das
inc
sbb
inc
pop
test
xchg
testb
adc
imul
cltd
in
imul
push
jne
inc
push
dec
ror
mov
cmpsl
out
mov
xor
add
jne
movsb
int
leave
jl
sub
cmp
add
xchg
mov
sahf
test
out
add
loope
mov
shll
xor
rol
cmpsb
loopne
pusha
xor
lcall
mov
andl
fnstenv
pop
ljmp
in
jno
mov
and
dec
js
inc
add
in
sub
repz
stc
loop
shr
sub
insb
int
xchg
imul
in
sarb
pop
mov
leave
gs
fldl
adc
adc
jecxz
data16
mov
push
xor
push
and
jae
sub
cmc
mov
push
stos
mov
mov
sub
xchg
mov
imul
pop
and
sti
push
in
mov
out
xor
mov
cmp
cs
hlt
dec
lahf
out
lds
cs
test
lcall
add
aad
push
fidivrl
movsl
mov
cmp
inc
repnz
in
sub
jmp
rcrb
xor
or
inc
and
push
pusha
scas
mov
jnp
loop
filds
out
in
mov
rcll
pop
test
add
dec
mov
stc
xor
mov
daa
fisubl
insl
out
jno
ficomps
dec
push
sqrtps
test
pushf
lahf
loopne
test
add
mov
pop
pusha
push
test
dec
stos
cmp
les
addr16
into
mov
std
dec
test
push
sbb
mov
push
jbe
mov
mov
xor
xchg
push
repnz
mov
jne
lds
push
inc
mov
lods
pop
daa
sub
mov
in
addr16
loop
inc
stc
addr16
pop
jle
inc
imul
sbb
enter
aaa
ret
sub
xor
mov
scas
outsl
popf
test
das
push
mov
out
sahf
jp
xor
test
and
lret
pop
add
lret
lret
mov
cmpsl
out
repz
andl
xchg
sub
test
mov
imul
into
test
addl
repnz
stos
movl
mov
inc
mov
mov
jecxz
fimuls
idivl
and
jbe
push
fistpll
cld
cmpsl
or
test
clc
pop
fdivrl
sub
mov
daa
push
nop
pushf
adc
sbb
cmp
jecxz
jns
pop
ja
test
outsb
push
adc
iret
mov
sbb
cmp
pusha
jp
sub
sub
cs
cmp
xor
sbb
pop
ja
lahf
cmp
inc
fsubl
lcall
std
dec
hlt
xchg
adc
repnz
pusha
lds
sahf
inc
inc
es
leave
mov
lods
jnp
mov
into
adc
sahf
jno
cmp
jno
pop
mov
outsw
push
jae
call
pushf
or
cmc
cltd
fiaddl
test
in
and
push
or
push
jns
inc
xchg
lds
inc
inc
scas
fucomi
popf
cmpsl
nop
outsb
mov
notl
xchg
and
pop
mov
aas
push
mov
hlt
repz
mov
lods
sti
add
enter
pop
js
mov
push
jno
adc
push
add
daa
test
sbb
loope
mov
rorb
sar
sbb
test
sub
cmp
cmp
cmp
lea
xchg
stos
dec
orl
es
sbb
mov
adc
lock
fists
sbb
or
cmp
pusha
cmpsb
lahf
cli
mov
in
les
xorb
mov
jne
aad
push
test
out
fildl
neg
jno
jmp
in
or
mov
mov
push
push
mov
loope
push
lahf
in
sbb
xor
and
arpl
ljmp
out
sbb
jge
mov
imul
mov
jb
lcall
pop
push
push
sub
adc
cmp
lods
out
lret
outsb
adc
out
lods
and
insb
cmpsb
and
fsts
outsb
movsl
push
dec
pop
and
stos
xchg
lock
jb
pop
in
pop
daa
pop
bound
xchg
xorl
jae
stos
arpl
popa
std
sbb
shll
add
not
fiadds
int3
inc
fnclex
or
xor
adc
lcall
lods
scas
mov
cwtl
xor
xor
shl
cltd
mov
je
repnz
rcr
xchg
adc
jg
jbe
mov
adc
int
fmul
add
inc
add
test
insb
loop
mov
pop
test
mov
shll
sti
push
xchg
pop
inc
jo
dec
adc
out
dec
outsb
cmp
das
into
icebp
call
pop
adc
and
addb
pushf
xchg
fildl
les
or
mov
sahf
outsl
hlt
clc
scas
pop
cld
add
cmpsb
scas
nop
minps
pusha
fcmovne
movsb
mov
scas
test
dec
fisttps
clc
in
rcl
fisttps
push
mov
xlat
adc
jne
xchg
xor
or
scas
xchg
jmp
xor
mov
mov
pop
pop
aas
dec
fwait
insb
add
lret
xor
jmp
fisubs
fwait
xchg
repnz
add
xchg
inc
cli
sub
sbb
adc
jl
add
xchg
clc
sbb
mov
imul
cmpsl
fsubs
lods
je
pop
or
lcall
sbb
test
ljmp
stos
lret
jecxz
cmp
mov
pop
inc
sub
mov
adcl
out
sahf
jbe
or
jmp
hlt
or
add
mov
pop
jge
mov
fsubrs
movsb
out
mov
js
vpcmpgtb
adc
call
imulb
and
cmp
iret
arpl
js
xlat
stc
imul
leave
icebp
out
sub
inc
fsubrs
or
cwtl
pop
xchg
push
lods
mull
lret
enter
out
rcll
rep
jns
rorb
int
stc
push
hlt
add
mov
scas
xor
repz
inc
daa
int3
lods
mov
lret
xchg
outsb
mov
cwtl
or
sub
test
dec
loop
and
adc
cltd
cld
pop
inc
mov
lods
pop
push
pop
xchg
inc
sbb
dec
cwtl
inc
bound
cli
xor
repz
sub
sbb
mov
mov
cmp
je
nop
inc
daa
les
and
pop
data16
jae
cmp
in
pop
jg
mov
adcl
jl
inc
jg
mov
xchg
shlb
out
lds
fnstenv
aas
call
aad
lods
movl
gs
ja
and
mov
je
imul
notl
clc
cmc
test
xchg
cs
mov
add
in
test
sbb
jae
movsl
std
pop
inc
or
or
pushw
arpl
fldl
loop
xchg
jge
adc
dec
gs
fists
pop
sub
cmpsl
pop
into
in
pop
jle
and
mov
mov
dec
sbb
adcb
loop
js
testb
sbb
stos
cmpsl
push
shr
ja
sbb
clc
ret
pusha
inc
push
mov
sub
dec
jno
js
dec
sarb
popf
pop
mov
ljmp
mov
adc
xchg
or
mov
sbb
lret
xchg
add
push
scas
enter
aad
into
push
sbb
lahf
fwait
aas
fmul
les
cwtl
xchg
lea
out
cmc
fwait
add
sbb
js
in
adc
adc
lcall
xor
cwtl
sbb
push
mov
movsb
insl
jae
xorl
adc
or
scas
int
push
iret
sub
test
xchg
lret
ja
adc
cmpb
rclb
push
imul
sub
and
pop
addr16
mov
stc
adc
cmpsb
add
enter
mov
fld
adc
stos
xor
xor
pop
adc
dec
inc
dec
es
lea
cmp
dec
push
pop
mov
sbb
ret
sub
fcomip
scas
fadds
mov
pop
out
mov
pop
test
mov
adc
jle
jp
roll
pop
dec
mov
lock
test
rolb
inc
scas
jmp
jge
fsts
inc
jle
fwait
test
xchg
test
adc
pop
scas
pusha
dec
mov
or
sbb
xchg
cmp
scas
sbb
mov
outsb
pop
inc
push
push
jne
notl
xor
out
arpl
shrb
jl
xchg
lods
andb
mov
jns
jae
pusha
xlat
pop
mov
aam
insl
jge
mov
imul
mov
ror
leave
popf
in
imul
cmp
hlt
bound
add
mov
sbb
cltd
sbb
nop
inc
arpl
sub
arpl
pop
dec
jne
int3
rolb
subb
lds
xchg
pop
sub
and
xchg
push
cwtl
xor
imul
inc
dec
scas
jb
adc
aad
push
iret
jge
mov
out
adcl
pop
bound
xchg
cmp
rolb
lds
pop
lea
iret
hlt
frstor
adc
mov
and
add
out
divb
das
nop
xchg
incb
mov
push
imul
push
push
movsl
and
outsl
decb
out
daa
in
inc
xchg
push
dec
cmp
inc
adcl
jo
and
stos
pop
xorb
mov
sbb
outsb
jle
hlt
mov
lock
xchg
ret
ret
imulb
jae
leave
cwtl
push
pop
repz
dec
pop
lcall
push
orl
xor
inc
sub
pop
push
add
add
xchg
orb
test
hlt
inc
inc
jns
or
inc
cli
loopne
sbb
fcmovu
out
dec
mov
mov
loopne
push
lock
cld
jge
test
push
cs
jle
jg
cmpsl
mov
push
and
adc
inc
xor
out
lds
pushl
adc
mov
std
sbb
dec
repz
dec
iret
enter
jno
mov
sahf
out
out
test
mov
cld
movsb
shr
sbb
cmc
sbb
insl
cmpsl
jne
repz
lock
mov
xchg
dec
inc
bnd
lds
fs
xor
sbb
in
and
jl
sub
pop
cld
int3
jnp
in
pop
sub
mov
lods
mov
push
add
and
mov
sub
pop
es
fsubrp
je
adc
push
lock
ds
out
leave
push
in
leave
cs
mov
inc
jne
xorl
enter
addl
shlb
mov
inc
push
test
push
inc
mov
sub
loop
jecxz
in
dec
adc
jp
loop
jo
imul
aaa
lds
sbb
cs
imul
ja
push
jae
pop
push
pop
cwtl
lcall
mov
xchg
pop
sbb
adc
xor
ficomps
or
cmpsb
push
stos
es
cwtl
mov
hlt
sarb
mov
jo
cmp
fidivs
out
and
sbb
data16
daa
and
mov
and
aam
mov
cmp
add
movsb
das
mov
out
cmp
push
inc
mov
outsl
js
lret
pop
test
les
fisttpl
pop
dec
insb
mov
js
add
aaa
aaa
rol
jo
into
dec
mov
mov
mov
insb
cmc
insl
outsl
scas
add
clc
inc
jle
adc
xchg
adc
lret
or
out
mov
jmp
shrl
sbb
out
and
rcl
mov
dec
jle
fs
aaa
pop
imul
or
mov
xchg
jo
mov
xchg
popa
mov
dec
push
sbb
inc
xor
fwait
cmp
add
test
leave
loope
push
xor
iret
int3
ss
mov
lock
rclb
adcb
aas
fcmovbe
lahf
pop
fwait
movsl
xor
sbb
js
loopne
fistps
jge
outsb
lcall
sbbb
sbb
imul
loop
pop
pop
ljmp
cwtl
inc
inc
out
sub
mov
fimuls
orl
pop
mov
xchg
xlat
add
mov
testl
addb
clc
xor
sbb
imull
jecxz
mov
fmulp
sub
ja
pop
adc
int3
adc
sti
pop
adc
into
shrl
pop
pop
daa
out
sub
add
and
push
or
mov
fdivl
mov
sbb
arpl
mov
aaa
or
mov
mov
enter
faddl
pmaxub
fadds
gs
les
jae
mov
cmpsb
aad
sub
jg
adc
cltd
pop
in
test
nop
dec
mov
fwait
imul
popa
xchg
push
aam
lods
loope
divl
xchg
jecxz
jno
leavew
and
and
and
insl
push
punpckhbw
jae
jg
jge
or
movsb
mov
sub
pop
sub
xchg
xor
add
insl
xor
add
ds
bound
push
pop
jns
pandn
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
lds
mov
push
mov
mov
xchg
mov
sti
cmp
lret
push
sbb
call
je
int
rcll
mov
dec
cmp
jmp
in
dec
scas
outsb
js
jnp
out
stc
jb
stos
cmp
out
insb
stos
xchg
cmpb
fisubl
sub
repz
inc
lahf
pop
inc
loop
pop
mov
fistl
popf
push
adc
sub
das
mov
push
test
xchg
repnz
and
mov
push
jno
inc
lods
pop
ljmp
push
aam
push
ljmp
aad
ss
movsb
mov
pusha
inc
in
enter
pop
pop
push
lret
mov
mov
outsl
adc
loop
push
push
std
xchg
repz
jns
dec
add
inc
jp
and
imul
sbb
xor
sub
fstps
dec
sub
pop
cmp
mov
inc
xor
loop
lods
or
enter
je
dec
and
fisttpll
fnstsw
fsts
cmp
arpl
ds
and
adc
sub
into
add
in
sahf
push
or
test
mov
and
fcoml
cwtl
fiadds
push
notl
js
int
pop
std
sbb
dec
scas
loope
data16
test
or
dec
mov
int3
cmp
jecxz
mov
mov
dec
loop
daa
jns
shl
ja
cmpsl
push
cmp
xor
pop
xor
hlt
pop
and
repnz
sub
pop
fnsave
enter
dec
fbstp
pop
rcl
cmc
push
xor
cmp
inc
jl
scas
add
in
outsb
fsubl
pusha
lds
xchg
push
cmp
rorl
pop
inc
aas
mov
scas
push
enter
push
fsubs
push
jbe
rcrl
pop
mov
xchg
sbb
out
sub
scas
sbbb
cld
and
mov
mov
xchg
iret
repz
cmpsl
xchg
push
xorl
mov
pop
push
dec
cmpsl
enter
mov
test
sub
cwtl
jb
mov
add
in
cmpsb
push
shrb
nop
cli
dec
in
sti
sub
push
subl
lret
ljmp
mov
sub
in
mov
out
in
push
push
out
sbb
mov
pop
rclb
aas
xchg
sbb
bnd
push
push
and
pop
mov
ds
or
and
dec
fiadds
insl
in
sahf
daa
test
mov
jecxz
jae
cmpl
icebp
push
mov
and
aaa
mov
xchg
scas
lret
dec
mov
jle
inc
dec
mov
inc
test
std
dec
cli
dec
and
mov
test
cmp
dec
cmp
outsb
adc
outsl
scas
shll
push
pop
push
pop
add
cmp
repz
sbb
cmpsl
js
repz
jne
mov
pop
inc
scas
test
pushf
mov
loop
out
test
pop
jg
out
push
stos
fwait
jo
xor
mov
insl
pop
push
shll
into
xchg
rorl
in
cld
sbb
mov
es
les
mov
xor
and
pusha
enter
movaps
cmpsl
and
adc
pop
sbb
in
js
pop
pop
std
sahf
sbb
and
pusha
push
fwait
xchg
sahf
jae
jmp
in
jmp
movsl
out
mov
and
jnp
xor
je
arpl
nop
xor
hlt
iret
pushf
data16
scas
lahf
xor
mov
mov
gs
ljmp
es
mov
imul
cli
shr
daa
gs
jnp
aam
gs
fldenv
in
cmp
push
ss
push
push
mov
jge
sbb
filds
xor
mov
cmp
mov
jmp
cmp
ss
xor
cmp
fwait
jl
gs
repz
shll
fimuls
sbb
in
mov
sahf
inc
xor
push
in
inc
int3
dec
cmp
iret
test
cld
and
cmpsb
out
adc
push
or
push
inc
subb
movsb
int3
jge
mov
nop
pop
nop
pop
pusha
ljmp
mov
in
pop
mov
pop
loopne
orb
or
lret
xchg
int
cmovne
xchg
add
fxch
xor
jg
std
addr16
lods
cld
stc
mov
shrb
das
ret
dec
repz
jae
arpl
inc
xor
jle
es
pushf
mov
mov
js
jb
outsb
mov
inc
in
dec
ja
sbb
stc
adc
lea
movsb
mov
enter
inc
jp
xor
in
mov
repz
xchg
sub
stc
push
arpl
test
mov
mov
jp
pop
daa
cmpsl
xor
cmpsb
push
and
jmp
ss
push
test
iret
inc
shll
jbe
xor
mov
test
pop
fsubl
and
iret
jmp
mov
decb
adc
push
inc
shll
sub
xor
sbb
xor
jno
insl
add
outsb
sub
aas
lcall
jle
enter
or
and
daa
int
ret
jp
mov
lret
mov
lret
cmpsl
mov
or
add
push
in
fdivp
in
test
sbb
mov
stos
test
mov
movsb
push
testl
imul
outsl
dec
insb
loope
out
sub
push
icebp
mov
shlb
es
arpl
xchg
mov
inc
lock
clc
mov
cmp
push
push
shll
aaa
in
or
xor
xchg
jg
adc
inc
pop
ret
cmp
xchg
adc
xor
icebp
cmp
mov
dec
outsl
cmp
pop
outsl
das
test
jno
jns
inc
out
ljmp
shll
inc
call
push
out
mov
ljmp
mov
into
cli
sbb
cmp
loopne
inc
pop
lods
and
xor
cmpb
sub
push
je
jno
cwtl
add
sarb
int
push
xchg
adc
std
inc
js
rcr
jnp
sbb
cmc
sub
dec
dec
cmpsl
mov
xchg
adcb
jbe
push
stos
hlt
lods
add
mov
loop
fs
xchg
pushf
or
in
cli
jg
mov
insb
inc
xor
jno
jbe
loope
ss
xchg
add
pop
outsl
out
or
inc
adc
sub
inc
jo
fists
cmpsl
ret
pop
lret
mov
daa
xchg
jns
mull
mov
jp
xchg
lds
push
mov
dec
mov
xchg
cld
rcrb
stos
ds
ror
fistps
dec
mov
add
jae
js
and
fnstsw
push
ljmp
add
icebp
popa
dec
popa
mov
mov
or
dec
scas
in
jl
es
mov
or
test
ljmp
xor
into
push
in
fcoml
mov
test
and
movsl
xor
leave
out
dec
mov
pop
lcall
and
and
mov
cli
adc
mov
cmp
jns
jae
cmc
out
xor
jg
adc
pop
fidivrs
dec
in
xor
ret
int3
mov
xchg
cmp
xchg
imul
pushf
sti
shlb
fcmovnb
idiv
cmp
sbb
dec
scas
and
xchg
xchg
push
not
cmc
cmp
lds
pop
mov
jecxz
push
xor
dec
mov
dec
gs
jne
ret
loope
or
and
fucom
xor
pusha
lret
jnp
insw
sub
add
xchg
xchg
and
out
or
out
xchg
xlat
sbb
mov
xchg
sar
sub
gs
inc
cmpsb
add
out
push
dec
cld
add
xchg
mov
fwait
dec
addr16
lea
add
dec
xor
imul
jnp
mov
cwtl
inc
popf
icebp
or
das
fmuls
mov
xor
or
out
outsl
insl
lock
les
sub
shlb
fisubrl
sahf
aas
adc
push
dec
cmc
pop
push
repnz
add
xor
adc
xchg
stos
imul
in
xchg
lods
mov
pop
jo
lea
movsb
pop
sti
mov
xchg
push
imul
cmp
pop
fisttpll
imul
mov
aad
jge
mov
loopne
jmp
leave
mov
je
out
xchg
imul
dec
push
xor
cmp
pushf
dec
fwait
cwtl
popf
add
sub
mov
adc
lcall
push
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
shrl
jmp
mov
daa
xorb
xor
and
dec
mov
loop
xchg
sbb
adc
aaa
add
gs
mov
nop
sub
incb
pop
out
lea
test
sub
lahf
fwait
jo
sub
jecxz
jbe
adc
mov
cmpsl
rcll
sub
rclb
cwtl
sub
mov
push
test
movsl
inc
lret
rcr
or
mov
rcrl
sub
aam
test
add
cmpb
nop
lret
jno
ret
imul
dec
scas
dec
mov
cwtl
add
jbe
fs
dec
xor
xor
sbb
xchg
nop
jb
bound
mov
lret
imul
bound
push
orl
push
inc
outsb
and
sahf
orl
mov
sar
scas
mov
aaa
enter
and
jle
in
roll
jp
push
dec
incl
orl
pop
lods
pushf
jno
mov
imul
popf
insl
lea
add
ret
xchg
pop
and
and
jg
add
inc
test
mov
rcrl
cmp
jl
int
dec
inc
cmpsl
push
xlat
inc
repnz
mov
addr16
scas
or
pop
js
jnp
mov
movlps
insb
push
and
les
ss
jnp
jns
daa
mov
es
cmp
push
inc
mov
call
icebp
lods
jle
cmpsb
cld
fcoml
ljmp
xor
rorb
cmp
pop
mov
mov
mov
push
jne
dec
pop
ss
cmp
int
lods
in
test
sub
inc
xchg
out
icebp
cmc
sbb
adc
pop
sub
cmp
jl
or
test
mov
stos
mov
stos
mov
xchg
fs
in
and
stc
jne
inc
sub
lods
lds
fs
divb
add
pop
into
sbb
dec
dec
pop
aam
mov
jg
mov
sbb
in
jo
int3
pop
xor
lret
ret
inc
es
mov
mov
cmp
add
adc
les
and
gs
sahf
pushf
pop
loopne
pushf
test
es
jl
xchg
jmp
fadd
loopne
inc
xorl
push
add
pop
es
dec
mov
cmp
dec
push
cmp
call
outsb
and
dec
push
dec
and
mov
ret
mov
xadd
pop
push
nop
fimuls
cmpxchg
sub
xchg
insl
mov
xchg
out
lret
je
sti
or
test
jne
jbe
arpl
les
lock
popf
cltd
imul
js
adc
inc
pop
add
add
xor
ffreep
ss
jle
add
mov
das
lret
xor
dec
pop
loop
xor
push
and
jecxz
mov
icebp
xchg
or
ja
movsb
sarl
fwait
scas
sub
repz
in
push
outsb
mov
inc
xorl
jnp
dec
jmp
inc
dec
stos
call
push
nop
mov
mov
xchg
stos
mov
fistpl
xchg
in
insl
lods
and
lods
ja
xchg
out
notl
pop
pop
mov
fnsave
jo
out
sbb
lods
imul
sub
dec
dec
test
xor
pop
imul
cwtl
les
rcrl
cmp
sbb
cmp
fcom
and
movl
jmp
or
mov
lret
andl
test
bound
add
ds
cld
dec
pop
jg
push
stos
aam
and
mov
test
mov
sbb
jnp
xor
dec
cmp
push
fwait
loope
inc
sbb
sub
adc
negb
push
aad
ljmp
pop
rorb
faddp
fistpl
mov
gs
jbe
or
pop
dec
cmpl
mov
cmp
incl
rcrl
fcomps
xor
fs
out
test
dec
add
cmp
and
insl
cltd
push
add
jg
push
andl
imul
idivl
mov
or
mov
mov
push
and
inc
pop
xchg
mov
daa
int3
mov
pop
push
sub
cld
and
mov
jg
fcmovne
pop
inc
cmp
jmp
add
cmpsl
das
mov
loopne
mov
dec
jmp
jmp
cmp
pop
fdivl
or
aam
nop
push
test
fwait
mov
loopne
aad
mov
test
pushf
cmp
ljmp
pop
xchg
lods
mov
out
outsb
out
std
mov
inc
enter
sub
pop
mov
gs
jle
add
mov
into
or
shlb
jo
lods
xor
lock
sahf
adc
dec
inc
dec
std
xchg
pop
mov
cli
adcb
popa
xchg
mov
mov
xor
add
and
sub
sahf
enter
pop
jge
scas
mov
dec
xor
std
lret
div
int
inc
xor
adc
test
mov
stc
in
fsubl
aas
rorl
jo
jae
lahf
shrl
mov
or
mov
jle
sbb
fcmovbe
orl
lea
sbb
jae
sub
mov
rcrb
clc
pop
outsb
mov
orl
adc
xchg
popf
sahf
push
nop
push
or
decb
mov
dec
repz
cld
cmp
inc
mov
je
js
fldl
sbb
sti
fmull
mov
or
inc
loopne
adc
dec
mov
jmp
xchg
cmova
ret
mov
xchg
inc
repz
mov
jno
lret
pop
sarb
xchg
add
sub
out
jmp
push
cld
je
dec
cmp
xchg
repz
mov
pushf
xchg
test
pop
es
std
or
sub
mov
mov
les
into
adc
add
adc
das
mov
dec
xchg
push
fdivl
or
and
js
int3
sub
push
cmp
insl
sti
lea
cmp
addl
xor
fistl
into
dec
test
repz
pushf
mov
add
push
mov
sub
xchg
dec
xor
adc
or
push
push
cmpsl
clc
incb
mov
test
jo
ss
add
push
inc
insb
push
js
and
pushf
cmp
stos
xlat
adc
test
adcl
sbb
in
cmc
jbe
pop
and
pop
cmc
xchg
fucom
push
mov
pusha
mov
cwtl
ss
mov
sbbb
or
push
es
bound
cmp
clc
call
xchg
sbbl
inc
hlt
sbb
push
aas
lea
notb
mov
lcall
sub
outsl
mov
xor
pop
sbb
mov
std
pop
lret
push
xchg
dec
mov
mov
add
mov
or
in
sbb
icebp
xlat
and
or
push
xlat
gs
icebp
subps
shr
cltd
rorb
push
jns
cmp
stos
inc
pop
testb
xlat
hlt
mov
xchg
int
cwtl
out
pop
fdivl
push
dec
mov
enter
sti
push
bound
pop
or
out
add
imul
xchg
xchg
jle
mov
jbe
cltd
loop
mov
cmp
fnsave
jge
pop
jg
mov
mov
pop
int3
dec
js
call
call
xchg
sbbl
out
movsb
movsb
mov
or
adc
mov
lds
cmp
inc
bound
mov
daa
enter
cmp
test
cmp
adc
push
xchg
dec
mov
ss
sbb
lahf
cmpsb
out
fdivrs
inc
or
std
pop
mov
jno
shlb
sbb
xor
sar
scas
mov
sub
lret
insl
iret
aaa
push
mov
ljmp
gs
stos
inc
jo
stos
mov
test
data16
xor
mov
aad
sahf
jg
push
std
int3
and
in
mov
cmp
mov
icebp
pop
sbb
int3
inc
add
sub
cmp
sub
mov
out
cltd
into
push
test
jne
mov
bound
adc
std
cmp
xchg
and
sbb
pop
ret
jbe
adc
dec
inc
pop
jg
sub
and
xchg
sti
fs
push
sub
pusha
add
inc
outsb
cli
xchg
dec
mov
mov
or
data16
xchg
push
xor
imul
inc
lock
loope
pop
pop
adc
and
pushw
insl
popa
aad
cltd
xor
test
mov
sbb
push
inc
xor
imul
mov
add
aam
sub
mov
adc
jmp
jo
push
mov
sbb
lahf
pop
cltd
push
xor
pop
mov
sbb
ret
scas
push
cmp
xor
mov
adc
xor
xchg
add
inc
fildll
dec
mov
aad
shlb
lds
movsb
shr
fidivs
inc
daa
add
fadds
repz
data16
sbb
jge
sbb
int3
lods
dec
or
dec
sbb
fistpl
fucomp
mov
dec
mov
or
idivl
mov
add
clc
out
scas
inc
push
pop
scas
pop
cmp
out
mov
leave
pushl
cmp
sti
mov
lock
xchg
pusha
cwtl
pushf
lock
outsb
scas
jno
mov
pop
ret
jp
mov
inc
sti
sbb
popa
out
test
cld
lret
xchg
mov
aam
sbbl
adc
dec
sub
das
leavew
shll
mov
subl
sbb
loope
gs
and
xchg
pop
xor
cld
outsl
mov
cmpsb
dec
orl
daa
pop
mov
jbe
mov
loop
cmpb
outsb
sub
xchg
sub
mov
imul
scas
xor
push
jnp
loopne
aam
push
push
add
aam
lahf
adc
xchg
xchg
in
loopne
scas
out
pop
scas
mov
test
cs
int3
leave
bound
stos
outsb
inc
ja
push
xchg
cmp
jmp
into
and
push
call
cmp
cmc
adc
sahf
into
leave
fdivs
aad
loope
pop
xlat
inc
ss
fnsave
and
data16
lea
push
and
cmp
std
cmpsb
in
gs
mov
fdiv
jne
xlat
cmp
test
bound
andl
cs
repz
adc
dec
push
negl
cwtl
dec
mov
aas
pop
in
in
dec
lods
fidivrs
pop
xchg
out
push
movsb
mov
cmp
aam
gs
push
push
cli
sub
adc
aad
jnp
pop
loope
xchg
test
icebp
push
jae
adc
js
jb
test
aas
outsb
shll
xor
adc
loope
pop
test
mov
rcll
inc
mov
stos
xchg
xlat
andl
out
xchg
and
lea
adc
imul
fs
nop
ret
jl
stos
fbstp
sahf
ret
in
sbbl
add
test
and
dec
fisttpl
or
sub
ret
inc
call
dec
stos
rol
mov
cld
fiaddl
stos
fists
enter
or
adc
jbe
int
jae
sub
addr16
dec
cmp
add
pop
mov
and
mov
push
xchg
lret
enter
sbbl
cmp
loopne
mov
rolb
jno
sbb
jmp
movsb
sub
and
push
ds
and
mov
pop
nop
adc
add
cmp
in
repnz
cmp
xchg
mov
sbb
dec
push
and
sti
nop
pop
aaa
jb
aam
mov
jle
fidivl
adc
fstpt
outsb
sahf
or
pop
jbe
push
data16
loopne
jp
sbb
aas
sti
push
das
cmp
xlat
out
xor
adc
fnstsw
pop
test
lcall
push
jb
inc
sbb
sub
in
sbb
arpl
mov
lock
pop
sub
sbb
mov
cwtl
pop
data16
or
nop
negb
cmc
insl
cmp
idivb
rorb
std
or
sbb
cltd
sbb
in
sbb
es
mov
push
jb
inc
shrb
sahf
pop
repnz
ds
jnp
push
cmp
out
fmul
sub
addr16
shlb
cmp
mov
in
test
cs
lea
push
mov
pop
push
xchg
adc
xchg
mov
fldcw
repz
cwtl
jge
push
pushf
outsl
mov
fs
adc
filds
xchg
repz
insb
imul
imul
in
ja
js
push
dec
jle
xchg
mov
dec
call
imul
movsb
popa
jnp
divb
scas
repnz
ds
adc
mov
mov
out
jne
andl
cmp
mov
dec
mov
dec
sub
pushf
and
cmpsl
imul
and
leave
jl
jne
or
xor
or
add
mov
sub
je
adc
popa
ret
iret
es
bound
push
push
shll
into
mov
dec
cld
lea
in
inc
cld
mov
push
icebp
dec
cmc
out
xor
mov
fisttpl
mov
pop
out
aas
jno
jne
cli
jp
push
or
and
in
out
int3
ja
mov
jbe
neg
xlat
pushf
adc
and
sti
addr16
cmp
xor
sub
nop
js
fldt
pop
ss
aaa
int
inc
sub
sub
push
or
cmp
xlat
push
or
xchg
sub
cmp
mov
mov
dec
add
sub
sub
push
scas
sub
cmp
cwtl
sub
pop
inc
ja
xchg
out
cmpsb
mov
movsb
xchg
and
dec
and
mov
fists
into
insb
arpl
push
fdivs
addr16
aaa
outsb
and
xchg
ret
or
das
into
mov
outsb
sbb
lea
pop
lcall
xor
inc
add
pushf
lcall
ret
sbb
sahf
sub
sbb
fcmovu
leave
lea
lret
sbbb
dec
movswl
xor
rep
mov
pop
ret
mov
int
and
fdivrs
repnz
mov
and
pop
mov
clc
js
mov
lahf
sahf
cs
add
xchg
or
fwait
cmp
and
or
sub
add
scas
lcall
arpl
jge
sbb
sbb
ja
dec
mov
push
sbb
in
movl
mov
adc
add
or
xchg
pop
adc
cwtl
mov
and
loopne
mov
sbb
cmpsb
aaa
out
push
in
test
cmp
hlt
repz
jae
xor
out
cmc
bound
jge
in
or
and
cltd
fisubrs
add
or
xchg
cmpsb
push
test
clc
imul
jg
push
dec
mov
push
mov
test
cmp
pushf
pop
xchg
mov
mov
inc
loopne
jg
or
add
into
mov
sahf
dec
xchg
jmp
pusha
mov
xchg
scas
mov
push
cmp
adc
or
das
fcompl
xchg
mov
out
das
bound
adc
clc
jg
scas
pop
jl
dec
mov
fisubrl
inc
adc
int
mov
enter
enter
addb
int
jno
fcoms
dec
sbb
cmp
sahf
movsl
adc
or
mov
test
popa
std
push
xor
fcoml
iret
out
adc
fidivrs
rcrb
outsl
les
repz
add
pop
lock
mov
popa
sub
testb
adcl
pushf
push
shlb
mov
jb,pt
mov
push
cmp
stos
cli
or
lea
sbb
push
mov
in
clc
cltd
jae
mov
pop
aaa
xchg
mov
and
push
les
xor
aam
sbb
popf
add
adc
xor
movsb
push
fnstcw
adc
imul
inc
iret
jge
je
orl
xchg
sub
xlat
fsubp
loope
push
mov
sbb
jo
adc
and
das
sbb
cmc
rcr
mov
or
dec
dec
dec
inc
push
lcall
jge
icebp
fwait
inc
push
popa
dec
subb
mov
mov
lahf
dec
int3
into
fwait
dec
and
fnsave
adc
in
dec
adc
inc
inc
cmp
mov
repnz
movsb
xchg
enter
jecxz
out
ret
mov
push
adc
xchg
insb
bound
scas
dec
prefetchnta
add
stos
lcall
xchg
hlt
mov
cwtl
stos
cltd
sbb
xchg
decl
mov
and
loop
adc
jmp
movsl
lock
adc
xchg
ds
cmp
dec
inc
mov
cmp
ljmp
jno
pop
cmp
enter
out
push
inc
loope
sbb
jle
pop
mov
cld
adc
cmc
aam
sbb
xor
pop
xchg
imul
ret
push
out
push
xor
xor
sub
out
pop
out
movb
test
cmp
add
and
mov
inc
adc
mov
stos
test
dec
dec
inc
lcall
fsubrl
scas
adc
mov
cmp
xchg
sub
imul
mov
repz
lods
popf
ss
xchg
xchg
aam
xchg
mov
inc
jmp
in
ss
xor
or
sub
push
and
addr16
mov
leave
lods
sub
xchg
mov
mov
aad
mov
fs
into
shll
adc
movsb
jecxz
loopne
leave
pop
adc
ja
mov
add
das
sub
mov
lock
sub
mov
mov
les
push
lret
cs
movsb
xor
and
cmp
out
adc
adc
cmp
leave
fs
in
stos
scas
add
mov
lods
adc
daa
dec
push
mov
loope
rorl
mov
pop
movsb
xor
xor
sahf
cmpsb
fildl
and
outsl
sbbl
pop
lahf
repz
sahf
sbb
jbe
test
ljmp
outsl
dec
dec
lods
sahf
cmp
sub
iret
fninit
out
cmp
pop
js
dec
mov
push
inc
xchg
xchg
add
xchg
adc
sub
rcl
mov
xchg
inc
pop
inc
insl
stc
mov
xchg
xchg
adc
aas
sbb
je
push
xor
push
adc
jbe
sti
outsl
xor
inc
out
cmc
jmp
jae
loop
and
shll
enter
stos
shll
bswap
pop
dec
mov
cmp
js
test
dec
daa
mov
push
ficompl
cs
and
je
cmc
jl
fcoml
sbb
cli
adc
data16
jnp
jle
sbb
mov
int
sub
mov
test
and
mov
outsb
stc
pop
insl
sbb
int
aad
pusha
loope
adc
bndldx
sbb
sub
aaa
push
inc
sbb
push
adc
rcll
rcl
jae
xor
jg
jno
call
fidivl
loope
mov
sbb
std
ret
sbb
mov
mov
sbb
gs
xchg
mov
inc
mov
push
add
adc
cli
jb
mov
inc
jecxz
jp
fiadds
push
xor
lods
jbe
inc
subl
les
adc
xlat
xlat
into
sar
es
sbb
push
or
push
test
iret
addl
inc
pop
push
repz
fbstp
xchg
mov
stc
mov
pop
mov
jns
in
ret
es
cmpsb
mov
daa
mov
imul
push
loop
lds
iret
or
cmp
mov
pusha
and
lret
xor
cmp
stc
mov
test
test
mov
mov
and
push
insl
xchg
dec
sbb
arpl
sarl
or
mov
push
fldl
and
pusha
inc
sbb
and
or
loope
sti
add
cmp
add
fadd
sub
mov
dec
mov
repnz
push
pextrw
xor
push
adc
das
dec
push
lds
sti
inc
xchg
cmp
xor
les
andb
clc
les
mov
cmp
or
ret
jle
cltd
pop
clc
jle
inc
sub
aam
in
dec
sub
inc
push
lds
xor
das
fnsave
sbb
addr16
out
pandn
mov
dec
outsb
enter
stos
adc
rcrb
stc
inc
fwait
mov
rolb
bound
push
jno
adc
adc
sti
pop
jnp
mov
and
add
out
mull
lock
sarb
mov
or
dec
int3
popa
cld
pop
in
or
sub
push
jge
push
cwtl
add
mov
imulb
pushf
call
sub
xor
xor
sbb
mov
xor
push
out
int
scas
lcall
addr16
jae
fdivrl
jg
or
jle
loope
xchg
jbe
pop
xor
xchg
inc
ret
shrl
mov
stc
xchg
jge
sbb
push
imul
xchg
pushf
rclb
xchg
test
imul
inc
xor
mov
mov
mov
sub
repz
and
mov
pop
je
lahf
in
scas
out
add
pop
mov
push
rcrl
jge
inc
sub
repz
pop
aaa
push
orl
dec
jae
sbb
lods
xor
push
mov
add
and
scas
mov
jp
lahf
cmc
add
jnp
sbb
scas
in
mov
ret
lret
cltd
or
xchg
test
dec
lock
adc
cmp
mov
xor
add
int3
insl
in
popa
je
popf
dec
clc
hlt
das
push
pop
cmp
xchg
adc
and
outsl
test
jp
xchg
fstps
loope
leavew
mov
ret
sub
flds
adcb
movsb
jmp
sahf
jae
mov
mov
fldenv
je
xchg
add
inc
stos
vxorps
inc
pusha
scas
mov
lock
aam
pop
clc
mov
cld
fwait
mov
adc
add
mov
inc
pop
cmp
popf
xchg
es
inc
ffree
lret
push
outsb
imul
test
test
push
jbe
nop
mov
test
and
mov
mov
rcr
and
push
cmpsb
sub
les
out
insb
xor
dec
fs
iret
aaa
jae
enter
mov
dec
mov
push
push
stos
shrb
push
ret
mov
sbb
push
in
loop
fcmovu
sub
test
movsl
jecxz
arpl
mov
popf
dec
cmp
inc
xchg
pop
stos
popf
loopne
pushf
test
mov
mov
jne
int3
jns
cli
mov
fildll
jge
adc
stc
inc
enter
sti
stos
mov
jecxz
fimull
mov
cs
popf
hlt
xor
ret
data16
enter
and
ret
out
and
daa
cmp
jne
fcmovbe
or
xchg
push
add
mov
push
imul
aaa
pop
add
pushfw
jg
hlt
lcall
and
xchg
imul
inc
pop
loop
and
pop
mov
pop
jle
mov
xor
aas
cwtl
gs
pop
pcmpeqb
je
sarb
push
gs
cmpsl
or
loop
pop
mov
jmp
or
mov
movsl
repz
pop
gs
sbb
ljmp
xchg
pop
orl
mov
xchg
lret
adc
loopne
cmc
inc
xchg
mov
or
fxch
jbe
xchg
jo
or
notl
mov
adc
mov
lret
rcll
in
sarl
ret
inc
std
call
movsl
ja
aas
adcl
or
aam
in
shll
pushf
jp
mov
mov
call
enter
adc
dec
ljmp
pushf
xchg
insb
clc
aad
pop
sub
cmp
xor
clc
cwtl
mov
movsb
lock
mov
fneni(8087
push
or
sub
xlat
pop
inc
test
push
imul
bound
mov
sbb
cmpsl
add
mov
aad
mov
movsl
add
jp
or
daa
jmp
cmp
cld
scas
push
jl
xorb
inc
fs
jne
rclb
mov
dec
sub
repnz
push
push
sbb
icebp
int
movsb
lds
scas
sbb
aam
pop
mov
xchg
or
xor
ret
pushf
mov
push
xor
gs
stos
mov
add
rorl
xor
xor
loopne
stc
jmp
in
cmpsb
int3
out
nop
arpl
mov
mov
or
xchg
aas
pop
inc
loope
xor
pop
or
test
pop
jae
or
mov
cmpsl
xchg
and
insl
hlt
jbe
mov
sbb
push
pop
ret
test
fisttps
sub
add
int
shlb
lahf
mov
push
mov
push
mov
mov
gs
pop
mov
jae
scas
insl
pop
mov
mov
mov
out
imul
dec
mov
jecxz
pop
int3
mov
lahf
dec
sub
mov
push
xchg
sarl
ja
insb
and
jge
sub
test
ret
dec
jbe
jb
inc
cltd
bound
inc
jmp
sbb
sahf
and
outsb
ret
lods
ffreep
mov
in
push
and
fistpl
cmp
test
xchg
jl
stos
test
mov
lods
lods
xor
out
stos
rcll
cmpsl
shll
cmp
dec
cld
test
sub
push
stos
fmull
push
sub
or
push
cli
sub
xor
jns
push
bound
cmp
adc
cmp
pushf
imulb
scas
jnp
sti
xor
push
ficomps
imul
push
mov
adc
xchg
cmp
jns
aam
cmp
fcomps
jae
pop
sbb
divb
cltd
pop
push
or
mov
cmpsl
fcomps
roll
outsl
dec
out
mov
inc
cli
sub
addr16
dec
sbb
sahf
pop
jae
jmp
pop
and
pusha
jle
scas
push
scas
cs
fstps
popa
mov
jle
rorl
xchg
push
add
cmp
jne
gs
xor
add
test
bound
and
mov
nop
dec
cli
push
jl
cmp
popf
push
inc
or
gs
shrl
out
filds
fidivrs
je
or
fdivrs
adc
mov
mov
sub
fninit
cmpl
ljmp
leave
mov
xchg
sbb
outsb
bound
test
cmp
inc
dec
daa
mov
js
cmpsl
pop
das
lret
je
shr
cmp
imul
cmpsl
insl
popf
out
lret
push
inc
mov
out
xchg
sbb
dec
cmpsl
popa
leave
xchg
lock
cmp
hlt
xchg
daa
xchg
cmc
mov
xor
into
adc
mov
mov
push
out
xchg
adc
push
or
jns
rcll
imul
sbb
jge
in
mov
add
hlt
sarl
jbe
int
mov
mov
lcall
mov
cmp
in
lret
shlb
addl
jno
mov
or
add
mov
mov
outsb
outsl
jl
idivl
push
sbb
ret
stos
int
or
fimuls
xlat
inc
jns
dec
outsl
pop
pop
aaa
shlb
or
xchg
cmpsb
cmp
sbb
push
push
fnstenv
adc
dec
hlt
lret
xchg
repnz
mov
leave
adc
xchg
pop
cmc
jne
es
mov
pop
rcll
notl
or
mov
lahf
cld
movsb
sahf
push
sbb
icebp
pop
ret
mov
sti
push
pop
dec
arpl
cmp
xchg
in
jmp
or
jno
fwait
sarl
jecxz
mov
ret
dec
lods
pop
dec
test
add
out
jmp
sarb
push
out
adc
jae
sahf
arpl
lret
in
in
mov
mov
pop
and
mov
fwait
adc
in
sbb
dec
xchg
out
test
mov
adc
cmp
sub
mov
jle
es
dec
inc
addr16
adc
imul
sbb
xlat
and
mov
sahf
xchg
jmp
in
inc
inc
sbb
add
adc
xchg
idivb
pop
add
jmp
aam
gs
xor
cmpsl
add
jae
inc
ficomps
sbb
mov
orb
popf
jnp
inc
je
add
mov
jle
xchg
je
xchg
mov
xchg
jne
arpl
insb
lea
and
gs
in
sbb
adc
sbbb
bound
push
loopne
addr16
nop
pop
add
mov
inc
fidivrl
outsl
cmp
pop
sbb
lods
mov
pop
pusha
ret
cmpsb
fimuls
jl
pop
xor
iret
sarb
test
rorb
push
mov
daa
push
aam
js
mov
sbb
xlat
push
movsb
jmp
cmp
dec
sbb
idiv
fmuls
mov
jge
movsb
aam
in
push
in
sbb
shr
mov
push
nop
pop
xchg
and
push
cld
in
loopne
scas
cltd
rolb
push
fsubrp
enter
test
outsl
xchg
cmpsl
neg
jp
adc
test
xchg
je
mov
cmp
nop
dec
lahf
pop
adc
inc
push
inc
cmpl
rcrb
jl
pop
call
ficomps
enter
jp
mov
insb
cli
cmp
insl
and
sahf
ret
jns
pop
sbb
subb
aad
or
sub
aam
cmc
enter
inc
dec
add
movsb
pop
pop
pop
sub
pop
push
pop
mov
push
adc
in
in
pop
loop
and
sub
jne
daa
icebp
pop
cmp
stos
les
mov
mov
and
cld
fimuls
repz
pop
cmp
xor
cmp
cmpsb
xchg
push
and
xor
adc
std
mov
push
lret
jno
inc
mov
mov
rclb
add
sbbl
scas
dec
sti
jns
gs
push
out
scas
cmpsl
dec
jecxz
add
inc
cltd
xchg
xor
mov
sub
inc
dec
mov
fiadds
dec
push
test
push
imul
and
stc
pop
jbe
gs
sbb
cmp
pop
cmp
ret
push
roll
xor
jno
mov
icebp
inc
fidivl
fbstp
mov
mov
push
andl
mov
push
test
daa
push
adc
subb
or
xor
outsl
cmp
cmpsb
dec
mov
lea
adc
andb
lahf
rolb
scas
xor
adc
int3
iret
xchg
pop
stc
and
and
jne
stos
or
sub
push
mov
in
mov
scas
xor
sbb
aas
roll
ljmp
mull
into
shlb
sbb
mov
bnd
push
mov
mov
shrb
dec
ja
sbb
push
adc
dec
arpl
xor
mov
pop
xor
sbb
mov
arpl
inc
mov
fstl
aad
test
lret
mov
mov
jnp
test
fidivrl
inc
jmp
mov
inc
add
cmpsl
cltd
and
test
fld
dec
sbb
into
das
je
ja
psubsb
dec
xchg
outsl
xchg
mov
xor
orb
enter
mull
jl
pop
fiadds
jb
pop
push
inc
sbb
mov
in
mulb
mov
add
dec
jns
adc
mov
mov
jae
mov
mov
arpl
addr16
xchg
push
jmp
scas
mov
xor
lahf
repnz
cmp
das
divl
fsub
jge
iret
dec
inc
lret
fistpl
push
xor
dec
rorl
and
sahf
xor
repz
lock
and
mov
or
jbe
sbb
and
add
call
cmp
jae
outsl
pop
mov
cmp
push
les
inc
cmp
jns
mov
and
out
pushw
mov
mov
push
ficomps
inc
add
push
es
bound
in
pop
inc
es
or
jbe
jg
andl
pop
xor
jnp
sbb
mov
in
adc
loop
inc
ficoml
ret
xchg
es
testb
add
xlat
les
adc
mov
inc
push
mov
add
xchg
mov
cmc
dec
test
into
or
dec
or
cs
dec
insl
cmp
out
cmovnp
pop
and
xor
sbb
cli
mov
rcrb
inc
cmp
test
fmull
push
ficompl
sbb
push
xor
lret
test
rcrl
dec
inc
insl
cmpsl
data16
scas
jo
sar
and
adc
jo
xlat
in
cmp
mov
adc
dec
dec
cmp
ret
movsl
stos
cmpb
mov
push
into
pminub
fcompl
xlat
sbb
decl
in
testb
inc
sub
stos
jmp
fldcw
mov
sbb
pop
in
mov
out
std
mov
cmpsb
adc
pop
popa
sub
arpl
fs
insl
mov
mov
mov
xor
popf
push
outsb
xor
insb
mov
push
repnz
or
bound
jle
adc
test
data16
or
push
stc
pushf
cwtl
or
xor
in
out
jae
add
dec
pop
pop
stc
fadd
push
js
add
cmp
dec
cmpsl
or
movsl
pop
and
mov
jg
pop
in
sub
out
les
and
xchg
cmpsb
pop
orb
mov
loopne
adc
pusha
sub
add
cmpsb
addr16
sbb
enter
mov
mov
dec
out
push
mov
ljmp
int3
xchg
mov
ljmp
repnz
aaa
daa
jno
push
movsb
xchg
lods
call
mov
or
arpl
inc
mov
das
gs
dec
sbb
rolb
sub
cwtl
nop
push
xchg
sbb
cmpb
lret
lea
jecxz
sbb
xor
and
in
fdiv
mov
cmp
mov
sbb
clc
pushf
out
loopne
xor
mov
inc
xchg
jle
inc
rclb
lahf
int3
mov
xor
fnstenv
xor
stos
clc
mov
dec
mov
jmp
and
inc
enter
jb
inc
hlt
js
mov
jmp
jmp
daa
sbb
imul
adc
ja
cmp
cli
push
dec
or
loop
dec
push
sbb
imul
jae
cvttps2pi
ret
xchg
mov
push
sub
dec
xor
or
adc
xor
outsl
mov
xchg
out
loope
mov
lods
mov
adc
dec
in
mov
rorl
cmp
jge
and
pushf
xchg
mov
pcmpgtw
jg
mov
adc
lods
imul
jge
add
cmpsl
lods
mov
addr16
adc
mov
sub
fcmovnu
dec
jo
shrl
jge
sbb
sti
sbb
loope
cmp
mov
cmpsl
jno
pop
jmp
fidivs
cmp
mov
or
sbb
outsl
jle
cmp
push
ja
hlt
adc
shll
mov
nop
bsr
pushl
sti
xchg
xor
push
int
mov
into
lret
mov
mov
jmp
rolb
adc
xchg
mov
jle
aas
loopne
mov
loop
sub
xchg
sahf
stos
pop
rcrl
in
or
inc
and
and
insb
fldl
loopne
imul
xorb
xchg
adc
test
xor
cs
push
dec
mov
dec
jecxz
xchg
not
iret
jnp
adc
inc
cli
add
mov
push
pop
das
push
jno
test
and
jecxz
fsub
shll
enter
nop
cmp
mov
in
out
icebp
mov
cmp
sub
bound
mov
mov
cmp
mov
xor
lods
pusha
es
mov
mov
sahf
jns
pop
leave
les
shll
inc
xor
outsb
mov
gs
xor
lret
enter
dec
ret
adc
xor
out
sbb
mov
push
push
cmp
dec
stos
mov
dec
sbb
cli
lock
inc
mov
adc
shr
dec
es
pi2fw
sub
dec
inc
push
outsb
mov
jb
aaa
je
mov
andl
std
sbb
into
call
cmp
xchg
outsb
xchg
cmp
lock
xchg
push
mov
dec
ja
mov
sub
push
mov
out
sbb
roll
pop
popa
jle
lret
out
inc
in
inc
push
cmc
cmpsb
or
mov
mov
shl
roll
push
clc
out
push
cmp
repnz
cli
int
lret
test
loope
xchg
xchg
aas
sub
stos
loope
int
mov
mov
lods
cli
lcall
out
insl
mov
pushl
push
and
into
sbb
stos
popa
movsl
lock
repz
sbb
insb
test
sub
dec
outsb
cmp
adc
cld
fstps
es
leave
stos
mov
xchg
hlt
sbb
cmpsb
repz
repz
lods
ret
test
test
jno
daa
sbb
mov
sbb
pop
jl
mov
xchg
jecxz
xchg
sub
notl
or
nop
scas
mov
push
dec
dec
cmp
push
inc
and
xchg
dec
add
in
and
pop
jl
inc
inc
mov
and
ret
mov
add
clc
popa
add
lods
pop
nop
and
iret
nop
enter
xchg
mov
pop
sahf
adc
rcrb
jns
and
movsb
jns
loope
mov
gs
or
test
push
mov
insb
out
mov
jle
fildl
ja
ds
loopne
push
dec
mov
aam
subb
clc
call
test
data16
sti
xor
add
fwait
int3
pop
sbb
inc
mov
push
loop
pop
test
jne
leave
fst
adc
jns
loope
jecxz
mov
push
lods
mov
fsubrl
cmpl
fisubrl
xor
test
mov
pop
jns
iret
mov
xchg
imul
push
orl
imul
adc
sub
in
mov
jp
sbb
push
repnz
shrb
sbb
xchg
and
and
cmp
outsb
mov
add
ljmp
sub
jl
fs
xchg
shrb
adc
sbb
test
es
sbb
nop
les
jne
lcall
iret
and
sub
mov
inc
fdiv
adc
lahf
lahf
clc
into
dec
jbe
lds
pop
cli
push
sub
in
xchg
mov
scas
sbb
out
cmc
lods
or
lock
jae
test
arpl
lcall
push
cmpsb
xchg
cmp
cmp
pop
movsb
enter
jecxz
cmp
daa
mov
mov
ret
test
inc
cmp
adcl
mov
or
xchg
inc
rcrb
mov
mov
lds
cmpsl
or
cmp
jge
call
icebp
data16
ljmp
pop
jmp
stos
jp
push
dec
fwait
cmp
shll
pushf
cs
add
cmpsb
cmp
sub
jae
mov
add
push
pop
mov
stos
stos
ljmp
pop
xlat
out
xchg
fcomip
std
imul
in
jl
pop
and
mov
xorb
nop
push
imul
inc
sbb
mov
repz
mov
fs
into
lods
sbb
fistl
inc
lret
sbb
jae
das
xor
rcrl
scas
enter
sub
sub
add
cmpsl
clc
xchg
testl
push
xor
fucom
shl
out
pop
scas
xchg
push
cli
push
out
dec
inc
fwait
cmp
jge
hlt
xchg
hlt
in
mov
out
outsl
icebp
testb
punpckhbw
add
sahf
cmp
out
push
or
subb
pop
pop
dec
and
iret
orl
sub
inc
pop
and
ficomps
add
lahf
inc
xor
jle
adc
or
and
adc
rol
hlt
test
out
inc
in
lods
repnz
push
or
push
xchg
and
jbe
gs
mov
jge
pop
les
jno
sbb
inc
lret
in
pushf
mov
pop
adcl
shr
jecxz
push
dec
das
scas
leave
sub
nop
in
bound
pusha
cmpsl
xor
fiadds
fdivrl
dec
cmpsl
sbbb
movsb
repnz
rcrl
jle
jg
and
or
xchg
movsl
xorb
test
xor
leave
enter
add
sahf
mov
cmpsb
add
sbb
ret
push
mov
lock
lods
add
inc
mov
loop
or
insl
jle
adc
cmp
adc
jmp
add
cmp
and
pop
mov
clc
lods
mov
jle
hlt
inc
mov
push
mov
in
inc
jl
push
push
pop
add
mov
sarb
enter
fists
mov
xchg
outsl
cmp
lds
xchg
dec
stos
and
sbb
or
in
int
fwait
sbb
pop
sbb
fcompl
lahf
mov
pop
sub
cmp
xchg
rorl
lcall
jb
das
adc
cmp
scas
mov
in
mov
call
sbb
xchg
cmp
out
push
mov
and
ret
xor
dec
ficoml
shlb
push
pop
add
nop
inc
pop
xor
cs
enter
ja
cmpsl
inc
or
push
jb
ljmp
xor
stos
repnz
mov
fwait
shl
mov
sub
hlt
mov
add
mov
dec
mov
stc
aas
fwait
mov
inc
cmpsl
cmpb
mov
push
addb
ds
cmp
mov
cmp
and
cltd
push
adc
pop
test
loopne
repz
inc
mov
pop
jmp
insb
lret
adc
repnz
outsb
fsts
cs
out
imul
mov
jp
add
pop
lods
ss
out
pushf
and
cmp
int
or
movsb
jb
sbb
pop
int3
icebp
add
dec
add
dec
sahf
mov
es
dec
lret
mov
mov
xchg
rolb
enter
inc
xchg
movsb
ds
out
dec
test
test
xchg
push
jns
ja
imul
inc
mov
cmpsb
icebp
or
aam
lods
sub
nop
push
aaa
sahf
pop
or
nop
sbb
sbb
and
xchg
fcmovnbe
aam
pop
xchg
push
dec
mov
lret
cmp
pop
mov
jmp
jnp
dec
mov
icebp
aas
push
enter
negl
popf
lret
popa
or
in
or
ja
test
and
decb
mov
cltd
lock
stos
push
inc
in
repnz
aas
add
rcrl
dec
cmpsb
test
sti
repz
test
in
jge
cwtl
pop
std
fwait
and
dec
out
divb
xchg
add
iret
fisubrl
loope
repz
xor
loope
insb
xor
push
mov
mov
bound
cmp
xor
mov
cld
icebp
cmp
cmp
ficompl
cmp
mov
in
mov
lret
inc
xchg
inc
inc
imul
and
rolb
mov
std
or
rcr
sub
mov
int3
call
enter
ljmp
mov
insb
aaa
cmpsb
sub
mov
fnstcw
cmp
pop
jne
pop
arpl
inc
inc
adc
in
add
movsl
sub
mov
xchg
stc
mov
push
clc
xchg
andb
cmpsb
clc
mov
faddl
daa
out
inc
das
stos
mov
jb
into
sub
jge
insb
dec
mov
enter
mov
out
daa
dec
loop
aam
xor
scas
add
mov
ja
cs
xor
in
sbb
dec
sahf
mov
sub
fsts
data16
jp
popa
sbb
xchg
jns
inc
mov
stos
dec
push
jmp
lcall
xor
outsb
pushf
and
aad
mov
fsts
pop
cmp
std
pop
mov
sub
hlt
cli
mulb
add
jecxz
addr16
push
xchg
add
pop
xchg
add
aas
ror
pop
mov
push
push
mov
cmp
lea
inc
xor
push
shlb
inc
or
dec
xchg
pop
ljmp
lahf
bnd
sar
sbb
shrl
push
push
andl
mov
ds
iret
dec
mov
enter
out
aas
shl
leave
jne
jbe
outsl
xchg
inc
pop
pop
adcl
xchg
daa
push
sub
add
adc
daa
bound
loop
js
es
in
std
pop
xor
xchg
out
js
scas
call
fiadds
push
xlat
into
jle
into
leave
mov
push
lea
shl
shrb
sub
outsb
lock
adc
scas
fimull
jg
sti
sub
and
cmp
adc
daa
insb
pop
mov
bt
cmc
mov
cli
out
repz
and
mov
add
shr
movsb
aas
cmpsl
xchg
js
int
mov
mov
aaa
dec
negl
pop
jmp
out
rol
xor
loop
mov
inc
testl
test
iret
daa
adc
add
test
pushl
dec
xchg
pop
push
ds
outsl
icebp
cmp
pop
mov
dec
xor
adc
gs
pop
imul
test
test
sub
js
incb
sbb
mov
xchg
cmp
movq
scas
push
jbe
mov
test
and
push
ret
les
xchg
lret
push
pushf
cs
imul
mov
mov
sub
jecxz
dec
xchg
mov
xchg
jp
movb
lret
and
sbb
jnp
mov
xor
imul
inc
adc
jno
or
jno
into
xchg
in
int
leave
mov
xchg
xor
mov
pop
enter
hlt
or
and
mov
sbb
cld
shrb
int
mov
jbe
xlat
int
ljmp
mov
fistpl
mov
daa
fldln2
sub
ds
mov
xchg
sbbb
icebp
mov
loopne
xchg
pop
or
mov
ffree
inc
cmpl
ja
cmp
or
aaa
les
xlat
adc
ss
call
enter
aam
cmp
enter
mov
in
sub
lods
inc
aad
cld
pop
sub
les
ss
push
cltd
or
jmp
inc
lret
mov
mov
fsubl
repz
mov
outsb
push
sub
add
in
shlb
insb
sub
fldln2
shll
out
nop
or
cld
push
les
add
scas
xchg
hlt
sbb
dec
pop
jge
std
jo
test
mov
jb
sub
outsl
cmp
pop
mov
xchg
inc
nop
sub
rcrb
shrl
dec
xchg
sub
movb
subl
push
xchg
in
pop
push
push
mov
fimull
fwait
nop
pop
icebp
mov
fsubrs
mov
loop
or
adc
push
out
repz
dec
mov
cmp
rcrl
fcmovbe
xor
adc
movsb
test
gs
pop
sub
out
cs
test
daa
push
push
daa
inc
shll
sbb
xchg
loopne
inc
fcomp
orl
push
jnp
pusha
add
lret
cwtl
dec
push
pop
mov
inc
rep
pop
std
inc
lcall
gs
xchg
aam
pop
mov
loop
fs
outsb
sub
rcrl
sbb
push
fdivrs
loope
jb
mov
pop
cmpsb
lock
test
push
and
adc
jns
fwait
repz
fmuls
fldt
mov
or
in
pusha
lret
out
fldcw
hlt
adc
fisttps
push
pop
popf
leave
inc
cmp
xor
inc
or
sbb
adc
lea
dec
fldl
cwtl
cmp
iret
out
xorl
ret
or
jne
lds
xlat
adc
cmc
clc
adc
out
mov
repnz
nop
fisubl
mov
mov
shll
ss
pop
hlt
push
xlat
dec
cltd
das
inc
push
xchg
jmp
lcall
pop
dec
cmp
sub
notl
fwait
push
pop
dec
mov
xlat
gs
pop
jnp
shlb
ja
sub
lret
or
repz
das
sarb
aas
lods
sub
cld
push
push
cs
jnp
fdiv
loop
xchg
cltd
sub
jle
inc
in
sbb
scas
mov
aaa
and
sahf
inc
popf
and
sbb
xor
cmp
dec
push
xchg
jg
cli
or
mov
xchg
loope
mov
mov
inc
inc
lret
or
pop
cmpsl
icebp
and
cmp
nop
pop
xor
sub
cltd
cmp
fnsetpm(287
add
adc
mov
inc
jecxz
inc
dec
sbb
into
sti
sbb
inc
popf
data16
push
push
pop
ficompl
push
pop
mov
outsl
movsb
xor
pop
test
mov
cmp
mov
fisttpll
in
popf
aaa
dec
add
rclb
cmp
inc
pop
test
mov
mov
lahf
pop
sub
les
xchg
mov
jg
xor
lea
les
lds
push
xchg
ret
ret
jnp
dec
xchg
cltd
sub
mov
cltd
mull
adc
mov
das
mov
sbb
pop
fcoms
xor
sub
insb
xor
push
inc
mov
popa
inc
test
mov
daa
out
scas
inc
cli
loope
jmp
out
test
test
aaa
inc
cwtl
lea
outsb
push
dec
dec
sti
push
dec
stos
xchg
dec
cs
movsd
fbld
dec
jmp
jne
pop
dec
jge
in
mov
jp
push
pop
and
cld
adc
daa
sub
sub
scas
out
inc
std
cmp
das
mov
sub
sar
shll
in
pop
int3
in
fidivl
xchg
setae
dec
dec
or
or
aad
inc
xor
mov
sub
jns
aaa
in
and
rcrb
das
jnp
cli
cli
rorl
pusha
xchg
addl
dec
or
xchg
inc
jle
inc
cmc
inc
out
cmp
push
inc
lock
imul
add
enter
inc
out
test
mov
sbb
inc
bound
pop
adc
insb
es
cmp
dec
add
ret
pop
insb
fistpll
andl
andl
loopne
push
rcrb
decb
cld
in
dec
pop
orl
cwtl
lods
mov
xor
fwait
mov
es
and
js
add
stos
or
pushf
cmp
and
or
dec
iret
push
lock
sub
iret
lret
fsubrl
pop
stc
dec
insb
adc
idivb
lods
jl
mov
mov
mov
nop
dec
adc
inc
lods
xor
cmc
std
push
inc
mov
nop
rcl
and
fldcw
or
jnp
adc
mov
or
jle
mov
movsl
add
addr16
dec
rcll
or
and
or
call
add
sub
add
mov
repz
scas
or
sub
inc
stos
push
addb
jge
movsb
pop
cs
je
mov
test
imulb
jo
insl
test
or
in
pop
int3
mov
mov
inc
dec
dec
movsb
aaa
adc
fdivs
cld
out
stos
xchg
inc
data16
fnstcw
ss
sub
arpl
xor
adc
inc
es
xchg
test
mov
jp
fstp
in
das
aaa
mov
sbb
popa
test
fiadds
test
subb
leave
jmp
cmp
cld
or
test
and
ret
sbb
jle
xchg
rorl
shr
shrl
xchg
faddl
sub
push
mov
jecxz
enter
hlt
sbb
push
out
sbb
push
or
sub
rclb
xor
jno
jns
sub
xlat
jmp
pushf
lret
adc
test
xchg
mov
mov
movsl
mov
mov
sbb
rcll
ret
je
test
cmp
jb
sub
jne
mov
adc
mov
xlat
fcomps
inc
shl
mov
push
sbb
mov
pop
sub
adc
xchg
mov
inc
sub
pop
add
into
mov
dec
dec
scas
and
outsl
sub
js
lock
sahf
cs
xchg
aas
sti
inc
or
popf
mov
cmp
and
cwtl
addb
and
sarl
mov
sbbb
out
mov
jecxz
inc
mov
and
sti
ret
lret
xor
cs
je
and
idiv
and
adc
lcall
mov
ss
daa
fldl
out
push
stos
jle
or
and
lea
or
pop
jecxz
shll
adc
adc
sbb
fldt
outsw
mov
addr16
jb
push
int
jge
test
or
mov
fistl
cld
jp
dec
fldenv
jnp
sub
adc
jp
inc
psubsb
daa
stos
push
cmpsb
lret
mov
idiv
xlat
jmp
adc
sbb
and
lret
and
mov
adc
sbb
jno
xor
gs
mov
mov
inc
in
jo
popf
clc
or
lods
jb
xchg
lock
inc
in
mov
lahf
jp
pop
sub
mov
lret
jnp
inc
and
inc
sbb
clc
cmpsl
mov
pop
test
movsb
cli
insl
dec
iret
push
sahf
icebp
lret
sbb
xchg
imul
jmp
cmp
push
jg
cmp
mov
cld
loopne
sub
dec
fcoml
aas
cmp
sub
adc
inc
out
and
push
xchg
mov
xor
ss
jg
jg
or
jge
ja
inc
out
pop
dec
cmp
lods
add
clc
jno
popf
repnz
imul
pop
mov
pop
sub
pop
inc
add
push
scas
lret
push
add
sub
add
mov
shlb
ffree
xchg
outsl
lea
pop
cld
in
sbb
mov
pusha
insb
out
pop
xchg
int3
sub
lahf
out
sub
sbb
scas
jge
jbe
pop
and
cmp
fsubrs
xchg
fsts
andb
in
imul
js
std
mov
dec
loopne
dec
inc
push
add
cmpb
lods
or
xor
dec
add
and
test
lods
sahf
insb
addb
dec
loopne
xchg
jb
loop
icebp
popf
outsl
js
add
sub
outsb
push
loope
pop
into
lods
aas
es
nop
stos
sbbb
or
mov
and
in
mov
dec
dec
lea
stos
mov
imul
mov
add
xchg
call
stos
imul
pop
insl
insb
imul
xchg
movsl
cmpsb
jp
pop
cs
cmpsb
loopne
add
pushf
bswap
sbb
repz
xchg
pop
mov
mov
inc
jae
es
jecxz
mov
cli
out
stos
sti
es
cmp
push
out
sar
pop
scas
ljmp
stos
insb
sub
jp
and
popf
dec
aad
pop
test
pop
in
pop
int3
scas
out
mov
movsb
sti
adc
and
fsubr
aam
int
mov
das
sub
test
into
mov
sbb
mov
neg
mov
jae
dec
and
int3
push
into
lret
and
icebp
gs
cmpsb
stos
pop
mov
lret
data16
mov
into
or
mov
xor
fs
dec
jge
add
ds
cld
xchg
test
jae
lods
dec
test
movsb
mov
push
cwtl
pop
xchg
mov
xchg
clc
scas
notl
in
jae
cltd
or
cltd
adc
es
adcl
sub
movsb
inc
jg
pop
fldl
xlat
rcll
mov
lcall
cmp
nop
subl
jl
shlb
push
adc
xchg
sbb
cmpl
sbb
adc
mov
lds
adc
sahf
popa
cltd
into
hlt
push
subl
insl
addb
add
in
aad
xchg
out
cltd
add
xchg
pop
stc
mov
into
mov
cld
repz
lock
in
and
push
mov
and
jl
outsb
cmp
pop
in
lds
adc
addr16
testw
add
pop
iret
and
inc
outsb
sarl
cmpsl
iret
movsl
xchg
je
cmc
mov
sti
mov
inc
jno
push
dec
xor
inc
xor
xor
jmp
push
iret
and
mov
xlat
ror
dec
mov
or
adc
add
mov
jns
mov
xchg
jg
pop
popf
int3
sub
and
pusha
sub
push
popf
sbb
popf
sub
adc
mov
push
push
and
pop
out
add
and
lcall
add
scas
add
imul
daa
inc
arpl
repz
add
inc
inc
sbb
inc
cmp
in
xchg
sti
push
cmp
inc
cld
frstor
arpl
mov
mov
dec
andb
cs
xchg
arpl
lods
or
cmpsl
jmp
jg
mov
inc
adc
in
pop
mov
mov
xor
pop
sub
enter
sub
test
das
add
ret
imul
mov
scas
jmp
nop
cmp
jno
adcb
bound
scas
pop
cltd
and
lods
mov
pop
and
sub
out
aaa
repnz
enter
movsb
mov
pop
jmp
push
inc
jle
lods
sub
adc
pop
rclb
fbld
outsl
ja
out
cmp
mov
jge
jbe
fs
jmp
push
xchg
xchg
test
repnz
inc
dec
das
jno
lret
adc
xchg
pop
test
pop
imul
pop
xchg
cmp
xchg
loopne
add
inc
sub
dec
xorb
sub
add
lods
mov
xor
lds
dec
mov
ret
test
push
int
xor
push
rorb
icebp
xchg
pop
push
iret
xlat
or
inc
dec
out
fwait
in
ret
jle
gs
sarb
cmc
imul
pop
out
push
aaa
jmp
xor
lds
cmpsl
mov
cmp
and
repz
fidivrl
inc
mov
xchg
sub
imul
popf
test
lock
outsb
mov
fdivs
and
push
imull
ds
ljmp
and
fdivl
loope
sub
fwait
imul
mov
test
sbb
cmpsb
pusha
into
cmp
add
and
sbb
and
negb
mull
pushl
lahf
mov
cmpsb
xor
sub
mov
sbb
pusha
es
sub
mov
out
sub
xchg
mov
mov
sub
push
and
cmp
pop
mov
xor
or
fnstenv
enter
or
fstl
sbb
jge
cltd
shll
insb
jmp
sub
mov
inc
orl
ljmp
xorps
repz
in
pop
jno
mov
dec
into
insl
scas
push
add
push
adc
cmp
in
sub
dec
cmp
aaa
pop
pusha
repnz
cmp
bound
stos
push
jmp
es
cld
sti
push
cmp
pop
and
xor
shll
jns
or
enter
mov
inc
lret
popf
sahf
aam
xchg
rorl
sub
out
ror
and
and
hlt
xchg
inc
cmp
fdivrs
xor
jl
sbb
push
imul
sbbb
lods
aas
rcrl
or
cmp
mov
fwait
xor
push
aad
jge
test
add
cmp
stos
lds
cld
outsb
push
mov
jb
int
nop
gs
sub
inc
insl
inc
pop
mov
jl
push
in
or
sbb
push
stos
lock
add
pop
aaa
addr16
imul
loope
push
sbb
mov
aas
or
jl
mov
push
dec
lods
jecxz
dec
mov
push
in
sbb
pop
repz
push
fmull
loop
sub
and
sub
add
pop
cmp
mov
sub
jno
xchg
mov
and
imull
push
mov
test
and
jmp
mov
data16
mov
loopne
mov
pusha
sbb
cli
mov
add
popf
jb
stc
xchg
rclb
mov
mov
jle
cmp
mov
in
test
sbb
inc
outsb
shlb
push
outsl
pusha
sbbb
pop
pop
jns
lods
stos
adc
adc
mov
inc
dec
stc
fcmovnu
ljmp
sbb
lret
xor
xchg
adc
push
mov
pop
test
inc
cmp
dec
test
adc
out
adc
sti
ljmp
jae
repnz
movsl
dec
pop
jg
movsb
bound
scas
testl
movsl
xchg
dec
sar
shll
add
mov
push
sub
outsb
loope
insl
mov
pop
fnsave
divb
int
cltd
inc
hlt
jge
aaa
bound
lods
test
xchg
fimull
xor
jecxz
add
into
outsb
pop
and
mov
cmp
xor
push
cmpsb
loopne
sub
add
sub
push
nop
dec
cld
ret
dec
push
fcomip
rclb
mov
fwait
mov
lret
inc
jmp
jns
loope
xchg
mov
mov
mov
xor
bound
leave
int
adc
lcall
adc
cwtl
cmpsl
xchg
pop
add
cmpsb
test
sbb
stos
jbe
xor
push
ja
xlat
pop
sbb
push
scas
pushf
mov
out
repnz
mov
jae
push
iret
add
aas
inc
inc
in
scas
cld
aam
xchg
aam
jecxz
sahf
lret
fimull
sahf
jg
adc
adc
hlt
fwait
dec
mov
div
test
push
jmp
sub
dec
lahf
jno
jb
aas
pop
pop
dec
leave
sbb
dec
add
or
pop
stos
shrb
mov
imul
pop
fiaddl
addr16
xlat
lock
push
movsb
mov
push
xor
mov
jns
and
adc
xlat
aas
sub
jl
jno
xchg
sub
jle
stos
ret
or
mov
mov
in
test
fmull
sub
inc
inc
in
inc
fadd
bound
pop
jmp
negl
stc
es
cmp
ret
or
icebp
int3
rolb
orb
push
sub
stos
pop
jl
negl
outsb
notl
aas
ds
jbe
sbb
xor
and
mov
jo
ficomps
pop
sti
xchg
sbbb
pushl
xor
int3
and
push
mov
xor
enter
pushf
add
adc
push
fldl
sti
dec
test
mov
xchg
hlt
dec
xlat
ror
test
loope
aad
pop
je
hlt
repnz
jne
cmp
mov
pop
adc
ja
dec
pop
pop
imul
loopne
ljmp
stos
push
jns
lcall
jecxz
xchg
xchg
sub
arpl
cmp
popa
sbb
addb
jne
jl
jmp
and
lret
outsl
pushf
pop
inc
adc
cmp
add
cmp
dec
xchg
push
inc
cmp
inc
sbb
xor
pushf
repnz
push
pop
lcall
in
lret
inc
mov
inc
les
std
mov
js
movsb
push
mov
out
insl
sahf
fidivrs
add
cmp
jl
xor
add
xchg
mov
mov
mov
xor
ret
sbb
xchg
dec
out
pop
loope
sub
aas
mov
fdiv
ds
ljmp
movsb
lock
xor
test
clc
pop
in
push
shll
push
jae
inc
xor
das
mov
jno
pop
clc
sbb
aam
mov
pop
rcr
stos
pop
xor
fwait
jb
adc
sub
mov
gs
mov
out
and
fsub
xor
and
dec
addr16
scas
nop
std
xchg
int
push
mov
loope
loop
arpl
adc
test
cld
fsubs
outsb
ljmp
ss
mov
fadds
inc
pop
xchg
pop
ret
inc
inc
cmpb
xor
insb
cltd
sbb
adc
retw
jmp
jae
cmp
mov
cli
mov
jb
inc
inc
pop
xchg
imul
jb
cmp
jmp
mov
mov
fsubs
push
in
mov
mov
mov
xor
xor
dec
sbb
mov
popf
xor
adc
mov
clc
icebp
xor
je
movsb
icebp
and
push
xchg
pop
aas
sbb
rclb
pop
out
sbb
es
pop
mov
shrb
xor
fwait
inc
mov
dec
sbb
out
push
sub
mov
rcr
es
fisubrs
movsb
inc
ljmp
dec
add
add
xlat
shrl
push
mov
push
shrd
loop
mov
sub
xchg
dec
cmp
adc
jae
test
sbb
test
rcll
outsb
jnp
mov
in
push
insl
mov
je,pn
andb
push
inc
call
mov
lcall
xchg
sub
sub
inc
or
lret
sbb
call
jbe
adc
leave
out
lock
movsl
and
sbb
inc
sub
cwtl
divl
jp
inc
mov
aam
xchg
or
icebp
pop
xor
push
push
fidivs
push
lea
rcll
add
roll
js
iret
sub
mov
js
mov
roll
inc
out
pop
pop
mov
push
xchg
pop
mov
cs
cld
add
pop
pop
das
mov
cmp
adc
jp
sbbb
sub
cs
cmp
push
pop
rcll
pop
adc
jbe
push
popf
adc
test
dec
loop
ljmp
mov
jmp
sbb
or
rol
inc
ret
push
popa
cmp
or
test
push
sub
clc
pop
test
in
adc
sbb
mov
lea
or
ficoml
xor
xchg
test
fsubp
or
sub
mov
and
sbb
xor
icebp
xchg
pusha
add
jae
jne
mov
mov
lods
add
xchg
mov
jo
repz
je
mov
leave
mov
and
pusha
cmpsl
inc
mov
testl
rclb
stc
pop
mov
test
jno,pt
xchg
and
xchg
push
pop
pop
aaa
movsl
push
dec
cmpl
outsb
jmp
repnz
xorb
xor
lret
xor
pop
shl
mov
inc
stos
ljmp
shll
sbb
mov
lahf
push
dec
mov
repnz
fwait
lret
push
out
xor
add
push
in
shr
adc
dec
jo
add
movsb
mov
scas
xor
add
in
or
loop
xchg
mov
lods
mov
pop
fwait
ja
mov
out
lret
nop
jle
setb
insb
arpl
mov
test
popa
rcrl
and
aam
inc
pop
mov
cmp
clc
mov
movmskps
cmc
push
and
inc
fwait
sbb
into
lods
dec
mov
imul
mulb
daa
clc
aaa
test
movsl
aam
xchg
mov
mov
lods
lods
imul
pop
push
in
jbe
nop
or
jne
mov
inc
add
lods
pop
push
add
jns
pop
lods
cs
mov
inc
or
ds
shl
sub
xor
cmp
ficomps
lret
loopne
nop
fs
or
movsb
inc
repnz
lock
sahf
faddl
jmp
dec
addl
inc
dec
xor
push
lret
adc
sub
popl
and
div
pop
data16
mov
xchg
gs
call
aad
clc
pushf
push
push
xor
dec
int3
ret
orl
mov
push
jae
aam
mov
mov
pop
pop
pop
sbbw
adc
pop
dec
inc
add
das
repnz
xlat
dec
mov
stos
jb
lods
enter
insl
orl
push
pop
js
fscale
sahf
adc
add
push
and
and
sbb
sbb
int
fs
sti
scas
pop
neg
sbb
test
xor
sbb
adc
inc
mov
cltd
inc
mov
in
cmp
jp
in
add
and
in
fwait
lods
cwtl
ret
popa
cmc
mov
bound
shrb
popa
and
in
adc
mov
cmp
paddq
adc
jo
add
push
jp
lcall
jp
movsb
test
cmp
xchg
or
ret
mov
enter
cwtl
mov
stos
or
jbe
pop
lea
mov
push
imul
xor
lret
cmpsb
dec
add
adc
or
xchg
dec
fsub
or
loop
mov
and
inc
xlat
sahf
ljmp
out
lods
out
push
xchg
jno
jmp
push
in
pusha
mov
adc
dec
incb
jne
shlb
sahf
adc
xchg
adc
and
mov
cmp
adc
enter
xorb
xor
jle
sub
cwtl
mov
dec
enter
lea
xchg
jno
inc
ljmp
in
sub
repnz
or
mov
hlt
mov
pop
in
ja
notrack
lret
jmp
into
sar
pop
jle
push
in
sub
clc
jg
mov
popa
xchg
js
ret
lcall
adc
aas
and
bound
pop
fdivs
jge,pt
in
pushf
pop
popf
push
or
cwtl
mov
pop
mov
inc
mov
push
fwait
or
xlat
insb
gs
movsl
pop
push
fldt
pop
jae
push
mov
jns
lods
lods
lods
inc
sbb
jns
adc
and
push
cmp
int
or
ret
hlt
lods
out
cmc
dec
stos
and
imul
mov
rcr
bound
sti
pop
or
les
inc
test
int3
or
lock
dec
xchg
outsl
push
lret
jle
mov
xorl
cltd
add
enter
jne
mov
xor
adc
addr16
outsl
inc
push
outsb
inc
mov
pop
rcr
jecxz
enter
pop
arpl
sub
mov
mov
movzwl
sub
pop
mov
aad
testl
jne
cmp
sbb
jl
outsb
in
ficompl
lret
enter
rorb
out
pop
ret
pop
fwait
rclb
xor
ret
cmpsl
pop
fucomi
testl
xchg
jmp
outsl
pop
sub
dec
cmp
mov
test
mov
cli
sub
cld
inc
shrb
dec
mov
and
pop
outsb
push
mov
jb
mov
fisttpl
xchg
or
adc
repnz
sbbl
in
mov
mov
xorl
sub
pop
xor
bound
mov
fidivrl
mov
sbb
inc
insb
adc
cmp
and
add
or
int
dec
cmpsb
mov
jbe
mov
nop/reserved
xlat
adc
jmp
xor
test
sub
test
cmpl
pop
loop
mov
jecxz
sbb
sarb
dec
in
adc
xchg
mov
dec
in
xor
jne
bound
dec
mov
fmuls
dec
sub
dec
mov
or
in
jnp
and
mov
push
cli
sbb
movsb
loopne
pop
push
jg
add
mov
in
aas
mov
imul
push
cld
cld
sbb
cmp
mov
inc
and
mov
jbe
push
test
push
mov
jmp
loopne
adc
sbb
sti
arpl
mov
roll
push
cmp
dec
es
jp
in
lcall
out
shll
adc
popf
andl
sub
or
fs
push
xor
fwait
pop
xor
mov
std
jnp
mov
cld
out
lods
shlb
xchg
dec
arpl
into
stos
out
xor
in
xchg
daa
adc
test
push
insb
faddl
pop
xchg
dec
fnstsw
ss
sub
mov
out
push
lahf
xlat
aas
dec
adc
movsl
scas
fadds
les
xchg
fcmovb
insb
nop
pop
push
sbb
pop
stos
outsb
jb
jo
xchg
dec
xchg
ret
xchg
and
or
inc
sbb
orl
dec
cli
pop
lret
push
and
enter
call
xchg
inc
cmp
lods
adc
mov
cmp
mov
sbb
in
into
mov
inc
aas
fnsetpm(287
cmpsb
xchg
rorl
push
fists
cwtl
mov
inc
mov
xchg
jae
and
sub
push
mov
fwait
sbb
add
addl
jp
rcrl
xor
mov
add
imull
mov
push
pop
xor
mov
push
xchg
ljmp
pop
das
push
pop
adc
sub
or
adc
xlat
lods
mov
outsl
jp
and
inc
add
fstps
clc
sarb
aaa
fimull
std
cld
pop
fdivl
mov
mov
mov
data16
cmp
or
outsl
sub
mov
in
out
adc
adc
push
mov
pusha
inc
loopne
repnz
mov
mov
mov
popa
xor
add
mov
out
addr16
sub
add
mov
in
fsts
adc
push
and
adc
jp
sbb
dec
cmp
xorl
imul
pop
outsl
fiaddl
int3
fistps
cmpb
and
fimull
ds
js
adc
lods
mov
ret
add
mov
lahf
add
mov
inc
push
jb
loope
pop
stc
mov
rolb
dec
out
jle
repnz
mov
jne
and
out
idivb
cmp
leave
mov
xlat
lods
cmp
mov
out
mov
jle
adc
xchg
or
aas
mov
push
or
pop
mov
in
leave
rcll
mov
cmp
callw
inc
daa
sub
jecxz
add
jl
jecxz
xor
rorb
lea
xor
clc
cltd
std
xor
repnz
rolb
stc
dec
pop
test
in
fisubrl
gs
lods
ficoml
xor
hlt
dec
es
xchg
rcll
mov
stos
fcoml
cwtl
movb
dec
les
mulb
imul
outsl
stos
xchg
in
sub
leave
loope
xorb
sahf
outsl
ss
in
fiaddl
mov
mov
sub
adc
sbb
mov
mov
fldl
sar
fmul
cmp
iret
push
sbb
andb
cmpsb
lock
add
inc
mov
inc
daa
jo
mov
lds
sub
xchg
push
mov
dec
jmp
push
or
xchg
in
inc
outsb
xchg
aam
stos
out
dec
mov
mov
inc
or
sub
and
data16
sub
jne
lds
sbb
arpl
outsb
and
test
shrb
mov
cmp
int
outsb
adc
xchg
push
xchg
repz
xlat
jo
int
mov
jmp
jp
jecxz
test
lods
mov
mov
inc
cmc
ficoms
sbb
shlb
cs
adc
xchg
push
out
sub
sbb
addr16
push
subl
mov
mov
xor
push
out
push
cli
inc
mov
dec
mov
fadd
jl
ficompl
mov
inc
mov
cmp
mov
imull
lods
push
out
js
cs
cmc
popa
xchg
push
inc
adc
push
lods
inc
sub
cwtl
jmp
push
jae
mov
mov
dec
lret
lcall
sbb
jae
pop
pop
aas
mov
mov
mulb
int
call
int3
push
adc
insl
mov
adc
cvtps2pi
or
mov
jne
fcomp
mov
xchg
jp
push
fdivrs
mov
lret
lahf
sub
lds
fisubrl
fisubs
sti
out
in
or
dec
sbb
cli
jp
adc
ret
ret
pop
jno
push
fsts
mov
test
jbe
je
cmp
push
shll
push
fcoms
jle
repz
nop
dec
xlat
shrb
ss
mov
mov
pop
xlat
push
aad
idivb
jecxz
jno
jge
push
iret
adc
sarb
jae
lods
push
scas
into
icebp
mov
mov
push
cwtl
push
push
and
pop
jo
xor
add
mov
imul
test
dec
addr16
stos
dec
xchg
call
mov
andl
push
in
test
pop
add
jo
fadd
and
adc
xlat
stos
sbb
mov
push
inc
or
loop
cmp
xchg
rcl
pop
lds
cmpsb
mov
cmpb
out
push
mov
adc
inc
rcrl
sbb
dec
scas
xchg
ret
mulb
popa
adc
push
cmp
or
int3
lahf
imul
mov
cmpsb
xchg
jnp
sbb
sub
xor
out
xor
xorb
clc
jmp
rcrl
out
adc
lret
in
xchg
push
scas
pop
sti
sub
cmp
repnz
inc
mov
mov
mov
mov
pop
pop
dec
or
ret
or
in
test
cwtl
aam
les
push
ljmp
add
movsb
inc
add
and
sbb
or
xchg
mov
js
add
sub
sub
inc
mov
outsb
dec
cmpb
outsb
shlb
dec
movsb
mov
nop
scas
jbe
scas
xor
cmp
divb
daa
stos
cmp
add
add
in
stc
add
int3
std
cmc
dec
insb
jecxz
jb
dec
into
mov
dec
into
scas
pop
cmp
stos
jbe
pop
nop
div
stc
xor
push
xor
mov
jge
lahf
daa
aam
xchg
pop
arpl
or
outsb
dec
cs
mov
pushf
pop
mov
roll
cli
nop
and
mov
das
dec
adc
add
xlat
enter
outsl
push
mov
iret
cwtl
push
and
stos
cmp
xor
lds
ja
out
adc
rclb
andl
add
fsub
jecxz
cmc
mov
lock
jnp
fs
push
or
orb
adc
addr16
outsb
cmc
add
jg
enter
outsl
mov
adc
fucomp
xor
mov
aam
and
sbb
js
das
mov
lods
add
aas
int
push
jbe
enter
jp
add
push
inc
mov
outsb
adc
and
or
rol
xchg
cmp
int
inc
movsb
or
js
push
fiadds
call
shlb
les
cltd
int3
xor
push
xchg
cmpsb
xorb
nop
outsb
xchg
lock
cmp
lea
xchg
jmp
call
rcr
arpl
jmp
popa
in
jp
clc
sahf
dec
mov
push
in
into
inc
imul
shrl
sub
cmpsl
xchg
mov
push
lods
and
mov
loopne
aad
sti
push
pop
inc
inc
addb
cltd
xor
int
out
cs
pop
scas
pop
pop
jmp
inc
xchg
xlat
daa
cld
mov
mov
pop
and
inc
xchg
mov
and
arpl
and
loopne
outsb
loopne
jns
mov
xchg
gs
jp
js
pop
scas
xchg
lcall
js
test
icebp
lods
fstpl
das
into
pop
sub
mov
cmp
out
mov
inc
adc
xor
aam
loope
mov
sub
adc
aam
sbb
rorl
mov
iret
and
jb
push
loopne
xchg
mov
aad
dec
jbe
add
fidivrs
sub
mov
and
xchg
lods
xchg
adc
js
push
xlat
bound
inc
mov
int
dec
inc
adc
lock
adc
mov
sarl
inc
dec
pop
mov
ja
mov
dec
cld
jne
mov
add
int3
xor
cmpsl
in
test
inc
sbb
sub
inc
adc
jbe
in
addl
pop
pop
fcomp
fs
nop
bound
shrl
add
mov
pushf
jns
sbb
adc
add
adc
test
mov
xor
push
loope
or
fistpl
stos
leave
lods
gs
les
out
mov
add
inc
movsb
imul
sub
or
fs
movsl
div
or
cmp
dec
and
inc
movsb
and
dec
rcl
ja
gs
addb
xor
out
arpl
push
adc
and
dec
pop
ss
cmp
lds
add
daa
mov
xor
sbb
mov
loop
or
jmp
out
rol
mov
enter
jbe
mov
jecxz
fisubs
add
hlt
and
stc
xor
mov
clc
sti
jmp
fiadds
lock
push
xor
cwtl
dec
dec
add
lods
das
inc
adc
xor
mov
adc
fiadds
out
mov
pop
ffree
jb
mov
loop
jle
jns
aaa
sbb
cmp
add
inc
mov
pop
inc
sub
sti
xchg
dec
mov
sbb
sbbl
dec
repnz
jae
frstor
mov
int3
mov
pop
das
out
orl
pusha
arpl
flds
popf
popf
rclb
push
fwait
xor
dec
jg
test
imulb
aaa
stc
add
mov
cmp
xlat
sub
loop
out
icebp
lds
and
outsb
xor
icebp
jecxz
xchg
sbb
inc
mov
ljmp
and
and
rolb
mov
insb
dec
pushf
imul
test
pop
sub
inc
adc
decl
loope
xor
stc
aas
and
addb
je
xor
sbb
push
ss
fxtract
insb
addb
dec
inc
mov
pop
movsl
cmp
addr16
sarl
dec
sub
divb
sub
pushl
pop
jg
int
mov
cmpsl
push
jno
mov
xlat
scas
inc
popf
shlb
mov
cmp
hlt
in
insl
lods
cmp
push
movsl
mov
jle
cmp
cwtl
dec
or
push
or
negl
pushf
test
faddp
gs
aas
fcmove
sbb
xchg
and
sbb
jl
jecxz
gs
push
mov
mov
cli
cmp
sub
xchg
int3
js
push
out
icebp
aam
push
outsb
movsl
data16
cmp
icebp
xor
and
sub
xchg
loop
ja
movsl
cmp
lret
lret
xor
jmp
mov
add
stos
into
pop
dec
lods
or
pop
inc
dec
fs
in
call
push
or
or
push
out
mov
mov
icebp
inc
mov
out
xchg
jne
mov
call
add
mov
push
js
xor
mov
jmp
add
mov
adcb
rcr
push
push
pop
sub
leave
pop
insl
lods
js
xchg
in
pop
out
test
loopne
scas
outsl
add
mov
xchg
insl
sbbb
adc
out
lret
inc
popa
inc
mov
add
es
xor
xor
push
add
sub
xor
lods
popf
pop
and
jo
push
lcall
add
dec
mov
jae
nop
pushf
cmpb
fwait
shl
and
repz
ret
inc
adc
dec
sub
sub
mov
pop
jo
lcall
push
dec
and
pop
mov
test
xchg
nop
sahf
adc
inc
push
insl
pop
push
out
mov
jge
ss
cld
adc
flds
push
mov
jns
rolb
into
jns
or
movsl
mov
and
loopne
push
inc
lds
js
push
push
or
lock
test
add
movsl
rcrl
iret
loope
aas
or
dec
mov
nop
fdivrl
push
push
mov
jb
fistpl
cwtl
cld
sahf
xor
push
adc
sti
pop
add
mov
add
or
pushf
shll
pusha
pop
dec
adc
mov
inc
mov
pop
and
add
and
into
mov
xchg
popa
cmp
xor
mov
scas
add
mov
jg,pt
cmp
fs
lret
inc
push
and
jne
lock
adc
adc
xor
xor
push
add
testl
out
sbb
xchg
xchg
inc
or
outsl
cli
insb
hlt
test
rorl
mov
daa
cwtl
push
push
jmp
mov
ljmp
mov
cltd
xchg
cmpsl
lock
stos
cmp
popa
lods
inc
jne
ljmp
mov
ret
gs
xchg
aad
xchg
xorb
repz
int
push
inc
ret
mov
sub
aad
jecxz
mov
or
imul
mov
scas
jl
mov
mov
xchg
lock
outsb
in
inc
jae
ret
sbb
push
loop
sbb
enter
mov
pop
add
fdiv
pop
es
in
loop
popa
insb
ljmp
adc
xor
dec
fsubs
mov
push
xor
xor
mov
icebp
pusha
pop
cltd
push
inc
and
pop
inc
mov
addr16
repz
scas
cmpsl
xlat
hlt
ret
leave
push
mov
jno
outsl
add
sub
xor
xor
and
cmp
and
and
mov
xchg
lds
in
shlb
mov
mov
adc
sub
lcall
pop
dec
dec
pushf
push
jmp
sbb
out
dec
ljmp
and
aas
scas
test
jns,pn
aad
xor
loopne
lret
cltd
sbbl
jbe
push
int
loopne
push
inc
lea
lea
repnz
jecxz
sbb
add
or
jge,pt
push
or
push
popf
stc
xorl
imul
shll
dec
mov
mov
lods
cmp
cli
adc
adc
arpl
pop
add
adc
mov
push
out
mov
mov
add
cmpsb
out
call
stos
and
inc
loop
dec
out
hlt
enter
sub
popf
test
outsb
sub
sub
stos
jnp
scas
jbe
jbe
xchg
inc
subl
mov
mov
lea
jnp
pusha
cld
les
jle
fcomi
das
jae
mov
scas
btr
mov
pushf
inc
flds
mov
mov
sub
cli
inc
test
and
sub
push
in
xchg
into
pop
push
add
push
cmp
jbe
and
dec
cli
in
push
xor
test
xchg
pop
movsl
gs
add
fadds
pop
popf
jbe
notl
pushf
sbb
and
cwtl
mov
pop
xchg
pop
xor
in
bound
lods
or
xchg
xlat
mov
mov
repz
jo
xorw
pop
lds
jecxz
or
test
jbe
pop
dec
imul
add
mov
inc
cwtl
add
ds
mov
in
stos
jg
pop
jae
xchg
inc
and
sahf
xor
out
mov
lcall
sub
jecxz
in
sahf
push
aas
out
adc
jne
cmp
lods
sbb
nop
cmp
cmpsl
insl
jmp
insb
popa
out
movsl
pop
sbb
mov
and
jae
dec
imul
xchg
aaa
insb
mov
add
add
rorl
sub
ljmp
movsl
jge
cmp
inc
std
and
mov
inc
pushf
push
dec
jo
jbe
icebp
mov
mov
shrb
adc
adc
pmuludq
xlat
roll
xchg
jns
lods
dec
int3
adc
push
mov
in
ret
fildl
xchg
sbb
push
inc
ds
mov
push
jnp
push
mov
jmp
pop
popw
clc
lret
jns
push
inc
push
sahf
in
add
in
add
xchg
outsl
scas
adc
in
sbb
aad
jmp
or
cmpsl
pop
int3
sub
jl
loopne
scas
sbb
and
in
clc
shlb
hlt
cmpsb
imul
sub
xchg
xor
push
cmp
leave
xor
jno
mov
in
xor
lret
call
das
stos
adcl
push
fwait
pop
gs
adc
mov
jge
jecxz
addr16
push
cmpsl
rcl
iret
sub
xchg
mov
popf
sbb
jp
cli
std
les
inc
test
pop
cltd
icebp
mov
cmp
lock
into
jl
add
lret
push
mov
add
inc
scas
in
jnp
pop
pop
cmpsb
dec
inc
mov
jne
popf
adc
imul
lret
out
xor
cwtl
cmc
mov
push
lcall
out
cmp
dec
loopne
movsl
or
popa
dec
in
int
int
fisubrl
in
gs
mov
addr16
std
sub
cmp
dec
xor
test
push
pop
leave
add
xchg
adc
jl
push
das
xchg
ljmp
scas
das
aam
outsb
movsl
cwtl
pop
cmp
outsl
xor
in
arpl
jl
std
mov
ret
inc
push
sub
push
jb
inc
popf
gs
mov
inc
out
addr16
orl
and
push
lahf
repnz
inc
out
pop
es
push
xchg
adc
js
mov
sub
cmp
das
cmpsl
xchg
mov
cmp
inc
xchg
or
xor
push
bound
xor
fisubrl
mov
in
cmp
adc
and
fwait
leave
cs
loop
cmp
cmp
in
add
leave
or
cmpl
sbbb
mov
cwtl
repz
push
imul
sbb
fildll
xor
out
add
loopne
adc
push
shll
inc
add
stos
cmp
adc
xorl
jecxz
mov
jnp
mov
fwait
lret
mov
xchg
adc
cltd
out
push
call
cmc
movsb
pop
mov
push
getsec
fldenv
cmp
mov
mov
dec
rorb
lds
shll
lods
idivl
aam
out
inc
imul
rcll
inc
stos
test
xor
imul
jno
mov
rclb
lea
insb
rcrl
xacquire
fisttpll
jl
bound
dec
shll
and
dec
insl
insb
pop
movsb
cmp
jbe
xlat
add
into
aad
cmpsb
incb
jecxz
lock
fsubrp
mov
jo
sub
and
cmp
filds
fwait
pop
cwtl
adc
or
jbe
int
stos
mov
and
cltd
ret
lds
sbb
addr16
xor
mov
lods
xchg
fisttps
test
divl
push
cli
addr16
adc
inc
mov
fildll
add
loop,pn
xchg
fcoml
pop
fwait
hlt
mov
loop
out
rcll
and
mov
das
fistpl
cmc
aad
inc
lds
cs
arpl
fcompl
dec
iret
push
push
xor
fstpl
and
or
inc
or
xor
fbld
and
push
sub
andb
push
cmp
das
jl
push
adc
subb
das
and
data16
cmp
xchg
daa
arpl
nop
loope
mov
mov
sti
rolb
add
push
mulb
dec
inc
jmp
push
jp
lahf
and
xlat
test
cmp
pop
cmpsl
sbb
fstps
lods
orb
sbb
orl
xchg
ret
pop
sub
imul
lock
sbb
pop
or
lahf
call
popa
lods
dec
sub
sub
sbb
icebp
cmp
sbb
jle
jl
or
stos
sahf
mov
ss
pop
or
mov
mov
jle
jmp
aad
xor
jae
push
out
sub
test
pop
jnp
mov
mov
jl
rcr
or
shl
sbb
das
xor
mov
fwait
notl
pop
dec
dec
and
jp
das
sbb
andb
insb
mov
push
icebp
fistps
jge
lret
int3
jmp
aad
fisttps
add
push
lods
jecxz
inc
mov
lock
jp
push
ljmp
js
xlat
lret
lods
iret
scas
push
xchg
pop
cmp
mov
fnstenv
icebp
jmp
lock
pop
shlb
out
mov
ss
push
out
inc
jl
aas
mov
lods
nop
gs
push
cwtl
adc
sbb
cmp
lret
sub
leave
mov
adc
or
orl
loop
cs
notl
pop
push
repnz
mov
lods
test
mov
nop
mov
leave
cwtl
inc
pop
jae
lret
sub
daa
pop
push
cmp
add
xchg
decl
movsb
call
and
mov
aas
push
jne
mov
bound
pop
mov
xchg
pop
fs
fnstenv
mov
jo
sbb
jae
test
mov
imul
out
shrb
shll
ret
pop
xor
adc
or
and
or
insl
rorb
jmp
cs
lahf
lock
mov
fucomi
ja
jns
or
sbb
inc
jo
xchg
jo
andb
out
pop
call
in
cmp
imul
inc
ja
bound
imul
outsb
ret
xchg
pop
pop
pop
sbb
sub
pop
sbb
int
in
push
adc
bound
je
ljmp
inc
fstpl
int
xorl
dec
insl
jp
outsl
outsl
jbe
mov
fisubs
lea
jle
inc
leave
in
or
sbb
adc
jne
sub
stc
mov
pop
mov
movsl
and
pop
pop
fiaddl
loopne
adc
and
add
packuswb
add
movsl
sbb
sbb
loope
cmp
mov
shlb
icebp
mov
sbb
add
jns
mov
lcall
xor
xor
pop
jmp
repz
cmp
lret
mov
mov
or
push
push
jb
jg
or
dec
lods
mov
dec
adc
jl
mov
push
test
xor
movsb
dec
flds
and
pop
or
sbb
aam
int3
popf
mov
xchg
lret
lods
and
inc
jne
and
test
ret
xchg
lds
and
adc
xchg
or
out
lret
xor
jne
mov
les
ja
sub
insl
dec
fldcw
dec
sub
rcr
cmp
xchg
bound
cmp
dec
subb
test
xor
bound
mov
push
jmp
mov
push
hlt
je
mov
sarl
jns
fwait
bound
addr16
ret
rorb
popa
mov
or
adc
rorb
out
or
cmp
in
cmp
adc
mov
nop
mov
in
xchg
lret
inc
pop
popa
jmp
ror
div
push
lcall
mov
push
iret
push
idiv
mov
pop
mov
sarb
jo
sub
mov
test
inc
call
or
flds
mov
jmp
sub
iret
addr16
fimull
cmpb
push
dec
icebp
or
imul
mov
sub
or
inc
inc
or
cmp
xchg
int
push
sub
mov
and
fs
clc
mov
insb
cmp
mov
add
sbb
jno
std
fbld
arpl
dec
pop
xchg
xor
and
popf
jp
cmpsl
mov
inc
enter
xchg
shll
jne
pushf
mov
mov
xchg
int
out
mov
inc
mov
out
mov
fisttps
je
jae
mov
push
das
sbb
mov
aas
jns
test
repz
mov
mov
pop
mov
icebp
sbb
mov
stos
cmp
jns
orb
jg
lds
mov
fcomp
xor
add
jb
adcb
push
mov
xchg
xor
adc
xor
call
sub
push
jge
push
jge
adc
out
inc
mov
fs
sub
pop
mov
bound
aaa
popf
lret
cmpsb
dec
xchg
push
fisttps
inc
pusha
fwait
jg
jnp
int
or
adc
out
cli
xchg
fwait
xchg
popf
addb
pop
out
mov
jle
add
pop
outsb
mov
xchg
or
adc
mov
mov
daa
xor
into
call
mov
cmp
dec
jns
sub
das
cmp
in
divb
add
mov
push
hlt
mov
lds
fadds
cltd
jnp
sub
clc
imul
push
pop
sbb
mov
pop
fisttpl
ja
jb
pop
lock
jecxz
sbb
jo
lahf
and
adc
addl
sub
xor
insl
push
test
add
xchg
mov
bound
cmp
jl
and
xor
clc
sub
test
pop
aam
push
pop
mov
fisubrl
loopne
mov
repnz
out
adc
fisubrs
jns
cmp
mov
iret
iret
cwtl
jb
cmpb
std
je
mov
paddb
cmp
xor
jns
pop
jl
loopne
inc
pushf
xor
mov
mov
subb
loop
mov
push
mov
push
sub
decb
push
xorl
dec
aas
out
aas
sub
arpl
mov
mov
notl
jbe
and
lahf
gs
push
adc
lds
hlt
test
repz
cmpl
push
push
sub
leave
fcompl
mov
adc
in
cmp
jl
idivl
nop
xchg
inc
push
gs
sbb
fnsave
mov
aam
fstpl
in
stos
pop
jns
pushf
mov
adc
and
jg
jae
fldl
xchg
push
sbb
or
pop
decb
inc
sub
popa
fbstp
pop
sub
cld
ficoml
jo
add
rcr
stos
dec
subb
aad
sbb
cs
push
cli
push
jb
dec
mull
js
push
sub
mov
lret
cwtl
je
call
and
jecxz
stos
mov
into
sbb
in
mov
xor
sbb
sbbl
fmull
push
pusha
cmp
test
xchg
and
and
outsl
sub
leave
cmp
pop
mov
add
fdivs
adc
into
dec
cmp
add
and
in
sub
xchg
pushf
fstpl
jnp
ds
pop
cs
push
mov
icebp
hlt
cmpsb
sbb
loope
enter
sbb
push
mov
js
pop
pop
test
inc
mov
jmp
fisubrs
insb
mov
mov
sbb
shrl
loope
sti
cmp
sub
jno
scas
shll
pop
pop
cmpsb
mov
xchg
xchg
mov
lods
jl
mov
xchg
insl
mov
in
cmp
pop
mov
bound
cwtl
jno
shl
jmp
mov
mov
int3
sbb
jbe
jb
adc
xchg
jne
xchg
fnstenv
adc
out
sbb
dec
xchg
mov
jge
repz
ret
out
fists
and
xor
push
int
pop
inc
mov
or
mov
cmpsb
mov
lea
mov
mov
iret
push
jp
pop
fcomps
pusha
sub
fstps
and
jnp
scas
or
loope
in
test
jp
rorl
pop
lahf
pusha
mov
imull
sbbl
lcall
xchg
std
andb
and
aad
icebp
mov
je
xchg
aam
add
jg
jne
in
cwtl
jns
data16
push
loop
stos
out
insl
popf
add
rcrl
mov
sahf
adc
cmp
jl
fnstcw
mov
ret
cmp
cwtl
lds
jno
test
dec
sarl
push
sbb
stos
jns
rcr
mov
mov
imul
xrelease
std
jae
dec
push
mov
cmc
push
lock
and
das
aas
push
movb
arpl
jge
decb
pop
leave
iret
add
ud2
jb
cld
fcomps
cld
scas
pop
mov
rcll
cmp
lods
and
add
imul
fimull
pop
std
push
push
or
adc
ret
aad
scas
scas
repnz
xor
shll
push
mov
ret
jb
cmpsl
idivl
xchg
sbb
pop
out
mov
pop
test
int3
lods
cwtl
cld
mov
les
in
xor
pop
outsl
or
or
je
loopne
cmc
or
sti
clc
add
xor
xchg
out
shll
test
adc
repz
cmp
jg
xor
sbb
push
push
sbb
aam
push
xor
pop
xor
fisubrs
jb
dec
repnz
daa
add
das
mov
rol
xchg
std
inc
roll
cmp
loopne
test
push
sub
test
stos
popf
sub
xchg
je
adc
ret
popa
push
pop
dec
adc
mov
repz
test
int
jp
outsl
fucom
out
or
xchg
xor
and
mov
or
in
jl
xor
stos
pop
dec
push
pop
pop
cmp
sub
inc
sbb
movsb
clc
or
scas
xlat
ljmp
rclb
mov
in
arpl
popf
daa
push
and
lea
add
add
ds
jno
out
stos
jge
jle
pop
stos
push
fcomps
mov
xor
js
lods
inc
push
push
jl
mov
out
mulb
je
sub
cmpsb
inc
lcall
and
fiaddl
fwait
repnz
rcr
cli
std
xchg
ds
cmp
sbb
or
mov
fisubrs
lods
dec
popa
arpl
add
xor
mov
add
xor
sti
cs
shll
push
pop
fsqrt
sbb
sub
mov
jnp
inc
inc
out
mov
push
xchg
jmp
jmp
pop
mov
mov
mov
scas
mov
jae
insb
mov
and
pop
inc
xchg
imul
xor
xor
add
mov
xlat
das
fdivr
mov
lock
jns
sub
mov
add
sub
fwait
test
dec
ret
js
xchg
ss
fistl
jle
lea
mov
scas
xor
jns
out
xchg
inc
sub
outsl
into
repz
inc
add
aad
call
pop
rclb
mov
mov
pusha
xlat
mov
dec
xchg
and
pop
js
inc
adcl
xchg
sub
loope
push
dec
mov
je
jp
sbb
pop
mov
fwait
and
push
mov
sbb
mov
das
sti
push
mov
and
mov
mov
out
push
push
jbe
out
aaa
mov
mov
lods
adc
inc
lret
leave
out
sub
push
popa
dec
mov
adc
sub
or
cwtl
adc
push
movsb
test
pop
in
cmp
and
je
mov
jno
das
push
mov
clc
outsb
fisubrl
sbb
pop
cmp
call
pusha
adc
es
jns
fsubr
mov
imul
mov
mov
mov
pop
les
sti
cmp
and
or
ds
mov
stc
cmp
xchg
dec
repnz
cmpsl
cli
jmp
sub
dec
mov
and
cli
jecxz
fcmovb
mov
std
shr
addr16
push
pushf
inc
adc
cwtl
pop
aaa
idivb
stos
dec
mov
ja
in
mov
dec
inc
mov
int3
insb
add
fdivl
xchg
xchg
stos
mov
mov
out
fisubrl
and
out
cmp
jl
not
xlat
fnstcw
dec
pop
jge
or
push
lcall
cwtl
cmp
mul
outsb
push
push
jnp
jnp
dec
jle
mov
add
mov
jns
mov
aaa
ljmp
hlt
in
shll
notb
aad
mov
sti
pop
xchg
out
enter
dec
mov
xor
out
or
loopne
outsb
sahf
lods
iret
jge
jge
mov
sub
andb
push
xlat
jns
sahf
dec
aas
clc
adc
xchg
jns
int3
mov
add
int
xorl
sarb
pop
adc
cli
mov
fs
outsb
orb
xor
gs
xlat
mov
ds
jge
mov
xor
ficoms
push
xor
cwtl
lea
dec
and
xchg
outsb
mov
arpl
mov
add
ds
jne
data16
or
pop
sub
arpl
sub
stos
mov
fwait
aas
inc
dec
adcb
jns
cmc
push
xchg
repz
and
or
out
enter
cli
xlat
jnp
adc
movb
fs
mov
testl
into
dec
push
aam
ja
dec
xchg
adc
jae
push
pop
mov
and
pop
dec
pushf
cmp
inc
cmp
or
or
pushf
das
jmp
lret
mov
jecxz
stc
out
jmp
mov
jle
jmp
fdivl
or
pusha
sbb
pop
pop
push
test
sub
and
in
lcall
push
jnp
xchg
or
mov
ja
into
dec
or
into
push
ror
and
test
loope
loopne
fstl
cld
jle
into
movsb
out
lds
mov
dec
popf
xor
jnp
push
outsb
repz
or
lret
in
out
test
mov
cmpsl
in
popa
ss
push
jle
push
int3
dec
scas
push
mov
mov
mov
fcmovnb
push
enter
fcoml
lods
cmp
imul
xchg
and
lea
push
mov
mov
cmc
push
mov
scas
filds
fadds
pop
xor
cmp
fmull
mov
push
lret
cmp
out
test
fistl
cwtl
loopne
lds
in
mov
jne
fs
pop
mov
or
nop
or
movsb
dec
das
xchg
test
jae
and
cmp
pop
hlt
mov
dec
decl
jns
cwtl
ss
nop
pop
sbb
add
std
xchg
pop
jnp
add
sub
jp
xchg
iret
mov
cmp
adc
cmp
pop
es
cld
rorl
das
popa
xchg
in
nop
lahf
cmp
movb
fsubl
mov
call
jp
je
cltd
in
xchg
movsl
sbb
mov
and
imul
stos
rcll
push
sub
jmp
dec
pop
and
in
insl
push
xchg
add
shll
out
jmp
rcr
pop
jnp
push
pop
ret
sbb
es
scas
dec
cmpsb
cmpsb
shr
ja
mov
jne
and
add
push
ret
inc
xchg
cmp
sar
call
dec
sub
add
in
dec
enter
sbbb
xchg
insl
loopne
inc
inc
arpl
sub
enter
sub
mov
stos
xchg
lcall
cld
es
ljmp
out
popf
pop
stos
xchg
imull
pushf
mov
push
fidivl
popa
adc
pop
add
push
test
enter
cmp
xchg
pusha
mov
push
cmpsl
movsl
cmp
popf
mov
cmp
pop
jle
enter
mov
fsubl
xchg
fadds
sub
jbe
inc
ljmp
lahf
add
mov
pop
mov
scas
inc
insb
fstl
fbld
mov
adc
jnp
lods
loop
call
std
cmp
xchg
fwait
sub
cmp
jno
jg
add
lock
sub
test
push
leave
xor
cmpsl
imul
mov
push
sti
jbe
push
dec
loopne
or
mov
cmp
inc
dec
fadds
shufps
jmp
mov
xchg
test
and
dec
loopne
cmp
xor
repz
dec
push
out
sub
leave
loope
jno
sbb
movsb
mov
jbe
sbb
jns
lcall
aaa
xor
mov
push
imul
dec
jno
aam
adcb
lods
in
in
cmpsb
pushaw
jl
cmp
push
lret
xor
insb
add
jmp
popf
inc
mov
pop
cltd
mov
outsl
or
sbb
jo
mov
cltd
mov
push
popa
imul
jge
jnp
dec
clc
cltd
push
sbb
fdivp
lcall
sbbl
shrl
jo
cmp
jle
dec
iret
push
out
std
dec
mov
and
pusha
mov
adc
nop/reserved
rcrl
out
gs
push
adc
xor
adc
dec
sub
push
push
inc
jmp
test
ret
or
insb
cld
and
jne
pop
jge
dec
inc
leave
mov
lahf
dec
repz
xlat
clc
push
jle
cmpsl
loopne
xchg
jl
or
xlat
jns
dec
adc
jns
js
out
push
lahf
mov
lods
movl
push
jae
notl
stos
mov
push
mov
ja
icebp
jno
out
jl
push
mov
pushf
data16
pop
mov
xchg
push
pop
dec
jns
shlb
fsubrp
add
dec
scas
inc
imul
scas
clc
out
gs
dec
jns
repz
or
sub
stc
sub
inc
repnz
dec
repz
gs
pop
lock
push
push
aad
fsub
fistps
fs
jl
sbb
addr16
clc
fxch
xor
lea
gs
sti
adc
rcl
add
jnp
xor
cmpsl
xchg
mov
lea
stos
mov
xor
dec
xor
push
fcomps
cmpsb
jne
mov
sub
lret
push
and
pop
add
in
inc
and
sub
je
pop
cmc
scas
decb
out
mov
mov
sub
hlt
mov
lea
push
loope
cmp
mov
imul
popf
jl
xchg
mov
push
and
jmp
int
mov
cmp
xor
cmpsl
push
movsb
mov
loopne
arpl
mov
xorl
cwtl
inc
mov
adc
adc
mov
stos
mov
loop
push
adc
push
add
int
dec
lods
clc
push
mov
mov
rclb
sarb
and
fidivrs
lahf
lcall
fmull
push
cltd
arpl
fisubl
pushf
fscale
lcall
mov
sahf
lret
js
xor
mov
aad
xchg
dec
dec
mov
xchg
jo
pop
lock
adc
or
imul
lds
mov
jno
inc
das
add
in
nop
orb
rclb
jbe
stc
jno
pop
mov
sarb
lock
and
lret
fwait
arpl
out
push
jle
sbb
and
lret
les
xor
fwait
push
jae
cmp
xchg
inc
xchg
test
int3
lods
mov
loop
mov
xchg
dec
mov
je
add
imul
jp
mov
cli
or
xor
adc
mov
clc
dec
sahf
sbb
push
repz
rol
bnd
pop
xlat
xchg
mov
pop
hlt
adcb
fs
pop
pop
out
sub
shrl
dec
cmovp
mov
fwait
cmc
mov
hlt
rclb
popa
iret
jo
in
std
fiadds
sbb
enter
adc
js
adc
mov
stos
aam
dec
jno
inc
popf
mov
imul
call
mov
push
xchg
mov
loopne
push
dec
push
jne
add
push
lods
sub
mov
imul
bound
xchg
jle
mov
mov
outsl
nop
lock
rclb
imul
jmp
sti
pop
repnz
outsb
xchg
test
ds
scas
cli
imul
imul
pop
mov
lret
dec
mov
xor
adc
cwtl
fidivl
xchg
mov
sbbb
out
jecxz
jb
movsb
movsb
mov
adc
enter
push
cmpsl
es
xchg
in
sbbl
aam
scas
fisubrs
je
cli
outsl
inc
push
pop
lahf
in
faddl
lods
adc
ret
lahf
cltd
mov
insb
test
jbe
out
xor
pop
xchg
jb
or
pop
push
xor
inc
imul
push
outsl
inc
fsts
add
jbe
xchg
cmp
mov
incb
dec
mov
sahf
cmp
mov
lahf
sub
jle
push
fbstp
sbb
insl
mov
jg
lods
xchg
push
mov
testl
lret
data16
sbb
pop
outsb
hlt
xchg
sbb
add
js
push
lcall
lods
imul
push
fsubrl
mov
mov
dec
adc
or
fwait
adc
dec
sbb
ret
push
add
aas
leave
xchg
shl
lahf
or
dec
movsl
ret
repnz
sbb
xchg
outsl
ss
xor
pushf
pop
add
rorb
jno
cmp
push
test
sahf
in
mov
push
fxch
jnp
hlt
sub
mov
sbb
jnp
fucomip
addb
mov
lret
push
mov
pop
aad
or
cmp
in
cmp
leave
cmc
pop
cmp
dec
test
stos
and
test
push
inc
xchg
sbb
rcll
jne
sub
cmc
push
pop
mov
ljmp
test
jae
inc
aam
pop
cmp
daa
sub
or
fucom
push
adc
sub
mov
mov
mov
andps
pop
pop
xor
jo
mov
test
negl
xor
pusha
test
int3
clc
jo
jo
arpl
adc
lret
push
dec
push
sbb
shl
jno
rorb
pushf
xchg
bound
popl
loope
or
sbb
or
stos
push
xchg
cwtl
ficompl
jg
mov
movsb
jmp
push
sub
xlat
ret
in
mov
imul
add
fmuls
sbb
or
cmc
fsubr
sarl
inc
adc
fwait
push
sbb
jnp
add
push
bound
or
lahf
cmpsb
iret
jle
mov
xchg
fsts
lds
add
sub
lret
jne
xchg
outsl
lock
ret
and
cmp
or
pop
sti
lods
clc
inc
adc
jbe
into
cmpsb
leave
inc
adc
test
dec
mov
test
xorl
aas
add
dec
movsb
mov
out
pushf
mov
and
aad
jp
mov
ret
jnp
mov
pop
pop
ss
cs
dec
into
enter
xor
into
in
mov
mov
mov
push
popf
or
hlt
or
and
or
adc
xchg
scas
adc
aad
add
negb
cmp
leave
mov
cmc
int
add
xchg
fildl
cltd
lea
scas
loop
aas
mov
dec
jnp
mov
adc
movlps
adc
mov
pop
mov
ret
dec
ljmp
dec
js
add
xorb
mov
xchg
sub
movsb
enter
ficoms
mov
lock
sub
push
jp
pop
jno
fildl
inc
into
mov
pop
jecxz
cmpsl
mov
cmp
test
jge
in
jl
test
stos
and
add
xchg
lods
jo
dec
jmp
push
lahf
idiv
push
dec
test
test
add
pusha
es
jg
pushf
jecxz
mov
arpl
push
icebp
pushf
add
call
lds
outsb
cmp
fbld
and
out
test
pop
ret
arpl
std
lret
dec
push
in
sbb
in
outsb
lods
cmp
je
cmp
dec
push
inc
mov
xchg
ds
add
pop
mov
es
mov
ret
and
or
rcr
out
add
int
int
roll
inc
xchg
and
mov
jnp
mov
xlat
sbb
fiadds
mov
dec
pushf
mov
clc
push
sub
xor
sub
repz
shlb
js
aaa
pop
sbb
into
jmp
outsb
rcr
fs
adc
cwtl
cmc
fstpt
out
xor
mov
xchg
push
aaa
hlt
int3
pusha
cli
clc
xlat
ljmp
bndstx
mov
pop
sub
mov
xchg
fdivrs
shll
orl
icebp
insl
xchg
test
adc
ds
out
adc
sbb
stos
aam
and
xlat
xor
mov
mov
rcll
mov
sbb
arpl
pop
aad
push
call
mov
enter
add
ffree
jns
sub
add
mov
lahf
repnz
dec
push
jg
fidivrl
cmp
lock
stc
sbb
shl
jo
push
xchg
push
loopne
add
mov
fisttpll
int3
mov
or
mov
and
lock
sub
pop
cmp
das
jb
and
jnp
inc
jbe
push
mov
test
aas
orl
in
fmuls
in
adc
mov
movsl
add
jg
xchg
lods
pop
outsl
movsb
stc
je
mov
push
addr16
dec
adc
add
and
mov
push
sub
jmp
bound
sub
mov
fnsave
cld
jns
xor
out
inc
pushf
sub
mov
sub
insb
repnz
lret
jmp
ds
fmuls
mov
loop
fdivs
clc
pop
jbe
lods
push
mov
outsl
mov
mov
pop
insb
add
mov
cmpb
in
fs
cld
ret
mov
and
sub
dec
jo
shr
and
push
testl
add
jle
je
shr
xchg
leave
fiaddl
pop
leave
stos
lods
push
fstpt
cmc
shlb
sbb
arpl
fsubr
in
hlt
pop
das
arpl
push
addr16
lds
std
lcall
je
sbb
dec
decl
sbb
or
adc
lds
cmp
sub
mov
in
push
mov
jg
mov
mov
pusha
out
jb
in
adc
push
pop
pop
mov
fcomps
imul
mov
push
jecxz
es
and
gs
lds
inc
jmp
cmp
pop
dec
jecxz
mov
mov
call
ss
sub
dec
lods
inc
stc
xchg
jno
rcrb
insl
jmp
hlt
mov
cmp
inc
xchg
in
out
jge
push
jmp
dec
cmp
fnstcw
mov
jae
aas
das
testl
add
or
sub
push
dec
rorb
testb
cmc
inc
sub
jecxz
mov
cmp
imul
sub
and
arpl
fisubs
sbb
mov
sub
out
lds
push
in
mov
jbe
call
and
out
test
inc
cli
or
aaa
sub
lods
movsl
jae
adc
jns
and
fmull
pop
jne
mov
cmpsl
lea
popa
into
mov
dec
mov
dec
mov
mov
mov
add
je
pop
cs
mov
out
scas
cld
nopl
xchg
lods
imul
add
popa
cltd
mov
js
frstor
add
arpl
adc
ret
xchg
push
out
sub
dec
pop
lret
call
fucompp
fwait
rclb
das
xor
pop
int3
ljmp
push
das
mov
stos
insb
ret
ja
jle
popl
mov
enter
inc
xchg
or
jae
xchg
add
or
mov
sub
jns
adc
or
xor
sbb
sbb
pop
xorl
shrl
xor
push
and
test
push
adc
push
mov
fadd
sbbl
sti
sarl
sbb
adc
jmp
mov
jbe
jne
mov
dec
sbb
movsb
xchg
shlb
and
in
mov
lds
mov
rcr
sub
enter
enter
mov
je
outsb
out
xchg
mov
std
int3
int3
pop
clc
xlat
out
jle
loope
lods
pop
fwait
or
cmp
dec
das
movb
xor
pop
pop
and
push
pop
clc
and
repz
leave
mov
cs
out
or
pop
cltd
pushf
les
iret
or
cmp
test
sbb
std
push
jne
inc
adc
mov
adc
cmpl
hlt
inc
fbstp
xor
mov
test
dec
test
insb
bnd
inc
aaa
inc
dec
outsl
cmp
push
cld
stc
pushf
mov
sub
or
push
adc
std
rclb
scas
jl
push
add
xchg
sbb
lds
mov
mov
inc
jecxz
push
repz
addr16
testb
cmp
mov
decb
pop
cmp
xor
mov
xlat
xor
jge
pop
push
mov
lret
sub
lcall
ljmp
mov
cwtl
or
les
pop
rclb
xchg
loope
pop
in
push
inc
cwtl
push
push
sar
jnp
inc
jmp
pushf
and
cwtl
pop
jae
into
and
daa
loopne
dec
mov
test
pop
jg
push
aam
pusha
and
adc
iret
adc
jnp
lods
lret
mov
popf
int
jecxz
push
in
mov
lret
icebp
popf
fisttps
lds
ds
negb
or
inc
sub
cmp
stc
cmp
jge
adc
not
push
jae
or
test
pushf
fistpll
xchg
pop
and
stos
icebp
rol
or
fs
je
and
jno
push
jl
gs
inc
outsb
inc
mov
cmp
sbb
dec
xor
adc
mov
xor
xchg
or
mov
adc
xchg
cwtl
sub
outsb
sub
fwait
xchg
adc
cmp
fbstp
xlat
add
sbb
out
push
xlat
push
mov
add
jecxz
sbb
fcomip
sbb
mov
xchg
bound
popf
xchg
data16
xchg
lods
mov
loopne
ret
jmp
mov
or
lret
lret
fisttpl
int
mov
outsl
mov
and
add
push
imul
out
dec
pop
test
dec
push
fstps
lcall
lret
mov
add
pop
and
pop
popf
sti
mov
stos
shll
push
add
mov
aas
repz
jb
push
pop
std
dec
cld
inc
dec
cmp
test
lea
ret
mov
xor
fcmovnu
fwait
std
adcl
test
and
mov
cmp
push
pushf
les
clc
adc
loop
enter
dec
ja
mov
xchg
dec
test
in
xchg
pop
stos
jl
ror
mov
lahf
sbb
ret
in
push
rorb
sbb
dec
loope
pop
dec
in
push
stos
sub
jp
mov
pop
iret
dec
fsub
fistps
fs
jl
sbb
fwait
fs
out
mov
jbe
movsb
xchg
test
push
sbb
sbb
jmp
fstps
mov
and
loopne
cmp
and
inc
cltd
das
rol
hlt
int
ja
sbb
pop
scas
cmp
jbe
mov
inc
push
cwtl
push
sbb
or
rorl
mov
or
mov
dec
push
in
out
sub
into
cwtl
aaa
push
sarl
mov
outsl
scas
stc
pop
dec
ds
inc
cmc
lea
mov
push
and
xor
sbb
inc
cmp
xor
fisubrl
shl
in
cli
out
xor
das
xor
push
bound
jbe
ja
mov
cmc
push
lods
das
lods
pop
xor
movsb
add
lods
shrl
ret
mov
idiv
push
xor
and
aam
sub
mov
jmp
push
adc
xchg
insb
jl
push
shlb
incb
push
xchg
pop
xchg
mov
or
push
scas
mov
icebp
or
dec
in
bound
fldt
movsl
and
notb
cld
cmp
aaa
data16
push
rorb
popa
pop
jl
mov
jae
adc
shl
push
imul
lea
mov
sub
push
push
jg
imulb
cs
xchg
mov
or
or
sbb
push
sar
shrl
pop
ret
mov
jle
or
xor
cwtl
jle
and
lea
add
pop
pop
or
iret
dec
push
push
pop
popa
in
aam
push
das
repnz
jns
cmp
add
popa
sahf
pop
and
outsb
xchg
xlat
adc
inc
add
add
cmpb
pop
cmp
cmpb
lret
popf
push
mov
hlt
adc
shrl
adc
inc
mov
fwait
aaa
xor
icebp
pop
or
int3
and
mov
in
mov
loope
add
into
dec
ds
and
jno
les
std
cwtl
fimull
pop
inc
adc
cltd
lods
popa
jbe
mov
lcall
cwtl
xor
loopne
push
xor
cwtl
jmp
or
daa
jge
lret
push
imul
xor
pushf
imul
mov
outsl
incb
int
pop
jno
cmp
lcall
inc
pop
std
jle
cs
inc
mov
jbe
ret
adc
popa
sub
call
mov
movsl
jl
jne
push
mov
cmc
jne
pop
int3
adc
cli
aas
mov
inc
mov
mov
call
sahf
xchg
in
inc
sbbb
leave
xchg
dec
pop
jae
pop
stos
sub
or
and
fprem1
je
mov
mov
mov
push
outsb
mov
jno
add
or
or
adc
mov
jnp
popa
sub
test
cs
fwait
out
movsl
sti
xchg
jnp
outsb
sbb
les
dec
inc
mov
mov
jno
fs
fistpl
xlat
mov
fistps
subl
cmp
jg
rcll
pop
mov
mov
aas
push
aad
popa
cmp
mov
sti
iret
stos
data16
sub
sub
or
jp
cmc
pop
inc
fildl
fnstcw
cmc
push
pop
sub
xor
lods
out
push
cmp
les
xor
mov
addl
shrb
dec
std
add
sbb
push
adc
xchg
cmp
fcoms
mov
mov
xorl
inc
xchg
sbb
jb
call
xchg
mov
add
push
sub
xchg
out
fmul
xchg
jmp
dec
push
icebp
cwtl
jmp
add
orl
out
ljmp
xchg
int
sti
sub
lock
outsb
mov
lods
repz
jmp
mov
out
aaa
push
shrl
int
cmc
arpl
sbb
rcrl
push
fiaddl
add
stos
nop
xchg
imul
dec
pop
rorl
and
push
add
notl
sbb
jecxz
imul
xchg
cwtl
decb
fwait
iret
mov
jg
shll
push
fisttpll
mov
mov
imul
cmpsl
enter
xchg
jne
adc
scas
sbb
xor
hlt
pushl
in
jecxz
push
repz
ret
insb
sub
push
sbb
lds
in
fmull
bound
inc
cmp
jb
out
mov
testb
adc
les
sbb
dec
test
xor
sti
scas
nop
pop
jns
leave
stos
mov
mov
xchg
ja
ficoms
sub
adc
push
movsb
mov
mov
lods
pop
popa
cmc
mov
cmovnp
je
call
shl
lcall
pop
aam
push
cmpsl
out
out
pop
call
mov
bound
cwtl
push
and
cmpsl
scas
lds
inc
pop
lods
aas
fmuls
repnz
mov
stc
xchg
mov
mov
mov
lea
shrb
pushf
cmc
aas
push
xchg
xchg
cmpsb
rol
iret
jle
push
xor
jg
test
and
push
push
jno
sub
dec
clc
cld
iret
nop
lds
pshufw
mov
mov
and
rorl
and
aas
xchg
lahf
fmulp
dec
rcr
xor
cmp
out
icebp
jl
and
mov
int
sbb
fisttpll
cmp
push
es
mov
push
jge
adc
fstpl
mov
adc
dec
xchg
jb
jg
lret
sub
les
xor
cltd
and
and
or
cmp
lcall
out
ret
int
inc
int
xor
mov
dec
cmp
lock
aaa
loope
js
test
push
jno
inc
or
mov
jge
sbb
mov
cmc
ret
ljmp
jo
cmp
es
or
mov
jnp
js
mov
inc
pop
cmp
fstps
stc
sub
bound
inc
lcall
cmp
mov
cmc
fcoml
or
ja,pn
loop
push
sahf
mov
ret
repnz
test
sbb
aam
sub
sbb
sub
push
jge
loopne
jo
push
xchg
orb
lds
mov
out
pop
shr
loope
mov
outsb
repnz
pop
mov
jmp
adc
stos
jb
mov
insl
xor
insl
xor
lods
xor
dec
adc
adc
xorl
xchg
add
mov
test
sbbb
push
lret
and
mov
pop
add
loop
fistpll
cmpsl
insl
mov
mov
mov
adc
stos
xchg
sub
add
rcrl
adcb
push
clc
cmp
mov
adc
sbb
jge
cltd
adc
ret
popl
xor
cltd
dec
sbb
les
dec
and
xor
mov
arpl
dec
or
jb
shrb
lsl
ret
sbbb
aas
jp
mov
mov
jl
sbb
sbb
dec
mov
scas
mov
inc
jmp
fsubs
mov
ljmp
add
addr16
in
jbe
push
lds
mov
xor
sbb
mov
rclb
outsl
pop
jl
in
shrl
xor
dec
inc
pusha
sbb
xchg
out
push
sub
mov
dec
loopne
xchg
cmp
mov
lock
mov
push
mov
add
mov
lahf
in
or
push
aam
dec
out
inc
repnz
dec
out
and
jo
adc
sahf
and
push
stos
pop
add
sbb
std
sahf
scas
rorl
xor
lods
dec
and
jne
loopne
cs
mov
test
mov
outsb
push
lcall
sahf
fildl
xchg
movsl
mov
jmp
cld
loopne
and
adc
sbb
fildl
xchg
fisubrl
popa
add
mov
cmp
mov
aam
fstpt
mov
cmp
mov
jno
mov
or
call
int3
add
rclb
pop
mov
sub
loope
jle
shrb
push
and
aas
out
add
cld
or
arpl
test
sbb
leave
ljmp
xchg
jbe
pushf
aas
dec
xor
jne
je
and
int
pop
cmp
jge
test
ret
mov
test
xor
sbb
shlb
xchg
out
and
or
push
pop
xchg
fs
sbbl
divl
jno
add
sub
jmp
vgatherdpd
push
push
mov
sbbl
ljmp
das
mov
nop
loop
std
mov
pmulhw
dec
pop
cmc
dec
adc
loope
sbb
mov
jg
xlat
adc
mov
fcmove
jle
fidivrl
or
fnstcw
aad
scas
or
mulb
loopne
push
cli
xor
subb
in
arpl
test
add
cmp
mov
inc
or
test
popf
add
jnp
adc
sti
test
mov
pop
dec
mov
push
jecxz
das
cmc
and
lock
sahf
into
ja
mov
stos
roll
dec
dec
les
cmp
sahf
int3
jp
ret
fldenv
adc
test
cld
stos
pop
and
imul
test
jb
push
in
aam
orps
ljmp
xchg
pop
xchg
jns
insl
mov
inc
cltd
fcompl
mov
faddl
movsl
jo
jns
cmp
ss
loop
das
and
xor
fcos
cmpsl
dec
xchg
aas
inc
add
idivb
pop
dec
dec
negb
sarl
jnp
lcall
lcall
inc
test
divl
lcall
or
jge
sar
daa
fcoms
jo
jge
into
adc
jb
into
xor
pop
stos
inc
cmp
iret
push
dec
dec
xor
mov
mov
push
fdivr
ljmp
cltd
das
xchg
add
movsl
mov
xor
lret
lcall
icebp
test
and
sarb
or
push
aaa
fnstsw
dec
mov
dec
dec
scas
add
addr16
subl
mov
andb
testb
cmp
jge
cltd
dec
inc
bnd
mov
sti
insl
nop
add
add
popf
cld
test
stos
push
shrl
sub
xchg
adc
testb
pop
es
mov
mov
aaa
in
pop
scas
cli
mov
cltd
cmp
cmpsb
fstl
cmp
mov
mov
fsubl
mov
bnd
lea
fstp
rorb
mov
pop
add
jb
test
xchg
fs
jbe
prefetchwt1
or
cmp
push
shlb
jb
sahf
pop
ds
or
stc
adc
add
jnp
lcall
push
mov
pop
cmp
ret
cmp
imul
dec
mov
mov
into
pop
fisttpll
xor
jne
pop
xor
jns
outsl
lret
xor
les
pop
or
or
fsubrl
cmc
stos
cs
movsb
dec
push
or
push
insl
mov
adc
dec
int3
push
test
popf
fcmove
inc
and
or
lret
shr
or
mov
inc
sbb
imul
nop
hlt
sbb
aaa
in
and
or
add
dec
addl
mov
rorb
cld
sarb
sbb
or
lods
test
mov
fdivp
sub
aaa
subl
push
adc
xor
sub
inc
pop
lods
ds
mov
int
leave
popf
js
lcall
icebp
cltd
lcall
jmp
fistl
sub
xor
inc
stc
inc
jo
pop
stc
aas
bnd
and
jl
xor
and
mov
fisttpll
aas
mov
jns
or
leave
fistps
mov
imul
out
push
aad
cmp
pushf
jae
loope
push
aam
dec
sub
mov
dec
xchg
pop
call
mov
dec
mov
les
cltd
jno
sbb
call
sbb
je
cmc
pop
icebp
jne
mov
aas
jmp
mov
pop
imul
inc
arpl
and
jecxz
pushf
xchg
jno
xchg
loope
popf
loope
sub
fistps
mov
int
lods
lret
test
and
or
lods
cwtl
sub
sbb
mov
lahf
jo
push
dec
add
pusha
rol
mov
jg
pop
push
outsl
inc
icebp
cmp
pop
xchg
mov
aad
icebp
add
stos
or
iret
adcl
loope
xchg
mov
sqrtps
in
test
je
adc
push
xor
addl
sahf
incb
sub
dec
sbb
add
lock
in
adcb
les
sahf
inc
mov
push
sub
sub
test
mov
test
dec
pop
das
movsl
add
lods
lds
fistpl
popw
clc
popa
xor
rclb
enter
stos
ja
inc
subl
sbb
repnz
cwtl
mov
je
add
popa
sub
cmpsl
das
int3
push
jecxz
sbb
test
add
addl
in
adc
iret
sbb
dec
adc
xchg
mov
inc
stos
lret
inc
dec
add
mov
adc
jbe
shl
and
add
add
xchg
mov
loopne
leave
jmp
add
cmpsl
push
jne
cmp
mov
movb
fildl
mov
jns
dec
xchg
xor
pop
pop
aam
dec
addl
inc
test
xlat
mov
leave
sbb
mov
lock
xor
dec
das
mov
xchg
popf
jl
cwtl
aad
push
mov
mov
dec
test
enter
mov
call
ret
fs
aaa
xchg
imul
mov
and
pushf
inc
dec
sbb
fcomip
mov
mov
mov
pop
mov
fs
gs
xchg
inc
fisttpll
in
pop
gs
mov
nop
push
push
mov
out
inc
push
sbb
inc
xor
xor
call
cwtl
xchg
adc
lods
gs
pop
stc
mov
aas
pop
pop
loopne
into
dec
mov
mov
mov
mov
push
fbld
ds
sub
lcall
popf
sbb
cwtl
add
lret
test
imul
cmp
push
loop
fwait
adc
fs
fimuls
loopne
mov
in
mov
push
pop
push
test
sbb
sbb
mov
sub
subb
lods
arpl
mov
jnp
imull
fmul
insb
stos
jge
inc
loopne
incl
jno
in
push
mov
cmp
pop
sub
addr16
jnp
aas
jno
sub
std
cli
xor
mov
xchg
xchg
pop
mov
and
xchg
jb
icebp
mov
mov
bound
adc
insb
and
dec
jne
out
sbb
repnz
xchg
xchg
jnp
nop
pop
cmp
xor
cli
in
and
int3
sbb
sbb
mov
push
sbb
sbb
mov
xor
xlat
lods
dec
adc
xor
sbbb
rcrb
pop
and
shrl
pusha
aam
int3
hlt
test
imul
jno
push
dec
adc
lret
push
inc
jb
or
ss
xchg
add
or
push
inc
lea
mov
sub
mov
test
repnz
dec
icebp
xorb
sbb
in
sbb
test
sub
sub
les
mov
scas
sub
jo
jl
incb
adc
int
jmp
pop
pop
rcll
cmpsl
inc
sti
or
lahf
outsl
xor
inc
aad
test
pop
jnp
add
out
push
inc
xchg
fnstenv
cli
add
mov
push
sahf
mov
popa
xchg
sbb
jne
int
leave
aam
sbb
jo
pop
das
aam
fbstp
cmp
in
push
jb
push
roll
rcl
mov
out
rcl
fdivl
aaa
adc
clc
out
jae
adc
cmpsl
into
scas
outsl
add
test
jno
aaa
xchg
or
es
sbb
and
xchg
test
pop
dec
mov
mov
cltd
int3
pop
pop
sbb
insl
jns
outsb
lods
insl
lret
cmp
outsl
inc
pop
repnz
xchg
mov
jl
dec
inc
popa
cmpsl
mov
mov
push
in
leave
imul
sbb
je
pusha
mov
inc
push
push
inc
ljmp
mov
lea
pop
xorl
arpl
psrld
xchg
xor
cmp
gs
pop
push
mov
mov
mov
data16
add
aaa
in
pop
shrl
jmp
aas
aas
sbb
jp
mov
aaa
mov
push
inc
inc
std
push
cmp
fcoms
push
mov
mov
cmpsl
cmp
dec
jge
call
and
jnp
aaa
iret
cli
mov
xor
pop
pushf
stc
mov
dec
sbb
lcall
call
lods
out
inc
stos
cmp
xor
dec
hlt
lcall
xchg
and
cmpsb
repz
sti
mov
inc
jmp
loopne
push
stos
jns
and
sub
adc
cwtl
pushf
dec
add
movsl
inc
call
cltd
repz
subl
lret
mov
jae
imul
imul
cmp
int3
sub
shll
push
and
and
xchg
lahf
or
xor
add
std
inc
mov
xchg
xor
mov
sahf
mov
add
rol
std
and
test
lods
int3
imul
xchg
jg
repz
in
in
clc
insl
test
stc
popa
cs
pusha
mov
insb
orl
pop
cltd
imul
cmp
add
loop
sub
inc
sbb
jb
shrl
in
xlat
int
jne
addr16
adcl
jmp
sbb
outsb
mov
and
sahf
sbb
push
xchg
loope
sbb
inc
and
inc
push
pop
xchg
jae
fiaddl
aad
lcall
push
ja
ret
inc
and
jae
xchg
adc
jmp
xor
sbb
idivb
cmpl
dec
push
mov
pop
ja
scas
enter
and
mov
ds
jp
mov
movsl
fisubl
shll
clc
pop
xor
or
mov
ljmp
mov
mov
and
cld
addr16
mov
das
cmpsl
cwtl
adc
dec
mov
pusha
aad
scas
enter
xchg
movsl
in
sub
ss
cmp
jp
int
decb
popf
lea
jp
xor
in
xor
push
inc
sub
in
mov
fwait
scas
xor
in
mov
ret
test
pop
shll
rcrl
mov
outsl
icebp
add
jmp
adc
mov
fdivp
in
push
lcall
cwtl
pushf
pop
mov
jns
jg
dec
insl
jge
fwait
and
test
ret
in
push
rorb
insb
ficoml
fisubrs
cwtl
stc
neg
es
xchg
jle
fcompl
std
aam
dec
pusha
sbb
enter
xor
mov
push
test
sbb
bound
out
push
sub
mov
jae
cmpl
test
push
push
sub
jl
inc
push
lret
in
movsl
jecxz
mov
test
movsb
out
outsl
fdiv
jle
inc
inc
test
push
mov
cmp
mov
xchg
fdivr
jmp
sbb
add
jl
out
push
outsl
pop
mov
sbb
repz
cs
xchg
jl
push
imul
mov
nop
incb
lods
insb
mov
std
xor
push
enter
loopne
push
mov
nop
pop
sbb
mov
in
aam
and
sbb
cmp
cmpsb
xorb
daa
mov
testb
stos
arpl
mov
cwtl
int3
dec
mov
push
insb
mov
sub
cli
shr
and
cmpsb
xchg
fistpll
jmp
mov
arpl
out
cld
outsb
scas
add
xchg
sbb
sub
mov
pusha
jnp
rcl
mov
out
nop
add
outsb
dec
cwtl
rorb
dec
ficomps
add
subb
jecxz
sbb
jg
test
orl
bound
sub
or
add
cmpsb
sub
mov
dec
sahf
in
loope
jae
fwait
roll
dec
pop
mov
cmpsb
xchg
mov
loopne
and
add
ss
repz
mov
and
lret
jo
mov
sub
mov
aas
fs
jg
push
cltd
push
sub
scas
and
test
dec
imul
unpcklps
jle
or
and
outsl
popa
lea
xchg
fwait
ja
mov
pop
pop
arpl
xchg
sbbb
testl
lods
sbb
pop
push
je
push
push
cld
adc
push
fwait
outsl
fisttps
mov
lret
jbe
cmpsb
aaa
pop
mov
lcall
stos
fnsave
add
and
fadds
stos
into
movsl
fcomps
jmp
mov
test
rolb
or
repnz
xchg
adc
and
sbb
cmp
in
out
adc
cs
icebp
dec
sahf
dec
mov
or
sbb
fst
popa
mov
gs
stos
adc
enter
xchg
push
lahf
imulb
mov
cmp
jne
in
cld
aam
cmp
and
mov
push
cld
and
add
testl
mov
ss
xchg
xchg
fwait
cmpsb
push
sbb
insb
insl
adc
pop
cmp
jns
out
fidivrl
rorl
mov
pop
hlt
scas
repnz
lea
insl
push
iret
and
add
into
xchg
and
dec
ret
pop
sbb
cli
aas
das
dec
mov
out
int3
out
ds
inc
mov
sahf
adc
jmp
or
mov
movsb
imul
loope
test
push
inc
cld
lahf
and
loope
add
inc
jle
inc
cmp
cld
popa
pushf
lcall
sub
mov
jne
push
push
inc
dec
cmp
lds
das
push
sub
in
pop
lds
sbb
dec
cmp
add
movsb
push
cmpl
sbb
mov
gs
jecxz
pop
jbe
loope
xchg
xor
cmp
fisttps
and
icebp
mov
sub
sub
add
int3
mov
iret
leave
movsb
inc
jecxz
jb
or
pop
mov
lret
pop
jge
pop
fmulp
test
mov
sub
jbe
repz
repnz
out
pop
jo
xchg
cmp
ficoms
xor
outsl
or
jp
or
adc
das
dec
push
xor
xor
andl
mov
pop
inc
add
jne
div
mov
stc
or
push
mov
orb
push
movsl
ret
lds
inc
inc
mov
out
lret
jg
jecxz
inc
nop
mov
mov
mov
adc
mov
or
mov
scas
out
xchg
fstpl
and
adc
lods
cmp
sar
lock
pop
mov
jl
cmp
daa
push
mov
insb
mov
rorl
xchg
and
jge
std
int3
and
jle
out
xchg
cwtl
xor
push
adcb
mov
or
sahf
cs
mov
mov
inc
sbb
ret
mov
or
ret
rorb
lret
xchg
leave
in
add
int3
xorl
lahf
sti
das
jp
dec
jmp
into
sarl
icebp
cmpsb
pop
push
push
push
fcompl
xchg
xchg
jbe
mov
pop
mov
add
jo
stos
pop
lret
dec
hlt
enter
lcall
xchg
mov
or
test
pop
outsb
lods
and
nop
push
enter
mov
xchg
enter
jne
mov
add
addb
sub
jge
pop
cld
and
sbb
jbe
push
addr16
out
push
in
stos
mov
iret
cmpb
adc
pop
cli
psadbw
cld
ja
or
pop
nop
pop
mov
ret
fwait
cwtl
cmp
sub
jno
sub
mov
clc
bound
fxtract
mov
fistpl
fisttpl
sti
push
push
jb
push
inc
mov
dec
out
sti
cmp
adc
leave
and
inc
test
fwait
lahf
mov
lods
pop
dec
fnstsw
test
or
loopne
aaa
std
dec
jae
dec
sub
ljmp
ja
fcmovu
aas
enter
test
and
pop
je
lock
push
lret
es
sti
push
repz
scas
dec
ds
nop
cltd
gs
dec
push
add
pop
xor
adc
and
loope
sub
xor
rclb
dec
filds
adc
hlt
pop
mov
stos
xor
popa
push
ss
fldt
sbb
aaa
dec
ret
mov
push
and
outsb
lret
sahf
jne
or
mov
fiadds
sub
xor
popa
adcl
in
ret
rclb
cmp
in
lea
mov
and
jnp
dec
iret
mov
js
mov
divb
aas
mov
in
pusha
mov
or
rol
cli
repz
dec
insb
push
xchg
sub
stos
loopne
sahf
sbb
sbb
cld
pop
jp
and
test
popf
pop
lds
dec
jne
mov
inc
sub
jl
sub
adc
fbld
ja
pop
outsl
xchg
pushf
cli
and
lds
movsb
mov
into
mov
hlt
xlat
cs
sbbl
add
or
add
cmc
mov
mov
fcomps
adc
adc
sbb
mov
adc
or
push
lods
pop
cmp
lcall
rorl
sbb
pop
and
cmp
cmp
or
fdivrs
imul
xlat
xchg
xor
adc
enter
jne
pusha
adc
push
decl
sub
add
xchg
or
cmp
pop
leave
jg
movsl
mov
loope
sbb
insb
rol
mov
cs
mov
adc
add
mov
and
cli
add
mov
jns
push
rcrl
or
in
int3
inc
and
out
xor
jp
adc
jg
scas
mov
adc
mov
mov
in
dec
xchg
arpl
push
fnstenv
nop
rcrb
fcoms
sbb
fsub
iret
int
test
bound
add
dec
scas
inc
out
xbegin
in
push
mov
mov
popf
gs
test
xchg
orl
mov
lahf
cmpsl
xchg
dec
adc
fstpt
sub
loopne
lcall
push
mov
lahf
mov
push
cmp
inc
daa
cmpl
push
xchg
jmp
xor
push
inc
idivb
dec
out
bnd
loop
adc
cwtl
lret
es
fucomp
dec
pop
addr16
inc
push
movsl
int
cwtl
jb
int
lret
mov
xor
push
and
popa
xchg
push
push
sub
push
int
gs
inc
sub
rcrb
lea
out
cmc
popf
std
sbb
imul
add
jne
ja
dec
in
mov
sbb
and
movups
daa
pushf
dec
mov
cwtl
pop
sti
lahf
loop
iret
mov
add
decl
dec
test
or
hlt
imulb
mov
add
push
add
and
adc
mov
add
inc
mov
lcall
fdivrl
test
inc
mov
out
or
mov
add
fcmovnu
jbe
mov
in
idivb
and
or
cld
mov
leave
sub
test
push
mov
push
mov
es
cli
icebp
pop
mov
xlat
outsl
mov
jne
cmp
into
call
and
fld
movsb
dec
pusha
xor
rcrb
into
jae
mov
xchg
lds
dec
mov
pop
sbb
cmpsb
push
lahf
cwtl
adc
push
test
xor
push
lock
fistpl
or
fsqrt
in
sarb
mov
ss
xchg
fildll
push
pop
daa
fstpt
jge
inc
daa
pop
mov
jp,pn
push
stos
pop
psubusw
leave
call
flds
in
push
jmp
cmpsl
pop
inc
xor
sub
adc
insl
imul
incl
icebp
dec
push
jle
mov
mov
inc
out
mov
imul
dec
xor
jo
lret
pop
pop
test
sahf
push
iret
popa
dec
and
orl
mov
fnsave
das
jno
jg
insl
push
adc
pop
ret
mov
ret
pushf
stos
sub
popa
jmp
cld
cmpsl
inc
test
add
test
repnz
mov
jmp
lock
jl
mov
jmp
repz
popf
inc
shll
in
aam
icebp
aad
cmpsb
sbb
aas
jg
imul
ja
testb
je
or
insl
xlat
push
dec
cmpsb
adc
sub
adc
mov
push
mov
or
lods
inc
mov
out
stc
outsb
push
roll
cmp
leave
loop
sbb
push
cld
adc
cli
pop
inc
sti
cmc
sub
cmp
cmp
ret
mov
jp
test
out
out
lods
sub
cmp
cmp
jl
mov
pop
std
je
jne
sbb
cmp
push
mov
mov
pop
imul
xorb
inc
push
mov
imul
hlt
mov
out
fdivrs
cwtl
cli
sub
jp
pop
js
dec
cli
and
push
mov
mov
and
fsubp
ret
int
xchg
push
mov
and
inc
subl
std
stc
cmp
inc
mov
or
cltd
insl
mov
lmsw
mov
mov
push
insl
pop
les
lods
loop
mov
int
and
fisubl
pop
icebp
iret
inc
xor
les
push
adc
inc
addl
insl
push
repnz
push
pop
repnz
fmull
scas
xchg
sub
fstl
cwtl
inc
popf
xchg
test
or
sub
pop
fldt
mov
lcall
stos
mov
mov
aad
inc
xor
cwtl
rorb
sbb
and
adc
fnsave
cmp
fidivrs
mov
sub
cltd
mov
adc
and
push
mul
loopne
jp
or
into
xchg
mov
xlat
lock
add
inc
xchg
leave
sub
sub
dec
je
dec
std
and
jmp
push
push
sahf
lcall
rorb
in
lret
mov
or
lret
mov
stos
mov
mov
xor
or
shll
mov
jbe
dec
jmp
das
call
cmc
jne
popa
out
xchg
sahf
xlat
scas
xor
sbb
ja
cmpl
inc
scas
inc
jno
ljmp
shlb
gs
icebp
mov
xor
shrb
mov
cmp
fs
pushl
mov
je
mov
dec
ret
rorl
jp
xchg
mov
repz
je
ds
inc
cli
inc
add
jle
shrl
xor
lcall
adc
aas
fisttps
into
xlat
sub
shlb
mov
mov
lahf
and
lret
mov
fisubrl
idivl
push
std
dec
and
pop
mov
loopne
out
mov
inc
adc
mov
add
cwtl
sub
inc
ss
fmuls
add
dec
daa
insb
sbb
shr
inc
pop
rcrb
and
dec
add
in
push
stos
lea
fcomps
mov
push
or
xlat
outsb
cs
imul
mov
push
dec
adc
mov
cmp
rclb
xchg
imul
inc
jae
jecxz
sbb
test
lcall
daa
sti
adc
push
jecxz
imul
pop
mov
aaa
or
mov
movsl
xor
pop
inc
icebp
add
or
xorl
dec
xchg
rorb
test
mov
cld
loope
or
std
xor
out
lret
xor
mov
fwait
and
or
stos
jmp
notb
jmp
scas
pop
pop
mov
sbb
loop
hlt
cmp
scas
pusha
xchg
mov
mov
mov
jne
in
mov
das
int3
xlat
mov
or
ret
inc
decl
outsl
xor
inc
popf
jne
lret
cmp
pop
sub
fldt
xchg
rorl
cli
mov
jb
pushl
out
daa
pop
adc
sbb
mov
lret
fnstenv
std
inc
cmp
xlat
add
or
pop
inc
rclb
xchg
or
dec
adc
adc
or
mov
dec
pmulhw
fisttpl
les
mov
repz
push
fnstsw
in
shr
push
dec
icebp
rolb
in
loope
and
lods
cmp
mov
dec
cltd
sbb
add
sub
add
shrb
cmp
push
or
sub
cmp
bound
pop
cmpsl
std
jl
mov
pop
addr16
push
fidivrl
cmp
push
inc
mov
enter
mov
cld
or
sub
sar
and
sar
pop
mov
aam
imul
fwait
push
push
rolb
lahf
in
adc
ret
cwtl
int
sarl
cmp
cwtl
and
push
dec
movsb
inc
adc
outsb
dec
xchg
inc
mov
jg
ret
push
add
std
enter
lock
fisttpl
fisttpl
inc
lahf
aas
add
je
jle
mov
mov
xchg
movntq
add
xor
in
mov
repz
and
pop
xchg
insb
xchg
add
fnstcw
dec
jns
cwtl
sub
in
cmpsb
mov
or
fs
xchg
lcall
dec
test
and
ja
int
jne
xchg
inc
inc
test
adc
aas
xlat
pop
cmpsb
je
fdivs
push
jg
sub
in
enter
add
sarl
pop
iret
pop
jecxz
cltd
mov
cmp
jb
clc
jmp
cmp
xor
mov
adc
mov
xor
daa
leave
movsl
test
xor
loop
jbe
call
sbb
das
out
xchg
jle
insb
out
lea
mov
add
xchg
jae
aas
fcmovnb
imul
push
inc
mov
push
xchg
mov
pop
sbb
push
lock
lcall
xor
adc
shlb
das
add
mov
mov
xchg
out
dec
jno
je
push
dec
push
xor
mov
out
inc
xor
orb
cmp
dec
pop
lret
mov
aaa
mov
mov
push
jo
cmc
lea
push
cmpl
in
scas
cmp
jmp
adc
jge
push
mov
fsts
mov
mov
je
lea
loopne
pop
pop
inc
sti
aad
cli
push
cmp
sbb
mov
divb
mov
mov
pop
loope
cld
aad
sub
mov
cmc
mov
mov
push
xlat
mov
test
sbb
pushf
sub
cwtl
hlt
out
scas
mov
xor
addr16
push
scas
add
data16
jl
test
adc
ja
mov
out
rcll
leave
fiadds
push
mov
xor
push
sub
push
xchg
pop
inc
dec
sbb
or
mov
std
insl
inc
bound
imul
push
iret
xchg
push
cld
adc
in
adc
cmp
adc
xlat
adc
xor
mov
and
adc
add
cmc
xor
adc
xor
mov
addr16
call
orl
inc
out
cmp
scas
and
lea
xor
sbb
mov
push
sub
imul
cmpsb
adc
test
in
sub
pop
mov
mov
inc
inc
bound
push
push
xchg
dec
scas
fldcw
mov
cmp
xchg
mov
cmp
cs
mov
cld
mov
push
add
mov
outsb
jae
xor
push
sub
jbe
daa
les
loopne
ret
loop
dec
into
adc
and
mov
push
add
scas
xchg
and
arpl
sub
fisubrs
xchg
ljmpw
mov
arpl
xchg
mov
push
popa
out
mov
cmp
sub
push
daa
sub
pop
test
les
iret
arpl
nop
jle
cmp
fisubrl
dec
and
push
test
adc
cmp
addr16
les
cwtl
in
inc
test
sbb
mov
mov
or
stos
mov
cmp
sub
and
adc
sti
push
xor
sbb
push
push
mov
lret
push
daa
aaa
movb
adc
pop
mov
cmp
xchg
push
repnz
sbb
stc
mov
loope
clc
push
add
ja
xor
das
pushf
mov
push
test
call
mov
out
aas
stos
ds
cmpsb
ret
imulb
and
pop
or
aam
lea
js
outsb
clc
xlat
int3
cmp
ficomps
imul
outsl
jmp
xchg
push
or
add
jge
xchg
adc
mov
das
and
lret
push
outsb
cltd
xor
out
jl
and
pop
ret
adc
push
mov
jb
in
fcomps
icebp
jl
mov
dec
or
dec
add
jnp
cmp
pop
xchg
sub
pop
adcl
je
sub
xchg
sbb
lea
xor
dec
or
sub
fldcw
sub
nop
add
loope
fmuls
mov
ret
sbb
sub
or
sbb
cmc
xchg
cs
arpl
xchg
sub
sbb
cmp
gs
dec
jo
test
jecxz
mov
ret
inc
xor
lahf
popa
ret
dec
lea
push
lahf
jg
xor
sub
mov
inc
xor
outsb
popa
test
dec
sti
icebp
inc
push
push
pop
enter
xchg
push
fisubl
out
inc
dec
enter
outsl
mov
popf
addr16
loop
cmp
add
filds
inc
jnp
outsb
mov
sbb
or
inc
inc
test
dec
daa
pop
xlat
inc
mov
xor
xchg
int3
lcall
xchg
mov
sbb
inc
outsb
sub
nop
dec
jg
dec
and
push
push
xor
mov
push
inc
data16
cmp
shlb
fs
mov
lcall
shr
inc
cli
inc
cmp
shlb
cltd
jl
icebp
dec
mov
push
addb
and
cltd
nop
mov
xchg
orl
aaa
add
outsb
add
jl
or
mov
inc
shlb
or
xor
xchg
out
push
jl
cmp
mov
aas
adc
cmpsb
ficomps
stos
mov
add
scas
cmp
in
pop
lods
inc
pop
loopne
js
lock
test
daa
cmp
mov
jb
cmp
fcmovnb
jmp
popa
into
dec
mov
jo
pop
out
int
movsb
icebp
sbb
mov
cmp
dec
lahf
fiaddl
or
add
mov
mov
mov
ss
mov
mov
dec
cmpsl
fs
adc
add
mov
add
cmc
sbb
stos
aam
sbb
mov
add
clc
aaa
dec
or
fdivs
fwait
imul
dec
xchg
dec
push
cs
popf
jne
push
mov
jmp
xchg
stos
outsl
add
pop
cmp
sbb
cmp
loop
fabs
insl
movsl
sub
xchg
pop
push
sbb
and
mov
test
pushf
mov
or
fstpl
jne
push
mov
cltd
fsubrl
mov
inc
xchg
jge
push
rclb
pushf
cmc
movsl
cld
shlb
jmp
mov
insb
jle
inc
push
or
jecxz
lret
push
sub
loope
and
sbb
push
test
dec
sub
cld
outsl
mul
adc
push
stos
or
add
ljmp
mov
das
out
and
adc
loope
test
stos
pop
iret
or
mov
lret
icebp
sub
push
pop
cmpsb
dec
xchg
mov
flds
leave
out
jl
push
inc
push
movsb
out
outsb
dec
mov
pop
push
daa
xchg
jo
lds
aad
outsb
jle
test
cld
aas
mov
mov
mov
mov
sub
sbb
push
push
xor
lds
cmc
dec
stc
inc
iret
or
pop
mov
loopne
outsb
shll
lret
dec
cmpsl
jecxz
aas
push
lods
adc
test
dec
inc
mov
push
dec
aaa
in
and
je
mov
xchg
adc
mov
xor
inc
mov
cwtl
mov
jle
mov
mov
imul
or
push
out
fs
adc
cmpsb
inc
lds
enter
adc
xor
and
std
xor
mov
pusha
cmpsb
xchg
mov
mov
test
loop
test
xor
push
sbb
mov
inc
ljmp
into
aaa
mov
mov
cmp
xor
in
add
lods
call
ja
into
dec
fnstsw
aaa
pop
and
test
dec
rcrb
aam
cmp
push
arpl
test
push
push
or
jge
pop
mov
movsl
fdivr
sbb
ret
movsb
cmp
push
jg
add
lret
cmpb
mov
mov
xor
sbb
mov
int3
sbb
pop
mov
sbb
jmp
aaa
xchg
mov
or
cs
and
push
push
aam
xchg
mov
sbb
xor
int3
jno
mov
jnp
outsb
xchg
pop
pop
and
cmp
push
inc
test
scas
js
in
sbb
icebp
push
adc
in
fisttpl
jne
xor
into
out
nop
fstpl
cmp
leave
mov
scas
adc
ficoms
sbb
std
std
test
shrb
mov
arpl
aaa
aad
int
xchg
xor
push
test
push
je
ja
leave
dec
inc
ds
fldenv
pop
fsubl
test
push
push
push
push
mov
or
and
test
bnd
hlt
pop
add
or
repnz
inc
dec
add
sbb
je
jg
inc
lock
pop
fisubrs
sbb
ret
shrl
push
icebp
sahf
sub
mov
or
ret
xchg
xchg
es
sbb
jno
adc
int3
mov
xor
test
dec
xchg
pop
ljmp
and
xchg
jns
ljmp
mov
mov
xchg
adc
jo
cmpsl
or
cmp
adc
icebp
push
loope
inc
inc
push
xchg
xor
fbstp
mov
or
test
js
and
pop
in
pop
repz
add
lahf
jmp
xor
imul
cs
dec
out
adc
cmpsl
dec
in
add
sbb
inc
and
cli
push
inc
pop
mov
mov
jecxz
cmpsb
ja
xchg
loopne
fucomi
mov
insb
push
fstps
test
dec
pop
push
inc
cmpsl
jg
movaps
pop
mov
sub
adc
outsb
sbb
ucomiss
mov
insb
repnz
into
push
insl
std
dec
aad
adc
out
push
push
fstpt
dec
xorl
jae
cmpsl
and
mov
fwait
repnz
xchg
test
sub
add
enter
push
pop
enter
mov
and
and
outsl
or
lret
int
cmc
xchg
das
mov
test
xchg
jno
int
xor
les
add
sbb
jg
lock
fwait
insb
push
fidivl
test
cmpsb
data16
adc
mov
bound
loop
daa
mov
inc
adc
jno
imull
push
push
pop
je
push
rcll
xor
pusha
loope
pop
cmp
pop
cmp
into
or
mov
cmp
mov
push
mov
adc
jnp
push
add
pushf
sub
jno
test
xchg
xchg
mov
push
cmp
inc
lods
movsl
popf
lds
lcall
out
addr16
push
ret
out
fcmovu
push
fisubrs
xor
gs
mov
adc
movsl
js
mov
and
mov
stc
xor
cmp
adc
cld
lahf
shrl
sub
sbbb
fsubp
cmc
adc
in
push
loope
es
push
sahf
arpl
mov
or
add
scas
sbb
cmc
imul
or
add
xchg
pop
fcomip
into
mov
dec
mov
push
daa
ret
adc
jg
mov
xor
fnsave
scas
hlt
adc
imul
xor
lds
lock
adc
scas
pop
xor
test
fwait
dec
cwtl
inc
mov
je
leave
jo
loop
rclb
sbb
pop
jns
xor
outsl
loop
sbb
int
lods
daa
push
push
repnz
inc
andb
sub
jne
adc
mov
outsb
inc
jnp
rolb
cmc
pop
cmp
jns
inc
mov
imul
xchg
inc
add
pop
test
cmc
xchg
mov
dec
mov
pop
sahf
pushf
add
xchg
add
pop
popa
dec
push
sbb
shlb
add
xchg
inc
add
arpl
in
and
iret
test
scas
clc
push
pop
ds
inc
cs
jns
pop
xchg
sbb
jl
mov
jle
adc
mov
pop
lret
ret
inc
cmc
pop
lahf
pushf
call
pop
jge
xchg
in
add
ljmp
ljmp
lea
arpl
mov
adc
int
addr16
mov
aas
jbe
jnp
int3
adc
push
xlat
jbe
xchg
into
xor
xor
outsb
daa
xlat
mov
jecxz
push
int
or
xchg
jbe
test
inc
push
fisubs
fimull
fisubs
fimull
add
cmp
loop
mov
gs
add
cmpsl
fidivs
pop
nop
mov
xor
stc
xchg
daa
iret
sub
out
mov
insl
mov
push
cmc
jae
mov
cld
repnz
pop
repnz
adcb
into
pusha
sbb
or
cmp
sti
data16
and
or
into
mov
jnp
and
dec
and
mov
cmpsb
and
xor
xor
stos
scas
xchg
and
test
sbb
popa
dec
cmp
mov
pop
dec
fstps
mov
lods
popf
push
pop
jl
push
jg
dec
dec
fsub
mov
in
mov
add
mov
mov
shl
push
inc
lds
aam
test
je
xor
fs
cwtl
adc
xchg
fildll
push
dec
into
pop
lcall
test
js
andb
pop
insb
or
mov
mov
mov
stc
and
cmp
mov
fwait
xchg
jle
loop
ss
packssdw
ljmp
or
pop
std
lods
mov
adc
insl
popf
mov
sub
repz
mov
sub
adc
les
xor
inc
neg
ss
add
and
xchg
insb
xchg
lret
stc
std
jmp
jb
es
out
fldcw
xchg
enter
mov
sub
int3
aad
pop
dec
sbb
mov
pop
rclb
xlat
cmpsb
lock
add
lds
faddp
stos
nop
adc
aad
enter
mov
jecxz
shr
loopne
out
aas
dec
mov
sbb
int3
jp
pusha
in
dec
xchg
sub
dec
pop
in
lcall
add
outsl
mov
sub
and
mov
xchg
mov
stc
inc
inc
lret
clc
je
sub
adc
icebp
xchg
outsb
dec
xchg
mov
add
and
sbb
pop
adc
aad
sub
lret
in
xchg
mov
adc
pop
pop
cs
dec
lret
repz
lfs
pop
stc
cltd
mov
popf
push
cs
out
or
test
push
fadd
hlt
xchg
pop
sbb
jle
inc
mov
inc
sbbl
jne
cmp
and
fsubs
scas
jmp
mov
je
dec
ret
je
sub
fsubl
push
xchg
xchg
inc
jne
imul
jnp
dec
call
dec
inc
cmp
gs
sbb
sahf
adc
pop
jle
ficoms
popa
mov
popf
dec
mov
jp
data16
adc
mov
into
push
cwtl
jmp
and
mov
dec
out
jge
rorl
and
insb
push
in
popa
pop
gs
adc
add
js
outsl
dec
push
in
div
shl
das
cmp
mov
out
rolb
sbb
xorl
cmp
movaps
repz
xor
out
mov
push
inc
mov
push
out
ss
call
push
repz
cmp
in
jne
sarl
outsl
sbb
icebp
mov
mov
js
movsl
pusha
xchg
xlat
cmpsl
cwtl
cltd
xchg
mov
pop
cmp
or
inc
push
pushf
lret
add
nop
cmp
or
jo
mov
jg
jg
pop
scas
stos
pop
xchg
add
inc
ficoms
add
and
cmc
aas
mov
cmc
mov
xor
dec
hlt
jno
aaa
push
and
addr16
ret
aas
dec
gs
outsb
fistpl
mov
sbb
xchg
sbb
dec
orl
inc
push
pop
add
push
sub
in
mov
out
cmpsb
xlat
cmpsb
int3
mov
fidivrl
gs
dec
xor
sub
cmp
ret
cmp
leavew
sub
rorl
adc
jo
push
int3
fwait
dec
inc
enter
mov
add
insb
das
into
mov
cltd
adc
in
cmp
xchg
ss
mov
and
cmc
xlat
pop
inc
push
js
dec
lock
out
jb
fs
sbb
shll
xchg
adc
xor
and
mov
fisttpll
mov
sbbl
pushf
cltd
out
mov
mov
out
insb
repz
push
adc
dec
test
repz
lcall
mov
loop
lahf
sti
rol
jp
imul
enter
sbb
mov
mov
in
jns
and
dec
inc
cmp
in
adc
jl
sub
ja
lock
js
dec
pushf
sahf
sub
inc
or
or
push
cmp
mov
test
sbbb
xchg
add
push
mov
inc
lods
mov
and
cmp
sub
push
pop
xchg
test
outsb
sbb
int
loop
leave
movsl
push
mov
or
stos
dec
aam
ret
pop
fsub
inc
xor
stos
imul
dec
adc
pop
add
cld
lret
pusha
dec
pop
imul
xchg
pop
mov
out
sbb
sub
bound
fisubs
ret
or
fmuls
add
push
in
popf
in
into
push
xor
ljmp
inc
repnz
push
adcb
hlt
int
push
xlat
popa
test
push
test
aad
lret
movsl
es
cmp
pop
sub
sbb
mov
les
bound
jnp
fiadds
adc
sub
fmuls
ret
aas
repnz
vminpd
lcall
jno
repnz
mov
in
adc
sarw
aaa
nop
pop
lods
push
loope
mov
lret
mov
int3
hlt
sub
js
in
push
fwait
xchg
bnd
fldenv
push
mov
dec
lods
ljmp
ror
stos
js
mov
inc
cmp
shrl
nop
push
imul
test
jno
adc
cmp
mov
mov
xchg
das
lods
push
pop
mov
rolb
pop
xchg
insl
test
movnti
or
cmovl
sbb
push
mov
fxch
dec
push
sub
mov
orb
call
cld
pop
cmp
adc
call
enter
add
xor
inc
roll
ljmp
insb
mov
dec
fs
test
dec
push
jb
stos
dec
dec
pop
andl
push
movsb
insl
and
iret
mov
or
push
xlat
sub
imul
push
xorb
jle
daa
aas
ss
adc
fildl
hlt
sti
xor
dec
mov
mov
or
jbe
out
mov
fsubs
mov
inc
jl
fnstenv
push
add
xor
mov
and
or
and
jle
push
jmp
pushf
jno
xchg
mov
xor
fistl
mov
sub
mov
inc
mov
popf
movsl
or
popa
adc
pop
adc
adc
add
and
and
jns
inc
into
int3
or
mov
iret
pop
lret
rorl
mov
mov
loop
fldenv
mov
jno
jo
or
dec
mov
cs
or
ljmp
int3
bound
push
cmpsb
es
stos
repz
out
push
cmpsl
js
lahf
mov
sbb
addr16
adc
repz
push
and
jb
loop
xor
outsb
jl,pn
in
inc
mov
fisttpl
ss
inc
popf
jne
jno
outsl
test
std
sti
iret
jo
sub
clc
cmp
nop
ds
lcall
lea
test
les
es
jl
xchg
xlat
push
inc
xlat
pop
sbb
aas
mov
lret
push
jge
lock
add
and
mov
fstl
leave
push
fadd
dec
sarl
mov
add
not
cmp
pop
cltd
stos
mov
test
pop
pop
mov
jp
cmp
mov
or
or
xchg
jg
xor
add
xchg
mov
inc
stc
outsl
adc
xchg
fidivrl
and
fs
bound
or
insb
fnstsw
fldenv
cwtl
inc
flds
jmp
and
ficoms
push
or
mov
cmpb
lock
push
sub
jo
or
mov
cmp
add
loop
mov
orb
sub
mov
cmp
mov
push
scas
dec
mov
jne
push
pushf
mov
lock
fsubs
xchg
jmp
dec
fsub
adc
dec
mov
dec
ret
mov
movsl
adc
cmp
adc
in
rorl
sarl
adcl
xchg
inc
cmp
cmpsl
loopne
push
mov
pop
in
push
fptan
dec
scas
mov
mov
lods
sbb
loope
call
mov
cmp
cmpsb
mov
pop
repnz
test
arpl
dec
push
loope
push
inc
ja
popf
jmp
xacquire
lock
out
mov
ds
mov
xor
jg
mov
mov
lahf
mov
or
xchg
lock
mov
pop
dec
ss
mov
mov
cmp
push
int3
dec
imul
sub
aad
push
mov
imul
leave
mov
mov
fbstp
lds
ret
xorb
pop
lret
dec
sbb
cmp
ret
icebp
aas
lret
or
push
je
xchg
in
and
adc
dec
mov
cli
lret
pop
std
clc
xchg
mov
or
sub
or
push
pop
lcall
mov
test
dec
add
out
jle
inc
add
addl
or
out
out
lea
adc
add
inc
cld
fucomi
push
dec
inc
pop
jle
sbb
aad
test
in
push
mov
outsl
lret
cltd
repz
mov
in
mov
jno
pop
cmp
outsb
cmp
test
cmp
jg
pop
add
add
xor
movsl
xchg
int
ds
jbe
iret
inc
insl
adc
icebp
fwait
mov
ret
bound
add
sub
mov
add
je
pop
shlb
lock
xchg
mov
lcall
out
mov
dec
cs
outsb
pop
mov
mov
push
inc
xor
push
mov
mov
addr16
arpl
jle
cmp
xor
enter
xor
lret
pop
sar
mov
dec
icebp
testl
lods
xchg
scas
sbb
xchg
pop
rorl
cmp
pop
dec
or
dec
int3
cld
jg
arpl
inc
mov
bound
push
shrb
movsl
mov
addr16
or
enter
fs
inc
sub
jo
xor
mov
xor
lods
nop
movswl
test
das
iret
dec
loopne
shlb
and
in
movsl
aad
lahf
sub
add
not
pop
push
pop
and
cmp
adcb
jb
xor
fsubr
fwait
xchg
filds
cmp
roll
or
jecxz
jmp
fwait
loop
mov
arpl
and
mov
dec
dec
dec
xor
sbb
dec
inc
cmpsb
cwtl
xchg
test
mov
addr16
mov
lcall
xor
scas
xor
cli
adc
xor
dec
cmpsl
push
dec
das
pushf
bnd
fbld
pop
mov
lret
cmpsl
int3
inc
add
xchg
cmp
ja
int3
scas
repnz
jmp
mov
imul
inc
pusha
push
ror
jmp
into
insb
mov
mov
xor
jae
or
add
cmp
sub
mov
cmpsl
int
mov
xor
in
mov
inc
pop
pushf
jb,pt
adc
out
lcall
imul
xchg
loope
push
or
jecxz
arpl
jmp
push
nop
test
xchg
xor
cltd
stc
jnp
and
xchg
sub
stos
jo
leave
dec
adc
das
roll
cmpsb
shrb
les
push
pop
pop
push
add
adc
mov
or
mov
pop
mov
mov
dec
mov
xchg
lahf
je
jle
sub
stos
iret
test
cmpsb
adc
add
dec
mov
sahf
cmpsb
push
std
xchg
fstpl
insb
pusha
mov
out
sbb
push
sbb
cmp
mov
test
add
pop
sarb
dec
jbe
sub
aas
pop
xor
insl
add
ss
jmp
pop
lahf
pop
mov
test
add
mov
data16
das
cmp
mov
fcoml
cmp
and
push
mov
xchg
push
mov
mov
shrl
xchg
pop
ss
insl
notb
ljmp
cld
outsl
pop
xchg
cld
mov
scas
lods
movsb
stos
roll
xor
xor
mov
add
or
mov
adc
pop
adc
add
rol
stc
popf
lods
stos
xchg
jle
xlat
scas
cs
jecxz
ljmp
mov
pop
shlb
lds
fwait
sbb
inc
ljmp
jp
imul
enter
and
aad
xchg
icebp
cli
mov
mov
fists
insl
xchg
pushf
les
shrl
xchg
fildll
lahf
or
cmc
js
mov
out
mov
pop
and
mov
rcrb
fcmove
jmp
arpl
xor
outsb
adc
dec
clc
sbb
sub
push
xchg
dec
mov
jbe
icebp
gs
sbb
mov
popa
mov
test
adc
fisttpll
test
rolb
sub
jle
cwtl
repz
mov
xchg
inc
aaa
call
sub
out
cmpsb
mov
leave
ror
mov
push
xchg
enter
ljmp
inc
std
cmpsl
fistps
push
push
fbld
and
mov
push
xchg
bt
aas
xor
mov
jbe
dec
inc
and
and
or
push
jmp
es
imull
ret
mov
xchg
test
fimuls
xchg
in
mov
mov
dec
mov
dec
pop
pushf
jle
insl
imul
cmp
lcall
push
dec
out
inc
fcmovnbe
dec
cmp
xchg
leave
jecxz
dec
cmpsb
and
icebp
mov
sub
xor
dec
shlb
lahf
mov
ja
mov
jge
aaa
xlat
mov
or
xor
or
sahf
jne
pop
jg
lods
std
fbld
dec
movsb
dec
andb
and
xor
mov
push
mov
into
inc
jecxz
fstpt
and
rcl
fiadds
cltd
dec
test
das
icebp
sub
adc
push
adc
xchg
adc
cld
repnz
or
xchg
xor
jp
test
pop
push
cltd
gs
negl
gs
pop
jno
xchg
xchg
jbe
or
test
stc
fwait
sub
sub
push
imul
sub
fimuls
pop
js
dec
inc
mov
das
jne
inc
mov
mov
dec
lret
inc
jb
sub
and
xorl
test
fs
or
test
cmp
and
mov
out
scas
jne
into
inc
es
loop
test
out
inc
imull
call
fs
imul
subb
xchg
mov
mov
and
sbb
ljmp
or
mov
jo
lock
xchg
into
cmpsl
mov
cmp
xchg
das
aas
popa
fwait
stos
jnp
rcrl
lcall
mov
xchg
out
hlt
lret
clc
xchg
xor
or
out
xor
xchg
and
jno
stos
testb
pop
mov
adc
pop
sub
adc
loopne
icebp
and
or
and
rcll
das
push
aas
pop
in
icebp
xor
imul
cmpsb
sub
mov
nop
adc
js
faddl
sub
mov
push
ja
add
out
arpl
dec
mov
xor
int
xor
movsb
sti
pop
pusha
call
aas
mov
call
mov
inc
ds
lret
cwtl
fistpll
cld
xor
sbb
loope
jo
mov
popf
sbb
sbb
cwtl
cmc
imul
sub
in
sbb
mov
adc
mov
xor
mov
xchg
or
push
shl
xor
nop
add
movsl
adc
js
cmp
jb
mov
stos
fisubrl
dec
xor
stos
int
push
ja
popf
in
sbb
cld
sbb
les
cld
fldt
jmp
nop
movb
test
sbb
lea
repnz
mov
jae
mov
mov
cmp
mov
pop
ss
push
adc
pop
hlt
repz
cmpsb
jge
sbb
outsb
dec
jecxz
and
dec
jbe
jbe
mov
mov
lods
fidivrl
les
mov
es
mov
cmpb
adc
sbb
or
stc
xor
pop
hlt
mov
sub
mov
iret
pop
mov
sub
lahf
out
das
repz
addb
or
out
pop
sbb
mov
sbb
dec
stos
mov
lret
stos
push
inc
sbb
mov
or
arpl
sbb
xchg
cld
aam
stos
icebp
dec
clc
idivb
xor
xor
cmp
cmp
repz
into
mov
pop
test
adcl
aad
outsb
cmp
inc
stos
lods
shrl
pushf
addl
add
sbb
cld
icebp
xchg
sub
cmp
push
movsl
mov
mov
cs
sti
cmc
dec
dec
aaa
lahf
jge
xchg
add
arpl
in
adc
mov
loop
fistps
imull
bound
pop
adc
inc
sub
shll
xchg
or
lcall
sbb
dec
xchg
mov
aas
cmp
sub
mov
in
xor
leave
mov
loop
sbb
sub
cmp
cmpb
jb
fwait
cmc
in
sti
aaa
cltd
xor
out
dec
inc
mov
mov
pop
and
mov
bound
xor
lcall
jae
jns
mov
jb
dec
mov
mov
ficoms
repz
jbe
ret
and
mov
push
rorb
and
sub
cmp
cmp
jmp
cmpsl
es
lods
xor
xchg
mov
push
inc
mulb
or
shl
outsl
push
loop
adc
push
pop
pop
jmp
cmp
out
sahf
pushf
in
mov
dec
jne
fnstsw
inc
add
xor
sbb
pusha
out
lret
lret
adc
cmc
lcall
mov
inc
jl
mov
sbb
mov
notl
testl
icebp
in
popa
lds
add
pop
xchg
lock
or
ret
loop
mov
sub
cwtl
into
popa
repz
imul
cmp
leave
and
push
pop
negl
roll
gs
lods
push
std
xchg
insb
loope
mov
dec
xchg
sbb
mov
inc
and
fsubs
iret
push
fwait
lock
rcrb
aad
or
stc
iret
cmpsl
insb
cmp
incb
xchg
inc
mov
std
lcall
push
sub
sbb
push
cli
rcrb
or
pop
dec
pop
js
xlat
scas
rclb
lcall
gs
insb
dec
pop
lds
aad
ss
push
rcrb
movl
cwtl
inc
xor
les
add
xorl
lds
mov
xor
mov
fbld
cmp
mov
lods
jns
cmp
shufps
sub
or
daa
outsl
fsts
jae
mov
notl
insl
stc
insl
add
ss
cmpsb
inc
pop
icebp
sahf
jne
mov
cmp
loope
cmp
test
enter
outsb
xor
in
js
pusha
shll
sub
stos
xchg
mov
daa
or
mov
iret
jns
cmp
cmpsl
sarl
dec
addps
jmp
dec
lock
cs
sti
lret
aam
mov
ds
mov
imull
xchg
nop
icebp
jo
xchg
and
or
out
ljmp
mov
push
push
loope
xchg
stos
xchg
mov
mov
jbe
jp
cmp
out
adc
push
jmp
addr16
test
sub
sub
mov
sbb
push
or
sbb
decb
jge
mov
mov
aaa
mov
pushf
and
add
cmc
jmp
ret
stc
mov
cs
fildll
xchg
arpl
scas
test
lods
jo
pop
stos
push
mov
mov
ja
pop
mov
pop
adc
aaa
push
ds
push
xchg
sbb
sbb
and
shlb
pop
xchg
adc
aas
xor
sbb
push
sub
movsb
xorb
and
and
dec
jle
xor
xor
ret
fistps
cmpb
sbb
out
enter
out
inc
cwtl
sarl
pop
lds
cmp
add
loopne
clc
jmp
sub
jnp
loop
inc
aas
dec
icebp
fstpt
sar
or
push
insl
mov
pop
cmpsb
fbld
xchg
and
fs
cld
cmc
data16
mov
mov
and
in
mov
jmp
mov
fistpl
xchg
insl
shl
mov
pop
lret
jns
mov
es
aam
cmp
rcrl
push
push
mov
out
je
cmp
or
push
or
out
mov
cli
pop
pop
ficomps
xchg
xor
arpl
pop
xchg
andl
jbe
imul
in
dec
aam
hlt
sarl
les
mov
mov
mov
xor
pop
and
ljmp
mov
sbb
xor
add
inc
hlt
mov
popf
or
sub
mov
sbb
or
push
jae
cmpsb
test
pop
fwait
xchg
add
int3
psrad
xchg
add
adc
stc
push
outsl
sbb
mov
pop
cltd
jne
mov
jbe
inc
fwait
outsl
jbe
mov
or
push
stos
call
popa
pop
ret
jb
inc
adc
mov
and
pop
js
sahf
jno
and
pop
sub
shl
test
cmp
cmp
xchg
adc
lret
jmp
jae
jnp
adc
push
mov
mov
cmp
mov
mov
cwtl
pop
xchg
inc
mov
fwait
ja
cmc
mov
out
cmp
int
xor
sbb
fldt
cmp
push
sarb
pushf
stos
pop
popa
adc
cmp
cld
cmp
mov
scas
xchg
bound
and
pop
in
ss
lret
aad
mov
in
idivb
mov
popa
inc
fs
add
lods
ds
dec
inc
loop
pushf
mov
sub
jbe
lcall
pushf
popf
lcall
cwtl
adc
addb
pop
add
and
push
xchg
lds
rorl
push
sbb
xchg
add
mov
imul
lock
cmc
sub
stc
push
sbb
shl
inc
cmp
les
lock
repz
mov
pop
adc
add
loopne
lods
and
mov
movsl
arpl
jle
push
pop
rolb
dec
ret
xchg
loopne
clc
adc
xchg
or
cmc
push
push
stos
add
mov
mov
or
or
lea
dec
rcrb
sub
sub
cmp
les
xor
inc
addb
adc
xchg
xor
jl
ljmp
jp
inc
xchg
sub
iret
xchg
aas
or
outsl
xor
mov
rcll
cmpsb
push
cs
dec
dec
jg
inc
dec
pop
cmp
jecxz
sub
inc
addr16
call
loopne
xchg
jnp
push
sti
out
dec
add
ficoml
sbb
js
pop
pop
pop
popa
jbe
fsubl
lds
fneni(8087
aam
mov
cmc
test
pop
into
cltd
lcall
fcoml
movsl
lods
xchg
adc
shlb
jne
je
dec
lods
inc
pop
repnz
repz
lret
pop
bound
xchg
cmpsb
lret
xor
mov
sub
push
mov
mov
fwait
sub
cmc
sbb
cltd
fmull
sub
stc
pop
into
gs
pop
xchg
adc
js
in
sub
lods
dec
sbb
xor
inc
ret
out
dec
push
inc
sbb
and
clc
aad
jne
in
mov
aaa
mov
adc
test
arpl
cmc
and
mov
jmp
and
stos
inc
loopne
in
notb
icebp
push
repz
sbb
sub
test
jg
imul
ds
pop
andb
inc
cmpsl
loope
cmp
lods
xchg
cld
adc
mov
lret
nop
mov
das
fs
incb
jb
pop
aas
or
cmp
outsl
iret
mov
negb
test
xchg
pushf
sbb
dec
pop
les
popa
imul
mov
cltd
jg
lahf
cmpsl
inc
cmp
dec
push
mov
lcall
shlb
sub
pop
je
mov
adc
xchg
in
mov
xor
or
pop
xchg
lds
dec
lds
pop
sub
mov
popf
insl
and
insl
pop
hlt
std
sbb
lds
pop
cld
orb
jns
sbb
sbb
paddsw
nop
xor
das
cmp
and
adc
jae
sbb
jp
sub
cwtl
xchg
mov
mov
sub
fiadds
sub
scas
push
js
sbb
cld
lock
fisubl
insl
cmc
lock
pop
pusha
js
fcmovu
out
mov
das
imul
fiaddl
add
divb
xchg
inc
xchg
cmc
sub
rcrb
out
rolb
and
rcll
xchg
outsb
fnstsw
pop
dec
movb
aam
push
js
shlb
push
xchg
data16
pop
mov
stos
jns
loop
xchg
incb
enter
in
adc
sar
test
test
mov
push
mov
test
or
sbb
lods
push
jo
mov
add
pop
stc
int
xchg
push
push
mov
adc
add
xorb
popa
or
stos
mov
xor
mov
loopne
cli
incb
xchg
das
push
and
push
sarb
add
sub
xchg
dec
ficompl
outsl
mov
sub
ss
mov
sarl
out
lods
jmp
and
scas
cmc
push
cs
daa
mov
sar
fdivp
mov
int3
test
faddp
push
push
mov
sbb
fwait
sbb
ret
mov
sahf
mov
adc
sahf
xor
xor
push
pop
xchg
sbb
or
inc
aam
cs
mov
nop
adc
jge
mov
shlb
scas
add
cmp
inc
adc
insl
cld
insb
or
sub
je
mov
pop
push
cmpsb
push
and
mov
cmp
pop
mov
arpl
and
sahf
or
jne
test
pop
subl
jne
mov
imul
or
fiaddl
out
add
andl
lret
jne
inc
xchg
xor
fdivrl
dec
mov
repnz
ficoms
ljmp
xlat
jmp
adc
aas
adc
mov
and
sub
xor
dec
test
test
test
mov
sbb
mov
rsqrtps
dec
mov
aad
in
roll
xchg
jp
sbb
cld
lcall
cmp
xchg
gs
pushf
xor
mov
add
cmp
and
jl
inc
imul
cmc
das
cmp
mov
in
jae
adc
mov
repz
mov
mov
int
or
mov
sub
int3
adc
jae
jecxz
data16
outsl
test
or
ror
xchg
cmpsl
pusha
adc
push
jmp
es
jmp
inc
mov
in
cmp
sub
jb
enter
cld
popf
adc
or
jge
pusha
pusha
mov
mov
sub
mov
ret
cmpsl
add
xlat
in
push
pop
cmpsl
jp
negb
les
pop
mov
loop
or
rcrl
cmc
jno
dec
push
cmp
jnp
into
mov
bound
shll
mov
jmp
in
push
data16
lods
jge
dec
inc
dec
xchg
bound
rcrl
aad
mov
xchg
add
jl
push
sbb
adc
ror
adcb
std
xor
xchg
dec
mov
inc
in
or
mov
cmc
jp
push
jns
dec
mov
lods
inc
jge
dec
sbb
es
ljmp
push
cmpsb
and
andl
push
push
sub
mov
mov
orl
cld
jno
ret
mov
mov
dec
or
lods
jne
repz
dec
sbb
push
xchg
mov
in
mov
jne
mov
add
loopne
and
cmc
test
data16
lock
pop
in
in
inc
imul
or
lods
and
repz
or
push
xchg
iret
push
pop
lcall
int3
or
aas
or
mov
test
test
loop,pt
mov
mov
jne
mov
add
and
jne
inc
or
jp
sub
add
test
add
mov
loopne
inc
test
ss
cli
cmp
in
xor
jecxz
sub
ret
mov
dec
out
inc
pop
push
sub
insb
into
jnp
gs
mov
mov
js
lods
insl
inc
push
outsb
bound
shr
jae
or
inc
ss
jmp
jno
cmp
jne
dec
inc
cld
fnstsw
push
inc
inc
cmp
or
cmp
out
or
dec
or
out
mov
shl
cltd
pop
scas
mov
aas
out
xchg
pusha
adc
xlat
xchg
popa
adc
sub
jno
test
push
mov
adc
push
pop
sar
lods
inc
in
mov
add
push
sbb
xchg
in
jo
emms
repz
nop
fdivrl
push
in
cmp
adcb
sub
sub
mov
inc
scas
int3
dec
push
clc
push
in
cltd
hlt
jbe
jb
jl
lock
xor
cmp
xchg
jge
cmpsb
mov
pop
xor
loop
jmp
fmuls
push
movsl
in
pushf
and
out
mov
cmp
cwtl
jo
gs
into
decb
dec
notl
jb
cmp
mov
xchg
pop
push
add
outsb
push
lea
fsubrs
cwtl
pop
mov
inc
lret
stos
xor
sti
fsubs
cmp
mov
into
sahf
ss
jl
sbb
in
jp
fldenv
cmp
das
imul
or
mov
jbe
mov
imul
xorb
inc
fs
mov
cmp
jecxz
in
sub
push
popa
fistpl
xchg
int
xor
jle
pop
xor
mov
push
add
fbld
aas
pushl
mov
xchg
sbb
in
dec
ret
jns
out
repz
dec
mov
lret
or
adc
sub
mov
mov
repz
outsb
loop
push
enter
fcoml
ficoml
bound
jle
cltd
test
adc
push
dec
xchg
sub
xchg
sbb
test
push
mov
jecxz
and
mov
pop
stc
push
inc
test
inc
int
cmp
movsb
movsl
add
or
stos
mov
mov
fwait
popf
stc
mov
inc
arpl
sub
adc
and
xchg
adc
fidivl
dec
mov
popf
leave
pop
xor
fnsave
sbb
dec
mov
aam
adc
out
sbb
push
leave
sbb
out
push
or
ljmp
xor
pop
dec
xor
lds
mov
sub
hlt
sti
xchg
sarb
enter
add
imul
xor
icebp
xor
fistpl
jo
ret
inc
daa
jecxz
test
push
sbb
mov
cmpsb
push
inc
out
cmp
sub
daa
neg
xchg
or
stc
movsl
inc
add
xchg
test
lock
adc
loop
scas
mov
add
jle
push
movsl
mov
adc
test
cmc
imul
sub
shll
cmp
dec
jae
or
xchg
rorl
icebp
and
daa
out
cmc
movsl
scas
pop
les
test
inc
loope
inc
pop
loope
outsb
shrb
jae
sub
or
push
dec
lea
into
jb
fsubp
cmpsl
mov
gs
lret
mov
std
js
fildl
add
inc
jl,pn
sti
jg
mov
sahf
pop
xchg
add
push
ds
lds
pop
pusha
xchg
ror
inc
adc
inc
lret
dec
xchg
add
movsl
mov
stos
push
add
sbb
js
lock
insl
xchg
subl
sahf
xchg
cmp
jne
or
into
fcom
cltd
icebp
test
testl
fldenv
test
pushf
fisubrs
aam
or
pop
mov
pushf
pop
and
push
sub
gs
sbb
mov
loop
adc
xchg
xor
mov
and
fwait
and
mov
push
jae
stc
mov
mov
sti
jbe
or
lcall
mov
outsb
pop
xchg
add
xor
pop
imul
cmp
scas
sbb
inc
lcall
push
xchg
sub
inc
leave
xchg
icebp
push
testl
pop
dec
mov
ds
fldt
punpckhwd
and
mov
scas
loope
cld
mov
cmc
sbbb
dec
push
add
ror
dec
cmp
push
xchg
notl
test
out
mov
jmp
dec
jge
dec
data16
dec
push
call
add
sub
jbe
iret
in
jnp
mov
mov
cmp
stc
sbb
cmp
lock
jecxz
repnz
push
imul
rcll
and
lods
pusha
adc
push
xor
xchg
inc
add
mov
pop
xchg
aaa
popa
mov
arpl
mov
push
ret
pop
fnstsw
or
insl
cmpsl
ja
out
pop
lods
xchg
insb
es
adcb
xchg
sbb
loopne
inc
sub
push
cmp
jge
inc
mov
mov
bound
inc
sub
xor
not
aaa
mov
adc
cmp
xchg
fmull
mov
push
jae
sahf
fiaddl
cmpsl
xor
in
fistpll
pop
outsl
lret
inc
and
out
inc
inc
clc
jmp
std
pop
adc
push
inc
icebp
insl
bound
loope
cmp
es
mov
mov
sarl
fdivrs
jb
in
aas
out
out
fdiv
loope
push
mov
mov
push
dec
ret
mov
mov
or
bnd
in
sarl
inc
test
cmc
rcrl
and
cmpsl
out
lret
sbbb
and
repz
rorb
std
xchg
xlat
push
ljmp
push
or
cmp
test
adc
push
test
iret
jb
xchg
mov
mov
je
mov
jae
add
lods
xlat
pop
stc
sbb
dec
daa
cmpsb
scas
outsb
mov
sub
sub
jbe
mov
pop
pop
xchg
sub
fbld
sahf
mov
test
nop
lret
sbb
cmp
dec
add
shll
cltd
inc
cmp
shl
inc
into
orl
inc
out
xchg
sbb
mov
push
cmp
add
jge
mov
lret
cmp
cmp
iret
sub
sub
dec
jne
sbb
in
adc
arpl
mov
jnp
sbb
xor
and
jne
mov
lds
mov
repnz
fs
xor
cs
insb
scas
dec
lret
in
jge
add
and
mov
xor
xor
jnp
mov
and
adc
add
dec
jge
dec
fidivrl
and
pop
or
and
mov
call
pop
addl
cmp
cmp
repnz
xchg
xor
inc
dec
lret
cld
cli
inc
fcompl
int3
xchg
cmp
inc
sub
mov
test
xchg
scas
lods
imul
cmp
dec
adc
les
test
nop
xchg
pop
js
push
cmpsl
or
xchg
or
jle
fnsave
or
mov
jae
iret
gs
push
ret
out
aad
jno
and
mov
inc
jbe
daa
sub
arpl
dec
mov
jnp
lds
or
mov
sbb
add
bound
dec
jnp
in
mull
mov
int
sbb
rcl
xlat
jge
mov
cmp
aas
lea
cmp
shl
fwait
pop
dec
inc
shrb
orb
lcall
ret
iret
mov
or
cmc
fistps
daa
push
xchg
pop
inc
push
outsb
push
jp
addr16
xor
adc
cwtl
je
scas
insb
flds
outsl
sbb
movsl
movsl
popl
pop
jo
lock
ret
pusha
addb
sbb
lahf
pop
lea
and
adc
testl
shl
test
movsl
stos
nop
jge
rclb
std
fucomp
push
mov
test
es
push
sub
popa
add
push
add
xchg
push
lret
scas
xchg
stc
cs
push
scas
imul
scas
ret
cltd
and
jp
jnp
stc
inc
pushf
sbb
mov
xchg
popa
clc
lcall
cmp
mov
xchg
dec
and
inc
in
jl
addl
lcall
and
rcrb
outsb
jnp
mov
add
mov
fdivs
jns
rcrl
out
les
test
pop
std
test
je
mov
mov
jo
add
test
mov
bound
addr16
shll
aas
jno
icebp
pop
mov
jne
or
xchg
cmp
or
xorl
xchg
mov
push
ja
jl
xchg
stos
aad
mov
mov
repz
mov
lods
xor
and
flds
sub
dec
lahf
sahf
outsl
decb
cmp
add
xor
jbe
sbb
cli
cmpsl
std
arpl
pop
enter
add
mov
cmc
xchg
pusha
xchg
insb
hlt
das
lret
or
jno
pop
cmc
andl
bound
add
cli
xor
xchg
mov
sbb
push
shr
and
sbb
sti
push
jbe
or
sbb
pop
roll
sub
push
fldenv
mov
lds
adc
add
in
add
pop
cli
push
sbb
loope
xlat
xlat
dec
pop
outsb
dec
rclb
testl
fcomi
cs
mov
ficompl
inc
jae
cmp
xchg
pushf
aaa
push
les
or
push
fists
fsts
jp
mov
xchg
mov
in
mov
jmp
pop
arpl
or
je
jbe
mov
lea
mov
mov
out
faddp
mov
js
lods
push
lea
in
enter
rorb
dec
imul
test
outsb
push
cli
xchg
je
pop
testl
movsl
cmc
push
movsl
mov
mov
inc
dec
mov
fists
movsl
rcll
cmp
xchg
and
loop
sub
sub
push
loop
mov
push
push
push
gs
sti
rcrb
push
lret
or
int
out
mov
xor
dec
rol
enterw
add
inc
xchg
fs
loope
mov
xchg
or
mov
gs
xchg
out
test
shlb
jne
xor
jne
xor
imul
rolb
dec
stc
mov
pop
lock
jne
or
fbld
aam
inc
xchg
ljmp
stc
cli
and
push
ret
mov
mov
jp
shrb
ljmp
jle
andb
scas
mov
in
dec
cmpsl
mov
fndisi(8087
pop
addl
les
adc
pop
xchg
pop
adc
inc
or
and
adc
pop
and
and
mov
inc
pop
add
mov
jmp
pop
fcom
adc
pushf
in
sub
jle
out
cmpsb
jl
insb
test
xor
add
enter
lds
add
and
pop
out
dec
fistps
scas
and
jb
adc
stos
or
and
loopne
adc
push
pusha
fiadds
loope
jns
add
sbb
out
inc
fdivr
cmp
add
push
arpl
lods
ss
inc
clc
cmp
test
pop
mov
push
es
lret
movsb
mov
into
div
scas
nop
dec
popa
rcl
shlb
nop
ret
call
sub
push
fnstenv
pop
arpl
rcrb
xor
mov
and
bound
jbe
aam
xchg
sub
mov
sbb
pop
cmpl
les
stos
jnp
faddl
xchg
or
test
imul
popa
mov
outsl
xor
xor
push
sbb
mov
hlt
adc
and
pop
test
sub
inc
and
shlb
ja
cs
stos
shll
jp
adc
roll
popa
inc
je
call
dec
je
dec
mov
lods
outsb
add
cmpsb
loope
jbe
mov
sahf
std
in
sbb
inc
sti
aaa
les
sti
out
push
sbb
push
adc
jp
xor
cmpsl
inc
lahf
sbb
xchg
mov
xlat
sub
dec
sbb
mov
dec
rclb
repz
es
je
incb
jbe
ja
jo
or
sub
int3
loope
imul
add
jne
jge
andb
sbb
outsl
sbb
push
iret
gs
xlat
cli
pop
jns
test
pop
arpl
push
ss
das
int3
push
and
loopne
ret
sub
arpl
iret
hlt
xlat
jp
jnp
lahf
cmpb
pop
mov
and
movsb
xor
mov
loop
mov
mov
jp
andl
xchg
mov
lock
rcll
push
in
rcr
loopne
cmp
jae
push
mov
and
mov
jo
rcr
test
lret
mov
lahf
repz
cmp
add
repnz
std
rcrl
mov
push
push
fsubs
jno
out
xor
aas
bound
jge
and
xlat
mov
rclb
hlt
push
add
jl,pt
mov
adc
stos
xchg
xor
addr16
mov
pop
fsubrs
fcmovbe
mov
pop
out
nop
sub
adc
adc
cmp
outsl
nop
sbb
imul
sub
push
and
in
js
jbe
iret
cmpsb
and
jecxz
adc
ficoml
mov
iret
cmc
push
mov
lds
sub
imul
jp
sbb
cmpsl
sub
rcll
jbe
adc
jbe
loope
add
sub
out
lock
inc
ljmp
aam
inc
ret
icebp
fcmove
inc
popa
jno
mov
bound
mov
xor
mov
call
cmpsb
fadds
xchg
lock
sbb
mov
fsubl
pushf
std
movsl
mov
pop
aam
sbb
in
mov
xchg
scas
fdivs
mov
mov
jbe
mov
xchg
neg
push
xchg
ljmp
push
fisubrl
pop
add
cli
and
lahf
insb
mov
cs
jns
cmp
dec
popf
xchg
shlb
and
pop
jo
cltd
std
addr16
dec
cmovbe
push
add
ret
mov
pop
add
test
xor
imul
mov
repz
addr16
adc
std
jl
lea
lock
lret
cmpsb
or
imul
cld
push
scas
jecxz
jno
nop
rcll
leave
fidivs
jo
mov
ja
mov
inc
repz
mov
sbb
ret
es
sbb
adc
aaa
cmp
outsb
subb
mov
shlb
test
or
out
ljmp
push
xor
mov
das
dec
push
ljmp
stos
popf
loopne
aad
int3
mov
ficomps
cmp
adc
icebp
mov
mov
add
xor
aad
mov
iret
pusha
or
jle
sbb
arpl
mov
stos
inc
scas
push
dec
and
stc
inc
cmp
fxtract
cmc
enter
dec
imul
int
pop
jg
mov
lcall
push
xchg
test
pop
out
neg
faddp
fwait
out
pop
mov
sahf
stos
and
mov
jge
sahf
es
mov
jl
pop
dec
les
cwtl
push
add
aam
mov
push
insb
out
or
and
jae
cltd
sbb
test
inc
dec
push
gs
aas
movsb
push
cmp
jmp
mov
cmp
mov
mov
jb
out
mov
jmp
lods
cs
xor
add
js
lret
lods
mov
jle
push
jl
dec
mov
xchg
sarl
movsl
add
jge
push
jne
lds
sahf
sbb
outsb
mov
fs
lcall
cmp
inc
stc
and
loopne
or
sub
or
add
jbe
xlat
pop
xchg
out
add
frstor
sbb
fnstcw
sarb
xchg
scas
fs
xchg
add
push
sahf
cmp
sub
out
cmp
icebp
repz
add
push
sar
shrl
ljmp
popl
lcall
out
xchg
shlb
dec
lock
xchg
add
loopne
test
mov
loopne
jle
sbb
stos
fs
stos
jge
lock
jnp
cmp
push
pop
bound
loopne
das
ljmp
cmp
inc
loope
mov
xchg
mov
inc
lds
pop
pop
fidivl
dec
mov
push
cmpsl
mov
add
jns
or
lret
test
sub
testb
stos
push
dec
cmpsl
cmp
sub
in
ja
ljmp
mov
push
pop
jbe
fisttpl
lods
sub
xchg
imul
push
mov
sub
inc
imul
sbb
push
test
inc
or
pop
jo
pop
add
mov
add
mov
pushf
ret
jbe
add
into
aam
sbb
jg
xor
std
jmp
jae
in
mov
repz
cmp
dec
ja
pop
pop
jno
mov
xchg
roll
lahf
aas
jg
stc
pop
push
add
aas
mov
lods
pop
jne
xchg
cmpsl
adc
pop
jle
push
sbb
add
in
popf
cwtl
fstpt
aas
jb
stc
scas
push
mov
push
nop
and
nop
xchg
lods
adc
das
mov
mov
inc
in
push
adc
jnp
dec
mov
add
xor
lds
pusha
js
repz
or
cmpsb
fwait
push
push
or
or
sub
jmp
pop
jbe
je
mov
stos
int
rclb
shlb
jge
xchg
or
pushf
adc
jns
arpl
pop
int
mov
decb
inc
fsubl
in
fistpl
jnp
mov
sbb
inc
mov
iret
clc
outsb
pop
mov
outsb
fsubp
mov
pop
out
mov
cmp
shlb
push
insl
iret
mov
leave
sti
or
push
out
data16
pusha
dec
iret
iret
popa
pop
add
or
cmp
xchg
sub
divb
into
fdivl
jle
mov
roll
ja
inc
jle
sbb
push
shll
pop
adc
xchg
sub
dec
and
popf
ret
cltd
xchg
cmc
loop
cmp
jge
xor
int
iret
xchg
mov
loop
int3
jge
dec
incb
mov
dec
imul
comiss
and
in
jbe
jl
mov
jno
mov
popa
das
and
jmp
xchg
add
or
inc
aaa
mov
or
add
in
mov
shlb
adc
jae
jmp
lret
cs
xchg
jb
sbb
outsl
rorb
mov
sarl
mov
lds
or
dec
dec
int
insl
adc
mov
sbb
into
sbb
jmp
mov
mov
lret
cmp
dec
int3
daa
jb
std
icebp
andl
mov
sub
jo
xchg
xchg
adc
pop
pcmpeqd
mov
fiadds
popa
dec
cs
pop
pusha
add
out
jge
mov
add
fiaddl
add
mov
push
les
jl
cmpsl
dec
fildll
xlat
in
incb
in
stos
fidivs
js
out
aam
sbb
mov
lds
add
icebp
xchg
pop
outsb
mov
lret
sbb
mov
aad
xor
xchg
mov
dec
or
lahf
pop
jae
push
rorb
jl
leave
aas
and
dec
sbb
push
enter
push
insl
enter
mov
xchg
rol
icebp
into
mov
out
data16
inc
es
outsl
test
leave
pop
or
pop
dec
lret
in
sbb
or
ja
es
lea
test
leave
push
ret
jg
and
stc
add
jecxz
push
insl
inc
xchg
xor
dec
divb
jmp
mov
xchg
pop
outsb
pop
jp
pop
call
and
and
and
mov
rorl
xor
pop
lock
cwtl
add
lcall
mov
sub
loopne,pn
adc
pop
inc
jb
cmp
rclb
gs
rcrl
jae
jg
jecxz
mov
insb
adc
sub
push
js
sub
jo
push
test
pop
movsb
adc
inc
dec
insl
je
mov
jmp
and
add
idiv
xchg
cmpsl
inc
mov
loope
xor
mov
xchg
fmull
aad
mov
xor
pop
sbb
inc
push
sti
pop
fs
push
jmp
cmpsl
inc
add
jae
xchg
daa
inc
ljmp
lods
mov
push
mov
cmpl
mov
negb
fs
inc
adc
fists
dec
scas
sarl
xor
test
sub
cltd
pop
insl
mov
xor
and
cli
adc
jb
scas
rcr
leave
outsl
int3
jge
jnp
and
cmp
shll
xchg
mov
lods
push
xlat
push
sub
inc
std
mov
lret
sbb
push
aad
pop
cmp
adc
pop
push
stc
cltd
mov
mov
lcall
in
pop
or
mov
pop
xor
cmp
mov
sbb
cmp
fildl
xchg
daa
out
xchg
mov
int
sub
xor
or
dec
pop
out
mov
loopne
movsb
sbb
sarl
inc
sub
mov
jl
jbe
ds
lret
mov
xor
xor
mov
mov
out
sbb
mov
push
movl
mov
mov
stc
sub
mov
arpl
movsb
pop
and
and
cli
or
pop
ret
xchg
pop
fidivs
push
cmp
sub
inc
out
ret
cwtl
or
in
mov
adc
mov
lret
repnz
out
sbb
fdivr
push
idivl
cmp
ss
xor
movb
push
mov
mov
in
mov
xor
gs
inc
mov
jns
hlt
stos
aad
push
sbb
push
hlt
int3
cmovl
arpl
pop
sbbb
pushf
jl
mov
lret
dec
xor
push
mov
inc
imul
mov
lds
cmp
std
jne
fsts
lea
mov
nopl
mov
lahf
pop
scas
ror
inc
jo
es
push
in
mov
mov
std
lahf
leave
dec
inc
cli
jl
jecxz
inc
fsub
or
inc
das
jbe
pop
cmp
pushfw
adc
cmp
test
add
jecxz
cltd
inc
ret
rolb
rcrl
push
rolb
ret
loop
lahf
lret
je
movsb
cmc
sbb
loopne
addr16
mov
mov
filds
movsb
jle
ja
imulb
fistps
jns
fistps
cs
sarb
imul
insb
movsb
ljmp
bswap
or
rorl
xor
stos
or
js
in
sub
inc
loope
fdivp
mov
hlt
xor
out
push
ret
into
inc
lgs
jne
outsb
push
dec
gs
or
add
fs
shrl
into
arpl
lods
gs
int3
jb
xchg
pop
outsl
fstl
dec
mov
lods
sbb
mov
lret
sbb
sahf
ljmp
xor
int
add
mov
mov
rorl
sahf
hlt
cmp
pop
mull
xchg
flds
add
movsl
jp
xor
mov
xchg
push
xlat
dec
or
xlat
in
pop
xchg
enter
jp
inc
movsb
bound
inc
sbb
cltd
insb
fisttpll
les
ljmp
add
adc
addr16
insl
adc
int3
xor
mov
push
jmp
push
push
repz
out
insl
adc
lods
aaa
pop
sub
inc
mov
jecxz
sbb
jbe
cld
jl
xchg
sbb
loop
sbb
cmpsb
cwtl
in
cmp
loop
icebp
pop
in
adc
ret
in
insb
fildl
inc
shl
or
xor
mov
aam
push
fcmovnbe
mov
xor
inc
inc
add
icebp
sbb
imul
cltd
aam
push
sub
movsb
scas
call
mov
push
xor
and
movsl
push
mov
sbb
dec
and
fisubrs
adc
aas
test
out
xor
icebp
inc
add
mov
sub
lcall
add
shrb
mov
call
cmp
divl
jne
pushf
popa
imul
fstl
push
cld
mov
fcoml
in
cmp
sub
lock
mov
ret
stos
jnp
mov
dec
sbb
dec
fsin
dec
nop
add
out
sbb
andl
movsb
loope
pop
das
sub
jo
stos
mov
aaa
mov
roll
or
sub
out
or
ja
lret
push
xchg
jge
or
in
out
cmpsb
loopne
and
xchg
jecxz
fsubrs
push
adc
pop
cmp
fimuls
mov
lret
fisttps
pusha
shlb
ret
xchg
sbb
cmp
rorb
fbstp
lcall
mov
lcall
inc
inc
cli
mov
cs
pop
out
cmp
cmp
and
fs
out
mov
shl
sbb
cmp
dec
or
stos
dec
jg
xorb
cmp
adc
mov
dec
mov
rcrb
lea
jno
ljmp
push
test
sbb
push
and
imul
ret
jnp
xchg
in
loop
jns
mov
mov
dec
jb
sti
jno
in
cmp
vpshab
pop
dec
adc
xchg
rolb
mov
outsb
push
push
push
jle
repnz
stos
out
test
and
out
out
push
imul
cli
add
shll
mov
mov
sub
add
in
int
or
bound
rcrb
sub
mov
cmp
enter
icebp
and
inc
inc
scas
jmp
pop
push
test
push
mull
fisttps
lcall
imul
cmp
cmpsl
mov
mov
aas
leave
or
inc
cmp
repnz
fdiv
sub
sarb
imul
dec
cltd
sbbb
in
inc
jnp
fwait
or
pushf
adc
clc
add
loope
call
pop
out
inc
add
inc
fcmovnbe
pop
fld
cmp
shlb
shll
inc
fldenv
int3
fldcw
xor
ljmp
out
xchg
adc
adc
and
pusha
outsl
arpl
sbb
sub
lea
pop
lahf
test
lock
and
sbb
jbe
dec
or
out
aaa
fnsave
pop
push
movsl
or
or
sti
or
stos
in
out
inc
sbb
int
mov
pop
inc
not
jmp
lea
inc
pop
xchg
inc
dec
fstpl
or
add
mov
stos
sub
fistpll
cmpsl
cmp
xor
jmp
idivl
lea
jmp
loope
push
addl
orb
bound
aam
ja
sub
xchg
add
imul
mov
pop
stos
outsl
mov
sbb
outsb
movsl
ljmp
outsb
out
adc
mov
pop
and
pop
fimuls
scas
in
mov
jno
mov
subb
or
mov
mov
das
arpl
aad
loop
push
gs
mov
mov
cld
jno
dec
mov
jg
sub
mov
or
in
push
lods
cwtl
outsl
ficoms
xor
cmp
jae
cmp
sub
jmp
data16
daa
xchg
mov
dec
orb
add
jmp
dec
ljmp
xor
fnstcw
jno
repnz
xor
inc
jns
inc
movsl
scas
jb
inc
add
or
xor
sbb
and
hlt
dec
in
mov
in
ret
mov
sbb
inc
nop
shll
jno
or
cmpsb
out
aad
popa
cld
pop
dec
or
pop
les
or
adc
jb
add
adc
cmpsl
pop
fmuls
sahf
sbb
mov
and
xor
aaa
mov
push
and
dec
or
sub
pusha
push
icebp
out
jp
adc
icebp
js
add
jg
add
stc
nop
sahf
sub
xor
into
xchg
add
pop
js
cmp
sbb
push
pop
loop
sbb
leave
dec
inc
leave
leave
jnp
mov
push
inc
aaa
aam
jecxz
and
movsb
enter
cmpsl
lock
insl
outsb
lea
call
sbb
adc
or
adcl
sti
sub
sahf
rcrb
inc
ret
movsl
push
xor
out
outsb
xchg
mov
or
mov
inc
shl
sub
push
rolb
or
std
or
in
cmpsl
xchg
cld
cmp
ficoml
xchg
cmpsb
add
mov
pop
mov
fdivrs
xor
addr16
mov
inc
xor
xor
mov
mov
add
xor
or
mov
fwait
js
or
jns
push
xchg
enter
pop
lods
xor
xchg
cmpsl
stos
pop
add
push
pop
hlt
xor
popf
roll
mov
xchg
jl
mov
shr
mov
mov
int3
inc
adc
cmp
lret
mov
cli
lret
pop
pop
sbb
stos
rclb
mov
jge
and
jmp
movsl
push
enter
test
mov
ret
sub
fiadds
cwtl
ret
fwait
stos
hlt
mov
ljmp
mov
dec
hlt
insb
and
rolb
mov
cmpb
xchg
or
xor
mov
mov
aas
jo
dec
mov
lahf
inc
inc
pop
mov
movsl
out
mov
mov
mov
adc
mov
cmp
mov
shrb
mov
add
lods
jb
out
cmp
push
sbb
add
add
dec
push
jno
xchg
addr16
jmp
jbe
sbb
testl
pusha
mov
sub
iret
cmc
lcall
adc
out
nop
imul
loop
in
mov
cli
icebp
cmp
ffreep
fsubrs
addr16
aaa
dec
rorb
adc
push
daa
data16
mov
je
xchg
outsl
or
jne
or
push
push
js
repnz
push
push
loope
adc
lods
repz
jno
pop
mov
pop
xchg
in
xchg
xchg
shl
xor
jne
cwtl
adc
gs
pop
idiv
and
xor
lret
inc
fs
mov
xlat
dec
push
or
pusha
jo
insb
mov
test
xchg
lahf
ret
cmpsl
push
jne
lods
cmp
mov
sub
in
aam
hlt
mov
xchg
arpl
sbb
push
xor
mov
jecxz
aad
pop
adc
adc
jle
in
mov
lods
mov
popa
inc
xchg
adc
into
pop
gs
mov
stos
dec
xlat
ss
jnp
and
dec
popf
lods
outsb
stc
sbb
addr16
repz
hlt
xor
xchg
sbb
cli
mov
js,pt
cmpsb
xchg
lcall
hlt
add
cmp
daa
fidivs
xor
xor
sbb
mov
iret
jo
xor
pop
pop
pusha
add
jne
pop
cmp
push
inc
cmp
fidivrl
cmp
dec
sub
mov
scas
lret
loop
loopne
shrl
jns
js
xor
mov
mov
mov
sub
pop
icebp
cmp
mov
aaa
insl
cmp
mov
testb
cwtl
js
mov
sahf
pop
scas
push
xchg
nop
bound
dec
or
mov
popa
adc
pop
inc
and
in
mov
xor
inc
mov
test
mov
test
inc
cwtl
cmp
jo
stos
mov
pop
rorl
push
repnz
push
subb
int3
or
mov
cltd
mov
push
clc
add
push
add
dec
popf
dec
shll
dec
push
xor
aam
dec
fsubrs
push
cmp
dec
hlt
adc
nop
insl
dec
xor
out
outsl
nop
jg
xor
sbb
add
pop
or
orb
aam
mov
mov
adc
and
je
dec
js
sbb
fidivs
pop
gs
push
dec
mov
xor
cltd
jns
mov
inc
cmp
sbb
push
fildl
jl
fcoml
xchg
loop
pop
adc
push
jp
mov
pop
mov
push
cmc
cmp
repz
mov
repnz
cmpsl
in
jno
inc
sbb
ss
repnz
lods
outsb
mov
pushf
jnp
sub
ja
push
cltd
jge
fldenv
mov
cld
xchg
mov
adc
mov
lea
aam
fisttpll
jb
adc
cmp
xor
mov
ss
push
add
ror
cmp
push
pushl
lcall
aam
mov
stos
jl
inc
lds
and
test
arpl
mov
jno
cmc
sbb
popa
call
outsl
shll
sub
adc
sbb
or
es
sub
xor
cmp
xchg
icebp
jne
xchg
lahf
mov
rolb
sbb
dec
inc
sbb
mov
cli
sub
mov
xchg
push
imul
push
mov
mov
daa
lods
pop
test
fwait
test
fsubl
insl
rcrl
mov
add
js
push
sub
loop
out
mov
mov
jge
sub
jne
or
int3
enter
xlat
dec
add
fmulp
mov
mov
pushf
je
or
inc
jmp
pop
pop
push
sbb
dec
mov
push
stos
in
testb
subl
int3
mov
enter
jno
pop
mov
cmpsl
mov
movsb
push
mov
int
jge
add
adc
inc
fsubr
mov
stos
call
mov
cmp
sahf
mov
cli
addr16
xchg
out
and
in
stos
rcl
imul
inc
out
cmp
fsts
mov
lret
fcomps
out
fwait
das
jle
sub
imul
inc
rep
iret
cltd
aaa
jo
int
inc
inc
stc
iret
scas
neg
cmp
push
insb
cli
sub
xchg
push
je
xor
je
mov
into
mov
xor
xlat
movsl
sbb
xchg
fcmovb
pop
aam
jmp
dec
dec
shl
xchg
popa
dec
sbb
and
and
ret
inc
fists
mov
aaa
push
or
jbe
int3
lcall
xchg
dec
dec
and
movsb
cmp
or
pop
adc
sbb
sbb
jp
dec
fs
sbb
in
xor
sub
js
js
mov
mov
push
mov
jns
pop
daa
rorl
or
mov
sbb
adc
and
fyl2x
mov
add
repz
scas
dec
ljmp
ret
nop
lret
insb
cvtps2pi
sub
movsb
outsl
das
cmpsb
adc
push
cmp
movsb
push
leave
popf
pop
add
push
cmpsb
ret
stc
xchg
rolb
lahf
sub
stc
pop
sti
jo
xchg
sar
sarb
push
push
std
xchg
xor
scas
js
sbb
jne
cld
repnz
sbb
cmc
data16
lea
cwtl
push
xor
pop
shrd
jo
fnstcw
jecxz
mov
jp
lods
dec
pop
adc
mov
pushf
ror
inc
lret
sbb
jbe
add
jp
push
aaa
mov
cmp
dec
sbb
pop
popf
es
jge
fsubrl
push
loope
jge
out
mov
ss
jbe
cmc
mov
xchg
cld
inc
mov
xchg
and
jmp
pop
jbe
and
dec
adc
sub
lods
xchg
es
sbb
inc
cmp
or
mov
shll
test
mov
mov
xor
lret
test
adc
aaa
jg
test
lret
jbe
cwtl
xchg
hlt
movsl
stos
push
jmp
jns
mov
fld
ss
ror
add
and
xchg
dec
mov
test
adc
dec
sbb
hlt
imul
mov
or
into
jno
icebp
inc
dec
jg
sub
xor
test
push
imulb
jge
fdivp
mov
cmp
xor
mov
out
ret
out
sbb
mov
xor
int
arpl
bnd
ret
mov
mov
cmpsl
test
mov
clc
and
js
arpl
lds
rol
jo
mov
lds
jp
and
test
push
push
ljmp
mov
rcrb
cmc
kxnorw
lods
sub
add
pop
imul
pop
push
jle
mov
sbb
lock
mov
jnp
mov
xchg
cmpps
pop
out
dec
and
imul
pusha
scas
addb
enter
sahf
mov
rcl
ljmp
jnp
mov
inc
sub
ret
das
pop
xchg
xchg
inc
ljmp
jno
dec
jge
lcall
movsb
push
dec
xchg
xchg
in
mov
movl
push
sbb
in
adc
and
push
push
icebp
fidivs
shrl
sbb
or
je
mov
jmp
xlat
cmp
stc
push
and
push
mov
xor
ljmp
cli
arpl
and
dec
jg
sbb
bound
cli
push
push
inc
fstpl
pop
dec
xchg
add
loope
mov
xorl
mov
inc
pushf
lods
sbb
add
jmp
pusha
jl
xchg
out
rcll
push
pop
inc
push
add
insb
mov
rclb
and
movsl
mov
add
and
scas
out
pop
and
stc
aam
push
stc
cmpsb
push
mov
jl
imul
fsubrl
add
cmpsb
pusha
mov
dec
xchg
mov
or
pop
icebp
sti
rcrl
dec
mov
inc
cltd
ds
roll
mov
cli
cmpsl
in
ss
sti
in
inc
stos
adc
loop
std
mov
adc
stos
and
xchg
cmp
popf
std
sbb
cli
mov
call
or
stos
dec
xchg
das
dec
ds
clc
xor
xlat
rolb
and
ret
xor
sti
inc
inc
aas
movsl
pop
lret
ret
push
mov
push
in
jge
arpl
cs
jae
cmp
mov
add
outsl
icebp
out
leave
cli
push
cmc
inc
mov
ss
jnp
adc
mov
adc
sub
les
and
int3
fst
je,pt
adc
sub
neg
out
fsubs
xchg
jl
rcl
push
popa
add
in
sbb
mov
loop
cmp
mov
cmpsb
lods
lods
into
cmc
xor
lret
sbb
push
lods
mov
scas
cmpsb
add
loopne
inc
fidivl
int
mov
jge
aaa
in
xchg
stos
cmp
loope
sbb
into
mov
js
pusha
scas
mov
stos
lock
mov
fsub
sbb
and
jo
js
xchg
ret
cmp
cmp
push
sub
xchg
or
mov
arpl
mov
pop
stos
push
push
bound
mov
aas
sub
push
out
cmp
sti
popa
insl
andb
push
shlb
in
gs
mov
aaa
pop
sahf
adc
rolb
inc
mov
inc
clc
jl
dec
dec
xchg
sbbb
data16
arpl
mov
or
out
push
cli
rcll
fmul
xor
adc
mov
enter
leave
int
std
mulps
daa
hlt
sbb
cld
shl
pushl
repnz
pop
clc
or
addb
or
out
sti
pop
mov
dec
jno
mov
ds
outsb
mov
pop
xchg
add
sbb
mov
pushf
std
js
lods
cwtl
test
syscall
lret
push
ja
in
ret
sti
sbb
test
mov
mov
jecxz
aad
dec
hlt
add
jno
push
insl
mov
mov
pop
out
aaa
push
xor
in
test
or
xor
mov
rcrb
sub
lds
dec
xor
mov
add
jecxz
test
mov
pop
fnstsw
cld
mul
fsubl
or
imul
divb
pop
cs
out
lret
pusha
cmp
mov
lea
js
ret
stos
ljmp
ret
mov
mov
outsb
fmulp
mov
cmc
inc
loope
cmovnp
push
jp
gs
jo
push
xor
sub
add
icebp
sbb
jl
mov
pop
in
mov
mov
jo
out
sub
cmc
loop
outsl
xchg
mov
imul
loopne
icebp
mov
mov
pop
mov
or
sbb
lret
in
mov
gs
ret
jp
lcall
adc
loopne
jp
push
subb
into
outsb
ljmp
pop
xlat
sub
pusha
aam
jg
adc
cmpsb
stos
in
stos
orl
push
pusha
jnp
xchg
loopne
fdivr
data16
in
mov
std
mov
cwtl
xor
xchg
mov
and
add
cmpsb
cmp
bound
inc
arpl
xor
and
lds
daa
jg
lods
xchg
call
js
mov
cltd
mov
dec
daa
adc
xchg
add
sub
cmpsb
mov
lcall
or
and
push
std
bound
cmpsb
fistl
sbb
sarb
std
jns
adc
aam
daa
fstl
and
sbb
rolb
sub
repz
sub
xor
or
jmp
jl
mov
mov
jbe
outsl
mov
cmp
cmp
std
aam
and
push
jge
sti
pop
arpl
pushl
inc
data16
gs
and
sub
rcl
ret
rorb
popf
pop
adc
push
cmc
int3
enter
icebp
xor
xor
es
repz
vpcmpeqd
lret
pop
adc
sbb
xor
xchg
sti
sbb
jnp
xor
jbe
cmc
ror
test
insl
pop
or
add
outsl
leave
inc
enter
add
inc
pop
push
sbb
mov
daa
ret
mov
jnp
jnp
mov
push
sub
icebp
out
enter
in
and
cmpl
xor
lcall
test
loope
jnp
in
stos
inc
or
mov
add
shlb
mov
fldt
adc
divl
cmp
divl
cmp
push
int
mov
dec
pusha
ss
loopne
fisttps
ror
jp
push
mov
loop
hlt
inc
xor
lods
push
shl
jmp
push
mov
aad
cmpsb
std
cmpl
mov
rolb
bound
es
fnstcw
repnz
lods
lcall
test
sub
dec
rcll
bound
pop
fwait
sub
inc
out
stc
push
pop
movsb
rorb
sbb
test
arpl
jp
cwtd
std
mov
sbb
inc
sub
loopne
dec
mov
cmp
add
jp
testb
jp
dec
cs
pop
dec
jmp
cmp
bound
cmp
scas
cli
add
push
cwtl
jg
nop
dec
nop
ret
jne
out
pop
jbe
add
adcb
sbb
in
mov
ficompl
nop
jo
les
leave
lahf
je
repz
pop
fidivl
inc
arpl
lcall
jmp
xchg
pop
push
push
pop
jbe
jae
das
movsb
sbb
mov
ss
pop
inc
inc
cmp
and
outsl
push
fists
cmp
gs
dec
push
add
xor
inc
loop
inc
and
mov
jbe
fsubl
pop
pop
icebp
mov
mov
sub
sub
sti
call
lret
lahf
ja,pt
adc
push
inc
xchg
push
push
subb
cmp
xchg
js
sub
jle
cmpsb
push
pop
out
pop
sbb
jmp
divl
ss
dec
clc
add
mov
div
gs
pop
nop
arpl
aam
ret
es
jb
lret
jbe
loopne
cmp
out
jne
int
outsl
pop
decl
add
xchg
push
xchg
dec
add
nop
sub
leave
shrl
xchg
cltd
fldenv
fwait
imul
mov
jmp
add
out
sahf
mov
stos
int3
cmp
repz
nop
mov
mov
lea
imul
mov
xchg
pop
or
mov
or
dec
scas
icebp
aaa
dec
std
popf
repnz
cmp
xchg
add
scas
repz
dec
cmp
test
and
cwtl
pusha
cltd
leave
pop
arpl
mov
inc
aam
xchg
sub
push
mov
lods
or
sub
sub
or
ret
stos
and
pop
xchg
mov
in
repz
push
sub
mov
testl
aad
fistl
icebp
in
mov
xchg
test
js
sbb
and
aas
xchg
and
xchg
fsubs
test
loope
aam
out
lahf
sub
mov
add
cmpsb
js
ss
test
and
daa
ja
xchg
es
jmp
rcrb
push
mov
daa
clc
jbe
add
dec
sbb
loope
xchg
into
loopne
add
inc
aad
pop
mov
pusha
dec
hlt
mov
pop
bound
sbb
in
xchg
push
aam
insl
std
jge
insl
sub
inc
pop
imul
stc
sub
pop
addr16
push
ljmp
pop
cld
adc
adc
dec
cmp
pop
and
mov
xchg
xlat
xchg
add
or
or
int3
ss
int
test
sbb
xchg
leave
out
pop
pop
lods
jnp
fbstp
stos
popf
cwtl
roll
int3
or
hlt
scas
outsl
out
mov
sbb
cltd
je
bound
mov
push
sbb
aad
push
movsb
mov
mov
cltd
sub
mov
idivb
imul
vhsubpd
pusha
in
mov
incb
repnz
fcmovu
ret
inc
nop
pop
fneni(8087
pop
mov
xlat
psadbw
mov
inc
sbb
int
ljmp
shr
xor
mov
mov
jecxz
pop
jae
xor
jl
lcall
mov
out
outsl
pop
jns
cmpsl
pusha
and
adc
aad
in
xlat
jecxz
mov
mov
push
inc
jg
adc
pop
in
nop
scas
xchg
adc
mov
mov
inc
imul
jo
cmp
pop
push
lret
sar
pop
cs
inc
push
aam
outsl
repz
shlb
inc
mov
leave
sbb
test
out
mov
mov
push
popf
adc
repz
adc
scas
sarl
cs
aaa
aad
add
and
mov
mov
nop
jae
ror
xchg
or
call
arpl
icebp
fistl
pop
mov
loop
aad
sbb
insb
xorl
scas
jno
xchg
aad
enter
xchg
sub
test
adc
inc
aas
nop
mov
add
sub
jle
fdivl
out
pop
data16
and
ds
mov
stos
rorl
cmpsl
sti
ljmp
rcll
scas
lds
lock
mov
in
shl
mov
push
dec
pop
inc
mov
mov
adc
idivb
sub
ret
cmp
dec
int
rclb
cmp
jge
jmp
shlb
inc
pop
ret
and
dec
and
adc
mov
jae
icebp
std
lret
std
mov
mov
xor
leave
jmp
xchg
stos
mov
inc
mov
xchg
xchg
dec
cmpb
div
jmp
pusha
lods
std
xor
sarb
push
leave
bnd
jle
int
or
rolb
dec
jl
xchg
out
rorl
fld
mov
fwait
inc
add
leave
in
pop
aad
push
insl
add
add
pusha
inc
mov
movsb
xor
push
adc
sahf
gs
pop
add
jo
dec
stos
sbb
add
push
or
push
adc
xor
outsb
push
insb
or
lods
xchg
pushf
iret
pop
sbb
pop
out
and
add
rclb
jns
pop
add
mov
xor
imul
cmpb
jnp
jle
stc
dec
pop
mov
movsb
nop
bound
mov
fcomps
movsb
xchg
push
movsl
mov
fwait
into
cmp
test
fs
mov
push
push
lahf
sbb
sub
sub
outsb
xorb
mov
insl
inc
mov
and
and
and
fbld
int3
jne
push
mov
push
pop
addr16
sbb
lock
fwait
jno
ljmp
test
mov
xchg
pop
pop
int3
xchg
popa
cmp
nop
pusha
mov
leave
mov
cmp
pop
in
rcll
inc
sub
add
popa
pop
mov
daa
dec
call
inc
mov
mov
mov
jae
mov
rclb
cmp
cmp
loopne
ss
or
fwait
cmp
or
push
dec
cs
gs
mov
xor
push
xchg
push
pop
pop
inc
lcall
imul
push
movsb
repz
ljmp
aas
mov
mov
addr16
xchg
hlt
cli
cltd
jo
es
adc
test
xchg
ds
mov
push
sbb
lds
hlt
dec
fs
push
cld
mov
jg
jns
push
cmp
sub
dec
aam
sub
fdivl
cmpsl
push
idivl
lods
fnstsw
movd
jecxz
push
mov
pushf
ja
xlat
xlat
xchg
sarl
dec
loopne
lock
adc
or
jae
shrb
jnp
testl
jbe
xor
mov
int3
xchg
pop
icebp
in
ret
mov
xchg
adc
fstpt
call
or
adc
or
xor
mov
push
jb
shll
insb
popa
mov
inc
xor
ljmp
xchg
add
das
inc
xchg
stos
mov
cmp
inc
hlt
pop
inc
mov
push
pop
dec
and
stos
popa
int3
je
adc
xchg
adc
and
divl
in
imul
test
fmull
enter
push
and
ret
popa
mov
aad
rcrl
fidivs
iret
mov
fstl
loop
es
sub
jno
mov
jnp
xor
outsl
xorl
dec
mov
cmc
cmp
push
out
shlb
ljmp
movb
jmp
imul
data16
cmc
sub
cli
shl
lods
xor
fs
pop
sub
push
sahf
adc
mov
test
out
push
test
popa
imul
cmp
inc
push
xchg
xlat
and
rcrb
jmp
mov
jle
add
push
sbb
jl
out
cmpsb
test
dec
inc
rcrl
leave
sarl
inc
lcall
cld
subl
inc
fwait
das
push
sarl
cld
nop
mov
jns
adc
push
and
cmc
fists
mov
enter
stos
add
jo
lea
test
iret
add
pop
inc
stc
ret
sbb
mov
rorl
mov
movsb
dec
or
pop
inc
lods
push
lret
xor
mov
mov
add
push
xchg
and
jo
arpl
mov
popa
and
mov
daa
stos
loopne
mov
lahf
sbb
sub
inc
add
mov
push
sarb
mov
pop
jle
std
imul
xor
jb
rorl
das
cmp
sbb
lahf
mov
or
mov
idivl
ljmp
and
mov
or
fmull
xchg
sbb
std
add
xlat
xor
push
aas
rol
pop
insb
clc
addr16
push
mov
or
mov
divl
mov
icebp
lret
add
jp
add
inc
sub
pop
inc
mov
xchg
mov
xor
dec
push
cmp
lcall
pop
ds
popf
fs
fs
inc
push
jae
or
jo
ficomps
popa
imul
out
xchg
lods
stos
xor
mov
cmpsl
mov
fwait
push
insl
pop
push
std
ljmp
inc
inc
or
pop
push
fbld
orb
adc
add
ds
popa
test
sub
inc
jno
xor
imul
mov
fstpl
cld
dec
notb
inc
mov
out
inc
fimull
fsubrp
dec
mov
mov
or
loopne
out
pop
cli
pop
sbb
out
dec
das
loope,pt
les
cmp
xchg
shll
push
mov
mov
out
ja
xchg
dec
xchg
xor
mov
jge
enter
push
add
loop
es
dec
adc
inc
sub
pop
sub
push
xchg
leave
mov
dec
rcrl
lods
adc
mov
decl
push
pop
repnz
cmpsl
pop
sbb
add
mov
and
inc
lret
or
jmp
xchg
add
sbb
out
fsubrs
std
ds
bound
enter
fidivrs
add
loopne
sbb
fwait
push
les
aad
pop
mov
hlt
mov
xor
loop
mov
les
or
and
mov
cwtl
mov
mov
xor
scas
les
loop
jp
call
out
roll
iret
and
pop
xor
mov
push
adc
shlb
lret
and
lret
jne
sbb
pop
repnz
pushl
js
scas
mov
repnz
dec
ds
sub
and
call
adc
lret
std
ret
movsl
adc
dec
xchg
jae
pop
outsl
rcll
jbe
pop
sub
and
and
jmp
mov
mov
lcall
lea
mov
stos
sub
push
les
daa
insl
push
mov
xor
mov
pushf
movsl
nop
push
or
cmp
mov
insl
pop
xchg
xchg
or
xor
sub
jg
mov
inc
cmpsl
and
sbb
out
dec
sub
cmp
sub
push
mov
rorb
ss
es
jecxz
xor
or
jnp
pop
decl
mov
mov
shll
sub
cmpl
mov
cmpsb
mov
ficomps
dec
mov
lcall
jo
cwtl
inc
mov
push
rolb
cmp
xchg
repnz
je
stos
test
imul
sub
lea
xlat
adc
pushf
or
ret
pop
sahf
lods
in
out
pop
sub
adc
jg
push
mov
sbb
arpl
or
xchg
ret
xorb
or
xor
fs
mov
in
fxch
popa
fistpll
push
idivl
cmp
mov
mov
rcl
jmp
rcrl
in
jl
fists
out
mov
fwait
repnz
je
js
and
or
std
clc
ret
insb
push
mov
push
xor
mov
mov
mov
inc
mov
dec
mov
xor
stos
sbb
or
lods
jnp
xchg
mov
imul
mov
testb
jno
mov
insb
cmp
inc
pushf
das
mov
push
inc
arpl
ret
pop
jbe
in
jbe
imul
push
fs
push
popa
push
mov
pop
xchg
pop
test
inc
mov
les
std
push
jbe
aaa
push
xchg
mov
daa
xchg
das
sbb
fcomps
xor
movsl
xchg
mov
xor
xlat
and
ret
lds
fldt
xchg
mov
mov
repnz
xchg
stc
cmpsl
add
adc
movsl
lods
dec
pop
pop
push
movsb
or
jecxz
mov
insb
imul
mov
loop
add
movsl
jle
sub
push
ja
mov
mov
jo
mov
pop
iret
cli
jns,pn
pushf
jge
push
adc
and
xchg
insl
lods
sbb
bound
incl
loope
cmpsb
push
mov
scas
jbe
mov
xor
cld
lds
shrb
mov
jno
mov
xor
daa
sub
jle
js
fwait
stos
and
ja
imul
dec
jl
test
mov
pop
pusha
repz
stos
push
pop
pop
rolb
insl
outsl
sbb
inc
or
adc
jecxz
divl
mov
jle
xor
xor
out
dec
loopne
pop
inc
push
pop
cs
xor
aam
pop
clc
popa
pop
inc
outsb
mov
mov
inc
cwtl
test
loope
xchg
cmp
addr16
stos
dec
shrl
xchg
xor
in
add
hlt
or
cmpsl
imul
jbe
stos
scas
clc
pop
mov
add
jne
mov
xchg
mov
cmp
ljmp
pop
je
mov
mov
mov
sbb
mov
cld
mov
out
sub
push
in
lock
outsb
inc
cmp
cmp
adc
mov
bound
sub
mov
sub
jne
inc
ss
inc
adc
out
leave
repnz
pop
push
test
and
xchg
gs
fcoml
push
inc
mov
xchg
cmp
les
and
test
in
les
lods
int3
xor
push
mov
in
xchg
lods
cwtl
push
aas
movsb
js
sub
fucom
lret
mov
or
mov
mov
test
push
mov
fs
mov
sbb
repnz
clc
sub
mov
addl
mov
inc
in
frstor
pushf
sub
hlt
fsubrl
insl
pop
xor
mov
jae
sbb
fistps
lea
mov
or
rclb
cmp
xchg
mov
bound
subb
sub
dec
or
popf
lret
inc
xor
jbe
xchg
fisttpl
and
leave
sub
psubd
out
ficomps
mov
mov
lret
dec
jecxz
lods
mov
pop
or
sub
adc
adc
dec
jno
mov
fistl
mov
pop
cmp
decl
rcrb
xchg
mov
sarl
out
test
lods
jnp
mov
shl
imul
sub
pop
mov
pop
mov
dec
hlt
and
dec
out
add
and
cmpl
sub
fisttpl
cwtl
cmpsl
add
jecxz
fistpl
imul
rclb
jo
bound
scas
jns
cwtl
push
lcall
mov
jle
fs
data16
popa
xchg
xchg
test
fsubs
push
cmp
inc
add
sahf
jecxz
loop
ss
add
add
daa
ds
dec
jns
sbb
scas
dec
das
jge
jne
push
and
mov
adcb
hlt
test
jne
and
aam
mov
add
fs
sub
addr16
sub
add
test
stc
xchg
sar
repz
and
cmp
leave
xchg
or
fiadds
xchg
cmpl
inc
imul
pop
sbb
iret
ffree
repnz
aam
lock
mov
fwait
dec
pushl
adc
in
xor
movsb
jmp
fisttpl
mov
mov
jo
jns
lcall
test
dec
jne
ss
aad
mov
fisubrs
aam
lret
mov
add
call
repz
dec
sbb
jne
add
loop
cwtl
cmp
mov
adc
adcb
out
lret
and
in
lret
push
and
inc
mov
stc
pop
sub
pushf
out
jg
cmc
ds
pop
cmp
pop
push
sub
add
mov
pop
mov
mov
scas
scas
xchg
aaa
add
cli
inc
mov
push
lods
mov
addr16
push
je
dec
adc
jb
inc
loopne
push
out
out
mov
insl
push
pop
les
adc
xchg
pushf
rep
push
mov
insb
int
testl
inc
int3
mov
and
mov
in
into
ja
fs
xchg
or
gs
jnp
adc
lahf
or
stos
sbb
dec
sub
jb
ljmp
adc
pop
enter
cmp
jl
arpl
mov
add
or
xchg
pop
repz
mov
jbe
mov
lds
jg
dec
fnstsw
mov
sarb
mov
jae
mov
shr
in
mov
push
adcb
dec
adc
mov
adc
xchg
add
cmc
mov
pop
mov
ret
mov
stos
test
aad
sub
mov
sub
mov
ljmp
clc
test
pop
push
lods
mov
push
xchg
out
or
imul
lds
lcall
sbb
in
int3
push
xchg
bswap
sub
stos
adc
cmp
jo
sahf
pop
cmc
fdivrl
jae
or
lods
cmc
sti
out
shrl
aam
out
pop
lock
cmpsb
stc
inc
adc
scas
cmp
jae
mov
xorl
fs
orb
pushf
jb
jmp
mov
bound
mov
push
lock
pop
mov
dec
push
popa
out
xor
jo
adc
cs
iret
hlt
sub
sub
mov
enter
stc
jge
xchg
movsl
push
sub
push
scas
leave
xor
push
aad
pop
pop
add
loopne
xchg
adc
adcl
std
loop
xchg
adc
dec
cmpsb
inc
lret
pop
je
xor
xchg
sahf
pop
xchg
pop
mov
punpcklbw
pop
das
sub
lods
jnp
xor
ja
jnp
lahf
ljmp
pusha
sbb
aam
int3
nop
inc
leave
mov
je
imul
or
inc
xchg
mov
fldt
add
add
out
loopne
loopne
stos
lret
jns
adc
aam
jno
sub
rclb
and
dec
jae
lock
aam
dec
or
leave
ret
mov
push
jp
fnsave
cmp
cmpsb
insb
dec
js
push
orb
pushf
cmp
jnp
imul
sbb
stos
mov
dec
jmp
test
repz
jecxz
pop
and
test
outsb
adc
ret
push
insb
push
hlt
lcall
lods
aas
movlps
or
sbb
xor
jecxz
addr16
cmp
in
mov
inc
cld
fstl
adc
dec
mov
shl
sub
push
mov
mov
sub
adc
push
sub
lahf
sub
out
addr16
and
test
mov
lea
cltd
jge
or
pusha
jns
lods
cmp
lea
enter
sub
pop
push
cwtl
xchg
and
js
jns
mov
rcr
cmp
inc
mov
jle
xchg
mov
adc
mov
mov
lcall
jecxz
and
pop
jne
xor
inc
mov
dec
out
addr16
lea
bound
push
mov
ret
cmp
mov
ret
rolb
popa
push
aaa
sub
dec
daa
pop
jno
out
subb
sbb
or
add
mov
dec
in
xor
negl
sub
push
jg
mov
xchg
mov
xor
jo
rorb
mov
shr
mov
jp
jmp
lock
mov
mov
in
inc
mov
push
sbb
add
movsb
leave
mov
pusha
fldcw
scas
xor
movsb
xchg
dec
ret
in
movsb
push
sti
push
mov
fsub
adc
pusha
aas
mov
shlb
add
cmp
add
repz
cld
in
sbb
add
mov
xlat
push
loopne
scas
enter
cmc
cmp
scas
dec
add
mov
jl
xchg
adc
repz
sarl
pop
ret
pop
mov
fninit
jae
leave
jp
pushf
das
fnstsw
push
and
aam
insl
or
xchg
cmp
adc
ljmp
and
movsb
push
in
std
aas
aas
push
insl
lds
dec
ljmp
cli
pop
aas
xlat
cmp
fstps
push
or
mov
xchg
mov
scas
push
push
out
xlat
ret
jle
xor
testl
sub
mov
leave
in
sahf
pop
iret
dec
rol
cwtl
xchg
pop
data16
movsl
inc
push
mov
sub
rcrb
rcrl
mov
sti
pop
je
pop
mov
movsl
repnz
dec
xchg
test
out
arpl
mov
jnp
mov
jge
mov
loope
into
fs
dec
jmp
clc
sub
loope
loopne
jmp
fsts
pop
and
sti
pop
je
fdivl
fwait
mov
sbb
cmp
and
jecxz
xor
mov
imul
popa
testb
lret
pop
pop
jge
ja
sbb
aam
nop
dec
inc
mov
into
jnp
mov
fnstenv
or
adc
popf
js
and
push
push
rolb
add
cltd
and
mov
mov
adc
fdivs
cli
pop
es
shr
addr16
cmovl
cmc
sbb
jb
fcomps
aas
inc
les
test
mov
add
mov
cwtl
shll
push
mov
loope
xlat
cmpsb
jmp
icebp
ljmp
xchg
push
xor
leave
jbe
lcall
out
int3
or
add
out
and
dec
fidivrl
mov
add
dec
loope
adc
push
jbe
shll
setp
mov
mov
xchg
ret
test
adc
lea
pop
inc
mov
push
mov
cmp
nop
cli
icebp
dec
popf
insb
arpl
xchg
test
sub
lcall
sub
insb
jg
sub
pusha
sub
in
stc
cmpsb
fmuls
push
fbstp
xor
add
or
out
shrb
es
adc
xor
pop
xchg
pushl
mov
pop
jo
lahf
aas
xor
and
sbb
xor
push
jg
jb
fdivrl
or
pop
push
push
mov
push
pop
pop
jae
mov
roll
cmpb
out
das
pop
inc
jecxz
addr16
outsb
add
enter
mov
xor
scas
lods
xor
jne
cmp
loopne
pop
inc
pop
cld
fisttps
jns
lods
or
out
xor
jnp
cmp
dec
loop
sub
stos
icebp
mov
insl
or
cmp
fisubs
add
pop
or
ret
mov
loopne
mov
or
or
mov
lret
sarl
mov
out
pop
call
xchg
mov
dec
add
mov
sbbb
xor
stos
insb
pop
mov
mov
sahf
xor
fcmove
push
mov
pop
add
clc
adc
mull
push
inc
xchg
imul
in
out
fiaddl
jp
xor
mov
nop
and
shlb
ret
subl
hlt
pusha
add
sti
and
jge
push
gs
adc
insb
je
jae
es
inc
xchg
mov
mov
ljmp
pop
jbe
add
and
inc
xchg
inc
push
add
leave
int
inc
cmc
repnz
pop
sbb
int3
mov
cmp
pusha
xor
xlat
pop
mov
inc
pop
fs
pop
mov
fmull
mov
gs
dec
stc
jl
mov
decb
jle
cld
lahf
lret
loop
sub
mov
imul
and
add
push
int
testb
cld
aam
outsl
xchg
iret
cli
xchg
aaa
xor
mov
lret
push
js
mov
jne
dec
mov
jp
adc
daa
cmp
subb
xchg
mov
mov
int
push
popf
lret
jp
scas
roll
dec
mov
sub
stos
fisttpl
xor
fs
out
dec
aad
mov
pop
cmp
pop
jl
mov
xor
pushf
outsb
adc
es
and
stos
rorb
daa
rcll
adc
push
cwtl
push
mov
mov
fidivrs
push
lret
add
push
push
sub
outsb
sub
adc
lods
and
sub
xchg
mov
mov
ret
sub
push
inc
fwait
in
push
mov
dec
data16
arpl
decl
and
xlat
push
inc
mov
testl
mov
mov
int
out
repnz
jecxz
iret
dec
jo
sbb
insb
or
cmp
les
cmp
lahf
jp
mov
jns
mov
xchg
lret
adc
fsubr
jo
mov
mov
test
mov
push
and
jg
sub
aaa
jle
in
push
popa
inc
mov
pop
fstl
arpl
roll
repz
mov
inc
xchg
lret
mov
or
fs
lahf
shrl
xchg
xor
fldl
daa
push
cmp
pop
aad
test
mov
das
pop
add
jbe
mov
aas
push
cmp
mov
dec
jmp
mov
sub
adc
iret
pop
fwait
jmp
hlt
addr16
jmp
adc
in
lds
rolb
dec
pop
cmp
pop
repz
xchg
jge
jge
push
cmp
and
mov
add
xor
inc
push
loopne
or
addr16
inc
cmpsl
or
dec
inc
xchg
dec
pusha
inc
data16
in
dec
inc
dec
jl
lret
pop
inc
or
gs
or
insl
add
mov
fsubrl
sub
cmp
and
enter
push
out
mov
icebp
lret
in
and
loop
or
fimuls
mov
movsb
les
sub
adc
cmp
pop
xor
cmp
pop
in
ss
mov
jecxz
pop
std
int
dec
rcll
cmp
loope
scas
push
pop
mov
jp
sub
mov
xchg
push
flds
dec
mov
dec
lds
inc
cmp
stos
push
or
outsl
dec
or
xchg
push
pop
and
clc
lret
rorb
sbb
test
out
mov
xor
pop
subb
cmp
cmovnp
mull
test
jle,pt
cld
out
into
mov
subl
jo
test
inc
push
cmp
sbb
dec
inc
cmp
mov
nop
mov
push
ss
push
push
call
inc
ljmp
out
mov
adc
ss
push
sarb
ret
sarl
mov
xchg
xchg
pop
mov
pop
ljmp
jecxz
cltd
test
inc
xor
shlb
sti
popa
mov
lret
arpl
or
xor
lock
and
fcomip
adc
xchg
in
add
mov
pop
mov
movsb
outsb
jne
cmpsl
int3
shrl
cmp
das
loope
add
fldl
call
popa
sbb
fistpll
das
dec
sbb
pushf
dec
enter
fidivs
sahf
das
add
mov
add
or
lods
ret
in
mov
pop
mov
sub
dec
or
pusha
pop
sbb
dec
push
or
pop
sbb
sahf
xchg
sbb
xchg
loopne
mov
push
lret
xchg
test
icebp
pop
gs
push
mov
dec
jne
jo
sub
hlt
jmp
xor
adc
shl
cmp
out
stos
sub
stc
js
movsb
add
jns
cmc
jle
mov
jle
adc
mov
movsb
out
sbb
xor
xchg
push
and
leave
lock
mov
sbbb
loopne
test
mov
lahf
outsb
dec
mov
fstps
fisubl
inc
push
pop
sti
cmpsb
aam
push
inc
inc
sub
xchg
icebp
aaa
incb
es
icebp
mov
fcoms
mov
mov
aam
js
mov
subb
jp
repz
test
dec
sub
int3
and
xchg
mov
shlb
pop
js
std
or
popf
push
fmul
aad
lods
jne
mov
mov
xchg
adc
push
cmp
xchg
push
lcall
aad
sbb
sbb
xchg
scas
outsl
gs
jae
lock
and
add
mov
movsl
outsl
inc
lahf
mov
les
stos
scas
flds
ret
in
lds
insl
fs
stos
or
lock
je
sbb
dec
lret
adc
fwait
inc
mov
flds
lds
jno
or
lods
jmp
ss
fcompl
je
dec
enter
cmc
pop
loope
ror
loop
mov
test
lds
loope
jb
adc
mov
xor
push
xor
aam
pop
enter
push
mov
push
push
pop
sarl
lock
mov
xchg
mov
aad
mov
jmp
adcb
xor
push
popa
pop
aam
inc
and
ljmp
push
mov
fcomps
lret
or
xchg
push
or
les
rolb
sahf
daa
inc
sbbb
gs
insl
rcrb
pop
lods
pop
ss
pop
in
arpl
or
data16
out
fldenv
adc
sub
addr16
inc
sti
and
lret
xor
xor
out
push
mov
or
jp
ds
lds
imul
push
jmp
ret
dec
subl
add
jmp
test
dec
imul
cld
jg
push
sti
psubw
rorl
test
cmp
and
xor
adc
xchg
inc
mov
add
cmpsb
jp
inc
movsb
push
rcrb
mov
pop
sub
xchg
cmc
clc
cmp
xchg
scas
add
jecxz
shll
fucomip
insb
or
dec
popa
call
cltd
sahf
out
xchg
cmp
inc
mov
packuswb
xchg
movsb
mov
mov
mov
movsbl
cmp
insb
addb
fdivl
loopne
inc
fwait
push
sub
loopne
jle
sbb
jbe
push
ss
mov
or
loop
popa
lret
outsl
rcr
cmp
pop
or
outsl
rcr
cmp
pop
or
loope
std
inc
inc
dec
and
lret
inc
loope
in
stos
into
jp
out
insb
mov
and
fisubs
je
pop
divb
mov
and
xchg
push
js
mov
and
jae
test
mov
icebp
int
jno
push
dec
stos
xchg
mov
cmp
ds
adc
jle
rol
push
movsl
pusha
inc
bound
popf
cmp
xchg
mov
xchg
push
mov
jp
dec
out
and
xchg
cmpb
adc
and
mov
fstps
mov
mov
stos
mov
push
mov
xor
jp
push
mov
pop
push
pop
pop
add
mov
in
mov
add
outsb
add
es
pop
mov
inc
mov
push
cmp
mov
push
push
xchg
mov
push
pop
jge
cmp
int3
cmp
dec
sub
aad
repz
inc
sbb
movsb
dec
push
mov
mov
cwtl
cmc
les
test
cmp
mov
push
leave
rcrb
xchg
dec
out
sarb
lahf
cld
mov
push
mov
dec
mov
out
mov
js
or
add
or
cmp
add
testb
stos
sbb
mov
call
push
leave
add
pop
rep
fwait
pop
mov
addb
dec
xchg
or
push
mov
das
and
inc
add
xor
dec
aaa
add
mov
imul
scas
loop
dec
mov
lret
xor
add
push
dec
movsl
push
ljmp
nop
lret
out
mov
xor
mov
and
dec
mov
inc
mov
cmp
into
jecxz
hlt
addb
xor
dec
cmc
repnz
mov
or
je
xchg
or
push
test
fisubs
and
jno
push
or
sub
mov
mul
dec
scas
pop
aaa
and
sarl
dec
lods
add
scas
into
xor
add
cli
mov
loope
ds
mov
test
mov
add
push
add
sbb
add
je
mov
in
xor
aam
mov
cmp
jle
sti
test
adc
mov
mov
add
gs
stc
test
fs
push
lret
pop
xor
mov
jbe
adc
stos
negb
adc
cmp
jmp
pop
dec
mov
jno
ret
nop
ss
testb
jp
rcrl
cli
mov
jl
in
repz
shl
insl
pop
scas
inc
sbb
test
cld
inc
and
sahf
iret
idivb
and
sub
mov
push
adc
cmc
shl
jns
arpl
gs
lods
mov
clc
out
fisubrl
sub
or
push
push
clc
dec
cmpsl
jns
pop
ret
xor
add
stos
add
mov
pop
jmp
pop
lret
mov
push
sub
imul
inc
add
jb,pt
orl
les
daa
lea
inc
sar
daa
lea
inc
sar
daa
lea
inc
sar
daa
lea
inc
sar
daa
lea
inc
sar
daa
lea
inc
sar
daa
lea
inc
sar
daa
lea
inc
sar
daa
pop
pop
push
xchg
cmc
mov
push
jb
in
mov
insb
cmp
mov
mov
inc
incl
sarl
sbb
das
pushf
rolb
cmpsb
mov
das
cmpsl
and
aad
xchg
cmp
jbe
idivl
mov
and
mov
incb
pushf
ficoml
and
mov
mov
adc
dec
filds
and
lret
xchg
inc
pop
jb
sbb
movsl
mov
pop
and
mov
cmp
test
rcrb
jmp
jbe
inc
or
mov
jge
mov
imul
push
das
pop
jne
repnz
scas
jmp
sbb
stos
movsb
arpl
into
ret
and
fwait
mov
fnstsw
jne
rcll
xchg
xchg
ret
sub
mov
sbb
dec
mov
rorb
mov
jb
repnz
adc
adc
add
les
xor
das
cmpsb
adc
das
adc
and
push
insl
sub
sbb
dec
cmp
adc
jle
adc
sub
aaa
pop
pop
and
xchg
xchg
push
xchg
sbb
xchg
adc
inc
cmp
cmp
stos
mov
push
mov
xor
aaa
sub
xchg
xchg
lea
and
jnp
gs
sbb
jno
insb
jbe
stos
in
sbb
cwtl
mov
movl
lds
lea
arpl
loop
xchg
repz
mov
test
push
addr16
pop
nop
mov
test
aam
je
pop
jp
scas
push
lock
shll
xor
lret
push
sub
das
pop
je
cmpl
ret
mov
sub
inc
mov
inc
mov
mov
sub
push
icebp
and
movsb
dec
cmp
repnz
dec
in
lods
cli
aam
pop
aam
nop
push
xchg
aas
pop
fmuls
pop
or
stos
das
lods
icebp
jp
push
rorb
je
sbb
in
rcrb
das
mov
out
pop
xchg
lahf
sbb
pop
fldcw
add
jno
mov
push
stos
jne
mov
jns
test
orl
int3
not
add
movsl
dec
dec
out
jl
enter
loopne
cmp
xor
mov
leave
aam
ror
sbb
add
pop
jno
out
ret
mov
mov
mov
pop
xchg
jl
scas
or
and
mov
mov
xchg
sub
add
adc
jl
jno
inc
stos
adc
int3
mov
pop
mov
jae
negl
movsl
inc
lods
or
xor
jmp
cwtl
dec
test
shrl
ret
stos
xor
add
xchg
inc
movsb
jge
jnp
enter
cmp
rol
sub
loop
xchg
xchg
or
mov
dec
xchg
stos
int3
add
pop
movsl
cwtl
or
or
mov
mov
jp
rclb
jae
sub
jnp
lahf
pop
gs
ret
xchg
cli
dec
and
insl
or
roll
popa
gs
fcmovu
pop
mov
jmp
add
dec
fnstcw
jmp
adc
adc
rcrl
or
jns
pand
repnz
incb
fimuls
in
mov
and
subb
out
sbb
pandn
fistps
push
stos
mov
and
popf
sbb
jg
ss
lret
js
cmp
push
push
or
mov
mov
test
add
sub
divb
mov
les
jo
add
or
xchg
stc
inc
jg
push
pop
inc
cwtl
ss
stos
pop
fidivl
in
sbb
dec
mov
hlt
fiaddl
adcl
mov
out
shrb
icebp
dec
ds
ret
in
lods
xlat
jle
adc
mov
push
jecxz
mov
mov
jne
sbb
xor
add
and
aaa
lea
xchg
jnp
add
cmp
push
cli
ffreep
lret
pop
lods
lret
add
outsb
jg
jmp
inc
xchg
mov
lds
or
sbb
sbb
sub
jne
fadds
add
lret
jo
push
fidivrs
jo
clc
mov
negb
xchg
in
xor
push
lret
inc
insl
shlb
sub
inc
mov
outsb
mov
into
loopne
loopne
add
lea
testl
sbb
or
jle
mov
jo
pop
insl
les
es
lahf
jl
sub
and
lcall
mov
arpl
cmp
popf
mov
mov
mov
push
add
insl
dec
fisttps
pusha
pop
push
outsb
scas
ja
sub
cmp
xlat
lea
adc
in
cmp
out
lds
lds
aad
insl
int
sub
dec
push
mov
fimuls
sbbb
and
mul
lea
cmpsb
out
xchg
add
sbbl
std
cmpsl
jmp
xchg
jb
fs
arpl
pusha
mov
pusha
rolb
or
xorl
or
sahf
aaa
into
rol
adc
sub
int3
mov
pop
out
pop
fwait
mov
test
add
push
inc
lds
rorb
adc
inc
xor
hlt
les
cmc
sub
jb
adc
xchg
dec
cmc
mov
adc
call
imul
lea
cli
sub
pop
popf
xchg
lret
in
pop
adcl
hlt
jns
scas
push
lds
jno
sahf
mov
and
mov
pop
in
sahf
fidivrs
fadds
xchg
xor
clc
inc
or
cli
sub
push
sbb
cmp
fists
in
pop
adc
cmp
or
jns
jns
setp
popf
stc
out
sti
cltd
cmp
popf
and
inc
mov
call
xchg
je
sahf
bnd
pop
xchg
xchg
mov
and
mov
mov
fnstsw
jecxz
out
and
dec
roll
fistps
and
sbb
or
iret
lock
das
lret
xchg
and
dec
add
add
std
les
mov
mov
jg
xor
mov
icebp
fwait
inc
mov
and
in
mov
sub
das
insb
call
repnz
pop
scas
scas
lret
out
or
or
mov
xchg
sbb
push
mov
xor
sub
lea
xor
pop
adc
test
repnz
shll
hlt
mov
sar
out
sbb
rcll
xlat
pop
cmp
stos
pop
push
adc
cmp
xor
lret
lods
push
dec
ret
push
jl
xchg
mov
push
scas
xchg
stc
sub
pop
cwtl
mov
int3
int3
data16
aam
cltd
stos
cmp
dec
push
lds
push
mov
or
in
mov
jnp
or
or
jp
popa
xchg
mov
add
std
int
push
inc
sbb
dec
and
fisubrs
xchg
inc
dec
out
arpl
mov
negl
andb
into
xchg
inc
or
pop
lock
rclb
arpl
mov
xor
mov
mov
mov
xor
push
popa
ja
cmp
jbe
leave
lret
lea
jmp
adc
sub
ljmp
hlt
cmp
or
pop
sbb
inc
pop
add
stc
adc
dec
shlb
xchg
pop
insl
cs
addb
cmp
mov
je
ret
and
dec
lock
add
leave
xchg
pop
xor
ljmp
nop
mov
loope
mov
test
jno
mov
jo
imul
movsl
mov
ss
movsb
das
pop
loop
insl
dec
jp
dec
idivl
mov
sarl
je
xor
neg
sub
xchg
jne
push
cmp
cwtl
jae
adc
rol
test
mov
mov
nop
mov
push
mov
neg
and
test
lcall
out
mov
jmp
pop
and
push
sbb
scas
or
ret
or
or
and
sarb
adcb
sbb
mov
fstl
adcl
leave
pmulhw
mov
in
in
inc
pop
sbb
outsb
cld
lods
xchg
int
fwait
movsl
pop
loop
xchg
fsts
mov
and
mov
pop
mov
cmp
push
push
add
inc
jne
fidivrs
out
sbb
nop
push
sub
movsl
xchg
lahf
mov
lock
lock
aas
xor
or
dec
dec
in
jo
cs
insb
mov
outsb
popf
pop
xchg
int
lcall
jg
shlb
int3
clc
fstpl
mov
cltd
les
jmp
cmpsl
iret
iret
call
mov
lret
lds
and
stos
dec
and
sub
cmp
mov
repz
xchg
lods
mov
rcrl
dec
movsl
notb
cmp
dec
sbb
push
and
add
sub
and
popf
in
xor
rorb
push
scas
inc
and
imul
imul
or
xchg
add
add
mov
bound
add
insl
decl
pop
sti
stc
mov
jp
add
repz
mov
jb
mov
jnp
and
push
push
jmp
xchg
das
stc
ss
icebp
and
mov
mov
insb
push
mov
in
repz
dec
lea
mov
adc
and
sub
push
xor
out
mov
nop
or
lods
adc
mov
mov
cmpsl
pop
sbb
xor
xor
icebp
mov
and
hlt
xor
jp
cmp
addr16
jnp
or
es
push
cltd
repnz
xor
xchg
push
adc
divb
rorl
mov
hlt
xor
orl
push
pop
cli
pusha
and
loope
aad
push
nop
sbb
jle,pn
pushl
sub
xchg
mov
mov
adc
hlt
add
adcl
xor
push
adc
pushf
xchg
mov
mov
xchg
sbb
dec
pop
in
fstl
lea
mov
and
jg
cmpsl
mov
push
and
loopne
mov
aad
mov
mov
sbb
aas
push
cmpsb
iret
mov
lahf
push
leave
imull
lock
push
inc
cld
jecxz
push
fsubl
adc
cs
mov
jmp
leave
xchg
dec
jns
sti
mov
sahf
insl
sbb
xchg
jae
xchg
es
cmp
dec
repnz
sti
loope
adc
and
mov
mov
in
call
push
mov
lea
imulb
out
push
nop
push
rcll
dec
mov
imulb
jnp
rcrl
push
loopne
scas
jmp
lea
orb
cld
mov
inc
jae
scas
std
mov
mov
jne
std
add
push
xlat
fwait
or
fists
data16
and
fs
xchg
inc
popa
cmp
test
ljmp
test
loopne
cmp
mov
jg
mov
cmpb
pushf
or
loope
and
dec
nop
add
xchg
pop
cltd
xchg
add
sub
mov
inc
sbb
idivb
lret
cmc
sub
sbb
dec
out
clc
pushf
js
and
mov
fninit
adc
push
add
pop
sub
das
out
mov
adcl
push
lahf
mov
sub
inc
icebp
or
out
pop
or
in
stos
push
pop
mov
cmp
nop
loopne
adc
les
inc
in
jno
int3
in
sbb
sub
pusha
jae
repz
pop
dec
xor
mov
aam
pop
ljmp
and
std
xchg
int3
cltd
adc
xor
lea
push
jo
test
xchg
imul
stos
push
mov
sbb
in
lahf
mov
fwait
sbb
pushf
popa
fs
push
lret
in
test
cmp
jbe
sub
xor
xchg
dec
filds
push
movsb
pop
mov
imul
cld
stos
dec
cmp
daa
rolb
push
mov
in
cltd
daa
pop
inc
sbb
rcll
and
in
pop
jle
stos
xlat
inc
adc
push
pop
dec
jno
adc
sti
cli
test
mov
std
and
aas
ljmp
or
xor
test
add
inc
es
push
movsb
push
cmp
lods
clc
xchg
std
xchg
and
fs
scas
scas
andl
xchg
or
mov
cmp
mov
into
add
stos
xor
test
std
adc
ret
and
dec
cmp
insl
pop
imulb
add
sti
cld
xchg
scas
loope
jle
in
jmp
mov
or
stos
add
mov
mov
dec
cmp
push
mov
or
sub
or
sbb
mov
cmpsl
push
aam
mov
xlat
mov
loope,pn
cwtl
lret
pop
loop
push
pop
mov
loopne
iret
or
cld
testb
mov
xchg
and
add
mov
fistpl
popa
shl
dec
push
pop
loopne
enter
sub
mov
stos
sbb
mov
je
push
aas
push
xor
mov
mov
push
mov
add
insb
mov
sub
hlt
jecxz
ret
fs
push
dec
ret
dec
lahf
cmp
outsl
cmp
lods
ficompl
or
push
xor
xchg
cli
cmc
xchg
aas
andb
or
xchg
push
negl
inc
lret
adc
add
insl
dec
adc
insb
xor
mov
pop
jecxz
call
scas
push
inc
clc
inc
fstpt
cmp
aaa
mov
mov
andb
xchg
icebp
repz
mov
ljmp
icebp
cwtl
repnz
in
jns
xchg
cli
sub
ret
mov
or
dec
add
mov
add
jge
jmp
movsl
subps
mov
inc
inc
push
sbb
mov
adc
mov
lock
pop
pop
imul
adc
lahf
js
push
fiadds
mov
inc
pop
jne
movsb
xchg
rcrb
lahf
add
jl,pn
outsl
inc
cmpsl
notb
push
aas
adc
pop
test
loopne
imul
push
lock
pop
jb
lods
adc
sbb
pop
or
mov
sub
sub
mov
lea
je
fdivr
xor
insb
push
shlb
mov
leave
shl
jmp
js
inc
int3
push
xchg
shlb
sub
sbb
enter
mov
cs
mov
out
pop
mov
inc
loop
or
aaa
andl
mov
push
pop
pop
jmp
and
inc
clc
mov
xchg
or
icebp
rcrb
xchg
xor
adc
scas
imul
dec
shrb
insl
int
add
shlb
mov
lret
and
sbb
hlt
or
xchg
dec
xchg
cmpsb
pop
or
jae
js
or
mov
test
insl
jae
pop
hlt
jmp
mov
in
push
add
cmpb
lret
shlb
rclb
aas
fidivl
iret
push
dec
mov
or
sti
xchg
sub
sbb
enter
fldl
fwait
add
lahf
shll
jne
pop
xor
or
data16
inc
inc
ljmp
mov
test
shrl
lret
and
sub
cmp
out
test
xchg
shll
cmp
rorl
and
lock
sbbl
clc
ja
dec
pop
mov
lods
fldenv
mov
pop
mov
sbb
es
cmp
lea
inc
pop
aad
rcll
pusha
scas
sbb
inc
and
int3
dec
rol
pop
popa
bound
enter
insb
scas
rclb
push
cmp
xor
rorl
lahf
test
lods
popf
mov
add
aaa
js
add
or
sub
mov
push
jnp
lret
xor
insb
adc
inc
and
or
aam
pop
inc
mov
in
sbb
xchg
repnz
cld
push
inc
adc
dec
mov
aaa
movsb
adc
out
mov
sti
mov
pusha
adc
mov
test
sbb
cmc
xchg
xchg
imul
push
jmp
and
outsb
xor
xor
pop
push
jae
je
and
push
mov
inc
inc
sub
pop
cmc
mov
repnz
jne
ret
arpl
divl
out
aam
pop
loope
inc
mov
fs
pop
mov
mov
movb
daa
mov
lods
fcoml
xchg
aad
sub
jbe
leave
jae
mov
lds
pop
fbstp
sahf
jno
ret
in
lds
jmp
lea
mov
or
fidivrl
pop
pop
shrl
dec
mov
push
push
call
push
push
mov
movsl
cmp
push
push
jne
jge
pop
mov
in
xor
inc
sbb
mulb
dec
ljmp
pop
push
xor
push
xor
fmull
jle
inc
and
orb
push
into
and
inc
pop
mov
mov
movsb
push
sub
leave
out
test
jae
mov
fisubrl
movsb
fdivs
imul
lods
mov
das
or
push
adc
fwait
mov
jne
into
into
in
pop
cmp
xchg
cmpsb
jns
addl
add
jmp
sbb
push
subl
mov
add
dec
popa
push
pusha
int3
mov
sub
movsb
push
loope
lock
fmul
lret
inc
push
and
lods
in
mov
or
imul
loopne
jmp
mov
sahf
xchg
nop
arpl
test
jnp
fwait
dec
inc
imull
cmpsb
iret
sub
push
mov
jbe
pop
bound
mov
test
cmp
cmp
into
mov
sbb
fsubrl
push
xchg
xor
pop
pop
movsb
int
jno
fscale
xchg
ja
test
pop
sub
push
xor
xor
or
cli
int
push
pop
fstpl
loope
iret
fsubrl
and
mov
aas
sbb
jo
incl
add
add
xchg
pop
inc
add
pop
adc
fsubrs
push
cmc
popf
mov
mov
mov
sbb
adcb
je
lods
cmp
pop
in
xor
imul
jp
fs
dec
sbb
or
jg
dec
or
mov
sub
mov
mov
stos
int3
push
xchg
in
leave
jmp
int3
mov
xor
hlt
data16
pop
addl
addb
mov
push
push
fsubp
jecxz
mov
adc
jno
movsb
out
data16
stc
loopne
lret
into
movsb
lods
fwait
xchg
add
in
mov
dec
orb
jo
daa
mull
pop
insb
inc
cmpsl
ljmp
mov
into
rcl
inc
imul
dec
in
xchg
fwait
data16
or
in
mov
pop
dec
dec
cmp
aam
lret
mov
fwait
pop
incb
inc
in
pop
out
mov
in
add
jecxz
adc
cmp
lods
mov
and
adc
add
cmp
stos
test
jp
not
push
jb
mov
add
in
insl
xchg
or
addr16
and
mov
sbb
les
dec
push
fistpll
sbb
adc
cmp
lea
mov
lods
mov
adc
fs
leave
insl
fwait
ss
xchg
sub
xchg
add
xlat
xchg
cmc
dec
or
sarb
pop
aad
cltd
ss
sub
inc
or
pop
or
ja
add
movsb
jg
pop
scas
pop
or
push
xor
test
pushf
pusha
dec
mov
das
xor
cmpsl
mov
fiaddl
or
stos
add
and
sub
rolb
jb
adc
xchg
aad
pop
into
sbb
push
dec
flds
mov
mov
or
add
cltd
in
lods
sbb
mov
icebp
fstpl
adcb
inc
loop
xlat
dec
incb
sub
jl
jmp
fcomp
daa
sti
xchg
shll
jge
or
imulb
push
in
mov
clc
dec
push
or
pushf
jmp
adc
ds
scas
stc
outsb
adc
jae
mov
mov
js
das
and
enter
jle
add
adc
and
sti
fidivs
sbb
cmp
jbe
cmp
mov
lock
mov
inc
je
dec
cmp
sub
int3
adc
leave
push
pop
jl
add
sbb
mov
dec
lock
xor
jo
cld
mov
dec
aad
call
xor
xchg
xchg
push
daa
dec
out
xchg
xlat
lock
scas
nop
add
pop
aam
subl
add
mov
gs
inc
fdivp
mov
aaa
outsb
inc
mov
outsb
in
shrl
ret
int
sub
out
adc
call
adc
pop
pop
jbe
ret
mov
pop
jns
sbb
out
cmpb
or
lahf
jl
cmp
cmp
dec
fiadds
mov
in
mov
mov
mov
push
mov
cmpsb
cmp
xor
in
jg
mov
stc
test
dec
xor
cltd
outsl
push
sbb
in
mov
iret
mov
hlt
lock
push
cmp
xor
add
test
adc
neg
fs
clc
xchg
lds
jne
pop
lods
push
inc
xchg
dec
add
pusha
and
test
rorb
into
test
dec
pop
imul
std
cmp
rolb
push
faddl
int
insl
sub
or
sub
stos
test
lods
jge
xor
mov
mov
insb
inc
xchg
pop
icebp
outsb
repz
popa
xor
mov
aas
addr16
dec
cli
roll
mov
xchg
and
in
jo
jg
pushf
adc
lods
pop
sahf
sub
dec
jne
xchg
xor
mov
lcall
add
test
outsl
adc
adc
mov
xchg
and
setae
test
fisttpl
and
sbb
sbb
pop
iret
mov
xchg
jns
jno
pop
adc
in
comiss
sbb
repnz
jge
adc
adc
std
mov
xchg
frstor
mov
adc
fnsave
jb
dec
jne
adc
jmp
jne
mov
in
out
aas
push
popa
daa
inc
loop
testb
xchg
pop
test
add
mov
mov
negl
inc
ljmp
pop
xchg
movb
pop
fistl
mov
xor
shl
test
rcrl
sti
or
mov
or
loop
loopne
jne
pop
push
push
int
xchg
andb
inc
int
adcl
es
mov
bound
in
hlt
push
in
jae
jb
test
xchg
mov
nop
dec
cwtl
mov
cmp
dec
rcr
addr16
dec
imul
lret
or
nop
pusha
push
sbb
testb
int3
pop
mov
add
cli
cmp
inc
arpl
jle
subl
dec
inc
xor
pop
push
push
lock
push
mov
mov
sub
daa
adc
mov
push
dec
mov
ds
clc
inc
aad
pusha
ud2
mov
test
push
ss
mov
push
test
pop
rclb
in
loope
cld
dec
add
dec
jmp
dec
test
adc
out
aam
cmc
mov
test
imul
jae
adc
aas
shl
mov
stos
and
adc
or
js
push
subb
mov
movsl
mov
fldt
je
rcrb
scas
add
leave
dec
mul
add
inc
and
dec
xor
and
mov
inc
rorb
js
subb
outsb
xor
inc
loopne
pop
stos
fsts
shll
shl
xor
jns
xchg
dec
mulb
aad
call
ss
cs
adc
sbb
pop
pop
imul
push
bound
push
add
insb
mov
mov
in
mov
mov
or
inc
std
mov
shlb
push
cmp
arpl
ja
mov
movsl
mov
incl
pop
mov
ljmp
insl
scas
sbb
jnp
sub
cmp
mov
dec
or
mov
add
push
mov
push
add
scas
loop
popf
fisubs
push
add
xchg
addb
repnz
cmpsb
lea
mov
sti
inc
mov
xchg
leave
lds
pop
hlt
mov
pop
sbb
popf
ds
cmpsb
mov
push
push
ja
jge
fwait
inc
push
dec
outsb
add
add
fdivrs
or
outsb
adc
inc
cmp
fisubrl
add
pop
shl
pop
xor
cs
sahf
push
inc
sub
push
push
stos
inc
cld
inc
pusha
cmc
sbb
ja
cmp
push
jb,pn
gs
mov
and
adc
repnz
or
or
dec
jnp
lcall
jmp
rcll
shrl
loop
jg
ljmp
xchg
xchg
mov
or
pop
dec
or
add
mov
cmp
leave
sbb
data16
test
sbb
lret
in
lret
shlb
gs
stos
jne
xor
icebp
mov
add
cmc
shrl
lea
or
adc
sub
lds
inc
cltd
scas
mov
lcall
push
cmp
push
les
subb
insl
push
aas
pop
dec
sti
jb
jb
add
iret
out
jno
jle
xchg
dec
clc
adc
push
sub
movsb
daa
dec
push
dec
test
clc
fwait
jns
in
jmp
test
test
pop
cmpsb
mov
aam
push
xchg
dec
add
mov
inc
xchg
lods
out
cmp
jle
mov
pop
sarb
mov
sbb
adc
xor
adc
xor
inc
mov
pusha
and
mov
stc
dec
scas
sbb
ja
add
pop
dec
inc
inc
shlb
ljmp
adc
lret
imul
jae
push
out
sub
and
sar
test
jmp
out
repnz
mov
jp
ror
leave
add
cld
pop
gs
push
cs
mov
scas
stc
int
std
jno
lret
out
jl
imul
mov
test
in
enter
in
cmc
test
data16
test
or
cmp
mov
mov
cmp
jo
cmc
bound
faddp
call
dec
imul
aas
or
int
add
insb
jo
sbb
int3
aam
lahf
dec
lea
xor
add
movsb
mov
xchg
aam
add
mov
xchg
dec
js
adc
addr16
jmp
ja
loop
leave
jg
out
scas
jecxz
faddl
cli
rorl
sub
inc
adc
pop
add
fadd
into
movsb
mov
inc
jecxz
xor
cmc
les
lds
inc
push
inc
jg
cmp
jbe
xlat
pushf
bnd
jnp
sbb
cli
jne
mov
dec
inc
cmpb
cwtl
sbbb
cwtl
mov
or
xchg
xor
aam
aaa
dec
mov
faddl
cmp
jmp
enter
xchg
and
or
sti
cmpsb
inc
les
ret
icebp
pop
cmp
mov
jl
mov
addr16
adc
aas
loop
push
cmp
pop
sub
inc
cmp
dec
or
or
xor
pop
pushf
pop
inc
mov
outsl
cmpsb
xchg
mov
add
loop
sbbl
mov
sbb
test
adc
pop
lea
dec
and
pop
es
fs
sbb
jno
jmp
sbb
adc
iret
repnz
in
in
notb
inc
cwtl
lock
js
cmp
out
inc
hlt
les
ret
outsl
stc
pushf
and
pop
aad
popa
imul
inc
and
das
inc
xchg
jo
shlb
xchg
mov
imul
std
cli
jne
xlat
jl
pop
fstpt
dec
jge
inc
loope
dec
dec
lods
rcll
ds
sarl
aas
and
jle
adc
jno
jp
into
mov
mov
xor
imull
mov
xor
inc
inc
push
repz
push
jmp
sub
arpl
out
or
add
shlb
xor
or
add
cmp
mov
xchg
mov
dec
mov
or
sub
out
mov
test
addr16
mov
ljmp
push
cmovp
es
cltd
adc
sbb
pop
add
sahf
cmp
ja
cmp
xor
jnp
dec
mov
adc
add
ss
pop
pusha
add
add
sahf
mov
mulb
jmp
cs
int
add
adc
subb
fcmovnbe
cmp
xchg
lods
arpl
lret
out
xor
repnz
sbb
jecxz
shll
fldenv
cmp
mov
and
je
add
add
test
sbb
mov
push
cld
sub
push
popf
es
cltd
pop
jb
xchg
data16
add
repz
cmp
fildll
jl
mov
test
cmp
sbb
ret
out
pushf
cmp
aam
je
ss
push
add
xor
xor
fisttpll
aam
push
jno
push
cmp
dec
push
xlat
lock
jge
mov
pop
test
insb
in
sahf
ret
pop
jbe
shr
aam
js
movsb
or
dec
fwait
popa
mov
jmp
or
mov
into
ret
stc
cs
scas
shr
mov
sbb
add
mov
and
jmp
jmp
loopne
in
add
cvtpi2ps
leave
push
inc
test
jl
add
iret
dec
fs
das
and
mov
or
push
pop
test
pop
cmp
lret
inc
sub
fildl
push
push
ja
ret
and
adc
xchg
and
fsubrp
sub
sbb
cmp
xchg
mov
xchg
cmovg
mov
std
dec
or
lea
sbb
fisttps
and
jno
pop
mov
data16
push
aam
mov
dec
sbb
cs
fsubrs
fwait
or
movsb
xchg
lahf
mov
push
push
maxps
pop
dec
pop
enter
gs
enter
inc
inc
or
sbb
sub
push
xchg
mov
inc
jge
clc
in
push
in
sub
xchg
daa
jne
subb
jmp
movb
push
pop
jp
scas
mov
or
inc
pop
xor
cmp
mov
daa
dec
or
and
lods
mov
outsl
dec
stos
dec
cmp
xchg
cmp
dec
push
fbld
pop
sub
mov
outsl
out
pop
cmc
mov
mov
test
sub
bound
js
xchg
jbe
ds
ljmp
mov
out
push
xchg
ljmp
lcall
add
mov
lahf
arpl
push
sbb
aam
pop
mov
sub
loope
sbb
or
inc
xchg
adc
pop
fmull
cmp
sbb
mov
loop
out
insl
adc
jle
xchg
xor
enter
sbbb
aaa
push
mov
inc
fs
fwait
hlt
xor
xlat
movsl
mov
inc
fdivrl
inc
out
ror
and
dec
adc
lock
mov
push
cltd
faddl
lds
mov
fdivr
pop
rclb
iret
pushf
cmpl
adc
xor
xchg
sub
scas
mov
xchg
push
pop
daa
cmpb
in
xlat
sti
push
inc
inc
loope
mov
jnp
cmp
xchg
aaa
clc
daa
lcall
shrl
lcall
cltd
mov
mov
ljmp
imul
or
das
xor
lret
jecxz
out
jl
insl
push
lahf
cmp
lods
clc
outsl
jo
sbb
rcll
in
mov
sbb
lds
lcall
mov
je
cmp
rorl
pop
mov
ljmp
push
imull
jnp
xchg
idiv
xchg
ds
mov
xor
jmp
xchg
mov
in
inc
sbb
adc
push
push
rclb
testb
mov
dec
inc
adc
push
pop
dec
movsl
mov
xchg
test
jbe
jg
dec
sub
push
stos
inc
lret
dec
stos
xor
and
out
imul
imul
sbb
cmp
cmp
test
enter
adc
call
push
cmpsl
and
add
mov
mov
lods
adc
adc
fidivrs
xchg
cmp
mov
cs
cmp
mov
call
and
rcll
add
and
es
mov
sub
adc
jae
sub
sbb
xlat
outsl
orb
clc
int
mov
lahf
cmp
sar
ret
mov
mov
jns
adc
ret
mov
push
cmc
add
or
jbe
and
jle
xchg
jge
push
jg
in
arpl
push
sbb
sbb
pusha
jb
add
in
rcr
lods
mov
shl
shrl
and
test
dec
test
jecxz
push
push
insb
mov
scas
pop
inc
fistpl
mov
loope
sub
cmp
cmp
ret
jo
nop
jne
mov
cld
adc
xor
adc
adc
xchg
jb
or
add
mov
and
pop
and
ret
push
out
incb
dec
into
pop
mov
fbld
test
or
lods
loop
xor
outsl
add
rcll
inc
bnd
cmpl
add
dec
sti
or
cmpsb
sub
lcall
adc
or
and
andb
test
inc
stos
movsb
jg
push
into
jns
sbb
jb
cmp
xor
cli
cs
in
outsb
push
inc
cli
and
jg
leave
shrb
mov
sub
jne
sub
adc
or
mov
cmp
add
push
setb
pop
push
leave
pushf
sbb
cmpsl
dec
mov
inc
lea
sarl
add
cmpsl
pop
lea
mov
xor
dec
lret
sub
push
dec
mov
add
stc
xchg
lods
ja
push
jae
adc
pop
push
jg
fwait
sbb
xor
or
dec
outsb
fbld
sub
scas
add
in
xor
mov
and
push
bound
in
push
ja
cmpl
pop
push
xchg
inc
jecxz
std
cmpsb
ret
lods
fs
daa
dec
sub
xor
insb
addr16
inc
adc
inc
xchg
cli
in
and
dec
int
es
sbb
or
cmp
sbb
or
sbb
jb
pop
lahf
nop
cmp
pop
mov
cmp
shrl
rorb
pop
ds
mov
aaa
push
mov
jno
cmpsb
test
mov
pop
pop
inc
out
ja
das
mov
stos
icebp
enter
push
imul
subb
xor
cmp
psllq
test
scas
jnp
mov
mov
nopl
inc
cltd
xorl
aas
dec
fistl
sbb
outsl
mov
ss
lods
inc
mov
test
add
mov
push
hlt
ss
or
xor
repnz
iret
xlat
js
inc
lcall
insl
pop
pop
outsl
push
dec
sbb
xchg
mov
cmp
mov
cld
loop
pop
mov
imul
out
movsl
fs
fildl
mov
cmp
jge
cli
aaa
or
and
adc
int
shlb
fcmovne
xchg
add
aas
dec
sarl
inc
je
test
mov
mov
dec
jmp
pop
adc
mov
inc
popf
push
lds
jno
sbb
jno
cmp
and
push
ljmp
idivb
outsl
icebp
das
adc
fcoms
sti
icebp
cmp
das
dec
pop
sub
sbb
sub
and
or
lods
sub
pandn
jb
dec
data16
pop
sahf
les
or
lcall
enter
incl
adc
or
inc
rcll
cmpsl
xor
pop
aam
jge
jp
mov
in
sbb
ljmp
mov
and
mov
mov
xor
shlb
mov
xor
jle
xor
cwtl
pop
dec
dec
addr16
mov
imul
test
pop
mov
and
fxtract
lock
lods
popf
inc
cmp
sub
ljmp
pop
adc
xchg
xchg
push
push
sbb
push
test
sub
test
out
ja
imulb
mov
hlt
dec
lret
cmp
arpl
lcall
ret
add
push
lds
inc
adc
adc
out
or
fldl
scas
adc
sbb
jmp
in
sub
or
cmpb
popa
cmp
adc
pop
fiadds
lret
loope
cmp
jecxz
outsb
cld
xchg
adc
push
push
or
mov
mull
dec
lock
movsb
orl
in
xchg
sti
movl
xlat
data16
data16
bound
pop
cmp
jp
into
cltd
mov
xchg
sub
jecxz
mov
dec
movsl
sahf
dec
and
adc
cmpsl
bts
jle
cmc
pusha
push
xor
cmp
push
jb
jle
in
out
addr16
in
jle
mov
cmp
lods
push
iret
cwtl
cld
hlt
lcall
jmp
fsubp
mov
sub
fimull
jp
mov
mov
mov
pusha
nop
or
push
int
movsb
inc
lea
xor
xor
sbb
jb
mov
jb
insl
out
aad
xchg
movsb
sub
cmc
mulb
inc
pusha
sbb
outsb
xor
mov
mov
jp
inc
add
adc
inc
imul
lahf
mov
stos
aad
jns
dec
push
lret
ja
xlat
push
sub
leave
int3
outsl
stos
jle
add
adc
rcrl
loopne
nop
into
in
fmulp
mov
outsl
rclb
nop
enter
popl
cmp
scas
pop
lret
or
fsts
inc
pop
push
mov
adc
ljmp
fstpl
aam
pop
jo
xchg
xchg
rorb
jne
hlt
ds
mov
insl
sti
je
nop
dec
call
xlat
mov
jl
unpcklps
push
ret
xchg
jp
mov
arpl
in
std
mov
lods
outsl
sub
addr16
cmpl
aad
out
mov
push
pusha
jle
fsubrs
in
push
xor
les
mov
movsb
negb
mov
push
lret
out
test
not
mov
pushf
jl
mov
pop
mov
test
inc
sbb
pop
sbb
jmp
inc
ret
mov
outsb
je
xor
negl
adc
pop
int
push
out
and
inc
mov
and
test
fisttpll
sub
es
inc
dec
jns
cmp
inc
in
test
outsb
das
sahf
sub
jnp
sbb
push
test
push
shlb
leave
pop
popa
cmp
and
xor
push
loop
mov
pop
fnstcw
pop
js
sbb
mov
pop
push
sti
fstl
mov
mulb
mov
inc
call
movd
aad
mov
movsb
xor
sub
pop
shll
test
and
cmp
mov
xchg
push
loop
pop
xchg
jae
inc
pop
pusha
clc
ret
jge
imul
scas
adc
adc
mov
mov
imul
jb
hlt
inc
pop
mov
pop
repz
jnp
cmp
jo
jge
stos
nop
inc
xlat
sub
fcmovnbe
xor
mov
cli
jp
loop
icebp
loopne
clc
add
aas
cmp
imul
out
dec
loopne
lods
iret
sub
pop
js
scas
adc
mov
xchg
into
jnp
pop
addl
rcr
fmull
or
mov
mov
xchg
jge
mov
push
movsb
adc
dec
int3
push
stos
fdivrl
jecxz
xchg
cmp
rcr
cmpsb
in
pop
out
cwtl
mov
insb
hlt
push
popa
filds
sbb
add
push
repz
ja
ficoms
mov
lods
les
adc
cmp
shrl
mov
adc
out
inc
fcoml
repnz
and
mov
dec
xlat
imul
cmp
xor
push
sub
xor
pop
out
cmpsb
imul
xor
dec
sub
in
call
rcll
jnp
adc
inc
in
xor
xchg
dec
mov
dec
add
jbe
dec
jl
arpl
addr16
repz
push
data16
lods
mov
test
repnz
dec
out
cmc
out
insb
fldenv
or
cmp
mov
adc
mov
je
mov
and
xchg
aas
aaa
popa
lret
jmp
mov
popa
or
add
cmpsl
xchg
and
data16
jbe
popf
mov
into
iret
enter
imul
push
mov
repnz
fsts
std
je
movsl
mov
pop
out
xchg
stos
addr16
push
aam
mov
loopne
add
test
aam
mov
sbb
lock
xchg
add
add
jo
mov
icebp
sbb
xor
or
xor
lret
fisubl
lods
jae
aaa
xchg
xor
push
mov
in
dec
pop
sub
stos
enter
inc
ret
push
fwait
dec
pop
in
rclb
pop
or
pop
mov
xchg
rcll
jmp
insb
out
or
mov
iret
jne
xchg
movsb
dec
pop
fwait
in
cli
mov
je
sub
adc
sub
mov
jg
dec
popa
jae
cld
adc
ja
cmp
mov
sti
int3
jmp
push
xor
pop
dec
lods
ja
dec
mov
pop
cmpsl
pusha
outsl
aad
call
or
xor
push
adc
pop
mov
bound
int
pop
fdivrl
push
push
sub
mov
fs
mov
dec
or
int3
pop
arpl
or
pop
lcall
fisubrs
cmpb
xor
and
xor
pop
xchg
sub
push
xchg
shlb
jnp
cmp
cmp
aas
and
pop
push
arpl
mov
xchg
mov
cltd
repz
inc
push
jno
sti
jg
sub
out
mov
mov
cltd
pop
sub
xor
test
outsb
sarb
fsubrs
or
loop
mov
push
loop
and
loop
xchg
or
out
aad
xchg
test
pop
test
ja
cmp
pop
lods
jo
into
lods
ror
sbb
or
jmp
push
adc
jl
aaa
ret
add
add
mov
push
mov
cmc
xchg
pop
mov
xchg
aas
fidivl
ja
xor
ficomps
mov
cmp
sbb
adc
mov
out
push
jg
push
imul
push
fsubrl
fildl
and
push
imul
mov
xor
ficompl
imul
add
or
jbe
mov
sahf
sub
les
js
rcl
cmp
nop
ss
cmp
hlt
xorb
scas
aas
cmpsl
mov
pop
rorl
inc
mov
push
je
fdivs
xchg
cmpsl
divb
or
pop
lods
idivl
popa
jp
mov
icebp
fsts
fwait
xchg
pop
imul
and
and
pop
push
aam
stc
dec
addl
jno
int3
mov
enter
sarl
jb
jmp
and
scas
and
jmp
sub
aaa
sub
xlat
xlat
sub
push
icebp
pushf
pop
and
xchg
aaa
jne
sbb
mov
push
jnp
in
inc
pushf
outsl
push
mov
js
inc
out
jmp
sub
or
sub
leave
roll
mov
les
mov
fimull
stc
mov
sub
ret
or
lret
pop
pusha
in
pop
xchg
jns
aam
jns
cltd
test
mov
fdivs
daa
int
dec
xlat
hlt
sub
mulb
inc
jl
je
and
jns
les
push
mov
adc
mov
addl
xchg
js
test
ds
mov
cmp
cmpsb
mov
ret
pop
mov
cmp
push
pop
add
lock
cld
xor
lahf
int3
sbbb
xchg
xchg
into
subb
mov
push
add
mov
adc
mov
jle
sbb
xchg
in
inc
bound
inc
xor
shrl
mov
stos
mov
out
insb
xchg
xchg
pop
sub
cmp
fs
insb
add
icebp
mov
into
pop
push
jo
sub
mov
pop
insl
xorl
mov
loope
outsb
sub
call
insb
pop
pop
mov
push
xchg
ds
cmp
cmpsl
test
lret
xchg
fidivrs
gs
aam
jle
pushf
shl
and
or
ja
add
ljmp
mov
and
dec
add
dec
pop
cmp
lock
jl
out
cmp
repnz
fcmovu
xchg
sub
and
jle
mov
jecxz
sti
lcall
hlt
rcl
adc
test
fs
add
into
mov
ret
pop
repnz
push
arpl
fists
mov
mov
stos
pusha
mov
std
cmpsb
cmp
les
int
add
fdivrl
pop
cld
cltd
fstl
adc
inc
pushf
std
sarb
mov
xor
out
xor
push
cmc
lock
push
ljmp
int
sub
jg
pusha
pop
dec
lds
ja
dec
xlat
jb
test
adcl
sti
scas
aad
int
xchg
bound
sbb
pop
jns
icebp
jmp
cmpl
ret
rcrl
cli
inc
pop
f2xm1
mov
lcall
add
cli
in
sub
add
push
jle
pop
les
add
stos
mov
stos
dec
outsl
gs
cmc
mov
ljmp
push
and
dec
fcmove
lods
test
mov
dec
subb
es
nop
lea
sbb
call
out
test
mov
mov
jbe
pop
inc
cmp
pop
aas
and
add
push
mov
xlat
inc
adc
leave
ljmp
in
lcall
mov
inc
int3
xchg
xchg
mov
call
in
rcl
insl
in
sbb
loop
inc
mov
xchg
sbb
in
adcl
xor
mov
stc
ss
iret
fmuls
mov
fwait
imul
insb
in
push
sbb
pop
lock
cmp
cwtl
pop
imul
xor
xor
or
stc
icebp
mov
sub
andl
and
push
dec
imul
mov
loopne
std
rorb
mov
add
lret
daa
pop
jge
loopne
xor
xchg
adc
push
mov
sub
stc
subb
ficoml
test
jge
mov
lret
or
shrb
and
int
dec
xor
rorl
imul
int3
dec
and
popf
or
mov
mov
xchg
movsb
ja
xor
xlat
fwait
mov
mov
test
into
sub
lret
ss
testb
out
cmpl
sbbl
ss
in
insb
mov
aas
scas
sarb
adc
out
scas
xchg
mov
pushl
lret
xor
divb
icebp
push
daa
pop
mov
cmp
iret
dec
bound
lea
or
mov
sbb
and
sahf
mov
rcrb
leave
hlt
or
jnp
pop
out
and
pop
mov
lcall
jecxz
subb
sti
push
mov
adcl
ret
flds
out
pop
add
fs
int
ret
mov
pop
enterw
adc
dec
int3
cmpsb
jl
cmp
stos
cld
loope
xchg
scas
lcall
lahf
jmp
loopne
push
fcoml
imul
push
enter
xchg
add
jne
push
lret
iret
outsl
mov
hlt
loopne
fs
push
xor
pop
ss
sbb
sub
gs
cmp
imul
push
jae
sti
aam
add
das
jle
mov
ret
sbb
rolb
mov
loop
fbld
xor
repz
sub
sbb
cltd
lods
cmpsb
add
cmp
lcall
jmp
inc
jnp
nopl
cmc
push
jp
ja
adcl
pop
jno
dec
pop
and
scas
sub
inc
scas
cltd
repnz
sub
lfs
fisttpll
pop
nop
xor
ss
push
aad
lret
and
iret
std
pop
xchg
sbb
test
sbb
aad
ja
outsb
add
mov
cld
leave
push
sub
inc
mov
cli
test
nop
push
cmp
cmpsb
movsl
cli
pop
fldl
ret
call
xor
push
or
cmp
gs
movsb
testl
mov
nop
xchg
je
mov
xor
mov
xchg
sahf
in
popa
mov
fwait
add
add
adc
jne
shld
mov
cli
pop
pop
and
push
testl
lods
sbb
mov
pop
ret
push
sub
mov
xor
cld
mov
inc
cld
mov
scas
sbb
push
in
fidivs
out
subl
mov
add
lcall
cli
pusha
sahf
sbb
add
jp
adc
push
xlat
push
inc
pop
pop
mov
dec
mov
inc
jae
cmp
pop
cmpsb
adc
imul
rcll
mov
mov
inc
imul
mov
dec
jnp
andb
movsb
lock
cmp
cmpb
mov
dec
xchg
sub
sbb
mov
mov
test
push
dec
mov
sbb
add
mov
scas
push
pop
and
mov
adc
out
scas
mov
popf
mov
jne
mov
adc
loope
out
add
jnp
repnz
test
pusha
dec
out
leave
pop
gs
mov
pop
shlb
rorl
dec
dec
sbb
xchg
rcrb
xchg
aam
stos
out
shrl
push
call
nop
lds
into
fists
sub
push
je
inc
pop
cltd
mov
cli
pop
dec
lcall
adc
subl
std
xchg
jbe
xor
rclb
es
cwtl
mov
in
sbb
pop
xor
adcb
jle
ror
push
cmc
gs
mov
fs
inc
adc
call
sbb
test
jp
add
xor
push
cmp
cltd
popa
xchg
int3
inc
sub
mov
and
aaa
test
loop
xchg
mov
mov
pop
insl
notb
mov
mov
push
adc
push
sbb
or
adc
scas
jmp
and
orb
fcompl
test
sub
sahf
stos
lods
leave
sti
jp
dec
sbb
daa
fistl
mov
mov
or
add
ss
sbb
sub
jno
sbb
jb
push
lcall
adc
fidivl
rclb
push
or
outsb
jno
and
push
sub
add
pop
ja
or
jmp
cmp
loop
sub
inc
leave
cmpl
bound
ret
push
jnp
sbb
inc
inc
test
push
adcb
inc
mov
pop
add
inc
aam
sub
cmpsl
sub
or
jp
push
or
inc
sbb
cld
sbb
repz
test
jbe
rclb
in
movsl
fildl
mov
jae
push
dec
sarb
in
lods
ret
push
inc
mov
inc
fstps
or
in
pop
stc
dec
fisttps
add
shl
add
dec
rcll
pop
cmp
sbb
add
add
dec
pusha
cld
imul
cmp
inc
add
popf
jecxz
cmp
sub
sub
push
jcxz
cmc
ja
outsl
push
cmp
mov
lret
insl
or
rolb
and
sub
sbb
adc
xlat
push
std
cwtl
aas
jecxz
dec
sub
loopne
rorl
cmp
aaa
mov
push
or
pop
out
lret
sub
ss
or
pop
inc
inc
aaa
pop
jb
push
test
cmp
push
jle
mov
pop
xor
push
inc
sbb
adc
lcall
mov
mov
push
mov
ret
mov
mov
inc
cs
rcl
inc
xor
std
ss
pop
push
mov
cwtl
fxch
aaa
sub
ss
jo
push
jbe
imulb
pop
or
scas
pop
sbb
cli
data16
arpl
mov
inc
xchg
dec
and
out
cmp
cmp
lods
loop
mov
xchg
inc
enter
sbb
dec
sub
jns
xor
enter
addr16
xchg
in
std
or
loope
inc
int3
das
xor
leave
daa
mov
mov
pop
push
sub
sarl
jno
lcall
adcl
or
pop
leave
cs
mov
sub
mov
sti
filds
sbb
pop
push
push
pusha
stos
jge
pop
mov
fisubs
fstps
adc
xchg
es
pop
fcmove
jae
jmp
scas
dec
pushf
sub
mov
orb
sbb
cmpsb
xor
in
sbb
sub
orl
cmc
sbb
ljmp
cmp
fidivl
xor
push
sbb
inc
gs
jmp
mov
jmp
lods
rcll
icebp
fistps
or
repz
push
or
outsl
aaa
or
pusha
mulb
scas
popa
scas
insw
mov
cs
imul
mov
call
jle
or
push
push
faddl
jle
bnd
mulb
add
lock
xchg
or
cmpsb
icebp
inc
and
repz
mov
pop
aad
sarb
and
push
test
or
call
sub
or
mov
xor
or
shrb
int
fcomi
nop
ja
cmp
call
es
imul
mov
mov
jl
inc
frstpm(287
aas
popf
sub
adc
imul
out
test
orl
inc
aaa
or
jle
jecxz
mov
jb
sub
pushf
xor
mov
arpl
sbb
cmp
push
xor
inc
push
call
pop
xchg
jno
inc
xchg
jge
xor
pop
sti
or
dec
add
sarb
jecxz
loop
adc
test
sub
push
adc
test
sti
adc
sbb
sbb
mov
xor
pop
shll
clc
cmp
pusha
pusha
push
push
aam
xor
adc
lock
pop
jp
fisubrl
xchg
insb
sub
test
inc
addr16
mov
popa
cmpsb
jnp
sub
hlt
mov
pop
pslld
pop
repnz
fsubp
xchg
leave
and
data16
mov
inc
pop
call
xor
je
jno
stc
lret
fs
cmpsl
insl
cli
or
test
mov
imul
jae
dec
in
mov
cmp
rclb
mov
sbb
mov
dec
out
je
fadds
dec
pushf
mov
push
sub
int3
lret
jmp
mov
imul
and
int
mov
mov
test
data16
nop
sbb
push
out
cwtl
adc
pusha
xor
add
and
adc
ss
ja
mov
popa
xchg
or
ja
js
fldenv
jno
cwtl
test
sti
and
xchg
xor
fs
cmp
mov
repnz
pushf
mov
arpl
xor
mov
or
jb
mov
cltd
adc
xchg
inc
inc
or
in
jo
stos
push
adc
daa
aaa
test
xchg
push
rclb
je
add
mov
lock
ljmp
test
les
fmull
pop
pop
data16
ss
mov
jae
stos
cltd
mov
fdivrs
gs
notb
loopne
adc
xor
loope
xchg
mov
fcmovnu
jg
test
lock
lods
sbb
pop
pop
into
std
lahf
mov
pop
fcoms
jnp
adc
inc
scas
das
push
ds
loopne
jo
jae
in
scas
popa
mov
mov
inc
cld
shrl
push
xor
jae
mov
outsb
fwait
mov
xchg
stos
mov
aam
jns
pop
or
jb
ljmp
shl
sub
mov
popf
mov
out
lcall
add
insl
sbb
jecxz
xorb
outsl
stos
fdivl
jnp
inc
and
jb
in
rorl
divl
fcomi
jno
cmc
mov
dec
or
inc
pop
ja
stos
clc
push
mov
cmc
xor
aaa
add
mov
sbb
cltd
loop
sbb
stos
hlt
cpuid
inc
nop
inc
outsl
in
jl
mov
or
scas
sub
shlb
test
xor
into
popf
dec
inc
pop
mov
xor
mov
hlt
cmc
inc
cmpl
loop
data16
aam
push
and
push
enter
xchg
dec
cmc
xchg
ret
repnz
fidivs
mov
and
pop
js
mov
aad
jmp
pop
iret
out
shlb
in
sbb
jp
cmp
ret
xchg
inc
icebp
fcmovb
jns
xor
pop
mov
or
icebp
inc
push
outsl
jmp
orb
test
push
and
lret
mov
ret
movsl
ds
das
add
pop
mov
add
js
jns
pushf
dec
hlt
xor
daa
mov
mov
popa
lret
in
lock
pop
in
add
sti
mov
dec
test
in
sbb
loopne
std
mov
cmp
sar
mov
add
repnz
inc
jb
mov
scas
pop
sub
xchg
arpl
adc
stos
add
lcall
fwait
dec
jg
and
outsl
in
addr16
das
movsb
cmc
ret
dec
dec
dec
add
lret
jmp
xchg
push
cmpsl
xor
jmp
adc
fwait
mov
xchg
rcl
mov
insb
push
dec
loopne
loopne
dec
insl
popa
rcrl
in
fmuls
repnz
mov
in
cmp
aaa
sub
aam
adc
popf
pop
int3
add
mov
cmp
xchg
xor
or
cmp
inc
mov
mov
js
and
dec
sub
test
xor
xchg
in
cld
adc
mov
outsb
push
cltd
jbe
or
sbb
xor
cwtl
icebp
test
std
out
jae
mov
xchg
and
jge
lret
popf
dec
loopne
add
push
out
fsubr
mov
pop
lcall
lahf
pop
cmp
pop
fildll
lcall
mov
int3
sub
pusha
outsl
add
clc
sbb
inc
fnstsw
add
mov
or
std
sub
mov
das
push
scas
jb
inc
lret
inc
movsb
aaa
mov
idivl
movsb
pop
imul
test
fwait
cmp
incb
in
jnp
arpl
ss
out
aam
mov
iret
jge
dec
jl
ja
lcall
lret
ficoml
push
push
adc
add
adc
fcmovnbe
ljmp
mov
push
mov
fsubrs
push
inc
sub
loop
cmp
mov
push
dec
ljmp
push
mov
and
test
push
int
adc
dec
in
call
repz
sub
fsubrl
enter
stos
addl
jle
push
xchg
mov
incb
mov
or
popf
std
push
jp
lcall
inc
and
xchg
arpl
je
insb
movsl
push
cmp
jg
add
out
push
out
aaa
test
shl
mov
lahf
iret
imul
jae
cltd
shrb
repnz
mov
les
add
push
fistpl
sub
enter
xor
cmp
sbb
into
sub
gs
sub
sbb
test
dec
mov
and
dec
xchg
in
inc
xor
data16
or
and
das
movb
pop
nop
cwtl
test
inc
dec
mov
jle
scas
pop
pop
jle
cmp
stc
jno
jae
bnd
xchg
push
jmp
push
cld
cmpsb
push
pop
clc
and
das
sub
fnsave
fwait
into
xor
add
out
adc
lahf
sub
and
add
repz
jno
scas
adc
rol
or
adc
in
aaa
inc
ret
jae
cmp
xchg
dec
adc
inc
call
or
and
sti
js
adc
movsb
daa
mov
adc
adc
sub
imul
psrlq
lahf
movsl
popa
add
push
test
jno
xor
xchg
mov
cmpl
test
shrb
pushw
xorl
fs
xchg
aam
rcrb
scas
mov
test
lea
inc
push
daa
ja
add
jae
lea
dec
lahf
lret
daa
sbb
das
xchg
popf
jmp
mov
cltd
aad
inc
mov
jae
cmp
std
push
imulb
dec
mov
fstpl
mov
jmp
test
stc
cwtl
ret
rcrb
mov
xchg
mov
je
aad
out
push
cmp
inc
bound
test
out
mov
or
es
dec
xchg
lret
mov
push
les
cmp
xor
xor
sarb
cmp
mov
xchg
inc
inc
leave
popf
inc
stos
jo
jb
scas
lret
repz
mov
or
sub
cli
xorb
lcall
sub
bound
or
pop
and
xchg
in
sub
addr16
mov
dec
add
pop
in
iret
ljmp
call
sub
int3
ss
movsb
daa
mov
popa
sarb
aas
jp
jecxz
mov
roll
lcall
cmpsl
xchg
aaa
jle
imul
fcoms
into
jbe
cmc
jo
jle
xorl
lahf
xor
pop
jp
sub
push
jo
insb
pop
shrb
inc
and
adc
push
and
adc
xchg
push
mov
ror
lcall
inc
mov
fwait
out
add
aaa
mov
cmp
mov
arpl
into
dec
push
jge
push
cwtl
fcmovnb
add
inc
jno
arpl
xor
sbb
out
xor
js
mov
mov
xchg
out
test
in
pop
or
cmp
loop
add
mov
test
out
sub
cmpl
dec
mov
dec
or
fbstp
push
jbe
mov
fisubs
idivb
sti
pop
mov
andb
stos
fsubs
xchg
push
divb
jno
add
test
mov
in
outsb
and
repnz
lock
jbe
lahf
xchg
jp
xchg
sti
mov
inc
sub
cwtl
insl
arpl
or
or
les
mov
sub
hlt
inc
pop
and
call
imul
add
insb
cmp
adc
push
push
movsl
lret
pop
cmp
aam
arpl
je
addl
adc
xor
sub
loopne
into
mov
je
mov
rclb
lods
inc
pop
push
cmc
dec
test
adc
icebp
imul
pop
fstl
pushf
data16
bound
adc
mov
fisttps
mov
fcmovnb
outsb
inc
mov
cs
test
fwait
addr16
aam
out
ljmp
mov
mov
pop
add
mov
cld
pop
cmpsl
cmp
aam
imul
popf
aas
push
das
mov
ss
movsb
ds
icebp
stc
xchg
dec
fldcw
mov
mov
idivl
outsl
mov
int
dec
incl
inc
xchg
sbb
mov
mov
lods
mov
lock
aam
jmp
das
iret
adc
jmp
test
jp
test
cli
pop
dec
or
lods
and
loopne
xchg
or
and
sbb
add
lret
std
lods
inc
pop
sarb
insb
jg
xor
mov
imul
in
repz
mov
pop
xlat
ja
mov
inc
jo
xchg
shll
jp
and
xchg
adc
mov
mov
leave
lea
cmp
lahf
mov
mov
fildl
sub
les
jno
jne
fsubrl
in
stos
jle
ret
test
daa
xlat
push
mov
cli
push
shlb
cmpsb
das
mov
jge
pop
jmp
rcll
in
addr16
imul
bound
dec
testb
in
cs
enter
push
mov
pop
xchg
mov
xor
lret
pop
jbe
push
adc
pop
es
lds
xchg
and
push
pusha
xlat
or
jne
std
mov
popa
pushf
call
jle
pop
inc
mov
xchg
cmp
mov
stos
dec
negb
push
inc
sbb
ja,pn
shrb
sti
xorb
mov
push
nop
mov
jbe
adc
or
cli
adc
sbb
pop
sbb
push
pop
xlat
out
js
add
stc
das
push
pop
popa
and
and
into
or
jge
mov
pop
mov
in
stc
mov
xor
stos
dec
std
rolb
cmp
enter
and
aam
pop
adc
ss
sti
lods
dec
lcall
sub
pop
fisttps
or
jge
dec
out
push
out
cli
dec
dec
sub
xchg
xor
lods
int3
pop
in
movsl
pop
add
das
rclb
mov
push
pop
mov
cli
xor
ss
jb
inc
mov
adc
int
or
rorb
sub
xor
int3
test
xchg
sete
xchg
mov
in
into
lods
ss
add
lret
jo
add
subb
out
repnz
test
stc
inc
jmp
loop
push
mov
cs
leave
jo
push
sbb
xchg
xor
mov
lea
or
add
cmp
xor
lahf
pop
push
mov
lds
loope
pop
lret
jecxz
flds
shr
mov
mov
into
xchg
hlt
lods
xchg
lods
int3
or
jl
mov
jbe
inc
mov
jle
call
cmp
das
loopne
inc
insl
ficompl
movsb
push
jecxz
inc
pop
xchg
sarl
push
sbb
lds
fcom
cwtl
adc
lret
andl
mov
cmp
loope
mov
pop
cmp
sbb
stos
push
xlat
jae
clc
mov
shlb
ss
jecxz
pop
pop
jno
xchg
dec
mov
cld
jns
cmp
fistps
push
fwait
jne
xlat
xchg
push
lods
repz
sahf
test
and
adc
add
out
cltd
in
fisttps
jecxz
stos
sub
test
mov
loopne
pop
repnz
pop
mov
xchg
rclb
push
je
xchg
cld
adc
push
out
and
xlat
nop
add
into
dec
sbb
jbe
arpl
mov
shl
pop
push
mulb
pop
mov
andb
je
out
fcoml
addl
inc
daa
pushl
lods
push
lods
or
pop
jge
shl
es
sbb
sbb
sub
daa
cmp
enter
cmp
mov
cmp
dec
mov
rcrl
inc
imul
jp
test
ficoms
in
loopne
sbb
lcall
and
insb
jb
imul
scas
xor
sbb
out
shlb
mov
stos
xor
push
cwtl
mov
fidivs
cmp
mov
push
push
cmp
popf
jmp
mov
shll
mov
popa
inc
int3
xchg
xchg
pushf
call
mov
mov
dec
in
pop
jp
out
gs
popa
icebp
out
push
loop
cld
cmp
in
or
in
add
dec
fimull
fildl
or
add
fs
mov
mov
outsl
mov
jecxz
fwait
push
hlt
iret
push
lods
into
cmp
imul
cmp
cltd
js
fidivl
jge
mov
call
push
xor
mov
xchg
je
push
sub
dec
mov
shl
loop
inc
adc
cmpsl
pop
sbb
mov
ja
roll
stc
jp
pop
and
mov
jb
cltd
test
cmp
ficomps
push
mov
test
test
orb
mov
adc
in
xor
jae
lss
aas
out
test
push
xchg
xor
push
mov
push
pop
addb
push
sub
fdivrp
sub
jp
dec
test
xchg
nop
lahf
mov
lret
xchg
bound
or
inc
xor
sub
loope
pusha
je
xlat
es
insl
and
mov
push
insb
mov
push
popf
data16
push
sti
aas
popf
pusha
xor
test
scas
mov
aas
js
into
and
or
int3
mov
sub
es
push
in
add
in
xchg
pop
mov
ret
adc
dec
and
pusha
mov
in
mov
adcb
jno
pop
insb
mov
cld
cld
fcoms
push
frstor
sti
pop
in
cmp
lock
push
nop
shll
test
xor
loope
xor
out
shrl
push
cli
test
les
clc
sub
mov
sbb
clc
mov
addb
cli
cmpsl
jecxz
lea
daa
and
divl
xchg
aaa
mov
aas
pushf
sub
sbb
pushf
and
repz
pop
mov
or
xchg
fistps
mov
popf
pop
data16
into
sti
out
lahf
inc
push
pop
rcl
hlt
push
insb
ds
in
fisttps
push
xor
add
sbb
test
and
adc
fcoml
mov
scas
xchg
arpl
or
insb
pop
fchs
pop
pusha
lea
sub
rorl
pop
into
cmp
jnp
pop
hlt
in
xchg
mov
dec
and
inc
jae
out
and
xchg
cmp
test
and
xchg
loop
cmp
push
movsl
outsl
sub
jg
call
and
sub
pop
xchg
andl
mov
xor
enter
cmp
std
imul
xlat
fldt
xchg
adc
outsl
movsb
xor
ret
xchg
or
mov
dec
mov
in
jno
cld
pop
add
pushf
jns
xchg
add
push
dec
jge
xchg
pop
sbb
mov
data16
pushf
in
inc
out
gs
fs
lcall
mov
sbb
mov
add
mov
or
and
cld
jmp
sbb
push
and
test
rorb
or
jg
dec
push
dec
pushf
mov
insl
pop
xor
mov
sbb
xchg
mov
cmp
stos
jmp
ficoms
dec
cmc
sti
ja
jbe
pusha
cmp
mov
cwtl
sbb
stc
jns
mov
mov
mov
fimull
or
fistl
lods
inc
mov
xchg
inc
ja
jp
lea
enter
pop
movsl
rcrb
mov
xchg
inc
mov
xor
pop
out
push
cs
mov
dec
mov
pusha
mov
loop
repz
mov
xor
fisubrs
jnp
cld
cltd
pop
jb
dec
jl
fidivrl
cwtl
mov
bound
xchg
js
xchg
and
hlt
xchg
ret
mov
fldcw
mov
sbb
push
xlat
cmp
cltd
cmpsl
rclb
aam
popf
dec
stos
ret
jp
dec
push
mov
jo
and
cmp
ja
mov
xchg
xchg
adc
cmp
dec
pop
pop
mov
pop
pop
imul
daa
jle
jne
dec
jo
loopne
adc
inc
shll
movsl
or
mov
dec
jbe
mov
xchg
ss
jbe
xchg
push
jl
mov
cli
xor
adc
daa
mov
popf
ss
leave
in
fwait
icebp
mov
rorl
lock
int3
std
daa
lahf
mov
push
xchg
aaa
mov
cmpsb
adc
pop
mov
popf
and
incl
fwait
cmpb
sbb
out
pop
imul
mov
xchg
out
fldenv
stc
push
inc
or
inc
lea
cmp
aad
fldl
popa
mov
into
pop
testl
cmpb
into
add
jmp
jg
inc
pop
and
and
pop
sbb
add
inc
mov
pop
js
leave
xchg
mov
inc
rol
xchg
je
mov
ja
cmpsl
push
clc
lahf
cli
dec
fstps
test
mov
mov
scas
iret
xchg
fildl
pop
cmc
fwait
sbb
jl
cli
aam
sahf
mov
or
jo
and
adc
cmp
dec
cmc
enter
inc
mov
sbb
outsb
shld
xchg
jne
loopne
add
pop
mov
pusha
and
es
fldl
xchg
dec
jecxz
fidivrl
dec
push
lds
xchg
push
ja
mov
cmpsb
pop
cmp
sub
push
cmp
add
into
or
xchg
ucomiss
popa
jmp
adc
mov
cld
movsb
dec
fldenv
lahf
xchg
notl
sbb
sbb
fdivrs
arpl
out
aas
lds
inc
insb
in
push
jno
stos
pusha
fnstcw
and
fsubr
jb
test
loope
lea
jp
mov
pop
int
js
lock
popa
cwtl
aas
shll
push
aam
int3
inc
jo
dec
js
lret
or
sub
adc
lock
dec
push
neg
xchg
aam
cmp
je
repnz
or
rcrl
in
mov
pop
cmp
hlt
psrlq
and
into
fbld
mov
sarl
or
out
push
mov
fimuls
dec
call
jge
scas
pop
xchg
popa
sti
stc
ljmp
pop
outsl
xchg
and
add
push
push
adc
inc
jle
mov
jns
push
insl
xchg
test
add
stc
stos
pop
les
fcmovbe
and
inc
sahf
stc
mov
jb
adc
punpckhwd
jecxz
xchg
das
rorl
clc
pusha
or
es
mov
lret
dec
test
sub
enter
adc
push
flds
sahf
popa
inc
insl
pop
xor
mov
xlat
repnz
sbb
dec
repnz
out
pop
faddl
jae
push
in
sub
inc
or
push
rol
push
and
out
out
movsl
sbb
ret
in
loopne
mov
test
vcvtpd2psx
scas
jmp
cld
pop
push
inc
test
jecxz
and
out
in
and
repz
rolb
cwtl
ja
xor
inc
mov
movsb
inc
es
mov
shrb
insl
lods
pop
mov
jae
sarl
adc
inc
outsl
mov
stos
adc
sbb
xchg
adc
rcrb
mov
push
add
and
mov
rolb
or
jg
out
or
roll
fnsave
repnz
push
push
xchg
xor
lcall
inc
das
movsl
out
sub
cmc
sar
dec
xchg
inc
inc
popa
in
shlb
sub
ljmp
ljmp
or
aaa
push
inc
aaa
sbb
ljmp
sti
sbb
sbb
dec
xor
addl
xor
stos
stos
in
xor
adc
xchg
mov
arpl
das
mov
shrb
pop
mov
jp
stos
fbstp
loopne,pn
call
lock
out
scas
mov
imul
popfw
xchg
je
cmpsb
or
jmp
sub
out
dec
pop
or
mov
popf
lahf
sbb
mov
cmp
aaa
loope
lods
jns
mov
xor
shlb
xor
xlat
mov
jmp
fadds
adc
jns
jp
cmp
pusha
xchg
lds
cmp
ja
in
jne
in
dec
gs
dec
pop
sub
loope
jp
sbb
cmc
push
subl
or
int
inc
in
xor
push
daa
xor
out
xchg
imul
fistps
xor
and
aaa
mul
outsl
dec
mov
mov
dec
mov
mov
nop
mov
inc
sub
test
jp
and
inc
ds
outsl
movsl
shll
or
negl
and
pop
int
inc
push
es
mov
loopne
jmp
pop
jmp
popf
adc
xchg
mov
add
xchg
loope
and
stos
int
xchg
arpl
leave
in
loop
rorl
mov
ret
sub
jl
lods
pop
inc
push
jle
push
adcb
inc
or
and
movsb
mov
sbb
push
dec
mov
jmp
int3
xor
and
adc
mov
and
pop
hlt
icebp
jl
lds
mov
xchg
roll
gs
jns
mov
rorb
xor
xor
xchg
sub
inc
fwait
loop
mov
pusha
adc
out
mov
and
popf
lea
js
insl
movsl
jmp
imul
ljmp
mov
pushw
dec
in
ret
daa
add
sbb
adc
sbb
lret
inc
cmp
enter
cs
cmp
add
mov
or
pop
test
pop
daa
js
in
mov
lahf
adc
out
repz
fsubrs
jne
rcll
push
shlb
mov
push
push
lret
lret
mov
test
aad
mov
imul
out
push
out
jae
mov
fbld
jne
divb
or
xor
cmp
int3
mov
rcr
test
add
xorl
pop
out
pop
mov
xor
lcall
fistpll
nop
and
mov
xchg
xchg
js
sbb
sbb
dec
sub
xchg
cmp
jae
andl
mov
push
aad
xor
pop
cmp
imul
or
test
xor
and
inc
es
pop
push
aad
xchg
addr16
inc
fcomip
jl
dec
and
xchg
cltd
push
cli
test
mov
and
imul
test
lds
clc
gs
pop
cwtl
or
jecxz
or
scas
movsb
xchg
sub
enter
data16
push
adc
into
incb
sbb
stos
mov
scas
gs
movsl
jne
push
je
sbb
lcall
mov
pop
dec
sbb
add
xchg
fsubl
push
dec
iret
inc
and
mov
aad
mov
or
and
inc
je
cwtl
shr
adc
push
test
inc
imul
jmp
jl
xor
test
cmp
lcall
mov
test
cld
gs
and
cmp
mov
inc
pop
lock
jne
imul
mov
push
data16
lahf
movsb
jle
xchg
mov
in
pop
pop
and
mov
mov
xchg
mov
mov
xor
lea
ret
cmpsl
ss
mov
xchg
cwtl
ja
cmpsb
dec
push
fsub
pop
mulb
repz
sbb
into
add
dec
push
fsqrt
repnz
cwtl
jl
jns
sbb
aas
arpl
sbb
das
mov
cmove
mov
repnz
aaa
dec
pop
in
sbb
pop
cmp
ja
lods
fstpl
js
lret
push
scas
pop
ror
cmpsl
and
aas
xchg
aad
or
lods
lahf
push
mov
cwtl
fs
mov
scas
incb
aas
out
inc
and
or
repz
repnz
in
ret
mov
adcb
inc
testl
xchg
dec
mov
repnz
daa
xor
orb
setbe
pop
lods
and
push
adc
sbb
fidivl
inc
sbb
inc
iret
add
ja
les
mov
push
mov
repz
mov
add
cmp
lahf
add
pop
xchg
ljmp
mov
mov
xchg
repz
push
loop
sbb
jo
das
vpshaw
lods
scas
frstor
pusha
negl
or
jnp
and
icebp
stos
hlt
aad
mov
inc
movsb
push
fidivs
lret
loope
and
mov
shl
inc
and
adc
fnsave
add
cltd
insl
mov
pop
xchg
daa
jo
shll
repz
jae
ret
out
fnstsw
das
notb
mov
jp
push
jo
inc
push
jb
lcall
xor
and
cmc
sahf
inc
sbb
dec
pusha
push
lret
andl
mov
sbb
sub
inc
outsb
enter
push
jle
jg
lods
std
xchg
or
adc
popa
sub
inc
push
sbb
xor
mov
incb
and
mulb
xchg
mov
lods
mov
lds
or
push
add
xor
pushf
in
aaa
inc
mov
sti
in
pusha
lret
add
lock
popa
pop
js
xor
add
test
js
in
loope
loop
fdiv
mov
and
cmp
dec
les
hlt
add
cli
sbb
sub
fs
insb
loope
jbe
fistpll
mov
or
jge
or
mov
mov
add
inc
ret
xor
das
dec
xchg
push
lcall
test
cmp
pop
mov
cmpsb
popa
fdivs
pop
adc
xchg
push
stc
jb
push
add
imul
movsl
dec
pop
adc
push
in
aam
mov
adc
jb
jo
call
xor
xchg
inc
negb
add
stos
test
lret
in
sbb
enter
aad
lcall
push
mov
ja
sub
addr16
in
mov
dec
mov
mov
in
sub
decb
pop
popf
jnp
decl
pop
jbe
arpl
jno
int3
cs
outsb
shll
int3
pop
lahf
mov
lea
mov
xor
mul
dec
cmp
in
mov
pop
xchg
or
lret
jg
inc
mov
push
ret
sub
movb
mov
cmp
dec
push
jg
popf
push
je
or
inc
aam
xorl
testb
mov
out
int
dec
loope
adc
mov
or
xor
inc
aaa
mov
jmp
frstor
adc
mov
mov
in
inc
mov
iret
cmp
lcall
mov
mov
jo
mov
cmp
aam
popf
testl
add
fidivrs
decb
ds
ror
and
and
icebp
add
lret
xchg
lods
stc
xchg
mov
jecxz
xor
negb
jg
xor
mov
std
aad
inc
loopne
dec
sbb
movaps
ficomps
inc
sub
push
add
sbb
jp
cld
lock
or
lahf
test
push
ret
sbb
inc
push
inc
or
pop
xor
sbb
or
or
jge
jecxz
xchg
imul
dec
push
mov
xchg
jp
ret
mov
outsl
or
mov
daa
adc
into
xchg
out
hlt
add
dec
jmp
sub
int3
mov
adc
push
repz
aam
bound
pop
movsb
cli
imul
mov
addr16
xor
aaa
sahf
ss
les
cs
adc
mov
adc
popf
rorl
fs
adc
repz
enter
out
rol
dec
fs
in
pop
sbb
jp
sub
lea
and
call
push
mov
push
out
stc
loopne
xor
mov
adc
mov
inc
paddd
ja
aaa
inc
loopne
fcomip
pop
jmp
jno
push
mov
jae
pop
popa
jno
lcall
mov
neg
xchg
pop
and
notb
inc
jb
inc
xor
popa
fcmove
fdiv
or
jnp,pt
shl
jb
dec
arpl
mov
in
std
outsb
mov
out
xor
fs
leave
into
ja
add
clc
ret
call
outsl
dec
cmp
mov
dec
sahf
fcoms
xchg
push
into
inc
in
push
decl
mov
xor
xchg
inc
add
xchg
dec
mov
mov
cmpsb
jo
mov
jae
nop
ljmp
cli
fwait
xchg
dec
std
push
sub
popf
dec
orb
pop
jg
xchg
cwtl
shl
popa
negb
sub
xchg
jg
push
sbb
lret
push
in
test
stc
cmp
inc
or
icebp
pop
mul
mov
insb
fstpl
repz
push
bound
dec
shll
fidivrl
jle
daa
cmp
mov
jecxz
push
cmp
stc
pop
xor
mov
adc
push
ds
test
sbb
sbb
or
lods
repnz
fwait
jno
in
or
or
std
cmp
lock
addr16
cmc
jne
ror
or
pop
loope
or
inc
mov
sub
mov
fnstsw
into
mov
sub
mov
xchg
mov
mov
xor
adc
xor
lods
xchg
shlb
scas
pop
xchg
cmp
nop
sbb
and
xchg
inc
int3
cli
pop
movsl
jno
adc
pop
rclb
and
push
mov
lret
mov
dec
test
push
ss
jecxz
nop
xor
das
aas
pop
leave
aas
or
sbb
jns
imul
adc
leave
bound
mov
pop
mov
lock
mov
xor
jne
cld
outsb
xchg
loop
stc
fldt
jmp
xchg
dec
or
pop
lret
loop
pop
test
insl
fcmovnb
iret
mov
lds
mov
push
movsb
in
inc
hlt
pop
pop
imul
jg
push
cltd
ss
jnp
dec
cmp
mov
push
pop
xchg
sbb
pop
pushf
mov
push
mov
in
and
lock
imul
stos
imulb
in
aam
push
push
cltd
pop
mov
popf
mov
lds
aad
sub
adc
sub
inc
ja
pop
scas
imul
out
cmpsb
jecxz
iret
repnz
push
push
movsb
out
or
mov
fs
jnp
mov
mov
adc
inc
insb
ficoms
push
inc
loop
push
mov
cs
add
mov
push
das
icebp
adc
lds
add
iret
jg
negl
cmp
mov
inc
loopne
icebp
shlb
mov
ret
dec
push
cmp
out
mov
arpl
stc
jge
cmp
fisubrs
in
ss
push
adc
jbe
mov
xchg
inc
mov
jo
push
cltd
adc
nop
adc
xchg
add
sbb
pop
movsl
pop
fcoml
jae
add
lcall
cltd
pop
lds
std
aam
inc
jmp
test
cmp
adc
mov
mov
adc
lcall
add
into
dec
jl
nop
jns
aaa
mov
adc
xchg
int
cmp
cmp
fsubrs
and
add
fstl
mov
ficoml
sub
and
add
jge,pt
pop
mov
into
out
in
sbb
push
mov
or
mov
das
add
jo
lods
sbb
es
stc
mov
shl
jl
in
inc
popf
idiv
int
sub
loop
insb
idivl
push
fldenv
xchg
cli
jmp
test
movsl
adc
add
ds
rcl
std
fdivp
movsl
mov
xchg
faddl
adc
lock
leave
or
pop
and
mov
jmp
stc
clc
mov
pop
lock
cmpsl
jns
or
and
lret
stc
and
jno
mov
fcomps
int
mov
bound
outsb
inc
lret
mov
testb
loope
mov
sub
fs
sbb
pop
lods
rcr
loopne
xchg
fwait
push
les
out
nop
xor
in
jnp
shlb
push
push
adc
clc
loope
fbstp
fstpt
jae
je
frstor
lahf
cmp
push
jl
push
cmp
aaa
stos
les
inc
cmpl
daa
xchg
enter
and
in
fcmovu
repnz
das
pop
adc
lea
and
mov
cmp
in
cmp
lret
add
pop
stos
out
stos
jns
mov
sub
jecxz
push
push
push
xor
mov
push
inc
inc
lods
loope
jg
adc
xchg
out
lods
lods
xor
fisubrl
std
roll
in
pop
cmp
jns
stc
lret
mov
inc
or
movsb
sub
xor
rol
in
subb
mov
loop
pop
jl
inc
and
stos
pop
xchg
outsb
ss
and
mov
iret
mov
repz
cmp
pop
add
cwtl
mov
mov
adc
aad
test
cmp
dec
test
jp
pusha
jno
cmpsl
adc
jl
cmp
ret
or
xchg
outsl
sub
out
popa
mov
jae
in
dec
mov
in
or
cmpsl
and
or
add
cmp
mov
push
repnz
stc
ss
insb
outsb
nop
add
pop
xchg
pop
xor
pusha
xchg
sub
mov
mov
fstl
int
loopne
push
or
decl
testb
jl
int
cwtl
in
fnstcw
add
xlat
dec
fcompl
shll
lret
push
adc
pop
xchg
xchg
mov
pop
or
mov
mov
and
sti
mov
adc
popf
outsb
jae
in
add
std
and
mov
xor
jbe
outsb
xchg
cmp
mov
dec
sti
mov
divl
jns
xchg
popf
jno
inc
pop
mov
inc
test
or
inc
and
call
dec
ret
mov
movsb
cld
fdivl
movsl
xchg
push
inc
jae
mov
pop
lds
ret
xor
push
pop
jle
mov
lcall
jge
cwtl
sbb
inc
aaa
jg
mov
pop
incl
mov
idiv
out
mov
in
sahf
xor
add
pop
ss
jb
mov
psubusb
sbb
pop
sbb
mov
push
popf
xchg
jmp
fmull
repnz
sub
mov
jle,pn
mov
cmp
mov
stos
les
xor
jg
and
mov
imul
push
aaa
xorl
mov
test
push
cmpsb
xchg
scas
dec
xchg
mov
mov
mov
push
xchg
aas
movsl
shlb
jne
xor
push
shrl
jbe
imul
inc
or
loope
jne
or
mov
and
jo
and
cld
sub
sub
cli
pop
movsb
pop
lcall
inc
test
add
iret
lock
adc
mov
inc
cs
sbb
mov
sub
push
mov
adc
mov
or
repz
and
mov
and
adc
mov
leave
mov
mov
outsb
sbb
fwait
sarl
jbe
mov
dec
xchg
pop
mov
cmpsl
int3
add
mov
ds
or
sbb
or
mov
outsb
jnp
push
imul
rcrb
fsubs
mov
pusha
loope
adc
nop
out
mov
cmp
adc
push
lock
outsl
sbb
ja
add
movsl
rclb
push
mov
andl
arpl
jb
xchg
shrb
leave
bound
pusha
mov
negl
in
decb
notl
cwtl
jbe
leave
aaa
adc
add
mov
rorl
lea
pop
add
push
in
movsb
push
xor
push
mov
rorl
in
lods
cwtl
push
sub
add
fisubrs
xchg
lods
in
hlt
mov
leave
ret
jns
loopne
sti
dec
loop
aas
mov
jb
in
loope
mov
and
push
mov
mull
adc
lret
imul
lds
cmpsl
sbb
lea
lret
add
leave
sti
sub
push
sbb
adc
mov
inc
mov
imul
stos
fldcw
out
add
sub
scas
cmp
lea
dec
shrb
mov
scas
inc
xlat
jb
test
xchg
test
fcomp
dec
pop
aaa
jg
jnp
rorl
xor
xchg
push
xor
mov
and
rcll
rcr
cmp
popf
adc
mov
fwait
mov
dec
dec
and
gs
add
jl
jmp
jb
push
stos
mov
xor
in
or
push
arpl
xor
adc
icebp
pop
xor
fcompl
loopne
pop
or
push
jno
in
xor
inc
out
popl
test
cmp
xchg
shl
repz
hlt
test
mov
jbe
mull
mov
cwtl
adc
ficoms
aad
mov
mov
and
jno
cmc
lock
add
pop
mov
fdivrp
mov
pop
sbb
punpckhbw
xor
mov
dec
lcall
movsb
arpl
cli
loopne
fstpl
inc
and
cmp
aas
std
mov
or
adc
fiadds
mov
outsb
xlat
shlb
sub
int
imul
aad
mov
or
rclb
sti
in
sub
xchg
in
ret
ret
enter
sub
mov
push
push
and
insb
testb
sbb
out
fwait
pop
mov
pop
dec
scas
dec
aas
out
mov
popa
cmp
ds
fisubrl
inc
sub
xchg
mov
xlat
xor
sbb
cwtl
and
pop
js
insl
inc
mov
mov
or
add
add
add
add
add
imul
bound
inc
leave
xchg
sbb
imul
pusha
push
inc
imul
bound
out
xor
fcmovu
test
lods
imul
bound
out
xor
fcmovu
imul
bound
mov
repz
imul
bound
out
xor
fcmovu
imul
bound
out
xor
fcmovu
imul
bound
out
xor
fcmovu
sbb
add
pop
push
in
and
add
adc
add
jb
add
add
add
add
mov
jg
add
add
jge
movsl
push
inc
cmp
add
add
add
add
add
dec
inc
add
fadds
add
mov
add
add
lcall
add
add
add
add
add
add
and
add
add
mov
ss
inc
add
rolb
add
addb
add
add
add
lcall
adc
test
add
rolb
add
or
add
add
add
mov
add
add
int3
mov
push
jmp
add
loopne
add
add
add
add
add
add
add
into
add
add
outsb
idivb
dec
inc
add
push
add
add
push
or
add
inc
add
stos
add
stos
mov
add
add
imul
les
add
add
add
add
add
add
int3
pop
into
add
add
sbb
daa
mov
jg
sti
adc
lret
sbb
scas
and
lcall
cmp
pop
dec
mov
xchg
mov
or
cmpsb
dec
sub
pop
cld
mov
jmp
cmc
test
or
dec
mov
pop
add
xchg
ljmp
push
xorl
sub
cmpsb
dec
cmp
push
movsb
add
iret
mov
hlt
push
ds
int3
xor
and
imulb
fidivrs
xchg
mov
in
dec
fadds
popf
jmp
not
test
and
inc
dec
call
outsl
jne
bound
ss
push
mov
hlt
stos
inc
add
fcompl
outsl
mov
adc
stos
pop
push
pop
mov
xor
or
add
jmp
and
xor
cmp
addr16
mov
arpl
jle
fsubl
repnz
mov
loopne
pop
inc
shll
out
ret
rclb
dec
pop
cltd
push
or
or
imul
push
push
xchg
out
out
hlt
push
lret
jne
loope
xor
xchg
stos
jae
stos
mov
repz
ljmp
ljmp
jmp
cmp
xor
lods
sbb
xchg
sahf
mov
push
and
xlat
dec
jecxz
xor
mov
xorl
addr16
pop
leave
nop
xchg
addr16
out
push
sub
sub
aaa
call
daa
and
mov
mov
lods
pusha
push
fnstsw
xor
loope
into
imul
jnp
add
ret
insb
xchg
ljmp
inc
dec
push
jmp
in
test
jmp
push
sbb
nop
movsl
subl
add
lock
daa
lcall
arpl
lods
in
inc
outsl
sahf
adc
push
ret
xor
xlat
lret
movsb
and
mov
test
mov
xor
jbe
add
into
cltd
cmp
mov
inc
or
into
pop
or
xchg
movsb
test
jmp
mov
mov
call
movsl
aam
pop
js
and
mov
mov
aaa
out
cli
pop
fs
fimull
xchg
pop
orl
insb
sub
lea
mov
push
das
dec
mov
lock
mov
cmp
es
nop
mov
mov
add
mov
aaa
inc
outsb
add
mov
insb
sub
mov
lret
repnz
jp
repnz
push
xchg
xchg
dec
pop
xchg
aas
or
nop
int3
pop
das
arpl
aam
pusha
mov
aad
into
adc
xchg
mov
jl
les
and
sbb
std
xchg
fcmovu
cmp
or
cmp
icebp
fstpl
enter
xchg
mov
loopne
add
xchg
ficoms
push
js
sub
mov
rcrb
ljmp
pop
filds
xchg
scas
std
fsubl
push
test
sarl
jge
mov
mov
jecxz
popf
dec
pop
mov
popa
fdecstp
mov
clc
jge
es
inc
les
fucomp
mov
cs
mov
jg
repz
fdivr
push
and
add
adcb
outsb
xchg
cmp
or
pop
sbb
cli
inc
loope
insl
les
gs
lret
xor
cld
inc
mov
cmp
push
jnp
cmp
cmp
dec
mov
imul
ret
lret
mov
inc
js
bound
fstpt
cmp
repnz
iret
sahf
adc
addb
push
sub
in
xchg
cmpsl
and
jg
fidivrs
and
loop
adcl
stos
ret
inc
bound
test
mov
imul
enter
out
pop
repnz
xchg
scas
mov
je
sbb
or
mov
movsl
fisubs
mov
lea
sub
mov
and
sbbl
jl
adc
cmpsb
js
lcall
mov
stos
inc
bound
push
adc
pushf
or
cmp
sbb
sub
shrb
mov
into
jle
incb
pop
clc
jp
or
lret
inc
and
sbbb
imul
jmp
add
test
mov
or
stos
jecxz
stos
dec
scas
mov
rcrb
jp
mov
inc
mov
inc
int3
pop
dec
mov
xchg
cs
mov
pop
cmpsl
stos
ds
mov
shrb
popf
mov
ret
imul
sbb
push
in
rcrl
cmpl
or
adc
daa
shl
clc
movsb
ret
and
out
mov
idivl
sub
mov
jl
add
xchg
mov
repnz
test
imul
outsl
popl
insl
movsb
jl
cmp
cmp
ret
in
std
sbb
adc
movsl
xchg
jns
out
push
or
test
test
outsb
mov
sub
push
pop
jne
sbb
pop
insl
jle
pop
shll
cmp
mov
jbe
test
rcr
push
and
sbb
pop
xlat
jns
mov
inc
jl
or
fcom
cld
sbb
xchg
test
lods
data16
stc
sub
jns
xchg
push
ret
mov
shlb
mov
push
jnp
inc
shll
xchg
adc
inc
push
sub
adc
mov
aad
in
fcompl
jb
pushf
sbb
mov
xor
ss
rcrb
mov
and
mov
sbb
push
mov
inc
stc
scas
dec
js
adc
call
popf
mov
xchg
add
push
insb
sbb
popf
sbb
cwtl
or
ret
sub
aaa
fsubrp
lock
out
js
hlt
cmp
and
loopne
fwait
cmp
xchg
incb
sbbl
sahf
scas
sub
les
xchg
mov
jecxz
stos
xor
xchg
cmp
push
add
pop
mov
lea
inc
xchg
hlt
sbb
cld
ficomps
inc
add
int
icebp
testb
mov
add
out
aad
mov
xor
repnz
cmp
pusha
cmc
dec
inc
dec
mov
sub
xor
lea
stos
test
jno
mov
lret
add
mov
lret
sti
mov
aas
xor
jecxz
jmp
mov
pushf
aas
shll
fcompl
jns
lahf
aaa
test
imul
stos
fidivl
aaa
cmpsl
xchg
add
dec
jnp
lcall
lret
add
sbbl
test
inc
fdivrl
cmp
leave
movsb
cli
ljmp
das
cmp
in
fcomps
aad
icebp
test
pop
sti
mov
fwait
xchg
and
xchg
xchg
xor
mov
cmpsl
es
ljmp
or
ljmp
aas
or
sbb
sbbl
or
sub
loop
orl
rolb
lock
sub
or
mov
push
inc
mov
jp
xor
push
test
mov
pop
xlat
mov
pop
dec
push
cmp
or
ficoms
jl
jns
and
scas
jo
xor
sbb
mov
clc
pop
dec
pop
std
push
movl
or
out
insb
icebp
gs
xchg
pushf
test
pop
addr16
insb
dec
ss
jge
cld
xor
sbb
push
push
roll
cmpsb
pop
jno
add
jae
xchg
addr16
inc
xor
test
add
inc
aaa
lock
lods
fwait
shll
dec
fwait
mov
mov
sub
inc
inc
lods
push
es
loop
push
outsb
xor
mov
dec
rclb
outsb
jmp
arpl
mov
pop
loopne
and
sub
rclb
push
in
push
jno
lret
int3
dec
test
pop
cmc
adc
adc
cmp
imul
jnp
outsb
push
outsl
xor
mov
adc
fadds
rorl
xorl
repnz
mov
repz
mov
addr16
leave
adc
cmp
in
adc
dec
call
pushf
in
cmpsl
adc
stos
cmp
fldenv
adc
icebp
add
lret
adc
mov
sub
adc
or
js
and
xchg
dec
cmpsb
bound
push
add
inc
mov
cmpsb
jg
std
dec
ret
cld
lahf
push
or
inc
sti
adc
lcall
sub
xor
xchg
jp
dec
jmp
push
cmpsl
mov
mov
packsswb
inc
out
push
leave
cwtl
and
jle
xchg
pop
popf
lret
into
cld
mov
test
mov
pop
arpl
xchg
insb
popf
mov
pop
repz
rclb
andb
fwait
outsb
enter
cmc
cmp
xchg
mov
inc
or
cmp
inc
jmp
sbbl
xchg
int
push
scas
out
xchg
in
andb
mov
and
inc
repz
and
into
mov
aad
adcl
xchg
loopne
sub
scas
shll
addr16
lcall
jb
mov
push
xor
push
dec
xchg
mov
xchg
shl
push
inc
cmc
pop
ret
adc
and
or
sti
pop
and
repnz
sub
or
xchg
test
push
aad
pop
insl
fstps
sub
gs
add
sahf
gs
aam
rcl
fdivs
or
mov
fchs
mul
mov
popf
popa
sub
das
in
mov
inc
das
movsb
outsb
mov
and
imul
out
pop
stos
mov
adc
lcall
dec
mov
iret
sbb
xor
ror
mov
xchg
cmp
aas
std
cltd
lods
jnp
or
mov
test
into
cmp
xchg
jmp
jae
mov
xchg
adc
out
jmp
outsb
addr16
push
inc
pop
mov
into
outsl
xchg
mov
and
fincstp
and
mov
xor
loope
ret
push
stc
fcmovne
jo
mov
mov
clc
fdivrl
jmp
inc
sti
xchg
mov
mov
inc
sub
and
insb
inc
xchg
pop
out
lcall
jle
sub
pop
sbb
rclb
push
outsb
mov
add
jl
xor
es
or
cmc
pusha
out
dec
insl
jo
mov
repnz
pop
aas
out
mov
adc
and
sbb
xor
outsl
fisubl
push
leave
ds
leave
cmp
xor
mov
adcl
int
fldcw
mov
pop
inc
mov
and
dec
in
push
mov
lahf
loope
loopne
lds
scas
xorl
repnz
aad
mov
adc
mov
rcll
rorb
mov
xchg
inc
or
sbb
or
dec
sbb
cmc
add
test
pop
ljmp
ror
sbb
jle
xchg
lods
out
xor
dec
loop
add
loop
fdivr
insb
cmp
sbb
push
jb
inc
sahf
shlb
repz
xchg
mov
jg
js
sbb
add
andl
fs
repz
bswap
add
sub
in
fstl
mov
lcall
aad
inc
imul
gs
push
lods
xor
fsubrs
push
sbb
lret
in
jno
nop
lds
call
mov
jmp
cmp
mov
jo
add
xchg
jb
test
mov
adc
sbbb
rol
pop
sub
inc
mov
in
imul
ds
and
pop
adc
or
lds
or
mov
out
in
xor
jmp
repnz
aas
push
insb
stos
mov
adc
jae
jle
lods
aas
fs
int
ret
nop
pop
icebp
push
cmp
in
sbb
cld
out
repnz
mov
dec
fsub
and
out
rcrb
inc
scas
push
gs
inc
filds
mov
xor
movsb
adc
enter
mov
inc
test
cmpsl
xor
jge
dec
mov
xchg
mov
jbe
repz
test
in
and
or
addr16
xchg
out
inc
fdivrs
sbb
sub
mov
pop
std
xchg
xchg
add
push
mov
push
xor
outsl
sbb
mov
in
loop
sub
jl
int
ret
mov
push
push
es
or
mov
inc
sub
push
lcall
mov
mov
leave
cltd
aaa
mov
pusha
pop
clc
inc
int
outsb
pop
and
sbb
xchg
mov
fs
push
jmp
inc
fwait
pop
mov
jae
xchg
push
outsl
push
jae
cmp
mov
in
xchg
std
or
icebp
xor
aad
cmp
ja
cwtl
fcoms
pop
xchg
sbb
lret
movsb
jno
pop
xor
push
rclb
aas
das
push
mov
inc
pushf
xor
cmp
cmpsl
sub
ss
div
js
or
fistpl
mov
cmpsl
mov
pop
cmp
sbb
jge
xchg
push
push
popa
ds
rcrl
or
pmuludq
pushf
and
stos
out
xor
xchg
or
xlat
fldl
push
movsl
hlt
movl
sbb
ret
adc
mov
pop
lods
ss
push
lret
test
lea
in
mov
lret
xorl
int
jl
cmp
mov
cli
loope
jne
jb
adc
jne
cmpl
stc
cmp
adc
sub
inc
pusha
jmp
sarb
xlat
sbb
and
xchg
in
and
ljmp
aaa
add
sub
clc
xor
mov
sbb
cld
in
fcompl
call
xorl
inc
or
std
and
shlb
lret
inc
loop
push
outsb
add
test
pop
pop
fnstenv
test
add
fs
ljmp
sahf
rorl
xor
cmpsl
jl
cmp
jle
or
cmc
xchg
inc
insb
adc
fwait
ret
add
cmp
lgs
adc
ljmp
inc
pop
jecxz
dec
fimull
sbb
mov
insb
mov
mov
ss
je
or
ja
cmpl
test
popa
jne,pt
sub
mov
lret
push
adc
inc
cmp
sbb
xor
xor
inc
xlat
inc
or
cmp
fstl
icebp
scas
cmp
popa
fmuls
in
xor
lds
push
xor
popf
xchg
adc
cmpsb
aad
jns
mov
jp
jb
leave
cmp
sub
popa
xlat
add
sbb
cwtl
sub
out
neg
aas
pop
push
fiaddl
lret
sbb
mov
fwait
pop
out
inc
inc
inc
mov
inc
dec
dec
rcl
sub
xor
xor
push
add
scas
pop
mov
aaa
jbe
mov
jle
jo
int
mov
xchg
popf
xchg
stos
pop
ja
push
dec
ljmp
nop
jmp
loope
es
pop
and
mov
jne
es
mov
inc
cmpsb
mov
stc
xchg
mov
dec
mov
jecxz
fistpl
push
pop
sbb
insl
popf
ja
ja
call
cmpsb
sbb
sub
jge
inc
cli
loop
sbb
insb
lahf
mov
xor
ret
jp
leave
xor
hlt
xchg
xor
lods
cmp
mov
push
mov
int
ficompl
jp
dec
test
dec
insl
pop
jno
inc
jp
leave
sbb
mov
cld
adc
test
in
inc
xchg
outsl
fs
mov
adc
sub
pop
imul
cmp
std
out
and
out
negl
mov
stos
fwait
sbb
or
add
rolb
adc
test
inc
call
lds
mov
cmp
push
cmp
sbb
subl
sub
cmp
inc
stos
and
push
xor
xchg
into
shlb
jmp
push
test
mov
xor
in
std
adc
push
orl
popa
mov
cld
movsb
fildl
fs
or
fisubrs
cmp
dec
mov
repnz
pop
outsb
sarb
addr16
dec
xchg
shll
out
sub
pop
pop
out
inc
mov
loope
jge
jnp
into
lds
xor
cmp
ljmp
jae
inc
xor
fildl
and
nop
push
les
ja
arpl
mov
add
xchg
stos
inc
ljmp
cs
sbb
jbe
in
shl
xor
pop
cmp
jecxz
in
jnp
sbb
movsb
xchg
leave
orb
sbb
jo
dec
xchg
cld
jg
negl
cmp
ja
aaa
mov
xchg
lock
inc
add
jecxz
push
mov
fldcw
std
add
and
test
loopne
pop
cmpb
fwait
jnp
aad
mov
stos
popf
dec
pop
lahf
inc
lods
in
in
lahf
in
and
and
add
push
jb
pop
adc
mov
jl
rcr
push
fwait
ds
test
and
cmp
and
jmp
lret
push
pop
lock
in
out
xor
xchg
cmp
stos
testl
leave
stos
lret
and
enter
lret
dec
push
jb
xchg
adc
xchg
adc
fcoms
loopne
icebp
cmp
movsb
fs
jmp
adcb
xor
iret
outsb
mov
imul
mov
enter
les
mov
jle
std
cmp
cmp
ja
daa
xorl
fwait
jp
mov
int
testl
adc
sbb
pop
lcall
out
cmp
jg
daa
inc
or
movsb
mov
add
mov
sbb
and
add
jbe
sub
je
mov
jecxz
imul
lods
cmp
hlt
add
inc
push
jbe
movsb
fimuls
test
jns
xlat
sarb
loopne
js
dec
inc
enter
jno
xor
pop
xlat
cld
add
sub
xchg
fnstcw
aad
push
in
ljmp
sub
add
pop
xchg
movsb
idiv
jns
rol
or
adc
mov
jne
outsb
call
add
mov
mov
adc
mov
jle
and
imul
call
ja
addr16
adc
daa
add
ret
out
cli
mov
cld
imul
cmp
mov
mov
lret
lods
jns
ss
and
mov
cmp
pop
sbb
inc
and
pop
scas
pusha
mov
out
xor
fsubrs
xchg
mov
xchg
cmp
movsb
push
in
mov
orl
inc
pushf
or
pop
mov
int3
clc
jno
movhps
mov
into
push
fadds
rorl
cmc
scas
mov
add
sbb
es
mov
or
cmp
and
mov
arpl
stos
lahf
ja
nop
xor
jp
sbb
or
adc
jmp
repz
dec
inc
inc
cmpb
fwait
repz
cltd
sbb
or
push
sbb
and
dec
mov
adc
popf
rcrb
pop
dec
lahf
inc
xchg
iret
aad
sub
ficompl
mov
xor
in
push
pop
imul
mov
pop
push
aad
mov
push
xchg
and
in
fstpt
push
dec
mov
adc
and
aaa
stc
inc
dec
push
dec
les
mov
adc
out
in
cmp
jmp
lods
mov
xor
inc
ds
xchg
mov
sbb
dec
sub
call
aam
in
pop
cmp
fnstenv
mov
out
mov
mov
adc
and
je
js
fcoms
idivl
xchg
enter
cld
js
pop
std
jp
repnz
mov
subb
popf
fnsave
test
sbb
cld
xor
and
sarl
cltd
sahf
fcmovbe
sub
sub
jp
mov
add
dec
push
and
fcmovnb
in
cmpsb
hlt
scas
xor
testb
sbb
adc
inc
and
std
cld
gs
adc
mov
sahf
in
sub
mov
push
add
mov
push
mov
sbb
sub
push
or
cmc
add
mov
fsubs
lock
aaa
inc
add
inc
push
movsb
cmp
in
adc
aaa
aam
notb
sahf
cli
bound
inc
xchg
lret
pop
faddl
push
sahf
jo
scas
imul
ss
jle
and
sbb
inc
fsub
push
dec
cltd
pop
push
cmp
inc
and
inc
dec
nop
add
aas
jecxz
push
sbb
gs
push
loope
sbb
xor
jp
rorl
xchg
inc
das
mov
clc
push
dec
sbb
mov
shll
aad
dec
in
imul
aad
scas
cmpsl
xchg
pop
cmp
pop
cmpb
mov
jg
push
mov
or
subb
stos
jns
sub
xchg
inc
fcomps
xorb
mov
imul
push
xchg
movsb
andl
cs
push
add
mov
jecxz
lret
repz
das
movsl
mov
aam
add
jl
xchg
nop
dec
push
pop
sbb
xor
inc
int3
mov
out
rorl
fisttpll
fs
mov
jp
add
inc
ja
xor
je
cmp
or
push
shrb
fs
xchg
js
add
xor
loop
push
test
mov
in
aas
jb
jle
xor
clc
or
std
in
mov
lret
ficoms
pop
fdivrl
jb
es
addr16
sti
test
enter
jl
adc
adcb
sbb
rolb
repz
jns
xor
shr
mov
jno
aas
movb
pop
pop
mov
inc
push
lods
cmp
jg
shll
or
repz
fisubl
sub
xchg
int
jnp
cmp
and
adc
insl
inc
cmp
outsl
sbb
repz
jo
push
push
push
xchg
push
pop
fisubs
inc
popf
push
jbe
ljmp
xchg
shrl
jns
sub
dec
cmc
jbe
push
mov
and
adc
inc
jb
cmp
xchg
testl
add
pushf
mov
and
and
inc
xlat
push
icebp
out
int3
bound
imul
add
ljmp
dec
bound
and
mov
push
mov
inc
inc
or
adc
pop
inc
xorl
xchg
pusha
ret
inc
inc
popf
pushf
jno
ror
add
cmp
mov
mov
icebp
push
stos
lret
std
cmp
sti
shrl
adc
or
sub
pop
adc
pop
lds
ret
xor
inc
xchg
in
mov
lahf
jbe
push
scas
sub
sbb
cwtl
mov
push
repnz
inc
or
mov
lahf
test
bound
popa
jno
and
aad
jo
scas
mov
mulb
pushf
mov
jl
je
hlt
jle
aam
sbb
mov
scas
fldcw
push
inc
dec
jecxz
imul
or
test
or
jl
jb
mov
mov
push
inc
test
addl
xchg
es
mov
and
sub
sbb
mov
adc
fstps
cmp
lahf
push
xchg
mov
lret
inc
mov
cmp
subl
mov
icebp
mov
aam
inc
addr16
xchg
bnd
adc
push
int
sbb
pop
inc
inc
jbe
or
xchg
jbe
sub
jo
jecxz
sub
fmul
test
mov
into
or
dec
sub
out
je
lcall
hlt
lret
imul
jg
xor
bound
pusha
lods
mov
xor
mov
sarb
mov
test
mov
sarl
pop
mov
lcall
test
bound
shrl
cmpl
pop
pushf
lahf
dec
mov
dec
bound
sahf
xlat
leave
idivl
addl
sahf
mov
test
fadds
inc
jg
xchg
lcall
aaa
je
dec
mov
lea
iret
mov
mov
ja
xor
ds
jb
xor
popf
push
or
js
xchg
fs
fnstsw
inc
dec
loop
mov
loopne
xchg
pop
pop
fnstsw
push
adcl
or
push
fstpt
or
adc
add
iret
mov
mov
jbe
pop
cld
pop
stos
mov
loop
loop
mov
leave
stos
sarl
loopne
iret
xor
cmp
orb
pop
push
sbb
cld
push
push
repz
inc
shrl
into
scas
cld
cmp
popf
mov
push
xchg
mov
in
roll
sahf
sub
push
popa
mov
in
out
pop
inc
in
jb
or
rcrl
pusha
jno
pushf
jecxz
pushf
mov
push
mov
mov
mov
push
xlat
mov
and
inc
fidivs
lods
in
repz
repz
cld
pop
loop
dec
into
cmp
mov
sbb
xchg
pop
aad
aam
dec
lds
in
or
idiv
jecxz
cli
pop
pop
test
dec
fsubrp
enter
nop
mov
rcll
sbb
jne
out
jne,pt
cmp
xor
and
faddp
push
imul
xchg
aam
cmp
mov
leave
in
arpl
inc
sbb
push
xchg
movsb
int
jecxz
mov
jle
pop
xor
addr16
lds
cmp
add
lahf
or
arpl
push
fstps
sbb
jp
insb
mov
adc
cmpb
mov
fwait
jno
orl
and
aad
pusha
inc
aaa
adc
add
jecxz
hlt
dec
imul
add
pop
dec
push
bnd
outsl
adc
mov
add
lahf
dec
push
adc
sub
inc
cli
sarl
imul
in
push
inc
popf
ficomps
adc
cmp
cmpsl
xchg
mov
inc
arpl
lahf
sub
xor
out
cmp
mov
arpl
stos
repz
push
andl
and
pop
dec
inc
adc
adc
add
mov
data16
in
xchg
adc
sbb
mov
cli
xchg
sbb
lock
adc
shll
adc
inc
and
mov
sbb
pushf
pop
cs
fstps
pop
jle
in
pusha
xor
jae
sbb
mov
cmp
clc
fdivrp
nop
je
ds
mov
jno
mov
sub
pop
int3
pushf
lret
mov
mov
xchg
sahf
add
fsubl
popa
outsl
or
arpl
jle
add
xor
pop
movsl
inc
mov
pop
shll
out
push
ss
ds
sub
mov
pusha
push
add
pusha
inc
fs
dec
mov
scas
cmp
jge
or
neg
add
stos
cmp
movsl
movsl
leave
dec
int3
shl
dec
movsb
adc
aas
loopne
cmp
xor
or
cmp
inc
mov
int3
daa
push
adcb
jnp
lea
or
add
imul
lret
fmull
imul
pushf
clc
mov
jnp
imull
mov
inc
call
adc
ljmp
insl
and
or
push
fwait
mov
xchg
and
inc
insw
mov
cmpsb
mov
shll
or
daa
mov
cmc
cmc
sbb
and
xchg
mov
enter
xchg
pxor
aas
xchg
sti
cmp
mov
jge
dec
dec
negl
jge
loop
inc
push
popl
xlat
in
loope
adcl
daa
mov
mov
xchg
mov
cmp
jecxz
cmpsl
jb
popa
sbb
fmul
out
push
xor
movsl
mov
jb
pushf
jb
or
insl
in
mov
cmp
jnp
jg
jns
enter
call
sub
pop
mov
dec
out
mov
lods
test
sub
aaa
outsb
bound
rolb
jne
inc
test
mov
stos
rcl
shlb
jmp
mov
mov
or
mov
les
aaa
in
jge
imul
lods
lcall
xchg
fwait
jns
xchg
or
lods
lods
sub
sbb
mull
insb
xorb
push
leave
or
jle
fwait
or
mov
scas
pop
das
mov
rcl
call
imul
mov
not
popa
dec
cli
popa
mov
movsl
adc
mov
dec
int3
fldln2
clc
lods
add
fisubrs
cmp
sub
in
repnz
jp
push
sbbb
inc
pop
int3
lret
js
jmp
out
outsl
outsl
pop
lret
or
mov
pusha
dec
jne
outsl
in
add
jae
les
movsb
cmp
lds
jl
pop
int3
inc
xor
loop
idivl
rcl
pushf
sarb
rclb
adc
cmpl
jecxz
adc
adc
orl
push
pop
ja
les
add
bsf
mov
sub
mov
mov
xlat
push
xor
mov
adc
push
roll
and
cli
xchg
fcom
dec
inc
loop
arpl
faddl
roll
ret
ss
mov
repz
sbb
nop
clc
lcall
hlt
jns
mov
or
mov
jbe
xchg
mov
aas
push
sub
call
stos
jmp
push
mov
sub
mov
sub
das
jno
sarl
das
or
xchg
fsubrp
imul
adc
mov
loope
or
xchg
addl
pop
das
xor
jae
cwtl
mov
mov
fisttpll
mov
inc
ljmp
add
cmpsl
out
xchg
push
or
or
in
hlt
bound
loop
mov
out
or
mov
adcl
add
cmp
inc
xor
ds
and
in
push
rorl
cli
outsl
xor
call
stc
ljmp
stos
mov
pop
sbb
aam
mov
ret
and
ljmp
pop
in
js
jge
fdivrp
fwait
sub
push
add
push
movsb
shrb
ret
cmpsl
cli
es
into
lods
jmp
xor
sub
movlps
xor
mov
repnz
inc
addr16
ljmp
xor
dec
fldln2
push
repnz
ret
imul
cli
rclb
adc
mov
cmp
lcall
jecxz
daa
jae
pop
rcll
sub
ljmp
push
subb
pop
mov
jb
sbb
fistl
mov
lahf
cmp
push
aas
ss
inc
pop
das
mov
inc
out
push
movsl
sub
jns
sub
icebp
cwtl
jmp
popa
ds
push
mov
jmp
pop
sub
std
outsb
jno
dec
icebp
pusha
add
pushf
scas
inc
mov
iret
movsl
inc
mov
ret
fidivl
imul
jnp
pop
je,pn
imul
sbb
adc
adc
push
pop
adc
and
inc
cmp
inc
fsts
inc
inc
push
push
cmp
fstps
cmpsl
jo
orl
lret
mov
mov
xor
ss
lods
cltd
jge
pop
mov
push
cmpsl
clc
out
and
xchg
je
xor
mov
push
or
daa
cwtl
inc
orb
add
and
sbb
pop
or
mov
xor
add
ljmp
add
cmp
test
sbb
jl
mov
adc
pop
cmp
jl
xor
ljmp
fs
cmpsb
shll
pushf
inc
xchg
push
aad
adc
repz
add
out
fistps
jnp
mov
jo
inc
imul
mov
lret
and
push
fisttps
and
ja
les
or
ret
or
xor
out
fs
jl
js
subb
in
xor
sbb
xchg
cmp
sarb
inc
inc
loopne
mov
loopne
mov
and
sahf
pop
addr16
lds
subl
sub
add
inc
into
or
pusha
xlat
and
imul
outsl
cli
xchg
jae
imul
cltd
out
lock
pop
dec
lods
mov
mov
xor
rcr
hlt
xorb
lret
aam
scas
dec
test
mov
pop
jecxz
subl
fisubl
jl
lock
xor
xchg
inc
mov
dec
enter
test
fisubrl
and
sahf
jge
clc
faddp
test
mov
jne
fcomps
and
and
cltd
adc
cs
xchg
mov
mov
addl
fwait
mov
cmp
xor
roll
or
xlat
cwtl
pop
mov
mov
mov
repz
jmp
inc
mov
or
jno
xor
jecxz
les
fnstenv
jae
ss
stos
xor
mov
hlt
inc
sbb
cmp
daa
mov
nopl
mov
inc
adc
call
int3
adc
push
add
xlat
adc
add
or
xor
dec
aaa
daa
pusha
addr16
mov
in
sbb
and
stc
mov
adc
add
xlat
sbb
sub
imul
outsb
push
pop
je
cmp
sbb
sbb
xor
xchg
sbb
adc
popa
xchg
mov
bswap
push
jecxz
div
loopne
iret
and
fmull
inc
popa
std
mov
loope
orb
cmpsl
mov
adc
adc
clc
or
xor
mov
mov
sub
adc
mov
xor
inc
pop
xor
sbb
xchg
push
in
arpl
sbb
adcl
sub
pushf
bnd
in
call
add
sub
in
add
mov
es
cwtl
jge
outsb
mov
xchg
dec
adc
lcall
jecxz
xchg
add
out
mov
sbb
push
pop
je
mov
sbbb
add
mov
int3
mov
arpl
lods
in
pop
sbb
and
xchg
cmpl
xchg
jge
pop
or
arpl
sbb
adc
and
fadds
cmp
dec
xchg
xor
cmp
push
shll
iret
cmpsb
les
xchg
lcall
adc
mov
sub
call
sbb
mov
xor
pop
ss
inc
push
lret
movsl
pop
xor
loope
push
pushf
pop
dec
ficoml
pop
jg
push
mov
es
filds
fsubl
shl
push
mov
pop
nop
dec
adc
stos
push
pop
sbb
ja
jb
fimuls
popa
scas
out
inc
ljmp
inc
add
pop
pop
xor
cmpsb
xchg
movsl
push
nop
xchg
int
in
sub
and
divl
inc
fsubr
cmp
shlb
jne
aaa
cmpsb
popa
shll
cmp
pop
mov
enter
xor
pop
in
jmp
or
and
sub
jnp
and
rcll
jnp
jo
cmp
cmp
mov
ds
in
fwait
cmp
dec
mov
pop
jnp
cmc
push
push
das
fwait
inc
mov
dec
negl
cltd
jns
xchg
cmp
jle
imulb
jge
cltd
push
rcr
add
xlat
out
inc
inc
iret
subl
mov
inc
pop
sbb
jmp
mov
xor
pop
jb
aaa
push
cmp
fcmovu
or
test
lcall
fisubl
test
mov
lods
pop
ja
iret
sbb
les
xorl
jne
repz
idivl
adc
jge
ja
je
fwait
push
push
dec
adc
xor
or
cmp
mov
test
pop
out
iret
movsb
cmpsl
dec
push
xchg
fcom
in
std
rcrl
xchg
movsl
mov
add
andb
xchg
aas
sbb
icebp
pushf
aad
shrb
mov
push
jnp
pusha
lods
out
in
mov
aas
add
in
or
arpl
adc
test
mov
js
movsl
int
movsl
xor
outsl
out
imul
mov
fsubrs
stos
aad
sub
stc
sbb
rcrl
fdivl
pop
push
je
add
pop
enter
cmpl
add
pop
pop
xlat
inc
test
xchg
cmp
ds
sub
ljmp
sbb
fildl
jecxz
jecxz
xchg
cmp
mov
adc
dec
cmp
and
out
xor
or
dec
add
jl
into
lds
repnz
xchg
testl
cli
arpl
jbe
dec
inc
shrb
mov
aad
movsl
mov
xchg
jge
enter
in
jae
in
aad
cmp
xchg
shl
mov
sti
test
je
jne
idivl
movsb
jge
cmc
adc
xchg
popf
adc
inc
mov
xchg
shl
xor
mov
stos
movsl
sbb
or
xchg
mov
jg
pop
xor
add
add
imul
sbb
out
movsl
mov
fwait
popa
lret
jne
daa
pop
mov
jnp
dec
into
adc
arpl
xchg
and
fsubrl
sbb
dec
xor
xchg
stos
mov
test
adcl
sub
add
imul
jnp
fstl
movsb
push
loop
sub
adc
xlat
mov
or
loope
pop
mov
xchg
inc
sarb
lds
inc
loop
sbb
bound
adc
imul
test
add
sub
jmp
xchg
or
sub
es
insl
into
rcr
call
or
sti
cmpsl
mov
cmp
je
in
pusha
sbb
jne
adc
lret
sbb
mov
ss
sub
jle
fstpl
int3
sbb
clc
xor
pop
cs
cmp
movsl
and
sub
jne
je
inc
fwait
scas
test
nop
jbe
inc
jge
movsb
ss
xchg
movsl
imul
flds
mov
inc
or
cmpsl
pop
sbb
mov
jge
mov
pop
jge
pushf
dec
seto
xlat
adc
rclb
shll
imul
enter
daa
call
mov
xchg
fildll
xchg
xchg
test
mov
les
mov
pop
icebp
ljmp
loope
ds
inc
int3
mov
mov
mov
xlat
insb
push
pop
lcall
mov
testl
inc
dec
icebp
imul
push
sbb
shrb
sub
data16
arpl
push
cvttps2pi
jns
ss
test
loop
mov
pusha
sbb
dec
jl
fstpl
stos
adc
fdivs
xchg
leave
hlt
inc
loop
mov
clc
xor
loop
or
lret
pushf
add
inc
fbld
mov
pushf
add
jp
cmpsl
mov
rorl
repz
cmp
sub
divb
popa
pushf
mov
dec
ss
mov
out
push
popf
ja
jecxz
addr16
sbb
lds
pop
xlat
fistpll
xchg
or
dec
es
loope
xor
shll
loop
addl
add
test
push
and
ja
cmp
jg
ss
in
imul
push
jg
jmp
sbb
adc
in
inc
ss
mov
cmc
pop
sbb
or
movsl
insl
nop
sbb
jno
ror
push
sub
shlb
add
sbbl
dec
js
jge
enterw
pop
leave
sub
pop
sub
int
pop
sub
cwtl
sbb
push
mov
cmp
repnz
cli
dec
or
pusha
jg
je
add
bnd
lret
and
adc
int3
mov
mov
popf
push
sahf
add
gs
orb
insb
ss
inc
dec
jle
jmp
and
les
std
cmpsb
jo
ret
jns
lods
pop
mov
aas
pop
sahf
test
xchg
dec
ljmp
mov
or
dec
sbb
sbb
jb
scas
mov
rcr
fwait
loope
mov
lds
push
inc
and
cmp
mov
sahf
xor
push
enter
ret
or
addr16
jge
scas
push
dec
pop
mov
mov
repz
xor
sbb
adcb
and
or
adc
mov
xchg
loopne
mov
add
inc
daa
scas
ret
popf
dec
lret
sti
filds
add
mov
xchg
sbb
ds
and
add
lea
adc
push
and
loop
sbb
sbb
call
insl
mov
imul
test
rorb
push
push
dec
jo
inc
mov
mov
iret
es
fidivl
cmp
pop
stc
loope
xor
add
sub
in
inc
fdivrs
roll
mov
hlt
adc
jl
xchg
fld
mov
lcall
sub
xor
push
xchg
mov
xchg
outsb
movsb
dec
lea
inc
sub
sub
xchg
mov
jmp
iret
xchg
daa
dec
rorl
dec
cld
jmp
mov
jmp
lods
pop
fs
in
mov
push
test
pop
out
inc
repz
xchg
cld
fldenv
inc
int
hlt
test
call
loope
fs
mov
inc
fmuls
add
xchg
std
js
enter
inc
jo
add
inc
ds
mov
mov
rcrl
inc
stc
gs
paddsw
mov
jnp
je
rcrb
pushf
add
inc
bound
mov
xor
cmp
dec
jo
jmp
fstpl
sub
cmp
push
fsubs
xchg
bound
roll
leave
rolb
mov
add
mov
sub
aam
sub
xor
jne
clc
je
and
and
pop
mov
fldt
pop
inc
in
jg
add
and
iret
int3
xchg
pop
mov
cmp
cmpsl
or
out
pop
insb
add
dec
ljmp
loop
scas
out
ret
ret
clc
insb
jmp
call
jnp
dec
xlat
mov
aam
test
mov
xchg
insl
mov
out
mov
std
shr
mov
and
lea
mov
xor
cmpsl
mov
movsb
push
xchg
xchg
rcrl
push
in
das
xchg
sub
jg
xor
popa
sub
jmp
inc
push
sbb
jle
cmp
imul
hlt
lods
mov
lret
pop
pop
lock
in
and
xchg
inc
add
adc
shrb
xor
xchg
into
mov
jnp
mov
cmp
lods
jge
test
mov
aas
shlb
or
jl
push
xchg
pop
subb
jno
adc
xchg
add
sub
cmp
jbe
mov
cmp
xchg
dec
xchg
out
ficoms
hlt
test
out
inc
leave
icebp
pop
jae
cld
jae
pop
xchg
jo
sub
xchg
test
test
pop
mov
pop
ror
test
lret
xor
xchg
mov
das
jbe
and
mov
add
push
mov
lahf
cli
imull
loope
fistpl
or
ret
shll
cld
bound
ret
mov
outsl
add
repz
pop
push
push
xor
cmp
mov
cmp
sub
mov
push
pusha
mov
sub
sbb
dec
sbb
filds
out
jecxz
scas
or
sub
xchg
or
mov
mov
icebp
int
fcmovnb
outsb
repz
mov
dec
xor
jg
and
jl
lock
bound
outsl
bound
inc
imul
int3
divb
fistpll
dec
sbbl
call
sub
or
je
inc
and
mov
add
outsb
mov
cmp
sub
cld
push
int
dec
cmpsl
loopne
sbb
shll
hlt
add
or
pushl
orb
popa
dec
add
xor
mov
xor
fwait
dec
mov
fdivl
cmpsb
iret
mov
mov
pop
call
push
xlat
lock
pop
imul
cmp
iret
sub
iret
out
jecxz
sbb
push
ja
fcompl
testl
mov
shlb
loop
ljmp
lock
aas
data16
movsb
sub
frstor
loopne
sbb
loopne
mov
add
sti
dec
adc
gs
or
push
push
pop
sbb
orl
fistl
sub
xor
mov
mov
and
cmp
fstpl
xlat
addr16
fnstsw
test
xchg
fsts
aas
sub
push
ja
scas
stc
lret
xor
mov
cmpsl
jbe
pop
mov
data16
scas
push
mov
or
xchg
inc
icebp
lcall
mov
sub
in
xor
jl
ljmp
ljmp
fcomi
add
hlt
mov
shll
adc
sub
rcr
mov
cmc
cld
dec
xor
inc
in
lods
testl
xor
imul
or
shl
daa
add
roll
sahf
xor
add
dec
pop
es
xor
jo
sub
mov
lcall
mov
cltd
xor
andl
jne
adc
mov
or
cmovb
jbe
mov
and
xorl
jns
stos
lods
les
call
jle
inc
loope
xchg
js
ss
pop
stos
mov
outsl
push
shll
out
adc
cld
or
jbe
movsl
out
cmpsb
or
mov
push
pop
add
xchg
xor
out
add
cmp
cmc
shlb
dec
in
std
xlat
add
cmpb
in
push
stos
leave
cltd
cmpsl
push
out
hlt
outsb
cmp
lds
je
push
lret
jne
pop
bound
int
xchg
int
jae
push
dec
test
inc
out
or
inc
adc
mov
fists
mov
sbbl
xor
or
jo
mov
in
ss
mov
dec
inc
push
mov
or
std
mul
and
lret
pop
xchg
push
jmp
lods
hlt
jno
pop
add
xchg
or
mov
mov
inc
and
ljmp
into
cmp
adc
push
push
and
fwait
cmp
lods
mov
inc
mull
jge
add
cs
jns
imull
dec
sub
fnsave
xchg
mov
and
inc
dec
fsubl
dec
repnz
cltd
add
mov
jne
dec
mov
mov
lret
fwait
std
xlat
or
adc
add
cli
mov
push
negb
cmp
jge
ss
ret
push
pop
push
cmp
mov
or
mov
mov
ss
cmc
std
mov
test
xor
mov
add
les
scas
lds
mov
pop
xlat
cld
mov
cmc
aaa
jae
cltd
xchg
add
cltd
jns
scas
ficoms
sub
pop
outsb
lret
rcrl
pop
push
jno
cmc
into
sti
scas
push
loope
adc
nop
mov
and
mov
or
jbe
pop
add
jp
pop
pop
insl
cs
jnp
sbbl
shlb
dec
add
add
lcall
stos
and
enter
cli
jg
push
popa
mov
and
insb
or
dec
xchg
xchg
in
fldcw
and
mov
pusha
mov
sti
xchg
iret
setl
mov
or
mov
lcall
imul
push
add
cld
or
mov
and
int
inc
dec
rorb
sub
sbb
loop
add
test
xor
and
test
das
rorl
mov
or
xor
sub
nop
in
mov
je
lds
xor
jnp
les
aaa
fsubr
jecxz
mov
push
sbb
test
ficomps
pop
sbb
popf
cmp
jae
mov
dec
aad
js
and
leave
jl
in
pop
jae
push
mov
jge,pn
mov
pop
in
cltd
sbb
movsb
gs
lock
pop
inc
jp
mov
pop
repnz
mov
xor
sub
test
ret
pusha
adcl
push
pop
and
test
scas
les
sbb
aam
xchg
test
lret
inc
mov
jl
and
push
sbb
mov
inc
push
call
outsl
les
mov
jle
mov
pop
add
pop
mov
pop
stos
ret
adc
clc
fidivs
pop
mov
das
clc
jb
lods
sub
or
adc
out
outsl
scas
xchg
add
int3
adc
and
fcomi
aas
jl
sbbl
sahf
loopne
add
in
je
cmp
mov
xchg
or
fdivl
mov
push
pop
insb
push
add
jecxz
jge
insb
mov
iret
xchg
rol
cmpsb
loopne
ja
fsubr
mov
mov
in
adcl
mov
aam
mov
ja
push
movb
int3
cmp
and
sbb
popa
inc
divb
lret
sub
enter
cwtl
popa
sbb
in
or
dec
ss
into
jb
ss
aam
mov
cli
mov
out
jecxz
iret
es
cmp
cs
xorl
fwait
js
mov
jecxz
sub
out
pop
stc
jmp
mov
jnp
popa
xchg
xchg
or
inc
inc
arpl
roll
leave
or
inc
jo
dec
pop
mov
jge
cmc
into
sub
dec
inc
pushf
push
inc
jo
cmp
sahf
cwtl
repnz
and
dec
xchg
push
aad
mov
rcll
in
shll
scas
iret
xor
mov
test
push
ret
adc
push
orl
inc
mov
rol
js
iret
dec
test
ds
inc
and
hlt
mov
clc
mov
mov
mov
dec
xchg
daa
push
sbb
xchg
fldl
lret
roll
xchg
and
jl
add
out
xchg
push
fcomi
fisubrl
push
out
iret
ss
data16
fs
in
ja
lods
std
clc
je
sub
stos
ja
mov
inc
int
ljmp
sarl
sarl
jg
jnp
lods
xor
inc
lea
leave
pop
fisttpl
sahf
jno
fwait
insb
xchg
sub
in
sub
sub
movsb
int
enter
jmp
leave
sbb
xor
icebp
lock
mov
mov
mov
or
aam
jo
std
xchg
enter
negl
pop
ljmp
mov
cmp
push
shlb
fldt
jo
js
cmp
or
loop
mov
adc
mov
inc
out
cmp
jnp
shl
cmp
and
fidivrs
push
incb
mov
or
push
mov
mov
inc
outsb
hlt
xchg
push
aaa
iret
inc
divb
into
insb
add
xor
cmp
xchg
xchg
subl
pop
mov
push
xchg
in
jns
repnz
mov
imul
mov
mov
push
ret
push
jge
add
repnz
add
stc
sbb
sub
cmc
push
push
cmp
sarb
repz
test
jg
add
cmp
outsb
out
push
popf
xlat
pop
xchg
popa
xor
inc
lahf
jge
sbb
out
outsb
sahf
scas
adcl
shl
loopne
adc
mov
stos
pop
out
mov
sbb
cld
mov
adc
add
pop
dec
cmp
sbb
xchg
lds
roll
push
inc
pop
adc
push
fdivrl
test
fsubrl
and
pop
aam
inc
xor
ja
cmp
xor
dec
movsl
inc
push
sub
jbe
push
outsl
push
adc
xchg
pop
test
inc
push
mov
sub
jo
leave
test
call
xchg
and
xor
jg
sahf
dec
ret
mov
adc
loopne
loopne
or
dec
inc
jb
pop
add
fistps
jecxz
andl
push
cmpsb
daa
push
in
into
push
fimuls
leave
arpl
jmp
data16
mov
jl
jnp
push
cmpsl
sbb
ficompl
cmpl
aam
or
sub
aam
cmp
inc
sub
jle
fildl
jle
jne
push
xor
je
ret
clc
aam
adc
rcll
inc
scas
cmpsb
pop
adc
lahf
imul
xor
adc
xor
push
sub
inc
sub
test
mov
mov
subb
xor
jl
jecxz
dec
mov
loopne
cli
pop
sahf
dec
mov
cmpsl
in
mov
mov
repz
mov
cwtl
int
cmp
mov
stc
push
sub
imul
movsl
mov
push
jnp
sub
psubusb
sbb
add
sbb
mov
repnz
jmp
push
mov
lea
xchg
add
xchg
in
inc
adc
pop
mov
insl
movsl
pop
xchg
adc
xchg
cmp
inc
andb
dec
cmp
aas
dec
daa
int3
dec
fldcw
mov
adc
dec
jb
push
cmp
sub
daa
and
gs
out
pop
test
das
leave
ljmp
movsl
scas
loope
jg
rcrb
cmp
push
outsb
test
jb
gs
mov
shll
or
push
testb
in
lock
cmp
es
and
xchg
cmc
pop
push
pop
dec
add
lock
jne
pop
mov
js
stos
fidivrl
mov
push
inc
in
fstl
add
lret
out
imulb
repz
pop
cmp
imul
jge
add
push
stos
or
aam
ljmp
stos
lds
xlat
sarb
push
mov
or
push
inc
inc
pop
inc
push
loopne
lahf
sti
ljmp
push
xchg
pop
fdivrl
clc
sbb
rcr
mov
inc
add
int
icebp
and
add
xchg
je
inc
sub
cmp
das
fs
mov
xor
mov
sti
mov
pusha
in
jno
shll
mov
outsb
iret
aaa
xor
mov
pop
pusha
stos
rcll
test
aad
xchg
mov
outsb
jo
mov
push
popa
cld
pop
nop
and
and
sub
xor
je
setg
aas
xchg
pop
inc
sbb
nop
bound
sarb
mov
dec
inc
movsb
push
test
xor
test
and
xor
mov
push
xor
mov
enter
in
lods
mov
sti
rcr
popa
iret
or
or
sub
push
mov
mov
mov
insb
jo
ja
out
adc
and
push
enter
and
jb
mov
adc
or
loope
push
or
jl
pcmpeqd
jo
adc
jl
repz
push
xchg
mov
aas
cmc
js
or
mov
jbe
decl
mov
jo
andl
mov
xor
xchg
sbb
int
repz
ucomiss
out
mov
xor
push
mov
adc
mov
mov
stc
leave
lahf
aad
lret
mov
pop
or
das
out
dec
xchg
sub
jl
scas
xor
push
pop
jo
jle
pop
inc
fmuls
orb
stc
dec
fiadds
imul
dec
test
movsb
add
cmp
sbb
call
push
mov
shl
and
mov
addr16
and
sub
cmp
adc
sub
lret
pop
fldcw
gs
es
and
pop
sub
jle
xlat
les
pop
insb
cmpsl
jl
or
out
aas
cli
js
mov
outsb
mov
fiaddl
dec
iret
xchg
nop
jo
cmp
jl
dec
pushf
movsb
stc
xor
or
sub
mov
dec
mov
cmc
mov
adc
into
rcrl
iret
add
ror
dec
push
lods
loope
nop
hlt
fprem1
xor
arpl
mov
add
cmp
dec
movsl
inc
lcall
or
or
lods
repnz
dec
lret
sbb
loope
push
js
sub
mov
cmp
icebp
stos
sbb
loope
push
add
lcall
and
fiadds
fiadds
test
imul
imull
imul
add
sub
cmpsb
cmp
push
mov
ret
xchg
push
and
imul
push
mov
outsb
sbb
lock
inc
je
hlt
dec
or
scas
popl
lds
adc
lahf
pop
pop
test
xchg
mov
xor
in
push
mov
call
jb
insl
cmpsl
cld
iret
loopne
mov
sbb
ficompl
fdivrl
out
subl
xor
aaa
rcrb
jecxz
sbb
push
and
adc
ret
pop
aad
and
movsl
in
add
ljmp
inc
mov
mov
and
bound
mov
test
mov
arpl
xor
loope
push
jbe
sub
faddl
popf
rcrb
in
push
inc
push
mov
pop
ja
pop
dec
mov
add
xor
scas
mov
pop
xchg
dec
mov
iret
dec
sbb
pop
jmp
pushf
xchg
xchg
sbb
aad
mov
ret
test
rolb
in
push
sbb
rorl
in
or
xchg
int
ljmp
dec
cmpsl
pop
mov
dec
and
cmp
out
pop
pop
clc
imul
mov
mov
pop
ljmp
lahf
and
mov
or
ds
lahf
pop
jnp
add
shl
fmull
dec
push
push
adc
cmp
jns
mov
inc
hlt
jl
fwait
pop
xor
mov
jbe
jmp
cli
sar
and
xchg
fstl
cwtl
daa
mov
xchg
jns
jbe
lret
xchg
jb
lods
adc
or
leave
cltd
dec
cmp
xor
dec
loopne
lret
test
es
aaa
mov
leave
sbb
ja
mov
stc
in
sub
nop
push
sbbl
pop
cmp
sub
mov
xchg
xchg
call
xchg
out
cmp
sub
xorl
fidivs
push
jo
adc
movsb
xchg
xchg
xor
dec
or
xor
call
and
decb
pop
mov
stc
pop
movb
xorb
mov
pop
dec
mov
testb
adc
mov
inc
js
pop
fldl
lret
cmp
or
mov
addr16
mov
sahf
jle
and
xchg
int
scas
fucomip
xor
sti
andl
call
add
jb
pop
loopne
aad
clc
sbbb
aas
cmp
pop
push
js
ja
sub
mov
and
fwait
std
fcmovnu
mov
inc
dec
dec
pop
popa
dec
js
or
mov
mov
roll
dec
in
xlat
iret
nop
out
sub
jge
sub
mov
les
adc
pop
decb
gs
dec
lods
or
sbb
hlt
in
jecxz
scas
or
pop
nop
add
les
mov
mov
or
mov
loope
test
test
cmpsl
stc
into
push
inc
scas
imul
or
inc
lock
test
ja
push
mov
cmpb
mov
jmp
jecxz
pop
xor
loop
nop
pop
cld
adc
inc
pop
mov
mov
rcrl
lret
jle
push
jg
ja
jecxz
push
dec
sarl
mov
sub
pusha
xchg
mov
mov
jnp
sarb
adc
mov
in
push
or
jnp
jg
dec
sub
in
fimull
jno
into
cmc
test
xchg
sbb
adc
stc
sbb
test
je
jo
adc
data16
jno
cmpl
das
daa
jge
les
pop
pop
jo
test
les
cltd
cli
movsl
sbb
xor
and
aam
pop
shlb
or
ret
add
add
stc
mov
sub
fistpl
push
xchg
out
sub
cmp
mov
push
rcll
dec
arpl
ljmp
mov
mov
push
enter
arpl
int3
sbb
rcrl
roll
inc
in
and
hlt
inc
or
loope
aam
xor
repnz
pushf
fwait
aaa
mov
pop
movsl
lds
shrl
xchg
pop
mov
inc
sbb
xor
xor
mov
push
push
push
es
lock
jp
xor
movsl
jbe
outsl
test
addr16
xor
packsswb
je
xor
and
fildl
mov
mov
lods
xchg
lock
adc
femms
iret
jl
mov
in
mov
xchg
pop
js
xchg
ss
gs
add
xor
dec
sbb
mov
popa
cmpl
in
or
dec
cli
ror
enter
add
jp
xchg
stos
stos
out
jns
mov
in
push
xchg
lea
push
sbb
jge
shl
cld
inc
push
fadds
out
jmp
cmp
pop
call
and
and
adc
loope
and
and
or
scas
add
jno
imul
push
imul
fbld
adcb
stc
mov
dec
popa
xchg
fcmovb
adcb
push
loop,pt
push
push
push
pop
stc
shlb
fwait
pop
xchg
insl
sub
sahf
lahf
std
jp
pop
fcoms
mov
std
cmp
lcall
aam
dec
or
lods
xor
sahf
insl
push
sub
sti
out
test
xlat
sbb
inc
xlat
lret
mov
repz
repnz
stos
sub
fwait
js
jl
cld
xchg
subl
jmp
dec
popf
mov
stos
add
jae
jns
jecxz
fnstsw
cmpsb
sarb
jo
fcmovbe
xchg
lods
mov
ret
sti
xchg
stos
sbb
cltd
mov
adc
sbb
mov
data16
pop
out
stos
int
and
into
jle
lret
roll
jbe
xlat
addb
dec
xchg
pusha
jae
mov
mov
out
cmc
mov
sub
xchg
fs
dec
ljmp
cmc
sub
js
shl
jae
aaa
sbb
push
xchg
jmp
add
enter
scas
xchg
fdivl
test
out
adc
shll
pushf
cmp
add
hlt
ja
inc
sub
dec
mov
jmp
pop
outsb
adc
in
or
fcomp
and
lret
lock
iret
push
fs
sarl
fdivr
pusha
push
cmpl
lds
and
adc
pop
ljmp
stc
lret
std
xchg
inc
cmc
je
sub
clc
ja
jg
cmp
movsl
mov
xor
add
dec
xchg
xchg
scas
sbb
sub
shlb
jbe
and
pop
xor
and
aaa
lret
or
sbb
mov
pusha
pop
sbb
fisubl
sbb
jnp
xor
ficoml
into
sbb
rep
inc
lret
insl
enter
cmp
inc
inc
cltd
cwtl
sub
call
inc
xor
pop
xor
imul
mov
push
fisttpl
jae
push
inc
es
add
sbb
fadd
inc
or
inc
sub
into
fsubrs
dec
cmpsb
mov
sahf
push
int
cmp
xor
mov
mov
jmp
iret
into
add
inc
mov
cltd
push
imull
fsub
lret
adc
insl
mov
dec
dec
jle
xchg
sti
rcll
iret
lods
mov
jbe
shll
pop
adc
test
nop
out
dec
mov
loop
adc
stos
insl
jmp
and
mov
outsl
cld
sub
call
mov
cli
cwtl
xchg
jne
dec
out
jno
add
mov
push
cmp
push
jge
lock
rcll
push
sti
sbb
sbb
xor
mov
jmp
pushl
xchg
out
xor
pop
mov
sbb
jno
cmp
mov
popf
xor
js
push
stc
inc
arpl
fcomps
push
icebp
jne
nop
or
ds
or
scas
adc
inc
int
xor
xchg
pop
jp
sti
mov
sti
xchg
aam
cmp
in
stos
fisubrl
sbb
add
adc
sbb
loopne
ficompl
cli
aam
add
jecxz
scas
jge
dec
xor
push
xor
mov
je
inc
arpl
scas
pop
sub
fnstcw
hlt
jns
push
lea
pushf
mov
or
sbb
pop
mov
push
or
pop
adc
imul
adc
and
lcall
shrl
mov
lcall
mov
scas
sbb
push
aad
push
jne
insl
sti
mov
pop
pop
loop
xchg
xchg
fisttps
cmp
hlt
xor
scas
xchg
in
cmpl
push
outsl
inc
jbe
loope
mov
xchg
inc
adc
add
mov
scas
aad
pop
test
sar
or
sbb
pop
popf
mov
dec
inc
jmp
iret
lea
test
call
jl
or
in
cmpb
mov
xorl
lods
jle
in
cmp
test
jnp
jle
das
out
fadds
xchg
push
ret
nop
das
inc
and
pushf
nop
and
xor
sbb
ret
cwtl
popf
lcall
mov
icebp
insl
je
and
fwait
dec
adcb
inc
fdivl
add
jge
mov
fsubl
pop
sub
jb
xchg
dec
mov
push
scas
out
es
pop
add
mov
mov
outsl
mov
adc
add
jae
fs
push
push
pop
or
lods
rol
lahf
lahf
les
cmpsl
mov
xchg
andl
popf
inc
sub
stos
sbb
push
dec
add
dec
xchg
orl
push
pop
popf
scas
sbb
mov
std
ret
mov
dec
or
mov
loopne
pop
std
xchg
test
repz
sar
add
mov
jmp
in
adc
cmp
jp
sub
pop
mov
ljmp
lcall
add
dec
cmp
xchg
pop
cmp
sbb
mov
ds
ja
scas
pop
fs
fnclex
inc
ret
scas
xchg
imul
add
adc
add
inc
in
cwtl
shr
add
inc
push
xor
add
data16
adc
mov
stc
fidivrs
xor
adc
xchg
out
enter
push
ljmp
dec
loope
arpl
js
pop
shll
and
out
ret
mov
into
and
popf
mov
clc
xchg
pop
or
subl
repnz
insb
mov
out
xor
pop
fs
mov
and
inc
stos
jmp
mov
push
cwtl
dec
mov
out
bsf
jbe
adc
lods
and
push
mov
ljmp
repz
fdivrs
add
leave
out
dec
jl
xchg
pop
aam
xchg
push
sub
mov
fs
pop
lds
sbb
pop
icebp
cwtl
dec
stos
ds
pop
nop
cmc
cld
stc
cmc
mov
mull
mov
jge
in
icebp
popf
psubd
scas
out
rcrb
or
lods
xchg
mov
movsb
mov
fsts
sbb
fildll
jns
xchg
mov
aam
in
cli
rcr
shrl
push
cli
sahf
shlb
push
mov
dec
push
xchg
xchg
cmp
mov
push
push
lea
in
in
jns
jg
out
xchg
and
sub
popf
mov
shlb
mov
xor
sbb
lret
xchg
cwtl
dec
pushf
fidivl
lcall
stos
insb
mov
xchg
adc
sub
cmpsl
xor
sbb
inc
dec
xor
inc
sub
mov
sbb
cli
mov
xchg
add
add
mov
fidivrs
and
cmpb
mov
or
pop
add
cmc
shl
ss
add
roll
mov
sbb
mov
les
adc
pop
iret
sti
nop
rcr
mov
repz
iret
in
stc
sub
add
movsl
es
inc
jns
jmp
in
push
mov
push
fildll
or
or
mov
cmp
repz
adc
sbb
pop
movsl
int3
xchg
inc
or
or
jo
mov
dec
adc
mov
sbb
dec
test
int
inc
dec
mov
jo
mov
mov
gs
mov
jo
and
iret
cmpb
pop
das
mov
push
int
ja
insl
daa
sbbb
movsl
xor
pop
loop
ja
lods
out
fnstsw
dec
mov
xchg
mov
cmp
aas
push
int3
outsb
aaa
inc
ljmp
pop
test
in
or
push
pop
push
lock
push
mov
pop
xchg
fsubr
lahf
mov
ljmp
lods
xorl
push
pusha
xor
cld
push
pusha
pop
loop
sbb
pop
mov
cwtl
pop
js
jle
push
mov
adc
and
sbbl
jbe
xchg
mov
nop
sbb
call
sbb
dec
jmp
push
push
fdivrp
cmpsl
push
lds
or
icebp
enter
cmp
outsb
cs
sbb
pop
jb
fiaddl
add
in
int
xorb
push
push
ret
cmpsb
inc
push
mov
fstl
ljmp
cmp
push
pop
nop
adc
outsb
orl
sbb
mov
adc
dec
fnstcw
fldl
in
inc
lcall
push
or
data16
xor
lods
add
or
leave
mov
data16
ret
dec
cwtl
data16
rolb
test
mov
mov
scas
imul
lahf
xchg
shl
xchg
push
fldenv
add
sub
enter
imul
cmp
mov
lea
adc
ljmp
mov
sub
or
sbb
imul
insl
test
or
xor
sbb
sub
inc
mov
adc
add
mov
lcall
inc
icebp
xchg
fistps
outsl
fcompl
movsb
or
movl
rclb
mov
repz
or
clc
push
xor
sub
ss
sub
addr16
pop
or
jb
or
movl
cld
stos
jecxz
jnp
inc
outsl
outsb
fildll
adc
ja
dec
xchg
sbb
pop
test
pop
es
int3
icebp
dec
mov
repz
push
sub
lret
je
push
pop
rolb
push
inc
in
cli
gs
out
jle
popa
push
daa
stc
cmp
add
mov
sbb
pop
cltd
pop
pop
pop
iret
inc
pop
aaa
push
call
loope
jb
mov
jae
cmpsb
adc
sbb
xchg
sbbb
pop
pop
fstpt
lods
ljmp
outsl
lods
sub
je
xorl
xor
ficoml
mov
and
enter
cmp
ljmp
movsl
pop
into
out
xchg
lock
add
jmp
ss
fcoml
jo
iret
push
mov
popf
adc
negb
sahf
std
sar
pop
jecxz
rol
mov
mov
pop
ljmp
lock
sbb
loope
inc
bound
xchg
mov
adcb
hlt
mov
jmp
stos
ret
add
push
insl
lea
movsl
xor
xchg
aad
rcll
push
cs
loope
pop
out
out
fwait
xchg
xlat
mov
sbb
nop
enter
mov
xchg
or
pop
clc
xchg
scas
push
xchg
into
sbb
xchg
test
jo
fistl
popf
pop
mov
or
test
insb
mov
testl
add
fsubl
jg
fbld
push
or
aad
lods
hlt
paddb
xor
lock
mov
inc
leave
gs
ja
das
ja
or
fwait
sbb
movsb
mov
shlb
repnz
in
mov
repz
push
mov
add
jg
in
mov
push
jg
incb
in
cmc
insl
cmp
jmp
lcall
imul
rcll
lea
inc
jmp
mov
rcr
cld
pop
pop
bound
setnp
fcoml
dec
push
mov
xchg
mov
nop
rorb
mov
pop
addl
push
jbe
fsubl
pop
xor
xchg
fmull
adc
int
test
xor
subb
popf
and
add
dec
into
shr
cmp
dec
mov
std
or
inc
aas
test
inc
pop
pop
xchg
and
xchg
imull
enter
fwait
cmp
movsl
addr16
cmp
mov
push
lret
mov
push
jno
loope
and
sub
and
repnz
add
in
push
sub
cmp
popf
jg
sbb
cs
lock
outsl
nop
adc
jns
andb
cwtl
outsb
in
sub
mov
sarl
jp
in
mov
push
pop
rorl
dec
shr
xchg
adc
cmc
and
repz
mov
stos
or
jmp
ja
les
mov
xchg
iret
cmpsb
sub
mov
pop
jno
decl
adc
test
iret
or
xor
dec
add
scas
jae
repnz
xchg
push
cwtl
sub
cli
dec
fdivs
test
leave
shlb
push
sub
pop
or
push
js
adc
inc
pop
fcom
cs
lret
aam
or
stos
stc
mov
aas
push
pop
mov
sbb
dec
ss
xor
add
mov
call
in
shrb
lds
or
rolb
neg
out
cmp
sub
inc
mov
pop
inc
pop
sub
insb
mul
sti
lds
sar
rclb
xchg
stc
cmp
sub
repz
jae
mov
and
mov
adc
mov
lds
adc
cmpsl
add
mov
xchg
add
insl
mov
jbe
and
je
sbb
ss
icebp
addr16
nop
jge
mov
imul
rorb
pop
ficoms
enter
rorl
shlb
popa
dec
inc
pop
test
jg
fdivrl
shr
add
lea
orb
mov
mov
cmp
into
jmp
jge
inc
pusha
sbb
iret
leave
ret
cmp
ljmp
sbb
cmpsl
pop
pop
ret
xor
aam
cmpsb
jno
decb
and
jnp
xchg
ljmp
out
jl
pop
dec
dec
inc
push
addr16
loopne
aad
imul
fdiv
sar
xor
mov
mov
dec
inc
pop
add
or
int
and
aad
lcall
fwait
push
inc
and
and
ljmp
sbb
xor
test
sbb
out
insb
xchg
jne
or
xchg
mov
jge
dec
jns
adc
adc
pop
pop
cmp
mov
push
imul
inc
lock
idiv
cli
stos
push
mov
popa
add
aad
roll
mov
push
and
callw
push
mov
xchg
or
call
jle
mov
inc
call
mov
sbb
sbb
and
pop
mov
in
push
pop
fs
jge
out
sbb
push
sub
in
mov
rol
add
jmp
bound
dec
loope
in
push
xor
pushf
lcall
mov
dec
repz
lea
je
mov
mov
dec
sbb
pushl
xchg
xchg
cld
xchg
insb
push
push
cmp
sarb
popa
pusha
insl
or
add
sub
or
rcll
push
movsb
xchg
out
cltd
push
arpl
out
hlt
call
enter
push
cmp
inc
push
cmpsb
mov
xor
dec
shll
sahf
cwtl
xchg
cmp
sub
cmp
inc
fsts
jl
scas
stos
sbb
clc
movsb
adc
inc
int3
jne
pop
mov
faddl
inc
push
enter
scas
xchg
roll
scas
arpl
xchg
loope
jecxz
sub
pop
mov
jl
xchg
inc
imul
xchg
pop
mov
outsb
jnp
mov
sbb
xor
and
inc
shlb
lret
out
sbb
loop
and
xchg
imul
mov
in
shlb
dec
cmp
sbb
ljmp
out
mov
mov
xchg
add
jbe
icebp
mov
or
pop
xchg
data16
push
fnstsw
lods
sbb
es
in
push
mov
cmpsl
inc
testl
das
inc
ja
loope
dec
das
jne
cmp
sbb
in
xorb
mov
jmp
jns
mov
mov
ja
es
push
js
adc
jg
fstpl
xchg
fdivrl
jnp
flds
xchg
and
jo
mov
cmp
fnstcw
and
mov
enter
jle
and
add
sbb
test
aad
sti
jne
js
adc
xor
xchg
push
xchg
js
add
int3
fldt
daa
sbb
jae
and
push
in
sub
or
sub
sub
jl
cmp
or
test
into
shrl
aas
sbb
popa
cs
out
cmpsl
in
les
lcall
cmp
jnp
insl
lahf
out
imul
cltd
jne,pt
adc
and
pop
cmp
std
sbb
lcall
ss
sbb
and
dec
push
mov
std
add
mov
mov
push
addr16
mov
imul
es
out
sbb
sub
and
popa
adc
in
sub
xchg
mov
mov
cmpb
dec
push
cli
pop
rorl
idivl
iret
mov
jnp
fldenv
jnp,pn
push
add
and
sub
add
xchg
sub
pop
dec
in
xchg
and
xor
movsb
adc
mov
adc
cld
and
jo
popa
scas
fdivr
xchg
add
je
jl
sub
push
add
sahf
js
std
cltd
lea
push
xor
pop
dec
pop
loopw
jle
dec
rol
pop
push
mov
faddl
int
add
mov
add
push
jno
aaa
inc
incl
repz
xchg
jge
xor
adc
push
sbb
cmp
inc
movsb
mov
xchg
or
ds
inc
jp,pt
mov
mov
ss
test
jb
aam
fld1
ja
jne
clc
shll
mov
sbb
icebp
pop
inc
pushw
es
imul
hlt
xchg
xor
push
ret
sub
movsl
fldl
int
je
je
inc
lods
mov
je
insl
jecxz
xor
movsl
shll
adc
ja
rorl
jecxz
push
cmpsb
adc
xlat
in
mov
xchg
dec
test
jmp
xchg
sahf
mov
inc
stos
add
or
ss
add
out
xor
cld
in
int
cmp
pop
scas
sub
mov
fiaddl
cmpsb
dec
dec
aaa
test
cwtl
mov
test
jle
push
loopne
scas
inc
pop
lock
xlat
mov
lret
adc
add
and
push
lock
xchg
testb
sbb
or
xor
pop
loop
orl
mov
lret
add
add
movsb
jbe
clc
push
push
outsl
sub
xor
xor
outsl
sbb
xlat
call
jp
mov
loop
xchg
mov
push
aam
dec
jp
movsl
adc
fistpll
adc
mov
pop
sub
out
jb
and
mov
outsb
stos
mov
sub
adc
xchg
adc
push
fidivrs
gs
int3
ja
ror
addr16
push
xchg
adc
movsl
out
insb
push
aaa
mov
cltd
int
xor
pop
lea
movl
pop
jb
sbb
inc
inc
icebp
psadbw
cmpsb
out
ret
fisubrs
fdiv
dec
test
clc
xchg
adc
xchg
adc
dec
cvtpi2ps
dec
loop
inc
jecxz
frstor
lret
decl
inc
loop
outsb
in
subb
sub
lods
cmp
movsl
xor
push
test
jo
inc
push
inc
ret
add
dec
dec
mov
xchg
fwait
stos
sub
insl
push
pop
gs
orl
bound
xorl
jge
jae
cld
sahf
test
insl
push
lar
cmc
sub
fists
dec
repnz
orl
pusha
mov
jg
sub
mov
je
bound
inc
sub
addl
or
dec
bswap
sub
rolb
mov
xor
pushf
cmpsb
lock
jp
jecxz
ja
mov
cs
dec
inc
xor
pop
outsb
mov
int3
jns
mov
ret
push
sbb
add
shlb
rorb
fwait
jo
cld
mov
jne,pn
mov
xor
call
sub
and
cmp
out
mov
jns
sub
xor
xor
sub
sub
dec
push
pop
push
loopne
jns
out
arpl
sarb
call
stos
testb
adc
repz
inc
aam
out
push
fsincos
xchg
dec
jae
into
jo
mov
pushf
jne
cs
xchg
mov
or
test
mov
add
xchg
add
scas
xchg
pop
enter
cltd
test
mov
adc
inc
cli
push
cmpsl
xor
dec
xchg
inc
or
imull
sub
pop
rcrl
dec
jne
cmp
popf
jp
jae
outsl
inc
jmp
shrb
pop
add
lret
mov
int
ds
cmp
cld
or
out
adc
in
push
adc
sbb
movsb
adc
lcall
xor
lods
sbb
mov
ss
mov
loope
jno
mov
in
adc
inc
or
ds
sbb
xor
cltd
outsb
insl
clc
test
aam
lods
test
push
jb
or
cli
lods
jo
aaa
dec
cmp
les
jne
jl
js
push
mov
cmp
lds
movsb
shll
xor
add
cmpsb
fnstsw
andb
test
data16
pop
mov
in
inc
mov
dec
jns
in
xchg
jne
pushl
xchg
jmp
cwtl
jg
daa
mov
data16
rol
repnz
je
in
xlat
lsl
jge
rol
mov
dec
mov
leave
cld
enter
sbb
test
mov
clc
inc
mov
int3
shrl
enter
aaa
out
cwtl
cmp
dec
js
sbb
loop
js
leave
add
and
inc
lcall
mov
inc
mov
add
push
push
jp
adc
inc
cs
leave
nop
jmp
aaa
into
pop
addb
add
sbb
jns
enter
std
inc
mov
hlt
inc
sbb
xchg
subl
xchg
rclb
xlat
xchg
jnp
in
push
or
lods
mov
dec
push
xchg
in
loope
push
daa
cmp
pop
rolb
and
daa
and
out
negb
test
adc
cld
in
loope
mov
lret
pop
sbb
int3
movb
pop
cmp
xchg
xor
pusha
je
clc
mov
pushf
fistl
xor
xor
sahf
lods
xchg
and
mov
sbb
stos
inc
mov
repz
cs
xor
sbb
repz
cld
mov
push
mov
jecxz
int
xchg
cmp
cld
xor
std
mov
adc
xchg
jp
fsubrs
test
mov
ret
aas
sti
test
sub
out
iret
mov
rcrl
test
scas
shrl
add
lcall
xchg
int
or
push
jo
xchg
lcall
aam
sbb
lods
fldenv
or
pop
inc
xchg
mov
and
dec
aaa
pop
cmpsl
mov
cmp
jmp
cmp
lret
das
faddp
das
xchg
mov
dec
xor
scas
mov
mov
fistps
pop
and
clc
aad
xchg
pop
scas
int
imul
or
iret
mov
mov
push
adc
fisubrl
into
data16
neg
jns
inc
arpl
pop
iret
andb
mov
popf
xor
int
cltd
adc
loope
pop
xchg
push
andb
mov
iret
jno
add
adc
cltd
call
inc
lea
xchg
aad
inc
outsb
sub
push
outsl
stos
notb
xchg
decb
je
push
test
dec
scas
dec
ret
adc
mov
lods
shlb
jno
push
lret
mov
sarb
dec
mov
in
adc
fimull
leave
jne
cmp
test
loop
pop
popf
outsl
inc
gs
or
xchg
ret
pop
push
dec
or
xlat
gs
shll
popa
mov
mov
roll
and
lret
or
jmp
cmp
test
mov
cmp
gs
pop
jmp
iret
pushf
test
sub
loope
fnsave
out
stos
je
loop
loope
leave
mov
insl
mov
test
andb
popa
add
sbb
or
adc
cmp
test
pop
inc
fsubrl
sbb
dec
aam
mov
test
push
faddp
lods
pop
lcall
adc
sbb
xchg
loop
pusha
outsl
or
jo
gs
fcompl
ficoms
xor
jmp
jbe
dec
pushl
lds
fincstp
je
scas
imul
cmpsl
ret
jbe
adc
pop
int
mov
adc
inc
mov
cmpsb
push
filds
sahf
lock
outsb
jne
fisttpl
adc
jnp
xor
sub
jbe
bswap
out
xor
mov
inc
fidivl
ss
ret
sbb
sbb
fucom
mov
jbe
and
daa
cmc
jae
mov
mov
ss
mov
popa
sbb
sbbl
cmp
jle
test
xchg
dec
cld
mov
dec
or
cmc
cmp
stos
xchg
pop
imul
inc
in
or
outsb
cmpsl
iret
dec
push
imul
pop
popa
je
inc
repnz
aad
push
aad
je
lret
cld
jp
mov
xor
sub
int
mov
out
insb
aaa
bnd
ds
adc
imul
outsl
dec
fsubl
mov
mov
mov
hlt
sarl
ljmp
sbb
lds
enter
cmp
push
mov
sbb
jae
or
loopne
xchg
pop
sbb
or
sarl
das
inc
je
repz
push
sahf
sarl
ljmp
xchg
mov
jbe
mov
lcall
dec
inc
out
mov
xor
das
or
mov
lods
popa
mov
lods
mov
lret
std
adc
push
mov
in
ss
adc
rorl
jno
mov
jae
lcall
out
jle
xchg
push
imul
and
mov
dec
push
lahf
cmp
ffreep
mov
inc
pop
xchg
jne
inc
jbe
std
nop
stos
adc
cmp
popw
xor
jns
mov
mov
sbb
mov
pop
movsb
xlat
sahf
cmc
imul
rolb
shlb
std
or
aad
testl
mov
lahf
jno
pop
mov
sti
movsl
icebp
and
cmp
call
mov
or
aam
inc
cmpl
out
shlb
jae
js
ds
aaa
aad
int
inc
add
dec
push
movsl
scas
scas
cs
fistps
in
jno
xlat
mov
scas
xchg
and
dec
loop
cs
std
dec
cmp
mov
stos
outsl
mov
stos
sub
and
aaa
pop
pop
and
push
pop
aaa
mov
imul
pop
push
std
mov
lret
loop
inc
call
push
or
fisubrl
add
pop
push
out
outsl
loop
in
jo
ret
popf
aad
das
cmp
bound
pusha
or
pop
dec
lcall
adc
fs
dec
inc
repnz
cs
outsl
xor
stos
out
cld
push
mov
adc
sbb
aam
and
imul
mov
and
outsb
add
mov
fsub
cmp
cmp
sbb
push
sbb
or
sbb
jle
ds
inc
gs
sub
and
jle
push
fwait
add
lahf
in
cli
mov
andl
lret
lret
hlt
jle
stc
sbb
dec
test
rcr
movsl
sahf
or
ss
inc
adc
mov
or
int
mov
in
cmpsl
cld
nop
xchg
jbe
movsb
je
mov
pop
shr
ret
imul
or
iret
and
sub
xor
push
fiaddl
jecxz
neg
add
in
xchg
add
les
pushf
dec
imul
add
or
xor
test
push
aaa
mov
dec
aam
jbe
out
pop
mov
jb
pop
aad
cmpsb
adc
adc
into
xchg
fdiv
inc
cmpsb
icebp
aam
xor
ljmp
in
and
and
mov
jg
enter
mov
cmpsb
stc
and
cmp
or
jecxz
loopne
or
call
mov
add
cmp
loope
mov
lahf
mov
aas
fbstp
dec
movsl
mov
sbb
inc
add
or
and
mov
mov
adc
daa
mov
adc
add
inc
inc
cwtl
rcrb
icebp
xchg
ret
ret
rol
sti
cltd
rol
add
arpl
sub
pop
xor
jb
xor
pop
or
mov
adc
jb
arpl
imul
rcrl
pop
xor
lcall
jns
and
fistl
mov
mov
lods
ds
les
and
or
mull
mov
andb
adc
sbb
test
dec
out
sbb
movb
dec
popa
xor
mov
dec
into
pushf
repz
pop
push
cmp
out
sbbl
sub
jmp
dec
ss
xor
add
inc
in
xchg
lods
dec
into
das
fidivl
rolb
hlt
lock
jg
jp
push
xor
cmp
cmp
xor
push
jle
mov
pusha
adc
bound
jmp
fnstenv
push
xor
xor
cmp
push
sub
iret
add
jno
push
stos
push
ficoms
adc
addb
ret
into
mov
pop
push
push
add
lods
push
lahf
stos
push
lret
lods
jl
push
test
mov
sbb
pop
in
jno
dec
and
dec
adc
add
imul
add
sub
inc
or
sub
popa
scas
xor
fisubl
mov
dec
out
sbb
jae
shl
les
outsb
movl
inc
repnz
es
loopne
mov
hlt
push
aam
adc
jmp
es
cmp
insb
bound
movsb
sub
xor
mov
fwait
out
mov
iret
push
push
in
ss
sub
pop
push
out
sbb
dec
mov
leave
push
mov
mov
mov
mov
sbb
and
sbb
dec
push
mov
and
ret
fdiv
jg
dec
mov
pop
mov
dec
movsb
sahf
leave
sub
stos
inc
fidivs
mov
leave
jae
popf
cmp
ss
testl
out
filds
jne
fstl
mov
pusha
fbld
add
stc
popa
xchg
out
and
cltd
add
fcom
jp
mov
rolb
repnz
shl
cmpsl
jecxz
mov
icebp
dec
lcall
stc
mov
xchg
andl
iret
insl
inc
rcrb
jge
add
lea
enter
repz
mov
and
pop
iret
mov
fwait
lahf
dec
test
mov
push
pop
out
xchg
stos
jo
mov
adc
fs
push
daa
jg
pop
iret
icebp
call
imul
dec
scas
sub
push
mov
and
mov
lea
sbb
push
adc
add
mov
out
sbb
into
hlt
push
lods
pop
icebp
movsl
sarl
out
shlb
pushw
out
mov
out
adc
dec
sub
std
pop
pop
push
sub
sub
pop
mov
dec
je
movl
xor
xor
or
xor
test
pop
ss
rolb
sbb
fnstcw
repz
popa
xor
imul
insb
in
mov
cmpsb
lods
call
push
cmp
stos
cli
addl
imul
fwait
lret
pushf
rcl
xor
adc
adc
cmc
cmp
sub
dec
mov
arpl
xchg
jl
je
test
fldl
filds
stc
cmpsl
or
cmpsl
ret
es
test
fbstp
mov
push
frstor
gs
mov
mov
enter
cmp
xchg
imul
addr16
add
xchg
aam
pop
ret
fwait
pop
pusha
sbb
das
push
insb
jmp
sahf
cmp
xchg
pop
sbb
sub
cmpsb
pop
sbb
test
aad
mov
je
or
mov
clc
pop
add
add
clc
push
and
rcr
hlt
leave
add
mov
or
lret
sahf
test
pusha
lock
dec
add
icebp
jl
push
pop
data16
inc
cmp
jecxz
pop
outsb
call
enter
ljmp
stos
add
adc
xchg
xchg
add
ds
ret
stc
add
or
fnstcw
aad
sar
js
inc
call
shlb
push
or
pop
cwtl
cmpsb
testb
or
repz
mov
iret
add
je
sub
adc
mov
data16
sti
and
xor
ss
xor
out
add
cld
js
repz
and
les
and
ret
js
dec
mov
mov
mov
add
inc
insl
fisubl
adcb
std
push
inc
add
sbb
add
mov
adc
jns
jl
pop
xchg
mov
cltd
adc
out
mov
dec
cmpl
inc
or
xlat
fstp
test
mov
lret
out
jo
in
xchg
jmp
lret
adc
and
push
addr16
stos
mov
mov
and
jle
mov
pop
pop
mov
mov
in
pusha
jecxz
pop
stos
jbe
xchg
inc
adc
arpl
jle
jns
pop
test
sbb
jle
arpl
data16
and
in
inc
clc
ret
shrb
and
xor
mov
in
push
sbb
ror
push
out
dec
jae
pop
cmp
fdivs
mov
mov
pop
jle
fidivrl
fnstenv
push
xchg
call
lahf
add
sub
hlt
int3
out
sbb
or
dec
sti
dec
les
fwait
ss
mov
mov
fxch
push
dec
adc
aaa
out
outsl
add
enter
mov
mov
xor
ljmp
popf
push
and
and
sahf
mov
xchg
pusha
mov
xchg
popf
inc
cmp
and
pop
xor
push
and
imul
or
sub
jbe
sbb
test
mov
mov
mov
loope
int
lds
out
outsl
or
sbb
pop
rcrb
pushf
mov
or
rcl
jb
cltd
mov
dec
ja
or
out
out
lret
mov
loopne
ja
or
sti
js
rcrb
dec
cli
test
aad
xchg
shr
out
lret
mov
xor
mov
sub
fimull
xchg
orl
sbbl
pop
mov
test
call
fucomi
aad
call
mov
loopne
xchg
xchg
into
sbb
fstpt
and
mov
pop
fsts
sti
xor
sbb
jle
sbb
cmp
push
mov
mov
push
popf
outsb
jnp,pn
pushf
adc
cltd
add
test
mov
mov
push
cld
fidivrs
in
push
lock
sbb
cmp
cmpsb
lcall
test
sub
loope
sahf
mov
sbb
rcrl
jns
mov
or
mov
lahf
push
fisubrl
dec
push
push
pop
jg
js
sbb
pop
sbb
dec
mov
sbb
xorl
dec
mov
push
push
adc
pop
scas
mov
cli
es
jbe
mov
mov
repnz
ror
xor
fadd
mov
ds
dec
push
aaa
imul
lahf
stos
cmp
add
aam
mov
jno
ret
cmp
bound
mov
ficoms
sub
inc
popf
pop
sbb
mov
sbb
cmpb
push
push
mov
outsb
imul
or
inc
jb
sahf
enter
add
cmpsb
lods
xchg
sbb
and
push
cltd
outsb
cmp
or
or
jl
sbb
rorb
scas
push
push
rcrb
cmpl
rcl
pushf
push
sti
sti
xchg
pop
jo
cmpsl
lret
movb
fisubl
out
inc
mov
test
add
daa
fs
popf
and
push
cltd
and
fdivr
mov
mov
add
cmp
movsl
dec
popa
and
outsb
enter
gs
mov
test
or
add
sub
dec
fisttps
inc
out
sahf
cmpsb
jb
sbb
aas
jl
inc
mov
push
loope
xor
xchg
jmp
add
jge
cmc
sub
mov
mov
orb
sbb
lret
icebp
xchg
xor
mul
dec
sbb
sarl
popf
dec
pop
jecxz
inc
stc
mov
sub
pop
mov
aam
js
stc
lods
lcall
in
je
call
mov
rcl
sub
addr16
out
enter
popa
cmp
xchg
sbb
and
dec
mov
imul
repz
sub
lret
notl
mov
push
mov
and
jb
sti
into
je
xchg
out
xor
adc
cltd
push
jmp
mov
fcoms
jno
inc
scas
and
sbb
stos
xor
sub
scas
dec
push
xor
sub
xor
xor
fwait
and
lods
xchg
push
xchg
xchg
pop
xchg
xor
cld
dec
sbb
scas
je
jmp
leave
mov
sti
in
mov
fdivp
push
xchg
cmp
dec
cmp
insb
lock
mov
andb
orl
add
xor
xchg
xor
cmpl
fnsave
das
dec
js
adc
lcall
sub
xor
push
mov
aad
sub
popf
aas
jmp
fnop
cmpsl
popf
add
daa
in
or
ds
jg
sub
testb
ds
mov
mov
mov
test
testl
jae
inc
imul
dec
jne
popf
mov
ds
and
hlt
call
push
cltd
mov
fnstcw
pop
mov
iret
arpl
push
add
hlt
lret
jne
dec
mov
out
mov
push
adc
fs
xchg
in
loop
or
fs
jecxz
jo
push
mov
je
ds
aad
pop
cmp
mov
outsl
mov
push
divb
adc
push
cmc
ret
fmuls
enter
test
paddusb
and
push
push
bound
xchg
pop
jl
mov
cmovns
shlb
and
arpl
imull
inc
and
jo
and
mov
pusha
cmpsb
add
sbb
addl
daa
test
data16
cmp
adc
jecxz
xchg
inc
add
xor
jae
test
add
cmpsb
jmp
mov
push
loop
sti
dec
xchg
xor
cmp
dec
fcmovnbe
sbb
hlt
and
cmpsl
popa
or
ss
mov
cwtl
rcr
cmp
adc
mov
push
mov
sub
pusha
cmp
jns
fistl
inc
fwait
lret
jbe
inc
xor
js
divb
mov
pop
or
mov
arpl
jmp
xor
lret
cmp
and
andb
rcr
sbb
pusha
aas
jo
xchg
fiadds
ja
stos
adc
mov
pop
sarl
insl
push
loop
push
sbb
lcall
loop
enter
out
xchg
cmc
adc
cltd
xor
icebp
loop
push
and
loop
sbb
stos
mov
mov
rolb
mov
push
jg
scas
pop
int
or
imul
xorb
or
lods
test
scas
test
dec
inc
pushf
movsb
mov
adc
call
movsb
notl
les
xchg
xchg
push
or
push
mov
pushf
dec
out
stc
imul
outsb
in
sub
xchg
lret
test
dec
outsl
imul
xchg
mov
mov
dec
outsl
fdiv
shl
pop
or
add
negb
mov
dec
sub
lods
sub
negl
jnp
lea
ret
pop
mov
mov
dec
sub
call
test
jnp
roll
mov
xor
mov
xchg
xor
jbe
inc
xor
loopne
loop
in
sbb
xchg
pushf
pusha
jae
pop
sahf
xor
jle
int3
jnp
inc
inc
movups
xchg
cmp
inc
in
ror
or
cmp
xor
push
sarb
mov
mov
jmp
mov
enter
sub
or
xor
inc
xchg
mov
lret
cli
aam
and
sti
aam
add
cmc
out
je
mov
rcrl
or
sbb
pop
pop
mov
aas
jp
inc
cld
inc
add
fldln2
shrb
mov
cmpsb
int3
ficompl
xchg
sub
inc
pop
rorb
cli
lods
subl
sub
test
mov
push
clc
sahf
mov
jge
push
in
xchg
cld
mov
mov
mov
stos
into
clc
jb
sub
cmpsb
jnp
or
inc
xchg
loopne
pop
xchg
cli
fstp
xor
les
fcmovb
adc
jb
dec
test
xchg
add
pop
add
fs
leave
insl
lock
pop
fwait
insb
or
es
scas
pop
mov
mov
aad
shlb
loope
outsl
add
cmpsl
inc
and
inc
call
dec
aaa
push
shrb
or
xchg
outsb
jo
push
xor
mov
adc
lret
stos
xorb
sbb
jns
dec
mov
mov
mov
mov
sti
xchg
insb
in
jle
add
add
lcall
dec
dec
xor
xor
pushf
add
pop
and
sbb
sbbl
xchg
or
xorb
and
in
bound
and
pop
int3
add
jae
fcoms
shr
and
jmp
cmpsl
mov
xchg
iret
adc
out
push
xchg
pop
lock
or
mov
lahf
mov
xor
push
std
rorb
pop
sbb
loopne
loopne
arpl
repnz
lret
call
pop
and
mov
inc
cmpsl
cmp
adc
nop
and
mov
add
je
arpl
ja,pn
sbb
js
push
jecxz
xchg
mov
cmc
adc
cmp
test
sub
jne
push
mov
test
andb
scas
cmp
or
add
push
or
test
shrb
lock
push
nop
and
pushf
xor
in
inc
das
jb
dec
shlb
and
mov
jle
ret
pop
dec
mov
pop
shll
jg
lcall
leave
mov
push
or
cmp
jecxz
add
push
cltd
and
sub
cmpsb
test
insl
imul
xor
mov
loopne
ffree
xor
or
sbb
outsb
lahf
xchg
divl
in
adc
mov
popa
jg
ret
divb
jp
add
jg
mov
call
test
dec
gs
lds
jl,pn
jp
mov
push
lret
je
test
inc
mov
aas
outsl
out
push
and
hlt
xor
in
sahf
aas
sbb
xor
lret
repnz
icebp
cmp
pop
sahf
sub
repnz
int3
out
xchg
mov
sub
lock
sub
je
subb
das
push
xchg
test
push
test
fwait
pop
iret
aam
mov
xchg
push
cmp
adc
and
lret
lea
cs
cli
daa
leave
push
pop
cmp
lret
or
push
xchg
fisttpl
rcll
jg
sub
insl
add
and
es
sbb
mov
lock
mov
xor
int3
in
clc
testb
xor
test
mov
imul
dec
dec
sbb
repnz
frstor
lods
jo
cmpsl
hlt
dec
xorb
int
lret
pop
out
repz
xchg
xchg
ds
xor
xchg
rolb
mov
dec
push
mov
rcrl
add
xor
in
jne
out
xor
icebp
mov
cmp
xchg
fwait
jecxz
lret
int3
dec
dec
dec
out
mov
cli
xor
sbb
sbb
inc
dec
clc
imulb
mov
arpl
testb
sub
int3
cltd
push
lock
push
into
lock
adcl
dec
imul
int
out
pushf
push
inc
lahf
push
loope,pt
gs
xchg
pop
sahf
daa
mov
push
inc
adc
fucom
xchg
push
int
add
adc
xlat
push
mov
inc
cld
loop
je
int
pop
inc
mov
sub
and
or
xchg
dec
dec
push
test
lods
pushf
sub
enter
nop
mov
stos
xor
mov
imul
xor
fsts
cmp
cli
lds
cmp
test
mov
dec
jo
push
fmulp
mov
xchg
pop
jp
lea
dec
push
mov
out
cs
pop
ficomps
in
arpl
push
lret
add
push
int3
push
jns
fldt
pop
ficoml
or
fsub
add
lock
jbe
mov
and
xorl
mov
mov
pop
mov
pop
push
iret
xorl
out
mov
sbb
dec
sub
jp,pn
jo
les
popf
call
pop
xlat
dec
sub
iret
lods
mov
imul
hlt
nop
sub
jno
call
push
or
mov
lcall
mov
jmp
pop
outsb
push
pop
dec
cmp
jl
sahf
fldenv
or
adc
repz
pop
jge
xchg
flds
jne
nop
jle
insl
insb
cld
fidivrs
movsl
movsl
push
dec
aaa
pop
lods
fndisi(8087
ja
pop
mov
pop
adc
xchg
stos
aad
sub
xor
aam
mov
sub
insl
insb
cld
jb
fwait
or
adc
add
xorl
cmpsb
loope
add
xor
aad
sbb
sub
popa
in
out
int
stos
dec
inc
mov
fidivrs
adc
ret
addl
xchg
cmpl
jnp
mov
cmpsb
out
mov
add
fisttpll
pop
out
js
adc
sub
sbb
sbb
gs
cs
inc
mov
mov
je
add
mov
sub
push
mov
mov
clc
movb
mull
lods
pop
push
adc
mov
pop
rcrb
pop
ret
push
jno
or
push
add
dec
sarb
ret
aaa
pop
lods
test
inc
rorl
dec
and
adc
lock
mov
test
shr
test
mov
adc
adc
test
ljmp
mov
sbb
shrb
fsubr
inc
mov
sub
ret
test
and
jne
inc
xlat
fsubrl
adc
mov
xchg
push
fistpl
cmpsb
mov
ljmp
xlat
sti
sbbb
xor
add
mov
negl
test
sub
inc
shrl
cmc
psrad
arpl
fcomps
push
sub
xor
std
pop
cmp
pop
aas
lods
mov
outsl
dec
mov
int3
scas
adc
icebp
cmp
filds
push
sahf
pop
dec
add
imul
rcrl
sub
rcrb
popa
mov
xchg
jp,pt
aam
lahf
cs
sub
inc
mov
mov
arpl
or
adc
cmpsl
or
inc
dec
cmc
adc
sbbl
test
psubq
aad
sti
jp
lds
cmp
ret
and
js
inc
mov
sarl
int3
scas
push
inc
shlb
dec
adc
xchg
xor
push
jno
inc
test
mov
iret
pushf
push
dec
cld
push
xchg
mov
or
insl
jae
inc
stc
cmp
dec
sub
dec
and
add
test
adc
jecxz
nop
jmp
xor
aaa
scas
les
and
adc
lds
out
subb
mov
sub
xor
pusha
iret
xchg
inc
mov
and
cmpsb
negl
aam
cld
outsl
fwait
out
cmp
push
mov
ljmp
ret
mov
mov
mov
pop
cmpl
shlb
dec
push
or
in
cld
xor
mov
jb
push
push
sti
pop
pop
push
ds
loop
jae
sbbl
mov
lds
xchg
mov
shl
lock
cmp
mov
data16
fwait
adc
notl
adc
loopne
add
roll
daa
xor
add
outsb
pop
cmp
pop
cmp
jg
mov
sarl
fsubs
sbb
add
add
mov
xchg
xchg
jecxz
add
or
and
sub
hlt
sub
sbbl
aas
lock
and
int
sahf
imul
shrl
dec
in
or
scas
enter
xor
or
jno
sbb
jp
shrb
mov
divb
adc
cmp
xchg
xor
sbb
push
sub
mov
mov
mov
add
pop
aas
stc
je
or
out
sbb
sbb
ljmp
ss
mov
fs
add
xor
outsl
insb
loop
stos
insl
push
cmpsb
subb
je
mov
jbe
cmp
mov
stos
add
test
mov
jl
orb
mov
movsb
xlat
mov
test
out
pop
xchg
and
cmp
xchg
cmpl
shll
imull
test
frstor
sbb
pop
jmp
mov
inc
test
loope
imul
cmc
pop
pop
test
fwait
lcall
adc
and
cmp
mov
mov
pop
pop
test
mov
inc
adc
mov
sub
jae
jns
sbb
test
movsl
adc
fstl
flds
sbb
adc
test
orb
cmpb
loope
stc
pop
inc
dec
lret
cmp
xorb
outsl
scas
sub
xor
push
jo
push
jae
dec
popf
xchg
aas
push
stc
jmp
or
mov
fcomi
cmp
mov
dec
cld
mov
and
jmp
sub
or
repz
dec
mov
and
popa
jp
jne
icebp
or
insl
push
jl
cmp
dec
xorl
out
shrl
mov
stc
adc
scas
movsl
pop
sbb
push
daa
mov
inc
dec
clc
dec
jns
xchg
or
mov
mov
adc
test
or
mov
pusha
lret
jns
in
outsb
push
ret
xlat
dec
arpl
aas
iret
insl
lods
jo
aad
scas
xor
adc
lcall
pcmpeqb
mov
adc
or
ds
lds
or
dec
fstpt
and
or
inc
pop
or
cmpsb
xchg
enter
adc
sub
push
outsb
pop
aaa
cmp
inc
test
inc
mov
mov
push
cmpsb
xchg
jecxz
or
adc
fdivl
mov
test
ljmp
loope
dec
mov
fisttps
jbe
mov
xlat
adc
mov
push
push
negl
mov
aas
fimull
in
pop
xchg
scas
xor
or
mov
cwtl
or
mov
out
shll
insb
aad
xchg
ja
cmp
push
fidivs
push
pop
cmp
cmp
and
lds
xor
add
or
xor
dec
icebp
mov
adc
jmp
sub
cs
inc
int3
int
aaa
mov
sahf
mov
fwait
xchg
jmp
sbb
stos
clc
and
hlt
cmp
in
xchg
xlat
push
rorl
mov
mov
jns
cmp
push
mov
test
cmp
inc
insb
cmp
dec
cltd
bound
jg
jmp
hlt
pop
mov
loope
in
bnd
aam
xchg
and
pop
imul
imul
ljmp
fbld
and
scas
mov
xchg
and
arpl
out
ja
mov
popf
jno
push
repz
xchg
sbb
idivl
mov
mov
notl
test
das
or
mov
jnp
fiaddl
repz
lcall
pop
jge
sbb
daa
inc
pusha
imul
dec
icebp
mov
pop
mov
jno
addl
das
mov
call
mov
outsl
data16
std
insl
xor
jae
js
lahf
xlat
loope,pn
add
shll
ljmp
mov
stc
iret
mov
popf
subl
add
xor
xchg
call
lds
xor
mov
subb
pop
repnz
rolb
lret
shl
mov
adc
sbb
adc
or
das
cld
add
mov
dec
pop
popa
cwtl
push
movsb
cmpsl
repnz
mulb
mov
xor
dec
inc
insb
dec
cmpsl
dec
inc
daa
inc
push
inc
loop
mov
dec
cmp
loopne
sub
imul
arpl
pcmpgtw
jecxz
fstps
dec
mov
loope
stos
xor
fadd
mov
je
shl
xchg
and
arpl
xchg
sbb
enter
or
bound
jno
inc
sahf
mov
ret
xchg
jecxz
and
xchg
outsb
clc
add
adc
pop
rorl
xchg
mov
push
mov
dec
adc
sub
dec
jbe
add
or
mov
sti
je
mov
push
sub
jmp
pop
pop
push
pop
repz
fbld
inc
repnz
idivl
popa
pop
test
jns
jnp
fucompp
cmp
sub
mov
adc
jmp
std
push
or
sub
sbb
mov
add
mov
mov
jnp
in
add
sbb
or
in
cltd
fwait
pop
call
mov
aam
adc
pop
or
fldpi
negl
push
mov
inc
mov
mov
ret
andb
filds
xor
lahf
dec
test
test
test
mov
mov
repz
mov
jecxz
sub
mov
aas
outsl
mov
outsb
sub
ss
dec
xchg
rcrl
rcrb
and
xchg
and
je
loope
jge
jg
ljmp
stos
dec
loopne
mov
fbld
or
xchg
or
jbe
mov
out
push
push
jmp
sub
xchg
or
cmpb
sub
pop
jg
loop
lods
push
test
or
scas
in
push
repz
fsubl
lock
xchg
adc
iret
sub
push
and
icebp
loope
xor
dec
mov
ja
add
pop
sub
dec
push
dec
and
loopne
mov
jne
xchg
popf
sub
sbbb
imul
cmp
mov
clc
scas
mov
outsl
inc
lcall
loop
out
incb
pop
sbb
repz
cmpsl
push
pop
jo
in
fldt
push
xchg
ljmp
stc
and
add
pop
ljmp
sbb
int3
mov
cld
adc
and
and
sti
iret
outsb
test
ficoml
mov
dec
fs
test
ja
inc
cwtl
xchg
int3
mov
scas
adc
leave
xor
frstor
fsubr
add
das
repz
es
in
scas
mov
mov
add
inc
shrd
adc
cmp
xor
popf
mov
enter
fldl
out
jae
jmp
orl
lock
test
mov
jmp
nop
cmp
aaa
sub
stc
aad
frstor
mov
jbe
hlt
jns
sbb
sub
xchg
xchg
ja
xchg
xchg
add
xchg
sbb
pop
loopne
test
daa
pushf
sub
cld
and
mov
jb
rcl
jmp
sub
pushw
bound
bound
inc
syscall
xchg
ret
ss
push
add
xchg
xor
psubb
sub
sbbl
in
pop
cmp
adc
dec
mov
sub
int3
xor
pop
cwtl
clc
shlb
enter
pop
xchg
push
sub
repz
or
iret
push
filds
sub
mov
cmp
push
xor
mov
aam
mov
test
lea
ret
sbb
stos
cltd
xchg
mov
push
stos
pop
ss
xor
std
jns
mov
add
pop
add
jno
jbe
mov
sub
rcll
mov
clc
movsl
mov
pushf
imul
push
enter
hlt
sti
cmp
inc
popa
xor
mov
fimull
pusha
adc
sti
dec
arpl
shrb
pop
xlat
jae
sbbl
adc
push
sahf
lods
lods
aad
jns
sbb
shlb
mov
adc
inc
add
mov
and
mov
repz
fxtract
lods
xor
daa
cmovp
jge
fs
xor
or
loope
pop
js
sub
xor
cwtl
jp
fsubrs
mov
xchg
gs
pop
hlt
ret
popa
cld
jbe
movsb
test
repz
mov
pop
inc
sahf
sub
inc
inc
push
sarl
ss
push
mov
push
inc
lea
lods
repnz
int
sbb
fdivp
mov
psubsb
xor
or
add
push
loopne
sbb
add
mov
rcl
sbb
es
stos
xlat
aam
cmp
lods
dec
lods
ja
cmpsb
lds
test
cmp
sub
shll
stos
in
mov
aam
sub
aam
loopne
dec
mov
bound
xchg
aas
and
mov
dec
daa
mov
aaa
lcall
or
and
mov
adc
dec
popf
push
shlb
push
push
jg
lods
incb
int3
xor
pop
sbb
ror
js
into
mov
inc
inc
pop
sbb
jae
out
clc
pop
jae
sbb
sar
out
mov
stc
xlat
ret
sub
icebp
je
popa
scas
or
jno
inc
stos
shlb
call
and
mov
call
pop
adc
and
jae
and
pop
jns
mov
inc
out
repz
gs
push
push
ja
mov
add
push
subb
outsb
pop
loope
inc
pop
sub
jbe
jl
aaa
cwtl
jbe
aam
mov
scas
mov
pop
out
stos
dec
xchg
xchg
mov
or
jnp
lret
mov
cmc
in
aas
and
enter
jg
movsb
and
shll
mov
dec
jne
push
lret
xlat
cli
call
out
mov
test
sbb
das
xchg
addr16
sub
rcll
repnz
fldcw
jl
mov
in
loope
push
in
jg
mov
cltd
popa
in
push
daa
mov
mov
fwait
mov
loope
mov
fbstp
into
mul
mov
mov
add
test
shll
int3
jecxz
arpl
add
or
mov
mov
in
and
ss
sti
sub
jmp
cltd
hlt
outsl
xor
fwait
out
sub
mov
mov
testb
pop
popw
sarl
std
lahf
jp
cli
add
and
cmp
fidivs
test
pushf
popf
sub
in
and
jne
cld
dec
hlt
xchg
inc
xchg
push
add
stos
aas
fcomi
xlat
sti
mov
push
xchg
xchg
movsb
ljmp
lret
je
add
cmp
xchg
xor
lea
jnp
xchg
and
fcomp
fldl
xor
ja
repz
cld
push
push
xchg
insl
sub
push
es
xchg
xor
int3
push
bound
pusha
add
sub
test
sbb
xor
dec
data16
pop
popa
les
xor
and
sub
push
aad
push
xchg
in
fucomi
add
imul
inc
cwtl
mov
or
push
cmp
shll
out
aas
xchg
mov
call
jae
loop
scas
add
dec
push
dec
and
lahf
sbb
fnstcw
push
sti
mov
push
cmpsl
inc
inc
mov
inc
jmp
lcall
ljmp
dec
xchg
inc
pop
out
and
mov
xchg
fistpl
fidivl
aas
xchg
and
shl
add
or
add
shrl
ret
outsb
lods
loop
sti
cmp
scas
call
xor
mov
adc
mov
roll
sub
sbb
pusha
aam
andl
push
inc
xchg
cmp
and
jo
mov
add
negb
addr16
mov
sub
orl
jns
lret
js
pop
rorl
pop
push
aas
rol
pusha
sbb
sti
lds
inc
outsb
sub
pop
or
inc
jge
aam
xchg
pushf
inc
dec
pop
fildll
int
jns
xor
jae
pop
pop
cmpsb
xchg
mov
adc
sbb
jle
jl
shrl
fildl
outsl
fmulp
es
push
lods
pop
jae
jmp
test
inc
mov
xor
lcall
imull
in
popa
push
push
sahf
mov
mov
fbld
scas
imul
and
mov
stos
cmp
test
mov
inc
lds
sbb
out
lret
aas
sub
dec
pop
jle
cli
mov
inc
ret
loopne
mov
lods
xchg
loop
ficomps
pop
mov
push
sub
push
mov
movsl
test
pop
pop
pop
sbb
push
jge
imul
test
sbb
pushf
ds
popa
mov
or
cltd
data16
pop
jne
inc
fwait
aaa
ret
cmp
pop
dec
cltd
pandn
iret
imul
shrl
sar
add
outsl
pusha
sub
lret
int
adc
inc
mov
mov
pop
mov
popa
test
cmp
lods
mov
sub
lods
es
mov
add
fldcw
aas
mov
leave
mov
scas
aas
or
loopne
sahf
add
push
call
jb
push
push
popa
jae
dec
mov
mov
cli
cmp
int
or
pop
ror
pop
mov
leave
push
dec
mov
lods
in
out
pop
push
cmp
movb
pop
cmp
arpl
mov
xchg
adc
notb
nop
dec
add
add
sub
adc
lock
cmp
adc
lods
fstl
inc
inc
mov
jbe
push
icebp
inc
test
mov
add
fmulp
enter
call
pop
jmp
scas
lahf
add
data16
jl
jmp
xchg
fnstcw
bound
jns
fs
push
pop
dec
jmp
popf
popa
js
in
in
jmp
pushf
cli
imul
push
outsb
sbb
je
fidivs
jbe
mov
test
test
add
sub
xchg
daa
cmpl
fcmove
or
push
out
scas
push
data16
loop
into
xchg
ret
mov
fcomps
mov
and
add
xor
andb
adc
add
mov
lds
or
sub
loopne
lret
sub
or
out
push
pop
jns
xchg
inc
dec
mov
test
xorb
adc
and
in
cmc
shrl
std
and
sbb
mov
cld
sub
in
ret
adc
popa
dec
in
push
xchg
stos
in
je
pop
imul
and
push
mov
mov
mov
xor
popf
fstpl
call
ja
pop
or
cmpsb
inc
bound
pop
mov
adc
fstl
icebp
or
or
and
cmp
call
ret
vpaddusb
mov
ljmp
das
inc
sti
mov
mov
lret
adc
mov
mov
test
xchg
lods
xchg
inc
aam
jnp
push
int3
pop
xchg
sbb
cs
inc
fnstsw
mov
insl
sbb
sbb
and
inc
add
aaa
insl
jmp
lock
mov
pop
push
popa
loopne
add
mov
mov
std
call
push
cwtl
loopne
sbb
and
jg
icebp
iret
jb
fidivrl
gs
sbb
das
cmpsl
int3
mov
int3
and
jne
push
inc
fs
dec
pop
lret
ja
jnp
mov
jbe
cmp
xchg
rcrl
icebp
xor
adc
and
mov
lods
aad
leave
in
daa
sbb
sbbb
sub
popf
add
pop
and
ficoms
jnp
mov
outsb
jns
ja
icebp
and
jl
mov
cmp
xchg
mov
add
rclb
xor
add
imul
lret
adc
leave
mov
xchg
pop
scas
and
cmp
int
mov
xlat
sbb
out
fcomp
ss
into
fimull
mov
push
xchg
xchg
lret
mov
hlt
sbb
jb
lea
or
rcrl
sub
sbb
pop
inc
in
xchg
xchg
aas
and
sti
gs
cmp
xor
aam
mov
or
pop
push
lea
mov
gs
and
aam
rcrb
test
fs
cmpsl
idivb
xor
and
outsb
sub
mov
cmp
add
cmp
int3
pop
sbb
inc
shrl
ror
adc
insb
dec
adc
icebp
cmp
aad
cmp
sbb
gs
adc
jne
pop
push
js
push
mov
and
jnp
andl
pop
pop
sbbl
shll
std
cmp
adc
sub
andl
mov
ret
mov
pop
fisttpll
sub
xchg
and
push
outsb
or
lret
test
stos
or
scas
lea
adc
fcomip
cmp
fmull
mov
xchg
push
pop
adc
mov
hlt
xchg
cmp
jno
aad
push
cli
adc
hlt
ljmp
push
add
shrb
mov
jp
addl
dec
sub
mov
out
lods
xchg
push
loope
call
inc
rcll
int
push
and
push
nop
adc
loop
sub
xchg
adc
mov
lock
adc
int3
mov
lods
arpl
adc
filds
pop
pop
data16
lock
sub
push
and
jge
repnz
cli
cmp
fadds
and
pop
test
xor
loope
in
inc
pusha
jno
lods
or
insl
mov
int3
test
or
cwtl
inc
mov
mov
loope
sbb
and
dec
imul
out
imul
xchg
mov
enter
add
adc
es
fsubrs
cmp
bsf
push
jbe
cltd
jns
imul
fistps
or
mov
xchg
lret
cld
jne
mov
add
cmpsb
into
pop
dec
mov
sbb
pushf
or
mov
xchg
rolb
xchg
scas
jne
vpshlq
out
ja
xchg
lea
in
mov
xchg
movsl
dec
les
mov
xchg
mov
scas
pop
loope
clc
dec
mov
pushf
jo
dec
and
or
mov
daa
mov
adc
mov
adc
scas
je
in
outsb
xchg
cmp
sub
enter
pop
inc
mov
add
ljmp
rorb
pop
movsl
cmpsl
cmc
leave
adc
es
sar
aad
aas
dec
sti
movsb
inc
data16
negl
jbe
sub
out
icebp
sub
test
jne
inc
xor
jne
out
xor
adc
rcrb
adc
inc
jmp
clc
mov
xchg
mov
sbb
mov
push
int
or
daa
flds
cmp
fisubrs
mov
xchg
shrb
lea
pop
pop
std
gs
dec
movsl
mov
in
rol
adc
je
shrb
sbb
xor
sub
and
outsb
xorl
mov
or
lea
jne
mov
cmp
xchg
fnstsw
cltd
mov
imul
push
lea
pop
call
icebp
jb
and
test
movsb
push
mov
mov
jmp
sti
sub
loopne
sub
sbb
lret
cltd
sub
and
int3
jmp
or
sti
pusha
and
jge
scas
xchg
loope
out
rorl
sti
fiadds
cmp
data16
cmp
enter
loope
dec
bound
fnsave
ret
popw
outsb
or
mov
loopne
lods
cwtl
push
aam
xor
bound
push
cmp
adc
call
hlt
test
insb
inc
lds
shr
enter
outsl
leave
int3
fbstp
and
icebp
sarl
imulb
lods
mov
movsb
sub
xchg
shll
push
mov
inc
push
mov
in
fcoms
fdivrp
pop
icebp
dec
loopne
or
inc
xor
pop
mov
aam
in
xlat
mov
inc
loop
mov
add
das
add
rcrb
jmp
das
addr16
push
les
mov
mov
sub
add
fidivl
mov
cmp
int
nop
imul
pop
jmp
push
mov
mov
jge
ret
fcoml
jae
xchg
scas
fwait
aam
shlb
jp
outsb
cmp
jle
lock
sub
icebp
rcrb
jae
inc
and
sbb
push
int
push
insb
fidivl
hlt
in
inc
inc
push
repz
pushf
or
xor
jl
lods
lahf
sarl
xorb
mov
push
sbb
sbb
in
lock
sub
adc
ljmp
enter
jb
push
and
pop
jnp
jne
scas
lahf
movsl
cli
mov
jmp
xor
lret
mov
cmovae
leave
in
cmpsb
lcall
popf
int
jne
lods
inc
adc
das
lsl
or
mov
sub
mov
dec
data16
pop
push
and
lahf
push
popf
sub
test
and
cmp
sti
xchg
xchg
or
xchg
ds
push
addr16
dec
mov
jp
mov
js
testl
loopne
mov
ss
std
aaa
mov
icebp
pop
out
pushf
push
mov
xor
nop
push
negb
mov
sub
ja
roll
pusha
sbb
sub
out
or
jl
pop
xchg
inc
ja
fnstenv
push
adc
pop
out
inc
pop
fwait
ret
sbbb
pop
push
shl
rcll
mov
leave
dec
lret
mov
stos
add
out
inc
outsl
scas
pusha
jmp
mov
out
shl
pop
inc
mov
fld
adcl
pop
add
xchg
enter
ss
je
jne
cmp
loopne
stos
jl
loop
pusha
mov
add
xchg
call
inc
out
pop
mov
mov
pushf
sub
es
inc
cmp
sbb
mov
test
int3
sub
fpatan
js
fisubl
push
mov
nop
stos
dec
imul
and
xor
inc
adc
jge
fwait
addr16
cltd
mov
mov
or
sub
fldenv
cmp
ret
or
shlb
inc
sub
pop
icebp
xor
push
jae
inc
sub
mov
jg
and
mov
xor
addr16
pop
adc
mov
mov
sub
in
out
mov
mov
and
jns
loop
xor
call
int3
stos
push
mov
dec
pop
scas
loop
lock
push
or
cmp
mov
mov
adc
dec
mov
xchg
out
out
inc
pop
adc
jae
pusha
dec
aaa
push
sbb
imul
gs
jp
imull
pop
into
mov
cltd
jle
mov
cmpsl
fwait
mov
cld
jbe
inc
das
mov
push
std
push
push
lock
fcoms
mov
lds
mov
adc
mov
aaa
and
rcl
fcmovnbe
dec
add
ds
sub
pop
fcoml
cmc
pusha
lret
ret
sub
lahf
into
pop
sbb
stc
scas
imul
jns
push
jl
xchg
lods
xor
js
push
test
xchg
sarl
xchg
call
addr16
sub
xchg
andl
inc
leave
fs
fisttps
sub
add
jecxz
jge
aad
vcmpsd
mov
dec
ja
mov
pushf
sahf
cmp
fldt
into
mov
sbb
adc
adc
pop
sub
lock
xchg
fcmove
sbb
cmpsl
icebp
and
std
mov
sbb
je
rcr
cmpsl
pop
inc
cli
push
pop
lds
call
rorb
imulb
imul
push
or
repnz
pushf
dec
and
xchg
outsl
fcom
stos
out
push
ss
mov
mov
lods
cli
mov
incl
addr16
xor
loopne
stos
js
pop
dec
pop
ljmp
mov
sub
out
xor
aad
push
dec
xor
inc
push
mov
fisttpl
cmp
mov
add
ljmp
arpl
pop
mov
sbb
push
ror
mov
lods
and
cmp
mov
inc
mov
jecxz
cwtl
pop
sub
negl
mov
push
and
int3
xchg
in
imul
pop
scas
nop
mov
gs
stc
in
sub
inc
aaa
pop
pushf
and
xor
iret
sub
lds
fcomps
loope
xchg
fwait
stc
jnp
mov
jb
pop
test
inc
jnp
push
jo
popf
pop
cmp
in
clc
jmp
mov
into
insb
or
mov
jno
or
or
mov
xchg
fistps
mov
into
xchg
mov
xchg
inc
push
dec
jo
into
mov
ljmp
and
das
cwtl
mov
int3
adc
jle
mov
xchg
scas
adc
pop
movsb
inc
cmp
mov
dec
addb
dec
stc
cmp
adc
xor
popf
sub
cmpsb
add
cltd
shlb
movsl
pop
sbb
lds
mov
shrd
add
sbb
add
xchg
je
ss
fs
mov
pop
sar
push
mov
mov
and
ret
addr16
mov
imull
sbb
sub
xor
stos
jg
mov
outsl
jge
andl
xor
sbbb
in
xor
arpl
jp
dec
pop
xchg
fistl
adc
out
mov
daa
and
sbbb
sar
sub
mov
cmp
or
and
lcall
jne
jmp
loopne
push
popf
pop
je
mov
fdivrs
jle
push
sbb
into
into
pop
insl
mov
movsl
mov
loope
xor
and
xlat
test
sbb
dec
movsb
rcll
adc
add
outsl
lock
sbb
std
mov
subl
leave
mov
xchg
sti
push
cmc
inc
daa
test
mov
bound
cltd
div
add
add
jge
lahf
nop
arpl
clc
test
and
and
and
dec
inc
js
inc
xor
lret
pop
cld
in
popa
rclb
mov
adc
fdivl
xchg
mov
sarb
push
in
ds
jmp
jo
in
in
repz
mov
inc
or
sti
pcmpgtb
clc
in
lods
stos
add
sbb
pop
pusha
sbb
mov
subb
and
sub
mov
fwait
test
xor
xor
add
stc
clc
push
pop
dec
enter
mov
stos
push
iret
xorl
test
test
push
pop
movsb
popf
enter
push
fstpl
test
mov
mov
out
sbb
js
xchg
js
mov
int3
xor
iret
out
cmp
neg
movsl
sub
ljmp
pop
lret
pop
loopne
pop
sbb
cltd
pop
jne
repnz
xor
push
and
mov
mov
jmp
lock
inc
ror
fwait
mov
lea
sbb
xchg
fbld
sbb
sbb
xor
insl
mov
xchg
inc
mov
sub
push
and
aas
adc
mov
mov
in
fcomps
int3
xchg
or
jnp
ss
int3
xor
imul
sub
adc
aad
dec
dec
and
gs
rcrl
mov
gs
popa
push
bound
scas
xchg
stc
push
int3
adc
xor
sti
xor
and
jne
mov
push
inc
xor
push
dec
jmp
dec
shll
jae
in
aam
shll
out
adc
insl
push
or
xchg
cltd
mov
mov
xor
loopne
mov
outsl
sbb
in
jnp
push
add
enter
push
pop
lcall
mov
insb
cmp
lea
fcmovbe
inc
sub
xchg
mov
mov
int3
jbe
test
xchg
lret
push
nop
mov
dec
clc
mov
mov
movsb
cmpl
aaa
cld
out
insb
rorl
mov
cltd
mov
sbb
or
and
push
pushf
pop
mov
aaa
ror
call
sub
sbb
adc
or
mov
nop
cld
inc
test
dec
and
sarb
mov
inc
jg
scas
leave
xchg
sub
adc
enter
ret
and
dec
push
dec
inc
mov
inc
negb
mov
sub
sub
movsl
ss
pop
and
iret
in
or
push
inc
mov
dec
mov
inc
fcmovnbe
xchg
fldenv
les
loope
xchg
inc
scas
lds
add
sbb
sub
in
icebp
outsb
mov
sbb
loope
nop
mov
xchg
cli
sbb
dec
xor
pushf
jns
mov
adc
jmp
hlt
fs
push
loopne
adc
or
push
sub
aad
pop
movsb
popf
xor
mov
sar
mov
icebp
pop
cmp
ret
test
inc
movsl
mov
ja
lods
sbb
or
ret
cltd
push
std
sbb
arpl
andb
and
add
loope
addb
mov
and
in
cli
incl
mov
xor
sbb
mov
test
in
cli
shll
push
or
mov
mov
dec
push
popa
push
loop
push
aad
pop
mov
xor
shrl
out
stos
sub
mov
mov
insb
cmpsl
or
inc
clc
fsubl
sub
push
push
inc
jno
mov
mov
addr16
dec
lock
mov
cltd
inc
push
dec
push
loop
aad
pop
xchg
mov
cli
sbb
stos
fists
jp
inc
testl
cmpsl
xor
dec
ret
js
sbb
push
jge
repnz
sarl
fsin
fdivs
orb
insl
push
cmpl
movsl
outsl
stc
iret
inc
push
mov
scas
inc
sti
fwait
cld
dec
push
test
out
sbb
push
lea
mov
dec
xchg
lea
in
sbb
sbb
mov
lea
xor
mov
mov
xchg
sbbl
popa
bound
outsb
pop
jno
sbb
pop
lds
dec
int
mov
aas
fildl
fsts
xchg
in
add
bound
cmp
sahf
push
ret
inc
adc
cmpsb
sub
mov
xor
adc
and
mov
mov
xorl
and
xchg
pop
push
mov
inc
add
mov
jno
cmp
loope
scas
cmp
mov
into
mov
cmp
popf
stos
xchg
add
xor
ss
ds
inc
push
mov
and
pushf
xchg
insb
pop
fimuls
xorb
xchg
stos
jno
and
xchg
or
fstps
scas
imul
in
orl
inc
fwait
or
jle
stos
fs
mov
mov
arpl
sahf
lahf
mov
pop
mov
pop
pop
repnz
jno
add
fwait
in
bound
mov
bound
pop
scas
adc
inc
decl
lret
mov
add
lods
pop
aam
sub
mov
idivl
mov
adc
push
mov
cmp
mov
adc
dec
lahf
mov
sti
sbb
loope
pop
popf
jne
sub
dec
pop
outsb
iret
lea
or
ja
aam
ljmp
inc
mov
out
leave
ss
outsl
or
dec
in
pop
mov
mov
stos
movsl
mov
loope
sbbb
pushf
pusha
ljmp
movsl
stos
adc
jbe
jb
dec
mov
cmp
xchg
pop
loope
jmp
mov
dec
clc
iret
dec
xchg
sbb
loop
xor
or
in
and
outsb
or
jl
roll
repz
pop
hlt
ljmp
lret
xchg
inc
xor
push
mov
cmp
movsl
jl
data16
xchg
add
xor
and
cmp
sub
cli
cmpsl
shlb
dec
arpl
lods
ljmp
jl
loop
fildl
int
dec
sub
je
jns
aad
in
add
dec
jns
cmpsl
leave
mov
insb
bnd
fsubrs
std
and
insb
gs
sbb
push
dec
mov
mov
ret
push
jge
adc
pop
mov
sbb
enter
out
emms
subb
cmpsb
and
jns
clc
or
xor
cmc
cld
addr16
cwtl
ret
dec
mov
loopne
lds
or
mov
pop
sub
lcall
push
push
xchg
adc
into
into
sbb
insl
xchg
jl
stos
fs
test
vandps
sub
int3
decl
add
cmp
movsb
pop
jnp
inc
adc
iret
shl
jl
sbb
or
dec
pusha
dec
pop
in
js
es
es
fs
push
sbb
rcrb
xor
and
hlt
sbb
ror
mov
ljmp
aad
push
outsb
mov
rcrl
push
dec
xor
shrl
cmp
mov
fisubl
adc
lret
hlt
fwait
xchg
inc
f2xm1
rcr
lods
sbb
mov
cmp
divl
dec
xchg
xchg
imul
cs
sbb
dec
and
pop
jge
push
mov
cld
adc
outsb
and
popa
stc
aaa
fwait
xchg
adc
xor
adc
fisttpl
hlt
imul
inc
ret
insb
pop
daa
push
js
rorl
cltd
mov
xor
mov
por
pop
mov
jns
mov
pushf
pop
inc
mov
fcoms
daa
xor
cmp
test
mov
ja
cmpsl
sbb
and
arpl
mov
xor
fsubp
add
push
lret
adc
aaa
mov
push
lock
outsl
ss
das
shl
mov
ss
shlb
scas
mov
movsb
push
sbb
sub
push
mov
jecxz
mov
sahf
fldl
jle
divl
add
add
sub
dec
mov
sub
movsl
mov
sbb
mov
xor
adc
or
sahf
adc
cltd
jno
add
inc
shrb
shll
xchg
xlat
add
rcrl
jo
mov
adc
ja
rclb
mov
cmp
cmp
bound
loop
jns
push
pop
ss
sbb
sahf
pop
insl
pop
inc
cmp
inc
gs
shlb
pop
dec
das
sub
setnp
fisubs
aaa
loope
xlat
push
ss
mov
push
adc
jl
mov
icebp
outsl
and
inc
xchg
clc
and
push
nop
push
lret
xchg
xor
inc
bound
test
shlb
and
mov
sbb
jmp
dec
mov
cmpsl
sub
xchg
stos
and
inc
pop
or
ss
dec
in
loopne
outsl
cmc
xor
sub
les
cmp
mov
hlt
lods
cli
dec
fidivs
dec
test
inc
mov
call
jmp
xchg
imul
sti
xchg
test
shlb
sub
repz
arpl
xchg
out
nop
sahf
jo
xchg
cld
mov
ja
adc
repnz
cmpsb
mov
sub
inc
enter
popa
sub
cwtl
ret
cli
xlat
lret
or
push
and
push
dec
pushf
add
and
pop
and
icebp
jecxz
jge
xchg
dec
lods
jb
xor
imul
dec
mov
mov
adc
jnp
pop
mov
fcoml
xor
outsl
jmp
pop
daa
push
xchg
nop
and
stos
sub
enter
push
hlt
mov
jecxz
rclb
out
popa
cli
movsb
dec
rdtsc
std
imul
push
or
mov
cmpsb
mov
ljmp
test
add
mov
fisubrl
iret
fs
inc
sub
mov
mov
xchg
lds
pop
push
lcall
adc
sbbb
push
dec
mov
inc
decl
popf
mov
cmp
in
cmp
mov
es
xchg
cmp
shl
inc
outsb
mov
mov
xchg
mov
mov
mov
dec
jle
pop
repnz
ret
fsubrl
xchg
lcall
adc
ficomps
ljmp
mov
sbb
mov
inc
iret
hlt
push
aad
mov
bound
add
out
lds
je
jmp
push
xchg
push
in
int3
cmp
pop
shll
mov
sbb
dec
inc
aam
fdivrl
scas
in
and
jg
sbb
scas
sahf
jb
into
mov
cmc
jl
mov
aaa
jnp
dec
jns
ja
adc
sbb
mov
mov
xor
scas
shll
sahf
and
pop
cmpsb
inc
xchg
pop
inc
clc
add
scas
sbb
loopne
mov
in
sbbb
decl
sti
and
and
sub
or
pop
mov
nop
or
lods
push
fs
scas
inc
andl
cld
std
loop
pop
aam
mov
or
mov
jl
mov
loope
jno
inc
clc
xor
add
mov
sbb
cmp
or
jecxz
icebp
shrl
insl
pop
jl
test
mov
and
adc
test
aam
cmp
and
fdivs
cltd
xchg
mov
in
arpl
xlat
pop
mov
pop
int
sbb
sub
stos
and
insb
js
and
jo
and
or
cli
dec
pop
push
inc
add
orl
mov
dec
data16
lock
xchg
repnz
sbb
rcrb
std
das
cmp
mov
inc
sbb
add
and
mov
adc
movsb
shrl
adc
jne
les
es
mov
pop
popf
ds
sbb
sub
dec
xchg
mov
xchg
dec
fnstcw
mov
jne
lahf
inc
lcall
or
cmp
lahf
int3
loop
and
or
fs
mov
ficomps
lds
push
jae
dec
mov
dec
sbb
fwait
lea
arpl
enter
jns
cltd
in
movsl
mov
push
ret
mov
pop
cmp
inc
push
nop
ljmp
mov
aad
stc
jl
popf
dec
jge
add
jg
and
push
cwtl
adc
ds
outsl
and
mov
repz
mov
cmp
pushf
sarb
int
push
xchg
sbb
cli
mov
movsb
das
mov
testl
addl
leave
or
mov
outsl
or
xor
out
icebp
pop
js
and
aaa
adc
sbbb
dec
mul
scas
cmpsl
rcr
cltd
xacquire
scas
addl
orl
mov
sahf
cmp
pop
test
imul
scas
xchg
jo
dec
jecxz
cld
xchg
lods
xchg
popa
add
sbb
add
lea
mov
shlb
and
jmp
lea
das
mov
aaa
shrb
pop
xchg
jl
xor
pop
push
std
jmp
sbb
jno
hlt
mov
negb
int3
fstpl
sbb
cmp
mov
je
mov
test
shll
std
out
jb
scas
clc
xor
and
cmp
add
ftst
popf
mov
mov
mov
out
cmp
push
sub
inc
test
addl
mov
scas
out
jbe
lods
rcll
bound
add
je
aad
outsl
imul
rsqrtss
fld
adc
add
cmp
push
pop
mov
mov
add
and
into
lea
push
cmp
dec
imul
je
cmp
ret
aam
pop
outsl
sbb
fdivrl
rcl
in
aaa
xchg
outsb
mov
jge
cmc
popa
idivl
loope
mov
or
ds
sti
jbe
repz
lret
cmpsb
sbb
sahf
pop
mov
dec
mov
push
incl
mov
insl
mov
leave
push
jle
adc
std
inc
jg
sbb
pop
jmpw
aas
sub
cmp
sbb
mov
fldcw
mov
mov
fcmovnb
stc
push
sbb
movb
mov
xor
jno
jne
stos
jnp
xchg
xchg
add
sbb
mov
out
pop
call
sub
push
mov
frndint
arpl
imulb
jno
cs
sub
mov
add
inc
in
mov
scas
loop
ret
and
data16
sub
rol
add
mov
pop
daa
or
fdivl
mov
addr16
les
ja
std
out
push
xor
cmpsb
fisubrs
dec
pop
out
cltd
adc
shrl
pop
or
pop
mov
hlt
lock
shrb
jnp
ret
inc
inc
sti
pop
subl
add
jge
call
imul
inc
in
dec
dec
dec
and
mov
clc
icebp
into
bound
cld
inc
jns
pop
dec
in
mov
int
int
imul
xlat
ret
lods
data16
data16
ss
fnstenv
mov
mov
lods
sbb
mov
addr16
insb
xchg
mov
mov
aam
lods
and
aam
pop
mov
das
loopne
mov
add
xchg
nop
gs
into
xor
mov
jbe
mov
inc
scas
pushf
or
push
les
push
imul
dec
addr16
pop
sahf
ret
mov
movsb
and
ret
push
pop
jnp
dec
sub
adc
scas
or
mov
mov
sbb
lret
fstl
in
mov
dec
cmp
rolb
idivb
xchg
xchg
ret
cwtl
or
jns
clc
inc
mov
or
out
insl
mov
mov
sbb
test
mov
shlb
out
aad
movb
sbb
ficompl
mov
inc
cmp
pop
mov
sub
scas
ds
mov
push
bound
and
outsb
or
lret
ret
mov
scas
fisubl
pop
aad
mov
jmp
stos
repz
and
ficompl
dec
ja
mov
js
push
popa
mov
xor
push
ja
imul
xchg
pop
mov
cmc
jo
movsl
outsl
js
xchg
lods
ja
pop
cmp
add
sub
mov
xchg
sbb
imul
mov
lds
lea
int3
popa
inc
mov
aas
inc
add
lods
inc
adc
push
aam
mov
lods
call
xchg
in
cmpsb
pop
stos
outsb
sbb
stos
jne
jge
add
jmp
sbb
pushf
cmp
vshufps
jmp
mov
scas
xchg
xchg
add
or
or
mov
xchg
fiaddl
dec
ljmp
jmp
sub
out
lahf
xchg
jno
cld
lret
xor
and
or
cmc
fldenv
adc
jle
sub
pop
aad
test
or
or
or
and
adc
and
inc
mov
add
mov
cmp
add
jns
pop
scas
or
pushf
outsb
or
and
push
enter
jnp
mov
addr16
je
stc
in
dec
bound
push
xor
push
into
cmp
xor
xor
xlat
xor
xchg
jb
xchg
push
lcall
sbb
xorb
inc
test
insb
in
dec
and
xor
inc
mov
xor
sub
push
adc
cs
pushf
pusha
aas
pop
cmp
jb
mov
pop
cmp
daa
push
inc
push
add
mov
pushl
negl
xor
xchg
jo
daa
cmp
daa
popf
arpl
mov
push
jg
lds
ljmp
sub
dec
lahf
inc
or
nop
mov
aaa
xchg
shll
lods
nop
add
scas
sti
xchg
out
dec
lock
jae
mov
sbb
cwtl
jns
arpl
cltd
add
ja
fnstsw
sub
pop
jmp
imulb
adc
mov
xor
mov
mov
mov
jecxz
ror
pop
pop
xchg
sub
jo
inc
xchg
xor
outsl
rclb
dec
movsl
enter
push
iret
adc
or
xorb
mov
std
dec
mov
enter
jg
je
mov
lds
xchg
aam
push
pop
cmpl
cwtl
js
pushf
mov
inc
pop
outsl
call
push
or
jl
bound
mov
es
mov
outsl
sub
push
fs
pop
pop
out
clc
adc
fsub
inc
xchg
inc
idiv
out
and
mov
lret
xchg
enter
ds
cmc
jmp
push
xchg
fnstsw
push
mov
repnz
add
push
fucom
aam
dec
push
mov
in
pop
jp
mov
out
or
test
adc
repnz
sub
adc
popa
mov
push
cmp
xchg
pop
int
mov
mov
xor
mov
stos
popa
aam
mov
movsl
dec
adc
mov
insl
jecxz
repz
sbb
iret
inc
ror
movsb
dec
mov
or
clc
sub
sub
test
dec
inc
pop
js
mov
insb
inc
cld
adc
test
mov
cmpsb
push
aam
and
idiv
or
cld
xchg
test
les
lcall
sbb
stc
add
ret
repnz
insb
adc
rclb
lcall
lahf
mov
test
ljmp
push
jb
subl
outsb
in
jl
out
fxam
scas
aas
loopne
int
fisttps
inc
lret
les
lods
popf
pop
add
ret
and
sbb
aam
adc
fs
jmp
mov
push
mov
sbb
lods
mov
xor
push
fnstsw
sbbl
data16
in
sbb
and
in
push
test
daa
mov
das
jg
pop
cmp
mov
loopne
outsl
dec
xchg
cmp
ret
sbb
adc
adc
cmp
cmp
pushf
andb
sub
adc
jge
mov
push
add
sub
pop
jae
add
pop
dec
leave
in
iret
push
inc
cwtl
cwtl
mov
dec
mov
sbb
call
adc
pusha
inc
xor
ret
outsl
mov
pushf
mov
pop
scas
iret
lahf
and
loope
sub
mov
orl
stc
mov
mov
xchg
fbld
lahf
jne
xchg
jl
rcll
loope
xchg
int3
xchg
jne
lret
dec
ss
in
mov
adc
mov
lds
push
and
jnp
in
lret
push
fcomp
mov
stos
loope
push
sub
add
sub
in
pop
mov
inc
xor
inc
mov
mov
cld
mov
push
add
sub
fiaddl
cmc
sahf
or
in
adc
pop
jns
lcall
sbb
int3
fs
xlat
and
sbb
mov
or
push
ds
adc
cli
test
ret
push
movsb
dec
fwait
mov
insl
xchg
call
roll
sbb
push
test
lcall
std
fstpl
ret
cld
inc
dec
imul
in
or
xchg
sarb
or
jp
mov
xchg
xchg
sti
lds
jno
es
dec
nop
jns
mov
pusha
sub
xchg
movsl
in
mov
xchg
mov
sar
bound
cmp
mov
adc
and
cmc
sub
lods
jno
dec
xchg
jae
xlat
jp
pop
sbb
loopne
add
roll
mov
das
shlb
and
mov
xor
mov
aas
pusha
sbb
frstor
mov
inc
sub
cmp
xor
shlb
mov
mov
out
mov
or
in
stc
ficoml
inc
cltd
xchg
xlat
inc
imul
pushaw
repnz
xor
fcmovu
mov
popa
mov
add
push
push
hlt
jns
addb
mov
sub
icebp
int3
ja
mov
adc
out
loope
leave
es
cmp
mov
adc
cs
mov
xchg
not
movsb
lods
call
xchg
xchg
dec
adc
mov
sbb
lahf
jge
mov
out
pop
mov
movsb
pushf
push
lret
dec
push
inc
scas
and
test
pusha
xchg
scas
dec
sub
adc
cmp
push
popf
and
pop
mov
ret
loope
int3
cld
insb
pop
orb
ror
mov
pop
inc
iret
int
shlb
sbb
add
lea
adc
push
fldt
sbb
repz
lea
ja
cmp
and
sub
loop
inc
dec
cwtl
bound
mov
shlb
imul
jne
repz
xchg
jecxz
push
cs
cwtl
vcvttss2si
pop
insl
test
inc
insl
and
inc
dec
and
out
out
pop
adc
inc
and
jae
mov
repz
lods
xchg
dec
sarb
jg
leave
outsb
mov
jne
add
iret
fstpl
and
fsubl
ficomps
lods
repz
push
inc
jb
lea
pop
ja
jmp
xor
add
add
fcomps
sbb
sti
sub
lret
fcoml
pop
push
xor
out
sbb
and
push
dec
or
and
dec
adc
and
dec
sets
scas
push
jbe
sub
popf
mov
negl
lret
call
jno
ret
cli
testb
mov
push
cld
insb
fs
add
and
inc
mov
test
push
fs
aas
lock
mov
cltd
jne
out
les
insb
push
sbb
sub
js
lcall
xor
push
rcrb
je
pusha
adc
dec
or
mov
push
insl
add
repz
pop
popa
mov
sub
jmp
dec
out
repz
mov
push
fildll
pop
fdivr
xchg
cld
push
jge
mov
stos
mov
mov
iret
fidivrs
popf
push
push
push
xchg
dec
mov
fisubs
cmpsl
incb
cmp
nop
jno
orl
sub
repnz
pop
mov
scas
sbb
loop
out
pop
in
loopne
sarb
imul
push
and
jbe
les
ret
sbb
jge
adc
ret
lock
jbe
sub
fnstenv
push
xchg
or
test
nop
mov
add
pusha
jl
add
add
inc
dec
lahf
xor
bnd
dec
lock
scas
xchg
jle
or
pop
adc
insb
rcll
adc
mov
and
push
loope
lea
je
jo
movsl
movsl
mov
push
sub
push
cltd
mov
jge
aas
cld
cmp
mov
stc
int3
cmp
sbb
and
lahf
retw
push
fisubl
iret
mov
lret
mov
lods
xchg
sbb
int3
mov
jmp
sahf
jge
cmc
cltd
pop
mov
lds
leave
sub
push
sahf
mov
jle
mov
or
dec
or
std
mov
adc
dec
cmp
popa
or
xchg
inc
or
pushf
mov
jmp
add
xlat
xor
cmc
push
xchg
pop
fstpl
or
dec
pop
mov
xchg
add
lret
imul
pop
stos
scas
mov
pop
pusha
es
pop
orl
fwait
cmp
jmp
cmp
movsb
shll
inc
dec
adc
push
mov
dec
adc
xchg
aaa
mov
dec
aas
shl
mov
fs
push
mov
add
pop
mov
xchg
mov
inc
xchg
in
test
jo
sub
add
push
scas
xchg
rolb
mov
sti
and
push
je
pop
add
add
test
jmp
dec
shlb
ret
leave
sub
sub
fimull
add
fs
adc
cmp
in
jp
xlat
xor
lret
js
popf
xchg
in
push
mov
aas
into
jno
xchg
adc
es
pop
leave
xor
inc
cld
ds
dec
es
jno
lea
mov
inc
fisubrl
fsub
sahf
frstor
test
jae
cmp
sub
mov
loope
pop
sahf
pusha
lods
mov
and
sarl
inc
jae
xor
test
adc
int3
stos
int3
les
cmp
iret
xchg
cmp
adc
jg
xlat
sub
adc
push
cmpsb
mov
adc
mov
lea
jmp
jne
jl
inc
or
cmp
jo
mov
ljmp
lcall
inc
push
aaa
insl
and
xor
xor
pop
fdivrs
pause
daa
cmc
les
addl
xchg
xorb
sub
inc
loopne
stc
pop
mov
xorb
push
cld
mov
jecxz
xor
sbb
movsb
pop
nop
inc
ret
dec
dec
xor
mov
and
or
xchg
inc
out
dec
repnz
adc
stos
inc
dec
or
adcb
mov
add
cs
sub
xchg
shll
addr16
adc
aam
and
pop
sahf
lahf
rcr
shlb
cltd
mov
xchg
sub
xchg
aam
dec
das
in
xor
add
jl
sahf
xchg
pop
rolb
fsub
jo
mov
jl
scas
dec
add
aas
pop
jnp
sahf
ljmp
mov
push
xchg
not
rolb
xor
les
pop
fadds
rorl
pop
fstl
ret
lods
dec
or
call
enter
mov
roll
mov
mov
dec
mov
mov
dec
loopne
sbb
mov
sub
stc
int
dec
push
imul
mov
dec
mov
test
int3
sub
sub
loope
cmc
xor
push
leave
pop
dec
in
test
dec
lahf
xchg
pop
repz
cwtl
jge
adc
cltd
dec
cld
lods
sub
inc
out
mov
or
pop
cli
sub
sub
scas
dec
or
dec
jne
imul
mov
cmp
inc
pop
sbb
mov
inc
test
and
loopne
inc
ja
mov
fwait
jnp
jno
cmc
mov
fildll
jle
add
fiadds
pop
lock
mov
push
xchg
out
mov
sub
jne
mov
popa
xchg
fsts
jmp
sbb
mov
cwtl
sbb
dec
xchg
push
mov
bound
imul
fnstsw
sbb
mov
cmp
xchg
jns
mov
jmp
mov
xchg
pushf
xor
pusha
int3
mov
rorb
mov
jmp
fs
sub
pop
lret
ljmp
call
add
negb
pusha
clc
test
sub
cwtl
cmp
dec
jmp
cmp
loopne
xlat
pushf
jne
mov
es
jge
cmpsl
and
aas
shlb
push
lds
leave
stos
iret
adc
mov
pop
jmp
test
xor
cmp
xchg
push
jae
xor
mov
loopne
xor
push
pop
aam
pop
mov
sarl
cmp
mov
mov
addb
scas
adc
ret
push
shlb
jge
int3
push
ret
jne
push
xlat
pop
xor
sub
shll
and
push
out
push
pop
mov
orps
sahf
mov
xor
mov
inc
cmp
sub
fdivrl
xor
sti
cmp
fbld
stos
lds
mov
cmpsl
test
lret
cmp
faddp
popa
sub
dec
mov
mov
jbe
xor
sbb
mov
mov
dec
cwtl
fwait
jg
mov
dec
xlat
stos
das
or
mov
repz
sahf
loope
push
push
mov
mov
pop
dec
ljmp
push
std
montmul
cmpsb
test
enter
push
fmul
sub
outsb
cmp
cmp
out
xlat
sub
lock
sbb
andb
adcl
mov
jns
mov
fisttpll
lret
imul
adc
popl
xlat
sub
fdivs
jmp
imul
sub
xor
mov
pop
push
mov
mov
cmove
sub
cmp
iret
or
cmp
rcll
dec
mov
push
add
fimull
fwait
and
loop
xchg
inc
push
push
inc
into
iret
fisttpl
cli
clc
ucomiss
leave
and
jns
cmpsb
stc
aaa
out
cli
sub
cmpsl
inc
ficomps
mulb
push
xor
fs
mov
mov
fmuls
inc
xchg
inc
cmpsl
mov
mov
add
test
sbb
or
push
ret
sbb
xor
dec
test
shlb
repz
pop
mov
and
jg
imull
shrl
cld
pop
push
pop
divl
ss
mov
out
add
pop
or
xor
cmp
xchg
out
dec
xchg
out
push
addr16
shlb
clc
roll
rol
xchg
xor
sub
ds
push
and
jge
repnz
daa
xchg
daa
push
cwtl
dec
popa
outsb
out
xor
mov
jne
dec
insb
stos
pushf
xchg
js
xchg
inc
push
out
cld
mov
in
iret
pushf
in
arpl
arpl
inc
shll
pop
pop
mov
cmpsb
cmpl
push
aad
cs
mov
xor
test
xchg
aaa
xlat
aam
lcall
mov
movsl
loopne
test
sbb
rcrb
mov
mov
lds
cmp
in
popf
jns
fs
dec
mov
out
sub
xor
pop
adc
loopne
mov
fwait
sbb
insl
sub
cmovge
add
rcrb
add
xchg
out
repnz
push
popa
out
dec
push
repnz
addr16
or
pop
xchg
xor
mov
dec
mov
push
mov
add
out
stos
xchg
xor
jns
xchg
testb
add
addr16
divl
dec
pop
cwtl
xchg
decl
jb
inc
jg
outsl
ds
pusha
and
call
daa
sub
mov
je
aam
dec
sub
xor
movsl
ds
or
mov
sub
pushf
xor
testl
insl
scas
sub
inc
push
jecxz
pop
add
es
adc
push
add
stc
and
jne
shrl
stc
dec
mov
and
or
push
pop
inc
inc
lock
push
lods
clc
insb
xchg
add
shrb
mov
sti
lret
cmp
or
dec
xor
mov
mov
cmpsl
mov
pop
push
shll
out
sub
int
cmp
outsl
xchg
pop
adc
imul
or
pushf
adc
xchg
pop
mov
mov
push
icebp
pop
out
inc
mov
cmp
fstpt
aas
mov
push
mov
rcr
pop
out
push
shrb
dec
push
divl
addb
pushf
sbbl
shrl
add
fildll
xchg
push
iret
imul
jae
push
orl
mov
aaa
jne
xchg
cli
adc
loop
lods
adc
add
cs
popa
subl
jbe
sub
dec
test
dec
adcl
sbb
rcr
adcl
movsb
les
cmp
iret
pop
or
les
xchg
fcmovnu
xor
clc
jo
inc
pop
add
jns
xchg
lods
xchg
inc
pusha
xchg
inc
add
push
arpl
sub
xor
andb
pushl
outsb
pop
stc
outsl
jns
notb
pop
cmp
ss
es
les
in
jp
mov
mov
loope
lock
dec
out
lds
outsb
call
cmp
notl
add
pop
and
popa
scas
cmpsl
sub
and
inc
js
lret
and
push
dec
arpl
mov
dec
pop
jb
xchg
pop
sub
je
mov
ljmp
dec
sahf
sti
arpl
mov
bound
and
test
pop
push
rcll
mov
sub
test
sub
mov
mov
lods
push
and
dec
mov
fmull
leave
or
cmc
daa
cmpsb
int
inc
sahf
jp
mov
dec
ljmp
cmpsb
jg
add
push
aas
pop
sahf
pop
stc
lret
sbb
jge
movsl
pop
mov
call
daa
repnz
repnz
and
add
cmpsb
leave
xor
ljmp
pushf
inc
and
repnz
icebp
lds
push
xchg
stos
sbb
or
jo
out
or
xchg
xchg
in
imul
mov
into
mov
into
and
imul
adc
ret
rorb
jo
and
push
and
std
push
pop
sub
insb
mov
nop
adc
push
dec
cld
repz
nop
push
lret
addb
scas
mov
ret
inc
nop
push
test
mov
xor
stos
mov
dec
lahf
test
add
adc
jno
imul
cld
xor
shlb
xchg
jmp
dec
iret
vmwrite
jl
loopne
jge
int
pop
daa
xchg
scas
iret
inc
jge
idivb
pop
adc
push
lods
test
stos
mov
bound
pop
js
shll
jl
inc
dec
in
or
daa
dec
sub
xchg
sub
add
jo
sbb
xchg
dec
dec
pop
insb
jge
cli
mov
loopne
fs
in
cs
lahf
dec
mov
sbb
call
xchg
fldt
cltd
sub
and
fs
test
jle
in
sbb
xchg
lea
in
push
push
inc
or
mov
cld
negl
sarl
push
jae
arpl
enter
leave
push
mov
jae
daa
or
xor
inc
ret
add
adc
inc
dec
jo
xchg
mulb
push
mov
fisttpll
dec
pop
adc
mov
mov
in
ja
add
jb
xchg
in
in
inc
arpl
jnp
lret
xor
ljmp
inc
adc
stc
cld
pop
aas
and
sbb
push
mov
ss
js
bound
cmp
loope
jp
adc
clc
iret
xchg
out
fwait
ds
push
inc
inc
push
or
cmp
sahf
and
dec
xchg
outsb
les
add
or
mov
lcall
pushf
js
pop
out
pop
and
call
jbe
mov
mov
aaa
cmpsb
inc
lods
jae
or
pop
xchg
out
sbb
add
jmp
rep
sub
xor
sahf
aaa
mov
cmpsb
adc
mov
inc
pusha
mov
scas
fwait
mov
mov
mov
es
shl
das
and
or
adc
and
xchg
ja,pn
cwtl
sub
out
pushf
sbb
imul
fcoms
mov
lcall
adc
push
or
mov
push
fcomps
xorb
mov
dec
mov
outsl
outsb
push
lret
push
mov
in
mov
push
sub
vpmaddwd
mov
push
pop
inc
fmuls
rorb
mov
insb
cmp
test
loope
sbb
push
mov
sbb
in
xlat
fadds
cmpsl
sti
out
sti
xor
bound
loopne
push
int3
jb
pop
fists
adc
cmc
dec
iret
loope
mov
vmread
mov
fwait
adc
adc
mov
movsl
or
mov
jle
inc
xor
and
jbe
adc
jle
sti
pop
push
pop
popf
mov
aaa
in
inc
mov
and
icebp
add
in
in
clc
cmpsb
in
nop
jp
pop
arpl
insl
adc
lcall
mov
je
pop
iret
divb
xchg
cs
cmp
hlt
jne
stc
outsl
and
cwtl
mov
dec
jns
into
rorb
loope
cs
mov
mov
addb
iret
fwait
out
xchg
idivl
mov
icebp
mov
adc
dec
sbb
imul
add
adc
lahf
stc
xchg
stos
dec
loop
mov
cmp
loopne
sbb
sti
ja
nop
mov
sub
or
adc
roll
xchg
adc
push
enter
pop
pop
pop
nop
in
xor
fidivrs
outsb
fists
push
faddl
sti
push
sti
clc
add
xchg
pushl
iret
pop
jb
pop
jbe
jl
cwtl
into
sub
in
in
push
add
rcrl
lret
xchg
es
rclb
add
mov
xchg
add
mov
arpl
jns
movsl
push
scas
stos
push
subb
sti
adc
mov
in
sbb
jne
xchg
mov
add
adc
roll
gs
mov
mov
jbe
les
outsl
daa
xor
jno
inc
test
inc
lahf
rorb
mov
jge
pusha
dec
sbb
lea
mov
inc
xchg
pop
xlat
add
popa
add
mov
int
pop
dec
cmpsl
das
jns
rcll
in
dec
rcrb
pop
cld
or
cli
and
adc
es
pusha
push
cmp
sbb
stos
aaa
mov
mov
and
sbb
imul
xchg
pop
jmp
jmp
imul
xchg
mov
or
out
out
loope
mov
sbb
cld
mov
test
lods
imul
mov
sub
pop
jmp
sbb
push
mov
adcl
ss
push
adc
sbb
mov
ja
jg
fbld
cmc
jg
dec
in
je
push
xchg
outsl
mov
arpl
das
cld
lds
fs
stc
into
aad
stos
loope
xchg
fucom
mov
fsubs
das
test
cld
mov
stos
mov
pop
xchg
mov
mov
cmp
dec
add
dec
dec
roll
jnp
xor
into
ret
ret
mov
jae
sarb
cmc
jmp
lret
adc
rol
dec
mov
lcall
loop
sar
inc
jo
cli
adc
cli
push
inc
pop
mov
outsl
in
sub
adc
pop
mov
mov
inc
stos
pusha
hlt
loop
push
dec
jne
or
cltd
pusha
and
movsb
in
xor
jae
xorl
rcr
ret
sbb
pop
cmp
mov
xlat
add
mov
lcall
scas
clc
xor
add
xchg
adc
cmp
cmp
sub
jmp
sub
movsb
ret
mov
inc
inc
mov
insb
mov
loope
sub
jecxz
sub
jp
and
jecxz
fisttpll
fldl
cmc
popf
mov
mov
nop
js
push
cmc
pop
pushf
xchg
jno
test
js
fmull
push
inc
lock
jns
test
cmp
pop
rcrl
loop
test
push
push
aad
inc
mov
ret
sarb
cmpsl
mov
or
add
mov
sbbb
fmulp
add
mov
or
jge
ror
sub
jmp
jo
sbb
adc
std
loope
js
jne
test
pop
std
add
inc
sbb
aad
mov
add
mov
and
aaa
push
sbb
pop
push
push
jg
ja
aaa
xchg
pop
or
out
hlt
iret
jecxz
dec
fsts
dec
setb
nop
cld
ljmp
adc
sti
je
clc
mov
push
dec
inc
int3
test
xor
dec
cmp
push
sub
pushf
out
call
addr16
cld
mov
xchg
out
dec
mov
adc
imul
int
leave
loopne
test
lods
and
pop
sub
test
orl
fcmovnbe
lds
mov
dec
sbb
inc
test
sahf
cmp
push
test
es
arpl
out
add
std
cmpsl
inc
iret
xlat
sub
int
in
popa
add
xor
xor
sub
sbbb
sbb
lods
test
mov
mov
cmp
sar
and
orl
sub
test
daa
lret
fisubl
ret
das
dec
or
cltd
mov
inc
subl
sub
xor
pop
mov
xor
cmp
push
mov
add
inc
icebp
bound
adc
push
iret
dec
xchg
or
out
xor
or
dec
ret
aaa
sbb
inc
adc
test
adc
inc
pop
mov
repz
addl
adc
in
repz
cmp
push
mov
shll
sub
add
repz
dec
jecxz
aas
dec
lcall
xor
sbb
pop
lods
jecxz
cs
stc
fisubs
aas
dec
xchg
xchg
filds
in
inc
sbb
mov
std
aas
and
lods
cmp
push
pusha
push
leave
out
dec
int3
push
jo
cltd
cmp
jecxz
xchg
aaa
stos
inc
pop
lods
fmulp
hlt
ja
das
jns
cmp
aam
mov
mov
xor
cmp
jp
fwait
mov
int
fcoms
push
mov
jp
push
cmp
int3
pop
pop
add
orb
xchg
inc
lret
xchg
sbb
mov
loopne
pop
in
mov
xchg
jmp
leave
pop
dec
mov
cwtl
sub
aaa
fildll
and
loopne
xchg
das
pop
mov
sbb
loope
mov
xor
xor
sahf
cmpsb
push
adc
mov
mov
sub
mov
andl
xor
loopne
jae
cld
xor
imul
add
fdivrp
mov
in
jb
in
mov
sbb
jecxz
out
xchg
dec
xchg
icebp
dec
sbb
pop
dec
dec
push
dec
inc
dec
dec
outsb
sbb
mov
inc
loop
mov
push
nop
imul
bound
out
xor
fcmovu
lds
iret
je
dec
lock
pop
int3
or
out
stos
xchg
dec
mov
out
xor
fcmovu
imul
bound
out
xor
fcmovu
imul
bound
pusha
jecxz
rorb
popf
pop
adc
aad
pop
aad
adc
xor
fcmovu
imul
bound
out
xor
fcmovu
imul
bound
out
xor
fcmovu
imul
bound
out
xor
fcmovu
imul
bound
out
xor
fcmovu
imul
bound
out
xor
fcmovu
imul
bound
out
xor
fcmovu
imul
bound
out
xor
fcmovu
imul
bound
out
xor
fcmovu
imul
bound
out
xor
fcmovu
imul
bound
out
xor
fcmovu
imul
bound
out
xor
fcmovu
imul
bound
out
xor
fcmovu
imul
bound
out
xor
fcmovu
imul
bound
out
xor
fcmovu
imul
bound
out
xor
fcmovu
imul
bound
adc
out
