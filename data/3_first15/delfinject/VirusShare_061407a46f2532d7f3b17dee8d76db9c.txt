xor
add
add
add
add
add
add
add
in
add
add
add
add
add
mov
add
add
add
add
add
mov
add
add
add
xor
add
add
add
add
add
mov
add
add
xor
add
xor
add
xor
add
add
add
popa
xor
add
add
add
add
add
add
xorl
add
add
movsb
xor
add
add
add
add
add
xor
add
add
add
xor
add
add
add
xor
add
add
add
xor
add
add
add
xor
add
add
add
xor
add
sbb
add
sub
add
inc
xor
add
push
xor
add
addr16
add
ja
add
add
add
xchg
add
sahf
xor
add
mov
add
adc
add
pushf
xor
add
xor
add
xor
add
xor
add
xor
add
add
shlb
add
dec
xor
add
xor
add
add
loopne
add
xor
add
xor
add
add
lock
add
add
clc
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cli
xor
add
add
push
xor
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
inc
push
xor
cs
dec
dec
add
push
inc
push
dec
xor
cs
dec
dec
add
inc
inc
push
push
xor
cs
dec
dec
add
push
dec
inc
dec
xor
cs
dec
dec
add
inc
push
xor
cs
dec
dec
add
dec
xor
cs
dec
dec
add
push
dec
inc
dec
xor
cs
dec
dec
add
push
inc
push
dec
xor
cs
dec
dec
add
push
dec
inc
dec
xor
cs
dec
dec
add
inc
dec
dec
xor
cs
dec
dec
add
dec
push
inc
push
dec
cs
dec
dec
add
dec
inc
dec
xor
cs
dec
dec
add
dec
dec
dec
inc
push
cs
dec
dec
add
inc
push
xor
cs
dec
dec
add
push
dec
inc
dec
xor
cs
dec
dec
add
push
dec
inc
dec
xor
cs
dec
dec
add
push
inc
push
dec
xor
cs
dec
dec
add
push
inc
push
dec
xor
cs
dec
dec
add
push
inc
push
xor
cs
dec
dec
add
dec
inc
inc
push
xor
cs
dec
dec
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
push
jb
je
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
imul
jae
add
inc
gs
gs
outsl
popa
jb
push
jns
add
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
add
jae
jb
gs
je
imul
insb
jae
gs
popa
insb
jne
add
add
jne
gs
gs
outsb
je
add
push
gs
dec
jne
inc
add
add
imul
jae
dec
gs
outsl
jb
add
add
addr16
gs
popa
insb
jne
inc
js
add
add
gs
add
push
push
js
arpl
gs
add
add
je
inc
imul
jae
add
add
inc
push
je
jb
jne
add
add
je
jb
gs
gs
outsl
outsb
outsb
arpl
push
je
je
add
add
outsl
arpl
outsb
jo
je
add
inc
gs
imul
push
jo
arpl
js
add
add
fs
xor
inc
imul
push
je
jb
push
gs
imul
push
jne
jb
push
gs
imul
imul
dec
inc
push
gs
outsl
insl
jo
gs
inc
jb
insl
add
add
jo
jb
popa
je
inc
popa
jo
jne
gs
imul
add
add
add
add
jl
add
adc
add
xor
add
pop
mov
pushf
pusha
call
pop
mov
sub
lea
mov
cmp
je
mov
lea
mov
cmp
je
movb
mov
sub
mov
add
lea
add
pusha
push
push
push
push
call
test
je
mov
call
pop
mov
add
push
push
call
popa
mov
mov
add
mov
cmpl
jne
add
mov
jmp
mov
add
add
cmpl
je
add
mov
add
push
push
push
push
pushl
pushl
mov
mov
mov
add
call
pop
pop
pop
pop
cmp
je
add
jmp
push
push
pushl
call
lea
mov
lea
mov
mov
cmp
je
mov
inc
sub
cmp
ja
mov
cmpb
je
mov
cmp
jne
mov
shr
rol
xchg
jmp
mov
xchg
rol
xchg
sub
add
mov
add
sub
mov
loop
call
lea
mov
cmp
je
mov
sub
je
mov
lea
mov
lea
mov
cmp
je
mov
add
mov
jmp
mov
add
mov
xor
mov
inc
or
je
cmp
ja
add
add
jmp
and
shl
mov
add
or
jne
mov
add
jmp
xor
xchg
mov
cmp
je
lods
or
je
add
add
jmp
xor
shr
lods
or
je
add
add
jmp
lea
mov
lea
mov
cmp
jne
add
push
push
push
push
push
push
call
pop
pop
cmp
jne
add
mov
rep
sub
sub
push
pushl
push
push
call
push
pop
sub
xor
mov
cmp
je
inc
lea
mov
push
push
push
push
push
pushl
pushl
mov
add
push
call
pop
pop
pop
pop
add
loop
mov
cmp
je
popa
popf
mov
ret
popa
popf
jmp
mov
or
je
mov
add
cmpl
jne
cmpl
jne
cmpl
jne
jmp
mov
add
push
push
push
lea
add
add
push
call
pop
pop
pop
cmp
je
mov
add
add
xor
mov
cmp
jne
inc
jmp
mov
add
push
push
push
cmpb
jne
inc
mov
and
mov
movb
push
push
pushl
call
pop
pop
pop
pop
cmp
je
mov
mov
pushl
popl
add
inc
jmp
clc
ret
jmp
push
mov
mov
mov
cld
mov
movsb
call
jae
xor
call
jae
xor
call
jae
mov
call
adc
jae
jne
stos
jmp
call
dec
loop
mov
call
jmp
lods
shr
je
adc
mov
jmp
xchg
dec
shl
lods
mov
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
pop
ret
push
call
ret
mov
adc
push
add
or
inc
cmp
add
or
ret
mov
add
adc
mov
cmpl
adc
or
push
and
rolb
add
call
enter
add
shl
or
dec
mov
jne
pop
sbb
add
mov
xor
fildl
or
sub
in
ljmp
jb
sub
or
add
adc
out
xor
inc
out
clc
dec
jne
pop
mov
bound
jp
mov
ret
pop
addr16
cs
ret
push
movzwl
mov
or
movl
jae
mov
mov
sbb
sarb
cli
sar
add
cmp
sbb
lahf
adc
loope
jno
data16
jb
jmp
inc
sub
sahf
clc
fistl
scas
mov
or
int3
shr
sahf
ret
inc
test
ds
add
in
push
push
jbe
jge
sub
jle
mov
xorb
int3
or
xor
aas
std
add
int3
dec
cld
sbb
pop
ret
add
shl
pop
pop
or
sub
cmp
jbe
mov
xchg
inc
cmp
mov
notl
jle
push
lret
inc
pop
or
call
mov
push
or
inc
cmp
jl
adc
leave
popa
fcomi
xor
inc
xchg
outsb
enter
test
or
jo
xchg
mov
push
pop
mov
sar
sub
les
jne
mov
shr
sbb
loopne
add
jbe
aaa
call
or
cmp
sti
inc
inc
shr
sbb
sbb
jbe
pop
mov
xor
adc
mov
test
push
sbbb
icebp
call
es
sub
push
lea
pop
call
cmp
icebp
xor
push
jne
lret
and
mov
lahf
and
add
push
clc
mov
inc
adc
sub
jl
cmp
or
orb
enter
mov
sbb
leave
cltd
dec
hlt
nop
push
call
movsb
data16
orl
push
in
inc
lock
shl
add
xor
dec
dec
into
cmp
cmp
push
adc
fdivl
push
sbb
mov
xorl
fcompl
rep
adc
retw
jne
inc
add
cli
cld
inc
mov
add
xchg
pop
mov
and
mov
adc
hlt
test
fwait
ret
push
les
mov
jbe
sbb
test
movsl
mov
sub
inc
add
movsl
inc
pushf
mov
add
and
leave
push
adc
jge
push
gs
push
jmp
and
or
cmp
or
movsl
sbb
into
pusha
or
divb
pusha
clc
lcall
push
sbb
push
insb
out
add
mov
fsub
mov
iret
push
sbb
push
repnz
scas
adc
add
test
cmp
sbb
sub
sahf
das
mov
inc
dec
inc
xchg
add
rorl
call
pop
cmp
je
sub
incl
setge
sub
clc
lea
xchg
hlt
shll
add
decl
mov
jmp
mov
inc
xor
xchg
jmp
sub
mov
lock
jne
leave
adc
push
mov
cmp
insl
sbb
fldl
test
fwait
push
aad
cltd
jle
mov
or
jmp
lock
in
rorl
sub
mov
xor
or
call
add
mov
add
sub
jp
dec
push
andl
sub
leave
loop
and
sti
dec
repnz
popa
mov
sub
pop
jge
dec
push
in
sub
pop
dec
pop
add
pop
jo
jmp
add
ret
psubq
ds
add
and
inc
adc
imul
nop
leave
dec
xor
dec
cmpb
cmp
sbb
rcl
inc
test
mov
addb
inc
adc
rolb
jle
cmp
icebp
icebp
iret
rorb
nop
stos
mov
shrb
int3
pop
outsb
sbb
movsb
jne
cmpl
lock
adc
jb
mov
orb
shl
dec
add
les
xchg
sbb
push
cs
sub
jb
xor
mov
mov
negb
rcll
rcrl
dec
jne
cmp
jne
dec
sbb
cmp
add
sub
add
popa
jecxz
iret
push
pushf
dec
sbb
jecxz
lcall
inc
mov
sub
mov
cmp
dec
mul
sbb
inc
outsb
addb
xchg
rolb
add
les
xor
add
inc
add
loopne
add
add
pop
add
and
lods
mov
add
and
add
add
mov
arpl
dec
or
sub
mov
mov
mov
push
jne
cwtl
inc
or
jo
and
push
mov
movsb
xlat
inc
popl
push
inc
inc
mov
adc
cli
pusha
or
in
mov
push
hlt
dec
clc
test
mov
je,pt
pop
mov
out
cmp
addr16
push
jge
lcall
jns
mov
sahf
xchg
into
push
stc
out
push
dec
incl
mov
mov
pop
ja
and
cmp
cs
xchg
and
movsl
jbe
ja
sbb
cmc
adc
int
mov
stc
insb
and
inc
adc
xor
je
dec
nop
or
mov
add
push
mov
mov
adc
inc
sub
and
dec
dec
das
xchg
mov
popf
scas
add
fidivrs
cmc
push
jbe
in
popa
fidivs
or
xchg
shlb
shll
in
xchg
pop
cmp
into
insl
dec
mov
test
rolb
inc
cmp
xor
inc
call
fidivl
mov
xchg
sbb
push
jmp
sub
lret
cmp
lahf
cmp
test
pop
mov
mov
insb
jb
iret
dec
mov
shrl
ljmp
adc
push
mov
stos
stc
xchg
push
insb
fdivs
repnz
int
lcall
fidivl
pop
mov
insl
jle
sub
sbb
mov
pop
cltd
add
adc
lods
negb
js
das
push
mov
in
shl
sbb
out
pop
lods
aam
daa
fldcw
xchg
daa
daa
dec
dec
ret
imul
cli
daa
ds
xorl
push
push
ja
in
adc
dec
mov
iret
scas
jge
sahf
or
dec
xorb
cmpsl
pusha
jmp
test
daa
cwtl
mov
cmpsl
nop
adc
cli
cwtl
pushf
fidivrs
push
or
add
mov
daa
lcall
add
push
out
bound
fwait
pop
cmp
and
test
lock
inc
and
lea
xlat
pusha
cmpsl
negb
inc
jo
cwtl
ds
in
push
inc
nop
xchg
ja
sub
pop
shrb
jecxz
fiadds
mul
test
dec
sbb
cmp
jmp
addl
inc
andb
mov
divb
ds
je
or
fldenv
int
mov
shrb
out
inc
scas
adc
in
mov
push
je
inc
test
xchg
xor
or
mov
cltd
add
ret
shr
imul
cmp
cs
into
jle
adc
call
mov
lods
cltd
pop
fildl
imul
xchg
cld
shrl
mov
pop
inc
stos
stc
xor
adc
adc
xor
icebp
or
jmp
movsl
add
dec
jmp
jns
stos
cmp
fmull
xchg
mov
push
xor
outsl
push
push
mov
mov
inc
sub
cmpb
jns
sbb
sub
add
ljmp
sub
mov
jmp
fnstenv
xchg
cmp
jno
rolb
nop
mov
sbb
js
in
in
loop
les
sub
inc
in
jecxz
mov
adc
mov
add
imul
scas
jne
jne
mov
mov
pop
lahf
nop
dec
xlat
movsl
or
fldl
stos
rclb
sub
jne
adc
push
or
les
imul
add
je
push
addl
mov
fbstp
mov
pusha
push
idiv
sub
mov
mov
out
insb
sub
pop
add
cmc
cmp
dec
dec
fs
cmp
mov
jns
sub
jnp
dec
bnd
imul
frstor
sbb
pop
cli
stos
pushl
daa
daa
cmp
shrl
cmpsb
or
dec
lret
mov
dec
adc
push
and
repz
nop
test
pop
mov
push
pop
push
mov
push
cltd
lods
cmpsb
lock
mov
push
pop
sub
movsb
lret
sbb
pop
mov
arpl
sub
bound
insl
xchg
adc
js
jne
mov
das
ds
add
mov
push
xchg
or
push
fists
loope
cmp
cmp
aad
mov
dec
bound
push
inc
sub
testl
call
sbb
xor
aas
shrb
jo
adc
add
fwait
mov
xor
daa
xchg
and
jno
inc
mov
jns
stos
xchg
mov
pop
loopne
or
or
jp
mov
mov
ss
adc
insl
adc
jle
sbb
xchg
imul
xchg
xchg
push
cmpsl
int3
je
dec
xchg
or
fisubl
scas
imul
js
lods
mov
mov
sub
movsl
adcl
add
push
ja
stc
iret
mov
cmpsl
rolb
and
jmp
addps
jg
and
cli
mov
mov
inc
movsl
aaa
and
fcompl
lods
in
cli
iret
js
ljmp
dec
or
xor
ja
cmp
rorl
mov
daa
inc
mov
mov
mov
in
leave
ds
stos
ret
popf
push
push
xchg
inc
stos
loop
push
push
or
sbb
jl
mov
lahf
jne
mov
pop
and
subl
jne
sti
cmp
out
sbb
stos
cmp
js
mov
and
push
sub
dec
push
aam
push
fwait
xor
add
push
dec
stos
mov
sub
dec
outsl
lahf
insb
cmp
idiv
shll
mov
fbld
pop
cmpsb
push
mov
inc
lret
dec
mov
cmp
jno
dec
or
and
push
lcall
and
fbstp
inc
repnz
std
inc
movsl
add
clc
stc
mov
popa
and
cmp
mov
jbe
test
fildl
lods
push
push
mov
int3
mov
push
popa
pop
sbb
cmpsl
cli
je
hlt
mov
sub
test
jne
pusha
testl
xchg
sarb
push
sub
cmc
std
test
loope
enter
pop
addb
jg
push
xchg
loopne
xchg
repnz
or
mov
jnp
jmp
jo
xchg
adc
mov
ret
push
sbb
inc
dec
es
aad
shll
test
sbb
mov
mov
movsb
add
out
test
icebp
es
aas
adc
cwtl
or
stc
or
ljmp
mov
outsl
imul
xchg
mov
push
pushw
loop
leave
dec
inc
jp
movsb
mov
push
jmp
inc
adc
mov
xchg
pop
inc
mov
stos
loope
cmpsb
mov
jae
ja
pop
jnp
sbb
ret
jno
xor
xchg
shrb
jge
stc
ds
loopne
js
insl
clc
xchg
mov
mov
repz
in
and
ja
outsb
dec
popl
jnp
mov
mov
mov
fnstcw
and
cltd
pop
xor
mov
cmp
jle
dec
mov
ljmp
shlb
pop
test
mov
lret
push
shrb
les
aad
add
call
fidivs
adc
jecxz
sbb
mov
lods
nop
add
jmp
int3
mov
ret
xchg
jge
add
cmp
and
sbb
dec
mov
jmp
mov
dec
add
test
jecxz
inc
pop
mov
xor
scas
mov
sbb
add
mov
ficoms
sbb
inc
lcall
inc
mov
fisttpll
int3
inc
das
fisubrs
sbb
loopne
pop
bound
mov
add
cmpsl
ret
and
mov
enter
lret
push
mov
aaa
test
jnp
ficompl
movsl
push
push
roll
scas
xor
jecxz
outsb
push
shl
mov
pop
dec
lret
ljmp
sahf
ljmp
or
ret
dec
add
mov
add
or
movsb
in
jp
jae
daa
push
mov
dec
sbb
lock
sarb
adc
xchg
push
cmp
clc
sbb
push
dec
ss
mov
sbbb
mov
add
sub
xchg
sub
and
dec
int3
cli
and
push
push
jmp
cmp
outsb
cmp
leave
inc
cs
and
inc
ret
sbbb
pop
scas
cs
push
cltd
sahf
fwait
jnp
jb
mov
shll
add
arpl
fistpl
adc
push
cmc
pop
inc
dec
and
mov
push
andl
add
mov
fnstenv
sub
fistpl
ret
cmpsl
test
aas
mov
push
mov
add
jp
vandps
xchg
push
add
sbb
ret
xchg
mov
mov
rorb
jecxz
jp
cmc
lret
push
adc
sub
mov
xor
inc
ficompl
pop
xchg
fld1
inc
sub
jp
pushl
idivb
lahf
test
rcl
inc
pop
sbb
push
jg
xchg
or
and
jge
xor
xchg
lods
push
std
sub
popl
pop
inc
popf
dec
inc
mov
sub
xor
push
ss
cmc
push
leave
inc
dec
sub
push
iret
sub
lods
cmp
mov
and
cmpsl
lret
sar
sub
xchg
add
out
fldl
daa
pop
xchg
rorl
jg
cmp
in
into
out
adc
ss
pop
in
sbb
cmc
pop
stos
or
out
cmpsl
mov
push
jno
jge
or
add
push
cmp
sbb
repz
es
das
pop
out
jmp
sbb
cmp
cmp
push
test
or
sub
or
out
rcrb
mov
or
xchg
xchg
dec
sbb
outsl
lret
negb
jle
mov
mov
add
jle
getsec
and
mov
sub
mov
andb
or
test
jge
mov
jl
dec
ljmp
cmp
insl
dec
pusha
sub
mov
dec
mov
or
ret
xor
movsl
mov
shlb
imul
loopne
xor
loopne
sarl
jp
scas
push
and
lods
xchg
and
sahf
mov
aad
pusha
ja
in
or
mov
add
cli
sbb
divb
inc
lret
xlat
je
call
pushw
mov
pop
inc
repz
cmpsb
jnp
cmpsb
fcomi
lods
sbb
js
lret
stos
sub
jl
xchg
xchg
filds
test
stc
lods
cmp
in
aaa
push
movsb
cltd
jp
xlat
push
test
gs
aas
adc
rolb
pop
scas
mov
xor
gs
pop
push
xchg
fwait
pop
adc
push
lahf
mov
push
sbb
jnp
jno
inc
lods
lods
rcr
jns
out
mov
inc
xchg
push
imul
dec
xchg
dec
idivb
sbb
dec
mov
jno
lods
push
arpl
outsl
daa
sub
mov
pop
xchg
es
hlt
xor
pop
cli
jb
loopne
icebp
or
mov
adc
jge
mov
sbb
pop
mov
dec
incb
mov
popf
add
mov
xchg
mov
insb
mov
sti
loopne
adc
jno,pn
inc
xchg
sti
cwtl
jns
jl
lcall
cmp
lods
popa
fisubrl
pop
mov
push
cld
ret
or
push
sbbb
enter
xor
imul
mov
jae
repnz
inc
es
lods
xchg
or
imul
imul
fstpt
in
jno
movsl
dec
enter
ret
sbb
out
arpl
cwtl
adc
jge
lods
and
incb
mov
mov
jne
cmpsl
jno
test
inc
jae
mov
push
imul
das
mov
xor
stos
gs
cmpsl
sar
dec
mov
mov
stos
imul
out
and
push
je
gs
xchg
fadd
cmp
cmp
cs
clc
jno
cmp
push
loopne
inc
fsubp
jmp
hlt
adc
lods
and
jae
lods
inc
into
sub
test
and
aad
push
xor
push
addr16
jmp
mov
lcall
push
movsl
lahf
nop
xor
lahf
leave
cmp
push
mov
pushf
fwait
ds
rcrl
xchg
adc
insl
outsl
pop
add
or
mov
icebp
sbb
or
cmp
push
xchg
out
xchg
test
pop
pop
out
jl
adc
out
scas
cmp
aad
hlt
shrb
sub
aad
xchg
jae
dec
push
shrb
mov
xor
cli
inc
mov
movsb
es
in
mov
mov
cwtl
lds
push
mov
jle
out
add
pop
add
pushf
mov
cmp
mov
push
loop
and
sbb
xchg
cli
adc
std
fwait
adc
lahf
sub
dec
cmc
ret
imul
popf
push
sbb
dec
cltd
sub
repnz
cmpsb
jno
nop
push
inc
test
xchg
scas
fcmovbe
or
sbb
inc
shll
test
in
jbe
xlat
jmp
pop
push
push
mulb
and
cmc
pop
push
hlt
mov
fiaddl
outsl
mov
xchg
xor
out
and
les
pop
stos
xchg
dec
mov
cmp
xchg
insb
das
cmp
movsb
pop
stc
jg
xor
fistpl
divl
cmp
cld
rolb
sbb
mov
jle
mov
or
pop
mov
data16
sti
enter
imul
xor
je
aad
sbb
push
add
aas
sarl
mov
or
mov
fstpl
loop
cmp
and
mov
adc
xchg
or
daa
nop
push
cld
cmp
js
fwait
int
jnp
cmp
call
testb
mov
into
mov
sti
push
cmp
pop
dec
out
lods
dec
cmp
adc
cmp
aad
fstl
lods
xor
mov
sub
lea
xorl
pop
out
ss
pop
arpl
sahf
inc
mov
pop
add
leave
push
insl
xlat
sbb
adc
inc
and
dec
stos
andb
pop
shrb
stos
push
push
sub
arpl
mov
lret
lahf
sub
ss
mov
rcpps
faddp
mov
lret
jmp
arpl
lret
fstpl
pop
and
sbb
bound
cmp
jmp
or
into
fs
fmul
and
xchg
mov
sbb
jnp
pop
jl
clc
push
out
cwtl
cs
pop
insb
xor
clc
mov
jle
orb
mov
clc
or
rol
push
lahf
xchg
xchg
push
mov
sbbl
decb
es
out
xor
or
xchg
xor
mov
cmp
shll
lret
xor
push
xor
das
xor
std
das
inc
push
stos
setnp
cld
xor
sti
test
gs
jns
insb
or
jbe
jne
jmp
jo
mov
push
enter
fcmovnb
lret
insb
add
dec
sub
lcall
inc
shrb
mov
mov
sbb
jp
mov
int3
popf
orl
roll
loopne
add
and
or
pop
cmp
cmp
stc
mov
inc
cmpsb
sbb
fdivr
push
push
jmp
popf
xor
popf
aam
out
sbb
ljmp
in
iret
movsl
movsl
mov
inc
lods
fistpll
xchg
and
inc
xchg
sub
shll
or
mov
add
push
push
test
shrl
mov
inc
aas
inc
lret
mov
jnp
sbb
jecxz
popf
call
dec
cmc
mov
mov
insl
int
aad
dec
cli
inc
and
xchg
jno
jno
jnp
adc
xor
cmc
movsb
lea
jo
in
add
aam
xor
pop
mov
into
jnp
or
and
aad
adc
pop
add
adc
repz
adc
adc
and
pop
pop
popa
dec
cli
or
cmp
out
jb
test
mov
gs
leave
pop
insb
popa
mov
xchg
pusha
pusha
ret
std
push
out
and
pop
dec
push
shlb
and
lret
imul
loope
cli
mov
jp
sbb
test
andl
mov
mov
xchg
bound
out
repz
orb
lods
popf
xor
mov
addr16
daa
loope
int
mov
lods
jl
xchg
xor
jg
pop
jns
das
pop
and
je
insl
xor
adc
and
inc
inc
dec
and
loope
xor
xor
shll
sub
jl
or
rorb
mov
pop
ljmp
icebp
data16
cmpsl
fbstp
idivl
adc
pop
mov
js
xor
xchg
xchg
out
cmp
loope
sub
cmp
push
test
int3
add
push
xor
out
sbb
ss
clc
dec
das
push
ds
negb
mov
ja
cli
js
repz
inc
sti
jg
xchg
testb
movsl
add
push
fnstsw
mov
pop
shr
jae
insl
in
pop
mov
mov
jecxz
add
push
addr16
adc
sbb
sbb
mov
xlat
push
dec
loopne
std
test
loopne
cmpb
pop
push
mov
cmp
push
pop
int3
lahf
pushf
inc
leave
bound
hlt
lea
push
cs
xorl
sbb
sbbl
outsb
test
cmp
arpl
in
inc
jo
and
or
sarb
mov
aaa
jg
sbb
jb
sub
push
add
not
out
nop
xchg
push
dec
push
mov
test
outsb
hlt
and
mov
xor
lret
nop
insl
jnp
dec
xchg
jle
insb
ds
inc
pop
jg
mov
jle
dec
sub
addb
daa
out
scas
inc
push
insl
bsf
cmc
rclb
mov
xor
addb
movsl
cmpsb
std
or
xor
push
cmp
stos
add
dec
jecxz
cltd
roll
dec
aaa
jns
jl
xchg
xchg
xor
imul
enter
rcrb
mov
mov
xchg
or
push
clc
jns
pop
cmp
pop
xor
jbe
adc
xchg
jecxz
clc
xor
loopne
daa
jae
xchg
cmpsl
mov
xor
adc
xchg
inc
inc
mov
into
lret
notl
lods
adc
jnp
mov
lcall
inc
sub
sbb
es
test
push
push
stos
jns,pt
out
and
pop
xor
push
xchg
daa
mov
jnp
dec
mov
mov
imul
scas
xor
sub
add
ret
cld
imulb
mov
cmp
call
push
stc
fwait
mov
ret
inc
xchg
in
inc
loope
xchg
cmpb
xchg
sbb
inc
mov
cmp
jmp
mov
dec
and
jg
jge
xor
cmp
xchg
sub
testb
sub
jno
dec
imul
push
and
movsb
shll
cmp
xor
sarb
mov
ja
and
es
orb
rclb
loopne
jp
xchg
lods
adc
and
adc
std
scas
enter
cli
movsl
xchg
divb
push
imul
test
cmp
sub
insl
add
jne
aad
xor
jg
test
lea
xchg
sub
subb
popf
sahf
mov
add
add
push
mov
incl
scas
push
mov
push
and
push
pushf
lahf
adc
xchg
mov
push
test
repnz
inc
mov
pop
xchg
ss
andb
addr16
dec
insb
add
fdivrl
sarl
cmp
out
arpl
push
adc
or
mov
sbb
jmp
fmull
cwtl
repnz
stos
mov
call
sahf
pop
pusha
mov
push
in
xchg
push
cmc
imul
sub
mov
fdiv
inc
sub
ja
jle
mov
nop
mov
mov
cmp
mov
les
and
adc
and
aad
imul
icebp
pop
and
or
xchg
mov
imul
push
daa
lock
int
scas
adc
jne
je
popf
xchg
mov
jnp
add
aam
clc
xor
mov
lahf
cmp
push
ss
sarb
subl
stos
mov
xor
sub
test
sbb
dec
jmp
fildl
push
dec
scas
mov
int3
shlb
cmp
stc
cmc
cmpsb
pop
scas
sub
outsb
sbb
sahf
scas
mov
hlt
aam
jb
sub
cmp
push
sbb
and
cmp
std
mov
lret
jne
push
daa
addr16
xor
loopne
mov
jb
xor
pop
inc
xor
mov
dec
imul
outsb
lret
mov
scas
xchg
xor
pop
inc
imul
xchg
fistps
fidivs
jbe
inc
or
or
aad
dec
sub
lahf
dec
arpl
sbb
cmpsb
int3
test
adc
notb
clc
xchg
dec
cmpsb
aas
lock
fcoml
dec
xchg
cmpsb
je
pop
mov
jnp
dec
loope
or
inc
and
dec
mov
cltd
or
xchg
testl
icebp
out
pusha
insb
ljmp
inc
popf
outsb
aaa
pop
adc
test
insb
ret
pop
adc
mov
ret
mov
es
inc
ret
iret
neg
stc
sub
inc
fcmovb
mov
cmp
sbb
in
test
jbe
into
jo
es
cmp
jge
emms
sbb
adc
insb
adc
test
ret
addr16
add
inc
sahf
repz
mov
icebp
inc
aaa
shl
in
int
xchg
ror
cmp
cmpsl
pushl
stos
jo
xchg
std
int
sar
shl
inc
add
into
sbb
mov
mov
in
rcr
out
lods
ret
and
dec
ffree
mov
fsubl
inc
or
dec
mov
leave
test
mov
xchg
lret
or
outsl
cmp
push
adc
mov
dec
mov
sbb
and
ja
push
xchg
jl
and
sub
xor
shrl
pusha
sbb
and
insl
in
xchg
imul
mov
push
ljmp
shr
in
push
push
jns
lock
leave
xor
ret
dec
adc
fldenv
mov
dec
js
inc
test
lea
and
jg
adc
inc
loop
addr16
decb
movsb
jne
test
ljmp
fdivr
push
inc
adc
or
adc
lret
xchg
mov
and
dec
dec
test
sbb
test
stos
popf
daa
inc
or
cmpl
mov
fildl
adc
addr16
mov
sub
jge
mov
dec
jp
sub
out
mov
arpl
in
mov
aam
out
xchg
push
and
or
pop
ret
adc
add
pop
add
data16
mov
out
movsl
mov
fisttpl
jbe
fiaddl
imul
negl
push
cmpsb
add
mov
push
xchg
pop
test
mov
cmp
sbb
outsb
xchg
jmp
or
and
or
in
sub
mov
sbb
sbb
inc
test
mov
loopne
xchg
jge
lcall
out
ret
test
cmp
jmp
sbb
in
mov
sbb
sub
dec
jne
dec
mov
push
out
sbb
cmp
cmp
sbb
dec
sub
xchg
inc
cmpsl
shlb
mov
bound
testl
adc
aam
inc
mov
pop
fldl
nop
jo
xchg
lea
push
mov
psadbw
cltd
flds
push
pop
push
xor
and
cwtl
cmp
gs
dec
jbe
lahf
adc
adc
stos
pop
stos
call
cmp
roll
pop
sbb
loope
mov
adc
add
sub
cwtl
cmp
lods
mov
sbb
cltd
les
xrelease
push
cmp
inc
adc
or
xchg
cmp
inc
pop
push
in
mov
sub
cmp
shll
add
aam
jmp
pop
loop
pop
pop
jbe
clc
add
subl
lds
arpl
add
scas
mov
xchg
xlat
mov
sbb
std
sti
xor
adc
sar
ss
jge
lret
stc
mov
push
in
cltd
pop
and
jl
int
popf
xor
lret
insb
int3
push
jbe
and
outsb
jp
xlat
ret
add
dec
je
addl
push
loope
jmp
push
add
pop
jnp
lea
cmp
imulb
outsl
ret
lahf
and
dec
pop
rol
pop
scas
out
into
scas
pop
imul
fisubs
repnz
dec
loopne
xor
pusha
pop
pop
das
das
insl
test
insl
std
or
stos
mov
xchg
jae
jecxz
cmpb
pop
sub
call
or
mov
mov
pop
aam
lock
fisttps
lds
cmp
cli
and
sub
jg
pop
fistps
add
shlb
jbe
std
dec
mov
fmuls
push
js
les
mov
push
mov
add
jmp
or
push
push
lahf
or
adc
or
fidivrl
xor
mov
fwait
push
movsl
notl
insl
test
iret
jl
cmp
xchg
xchg
xorl
push
inc
fs
inc
pop
leave
mov
and
aad
or
bound
shlb
dec
loopne
jecxz
dec
sub
sbb
inc
adc
daa
mov
add
shrl
mov
in
int3
das
add
lret
xchg
mov
out
std
pop
mov
sub
ss
loopne
sbb
sbb
movsb
xor
ffreep
outsb
nop
xchg
mov
movsl
jge
rclb
mov
jp
or
mov
mov
repnz
mulb
imul
pop
in
sub
popl
or
fsubrl
adc
lds
mov
je
hlt
push
inc
ljmp
jmp
mov
dec
fwait
lds
mov
lahf
ljmp
cmp
xchg
loop
push
sbb
sahf
pop
sub
dec
xchg
sahf
sub
jne
dec
decb
add
lret
push
mov
cmp
push
mov
sahf
cmp
mov
lods
push
mov
mov
stc
cmp
loopne
add
jl
fs
aas
lods
dec
sbb
addl
in
bsr
lods
xorb
adc
rcrb
rcll
imul
cmp
dec
add
sub
movlps
mov
loopne
push
lock
cmp
lahf
mov
cli
imul
jns
inc
mov
stc
repnz
xor
pop
inc
xor
xor
inc
gs
cmp
fsubs
pop
dec
push
xchg
cmp
jg
push
fldl
lahf
in
pop
adc
push
cld
sbb
fldl
aad
or
push
stc
pop
mov
or
test
mov
sbb
arpl
add
xor
leave
cmp
popa
cmp
sbb
push
sub
popf
adc
xor
push
cmp
cmp
lea
inc
sbb
leave
pop
out
into
cmp
aad
jge
ds
int
mov
repz
push
pop
div
mov
xchg
cmc
subl
sub
sar
aas
ja
mov
sti
add
mov
jp
out
add
clc
sbb
jno
rcrb
call
inc
mov
pop
inc
pop
repz
jecxz
stos
jecxz
mov
test
ret
jo
jno
adc
int3
push
or
lods
sbb
mov
push
push
mov
and
cld
cmpl
fcmovbe
fsts
sub
dec
fcoms
jp
fstl
mov
ret
insb
jp
or
mov
push
xchg
lahf
jl
fyl2x
cmp
push
jbe
and
jmp
mov
aaa
ret
pushf
fwait
jmp
xchg
pushf
fdivrs
call
adc
ss
or
mov
jns
and
xchg
push
addl
lods
pop
fdivs
idiv
cwtl
mov
daa
and
in
cmp
ret
enter
xchg
add
xorl
jnp
jp
mov
lcall
push
int3
ds
loop
out
cmp
sar
aaa
inc
sub
mov
fs
testb
bound
mov
cli
loope
cmpsb
test
jge
adc
cld
loop
xchg
mov
mov
sti
jmp
movsl
lds
cltd
mov
jecxz
dec
add
fwait
sbb
andl
scas
pop
jae
push
mov
fwait
dec
xchg
imulb
nop
sti
mull
xchg
push
js
sub
or
out
ss
fwait
push
push
fadds
jo
mov
adc
lahf
cmp
jl
rclb
cwtl
mov
movb
outsb
jle
mov
pop
inc
out
repz
jbe
inc
inc
fwait
push
add
aaa
imul
mov
xor
test
mov
cmc
xlat
cmpsb
cmp
jnp
sbb
or
push
shrb
mov
xchg
push
mov
jo
mov
dec
add
pushf
xchg
test
fmull
mov
adc
add
outsb
lds
sub
mov
dec
sub
stos
mov
sub
add
jnp
jg
scas
cmc
das
mov
fs
loop
adc
add
mov
push
adc
add
sahf
jae
mov
flds
test
inc
fisubs
stos
pop
insb
add
mov
fldl
call
pop
xlat
inc
inc
lock
incb
jbe
ss
sub
fsubl
dec
fbstp
test
data16
imul
add
sub
iret
pop
rcrl
fs
scas
lods
cmp
orl
js
icebp
lods
and
movsl
mov
nop
mov
and
mov
repz
push
adc
scas
outsb
mov
call
icebp
inc
paddsw
add
cmp
sub
xchg
repz
imull
jae
mov
dec
inc
inc
cmpsb
mov
mov
push
je
sti
pop
enter
aam
mov
repz
mov
jmp
dec
inc
and
push
mov
xchg
lret
cmpb
out
inc
jne
and
movsl
call
aas
in
test
ljmp
push
cmp
mov
xchg
sarl
mov
in
cmp
sub
das
jmp
push
pop
mov
rcr
fsqrt
leave
xor
pop
ret
or
dec
loopne
dec
out
inc
aam
xchg
xchg
push
mov
inc
lds
adc
loopne
push
xchg
xchg
inc
pop
jge
leave
enter
dec
jge
jbe
mov
fdiv
fsub
stos
aad
lds
adc
shrl
loope
mov
pop
and
loopne
sbb
negl
xchg
push
mov
ja
fs
enter
in
jge
jecxz
scas
jb
fcoms
cmpsl
xchg
add
rcl
std
dec
test
xchg
jmp
add
sti
clc
rcr
fisubl
aaa
sbb
pop
test
pop
pushf
mov
into
fistpll
pop
jns
xorl
and
loopne
fistpl
wrmsr
dec
or
xchg
ret
inc
sub
push
and
fwait
xor
push
leave
fsubs
aam
cs
jge
gs
jo
repz
pop
jmp
shll
imulb
dec
pop
aam
xchg
sub
pop
xchg
jns
pusha
jle
shrb
nop
popf
imul
test
jp
cs
mov
xchg
lods
adc
cmp
mov
sbb
and
leave
jb
xor
imul
sub
inc
aad
xchg
lret
mov
mov
addb
jo
xor
xor
jmp
sbb
imul
mov
jne
dec
dec
ja
pop
mov
hlt
push
cmpsl
and
push
sahf
rcrl
ret
mov
loope
jb
enter
sar
idiv
push
sub
mov
dec
ljmp
push
mov
mov
int
orb
lcall
or
mov
int3
ficoml
xor
jmp
enter
loope
std
or
imul
cmp
lahf
shll
and
inc
xor
movsl
ficompl
popf
fimull
mov
push
dec
cmp
mov
push
subb
mov
mov
imul
or
dec
mov
dec
sub
xor
rcll
sub
dec
jecxz
dec
adc
mov
inc
or
mov
test
lds
jg
inc
pop
mov
fiadds
jp
mov
in
out
test
mov
adc
pop
ficomps
clc
mov
sub
imul
add
das
mov
lods
xor
fdivrs
mov
repnz
vpsubusb
js
shll
test
repnz
out
dec
push
pop
jbe
movsl
jmp
mov
dec
jno
rclb
movsb
test
push
xor
lods
iret
jns
adc
xchg
iret
data16
push
jb
popf
movsb
jno
vpshuflw
push
pop
sti
inc
or
leave
cmp
pop
cmp
sbb
insb
cmp
scas
xchg
rolb
xor
add
fdivrl
push
ret
pop
sub
dec
nop
inc
les
jp
push
xor
out
icebp
or
pusha
pushl
sarb
push
and
mov
and
xchg
scas
mull
stc
loope
push
lods
lcall
jne
lock
inc
sahf
inc
je
and
jle
lock
cmp
adc
scas
xor
movsl
out
adc
push
stos
cli
mov
sub
pop
movsl
fnsave
popf
dec
rcll
in
clc
and
xor
jp
out
jge
js
sahf
cld
pop
gs
test
xchg
mov
pop
push
mov
jle
pop
aas
cmp
cli
pushf
jnp
insb
cmpsl
pop
inc
inc
mov
repz
mov
mov
scas
in
xchg
movsl
mov
xor
adc
mov
stos
dec
adc
sbb
sbb
andb
sti
stos
outsb
and
add
pushl
sbb
std
fidivrl
jp
leave
sub
xchg
jg
jl
xchg
and
ret
inc
rol
test
push
popf
adc
add
sbb
dec
push
aad
test
sub
jnp
call
stc
pop
test
sbb
movsl
xchg
adc
ret
cmp
add
jae
xchg
les
mov
mov
js
mov
jge
add
push
je
or
xor
stos
pop
stc
jb
push
arpl
inc
inc
mov
push
cmpsb
imul
push
addr16
dec
sbb
lock
pop
mov
xor
lea
cmc
mov
dec
dec
adc
push
or
rcl
lock
xchg
mov
test
sub
mov
mov
dec
cmpsl
sahf
sbb
sti
lock
and
cmp
mov
sub
scas
sub
data16
dec
mov
repnz
stos
jecxz
ret
jae
add
data16
push
push
dec
inc
xchg
jmp
push
mov
enter
cli
cmp
xor
mov
jle
mov
mov
push
pop
or
mov
std
mov
mov
scas
mov
out
scas
pushf
jnp
mov
repz
std
and
daa
sti
cwtl
sti
cltd
xor
movsl
bnd
or
jnp
cli
inc
push
outsb
inc
outsb
jns
lds
cmc
fs
cltd
mov
std
xchg
dec
ljmp
cld
test
ret
fisubrs
push
xchg
test
mov
xchg
xor
lret
aam
cmpsb
fcoms
das
je
mov
call
leave
or
xchg
pop
push
xor
repz
outsl
push
stos
movsb
mov
test
movsb
push
sub
push
enter
cmpsl
sbb
loope
push
mov
pop
out
mov
cmp
xchg
cld
test
inc
aad
imul
mov
cmp
push
and
jmp
mov
jle
ja
sub
jb
in
test
test
in
ja
xor
inc
lahf
adc
cli
sub
js
out
ds
jl
cmp
xor
fcoms
xor
mov
mov
adc
in
pop
sbb
cmp
cmp
lods
mov
fildll
arpl
movsl
xlat
push
movsb
pop
pop
loop
pop
rclb
push
push
sub
pushaw
addr16
fiaddl
mov
call
in
test
test
call
cmp
jns
mov
cld
shl
aad
leave
push
mov
xor
xchg
adc
cmp
in
fisubrs
nop
xchg
mov
ljmp
movsb
jp
mov
xor
mov
xor
sub
pushf
outsl
out
call
daa
out
into
insl
push
inc
fcomi
add
lcall
inc
xor
xor
cmp
popa
jmp
push
jnp
out
call
rclb
xor
jb
out
in
jp
pop
pop
mov
cmp
fwait
push
sub
xor
sbb
xchg
xor
cmp
sbb
pop
lds
rorl
jp
icebp
mov
popf
subb
mov
fs
xchg
sub
cltd
test
push
add
or
es
add
icebp
cltd
sbb
xchg
test
repnz
pop
and
sbb
lcall
jg
repz
nop
cltd
cpuid
inc
leave
mov
out
cld
push
mov
mov
loopne
adc
loopne
cmp
jmp
cmp
mov
dec
mov
movsl
push
rorl
adc
pushf
fmuls
inc
dec
aad
jecxz
cwtl
mov
aaa
pop
xchg
pusha
aad
je
adc
cmp
dec
fists
je
sub
imul
pushl
loope
mov
es
outsl
xlat
pop
jmp
out
je
rorl
pop
adc
lods
bound
addl
iret
cwtl
js
mov
aas
enter
pop
push
inc
popf
js
stos
xchg
inc
push
in
mov
leave
icebp
xchg
inc
and
jmp
pop
aam
and
jp
cltd
and
inc
pop
aad
adc
ljmp
adc
fisttpl
lret
dec
mov
cmc
pop
xchg
decl
fs
daa
mov
mov
stos
lods
pusha
cli
xor
push
shlb
movsb
inc
mov
ret
fdivl
mov
jo
arpl
xchg
mov
mov
or
mov
rcrl
sbb
pop
faddl
ret
addb
dec
dec
mov
and
adc
movsb
push
pop
push
loop
or
sub
mov
ds
test
push
in
mov
mov
xorb
mov
and
mov
insb
cld
and
int
jecxz
sarb
dec
jbe
push
fcoms
pop
or
adc
mov
repnz
lcall
and
std
lods
fsubl
std
jle
sub
mov
in
and
dec
jne
sub
cmp
jbe
pop
add
ret
sbb
in
mov
pop
fcompl
xchg
in
loop
mov
jno
sub
insl
flds
pop
fcoms
in
in
mov
js
adc
es
in
fldcw
inc
push
imul
jmp
bound
cmp
inc
jno
mov
mov
popa
ss
leave
cmpsl
xorb
out
les
sarb
mull
pushf
ret
sbb
or
dec
lds
adc
daa
movsb
out
fidivl
mov
mov
notb
mov
ret
int
test
adc
add
in
or
cs
in
mov
dec
xchg
loop
push
and
hlt
pop
fs
sub
mov
enter
jp
mov
jne
je
out
insb
pop
adcl
and
ret
data16
jecxz
pushf
ret
inc
hlt
lods
out
xor
es
add
inc
xchg
shlb
popf
mov
es
iret
sbb
inc
in
arpl
mov
insl
jno
std
leave
mov
push
rcll
inc
gs
sbb
divl
mov
sub
popa
mov
ss
ret
adc
daa
mov
pop
dec
sbb
cmp
sub
xor
test
lcall
sub
jno
scas
sub
mov
jno
nop
negl
dec
pop
lret
les
xchg
dec
cmc
jb
mov
add
cmp
das
cltd
inc
ss
lea
fildl
and
andl
inc
fwait
jp
mov
pop
mov
fcmove
push
icebp
inc
mov
xchg
sbb
cli
push
push
rolb
push
daa
sub
push
mov
inc
push
push
pushf
xor
insb
mov
cmp
pop
push
mov
rcll
xor
add
mov
mov
and
in
loope
outsb
outsl
sbb
dec
jnp
or
decb
jmp
mov
mov
leave
sbb
je
ficoml
fcomp
shll
xor
adc
scas
pop
daa
insl
and
or
xorl
movsb
pusha
xor
fisubrl
sbb
repz
nop
movsb
out
xchg
out
loope
ja,pt
inc
xchg
insb
cmp
jmp
mov
add
sub
out
mov
push
cmpsb
xchg
adc
mov
sbb
xchg
or
cmp
xchg
cmp
pop
mov
scas
dec
or
and
and
popa
pop
add
push
mov
cmp
gs
aaa
xor
rcl
adc
ret
push
add
dec
inc
pop
and
or
and
out
mov
mov
rcll
jo
fmuls
jnp
mov
test
mov
add
pop
add
mov
rorl
jp
cmp
inc
mov
inc
xchg
dec
out
pushf
sbb
in
mov
push
iret
mov
mov
out
nop
push
sub
mov
cltd
xor
mov
jmp
and
xchg
xor
sub
out
imul
pop
cli
dec
mov
and
and
sbb
dec
out
test
lods
movb
dec
xchg
ror
enter
addr16
pop
jge
pop
mov
test
lods
or
mov
lock
aaa
iret
fiadds
mov
out
cmp
pop
adc
sbb
dec
push
bound
add
or
repnz
clc
outsb
push
cli
leave
xchg
mov
das
add
pop
ljmp
mov
inc
dec
popw
mov
lods
xchg
adc
push
rclb
fistpll
fwait
dec
leave
popf
adc
aas
sub
dec
jne
sub
cmp
jmp
sbb
push
iret
fsubs
fprem
cmpl
icebp
frstor
adc
add
cmc
or
lret
nop
add
out
clc
push
outsb
xor
movsb
aam
mov
sbb
jno
lea
daa
call
jo
clc
xchg
gs
gs
push
and
mov
loope
fisttps
cmp
xrelease
popf
sub
aas
aam
aas
ffree
sub
mov
call
loope
rcrb
sbb
sub
sahf
in
subl
jbe
jno
push
push
outsl
jb
inc
lods
cmp
sub
popa
es
je
mov
popf
and
ficomps
repnz
xchg
add
jns
int
insb
in
mov
cmp
inc
movsl
adc
test
pop
int
outsl
sbb
or
add
movb
iret
call
scas
mov
ja
jns
mov
push
sbb
out
enter
pop
push
pop
bound
in
dec
stos
andb
xchg
sti
dec
dec
pop
pop
aaa
adc
les
into
sub
call
test
adc
pop
scas
jmp
jnp
sbb
dec
pop
mov
xor
rcl
dec
cwtl
jmp
gs
leave
dec
cmp
mov
divl
fsubr
pop
rcl
and
jge
push
shll
fdivs
mov
sbb
inc
call
inc
mov
pop
mul
cmp
push
xor
jmp
push
sbb
lock
insl
jnp
inc
push
in
sarb
mov
aas
test
stos
push
inc
xor
pop
popf
pop
adc
sbb
xchg
call
mov
or
and
and
mov
inc
or
stc
sub
dec
sbb
and
adc
mov
mov
faddp
mov
iret
push
out
cwtl
mov
push
loop
jmp
mov
mov
out
inc
aaa
adcb
push
add
push
aas
aas
mov
mov
push
iret
push
jnp
jno
adc
add
mov
rcrl
sbb
xchg
stc
xchg
mov
loop
cli
push
mov
lds
cmc
loopne
adc
inc
mov
xchg
out
imul
jmp
js
loop
xor
inc
test
fistpl
arpl
jo
mov
jo
out
or
repnz
fisttpl
lret
xchg
rol
cmpsb
jo
loop
aad
sbb
jbe
jbe
aaa
jp
inc
in
into
push
lods
out
dec
sub
lea
les
push
aas
jnp
test
and
adc
dec
or
mov
mov
pop
nop
cli
cli
je
cmpsb
or
push
fsts
sub
pop
mov
mov
jge
sbb
loopne
jbe
shl
dec
pop
sub
int3
mov
es
lods
and
out
adc
int
push
dec
incb
jno
inc
lret
cld
sbb
add
clc
shr
xchg
cli
lcall
sbb
lcall
xorb
les
jg
cmp
ret
andb
lds
insl
push
inc
pop
mov
pop
scas
cli
popa
bswap
dec
xchg
je
dec
arpl
arpl
fmuls
movsl
in
int3
mov
cld
and
test
scas
rcr
adc
inc
int
mov
mov
push
adc
jge
lods
mov
lods
xor
or
cmpsl
mov
xchg
jbe
ljmp
inc
mov
iret
push
outsl
push
ja
arpl
stos
fbld
adc
stos
xchg
mov
icebp
fs
out
jmp
sarl
ret
stos
mov
stos
xor
push
jp
roll
xor
js
std
push
sahf
ret
mov
movb
sti
fists
sub
aam
iret
xchg
cmp
movsb
rcll
xchg
ficoms
lcall
stos
das
stos
add
shrb
rolb
into
fistpll
pop
clc
subl
push
repnz
ds
xchg
into
dec
xor
dec
mov
leave
pop
adc
dec
add
push
cmp
leave
sti
out
jp
sub
pop
jecxz
dec
lahf
pop
gs
push
std
lock
int
mov
and
aad
int3
outsl
push
icebp
cs
xor
mov
mov
mov
loopne
xchg
in
popa
cmp
add
rorb
lock
faddp
jl
out
jge
insb
stc
push
lods
cmp
aam
dec
movsl
aaa
test
adc
add
fisttpll
aam
add
mov
add
mov
rolb
pushl
ret
rcll
and
stos
rorl
aad
and
pushf
loopne
in
xchg
cvtps2pi
cmp
aam
cltd
sahf
jg
lock
dec
loopne
fstpl
push
cmp
lcall
xchg
out
scas
or
mov
fwait
inc
add
sub
adc
pop
jp
adcb
xor
adc
cmp
lret
nop
inc
xor
out
mov
fwait
into
or
pushf
icebp
xchg
cltd
dec
mov
push
jp
and
cltd
push
aas
in
pop
fdivrp
mov
bound
jmp
and
add
outsl
add
pop
sub
pop
push
mov
xor
xor
xor
fistps
js
jl
jl
test
cmpsl
hlt
shrb
sub
shlb
fs
mull
je
mov
aad
les
adc
loop
sbb
into
mov
icebp
ljmp
les
sub
out
lcall
mov
dec
mov
pop
ljmp
jb
mov
dec
pop
sbb
push
xchg
mov
xor
adc
pop
enter
jl
in
add
aaa
push
fidivrl
leave
or
add
mov
ja
call
cmpsl
jae
scas
sbb
dec
jno
jnp
cli
fsub
ret
xlat
inc
sti
test
xor
xlat
sarl
xchg
addb
test
loop
js
mov
xor
gs
cli
mov
bound
jl
and
cmc
sub
in
repnz
and
pop
sti
jl
pop
inc
push
dec
xchg
dec
push
xchg
pop
enter
push
repnz
push
push
push
test
and
jbe
sub
or
or
js
push
dec
inc
dec
cmp
lods
mov
or
jb
imul
and
jp
pusha
cmpsl
mov
mov
xchg
rcl
leave
mov
loop
pop
adc
cltd
cmp
and
daa
mov
or
mov
and
in
dec
and
js
outsl
xorl
sbbl
test
inc
cmp
jns
push
push
mov
fiaddl
shll
mov
pop
les
xlat
add
xchg
repz
ds
sub
add
jne
aam
mov
or
sub
scas
andb
or
pop
repz
and
jp
lret
inc
add
add
mov
lods
insl
sbb
mov
fmull
ds
sub
adc
addb
push
fmuls
mov
fs
adc
out
ljmp
pop
xchg
call
xchg
ficompl
push
sbb
mov
pop
jmp
cmp
xchg
mov
adc
aam
scas
sahf
jle
stos
inc
fs
mov
sbb
add
pop
test
and
inc
call
cmp
mov
fcompl
out
test
xorl
sbb
out
ffree
pop
push
mov
mov
arpl
ret
mov
fs
sub
in
out
imul
cmp
loop
push
call
mov
push
repnz
lret
pop
cmp
push
imul
ret
pop
icebp
push
sub
add
inc
pop
jb
ret
leave
ljmp
pusha
push
cld
outsl
or
out
incb
cltd
repz
roll
jl
pop
jle
xchg
jae
inc
mov
or
pop
loop
jp
pop
xchg
mov
adc
adc
push
lds
mov
jg
enter
pop
sub
test
repz
push
or
mov
les
cmc
movsb
push
cmc
sub
repz
push
mov
pusha
adcl
xchg
xchg
add
or
add
jae
sub
in
incb
jle
sbb
mov
rorl
inc
inc
xchg
sub
std
lods
xor
adc
daa
sbb
in
ja
test
ret
sub
jecxz
fnstcw
imul
xchg
push
add
xor
scas
mov
lahf
push
aad
cmpsl
and
cmp
dec
push
inc
inc
lret
xor
xor
je
push
dec
sbb
and
cs
sbb
lret
rcr
mov
stos
cmp
mov
sub
mov
and
pop
xchg
mov
sub
imul
add
mov
enter
pop
inc
and
mov
mov
pop
lret
insb
ret
mov
repz
out
je
es
daa
mov
in
imul
sbb
adc
add
in
ja
cmp
cmpsb
rclb
in
aam
push
push
mov
lods
addl
pop
xor
xor
gs
dec
and
jno
cmp
xorl
inc
push
xor
inc
sarb
add
enter
sub
shlb
cmp
pop
in
add
aaa
divb
popf
push
shlb
orl
mov
push
xlat
ss
mov
iret
outsb
ss
ror
cmp
es
mov
mov
xchg
cmp
int
or
mov
orl
lds
test
cmp
inc
mov
pop
sbb
nop
aam
jno
lods
xchg
mov
sbb
pop
sub
xchg
pusha
pop
or
shrb
outsb
jno
jmp
inc
dec
addr16
pusha
inc
and
movsb
jge
aas
loop
int
scas
loopne
sbb
mov
cmpsl
xor
rcrl
jo
fs
pop
js
test
scas
xchg
push
mov
in
dec
push
repnz
adc
add
iret
dec
divb
xchg
mulb
or
ds
scas
nop
mov
loop
cmp
push
repz
mov
cmp
lahf
mov
fwait
adc
das
lods
inc
jb
das
divb
lret
das
mov
cmc
cmp
sub
movsl
faddl
aad
jb
xchg
push
addr16
lods
push
popf
push
mov
std
aad
inc
lock
stos
cltd
in
xor
add
jae
in
aam
adc
insb
outsb
shrl
arpl
es
fldt
in
repz
mov
shl
dec
jmp
dec
popa
jecxz
xor
jmp
or
xchg
out
ss
stos
sahf
cmp
outsl
lret
loopne
movsb
cmp
pop
mov
pop
int
cmp
pop
in
fsubs
std
xlat
dec
aad
outsb
inc
stos
inc
mov
repnz
cmp
push
iret
add
xor
int
cmp
mov
sbb
jae
pop
call
sbb
into
and
ret
adc
and
sbb
jno
les
test
jo
test
fdivp
aad
cmp
mov
inc
inc
fmull
fdivrs
mov
idiv
mov
jmp
inc
jl
sub
sbb
dec
mov
loopne
cmp
inc
movsb
aam
imul
ficompl
or
mov
lods
push
fwait
popl
ljmp
imul
push
dec
popf
inc
xchg
popf
into
xchg
jmp
fiaddl
nop
pop
std
mov
lods
xchg
stos
call
std
negb
and
rolb
mov
mov
mov
push
sbb
test
mov
sub
cmp
pop
icebp
dec
push
pop
cmpsl
cmp
loope
imul
adc
neg
add
sub
jle
nop
push
dec
in
shlb
sub
test
rcll
xor
ds
inc
movsl
aad
dec
jle
cs
mov
in
test
mov
dec
movsl
out
xor
loopne
mov
repnz
mov
ret
cmp
xchg
or
int
hlt
mov
imul
fwait
repz
stos
mov
cli
das
lods
jbe
lahf
int3
out
ss
xor
xor
add
push
pop
leave
or
and
sti
repnz
fcmovnbe
push
mov
iret
aaa
sub
pushf
mov
popa
push
adc
in
mov
ficomps
cmp
rorl
or
ja
cwtl
mov
adc
popf
mov
inc
jg
shl
mov
fwait
cli
gs
jo
sbb
outsl
repz
cmpb
lods
cmp
push
filds
push
inc
mov
mov
in
out
popf
mov
iret
and
popf
icebp
jne
or
stos
xor
addl
fstps
mov
fsts
dec
stos
leave
shrl
cwtl
lahf
fs
and
jecxz
xchg
push
icebp
or
ret
mov
sub
jp
ljmp
adc
jge
jecxz
mov
xchg
mov
cmp
xchg
pop
adc
movsl
sahf
jo
ja
push
xorb
mov
mov
adc
ficompl
pusha
and
dec
stos
mov
enter
jmp
mov
mov
fwait
mov
sbb
sub
clc
out
sbb
ret
cs
jl
nop
dec
pusha
hlt
and
mov
dec
add
adc
cmpsb
subl
or
stc
push
cmp
mov
out
sbb
dec
out
lea
sbb
and
lcall
dec
jle
push
dec
inc
push
jp
xor
fmuls
test
sti
xchg
cmpsl
push
cmp
testb
add
fsubrl
pop
cld
pop
imul
bnd
std
mov
notl
out
fnstenv
push
or
xor
fsubr
xchg
out
xchg
and
and
cmpb
aad
pop
test
ja
inc
cmpsl
inc
jmp
push
sarb
out
xor
gs
jns
pop
xor
cmp
fsubrl
dec
sub
push
and
xchg
mov
ret
imul
in
orb
sub
mov
fistl
test
sub
xchg
divb
sbb
xlat
lods
or
cmp
arpl
scas
loopne
inc
ja
add
and
mov
loope
dec
mov
scas
inc
jno
out
jle
xor
jnp
stos
push
push
mov
xchg
aad
test
inc
jecxz
cmpsl
add
adc
fcomps
add
sbb
dec
inc
stos
fistps
jns
jmp
sub
xor
mov
jne
mov
popa
xchg
loopne
or
cmp
push
cmp
dec
fsubl
pop
stos
adc
or
and
scas
push
jecxz
ljmp
and
xchg
jno
and
and
cmc
test
fmuls
cs
lock
cltd
scas
xchg
adc
jecxz
lret
out
pop
push
rcrb
lds
and
pop
push
dec
loope
xchg
lea
xor
mov
or
xchg
das
dec
xor
std
das
das
jp
mov
dec
sbb
pop
mov
lods
std
push
xchg
jecxz
mov
enter
mov
popw
add
popa
rol
ret
inc
imulb
loop
test
inc
test
repnz
ja
xor
pushl
pop
cmpsl
xchg
hlt
fistpl
loopne
mov
rol
test
ret
call
sub
subl
mov
cmp
fbstp
add
fwait
mov
stc
ss
or
cmp
rolb
sti
add
fstpt
cmp
ljmp
mov
mov
push
jnp
xchg
push
pop
cld
ror
into
fsubrp
pop
pop
jg
xor
and
sbb
aas
add
inc
pop
or
cs
rcll
inc
jbe
adc
jbe
mov
cmp
movsb
fwait
gs
sarl
and
lret
out
ficompl
mov
mov
out
xchg
sahf
or
cmc
inc
xlat
ret
ret
aaa
xor
ljmp
dec
cmp
mov
mov
push
daa
sub
nop
pop
or
sub
test
mov
in
cld
cmp
sub
scas
lock
jmp
lahf
or
movsb
push
dec
inc
cli
xor
das
scas
outsb
iret
lret
addr16
insb
inc
jmp
sahf
sbb
push
repnz
lods
jl
mov
inc
pop
out
aaa
inc
push
pop
adc
pop
movsl
pop
call
fisubs
dec
push
pop
dec
push
outsb
sub
inc
ja
test
std
lret
sti
daa
xchg
adc
incl
ljmp
fucomip
or
xchg
arpl
inc
aaa
mov
daa
out
stos
xor
push
mov
jno
sahf
or
and
jle
lahf
jl
jbe
fwait
repz
fbstp
aas
or
iret
or
out
inc
xchg
sub
pop
cmp
cli
push
pop
add
hlt
int
pop
or
movsb
push
lret
aaa
fsubs
xor
sahf
lret
jle
push
jl
xor
or
mov
push
mov
cltd
out
pop
sbb
xchg
movsl
and
push
mov
int3
lret
add
js
insl
add
dec
and
or
adcl
inc
jecxz
mov
inc
mov
sub
or
rcl
ss
int3
test
mov
xor
cwtl
inc
les
sub
andl
jg
jnp
dec
sub
subl
xchg
pop
loopne
xchg
mov
mov
ror
pop
movsb
add
jle
mov
cmp
pop
clc
or
mov
sbb
pusha
mov
dec
jns
loop
gs
adcl
and
add
mov
mov
xor
addr16
pop
test
xchg
cmp
js
pop
in
ljmp
in
pop
lret
test
mov
mov
xor
cmp
adc
xor
enter
jecxz
rcll
sub
push
cmp
xor
push
aaa
pop
sub
andl
rolb
enter
jmp
lahf
add
jp
ds
adc
cmpl
inc
jae
cmp
xchg
push
mov
sub
push
sub
xchg
inc
aas
test
jb
sub
out
call
and
les
jae
xchg
lock
dec
insl
andl
js
push
in
mov
jecxz
lods
je
popa
shrl
mov
dec
push
sub
add
sarb
jns
mov
mov
leave
jne
cmpsl
in
jp
int3
mov
aas
test
jmp
lock
mov
dec
mov
shl
and
and
sahf
fwait
sbb
mov
or
aad
movsl
fldl
push
add
ljmp
out
jecxz
push
push
or
jae
test
addl
xchg
cmc
mov
stos
mov
sub
xor
jl
into
jg
sub
psrld
xchg
pop
sbb
xor
insl
lahf
add
and
or
add
adcl
dec
mov
fdivl
sub
mov
mov
pusha
jae
dec
pop
xor
and
xchg
pop
and
arpl
push
scas
nop
popa
shrb
jle
jmp
and
xor
adc
sub
cmp
xor
xor
xor
dec
lcall
pusha
inc
dec
xor
sti
jne
pop
pop
ret
rcll
xor
xchg
push
movsl
xorl
int
mov
mov
jle
js
icebp
fstp
xor
repz
test
mov
dec
repnz
xchg
xchg
sub
in
and
call
pop
nop
fsubrs
ljmp
mov
mov
adc
mov
rclb
into
insb
and
mov
cwtl
repnz
lds
cmp
and
outsl
jbe
push
scas
out
xor
lea
fcoml
adc
into
xchg
sbb
pop
mov
push
clc
push
rcrl
shr
jbe
jge
push
rcr
jecxz
in
hlt
jmp
mov
lock
mov
scas
rclb
add
ja
jne
push
sahf
les
out
sub
sub
repnz
imul
push
pop
icebp
lret
fists
loope
fwait
dec
adc
mov
ljmp
mov
jl
test
pop
mov
push
shlb
mov
push
lods
inc
sbb
jecxz
mov
dec
sub
dec
fidivs
clc
xchg
shlb
data16
fsubrl
and
fiaddl
mov
jl
jmp
addr16
adc
dec
xlat
jg
dec
push
mov
push
pop
and
xchg
dec
or
ret
add
or
push
jno
push
adc
mov
inc
adc
js
cs
mov
aad
in
cmp
icebp
jmp
cmpb
sbb
fmull
xchg
jbe
inc
scas
iret
shlb
dec
bound
xchg
and
mov
aam
aam
adc
pop
push
leave
in
hlt
popf
ds
lods
lcall
sub
fcmovnu
sti
popa
stos
and
cmc
adc
mov
fs
cwtl
negl
push
pop
sar
aaa
or
add
xchg
shl
xchg
test
push
and
lret
test
outsb
dec
ficompl
push
cmp
jl
int
fwait
sbb
push
test
add
repnz
nop
pop
std
fisubrl
test
fisubrs
adc
or
push
loopne
test
mov
ds
test
inc
out
mov
gs
clc
data16
rcll
add
mov
lds
mov
mov
xchg
aam
jle
stos
orl
push
clc
mov
fcmovu
divb
push
or
mov
push
dec
pushf
adc
mov
dec
ss
daa
xor
test
std
cs
adc
f2xm1
mov
pop
movsb
inc
mov
sete
imul
sub
add
lcall
or
and
xchg
push
adc
adc
or
movsb
fbld
sbb
mov
in
movsl
push
pop
push
mov
into
mov
std
fcompl
loop
push
mov
add
add
daa
arpl
call
das
lds
call
lret
out
xor
adc
les
mov
pop
dec
hlt
sub
adc
lret
sahf
sahf
push
inc
dec
outsb
mov
data16
iret
xor
adc
jbe
or
cmc
push
cmpsb
sbb
xor
cmp
cs
daa
outsl
lock
mov
aam
loop
icebp
ja
mov
dec
dec
push
in
push
add
addr16
ds
into
arpl
insl
jbe
rcr
icebp
movsb
push
jo
scas
cmp
ret
add
sbb
or
xchg
jecxz
push
cltd
js
mov
sub
aad
packsswb
movsb
mov
mov
mov
pop
dec
cli
mov
arpl
outsl
dec
mov
push
sbb
mov
jb
pop
mov
ret
fsubrl
mov
fadd
test
cmp
add
mov
imul
ds
mov
jmp
add
xor
pop
mov
mov
ret
xor
sbb
outsb
pop
cmp
hlt
sahf
bound
jle
test
push
xor
mov
test
fistl
cmp
mov
sbb
shrl
pop
push
inc
add
cmp
mov
and
push
pop
fisttps
mov
inc
shll
fmul
adc
fcompl
aad
pop
lock
add
in
and
gs
xchg
cmp
push
mov
loopne
jo
push
push
push
inc
xor
or
xor
icebp
std
test
mov
pop
test
adc
push
dec
cmpb
inc
jp
xchg
push
fwait
sbb
loop
jo
pusha
fldcw
xor
lock
jae
jecxz
push
andb
mov
mov
in
mov
lahf
mov
fimull
mov
pop
incb
cltd
inc
call
lds
cmp
gs
test
and
dec
add
out
cwtl
and
iret
mov
lret
mov
or
xchg
adc
xor
dec
ss
cmc
in
push
inc
pop
mov
dec
iret
xchg
mov
adc
dec
sub
push
mov
sub
dec
dec
mov
nop
inc
sbb
cld
out
and
ss
jl
popa
jo
pop
sbb
js
xor
lods
fnstenv
sub
aam
and
movsl
xor
out
or
jecxz
lods
xchg
or
or
dec
lcall
mov
repnz
and
outsb
mov
push
sti
mov
xchg
xchg
adc
outsl
adc
cmpsb
mov
adc
fists
dec
adc
inc
dec
xor
inc
scas
jo
fistps
pop
das
lret
push
mov
sbb
mov
mov
stos
addb
fists
repz
adc
jp
fnstcw
mov
mov
inc
das
fwait
sarb
lock
cmp
push
jle
mov
jnp
xlat
jbe
inc
sub
subl
sbb
imul
int
push
push
stc
pop
aas
adc
jle
cmpsb
in
outsl
adc
adcb
xchg
and
sub
rcl
or
test
mov
int3
or
adc
imul
lods
test
ret
jno
jp
xchg
ds
addr16
pop
in
sarl
daa
cmp
pop
incb
xchg
hlt
lods
jns
mov
inc
dec
pop
iret
sbb
push
mov
scas
xor
into
leave
inc
push
into
xor
add
fistpl
mov
mov
mov
mov
test
mov
cmc
mov
aam
mov
pop
inc
aas
in
test
cld
gs
pop
pop
mov
lahf
and
sub
in
test
xchg
push
dec
xchg
adc
sbb
mov
insl
jb
test
and
stos
jg
inc
jae
imul
dec
sub
in
shll
jbe
add
mov
mov
std
mov
mov
sbb
push
scas
shll
pop
or
mov
popf
inc
jmp
xlat
xor
rclb
adc
stc
out
jno
adc
or
add
int
loopne
dec
rcr
pop
mov
or
push
in
shll
add
push
inc
cltd
add
arpl
sti
pop
aaa
leave
add
lret
adc
cmp
js
jmp
sbb
push
dec
into
xor
dec
pop
cwtl
pop
iret
mulb
adc
mov
orb
testb
mov
xor
xor
pop
or
push
mov
imul
adc
sbb
jecxz
ds
adcl
ds
jl
enter
sub
loope
sti
cmp
test
sahf
pop
pop
shrb
mov
sahf
push
dec
and
mov
shll
push
pop
pushl
cmpsl
pop
stos
jge
pop
roll
adc
xor
and
mov
andl
mov
mov
sahf
adc
jns
rcll
ret
jmp
movsl
gs
push
movsb
shrb
add
fcmovne
mov
out
ret
imul
dec
mov
jmp
add
lods
push
jg
in
arpl
ss
loope
dec
aad
stos
inc
adc
push
add
pop
sbb
aas
xchg
in
aad
je
fistpl
dec
hlt
jbe
jae
das
pushf
and
leave
lret
sbb
push
jecxz
mov
ja
jecxz
or
and
sahf
add
adc
rolb
lret
ss
mov
mov
popa
mov
test
loope
scas
pop
mov
aas
mov
in
orl
adc
or
push
pop
ljmp
mov
pusha
pop
cmp
out
lods
push
mov
insl
dec
sbb
fisttpl
fnclex
push
aad
sahf
xor
out
add
add
xor
int
outsl
cmp
fbstp
sbb
lods
pop
ljmp
lret
in
xchg
clc
mov
pop
mov
ds
hlt
pusha
or
pop
dec
pop
cmp
xchg
xor
faddp
mov
pop
pop
inc
jle
sbb
leave
jmp
popa
mov
stc
cmpsb
outsl
add
cmp
add
lret
push
inc
ja
or
sbb
add
shl
dec
jp
or
clc
test
popf
out
popf
add
movsl
sbb
stos
outsb
xchg
xchg
adc
sbb
and
aad
pop
fisubs
popa
je
inc
push
lahf
inc
popa
jp
mov
push
cmpsl
cmp
int3
push
and
imul
hlt
xor
adc
in
js
and
add
cmpsl
fmuls
je
xchg
dec
push
sbb
jae
fisubs
add
adc
pop
cwtl
adc
and
movb
mov
add
and
dec
jle
push
in
xchg
sub
aad
test
push
insl
cmp
mov
shrl
xor
in
jbe
pop
cmpsl
loopne
ror
add
clc
adc
mov
mov
mov
jg
gs
ficoml
int
aaa
or
iret
shrb
pusha
aaa
sub
mov
andb
sbb
stos
xor
xchg
shr
jg
lock
cwtl
push
cmp
sub
inc
mov
jae
cltd
inc
lods
daa
push
pop
or
insl
out
fidivl
push
xchg
call
fisubrl
ret
mov
add
shr
and
ret
jnp
mov
scas
ss
data16
adc
pop
sub
mov
mov
in
lods
sti
mov
adc
pop
movsb
ret
pop
xchg
mov
imul
rcrb
cmp
sub
arpl
or
mov
dec
mov
out
loop
jns
inc
add
xchg
dec
std
inc
addr16
xor
or
ja
mov
pop
xchg
pusha
dec
cld
in
fisttpll
decb
or
test
mov
aaa
addl
stos
inc
sbb
mov
jmp
pop
pop
or
adc
add
dec
lret
fmulp
inc
ret
pop
inc
pushf
sbb
dec
push
gs
ret
adcb
aas
jb
mov
test
les
xchg
loopne
add
out
push
or
pushf
shl
ds
ds
push
push
cmp
es
jle
xor
and
ret
dec
xor
push
movsb
push
jno
iret
xor
xchg
fisubl
adcl
popf
push
mov
xchg
les
add
arpl
xchg
pop
push
sbb
sbb
insl
pusha
data16
push
and
aaa
cltd
xchg
jmp
jo
lea
xchg
cmc
insl
testl
lret
jnp
icebp
or
dec
sub
hlt
test
xor
push
xor
out
adc
call
push
movsb
inc
incb
in
xchg
cltd
xor
or
insb
pop
cld
addl
lds
dec
mov
xor
fwait
lahf
jne
js
ljmp
pusha
adc
mov
adc
sbb
cmp
cmp
leave
test
lahf
stc
sbb
outsb
cmp
lahf
ficompl
mov
jo
cmp
rcll
mov
xchg
add
ret
sbb
inc
pop
xchg
mov
data16
xchg
sbb
dec
nop
xlat
dec
cli
insb
push
lret
inc
outsl
cmpsl
repz
loop
addl
scas
ret
mov
cmp
push
xor
stos
movsb
cld
cmpsl
test
cmovp
loope
pop
jmp
ds
cli
shlb
dec
xor
loopne
dec
ljmp
fildl
mov
addr16
mov
sub
adc
mov
insl
es
mov
stos
mov
fimull
int3
xor
jbe
jmp
nop
bound
scas
loopne
or
cmpsl
pop
shll
push
sub
std
add
insl
cmp
cld
pop
das
sarl
js
negb
jnp
pop
out
mov
xor
aam
or
xorl
push
mov
loopne
mov
dec
into
pop
movsb
xor
push
cmpsl
and
fs
or
mov
sub
cli
ss
in
or
jecxz
daa
xor
add
xchg
dec
insl
mov
les
jo
mov
inc
mov
mov
jp
and
aam
pusha
in
in
pop
inc
lods
push
lock
cmp
outsl
mov
nop
popf
push
sub
push
adc
push
add
xor
cltd
push
and
dec
push
push
outsl
xchg
lock
mov
je
sbb
pop
mov
stc
repnz
lret
lods
and
jmp
mov
xchg
jle
or
dec
mov
cld
jbe
stos
adcb
cmc
cmp
cld
punpckhdq
rcrb
jo
clc
jge
imul
addr16
leave
fnstsw
test
outsb
adc
icebp
test
xor
xchg
sar
push
or
ret
mov
xchg
std
jle
ja
lods
sarl
out
call
jecxz
ret
xchg
sbb
out
add
mov
std
das
sbb
pop
into
pop
xchg
push
loopne
mov
sub
inc
cmpsl
stos
xor
cmpsb
shll
pop
cs
or
sbb
inc
xchg
jne
xor
xor
shl
jno
scas
xor
inc
cmpb
xchg
dec
xor
pop
les
out
in
cmp
pop
sub
cwtl
lea
xchg
lods
xor
pop
dec
int3
sbb
iret
sbb
sub
mov
mov
testl
inc
fsubl
inc
lea
jae
and
xchg
rclb
xchg
jbe
rorb
leave
inc
data16
xchg
mov
adc
jge
add
fs
dec
dec
stos
push
jbe
jne
add
add
xchg
push
icebp
daa
les
lcall
std
icebp
cmpl
sbb
aad
dec
vcvttsd2si
and
dec
inc
imull
sub
pop
jae
mov
fnstsw
vdivpd
sub
add
ret
sbb
and
jl
scas
jno
jle
cmpsb
fidivrs
push
mov
aam
fisubrl
leave
jae
in
shlb
inc
lods
psrlq
jne
insb
dec
fucomp
cltd
mov
ss
mov
int3
xchg
repnz
jne
push
xchg
push
xchg
dec
pusha
pop
jns
push
pop
fdivl
add
dec
push
test
and
mov
aam
adc
inc
stc
mov
dec
jp
dec
push
shrb
sbb
push
dec
cmpb
push
jmp
mov
stos
in
push
ljmp
adc
pop
sbb
sbb
dec
add
fisubrl
fnstsw
inc
mov
cmp
out
lret
arpl
in
adc
dec
mov
not
fs
jnp
loope
mov
xor
nop
lock
mov
std
jle
jae
cmpsb
dec
fistpll
cmp
sahf
rol
xchg
icebp
mov
jno
lcall
lret
packsswb
push
lods
push
leave
lret
lock
data16
mov
movsb
pop
mov
lahf
pop
out
cmp
fmul
dec
push
mov
js
xchg
jnp
xor
arpl
popa
adc
test
xchg
xor
dec
cwtl
sbb
xor
in
sbb
mov
adc
pop
pop
lcall
mov
jno
jmp
push
lcall
cwtl
ss
pushf
sbb
add
aaa
xor
xchg
xchg
shlb
dec
pop
imul
daa
pop
test
pop
ret
test
or
push
sub
adc
inc
outsb
add
lcall
push
aam
pop
push
aam
jle
xchg
adc
mov
loope
jmp
test
inc
stc
mov
or
cmp
aam
iret
in
lods
cmp
pop
jo
xchg
mov
sub
mov
xor
jnp
cmp
mov
adc
shlb
loop
jmp
mov
clc
out
pop
xchg
mov
or
in
inc
sbb
aad
inc
jmp
int
rorb
xlat
lahf
pop
stos
inc
or
push
test
scas
dec
lock
fiaddl
xchg
aas
popf
icebp
aam
cli
xchg
out
add
xor
loope
xchg
out
pop
in
in
rep
sub
sti
cmp
push
mov
or
pop
dec
lock
test
xor
popf
rcr
test
pop
add
repz
imul
pop
jae
rcll
fs
jns
push
ds
leave
mov
inc
incl
mov
out
xchg
imul
leave
sub
dec
aas
fstpl
jo
pop
iret
lahf
movsl
lds
cmc
xlat
xor
cmp
ret
pop
inc
xchg
xchg
add
sbb
lret
stos
dec
push
jnp
mov
push
xor
into
sub
push
or
mov
ret
cmpsl
add
loop
aam
mov
mov
add
lret
mov
and
lods
sbb
pop
push
fdivrs
add
nop
leave
mov
in
imul
xchg
sub
aam
pop
movl
pop
or
xlat
hlt
pop
out
call
adc
fbstp
xor
and
out
mov
scas
jg
in
loope
insb
aas
daa
stos
add
xlat
jecxz
ljmp
enter
mov
sbb
js
push
les
dec
xor
lret
jp
repnz
sbb
jge
subb
mov
orl
or
pop
insb
and
enter
fs
mov
xchg
mov
add
pop
jle
jg
jecxz
ja
pop
xor
lods
jp,pt
outsl
pop
push
push
mov
mov
jl
notl
mov
pop
pushf
pop
outsb
push
clc
push
xor
sub
repnz
out
shl
xor
lods
and
cmc
pushf
test
and
hlt
fwait
adcl
inc
mov
dec
les
movsb
mov
test
sbb
out
mov
sbb
stos
cltd
andl
rol
orl
jl
adcb
pop
push
mov
add
aas
test
movsb
jge
adc
imul
les
mov
mov
mov
cmpsb
xchg
mov
shl
sahf
fcomps
xor
out
sbb
in
pushf
lcall
push
inc
lret
mov
jnp
xorl
pop
scas
lret
arpl
sarl
cld
sub
xlat
cli
jnp
mov
mov
ret
mov
es
pop
mov
bound
sub
jo
and
xchg
inc
cli
imul
mov
or
js
insb
inc
aaa
inc
jae
stos
fs
jmp
add
push
push
dec
ljmp
out
cmc
dec
out
cwtl
sahf
and
lods
ljmp
out
test
mov
dec
lods
push
imul
cmpsl
cmp
aam
sbb
aas
or
mov
mov
lea
cwtl
out
shr
ss
mov
bound
inc
enter
js
arpl
sub
inc
mov
mov
fcomp
subl
or
xchg
and
fmuls
xor
push
adc
jns
mov
mov
in
dec
lock
mov
cmp
stc
in
or
in
sarl
cpuid
add
negl
cmp
jno
inc
lret
sbb
rcrb
mov
in
js
in
es
stos
ss
lcall
xchg
adc
xor
daa
adc
int3
int3
cs
add
or
inc
mov
mov
mov
mov
push
inc
jo
sbb
push
mov
pop
jns
enter
mov
push
jecxz
adc
dec
xchg
pop
rcrb
mov
call
mov
je
jg
cs
in
inc
in
xor
mov
fnstenv
stos
xchg
and
test
mov
iret
aaa
ja
pop
push
hlt
loopne
xlat
test
mov
out
jg
aam
xor
push
mov
lods
fwait
lds
lods
outsl
and
xchg
add
mov
xor
pop
pop
cs
rcl
inc
sbb
out
cwtl
inc
cmp
mov
int
iret
ret
fs
out
in
in
jp
adc
sbb
shl
nop
jae
jge
cmc
ss
inc
sbb
inc
lds
xorb
push
movsl
inc
push
sbb
fldenv
pop
je
dec
sbb
mov
int3
in
xchg
iret
xchg
xchg
out
fucomp
fadds
mov
sbb
jg
xchg
pop
cmp
stos
mov
mov
mov
loop
in
jmp
pop
enter
mov
sarl
aam
push
out
test
mulb
mov
not
rclb
xchg
data16
gs
test
mov
mov
or
lcall
or
ud1
add
es
out
stc
lar
lret
dec
call
aam
sti
sub
add
pop
into
push
movsl
sbb
add
push
ror
xor
xlat
fcoml
std
push
mov
mov
jbe
xchg
fdivl
add
ficoml
hlt
imul
out
or
outsb
inc
xchg
decb
pop
es
fs
flds
cmpsl
test
test
daa
cmpsl
and
subl
pop
popa
jbe
stos
loop
mov
pop
addr16
sbb
sub
inc
fstps
pusha
xor
pushf
mov
sbb
xchg
push
icebp
xor
and
dec
mov
fldl
dec
push
hlt
stos
adc
push
movsl
shll
adc
add
and
sbb
shrb
in
add
into
jbe
sub
jne
add
inc
rcrl
add
lcall
shl
enter
movsb
iret
aaa
adc
movl
adc
add
aam
daa
sub
xchg
mov
std
imul
iret
insl
data16
aaa
fistl
sub
pop
mov
hlt
mov
fdivs
xchg
or
dec
in
cmp
sbb
out
cwtl
lret
fcompl
test
or
stos
dec
cld
xchg
sbb
repz
cmpsb
pop
aas
or
cmovg
adc
loopne
jbe
icebp
pusha
out
sub
jb
and
lods
adc
xor
movsl
push
repz
test
in
test
pushf
or
popf
jmp
test
sbb
pop
jne
mov
push
pop
jno
int
int3
fwait
cmp
push
test
gs
inc
dec
orl
xchg
call
es
mov
repz
outsb
bound
fbstp
adc
pusha
movsb
xchg
sbb
mov
push
add
iret
jne
scas
stc
mov
inc
subb
cs
hlt
mov
jecxz
mov
jecxz
pop
sahf
jge
push
andb
mov
out
shll
pop
int
stc
daa
mov
cmp
popf
pop
xor
push
lret
push
push
mov
ljmp
pop
insb
subps
xchg
sbbl
jno
jno
sbb
and
repnz
in
fildl
mov
lret
cmp
stos
pop
inc
iret
call
lcall
inc
push
and
dec
adc
cs
bound
xor
adc
aam
add
cltd
mov
inc
movsl
jne
leave
dec
sub
dec
arpl
mov
adc
inc
scas
popf
or
out
pop
mov
out
or
mov
hlt
push
pop
inc
lds
push
pop
clc
cs
test
jl
pop
enter
and
pop
mov
sbb
fcoms
mov
pop
sbb
jg
std
mov
cmp
adc
inc
out
cmpsb
popa
cld
adc
lea
scas
icebp
pop
lahf
push
test
cwtl
jp
pop
mov
icebp
adc
test
insl
gs
mul
in
push
outsl
xchg
sbb
and
xor
pop
mov
lret
push
mov
mov
jecxz
pop
dec
sbb
inc
add
push
jno
sbbb
mov
pop
popa
sti
rclb
test
imul
cmpsb
pusha
mov
jl
add
jle
jge
mov
sbb
xor
out
mov
popa
cltd
mov
sub
sbb
cmp
push
daa
sub
pop
lret
mov
mov
ret
ret
pop
int3
movsl
inc
outsl
test
xchg
dec
cmc
adc
mov
pop
add
sub
or
xchg
rol
lret
mov
int
mov
das
repz
mov
movl
loope
inc
and
js
xchg
push
xchg
in
mov
out
mov
xorb
add
into
mov
scas
inc
dec
mov
outsb
pop
aad
dec
into
push
push
loopne
xlat
add
or
mov
sbbl
pop
inc
push
ja
sub
arpl
add
cmp
cld
out
mov
dec
cwtl
xchg
or
fchs
or
jle
push
lahf
sub
cmc
mov
inc
jp
test
push
mov
push
and
cmpsl
pop
aad
and
dec
xor
out
jae
fiaddl
mov
pop
sarb
lods
sub
imul
jg
jg
inc
les
xor
out
aas
fcmovu
mov
dec
sbb
mov
pop
push
orl
stos
mov
or
lods
pop
in
push
insl
and
xchg
les
in
pop
adc
mov
pop
push
cmp
push
lock
xchg
aas
xor
in
mov
nop
push
into
pop
aad
sub
jmp
aas
sbb
aam
rorl
int
mov
cmp
or
add
jno
inc
and
xchg
cld
cmp
fadds
lds
xor
xor
mov
add
fidivl
lea
out
jbe
mov
and
imul
fsubr
sbb
pop
js
mov
adc
inc
shll
and
sub
arpl
add
push
mov
inc
ljmp
nop
dec
mov
mov
mov
outsb
inc
cmp
mov
dec
lock
mov
test
inc
mov
ret
cmp
xlat
sub
adc
dec
cmp
cltd
mov
adc
jo
stos
mov
in
xlat
xor
push
out
std
aaa
js
testb
mov
and
icebp
in
std
gs
add
sub
in
ret
jecxz
mov
sbb
lahf
xor
lcall
cmp
test
cmp
xchg
add
divb
repnz
lahf
push
jge
cltd
clc
jl
mov
sbb
and
popf
mov
fsts
insb
fbld
lahf
fldl
mov
sub
xor
pop
or
sahf
jl
bound
lahf
jge
xchg
inc
xlat
cltd
adc
popf
and
outsl
xlat
xor
mov
ffreep
add
cmpsl
adc
push
inc
dec
inc
stos
cmp
leave
mov
fwait
dec
iret
jp
fildl
pop
inc
adc
sbb
mov
sti
mov
or
fwait
xlat
mov
sub
mov
aas
mov
outsb
adc
insb
and
or
push
or
jge
loope
add
xor
pop
scas
call
pop
in
or
insb
sub
push
mov
ret
add
inc
xchg
test
repnz
xor
out
mov
sub
sub
scas
dec
adc
fstpl
les
cmpsb
fchs
push
ss
scas
int
mov
inc
xchg
lahf
aad
adcl
repnz
dec
mov
xor
fdivrs
inc
dec
adc
sub
push
loop
roll
inc
inc
aam
in
lahf
jnp
fmull
adc
lcall
movsb
sbb
out
sahf
hlt
in
out
ja
mov
mov
sub
cli
out
jecxz
int
sub
fdivs
jno
hlt
fxam
pop
lret
push
lea
stc
sbb
mov
lock
repz
pop
and
shl
arpl
push
mov
rolb
aam
ljmp
push
sub
xlat
or
or
mov
sub
imul
mov
xor
mov
dec
sbb
fistpll
inc
adc
data16
js
inc
xor
ljmp
push
add
fsts
dec
andb
fistl
nop
push
rclb
mov
mov
push
ljmp
in
push
xchg
mov
adc
jmp
dec
jns
lahf
repnz
inc
testb
shll
rcr
mov
fnstenv
notl
mov
stc
xchg
popf
data16
sbb
dec
icebp
sbb
rol
insl
pop
ds
pop
icebp
in
nop
cld
lods
fists
inc
inc
cmp
xchg
roll
jmp
or
test
out
pusha
test
sarl
imul
lods
loop
hlt
push
pop
orl
lods
icebp
cwtl
or
dec
lahf
and
mov
cmpsb
and
push
cli
adc
bound
pop
fistpl
cmp
pop
or
xchg
xchg
cmpsb
outsb
notl
scas
loop
mov
sub
mov
inc
push
sub
lret
cmp
into
xchg
int3
push
and
repz
hlt
xor
popa
push
pop
popa
add
movsb
loope
dec
push
sbb
int
clc
je
cmp
loop
es
mov
xchg
mov
dec
mov
inc
mov
jecxz
loopne
mov
mov
adc
mov
adc
dec
sahf
sarl
int
scas
jmp
jge
cmp
mov
pop
inc
icebp
scas
jae
jle
dec
stc
add
in
lods
je
cmpsb
sbb
sti
xchg
inc
xchg
int
aam
inc
push
xchg
cmp
jecxz
notb
push
pop
clc
and
int
popf
ss
adc
jmp
pop
aas
jmp
pop
mov
mov
ljmp
xor
iret
lret
ficomps
in
push
das
aas
nop
pop
out
xchg
out
and
subb
repz
cwtl
icebp
push
popf
fnsave
outsb
iret
in
out
lock
jne
push
xchg
sti
data16
jmp
mov
insl
aam
cmp
ret
push
icebp
stc
pop
mov
pop
sub
popa
lock
pop
in
xchg
lds
popa
ja
mov
pop
fwait
inc
jno
mov
aad
outsb
stc
lcall
pop
addr16
pop
jo
dec
xlat
cmp
pop
and
scas
imul
lret
jo
fiaddl
mov
mov
xchg
loopne
mulb
je
sbb
sub
fcmovnb
out
mov
and
dec
xchg
out
fwait
xor
popa
adc
jae
dec
das
cmpsl
cwtl
mov
xchg
fnstcw
or
mov
loop
xor
pop
sahf
sub
dec
roll
adc
xlat
fidivl
inc
fsubs
je
out
mov
fstpl
pop
cmc
ljmp
and
dec
mov
jno
loopne
push
mov
popf
dec
pop
pop
dec
decb
jnp
jge
sbb
aad
dec
xor
fildl
sub
std
fs
or
push
in
xorb
mov
mov
mov
dec
lret
negl
movsb
aaa
repz
push
jge
mov
sbb
mov
fisubs
push
xchg
xlat
scas
and
push
test
jecxz
in
fisttps
mov
pop
jb
lcall
mov
fwait
in
jecxz
cmp
or
popa
inc
pop
cmpl
sub
ljmp
inc
shl
lods
push
test
cmp
js
xor
inc
js
and
jns
jnp
out
cltd
sub
sbb
xchg
and
pop
mov
popa
fdivrl
mov
outsl
pop
push
cmp
les
xchg
xor
mov
rorb
jp
hlt
insl
rclb
loop
andl
xor
gs
sbb
mov
and
pop
and
mov
jg
orb
cmpsl
xchg
sbb
jne
scas
cs
xor
mov
test
repnz
mov
das
out
enter
add
sbb
push
mov
enter
imul
sti
add
scas
lods
cmp
das
in
cmp
sbb
mov
push
fdivs
sub
and
sbbb
in
jmp
push
mov
iret
lock
xor
fsubrl
jae
leave
jge
mov
ret
outsb
scas
hlt
or
xchg
or
lahf
or
push
mov
jns
sbb
sub
ds
mov
es
std
lods
into
fcmovnb
cwtl
cwtl
or
push
out
in
jno
lods
mov
cli
pop
arpl
mov
sti
loop
pop
mov
jo
out
mov
addr16
mov
push
stos
aas
mov
xchg
xchg
push
test
jb
imul
in
push
stos
mov
ss
movsb
sub
pop
add
mov
xor
scas
icebp
adc
xchg
loop
adc
inc
test
or
and
repz
xorl
cmovle
sub
daa
inc
jnp
ret
cmp
ljmp
jbe
arpl
insb
sbb
and
push
cmc
sbb
jecxz
push
push
enter
fwait
out
adc
mov
mov
add
icebp
sahf
or
ja
aaa
ss
popf
pop
sahf
mov
out
pop
mov
jle
lods
arpl
mov
cld
mov
scas
repnz
unpckhps
idivb
mov
mov
mulb
test
lock
loopne
xchg
jb
push
or
cmpsl
jns
mov
int
jb
mov
popa
sub
leave
push
inc
adc
dec
mov
stos
mov
push
sbb
xchg
movsl
outsb
cmp
mov
cltd
jns
add
cmp
fbld
les
mov
sub
fisubl
out
adc
popa
dec
lds
and
cli
mov
imul
fs
ja
inc
test
pop
push
outsb
mov
out
rcr
xchg
lret
mov
jnp
adc
push
xor
ret
sbb
cltd
cld
mov
mov
mov
testb
push
repz
cmp
daa
add
sub
pop
inc
lret
xor
das
imul
push
dec
pinsrw
mov
imul
or
and
mov
ret
mov
movsl
dec
hlt
stos
pop
sub
xor
xchg
test
hlt
aad
sub
scas
inc
rcr
mov
jno
mov
jmp
cmp
gs
or
jge
or
pop
test
aam
fst
lcall
jbe
dec
pusha
lods
jmp
shll
dec
xor
es
mov
dec
in
lods
enter
mov
lock
ja
jns
mov
aaa
sub
push
js
lea
inc
gs
pop
addr16
xlat
sbb
jl
push
cmp
inc
dec
clc
and
jle
sti
jo,pn
or
mov
cmp
inc
dec
dec
xchg
movsl
mov
pop
rorl
push
inc
hlt
xchg
shlb
lock
orb
out
sbbb
mov
lods
int3
data16
mov
jne
add
insb
mov
mov
loope
cmp
xor
dec
inc
jbe
jno
mov
dec
xor
sub
jb
inc
or
jge
out
lahf
cmpsl
fdivp
sub
iret
push
xor
iret
or
rorb
ret
or
lods
xorb
sahf
or
pusha
inc
std
sbb
movsl
scas
cli
xchg
push
sbb
sbb
add
xchg
lods
inc
jle
lock
jge
fldl2t
add
fildl
mov
sahf
xchg
mov
popf
stos
ja
jbe
pop
movsl
movsl
jbe
cmp
xchg
push
lcall
iret
inc
sub
add
in
clc
shll
mov
and
ret
or
ss
push
push
mov
inc
adc
cmpsb
push
mov
mov
adc
rcl
stc
adc
mov
cmpsb
jbe
xchg
test
stos
mov
js
lds
pusha
cmc
fdivp
add
push
mov
jl
das
sbb
or
push
inc
push
jno
sbb
xchg
and
es
ror
or
scas
out
cmpl
je
icebp
push
mov
sahf
in
mov
hlt
sub
call
cs
mov
dec
scas
or
mov
xor
pop
popf
dec
xor
dec
mov
fldenv
cmp
dec
inc
nop
cltd
mov
add
xchg
aad
es
push
mov
or
inc
sti
mov
and
push
pop
xchg
int3
and
es
pop
xor
mov
popf
push
addr16
xchg
int3
movsl
cwtl
pop
nop
adc
scas
add
aam
pop
fisttps
fmulp
cld
add
sbb
cmp
arpl
insl
push
xchg
and
leave
scas
fldt
lcall
pop
fisttpl
scas
push
rorb
jecxz
ficoms
leave
pop
sarl
sar
jbe
cmc
sub
xchg
nop
adc
loope
les
cmpl
das
and
xlat
stos
or
pop
xor
jmp
push
jae
jl
aas
loop
cltd
mov
sbb
cmp
inc
aad
and
pop
mov
xchg
inc
ret
imul
add
enter
cmp
jmp
stos
aaa
xchg
or
sbb
cld
push
shr
in
stos
pop
dec
inc
rcrb
rclb
sub
push
or
pusha
add
lock
xor
leave
in
scas
cmpsl
dec
stc
insl
sbb
sbb
or
cltd
jecxz
and
leave
sub
repnz
sbb
stc
rcr
fwait
mov
out
pop
loopne
cmpsl
bound
scas
insb
fsubrs
cwtl
mov
sub
outsb
pop
sbb
sti
adc
in
out
stc
stos
fiadds
add
repz
orb
fidivrs
xor
hlt
xor
push
sbb
push
dec
push
add
pop
mov
push
sub
ret
add
mov
dec
mov
and
imul
mov
mov
arpl
pop
push
out
adc
ficompl
sub
in
repnz
mov
lods
and
adc
cmp
jae
adc
sbb
ss
mov
lds
ljmp
cmc
jne
xor
test
lods
mov
lret
mov
dec
mov
xchg
not
add
fidivrl
pop
jecxz
jl
sub
dec
decb
imul
sbb
xor
sbb
xchg
lcall
adc
inc
sub
cmp
loop
jg
jb
sub
xchg
mov
nop
enter
mov
dec
mov
sar
hlt
js
mov
dec
jae
sub
dec
addr16
sarl
xchg
test
add
or
or
push
enter
cltd
push
xor
jns
adc
jnp
inc
orl
pop
movsl
and
cmpsb
adc
jb
lea
mov
push
mov
inc
pop
and
xor
and
imulb
pop
movsb
cmpsl
xchg
ret
popf
out
divb
fsubr
std
or
sarl
mov
lcall
iret
jmp
fiaddl
push
dec
and
mov
rcll
pop
mov
in
lcall
test
push
mov
jle
pop
adc
xchg
pusha
mov
leave
test
push
fcompl
add
bswap
sbb
lret
cmp
pusha
mov
out
adc
enter
pop
insl
lods
add
or
pop
mov
into
jnp
inc
adc
xchg
iret
jns
jge
int3
and
ret
stos
add
test
jb
movsl
inc
and
dec
aam
adc
pop
push
sub
vcvtsi2ss
sub
hlt
mov
fistl
out
mov
pop
or
push
dec
push
nop
aas
pop
xchg
dec
push
aas
int
sub
sub
shl
mov
mov
scas
out
push
ljmp
mov
pusha
pusha
test
rol
or
ljmp
pushf
movsb
out
repnz
jge
mov
cmp
sbb
pop
lods
sub
rcll
rorl
xor
push
test
mov
rcrb
aad
aad
xlat
pusha
mov
add
cwtl
sbb
les
popf
ja
adc
stos
push
fmuls
sahf
pop
iret
mov
jne
aas
pop
cmp
sti
mov
mov
or
stos
and
xchg
out
mov
sbb
bound
mov
xchg
jnp
xorl
and
sarb
fs
lods
lods
punpckhbw
cmc
hlt
movsl
inc
arpl
pop
mov
test
ret
inc
test
inc
mul
fdivrl
cmp
pop
dec
test
popa
push
fists
roll
cld
sbb
cld
cmp
pop
sub
add
pusha
ss
push
pand
rorl
roll
dec
push
mov
cltd
rcll
imul
cmpsl
and
pushl
sbb
push
jns
mov
dec
push
push
fs
cmpl
push
add
and
xchg
repz
sbb
xor
pop
subl
inc
pop
lret
rol
cmc
cmp
int3
and
add
cltd
gs
pop
pop
dec
dec
cmp
aaa
lret
or
outsl
add
xchg
cmp
arpl
fwait
inc
mov
nop
xchg
and
push
cmp
push
ljmp
or
xlat
or
cmp
inc
movsbl
xchg
sbb
in
fnstsw
fwait
adc
mov
into
dec
xchg
xor
dec
push
jbe
jns
mov
das
adc
popa
aaa
add
and
cmp
and
push
lret
xchg
push
mov
dec
dec
and
mov
adc
pushf
in
mov
les
jg
fisubl
sub
inc
lahf
cmovl
je
mov
sbb
aam
pop
inc
fiadds
pop
xchg
mov
call
lcall
cld
icebp
jl
sahf
andl
pop
sbb
xchg
push
and
xor
sti
fsubrs
mov
fs
int
pusha
xor
insl
mov
sahf
lods
add
xchg
or
and
dec
dec
testl
js
int
in
es
cli
cmp
cmpsl
mov
push
jae
out
xor
fsubs
mov
neg
incl
fadds
mov
pop
jg
sub
test
sarb
add
push
lea
sbbl
ss
ja
mov
aad
or
adc
or
push
dec
sub
xor
push
sbbb
pop
in
sub
mov
scas
pop
mov
cs
add
and
or
repz
daa
lds
in
clc
les
enter
cmpsl
or
or
aam
mov
xor
dec
pop
movsb
adc
cli
pop
fcmovnbe
and
adc
xchg
add
cwtl
in
xorb
gs
sbbl
adc
std
sti
imul
clc
jge
je
xchg
pop
jnp
stc
or
add
jle
and
popf
dec
scas
adc
mov
cmpsb
mov
out
push
mov
icebp
sbb
enter
test
roll
mov
imul
adc
sub
adc
test
sbb
cli
negl
pusha
shlb
jp
inc
in
xlat
lds
pushl
cwtl
cmpsb
je
cmp
insb
cmp
mov
int3
xor
cmc
sbb
push
ljmp
outsb
aas
out
xchg
xor
lods
inc
adc
outsl
or
sub
popa
and
nop
xchg
imul
mov
into
sub
push
sbb
sarb
jl
ds
or
cld
popf
mov
ret
out
mov
dec
out
out
js
shll
cmpsl
mov
push
mov
pop
cmp
dec
inc
mov
dec
adc
imul
ret
sbb
add
cmp
mov
cmpl
out
fs
dec
das
jnp
repz
xchg
inc
sar
inc
push
jmp
or
test
sub
jno
pop
inc
int3
or
xor
nop
call
jae
into
iretw
cmp
roll
ret
and
mov
cmc
jl
or
pop
mov
xchg
lahf
sahf
and
ret
adc
or
repz
test
stos
movsl
iret
jecxz
outsb
dec
xchg
imul
jmp
loope
gs
lcall
insb
mov
pop
xchg
mov
mov
push
mov
ret
das
and
jae
jne
adc
add
fisttpl
sub
jno
mov
pop
bound
jle
dec
mov
stos
adcl
mov
inc
jmp
jmp
sti
push
jb
and
aad
or
mov
xor
jge
xchg
lods
add
sbb
xlat
push
xlat
push
inc
stos
jo
xchg
loopne
std
insl
filds
add
loope
je
add
xor
jo
insl
jecxz
push
xchg
mov
xor
add
icebp
sub
cmp
or
pop
push
push
push
clc
fnsave
ret
and
adc
hlt
jge
xchg
test
vmovss
test
mov
mov
cmp
clc
int3
mov
test
movsb
mov
call
pop
es
push
jmp
int
push
and
bnd
out
sub
xor
mov
aas
jecxz
pop
ret
lahf
jmp
pop
xor
aas
add
loop
dec
sbb
push
sub
push
ja
scas
repz
popa
int3
lret
fidivrl
daa
jg
test
ret
jne
fcomi
out
sti
out
ret
dec
mull
sar
out
inc
imul
cmc
je
sub
xor
jle
mov
sub
jl
fs
in
pop
push
mov
stos
mov
ljmpw
sub
mov
xchg
mov
and
add
cmp
pop
ss
or
add
cmc
mov
shll
inc
test
or
call
push
cmp
mov
and
ss
int3
in
mov
cmp
jle
cmp
gs
test
mov
mov
fwait
enter
in
lods
int
and
outsb
xor
cmp
sub
xor
cmp
inc
sbb
add
pop
cmc
push
sahf
xchg
pop
into
and
mov
aad
mov
jbe
cmpsb
cmp
inc
addr16
ffree
mov
mov
xchg
sub
xlat
or
int3
jp
xchg
jae
sub
sti
notb
xlat
mov
jb
inc
fisubrl
popa
out
jo
sub
int3
inc
mull
sub
outsb
rorl
adc
imul
sahf
mov
mov
mov
cmpsl
lcall
lret
dec
adc
icebp
jns
aad
dec
or
jne
lods
sbb
xor
notb
xchg
inc
lret
scas
mov
std
cmc
cmp
inc
into
fs
xchg
jmp
roll
loopne
cwtl
les
jle
aam
cltd
dec
je
inc
cli
dec
cs
cli
insl
dec
jg
jnp
dec
jle
aas
jmp
adc
adc
int
pop
cld
xchg
sbb
push
jo
adc
in
pop
fmul
lahf
inc
dec
bound
scas
cmpsb
push
call
addr16
add
sub
cmc
pop
inc
insl
push
push
xchg
sbb
cmp
icebp
dec
imul
mov
cmp
pop
cwtl
in
add
mov
cmpsl
push
movsb
push
mov
pop
mov
xor
push
lods
sbb
mov
inc
idivb
jne
or
mov
sbb
dec
pop
popl
pushf
cs
xchg
dec
inc
mov
loopne
daa
arpl
rcrl
imul
xor
xchg
xchg
pushf
cs
call
les
push
call
jae
pop
add
call
dec
aam
push
movsl
jb
sub
mov
mov
mov
mov
lock
jb
jbe
push
cld
ja
test
inc
test
mov
in
clc
jmp
scas
xor
mov
cld
or
cltd
fs
add
std
xlat
test
push
in
xchg
push
rcll
or
and
cs
push
in
add
aas
test
mov
les
lds
out
or
xor
add
es
into
cmp
pop
mov
daa
jl
bound
bound
stc
cmpsb
mov
enter
in
out
imul
leave
cmp
mov
out
push
jl
sub
and
movsb
mov
xchg
mov
fisttps
pusha
scas
and
xor
mov
sub
cwtl
insl
dec
pop
sub
movsb
sbb
pop
push
call
mov
push
add
cmp
cld
lods
and
xchg
insb
sub
mov
pop
outsb
lock
mov
xchg
jnp
sbb
push
cs
clc
pop
flds
scas
xchg
or
add
add
stos
test
ljmp
sub
daa
pop
in
hlt
shrw
loope
cmp
lret
cmp
jle
mov
xor
int
jl
int
dec
test
or
adc
cmp
push
and
cmp
push
fwait
mov
push
adc
js
push
lahf
or
dec
insl
pop
push
pop
inc
ja
cmp
pusha
repz
jp
cmp
cwtl
sbb
in
sub
xchg
jmp
pop
lret
loope
cmp
pop
xchg
ja
pop
scas
shll
mov
lock
ds
xchg
sahf
mov
add
sub
in
xchg
out
repz
cmpsl
imul
jo
aad
sbb
test
shl
rcl
dec
stos
mov
dec
icebp
cmp
cs
dec
arpl
scas
bound
pop
dec
xlat
mov
mov
les
cmp
iret
std
push
aas
pop
loopne
add
jae
xor
mov
lods
add
jl
cmpsb
fs
mov
int3
push
idivb
fstl
xchg
arpl
and
or
enter
jecxz
ret
les
mov
mov
rcl
cltd
lahf
lahf
adc
aam
cmpsl
cld
icebp
pop
mov
pop
sbb
pop
in
dec
and
imul
in
mov
imull
adc
mov
adc
loop,pn
xchg
jecxz
sti
sbb
fbstp
sub
mov
into
adc
mov
jnp
adc
pop
mov
outsb
sbbb
mov
imul
inc
aam
lock
imulb
mov
mov
mov
stc
ss
cld
xchg
push
mov
push
push
movsb
jne
outsb
xchg
ror
sti
insb
mov
xchg
jae
cltd
push
jmp
dec
lcall
lret
pop
imul
push
in
lods
cltd
hlt
inc
xor
sbb
inc
xchg
cmc
or
cmpsb
xor
pop
xor
lret
dec
imul
mov
cmp
lock
jnp
mov
jl
or
push
xchg
ret
jnp
aaa
sub
or
imul
and
adc
adc
dec
xchg
cmpsl
movsl
int3
aad
xchg
roll
fwait
scas
sub
adc
lcall
dec
mov
iret
fsts
add
and
dec
popf
lret
faddl
pop
clc
xchg
push
or
adcl
dec
cmp
pushf
or
sbb
roll
lret
int
jno
shl
cmpsb
sbb
sub
sub
in
jnp
in
insl
dec
hlt
fidivs
aad
cmpsb
out
push
push
test
jbe
inc
test
pop
mov
ret
adc
push
ret
aaa
xchg
xchg
mov
insl
sub
add
xor
clc
fistps
mov
mov
inc
mov
mov
add
loope
ret
mov
fldenv
add
lea
mov
mov
cmp
ficoml
in
out
cmp
add
into
jmp
mov
bound
cmp
push
xor
incb
pusha
mov
pop
lock
ret
xchg
rol
aam
aad
movsb
clc
or
mov
add
mov
ds
test
addr16
mov
mov
enter
mov
repz
sbb
sbb
xchg
lock
adc
dec
vandnps
test
add
cmp
repnz
push
roll
xchg
outsl
inc
mov
daa
pop
aas
pop
fisubrl
sbb
mov
test
sbb
in
aaa
fcmove
test
stc
sub
mov
data16
cmp
loope
mov
inc
push
ds
cltd
add
cli
cli
out
nop
jno
mov
adc
mov
scas
aam
adc
int3
jl
adc
jnp
sub
aam
mov
adc
add
lret
jae
addb
mov
or
add
mov
or
push
sar
xchg
mov
cmp
pop
sub
and
inc
push
movsb
mov
mov
push
in
dec
mov
inc
scas
push
aaa
daa
out
push
cld
fnsave
or
mov
in
sub
cmpsb
add
popa
push
or
jle
popfw
mov
repnz
mov
sub
mov
adc
jne
loopne
mov
dec
cmp
dec
hlt
dec
dec
and
data16
push
pop
push
daa
mov
inc
push
aaa
hlt
fdivr
lcall
daa
bound
pop
aad
cmp
ret
push
push
iret
pop
lret
leave
repz
ja
test
jns
orb
mov
cmpsl
das
mov
push
and
test
scas
dec
stos
test
mov
inc
adc
adc
inc
mov
lods
push
std
adc
dec
xor
ss
ret
inc
or
lret
fxtract
in
out
pusha
or
rclb
mov
hlt
nop
xchg
lock
mov
adc
cmpl
jbe
cmp
add
push
sub
lcall
ret
inc
add
je
jo
cmp
daa
jge
scas
jmp
pop
lret
add
int3
xchg
jge
stc
mov
pop
pop
cmp
sbb
shr
pop
jne
data16
jl
cmp
loop
adc
test
dec
and
lcall
inc
addb
mov
sahf
cli
cli
cld
addr16
cmp
and
dec
dec
sub
and
sahf
mov
mov
mov
jae
push
cmpb
sub
jnp
dec
lret
aad
xchg
mov
mov
cmp
outsb
push
dec
sbb
add
dec
sti
mov
mov
hlt
xchg
ror
pusha
test
xchg
sbb
xchg
enter
jecxz
cmc
mov
aam
test
fstl
roll
rcrl
inc
xchg
jge
aad
jbe
mov
sub
cmc
ret
push
cmpsb
fwait
pop
pop
sbb
dec
lods
shll
jns
mov
inc
in
mov
jge
mov
and
sbb
mov
int
mov
adc
jmp
and
lds
jle
call
push
cmp
cmpl
add
pusha
push
pop
cld
arpl
xor
inc
cmp
mov
hlt
mov
fwait
adc
sbb
dec
test
lahf
ss
sar
mov
cmc
int
and
aaa
clc
xor
fnstsw
push
test
dec
sub
sub
loopne
mov
sub
mov
mov
mov
push
ljmp
xchg
sbb
dec
sbb
push
cmpsl
mov
mov
sub
shrb
lea
cmp
sub
push
ficoml
pop
popf
sar
adc
cld
mov
mov
sbb
push
js
inc
lea
xchg
in
mov
and
aad
fsubr
add
sti
sub
mov
mov
pop
and
rol
fs
and
aad
dec
leave
inc
xchg
mov
cmpsb
cmp
jne
incl
xchg
sub
popf
pop
pusha
push
cmp
inc
stc
stos
out
aam
add
es
ret
dec
adc
not
fwait
cmp
test
xchg
imul
xor
inc
jg
adc
movsb
out
add
or
cltd
movsb
mov
std
dec
sub
xchg
fucomi
mov
stc
fdivrp
loopne
dec
or
mov
testb
sahf
not
sbb
cmpsl
xchg
shl
aas
lods
mov
lret
das
mov
ret
dec
cli
popa
xchg
jne
sbb
push
pop
inc
je
insb
rorb
or
dec
push
xor
lock
shl
push
ss
aad
les
and
jl
pop
cli
call
push
cmp
shrb
push
push
mov
loop
jnp
and
jb
jp
out
sub
dec
xchg
mov
xor
mov
xchg
inc
repz
sbb
mov
sub
rol
rclb
and
outsl
imul
jmp
lds
loopne
ret
int3
dec
cwtl
add
add
mov
push
or
shl
jle
cwtl
ss
lret
mov
mov
xchg
shlb
inc
add
cmp
cmp
sbb
xor
dec
sbb
out
dec
out
pushf
int
pop
add
mov
sub
and
sti
js
add
or
imul
into
jecxz
movsb
daa
mov
pop
push
lods
loop
icebp
add
sbb
aaa
sub
adc
scas
aas
or
insl
psrlw
mov
fisttpll
xchg
test
add
mov
jle
jp
inc
cmp
add
aad
cmp
ja
pop
filds
mov
jo
and
stc
mov
insb
sub
repnz
cmp
add
popa
cmp
in
push
nop
cmc
jns
xchg
and
dec
cmp
push
sarb
mov
cmp
insb
add
mov
test
sbb
pushf
leave
xor
in
movsl
adc
cmp
outsb
or
iret
inc
fwait
and
mov
push
aad
pop
ds
mov
aam
push
enter
inc
mov
pop
push
add
add
addr16
jle
xchg
jmp
xchg
sbb
sub
lods
push
dec
mov
add
pop
fisttpl
cmp
std
and
sub
mov
rcr
js
jl
fidivl
stc
aas
dec
cmp
cmp
clc
jmp
icebp
xorb
mov
add
dec
in
mov
lods
insl
dec
xor
cmp
sbb
lcall
sbb
sbb
dec
insb
stos
xchg
mov
dec
cmpsl
test
sub
inc
cmp
push
rcrl
adcb
jns
mov
xchg
test
dec
mov
aas
add
fcompl
sahf
mov
sub
repnz
stos
mov
push
loop
lret
cld
aam
mov
out
pop
mov
mov
stc
cltd
cmp
xchg
cmp
ja
je
dec
xor
jle
push
mov
sbb
pop
dec
or
jg
xchg
stos
cmpsl
je
nop
popa
mov
add
pcmpgtb
jo
mov
mov
insb
xchg
push
incl
cld
sub
pop
sub
cmp
sahf
icebp
into
mov
leave
pop
cmp
arpl
xchg
or
mov
leave
pop
xchg
cmp
ljmp
mov
out
mov
push
adc
inc
lea
lret
outsl
xchg
imul
jmp
mov
push
pop
jae
aad
jmp
fcoml
outsl
and
cli
and
push
hlt
and
movsb
cld
hlt
dec
sti
jbe
sub
jecxz
out
push
mov
popf
out
and
mov
adc
or
stc
stc
fs
out
mov
cld
or
leave
popa
inc
add
mov
in
mov
testb
push
jns
ss
shll
mov
out
stos
scas
call
xchg
out
cmp
inc
or
or
in
cwtl
and
push
cwtl
cmp
pop
inc
test
add
fisttpll
inc
pop
icebp
imul
mov
lods
xchg
jmp
call
dec
push
and
imul
and
data16
fisubs
arpl
idivl
dec
sub
lret
dec
mull
pop
and
inc
lahf
mov
jmp
mov
leave
adc
imul
arpl
into
rolb
pop
mov
pop
nop
imul
mov
sub
cmp
xchg
push
sub
fiadds
ficomps
movsb
adc
pusha
sbb
or
lret
lahf
add
xchg
test
dec
clc
pop
mov
test
adc
or
jnp
sub
mov
je
xchg
cs
xchg
pop
rorl
mov
cwtl
jmp
les
lahf
xchg
jl
ljmp
mov
loopne
fidivrs
call
popf
movsb
hlt
inc
and
lods
xor
and
scas
add
mov
das
xchg
mov
and
in
out
fwait
pop
xchg
lret
xchg
ficomps
lock
add
shlb
jno
test
hlt
hlt
sub
dec
out
mov
in
adc
divb
push
and
jbe
inc
inc
ret
mov
jmp
mov
sbb
mov
sti
xor
xchg
or
cmp
out
mov
cmp
jb
pop
out
xor
sbb
cwtl
outsl
jb
outsb
test
fs
cmpl
addr16
xor
adc
jmp
push
mov
cmp
roll
fadds
dec
pop
push
test
in
sbb
xchg
cmp
mov
mov
jp
jecxz
adc
xchg
aas
jge
lret
sbb
pop
insl
lds
cmpsb
es
sahf
imul
sub
or
jge
int3
mov
or
hlt
xchg
and
addr16
cmp
adc
sbb
xor
mov
cli
ljmp
mov
mov
xchg
dec
xchg
sub
xor
int3
cmp
and
dec
fisubrs
fidivl
lea
mov
or
or
sbb
push
xor
test
out
push
fs
arpl
mov
xlat
cltd
aaa
lds
mov
imul
dec
test
imul
lret
sub
xchg
mov
dec
fmul
aaa
mov
rolb
jg
mov
pop
dec
or
leave
pop
test
sti
xchg
pusha
mov
outsb
and
push
in
or
les
jbe
jle
or
push
ffree
mov
in
fadds
push
push
sbb
adc
add
sbbb
pushf
or
andl
add
mov
aam
ja
repnz
es
and
int
mov
push
dec
cmp
xchg
ds
mov
stos
adc
sbb
inc
shl
xchg
or
cmp
xor
pop
sub
sbb
mov
push
enter
lcall
data16
setp
cmp
xchg
inc
shl
int3
mov
mov
jne
sbb
xor
imul
xchg
in
rcll
lock
pop
sub
scas
dec
inc
aas
jo
push
loopne
and
sbb
dec
pop
neg
dec
shrb
fidivrs
fs
lahf
push
xchg
inc
icebp
lret
dec
adc
push
and
out
mov
mov
xor
lods
dec
stos
jo
fistpll
sub
xor
aas
mov
adc
cmp
mov
test
sub
jecxz
jns
dec
or
push
pop
ds
fdivs
aas
mov
lock
jge
xlat
xchg
mov
dec
dec
adc
push
or
push
xchg
adc
xchg
mov
rclb
sbb
or
imul
iret
shlb
sub
mov
dec
outsl
xchg
or
sbb
sub
jmp
cmpsl
mov
add
divl
pop
mov
mov
cmpsb
mov
loopne
jo
insb
and
inc
pop
sahf
mov
sub
ja
and
sbb
jb
xchg
lcall
loope
shrb
mov
fxch
inc
fcmove
cmp
rolb
adc
cmpsl
jl
in
xchg
and
lcall
xor
sbb
and
fwait
push
mov
xlat
and
dec
mov
xchg
lret
inc
aad
mov
and
jo
ret
mov
outsl
adc
inc
push
jecxz
xor
repnz
cmc
inc
mov
pop
inc
mov
mov
pop
test
cmpsl
test
pop
add
dec
test
cmpsl
jge
loope
outsb
pushf
faddl
pusha
mov
test
adc
insb
aam
jmp
pop
jecxz
enter
outsl
aaa
enter
imul
cli
stos
es
fwait
orl
sub
fmuls
sbb
push
push
outsl
mov
sub
dec
in
and
push
std
sbb
adc
add
jle
sub
mov
xchg
push
daa
xchg
adc
inc
std
jne
test
mov
mov
mov
jns
mov
stc
and
dec
int3
inc
mov
jns
faddl
mov
push
xor
jge
and
lds
xchg
cmp
imul
sub
sbb
into
pop
pop
push
loop
fnstsw
punpcklwd
fcmovb
lcall
jecxz
fsubrl
out
aam
jne
int
sbb
cmp
jmp
scas
andl
in
nop
mov
imul
jmp
es
xor
inc
adc
out
jnp
int3
sbb
jb
lret
inc
clc
insl
dec
test
adc
add
fistl
mov
inc
cld
fcomip
push
adc
mov
lds
fsubrs
cmpb
mov
repnz
aad
adc
mov
aas
imul
inc
or
ljmp
lea
and
push
imul
xor
pushf
out
dec
arpl
push
test
test
das
pushf
subl
add
out
jmp
dec
ficomps
push
stos
mov
cs
mov
outsl
das
out
hlt
ja
sub
or
jl
outsb
xor
add
call
das
lods
pop
push
xchg
push
mulb
or
insl
push
fsubr
adcl
mov
jnp
addb
or
dec
stos
inc
pop
jno
je
jmp
test
out
aam
mov
jg
fabs
stos
lods
insb
pop
lret
push
push
shrb
pop
int3
cmc
adc
and
inc
adc
xchg
mov
cltd
cld
mov
lods
je
xchg
jmp
nop
mov
jb
adc
mov
push
rorl
js
or
sti
cmp
dec
icebp
mov
aaa
dec
fisttpl
mov
xor
lods
jno
add
cld
push
hlt
pusha
cmpsl
insb
lock
sbb
mov
fstl
adc
sub
sbb
hlt
fadds
xchg
cmp
push
jmp
in
xchg
jmp
insl
add
jbe
ss
notl
sahf
pop
aad
div
testb
jno
ja
push
cld
dec
sbb
inc
dec
and
call
pop
std
sahf
das
pop
mov
xor
fcompl
loopne
aas
lock
into
jno
mov
pop
stos
cld
mov
daa
push
and
pop
mov
lds
mov
mov
shr
jp
xchg
imul
nop
cmc
sarl
fistl
or
push
sbb
movsl
jmp
mov
ror
push
mov
sub
adc
popa
repnz
pop
cmp
in
jne
and
push
lret
xchg
jbe,pn
or
or
sbb
fstpt
add
xchg
cwtl
neg
int
xor
ds
arpl
mov
cld
sbb
xchg
sbbl
sbb
nop
das
movsl
pop
push
jne
in
cmp
xchg
push
mov
mov
movsb
int3
add
add
aam
fldl2e
into
xchg
mov
stos
sub
adc
push
dec
stc
cmc
cmp
cs
mov
xor
inc
push
nop
leave
pop
sub
jnp
mov
out
cmp
mov
gs
cli
iret
push
arpl
mov
mov
sub
mov
mov
mov
mov
pop
scas
inc
ret
out
orb
out
call
jmp
add
cmpsl
dec
fnstcw
in
pop
stos
cmc
fcoml
push
push
or
fnsave
aaa
cmp
icebp
and
repnz
ljmp
aas
jmp
adc
cmp
xchg
pop
lods
mov
push
notb
mov
cwtl
push
fiadds
sbb
out
scas
jo
cld
sahf
sti
rolb
stc
sub
jmp
dec
add
push
pop
aaa
lcall
mov
and
mov
pop
xchg
sbb
cmp
jbe
sbb
scas
arpl
adc
outsl
test
sbb
pop
sub
adc
lret
loop
pop
stc
xor
shrl
fnsave
or
adc
imul
enter
add
jns
lret
mov
mov
xlat
lcall
mov
mov
decl
mov
insl
mov
out
mov
outsb
cmp
add
and
hlt
inc
arpl
dec
or
fwait
sbb
shl
push
lock
sub
outsb
in
jne
sbb
push
leave
cmc
iret
rcll
mov
adc
cmp
imul
loop
cmp
pop
aas
lcall
scas
jmp
mov
adcb
sub
xor
xor
and
jmp
or
pop
std
mov
jb
xor
jo
addb
push
scas
push
mov
aam
mov
mov
xor
stos
ficoms
arpl
es
cmp
mov
xor
jecxz
ret
loop
in
push
pop
mov
or
xchg
ja
and
push
iret
scas
pop
xchg
cld
outsb
ret
popf
outsl
ror
scas
shlb
xlat
sub
iret
scas
cpuid
insl
addr16
cmpsb
jne
mov
inc
xchg
addb
arpl
test
mov
mov
loope
jge
xor
mov
stos
out
ss
insl
call
outsl
dec
andb
hlt
xchg
and
push
out
jae
ret
subb
inc
mov
dec
loopne
scas
sbb
jo
push
dec
lret
je
inc
insl
mov
inc
pop
xlat
aam
xchg
jmp
push
cmp
jae
push
sbb
mov
subb
jl
mov
scas
movsb
mov
mov
jo
jne
inc
aad
ss
push
out
repnz
aaa
lea
and
incb
dec
xchg
add
cld
imul
in
push
sbb
xlat
adc
cmp
loopne
inc
int
repz
jge
cmc
push
xchg
test
jb
cs
addb
frstor
cmpsl
fcmovnbe
insl
clc
out
std
adc
test
pop
xchg
push
mull
aam
lcall
in
js
roll
in
sti
movsb
mov
call
aas
movsb
and
insl
fsubrp
stc
fsubl
push
outsl
lcall
mov
and
testl
pop
popa
fsubr
pop
adc
jo
cs
cs
ss
call
jne
shrb
xchg
shll
out
jp
out
aam
pop
push
outsb
sbb
lock
mov
sub
add
pop
xchg
pop
adc
jne
inc
adc
rclb
jno
adc
pusha
cmp
jae
mov
cmpsl
push
into
cmp
lret
daa
sub
dec
jne
ret
mov
mov
pop
mov
sub
lret
mov
ss
mov
dec
adc
insb
add
dec
filds
or
pop
xor
cli
lret
sbb
mov
sbb
movsl
dec
pop
jb
outsl
dec
mov
int3
lock
jb
push
mov
lret
sbb
cmp
fs
sbb
mov
mov
mov
inc
imul
and
in
in
mov
dec
sbb
mov
mov
pop
ret
cld
repz
bound
or
push
xchg
loopne
loopne
lds
fnsave
lcall
pop
jae,pn
inc
and
mov
mov
jne
mov
pop
jl
cwtl
ret
faddp
fdivp
mov
and
sbb
cld
insl
ret
outsl
ljmp
xchg
sub
mov
mov
pop
jl
and
push
js
mov
mov
or
imul
lret
movsl
sbb
jo
and
adc
push
cmp
xchg
scas
pop
sarb
pusha
xchg
arpl
sbb
sbb
adc
inc
inc
out
sub
jg
imulb
ljmp
push
and
inc
xor
push
push
add
inc
cmc
lock
out
mov
add
leave
cmp
mov
mov
mov
scas
popf
leave
lret
adc
mov
xchg
sahf
jno
std
lret
xchg
sbb
mov
pop
adc
lret
out
test
inc
inc
mov
fnsetpm(287
andl
mov
pop
cmp
push
xor
rcrl
pop
test
dec
sbb
scas
arpl
jg
outsl
xchg
pusha
dec
std
ficompl
popf
in
push
xchg
in
ljmp
fidivl
xlat
inc
outsl
lret
mov
xor
repnz
jmp
loop
mov
xchg
push
ss
xor
xchg
cmc
cmp
stos
jl
push
enter
ret
pop
inc
mov
repnz
jns
sbb
aas
inc
scas
movsb
rcrl
int
cwtl
cwtl
pop
cmp
jp
aaa
icebp
sbb
out
xor
mov
jmp
xor
sub
fidivrs
sbb
push
add
xor
jo
xchg
or
pop
test
add
xor
popf
scas
test
adc
push
pop
ficoml
stos
xchg
mov
xor
out
sub
out
push
testb
push
sub
cwtl
inc
fisubrs
jae
cmp
lock
xor
pop
add
loope
pusha
dec
ja
xchg
mov
sbb
mov
es
pop
jnp
test
jae
or
dec
arpl
arpl
pop
rorb
mov
mov
cmpsb
out
js
dec
ret
mov
mov
out
lock
imul
mov
into
mov
adc
in
lahf
mov
iret
jge
pop
pop
flds
testb
in
inc
xchg
jg
mov
lds
daa
adc
repnz
cmp
sti
scas
mov
mov
xor
cld
push
lcall
xor
add
push
insb
ret
dec
inc
inc
cltd
cs
mov
cld
stos
in
cmp
add
cmc
arpl
lods
lret
arpl
popf
sti
imul
dec
adc
roll
cwtl
push
rcr
mov
or
jae
int
or
mov
ljmp
cmp
mov
jmp
jmp
shl
in
adc
or
ss
test
lods
test
jecxz
push
mov
jge
pop
lahf
push
in
mov
sub
cmp
inc
in
ret
adc
lds
dec
sub
fistps
sarl
mov
sub
fcompl
fcomip
rcr
push
pop
lods
pop
dec
or
jecxz
icebp
movsb
hlt
int
test
cmp
mov
or
test
pop
les
xchg
xchg
sub
xchg
pop
loop
call
or
je
mov
jcxz
mov
adc
std
inc
mov
aad
sbb
mov
adc
inc
push
mov
mov
inc
pop
mov
cli
enter
int3
xlat
push
xchg
pop
imul
dec
or
add
dec
mov
mov
jecxz
inc
push
test
inc
pop
inc
and
pop
mov
dec
int
insl
sbbl
fistl
push
dec
xchg
shlb
xchg
push
sub
loope
out
and
mov
push
mov
sti
cltd
mov
lret
sbb
out
add
xchg
mov
into
adc
jae
loopne
scas
add
jne
ja
lods
push
jb
jecxz
bound
call
jb
pushf
mov
stos
in
xchg
cli
adc
sub
push
rcrl
and
push
out
jno
in
outsl
gs
cwtl
jmp
or
jp
fwait
mov
icebp
nop
pushf
outsl
sbb
adc
pop
sub
js
mov
loope
push
push
pop
cld
push
sahf
inc
jns
mov
or
xchg
lcall
cltd
int
pop
mov
fistps
adc
ret
add
stos
xchg
sbb
mov
bound
clc
cmpsl
sub
push
popf
stc
call
aaa
data16
into
fcmovb
mov
inc
test
rol
pop
inc
add
push
mov
pusha
stos
mov
in
jl
es
cmp
fchs
jecxz
mov
mov
mov
sarl
xor
mulb
lahf
push
mov
stos
or
ljmp
mov
cmp
or
xchg
mov
mov
cld
xchg
fwait
ja
adc
xchg
jmp
adcb
inc
mov
pop
jns
or
cmp
ss
pushf
pop
jp
fxam
out
lahf
pop
sub
mov
pop
pusha
add
xor
fsubr
mov
shlb
jbe
movsb
nop
int3
sarb
inc
cmp
js
and
lret
js
sub
xor
iret
inc
mov
dec
lea
inc
std
idivb
cmp
insb
inc
mov
sbb
les
push
addr16
sub
sti
and
cmc
xor
testl
push
sub
dec
xor
dec
mov
stos
xchg
or
clc
int
out
and
test
jmp
lea
out
mov
add
adc
shlb
pop
sti
mov
push
popf
lods
inc
div
loope
pop
sahf
out
push
push
fsubl
iret
adcl
push
loopne
mov
jnp
sbb
cli
aaa
movsb
jo
enter
rclb
movsl
dec
call
shlb
adc
mov
inc
jnp
mov
mov
pop
into
push
incl
jbe
add
cwtl
bound
test
jno
inc
jno
in
jmp
outsb
or
test
out
shrb
in
dec
into
sub
inc
fmull
fsub
xor
mov
xchg
loop
call
or
push
cmpsb
sbb
sbb
mov
lods
loopne
push
idivl
aas
push
push
pop
mov
mov
fwait
std
loope
leave
imul
cmp
into
js
dec
popa
stos
stos
stos
push
sub
push
xor
sbb
and
jge
pop
out
jb
repz
sbb
outsb
add
xchg
and
jb
mov
shr
shrl
inc
jmp
ret
or
into
in
js
cmp
jb
dec
push
or
push
rol
inc
mov
ficompl
in
scas
jg
xchg
stos
lods
imul
cmp
test
out
sarb
in
mov
mov
dec
iret
clc
in
sub
aam
hlt
jns
lcall
sbb
mov
insb
clc
out
lea
daa
jae
lock
cmc
cmc
nop
sti
call
insl
cmpsl
xchg
daa
ljmp
push
and
xchg
lods
in
popa
in
imul
adcl
jg
mov
dec
sbb
fstpl
and
xor
pop
jno
mov
imul
enter
sub
mov
insb
jmp
cmpl
jb
jo
std
cltd
add
jge
mov
lea
pushf
fisubrs
outsl
xchg
out
adc
lock
pextrw
pop
add
mov
arpl
subl
rclb
sub
enter
add
das
mov
mov
adc
cmp
insb
mov
out
pop
movsl
push
int
rcrl
xchg
test
xchg
es
sub
addr16
out
ret
fld
mov
adc
aaa
jne
ljmp
mov
fadds
sub
and
mov
call
stos
mov
incl
aaa
mov
xor
mov
pop
daa
push
enter
out
add
ret
and
das
popa
dec
inc
addb
mov
push
std
dec
movsl
xchg
std
cmpsb
loope
in
mov
test
rclb
jecxz
adc
mov
xchg
inc
dec
pop
xor
push
mov
sub
mov
repz
icebp
xlat
cmpsb
call
mov
xor
inc
xor
pop
ret
inc
add
hlt
pop
adc
or
ss
jbe
jo
push
lret
push
pop
imul
data16
inc
push
call
sub
cmp
lea
push
sub
dec
ljmp
xchg
or
push
icebp
push
push
rorb
fwait
pop
and
adc
push
stos
scas
out
jbe
repz
inc
popa
daa
dec
gs
dec
jbe
fsubs
sub
add
icebp
sub
mov
clc
sub
push
arpl
mov
and
push
xchg
lahf
hlt
shrb
daa
sub
ljmp
dec
inc
inc
inc
scas
test
push
xchg
push
movsl
data16
ds
dec
dec
add
sub
cld
dec
test
leave
adcb
push
add
push
rcl
jmp
sub
jle
sbb
inc
cmpl
add
sub
and
shll
cmp
cltd
sub
dec
mov
xor
xchg
bound
hlt
xchg
xor
mov
add
fwait
jecxz
popf
xorb
mov
dec
add
jmp
mov
repnz
out
outsl
out
fs
outsl
pop
adc
push
or
inc
rclb
pusha
xchg
sbb
stos
jne
mov
mov
std
addl
loopne
dec
mov
inc
mov
dec
cwtl
je
aaa
cld
aas
loop
orl
mov
dec
or
pop
jmp
pop
xlat
fcomps
int
movsb
idivl
std
inc
push
adc
cwtl
push
lds
push
icebp
jb
push
lds
cmp
and
cmpl
inc
and
negb
fidivrl
stos
out
mov
and
mov
cmp
mov
dec
inc
dec
divb
movsb
aam
loopne
and
sub
sub
xchg
mov
out
leave
sub
repnz
sbb
add
es
xchg
mov
cmp
push
ds
addb
and
jbe
js
push
fldt
dec
fildl
outsl
lret
enter
sbb
test
call
fwait
outsl
clc
or
mov
pop
sbb
cmp
cmp
lea
int
dec
iret
cld
dec
sbb
jg
and
dec
push
loope
or
sbb
ja
xorl
xor
rclb
ret
mov
test
push
add
idivl
xor
aaa
inc
xchg
adc
mov
dec
mov
rcl
fdivr
mov
adc
mov
lahf
mov
sub
loop
cmp
mov
shrl
or
cmpsl
and
aam
xchg
scas
int3
and
or
cmp
imul
inc
sbb
mov
pop
sbb
les
mov
jmp
test
loopne
aad
jbe
ret
dec
faddl
push
lret
jbe
push
inc
cmp
in
xchg
jmp
xor
dec
bound
aas
bswap
sbb
xchg
add
ljmp
add
std
pop
jl
shl
and
inc
jge
xlat
movsl
or
imul
adc
dec
scas
out
and
and
mov
xchg
leave
loope
in
jle
sub
rorb
mov
jbe
dec
sbb
inc
inc
scas
jne
lret
shll
cmp
xchg
je
cld
lahf
and
jns
shlb
mov
sbb
insb
mov
push
lods
scas
or
cwtl
mov
or
jbe
mov
jb
jae
sub
jecxz
test
dec
dec
pop
iret
xchg
mov
inc
push
lahf
inc
sti
dec
dec
mov
or
clc
mov
fwait
adc
sub
xchg
jne
cmpsl
lds
test
cmpsl
dec
add
cmp
into
pusha
inc
into
xorb
pop
mov
repz
ljmp
lods
sbb
repnz
xchg
out
bound
sahf
iret
push
mov
int3
jmp
jl
push
stc
inc
or
outsl
sbb
cmp
mov
xchg
cs
imul
cli
dec
dec
loope
je
jge
clc
jmp
sbb
call
cmc
sub
inc
push
mov
stc
pop
outsl
sbb
cmp
mov
dec
add
lods
push
mov
inc
test
jmp
and
mov
leave
xor
jno
lret
cld
jbe
xor
repnz
xor
push
in
imul
pusha
mov
cmc
sub
lds
lcall
xchg
or
in
call
or
mov
rol
sbb
repz
aas
jecxz
mov
add
adc
inc
test
cmp
pop
mov
xor
dec
adc
test
push
shll
mov
insl
xor
test
lret
add
pop
and
fs
add
fdivs
aas
popa
enter
add
popf
mov
in
sub
add
mov
out
sbb
rcrb
xchg
cli
loop
ljmp
xchg
inc
or
add
pop
ret
mov
out
cmp
dec
dec
jns
push
mov
xor
jae
loopne
sarl
jno
mov
sub
xor
test
mov
or
push
incb
in
pop
push
loop
add
mov
jge
sbb
push
lcall
adc
pop
test
cmp
shr
xchg
mov
jae
pusha
bound
mov
ja
fldl
out
xchg
dec
imul
push
daa
fwait
dec
pushf
int3
push
mov
sbb
sub
pushf
jp
jle
aaa
mov
lods
mov
push
sub
dec
out
sbb
mov
stc
inc
add
ljmp
sbb
fdivrl
sti
scas
pop
and
aaa
add
lods
adc
cmp
icebp
or
mov
pop
int
inc
push
bound
roll
pushl
addl
rolb
leave
sbbl
test
lock
and
adc
inc
add
sahf
and
and
aam
loope
mov
nop
js
in
xlat
enter
cmpsb
leave
cli
pop
fldt
lret
aam
adc
imulb
or
lret
shll
mov
inc
iret
lock
bnd
cs
enter
rcrl
lret
testl
es
xor
jp
pop
fstl
adc
mov
adc
lcall
push
stos
incb
add
out
cmp
pop
cltd
popf
xlat
mov
cmp
pop
jbe
dec
dec
dec
sub
mov
push
dec
adc
scas
push
xor
rcl
pop
push
test
mov
pop
lods
pop
cwtl
shrl
jbe
adc
pop
adc
pushf
mov
jo
push
in
outsl
mov
je
push
xchg
leave
push
cmp
adc
out
mov
nop
or
jo
xchg
or
push
cwtl
ret
gs
adc
jp
jns
add
out
stc
pop
fcompl
fadd
lock
icebp
jae
mov
clc
sub
push
lcall
sub
cs
outsl
testb
push
jg
push
xchg
and
add
andb
ficoml
in
lret
stos
fdivrs
xchg
scas
jb
lahf
mov
mov
shl
jb
out
dec
mov
out
test
addb
aaa
les
dec
mov
movsb
sub
mov
jb
adc
add
rorl
cli
pushf
sahf
adc
and
push
jg
push
and
sbb
movsb
sub
je
int3
xor
adc
and
mov
js
xchg
popa
adc
xchg
mov
jne
pushf
stc
or
aad
je
into
pop
lahf
xor
push
ret
js
xchg
mov
lea
pop
xchg
lret
sub
sub
sahf
test
push
jmp
xchg
dec
addr16
xchg
or
lods
xor
pop
mov
pop
fisubrs
xorb
jnp
sub
bound
ja
js
adc
rol
hlt
jge
jns
dec
pusha
cli
sbb
inc
inc
nopl
push
and
mov
xchg
mov
cmpsb
popf
inc
in
in
mov
movsl
or
repz
addr16
xorl
dec
mov
sub
es
stos
adc
dec
cmp
cltd
sub
movsl
lods
cli
scas
push
sub
mov
fs
jl
xor
mov
fiaddl
lret
test
popf
push
mov
mov
fcoml
aam
or
adcb
lea
je
aad
jae
inc
add
fwait
dec
xor
cmp
and
pop
pop
fists
ds
fildl
and
sub
mov
push
clc
jbe
xchg
popa
dec
lcall
test
xor
or
inc
or
scas
hlt
or
mov
mov
cltd
es
add
dec
pusha
lcall
xchg
cmp
ds
pop
or
push
dec
push
cmp
jbe
jle
and
shlb
sub
sbb
fxch
nop
mov
in
insb
sub
inc
das
test
js
fsts
dec
push
stos
jno
clc
mov
push
pushf
sbb
sub
cld
push
scas
xchg
or
mov
or
mov
push
sub
add
sbb
insb
fildl
mov
mov
pop
jle
xor
int3
adc
loopne
popl
out
mov
adc
add
xor
je
ret
pop
push
imul
imul
mov
not
dec
lahf
dec
daa
and
mov
sub
jle
dec
dec
cmp
add
divps
fnstenv
cmp
add
int
adc
in
push
adc
dec
cmpsl
push
lods
aam
in
fdivl
xor
lds
out
inc
and
rcl
loopne
push
lods
jnp
scas
xor
xchg
xchg
jo
or
enter
das
movsl
jne,pt
insb
andb
lcall
cltd
test
test
lds
stc
push
push
jne
pushf
outsl
pop
jecxz
lea
lods
pop
ljmp
roll
push
test
orl
cwtl
sbb
and
subl
push
dec
movsb
dec
fwait
add
dec
aas
mov
icebp
fsubrs
into
inc
sub
or
jo
lods
nop
pushf
xchg
mov
sbb
rolb
sahf
mov
iret
hlt
sbb
push
jle
daa
cmp
dec
dec
rcll
adc
addl
cltd
sub
daa
mov
inc
jb
mov
rolb
fdiv
sub
sbb
pop
adc
adc
lea
pop
fldenv
stos
mov
mov
mov
mov
mov
subl
mov
jo
jecxz
mov
sub
std
cmp
xchg
and
int
sub
scas
push
fstpl
pop
lods
clc
fcmovu
stc
mov
das
adc
add
pop
sbb
pop
out
jge
and
add
ljmp
addl
dec
jne
xor
cltd
inc
loope
jo
dec
fidivrl
adc
or
mov
sbb
adc
rcrl
push
subb
sub
push
sub
jmp
scas
jge
into
xorb
scas
pop
push
mov
bnd
jp
mov
xor
jge
je
pushf
in
std
add
lock
mov
insl
shll
fadds
sub
cmp
add
pusha
xor
es
negb
push
scas
fs
outsl
xorb
iret
xorl
out
pop
sub
adc
loop
les
push
lea
sbb
push
dec
jne
xchg
sbb
and
int3
inc
icebp
lret
xor
bound
shl
cli
shlb
cmp
aad
sti
insl
xor
dec
jmp
push
cltd
or
and
sbb
add
mull
dec
lahf
pop
loop
jno
push
xchg
jo
jae
vpmaxub
lcall
mov
xchg
jp
stos
adc
outsl
xor
dec
shlb
pop
mov
cmpsl
nop
cld
mov
ss
mov
fsubrs
subl
mov
lds
scas
cwtl
in
addr16
pop
pop
rcrl
in
in
inc
adc
jns
push
loope
in
lret
inc
dec
jne
pop
outsb
sub
xchg
sub
das
div
subb
sub
mov
int3
les
cmp
fpatan
add
jmp
xor
inc
fisubrl
jle
dec
rcll
movsl
test
das
cmp
icebp
jno
daa
push
push
sbb
loop
cmc
call
and
je
cmpsl
pop
inc
mov
jg
jnp
imul
sbb
mov
jl
test
dec
add
mov
add
scas
adc
loop
adc
jl
adc
inc
xor
insb
fwait
subl
flds
sbb
lcall
xor
sub
dec
push
bound
pop
xchg
xor
scas
push
fwait
mov
in
stc
pop
loop
clc
test
inc
inc
pop
xchg
sbb
adc
testb
push
fcomps
dec
mov
pslld
aam
push
lcall
mov
jb
push
faddl
sub
jae
mov
jg
or
sub
xor
adc
cmc
dec
icebp
fs
test
std
xlat
inc
dec
and
fwait
stos
imul
cmp
leave
pop
into
cmp
pop
inc
into
inc
leave
inc
aam
adc
stos
push
into
arpl
jns
js
mov
cmp
fwait
mov
aam
cmp
test
fnstcw
mov
or
cmp
sub
cmp
std
pop
xchg
sub
es
leave
push
cmc
push
sbb
or
push
jne
gs
or
enter
mov
test
xchg
ficoml
int
xchg
add
in
adc
jmp
popa
xchg
and
adc
sbb
mov
lahf
das
push
lods
in
cmp
sbb
movsl
pop
inc
cmp
test
mov
cmp
push
mov
loopne
int
cmp
ror
in
push
or
clc
les
paddsb
add
add
add
add
sub
add
push
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
test
add
add
add
add
add
call
add
addb
add
add
add
add
add
add
add
add
add
cwtl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fadds
add
add
add
adc
add
add
inc
add
add
inc
add
dec
add
inc
add
dec
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
test
add
mov
mov
add
mov
mov
add
add
test
add
mov
mov
add
incl
mov
add
test
test
add
incl
incl
incl
incl
test
add
movb
mov
mov
add
test
mov
add
mov
test
add
incl
incl
incl
incl
incl
test
add
add
test
add
incl
incl
add
incl
incl
add
incl
incl
add
incl
test
add
incl
incl
incl
incl
test
add
mov
test
add
test
test
add
test
test
add
add
test
add
incl
incl
incl
incl
test
add
mov
mov
add
add
test
add
incl
incl
incl
incl
test
add
mov
mov
add
add
test
add
incl
incl
incl
incl
test
add
mov
mov
add
add
test
add
incl
add
incl
add
incl
add
incl
add
incl
add
test
add
mov
add
mov
mov
add
add
test
add
incl
incl
add
incl
incl
add
incl
incl
add
incl
test
add
test
test
add
add
incl
add
incl
add
incl
add
incl
add
test
add
test
add
mov
add
mov
test
add
test
add
add
test
add
test
test
add
add
add
test
test
add
add
test
add
incl
add
incl
add
incl
add
incl
add
incl
add
test
add
test
add
test
add
mov
add
add
test
add
mov
add
add
test
add
incl
mov
add
test
add
add
test
add
test
test
add
add
incl
add
incl
add
incl
add
incl
add
test
add
test
add
test
add
test
add
test
add
test
mov
add
test
test
add
add
incl
add
incl
add
incl
add
incl
add
add
add
test
add
test
add
test
add
test
add
add
add
test
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
test
add
test
test
add
incl
incl
incl
incl
test
add
test
add
test
add
add
add
mov
add
mov
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
test
add
test
test
add
incl
incl
incl
incl
incl
add
add
mov
add
add
add
add
add
add
test
add
test
test
add
test
test
add
test
test
add
test
test
add
test
mov
add
test
test
add
movb
mov
incl
add
add
test
add
test
add
mov
test
add
add
add
movb
test
mov
add
mov
test
add
mov
incl
incl
incl
test
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
test
add
test
mov
add
add
test
add
mov
test
add
mov
mov
add
add
add
test
test
add
add
mov
add
mov
incl
incl
incl
incl
incl
incl
incl
incl
mov
add
test
add
add
test
add
add
add
add
test
add
mov
test
add
add
add
incl
incl
incl
incl
mov
add
test
test
add
test
test
add
incl
mov
add
test
test
add
mov
test
add
incl
incl
incl
mov
add
add
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
test
add
mov
test
add
incl
test
add
test
test
add
add
add
add
add
incl
incl
incl
incl
incl
test
add
mov
test
add
add
test
add
add
incl
add
test
add
incl
incl
incl
incl
test
add
mov
test
add
incl
test
add
add
add
incl
incl
test
add
incl
incl
incl
incl
test
add
mov
test
add
incl
test
add
add
add
incl
incl
test
add
test
add
test
add
test
add
test
add
test
add
test
add
mov
test
add
incl
test
add
add
add
incl
incl
incl
incl
incl
add
add
incl
add
incl
add
test
add
mov
test
add
incl
test
add
add
add
add
add
add
add
incl
mov
add
test
test
add
add
test
add
mov
test
add
incl
test
add
test
test
add
test
test
add
test
test
add
mov
test
add
incl
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
test
test
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
test
add
movb
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
incl
test
add
test
test
add
test
test
add
test
test
add
test
test
add
jg
aas
sarb
pop
rcrb
xadd
loopne
rolb
add
add
inc
add
inc
add
xadd
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
pavgw
add
repz
ud0
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
jmp
add
push
push
push
mov
mov
call
