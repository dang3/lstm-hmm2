mov
out
inc
lea
cld
jmp
decb
jle
mov
out
xchg
std
cmc
cmp
cld
sti
sub
repz
xchg
int3
xchg
xchg
into
mov
mov
loopne
cltd
sbb
scas
xchg
xchg
lret
xchg
fiadds
mov
jle
popl
mov
fwait
repz
mov
pop
cmp
add
mov
mov
leave
test
dec
pop
pop
pushf
or
bound
mov
pop
inc
pop
cmp
mov
push
loop
sub
je
mov
jle
push
push
cmp
pushf
fstl
xor
insb
clc
lock
aam
mov
mov
xchg
cmpsl
sbb
mov
ret
aam
cltd
movsb
mov
mov
paddusw
xor
jo
jge
mov
pop
inc
in
dec
xor
or
mov
outsl
add
test
sbbl
lea
mov
nop
sub
jle
mov
andb
mov
adc
leave
in
lahf
push
cmpb
sbb
pop
ret
sahf
mov
cmc
lods
sub
mov
mov
repnz
test
dec
mov
mov
loop
rcr
mov
pop
fwait
cmc
xor
lock
sbb
shlb
cltd
xchg
sar
clc
pusha
xor
pushf
notb
shr
in
dec
adc
fnsave
int
push
mov
xchg
adc
lds
sub
jnp
jb
sbb
push
lods
aad
jp
mov
scas
cli
jbe
mov
jo
mov
jmp
push
loop
cmp
mov
mov
xor
in
repz
data16
xor
test
faddp
in
pop
pushf
leave
gs
test
lea
pop
mov
mov
test
jnp
lret
pop
push
mov
aad
and
mov
test
mov
js
mov
repz
in
add
cmpsl
insl
jmp
add
jne
jnp
jg
sub
cs
and
push
outsb
sbb
jae
push
iret
popf
xchg
xchg
xchg
fidivrs
negb
ja
and
mov
gs
push
rcrl
jne
std
fimuls
mov
imul
cmp
jge
mov
mov
fcmovnu
sub
sbb
idiv
repnz
fcmovne
cmp
fs
aam
adc
fucomip
stos
sbb
push
insl
mov
call
mov
lea
or
push
mov
ljmp
lcall
pusha
ror
and
outsb
ficoms
lret
or
in
mov
mov
shrb
jne
hlt
bound
lods
xor
ljmp
add
xchg
mov
idivb
jmp
adc
imul
jp
sbb
pmullw
scas
jle
cmpsb
dec
in
cmp
icebp
jmp
sbb
sbb
ja
notb
cmp
inc
cltd
data16
mov
add
sbb
sbbl
mov
add
insb
test
sub
pop
adc
mov
xor
mov
mov
or
sbb
mov
xchg
pop
aad
stos
in
hlt
test
lock
hlt
jns
test
insl
ficomps
in
sub
gs
add
mov
push
xchg
and
pop
rcr
inc
jge
test
mov
or
fidivrl
push
pop
xchg
pop
loop
cli
scas
inc
mov
rol
sbb
inc
outsb
and
cmpsb
rol
fisttps
mov
mov
xchg
data16
gs
fcoml
sbb
pop
lcall
in
sbb
lcall
push
push
or
movsl
mov
push
mov
lahf
dec
xchg
sub
mov
inc
cmpsl
and
mov
jne
fs
mov
sahf
cmp
stc
rol
lods
mov
stos
jnp
les
pop
dec
inc
ret
loop
push
mov
cmp
cmp
out
fcom
mov
cltd
mov
xor
mov
cmpsb
jle
outsl
mov
imul
mov
jae
jge
cmpsb
push
dec
sbb
scas
stos
dec
lret
outsl
loopne
inc
xchg
mov
lea
add
mov
idivl
xor
loop
pop
imul
out
lods
shrb
test
inc
jg
loop
sar
out
pop
lcall
sub
lahf
jle
adc
xlat
xor
out
sbb
and
dec
loop
subb
xor
mov
mov
jg
cmp
movsl
push
jl
rol
or
aas
mov
add
sub
jmp
sub
xor
add
add
int
xor
pop
sbb
dec
stos
mov
insl
jne
out
clc
add
mov
sbb
ja
cmpl
rcrb
data16
nop
xor
pop
xlat
fs
add
xchg
mov
push
dec
adc
push
sbb
mov
xor
outsl
clc
jg
mov
push
push
jle
xor
stos
mov
or
addl
and
mov
inc
mull
imul
push
fiaddl
mov
jne
daa
jle
jl
and
jp
in
test
jnp
cmp
xchg
sub
roll
mov
add
movsl
push
inc
pop
adc
jns
pop
mov
lahf
rclb
loopne
jle
pop
add
xchg
and
jg
cld
push
mov
test
outsl
xchg
cmp
sbb
adc
push
jb
push
je
icebp
xchg
aad
inc
pop
incb
xchg
pop
movsl
jne
adc
pop
push
and
cltd
push
adc
fdivs
mov
xchg
adcl
and
orl
cld
mov
mov
lock
mov
aam
dec
mov
js
pop
mov
lcall
xchg
cmpsb
or
idivl
push
cmp
push
repnz
cwtl
or
mov
push
sbb
sub
push
xchg
add
repnz
xchg
ficoml
sbb
je
add
inc
cltd
push
push
and
mov
mov
and
xlat
in
pop
mov
andl
lods
jnp
sub
pop
xchg
aad
cmp
mov
or
mov
sbb
andl
data16
cmp
push
sbb
popa
pushf
xor
mov
std
pop
scas
xchg
std
push
es
and
add
cwtl
add
sbb
cmp
add
hlt
aas
fwait
xor
pop
repz
sahf
ja
jg
in
lahf
xchg
imul
xorb
rcr
out
lods
mov
subl
scas
adc
shll
xchg
call
jbe
cmpsl
addb
cltd
add
dec
xchg
out
mov
or
adc
pop
test
fnstsw
sbbl
inc
sbb
jmp
insb
dec
mov
scas
mov
cmp
pop
mov
jecxz
xchg
push
fisubs
mov
or
mov
adc
xchg
addl
jp
lret
cmpsl
adc
scas
fdivrl
ja
pop
insl
lock
cs
js
xlat
mov
popa
push
lret
test
sub
mov
push
pop
push
sti
imul
pop
cmp
lods
aas
lods
pop
mov
mov
mov
in
les
outsb
and
inc
rcrb
push
adc
xchg
test
push
jno
mov
and
mov
fiadds
scas
out
push
xchg
bound
cltd
dec
repz
call
mov
test
aas
ficoms
sahf
sahf
or
add
mov
adc
dec
pop
or
mov
movsl
outsl
push
pop
mov
jmp
test
lret
push
pop
test
cmp
lahf
jne
pop
lea
int3
add
inc
adc
add
mov
loope
cmp
mov
int
bound
mov
rcrb
and
jbe
test
hlt
xor
jb
and
aaa
mov
enter
or
ret
push
inc
cmp
push
outsl
lcall
mov
sbb
mov
iret
sub
push
lret
cmpsb
cs
pop
aam
popf
imul
fidivl
scas
lret
hlt
mov
sbb
mov
jg
lods
xchg
or
inc
cmp
adc
sahf
mov
pop
subb
xlat
and
cmp
repz
xchg
inc
into
stos
and
mov
mov
cmp
jne
mov
sbb
fildl
test
ds
outsb
rcrl
je
outsb
aad
out
xchg
dec
fadds
in
xchg
mov
pushf
push
pop
adc
fmull
jp
sbb
shl
cmp
mov
xchg
divl
sbb
lret
dec
cmpsb
sbb
jo
xchg
cs
les
mov
pop
or
testb
or
shll
dec
out
sbb
mov
pop
sbb
or
mov
lret
in
lcall
shl
xchg
sub
adc
les
and
jb
cmpsl
mov
mov
lods
push
cld
jb
fwait
iret
leave
adc
push
adc
adc
test
cwtl
pushf
mov
in
jne
popa
mov
repnz
jbe
sbb
or
subb
sub
add
arpl
rcrb
outsb
pop
inc
negb
test
fldl2e
adc
jg
dec
cmpsb
push
xchg
pop
stos
add
ljmp
jge
call
push
pop
mov
testl
icebp
sub
loope
mov
dec
popa
inc
push
cmpsb
cmpsl
xor
icebp
and
movsb
cmp
lock
push
clc
mov
clc
xor
loopne
mov
dec
lods
lods
lret
lods
ret
sarl
jmp
sbb
dec
mov
lods
sbb
xchg
dec
mov
jno
fsts
mov
nop
dec
fimull
ja
in
sbb
scas
push
sub
push
or
outsl
jo
imul
dec
fidivl
push
push
icebp
sar
push
cmp
cmp
sbb
and
aaa
mov
sub
in
popf
push
subl
inc
fbstp
stc
test
aas
and
jmp
popa
xchg
pop
iret
in
int3
stos
mov
mov
push
jle
or
mov
mov
fwait
into
xchg
jmp
jmp
fcmovne
add
mov
sti
ja
add
icebp
mov
or
pop
cltd
loopne
repz
cmp
lahf
testl
mov
jmp
ja
test
mov
icebp
lea
dec
xorb
in
xor
cmc
mov
or
aad
outsl
in
mov
inc
sar
sub
jnp
mov
ficomps
pop
shrb
inc
out
stos
jns
fwait
scas
nop
pop
mov
adc
cmp
lods
or
dec
jmp
jnp
dec
pop
fld
aas
inc
add
cwtl
imul
test
mov
aam
sbb
fs
jnp
stos
and
sti
sbb
data16
test
int3
dec
inc
les
jecxz
popf
adc
test
inc
test
ret
mov
sub
sti
pop
mov
mov
jp
mov
aad
fsts
xor
scas
iret
fwait
mov
subl
xchg
iret
lcall
dec
in
xor
push
mov
fcomps
movsb
mov
out
cli
mov
mov
or
int
sahf
sar
mov
les
in
mov
jb
cltd
xchg
out
xlat
mov
mov
push
or
jnp
push
sbbb
cltd
or
jge
push
test
call
cmovg
cli
lahf
movl
lahf
mov
gs
and
aad
or
dec
cli
mov
ljmpw
mov
imul
lahf
jg
inc
pop
lahf
mov
adc
push
cmp
int
adcb
mov
sarl
mov
sti
data16
outsl
fisttpll
test
adcl
packssdw
daa
mov
loopne
lret
jbe
fbstp
fs
xchg
cli
test
fmull
xchg
dec
sti
aad
push
xchg
das
movsb
pusha
in
or
jmp
jb
mov
into
pop
sbb
xchg
stos
popf
sub
add
lcall
xchg
scas
out
popf
inc
push
xor
add
inc
jnp
lea
xchg
jno
sub
add
test
cltd
arpl
addb
cltd
dec
stc
add
xor
xchg
adc
cmpb
and
pop
popa
ret
test
shlb
xchg
movl
lds
or
sub
add
pop
xchg
in
xchg
arpl
mov
mov
and
mov
daa
push
mov
icebp
fisubs
aam
pop
sbb
xlat
mov
in
jge
mov
adc
xor
lds
push
jmp
rcr
xchg
pop
mov
mov
adc
jmp
scas
mov
in
in
adc
and
ljmp
fcom
stos
mov
mov
scas
adc
and
fdivrp
movsb
push
lret
push
lds
sbb
mov
ficoml
jns
xchg
lock
mov
lret
push
int
bound
or
cli
push
adc
add
pushf
shrl
out
mov
in
mov
repz
or
rorl
xchg
arpl
mov
xchg
lea
mov
or
or
push
sbb
dec
jge
ljmp
ret
pop
aam
and
cmp
add
cld
call
mov
xchg
out
push
out
fsub
aad
idivb
fnsave
sbb
mov
mov
mov
dec
fcoms
push
and
js
test
dec
mov
xchg
ss
scas
mov
lods
and
repnz
scas
cmp
push
adcb
ficomps
out
sti
adc
test
test
xchg
not
jecxz
jp
ljmp
mov
push
shll
inc
insb
mov
pusha
mov
jne
clc
lahf
in
test
xchg
jge
xchg
mov
or
mov
and
movsl
push
fbstp
mov
lret
mov
mov
repnz
cli
mov
int
mov
add
xor
mov
and
hlt
cld
dec
ret
add
lret
and
mov
loopne
inc
adc
lods
add
ffree
mov
imul
add
mov
mov
fistps
xor
xchg
add
sub
movsb
loopne
cmp
pusha
or
mov
nop
mov
push
xchg
roll
dec
loope
xlat
pop
cwtl
sbb
inc
fisubl
adc
lock
sub
in
insb
cltd
inc
outsl
stos
xor
das
inc
movl
gs
push
shl
mov
jb
ja
mov
xlat
jb
andb
xchg
hlt
push
jle
subb
lret
push
pop
push
sahf
addl
bound
add
lcall
pop
mov
sbb
je
sub
stc
and
jecxz
pop
lock
pop
push
pop
mov
test
jle
aaa
mov
je
add
stos
mov
jne
int
push
jae
sbb
add
ss
xor
ficoms
add
cmpsl
icebp
pop
ja
es
sbb
pop
dec
cltd
push
jmp
decb
adc
inc
sahf
push
stos
sti
pusha
cmpsl
sub
xchg
andl
mov
mov
rolb
xchg
fistpl
in
rcr
xchg
insb
push
lock
rcll
push
lahf
dec
mov
xor
push
push
cli
push
push
xchg
add
in
fcoml
iret
inc
or
frstor
cmp
push
sbb
pop
popf
out
push
sarb
pop
clc
or
and
repz
jmp
xchg
mov
pop
loope
mov
outsl
addb
mov
scas
push
mov
test
lcall
shrl
icebp
cld
icebp
loopne
stc
mov
adc
icebp
fsubl
icebp
into
rol
mov
sti
jmp
aaa
and
mov
fwait
jae
push
loop
pop
nop
aad
iret
insb
add
mov
in
jns
mov
inc
mov
or
pop
js
loopne
push
mov
add
pop
dec
cwtl
lahf
divl
gs
cli
jp
mov
xor
adcl
shlb
stos
std
inc
mov
pop
notl
out
lock
out
mov
outsb
adc
sbb
xchg
fldt
ja
stos
imul
gs
xchg
aas
jns
ret
cmpsl
cmp
loop
jne
jb
sub
xchg
push
aas
mov
loopne
test
jb
jge
loop
lds
jmp
sbb
rorb
outsb
cmp
arpl
enter
out
test
mov
das
mov
testl
paddw
push
movsl
loope
jge
mov
pushl
fsts
sbbb
xor
icebp
push
scas
or
repnz
mov
or
cmpsb
ds
mov
add
pop
pushf
fcmovb
in
sti
or
das
clc
sahf
push
test
movb
push
mov
into
cmp
js
stos
aam
cmp
cmpsb
jg
pop
outsl
or
xchg
les
xchg
shrl
fimuls
rclb
add
int3
xchg
xchg
in
or
mov
lds
into
inc
scas
xor
orb
cmc
fcmovbe
xor
sub
sbb
test
popf
je
aam
loopne
fisubl
addr16
cwtl
scas
xchg
pushf
add
mov
outsl
mov
dec
xorb
adc
movsl
xchg
mov
pushf
stos
xchg
in
mov
call
enter
mov
leave
mov
cmc
lods
addr16
jp
add
mov
outsl
mov
addb
outsb
sar
imul
push
mov
cli
in
mov
cmp
lods
scas
scas
jb
movsb
stos
push
mov
sbb
das
sub
shlb
sub
adc
outsl
adc
scas
out
fadds
mov
mov
lahf
adc
jg
outsl
bound
jne
add
nop
mov
cmpsl
jg
mov
inc
fidivl
out
xchg
shlb
and
sbb
call
jmp
pop
pushf
adc
sahf
and
nop
in
stos
test
jo
leave
lods
fists
jo
mov
and
cwtl
xchg
arpl
pop
push
mov
push
mov
and
call
cmpsb
lret
cmc
cs
add
cli
xchg
cmp
mov
and
int
or
sbb
mov
ja
cmp
lods
mov
rcrb
lods
popf
mov
pop
aas
rol
mov
cmp
loopne
js
cltd
fiaddl
xor
test
sbb
js
nop
movsb
aam
lock
cmp
enter
orb
mov
leave
jo
push
scas
sub
call
test
mov
cmpsl
xor
arpl
mov
cmp
les
gs
pushl
data16
out
mov
add
inc
mov
jb
dec
lret
mov
cmpsl
pop
movsb
xchg
mov
jbe
mov
add
mov
xor
pop
cltd
test
mov
or
daa
xor
lock
loope
outsl
jle
push
mov
xchg
ljmp
mov
insl
mov
cmp
jnp
add
xor
mov
scas
push
imul
sub
lods
xlat
inc
mov
in
mov
shll
cli
lock
scas
in
cli
mov
pop
and
pop
testl
inc
cltd
sbb
add
pop
subb
mov
mov
mov
loop
lcall
pop
cwtl
add
ja,pn
push
pop
add
pop
loope
cmp
mov
test
ss
adc
faddl
orb
pop
scas
sbb
add
sbb
call
sub
scas
lea
scas
pop
dec
les
loop
in
xlat
fbld
cli
data16
shl
push
lods
sub
push
in
and
xor
rol
xchg
ja
or
lds
scas
cmpsb
and
pushf
out
xor
in
or
stos
test
gs
cmpsl
test
insl
xchg
test
xchg
shll
add
sub
pop
xchg
sbb
fwait
nop
lea
mov
xchg
ret
fs
icebp
dec
xor
fdivrp
add
lcall
roll
sar
test
cmpb
jbe
cwtl
dec
xor
arpl
sarb
mov
sbb
jecxz
call
jg
in
es
push
xchg
sti
dec
sti
cli
mov
mov
xchg
xchg
xchg
mov
cmpsl
adc
lea
push
icebp
loopne
xor
addr16
gs
sbb
xchg
inc
lea
pop
pop
es
xor
sti
and
dec
das
sbb
jp
stos
mov
dec
icebp
mov
lret
jbe
adc
sti
or
mov
ja
ret
shl
and
xchg
mov
fidivs
leave
inc
push
notl
xor
hlt
or
lret
cmc
ret
jg
out
xchg
adc
aam
lods
test
cmpl
addr16
inc
push
out
cmp
or
imul
clc
jbe
jp
lret
push
cmpsb
add
mov
rcrb
inc
fsts
mov
inc
push
outsl
cmp
rclb
push
mov
or
cwtl
jmp
mov
xchg
data16
jae
sti
popa
pop
sub
dec
mov
jl
mov
insl
ret
mov
imul
aam
rcrl
rol
sbbb
jge
test
mov
xchg
cwtl
sub
mov
sub
cmpsl
mov
cmp
or
mov
data16
cli
mov
and
rcrl
xchg
cmpsb
mov
cmp
aaa
push
shrb
lock
add
inc
mov
mov
pop
mov
orb
pop
sahf
sbb
cmc
sbb
enter
xchg
sub
dec
std
cmp
mov
rcr
push
inc
add
icebp
xchg
pusha
int
mov
cmp
pop
xchg
fstps
aam
gs
push
call
test
fdivrl
lock
ljmp
adc
std
xchg
jo
sub
mulb
cmpsl
jne
insl
xchg
sbb
add
addb
jbe
push
pop
je
cmp
ljmp
rolb
mov
cmpb
add
shl
xchg
xor
lret
xchg
cmpsl
test
rol
jg
pop
insl
leave
daa
rcrl
int
jbe
pop
icebp
negl
push
mov
shrl
lret
movsb
and
mov
fmuls
pop
fcmovbe
pop
inc
out
push
stc
mov
jl
push
loop
filds
sub
add
xchg
adc
loope
adc
das
mov
mov
mov
push
ret
aaa
pop
dec
push
mov
mov
mov
scas
fucompp
push
xor
les
jne
movsl
dec
dec
loop
sub
call
xlat
int3
pop
sti
xchg
mov
xchg
mov
scas
aas
aad
repz
stos
xor
dec
inc
test
clc
mov
icebp
cltd
mov
je
out
mov
repnz
xchg
stos
push
or
inc
enter
or
mov
push
xchg
jb
fisttpl
add
pusha
sahf
xchg
add
scas
pop
dec
mov
lret
pop
add
pushl
inc
das
jge,pn
cmpsb
xor
rclb
in
jp
cltd
dec
js
dec
mov
cmc
int3
in
sub
js
sub
jne
adc
ja
mov
push
pop
loop
in
pop
push
jecxz
or
jne
jge
out
idivl
sub
xchg
ret
shll
ljmp
pop
dec
sub
cmpsl
fdivrl
shlb
mov
add
test
mov
mov
jnp
mov
mov
cltd
lea
fsubr
sub
bound
loopne
out
in
xor
lds
dec
sbb
bound
xor
leave
bound
div
subb
add
dec
movsb
in
cmpsb
sbb
jo
pop
mov
test
sub
inc
clc
sbb
cs
sub
adc
push
ret
adc
cmpsb
stos
pop
mov
rclb
cmp
repz
sbb
mov
mov
mov
data16
stos
sahf
sahf
adc
xor
clc
jecxz
lcall
dec
xchg
pop
xchg
mov
aad
lcall
pop
rorb
and
sbb
cmpsl
dec
adc
inc
jo
sub
mov
jbe
mov
stos
ficompl
add
into
enter
sbb
lret
sbb
inc
pop
dec
out
cwtl
movsl
add
mov
repnz
mov
out
pop
out
adcl
sub
inc
pop
jl
mov
sbb
data16
and
daa
mov
xchg
adc
imul
fcmovbe
popa
push
stos
mov
call
sar
jmp
fnsave
outsb
fsubs
pop
lds
ret
and
adc
test
xchg
push
in
xchg
jp
int
fmuls
loop
loopne
xchg
sbb
lcall
insb
int
pop
xor
mov
mov
jne
imulb
xchg
testb
lock
sbb
cmp
add
jbe
dec
lret
sbb
cwtl
dec
jg
push
sahf
ret
add
or
fsubrs
or
lea
cmp
xchg
push
in
and
in
add
adc
aaa
mov
push
mov
call
pop
icebp
add
pushf
lea
pop
dec
lea
push
jl
push
data16
and
outsb
mov
and
lret
cmp
test
or
in
sbb
jno
sbb
out
dec
dec
cltd
insl
fsubp
push
pop
pop
pop
fildll
loop
lods
das
push
cmpsl
je
jae
ja
mov
add
sub
mov
cmc
mov
inc
pop
mov
mov
mov
mov
dec
mov
pop
cmp
test
inc
mov
lcall
roll
cli
scas
stc
repz
rcl
lock
xchg
imul
inc
icebp
scas
outsl
cmc
sub
in
or
adc
push
jecxz
push
ror
adc
mov
daa
mov
add
dec
sub
cs
test
mov
lods
adcb
inc
repz
out
mov
rclb
jle
int
mov
mov
xchg
in
cltd
mov
mov
in
gs
scas
into
dec
loop
cmc
xor
lcall
sub
add
movsb
pushf
sbb
lret
push
shll
cwtl
mov
mov
push
orl
clc
and
add
push
ja
scas
mov
mov
lods
in
lahf
test
out
test
lahf
testb
and
dec
daa
add
jne
into
and
inc
push
in
fadd
out
gs
jp
add
rolb
cmp
mov
push
fidivrl
iret
mov
adc
cmpsl
enter
mov
lahf
cmp
xchg
test
rcrl
leave
pop
repnz
incb
adc
icebp
cmpsl
fs
sarl
cmpsl
je
jns
out
lods
out
icebp
xchg
js
outsl
sbb
cmp
pop
js
pop
sbb
inc
sti
pusha
pop
cwtl
mov
mov
inc
pop
pop
or
insl
mov
pop
das
test
cld
cwtl
add
mov
cmpsb
mov
adc
lret
push
xchg
out
pop
pop
stc
xchg
xchg
out
mov
xchg
cwtl
scas
cwtl
mov
pushf
fildll
or
mov
insl
movsb
popf
mov
pop
test
aas
lcall
ljmp
mov
neg
stos
add
mov
out
inc
lahf
in
enter
and
jmp
in
pop
pop
push
cmpsb
inc
xchg
movsb
jecxz
jl
dec
dec
xchg
xchg
mov
cmp
pop
sub
inc
pop
sub
es
out
mov
mov
inc
sbb
addr16
lods
mov
out
push
arpl
mov
pop
dec
fsubr
jb
fcmove
movsl
fisttpll
pop
pusha
addr16
jae
push
ss
and
push
rolb
movsb
add
inc
sbb
fiaddl
mov
cmc
fcoml
test
mov
scas
adc
mov
dec
ret
loopne
je
mov
xchg
mov
inc
sahf
cmp
cli
cmpsb
pop
loopne
jg
or
mov
es
test
mov
je
pusha
ds
fidivs
xchg
call
cs
mov
cld
subb
ret
jmp
icebp
cmpsl
jne
nopl
and
adc
leave
ss
sub
xor
jb
div
rorb
leave
adc
jg
arpl
fsubr
xchg
fcmovbe
jne
call
jmp
xchg
mov
inc
mov
xchg
outsb
mov
test
mov
xor
punpcklbw
in
jb,pn
lock
add
cmpsb
movsb
dec
fld
xchg
repz
mov
in
out
iret
outsl
rcrb
mov
lods
dec
pop
data16
rcr
inc
cmpsl
scas
xor
dec
fxch
addr16
pop
push
arpl
je
outsb
pop
rcrl
mov
sub
and
sub
gs
shlb
sub
and
lea
hlt
jge
mov
loopne
aam
hlt
fucomp
imul
insl
outsb
jno
movsl
pop
push
inc
leave
fs
cmc
rol
sub
add
jge
pop
xchg
push
add
sahf
push
mov
mov
popf
and
pop
lods
repz
sbb
pushf
sub
mov
sbb
enter
jne
and
das
mov
xchg
cmc
mov
lock
and
mov
cmp
xchg
dec
cmp
inc
inc
jo
data16
adc
ret
cmp
or
into
lods
sti
lret
ja
inc
repz
mov
adc
push
jb
and
fbld
mov
movsl
push
int
loopne
das
lock
cltd
mov
or
repz
or
xchg
fnstsw
lcall
xor
xor
je
mov
in
imul
in
jns
js
cmp
stos
sub
and
add
inc
lea
std
jmp
imul
xor
xchg
cmc
cld
fnstenv
data16
lds
in
jbe
cmpsb
fstpt
jno
loop
mov
jns
arpl
xchg
imul
lods
sub
shrb
pop
sub
rcr
sbb
and
es
mov
sbb
xchg
inc
jns
xchg
add
push
rolb
or
sbb
mov
mul
mov
enter
mov
ret
sbb
fildl
arpl
subl
outsl
je
xor
mov
xchg
sbb
xchg
sbb
push
lea
out
bound
test
mov
jecxz
sub
mov
xor
sbb
imul
xor
push
js
cmp
subb
les
cs
xchg
adc
mov
xor
or
ret
push
and
and
mov
cmp
ror
imul
inc
ror
cmp
scas
divl
roll
mov
inc
mov
test
inc
inc
mov
jno
popf
sub
test
test
pusha
adc
sbb
inc
je
pop
or
push
out
mov
sbb
xchg
sub
jbe
cmp
nop
xchg
inc
xchg
inc
sarb
lahf
add
lcall
int
pop
loop
mov
mov
js
test
in
jns
in
sbb
jb
popa
ljmp
mov
hlt
stos
cmp
jecxz
lcall
in
pop
ret
or
mov
mov
cmc
inc
mull
mov
repz
mov
testb
das
data16
shlb
xchg
mov
aas
out
jle
jp
jmp
scas
les
adc
ja
xchg
inc
inc
jo
aaa
adc
push
xchg
popf
iret
ret
push
loopne
mov
out
into
dec
pop
lods
mov
popaw
stos
movsb
js
mov
clc
mov
xor
and
and
add
mov
mov
stos
mov
sub
insl
js
ds
or
test
mov
in
enter
mov
loop
cmp
jmp
mov
adc
xchg
aam
and
data16
sub
fldln2
arpl
pusha
subb
filds
adc
dec
pusha
fistl
mov
mov
test
push
lcall
shr
xor
lahf
push
sub
sub
in
adc
leave
xor
sti
in
cmpsl
mov
arpl
mov
gs
mov
shl
lahf
xlat
jmp
mov
jg
add
cmp
jmp
mov
dec
adc
mov
mov
mov
popf
movl
add
cli
jb
sub
lods
rolb
ja
cmp
sbb
ds
movb
mov
lret
sbb
out
test
add
dec
jo
js
out
cltd
inc
sbb
call
mov
shlb
mov
out
mov
cmpsl
stos
lock
mull
clc
mov
jle
std
ss
dec
mov
cmpsl
fdivr
mov
lcall
fdivs
rorl
sahf
mov
clc
jle
xchg
test
imull
out
mov
cmp
sub
scas
and
popf
movsb
xchg
fsubrl
pop
cmpsb
jae
inc
xchg
jnp
mov
adc
pop
adc
cmp
jne
test
cmc
mov
jns
out
inc
frstor
lods
rcrl
pushf
cwtl
test
fdivrp
mov
fmul
mov
iret
jle
subb
dec
js
mov
push
add
add
jns
data16
adc
cmp
ret
clc
add
pushfw
aam
nop
test
lods
jae
or
sub
mov
add
gs
dec
cmp
lods
jo
xor
sbbb
mov
mov
dec
in
or
pushf
sbb
mov
in
pop
cmpsb
enter
scas
mov
push
sbb
in
andl
cwtl
lods
ret
pop
sbb
dec
andl
sub
pop
or
fildl
mov
ret
clc
adc
mov
sbb
scas
mov
sub
jecxz
pop
pop
int3
test
test
add
ss
inc
scas
or
xchg
push
and
mov
stc
out
add
or
mov
repz
in
out
sub
adc
mov
or
push
mov
sarl
ljmp
cli
lock
add
push
shll
ss
int
inc
lods
push
pop
push
sub
mov
loop
lds
clc
sti
cwtl
xchg
cmp
sub
adc
nop
div
roll
insl
xchg
sbb
sarb
icebp
inc
scas
not
cmc
fs
ljmp
popf
cmp
lret
pop
loop
stos
cmp
stos
imul
add
pop
and
jno
imul
lds
subb
popa
dec
jo
adc
mov
test
out
dec
lahf
dec
xchg
cwtl
add
xor
loop
test
xlat
loop
ljmp
xlat
lret
mov
pop
sbb
icebp
inc
dec
insb
sbb
fldenv
insb
cld
fxch
or
dec
mov
sbb
mov
sub
call
stos
dec
out
dec
mov
xchg
call
stos
popa
sti
mov
mov
out
or
add
lods
jge
inc
inc
inc
pusha
cli
cwtl
pop
sub
cmp
mov
call
xchg
add
push
cli
inc
call
xchg
pop
rcrb
mov
mov
enter
cmp
add
outsl
rcrb
sbb
xlat
mov
push
jnp
sbb
out
pop
dec
add
mov
adc
jbe
or
insl
jle
fcomip
xchg
xlat
push
pushf
jp
or
push
lods
or
inc
pop
inc
je
imul
stc
add
jo
jno
inc
pop
insl
inc
inc
xlat
jne
inc
mov
repnz
push
jns
fs
mov
xchg
xlat
dec
mov
xor
pop
pop
je
cld
ja
jbe
jno
leave
inc
lods
inc
add
jge
dec
xlat
push
test
xlat
js
dec
pop
dec
pop
push
je
cld
addr16
mov
sub
pusha
jecxz
leave
dec
mov
pop
pop
pop
inc
push
loop
pushf
inc
mov
leave
inc
mov
xor
pop
and
cmp
mov
push
mov
sbb
xor
inc
loop
test
aad
cmpsl
sub
movsb
mov
jnp
shll
cli
dec
shl
lcall
sub
subb
sbb
lods
push
mov
not
call
in
call
leave
xchg
test
xchg
xor
mov
aad
das
add
mov
rorb
mov
xchg
mov
inc
dec
cmc
int3
cmpsl
inc
sub
add
push
inc
or
mov
pop
aad
std
addb
repnz
mov
dec
fprem
cmpsb
dec
clc
test
aam
aam
cmc
in
leave
jb
inc
sahf
push
ss
fisubrl
cwtl
test
jb
scas
int3
xchg
inc
lcall
xchg
std
adc
fsubr
mov
ret
pop
std
push
int
inc
insb
mov
push
cltd
ret
loop
stc
sub
mov
add
push
sbb
xlat
push
das
xor
and
cmp
or
cmpsl
out
ljmp
jns
ljmp
dec
mov
xchg
mov
cmpsl
lahf
mov
roll
pop
cmpsl
xchg
loopne
push
xlat
push
push
lcall
lret
lret
and
rcl
jp
test
aas
shl
jno
rcll
adc
cmp
lea
lret
int
jno
ds
dec
xor
stc
pop
jbe
inc
pushl
push
movsl
fcoms
sbb
les
or
push
fsubrp
xlat
jmp
inc
push
ds
test
jnp
stos
loopne
rol
in
into
mov
jg
or
loopne
in
loop
in
lcall
rcrb
loop
cs
stc
rcll
divl
pushf
pusha
subb
loope
sbb
mov
repnz
in
cmp
xlat
xor
xor
stos
cmp
push
idivb
add
leave
jge
jge
push
gs
sbb
and
lea
fdiv
imul
testb
mov
cld
pop
adc
test
outsl
cmp
xchg
push
pop
orl
jmp
xor
iret
inc
or
in
cltd
lock
push
dec
jmp
mov
cmp
xor
adc
cmp
xchg
addb
stc
jp
lret
mov
shr
xchg
loopne
adc
xchg
jbe
xchg
mov
addr16
pop
movsb
push
in
outsl
mov
mov
xchg
mov
ficompl
scas
and
xchg
pop
mov
adc
fadd
dec
mov
cld
stos
cltd
scas
mulb
cmp
pop
mov
mov
fnstcw
pminsw
aad
icebp
int
sti
mov
leave
subl
insb
mov
cld
sub
ret
mov
push
jmp
push
inc
test
jns
das
mov
inc
cmpsl
and
dec
mov
jge
jp,pt
cmp
pop
push
xchg
cld
mov
mov
dec
aad
cmpsl
xor
je
inc
imulb
filds
mov
scas
clc
xchg
mov
cmpsl
mov
or
in
lds
mov
mov
cs
xchg
out
into
jbe
lods
mov
push
ja
into
mov
push
jae
test
icebp
icebp
lea
mov
rolb
cltd
mov
mov
mov
pop
cmp
lock
ret
shlb
fcmovu
imul
inc
stos
in
shrb
icebp
sbb
flds
test
sbb
mov
mov
add
jb
dec
add
pop
sahf
cld
mov
push
negl
insb
inc
jl
jns
stos
or
addr16
es
js
cmp
xor
or
cmp
lcall
adcb
out
jbe
push
add
cmp
insl
imul
xchg
adc
ja
jg
testb
test
and
fisubrl
nop
sbb
push
mov
mov
call
pop
in
in
add
push
xor
into
cli
movsb
into
inc
std
pop
mov
mov
mov
lahf
push
ss
fistps
popa
mov
in
repnz
ds
mov
movsl
jp
xlat
shll
into
cwtl
push
testb
test
mov
sahf
daa
cmpsb
es
nop
jmp
mov
inc
out
movsb
mov
out
push
ljmp
cmp
sub
xchg
ret
add
mov
mov
inc
jb
insb
fmuls
dec
and
aam
data16
jl
out
fcomi
adc
add
add
popa
jecxz
adc
adc
rcrl
mov
loopne
mov
std
cwtl
je
jbe
mov
mov
loop
test
data16
mov
lds
sub
mov
cld
lret
or
add
into
dec
add
sub
sbb
pop
mov
and
daa
test
hlt
into
sahf
or
xor
lcall
mov
fidivl
sarb
sti
dec
hlt
ret
enter
mov
std
cld
iret
and
xor
leave
sub
leave
test
lock
mov
or
adcl
adc
add
aam
lods
cs
mov
scas
int3
int3
jno
dec
lahf
adc
data16
cmpsb
add
push
pop
mov
stos
cmp
outsb
pushf
and
mov
cmp
sti
stos
dec
jbe
adc
in
dec
fdivl
mov
xchg
jnp
xchg
mov
fcoms
jle
and
sub
cltd
mov
loope
clc
inc
fists
testl
inc
orl
lock
addb
mov
stos
lret
mov
adc
mov
add
adc
add
jp
push
out
sbb
mov
lahf
mov
mov
loope
jnp
push
leave
pop
lret
mov
leave
xchg
xchg
jp
insl
sahf
jl
out
dec
jb
push
jecxz
divb
aam
pushf
mov
mov
es
lods
jmp
aaa
sbb
xchg
dec
xlat
stos
sti
movsb
dec
out
xchg
insb
fcomp
mov
fsubrp
insl
cltd
jnp
sbb
and
lahf
scas
lock
shrb
fbld
xchg
aas
sub
jae
ljmp
out
push
mov
mov
dec
out
sbb
jns
xor
addl
xor
sub
cmpsl
jg
sarl
les
lret
fs
rcrl
fwait
daa
xchg
dec
in
pop
sbb
cli
scas
outsl
arpl
xchg
mov
out
rorl
ret
std
sbb
in
jmp
dec
out
xor
ja
test
mov
stc
adc
inc
je
adc
gs
rorb
mov
pop
xchg
dec
repz
push
pop
xor
mov
ret
enter
jne
mov
xor
ds
imul
push
mov
pop
fidivs
test
pop
out
mov
adc
dec
hlt
fisubrs
hlt
and
and
js
push
push
xchg
nop
mov
lea
push
lea
in
pusha
inc
push
testl
cwtl
jns
hlt
fadds
add
jnp
dec
sub
mov
addl
mov
into
inc
scas
push
push
jb
stos
lret
cmp
fcmovnu
or
cmp
push
loop
insl
fadds
fs
mov
sbb
in
outsl
or
sub
mov
adc
push
adc
in
xchg
and
shl
je
sbb
add
ja
sbb
xor
sub
mov
adc
pop
cmpl
in
jae
push
cmpsb
into
push
repnz
sub
dec
pop
imul
imulb
xor
mov
testb
xorb
bound
cmc
in
xor
and
insb
jg
push
cld
in
jns
jle
adcb
clc
outsb
push
outsb
or
add
push
adcb
sbb
cs
add
jno
pop
mov
test
int3
sub
cmp
xor
hlt
outsb
mov
aaa
lahf
mov
aaa
adc
mov
imul
mov
inc
or
cmp
lods
rorl
lods
repnz
jno
ret
jb
jecxz
sbb
jo
mov
outsl
sub
mov
mov
aam
notb
scas
xchg
and
loopne
in
rorl
sub
xor
repnz
in
and
shrb
add
mov
rorl
cwtl
mov
ljmp
cmp
cwtl
rclb
outsl
loope
lea
pop
ljmp
das
cmc
jbe
jl
in
or
xchg
call
mov
loopne
je
adc
sbb
inc
mov
es
mov
std
fwait
add
mov
sub
hlt
pop
xor
sbb
dec
mov
notl
movsl
std
cli
hlt
sub
in
adc
jbe
mov
icebp
lcall
std
pop
fistl
dec
xchg
adc
fnclex
adc
fbld
out
or
mov
push
xlat
jecxz
ret
jl
stos
mov
cmp
add
ds
in
nop
int
aaa
sti
fcmovnu
je
lods
rcl
mov
fisttpll
jl
mov
js
aaa
ss
int
int
movsl
cld
out
ss
stc
and
xchg
fcoml
popf
push
lea
arpl
fidivs
movsb
mov
mov
arpl
mov
mov
mov
inc
mov
in
fisubrs
mov
enter
xchg
mov
dec
movsl
daa
lcall
out
icebp
cmp
into
push
dec
adc
dec
mov
sbb
in
sub
sti
pop
hlt
jmp
adc
pop
sub
pop
ret
movsl
mov
mov
lahf
and
jnp
jo
into
stc
in
mov
jne
rcl
jno
lods
xchg
ds
mov
aas
push
hlt
call
push
pop
fsubs
xor
out
repnz
adc
mov
es
and
or
ss
inc
jle
cli
xchg
and
or
jno
icebp
and
inc
xchg
cmc
adc
lock
dec
dec
push
dec
push
call
shl
adc
mov
std
inc
testb
jge
rol
add
test
adcb
add
aam
outsb
rcll
test
xchg
call
loope
fwait
test
stos
pusha
int3
fistl
push
mov
and
aas
fs
testb
fs
jb
mov
ds
clc
testl
iret
xchg
mov
testb
cs
adcb
mov
and
outsb
popf
jecxz
mov
ja
mov
jbe
mov
repnz
sbb
mov
std
and
pop
and
mov
xchg
mov
orl
out
pop
mov
icebp
in
fnstenv
jnp
or
ret
fnsave
xor
jmp
aam
ds
jae
adcl
xchg
js
mov
sbb
inc
cmp
jnp
cmp
sahf
fnstcw
mov
mov
dec
testl
int
xchg
dec
mov
sbb
jp
rcr
out
in
sbb
jmp
xor
cltd
in
dec
iret
fisubrl
js
es
cli
cld
mov
sarl
or
sub
scas
xlat
ja
data16
aad
jbe
mov
xor
push
fistpl
sub
fwait
mov
cmp
shll
pop
dec
jecxz
loop
data16
push
xchg
pop
sub
cs
xor
inc
cltd
fwait
iret
pop
hlt
aaa
lcall
rcl
sub
xchg
push
inc
push
dec
pop
mov
jle
aam
test
adc
rcll
sbb
je
and
in
mov
mov
xchg
fwait
add
xchg
jbe
jl
addr16
in
pushf
ja
xchg
adc
xchg
int3
sahf
adc
jnp
or
mov
cltd
aam
mov
cmpsl
jns
push
sar
sub
xchg
mov
sbb
stc
mov
inc
daa
cmp
rcrl
test
mov
push
fcoms
push
gs
lock
or
pusha
movsb
sbb
cwtl
lock
pop
fidivrs
inc
adcl
popf
in
mov
iret
shl
sbb
jl
lahf
out
xorb
xor
pop
cmpsl
aas
adcl
stc
les
and
or
pop
jge
pop
dec
leave
lea
daa
stc
adc
sub
ds
mov
xchg
mov
mov
ret
ss
jae
in
fsubrs
mov
test
cwtl
shrl
shll
loop
xchg
or
lea
mov
jl
add
pop
les
sbb
ljmp
stos
imulb
push
push
out
imul
add
adc
in
xchg
rcrl
cmp
lret
add
and
xchg
addb
mul
inc
or
dec
xchg
std
fstpl
nop
jno
xlat
sub
es
mov
and
lock
int
pop
push
mov
lock
out
pop
push
shlb
mov
scas
lods
subl
int3
int3
pop
aam
lods
dec
xchg
xchg
mov
repz
cmpsl
test
cmovno
xor
in
mov
fdivs
in
lahf
ret
and
adc
adcb
xchg
sbb
or
jb
mov
dec
xchg
shl
xor
or
xlat
in
xchg
rolb
adc
orb
stos
push
dec
mov
inc
mov
roll
cltd
insl
mov
mov
notl
into
mov
sti
pop
lret
jmp
mov
test
cmp
pop
inc
lahf
xlat
pop
push
nop
in
add
jl
out
jp
andl
in
mov
mov
pop
sbb
add
mov
in
cmp
test
cmc
mov
int
push
adc
mov
fnstcw
mov
test
or
push
popl
sbb
sti
mov
mull
mov
adc
scas
dec
mov
cmp
xor
cmpsl
lea
es
sbb
out
fwait
mov
stos
xor
data16
mov
pop
adc
lahf
mov
aaa
or
lea
shrl
repz
push
add
cmp
pop
xchg
cmpl
cmp
ss
xor
mov
arpl
subl
xor
add
in
dec
insb
or
pop
rorb
aaa
cmp
or
testl
mov
jmp
lret
or
and
push
sbb
cltd
out
xchg
call
xor
fidivs
pop
pop
cmc
jmp
mov
ljmp
xchg
fmull
testb
orl
xor
mov
adcl
aam
cmp
push
rorl
or
repnz
gs
mov
test
mov
popl
xor
mov
stos
repnz
ret
xchg
roll
push
leave
xchg
testb
dec
aaa
add
repnz
cwtl
sub
ja
sbb
adc
out
rep
fisttpl
cmpsl
outsb
ljmp
les
inc
cmpsl
cld
nop
add
and
and
ficoml
cwtl
stos
lods
stos
inc
pop
mov
push
testl
pop
in
pusha
dec
movsb
rorl
pop
clc
fisubrl
jo
in
add
and
lret
mov
xchg
lret
int
jnp
push
cmp
arpl
aad
push
vpsraw
push
ja
aad
xlat
sbb
scas
cmc
loope
mov
mov
mov
pop
xor
push
cld
adc
mov
sub
mov
lods
xchg
mov
add
pop
mov
adcb
dec
xchg
lret
mov
test
dec
sbb
cmp
outsb
clc
pop
loope
add
out
jmp
sbb
sbb
jp
jbe
js
add
test
inc
test
xlat
call
mov
js
jp
dec
lock
cmp
rep
add
into
push
and
mov
add
out
mov
int3
xchg
aaa
cs
mov
enter
imul
stos
in
sbb
fs
filds
sub
cmc
mov
dec
mov
loopne
scas
lret
mov
add
leave
lods
stc
aaa
dec
xlat
test
cltd
pushf
mov
leave
xchg
xchg
push
xor
nop
cmpsb
mov
scas
fistl
scas
lea
mov
mov
cmpsl
idiv
scas
xchg
std
mov
push
add
jno
in
lret
fldcw
cwtl
jb
dec
xor
push
jnp
int3
pushf
cmp
push
xchg
xor
xchg
fcmovnu
push
scas
mov
pop
es
mov
sti
sbbl
add
scas
loopne,pn
adc
add
add
repnz
repz
and
mov
imul
mov
push
jl
insb
sbb
xorb
fwait
add
sti
or
das
rcrb
cmc
sbb
gs
push
scas
pop
mov
shrb
adc
imull
ffreep
lret
arpl
fdivrl
sahf
mov
mov
push
outsb
add
push
mov
outsb
cmp
dec
add
cld
adc
jle
or
repz
push
mov
leave
imul
sub
sbb
xchg
push
call
icebp
movb
add
inc
jge
insl
push
and
fiaddl
pop
in
dec
mov
push
imul
mov
addr16
pusha
das
cmp
jnp
dec
mov
por
popa
movsb
xor
xchg
clc
es
sub
enter
dec
push
push
ret
mov
enter
sub
and
in
data16
lret
xor
stos
sarl
xchg
or
aaa
mov
push
sub
or
xor
mov
jne
lahf
jecxz
add
sub
punpckldq
repnz
inc
sub
cmpsb
mov
cwtl
jecxz
rolb
cmpl
add
jecxz
cmp
push
dec
cmp
es
je
add
pop
sub
test
jno
dec
mov
xor
sarl
out
mov
mov
mov
sub
imull
ret
push
xor
sub
sbb
call
roll
and
aad
dec
jp
pop
sahf
mov
push
bound
jp
mov
or
mov
test
ficoms
pop
jnp
push
mov
repnz
repz
mov
js
mov
adc
aaa
add
and
inc
xchg
dec
xchg
adc
mov
cld
pushl
ror
mov
adc
push
push
out
icebp
orl
clc
aad
pop
mov
push
push
dec
out
or
cmc
sub
in
inc
sub
sbb
repz
fdivl
add
push
add
lea
mov
xchg
and
jb
mov
mov
cmc
push
mov
sbb
mov
mov
xchg
mov
push
jmp
pop
in
push
int3
cli
mov
add
ds
mov
mov
cli
mov
mov
sti
and
inc
cmpsb
or
push
movsl
or
push
or
pop
scas
and
mov
mov
sbb
cmpsb
in
popa
adc
mov
mov
dec
gs
push
push
cld
push
aad
add
dec
nop
mov
lret
clc
in
nop
stc
aam
mov
add
cmp
cwtl
in
outsb
mov
inc
mov
jne
fstps
lcall
pop
push
sub
xor
jbe
out
pop
jg
pop
cli
cmp
sub
insl
mul
out
jle
test
cltd
add
test
sbb
pop
cmpl
call
push
fsubrs
lea
test
xor
decb
push
sub
cmc
xchg
fwait
icebp
adc
push
popf
dec
mov
aam
pop
pushf
sti
cli
mov
fldt
test
jp
xchg
mov
xor
je
and
scas
mov
add
mov
int3
lods
inc
ret
jnp
jnp
mov
mov
sub
int3
mov
adc
sub
outsb
cmpb
scas
push
iret
mov
xchg
mov
cmp
test
jmp
cmp
inc
jmp
in
rcrb
mov
and
mov
jecxz
mov
and
push
ds
dec
xor
jnp
or
aad
xlat
pop
in
jecxz
lahf
jl
jp
cmp
fs
mov
cwtl
mov
mov
stos
xor
iret
mov
fcoms
out
add
stos
inc
icebp
mov
sbb
inc
xchg
je
scas
xchg
scas
adc
sub
jns
flds
pusha
movsl
negb
popf
adc
ss
ja
sub
add
xlat
push
stc
ljmp
xor
sbb
out
test
outsb
add
mov
test
mov
push
lock
loop
notb
movsl
insl
jbe
stos
pop
insl
lahf
mov
inc
jb
adc
xchg
fnstsw
lcall
jge
xchg
frstor
jp
pop
jno
pop
add
mov
pop
clc
pop
int
adc
insb
pop
out
fldenv
cmp
fidivl
jns
mov
in
push
popa
pop
shlb
shl
ja
and
enter
dec
aad
cmpsb
xchg
jecxz
test
mov
mov
cmp
sub
mov
pop
mov
out
xchg
cmp
mov
sahf
sub
movsl
push
nop
out
mov
push
cmp
mov
xor
sub
or
insl
push
lret
push
or
inc
fstl
pop
push
add
out
adc
das
pop
fnstsw
frstor
xchg
jb
movsb
test
push
in
mov
mov
testb
fucom
pop
adc
add
call
sub
push
jle
jbe
mov
outsl
and
mov
ret
lahf
stos
sub
in
xchg
mov
xchg
or
lret
inc
lahf
in
lret
in
pushf
mov
cmpsb
loope
scas
popf
or
arpl
jb
mov
pop
das
rolb
xchg
testb
inc
inc
scas
add
out
pop
outsl
cs
add
ss
mov
inc
mov
sub
xchg
push
and
dec
cmp
sbb
ljmp
mov
push
mov
sbb
jmp
dec
test
sbbl
sbb
mov
repnz
jne
lcall
in
inc
xchg
les
stos
lcall
mov
inc
stc
mov
inc
cmpsb
mov
inc
icebp
mov
test
inc
jmp
les
mov
out
in
cmpsl
xchg
xor
mov
test
xorl
xchg
xlat
repnz
rorb
pop
repnz
orl
xlat
mov
pop
out
lds
mov
mov
cmpsb
add
push
sub
std
jp
sub
jnp
xchg
xor
add
iret
cmpsl
je
aaa
xchg
push
xchg
aad
rcrb
mov
orb
cmpsb
xor
adc
aam
mov
leave
push
cmp
fsub
es
loop
test
cs
cmp
xchg
test
pop
or
repnz
sbb
push
scas
xor
and
scas
mov
cwtl
mov
add
lock
adc
cmpl
mov
int3
jo
add
push
sub
jno
insb
enter
out
and
xchg
scas
lcall
call
jecxz
lret
jae
jns
pop
cwtl
mov
pop
add
xor
ret
xchg
jae
adc
sub
push
outsb
fs
jecxz
movsl
addr16
ss
decl
jbe
xor
mov
stc
in
lock
sahf
cli
mov
mov
cmp
push
int
test
sbb
mov
scas
push
push
ss
adc
push
xchg
leave
xor
in
jecxz
pop
aas
cld
shrb
push
cld
inc
mov
add
movsb
sbb
int
xor
jecxz
jbe
sub
leave
adc
fiaddl
pop
push
fiaddl
xchg
pusha
mov
icebp
sub
das
jl
mov
cbtw
or
movsb
sbbl
mov
pushf
sti
xchg
cmp
pushf
xor
mov
insl
popa
dec
xchg
cmp
pop
mov
and
mov
leave
rcpps
testl
fcmovne
adc
cwtl
xorl
jl
push
lret
orl
pop
cmpsl
dec
lcall
in
ljmp
sub
mov
mov
add
sub
sbbb
adc
sbbb
ljmp
scas
xchg
pop
jp
xchg
out
test
inc
sbb
inc
or
in
lods
push
add
rcrl
clc
xchg
pusha
lcall
xorb
inc
sub
jbe
std
mov
cmp
cltd
sub
shrb
lods
orb
xorl
cld
sub
repz
sub
les
mov
or
mov
xchg
add
mov
mov
shlb
scas
dec
mov
movsl
xor
stos
ljmp
loop
arpl
cmp
xor
mov
out
sub
and
mov
jecxz
lods
cmc
out
es
add
jmp
mov
cmp
dec
into
lods
push
enter
inc
xchg
mov
push
sub
adc
push
xor
das
ficoms
jb
out
bound
leave
shll
enter
inc
sarl
pop
rolb
fdivs
out
shrl
clc
iret
push
in
mov
addr16
or
jae
mov
pushf
add
loope
in
aam
inc
fcmovb
daa
test
ficomps
fdivrs
sub
iret
daa
xor
fxch
das
add
mov
dec
adc
ss
adc
cmpsl
sar
cli
fstps
push
mov
jle
sti
lcall
push
aaa
mov
xchg
mov
xchg
stos
mov
jne
roll
imul
cmpsb
std
out
int3
in
pop
jo
jb
cmp
loop
or
mov
jae
xor
sub
subl
fsubrl
inc
and
jp
addr16
data16
lcall
or
mov
sub
mov
cmovg
lcall
sarb
push
inc
adc
sbb
or
out
test
bound
test
dec
in
or
pusha
push
fadd
add
daa
inc
xor
mov
mov
stos
sbb
push
xor
and
scas
jbe
scas
mov
and
sti
or
add
pop
ss
mov
test
or
clc
mov
mov
insl
xor
sbb
add
arpl
test
jecxz
mov
xchg
fildl
mov
movsl
int
adc
pusha
jbe
std
xchg
sub
inc
jecxz
pop
out
pop
add
repnz
dec
out
pusha
scas
mov
mov
mov
xlat
xor
mov
xor
push
xchg
sbb
adc
test
xor
mov
xor
jae
fisttps
cmp
mov
dec
mov
fldcw
jae
loop
int3
sahf
jns
mov
cmpsb
in
sahf
inc
daa
out
les
jle
sbb
icebp
sbbb
jmp
ds
push
lock
in
mov
rcrb
fwait
or
dec
and
jp
sbbl
cmpsl
cltd
push
mov
gs
jp
stos
aaa
lcall
daa
mov
test
stc
mov
cwtl
mov
les
ffree
mov
lods
cmpsb
jmp
mov
inc
jl
inc
mov
push
cs
sbb
pop
sbb
sarl
shlb
clc
pop
cmpsl
stc
fidivrl
std
adc
push
test
dec
push
push
sahf
pusha
add
xchg
icebp
inc
negb
jns
dec
rorl
sahf
or
test
dec
or
notb
outsl
xor
fidivs
subb
push
sahf
sbb
jbe
in
sub
push
js
daa
addr16
out
cld
pop
and
mov
rol
loop
cwtl
inc
iret
fistpll
imul
roll
arpl
test
jge
xorl
add
cwtl
fstpl
in
sub
out
inc
mov
mov
adc
ror
pop
fsubl
sub
rcll
cmc
pop
sub
adc
mov
dec
add
mov
movsl
add
pusha
mov
mov
mov
gs
insl
mov
hlt
sub
das
xchg
cwtl
addr16
fcoml
and
jne
lods
xchg
das
ja
subb
mov
xchg
mov
dec
cmpsb
fs
xchg
add
and
dec
mov
out
mov
ficoml
call
pop
pop
mov
pop
adc
mov
bound
mov
sbb
into
sbb
dec
ja
pop
mov
movsl
jns
test
jle
les
fstpt
mov
cli
xchg
test
lcall
and
stos
dec
mov
aad
incb
hlt
loop
mov
fwait
dec
sbb
jnp
in
xor
cmp
add
ds
mov
add
dec
lahf
adc
sub
insl
mov
push
movsb
mov
add
js
push
mov
shll
sahf
ljmp
sahf
outsb
lahf
idiv
push
fs
or
sahf
mov
mov
push
mov
cmp
sahf
xchg
jno
adc
rcr
int3
cmc
notb
fs
loop
sahf
dec
jp
mov
xorl
mov
scas
lahf
dec
stos
imulb
fucomi
outsb
jo
pop
loopne
xchg
xchg
mov
mov
adcl
pop
icebp
roll
in
pop
jge
pop
mov
sub
inc
add
inc
stos
lret
push
clc
lahf
aaa
push
or
outsl
popa
and
or
jbe
mov
cmc
jbe
in
mov
rclb
mov
shll
scas
outsb
mov
in
jbe
insl
mov
inc
lods
pushf
hlt
sbb
jbe
push
mov
sbb
daa
fbstp
mul
add
adc
xchg
sub
int
shrl
sahf
es
add
aad
mov
fs
sub
dec
jle
lcall
xchg
cwtd
loop
mov
push
scas
and
and
adc
mov
and
stc
cmpsb
pop
cld
inc
test
sub
sbb
je
mov
xchg
and
clc
insl
dec
cmp
test
lret
gs
cmc
leave
out
fwait
xorb
in
mov
out
xchg
fisubrs
ljmp
fstps
cmc
lods
cwtl
or
jbe
outsb
mov
sub
lea
mov
cwtl
push
push
push
jge
mov
sbb
fcoml
cmp
loope
rorb
mov
cmpl
mov
xor
dec
push
push
and
mov
cmp
shll
mov
imul
add
push
imul
cmpsb
xchg
mov
cmpb
sub
mov
lods
mov
lcall
mov
xchg
insl
nop
inc
sarl
out
adc
ret
les
xchg
imul
sub
sub
push
into
mov
pusha
stc
outsb
in
mov
sahf
scas
test
je
add
cmp
jle
push
sahf
mov
push
jnp
icebp
in
scas
sti
fwait
xchg
mull
cmpsb
popf
pop
cmpl
xchg
je
pop
ret
fisubrl
stos
xchg
notl
xchg
int3
xchg
scas
mov
xlat
xor
mov
cmp
rep
lods
fwait
push
xor
or
add
pushf
sbb
xchg
stos
sub
test
cmp
shlb
mov
dec
addb
std
icebp
icebp
or
stos
fwait
out
push
in
test
mov
stc
ljmp
fistl
sub
mov
andb
jmp
dec
add
fwait
sub
aad
mov
fsubs
mov
fistpl
lahf
mov
mov
rolb
lock
lds
call
test
fdivs
lock
add
mov
fidivl
pop
rol
cli
test
fdecstp
loop
pop
cmp
test
cmc
dec
cmpsb
add
adc
fistl
or
out
xchg
mov
iret
sbb
scas
mov
jae
sub
outsl
mov
add
nop
mov
jp
sbb
bound
adc
in
xor
ficomps
ret
arpl
cmp
shrb
dec
stos
ss
fdivrl
or
in
jnp
shll
xor
mov
negl
in
into
add
mov
lock
adc
mov
push
sbb
jecxz
mov
shl
fisubs
xor
xor
shl
mov
fisubl
fldenv
pop
js
push
sub
mov
stos
iret
das
adc
push
lods
mov
test
push
test
sub
and
jmp
dec
fiadds
jg
xorl
jnp
rorb
xor
mov
mov
xor
repz
jl
lods
jg
xchg
movsl
pop
cltd
pop
add
aaa
mov
or
mov
cld
mov
ficoms
add
dec
je
add
xchg
data16
sbb
sub
mov
pushf
stc
iret
scas
inc
mov
sbb
pop
mov
loope
add
inc
or
es
imul
fdivp
adcl
mov
mov
ljmp
sub
rorb
ret
mov
movsb
fbstp
jb
enter
dec
mov
xchg
xor
dec
add
xchg
sti
jnp
rorb
mov
jb
fst
call
lret
lcall
ss
negb
and
and
shl
imul
lcall
rcrb
cmpsb
push
push
sub
xchg
outsb
xor
enter
cmp
mov
push
addr16
and
fnstcw
xlat
ljmp
and
ja
jo
sbb
add
inc
les
inc
inc
and
adc
ss
sub
sub
je
sub
addr16
xlat
sbbl
hlt
ljmp
sahf
nop
aad
xchg
sti
mov
jbe
lcall
sbb
inc
mov
dec
aaa
lret
pop
sub
lds
dec
out
push
adcl
inc
and
repnz
inc
pop
cli
pop
xchg
mov
jmp
aas
in
xchg
lret
mov
insb
in
jge
mov
in
sti
xor
fldt
int3
mov
jecxz
push
or
rorb
cmp
sub
jl
push
pushf
mov
dec
lods
add
sub
and
fldt
push
cmp
popf
inc
push
stc
je
ret
jae
mov
cmp
popa
aas
ja
pop
mov
push
js
scas
scas
ror
mov
and
int
popf
push
sub
sub
clc
push
cmp
fadds
scas
stc
push
xchg
dec
clc
inc
idivl
push
sar
inc
mov
cltd
movb
xor
xlat
fisttps
adc
pop
stc
adc
mov
fimuls
add
adc
andb
pop
add
repnz
into
cmpsb
cli
int3
js
jmp
cmp
popf
and
push
test
negl
jecxz
fxch
out
adc
cmp
lods
pop
fimull
xchg
dec
call
outsb
mov
rcrb
mov
fcmove
pop
test
or
cmp
dec
xchg
sbb
in
push
sbb
xchg
jmp
jno
aaa
cmpb
int
sbb
pop
negb
sbb
mov
push
push
shll
jb
out
lock
sbbl
inc
cmpsb
fisubl
mov
rcrb
pushf
loopne
fwait
jle
test
sub
dec
mov
in
mov
mov
pop
leave
xchg
xor
and
shr
fs
xor
xor
mov
or
adc
in
inc
push
sub
and
mov
mov
cmp
cmpsb
inc
xor
pop
mov
fcmovu
lds
test
or
xlat
test
cltd
dec
ja
orb
loop,pn
mov
lods
in
xor
pop
fsubrl
xlat
icebp
pop
out
cmpsl
cltd
movl
mov
movl
jae
mov
test
jno
pop
xchg
adc
pushf
mov
add
sub
mov
bswap
sahf
imul
mov
fcomp
sbb
test
int
inc
enter
inc
mov
in
stc
into
mov
sahf
cmc
scas
shll
mov
out
cwtl
cmp
test
lds
arpl
mov
imul
xchg
imul
mov
lea
adcb
adc
subb
out
icebp
lcall
icebp
in
aaa
sub
lret
movl
sbb
mov
test
pop
movsb
mov
inc
stos
cltd
es
popaw
idivb
cs
jnp
cmpsb
cmp
or
lret
xor
fnsave
pop
in
pop
bound
gs
cmp
aam
xchg
stos
push
dec
test
jg
xchg
push
out
sarb
sbb
fisubrs
push
leave
in
testb
fxtract
loopne
dec
leave
ljmp
mov
mov
dec
movsb
scas
jo
xchg
jle
in
and
inc
mov
in
jle
cmpsl
clc
add
fcoml
adc
loope
dec
inc
sub
in
sub
xchg
stos
movsb
ljmp
cmpsl
test
ret
or
xchg
test
rolb
test
mov
imul
push
push
pushf
ret
mov
clc
jecxz
stos
push
popf
cld
bound
xchg
mov
std
mov
outsl
or
mov
sub
jae
and
push
jecxz
jge
mov
mov
xor
cli
and
push
lret
insb
jg
lods
in
mov
cltd
ret
sub
cmp
xor
or
mov
cltd
stos
pop
leave
inc
push
mov
mov
cmc
pop
popf
sahf
inc
stos
xor
ret
xchg
adc
stos
fsubrl
jmp
clc
int
std
cli
stos
mov
aaa
repnz
data16
in
popf
cmp
xor
call
ss
jae
cmp
cmp
cwtl
pop
scas
adc
mov
or
subl
sub
imul
xchg
mov
mov
jl
popa
sti
ds
imul
movsb
fbld
test
stc
mov
add
pushf
mov
dec
lcall
repnz
or
mov
popa
mov
add
and
sbbb
nop
rorb
xor
das
das
add
pusha
push
lea
jge
inc
aaa
int
pop
jge
ret
jle
fdivr
jns
dec
sbb
mov
sbb
movsb
sub
dec
xchg
jb
shlb
imul
xor
jl
and
sahf
dec
jl
lds
sub
pop
sbb
repz
dec
jnp
sub
sub
enter
loopne
mov
popa
sub
jmp
lahf
cmp
xchg
push
xchg
mov
mov
mov
lods
mov
or
call
mov
mov
in
and
into
repnz
iret
stos
bnd
and
mov
ja
enter
sbb
enter
sahf
jge
mov
xor
or
mov
scas
fwait
decb
cmp
mov
fs
leave
cmp
mov
xor
add
pop
nop
dec
bound
rorl
pop
push
xchg
add
pop
inc
jns
inc
inc
cmpsl
and
inc
aad
push
push
sub
mov
inc
fdivl
fwait
and
and
mov
arpl
mov
mov
mov
mov
les
addr16
cmp
cmp
fucomp
mov
leave
movsl
out
lahf
dec
push
out
das
pop
add
push
xchg
les
and
mov
cmc
pop
lods
mov
shlb
daa
mov
cli
sub
sbb
sbb
outsb
outsl
movsb
out
xor
mov
mov
inc
mov
cs
aam
or
loop
icebp
xor
or
insb
repnz
jg
add
and
rolb
mov
clc
dec
loopne
push
stos
dec
cmp
mov
loope
iret
mov
lds
cmp
shll
aad
fdivr
jno
hlt
xchg
xchg
popf
cmp
cmp
xchg
data16
lds
dec
lcall
ret
mov
push
lret
jne
xor
clc
outsb
in
jge
pop
cld
jge,pn
xchg
in
jbe
fimuls
push
fcoml
adc
out
xor
and
rorl
scas
loope
fyl2x
push
inc
jbe
cmp
pslld
cli
out
jae
inc
fisubrs
jae
push
jle
pop
jl
cmpsb
push
adcb
cmp
and
mov
and
pusha
inc
out
xchg
ss
outsl
jle
test
inc
ljmp
mov
xlat
fs
pop
test
adc
mov
clc
cmp
ja
jne
lods
ficoms
mov
xchg
idivl
jns
push
push
into
or
and
add
xorb
cmp
cmc
or
lahf
dec
ret
sbb
lods
pop
and
push
mov
pop
and
jb
pushf
mov
cwtl
ljmp
sub
test
xchg
nop
cmp
add
test
lds
loope
shll
into
push
cli
into
out
fnstcw
push
fmull
jbe
out
pinsrw
xchg
mov
inc
sbb
dec
int3
lods
push
xor
cmc
outsb
xchg
std
or
sub
and
mov
popl
adc
hlt
rcrb
mov
icebp
mov
and
scas
sub
popa
std
xchg
xor
enter
leave
in
test
jmp
int3
fdivrs
xor
jp
xchg
inc
movsl
cmp
ljmp
push
ja
subl
or
loopne
outsb
xor
test
cmp
addr16
in
lret
mov
ret
lcall
xor
nop
jle
imul
movsl
dec
stos
das
xchg
fwait
mov
cli
mov
andb
lds
cli
push
das
dec
lods
into
jmp
cmp
popf
and
ret
pop
aam
pop
popf
fs
pop
test
clc
xchg
mov
insl
push
xchg
data16
jno
mov
mov
inc
loopne
mov
vmovapd
test
adc
pop
mov
fimull
jmp
xor
sbb
dec
mov
sub
xorb
sahf
jb
roll
xchg
cmovne
push
add
sub
stc
into
in
fnstenv
fstp
lock
add
notl
mov
lods
mov
sub
xor
add
or
sub
out
sarl
push
push
dec
ret
mov
ss
shll
sub
mov
rcll
pop
in
repz
jmp
push
mov
xchg
adc
hlt
cmp
mov
nop
lods
inc
cli
mov
pop
cltd
leave
lret
lret
cmpsl
and
lods
rclb
jb
add
jle
pop
fdivs
xor
xchg
stos
or
lods
push
adc
ficoms
in
iret
cwtl
inc
push
cmpsb
push
popa
pop
mov
xor
ret
pusha
divl
mov
inc
adc
cmc
or
test
fists
inc
inc
test
dec
inc
mov
push
repnz
addr16
fcoml
aad
mov
xor
fcmovnbe
and
iret
push
mov
cmp
out
mov
sahf
mov
mov
fwait
inc
insl
hlt
scas
sub
pop
xchg
jns
addr16
rcrb
and
sub
bound
mov
jmp
dec
dec
xor
shlb
mov
xlat
fstps
cmc
mul
popa
cmp
cmp
aaa
cltd
shll
xor
into
insl
loope
push
int
rorl
xchg
inc
test
repnz
mov
dec
test
stos
imul
ficompl
cltd
rcrl
sub
adc
cmpsl
and
pop
sbb
xor
cmp
leave
mov
push
jbe
addr16
push
test
lea
lahf
mov
punpcklwd
jnp
xor
movsb
aam
movsl
pop
mov
inc
mov
data16
add
fcmovb
lahf
andb
push
or
fsubrp
sub
pushf
mov
cwtl
pop
icebp
loope
das
push
adc
mov
mov
sbb
jl
lcall
push
sub
xchg
das
into
outsb
icebp
addb
or
icebp
mov
enter
xchg
dec
adc
aaa
cli
jge
add
xor
sarl
shlb
pushf
cmp
sbb
dec
lret
xchg
cmp
mov
sbb
into
cld
cwtl
dec
jnp
daa
lods
repnz
dec
cmpsb
mov
push
mov
loop
jae
xor
out
sub
adc
xchg
and
cmpsb
stc
filds
mov
lahf
jge
iret
inc
popf
push
lret
fcmovbe
xchg
lahf
daa
repz
dec
mov
pop
pop
out
or
loop
out
fcomip
inc
pop
sahf
inc
jbe
sbb
sbb
mov
fisubrs
ret
iret
and
sub
stos
or
and
xor
xchg
jns
in
ror
subb
jb
add
mov
mov
aam
lea
repz
dec
ficoml
rolb
push
jne
adc
push
enter
jecxz
lret
ljmp
scas
std
ja
fdivl
mov
sbb
clc
jmp
push
mov
scas
mov
sti
es
shrl
add
mov
sbb
in
sbb
in
pop
pop
out
lea
sbb
sbb
test
xchg
loopne
fs
test
mov
xchg
push
scas
or
push
xchg
mov
push
mov
mov
jge
sahf
es
jecxz
nop
js
lods
cmpsb
mov
rcr
lahf
dec
stos
mov
or
cmp
mov
clc
xchg
jnp
test
push
sti
push
xchg
push
mov
scas
mov
add
sbb
test
stos
aad
fldl
nop
cli
orl
test
scas
mov
cmpsb
and
repnz
in
cmp
imul
adc
dec
push
rolb
mov
dec
loope
dec
xor
pop
jbe
es
rorl
mov
sbb
int
jbe
lcall
mov
xlat
jbe
push
xchg
jb
push
dec
xchg
add
or
aas
cmpsb
data16
adc
pushf
mov
pop
inc
and
sub
jmp
je
jmp
mov
aas
xor
sahf
pop
sub
lods
cs
lods
jecxz
adc
pop
adc
sbb
and
mov
add
loope
push
in
rolb
mov
mov
inc
dec
mov
push
xor
adcb
sarb
push
lcall
aam
xchg
aam
mov
cwtl
mov
jnp
xchg
or
sub
sbb
pop
cwtl
inc
pop
push
sub
lcall
add
shr
loopw
lods
pop
insb
or
xchg
int
sahf
mov
mov
sarb
sub
cwtl
lret
mov
insb
jg
arpl
xchg
bound
lea
xchg
mov
adcl
dec
lods
test
test
cmp
inc
popf
hlt
mov
stc
iret
inc
insl
out
popf
xlat
xchg
scas
fwait
aas
hlt
or
xchg
clc
adc
sbbb
lock
jecxz
rol
repz
test
enter
std
in
mov
mov
jmp
aad
iret
call
in
jns
mov
lds
out
repnz
and
mov
and
das
fstpl
fnstenv
mov
mov
mov
xchg
out
imul
xchg
sarb
push
push
and
push
mov
es
mov
push
jmp
sbb
fmull
lret
mov
cld
loop
loopne
gs
xchg
sub
or
mov
cmp
pop
lods
les
loopne
shlb
cmp
add
repnz
in
push
sbb
ret
sbb
xchg
jae
flds
xchg
arpl
data16
lock
les
icebp
cmp
cmpsb
out
or
jns
not
jnp
cs
decl
cmp
mov
loope
aad
and
mov
fs
dec
orl
push
adc
sub
shlb
jge
add
into
mov
imulb
mov
and
mov
mov
lds
leave
dec
daa
jns
test
das
xchg
mov
lds
dec
dec
mov
cli
cs
or
fidivrl
rol
enter
insb
sbb
rolb
icebp
adc
imul
push
cmc
xchg
cmp
jl
pusha
xchg
cmpsl
jmp
hlt
mov
loope
lea
xchg
hlt
xor
popf
loope
mov
arpl
fsubrs
cld
pop
test
inc
jae
pushl
xchg
jno
and
mov
mov
or
sti
adc
movsb
lea
lahf
iret
cmpsb
jbe
sub
cmpsb
insl
xchg
rcrl
add
popf
lea
sub
cmp
push
add
dec
fstps
ja
xchg
add
mov
inc
jno
fs
cmp
mov
ret
inc
mov
cmp
mov
sub
sahf
and
adc
stos
daa
imul
mov
into
mov
mov
xchg
mov
clc
cmp
sahf
adc
mov
jl
or
aam
mov
es
insb
testb
scas
jmp
pop
loopne
pop
es
fucomi
adc
pop
or
test
or
pushl
std
and
xchg
push
lret
xor
sbbb
sahf
sbb
adc
out
mov
repnz
mov
subl
pop
pop
mov
xchg
add
pushf
or
mov
repnz
movsb
nop
push
iret
add
nop
addl
sbb
cmpb
cli
lock
movsb
add
aad
lods
xchg
aaa
sbb
mov
jno
fidivs
pop
clc
shlb
or
add
jg
shlb
les
mov
jecxz
mov
faddp
mov
push
mov
adc
push
int
pop
mul
ljmp
sbb
and
push
mov
jg
push
or
jne
sub
sbb
test
cltd
or
xchg
inc
fwait
cmpsb
xchg
out
aas
pushf
adc
rdmsr
ja
out
arpl
adc
jp
ja
dec
insl
cmp
sbb
mov
sub
sub
xor
lods
mov
mov
jmp
push
out
test
push
fcmovb
mov
mov
push
adc
fmull
lods
cmp
es
icebp
xchg
das
inc
lahf
dec
pop
mov
loop
add
sub
test
pusha
jmp
mov
mov
pop
push
push
dec
movsb
push
outsb
jg
jo
std
mov
fstpt
insb
lcall
mov
lea
jb
lret
jns
test
add
or
add
in
loope
lcall
cmp
mov
dec
mov
adc
mov
das
lods
jae
dec
subl
xchg
jge
jbe
push
shrl
loopne
cmp
mov
es
daa
xor
inc
xchg
adc
mov
adc
adc
jbe
lods
js
in
mov
cmp
lods
mov
mov
add
aas
mov
mov
addr16
ficompl
shl
stos
outsb
rclb
push
jecxz
pop
cmpsl
mov
lret
push
jle
pop
addr16
punpcklwd
out
lcall
pop
pop
mov
add
xchg
cwtl
into
daa
sub
lret
inc
jno
sub
xchg
adc
stos
movsl
shrl
add
xchg
xchg
and
mov
xchg
js
jnp
jne
rcl
sbb
arpl
les
mov
xor
scas
mov
mov
xchg
movsb
jns
les
das
mov
cs
div
mull
mov
cmp
loopne
mov
mov
js
cmp
rcr
inc
or
mov
imul
jne
cld
lcall
or
pop
loopne
jae
loopne
call
int
nop
sbb
push
in
stos
lret
lcall
and
scas
in
mov
mov
imul
addr16
jle
push
cwtl
lret
test
push
std
lods
rolb
cmc
shr
outsl
or
jmp
pop
lods
adc
jbe
xor
in
roll
mov
aas
lea
in
lcall
test
movsb
mov
outsb
int3
lock
mov
sbb
mov
pop
stc
inc
adc
xchg
ds
mov
out
push
fsubrs
lcall
xor
cmp
addb
dec
sarb
pop
int3
por
mov
and
lahf
jg
pop
pop
out
lods
lret
lds
int
add
mov
loopne
in
aaa
jmp
xchg
push
mov
scas
fstpt
xchg
scas
test
dec
inc
lods
imul
sub
fst
add
xchg
jnp
and
out
mov
jnp
vpmacswd
and
xchg
cmp
cwtl
rorl
scas
ljmp
xchg
jl
data16
loope
in
js
fs
cmp
inc
mov
popf
mov
shrb
cmp
xchg
add
xchg
xor
fisubrl
mov
dec
fcomp
scas
mov
mov
mov
lods
aam
mov
mov
or
add
sub
test
jo
adc
in
ss
cmpsl
xor
fnstsw
mov
in
rcrl
ljmp
aam
push
test
jno
cmpsl
mov
jge
pop
shll
lods
jecxz
mov
jo
jge
rol
cmpsb
push
push
pop
mov
mov
lock
add
mov
js
lds
push
push
lock
in
adc
enter
lcall
movsb
in
hlt
lret
cs
fxch
mov
testl
addps
nop
jg
lret
xor
jno
insb
int
jno
stos
lods
mov
fwait
push
lods
and
or
xchg
mov
rcrl
jne
cmc
mov
mov
pop
sbb
xchg
daa
leave
mov
cmp
lret
hlt
xchg
in
mov
xchg
mov
or
shl
fld
ret
mov
mov
les
mov
xchg
pop
gs
out
adc
cltd
inc
mov
and
inc
xchg
or
int3
mov
xor
lods
pop
sbb
pop
aaa
push
cwtl
shll
rcl
jp
lea
add
test
in
into
js
js
cmp
xchg
ja
pop
mov
mov
je
insl
dec
ss
out
sbb
inc
mov
mov
daa
pop
pop
adc
push
jnp
mov
mov
es
jg
icebp
jle
xchg
adc
outsb
sbb
xor
mov
je
scas
pusha
mov
xor
mov
scas
cmpsb
add
push
lds
call
cmpsb
repnz
out
mov
lcall
data16
dec
lahf
insl
jb
or
leave
fucom
scas
adc
div
and
inc
or
mov
mov
shrb
ljmp
jo
hlt
add
sahf
aaa
out
xchg
jo
in
stc
mov
rcr
orl
es
clc
mov
loope
adc
mov
out
dec
jmp
pop
mov
into
lahf
test
pushf
mov
adc
popf
jmp
cmc
xchg
mov
dec
cld
jmp
mov
push
sub
cld
mov
push
mov
mov
ljmp
std
sbb
lds
outsb
pop
outsl
in
jo
in
nop
inc
iret
adc
mov
fidivs
in
loopne
cmpsl
daa
shl
mov
xchg
cwtl
mov
jo
loop
test
ja
or
dec
lcall
cld
addb
lds
mov
aad
jnp
xor
mov
pop
sub
cmp
shl
sub
into
ja
loopne
pushf
shrl
cltd
pop
mov
loopne
xor
loop
add
xor
je
je
xor
outsb
mov
shrb
sarl
aad
push
pop
cmp
or
in
sbb
or
xchg
aad
sub
mov
andl
xchg
cmp
lea
aas
pop
dec
mov
es
jo
test
clc
xchg
adc
sbbb
pop
jae
pusha
call
scas
rorb
fs
cmp
jp
lret
jle
sub
lods
sub
mov
fwait
xchg
imul
in
jp
jl
hlt
jne
mov
cwtl
fwait
mov
mov
jle
cmpsl
scas
mov
pop
add
xchg
data16
add
jge
test
mov
pushf
cmp
lcall
add
mov
insb
and
lea
push
jmp
mov
sub
push
jnp
sub
or
cs
mov
cmpb
xchg
jmp
push
push
push
push
fstpl
fisttpl
orb
pop
jp
pop
js
shrl
mov
loopne
and
lods
cmc
jmp
lods
outsb
in
mov
cmp
pop
mov
cmc
jge
and
imul
lcall
stos
sbb
sbb
mov
or
mov
ds
xchg
and
pop
addr16
frstor
and
stos
loopne
mov
push
cmc
jns
push
cmp
inc
xor
xor
ret
scas
mov
int3
or
sub
das
je
or
fld
pusha
mov
data16
mov
shll
stos
aas
outsb
mov
ljmp
inc
out
push
loope
out
cmp
into
out
mov
in
cltd
cmp
or
sub
movsl
out
movsb
mov
jbe
dec
and
in
xor
repnz
or
or
mov
scas
mov
les
aad
inc
add
sub
lret
cmp
loop
sub
bnd
adc
adc
xchg
inc
adc
leave
inc
or
jmp
frstor
adc
jno
sahf
test
add
mov
lcall
call
mov
jne
outsl
jp
cs
mov
add
cmc
and
pop
das
pop
xchg
and
cwtl
gs
pop
mov
dec
ss
cmc
sub
or
inc
mov
daa
icebp
dec
pop
mov
push
stc
mov
jecxz
or
cmp
rcl
sbb
mov
jp
or
jmp
sbb
loop
jg
les
push
aad
inc
scas
xchg
out
ret
rolb
pop
pop
je
xchg
push
inc
xor
mov
test
mov
cmp
movsb
cmpsb
adc
je
popa
aaa
xchg
pop
mov
out
fld
scas
sub
xor
rcl
fsubrs
sub
stos
sub
stos
push
dec
daa
mov
lds
ret
scas
inc
push
sub
mov
or
fldcw
std
mov
mov
repnz
mov
bound
push
aam
adc
xchg
mov
sti
xlat
rolb
test
ret
loop
adc
ja
xchg
mov
stos
movsl
call
lods
xchg
push
mov
push
gs
cmpsl
in
out
mov
roll
xchg
pop
xchg
and
popf
sahf
popa
push
fildl
lea
movsb
pop
push
fisttpll
loope
outsl
mov
xchg
stos
mov
rorb
inc
xor
insl
xchg
add
inc
xchg
insl
push
ds
mov
lcall
pop
scas
je
scas
add
xor
shlb
and
inc
mov
mov
jb
mov
mov
inc
je
repz
xchg
mov
push
iret
clc
shll
mov
xlat
test
mov
jnp
lcall
insl
inc
and
fsts
add
lret
cmp
adc
iret
fiadds
insl
and
jne
ss
outsl
jns
pop
pusha
adcb
iret
lods
ss
dec
scas
dec
mov
inc
dec
jb
inc
lea
das
mov
jne
mov
notl
test
jl
xchg
scas
push
popf
mov
push
and
mov
mov
xorb
push
xor
inc
popf
xor
push
sbb
jae
fisubs
sbb
ficompl
push
pushf
add
push
jne
push
dec
add
icebp
imul
test
or
enter
in
ret
scas
mov
add
enter
out
idivl
mov
das
in
mov
push
lods
pop
ja
xchg
push
push
movsl
bound
push
jns
fdivrs
sub
jb
vpperm
xchg
jmp
jg
jne
shrb
jp
cmp
jp
jl
ja
insl
push
icebp
repnz
pop
mov
xor
xor
cli
and
test
sub
fistl
mov
mov
outsl
ret
test
push
outsl
leave
sarb
adc
cmpsb
cwtl
mov
and
mov
stos
or
inc
sbb
push
cld
fwait
mov
cmpsl
xchg
add
scas
dec
shlb
and
out
test
sbb
push
mov
jne
mov
and
and
sub
test
xchg
and
add
je
pop
ljmp
mov
mov
push
adc
fldcw
push
sub
add
mov
dec
repz
mov
add
lods
dec
lahf
ffreep
shlb
iret
jo
icebp
push
js
mov
test
cmc
jp
mov
sub
mov
test
ss
adc
sbb
in
cli
mov
push
xchg
fsts
or
mov
test
stos
jno
or
hlt
jl
cmpl
add
inc
in
jne
movsl
adc
sbb
arpl
push
fs
mov
mov
dec
pop
cwtl
push
pop
inc
fs
xor
mov
mov
push
jl
stos
aad
stos
hlt
cs
les
jo
out
push
mov
sahf
in
dec
dec
pop
xorb
fadds
xchg
sub
js
fimull
mov
aam
cwtl
sub
gs
inc
popa
gs
rcrl
inc
in
hlt
fistl
add
loopne
inc
fidivrs
jae
mov
sti
shll
cmc
xchg
int3
icebp
test
imul
mov
push
add
mov
adc
mov
push
test
stos
in
roll
adc
sbb
loope
mov
jg
xchg
mov
icebp
or
ret
ljmp
fnsave
mov
roll
insb
sbb
aaa
dec
sub
sahf
xor
push
sahf
ret
sbb
std
xor
mov
xor
sub
iret
out
lcall
lret
mov
add
jp
jne
fisubrs
or
fdiv
cmp
pushf
adc
icebp
cmp
sub
inc
stos
pop
cmp
xchg
cmp
ret
testl
sbb
jle
dec
les
ret
test
subb
add
cmp
xchg
or
sub
shll
sbb
bound
aam
mov
sahf
dec
dec
orl
mov
adc
adc
outsl
xchg
scas
sub
mov
jp
mov
adc
cmp
faddl
es
mov
jle
jl
dec
mov
aaa
mov
movsb
cmpsl
sub
xchg
mov
shr
jmp
lea
lock
mov
cli
add
popa
ja
add
insb
out
flds
and
mov
lcall
or
mov
inc
or
in
mov
fisubrl
aad
call
test
push
or
jp
imulb
push
sbb
shlb
inc
out
dec
mov
dec
je
cmp
xchg
mov
mov
loop
nop
lods
or
and
add
pop
or
mov
sbbb
sbb
cmc
cmc
pop
xlat
in
mov
or
in
xchg
outsl
xchg
mov
sahf
out
cmpsb
lds
cli
lock
or
dec
mov
ret
icebp
outsl
add
jge
sbb
and
cld
add
and
or
sbb
movsb
pop
cmp
ret
mov
lcall
jmp
jmp
sbb
jno
mov
in
sbb
mov
stc
adc
sub
pop
jge
adc
jp
xchg
jnp
dec
cmp
adc
icebp
xchg
test
popf
stos
and
stos
dec
mov
mov
mov
pop
jl
lcall
jae
pop
pop
sbb
mov
jg
and
mov
aaa
cmpsb
das
xchg
pop
iret
cmp
xrelease
push
add
mov
push
jle
rcrb
and
cmp
pusha
outsl
add
cmp
es
popf
xchg
pushf
inc
inc
xchg
xchg
lods
inc
mov
adc
dec
mov
jl
jae
std
sahf
push
mov
push
sub
cmp
insb
test
pop
sub
jnp
jb
mov
xchg
dec
and
outsw
inc
pop
or
inc
mov
mov
imul
jge
pop
mov
inc
jo
dec
push
addl
es
lock
out
pop
mov
sub
mov
sbb
fisttps
in
mov
add
adc
inc
addr16
xchg
insl
aad
out
fldcw
es
sti
in
mov
popf
jne
dec
add
mov
ret
fmuls
jge
mov
inc
mov
cmp
mov
out
cmpsb
xor
mov
sbbl
scas
ret
xor
jne
sub
push
lock
pop
popa
out
push
jp
push
jle
inc
mov
xor
incl
push
mov
pop
sub
lcall
sub
jl
arpl
pop
and
xchg
jb
div
scas
add
sbb
inc
mov
std
mov
aas
pop
stos
jne
andl
enter
xor
in
add
inc
ja
lods
inc
push
insl
test
hlt
mov
pop
aas
mov
inc
sub
mov
vmovlps
not
push
nop
jne
scas
icebp
cmp
xor
icebp
movsb
xchg
lods
mov
xchg
jns
mov
mov
jg
cmp
lahf
pop
xchg
inc
sbb
jbe
fs
aaa
rorb
add
int3
dec
aaa
jae
lret
mov
rcl
shl
mov
aad
fsubl
je
icebp
subb
push
maxps
leave
sbb
and
add
add
adc
xor
fsubrl
mov
ficoms
daa
push
imul
push
repnz
std
pop
mov
sar
mov
xor
ljmp
stos
out
xor
pop
in
ss
sub
es
cs
adc
stos
daa
xlat
push
std
pop
std
mov
outsb
jp
sbb
jmp
push
add
sbb
and
mov
ja
sahf
xchg
dec
mov
sahf
je
mov
sbb
int3
and
jmp
cmpsb
xor
cld
testl
insl
lds
cmp
mov
mulb
jb
push
jmp
xor
push
mov
loopne
sarb
fcmovnb
and
lahf
adc
adc
dec
or
ja
mov
scas
push
subl
sti
mov
test
dec
data16
add
iret
cld
cltd
add
cmc
sahf
or
aas
loop
xor
or
imul
mov
hlt
cmp
cld
mov
pushf
xchg
orl
cli
scas
mov
sar
mov
or
pop
out
gs
inc
iret
jne
cmpsl
xchg
std
and
fldlg2
mov
fwait
iret
aaa
scas
daa
lret
aad
sub
fwait
jae
dec
pop
es
pop
jb
jns
mov
rclb
shr
insl
hlt
gs
iret
int3
scas
push
in
xor
add
mov
xor
add
fnsave
cmp
pop
sbb
lea
sub
adc
mov
rcrb
lret
lds
shrb
push
jmp
stos
in
sbb
xor
lods
aas
jp
xchg
je
pop
sahf
sahf
test
outsb
jo
repnz
jp
mov
aam
js
inc
in
push
xor
xor
push
es
test
fwait
ret
add
test
inc
jle
xchg
or
push
jns
outsb
xchg
dec
cmp
jo
es
adc
or
pop
cmp
int
das
adc
xchg
loope
fs
aad
sub
rclb
sub
push
rep
out
and
idivb
pop
inc
stc
dec
test
loope
addr16
dec
in
cmp
push
and
fadds
pushf
or
and
daa
adc
inc
fdivr
jne
mov
in
in
cs
inc
xor
mov
sbb
lods
fidivrs
inc
push
adc
jns
or
aaa
dec
nop
push
mov
dec
in
or
mov
cmp
das
mov
mov
insb
stos
insb
sbb
xor
mov
lods
and
or
aas
aaa
stos
add
fsts
jbe
mov
lock
pop
sub
dec
inc
sbb
sub
or
insb
test
cmp
adc
jno
mov
pushf
into
and
add
add
xchg
cmpb
lods
jbe
js
fldenv
ja
stos
insb
cwtl
ljmp
pop
mov
mov
bts
mov
out
push
jge
popl
js
cmp
push
mov
and
pop
test
in
rorb
mov
mov
mov
pop
push
test
cli
inc
adc
insl
pop
pop
push
aad
scas
xlat
div
mov
jne
add
xchg
rcrb
push
dec
enter
lock
cmpsb
pmaxsw
and
je
aas
adc
fisubrl
pop
pop
mov
stc
dec
jmp
cmp
inc
mov
ffree
int3
out
jmp
shll
outsl
sarl
addr16
fsubrs
jbe
cmpsl
dec
jp
out
lock
fistpll
adc
xchg
fucomi
rcl
mov
insl
inc
push
roll
pushf
loop
or
inc
mov
cmp
stos
sub
jnp
xor
push
xchg
cld
dec
bound
data16
pop
clc
lock
cwtl
adc
rorl
xchg
sbb
adc
or
xlat
out
insl
xchg
mov
mov
jge
lock
lret
pop
call
pop
sbb
jno
push
movsb
xchg
outsl
push
adc
cmc
ds
lcall
outsl
jecxz
je
in
rcrb
mov
pop
dec
repnz
test
ds
jb
rorb
mov
leave
lcall
xchg
mov
inc
into
testb
call
loope
mov
hlt
pop
stc
sbb
xchg
mov
das
and
xchg
cld
in
xchg
pop
mov
enter
movsl
jmp
ret
not
cli
fwait
xchg
xchg
fsub
fdivp
test
or
sub
lret
enter
aad
and
or
mov
ljmp
xorl
ss
mov
les
stc
cltd
int
mov
jmp
mov
mov
rcl
hlt
add
cmpsb
movl
mov
rcrb
add
mov
mov
int3
dec
cltd
out
enter
pop
push
mov
pushf
rcl
jne
fs
sbb
jbe
lahf
adc
mov
push
test
xchg
adc
cwtl
shlb
test
bnd
test
dec
pop
inc
leave
inc
fwait
scas
pop
ljmp
cmp
or
and
cmp
mov
clc
pop
mov
idivb
aaa
aas
xchg
jbe
sub
insl
and
lds
fdivr
cmp
or
orb
xorb
jns
jg
inc
out
jb
sbb
out
aad
or
xorl
out
cld
lea
push
lea
mov
in
lock
into
cmp
inc
fldenv
aam
repz
testb
leave
pushf
add
rol
push
pop
or
mov
fwait
outsb
mov
stos
movsb
adc
lds
test
out
and
cmc
xchg
shrl
xchg
mov
jmp
dec
cmovne
xchg
test
cmc
cmp
cmp
push
scas
test
mov
or
mov
insl
stos
stos
lcall
insb
fmuls
outsl
scas
pop
xchg
xlat
movsb
in
mov
jl
in
in
aad
cmpb
test
scas
xor
mov
or
cmpsl
push
mov
mov
popf
mov
addb
mov
fcompl
xor
mov
mov
sbb
fldcw
lea
sub
mov
stos
fdivl
das
adc
out
fdecstp
push
shrl
xlat
mov
jo
test
mov
sbb
xchg
stos
loope
adc
mov
or
mov
das
in
mov
mov
fstpt
lods
xor
outsl
add
and
push
dec
cmc
lret
js
gs
mov
cmc
adc
shl
ficoml
lcall
xchg
fnstsw
mov
mov
and
add
ds
push
pushf
js
xchg
daa
pop
xchg
stos
jnp
scas
rorb
mov
fstpt
ja
pushf
dec
gs
inc
inc
ja
sbb
js
lret
gs
sub
adc
push
xchg
jmp
mov
popa
jl
lea
outsl
add
pop
push
pop
xchg
iret
lds
jno
insb
xor
mov
ss
dec
push
add
mov
and
and
xor
jno
in
sbb
add
arpl
jle
cmp
loop
cld
fisubl
and
jp
dec
jne
scas
pusha
xchg
cmpsb
mov
push
out
out
xor
add
out
insb
push
test
ret
lods
cltd
test
cmp
fldenv
pop
in
les
sbb
imul
int
or
loopne
icebp
push
mov
pop
nop
ja
jp
inc
and
jno
pop
mov
movsl
mov
jecxz
and
insl
test
push
je
sub
push
test
rorl
and
je
and
inc
inc
cwtl
xchg
and
sub
test
xchg
fisttpll
xor
jns
ret
cmp
icebp
mov
ret
insb
jno
lods
mov
mov
xchg
xchg
push
and
outsl
popa
out
sbb
hlt
aad
lahf
cli
cwtl
sbb
push
sbb
mov
or
mov
pop
cmpsl
lods
insl
pop
dec
mov
add
cmpsb
movsb
sub
aam
dec
test
mov
hlt
call
pop
test
nop
sub
lods
in
stos
and
mov
cmpsl
idivl
ret
in
test
roll
add
cmp
test
mov
pop
into
test
test
test
inc
and
mov
mov
daa
xchg
in
test
aad
shlb
fsts
cmp
cmpl
sub
inc
mov
ret
xor
xor
jnp
sub
push
and
add
test
shlb
test
mov
adcb
jecxz
adc
mov
cltd
mov
mov
shlb
jbe
jbe
and
add
mov
cli
xchg
xchg
mov
xchg
jl
cltd
hlt
scas
pop
adc
dec
mov
jecxz
lcall
andb
cmp
push
outsl
negl
stos
mov
sets
ss
jo
mov
ret
mov
push
shl
scas
mov
lret
jnp
ficomps
mov
and
fxch
fcompl
push
fisubrs
sbb
movsb
test
pop
cmp
adc
mull
sti
mov
repnz
lahf
sbb
imul
in
fidivrl
sbb
faddl
outsl
daa
sub
cwtl
or
xorl
fadds
sbb
mov
filds
cmp
mov
negb
inc
jnp
cmpsb
jbe
cmpsl
mov
push
jnp
stos
and
sahf
mov
loop
mov
repz
xor
mov
mov
lea
cltd
xor
fisttpl
adc
mov
push
popa
add
or
mov
jbe
lret
aas
imul
sub
sub
sbb
in
mov
dec
mov
mov
cmp
cmp
sub
aad
ret
or
sub
jne
subl
gs
rorl
imul
test
addr16
mov
inc
sti
jmp
inc
inc
fisubl
lret
inc
pop
cwtl
sub
inc
push
xchg
lret
fcmovbe
shlb
mov
shll
cld
xor
jecxz
or
rolb
fidivrs
lcall
lcall
sub
loope
jmp
out
loope
pop
add
push
inc
ficomps
push
test
jbe
std
inc
pop
pop
sar
mov
loope
leave
stos
jnp
int
cmp
into
xor
stos
dec
sbb
cmc
in
mov
mov
hlt
aaa
inc
push
out
mov
push
adc
adc
jge
ss
inc
xchg
mov
rorb
stc
mov
xchg
mov
adc
cwtl
sbb
arpl
sahf
dec
sahf
pop
push
out
repz
lods
mov
adcl
lock
pusha
bound
fs
loopne
or
add
pusha
sub
lds
add
lds
pop
aas
pop
ljmp
js
or
adc
hlt
mov
sbb
lock
out
data16
pop
test
mov
jne
jmp
dec
mov
lahf
rcl
cli
or
xchg
xor
pop
cmp
lret
outsl
jbe
mov
jmp
std
rorl
adc
cmp
outsb
iret
push
test
sub
sahf
gs
cli
test
add
mov
mov
int3
xchg
rcr
loop
jmp
sbb
cmp
cmp
int
fwait
pop
adc
cwtl
mov
in
repz
pop
sub
loope
and
loopne
push
cmpsl
pop
xchg
into
inc
mov
push
and
jmp
xchg
mov
dec
xchg
mov
sbb
and
push
call
add
add
add
xor
add
inc
add
lds
dec
das
mov
lock
cld
movsl
sar
cmp
or
jo
imul
push
fdivs
ljmp
inc
mov
mov
mov
les
lret
mov
inc
and
pop
daa
pushf
push
call
cltd
mov
push
inc
inc
push
cwtl
in
pushf
cmp
cli
sub
mov
stos
jb
lret
inc
lret
clc
cmpsl
lods
mov
pop
sti
mov
add
adcb
lods
sahf
outsb
mov
mov
ror
lods
fsubrl
in
js
pop
xchg
call
mov
outsb
lcall
inc
sti
sub
push
lods
cwtl
xchg
outsl
jae
sahf
mov
mov
mov
sar
movsb
jecxz
push
sub
dec
mov
lods
sti
pop
fcomps
ret
or
xchg
in
dec
gs
mov
dec
in
cmp
pop
mov
imul
adc
fdivrp
pop
sahf
push
jbe
and
negb
add
loope
movsb
loopne
rorb
lds
dec
sbb
enter
imul
lock
lcall
xchg
cli
aam
repz
push
ffreep
cwtl
xor
sbb
cmc
je
arpl
aaa
xchg
mov
mov
push
sub
or
jp
repnz
sahf
stos
in
fs
mov
dec
divl
mov
into
mov
jmp
cwtl
sahf
sub
int
int
mov
xchg
stos
push
cmc
pop
inc
pop
ret
pop
and
xor
push
push
push
lock
dec
and
ljmp
adc
cli
mov
mov
rorl
data16
mov
cwtl
fprem1
adc
data16
neg
int
into
sahf
cmpb
mov
add
pop
lods
jecxz
push
mov
out
jne
jmp
popf
push
and
pop
cli
jle
jbe
mov
addb
int3
mov
adc
call
mov
out
xchg
repz
addb
out
out
sahf
test
mov
fisubs
int3
pop
cmp
cld
pop
call
aad
add
out
lret
and
mov
cmp
add
in
sbb
test
lret
mov
mov
jae
sub
dec
mov
mov
out
xor
loopne
test
sbb
cmp
and
inc
in
fistpll
and
out
jne
inc
jg
jg
adc
rorb
fs
lock
xor
inc
xor
add
xchg
xor
popf
mov
xchg
jns
push
xchg
je
cli
inc
xchg
enter
mov
adc
inc
xchg
add
arpl
push
push
push
hlt
sub
ljmp
sbb
ds
popa
cmp
ficomps
je
xchg
mov
xchg
mov
je
fists
je
mov
inc
mov
cmp
in
sbb
cmp
ds
hlt
fidivl
dec
mov
cmpsb
xor
repz
inc
jne
add
xlat
and
xor
pop
std
fst
mov
inc
mov
es
dec
jnp
adc
fucomi
sbb
out
movsb
test
sbb
mov
pop
movsl
mov
call
cmp
or
mov
in
fucom
pop
add
push
inc
adc
xchg
mov
xor
mov
sub
sub
pushf
lods
adc
loop,pn
test
pop
sub
rcrl
adc
in
xor
and
pop
popa
and
in
test
loopne
out
lea
pop
stos
dec
insl
inc
test
sbb
repnz
cmp
sbb
mov
loop
push
add
dec
cmp
xlat
mov
inc
movsb
in
jecxz
xchg
jg
xor
hlt
jo
scas
int3
test
or
pop
outsb
cmp
cmp
inc
or
mov
push
cli
andl
addr16
sbb
nop
scas
mov
iret
mov
sarb
in
fs
bound
jae
fidivrl
pushf
outsl
push
lahf
xor
jecxz
adc
add
jns
pop
xor
mov
mov
out
pop
mov
ss
dec
jb
in
out
vprotw
mov
insb
or
sbb
xchg
xor
xor
xor
dec
out
push
ds
cwtl
or
mov
int3
fsubrl
je
mov
cltd
dec
sti
clc
lret
movsb
out
mov
daa
lods
cltd
cltd
xor
loope
rolb
sbb
add
movsb
out
out
xor
notl
sbb
test
pushf
add
pop
out
mov
mul
lcall
mov
sub
push
mov
push
sarl
mov
sbb
mov
inc
shr
int3
nop
pop
adc
faddl
ret
xchg
test
adc
jecxz
icebp
mov
jno
into
ja
adc
lds
xor
subb
mov
mov
push
sti
outsb
push
push
jo
cmpsb
add
adc
hlt
adc
jno
xor
mov
xchg
out
clc
sbbb
xorb
std
mov
movsl
fiadds
sbb
daa
pop
inc
cli
repnz
aam
and
cmp
pop
sub
xchg
test
inc
test
jmp
jle
xor
idiv
movsb
imul
mov
dec
nop
sar
insl
xchg
xchg
movsl
dec
xchg
lods
std
sbb
andb
sahf
xor
out
push
lcall
sub
or
test
mov
add
mov
test
lea
pop
loope
stc
jb
shrl
repnz
mov
jo
push
pop
sbb
movsl
cmc
ret
loop
jp
xchg
add
cli
pop
adcb
movsb
adc
mov
sbb
cmpsb
mov
in
push
jg
sub
or
mov
pop
cmpsl
adc
dec
jb
xchg
xchg
sbb
lock
sbb
js
sahf
xor
movsl
or
jecxz
aas
ja
jnp
or
mov
shl
aas
sahf
test
xor
cmc
sbb
xchg
inc
ret
ss
cmp
pop
lods
dec
jp
xor
loopne
mov
push
aam
mov
loopne
push
lea
scas
cmp
jmp
mov
cmp
insl
jle
outsb
lret
pop
mov
into
inc
jmp
xchg
in
cmp
dec
pop
out
adc
imul
aaa
fs
jmp
scas
pop
add
mov
xor
pop
ficompl
mov
push
xchg
sub
mov
sub
sub
mov
lcall
cs
iret
subl
in
push
sub
adc
push
cmp
aaa
rolb
sbb
test
fdivrp
mov
repnz
mov
movsl
push
mov
je
pushf
pop
dec
mov
mov
and
fidivl
lea
xchg
shlb
mov
ret
sbb
cwtl
mov
mov
ds
xchg
mov
mov
lock
stos
and
push
mov
xadd
pop
fildl
adcb
int3
jb
mov
xchg
das
movsl
test
sub
fists
movsl
lods
out
fdivs
int3
jne
daa
pop
stos
pusha
jne
shrb
mov
andl
inc
test
loope
fimuls
sub
xchg
ds
rcll
jno
test
jp
cmp
aam
push
xor
out
push
inc
mov
aaa
test
mov
mov
add
xlat
mov
les
idivl
jns
in
cmovp
andl
lods
ret
adc
call
mov
push
insb
insl
jne
sbb
outsl
inc
iret
lods
push
faddl
xor
sbbl
mov
cmp
lock
jbe
sbb
repnz
clc
test
xor
lods
sub
jb
mov
repz
inc
xchg
aad
add
int3
xorb
mov
adc
dec
int3
stos
xchg
sub
push
pop
xchg
mov
pop
mov
stos
inc
pop
mov
aaa
mov
fildl
jbe
jmp
orb
fld
out
test
mov
outsb
ss
lods
pushf
test
push
clc
outsb
cmpsl
ss
sar
imul
out
push
sarl
add
adc
mov
xor
mov
aaa
cli
in
inc
add
adc
inc
shll
sbb
outsl
jnp
lret
or
loop
aad
push
enter
loop
enter
dec
pop
pop
cwtl
in
push
add
fldcw
mov
push
and
jge
loopne
and
cmp
clc
pop
xchg
pop
subb
imul
int
cmp
jl
ret
lods
xchg
dec
in
push
movsb
sub
pop
insl
add
sbb
cmpsb
push
addb
mov
dec
popf
pop
enter
jl
hlt
xchg
ljmp
das
les
xchg
jmp
int3
and
inc
mov
sbb
pop
dec
lret
dec
inc
jecxz
xorl
pop
aas
cld
int
or
in
clc
cmp
lock
lea
adc
xchg
adcb
hlt
iret
mov
imul
xor
scas
lea
cltd
pop
adc
cmp
in
movsl
and
add
js
loop
test
inc
iret
mov
insl
inc
cmpsl
xor
push
ret
adc
ficomps
insl
mov
rcrb
mov
cltd
mov
test
lods
repz
xchg
popf
and
jnp
adc
lds
pop
dec
sbb
repz
sarb
mov
dec
pop
or
pop
mov
xlat
out
push
lods
or
test
lods
and
test
mov
fiadds
adc
push
add
pop
xchg
jmp
outsl
jg
fdivl
rcrl
aaa
test
in
pop
add
push
aam
int3
fwait
add
add
adc
mov
mov
push
mov
sahf
xchg
aaa
dec
in
sub
cwtl
mov
xchg
cmp
sbb
inc
mov
loope
cmp
push
aas
inc
mov
push
stos
add
mov
test
inc
clc
push
lea
or
xor
mov
fstpl
xchg
insl
pop
jae
pusha
pop
dec
aaa
dec
pop
cmp
lahf
xchg
mov
xor
iret
testl
test
clc
adc
jnp
orb
insb
sub
sub
rolb
int3
mov
das
dec
mulb
jbe
lahf
or
xchg
mov
ljmp
addl
cli
dec
out
mov
or
lret
inc
mov
push
or
add
scas
push
test
out
push
pop
scas
mov
dec
cmp
lahf
mov
sbbb
jmp
or
lret
sbb
xor
mov
xchg
or
cltd
out
addb
add
mov
jno
mov
cmp
xchg
push
mov
iret
sub
mov
iret
push
jp
mov
idivb
cmpsb
dec
shrb
iret
cli
aam
sahf
fsts
icebp
push
mov
lret
repz
cld
or
fbld
inc
pop
xchg
xchg
in
push
out
mov
mov
jno
mov
adc
cld
lods
leave
cmp
jns
sbb
dec
insl
or
add
orl
and
jbe
inc
frstor
xchg
mov
and
mov
rcrb
mov
shrb
pushf
rcr
xchg
mov
adc
inc
mov
shr
adc
xchg
cmp
push
cld
rolb
push
sbb
aas
mov
fbstp
push
movsb
cmp
ret
xchg
jbe
out
ficompl
add
mov
cli
jbe
add
cmp
int
and
inc
or
sbb
push
mov
sub
jecxz
fisttps
push
inc
sbb
bound
insb
popa
imul
lret
sbb
xor
cld
mov
xor
mov
mov
add
fistps
std
cld
and
mov
sub
jns
cmc
inc
rcrl
aas
icebp
push
cld
ja
mov
lret
jae
in
jge
pushf
js
lea
testb
jbe
aas
dec
adc
or
fiadds
es
cli
and
stos
sti
lea
sub
mov
roll
cmc
notl
jp
push
gs
add
pop
scas
fwait
shlb
mov
clc
cmpsl
add
push
sbb
mov
jle
xchg
sarb
mov
es
xor
xor
xchg
cmp
xor
jne
and
pop
sub
testb
es
cmp
loope
test
inc
ja
fldcw
mov
fldl
les
dec
clc
data16
lods
movsb
xchg
sbb
repz
fistl
shrb
mov
jmp
cmpsw
jmp
leave
cmp
ljmp
leave
push
test
daa
imul
scas
pop
jae
mov
add
sub
pop
adc
pusha
shlb
dec
adc
rol
fisttpl
mov
jg
stos
and
adc
insb
jge
or
neg
out
iret
out
or
lods
test
loop
insb
hlt
dec
xchg
into
mov
outsb
into
js
xchg
xor
xorl
gs
std
roll
mov
lock
cltd
mov
lods
push
lret
lods
cli
or
mov
jmp
lret
fdiv
in
pop
pushf
sbbl
mul
lret
mov
xchg
xchg
lock
cmp
mov
push
leave
movsb
push
push
pop
adc
push
mov
cli
outsl
into
xchg
in
ret
mov
neg
cvttps2pi
js
rcrb
xchg
push
and
jmp
or
xchg
xor
add
fiaddl
xor
loopne
adc
xchg
inc
jns
jns
pushf
push
clc
ljmp
pop
leave
in
mov
jbe
sub
fimull
cwtl
cmp
xchg
sub
data16
jl
sbb
dec
xor
loop
add
push
mov
cmp
mov
das
inc
sti
xchg
mov
mov
adc
outsl
iret
aam
jb
push
ss
jge
aaa
sti
mov
dec
mov
mov
fidivs
daa
push
stos
add
leave
and
or
cmpsb
loop
xchg
or
fbstp
in
and
xchg
in
cs
ljmp
clc
or
xor
int3
shll
dec
adc
lahf
sub
lds
xor
lret
mov
add
pop
mov
ds
mov
and
fisubrl
fisubrs
and
jns
sub
idiv
push
mov
repnz
ret
xorl
out
sbb
sbb
cvttps2pi
aaa
fdivrs
lods
imul
mov
sahf
mov
xor
pop
nop
jne
mov
cmc
popf
jae
cmp
in
popa
aaa
pop
js
scas
mov
dec
test
mov
gs
dec
fcompl
rclb
into
cmc
xor
dec
lcall
loope
subb
xchg
int
pop
fmul
mov
js
cmp
mov
rorb
inc
scas
mov
mov
mov
mov
pavgb
outsb
add
test
cli
lahf
fdivl
outsb
subb
jmp
mov
jno
frstor
xchg
sub
push
pop
dec
lea
sbb
add
imul
sub
xchg
bound
sarb
sbb
jae
and
loopne
out
and
out
pushf
pop
subb
stos
imul
mov
adc
fdivrs
jecxz
mov
push
test
lods
out
stc
cmp
and
cmpsl
sbb
xchg
pop
test
or
jmp
aam
lcall
popf
cli
rclb
mov
into
aaa
scas
xor
and
fldt
loope
xchg
call
ret
mov
call
or
dec
xchg
sbbb
into
pop
pop
pop
pop
pop
adc
cwtl
into
mov
mov
movsl
sti
icebp
gs
xor
or
jae
push
es
into
enter
inc
imul
movsb
cmp
ucomiss
lret
lods
cmc
loop
and
hlt
cld
call
scas
scas
sbb
mov
in
pusha
mov
imul
mov
ret
icebp
add
push
and
pop
or
mov
pop
dec
add
sbb
subb
ret
xchg
adc
mov
jne
mov
rolb
mov
inc
pop
mov
pop
xchg
pop
fcmovbe
fidivrl
mov
adc
pop
mov
xor
jp
xchg
fiaddl
mov
cmpb
stc
lahf
mov
xchg
mov
mov
out
and
xchg
inc
int3
push
mov
mov
add
lock
xor
mov
test
cmpsb
mov
add
cld
in
add
out
push
adc
inc
cmp
sub
xchg
cltd
daa
push
or
js
xor
es
stos
popa
jle
jnp
mov
jb
les
push
ret
lret
or
stos
xchg
sub
shl
xchg
lods
out
xchg
xor
lahf
clc
ficompl
or
movsb
pop
addr16
fsubl
xchg
imul
and
mov
cli
or
std
sbb
sbb
movsl
repnz
fninit
or
mov
xchg
test
daa
out
and
push
stos
scas
ret
mov
add
int3
xchg
xor
dec
call
mov
or
jg
imul
out
jnp
jp
filds
xor
pop
les
mov
xchg
mov
adc
cld
adc
jp
es
adc
sbb
hlt
mov
sti
dec
mov
das
and
addr16
jg
jb
dec
jge
orb
xchg
arpl
inc
out
int3
testl
lea
pop
mov
mov
adc
xchg
add
mov
inc
xchg
push
daa
jmp
mov
mov
lahf
mov
xchg
mov
in
or
sarl
scas
jns
aaa
mov
fcom
fs
lret
pop
leave
jp
out
addl
fwait
push
and
daa
add
mov
adc
pop
mov
sub
and
cmc
shlb
ss
jae
nop
out
xchg
ja
cmc
pop
daa
and
sbb
jl
xchg
enter
inc
fistps
add
stos
cmp
lret
notb
scas
addr16
jb
add
aam
scas
dec
lods
and
mov
add
xor
insb
stc
push
lds
ja
int
pop
and
cwtl
aam
lret
sub
xlat
or
ret
sarl
ftst
hlt
pop
repnz
mov
testb
loopne
add
arpl
pusha
sbb
popa
mov
negb
mov
aaa
cli
nop
dec
xlat
mov
int
push
mov
fsts
jmp
dec
xchg
dec
insl
xor
xor
xor
jmp
repnz
xchg
xor
mov
jmp
inc
inc
rorb
pop
stc
fwait
sub
jae
stc
sub
int3
leave
mov
out
xor
xchg
jae
fs
fmull
fimuls
xchg
shlb
mov
cmpsl
pop
adc
popf
out
xchg
dec
jne
hlt
int
mov
pop
ss
cltd
push
mov
cs
dec
and
scas
mov
mov
out
mov
lcall
push
dec
stc
cmpb
scas
shrl
pop
mov
jnp
and
mov
and
in
mov
adc
pusha
cli
mov
cli
stc
shl
sbb
imul
imul
adc
sahf
fistl
xor
mov
loopne
shlb
dec
jg
jecxz
mov
out
or
scas
fisttpl
rolb
test
enter
icebp
idivb
sbb
and
into
sub
mov
fld
mov
sbb
mov
cltd
xchg
mov
mov
pop
fcomps
xor
adc
mov
sarb
roll
aas
and
aas
sbb
in
lret
fnsave
xchg
imulb
in
sbb
jne
icebp
jne
popf
mov
rcr
jo
or
xchg
push
push
xor
adc
test
cltd
in
in
jbe
movsl
pop
push
mov
xorb
sub
fwait
ret
movsb
pusha
inc
mov
xchg
jle
mov
in
inc
test
pusha
das
mov
lock
mov
dec
inc
out
pusha
imul
mov
inc
xchg
pop
addr16
mov
pop
jb
lds
into
pushf
fsubrs
push
sbb
mov
inc
ret
int3
dec
pop
inc
aad
lcall
add
negl
dec
adcb
cwtl
xchg
in
je
or
push
popa
mov
inc
sbb
or
mov
mov
jl
out
cmc
dec
cld
inc
cltd
cld
ss
das
dec
lds
pop
fdivp
das
lods
mov
mov
mov
sti
imul
push
xchg
outsl
ret
push
sahf
lahf
or
adc
aam
and
jl
lret
js
xchg
jnp
scas
iret
bound
push
aaa
rcrb
lahf
test
pop
stos
nop
cmp
cmc
in
jo
repz
add
das
pop
out
aas
push
out
mov
mov
shrb
mov
jp
lea
addl
cld
ljmp
in
push
cwtl
fs
rcr
sti
shrl
pop
nop
jl
sub
sub
movb
xorl
cli
dec
shrl
pop
adc
xchg
dec
lods
fsubs
in
cs
iret
mov
call
int3
shr
fimuls
cmp
jo
sahf
jb
mov
rcrb
sbb
movsl
sbb
mull
stos
add
pop
mov
push
aas
dec
jns
mov
mov
fcoms
in
loopne
fsubs
or
gs
rcrl
in
mov
push
xlat
into
jl
mov
mov
cli
rcrl
pop
out
pop
shlb
add
pop
pop
stos
rcl
aaa
fs
xorb
shr
cltd
mov
xor
xchg
dec
or
in
shl
sarb
xor
push
and
jmp
mov
cli
repz
test
mov
outsb
andl
inc
or
push
lods
push
jge
mov
out
pop
shll
xchg
add
nopl
ljmp
jle
fadd
sub
aad
imul
int
lret
cmpb
aam
mov
xchg
pop
lods
cmp
sarl
add
lds
loope
push
jb
and
mov
mov
mov
in
pop
sub
push
cs
lcall
popf
dec
mov
lret
test
inc
sahf
iret
push
dec
into
mov
push
loopne
das
mov
xchg
shrl
shlb
push
and
xchg
sahf
fwait
sub
je
sbb
adc
aad
mulb
cmp
xchg
jnp
stc
popf
mov
iret
fstpt
xchg
gs
sbbb
and
into
inc
sti
sub
inc
enter
lea
mov
clc
popf
in
test
pusha
leave
into
hlt
imulb
mov
pushf
mov
dec
shr
test
pop
lock
dec
lea
push
repz
pop
mov
xor
push
xchg
sub
fiadds
pop
push
push
push
add
or
lds
inc
mov
in
xor
or
and
stos
mov
ret
xorb
jp
mov
jge
icebp
out
add
mov
test
mov
testb
lds
rcrb
data16
bound
mov
mov
mov
jp
dec
jb
push
dec
rcll
cli
in
sbb
mov
inc
xor
pop
lcall
mov
mov
mov
ret
add
cmp
sbbl
mov
mov
pushf
jo
adc
repnz
rcl
pop
lea
sbb
lret
cmp
outsl
loope
movsl
add
enter
mov
lods
les
and
or
or
mov
lods
shlb
lods
push
sbb
add
xor
sbb
push
mov
inc
mov
mov
push
cwtl
xchg
out
xor
push
mov
mov
mov
mov
or
aam
pop
shlb
adc
jb
sbbl
push
xchg
out
mov
pop
mov
in
sbb
mov
inc
pop
mov
mov
sarb
xchg
dec
leave
xlat
lods
xchg
test
jecxz
adc
add
mov
sub
leave
mov
lret
or
loope
add
sub
subb
clc
mov
notl
lods
hlt
jmp
xchg
addb
pushf
repz
int3
fsubr
ljmp
mov
and
in
mov
outsb
test
lcall
rcrl
or
mov
insb
popa
notl
push
add
mov
mov
jge
js
cli
mov
addr16
mov
xchg
adc
mov
push
repnz
dec
mov
cmpb
dec
adc
inc
divb
and
aad
or
pop
adc
mov
fdivrl
mov
mov
pushf
stos
mov
jae
popf
sub
std
sahf
adc
cltd
lods
stos
aam
seta
mov
aaa
mov
add
mov
lea
scas
jge
dec
mov
rolb
and
test
sub
and
jns
rcr
iret
mov
mov
add
cmc
adc
stc
xchg
int
adc
pusha
daa
lea
ja
in
cmp
out
xchg
subl
cli
mov
add
sahf
test
insb
push
mov
outsb
or
mov
and
inc
in
subb
sbb
dec
mov
gs
out
fdivrl
negl
xor
and
push
jb
js
dec
aad
clc
xor
push
inc
daa
dec
cmpl
add
xor
movsb
pop
mov
shll
cltd
aas
movsl
dec
and
cmp
push
adc
fisubrs
out
mov
mov
mov
insb
lea
ret
sahf
popf
and
imul
dec
push
cmp
fwait
adc
and
popa
and
mov
dec
mov
add
inc
mov
adc
out
dec
sub
loopne
leave
sub
jecxz
lret
mov
sub
pop
imul
or
outsl
sahf
lahf
pop
pop
idivb
out
addb
and
fildll
pop
pop
mov
cli
test
int3
test
add
shrl
fidivrl
mov
test
xlat
lcall
lret
mov
inc
mov
ret
xchg
push
mov
int3
mov
mov
mov
fcoml
loop
loop
decl
cld
into
sub
xchg
or
xlat
icebp
fsubrs
adc
pop
sub
stos
dec
cmp
in
sarl
cmp
fnstenv
scas
lcall
mov
gs
or
out
and
roll
lret
lret
sahf
cli
fstps
lret
adc
sbb
xor
and
xlat
jnp
lods
mov
mov
sbb
pop
jbe
xchg
stos
inc
sti
clc
mov
push
fcmovb
jecxz
sub
fwait
xchg
mov
push
jmp
inc
ds
stos
and
fsubrs
add
frstor
push
cmp
into
dec
shr
sbb
lcall
jnp
push
jl
mov
lock
dec
sub
je
dec
aam
or
mov
test
sub
pusha
stos
pop
jp
test
pop
jno
imull
jmp
lock
xor
push
push
mov
mov
fldcw
jp
pop
pop
cmp
sub
lret
movsb
pop
sub
pop
in
jp
push
cld
repnz
pop
xor
sahf
ja
out
or
mov
pushf
fcmovu
mov
movsl
sbb
ljmp
cli
out
inc
cmpsl
push
popf
sahf
in
mov
jne
lcall
in
pushf
add
out
movsl
adc
pop
outsl
sub
hlt
repnz
mov
jl
fwait
xchg
jns
ja
or
imul
ficoms
aam
hlt
cmc
xchg
ret
jl
push
xor
movsl
idivb
mov
int3
clc
jnp
fiaddl
outsb
mov
test
add
int
push
lret
dec
rcll
and
ja
in
mov
xor
pop
out
cmp
add
mov
inc
jge
jmp
movsb
jnp
push
insb
mov
cmp
fwait
xchg
push
pushf
mov
add
dec
mov
adc
ljmp
cmp
sub
mov
push
pop
in
stc
into
lcall
lret
idivb
fmul
jg
push
lock
cmp
adc
imul
cmp
inc
out
dec
fidivs
addr16
fidivrl
jnp
push
mov
mov
and
sahf
out
add
movsb
cmp
inc
adc
clc
lds
mov
mov
xor
punpckldq
or
mov
cmpb
aam
lcall
mov
xor
addb
dec
gs
test
fldt
mov
sub
cmp
cmp
pop
movsb
stos
xlat
clc
ret
leave
sbbb
xchg
gs
in
nop
push
ret
int3
shr
stos
sti
jb
fbld
adc
stos
ds
sbb
out
icebp
in
sub
push
adc
cmpsl
les
fidivs
sarl
pop
neg
lds
xchg
int
inc
rol
shrl
xchg
push
movsl
or
adc
int3
gs
ljmp
rclb
lcall
out
mov
fstpt
cmp
mov
mov
sbb
adc
mov
cs
xchg
paddusb
sar
dec
xor
dec
nop
loope
cli
xchg
adc
pusha
push
pop
lcall
int3
loopne
enter
adc
fcoml
gs
jmp
stc
push
mov
mov
andl
adc
test
arpl
adc
sbb
out
mov
negl
cwtl
lods
jbe
neg
lea
out
push
stc
loop
div
in
pop
cmc
mul
dec
es
imull
fcompl
shr
mov
fdivr
fwait
into
pop
int3
test
sahf
or
testl
xor
adc
fidivrs
lds
dec
xchg
cmpsb
icebp
clc
mov
mov
and
sub
mov
dec
pop
jge
mov
js
call
mov
faddp
jle
and
adc
cld
aam
dec
cmc
movsl
mov
out
mov
pushf
mov
ds
cmp
push
mov
mov
or
cwtl
xchg
stos
jle
das
push
lods
mov
outsl
bound
and
pop
cmp
xchg
aad
lock
mov
add
rep
jg
sub
shr
and
faddl
popf
nop
inc
sub
jmp
inc
xchg
pop
sub
push
scas
cmp
mov
aad
mov
pop
addr16
repnz
sub
jo
jge
adc
lods
gs
sbb
jmp
je
and
pushf
nop
inc
sub
sti
xor
mov
cmp
pop
int3
test
mov
imul
mov
imul
mov
push
nop
rcrb
addr16
stos
adc
js
scas
sub
sahf
jle
pushf
mov
mov
scas
jle
in
mov
inc
pop
enter
mov
jb
cmp
scas
dec
mov
cmpsb
in
cli
jnp
aas
fsubrs
lcall
movsb
sub
aam
loopne
xchg
dec
push
lods
mov
mov
inc
add
outsl
call
icebp
test
ja
xchg
adc
mov
hlt
test
stos
test
and
loop
sub
add
cmp
mov
pop
xor
xchg
mov
xchg
lock
xchg
ds
inc
mov
mov
je
repnz
aad
scas
sti
pop
lcall
add
mov
ret
ja
lea
hlt
fadds
outsl
data16
push
mov
inc
jb
lcall
repnz
sbbl
fmul
pop
adc
loopne
fistpl
sbb
test
mov
hlt
mov
popa
jmp
jns
cmovge
xchg
ret
imul
in
outsb
inc
repz
dec
je
ja
je
testl
mov
les
fsubs
pmullw
jmp
enter
mov
mov
loop
in
leave
lods
mov
mov
insl
sbb
loopne
jnp
and
mov
sarl
pop
push
cmp
sbb
lods
jmp
cli
pop
test
pop
xchg
shr
adc
cs
mov
lret
sbb
or
lods
imul
into
lahf
roll
mov
fmul
ds
ljmp
sti
push
sbb
aam
aam
or
inc
or
mov
ds
xchg
sub
mov
test
jbe
mov
xchg
and
std
add
ret
les
scas
out
aaa
stc
mov
popl
test
aam
or
aam
cltd
scas
lcall
xlat
pop
cmp
mov
repnz
ret
cmp
mov
insl
lret
jo
xchg
xchg
sub
mov
lret
aam
xchg
mov
lret
insl
cmp
push
outsb
nop
and
std
scas
pop
jne
xor
mov
test
je
aam
cmpsb
inc
stc
int3
fs
xor
outsb
movsb
jmp
lock
sbb
jmp
xchg
leave
push
insl
sub
sub
leave
lcall
fwait
inc
mov
jb
mov
lahf
mov
es
lock
pusha
sub
mov
add
xor
lods
jbe
out
mov
sbb
in
add
cmp
xor
ret
scas
divb
adc
mov
out
pushf
sbb
fisttpll
adc
enter
fisubs
sub
cli
pop
xchg
call
repz
xor
ljmp
lret
add
sub
mov
test
jmp
mov
pop
rorl
iret
jno
leave
cmp
in
fildl
inc
bound
in
hlt
mov
fisubs
xor
cmc
pop
lds
in
sbb
adc
cmp
cmp
push
xor
push
mov
sbb
gs
adc
loop
or
lcall
pop
mov
int3
rorl
je
cld
cli
mov
push
sub
fcmovnb
shrb
xor
leave
sub
jle
test
iret
mov
adc
cli
ss
dec
fwait
or
ljmp
sbb
xchg
mov
xchg
mov
iret
fadd
pop
dec
push
lret
adc
cmpsb
dec
xorb
dec
bound
push
cli
and
outsb
test
out
cltd
sub
lret
in
outsl
aam
test
add
out
loop
imul
in
mov
xor
cld
pop
pop
cltd
cmp
loopne
iret
cltd
addl
enter
cmpsb
xlat
cwtl
mov
push
add
scas
outsl
mov
lds
mov
or
dec
sub
pusha
sub
and
int
pop
iret
jne
mov
or
jne
lods
cmp
enter
insb
lcall
addr16
in
jle
lcall
xor
roll
dec
xchg
adc
int3
cwtl
fcmovbe
add
push
mov
push
adc
sbb
test
pop
jecxz
xchg
out
cmp
in
jno
add
adc
cmc
ss
jnp
data16
addb
cmp
xchg
aam
adc
jnp
fdivl
mov
rolb
sbb
mov
mov
clc
fdivrs
add
fwait
mov
and
inc
pop
adc
aas
sub
mov
inc
xor
shlb
inc
pop
xchg
lea
test
jns
xor
adc
fistl
mov
fwait
sahf
scas
shl
xchg
movsb
faddp
hlt
movsb
jns
dec
mov
fdivp
fdivrl
filds
adc
or
push
aam
jo
fsubl
xor
leave
jecxz
mov
mov
jnp
scas
sbb
jo
jle
repnz
mov
push
pushf
and
mov
out
xchg
cli
ret
stos
mov
addl
imul
lret
xchg
sub
inc
mov
stos
leave
lcall
not
inc
lods
bound
faddl
push
sbb
loope
fldcw
xchg
jne
pop
pop
dec
or
das
cmp
pop
pusha
xlat
lods
jb
and
movsb
fadd
push
xchg
add
jecxz
out
movsl
xchg
cld
add
lcall
stos
mov
addl
movsl
dec
fisubrl
mov
iret
xchg
xchg
sbb
xorl
mov
mov
mov
fdivrl
test
inc
fisubs
push
cwtl
mov
mov
xor
jbe
aas
pushf
mov
jl
mov
dec
mov
pop
orb
lds
fsubrp
pop
xor
cmp
test
mov
sbb
repnz
inc
pop
mov
loopne
int3
fcomps
fidivl
adc
lock
sti
push
xchg
xchg
ss
leave
stc
pop
xchg
cmp
add
sub
mov
test
andl
mov
mov
out
inc
out
jecxz
loop
mov
cmp
inc
sbb
sbb
push
ljmp
lahf
push
and
bound
popf
cli
jb
push
out
xor
or
pop
repz
pop
jbe
mov
movsb
insl
push
push
and
fcmovu
cmp
sarb
sub
loopne
das
testb
inc
test
cmpsl
lods
xor
mov
test
mov
lds
fnsave
pop
test
xchg
mov
shl
sbb
orl
das
and
cli
mov
sbbb
lea
ljmp
mov
jmp
cmp
or
outsl
cmp
shr
and
fs
ja
iret
pop
and
clc
lret
movsl
add
fcmovnbe
std
mov
and
xchg
and
js
fs
movsl
rcrl
pusha
xor
ret
dec
jge
fs
mov
fimuls
xor
adc
xchg
loopne
mov
imul
test
cli
push
mov
roll
fdiv
pusha
mov
lods
mov
sbb
and
int
aam
push
je
ljmp
fsubl
repz
std
in
inc
sar
or
jg
xchg
cmpsb
xchg
enter
sti
cld
out
jmp
mov
sbb
cltd
jecxz
jne
out
cli
lret
popa
stos
shrb
xchg
push
pop
dec
mov
jae
bswap
push
push
and
int3
jns
scas
stos
js
adcl
out
cwtl
add
out
pop
clc
cmp
aaa
mov
xor
mov
fdivrl
frstor
call
xor
xchg
aaa
imul
cmp
loop
jnp
int3
lret
aad
pop
rolb
jbe
jnp
jp
movsl
fdivp
mov
sbb
jo
jmp
add
mov
pop
loop
jnp
in
icebp
xor
adc
vpmacswd
ljmp
mov
cwtl
outsl
rcll
sbb
sarl
stos
jge
in
push
sahf
cmp
mov
mov
pop
stos
push
push
cltd
jg
sub
out
push
adc
subl
jo
out
lds
inc
jns
lods
sti
xor
sub
scas
sahf
scas
jnp
and
mov
addr16
mov
sbb
or
mov
ljmp
jmp
mov
sub
stc
push
xchg
mov
mov
push
push
jle
loop
and
mov
mov
js
add
xchg
imul
push
imul
mov
lods
sbb
divb
fists
stos
xor
pop
ss
lock
xlat
popf
dec
xchg
movsl
andb
pop
pop
outsl
adc
pop
in
mov
hlt
xchg
lea
xor
add
pushf
les
mov
in
dec
shlb
xchg
push
mov
mov
shlb
xchg
stc
dec
addr16
rsqrtps
dec
push
outsb
and
roll
shlb
mov
xchg
jb
mov
jecxz
imul
xchg
xchg
outsl
xchg
jecxz
jo
cwtl
mov
add
sbb
int
sbb
mov
rorb
jbe
loopne
pushf
lret
mov
jne
or
lret
lret
lcall
mov
inc
lahf
testl
and
int3
insl
dec
pop
and
mov
push
xor
fimull
xor
push
fstpt
aam
movsb
jle
fisttps
mov
jge
adc
xor
pushf
push
dec
mov
push
mov
xchg
js
mov
xor
js
sub
mov
push
pop
outsb
sbb
inc
test
in
jbe
xchg
or
jle
lods
movsb
dec
out
pop
xchg
and
or
or
popa
inc
push
daa
fdivs
inc
mov
icebp
dec
dec
les
mov
adc
fwait
cmpsb
or
xchg
hlt
lods
jae
fstp
xchg
aaa
cltd
or
sbb
iret
loop
int3
mov
jo
sub
lods
sub
subb
mov
pop
jno
mov
ret
jns
lret
je
xchg
jmp
jb
cwtl
out
sbb
test
jge
sbb
pop
dec
jno
repnz
inc
push
test
pusha
cmp
out
mov
ss
sub
or
add
push
test
jecxz
dec
dec
mov
loopne
clc
lcall
fsub
xchg
inc
add
movlps
pop
fisubrs
mov
popa
nop
dec
xor
test
arpl
sub
lcall
cs
incb
mov
jecxz
cltd
dec
mov
sarl
inc
mov
mov
fildl
mov
das
sub
scas
movsl
push
mov
jmp
pop
out
or
ss
iret
dec
and
xor
xchg
xor
adc
ljmp
adc
aam
dec
xchg
testl
fnstsw
cmp
mov
into
mov
frstor
cld
lcall
xlat
xchg
mov
ljmp
jo
adc
mov
shrl
add
cmp
subl
xor
loope
popf
jp
mov
xchg
cli
inc
adc
xorb
pop
fbstp
mov
push
stos
lea
ret
lret
sub
xor
add
lret
inc
cwtl
stos
sub
cs
xchg
subl
clc
mov
jae
pop
push
add
sub
push
dec
aam
out
ud2
sarl
lcall
jp
push
pushl
inc
jle
adc
js
ljmp
shlb
jnp
cwtl
cwtl
push
mov
push
and
lret
fnstsw
stc
add
fsubl
subb
inc
inc
lea
mov
popa
scas
inc
das
push
cltd
sbb
pop
mov
sub
fmul
test
leave
aam
into
sbb
rcrb
cmp
sbb
adc
sbb
push
in
lahf
dec
cltd
andb
push
mov
test
outsb
loope
dec
fisttpl
xor
xchg
inc
xchg
xchg
pushf
lea
daa
mov
push
orl
jb
cmpsb
int3
subb
rorb
test
test
repnz
mov
xchg
cltd
and
ljmp
xorl
lahf
nop
sbb
push
outsb
fwait
nop
jne
and
fs
test
mov
outsl
mov
out
add
inc
cmpsl
xor
jle
mov
sub
in
lods
test
xchg
lret
mov
or
or
call
push
dec
or
push
shr
test
dec
cwtl
test
cmp
mov
rclb
mov
loop
test
out
ljmp
and
in
in
stc
aaa
fisubs
lcall
pop
lcall
mov
imul
cmp
out
inc
and
popa
xor
aas
popf
dec
leave
popf
adc
push
adc
hlt
mov
sbb
in
or
movsl
mov
out
mov
xor
ss
mov
or
pop
sbb
mov
mov
fnstenv
mov
test
mov
pop
mov
loopne
cwtl
lahf
aad
mov
push
mov
xlat
ds
in
das
aam
test
pop
repnz
mov
lret
in
int3
mul
jae
dec
push
sub
repnz
cmp
rorb
pop
cwtl
push
inc
std
or
xorl
adc
push
adc
mov
jae
cmpsb
arpl
outsb
adc
pop
sbb
pop
sub
jmp
lcall
or
or
leave
jmp
lds
nop
nop
movsl
movsl
movsl
mov
movsl
adc
pop
cwtl
lods
add
daa
sahf
gs
in
sub
in
add
popf
leave
aam
fcompp
and
fsubs
adc
xor
lret
sbb
or
pminsw
lock
gs
mov
icebp
js
int
add
cwtl
and
or
in
and
fcompp
sub
test
stos
jnp
out
icebp
pop
sub
mov
push
mov
mov
xor
arpl
jle
xor
lods
icebp
rol
add
lds
test
jl
ret
or
rcrl
mov
movsl
jno
pushf
xchg
pop
popf
lds
ret
jge
dec
inc
pushf
pop
pop
push
xor
ret
cmp
loope
sbb
loopne
out
sub
push
fistps
jno
stos
test
xchg
mov
jmp
insl
cmpsb
cmp
insl
add
mov
je
push
icebp
mov
into
sbb
mov
push
int
aam
mov
loopne
sbb
jno
loop
cltd
test
adc
and
add
test
add
mov
pop
cmpsb
xchg
sbb
loopne
adc
loopne
jmp
rcrl
xor
cmp
mov
and
push
sbb
out
mov
add
add
xchg
adc
sub
dec
add
lcall
mov
jb
xor
daa
lea
cmp
pop
mov
xchg
gs
stos
ret
jl
mov
clc
adc
cmpsl
pop
shrl
adc
inc
jno
cwtl
mov
test
adc
in
sbb
out
push
icebp
in
outsl
push
sbb
adc
jo
adc
and
cmp
inc
movsl
addl
ror
pop
pop
popf
jl
ret
jecxz
xchg
push
push
mov
ja
movnti
test
pop
pop
movsb
addr16
aaa
out
lahf
cmpsl
fs
xor
xchg
iret
shld
xlat
lds
xchg
test
aaa
adc
repz
inc
pop
xchg
mull
repz
push
movsl
fwait
test
iret
out
movsl
arpl
leave
mov
iret
or
dec
fs
ror
stos
movsl
xchg
test
iret
adc
xchg
mov
xor
cld
test
jmp
push
movsl
nop
jo
iret
in
push
leave
inc
test
hlt
push
js
fs
sub
push
movsl
insb
jl
aaa
jmp
and
enter
jl
into
clc
test
mov
enter
jl
iret
loopne
pusha
mov
lds
js
add
icebp
test
mov
leave
pop
test
das
or
and
mov
leave
fidivrs
sahf
mov
leave
push
dec
iret
push
ds
test
aas
enter
movsb
dec
xor
xchg
push
or
lds
mov
test
xor
mov
xor
fidivrl
xchg
dec
aaa
test
aas
iret
test
mov
movsb
es
lret
test
mov
test
mov
test
xor
mov
ds
ret
movsb
push
ds
test
mov
test
lds
aas
iret
test
ds
movsb
add
iret
test
lds
xor
fidivrs
sahf
mov
movsb
push
ds
jl
lods
jo
int
mov
repz
enter
jl
aaa
jge
hlt
mov
sub
movsb
test
enter
clc
mov
and
cwtl
lret
mov
jl
aaa
dec
test
imulb
sub
lea
pop
xor
pop
pop
test
aaa
jmp
cli
jecxz
loopne
add
sbb
cmc
inc
jecxz
and
sbb
iret
out
push
repnz
testl
scas
xchg
inc
mov
push
out
xchg
sbb
incl
leave
or
aaa
cmp
push
repz
leave
jne
test
mov
aad
ja
adc
inc
adc
hlt
mov
roll
jne
pop
and
lock
add
dec
insb
or
inc
xor
sub
lock
lcall
sbb
xlat
sub
pop
adc
in
adc
sbb
loop
inc
repnz
fcmovu
iret
jmp
push
push
out
out
loopne
and
adc
push
stos
add
push
cmc
fucomp
stc
jge
icebp
hlt
popf
cmc
outsb
jo
sbb
xchg
sub
adc
jl
adc
gs
into
aas
movsb
push
inc
imul
and
add
cmpsb
hlt
and
sbb
dec
hlt
adc
insb
ret
sti
pop
sub
push
out
jg
jne
sbb
out
popf
cmc
rcll
xchg
iret
lock
into
push
mov
pop
and
test
movsl
repz
std
adcb
sub
nop
pop
test
repz
push
push
mov
int3
push
jns
adc
sbb
xor
call
push
mov
shl
mov
mov
aad
sbb
mov
or
pop
lds
rol
pop
jns
movsl
sbb
test
hlt
shrl
roll
pop
lock
and
mov
js
lock
test
mov
call
in
lods
mov
popa
mov
dec
push
in
xlat
adc
or
adc
testl
shr
cmp
aad
dec
inc
jne
or
xchg
movsl
mov
loope
inc
lock
mov
xor
cmp
mov
shl
inc
fs
leave
insl
aad
shll
adc
jno
jge
and
sbb
jns
mov
les
aad
in
int
jb
sar
in
jmp
fnstsw
gs
sbb
int
push
cmc
pusha
enter
shlb
push
call
xchg
rcr
fs
dec
and
test
add
xor
hlt
mov
adc
stc
inc
mov
in
pop
sub
fadds
lret
leave
xor
dec
cltd
xor
push
inc
insb
in
loope
in
in
in
in
in
in
in
in
in
in
in
in
loope
adc
pop
pop
aam
cwtl
xchg
cmp
ja
mov
dec
popa
push
pop
addr16
inc
outsb
push
add
add
xorb
adc
int3
jg
push
mov
das
push
ss
jae
push
xor
cmp
adc
mov
fsubrl
cmp
pop
imul
sub
jnp
add
pop
adc
sbb
insl
inc
jl
sub
sub
maxps
aaa
cwtl
xchg
cmp
sbb
pop
inc
xor
aas
cwtl
xchg
js
add
fninit
dec
sub
or
das
cmp
dec
inc
sbb
xor
mov
mov
add
mov
jno
xchg
cmc
or
dec
adc
pop
rolb
sub
movsl
fsubl
or
cld
inc
mov
inc
dec
outsb
push
sbb
inc
cmp
or
outsl
mov
cmpsb
xchg
test
stc
bound
pop
xor
dec
test
shr
mov
sbb
xor
xchg
lods
push
rol
cmpsb
pop
mov
decb
ds
out
xchg
jle
fucomi
adc
pop
sub
mov
addl
pop
adc
ss
pop
xor
dec
pop
push
in
add
mov
test
test
sub
adc
adc
add
add
add
add
add
add
sub
add
inc
add
orb
add
pusha
add
addb
add
xor
add
js
add
add
add
add
add
add
add
sbb
add
sbb
add
add
add
xor
add
add
add
add
add
fadds
add
add
add
add
add
add
add
call
add
add
add
add
add
add
add
add
add
clc
add
add
add
add
add
add
add
test
add
lock
add
inc
add
add
add
add
add
add
inc
add
pusha
add
add
add
add
add
add
popa
add
adc
add
add
inc
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
or
dec
add
dec
add
dec
add
dec
add
add
sub
add
and
add
inc
add
add
add
add
add
add
adc
add
movb
mov
mov
add
mov
mov
add
add
test
add
mov
mov
add
incl
mov
add
test
test
add
incl
incl
incl
incl
test
add
movb
mov
mov
add
test
mov
add
mov
test
add
incl
incl
incl
incl
incl
test
add
add
test
add
incl
incl
add
incl
incl
add
incl
incl
add
incl
test
add
incl
incl
incl
incl
test
add
mov
test
add
test
test
add
test
test
add
add
test
add
incl
incl
incl
incl
test
add
mov
mov
add
add
test
add
incl
incl
incl
incl
test
add
mov
mov
add
add
test
add
incl
incl
incl
incl
test
add
mov
mov
add
add
test
add
incl
add
incl
add
incl
add
incl
add
incl
add
test
add
mov
add
mov
mov
add
add
test
add
incl
incl
add
incl
incl
add
incl
incl
add
incl
test
add
test
test
add
add
incl
add
incl
add
incl
add
incl
add
test
add
test
add
mov
add
mov
test
add
test
add
add
test
add
test
test
add
add
add
test
test
add
add
test
add
incl
add
incl
add
incl
add
incl
add
incl
add
test
add
test
add
test
add
mov
add
add
test
add
mov
add
add
test
add
incl
mov
add
test
add
add
test
add
test
test
add
add
incl
add
incl
add
incl
add
incl
add
test
add
test
add
test
add
test
add
test
add
test
mov
add
test
test
add
add
incl
add
incl
add
incl
add
incl
add
add
add
test
add
test
add
test
add
test
add
add
add
test
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
test
add
test
test
add
incl
incl
incl
incl
test
add
test
add
test
add
add
add
mov
add
mov
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
test
add
test
test
add
incl
incl
incl
incl
incl
add
add
mov
add
add
add
add
add
add
test
add
test
test
add
test
test
add
test
test
add
test
test
add
test
mov
add
test
test
add
movb
mov
incl
add
add
test
add
test
add
mov
test
add
add
add
movb
test
mov
add
mov
test
add
mov
incl
incl
incl
test
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
test
add
test
mov
add
add
test
add
mov
test
add
mov
mov
add
add
add
test
test
add
add
mov
add
mov
incl
incl
incl
incl
incl
incl
incl
incl
mov
add
test
add
add
test
add
add
add
add
test
add
mov
test
add
add
add
incl
incl
incl
incl
mov
add
test
test
add
test
test
add
incl
mov
add
test
test
add
mov
test
add
incl
incl
incl
mov
add
add
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
test
add
mov
test
add
incl
test
add
test
test
add
add
add
add
add
incl
incl
incl
incl
incl
test
add
mov
test
add
add
test
add
add
incl
add
test
add
incl
incl
incl
incl
test
add
mov
test
add
incl
test
add
add
add
incl
incl
test
add
incl
incl
incl
incl
test
add
mov
test
add
incl
test
add
add
add
incl
incl
test
add
test
add
test
add
test
add
test
add
test
add
test
add
mov
test
add
incl
test
add
add
add
incl
incl
incl
incl
incl
add
add
incl
add
incl
add
test
add
mov
test
add
incl
test
add
add
add
add
add
add
add
incl
mov
add
test
test
add
add
test
add
mov
test
add
incl
test
add
test
test
add
test
test
add
test
test
add
mov
test
add
incl
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
test
test
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
test
add
movb
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
incl
test
add
test
test
add
test
test
add
test
test
add
test
test
add
jg
aas
sarb
pop
rcrb
xadd
loopne
rolb
add
add
inc
add
inc
add
xadd
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
pavgw
add
repz
ud0
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
jmp
add
add
add
add
and
and
add
add
test
add
xor
add
add
or
add
xchg
mov
add
nop
popa
adc
sbb
adc
popf
popa
adc
cmp
add
popa
adc
mov
adc
dec
popa
adc
ret
add
adc
int3
popa
adc
pop
popa
adc
fsubs
add
adc
in
adc
push
add
add
popa
adc
jo
adc
cld
popa
adc
js
adc
or
add
add
add
adc
mov
add
bound
add
bound
add
bound
add
adc
bound
add
adc
add
add
jg
adc
add
add
lea
add
add
add
add
add
add
add
add
add
bound
add
add
add
bound
add
add
add
bound
add
add
add
bound
add
add
add
arpl
add
add
add
add
add
jb
gs
xor
cs
insb
add
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
imul
insb
add
gs
insb
xor
cs
insb
add
jb
imul
add
outsl
arpl
xor
fs
insb
add
insb
ja
jo
cs
insb
add
outsb
imul
insb
add
jbe
ja
xor
fs
insb
add
imul
fs
insb
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
je
jb
arpl
fs
jae
add
add
imul
jae
add
dec
outsl
popa
fs
imul
add
add
jae
popa
addr16
outsl
js
add
add
addr16
insb
outsl
jae
dec
gs
add
push
jns
inc
jb
gs
je
imul
jb
popa
je
inc
outsl
outsb
je
add
add
gs
insb
inc
js
arpl
gs
add
add
je
imul
outsl
outsb
dec
outsb
outsw
inc
add
add
inc
push
je
jb
jne
add
add
je
inc
imul
jae
add
add
je
jb
gs
gs
outsl
outsb
outsb
arpl
push
je
je
add
add
inc
outsl
insl
jo
gs
outsl
jb
jb
add
add
jo
jb
popa
je
inc
popa
jo
jne
gs
imul
add
loope
add
dec
push
in
add
xor
shlb
loop
pushf
mov
cmp
lea
jns
lock
mov
add
dec
add
cli
adc
subb
lcall
jae
add
gs
pop
sub
repnz
loope
inc
dec
cmp
sbb
jbe
dec
fldenv
and
add
out
mov
dec
cmp
add
sub
out
sub
pop
rcll
xchg
pop
hlt
xor
pop
out
xchg
rcrl
addr16
and
fcmovb
or
mov
in
and
dec
lods
and
rol
or
push
clc
repnz
mov
add
jbe
rcll
mov
nop
es
lret
bound
ljmp
and
adc
inc
aad
testl
les
scas
sub
cmc
mov
inc
mov
adc
test
jecxz
rcrb
xchg
jmp
jmp
push
sub
add
sub
pop
pop
and
or
scas
push
stos
adc
lret
loope
add
enter
test
dec
mov
sbb
mov
push
idivl
adc
mov
mov
test
add
cmc
lret
add
cmpl
jne,pn
nop
into
mov
jo
fdivp
fsubrl
lods
cmpsb
sub
adc
sub
push
divb
push
mov
xchg
push
enter
movl
out
mov
push
dec
sub
push
scas
outsb
js
jno
out
aad
pop
jmp
and
out
pop
add
pop
addr16
testb
and
std
sub
add
mov
adc
mov
push
adc
add
int3
or
rcrb
cwtl
cmp
es
testb
in
add
adc
cmp
and
and
orb
add
sbb
inc
and
xchg
jo
dec
and
mov
cmpsb
rclb
test
imul
add
insb
nop
mov
mov
into
dec
pusha
or
inc
inc
sbb
inc
pop
and
mov
sbb
and
test
ds
add
rolb
mov
mov
rorb
in
jne
or
and
and
push
pop
into
inc
mov
or
je
and
cmpsb
add
fisttps
pushf
cwtl
inc
push
pop
mov
sub
xchg
and
add
inc
gs
sbb
fwait
outsl
int
testb
fidivrs
cmp
inc
fadd
or
sub
push
jecxz
or
movsl
jg
xchg
fistl
inc
adc
cmpsl
into
xlat
adc
jbe
scas
subb
dec
loope
cli
arpl
cmp
hlt
inc
and
vpshufhw
and
push
jbe
xchg
scas
subb
cmp
and
inc
lahf
movsb
or
and
jp
stos
in
mov
xchg
jge
mov
dec
je
mov
orb
incl
pop
add
test
and
push
jle
jle
add
xchg
sub
push
fistpl
inc
push
add
mov
add
push
ret
xchg
xchg
and
fmulp
out
in
dec
test
cmp
mov
leave
outsl
push
orb
xchg
fsubl
out
dec
lds
int3
xchg
dec
orb
lods
arpl
pop
lret
xchg
loop
cmp
lret
and
xchg
dec
popf
sub
jle
push
jl
sbb
cli
loope
add
into
fisubl
xlat
repz
dec
or
scas
adc
aam
mov
mov
int
dec
inc
add
rcr
bound
mov
adc
mov
sbb
in
shlb
push
add
xor
ud2
xchg
add
stos
addr16
push
add
cmc
push
xchg
pop
insb
pop
mov
jns
pop
dec
orl
add
loopne
and
les
je
orl
push
popf
mov
icebp
in
and
cmp
dec
or
daa
adcl
add
das
hlt
dec
and
or
imul
orb
push
testb
jg
xchg
push
loope
cwtl
inc
push
add
fiaddl
mov
mov
in
fmull
and
cmp
adc
into
rorb
outsl
push
and
out
in
repnz
mov
adc
stos
in
gs
add
push
out
jle
ds
push
sub
inc
push
add
sbb
in
adc
dec
push
adc
movsb
sub
rcl
sub
add
mov
loopne
dec
ret
js
push
mov
or
sarb
add
mov
pop
cltd
push
push
push
sub
rdpmc
negb
push
or
andb
pop
dec
adc
jge
dec
jb
lods
add
cmp
dec
inc
sub
push
add
cmp
and
aas
push
sbb
rclb
or
or
sub
sub
mov
or
mov
and
lods
daa
add
ror
aaa
je
add
fldcw
xchg
adc
test
rcll
or
xor
xor
push
mov
add
mov
inc
hlt
call
nopl
lods
push
sarb
sbb
push
out
dec
pop
rolb
jl
xchg
inc
in
mov
inc
les
add
mov
mov
mov
sarb
daa
js
mov
adc
pop
mov
jo
mov
leave
mov
movsb
into
cli
mov
adc
int
mov
mov
jbe
or
js
add
cmp
sub
outsl
out
xchg
outsb
and
or
lock
test
call
pusha
or
repnz
sub
inc
xchg
pop
mov
xchg
sahf
add
daa
adc
add
pop
imulb
orb
outsl
jbe
add
jle
jne
fistpll
in
dec
xchg
into
int3
cmp
push
dec
enter
mov
ds
mov
xor
adc
pop
xchg
daa
xor
adc
dec
sbb
push
clc
daa
add
mov
dec
jp
adc
lret
or
lods
jnp,pt
push
add
insb
add
mov
lock
or
frstor
cmp
pop
dec
das
clc
pusha
mov
adc
inc
push
add
int
addr16
jnp
cwtl
lock
push
mov
or
sarb
test
mulb
or
inc
jge
xchg
add
js
cmp
mov
lret
push
inc
jecxz
out
and
sbb
rep
xorb
dec
enter
jns
pop
sarl
mov
cltd
mov
in
cmp
shlb
adc
loope
push
cmp
ljmp
mov
cwtl
push
or
dec
inc
out
call
dec
enter
cmp
mov
loop
add
lods
jo
inc
push
scas
sbb
cmpsl
movsb
xchg
sbb
dec
sub
add
fisubrl
inc
and
cmpb
adc
mov
xchg
mov
mov
std
mov
jnp
and
les
add
pop
jmp
add
pop
dec
ret
pop
adc
xchg
xchg
pop
sub
repnz
xor
pop
daa
mov
cld
or
add
mov
sbb
fs
fadds
mov
xchg
popf
push
inc
loopne
and
inc
jecxz
dec
push
or
push
enter
scas
cld
mov
push
or
or
push
add
xchg
push
or
movsl
cmp
insl
test
pop
mov
jl
dec
dec
push
lret
inc
inc
mov
add
lods
insb
jle
adc
mov
dec
pusha
or
dec
test
xor
out
lea
dec
icebp
ss
sub
xchg
test
push
sub
sbb
inc
cmp
add
test
dec
mov
pop
sub
mov
add
test
pusha
push
push
fidivrs
lds
nop
jns
jno
sub
fsts
cs
dec
call
lods
mov
outsb
jmp
daa
andb
adc
cmp
xchg
out
fadd
addl
and
andl
jecxz
int
out
push
xchg
add
sub
popa
pop
fwait
add
sbb
out
push
and
addr16
mov
xor
or
mov
push
hlt
push
fistpll
and
push
loopne
inc
xor
cli
cmpsl
test
outsl
inc
add
or
xlat
add
and
mov
cmp
push
sbb
addr16
dec
adc
mov
aad
add
or
sti
inc
sbb
pop
xchg
orb
pushf
ret
push
add
sub
lea
loopne
ljmp
mov
loopne
lods
lret
mov
sub
xchg
and
adc
test
daa
cltd
pop
je
jae
in
adc
sub
sub
clc
and
or
imul
je
ljmp
mov
test
sarl
out
lds
and
push
cs
jae
cli
sub
scas
rcr
jmp
or
pusha
push
sbb
jp
leave
and
test
inc
add
in
adcb
cli
cs
aam
jne
js
mov
mov
cmp
dec
inc
lahf
cmp
xchg
mov
xchg
ljmp
add
sahf
fimull
mov
mull
mov
add
aam
jns
push
cmp
test
add
and
cmp
add
clc
rcll
lcall
push
and
or
iret
mov
cmpb
pop
andb
into
stos
add
add
pop
orb
adc
lods
adc
adc
sahf
test
sbb
cmc
jp
add
pop
call
push
adc
adc
add
insl
pushf
xchg
clc
lahf
mov
add
push
pop
imul
sub
push
jmp
xor
xchg
add
xchg
in
or
mov
mov
imul
inc
nop
mov
loopne
xchg
popf
mov
mov
sub
jg
ds
adc
xchg
loopne
sub
adc
pop
mov
inc
xor
jl
mov
icebp
add
shrl
cmp
push
or
or
xchg
imul
orb
fildl
adc
shll
xor
push
adc
leave
jp
dec
add
scas
pop
and
xor
arpl
pop
jae
adc
mov
daa
orb
pop
xor
jnp
lahf
jne
mov
dec
call
add
jmp
jl
jge
pop
adc
stc
cmpl
and
sbb
and
ficoms
testb
leave
push
pop
pop
shl
test
in
and
push
lds
xor
pop
sbb
add
fldcw
xchg
push
or
pusha
sbb
cli
data16
and
adc
xchg
cmp
fldt
cmp
push
add
add
sbb
divl
mulb
pusha
or
lcall
mov
pop
sub
push
cmp
add
cltd
jge
add
das
pusha
popa
mov
cmp
out
add
jb
lcall
lods
mov
mov
push
add
dec
mov
and
mov
add
sub
repnz
cwtl
adc
pushf
pop
add
enter
add
jae
dec
and
add
sub
and
cmpsb
and
sbb
pop
repz
xchg
adc
and
add
xchg
test
add
scas
dec
das
push
test
adcb
sub
lret
sbb
loope
nop
mov
push
sbb
fs
dec
rcrl
insb
cmp
dec
push
sahf
dec
add
dec
movb
or
dec
adcb
cmc
shll
sub
add
outsl
mov
js
xchg
mov
and
lret
ljmp
jae
jecxz
pop
pop
xor
sbb
and
push
jb
add
fwait
dec
faddp
inc
cmp
xorb
inc
aas
mov
adc
lods
test
mov
push
add
movsl
mov
out
inc
cmpsl
mov
daa
lret
add
xchg
stos
repnz
lret
imul
jecxz
push
sbb
jp
add
push
add
mov
daa
ja
xor
inc
mov
cs
fists
add
lds
add
inc
fistps
and
mov
movsl
mov
test
xor
data16
jg
in
scas
push
and
dec
and
sbb
cmp
cmp
sbb
scas
popa
and
mov
xchg
xchg
hlt
lret
imul
pushf
and
add
fldenv
in
add
das
test
pop
mov
pop
test
push
pop
in
adc
mov
xchg
and
les
mov
adc
out
mov
xchg
push
mov
push
jns
mov
add
jp
push
imul
jp
sbb
out
push
subb
sbb
mov
cmp
fidivs
pop
mov
xor
out
push
mov
jle
pop
sub
mov
cmp
dec
stos
and
ficomps
or
xchg
sub
iret
xlat
mov
sub
jbe
pusha
adc
nop
add
stos
aaa
out
mov
jle
push
push
mov
cwtl
ds
mov
cmc
add
mov
roll
movsb
mov
outsb
cltd
je
rclb
add
mov
add
xchg
push
jbe
cmp
iret
aam
rorb
or
and
int3
cli
cwtl
and
cmp
aam
loopne
iret
xchg
sbb
cmp
mov
or
ret
idivb
cmp
jge
dec
and
cmp
es
out
mov
bound
out
sub
push
ja
cmp
insl
std
fwait
test
sbb
and
popa
es
popf
cli
cwtl
sbb
insl
add
add
inc
arpl
or
ljmp
inc
scas
add
sbb
lret
adc
mov
and
jl
cmpsb
sbb
pop
sub
pusha
in
xlat
mov
adc
mov
jmp
xorb
es
dec
scas
stc
scas
aaa
add
inc
inc
loopne
iret
out
and
sub
mov
mov
inc
rorl
cmpl
dec
loope
scas
dec
ss
repz
ljmp
fadds
sbb
jg
dec
pop
sub
push
scas
xor
xchg
adc
inc
in
cmpsl
adcl
add
rcrb
mov
dec
cmp
in
repnz
xor
push
dec
push
pop
cmp
lcall
cwtl
cmp
fwait
cmpsl
loop
in
mov
shll
and
add
test
mov
push
mov
icebp
adc
js
add
faddl
js
pushf
jne
iret
jnp
loop
jae
mov
in
pop
jle
rorl
or
nop
aam
scas
or
push
mov
ficompl
and
add
or
addr16
clc
xchg
adc
cmp
adc
pop
add
pop
add
sbb
adcb
or
pop
add
test
mov
dec
adc
add
addr16
insl
pop
shr
lods
and
mov
add
mov
and
mov
jo
adc
imul
adc
repz
div
mov
sbb
shll
xor
nop
insb
adc
mov
sub
mov
cmc
data16
mov
inc
mov
mov
pushf
std
add
mov
push
outsb
dec
test
into
jo
dec
icebp
xchg
pop
aas
imul
adc
jge
xor
insb
int3
test
ficompl
adc
and
jno,pn
inc
jp
and
movsl
xchg
loop
sbb
xchg
and
add
iret
roll
loop
enter
add
xchg
movl
xor
add
in
adc
add
sbb
aad
mov
lds
repz
es
ljmp
cmp
loop
sub
or
lcall
lret
jne
add
stos
adc
rcrl
ljmp
or
daa
repz
inc
push
inc
adc
sub
xchg
lods
mov
fmull
inc
pop
or
and
sahf
pusha
into
inc
aad
add
jg
push
xchg
sahf
rcrb
inc
test
and
add
add
loop
add
sbb
subb
lods
das
adc
add
mov
add
cltd
add
add
sbb
lret
gs
sbb
add
test
inc
push
repnz
pop
pushf
ja
add
mov
sbb
incl
xchg
sbb
in
in
xchg
add
jno
jno
lods
js
add
pop
push
cmp
add
pop
sysret
lcall
mov
loopne
loope
mov
sbb
mov
mov
int
jge
addr16
or
jae
and
outsl
xor
daa
jne
je
bound
iret
push
outsb
cltd
push
fs
arpl
mov
or
sub
push
arpl
push
or
add
pop
inc
sub
loopne
mov
mov
add
or
test
hlt
push
int3
sbb
adc
icebp
and
push
or
aaa
add
aad
pushf
or
push
or
push
arpl
or
add
jo
xor
add
adc
jno
mov
sbb
clc
jne
inc
dec
inc
inc
mov
fadds
lods
and
and
pusha
inc
cmp
push
or
sub
add
sbb
adc
sarb
push
aam
xchg
xor
or
ja
shrb
fs
je
or
in
or
sub
and
and
sub
pushf
gs
jl
push
add
jb
insb
outsl
arpl
or
sub
mov
push
sub
jae
dec
sub
sub
or
ljmp
pop
pop
sub
add
mov
adc
add
inc
jno
add
add
sub
inc
popa
insb
jae
sub
push
mov
sub
and
popa
cmc
and
decl
nop
inc
lods
sub
add
je
addr16
mov
jg
sub
pop
sbb
add
jns
sub
insb
inc
add
outsl
jb
add
adc
popa
jno
xchg
fadds
cwtl
shlb
push
push
je
movsb
sbb
mov
adc
pop
add
sbb
sbb
enter
xor
and
insb
xor
mov
push
add
push
arpl
aad
or
cmpb
gs
xor
sub
or
jmp
arpl
rolb
inc
cs
int3
addl
clc
jmp
or
inc
dec
mov
pushf
int3
pop
push
mov
pop
and
xor
movsb
jl
lock
adc
cltd
mov
hlt
adc
pop
cmp
inc
fcoml
sub
mov
jmp
or
sbb
adc
or
add
mov
clc
xchg
mov
or
call
fsub
aam
int3
cmp
dec
or
xchg
movsb
enter
jb
cmp
mov
cmp
push
and
cmp
mov
and
xchg
inc
enter
jb
cmp
sbb
xchg
add
mov
call
loop
sub
je
movzwl
sbb
mov
cmp
pop
lods
lea
xor
cmpsb
or
sbb
inc
nop
and
xchg
call
xor
mov
push
ds
push
push
call
mov
test
jne
xor
arpl
mov
add
mov
add
lea
inc
roll
mov
and
inc
cmp
fs
cmp
jl
addr16
pop
nop
insb
push
inc
ja
mov
fsubr
fwait
iret
xchg
test
push
or
push
addr16
or
adc
int3
adc
push
add
mov
sbb
push
mov
push
push
push
adc
or
ret
nop
push
andnps
icebp
out
and
call
add
sbb
scas
nop
in
cmp
icebp
push
or
fwait
or
ret
nop
adc
call
inc
mov
or
add
jmp
add
or
and
pop
sbb
pop
pusha
fistpll
jmp
into
loop
inc
movsb
lahf
test
add
push
mov
sbb
pushf
sti
cwtl
xor
jo
into
add
call
inc
ja
pop
and
sbb
insb
add
or
jnp
add
jmp
mov
add
pop
inc
cld
push
cli
sub
ds
out
test
mov
and
stc
idivb
mov
mov
xor
xchg
dec
or
je
mov
cmp
repz
nop
xchg
sbb
fiaddl
jge
pop
mov
daa
in
out
aad
xchg
add
add
push
dec
push
shlb
add
mov
test
je
and
sarl
mov
dec
adcb
call
cmc
pop
fs
and
fnstenv
xchg
push
mov
push
mov
jns
xchg
gs
push
ja
dec
fmull
aas
in
movsb
dec
adc
xchg
or
or
arpl
push
aam
sbb
add
iret
sub
push
dec
or
push
and
jae
xchg
out
ja
out
dec
add
fidivs
push
sbb
jbe
imul
jne
stos
jae
xchg
jne
rorb
or
cmp
pop
pusha
add
in
adc
sbb
dec
sbbl
and
mov
xchg
cmpsb
sbb
adc
sub
scas
mov
ljmp
add
lret
ret
dec
and
ret
cld
pop
mov
call
out
xor
pusha
pop
cmp
or
sti
cwtl
xchg
cmp
add
mov
add
push
and
pop
sub
mov
jmp
lds
xor
xor
sub
mov
addb
xor
and
add
sbb
cmovno
and
popa
sbb
jae
or
out
out
inc
std
scas
xorl
movsb
inc
icebp
add
dec
andl
dec
lds
inc
cmp
mov
sub
aas
xchg
data16
aam
xor
cld
or
and
call
ja
je
push
inc
aaa
dec
push
xor
leave
inc
stos
call
and
int3
mov
cwtl
cmp
cmp
and
movsl
and
sbb
fwait
pop
int
aaa
adc
dec
js
or
xchg
jbe
add
je
cwtl
push
sub
add
daa
mov
test
lods
dec
push
adc
mov
xorb
aaa
or
xchg
leave
sub
mov
and
out
ljmp
jmp
dec
mov
je
jne
clc
jmp
addr16
imul
jne
adc
sbb
jp
and
sub
imul
push
inc
adc
push
adcb
mov
or
lock
out
cmp
fidivs
out
rolb
sub
mov
addr16
inc
mov
icebp
pop
andb
mov
ret
mov
cmp
inc
dec
sub
adc
lods
notb
repnz
cmp
stos
dec
jmp
jnp
mov
in
pushf
jne
push
pushl
cltd
mov
in
les
jnp
add
push
jle
xchg
adc
mov
or
and
push
inc
mov
cmp
mov
adc
rolb
hlt
inc
cmp
cmp
mov
sahf
bound
xor
mov
mov
push
xchg
ret
jmp
in
inc
cs
xchg
les
dec
jl
je
inc
sbb
or
arpl
push
xchg
mov
jb
adc
movsb
aad
sbb
dec
out
stc
cmp
pop
loopne
adc
pop
shll
iret
pop
sbb
dec
or
cmp
fistl
loopne
and
add
jb
push
adc
dec
or
dec
cmp
mov
test
jns
cmp
add
movsl
and
mov
jmp
movsl
pop
sub
mov
hlt
fisttps
imul
dec
add
and
test
jb
ja
addr16
push
loope
cmp
sbb
jb
and
sahf
mov
sub
popf
sbb
in
cli
add
jl
movl
shr
xor
adc
or
inc
or
or
pusha
lods
orl
clc
push
ret
adc
push
mov
cmp
outsb
or
push
movsl
lret
sub
add
dec
and
rolb
andl
adc
dec
fnstenv
loope
and
inc
push
je
sub
add
fimull
push
sbb
scas
enter
test
into
mov
testb
test
inc
mov
sub
cmp
push
mov
mov
lret
mov
push
push
fs
fdivs
andl
pop
scas
clc
dec
fsubs
sbb
repz
xor
inc
or
push
andl
xchg
into
mov
dec
or
mov
sbb
adc
cmpsl
orb
call
aaa
sub
push
jg
aad
pushf
jl
call
jge
fiadds
mov
je
fwait
or
adc
jns
inc
stos
adc
insb
pop
and
aad
movl
add
or
call
jl,pn
pop
push
mov
les
dec
push
mov
push
or
mov
push
add
sub
push
fwait
sbb
cmp
mov
cmp
adc
or
es
lahf
add
jmp
sar
inc
sub
pop
jg
sub
cmp
jl
xchg
push
inc
adcl
fwait
add
xor
scas
mov
jle
or
jb
fwait
adc
or
sub
adc
sbb
mov
lea
cmove
mov
push
loop
icebp
enter
and
testl
inc
dec
inc
or
inc
inc
popf
mov
addl
sub
add
and
or
push
je
inc
dec
and
call
pop
insb
xchg
jle
and
jno
jno
sbb
outsl
fidivs
orl
dec
in
aam
icebp
call
dec
rorl
hlt
pop
adc
pop
pop
sub
xchg
mov
ret
mov
or
xor
dec
or
nop
or
add
xchg
je
les
stos
shlb
xchg
jbe
ljmp
mov
adc
stc
or
mov
mov
cltd
or
xor
jg
mov
inc
sub
pop
je
call
leave
or
insb
aad
jne
sbb
jmp
cmp
movsb
sub
or
cltd
jmp
mov
add
icebp
pop
and
enter
dec
cmc
push
dec
push
mov
mov
rcll
add
xchg
xor
cmpsl
mov
in
cmp
sbb
sub
xor
mov
add
call
je
out
pop
clc
adc
or
jmp
ror
push
push
inc
xor
and
ret
jmp
jecxz
lcall
lods
mov
mov
sub
inc
mov
aad
movb
scas
mov
pop
shlb
dec
sub
or
jl
hlt
jmp
cld
lret
xchg
mov
inc
nop
mov
push
dec
or
push
shl
xchg
mov
inc
sbb
cmpsb
shlb
sbb
sub
mov
add
xor
les
mov
pop
adc
inc
loop
sbbb
push
sub
push
pop
cltd
mov
nop
xchg
push
lea
loopne
adc
inc
pop
jns
push
clc
mov
mov
jmp
cmp
cmc
test
test
sub
inc
adc
sbb
or
decl
mov
cs
add
ja
pop
mov
add
mov
aad
jno
sub
push
aas
and
dec
dec
sub
sbb
xchg
mov
scas
pop
ja
loop
cmp
cmp
sub
and
les
xorl
lcall
adc
ret
sbb
and
cli
add
cld
or
mov
js
pop
or
push
or
and
adc
cmp
mov
inc
and
inc
pop
loop
xchg
pop
mov
or
out
and
sahf
cmp
icebp
ret
movl
mov
int
jnp
dec
inc
orl
sub
arpl
cld
mov
jne
cmp
sub
add
js
lea
dec
add
push
pop
and
mov
lahf
test
push
push
fiadds
aam
test
subb
ficomps
adc
or
mov
jns
push
test
and
jl
sub
push
sbb
push
sub
push
push
add
and
lock
je
aad
xchg
fists
ret
and
cmp
lds
push
scas
ds
loopne
in
sub
test
shll
dec
xchg
dec
mov
xor
loop
push
mov
out
addl
pop
push
lret
or
je
ja
jmp
jmp
imul
mov
adc
dec
or
fistpl
sbb
es
jmp
inc
sbb
add
jmp
mov
xor
mov
cmp
pushf
push
lock
sarl
mov
inc
lret
xchg
call
pop
mov
jge
loope
es
in
test
sarb
pop
dec
and
test
loopne
popa
inc
lods
jmp
xor
cmp
inc
out
nop
and
outsb
orb
leave
je
xchg
cwtl
add
push
mov
and
xor
sbb
add
nop
push
jmp
movsb
inc
xor
sub
add
or
out
mov
xor
lds
inc
push
mov
ret
inc
loope
and
inc
add
nop
push
and
sbb
mov
pop
or
lcall
jg
adc
stos
xor
repz
and
outsb
cmp
sahf
push
cmpsl
inc
or
dec
push
cwtl
inc
add
add
cmp
ja
jmp
dec
aam
or
call
and
loopne
xor
jmp
push
push
push
mov
inc
pop
push
jne
xor
or
ss
test
jl
push
hlt
popf
push
push
or
or
push
je
add
jle
cmp
add
sbb
rolb
outsl
jl
in
shr
add
mov
cmova
movsb
jmp
mov
xor
in
mov
push
call
ret
push
cmp
das
mov
clc
inc
fs
sbbb
je
andb
mov
mov
xor
push
jl
xchg
sbb
std
sbb
sbb
push
lcall
xor
pop
subb
fs
mov
pop
push
movsb
das
sub
and
fistl
fldcw
push
lods
stos
sbb
sub
or
adc
clc
or
sub
repnz
add
loopne
clc
insb
sbb
cs
pop
and
cmp
push
push
or
mov
repnz
pop
push
or
je
insb
cmc
cwtl
push
js
js
pop
lds
test
fadds
ret
add
loopne
je
add
and
jge
dec
add
call
mov
scas
sbb
xor
divb
xlat
jb
das
or
arpl
mov
mov
data16
jne
sbb
lock
and
and
je
in
test
jmp
adc
dec
inc
sub
sbb
xor
mov
inc
pop
xchg
mov
sbb
lret
clc
dec
je
mov
inc
inc
and
and
add
push
rorb
inc
inc
pushl
pop
add
push
shr
je
mov
pop
add
dec
xchg
pop
sahf
sbb
sahf
and
out
repnz
jmp
push
add
outsb
pop
sahf
rolb
sbb
push
cmp
pcmpeqw
push
adc
dec
add
dec
out
and
push
or
add
in
sbb
loopne
adc
adc
inc
or
jmp
nop
sbb
push
or
sbb
xchg
sbb
inc
dec
and
pop
or
add
ret
fsubp
test
mov
add
or
dec
dec
dec
adc
and
sub
iret
fdivl
sub
or
mov
adcb
or
shll
jl
rep
rcll
and
xor
fldt
and
test
inc
xor
jno
ds
xor
lea
mov
push
pop
inc
movsl
pop
and
or
sub
sub
js
pop
sbb
xor
sub
popa
call
add
sub
or
ja
cmp
andl
add
xchg
fcoms
or
out
int
or
sbb
sar
testl
dec
pop
sub
testb
lds
pushf
mov
sub
je
test
add
nop
adc
push
add
or
lods
push
inc
aad
or
mov
jge
mov
mov
lods
cld
test
stc
add
push
or
inc
mov
sbb
repz
xor
add
xor
sti
call
lock
sub
xchg
flds
inc
cmp
filds
fiaddl
xchg
ja
add
icebp
and
shl
nop
fmuls
add
es
push
adc
testl
push
and
loopne
pop
jmp
stos
dec
mov
pushl
daa
mov
insb
mov
xchg
push
sbbl
jl
je
or
ret
pop
scas
loopne
fldt
fiadds
jmp
pop
xchg
jns
push
pcmpeqb
sbb
sbb
add
xchg
popa
xchg
pusha
and
inc
scas
mov
push
or
dec
mov
inc
icebp
stc
add
mov
pusha
stc
jmp
fnstsw
xor
fldcw
int
lock
mov
cmp
pop
or
mov
mov
add
ja
pushf
or
push
ret
pshufw
mov
adcb
mov
imul
leave
add
and
mov
movsl
aam
mov
sub
test
adc
hlt
or
out
sub
test
add
leave
sbb
or
jbe
imul
movsb
inc
call
and
lods
inc
add
xlat
fadds
lods
outsb
xor
xchg
or
push
push
add
int3
into
sbb
rorl
mov
popa
push
pop
popf
push
or
shrl
push
ljmp
lret
into
pop
mov
pop
js
aas
sbbl
xlat
pop
mov
addr16
int
repnz
bound
test
outsl
cld
jne
add
lods
lds
cmpsb
iret
decl
js
mov
mov
stos
mov
out
cmp
ret
in
cmova
pop
out
sub
mov
imul
cmp
shlb
leave
cmp
jecxz
xchg
push
mov
rorb
add
jle
push
inc
mov
push
pop
sbb
sarb
aas
repnz
test
nop
fildl
daa
movsb
lahf
fcmovnbe
pop
stos
clc
add
cli
rcrb
mov
jmp
fs
aam
repz
loope
jp
iret
hlt
bound
add
ds
xchg
push
cmpsb
scas
mov
pop
push
or
addl
xchg
cmp
xor
push
in
cmp
sahf
xchg
pop
cmpsb
add
mov
mov
jle
stc
enter
pop
mov
repz
push
mov
subb
and
mov
push
pusha
les
aad
bound
xor
xchg
dec
push
push
push
xor
mov
orl
pop
jne
mov
or
and
and
cmp
movsb
push
nop
mov
mov
sub
clc
lea
cld
push
bound
push
stc
ja
call
push
dec
xor
sub
mov
movl
fsts
clc
mov
add
addr16
inc
les
cltd
push
adc
mov
sar
mov
movsl
subl
mov
leave
mov
or
or
inc
push
add
push
inc
pop
inc
outsl
jb
insb
popa
outsb
fs
inc
gs
push
jo
add
push
dec
popa
jae
push
call
add
jecxz
out
dec
add
lahf
stos
shlb
xor
add
push
inc
rep
rorb
or
je
sbb
push
pop
or
cmp
jne
dec
add
xor
icebp
add
cmpsb
repnz
fcomps
inc
fsubrl
movsl
cmp
fdivrl
xchg
xor
out
insb
cltd
rcrb
sbb
es
inc
pop
sbb
add
cmp
call
sbb
leave
dec
sub
xor
lds
sub
sbb
jo
jecxz
mov
xchg
or
push
cld
cmp
mov
fdivs
rclb
pop
icebp
outsb
repz
popa
mov
gs
mov
push
daa
pop
faddl
jmp
cmp
jle
repnz
add
jae
cmp
cmp
cmpl
xor
sub
sbb
fnstsw
adc
popf
sub
scas
sbb
mov
jp
and
xchg
adc
sbb
pop
mov
ret
xchg
inc
stc
inc
lahf
pushl
mov
cmpxchg
push
add
pop
aaa
add
add
addb
inc
and
jo
je
mov
lods
push
sbb
mov
movsl
in
cmp
mov
aam
pop
daa
inc
cmp
inc
adc
add
add
mov
idivb
push
push
sahf
ljmp
lock
push
dec
sbb
dec
pop
adc
sbb
test
ret
xchg
ret
gs
lcall
dec
dec
dec
mov
inc
sbbl
mov
cmp
jne
xor
xor
jb
fnsave
hlt
mov
aaa
or
aas
sbb
inc
or
lea
dec
pop
ss
lahf
mov
daa
xchg
add
mov
mov
cmp
lock
in
dec
rolb
mov
xchg
jle
add
data16
test
sub
pop
cmp
push
add
repnz
clc
or
ja
mulb
pop
pop
add
aas
sub
or
fcmovnbe
push
inc
int3
popa
pop
fwait
mov
pop
pop
xorl
mov
xchg
sbb
adc
sbb
inc
lock
jne
mov
cmp
pusha
es
lock
xchg
enter
dec
mov
and
shll
or
pop
pop
jmp
or
rolb
or
fnsave
ja
lock
cmp
jnp
mov
popa
mov
dec
int3
dec
xor
jbe
movsl
xabort
dec
push
sub
dec
jne
nop
jns
jmp
sbb
mov
sbbl
jecxz
out
push
cmp
inc
add
sub
push
adc
dec
and
inc
adc
push
pop
sbb
repnz
mov
jmp
nop
in
lahf
inc
pop
add
add
push
push
shlb
add
fiaddl
sbb
mov
subb
inc
add
dec
xor
rcrl
pop
js
or
outsl
sub
sbb
or
xchg
mov
fs
pop
mov
mov
rorb
enter
in
xor
test
push
adc
pop
lds
add
rcrb
jbe
jo
mov
in
push
call
sbb
push
pop
push
bound
push
push
cmp
adc
pop
push
loopne
sbb
add
pop
adc
pushf
add
aad
sub
push
push
adc
mov
add
add
jmp
or
mov
clc
cmp
xchg
push
mov
xor
xchg
es
in
dec
jb
test
adc
push
and
out
bound
adc
ja
das
dec
ret
idivl
dec
adc
lds
push
sbbb
add
and
popa
rcrb
icebp
lret
push
lcall
enter
mov
cmpl
push
je
call
inc
xor
jbe
dec
inc
jne
imul
lret
orl
js
inc
mov
sbb
or
push
xor
push
cmp
push
lods
cmp
adc
inc
jp
lret
je
add
add
popf
mov
xchg
sbb
sub
jns
push
frstor
sbb
jl
in
test
mov
or
mov
inc
int
adcl
push
mov
jecxz
insb
sub
mov
nop
test
inc
or
jmp
aam
mov
outsl
pop
je
xchg
es
or
push
add
jne
cmp
mov
scas
sbb
adc
outsb
and
mov
lea
sub
lds
lds
xchg
aas
and
clc
test
add
cmp
jne
pop
fs
push
mov
pop
or
xor
fsubrl
and
dec
fld
cmp
xchg
cltd
and
mov
mov
jmp
pop
jb
xchg
fs
sub
dec
daa
mov
cmpl
dec
push
mov
mov
xchg
mov
ret
inc
xchg
add
jge
loope
dec
mov
movl
fisttps
nop
sub
stos
rcll
and
cmp
and
sbb
in
pop
add
push
mov
pop
xchg
loop
inc
cmp
aas
add
sbb
xor
mov
stos
xchg
or
andl
std
cld
out
push
mov
imul
lahf
add
adc
adc
lea
dec
cmp
fs
add
push
pop
call
loop
xor
or
aad
int3
mov
add
clc
cld
fdivrl
xchg
mov
je
xchg
mov
or
sub
mov
cmp
pusha
add
pop
sub
mov
push
cmp
adc
sub
inc
adc
push
and
cmp
std
nop/reserved
push
mov
sub
enter
leave
cmp
and
push
and
inc
xlat
inc
push
inc
into
inc
adc
inc
push
inc
fiaddl
inc
flds
inc
lret
dec
xor
cmp
or
fnstcw
pop
mov
data16
mov
lea
jno
sub
jmp
or
test
cltd
rcll
sbb
orl
fdivs
inc
cld
dec
dec
inc
sbb
shrl
xchg
adc
fstps
dec
mov
pusha
bound
nop
mov
outsl
dec
in
les
jns
push
ja
and
sbb
dec
cmp
push
or
jae
cmp
jne
popf
and
insb
or
or
jo
or
jo
add
jne
cmp
add
mov
add
xchg
out
mov
roll
cmpsl
das
sub
or
pop
ret
push
nop
pusha
adc
jg
xor
aaa
js
pop
push
cmp
or
repz
sbb
sbb
shrl
in
movsl
pusha
jno
mov
jge
mov
movsl
popl
dec
and
inc
dec
mov
push
inc
sub
or
das
jge
subl
push
and
sub
xchg
mov
or
sbb
call
jnp
xor
fs
adc
pop
cmp
jb
pop
pushl
cs
dec
popa
aam
and
jl
sbbl
xor
cmp
dec
cwtl
push
jle
sub
imul
or
or
out
in
inc
push
push
cmp
fsubs
fisubl
push
add
or
in
pop
pop
push
pop
and
cs
imul
add
jbe
sbb
dec
inc
rolb
out
inc
inc
inc
dec
jne
rcrl
mov
mov
das
ret
mov
or
add
push
movsl
or
mov
sub
fmuls
clc
nop
mov
mov
xchg
sbbl
ljmp
call
inc
out
je
mov
maskmovq
sbb
mov
pop
sbb
outsl
or
pushl
push
and
aaa
xchg
lds
pop
push
js
inc
in
push
push
adcw
adc
push
and
mov
or
jb
push
call
fcomps
push
loope
sbb
or
ds
lock
ret
int
xor
outsl
sbb
push
dec
cltd
sub
mov
cmp
inc
out
mov
adc
ret
inc
inc
cwtl
cmpb
jbe
cmpl
adc
lods
lahf
sub
sub
or
cmpsb
add
jnp
adc
mov
sub
pop
inc
adc
adc
jne
stc
sbbb
mov
data16
sub
jbe
stc
jb
inc
adc
sbb
pop
pushf
faddl
cmp
add
or
push
push
mov
mov
add
je
popa
or
adc
js
lret
repnz
call
imul
adc
push
hlt
lock
sti
cmp
jmp
mov
sub
jg
push
popa
cmp
jmp
push
mov
adc
cmp
xor
pushf
pop
stc
fisubrs
pop
push
adc
mov
inc
or
inc
loope
push
fstps
or
mov
mov
pop
mov
into
stos
stc
call
sub
mov
gs
sub
sbb
or
or
push
mov
cmp
push
xor
imul
mov
aaa
mov
adc
leave
sub
dec
clc
push
dec
jl
lock
nop
pop
sbb
jg
pop
push
cmp
adc
movl
or
leave
pop
sahf
jle
pop
ficoml
inc
inc
jg
js
add
call
fs
sbb
mov
inc
shr
add
js
xchg
push
inc
or
lods
cmpl
adc
out
and
add
movl
mov
inc
clc
jno
pop
xor
data16
int
lcall
loope
or
and
fdivs
xor
lds
adc
inc
cs
mov
mov
adc
push
int
and
push
sbb
mov
add
push
xchg
clc
fidivrl
movl
add
cmp
sub
imul
sbb
divb
out
enter
push
daa
jmp
and
fistpl
sar
iret
cmp
xor
xor
sti
dec
adc
and
nop
cwtl
jae
push
push
and
or
fs
or
test
push
add
or
inc
jmp
call
rcrl
out
rcrb
fs
xor
bound
or
push
push
sub
jmp
or
dec
add
jbe
scas
xor
test
inc
and
mov
sub
mov
rcrl
add
aam
sbb
sub
ret
cmpsl
jl
add
add
push
daa
cmp
cld
pop
movb
cmp
jl
call
idivl
mov
jbe
cmp
aas
std
sub
je
add
pop
ret
cmp
mov
sbb
int
adc
inc
mov
and
mov
and
cmp
cmp
cld
mov
es
add
fimuls
or
inc
fdiv
lcall
mull
push
and
pop
dec
and
inc
out
addr16
clc
std
mov
mov
lret
aad
push
jg
movsl
sbb
call
cli
je
cmp
rolb
jmp
nop
sub
push
xor
add
cmp
jne
and
pop
cmpsl
call
cld
mov
aaa
add
dec
jmp
dec
xchg
sbbl
sbb
mov
sub
into
mov
nop
js
or
sub
test
pop
lea
and
jmp
jnp
movsb
mov
add
xor
imul
fstps
jno
sbb
dec
icebp
and
cmp
or
rorb
jecxz
xlat
pushf
gs
push
jae
jnp
push
and
mov
xlat
push
mov
cli
lret
push
clc
inc
jb
pop
repz
mov
sarb
int3
call
rdmsr
push
mov
cmp
push
lcall
loope
inc
xchg
add
mov
fidivs
dec
cmp
mov
push
popf
ret
sub
es
jl
sbb
fidivrl
sub
sub
jg
inc
adc
shrl
inc
in
mov
sti
mov
mov
mov
addr16
or
dec
jl
adcb
and
icebp
fidivrl
aaa
add
stc
add
lea
add
movsb
mov
rclb
inc
or
cli
inc
loopne
aaa
test
push
dec
orl
inc
dec
jge
adc
lahf
lahf
imul
test
fsubs
adc
pop
stos
push
stos
leave
clc
ja
pop
mov
jmp
adc
cld
in
fnstcw
jo
mov
icebp
fs
dec
push
js
mov
inc
je
jle
leave
xchg
mov
cmp
jp
xchg
adc
pop
adc
ljmp
movsb
lahf
mov
dec
sbb
addl
clc
add
pusha
call
or
test
adcb
or
sub
js
dec
lods
xor
cli
test
cmp
mov
jmp
fdivl
movsl
jle
xchg
inc
pop
xor
mov
dec
ja
aas
and
scas
addr16
stos
push
sub
mov
add
mov
and
push
call
in
and
pushf
sub
and
pop
mov
out
movsb
lahf
dec
or
sbb
dec
cmp
or
xchg
mov
mov
ret
mov
lret
jae
jno
mov
icebp
cmp
pop
pop
adc
and
cmp
sub
or
inc
cmpsl
mov
sbb
call
loopne
push
sub
int3
inc
pop
in
and
add
les
cmp
test
jno
cmp
mov
mov
jnp
cmp
add
add
ret
adc
push
dec
pop
cmp
add
fwait
leave
mov
cld
and
lds
les
ds
lock
jne
cwtl
dec
rclb
outsl
ret
aad
mov
mov
and
inc
ja
movsb
push
iret
xor
dec
jg
outsl
lret
test
xor
jb
jl
push
add
push
imul
inc
xor
dec
push
pop
xchg
inc
and
sbb
cvtps2pd
pop
or
jmp
pop
mov
lods
xchg
sub
fimull
mov
sti
add
call
cmp
stos
add
imul
daa
mov
jecxz
clc
dec
and
sbb
shlb
xchg
xchg
fnsave
repnz
fidivl
or
movsb
lcall
push
addb
dec
enter
cs
adc
lods
push
mov
cwtl
cmp
add
pusha
or
mov
nop
dec
push
mov
lea
inc
or
inc
loope
add
dec
adc
daa
aas
test
lds
fldenv
xor
cmc
add
and
or
and
or
mov
setge
mov
ret
push
jp
push
lcall
dec
pop
push
or
or
adc
out
jmp
push
adc
push
or
push
mov
fwait
xorb
sub
cmp
add
lock
cltd
test
icebp
adc
imul
stc
addb
adc
mov
js,pt
cmp
in
loopne
push
dec
out
xchg
in
and
pop
adc
pop
sub
xor
mov
jmp
add
into
jg
mov
jmp
lret
or
sbb
ja
xor
sub
loop
cltd
clc
repz
pop
and
adc
aas
xor
sub
cmp
sbb
push
cmp
roll
icebp
daa
jmp
test
or
movsb
inc
ret
adc
sbb
jns
and
mov
add
outsl
cld
jne
sbb
push
or
and
jle
pop
ret
and
subb
sub
xor
push
sub
imul
nop
xor
or
xor
mov
mov
mov
push
dec
aam
inc
jmp
nop
adc
cmp
or
adc
pop
fdiv
nop
stc
popf
shrl
movsb
or
dec
dec
std
or
aas
inc
add
cmp
xor
sub
sbb
and
and
pop
push
dec
or
mov
inc
adc
or
test
adc
or
sbbb
repz
xchg
fcoms
insb
or
mov
negl
or
inc
popa
and
xchg
mov
test
mov
sub
pop
and
cmp
jmp
inc
aam
lcall
adc
cltd
mov
add
pushl
cwtl
incb
pop
in
lret
inc
ljmp
stc
movsb
lds
cmp
mov
in
sub
push
fsubrl
sahf
mov
dec
push
sub
scas
sub
push
std
imul
fs
push
mov
sahf
dec
pop
inc
inc
mov
adc
aaa
add
lds
sbb
dec
rol
mov
xor
imul
xchg
add
adc
xor
push
mov
mov
lahf
xchg
jmp
rorb
ficoms
push
or
jno
xor
or
pop
mov
dec
je
add
or
jne
stos
pop
lahf
mov
adc
divl
mov
jmp
mov
sbb
dec
cmp
adc
fdivl
not
loopne
shlb
and
cmp
jb
or
jbe
cmp
inc
loop
pop
test
dec
inc
sub
fsubrs
sub
xchg
jl
pop
mov
enter
push
mov
jle
xchg
std
repnz
rorb
test
bnd
cli
xchg
xor
int3
xlat
nop
test
hlt
les
xchg
lods
and
inc
cld
pop
pop
push
sbb
inc
pop
cmp
or
mov
arpl
xor
or
jl
lock
push
adc
add
popa
adc
mov
vcvttss2si
push
call
jno
cmp
cli
push
jno
rol
insl
call
mov
lock
clc
fstl
pop
xor
add
xor
jge
lock
sbb
xchg
test
sbb
imul
dec
lock
dec
sbb
mov
sub
decl
lods
push
cltd
inc
fsubs
mov
push
xchg
insb
or
inc
sbb
pushf
xor
mov
dec
dec
in
dec
push
in
adc
lods
ror
mov
sbb
push
add
loope
repz
sub
inc
push
mov
cmp
ret
push
pusha
cmpl
sub
int
or
or
add
jl
inc
cs
or
pop
lea
jmp
jmp
dec
jne
out
mov
dec
ret
ret
popf
es
add
push
push
and
mov
pusha
lock
daa
jne
lock
adc
js
fs
pop
mov
cmp
aam
xchg
movsb
rclb
roll
mov
adc
jle
push
push
mov
lret
inc
int3
mov
pop
jl
pop
adc
test
rcl
clc
in
pop
sbb
ret
sbbb
frstor
xchg
jne
adc
shl
sbb
call
xor
cli
dec
test
jnp
jne
push
int3
stos
mov
or
mov
add
xor
adc
jp
out
jae
int
or
mov
and
scas
xchg
sbb
or
or
repz
ret
inc
imul
into
jecxz
jmp
or
xor
test
cmp
pop
jne
cmc
add
jge
clc
mov
pop
push
jg
cmp
xchg
or
push
and
call
and
das
lods
lods
hlt
mov
ja
shll
or
sahf
adc
test
or
xor
cli
cmpb
loop
or
add
adc
call
cmpb
push
testl
mov
movb
fisubrs
add
inc
add
xor
sub
jmp
rolb
or
inc
cmp
push
test
push
and
lds
xor
push
dec
sub
cltd
andl
movb
dec
mov
add
inc
cmp
adc
test
sub
dec
xchg
movsl
dec
ss
mov
testl
dec
cmp
dec
fimuls
add
gs
out
push
xor
cs
shlb
outsb
sbb
push
inc
adc
mov
dec
mov
lea
outsl
push
xor
or
iret
push
adc
or
aam
pop
inc
sarl
and
mov
cmp
lea
das
xchg
dec
imul
cld
dec
test
dec
nop
call
sub
mov
movsb
std
sub
xlat
addr16
push
sub
push
lods
sub
and
es
lds
popa
mov
add
scas
jge
insb
xchg
sbb
outsl
mov
imulb
cmpb
sarb
shll
or
and
adc
or
jmp
dec
subb
push
sub
cmp
or
insb
popf
mov
inc
stos
addb
adc
xchg
lods
test
scas
push
pop
lahf
dec
lds
add
sbb
repz
or
test
ss
xchg
push
sbb
push
outsl
data16
popa
jb
popf
gs
push
sbb
jae
sbb
popf
insb
int3
movsl
and
hlt
push
decl
sub
adcl
mov
sub
jp
stc
jp
imul
adc
sahf
stos
push
pop
mov
mov
lea
in
pop
rcrb
adc
icebp
inc
add
add
mov
dec
mov
pop
mov
or
nop
xchg
lahf
pop
test
pop
clc
aad
andb
decb
or
jg
inc
pop
dec
jmp
or
aam
int
sub
push
mov
push
scas
iret
call
xor
call
dec
jbe
xchg
add
xchg
decl
test
pop
mov
xchg
mov
adc
push
cld
jne
jno
sub
dec
ljmp
lods
dec
leave
add
iret
jl
insb
sub
add
and
fmull
popl
pusha
insl
push
inc
outsb
leave
dec
nop
mov
xchg
mov
sub
es
das
push
pop
aaa
adc
lahf
mov
pmulhuw
push
lods
sarl
and
pop
mov
mov
and
addr16
ret
jo
test
sub
pop
jae
das
dec
adc
fdivs
andl
xchg
add
jmp
ret
test
jl
pop
daa
jp
inc
cmpsb
jo
out
or
andps
mov
test
jo
or
jl
outsl
adc
stc
and
idivb
xchg
leave
in
xchg
clc
shlb
movq
mov
xor
pop
xor
xor
pop
cld
ja
add
shr
or
loopne
sbb
or
push
int
aas
sbb
repz
repz
jp
pop
add
bound
mov
es
lret
rclb
and
sarl
or
aam
cld
sub
add
dec
sub
test
sbb
inc
dec
adc
add
sarl
jecxz
push
inc
stc
ret
lods
hlt
mov
pushf
xchg
push
cmp
mov
jmp
adc
mov
and
in
ss
push
clc
test
out
dec
cltd
hlt
incb
mov
inc
test
xorb
or
sbb
ljmp
lea
mov
inc
rorl
shrb
jne
mov
cmpsl
int
call
add
loope
or
mov
pop
sub
cmp
or
imul
popf
jae
jmp
in
xorb
adc
pop
push
scas
add
inc
and
vcmpss
xor
sbb
out
in
push
push
sbb
lods
adc
or
mov
cmp
fwait
nop
sbb
daa
shll
scas
or
pop
push
dec
leave
xor
out
call
push
je
inc
lea
or
jb
xchg
adc
jmp
and
pop
pop
jb
dec
jbe
inc
or
cmp
pop
inc
push
in
jb
adc
pop
daa
fisttpl
scas
pop
ds
xor
stos
les
pop
inc
xorl
jle
test
lods
scas
movsb
and
mov
bound
dec
and
adc
lret
xchg
jg
divps
aaa
cmp
push
push
pop
push
pop
lea
hlt
cmp
test
cmp
pop
dec
push
jge
push
call
imul
and
push
aam
outsl
xor
mov
xchg
imul
xor
inc
test
aas
pop
lea
adc
test
lock
and
mov
hlt
aam
mov
push
je
pop
dec
lret
and
xchg
lock
mov
lcall
dec
movsb
add
and
inc
push
adc
inc
or
loopne
fisttpll
push
push
sub
cmp
pop
dec
clc
and
rolb
mov
inc
add
in
adc
cs
fwait
adc
sbb
sub
inc
jmp
adc
pop
and
sbb
arpl
adc
cwtl
xor
dec
and
inc
in
and
mov
pop
and
outsl
jle
sub
sub
inc
cmp
xor
jp
push
int3
test
inc
dec
push
test
adc
push
sub
xor
mov
push
inc
rclb
mov
push
xlat
push
mov
loope
andl
add
add
inc
xchg
and
or
mov
inc
sub
je
lds
pop
dec
inc
je
xor
sbb
mov
adc
mov
js
pop
push
cmpsb
insl
repnz
mov
jg
inc
mov
inc
and
add
and
leave
jne
es
sub
add
ret
mov
fcmovne
test
stos
mov
mov
add
push
dec
push
add
jmp
mov
aad
movsl
xor
and
or
call
xorl
xor
cmpsb
mov
cli
inc
andb
shlb
dec
pusha
cwtl
sub
cmc
cmp
xchg
mov
ficoms
jbe
addr16
push
dec
jmp
cmpsl
add
ljmp
mov
mov
inc
bound
jo
or
push
inc
jo
pop
xor
add
pop
xor
mov
and
outsl
adc
insb
scas
sbb
cld
xor
push
inc
jb
insb
jns
sub
jae
bound
xor
cmp
cmpsl
or
and
jae
inc
mov
popa
in
insb
je
push
dec
jge
dec
imul
popa
mov
inc
dec
int
out
mov
ss
lds
sbb
int
jb
loope
dec
or
xor
leave
cltd
insl
int
enter
imul
cmp
add
arpl
lahf
push
andps
push
push
inc
cltd
fcoml
jmp
mov
popf
roll
and
les
xchg
or
clc
xchg
xor
sbb
mov
and
xchg
aam
shl
enter
inc
mov
inc
sbb
inc
adc
jecxz
shr
inc
or
push
mov
fs
mov
mov
and
in
jb
cmp
push
mov
and
enter
jb
cmp
sbb
mov
and
mov
mov
in
jb
cmp
sbb
mov
jae
inc
mov
enter
jb
cmp
jl
je
insb
enter
jb
cmp
mov
and
sub
stc
lods
mov
jo
inc
cld
and
xchg
in
mov
test
mov
and
in
jb
ja
lods
les
pusha
cmp
push
mov
stc
xchg
mov
dec
adc
icebp
sbb
mov
adc
and
mov
test
cmp
mov
and
enter
jb
cmp
sub
inc
and
sbb
adc
or
add
cld
sbb
mov
and
xchg
loopne
fsub
shlb
cmp
test
inc
mov
enter
jb
cmp
push
pop
xchg
push
enter
jb
cmp
sub
inc
and
aas
push
or
enter
mov
js
mov
and
pusha
enter
jb
cmp
cmp
xchg
and
sbb
test
fcoml
pop
lods
stc
enter
mov
mov
xorb
hlt
xchg
mov
js
int3
mov
sub
movl
xchg
inc
leave
cmp
cmp
sub
call
insb
sbb
sahf
nop
stos
sub
xchg
push
jb
cmp
inc
mov
and
xchg
sub
and
sbb
cmp
sbb
sub
loop
cmp
inc
mov
and
xchg
sub
and
sbb
fsubl
mov
mov
rolb
loop
or
mov
mov
jecxz
test
jp
stc
sub
or
and
and
sti
xor
or
push
add
in
push
adc
or
loope
fsubl
or
add
jnp
popa
pop
sub
adc
pop
mov
adc
sub
shr
adc
mov
mov
loopne
xchg
fimuls
stc
dec
or
pop
sbb
xchg
cltd
or
adc
adc
sbb
xchg
and
and
sub
call
ret
lahf
dec
jo
mov
mov
and
nop
pop
in
inc
push
push
cmp
and
fsub
stc
push
nop
lea
outsb
jb
lods
xor
call
clc
cmp
push
cld
nop
adc
dec
lods
psubb
clc
pusha
scas
or
pop
mov
sbb
mov
sti
xor
jmp
stos
mov
aas
and
pop
pop
or
or
jmp
insb
jp
popf
sbb
insb
in
gs
xchg
dec
inc
pop
dec
or
outsl
loope
and
cmp
jno
sbb
jmp
pop
adc
push
add
dec
push
push
out
sub
inc
fists
pop
sbb
popa
pop
popf
jb
and
jb
adc
cmp
popf
mov
or
icebp
enter
jb
cmp
sbb
mov
and
xchg
stc
enter
jb
cmp
sbb
mov
sbb
mov
and
xchg
jecxz
in
in
out
out
call
jmp
sbb
cltd
or
sbb
mov
and
xchg
ror
shl
shlb
cmp
sbb
mov
and
xchg
fmul
ftst
fidivl
cmp
sbb
mov
and
xchg
ror
in
jb
cmp
sbb
mov
and
xchg
enter
lret
cmp
sbb
mov
and
xchg
mov
mov
mov
mov
mov
mov
inc
mov
mov
mov
jb
cmp
and
in
jb
cmp
and
in
jb
cmp
and
jne
js
int3
inc
jne
js
faddl
shrl
sub
mov
or
shll
push
add
xor
mov
pop
pop
sbb
insb
lods
pop
jbe
fs
fwait
pop
into
push
push
ljmp
add
inc
js
gs
imul
jne
shrb
pop
push
dec
test
jo
pop
nop
sbb
pop
inc
sbb
jo
lock
dec
cmp
andb
insl
outsl
jb
xchg
test
push
pop
mov
cmp
push
popf
and
or
outsb
jbe
jno
lret
pop
testb
and
or
mov
xor
and
pop
pop
test
popa
xorb
adc
xchg
insb
lds
dec
or
dec
push
xchg
mov
sbb
icebp
or
or
add
pop
add
jp
adc
out
dec
rolb
popa
outsb
sbb
enter
or
or
inc
scas
data16
outsl
dec
ja
inc
adc
call
nop
or
dec
icebp
xchg
dec
mov
cld
jp
mov
inc
jp
pushf
jns
pop
jb
mov
rcrb
fs
adc
in
cwtl
xchg
fs
mov
rcr
adc
xchg
insb
inc
popa
es
or
cld
rolb
or
pop
nop
mov
jne
mov
push
outsl
sahf
insb
test
mov
xor
or
pop
jne
es
jo
pop
jl
hlt
and
fmull
mov
sub
int3
mov
cmc
jae
push
orb
mov
inc
arpl
push
dec
jb
sub
nop
imul
push
icebp
push
inc
jnp
pop
arpl
adcl
and
je
sbb
and
rolb
enter
xchg
jl
in
jl
jp
enter
or
ret
popa
outsl
xchg
fs
enter
inc
fdivrl
jb
popa
arpl
jp
adc
jg
dec
or
xchg
jg
xchg
inc
adc
or
and
in
scas
pop
gs
cmp
gs
sub
enter
add
add
aaa
xor
imul
push
cmp
enter
and
cmp
call
add
mov
inc
inc
insb
dec
scas
adc
fistpl
push
inc
push
cmp
loopne
jecxz
xchg
add
int3
add
jmp
or
inc
iret
dec
mov
mov
dec
push
cmovle
aad
aaa
fisttps
jecxz
mov
sub
mov
int
les
push
mov
jnp
sbb
fists
jno
cmp
sub
loopne
cmpl
or
xor
movsb
pop
adc
andb
dec
jne
inc
aas
push
push
fists
push
aam
push
adc
loop
push
aas
outsb
shl
and
out
fs
shr
adc
repz
scas
cmp
push
adc
and
mov
cld
mov
call
pop
dec
sub
mov
adc
mov
xor
sti
or
fmull
inc
sarl
mov
cli
mov
lcall
and
mov
add
ja
sub
mov
inc
inc
dec
lds
jne
gs
sub
inc
nop
pop
and
negl
fcmovu
lcall
cmp
jbe
sahf
jbe
leave
repz
je
movzbl
decl
push
dec
cld
repz
nop
xor
lret
or
scas
nop
add
repz
cmpsl
jne
std
es
add
inc
push
push
push
mov
mov
ljmp
adc
jmp
rorb
adc
and
sti
je
loop
int3
push
xlat
out
mov
sbb
test
or
fisttps
mov
pop
mov
sarb
outsl
cwtl
out
rclb
add
or
mov
test
xchg
cmp
inc
jb
jmp
dec
mov
sahf
sub
sbb
daa
push
mov
xchg
fwait
push
jmp
pop
ret
cs
add
xor
test
nop
repnz
dec
mov
clc
aad
aaa
cmpsl
fsub
mov
in
pop
pop
mov
inc
cmp
jl
or
lcall
and
push
jge
and
arpl
dec
and
aaa
pusha
clc
insb
into
sub
inc
ljmp
test
xor
rorl
add
sbb
or
repz
sub
sbb
hlt
sub
add
loope
push
ds
ret
ljmp
sbb
mov
bound
and
incb
jae
inc
dec
jne
mov
mov
or
fs
sarb
fadds
imul
scas
ret
xor
xor
div
movsb
sbb
xor
cli
cmp
or
pop
mov
push
jne
ljmp
jbe
add
shll
add
jne
insl
push
mov
out
in
adc
leave
push
lea
sbb
shrb
rcrb
mul
movsb
push
pcmpeqb
pushl
shlb
loopne
sbb
cmp
pop
or
fs
sub
or
pop
dec
sbb
or
cvttps2pi
mov
movsb
inc
inc
daa
sbb
sub
add
and
dec
pop
fcoms
pop
jmp
sbb
fwait
add
jecxz
fwait
clc
ficomps
fdivr
mov
xchg
xor
or
fadds
rcrl
loope
xor
add
ret
in
in
in
ficomps
inc
out
jmp
push
jmp
movsl
xor
adcl
call
pop
pop
fwait
mov
cli
inc
loopne
test
mov
nop
and
mov
and
sub
jnp
push
ret
mov
movsl
aam
out
and
lock
adc
mov
movb
stc
cld
or
gs
bound
pop
ds
mov
jb
aaa
xor
in
aam
xor
push
pop
mov
test
or
jp
mov
add
mov
mov
xchg
inc
add
mov
xchg
cli
mov
and
mov
aam
and
inc
push
jb
int
inc
adc
pop
push
fcompl
inc
call
and
mov
sbb
ret
das
js
xchg
addl
cmp
and
mov
hlt
movsb
leave
or
pop
xchg
jge
repz
mov
insl
lock
sbb
rclb
xchg
add
jmp
call
add
ret
push
or
xlat
das
push
pop
xor
xor
add
and
inc
mov
xchg
loop
or
ret
add
rclb
add
xor
add
sub
icebp
lret
js
mov
sub
jb
adc
adc
mov
mov
pop
xor
mov
inc
adc
dec
and
pop
adc
clc
or
push
repz
out
cwtl
incb
ja
aas
imul
xor
add
imull
and
cmp
add
push
mov
inc
sub
pop
dec
push
jne
adc
negl
mov
daa
pop
ja
das
push
jge
pop
aas
cmpsl
push
sbb
js
mov
push
pop
adc
cld
xchg
cmc
out
outsl
imulb
push
sub
mov
push
mov
test
mov
dec
lret
lea
fists
fisubl
je
stos
sbb
push
push
cld
lods
ror
or
ret
mov
stos
mov
push
push
ret
pop
push
add
push
arpl
adc
jne
hlt
les
enter
pop
xor
or
push
xor
test
out
ds
adc
jle
inc
dec
or
pop
adc
inc
dec
pop
xor
fnstsw
add
ja
pop
mov
negl
pop
call
out
sti
or
mov
std
and
jne
mov
jle
mov
xor
xorb
ret
cwtl
loope
clc
adc
ret
outsl
push
rcll
pushl
mov
popa
incb
jl
inc
or
sbb
pop
hlt
or
addb
fnstenv
sub
jnp
aam
adc
or
adc
jmp
scas
sub
xchg
stos
lods
and
call
jecxz
jle
test
mov
jl
fadds
mov
mov
adc
pop
ret
sarl
mov
jg
jnp
popl
sub
mov
cs
popa
lcall
adc
scas
pop
cld
pop
dec
push
aam
xchg
dec
xchg
pop
push
lods
xchg
pushf
lret
inc
in
aaa
int3
jns
inc
in
jmp
pop
shll
jmp
sbb
daa
adc
addr16
es
jmp
sub
and
add
loopne
es
sub
push
adc
add
add
data16
pop
cmp
into
xor
arpl
mov
sbb
lret
test
not
sbbl
push
mov
imul
mov
std
and
cmp
mov
hlt
xor
adc
and
adcl
frstor
adc
ljmp
lds
adc
push
push
mov
push
pop
mov
pusha
xor
je
repnz
push
mov
pop
rorl
outsb
std
andb
jg
mov
jmp
cltd
sbb
xchg
test
push
aad
dec
ret
dec
incl
jle
jl
push
sbb
sub
mov
sbb
dec
mov
cwtl
cwtl
push
andl
aad
out
inc
push
mov
dec
data16
shll
push
imul
cmp
push
fimull
mov
les
inc
cs
cmp
dec
sub
js
lock
movsb
fs
ret
push
mov
cmp
insb
xor
add
cmpb
jne
push
mov
sub
pop
es
push
pop
jne
push
rorl
mov
push
loope
push
and
inc
or
jge
inc
imul
jl
push
mov
xchg
repnz
fisttpl
enter
lret
jle
adc
stos
mov
jmp
fcoms
loop
sbb
jne
push
push
inc
dec
es
js
movsb
adc
inc
dec
das
sti
mov
xor
les
cltd
mov
mov
roll
aam
sbb
jnp
mov
xchg
popf
or
xor
inc
xchg
dec
jae,pt
loope
flds
lea
call
sarl
add
andl
push
sub
adc
sub
lret
push
xor
ret
xor
push
test
outsl
cwtl
push
xchg
jnp
push
ss
lds
or
mov
ss
gs
mov
dec
mov
cmp
dec
inc
push
lea
dec
and
sbbb
adcl
maxps
in
pop
mov
mov
sub
in
test
test
mov
std
pop
clc
adc
sub
cmpsl
lods
test
sub
mov
clc
mov
add
xor
lea
jno
xchg
cmp
push
test
pop
push
int
inc
push
les
adc
stos
dec
sub
jmp
sub
jo
xchg
mov
push
jmp
sub
mov
add
clc
inc
call
leave
les
add
aam
xchg
enter
xchg
cld
call
rorb
repnz
pop
pop
cmp
ljmp
fstpt
push
jmp
je
xor
dec
or
leave
arpl
nop
xor
adc
fs
ret
sub
sub
mov
inc
nop
ljmp
xor
leave
les
enter
ret
nop
sbb
inc
out
inc
adc
ja
int
loope
jl
test
mov
not
jns
jb
jb
sbb
shr
jns
ja
push
ret
push
mov
dec
std
xchg
add
inc
sub
sub
and
scas
xorl
mov
xchg
loopne
dec
pop
das
dec
adc
mov
mov
push
inc
insb
and
mov
xchg
xor
cmpsb
mov
cmp
fcmovbe
mov
dec
cmp
cli
jp
jmp
ljmp
test
fcoml
fcoml
test
push
shrb
nop
sub
dec
insb
mov
cwtl
lods
jmp
mov
xor
das
ret
jg
inc
shr
repnz
cmpb
daa
inc
mov
bound
push
leave
add
cs
xchg
fistpll
jbe
push
lea
test
adc
enter
popf
cld
pop
pop
rcll
push
loope
push
xchg
jl
pop
js
add
mov
test
int
add
or
dec
mov
xchg
pop
and
dec
fwait
xchg
xor
dec
xchg
or
jb
ret
outsb
or
mov
lcall
push
clc
inc
sti
pop
jbe
mov
rorl
iret
rolb
add
int
les
movb
pop
xchg
push
sub
incb
mov
pop
mov
sub
jnp
sbb
pop
mov
push
sbb
sbb
rorl
mov
js
jno
scas
sbb
aad
xor
and
mov
ds
clc
or
hlt
push
lock
xchg
pop
or
lods
cmp
ljmp
test
sub
mov
cli
mov
test
fstp
mov
jb
out
sub
fsubrl
in
or
xor
and
sbb
std
dec
ljmp
and
sub
aas
or
aad
popf
mov
dec
ret
inc
mov
xorb
out
or
lret
add
lcall
xchg
push
test
jge
add
inc
xchg
xchg
sahf
jmp
cmp
das
loopne
xor
jb
sbb
ja
imul
add
incl
inc
xchg
in
jmp
pop
cmp
or
fcoms
decb
dec
jl
addr16
je
test
fiadds
mov
cmp
in
pop
and
lea
xor
xor
pushf
push
add
and
sbb
jnp
or
push
popa
sub
cwtl
add
and
pop
cmp
sub
pop
xor
jbe
ret
sti
adc
ja
call
out
shll
sub
loop
lds
mov
es
lret
add
xor
and
and
pslld
test
or
push
add
inc
jmp
insb
inc
cmpsl
mov
jo
adc
insb
into
and
inc
jb
adc
sub
test
cmp
adc
movsb
punpckldq
cmpl
jbe
cmp
or
movsb
add
xor
and
inc
sub
lods
adcb
jmp
adc
xchg
inc
int3
ja
add
add
test
ja
push
jp
aaa
pop
jp
stc
jle
push
sbb
stos
cmp
add
mov
rclb
fmull
mov
test
adcl
popa
ficoml
dec
cld
stc
mov
fs
inc
push
or
imul
sub
add
cmp
test
int
inc
je
jg
push
inc
fnstsw
fldl
add
adc
testl
add
adc
sub
and
jne
or
test
ss
and
mov
clc
in
mov
mov
mov
xchg
inc
iret
and
inc
cli
xor
jecxz
pop
data16
inc
shlb
or
fdivp
pop
or
daa
loope
and
jae
adc
mov
ret
mov
xchg
mov
inc
add
ret
jne
das
pop
stos
mov
push
inc
icebp
in
test
fisubrs
push
dec
dec
xlat
inc
pop
inc
or
push
pop
jno
lea
loop
sarl
inc
xchg
mov
sub
cmp
es
pop
fisttps
orl
test
out
dec
js
jmp
je
jmp
es
and
ret
jmp
xor
fldt
stos
test
push
push
inc
push
cmp
xchg
test
jmp
sub
xchg
insb
js
stos
cmp
push
or
imulb
and
or
scas
jge
cmpxchg
or
add
mov
stos
xchg
sbb
jecxz
divl
mov
inc
dec
mov
add
out
add
cmp
clc
clc
sub
aam
cmpsb
inc
xchg
mov
ret
sti
ret
or
mov
hlt
mov
andl
add
mov
or
and
shrb
jle
sub
aaa
daa
rorb
add
movsb
ljmp
xchg
in
jge
movzwl
sub
jae
cwtl
inc
adc
mov
dec
cwtl
fwait
bound
adc
mov
jmp
xor
cwtl
outsl
sub
adc
aas
ja
xor
jle
mov
sbb
popf
test
pop
or
sbb
decl
dec
movsl
cld
pusha
iret
jmp
aaa
or
add
scas
sbb
dec
inc
pushf
inc
mov
mov
cmp
xor
stos
ljmp
xor
jg
cmp
jl
sbb
xor
dec
stos
cmpb
dec
cmp
fnstcw
sbb
pop
jmp
xor
inc
pop
lea
loop
or
adc
stos
or
pop
inc
clc
adc
les
pushf
decl
cltd
or
les
push
jns
mov
xchg
mov
add
stos
leave
mov
inc
mov
add
pop
gs
dec
aaa
mov
cmpl
mov
pop
xchg
bound
add
or
add
repz
inc
nop
push
dec
je
cmovnp
mov
cli
ret
shr
divb
add
call
lods
sahf
and
sbb
in
inc
sub
das
jns,pt
test
jb
xor
or
sbb
adc
add
cmp
cwtl
cmp
pushf
fwait
adc
xchg
or
push
push
jbe
push
and
sub
sub
lea
or
std
nop
cmpsl
lods
add
pop
pop
inc
loop
push
ret
leave
cmpsb
add
jg
and
inc
add
mov
popf
sub
push
sub
add
dec
sub
xor
sub
cs
cmp
add
sub
mov
loopne
jmp
cmp
test
test
call
lcall
or
mov
xor
pop
jne
or
fs
adc
sahf
or
add
push
movb
cmpsl
test
nop
imull
adc
or
clc
mov
jl
es
imul
in
test
and
xchg
or
adc
fldt
lock
imul
popf
mov
je
fidivl
pop
fbstp
mov
or
or
dec
shr
adc
in
add
mov
sahf
jmp
shrb
or
xor
push
iret
mov
dec
rorb
call
jae
aas
cmpb
sbb
dec
js
push
adc
add
ja
jmp
push
mov
mov
dec
sahf
dec
and
je
icebp
cld
push
mov
shr
mov
ret
dec
dec
out
leave
sbb
cs
adc
pop
add
add
rorl
test
jns
xor
add
or
sti
aad
add
and
sbb
jg
addl
or
add
and
int3
push
in
fildll
cli
mov
or
xchg
or
push
add
filds
nop
or
sub
cs
iret
pop
and
jne
dec
rcll
cwtl
mov
xchg
and
xor
inc
ljmp
or
enter
or
mov
jmp
push
fmull
mov
sbb
js
mov
push
or
inc
jns
cli
xlat
jne
and
xchg
add
ds
xlat
or
sub
xchg
gs
mov
push
cmp
bound
inc
shld
cmp
je
add
and
cmp
jne
inc
sbb
subl
inc
je
jne
xor
addl
xor
loopne
rorb
je
mov
sub
push
mov
mov
xchg
mov
xchg
aad
enter
cmp
fistpll
sub
cmp
jae
fimull
jns
push
inc
jmp
nop
sbb
push
cwtl
cld
movsb
mov
or
dec
sub
daa
imul
nop
add
leave
jb
inc
sbb
mov
xchg
shlb
movl
xchg
jo
xchg
mov
lcall
mov
jl
or
cmp
sub
cmpsl
outsb
or
aam
jp
push
fldt
fstpl
pop
fwait
lds
sub
sahf
je
mov
jmp
cwtl
loop
fldl
inc
mov
xchg
dec
in
adc
cmpsb
mov
xor
and
add
cmp
pop
xchg
dec
pop
clc
hlt
das
or
pop
data16
jae
or
cmp
inc
or
pop
inc
stos
add
call
test
shlb
ss
adc
jns
pusha
ljmp
add
xor
cmpsb
dec
fildl
or
xor
dec
or
sbb
inc
pop
pop
int
xor
and
dec
mov
inc
data16
dec
or
pop
mov
sbb
or
mov
pop
cs
dec
fmul
hlt
scas
inc
mov
dec
pushl
cwtl
push
or
hlt
call
jecxz
dec
push
mov
jg
dec
lret
sbb
jns
sbb
daa
cld
add
out
jle
mov
pushl
insb
xor
xor
and
add
in
and
adc
xchg
pop
mov
div
das
mov
adc
push
mov
add
mov
fmul
insb
cli
mov
aam
cld
cmp
pop
nop
pop
call
cmpsb
jg
cmp
mov
sarb
jb
pop
push
call
add
jb
ds
cltd
sbb
in
pop
or
ja
adc
push
pushf
mov
dec
push
incb
jne
sub
in
mov
mov
imul
xchg
aam
push
mov
inc
mov
inc
stc
sti
out
or
jne
xchg
sub
arpl
lock
xchg
pop
adc
xor
addb
notb
jl
loope
mov
cs
xchg
in
call
nop
loopne
test
xor
and
xorb
mov
or
or
push
sub
cltd
push
sub
pop
mov
mov
dec
jmp
stc
mov
cmp
jl,pt
sbb
dec
rcll
inc
xor
in
adc
cmp
enter
xchg
sbb
dec
pop
repnz
cmpsl
out
dec
sub
cmp
fldcw
ds
fsubrs
mov
xchg
testb
fmuls
push
in
inc
cs
insb
sub
pop
popf
or
sbb
mov
ret
jmp
enter
fwait
mov
cwtl
xchg
cmp
jb
fsts
jmp
xchg
shrl
sbb
add
insb
mull
push
hlt
mov
repz
daa
bound
lret
andl
aas
sar
jne
addr16
cltd
mov
xor
stc
cwtl
inc
imul
fisubs
dec
testb
or
sbb
sti
xchg
int
fstpl
sbb
test
loopne
inc
outsl
sub
pop
int3
es
movhps
pop
repnz
and
pop
inc
xchg
fdiv
add
sahf
adc
lock
dec
aam
adc
mov
cltd
cld
pop
adcl
sbb
dec
sub
xchg
adc
and
daa
lret
mov
mov
mov
scas
push
popa
movsl
hlt
push
in
adc
lcall
fcoml
push
add
jg
fisttpll
shll
movsl
xor
and
and
adc
mov
rcrb
xchg
dec
jle
push
push
adc
call
mov
or
cmp
sti
je
adc
adc
inc
hlt
js
push
cmpb
in
sbb
adc
or
push
mov
lea
mov
dec
bnd
add
in
add
lods
cmp
xor
push
aas
out
call
into
fwait
push
xchg
aas
and
xchg
lcall
push
rdpmc
leave
mov
xchg
add
imulb
jae
enterw
in
xchg
or
adc
xor
or
test
push
in
mov
ds
enter
xor
xchg
pop
stos
mov
lea
cld
jl
dec
out
int3
mov
orl
adc
or
jnp
pop
add
mov
enter
fisttps
add
bound
out
add
mov
shl
push
outsl
jo
dec
ret
adc
lods
pushf
orl
mov
pop
xchg
or
jno
ret
adc
loop
push
jmp
stc
fnclex
in
add
popf
rep
cmp
dec
push
test
dec
jg
in
mov
jmp
inc
movups
jbe
and
xor
and
push
and
cmpb
jb
push
inc
inc
or
dec
and
add
cmc
test
insb
clc
jns
ret
dec
ficompl
add
xor
movsl
cld
movsl
cmp
push
fsubrl
cltd
inc
mov
stos
xor
cmp
and
jge
mov
out
sub
adc
xchg
popa
sub
orb
movsl
push
aam
test
dec
in
test
bt
pop
sub
dec
ret
adc
lahf
mov
cmc
xchg
stos
cmp
push
xor
cmp
or
test
or
xchg
sti
dec
test
mov
mov
dec
fidivs
push
cmp
xchg
sbb
jmp
mov
dec
add
addr16
or
add
mov
push
or
test
add
push
dec
add
or
mov
das
lods
adc
scas
and
mov
mov
adc
ret
sbb
roll
jns
adc
loope
push
sub
xor
and
mov
mov
xor
mov
sub
and
mov
dec
xchg
es
lea
or
adc
mov
hlt
inc
fcoms
or
dec
mov
add
adc
pop
lea
push
push
hlt
mov
test
sbb
push
push
gs
pop
add
ss
push
adc
jmp
movsl
divb
out
imul
xchg
push
insb
int
sarb
daa
loop
pop
or
sahf
sahf
adc
mov
popa
xlat
loope
dec
jne
jmp
aam
or
call
cmp
jg
sub
xor
pop
pop
xchg
push
por
pavgb
popa
loopne
cmpb
jne
mov
dec
add
jno
test
mov
popa
adc
lea
jne
and
jmp
pusha
push
loope
xor
mov
push
inc
xchg
dec
inc
popa
imul
ljmp
push
push
dec
mov
loope
fdivl
sub
es
loope
test
push
mov
and
push
jl
mov
xor
shr
testl
xor
notb
add
xor
inc
xchg
in
jp
jns
pop
mov
sub
dec
xchg
insb
js
sub
mov
into
mov
test
dec
cltd
xchg
addl
inc
popa
stos
dec
inc
xchg
ljmp
adc
in
mov
jae
out
xchg
mov
cwtl
insb
xchg
add
mov
jmp
movsb
inc
push
int
jle
jo
adc
sub
call
dec
mov
xchg
insl
fs
mov
dec
clc
xor
sbb
rolb
cwtl
test
push
cmpb
push
push
and
inc
je
scas
and
pmullw
retw
leave
or
add
jmp
mov
mov
and
aam
push
push
dec
cld
mov
sbb
push
jmp
pop
or
lods
lea
cli
clc
aaa
aas
inc
mov
and
cmpsb
mov
xchg
lds
inc
dec
cmp
push
out
cmp
push
push
sbb
mov
add
or
and
in
mov
mov
test
stos
gs
adc
push
mov
cmp
or
mov
dec
loop
xchg
icebp
mov
mov
rorb
pusha
inc
dec
pop
jl
shr
add
movsl
sbb
pop
xchg
aam
pop
mov
cmp
add
je
mov
cmp
test
sarb
test
push
call
pop
add
xor
jmp
orl
pop
in
rcrb
ret
mov
inc
shlb
shrb
jae
pop
shrb
pop
jbe
cmp
test
dec
xor
mov
mov
pop
jp
xor
loope
icebp
rcrl
mov
shrb
jnp
popa
fisubrs
or
jge
inc
cmp
movsl
in
pop
imul
mov
sub
jne
and
push
ja
loop
je
inc
and
and
xchg
xchg
cld
add
cmp
dec
lds
jl
decb
add
cmp
jne
fcmovnu
stos
dec
xchg
pop
pop
sub
gs
inc
lcall
je
dec
mov
xor
inc
push
jmp
mov
add
or
push
cwtl
xchg
fnstsw
push
inc
pop
sar
int3
xchg
ffreep
in
or
add
rorl
addr16
ret
add
sub
xchg
jl
cs
xor
outsl
mov
call
cmp
mov
shll
decb
popf
push
jne
sub
add
lds
add
mov
mov
fs
sti
push
jg
add
jne
mov
stos
sub
cmp
jne
inc
sti
arpl
call
mov
dec
pusha
cltd
xor
sub
add
sbb
mov
imul
neg
cmp
js
or
push
adc
jns
xor
push
adc
dec
loop
xor
ret
xchg
xchg
inc
dec
fmuls
fisubs
leave
push
in
stos
into
mulb
pop
mov
push
mov
sbb
call
leave
pop
iret
test
xchg
pop
push
test
cmc
jae
sub
sbb
xor
sbb
in
or
fwait
push
popa
lea
xor
js
or
adc
arpl
ljmp
sub
les
or
mov
mov
mov
daa
pop
cmpsb
push
sub
cwtl
xor
adc
pop
or
cmpsl
mov
xchg
pop
ljmp
into
inc
add
arpl
dec
lock
push
mov
inc
imulb
lcall
mov
andl
out
call
pop
sti
adc
adc
jmp
cmpsb
sbb
loop
repnz
hlt
enter
loop
das
call
sbb
lock
aam
subb
fwait
test
xor
por
jge
mov
out
xor
push
add
sub
and
in
push
pop
xchg
out
mov
jns
sbb
jbe
addl
and
fs
sub
adc
push
xchg
xchg
adc
mov
push
into
nop
or
fs
mov
pushf
mov
xchg
adc
xor
or
adc
and
ret
jmp
cmp
or
sbbb
jne
dec
mov
in
cmp
dec
fsubl
fsubrl
lahf
inc
adcl
xchg
popa
jo
sub
das
sub
fsubs
xchg
dec
shll
cli
cmp
cmpsl
mov
mull
jle
add
xchg
cmp
imul
add
push
mov
mov
addb
ss
out
inc
nop
jp
es
adc
je
add
sub
add
lods
pop
xor
pop
lds
addb
pop
rcrb
inc
mov
popf
sub
push
pop
adc
mov
xor
adc
xchg
data16
call
inc
or
add
jne
mov
enter
sbb
test
sbb
popf
pop
mov
or
xor
xchg
add
fldl
movsb
pop
ds
jl
mov
push
or
adc
adc
push
test
test
daa
pop
icebp
mov
inc
dec
jge
int3
jl
test
outsb
out
pop
into
loop
push
cmp
cltd
cmp
jae
pop
aad
enter
test
lock
dec
cmp
jnp
xchg
int
mov
mov
sbb
nop
cmp
aam
test
loop
adc
scas
add
jmp
fstl
mov
push
or
add
fwait
jmp
movsb
or
sbb
xchg
xchg
or
push
test
push
push
lret
fsubl
xor
add
orb
ljmp
je
xchg
lret
xchg
repz
sub
dec
pop
cltd
cwtl
inc
dec
mov
dec
push
movl
adc
mov
popf
nop
lods
mov
lods
fisttpl
adc
or
push
insl
and
add
daa
xor
pop
insl
mov
adc
leave
adc
pop
pop
pop
ror
mov
mov
aad
outsb
mov
jno
inc
pop
in
add
mov
xchg
inc
mov
aam
or
or
mov
adc
sahf
add
dec
call
inc
pop
lcall
or
push
cmp
push
mov
jnp
pop
cmp
add
daa
popa
les
and
xchg
pop
add
push
cwtl
inc
push
in
or
sarb
dec
push
in
jno
dec
dec
or
adc
cmp
pop
js
in
inc
insb
mov
pushf
in
mov
mov
mov
pop
imul
sub
mulb
pop
xor
cmp
sub
xchg
jmp
push
add
mov
or
inc
mov
push
dec
xor
sarb
pop
mov
sahf
dec
inc
sub
fs
jmp
movsb
pop
dec
and
adc
mov
mov
jbe
pop
call
pop
mov
xchg
aam
mov
or
lcall
cmp
into
inc
dec
and
push
xor
nop
pop
pop
and
cltd
inc
mov
add
push
add
jne
hlt
push
sub
mov
idivl
rcrb
ret
ret
sub
je
test
imul
jl
pop
rorb
ret
pusha
iret
roll
or
es
and
add
xor
pop
jge
inc
cmpsl
sbb
inc
push
aad
xchg
push
and
dec
orl
aaa
jl
mov
shr
sub
mov
sub
ljmp
sbb
adc
mov
adc
ret
sahf
lock
imul
rolb
cld
jmp
pop
dec
lea
jae
bndldx
xor
insb
lods
es
add
adc
add
jmp
test
push
sub
cmc
test
add
jne
aaa
inc
pushf
mov
and
in
cmp
mov
push
test
in
mov
es
addr16
sub
sbb
mov
xchg
mov
aaa
add
pop
add
pop
adc
jns
jmp
sub
imul
test
sti
sub
push
les
lret
adc
sbb
jne
outsl
out
adc
std
cmp
les
sbb
mov
dec
hlt
sub
mov
or
popf
xor
mov
sbb
jmp
inc
rolb
and
push
cld
jns
rolb
add
mov
or
pop
daa
fs
pop
and
daa
fdivr
xchg
into
lahf
popa
ret
xchg
imul
pop
mov
inc
add
xchg
scas
cwtl
push
push
bound
and
out
add
sub
addr16
lods
or
inc
mov
mov
in
sbb
and
hlt
popf
shrb
mov
push
lea
push
jae
rolb
mov
aam
xchg
loop
xchg
add
or
cwtl
add
call
loopne
cli
out
mov
stos
hlt
cwtl
pop
sub
jp
es
push
sbb
scas
lret
dec
test
data16
push
dec
pop
inc
or
mov
push
pop
and
add
push
and
icebp
jmp
std
inc
jg
mov
sub
push
je
adc
cmp
lods
push
subl
pop
cmp
cmp
dec
out
push
inc
add
in
orl
insl
imulb
xchg
je
pop
xchg
inc
scas
leave
inc
xchg
ret
push
test
jge
outsb
dec
or
push
lahf
jmp
mov
ret
mov
leave
aas
mov
pop
push
cs
inc
les
jle
pop
lret
pop
leave
les
and
jbe
push
lods
into
jmp
js
ljmp
cwtl
lea
or
add
stos
daa
or
bnd
lock
fucomi
ret
sbb
and
inc
cld
sti
push
add
cmp
jne
push
pop
adc
pop
cmpsl
notb
divl
xor
jns
sub
mov
out
mov
mov
pop
pop
xchg
and
sub
inc
and
nop
sub
dec
mov
rorb
dec
sub
or
jmp
add
nop
mov
loope
nop
adc
lea
dec
out
flds
gs
mov
jmp
cld
cwtl
in
fdiv
xchg
stc
fmul
ljmp
push
or
xor
add
mov
ja
fildl
fldl
in
push
aas
lock
jge
and
nop
xchg
in
dec
push
loopne
and
das
inc
dec
mov
jle
xor
push
shll
adc
cltd
js
xchg
filds
adc
insl
test
popf
cwtl
and
and
roll
das
mov
cmp
test
outsb
insb
adc
adc
push
les
lahf
jmp
xchg
in
sub
push
jmp
les
shll
add
int
nop
push
add
or
or
or
lods
nop
shrl
mov
test
sub
mov
cmp
xor
sbb
das
lret
enter
push
pop
cld
adc
movups
movsb
adc
jae
push
sbb
pop
inc
je
xchg
mov
jge
pop
scas
and
pop
xchg
or
mov
in
mov
je
enter
push
aam
sub
jle,pn
xchg
outsb
sbb
push
and
push
sarb
mov
xor
jp
enter
cli
mov
rorb
fs
xor
xchg
mov
lea
jl
cmp
xchg
xor
xor
mov
das
add
mov
or
sub
rolb
and
mov
dec
cmpsl
loope
mov
cmc
mov
mov
push
leave
sbb
cld
push
rolb
ljmp
adc
jae
mov
push
inc
or
xor
fs
mov
inc
fdivs
sub
icebp
adc
lcall
out
sahf
leave
idivb
das
dec
cmpb
lods
pop
adc
jbe
mov
xor
xor
and
shll
xchg
adc
or
test
and
mov
cmpb
mov
push
in
faddl
mov
pop
stos
mov
aad
inc
or
hlt
movsb
nop
inc
inc
adc
mov
add
mov
nop
insb
inc
xchg
mov
or
cs
jb
movsb
test
xor
mov
pop
cs
adc
test
dec
adc
and
mov
and
fmull
push
or
push
popl
add
and
pop
in
jmp
mov
or
add
push
jbe
into
mov
add
nop
or
lock
shl
mov
jle
cmp
movsb
repnz
jo
inc
mov
push
mov
jo
xchg
mov
mov
test
popa
std
rcrl
nop
das
jae
fisttps
add
push
push
imul
dec
inc
in
sbb
xor
sbb
daa
loopne
inc
or
dec
and
lods
xor
sbb
mov
jp
out
outsb
stos
adc
data16
cmp
adc
scas
insb
add
jmp
mov
dec
pop
cld
in
jge
adc
movsb
and
add
push
nop
sub
nop
add
cmpb
or
pop
inc
clc
and
add
add
cmp
cmp
add
mov
pop
pop
aas
mov
push
stos
push
xchg
je
aas
mov
cmp
imul
mov
pop
push
adc
sbb
shl
imul
lock
or
dec
test
sar
mov
mov
inc
pop
das
jg
cmp
pop
sub
mov
subl
loopne
loop
scas
inc
adc
sbb
loopne
sti
inc
inc
dec
jge
cmc
xbegin
xor
inc
mov
pop
and
in
pop
cmpsl
lcall
jns
hlt
das
add
sarl
and
nopl
mov
dec
hlt
jl
dec
movsl
mov
sbb
or
xchg
imulb
pop
inc
dec
jne
jle
loop
leave
aas
notb
inc
cs
jl
inc
roll
roll
cmp
ds
inc
jmp
dec
or
dec
sbb
mov
fs
push
testb
shll
jne
sub
push
sub
or
call
sub
sub
lahf
cli
bound
adc
cmp
xor
or
add
dec
mov
mov
sar
lret
bound
and
push
jge
mov
dec
cmp
mov
adc
jg
xchg
dec
and
or
movsb
cmp
nop
mov
jmp
cmp
jne
or
mov
lcall
jg
adc
dec
repnz
cmp
or
push
stc
xchg
mov
fbstp
and
pushf
into
add
inc
sub
mov
rcr
pusha
les
dec
ret
cmpsb
push
hlt
pop
leave
adc
call
cmp
nop
das
bnd
aas
les
popf
test
insl
pop
cmpsl
arpl
mov
stos
fistpll
pop
cmp
sub
pop
adc
fwait
rorb
mov
int3
and
and
xchg
dec
orb
pop
pop
push
push
sbb
inc
mov
pop
cmp
lret
aas
cld
mov
sahf
addl
push
cwtl
jge
je
jns
push
jge
jb
in
adc
or
mov
movsl
fiadds
outsl
les
xchg
add
in
popf
push
les
sub
sbb
pop
jne
jno
add
aad
insl
ljmp
or
cli
jbe
push
ljmp
or
call
inc
test
xchg
stc
dec
cmp
sbb
repnz
lds
inc
xor
clc
loope
inc
mov
xchg
lcall
jo
inc
jecxz
imul
sarb
or
sbb
jns
or
pop
and
and
hlt
xor
pop
cmp
ror
les
rorb
movsb
add
add
jb
cmp
imul
jmp
xor
push
and
aaa
push
mov
fadds
sbb
inc
xchg
push
and
fwait
incb
jae
adc
jne
clc
mov
or
cmp
xorb
icebp
push
cmpsl
out
or
pop
ja
mov
in
rcrb
xor
push
add
enter
adc
call
push
mov
sbb
cmp
dec
or
movzwl
adc
rorl
push
pop
mov
mov
inc
xor
repz
cmpsl
add
int3
and
sbb
dec
or
and
jg
mov
inc
mov
cmovp
mov
or
mov
push
lea
inc
sub
scas
add
lea
stos
faddl
add
imul
jae
scas
mov
cmp
or
add
add
dec
mov
lock
lret
push
popa
sbb
sbb
dec
lea
pop
mov
imul
adc
jne
stc
push
ja
adc
mov
imulb
clc
ret
mov
subb
xor
mov
mov
dec
push
lock
mov
sbb
jg
lds
lods
sub
mov
dec
clc
mov
sbbb
fwait
jmp
sbb
mov
xchg
and
dec
in
sbb
test
test
sub
test
inc
pop
mov
jo
nop
pusha
push
mov
js
mov
mov
and
enter
add
mov
mov
cmp
sbb
add
adc
syscall
push
sarb
sbb
push
int3
mov
clc
fcoms
cmpsb
or
clc
and
lds
das
in
xlat
cmpsb
ds
bswap
sbb
cmpsb
aas
inc
and
pop
and
adc
push
shlb
mov
and
scas
int3
ds
jne
xchg
and
fisubrs
cmp
fimull
or
push
dec
inc
mov
fstpl
out
mov
and
fs
ljmp
jae
mov
push
inc
add
insl
or
jo
dec
adc
and
into
xor
insb
dec
lods
adc
loopne
cmp
sub
jae
pushf
in
ljmp
and
les
testb
daa
je
sbb
push
ja
jns
xchg
or
jmp
mov
dec
or
cmpsb
adc
pop
xchg
sub
mov
pop
dec
les
lock
mov
mov
mov
test
cmpb
and
add
shll
add
xchg
shrl
cs
cmpsl
push
add
daa
aam
dec
call
popl
add
rcr
xlat
fldenv
dec
mov
sub
push
mov
jae
ret
dec
stos
lods
cld
in
aad
les
pop
shlb
pop
sub
or
push
dec
arpl
aaa
call
scas
dec
pusha
in
and
out
pop
scas
test
sub
test
test
scas
adc
adc
dec
jg
ljmp
mov
loop
sbb
adc
out
xchg
stos
je
nop
nop
add
das
add
mov
rcrb
add
sbb
repz
push
push
mov
in
mov
xchg
and
test
bound
enter
and
xor
mov
cmp
mov
adc
leave
mov
add
inc
jb
adc
popa
arpl
inc
daa
js
shl
adcb
xchg
shll
clc
xchg
ljmp
les
jmp
imul
insb
and
or
mov
repz
sbb
repnz
cmp
xor
sarb
jle
pop
ja
adc
and
jnp
sbb
cmp
xor
leave
rclb
lret
jno
arpl
repnz
daa
sub
mov
jmp
mov
in
test
jl
pop
int3
jecxz
push
repz
xor
mov
cmp
jne
adc
add
mov
inc
mov
mov
into
sbb
jl
jbe
pop
sub
lds
mov
emms
shrb
in
iret
test
pop
andl
je
lea
or
inc
or
mov
push
nop
xlat
xchg
shrl
jo
dec
mov
cmp
and
rcl
enter
movl
and
add
jg
adc
adc
imul
push
andb
mov
xor
xlat
jg
icebp
dec
test
or
mov
cmp
and
lahf
push
or
push
mov
xchg
adc
pop
adc
in
adc
mov
jo
cmp
and
jl
mov
rorb
inc
cli
dec
imul
fmull
xchg
ret
test
and
xchg
pop
xor
sbb
sti
ds
add
push
sbb
xchg
ja
sbb
and
aam
orl
out
mov
lret
dec
orl
xor
es
adc
jmp
movsl
inc
mov
decl
sbb
jnp
mov
movsb
rolb
loope
ja
add
push
roll
stc
rorb
pop
push
cmp
jecxz
pop
fld
xchg
mov
popa
incl
dec
add
cmp
adc
mov
cltd
adc
sub
stos
insb
lcall
push
into
leave
jbe
or
pop
xor
mov
mov
mov
xchg
je
pusha
push
xor
dec
mov
enter
sub
sub
test
testb
sarl
rcl
dec
sbb
lds
jne
and
lods
cmc
stos
pop
es
fisubs
dec
test
fwait
hlt
pop
mov
cmp
ja
js
mov
sub
test
out
sub
rcll
and
stos
pop
aas
shll
cmp
stos
inc
fbld
cld
jg
xchg
scas
push
sbb
shlb
push
add
pop
in
dec
xchg
pushf
test
loopne
fldcw
jge
adc
shrl
das
clc
jae
pop
dec
inc
mov
xchg
repz
cmp
les
clc
outsb
mov
and
pop
insb
bound
push
sub
adc
mov
dec
fisubl
pop
and
push
int3
push
fcoml
dec
enter
mov
and
les
mov
mov
jo
add
dec
adc
movsb
mov
sbbl
xor
enter
sub
je
xchg
and
adc
dec
mov
adc
dec
adc
dec
mov
pop
cwtl
inc
cmp
enter
and
repnz
sub
das
addb
sub
and
les
dec
sbb
sub
mov
xchg
and
enter
and
adc
dec
xor
or
xor
or
outsb
adc
in
mov
and
aam
clc
xchg
push
enter
push
int3
lock
sbb
js
and
xor
loopne
mov
cmpsb
sbb
cmpsb
xor
mov
mov
cmpsb
pusha
gs
and
and
cmp
or
adc
push
mov
mov
jo
mov
sub
xor
test
mov
dec
dec
or
mov
pushf
mov
fdivs
sbb
jb
jo
pop
xor
lea
test
add
cwtl
or
call
pop
into
sbb
aaa
mov
mov
adc
out
and
xor
pop
sbb
xchg
add
mov
loop
dec
stc
cli
mov
mov
test
aas
and
adc
inc
and
movsb
cmp
mov
or
cwtl
fs
sub
test
in
cmpb
add
pop
jmp
hlt
and
cmp
push
in
xlat
sub
xchg
pop
in
enter
shl
adc
inc
inc
aas
call
xor
jnp
cmpb
inc
popa
mov
and
xor
adc
pop
cmc
enter
inc
in
mov
push
sti
and
test
iret
lds
lahf
adcb
inc
mov
push
add
xor
int
rcll
or
dec
mov
xor
add
pop
push
inc
push
rcrl
push
ss
xor
sbb
dec
push
push
xor
xchg
adc
sub
cmp
sbb
lea
lret
sbb
cs
cmp
clc
dec
inc
lea
bound
xor
xor
add
fs
pop
test
insl
xor
push
jb
data16
jecxz
mov
popa
push
insb
inc
and
icebp
push
sti
lret
and
js
inc
cmp
push
jecxz
xor
test
or
sub
dec
popl
jbe
repz
insb
push
sbb
movl
cld
dec
push
push
inc
push
cld
aam
test
loop
push
dec
test
xor
sub
dec
lock
dec
gs
test
dec
in
rclb
jle
subb
js
dec
xor
in
inc
imul
mov
xlat
and
push
dec
xor
push
jl
fiaddl
inc
inc
dec
pop
xor
inc
push
sbb
mov
and
push
insb
scas
and
dec
fidivrl
sbb
push
mov
xor
jb
xor
test
mov
out
mov
sub
pop
leave
xor
and
gs
cmp
jge
xchg
aam
inc
jl
dec
sub
push
inc
cmp
sub
push
push
inc
inc
inc
js
pop
scas
push
and
jns
and
imul
dec
and
cmpsl
pop
jmp
pop
dec
cmpsl
repz
mov
mov
cmpsb
clc
movsb
add
fwait
mov
cltd
ljmp
jp
pop
jno
xor
xor
test
adc
dec
inc
mov
fwait
movsl
mov
inc
mov
loop
fs
sub
aaa
movsb
and
jnp
cmp
and
outsb
dec
dec
in
dec
adc
sub
rclb
inc
xchg
adc
pop
dec
push
jle
dec
pop
rorl
aaa
orb
insb
lods
cmp
neg
jne
mov
inc
jne
pop
and
push
push
inc
hlt
inc
push
in
popf
push
inc
cmp
cs
push
dec
sbb
xchg
dec
dec
pop
in
lds
ds
sbb
mov
lods
push
adc
sahf
adc
es
in
out
push
push
dec
sub
pop
mov
xchg
dec
xchg
nop
push
sub
inc
mov
imul
cmp
jg
push
or
sub
mov
sub
movsl
push
xor
cmp
aam
pop
mov
jmp
jp
rcl
mov
mov
jmp
cli
inc
rclb
fs
dec
push
adc
aas
xor
in
xor
sbb
ss
jp
aaa
lahf
xor
stos
cmp
xor
lods
stos
dec
pop
adc
dec
inc
push
xchg
imul
xchg
dec
mov
gs
enter
scas
movsl
pop
jno
repnz
push
sahf
fldenv
pop
push
dec
inc
lds
xchg
subb
mov
dec
inc
lds
xchg
test
dec
mov
lods
pop
sub
shrl
sbb
adc
pusha
mov
xor
push
das
or
dec
fnsave
popa
lods
test
insl
aad
dec
cmp
stc
stos
mov
pop
sbb
cmp
cltd
js
push
mov
fcomi
es
and
xor
js
sbb
sub
jp
js
push
arpl
lea
jns
lret
jge
push
inc
push
insb
scas
daa
pop
push
mov
pop
out
lock
sahf
into
jle
xor
dec
sub
enter
inc
push
xorb
movsl
sbb
outsl
in
pop
ficoml
mov
xor
cs
fs
mov
push
push
cmp
pop
in
sub
xor
cs
and
jne
push
cwtl
rol
lds
jg
sub
jmp
js
nop
je
stc
dec
sarl
nop
sub
repnz
in
imul
push
push
imul
imul
repz
test
sbb
mov
inc
pop
inc
mov
mov
insb
clc
ja
call
dec
scas
mov
movsb
dec
loop
dec
mov
xchg
mov
cmp
xor
mov
std
and
icebp
insb
test
out
movsl
movsb
pop
inc
cmp
jne
scas
inc
jns
jns
aas
jnp
and
cmp
out
out
loop
stc
out
jno
jns
jge
hlt
in
dec
stc
push
dec
mul
xchg
cmp
push
pop
sub
pop
inc
mov
jb
xor
pop
and
lret
sub
pop
nop
mov
stos
push
int
lret
rorl
fcoml
xor
xchg
fs
xchg
loop
repnz
cs
mov
test
frstor
xchg
sar
shl
inc
pop
lret
out
imul
push
and
outsb
iret
dec
and
pop
sub
xor
and
into
lret
dec
and
jl
in
inc
mov
jl
fcompl
jge
outsl
das
test
cmp
cmp
dec
jge
push
dec
test
sahf
lods
xlat
fcmovnb
xchg
mov
xchg
push
jecxz
cmc
and
mov
push
pusha
hlt
lods
cmp
xor
adc
test
aas
dec
push
je
ret
scas
pop
sub
cmc
bnd
xlat
iret
dec
aad
mov
hlt
push
je
jl
in
cmp
je
scas
xchg
mov
cmp
das
xchg
repz
hlt
cltd
les
in
lods
movsl
repnz
xchg
lods
sub
sbb
sarl
lcall
mov
mov
jno
jns
jl
in
test
out
lret
in
mov
movl
das
popf
mov
or
mov
adc
pusha
jmp
fs
xor
and
in
stos
mov
je
imulb
cmp
fcompl
cmp
jl
mov
inc
movsl
rep
xchg
mov
les
cli
clc
cmpsl
xchg
movsb
gs
dec
pop
lcall
in
pop
and
jmp
xor
inc
cs
fdivs
push
addr16
dec
inc
repnz
inc
in
xchg
jne
jp
mov
or
jne
scas
movsl
push
dec
adc
mov
repz
mov
jb
mov
ja
jle
movsb
loopne
jp
sub
movb
aad
cmp
inc
push
and
aam
or
push
sbb
test
mov
insb
jnp
pop
push
mov
fs
bound
jae
aam
push
push
jo
pop
stos
mov
sub
dec
je
mov
dec
mov
adcl
cmpl
sub
xor
xchg
or
dec
jne
sbb
dec
shlb
pop
aam
scas
cmp
dec
mov
push
or
dec
ljmp
repnz
imul
sub
sub
inc
jne
mov
gs
sub
xchg
adc
dec
pop
ja
addr16
cmp
sub
dec
inc
push
outsl
inc
pop
movsl
dec
adc
movsb
xchg
gs
add
jp
insb
pushf
mov
push
outsl
insl
push
mov
adc
sub
pop
inc
out
dec
pop
push
lods
rclb
or
popa
imul
add
dec
push
mov
mov
push
out
sub
ret
loop
pushf
and
cmp
mov
mov
jmp
and
and
imul
sbb
inc
ja
jb
sub
sub
pop
jae
push
movsb
mov
daa
scas
dec
dec
dec
sub
push
add
mov
inc
xchg
popa
dec
insl
and
pop
scas
test
inc
mov
mov
or
sub
scas
add
jno
mov
and
inc
pop
push
dec
mov
xor
arpl
imul
jae
jmp
sbb
or
mov
into
push
sbb
sarb
sub
xchg
sub
js
les
or
pop
push
jo
dec
jns
ss
imul
sub
sub
jp
xchg
sub
in
dec
push
movsl
adc
sub
push
mov
pop
push
push
enter
jb
mov
insl
mov
cwtl
and
fsubs
mov
inc
dec
test
lods
sub
cmp
sub
push
push
sub
ffree
push
pushf
pop
dec
dec
push
cmp
adcb
shll
push
cmp
movsb
jae
cs
hlt
pop
out
xchg
call
dec
adc
add
cmp
xchg
jmp
in
dec
mov
and
fcoms
mov
sbb
dec
shl
lret
fmull
cmpsl
sbb
les
sbb
jne
jo
loopne
nop
push
fisubl
je,pn
cmp
xchg
inc
mov
mov
pop
push
jbe
xchg
or
adc
push
in
imull
outsb
es
gs
sub
sbb
xchg
mov
sbb
int3
xchg
adc
or
gs
inc
mov
cmp
daa
insl
cmp
cwtl
push
inc
leave
push
push
mov
inc
out
jo
sub
inc
mov
dec
pop
xor
push
cs
dec
push
dec
sub
inc
call
in
lcall
sub
jmp
cmpsl
fldcw
mov
inc
pop
aam
mov
dec
rclb
movsl
mov
nop
sub
addr16
mov
inc
shrb
enter
js
leave
bound
shl
dec
in
enter
cmp
rorl
xchg
xor
aam
movsb
into
fmuls
ret
dec
cmp
push
lods
movsb
mov
js
push
jp
in
inc
jp
imul
movsl
mov
dec
gs
pop
inc
popa
ficoml
adc
inc
inc
outsl
aam
xchg
push
mov
xchg
mov
mov
pop
in
insb
jns
dec
js
std
es
dec
push
dec
and
xor
mov
sub
fdivl
lahf
and
insb
dec
ss
cmpsb
imul
gs
pop
cmp
jne
bound
mov
push
sub
int3
rorl
scas
adc
clc
sub
in
jae
xchg
clc
cltd
sbbb
dec
inc
sub
adc
mov
test
hlt
mov
gs
js
rclb
cwtl
scas
sahf
mov
mov
insb
dec
sub
jne
cmp
dec
dec
nop
mov
dec
int
enter
and
jp
test
mov
test
outsl
mov
aam
repz
mov
rorb
fisubrs
and
ret
inc
arpl
fimull
dec
jne
ja
jno
xor
loop
jb
jno
mov
and
insl
inc
popa
fcompl
sub
inc
xchg
inc
push
test
jl
jns
pushf
pop
ja
pop
push
iret
enter
imul
inc
or
bound
sub
in
or
push
add
and
adc
sahf
jo
mov
inc
pushf
inc
dec
in
lods
mov
pop
mov
je
outsl
in
addr16
xchg
dec
push
aaa
adc
push
lock
imul
movl
mov
or
sarb
cmpsl
sbb
mov
adc
mov
pop
push
add
xchg
push
lea
and
into
stc
clc
outsl
testb
sub
adc
and
lret
cltd
jns
dec
and
jo
xchg
lods
rcll
pop
and
mov
push
sbb
pop
in
jl
mov
xchg
pushf
nop
adc
jb
jns
push
xchg
and
dec
outsb
mov
and
outsl
sub
sub
imul
imul
lret
in
mov
and
gs
inc
mov
xchg
sub
and
pop
push
xchg
mov
pop
dec
outsl
push
xchg
or
jb
test
push
inc
test
or
jl
pop
push
mov
jl
js
inc
sbb
setbe
jbe
push
mov
pushf
jmp
lods
xor
sub
test
xor
push
xor
push
mov
jo
dec
push
adc
mov
mov
sub
js
mov
andb
adc
movl
mov
ret
push
inc
push
test
sub
and
les
sti
push
jnp
pop
dec
mov
push
inc
mov
movl
nop
add
or
test
mov
dec
push
movsl
xor
dec
sub
sbb
dec
sub
pop
test
pop
lds
sub
cli
push
test
adc
sbb
inc
and
inc
xchg
pusha
movsb
addb
xchg
or
push
test
dec
inc
pop
loop
sbb
dec
push
iret
xchg
xor
push
pushf
or
push
aam
mov
in
cmp
iret
dec
push
xchg
dec
clc
dec
xchg
mov
or
inc
and
push
push
std
push
push
xor
cmp
pop
sub
test
dec
sub
push
xchg
dec
inc
jo
push
xchg
inc
inc
push
adc
loope
push
push
sub
bound
cwtl
inc
movsl
xor
dec
inc
jb
xor
push
ds
ret
dec
inc
pop
in
lock
dec
and
inc
jae
sbb
pop
push
clc
inc
xchg
dec
call
enter
addr16
push
mov
sbb
inc
sub
lock
inc
xchg
dec
sbb
dec
test
pop
nop
jp
add
nop
ljmp
test
cmp
dec
push
adc
cmc
cmp
in
dec
repnz
test
adc
dec
push
jl
inc
out
test
sub
cltd
xchg
ljmp
movsl
or
pop
rorb
dec
xchg
andb
mov
sbbl
and
mov
or
adc
sbb
inc
hlt
adc
push
sbb
adc
xchg
das
in
xor
pop
test
inc
inc
and
dec
stos
and
pop
inc
xor
xor
xor
in
das
enter
xor
inc
ss
aaa
test
or
cmp
cmp
and
and
lods
enter
cld
xor
fsubl
xor
xor
in
sub
xor
nop
xor
inc
ss
xchg
push
and
pop
sbb
sub
pop
ljmp
outsb
push
add
or
mov
sub
inc
xor
push
je
xor
xor
xor
xor
nop
xor
inc
ss
xchg
or
aaa
sbb
cmp
cmp
hlt
pop
movsl
cmp
sub
mov
cmp
xor
xor
and
jle
xor
repnz
enter
sub
push
inc
dec
dec
and
movsb
push
inc
cmpsl
sahf
mov
sub
xchg
mov
push
or
push
dec
dec
sub
sub
movsl
push
mov
dec
dec
xor
dec
xchg
clc
lret
sub
cmc
sub
rorb
sub
mov
and
adc
js
inc
cmp
leave
sub
cmp
repnz
sub
sbb
sbb
inc
inc
dec
cld
push
mov
test
jno
or
add
outsb
adcb
mov
inc
insb
xchg
inc
jge
mov
xorl
or
inc
jp
loopne
add
add
inc
or
mov
adc
jne
cmp
mov
inc
or
inc
jae
inc
es
jb
mov
adcl
add
inc
or
or
mov
insb
add
and
aam
cmpb
xchg
adc
add
inc
or
mov
or
and
sub
adc
adc
and
insb
fadds
inc
mov
pop
add
and
test
les
push
dec
pop
or
xor
dec
adc
and
clc
pop
and
and
fcoml
enter
xchg
mov
push
add
and
adc
add
and
xor
rol
sbb
mov
js
loopne
and
dec
inc
sub
inc
dec
or
and
jo
add
inc
push
dec
rol
adc
inc
or
sbb
adc
inc
adc
in
add
pop
add
inc
or
pushf
lods
loopne
mov
inc
inc
mov
adc
add
cmp
add
dec
and
adc
push
adc
and
add
mov
adc
pop
add
inc
aaa
pop
icebp
adc
pop
xor
nop
xor
add
mov
add
inc
xor
les
adc
push
jae
mov
lahf
add
sarb
mov
jl
outsb
in
and
sub
movsb
mov
sub
movsb
or
mov
jo
add
std
hlt
sbb
push
dec
sarl
jmp
inc
je
pop
incb
ljmp
ja
jae
pop
cmpb
add
mov
inc
movzbl
das
mov
add
dec
fsubs
shl
inc
sbb
aas
add
mov
or
jne
aad
leave
dec
shr
sti
cmp
and
pop
pop
mov
inc
loope
add
jl
add
push
dec
fs
adc
jo
addr16
mov
jne
test
jbe
pop
jmp
and
andl
pop
or
jne
ja
mov
nop
lea
aad
fcomi
xchg
push
jg
fidivrs
cmp
add
add
jmp
movzwl
xchg
addb
div
mov
fcmove
push
sti
addr16
insl
and
pop
in
pop
sbb
xor
roll
jno
xor
or
mov
add
pop
and
pextrw
sbb
cmp
aad
lcall
dec
pop
popf
pop
cmc
sbb
pop
movsb
popa
mov
sub
je
mov
out
add
mov
ja
jg
push
fcoml
xor
inc
ja
andb
shl
jg
popw
add
push
fldl
jp
lret
shl
push
push
dec
inc
push
or
or
lock
out
adc
or
xor
push
sbb
lret
push
mov
in
cmp
test
and
les
and
cmp
push
and
and
and
or
mov
mov
inc
adc
inc
mov
enter
addb
test
push
jp
jae
mov
push
add
mov
fs
mov
das
rorl
sbb
pop
lcall
cmp
mov
sbb
fidivs
adc
sub
mov
push
mov
sbb
das
sbb
push
jnp
dec
mov
sub
rcrb
xchg
es
mov
sub
push
nop
dec
sub
and
into
fidivrl
adc
mov
scas
sub
sub
and
pop
or
jb
xchg
xchg
sub
inc
andb
js
int
sbb
push
mov
sub
and
xor
ficompl
int
xor
cmp
or
aas
or
adc
dec
adc
hlt
jno
lret
jae
adc
adc
pop
clc
dec
sti
lret
lock
add
pop
add
cli
push
jmp
stos
mov
in
dec
lret
rcl
mov
sub
add
dec
jne
loopne
mov
add
insl
inc
cmpsl
push
outsb
sar
call
sbb
popl
sbb
adc
pop
fldenv
mov
or
adc
fidivs
sbb
inc
add
push
aaa
adc
cmp
enter
inc
xchg
pop
bound
xor
scas
and
popa
jmp
inc
inc
mov
mov
push
xchg
jl
push
je
pop
inc
jbe
lock
pop
sub
popf
lds
mov
pop
pop
movsl
adc
mov
loope
push
push
xchg
sub
push
inc
mull
mov
into
arpl
mov
out
jecxz
adc
out
adc
mov
nop
bnd
inc
jle
test
push
aam
iret
xchg
xchg
and
fwait
xchg
cltd
inc
test
push
xchg
outsb
pushf
enter
mov
fisubs
or
xchg
clc
xchg
cmp
jb
lea
lahf
lea
xchg
jmp
pop
inc
cmp
or
dec
iret
and
scas
repz
shlb
sarl
lea
cmp
cltd
adc
and
js
into
or
inc
and
cmp
xor
fbstp
ret
xor
dec
hlt
jne
mov
push
shl
test
je
cmpsb
inc
movsb
sub
mov
push
and
sub
mov
xor
call
js
xchg
lods
add
sbb
pop
lods
dec
cld
ds
setg
lret
aas
in
sbb
push
add
lea
dec
or
mov
fcomps
movsl
mov
lock
mov
push
dec
das
arpl
push
fs
dec
mov
loope
mov
xchg
es
dec
push
push
mov
mov
lcall
adc
xchg
loopne
lea
pushf
js
or
add
push
imul
cmc
or
xchg
sbb
ljmp
jmp
daa
sub
lods
adc
jae
pop
daa
and
ds
jl
adc
shlb
test
xchg
scas
xchg
insl
push
or
loopne
andb
sub
shr
cwtl
xchg
xchg
dec
mov
out
dec
mov
maskmovq
mull
insb
push
pop
mov
les
mov
les
mov
sbb
and
cmc
movsl
inc
xchg
lods
mov
sahf
test
les
mov
cwtl
push
dec
or
adc
mov
pop
jmp
or
sbb
adc
push
adc
call
and
adc
xor
test
adc
inc
addr16
dec
scas
push
inc
cmp
xchg
in
pop
xchg
aaa
or
nop
lea
jg
sbb
lret
fnstenv
cmp
xor
nop
adc
cltd
insb
jp
icebp
pop
xchg
push
fbld
aam
out
xor
push
cmp
test
cmp
cmp
mov
fsubrs
lds
les
or
jb
cmp
clc
xchg
adc
addb
sbb
mov
les
clc
adc
loop
adc
adc
sbb
out
adc
cli
test
mov
lods
repnz
adc
nop
das
jo
and
scas
adc
cmpsb
test
inc
cmp
enter
adc
lret
lea
xlat
pop
or
jl
fs
and
dec
inc
out
push
push
cmp
and
sub
fs
xchg
rcll
cli
adc
inc
ja
roll
cmpsl
sar
cli
sbb
cmp
in
push
add
fisubrl
fists
pusha
fisttpl
clc
cmp
das
xchg
fldcw
nop
adc
mov
jno
push
and
rorb
and
les
sub
adc
loop
sbb
int3
mov
rorb
and
cmp
fsub
push
sbb
fmull
test
inc
fs
fs
insb
sbb
js
jl
and
mov
cmp
test
pop
jno
or
test
mov
bound
lods
cmp
xchg
and
adc
sbb
dec
test
and
les
xor
adc
sbb
or
inc
ret
xchg
aad
loopne
je
lds
push
push
jns
mov
sub
cmc
pop
sbb
outsl
je
mov
xor
push
jne
sbb
insb
or
or
adc
inc
outsb
movsb
or
loope
pop
jae
xchg
inc
insl
jo
dec
xor
mov
mov
and
movl
adc
in
adc
and
inc
jae
adc
fcoml
adc
dec
sub
lret
mov
or
js
aas
test
dec
xor
das
in
adc
test
xchg
mov
roll
jmp
or
dec
xchg
or
mov
sbbb
push
int3
rcr
push
imul
inc
inc
pop
inc
test
sbb
data16
adc
dec
push
fs
popa
dec
dec
cwtl
sub
add
sub
pusha
and
sub
or
sub
nop
and
inc
nop
sub
stc
pop
sbb
mov
adc
cmpsb
push
jo
xchg
or
movsb
jno
aam
ds
lds
inc
xor
pop
mov
pop
test
inc
cmp
aad
xlat
movsb
xchg
adc
rcl
sti
add
fs
sar
rolb
mov
push
inc
mov
inc
mov
aam
and
adc
gs
sub
cld
fs
push
repnz
inc
mov
cmc
js
mov
js
sub
hlt
and
pop
inc
mov
jmp
bound
aas
nop
int3
out
and
inc
mov
insb
or
inc
cld
aad
int3
scas
pop
stos
sub
in
cmp
pop
push
push
into
inc
cld
jo
arpl
dec
fwait
push
cld
fs
sbb
mov
jo
fsubs
fwait
lods
adc
pop
sbb
pop
inc
dec
push
inc
xchg
sub
xor
inc
and
mov
jg
xor
dec
pop
mov
stc
push
cmp
xchg
push
mull
pop
lds
outsl
jecxz
and
inc
hlt
push
cmp
cs
lods
repnz
jp
ss
sub
mov
sti
or
xor
in
sub
std
pop
movsl
sub
dec
inc
inc
mov
push
inc
cs
inc
loopne
add
mov
xor
sbb
and
out
inc
inc
clc
ds
inc
mov
sbb
bound
xor
mov
out
adc
call
adc
cmp
add
push
sub
clc
idiv
insb
mov
add
xor
cmp
dec
je
dec
xor
sub
or
dec
test
add
sub
dec
test
push
sub
or
and
pop
xchg
jp
xor
es
xor
mov
mov
testw
add
mov
and
xchg
lock
push
adc
dec
cmpsl
fmuls
dec
jge
test
in
es
and
push
mov
loopne
aam
sub
inc
and
push
mov
jo
inc
enter
xor
push
aam
mov
pop
bound
or
adc
and
popa
add
mov
xlat
movsl
push
jg
cltd
adc
push
ds
cmpsb
or
push
pop
lods
sub
inc
cmp
stos
std
add
jmp
cmp
pop
outsb
adcl
or
nop
shr
arpl
or
mov
call
or
mov
xchg
dec
jbe
pop
cmp
js
dec
pop
mov
rcrl
add
adc
clc
mov
cmp
lahf
ret
ret
add
jecxz
test
hlt
popa
hlt
incl
and
ds
pushf
push
dec
sahf
adc
xchg
xchg
pop
jg
jmp
push
shr
cmp
aas
popa
push
mov
push
dec
call
in
rclb
call
lock
dec
push
sub
mov
and
sub
aad
and
mov
sbb
jne
sub
push
xchg
xor
adc
je
and
sbb
pop
adc
out
push
movzwl
inc
lock
popf
mov
jl
imul
lea
push
call
or
push
push
lea
xchg
cmp
dec
cwtl
xchg
lea
and
xchg
adcl
inc
and
mov
or
inc
mov
pop
insb
push
push
or
sub
rorb
and
aas
mov
inc
mov
pop
in
je
mov
push
push
pop
and
insb
jl
outsl
mov
inc
inc
sub
mov
stos
dec
sub
add
xor
jle
movsl
and
jmp
pop
js
lock
pmaxsw
scas
adc
jmp
nop
sub
call
jmp
notw
or
lret
adc
and
loop
push
scas
pop
in
xchg
pop
ror
add
and
sbb
pop
pop
cmc
data16
je
mov
arpl
mov
nop
push
cltd
mov
cld
and
inc
pop
push
clc
movsl
mov
inc
int3
inc
ficompl
mov
add
or
enter
sbb
je
loopne
inc
push
andl
in
mov
cmpsb
mov
adc
push
jo
or
lahf
xlat
jae
aad
rcll
push
xchg
sub
push
and
or
inc
filds
dec
pop
ret
les
push
push
inc
in
cltd
xor
xor
leave
push
mov
out
cld
jo
rorb
nop
dec
test
jmp
jmp
adc
push
dec
pop
dec
je
aas
jmp
pop
ljmp
add
push
mov
mov
incl
or
push
push
xchg
cmp
jmp
rclb
decl
pop
dec
in
shrb
in
jne
mov
nop
cmp
mov
mov
pop
cmp
mov
inc
or
adcl
cmp
fisttps
rorl
imul
push
adc
sbb
xchg
xchg
sbb
popa
sub
or
jnp
pop
stos
sub
lock
repz
scas
inc
mov
push
adc
cmpsb
je
mov
shll
jbe
mov
jae
cwtl
addr16
out
out
repz
xor
scas
negl
mov
daa
in
sub
cmp
mov
push
and
mov
sarb
cmp
fsubrs
jne
in
push
das
stc
cltd
pop
xchg
mov
dec
rcll
cs
dec
and
add
adc
jb
je
dec
call
imul
cld
notb
jbe
pushf
ret
mov
fwait
jmp
enter
aam
hlt
push
add
das
and
add
jae
cli
mov
xor
adc
add
enter
push
lcall
pop
add
ficoml
and
test
mov
fst
push
cmp
adcl
cmp
mov
sub
mov
ds
cli
test
adc
mov
adc
mov
sbb
cs
sbb
test
cmpsl
cmp
inc
and
adc
rcll
pop
pop
and
adc
pop
loop
pushf
test
hlt
lcall
xchg
push
loop
fsubrl
sub
pop
mov
cmpb
je
test
addl
sbb
xor
adc
pop
inc
in
mov
push
inc
and
aam
call
aam
lret
jle
inc
pop
xchg
lea
movzwl
cmp
fadds
jmp
or
mov
push
adc
jae
jno
mov
ja
add
dec
mov
adc
hlt
or
sbb
dec
push
jne
test
iret
test
or
lods
adc
add
mov
xorb
fmuls
jns
fsubrl
sbb
clc
cli
sbb
jno
lock
fistl
cmp
fwait
stos
subb
and
fstpl
inc
lock
cmp
jae
push
or
call
jge
cmp
call
xchg
push
loope
ljmp
and
mov
lcall
jg
lret
cmp
fsubl
lahf
stos
push
sub
mov
loop
inc
mov
idivb
rcl
push
sbb
shll
rclb
mov
test
dec
cmc
mov
sbb
xor
dec
addr16
adc
inc
mov
test
ljmp
lret
jmp
xchg
aad
or
jno
inc
test
sbb
sbb
test
push
cmpb
fists
clc
inc
xchg
in
and
and
push
mov
pop
adc
cltd
dec
mov
lods
and
or
mov
sub
and
arpl
cmp
hlt
sahf
dec
daa
mov
in
lahf
adc
mov
lds
xchg
mov
and
jne
fsubl
lods
push
adc
test
pop
int3
adc
sub
push
les
fisttpll
cmp
mov
shl
pushf
and
mov
sbb
inc
mov
cmpsb
sbb
push
and
shl
fwait
sbb
sub
dec
int3
ds
outsl
push
rcll
cmp
xor
cmp
fs
mov
dec
call
pop
sub
movsb
cli
add
test
aam
cmp
lods
mov
sub
pushf
in
or
pop
into
cmc
test
pop
mov
adc
push
stos
pusha
stos
mov
dec
shll
hlt
movsl
lahf
call
in
dec
sub
outsb
inc
pop
lods
aas
inc
dec
into
jne
clc
loopne
push
sbb
imul
and
mov
pop
and
xchg
fcomip
dec
and
in
paddq
or
loopne
sub
test
sub
mov
push
cmp
mov
cmpsl
rorb
inc
fiadds
inc
pop
and
jge
lcall
lods
ficompl
adcb
add
cmc
sub
and
dec
inc
xchg
gs
stos
mov
xor
jo
test
aaa
cmp
pop
xchg
sbb
sub
mov
mov
lret
cmp
adc
jno
add
adc
in
es
loopne
sbb
push
pop
cltd
fdivrl
sbb
lret
leave
mov
sub
aam
les
sbb
shlb
call
pushf
cmp
shlb
enter
dec
daa
stos
mov
jno
ficompl
adc
mov
add
loop
add
pop
sbb
or
testl
dec
adc
inc
mov
jle
fwait
dec
mov
sbb
dec
dec
loop
jno
out
mov
adc
sbb
mov
fstpl
mov
mov
pop
js
daa
push
cmp
aam
movsb
out
dec
pop
push
mov
test
sbb
dec
dec
loop
jae
dec
aad
loop
jae
dec
aad
mov
shrl
sbb
sbb
cmp
xor
jecxz
rorl
sbb
aas
dec
les
cwtl
cmp
cmpsl
adc
dec
test
movsl
adc
and
add
add
mov
xor
lea
loopne
jae
jns
sbb
aam
repnz
clc
testw
outsl
enter
mov
adc
ret
lcall
mov
push
or
lcall
popf
loope
inc
das
and
stos
lods
pop
dec
cltd
push
adc
inc
enter
or
aam
pop
or
mov
xchg
out
imul
jge
frstor
push
into
push
add
js
enter
cmp
test
inc
pop
popf
adc
je
xchg
sti
mov
cmpsl
or
scas
ds
aaa
jle
add
ds
cld
push
test
sti
xor
mov
insl
jo
jns
dec
pop
sbb
sahf
loopne
jns
add
outsb
je
iret
loopne
jmp
repnz
loopne
inc
stc
insb
gs
inc
outsl
and
dec
inc
pop
inc
shll
push
scas
stos
iret
cld
dec
mov
idivb
les
xor
je
cli
loopne
leave
lahf
dec
mov
lea
into
jae
push
jecxz
xchg
outsl
ja
push
adc
decb
shrl
cwtl
adc
xor
jecxz
dec
mov
xor
mov
and
lret
push
inc
fs
scas
icebp
jmp
sbb
ss
sbb
les
ljmp
or
add
sti
and
je
adc
push
pop
ret
push
or
mov
les
push
or
sti
lahf
push
xor
cmp
sbb
add
dec
movsb
push
jmp
dec
lea
cmp
cli
cmc
pushl
xchg
out
inc
jge
jo
popf
je
push
es
add
in
sbb
xchg
mov
ss
sub
mov
nop
push
popa
xchg
jnp
add
and
adc
aaa
add
adc
xchg
inc
jb
adc
inc
bound
pop
pop
daa
in
pop
push
cmp
push
cmpsl
ja
ljmp
sub
xchg
inc
and
cmp
dec
and
sub
jp
fwait
or
jae
scas
push
rolb
subb
push
or
lock
adc
add
xor
and
inc
adc
inc
inc
clc
mov
push
mov
cmp
dec
mov
adc
add
mov
mov
lods
mov
dec
andl
jl
sbb
cmpb
add
je
inc
into
lds
pushl
enter
hlt
js
add
dec
repz
fwait
mov
dec
lods
aad
mov
mov
imul
popa
adc
inc
add
cmp
push
xchg
not
or
pop
jb
fdivrl
out
int
pop
icebp
mov
mov
dec
jnp
sub
dec
pop
adc
mov
clc
lods
inc
adc
mov
mov
lock
inc
call
mov
insb
push
mov
add
subb
aad
mov
cltd
pop
movsb
subl
push
or
std
adc
ret
mov
rclb
loopne
mov
sti
mov
test
jl
daa
push
mov
adcb
subb
cld
pop
in
mov
gs
and
cld
pop
dec
ss
dec
sub
push
imul
and
push
ljmp
add
es
push
cmp
imull
jo
pop
cmp
clc
loope
dec
or
inc
cmp
push
addr16
aas
pop
mov
test
enter
loopne
or
pop
in
bnd
mov
cmpl
out
xor
jmp
push
jno
xchg
mov
fbstp
cmp
dec
inc
rcrb
mov
into
std
or
pop
push
cmp
push
lahf
cmp
and
mov
push
cmpl
or
mov
gs
pop
arpl
imul
push
xchg
adc
lock
adc
dec
out
dec
clc
stos
xor
jg
and
push
jl
push
inc
xor
mov
hlt
mov
xchg
pop
add
xchg
or
fisubrl
ja
pop
or
in
jmp
or
jne
leave
pop
sub
sbb
dec
stos
jns
ds
sub
or
and
outsb
scas
add
call
pusha
sahf
adc
adc
int3
loop
and
sbb
or
mov
sbb
jb
lahf
inc
stos
test
push
subl
cmp
dec
cmp
outsl
and
inc
add
adc
adc
dec
mov
sbb
inc
dec
inc
cmp
cmp
or
lock
and
or
inc
push
add
jns
add
pop
push
daa
sbb
adc
pop
into
add
jl
in
push
mov
inc
xchg
inc
scas
out
mov
scas
cmpsb
or
and
in
jb
cmp
cwtl
and
in
jb
cmp
andb
xchg
or
in
jb
cmp
mov
mov
mov
cmp
lods
push
test
push
inc
les
and
scas
mov
shll
cs
or
rorb
adc
mov
je
push
sbb
inc
pop
or
jo
adc
jl
pop
xor
cmc
push
jnp
sarb
adc
sbb
test
clc
add
jmp
xor
dec
xor
cmp
jle
mov
cmp
push
call
lret
shl
mov
or
xor
cmp
rcrl
xchg
sub
jmp
inc
ficoms
loop
xor
xchg
mov
dec
add
gs
or
or
and
fcomi
pop
xorb
cs
or
add
push
or
rorb
and
cmp
jmp
mov
dec
add
sbb
mov
lret
in
or
enter
in
jbe
shl
ja
sub
call
jae
push
lock
pop
push
push
mov
and
mov
sub
and
pop
inc
or
add
mov
jp
out
push
add
jb
ja
mov
jmp
mov
hlt
mov
cmp
jb
or
adc
ljmp
outsb
adc
add
mov
jb
pop
enter
out
fidivs
mov
mov
fs
ds
push
adcb
cmp
mov
cli
ja
or
or
call
dec
adc
mov
xor
pop
lea
pushf
inc
inc
jle
adc
mov
add
fwait
pop
dec
push
dec
xor
or
js
cwtl
ret
dec
into
and
rorb
cmp
into
pushf
mov
sti
add
stos
sti
mov
pop
cli
daa
out
inc
xlat
mov
jg
ss
in
jecxz
dec
add
insb
imul
imul
popa
stos
mov
outsb
push
popa
cld
mov
fidivs
bound
sbb
push
push
pop
std
cli
jne
xor
sbb
sbb
adc
add
dec
adc
mov
inc
mov
mov
daa
out
add
push
outsl
inc
mov
lret
subl
or
stos
push
xchg
jl
jge
add
shll
dec
sahf
jmp
loop
dec
stos
leave
adc
push
jbe
jne
fxtract
jecxz
cld
sub
cmp
sbb
push
rorl
jg
popf
inc
clc
jmp
mov
adc
cmp
pop
push
loopne
push
xor
adc
dec
rorb
faddl
pop
outsl
or
lea
clc
fnstsw
or
xchg
adc
aad
lret
sahf
push
jnp
dec
sahf
xlat
mov
add
daa
xchg
mov
mov
fldt
flds
sbb
or
fst
in
add
popfw
push
adc
adc
mov
fistpll
scas
cs
test
and
pop
pop
lret
add
jno
mov
pop
cmpl
test
or
adc
sub
xchg
push
and
xbegin
and
dec
sub
js
or
movsl
mov
ret
clc
fistpll
inc
sub
xchg
ja
test
and
dec
lret
xchg
fisubs
lock
dec
movsl
nop
inc
jmp
xchg
lea
sub
push
xchg
sti
pop
daa
cli
cmp
inc
sbb
cmp
jmp
inc
add
and
gs
push
dec
pop
pusha
inc
jp
xchg
cmp
xor
cmp
sbb
or
adc
pop
add
std
sub
mov
or
sbb
int
sub
pop
xchg
adc
enter
dec
or
dec
dec
add
xor
icebp
jns
mov
dec
inc
fsts
adc
dec
idivb
sbb
mov
or
jnp
mov
xchg
or
and
adc
cmp
into
leave
rorb
pop
pop
sub
outsb
and
jb
ljmp
mov
xchg
test
icebp
push
nop
sbbl
int
fs
repz
aam
sub
pop
cwtl
in
add
jne
or
outsb
frstor
mov
jl
aas
xor
push
dec
mov
jns
sbb
push
dec
push
inc
arpl
jb
pop
jp
jno
icebp
enter
sbbl
lock
dec
add
fs
push
outsl
lods
inc
sbb
adc
dec
push
lea
sbb
pop
hlt
sbb
lret
outsl
lret
mov
xor
push
and
sbbl
int3
push
or
ljmp
cmp
adc
mov
adc
movsl
les
push
inc
lods
cld
lock
add
push
fmuls
fs
add
jo
outsl
push
idivb
add
out
scas
xchg
rcll
mov
in
sub
sub
fmull
dec
gs
fadds
aam
cmp
insl
mov
sbb
fldenv
ss
cmc
repz
cltd
js
or
inc
jbe
gs
or
push
adc
lahf
pop
xor
push
in
ljmp
lret
std
in
shlb
imul
dec
jne
adc
xchg
adc
jo
lods
pusha
adc
cld
mov
cmp
pop
rolb
xchg
add
xlat
outsb
push
pop
pop
mov
mov
jb
and
or
or
das
push
push
nop
sub
pop
rorb
xchg
mov
jb
daa
bound
fs
fldenv
push
inc
arpl
dec
lock
lea
in
nop
rcrb
dec
aam
dec
or
pop
xor
or
ja
push
add
jp
testb
inc
nop
addr16
jae
nop
int3
pop
in
int3
xchg
test
cmp
pop
lea
sub
jns
seto
pop
outsl
insl
jo
in
push
pop
mov
adc
int3
push
push
call
and
movsb
leave
or
arpl
scas
pop
gs
mov
movsb
dec
or
inc
inc
jp
push
inc
pop
adc
pushf
or
lock
lahf
mov
add
push
mov
inc
and
add
outsb
mov
jnp
hlt
xlat
inc
clc
sub
xchg
and
push
subb
int3
sbb
add
push
pop
pop
mov
or
test
add
cmp
adc
jmp
shll
cmpsb
inc
mov
or
jb
test
dec
jmp
dec
mov
or
test
jae
pushl
xchg
cmp
mov
or
leave
jnp
test
aad
xor
movsb
sahf
add
data16
pusha
jnp
gs
lock
lods
add
pop
push
test
mov
sub
cmp
and
testb
nop
mov
sub
sub
in
lock
push
jae
add
xor
pushf
jae
cmp
cmpsb
add
scas
cmp
and
push
jecxz
cmp
rclb
mov
and
lods
in
and
jle
push
or
and
movsb
or
les
and
mov
inc
mov
add
adc
or
xchg
push
js
cmp
sbb
imul
xchg
adc
les
scas
xor
cltd
pusha
and
hlt
xchg
pop
les
in
and
pop
mov
inc
and
adc
adc
or
dec
add
leave
dec
sbb
pusha
jle
and
push
jg
mov
inc
xor
lock
mov
or
and
dec
mov
xor
mov
push
mov
and
and
mov
xor
xor
rclb
adc
xor
or
dec
sbb
xor
mov
dec
data16
cmpl
loopne
pop
adc
mov
int3
je
mov
push
js
mov
mov
xchg
push
in
mov
adc
pop
mov
push
call
in
andb
sub
sub
cwtl
mov
mov
jo
adc
sub
adc
cmpsb
js
pushf
testl
push
aam
mov
and
sub
rolb
mov
aam
test
jle
jo
adc
mov
shl
test
jl
pusha
ret
xor
xor
insb
int3
scas
jl
call
sbb
test
sub
push
jne
and
mov
and
inc
or
or
xchg
adc
enter
sbb
xchg
sub
push
je
out
push
mov
into
and
pushf
or
and
addl
or
dec
xor
pop
imul
xor
adc
and
and
xorb
inc
mov
pushf
or
in
mov
cmp
adc
adc
cwtl
inc
movsb
mov
mov
push
into
lock
rol
nop
loopne
aaa
adc
or
or
loopne
xchg
add
jae
pop
imul
test
mov
movsl
pop
pop
jl
andl
shrb
fs
fisubrl
jl
lock
cmp
xchg
fs
cwtl
adc
or
into
add
adc
in
in
xor
adc
push
push
je
jo
adc
push
pop
mov
test
out
mov
inc
data16
push
mov
and
stc
inc
jbe
sbb
cmp
dec
dec
pop
pop
addr16
jns
push
sbb
lret
adc
mov
mov
aas
fnop
lods
sub
and
mov
daa
inc
pusha
mov
inc
pop
call
jecxz
leave
stos
mov
inc
dec
inc
outsl
mov
or
fsubr
addr16
insb
push
fisubrs
dec
dec
inc
or
cmp
or
sub
or
and
jns
sbb
add
dec
subb
push
leave
xor
jae
jmp
mov
or
clc
sbb
sub
test
cmp
sbb
int3
add
xor
repnz
aam
inc
mov
sbb
mov
in
jns
sbb
cwtl
or
sbb
pusha
inc
mov
adc
jmp
in
in
add
pushf
stc
pushf
clc
pushf
negl
pushf
repz
repnz
xchg
lock
and
subl
mov
inc
xchg
mov
pusha
or
mov
jo
or
and
inc
fists
in
mov
adc
or
ficoms
push
imull
jge
aam
mov
pop
cmp
mov
out
incl
add
xchg
aad
add
rcll
aaa
aam
js
inc
adc
push
mov
in
mov
and
push
es
inc
add
mov
push
xchg
hlt
fs
inc
movsl
imul
cmp
mov
mov
sbb
int3
or
dec
xchg
cld
push
inc
inc
mov
pop
sbb
insb
or
and
dec
add
push
dec
sbb
adc
pushf
gs
cmp
xchg
cmpsb
pop
add
fs
mov
jg
xchg
inc
mov
popa
faddl
or
jns
out
push
scas
cmc
mov
das
repz
out
dec
push
std
popa
or
in
lret
nop
cmc
out
das
xlat
mov
sbb
push
rolb
push
dec
js
lret
je
retw
test
pop
mov
das
add
sbb
addr16
stos
icebp
in
xchg
fdivs
or
and
or
pop
jae
add
jg
push
or
xchg
lods
dec
clc
xor
add
xor
outsb
aas
gs
stos
mov
cmp
xlat
call
jne
xor
out
mov
test
rorl
adc
and
lret
dec
cmp
push
pop
or
call
lock
cli
loop
adc
xor
cwtl
jne
jmp
and
fidivs
adc
repnz
outsb
push
adc
sarl
scas
cmp
stc
sub
xor
cmpsl
adc
adc
jns
pusha
jge
inc
add
pop
adc
sub
cmpsl
push
sub
fimuls
jle
loope
scas
jl
ret
xchg
pop
mov
jge
insb
leave
cmc
gs
add
iret
or
or
sarl
xorb
lds
or
adc
loop
jmp
clc
mov
cmpb
cmpl
jne
inc
inc
insb
loop
stos
inc
adc
jne
xchg
xchg
push
adc
rcll
imul
adc
stos
mov
fwait
shl
and
aam
add
dec
arpl
dec
inc
test
movsb
arpl
mov
or
shl
mov
mov
or
in
pushf
repnz
fadds
jge
push
daa
pop
and
cs
lret
ss
sub
push
or
dec
shr
sub
or
adc
mov
mov
adc
scas
loop
push
lea
scas
push
mov
in
mov
jbe
sub
xchg
jno
setge
pop
jb
inc
lock
cmp
mov
dec
fcmovu
icebp
mov
cli
dec
scas
and
sbb
or
mov
call
inc
lret
nop
or
xchg
in
xor
nop
cmpsb
js
cmp
test
cltd
mov
xor
xor
lahf
jl
popa
inc
and
and
mov
sbb
aaa
ss
in
inc
push
aad
mov
pop
cmpb
mov
inc
cwtl
xor
lods
jb
fistl
pop
sub
pushf
lea
cltd
and
inc
mov
or
sbb
mov
dec
shr
out
into
cmp
lea
adc
daa
push
jl
inc
imul
sub
dec
jne
in
dec
mov
pop
pop
inc
hlt
iret
in
inc
fdivrs
sbb
jecxz
and
dec
push
push
push
xchg
inc
xchg
ficoms
inc
bound
ss
mulb
test
fsts
xchg
add
ficoms
inc
adc
nop
xchg
clc
xchg
mov
popa
adc
cli
enter
push
adc
push
dec
cmp
mov
pop
xchg
jno
pop
scas
nop
mov
cmpsl
sub
or
pop
lret
mov
hlt
rcll
andl
xorb
inc
xchg
pop
test
outsb
cld
movsl
fwait
es
push
mov
push
inc
cmc
cmp
jl
jl
call
lds
sbb
ja
xor
xorb
bound
int
sbb
xlat
scas
repnz
jns
cmp
lret
nop
push
push
shrl
cmp
dec
call
cwtl
sub
xor
xchg
dec
daa
fildll
jb
out
in
aaa
call
sub
fisubrl
mov
pop
xchg
adcb
test
cli
int
adc
cwtl
xchg
mov
pop
movsb
mov
xor
sub
xchg
adc
insb
cli
xchg
sub
sbb
xchg
cld
dec
pop
lret
call
lret
iret
pop
or
lods
and
mov
ja
add
test
push
push
pop
jmp
imul
sahf
sbb
in
gs
in
or
scas
lea
adc
rolb
cmp
sub
addl
es
pop
xchg
push
test
mov
js
out
popa
cli
adc
mov
repz
stc
jle
mov
cli
call
cmp
rolb
sub
push
imul
cld
ret
stos
in
mov
fisubrl
push
xchg
in
fs
and
sub
jle
loopne
dec
dec
pop
jmp
mov
pop
das
xchg
sti
jb
sbb
cmp
out
jne
shlb
push
lret
test
xchg
sub
cmp
sbb
mov
mov
sub
xchg
xchg
mov
ja
in
out
inc
add
dec
call
sub
lds
sbb
cmp
movsl
mov
test
pop
sbb
cmc
sub
int3
xchg
mov
adc
sahf
jns
sbb
pop
inc
pop
mov
test
and
js
scas
dec
adc
scas
test
pop
push
lock
loope
xchg
or
loop
mov
jnp
xchg
mov
add
lret
inc
adc
jl
or
jecxz
push
sbb
mov
xlat
insb
fimull
add
mov
or
aam
push
xchg
sub
rol
sbb
movsl
popf
icebp
insb
dec
les
in
mov
cwtl
jecxz
movsb
pop
xor
push
lock
in
ds
fs
mov
mov
filds
or
fbstp
inc
cwtl
adc
xor
push
pop
cmp
jb
xchg
and
loopne
lea
adc
daa
add
call
in
dec
out
sub
xchg
loope
mov
inc
dec
cli
movsb
inc
cmp
inc
ds
lahf
cmp
pop
adc
sti
jbe
in
pop
add
out
sub
cmp
mov
outsl
mov
pop
cmc
cmp
sbb
adc
adc
xchg
or
push
or
dec
push
popf
leave
loopne
cmp
test
pop
xchg
das
cmpsl
call
pop
sub
adc
inc
and
cs
xlat
mov
in
scas
data16
inc
pusha
dec
cld
hlt
xchg
or
sub
daa
lea
test
lea
in
sbb
or
and
loope
cs
pushf
xchg
dec
dec
push
cmpsb
xor
bound
out
mov
lcall
stos
mov
push
inc
enter
adcb
and
xchg
xor
mov
cwtl
stos
aad
or
fcomps
or
aas
test
out
push
xor
mov
adc
xchg
aaa
das
test
mov
out
mov
andb
jecxz
xchg
gs
gs
jg
mov
dec
xor
cmpl
jne
sbb
pop
adc
xor
mov
roll
inc
std
ljmp
aas
or
cmp
push
fldenv
clc
test
inc
mov
inc
lcall
fcomps
jnp
adc
sbb
fisttps
sbb
orl
or
xchg
pop
fwait
mov
mov
test
jecxz
adc
and
lods
dec
pushf
test
pop
adc
pop
sub
push
adc
pop
adc
rolb
push
inc
testb
imul
call
cld
mull
sahf
xor
xchg
sub
lea
fs
push
xchg
mov
fists
adc
add
movb
cmpsb
push
and
imul
ret
dec
adc
hlt
xchg
mov
je
add
jae
add
mov
daa
inc
add
or
mov
leave
inc
es
or
clc
mov
jg,pn
addr16
clc
add
dec
or
in
jge
sub
loope
in
adc
mov
mov
mov
or
mov
pop
loope
call
mov
push
xchg
dec
mov
nop
dec
shlb
jmp
aad
mov
adc
fldcw
xchg
inc
mov
cltd
je
push
mov
pushf
in
jae
int
and
paddq
jae
mov
pushf
out
jnp
add
push
inc
jle
add
test
jns
in
shrl
push
dec
jmp
es
or
mov
lret
xchg
imul
call
or
dec
pop
add
adc
jne
jne
lret
jl
push
adc
test
jg
or
leave
push
or
mov
rcrb
repnz
scas
imul
mov
mov
in
rolb
xchg
pop
movsl
aad
sub
aaa
xchg
add
jl
cs
jmp
mov
add
sbb
dec
test
lea
add
mov
popf
adc
scas
stos
movsl
cmp
jle
out
jmp
stos
ret
popa
lods
orb
and
xchg
jge
cli
jmp
jmp
mov
jg
dec
movsl
aad
cmpsb
dec
inc
jne
repz
test
xchg
mov
pop
mov
inc
cmpsb
sbb
xor
inc
loopne
mov
fwait
pop
mov
cmc
enter
xchg
jbe
stos
mov
inc
xor
xor
les
pop
pusha
adc
outsb
negb
mov
mov
cwtl
fstl
mov
xchg
add
andb
dec
jne
push
xchg
inc
jmp
nop
sub
jne
adc
cmpsb
push
mov
nop
xchg
pushf
mov
cmp
rcrl
xchg
pushf
xchg
mov
xchg
dec
arpl
stos
cli
bound
pop
jl
dec
jo
roll
mov
mov
inc
decl
sarb
add
jmp
jmp
out
ret
jmp
or
and
cmp
sar
mov
out
cmpsl
sbb
push
movsb
scas
pop
jl
or
je
icebp
and
outsl
lods
lret
push
mov
es
imul
lods
push
inc
xlat
push
cmpsb
mov
dec
inc
pop
out
mov
or
pop
sbb
shll
adc
cmp
aad
mov
leave
je
movsb
stos
adc
mov
mov
and
push
push
inc
xchg
or
fisubrl
cli
and
fcoms
dec
inc
mov
es
lock
push
lds
rol
je
mov
mov
adc
cmp
ja
addl
jg
mov
mov
mov
fs
cmp
jl
adc
jmp
inc
cmp
and
inc
decl
fnstcw
loop
rcr
hlt
pop
xor
mov
mov
push
xchg
mov
mov
xchg
xchg
add
outsb
in
out
sub
cwtl
je
cmp
mov
das
inc
movsb
inc
sbb
mov
scas
pop
stc
and
test
or
pop
sub
je
xor
in
inc
movsb
repnz
xlat
and
outsb
imul
jl
push
pop
mov
adc
not
mov
mov
das
lcall
sbb
sbb
lret
rorl
mov
aaa
jp
in
sub
nop
ret
mov
mov
cs
mov
sub
push
xchg
fisubrs
xchg
mov
movsb
mov
mov
mov
cmpsl
or
cmpsl
pop
iret
and
jp
and
push
dec
mov
push
push
les
sbb
mov
xlat
icebp
mov
push
pop
pop
gs
sahf
gs
ds
mov
andb
cmpsb
inc
jmp
repz
imul
or
data16
call
jmp
push
pop
cmp
dec
hlt
in
inc
mov
xchg
inc
mov
pop
xchg
fdivs
adc
add
int
pushf
mov
jp
xchg
pusha
push
fcom
xor
aam
push
out
mov
imul
xchg
sub
lret
inc
lock
sub
jae
or
call
jg
subl
sbb
adc
sub
jno
cmpsl
xor
out
cmp
jnp
jns
loop
xchg
int
inc
rcll
outsb
cmp
mov
sbb
cmp
mov
jo
or
jbe
enter
shlb
push
mov
or
xor
mov
sub
lret
jg
mov
fcoms
fstl
xchg
xor
mov
add
jo
pushf
adc
mov
mov
sub
clc
call
xor
jmp
adc
jb
fistpl
lahf
mov
add
pop
repz
mov
cmpsl
push
push
mov
push
xor
in
sub
dec
ja
sub
dec
cwtl
loope
pop
cwtl
andb
xchg
rcll
ret
push
inc
xchg
movsb
pop
jmp
in
sbb
cmpsl
jne
or
pop
xor
fistps
and
xor
iret
push
test
es
and
js
pushf
sarl
mov
outsl
mov
push
fstl
rcr
adc
js
cmp
sub
stos
cmp
movb
popf
xrelease
mov
pushf
jg
hlt
jecxz
adc
lds
mov
bnd
ret
das
mov
sub
adc
or
repnz
lods
jno
rcrl
or
mov
xchg
movb
mov
xchg
jg
inc
jl
out
dec
jne
sbb
jne
rol
push
dec
sbb
cltd
leave
aam
mov
outsl
mov
jp
loope
out
mov
dec
push
popa
call
xchg
xor
lock
xlat
loopne
test
pushf
fsubp
jne
cmpsl
xor
decb
clc
xor
pop
aad
or
call
lods
enter
ja
push
xor
sub
dec
nop
pop
loopne
mov
jecxz
push
outsl
popf
rcrl
ljmp
and
imul
fwait
jl
add
mov
xchg
push
dec
in
loope
cmp
std
push
rorb
jnp
pop
push
cli
cmp
cld
dec
xchg
and
dec
or
mov
sub
and
and
cmp
mov
or
aaa
fcoml
ja
or
lods
inc
popf
imul
ss
or
nop
divl
mov
xchg
sar
or
or
jno
push
xchg
cmpsl
cmpl
xchg
push
mov
cmc
imul
faddp
sub
mov
mov
jg
out
std
and
sub
movsl
call
add
add
mov
xchg
xlat
mov
sub
xchg
push
sub
jecxz
js
cmp
dec
test
or
negb
in
mov
clc
or
in
push
push
leave
push
push
sbb
mov
jp
sub
or
je
insb
lret
push
divl
xor
xchg
pop
mov
scas
call
mov
test
scas
pop
sub
or
push
sbb
cmpsb
xor
mov
scas
mov
std
inc
and
sub
sbb
mov
xor
mov
mov
popf
in
pop
mov
hlt
imul
dec
push
sub
repnz
push
sti
mov
sbb
dec
testb
test
jnp
movsl
or
rorb
inc
call
fs
xor
jae
fimuls
rorb
test
es
push
and
lret
or
fidivs
out
and
sub
mov
pop
lahf
pop
les
mov
inc
mov
js
out
mov
leave
or
xchg
bound
aaa
xchg
out
enter
jg
mov
mov
clc
stc
mov
jl
cmpl
je
dec
lods
inc
aaa
out
rclb
scas
gs
sbb
jp
sbb
aam
push
and
js
call
dec
repz
mov
mov
sub
mov
rolb
enter
pop
daa
sbb
cmp
mov
adc
cwtl
or
xchg
or
add
lret
sub
and
clc
pop
xchg
xchg
mov
incl
pop
and
mov
enter
and
mov
in
sub
es
mov
push
lret
pop
les
push
test
repz
addr16
push
mov
sbb
xchg
test
mov
testl
testb
shrl
addb
pop
mov
pop
scas
mov
pop
cmp
jne
testb
xor
push
cltd
xor
sub
mov
push
and
or
add
test
sbb
adc
loopne
adc
roll
shrb
sub
and
cmp
adc
mov
cmpb
mov
stos
sub
xchg
jo
mov
mov
pop
add
es
paddusw
mov
rorl
fistps
xlat
loop
push
data16
xchg
mov
jbe
jp
cltd
sub
and
fcom
mov
loope
cmpb
inc
sub
mov
xor
push
inc
mov
ljmp
inc
sub
movsl
lods
cmp
cmpsl
push
test
cs
pop
lods
lret
shrl
and
popf
or
scas
push
in
mov
test
and
jnp
iret
xchg
xlat
or
test
mov
lods
pop
jmp
inc
stos
cmpsl
inc
jmp
jb
nop
test
dec
fsubrl
cld
xor
dec
pushf
mov
notb
popf
les
out
mov
or
arpl
aas
repz
push
or
jmp
nop
inc
dec
adc
dec
or
and
push
lock
add
sbb
dec
mov
and
or
xlat
jmp
cmpl
rol
sbb
fldt
push
mov
push
and
xchg
sarl
test
outsb
sbb
adc
jg
dec
jmp
outsb
ss
dec
sub
imul
sub
inc
mov
cltd
pop
pop
and
ja
aam
push
mov
inc
mov
cmpsb
test
push
insb
jmp
add
lock
cltd
pop
lods
and
ljmp
sub
jle
imul
pop
pop
pop
dec
pop
push
push
dec
mov
hlt
imul
push
repnz
and
es
push
ret
mov
push
lods
loope
loopne
xchg
sbb
jle
dec
mov
adc
mov
scas
push
inc
test
inc
ds
jge
sub
clc
and
ds
addr16
xchg
pop
and
inc
or
or
jl
adcl
pop
lock
mov
cmp
dec
add
inc
dec
dec
jge
sbb
clc
jle
ljmp
shrl
hlt
jl
ljmp
loop
push
lea
fsts
cmp
sbb
adc
dec
or
fisttps
xchg
nop
int
mov
jp
pushf
add
icebp
movsl
sub
rcrb
sub
push
mov
cltd
sbb
mov
imul
mov
add
cmp
test
xchg
mov
mov
nop
sarl
dec
dec
and
sbb
leave
ret
enter
xchg
sbb
mov
into
and
scas
repnz
and
push
pushf
pop
xchg
push
fdivs
lret
dec
lods
add
test
dec
jp
sub
sbb
push
xor
dec
push
fs
mov
pop
repnz
push
roll
subl
jb
jmp
jl
mov
or
jbe
es
pop
mov
call
ret
xor
jae
shrb
shll
push
pop
mov
ror
test
aas
aam
mov
popa
mov
and
or
aas
lea
ljmp
sub
or
sbb
add
push
repnz
aad
or
cmpl
mov
add
call
pop
leave
shrl
add
call
cmp
mov
call
xor
add
out
adc
cmp
clc
fwait
jb
sub
or
rol
icebp
mov
mov
sub
pop
out
xchg
fnsave
add
aam
loop
mov
pop
loop
arpl
scas
jbe
jl
pop
repz
cmp
xchg
in
test
adc
pop
or
inc
cld
iret
addr16
fs
xor
scas
pop
dec
and
jg
xchg
or
jns
leave
xchg
fcompl
lock
jbe
test
or
sub
or
in
out
fstpl
cmpl
cwtl
mov
sbb
cltd
cmp
xor
js
add
add
fldl
inc
mov
int
fwait
mov
cltd
sub
jp
test
lea
jns
imul
scas
das
push
hlt
pop
mov
rcll
push
xchg
sbb
push
test
sbb
cmpb
arpl
not
int
inc
scas
xor
push
fsts
mov
add
outsb
pop
dec
mov
and
ret
imul
ficoms
stos
xchg
ret
pop
xlat
push
imul
icebp
dec
enter
jne
shl
stos
sub
outsl
xlat
je
cli
cld
xchg
adc
pop
inc
sbb
into
adc
jecxz
push
mov
push
nop
jge
mov
push
lahf
into
cmpsl
ficomps
hlt
nop
push
fiadds
or
mov
out
sbb
les
cmp
test
xchg
push
jne
cmp
loope
leave
sub
or
sbb
lea
push
jp
das
sub
push
stc
in
jg
mov
sub
lods
data16
das
cmc
xchg
pop
or
in
cld
mov
xor
pop
jne
inc
stos
xchg
shll
sti
jl
jge
leave
cwtl
loopne
jno
mov
test
in
gs
cmp
jge
sub
lea
cli
mov
mov
std
push
lods
xor
mov
ret
jg
mov
mov
lods
or
dec
imul
or
adc
leave
jo
or
imull
testb
lcall
pusha
call
dec
mov
add
sub
or
dec
or
jmp
sahf
or
add
sbb
fsubrs
mov
dec
jle
push
mov
testb
pop
lock
jp
data16
push
add
fidivrs
loopne
repz
fstl
popf
fdivrs
xchg
sbb
xchg
js
ret
mov
push
cwtl
stc
adc
sub
repnz
jae
jg
mov
jge
data16
or
push
push
lcall
mov
push
jmp
scas
sub
loope
loopne
ret
clc
mov
add
mov
sti
xor
jne
push
loopne
fs
or
inc
cmpsb
aas
mov
mov
push
test
pusha
push
jmp
cwtl
sbb
push
push
dec
mov
jne
or
mov
pop
shl
leave
icebp
jge
nop
daa
xchg
repz
cmp
call
incb
jle
sbb
adc
adc
sub
push
and
or
cmp
mov
dec
rol
pop
pop
pop
sub
mov
xlat
out
enter
in
and
mov
hlt
lret
cmp
negl
push
pushf
stc
gs
stos
sub
nop
inc
sub
jb
outsl
imul
out
in
dec
sahf
cli
daa
push
rcr
sub
mov
cmp
adc
mov
sbb
xor
adc
xor
mov
xchg
loope
pop
xor
popf
jbe
js
adc
aas
adc
fdivs
cld
and
sub
rcr
aas
mov
mov
adc
xor
les
ja
sahf
jne
clc
test
cwtl
xlat
xchg
mov
push
shrl
inc
nop
lahf
clc
ds
mov
lds
sbb
push
shrb
xor
adc
or
add
inc
imul
lds
cld
cmpsb
js
test
inc
lods
xor
sub
nop
cmp
inc
adc
xchg
jg
adc
jb
in
scas
and
xchg
outsb
rcll
xor
icebp
psrlw
fsubp
pop
and
loope
call
sub
add
lea
pop
push
xor
lret
sbb
cmp
pop
xchg
xchg
es
call
and
jmp
mov
xlat
outsl
or
xor
shrb
push
sbb
nop
pop
pop
inc
daa
sar
xor
add
lock
js
dec
mov
adc
add
fidivl
xchg
lods
scas
call
inc
test
add
jmp
aas
sub
or
add
add
add
jle
push
mov
fisubrs
cli
rcrl
lods
pop
scas
pop
add
xor
sub
mov
pop
jge
pop
popa
xlat
jbe
mov
xchg
out
pop
test
movsb
cli
std
imul
movsl
shrl
push
push
xor
adc
and
cwtl
cmp
arpl
je
call
jp
jg
inc
and
clc
in
hlt
hlt
cmp
adcb
js
in
adc
mov
loope
jg
rorb
daa
sbb
inc
cld
test
push
sub
add
jmp
push
cli
pop
mov
jb
jp
lret
push
hlt
aam
inc
paddusb
adc
xor
adc
add
jmp
or
inc
rsm
dec
and
or
add
ja
jl
mov
add
sub
and
adc
mov
orw
jg
push
loope
fsts
pop
xchg
cld
mov
sbb
je
cli
mov
mov
pop
xlat
sahf
sub
loop
cmp
test
rolb
lret
inc
pop
scas
xor
dec
lock
insl
cmp
ret
or
sahf
out
leave
sbb
adc
pop
test
mov
xchg
stos
sub
leave
rclb
rclb
fsubrs
xchg
mov
xchg
mov
enter
xchg
adc
push
mov
inc
mov
mov
adc
xor
xor
cmpsb
test
push
call
stos
mov
aad
adcl
lret
inc
cmp
stos
adc
xor
or
loope
mov
or
fimuls
rorb
sbb
pop
jbe
outsb
jmp
push
xchg
daa
and
mov
dec
and
jp
out
jo
jno
stc
lods
aam
divb
insb
push
je
mov
ds
inc
cmpsl
stos
inc
jg
cmp
je
sbb
dec
dec
in
dec
addl
mov
adc
mov
int3
mov
add
pop
pinsrw
and
adc
inc
cmp
jne
and
clc
cmp
dec
int3
mov
int3
arpl
das
sti
xor
ljmp
cmp
xchg
push
in
out
pop
ret
add
jmp
ljmp
add
cwtl
mov
adc
fldcw
push
iret
and
fs
sub
and
jmp
iret
xchg
pop
adc
push
mov
sbb
xchg
shrl
jbe
pop
push
add
push
pushf
clc
bound
int
sub
cmp
jne
adc
lahf
test
cli
retw
lds
scas
jno
bound
pop
stos
mov
gs
arpl
lret
add
adc
or
or
jnp
mov
xchg
imulb
xchg
jmp
adc
inc
mov
cmpsb
inc
rclb
lea
in
rcl
jne
imul
push
mov
shrb
sbb
leave
les
iret
xchg
or
pop
xor
pusha
aaa
jne
les
add
add
into
pop
ret
cmp
pop
push
shll
and
scas
test
enter
test
cmpsb
dec
sti
and
je
sub
shlb
push
stos
xchg
dec
sub
inc
xor
cmp
scas
sub
dec
sub
ret
ja
inc
sbb
outsl
mov
pop
add
push
xor
scas
lods
sahf
fwait
inc
bound
or
pop
dec
pop
adc
xor
pushl
dec
mov
popw
in
fisubrs
lock
sbb
inc
je
mov
xchg
xchg
mov
test
aad
in
add
fsubr
inc
sbb
shrb
add
ret
or
inc
xchg
xor
nop
ljmp
mov
iret
das
decl
or
inc
jmp
mov
js
cltd
ja
lock
inc
les
push
push
adcb
pop
inc
dec
add
pop
insl
cmp
enter
jmp
ljmp
pop
xchg
pop
cmp
dec
in
cs
cmp
cld
adc
and
test
push
lods
mov
rcr
ss
xchg
loop
pop
mov
dec
jle
cmpsl
les
mov
mov
inc
xchg
mov
xchg
rcll
dec
mov
add
sti
cltd
shll
add
sub
add
sbbl
cmp
in
push
lret
lea
push
pop
inc
je
in
pop
adc
pushf
adc
push
lods
enter
dec
jmp
xor
and
ss
idivl
sub
nop
xchg
stos
je
mov
lds
mov
jae
xor
adc
je
int3
dec
xchg
adc
test
add
loop
aaa
dec
daa
hlt
inc
shll
dec
pop
ja
push
mov
xor
stos
xor
mov
sub
xor
pop
cmpsl
xchg
out
sub
lock
mov
lret
inc
inc
cmpb
je
pop
ret
cmp
cwtl
sbb
sbb
pop
insb
sahf
pushw
jmp
sbb
sub
rcr
and
ret
inc
cmpsb
push
mov
or
cmpl
test
cmp
xor
add
inc
ret
lods
mov
lcall
out
sub
jns
or
push
xchg
or
es
dec
lock
aas
push
cmp
inc
push
add
fs
xor
adc
xchg
sub
mov
aam
divb
or
loop
adc
push
in
inc
dec
popa
jecxz
add
inc
addr16
in
dec
lds
pop
xor
pusha
pop
push
sub
jno
loop
hlt
mov
call
decl
mov
add
sbbl
fisubl
and
push
mov
pop
jmp
cwtl
inc
call
xlat
push
or
sub
and
sbb
pop
cmpxchg8b
mov
adc
mov
mov
arpl
cmpsb
stc
xchg
sbb
sub
repnz
je
xchg
in
dec
and
cmp
sub
lahf
aad
mov
enter
adc
in
les
adcl
repnz
fsubs
test
outsb
sub
mov
arpl
mov
les
out
inc
xchg
pop
pop
out
cld
or
dec
mov
jmp
dec
loopne
push
idivl
or
and
call
imul
xchg
ja
sub
sub
sub
notl
sbb
inc
outsb
sub
xchg
fidivrs
insb
push
idiv
push
lret
mov
pop
leave
cltd
dec
jmp
cwtl
outsl
adc
cmp
push
adc
and
xchg
movsb
push
cmpxchg
push
jae
lock
xchg
fidivrs
cmpsb
inc
nop
pop
xchg
or
jmp
dec
ljmp
dec
xchg
or
aaa
add
sub
in
adc
push
and
std
dec
push
mov
sub
dec
loopne
inc
test
and
insb
inc
sub
xchg
xor
xchg
cmp
dec
int
inc
lds
pop
mov
sub
sbb
inc
fcoms
dec
push
or
jg
loope
xlat
ror
pop
js
or
fmull
xchg
fdiv
movsl
mov
out
daa
lock
adc
addr16
adc
cwtl
mov
cmpsl
shl
pop
inc
add
add
inc
xor
mov
adc
pop
fdivrs
in
and
rcll
test
pop
pop
addr16
je
jmp
push
or
dec
dec
int3
movmskps
or
pop
shlb
mov
inc
mov
jb
sbb
test
fldcw
mov
sub
xchg
sbb
mov
call
leave
sete
mov
fs
or
adc
xchg
dec
movsl
popa
dec
in
cmp
mov
push
mov
stos
int
jge
push
jmp
xchg
and
iret
xchg
lret
hlt
in
insb
pop
pop
mov
adc
sub
nop
hlt
xchg
inc
inc
mov
pop
add
or
add
sbb
cmp
inc
lock
or
lea
rclb
and
push
mov
adc
or
adc
out
fstpl
movsl
xchg
icebp
push
dec
inc
imul
or
lea
call
add
add
or
and
cltd
sub
cld
or
test
mov
das
ret
jg
mov
jae
cmp
pop
sub
sub
fstpt
cmp
xchg
and
dec
adc
pop
fnstcw
mov
fbld
call
das
xor
loope
or
orl
or
ss
pop
jl
add
popf
or
cmpsl
or
mov
aaa
push
shlb
cld
pop
insb
insl
xchg
add
xor
lahf
mov
mov
les
je
mov
jae
mov
or
pop
mov
pop
ret
and
cmp
jne
dec
pusha
cmc
setl
mulb
mov
pop
jp
hlt
dec
mov
jo
mov
and
push
fstpl
loop
xor
inc
cmp
adc
mov
outsb
push
shlb
jne
and
ucomiss
jl
push
test
loopne
or
cs
iret
jle
in
call
or
test
push
adc
icebp
fmull
cmpb
xchg
sbb
and
push
push
mov
sub
imul
mov
adcb
movsl
jb
mov
test
adc
adc
sbb
fcmovu
mov
clc
sub
xchg
or
sti
jg
popa
or
pusha
sbb
jne,pn
icebp
xor
addl
mov
int3
inc
imul
enter
xor
insb
adc
imul
ret
mov
cs
and
sbb
jne
inc
push
lock
pop
add
jnp
sub
into
jp
shll
jmp
hlt
cld
push
xchg
push
push
lock
lods
stos
daa
dec
push
push
lds
add
pusha
arpl
xor
dec
sub
mov
push
lcall
adc
add
js
push
mov
outsb
les
sti
mov
jnp
push
mov
jp
pop
push
push
cmc
inc
fistpll
sbb
add
shrl
packssdw
sub
mov
xor
push
push
push
repz
test
adc
xchg
push
mov
in
mov
cmpsl
jge
sub
pop
dec
mov
push
cmc
lock
arpl
mov
das
push
hlt
jae
pop
and
and
in
test
enter
hlt
ljmp
mov
sub
shll
add
fucom
cltd
xor
push
xor
into
mov
push
sbb
push
clc
and
paddq
sub
jno
cmp
push
push
push
cs
mov
dec
out
les
scas
mov
sub
add
in
outsb
inc
adc
lds
stos
popa
out
adc
fistpll
das
jne
or
inc
dec
rclb
adc
mov
test
adc
inc
loop
enter
jp
mov
rolb
jecxz
push
adc
mov
and
pop
mov
push
js
push
insl
sbb
sahf
push
clc
xorl
mov
xchg
and
adc
xlat
int
das
and
jb
stos
jno
stos
sbb
in
xchg
xchg
mov
scas
ret
lahf
inc
or
int
pop
lcall
inc
push
loopne
fmul
push
dec
jne
mov
fmull
addr16
fnstsw
inc
inc
xchg
int3
xor
and
sub
jnp
data16
cmp
call
jb
sbb
pop
shlb
mov
fcompl
dec
in
out
mov
add
call
mov
ret
pop
jmp
mov
xchg
or
movsb
ja
shr
mov
dec
in
mov
aaa
in
cmp
daa
sahf
adc
jo
push
push
inc
imul
fwait
inc
pop
add
aam
mov
enter
repz
fdiv
sub
fsubrl
sti
push
sbb
ret
aas
cwtl
scas
jmp
and
adc
xchg
lcall
lcall
iret
ljmp
popf
pop
mov
xor
and
ret
mov
push
loopne
fcomp
mov
outsb
loope
out
dec
dec
and
cs
lret
ljmp
or
fcmovu
es
lods
jmp
sub
mov
push
imul
push
sub
sbbb
pop
dec
pop
movsb
push
fsubrl
dec
or
jmp
sub
cltd
add
rorb
jnp
hlt
cwtl
inc
push
fcomps
adc
inc
out
sub
sub
ret
mov
xchg
repz
and
out
mov
cmp
push
ljmp
dec
sub
jmp
sub
mov
xor
cmpsl
dec
hlt
fdivs
dec
xor
les
cmpsl
adc
es
add
pop
xchg
sbb
inc
mov
dec
dec
sub
aad
aam
test
cld
out
sahf
xor
clc
lods
xchg
test
or
popf
scas
imul
into
adc
ss
and
repz
adc
idivl
or
mov
adc
daa
das
test
mov
nop
mov
mov
lea
out
int3
pop
scas
pop
inc
mov
shlb
mov
std
out
js
push
push
pusha
ds
divl
sbb
loop
add
negb
inc
sbb
add
push
clc
lret
mov
and
and
ja
loopne
stos
ret
jmp
jl
push
les
ficoms
mov
fmull
and
pop
bnd
enter
or
std
pop
ret
sub
into
decl
cli
insl
in
fadds
frstor
cmpsb
movsl
adc
adc
and
adcb
movsb
push
cli
in
cld
xchg
cmp
or
jmp
pop
cld
pop
nop
pop
hlt
jl
xchg
pop
insl
xchg
push
sti
mov
cmp
sub
shr
xchg
inc
fstl
cmp
cld
call
push
lds
mov
hlt
jmp
jmp
mov
subb
pop
mov
xchg
mov
cmpsl
xchg
rcll
inc
clc
int3
pop
mov
aam
and
or
fisubs
ljmp
loopne
cmp
aad
dec
movsl
adcl
mov
mov
xchg
mov
cmpsl
dec
ljmp
fadd
out
shlb
jmp
lock
mov
dec
shl
and
push
ffreep
mov
imul
xor
pop
cmp
gs
sbb
loopne
movsl
adc
mov
cmp
out
inc
in
shll
dec
xor
xor
adc
xor
push
sbb
and
xor
and
xchg
push
and
insb
adc
jp
adcl
mov
aam
xchg
push
movsb
gs
push
or
fs
cltd
or
add
or
bound
das
iret
mov
mov
dec
hlt
insl
cmpsl
sbb
test
inc
ljmp
sub
sbb
gs
mov
in
push
mov
cwtl
mov
in
pop
rorb
adc
cmp
inc
dec
in
cltd
stc
imul
xchg
push
fmull
dec
mov
sub
outsl
mov
scas
xor
hlt
arpl
push
jp
cwtl
pop
mov
and
fcomps
xchg
inc
test
lock
incb
xchg
repz
clc
scas
lret
push
adc
ja
lock
mov
pop
push
mov
inc
pop
add
push
inc
push
lea
dec
push
aam
mov
aad
mov
int
push
outsl
mov
sub
aaa
inc
mov
xchg
cltd
fs
mov
js
push
or
lret
enter
mov
fs
scas
lret
or
ds
inc
call
mov
xlat
mov
dec
mov
jo
in
sbb
dec
jae
add
jp
rcll
jbe
mov
and
dec
out
or
push
jbe
fs
or
ljmp
jg
imulb
icebp
movsl
repz
imul
gs
push
daa
das
in
mov
adc
or
cwtl
nop
sub
push
sub
dec
adc
pushf
xchg
roll
dec
in
cmp
out
mov
icebp
cs
push
dec
or
clc
repz
fs
and
das
mov
lcall
mov
movsl
and
scas
xor
adc
cmpsl
and
pop
sub
pop
mov
enter
lock
mov
lret
mov
bound
js
sub
pop
push
clc
add
dec
je
sub
into
push
push
pop
cmp
inc
in
inc
sarb
xchg
addl
shll
fwait
imul
lret
xchg
hlt
mov
icebp
repnz
mov
movsl
pop
sbb
dec
cwtl
cmpsb
adc
sub
dec
mov
jmp
add
sub
add
sbb
xor
js
push
push
cmp
out
inc
lods
dec
mov
adc
sbbb
in
cwtl
or
or
inc
mov
add
cld
adc
mov
and
adc
movsb
or
cmp
pop
add
aaa
out
pushf
sbb
rorb
mov
pushl
mov
xor
cmp
aas
int
bound
push
xchg
adc
xor
xor
adc
into
enter
je
xchg
ds
inc
imul
jns
dec
inc
gs
xchg
pop
push
movsl
call
ret
and
and
and
cltd
jns
or
inc
sub
les
fistl
in
stos
lods
aaa
adc
pusha
adc
inc
add
mov
push
pop
loopne
sar
pop
and
inc
dec
cmp
ret
mov
out
xchg
pop
cs
xlat
pop
inc
or
xor
add
push
jl
mov
dec
out
and
xchg
push
mov
in
mov
call
sahf
cmp
push
jl
or
dec
mov
imul
out
pusha
cmpb
int
xor
sbb
add
sbb
roll
repnz
adc
sahf
cmp
daa
push
in
mov
xorb
xor
and
mov
dec
jnp
push
lods
jne
jo
dec
frstor
sub
fisubl
push
xchg
jmp
inc
js
icebp
dec
cmc
das
out
push
push
mov
movlps
mov
mov
outsl
popf
or
adc
sub
setle
pushf
pop
mov
cmp
jecxz
pop
cltd
inc
dec
xor
inc
pop
mov
dec
push
jmp
cmp
bound
sub
sub
test
aam
or
and
insb
mov
adc
add
je
bsr
popf
jle
cmpsl
and
push
lea
gs
call
stos
cmp
xchg
pop
testl
lret
mov
or
pop
push
mov
je
dec
jo
jg
imul
add
dec
jmp
rolb
pop
push
mov
lret
nop
push
jne
cmp
cmp
cmp
clc
out
ret
cmp
lods
std
in
mov
push
adc
mov
xchg
mov
push
jg
jb
fisubl
je
and
lret
jg
adc
push
movsl
xlat
popf
ss
insb
xor
cmp
fcom
or
adc
imul
js
add
xlat
xchg
adc
cmp
movb
imul
adc
test
jmp
cmp
aam
into
icebp
jge
lret
adc
pop
mov
mov
stos
push
pop
jge
je
mov
lds
or
push
ds
cmpb
pusha
call
cmpsl
dec
pop
stos
dec
mov
ja
pop
mov
das
cmc
sub
std
mov
pop
stc
jnp
mov
jg
js
adc
sbb
sub
nop
outsb
push
sbb
lcall
orl
and
jp
cmp
cmp
psubsw
lret
sti
lock
jne
jle
mov
cmpsl
pop
adc
jg
daa
and
stc
dec
fdivs
call
mov
sub
cli
test
shll
mov
jne
sbb
shl
in
push
push
pop
or
jne
push
sbb
adcb
push
cli
addr16
dec
push
test
sbb
mov
or
xchg
les
out
mov
add
push
mov
xor
mov
ret
roll
pop
div
popf
jne
test
inc
and
xchg
sub
clc
or
sbb
inc
sub
sbb
inc
sub
shll
jmp
bound
xor
sti
jo
mov
sbb
mov
movsl
adc
xor
xor
sbb
test
adc
add
adc
repnz
mov
xor
scas
xchg
cltd
bound
pop
in
sub
inc
pop
repnz
mov
mov
pop
mov
push
mov
xor
xlat
mov
or
jae
jns
leave
mov
adc
add
mov
imul
cs
pop
imul
sahf
ret
scas
push
jle
lahf
mov
mov
push
mov
xchg
out
jecxz
dec
cmp
lret
lock
inc
dec
jne
das
inc
push
sti
adc
fmull
push
fcomp
xchg
cs
sub
mov
dec
divl
and
push
and
lea
and
mov
ret
inc
push
movsl
adc
xorl
jmp
pop
sub
imul
jne
mov
jg
jmp
xchg
mov
cmpsl
bound
pop
fwait
mov
dec
sub
xlat
in
test
lods
dec
or
xchg
jg
cmp
repz
out
fldcw
cwtl
push
xor
cmc
push
cs
jecxz
dec
insl
mov
pushf
add
arpl
popf
icebp
cmc
sub
lret
lds
nop
mov
inc
mov
repz
lahf
outsb
std
add
mulb
addr16
cwtl
ss
xchg
adc
cli
jne
negb
push
lret
lods
loope
or
lods
ficomps
push
nop
ds
movsb
subb
pcmpeqd
cs
adc
pop
sub
daa
repnz
orw
mov
in
imul
icebp
sbb
movzwl
sbb
push
ljmp
adc
pop
jp
mov
mov
repnz
xchg
inc
or
sub
rclb
adc
xlat
dec
xchg
cmc
stos
add
ret
adc
inc
or
mov
test
clc
add
and
subb
dec
fcomip
out
dec
sub
jl
pop
pop
xchg
pop
xchg
jp
xor
cmp
ja
aad
mov
or
xor
dec
shlb
sub
sub
xor
lock
mov
sbb
in
adc
jbe
and
es
sub
or
shlb
cltd
push
addr16
lods
cltd
push
inc
push
xchg
cmp
pop
adc
mov
cmp
add
dec
cld
dec
loope
sub
sbb
dec
adc
push
imul
and
push
div
mov
int3
movsb
enter
sbb
dec
jl
mov
jge
mov
xor
mov
xchg
fcompl
jne
rorb
sub
push
inc
mov
cs
inc
gs
mov
popl
sarb
mov
adc
scas
repnz
fldenv
cmp
movl
arpl
sti
xor
xor
sarl
mov
add
xchg
push
and
andl
pop
xchg
mov
jmp
or
test
dec
mov
ret
push
outsl
jo
cli
fnstenv
sub
mov
inc
mov
or
jne
call
nop
sahf
insl
roll
sbb
mov
sub
incl
js
xchg
ret
dec
ja
xchg
leave
and
inc
mov
add
cmp
pop
add
xor
push
and
jne
inc
adc
loopne
imul
push
dec
push
clc
out
inc
xchg
and
and
addr16
xor
lock
popf
mov
xor
mov
test
mov
mov
icebp
aas
sbb
or
cld
inc
in
daa
fists
and
pop
loop
dec
mov
pop
push
movsl
mov
push
inc
dec
inc
loope
pop
or
xlat
sahf
rcrb
leave
push
pop
dec
xchg
outsl
pop
out
test
ds
test
and
test
into
xchg
jmp
and
mov
or
shrd
div
js
pop
pop
pop
clc
cld
mov
mov
in
xchg
adc
lret
jne
or
xchg
cld
cmpsl
adc
stc
and
das
jmp
jl
gs
aas
test
adc
sub
xor
and
idivb
shl
jg
add
je
cld
shrb
repz
lea
imul
cwtl
insb
fiaddl
inc
and
into
or
mov
lock
pop
mov
jge
jl
inc
stc
enter
lahf
dec
lcall
loop
shl
fstl
xchg
jp
mov
gs
cwtl
aam
mov
je
jmp
jmp
aam
mov
xor
cli
fcomps
ljmp
inc
push
ret
mov
cmp
adcl
xlat
cmpsl
scas
mov
pop
stos
sbbb
int3
shlb
pop
or
lock
pop
dec
sbb
push
adc
push
inc
movl
shrb
fs
outsl
cli
push
lods
subl
and
add
jae
push
stc
or
dec
movsb
sub
adc
outsl
je
push
cmp
xchg
sub
pop
xchg
hlt
jecxz
sub
mov
or
xor
sub
popf
test
mov
mov
shr
cltd
int3
insb
sub
sbb
ss
mov
sahf
ret
adc
sti
arpl
mov
into
lock
xchg
outsb
jo
push
icebp
add
addr16
push
lods
arpl
clc
jecxz
xor
mov
daa
mov
je
mov
pop
lods
dec
daa
sbb
ret
roll
out
inc
cwtl
imul
push
cwtl
imul
xor
xor
cmp
xor
xor
jnp
in
push
sub
jb
push
push
adc
mov
mov
fisubrs
andb
inc
mov
inc
je
leave
push
push
int3
je
sbb
imul
xor
sub
jo
fs
mov
imul
mov
cmp
cmp
mov
add
bound
fisttpl
push
shll
cmp
adc
sbb
fstpl
idivb
or
les
cmpsb
adc
daa
repnz
mov
mov
int
mov
scas
fisubs
sarl
lds
inc
outsb
mull
adc
jmp
adc
xor
out
push
mov
add
test
jne
mov
stc
cwtl
inc
xor
sar
dec
lds
push
add
add
fstpt
xchg
in
dec
pop
imul
sub
lahf
movsl
jl
sub
lock
add
push
hlt
adc
call
inc
cmp
pop
add
add
push
lret
pushf
dec
test
jb
push
mov
or
sbb
and
outsb
lods
stc
push
in
jnp
jle
or
mov
jne
jp
int
enter
cmp
jne
data16
adc
dec
xchg
out
out
push
out
or
jo
fcoms
in
scas
dec
pop
xor
scas
xlat
cmp
call
ljmp
in
push
adc
xchg
data16
push
loope
adc
pushf
ljmp
or
mov
cmp
mov
in
add
pop
cwtl
mov
mov
pop
jne
cld
jle
hlt
jle
xchg
mov
inc
sub
add
or
int
jle
cvtps2pi
clc
mov
push
in
jmp
sub
push
out
mov
fdivrs
sbb
dec
push
mov
and
and
xor
in
mov
and
push
mov
adc
fs
xor
repz
test
sbb
fs
stos
push
push
mov
decl
and
movsb
ret
inc
and
loope
sub
loopne
in
insl
ds
call
xor
mov
and
stos
mov
out
icebp
push
out
call
call
in
cmp
bnd
mov
fsts
adc
or
sbb
xchg
nop
imul
imulb
pop
add
inc
add
and
inc
jp
xchg
push
imull
adc
mov
and
and
fs
jbe
scas
in
cmp
mov
stc
scas
xchg
cli
popf
mov
adc
mov
movsl
and
idivb
daa
inc
into
lcall
adc
jnp
hlt
in
lret
mov
push
push
or
loop
mov
adc
orb
inc
cmp
enter
shl
sub
xchg
aas
or
jmp
inc
push
add
pop
mov
lock
add
push
add
hlt
mov
mov
lea
jmp
mov
inc
pop
or
jge
das
int3
pop
inc
jle
adc
roll
cmp
add
or
cmp
jl
mov
pop
es
cmp
jb
popf
scas
jb
or
push
xchg
adc
add
cmp
imul
sbb
jmp
out
push
mov
xor
sbb
in
push
adc
call
mov
mov
cmp
adc
jmp
arpl
clc
lahf
and
mov
xchg
sbb
subb
dec
sub
adc
xchg
adc
dec
inc
outsb
cmp
mov
adc
cmpsb
scas
aas
sub
pop
cld
push
xchg
jnp
mov
push
mull
xchg
pop
in
cld
push
call
adc
sti
and
jg
js
je
enter
adc
mov
mov
out
push
add
jecxz
out
sbb
rorb
jg
mov
push
lea
sub
cmp
jne
dec
mov
rcll
fwait
gs
dec
lea
mov
stos
sub
mov
sub
call
fs
push
sbb
addl
sar
call
aam
inc
push
pop
aas
push
subb
scas
and
pop
jp
out
xchg
inc
insb
mov
mov
popf
fmull
adc
inc
xchg
repz
dec
inc
mov
sbb
jecxz
pop
xor
insb
or
jo
push
inc
fs
loopne
adc
jns
or
sbb
inc
push
inc
inc
in
adc
fidivrs
test
cmp
adc
cmp
clc
test
and
or
das
add
xor
xor
dec
or
inc
and
jl
test
xor
xor
or
mov
jl
cltd
test
mov
push
call
imul
inc
sbb
rclb
cmp
add
xchg
sub
call
cmp
sbb
adc
jae
adcb
adc
rclb
dec
mov
int
adc
test
sub
int
mov
dec
mov
push
movsl
or
and
nop
fsubrs
fdivrs
rclb
dec
inc
dec
lods
inc
adc
ret
mov
push
cmp
or
je
mov
and
sbb
and
adc
mov
mov
and
adc
dec
sbb
les
xor
pop
push
adc
test
call
xor
in
stc
push
sbb
or
mov
xor
sarb
movsb
adc
push
mov
adc
pop
sbb
clc
or
pop
dec
mov
fisttps
xor
or
nop
js
aas
sbb
mov
lahf
xor
call
xor
and
sbb
inc
sub
xor
pop
adc
xor
clc
cmp
pop
adc
push
mov
add
or
xchg
sbb
jbe
rorl
enter
inc
js
mov
test
xchg
sbb
je
movsb
loop
lods
xchg
or
je
loopne
xor
sbb
sbb
push
sbb
inc
inc
pop
clc
sbb
sub
xchg
loope
sbb
or
adc
cmp
jg
loopne
dec
das
test
adc
out
aas
call
nop
and
es
or
mov
mov
call
dec
xor
movsb
push
jns
pop
movsb
or
ja
xchg
pop
add
js
popf
les
pop
ja
mov
mov
or
popa
inc
dec
push
mov
insl
and
pop
lcall
mov
inc
pop
and
adc
sbb
xor
sub
lock
loopne
xor
aaa
mov
stos
fs
push
dec
mov
out
add
int3
add
maskmovq
mov
xor
inc
jne
lods
sub
je
mov
xor
inc
xor
sbb
je
ret
push
push
mov
xchg
jbe
push
into
shr
or
lea
jb
xorb
sub
mov
inc
jne
mov
pop
add
push
jl
xor
sbb
xchg
lods
pushf
movsl
adc
adc
icebp
xchg
loop
push
es
fidivl
pushf
mov
or
in
jmp
adc
mov
mov
push
shll
sarl
stos
ret
push
rorl
xor
loope
shr
lret
int3
push
mov
fidivs
mov
mov
xor
mov
mov
nop
xchg
push
shr
jl
lret
imull
jbe
faddl
push
das
iret
jge
notl
inc
jne
inc
and
and
sbb
or
cmp
sub
add
inc
adc
in
or
lea
xor
test
scas
inc
mov
pop
mov
mov
ja
push
sbb
rclb
movsl
repz
cmpsl
incb
lahf
adc
jbe
xchg
push
mov
dec
repz
sub
pop
push
ja
or
icebp
nop
imul
push
cmp
mov
sbb
sub
sub
jb
push
cltd
or
daa
sbb
push
dec
icebp
sbb
aaa
push
sub
push
scas
push
bound
jge
ret
stos
fstpl
push
dec
dec
jge
aad
inc
dec
and
scas
lock
sub
xlat
or
pop
lock
or
daa
stos
jbe
jmp
mov
mov
insb
or
inc
jle
rol
pop
and
inc
xchg
repz
mov
pop
mov
cmc
in
cwtl
xchg
and
push
cmp
fs
popa
cmp
jns
push
arpl
xchg
outsb
popf
std
imul
xor
inc
es
cwtl
sti
cs
pushf
dec
je
fiadds
cmp
inc
insb
outsl
imul
fnstenv
jg
repnz
lret
imul
aam
std
out
out
fnstenv
iret
ljmp
add
cmp
hlt
pop
dec
mov
out
cmpsb
lock
jmp
leave
iret
dec
jge
xchg
jbe
jae
stc
lea
lock
mov
xchg
lcall
into
push
jmp
xchg
xor
rcrb
in
fcomps
popf
push
stos
cmpb
jle
cmc
inc
add
pop
test
jmp
movsb
addr16
into
push
and
rorb
adc
add
int
inc
push
pop
cld
movsb
stc
outsb
jbe
adc
cli
mov
sub
test
dec
fstpl
jmp
cli
aad
dec
js
dec
pop
mov
call
push
out
sbbl
adc
mov
or
cmp
jle
gs
sbb
mov
test
cmp
push
call
sub
iret
mov
mov
std
ljmp
mov
add
out
jno
call
adc
std
rorb
jle
inc
pop
push
into
mov
push
cli
lret
push
mov
mov
call
jp,pn
mov
rcl
scas
mov
dec
add
pop
test
cld
movsb
adc
push
push
adc
push
call
lcall
imul
dec
or
daa
je
les
out
push
jmp
rcl
lahf
xor
jb
addl
jnp
fwait
xlat
js
xor
jnp
or
mov
daa
fcompl
imul
stos
push
mov
sub
lahf
in
jne
push
dec
out
sbbl
imul
test
xchg
mov
pop
mov
and
or
xchg
inc
inc
rdmsr
and
and
mov
xchg
mov
aas
or
fwait
idiv
add
mov
inc
loope
data16
add
lea
sbbb
out
cs
mov
call
dec
cmpsb
or
cmp
sub
and
mov
nop
and
push
adc
and
or
xlat
mov
dec
sub
and
xchg
add
insl
outsl
fs
outsb
push
je
jae
jo
mov
cmp
pop
mov
pop
mov
pop
jecxz
cmp
enter
clc
push
roll
jb
inc
and
imul
lahf
and
shrb
or
stos
add
cltd
test
or
jl
inc
rorb
mov
adc
push
bound
jae
inc
push
adc
adc
push
sbb
cmp
test
pop
add
inc
ljmp
push
ret
jl
push
mov
pop
pop
dec
sarl
adc
inc
jnp
ror
int3
push
inc
lret
jbe
aad
mov
out
jle
in
cmp
mov
ret
mov
je
cmpsl
cmp
out
push
and
shll
xor
mov
jge
sbb
or
push
pop
mov
sub
xlat
mov
push
in
sub
test
dec
xor
push
sub
lock
dec
lods
jb
cli
cmp
jg
cmp
inc
adc
lock
push
dec
sub
sbb
movsb
mov
and
das
add
inc
dec
fnstenv
or
xor
push
pop
add
fs
push
movsb
das
imul
inc
scas
and
in
cmp
jne
inc
lds
jle
pop
btr
add
cmp
loopne
or
cltd
in
nop
sbb
sub
fisubrl
dec
or
lahf
lret
inc
lcall
jne
mov
mov
push
mov
incb
push
xorl
dec
or
jl
inc
pop
mov
fdivr
cmpsb
call
push
adc
pop
dec
mov
or
dec
in
jne
cmpsb
dec
mov
mov
jmp
dec
dec
mov
stos
test
adc
and
xorl
or
stc
add
adc
add
mov
dec
add
cmp
sbb
push
jo
or
enter
repz
arpl
and
movsb
or
add
enter
cld
pushl
pop
cmpsb
insb
jmp
clc
sbb
aaa
mov
lods
cmpsb
movsb
lea
xchg
pop
fldenv
add
call
hlt
lahf
in
adc
add
sahf
xchg
andb
jle
lahf
jp
xor
jnp
sub
add
outsb
push
pop
in
pop
std
loopne
sub
je
cmp
mov
bound
aas
movsl
mov
mov
in
or
inc
and
and
and
jns
or
xchg
cmp
inc
pop
in
mov
or
inc
sub
call
or
test
shrb
call
mov
dec
push
fsincos
add
add
push
xchg
inc
inc
and
xor
stc
mov
push
mov
js
aam
dec
adc
call
pop
cmpb
shlb
pcmpgtb
push
les
imul
out
pop
fadd
sub
test
std
push
loopne
jne
dec
lods
mov
gs
sarl
int3
push
pop
andb
xchg
orb
inc
push
lock
xor
cmp
repnz
jle
scas
sub
sub
mov
fsubrs
pop
dec
pop
sub
fwait
mov
pop
cs
les
push
or
add
call
fwait
push
mov
lods
fwait
inc
push
test
inc
cs
sar
inc
push
jne
fstp
inc
pop
shll
or
mov
leave
inc
adc
push
in
jl
sbb
and
jge
or
push
or
sbb
xor
shl
dec
dec
adc
jbe
jbe
outsb
xchg
rcrb
push
fnstcw
shlb
pop
rcll
in
mov
cmp
out
rorb
and
cmp
adc
push
add
aaa
cmovp
lods
jge
mov
or
xchg
iret
pop
gs
mov
dec
mov
subl
dec
jl
xlat
pop
dec
out
xchg
mov
lods
mov
popl
movsl
push
sub
adc
mov
out
sub
call
or
sub
push
mov
xor
add
bound
fucomp
call
lock
loop
ficoml
jne
jecxz
mov
das
repnz
mov
or
xlat
iret
cltd
dec
lea
xchg
aam
add
mov
adc
xchg
or
fsqrt
pop
inc
call
push
mov
sbb
stc
sbbb
mov
pop
or
sar
add
inc
cmp
dec
sbb
sbb
jne
or
out
jmp
xor
mov
pop
pop
mov
ds
sbb
lea
dec
nop
pop
cmpsl
aaa
ret
fwait
or
sub
mov
cs
cltd
sarl
adc
xor
xchg
sub
xor
inc
dec
xor
mov
jmp
js
pop
movsb
inc
loop
and
pop
sub
lea
mov
push
and
add
fisttpl
or
test
enter
add
test
inc
jmp
mov
lret
ljmp
imul
adc
ret
add
test
je
add
xlat
out
sub
cmp
jae
cmp
sub
sarl
mov
call
xchg
inc
imul
adc
call
or
dec
sub
pusha
loopne
inc
add
pop
lock
pop
sti
xchg
aam
loopne
fldt
mov
xor
and
insl
add
in
es
into
jb
push
push
push
push
sahf
pop
in
clc
dec
mov
mov
or
xchg
insl
push
xlat
mov
fsin
pop
inc
pop
xchg
dec
xchg
push
mov
pop
in
sbb
enter
mov
js
dec
cwtl
jp
inc
pushl
sub
cmpsl
fdivrs
or
xchg
mov
call
jmp
pop
adc
ja
fstpt
ret
jg
pop
and
pop
sub
sub
adc
popa
nop
sub
push
es
loop
sbb
icebp
jg
lea
sbbb
test
sbb
adc
adc
jmp
inc
sub
jge
or
push
ret
insl
out
mov
pop
leave
inc
adc
adc
in
fmul
jp
push
pop
and
shll
xor
inc
fadd
cmpb
je
push
dec
mov
popa
inc
sub
xchg
and
sbb
xor
cmp
mov
lret
jmp
shl
sub
cmp
or
inc
sub
inc
cli
push
jo
dec
or
je
popa
fcomps
outsb
in
jo
adc
sbb
les
lret
pop
sarl
sbb
cld
pop
leave
rcr
inc
mov
mov
fsubrs
push
jl
fmuls
insl
or
hlt
sbb
mov
dec
jl
cltd
pushf
or
sub
fs
cmpsl
hlt
nop
and
mov
mov
mov
lock
je
movsb
leave
or
pushf
fdivrs
adc
jle
xchg
sub
mov
mov
dec
and
and
adc
test
pop
push
shl
jl
adc
clc
add
xor
inc
enter
xchg
or
sub
repz
hlt
mov
ljmp
push
sub
push
xchg
or
lcall
jp
dec
sub
sub
push
push
mov
and
fldenv
push
xlat
xchg
cs
jp
dec
aas
imul
adc
jmp
mov
jnp
mov
lcall
pop
fs
rcll
stos
adc
dec
jae
decl
push
outsl
jmp
or
jne
stos
push
pop
or
jge
xlat
jbe
in
shrb
dec
and
sub
xchg
test
mov
nop
push
jb
or
pop
or
les
movl
adc
imul
push
lea
adc
or
out
push
cs
inc
xlat
stc
add
jge
push
sarl
xor
pop
gs
je
add
out
test
jo
test
inc
sub
jmp
lcall
mov
push
cmp
sbb
push
add
das
add
pop
cmp
sbb
push
jg
lods
adc
push
cmp
sahf
and
sub
dec
or
lea
push
outsl
dec
addr16
add
jnp
outsb
or
sbb
pop
adc
or
insb
or
jae
lret
mov
shlb
jle
aam
jb
outsb
into
lock
pop
mov
imul
pusha
dec
mov
aas
movb
addb
cmp
and
and
pop
dec
test
sahf
sahf
sub
fstpl
xor
sbb
ljmp
push
push
xor
lods
push
rorb
shr
and
dec
fdivs
sub
pop
scas
push
sub
jmp
pop
mov
xlat
dec
pop
dec
sarb
push
or
inc
and
rol
mov
call
inc
push
push
sub
out
lock
cmp
fsubr
jae
cmc
shrl
mov
aad
xor
mov
and
dec
imull
bound
psraw
lret
leave
leave
mov
xor
and
sbb
add
add
jns
pop
mov
into
inc
add
xor
jns
push
add
mov
enter
push
and
sbb
out
and
push
push
dec
ror
and
xorb
and
dec
xor
lret
push
or
test
fsubs
testb
or
dec
shll
test
sbb
or
scas
nop
adc
call
mov
and
nop
xor
cmp
push
mov
in
cmp
sub
xor
mov
inc
cmp
call
jp
dec
rclb
push
xchg
or
test
xchg
in
xchg
dec
sbb
sub
jo
xchg
pop
stos
sbb
jo
xchg
push
lea
addb
jo
nop
pusha
mov
xchg
fs
sbb
loop
aaa
adc
jl
inc
mov
inc
lods
mov
and
push
or
lea
and
fidivrs
sub
faddp
sub
push
dec
xchg
inc
xchg
mov
cmp
movsb
mov
xlat
int
fldl
sbb
mov
xchg
xchg
movsb
or
sbb
dec
insb
shrl
dec
xchg
test
or
mov
std
dec
ficoml
pop
mov
adc
popa
cmc
std
rcl
cmpsb
dec
loope
and
lds
pop
or
mov
fld1
push
and
lret
and
pop
inc
sarb
int3
adc
aam
nop
fsubrs
loopne
in
js
or
aaa
add
cmc
and
adc
mov
aad
mov
mov
lret
cmpsb
sub
inc
hlt
in
dec
scas
sub
orb
pop
mov
into
adc
inc
xchg
push
lds
ficoms
aad
andl
push
sub
pop
xchg
cmp
inc
mov
or
mov
adc
sbb
enter
and
mov
cmp
cmp
cmp
lds
cmp
bswap
cli
call
xchg
js
int3
pop
fmuls
mov
adc
adc
subb
adc
and
leave
cmp
shrb
stc
or
inc
or
and
push
fidivrs
out
shl
frndint
push
jl
and
loope
ret
test
adc
lea
addr16
cmp
add
inc
add
int
rorb
cwtl
mov
adc
xor
or
shl
lock
nop
inc
and
inc
add
clc
test
rorb
mov
loopne
mov
mov
icebp
push
fsubl
pop
jo
lea
push
icebp
or
adc
mov
jg
jno
js
jns
nop
aad
sbb
xor
iret
xor
fbld
cmp
inc
in
push
jp
sbb
xor
xor
mov
imul
dec
and
ja
rcl
xor
gs
xlat
and
insb
mov
pop
out
into
mov
stc
iret
sub
adc
cmc
mov
shrl
xchg
push
adc
sbb
add
inc
xor
xchg
and
xchg
and
subb
mov
inc
mov
pop
jno
mov
xchg
mov
xor
add
adc
or
cmp
inc
jns
enter
or
xlat
push
bound
and
add
iret
inc
fs
mov
rol
ret
scas
adc
push
fs
nop
testb
xor
enter
mov
jmp
and
pop
adc
mov
rcll
add
lea
cmp
sbb
enter
rol
test
ret
out
loope
ja
fcom
pop
and
ret
xchg
or
xchg
and
adc
inc
mov
rolb
inc
or
clc
mov
lea
cmp
sbb
mov
fstl
pusha
imul
push
add
inc
xchg
pop
pop
xchg
push
jno
rorb
mov
push
and
insl
mov
push
pop
xchg
lcall
dec
pop
in
xchg
pop
mov
movsb
and
out
mov
dec
cmp
add
dec
mov
or
mov
adc
sub
and
cli
daa
mov
roll
xchg
cmp
add
rcl
fnstenv
push
or
cltd
in
cmp
adc
enter
push
and
or
iret
inc
inc
and
hlt
add
adc
xor
filds
ljmp
inc
add
into
fdivl
mov
and
mov
iret
mov
cld
push
adc
ret
adc
gs
int3
and
xchg
sub
jmp
add
rcrl
test
jle
outsl
sbb
lea
cmp
sbb
adc
push
mov
adc
or
adc
sbb
lea
in
insb
mov
and
xchg
roll
lds
xor
call
inc
jmp
or
or
imul
jne
xchg
fistpl
inc
adc
adc
add
inc
mov
int
or
fdivrl
xor
adc
add
test
jae
popf
ss
add
andl
es
adc
mov
xchg
outsl
xor
aam
sub
adc
mov
es
push
jecxz
xor
mov
sbb
push
adc
dec
or
subl
fsts
mov
sub
push
lds
inc
adc
pop
or
in
cmp
mov
mov
in
cmp
push
in
cmp
mov
mov
in
cmp
mov
mov
in
cs
shrl
mov
push
lds
cmp
rcll
mov
xchg
push
or
inc
add
cmp
lret
push
fimull
mov
enter
sbb
cmp
xchg
pop
sub
pmulhuw
sub
pop
mov
and
enter
sub
or
js
adc
sub
or
or
lret
or
sub
adc
subl
aaa
dec
repz
sub
into
aaa
into
inc
sti
sub
sub
aaa
dec
fiadds
mov
xchg
pop
cmpsb
test
imul
pop
sub
xchg
cmp
push
xchg
and
adc
psllw
xor
sbb
or
ret
aas
and
inc
push
repnz
into
lahf
xchg
sub
adc
cmpsl
xchg
xor
add
les
xchg
scas
inc
xchg
xchg
cwtl
or
xchg
stos
sbb
in
dec
mov
jge
sub
dec
rclb
or
dec
xchg
dec
xchg
jbe
or
or
or
enter
sbb
xchg
dec
sub
xchg
loop
add
aas
and
xchg
fmull
je
fdivl
into
movsb
xchg
dec
std
push
test
xor
fiadds
sub
xchg
mov
dec
xchg
push
and
stos
shll
dec
xchg
movsb
or
push
aas
xchg
xor
in
and
lahf
xchg
std
and
add
aaa
or
enter
xchg
bound
sahf
lahf
xchg
sbb
or
sahf
cmp
mov
sbb
in
nop
pop
je
dec
clc
inc
sarl
je
adc
ljmp
mov
mov
push
test
in
dec
scas
aad
and
lahf
cmp
or
nopl
lods
push
sbb
xchg
dec
mov
xor
jbe
add
jno
pop
hlt
xchg
pop
xchg
or
nop
aad
or
sub
xchg
sub
xchg
scas
inc
je
stc
xor
rcrb
lods
and
rorl
sbb
test
in
vbroadcastf64x4
or
ficoms
nop
enter
pop
push
stos
sbb
rorb
xchg
dec
fimuls
xchg
dec
repnz
or
xchg
cmp
xchg
pop
dec
xchg
dec
xchg
or
jle
jo
pop
xchg
adc
lds
psrlq
jbe
pop
cmpsl
xchg
mov
inc
repz
sahf
add
dec
adc
lds
cmp
sbb
add
mov
test
xchg
movsl
fiadds
aas
xchg
add
and
push
in
add
or
dec
xchg
ret
lahf
xchg
xchg
imul
xchg
xor
lods
mov
nop
xchg
xor
mov
fwait
lret
jmp
pop
sub
insl
pushf
xchg
xchg
jmp
jmp
pushf
movsb
xchg
jmp
jae
xchg
test
jno
jmp
add
sub
push
push
mov
pop
sahf
xchg
dec
or
push
xchg
mov
xchg
and
mov
or
test
mov
xchg
pop
mov
xchg
xchg
sbb
xchg
or
add
and
loop
ucomiss
cmp
jno
jmp
fs
jmp
mov
dec
pop
sub
inc
gs
aad
iret
adc
ret
add
pop
aad
sub
pop
imul
inc
xchg
or
pop
pop
sub
mov
lcall
fcoml
repnz
or
mov
gs
dec
sbb
mov
or
push
mov
inc
xor
sbb
mov
mov
lahf
jnp
pop
and
repnz
or
add
das
and
lock
fisubl
loope
lahf
stc
test
mov
jnp
loopne
in
and
sub
mov
mov
hlt
sbbl
push
pop
lea
cmpsb
adc
clc
inc
in
repz
lret
adc
xor
xchg
call
mov
xor
popa
pop
xor
xor
aam
add
sbb
lock
jl
pop
mov
insb
mov
push
ljmp
push
or
test
sub
mov
fs
and
rclb
jae
fadds
sub
add
jmp
mov
inc
add
or
or
mov
addl
or
jmp
xchg
push
cmp
or
stc
sbb
adc
inc
adc
add
test
mov
sbb
mov
test
dec
cmp
cmpsl
mov
adc
adc
or
and
inc
or
mov
add
adc
sbb
ret
sbb
popa
lret
add
mov
adc
or
or
or
add
xchg
test
xor
enter
or
adc
jns
dec
mov
add
inc
or
push
dec
cmp
lret
imul
int3
cmp
mov
and
inc
mov
adc
cmp
adc
jmp
sahf
jnp
mov
adc
cmp
movsl
mov
or
sbb
ret
sbb
dec
jmp
jnp
mov
mov
int3
cmp
mov
sbb
inc
sbb
aad
call
mov
cmpsb
jnp
xchg
mov
or
or
push
push
cmp
push
lods
inc
mov
loopne
stos
pop
repz
pop
adcl
pop
in
sub
add
stos
mov
add
push
xchg
xchg
pop
pop
add
add
adc
mov
adcb
push
fcompl
mov
xchg
pop
jbe
inc
add
adc
xchg
out
push
fmuls
or
popf
rorl
fmuls
int3
mov
push
add
and
push
loopne
add
dec
push
pusha
pop
add
pop
push
pusha
pop
add
jbe
pusha
pusha
add
cwtl
push
pusha
fs
test
pusha
push
mov
pop
subb
pop
mov
add
jns
push
inc
je
inc
xchg
and
add
sub
jl
add
stos
repnz
nop
mov
test
or
test
cmp
sbb
lret
pop
mov
insl
sub
in
push
xchg
test
add
push
mov
mov
jae
or
push
jns
outsb
enter
mov
push
pop
test
push
add
in
push
lods
icebp
shrl
jo
and
or
mov
data16
add
mov
sub
lods
test
mov
fnstenv
lea
push
shll
scas
enter
xor
nop
mov
adc
mov
shll
or
insb
aaa
push
push
fxch
or
dec
daa
stos
mov
adc
push
shlb
mov
sbb
cmp
dec
stos
mov
sub
rclb
dec
lret
pop
push
fsubl
rep
cs
push
out
orb
subl
add
mov
js
enter
in
orl
mov
mov
hlt
add
insb
push
movsb
sub
clc
test
mull
cld
or
adc
mov
movl
adcl
mov
xchg
rcrl
out
mov
add
jle
push
push
and
mov
cmp
and
jb
movsl
dec
cmc
cmp
adc
push
push
push
jg
adc
add
pop
andl
stos
push
sbb
loopne
sbb
inc
pop
inc
sbb
xchg
int3
clc
adc
ljmp
dec
sub
and
jl
lock
add
mov
shrd
in
fsub
xlat
jnp
sbb
add
dec
push
repz
sbb
clc
shr
push
repnz
outsb
push
jge
xchg
inc
enter
add
mov
mov
add
or
sahf
sub
pop
jne
mov
and
lock
push
or
add
mov
mov
lock
push
in
cli
enter
dec
xchg
loop
lods
pop
adc
cmpsb
cmpsb
push
pop
adc
adc
pop
xchg
adc
out
xor
mov
cmp
ja
inc
mov
and
lods
cmp
stc
rclb
dec
adc
adc
cld
cmc
sbb
push
cli
addb
rclb
cmp
movsb
pushf
adc
or
sbb
in
dec
cwtl
push
mov
pop
test
mov
add
lcall
out
es
inc
xchg
add
sahf
add
mov
stc
pop
cwtl
inc
jmp
lret
adc
mov
xor
inc
mov
test
mov
sbb
adc
inc
sub
and
cwtl
lahf
nop
lods
fwait
in
sub
mov
mov
mov
mov
out
inc
mov
add
sbb
push
andb
adc
lods
bound
mov
push
movsb
push
and
add
or
aas
lds
sub
and
inc
orb
xchg
hlt
push
daa
mov
push
or
mov
mov
xlat
adc
mov
xor
inc
sbb
mov
cmp
fbstp
es
sbbb
bound
jno
or
mov
xor
and
mov
xor
call
mov
in
sub
cwtl
xor
mov
push
xchg
push
and
loop
or
mov
repz
jae
cs
mov
fidivrs
push
push
pop
inc
sub
or
test
xor
jnp
test
inc
adc
push
rorb
and
mov
mov
push
mov
sub
cmp
shlb
mov
popa
js
inc
push
imul
pushf
mov
movsb
adc
or
inc
push
dec
cmp
add
mov
loop
xor
mov
adc
test
fwait
dec
sbb
out
xchg
mov
jecxz
adc
adc
or
movsb
andb
or
inc
push
dec
cmp
add
mov
loop
xor
bound
mov
push
mov
cmp
sbb
pop
lret
sahf
sbb
mov
mov
inc
cwtl
mov
xchg
lret
or
xchg
push
int3
xor
in
push
out
dec
mov
add
mov
pop
out
test
or
scas
mov
and
outsl
and
lahf
insb
lahf
mov
test
nop
mov
push
rcll
and
dec
aas
cltd
aas
imul
adc
scas
mov
and
mov
call
lahf
int3
fbstp
adc
fldenv
fs
repnz
idivb
jnp
loope
adc
test
mov
mov
push
cmp
pop
lock
test
pop
adc
add
xor
test
clc
clc
inc
adc
fsubs
sti
and
jl
xchg
es
dec
pop
jl
and
push
add
ja
pop
inc
mov
pushf
syscall
or
dec
icebp
sahf
or
pop
add
and
xor
test
pop
pop
xchg
xor
mov
add
fs
gs
fs
xor
inc
mov
mov
shrl
or
gs
jmp
les
add
jo
adc
sbb
aad
dec
xor
sub
fldl
popf
xchg
nop
or
jl
sbb
clc
test
pop
scas
xchg
xor
lods
addl
jl
adc
test
inc
imul
sti
and
mov
jmp
jp
adc
jp
mov
xor
mov
adc
jnp
loope
pop
or
mov
add
fbld
push
std
xor
faddl
mov
and
adc
adcl
mov
mov
in
inc
insl
mov
and
and
inc
cwtl
jp
subl
sub
push
outsl
scas
mov
fsubl
in
out
inc
mov
mov
outsl
adc
enter
and
jp
int
mov
test
jno
mov
setp
adc
adc
mov
test
mov
push
f2xm1
sbb
test
outsl
addb
das
jnp
sub
sub
fprem
sbb
test
jo
push
or
jnp
sub
sub
mul
loop
add
and
das
rolb
std
xor
mov
or
and
or
js
es
dec
pop
das
fildl
xchg
sub
idivb
xchg
mov
sub
les
insb
test
mov
ret
adc
fstps
loop
sbb
and
mov
popf
cmp
dec
rorl
push
and
jns
and
loop
fisubs
mov
repz
sub
das
test
jnp
testb
mov
test
ja
cmp
xchg
rorl
push
and
jl
xor
js
out
in
inc
or
xor
mov
pop
mov
push
push
test
cmp
popf
cmp
or
xor
xlat
lret
dec
mov
xor
jle
jge
inc
mov
add
dec
andb
cli
in
xor
adc
jg
mov
xor
xor
mov
test
test
subb
xchg
adc
rclb
mov
and
pop
xorl
stos
fldenv
mov
test
sub
pop
subl
sbb
push
out
add
call
pop
mov
test
test
insb
add
test
xor
loope
push
and
test
jo
je
sub
and
xchg
fisttpl
mov
adc
test
xchg
jl
mov
pop
mov
rorl
push
repnz
popa
add
rcl
mov
rorl
push
and
mov
adc
and
xchg
sti
xor
movsl
test
mov
test
cltd
jmp
fbld
mov
aas
push
mov
test
cwtl
mov
sbbb
mov
test
out
push
fldenv
arpl
lds
out
testl
sbb
adc
inc
jecxz
ror
mov
inc
push
dec
popl
mov
jae
arpl
pop
int3
fs
test
jp
push
fnstcw
mov
jnp
das
roll
fists
and
inc
ja
cld
mov
out
pop
xchg
jnp
sub
inc
test
xchg
adc
int3
add
pop
inc
or
dec
rorl
push
and
aam
jb
and
mov
cmp
test
xchg
adc
test
in
cmp
notb
and
test
loopne
in
sub
arpl
sbbb
mov
test
mov
xor
mov
or
adc
inc
loope
stc
fsts
inc
dec
mov
and
adc
adcl
mov
test
dec
sub
lcall
sub
inc
jecxz
cmpsb
pop
pop
jnp
loope
dec
or
xchg
inc
add
add
ljmp
rorl
push
and
or
inc
or
add
and
sarl
mov
push
test
popf
adc
and
add
xorb
jge
pop
ljmp
test
sahf
sub
sbb
js
outsb
clc
cmp
cmpsl
mov
adc
push
test
inc
lahf
mov
xor
add
testl
imul
scas
mov
xchg
inc
sub
add
mov
arpl
rorl
push
and
pop
xor
inc
xor
add
sarb
cwtl
sub
pop
stos
push
test
mov
inc
and
add
add
xor
mov
adc
pop
test
inc
movsb
mov
daa
loope
add
add
ja
inc
sub
adc
test
inc
movsl
mov
and
jnp
lret
out
adc
cmpsl
mov
and
in
sahf
inc
cmp
adc
test
inc
test
enter
and
inc
pushf
les
addr16
pop
sub
jg
scas
mov
xor
adc
lret
add
aam
dec
jle
rcrb
test
mov
add
jle
cld
add
add
mov
and
je
in
cli
cmp
stos
outsl
lret
inc
pop
out
adc
popa
test
inc
lods
mov
and
pop
inc
inc
dec
mov
sbb
test
sub
inc
scas
test
push
rorb
repz
je
push
loope
push
push
scas
pop
fldt
adc
sar
inc
or
je
mov
fisubrs
and
mov
push
mov
int
adc
jo
sbb
inc
mov
pushf
jg
inc
mov
rol
fs
mov
cmp
ror
sbb
icebp
add
addr16
sbb
out
fdivrl
inc
enter
xor
add
xchg
subl
pop
mov
push
adc
mov
jmp
push
addb
mov
push
rorb
cmpsl
cmp
adc
xchg
clc
sub
adc
gs
adc
jbe
pusha
and
out
inc
shll
mov
jae
sub
ds
pop
add
xlat
data16
xor
sbb
imul
xlat
addw
jle
jns
pop
cmp
mov
add
mov
xor
rol
sahf
fadds
lret
mov
adc
add
lcall
pop
adc
idivl
inc
cmp
add
rorb
inc
xor
push
mov
stc
cmpsl
add
or
or
movsb
adc
dec
inc
sbb
sub
push
adc
testb
or
nop
sbb
sbb
add
cmp
xor
loop
jmp
push
dec
adc
add
mov
pop
xorl
xchg
ret
clc
sbb
mov
dec
add
dec
fucomi
outsb
push
inc
rolb
rdmsr
cwtl
pop
mov
inc
addl
xor
lea
ss
adc
ficoml
inc
and
mov
roll
cli
add
movsb
inc
cmp
inc
sti
into
call
mov
push
mov
sub
in
cli
adcl
push
rcrb
nop
dec
xchg
and
scas
push
mov
sti
xchg
or
es
push
shl
inc
push
cs
mov
lea
xor
jl
fldl
lods
in
xchg
push
adc
mov
xchg
notl
movzbl
jnp
dec
sbb
aam
and
mov
hlt
jne
or
adc
dec
pop
jo
pop
ljmp
add
inc
dec
ret
rclb
js
cmp
sub
fidivs
push
pusha
sbb
call
pop
stc
mov
or
or
mov
and
dec
jbe
lods
mov
lahf
push
push
jnp
jae
adc
push
inc
adc
cmpb
mov
and
mov
sbb
pop
pop
pop
inc
ljmp
mov
pop
stos
sub
pop
sbb
mov
arpl
push
lds
dec
adc
inc
sbb
cmp
xor
in
call
mov
movsb
pushl
sub
xchg
lahf
hlt
shrb
push
mov
or
orb
gs
jmp
add
js
adc
sub
or
xor
enter
add
xor
fwait
test
cmpsb
subl
inc
int3
repnz
dec
add
add
mov
push
mov
les
or
dec
add
outsb
fs
pop
gs
pop
inc
inc
cli
fmull
and
ja
js
cwtl
inc
jno
mov
aas
sub
push
aam
and
push
insb
and
inc
pop
push
shlb
je
adcb
les
imul
inc
and
clc
insb
jmp
or
jmp
mov
xchg
sbb
inc
or
aam
icebp
or
lock
in
test
out
adc
loop
test
sbb
sbb
test
outsl
mov
jno
and
nop
sub
cltd
jl
mov
push
and
inc
cmp
and
inc
jae
lods
aam
mov
adc
notl
test
fsubs
in
bound
cmp
cwtl
sbb
sbb
lods
fdiv
sub
or
roll
out
sub
addr16
loop
adc
jecxz
cmp
lock
aam
pushf
push
mov
inc
aam
aam
sbb
clc
xchg
inc
out
test
jecxz
mov
pushf
sbb
dec
or
push
aam
and
push
test
scas
aam
push
in
adc
jbe
in
ret
adc
mov
aam
mov
sbb
cld
icebp
or
or
add
push
inc
inc
push
pop
push
adc
popa
jo
pop
and
mov
xor
movsl
adc
lods
push
test
adcb
jmp
leave
je
push
mov
shrl
test
pop
divl
jp
or
or
inc
jo
stc
int
repz
jne
sub
and
inc
dec
push
push
lds
push
xchg
cld
data16
je
push
inc
movzbl
fisttpl
xchg
sbb
dec
mov
push
and
mov
and
pop
xor
stc
mov
push
xor
aaa
mov
push
xor
das
and
jge
aas
sbb
xor
add
or
xor
or
cmp
decl
and
test
inc
outsb
mov
adc
loop
adc
sbb
shl
into
sub
mov
sbb
mov
shrb
das
push
and
aas
inc
xor
add
movsl
fsubrs
das
add
sbb
imul
adc
or
jae
ret
popf
sbb
call
lock
adc
daa
add
std
daa
les
push
pop
bound
pop
ret
pop
bound
sbb
push
repnz
ret
pop
bound
pop
bound
push
sub
nop
and
cmp
leave
mov
stc
push
je
stos
in
into
adc
jp
add
sbb
push
in
add
es
mov
inc
jne
adc
push
cli
aaa
subl
scas
enter
test
dec
and
dec
mov
das
scas
rolb
xor
xor
cmp
adc
lods
das
jp
inc
aas
sahf
jecxz
add
int3
mov
and
sbb
dec
sbb
les
fs
sub
xchg
mov
push
jge
inc
push
jge
jbe
pop
xchg
test
dec
arpl
xchg
sarb
popf
test
inc
sub
push
add
fmuls
popa
mulb
dec
pop
jl
mov
or
xchg
pop
cld
test
enter
idivl
test
and
mov
push
int3
sbb
les
and
xchg
enter
and
iret
inc
and
incb
in
inc
in
inc
inc
and
call
loope
and
mov
and
mov
and
out
add
int3
cmp
and
les
add
les
les
add
mov
inc
and
cmc
aam
sub
push
and
mov
and
loop
adc
dec
mov
and
inc
and
das
inc
and
pop
inc
and
pusha
test
insb
mov
and
push
or
and
pop
adc
test
pop
mov
xchg
fisttps
loope
es
mov
movsb
push
push
es
test
adc
es
and
jle
rorb
adc
sub
mov
push
inc
xchg
adc
and
lods
das
adc
xor
push
fcoms
aas
xor
sbb
xchg
popf
cmp
fdivp
sbb
mov
and
and
cld
lock
bound
aas
inc
inc
sub
ret
pop
bound
sub
inc
push
sub
ret
pop
bound
pop
bound
lea
sub
fdivs
jbe
mov
fdivr
sbb
pop
sub
mov
sub
mov
lahf
fadd
and
stc
es
or
aam
jne
clc
sahf
sub
xchg
cld
sub
cs
and
mulb
movsl
mulb
aam
pop
mov
das
aad
dec
das
jge
jge
jge
lods
das
push
xor
bound
pop
bound
lea
dec
fsub
sub
xor
test
xor
les
xor
les
fdivrs
or
xchg
rclb
lea
negb
addr16
jge
in
notb
xor
mov
push
jo
inc
dec
rolb
mov
shl
mov
mov
test
xlat
add
cmp
xrelease
mov
je
adc
mov
xor
inc
dec
jne
push
pop
je
pop
scas
pusha
adc
xchg
pop
stos
int3
jg
jo
adc
mov
fists
fnsave
jne
sti
mov
lea
jge
push
loope
dec
xchg
leave
mov
ss
enter
pop
clc
push
and
push
mov
ljmp
jg
mov
or
jmp
and
sbb
ja
dec
or
mov
mov
daa
mov
push
jmp
sub
shl
mov
cld
and
out
arpl
xchg
inc
inc
add
enter
cli
add
or
pop
pushl
add
adc
jg
inc
pop
lock
adc
inc
cmp
test
mov
inc
int
lret
adc
into
and
inc
iret
seto
xchg
call
je
mov
dec
shlb
sub
in
cli
popf
rcl
fdivrl
mov
fidivrs
andb
sar
jns
adc
mov
pop
sub
dec
call
fs
fwait
ss
int3
adc
adc
sbb
or
into
nop
lret
mov
inc
mov
fdivrs
and
lcall
dec
hlt
dec
jp
imul
jg
add
test
scas
je
enter
rcrl
dec
push
dec
lods
je
ret
mov
mov
movsl
and
mov
jno
dec
and
mov
enter
sub
push
inc
sub
push
lcall
mov
push
lea
pop
dec
add
mov
lds
int3
sti
mov
ret
js
adc
jo
cmp
dec
lock
fcomip
lret
jge
dec
fistpll
jb
jle
mov
andb
and
jmp
dec
daa
or
gs
fwait
adc
mov
cwtl
test
inc
push
or
or
or
push
jmp
mov
cmp
jo
nop
mov
xor
xor
xor
mov
add
or
in
mov
sbb
xor
add
sub
dec
jns
test
lea
xchg
pop
add
or
nop
lods
jae
xchg
gs
rcrb
cmp
fdivs
xchg
cmpsb
cmp
cld
and
cmp
and
mulb
jle
pop
movsb
cld
inc
push
dec
stc
jnp
cmp
add
and
cmp
or
test
les
les
in
inc
fdiv
cltd
push
fdivs
sahf
xchg
pop
mov
sbb
pop
bound
pop
bound
adc
pop
fstpt
add
adc
jmp
xchg
push
lea
cmp
cs
inc
pop
jns
push
pushf
jo
fdivrl
mov
pop
push
mov
icebp
and
adc
adc
push
outsl
mov
aad
insb
sbb
into
mov
push
test
pop
pop
out
xchg
shlb
shrb
pop
or
test
stos
sub
loop
ja
insl
sub
call
jl
notb
clc
push
inc
adc
adc
ficoml
arpl
mov
cmp
sbb
les
jge
dec
jo
push
and
addr16
mov
movsl
xor
adc
add
jecxz
jl
inc
and
dec
push
loopne
pop
mov
bound
jnp
divl
hlt
push
pop
jl
and
mov
rorb
shr
repz
out
outsb
adc
sub
jno
add
test
adc
sbb
dec
mov
mov
sarl
stc
mov
adc
lgdtl
jmp
or
sub
insl
insl
inc
cs
inc
cltd
sti
subl
or
mov
push
or
jne
fwait
cmp
dec
sahf
popa
stc
mov
pop
lods
dec
push
ret
and
rcrl
push
lcall
mov
shlb
scas
add
test
adc
outsb
in
pop
lret
inc
sub
push
jp
xor
pop
cli
xchg
or
adc
push
daa
les
pop
xchg
dec
lahf
adc
jp
adc
pop
popl
outsl
push
push
xchg
jns
outsb
int
mov
or
movsl
xchg
dec
adc
xchg
daa
notb
ret
mov
mov
stos
mov
sarl
and
xchg
mov
mov
loopne
inc
clc
pop
shrb
sbb
cmp
mov
jp
sub
push
push
push
jne
push
and
adc
sbb
push
mov
xor
out
out
cld
adc
hlt
pop
fmull
sub
or
or
sbb
or
xchg
jmp
icebp
inc
cmpxchg
inc
cmpxchg
or
leave
inc
inc
in
clc
inc
inc
in
daa
inc
inc
in
ss
pop
push
or
mov
xor
cmp
fwait
dec
cmp
xor
jns
and
pop
cltd
adc
sub
pop
push
sub
adc
sub
xorl
les
std
subb
inc
out
add
dec
pop
dec
dec
cmpsb
jl
push
loope
add
adc
inc
aas
test
inc
sti
adc
inc
cli
adc
inc
adc
sti
adc
inc
cli
adc
inc
adc
inc
sti
adc
sti
adc
scas
les
lret
jg
es
jge
push
dec
stc
loope
or
jge
fdivr
pop
sub
adc
adc
dec
sti
cmp
inc
mov
push
pop
add
mov
ds
fstpl
out
loope
and
xor
bound
dec
adc
pop
das
dec
xchg
pop
dec
xchg
lea
and
dec
push
and
dec
mulb
ss
mulb
gs
pop
mov
adc
dec
sti
pop
cmp
jns
dec
lods
mov
dec
in
out
fdiv
adc
rcrb
pop
dec
xchg
mov
dec
test
xor
push
and
div
push
xchg
lds
sahf
jmp
inc
add
inc
loop
mov
fs
sbb
outsl
or
mov
push
adc
push
push
leave
push
sbb
in
push
and
push
pop
adc
test
and
test
push
aas
xchg
nop
dec
cmp
pop
outsb
push
fimuls
loop
lahf
int3
ret
pop
bound
push
sti
mov
and
cld
and
int3
clc
push
pop
push
sub
mov
push
cmpxchg
push
or
and
inc
push
in
xchg
in
rcll
in
std
inc
push
lods
xor
in
pop
inc
push
in
mov
mov
fbld
pinsrw
les
push
les
sub
loopne
fmul
test
jge
ds
in
je
test
and
fdivr
push
pop
pop
sub
mov
pop
cmpxchg
pop
or
xor
inc
pop
in
xchg
inc
pop
in
movb
adc
pop
sti
adc
sti
adc
pop
push
sbb
inc
pop
les
sub
lock
cmpxchg
pop
cmpxchg
or
sub
push
adc
aaa
adc
jp
or
jmp
add
repz
push
gs
repz
ja
pop
clc
lea
in
mov
inc
pop
call
pop
inc
pop
in
mov
in
mov
pop
call
and
inc
pusha
in
addl
adc
pusha
stos
sub
fdivr
and
imulb
pop
popa
xchg
jge
mov
popa
pop
bound
pop
outsl
mov
bound
xor
fdivrl
fadds
mov
pop
inc
xor
test
mov
arpl
mov
arpl
in
sub
lods
jno
dec
fdivs
mov
test
gs
xor
gs
sbb
cmp
cmpxchg
or
mov
data16
in
fdiv
adc
xchg
inc
addr16
addr16
gs
aas
fadds
mov
jp
push
in
repz
push
stos
adc
sti
adc
mov
subb
mov
dec
repnz
test
fimull
and
aam
jl
scas
call
xchg
jns
scas
jle
cmp
xadd
xlat
jb
xor
jl
scas
in
call
js
in
dec
sub
stc
sub
xorl
add
adc
jmp
cmp
add
mov
sub
mov
mov
dec
jne
sub
shl
cmp
jge
pop
push
je
cmp
sub
enter
pop
inc
cmpsl
pop
hlt
add
mov
xor
pop
pop
jnp
mov
cli
stc
es
mov
scas
dec
pushf
mov
inc
inc
cmp
inc
cmpsl
cs
lret
mov
jb
xor
mov
rcll
jg
xor
stos
add
in
mov
or
add
test
je
add
pop
cmp
jl
mov
popl
ficoms
fsts
orl
xor
cltd
or
addb
pop
pop
cmp
in
add
xor
mov
rcrl
mov
add
sub
mov
lock
add
pop
iret
and
add
xchg
or
sbb
test
test
add
fs
push
or
mov
jl
pop
bound
pop
ret
pop
bound
outsb
pop
push
sub
lock
outsl
xchg
mov
fdivrs
jno
aas
xchg
test
jbe
or
sbbl
lea
insl
dec
arpl
mov
cltd
dec
imul
fdivp
repz
test
fists
jno
adc
cli
adc
int3
cld
inc
clc
cs
jb
ja
insb
jb
loope
jb
mov
jb
mov
jb
in
inc
inc
jae
je
jae
mov
inc
jae
adc
je
adc
adc
sti
adc
je
les
les
jne
test
inc
aas
sub
fdivr
and
jbe
daa
pop
jbe
ja
and
jbe
and
ja
and
ja
mov
aad
lods
ja
xchg
fcmovnu
adc
js
ja
adc
stos
adc
sti
adc
js
les
jns
les
les
jns
mov
jp
les
les
les
jp
mov
jnp
mov
jnp
mov
jnp
in
mov
jnp
in
jnp
adc
in
inc
inc
jl
jle
fdivrl
jbe
popf
sahf
jge
pop
pop
pop
out
jge
adc
jge
adc
jle
cmp
clc
scas
inc
jle
fldl
in
or
jg
test
push
test
cmpb
pop
cmpb
xchg
cli
adc
cmp
and
sti
adc
sti
adc
cmp
and
xor
dec
add
je
xchg
adcb
xor
neg
clc
es
orl
lods
mov
inc
sub
inc
cmpl
js
sti
adc
test
adc
push
cld
push
inc
test
jg
test
scas
inc
test
adc
xchg
adc
sti
cmp
xchg
das
inc
xchg
pop
inc
xchg
sub
fdivr
and
mov
and
je
jge
push
and
fdivr
push
dec
mov
mov
inc
mov
out
mov
adc
sti
adc
mov
adc
mov
adc
sti
js
mov
sbb
xor
lcall
sbb
out
clc
jo
add
pop
or
pop
add
sbb
pop
rep
pop
in
and
add
pop
bound
pop
bound
lea
fdivrs
mov
hlt
dec
push
test
xor
adc
adc
imul
mov
sbb
or
or
les
pop
mov
add
or
aas
mov
and
nop
xchg
nop
pop
mov
pop
in
aas
mov
mov
and
and
xchg
xchg
xchg
or
xchg
lea
psrad
loop
xor
xchg
xchg
psrad
mov
out
adc
xchg
pop
les
les
adc
adc
inc
cwtl
clc
cwtl
test
mov
psrad
loop
pop
les
les
adc
daa
pop
lret
cmp
test
addb
leave
aaa
setl
aam
les
fdivl
mov
mov
stc
pop
cmp
sub
in
mov
aas
hlt
adc
pop
push
nop
je
hlt
mov
js
jae
mov
push
pushf
push
push
shlb
and
xor
sub
les
fs
outsl
in
add
jns
mov
add
sub
or
xor
jbe
push
in
lock
pop
dec
and
lea
xor
les
sti
cmpb
jg
or
popf
dec
jmp
fistpll
inc
or
xlat
fdivs
push
loopne
xbegin
insl
dec
dec
adc
and
repz
and
and
insb
push
push
adc
adc
pushl
iret
jbe
cmc
inc
test
sub
test
mov
shll
inc
dec
mov
add
push
rclb
mov
inc
in
adc
add
test
in
inc
mov
and
shrb
sbb
push
pop
mov
mov
dec
mov
adcb
cmp
fdivl
hlt
push
mov
cmp
xor
mov
fs
pop
push
sub
push
xor
jno
clc
pop
cs
xor
jae
mov
clc
xor
mov
add
shrl
mov
in
inc
inc
clc
or
sub
shr
or
aam
fistpll
inc
and
bound
jmp
or
push
movsb
out
mov
mov
add
and
jae
lea
popa
outsb
or
fs
fmull
fnstenv
jmp
jb
imulb
shll
movsl
adc
jo
adc
stc
mov
cmp
sub
stos
dec
xchg
add
dec
add
dec
dec
inc
inc
inc
dec
repnz
hlt
outsl
stos
cmpsb
out
dec
cwtl
dec
mov
fs
mov
arpl
daa
sub
scas
mov
xor
sbb
xchg
mov
gs
sub
fs
pushf
push
mov
push
insl
popa
iret
idivl
dec
push
jo
outsl
addr16
push
insl
mov
push
xor
lea
mov
adc
jne
sbb
clc
lds
or
insb
jp
push
cs
add
add
addr16
xchg
sysexit
and
mov
xorl
insl
sahf
sub
mov
push
jb
dec
imul
insl
jbe
xchg
dec
jo
fimuls
xchg
insl
arpl
jmp
inc
push
enter
jae
or
xor
dec
xchg
outsl
pop
call
sub
and
stos
inc
xchg
jge
ret
arpl
pop
stos
and
cmpsl
push
int3
fwait
hlt
jns
sub
mov
jae
ss
sbb
sbb
jae
xchg
out
stc
mov
jb
pop
js
fistps
pusha
ljmp
push
bound
addr16
or
adc
push
fnstenv
lds
divl
out
add
xor
in
cmp
bound
add
ret
andb
sub
add
mov
dec
inc
mov
or
push
push
dec
jns
es
lcall
xchg
sbb
fdivrs
in
inc
sub
or
cmp
push
dec
jle
addr16
xchg
xchg
insl
mov
ret
cmpsb
add
push
stc
pop
fldl
lahf
and
jns
cmp
pop
pop
std
aam
sub
push
xor
inc
pop
ds
imul
andl
or
cmp
jmp
mov
nop
adc
and
inc
mov
jo
js
cmc
inc
pop
add
xor
mov
test
inc
mov
dec
jg
stc
inc
and
inc
fdivrl
add
bound
jns
add
nop
adc
or
jg
cwtl
outsb
mov
and
loopne
adc
push
push
rclb
jb
push
xchg
cmc
es
ja
inc
pushf
jnp
cwtl
jp
sbb
mov
adc
cld
mov
adc
xor
push
inc
xchg
jb
movsb
jo
clc
fs
add
xorb
pop
sbb
sbbl
sub
mov
sbb
adc
add
push
xchg
jae
rclb
or
or
aam
nop
aam
flds
jne
mov
cmova
adc
xchg
mov
jne
xor
push
mov
push
xchg
mov
int
gs
inc
sbb
cmpsl
xor
addl
xor
in
faddl
xor
xchg
ljmp
jecxz
popf
inc
jne
je
bound
jns
dec
inc
and
dec
jb
pop
jp
lock
gs
sbb
lea
adc
sbb
xor
xchg
xor
mov
or
ja
mov
push
inc
lds
into
sbb
fbstp
jae
int3
push
aas
adc
and
lock
jbe
jg
jo
clc
mov
push
or
sbbb
push
mov
or
fptan
adc
or
xchg
adc
xor
notl
xor
cmp
push
push
sbb
mov
rclb
or
mov
xor
fisttpll
mov
sub
sbb
in
pop
ljmp
sbb
test
rol
xor
mov
mov
or
mov
push
jl
sbb
push
adc
dec
shrb
adc
ljmp
add
push
enter
push
sub
inc
inc
dec
push
dec
scas
mov
dec
nop
sub
lock
xchg
jo
in
jle
andl
adc
cs
pop
hlt
loopne
mov
add
adc
and
lahf
pop
add
inc
push
xchg
pop
jg
and
cmp
loop
iret
push
and
fcmove
adc
cmp
cmc
push
dec
test
mov
push
pop
pop
xchg
popf
notl
xchg
test
add
sbb
loopne
jne
lahf
icebp
mov
test
jmp
jne
and
fists
outsb
fbstp
cs
in
push
popa
in
push
push
out
aas
subb
sub
mov
dec
add
dec
frstor
fistps
jnp
movsb
xchg
dec
sbbb
jne
test
push
push
jbe
mov
or
inc
add
mov
or
pusha
lea
add
and
insl
pusha
arpl
sbb
and
sub
mov
sbb
sahf
cmp
cmp
lods
push
or
sub
mov
pop
rcrl
cmp
dec
fcoms
cmp
aam
lret
ljmp
xchg
popf
fbstp
sub
xchg
inc
lock
and
insb
adc
xor
push
in
daa
or
cmp
inc
das
call
pushf
ljmp
enter
or
test
test
les
xor
cmp
lcall
push
cmp
add
sub
scas
mov
push
mov
mov
push
add
gs
and
and
inc
insb
xchg
cs
xor
popf
push
and
add
and
cs
inc
xchg
cmp
cmpb
add
lahf
addb
call
sub
rcll
xchg
xor
inc
daa
mov
inc
sub
xchg
mov
push
movsl
cmp
lock
add
jl
cli
popa
lret
xor
lea
test
lods
xchg
push
cmp
fcoml
gs
pop
jbe
and
push
out
xchg
pop
ret
and
iret
or
sti
sbbb
adc
sub
fdivl
adc
sub
cmp
xlat
cmpsl
and
inc
inc
and
leave
jae
mov
cmp
or
mov
mov
pop
pusha
rcrl
dec
adc
int
fidivrl
imul
popf
jbe
leave
sbb
ficoml
and
leave
inc
and
or
incb
call
inc
mov
lock
dec
add
sbb
add
and
psubsw
sbb
shrl
xchg
subb
mov
cmp
pushl
xchg
mov
jg
stos
cmp
sub
push
push
xchg
ftst
xor
or
jle
pop
add
xchg
lret
inc
mov
call
and
add
mov
lock
adc
adc
repnz
push
out
cld
mov
add
mov
xlat
xchg
or
call
ja
sbb
jbe
push
mov
mov
mov
xchg
repnz
inc
pop
daa
ret
nop
stos
mov
dec
into
in
dec
inc
fldt
xor
and
movsb
add
push
sub
enter
push
in
bound
dec
dec
jbe
mov
sub
cmp
add
test
je
lcall
jne
fistps
aad
and
push
imul
movsl
mov
mov
jns
stc
mov
ficoms
shlb
daa
hlt
jge
push
test
or
push
add
gs
inc
das
adc
inc
mov
ja
js
sarb
cwtl
dec
sub
add
fsubs
das
and
sbb
mov
lea
int
nop
mov
daa
rcrl
add
mov
fcomps
xchg
mov
inc
test
xchg
add
mov
in
mov
int3
adc
or
addl
cmp
ret
popf
pushl
cmp
je
loope
sbb
push
adc
leave
jmp
sbbb
mov
sbb
int
stos
xor
mov
sbb
sub
pop
nop
adc
sub
je
push
out
test
daa
and
lret
push
in
xchg
add
cmp
mov
or
cli
out
mov
sub
jno
push
dec
sbb
add
sub
out
and
test
adc
xor
lods
pop
jg
or
add
dec
adc
push
push
push
xchg
adc
fsubs
iret
lock
mov
jle
imul
jae
ja
popf
xchg
mov
fnstenv
cwtl
fidivs
xor
xor
cmp
arpl
dec
pusha
xchg
cmpsl
dec
js
or
push
xchg
and
rolb
in
dec
fsubrs
and
inc
adc
push
inc
sbb
xchg
adc
mov
sbb
dec
lahf
imul
repz
shlb
push
je
es
jg
dec
loope
sub
test
adc
addb
adc
addl
cmpb
adc
jnp
jl
pop
popf
fisubs
popa
and
adc
into
cld
movsl
test
cmp
test
inc
je
xlat
cpuid
mov
dec
sbb
pop
jge
push
std
fimull
sbb
cmp
and
and
cmp
aaa
add
lods
xchg
movsb
repz
pop
push
jge
xchg
adc
xlat
cmpsl
mov
lock
and
nop
adc
in
hlt
pop
loopne
jle
jl
stc
int3
inc
ret
mov
mov
push
test
cli
mov
mov
fsubs
push
push
or
inc
aaa
sti
addb
or
and
jmp
out
setle
dec
pop
pop
mov
mov
int3
cmp
cmpsl
sarl
or
sub
fisubrl
gs
test
xchg
mov
xor
imulb
jecxz
aam
add
add
bound
xor
push
and
mov
mov
les
dec
inc
adc
push
cmp
or
lretw
hlt
and
xchg
leave
in
or
xchg
inc
add
aaa
xchg
sbb
fcomi
jp
adc
xchg
xor
fcomp
xchg
test
cld
xchg
test
xor
imul
dec
jae
nop
xchg
loop
ss
xchg
mov
test
out
repz
dec
adc
subl
xor
xor
nop
pop
cmp
movl
or
loopne
pslld
movsb
or
or
inc
lea
adc
or
or
add
inc
pop
cmp
cs
sbb
inc
dec
sbb
sbb
inc
ja
icebp
fcmove
es
js
jmp
adc
or
ret
add
lds
jne
and
shrl
les
sub
loope
jmp
add
lcall
push
cmpl
mov
or
cmp
push
cmp
mov
out
enter
adc
stos
rcll
add
mov
mov
cmp
ja
sub
xchg
jne
xor
xor
loop
mov
cmpl
push
in
xor
inc
push
jo
xchg
dec
mov
sub
test
scas
cmp
inc
xchg
xchg
sbb
dec
cmp
clc
dec
xor
mov
dec
dec
shlb
sbb
jbe
push
push
adc
sbb
push
and
cld
xchg
fdivrp
cld
inc
cwtl
xor
cmp
dec
push
fmulp
and
cmp
push
sub
mov
xchg
in
test
cld
sbb
mov
xchg
mov
mov
inc
push
adcb
shll
adc
test
gs
adc
adc
and
sub
inc
mov
mov
pop
scas
arpl
int3
insl
arpl
stos
adc
and
stos
push
xorl
stos
dec
lahf
outsb
push
das
lods
ret
mov
in
or
xor
sub
push
inc
mov
and
test
aad
das
lds
lret
sub
dec
je
mov
ficoms
shlb
xor
and
sbb
inc
sub
mov
lahf
adc
addb
inc
imul
inc
xor
xchg
inc
ficoml
arpl
sbb
test
insb
inc
out
test
insl
cmc
data16
nop
adc
adc
push
repz
jle
pop
inc
stc
adc
or
cmp
sub
inc
add
out
rcll
add
mov
or
jmp
outsl
decl
jns
jge
sub
mov
icebp
pop
push
dec
sub
sbbl
sbb
inc
adc
or
pop
mov
rorl
dec
in
sub
pop
popa
sbb
int
push
cwtl
mov
and
loopne
mov
repz
scas
sub
lds
adc
push
incb
jbe
addl
ja
mov
stos
hlt
sbbb
xchg
hlt
or
in
nop
push
dec
sti
je
in
aas
pop
imull
xor
jmp
icebp
xor
push
lods
insb
lods
mov
xor
sub
mov
movsb
lret
inc
adc
fsts
or
cmp
push
inc
mov
or
or
push
mov
std
scas
sub
daa
fiadds
cli
stos
mov
and
cmp
mov
enter
sub
or
out
mov
cs
pop
imul
xchg
or
cmp
dec
adc
imull
or
dec
add
add
mov
movl
xor
test
loop
adc
dec
cld
pushf
and
adc
mov
push
inc
out
mov
or
sarb
xchg
js
ret
jmp
scas
xor
sub
push
dec
es
popa
inc
call
inc
or
and
jp
popf
sub
mov
in
and
test
jbe
andl
in
dec
lock
cmp
dec
bound
jmp
test
xor
push
iret
in
push
jne
stc
popf
or
jmp
mov
xor
mov
sqrtps
ds
xlat
xor
int3
lea
adc
lods
push
sbb
popa
lahf
adc
lret
xchg
jne
je
gs
adc
dec
push
pop
mov
jmp
cs
call
xor
int3
sub
sub
lds
xchg
push
cmpb
jne
cmp
sub
insl
dec
xor
in
sub
cmp
sub
dec
pop
add
push
jo
shr
mov
jae
add
jae
xchg
insl
hlt
pop
nop
mov
jmp
das
into
and
int
int
inc
loop
jg
mov
inc
test
scas
les
ret
cwtl
aaa
push
sbb
add
ret
pop
sbb
xor
jmp
inc
inc
adc
adc
sbb
shrl
sub
cmp
pop
adc
in
nop
fdivr
sahf
and
shlb
pop
sub
dec
cmp
adc
inc
mov
scas
and
ret
or
inc
cmp
mov
pop
or
imul
aaa
and
and
iret
jge
ficomps
cwtl
or
xor
or
adc
gs
dec
es
pop
add
mov
gs
mov
test
adc
dec
dec
jl
jno
sbb
push
add
jp
jb
pop
jbe
outsb
dec
inc
inc
test
aam
pushf
push
adc
and
and
adcb
repnz
sub
iret
imul
jmp
lea
mov
inc
mov
add
cmp
ja
dec
jg
adc
out
aad
pop
lret
gs
loop
xchg
push
test
pop
scas
cmp
add
bound
iret
arpl
ret
xchg
imul
test
shll
mov
or
xor
jge
stc
cli
inc
sub
cmp
push
loop
cmc
cmp
repnz
jb
xor
js
sbb
mov
jle
mov
fs
pop
pop
jne
pop
sub
jae
mov
in
xor
and
cmp
cmp
xorl
push
rcrb
and
or
adc
es
mov
in
cmp
dec
mov
daa
pop
sbbl
push
pop
dec
sahf
pop
pop
inc
push
adc
sti
or
call
or
sahf
mov
dec
lret
jns
push
and
imul
push
lea
int3
lods
xchg
cmpsl
jbe
cpuid
jbe
xor
cmc
pop
inc
jle
push
mov
jmp
sar
stos
pop
out
push
mov
xlat
push
sub
je
cli
sbb
and
cltd
add
lret
rorl
shlb
in
adc
fstpl
stos
add
push
inc
xor
jbe
and
inc
loop
xchg
cs
cmp
sub
lea
lock
cmp
or
jae
and
adc
push
orb
mov
or
popa
xor
add
adc
adc
sub
and
inc
fs
push
dec
or
call
mov
jmp
addb
and
mov
and
addb
clc
xor
leave
push
adc
pop
fiaddl
or
mov
mov
xchg
dec
or
aad
mov
pop
test
lea
rcrl
push
ret
out
andl
or
dec
push
adc
int3
adc
mov
rolb
scas
xor
gs
and
sbb
adc
xor
in
mov
insb
jne
loope
sub
rclb
fsubrs
fcmovnb
mov
mov
jp
jle
fs
dec
test
pusha
xor
shrl
out
xchg
std
mov
add
out
icebp
mov
or
sub
push
cwtl
ret
mov
adc
xor
and
int
or
mov
or
or
jmp
hlt
cmpl
mov
mov
xchg
das
push
xor
jne
jge
dec
movsl
shl
movsb
push
xlat
and
ss
jle
imul
xor
cmpl
mov
xor
out
and
clc
jl
sbb
sti
push
adc
pop
popa
push
sbb
cvtpi2ps
jne
mov
jmp
pop
cmp
seta
xor
jne
mov
and
and
mov
lock
sub
and
and
es
inc
jmp
lock
push
sbb
sbb
jmp
pop
sbb
sbb
push
repnz
pop
sbb
shrb
jne
out
jo
test
and
stos
or
and
mov
les
dec
xor
add
popf
push
mov
add
or
mov
jl
fadd
sbb
fcomps
jne
mov
push
pop
jae
enter
push
or
xor
jmp
stos
int3
insb
mov
jo
iret
jmp
mov
adc
fstpl
je
shl
jmp
add
adc
mov
push
movzbl
insb
ret
fcomps
decl
add
cld
jmp
arpl
out
mov
mov
mov
push
shlb
pop
push
lea
out
sub
xchg
test
insl
add
testb
jl
mov
fcomp
aam
popa
jae
ret
arpl
jmp
fs
insb
or
jne
nop
ret
nop
shrl
cmp
xor
xchg
movl
stc
sub
dec
xor
add
xchg
sbb
push
sub
in
xchg
push
mov
adc
movsb
rorl
push
scas
or
inc
add
mulb
push
push
xor
mov
and
or
cmc
push
pushf
adc
cwtl
insl
mov
dec
les
pop
jg
xor
push
jmp
dec
adc
dec
sub
into
lahf
push
pop
andl
data16
fdivs
shr
push
scas
push
out
lods
push
lods
mov
and
stos
fnstcw
sub
sar
fwait
jmp
cld
push
inc
sub
cmp
adcb
push
movb
std
jae
xor
roll
add
lea
dec
je
nop
jno
rclb
movsl
lock
cmp
jae
adc
in
push
xlat
shl
push
add
je
xor
jnp
popa
pop
push
jne
pop
cmpsb
mov
push
mov
adcl
sahf
push
ss
lods
into
mov
add
jle
lea
mov
int3
or
and
leave
add
inc
mov
popf
xor
push
xchg
cwtl
cltd
cmp
jg
adc
xchg
add
shrd
out
add
jno
movsl
les
inc
jge
out
nop
jl
mov
xchg
outsb
jecxz
sub
clc
sarb
xlat
loop
sub
aad
ret
jecxz
push
fsubr
insb
sub
jecxz
push
push
pop
sub
jnp
and
jl
or
pop
pop
inc
sbb
xchg
lret
jmp
test
xchg
or
inc
push
insb
pop
mov
daa
add
dec
or
sbb
rclb
mov
addb
sbb
clc
pop
lret
lcall
das
sub
or
daa
test
ret
mov
je
mov
jg
jmp
pop
jmp
push
inc
lahf
test
add
mov
add
stc
xor
cmp
sub
mov
pop
mov
inc
cmp
jle
or
outsl
sub
pmulhuw
nop
das
movsb
data16
test
cmp
jae
xchg
shl
cmp
mov
call
fisubrs
sub
loop
cmp
pop
xchg
mov
mov
imul
xchg
sbb
inc
cwtl
cmc
and
fdivs
or
dec
je
dec
cwtl
loopne
mov
in
repz
cwtl
adc
lahf
jne
orb
rorb
paddq
inc
sbb
js
stos
cmc
sbb
xchg
movsl
jae
sub
sbb
sub
inc
cwtl
jnp
cmp
aam
xor
sbb
filds
sbb
cmp
jae
mov
fmulp
pop
fwait
loope
dec
rorb
and
cmp
pop
lds
push
jl
sub
mov
mov
jo
sub
fnstcw
mov
mov
push
jbe
jo
popa
sub
push
fs
aas
dec
jne
mov
sub
imul
sub
ret
sbbl
jl
jmp
fistps
fwait
adc
fildl
in
push
pop
and
test
mull
sbb
fidivrl
xchg
ret
loop
lock
sub
les
sub
add
cmp
je
mov
and
jmp
loopne
pop
push
or
repnz
out
mov
gs
jns
xlat
xchg
pop
and
rorl
and
icebp
fidivl
jmp
cli
imul
push
sbb
mull
push
ss
push
add
movlps
dec
mov
fsubp
test
push
rorb
sub
sbb
call
add
mov
push
mov
mov
xor
jecxz
mov
popa
shlb
jmp
test
add
cmc
shrb
or
orb
mov
pop
shr
mov
mov
mov
jge
adc
jb
dec
rorl
fs
sbb
dec
call
rol
dec
and
mov
inc
decl
pop
pop
pop
sub
jnp
lock
lret
xchg
cmp
jo
dec
ret
mov
jp
dec
test
or
pop
push
int3
test
adcl
jne
push
push
rorl
sub
aad
inc
pushf
inc
adc
cmp
jne
or
adc
push
pop
xchg
adc
jg
andb
int3
dec
dec
int
dec
pop
jl
add
cmp
jbe
dec
pushf
sarb
cwtl
and
sbb
add
aam
mov
aaa
xorl
mov
imul
hlt
movsl
sub
sub
lods
dec
adc
or
pop
in
cmp
jbe
shr
sbb
jmp
lahf
dec
mov
cmpl
outsl
enter
call
test
mov
aad
mov
inc
addr16
jbe
loop
inc
lahf
pop
test
repz
jne
pop
and
add
dec
in
psubusw
jge
mov
jp
push
xor
push
jbe
addr16
dec
orl
dec
dec
or
inc
jge
call
mov
test
iret
sti
test
nop
lcall
mov
pusha
clc
add
xchg
xchg
pop
xchg
dec
aaa
into
jecxz
xor
adc
popa
imul
rcll
inc
ss
lea
mov
mov
dec
lcall
or
xor
mov
dec
lock
jmp
push
cld
mov
pop
adc
push
xlat
enter
dec
ret
and
into
inc
and
add
sub
loop
or
push
mov
sub
sub
orl
adc
xchg
mov
xchg
mov
popa
push
call
loopne
cltd
shll
mov
xchg
dec
and
outsb
cwtl
int3
or
ret
call
and
test
inc
dec
and
pop
es
int3
out
mov
add
inc
les
cmp
pop
cmp
xchg
and
jno
pop
jecxz
push
xchg
fs
adc
fcompl
loopne
dec
mov
adc
pop
frstor
mov
movsl
pop
pop
inc
jne
fsts
gs
and
movsb
test
enter
sete
out
inc
adc
enter
das
sahf
xchg
inc
les
mov
pop
cmp
mov
inc
or
loopne
cmpsl
jle
ja
push
pop
rclb
cmp
dec
mov
inc
inc
imul
cmp
gs
jg
lahf
dec
popa
xchg
xor
mov
cli
scas
dec
and
pop
ror
call
dec
int3
gs
loop
das
flds
pop
shr
xchg
push
xchg
push
push
imul
mov
cld
ljmp
cmpsb
inc
stos
sub
test
push
mov
dec
sti
pushf
pop
sub
clc
insl
dec
dec
lods
and
mov
pop
xor
mov
add
add
xor
sarl
dec
or
pop
dec
jo
std
stos
pop
pop
dec
insb
or
inc
jne
push
sbb
push
pop
pop
jp
or
dec
adc
dec
add
mov
or
add
das
lret
ljmp
push
ret
les
push
lds
push
jnp
stc
mov
push
sbb
sbb
dec
movsl
jle
push
movsl
sub
push
xor
iret
dec
jne
dec
repz
push
or
cld
call
sub
add
sub
jb
popf
or
push
xor
jo
xor
push
add
ljmp
adc
and
mov
jmp
test
daa
xchg
xor
inc
add
sub
and
inc
add
and
inc
pop
jne
or
mov
push
aad
mov
or
test
add
inc
loopne
out
sahf
add
xchg
sahf
fdivrs
jbe
adc
jnp
xor
sub
jle
mov
cmp
rorb
fwait
inc
aam
popf
nop
movsb
or
cs
cmp
loopne
push
mov
jne
cmp
and
divb
push
jbe
push
pop
sbb
mov
adc
lock
popa
popf
pop
arpl
cmp
aad
dec
or
hlt
sub
mov
lods
shl
push
ret
sub
cmp
inc
or
adc
and
call
adc
mov
add
movsl
add
imul
add
shll
clc
in
mov
add
incb
sub
hlt
inc
dec
jmp
push
call
push
and
push
mov
shrl
mov
sahf
decl
pop
dec
in
daa
clc
je
xor
push
inc
mov
test
fsubrs
js
jns
ljmp
lock
jae
ror
es
mov
nop
push
mov
and
subl
adc
mov
in
mov
enter
fsubr
jnp
les
mov
jno
ret
imul
sbb
adc
jle
adc
push
gs
lock
idivl
sbb
or
ja
mov
add
jae
mov
pop
mov
xor
inc
xor
cmp
in
ds
dec
ljmp
and
inc
mov
cmp
icebp
ljmp
sub
mov
or
inc
in
leave
divb
call
lret
fwait
outsl
push
movsb
iret
cwtl
jge
jmp
jne
jb
mov
xchg
loopw
dec
mov
mov
dec
in
cld
lahf
sbb
lret
pop
xor
mov
das
jb
cmpb
mov
cli
xchg
movsl
add
insl
pop
mov
ja
add
mov
mov
int3
mov
lret
es
mov
jne
push
scas
daa
cmpsb
xlat
jb
bound
gs
jmp
mov
movsb
xor
xchg
and
cs
dec
imul
mov
pusha
xchg
mov
bound
cmpsl
shrl
xchg
mov
push
pop
imul
pop
ret
or
imul
faddp
and
mov
push
je
mov
sub
ret
push
add
add
cmp
lea
or
pop
mov
inc
popf
mov
xlat
pop
pop
dec
into
mov
bound
scas
xchg
in
into
push
les
inc
mov
aaa
pop
push
push
adc
push
push
cli
xchg
xor
sbb
push
inc
inc
cmp
add
cmp
or
or
cmp
fstpl
rcll
test
bound
loope
hlt
sbb
and
mov
sub
sbb
jecxz
adc
out
stos
cmpsb
push
inc
pop
xchg
in
jae
jp
rcll
pop
loopne
bound
cmpl
pop
fldpi
fisubrl
stos
and
lea
dec
les
dec
dec
xchg
jecxz
dec
or
cwtl
lahf
sub
sti
cld
jle
adc
jl
xor
xlat
mov
cmpsb
cmpsb
dec
movsb
push
aad
pop
xchg
pushf
adc
push
test
cld
scas
mov
dec
mov
mov
cld
les
into
sbb
xchg
lods
test
and
inc
sbb
xchg
int3
add
jmp
cwtl
and
repnz
push
dec
xor
js
sbb
xor
sbb
xor
in
sbb
sub
or
dec
mov
movsl
movups
rorb
push
jo
cmp
xor
xor
loopne
add
add
mov
mov
je
mov
imul
lock
push
bound
jne
mov
inc
outsl
insb
fs
xchg
sub
mov
fs
xchg
inc
jmp
ret
push
pusha
push
lret
add
stos
js
aam
pusha
sub
push
rorb
mov
or
arpl
or
adc
mov
insb
es
orb
dec
mov
push
cmp
xor
or
stc
dec
imull
or
xor
sbb
lock
or
jno
rclb
hlt
scas
call
dec
repnz
pop
xor
add
push
cmp
or
aas
sub
or
xchg
cld
jnp
loopne
test
in
jmp
dec
mov
push
and
xchg
inc
add
sbb
mov
jg
scas
in
shr
dec
and
xchg
dec
pop
shrb
je
lret
push
dec
sub
stc
or
or
hlt
cmp
xchg
jns
movsb
add
dec
push
clc
int3
mov
rclb
jmp
push
icebp
mov
push
mov
dec
add
out
mov
adc
or
bound
mov
sub
push
ds
xor
fsubrs
cmp
push
cmp
les
cmp
xorl
mov
data16
stos
xchg
sbb
ret
dec
or
pop
adc
jns
xor
sbb
je
fdiv
mov
movsb
jnp
sbb
adc
inc
push
sub
or
sub
lret
lret
test
call
and
cmp
adc
xor
imul
loope
addb
mov
push
jo
and
sbb
dec
xor
andb
xchg
test
lods
mov
movsl
mov
jns
inc
notb
sub
dec
lret
add
roll
pusha
les
inc
jp
pushf
xchg
sbb
enter
cli
cmp
sub
aam
pop
dec
fistl
mov
call
xchg
mov
movb
call
push
jl
inc
cmp
rcl
mov
cld
inc
shll
mov
sahf
inc
ja
jmp
mov
enter
and
pop
xchg
inc
push
aad
jmp
mov
mov
mov
sub
or
in
insl
sub
and
bts
sub
or
mov
jl
jns
sub
hlt
xchg
and
fisttpll
daa
add
mov
mov
adc
push
or
mov
inc
enter
mov
call
das
and
mov
push
xchg
or
xchg
pop
mov
or
imul
add
sbb
fwait
mov
cs
pushl
jne
push
or
orb
call
mov
sahf
js
or
and
decb
cld
testb
xchg
lret
daa
dec
cmp
test
pushf
cmp
and
inc
call
fnstsw
sahf
jae
push
icebp
in
gs
mov
clc
fwait
jmp
mov
aaa
adc
push
aas
xlat
je
push
enter
int
push
push
push
stos
mov
add
jbe
mov
pusha
clc
jmp
movsl
je
sbb
mov
cmp
daa
push
lea
or
push
inc
adc
repnz
mov
ljmp
xor
push
mov
clc
test
shlb
ror
pushl
int3
add
mov
xchg
call
inc
dec
jne
lock
ror
das
mov
ljmp
loope
push
inc
enter
mov
mov
mov
hlt
lahf
movsl
mov
push
push
jmp
das
inc
push
fbld
imul
addb
mov
sbb
mov
jge
add
cmp
je
mov
scas
inc
mov
out
decl
dec
hlt
jne
push
inc
das
pop
enter
out
inc
or
scas
sahf
sub
xchg
or
push
add
js
test
cmp
inc
push
incb
adc
mov
daa
push
loopne
pop
jbe
or
mov
subps
jge
mov
lock
add
ss
push
shl
outsl
or
sar
jl
lods
stos
loopne
and
push
dec
sbb
or
xchg
sti
sub
add
dec
cld
sub
push
enter
jp
cli
jle
and
std
sbb
xchg
test
out
fisubl
or
leave
push
and
call
leave
mov
loop
xchg
sti
xor
filds
xor
and
addr16
mov
or
xchg
inc
js
lret
mov
mov
lret
in
mov
jg
test
xchg
ret
add
inc
les
sub
vpmacswd
xchg
lret
ret
pop
mov
adc
dec
rclb
push
dec
sub
xor
mov
xor
add
mov
dec
mov
xchg
movups
call
lods
les
inc
inc
inc
inc
adc
and
xor
dec
int
bound
ss
xchg
add
lea
cwtl
push
and
and
lds
or
inc
dec
dec
dec
dec
dec
dec
add
push
push
push
push
inc
daa
pop
pop
dec
pop
pop
movsb
mov
pop
adc
jns
daa
daa
push
xchg
add
test
insb
hlt
decl
enter
sbb
lea
ret
mov
xchg
dec
shrb
dec
dec
mov
into
or
pushf
mull
faddl
leave
dec
sbb
and
scas
xor
push
insb
insl
outsb
outsl
jo
add
je
jbe
js
dec
jp
pop
mov
cmp
call
cmc
cwtl
loopne
and
or
das
push
inc
dec
sti
jno
and
sub
and
jo
fldt
sub
adc
jge
repz
movzbl
mov
inc
inc
dec
fsubs
es
jecxz
shll
loop
and
xor
adc
xchg
dec
nop
ret
or
xor
lret
lcall
int3
lea
xchg
and
nop
in
mov
or
jle
push
aas
dec
mov
sub
std
leave
jecxz
outsl
jl
inc
adc
popa
rolb
test
std
mov
xchg
les
shlb
call
aam
ja
movsb
mov
aas
shlb
mov
dec
std
imul
add
cmc
sub
data16
clc
jns
jecxz
frndint
dec
jbe
mov
add
sbb
pop
adc
push
inc
adc
sti
hlt
mov
outsb
jmp
push
mov
sbb
pop
jo
pusha
lock
inc
and
mov
or
jge
testl
sbb
test
adc
rcl
cmpsb
lret
or
xor
mov
adc
inc
cmp
xchg
sub
or
mov
cmpsl
mov
and
mov
call
mov
inc
shlb
gs
pop
enter
adc
jg
cmc
mov
mov
xor
xor
test
mov
lcall
leave
or
mov
in
shrl
xchg
pop
pop
dec
inc
adc
push
sub
ja
int
lret
or
mov
outsb
pop
outsb
adc
sub
jb
pop
scas
sub
jae
and
out
xchg
fisttpll
andl
test
jbe
lcall
xchg
dec
into
adc
lea
sub
call
xchg
mov
je
das
jns
test
fcoml
pop
enter
fdivl
call
mov
lock
pop
inc
sbb
cltd
loope
aam
pop
das
hlt
popa
push
repz
loope
inc
fwait
xchg
gs
push
pop
jg
cld
xor
add
push
cmpl
bound
mov
out
out
mov
pop
xor
and
push
dec
mov
push
inc
fcoml
mov
jle
das
or
and
lret
mov
enter
xor
in
imul
and
push
push
mov
cmpsl
push
in
enter
add
jnp
mov
das
bound
loopne,pn
or
lds
leave
mov
push
test
je
aad
jo
rolb
gs
shrl
cs
fbld
xchg
xchg
fsubs
add
adc
outsl
sub
xlat
sub
roll
and
push
icebp
sub
add
gs
jb
xchg
fdivrl
mov
les
sub
jno
jle
pop
mov
add
dec
cmc
lret
sbb
and
xchg
mov
sbb
add
mov
push
xor
inc
call
cmp
jae
mov
inc
push
sub
and
dec
repz
xchg
cwtd
stc
xor
or
dec
or
ja
cmpsl
cmpsl
adc
test
sub
lcall
mov
pop
scas
gs
push
jge
test
loopne
pop
and
dec
enter
mov
ret
cmp
inc
hlt
scas
leave
sbb
shll
adc
adc
stc
add
call
adc
mov
mov
and
push
dec
imulb
lods
pop
aad
lcall
cwtl
fsubl
pusha
push
leave
cmp
push
mov
sbb
push
loopne
stos
or
shlb
inc
stos
adc
push
inc
inc
leave
shlb
daa
call
or
xchg
push
cwtl
pop
dec
sub
outsb
dec
setg
imul
mov
imul
dec
add
cmpsb
jp
addr16
and
pop
fdivs
dec
mov
test
push
add
arpl
addl
jmp
xchg
sub
inc
push
sbb
mov
xor
repz
fbld
add
push
or
sti
mov
and
mov
lret
ror
int3
jl
dec
and
icebp
addr16
xchg
test
aam
adc
or
lea
xchg
loopne
push
test
add
repnz
pop
and
loopne
mov
cmpl
je
or
adc
jne
daa
add
jmp
cmpl
xchg
add
loope
jnp
xchg
adc
or
jnp
push
push
push
mov
mov
mov
movsb
and
sub
loopne
sbbl
and
flds
jge
or
xchg
adc
add
sub
ret
addr16
add
adc
or
ljmp
ficomps
adc
inc
fimull
jns
or
add
pop
adc
and
pop
mov
adc
or
inc
sub
push
cmp
bound
stos
mov
inc
mov
rolb
xchg
shrl
xchg
inc
or
sahf
xchg
lahf
pop
xor
pop
stos
sbb
movsl
mov
jae
adc
cwtl
lods
and
push
popf
shl
cli
mov
mov
call
call
add
or
push
dec
add
dec
lea
push
dec
push
gs
push
lea
rclb
fmuls
pop
cmp
xchg
lods
xor
add
mov
enter
lock
xor
repz
or
inc
enter
inc
bound
roll
aas
and
jb
stos
dec
add
jge
hlt
leave
inc
into
int3
enter
es
adc
je
xchg
jnp
hlt
push
add
inc
mov
fadds
in
dec
mov
push
hlt
in
dec
mov
fucomp
mov
dec
inc
mov
adc
sub
sahf
rcl
fcoms
inc
std
cmp
les
pop
jno
testl
or
test
lods
jl
lea
pushf
sbb
lods
dec
cmpsb
and
out
mov
lds
scas
fmuls
std
or
xchg
fs
jl
xchg
mov
mov
jl
jle
xorb
ds
test
js
je
cli
cmp
js
enter
inc
and
and
xchg
inc
or
dec
les
adc
out
adc
js
push
stc
push
fisubrs
add
xchg
flds
dec
mov
dec
sbb
adc
dec
sbb
data16
mov
xor
test
inc
data16
jl
fstpl
subb
movsb
sbb
movzwl
lahf
test
fstp
push
push
faddp
fstl
pop
loopne
pop
test
call
inc
mov
fists
sbb
mov
cs
insl
jmp
fcoms
fdivrl
adc
adc
insl
lret
push
loope
jmp
mov
xor
xor
pushf
add
pcmpgtd
mov
inc
adc
fdivp
sbb
cmpsb
push
adc
mov
dec
add
pusha
cltd
ret
cmpsb
cmp
call
push
push
dec
int
adc
pop
das
add
jmp
xchg
stos
push
repz
dec
adc
dec
cli
xchg
xor
or
or
xchg
and
inc
dec
andb
inc
fbstp
push
xchg
mov
test
adc
xchg
push
out
clc
xlat
popf
push
inc
or
jbe
push
and
les
shlb
int3
sbb
inc
push
mov
test
loop
jno
lcall
data16
inc
sub
mov
insb
adc
das
push
ja
push
add
xor
push
mov
ljmp
fdivp
cmp
push
mov
jl
lret
mov
rclb
enter
nop
int3
test
loop
int3
lea
clc
cmp
sub
mov
stc
xchg
dec
xchg
pop
pushf
sub
lods
rclb
fdivs
iret
cmp
aam
cmpsl
rclb
outsb
sub
adc
mov
call
xchg
adc
lods
popf
dec
mov
loop
stc
clc
push
dec
out
movsl
mov
in
push
mov
lods
aad
mov
inc
add
dec
xlat
mov
aad
imull
sbb
lcall
clc
adc
mov
sbb
loope
push
sbb
sub
cmp
pop
aaa
les
mov
lods
xchg
mov
inc
or
mov
sbb
ljmp
add
jb
pop
mov
adc
push
inc
pop
jmp
add
insl
in
adc
movups
adc
pop
add
call
lods
mov
and
push
daa
xor
sub
cli
out
orb
jmp
testb
imul
fnstcw
sub
std
cmp
mov
ret
sarb
lret
cmp
and
dec
out
js
clc
adc
jmp
pop
pop
inc
push
test
dec
cmp
je
addr16
push
test
mov
ret
roll
test
dec
testb
sbb
sub
pop
dec
outsb
xchg
jg
nop
inc
mov
aam
in
testb
and
mov
pop
and
dec
ja
test
xchg
inc
mov
lret
and
dec
out
cmc
adc
in
and
inc
pop
sub
and
dec
gs
jae
addl
and
dec
aad
jecxz
icebp
inc
decl
sub
cmp
dec
pop
xchg
insl
and
popf
mov
dec
aad
jecxz
hlt
and
mov
adc
pop
dec
insb
xchg
jle
nop
inc
mov
fsubs
jmp
cli
adc
out
and
sbb
sub
pusha
and
dec
adcb
mov
adc
mov
or
xchg
mov
or
xchg
xor
inc
inc
push
pop
mov
and
dec
cltd
xchg
cmpsl
and
hlt
adc
and
xor
inc
pop
mov
jg
nop
dec
pushf
xchg
test
mov
ror
fcoms
in
lock
cld
mov
repnz
push
mov
jne
orl
inc
mov
out
and
inc
adc
or
inc
pop
insb
mov
dec
rclb
or
sub
ds
dec
push
inc
mov
and
dec
in
cli
adc
cmc
and
inc
xor
mov
pop
and
dec
jp
mov
mov
fcoms
ljmp
sbb
inc
dec
mov
adc
out
add
cmp
add
enter
imul
jmp
sahf
push
jns
sbb
cmpsl
fs
insb
out
lahf
pop
arpl
inc
lea
inc
cmpsl
enter
sbb
pop
add
icebp
sub
push
adc
and
sbbl
data16
cmpsl
imul
inc
js
addr16
mov
and
add
and
rclb
adc
add
dec
sub
outsl
push
xchg
or
xchg
sbb
mov
cmp
ret
lds
cmpsl
sbb
imul
stc
mov
mov
dec
lea
cmp
xcrypt-ctr
cmpsl
sbb
outsl
mov
sti
sbb
push
fs
insb
aaa
lea
inc
jg
jmp
fstps
sbb
jecxz
aaa
insb
lea
push
out
jle
sbb
lret
sbb
jae
neg
in
les
cmp
das
lea
out
dec
and
lret
or
or
aas
sub
arpl
push
push
jns
sbb
mov
lea
clc
ljmp
cmpsl
sub
wbinvd
pop
adc
das
dec
cwtl
rcpps
xchg
jg
repnz
mov
adc
inc
dec
mov
xchg
mov
mov
sbb
arpl
daa
sub
dec
push
outsl
or
mov
test
inc
or
xor
xchg
dec
push
push
inc
ja
fwait
adc
test
or
add
pushf
sti
sub
jmp
fisttpl
ss
ja
push
cmc
sub
pop
loop
dec
rclb
push
mov
push
imulb
adc
and
cmp
movd
cli
mov
sub
cmp
and
loop
cld
sbb
dec
sbb
lret
imul
dec
or
inc
out
or
jno
mov
loop
negb
iret
enter
clc
xchg
push
js
imull
outsl
xor
pusha
mov
adc
sbb
testb
sbb
adc
xor
adc
icebp
das
negb
adc
jg
adc
sub
mov
or
dec
sbb
ds
lret
lock
nop
mov
inc
repz
dec
stos
xchg
repnz
jb
push
mov
jmp
icebp
mov
sbb
dec
aas
into
push
and
ljmp
nop
arpl
lds
sub
cmp
movsb
pop
adc
inc
fucomi
sahf
xchg
incb
mov
test
daa
sub
scas
mov
xchg
pop
push
repnz
ss
pop
cmp
daa
mov
cmpsb
adc
jmp
and
adc
jmp
sub
movsb
adc
arpl
aad
mulps
push
push
dec
das
mov
adc
in
dec
push
sub
aad
and
adc
bound
popa
mov
jae
ret
mov
bound
out
incl
or
test
pop
ret
sub
pop
xlat
push
and
push
mov
addl
cmovbe
adc
add
jmp
xchg
sub
xor
and
xchg
adc
mov
mov
loop
add
add
and
aam
aas
xor
or
inc
sub
ret
push
sub
in
push
mov
push
mov
sbb
loope
add
push
mov
aam
sahf
test
inc
or
and
push
mov
test
pop
jl
shrl
push
mov
push
lea
mov
cltd
jo
dec
and
jmp
movsb
stc
pushw
sbb
push
push
jge
ret
mov
sub
decl
xchg
push
jnp
xchg
icebp
sbb
mov
bound
dec
sarl
sahf
push
stc
ficoms
imul
pop
stos
fidivs
lret
dec
nop
notb
lea
dec
inc
push
cmp
mov
adc
in
insl
rcll
shl
xchg
ret
add
pop
nop
cld
mov
dec
je
inc
inc
andb
out
mov
jle
jnp
add
aaa
jno
xor
inc
clc
mov
aas
sbb
mov
loop
ret
mov
das
mov
movsb
and
jmp
fwait
out
add
push
add
mov
scas
ljmp
fs
and
dec
divl
mov
out
in
jns
inc
lock
and
test
pop
mov
insb
adc
push
mov
adc
nop
scas
and
movsb
imul
xor
pop
or
lcall
es
rcl
int
xchg
and
xor
or
and
enter
sub
inc
movsl
clc
sbb
or
mov
mov
pop
shrd
sub
lods
mov
mov
dec
ficoms
xor
mov
or
movsl
lret
and
hlt
xchg
adc
cld
sbb
sbb
bound
into
leave
xlat
sub
sbb
adc
imul
cmp
or
sbb
mov
pop
lds
leave
cmp
mov
cmp
or
lods
push
push
pop
mov
inc
dec
loopne
push
inc
xchg
bound
jae
cs
xchg
es
imul
dec
or
in
sub
push
mov
or
aam
cwtl
outsb
shll
je
xchg
rolb
mov
inc
aaa
notb
and
xor
leave
mov
lds
push
dec
xchg
jne
mov
shlb
dec
xchg
jmp
or
cmp
mov
adc
inc
jno
ret
mov
stc
mov
add
movsl
cmp
add
dec
lret
sub
movsl
mov
mov
xchg
jge
pop
ljmp
movsb
pop
cwtl
and
test
addb
xor
enter
dec
sub
cmpsl
sub
xchg
mov
adc
rorl
adc
rclb
inc
jle
xor
xchg
test
xchg
adc
sarl
mov
add
or
jle
mov
or
jmp
cwtl
inc
add
adc
adc
dec
cwtl
xlat
xor
popf
into
mov
add
or
mov
cmp
pop
jo
xor
rolb
cmp
insb
call
dec
inc
ja
add
jmp
orb
mov
jg
sbb
nop
push
movsl
sub
xor
jae,pt
sub
mov
bnd
push
sub
adc
pusha
adc
popa
stc
pushf
pop
and
mov
sbb
mov
test
dec
add
adc
push
nop
and
jo
xchg
pop
pop
and
stos
mov
lds
mov
mov
push
aam
jb
jge
gs
shrl
and
fcmovbe
push
push
movsb
xchg
int3
icebp
movsl
sbb
je
ja
mov
cmp
mov
cmpsb
jmp
stos
xor
push
enter
sbb
jo
jno
xchg
jae
jbe
in
outsl
and
jnp
enter
jge
jle
xchg
jg
int3
mov
subb
mov
or
mov
mov
lea
pop
imull
push
mov
ljmp
mov
pop
rclb
push
lea
shrb
cmp
loope
dec
sub
cmpsl
and
push
test
sahf
jne
ret
mov
icebp
in
dec
cwtl
mov
loop
xor
pop
and
repz
jae
mov
xchg
cmp
and
test
or
icebp
xchg
pop
pop
or
movsl
xchg
or
sub
dec
or
mov
xor
xchg
adc
mov
pop
push
mov
xor
in
cs
aam
mov
mov
mov
dec
or
xor
adc
jge
sub
mov
inc
jmp
jl,pn
mov
clc
hlt
mov
in
int3
adc
test
pushf
dec
xor
leavew
push
mov
dec
icebp
test
xchg
or
into
lock
inc
adc
inc
insb
incl
sub
sbb
call
add
add
cwtl
int3
xor
inc
xchg
loop
lahf
sarb
fs
sahf
and
add
cmp
push
adc
and
push
repnz
inc
push
out
leave
push
pop
adc
incb
mov
or
mov
add
aad
repnz
pop
dec
fidivl
stos
dec
fnstenv
les
adc
cmove
mov
jo
cmpsb
inc
mov
movsl
sub
and
xchg
stc
xchg
pop
enter
xchg
repnz
aas
xchg
xchg
cld
xchg
in
jg
cltd
stc
lcall
repnz
aas
xchg
sahf
cld
lahf
xchg
fwait
hlt
into
sbb
pop
fwait
jno
addr16
cmp
push
lret
push
fisttpl
push
shl
ljmp
and
mov
dec
fsub
test
mov
cld
movsl
push
cmp
push
and
leave
notb
fmuls
xchg
mov
sub
aas
imul
js
idivl
push
aam
rolb
mov
add
and
shrb
roll
or
dec
outsl
pop
push
dec
and
je
shrl
fs
xor
mov
dec
jne
nop
clc
add
dec
sub
push
sbb
xor
notl
inc
ficompl
call
or
and
mov
nop
scas
je
call
sub
lret
sub
loopne
enter
sar
je
call
daa
sbbb
jp
or
pop
stc
xorb
adcb
sub
sub
and
adc
frstor
sti
mov
xor
insb
test
bound
xchg
aam
push
push
cmpsl
and
shrb
fsubp
pop
inc
lock
pop
jl
add
adc
inc
mov
xor
push
sbb
sbb
pop
imul
xchg
cs
insb
sbb
inc
lahf
jo
in
cmpsl
aas
xor
xor
or
mov
bound
es
push
imul
adc
dec
mov
xchg
push
xor
or
incl
inc
or
fwait
dec
mov
outsl
popa
popf
jb
fisttpll
pop
popa
push
fidivs
dec
xor
pop
or
in
xor
or
les
add
cwtl
inc
dec
cmpsb
or
push
or
mov
jge
fimuls
mov
xor
aam
inc
es
in
adc
dec
xchg
or
adc
dec
and
dec
std
cmp
adc
sbb
ret
dec
cli
sub
dec
jbe
rcrb
adc
insl
add
jmp
cmp
inc
sbb
push
push
add
daa
add
inc
dec
push
mov
or
mov
cmpl
je
stos
cmp
arpl
or
pop
push
out
add
sbb
out
cs
inc
pop
pop
and
add
lea
xchg
mov
sbb
sbb
imul
pushf
lret
push
mov
push
fmuls
sub
cld
xchg
sarb
or
stos
fsts
xchg
add
cmp
movsb
pop
xor
mov
jno
repnz
pop
cmc
out
test
pop
or
ljmp
xchg
inc
or
scas
mov
imul
sub
cmc
mov
pop
out
pop
push
adc
mov
dec
mov
xor
jo
mov
push
adc
adc
jmp
push
adc
push
popa
mov
rcl
push
jo
movsb
repnz
sbb
adc
cmp
add
mov
xchg
addr16
loopne
sub
sub
popf
scas
adc
lret
in
push
jne
push
xchg
push
nop
mov
lock
int
stos
lret
test
jge
les
enter
mov
mov
popf
cmpl
push
add
add
sbb
xchg
inc
push
and
pop
sbbb
push
sub
pop
xchg
jne
mov
mov
fists
or
or
lret
pop
dec
mov
dec
sbb
xchg
pop
ja
aam
mov
arpl
dec
push
popf
scas
lret
sbb
mov
sub
and
popa
stos
insb
repnz
push
or
nop
cmpsl
call
nop
jno
arpl
adc
sub
adc
call
xor
adc
test
mov
dec
in
int
xchg
or
test
adc
inc
push
movsl
or
jbe
xchg
adc
push
push
cmpsb
inc
xchg
cmp
push
inc
and
clc
and
cmc
gs
push
and
call
popf
jnp
shlb
push
sub
es
xor
and
pop
xchg
mov
loope
and
adc
scas
cmpsl
mov
mov
and
inc
and
jbe
and
and
je
imul
jbe
daa
stos
and
je
imul
or
testl
and
adc
add
jl
mov
das
dec
loopne
out
sbb
mov
push
call
mov
inc
pop
sub
nop
xor
enter
mov
or
sahf
mov
adc
ljmp
loopne
ss
in
push
loopne
pusha
gs
shlb
inc
or
jb
jae
inc
je
jne
jbe
ja
js
jns
jp
jnp
inc
jl
jge
jle
jg
xchg
enter
jb
cmp
mov
and
push
jb
cmp
mov
and
push
enter
jb
cmp
mov
and
pop
enter
jb
cmp
mov
and
inc
enter
jb
cmp
mov
sbb
mov
and
dec
fsubl
in
jb
cmp
sbb
mov
and
xchg
xor
xor
cmp
sbb
mov
and
xchg
cmp
cmp
sub
adc
mov
in
or
jbe
pop
push
push
inc
outsl
insb
and
mov
sbb
movsb
push
inc
and
or
fstps
cmovne
dec
inc
jb
jo
push
fld
push
repnz
jne
imul
in
add
push
inc
ret
sbb
cwtl
arpl
mov
loopne
or
aad
shlb
sbb
adc
loopne
imul
pop
push
inc
xchg
js
or
sub
push
or
push
inc
dec
popa
insl
sbb
cmp
add
xor
insb
jae
fisubs
sub
stos
pushf
sbb
shll
data16
and
mov
dec
je
mov
or
pop
push
in
xlat
push
bound
jne
jnp
or
mov
xor
mov
dec
and
pop
insl
jo
into
and
push
fists
pop
popa
int
add
movsb
or
popw
pop
inc
jle
lds
out
push
push
cld
xchg
sar
or
outsl
adc
adc
sub
arpl
adc
aaa
je
rolb
push
push
push
xor
jns
push
or
dec
jmp
and
sub
sub
ss
and
pop
sbb
or
or
dec
and
inc
or
dec
pop
mov
adc
loopne
mov
jb
out
dec
es
and
sub
data16
dec
mov
jp
push
pushf
or
xchg
or
cmc
imul
xor
jb
dec
cmp
mov
or
cmp
sub
loopne
int3
sub
mov
sbb
or
outsl
loopne
pop
mov
cmp
xchg
in
js
push
fs
scas
push
pusha
pop
scas
adc
ret
add
sbb
cmp
xsha1
cmpsb
dec
mov
jmp
fwait
jb
adc
fiaddl
and
mov
push
cmpsl
inc
ror
sahf
xchg
add
scas
cmp
xlat
out
add
nop
js
pushf
les
sbb
sahf
adc
pop
shrb
sub
jl
mov
jne
and
out
es
adc
or
xchg
shl
push
dec
xor
sbb
rorl
pop
mov
outsb
push
inc
lods
and
sbb
sub
pop
sub
dec
subl
clc
or
sub
pushf
and
fiaddl
adc
xor
mov
out
mov
jo
mov
push
pusha
jb
mov
inc
scas
rcrl
enter
push
lock
xchg
inc
repz
sbb
push
mov
dec
jnp
sbb
dec
rclb
lods
or
xchg
mov
fs
or
loope
or
inc
loop
dec
popa
lock
xchg
add
leave
imul
aaa
cmp
aas
roll
pop
loope
and
cmp
add
push
mov
mov
lock
or
xchg
add
and
xchg
add
fmuls
dec
pop
push
bound
nop
test
ss
add
mov
inc
dec
jno
mov
mov
inc
jmp
les
mov
fcoml
fnop
adc
adc
inc
cmpsb
inc
jbe
lods
push
and
or
push
add
push
inc
popa
pushf
or
lods
or
daa
rcrl
mov
push
mov
push
add
lea
inc
inc
add
and
fs
pop
or
movsb
sub
push
mov
push
add
lods
adc
das
xor
aas
cmpb
in
push
pop
movsl
push
adc
sti
orl
pop
test
loop
mov
push
jo
sub
mov
adc
out
xchg
lret
enter
dec
dec
mull
push
mov
stos
popa
jo
orb
mov
mov
inc
jns
mov
push
mov
dec
dec
mov
add
cmp
mov
add
daa
addr16
sub
cld
push
cmpsb
push
push
adc
scas
mov
lods
fidivs
adcb
jo
in
push
xchg
mov
inc
dec
insb
or
sub
push
adc
jae
cmc
push
or
xchg
sbb
outsl
xor
and
bound
push
add
es
adc
pusha
mov
xchg
leave
xor
cmp
adc
andb
xor
or
sbb
cltd
pop
inc
movsl
mov
bound
sbb
cwtl
sub
cmp
insl
je
push
adc
mov
xchg
in
sub
or
and
enter
and
push
loop
pusha
inc
sub
mov
pop
adc
rolb
sbb
and
inc
fsubr
jecxz
bound
xchg
cmp
jp
int3
add
cltd
iret
enter
mov
mov
daa
es
push
test
add
xor
cmp
test
push
jecxz
xor
cwtl
or
xor
or
add
push
mov
mov
xchg
add
cld
xor
pop
or
icebp
imul
js
pop
adc
xchg
dec
sbb
adc
xor
inc
or
cmc
or
mov
test
stc
xchg
xchg
test
je
fnstcw
and
enter
pop
sub
pop
mov
gs
pop
lds
bound
push
adc
enter
imulb
mov
jmp
xchg
or
mov
je
xchg
rolb
jl
cltd
rorb
sbbb
or
or
pushf
jle
fs
dec
pusha
sbb
test
sub
or
imul
mov
mov
inc
mov
scas
cmp
mov
sarb
mov
cmp
inc
js
xchg
xchg
aam
or
ret
add
ret
add
sahf
add
add
repnz
add
add
mov
add
sbb
pushf
imul
mov
mov
or
push
nop
insb
and
aaa
dec
cld
cwtl
sub
js
subl
fadds
adc
mov
js
lods
xchg
jl
test
movsb
enter
nop
lods
dec
jae
and
dec
arpl
xor
les
movsl
inc
icebp
stos
push
adc
xor
add
sbbl
rclb
test
pop
or
pop
mov
add
add
push
mov
ret
nop
inc
cmp
dec
sub
pop
and
scas
xor
pop
jae
mov
dec
int3
rcll
xor
rol
xor
inc
dec
jne
idiv
cmp
add
dec
and
mov
push
mov
pop
daa
call
enter
or
dec
pop
or
mov
and
xchg
and
fistpl
in
rorl
cmp
push
inc
add
clc
jmp
or
jmp
cmp
adc
ret
add
mov
jne
inc
iret
shlb
les
daa
jne
push
inc
and
mov
fs
stos
push
or
pop
or
or
xchg
sub
pop
lret
daa
fnstsw
and
incw
mov
sub
aas
mov
fmull
xchg
push
dec
test
add
cmp
xor
lret
sbb
mov
mov
xchg
lock
cmpb
sub
cmovg
popf
ret
cmp
push
leave
push
xchg
les
cs
dec
sbb
mov
xor
mov
in
sarb
lock
sub
cmp
jnp
ja
hlt
xchg
fbstp
scas
mov
test
je
nop
sub
mov
call
xlat
push
push
ret
cs
lahf
pcmpeqb
xchg
test
xchg
daa
das
repz
jne
dec
cmp
popa
pop
lret
sbb
inc
and
push
rorl
int
imul
mov
addr16
sarb
pop
add
xor
pushf
loop
xchg
inc
and
adc
jge
cs
enter
mov
inc
sub
outsl
nop
ret
movsb
push
insl
insl
addb
xor
cld
daa
jge
lods
gs
push
xchg
jl
push
popl
cwtl
decl
push
aaa
xchg
mov
cmp
jg
mov
xlat
jp
push
cmp
push
mov
insb
cmp
rolb
push
adc
pop
push
xlat
repz
pop
dec
lods
add
in
test
ja
jo
rolb
add
xchg
arpl
loope
mov
inc
jb
mov
movsb
and
enter
outsb
adc
dec
inc
imul
jg
jo
movsl
inc
xchg
push
push
mov
inc
push
add
push
gs
movsl
cmp
xchg
test
xor
push
imul
adc
inc
dec
adc
insl
gs
pop
idivl
and
inc
shlb
and
or
call
push
pusha
inc
jno
popa
lods
loopne
les
adc
dec
mov
pushf
sub
imul
dec
cmp
inc
dec
popa
insl
dec
and
dec
mov
fldt
out
xchg
xor
inc
outsl
jb
or
sbb
xchg
mov
arpl
imul
fisubl
stos
add
fs
cwtl
add
outsb
inc
popa
mov
xchg
push
and
sbb
dec
fs
push
inc
xchg
push
lahf
js
inc
enter
ljmp
lret
pop
mov
adc
rorl
sbb
jns
iret
lds
test
jns
mov
cmpsl
shll
mov
pop
dec
outsl
cld
dec
cmpsl
in
adc
dec
jp
sbb
adc
sbb
push
add
or
pop
outsw
inc
imul
fimull
aaa
or
outsb
jne
sbb
dec
and
push
mov
add
adc
call
push
icebp
dec
xor
push
jae
or
and
xor
loope
ss
cmp
push
sub
sub
sub
or
cmpsl
adc
or
les
push
call
push
mov
fmuls
mov
push
adc
adc
dec
shrb
nop
or
or
push
add
jnp
stos
adc
inc
dec
pop
push
dec
pop
sbb
inc
push
adc
inc
adc
shrl
cld
lock
dec
adc
dec
dec
xor
inc
sub
adc
dec
aas
dec
inc
cmp
movsl
pusha
int3
and
xor
xor
mov
lret
xor
js
inc
sbb
xor
jecxz
adc
dec
dec
addr16
and
bound
mov
lds
push
jl
push
push
push
dec
xchg
dec
movsl
fsubrl
mov
fs
fs
sbb
inc
sub
adc
adc
pusha
lahf
push
in
sub
cmpsl
pusha
xchg
or
shlb
sub
cld
inc
and
push
or
push
dec
push
pop
pop
pop
pop
dec
push
dec
mov
adc
rcrb
mov
inc
cmp
sti
mov
addl
dec
sub
push
call
inc
jl
mov
xor
adc
dec
cmp
add
adc
jne
or
xchg
adc
invd
mov
mov
into
push
cmp
push
mov
or
or
mov
dec
sbb
xchg
rorb
or
inc
or
add
or
out
out
pop
jl
xor
shlb
mov
sbb
mov
xor
mov
pop
sbb
dec
pop
icebp
dec
into
pop
aam
inc
test
cs
lahf
push
pop
scas
and
xor
ret
mov
in
das
scas
push
addr16
pusha
pop
mov
adc
mov
jns
cmp
lods
lahf
jle
ret
rcrl
jl
lods
jle
adc
jno
push
or
das
ds
push
sbb
outsl
cmp
pop
lds
cmp
je
xchg
cmp
push
rcrb
dec
cmp
inc
cmp
or
ss
adc
inc
cmp
jg
jo
sahf
cwtl
lret
pusha
pop
inc
adc
lea
dec
cli
sbb
orb
stos
sub
rcll
imul
jae
jbe
test
dec
lods
push
cmp
push
sbb
or
add
mov
pop
cmpl
adc
nop
jle
adc
jne
pushl
jg
cmp
push
xlat
adc
rcrb
enter
xor
add
add
lret
loope
jmp
adc
sbb
setne
or
les
xor
daa
mov
sbb
cmp
lea
sbb
lret
ss
adc
and
sbb
ds
push
xchg
fdivl
sbb
pushf
cmp
loope
xchg
or
xor
cs
sub
or
or
or
or
add
xor
push
xor
or
jle
lock
xchg
and
sbb
pop
out
and
stos
stos
stos
xchg
adc
mov
insb
fdivrl
dec
push
cmpsl
daa
aam
lcall
mov
push
mov
dec
sub
lods
xor
nop
dec
sub
inc
pop
inc
mov
sub
dec
scas
cltd
js
lret
or
adcb
cmp
dec
pop
or
into
in
and
mov
mov
cltd
insb
sub
sub
mov
fsubrl
aaa
and
cmc
fsubs
jmp
lods
loopne
ss
and
pop
jo
neg
push
push
adc
mov
lret
push
add
mov
gs
jmp
lahf
mov
cld
push
or
xor
mov
imul
xchg
inc
test
or
movsb
dec
push
lcall
dec
sub
mov
cmp
pop
ljmp
and
xchg
sbb
xor
test
jns
pop
adc
dec
clc
mov
push
mov
sbb
icebp
rorl
lock
call
loope
cmp
in
and
les
sub
push
dec
stc
data16
lock
jmp
xchg
stos
repnz
cmc
iretw
in
jne
loopne
loopne
push
test
cmp
movzbl
inc
sbb
mov
adc
shr
sbb
push
mov
scas
lret
clc
lea
and
cmp
inc
dec
or
xchg
lods
mov
cltd
cwtl
xchg
sbb
movsb
lret
jmp
enter
fiaddl
inc
sbb
add
jl
lcall
in
and
cltd
enter
mov
js
or
jl
jae
in
sub
les
fstpt
popf
lods
nop
cltd
mov
dec
stos
fs
lret
mov
cmp
outsb
dec
dec
jl
daa
mov
mov
subb
inc
mov
mov
lock
mov
or
xlat
or
fidivrl
in
inc
lock
cmovle
dec
lock
add
jbe
jb
lock
jnp
jno
push
xor
sub
sti
dec
cmc
insb
sbb
popf
dec
pop
ret
fnstsw
rolb
add
or
adc
lock
fldenv
adc
adc
or
int3
dec
clc
xor
lock
dec
cmp
call
mov
pop
sbb
cmp
or
aas
mov
add
sbb
int3
out
pop
clc
ljmp
cmp
outsl
icebp
imul
cmp
adc
ja
aaa
jle
movl
and
jmp
pop
cmp
and
inc
bound
fmuls
jge
and
jecxz
and
sub
dec
xlat
int3
iret
mov
push
jmp
dec
cmp
xchg
sub
rorl
dec
add
inc
shrl
or
xchg
inc
push
loop
mov
aam
inc
cld
int3
jne
pop
or
adc
inc
sub
xor
xor
push
push
adcl
jae
negl
or
or
imul
push
outsb
push
ss
iret
xchg
push
sub
push
pop
inc
push
test
sbb
lret
aam
xor
test
test
mov
jne
ja
enter
mov
adc
or
or
ret
dec
adc
sub
add
dec
push
push
ret
sub
enter
mov
inc
add
in
jmp
adc
scas
mov
lods
cmp
mov
lea
jae
cmp
mov
int
movsl
cmp
pop
imul
rcl
push
cmp
aaa
dec
xor
jo
or
fs
mov
dec
or
mov
and
cmpsl
je
ljmp
push
popf
and
push
loope
push
or
xlat
push
imul
ret
pushf
mov
insb
xchg
mov
dec
in
cmp
xchg
mov
add
bound
or
hlt
cli
cltd
fwait
loop
lcall
dec
mov
out
in
lahf
fdivr
lea
out
lods
or
vcomiss
inc
shlb
cmp
stos
jmp
or
pop
cmp
pop
out
pop
divl
in
divl
sbb
sbb
mov
sub
popa
ljmp
mov
xchg
dec
push
mov
ss
sub
mov
mov
and
push
push
dec
lock
insb
pop
mov
or
mov
cmpsl
ja
or
jns
and
pop
pop
pop
insl
and
push
xor
pushf
sub
xchg
ret
jl
add
add
and
cmpsb
add
inc
jae
xor
dec
xor
and
inc
or
je
mov
ret
jb
jl
imul
paddb
cmp
push
push
outsb
and
add
pop
cmp
lock
subb
fucomi
enter
cltd
xor
xchg
push
sbb
nop
movsl
andb
xchg
adc
dec
lock
inc
sahf
lea
enter
pop
in
hlt
jecxz
jl
pop
or
shll
sbb
mov
cmp
je
std
dec
jb
fcoms
pop
jne
in
or
mov
add
test
je
pop
adc
xor
sbb
or
inc
dec
or
mov
inc
leave
ja
inc
lahf
mov
inc
sub
sub
sub
add
cmpl
inc
pop
movsl
sbb
adc
aas
lds
loopne
sbb
movsl
xor
in
movl
movsl
ds
dec
movsb
adc
lock
fwait
mov
movsb
shrl
add
div
adc
adc
sub
inc
inc
add
sti
mov
mull
mov
push
adc
inc
cmp
sbb
and
mov
scas
lea
dec
ret
repnz
loop
xchg
or
movsb
cs
dec
fisubs
inc
pop
sub
sub
push
rorb
inc
xchg
pop
sbb
cld
mov
pushf
cwtl
test
popa
cmp
or
jnp
mov
clc
inc
imul
adc
pop
pusha
sbb
add
dec
adc
xlat
mov
pop
enter
lea
lods
ds
call
push
pushf
push
cmp
add
add
inc
in
xorl
test
bound
rclb
mov
xchg
fld
in
add
adc
loopne
add
mov
cld
decl
in
inc
cmpsb
pop
adc
jbe
adc
stc
fcmovbe
xchg
imul
add
xor
sbb
jmp
fwait
xchg
pusha
test
sarb
sub
dec
inc
adc
push
adc
cmp
fstps
gs
cmpsl
shll
fldenv
rorb
js
data16
pop
mov
push
push
aam
rolb
or
dec
js
adc
mov
or
shll
sbb
push
dec
ljmp
in
ficoml
imul
xor
mov
dec
je
rcll
add
push
mov
enter
aaa
ret
sahf
xor
cmp
rcrl
mov
lret
in
loopne
pop
add
movb
clc
sub
cmpl
jne
pop
sub
inc
test
jne
and
addr16
push
inc
dec
add
lods
xor
out
adc
sub
pop
inc
inc
and
sbb
sub
loope
push
cmp
sbb
and
sub
clc
movsb
insb
add
call
jae
mov
xchg
jnp
sbb
mov
pop
jb
lock
mov
or
mov
fidivs
sub
adc
sbb
xchg
adc
push
movsb
adc
jmp
mov
cmpsl
push
stos
or
pop
xor
xchg
lret
imul
sub
add
pop
and
push
test
inc
pop
in
test
xor
hlt
out
lds
insl
pop
and
dec
fs
or
push
sub
imul
neg
les
lds
rclb
das
movsb
sbbb
movsb
pop
arpl
push
insl
cmpsb
adc
fcomp
mov
sub
adc
mov
add
cwtl
or
push
push
mov
pop
add
pop
ds
or
rorl
repnz
rcll
stos
repnz
rcll
xchg
xchg
in
push
mov
aas
add
test
jle
out
mov
dec
sbb
pushf
mov
adc
movb
mov
mov
addb
fistpll
and
jge
sub
mov
pop
push
jae
test
push
ljmp
and
call
aam
das
xchg
lea
or
pop
jno
cmp
push
or
cmp
outsb
mov
pop
enter
fisttpl
add
bnd
cmp
mov
xchg
jecxz
sub
ret
mov
in
sub
adc
movw
cli
adc
adc
cmc
and
xlat
sti
and
dec
and
ret
sub
inc
adc
mov
pop
or
pop
cmpl
pop
jl
stc
or
ret
add
popa
and
mov
jg
test
loopne
inc
pop
sub
push
scas
inc
enter
xor
push
push
xor
fsubl
loope
xchg
sub
mov
loop
fwait
stc
sub
rcrl
fdivs
and
call
lahf
mov
add
out
pop
std
roll
add
xor
das
lea
stc
imul
push
mov
inc
mov
inc
and
jb
or
add
sub
push
icebp
out
sub
les
mulb
stos
xor
je
cmp
arpl
clc
dec
fmuls
cmp
sub
add
and
sbb
adc
sub
ret
cmp
loope
out
or
in
sub
mov
lea
inc
les
add
ficoml
dec
les
xchg
dec
dec
xchg
sbb
js
mov
mov
jecxz
dec
jmp
ret
ss
push
push
mov
xor
shlb
inc
xor
cmp
jge
xchg
inc
push
and
sbb
pop
pushf
adc
bound
test
jne
mov
lods
lds
cld
cmc
rorl
lds
imull
sbb
cmp
push
inc
add
jb
inc
adc
fsubl
or
jge
sbb
pop
sbb
loop
retw
and
mov
inc
shll
bound
lock
mov
les
bound
pop
xchg
mov
sub
mov
sub
sub
push
rcl
lock
xchg
adc
aad
sbb
rcl
ja
cmp
and
cld
push
dec
mov
xchg
mov
add
mov
in
xor
gs
rorl
inc
test
cmp
inc
adc
push
and
mov
popf
ds
sub
repz
pop
add
cld
inc
lahf
jl
mov
mov
bound
xor
lock
push
les
pop
and
cltd
xor
fildll
loope
push
or
enter
push
leave
jle
add
push
and
lret
sbb
xchg
inc
std
clc
lods
scas
jecxz
pop
scas
cmp
pop
or
jmp
loopne
add
stos
call
cmpsb
and
jg
push
sti
inc
xchg
dec
fdiv
inc
xor
push
mov
or
icebp
jne
push
call
jl
gs
or
scas
jmp
and
adc
mov
int3
test
jno
or
push
xchg
fcomps
test
scas
lods
call
or
inc
adc
and
or
andl
fcoms
int
lds
sub
es
adc
rol
dec
mov
push
fiadds
inc
ret
adcb
or
jl
es
push
xchg
fcoml
dec
pop
push
cmp
repz
pop
pop
xorb
push
inc
dec
jne
and
push
sub
shlb
pop
daa
lret
dec
sbb
sub
cmp
xor
cmp
in
jae
add
sub
mov
xchg
push
fnstsw
mov
pop
jae
dec
roll
daa
dec
enter
ret
jno
fimull
inc
inc
nop
loop
and
xor
test
int3
sbb
adc
in
inc
mov
imull
sbb
je
mov
ret
ret
sub
sbb
sub
lcall
add
jne
push
scas
imul
int3
push
lcall
or
pusha
mov
mov
es
gs
pop
cmp
test
pop
and
inc
sbb
sub
adc
add
mov
sar
dec
in
and
inc
cs
or
mov
pop
and
dec
inc
sub
mov
rolb
ds
push
jmpw
mov
mulb
mov
int
pop
push
cmp
mov
leave
jne
icebp
jp
cmpsl
jmp
xor
mov
subb
adc
loop
je
test
jmp
sub
mov
jecxz
add
cmpsb
daa
sub
xor
invd
or
adc
adc
or
int
sub
jo
push
data16
sbb
add
cmpsb
jae
in
sbb
or
mov
divl
jne
filds
test
jae
add
mov
shlb
inc
rclb
inc
notb
out
push
pop
or
rcrb
test
dec
adc
ficoml
adc
scas
mov
xor
stos
dec
pusha
xchg
mov
inc
out
push
adc
mov
or
xchg
dec
lods
fcoms
pop
adc
mov
mov
jmp
rol
or
scas
mov
pop
nop
xchg
xchg
insb
inc
hlt
stos
mov
dec
ret
push
jo
fstl
imul
xchg
test
imul
mov
out
xor
addb
out
push
movsb
pop
mov
xchg
dec
incl
mov
pop
cltd
mov
jns
sahf
adc
repz
pushl
jl
dec
jle
je
cwtl
repz
sar
xchg
test
mov
mov
mov
and
dec
hlt
push
or
dec
adc
ds
insb
mov
mov
pop
add
fmul
xchg
xor
hlt
add
sbb
outsb
cmp
sbb
inc
aad
pop
push
ffree
out
mov
pop
out
dec
xlat
cltd
push
loopne
aam
fdivr
jne
in
sub
das
nop
test
inc
ljmp
adc
cwtl
push
dec
test
pop
push
add
lock
ds
sbb
fadds
xor
and
out
add
lods
and
lods
data16
movsl
push
enter
mov
mov
jl
push
jno
subb
push
mov
pop
add
xor
dec
hlt
pop
push
testb
in
lock
cmc
push
movsb
sub
push
inc
hlt
or
imul
fmull
adc
in
dec
sub
adc
int3
inc
in
and
adc
fsts
jle
sbb
outsb
sahf
pop
fidivrs
pop
and
ret
jle
push
adc
adc
mov
sub
xchg
lock
lret
or
outsl
pop
xchg
fisttps
adc
pop
sbb
shll
xor
sub
fistl
andb
dec
sbb
adc
push
test
out
and
int
ret
cmp
push
or
inc
add
call
pusha
sarl
jb
or
cmp
add
in
inc
popa
pop
je
push
ret
and
jmp
push
cltd
mov
push
or
int3
mov
arpl
fistl
test
push
mov
or
cmc
pusha
mov
je
and
sbbl
adc
iret
and
push
into
hlt
push
in
push
jb
push
or
test
loop
fwait
sbb
jns
mov
cmp
insb
adc
out
into
ljmp
lret
pop
dec
shrl
nop
icebp
inc
and
leave
call
mov
mov
stos
mov
sub
push
and
adc
insl
and
ss
pop
negb
sbb
or
xchg
or
lret
inc
fsubr
mov
jl
ret
sbb
stos
leave
pusha
dec
mov
enter
mov
lock
cmp
xor
mov
or
js
pop
aas
xor
push
or
lahf
cmp
outsl
jb
test
jmp
decb
add
or
test
dec
inc
xchg
inc
mov
push
int3
fcomp
outsl
orb
xor
cmpb
or
cmpl
test
or
jge
adc
pop
divl
sub
imul
push
scas
cmpb
rcrl
dec
adc
fs
clc
iret
sub
outsl
gs
inc
cmp
xacquire
enter
repz
mov
fisubrl
fcomip
sub
loop
movsl
fisubrl
pop
rolb
insl
data16
or
gs
outsl
push
pop
bound
jmp
jl
jne
cmpb
ja
jp
sbb
mov
or
cmpsl
testb
inc
inc
dec
jne
xchg
aaa
sbb
nop
xchg
int3
ja
or
sub
js
cmp
jnp
stos
jo
dec
inc
mov
test
xor
lea
ss
push
xchg
mov
or
sub
adc
cwtl
mov
and
pop
mov
test
stos
lret
and
xor
popf
hlt
pop
dec
xchg
jo
jno
scas
push
cltd
lahf
cmp
or
lea
xchg
loop
xchg
or
mov
cmp
jne
or
pop
inc
jno
inc
clc
fimull
sub
jno
cld
mov
push
loope
jb
adc
imul
mov
aad
or
aad
and
or
nop
frstor
dec
add
adc
enter
add
mov
jns
jp
xor
mov
inc
testl
xchg
and
or
dec
sbb
rorl
lret
cmp
subl
out
add
adc
es
inc
mov
adc
mov
bound
cmpsl
gs
daa
pop
dec
in
cmp
mov
cmp
adc
std
cwtl
mov
jmp
test
dec
lahf
or
mov
adc
cwtl
add
pop
lods
push
lret
adc
xor
jne
sbb
inc
faddp
fdivrp
push
dec
mov
pop
icebp
or
aam
subb
and
cld
or
sbb
pop
clc
adc
out
lahf
addr16
repz
mov
and
jnp
dec
ds
test
sub
ret
push
shrb
adc
adc
xchg
cmc
add
pop
mov
push
sbb
int3
cmp
cltd
pop
or
je
dec
out
fistpl
push
mov
test
sub
js
lds
inc
push
sub
sbb
lds
mov
js
sub
lock
fstl
clc
cli
flds
mov
mov
push
mov
lret
sub
xchg
ss
mov
pop
jnp
jb
cmp
daa
into
mov
ret
dec
cmp
and
and
je
movsl
add
negl
add
jbe
sub
mov
repnz
dec
mov
aad
pushf
inc
push
lcall
lods
rolb
aam
adc
int3
inc
push
dec
push
xchg
fisubrl
sub
jbe
mov
test
into
jbe
lea
mov
mov
push
cmp
lods
mov
inc
in
pop
sub
aam
or
mov
push
and
dec
sub
or
inc
mov
sub
mov
sub
das
pop
push
jb
adc
jo
mov
inc
shufps
dec
adc
fidivs
mov
jo
insl
sbb
push
xchg
cmp
adc
jbe
or
pop
xchg
lods
jl
inc
fcomi
inc
mov
lods
outsl
sub
and
push
call
hlt
ja
loope
sti
inc
jmp
mov
popf
pop
pop
shlb
and
in
scas
sti
fcoms
jae
mov
add
insl
dec
jmp
insl
shrb
jbe
inc
sub
popf
or
xor
cmpsb
add
fdivr
inc
jl
adc
shlb
adc
ret
pusha
and
stos
lret
adc
fs
adc
sub
sbb
mov
jmp
arpl
xor
pop
sub
shrl
in
pop
mov
and
or
or
repnz
lds
adc
and
xchg
sbbb
pop
in
or
andb
pop
sbb
and
pop
push
adc
and
aaa
xor
mov
outsb
icebp
xchg
jg
cmp
cld
imul
add
lods
decl
or
inc
jb
mov
inc
adc
insl
outsl
in
pop
xchg
or
adc
lods
nop
and
adc
ds
scas
mov
or
jo
push
and
xor
fs
pop
add
push
loope
shrl
sub
scas
push
push
mov
push
dec
mov
in
jnp
cmp
xchg
jg
imul
or
xor
push
test
xchg
mov
push
mov
das
cmp
lock
fsubrp
test
fnstcw
pop
mov
dec
hlt
lea
movsl
cmp
outsb
sbb
sbb
and
lock
enter
in
or
dec
lcall
add
sbb
sbb
mov
imul
pop
sub
push
sbb
jno
pop
shl
inc
into
insl
dec
es
int3
movsl
inc
fwait
std
es
sarb
sti
aad
xor
test
mov
mov
clc
jg
mov
movsb
push
out
push
daa
popf
repz
shlb
ficoml
cmp
push
adc
cwtl
mov
movsb
mov
loopne
add
and
inc
je
cld
cmp
lahf
imul
mov
mov
movsb
cmp
fsts
mov
mov
or
fs
imul
nop
enter
push
mov
adc
push
pop
push
mov
sub
mov
xor
sbb
ljmp
out
adc
push
enter
leave
mov
jbe
pop
pushf
xlat
daa
fidivrs
xchg
or
add
xlat
int
lcall
mov
mov
sub
out
subl
jle
jmp
out
jle
pop
hlt
sti
iret
and
and
movsl
out
push
pop
clc
pusha
xchg
inc
mov
outsl
dec
mov
pop
in
sub
addr16
sbb
push
out
inc
adc
into
or
sub
inc
fimull
test
out
inc
clc
jmp
inc
pop
jmp
nop
outsb
es
or
lret
pusha
mov
xchg
or
pop
dec
push
and
push
xchg
jg
or
xchg
jle
mov
and
xchg
cmp
loop
shlb
movl
pop
and
call
insb
dec
cmp
inc
test
xchg
pop
in
jbe
add
fcom
popl
les
jg
mov
pop
mov
repnz
mov
xor
jo,pn
xchg
mov
inc
pop
je
jbe
fst
addb
aas
jbe
push
inc
or
cmpsl
push
shrl
and
js
hlt
push
adc
and
aas
inc
push
pop
jns
dec
test
pop
pushf
mov
jmp
xchg
mov
fs
pop
sbb
mov
sbbb
test
jo
je
mov
out
sti
mov
lods
cmp
sbb
or
cld
jge
lock
cmp
dec
and
je
or
je
push
inc
jne
out
je
imul
in
adc
xchg
imul
or
fcoml
mov
ret
sub
dec
adc
sub
jne
push
inc
push
sub
dec
data16
xchg
lds
sub
rcll
push
jbe
add
fwait
xchg
dec
and
or
xlat
lret
mov
sysret
cmp
or
into
es
sti
xchg
or
test
dec
icebp
mov
mov
in
add
insl
imul
mov
mov
decb
push
and
jle
pop
fcomps
xchg
clc
jl
lock
ret
mov
mov
dec
dec
pop
leave
arpl
add
xor
xchg
and
mov
dec
and
jo
ret
inc
lret
push
out
jb
pop
push
push
imul
lcall
sub
xchg
and
mov
adc
movl
sbb
dec
fsubrl
xchg
repz
push
push
jo
mov
data16
insb
xchg
mov
jmp
and
adc
dec
push
push
pushf
lret
pop
js
adc
push
dec
ljmp
push
hlt
inc
or
and
popf
cmp
pextrw
imul
enter
test
ror
jg
push
xchg
sub
repnz
and
dec
test
xchg
adc
sub
testl
xchg
clc
mov
jl
lock
mov
shr
add
pushf
mov
out
jae
xlat
mov
or
mov
and
repz
in
sub
sbb
lret
fadds
arpl
jp
push
and
jo
stos
movsw
js
decb
scas
jns
pop
adc
xor
fs
dec
xor
xchg
fs
pushf
inc
xchg
jle
imul
movsl
and
inc
xchg
cmpsl
mov
mov
ficompl
mov
xorl
pop
out
daa
lods
cmp
xor
inc
mov
inc
xor
loop
cmp
ret
pop
mov
dec
jno
popa
decl
adc
ret
out
icebp
lods
lea
test
mov
cmpsl
mov
xchg
xchg
inc
push
pop
push
popa
es
pusha
push
pop
test
addl
cmp
or
sahf
imul
fidivrl
jbe
adc
mov
ret
ja
cmc
mov
and
shl
mov
dec
inc
leave
push
push
jl
idivl
xchg
mov
inc
inc
rolb
adc
rcr
or
jne
or
pusha
das
movntps
sbb
scas
mov
repz
call
mov
or
stos
int3
jbe
scas
mov
cmp
and
push
xchg
inc
jae
cli
pop
xchg
or
push
sub
or
adc
adc
adc
jo
or
orps
or
cmc
dec
daa
and
dec
pop
xchg
push
inc
xchg
pusha
xchg
mov
push
das
cmp
sub
icebp
dec
jmp
mov
mov
xchg
nop
stos
push
jmp
push
mov
mov
cmp
jl
adc
jbe
adc
imul
sub
mov
xlat
insb
xor
test
mov
mov
aad
dec
pop
jmp
or
cmpsl
iret
nop
mov
xchg
or
sub
push
lock
mov
xor
mov
cmpw
mov
xchg
adc
lea
rol
xlat
push
xchg
fcmovbe
mov
cltd
test
lea
mov
inc
mov
push
push
ljmp
mov
mov
push
mov
lahf
inc
frstor
clc
and
jmp
add
outsb
jle
jne
scas
or
es
cli
adc
cld
and
fmuls
inc
loopne
pop
sbb
pop
xor
or
and
dec
or
dec
sbb
icebp
aam
push
das
icebp
test
decb
repz
dec
sbb
adc
adc
adc
inc
jne
add
add
adc
add
clc
insb
cmpsb
nop
mov
push
js
inc
push
mov
clc
sbb
push
cld
and
aaa
dec
divb
or
jp
push
mov
stos
nop
inc
mov
subb
pop
mov
mov
inc
adc
clc
add
cmpsl
xchg
daa
or
mov
dec
dec
push
lock
and
push
call
xlat
cmp
fs
and
adc
push
and
push
or
and
mov
dec
mov
cmc
std
cmpsl
mov
mov
mov
lea
xchg
cli
test
sbb
cmpsl
pop
repz
cmpsb
push
lcall
test
sub
loop
insb
lahf
sub
sbb
adc
add
jmp
sub
jo
and
lea
aam
or
mov
stos
and
mov
and
xchg
pop
jg
sub
mov
scas
ss
or
mov
inc
cmp
sbb
movsb
mov
xchg
pop
jmp
cltd
mov
adc
dec
adc
jecxz
lds
call
mov
sbb
insl
pop
arpl
popf
loop
xlat
cmp
call
dec
mov
mov
push
dec
pop
adc
test
jne
movsl
out
iret
subb
pop
sub
dec
xor
sub
cs
jecxz
mov
leave
cmc
xchg
inc
cmp
mov
pop
nop
test
push
inc
dec
flds
aad
and
dec
in
sarb
int3
jae
sbb
sub
pop
and
test
or
xchg
or
dec
insb
dec
sbb
xchg
divl
ss
mov
cmp
sbb
in
cmpsb
push
mov
in
xchg
mov
nop
leave
adc
imul
mov
jns
mov
aam
jle
xchg
add
inc
adcl
dec
xchg
lods
stc
lahf
inc
dec
push
bound
adc
fisubrl
pop
decb
outsl
jnp
lock
fists
sbb
fmuls
pop
pop
cmpsl
loope
xor
enter
loopne
loop
push
cmpsl
push
mov
sub
push
jge
push
jns
xor
add
imul
int3
pop
movzwl
in
xor
xchg
sub
jecxz
push
add
pop
pop
and
sbb
adc
jno
scas
adc
in
xchg
nop
or
out
add
inc
shrl
and
xchg
jecxz
jecxz
dec
and
add
loop
pop
mov
pop
ret
jo
dec
inc
leave
imul
data16
add
imul
mov
and
lcall
dec
and
xchg
addr16
pop
nop
cld
pop
movsl
cld
lock
fildl
xor
push
mov
and
shlb
mov
pop
xchg
test
pop
in
and
pop
xchg
mov
mov
inc
and
inc
in
jbe
sbbl
pop
xor
mov
and
jmp
gs
nop
mov
les
out
add
test
aad
push
push
xchg
and
cmp
fdivrl
shr
lahf
dec
shlb
mov
int3
adc
xor
fidivs
movsl
jge
xor
sub
test
out
mov
stc
ljmp
out
ret
cmc
adcb
ds
out
jp
xlat
push
loope
fiaddl
sub
xchg
es
xchg
xor
cmc
adc
mov
xchg
or
lds
and
scas
jmp
and
clc
adc
mov
ja
jo
cmpb
fs
xlat
lret
enter
adc
sub
addr16
xor
out
cmp
movsl
ret
jno
movsl
hlt
lahf
push
mov
repz
les
out
push
xchg
mov
pop
push
add
das
adc
mov
lret
and
mov
or
xor
mov
test
add
push
sub
dec
adc
xchg
add
xchg
push
jmp
sub
push
fimull
sbb
push
push
rorb
insb
jb
pop
push
or
cs
das
pop
pop
xor
test
movsb
mov
lret
mov
pop
je
imul
push
out
push
inc
xchg
cmpb
call
jbe
clc
mov
inc
and
les
dec
fdivrl
test
sbb
scas
xor
aad
pop
es
lret
clc
loop
jnp
bound
sub
cmp
push
dec
pushf
push
ror
jae
cmp
mov
jo
push
xlat
push
or
fsubs
out
fadds
pop
mov
or
push
push
fadds
pushf
sbb
pop
jle
dec
adc
lret
sub
push
fsubs
stos
push
lret
push
cltd
sub
pop
pop
stc
mov
pop
adc
xor
ja
pop
loope
xor
adc
pinsrw
loope
or
adc
pop
outsl
ljmp
imul
aad
cld
jg
mov
dec
sub
sarl
ret
cltd
xchg
or
add
sahf
addr16
push
sbb
lds
es
xor
jmp
mov
scas
lea
or
push
and
mov
in
stc
and
fldcw
mov
push
in
add
jmp
call
push
test
pop
sub
adc
shll
pushf
sbb
inc
or
outsb
pop
and
or
fldl
cmpsl
adc
aaa
inc
sbb
inc
and
xor
testb
dec
call
call
push
ds
jbe
xchg
push
fisttps
lret
jmp
daa
in
inc
jmp
sub
inc
push
and
les
jns
xchg
mov
inc
pop
sti
sub
imul
cmc
mov
jmp
aam
leave
loopne
out
dec
xchg
repz
lock
cs
add
lret
mov
or
adc
loope
sub
std
mov
adc
mov
loop
and
gs
mov
mov
mov
cmp
ljmp
dec
int3
push
or
enter
ret
adc
test
fsqrt
sub
cs
or
and
test
addr16
pop
aas
or
jno
sbb
push
xor
in
xor
cmp
sbb
and
lret
xlat
dec
jnp
mov
push
pop
push
inc
je
cmp
adc
push
pop
mov
push
xor
add
icebp
add
repz
sub
sarl
dec
push
or
mov
js
add
pop
movlps
push
mov
mov
and
xor
push
imull
into
fmull
cwtl
adc
popa
mov
xchg
or
pop
mov
scas
xor
jne
enter
sbb
and
gs
adc
shll
xchg
mov
or
mov
shrb
xchg
or
or
pop
test
int
stos
sbb
lods
mov
jne
lret
cmp
dec
jae
cmp
lcall
int3
bound
dec
inc
roll
hlt
daa
lock
movsb
call
imul
push
inc
sar
and
xor
repnz
pop
cmp
outsl
ds
cmp
jg
push
push
loopne
inc
fwait
xchg
fiaddl
int3
jo
push
mov
out
sub
xor
or
and
imul
mov
push
adc
lea
xchg
arpl
test
inc
xor
popf
or
daa
jns
xchg
push
stc
aad
sub
mov
xor
adc
test
or
push
dec
ds
sub
je
push
xor
jne
frstor
sub
push
iret
add
push
mov
or
popa
call
push
sub
ljmp
popa
mov
cmp
xor
dec
dec
sub
cwtl
adc
cwtl
call
add
dec
pop
lods
pop
jbe
les
sub
daa
lcall
mov
mov
pop
les
pop
std
mov
jecxz
leave
inc
jo
mov
pop
adc
and
cmpsl
cmp
cld
mov
js
pop
addb
pop
sbb
push
fildl
inc
aad
mov
ficompl
pop
or
jo
add
adc
mov
mov
push
inc
jo
dec
xorl
dec
jg
inc
xchg
adc
daa
jecxz
adc
mov
lods
sbb
inc
sar
pop
popf
fisubl
cmp
cmpsb
leave
pop
push
sahf
mov
jl
cmp
out
pop
loope
jno
cs
cmp
jns
and
adc
xchg
sbbb
push
add
ds
shlb
orb
je
movsb
rcrl
fbstp
out
in
jecxz
out
daa
push
or
adc
push
ffree
and
and
pop
mov
test
mov
or
les
mov
mov
mov
cmp
adc
ret
sub
jmp
dec
mov
pop
push
movsl
dec
shrl
loopne
push
mov
clc
add
cmpsl
daa
test
loop
jbe
fxch
cs
out
jne
arpl
or
push
test
jmp
adc
inc
dec
in
add
mov
sbb
jae
mov
mov
sbb
movsb
adc
adc
pop
in
or
mov
add
neg
test
push
xor
push
push
scas
in
add
and
pop
adc
xor
nop
xchg
jne
xchg
inc
add
and
push
jl
inc
sbb
pop
ret
mov
les
xorl
and
and
dec
push
xor
mov
cmp
jg
dec
out
dec
mov
dec
out
mov
scas
enter
xor
mov
sub
cli
das
or
sbb
mov
jbe
add
and
pop
push
add
test
or
stos
mov
xchg
pop
adc
test
cmp
mov
fcoml
mov
mov
into
movsl
mov
scas
mov
adc
jae
aam
inc
int3
in
and
mull
sti
push
enter
or
int3
push
mov
sub
add
shll
pop
in
push
rolb
nop
in
mov
loopne
mov
jae
lods
sub
cmpsl
lods
das
jae
inc
shlb
xchg
mov
test
cld
pop
repnz
add
call
jge
cmp
movsb
fsubl
in
movsb
gs
pop
push
inc
fdivs
mov
hlt
push
or
imull
test
int
decb
lods
data16
imul
xchg
fcoms
pop
xchg
or
cwtl
xchg
pushf
xchg
mov
enter
inc
mov
pop
mov
lock
je
mov
je
jne
dec
shl
push
dec
fcomps
and
fs
pushf
mov
es
push
lods
fbstp
sub
sub
popw
cmpl
orb
loope
adc
fmull
cmp
jns
gs
sub
push
cmp
or
je
mov
fmuls
jmp
push
push
movsl
pop
jle
add
roll
movups
jmp
sbb
or
sahf
in
ret
out
mov
jmp
pop
outsl
int
xor
mov
movsb
xchg
divl
xlat
jae
in
jb
sbb
pushf
push
in
inc
movsl
pop
dec
xor
cwtl
inc
pop
inc
lea
push
fadd
push
inc
add
sub
and
adc
cmp
sub
cmpsl
add
xor
pop
lcall
or
test
jne
mov
insl
mov
cmp
dec
add
inc
ss
mov
ficompl
push
mov
sbb
adc
jne
lea
jo
int3
dec
int
popf
cmpsb
lret
adc
cltd
inc
inc
inc
sbb
or
iret
dec
pop
popa
mov
cmpsb
loopne
sarb
adc
push
fs
leave
adc
mov
mov
sbb
ret
or
push
rolb
push
mov
inc
adcl
add
or
adc
mov
dec
test
stos
call
dec
stc
mov
lcall
mov
or
inc
sbb
push
out
lcall
pop
movsl
sti
cmp
mov
clc
add
lea
leave
ret
or
mov
into
nop
sahf
mov
xor
dec
push
icebp
cwtl
or
ret
mov
shlb
adc
in
ds
rol
inc
add
adc
mov
lock
mov
into
imul
dec
xchg
dec
cmpsb
xchg
lea
xor
les
push
sub
adc
shll
lea
ja
adc
call
movb
xor
mov
sbb
add
sbb
mov
add
pushf
or
je
aam
and
pop
adc
aam
and
inc
jle
subl
in
das
test
lcall
pop
fwait
lahf
adc
insb
mov
add
xor
jmp
pop
mov
mov
pop
sbb
movsl
push
push
pop
push
mov
dec
sub
jne
cmpb
je
repz
or
push
ds
rclb
and
push
shl
out
fsubp
dec
test
lods
mov
jmp
sub
das
pop
mov
inc
fstps
xchg
test
repnz
xchg
and
mov
sbb
rcll
fisttpl
cmp
jae
and
mov
jne
adcl
or
and
scas
aam
test
cs
or
or
cmp
push
mov
cmp
aam
pop
sbb
movsb
xor
lock
sbb
inc
jae
daa
aaa
xchg
je
daa
gs
or
inc
sub
inc
int
dec
pop
fs
js
xchg
pop
push
dec
pop
push
push
mov
or
enter
mov
sbb
adcl
popa
and
mov
cmp
icebp
push
xor
sub
push
in
add
je
lret
cmp
jo
rclb
mov
sub
dec
mov
jno
inc
lcall
mov
jge
enter
rorb
fdivrs
pop
pop
push
lret
pop
scas
fcomps
mov
idivb
mov
jb
dec
inc
int
imul
adc
push
stos
test
inc
pop
xchg
insl
bound
pop
in
mov
sbb
mov
test
jnp
cmp
pop
mov
pop
xchg
data16
test
mov
inc
and
shll
pop
fstpt
nop
jl
xlat
mov
mov
pop
repz
out
xor
sbb
mov
mov
dec
and
cmpsb
cwtl
xchg
pop
mov
sbb
mov
mov
lods
xchg
mov
pop
sub
and
mov
mov
inc
inc
jmp
or
scas
pop
cld
daa
dec
lahf
xchg
je
in
daa
lds
mov
jge
cmp
test
cli
int3
dec
hlt
fld
xchg
mov
cld
and
pop
lods
mov
shll
xchg
add
repz
jl
sub
repz
push
lea
push
jmp
mov
xchg
mov
xor
push
das
test
mov
jl
rorl
dec
xchg
sub
sub
test
sub
cmp
xor
notb
cli
mov
outsb
data16
sub
xor
adc
jne
scas
jno
lods
jae
leave
pop
mov
repnz
mov
sub
xor
movsl
jbe
out
xor
scas
xchg
data16
clc
gs
adc
inc
pop
test
mov
mov
daa
cmp
mov
mov
mov
scas
or
push
or
xor
pop
jmp
mov
push
mov
sbb
push
mov
xchg
mov
add
in
jns
jecxz
sarl
jb
je
mov
cwtl
dec
sbb
sub
pop
mov
mov
pushf
test
lcall
sub
shrl
leave
push
jae
aaa
test
pop
leave
stc
or
mov
sub
sub
fstp
adc
mov
xlat
outsb
hlt
adc
xchg
test
cld
std
xchg
in
lahf
dec
inc
push
xchg
push
adc
xor
mov
cmp
dec
jno
mov
into
push
inc
xor
aaa
call
icebp
subb
sub
or
outsl
inc
movsl
aad
cmp
or
mov
daa
rolb
in
jae
sbb
adcl
jb
adc
mov
jnp
push
and
mov
push
inc
fstl
je
xlat
mov
mov
std
adc
aad
leave
fsubl
or
in
mov
movsl
add
daa
xchg
mov
dec
dec
notl
call
adc
cmp
jne
mov
testl
repz
fwait
pop
push
es
push
xchg
into
xchg
inc
lods
aaa
lahf
cmpsb
ret
and
pop
ja
out
sub
sub
inc
mov
dec
fbld
pop
ljmp
cld
in
fidivl
push
sub
xorl
and
xor
adc
movsb
loope
inc
mov
adc
mov
es
xchg
add
bound
push
dec
or
lret
lret
xorb
sbb
xchg
fisttpl
jne
add
inc
adc
and
lret
cmp
jne
xchg
inc
mov
call
add
inc
mov
sub
mov
scas
mov
push
in
and
hlt
xchg
and
pop
mov
movsb
mov
pop
hlt
out
je
mov
divb
and
mov
mov
jne
in
pusha
mov
inc
and
ret
idivb
vminsd
lret
sbb
pop
pop
jmp
dec
outsl
js
call
or
in
fs
dec
test
add
stos
xor
push
test
stos
sbb
xchg
inc
sub
cmp
test
inc
outsl
mov
ffree
adc
out
xchg
pop
mov
adc
sub
xchg
fimull
repnz
mov
in
in
arpl
pop
daa
imul
pop
or
je
movsb
pop
hlt
mov
add
or
loopne
fcoms
inc
fsubl
sub
in
test
mov
addr16
enter
int3
cmp
cmp
and
mov
outsl
movsl
pop
and
mov
and
sti
sbb
aam
mov
mov
int3
inc
sub
jmp
xor
sbb
cli
movsl
notl
idivb
jo
jo
jbe
xor
inc
inc
xor
sub
outsb
pop
sbb
pop
stos
push
lods
or
and
ds
mov
push
mov
pop
sub
jmp
ror
mov
add
div
or
scas
je
movb
adcb
push
fisubl
int3
cmpsl
cmc
adc
std
out
mov
push
outsl
outsb
imul
mov
shlb
xor
sbb
push
call
jmp
cmpl
jecxz
ret
add
add
je
dec
int
iret
cmp
jae
enter
or
sbb
add
add
push
push
fnstcw
sub
add
test
insl
dec
adc
mov
imul
lea
and
push
mov
push
mov
and
xor
adc
mov
movd
pop
in
push
jo
lods
mov
cmp
adc
add
mov
adc
out
dec
sbb
pushf
adc
sub
and
hlt
xchg
jne
xchg
jno
and
mov
add
or
push
call
jmp
mov
lcall
jmp
push
addb
sti
pop
cmp
adc
or
push
push
or
stos
rcll
sub
mov
sub
xchg
dec
jae
into
inc
push
mov
or
mull
push
sbb
add
ss
inc
sub
es
and
shl
sbb
and
popl
and
test
repz
popf
pop
cltd
out
push
mov
mov
je
ret
adc
push
rclb
subl
and
pop
jb
push
es
or
xor
call
dec
frstor
add
push
or
add
adc
push
lea
fs
hlt
stc
pop
jg
dec
and
sarb
jb
push
sbb
push
xchg
pop
add
mov
hlt
dec
push
std
lds
adc
cmp
inc
adcb
inc
pop
xchg
aam
and
nop
pop
mov
pop
adc
in
arpl
movsl
imul
jbe
mov
push
xor
ja
xlat
ret
pop
les
aam
aas
xchg
jne
ja
cs
or
mov
mov
mov
mov
test
sbb
shll
dec
inc
test
xchg
push
sub
mov
outsl
ja
into
gs
shlb
clc
xchg
stos
clc
jg
ja
cld
xor
fmul
clc
imul
push
or
lds
inc
adc
jne
les
jbe
dec
xor
jmp
inc
push
or
add
jp
cli
adc
mov
adc
and
fildll
testb
outsb
add
inc
imul
cmp
cmp
push
sarl
lds
movsb
sbb
inc
adc
and
xchg
dec
adc
nop
mov
mov
mov
or
fs
mov
inc
push
xor
cs
decb
rcrl
or
sahf
je
cwtl
mov
and
icebp
dec
and
ret
pop
nop
clc
mov
mov
je
fs
inc
or
and
repz
mov
push
rorl
mov
rclb
lcall
in
jne
aam
enter
cmp
les
and
dec
pop
push
push
add
popa
arpl
pop
int
into
or
push
insb
repnz
lds
outsl
inc
push
xchg
adc
cmc
pushf
xor
cmpb
or
sti
add
mov
leave
xlat
test
jmp
add
arpl
das
call
mov
scas
sahf
int3
shrl
enter
in
pop
je
xchg
dec
inc
ret
rcll
mov
or
test
mov
out
dec
cmc
pop
cmp
sub
inc
test
repz
and
xchg
mov
nop
jb
cmp
push
mov
xchg
cli
mov
hlt
cltd
sub
sbb
cmpsb
or
and
push
mov
cmp
mov
and
xchg
sbb
adc
or
push
loop
rcrl
sahf
rol
test
xchg
test
in
sub
test
add
gs
jo
pop
or
lcall
pop
shll
dec
jns
lods
cmp
and
dec
outsb
je
jae
jne
xchg
or
and
sub
jno
push
mov
cwtl
inc
jne
outsl
insl
mov
ja
dec
jo
lea
lret
add
dec
inc
js
outsb
aam
push
ds
mov
inc
add
mov
jo
fildll
xchg
pop
fsubrl
ds
cmp
cmp
mov
cmpsb
push
push
mov
aaa
mov
cmpsb
rorb
inc
mov
dec
inc
imul
add
inc
jo
pushf
fildll
jo
scas
inc
fs
mov
add
push
cmp
dec
dec
outsl
js
clc
dec
scas
add
inc
les
inc
sbb
test
dec
adc
les
dec
sub
test
aam
adc
rorl
ret
jno
ret
sbb
dec
mov
int3
push
xor
or
and
dec
leave
xchg
rcll
daa
les
xor
int3
and
or
int3
sbb
or
mov
adc
xchg
xchg
mov
in
lds
cmp
nop
or
sbb
mov
mov
sub
mov
pop
sbb
enter
inc
sbb
mov
icebp
inc
and
push
xor
nop
push
and
and
or
int3
fs
pusha
cmpsl
test
nop
adc
cmpl
rol
addr16
jbe
sub
mov
sub
dec
xor
mov
dec
xchg
std
nop
adc
dec
negl
inc
dec
mov
xchg
add
jp
mov
or
shlb
or
mov
mov
outsb
and
stos
mov
lcall
xchg
hlt
negb
dec
mov
aaa
cli
and
push
sbb
push
push
sbb
push
cmpsl
xor
out
jecxz
imul
loope
test
iret
mov
inc
mov
aam
inc
adc
daa
addr16
push
test
mov
mov
dec
sbb
imul
inc
and
dec
clc
popf
dec
adc
jl
hlt
mov
pop
adc
jecxz
dec
es
push
sub
shll
out
add
pop
jl
inc
sbb
jge
popw
shrb
xchg
adc
dec
pop
movsb
push
mov
inc
xchg
repz
pop
mov
mov
jg
or
lcall
xor
fnstsw
push
inc
pop
or
cltd
sbb
sub
or
push
rorl
das
or
in
ret
push
enter
add
mov
sbb
cmp
sbb
sbb
xchg
mov
test
mov
pop
adc
mov
jl
jns
jp
jo
loope
push
xchg
pop
and
jno
call
and
or
xchg
pop
into
mov
jo
and
mov
and
xchg
nop
push
dec
pop
popf
inc
mov
mov
mov
outsb
xor
adc
sub
in
dec
leave
clc
mov
out
test
je
inc
adc
jmp
mov
or
in
ret
scas
gs
or
ljmp
push
sub
mov
sub
jp
mov
ja
add
pop
fwait
add
aas
pop
fistpl
mov
push
shrb
out
pop
data16
into
or
mov
and
xchg
cs
pop
push
popa
mov
stc
lock
enter
fidivl
mov
inc
lds
fnstsw
shll
test
jg
lock
test
loopne
fldcw
int
mov
in
push
and
rcll
dec
xchg
pop
add
mov
pop
adc
xchg
sbb
sub
mov
inc
fs
sub
mov
aam
int3
fadds
xchg
sub
add
out
mov
sbb
pop
mov
dec
adcb
pop
sbb
in
lcall
movsl
scas
leave
stos
into
mov
xor
call
add
fsubl
hlt
adc
call
pop
push
data16
lahf
out
inc
pop
cmp
jecxz
cmp
in
out
test
sub
inc
mov
jns
in
orb
popa
dec
in
data16
and
xchg
cmpsl
push
loopne
out
jmp
and
push
es
ret
xchg
aad
fsubs
and
xor
cld
enter
pop
pop
pusha
repnz
pop
leave
adc
ret
icebp
out
lret
test
pop
into
inc
xlat
in
dec
rol
test
lret
dec
adc
shll
inc
arpl
and
inc
je
mov
push
loop
lret
mov
lret
in
fiadds
dec
push
and
pop
pop
cmc
cmpsl
jno
paddw
or
push
sub
jno
sub
es
into
add
lahf
sub
lock
add
sub
imul
fsts
addr16
cs
xchg
shrl
adc
dec
fstps
pop
dec
inc
mov
push
push
out
dec
and
jmp
or
sbb
lock
jmp
dec
inc
add
stos
bound
iret
out
cs
cmp
dec
cmpsb
jmp
rcrl
xchg
stc
mov
sahf
je
or
pop
and
ret
pushf
mov
cld
mov
rcrl
jne
call
jp
jg
dec
shlb
cld
adc
cwtl
rol
dec
sub
inc
push
push
sbb
and
jb
icebp
sti
and
adc
mov
adc
push
xchg
fs
jno
or
les
cmp
sub
push
xor
pop
vmovlps
cmpsb
push
daa
nop
jle
in
int
das
mov
pop
mov
into
sarb
or
movsb
lret
nop
push
and
sbb
fbld
ss
push
jg
movsl
push
push
push
and
mov
fs
gs
pop
nop
jp
cwtl
rcll
pop
and
roll
adc
mov
jle
xor
orl
xor
lods
dec
gs
cmp
mov
movsl
jmp
and
in
push
test
and
in
clc
jl
xchg
test
scas
std
or
mov
adc
mov
adc
pop
neg
js
lahf
sti
js
cmp
sub
mov
bound
orl
fcoms
cmp
call
inc
enter
inc
mov
adc
test
shrl
sub
hlt
or
inc
cli
adc
pushf
dec
sub
inc
and
sub
insl
cli
adc
movsb
inc
inc
daa
call
test
dec
lahf
mov
adc
push
lea
hlt
and
ss
mov
jo
push
and
std
insl
int3
je
daa
xor
std
xchg
bound
je
cmp
std
adc
inc
adc
push
scas
push
test
subl
int3
xor
jo
sub
jae
loop
outsb
ja
daa
xchg
jbe
push
mov
sub
push
ffree
jo
sbb
out
mov
pop
movsl
adc
inc
fistpl
adc
aad
mov
aad
mov
jle
insb
mov
icebp
das
jb
sub
fcmovnbe
sub
imul
cmc
test
cwtl
in
push
pop
lret
sbb
pop
adc
xchg
aam
fadd
fsubl
xor
sbb
adc
adc
adc
pop
mov
clc
cld
xor
pop
or
or
inc
adc
adc
sbb
and
sub
sub
inc
xor
xor
cmp
inc
xor
xor
push
mov
and
mov
bound
sbb
js
jl
orb
orb
jnp
fcompl
jno
xchg
mov
adc
xor
add
call
mov
xchg
and
mov
inc
les
adc
test
lahf
popa
cmp
pop
fmuls
clc
cmpsl
and
fcoml
repnz
sbb
xchg
mov
pop
add
in
or
shl
inc
adc
inc
hlt
and
xor
cld
and
mov
sbb
or
hlt
mov
xchg
in
and
inc
sbb
xor
inc
xor
and
pop
inc
and
sbb
sub
js
adc
mov
xor
cwtl
lea
xor
mov
cmp
rorb
inc
or
and
inc
add
frstor
dec
or
cmpsl
adc
dec
mov
sarl
and
and
pop
and
and
inc
and
shrl
lea
jo
rcl
je
in
push
adc
cld
sarl
inc
fmulp
addb
adc
cmp
jmp
push
xorb
sbb
gs
movsl
nop
jecxz
jo
outsb
push
push
push
imul
jae
adc
jb
ja
movq
mov
adc
std
sbb
lods
and
int3
cmp
sub
rcll
out
clc
mov
inc
outsl
daa
stc
cmp
pop
cmp
xchg
pop
aaa
stos
mov
out
dec
icebp
mov
lret
inc
negb
movsl
adc
test
popa
imul
adc
inc
push
push
cmp
jno
jns
jl
jae
push
sbb
pop
int3
dec
push
test
mov
mov
adc
call
outsl
push
clc
xchg
mov
xchg
dec
push
jne
repz
adc
xor
adc
adc
xchg
pop
cmp
dec
mov
jae
in
adc
push
adc
dec
mov
push
adc
lea
imul
test
mov
adc
mov
dec
out
dec
adc
aam
mov
lret
cmp
and
xchg
adc
push
mov
xchg
xchg
aaa
mov
pushf
fs
dec
dec
mov
addr16
jb
and
xchg
sbb
and
fs
into
imul
jle
adc
xchg
dec
fdivl
outsl
daa
arpl
outsb
loopne
jno
mov
dec
push
dec
shrl
dec
mov
cli
jbe
sbb
adc
xor
adc
sbb
adc
add
mul
adc
adc
rorl
push
call
cmp
jg
fsts
sbb
xchg
mov
inc
add
jne
call
jno
add
sahf
xor
or
ds
sarb
mov
pop
pushf
sbb
inc
pop
pushf
or
xor
push
inc
mov
mov
movsb
sbb
les
dec
cmp
cmc
in
push
imul
inc
xor
adc
push
inc
mov
insb
push
inc
mov
popf
jns
sbb
movsb
pop
mov
and
in
push
xor
jg
sbb
movsl
adc
or
pushf
jne
mov
inc
iret
pushf
lahf
and
arpl
jecxz
or
adc
sub
add
add
dec
test
pushf
enter
and
inc
mov
pop
push
mov
pop
stc
xchg
les
sub
adc
xchg
adc
mov
jmp
cmpsb
or
add
pop
push
inc
or
push
and
add
ljmp
out
dec
icebp
je
cmp
pop
dec
outsb
cmp
and
push
jmp
rolb
pop
mov
push
icebp
pop
in
inc
jne
cmp
push
in
std
out
xchg
mov
aad
scas
jg
jecxz
scas
imul
adc
cmp
cmpl
je
jle
sbb
push
leave
inc
clc
xchg
call
push
mov
rol
mov
cmp
pop
sbb
roll
iret
adc
inc
xor
test
or
mov
test
jmp
mov
xor
or
stos
jl
stc
xchg
or
adc
aad
xchg
mov
jle
test
out
out
gs
sti
and
pop
jae
test
cmp
mov
and
nop
je
dec
push
and
in
sub
push
push
in
push
add
fsubl
cwtl
or
mov
pop
and
mov
stos
loope
notl
inc
cmpsl
fnstcw
movsb
ficoms
daa
test
push
ds
pop
hlt
insl
mov
inc
fisttpl
loop
insl
incb
and
mov
cmp
jp
fwait
test
imul
insb
pop
scas
loope
cs
and
loopne
push
test
dec
decb
dec
stos
and
push
inc
push
push
xlat
sub
ljmp
ret
dec
dec
adc
pop
mov
cmp
jo
inc
bound
jb
push
adc
ret
sbb
outsb
inc
gs
jl
inc
insb
sbb
dec
adc
enter
mov
or
dec
pop
stos
sub
aad
shrb
in
test
jns
sub
setno
adc
stos
xchg
test
or
xor
pop
ret
sub
push
rorb
lock
movsb
ss
mov
dec
xor
or
fs
adc
pop
push
inc
imul
push
jo
repz
pop
mov
fmull
popl
cs
xchg
push
pop
das
int3
dec
cmp
fs
les
cs
mov
mov
xchg
lock
enter
insb
enter
enter
or
je
js
rcr
or
inc
out
mov
and
jo
jl
add
or
ret
cs
cmp
xor
push
fldl2t
icebp
loope
out
push
nop
subl
add
mov
jnp
push
movsl
arpl
mov
inc
add
mov
dec
or
mov
mov
decl
insl
jo
subl
xor
mov
and
jo
cmp
inc
inc
fstl
out
sbb
sub
xchg
and
xor
push
sbb
xchg
lret
lock
push
lods
adc
xor
js
pop
inc
notl
mov
dec
bound
and
testb
or
mov
sbb
xor
add
cmp
cltd
nop
add
or
sbb
add
add
test
add
sub
xor
lock
enter
jb
push
mov
movsl
outsb
ds
xchg
fmull
punpckhwd
add
int3
int
sub
outsl
insb
jae
rolb
pop
imul
pop
ret
add
push
mov
mov
test
add
add
push
mov
incb
or
je
icebp
mov
inc
jns
add
stos
pushf
and
inc
stos
inc
fadd
out
aaa
adc
mov
mov
sub
inc
and
xchg
or
or
add
inc
stos
popa
imul
out
hlt
scas
and
or
sbb
or
nop
or
mov
fwait
mov
sub
inc
inc
pop
and
movsb
and
push
aas
jmp
or
daa
inc
adc
push
adc
jns
flds
push
aam
lods
push
and
jno
js
mov
lret
lcall
or
jb
push
dec
in
dec
xor
int3
movsl
fsubl
sub
push
insb
test
push
inc
sbb
pop
add
push
outsl
jo
jne
hlt
fs
jge
lea
mov
sbb
or
push
mov
test
dec
push
or
sbb
sub
xchg
in
icebp
adc
nop
dec
subl
add
and
add
mov
orb
repz
dec
push
xlat
push
movsb
mov
push
and
push
and
push
sahf
ret
inc
and
cmpsl
lea
sbb
imul
mov
dec
jb
inc
push
xchg
mov
leave
sbb
test
pop
sub
imul
mov
filds
jmp
and
cwtl
xor
dec
lock
dec
and
dec
jbe
adc
or
dec
outsl
fldenv
and
mov
sbb
dec
stc
and
gs
rclb
insl
into
and
or
xchg
or
pop
push
jns
xor
dec
fsubrs
xchg
repnz
push
dec
loopne
movsb
jl
loopne
mov
push
jo
xor
mov
nop
je
xchg
xchg
daa
fstl
pop
mov
and
dec
or
cs
repnz
sub
xchg
test
insb
dec
adc
pop
sbb
or
lret
adc
inc
xchg
ret
sahf
dec
out
jmp
cmc
cs
sub
sahf
jb
test
or
add
js
pushf
mov
mov
jns
mov
call
js
dec
jb
sub
cmp
jecxz
inc
js
test
sbb
sub
sub
jb
clc
mov
test
mov
shlb
sti
data16
inc
mov
aad
in
pop
add
inc
adc
jp
arpl
mov
fcoml
imulb
fstps
xchg
lock
or
jmp
or
jnp
cli
xlat
or
xchg
push
pop
ljmp
dec
lods
stos
loop
sbb
dec
pop
push
call
cld
push
dec
notl
ret
adc
insb
sub
lock
push
jge
sbb
push
mov
mov
out
adc
or
test
and
or
mov
pop
sbb
je
test
jle
jbe
lcall
cld
jge
adc
je
fwait
inc
adc
mov
pop
add
fwait
cmp
jge
mov
movsl
inc
fucom
mov
jle
ss
dec
sbb
lock
adc
sbb
push
daa
cs
add
gs
or
pop
sub
sar
repnz
push
adc
push
loop
dec
and
sbb
call
cld
mov
je
adc
out
xor
rolb
aaa
inc
fs
adc
push
sar
popa
adc
push
pop
dec
mov
push
inc
sbb
out
xchg
mov
mov
pop
xchg
lea
jmp
pop
inc
push
mov
int
dec
or
daa
sub
mov
mov
inc
nop
movsb
mov
mov
call
movsb
inc
jo
add
push
and
jns
testb
js
pop
test
outsl
cmpb
imul
and
pop
rol
stos
xchg
je
cmpb
inc
cwtl
push
dec
arpl
rolb
adc
lsl
adc
push
in
in
push
daa
pop
ja
bound
add
shlb
jle
cld
loop
or
sbbl
mov
mov
cmp
mov
jmp
xchg
or
adc
mov
dec
mov
mov
into
mov
xchg
xchg
xlat
or
je
popf
xchg
jo
insb
inc
xor
adc
sarb
push
jns
or
scas
or
gs
lea
outsl
fsts
sbb
jnp
adc
jge
les
in
fcoms
push
inc
cmp
aaa
fs
sub
fcomps
dec
inc
out
pop
inc
mov
fcoms
cmp
mov
std
cmp
xor
push
and
or
mov
call
aas
out
adc
cli
inc
push
jg
mov
fs
pop
cmp
pop
push
adc
dec
enter
xchg
cmpsl
pop
or
out
jmp
shlb
push
setbe
push
jl
sbb
cmpsb
and
jne
lahf
push
addr16
adc
push
lret
fwait
pushf
add
in
loope
lock
pop
inc
pop
push
lds
push
mov
pop
jmp
add
or
xor
push
xor
stc
imul
rorb
inc
pop
std
mov
jmp
dec
dec
push
enter
shlb
xor
pusha
mov
mov
push
add
jg
aaa
hlt
dec
in
pop
shll
adc
jne
jb
adc
dec
scas
insl
mov
pop
jmp
push
and
push
int
cmp
fwait
fwait
dec
jne
pop
std
into
clc
popf
push
jg
dec
aas
cmc
test
push
rol
or
bound
jae
dec
or
scas
jo
cmp
hlt
int3
push
xor
cmpsb
and
mov
popa
in
mov
test
mov
push
inc
xchg
mov
inc
das
xchg
dec
jnp
data16
mov
lods
adc
pop
lcall
xchg
fists
dec
pop
aam
test
and
fcoms
or
and
xchg
sub
sub
sub
cmp
sub
das
xchg
adc
adc
adc
cmp
adc
pop
xchg
sbb
sbb
sbb
cmp
sbb
pop
mov
add
add
add
add
mov
and
xchg
or
or
or
or
mov
lock
adc
enter
inc
or
and
mul
sbb
pop
mov
cmp
mov
call
sub
loopne
and
fcoms
sbb
rclb
adc
enter
shlb
inc
mov
mov
adc
xchg
in
cwtl
inc
fcoml
and
dec
adcb
jo
mov
push
xchg
movsb
and
pushf
push
mov
inc
xchg
test
cmp
mov
and
dec
and
pop
adc
dec
pop
and
adc
cmc
add
lock
xor
call
mov
pop
and
pop
mov
mov
dec
fnstsw
mov
pop
and
add
rolb
adc
mov
ret
notb
push
inc
enter
adc
mov
shll
fsubr
xor
les
int3
out
mov
stc
push
pop
int3
iret
mov
insl
cmp
mov
xchg
je
repnz
jae
xor
or
int3
cwtl
shlb
push
rolb
sub
and
scas
adc
clc
clc
adc
cmc
sahf
xchg
pop
add
mov
adc
adc
mov
mov
push
mov
dec
and
or
inc
repz
jl
inc
cmp
sub
mov
sbbb
mov
jo
xor
insb
and
stc
rorb
fs
inc
and
mov
movsb
sub
in
int3
cli
jno
or
call
daa
rorl
lods
loopne
or
mov
cmp
int3
sub
mov
and
push
and
push
adc
xchg
stos
pop
or
xor
mov
movsl
push
xchg
adc
les
test
daa
add
jle
xchg
sti
xchg
rclb
mov
sti
mov
mov
or
jns
mov
nop
dec
push
cld
pusha
lcall
sbb
sub
jne
mov
lahf
push
adc
daa
push
jne
xchg
fmuls
add
push
push
jmp
cmp
mov
pop
pop
in
or
or
mov
mov
scas
or
add
aaa
adc
sub
out
adc
lret
mov
repnz
push
mov
mov
movsl
imul
xor
jge
mov
out
mov
js
enter
sti
add
inc
cwtl
inc
add
pop
andb
push
xor
push
adc
pop
jne
fdivrl
and
or
lock
data16
or
bound
mov
or
push
ja
xchg
stos
adc
out
ret
notb
popf
je
cmc
nop
add
ret
dec
dec
push
pop
sub
movsb
mov
dec
scas
popa
and
in
sarl
fisttpll
lock
loop
push
fdivs
xor
jno
and
ljmp
movsb
inc
cmp
push
insb
inc
inc
push
shll
lret
mov
jmp
mov
push
movsb
xor
add
call
cmp
xor
or
fsubr
sbb
pop
jbe
sub
mov
jne
push
fwait
mov
cmp
mov
test
pop
pop
cs
mov
lods
bound
push
test
xchg
inc
inc
stc
dec
out
dec
sbb
sbb
xor
jmp
ret
jmp
imul
mov
jmp
mov
aaa
adc
xchg
aad
mov
or
jg
sbb
adc
popf
pop
adc
sub
nop
pushf
adc
or
adc
cmp
sub
push
inc
in
dec
subl
test
test
int3
dec
lahf
push
xor
stos
hlt
xchg
adc
push
cmp
add
bound
je
aad
sar
push
cmpsl
inc
jle
jb
dec
lret
lods
push
sub
ljmp
sub
cmc
add
cmpsb
or
push
sub
test
adc
adc
pop
out
int
dec
lahf
arpl
in
add
jp
xlat
test
ss
lock
and
movsb
push
sbb
pusha
or
push
sub
into
movsl
and
gs
xchg
push
push
in
loopne
jp
push
push
fimuls
and
inc
cli
mov
shlb
je
mov
lock
or
leave
aad
ret
jae
add
cmp
xchg
jbe
int3
rclb
popa
and
out
loopne
add
xchg
sbb
add
sbb
inc
push
dec
dec
test
dec
and
push
cmpl
mov
xchg
inc
fsts
jb
and
sbb
pop
and
cmpb
ret
out
push
adc
push
and
cmp
xchg
loopne
pop
sub
cmp
add
mov
pushf
stos
lret
pushf
out
pop
fadd
or
push
inc
jne
pop
out
and
push
adc
imul
adc
cmp
xchg
jle
push
fstpt
add
cmp
mov
xchg
out
dec
dec
mov
pop
or
or
lock
xchg
pop
in
adc
add
and
out
mov
adc
cmp
and
dec
repnz
xchg
mov
cmp
les
dec
test
dec
outsl
jg
sahf
mov
adc
movsb
addb
mov
dec
jo
scas
pop
aaa
push
mov
and
jnp
sar
arpl
jae
pop
xchg
daa
push
push
and
sub
mov
dec
test
xor
jae
dec
xor
imul
arpl
loopne
mov
outsl
loopne
cmpsb
test
int3
sbb
adc
inc
in
push
add
lods
and
imul
sbb
dec
push
adc
add
gs
jbe
loop
ja
adc
adc
sub
pop
addr16
or
jb
ljmp
sbb
and
arpl
mov
insb
imul
push
push
outsb
and
or
fistpl
and
pop
dec
pop
fs
test
stos
adc
xchg
push
jo
mov
xor
xchg
xor
dec
sub
sub
test
in
or
or
dec
jl
adc
jnp
cltd
or
push
es
xchg
decl
pop
mov
insb
in
in
lret
cmovbe
addr16
popf
shlb
add
fwait
cld
cmpb
mov
arpl
daa
mov
xchg
jg
and
repnz
jg
add
mov
scas
js
jl
cmp
mov
mov
mov
test
in
or
jne
repz
daa
leave
or
and
mov
adc
sub
pop
inc
cmp
jne
fstpl
push
mov
cmc
lahf
jns
daa
adc
inc
hlt
loope
ds
dec
xor
push
mov
and
das
or
in
adc
inc
enter
sbb
adcb
test
das
cmpb
sub
and
mov
jge
inc
pusha
sub
xchg
add
sbb
inc
jnp
cli
sub
mov
ret
mov
adc
mov
cli
adc
stos
push
xor
push
cmp
aad
enter
fimuls
xchg
scas
daa
scas
lcall
mov
jo
or
sbb
jmp
push
icebp
add
sub
push
xor
or
inc
add
or
fisubl
popa
adc
mov
nop
add
popa
adc
mov
inc
pop
xchg
hlt
and
or
jnp
es
or
sub
sub
jb
xor
enter
dec
cmp
shrb
xchg
sub
sbb
and
xchg
add
add
add
add
add
or
or
or
or
or
or
dec
adc
adc
adc
dec
sbb
sbb
sbb
and
and
mov
das
mov
push
and
dec
jae
test
xchg
inc
cmpsb
mov
enter
ljmp
sbb
inc
push
popa
mov
andl
movsl
xchg
mov
movl
cli
adc
xor
push
or
xor
xchg
dec
and
es
xchg
jp
add
dec
adc
add
or
sbb
adc
mov
adc
repnz
adc
and
adc
repnz
sbb
and
adc
repnz
sbb
and
push
repnz
push
adc
movups
mov
adc
adc
xor
and
adc
adc
cmp
and
cmp
adc
push
adc
adc
and
adc
adc
and
adc
adc
and
pop
repnz
ja
sbb
imul
and
and
dec
adc
adc
mov
inc
sub
test
mov
sub
test
in
mov
mov
sub
push
cltd
test
mov
or
sbb
fdiv
adc
test
push
xchg
fs
and
out
mov
push
lea
out
add
cmpsb
test
movsl
pop
jo
adc
mov
cmp
in
and
pop
push
ja
dec
push
clc
push
add
fsubrs
adcl
repz
sub
sbb
stos
stos
dec
lods
dec
cmp
test
arpl
push
or
mov
push
dec
push
cmp
orl
push
daa
fdivl
add
dec
inc
pop
lea
dec
int3
mov
and
cltd
mov
mov
cmp
inc
shld
aad
inc
ja
sub
cmpb
and
loop
adc
cmp
jo
adc
les
dec
adc
adc
push
push
push
push
into
xor
andl
mov
fsubrs
js
xchg
xchg
or
inc
push
sbb
cli
sub
adc
sbb
ja
daa
push
aas
rorl
outsb
sub
in
inc
arpl
xor
movsb
jbe
mov
mov
or
lock
inc
or
and
cld
fstps
bound
inc
push
clc
sbb
cwtl
cmp
inc
push
dec
or
xor
mov
or
mov
or
push
push
daa
adc
add
inc
cmp
pop
adc
push
jne
xchg
pop
inc
loopne
jo
inc
adc
shlb
pop
mov
dec
into
mov
or
repnz
dec
dec
or
sbb
cmp
push
clc
adc
call
jo
pusha
mov
push
inc
push
or
adc
movsb
and
xor
sti
sub
or
jo
pop
add
inc
imul
xor
cmc
aad
stc
sbb
push
push
lods
mov
lcall
call
sub
inc
mov
jecxz
dec
mov
repnz
popf
push
push
insl
fisttps
test
and
test
in
push
cmp
jge
cmp
dec
gs
repnz
inc
adc
mov
movsb
sub
mov
adc
mov
adc
dec
add
xor
push
mov
insb
pop
sub
sbb
push
movsb
stos
test
dec
clc
out
mov
or
dec
fisubrs
dec
test
insl
mov
pop
inc
outsl
sbb
pusha
pop
and
dec
sub
sub
dec
cld
pop
inc
sbb
and
jmp
pop
mov
and
sub
inc
mov
inc
push
inc
jne
les
fiadds
daa
mov
or
cmpsl
fdiv
jp
and
mov
adc
and
add
lea
sarb
popf
pop
add
mov
dec
cld
lahf
cmpsl
icebp
stc
sub
mov
cmp
jmp
dec
dec
je
aam
and
jmp
push
pop
js
sbb
into
rclb
dec
stc
rorl
sti
xchg
repnz
lahf
out
in
cs
xor
aas
or
xor
xor
mov
and
xor
test
mov
sbb
push
sub
repnz
popa
jns
jbe
fmull
add
cmp
insb
adc
shlb
xchg
xor
xchg
dec
sbb
push
sbb
mov
sbb
mov
sete
mov
cmp
xchg
jmp
cmp
test
inc
in
test
ds
divb
movsb
cmp
and
pushf
or
pop
adc
adc
adc
inc
popa
push
push
xchg
aam
or
and
test
or
stos
and
or
lea
or
dec
adc
int3
idivl
dec
inc
or
adc
insb
adc
jl
sti
mov
push
dec
std
nop
movsb
fcoms
or
or
inc
or
daa
lret
loopne
inc
aad
movsl
into
mov
and
or
inc
stos
and
cmpsl
lahf
mov
mov
or
mov
dec
cmpsl
lahf
les
fidivrl
cmpsl
mov
xchg
adc
nop
mov
ror
push
in
orl
cmpsl
sub
sahf
test
inc
sbb
push
mov
push
mov
shl
and
dec
dec
es
data16
inc
arpl
imul
lret
les
cmpsl
icebp
and
fidivrl
mov
lcall
push
mov
aam
xor
pusha
ds
and
leave
fidivl
movsb
out
jo
and
mov
or
daa
jle
push
nop
sub
sub
mov
push
xchg
daa
adc
adc
and
lret
js
pop
sub
daa
pushf
dec
lcall
or
and
fs
dec
enter
iret
cmp
in
dec
std
out
insb
or
mov
cmp
dec
or
or
inc
xlat
sub
fcmovnbe
adc
and
mov
or
adc
ret
inc
push
and
fcom
inc
xchg
cwtl
inc
inc
inc
in
jl
sub
mov
or
sub
out
xor
xor
dec
push
xor
mov
xchg
or
sbb
in
adc
and
mov
sahf
jl
adc
mov
insl
dec
xor
pop
dec
adcb
mov
or
and
dec
add
add
test
mov
add
xchg
fisubrl
fcmove
and
loop
mov
inc
pop
and
pop
add
push
inc
inc
loopne
xchg
inc
inc
jle
ss
icebp
divl
add
mov
loop
jns
sub
adc
dec
outsb
rcrb
mov
mov
inc
jns
cmpxchg
or
imul
xchg
dec
arpl
and
sbb
adc
jno
mov
outsb
movsb
dec
shll
cwtl
lret
cld
cli
lds
push
and
popa
ljmp
lea
adc
push
mov
addr16
mov
ljmp
dec
shr
in
fnstcw
stc
push
pop
enter
sbb
pop
adc
scas
and
pop
dec
sbb
sub
xor
ret
imul
les
mov
cltd
mov
insl
mov
inc
inc
mov
and
popa
or
mov
inc
out
mov
js
gs
outsb
addr16
loope
adc
inc
inc
mov
shl
dec
xchg
pop
mov
aam
and
inc
add
adc
inc
daa
mov
add
lods
call
push
jno
dec
ja
dec
mov
iret
test
sub
push
mov
loopne
push
add
dec
outsb
insb
jns
cmp
cmp
dec
sub
xchg
and
jnp
fs
lds
popf
mov
sbb
or
push
mov
aas
popf
and
push
inc
xor
push
adc
xor
inc
xor
test
push
lods
insl
mov
xchg
cmp
dec
gs
fdivrp
adc
je
lods
and
cmp
or
push
push
stos
mov
add
inc
pop
test
insb
and
das
push
jo
dec
nop
cmp
and
cmp
aas
pop
fs
stos
lahf
inc
adc
mov
call
sub
lds
outsl
mov
mov
push
mov
repz
and
mov
inc
hlt
sbb
add
sbb
test
int3
and
mov
sub
sbb
popa
data16
and
loopne
rclb
fistps
adc
xor
xor
aam
adc
push
sbb
add
int3
sub
or
sbb
inc
jne
mov
outsb
inc
adc
dec
rcrl
fsub
dec
cs
adc
sbb
xor
or
nop
push
mov
jmp
lock
loop
mov
inc
aam
mov
sub
hlt
dec
icebp
xchg
cltd
test
cmp
cmp
jbe
test
inc
int3
sub
dec
movsl
in
in
and
cmp
pop
jecxz
dec
lcall
je
shrb
jno
lcall
int3
sub
pop
je
ret
jo
dec
mov
dec
inc
in
push
into
jno
or
or
xor
ret
es
decl
sub
mov
mov
or
pop
dec
and
pop
jns
mov
adc
js
xor
dec
es
loopne
cmp
ss
decb
mov
sbb
in
je
push
ljmp
les
lahf
xor
cld
fsubr
jae
lret
movsb
or
iret
test
pop
mov
cld
adc
adc
les
adc
adc
mov
jle
shll
gs
shlb
sub
mov
stc
sbb
data16
push
sbb
push
adc
out
test
add
dec
js
test
or
and
test
mov
es
inc
daa
lods
sub
sub
inc
sub
mov
adc
xor
push
inc
jl
outsl
jl
shlb
inc
sbb
mov
out
out
jbe
sbb
mov
xchg
insb
pop
stos
das
or
test
and
mov
andl
jecxz
dec
sbb
mov
movl
incl
push
rol
popa
mov
mov
or
push
shr
xor
and
cld
call
aad
inc
dec
push
stos
pushf
inc
stos
and
inc
lea
cmpsb
sub
sti
or
or
and
jl
lea
mov
faddl
and
out
inc
sbb
aaa
sbb
scas
pop
xchg
in
es
push
std
pusha
xchg
fcomps
les
les
dec
hlt
stos
out
popa
bound
enter
in
shld
in
xchg
sub
push
mov
incb
push
xchg
pop
inc
adc
xor
pop
inc
xchg
hlt
ret
mov
fildll
imul
jmp
inc
fisttpl
inc
xlat
shll
movsl
jl
dec
xchg
lods
sbb
movb
jmp
xchg
or
dec
mov
mov
xor
pop
inc
ret
jp
jle
cmp
push
pop
ja
mov
pop
inc
push
dec
movsb
sub
test
fldl
mov
adc
fsts
mov
repz
loop
and
gs
shrb
stc
sbbb
dec
insl
jecxz
les
sar
push
loope
orl
dec
daa
add
cmp
mov
push
out
adc
sub
ljmp
sbb
leave
cmp
xchg
mov
jmp
test
adc
aad
push
and
xchg
mov
aad
fmull
xchg
ss
xchg
jmp
movsb
sbb
sbb
test
aaa
loopne
stos
xchg
xchg
or
pop
sub
add
mov
xor
mov
jecxz
add
mov
sub
sbb
lods
js
pop
or
mov
dec
jge
xchg
jl
push
add
sub
sti
pop
and
xchg
loop
push
dec
xchg
push
js
lahf
popa
test
fdivrs
notl
test
add
nop
cwtl
in
cli
push
cmp
movsb
mov
and
sub
rcrb
add
push
in
ffree
cmp
test
cld
sub
imul
aas
mov
dec
imul
xor
or
push
pop
mov
cmp
stos
out
xchg
mov
xor
sub
pop
fwait
adc
and
sbb
lret
je
loop
inc
mov
lods
std
das
repnz
and
sbb
sbb
and
into
lds
push
jo
in
lcall
jns
scas
and
push
jmp
dec
dec
sbb
dec
add
or
les
dec
sub
adc
pop
push
sub
and
mov
mov
nop
xchg
icebp
sahf
push
sbb
jbe
fs
xlat
jmp
cmp
jne
mov
movsb
or
xchg
dec
xor
jne
adcl
xchg
add
xchg
sbb
test
add
imull
scas
pop
cmp
push
mov
mov
xor
inc
adc
daa
jp
push
mov
add
and
dec
call
xor
orl
push
jne
and
orb
inc
add
loope
or
sub
push
add
js
aam
push
xchg
test
add
adc
iret
inc
adc
insb
and
inc
and
and
call
pop
outsl
inc
and
movsb
ljmp
iret
or
adc
lret
add
pop
inc
and
std
xchg
ror
mov
cmpsb
push
popf
push
mov
iret
dec
mov
repnz
mov
sub
cmp
xor
push
pusha
in
mov
notb
inc
sbb
or
insl
ljmp
cmp
imul
in
in
xchg
mov
dec
add
or
xor
jne
cmp
xor
jne
in
sbb
adc
sub
in
or
add
pop
std
cmc
jne,pn
or
icebp
mov
fs
or
push
dec
aad
dec
jmp
add
dec
pop
in
fsubs
mov
xor
jl
fs
sub
nop
fldt
or
cmp
inc
push
movsl
push
js
xor
sbb
push
lret
xchg
push
call
pop
inc
jo
daa
pop
cltd
or
xor
fdivs
adc
jns
push
punpckhdq
adc
push
pusha
and
inc
xchg
inc
adc
cmp
mov
cs
mov
jo
push
fnstcw
lret
sti
inc
jo
in
xchg
inc
sti
inc
inc
adc
push
mov
js
pop
push
xchg
pusha
mov
sbb
push
cwtl
shr
adc
enter
jns
push
cmpl
xchg
out
dec
scas
mov
es
fwait
inc
aaa
mov
lret
lea
sub
addb
mov
adc
pop
xchg
push
es
sub
and
les
jl
inc
js
cmp
aaa
sbb
dec
lods
add
je
mov
inc
cmp
or
inc
sbb
aad
inc
adc
stc
shrl
add
movsb
pop
inc
adc
adc
inc
fstpt
add
test
push
dec
movsl
lcall
cmp
call
xchg
fs
out
lar
call
or
xchg
jle
je
mov
outsb
lods
sbb
stos
imul
push
sbb
enter
adc
or
adc
scas
decb
stc
dec
mov
adc
lds
inc
lock
cs
cmp
insl
cmpsl
adc
gs
cmp
test
sti
xor
fnstsw
sbb
push
mov
inc
popa
jecxz
shll
sub
dec
adc
or
les
adc
gs
pop
test
sub
and
and
mov
inc
inc
in
repnz
sahf
push
js
sub
sbb
into
iret
test
add
mov
add
inc
mov
push
mov
jmp
js
popa
sbb
mov
subb
sub
lods
adc
outsb
xor
add
mov
add
fistl
push
xchg
mov
push
sbb
mul
adc
cmp
pop
or
rolb
cmp
ja
adc
shrb
sub
or
int3
pop
clc
dec
bound
testl
loope
in
rorl
add
xor
enter
mov
clc
jg
dec
mov
daa
add
xlat
jno
add
xchg
xor
sti
movsl
fnsave
pushf
add
cli
cltd
xchg
lea
xchg
cmpsb
cmp
and
pop
bound
test
cld
and
cmp
adc
add
lods
pop
xchg
call
sub
out
lea
insb
cwtl
in
lds
mov
jb
sub
rolb
mov
sub
xchg
dec
sbb
loopne
mov
mov
jnp
ja
inc
xor
and
xor
movlps
push
enter
dec
mov
sub
push
push
out
adc
data16
mov
or
addl
rorb
adc
cli
mov
adc
testb
or
aaa
loopne
cld
mov
sbb
xchg
popa
aam
adc
adc
mov
cmpsb
push
ret
fwait
and
test
movsb
mov
adcb
inc
xchg
and
inc
gs
repz
sub
pop
sub
nop
push
daa
xor
cmpsl
sbb
mov
adc
ss
xor
adcb
orl
sbb
int
xor
movsl
mov
or
enter
pop
scas
je
adcb
push
sbb
mov
mov
stos
pop
adc
sti
cltd
lods
jge
add
mov
push
push
push
xchg
fsubrl
and
push
mov
and
xchg
adc
jmp
in
and
mov
xchg
mov
popf
punpckhdq
adc
div
mov
and
xchg
jnp
xor
sbb
loopne
test
mov
sbb
std
cmp
jmp
shll
or
fcoml
cmp
push
test
add
testl
cmp
mov
das
jmp
mov
out
cmc
sbb
cmp
push
ljmp
shr
pop
mov
jne
enter
dec
shrl
mov
jne
je
into
loop
insl
sbb
sub
pop
pop
add
push
xor
dec
push
aam
adc
ret
add
fs
push
pushf
or
jp
adc
dec
aaa
and
test
mov
mov
cld
xor
cltd
adcb
mov
pop
cmp
sbb
pop
rcr
sahf
adc
stc
xchg
je
push
enter
jo
mov
fisubl
adc
ljmp
test
dec
scas
pop
sub
sbb
pusha
fsubl
pop
cmp
imul
insb
imul
or
sub
inc
shl
pop
dec
out
dec
incb
xchg
int3
mov
shr
test
mov
pop
jg
js
stos
and
pop
movb
repz
sbb
fsubl
pop
or
sbbl
push
push
and
push
les
mov
scas
push
sub
pop
sub
push
clc
push
scas
mov
cmp
mov
cltd
push
or
leave
jge
or
xor
lret
pop
adc
arpl
jo
sub
popa
push
or
jb
mov
pop
inc
cmp
shlb
lock
dec
sbb
je
les
inc
pop
add
sbb
in
mov
shlb
dec
xlat
jne
pushf
jns
dec
rcll
ret
pop
es
inc
pop
inc
push
push
jl
push
pop
aam
mov
outsb
orl
or
in
jmp
ds
loopne
pop
xlat
fwait
mov
out
test
aam
inc
xchg
and
stos
bound
adc
mov
sub
loop
out
mov
add
enter
cld
ja
and
lds
cmp
jno
je
cmp
mov
lds
pop
pop
pop
push
mov
fst
push
dec
lea
daa
push
push
or
dec
std
movsb
pop
test
xchg
push
mov
xchg
xchg
sbb
add
pusha
jo
inc
or
cmp
xchg
dec
dec
in
movsb
in
dec
daa
mov
adc
pop
mov
nop
outsb
movsb
ret
add
or
adc
xchg
adc
adc
call
je
mov
adc
mov
mov
mov
shlb
push
fsts
std
je
std
test
pop
dec
stc
in
push
es
test
imul
lock
sub
cmp
jle
enter
pop
cs
or
xchg
leave
xor
xor
test
leave
rorb
sub
push
je
lds
push
push
popf
fstps
dec
pop
mov
and
fs
insb
push
inc
inc
enter
push
push
outsl
pop
add
adc
inc
xor
mov
mov
mov
xlat
int
or
pop
or
sub
enter
push
enter
or
and
inc
add
arpl
test
and
inc
and
or
xchg
out
add
pop
cmp
dec
mov
jb
sbb
sub
dec
add
lahf
xchg
lods
loop
cli
inc
lea
insl
cmp
or
cli
les
scas
mov
hlt
mov
push
push
and
push
adc
dec
cwtl
repz
shl
adc
scas
or
xchg
dec
sti
jno
dec
sbb
cmp
dec
mov
and
mov
les
sti
cmp
dec
inc
cmpsb
or
dec
movl
or
sub
push
mov
xchg
or
loope
jmp
int3
adc
or
int3
cmp
or
mov
rcll
and
push
in
pop
dec
mov
pop
and
fs
stos
and
add
cmp
inc
and
lods
adc
shlb
inc
jmp
adc
push
xchg
pop
mov
dec
jnp
inc
add
or
jne
cmpl
sub
mov
inc
ss
int
jne
popa
cltd
cmp
jno
shrl
push
and
dec
mov
or
and
les
mov
shll
cld
out
mov
imul
push
inc
setb
mov
pop
xor
xchg
push
or
adc
adc
mov
push
push
nop
push
outsb
call
xchg
or
push
sub
inc
sbb
jecxz
rorl
ret
inc
mov
cmp
ret
inc
dec
cli
lret
mov
jge
aad
pop
scas
jnp
faddl
cmp
and
shlb
push
pop
aad
xchg
xor
pop
jo
jg
cmp
mov
xchg
xchg
and
push
push
jle
push
jne
jmp
mov
lcall
insl
pop
adc
movsb
mov
adc
mov
add
test
out
in
movsb
xor
fsts
leave
insb
add
scas
push
pop
xor
lcall
shlb
mov
or
and
cld
dec
clc
mov
xchg
push
sub
mov
mov
mov
or
in
rcrb
inc
cwtl
cltd
lock
int
subl
pop
mov
inc
test
loop
enter
push
mov
dec
movsb
push
cmp
push
dec
add
adc
push
xchg
out
sub
or
jnp
adc
push
mov
pop
inc
xchg
add
sbb
aaa
adc
inc
sub
arpl
and
sub
xlat
xor
pop
sbb
cmp
jge
aaa
xor
or
dec
dec
test
xor
rorb
inc
adc
dec
xchg
add
fs
test
mov
sub
xchg
test
mov
and
jge
test
int3
inc
inc
enter
cs
mov
dec
jbe
ds
adc
lea
bound
add
negb
xchg
mov
xchg
movb
enter
mov
mov
in
ret
dec
push
loope
fldenv
in
imul
pop
mov
dec
pop
stos
lcall
inc
xor
and
cli
ljmp
ds
mov
pop
adc
fwait
push
and
loopne
jne
jo
dec
inc
cmc
cmp
mov
xchg
pop
inc
cmp
jbe
and
lret
xchg
ret
enter
ficoml
clc
or
push
pop
lods
push
repz
xchg
repnz
pop
test
push
pop
aaa
mov
daa
xchg
xor
loopne
sbb
aas
loop
mov
cmp
scas
popa
lods
jge
dec
popf
add
xchg
mov
mov
add
syscall
andl
sbb
sbb
cltd
adc
xor
jno
jne
pop
and
or
pop
sahf
dec
sarb
mul
aas
inc
es
push
mov
and
push
clc
inc
adc
or
push
hlt
add
push
clc
adc
jge
scas
cmc
mov
dec
xor
inc
movsl
testb
add
stos
jmp
aaa
sbb
and
mov
dec
scas
into
pop
or
imul
xor
adc
fwait
xchg
jp
nop
sbbl
xor
jmp
add
pop
push
dec
dec
dec
inc
cmp
pop
mov
fdivs
or
xor
aaa
sub
or
or
pusha
and
movb
and
cmpsb
mov
dec
clc
inc
xchg
mov
pop
arpl
insb
sbb
sti
cmpb
add
cmp
jne
and
jmp
jb
loope
mov
inc
aaa
jbe
ss
pop
and
or
adc
pusha
gs
pop
push
mov
je
mov
lock
fdivrl
inc
stos
rcll
pop
dec
jge
pop
xchg
aad
or
jl
cmp
shrb
push
fistl
nop
fldenv
mov
les
pusha
scas
and
cmp
data16
push
or
leave
fs
pop
mov
pop
cli
xor
notl
mov
push
mov
popf
xchg
cmp
push
sub
cmp
jbe
sub
loop
mov
jno
push
int
outsb
repz
pusha
jb
and
loopne
lods
sub
sub
lock
outsb
mov
fdivrl
pop
mov
push
mov
adc
call
xchg
xchg
sub
mov
adc
test
stc
mov
out
movsl
outsb
fs
mov
adc
sub
adc
push
inc
jp
push
loopne
push
shl
pop
mov
ljmp
mov
pop
push
loopne
push
sbb
adcb
and
mov
inc
or
mov
pop
call
push
xchg
mov
sub
test
rcrb
out
pushf
repnz
icebp
cltd
hlt
mov
adc
or
decb
je
into
pop
gs
cwtl
sbb
les
sbb
ljmp
or
stc
push
shll
pop
popa
ljmp
xchg
sbb
xor
dec
inc
popa
je
outsl
jb
adcl
movsl
adc
or
jnp
or
pop
pusha
addr16
inc
mov
cmpsb
call
or
pop
std
stc
daa
repz
lock
push
push
xor
sbb
xor
inc
add
mov
or
fadd
mov
xor
adc
cmp
adc
int3
sub
test
cwtl
inc
cmpsl
je
mov
and
dec
mov
test
adcb
mov
nop
adc
add
mov
loopne
cmpsb
or
adc
adc
imul
lods
adc
pop
or
outsl
les
or
pusha
and
outsb
cwtl
jns
or
cwtl
ror
or
jb
nop
adc
dec
hlt
and
dec
in
lods
adc
jg
adc
sbb
sub
jl
sbb
adc
lods
xchg
mov
movsb
sti
adc
push
pop
sub
or
jl
sub
leave
cmp
cltd
leave
hlt
or
or
aam
in
repz
pop
ror
and
jmp
les
test
sbb
sub
mov
nop
into
push
popf
and
jmp
mov
and
dec
jl
nop
pop
mov
cmp
je
pusha
in
call
in
adc
or
mov
pop
add
pop
lods
int3
or
or
mov
shrb
ja
add
add
cli
push
nop
in
push
xchg
push
sar
add
xor
ds
mov
mov
fs
test
sub
sbb
js
insl
push
xor
in
cmpsl
jmp
xchg
jle
hlt
stc
in
pop
xchg
mov
add
cltd
mov
jl
addr16
pop
xor
lahf
out
shl
jge
or
cmp
jg
cmp
dec
mov
je
js
popf
jle
inc
inc
inc
inc
inc
out
test
fiadds
xchg
das
jl
fists
xchg
push
lea
xchg
idivb
push
std
mov
sub
sub
add
sbb
mov
sbb
les
or
leave
push
inc
push
enter
xchg
pushl
popf
inc
mov
xor
outsl
es
mov
das
sti
add
adc
inc
mov
cmp
xchg
pop
adc
cmpsl
pop
inc
lock
xchg
les
aas
lea
aaa
loopne
jbe
daa
jne
pop
xor
pop
lock
idivb
push
xor
pop
sub
or
push
inc
mov
and
out
in
cli
lret
inc
xor
and
jmp
cmp
ret
mov
mov
into
jo
aaa
jg
ds
negl
pop
in
cmp
pop
xchg
std
sbb
dec
push
cltd
lea
cltd
mov
outsb
add
xchg
mov
mov
cmp
mov
in
or
jmp
inc
dec
icebp
loopne
repz
imul
inc
stos
and
test
cltd
out
cmpsb
adcl
loope
xor
fwait
fs
cmpsl
ja
in
nop
push
push
addr16
pop
cmp
xlat
and
in
mov
addb
adc
or
roll
jo
cmp
cmp
jne
xchg
out
je
lods
inc
dec
out
xor
jae
add
inc
fsubrs
cmp
dec
or
mov
xor
ja
push
sahf
pop
push
hlt
xchg
dec
ljmp
pop
pop
lcall
pop
xchg
icebp
movsl
jb
mov
imul
jb
sbb
addl
dec
sbb
mov
mov
jne
push
xchg
mov
cld
jae
xchg
or
cwtl
jo
subl
push
inc
aam
or
fucom
outsb
out
das
repnz
push
xchg
inc
mov
cmpsb
xchg
or
cmp
pop
shl
bnd
jl
inc
lods
jge
push
imul
add
ss
push
sub
cmp
cmpl
daa
addr16
jbe
cmovs
dec
divb
mov
mov
cmp
loope
std
inc
mov
dec
fadd
mov
popf
dec
adc
and
enter
in
adc
lea
or
adc
jb
sarl
jl
cwtl
jl
pop
sbb
mov
sub
adc
adc
xor
sbb
pushf
pop
or
push
nop
loope
lea
loope
push
add
sub
jne
jae
pop
push
sbb
outsb
mov
imul
inc
je
sbb
cwtl
adc
sub
popa
mov
bound
data16
inc
mov
mov
arpl
pushl
xchg
push
inc
clc
mov
xor
insl
or
push
mov
pushf
or
xchg
jmp
sti
pushf
mov
push
mov
test
and
push
push
jb
daa
adc
jle
adc
mov
stos
dec
mov
rcrb
jno
xor
mov
shr
ss
cmpb
jne
movb
xor
mov
cmp
or
test
bnd
dec
test
jl
sub
pusha
push
sbb
shrl
push
add
dec
mov
or
je
rcl
push
test
pop
call
clc
push
ds
ret
scas
sti
pop
comiss
cmp
je
mov
mov
adc
cmp
and
inc
mov
aad
fildl
stc
push
enter
jb
icebp
pushl
fs
scas
lods
movsl
sub
ret
inc
push
pop
cmp
iret
sbb
push
pop
andb
or
das
mov
dec
sbb
sti
in
movb
inc
xor
sbb
inc
xchg
jle
mov
vpaddsw
fisubs
dec
and
les
and
dec
and
clc
lds
sub
aad
gs
push
cmc
rolb
js
sbb
rcrl
pop
movsb
lret
dec
push
cmp
sub
lahf
inc
fs
es
mov
xchg
cmp
jl
shrl
jl
push
flds
inc
pop
out
sub
jnp
pop
lret
mov
test
inc
xchg
sub
and
fildl
xchg
shlb
mov
pop
or
inc
adc
inc
xor
xor
inc
sbb
test
in
popf
mov
xlat
das
mov
xor
pop
push
xchg
movsb
pop
mov
stos
mov
nop
imul
mov
cmpsl
cmpb
aad
rcrb
xor
adc
adc
xchg
xlat
dec
aam
cmp
mov
xor
mov
cmc
or
cmpb
dec
lods
cmc
jge
xor
outsb
sub
pop
and
imul
insb
lcall
popf
movsb
push
or
sbb
pop
gs
lds
xor
add
pusha
inc
andb
stos
push
mov
repnz
xlat
iret
adc
test
xchg
roll
outsb
lock
mov
enter
dec
and
jle
jmp
inc
rcl
sub
ret
inc
hlt
inc
sbb
hlt
rcll
call
sbb
jmp
inc
inc
out
jbe
imul
rcrb
test
sub
or
divl
inc
push
adc
rcrb
pop
mov
stos
pushf
or
jp
dec
add
push
jg
push
mov
xlat
push
cwtl
dec
dec
push
jo
cmp
push
xor
push
adc
push
cwtl
or
push
dec
outsl
addr16
incl
imul
xchg
mov
lret
dec
sub
push
pop
faddl
call
push
push
int3
mov
mov
xchg
orl
lea
cmp
mov
inc
popf
pop
and
in
xchg
shrl
subl
and
sti
mov
push
dec
add
and
loopne
repnz
and
jnp
cltd
push
xchg
pop
icebp
push
das
lods
dec
pushf
xor
and
pushf
pop
int
xchg
add
push
mov
dec
lret
and
mov
jno
nop
popf
cmp
jne
pop
xor
cs
mov
pop
add
outsl
and
adc
and
cmp
inc
andl
dec
in
ljmp
pusha
out
inc
add
push
mov
aaa
sbb
or
adc
and
sbb
mov
adc
or
mov
push
je
cwtl
push
push
cli
leave
pushf
pushf
cld
popa
cmpsb
xchg
jno
mov
mov
dec
dec
pop
mov
orb
xor
xor
pushf
je
lock
movsl
adc
jo
xchg
xchg
or
sub
mov
lahf
xlat
addr16
or
cmp
mov
ja
mov
cwtl
jno
or
movsl
subb
adc
adc
in
inc
cmp
scas
stc
les
adc
int3
inc
and
mov
xchg
lods
jge
nop
mov
sbb
adc
ret
fwait
add
cmp
mov
or
sub
and
jl
xorb
sub
mov
add
pop
scas
cmp
xor
add
adc
push
bound
outsb
or
push
push
popf
lret
or
sbb
cs
cmpsl
mov
push
in
int3
fsubs
movsb
and
xchg
jbe
push
rep
jne
and
sbb
or
shll
jb
jno
imul
inc
push
movsl
add
out
mov
std
das
mov
and
sti
repnz
lock
or
scas
repnz
dec
mov
add
fidivrl
cmpsb
scas
mov
sti
hlt
xor
push
ja
or
int3
bound
or
adc
addb
push
or
and
dec
outsb
inc
fnsave
mov
inc
push
or
scas
push
inc
insb
and
imul
addr16
pop
pop
mov
jno
insb
pushf
jno
push
or
push
adc
add
nop
fsubrs
and
jmp
test
xor
and
outsl
xor
scas
sub
xchg
jno
adc
jne
xor
pop
adc
mov
imul
xstore-rng
cmpsl
inc
imul
adc
mov
cltd
push
adc
dec
ja
cltd
xchg
adc
dec
pop
imul
data16
adc
fs
pop
fcoms
pusha
jge
or
adc
or
mov
push
inc
enter
pop
aam
movsl
daa
popa
sbb
les
xchg
push
shr
xor
or
add
adc
jl
lods
in
and
aam
dec
popa
cmovs
or
adc
push
adc
xchg
call
or
dec
daa
pop
les
push
jp
aad
outsb
cmp
push
push
push
mov
fbstp
dec
repnz
call
mov
movsb
hlt
nop
push
loopne
push
mov
sub
xchg
les
pop
inc
jl
pop
dec
bound
pop
cmp
sbb
jns
cld
leave
outsl
push
cmp
inc
push
pop
das
mov
mov
inc
cwtl
loope
pop
dec
ficoml
daa
push
sub
mov
cmp
gs
inc
fadd
jp
adc
mov
add
mov
clc
add
push
je
xor
dec
stos
xchg
enter
iret
test
mov
xor
adc
sub
mov
aam
mov
dec
test
and
adc
inc
fmuls
mov
inc
mov
mov
sub
xor
cmp
mov
mov
mov
fxch
dec
enter
je
nop
mov
repnz
jl,pt
inc
les
cwtl
lods
dec
sub
clc
out
adc
add
cltd
sub
imul
ficompl
inc
fs
sbb
sbb
sbb
add
jb
dec
pop
jbe
pop
sarb
cmp
cmp
or
rcll
mov
sbb
mov
cmp
cmp
add
add
cmp
cmp
cmp
cmp
cmp
cmp
push
mov
mov
in
dec
in
dec
mov
stc
cmp
cmp
das
rol
leave
int
int3
leave
stos
leave
leave
enter
cs
xor
and
flds
and
add
inc
adc
xor
or
sub
icebp
xchg
or
ss
fisubs
or
inc
fcomip
inc
loopne
out
fwait
sbb
mov
or
dec
insb
loop
imul
mov
or
subl
sbb
inc
mov
jmp
lock
xchg
les
int3
aad
rcl
or
push
cld
and
hlt
pushf
sti
cltd
shl
xchg
stos
imul
inc
mov
inc
rclb
repnz
repz
je
add
pop
pushf
adc
dec
sub
jge
sub
les
mov
test
mov
insb
les
and
mov
and
pop
data16
ljmp
lret
andb
sbbl
mov
sub
cltd
pusha
imul
repnz
fldenv
xchg
xor
rep
imul
or
jo
popa
inc
mov
mov
and
inc
inc
fbld
adc
push
popf
jno
stc
adc
loop
mov
xorb
repz
sub
loope
adc
sub
xlat
movsb
mov
cmp
daa
or
dec
rorb
jg
pop
aas
mov
and
inc
xlat
in
adc
insl
inc
mov
mov
ja
out
cmpsl
pop
pop
jp
xchg
adc
scas
sub
sub
mov
mov
movsl
ret
jne
mov
xchg
mov
daa
cmp
js
aam
daa
xchg
outsl
pop
cld
mov
inc
add
sub
insl
daa
sbb
xchg
sub
in
inc
add
sub
jmp
pop
lahf
icebp
jno
xchg
push
sbb
push
mov
outsb
push
cmp
adc
push
stos
inc
cmp
imul
mov
lahf
test
xchg
pop
cltd
pop
data16
xchg
addr16
and
cmp
les
out
cmpsl
pop
cli
test
dec
call
mov
and
cltd
push
jmp
sub
dec
xchg
adc
mov
pop
sub
add
int3
insb
imul
dec
or
inc
imul
les
inc
scas
inc
xor
dec
movsb
xchg
sub
scas
gs
jae
and
push
sub
cmp
push
sub
or
dec
aam
inc
adc
mov
imul
scas
leave
cs
dec
insb
fs
rorb
jb
inc
enter
enter
lods
push
lcall
insl
in
jns
xor
sbb
add
std
mov
or
sub
xchg
in
push
jp
xor
mov
xchg
shlb
mov
pop
repnz
xor
add
aam
mov
aam
and
xor
fsubl
fldl
ss
mov
clc
imul
std
in
mov
enter
popa
test
lds
push
lea
mov
inc
aam
daa
cmp
sub
dec
inc
lock
outsl
mov
add
mov
dec
xchg
mov
mov
cmp
popa
call
pop
mov
pop
sub
mov
es
mov
jbe
fwait
mov
ficoms
dec
outsb
es
and
mov
or
icebp
stos
cmp
les
jp
les
icebp
jl
push
lock
insl
fs
jmp
xchg
cwtl
inc
dec
mov
movsl
inc
inc
aaa
mov
enter
cmp
adc
dec
mov
push
cltd
dec
clc
repz
inc
mov
cmp
mov
inc
or
lods
pop
imul
cmpsl
and
inc
stos
cmp
je
lods
dec
mov
or
dec
gs
sub
and
mov
or
and
dec
jnp
jns
stc
inc
or
call
jmp
cld
sar
dec
and
push
nop
dec
cmc
jmp
or
cli
inc
pop
inc
mov
jo,pt
inc
push
cs
xchg
sbb
sub
repnz
test
out
test
iret
rcll
roll
jge
pushf
and
jmp
jle
aam
adc
push
push
mov
shll
cld
mov
pop
push
call
iret
mov
addl
push
daa
push
pushf
push
sub
movsb
jl
loopne
lea
add
xchg
jl
pop
loopne
adcl
loope
dec
adc
pop
orb
xor
fs
rorb
and
xchg
mov
inc
jmp
ja
jns
inc
ftst
pop
insl
jnp
adc
pop
xor
fs
outsl
dec
adc
adc
dec
fwait
mov
test
out
jo
sbb
mov
pushf
cmp
daa
mov
mov
test
jl
adcl
mov
shlb
js
pop
adc
ljmp
je
inc
mov
adc
in
cmp
lea
mov
cltd
das
cmp
aam
pop
pop
les
sub
pop
and
cli
jb
jnp
jo
stc
mov
jo
cmp
pop
push
int
xor
dec
mov
mov
mov
mov
mov
dec
dec
gs
pop
dec
or
pushf
sbbb
mov
xlat
sub
fsubrs
jge
jl
inc
jb
push
mov
cmp
inc
sub
push
or
push
in
dec
or
inc
jo
ret
jp
add
pop
sahf
adc
mov
dec
mov
sti
xor
idiv
cmp
mov
or
les
outsl
shr
ret
and
push
and
jnp
lock
mov
mov
je
inc
mov
inc
xor
xor
call
push
clc
repz
sbb
dec
or
testb
inc
lahf
sub
addr16
sbb
jl
and
dec
dec
sub
adc
stos
cmpb
test
dec
mov
and
mov
dec
pusha
daa
lock
shr
jecxz
das
rclb
push
adc
cmp
dec
hlt
mov
aas
movsl
jb
and
pop
mov
cli
pushf
jge
popf
mulb
mov
out
idiv
xchg
pop
dec
push
out
ljmp
and
clc
push
jge
out
add
lret
stos
test
sub
ficomps
out
imull
push
shld
xor
mov
jne
aam
leave
push
cmp
and
cmp
inc
pop
or
sub
pop
inc
jecxz
test
jne
cmpl
pop
mov
and
push
cmp
jl
jmp
fmuls
sbb
mov
xorb
jae
sbb
movzwl
push
sub
lock
adc
fadds
jne
orb
lret
in
push
cmp
inc
addb
add
jg
leave
ds
leave
add
dec
push
test
inc
and
fbstp
push
pop
jmp
leave
repnz
mov
ret
sub
push
mov
and
mov
push
adc
sbb
inc
jae
call
cmp
inc
scas
hlt
mov
and
adc
push
and
mov
in
add
xchg
add
stos
je
or
add
ror
or
inc
dec
insb
sbb
data16
pop
imul
sub
push
dec
and
add
xchg
lds
je
cmp
cmp
add
ss
adc
and
adc
add
and
stc
or
addl
ljmp
rol
mov
adc
leave
fsubl
sar
dec
xchg
pop
xchg
fs
daa
sub
jmp
mov
test
xchg
mov
pusha
hlt
add
push
call
out
inc
dec
je
cmp
and
pop
mov
cmp
mov
adc
hlt
jmp
std
das
sti
or
mov
movb
and
mov
xchg
call
xor
inc
icebp
push
xchg
cs
mov
inc
sub
lcall
add
inc
or
mov
dec
or
pop
rcll
mov
and
or
mov
mov
adc
push
inc
add
cmp
or
sub
incl
add
mov
das
jp
adc
sbb
cmp
inc
jno
je
lock
and
xchg
adc
fs
cmp
pop
cwtl
mov
pop
repz
cmpb
sbb
inc
push
jmp
add
lock
imul
push
fimull
inc
jmp
rcrl
cltd
ja
xor
push
adc
inc
pop
ret
sbb
mov
jmp
cs
add
mov
mov
sub
pop
push
ss
push
or
push
out
xchg
push
dec
lar
call
je
dec
fs
xor
add
jmp
mov
jae
sub
and
jb
cmpsb
inc
add
xchg
sbb
repz
inc
adc
mov
data16
daa
jg
out
pop
add
scas
rorl
xchg
popf
push
das
mov
adc
cmpsl
xchg
push
cmp
cmp
inc
push
push
push
and
sti
dec
cmp
aam
mov
adc
enter
sti
adc
mov
push
cwtl
inc
cmp
adc
jae
xchg
jl
xchg
or
xlat
cmp
dec
mov
pop
and
cli
and
shlb
xlat
ds
rcl
mov
push
nop
xchg
mov
clc
mov
and
push
cmp
fdiv
test
out
xor
sti
adc
loopne
sub
push
mov
xor
sbb
lret
and
jmp
sub
neg
jmp
dec
xor
and
pop
icebp
cs
je
adcb
and
test
push
lods
andl
fs
xchg
jp
push
mov
in
call
cmpsb
aaa
es
fcomps
add
ret
jmp
and
jg
mov
xor
cmp
xor
cmp
sarb
inc
ljmp
xchg
mov
and
dec
push
orb
aam
and
rolb
mov
push
push
push
jl
mov
and
jne
dec
xabort
repnz
push
es
mov
sbb
inc
ret
adc
mov
or
sub
inc
dec
addr16
xor
ret
imul
inc
cltd
and
stc
push
dec
aam
and
inc
add
and
cltd
xor
dec
cmp
or
sbb
dec
dec
or
dec
out
ljmp
fwait
inc
xlat
pop
fs
xchg
sub
pop
add
and
ret
mov
shr
int
xor
xchg
jo
lcall
adc
fcoml
sub
dec
insb
pop
fwait
adc
push
jne
pop
mov
adc
and
es
adc
dec
mov
mov
fwait
gs
scas
add
mov
movsl
adc
pop
sub
adc
add
inc
popa
mov
lock
enter
sub
dec
out
pop
in
pop
cmp
xchg
xchg
cmp
mov
rorl
mov
fwait
cmpl
dec
mov
dec
and
leave
sub
push
cmpsb
sbb
add
adc
and
lea
push
sbb
aad
pop
loopne
js
lahf
dec
aad
adc
and
fs
mov
adc
mov
hlt
inc
sub
or
push
shrl
adc
and
jo
ljmp
add
cmc
pop
sub
outsl
add
mov
out
mov
inc
inc
pop
add
xorb
icebp
xor
and
test
sub
or
sbb
or
sbb
cmp
sbb
or
pop
or
jnp
sbb
lahf
testb
add
or
jmp
adc
sarb
loopne
jmp
test
jge
mov
les
add
cmp
or
mov
je
aad
sbb
adc
ret
pusha
stos
xchg
test
pop
and
enter
sbb
inc
adc
mov
or
mov
sub
push
sub
mov
sbb
aam
sbb
push
hlt
das
xor
inc
dec
and
adc
test
test
and
movsb
and
je
sbb
arpl
sbb
lret
dec
adc
sarb
push
inc
movb
add
sbb
cmp
js
lret
sub
jg
jnp
pusha
pop
sti
add
cmc
sbb
push
mov
xor
mov
sbb
cwtl
dec
sub
lcall
add
push
cmpl
xchg
jo
mov
pushf
lea
ljmp
cmc
sbb
movsb
rclb
insb
aam
mov
sbb
pop
or
gs
adc
pop
dec
adc
pop
gs
push
popa
jns
push
sbb
into
or
push
es
sbb
sbb
pusha
xchg
test
jge
cmp
movl
pop
movaps
sub
int3
adc
or
jmp
add
gs
and
or
or
repnz
testb
mov
mov
cmp
ljmp
mov
test
mov
mov
sub
xchg
ret
andb
sbb
push
pop
mov
int3
adc
xor
xchg
lret
popa
xor
or
in
movsb
out
xchg
ljmp
jno
das
shlb
fmuls
push
pop
push
and
fimuls
mov
add
xlat
inc
pop
push
adc
cwtl
cmp
lahf
or
jmp
adc
daa
mov
lret
xor
decb
stc
inc
jecxz
ja
pop
iret
and
or
pop
mov
mov
adc
push
sbb
cmpsl
or
repnz
rcll
push
stc
cmp
stc
push
push
or
mov
add
cwtl
mov
cli
add
cmp
mov
lgs
arpl
sub
movsl
les
aaa
repz
bound
ljmp
das
das
lock
and
dec
xchg
push
inc
movsb
push
out
mov
mov
test
cmp
mov
mov
jle
in
push
in
test
test
mov
das
faddl
mov
stc
popa
in
and
adc
imul
cmpsb
aas
push
jmp
inc
or
xor
je
mov
dec
and
mov
fs
movsb
cmp
or
pop
jge
mov
movsl
dec
adc
jg
aam
mov
sbb
test
test
lcall
out
dec
bswap
movsb
movsb
inc
mov
dec
sbb
aam
xchg
jno
push
mov
adc
xchg
stos
sub
lods
mov
mov
pop
sbb
cmpsl
cmp
xchg
and
mov
es
jns
stos
mov
inc
jnp
out
repz
mov
and
sbb
add
je
fsubr
loopne
ljmp
xor
and
push
push
sbb
inc
lahf
ljmp
add
rorb
sub
in
repz
mov
aaa
sti
movsl
and
jae
pop
fdivl
mov
or
sub
push
push
or
mov
movsb
sub
jge
adc
dec
out
out
dec
inc
ljmp
lds
jge
push
mov
out
sbb
sub
pop
inc
mov
xchg
stos
sub
movsb
ffree
mov
or
pop
inc
or
inc
lahf
aam
insb
mov
push
push
pop
or
les
pushf
mov
lret
mov
mov
inc
and
cld
pop
cmp
jge
repnz
adc
daa
sub
xor
les
nop
cmp
mov
sahf
stos
push
and
outsl
push
pop
adc
push
loope
adc
mov
jno
stos
or
and
ja
inc
fsubl
loopne
fld
pop
cltd
in
mov
outsl
loopne
ljmp
sbb
sub
inc
jp
sbb
sub
add
scas
cmp
or
inc
loope
push
add
cmpsl
lahf
pop
ret
cmpsb
mov
stos
cmpsb
sbb
mov
cmp
pop
test
xchg
sahf
out
and
cmpsl
and
cmpsl
adc
pushl
xchg
loop
aad
cmp
jp
or
rorl
mov
xchg
lret
dec
or
popl
lods
and
or
loope
scas
and
insb
cltd
in
cltd
sbb
sbb
adc
cmp
cwtl
cmova
arpl
fisubl
or
call
or
jge
movsl
add
call
mov
ja
jnp
inc
add
fcmovnu
or
cmpsl
jae
xor
movsb
rorl
fdiv
or
push
sub
scas
pop
mov
xchg
pop
dec
loope
cmpsl
or
add
mov
std
mov
mov
dec
dec
mov
cmp
jnp
inc
fldenv
jo
mov
ss
sbb
pop
js
lret
and
loopne
pushf
and
sub
push
jo
mov
adc
fdivrl
addb
sbb
mov
les
dec
lea
loope
mov
adc
cltd
jae
jle
xchg
nop
sub
inc
adc
ret
je
ja
int
pop
test
and
cmpb
and
aam
sti
sbb
inc
add
in
push
sahf
daa
in
jne
xor
pop
and
pop
shll
mov
xlat
or
xor
or
orl
xor
mov
fistpll
push
mov
xchg
into
mov
cmc
inc
push
test
or
mov
mov
cmp
push
or
mov
add
mov
sbb
push
xchg
sbb
xchg
fs
inc
push
dec
adc
addl
xor
or
mov
add
inc
push
test
mov
addl
fisubl
subl
in
sub
or
sbb
inc
adc
jl
push
xor
mov
pop
sub
leave
pop
xchg
sub
lcall
mov
out
dec
stos
add
push
xor
mov
adc
push
jmp
and
repz
test
add
stos
mov
pusha
sahf
lock
rcrl
aam
lods
jl
loop
ret
js
mov
outsb
pop
cmc
out
repnz
dec
add
xchg
push
fdivrs
mov
cmp
clc
mov
pop
inc
orb
or
mov
lods
out
cmpsb
leave
push
inc
fmuls
pop
shrl
sahf
and
gs
push
out
xor
push
adc
add
mov
loop
cmpsl
dec
xchg
mov
push
test
jle
aad
pop
lods
loop
lcall
dec
rcll
mov
fnstcw
pop
xchg
ja
and
aam
cmp
pop
cltd
loope
pop
sub
lods
xor
cmp
negb
cmp
cmpsb
push
lods
jge
fwait
mov
inc
cmp
lods
push
fmull
lea
pop
lcall
stc
imul
roll
jp
sub
mov
mov
jge
pop
pop
les
sub
inc
sub
scas
ja
xor
mov
or
push
cmp
adc
dec
test
jbe
test
xor
jle
add
inc
push
js
inc
test
inc
test
pop
repnz
mov
je
jl
or
jmp
cmp
in
cmp
in
and
inc
ret
inc
adcl
in
push
xchg
stos
sub
mov
call
nop
aam
mov
movsl
ja
fistl
dec
or
jo
push
xor
xchg
lods
mov
xchg
lcall
sbb
inc
sti
pop
or
ja
jo
movsb
adc
adc
cwtl
pop
adc
inc
or
sub
mov
add
inc
inc
je
pop
adc
mov
sbb
push
jb
xchg
aas
sti
lods
pop
pop
shll
pop
mov
call
adc
stos
dec
jp
cmp
mov
in
test
enter
cltd
xchg
adc
jo
mov
pop
or
je
mov
or
imul
das
inc
or
insb
cmp
sbb
and
and
add
sub
jns
adc
push
test
lret
dec
inc
gs
andl
out
nop
movsb
xchg
test
jne
testl
adc
leave
cmp
or
les
stos
sub
mov
add
pushf
sub
dec
ret
push
mov
pop
xor
mov
repnz
xor
sbb
or
push
push
lods
sbb
aam
push
sub
sbb
rcll
int3
loopne
shl
std
mov
or
inc
or
gs
mov
xchg
adc
adc
mov
outsb
clc
mov
ret
add
inc
ja
xchg
in
leave
aad
test
iret
inc
jno
and
sahf
cmpsb
ja
nop
cltd
jecxz
push
add
cmp
mov
xorl
testb
aam
ss
mov
mov
inc
cmpsl
and
repz
insb
push
jmp
test
dec
adc
sbb
movsl
insl
repz
pop
pop
xchg
test
rol
inc
xor
cmpb
mov
inc
lret
mov
push
popf
bound
cmc
outsl
lods
test
cltd
push
jle
mov
mov
rolb
in
nop
or
das
fwait
jae
js
out
mov
sub
mull
mov
and
dec
add
pushf
push
andl
mov
xchg
xchg
or
cli
lret
subb
call
inc
test
mov
adc
xchg
int3
or
test
arpl
fcmove
push
mov
shll
xchg
icebp
push
ds
pushf
fildll
cmp
adc
cmc
mov
outsb
call
adc
cmpsl
push
lcall
shll
pop
sbbb
inc
ret
test
scas
cmpb
cli
inc
les
jnp
ret
sbbb
clc
push
ret
adc
mov
xor
dec
dec
icebp
push
jne
mov
das
out
push
orb
aad
jne
xor
imul
adc
fnstcw
pop
lods
lock
jne
push
push
pushf
or
mov
add
jle
call
int
sub
jns
cmpsb
adcb
outsb
in
sub
pop
or
lcall
aaa
jnp
in
lds
ljmp
nop
add
dec
mov
int3
insb
mov
and
cmp
mov
cli
push
jg
lea
out
mov
lods
incb
je
mov
sbb
lods
adc
adcl
rclb
fisttpll
and
call
dec
loop
adc
xchg
mov
or
jmp
repnz
mov
das
cmp
cmp
push
hlt
movsb
dec
add
add
cld
inc
pusha
cmpsl
and
in
mov
mov
inc
das
add
into
mov
scas
mov
sub
cwtl
jb
movsb
repnz
call
dec
and
or
jp
jp
int
add
jne
add
pushl
adc
ja
loope
ja
pop
cmc
xchg
aad
adc
cmpl
sub
xchg
xchg
ja
cmp
mov
add
jg
je
ret
ljmp
and
or
push
dec
ret
sbb
ljmp
push
adc
pop
cmpb
lret
add
jns
cmp
mov
stos
sbb
jae
jne
les
mov
dec
sub
or
sbb
jae
and
xor
sbb
push
xor
push
push
xor
adc
mov
add
outsb
inc
mov
jmp
push
mov
cmp
cmpsl
shll
in
movsb
mov
adc
shlb
mov
sub
jae
dec
ret
sub
orl
and
sub
push
xor
nop
insb
mov
sub
xchg
jne
sbb
mov
pop
cmp
jmp
add
test
les
push
or
inc
ret
or
sub
inc
pop
xchg
sahf
ret
popf
xor
jp
sbb
jnp
pop
sub
xor
push
sbb
inc
dec
shl
mov
hlt
stos
es
inc
xchg
adc
adc
cli
sbb
call
aaa
mov
mov
daa
jge
jmp
jno
pop
cltd
jecxz
fidivs
lcall
mov
or
jmp
push
push
clc
repz
jl
lock
frstor
sbb
mov
adc
xlat
sbb
lock
adc
test
lea
bound
cmp
fidivrs
fwait
pop
and
sti
mov
lock
xor
cmp
add
adc
insb
aas
in
adc
inc
xor
or
xchg
lret
stc
jo
adc
sub
dec
gs
bound
add
loope
or
push
mov
mov
mov
mov
or
pushf
xchg
and
pop
adc
and
call
popf
jb
mov
push
loop
pop
pop
jae
xchg
mov
mov
pop
mov
adc
cmp
in
sbb
and
cmpsb
dec
mov
jl
pop
pop
cmpl
jge
xchg
push
jmp
pop
jo
mov
pop
test
push
cmp
aam
imul
fs
or
push
dec
or
and
xchg
sbb
push
mov
mov
cmpl
dec
orl
pusha
push
test
inc
xor
repz
test
mov
jno
call
lret
into
aad
xor
sbb
movsb
cmp
push
mov
jl
mov
dec
mov
das
sub
push
sbb
dec
cltd
neg
mov
jae
xor
loope
mov
adc
int
adc
xchg
jmp
xchg
push
ja
or
icebp
pop
into
std
mov
xchg
out
orl
sbb
adc
fs
jle
add
iret
push
adc
cs
lock
or
add
repz
fld
movsb
cltd
or
xchg
add
popa
outsb
jbe
fstps
mov
add
and
push
jecxz
jb
inc
mov
inc
das
cs
push
push
cs
mov
out
int3
mov
push
adc
pop
push
pop
sbb
mov
inc
dec
das
out
fs
inc
push
jne
repnz
mov
js
daa
je
fisubs
cmp
std
mov
fwait
les
inc
pop
xchg
adc
or
insb
push
mov
jmp
imul
or
fstl
je
enter
fists
subl
cmp
rol
mov
scas
xchg
mov
repnz
inc
cmp
or
lock
mov
jnp
int
cmp
lock
jg
je
adc
clc
cmp
push
sbb
mov
dec
leave
testb
idivb
push
and
adcl
call
fstps
push
lock
aas
icebp
scas
loop
sbb
or
xchg
push
cmp
sbb
mov
jmp
push
pop
push
mov
adc
push
ret
in
pop
aaa
sub
jae
scas
in
fs
add
movsb
jmp
jp
cli
dec
and
inc
xor
and
sti
aam
jle
cmp
fcom
daa
lock
pop
jmp
mov
ds
lea
dec
mov
adc
movsb
and
add
mov
in
out
xchg
cvttps2pi
sti
out
cmpb
dec
add
push
sets
outsl
xchg
xchg
mov
inc
pop
rcrb
dec
stc
ret
cltd
push
ljmp
or
mov
mov
xchg
lods
jge
fmulp
mov
pop
mov
jg
mov
pop
xor
jns
dec
jae
push
psllq
out
rcll
mov
negl
cmp
aas
in
adc
mov
or
xchg
arpl
xchg
mov
pusha
add
add
and
ljmp
adc
dec
cmpsl
mov
stc
push
xchg
cmp
push
dec
stos
add
mov
jbe
shll
je
sub
sbb
cmp
xor
repnz
mov
xchg
es
ret
pop
shlb
push
cli
inc
repz
push
push
push
jecxz
push
cmp
jns
pusha
fimull
es
adc
daa
repnz
and
dec
adc
xchg
jbe
inc
sub
nop
ret
stos
sub
push
inc
inc
je
aas
mov
adc
and
lds
xlat
jo
add
jg
and
cmp
mov
inc
cmpsl
adc
fdivs
imul
mov
sub
sub
not
xchg
outsl
add
dec
cld
jne
xchg
adcl
or
jne
or
imul
mov
mov
aam
mov
loope
daa
mov
cwtl
sub
jl
inc
or
ja
push
push
sub
je
lret
push
mov
and
cmpsb
sar
je
dec
push
sub
mov
arpl
ds
lcall
cmp
ss
mov
push
sahf
xor
dec
icebp
idivb
cs
shl
iret
pop
test
loope
lds
mov
mov
dec
xor
pop
imul
cmp
cmp
and
adc
fnstcw
inc
pop
int3
std
and
cmp
or
mov
jno
jg
xchg
jae
xchg
xchg
loope
sub
in
inc
and
cmp
xchg
ret
mov
data16
aas
push
movsb
adc
mov
inc
adc
push
jo
rcr
cltd
shlb
jle
or
mov
or
test
cmp
jne
loope
inc
sub
mov
nop
cmpl
and
rcrb
jmp
test
lock
push
dec
jb
lret
xchg
dec
std
xor
fldcw
or
push
mov
jae
and
cmpsb
xchg
push
sub
int3
popf
in
dec
fxch
mov
in
les
jl
inc
add
jp
or
and
adc
movsl
movsl
adc
call
adc
push
push
inc
cmp
cmp
jne
mov
mov
jmp
push
sbb
sti
out
pop
sbb
je
in
jo
push
sub
in
out
movsl
mov
mov
aam
enter
test
aaa
adc
jae
lods
outsb
push
sbb
xchg
mov
inc
daa
or
cmpsb
push
adc
cmpb
sub
adc
lahf
mov
clc
es
sub
dec
push
jo
in
repnz
adc
mov
lds
pop
mov
jns
adc
movsl
adc
mov
nop
xchg
xchg
ret
pop
mov
sub
xchg
test
or
movsl
jle
inc
icebp
mov
inc
lods
stos
and
inc
xor
cmpsl
sbb
popa
dec
xchg
cmpsl
pop
adc
xchg
insb
push
xchg
push
lret
push
lds
mov
lds
xchg
inc
sub
cmc
pusha
add
push
test
push
pop
sub
mov
xchg
nop
dec
test
mov
pop
inc
mov
jo
lahf
lret
xchg
aad
ret
mov
popa
xor
inc
xchg
cmp
adc
leave
push
push
sub
stos
out
andb
jg
aad
sbb
mov
jg
mov
jle
xchg
mov
testb
adc
orl
adc
rclb
xchg
or
push
orb
adc
sub
mov
ret
xor
jge
jne
orb
add
testb
mov
and
jg
xchg
lods
xchg
pop
push
sub
sbb
jns
xadd
fwait
jecxz
add
sub
push
adc
and
or
dec
pop
bound
push
sbb
imul
add
cmp
cs
and
mov
or
sbb
jnp
xchg
sbb
sub
leave
cld
and
sbb
mov
dec
sub
inc
push
push
add
sbb
or
lds
sbb
cmp
push
mov
or
and
adc
jmp
add
addr16
int
sbb
adc
sbb
pop
and
or
mov
mov
or
fs
scas
mov
fwait
xchg
pop
mov
mov
jmp
sbb
xlat
das
or
das
push
jp
or
mov
das
decl
call
mov
mov
mov
cltd
mov
jmp
sub
mov
push
mov
cld
or
in
xor
cmp
mov
test
xor
arpl
leave
mov
jo
rolb
cmp
cmpl
dec
cld
pushf
daa
xchg
push
popa
and
sbb
sbb
push
xchg
pop
ret
inc
ljmp
pop
pop
xor
cli
shr
dec
cwtl
inc
dec
push
popf
cwtl
nop
add
xor
sub
gs
movsb
div
dec
push
pop
jbe
adc
mov
push
mov
lea
das
jne
mov
dec
xchg
inc
adc
inc
fmull
or
adc
cli
inc
pusha
or
call
in
nop
sbb
lock
add
or
clc
and
daa
cld
lea
inc
push
jae
subb
xchg
ficoms
sub
jmp
lahf
or
std
sub
call
movsl
mov
pop
out
popf
inc
jnp
out
sbb
ret
and
cmc
in
sub
enter
mov
pop
push
jmp
jle
xor
cltd
loopne
mov
ds
add
dec
mov
leave
xchg
cs
fists
cmpl
stos
mov
sub
dec
mov
test
inc
inc
fisttps
push
stc
stc
pushf
jnp
fdivs
cmp
mov
pop
inc
push
das
hlt
mov
push
mov
cmp
fucomi
test
imul
cwtl
mov
dec
std
mov
fcoml
insb
sbb
xchg
and
add
add
sub
das
mov
adc
adc
mov
imul
cmpsl
mov
mov
loop
push
fsubl
inc
add
fdivl
jge
aam
dec
loopne
push
pop
rol
cmc
imul
push
or
js
xor
mov
pop
bswap
mov
test
mov
xchg
aaa
cmp
xchg
out
pop
jmp
stos
adc
scas
rcll
mov
adc
leave
xor
jl
mov
rcll
cli
jbe
lahf
mov
dec
dec
gs
call
fisttpl
sub
js
mov
jae
test
xorb
dec
pop
stos
and
and
pop
inc
sub
push
push
mov
mov
pop
fmulp
inc
jmp
xchg
adc
mov
mov
rorb
push
inc
push
jno
and
loope
jmp
jle
sub
xchg
cwtl
add
jg
xrelease
sbb
mov
xchg
mov
sbb
jno
ds
jbe
dec
dec
pop
cld
push
xchg
aam
imul
cmp
cwtl
jl
pop
outsb
adc
sbb
aas
pop
mov
and
int3
adc
push
push
xchg
mov
mov
sub
add
int3
jo
and
leave
jno
xchg
or
add
fisubrl
cmc
cmp
mov
lret
lock
xor
sub
mov
xor
xchg
push
sub
lret
mov
inc
insl
aaa
cmpl
sti
pop
sbb
sub
cs
test
dec
dec
shll
or
enter
loop
mov
out
dec
add
add
fcompl
sub
out
push
push
sbb
lcall
push
xchg
push
mov
rcll
or
jns
xchg
out
rorb
mov
and
cmp
hlt
imul
test
je
and
pop
and
xor
mov
repnz
and
cmpsb
lret
lahf
lods
test
adc
adc
popf
mov
call
ss
mov
adc
out
add
push
cmp
mov
ret
ja
daa
xchg
insb
test
dec
xchg
sub
jnp
and
nop
dec
dec
mov
inc
mov
nop
xor
add
xchg
movsb
leave
mov
sbb
mov
ljmp
bound
push
or
lods
pop
ficompl
flds
stos
pusha
push
xlat
inc
xchg
lret
dec
nop
push
repz
xchg
xlat
sbb
mov
jmp
ret
mov
cli
ja
push
and
shrb
pusha
nop
and
jne
fwait
adc
call
pop
add
push
and
and
xchg
or
cmpl
cmp
push
adc
cli
fsubs
shll
sub
test
jne
push
int3
mov
clc
cmp
lea
inc
mov
fsubr
fisttps
push
into
xor
stos
push
or
push
pop
pop
das
not
lods
negb
jne
xchg
lds
mov
in
or
inc
push
cmp
adc
not
adc
sbb
sbb
mov
push
pop
adc
dec
fidivl
lret
loop
int3
push
pop
add
dec
lock
mov
or
pop
or
clc
mov
push
iret
lcall
inc
mov
xchg
fsubrp
ljmp
frstor
mov
sub
daa
ret
lock
or
cmpsl
mov
faddl
mov
jo
mov
dec
add
int3
test
adc
adc
mov
cmp
xor
dec
push
and
mov
lcall
mov
sbb
imul
adc
xor
push
cmpsb
cmp
add
lds
sbb
pop
pop
pop
mov
test
daa
nop
dec
fldt
movsl
fnstenv
jne
push
repz
cmp
pop
lret
mov
add
mov
insb
sbb
outsb
mov
xchg
mov
mov
push
xor
xchg
push
pushf
icebp
and
fbld
or
pusha
test
incb
jmp
adc
daa
push
pop
jnp
dec
push
mov
push
mov
jne
lea
cmp
push
dec
rcl
push
mov
sub
push
and
mov
jne
inc
adc
jmp
push
add
out
mov
ret
mov
pop
add
sub
push
ror
lea
adc
mov
dec
xchg
fnstenv
mov
icebp
shr
or
push
icebp
cld
leave
je
inc
das
fcoml
and
lcall
jg
inc
lock
and
adcb
push
adc
or
mov
insb
cmp
or
and
xchg
fistps
xchg
xchg
dec
inc
sbb
and
pop
push
mov
fistps
adc
push
push
inc
inc
ss
imul
mov
push
enter
or
ret
enter
inc
fmul
sub
and
jg
sbb
inc
rcrb
add
mov
call
sti
cmp
jne
inc
or
cmp
pop
cld
insl
in
lds
xchg
jg
xor
push
jae
xchg
adc
xor
or
jp
sbb
xchg
ret
add
and
xorl
fcoml
out
pop
xlat
bound
adc
stc
adc
sarb
bound
jne
jmp
inc
pop
shrl
push
adc
adc
xor
minps
outsl
pop
out
arpl
sbb
inc
push
cmpsl
push
mov
jnp
call
adc
mov
dec
sbbb
mov
ja
movsl
rorl
subl
xchg
jmp
mov
sub
roll
pop
dec
or
fwait
jne
sahf
adc
mov
aam
ret
ljmp
jno
adc
cwtl
jge
dec
mov
mov
cmp
mov
int
insb
sub
nop
pop
add
push
push
adc
mov
push
or
sub
fisubl
pop
ret
jmp
jl
cmp
neg
mov
add
insb
pop
leave
lock
push
mov
push
fildl
dec
into
or
imul
cmc
dec
or
leave
dec
sbb
pop
fisttpll
popa
bound
push
add
or
mov
add
push
jmp
push
and
sbb
sub
or
mov
imul
add
xor
cmp
mov
movsl
sbb
mov
inc
xor
repz
fcompl
nop
dec
lock
pushf
inc
loope
loopne
scas
and
test
imul
add
mov
adc
jmp
inc
pop
xor
insb
rcll
cli
out
push
sub
xlat
scas
xchg
xchg
dec
clc
jo
test
fdivl
pop
inc
jg
int
in
jg
fiaddl
loope
cmp
add
jmp
jmp
movsl
push
xchg
xchg
insb
pop
xchg
aad
push
mov
sub
push
jl
push
dec
mov
adc
sahf
or
cmpb
pusha
mov
in
mov
call
lahf
sub
sub
paddsb
push
adc
push
adcl
mov
cli
push
fbstp
das
jbe
inc
lock
dec
ret
inc
mov
dec
mov
inc
sbb
pop
xor
jbe
mov
and
adc
xor
sub
add
sub
test
inc
and
inc
and
insb
sbb
outsb
shlb
cltd
cmp
pop
ds
xor
into
add
shrl
jne
in
cmpsl
push
lea
inc
addr16
sub
mov
mov
sub
int3
cmpb
adc
dec
pop
jle
pop
jns
ds
mov
inc
jno
loope
outsb
sbb
fdivl
push
insl
inc
dec
mov
pop
aad
pop
and
sbb
dec
jecxz
xor
pushf
adc
clc
mov
sbbb
cs
jns
lret
push
pop
and
movsl
sub
mov
das
jns
dec
xchg
in
jno
addr16
std
stos
inc
orb
mov
adc
stc
in
adc
push
pop
and
add
popf
sarl
out
xchg
jl
pop
cmc
cmp
push
cmp
bound
or
cs
or
js
xchg
jle
imul
pop
push
fimull
or
inc
das
xlat
imul
add
test
cli
mov
lahf
addr16
dec
mov
iret
sbb
push
mov
aam
dec
addb
negl
lret
adc
repnz
dec
adc
pushf
add
cmovs
scas
xlat
ss
mov
xchg
xor
push
into
jo
popf
popa
sub
adc
jne
bnd
stos
pop
or
pop
dec
sar
in
int
rcll
and
out
inc
mul
adc
mov
mov
sbb
mov
xor
add
dec
mov
fisttpll
dec
xchg
dec
pop
dec
sbb
xchg
sar
pop
mov
adc
push
push
jmp
inc
mov
pop
ret
jp
push
jae
jo
sub
pop
and
leave
jae
inc
push
add
xor
dec
mov
or
test
inc
inc
lods
in
jo
pushf
cmp
movsb
adc
inc
jecxz
xchg
mov
sub
lahf
in
mov
jno
repnz
jp
sahf
xchg
jo
push
popf
pop
addr16
sub
mov
in
and
sbb
dec
pop
cwtl
rorl
adc
ret
push
add
aas
test
cwtl
push
das
cli
push
nop
shrl
and
pop
faddl
and
out
scas
test
aam
into
shl
ja
mov
push
or
les
je
push
cmp
add
outsl
xor
mov
jl
adc
and
sub
lods
adc
aaa
std
cmp
sub
sub
pop
dec
les
sahf
or
xchg
cmp
and
in
sub
add
iret
fcoml
push
mov
adc
stc
sub
lret
push
imul
dec
cmp
cmpl
or
adc
popf
into
les
out
ds
pushf
dec
dec
fnstcw
insb
dec
pop
mov
jge
dec
push
jmp
sub
or
aad
add
pop
push
xor
cld
or
jmp
jae
gs
mov
daa
stos
repnz
stos
inc
je
sti
xchg
and
scas
pushf
jo
mov
rdrand
dec
aam
fildl
ret
shll
jae
adc
jno
sub
xchg
jmp
fisttpl
add
dec
xchg
in
xchg
cmp
bound
ja
fsubs
sbb
add
or
xchg
pop
int3
lods
repz
xor
popf
mov
inc
jo
daa
iret
mov
dec
in
ss
sbb
pushf
mov
and
popa
mov
adc
cwtl
jo
dec
pop
ljmp
jmp
mov
shrl
xor
daa
add
sub
data16
xchg
push
inc
lahf
push
test
por
mov
int
mov
mov
jbe
int3
xor
out
and
leave
shlb
push
or
fistps
mov
mov
cltd
adc
mov
or
xchg
cld
inc
push
das
int3
xor
ja
rcl
sub
sbb
and
push
inc
loopne
int
fimuls
and
out
dec
rorb
push
outsb
mov
mov
je
cmp
aad
add
mov
adc
and
out
imul
lret
shll
mov
mov
push
mov
out
xor
in
inc
xlat
adc
js
cmp
lret
icebp
js
sbb
xchg
cmc
dec
pop
out
popf
dec
or
fcomip
add
fisttps
out
leave
mov
outsl
lret
jo
pop
cwtl
push
cmpsb
mov
in
test
imul
aam
push
cltd
sub
enter
push
dec
or
and
inc
fistl
out
or
fsubrp
sbb
mov
add
fsubs
je
pop
je
imul
clc
or
and
adc
out
sbb
and
or
rcr
and
test
or
jg
jb
and
cltd
xchg
pop
add
and
cmp
test
loop
decb
dec
movsl
or
xchg
lock
daa
jge
outsb
and
divl
or
sarl
out
orb
adc
inc
xor
ds
daa
mov
push
inc
fsubrs
popf
push
je
inc
fsts
add
arpl
unpckhps
imul
das
or
in
and
pop
dec
mov
pop
cmp
divl
push
test
and
mov
jge
scas
jg
adc
mov
dec
and
movb
push
lds
mov
insb
loope,pt
in
jmp
push
push
outsb
insb
aad
nop
popf
cmc
mov
es
adc
sti
bound
cmp
jle
sar
enter
mov
leave
das
jne
pop
icebp
nop
cmp
and
call
or
sub
ljmp
push
add
inc
dec
xchg
pop
out
cli
inc
inc
dec
adc
jmp
pop
scas
and
dec
mov
mov
bound
mov
cmp
mov
scas
lea
and
inc
xor
pop
ret
xchg
imul
inc
sub
sub
jp
add
lock
adc
in
in
push
xor
lock
xchg
mov
sub
pop
negb
pop
mov
jnp
inc
pop
lods
sub
cmc
lcall
and
inc
dec
inc
ret
lea
mov
cmpsl
dec
adc
rclb
lea
int
arpl
dec
nop
pop
push
pop
and
mov
and
out
sub
push
push
frstpm(287
mov
push
mov
jl
test
mov
or
cmp
mov
loop
in
or
push
rorl
test
sbb
push
dec
in
dec
mov
xorb
mov
pop
jns
inc
adc
push
or
xchg
pop
popf
std
mov
pop
cltd
out
adc
movsb
mov
jno
adc
push
mov
adc
mov
pop
imul
push
or
ljmp
lock
movsl
call
out
clc
pop
gs
cmp
aaa
hlt
je
mov
adc
and
loopne
test
jp
stos
pop
bound
cmp
je
mov
movsl
stc
negl
ret
sub
sbb
inc
in
xor
loope
lret
les
data16
in
fs
test
xor
sbb
pushf
call
orl
pop
push
out
scas
ret
dec
loopne
or
icebp
adc
mov
add
out
pop
add
and
mov
lods
xlat
in
xor
mov
imul
push
dec
jne
and
mov
inc
mov
sarl
or
add
mov
out
xchg
sbb
cmpl
push
hlt
mov
push
sub
je
or
push
lret
xchg
mov
inc
ss
dec
pop
jmp
fsubrs
push
dec
shrb
and
inc
in
outsb
leave
lcall
repnz
cmc
call
pop
out
insl
lea
dec
lret
sub
pop
push
hlt
pop
mov
fmull
es
decl
dec
push
in
jbe
push
rcrl
sahf
int3
rolb
ffree
das
outsl
mov
xchg
ror
imul
lea
jmp
pop
jne
inc
pop
sete
pop
xor
xchg
mov
scas
push
or
lock
and
es
out
adc
je
enter
pop
insl
pop
jle
mull
mov
nop
imul
add
jmp
in
pop
push
jmp
mov
int3
and
adc
cld
or
mov
les
rcrl
and
int3
adc
adc
sub
out
cmp
test
sub
ja
ret
xchg
pop
pop
sbb
cltd
scas
stos
jge
in
push
push
fcoml
jmp
outsb
pop
pushf
test
fwait
scas
dec
test
inc
cld
mov
mov
jmp
xchg
cld
add
adc
jle
pop
orb
pop
mov
push
xor
or
xchg
ret
pop
sbb
mov
mov
pop
xchg
cmp
pop
jmp
hlt
dec
mov
aam
xor
dec
inc
pop
mov
sub
push
cmp
lods
sbb
sub
fadd
xlat
and
push
std
push
adc
sti
ja
cmc
leave
dec
sub
shrb
stc
enter
dec
jns
pop
in
movl
repz
push
dec
mov
inc
dec
icebp
add
push
pop
and
cmc
push
dec
js
and
jl
jmp
ljmp
jmp
sbb
je
rclb
lods
adc
mov
xor
xor
adc
stos
sbb
sbb
mov
and
mov
jg
sahf
lock
je
inc
test
test
push
jb
cmp
sbb
mov
daa
pop
test
cwtl
jle
cmp
rorl
cmpsb
cmpsl
in
daa
movsb
sub
cmpsl
dec
lret
adc
mov
xchg
or
icebp
and
sub
xchg
int3
hlt
daa
push
je
push
test
push
inc
dec
enter
push
dec
sub
mov
push
in
add
push
sub
xchg
adc
xor
sub
ljmp
adc
inc
push
mov
jmp
gs
loope
jnp
xchg
inc
fs
jo
pop
nop
xchg
loop
sbb
lahf
icebp
add
fistpll
mov
ret
pushf
cmp
pop
xchg
stos
daa
xlat
test
pop
cmp
fnstcw
test
mov
jne
adc
push
jne
sbb
or
pop
xchg
lret
testb
shl
pop
sbb
cmp
mov
mov
mov
sti
out
xor
hlt
jle
jmp
loope
cmp
xorl
push
sub
das
mov
cmp
out
pop
repnz
push
or
add
dec
call
jne
pop
sub
pop
pop
sbbb
mov
or
jg
xchg
stos
cmp
scas
xchg
jl
into
test
mov
ja
fisubs
int
sarl
push
mov
loope
je
push
push
sub
mov
push
dec
pop
lea
add
adc
xchg
cmp
add
sub
xchg
or
ja
stos
daa
js
cld
xchg
adc
jp
movsb
jle
push
xor
rorb
adc
lea
xor
mov
add
inc
lock
sbb
sbb
sub
pop
mov
in
test
or
mov
lods
movsl
pop
jg
xor
push
gs
mov
jae
mov
mov
pop
adc
pop
ja
push
stc
outsl
jae
pop
push
mov
dec
and
mov
cmp
lea
mov
jb
out
andb
lcall
push
push
clc
push
cmp
call
mov
mov
decl
mov
repz
xor
nop
push
call
adcb
xor
inc
out
fs
cli
fldt
xchg
sti
dec
movsl
ja
arpl
xor
mov
pop
cmpsb
or
jle
mov
fs
and
and
jo
push
push
and
cmp
fs
jp
and
inc
mov
cwtl
push
aas
inc
sbb
dec
mov
movsb
jne
cmpl
mov
and
or
sub
dec
mov
push
push
test
cli
dec
in
jne
dec
pop
clc
cmp
or
add
cmc
je
repz
sub
or
or
ror
sub
cltd
test
jae
sbb
movsl
stos
or
pop
test
lcall
add
and
adc
notb
jle
mov
imul
and
sub
adcl
xor
lods
or
push
sub
pop
pop
jmp
movswl
mov
cmpb
arpl
adc
pop
stos
loop
add
insb
pop
jle
inc
in
ret
adc
les
xor
and
sub
cmp
pop
cmp
bound
adc
dec
daa
cmp
sub
aas
adc
repz
movl
or
icebp
push
sub
sub
adc
enter
mov
movsb
es
pop
adc
js
cmpsb
and
pop
imul
fs
iret
js
incl
orb
ficoml
incw
adc
loope
jne
divb
orb
jmp
rorl
ds
lea
push
andb
pop
ljmp
adc
jmp
mov
cmp
push
setg
outsl
das
outsl
dec
push
add
fistpl
sarl
setl
pop
cmp
and
fimull
rcr
stc
push
pop
pop
sti
cmp
sti
and
mov
dec
les
xor
push
or
jecxz
jmp
jmp
test
dec
mov
cltd
sbb
outsl
sarb
jl
xor
dec
push
pop
lods
shrl
rcr
jne
popf
dec
out
sbb
or
add
push
aas
mov
pop
lcall
xor
jmp
and
inc
xor
inc
cwtl
and
pop
add
xchg
cmp
iret
sub
or
pop
adc
jmp
push
xchg
xor
jo
mov
mov
dec
push
call
jecxz
call
xchg
push
lods
ja
out
mov
sub
jmp
stc
and
push
xor
je
das
adc
add
xchg
xchg
add
repnz
cltd
or
and
inc
out
mov
and
add
inc
pushf
adc
add
jmp
in
jne
or
pop
movsb
push
sbb
mov
movsb
push
jns
fs
scas
int
das
xorb
sub
push
push
xchg
or
mov
ljmp
mov
pop
cmp
sub
fildl
sub
jg
movsb
pop
sahf
mov
or
lock
sub
mov
aas
fdivrl
xchg
leave
jb
inc
and
jne
xchg
and
push
enter
in
pop
repnz
ret
cmp
ret
inc
data16
popa
movsb
clc
cmp
jge
pop
iret
ds
mov
mov
call
inc
xlat
xor
jmp
je
cld
dec
jne
cmpsb
adc
xchg
jno
dec
sbb
push
dec
pop
mov
pop
test
ds
mov
imul
dec
sub
xchg
aad
xor
inc
inc
dec
adc
cmova
or
xor
push
imul
popf
inc
sbb
lock
lahf
movsl
hlt
xchg
or
dec
cli
aas
xor
fisttpll
mov
inc
out
xorb
push
adc
or
adc
pop
lret
xchg
jnp
sub
lods
in
daa
jge
sarb
lret
je
or
adc
pop
test
ret
imulb
lea
outsl
scas
dec
mov
dec
mov
shll
cltd
mov
lret
idivb
hlt
mov
cld
outsb
sub
push
and
lahf
add
mov
fidivrs
mov
lahf
jle
imul
imul
icebp
shrl
dec
push
jb
cmp
int
or
push
xorb
repnz
in
xchg
inc
sbb
pop
mov
inc
dec
adc
mov
mov
xor
add
das
movsb
dec
sbb
test
push
adc
push
mov
dec
mov
push
mov
stos
pop
adc
dec
scas
shl
ret
cmpsl
pushf
pop
icebp
mov
or
push
sub
pop
adc
fstpt
sub
pushf
mov
divb
xor
fiadds
adc
testl
and
mov
adc
sbb
adc
jne
or
push
aaa
jl
inc
test
sbb
je
ja
call
dec
or
push
pop
sub
nop
mov
in
test
lcall
cmc
mov
pop
sub
cmp
push
and
test
pop
cwtl
or
or
ja
or
cmp
dec
cmp
or
out
push
and
adc
add
mov
cmpsb
push
mov
cmp
dec
ficoml
cmp
pop
xor
inc
sbb
mov
mov
xor
and
jo
out
inc
and
and
sub
lods
jne
push
or
out
call
mov
xchg
sbb
repnz
and
xor
adc
pop
fdivs
adc
pusha
rorb
repz
cmp
or
mov
js
lods
push
xchg
sbb
or
in
enter
add
mov
je
stc
cwtl
subb
pop
or
test
or
imul
insl
mov
imul
jge
cli
mov
stos
xor
pop
popa
call
mov
pop
and
lds
add
pop
ds
adc
into
add
adc
inc
sbbb
pop
das
std
or
xchg
es
test
icebp
push
jg
push
movsl
cli
pop
sbb
pop
add
or
dec
ret
push
addl
daa
mov
insl
rorl
dec
leave
inc
push
push
pop
mulb
scas
into
imul
xor
stc
and
push
std
cmp
sbb
outsb
imul
or
dec
cmp
in
dec
pop
fisttps
ret
xchg
hlt
leave
push
push
jno
add
xchg
lods
jg
mov
mov
sub
inc
and
push
adc
test
and
mov
adc
mov
popaw
push
les
ret
pop
add
or
cmp
out
mov
les
mov
sub
cwtl
test
jnp
mov
aam
dec
mov
adc
xchg
scas
fsts
xchg
lods
mov
push
and
add
dec
inc
mov
mov
mov
lea
popa
dec
js
adc
sub
call
jne
push
bt
push
mov
xchg
notl
adc
mov
cmp
bound
mov
mov
adc
push
idiv
or
test
adc
xor
push
into
outsb
cld
xchg
or
mov
pop
loop
mov
mov
pop
adc
rolb
bound
repnz
adc
imul
push
jp
pushf
jp
data16
stos
pop
cltd
or
sub
dec
aam
int
cmpsl
stc
in
inc
mov
pop
inc
jne
mov
pop
mov
popf
iret
mov
test
xchg
dec
jg
test
xor
aas
push
pop
sub
js
jns
jbe
sahf
shlb
mov
xor
jg
sar
add
sbb
push
cmp
inc
xor
push
gs
or
cwtl
mov
or
push
cmp
or
in
or
fsubrs
cmp
nop
cs
shll
jmp
push
mov
cmpsl
cli
jge
stc
dec
nop
stc
or
mov
cmpsl
inc
xchg
jmp
dec
xorl
add
lods
imul
pop
mov
pop
ds
xor
adc
lock
push
in
push
test
pop
xchg
out
jbe
xor
pop
mov
inc
sub
add
jp
xchg
jl
jmp
add
xchg
leave
pop
jp
lcall
add
add
push
add
push
fistl
loopne
xor
sbb
or
lea
in
ret
call
mov
in
add
add
push
xchg
adc
adc
jle
xchg
and
jne
mov
xchg
call
test
cmpsb
aaa
mov
adc
adcb
adc
sbb
pop
cmc
fwait
mov
sbb
fisubs
imul
enter
adc
jp
jecxz
push
xor
jne
mov
dec
shrb
adc
push
nop
and
add
and
shrb
ss
pop
push
icebp
sbb
xchg
and
mov
cmp
je
adc
cmp
lods
sarb
call
mov
mov
daa
mov
dec
hlt
xchg
lret
mov
in
rcll
and
cmp
xor
rolb
mov
in
sub
lahf
inc
or
and
movsl
fisubrl
cwtl
push
xor
pop
push
sbb
pop
stos
aam
mov
jmp
inc
sbb
cmpsb
cwtl
sbb
das
push
sbb
scas
pop
xorl
add
push
addb
adc
xchg
push
out
dec
sbb
push
xchg
lods
popf
add
jbe
or
decb
push
add
sub
movsb
js
mov
sbb
cmpb
pop
mov
adc
test
mov
sbb
inc
cmp
adc
adc
add
lret
cmp
dec
jbe
stos
stos
out
or
xor
xorl
loopne
popa
pop
mov
insb
loope
cmp
push
add
xchg
and
in
sbb
lods
sbb
or
adcb
insl
sbb
nop
icebp
enter
add
sub
add
shl
cmp
int3
mov
add
jno
adc
nop
add
jmp
mov
inc
push
jmp
sbb
mov
or
pop
sbb
xchg
cltd
rcrb
sbb
mov
push
xchg
or
mov
push
leave
lcall
adc
loop
pop
adc
ss
mov
pop
inc
lods
mov
adc
xor
push
pop
test
mov
cmpsl
inc
jns
ljmp
dec
ror
lods
inc
dec
dec
adc
lea
sub
lods
or
call
aam
pushf
lods
and
dec
ret
push
xchg
lods
out
out
ret
push
mov
push
jecxz
dec
and
je
xchg
cmp
sbb
xor
push
ficomps
push
cmpb
pop
and
loope
xor
in
or
mov
popf
cwtl
mov
inc
fbld
adc
mov
in
inc
dec
call
icebp
xor
mov
call
dec
cmp
mov
pop
and
or
mov
fistps
pop
adc
fcomps
inc
in
add
ficompl
sub
ljmp
test
sub
rcrl
sbb
aad
xor
mov
inc
push
lea
or
pop
lods
push
push
stos
aas
cmp
cltd
mov
add
push
jae
adc
and
mov
sub
mov
enter
cmp
loop
xchg
lods
mov
dec
sti
mov
cmp
push
mov
push
push
inc
push
jno
push
push
mov
sub
out
pushl
aam
and
notl
in
sbb
adc
ret
adc
inc
mov
mov
sbb
lock
pop
jmp
mov
out
mov
aas
call
fimull
pop
push
ss
cmp
adc
xlat
sar
in
and
lret
and
adc
mov
insl
inc
adc
push
adcl
arpl
gs
xor
jb
ret
pop
mov
adc
or
out
sub
push
xchg
pop
cwtl
fsts
fnstcw
sar
mov
gs
pop
cli
mov
leave
icebp
lret
sbb
insl
xchg
xorl
xchg
pop
jae
xor
push
mov
mov
scas
dec
mov
jmp
das
xor
fwait
pop
xor
jne
adc
nop
sub
inc
sbb
sbb
pop
pop
mov
test
in
push
push
test
or
pop
pop
xor
test
add
sbb
xchg
fcmovnb
push
aas
jb
adc
loop
fstl
inc
nop
mov
leave
adc
inc
xchg
mov
ds
jo
ret
int
movsb
add
and
leavew
sub
jmp
jecxz
pop
jg
cmp
push
sbb
or
adc
dec
jmp
push
adc
arpl
mov
scas
and
scas
iret
xor
and
imul
dec
mov
enter
pop
movsl
inc
jmp
cltd
mov
sbbl
cmp
sbb
ret
dec
fcomps
imul
and
es
sbb
test
or
push
fadds
adc
mov
dec
dec
dec
mov
clc
add
inc
add
dec
mov
dec
adc
mov
add
xchg
mov
jle
jnp
sub
enter
sbb
push
test
popa
loopne
lea
fildl
push
xor
call
out
and
je
repz
mov
push
lods
mov
xor
add
push
dec
in
lahf
push
mov
jl
test
add
sbb
mov
pop
pop
mov
loopne
in
xchg
mov
dec
sub
test
mov
imul
xchg
fsubr
enter
sub
repz
cmp
pop
jecxz
sub
dec
jnp
and
call
jb
mov
in
stc
mov
rorl
out
pop
xor
push
int3
xchg
inc
jne
lds
push
xchg
fisubl
dec
rclb
cmp
fcomps
popf
mov
imul
inc
xchg
mov
adc
das
or
xchg
push
mov
mov
pop
and
pushf
adc
in
and
test
sbb
mov
sbb
mov
xor
inc
lea
push
or
std
mov
lds
test
fdivp
jecxz
pop
jno
sub
in
or
movsl
adc
and
dec
in
mov
add
jmp
fwait
stos
dec
fnsave
in
adc
data16
shl
pop
test
stos
xor
mov
lret
pop
jmp
dec
or
jae
and
xor
fwait
or
pusha
movsl
mov
push
or
inc
push
inc
dec
adc
repz
inc
cmpsl
rorb
inc
pop
and
enter
adc
insb
rclb
and
mov
adc
xchg
and
pop
pop
fsubrs
mov
sub
jb
rorb
pop
out
sub
or
in
and
adc
shr
pop
repnz
or
jne
test
lea
push
xchg
dec
in
mov
lods
cmp
enter
mov
add
rorl
sbb
push
aam
les
out
mov
dec
push
subb
dec
stos
pushf
inc
lock
cmp
jne
xor
dec
leave
push
push
nop
xor
push
push
push
inc
test
in
xchg
xchg
out
xor
mov
xchg
nop
mov
or
lcall
aad
xorl
ret
mov
ljmp
loopne
mov
sbb
fstpl
sahf
je
in
dec
cmpl
push
adc
xchg
arpl
and
jg
push
mov
dec
inc
aaa
push
adc
bound
xchg
inc
xchg
mov
mov
data16
shll
ds
and
mov
cli
jp
pop
add
scas
sub
sbb
lahf
jle
scas
cltd
xchg
mov
add
in
sub
lods
mov
push
lea
ds
cmp
ret
mov
xchg
test
orl
xacquire
sub
xchg
or
movsl
sub
repnz
add
cmpsl
popa
addl
clc
pushl
cmpb
xor
fisubs
adc
and
cmpb
test
fadds
das
mov
pusha
cmp
sub
dec
xchg
out
fcomps
fidivrs
pop
add
loop
mov
daa
subl
pop
cmpl
jo
inc
outsb
xor
xchg
shrb
addb
je
repnz
call
mov
movzwl
add
fimuls
push
pop
jmp
out
mov
and
sub
or
in
and
mov
xor
push
adc
add
mov
int
jbe
std
mov
hlt
inc
adc
out
mov
mov
aas
test
sahf
ret
cmpsl
sbb
lret
das
aad
lock
das
push
sub
rolb
popa
add
adc
cmpl
sbb
mov
aam
pop
repz
mov
push
push
mov
pop
dec
adc
fwait
cltd
pop
jmp
fdivs
test
xchg
cld
mov
cmp
loopne
xchg
clc
jae
leave
add
lock
je
adc
shll
add
inc
or
pop
push
cmp
jne
fstl
adc
inc
std
outsb
int
test
cmovl
shlb
push
out
out
add
daa
inc
cmp
sbb
fldenv
or
pop
sarb
out
std
outsb
cmp
mov
mov
push
xchg
test
aaa
sti
pop
xor
add
and
cmpb
sub
sbb
mov
cmp
jne
sub
mov
dec
add
mov
dec
lock
xor
pop
push
cmpsb
mov
adc
pop
adc
mov
and
inc
and
imul
xchg
mov
or
sbb
loop
pop
add
or
mov
pop
sbb
push
in
jne
add
jbe
or
mov
cli
gs
dec
cld
loope
clc
lds
cmp
loopne
daa
jmp
fisubs
in
sub
xlat
imul
dec
ds
pop
mov
push
sti
push
nop
bound
jnp
es
test
mov
sbb
repz
cmp
xchg
push
mov
loop
or
insb
cmp
push
cmc
mov
dec
aaa
or
nop
add
xchg
das
in
mov
pop
test
push
add
mov
lds
sti
into
mov
xchg
hlt
sub
or
add
cmp
pop
mov
lret
in
negl
adc
mov
and
mov
xchg
imul
arpl
loop
mov
and
xor
mov
jg
bound
stos
pop
cmc
adc
xchg
sub
push
sbb
mov
fs
cmpsl
int
scas
jge
mov
scas
push
pusha
jmp
gs
or
test
push
add
cmp
jne
mov
cmpsl
rcrb
adc
and
fs
fisubs
jg
hlt
pop
mov
movb
push
jge
dec
popf
scas
imul
adc
popfw
ret
lcall
xchg
mov
cmp
mov
jge
mov
xchg
insb
sub
repnz
lcall
mov
das
mov
adc
pushf
out
pop
push
lods
pop
shlb
jns
in
mov
lock
xchg
test
xor
dec
pcmpgtw
cmp
jnp
andb
jmp
pusha
mov
insb
and
sahf
pop
mov
cmc
and
mov
insb
movsl
jns
sbb
fstps
subl
push
jne
inc
movsb
push
mov
xchg
cli
nop
pop
repz
jb
dec
xlat
negb
and
daa
loope
fdivs
mov
sbb
scas
mov
inc
loope
dec
hlt
int3
push
clc
mov
mov
pop
fstl
xor
divl
mov
sub
sbb
lock
clc
movsb
cmp
push
xor
or
ja
lock
jne
insl
pop
inc
adc
dec
popf
add
int3
loop
sub
inc
pop
sar
mov
cwtl
ror
xor
mov
sub
fistpll
aad
stos
ljmp
lahf
clc
addb
cmp
jl
adc
sub
dec
movsb
xlat
pop
and
push
jle
mov
sub
pop
or
movsb
xchg
mov
dec
mov
or
pop
gs
adc
jp
adc
jnp
mov
lds
xor
pop
vcvtss2si
jg
add
loopne
sbb
push
mov
jecxz
push
adc
mov
sub
cmpb
cli
aam
icebp
cmp
int3
pop
mov
xor
jmp
xor
xchg
rcll
imul
pop
jmp
sbb
cmp
ret
mov
dec
outsl
or
or
cmp
into
xchg
testb
stos
test
test
xchg
mov
sub
or
daa
adcb
or
outsb
sbb
or
clc
out
lret
mov
les
loop
enter
pop
adc
movsl
jmp
aas
xor
mov
add
jns
jns
or
dec
inc
enter
or
mov
mov
sbb
inc
call
xor
into
sbb
lcall
inc
pusha
jne
jnp
mov
inc
nop
or
and
adc
adc
mov
inc
sub
lea
stos
xor
adc
jne
or
inc
in
dec
mov
adc
or
sub
loop
xor
in
stc
lret
das
pop
jo
hlt
stos
fwait
popf
or
cmpl
jle
loop
pop
push
or
imul
mov
es
mov
xchg
xor
mov
xchg
ret
lcall
xor
enter
inc
or
lea
mov
mov
dec
shlb
stos
or
fstl
mov
rorb
je
aam
test
adc
stos
inc
rol
dec
xor
xchg
sar
in
jecxz
pushf
or
and
xchg
sbb
mov
xchg
call
and
test
popl
inc
pop
xchg
lret
js
xchg
mov
xor
adc
cli
call
or
adc
dec
jo
cmp
push
popf
nop
sub
mov
xor
inc
test
and
mov
lea
movl
jecxz
sub
cwtl
mov
mov
xchg
and
push
adc
lods
daa
inc
shlb
lds
loop
push
mov
mov
adcb
rsqrtps
or
and
jmp
mov
xchg
jp
push
mov
and
out
mov
xor
sbb
pushl
jmp
push
aas
mov
gs
mov
cwtl
outsb
push
mov
in
push
cmpsb
jg
jmp
pop
push
push
xchg
fistps
flds
mov
lock
stos
movsl
push
jmp
dec
lock
inc
cmp
lds
lds
mov
jne
pop
dec
lret
scas
rcll
adc
mov
jo
push
and
jne
lea
jl
mov
je
adc
dec
mov
gs
sub
lret
fs
call
or
cli
ljmp
inc
xchg
add
hlt
xor
ljmp
dec
subl
fsubrl
pop
cmpsl
jg
fiadds
iret
and
jo
pop
jmp
xchg
les
sbb
adc
stos
ret
mov
movsb
mov
pop
xchg
in
aam
or
add
sub
jbe
out
pop
mov
call
scas
add
in
nop
dec
jge
stos
mov
jo
jae
mov
nop
xchg
mov
inc
movnti
mov
iret
mov
fadds
push
popa
jae
bound
repnz
pop
add
test
stc
inc
sbb
cmp
adc
faddl
adc
dec
mov
push
sub
and
out
xor
add
jmp
add
nop
pop
call
adc
jg
test
pop
jl
sbb
adc
and
into
push
and
or
xorb
icebp
test
cmp
or
call
inc
nop
shr
fs
adc
repz
push
mov
mov
pushf
lret
cli
xchg
ret
cmp
pop
sub
adc
and
pop
pop
stos
mov
pop
and
jae
push
push
jmp
out
sbbb
stos
in
test
sbb
and
mov
daa
and
rolb
xor
mov
and
scas
sahf
mov
push
jmp
jmp
mov
mov
mov
nop
and
inc
push
bound
sub
jmp
adc
dec
push
repnz
scas
sub
jmp
xchg
std
insl
in
xchg
dec
adc
or
jg
mov
jge
lret
sub
es
cmp
inc
jno
add
mov
inc
xchg
cmp
push
dec
adc
outsl
enter
sub
mov
adc
adc
sti
cmp
or
movsl
test
jne
call
in
test
dec
cld
jmp
scas
popa
inc
test
int
imul
pop
xor
pop
movsl
sub
pop
adc
mov
shrb
cmp
xor
adcb
or
sub
enter
xor
push
subb
lcall
imulb
repz
sahf
mov
jns
mov
je
push
push
data16
int3
bound
aad
mov
mov
push
cld
rolb
push
mov
imul
pop
into
mov
jnp
jns
xor
aas
mov
xchg
push
jns
cmc
fmuls
imull
push
cli
xchg
cmp
in
stc
pop
out
push
lret
xor
orl
inc
pop
imul
add
and
addr16
xor
test
sub
or
out
ror
rolb
sbbb
fsub
test
sub
inc
addr16
movsl
sub
imul
cmp
xchg
push
sbb
mov
adc
sbb
outsb
jne
add
jb
jne
les
outsl
bound
cmp
stc
out
cs
jbe
cmp
ja
icebp
mov
dec
mov
or
cmp
sbb
dec
cmp
adc
mov
dec
aam
xchg
rorl
movsb
enter
or
sub
cmp
jecxz
mov
sub
dec
mov
dec
xchg
pop
in
les
pop
outsl
adc
mov
dec
nop
dec
testl
xor
or
lock
imul
push
mov
popf
xchg
jb
loop
xor
push
push
dec
cs
adc
into
bound
sbb
sub
xchg
jmp
fsubs
cltd
pusha
pop
mov
inc
adc
cmpsb
inc
orl
mov
xor
les
mov
jns
inc
daa
das
adc
xchg
mov
dec
out
int
sub
cmp
and
or
es
mov
mov
or
arpl
ror
adc
mov
and
lret
mov
lret
aas
mov
fwait
stos
and
shrl
orb
mov
push
push
loopne
mov
mov
push
adc
pop
push
cmp
mov
stos
leave
push
dec
mov
inc
lret
lahf
push
hlt
fistpl
xchg
mov
fwait
and
pop
loop
xor
clc
inc
nop
or
dec
add
dec
adc
cli
dec
jp
dec
xchg
sti
mov
pop
clc
mov
mov
inc
pop
or
inc
dec
mov
nop
cmp
jp
sub
pop
push
subb
addb
lahf
pop
xchg
and
jb
dec
into
sbb
in
mov
pushf
ficoms
insl
inc
outsl
mov
xchg
pop
dec
cmp
ds
push
xchg
or
aas
lahf
inc
adc
test
cmp
ljmp
inc
in
loop
ds
push
mov
inc
mov
push
scas
or
push
insl
mov
jle
je
cmp
jne
movsb
iret
cld
insb
mov
xchg
lods
jle
xor
test
test
fisubrs
mov
cmp
popa
sbb
ret
xchg
das
lock
mov
in
adc
cld
ljmp
xchg
in
stc
loop
aas
pop
sub
sub
gs
push
rcrl
inc
sub
fst
imul
adc
mov
or
pusha
shrb
hlt
pop
insb
inc
xor
stos
data16
and
cs
mov
pushf
inc
testl
inc
mov
and
inc
out
bound
sahf
xchg
lret
mov
or
xchg
jmp
cltd
imul
adc
sub
movsb
ljmp
icebp
xor
xor
out
mov
shrb
mov
mov
in
dec
push
pop
aam
mov
cmpsl
cmp
xchg
cli
xchg
xchg
je
cmp
test
xchg
cmp
fdivrs
inc
sub
xor
jb
or
fsubp
adc
add
push
mov
stos
pop
dec
mov
sbb
call
jge
cmpl
jg
hlt
adc
std
mov
in
mov
mov
call
push
mov
shlb
pop
mov
and
movsl
cld
test
imul
sub
cmp
pop
daa
inc
cmp
add
adc
lret
dec
and
and
dec
sar
ljmp
sub
jne
je
pop
ja
push
pop
sbb
mov
adc
ljmp
dec
lds
jno
xor
xchg
je
mov
aaa
push
sbb
push
or
add
xor
adc
mov
xor
cmp
daa
inc
hlt
and
out
xor
xor
gs
imul
inc
pop
mov
adc
sub
js
push
or
sub
cli
ja
addr16
shrl
mov
dec
xchg
pop
adc
sbb
imul
jb
push
pushf
xor
add
fmuls
cmp
pop
or
lahf
and
mov
xchg
pop
xchg
or
mov
dec
movsb
inc
inc
push
imul
dec
xchg
decb
cmp
xor
push
in
adc
sbb
clc
or
scas
dec
jl
xchg
mov
adc
popa
sub
push
aam
cmp
xchg
pop
pop
push
addr16
mov
insb
cmp
sub
aad
mov
push
outsl
imul
jmp
dec
rcrb
mov
jb
into
lcall
cltd
idiv
mov
cmp
push
or
xor
cmc
mov
shrl
nop
sub
xor
xchg
pushl
mov
loope
dec
sub
rclb
imul
sbb
aad
ds
and
cmp
sahf
cmp
inc
xchg
rcrb
stos
jns
cmpsl
inc
f2xm1
or
in
loop
in
jno
jmp
in
dec
test
cltd
inc
sbb
xchg
adc
pop
add
lcall
xchg
loopne
enter
jo
mov
dec
lret
or
nop
jnp
out
fdivrl
mov
aaa
or
lahf
dec
cld
fcom
cmpsl
pop
push
mov
sub
hlt
out
or
jge
sub
das
cmp
sti
pop
inc
cmp
pop
jno
test
test
or
dec
push
fldt
es
imul
cmovae
push
sbb
and
jbe
xchg
loopne
lock
incl
jge
out
add
dec
cmp
pop
cs
push
out
or
dec
jl
mov
xchg
ja
xor
and
push
icebp
das
movsb
sbb
dec
pop
rorl
adc
dec
repnz
mov
add
enter
fadds
fsts
push
lock
pop
mov
xor
mov
fcomps
movsb
jp
or
sbb
and
mov
call
enter
mov
scas
xor
pop
orb
dec
jne
aam
popf
dec
rorl
in
xor
cmp
lds
sti
inc
aaa
cmp
xor
cmpl
cmp
pop
lcall
or
jb
and
dec
aaa
rorl
mov
sbb
push
mov
push
nop
cmpsl
dec
jge
xor
jnp
ret
dec
cmpsb
lret
and
notl
mov
add
call
and
inc
sub
xor
loope
mov
shrb
adc
xor
jmp
aas
mov
push
pop
add
adc
stc
repz
pop
push
jb
scas
mov
incl
ret
push
negl
cmp
pop
rcll
je
jle
out
mov
xchg
mov
cmpsl
loop
idiv
xchg
pop
jge
call
dec
push
or
bound
rorl
and
pop
and
inc
adc
jne
xor
or
dec
outsb
push
shll
inc
nop
xor
add
push
adc
outsb
in
addr16
sub
push
sub
push
pop
push
test
jns
or
shlb
sub
adc
sbb
fst
xchg
push
add
sahf
aam
and
testl
push
pop
bound
mov
push
call
pop
adc
adc
popa
ja
push
pop
and
leave
inc
inc
pushf
jp
fidivl
nop
or
add
outsl
hlt
push
imul
xor
ret
xlat
nop
xor
push
fstps
push
inc
fs
outsb
mov
mov
pop
out
lds
adc
fists
arpl
lods
js
adc
and
popf
jae
add
jne
scas
mov
outsb
sub
pusha
dec
sbb
xchg
in
dec
adc
inc
insb
test
mov
xor
inc
or
and
cmp
or
or
sti
fwait
insb
pop
adc
and
cwtl
mull
or
mov
add
dec
enter
in
inc
out
mov
lock
cmp
popa
inc
push
sub
arpl
xor
inc
or
dec
arpl
aam
int3
and
lods
mov
bound
push
icebp
add
movsb
sbb
add
call
xor
in
jmp
fldt
hlt
mov
dec
dec
adc
cltd
sbb
or
pop
mov
test
adc
pop
and
movsb
inc
jle
inc
insb
icebp
orb
test
mov
xchg
lcall
xchg
pop
das
pop
popa
adc
lret
stos
pop
clc
scas
pop
scas
xchg
mov
sub
xor
and
adcb
sahf
dec
aam
movsl
movaps
mov
call
mov
pop
test
and
or
aam
or
cs
aad
imul
cmp
push
xchg
inc
xchg
les
sbb
mov
jae
es
add
icebp
add
xchg
gs
jp
test
mov
cwtl
repnz
pop
xchg
hlt
scas
xchg
nop
push
pop
xor
lds
and
add
jecxz
push
sub
or
popf
test
cltd
fadds
push
push
xlat
test
sub
push
sub
add
push
xchg
mov
and
mov
cmp
insb
add
and
inc
movsb
push
inc
jecxz
orb
push
or
or
push
dec
test
cmp
push
mov
push
dec
xor
incl
pushf
sti
repnz
pop
cs
push
test
sub
lcall
jnp
aam
mov
push
mov
cmp
les
sbbb
popa
fs
ds
dec
adc
gs
cld
cmp
adc
or
adc
xor
sbb
dec
clc
and
lcall
pushf
lods
pop
adc
jo
les
addl
call
xor
insl
and
dec
fstl
pop
sub
dec
stc
pop
rorl
sbb
push
jae
test
push
cmp
adc
pop
xchg
and
or
xor
and
insb
inc
xchg
sbb
inc
pop
jno
adc
subb
jecxz
cmc
sbb
push
fwait
addl
mov
leave
add
cltd
push
xor
lods
test
stc
add
adc
push
fwait
lock
push
inc
fildl
js
cmpsl
hlt
jbe
or
fs
lds
dec
test
movsl
adc
mov
pop
fsubs
pusha
mov
mov
in
subl
dec
roll
xor
mulb
add
jb
ja
movsb
xor
pushf
movsl
iret
cmpsl
pop
mov
fsubrs
and
out
mov
test
or
jns
and
inc
push
mov
fisubrs
lods
imul
xchg
insb
dec
sub
or
cmpsb
inc
nop
pop
push
test
andps
je
repnz
push
pop
jo
dec
push
mov
push
dec
mov
adc
sub
xor
addb
cmc
rol
mov
aaa
sbb
bound
dec
sbb
sbb
lcall
cmp
out
adc
fadds
cmpsb
subb
outsl
dec
aad
xchg
lcall
dec
sbb
sub
jmp
push
movsl
lret
push
in
push
adc
and
lret
pusha
stos
movntq
sahf
fdivs
xchg
orl
outsb
pop
push
nop
mov
pop
adc
es
les
jb
inc
movsb
xchg
jp
dec
cs
dec
shll
pop
nop
add
or
sub
adc
mov
xor
mov
test
divl
lds
inc
or
inc
jmp
popf
fwait
repnz
pop
test
test
or
push
lods
jne
or
test
shll
aas
push
and
punpckhdq
inc
dec
mov
cmp
adc
mov
xchg
xor
sahf
or
lahf
add
adc
je
inc
dec
nop
mov
inc
or
inc
fdivrs
or
adc
sub
xchg
or
and
xchg
xor
xor
cmp
inc
inc
inc
add
inc
dec
dec
dec
dec
add
dec
push
push
push
push
add
push
pop
pop
pop
ret
dec
push
inc
xor
jp
shl
push
imul
decl
mov
fpatan
leave
das
mov
dec
out
or
das
dec
js
mov
daa
adc
dec
inc
repz
jmp
mov
test
pop
xor
sub
jne
mov
push
add
sbb
adc
add
sbbb
pop
sbb
fimull
jo
fcompl
sbb
jmp
shl
and
and
int3
lcall
and
pusha
ficompl
jne
loop
aam
jmp
sub
xchg
add
rcrl
jecxz
pop
jne
xchg
jo
sbb
mul
call
or
ret
inc
subl
cltd
mov
sti
pop
ss
notl
push
rcrb
jge
sbb
or
xchg
xor
push
add
mov
mov
stos
or
cli
mov
xchg
cli
sub
mov
mov
cld
out
jmp
mov
push
inc
shlb
push
cmp
mov
adc
imul
ret
hlt
xchg
jmp
push
adc
inc
out
ficoms
push
pusha
sub
fstpl
sub
mov
cmp
out
jmp
pop
inc
in
dec
leave
push
ret
std
outsl
xchg
add
jmp
stos
aad
or
hlt
inc
dec
aaa
movsb
adc
clc
push
inc
andb
dec
sbb
dec
in
std
jne
fcomps
nop
hlt
aam
push
popf
mov
cld
xor
push
imul
sub
or
pop
cmp
jl
sbb
push
xchg
ror
inc
js
loop
adc
add
mov
lahf
push
xchg
add
ret
mov
in
or
pop
mov
push
je
loope
pop
inc
sbb
adc
add
push
jp
sti
pop
sbbw
jmp
xor
addb
movsb
xor
sub
aaa
cmp
jmp
clc
ret
sub
mov
movsl
push
xchg
lods
popa
mov
and
add
sti
jmp
inc
jbe
aas
push
add
test
in
std
scas
mov
lahf
lock
mov
xchg
and
push
movzwl
mov
adc
scas
adc
jb
hlt
add
sub
or
xchg
xor
js
pushf
ljmp
or
inc
pushl
outsl
sbb
mov
jbe
mov
pop
add
sbb
cmp
jg
ret
testb
sbb
xchg
dec
jno
xor
in
stos
fildl
aam
adc
adc
xlat
inc
add
jmp
mov
adc
test
push
push
adc
add
pop
lock
jne
aam
lcall
adc
jle
jne
in
hlt
dec
push
cmp
data16
or
ja
cmp
xchg
xor
jmp
mov
in
test
hlt
movsl
sbb
gs
ss
cmp
out
in
mov
sbb
ljmp
lcall
xchg
dec
adc
aad
add
pop
data16
pusha
dec
inc
mov
pop
cli
lret
sbb
mov
sbb
subb
pop
pushf
loopne
adc
popf
mov
push
and
pop
dec
loopne
mov
sahf
nop
xchg
cmc
sbb
push
sbb
inc
imul
mov
cmp
enter
sub
arpl
xchg
inc
push
lods
into
xor
pop
adc
jl
xlat
dec
dec
pop
xor
cmpb
fs
jnp
bound
xor
fisttpl
mov
adc
repnz
popf
xor
fs
bound
movsb
sub
push
insb
pusha
scas
movsb
xor
xchg
push
lds
sub
inc
cli
popa
adc
sti
test
xchg
ficompl
mov
jbe
dec
ja
daa
or
mov
lahf
insb
int
inc
or
jbe
push
xchg
jle
jb
inc
and
and
test
jmp
and
mov
call
xor
mov
sbb
cmp
or
mov
xchg
mov
js
pusha
lret
push
das
rsqrtps
pop
and
mov
inc
or
adc
mov
adc
hlt
mov
jb,pt
cmp
cmp
pop
cmp
or
movsb
and
push
rol
inc
dec
pop
push
push
xchg
icebp
js
fs
lea
push
jl
mov
sti
mov
test
xor
xchg
jnp
imul
xchg
cmpsb
orl
dec
ss
dec
push
jg
cmpl
push
adc
icebp
pop
inc
cmp
pop
inc
repnz
stos
sub
or
js
data16
rorl
mov
xor
sub
jecxz
int
js
movb
test
sub
cmp
fbstp
inc
or
or
push
adc
leave
int
ret
pop
mov
imul
fistl
jmp
callw
inc
mov
dec
cmp
jle
push
ds
ret
mov
pop
jo
in
sar
mov
es
sub
dec
mov
pop
stos
or
and
clc
add
addb
stc
push
movl
lret
aas
sub
inc
pop
or
cmpb
and
daa
shll
xchg
mov
or
inc
cltd
cmp
sbb
in
mov
sub
xor
mov
test
adc
test
out
and
push
cmp
or
leave
js
jl
and
xor
jg
es
notl
iret
lahf
jmp
cltd
inc
cmp
xchg
cmp
and
mov
xlat
jb
push
fildl
jmp
dec
xchg
push
jmp
push
or
push
ja
and
shll
pop
sub
mov
dec
mov
cmp
xchg
xchg
or
lock
stos
in
rcrl
lods
mov
rolb
lret
mov
pop
movsl
mov
imul
sti
pop
cmp
xchg
xlat
xor
jne
mov
popa
jne
call
or
sub
iret
mov
std
sbb
pop
mov
cs
test
jo
enter
push
inc
leave
push
les
and
mov
add
add
xchg
push
pop
inc
pop
mov
push
add
mov
dec
and
mov
cmpsl
aam
push
and
addr16
pop
cwtl
stos
fcoml
push
jae
lds
pop
mov
jg
repz
testb
push
sub
mov
aad
mov
insb
mov
fldenv
jne
adc
pop
pop
mov
xchg
lds
sbb
mov
inc
cs
sbb
cmp
pop
movsl
neg
in
sbb
test
add
jmp
insb
inc
js
adc
sbb
mov
or
dec
push
pop
and
inc
popa
test
add
adc
mov
dec
adc
int3
call
jge
add
into
dec
jo
loop
sahf
push
inc
mov
jmp
pop
inc
pop
pop
inc
shl
cmp
ss
out
xchg
mov
pop
pusha
lock
xor
in
cmp
jge
cli
aad
fiadds
cmp
jae
mov
aaa
mov
lds
jb
mov
inc
dec
jne
push
pop
bound
mov
dec
mov
inc
mov
pop
push
mov
and
push
pushf
or
jnp
or
in
arpl
xor
fiadds
dec
mov
cld
push
fiadds
cmpsb
in
popf
jns
lret
jnp
cmpsl
push
jmp
dec
add
adc
sahf
stos
insb
adc
xchg
lea
cs
xor
mov
mov
xorl
mov
xchg
in
sub
clc
data16
and
std
roll
ret
push
in
rolb
movl
adc
jge
sub
insb
inc
xor
jge
mov
jno
pop
and
sbb
out
cmpl
enter
cli
mov
pop
test
insb
mov
add
jle
xchg
call
or
pop
das
cmp
adc
cmp
mov
xchg
loope
mov
dec
push
add
fnstsw
insl
xchg
xlat
push
jae
push
mov
pop
lods
or
cmp
jae
inc
add
sub
or
push
lock
mov
ffree
xor
pop
bound
imul
test
jmp
cs
or
jecxz
rorb
inc
lock
clc
add
and
jle
movsb
jmp
lods
sbb
lea
push
mov
dec
cmpsl
je
and
dec
in
xchg
movsl
lret
push
aas
inc
pop
jne
and
or
sbb
xchg
adc
pop
icebp
cmp
enter
call
icebp
out
int
dec
adc
push
adc
jmp
inc
mov
pop
adc
and
in
cmp
orl
lea
loopne
pop
mov
push
and
movb
movsl
push
sbb
adc
pusha
sub
push
das
push
sbb
in
sub
or
enter
mov
sub
jg
cmc
sub
cmp
movl
pop
xchg
add
ds
rclb
into
pop
xchg
scas
or
jle
adc
repz
or
dec
jecxz
cmp
sbb
jo
loop
movsb
sub
testb
mov
adc
fisttpl
sbb
movl
xor
or
mov
dec
xchg
xchg
add
rcll
mov
jbe
or
push
rolb
xor
icebp
clc
sbb
pop
adc
jmp
sub
add
pushf
lods
rcpps
mov
sbb
out
mov
inc
incl
push
fisubs
cmp
inc
sbb
movnti
call
shlb
and
and
inc
inc
pmullw
movsl
add
dec
dec
and
push
hlt
popf
and
pop
add
push
and
mov
push
xchg
sub
dec
or
cmp
mov
xor
and
add
gs
lcall
inc
mov
mov
sub
test
cli
mov
xor
icebp
mov
dec
flds
sbb
dec
jb
adc
xor
push
jno
hlt
sub
stos
sub
inc
push
sub
clc
adc
and
shrl
inc
imul
xchg
sub
or
or
mov
inc
adc
jae
jp,pn
mov
inc
push
dec
jnp
sub
cmp
sub
push
push
mov
nop
jmp
scas
xor
mov
cltd
xchg
hlt
pop
push
cmpsl
clc
into
cmc
xor
rcrb
pop
movsl
scas
adc
inc
push
cli
and
imul
dec
clc
push
push
cmpb
cmp
jne
mov
push
sbb
and
gs
push
hlt
and
movsb
pop
cld
and
sub
sub
sub
mov
jge
and
push
inc
shlb
out
pushf
mov
or
or
push
movsb
push
mov
sub
loop
int
xchg
loopne
mov
sub
adc
pushf
mov
inc
movsl
sub
shl
xchg
or
and
dec
add
push
dec
daa
jne
adc
xchg
and
repnz
jne
dec
dec
jbe
nop
bound
sub
loope
std
push
enter
in
push
sub
aam
adc
orl
sub
mov
bound
mov
ljmp
aaa
jb
or
add
cmpsb
push
dec
xor
pop
pop
push
data16
inc
test
dec
xchg
in
xor
in
ret
or
cli
push
pushf
or
adc
dec
and
dec
jmp
pop
xor
popf
mov
xchg
sahf
in
push
pop
pusha
xchg
mov
inc
dec
xor
mov
sbb
pop
dec
mov
bound
clc
lea
xchg
scas
fs
movsb
pop
arpl
inc
das
out
rcrb
dec
pop
sub
test
jmp
adc
pop
cmp
call
cmp
mov
or
xor
lret
lea
push
clc
mov
loop
outsl
cmp
lods
aam
clc
and
xchg
lock
negb
es
je
mov
push
jno
or
adc
scas
test
outsb
push
jns
mov
dec
test
imul
in
xor
sub
jge
lds
lods
inc
aaa
adc
sbb
loope
dec
or
adc
push
scas
in
aad
sub
jge
xchg
and
mov
sbb
push
outsb
sub
pop
das
pop
mov
adc
push
insl
hlt
das
inc
xchg
loopne
push
adc
imul
loopne
call
xor
loopne
sub
jle
roll
loopne
mov
fdivrs
jb
push
rclb
shll
cmp
notb
fimuls
aam
add
pop
or
sub
cs
das
push
adc
push
mov
divl
sbb
push
jl
adc
jge
fcomip
lret
inc
sbb
imul
rolb
adc
icebp
sbb
aas
mov
loopne
sub
dec
sub
je
adc
pop
movsl
jle
inc
pop
xchg
xor
sbb
jmp
outsb
xchg
adc
jp
xor
adc
frstor
imul
movsb
dec
mov
push
adc
sbb
cmpl
js
adc
mov
or
aaa
divl
mov
stos
jb
lods
and
test
push
sbb
fcom
xchg
xchg
rorb
pushf
or
std
sbb
pop
xor
pop
push
call
in
adc
addb
ret
xor
cltd
fmuls
mov
add
add
adc
xchg
fmuls
xor
adc
iret
hlt
inc
inc
xor
in
dec
or
push
mov
and
mov
jg
jmp
jne
outsl
mov
test
or
add
or
int3
jmp
pop
push
subl
jne
sbb
imul
sub
sbb
outsb
pop
xchg
inc
push
pushf
daa
adcl
mov
adc
push
int3
loope
inc
xor
inc
cwtl
ss
fisttpl
cmp
int
addb
inc
divl
jg
test
mulb
xchg
push
in
push
ljmp
mov
xchg
lock
inc
into
or
xchg
pop
mov
add
cld
test
xchg
dec
dec
bound
out
loop
mov
and
add
bound
inc
jmp
insb
pop
push
xlat
in
popa
movsb
sub
xchg
mov
cmp
dec
mov
aam
popa
shll
xchg
jmp
add
push
dec
nop
sbb
or
ret
je
faddl
dec
push
ret
es
lods
stos
xor
repz
xchg
sub
mov
xor
cmp
adc
call
push
aas
cmp
or
xor
pop
insl
dec
std
add
jg
xchg
idivb
mov
imul
hlt
daa
popf
je
xchg
and
lea
cmp
push
and
sub
adc
data16
jle
stos
pop
cmpsb
hlt
lods
scas
mov
cmp
fsubrl
movsb
mov
inc
or
dec
insb
add
mov
sub
xchg
dec
pusha
push
andl
cmp
outsb
test
xor
adc
mov
add
pop
push
ja
adc
mov
cmp
test
mov
cld
int3
mov
movsl
adc
enter
mov
jle
push
jnp
mov
adc
fiadds
stos
out
das
data16
sub
in
mov
or
fisubs
popa
dec
inc
inc
inc
lods
sub
mov
mov
sarl
xchg
inc
mov
leave
jne
and
adc
dec
stc
stc
dec
lock
movsl
xchg
or
jg
inc
pop
ret
data16
xor
cmp
lods
lea
aam
adc
ss
stos
lret
cs
xchg
sub
cmp
jnp
scas
lods
add
rcrb
cmp
dec
mov
cs
and
imul
push
shrb
js
nop
push
mov
movsb
test
mov
mov
subl
pop
xorb
jmp
out
rcrb
test
in
jl
inc
lcall
aad
movsb
dec
ss
inc
lret
adc
and
mov
dec
adc
rolb
into
jnp
and
orb
clc
pop
xchg
xor
jmp
push
pop
push
xor
scas
je
loop
dec
sarb
je
dec
sub
mov
cltd
inc
fcmovnb
clc
nop
or
nop
xorb
fs
or
push
je
test
jne
je
loop
jnp
add
mov
jb
sbb
in
or
sbb
sbb
and
sub
fisttpll
sbb
xchg
sub
adc
inc
push
cmp
mov
pop
and
je
cmp
loop
xchg
sbb
in
dec
push
lods
xor
mov
push
out
inc
adc
stos
mov
and
enter
pop
jne
fs
pushf
into
xchg
mov
push
bound
lock
push
inc
dec
dec
das
xchg
xor
jp
mull
fiaddl
dec
loop
imul
daa
xchg
stos
push
out
mov
push
repz
xchg
call
fdivl
and
push
xchg
or
cmp
or
call
pusha
out
add
notb
xlat
cwtl
cwtl
das
call
clc
cld
dec
psubsw
dec
or
ficoml
sub
out
fisttpll
sbb
adc
xor
scas
push
push
adc
hlt
xlat
xchg
jge
or
pop
pop
add
sbb
xchg
sarl
nop
pop
sarb
aam
cmpl
arpl
imul
sub
scas
sub
adc
jmp
push
dec
push
out
xor
adc
cmpl
xchg
jb
imul
call
xlat
shll
lret
pop
into
sbb
ja
jmp
ds
push
sbb
cmp
push
ret
dec
divl
sbb
pop
mov
pop
dec
daa
or
ret
xor
xchg
shlb
jne
inc
fs
repnz
fadds
or
xchg
movsb
sbb
sub
mov
mov
jbe
adc
jns
sub
pop
cmp
test
inc
ja
js
sbb
push
insb
imul
lea
sahf
jl
or
and
push
insb
out
mov
incl
fs
adcb
or
pop
mov
data16
pop
push
sti
xor
bound
xor
mov
xorl
adc
or
mov
inc
mov
inc
adc
fnstsw
cmp
sub
fidivl
dec
movsb
xlat
xor
xor
sbb
sub
and
and
and
stc
cmp
enter
cmp
inc
aas
mov
and
je
jne
push
mov
pop
je
in
sub
test
leave
adc
jne
int3
xchg
ds
xchg
and
call
je
mov
xchg
iret
les
out
and
jg
add
push
std
jle
cwtl
adc
orl
adc
pusha
mov
adc
or
jl
pushf
cmp
pop
subl
xor
lock
cmp
sbb
jecxz
pop
lods
jle
inc
nop
mov
sub
and
cmp
call
icebp
push
es
cwtl
adc
add
cld
lods
xor
std
andb
xchg
jns
fisubl
mov
in
ljmp
inc
shll
out
mov
pop
jg
aad
cmp
data16
loop
movsb
popf
mov
cmp
lock
mov
les
popl
fstl
mov
mov
mov
and
adc
pop
je
add
pop
clc
stc
lret
xchg
push
mov
cmp
jp
xor
inc
sbb
mov
cwtl
pop
lock
enter
std
or
lret
adcl
mov
or
js
inc
mov
in
push
jge
push
jmp
sub
ss
push
and
gs
dec
iret
test
mov
cmp
lcall
dec
inc
add
rolb
mov
pusha
lds
sub
sub
cmpsb
pushf
js
mov
les
rolb
call
jae
adc
loope
out
pop
sbb
cli
aaa
lea
pop
in
pop
mov
iret
push
in
add
insl
enter
pop
shr
int
pop
mov
loopne
clc
mov
jmp
pop
flds
mov
lcall
mov
fstl
mov
orb
lea
push
push
xchg
mov
pop
jbe
ds
mov
push
dec
das
adc
jmp
inc
fs
es
jg
sub
or
stos
or
xor
je
sbb
pop
je
adc
out
insb
movl
add
clc
pop
mov
sbb
pop
data16
push
int3
and
stc
in
jcxz
loopne
inc
mov
loope
insb
and
sbb
mov
mov
xchg
xchg
adc
mov
es
jno
and
jae
inc
jmp
cs
decl
pop
and
cmp
je
xlat
jno
inc
movd
data16
push
cmc
adc
test
scas
lods
pop
sbb
push
mov
fildll
cs
rorb
inc
mov
cmp
jle
les
adc
loopne
adc
or
fdivr
push
xlat
jg
in
pop
inc
sub
push
lahf
adc
jo
fneni(8087
inc
or
push
sub
push
push
xchg
scas
adc
xor
sbb
jno
lahf
popa
inc
movsb
sbb
gs
in
xor
adc
addr16
ret
jne
jnp
cmp
push
pop
mov
pop
lods
inc
jle
xorb
mov
ljmp
addl
in
and
sub
call
mov
push
jl
jmp
mov
push
bound
mov
ljmp
xchg
ljmp
fadds
mov
scas
mov
mov
xchg
aam
lock
mov
mov
cmp
xchg
scas
inc
mov
mov
mov
sbb
xlat
outsb
fdivrs
sarl
test
mov
inc
call
adc
mov
mov
movsl
ss
mov
aas
inc
xchg
push
lret
pusha
adc
dec
xchg
mov
mov
mov
mov
arpl
add
fisttpl
cwtl
sub
push
enter
inc
pop
imul
push
xor
inc
movsb
inc
scas
and
fsubrs
push
xchg
or
les
add
mov
mov
fmuls
jl
and
jg
push
dec
rorb
dec
inc
jne
lret
scas
popf
nop
and
jmp
jp
jne
cmpl
mov
cmp
sbb
mov
dec
xchg
or
push
and
cli
jne
test
mov
inc
pusha
inc
dec
dec
and
mov
mov
push
sub
in
popa
test
mov
outsl
mov
xchg
in
cmp
inc
cmp
mov
lods
out
xchg
sti
mov
loope
outsb
fistpll
mov
xor
mov
pop
repnz
lock
mov
inc
stc
cmp
adc
push
push
mov
pop
jae
cmp
xchg
stos
shrl
xchg
push
imul
mov
push
movzwl
dec
ret
lret
add
jne
xchg
pop
jge
out
je
movsb
adc
mov
sbb
and
or
mov
hlt
cltd
xchg
xor
ret
stos
cmp
and
ljmp
and
mov
push
xchg
add
jne
mov
clc
imul
es
or
mov
aam
popf
inc
imul
ljmp
ljmp
mov
jae
in
scas
cwtl
add
cwtl
xchg
es
lahf
xchg
adc
jmp
ret
dec
xor
aam
mov
js
icebp
cmc
outsl
es
out
mov
inc
hlt
shl
pop
fisubrs
test
fidivrs
pop
rclb
stos
lret
std
dec
roll
inc
outsl
test
and
sti
jns
inc
mov
xchg
and
or
cmc
or
jmp
lret
ljmp
jno
inc
cmp
lahf
pop
mov
jge
iret
xor
mov
cld
pop
in
mov
or
loop
mov
ret
pop
in
and
push
jns
dec
rclb
test
sarb
adc
mov
xchg
and
jg
fisubrs
push
pop
add
dec
imul
jle
sar
in
push
xchg
or
sub
adc
adc
jbe
xchg
fdivr
std
jb
pop
and
das
js
dec
cli
loop
dec
outsl
cmp
fbstp
ja
add
push
dec
out
push
ss
push
add
ds
xor
in
mov
cmpl
ret
or
rorl
sbb
gs
out
ljmp
je
rcrb
lahf
sbb
inc
dec
pop
out
imul
and
cmp
dec
pop
mov
mov
icebp
hlt
test
mov
sub
pop
sti
sbb
ret
mov
add
rolb
movsl
dec
lret
cmc
movsl
pop
in
popf
push
dec
addl
adc
testb
and
xorb
out
jno
mov
pop
inc
sbb
dec
pushf
push
int
repz
rcrb
popa
scas
sub
outsb
dec
insb
shl
and
stc
cmp
or
add
sub
les
in
or
add
repz
psrld
or
movsl
fucomip
adc
inc
inc
stos
mov
xlat
das
fdivr
cmp
dec
jecxz
hlt
jmp
inc
aam
inc
pop
mov
add
sub
out
cmp
daa
adc
push
cmp
sub
push
sub
cmp
and
inc
add
pop
cmpsb
fs
ljmp
movsl
add
add
rolb
ret
inc
sbb
mov
popa
or
and
jb
loop
outsl
ret
bound
or
mov
lods
mov
jnp
lods
stc
cmp
lea
or
jmp
pusha
push
sbb
sub
push
outsl
les
cld
std
inc
into
repnz
xchg
push
push
xchg
mov
xchg
push
lods
stc
shlb
add
movb
inc
mov
push
inc
adc
xchg
push
cmp
cmp
sbb
clc
jb
jg
test
mov
pop
jo
icebp
dec
cwtl
stos
int3
cmovnp
push
or
sub
pop
cmp
push
sbb
sbb
test
je
mov
cmpsb
sub
cmp
sbb
dec
add
push
jnp
or
sbb
mov
call
mov
inc
repnz
adc
cmc
out
dec
push
push
adc
inc
cwtl
mov
aam
dec
push
push
pop
or
and
ja
leave
or
xchg
jl
fistpl
push
sti
pop
sbb
mov
out
inc
mov
shlb
push
lret
ljmp
mov
addr16
bound
jmp
out
inc
xchg
mov
sbb
std
push
push
inc
in
das
jb
xchg
jne
fcomip
in
xor
or
jl
mov
test
cmpsl
rclb
rcl
inc
daa
push
lock
cs
lea
jnp
test
cmc
aas
es
dec
jbe
fs
sub
mov
enter
sarb
ja
mov
jbe
mov
ja
push
pushf
dec
das
fstpl
push
lcall
mov
xchg
mov
rcl
rol
mov
sbb
mov
cmp
aad
add
jmp
xor
jg
cli
je
adc
dec
or
push
dec
push
xor
xchg
mov
push
xor
inc
pop
pop
push
scas
mov
xchg
adc
sbb
inc
cmc
and
inc
testb
icebp
push
in
fsubrs
jmp
adc
pop
ret
outsl
push
jge
xchg
push
dec
mov
jnp
fidivl
clc
or
or
js
push
lods
imul
fists
mov
push
xchg
sbb
mov
pop
mov
popf
jne
ds
loope
lods
jmp
pop
push
inc
cld
and
jmp
and
lock
orb
clc
jae
imul
ljmp
and
andnps
cld
mov
in
xchg
xor
imulw
pop
ljmp
jmp
mov
sbb
cmpsl
lock
add
xor
les
nop
in
add
push
in
pop
sbb
push
xchg
jb
shlb
inc
jns
xchg
jno
pop
inc
mov
cmp
cmpsb
dec
sub
popa
xchg
pop
sbb
sub
inc
mull
dec
fldenv
mov
sbb
add
arpl
mov
es
sbb
xchg
pop
out
loopne
mov
lea
xor
cmp
clc
bound
xlat
daa
xor
fstl
xchg
mov
imulb
and
add
dec
or
call
mov
fwait
xchg
jmp
stos
cmp
int3
aam
ja
sbb
inc
jo
je
pop
push
movb
pop
outsl
in
and
sub
xchg
imul
test
call
pop
push
stc
pusha
cs
in
imul
cwtl
jb
sub
test
cli
mov
and
sub
jne
mov
cmp
adc
loope
fs
test
fdivs
idivb
ret
movsb
and
icebp
cmp
inc
movsb
pop
inc
cmp
mov
loopne
fs
adc
scas
ret
nop
and
cmpl
dec
push
loopne
lret
xchg
mov
test
jne
ja
repnz
cmp
jnp
lcall
or
cld
imul
xor
sbb
or
xorl
cmp
pop
ret
pop
lret
cltd
nop
cmp
push
jne
sbb
in
push
test
subb
push
dec
mov
pop
test
pop
ljmp
std
gs
and
movsl
ffree
cmp
mov
xchg
mov
insl
adc
rclb
cmp
push
repnz
adc
das
dec
movsb
jg
je
sub
push
test
cmp
dec
je
xor
and
or
jmp
arpl
adc
mov
push
add
push
xchg
dec
mov
xchg
daa
sub
mov
xlat
in
mov
mov
ret
ds
loope
ss
test
or
les
loop
fisubrl
testb
das
sub
inc
jecxz
je
jg
sbb
inc
or
leave
xchg
lret
mov
or
cmc
mov
xor
and
dec
repz
push
jne
out
movsb
xor
out
pop
inc
sti
addr16
into
jge
fistps
sub
jl
movsb
xchg
push
adc
xchg
aad
cld
sub
add
loopne
cmp
jne
sub
hlt
jmp
adc
dec
je
or
sub
or
and
or
lods
push
pushf
dec
aas
fdivs
leave
stos
sbb
lcall
dec
insb
push
pop
jbe
or
add
stc
imul
xor
push
jp
or
ljmp
or
cmpsb
adc
push
pop
cmp
faddl
sub
mov
lcall
ret
mov
inc
inc
lret
fdiv
fidivrl
push
sbb
leave
lcall
fiaddl
pop
fdivrl
ljmp
fs
ja
out
daa
dec
fmull
cld
mov
xor
adc
fdivrs
add
cli
jl
in
cli
mov
and
add
stos
inc
cmp
in
cs
or
push
adc
dec
in
mov
pop
add
test
jg
or
add
and
hlt
or
test
sub
addr16
out
test
cmp
jbe
movsl
out
into
fs
pop
adc
movsl
dec
mov
and
fiaddl
cmp
test
imulb
add
sub
push
inc
xchg
jmp
push
test
jle
jb
negb
adc
cs
stc
dec
ds
adc
adcb
xor
pop
mov
dec
mov
mov
mov
xchg
push
pop
ljmp
xchg
pop
mov
loopne
mov
mov
cmp
in
sub
mov
xor
cmp
int
inc
out
mov
mov
mov
lret
daa
in
push
je
stc
or
or
or
fimuls
push
push
mov
adc
inc
jo
aaa
sahf
add
lea
adc
decl
adcl
adc
xor
inc
and
push
add
insb
ss
xchg
sub
or
shr
dec
pop
jno
fwait
add
pop
xor
jne
popf
dec
pop
std
sahf
push
int3
mov
pop
mov
out
bound
lahf
stc
ret
mov
aam
out
pop
mov
add
dec
pop
sti
adc
mov
inc
xorb
pusha
jo
sub
jb
cmp
push
mov
adc
shl
or
inc
mov
insl
inc
push
mov
cmpsl
lods
shll
lret
arpl
pop
pop
jne
js
ljmp
xor
push
rcrl
jne
push
dec
in
xor
pop
push
js
call
rcrb
cmp
fbstp
fistl
mov
cmp
das
std
dec
adcl
cwtl
or
je
sub
dec
mov
push
xchg
and
fcomps
inc
lods
mov
ljmp
jmp
imul
dec
clc
rcll
sbb
sbb
pop
cmp
mov
lcall
jecxz
testl
fs
mov
cwtl
mov
enter
out
inc
or
push
cmp
jne
idiv
pop
orl
add
pop
jp
sub
lock
movsb
sbb
sbbb
or
sub
adc
mov
cmp
mov
adc
inc
cmp
and
test
adc
xchg
cmpsl
vrsqrtss
add
cmp
jl
mov
push
push
lcall
in
and
es
push
mov
adc
je
or
inc
jp
ret
inc
loopne
jg
faddl
test
inc
ret
cmpsb
push
hlt
pop
xchg
loop
stos
test
xor
insb
xchg
cmp
ja
cmp
clc
les
shrb
or
xchg
js
lock
lods
in
mov
sub
sbb
push
mov
sub
jno
mov
adc
es
inc
shlb
int3
adc
enter
or
xchg
shlb
shlb
dec
pushf
adc
cwtl
jl
inc
mov
pushf
mov
icebp
out
movsl
scas
push
dec
xchg
or
mov
mov
push
inc
call
movsb
cmpsl
jl
fadds
jmp
cmp
mov
jnp
test
call
repnz
or
mov
or
mov
dec
stos
jle
test
aam
test
adc
fcomps
movsb
mov
inc
adc
insb
adc
inc
add
mov
and
or
jge
mov
push
push
gs
pop
push
ljmp
rcll
push
jne
jb
outsl
aam
adc
dec
xor
push
dec
push
in
push
xchg
daa
mov
cltd
or
imul
imul
clc
stc
popf
sti
imul
or
mov
xchg
in
push
add
adc
test
mov
fidivrl
popf
int3
or
fdivs
pushf
cwtl
pop
aaa
sbb
pusha
mov
adc
push
cs
push
mov
sub
inc
add
inc
adc
adc
mov
mov
adc
and
addb
add
push
inc
popa
jae
xchg
lahf
mov
fsubs
sbb
or
in
push
addb
inc
mov
icebp
loopne
or
push
les
cmp
push
push
mov
mov
ret
sbb
inc
fistl
adc
inc
dec
js
adc
clc
lods
leave
inc
jo
sbb
lods
fildl
and
fucom
loope
fisttpl
test
fmull
dec
cwtl
dec
adc
int3
or
popa
xor
or
mov
cmpsb
popf
gs
js
jo
aam
loope
shll
popa
les
push
adc
fucomp
mov
cli
inc
popa
test
sub
adc
negl
mov
out
inc
popf
pop
cmp
pop
fsubl
pusha
cwtl
cwtl
or
push
push
xchg
push
lods
hlt
adc
or
ficoml
add
sbb
inc
mov
in
mov
repz
lods
js
icebp
adc
js
inc
repnz
imul
dec
sub
ja
inc
out
iret
nop
int3
rclb
dec
sub
fstl
mov
hlt
xor
or
mov
sbb
jns
popa
nop
add
imul
scas
mov
add
lods
aaa
cld
and
lods
adc
jno
and
and
inc
inc
or
shrb
xor
fs
mov
adc
or
fbld
stos
cmp
adc
cmp
or
jl
sub
sbb
pop
gs
push
cmp
jbe
or
ficoml
xchg
sub
dec
mov
dec
fcoms
mov
enter
imul
pop
xor
nop
dec
int
add
popa
bound
decl
or
push
mov
ret
sub
or
jnp
pop
inc
add
mov
lea
pop
or
aad
xchg
in
and
or
cmp
sub
and
std
loope
add
xor
in
mov
mov
and
adc
lods
in
scas
or
dec
adc
push
and
lods
adc
jg
push
test
sub
sbb
mov
jnp
pushw
cltd
push
cmpb
xchg
add
js
stc
data16
inc
or
and
cld
cltd
xchg
and
adc
add
inc
adc
add
inc
movsb
mov
fnop
jp
push
and
jmp
push
mov
nop
aad
pop
dec
fxch
pop
jp
and
sub
sbb
lock
aad
xor
dec
mov
pushf
mov
addr16
arpl
fdivl
dec
gs
cmp
add
dec
cmp
aam
jle
adc
nop
cld
dec
and
and
je
jl
push
xlat
bound
nop
sub
cmp
cmp
mov
push
cmc
mov
call
imul
insb
jnp
pop
test
dec
or
mov
push
ret
adc
nop
rorb
jae
xchg
mov
data16
aam
fstl
cmp
and
sub
push
dec
xchg
insb
push
inc
test
pop
repz
mov
dec
cmpsl
icebp
les
imul
sub
mov
es
sub
je
mov
cmc
cs
mov
mov
ret
and
fs
mov
pop
cmp
addr16
or
add
ja
jne
inc
rclb
insl
adc
mov
or
add
leave
cmp
das
ljmp
or
jl
adc
gs
and
adc
int3
jbe
jmp
arpl
or
stos
add
mov
sbb
mov
or
movsb
inc
jle
add
ss
jbe
fiaddl
fildl
or
cmp
mov
jo
push
xchg
idivl
add
fsubs
js
gs
sub
loopne
adc
add
mov
int
lahf
xor
xor
push
jmp
add
scas
mov
xchg
aad
mov
mov
jo
inc
and
jp
stos
jbe
cld
je
adc
aam
iret
push
xchg
pop
mov
adc
fs
iret
jp
enter
pop
sti
jecxz
mov
sbb
mov
or
and
ljmp
fnstenv
clc
sbb
js
cwtl
mull
mov
or
cmp
push
gs
das
or
int
pop
adc
cmp
lret
dec
add
in
in
faddl
add
xchg
pop
xchg
or
or
pushf
or
pushf
adc
pushf
cmp
cmp
mov
pop
cmp
cmp
add
xchg
lahf
push
call
xchg
in
jecxz
loop
loope
loopne
fists
fcoml
fsts
xchg
aad
aam
rcll
pushf
iret
pushf
clc
xchg
into
scas
mov
lret
in
mov
pushf
enter
cld
clc
les
or
pop
mov
sbb
adc
rcrb
or
rclb
insb
pop
xor
call
lock
mov
and
or
rol
or
dec
and
insb
xchg
test
pushf
and
mov
xor
or
dec
cld
sub
call
add
add
sbb
aam
mov
adc
push
test
add
adc
sub
data16
dec
cmp
or
or
loop
adc
push
add
jns
imulb
cltd
lock
es
push
loope
cli
inc
inc
clc
push
int3
or
dec
and
pop
xchg
push
push
cmp
sbb
mov
xor
leave
or
fiaddl
xor
into
dec
xlat
movsl
fisttps
mov
lret
or
rcll
rclb
pop
inc
xchg
enter
sub
and
pushf
push
popf
push
mov
jne
mov
and
mov
pop
cmp
incl
mov
jae
ds
popf
cmpsb
mov
or
sahf
sbb
test
push
jb
or
ljmp
shll
pushl
inc
xchg
or
ja
into
or
es
das
push
shlb
cmp
adc
js
test
sub
in
lock
iret
or
pop
xor
inc
inc
mov
jns
leave
jno
imul
xor
dec
and
adc
xor
imul
jge
rcll
in
push
leave
adc
pop
outsb
or
xchg
inc
ljmp
pop
lret
add
or
sbb
xchg
pop
arpl
xchg
push
add
addr16
arpl
cmpsb
or
repz
nop
dec
popa
mov
and
stos
add
test
jmp
bound
xchg
adc
inc
imul
fisubl
jbe
mov
mov
out
lds
popa
sbb
adc
add
jmp
nop
dec
mov
cmp
dec
and
gs
imul
jecxz
imul
or
or
add
sub
movsb
test
movsb
pxor
pop
aas
push
insl
aam
cmp
adc
cmp
in
ret
or
jne
or
cmpb
xchg
stos
pusha
push
add
jo
push
call
xor
pop
mov
pushf
mov
aam
dec
adc
dec
inc
ret
add
out
sahf
int3
xchg
enter
sub
mov
adc
adc
sbb
sbbb
ja
int3
jb
add
call
jl
aam
outsb
mov
adc
pusha
movups
dec
or
loopne
cmp
mov
sbb
scas
dec
cmpsb
fs
add
add
push
das
sbb
pushf
xchg
adcl
sbb
sbb
sbb
sbb
mov
push
pushf
jnp
aaa
mov
daa
add
sub
inc
or
cmp
cmp
cmp
cmp
cmp
cmp
daa
sbb
and
push
and
in
in
mov
add
push
in
clc
xor
xor
cmp
cmp
pop
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
dec
mov
mov
dec
mov
stc
cmp
mov
cmp
dec
dec
cmp
and
inc
adc
clc
adc
and
fs
mov
push
mov
or
pop
mov
or
pop
add
add
and
pop
fs
or
jns
cwtl
adc
inc
pop
push
int3
or
je
or
and
lock
pusha
test
xchg
and
popa
fcomps
call
test
sub
or
aam
je
mov
sub
outsl
test
mov
mov
mov
enter
js
add
gs
or
es
lock
adcb
pop
or
or
jbe
lock
sbbb
jl
addl
and
dec
fadds
sub
adc
push
roll
inc
jno
sbb
leave
inc
pop
hlt
les
fcomps
mov
cld
les
nop
imul
lods
inc
xor
outsl
adc
and
mov
adc
lock
sbb
or
sahf
movsb
ds
jle
in
cmp
jle
std
mov
adc
mov
mov
jb
jo
imul
scas
adc
mov
dec
into
cmp
int3
sbb
or
rcrb
loope
cld
call
test
mov
dec
mov
adc
pop
rcrl
lods
mov
pop
adc
inc
sub
ror
int3
iret
movsl
adc
mov
sbb
adc
mov
loope
jg
loope
addb
test
adcl
adc
or
pop
add
pop
int3
or
sub
mov
je
leave
ret
and
adc
adc
dec
xchg
fmuls
push
daa
push
sbb
in
clc
jl
addb
xchg
sub
inc
aaa
adc
xchg
mov
add
ret
lods
or
rcll
and
inc
and
mov
jmp
mov
out
dec
mov
cmovle
int3
sub
aam
into
or
adc
push
dec
pop
xchg
popa
and
jnp
mov
dec
mov
and
sub
mov
sbb
fs
js
movsb
adc
int3
jmp
adc
xchg
dec
adc
or
fwait
adcb
mov
xor
push
and
into
movsb
jb
inc
or
stos
jle
and
rcrb
test
nop
mov
adc
je
sbb
pop
cmp
ret
pop
mov
cld
mov
jno
adc
jmp
push
arpl
icebp
or
int
xor
scas
adc
stos
xor
daa
add
pop
xchg
dec
mov
jne
push
adc
jne
and
add
call
add
adc
rcll
inc
jns
sbb
adc
adc
hlt
out
push
mov
push
inc
pop
xor
out
data16
divb
cmp
ds
xor
mov
outsb
jecxz
or
cmp
push
and
daa
mov
jne
lret
movb
pop
mov
in
out
and
push
push
call
mov
fisttpll
les
push
insb
ficoms
adc
inc
pop
shrb
ja
inc
push
jno
movsl
adc
insl
cs
mov
push
xchg
inc
or
jne
ret
sub
inc
inc
mov
xchg
adc
adc
or
lods
cli
or
popa
mov
push
xor
test
mov
jo
push
or
imul
dec
add
mov
popa
imul
push
lock
jo
imul
or
mov
adc
pushf
pop
stos
clc
fcompl
cmp
xchg
adc
fisttps
adc
call
lock
adc
aam
mov
xlat
popf
ficomps
or
jmp
test
mov
cmp
mov
dec
mov
dec
inc
and
jo
push
xor
mov
cmpsl
cmc
sub
jbe
loopne
cmpl
mov
xlat
pop
dec
sub
les
adc
adc
das
sub
mov
inc
dec
adc
mov
das
stc
cwtl
dec
lret
arpl
sbb
xchg
mov
inc
adc
xlat
inc
xchg
push
inc
inc
cmc
mov
xor
jle
dec
dec
mov
mov
or
add
clc
push
or
scas
adc
cwtl
pop
cli
xor
jmp
mov
arpl
push
or
sub
pop
add
hlt
sub
cli
mov
cltd
repnz
and
ror
out
aam
stos
test
xchg
stos
xor
call
xchg
mov
xor
sbb
cmp
jne
aas
jmp
and
cli
pushl
jo
mov
sub
jne
push
nop
loopne
xchg
mov
jmp
cmp
in
jnp
imul
int3
xchg
test
dec
push
xlat
adcb
pop
or
or
sub
clc
mov
pop
negl
dec
fstl
or
or
rclb
pushf
or
rcrb
pushf
or
cmp
and
pushf
or
cmp
sub
popf
xor
push
push
lea
cli
data16
lcall
mov
mov
adc
jg
sub
mov
data16
js
scas
xchg
scas
repz
mov
data16
in
popa
mov
add
je
sub
push
sub
inc
dec
or
cmp
dec
cld
and
xchg
ja
rolb
pushf
lock
int3
daa
xor
mov
xlat
pop
cmpsb
outsl
push
mov
adc
add
adc
aaa
mov
or
daa
sub
push
xchg
inc
inc
push
or
aad
std
sbb
xlat
sbb
and
sub
or
xor
pop
cld
xor
jg
inc
outsb
call
add
mov
jmp
into
or
sar
fs
mov
ficoms
out
xchg
cld
lods
enter
pop
daa
sub
or
jge
adc
mov
mov
inc
cmpsb
add
cmp
aad
notl
ret
scas
mov
or
lret
push
aad
lahf
inc
mov
inc
iret
push
incl
cmp
push
push
mov
roll
cmp
fucomp
pushf
push
scas
clc
popf
push
pusha
jmp
push
cwtl
inc
dec
inc
fistps
pop
loop
das
iret
icebp
fs
and
lea
icebp
shlb
pop
xchg
ss
push
or
inc
out
mov
mov
xchg
setb
call
mov
adc
jnp
sti
cmpsl
js
sub
imul
xchg
inc
dec
cld
mov
movsb
pop
sub
scas
lea
out
movsb
scas
fisubl
mov
mov
into
popa
mov
push
xor
and
push
clc
in
pop
jbe
out
sbb
push
lea
outsb
jnp
movsl
add
sbb
gs
inc
sbb
out
dec
jb
int
movsb
mov
inc
in
je
out
mov
icebp
ljmp
push
or
or
xchg
and
call
or
ret
jne
call
sbb
fstl
mov
xchg
jecxz
in
and
inc
clc
push
and
add
or
adc
out
pop
shr
add
lock
fcoms
fmulp
push
inc
inc
scas
xor
mov
sub
aam
adc
test
xchg
mov
pop
jmp
sub
cmp
jne
inc
inc
orl
daa
and
xchg
push
call
jl
ja
int
or
ds
add
xchg
cmp
jo
movb
jmp
cli
xor
js
aas
dec
or
iret
push
insb
jno
push
out
xchg
add
imull
aad
adc
add
pop
daa
scas
pop
sbb
or
incl
and
dec
lcall
push
cmp
dec
stc
push
fs
repz
dec
pxor
or
fisttpll
pop
lock
xor
sbb
sbb
cs
or
jmp
sub
inc
mov
dec
and
mov
xchg
or
lea
push
scas
repz
xchg
or
clc
cmpsb
movsl
sub
cmp
push
push
fcmovnbe
inc
pop
xchg
or
and
scas
or
les
push
mov
mov
adc
mov
pop
out
sub
cmp
cmp
je
int
les
call
repz
sti
je
jmp
and
push
neg
cmp
cmp
fbstp
jle
nop
testl
call
xor
xchg
sti
and
scas
adc
sub
xor
xorb
movsb
mov
int3
and
mov
mov
sub
sub
sbb
jecxz
jb
xchg
mov
pop
pushl
xchg
sbb
jge
int3
inc
push
cmp
lock
xor
sub
dec
add
inc
xor
cmp
fldcw
push
xchg
mov
jne
push
notl
lea
sub
or
popa
call
aam
sub
lods
xlat
andb
xchg
sbb
cmp
out
rorl
mov
popa
bound
xor
pop
pop
sbb
lods
cmp
push
ja
leave
pusha
dec
cmpl
daa
jne
cld
dec
jns
fnstenv
mov
mov
adc
cmp
add
push
mov
pop
test
dec
inc
pop
mov
push
in
or
shlb
bound
cld
add
cwtl
movsl
push
je
sub
pop
cmp
flds
sbb
or
or
sbb
in
int
nop
or
add
inc
mov
mov
clc
nop
adc
jmp
mov
sub
xchg
test
inc
mov
test
mov
fs
adc
xor
jmp
xchg
and
push
mov
push
mov
in
call
sbb
jmp
or
push
ret
outsl
add
stos
cltd
sub
and
jae
popf
cld
sti
cmp
pop
or
xchg
sub
inc
jmp
ds
shll
pop
xchg
out
movsl
xchg
sbb
xor
add
in
push
imul
dec
pop
or
xlat
dec
fsubl
adc
xchg
jae
lret
or
mov
pop
aad
cmpsl
sbb
mov
xchg
mov
cmp
je
pop
js
inc
call
and
sub
aaa
xchg
dec
clc
mov
xchg
decl
pusha
add
repz
cs
and
loop
add
sub
out
xor
mov
push
add
add
mov
or
push
mov
fstl
xchg
pop
movsb
lods
push
dec
es
sbb
std
sub
mov
pop
movsb
dec
mov
jo
mov
sub
add
shll
jmp
dec
dec
xor
test
inc
cmp
je
fdiv
insb
outsl
jecxz
les
push
mov
and
push
or
lea
adc
push
push
popa
add
adc
rcrb
mov
arpl
xorl
or
or
jecxz
aas
test
repz
push
adc
or
sbb
jo
mov
stos
pop
loop
mov
scas
adc
or
lock
dec
push
add
testb
mov
mov
lods
incl
jp
dec
js
dec
clc
and
push
and
jmp
stc
dec
xchg
nop
pop
xor
jnp
pop
movsb
or
daa
jl
movswl
stc
xchg
xchg
scas
mov
int
scas
xchg
sub
jmp
sub
in
adc
test
pop
les
jno
pop
and
xchg
lock
or
cltd
orb
sub
push
inc
pop
lcall
dec
js
add
push
push
pop
lock
mov
ja
pop
sbb
mov
imul
stos
or
js
or
movsl
stos
repz
mov
pop
jp
add
nop
jo
mov
sub
adc
or
jg
subb
fdivs
jg
inc
sbb
push
fildl
inc
lea
ret
js
jecxz
sub
test
jle
and
jp
adc
ljmp
or
jl
mov
fdivrp
fstpl
fwait
jmp
mov
mov
lock
add
lret
jle
lret
into
xchg
jns
in
cli
dec
ss
xchg
mov
aaa
pop
inc
sub
rorb
loope
adc
jmp
sbb
adc
cmp
popl
stos
pop
push
imul
in
mov
inc
cmp
fwait
xor
mov
xor
sub
loopne
push
pop
xchg
fiaddl
inc
sbb
jmp
xchg
ficoml
cmpb
js
addb
push
pusha
lds
bnd
cmp
scas
loop
dec
cmpsl
adc
add
xchg
mov
push
xchg
dec
ret
add
or
jecxz
sub
inc
push
call
or
decl
jo
decl
mov
cmpl
shlb
xor
mov
mov
mov
or
adc
xchg
stos
hlt
rorl
jmp
hlt
inc
and
inc
jmp
mov
sub
pop
sub
jne
push
push
aam
add
add
ja
int
inc
pop
add
jmp
sub
sub
pop
pop
jb
sbbl
and
mov
mov
into
pop
jne
mov
or
xchg
ljmp
je
out
sub
jne
mov
push
loop
stos
push
insb
cmp
mov
sub
lret
sbb
pop
push
or
cmp
jg
fdivrs
push
ljmp
mov
jg
andb
in
hlt
imul
mov
add
inc
or
push
sbb
int3
mov
adcl
icebp
pop
in
jne
int
cmp
cmp
xchg
rclb
inc
insb
mov
cs
push
pop
aam
rcll
sub
adcl
sbb
cli
jmp
adc
adc
add
pop
push
sub
bnd
insb
in
adc
push
inc
adc
insb
pop
dec
mov
xor
xor
and
push
dec
adc
nop
and
cmp
outsb
repnz
or
les
lods
cmp
push
jmp
sub
or
xor
or
jne
sub
clc
sub
mov
mov
movsb
xchg
jg
dec
lret
push
adc
in
mulb
and
add
or
sub
test
xchg
mov
push
movsl
jne
pop
test
in
xor
fistl
call
aas
dec
lock
or
mov
mov
frstor
inc
sbb
mov
sub
cmp
adc
adc
call
out
inc
stc
jmp
or
sub
jb
fwait
dec
imul
mov
jp
mov
jecxz
fstpt
adc
mov
fldl
mov
push
jo
inc
add
test
sbb
and
cmp
ds
in
mov
mov
push
mov
xchg
mov
pop
cld
or
add
pop
popf
out
test
daa
nop
insl
pop
xchg
cmp
mov
add
adc
in
repz
pop
push
popa
lock
inc
xchg
add
dec
js
push
out
imul
pop
leave
movsl
insb
adc
pop
hlt
add
dec
xor
lods
mov
cmp
push
out
add
pop
aas
test
sub
clc
add
add
data16
inc
mov
inc
cwtl
dec
hlt
jne
lahf
and
inc
stos
dec
daa
out
popf
cmc
adc
push
hlt
mov
cmpl
cld
mov
hlt
sbb
inc
xor
rcrb
inc
hlt
push
test
fldcw
xchg
repnz
in
jne
stos
es
sub
cmp
push
lds
jge
and
cmp
mov
dec
add
shl
push
cltd
sub
add
stc
xchg
jns
mov
fwait
add
or
xchg
js
mov
pop
scas
fldl
and
sti
sub
jne
xchg
xor
mov
and
lods
sub
xchg
daa
jle
dec
and
hlt
xchg
push
or
mov
push
jne
sub
mov
and
xor
in
jp
sbb
call
mov
sbbl
jns
jns
dec
jg
lods
cld
js
out
stc
stc
jmp
daa
ret
xlat
xchg
jo
mov
push
and
pop
or
or
add
or
jns
sbb
add
pop
popa
ret
or
dec
cwtl
hlt
rolb
jmp
cmp
or
jno
or
xchg
fmuls
sbb
ret
and
adc
aaa
or
inc
jp
aas
jbe
test
pop
testl
xor
inc
imul
test
test
ljmp
push
sbb
and
push
jno
dec
pop
pop
push
or
jle
inc
inc
adc
dec
pop
xchg
jbe
lret
sub
inc
sub
and
cmpb
negb
push
dec
pop
aas
or
call
mov
repz
in
sub
dec
inc
push
in
jge
push
or
and
mov
mov
leave
bound
btc
cmp
addb
push
xchg
les
inc
and
or
scas
jecxz
lret
pop
pop
cld
scas
dec
lods
clc
sbb
push
cs
lcall
add
mov
outsb
lods
or
cmp
sbb
push
pop
rcrl
push
in
pop
clc
and
pop
fistpl
nop
mov
out
enter
cwtl
pop
and
js
push
fs
and
mov
inc
sbb
dec
notl
and
adc
xchg
jle
repnz
leave
jge
jo
sbb
cmp
lods
push
mov
bound
and
sbb
clc
inc
jo
cmp
mov
xor
adc
stos
icebp
out
lret
and
xchg
xor
pushf
or
inc
add
mov
xlat
push
mov
add
inc
mov
outsb
loopne
and
mov
mov
inc
popa
push
adc
mov
sbbb
sbb
pushf
adc
inc
mov
out
add
inc
pop
pop
mov
cmp
cmp
pop
pusha
or
data16
jp
jmp
cld
push
ljmp
add
xchg
pushf
out
mov
sub
xchg
xchg
cltd
aas
popf
jge
imul
push
push
int
les
xchg
frstor
lods
leave
mov
xchg
repnz
push
pop
leave
scas
pop
out
inc
sub
or
inc
insb
rcrl
mov
aad
pop
or
mov
mov
lods
sub
jmp
or
adc
lahf
rcrb
mov
xchg
shr
mov
xor
dec
sti
andb
aas
xchg
daa
cmp
inc
xlat
dec
decl
inc
sbb
xor
xor
cmp
call
and
pop
mov
dec
adc
and
sbb
movsl
aam
arpl
stos
dec
pusha
pop
push
xchg
test
nop
movsb
mov
or
adc
out
push
or
xor
inc
push
insb
test
jmp
jp
jns
jns
mov
jl
ret
int3
xor
enter
fisubs
add
and
mov
inc
pop
lods
and
mov
daa
mov
data16
enter
call
sub
lret
mov
out
sub
sahf
xchg
ret
dec
dec
push
or
inc
pushf
inc
xlat
jne
mov
mov
sbb
divl
inc
push
adc
stos
cmpsb
dec
aam
mov
ds
xor
cmp
mov
xor
mov
testl
mov
and
mov
mov
cs
aas
cmpb
je
xchg
les
xchg
cmp
xchg
nop
inc
cmp
sbb
push
aaa
cmpl
pop
fdiv
aad
push
cmc
xchg
or
inc
clc
dec
sub
setb
clc
sbb
std
fucomi
pop
mov
das
stos
and
sub
call
pop
sub
cwtl
fcomps
inc
dec
push
or
dec
inc
into
ja
add
mov
out
push
hlt
jmp
fldt
mov
or
push
or
pcmpeqw
jb
das
inc
cwtl
cmp
jnp
inc
mov
inc
dec
mov
adc
cmp
mov
push
sub
inc
cmp
mov
dec
xor
inc
data16
test
fisttps
or
iret
xor
test
pop
xchg
inc
nop
cmpb
xchg
xorl
testl
cmp
mov
nop
loope
cld
js
xchg
adc
xchg
out
and
ret
sbb
sbb
add
pop
mov
dec
scas
xor
jmp
xchg
push
inc
enter
dec
insb
lods
adc
adc
orl
out
fdivl
push
cmpsb
adc
clc
imul
xchg
add
cmp
lods
xchg
enter
xchg
inc
jmp
mov
inc
adc
popf
notl
xchg
or
sub
xchg
sbb
adc
dec
sbb
or
dec
sbb
aad
sbb
cwtl
movsb
sbb
pop
adc
dec
add
mov
ljmp
add
movsb
push
and
lret
push
inc
mov
ja
aam
push
sub
sub
lds
and
or
es
imul
cli
mov
cmp
loope
mov
mov
mov
mov
loop
pop
and
and
cmp
enter
aam
jg
and
add
dec
push
push
hlt
adc
std
ljmp
mov
std
clc
and
in
sub
xor
mov
pop
push
jmp
cmpl
add
mov
pop
fisubs
mov
jle
rorl
aaa
xchg
rorb
or
adc
icebp
mov
inc
loop
push
mov
loop
pop
movb
push
sub
pop
jno
mov
fisubrl
in
dec
xor
or
or
mov
add
fwait
adc
pop
and
dec
pop
or
fs
loop
and
push
in
xchg
adc
xchg
dec
pop
loop
jae
sbb
xchg
push
or
inc
rcrb
push
sbb
fistpl
aam
dec
cmc
bound
inc
jno
leave
int3
cmp
push
divb
inc
enter
xor
das
dec
mov
adc
decl
dec
inc
xor
xor
test
or
repz
mov
dec
mov
mov
aad
lea
push
popf
or
add
or
movsl
mov
mov
rcr
ljmp
mov
mov
out
xchg
add
push
mov
sub
sub
adc
jecxz
and
daa
mov
jne
icebp
das
call
pop
lahf
push
sahf
mov
inc
push
leave
shlb
ds
pop
jne
data16
cmpsb
out
pshufw
mov
bound
pop
in
iret
xchg
push
xor
mov
mov
fsts
mov
daa
aaa
mov
dec
mov
lock
cmc
out
cmp
adc
test
into
je
or
push
loopne
hlt
std
movsl
out
mov
mov
inc
out
test
fldl
in
movsb
cltd
adc
sbb
pop
stc
mov
mov
dec
icebp
cmp
xor
sbb
cs
or
jmp
sbb
jb
or
cld
pop
pusha
out
dec
xchg
adc
adc
ret
fs
pushf
dec
jbe
int
or
dec
xchg
enter
pop
insl
adc
and
adc
sbb
pop
movsl
and
add
lock
shlb
inc
mov
sbb
outsb
or
pop
inc
xchg
aam
or
and
mov
mov
and
push
cli
jg
push
mov
jnp
pop
into
int3
pop
pop
or
or
movsb
fsts
mov
sub
cmp
pop
ret
jne
lock
jmp
adc
cs
test
shrl
xor
mov
mov
stos
push
lods
stos
cmp
adc
cmp
div
loop
xor
xchg
scas
mov
int3
mov
popf
sbb
dec
inc
call
push
jmp
sbb
in
dec
and
dec
mov
loopne
dec
iret
pop
sbb
mov
pusha
cs
call
xchg
into
xor
cmp
bound
sbb
sub
and
jbe
inc
scas
sub
fs
loop
cmp
pop
mov
and
sbb
or
mov
pop
je
subl
pop
nop
push
adc
test
cli
or
stos
push
sahf
cli
push
fsubrs
repnz
adc
test
loop
jg
inc
test
cmc
dec
mov
popf
push
cmp
push
aam
and
xor
sub
mov
stos
mov
mov
or
lea
sbb
cmp
loopne
add
lahf
push
inc
shrb
xchg
scas
in
ss
sahf
adc
out
into
dec
xchg
add
pop
je
push
scas
push
mov
cmp
cmp
aam
sbb
and
shll
jge
jge
outsl
jmp
mov
sbb
adc
and
shlb
sub
push
push
loope
js
addl
push
lahf
pop
xchg
sub
mov
and
push
mov
mov
add
je
sbb
adc
shlb
push
mov
cmp
cltd
dec
lea
push
mov
aam
test
dec
lcall
and
insb
stc
cmp
push
jo
imul
cwtl
pop
sbb
and
loop
pusha
mov
lods
cmp
js
dec
test
pop
cmc
pop
jp
lcall
mov
xchg
or
cli
sub
pop
fdivr
out
or
dec
dec
jmp
in
stos
or
push
mov
add
mov
insb
out
orb
out
sarl
and
in
and
push
or
cmp
adc
dec
fadd
je
ds
insb
jnp
cmp
scas
arpl
mov
mov
jg
pmaxsw
lea
xchg
ja
test
leave
and
adc
or
lahf
push
cli
mov
rorb
dec
ret
insl
mov
call
testb
mov
inc
mov
or
pop
sbb
dec
sbb
lahf
sub
lods
jecxz
dec
in
sub
out
xchg
in
inc
xchg
stos
mov
mov
dec
push
adc
pop
stc
push
sbb
dec
insl
jns
dec
aad
and
cmp
inc
cli
or
xor
test
outsl
call
push
jae
pop
shr
stc
out
hlt
daa
push
jno
cmp
jg
cli
insl
cmp
out
add
repnz
push
adc
jmp
in
adc
push
add
pusha
ljmp
pop
push
push
rorb
in
aam
add
jge
xorl
lahf
clc
or
push
call
jne
outsl
dec
shll
lcall
cmpsb
mov
push
mov
push
lcall
pop
sub
cmp
mov
adc
test
push
mov
andb
add
test
jg
pop
pop
fidivs
mov
push
and
stc
xchg
sbb
ret
je
dec
cli
leave
aaa
pop
cld
sub
and
fwait
add
cmpsb
gs
xchg
fidivl
leave
pop
dec
or
int
cmp
push
inc
mov
pop
lock
jno
enter
std
push
outsb
in
into
xchg
adc
or
push
clc
add
ds
into
pop
arpl
push
pushf
cmp
jecxz
int3
adc
cmc
movsb
loop
imul
cmp
and
sbb
jo
pop
popf
add
jb
insb
cltd
cmp
dec
or
lret
mov
mov
lea
cmpsl
rolb
cmp
or
pop
je
push
or
jmp
push
testb
pop
cmp
mov
mov
movsb
mov
mov
sub
pushf
mov
mov
pop
imul
jg
fstpt
mov
push
into
mov
dec
lock
inc
repnz
sbb
inc
ret
call
push
popf
pop
outsb
hlt
xor
and
xlat
fdiv
pop
shll
fwait
and
xchg
call
stos
cltd
call
mov
mov
pop
cld
in
dec
aas
sbb
sti
mov
stos
repz
faddl
cmp
cmpb
je
xchg
rcl
cmp
test
mov
sub
pop
fildl
scas
fmull
mov
loope
sbb
fwait
mov
sub
pop
fwait
lea
mov
imul
push
cmc
and
push
pop
ds
jle
pop
outsb
cmp
or
push
inc
data16
sub
inc
and
into
jge
mov
jl
sbb
outsl
test
dec
pop
jg
cmp
dec
xchg
stos
mov
push
cld
push
mov
inc
rcrb
shlb
and
cli
std
stc
rorb
pop
inc
add
into
int3
and
call
ret
sub
inc
imulb
cmp
push
mov
push
je
pop
mov
lcall
push
jne
repnz
movsb
jmp
push
test
setl
leave
fiaddl
jg
out
js
push
pop
test
inc
stc
rclb
adc
xlat
call
mov
jmp
movsl
push
adc
mov
xor
pop
cmpsb
roll
cmp
jge
mov
mov
nop
hlt
add
push
shll
fs
inc
mov
sub
or
and
xchg
add
mov
jle
test
mov
dec
and
mov
jno
inc
mov
dec
mov
call
add
xchg
pop
push
popa
pop
jmp
nop
sbb
mov
fcompl
xor
scas
in
jmp
cmova
lea
outsl
inc
pop
inc
mov
xor
dec
sbbb
bnd
sub
es
cmp
jge
push
clc
add
xchg
es
adc
sub
aas
push
fisubl
push
lods
and
inc
and
dec
mov
push
inc
test
push
xchg
sbb
in
dec
mov
mov
xchg
jmp
jnp
jmp
mov
jecxz
sbb
in
mov
stc
lcall
cld
mov
in
mov
push
cli
and
outsl
or
jne
jge
ficompl
imul
adc
mov
sub
jo
mov
and
xchg
jb
pop
je
jmp
std
scas
xor
push
adc
dec
lds
rorl
push
adc
xchg
jae
adc
and
xor
jge
inc
dec
sbb
xor
dec
rorl
mov
sbb
out
enter
loop
xlat
gs
mov
int3
je
pop
test
xchg
pop
cmp
pop
mov
call
xor
sub
leave
sar
les
pop
fisubrs
arpl
jmp
pop
push
fmull
in
in
iret
inc
xlat
jmp
insb
loopne
or
xor
xchg
mov
jae
dec
push
out
cltd
push
dec
and
push
leave
out
div
mov
mov
push
pop
lods
push
push
inc
push
ja
call
lea
mov
inc
xor
sar
jmp
mov
jl
sbb
jmp
jle
push
imulb
cli
xchg
adc
dec
adc
repz
iret
push
mov
nop
rclb
repz
push
or
fwait
lods
orb
testl
lea
xor
mov
jns
orl
dec
adc
adc
js
cwtl
jne
ret
add
xor
sbb
push
cmpsl
rorl
out
mov
movsl
shlb
cmc
xchg
mov
pop
lahf
fdivs
pop
mov
pop
xchg
ja
hlt
push
repnz
and
dec
leave
clc
xor
xor
xlat
mov
sbb
ds
cli
cmpsl
adc
jno
adc
mov
mov
fwait
add
pop
dec
scas
pop
adc
jge
cmpsb
lret
rcrb
pop
add
jae
or
or
or
dec
sarl
daa
jge
or
push
pop
shlb
shll
jmp
test
loopne
mov
or
add
xlat
imul
dec
or
xchg
push
and
add
out
imul
or
sbb
or
adc
ja
orb
dec
fimull
or
movb
mov
and
jb
repz
int3
pop
int3
xchg
xchg
mov
jl
inc
xor
outsb
repz
jae
cltd
sbb
adc
xor
sbb
adc
and
push
dec
adc
je
push
push
mov
je
push
adc
adc
jbe
push
aaa
lods
movsb
jns
unpcklps
adc
test
sub
push
push
or
or
or
inc
popa
xchg
mov
adc
dec
and
subl
or
arpl
in
outsb
push
leave
dec
lock
mov
or
add
loope
push
or
inc
pop
out
inc
and
adc
push
mov
pop
leave
sub
jp
dec
lods
xchg
jbe
or
xchg
or
cmp
test
stos
mov
movsb
or
dec
adc
dec
mov
dec
lahf
sub
push
inc
adcb
add
pop
js
adc
mov
jmp
and
je
sub
gs
inc
or
mov
outsl
or
inc
stos
and
jecxz
or
or
dec
icebp
push
das
shrl
les
comiss
das
enter
lock
xchg
adc
es
or
push
in
and
ret
push
cmp
push
and
jp
dec
aas
dec
mov
ljmp
jb
out
imul
pop
daa
lret
jo
repnz
mov
and
xchg
testb
or
push
xorb
sub
orl
jg
or
adcb
and
ja
dec
fstps
jmp
rol
jmp
in
adc
pop
add
xor
cs
sub
add
jle
push
mov
nop
inc
cmpb
sahf
insb
dec
or
push
or
inc
icebp
jne
sub
xor
jecxz
sub
or
out
xchg
mov
idivb
aam
and
push
cwtl
mov
dec
dec
add
enter
lcall
cmp
add
add
aad
push
sub
jmp
fists
cmp
mov
mov
shll
cmpsl
cmc
adc
std
dec
iret
aas
cs
lret
je
mov
pop
sbb
das
enter
pushw
insb
mov
push
movsb
popl
pop
fxch
cmpsl
add
insl
lock
mov
xor
xchg
push
out
add
adcb
and
push
out
aas
popf
push
mov
mov
jne
xchg
mov
push
stos
ret
push
imull
fcoms
sub
enter
sbb
sub
sbb
jae
cltd
jbe
mov
scas
lret
sub
in
outsb
push
or
inc
outsb
and
sub
stos
sub
inc
mov
mov
std
cmc
dec
mov
inc
subb
xchg
or
or
loope
push
mov
mov
shrl
xlat
xchg
jno
dec
sub
inc
push
cltd
add
jmp
or
adc
das
fiadds
popa
mov
es
jg
mov
movsb
xor
or
pop
pop
fadds
sub
sbb
outsb
xor
call
hlt
mov
jg
in
fcoms
push
addr16
or
pop
or
add
adcb
and
lcall
push
push
mov
xlat
imul
call
sbb
xlat
imul
xor
jmp
movsl
mov
sar
or
inc
gs
adc
sbb
or
jno
popa
call
adc
mov
adc
es
dec
jne
xor
fidivrs
sub
lcall
inc
mov
ljmp
mov
add
sub
push
pop
nop
inc
mov
push
mov
xchg
sub
mov
rcll
mov
fdivl
and
es
cwtl
les
stos
and
int
and
rclb
xchg
xchg
fst
outsb
scas
dec
pop
test
dec
or
mov
jge
pusha
repnz
and
pop
fucom
pop
mov
sbb
mov
repnz
mov
mov
push
push
dec
cmp
mov
repz
xchg
push
mov
jmp
xchg
xchg
popa
rolb
xchg
out
fistpl
je
add
dec
and
dec
gs
or
movb
mov
push
push
aam
movsl
mov
adc
leave
pusha
cmpl
outsb
or
insb
push
mov
add
jnp
daa
repnz
mov
testb
rcll
jl
in
xor
cmp
jmp
and
inc
mov
xchg
je
push
dec
stc
or
jge
data16
sub
or
aaa
cld
and
movsb
es
dec
jne
mov
adc
cld
sub
sub
pop
pop
and
sbb
adc
or
pop
sub
push
call
and
push
xor
mov
add
stos
into
imul
or
in
inc
pop
and
cmpl
daa
push
or
cvtps2pi
or
cmpsb
setg
jne
lret
cmc
dec
loope
das
repz
push
pop
cwtl
sub
lahf
push
std
sahf
inc
xchg
fistps
cmp
xor
dec
or
mov
adc
loop
jmp
fmull
sbb
push
cwtl
jmp
out
sub
jns
je
imul
out
mov
dec
pop
mov
jl
pop
fdivs
pop
cltd
pop
pop
push
rorl
push
jg
aas
cwtl
cs
lods
sub
jnp
clc
out
mov
push
push
mov
and
sbb
movl
lgs
mov
nop
adc
xchg
es
or
xor
repz
pop
pop
xchg
pop
or
pop
clc
jmp
cli
xchg
je
dec
adc
or
xchg
ljmp
add
ret
out
pop
sbb
enter
or
adc
iret
or
daa
mov
xor
pop
sub
mov
xchg
cld
lea
nop
pusha
xor
or
cli
bound
clc
or
xor
and
lea
inc
pop
stos
movsl
dec
jns
jb
call
inc
mov
xchg
loopne
dec
test
or
dec
push
scas
pop
testl
cld
cs
mov
adc
lds
cmpsl
push
divps
lods
pop
clc
push
mov
xchg
adc
adc
or
adc
add
repnz
ss
sbb
push
pop
stos
jmp
xchg
dec
ljmp
ficoms
jg
push
or
ljmp
sbb
cmp
mov
clc
and
icebp
hlt
dec
adc
push
push
mov
pop
shll
mov
fs
movsb
push
dec
cmp
adc
or
lods
lea
or
push
mov
das
mov
and
and
out
adc
enter
in
mov
pop
mov
lock
stos
leave
ljmp
push
into
hlt
mov
dec
insb
out
jnp
and
xchg
insb
cld
insb
in
mov
aaa
cmpsl
call
push
sub
std
mov
cmp
sub
repnz
mov
sbb
push
dec
mov
notl
sti
leave
shrb
into
jmp
rclb
push
mov
add
daa
and
mov
cmp
jne
mov
sub
adc
dec
mov
or
or
add
push
fcompl
fistps
loopne
jae
fiadds
daa
dec
jne
aad
xor
imul
js
insb
orb
jg
mov
jmp
arpl
fildl
and
jns
pop
mov
subl
cmp
add
gs
sub
fldt
fwait
je
sub
sbb
inc
adc
ljmp
jl
xor
mov
aam
inc
ret
sbb
enter
mov
je
dec
int
mov
push
jmp
hlt
mov
xlat
add
dec
lods
cmp
mov
into
sub
sbb
rcl
push
leave
sub
cmpb
and
push
push
dec
push
or
das
sbb
dec
int3
hlt
xchg
mov
cli
into
jge
sbb
mov
or
add
add
movsl
mov
or
push
pop
adc
sbb
pop
jmp
dec
pop
in
daa
pop
cmp
hlt
cli
cltd
mov
ret
dec
mov
push
mov
inc
inc
pop
sti
cmp
aam
ljmp
sbb
adc
mov
cmp
sti
movsb
fcmovnbe
stos
test
negl
idivb
pop
insb
inc
jmp
cmp
mov
or
or
sub
or
adc
cltd
daa
adc
sarb
mov
jnp
andb
jne
test
mov
scas
sbb
add
out
mov
fs
mov
push
push
rcr
mov
mov
push
pop
cmp
jne
rclb
inc
movl
cmc
and
movsb
sbb
sub
adc
pop
mov
ret
jg
call
shrb
and
xor
and
xor
out
mov
or
inc
cmp
insl
clc
and
in
clc
in
xor
jg
mov
dec
xor
arpl
call
fcom
sti
repnz
in
imul
popl
jmp
inc
dec
inc
lcall
jne
sbb
push
ficoml
mov
outsb
test
ficoms
test
inc
add
adc
in
mov
sbb
scas
das
mov
cmpsb
pop
inc
mov
sub
jl
mov
sub
adc
mov
cmp
popf
lds
popf
adc
ret
xchg
mul
nop
and
mov
repz
andb
movb
aam
lea
dec
mov
mov
mov
and
jb
lds
sub
and
or
or
cmp
inc
in
dec
mov
enter
inc
sub
jmp
jecxz
xlat
and
jo
push
mov
fbstp
push
mov
lods
add
test
or
je
mov
andb
jmp
or
and
bound
call
xor
and
xchg
nop
and
lret
repnz
xor
iret
xchg
dec
cld
sub
sarl
nop
sbb
lock
hlt
stos
xor
shll
lret
popa
aam
and
rcrb
mov
push
into
popa
std
outsl
test
enter
sub
out
enter
in
jecxz
lea
inc
adc
cmp
sub
and
xchg
jne
push
mov
inc
cld
sbb
mov
jbe
jnp
push
inc
sbb
sti
push
ja
fsubs
sub
ret
mov
dec
adc
mov
mov
xorl
cmp
add
cld
xchg
xchg
movsb
jmp
xchg
not
or
pop
aam
rclb
push
push
leave
xchg
jne
out
add
push
cmp
bound
xchg
mov
stos
gs
jnp
leave
ficomps
inc
jnp
lock
in
xchg
call
mov
pop
sbb
pop
jl
leave
test
imul
xchg
or
mov
pop
add
hlt
inc
dec
sub
jle
add
je
xchg
or
push
movb
orb
mov
sbb
hlt
jmp
xor
sub
dec
add
movsl
dec
push
mov
test
pusha
in
fistps
mov
ret
lret
jg
add
adc
mov
in
call
sbb
lock
add
xchg
in
mov
ja
xchg
movb
fs
add
inc
call
pop
adc
jmp
ret
das
sbb
mov
sub
test
aad
out
int3
jecxz
mov
sbb
or
les
addb
or
test
inc
add
frstor
xchg
dec
xor
add
adc
out
lds
cmp
lock
andl
inc
and
xor
or
out
repz
or
adc
or
jmp
push
out
in
sub
fs
in
add
cmc
push
pop
or
jmp
cmp
push
fdivl
dec
or
adc
scas
dec
sub
pop
rorb
push
dec
mov
pop
xlat
mov
and
mov
scas
mov
xor
shlb
cmp
jne
test
test
add
mov
fwait
pop
sub
mov
xchg
cmp
inc
and
jge
xor
or
adc
xor
add
adc
or
mov
jne
in
out
jmp
adc
pop
push
add
test
rcrb
dec
movd
imul
movsl
outsl
mov
call
fdivs
fs
sbb
cmpl
mov
and
mov
sbb
inc
rcll
dec
icebp
repnz
nop
or
pop
jnp
dec
adc
iret
xchg
dec
dec
mov
xchg
jne
jne
pushf
loope
clc
xchg
repz
pop
or
jo
or
jg
push
mov
mov
nop
xchg
push
adc
je
enter
or
dec
adc
ja
inc
inc
hlt
and
pop
cld
clc
out
repnz
jnp
pop
jge
arpl
dec
sbb
inc
push
loopne
clc
test
jecxz
sbb
repz
hlt
or
es
add
add
mov
xchg
addr16
push
cli
out
iretw
sub
leave
cmp
addb
daa
ficoms
jmp
inc
dec
pop
scas
cltd
jg
pusha
js
aam
out
icebp
pop
and
jp
cld
or
push
popa
ja
pusha
nop
xlat
fwait
scas
pop
stos
adc
imul
fidivs
loop
test
xchg
movsl
leave
je
jmp
jecxz
cmp
adc
out
leave
mov
and
dec
jo
mov
cld
xor
jno
add
mov
test
arpl
repz
iret
cwtl
lret
push
jbe
movsb
or
iret
mov
mov
leave
aad
mov
xchg
in
cmpsl
icebp
cwtl
outsb
jae
adc
cwtl
jbe
cwtl
test
xor
pusha
rorl
push
cmp
push
iret
adc
test
out
jne
enter
or
daa
push
out
mov
in
test
callw
jo
and
mov
jg
jne
xchg
xor
mov
dec
decb
ljmp
push
pop
jae
popf
xor
mov
scas
popf
ret
loopne
inc
push
inc
sub
push
sub
push
orb
and
pop
ljmp
sub
push
inc
jge
and
mov
sbb
cmp
xchg
push
jb
test
add
ds
add
push
in
or
movsb
xor
xor
push
scas
xchg
inc
or
push
mov
xchg
daa
ss
pop
in
cmpsl
push
vmovups
cmp
dec
pop
mov
loopne
inc
dec
jne
cltd
sub
sarb
dec
fcompl
dec
add
mov
ljmp
aad
lods
cmp
pop
nop
movsb
sbb
add
jg
std
jns
dec
ss
pop
fisubs
jbe
mov
stos
insl
cmp
xchg
sbb
push
mov
inc
inc
daa
testl
aaa
jne
adc
xchg
xchg
sti
movhps
mov
movl
cmp
jns
lock
pop
and
mov
jmp
or
and
jp
dec
sub
xchg
dec
dec
sub
dec
dec
xor
mov
cmc
pop
push
pop
repz
mov
rol
adc
sub
std
mov
jne
outsb
inc
mov
sbb
adc
jmp
xchg
fists
push
pop
fwait
xchg
stos
push
test
xchg
dec
daa
and
mov
sti
scas
jne
adc
iret
jmp
lds
arpl
or
je
jmp
sub
add
mov
cmp
popf
adc
test
adc
iret
dec
mov
cmp
idivl
jmp
enter
movhps
add
inc
push
cmp
ss
je
dec
push
or
pushf
xchg
repnz
ljmp
pop
push
dec
sub
lret
adc
xchg
inc
cmp
push
cmp
pop
sbb
sub
xchg
lea
movzwl
movsl
stc
jae
push
inc
or
pop
call
adc
mov
mov
fcoms
pop
add
lea
push
push
cs
imul
pop
adc
sbb
je
push
fs
xor
mov
pop
mov
add
push
pop
xchg
and
orl
xchg
xchg
adc
dec
dec
sub
cmovb
xchg
sbb
adc
add
add
pop
pop
and
fiadds
decb
mov
xor
cli
pop
addr16
inc
es
xor
and
xchg
enter
sbbb
add
push
dec
pop
add
push
or
jmp
int3
xchg
lahf
sub
inc
or
dec
adc
movsl
inc
jnp
ret
or
add
adc
dec
sbb
dec
sti
adc
mov
jmp
or
xorl
xchg
fs
sub
test
out
pop
cmp
mov
fwait
dec
adc
push
pop
adc
xchg
or
ss
pop
and
push
dec
leave
xor
cmp
sarb
mov
es
xchg
xchg
or
lahf
adc
xchg
mov
adc
jge
subb
test
sub
pop
add
out
jb
jbe
sbb
ret
ljmp
jl
or
inc
insl
in
dec
lds
std
rclb
outsl
into
aad
lea
mov
fsubs
pushf
mov
sub
mov
aas
mov
mov
cmp
xor
xor
jmp
xor
and
xchg
cmc
outsb
iret
dec
add
xchg
xor
mov
and
lock
stos
and
movsl
adc
adc
in
scas
sar
xchg
xchg
inc
shll
jae
jl
push
sbb
mov
dec
mov
mov
nop
cmp
sub
dec
in
mov
das
stc
pop
xor
adc
dec
sbb
xor
adc
das
dec
or
mov
test
xchg
or
add
push
mov
test
call
adc
push
cmp
popf
int3
sub
fistl
aaa
addr16
push
sub
xchg
cmpsb
push
sub
out
inc
pop
lret
pop
insb
mov
dec
or
or
add
cmp
mov
and
dec
sbb
sub
pop
mov
sbb
adc
scas
repnz
sub
lcall
jg
add
mov
jae
dec
push
adc
in
and
repnz
pop
mov
inc
jmp
test
prefetch
xchg
fdiv
sub
or
add
jae
jne
inc
mov
xchg
rolb
gs
outsb
fbld
popf
ja
sbb
adc
and
jge
mov
js
and
jmp
pop
lea
pop
scas
sbb
jmp
std
in
mov
enter
icebp
mov
cmpsb
test
xchg
out
mov
xchg
mov
cmp
push
pop
inc
cmp
and
adc
ret
pop
fs
push
scas
mov
and
dec
pop
xor
cmp
sub
pop
pushf
mov
inc
adc
lret
rcrb
imul
push
in
mov
xchg
mov
xor
ficoms
cltd
shlb
cmc
gs
adc
arpl
push
aad
inc
movsl
adc
and
stos
std
iret
rcl
sub
add
ret
out
mov
ret
cmp
inc
dec
jne
sti
sub
mov
add
lahf
leave
pop
adc
test
push
mov
jne
sbb
in
cmpsl
xchg
fsubrs
mov
jo
nop
cmpl
out
dec
out
xor
xor
fs
mov
adc
and
loop
mov
fdivrs
sub
ficomps
repz
mov
test
push
or
testb
mov
loop
or
xor
jl
dec
push
bound
and
out
mov
pop
jmp
lods
mov
dec
mov
fsubrl
in
femms
push
add
clc
pop
mov
inc
or
into
addr16
lcall
dec
adcl
jns
dec
mov
mov
out
jmp
insb
dec
or
pop
cmp
nop
add
loop
lcall
inc
js
mov
and
jmp
push
xor
dec
shrl
mov
push
bound
inc
pop
mov
jnp
xchg
sub
or
mov
call
andb
add
fs
jbe
cmp
fcmovbe
dec
cltd
sbb
pop
mov
fildll
test
inc
jne
push
adc
push
inc
or
jg
push
sbb
cmp
sbb
addr16
jns
jge
push
lods
divb
push
das
repz
fucomip
sbb
cwtl
inc
add
sub
cltd
fld
fnstsw
ror
pop
push
mov
jbe
filds
out
pop
add
cld
xchg
mov
loopne
sbb
stc
divl
dec
lahf
push
bound
or
pop
cmp
inc
xor
or
popa
push
adc
jbe
or
scas
xchg
aad
scas
inc
push
pop
in
stos
lods
push
lahf
xchg
imul
push
add
cmpl
jb
mov
cmp
sub
movsl
jo
cmp
cmp
mov
sub
daa
lods
aaa
adc
inc
imul
pop
clc
mov
je
xlat
cmp
adc
dec
xor
push
sbb
xor
cmpsl
stos
inc
cmp
dec
inc
lcall
rorl
cmpsl
jp
xchg
mov
add
loope
xchg
push
push
std
or
and
push
xchg
push
push
cmp
sbb
add
inc
scas
cmp
pop
jae
sbb
cmc
sub
jb
cmp
mov
andb
dec
mov
das
lret
nop
outsb
sub
jmp
cmpsl
sub
call
out
ficoms
mov
test
cmp
ja
mov
test
test
push
icebp
mov
mov
pop
je
pushf
xchg
and
jnp
push
out
xchg
xchg
xor
jae
lds
mov
mov
push
jmp
pop
das
xchg
jmp
cmp
fs
mov
sub
fs
mov
insl
mov
cmp
call
jnp
and
push
and
jecxz
add
xlat
xchg
aas
rolb
inc
cmpsl
adc
test
into
and
fldcw
jecxz
and
pop
mov
or
dec
add
int3
jne
insl
pop
push
out
sbb
and
fistpl
xchg
sbb
js
movsl
sbb
aas
add
xchg
aas
jne
cmc
jae
sbb
sahf
fsts
jns
cltd
push
je
call
mov
and
aam
sbb
sub
aaa
scas
adc
mov
leave
repnz
decl
aad
dec
shrb
mov
add
test
mov
xchg
cmc
cmp
repz
mov
pop
lock
jne
adc
daa
mov
inc
cwtl
mov
pop
jge
lahf
and
in
push
adc
mov
push
cmpsl
adc
push
arpl
cltd
hlt
add
pop
addr16
push
imul
outsl
daa
adc
or
aaa
mov
les
sub
xor
psubq
fdivs
les
js
fcoml
add
jne
movsl
or
into
push
and
cwtl
shrb
mov
dec
imul
mov
xlat
lret
fst
mov
add
rcll
adc
repz
fnstcw
imul
and
inc
jl
lods
xchg
cmp
cmpsl
add
ret
cs
ja
fidivl
sarb
test
jne
xchg
and
adc
jb
rcrl
stc
and
andb
divl
pusha
dec
and
dec
jle
xor
adc
jecxz
fistps
push
aas
xor
mov
data16
mov
and
int
test
vmovlps
push
mov
rcll
int
rcrb
xchg
jg
call
popf
jge
sbb
mov
out
xor
jp
xchg
insb
sub
and
int3
ficoms
shrl
push
fldl
pop
in
and
add
push
pop
test
ja
dec
sarb
push
sbb
and
push
adc
dec
fisttps
jnp
mov
inc
dec
jno
daa
push
xchg
dec
test
pop
push
addr16
jbe
jmp
dec
imul
xchg
pushl
cltd
ja
xor
out
or
fiadds
xchg
rclb
hlt
or
popa
pop
movsl
cs
or
or
push
and
and
dec
add
mov
cmp
roll
daa
push
jg
add
jg
pop
lcall
inc
mov
out
cwtl
dec
or
jb
adc
in
in
xor
push
jnp
shrl
xor
dec
inc
je
inc
ljmp
mov
sbb
cld
shlb
xchg
cmp
test
aas
clc
test
gs
mov
dec
push
mov
jmp
test
out
cltd
mov
pop
lods
sub
test
and
ja
movntps
shrb
mov
jp
inc
repnz
dec
xchg
or
ret
imul
arpl
stos
push
cwtl
pop
fwait
inc
out
inc
cld
push
mov
pushf
dec
and
mov
cmp
dec
into
mov
stc
dec
stos
jne
jne
inc
or
and
pop
je
jns
cs
je
scas
lods
mov
inc
sub
in
jge
push
sub
and
jl
and
xchg
sbb
fdivl
add
sbb
and
mov
xlat
mov
add
and
sub
daa
movsl
adc
xchg
fisubs
movsl
and
nop
outsl
and
mov
dec
cli
aam
jmp
or
notl
fldenv
xor
push
fstps
cmp
cmp
dec
add
and
es
cli
push
dec
lret
cmp
sub
and
pop
push
push
jmp
lds
adc
pusha
sub
push
xchg
cmpb
mov
adc
setge
lret
push
je
cmp
xchg
movsl
pop
cmovns
jae
scas
pop
ljmp
pushf
dec
lahf
jo
movsb
and
sbb
mov
jno
data16
lahf
ficoms
mov
pop
pusha
xlat
inc
push
aam
or
mov
les
jne
xchg
shlb
pop
negl
mov
xchg
push
clc
jecxz
pop
imul
adc
push
dec
adc
orl
in
sub
or
push
xchg
and
test
sti
mov
outsl
mov
cmp
and
dec
sahf
push
faddl
test
xchg
ret
lretw
sub
push
inc
push
adc
jo
mov
js,pt
sar
test
loope
fnstcw
jp
dec
fstpl
call
cltd
sub
and
lahf
pop
pmovmskb
stos
sub
inc
cmpw
xchg
cmp
scas
sub
fdivl
loop
adc
push
sbb
call
and
pop
gs
and
fmuls
mov
push
loopne
stc
add
test
sbb
push
pop
mov
xchg
in
inc
test
sub
test
mov
jmp
les
cli
insl
clc
lcall
je
push
enter
nop
ret
je
cmpsb
adc
popa
and
mov
inc
push
movsb
mov
lret
pop
sbb
mov
dec
push
les
pop
pop
mov
dec
mov
lods
fldenv
lahf
mov
or
xchg
ljmp
xor
push
adc
mov
addb
lcall
fwait
jle
aad
xchg
mov
mov
rorb
push
cwtl
lds
les
and
inc
int3
xor
lcall
mov
pop
jno
fists
xchg
sbbb
push
dec
cmp
mov
jl
xchg
mov
pop
testl
mov
sub
in
sbb
jae
or
xchg
dec
fisubrs
mov
jge
adc
lods
sbb
aam
mov
adc
decl
clc
test
dec
ret
mov
push
push
jp
iret
test
push
adc
loope
push
fs
negl
lret
loop
fldl
xchg
pop
and
mov
aaa
and
and
test
divb
and
ds
cli
mov
xor
int
das
mov
xchg
add
enter
aad
ror
sbb
inc
clc
xor
cltd
fcom
or
repz
lods
lock
addr16
and
jle
fs
hlt
mov
fists
jne
dec
call
clc
jg
call
jl
test
test
je
and
cmpsl
xchg
push
ljmp
call
test
inc
std
add
push
dec
adc
jecxz
push
cmp
and
cmc
inc
add
mov
sbb
test
cmp
mov
stos
shr
fs
mov
xchg
jne
cli
and
mov
jmp
adc
and
sub
sbb
out
push
jb
pop
lds
pushf
outsb
into
lock
cld
das
mov
jg
add
push
fs
mov
call
jne
push
and
dec
cld
cs
xchg
clc
or
pop
push
push
cmp
push
cmp
addr16
call
dec
xor
pop
scas
rolb
push
pop
xchg
sarb
pop
insl
fcmovbe
sbb
cmp
adc
loop
in
movsb
xlat
stos
and
mov
loopne
push
or
sub
divl
out
sub
pop
jmp
out
daa
sbb
sbb
xchg
in
or
pop
push
shrb
call
std
xchg
out
adc
mov
mov
out
and
push
aad
mov
addl
pop
inc
rorb
add
or
push
call
int3
imul
and
cmc
shrl
sub
mov
repnz
sub
cmpsl
pop
mov
repz
aas
mov
cmp
push
dec
xchg
mov
mov
and
pop
xchg
push
lods
dec
pushf
lods
pop
data16
push
or
pop
pop
push
push
sub
nop
ljmp
dec
pop
jle
in
rolb
test
or
mov
push
int3
loop
pop
mov
loopne
popf
enter
je
xchg
sub
mov
sbb
dec
mov
aaa
and
mov
push
add
movsb
icebp
or
mov
leave
mov
adc
and
lcall
out
int3
stos
pop
mov
sub
sar
popa
jbe
dec
and
fsubrl
ljmp
and
stc
push
sub
cltd
inc
xchg
inc
movsl
stos
div
and
pop
mov
push
clc
cmc
out
pop
xor
sti
cmc
outsl
cmp
xor
or
and
adc
je
or
sub
cmpsl
frstor
dec
cmp
insl
insl
cmpb
inc
mov
mov
outsl
dec
fcoml
jle
pop
sub
outsb
loop
push
pushf
scas
mov
push
push
mov
movsl
xchg
pop
rolb
add
test
rorl
hlt
stos
je
push
in
or
test
mov
adcb
movsl
adc
pop
xor
scas
test
pop
sbb
dec
xchg
out
and
paddusb
inc
or
adc
lahf
mov
ffree
push
or
imul
cs
push
sbb
jge
xor
out
jb
addl
and
sbb
jne
int
mov
push
or
faddl
jne
ss
sbb
cmc
or
daa
loopne
aam
daa
push
and
xor
xchg
pop
movsl
pop
movsb
jns
cmp
mov
mov
lods
call
xor
pop
adc
push
mov
loope
cmp
cmp
aas
lret
cmp
bound
cmp
pop
cmp
dec
ret
push
les
int3
int
push
jge
jg
out
dec
push
call
fyl2xp1
jns
inc
xor
adc
iret
dec
or
push
sub
test
sub
mov
cld
in
pop
fsts
sbb
and
es
add
jb
push
std
in
xchg
cmpb
cld
dec
mov
pop
jnp
or
mov
sub
push
adc
movsb
dec
clc
repz
mov
cltd
inc
cmp
test
inc
pusha
mov
adc
sbb
inc
pop
mov
inc
ret
fs
cmp
jo
clc
push
dec
shlb
and
rolb
jmp
push
adc
loop
mov
jl
push
xchg
sbb
std
cmp
mov
je
ds
mov
mov
sub
push
and
mov
icebp
and
imul
dec
sarb
inc
jp
lret
or
jg
scas
push
adc
dec
popa
les
scas
mov
and
imul
inc
jnp
mov
jb
add
dec
je
jmp
and
xor
xchg
pusha
sub
xor
sub
inc
stc
pop
repz
popa
mov
rclb
mov
and
rcl
hlt
or
adc
fwait
lock
mov
mov
jp
adc
pop
xor
loop
pop
loope
outsl
repz
mov
push
leave
sub
jle
stos
lret
xchg
sub
sarl
pop
imul
sub
lret
es
test
dec
ljmp
inc
and
jne
mov
shll
pop
inc
daa
dec
add
dec
ljmp
roll
add
cs
divb
inc
nop
xor
xor
add
clc
pop
sbb
je
ja
mov
xor
or
sbb
jmp
int3
rcr
pop
xor
adc
popa
out
mov
or
js
add
imul
push
pop
push
lea
jne
push
or
sub
clc
mov
cltd
or
jns
stc
fisttpll
lret
rcrl
repz
aaa
scas
ljmp
lods
movsl
inc
push
jmp
int3
and
std
add
stos
push
ljmp
add
sbb
push
in
push
cmp
inc
test
pop
adc
lods
cmp
movsl
xor
js
mov
xchg
xor
jo
jne
scas
pop
cmp
push
dec
and
das
push
and
pop
mov
push
jns
inc
stc
scas
int3
std
inc
sub
xchg
adc
arpl
je
in
idivl
aad
out
adc
popa
dec
mov
mov
sarb
inc
aam
xchg
lret
fwait
test
stos
jae
jne
ljmp
sub
aas
mov
mov
daa
jbe
loopne
outsb
and
sbb
sar
insl
push
jns
inc
dec
xor
stos
fldenv
mov
xchg
test
das
jecxz
movsb
pop
rcl
mov
push
mov
mov
add
repz
ljmp
cmp
pop
ret
cmc
xchg
ja
cli
add
ret
mov
xchg
orps
dec
hlt
clc
jbe
shll
stos
loope
sub
mov
jge
lahf
orb
sub
pushf
je
popf
negl
ja
add
and
clc
mov
in
rcl
push
dec
pop
pop
fdivrs
xchg
in
in
jne,pn
test
fwait
push
ljmp
sub
imul
add
or
dec
jne
xchg
iret
pop
jg
pop
mov
aad
inc
sti
ds
lea
adc
push
mov
mov
popw
adc
sub
cs
imul
inc
push
mov
xlat
out
mov
jb
pop
xlat
in
sub
xor
jne
mov
and
cmp
mov
nop
jge
lea
mov
xor
sub
and
xchg
adc
push
cmp
imul
shrb
test
test
dec
or
mov
mov
enter
cmp
lret
call
leave
mov
out
xlat
bound
loop
xchg
add
push
bound
adc
dec
cs
fnsave
or
imul
cmp
push
xchg
jno
imul
fcmovnbe
nop
xor
scas
popf
mov
jmp
push
imul
sub
enter
ficoml
or
jl
lret
pushf
inc
mov
lahf
popf
fstpl
push
popf
inc
sti
fistps
lcall
test
je
repnz
mov
push
dec
repz
xor
mov
std
loopne
int3
mov
add
popa
pop
out
mov
stos
in
fdivrs
test
repnz
sbb
sub
xchg
push
sbb
fimuls
xor
inc
or
sub
mov
pop
pop
cmp
lret
rcrb
lds
dec
xor
inc
and
dec
pop
int
fnstcw
fs
lea
mov
push
xchg
roll
cli
and
xchg
pushf
and
cmc
and
inc
add
adc
sub
or
dec
ret
adc
xchg
jle
mov
jp
ljmp
push
sbb
xor
movsb
or
sub
sarb
or
or
dec
and
jmp
add
gs
lds
jecxz
jae
add
ds
xor
loopne
push
xchg
out
lods
adc
arpl
cmpl
nop
insb
push
inc
adc
dec
adc
cmp
addr16
xchg
cmp
shrl
push
or
subb
daa
mov
xor
and
movups
push
adc
xor
xchg
or
fucom
mov
jge
cmpsl
popa
add
mov
ja,pt
and
data16
cld
ret
cmp
ffree
daa
iret
adc
inc
je
inc
mov
xlat
fcom
cs
adc
pop
rorb
lret
sub
inc
cmp
push
mov
jl
mov
fnsave
dec
and
add
or
sub
leave
sub
imul
inc
inc
or
xchg
cmpsl
jno
das
mov
and
test
mov
out
pushf
je
and
outsl
or
cmpb
jg
fdivl
hlt
ret
pop
mov
mov
dec
mov
shlb
sbb
push
ljmp
push
clc
adc
push
push
cli
jmp
bound
outsl
dec
or
inc
and
loop
or
test
dec
dec
or
stos
pushf
cmc
push
andb
hlt
push
mov
mov
cmp
mov
jmp
and
rcr
sti
shll
inc
inc
mov
shlb
rcrb
mov
adc
jno
mov
sub
hlt
std
mov
mov
inc
test
jno
jne
mov
cld
scas
push
ficompl
test
xchg
xchg
mov
cmpsb
pop
int
outsb
lock
pop
pop
xchg
or
pop
sub
das
popf
cmp
sbb
pop
or
lock
push
lret
mov
movsl
cmp
neg
insb
and
pop
gs
mov
mov
aas
mov
jo
inc
sub
cmp
mov
in
aad
xor
lret
sub
and
ja
pushf
scas
outsb
dec
decl
or
xchg
sub
push
pop
mov
push
into
dec
mov
push
inc
das
mov
shll
sub
adc
lret
pushf
mov
pop
divb
add
cmp
or
stc
stc
gs
mov
sub
jp
jmp
adc
pop
jb
jae
imul
push
and
or
in
sub
je
movsl
stos
jbe
clc
push
push
and
pop
jmp
xlat
pop
insb
sub
test
inc
adc
or
or
xchg
mov
ret
int
mov
leave
push
nop
xor
xchg
clc
popf
adc
out
sahf
mov
pop
adc
push
xchg
mov
and
in
cmp
test
cmp
scas
pop
and
mov
or
xchg
mov
mov
pusha
mov
mov
jb
aaa
inc
add
stos
sub
push
subl
lcall
or
pop
lods
add
sbb
clc
adcl
adc
lock
and
jnp
out
addl
mov
xchg
scas
pushf
pop
rolb
inc
fsubs
enter
or
jl
roll
ret
fistps
ja
pop
mov
adc
dec
inc
mov
outsb
and
aas
inc
data16
jecxz
sbb
add
push
or
sbb
push
aaa
movb
push
or
cmp
add
adc
jne
sbbl
int
or
and
pop
xchg
push
sahf
mov
sbb
add
sub
std
cs
add
adc
fldl2e
je
push
mov
enter
mov
mov
leave
mov
loopne
push
dec
or
mov
enter
pop
mov
jg
xor
in
jmp
push
es
divb
pop
aas
pop
test
in
adc
inc
or
cmpsl
or
adc
inc
mov
mov
sbb
dec
xor
jle
stos
sbb
push
xchg
pusha
push
push
dec
js
rolb
sub
push
test
push
mov
stos
adc
xchg
pop
loope
mov
push
sbb
ror
or
push
push
adc
pop
in
roll
dec
add
bound
incl
dec
and
cltd
loopne
sbb
imul
jne
xchg
cmp
fsubl
fwait
ja
shlb
movsb
cmpsb
or
inc
push
sub
inc
or
rcll
inc
xchg
jbe
cld
xorl
xchg
add
xchg
add
cltd
ret
jmp
sub
scas
pop
aas
mov
pop
cmc
lret
iret
mov
push
mov
mov
aam
cmp
outsl
mov
shll
mov
mov
mov
cmpsl
daa
push
xchg
jle
pusha
ret
mov
lahf
lock
sbb
inc
and
movsl
jle
les
enter
hlt
mov
das
lret
xchg
dec
int
jp
push
add
mov
lret
mov
lea
stos
bound
mov
mov
leave
adc
js
loope
inc
jo
in
mov
push
sub
pop
sahf
push
sub
fistpll
xor
ror
mov
pushl
inc
fdivr
imul
cmp
fisttpll
or
dec
cld
loopne
inc
in
xlat
xchg
jae
mov
cltd
sub
int
popa
sbb
ret
movsl
jbe
inc
aaa
aad
ret
inc
or
xchg
pusha
xchg
add
dec
or
shlb
rcll
push
add
pop
mov
mov
sub
mov
inc
in
fcoml
inc
dec
aam
int3
or
test
loop
adc
xchg
sbbl
cmp
mov
jb
xor
adc
std
mov
inc
and
or
popf
jno
jae
out
sub
repz
nop
gs
dec
scas
adc
cld
popa
flds
pop
hlt
pop
addl
fadds
fiaddl
push
lods
mov
cmpb
xchg
add
test
or
pshufw
cmp
push
or
pop
add
add
ja
sub
pop
stc
cmpsl
sbb
push
sub
mov
or
in
mov
aaa
les
adc
and
icebp
and
add
sub
cld
ss
mov
stc
or
in
or
cli
push
dec
pop
hlt
int3
xor
jne
aam
jge
movsl
add
insb
and
mov
scas
lret
xchg
cld
addr16
xor
test
test
add
push
fs
mov
sbb
xchg
add
lar
fmuls
and
adc
cli
dec
in
adc
jae
test
inc
fdivl
or
loopne
adc
movzbl
mov
les
gs
or
adc
movsl
adc
push
and
arpl
add
push
pusha
sub
adc
push
jne
hlt
stos
mov
fmul
or
test
mov
mov
cmp
xchg
outsb
cmp
inc
leave
mov
gs
mov
clc
dec
fisubl
and
and
pop
xor
stos
ret
roll
jecxz
shll
stos
sarb
push
cmc
mov
inc
pop
pop
lret
sbb
movsb
stos
adc
cmp
repnz
inc
or
lret
push
fwait
sbb
push
aam
mov
push
repnz
or
popa
in
adc
cmp
xchg
jmp
and
or
pop
push
sbb
idivb
jp
add
das
or
les
clc
jmp
adc
adc
sub
jmp
clc
jmp
mov
add
and
jle
ja
sbb
mov
jmp
or
movswl
dec
add
outsl
add
cld
out
jmp
dec
test
mov
ror
or
push
xlat
outsl
out
jge
inc
ret
mull
sbb
cmp
cli
hlt
out
test
cmp
mov
cmp
or
outsl
jg
jmp
or
dec
les
int3
rorb
jg
xor
dec
sub
test
xor
adc
mov
out
jns
dec
ja
xchg
loop
jl
xchg
jl
sbb
daa
jg
jns
pop
jbe
andb
or
enter
or
fbstp
int3
cmpsl
inc
xchg
cs
popa
loopne
loop
cmp
xor
adc
fwait
cs
adc
push
mov
mov
sub
add
ror
call
mov
dec
hlt
xchg
out
clc
clc
xor
xchg
xchg
adc
int3
xor
das
mov
push
fisttpll
sub
int
leave
orl
jnp
jae
hlt
jmp
gs
ret
dec
cmp
mov
and
or
xchg
je
mov
in
jg
sahf
sahf
movsl
jge
dec
stos
xor
aam
pop
adc
and
imul
push
mov
nop
pop
lds
mov
or
shlb
adc
inc
cmp
or
and
and
and
add
pop
and
fwait
jg
mov
pop
xchg
stc
ret
jmp
mov
std
popa
pop
addb
add
pusha
push
dec
mov
lds
std
outsb
push
and
ret
jmp
out
loope
mov
sahf
mov
jbe
mov
adcb
dec
pop
scas
pop
mov
add
repnz
xchg
adc
movb
inc
test
fstpt
pop
adcl
add
lret
adc
jecxz
mov
add
push
dec
add
test
ret
dec
adc
mov
and
pop
and
sub
cmp
dec
ds
mov
xlat
js
cmp
cmp
push
sub
sbb
jle
gs
push
push
ret
ja
mov
sahf
push
loopne
loope
mov
dec
mov
adcb
cmp
test
arpl
and
ljmp
cmp
pop
cld
or
xor
movsb
jge
scas
sbb
stos
dec
jo
add
pop
mov
test
ficoms
in
pop
jle
mov
stos
int3
pop
cwtl
pushf
dec
push
pusha
sub
fs
pop
call
enter
sbb
aaa
add
arpl
mov
ret
dec
sbb
movsb
out
loopne
mov
mov
cmp
push
sbb
mov
dec
pop
pop
mov
mov
pop
or
movsb
push
iret
ljmp
inc
or
xchg
std
add
xchg
push
or
add
inc
and
sbb
stos
mov
pop
jmp
adc
hlt
fxch
ficoms
jmp
test
inc
push
sar
push
push
inc
fmull
pop
adc
loopne
jns
sbb
mov
inc
sahf
and
inc
or
push
push
or
call
xchg
jne
mov
fstl
push
mov
int3
out
sbb
cltd
sub
sbb
in
inc
in
adc
loope
jnp
add
hlt
incb
jnp
ljmp
stos
and
add
push
shl
dec
add
cmp
and
scas
int3
or
orl
push
cmc
mov
and
xchg
push
push
sbb
mov
rcrl
ljmp
push
cltd
lahf
xchg
pop
add
shrl
imul
xor
cmpsb
and
out
mov
sub
jnp
xchg
in
sti
mov
in
inc
mov
inc
push
rcll
push
pop
push
adcb
jnp
leave
lahf
jns
add
pop
movsl
loopne
lods
sbb
cmpb
icebp
jle
sub
js
aaa
imul
or
cmp
divb
mov
pop
mov
mov
pop
jecxz
and
movl
xor
and
pop
jmp
leave
pusha
inc
iret
std
int3
and
ficoml
lret
dec
in
out
adc
inc
pusha
pop
jmp
adc
inc
decb
fs
out
lods
sti
fsubp
ja
inc
scas
sub
add
xor
fldt
rolb
push
add
fwait
les
push
jmp
dec
sbb
inc
inc
push
adc
xchg
stos
or
out
imul
fidivs
mov
pushl
mov
jp
scas
inc
insl
out
aas
test
mov
sub
or
add
scas
sub
addr16
jge
pusha
sti
stos
mov
dec
cld
test
pop
dec
pop
gs
orb
add
inc
mov
movsl
xor
fwait
sub
dec
cli
adc
test
es
outsl
dec
or
cmp
insb
dec
test
je
mov
mov
in
cmp
xor
push
xchg
sarb
jp
daa
or
sbb
inc
fs
xchg
sbb
dec
stc
xchg
xchg
jmp
loopne
sbb
dec
test
mov
adc
xchg
inc
dec
inc
fucomip
push
pop
test
lods
or
das
int
inc
xor
mov
add
add
and
in
outsb
lret
jmp
mov
out
out
fwait
daa
stos
lahf
movsl
jbe
sub
mov
adc
and
addb
in
pop
and
jne
mov
es
cmp
mov
mov
mov
jmp
sbb
fs
cmp
jne
cmpl
lret
ret
inc
addr16
jns
movsl
ret
dec
jno
or
mov
inc
pop
adc
rclb
jecxz
daa
js
push
or
imul
pop
cwtl
xchg
mov
pop
mov
inc
lcall
aaa
jo
popa
jae
jne
jge
adc
rcll
mov
push
aad
std
sub
jmp
std
cmp
pop
inc
push
repz
mov
sub
inc
push
adc
repz
sub
jmp
inc
jmp
jle
jne
sub
inc
push
push
aad
repnz
and
movsl
arpl
das
push
add
xchg
mov
cmc
sbb
adc
dec
xor
sbb
testb
or
jmp
std
insb
cld
xchg
jae
jle
adc
adc
adc
scas
lds
xor
pop
xor
jmp
dec
dec
aam
aaa
les
pop
inc
inc
jg
sahf
adc
dec
loopne
add
adc
pandn
mov
leave
push
pop
lods
leave
jge
inc
mov
shrl
jge
stos
xchg
pusha
out
sub
inc
mov
pop
sbb
push
or
dec
lahf
jno
dec
ljmp
mov
popf
movsb
js
mov
gs
mov
inc
fsubrl
pop
cmp
jo
mov
rorl
xchg
jno
cmpsl
dec
out
daa
push
cmp
imul
into
or
pop
sbb
jg
jb
repz
jbe
sub
sub
inc
add
cmpsb
push
inc
add
push
dec
cmc
adc
cmpl
test
test
cmp
or
js
mov
nop
push
or
and
adc
push
add
push
or
sub
or
or
leave
jo
stos
outsb
test
sub
jp
xor
sub
adc
push
test
or
xor
outsl
dec
sub
push
je
sub
movsb
jno
push
adc
lcall
stos
push
call
sbb
xchg
stos
dec
in
inc
xor
shlb
arpl
call
lahf
fninit
and
sub
repz
loopne
adc
and
jge
je
mov
and
mov
or
iret
adc
mov
pop
dec
or
xor
sbb
push
lret
sbb
xchg
movsb
and
jne
sub
test
dec
push
jne
and
orl
pop
mov
pop
pop
xor
cmpsl
push
push
pop
sub
xchg
iret
jno
mov
dec
pusha
cs
xor
lret
and
xchg
jno
ret
aam
mov
dec
push
in
lret
xlat
out
mov
lahf
dec
and
add
xor
adc
jo
into
sub
hlt
cmp
loop
arpl
mov
push
cld
add
pop
mov
add
jle
xor
mov
fsubl
lods
adc
cli
fwait
andl
xor
xchg
pop
dec
fsub
arpl
jecxz
adc
add
mov
imul
xor
jb
xchg
push
aad
pop
int3
outsl
out
or
mov
or
xorl
call
mov
dec
icebp
sti
cmp
mov
roll
imul
mov
jmp
xor
xor
lcall
sbb
mov
aaa
xchg
xor
jg
dec
fcmovb
push
icebp
fldl
add
add
inc
inc
jl
pushl
inc
insb
or
js
add
loopne
mov
sahf
fdivrl
lods
or
xor
xor
insl
dec
clc
ljmp
iret
xchg
ret
mov
jo
inc
dec
adc
sub
outsl
xor
inc
leave
pop
fidivl
fstps
scas
and
loopne
mov
xor
inc
and
push
push
test
dec
inc
add
push
rcl
aam
mov
sub
dec
cli
jne
xchg
xor
ret
push
jmp
and
aam
and
jmp
mov
ret
sub
mov
pop
inc
push
adc
pop
xchg
cmp
and
jle
decb
stos
sub
xchg
mov
out
scas
aad
dec
push
stc
enter
in
sysexit
test
mov
mov
add
mov
mov
push
jmp
inc
fs
pusha
or
mov
sti
xor
push
push
jge
sub
mov
js
pop
mov
sbb
inc
scas
jecxz
dec
scas
xchg
add
and
mov
push
dec
shlb
loopne
add
lea
scas
cmpsb
cmp
dec
mov
pop
jnp
lret
insb
cltd
push
inc
or
mov
ficompl
sub
mov
sti
rclb
insl
in
jmp
or
aaa
imul
and
sub
fstpt
xor
testl
push
std
or
out
movsl
push
pop
mov
aad
mov
rorb
sub
sbb
stos
lret
je
dec
push
push
cmp
ds
push
call
roll
in
data16
lock
xchg
lods
dec
mov
fidivs
jmp
lds
notl
push
and
shll
cwtl
xchg
out
cmp
push
popf
std
mov
es
lret
add
inc
adc
pop
imul
xchg
dec
in
jecxz
pop
add
dec
mov
insb
inc
dec
loopne
aas
mov
push
fsubrl
pop
pop
orb
and
xorl
push
stc
or
xchg
xor
sbb
dec
xor
inc
mov
test
and
xor
push
pop
mov
ja
xor
shl
pop
sub
jmp
fistpll
or
cmp
mov
cli
push
out
orb
dec
ljmp
pop
scas
frstor
mov
imul
sub
inc
adc
fld
or
ss
es
and
int3
xchg
jne
negl
sbb
sbb
push
pop
push
sahf
push
stos
arpl
daa
fdiv
aaa
jmp
sub
ror
in
push
test
movb
mov
push
adc
popf
jl
imul
stc
push
sub
mov
jb
loope
or
sbb
pop
test
into
or
std
sbb
es
and
jne
popl
dec
sub
dec
cli
hlt
sahf
xor
lock
sbb
fldt
call
xchg
pop
ret
imul
or
int
nop
js
jb
sbb
xor
or
cmp
jl
mov
clc
scas
sbb
mov
mov
and
jge
movsl
mov
xchg
adc
push
adc
jg
je
pushf
add
push
jp
sub
lods
outsl
imul
sbb
jl
lcall
inc
add
aad
push
jle
jmp
dec
jnp
mov
fcmovb
into
cli
pop
adc
lods
push
pmullw
je
pop
cmpsl
and
pop
pop
jl
mov
and
test
mov
push
mov
jns
outsb
lret
out
jo
xor
adc
mov
ds
or
out
fmul
cmp
pusha
lock
and
clc
mov
adc
adc
push
clc
inc
mov
push
fldt
rcrl
add
pop
sub
inc
pushf
mov
mov
push
testl
test
test
cltd
jmp
push
sub
inc
adc
push
inc
xchg
adc
adc
cmp
lahf
inc
mov
shrl
lods
mov
loope
cmp
pop
or
roll
iret
dec
jg
mov
shlb
leave
cmpsl
aam
inc
mov
sub
mov
lea
inc
dec
popf
mov
mov
and
loopne
movsb
jge
decb
push
ficoms
out
xor
rorl
push
sar
movsb
pop
aaa
mov
das
or
mov
and
loop
in
xchg
out
movsl
insb
sahf
inc
lock
mov
jne
mov
lea
dec
jo
xchg
sub
xchg
xchg
clc
sahf
adc
mov
adc
pop
lahf
pusha
lea
mov
adc
adc
mov
adc
pop
adc
fldcw
jmp
notl
imul
in
adc
lea
dec
lahf
nop
pop
or
jae
sbb
inc
pop
jmp
and
addr16
add
or
xor
loopne
sub
dec
hlt
adc
push
sub
jmp
test
test
popa
mov
sbb
aas
rorl
or
sub
imul
call
mov
xchg
add
js
loopne
add
sub
loope
xchg
mov
addr16
test
fisubrs
dec
pop
dec
mov
add
mov
dec
push
mov
jae
and
and
cmpsb
adc
movsl
setae
adc
pop
dec
or
outsb
adcl
inc
adc
dec
adc
adc
jecxz
mov
sahf
stc
inc
push
cmp
loope
inc
jle
adc
outsl
xchg
pop
fstpl
imul
sbb
roll
mov
adc
and
or
lahf
jne
jne
sbb
sub
inc
fs
stos
sbb
dec
sbb
dec
icebp
ss
lcall
or
aad
xor
push
fsubl
mov
pop
jmp
push
cld
test
mov
mov
imul
adc
mov
jo
sbb
mov
inc
loope
nop
mov
adc
fidivrl
test
data16
cmp
and
pop
hlt
dec
cmc
xchg
mov
inc
incl
add
sub
adc
call
cmp
xorb
xchg
in
sub
cmc
jle
sub
lock
hlt
aaa
push
or
test
sub
ret
push
push
adc
mov
test
add
push
mov
mov
cmp
cwtl
cmc
inc
dec
pop
add
mov
fldl2t
jp
fs
dec
push
leave
dec
jl
inc
in
push
xchg
cli
sbbb
lods
adc
jne
jno
mov
sbb
sahf
jno
xor
aam
xor
js
adc
ret
pop
inc
sub
call
xchg
cltd
fistl
popf
cmp
sub
pop
inc
or
inc
sti
dec
sbb
add
jnp
gs
ds
adcl
cmpsb
cmpsl
cli
mov
hlt
mov
jae
shlb
jns
orl
sub
or
inc
insl
hlt
sub
inc
scas
or
cld
icebp
pop
mov
pop
dec
popf
pop
sbb
lds
sub
pop
xor
and
lea
cs
xor
fs
xchg
pop
push
adc
jns
cld
pusha
movsl
mov
sub
pop
push
cmp
sbb
mov
dec
les
push
xchg
gs
sbb
cmp
pushl
jp
imul
mov
and
dec
inc
out
pop
mov
adc
xchg
mov
imul
cmpsl
push
xchg
push
movsl
or
out
cmp
movsb
dec
lock
jmp
adc
mov
dec
inc
and
sub
dec
push
test
imul
cs
sti
or
hlt
pop
repnz
xchg
stos
test
sub
and
or
inc
jo
adc
sbb
test
add
jnp
test
clc
mov
sub
out
sub
jno
js
stos
jl
cmpsb
and
out
repnz
push
pop
pop
scas
pop
mov
imul
lods
dec
subl
mov
stos
jl
xor
sub
dec
xchg
mov
ficoml
scas
cmp
adc
inc
mov
sahf
xchg
mov
leave
lods
jg
cmp
gs
into
lret
scas
sbbb
or
adc
mov
mov
jne
out
rdmsr
ss
sysexit
es
xchg
ja
enter
int
pop
into
jmp
pop
cs
movsl
push
xor
mov
xor
or
imull
jmp
sbb
xchg
jmp
add
xchg
dec
dec
cli
mov
push
rorb
inc
mov
inc
or
push
fcoml
paddq
inc
mov
sub
pop
lea
les
leave
sub
add
sbb
mov
sbb
je
or
jmp
xor
jp
sbb
push
in
pop
sbb
aas
mov
fildll
push
and
insb
addl
call
xor
faddl
jne
daa
push
xor
fmull
jg
xchg
pop
pop
std
mov
jg
clc
daa
pop
dec
sbb
shll
aaa
loope
mov
hlt
mov
cmp
adc
cld
into
push
decl
adc
ja
leave
jmp
je
lock
jne
ret
nop
fadds
xchg
fwait
int
adc
cmp
scas
es
pop
out
mov
xor
test
dec
adc
dec
adc
mov
mov
sti
push
push
mov
das
xchg
xor
aad
loope
push
jo
js
adc
push
shl
cld
push
test
xchg
lds
xchg
mov
and
stos
repz
lods
sub
xlat
xchg
pop
cmp
fcmovbe
mov
stos
cmp
repz
cmpsl
ja
xchg
pop
hlt
push
and
pop
push
xchg
and
xchg
enter
sbb
ja
lds
cli
mov
repnz
xor
dec
xor
mov
jb
fsubrl
faddl
outsb
adc
sub
orb
ds
mov
fs
add
adc
adc
ds
mov
outsb
xchg
sbb
sub
pushf
cmpsl
xchg
push
xchg
push
fisttps
loop
ljmp
enter
pop
xor
fs
inc
pop
cmp
nop
loop
jo
ljmp
aam
add
lcall
ffree
and
mov
data16
mov
jmp
inc
cmp
lock
push
xchg
push
dec
in
inc
pop
pop
mov
and
push
mov
sahf
sbbl
mov
cltd
mov
pop
shll
adc
cmpb
push
sahf
lahf
xor
cmpsl
movsb
push
stos
jne
sub
push
xchg
push
push
xchg
stos
adc
nop
dec
jl
mov
insb
cmpb
pop
rcpps
ljmp
dec
imul
pop
frstor
pusha
fstl
pop
shll
push
xchg
and
into
mov
ret
dec
scas
sbb
test
enter
pusha
jnp
push
pop
mov
and
adc
mov
push
push
push
cs
lds
dec
sub
cmpsb
fldenv
adc
cld
dec
ficoms
popf
and
loope
adc
in
lret
or
aam
sub
sar
test
xchg
or
pop
fwait
xor
push
in
in
sub
pop
push
pop
imul
imul
jae
call
pop
adc
mov
push
sub
mov
pop
add
fistpl
push
sub
or
xchg
mov
jmp
stos
sub
lock
adc
add
jg
pop
insl
push
sub
sti
xor
stos
inc
pusha
mov
repz
test
in
dec
xchg
or
addl
lock
cmp
lea
add
xor
jmp
in
sbb
jg
jb
popf
sahf
mov
xor
adc
stos
and
xchg
mov
fsubrp
dec
push
push
jmp
insb
loope
mov
aaa
mov
xor
adcl
xchg
dec
xchg
mov
lcall
push
jp
leave
ret
and
push
sahf
rclb
in
and
mov
adc
and
adc
mov
out
fwait
sbb
add
add
pushf
scas
xchg
popf
movsl
adc
or
cmc
sbb
test
cmp
jnp
aaa
push
jp
xor
adc
mov
mov
scas
xor
inc
sbb
lret
push
mov
inc
scas
inc
mov
xor
das
xchg
mov
mov
push
inc
aaa
les
dec
je
mov
jecxz
mov
jge
mov
xchg
or
cs
cli
loopne
aaa
repz
cmp
int
cs
testb
mov
icebp
pop
das
xchg
rcr
push
cmp
mov
fdivs
stc
sarb
pop
push
pusha
sub
mov
loopne
pop
cmp
inc
push
jl
mov
push
sbb
sub
jmp
insl
add
push
ja
iret
ljmp
push
shr
testl
inc
xchg
add
push
fwait
sub
insb
mov
and
dec
dec
pushf
cs
sbb
mov
ret
sbb
mov
fisubrl
add
mov
jb
add
cmpl
test
movhps
call
lds
cmpl
pop
add
sahf
nop
pop
mov
js
mov
nop
or
and
cmpsb
or
int
dec
inc
dec
imul
dec
ja
or
jle
mov
or
sub
loopne
push
in
out
and
add
adc
pop
push
sbb
inc
adc
leave
cmp
mov
fistpl
inc
dec
push
into
add
arpl
mov
bound
xor
mov
dec
and
fstl
das
xchg
lea
push
inc
or
ja
cmp
int
ljmp
and
lods
cmpsl
adc
cmp
mov
fldl
imul
sub
jo
push
hlt
mov
mov
xchg
mov
mov
xchg
das
decl
rorl
popf
inc
and
ficoml
sub
sub
and
add
cmc
cmc
idivl
mov
adc
jb
mov
divl
or
xor
inc
xor
and
enter
leave
xchg
and
push
mov
push
jns
sub
ds
push
cltd
cli
xor
ror
sbb
rorl
mov
mov
test
pop
ljmp
inc
mov
inc
dec
adc
cld
dec
out
jp
or
dec
push
lcall
jbe
mov
mov
sub
lods
dec
lret
xor
movsl
sarl
shll
xor
xor
jmp
adc
xchg
mov
lahf
je
scas
xor
pop
popa
add
inc
or
mov
jge
lcall
imul
xchg
cmc
cmp
inc
or
pop
pop
negb
push
xor
adc
mov
sbb
fs
int
aam
into
xchg
jnp
or
pop
add
mov
std
jns
ret
dec
sahf
sbb
pop
and
inc
adc
call
mov
cs
and
adc
call
sbb
cmp
mov
pop
aad
andb
test
leave
lock
mov
push
xlat
mov
sub
or
and
cli
pop
popa
arpl
int
adc
jecxz
sub
imull
mov
inc
xchg
std
out
or
adc
and
push
pop
ret
loop
mov
adc
or
sub
rcrl
sbb
dec
movsb
sbb
xor
mov
test
stos
out
loope
fwait
pop
sub
inc
fwait
mov
dec
push
sbb
mov
ds
adc
pop
adc
ds
add
mov
ds
or
int3
in
and
ds
adc
cld
in
daa
push
mov
and
and
in
into
cmp
pop
inc
xchg
out
xor
push
xor
push
push
dec
dec
sub
pop
push
imul
in
inc
xor
inc
gs
jbe
push
inc
push
lods
dec
popa
jae
cmpsl
adc
and
jbe
jb
imul
jne
sbb
sbb
ljmp
icebp
scas
pop
ja
or
inc
dec
je
sbb
jb
sub
dec
mov
or
dec
outsl
inc
data16
adc
cmp
dec
mov
rclb
adc
adc
mov
push
lret
cmp
mov
add
push
mov
fldt
out
das
lods
add
push
lods
cs
xchg
push
dec
push
mov
es
lods
inc
cld
jg
ja
popf
inc
dec
test
mov
or
sub
fstpt
fiaddl
mov
xor
push
cmp
pop
test
mov
call
jb
or
mov
fs
or
and
or
dec
lahf
loop
or
frstor
pop
and
push
popf
lds
movsb
fstl
push
or
mov
pop
lcall
push
addr16
mov
adc
scas
lea
loopne
scas
and
inc
mov
mov
lcall
mov
lret
mov
pusha
inc
mov
and
adc
xchg
mov
pop
loopne
in
call
add
repz
and
mov
lock
test
push
jo
bound
adc
out
jns
addb
test
roll
cmpsl
and
imul
call
out
mov
push
add
and
inc
adc
jbe
ss
call
mov
mov
arpl
shrb
mov
pop
add
test
xor
pop
jno
movsl
xor
dec
add
pop
cmp
pop
das
cld
mov
insb
jo
push
pop
inc
enter
out
popa
push
data16
sbb
scas
mov
mov
mov
repz
cmp
pop
add
stc
ljmp
movsb
mov
gs
pusha
and
insl
cltd
inc
imul
push
push
subl
jge
testb
ret
call
adc
rcrb
adc
pop
lcall
cmp
sub
adc
fsubr
inc
negl
js
hlt
inc
inc
lods
add
imul
ret
repz
push
inc
add
addb
inc
mov
scas
ja
aas
fs
or
xchg
mov
cwtl
ja
sbb
push
pop
sbb
rclb
inc
mov
dec
jl
pop
rclb
test
enter
pop
inc
stos
cs
lock
xor
pushf
xor
enter
ss
push
xchg
pop
icebp
inc
xchg
jne
inc
inc
js
inc
sub
and
adc
add
test
adc
and
subb
xchg
test
dec
pop
inc
jmp
aam
rolb
pop
popa
cwtl
inc
inc
push
mov
inc
mov
inc
or
mov
es
pop
inc
cli
lret
aam
js
mov
inc
or
sbb
in
adc
mov
and
inc
mov
inc
push
pop
and
mov
cwtl
adc
shl
rcrl
and
inc
mov
out
inc
inc
in
lock
inc
pop
repz
ficoml
in
pop
dec
and
movsb
call
mov
cld
call
pop
cld
and
adc
mov
pop
inc
ljmp
cmp
mov
cmp
sbb
inc
cmpxchg
xchg
push
jbe
ljmp
and
je
mov
inc
clc
pop
inc
ret
test
dec
les
clc
add
jge
inc
cwtl
arpl
mov
iret
test
cmp
mov
sbb
mov
or
mov
or
adc
out
rcll
sbb
or
cld
mov
enter
inc
je
test
in
or
cmpsl
xor
mov
lretw
or
clc
int3
sbb
je
mov
enter
fcompl
sbb
pop
fmull
cwtl
lods
adc
out
shrb
inc
ror
sub
imul
adc
and
and
xchg
mov
sub
cld
push
xor
and
add
jo
inc
mov
add
inc
sub
pop
fmuls
inc
push
adc
and
xchg
test
jno
arpl
inc
dec
xor
pop
and
int3
das
xchg
ja
mov
fstpt
pop
movsb
xchg
and
xor
push
fistpl
test
je
movsl
cmp
nop
sub
jmp
movsb
enter
push
mov
stc
cs
cli
mov
push
out
adc
leave
or
jbe
xchg
adc
fstpl
cmp
aam
cmp
stos
and
push
call
adc
or
mov
mov
push
and
mov
sub
push
push
add
cmp
jp
mov
test
xchg
ljmp
jbe
arpl
mov
jae
popa
insb
dec
in
insl
and
test
push
sub
lret
push
adc
fs
sub
and
inc
pop
and
and
cmove
jmp
dec
imul
out
cmp
push
lock
pop
sti
fdivs
outsb
mov
mov
push
aas
push
mov
pop
mov
push
push
push
or
subb
add
imul
jmp
sbb
imul
test
mov
ret
xchg
mov
stos
enter
push
loopne
rcrb
add
inc
xor
scas
ds
push
call
adc
push
js
pop
hlt
enter
mov
enter
dec
xchg
inc
hlt
mov
fcompl
jp
fnstenv
sbb
leave
test
pushf
pop
xchg
xor
popf
negb
cmp
jge
loopne
jbe,pn
cli
jno
nop
mov
mov
and
shr
daa
add
enter
jecxz
popf
shr
cwtl
xchg
or
mov
and
addb
ljmp
push
cld
inc
ret
pop
xchg
ljmp
and
ret
and
cmp
sub
or
adc
adc
sbb
arpl
add
rol
ficoms
add
dec
or
out
nop
mov
adc
and
test
or
mov
test
in
add
loop
inc
ret
inc
mov
or
pop
addl
rorb
cmp
cmp
add
push
xchg
in
jmp
add
adc
ret
int3
fildl
xor
or
sbb
jno
popa
iret
lret
les
in
xchg
inc
add
push
lahf
xchg
dec
inc
test
or
sbb
movsb
mov
cmp
je
fisubrl
push
outsb
lcall
and
xor
sbb
aas
cwtl
insb
and
loopne
aam
sbb
sbb
aas
mov
enter
ret
or
sbb
push
imul
cs
nop
loopne
clc
jecxz
out
mov
add
lds
sub
push
jmp
ret
pop
in
imul
and
add
jp
push
pop
int
push
push
xchg
push
mov
jmp
inc
call
dec
xchg
jo
int
inc
scas
lea
mov
jmp
dec
pop
fmull
in
pushf
or
adc
mov
mov
sub
pushf
dec
lock
mov
std
out
dec
jo
xchg
mov
in
in
call
mov
adc
dec
add
and
fmul
or
loope
daa
push
and
xchg
pop
dec
and
push
push
push
jge
xchg
outsb
jmp
push
mov
into
push
mov
lods
aaa
and
jge
jno
es
or
test
in
xchg
repz
add
repz
cmp
ret
pop
cmp
add
fmuls
cmp
imul
mov
les
repz
je
dec
mov
and
testb
adc
and
cmc
aas
jmp
adc
iret
and
push
sub
lret
aam
sub
popa
or
pop
dec
push
xlat
fistps
jae
aam
lahf
jnp
inc
xor
out
push
fsubrl
push
adc
sti
fs
dec
gs
cmpsl
mov
adc
dec
inc
sub
inc
decl
fisttpl
repz
rolb
adc
push
lea
pusha
dec
test
mov
add
inc
dec
jne
hlt
mov
cmpb
mov
mov
test
mov
cmp
or
mov
mov
or
or
mov
push
mov
div
pop
mov
sahf
test
sub
or
xlat
mov
clc
mov
add
dec
ja
fidivs
cmp
inc
fdivrs
mov
dec
push
test
mov
sub
fwait
cmp
out
or
les
jbe
repnz
sbb
adc
pop
xor
cltd
pop
repz
push
adc
adc
dec
mov
repnz
mov
test
cmp
sbb
movl
sbb
inc
and
iret
or
sbb
sbb
hlt
test
push
lret
sbb
call
dec
add
xor
mov
pop
xor
inc
cmc
lods
bound
dec
cld
inc
or
loop
inc
adcl
lahf
int
mov
dec
and
es
ljmp
outsl
nop
popa
and
xor
xchg
and
xor
js
js
test
sar
icebp
data16
mov
mov
das
mov
adc
dec
sbb
pop
inc
cs
cmp
dec
push
and
mov
xchg
or
inc
insb
jp
inc
shr
rorl
call
push
or
call
fistpl
xor
nop
je
insl
shlb
xor
sub
ljmp
inc
mov
jo
ljmp
lock
push
dec
jne
mov
mov
dec
mov
or
out
mov
pop
shrl
cmp
sub
jl
mov
or
test
insb
in
mov
shr
dec
aam
adc
push
icebp
push
push
cmp
and
sub
stos
pop
mov
mov
in
inc
sbb
sub
add
pop
imul
aam
xor
cmp
sub
loope
push
movb
push
rolb
cmp
in
add
add
or
mov
mov
adc
fisubs
rol
push
mov
pop
idivl
lods
push
jmp
jae
inc
aam
daa
xchg
dec
push
ja
in
inc
adc
push
shrb
push
stc
mov
cs
push
mov
mov
mov
loop
rolb
enter
jmp
sub
leave
mov
push
inc
pop
adc
adc
pop
push
push
call
push
jae
sbb
mov
cmp
push
push
arpl
jb
cmp
push
jnp
mov
inc
dec
inc
lea
dec
and
inc
push
push
push
lret
inc
push
js
loopne
sahf
add
call
leave
sbb
in
push
and
push
jno
sti
das
mov
sub
shrl
into
or
jge
xchg
inc
hlt
cltd
pop
ficoms
xchg
mov
push
fs
test
pop
test
or
in
xchg
mov
dec
cld
aad
sub
push
pop
leave
sub
icebp
sbb
push
iret
mov
rorl
insb
push
fnstsw
mov
pop
push
daa
xor
and
shll
mov
lahf
popf
outsl
enter
inc
movsl
jmp
xchg
cmp
cmp
add
push
inc
push
cmp
pop
sbb
xchg
rclb
and
add
ret
call
es
xor
or
add
sarb
add
decb
popa
dec
add
adc
loope
and
and
pop
adc
ds
adc
push
dec
adc
stos
push
xchg
xor
fdivl
jb
in
stc
in
sbb
push
in
cli
ret
or
sbb
stos
ljmp
and
inc
wbinvd
and
xchg
loopne
jae
clc
mov
in
scas
cmp
stc
lods
xor
or
insb
or
add
adc
pop
jnp
les
mov
shl
push
movb
cmp
popa
mov
adc
out
lret
loopne
push
mov
push
adc
sar
ficompl
test
jbe
cmp
rol
sarl
cltd
shl
push
inc
das
das
mov
jge
mov
fcomi
jmp
js
push
sub
mov
or
mov
in
xor
mov
adc
insl
je
mov
ret
jns
aad
dec
fsubs
adc
lcall
mov
sbb
cli
or
fsubl
adc
and
lods
push
inc
movsb
mov
sbb
aad
add
or
pop
lret
pop
das
gs
call
fdivs
inc
xor
dec
xchg
jae
mov
cmp
aam
and
jp
and
addr16
imul
leave
aas
leave
ja
lds
in
aaa
adc
cwtl
jo
push
lret
adc
insb
push
push
xlat
inc
insb
cmpsl
out
scas
push
inc
cmp
or
movsb
rolb
out
sub
loop
sahf
xor
sti
das
xor
scas
iret
mov
sub
sbb
or
inc
int3
sub
cmpsl
daa
adc
mov
fidivrl
dec
scas
addr16
sbb
clc
mov
je
call
pop
loopne
mov
or
cltd
sbb
inc
mov
or
outsb
adc
lcall
cmp
inc
fwait
adc
mov
ret
and
sahf
popa
xchg
popf
les
int3
xor
lock
pop
ret
push
or
inc
fnclex
sub
mov
fcmovu
adc
mov
pop
jae
and
dec
call
adc
int
testl
xor
inc
mov
and
and
xchg
mov
mov
sub
xor
add
adc
add
cmpsb
les
mov
jmp
adc
fstps
outsb
repz
sahf
adc
cmpsl
mov
push
xchg
mov
jnp
dec
ljmp
xorl
jne
mov
sbb
push
mov
bound
mov
mov
stc
mov
pushf
gs
adc
fsubl
icebp
cmpl
and
iret
cmpsb
or
add
mov
mov
pop
pop
xchg
inc
arpl
jae
inc
mov
mov
sbb
ret
inc
lods
xchg
xor
test
sbb
mov
jb
mov
pushf
sub
test
clc
popl
jne
orl
gs
leave
dec
inc
in
roll
and
and
mov
inc
ret
fimuls
dec
bound
ss
fsubp
movsb
and
mov
push
dec
pop
fiadds
test
xchg
gs
bound
loopnew
loopne
loopne
ficoml
add
sub
in
sbb
push
adc
stc
xor
push
mov
or
cmp
nop
mov
cmp
and
pop
test
jae
cmp
pop
xor
nop
movsl
add
aaa
mov
and
stos
mov
aas
xchg
xchg
pop
jb
mov
and
pop
push
jo
mov
lahf
rol
movsb
mov
xor
xchg
lcall
jne
sub
fisttpll
or
dec
mov
cmp
rcrl
rol
dec
jle
mov
push
pop
adc
inc
push
push
push
daa
xchg
clc
rol
sbb
mov
mov
gs
xchg
popf
fcomp
or
add
dec
mov
cltd
inc
leave
in
xchg
out
stos
mov
or
xchg
in
sub
sub
adc
loopne
addl
jmp
dec
mov
clc
aam
mov
das
in
out
shlb
repnz
int3
xor
xchg
add
gs
inc
out
inc
jg
inc
lea
enter
mov
dec
sbb
jmp
jnp
in
mov
jl
dec
jne
mov
loope
cli
shrb
sbb
sbb
jno
movsb
adc
enter
mov
movsl
roll
sub
sbb
jo
or
xor
sub
mulb
subl
movsb
or
xor
mov
stos
and
inc
sbb
jne
jp
sub
push
mov
or
pusha
pop
mov
ljmp
jl
mov
cltd
orb
inc
add
dec
mov
add
xor
cmp
leave
xor
mov
cmp
adc
add
repnz
into
and
xor
pop
fsubs
inc
add
push
sbb
outsl
int
push
repz
aas
adc
or
and
sbb
adc
negl
mov
sbb
and
adc
mov
and
jmp
adc
aam
pop
mov
nop
cs
mov
dec
sub
sub
push
add
push
icebp
dec
adc
mov
or
mov
in
mov
js
pop
jo
mov
mov
in
cld
outsl
dec
mov
jp
jge
push
sbb
inc
clc
xor
sbb
mov
lahf
arpl
in
xor
stos
int3
mov
push
jg
and
in
cmpsl
ficompl
sub
loopne
pop
ffree
mov
xor
dec
cmp
inc
xor
loopne
iret
mov
cmc
rorb
cmp
in
inc
loopne
pop
or
sarl
test
xor
xor
add
popa
bound
arpl
addr16
insb
insl
outsb
outsl
jo
jb
jae
jne
ja
jns
add
inc
inc
inc
inc
inc
dec
add
dec
dec
dec
dec
dec
push
add
push
cmpb
sub
sbb
inc
xor
es
mov
addr16
mov
mov
inc
mov
movsl
add
pop
pop
inc
mov
cmpb
jne
cli
sbb
sti
mov
das
aam
push
in
rclb
push
nop
rclb
jae
cmpsl
sub
inc
fildl
adc
aam
data16
adc
mov
push
inc
fadds
xor
and
call
jnp
add
fwait
adc
lock
mov
or
test
or
cmp
loop
add
xor
add
sub
in
jnp
out
cmp
loopne
pop
pop
ljmp
iret
mov
sti
xor
sbbl
enter
rcrb
cwtl
lods
adc
out
sub
cwtl
mull
cltd
pop
or
xchg
pop
arpl
inc
add
and
inc
xor
lcall
sbb
xor
and
mov
test
mov
fisttps
dec
adc
mov
adc
sub
mov
daa
pop
test
lret
sbb
add
sbb
mov
pusha
and
sub
mov
or
cmpsb
jge
movsl
leave
xor
push
xchg
ret
int3
pop
add
subl
sub
lret
lock
xor
dec
or
mov
aad
mov
gs
add
adc
call
mov
pusha
dec
push
clc
inc
test
dec
stos
in
push
dec
mov
pop
xor
mov
sbb
jne
cwtl
pop
xor
or
add
call
fstp
jle
mov
mov
mov
or
and
inc
rcrb
sbb
jmp
mov
xchg
clc
mov
int3
fisubl
or
sbb
daa
popa
jbe
outsl
loope
dec
mov
jmp
cmpsb
dec
adc
je
rcr
shll
enter
sub
xchg
es
dec
sub
imul
jbe
ret
mov
dec
push
rol
xor
jns
push
sbb
fiaddl
sub
jbe
dec
call
in
xor
jg
dec
pop
jnp
aad
hlt
inc
sbb
push
mov
aas
cmp
ja
mov
add
ret
adc
jmp
sub
movsb
xor
orb
scas
cmp
dec
jo
push
xchg
movsb
stc
push
stos
jmp
outsl
ret
push
movsb
sbb
add
push
aaa
cmp
add
adc
pop
nop
add
adc
push
jnp
adc
mov
clc
jle
xchg
jmp
mov
in
xor
mov
or
xchg
in
jns
nop
and
mov
sbb
mov
test
adc
sbb
xor
xchg
or
and
ds
mov
pop
and
dec
jo
jp
test
jb
pop
pop
adc
test
mov
test
adc
mov
mov
inc
push
cmp
inc
inc
and
or
nop
sbb
out
adc
test
dec
or
push
adc
sti
test
lahf
ds
in
cltd
test
fcoms
mov
jle
mov
jmp
stos
cmpsb
stos
or
cs
lods
mov
call
dec
add
push
push
lret
es
push
ja
dec
sub
push
dec
sti
sub
dec
in
sub
in
popf
inc
in
dec
mov
pop
xor
push
les
mov
scas
and
aas
or
fwait
cmp
xchg
xor
adc
shrl
mov
leave
xor
cmpsb
neg
adc
sub
lcall
fsubl
inc
adc
sub
scas
push
gs
std
aad
popa
push
inc
fldl
outsb
mov
or
cmp
repz
ficoms
mov
lret
adc
and
fstl
xchg
jle
push
or
mov
call
inc
loop
push
sub
push
mov
cmpsl
or
int
loop
sub
stos
test
mov
popa
sub
cltd
cs
add
mov
xchg
push
pop
fxch
adc
bound
cld
loop
jne
and
notb
sbb
jmp
fs
cmpsl
dec
jecxz
and
add
fistl
pop
scas
push
or
xor
clc
adc
into
sub
lret
xor
mov
mov
push
and
and
sar
and
or
dec
sti
and
sub
aam
push
add
mov
adc
sti
in
cmpsl
dec
rolb
lock
dec
pop
test
cli
jmp
mov
push
icebp
inc
lock
or
sahf
adc
xchg
and
inc
mov
push
push
dec
push
mov
pop
aam
ljmp
inc
fisubs
pop
aam
test
xchg
inc
pop
add
dec
aaa
mov
cli
in
hlt
xchg
fs
fisttps
pop
pop
cmp
call
test
inc
hlt
fs
insb
sub
dec
lea
pop
fmull
inc
push
cld
adc
std
adc
imul
pop
test
jno
ficomps
lds
imul
xchg
adc
addr16
mov
jge
popf
pop
sub
push
movsl
pop
stc
lods
pop
out
jno
and
jbe
aad
mov
loop
pop
stos
adc
lock
repnz
pop
scas
and
dec
and
movsl
jbe
and
in
mov
inc
repnz
icebp
dec
int
pop
adcl
and
es
sbb
xchg
cmp
in
push
xor
mov
adc
pop
mov
adc
jne
mov
ja
sub
push
dec
dec
in
aam
inc
xchg
stos
aam
popf
inc
and
mov
pop
sbb
cwtl
xor
hlt
mov
clc
fdiv
mov
pop
inc
jne
push
imul
push
into
jge
add
sbb
ret
addr16
repz
or
out
push
and
cltd
fs
xchg
or
mov
and
dec
in
out
and
sub
jl
in
mov
push
push
or
mov
jg
sub
adcb
jmp
push
mov
leave
les
test
imul
dec
out
dec
xlat
stos
sub
adc
stos
and
jo
clc
repnz
mull
mov
fisubrl
test
movzwl
or
sbb
inc
leave
pop
ss
pop
bound
aam
repnz
adc
mov
mov
push
and
clc
out
lret
jo
mov
mov
scas
movsl
cmp
mov
push
and
adc
int3
in
sub
fcomps
or
jge
stc
les
mov
mov
and
call
mov
rorb
inc
or
add
mov
adc
push
xchg
pop
lret
pop
scas
pop
dec
sbb
mov
cli
test
cmpb
rcll
cli
rcrb
sbb
lock
repnz
xchg
adc
mov
rolb
pop
xchg
push
sbb
xchg
scas
dec
clc
inc
mov
adc
lcall
cld
scas
adc
or
and
loopne
testb
push
sti
movsl
xchg
sub
xchg
sbb
or
outsl
and
dec
xchg
xchg
test
mov
adc
sbb
or
in
out
icebp
dec
push
adc
adc
call
pop
xor
jo
adc
push
sbb
xchg
dec
aaa
jae
xlat
xor
and
adc
cmpsl
xor
adc
lcall
repz
lock
ficoml
adc
pushf
add
outsb
push
rcll
lea
push
fildll
xchg
and
jnp
push
xchg
outsl
pop
hlt
roll
out
cmc
dec
mov
outsl
enter
push
push
push
and
xchg
push
adc
clc
fildl
out
inc
stc
sbb
in
lret
aam
mov
mov
sbb
push
rcr
jmp
aaa
push
cmp
inc
dec
jecxz
test
cmp
jnp
push
xor
dec
mov
mov
pushf
push
mov
mov
dec
rcll
nop
add
push
call
add
sub
inc
push
dec
ds
dec
gs
test
jbe
movsb
jne
pop
inc
dec
inc
push
cld
cltd
adc
add
add
pop
bswap
push
std
or
into
movsl
dec
mov
and
lea
in
sub
inc
dec
jne
aas
test
dec
sti
into
nop
jne
cmp
popa
imul
aad
add
xor
cs
or
fwait
push
push
push
xchg
fimull
cmc
lea
gs
loopne
jmp
dec
decl
jne
add
push
outsb
xor
sub
loope
dec
or
dec
mov
xchg
jae
call
mov
fmuls
mov
cltd
push
mov
ss
dec
pop
mov
into
cvtpi2ps
or
notl
xchg
and
add
mov
xor
hlt
and
clc
and
and
loopne
mov
add
mov
and
test
adc
mov
enter
fcomps
and
pop
and
clc
cmpsl
and
and
or
sub
sub
dec
or
aad
and
jo
mulb
push
sbb
sbb
shrb
mov
adc
xchg
push
outsl
repz
push
outsb
pushl
or
and
sar
xchg
sub
addr16
cmpsl
js
adc
sbb
and
lret
sub
pop
negl
sub
dec
cmp
fsts
jg
mov
aas
aad
aam
fcoml
dec
mov
and
push
xor
call
adc
call
mov
sub
adc
ds
or
in
jg
and
cmp
and
bound
bound
hlt
xor
fisubs
call
mov
and
and
leave
mov
mov
imul
and
mov
mov
xchg
pushf
sbb
stos
or
arpl
jmp
xchg
or
add
aaa
dec
adc
faddl
push
push
iret
fwait
push
sti
adc
cmc
push
je
push
push
xor
and
les
and
adc
pop
adc
or
cmp
mov
cmp
push
jae
dec
sub
sub
mov
lods
icebp
inc
or
outsl
fistl
ljmp
repz
adc
adc
sbb
negl
push
or
call
divl
stc
lods
les
xchg
xor
faddl
xchg
and
add
cmpsb
lret
iret
mov
pop
or
xchg
cld
aas
cmp
sbb
jns
stos
mov
sub
mov
mov
popf
pop
arpl
aas
enter
test
adc
loope
icebp
jmp
xchg
pop
xlat
addr16
adc
push
das
xchg
sub
add
mov
xchg
in
mov
inc
test
jne
sub
mov
jo
xchg
je
test
fstpt
cld
or
rolb
push
mov
pop
sbb
jg
cltd
cld
push
dec
ds
dec
test
or
enter
adc
sbb
loop
push
inc
push
add
add
pop
les
mov
sbb
xor
pop
pop
test
add
cli
pop
cltd
cmp
jae
mov
addb
dec
js
fildll
pop
scas
inc
ret
push
sbb
and
inc
add
call
fadd
cs
add
cmpl
and
adc
loopne
call
push
fsubrs
and
adc
inc
jb
adc
or
push
in
adc
inc
lret
fmuls
das
test
or
adcl
add
cmp
ss
dec
or
push
jne
inc
push
mov
adc
ret
stos
push
popa
into
mov
adcb
add
pop
mov
mov
cmp
jne
cmp
or
jae
cmp
jmp
enter
movsbl
pop
imul
sbb
dec
or
and
and
adc
add
mov
adc
pop
push
or
mov
stc
add
rorb
aad
jne
sbb
xor
dec
lret
jae
stc
test
xchg
add
and
push
lock
scas
cmpsl
add
test
jno
pop
mov
gs
aaa
add
jb
pop
adc
xor
mov
add
fs
jno
push
orl
mov
lahf
rol
jns
and
sub
add
or
cmc
jno
ret
push
and
test
xchg
cmp
lock
sub
dec
sub
sti
dec
pop
call
add
jmp
mov
jmp
jp
adc
imul
inc
add
in
dec
les
xchg
or
xchg
or
inc
dec
cmp
adc
xor
in
mov
outsl
xorb
fs
mov
mov
xchg
adc
sarl
adc
fmull
mov
sub
xchg
adc
sub
les
or
mov
add
and
cli
mov
adc
inc
or
hlt
mov
cmp
dec
pop
lods
test
mov
idiv
adc
inc
call
nop
stos
les
ds
mov
inc
sub
sar
adc
xchg
in
sahf
mov
add
icebp
into
mov
sub
dec
mov
add
xchg
fidivl
push
mov
mov
xor
decb
loop
popa
adc
test
scas
push
pusha
cmpsl
xor
and
mov
gs
stos
mov
xor
gs
adc
rolb
push
arpl
pop
mov
sub
fimull
popf
popa
push
test
sbb
mov
dec
pop
push
clc
insl
outsl
jp
jmp
dec
xchg
mov
cs
mov
lods
push
xor
xchg
fmull
loopne
inc
pop
jne
mov
pushf
sahf
xchg
and
clc
mov
data16
or
jmp
insb
xchg
test
daa
ffree
mov
cmp
adcl
fnstsw
or
mov
cmpsl
xor
loopne
add
or
loopne
lcall
lea
or
sbb
stos
dec
or
dec
or
enter
push
icebp
fiaddl
mov
cmp
or
ja
adc
jo
add
ficompl
inc
sti
mov
push
add
inc
sbb
jnp
test
sbbb
add
push
push
nop
or
jge,pn
pop
sbb
sub
jmp
pusha
add
inc
ss
adc
jle
xchg
xor
bound
int
xor
jne
arpl
jmp
or
xchg
sub
sbb
xchg
xor
cmp
enter
stos
adc
or
dec
das
cli
adc
and
push
lds
mov
sub
adc
fwait
mov
adcb
xor
xor
inc
ljmp
xlat
jae
adc
add
bound
movb
adc
daa
mov
or
pop
sbb
xchg
addr16
mov
pop
adc
and
fs
and
xor
sub
xor
xor
js
sbb
faddl
mov
add
add
push
add
cmp
cmpsl
inc
ljmp
aam
jmp
pop
je,pt
adc
stos
pop
mov
inc
lock
sbb
aas
push
aas
ljmp
push
sub
add
or
repnz
pop
add
lds
les
mov
movsl
sub
sub
setnp
xor
add
add
and
jl
or
xor
aaa
and
out
inc
push
orl
or
push
nop
lock
sbb
xor
repnz
sub
push
push
add
mov
das
xor
das
inc
sub
pop
decl
popf
mov
adc
mov
dec
imul
sti
lea
push
icebp
mov
push
sub
push
fsubs
loop
or
add
push
hlt
mov
push
fsts
add
jecxz
push
mov
mov
and
fsubr
push
adc
adc
dec
adcb
mov
sbb
dec
add
cmp
and
dec
sbb
sub
in
das
or
test
lock
ja
loopne
divl
pop
sub
leave
pushf
cmp
jmp
jp
or
xor
popf
and
pop
push
cmp
data16
sub
lahf
xchg
inc
popf
push
mov
sbb
or
out
add
adc
orl
arpl
int3
ss
add
popa
mov
test
js
cltd
jne
pop
mov
add
jnp
add
jns
add
mov
cmp
dec
insb
idivb
jmp
xorb
mov
or
ret
jns
les
and
sub
inc
testb
sub
adc
jmp
mov
flds
dec
mov
sub
fisubs
sahf
xchg
js
sub
inc
pop
dec
cltd
testb
jae
add
mov
dec
xor
testb
xchg
push
aaa
sarb
xchg
test
enter
or
xchg
and
call
jmp
adc
push
or
jg
popa
subb
fs
test
dec
jmp
loop
sub
push
aaa
jg
xchg
fistps
fs
daa
dec
push
bound
inc
loope
rolb
arpl
jae
mov
fisubrs
mov
xor
daa
push
dec
add
xchg
adc
es
and
pop
push
sbb
add
add
push
mov
push
push
adc
adc
femms
or
or
scas
orl
inc
flds
cmp
xchg
or
and
and
sbb
jecxz
aam
fs
dec
pop
mov
add
dec
stos
xchg
xchg
and
adc
and
inc
rcrb
or
xchg
mov
mov
and
sbb
dec
mov
lahf
and
adc
pop
add
adc
dec
xor
add
sar
push
pop
shr
gs
jmp
add
add
sub
mov
daa
add
xchg
sar
push
lahf
adc
cmp
add
push
cs
out
dec
add
adc
push
out
mov
push
dec
sbb
xchg
mov
and
add
add
sbb
mov
jb
mov
mov
mov
add
cmp
pop
xor
dec
testb
xchg
arpl
dec
or
adc
add
xor
sbb
sbb
or
and
xor
pop
cli
inc
movsl
and
pop
adc
movsl
and
jo
xlat
popf
cmp
mov
sub
shlb
lods
jp
dec
imul
mov
pop
mov
push
jge
scas
sbb
fmul
rcll
mov
sarl
push
and
imul
add
xchg
cmp
push
jle
dec
insl
add
inc
mov
leave
jns
in
cmpsb
loop
push
fildll
mov
test
dec
lret
repz
mov
mov
add
mov
jns
cs
add
push
stos
push
sub
test
dec
iret
lret
inc
sbb
push
aaa
in
xor
int3
jnp
jmp
dec
push
mov
enter
inc
call
in
mov
lods
xor
sub
pop
jle
pop
and
push
or
ret
enter
jne
fistpl
adc
pop
je
and
imul
adc
in
and
inc
add
or
push
cmpsb
fldenv
push
push
mov
adc
leave
mov
sbb
push
xchg
cltd
les
rcr
mov
jo
inc
or
das
and
lods
in
in
cmp
jge
dec
test
sbb
jae
movsl
aad
mov
rcrb
jbe
pop
adc
pop
mov
dec
and
push
cmp
mov
sbb
adc
add
mov
xchg
fs
xchg
add
pop
or
or
or
mov
adc
pop
adc
adc
push
pop
sbb
push
sbb
and
xchg
sbb
sbb
sbb
jl
cmp
sub
dec
add
and
es
sub
sub
das
cli
daa
mov
xor
cmp
jo
gs
cmp
ds
or
sbb
adc
mov
xlat
jmp
sub
push
pushf
test
push
push
push
push
push
rcll
pop
inc
pop
pop
push
pop
or
cmp
enter
and
xchg
adc
and
and
dec
jae
mov
sub
and
push
mov
cld
and
add
dec
out
xor
imul
and
cmpl
insl
inc
sbbl
leave
inc
popa
cmp
aas
or
lea
inc
adcl
ficoms
push
or
mov
mov
dec
int3
xchg
out
adc
inc
and
and
inc
and
and
dec
inc
jle
inc
dec
mov
dec
sahf
inc
dec
leave
push
add
push
add
gs
jb
mov
movsb
inc
mov
mov
adc
and
dec
repnz
call
or
and
inc
es
dec
enter
inc
addr16
xchg
push
adcb
cmp
dec
and
dec
jns
xchg
stc
pop
rcrl
and
or
addl
jae
ret
outsl
jbe
mov
mov
es
add
clc
inc
mov
jge
and
pop
imul
dec
adc
inc
fnstsw
and
jno
sbb
nop
push
dec
adcl
inc
inc
test
and
loop
lea
push
and
xor
stos
gs
and
aaa
and
and
inc
movsb
ss
nop
sbb
or
movsb
xchg
sbb
and
dec
jno
movsl
fnsave
dec
jge,pt
add
add
xchg
je
movsb
adc
ret
shr
and
adc
push
jno
andl
xchg
or
rol
sti
sahf
dec
or
loopne
lea
jb
cmp
stc
pop
mov
cmp
mov
subb
and
push
inc
stos
inc
loop
movsl
pop
mov
roll
call
int3
xchg
sbb
push
mov
enter
mov
ret
daa
push
cld
lods
test
inc
cmp
xor
inc
int3
add
stos
es
fwait
jne
pushf
fs
xor
push
fwait
ss
jle
dec
xor
fistl
bound
movsl
inc
dec
lahf
faddp
rolb
jmp
and
inc
and
xchg
dec
and
jbe
mov
dec
ficoml
and
inc
sub
mov
jl
cmpsb
dec
rclb
cltd
and
js
mov
and
add
je
sahf
xchg
enter
loop
mov
scas
add
inc
sub
je
xchg
cmp
inc
test
sub
adcb
sub
xchg
jo
inc
add
sub
dec
lcall
adc
xor
in
das
and
inc
pop
inc
xor
xor
nop
inc
mov
das
and
cmp
enter
ss
mov
and
adc
and
js
xor
int3
xchg
mov
bnd
or
repnz
sbb
or
and
or
icebp
cli
xor
or
jns
or
test
or
test
aaa
mov
push
enter
sub
adc
xor
enter
sub
stos
fs
enter
and
outsl
dec
mov
jmp
and
mov
xor
and
rcr
movsl
push
les
repz
sbb
nop
add
sbb
enter
xor
and
mov
cmpsl
pop
nop
outsl
cmc
mov
or
add
cmp
jne
daa
sahf
aas
cmpsb
lock
popf
push
outsl
lods
lock
out
subb
imul
test
xchg
orb
ljmp
jae
push
or
mov
leave
add
push
shll
adc
and
xor
cmpsb
pop
inc
sub
sbb
dec
jns
gs
or
and
popa
call
adc
lock
fiadds
sub
es
addr16
daa
mov
xchg
test
jmp
inc
push
inc
add
adc
cs
arpl
lret
dec
sub
pop
enter
jno
mov
mov
jno
bound
sbb
fsubrs
aaa
jb
xchg
inc
jl
pop
add
shrl
mov
mov
mov
xchg
sub
ja
mov
out
mov
subb
sub
nop
add
and
les
sub
testb
mov
mov
jb
mov
mov
jb
push
sub
mov
stos
jge
test
dec
cmp
cld
inc
insb
mov
ja
push
lret
sub
popa
mov
sub
fisubrl
xchg
pushf
sub
inc
mov
sbb
popf
adc
jg
daa
je
push
adc
and
dec
xor
dec
jmp
jne
inc
popf
or
inc
aam
punpckhwd
xor
or
sub
pop
sub
pusha
popf
mov
ret
xor
xor
adc
adc
add
stos
scas
or
nop
frstor
mov
lods
mov
imul
fisttpll
mov
inc
pushf
ds
les
xor
or
scas
sub
adc
cltd
outsl
mov
imul
nop
ljmp
sbb
or
pop
sub
rolb
xor
xor
cmp
inc
sub
mov
inc
xlat
xor
nop
add
ret
mov
popf
ja
adc
daa
popf
lahf
jb
add
lret
lods
jnp
and
mov
push
int3
xchg
orb
inc
movsb
in
repnz
in
into
aaa
movsb
icebp
fmuls
daa
xchg
cs
sub
lods
out
push
loop
adc
push
push
and
mov
pop
mov
add
push
add
mov
js
mov
mov
cmpsl
or
loop
mov
sbb
sub
add
loop
mov
mov
push
cmp
mov
imul
mov
das
pop
bound
loopne
xchg
pop
and
sbb
add
or
add
and
or
popf
movsl
in
inc
xchg
imul
pop
jnp
sub
xchg
add
mov
aad
add
cmp
dec
andl
xchg
cmp
cmp
add
mov
sub
jnp
push
inc
inc
iret
dec
test
jg
mov
popf
fs
je
and
push
sbb
aad
add
push
and
les
fmulp
sahf
jmp
into
popf
lret
pop
adc
sarb
xor
gs
adc
in
nop
daa
shrb
xor
mov
xchg
cmp
aam
popa
nop
push
mov
arpl
outsb
jle
mov
into
xchg
and
das
leave
or
mov
popa
sbb
or
and
mov
mov
mov
mov
cmp
adc
cltd
sarl
pop
dec
sub
int3
lods
aaa
and
add
enter
and
cmp
dec
repz
das
sarl
nop
repz
stos
das
ret
add
call
daa
sti
nop
pop
out
rorb
inc
add
push
and
cwtl
dec
pop
inc
xchg
push
add
dec
sub
xchg
fldenv
adc
cwtl
aam
ds
cmc
mov
leave
adc
and
push
les
adc
and
enter
sbb
out
push
repnz
orb
test
repnz
add
mov
mov
adc
xchg
and
cmpsb
leave
and
sahf
dec
xchg
mov
imul
shll
outsl
dec
xchg
sbb
fs
sbb
popl
enter
and
call
dec
push
loop
pop
and
mov
and
and
xchg
add
pop
and
pop
pop
push
out
mov
fidivrl
fdivrs
mov
dec
cmp
push
les
call
xchg
pop
repnz
or
jl
icebp
or
std
ret
push
or
popa
inc
push
orl
pop
mov
push
adc
xchg
mov
clc
dec
mov
mov
jl
and
or
cmp
and
xor
jb
int3
clc
or
inc
gs
das
mov
gs
push
push
lds
fdivrs
mov
pop
xchg
jle
jbe
cmp
into
mov
cs
stos
and
inc
inc
lods
sub
mov
adc
xor
inc
stos
and
inc
lods
cmp
pop
cmp
mov
adc
enter
pop
xchg
sbb
test
scas
imul
xchg
push
and
add
scas
jae
andb
aaa
cmp
in
jge
sub
enter
adc
clc
nop
sbb
add
and
xor
xlat
adc
xlat
mov
imul
shll
push
adc
imul
push
or
add
fsubs
sub
inc
sbb
adc
movb
mov
push
fcomps
test
pcmpgtb
jo
push
fldenv
dec
sahf
insb
cmpsl
es
jno
sarb
testb
call
insl
mov
dec
repnz
cmp
pop
shrl
dec
out
mov
jg
adc
lea
push
pop
ljmp
pusha
xor
xor
shll
les
int3
ds
adc
xchg
and
cmp
sub
push
jl
xor
mov
scas
fwait
xchg
out
es
shrb
sbb
test
and
nop
fsubp
lods
insb
mov
rol
adc
push
cmp
sub
sub
lret
jb
mov
adc
jns
loop
push
push
cwtl
mov
dec
loope
dec
pop
int
push
rcrb
lods
jnp
int
notl
xchg
gs
push
and
jp
leave
dec
and
dec
jns
test
loope
push
cmp
xor
dec
and
and
mov
shr
scas
bound
mov
inc
lds
jae
mov
sbb
pop
inc
or
leave
es
xchg
rorb
adc
jb
sub
sbb
js
fiadds
imul
dec
xor
pushf
fistl
pop
lret
lds
cld
xchg
aas
sti
cs
cld
fdivs
movsl
mov
adc
repnz
sahf
ljmp
lcall
inc
adc
nop
mov
xor
xchg
and
dec
sbb
or
daa
adc
inc
dec
pop
test
xchg
pop
adcb
in
sub
xor
ret
cli
jmp
jno
push
popf
es
sarb
pop
adc
dec
sub
dec
add
bound
imul
scas
push
test
add
xchg
xor
cmp
fidivs
mov
mov
je
mov
xor
ret
mov
add
inc
xorb
adc
sbb
pop
fadd
icebp
lea
adc
sub
out
les
in
sub
leave
test
jbe
fdivl
pop
gs
test
lds
xchg
lods
adc
push
sub
push
mov
jne
rcrl
int
adc
ficoml
fcmovnu
add
out
push
mov
rolb
mov
jbe
test
subb
jge
inc
popa
pop
adc
int
data16
fwait
adc
mov
mov
xchg
jecxz
pop
and
cmpsl
int3
mov
adc
js
addr16
jmp
or
leave
stos
adc
scas
and
mov
xchg
mov
add
incb
imul
scas
pop
xchg
enter
mov
mov
jb
mov
daa
mov
xchg
fmuls
sbb
adc
or
push
call
jge
int
sub
test
inc
adc
cmp
lret
nop
push
adc
or
cmpsl
std
stos
jb
xchg
or
icebp
shrb
je
out
mov
imul
test
jmp
cmpsb
xor
or
jo
cmp
pop
inc
leave
cmp
jg
test
enter
leave
cmpsl
sbb
fwait
cmp
popf
cmpsl
or
xor
cwtl
mov
lea
xchg
mov
add
sub
or
jge
xchg
mov
push
addr16
mov
mov
pusha
mov
imul
enterw
dec
mov
lret
sub
mov
cmpsl
adc
cli
addl
cltd
lock
dec
das
and
jo
xchg
ss
mov
jo
push
mov
mov
das
jbe
jp
cmp
pop
mov
mov
push
hlt
sahf
lret
nop
dec
movsl
fmuls
rcrb
and
xlat
dec
std
bswap
xchg
inc
sub
xchg
adc
pop
stc
xchg
push
lea
sub
mov
cmpsl
sbb
mov
out
and
cmp
add
in
sahf
adc
gs
nop
fldenv
orl
dec
push
outsl
xchg
adc
jl
ret
or
mov
xchg
cwtl
fstps
cs
fdivrp
xor
fdivrs
adc
pop
jge
dec
pop
adc
xor
rorb
lds
sub
push
or
ljmp
insb
dec
xor
mov
test
xchg
xor
fwait
loopne
sbb
sbb
aas
scas
dec
inc
mov
clc
inc
jg
je
push
cmpl
pop
cmp
add
jmp
iret
clc
in
pusha
or
ljmp
lret
mov
push
xor
rclb
outsb
cmp
and
push
add
ljmp
xchg
mov
jo
and
repz
add
mov
enter
or
mov
jge
sbb
mov
ret
roll
cmp
cli
or
int3
fistpll
cmp
and
out
xor
xor
cmp
pop
shl
ret
push
adc
rcrb
rcl
decl
xchg
fmuls
pop
jl
adc
test
or
fsqrt
inc
jg
ret
jns
push
enter
lahf
xchg
push
dec
addb
jmp
mov
cmpsb
inc
inc
mov
test
jne
xchg
cmp
jo
gs
arpl
adc
sub
loope
mov
push
popf
xlat
xchg
lods
fnstsw
push
xor
jl
mov
ret
push
mov
sbb
and
add
repnz
push
push
adc
loop
adc
sbb
nop
adc
mov
cwtl
mov
adc
sbb
mov
movsb
and
pushf
adc
and
inc
lods
and
inc
mov
lea
mov
insb
sarl
mov
pop
ss
pop
enter
inc
mov
int3
mov
dec
bound
adc
repnz
sbb
and
mov
mov
outsb
push
xor
insl
call
dec
cld
lahf
fldcw
inc
aad
dec
or
imul
and
inc
je
xchg
sub
push
fsts
sub
inc
in
jo
jns
and
imul
cmp
cld
cmpsl
adc
pop
pushf
push
popa
jae
jl
scas
stos
addr16
cmp
pop
and
scas
push
jo,pn
lcall
inc
dec
pop
imul
cmp
insl
sbb
mov
inc
push
mov
aaa
nop
push
xchg
and
movsb
xor
pop
pop
das
cli
cmp
call
test
sub
aad
xchg
mov
mov
pusha
mov
inc
xorb
and
gs
xor
push
sbb
in
fsubrl
and
add
push
movl
cmpl
push
sub
push
or
dec
cld
mov
pop
and
dec
push
push
sti
int3
jmp
and
sub
pop
stos
sub
dec
or
in
mov
in
gs
out
pusha
add
dec
test
pop
decb
add
clc
sub
inc
movsl
ja
gs
xchg
je
mov
mov
fidivs
push
adc
sbb
or
inc
lock
shlb
push
push
in
jmp
inc
dec
jne
push
pop
sub
and
dec
hlt
push
lret
sti
sub
xor
push
mov
call
dec
imul
sahf
imul
add
push
push
or
pop
push
test
push
or
push
pop
xchg
sbb
les
add
mov
cmp
idivl
xor
cmpsb
push
out
mov
and
pop
mov
lea
stos
mov
add
pop
mov
fmull
sbb
fwait
cmpsl
push
mov
mov
adc
and
inc
add
sbb
or
pop
dec
cwtl
adc
jmp
and
add
and
jne
ja
xchg
sub
mov
and
add
mov
adc
imul
xchg
ss
cmpsb
sub
les
out
mov
ja
in
lods
pop
mov
or
inc
sub
xor
int3
in
pop
xor
jmp
lea
insb
push
dec
or
lea
or
and
out
outsb
leave
lret
jb
daa
cmpsl
pop
and
fs
ret
and
mov
xchg
sub
mov
je
mov
inc
mov
sbb
nop
lock
nop
data16
pop
imul
pop
or
adc
mov
test
mov
dec
out
xor
lret
mov
push
pop
xor
adc
mov
scas
mov
and
gs
orpd
sub
dec
cld
mov
dec
xchg
jg
mov
mov
dec
fists
and
outsb
in
jo
xlat
dec
sub
jecxz
pop
mov
sbb
mov
xchg
test
adc
lea
xlat
negb
das
shrb
imul
mov
into
aad
xchg
lods
rclb
js
and
cs
pop
mov
add
dec
fwait
mov
or
pop
or
das
std
jecxz
cmp
dec
mov
push
push
mov
testl
push
adc
lcall
pop
nop
mov
adc
mov
in
sbb
addr16
scas
popf
repnz
pop
lds
pop
ss
gs
clc
aaa
and
stos
movsb
xchg
ret
xor
mov
addr16
push
shrb
hlt
adcb
bound
or
push
adc
in
mov
or
cmp
adc
and
mov
mov
mov
pop
inc
inc
ds
pop
loop
cmp
aas
sub
fs
inc
mov
enter
pop
addl
dec
pop
xor
or
pop
mov
nop
inc
push
iret
dec
ror
push
inc
lea
xchg
dec
aaa
jbe
dec
push
insl
and
jmp
push
dec
push
and
jb
movsb
sub
imul
insb
push
inc
push
cmp
cli
gs
xor
xlat
lcall
es
sub
popf
push
xor
jp
sub
aam
or
jo
cmp
xchg
int
popa
and
push
xchg
rcrb
inc
cmpsb
mov
testl
test
inc
les
mov
push
add
and
aam
in
jnp
out
mov
sub
jae
mov
bound
push
xor
in
mov
or
cs
add
and
inc
push
arpl
add
repz
adc
enter
mov
jmp
dec
sbb
jo
add
jecxz
sbb
sub
aam
and
mov
sbb
add
stos
fdivl
xchg
and
mov
lods
cs
add
cs
adc
sbb
ret
inc
jo
add
jno
xor
jno
int3
add
ds
jnp
cmpb
imul
pop
mov
fdivrl
rcrb
daa
push
mov
push
and
fs
addl
mov
stos
rorl
or
push
stos
xchg
pop
inc
mov
mov
or
shrl
push
inc
cmp
xor
sub
out
adc
add
fldcw
or
jne
sub
sub
xor
xchg
test
fndisi(8087
or
shl
daa
or
or
imul
cmp
sbb
xor
andb
xor
mov
fsubs
lret
outsb
in
adc
xor
mov
or
push
add
dec
xor
sub
xor
test
mov
adc
in
and
push
lcall
mov
es
or
mov
and
or
nop
and
daa
enter
or
sub
sub
nop
sub
das
enter
or
xor
xor
nop
xor
aaa
enter
or
cmp
cmp
nop
cmp
aas
enter
or
inc
in
sub
nop
inc
mov
ds
inc
enter
or
dec
in
sub
nop
dec
mov
ds
dec
enter
or
push
in
sub
nop
push
mov
ds
push
enter
xor
pop
cs
mov
pop
test
inc
pop
and
pop
mov
pusha
inc
cmp
adc
mov
cmp
mov
gs
data16
lret
or
add
fsts
add
sbb
mov
inc
cmovb
data16
hlt
and
push
test
movzwl
pop
push
mov
adc
mov
scas
daa
and
mov
loopne
test
dec
je
and
or
fs
daa
add
bound
push
inc
dec
adc
cmp
lds
push
popa
push
outsb
pop
and
sbb
dec
adc
ds
inc
test
test
fldenv
fisttpl
and
sbb
jo
sbb
adc
inc
stc
xor
and
or
leave
sub
jno
and
mov
adc
adc
sbb
repz
popa
lcall
mov
testb
andl
out
aad
das
es
sub
and
popf
cmp
call
pop
test
sbb
add
int3
or
cmpb
out
aaa
insb
xchg
ds
mov
xlat
add
lds
or
push
cld
call
sbb
dec
push
sahf
or
sub
sbb
sub
cmp
inc
push
mov
sbb
repnz
or
push
xchg
sub
push
rclb
push
inc
loope
push
dec
scas
and
xchg
xchg
jne
mov
int3
push
repnz
enter
aam
rclb
scas
nop
rorb
cwtl
dec
cwtl
fsubrs
add
cmpl
push
jg
inc
adc
mov
addl
xchg
adc
add
xor
jecxz
lea
and
repz
in
push
je
inc
and
add
in
add
stos
in
fwait
ret
addl
jp
mov
sbb
cld
cmp
loopne
dec
outsb
xchg
sbb
jbe
mov
mov
sarb
addr16
mov
push
pop
ja
push
push
fdivrl
sahf
xor
stos
test
jbe
adc
frstor
mov
sti
insb
adc
and
xor
pop
ja
daa
or
test
into
pusha
enter
inc
mov
int3
out
adc
rol
xchg
add
dec
rolb
xlat
add
ljmp
andb
push
jne
cs
xor
lods
nop
and
cmpsb
xchg
sub
call
pop
adc
sbb
test
cmp
pop
mov
addr16
test
test
mov
icebp
mov
mov
mov
mov
std
outsb
mov
int
loope
push
jl
mov
and
push
imul
or
pop
lock
lea
enter
movsl
or
inc
push
mov
mov
repz
adc
js
jo
rolb
mov
xor
imul
add
lock
lds
popa
sub
add
xchg
dec
xlat
lret
or
add
pop
call
movsl
ljmp
adc
mov
cmpsb
scas
hlt
xor
pop
stos
ret
lea
inc
arpl
push
fsubs
sub
xor
clc
mov
xor
mov
xchg
dec
out
jno
xlat
test
shrl
sub
xchg
xchg
je
outsl
jecxz
das
xor
scas
fwait
mov
push
xchg
je
bound
pop
inc
fs
jg
ja
sub
popf
or
aas
jbe
das
mov
gs
les
mov
xor
sub
pop
or
mov
cmp
aam
hlt
out
adc
or
shl
stc
adc
in
inc
jns
xchg
rcrl
sub
dec
sub
dec
adc
clc
js
loopne
js
or
xor
data16
mov
mov
shlb
fdivr
lret
push
inc
fsub
scas
xchg
adc
cltd
xchg
add
inc
fdivrs
pop
daa
xchg
dec
add
jmp
push
int3
ss
add
cmp
lea
jae
les
data16
mov
rorb
les
js
cmpl
lcall
or
lods
pop
adc
pop
out
pusha
inc
pop
adc
mov
imul
inc
inc
mov
je
out
mov
jo
inc
test
or
lahf
mov
cmp
out
mov
sub
cltd
inc
jns
mov
adc
jbe
push
in
xchg
jge
push
es
and
js
sbb
add
jl
dec
push
sbb
roll
adc
shl
mov
mov
add
fsubl
lock
call
or
mov
mov
lds
push
mov
hlt
add
arpl
gs
jne
ror
add
mov
dec
xor
mov
nop
repnz
test
mov
xchg
stc
and
mov
jp
dec
movsb
enter
mov
xchg
aam
sub
shr
fistl
arpl
cmp
test
jbe
shlb
movsl
cmp
pop
cmp
lods
cs
into
mov
mov
movsl
and
and
mov
aad
daa
call
loopne
inc
dec
cld
jmp
daa
pop
enter
mov
adc
subb
pop
daa
pop
ds
jnp
icebp
daa
jmp
jg
jp
inc
add
and
push
fs
inc
mov
mov
je
lahf
popa
icebp
sub
push
jmp
pop
push
mov
jno
fcoml
xlat
in
cmp
jg
adc
mov
lods
sub
subl
mov
call
jmp
movsl
mov
xchg
dec
sub
mov
iret
cmp
jae
cmp
add
and
adc
mov
and
adc
stos
inc
mov
lret
icebp
sbb
mov
mov
adc
inc
test
push
ds
test
dec
movsl
sbb
dec
inc
xchg
dec
inc
push
rolb
adc
and
les
jle
sbb
mov
fisubrs
inc
inc
pop
inc
push
dec
push
and
pop
push
push
decl
aam
pop
in
mov
adc
dec
push
dec
dec
aas
cmp
dec
jns
shrb
insl
or
je
sbb
jnp
inc
push
push
dec
cmp
mov
cwtl
push
aaa
mov
sub
jp
mov
test
test
mov
xchg
xor
pushf
adc
push
fwait
sarl
add
jmp
or
jno
faddl
arpl
sbb
ucomiss
test
test
xor
and
jle
sub
mov
adc
inc
cmp
xor
push
adc
jl
xchg
aam
sub
sbb
sub
sbb
pop
sub
cmp
dec
cld
sti
sub
adc
orl
inc
push
in
or
sbb
xchg
movb
pop
decl
push
lock
pop
pop
jmp
inc
in
pop
jno
mov
and
and
bound
sbb
mov
and
mov
lea
in
xchg
popf
xor
jne
jmp
test
adc
add
mov
mov
cmp
and
test
lcall
lods
test
lea
mov
cmp
or
or
inc
or
sbb
call
cld
std
sbbb
orb
gs
pop
outsl
bound
imul
xor
fs
cwtl
mov
std
xor
push
jmp
pusha
andb
xor
int3
mov
pop
push
add
imul
or
cmp
cmp
and
je
sbb
add
outsb
nop
sub
add
outsl
enter
mov
push
clts
enter
sahf
pop
pop
adc
dec
pop
adc
js
int3
and
mov
push
sbbb
jl
test
ret
jns
pop
ss
js
sub
xchg
pop
dec
push
dec
and
cs
and
stos
jno
sbb
adc
pop
xlat
sub
lods
mov
scas
nop
or
cltd
dec
add
adc
cmpsb
mov
and
cmpl
out
ficompl
or
or
adcb
enter
or
and
add
xor
mov
or
xchg
pop
movsl
jno
jne
fldl
push
clc
sub
lods
aad
cmp
pop
xor
jne
cwtl
movb
cmpb
fsubrs
mulb
pop
xchg
inc
int
adc
push
adc
in
cmp
xlat
sub
adc
dec
int3
push
push
push
cltd
jp
roll
in
sub
inc
xlat
push
das
js
cmpsl
jmp
es
or
add
les
mov
bound
dec
and
mov
pop
xor
ficomps
pop
xor
push
xor
pop
xor
fnstenv
xor
enter
xlat
xchg
out
fnstcw
rorb
aam
xor
sbb
mov
ret
dec
nop
cmp
or
mov
sbb
inc
inc
inc
xchg
testb
mov
aam
in
sub
sub
and
stc
lret
pop
and
jge
ficomps
icebp
test
or
xchg
or
insb
jle
clc
test
add
cmp
xchg
sbb
nop
or
lods
popl
mov
xchg
out
fdivrl
mov
inc
dec
insb
mov
aaa
xor
pop
or
sbb
jp
sub
pop
hlt
mov
adc
inc
pop
test
je
movsb
cmp
dec
sub
pop
adc
scas
cwtl
cmpsb
test
divb
adc
data16
movsl
or
mov
enter
std
add
decl
iret
call
jmp
das
mov
xor
pop
rcr
dec
push
pop
pop
jb
pop
stos
fdivl
das
add
add
scas
pop
cltd
cmp
or
mov
inc
dec
and
dec
jo
xchg
xor
sub
pop
add
and
sbb
in
push
push
mov
mov
test
sub
adc
mov
adc
cmp
inc
adc
insl
jns
sbb
je
sbb
dec
mov
adc
dec
outsb
xchg
loope
ds
outsl
mov
push
mov
test
lea
and
or
insb
lods
rcl
and
pusha
add
std
adc
dec
xchg
push
push
lock
push
out
pushl
enter
mov
add
push
jmp
rcll
sub
push
adc
and
loope
jno
xor
test
lcall
jle
jbe
jle
xchg
sub
in
pop
sbb
test
jnp
fadds
cmpl
std
mov
or
mov
out
int3
je
adc
hlt
jo
push
adc
test
and
dec
sub
jb
je
popf
push
adc
and
enter
daa
mov
push
clc
mov
jp
lods
push
push
xchg
add
add
subw
jo
pusha
sbb
je
outsb
pushf
sbb
lret
testl
jne
pop
and
inc
dec
xchg
adc
mov
movsb
dec
xor
aad
sbb
jge
popa
dec
fcmovu
lea
mov
mov
testb
add
or
repz
pop
jmp
inc
or
xor
orb
xchg
mov
jecxz
xor
popf
push
sbb
clc
cmp
adc
xchg
mov
xchg
mov
scas
push
fadd
cmp
add
add
out
push
cmp
cs
cmpsl
jne
xor
add
test
sbb
add
push
xor
cmp
add
xchg
mov
nop
and
add
sbb
push
sub
and
pop
les
dec
aad
or
mov
mov
and
or
or
sub
test
sbb
jb
or
icebp
add
or
or
icebp
or
js
andl
inc
add
adc
pop
es
icebp
in
push
test
sbb
gs
hlt
call
out
adc
and
movsb
fnstsw
les
mov
add
fs
add
sbb
sbb
xchg
add
pop
xchg
pop
enter
adc
sbb
xchg
push
and
xchg
sbb
or
pop
adc
test
sbb
ljmp
inc
sbb
enter
mov
jb
ds
or
sbb
arpl
add
jne
and
inc
cmp
sbb
push
inc
repz
and
sbb
outsl
dec
cmp
in
add
sbb
std
ss
xchg
xchg
add
add
cltd
and
mov
outsl
pop
mov
or
add
dec
jne
pop
jmp
sub
call
push
mov
call
je
jmp
inc
jne
addr16
cmpsl
fwait
enter
add
outsl
js
jns
enter
adc
scas
xchg
addb
lods
bound
jno
jno
sbb
cld
cltd
adc
test
push
push
add
adc
mov
adc
dec
dec
sub
lea
push
pop
adc
and
rorb
rorb
inc
inc
xor
lea
inc
xor
mov
orl
fistl
or
sub
cwtl
fimuls
cmp
outsl
pop
jne
pop
jb
inc
into
jae
xchg
and
pop
xor
inc
dec
lahf
push
xchg
filds
adc
movsb
xor
clc
leave
std
and
jmp
dec
add
push
fildll
dec
fwait
inc
cltd
mov
std
jp
fiadds
pop
and
cld
xchg
pop
xchg
jp
stos
cltd
leave
dec
outsl
sarl
es
or
push
bound
outsb
and
hlt
roll
adc
mov
cld
pop
loopne
xchg
dec
mov
xchg
aad
in
idivb
incl
or
or
test
pushf
ljmp
mov
test
mov
je
dec
sub
xchg
cwtl
push
and
pop
pop
jbe
ficoms
push
cmpb
add
inc
ja
xchg
dec
clc
jmp
dec
dec
sarb
mov
dec
das
inc
sub
xchg
and
stc
sbb
mov
test
lea
and
push
sbb
mov
call
add
push
hlt
fmull
sub
and
sbb
out
add
jmp
dec
xor
test
mov
mov
push
int3
push
ds
xor
mov
mov
push
int3
push
ds
xor
mov
mov
push
int3
cmp
ds
mov
and
cmp
repnz
cltd
sbb
mov
xchg
and
sbb
lock
push
inc
in
loop
cmp
cs
in
push
out
repz
push
lahf
adc
out
in
pop
push
adc
adc
pop
jp
mov
sub
and
adcl
lock
mov
and
inc
mov
and
or
pop
push
mov
sbb
adc
inc
cmpsb
push
inc
pop
and
pop
jmp
pop
xchg
aas
cmp
rcpps
std
jmp
add
sub
xchg
or
cmpsl
dec
leave
push
push
mov
call
inc
adc
sbb
sub
add
pop
sub
scas
test
cmp
in
pop
dec
or
adc
pop
pusha
or
adc
inc
adc
xor
sbb
sbbl
and
and
sub
cmp
dec
sahf
gs
popa
popf
aam
sti
adc
stos
mov
mov
or
add
cli
and
clc
pop
or
lahf
push
rorb
push
and
mov
sub
adc
sub
sbb
sub
inc
sbb
sub
test
push
and
adc
loop
adc
and
adc
loop
adc
and
adc
loop
adc
and
rcll
sbb
jmp
or
adc
xchg
mov
nop
or
sbb
adc
and
nop
adc
sbb
sbb
and
inc
enter
cmp
xchg
mov
nop
sub
and
sub
and
nop
xor
and
xor
and
nop
cmp
mov
push
and
lar
incb
xchg
adc
jns
cmp
and
add
shr
pop
cmc
adc
test
testb
pop
cmp
or
frstor
adc
sbb
or
pop
adc
inc
adc
cld
jne
add
and
jae
sbb
sbb
data16
or
dec
push
mov
mov
inc
aas
or
inc
sub
xor
and
adc
or
adcl
or
push
cmpl
xor
adc
mov
pop
dec
add
adc
sbb
sarb
sub
mov
and
sub
sbb
sub
sbb
sub
jae,pn
inc
das
and
xchg
xor
sub
xor
cmp
sbb
mov
and
xchg
xor
cmp
push
push
dec
mov
add
mov
and
lret
and
add
pop
mov
push
lret
cmp
lahf
jecxz
sbb
sbb
adc
jg
inc
sbb
adc
icebp
enter
jns
cmp
daa
pop
repz
sbb
mov
and
mov
pop
inc
sub
cmp
or
aas
and
adc
out
in
and
lcall
test
lahf
jecxz
ret
iret
icebp
or
push
sbb
mov
sbb
rcr
jne
lret
mov
pop
fcompl
ds
or
popa
or
jo
and
jmp
sbb
jle
mov
sub
es
jne
dec
outsl
pop
sbb
aas
mov
fisubrs
sbb
ss
cwtl
das
push
loop
or
mov
rorl
ret
push
dec
cmpsb
in
adc
sbb
test
out
and
mov
sbb
or
and
lods
jb
adc
pop
and
xchg
adc
push
sub
mov
in
push
adc
xor
adc
lock
sbb
cmp
cmp
lock
in
dec
cmp
fdivrs
xchg
inc
aam
lock
mov
pop
mov
ljmp
rolb
adc
or
push
mov
mov
repz
nop
adc
push
adc
add
xchg
sbb
test
les
adc
test
push
sbb
fucom
sbb
test
or
jbe
insl
dec
loope
dec
adc
add
ljmp
jge
adc
stc
dec
sub
sbb
je
icebp
pusha
subb
and
or
jge
cmpl
cmp
dec
add
mov
push
repz
je
inc
add
push
leave
sub
adc
inc
pop
cmp
loop
sbb
push
xchg
inc
and
outsl
mov
je
jno
inc
or
wbinvd
push
jmp
ja
ljmp
adc
les
or
add
push
aas
lods
rorl
xchg
out
mull
leave
test
pushf
movsb
dec
and
xor
jnp
sbb
dec
iret
jae
out
jmp
and
sbb
and
orl
jmp
xor
test
popf
in
dec
sahf
push
sti
and
clc
or
mov
mov
dec
adc
scas
fadd
push
adc
mov
jbe
shll
cmpsb
shrl
fisttpl
fdivrs
out
rcr
lock
mov
dec
pop
add
les
das
and
push
add
lret
or
jne
add
inc
sub
adc
loope
int
iret
jle
xlat
and
pcmpgtb
xor
mov
and
pop
aaa
sbb
lock
push
mov
flds
je
decl
rcll
sub
xor
std
or
lea
adc
xorb
and
add
orb
fistps
roll
push
adc
cmpsl
mov
mov
mov
dec
mov
mov
cmp
sbb
inc
rorl
mov
add
or
adc
adc
orw
pop
or
loop
mov
dec
jmp
repnz
test
int3
bound
add
mov
cs
jle
aaa
int3
dec
adc
inc
mov
xor
scas
mov
xor
adc
jae
mov
jmp
subw
add
sub
adc
loope
sub
adc
adc
mov
stos
js
or
fisubrs
inc
je
mov
pop
and
cmp
ret
sahf
adc
dec
test
rolb
push
rcrl
mov
xorb
mov
mov
sti
sarl
xchg
sbb
sbb
mov
or
push
adc
jb
jae
inc
jb
jae
jb
loop
adc
call
jbe
call
ficompl
stos
popa
ds
push
jne
imul
lret
je
jb
sbb
lock
jne
mov
pop
ret
sbb
xchg
shlb
lahf
hlt
js
mov
jecxz
clc
nop
leave
or
rcrb
adc
adc
push
adc
push
in
jns
push
cld
inc
inc
sahf
arpl
imul
adc
mov
test
ss
dec
jmp
ret
shll
fstl
test
or
pop
or
test
mov
fdivrs
pop
dec
pop
mov
lret
and
scas
pop
lret
ljmp
adc
push
jbe
hlt
nop
inc
dec
inc
pop
xchg
addl
lock
mov
jns
in
adc
ret
jbe
adc
rcrb
xchg
jmp
subl
test
adc
sbb
jne
jne
cmpsb
xchg
fldcw
test
cmp
jmp
shll
cli
mov
sbb
push
addr16
adc
xchg
push
jbe
sub
into
push
outsb
xchg
int3
push
mov
aam
inc
addr16
and
lea
mov
jp
cmp
adc
jecxz
loop
adc
pop
loop
cmp
push
and
sbb
enter
sbb
add
inc
or
rclb
call
xor
cmp
push
in
call
fcomps
mov
pop
pop
sub
xchg
fsubr
ja
xchg
pop
fisubrl
mov
lods
lods
aam
push
lock
mov
jmp
sub
in
ljmp
icebp
addl
test
cwtl
sub
out
popf
adc
int
inc
mov
adc
or
arpl
daa
mov
mov
shl
mov
js
mov
sub
push
mov
icebp
mov
inc
jmp
pop
xchg
stos
xchg
repnz
jbe
sub
int
mov
pop
push
adc
mov
adc
mov
pushf
js
pop
mov
mov
push
push
cltd
sbb
fsubr
call
mov
sbb
sbb
decl
daa
and
andl
or
jmp
mov
or
mov
cmpsl
adc
div
aas
lret
push
and
andl
iret
sub
leave
pop
rorb
andl
ds
dec
sahf
sarl
aam
xchg
push
and
aas
add
je
popa
jmp
adc
and
push
and
pop
xor
xor
xchg
pop
xchg
add
mov
shlb
xchg
cli
cltd
xor
cmpb
jbe
sbb
add
pop
adc
in
jmp
sub
leave
sub
xor
lods
mov
loope
jge
shlb
insl
in
iret
movsl
xchg
shlb
iret
into
jl
shrl
dec
pop
cltd
les
jnp
lret
jnp
gs
insb
pop
loope
dec
clc
scas
ror
lods
cltd
cli
push
or
rclb
movsl
mov
push
add
or
clc
cmp
test
andb
jne
push
jbe
xchg
mov
leave
icebp
stos
sar
cld
sarb
ds
fsubrl
sub
in
call
out
popf
pop
loop
push
mov
and
enter
push
lock
lock
dec
adc
and
dec
nop
insl
jge
and
decl
and
cmpsl
aas
cmc
in
xchg
push
pushf
shrd
imul
and
and
fs
mov
cmc
push
dec
sub
sub
daa
or
jmp
inc
add
outsl
add
lods
dec
xor
and
jbe
add
inc
and
test
push
pop
jl
pop
lods
jle
push
lret
int
or
stos
adc
test
cmp
push
push
sub
sub
repnz
hlt
push
outsb
and
lea
adc
int
test
inc
inc
cmp
inc
and
fs
test
xchg
mov
jmp
outsb
dec
sub
pop
data16
lea
sbb
jbe
insl
or
sbb
jge
mov
xor
or
xchg
in
or
std
dec
or
rclb
notl
push
and
mov
and
cmp
xor
xor
push
mov
hlt
mov
dec
fdivrl
cmp
mov
inc
pop
sub
or
inc
push
ss
adc
pop
or
int3
xchg
sub
addr16
pop
or
push
in
mov
push
lcall
xchg
aas
add
ret
lods
xchg
jns
or
push
pop
popa
jne
cmp
add
xor
xor
mov
test
add
cmc
sbb
cmp
adc
adc
add
add
dec
je
ja
adc
popa
pop
xchg
jmp
dec
stos
jne
adc
or
adcl
mov
repz
cmp
sbb
and
cmp
dec
rcl
jb,pt
xchg
pop
in
dec
sub
sbbl
inc
push
sub
inc
push
int
mov
sub
arpl
int3
out
lahf
test
daa
cltd
mov
lret
inc
xchg
push
cmp
push
xor
jbe
mov
add
adc
jmpw
dec
enter
hlt
adc
xchg
lret
push
inc
add
pop
in
mov
adc
inc
push
adc
mov
adc
test
sub
enter
push
push
loop
xor
pxor
xor
out
cmc
cltd
sbb
sbb
test
cmp
add
ss
push
and
stos
out
cmp
cld
and
inc
repnz
stc
xchg
int3
adc
xor
sub
in
xor
dec
adc
or
addr16
jns
push
jnp
ret
data16
pop
lds
push
pop
add
push
sub
sub
pusha
push
mov
scas
repnz
pop
xchg
fsts
lea
lret
xchg
and
shlb
popf
jle
dec
subb
imul
mov
ret
adc
aam
mov
mov
jle
decl
cmpsl
pop
cs
sbb
mov
lret
mov
andb
repz
daa
push
cmp
mov
test
ljmp
pop
test
xchg
ficomps
dec
mov
lods
dec
push
mov
repz
or
and
je
cmp
lcall
push
adc
xchg
xor
jne
mov
sub
adc
sbb
insb
cmp
fwait
push
hlt
mov
xchg
fdivs
testb
fildl
clc
pushf
fsubs
das
jmp
and
shr
ds
loopne
push
dec
in
add
jmp
movzwl
aas
inc
dec
in
dec
and
es
inc
fsubr
adc
shrl
mov
add
xchg
clc
hlt
mov
add
pop
cmc
cmp
sub
mov
les
fiadds
mov
cmp
mov
test
rorw
ret
and
sub
movsb
cmp
inc
add
pop
xor
mov
pop
les
movl
inc
sbb
sbb
scas
rcr
sbb
mov
pop
jmp
mov
inc
add
cld
adc
ss
lods
rcl
std
pop
sub
jmp
jmpw
mov
pop
sbb
sbb
rclb
mov
scas
popf
mov
shl
and
mov
push
push
icebp
jecxz
cli
loope
clc
adc
jmp
lahf
adc
shr
pop
sub
and
movzwl
sbb
xchg
adc
int
cmp
mov
and
imul
sub
or
rclb
xor
fs
dec
mov
jl
je
jno
push
add
jmp
jl
jbe
in
sub
mov
popf
cmp
jb
or
cmpsl
je
jmp
je
adc
popf
je
jmp
cmp
test
lea
and
ficoms
cmp
inc
cmp
lock
cmp
xchg
xchg
cwtl
out
and
cs
lods
lret
in
enter
out
push
cmp
in
loop
lcall
popf
cmp
adc
sub
out
in
out
push
les
and
and
add
nop
cmc
mov
add
mov
or
aam
jbe
jne
and
inc
subb
fcomps
adc
mov
dec
js
lock
mov
roll
dec
js
lock
sahf
mov
movsl
aas
mov
fcompl
frstor
jne
mov
jns
fstl
xchg
push
cld
cmpsl
mov
dec
shl
cmpsl
lret
mov
jno
dec
js
jne
loop
add
setl
pop
and
jp
daa
sbb
in
push
call
repz
loopne
dec
flds
sbb
add
xchg
mov
jne
add
cld
xchg
add
leave
sub
mov
cli
pop
sbb
dec
daa
out
xchg
cmp
lods
addl
je
mov
lret
std
xchg
hlt
stos
sub
push
xchg
in
pop
notl
sbb
or
push
or
mov
pop
mov
call
stos
mov
pop
adc
inc
lea
js
mov
dec
mov
sub
push
jb
roll
jl
xor
push
fwait
xchg
or
inc
push
push
out
jne
xchg
pop
mov
sbb
adc
sbb
mov
sar
adc
pop
repnz
fs
ret
xchg
lock
sbb
fdivr
in
or
adc
ret
mov
cmp
jnp
push
loopne
and
pop
push
aas
mov
lods
mov
cwtl
and
stos
test
inc
cmp
je
adc
sbb
push
cmp
pop
addl
jae
ljmp
push
adc
inc
sbb
jmp
in
aam
ss
jg
adc
cmp
in
and
orl
adc
jmp
mov
adc
sahf
cmp
stos
and
stc
adc
xchg
out
rorl
adc
loopne
and
adc
mov
xor
adc
arpl
xchg
loope
loopne
cmp
sbb
or
cli
mov
pop
and
addl
cli
mov
mov
test
or
adc
cli
cmp
xchg
nop
pushw
add
mov
daa
lret
jmp
and
pop
adc
sub
push
scas
ret
xchg
jl
or
in
jl
push
jae
sub
sub
mov
in
xor
adc
inc
push
dec
jle
jmp
movsl
daa
mov
mov
mov
cli
mov
in
sub
nop
lods
push
scas
adc
add
mov
mov
jne
mov
dec
pusha
mov
dec
out
jno
sbb
sbb
pop
jns
xor
adc
movsl
cmp
cmp
sbb
mov
pushf
adc
daa
loop
xchg
adc
xchg
sub
xchg
dec
adc
pop
dec
or
loop
xchg
adc
xchg
and
push
cmc
sub
lods
sbb
push
mov
in
daa
pop
pop
mov
idivl
ret
lea
mov
jmp
xor
and
add
lret
sbb
hlt
or
sti
pop
andb
fwait
sub
jb
sbb
ja
push
lret
push
out
or
bound
add
sti
notb
aam
cld
pop
jmp
push
push
mov
push
push
and
pop
pop
mov
mov
mov
daa
cmp
clc
and
loopne
sbb
xor
ja
loope
dec
addb
push
add
scas
xor
or
fs
jne
fcomps
mov
pop
lret
in
idivl
push
adc
pop
mov
xor
mov
or
xor
lock
jae
add
xchg
jbe
scas
and
and
inc
sub
inc
imul
jne
sub
adc
pop
inc
sub
lds
repnz
das
loop
adc
sbb
in
dec
push
sub
adc
add
pusha
pushf
mov
mov
xchg
sub
add
shl
mov
je
cmp
fdivr
ret
fs
lea
and
cli
cmp
mov
and
sbb
or
mov
adc
adc
testl
or
lahf
cli
sbb
test
call
pop
popl
addr16
lea
je
xor
jno
call
push
xor
jg
cs
jmp
sbb
adc
adc
and
sbb
add
adc
inc
or
sub
xor
test
inc
mov
sbb
adc
sbb
push
lods
lret
push
jmp
pop
int3
popa
popf
mov
in
dec
adc
mov
test
inc
aas
xor
xchg
push
out
adc
out
or
or
ret
inc
fbld
jne
pop
add
and
inc
and
incl
dec
outsl
jne
fadds
je
fs
push
jbe
adc
sub
mov
inc
outsb
scas
arpl
dec
inc
pop
outsl
cmp
adc
or
inc
sbb
out
lds
pop
inc
es
js
je
out
jae
outsb
int3
imul
sub
xlat
and
sti
dec
pop
jno
and
sub
sub
push
add
push
and
cmpb
jle
mov
fwait
mov
push
jne,pn
es
inc
add
mov
hlt
orl
pop
push
sbb
call
xor
adc
sti
adc
and
and
movb
or
add
jne
mov
xor
adc
mov
repz
sbb
and
mov
jmp
fnstenv
adc
mov
pushl
mov
sub
mov
and
adc
push
lods
xor
in
ret
cmp
sub
imul
icebp
and
and
push
sbb
and
enter
xchg
sbb
xchg
adc
and
lock
or
pop
pop
icebp
mov
icebp
outsb
repnz
out
mov
inc
shlb
inc
cmp
or
iret
pop
xor
push
and
subl
dec
push
scas
addb
roll
jg
cmp
or
push
in
xchg
pop
fadds
sti
inc
stos
dec
adc
clc
lret
ss
dec
outsl
fstpl
push
roll
aad
inc
dec
jne
sub
inc
inc
repnz
into
add
gs
repnz
test
je
mov
mov
adc
cmp
sbb
jl
jmp
ljmp
xchg
test
je
xor
cmp
gs
loop
push
fistpl
clc
cmp
fmuls
scas
push
into
gs
inc
cmpsb
or
jl
push
dec
adc
jns
inc
push
push
mov
repnz
xchg
jl
inc
xor
cmpl
cmp
lods
mov
dec
adc
push
cmp
andl
ljmp
cmp
sbb
int3
adc
mov
mov
sbb
lds
and
or
push
inc
inc
dec
rclb
pop
mov
movsb
shll
shr
mov
sub
jp
dec
sub
aam
pop
stc
in
test
add
add
mov
sbb
call
push
in
out
sti
mov
clc
jae
mov
bound
mov
fstpl
pop
jl
ljmp
loop
out
push
or
xchg
inc
push
jb
fsts
adc
adc
outsl
inc
cmp
mov
adc
loopne
sbb
js
cwtl
push
push
das
xor
mov
push
and
xchg
nop
push
push
cmp
bound
add
inc
in
mov
xchg
add
pop
clc
out
jle
stos
jne
ret
adc
xor
jmp
scas
lods
xor
and
andb
or
mov
inc
adc
sbb
or
add
add
add
and
inc
inc
dec
pop
mov
jo
mov
mov
test
sub
rolb
mov
or
add
and
iret
stc
adc
daa
jge
cmp
pop
adc
and
std
add
dec
mov
add
sub
xor
adc
dec
hlt
xchg
add
push
push
ja
add
xorl
sbb
or
adc
push
add
enter
ret
pop
gs
les
mov
sub
aas
incl
or
mov
add
jnp
mov
pop
fs
push
mov
aad
insb
sbb
inc
lahf
loop
adc
or
adc
notl
jmp
insl
push
xchg
sbb
mov
inc
sub
insb
ret
inc
push
stc
and
aad
mov
and
xchg
xor
add
dec
cmp
and
fsts
sbb
mov
mov
mov
ret
mov
lahf
inc
add
sbb
sbb
xor
fs
loope
add
add
fs
scas
xlat
sub
inc
and
xor
hlt
stos
mov
xor
aas
bound
push
push
xor
out
and
cs
or
cmp
or
adc
mov
sarl
lock
enter
enter
fsubs
rcl
rorl
enter
enter
enter
rorl
enter
enter
rorl
aam
out
inc
jl
sbb
and
shrl
dec
out
or
mov
stc
es
jle
lea
shrb
int3
cmp
adc
xor
xchg
mov
and
test
push
xacquire
js
push
out
add
cmp
sub
cld
sub
mov
loope
mov
adc
enter
sub
mov
insb
mov
scas
adc
insb
inc
mov
test
adc
insb
inc
mov
test
enter
mov
or
out
mov
sarb
inc
insb
mov
jl
xor
movsl
les
lret
xor
push
scas
clc
push
or
mov
lock
pop
or
mov
inc
shrb
rolb
sbb
and
mov
jo
mov
cmp
and
mov
ret
cmp
and
mov
in
push
cltd
fld
lock
dec
mov
mov
sub
das
aaa
inc
add
insl
or
push
rolb
mov
lcall
out
or
dec
add
lods
lock
hlt
clc
xchg
adc
sbb
adc
mov
mov
mov
and
les
dec
push
push
adc
mov
pop
dec
cmc
jno
gs
xorb
push
gs
push
clc
daa
iret
inc
out
mov
mov
xorl
jg
je
push
mov
les
mov
mov
sbb
push
sub
pop
sbb
xchg
mov
pop
test
mov
and
pop
mov
int3
sbb
aad
cmp
sbb
and
push
popf
fsub
xchg
rcrb
fmuls
inc
loopne
gs
sbb
aam
adc
jns
and
sub
jno
movb
and
dec
sub
lahf
or
and
pop
push
in
dec
mov
adc
add
sub
sub
xchg
shll
addb
mov
cmp
pxor
xchg
mull
pop
stos
cmpsl
test
mov
inc
xchg
inc
inc
mov
ja
xchg
bound
movsl
sub
cli
fstp
pop
fld
pop
adc
test
ror
idiv
jp
xor
int3
jo
jno
pushf
add
test
mov
xchg
lock
shrb
xchg
inc
inc
movsb
enter
jb
push
or
sub
or
or
pop
das
cmp
cmp
stos
clc
cld
mov
or
call
xlat
gs
out
adc
sub
inc
jp
and
pop
or
add
test
mov
add
dec
lock
negb
in
dec
ja
mov
bound
xchg
mov
mov
ljmp
loop
in
sbb
mov
add
scas
test
stos
stc
repnz
adcl
dec
cmp
cmp
jo
adc
add
clc
sti
movsb
scas
lods
pop
lock
ljmp
inc
movsb
outsl
inc
and
add
xlat
std
sub
adc
subl
in
test
add
cli
leave
push
inc
ret
xchg
xchg
je
pop
push
aad
mov
inc
pop
movsl
cmc
dec
lock
xchg
imul
mov
ljmp
pop
pop
mov
mov
int3
lea
push
or
movl
push
xchg
call
pushl
jae
push
cmp
lock
mov
pop
or
jne
rcrb
push
dec
and
jge
sbb
dec
adc
iret
sbb
test
pop
push
negb
pop
nop
add
mov
pop
add
lea
test
shrl
inc
add
daa
decl
ja
leave
movsl
std
inc
add
aad
xor
mov
sbb
loop
sbb
mov
xchg
jl
loop
sub
xchg
popa
das
sub
pop
xchg
pop
push
int3
dec
insl
or
out
or
cmp
push
adc
jne
out
ret
sbb
call
sub
sub
stc
and
add
movzbl
mov
mov
test
push
add
imul
push
add
pop
sub
ficompl
cltd
or
add
inc
or
movl
sbbb
pop
xorw
adc
and
pop
adc
push
movsl
jne
adc
arpl
ret
das
inc
pop
clc
fwait
push
or
cmp
adc
push
fwait
sbb
jne
push
clc
add
lss
add
mov
mov
or
or
int
inc
pop
sti
lods
sbb
scas
jecxz
ret
dec
push
daa
cmp
mov
jns
inc
bound
and
sub
dec
test
sub
jle
xchg
cmp
aaa
inc
pop
arpl
leave
popa
int3
mov
and
push
xor
mov
dec
cmp
setne
in
fadd
je
or
push
and
cmp
mov
gs
pusha
leave
lahf
imul
mov
inc
sbb
popa
cld
and
pop
loop
adc
nop
mov
cltd
imul
addr16
xchg
leave
pushf
xchg
push
movsb
ficomps
and
cld
loop
xchg
arpl
pop
loop
adc
enter
outsl
loop
outsb
cmp
jo
ja
xchg
leave
sub
push
sbb
shrl
shrb
insl
pop
ret
pop
mov
or
shr
push
outsl
xchg
hlt
mov
sbb
fldcw
fldl
jae
lock
and
je
clc
loope
in
mov
push
inc
cld
jp
jb
lock
in
jno
lock
xchg
dec
adc
mov
adc
jo
and
mov
pop
sub
lret
sti
add
push
shrb
push
add
and
test
add
sub
mov
push
je
add
clc
bound
fsubrp
push
sub
mov
pusha
inc
ss
pop
stos
aad
and
jmp
push
int
or
sbb
or
dec
dec
sub
cld
mov
mov
adc
bound
scas
sbb
dec
or
add
and
pop
clc
loop
add
inc
mov
fs
adc
sub
jne
mov
icebp
mov
mov
and
insb
enter
adc
dec
test
shrb
adc
enter
or
or
mov
xor
pop
dec
pop
out
leave
pusha
cs
jno
mov
pop
pop
mov
inc
dec
jmp
mov
mov
and
or
add
push
and
mov
cmp
test
or
mov
adc
lods
jo
sbb
ja
out
xchg
push
in
push
or
filds
aad
mov
cmp
pop
jmp
push
addr16
sub
pop
cmp
test
and
adc
sbb
sbb
and
and
or
and
out
or
inc
jns
sub
sbb
and
test
jp
fidivrs
loope
sub
push
test
js
push
insb
adc
pop
ja
or
push
inc
rolb
or
or
add
je
popa
jle
xor
ja
cmp
jae
mov
pop
fsubrl
mov
xchg
js
xchg
dec
mov
ret
cmp
and
stos
sbb
jne
mov
sbb
sub
xorl
je
test
mov
sub
or
movsl
cmc
int3
lea
push
mov
sub
xchg
movsb
push
shlb
dec
je
xor
mov
cmpsb
sbb
fcoms
mov
mov
ret
adc
adc
xor
sub
cld
sub
and
push
sbb
mov
popa
mov
pop
sub
jge
and
inc
clc
push
es
enter
in
adc
inc
fsubr
cmp
mov
inc
dec
dec
adc
ja
xchg
xor
adc
enter
mov
test
jbe
pop
push
imul
mov
movsl
int
xor
jne
push
mov
cltd
sahf
mov
add
out
repz
xor
mov
xchg
sub
sbb
xchg
lods
and
scas
in
in
test
das
popf
ljmp
mov
cs
into
lret
jle
pop
sahf
or
xor
sub
add
aaa
test
lcall
mov
into
ljmp
fdivs
arpl
push
test
push
mov
xchg
es
xchg
movsl
fwait
loopne
mov
lcall
mov
sti
cmpb
int3
dec
or
shll
jae
negl
mov
mov
sub
and
and
dec
sub
xor
xor
push
push
jecxz
test
call
clc
xor
mov
icebp
iret
adc
xor
mov
push
jb
cs
js
imul
jg
sbb
loop
cld
orl
xchg
adc
hlt
cltd
in
pushl
enter
adc
pop
repnz
testb
cwtl
lods
or
inc
jmp
test
push
push
mov
push
mov
aad
dec
out
pop
dec
cwtl
adc
inc
adc
popf
add
mov
mov
popl
lcall
adc
adc
test
sbb
xor
test
and
sub
pop
cmp
arpl
cmp
xor
and
adc
mov
aad
cmp
loope
pop
sub
add
add
xchg
pop
aaa
and
fwait
insl
or
loopne
lods
and
mov
in
outsb
data16
mov
push
xchg
js
jne
call
inc
add
loop
push
xor
call
pop
pop
and
add
inc
or
pop
sbb
inc
scas
arpl
mov
fdivl
xor
xor
adc
les
cmp
mov
nop
pop
fs
dec
mov
xchg
out
movsb
ret
adc
xchg
popf
dec
js
mov
pop
sahf
adc
test
and
bound
add
adc
pop
dec
in
insl
rcrb
push
push
mov
sub
mov
xor
int3
dec
movsb
and
dec
push
jns
sbb
lea
or
or
xor
dec
adc
lods
inc
pop
adc
ficoml
dec
scas
xchg
mov
mov
lcall
or
movsl
ss
aad
sub
add
pop
dec
add
sub
or
dec
mov
mov
push
js
jno
mov
sbb
add
cld
outsb
mov
enter
adc
jg
mov
push
addr16
inc
cmp
daa
sbb
scas
xchg
sub
push
fsubrs
xchg
je
mov
test
push
dec
mov
and
mov
lret
or
scas
cmp
dec
int3
sub
and
ret
pop
lret
mov
push
dec
pop
pop
lea
pushf
ja
pop
adcb
or
popf
push
pop
mov
push
mov
adc
cmp
insl
lret
arpl
cld
and
cmp
pop
fildll
jbe
inc
nop
js
mov
pop
dec
cld
jns
xor
and
mul
jmp
pusha
adc
add
inc
dec
jne
mov
shlb
loop
daa
push
push
movsb
fists
mov
add
jmp
xchg
xor
and
int3
jl
jne
adc
sub
push
mov
and
dec
inc
inc
subl
and
or
or
adc
andps
dec
test
or
jne
add
js
adc
cli
in
jle
cmp
scas
and
mov
sbb
dec
push
pop
add
add
jmp
and
jbe
mov
ret
sub
or
or
sub
mov
cmp
push
jg
aas
ret
xchg
jae
mov
hlt
xchg
pop
xlat
add
mov
pop
dec
shll
mov
or
clc
into
shrl
add
dec
mov
das
fs
ret
ds
xchg
and
jnp
and
rcr
mov
aam
push
rcr
aad
sahf
adc
dec
sarb
xor
loopne
scas
cli
sub
hlt
out
fsubs
sub
jbe
cmp
clc
pop
dec
inc
movsl
or
scas
cmpb
lea
xor
and
jle
xor
in
cmpsb
push
dec
or
and
loopne
or
sbb
lods
scas
aad
das
mov
dec
dec
call
ljmp
or
cmp
inc
add
jbe
inc
rol
and
inc
icebp
jnp
sbb
sub
aaa
and
sbb
cmp
jnp
test
scas
add
pop
call
stos
fcoml
shll
leave
test
rol
rolb
sub
push
cwtl
icebp
and
pop
fwait
adc
pop
int
sub
sub
mov
sbb
push
push
bound
stc
mov
add
sub
inc
jbe
jno
xchg
js
adc
ljmp
add
jae
dec
inc
and
rcrb
dec
mov
mov
dec
subb
xor
sub
loopne
rol
clc
pop
ja
adcb
daa
dec
call
movsl
sub
mov
pop
add
or
or
adc
scas
mov
sbb
lods
add
and
loopne
xor
sub
or
xchg
jmp
sti
and
sub
mov
adc
pop
dec
imul
stos
mov
dec
jmp
sti
xor
mov
and
sub
mov
gs
dec
jg
mov
cltd
inc
cmpsb
mov
rclb
inc
jne
fisubl
incb
jmp
sbb
es
xor
dec
ds
imul
push
inc
stc
test
clc
push
mov
dec
pop
adc
cld
loope
cli
push
and
in
jl
inc
sti
mov
pop
and
in
jl
xchg
jg
stc
push
and
jecxz
aaa
xchg
adc
jae
enter
data16
out
cli
and
jb
adc
sbb
test
and
and
sbb
sbb
sbb
adc
xor
mov
mov
sub
scas
cmc
scas
lock
fstpl
shl
leave
push
jbe
insb
imul
adc
inc
mov
mov
les
mov
mov
incl
or
pop
shrb
sbb
ja
adc
sbb
push
mov
bswap
subl
rcll
ret
sarl
dec
adc
nop
hlt
cmpb
pop
clc
out
clc
mov
mov
add
mov
mov
icebp
ret
and
data16
push
push
mov
jne
fcmovnbe
test
adc
push
mov
nop
push
lds
fldt
out
add
aam
and
iret
dec
pop
or
add
add
mov
clc
xchg
push
dec
adc
leave
dec
jg
dec
imul
in
shl
sub
dec
xchg
mov
lea
xchg
jb
xchg
jne
pushw
lret
cwtl
icebp
or
inc
add
and
testl
dec
jmp
lahf
imul
xchg
mov
adc
or
mov
mov
mov
aaa
ja
cmp
xor
mov
pop
xlat
lahf
roll
xlat
mov
cld
fildl
js
dec
iret
mov
sub
fwait
insb
daa
push
rcll
lahf
ljmp
sarb
daa
jmp
ja
scas
mov
dec
repz
push
jge
dec
js
xor
and
xor
mov
and
inc
adc
jne
in
incb
push
cld
xchg
jl
xchg
mov
dec
sub
cmp
loope
xchg
mov
xchg
jo
jns
cmpsl
adc
add
cmp
ja
scas
adc
mov
and
mov
pusha
mov
inc
jg
lret
inc
push
mov
cmp
sbb
orb
sbbb
sub
push
fs
xor
pop
dec
sub
and
jle
lgs
jl
push
mov
or
adc
lret
xchg
scas
or
add
cmp
jae
dec
xchg
xchg
dec
popf
mov
mov
packuswb
mov
jne
imul
in
xchg
or
jecxz
pop
call
adc
negl
aas
add
push
cmp
cmc
or
add
data16
cmp
shll
and
jle
imul
ja
in
andb
test
dec
sbb
push
push
xchg
fmul
out
idiv
out
xchg
jno
xchg
push
fs
testb
pop
add
in
sub
pusha
pop
inc
call
dec
sub
add
or
arpl
fsubl
lock
imul
cld
mov
dec
push
push
or
sub
arpl
pop
jne
sub
enter
daa
int3
std
sbb
vpminsw
adc
and
fbstp
lds
lea
dec
push
xor
pop
sub
jl
dec
inc
stos
dec
jo
adc
sub
xchg
dec
call
mov
dec
inc
aas
or
jmp
push
jl
jns
jnp
or
call
jnp
push
pop
jle
lret
loopne
push
inc
fcomi
dec
jo
lret
and
pop
mov
cmpl
popl
mov
push
adc
jno
sbb
mov
inc
dec
adcl
enter
rorb
je
repnz
jnp
cli
es
shl
push
rorl
decb
push
call
pop
pop
test
clc
clc
ret
push
jne
push
in
sub
js
outsl
scas
adc
inc
loop
pop
pop
inc
hlt
push
xlat
jmp
lcall
xor
incb
ds
push
pop
pop
jecxz
sub
add
jne
mov
push
in
dec
stos
loop
enter
dec
dec
cmp
inc
cld
cmp
js
sub
jmp
inc
movd
and
iret
cmp
sub
and
sub
ja
sbb
in
lea
xchg
fstl
mov
je
pop
adc
clc
stos
inc
js
pop
into
and
inc
sub
and
mov
push
nop
out
dec
fdivs
into
or
xchg
lret
shlb
push
jge
sbb
mov
or
lret
lock
pop
mov
fs
rcll
call
adc
addr16
and
push
dec
adc
cmp
push
pop
in
int
nop
popa
cmpb
or
fisubl
sub
or
dec
xor
mov
out
scas
hlt
imul
fwait
pop
test
rcrl
sub
sub
mov
xchg
fidivrl
mov
inc
movsb
jmp
pop
xchg
sub
movl
push
imull
and
and
dec
cmc
add
sbb
pushf
sub
push
and
ss
or
sarb
adc
push
push
xchg
cmpsb
pop
xor
inc
mov
sbb
mov
enter
sbb
mov
pop
xchg
into
stos
dec
je
subl
daa
mov
adc
and
pop
fimuls
mov
loopne
mov
adc
testl
in
inc
and
pop
cmp
xor
push
dec
add
sbb
or
faddl
push
bound
mov
add
adc
mov
imul
enter
mov
dec
shlb
sbb
pop
xor
sub
scas
clc
jmp
rol
arpl
daa
cmp
adc
pop
mov
sub
lcall
out
daa
sbb
xor
push
mov
cmpsb
outsl
push
jns
sbbl
push
inc
movsb
adc
icebp
add
add
ja
adc
or
cld
mov
js
cwtl
sbb
pushf
cmp
or
loope
mov
nop
dec
popf
icebp
sbb
loop
in
jl
addr16
sub
or
pop
orb
cld
mov
push
pop
jb
addb
mov
mov
insb
sub
jo
or
or
dec
jnp
stos
fs
nop
inc
inc
jo
dec
enter
sbb
cltd
push
jo
shlb
xchg
mov
ljmp
adc
adc
mov
lock
movsl
sbb
pushf
mov
lods
cmp
mov
adc
sahf
cmpsb
jnp
test
and
clc
fs
push
lods
ljmp
cmp
je
or
xor
ret
pop
pop
inc
jo
xor
sbb
pop
repnz
jmp
aas
es
fisubs
xchg
iret
cmp
test
adc
adc
add
inc
add
cmp
push
mov
inc
mov
adc
push
outsl
add
shrb
or
inc
inc
or
inc
and
les
adc
dec
and
sbb
popa
sbb
and
sub
in
dec
jmp
mov
mov
scas
dec
xor
clc
or
mov
gs
shlb
enter
pop
leave
sbb
in
mov
mov
cmp
frstor
insb
mov
aas
movl
and
in
jb
das
dec
clc
xor
push
or
adc
js
incb
jbe
xchg
into
loop
aaa
or
cmpsl
imul
cli
add
dec
inc
dec
inc
ret
scas
mov
jecxz
outsl
fsubs
clc
mov
jne
lahf
cmp
sbb
loope
in
and
shll
mov
fadds
sub
adc
fisttps
push
call
inc
orl
and
adc
or
in
inc
sbb
jge
sub
xchg
hlt
mov
std
mov
and
out
or
pop
sub
and
jne
and
bound
rorl
pop
mov
inc
inc
in
call
out
mov
xchg
flds
push
test
ja
pop
cli
add
dec
movsb
xor
sbb
into
jg
hlt
and
hlt
cmp
ljmp
cmp
and
add
fimuls
scas
rcrl
icebp
decb
xor
flds
inc
or
sub
and
jg
out
clc
bound
test
jle
sbb
dec
cld
mov
push
jne
cmp
push
out
add
mov
stc
arpl
mov
std
sbb
jp
pop
outsb
xchg
adc
inc
repz
aam
push
mov
es
lock
jle
mov
push
adc
incl
or
dec
add
xor
je
adc
or
aad
mov
push
push
cmp
jl
or
nop
cli
ds
and
add
adc
adc
push
xchg
or
add
sahf
pop
cmovbe
xchg
nop
bound
ficompl
adc
inc
movsb
test
jmp
xchg
or
adc
and
adc
popf
std
xchg
shl
adc
pop
fdivs
test
mov
test
orb
jne,pn
es
push
sbb
dec
leave
inc
adc
into
push
fdivr
sub
or
orb
sbb
pop
movsl
cmp
cmp
or
shr
sbb
popa
ss
sub
sub
push
ss
and
idiv
mov
xchg
sbb
lea
cmp
hlt
sbb
imul
je
lea
jns
rol
pop
and
loopne
daa
mov
cmpsb
jae
dec
jne
call
sarb
add
bnd
lahf
int
ss
movsl
and
inc
mov
inc
scas
mov
cmpsl
inc
nop
rep
icebp
stc
dec
sbb
in
lret
in
adc
or
and
or
jmp
mov
mulb
lahf
jge
or
out
cwtl
cld
inc
hlt
js
inc
hlt
sub
dec
rol
push
and
sub
mov
in
mov
xor
push
mov
push
mov
push
pop
push
jne
pop
mov
rcll
add
notb
mov
pop
and
ds
pop
xchg
dec
sub
pop
test
ljmp
add
xchg
mov
xchg
push
sbbb
mov
sub
adc
je
popa
sbb
push
std
add
or
inc
add
jl
adcl
leave
pop
lret
js
xchg
cwtl
sbb
adc
push
ret
lods
ret
clc
shll
dec
jl
pop
cmp
stos
shll
fistpl
test
mov
lock
adc
adc
cmpsb
ficoms
and
in
daa
add
push
push
call
imul
lods
sub
jmp
or
dec
mov
cmp
sub
and
push
cmp
adc
push
popf
dec
dec
jae
lret
pop
clc
pop
sbb
push
outsb
loop
data16
mov
xchg
jbe
movzwl
outsl
dec
cmp
cmc
push
jle
push
stos
test
sub
test
pop
push
inc
jmp
sub
lea
push
lahf
imulb
shl
mov
xor
sub
sbb
je
lret
push
movzbl
pop
pop
pop
and
inc
mov
jmp
and
inc
jg
xor
xor
iret
in
data16
lods
sub
inc
adc
push
icebp
or
jne
mov
add
jae
adc
mov
and
or
and
daa
mov
outsb
lahf
dec
nop
out
sub
adc
push
enter
adc
and
loop
testb
sub
sbb
add
je
push
sbb
movsb
or
cmp
push
sub
aad
mov
je
sbb
jmp
outsl
inc
adc
sbb
adc
es
imul
push
dec
arpl
call
xchg
mov
mov
mov
es
repz
sbb
aaa
je
stos
adc
fs
jmp
adc
lods
aam
lahf
pop
mov
pop
clc
mov
and
out
or
pop
jecxz
les
xchg
clc
stos
jne
rolb
adcb
and
mov
add
jae
roll
add
adc
or
and
or
mov
adc
dec
add
mov
mov
inc
ret
xchg
inc
sbb
dec
and
adc
sub
inc
push
or
pop
sahf
and
pop
mov
test
mov
push
iret
sub
sub
adc
push
add
adc
and
sub
inc
icebp
sub
adc
mov
adc
push
mov
aaa
xchg
mov
push
ljmp
cmpsl
dec
xchg
int3
adc
arpl
jge
mov
clc
gs
insl
adc
cmp
aas
and
xchg
dec
adc
dec
cmp
pop
cmc
ds
sub
or
cmpb
jmp
cld
daa
add
xor
mov
adc
add
add
cmp
inc
add
adc
outsb
jno
dec
call
dec
push
sub
daa
add
fisttps
pop
pop
nop
lds
push
sub
addr16
fs
ret
sbb
push
dec
pop
daa
push
popf
or
mov
lret
push
lcall
icebp
dec
lea
and
dec
jns
clc
mov
sbb
adc
in
test
cs
mov
int
je
jb
xchg
dec
aas
mov
or
jne
sbb
sbb
pop
out
mov
inc
adc
adc
lret
outsl
call
xlat
int3
and
pushf
dec
mov
enter
inc
add
cmp
in
rolb
jg
mov
je
dec
and
adc
sbb
sub
sub
mov
push
nop
or
sbb
or
pop
sarb
xchg
and
mov
mov
sub
cmp
or
and
jl
push
fidivs
ret
pop
xchg
dec
jb
lds
sbb
xchg
and
xchg
push
jno
add
xor
jge
mov
inc
jl
andb
sub
jne
cmpsb
in
mov
ret
cltd
jl
ret
divl
bound
fmulp
clc
adc
cmpsl
xlat
fsub
scas
mov
inc
das
les
out
leave
cmp
movsb
sub
ds
dec
mov
rolb
xchg
and
cld
dec
xchg
sti
aam
mov
mov
out
cmp
push
orl
leave
xor
adc
push
or
xlat
insb
imul
jno
push
fdivs
mov
push
and
push
icebp
int3
pop
push
les
mov
sub
sub
nop
movsb
popf
pushl
loopne
aas
sbb
fstps
ret
sub
add
push
sub
add
jo
pusha
test
es
repz
dec
xor
jecxz
jl
inc
js
inc
or
jmp
popa
mov
test
shlb
data16
mov
shr
or
add
jne
aad
pusha
hlt
and
cvttps2pi
mov
mov
adc
pushw
add
jne
dec
nop
test
enter
push
imull
cwtl
pop
sub
jmp
es
cmp
scas
cmpsb
out
adc
scas
mov
insl
inc
add
decl
inc
cmp
jmp
cs
data16
add
hlt
adc
sub
fdivs
call
pop
add
xchg
ret
xor
push
dec
mov
leave
cwtl
adcb
dec
push
mov
cmpl
or
frstor
outsl
in
inc
or
jge
ret
mov
adc
lock
imul
push
cmpsb
cmpsb
dec
or
mov
inc
cmc
xchg
lahf
pop
sub
sbb
clc
std
and
cmp
xchg
pop
xchg
sbb
insb
and
je
fbld
bound
and
leave
and
jno
cmp
lea
je
test
addl
dec
pop
and
add
mov
push
jle
and
xchg
pop
and
and
pop
jb
rolb
decb
dec
emms
push
sub
adc
loopne
sbb
push
add
inc
add
inc
pop
xchg
mov
or
or
js
xchg
hlt
repz
inc
pop
and
nopl
ss
push
jmp
inc
pop
sbb
pop
xchg
ljmp
jmp
stos
adc
dec
ds
mov
cmp
add
cwtl
outsl
and
inc
xor
jae
mov
les
cltd
add
inc
push
test
add
dec
js
xchg
das
ret
adcb
cmc
lcall
dec
roll
lock
call
pop
sbb
mov
std
je
addl
and
xor
inc
int3
inc
push
roll
gs
daa
aad
jo
clc
sti
imul
test
std
pop
dec
adc
jne
pop
cmpsb
lock
xchg
xchg
sbb
fsubrs
loope
cmp
fwait
sbb
stos
xchg
orl
dec
jnp
push
add
push
push
mov
dec
icebp
dec
dec
pop
sbb
stc
mov
in
in
jle
dec
cmpsb
ja
push
inc
std
lods
es
adc
mov
pop
rcr
jae
cmp
xor
int
pop
imul
iret
daa
mov
fildll
mov
adc
push
inc
lret
aam
mov
xor
jnp
ljmp
lods
lods
xor
ljmp
and
cmp
mov
add
add
cmp
jae
push
jp
mov
mov
cmp
adc
push
int
mov
push
scas
inc
pusha
sub
mov
add
lods
inc
in
sub
mov
xor
test
sub
pushf
cmp
push
pop
call
subb
push
push
sub
sbb
fsub
ret
cltd
adc
movsl
sti
mov
or
daa
pop
das
xchg
push
pop
xchg
js
pop
dec
adc
cmp
sti
cs
push
test
dec
xor
adc
inc
dec
jnp
dec
je
out
leave
pop
int
xor
mov
adc
std
pop
mov
rclb
mov
clc
mov
repnz
icebp
fisubs
pop
mov
stc
adc
stc
int
out
ds
daa
movsb
in
inc
jmp
xlat
ret
push
je
jne
imul
mov
out
dec
mov
jnp
and
xchg
push
iret
pop
or
cmp
das
dec
fistl
in
xchg
icebp
pop
outsl
aas
std
pop
test
movsb
std
pop
xchg
lods
rorb
dec
dec
lret
inc
push
xor
xor
dec
test
mov
sbb
mov
les
test
ret
fs
imul
leave
loop
fs
pop
shll
dec
repz
dec
lret
daa
or
inc
push
or
or
xchg
outsb
pop
xor
mov
sbb
rorl
lds
or
scas
and
or
clc
adc
lret
sbb
pop
inc
cld
shlb
int
mov
adcl
jmp
mov
jmp
cli
pop
inc
mov
push
insl
test
in
xchg
xchg
sub
jno
mov
inc
add
rcrl
in
sub
mov
cmp
testb
test
in
xor
mov
jnp
in
icebp
push
outsb
sub
loopne
mov
loopne
inc
inc
enter
insb
faddl
adc
sbb
fadd
lock
or
lea
inc
rclb
and
mov
enter
insl
adc
jne
es
mov
enter
inc
les
test
inc
enter
or
ss
rclb
pushf
mov
addr16
mov
sbb
lea
pushl
add
mov
push
mov
sub
mov
test
js
movsb
mov
call
aam
push
movsb
sub
call
xchg
xlat
ret
mov
adc
iret
push
sahf
and
lock
xchg
scas
sub
cmp
and
lock
mov
call
icebp
daa
loopne
push
test
cmp
mov
lods
xor
mov
jo
and
cmp
je
and
pushf
mov
outsl
mov
pop
inc
pop
jnp
popf
lahf
test
xchg
push
adc
data16
das
cli
adc
mov
dec
ljmp
push
ja
mov
or
xchg
mov
mov
and
xchg
push
xorl
adc
mov
xchg
in
sub
push
sub
testl
cmp
cmpl
push
inc
cmp
inc
iret
jno
xor
in
cmp
xchg
sahf
loope
mov
mov
sbb
je
or
push
dec
or
sbb
mov
ss
arpl
outsb
test
scas
fmull
jge
xchg
jae
lret
lea
in
push
mov
jle
add
adcb
ret
fsubrl
push
or
inc
scas
add
mov
or
lods
jg
hlt
mov
scas
and
cmp
adc
mov
fiaddl
imul
daa
movsl
push
jno
or
mov
lods
aam
sub
les
or
xor
adc
cmp
bound
pop
inc
sbb
inc
inc
and
inc
fs
dec
add
bound
cli
aam
cli
aam
fidivs
inc
and
out
leave
push
add
or
add
jmp
fldcw
sahf
iret
ljmp
sub
cwtl
repnz
inc
addb
repnz
xchg
add
in
mov
push
or
imul
push
in
xchg
ljmp
dec
test
xlat
adc
sbb
inc
mov
and
sahf
in
push
inc
add
hlt
adc
cmc
inc
and
nop
seta
lcall
xor
aad
cmp
and
dec
test
cmp
popa
insl
imul
scas
and
repz
outsb
dec
enter
insb
mov
gs
inc
outsb
push
mov
push
push
imul
lods
dec
enter
rclb
in
hlt
les
movsl
cmp
dec
hlt
cmp
push
inc
popa
arpl
and
insb
push
sub
in
test
hlt
push
xor
andps
push
push
imul
push
dec
pop
sbb
push
imul
jmp
jns
dec
mov
dec
insb
popa
pushf
or
lods
sbb
push
sub
mov
sub
flds
inc
adc
push
sbb
adc
es
mov
sbb
dec
push
pop
insb
outsl
push
jae
push
adc
inc
sub
push
jns
jl
push
call
inc
insl
cmp
xchg
adc
xchg
bound
and
push
jns
mov
hlt
es
adc
mov
insb
pop
push
pop
adc
sub
js
out
movsl
adc
pop
mov
mov
addr16
sub
push
sbb
xchg
add
lea
sarb
xor
xchg
cmp
adc
inc
loop
sub
inc
adc
ja
sub
xchg
lods
sbb
cwtl
and
shlb
and
push
push
js
push
fiadds
repnz
outsb
lcall
dec
in
push
sbb
push
insl
mov
sbb
inc
cmp
dec
js
add
dec
gs
das
xchg
sbb
lcall
into
adc
shll
sbb
mov
xchg
push
xchg
xor
xor
mov
lods
adc
dec
pop
xchg
sbb
push
xchg
cld
lret
fistps
outsb
inc
pop
sbb
push
inc
hlt
stos
sbb
imul
fisubrs
cmp
push
sbb
aam
mov
and
push
xchg
push
mov
push
sub
push
scas
mov
loopne
mov
sub
or
jae
cmp
push
inc
fwait
and
pop
lret
xor
test
inc
js
sbb
ljmp
jne
arpl
sub
adc
xchg
fbstp
cmpsl
dec
fs
js
sbb
out
test
pushf
call
shl
inc
popf
sbb
dec
xchg
xchg
cmp
arpl
inc
fs
rol
dec
fmuls
inc
js
jbe
adc
push
push
mov
outsl
in
mov
xor
aam
roll
sbb
push
sbb
xchg
jg
jl
aam
stos
lods
dec
sbb
sub
add
push
inc
cmp
inc
jno
adc
outsb
xor
jno
mov
mull
nop
lahf
xor
inc
inc
xchg
sub
aam
inc
dec
inc
jns
adc
jbe
stos
pop
and
outsb
out
aaa
push
dec
lcall
fnstenv
adc
ret
loop
and
inc
test
xchg
push
test
and
mov
or
jae
push
xor
and
push
push
sub
sbb
mov
imul
xchg
or
inc
push
xchg
adc
test
repnz
adc
jno
and
pusha
or
gs
adc
fs
and
in
xchg
out
test
imul
fs
daa
inc
jns
xchg
movsl
sbb
cmp
inc
sbb
inc
jne
jecxz
and
adc
fstpl
adc
push
jmp
inc
push
sub
aaa
aaa
imul
push
ficoml
fstps
dec
cmp
cmp
das
xor
cmp
mov
fists
cmp
mov
pop
cmp
push
mov
mov
shll
shll
ds
mov
cli
roll
shll
shrl
shll
rcrl
rcll
rorl
roll
dec
cmp
cli
shll
jmp
sbb
inc
adc
dec
or
pop
sahf
lock
sahf
call
sahf
fdivrs
sarb
enter
ficomps
ficomps
sahf
cwtl
ficomps
cli
jnp
jmp
jo
push
out
cmpsl
xchg
push
cmpsl
xchg
dec
cmpsl
mov
jnp
jmp
and
jp
or
add
clc
jmp
pusha
mov
or
and
loope
insl
jo
dec
insb
mov
jge
and
pusha
xor
add
in
push
and
ret
xor
or
movsb
das
mov
push
aam
push
clc
push
mov
sbbb
nop
pusha
in
add
mov
adc
test
push
inc
push
repz
sarb
mov
mov
sbb
and
push
xor
push
adc
rcr
stos
lahf
mov
outsl
popa
adc
jmp
sub
inc
bound
cmp
add
nop
add
add
and
push
inc
or
mov
cmp
dec
mov
add
pop
sub
mov
add
call
je
test
adc
adc
sbb
ja
mov
imul
or
test
push
dec
or
cmpsl
sub
addb
js
or
fs
push
jle
dec
adc
test
mov
lds
and
lea
fadds
xchg
and
adc
jne
mov
add
nop
sbb
outsb
andb
adc
pop
mov
sub
iret
xchg
out
mov
or
cmp
adc
push
aad
dec
or
sub
and
cmp
mov
outsl
dec
sub
and
in
cmp
push
inc
and
cmpb
jbe
jnp
scas
ljmp
mov
mov
cs
xor
or
adc
imul
bound
notb
cmc
xchg
xor
pop
and
add
aam
shll
sub
and
push
cmpsl
lods
sbb
jno
dec
push
mov
pop
inc
lods
mov
leave
fld1
pop
xlat
xchg
rorb
out
adc
mov
xchg
jmp
cli
xor
sbb
lock
mov
pop
add
adc
add
cmp
ds
adc
sub
lahf
push
sti
or
sbb
bound
xchg
sub
jl
push
pop
pop
add
mov
mov
mov
outsl
inc
jb
loopne
push
imul
xor
and
cmp
adc
scas
fdivrp
dec
stos
or
stos
ja
mov
jg
adc
dec
je
jb
lahf
fisubrl
arpl
dec
xchg
and
jnp
or
inc
cld
pop
loopne
mov
test
adcl
fisttpll
cltd
cmp
je
adc
adc
add
faddp
ret
nop
mov
cld
movsb
xor
js
cmp
pop
mov
jbe
cs
subb
lods
xor
cld
xchg
pop
mov
sbb
or
or
xchg
call
inc
insl
and
jmp
clc
lret
arpl
add
stos
and
scas
test
movsl
mov
dec
adc
daa
repnz
mov
jle
sbb
add
mov
js
jmp
push
movsb
xor
pop
test
in
adc
xor
mov
push
xchg
xor
pop
sbb
lcall
push
addr16
rcrb
jle
lods
push
or
mov
idivb
mov
ja
jp
adc
mov
add
dec
clc
jnp
aam
loopne
dec
ret
jmp
nop
xchg
loopne
mov
mov
aam
push
ja
or
or
xchg
daa
xchg
mov
or
jmp
decl
xchg
inc
test
cs
inc
and
ret
xchg
sbb
jge
rcll
mov
pusha
shr
sbb
ss
or
push
dec
dec
add
mov
and
je
push
sti
sub
cltd
inc
and
je
daa
test
data16
cmp
or
rol
int3
pop
movzwl
push
sub
fs
xlat
mov
sub
push
out
imul
lahf
scas
adc
and
inc
push
pop
fs
dec
and
mov
xchg
movsb
dec
outsl
jmp
dec
loop
cld
push
out
jg
adc
jmp
jb
sar
addr16
and
aaa
adc
xor
and
cld
mov
out
jb
jne
sub
pop
ljmp
jne
jp
daa
push
xchg
push
in
stos
call
cmpsl
lea
sub
sub
cmpsb
xchg
out
gs
or
add
cmp
jb
loopne
shrl
stos
mov
fadd
call
xchg
or
cld
test
jmp
push
pushl
mov
push
cltd
in
lock
or
inc
pop
dec
test
and
in
lods
mov
jno
in
nop
mov
inc
mov
shl
jb
fs
add
and
roll
test
ret
shl
stos
int
pop
std
mov
adc
fs
push
add
clc
sbb
jne
push
jecxz
xchg
mov
cmpl
pop
mov
out
inc
or
push
add
cli
jmp
dec
xchg
jne
mov
push
push
jle
inc
ja
add
add
jge
inc
sti
cmpsl
cld
les
lcall
ror
into
mov
inc
js
mov
scas
push
push
sbb
shrl
sti
enter
clc
sub
xor
movsb
fiadds
fsin
roll
into
insb
mov
repz
mov
push
jmp
or
and
sub
or
jmp
cmpl
adc
cwtl
adc
sbb
ret
adc
xchg
stos
mov
les
mov
in
sub
jb
je
jmp
adc
add
xchg
lea
and
push
sbb
mov
mov
add
and
or
inc
les
jg
sbb
push
nop
jo
sbb
or
in
add
pop
xor
xchg
or
testb
je
xchg
adc
shr
mov
inc
daa
cwtl
in
nop
fistl
and
lcall
lahf
or
lods
je
loopne
add
add
or
jle
mov
sub
jno
or
mov
xchg
xor
sahf
aam
fdiv
push
or
inc
orl
and
push
sbb
push
mov
lds
fidivs
mov
insb
cli
mov
push
push
xchg
adc
bound
cmpl
push
pop
mov
adc
cmp
int3
xor
ret
bound
fisubrs
xor
sahf
xchg
xlat
mov
add
ret
test
jl
imul
popa
les
xchg
xchg
aad
scas
cmp
xlat
xchg
jae
xlat
cwtl
cwtl
call
add
jbe
mov
inc
test
cmc
ret
xlat
sahf
pop
xchg
stc
lock
decl
mov
xchg
and
add
enter
popf
and
and
and
int3
mov
adc
out
icebp
and
sub
mov
add
daa
rorl
icebp
fstl
and
mov
subb
jb
mov
movb
imul
test
cwtl
add
jne
repz
je
push
in
sub
mov
jle
dec
jae
jo
pushf
in
testb
notl
mov
and
adc
mov
test
xchg
add
cmp
push
xchg
stos
xchg
imul
test
adc
xchg
test
sub
out
add
dec
cld
push
andl
sbb
xchg
mov
and
adc
and
bound
or
dec
or
cmpsb
sbb
cmc
adc
fimuls
xchg
enter
jb
cmp
mov
mov
mov
mov
add
jne
add
call
in
cmp
adc
push
sbb
hlt
or
jle
or
js
rclb
jb
or
inc
push
lods
fcoml
and
sub
xor
push
add
sub
push
bound
jge
imul
jno
scas
inc
test
sti
mov
jmp
and
push
xor
call
es
es
pop
adc
xchg
adc
pop
or
push
ds
addr16
push
adc
sti
push
es
iret
fwait
xchg
dec
lock
ret
cmp
jmp
inc
mov
xchg
adc
jecxz
std
sub
adc
or
sbb
scas
lret
es
add
mov
sub
add
jo
mov
adc
imul
out
clc
addr16
clc
mov
sti
push
enter
fsubs
sti
sbb
xchg
ds
lock
jo
jne
add
insl
dec
xor
push
mov
jae
cld
cmp
jne
aaa
xchg
lea
add
mov
pop
int3
add
dec
int3
jne
or
and
in
xor
or
out
add
inc
das
xor
sub
and
push
cli
pop
sbb
pop
mov
xchg
jno
jl
add
pop
movsl
add
repz
xor
mov
mov
outsl
xor
je
jmp
inc
pop
cltd
cld
mov
xor
xor
jmp
stos
sub
cmp
mov
and
icebp
mov
add
pop
roll
aas
mov
das
lock
sub
jne
jo
xchg
xchg
aaa
js
sarl
mov
icebp
pushf
ret
icebp
mov
push
cld
mov
ljmp
xor
lret
mov
stos
adc
ljmp
lock
mov
inc
jns
ret
cmc
addr16
insb
xchg
sbb
in
cmp
mov
sub
or
mov
dec
sbb
and
inc
shl
or
push
inc
js
push
jo
jb
pop
shll
iret
inc
mov
jnp
add
and
js
mov
and
sbb
popa
sub
inc
cmpsl
data16
mov
loopne
fisubrs
lahf
xchg
push
add
cmpl
bound
push
adc
sub
aas
ja
sub
aaa
movzwl
mov
adc
dec
sbb
jo
mov
das
mov
dec
insb
jmp
sub
ret
jmp
lods
mov
lret
push
mov
push
mov
insl
xchg
pop
push
push
pop
out
sub
sbb
iret
xchg
xor
mov
adc
pop
cmpsb
dec
xlat
cmp
jg
mov
jns
xchg
lds
push
push
mov
push
bound
mov
add
pop
push
fbld
es
cmpb
mov
push
stc
push
sbb
inc
push
pop
sbb
mov
enter
adc
add
and
push
test
push
sbb
mov
pop
sub
stos
sub
pop
xchg
cmc
push
or
push
or
xchg
sbb
es
andl
xor
repz
jno
fnsave
mov
push
jmp
stos
and
test
pop
call
cmp
dec
scas
andl
ds
and
inc
cwtl
pop
mov
in
gs
push
adc
sti
lret
or
in
iret
mov
push
or
jmp
mov
jmp
out
test
sub
xchg
lret
mov
sbb
mov
test
cmpsl
and
inc
arpl
xchg
push
movsl
insb
dec
jmp
pop
sub
sbb
repz
sbb
mov
and
sbb
insb
sbb
lods
and
pop
push
movsl
sbb
pop
clc
jmp
pop
repz
cmpl
push
les
push
mov
sub
push
test
enter
cwtl
sub
add
pop
push
add
mov
sub
mov
popa
lock
gs
aad
mov
jnp
cmp
cmp
stos
pusha
testb
adc
push
aad
test
repnz
dec
push
push
push
jge
mov
jle,pt
pop
sub
jmp
mov
cltd
ds
mov
lahf
jb
scas
pushf
or
cmp
sahf
or
ljmp
aam
lahf
mov
xlat
mov
mov
xchg
jo
or
or
ss
call
jmp
negb
hlt
sbb
daa
test
shll
mov
xor
clc
ja
mov
inc
sarb
enter
sbb
test
pop
xchg
pop
test
cltd
mov
lret
orl
lock
repnz
xchg
xchg
push
pop
xchg
jmp
imul
xchg
lcall
sbb
xchg
or
lcall
sbbb
fwait
rorl
rcrl
jle
adc
subl
pop
and
lock
dec
pop
and
pushf
dec
mov
mov
cmpb
fistps
es
or
imul
ja
xor
adc
jne
push
mov
movsl
call
repz
push
fidivrs
or
popa
and
mov
or
xchg
mov
stos
iret
test
push
xor
test
push
xor
dec
pushf
cli
sub
dec
lds
mov
push
push
test
enter
aaa
mov
dec
or
aam
mov
inc
xchg
mov
push
and
outsl
mov
popa
jmp
and
and
mov
je
cwtl
xchg
mov
pop
inc
jecxz
sbb
sub
cmc
lock
icebp
sub
scas
and
lret
fldl
pop
add
lds
in
adc
std
fld1
jmp
outsl
fisubs
xchg
ljmp
cld
push
mov
scas
adc
sbb
mov
lcall
pop
lds
mov
lock
lahf
mov
sbb
movsb
pop
insl
adc
imul
jnp
dec
push
hlt
loope
lahf
sbb
fcoms
repz
insb
adcb
loop
inc
fsubrl
loopne
or
pop
adc
mov
cmp
fdiv
inc
inc
sub
add
jmp
xchg
dec
shll
xor
cmc
cmp
cmpb
fcompl
notb
les
add
inc
mov
and
jge
dec
insb
stc
or
and
popl
inc
test
cmp
cmp
mov
sbb
push
push
subl
mov
adc
int3
mov
cmp
pop
nop
repnz
dec
xchg
and
mov
ss
orl
push
inc
inc
cwtl
sub
pop
sub
test
pop
mov
and
cmp
and
xor
daa
je
pop
in
sbbb
dec
add
mov
insl
ret
divb
jnp
push
jb
push
cld
sub
jl
pop
pop
pop
pop
sbb
fbld
subl
xchg
push
sarb
xchg
aas
dec
inc
adc
in
xor
cmpsl
inc
enter
movsb
rclb
jmp
adc
adc
dec
cmp
push
shrb
aam
notl
or
push
es
inc
adc
xchg
adc
dec
and
lcall
adc
cmpsl
xchg
jl
jg
push
jmp
push
adc
xor
imul
mov
mov
xchg
cmpsl
cmp
cmp
pop
push
and
pop
fcoml
xchg
inc
ja
js
jns
loop
push
ds
insb
pop
and
dec
inc
add
and
sbb
push
adc
sub
dec
xchg
cmpb
jne
push
push
push
lret
xor
fsubs
hlt
cmpsl
sbb
outsb
fcoms
fwait
cmpsb
mov
cmpsl
sti
in
or
dec
test
jmp
pop
adc
popf
mov
clc
mov
adc
mov
push
mov
mov
int3
and
stc
pop
cmpsb
pop
test
xchg
movsl
jno
or
stc
dec
orb
icebp
je
cmp
jne
mov
imul
pop
scas
push
dec
inc
cmpl
dec
test
sub
inc
sub
mov
test
and
pop
jbe
pop
das
in
cmc
idivl
cmc
rcr
dec
push
push
cmc
jp
xor
jmp
push
mov
jmp
mov
jne
push
add
mov
or
inc
sub
and
outsl
push
enter
xor
sbb
or
lea
jns
jae
lret
xor
cwtl
adc
xor
add
lds
in
daa
jns
jp
inc
cwtl
sub
dec
test
rcr
data16
add
scas
popa
pop
in
sub
jns
in
and
adc
cmc
rclb
pop
imulb
xchg
lret
sbb
leave
rcl
popf
inc
aam
fimull
icebp
mov
sti
int3
mov
mov
test
add
mov
pushf
imulb
inc
pop
jecxz
fsubs
lahf
pop
lods
sub
pop
mov
dec
jl
inc
stos
adc
mov
stos
adc
jae
lods
enter
imul
mov
pop
imul
js
adc
jbe
dec
mov
stos
push
rcrl
xchg
cmp
stc
mov
or
dec
mov
ret
mov
xchg
sub
sarl
sub
inc
sahf
hlt
mov
dec
and
mov
pop
mov
adc
push
jbe
xor
outsb
mov
jle
sbb
pop
pusha
and
cmp
jecxz
jnp
dec
push
push
jecxz
psubusb
sub
pop
mov
in
dec
call
pop
lods
dec
and
mov
inc
into
mov
mov
rol
or
mov
pop
mov
adc
jnp
mov
frstor
sbb
outsb
dec
xlat
lret
xor
jae
imul
jne
pop
add
sbb
outsb
lds
arpl
push
push
sbb
adc
pop
dec
cs
or
mov
fisubs
dec
or
jne
adc
xor
loop
hlt
loope
push
adc
inc
pop
push
and
add
sub
addr16
inc
adc
out
xchg
sbb
hlt
out
in
or
jne
scas
hlt
cs
out
and
fdivl
leave
adc
mov
xor
lea
rcll
inc
ficomps
sub
adcl
mov
loop
inc
aam
mov
out
add
push
enter
mov
int3
rol
sub
mov
push
push
xchg
or
pop
xlat
fs
sub
mov
ds
add
in
out
negl
pop
add
mov
pop
outsb
sub
mov
xor
imul
xor
xor
cmp
sub
pushf
gs
fidivrs
ds
das
jo
faddl
add
mov
stos
movsb
pusha
add
or
pop
mov
or
test
adc
pop
and
adc
mov
mov
pop
cld
mov
les
sub
cld
dec
pop
sbb
rol
mov
mov
sbb
movsl
dec
mov
cmp
sbb
xlat
push
out
mov
scas
cld
mov
sbb
lock
imul
stc
out
jno
jle
repz
outsb
jmp
mov
popf
out
enter
adcl
fcmovnbe
ficoml
sbbb
adc
push
sub
repnz
xor
enter
jae
in
lret
mov
or
call
mov
jle
pop
inc
lret
mov
sub
push
cwtl
jg
es
adc
scas
loope
fwait
sub
test
xchg
pop
or
jne
push
push
mov
sti
gs
test
aad
sbb
jne
enter
mov
repz
popf
in
pop
pushf
mov
inc
sub
js
sbb
jmp
lea
nop
jo
mov
or
fdivrs
jmp
push
sbb
lahf
push
sub
shlb
add
inc
adc
inc
xchg
and
lcall
orl
dec
xor
mov
nop
or
enter
sbb
scas
std
adc
adcb
rol
add
push
aad
js
lea
mov
pop
mov
push
add
rorl
inc
and
cmp
dec
push
pop
inc
sbb
pop
loopne
push
add
add
sub
mov
aam
dec
sarb
mov
mov
mov
jns
aaa
std
add
inc
stc
ficomps
ja
ret
fs
cld
push
jnp
test
gs
out
loop
and
int
push
adc
test
aam
or
shll
aad
inc
jmp
inc
push
or
test
lods
jge
ror
jmp
ja
adc
out
enter
xor
insb
enter
mov
cld
lds
sub
or
sub
bound
sub
sub
lahf
and
nop
sub
lea
xchg
and
sub
loope
cld
lds
mov
test
mov
cmp
jbe
dec
pop
and
adc
push
adc
mov
mov
ret
sbb
sbb
jl
test
xchg
xor
sbb
adc
and
add
lock
clc
push
loope
std
xor
add
push
les
in
pusha
call
inc
adc
or
into
decl
push
xlat
jo
cmp
cltd
ja
stos
ret
or
fbld
and
imul
inc
sbb
inc
imul
jb
push
adc
mov
push
dec
fnsave
jl
dec
lea
add
dec
sub
and
ljmp
sarb
pop
push
xor
xchg
loopne
inc
out
fwait
call
pop
pop
jbe
push
inc
rep
cli
fidivrl
jl
orb
ret
sub
pop
push
js
nop
xor
sub
sbb
clc
wbinvd
xor
gs
xor
mov
or
pop
out
fldcw
cmp
sub
aaa
push
inc
lock
in
sbb
cmpb
push
sbb
lock
in
push
loopne
xchg
or
push
mov
fs
and
daa
fistpll
push
fmuls
jnp
pop
inc
aam
or
test
int3
dec
mov
inc
clc
or
jno
bswap
enter
imul
fisubs
or
fs
inc
inc
mov
xor
rolb
sti
or
inc
sub
aas
and
bound
dec
push
and
inc
movsb
mov
cs
aas
addr16
jns
movsb
movsb
pop
inc
mov
rcrl
test
pushf
sbb
mov
cwtl
les
and
lods
push
test
in
and
xor
mov
adc
js
leave
mov
lods
inc
jbe
or
mov
enter
arpl
mov
sarb
bswap
insb
push
inc
fistps
fs
daa
shll
stc
pusha
or
add
sbb
ds
ret
pusha
jle
push
adc
sub
cmp
mov
sbb
push
bswap
dec
push
inc
fisttps
inc
xor
or
nop
dec
cld
cmp
imul
jecxz
xor
fadds
cmp
in
bound
iret
jno
sub
in
and
inc
xor
and
arpl
mov
jae
bound
sti
or
sbb
adc
jecxz
adc
sbb
xchg
inc
jo
mov
push
or
inc
jp
mov
lahf
popa
adc
inc
or
mov
pop
mov
neg
mov
shr
adc
mov
pushf
cmc
lds
cmp
or
out
gs
dec
add
sbb
and
das
jecxz
adc
scas
xlat
mov
jg
loopne
das
mov
push
dec
outsl
clc
sub
gs
adc
mov
xlat
pushf
dec
cli
inc
add
inc
pop
push
inc
dec
dec
in
push
stc
cmp
xchg
xchg
sbb
sub
dec
dec
push
push
in
and
push
push
xchg
xor
adc
mov
sub
push
dec
push
push
cs
sub
or
in
inc
push
cmpsb
cmpsb
je
dec
and
sbb
call
or
fstl
xchg
jmp
xor
dec
aaa
dec
test
or
gs
xlat
xor
outsb
je
loopne
data16
adc
sub
dec
scas
push
cwtl
lods
outsb
inc
fs
cmpsl
cwtl
int
dec
cwtl
and
xor
dec
loope
daa
sbb
adc
cli
dec
sbb
cmpb
or
orb
xchg
add
sbb
fstpt
mov
and
inc
jmp
aaa
sbb
adc
xor
pop
mov
mov
lock
mov
add
mov
out
fldcw
stos
xchg
push
jmp
inc
pop
adc
pop
mov
add
sub
mov
mov
cltd
pushf
daa
push
int3
pop
dec
dec
loope
pushf
adc
les
jb
addl
les
push
fcomip
mov
push
lcall
stos
push
push
bound
cmpsl
test
dec
out
fcomi
repnz
inc
dec
jb
or
adc
imul
ja
shr
sub
les
dec
mov
in
dec
mov
clc
sbb
mov
push
dec
ret
sbb
lret
in
popa
in
push
call
jnp
push
ss
stos
xor
mov
pop
mov
xchg
and
in
out
mov
add
inc
or
cs
fwait
int3
inc
jl
imul
and
and
mov
push
lret
add
adc
mov
dec
or
lock
sbb
out
dec
movsb
lret
test
pop
mov
movsb
or
push
jl
jmp
xchg
mov
lea
mov
push
cmpsb
test
sti
sbb
pusha
jmp
cltd
cmp
mov
xor
add
adc
adc
xor
or
test
inc
jle
cld
sub
and
push
jae
sub
xchg
insl
mov
xchg
pop
dec
gs
adc
dec
shll
dec
jle
push
adcl
cmp
dec
mov
pop
or
push
in
lret
xchg
add
dec
lret
test
push
sbb
mov
adc
out
mov
and
or
addr16
repz
xchg
or
psllq
fs
push
or
xchg
xchg
cmc
jae
and
subl
fdivl
call
jb
in
dec
mov
dec
stos
in
push
push
mov
inc
and
sbb
and
dec
mov
mov
sub
dec
movsl
adc
std
xchg
adc
movsl
xor
dec
sbb
or
mov
or
push
hlt
cmpsb
push
stos
mov
shrl
movsl
fldenv
movl
dec
insl
add
hlt
sub
adc
sbb
cmp
ljmp
popa
sub
pop
push
push
bound
jmp
add
and
mov
and
lret
push
inc
add
adc
imul
sub
xchg
mov
inc
data16
xchg
xchg
and
inc
push
bound
jmp
push
cmp
mov
sub
pop
xor
adc
imul
push
sub
das
lret
les
in
xchg
dec
scas
xchg
jp
inc
xor
sahf
mov
push
dec
xchg
cmc
or
je
cmc
ss
adc
sahf
xor
out
mov
and
add
mov
add
in
fisttps
inc
sti
mov
fmull
dec
pop
out
cmp
test
test
icebp
mov
or
cld
dec
or
cld
xor
jmp
cmpb
out
movsl
add
imul
ret
pop
mov
push
rcll
gs
mov
fs
xor
mov
cmpb
add
sbb
cmp
xlat
dec
mov
and
adc
lcall
cmp
arpl
arpl
mov
push
cs
xlat
test
mov
test
fcmovbe
test
and
mov
xchg
adc
push
mov
shlb
in
inc
mov
mov
xor
sub
xchg
jle
xchg
mov
outsl
in
out
mov
sub
adc
sub
and
imul
les
std
inc
loope
outsl
in
out
and
or
jae
bound
aad
jne
jne
cmpsl
arpl
pop
jg
and
faddl
inc
incb
xchg
fisubs
push
cld
mov
or
fs
sbb
xor
test
je
push
mov
lea
pop
les
mov
adc
fcoms
je
and
mov
shr
xchg
scas
push
push
icebp
out
ret
mov
jmp
jle
xchg
sar
xchg
or
mov
adc
pop
add
jecxz
sub
push
inc
xor
push
mov
cs
jge
xor
in
add
xor
sbb
addb
call
jmp
addl
inc
jmp
sub
dec
sgdtl
push
lods
jl
jl
add
push
xor
add
push
addr16
shlb
pushf
loopne
push
dec
xchg
or
jg
mov
ret
mov
pusha
lcall
addb
ret
mov
jmp
rcll
rcll
mov
or
rorb
lahf
sub
mov
rorb
pop
je
push
sub
ret
pop
pop
add
add
ds
ljmp
and
mov
sub
rep
pop
sub
xchg
les
loopne
mov
mov
xor
sarl
jae
push
add
inc
inc
adc
push
sbb
test
and
add
pmullw
rcrb
inc
mov
jl
sbb
push
ret
fnsave
out
stos
scas
jbe
push
ja
sbb
dec
add
mov
mov
sub
inc
into
adc
adc
jno
sbb
into
and
sub
cmpsl
rcll
lods
xor
jmp
cmp
add
repz
nop
mov
sub
shlb
es
sbb
fmul
mov
scas
pop
mov
imulb
xchg
adc
sbb
test
mov
ja
loopne
push
jp
pop
push
mov
sahf
dec
shll
xchg
jmp
loope
int3
jecxz
push
icebp
notl
push
call
test
or
int3
push
clc
aas
add
or
adc
or
insl
fisubrs
in
data16
incl
in
dec
adc
pop
sub
push
or
adc
xchg
clc
adc
std
or
or
adc
push
xchg
adcl
int3
cmp
test
icebp
clc
nop
lret
or
jmp
jge
mov
adc
adc
or
aad
inc
or
movsb
movsb
dec
sub
push
jge
push
jl
and
rorb
mov
adc
add
mov
test
test
and
push
or
mov
push
inc
or
mov
mov
inc
fiadds
insl
add
and
adc
daa
xor
mov
test
leave
jg
mov
mull
inc
clc
ja
xchg
mov
popa
iret
cmc
or
cmp
lods
cmpsb
pop
inc
mov
push
aas
dec
ret
mov
icebp
push
cmpsb
movb
push
leave
sahf
fcoms
adc
mov
adcb
or
out
or
add
mov
or
leave
jmp
in
fwait
sub
push
sub
and
shlb
mov
packssdw
sbb
xchg
xchg
andb
bound
imull
xchg
rorb
cs
xor
push
call
and
mov
inc
cmp
and
popa
xor
dec
popa
std
arpl
mov
cmpsl
sub
sub
sub
mov
add
sti
pop
fsts
loop
sbbb
ret
data16
or
mov
adc
push
sti
mov
xor
inc
outsb
test
pushf
xchg
pop
dec
sub
jl
jmp
enter
roll
mov
inc
dec
inc
jae
cmp
int
pop
cmp
sub
mov
jge
add
or
push
adc
jg
jne
loopne
push
faddl
arpl
mov
jecxz
push
inc
lret
inc
fisubl
mov
stos
fdivrs
dec
and
loop
inc
mov
jae
adc
add
jno
fdivrs
std
stos
jae
lods
cmp
inc
cmp
cmc
inc
mov
scas
enter
mov
pop
jne
mov
sbb
or
and
dec
xor
adc
dec
pop
jo
shlb
push
xchg
lret
mov
inc
mov
cs
lock
jno
je
push
inc
jmp
and
aam
mov
lahf
mov
cltd
and
and
mov
inc
adc
cmpsb
mov
repnz
decl
imul
js
or
or
test
je
xchg
xor
repnz
cmp
bound
dec
data16
dec
mov
push
jp
aam
add
rorb
mov
lret
movsl
cmp
ljmp
and
shll
cwtl
and
add
out
jne
aaa
arpl
push
add
lret
enter
adc
int3
or
in
and
lret
mov
and
shlb
push
and
xor
dec
mov
push
test
xor
dec
and
cmp
adc
andl
mov
sub
jns
insl
inc
enter
add
loop
xchg
push
test
inc
pop
mov
xchg
lods
int
and
fmuls
add
in
repz
push
sahf
push
lock
lods
jbe
repz
dec
cmp
fs
cmpsb
ss
add
cmp
jne
mov
adc
repnz
jns
adc
mov
add
push
cmc
hlt
cmpsl
xchg
adc
dec
push
es
sbb
push
or
add
sub
or
add
push
adcl
cmp
sbb
xorl
or
ret
jbe
sbb
sub
mov
or
sub
or
rolb
and
shrl
pop
call
pop
pop
pop
push
lods
movsl
sbb
push
enter
or
push
sub
repz
adc
out
sbb
call
jnp
mov
and
ss
jb
add
cwtl
mov
mov
lret
ljmp
cmp
sbb
js
inc
aas
xor
sub
and
push
repz
cmp
sbb
cld
sub
jmp
and
ljmp
push
movsl
xchg
push
jbe
addr16
xor
or
les
repnz
push
and
mov
adc
and
in
mov
pop
dec
sub
mov
jbe
ds
adc
adc
jmp
pop
and
pop
pop
cmpb
jne
movsb
push
add
imul
loop
sbb
cmp
xchg
add
add
xchg
jmp
and
adc
or
xorl
test
pop
push
or
push
mov
cmp
rorb
jmp
shrl
ja
mov
inc
add
pop
inc
cmp
xlat
out
xchg
sub
rcl
jbe
in
push
or
movb
pusha
ja
mov
orb
sbb
or
ret
mov
fwait
or
movsb
jne
and
push
cmp
adc
test
and
pop
test
je
dec
enter
adc
je
xchg
repz
mov
add
pop
cmp
push
cmc
jns
xor
dec
jmp
ret
push
rorb
sbb
inc
nop
jge
cwtl
lcall
and
xor
insl
or
or
sbb
sub
sub
or
dec
xor
fwait
imul
popf
enter
xor
sbb
jae
ds
mov
sbbb
adc
mov
xor
cmpxchg
and
sbb
mov
scas
cltd
les
ja
cmp
and
leave
jbe
cs
jmp
xchg
xchg
adc
jmp
orl
aam
faddl
int3
xor
sbb
cltd
sub
imul
pop
dec
les
cmp
mov
cmpsl
push
decl
lock
mov
push
sub
fs
dec
mov
and
add
xor
or
fidivl
and
jecxz
and
adc
cld
popa
inc
inc
int3
or
xchg
aam
inc
mov
adc
sub
inc
push
je
sub
mov
add
cld
test
jmp
outsb
jno
xor
or
xor
adc
fs
add
nop
cld
cltd
pop
inc
cmp
pop
dec
lock
sbbl
cs
popa
mov
movb
sbb
jl
dec
jo
ds
lds
imul
sub
pop
pop
in
adc
insl
lods
js
xchg
and
popf
pop
out
adc
pop
or
clc
add
jbe
js
xchg
adc
sub
xlat
loope
fadds
adc
adc
movsb
lahf
imul
or
cwtl
xor
adc
leave
ja
add
or
sbb
cmp
cmp
out
xor
adcl
out
mov
or
cmpb
sbb
je
jae
arpl
jbe
inc
mov
bound
sahf
lcall
inc
sti
jl,pn
movsl
lods
or
push
inc
add
mov
es
fimull
add
fisubrs
cmpsl
sub
mov
and
fcmovnbe
or
addb
dec
xor
mov
sbb
cld
xchg
bound
stos
pop
sbbl
sub
dec
addr16
mov
loopne
cmp
add
ss
mov
or
stc
add
inc
sbb
inc
movsb
push
sbb
jb
inc
mov
stc
loop
xchg
hlt
or
das
and
cmp
pop
add
addps
sub
push
cmp
test
lret
in
xchg
sbb
loope
shr
push
std
dec
out
cmpsl
ljmp
in
popf
pop
and
xor
fisubrs
push
fwait
std
jle
push
add
hlt
ficoml
and
mov
xor
xor
dec
decb
and
mov
mov
test
inc
std
push
mov
cmp
sub
rorl
xchg
or
in
inc
stos
adc
sub
mov
pusha
call
test
divl
sbb
scas
sbb
mov
dec
leave
adc
or
shll
add
lret
cmp
push
ret
in
sub
enter
add
mov
mov
xlat
pusha
add
inc
ds
outsb
sub
add
out
ss
add
push
loope
ret
inc
movmskps
sbb
push
mov
mov
daa
enter
adc
les
std
add
inc
mov
sbb
sbb
mov
sbb
shl
fstps
into
inc
pop
andb
and
cvttps2pi
test
jo
push
inc
and
bound
mov
mov
dec
bound
pop
ljmp
push
or
push
arpl
add
push
mov
pop
inc
lret
sub
jmp
push
icebp
xchg
add
ret
shll
daa
cmp
aaa
jp
js
fbstp
sti
fmul
jl
test
imul
negb
fildll
test
jmp
pop
push
xchg
mov
push
mov
mov
call
insb
xchg
push
nop
call
ljmp
adc
cmp
push
push
andb
addl
mov
movsl
push
lret
mov
xchg
cltd
fidivrs
inc
jo
loopne
inc
or
dec
dec
mov
sub
dec
jne
dec
rclb
or
in
js
pop
std
fisubl
xchg
add
stc
mov
sub
jg
and
xchg
xor
mov
pushf
cmp
or
xchg
inc
mov
movsl
xor
adc
sbb
out
sub
lahf
jl
into
lret
push
jo
ljmp
stos
pushf
push
lahf
pop
sbb
rep
and
sub
inc
call
xchg
xor
xchg
pop
sar
movsb
lds
sbb
sbb
leave
pop
push
xor
cmp
cmpb
lret
dec
push
daa
loope
xor
scas
ds
movsb
es
xchg
inc
mov
dec
inc
adc
add
out
aam
and
fadds
inc
push
loop
pop
xchg
and
jne
divb
adc
and
pop
jno
jo
dec
inc
push
and
iret
icebp
lret
jbe
or
add
or
adc
push
fstl
xchg
add
outsl
jmp
adc
xor
or
orb
add
xor
dec
inc
into
sbb
sbb
shlb
xor
pop
mov
pop
or
xor
jle
and
ret
xchg
cmp
inc
or
xor
rorb
sub
lret
mov
sub
fs
pop
test
sbb
adc
mov
sbb
icebp
lods
dec
dec
adc
popa
push
fistpll
repz
dec
out
pop
clc
pop
xor
and
adc
and
pop
push
adc
dec
sbb
cmp
cmp
lock
lahf
aad
inc
mov
test
fildl
ret
mov
pop
lahf
mov
mov
test
and
lret
add
jne
mov
lods
and
push
and
or
nop
data16
adcl
xchg
sbb
xchg
sbb
xchg
sbb
les
data16
test
jp
aam
mov
inc
rorb
adc
xchg
push
enter
sbb
mov
add
xchg
sbb
or
mov
mov
add
stos
repz
pop
mov
in
cmp
and
add
test
push
dec
inc
inc
or
push
or
push
inc
rolb
mov
lret
mov
lret
sub
dec
push
jo
inc
mov
call
push
mov
dec
add
add
nop
pop
push
icebp
xor
loopne
data16
leave
xor
int
idivb
rolb
xor
add
in
aaa
mov
in
or
in
movsl
dec
dec
and
or
cmpl
mov
add
add
mov
les
sbb
ret
dec
sub
cwtl
cmp
cmp
icebp
paddsw
outsl
mov
and
fs
or
xor
inc
loope
push
mov
loopne
push
mov
adc
leave
out
test
lcall
clc
call
sahf
sbb
aas
lods
shlb
push
mov
xchg
clc
test
push
out
push
jp
xchg
and
repnz
add
xchg
push
adc
sub
xlat
in
push
mov
mov
adc
dec
pop
xchg
and
sti
xchg
pop
push
in
loopne
pop
stc
push
das
loopne
mov
fdivl
lock
pop
cmp
cmp
mov
sub
push
mov
adc
shrb
sbb
jmp
mov
or
add
add
and
pusha
cltd
jne
cltd
aam
shr
or
mov
imul
mov
mov
insb
jnp
in
pop
or
imul
pshufw
xor
mov
out
or
mov
push
mov
inc
dec
cmp
push
inc
mov
mov
push
and
xchg
jno
lret
adc
mov
or
and
jecxz
inc
ret
xor
leave
sbb
movzbl
cmp
add
cwtl
pushf
movsl
and
pop
push
add
lock
call
jle
inc
xchg
jg
lea
mov
mov
push
ljmp
lock
std
repz
xor
jae
jne
sub
mov
xchg
or
or
rcrb
in
lods
popa
push
mov
psrlq
sbb
scas
and
int3
or
adc
push
dec
xor
ds
clc
xchg
xor
int
cmp
jl
scas
mov
cltd
in
out
neg
dec
inc
xor
push
ret
adc
inc
ret
dec
jno
or
inc
inc
cld
fsubrl
xchg
lcall
stos
cmp
push
pop
out
and
icebp
dec
adc
pop
jo
or
add
repnz
imul
bound
inc
sub
adcb
mov
lcall
aam
imul
vzeroupper
jb
inc
movsl
fdivs
and
jmp
mov
add
sbb
lock
test
xchg
mov
insb
repz
and
je
fcompl
out
mov
fabs
cmp
inc
pop
push
pop
xor
fisttpl
jne
push
and
xchg
sub
cmp
movsl
out
cltd
ret
jmp
hlt
jle
daa
in
xor
push
mov
in
mov
cmp
test
push
add
jmp
xchg
pop
sub
adc
lahf
mov
repnz
xchg
je
jno
sub
dec
test
test
xchg
pop
mov
add
pop
movsb
mov
cld
dec
sti
jb
sub
adc
dec
adc
inc
adc
jl
sbb
xor
je
test
or
orb
and
out
mov
sub
mov
sbb
inc
lcall
add
and
mov
sub
inc
adc
fwait
mov
sbb
push
in
sub
das
inc
sub
les
sbb
xor
je
sbb
in
repz
lods
push
or
xor
inc
cmp
sbb
add
ds
adc
jo
sub
mov
xchg
jge
pop
xchg
mov
mov
push
push
or
fwait
pop
scas
ret
cmp
xchg
sub
xor
repnz
nop
mov
xor
pop
lcall
icebp
jecxz
or
cmp
lods
pop
push
fidivs
mov
adc
lahf
sbb
mov
mov
ret
mov
push
adc
std
sbb
xor
nop
pop
cltd
dec
xchg
cmp
adc
xchg
xchg
adc
jns
dec
adc
cmp
in
sbb
push
add
inc
lods
sub
dec
lods
aam
lods
jno
push
fs
lcall
cmpsb
xchg
adc
shlb
mov
rcll
and
cmp
and
maxps
out
cmp
enter
movsb
or
js
push
mov
add
push
test
sub
pushf
icebp
rclb
cmp
jno
incl
out
addr16
gs
xchg
push
adc
ret
movsb
jge
xchg
fnstcw
push
nop
test
fldcw
imul
fnstsw
test
sub
jae
sbb
adc
mov
inc
and
test
mov
adc
daa
pop
enter
sbb
cmp
push
adc
pop
inc
sbb
enter
adc
dec
inc
adc
and
adc
mov
cld
jns
adc
jmp
lods
mov
cmp
xchg
out
enter
dec
and
adc
dec
sbb
pusha
jp
lcall
sub
sub
dec
test
and
lahf
dec
mov
mov
fcoms
mov
xlat
mov
jmp
mov
push
pop
enter
mov
in
orl
jge
fmuls
mov
mov
orl
adc
or
lds
das
scas
cmpsb
loopne
daa
into
dec
or
dec
sub
idivb
push
jnp
push
push
push
inc
cmpsb
or
xchg
push
ja
jl
inc
es
scas
lret
call
jno
or
mov
out
je,pn
cld
fistl
cld
cld
mov
leave
rcrl
sub
dec
scas
sub
add
or
test
gs
clc
jl
imulb
sub
cmp
dec
gs
jb
cmp
inc
sub
cmp
push
and
fadds
test
jne
mov
fs
xchg
insb
or
push
nop
sti
mov
pop
rcrl
je
fmul
scas
cmp
inc
js
rcll
mov
pop
call
popa
jnp
rorl
push
add
push
fdivrl
pop
insl
fcoml
add
jl
iret
sbb
out
adc
imull
inc
or
dec
push
adc
pop
xchg
and
push
pop
pushf
adc
and
or
add
imul
xor
hlt
xchg
push
arpl
pop
scas
jb
dec
nop
mov
movsb
hlt
and
shlb
mov
stos
pop
and
add
and
clc
add
test
stos
lret
out
pop
lods
fadd
xchg
inc
pop
cmp
sarb
dec
xlat
sti
and
push
mov
push
inc
nop
pop
stc
adc
add
lret
andl
push
cwtl
loop
inc
decl
push
cmp
and
addl
loop
and
xchg
test
pop
inc
cltd
xchg
jg
jmp
push
mov
nop
testl
das
mov
lods
sbb
js
leave
mov
pop
inc
in
out
bswap
je
ret
addl
xor
add
inc
push
add
lds
fidivs
mov
adc
cmpsl
sub
adc
push
enter
or
sbb
call
stos
rol
ljmp
dec
lods
aam
xor
clc
adc
push
push
es
jno
or
cmp
xchg
jmp
xchg
pop
filds
daa
lret
adc
lods
stos
dec
mov
sub
and
adc
xchg
push
cmpl
and
sahf
das
test
inc
mov
push
ret
aad
jg
aaa
fs
push
imul
xor
aam
push
push
es
push
cltd
xchg
inc
sbb
and
movsl
inc
sub
loopne
jbe
repnz
adc
cmpsl
aas
adc
mov
push
cmp
sub
and
daa
adc
arpl
adc
fcomi
sahf
add
sbb
or
sbb
lret
sbb
xchg
pop
cmp
and
cvtdq2ps
lcall
push
daa
push
adc
adc
fwait
sub
test
daa
add
test
mov
xor
fistps
imul
cmp
jb
lahf
and
cmp
jae
cmpsl
and
out
loop
xlat
mov
ljmp
int
dec
or
test
aam
adc
adc
push
cmp
push
push
mov
dec
scas
leave
pushf
cmp
pop
fistpll
jo
adc
fmuls
adc
and
dec
add
enter
movsb
pop
out
cld
push
mov
inc
xchg
jle
jbe
and
and
jbe
pop
lods
data16
dec
inc
xlat
xchg
push
xor
xor
lret
test
inc
idivb
in
sub
repz
lods
fnstsw
lahf
cli
mov
add
adc
cmc
sub
in
adc
je
add
pop
inc
ret
jo
lret
out
mov
adc
pusha
pushl
push
popa
dec
jne
jg
in
fstl
sub
ffreep
push
insb
jne
ds
mov
dec
stos
cmp
mov
test
xchg
aam
mov
in
loopne
fsubl
push
fmuls
sti
sub
dec
sbb
int3
jmp
fldt
add
cmp
or
sub
je
adc
xor
and
push
pop
insb
mov
mov
lahf
push
mov
lret
cmp
jae
mov
and
or
adc
orl
sbb
sbb
imul
dec
or
xchg
shrl
inc
js
je
inc
test
iret
xchg
or
lds
push
cmpsb
jns
insb
pusha
lahf
or
sarl
dec
sbb
mov
push
cmc
aam
jb
sbb
cmp
movb
dec
xchg
mov
add
dec
pop
inc
insl
jmp
and
push
dec
mov
add
call
mov
fcomip
dec
pop
xchg
pushf
mov
std
and
mov
mov
inc
jl
push
mov
repnz
xor
push
adc
add
mov
sub
je
cmp
push
loopne
and
cmp
pop
xor
cs
sub
or
pop
or
das
push
sub
or
dec
lds
mov
jge
dec
push
loopne
push
pushf
sar
nop
scas
pop
inc
fcompl
push
xchg
or
fmuls
enter
sbb
push
add
cmpsb
sbb
js
std
ret
fldl
iret
pop
jne
pop
movsb
lcall
adc
jge
sbb
push
or
jl
es
ja
js
or
and
sahf
popa
fs
cmp
and
dec
jecxz
jnp
repnz
push
loopne
sub
mov
and
in
or
push
in
or
add
js
lea
or
pop
adc
ret
sbb
or
iret
adc
scas
cmp
or
test
and
jmp
xchg
jp
xchg
aaa
movsl
out
mov
and
loope
stos
mov
adc
xor
cmc
or
push
das
add
inc
fs
inc
outsl
incl
inc
insl
ja
push
inc
jb
inc
jne
nop
adc
insb
lahf
and
or
test
jae
mov
loop
ljmp
mov
mov
xchg
push
mov
and
sti
jbe
std
mov
adc
adc
nop
loopne
jmp
fimuls
ret
lret
js
repnz
sub
addb
or
adc
mov
xchg
dec
ja
loopne
ds
jmp
test
jne
mulb
jae
out
jne
or
lret
sbb
test
mov
xchg
adc
andb
sub
mov
dec
adc
push
repnz
daa
and
dec
dec
lods
cmpsl
sub
in
mov
push
adc
mov
sub
sbb
mov
mov
sbb
pusha
dec
pop
and
jns
xchg
mov
nop
push
adc
xchg
das
jg
xchg
jo
cs
outsb
adc
or
aaa
jge
testl
sub
pop
add
dec
roll
dec
adc
daa
sbb
xor
jne
dec
or
dec
negb
push
lock
xor
mov
or
cmp
sbb
inc
movsb
ret
cmp
mov
cld
and
adc
sbb
ljmp
iret
inc
mov
iret
and
dec
or
mov
or
clc
adc
addr16
hlt
or
lret
mov
jno
xor
pop
mov
or
aad
sub
lahf
pop
popa
js
adc
stos
lcall
jo
loope
push
adc
xor
mov
sub
lahf
pop
mov
lds
sbb
dec
aam
test
jno
shl
jmp
cwtl
add
outsl
data16
xchg
sub
xchg
and
scas
repz
rcll
pop
and
adc
insb
push
dec
rol
inc
ficomps
in
out
jo
insb
gs
jae
arpl
and
sbb
jle
mov
ja
aaa
daa
lock
jo
dec
push
fldenv
xor
lea
cs
sub
pop
or
popa
push
mov
xor
or
add
sbb
jnp
or
imul
xor
and
fnstcw
sub
adc
das
bound
adc
in
dec
mov
popa
loopne
or
cmp
add
mov
dec
bound
adc
test
add
shlb
mov
sbb
add
in
and
xchg
xor
cld
adc
adc
shlb
nop
loopne
adc
or
fdivs
test
sub
and
and
push
push
mov
push
ret
adc
xchg
orl
rorl
adc
mov
add
dec
jl
nop
xchg
and
add
insb
inc
cmp
insb
mov
les
fs
and
add
in
dec
or
push
sbb
sub
or
adcb
adc
cld
sub
pop
shlb
pop
shlb
and
inc
and
pushf
mov
aaa
sub
xorb
ficomps
jo
or
loopne
or
rcr
or
dec
pusha
cltd
jo
inc
xchg
in
inc
add
inc
xor
and
mov
rorb
pushf
dec
mov
sbb
or
mov
dec
cltd
sbb
or
loopne
cwtl
sti
push
push
or
call
add
mov
or
sub
mov
shrb
or
cwtl
push
int3
dec
push
add
or
add
xor
in
into
or
pop
adc
pop
and
push
aad
aam
or
int3
inc
dec
pushf
mov
jno
cmp
jo
sbb
mov
push
mov
dec
dec
or
or
fidivs
sbb
adc
or
sbb
sbb
sbb
imul
add
sub
add
adc
mov
nop
pusha
pop
cmp
cld
test
or
sub
adc
cwtl
dec
push
and
mov
inc
dec
adc
js
xchg
inc
sbb
push
fcoml
or
xor
lods
or
jl
or
push
inc
pop
fadds
nop
mov
xor
mov
or
mov
test
xorb
mov
or
add
mov
xor
test
out
xchg
and
jmp
rolb
sub
adc
push
inc
or
mov
adc
sbb
test
adc
sbb
adc
fadd
hlt
adc
pop
xor
sbb
mov
bound
pop
push
jecxz
sub
pop
and
xor
mov
adc
cld
xor
adc
xchg
in
add
add
and
sub
add
lret
int3
enter
ror
into
add
fcomp
fxch
fimuls
fnstsw
loope
push
add
popa
xchg
or
mov
mov
push
add
je
xor
xorb
xor
cmp
inc
inc
and
sub
add
pusha
mov
xchg
les
jecxz
rcrl
cmp
jne
or
cld
sub
je
movsb
mov
mov
push
or
jns
mov
pop
and
mov
adc
mov
imul
fidivs
xchg
or
or
dec
pusha
cmp
add
push
or
andb
nop
xchg
cwtl
and
mov
dec
rclb
call
adc
or
jne
or
adc
mov
adc
and
pop
mov
pop
adc
push
and
add
cmpsb
or
and
in
jo
js
xchg
xor
adc
in
jno
jnp
cld
mov
mov
or
cmp
jle
icebp
jl
and
cwtl
and
jg
in
or
rcrl
and
add
stos
push
inc
rorl
add
push
xchg
bound
add
icebp
and
xchg
cmpsb
sbb
adc
enter
adc
push
or
loope
push
mov
inc
xor
dec
xor
icebp
add
dec
mov
dec
dec
and
add
jl
xchg
inc
push
mov
adc
mov
sbb
js
loopne
mov
or
or
shlb
enter
rol
adc
sbb
jns
lods
pop
cmp
sub
mov
lock
xchg
js
inc
sbb
lock
test
jmp
mov
and
sahf
test
leave
adc
cmp
cmp
sub
loopne
inc
ja
and
ljmp
nop
mov
mov
adc
call
adc
sbb
popf
mov
adc
and
dec
shl
dec
pop
mov
xor
inc
sbb
adc
mov
in
add
sbbl
and
dec
push
xchg
lods
dec
pusha
mov
adc
and
out
add
daa
sub
les
xchg
or
xchg
and
out
adc
cmp
inc
and
movsb
mov
mov
mov
sub
js
das
xchg
test
fcoms
mov
adc
mov
pushf
mov
repnz
pop
and
dec
test
test
cmp
cmp
push
adc
mov
adc
cmp
hlt
addl
and
dec
aam
or
add
dec
dec
adc
rolb
adc
negb
adc
jo
and
testl
dec
jl
lods
dec
push
xchg
in
adc
or
dec
and
js
pop
inc
mov
loopne
pop
sbb
xor
adc
pusha
xor
andb
test
int3
dec
popa
xchg
hlt
les
or
dec
and
jo
gs
cwtl
ss
mov
and
and
adc
cmp
bound
cltd
adc
call
sub
sbb
sbb
adc
and
ja
std
or
sahf
sub
adc
xor
and
or
inc
xor
icebp
sbb
adc
add
xor
adc
sub
jo
cmp
pushf
and
inc
ds
adc
addb
sbb
cmp
xor
and
and
inc
and
arpl
adc
cwtl
adc
rolb
inc
add
inc
adc
xorb
test
dec
dec
aam
cld
dec
dec
mov
pop
adc
cmpsb
adc
mov
sbb
inc
add
mov
loop
pusha
adc
cwtl
jb
and
dec
clc
loop
add
adc
mov
mov
mov
pusha
dec
push
adc
bound
fs
mov
pop
adc
push
adc
add
jo
add
xchg
add
xchg
out
adc
xchg
push
and
out
in
and
dec
cld
xchg
or
sbb
or
push
dec
or
push
push
mov
adc
int3
adc
clc
dec
adc
and
inc
adc
inc
and
dec
push
xchg
sbb
fs
sbb
sbb
mov
dec
pushf
xchg
sbb
mov
and
dec
fcoml
and
or
and
dec
and
sub
and
push
adc
and
dec
sub
mov
mov
sub
inc
fdivl
mov
adc
cs
sbb
mov
adc
dec
push
xchg
inc
and
adc
xchg
inc
and
inc
adc
and
dec
fcoml
dec
cld
mov
or
or
and
push
inc
inc
push
mov
and
dec
pop
xchg
je
gs
test
inc
or
pop
and
inc
or
mov
adc
and
inc
push
adc
test
xchg
movsb
and
inc
mov
sub
hlt
dec
mov
push
adc
xor
add
dec
add
jo
pop
and
dec
or
rcr
and
pop
std
sbb
add
nop
jno
cmp
inc
xchg
adc
and
inc
push
or
mov
xchg
lods
adc
adc
enter
or
pop
or
lea
adc
adc
and
inc
dec
or
adc
sbb
andb
pushf
xchg
or
mov
add
in
adc
and
fs
adc
add
or
and
or
sbb
dec
or
xchg
mov
adc
insb
adc
adc
mov
sub
cmp
or
dec
or
and
adc
and
xor
fmull
xchg
cld
and
xor
xor
push
sub
inc
or
add
adc
and
inc
add
cwtl
xchg
or
mov
inc
and
adc
lock
adc
les
push
add
cmp
andl
mov
js
or
xchg
and
xor
mov
int3
and
hlt
adc
cs
mov
jno
mov
adc
nop
adc
add
adc
add
adc
adc
add
xor
pop
xor
insb
dec
outsb
xor
lods
and
pop
mov
adc
jg
gs
xor
or
pusha
inc
or
push
nop
or
clc
adc
popa
adc
pop
arpl
or
push
pusha
mov
and
dec
nop
xchg
pushf
and
int3
adc
and
dec
lock
cld
adc
sbb
adc
and
cmp
inc
and
dec
pop
xchg
push
mov
mov
mov
inc
loopne
mov
adc
add
and
dec
sub
dec
pop
mov
and
dec
mov
lods
mov
and
inc
call
fcoml
push
sbb
or
adc
xor
xchg
dec
and
insb
mov
test
dec
pushf
xchg
test
mov
ror
fcoms
in
lock
cld
mov
sbb
adc
and
mov
and
dec
push
inc
mov
and
dec
enter
loopne
in
clc
mov
xchg
sub
xor
inc
dec
mov
fs
push
xchg
pop
or
jge
andl
ds
add
bound
outsb
xor
mov
or
inc
xor
js
sbb
push
jae
outsb
fs
ret
inc
inc
leave
add
loop
adc
push
enter
add
and
stc
xor
out
and
dec
xor
xor
add
xchg
xor
loop
adc
push
enter
add
and
and
std
adc
ss
loop
adc
push
enter
push
or
pop
stc
aaa
pop
out
and
dec
xor
aaa
std
adc
cmpsl
clc
jle
cmp
popf
mov
std
cmp
or
cmp
mov
push
int3
cmp
cmp
inc
or
or
xor
or
bound
xor
fiadds
mov
aam
pop
jmp
or
stc
aas
fiadds
mov
inc
xor
enter
and
std
in
sub
lods
or
xor
fiadds
mov
aam
xor
enter
and
lea
lods
jne
aas
fiadds
mov
aam
ss
enter
and
std
in
sub
xchg
lods
rcrl
gs
outsb
std
pop
jmp
mov
inc
leave
cmp
inc
sbb
dec
dec
lods
pop
push
inc
xchg
sbb
add
shlb
jle
stc
lret
ja
js
jne
push
mov
push
dec
popf
inc
mov
adc
jne
mov
inc
sbb
fwait
cmp
pop
out
and
adc
cld
xor
adc
inc
xor
mov
les
and
incl
adc
loop
xor
roll
push
lea
mov
repnz
and
pop
ss
out
and
adc
cld
ss
std
adc
mov
inc
aaa
sti
mov
les
aas
and
incl
sbb
mov
sbb
and
decl
mov
inc
cmp
mov
les
aas
and
incl
sbb
adc
les
xor
or
xor
aas
fiadds
and
mov
or
jns
sbb
lods
or
inc
sbb
inc
or
push
jno
pop
jmp
or
notl
inc
xor
enter
push
xor
in
bound
aaa
adc
and
mov
and
adc
fiadds
and
nop
adc
jo
xor
jne
mov
xchg
sbb
push
push
dec
push
jo
mov
and
dec
aam
dec
aas
sbb
inc
inc
xor
or
and
jbe
aaa
das
cli
xchg
cmp
cmp
test
dec
dec
sub
mov
xor
dec
sbb
lock
dec
inc
scas
adc
jo
push
arpl
push
imul
lods
jle
es
std
jp
push
inc
dec
in
mov
mov
jo
xchg
sbb
outsl
inc
xlat
and
pop
inc
sbb
cmpsl
add
ja
pop
push
lcall
add
jecxz
addl
scas
test
je
stos
cld
hlt
leave
add
or
adc
inc
and
inc
and
inc
adc
dec
js
mov
cwtl
inc
lods
mov
and
dec
cld
mov
bound
sbb
sub
cmp
mov
add
adc
enter
or
push
mov
or
ljmp
inc
icebp
dec
adc
add
add
jmp
or
sub
push
inc
push
xor
inc
or
add
jbe
lahf
pop
and
adc
and
add
and
or
or
xchg
testl
in
jae
xchg
roll
pusha
add
xor
and
and
or
pushf
inc
inc
nop
sub
inc
add
mov
ss
add
bound
jae
cwtl
xchg
sub
fnstcw
push
add
inc
outsl
add
mov
in
mov
ficompl
cmc
add
test
adc
ret
mov
and
cmpb
lcall
int3
add
mov
sbb
add
xlat
pop
xchg
add
lods
push
stos
dec
mov
movsb
jge
jbe
imul
pushf
je
icebp
inc
popf
jo
pop
fs
and
out
test
sbb
add
sbb
popa
add
inc
jle
push
inc
mov
scas
cmp
pop
stc
add
mov
push
or
test
rcr
int
hlt
inc
orl
enter
cli
and
jnp
or
xchg
add
pop
aad
cmp
sbb
push
data16
in
ja
clc
jmp
jne
or
inc
push
mov
add
pop
sbb
cltd
lea
lahf
adc
jnp
imul
xor
addr16
xlat
stos
add
or
cli
pop
inc
add
lods
aam
scas
pushf
movsb
jb
shlb
testl
icebp
jno
xor
adc
sbb
adc
add
subl
outsb
pop
add
sub
das
sbb
push
roll
in
and
mov
push
lret
mov
iret
rolb
out
stos
sti
inc
dec
xor
jg
cmp
test
add
cmp
mov
adc
repz
add
in
pop
xchg
inc
pop
les
cmpsl
jle
fs
sbb
add
nop
mov
out
mov
fneni(8087
add
cmp
dec
push
and
ret
lods
bound
add
aaa
insl
aad
test
ljmp
js
cs
mov
call
dec
mov
ds
dec
add
push
popa
add
sbb
cwtl
adc
mov
pop
xor
mov
mov
inc
push
cmpxchg
pop
add
or
sbb
sbbb
sbb
push
ss
cmp
aas
and
add
push
push
pop
insb
pop
jb
bound
inc
call
push
in
jle
cld
pop
ja
dec
imul
cltd
adc
mov
repnz
lods
add
mov
pushf
mov
mov
mov
scas
repz
movsl
inc
shl
mov
mov
cmc
test
hlt
les
add
sarb
fstpt
mov
mov
sub
lods
data16
push
in
push
add
inc
icebp
add
cwtl
dec
stos
jae
and
mov
leave
xor
ds
push
out
popf
pop
add
add
inc
std
sbb
cmp
add
daa
mov
add
pop
out
xchg
push
in
pop
popf
inc
icebp
adc
add
jle
add
test
adc
jae
add
mov
outsl
aad
sub
mov
mulb
fs
ja
mov
push
pop
fiaddl
fwait
pop
push
rorl
xchg
fnstsw
add
or
add
and
xor
mov
or
xchg
add
add
lahf
dec
out
inc
sbb
push
hlt
cmpsl
push
pop
std
add
push
lret
dec
test
fstps
cmp
cmpsl
fcoms
or
mov
pusha
jne
add
xor
sub
sbb
xchg
imulb
jbe
add
lea
fildl
fwait
fs
rcll
inc
pusha
xorb
pop
jb
adc
mov
ficomps
pop
add
and
mov
xor
xchg
and
add
in
fldl
push
cmp
mov
add
test
adc
scas
stc
jne
add
jmp
pop
add
outsb
gs
and
js
xchg
hlt
mov
fidivs
adc
ret
in
dec
add
dec
in
add
pop
inc
loope
ror
ljmp
shl
gs
subb
xor
mov
mov
or
addb
adc
sbb
jl
inc
scas
jne
dec
mov
mov
sbb
imul
and
jge
inc
sub
xor
add
fistpll
js
or
das
jne
jmp
sub
pop
add
or
lcall
insb
xchg
mov
jbe
mov
lods
cli
pop
stos
mov
mov
xorl
lahf
or
in
add
testb
push
leave
sarb
xor
into
add
sub
jp
inc
mov
je
mov
stos
subb
and
test
adc
sbb
lahf
add
push
js
or
fs
aam
push
sbb
adc
jns
sub
dec
cmp
and
inc
cs
pop
and
xor
push
in
lcall
or
mov
mov
sub
es
movb
xchg
xor
fildl
push
add
dec
mov
enter
testb
stos
jmp
jle
add
icebp
arpl
add
addr16
add
adc
sbb
push
adc
xor
cs
popf
cmp
pop
xchg
sub
cmp
mov
xor
inc
psubsw
or
pusha
add
ljmp
sbb
inc
add
lds
ss
pop
add
push
jge
fdivs
add
add
add
sbb
pop
test
push
orb
inc
mov
jmp
imul
xor
bnd
aas
jg
push
push
jno
pop
add
insl
inc
add
xlat
xor
lret
rorl
ror
daa
lds
outsl
loopne
adc
daa
in
repz
repnz
add
sti
cmpsl
jns
xchg
test
mov
add
lahf
pop
cmpb
orl
popa
inc
xchg
mov
add
sub
mov
adc
and
dec
push
xchg
dec
and
je
das
jno
imul
and
dec
xchg
mov
call
sahf
sarl
mov
adc
and
dec
rclb
jo
mov
push
and
dec
inc
xchg
dec
and
inc
sub
and
dec
sbb
rcr
adc
and
dec
icebp
xchg
cli
and
mov
mov
xchg
mov
loopne
jmp
fisubl
dec
int3
xchg
and
mov
andb
xchg
xchg
lahf
and
adc
pop
dec
push
popa
and
push
mov
dec
xor
adc
xchg
nop
and
mov
dec
ret
xchg
enter
repnz
mov
adc
xchg
and
sbb
pop
and
dec
gs
jge
js
dec
inc
mov
push
and
dec
cld
xchg
loope
ljmp
xchg
scas
jb
mov
and
inc
adc
dec
pop
xchg
imul
inc
jge
mov
adc
or
xorl
pop
push
inc
xchg
and
dec
mov
inc
mov
mov
adc
jno,pn
repz
out
in
cmp
aaa
das
xor
and
mov
adc
xchg
jb
jns
dec
inc
mov
push
and
dec
or
sub
xor
dec
push
xchg
dec
and
jle
arpl
push
xchg
cmpsl
and
adc
sbb
jb
dec
add
and
inc
rcll
fsubs
dec
jno
insb
and
push
pop
mov
dec
cs
stos
mov
push
mov
dec
lret
jne
fmull
mov
lock
inc
xchg
cltd
mov
loop
test
adc
or
xor
cmp
dec
and
jb
mov
cs
and
rcr
mov
adc
and
inc
jmp
or
mov
rolb
mov
adcl
mov
inc
lods
xchg
and
dec
rcll
out
ljmp
xchg
data16
jl
mov
inc
and
pop
mov
adc
aaa
and
dec
sub
inc
pusha
ja
jp
pop
and
dec
inc
xchg
dec
and
adc
xor
dec
sub
mov
mov
dec
xchg
xchg
sahf
and
inc
fmul
mov
adc
and
dec
sti
xchg
mulb
inc
fcmovne
mov
adc
and
dec
clc
xchg
cmc
and
test
dec
nop
xchg
popf
and
inc
or
adc
xor
dec
sub
arpl
inc
lock
pop
adc
inc
dec
dec
xchg
fisubl
xlat
inc
ror
out
adc
and
dec
stc
xchg
mov
mov
xchg
mov
dec
xchg
xchg
or
adc
sbb
xchg
and
sub
mov
jne
push
push
adc
and
popa
mov
and
dec
push
xchg
pop
and
inc
dec
inc
push
add
adc
push
and
dec
xor
mov
mov
dec
mov
mov
adc
and
dec
loopne
mull
cli
inc
mov
mov
dec
mov
ffreep
and
dec
enter
out
icebp
cld
mov
push
jge
jo
push
and
dec
inc
mov
jmp
and
adc
and
dec
or
add
push
inc
sbb
mov
dec
mov
jae
push
pop
mov
inc
and
dec
rcll
pop
add
in
loope
repnz
and
dec
mov
inc
orb
adc
or
mov
sub
inc
dec
inc
mov
push
jle
ja
nop
and
mov
mov
mov
scas
testb
dec
das
xor
ret
inc
cld
fisubl
dec
out
cmp
xor
mov
adc
and
dec
add
jae
jp
popa
push
and
dec
dec
xchg
stos
and
adc
xchg
jecxz
ljmp
into
xchg
aad
faddl
mov
xchg
push
and
inc
dec
mov
adc
and
dec
and
inc
or
mov
adc
and
dec
std
xchg
ret
inc
rcr
mov
dec
mov
mov
addl
dec
adc
dec
push
xchg
imul
mov
dec
push
xchg
and
sub
mov
adc
and
dec
xchg
stc
and
inc
jmp
mov
hlt
add
dec
mov
mov
in
mov
adc
das
push
and
inc
rcr
rcll
movsb
and
dec
mov
les
and
dec
jl
jne
outsb
inc
addr16
mov
dec
dec
xchg
inc
and
cmp
adc
xor
sqrtps
or
mov
adc
and
dec
cli
xchg
loope
call
ljmp
dec
rclb
sarb
adc
push
and
push
or
sbb
xchg
cmp
cs
and
mov
adc
and
dec
aam
fisubl
enter
mov
dec
movsb
xchg
stos
and
add
adc
dec
xor
cmp
sub
inc
int3
jb
pusha
adc
inc
dec
dec
xchg
pop
and
aaa
cmp
cmovs
xchg
adc
sbb
and
dec
pop
xchg
push
and
jno
mov
xlat
and
dec
lret
nop
lds
pop
jno
loope
repz
mov
dec
mov
lahf
and
mov
or
mov
adc
orb
and
stos
mov
lcall
and
xchg
mov
dec
mov
jge
cli
inc
out
lds
mov
jnp
repnz
imul
adc
sub
or
jb
jbe
lret
xchg
leave
pusha
mov
and
dec
lock
lods
or
xchg
scas
and
adc
xchg
es
aas
xchg
mull
int3
inc
xor
mov
adc
and
pushf
add
mov
insb
pop
inc
ret
sbb
or
pop
and
pushf
inc
loop
jmp
daa
and
dec
jne
or
addl
push
inc
mov
dec
inc
inc
sub
xchg
je
test
push
dec
rcr
dec
in
xchg
mov
cld
and
lret
xchg
mov
dec
mov
iret
and
pushf
nop
stos
mov
adc
fadds
mov
stc
outsb
sbb
jg
mov
lahf
and
dec
push
xchg
mov
xchg
dec
popf
xchg
cmp
cmc
adc
mov
ficoml
and
dec
rclb
adc
mov
cmp
inc
inc
pop
les
cmp
and
inc
jae
mov
stos
bound
sub
nop
or
mov
adc
mov
and
dec
xor
dec
or
hlt
lock
or
mov
xchg
in
jns
out
enter
insl
and
test
inc
hlt
ljmp
pushf
push
and
xchg
cmpsb
sub
dec
loopne
cmp
or
mov
adc
mov
and
ds
data16
add
sti
call
push
and
dec
xchg
sahf
loope
clc
adc
xchg
fldenv
mov
mov
adc
mov
dec
push
xchg
sub
filds
mov
dec
out
inc
and
inc
cltd
mov
and
push
inc
mov
jne
cmp
leave
mov
xlat
mov
lea
lret
std
js
xchg
test
lret
xchg
pop
ret
arpl
test
out
ja
cltd
idivb
push
mov
cmp
outsl
mov
pusha
xor
add
into
mov
and
decb
bound
dec
stos
mov
in
jbe
lcall
loop
cmp
jge
xchg
pop
and
mov
leave
cmp
lock
inc
lods
and
mov
mov
mov
scas
mov
and
mul
jb
xchg
cmp
mov
ret
mov
dec
mov
and
aas
mov
mul
add
or
dec
push
movsl
mov
shl
jecxz
stc
icebp
loop
cmp
jno
xchg
stos
fsubs
jae
xor
aas
cmp
add
or
and
and
pop
cmp
sbb
mov
das
lcall
or
and
sbb
loop
cmp
jmp
es
daa
and
mov
mov
jne
lahf
adc
loop
cmp
sub
je
sbb
sub
mov
adc
pop
mov
push
sbb
jbe
inc
dec
mov
adc
mov
into
stc
sub
jnp
jno
sbb
pop
das
inc
jno
test
xchg
cmpsb
push
cmc
mov
and
sbb
inc
sub
and
pusha
jecxz
les
jns
mov
enter
in
aam
adc
addr16
fnstenv
cmp
xchg
dec
inc
ficomps
pop
call
pushf
mov
out
adc
dec
stos
in
jno
sbb
xchg
pushf
lcall
push
adc
inc
add
jmp
add
jg
andl
and
test
jecxz
push
loop
cmp
mov
addb
add
xchg
loop
cmp
popf
mov
cmc
mov
jmp
fbstp
loop
cmp
and
into
and
and
in
mov
std
repz
cmp
int
dec
sbb
adc
adc
xor
das
mov
xchg
and
cs
loop
cmp
cmpsl
and
cld
jle
cmpb
inc
cmp
mov
sbb
xchg
cmp
pusha
mov
cwtl
sahf
dec
and
mov
and
data16
jle
nop
and
mov
lret
out
mov
imul
cmp
fsubp
jns
mov
or
sbb
xchg
loopne
cmp
push
cmp
dec
adc
and
xchg
dec
mov
or
jecxz
dec
and
insb
cmp
ret
mov
lods
loop
cmp
bound
test
xchg
mov
bnd
mov
out
cmp
mov
and
mov
loop
cmp
and
fsubrs
lods
push
loop
cmp
hlt
mov
iret
ljmp
sarl
ret
lahf
scas
mov
daa
popf
push
adc
outsl
mov
and
pop
mov
sbb
and
push
cmpsb
mov
jae
and
xchg
mov
call
jl
mov
loop
cmp
mov
and
loopne
loop
cmp
inc
jno
and
int3
mov
push
add
add
add
and
ret
mov
cmp
mov
mov
cmp
sbb
mov
jmp
mov
sub
adc
mov
pop
mov
mov
xchg
loop
cmp
push
and
adc
jmp
into
mov
push
and
push
sub
jp
add
clc
or
loop
cmp
mov
xlat
out
xor
loop
cmp
cltd
and
push
psrad
jp
loop
cmp
mov
mov
movsl
je
test
or
and
add
sbb
xchg
out
lcall
xchg
or
std
dec
ljmp
pop
mov
adc
scas
dec
push
pop
and
add
pop
adc
cs
or
mov
aas
and
dec
push
xchg
and
sub
and
dec
ss
fwait
and
mov
and
sub
dec
sti
xchg
mulb
dec
inc
popa
into
mov
ds
dec
xchg
xchg
cmc
and
adc
pusha
dec
pop
xchg
enter
adc
xchg
fisubs
aam
call
test
adc
dec
sub
adc
and
dec
xchg
xchg
iret
pop
adc
mov
and
inc
inc
mov
and
dec
rclb
dec
mov
fbld
dec
jne
les
mov
adc
and
dec
dec
xchg
adc
xor
mov
dec
push
xchg
repnz
out
sub
and
inc
jg
mov
stos
and
dec
lret
and
inc
cmp
mov
adc
xchg
push
and
push
cs
insb
inc
in
mov
out
and
dec
test
movsb
and
inc
mov
mov
pop
and
dec
mov
loopne
mov
adc
and
dec
scas
xchg
mov
jmp
adc
loop
mov
and
icebp
mov
and
es
lods
add
int3
dec
fcoml
nop
inc
mov
adc
xchg
add
adc
mov
adc
and
dec
pop
xchg
daa
jge
cmp
adc
dec
xor
mov
and
dec
and
mov
xchg
jmp
js
jp
mov
adc
xchg
xor
movb
mov
ja
adc
xchg
cld
and
inc
cmp
jl
ja
jnp
repnz
imul
inc
lds
mov
adc
sub
xchg
xlat
and
adcb
and
pop
mov
lock
xchg
scas
and
adc
xchg
and
inc
aas
testl
icebp
and
fdivs
mov
dec
and
xchg
add
and
dec
adcb
mov
jne
or
dec
sub
sbb
outsb
adc
mov
and
inc
mov
mov
adc
and
dec
push
xchg
shll
in
adc
and
dec
mov
pop
and
lret
fisubs
dec
dec
xchg
dec
add
inc
hlt
fldenv
dec
out
xchg
stos
and
inc
inc
dec
mov
adc
push
mov
inc
push
cmp
lahf
adc
xchg
inc
and
cmp
cmc
das
jno
mov
fisubl
mov
adc
and
dec
rclb
adc
mov
xchg
and
dec
pop
xchg
les
cmpsl
inc
jle
mov
and
dec
jae
pusha
and
and
sub
dec
mov
mov
pop
and
dec
fistl
cmp
mov
push
and
dec
pop
xchg
ret
inc
lods
bound
in
jns
out
enter
and
dec
aad
dec
and
hlt
adc
and
dec
jp
scas
jmp
mov
xchg
and
cmpsb
mov
adc
pop
push
mov
mov
mov
jo
adc
xchg
add
testb
xor
dec
xchg
sahf
loope
clc
adc
xchg
fldenv
mov
mov
adc
hlt
cmp
dec
repz
push
sub
mov
and
push
dec
sub
push
adc
xchg
jl
ja
jnp
mov
outsl
and
dec
xor
sub
mov
adc
xchg
andb
inc
jge
and
dec
inc
xchg
lock
scas
adc
shlb
inc
std
xchg
mov
adc
and
dec
notl
movsl
in
icebp
adc
fmuls
xchg
adc
and
xchg
dec
add
inc
adc
and
dec
mov
jne
or
mov
pop
call
inc
mov
and
dec
sub
test
rcll
and
pop
dec
push
lret
jbe
cmp
dec
and
dec
pop
add
outsl
fimull
rclb
sti
inc
mov
xor
adc
mov
cmp
lahf
adc
xchg
inc
and
cmp
cmc
das
push
and
adc
jmp
dec
rclb
adc
mov
xchg
and
dec
pop
xchg
les
cmpsl
inc
jle
mov
and
dec
jae
pusha
and
and
sub
dec
mov
mov
pop
and
dec
fistl
cmp
mov
push
and
dec
pop
xchg
ret
inc
lods
bound
in
jns
out
enter
and
dec
aad
dec
and
hlt
adc
and
dec
jp
scas
or
adc
mov
mov
cmpsb
and
dec
lahf
call
dec
je
data16
and
jo
ds
dec
xchg
dec
and
inc
testb
popa
adc
xchg
xchg
roll
loope
clc
and
dec
adc
mov
xchg
mov
ror
mov
sub
dec
mov
or
inc
and
dec
inc
xchg
cltd
and
push
dec
mov
xor
pop
stos
push
fsubrs
imul
mov
movsl
pushf
imul
sub
mov
aas
aad
stos
push
push
std
enter
push
xor
pop
mov
imul
call
lods
mov
aad
scas
jne
stos
push
fsubrs
dec
mov
enter
pop
adc
cmp
stos
jo
add
jp
mov
and
sub
in
lods
pop
int3
mov
clc
xlat
stos
and
pop
and
lret
sub
pop
test
lods
xlat
test
loop
rcrb
imul
fcomps
inc
imul
sub
cmc
loopne
xchg
mov
push
pushf
test
imul
xor
stos
push
dec
mov
push
je
push
xor
sbb
fsubrs
insb
scas
push
or
imul
stos
push
aam
sbb
in
push
insb
scas
push
pusha
test
ja
sub
mov
adc
test
in
in
push
pushf
fwait
sub
mov
inc
push
mov
push
les
pop
mov
imul
mov
pop
in
outsb
xchg
sbb
push
sbb
clc
pop
movsl
mov
enter
mov
outsb
aad
mov
pop
in
imul
fs
mov
imul
scas
push
enter
cmc
cmp
cmp
push
sub
pop
cmc
lock
cmp
mov
imul
call
xchg
sbb
pop
cmc
or
aad
mov
pop
cmc
sbb
cld
scas
push
sarb
rolb
jmp
pop
jns
dec
sbb
sub
lods
rcr
mov
cmp
stos
cwtl
je
lods
ficoml
cld
pop
lock
rcrb
inc
cwtl
jbe
lods
jp
mov
int3
add
in
mov
enter
je
lods
fimull
push
xlat
stos
xor
sub
or
stos
aam
lock
jb
mov
pusha
xlat
sub
lods
jp
mov
or
mov
fldcw
or
pop
mov
jbe
lods
shrb
lret
stos
je
shrb
push
fildll
pusha
jbe
lods
repnz
dec
lods
xlat
stos
add
jmp
js
rol
mov
and
add
clc
in
test
in
outsl
xchg
and
push
dec
jmp
outsb
xchg
pushf
scas
inc
enter
cmp
js
cmc
jl
xchg
adc
push
shr
push
pop
in
loope
sbb
in
jmp
imul
mov
pop
mov
outsb
aad
mov
pop
in
outsl
xchg
nop
mov
pop
movsl
pusha
outsb
aad
scas
push
clc
stc
mov
aad
mov
pop
in
outsl
xchg
call
sbbb
imul
stos
push
fsubrs
imul
mov
movsl
pushf
imul
sub
mov
aas
aad
stos
push
push
std
enter
push
xor
pop
mov
imul
call
lods
mov
aad
scas
jne
stos
push
fsubrs
xchg
inc
and
js
mov
adc
xchg
mov
sbb
mov
loopne
test
xchg
xchg
and
sbb
and
dec
push
xchg
sub
pop
inc
add
and
dec
mov
inc
xchg
lock
dec
pop
xchg
mov
popf
inc
mov
cmp
dec
push
xchg
push
and
inc
cmp
mov
xor
outsl
inc
jmp
xchg
adc
add
push
adc
das
and
inc
fildl
jmp
lret
add
sbb
les
cmp
stos
mov
lods
ficoml
mov
dec
xlat
sub
sbb
ficompl
mov
jp
mov
and
sub
adc
fimull
push
xlat
sub
pop
mov
jp
mov
nop
xlat
stos
cmp
lods
rolb
stos
lock
and
cmp
stos
aam
lods
jb
mov
call
sbb
pusha
xlat
stos
or
lock
fidivrl
sbb
jp
mov
push
aad
clc
jbe
cmpsl
lock
aas
out
insb
faddl
and
inc
fsubr
mov
adc
and
dec
ss
iret
and
inc
movsb
mov
adc
xchg
ret
pusha
add
enter
outsb
xchg
in
push
dec
in
sbb
xor
add
call
add
add
and
pop
bound
hlt
arpl
mov
adc
inc
shlb
cmpsb
adc
xchg
mull
push
mov
cmp
les
repnz
clc
repnz
jmp
mov
push
and
jmp
mov
dec
mov
xor
pop
xchg
aas
and
mov
call
inc
ds
pop
adc
or
mov
ficomps
jo
je
inc
and
pop
adc
inc
dec
pop
xchg
add
insl
pop
sbb
lret
inc
mov
dec
push
xchg
shlb
inc
lock
mov
adc
pushf
push
mov
pop
movsb
je
mov
mov
ds
dec
dec
xchg
lods
and
adc
and
dec
ja
scas
and
std
adc
dec
rcll
adc
and
dec
jnp
or
xchg
adc
orb
mov
repnz
loop
mov
dec
push
xchg
push
and
inc
jmp
mov
adc
mov
dec
lea
adc
sub
mov
mov
and
loope
pop
adc
and
inc
psubsw
and
jb
jmp
dec
aad
cmp
flds
mov
adc
out
xchg
xchg
xchg
and
inc
and
sbb
mov
xchg
pop
and
test
dec
fstl
cmc
cmp
dec
cld
xchg
icebp
jnp
test
and
dec
and
cmp
das
mov
adc
jecxz
push
xchg
mov
pop
inc
jno
mov
nop
and
dec
rcll
sbb
and
dec
xchg
xchg
int3
and
adc
add
and
sub
dec
jge
arpl
xchg
push
mov
xor
xchg
dec
iret
sub
pushf
and
stos
cld
pop
or
xchg
mov
and
mov
fcoms
push
outsb
fnstsw
outsb
aad
mov
cs
xchg
mov
pop
inc
push
ljmp
dec
sbb
and
mov
cmp
daa
dec
leave
xchg
in
mov
fbstp
into
adc
and
dec
stos
xchg
outsl
and
inc
repz
ret
dec
and
inc
add
and
dec
mov
pop
and
hlt
inc
mov
adc
and
dec
popf
xchg
cli
and
inc
xor
int3
adc
and
dec
sub
mov
mov
adc
and
dec
dec
xchg
inc
and
inc
xchg
mov
cmp
aad
fcoms
push
dec
mov
enter
pop
adc
cmp
stos
jo
add
jp
mov
and
sub
in
lods
pop
int3
mov
clc
xlat
stos
and
pop
and
lret
sub
pop
test
lods
xlat
stos
test
pushl
jecxz
dec
mov
das
and
and
add
and
inc
dec
mov
adc
and
pop
loop
mov
or
dec
pop
xchg
mov
fisubs
and
pusha
sbb
adc
into
and
pop
out
jns
mov
clc
pop
and
mov
adc
dec
setno
push
and
dec
xchg
xchg
mov
sbb
mov
sbb
loop
rclb
repnz
dec
scas
xchg
out
and
inc
adc
mov
xchg
mov
mov
adc
test
shll
rolb
mov
dec
ja
sub
test
rclb
test
mov
xchg
cwtl
dec
cmpsb
xchg
movsl
and
inc
aas
sub
push
adc
push
dec
idivb
mov
dec
iret
xchg
enter
insb
xor
and
lcall
mov
mov
lahf
xchg
mov
movsb
inc
aas
movsl
mov
dec
nop
xchg
cmpsl
and
in
int
fnstsw
je
lods
shlb
mov
dec
inc
roll
adc
and
dec
sti
xchg
mov
xchg
rolb
mov
js
stos
jl
adc
fcmovbe
mov
push
fildll
fs
adc
pushf
dec
push
xchg
sbb
push
adc
fisttps
xchg
lret
inc
cmp
mov
adc
cmp
or
mov
aad
dec
inc
rclb
bound
push
xor
movsl
xchg
insb
inc
dec
mov
jnp
adc
jbe
les
or
fwait
das
cwtl
sbb
xchg
in
mov
xor
leave
and
in
add
lret
xchg
in
mov
imul
and
ret
mov
mov
mov
cli
das
cwtl
jmp
dec
cmpsb
add
fldln2
cmp
les
bound
pop
mov
mov
cwtl
mov
xchg
in
test
cmpsb
lods
and
push
jle
les
mov
gs
cwtl
push
xchg
xchg
insb
pop
dec
jo
cmc
and
in
jmp
jmp
add
lea
cwtl
mov
mov
shl
cs
int
xchg
insb
icebp
dec
or
sub
mov
mov
mov
cmp
jmp
and
add
mov
jne
pop
mov
inc
das
cwtl
lds
int3
leave
dec
ljmp
adc
test
popa
les
bound
pop
xor
lods
xchg
insb
icebp
dec
test
popf
add
mov
fistps
cmpsb
aad
sbb
adc
jbe
les
bound
bound
dec
stos
cmp
test
and
std
aad
jns
mov
lcall
mov
pop
xchg
in
adc
popf
dec
dec
dec
xor
mov
pop
pop
push
adc
test
xor
cmp
pusha
cmpsb
andl
dec
jl
les
jne
mov
cmp
cmc
dec
mov
push
cmc
adc
jl
enter
mov
cmp
jno
xchg
in
pop
dec
pop
out
daa
add
mov
mov
fmull
loope
bound
ja
jmp
or
int3
lods
loope
add
adc
inc
mov
mov
or
jmp
mov
push
add
pop
ret
adc
push
dec
dec
out
lods
dec
push
inc
dec
xor
add
add
ds
add
add
sub
push
out
mov
sbb
insl
rorb
xor
pop
outsl
sahf
add
mov
push
movsb
mov
add
xchg
xchg
sub
or
sub
sbb
jbe
add
and
repz
inc
mov
sbb
jmp
mov
hlt
movl
test
imul
std
in
leave
add
dec
pop
add
insb
cmp
arpl
or
and
pop
adc
add
inc
pusha
aad
jno
mov
cmp
aam
dec
std
test
or
movsl
cli
test
xor
inc
leave
mov
mov
xor
add
inc
iret
or
add
stos
lods
xor
es
std
ficoms
addb
enter
mov
and
les
mov
mov
add
mov
movb
jmp
outsl
das
add
dec
push
roll
sub
fdivl
push
jno
add
adc
out
mov
add
lahf
xor
add
js
xor
str
cwtl
push
loope
mov
cmp
insb
fs
add
sbb
push
imul
mov
test
in
xchg
push
inc
jnp
add
shl
or
flds
mov
push
jmp
mov
mov
bound
dec
sub
rorl
pop
popa
mov
into
and
mov
aam
movsl
push
fisttps
xchg
fadd
add
shll
sbb
bound
inc
fisubrl
inc
mov
lods
sarb
add
in
sbb
or
fnstsw
add
cmp
adc
or
and
mov
outsl
rorb
aam
add
push
stc
fiadds
pop
cwtl
leave
fldcw
and
test
pop
cmp
or
mov
add
and
mov
popf
add
mov
cmp
push
ljmp
fildl
add
fdivl
or
test
cmp
push
or
jp
iret
push
in
decl
xchg
daa
cwtl
loop
or
rorb
lock
mov
add
incb
ret
pop
push
test
jno
insb
sbb
imul
jbe
aam
loopne
roll
mov
ficoml
int3
dec
fldl
outsl
fistpll
mov
mov
pop
aad
mov
call
add
fdivrs
push
add
fisttps
addr16
cmpsb
fldl
push
mov
dec
ss
fiaddl
sub
scas
idivb
dec
add
pusha
jp
inc
ret
out
fcomp
push
in
ja
add
imul
sbb
shrb
ss
push
xchg
add
int3
add
mov
and
es
mov
mov
pop
mov
sub
mov
cmpsl
call
add
xor
shlb
sub
scas
ficomps
lock
es
arpl
pushf
mov
xchg
insl
add
ss
add
test
jb
push
rolb
adc
mov
mov
cmp
mov
fwait
add
aad
mov
out
fdivrl
fisttpl
aam
rcrl
icebp
clc
mov
push
pop
int
mov
mov
outsl
int3
inc
mov
sbb
pop
add
push
dec
add
push
pop
or
adc
sahf
add
ror
imul
insb
add
js
or
xlat
push
addl
mov
add
popa
cmpsl
notl
pusha
add
dec
inc
imul
dec
push
scas
fcompl
add
or
inc
lock
aas
aaa
push
add
jg
iret
mov
jmp
cmp
mov
lret
mov
push
cmpsb
mov
sar
in
push
xlat
add
sub
push
mov
jp,pn
mov
dec
popa
add
add
push
add
aaa
mov
or
ret
add
add
sub
xor
js
add
or
xchg
jae
push
gs
data16
lods
ja
or
inc
dec
push
adc
adc
adc
push
adc
shlb
add
and
adc
mov
scas
add
sbb
adc
dec
stos
and
add
and
adc
mov
andb
fsubl
adcb
test
sti
adc
int3
or
loopne
add
xchg
or
adc
and
inc
sub
mov
adc
push
dec
adc
orb
xchg
push
add
and
push
sbb
xchg
adc
adc
and
sub
sbb
shll
or
mov
and
dec
sbb
les
fcoms
push
and
sub
inc
sbb
mov
lock
sub
aaa
mov
dec
mov
adc
dec
js
push
and
mov
and
inc
or
push
enter
push
orl
enter
loopne
mov
adc
mov
sub
mov
mov
dec
je
fisubs
mov
mov
adc
sub
add
add
test
sub
sub
adc
or
xor
dec
or
bswap
gs
pushf
pop
daa
divb
add
fiaddl
dec
add
xor
aam
int
push
bound
out
or
lcall
xchg
push
daa
mov
enter
lods
push
add
data16
fmuls
out
lock
adc
and
inc
xor
dec
adc
mov
fs
xchg
fsubl
in
in
hlt
mov
adc
add
les
outsb
cmc
adc
xor
push
ret
fucomp
adc
sbb
dec
inc
gs
push
inc
test
xchg
dec
dec
or
inc
add
or
add
mov
and
xchg
adc
or
test
or
push
xchg
or
add
adc
cmp
sbb
mov
pop
and
jmp
push
sbb
mov
and
sub
and
and
or
sub
xor
adc
dec
dec
xchg
sbb
sbb
or
or
mov
adc
mov
add
fldl2e
or
adc
xor
xchg
push
and
test
mov
les
adc
clc
push
adc
xchg
or
and
xor
mov
jo
test
and
loopne
loope
add
adc
in
or
mov
cmp
xchg
dec
mov
rol
inc
dec
or
mov
xchg
lds
mov
push
or
xor
jl
jo
push
clc
push
add
sub
inc
xchg
add
test
xchg
pop
aad
les
mov
cli
dec
sti
xchg
cld
and
inc
decb
test
xchg
test
andl
adc
add
insb
or
in
adc
sub
push
aas
push
adc
fcompl
mov
sbb
sbb
icebp
ret
pop
or
sbb
and
jmp
int
dec
movsl
push
cmp
mov
fwait
inc
adc
push
xchg
pop
add
gs
sub
mov
hlt
add
mov
paddsw
imul
push
shlb
cld
adc
and
dec
in
stc
and
jmp
mull
dec
notb
dec
hlt
mov
and
dec
repnz
andb
inc
xchg
lock
dec
out
xchg
shlb
in
inc
loopne
mov
adc
and
in
push
add
mov
push
cmovns
repnz
inc
adc
adc
imul
sub
or
add
mov
xchg
pop
jg
add
inc
inc
inc
dec
dec
add
push
push
push
push
push
push
add
xor
loope
dec
and
xchg
in
or
jnp
sub
das
gs
adc
call
jnp
daa
or
gs
xor
mov
or
aas
icebp
push
sub
adc
or
xor
cmc
sub
jmp
sub
cli
sub
lea
push
xchg
jns
adc
je
adc
xor
add
sub
das
gs
dec
js
sbb
sub
cmp
or
nop
mov
inc
jne
adc
mov
jmp
enter
cmpsb
mov
mov
adc
leave
xchg
adc
fs
xor
xchg
sub
cmp
dec
mov
fwait
and
and
sub
mov
cmp
dec
lock
cmc
add
sub
fs
mov
dec
cmpsb
push
inc
cmovb
lock
daa
sub
inc
dec
add
enter
sub
push
enter
add
pop
sbb
xchg
push
push
push
arpl
test
imul
ret
xor
arpl
jae
dec
lock
mov
jge
adc
xchg
sub
xchg
enter
test
mov
sub
mov
jl
repnz
xchg
fs
js
lcall
sub
sahf
mov
and
inc
mov
outsb
adc
sub
or
inc
repnz
mov
mov
nop
jg
mov
and
xchg
sbb
repnz
xchg
mov
mov
push
gs
pop
sub
adc
pusha
mov
fmull
sbb
xchg
loopne
jl
sbb
test
mov
xchg
in
aaa
adc
jns
sbb
test
mov
sub
xchg
sub
lret
pop
std
sbb
cmpsl
lock
or
mov
cltd
adc
dec
sub
or
sbb
sub
adc
xor
mov
sub
and
push
pop
adc
sbb
sbb
xor
push
add
inc
xchg
and
adc
and
daa
nop
and
add
and
cltd
adc
mov
xchg
sub
mov
cmp
and
nop
xor
cmp
lods
mov
ds
or
inc
cmpsb
cmp
test
inc
loop
and
dec
adc
sub
dec
sub
test
push
pop
fadds
int3
sub
pop
cmpsb
adc
imul
and
lds
adc
jno
dec
cmp
cltd
shl
insb
xor
push
push
jbe
cmp
inc
and
or
or
adc
xchg
sbb
sbb
xchg
or
xchg
into
rclb
enter
sub
xchg
lahf
mov
mov
jno
or
and
stos
sub
xchg
scas
cmpsl
dec
jno
sbb
loope
dec
mov
mov
mov
ret
push
movsb
cmp
xchg
nop
xchg
jo
lret
cmpsb
adc
jno
into
in
cmp
mov
enter
cmp
mov
shr
and
or
xchg
lock
jns
repz
adc
test
push
repnz
cmp
cmp
adc
in
or
sub
adc
and
mov
push
orl
pop
inc
xchg
daa
test
xchg
das
adc
mov
and
inc
mov
mov
push
mov
and
mov
cmp
test
inc
mov
and
int3
and
xor
push
inc
jno
cmc
pushf
push
push
jne
sub
sub
std
xchg
adc
jge
cli
cmp
xorl
and
mov
mov
inc
cmpsb
test
es
daa
inc
xchg
cmpsb
adc
lods
push
push
xchg
cmpsb
adc
movsb
adc
mov
adc
movsl
xor
sub
movsb
dec
cmp
push
inc
adc
lods
inc
addb
stos
xchg
cmp
sub
lds
iret
and
in
jb
push
dec
in
enter
xor
xor
aam
or
mov
sub
test
sbb
jns
cld
enter
loop
js
adc
xor
and
or
adc
mov
lods
push
and
inc
movsl
bound
and
sub
clc
nop
enter
bound
adc
shrl
cwtl
shlb
or
xchg
loope
xchg
xor
loopne
cmp
lods
enter
xor
addb
xor
xor
or
inc
out
das
add
dec
in
xor
sbb
insb
xchg
daa
push
movsl
dec
push
xor
sbb
daa
test
fcoml
insb
sub
adc
dec
sub
addr16
lret
fs
cmp
xchg
push
xchg
aam
and
dec
sub
xchg
and
repnz
movaps
mov
mov
pop
nop
dec
adc
test
mov
mov
enter
cmp
cltd
xor
and
adc
push
sub
sub
push
inc
mov
pop
in
bound
cmp
sub
cmpsb
cmp
xlat
imul
sub
xor
jno
or
mov
rclb
push
and
fstl
lahf
mov
sbb
test
out
push
pushf
cmp
adc
sub
hlt
xchg
int
loopne
cmp
sub
cmp
movups
mov
push
test
or
xchg
enter
or
les
xchg
loop
adc
xchg
mov
xor
cmp
adc
xchg
mov
cwtl
push
and
cltd
cmp
lcall
sbb
jne
pushf
cmp
orl
lea
sahf
xchg
cltd
mov
and
and
das
add
or
mov
nop
xor
sub
inc
adc
adc
stos
mov
push
mov
and
inc
mov
nop
pop
adc
sub
adc
repnz
adc
test
mov
fistl
mov
fists
arpl
fsubrl
jecxz
nop
fcoml
sub
sti
xorb
out
mov
mov
inc
push
dec
xorb
mov
jl
lret
les
inc
xchg
xor
sbb
or
and
sub
adc
mov
mov
dec
or
dec
les
dec
xchg
pop
mov
popf
loope
jb
dec
xchg
andb
dec
jno
or
dec
les
loop
les
sti
adc
test
shlb
lret
dec
or
add
mov
add
fldcw
or
xchg
push
push
in
and
inc
sbb
jmp
test
movsb
adc
lock
in
sub
pushf
adc
and
mov
dec
adc
inc
sbb
adc
imul
or
and
inc
add
push
push
push
cmp
adc
sbb
or
and
mov
pop
adc
mov
sub
adc
adc
and
xor
and
cmp
mov
mov
xor
push
xor
inc
test
xor
inc
adc
stos
and
fs
push
or
xor
inc
push
sub
cltd
pop
cmp
loop
cwtl
sub
lock
imul
sbb
jno
loope
jbe
fistl
js
sub
jecxz
adc
xchg
adc
in
mov
adc
pushf
mov
jno
or
cmpsl
mov
mov
jno
or
pause
xchg
xchg
and
inc
cmc
cmp
test
cmp
into
adc
stc
adc
aam
cld
dec
js
faddl
pop
xchg
or
add
in
jmp
nop
xor
or
xchg
sub
lock
movsl
adc
mull
mov
jo
sbb
push
std
dec
mov
adc
shrb
mov
mov
add
fsts
fmull
cmp
mov
fcompp
fs
das
jo
jmp
adc
ss
sub
shrb
or
cmpsb
adc
ficoml
or
mov
push
and
sarb
push
test
fsub
pop
cmp
dec
push
and
fcomi
imul
nop
fcomi
jp
inc
lock
mov
ljmp
inc
popa
enter
cmp
sahf
mov
sbb
ficoms
fsub
cmp
scas
adc
call
mov
call
mov
sub
mov
fs
les
xchg
adc
lret
inc
jns
sbb
push
enter
in
sub
fisttpl
test
out
and
loopne
in
sub
adc
in
jl
stc
popf
fsubrl
js
jb
xchg
adc
add
adc
aam
popf
push
sbb
lock
sbb
leave
fstps
sub
fsub
and
cmp
and
cmp
enter
inc
cmp
dec
push
mov
and
inc
or
in
xor
sbb
sbb
xchg
jg
inc
fisubs
sbb
sub
test
ret
mov
and
and
and
push
test
sub
pop
adc
sub
and
sub
insl
test
or
je
inc
or
and
or
test
adc
adc
xchg
sub
mov
jno
or
xor
mov
movsl
enter
les
mov
dec
jno
or
mov
mov
and
mov
and
leave
push
push
rclb
xor
ficoms
xchg
cmp
fistl
adc
adc
sbb
xchg
sub
cmp
inc
jo
inc
cmc
cmp
inc
push
adc
mov
fildll
adc
enter
mov
mov
lret
fistpll
push
lods
sub
popf
sub
sbb
mov
sub
dec
adc
xchg
and
cmp
cmp
sub
cmp
inc
in
bound
sbb
xor
sbb
sbb
cmpsb
mov
dec
js
sbb
cmp
adc
cmp
adc
mov
fs
sub
xchg
push
lret
nop
and
pop
in
xor
movsl
fs
push
sub
scas
mov
and
adc
loopne
and
jg
mov
emms
stos
adcb
and
or
adc
or
xchg
or
outsl
sub
and
sbb
xor
mov
xor
lods
sub
sub
mov
cld
cmp
add
les
dec
push
and
inc
clc
sub
test
stc
loop
adc
cli
mov
push
in
push
and
inc
in
cmp
adc
xor
test
jmp
negl
fsubl
fstpl
push
sbb
xchg
fsubrs
mov
dec
sub
push
inc
fisttpl
adc
loop
adc
je
mov
push
jne
and
inc
jbe
add
cmp
fs
inc
adc
mov
pushw
and
cmc
sub
pop
test
inc
aad
push
and
icebp
sub
jae
inc
cmp
xor
push
das
adc
lods
sub
mov
jbe
push
test
sub
fs
mov
jae
sub
xchg
sub
js
xchg
push
inc
and
popf
push
loop
and
test
push
mov
enter
push
and
test
enter
inc
adc
int
push
push
imul
cmp
test
cmp
icebp
adc
popa
mov
push
bound
adc
jae
bound
out
or
shrl
sbb
inc
or
and
mov
sub
cmp
inc
bound
pushf
mov
cmp
lds
adc
adc
or
test
adc
push
mov
cmp
push
or
fisubs
sub
xchg
mov
insb
mov
inc
add
test
sub
movsl
cmp
jl
add
loope
sub
push
inc
adc
fwait
pop
mov
lods
fs
testb
dec
lock
clc
and
mov
pop
adc
mov
adc
adc
push
inc
aam
stos
pop
fimull
and
mov
or
test
inc
mov
negl
pop
push
push
push
movsb
adc
add
adc
ficoml
push
sbb
xchg
xchg
cmp
pop
pop
xchg
pop
adc
test
inc
cmpsb
enter
or
xor
mov
cmp
push
adc
xchg
mov
pop
push
or
mov
or
lock
arpl
or
fstl
fdivl
sub
lahf
xchg
lock
jbe
and
lods
push
push
cmpb
les
mov
movsb
in
sub
movsl
jns
sbb
xchg
adc
lods
sub
scas
in
xor
push
push
mov
inc
mov
les
adc
movsb
adc
mov
lret
repz
aam
sub
mov
adc
lods
cmp
adc
inc
or
lods
pop
repnz
lods
cld
sub
js
stos
sub
inc
pop
and
cmpsb
sbb
and
and
xchg
cmp
enter
or
scas
les
repnz
push
and
repnz
mov
enter
cmp
test
repnz
cmp
mov
and
push
push
scas
sub
insw
mov
fs
cmp
cmpsb
adc
outsb
lret
les
ret
mov
leave
leave
adc
inc
insb
mov
push
sub
insl
enter
push
and
mov
outsb
jno
or
rep
mov
cmp
outsl
xchg
pop
pop
sbb
test
sub
sbb
adc
adc
and
in
movsb
add
pop
and
inc
adc
and
adc
test
mov
lock
dec
xor
sub
cmp
jbe
rcll
adc
into
mov
add
push
cmp
push
jbe
push
push
dec
or
inc
inc
dec
xor
popf
fiadds
cmp
sub
pop
push
dec
clc
inc
jecxz
sbb
aaa
push
inc
inc
adc
dec
push
add
push
jae
test
mov
and
inc
push
dec
sub
or
push
dec
popa
dec
dec
inc
dec
xor
cs
adc
aam
push
jle
movsb
and
sub
sub
mov
cmp
or
test
ret
pusha
adcb
dec
xor
xor
call
inc
dec
iret
push
lret
pop
cmp
sub
mov
adc
dec
inc
add
dec
add
jmp
inc
mov
mov
sub
mov
and
mov
push
mov
add
adc
inc
push
cmp
in
bound
push
orl
test
jmp
sbb
sub
dec
arpl
inc
mov
cvtps2pd
inc
into
das
nop
jne
push
aaa
or
das
xor
dec
data16
adc
adc
cmp
rorb
xchg
mov
stos
test
xchg
push
imul
mov
pop
es
pop
dec
jecxz
mov
mov
arpl
or
aaa
push
push
daa
or
dec
or
lret
jae
or
imul
je
shrl
xor
dec
mov
pusha
xchg
xchg
scas
into
mov
mov
mov
inc
xchg
pop
pop
and
and
call
push
inc
or
jb
and
xor
push
add
push
stos
add
push
push
or
adc
inc
add
icebp
adc
inc
or
sub
push
sbb
add
add
pop
dec
inc
push
into
inc
enter
xchg
fdivl
or
adc
sets
shll
inc
add
add
inc
sub
nop
std
lret
adc
sub
adc
test
test
push
or
sbb
ljmp
push
xchg
dec
and
test
push
inc
dec
daa
pop
or
inc
push
sbb
cltd
dec
inc
fstpt
or
inc
psrad
fs
or
inc
mov
leave
sahf
inc
add
dec
mov
inc
xlat
or
dec
imul
push
dec
pop
dec
jecxz
push
jmp
ficoms
pop
xchg
sbb
and
inc
cmp
ficoml
test
sub
cmp
or
push
sub
inc
ss
jmp
test
test
push
iret
aam
cmp
nop
fidivrs
push
or
test
ljmp
push
scas
xchg
test
add
cmc
das
push
popf
and
mov
repz
pop
idivb
pushf
stos
add
push
pusha
ret
dec
insb
or
inc
push
sbb
xor
jle
pop
push
xchg
or
pop
dec
lds
cli
inc
jnp
xor
scas
mov
inc
inc
adc
xchg
aam
pushf
outsb
inc
rolb
push
dec
or
push
mov
sub
pop
dec
out
push
or
push
lea
fldt
dec
xchg
push
sbb
push
push
xchg
sbb
in
loopne
roll
and
push
dec
or
push
dec
pop
pop
xlat
leave
pop
push
inc
jb
leave
sbb
sbb
shrl
addb
xor
inc
dec
pop
or
pop
xchg
push
xchg
or
push
pop
inc
dec
aaa
push
test
adc
push
movsl
push
dec
and
pop
insl
pop
jne
dec
add
inc
add
pushf
push
shlb
lds
add
mov
push
mov
push
movsl
add
push
out
imul
lods
nop
adc
push
mov
xchg
dec
movsl
push
stos
pushf
inc
dec
cmp
dec
push
push
stos
scas
push
push
jmp
popf
imul
pop
mov
push
fwait
push
mov
push
push
dec
add
push
lods
push
xor
and
jp
add
adc
push
imul
or
dec
inc
add
xchg
es
pop
fwait
adc
es
jge
or
shlb
in
jb
push
xor
inc
dec
gs
jbe
xor
inc
aam
push
xchg
adc
sbb
dec
mov
pusha
xchg
push
push
push
sbb
lcall
and
shlb
cmpsb
sbb
lcall
add
inc
push
push
inc
or
push
nop
inc
ret
inc
cmp
mov
or
fmull
push
pop
sbb
xchg
push
inc
inc
enter
outsl
push
dec
push
and
push
push
inc
inc
enter
dec
mov
add
mov
fisubs
inc
inc
mov
aam
or
fs
rcll
and
inc
ret
inc
inc
stos
push
cs
inc
and
push
jmp
nop
pop
push
inc
mov
stos
pop
lods
push
jl
rorb
into
push
popa
in
cmpsb
inc
scas
or
xor
xor
test
inc
fcompl
roll
popf
xor
lea
mov
inc
sub
xchg
inc
dec
or
push
mov
test
cmp
push
inc
inc
dec
daa
orl
adc
pop
lcall
repnz
xchg
je
or
das
adc
mov
inc
adc
inc
push
push
push
sbb
aad
push
and
inc
enter
push
push
or
dec
frstor
and
pop
inc
insb
xor
push
or
dec
push
inc
pop
or
xchg
inc
lret
pop
sub
inc
push
cmp
pop
inc
dec
or
push
lds
mov
pop
push
cvtps2pi
push
inc
or
push
jp
cmp
dec
or
insb
arpl
lret
inc
outsb
jo
inc
or
push
inc
inc
mov
mov
in
sub
outsb
xlat
lret
adc
cmp
sub
push
pop
js
sbb
insb
js
dec
jno
add
sbb
and
pop
add
shld
fcompl
sub
or
insl
dec
or
bound
pop
cmp
adc
int3
movsl
js
mov
mov
les
inc
mov
sub
fs
jno
movsb
push
and
xchg
test
hlt
cmp
adc
outsb
test
mov
mov
jl
mov
enter
jl
mov
inc
mov
ds
mov
jb
ds
in
loopne
out
outsl
bound
inc
sbb
and
loop
cmp
in
icebp
fs
xchg
jl
add
js
mov
enter
sahf
icebp
aam
lods
xchg
hlt
fisubs
loop
jo
nop
pop
nop
sub
mov
cltd
icebp
dec
sbb
xchg
les
jl
and
fwait
les
adc
les
int3
pop
and
mov
mov
test
jno
call
sahf
and
inc
jb
mov
inc
pop
and
in
jb
ds
xchg
and
mov
mov
inc
shlb
movsb
in
jb
and
adc
repnz
or
and
sbbb
xchg
test
pop
stc
rcrb
xchg
hlt
enter
jae
and
and
inc
dec
and
jb
ds
js
xor
lods
adc
in
xchg
aam
hlt
stc
lock
ret
cmp
and
or
cmp
mov
sub
pusha
fs
mov
inc
andb
in
jno
xchg
push
and
in
jl
mov
sub
adc
jo
adc
inc
rcrb
in
fucomip
rclb
xchg
pop
or
cli
or
xchg
stc
sub
in
dec
notl
clc
or
out
inc
in
jo
repnz
jecxz
fs
fisttps
or
les
cld
or
or
std
pusha
mov
pop
clc
lea
push
push
test
or
dec
pop
mov
and
dec
mov
int3
and
inc
lock
and
pop
dec
insb
xchg
nop
and
ficompl
pop
or
adc
ja
or
cmp
dec
inc
les
sub
cmpsb
push
faddl
test
dec
adc
mov
and
dec
and
inc
mov
inc
in
loopne
mov
mov
lahf
rorb
add
or
and
lcall
inc
pushf
add
and
call
and
scas
pushf
scas
mov
je
pusha
ljmp
adc
aam
ror
cwtl
mov
mov
lods
pop
lods
dec
imul
sbb
lret
clc
lcall
test
test
insb
pop
lcall
jl
fs
xchg
mov
in
lock
and
js
adc
sub
inc
and
insb
into
and
dec
xchg
xchg
test
mov
in
adc
and
jns
jmp
xchg
push
movsb
mov
in
lock
and
inc
sub
mov
and
dec
mov
aam
mov
fstps
dec
adc
test
xchg
mov
rolb
in
adc
and
jl
sbb
xor
pusha
jo
pushf
dec
nop
xchg
pushf
and
xor
pop
xor
add
fisubl
sbb
push
jne
and
jnp
into
xchg
adc
add
jmp
cmp
fyl2xp1
or
and
out
add
std
lock
adc
imul
mov
inc
adc
dec
xchg
xor
dec
or
sub
scas
adc
push
xor
and
dec
aam
adc
dec
loopne
ret
popa
xor
dec
arpl
xor
or
movsb
xor
cltd
cmp
insb
cwtl
sbb
mov
inc
xchg
xor
lods
jno
and
sbb
inc
adc
imul
ret
sbb
mov
mov
pop
enter
or
push
stos
in
and
jo
and
rcl
dec
in
jno
adc
jecxz
xor
stc
or
cwtl
sbb
nop
dec
sub
sub
movsb
xor
push
enter
pop
shlb
or
fstps
data16
push
xchg
and
adc
enter
jmp
movsl
movsb
rcrb
cmp
jns
test
cltd
sub
fs
sub
xchg
cmp
fdivs
mov
pop
ficompl
adc
mov
or
jl
int3
cltd
icebp
and
push
dec
pusha
adc
or
cmp
pop
and
mov
adc
xor
loopne
fs
xor
jmp
or
cltd
sbb
andb
xchg
pop
pusha
mov
test
and
mov
imul
cwtl
jle
fbld
mov
dec
xor
shrl
sarl
adc
add
xor
mov
sub
add
jns
xchg
mov
in
and
sbb
hlt
xchg
aam
xor
sub
jae
lcall
xor
xchg
in
push
decb
pop
jno
mov
mov
clc
loope
cltd
sarl
inc
adc
call
add
data16
sub
pop
pop
adc
inc
js
loopne
cmpsb
mov
cmp
imul
mov
dec
and
cmp
inc
push
icebp
call
xor
insb
jno
xor
pop
sbb
data16
mov
jno
dec
mov
dec
lock
adc
xchg
xor
hlt
xor
sub
and
mov
rcrb
pushf
and
and
fsubs
cmp
pop
mov
test
and
fadd
shll
or
cltd
es
daa
inc
mov
cmp
aam
xchg
les
mov
xor
inc
xor
cwtl
adc
sub
fdivrs
cli
push
push
jl
movsb
sbb
lock
or
adc
xor
js
xor
loopne
les
int3
and
sbb
int3
sbb
rcr
cltd
and
lods
mov
das
adc
sub
or
xor
inc
int3
pop
and
rcr
dec
stos
mov
movsb
pop
cltd
push
push
and
loopne
in
push
push
int3
rolb
sbb
xor
xor
orb
or
sbb
insb
lret
inc
das
loope
enter
or
xor
aam
dec
in
or
sub
mov
es
pop
push
nop
mov
pop
add
or
adc
pop
pushf
add
cmp
sahf
inc
xchg
fisubs
push
loop
popf
add
jl
mov
nop
sahf
and
xchg
push
sub
scas
add
xchg
js
inc
mov
push
mov
adc
ds
sar
or
icebp
cmp
adc
and
inc
insb
enter
repnz
add
mov
adc
lcall
xchg
inc
and
insb
jp
nop
adc
xchg
out
cld
and
fwait
inc
adc
mov
adc
pop
dec
jo
xchg
cwtl
inc
stos
mov
and
dec
repnz
pushf
adc
and
inc
ss
mov
jbe
test
adc
lods
dec
rclb
adc
popf
mov
inc
enter
pop
and
jb
and
les
shlb
dec
repnz
sahf
mov
and
cmp
dec
and
dec
push
fsts
mov
hlt
loopne
sbbl
dec
push
xchg
pusha
and
orb
rorb
loopne
hlt
and
inc
or
mov
adc
dec
insb
xchg
jp
mov
mov
adc
and
dec
hlt
mov
mov
inc
cmp
adc
jbe
test
mov
out
and
inc
push
mov
and
pusha
insb
mov
and
dec
stos
xchg
mov
in
mov
adc
mov
dec
dec
xchg
pop
and
adcb
rorb
xchg
hlt
adc
movsb
and
inc
xor
mov
push
xchg
xchg
les
out
add
dec
mov
jbe
mov
xchg
mov
les
mov
or
dec
sub
js
mov
fcoml
and
inc
cs
mov
push
xchg
nop
and
out
hlt
and
test
push
dec
es
and
pop
jo
adcb
jno,pn
rolb
out
adc
test
dec
ds
push
and
jbe
mov
dec
into
xchg
loop
hlt
mov
and
cmp
add
pop
adc
jp
mov
mov
adc
and
dec
lock
stos
adc
and
inc
ss
mov
and
dec
jle
mov
xchg
inc
movsb
mov
enter
fiadds
dec
xor
repnz
push
lods
xchg
sub
mov
inc
and
dec
jb
test
nop
inc
movsb
mov
rclb
ljmp
sbb
xor
mov
fs
dec
test
mov
out
and
inc
push
scas
or
and
push
test
mov
adc
or
adc
scas
mov
or
and
dec
dec
xchg
pop
and
mov
and
dec
ficoms
and
sub
dec
adc
push
jp
test
nop
inc
pushf
into
and
dec
rclb
xor
clc
adc
push
mov
and
sub
cmp
dec
pop
xchg
data16
test
and
dec
call
adc
mov
movsb
or
mov
adc
pusha
dec
jb
test
xchg
inc
test
mov
adc
and
inc
call
or
stc
enter
xor
inc
inc
push
bound
xchg
dec
mov
inc
fdivp
mov
mov
adc
and
cmp
xchg
pop
and
js
mov
dec
ret
and
inc
lock
mov
or
mov
adc
pop
dec
je
mov
xchg
inc
test
mov
adc
and
dec
notb
and
inc
cs
pop
and
dec
jle
mov
cwtl
inc
movsb
mov
mov
dec
out
mov
push
mov
cmp
dec
pop
xchg
data16
mov
and
dec
xchg
ljmp
sbb
mov
adc
pop
dec
outsb
xchg
jl
mov
mov
push
mov
sbb
ds
or
adcb
les
cmpsb
or
adc
icebp
dec
or
dec
dec
bound
sahf
and
dec
aam
hlt
adc
mov
dec
mov
je
mov
xchg
mov
lret
repnz
frstor
pop
sbb
push
dec
or
mov
adc
and
je
std
inc
jecxz
jb
jb
sbb
push
arpl
push
decl
mov
pop
sbb
push
jbe
and
jp
xor
cltd
jne
inc
fldenv
xchg
push
push
inc
subb
lea
sbb
lret
sbb
inc
cld
jne
outsb
mov
idivb
or
out
xchg
cmc
mov
mov
and
push
sub
jae
mov
jmp
pushf
push
push
dec
stos
mov
add
inc
cmc
insb
xor
outsb
inc
je
push
xchg
sbb
adc
fs
in
popa
mov
insb
mov
dec
mov
or
and
sub
cmpsb
nop
inc
or
arpl
stos
or
or
bound
jns
inc
js
in
xor
adc
stc
daa
test
mov
push
outsl
jb
outsb
cmp
cwtl
ss
outsl
std
mov
cmp
or
cmp
inc
popa
imul
push
dec
pop
pop
dec
and
jp
insl
aam
mov
inc
jge
xchg
mov
or
pop
push
adc
and
sahf
push
mov
lcall
lret
inc
adc
cmp
push
push
xor
sbb
push
xchg
js
sbb
xchg
mov
iret
ja,pt
push
or
icebp
stos
shlb
dec
adc
sbb
cmp
addr16
jns
and
cmp
jo
fistpl
repnz
addr16
popa
mov
insl
mov
mov
dec
jbe
jo
dec
dec
or
addr16
push
and
movsb
push
lcall
shlb
imul
out
inc
mov
je
inc
add
jns
mov
jns
adc
inc
dec
ficoms
mov
aaa
je
xchg
push
inc
ss
mov
mov
mov
loop
mov
cli
xchg
hlt
dec
adc
inc
pop
xor
push
fnstcw
dec
add
cmp
add
push
lret
or
dec
dec
aad
xchg
and
push
dec
in
ret
jb
mov
cmpsb
pop
jmp
xor
jno
push
or
std
stos
add
imul
clc
es
insl
not
inc
addl
lretw
mov
je
sbb
push
aaa
lods
in
shl
push
dec
cltd
xchg
sub
outsl
popa
sbb
push
cmp
adc
push
cmp
sbbb
pushf
xchg
das
nop
push
adc
lea
dec
adc
and
scas
and
shrl
ja
bound
and
mov
insl
mov
mov
mov
and
push
jno
push
jo
and
fisttpll
adc
clc
push
dec
and
or
cmpsl
adc
adc
fbld
scas
mov
dec
adc
dec
or
xchg
jmp
push
outsl
lahf
pop
bound
into
inc
rolb
bound
sub
push
jnp
jno
jbe
add
or
jl
pop
push
mov
inc
and
roll
jae
insl
out
mov
sub
sub
sub
es
aaa
sub
xchg
adc
cwtl
hlt
imul
jle
ret
sub
jmp
sub
rcrb
push
or
dec
adc
and
inc
fildl
dec
jae
pop
push
sbb
lcall
dec
jo
popa
or
imul
adc
mov
push
adc
dec
cs
sub
pop
hlt
cwtl
sbb
insl
jmp
push
adc
push
lods
pusha
aas
sub
es
push
xchg
ja
jae
sub
repz
pop
sbb
insb
cwtl
xor
test
push
popa
lret
rcl
lcall
dec
je
adc
jo
pop
js
leave
arpl
sub
lret
pop
sub
push
xchg
mov
xlat
mov
push
inc
inc
xchg
arpl
push
test
push
and
inc
xchg
push
pop
adc
inc
lret
dec
push
and
sbb
inc
xchg
mov
push
loop
mov
push
pop
sbb
inc
je
icebp
cmpsl
sbb
mov
push
aam
push
aas
sbb
adc
adc
stc
inc
push
mov
push
mov
sub
outsb
mov
push
sarl
push
push
les
fldt
insl
cmpsb
jne
dec
sbb
and
popf
sub
mov
and
jp
sbb
jae
enter
popa
arpl
mov
inc
in
je
push
repnz
pushf
cmp
push
dec
push
xchg
mov
push
mov
movsl
or
push
sbb
outsb
inc
sbb
cltd
xor
out
repz
cmc
sub
push
ds
adc
xchg
lret
jbe
inc
adc
push
pop
adc
inc
mov
adc
adc
das
xchg
mov
xor
cmpsl
sbb
mov
xchg
push
stc
negb
jne
insl
inc
aaa
mov
push
imulb
cmp
aas
sbb
rcrl
jbe
ret
ja
imul
cwtl
jle
ds
adc
and
push
push
adc
cmp
mov
push
push
repnz
push
sahf
lret
dec
sub
pop
int3
imul
into
mov
out
dec
pop
int
outsb
pop
test
mov
dec
dec
xchg
and
inc
xchg
sbb
int
push
outsb
cmpsl
ljmp
mov
shrl
jl
or
inc
js
push
dec
xchg
or
pop
cmp
push
jae
pop
dec
dec
jo
cmp
sub
push
insb
lret
pop
xchg
flds
subb
dec
push
xor
aad
insb
sbb
push
dec
mov
push
push
popa
faddl
std
sub
sub
dec
sbb
jns
loope
xor
adc
negl
adc
imul
mov
pop
inc
in
mov
dec
test
or
aam
or
cmc
dec
pop
sub
movsb
dec
push
push
xchg
cmc
push
adc
pop
aam
imul
pop
mov
cmp
jae
dec
adc
hlt
mov
inc
mov
inc
js
das
pusha
dec
arpl
inc
adc
int3
cwtl
add
cmp
jp
data16
sahf
mov
and
mov
lret
gs
sub
lret
mov
mov
sbb
aam
sbb
xchg
or
jo
imul
adc
xor
xchg
adc
or
add
and
outsl
mov
insl
dec
test
rcrb
fimull
xchg
sub
outsl
cmpsb
dec
nop
cmc
fstps
and
adc
lea
sub
push
adc
push
in
popa
xchg
jb
push
adc
sub
andl
xchg
inc
push
idivb
pop
pop
mov
dec
jb
adc
jbe
es
mov
inc
dec
mov
stos
aam
mov
mov
fidivrl
hlt
popf
mov
movsb
cmp
nop
or
jb
cli
xor
sbb
inc
mov
sbb
fsubrl
out
in
mov
popa
je
dec
inc
adc
push
cmp
pop
mov
push
pop
jb
jle
insb
jnp
push
xchg
adc
and
cmpsl
pop
arpl
pop
test
lea
jo
addr16
outsb
pop
fistpl
mov
int3
push
ja
mov
push
call
popf
inc
popa
test
mov
jae
cmpsb
xchg
mov
movsl
jb
inc
pushf
adc
mov
aad
imul
les
into
dec
jge
cmp
mov
push
ljmp
hlt
div
imul
or
add
pop
and
sbb
xchg
mov
push
cmp
addr16
xchg
dec
and
fs
or
and
push
mov
je
lods
mov
ficoms
and
dec
mov
arpl
inc
push
fldt
mov
dec
inc
insl
mov
push
dec
fisubs
push
inc
inc
xchg
or
jle
push
jne
and
cltd
jl
mov
push
inc
sub
cwtl
lods
lahf
and
mov
lret
arpl
sbb
push
dec
jne
cmpsb
and
sub
dec
data16
xchg
mov
push
in
mov
jae
lahf
xor
fcompl
jo
adc
jae
into
push
js
cltd
pop
dec
and
jae
sbb
mov
dec
leave
mov
sub
push
push
imul
sahf
and
adc
arpl
fs
fstps
jbe
push
push
dec
mov
orb
arpl
pop
push
int
repnz
jno
push
lret
mov
fmul
sub
cli
inc
mov
push
xchg
sbb
sti
jle
addr16
sub
sbb
cmp
leave
inc
inc
inc
out
xchg
adc
and
adc
inc
cmpsl
adc
xor
lcall
lods
cmp
push
scas
adc
inc
or
adc
push
mov
or
jno
dec
int3
clc
lods
adc
jecxz
adc
dec
adc
cwtl
push
jne
mov
dec
xlat
sub
and
inc
jl
mov
sub
ret
xchg
mov
movsb
adc
in
push
test
adc
cmp
test
xor
js
mul
xchg
insb
in
leave
jbe
mov
sbb
adc
cmp
push
dec
pop
dec
xchg
fisttpl
xor
cld
enter
fdivrs
hlt
test
testl
jb
xor
and
xchg
repnz
push
js
pusha
jae
dec
leave
stc
dec
adc
adc
call
inc
inc
mov
xor
lahf
adc
lret
movsb
lods
into
insb
sub
and
dec
shll
adc
es
popa
dec
mov
fmull
cmp
out
xchg
mov
mov
or
sbb
cmpsb
push
nop
test
lret
pop
sub
mov
mov
pop
fwait
daa
cmp
push
mov
jns
popf
cmpsb
adc
popa
test
sar
lods
dec
push
sub
data16
lock
pop
dec
popw
jb
xchg
cmp
or
into
test
cmpsb
lods
sbb
dec
movsl
loop
test
stos
adc
fcoms
cmp
negb
and
dec
or
mov
and
or
dec
jbe
loopne
jne
jecxz
and
lret
push
jo
insl
and
dec
push
inc
mov
stc
cs
jp
jo
outsl
stos
mov
dec
fldt
roll
mov
fists
sub
dec
repnz
shl
push
mov
or
mov
bound
push
jg
inc
daa
mov
or
test
imul
lahf
lahf
or
movsl
push
stos
repz
mov
xchg
sbb
stos
fwait
lahf
out
jne
test
jne
sbb
xchg
inc
int3
pop
pop
fnstcw
and
mov
pusha
lcall
adc
inc
cwtl
sbb
iret
in
sub
out
loop
push
jbe
dec
fnstcw
dec
sbb
inc
cli
fisubrs
adc
imul
cmp
push
jge
adc
jae
mov
pop
mov
mov
cmp
jo
movsl
push
imul
sub
in
jmp
aad
adc
adc
int
pop
push
pop
adc
push
jl
push
adc
sub
dec
into
outsb
push
sbb
out
mov
add
nop
push
or
cmc
fnstenv
adc
mov
insb
mov
sub
dec
inc
mov
bound
cwtl
push
popa
dec
mov
cwtl
inc
dec
leave
push
push
movsl
xor
jae
pop
pushf
push
push
sub
xchg
or
nop
pop
sub
and
mov
or
imul
les
push
sti
mov
jbe
ljmp
push
je
pop
sar
dec
or
add
sub
xor
movsb
or
push
xor
mov
pop
sub
pop
mov
dec
pusha
xchg
cmp
test
and
in
cli
and
filds
inc
loope
inc
jecxz
inc
repnz
out
inc
testl
or
imul
call
aam
push
jmp
in
insl
xorb
or
xchg
loopne
repnz
inc
sbb
inc
adc
outsl
dec
test
mov
mov
adc
and
ret
imul
inc
and
push
test
lods
pop
lds
dec
xchg
jle
inc
push
stos
hlt
cs
test
sbb
sbb
mov
pop
sbbl
sbb
wbinvd
adc
or
adc
adc
ja
push
push
data16
inc
push
dec
and
ds
and
cmp
in
dec
adc
cmp
and
in
adc
sub
mov
pushf
es
imul
adc
push
insl
jns
aam
test
cmc
arpl
outsl
fsubrs
sbb
jmp
sub
jns
inc
movsl
pop
jmp
xchg
bound
inc
outsb
shlb
setg
dec
and
dec
push
iret
ja
repnz
push
inc
adc
movb
sub
push
push
dec
xchg
jb
leave
adc
push
jl
push
rclb
push
test
subb
cld
imul
mov
or
mov
pusha
test
lods
mov
adc
data16
jg
adc
pop
xor
sub
pushf
jl
xchg
pushf
mov
pushf
fcompl
push
cmp
lock
daa
clc
and
adc
and
jne
jns
jge
xchg
leave
movsb
leave
test
leave
int3
leave
ror
aam
fmul
fmul
loopne
in
call
push
xor
daa
push
daa
push
daa
es
cs
ss
ds
inc
daa
dec
daa
push
daa
pop
daa
data16
outsb
daa
jbe
jle
xchg
mov
xchg
daa
sahf
daa
cmpsb
daa
scas
daa
mov
mov
daa
daa
fisubs
out
out
daa
mulb
and
xor
leave
push
leave
push
leave
es
cs
ss
leave
push
jb
jp
or
leave
xchg
leave
lcall
leave
xor
cmp
xorl
pushf
mov
daa
popf
daa
shll
frstor
clc
and
push
cmp
pushf
ds
dec
pushf
push
pushf
pop
pushf
gs
outsl
pushf
test
pushf
mov
mov
pushf
fcomps
cmp
daa
sbb
and
sub
aaa
daa
cmp
daa
push
daa
mov
xchg
daa
movsb
daa
stos
daa
mov
mov
daa
jmp
pop
cmp
leave
dec
leave
push
leave
xchg
leave
lods
leave
sti
enter
cmp
jo,pt
mov
pushf
lret
pushf
aam
fildll
popa
add
leave
mov
dec
push
and
xor
into
add
dec
mov
dec
roll
setae
xchg
pop
xchg
xchg
xchg
mov
xor
xchg
sbb
xor
inc
xchg
push
dec
sub
leave
or
leave
mov
mov
leave
lock
clc
leave
adc
adc
xchg
or
pushf
hlt
xchg
xor
daa
sub
xor
xchg
daa
mov
daa
mov
xor
cmp
inc
leave
dec
leave
dec
leave
push
leave
pop
leave
gs
leave
push
leave
pop
leave
addr16
ror
leave
iret
leave
repz
adc
daa
push
daa
insl
daa
repnz
cmp
xor
cmp
inc
leave
push
leave
pop
leave
lcall
lret
mov
push
cmp
cwtl
pushf
mov
rcrl
xchg
push
daa
gs
jnp
cltd
daa
scas
daa
daa
adc
lcall
xor
mov
pushf
fiadds
cmp
dec
daa
pop
daa
imul
daa
enter
add
or
inc
leave
dec
leave
push
ror
cmp
jb
jb
jb
jb
jb
jb
sbb
cmp
cmp
and
cmp
leave
inc
leave
je
mov
in
cmp
cmp
cmp
cmpb
cmp
popf
cmp
cmp
cmp
cmp
cmp
cmp
push
or
dec
les
dec
clc
inc
add
and
pop
xchg
subl
xchg
lcall
xchg
fstl
or
sbb
in
in
in
in
in
in
mov
push
fcomp
xor
popf
cmp
mov
cmp
cmp
xchg
adc
lods
xor
xchg
xchg
xor
jmp
cmp
dec
pop
inc
sbb
std
xchg
cmp
daa
pop
daa
jno
andb
stc
inc
add
push
xchg
adc
cmp
cmp
fnsetpm(287
add
test
int
out
cmp
jp
aas
or
push
cmp
push
in
in
in
in
in
in
test
leave
test
leave
out
inc
nop
pusha
add
or
xchg
sub
pushf
cmp
pushf
mov
mov
xchg
cld
dec
xchg
adc
pop
stc
cmp
push
cmp
imul
xchg
mov
lcall
push
sarl
gs
sbb
jb
repz
sbb
inc
leave
dec
leave
push
leave
pop
bound
xchg
stos
xchg
mov
mov
xchg
rclb
ljmp
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
es
sbb
and
sub
xor
pushf
push
pushf
pop
pushf
bound
dec
orb
xchg
dec
lcall
dec
mov
shlb
fisubl
loop
ljmp
or
xor
and
sub
inc
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
pop
lcall
mov
cmp
cmp
cmp
cmp
cmp
cmp
push
add
or
dec
sbb
dec
sub
pop
dec
cmp
dec
dec
dec
push
dec
pop
dec
bound
daa
andb
daa
xchg
daa
lcall
daa
mov
daa
shlb
fisubl
loop
ljmp
or
adc
sbb
and
sub
xor
cmp
inc
in
in
in
in
in
in
in
xchg
hlt
jb
jb
jb
jb
jb
jb
dec
mov
rolb
ljmp
or
pushf
sub
xchg
dec
xor
push
jb
jp
adcb
mov
leave
mov
leave
ror
loope
loop
ljmp
cmp
jb
jb
jb
jb
jb
into
add
dec
dec
push
dec
pop
dec
bound
dec
jb
jp
orb
xchg
dec
lcall
dec
mov
shlb
fisubl
xchg
cli
nop
add
or
adc
sbb
and
leave
inc
leave
dec
leave
push
leave
pop
leave
leave
push
ljmp
xchg
in
in
mov
ret
pushf
rcrb
pushf
repnz
cli
lods
add
or
sbb
dec
sub
cmpb
cmp
push
cmp
bound
push
jb
jp
subb
pushf
lcall
pushf
mov
rorb
daa
mov
daa
repnz
cli
and
cmp
sbb
and
sub
xor
cmp
inc
leave
dec
leave
push
leave
pop
leave
leave
push
jb
jp
or
leave
xchg
leave
lcall
mov
in
in
in
in
in
in
mov
jb
jb
jb
pop
and
cmp
cmp
cmp
dec
cmp
pop
cmp
push
jb
jp
cmpb
sub
fcompl
xchg
mov
rclb
leave
repnz
cli
outsb
or
adc
sbb
and
sub
xor
cmp
inc
in
mov
jb
jb
jb
jb
pop
jp
cmp
cmp
cmp
sub
sbbb
cli
mov
xchg
mov
sbb
enter
xchg
jb
jb
jb
sbb
xor
pushf
mov
mov
pushf
rcrb
addb
fildl
leave
sbb
and
sub
xor
cmp
inc
leave
dec
leave
push
leave
pop
leave
pusha
leave
push
leave
or
leave
nop
sub
cmp
cmp
pop
into
fsubs
loopne
call
clc
loopne
jb
jb
jb
dec
and
fdivrl
xchg
inc
xchg
dec
xchg
push
xchg
pop
xchg
pusha
xchg
push
xchg
adcb
push
hlt
jb
jb
jb
dec
rorb
rorb
dec
loopne
call
in
shlb
xchg
or
sub
or
sbb
pop
leave
pusha
leave
push
leave
or
leave
nop
leave
cwtl
leave
cmpsl
je
shlb
cmp
adc
sub
xor
xor
cmp
cmp
inc
leave
inc
leave
dec
leave
dec
leave
push
leave
pop
leave
jo
nop
leave
cwtl
leave
pushf
leave
mov
leave
lods
leave
mov
mov
mov
leave
hlt
leave
clc
leave
cld
lret
xorl
fidivrl
adc
adc
sub
push
mov
pop
pushf
xchg
sbb
pushf
fs
push
pushf
sbbb
mov
mov
mov
pushf
les
add
add
or
xchg
jb
jb
into
add
pusha
dec
fs
push
dec
je
js
jl
orb
mov
mov
dec
les
dec
int3
popa
xor
leave
fmul
call
adc
adc
sbb
sbb
and
and
sub
sub
xor
inc
daa
pusha
daa
push
daa
je
js
jl
andb
daa
mov
pushf
daa
mov
daa
int3
and
mov
fsub
fsub
loopne
in
hlt
jl
sbb
and
and
sub
sub
xor
in
out
jmp
daa
je
js
jl
andb
daa
mov
mov
nop
daa
xchg
daa
movsb
daa
les
lock
aam
inc
sbb
pushf
loopne
in
call
cmpsl
addb
xor
xor
cmp
mov
inc
in
xchg
rolb
test
push
mov
nop
in
in
in
in
in
in
in
in
in
in
push
mov
inc
lock
hlt
dec
clc
inc
or
sub
xor
cmp
inc
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
dec
test
jle
dec
enter
dec
dec
hlt
in
clc
in
in
cmp
or
adc
and
inc
in
in
in
in
nop
lret
in
in
in
pushf
mov
pushf
test
lods
add
xchg
mov
jo
jb
jb
jb
loopne
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
dec
insb
push
loopne
dec
js
nop
dec
mov
mov
dec
les
dec
int3
dec
shl
out
fmul
in
mov
adc
sbb
dec
and
dec
sub
dec
xor
dec
dec
dec
push
dec
js
jl
push
test
cmp
sarb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
call
push
xchg
sbb
xor
in
nop
mov
jl
je
cmpb
and
mov
cwtl
in
mov
inc
cld
cs
xor
or
push
xor
push
pushf
pop
pushf
pop
pushf
pusha
pushf
fs
push
pushf
je
js
enter
pop
inc
dec
aaa
dec
pop
jb
jne
faddl
jb
xchg
adc
xchg
pop
push
popa
inc
lret
leave
fmul
repz
cmp
sarl
in
in
inc
jle
in
jmp
out
jmp
adcl
mov
sahf
jb
jb
sbb
xor
in
jmp
icebp
jb
jb
jb
sbb
aaa
add
pushf
adc
pushf
and
pushf
cld
cmpl
leave
int
aad
mov
imul
push
ds
cmp
mov
mov
push
xor
inc
inc
xor
add
xor
xchg
dec
xchg
sub
in
cmp
jge
lock
dec
pop
jecxz
xchg
dec
xchg
push
imul
fs
mov
push
pop
cmp
pop
shlb
or
adc
xchg
in
in
in
cmp
mov
std
loopne
ja
xchg
dec
test
xor
cld
mov
sbb
adc
ret
push
jo
lahf
xchg
mov
les
notb
cld
in
mov
pop
xchg
arpl
push
xor
cltd
pushf
sahf
pushf
lods
pushf
iret
pushf
incb
adc
dec
leave
xchg
leave
scas
push
push
cmp
imul
and
ror
jb
jb
adc
cmp
ret
inc
pop
xchg
sub
inc
pop
jnp
rcrb
cmp
jb
dec
xchg
pushf
cmp
cmp
push
pop
ds
inc
inc
fimull
leave
aas
xor
dec
mov
nop
fisttpl
mov
shlb
jno
dec
add
jb
dec
cmp
mov
mov
push
leave
popf
sub
rorl
xor
xchg
xchg
xchg
stos
xchg
int
fstpt
jb
sbb
xor
dec
pushf
push
pushf
popa
pushf
mov
pushf
sti
xchg
movnti
imul
mov
jge
cmp
cmp
pop
dec
outsb
rcll
xor
je
loop
out
in
pushf
mov
pushf
std
xchg
add
xchg
sbb
sub
leave
sub
dec
dec
pushf
popa
xchg
imul
sahf
leave
cmpsl
leave
mov
push
loope
andb
add
fcmovb
fs
ss
ds
pop
jb
pop
aad
das
adc
sarb
cmp
push
and
mov
dec
cmc
popa
cwtl
das
leave
inc
leave
mov
inc
mov
cmp
mov
into
es
push
xor
xor
pop
pop
push
push
js
lea
fcomps
jb
jb
jb
loop
jb
dec
outsb
or
int3
and
or
imul
xchg
xchg
ffree
mov
sub
jb
jb
jb
dec
mov
loope
sahf
adc
mov
dec
inc
inc
mov
mov
dec
xchg
cmp
daa
jmp
mov
cmp
leave
dec
leave
leavew
xchg
xchg
leave
mov
mov
test
scas
push
in
pushf
xor
jmp
sub
or
pop
dec
jb
pop
push
sarb
pop
cmp
and
xor
mov
jns
leave
movsb
sub
sbb
pop
jo
mov
and
leave
int3
sub
jle
xchg
fcomps
mov
dec
jmp
or
cwtl
scas
jb
jb
pop
and
sub
sub
pushf
cmp
push
out
mov
sbbb
sbb
mov
jp
shlb
int3
mov
dec
sarl
clc
push
or
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
nop
mov
dec
je
mov
leave
xchg
cmp
cmp
xchg
or
aam
fsubr
or
dec
cmp
hlt
dec
dec
push
add
or
adc
leave
sub
push
rorb
push
dec
pop
sarl
jg
mov
xchg
leave
cltd
sub
shrb
loope
ror
call
movb
xor
daa
sbb
es
pusha
cmc
inc
lcall
dec
jbe
clc
lahf
xor
mov
mov
daa
sti
and
xor
loop
push
daa
pop
adc
push
push
xchg
cld
lret
push
aaa
inc
pop
adc
or
js
mov
jo
out
add
and
cs
cmp
inc
and
loop
jecxz
xchg
nop
xchg
xchg
xchg
cwtl
jo
jb
jb
dec
test
cmp
add
shl
loopne
orl
or
cs
cs
cmp
or
xchg
sbb
jno
leave
inc
leave
dec
cmp
cmp
cmp
cmp
add
jo
je
cwtl
xchg
pushf
xchg
mov
add
imul
rorl
dec
inc
mov
jb
jb
jb
loopne
sti
leave
or
in
in
in
in
pushf
mov
jb
dec
js
mov
mov
jb
jb
jb
sbb
cmp
pushf
push
pushf
pusha
pushf
test
in
in
xchg
test
and
sub
cmpsb
inc
xchg
mov
xlat
in
in
mov
sbb
mov
xchg
daa
insl
and
lock
fnstcw
inc
mov
and
pop
xchg
push
dec
xor
dec
mov
dec
inc
orl
xchg
scas
xchg
mov
mov
cmp
in
in
in
in
in
sahf
ds
xchg
inc
sbbl
imul
xchg
mov
dec
movsb
ret
dec
leave
dec
into
dec
dec
in
out
dec
cmc
shlb
sbb
dec
es
xor
jb
jb
pop
dec
push
movsb
pop
dec
arpl
inc
jae
jns
jle
mov
lahf
leave
movsl
js
and
daa
lret
daa
shll
daa
loope
add
add
cs
pop
pop
push
data16
loop
cmp
mov
clc
mov
dec
dec
dec
lock
cld
xchg
or
inc
or
add
or
inc
dec
inc
movsl
ss
es
mov
loopne
lea
dec
sbb
jns
test
arpl
sub
in
pusha
call
fcoml
sbb
fisubs
loopne
xor
sub
rclb
aam
nop
das
mov
rol
pop
in
pop
push
dec
lock
sbb
mov
dec
js
das
push
add
pop
loopne
cmpb
mov
into
leave
int3
in
divb
or
adc
enter
das
and
int3
sub
dec
xchg
je
ret
or
loopne
xchg
in
mov
shl
call
lock
hlt
dec
clc
inc
sbb
sbb
pushf
sbbl
or
cmp
jae
scas
add
aad
mov
xchg
xchg
xor
pop
and
rolb
cmp
fistl
ljmp
sub
pop
mov
ljmp
push
pushf
in
repz
sbb
jecxz
adcl
in
pushf
mov
rclb
pop
inc
int3
xorb
dec
cmp
enter
dec
xorb
loope
push
je
pop
in
in
in
in
in
in
in
in
in
in
pushf
js
mov
mov
popf
leave
mov
leave
iret
lret
jmp
icebp
jb
jb
jb
sbb
ss
jb
jb
jb
jb
jb
jb
jb
jb
dec
xor
xchg
cmp
cmp
mov
xchg
xor
and
jo
sbb
cmp
xchg
pop
mov
jle
test
xchg
xchg
sub
ljmp
out
scas
push
lock
test
lods
imulb
into
add
cli
or
cmp
or
and
in
push
dec
cmp
ficoml
add
inc
xchg
dec
dec
loopne
dec
push
xor
and
dec
pusha
out
and
ret
add
xchg
adc
dec
dec
aam
leave
in
enter
push
dec
sbb
and
mov
mov
loope
shll
out
inc
xchg
pop
rolb
pop
dec
enter
xchg
cmp
into
and
cmp
leave
xor
leave
jnp
test
mov
xchg
leave
mov
dec
fcomps
out
push
dec
incb
cmp
xchg
or
jb
dec
and
sbb
xchg
aaa
mov
push
xchg
test
push
mov
or
sub
mov
je
mov
adc
call
sub
or
sbb
dec
cmp
push
dec
inc
dec
pop
sub
push
inc
in
xchg
xor
mov
pusha
lods
jmp
pusha
daa
add
fs
das
insb
adc
andb
sbb
pushf
pushf
xchg
pushf
xchg
xchg
fwait
ret
sbb
xor
push
and
jb
dec
mov
loop
fs
mov
mov
jb
jb
jb
dec
add
mov
loopne
test
cltd
leave
mov
imul
pushf
bound
xor
sub
xchg
aas
lret
cmp
mov
inc
jb
jb
dec
test
mov
xchg
pushf
in
lahf
test
mov
cmp
add
rcll
lock
xchg
clc
xchg
cld
xchg
add
adc
push
aas
push
pop
push
dec
xchg
fisubs
add
adc
lock
mov
cmp
sub
movsb
je
sub
pushf
mov
movsb
xchg
mov
jb
dec
lock
push
mov
leave
push
leave
push
sub
mov
adcb
mov
xchg
sbb
and
pushf
or
insl
mov
xchg
mov
cwtl
dec
mov
and
out
jecxz
xchg
jl
sub
leave
aam
adc
push
push
sub
daa
cmp
adc
add
cmp
adc
dec
xchg
dec
leave
dec
int
roll
push
pusha
inc
cld
in
add
fs
pushf
and
xor
xchg
jl
pusha
fwait
jmp
cmp
cmp
and
adc
sbb
push
test
sub
dec
xor
dec
cmp
inc
leave
inc
sub
movsb
cmp
cmp
popa
lods
or
leave
mov
mov
nop
sub
and
sub
mov
pushf
ficoms
lods
and
xor
cmp
cs
pushf
dec
xchg
dec
mov
push
xchg
xchg
mov
jl
andb
xchg
xchg
daa
cwtl
daa
pushf
daa
mov
and
lods
into
and
fsubl
loopne
in
call
fxtract
enter
adc
dec
xchg
push
xchg
pop
xchg
pop
int
movsl
insl
fcompl
les
push
lods
add
pusha
adc
xor
cmp
loopne
dec
lcall
or
push
inc
bound
and
out
inc
xor
lock
inc
pop
add
insb
ret
hlt
mov
jb
lods
jns
jp
jle
rolb
lret
pop
shlb
mov
call
push
mov
loop
popa
repnz
hlt
mov
insb
in
int3
das
je
mov
xchg
in
xchg
cli
push
int3
cmp
int3
aam
into
pop
fcompl
and
add
add
movsl
sub
aam
in
popf
test
je
or
inc
movsb
lods
jp
lods
add
mov
fsubrl
mov
push
jo
add
xor
cmp
fcomps
and
fs
pop
insb
or
je
fdivl
pop
adcb
dec
mov
int3
mov
push
popa
ss
sub
pop
cmp
pop
sahf
and
mov
jb
jb
jb
pop
fdivl
cs
or
jbe
imul
and
xor
aam
ret
cmp
jl
ficompl
pushf
mov
cwtl
dec
test
cmp
leave
jmp
je
sub
push
add
xor
inc
movsl
ss
lret
cmp
je
cli
pushf
jae
daa
mov
fadd
inc
in
call
lock
cmp
cs
push
xchg
add
push
and
sub
dec
xchg
dec
mov
jl
sub
and
mov
inc
loop
xchg
adc
mov
imul
call
call
pop
add
orb
sbb
lret
push
add
xor
lock
xor
mov
lods
xchg
pushf
dec
roll
stos
add
mov
addb
mov
mov
icebp
in
cmp
or
and
mov
insb
mov
mov
jmp
sub
and
mov
xchg
fimull
out
dec
testl
xor
jno
mov
mul
daa
mov
push
push
loopne
and
into
mov
pop
add
pop
push
jnp
xchg
cmp
loop
sub
dec
xchg
test
mov
sbb
ret
cmp
push
pop
xor
dec
jbe
xchg
dec
out
dec
cmc
dec
pop
inc
and
lock
dec
lea
dec
cld
ljmp
adc
cmp
pop
jp
cmpsl
clc
mov
mov
mov
ret
out
xchg
notb
cmp
push
add
push
dec
jge
insb
pop
je
loope
fdivrs
mov
pop
aaa
je
mov
mov
nop
mov
jo
add
insl
xchg
pop
loop
and
dec
inc
dec
outsl
and
pop
lret
aad
xchg
jmp
and
insb
dec
add
shll
leave
test
fidivrl
ret
je
mov
xchg
in
dec
cmp
enter
jb
imul
jo
pop
jno
out
test
ret
leave
ror
repz
dec
js
xor
mov
pushf
das
cltd
push
lds
dec
leave
pop
fiadds
pop
in
sub
and
enter
push
pop
leave
mov
and
push
dec
mov
push
mov
pop
pop
je
aas
hlt
jle
lret
dec
in
cmp
adc
push
es
test
mov
xor
addr16
call
xchg
mov
push
and
xor
fs
jae
mov
xchg
or
mov
inc
dec
push
sub
cmp
and
xchg
inc
pop
leave
cmpsb
cmp
or
addb
in
in
xor
push
xor
jle
add
mov
xor
fs
test
clc
mov
dec
fisttps
mov
cmp
sbbl
sbb
pushf
test
lock
jne
dec
in
es
and
sub
das
mov
jecxz
add
or
push
xchg
add
dec
icebp
ret
jge
jno
xor
mov
xor
insb
mov
push
sbb
xchg
movsb
inc
add
xor
cmp
daa
test
das
ss
mov
sbbl
mov
sbb
xchg
lds
sbb
jg
mov
xchg
popa
jle
leave
fwait
leave
lahf
leave
mov
dec
scas
push
add
pushf
mov
pushf
pushf
lret
xchg
iret
mov
xlat
in
xchg
xchg
test
or
bound
add
add
leavew
insl
sub
dec
and
mov
and
xor
stos
xchg
mov
dec
femms
cmp
cmpsb
dec
stos
dec
scas
dec
mov
mov
mov
dec
dec
lret
pop
rol
xor
xchg
ficoms
cli
sub
sbb
pushf
negb
cmp
adc
mov
and
in
inc
and
daa
mov
shl
jle
lcall
jnp
mov
loope
out
enter
xor
dec
orl
mov
nop
add
ljmp
jmp
jnp
loopne
dec
inc
in
xchg
xchg
mov
cmpsb
pop
cmp
leave
sbb
leave
inc
cmp
cmp
pop
rorl
sub
enter
int
sub
inc
cmp
iret
or
push
xchg
js
sbb
xor
test
xor
in
add
sub
adc
sbb
in
leave
bound
xorb
cs
cmp
shlb
or
push
cmp
fwait
xchg
lods
leave
adc
imul
sub
fnstcw
sbb
pushf
mov
mov
clc
in
leave
clc
enter
sbb
ret
aam
push
sahf
mov
xchg
out
xchg
push
adc
and
sub
xor
and
pusha
xchg
jae
jg
mov
sbb
xchg
mov
mov
leave
lock
dec
jnp
cmp
cwtl
pop
ficoms
pop
cmp
mov
mov
loopne
jb
dec
pushf
enter
xchg
mov
shlb
int3
and
in
mov
pop
adc
int3
sbb
xchg
and
sub
adc
sahf
push
je
push
test
lds
leave
in
xchg
loopne
push
call
sbb
sbb
dec
in
out
daa
push
popa
hlt
pop
cmp
das
fs
hlt
insb
leave
jo
and
test
in
inc
add
pop
ds
push
jge
xor
into
rclb
pushf
pop
mov
int3
in
in
mov
mov
pop
leave
add
or
nop
cmp
sbb
sbb
sub
dec
xchg
mov
je
push
jb
jb
jb
jb
pop
test
sahf
mov
mov
repz
mov
in
sub
sub
xor
xor
and
xchg
fidivl
mov
sar
dec
pusha
and
sub
xor
test
mov
mov
xchg
nop
xchg
pop
adc
movsb
stc
fdivs
mov
add
daa
in
lahf
test
lret
and
push
pop
push
or
bound
je
idivb
cli
aas
pop
stos
push
mov
sbb
and
pop
sar
jbe
xor
xchg
ds
mov
dec
imul
sub
insb
cmpsb
mov
xorb
xor
inc
cmp
loopne,pt
enter
and
xchg
lods
cmpsb
cmp
pop
push
xor
stos
scas
stos
out
inc
and
scas
push
adc
cmp
inc
add
pop
repnz
pop
or
or
icebp
lods
or
xor
shl
add
mov
mov
pushf
ret
pushf
iret
pushf
sub
outsl
inc
cmpl
xor
jle
cmp
inc
in
dec
in
test
push
lock
xchg
fs
jg
aam
hlt
mov
sub
and
xchg
jl
push
movsb
in
in
mov
mov
dec
les
int3
jg
rcl
stc
shlb
bound
cld
lret
cmpb
pushf
or
adc
xchg
xchg
inc
adc
shlb
cmp
cmp
lret
push
push
shlb
aam
or
in
lcall
lock
push
xchg
test
repnz
shlb
in
in
in
or
dec
sbb
jo
sub
dec
xor
jbe
push
js
or
in
in
aas
add
or
mov
cmp
dec
inc
dec
inc
dec
dec
pop
orb
test
cmp
xchg
int
pop
into
loopne
adc
add
and
sub
add
or
adc
clc
jbe
push
pop
mov
gs
jb
dec
xchg
cli
mov
fcmovne
jmp
jl
add
out
dec
sbb
insb
das
dec
cmp
pop
mov
jns
shl
enter
and
cmp
popa
es
insb
cmp
jae
inc
lea
mov
loop
aas
push
fsubrp
inc
sub
ss
cmp
gs
in
sbb
xchg
xchg
loop
mov
pop
dec
jne
sub
xchg
xchg
mov
mov
pop
rol
and
mov
pop
adc
jp
and
arpl
sbb
xchg
lahf
andl
xchg
fstpl
or
mov
sub
and
dec
xchg
and
mov
sahf
sahf
adc
pop
inc
repnz
out
and
and
jb
dec
inc
push
push
push
dec
ja
ficoms
xchg
push
outsb
or
mov
pushf
fists
add
in
mov
dec
fdivrl
outsl
sub
ficoms
test
cmp
into
dec
pop
mov
jb
pop
push
stos
daa
insl
loope
cmpl
xorb
lcall
pop
loope
cmp
ficoml
pop
dec
addr16
pop
add
pop
mov
hlt
xlat
jl
sbb
xchg
push
dec
inc
sbb
ret
rorb
sbb
xchg
jnp
xor
sbb
xchg
ficomps
add
dec
add
clc
daa
pop
inc
jo
cmp
push
dec
push
daa
add
xchg
lcall
xchg
out
xchg
cld
dec
dec
loopne
push
sahf
cld
es
sbb
xchg
pop
lods
clc
das
jg
sahf
test
mov
jb
add
push
jo
add
cwtl
pop
xchg
aaa
xchg
lock
je
jge
sub
pop
lahf
or
inc
adc
leave
fs
imul
pop
or
xor
inc
ret
inc
push
popf
popa
mov
lods
sub
leave
mov
push
mov
pop
xor
aam
test
inc
fwait
scas
in
mov
push
xlat
ret
push
push
xor
jle
bound
pop
dec
loopew
jnp
mov
ret
push
mov
dec
fsts
test
mov
xchg
add
mov
jne
mov
test
vpsubusb
push
or
dec
or
jb
pop
sub
pop
and
jge
popf
test
mov
jecxz
lock
in
popf
popa
xchg
pop
leave
es
or
push
dec
pop
mov
movsb
pop
scas
lods
mov
enter
fnsave
ljmp
test
dec
or
insl
ror
leave
xchg
cmp
cmp
iret
leave
cmp
sub
aaa
dec
and
push
xchg
pop
jb
dec
lcall
leave
dec
mov
std
in
cmp
sbb
gs
cmp
xchg
xchg
dec
mov
aad
call
cltd
pop
addr16
mov
push
cmp
lea
push
and
dec
fcoml
adc
in
xchg
adc
push
loopne
gs
popa
ficomps
pop
pop
in
js
xchg
in
sub
pop
jnp
fdivrs
mov
rorb
ds
test
cmp
push
dec
adc
cmp
fs
popf
popf
inc
into
mov
mov
cmp
sub
xor
push
popa
leave
xchg
sub
cmp
daa
mov
pop
test
sub
xchg
dec
pop
pushf
or
add
repz
ljmp
movsl
pushf
std
movsb
adc
cld
add
xor
push
and
xor
mov
scas
in
in
in
popf
andl
sub
pop
inc
cmp
cmp
and
pushf
inc
nop
dec
into
jb
jns
mov
and
das
and
xchg
and
in
cmp
pop
rcl
pop
jns
int3
roll
ss
push
loop
inc
xchg
mov
adc
sbb
lock
cmpb
movsb
cli
repz
fmull
cli
xchg
and
cmp
xchg
test
push
sbb
jle
mov
lret
mov
cli
lret
cmp
loopne
cli
cli
and
cmp
sub
imull
idivb
pop
cmp
outsl
add
mov
add
mov
loope
out
leave
or
enter
xor
xchg
push
push
ja
movsb
jb
jb
dec
cmpsb
addb
jmp
xorl
cmp
and
mov
mov
dec
xchg
push
aad
in
mov
push
xchg
sbb
cmp
ret
fistl
pop
add
xchg
sahf
xchg
lods
jge
in
jl
cmp
das
xrelease
pop
daa
adc
ss
insb
imul
lock
test
adc
mov
xor
mov
mov
mov
xchg
and
mov
dec
rol
cld
out
jl
leave
es
sbb
das
pop
pop
subb
clc
mov
stos
pushf
mov
mov
incb
xor
xor
lock
dec
and
xchg
je
sbb
xchg
mov
out
mov
es
push
test
scas
and
test
mov
and
call
mov
pop
mov
mov
inc
ret
cmp
xchg
mov
cmp
add
orb
mov
jb
push
jb
dec
insl
push
mov
test
leave
mov
lcall
pusha
mul
push
cmp
sub
ss
and
xchg
xchg
dec
mov
xchg
lds
out
add
add
popa
jp
leave
inc
cmp
cmp
arpl
xchg
ja
add
xchg
test
lock
mov
in
sarb
mov
daa
insl
js
jb
pop
nop
sub
or
mov
out
push
sbb
imul
dec
xchg
pop
js
dec
jne
loop
in
sahf
insb
adc
nop
sbb
pushf
out
pop
mov
test
or
popa
xchg
push
xchg
fistpll
push
xor
cmp
lock
pushf
sbb
xchg
addl
xchg
lock
add
or
adc
or
xchg
pop
push
pop
outsl
mov
sahf
mov
dec
loop
jmp
xchg
rcrb
es
sbb
pushf
inc
xchg
addr16
dec
daa
xchg
mov
shl
xchg
sbbb
jo
jbe
dec
or
inc
pop
jb
pop
push
mov
test
cmp
shrl
push
dec
jecxz
xchg
adc
mov
sub
add
dec
push
test
jg
mov
push
mov
in
mov
jnp
sbb
dec
push
push
loopne
dec
jb
jb
dec
push
or
push
sbb
xchg
xchg
mov
lahf
loope
out
imulb
adc
and
push
test
dec
andl
sbb
pushf
lahf
xchg
mov
cli
fmuls
lock
xchg
add
and
sbb
cld
push
dec
inc
lock
pop
or
enter
andb
leave
ror
loopne
in
sub
sub
mov
and
call
out
dec
mov
das
lahf
test
mov
ljmp
sbb
mov
dec
loope
pop
leave
imul
test
mov
and
fistl
jb
jb
pop
push
push
cwtl
and
fadd
pop
inc
or
xchg
push
push
mov
lret
jb
dec
fiadds
mov
push
xor
xchg
outsl
cmpl
xchg
xchg
jle
sbb
xchg
mov
push
cmp
inc
jo
dec
arpl
xchg
mov
mov
cwtl
in
popf
inc
pop
cmp
fdivrl
inc
jle
leave
pop
das
push
mov
mov
int3
pop
mov
mov
leave
idivl
push
notb
dec
sbb
mov
jnp
subb
xor
fdivrl
jmp
cmc
inc
loopne
push
jbe
jmp
fbld
inc
and
mov
sbb
pushf
cmpsl
xchg
mov
out
xchg
test
out
mov
mov
adc
inc
fcoms
pop
insb
cwtl
das
mov
adc
je
aam
loope
add
adc
sbb
rcrl
xchg
mov
xchg
mov
shlb
xchg
ja
cmp
mov
dec
mov
fdivs
or
xchg
mov
fmulp
xchg
shrl
sub
cmp
fiaddl
out
aaa
adc
loopne
pusha
mov
mov
mov
dec
cmpsb
dec
mov
pushf
sbb
xchg
aad
cwtl
add
out
inc
pop
jo
into
add
dec
pop
mov
arpl
push
push
add
xchg
dec
lods
pop
adc
ficompl
leave
xchg
test
cmp
and
mov
or
mov
cmp
cmp
mov
imul
scas
mov
jo
shl
ftst
out
add
add
and
aaa
leave
push
leave
popa
leave
outsb
push
sbb
jmp
or
lock
mov
pop
add
and
xchg
pop
xchg
imul
lock
mov
mov
push
adcb
hlt
sbb
xchg
dec
lods
push
jge
jle
in
mov
add
fadds
sbb
cmp
push
xchg
and
mov
lret
push
push
in
icebp
push
in
push
das
adc
inc
in
xchg
push
pop
arpl
xchg
pop
inc
pop
mov
jp
xchg
xchg
fnsave
js
mov
addl
cmp
push
outsb
fldl
mov
lcall
pop
ffree
inc
repnz
lcall
or
xor
jb
dec
jb
lock
pop
lea
sahf
mov
mov
pop
push
cmp
and
cmp
sub
jae
ret
cmp
ret
je
divb
sub
cmp
das
gs
push
jp
ret
cs
push
pushf
into
pushf
fistl
xor
in
in
popf
add
cmp
das
pop
add
cmpsb
pop
test
ret
ftst
out
in
xchg
loopne
or
sub
je
sbb
test
and
lret
xorl
xchg
in
xlat
add
call
in
in
in
popf
add
mov
mov
cli
shrb
cld
out
push
dec
pop
cld
adc
and
mov
inc
in
mov
je
js
cmp
rorl
jp
inc
jmp
xchg
add
sbb
and
cmp
push
loopne
push
ja
fcompl
or
pop
push
into
adcb
dec
stc
mov
in
mov
or
push
popa
sub
inc
push
mov
pop
xchg
sbb
fmull
in
xchg
xchg
das
and
outsl
loope
mov
xchg
outsb
and
dec
fsub
dec
repz
mov
pop
pop
daa
loopne
inc
in
mov
jp
fmull
fdivrl
mov
aas
push
test
dec
shrl
xchg
test
fcoml
sbb
xchg
xlat
lods
out
imull
push
pop
lods
sbb
add
pop
pop
fdivrl
outsb
and
leave
scas
addl
ficoms
dec
in
sub
and
xor
jo
fidivrl
inc
and
leave
xchg
push
mov
lods
int
or
loope
mov
dec
daa
ficompl
and
cld
test
mov
test
mov
lds
fcmovb
jle
push
loope
fisubrl
cmp
pop
dec
aaa
push
clc
adc
sbb
jge
mov
xchg
lahf
lock
mov
lock
or
in
lret
mov
cmp
ja
cwtl
pushf
cmpsb
xchg
mov
sbb
in
in
popf
popa
lock
leave
and
mov
dec
addr16
jle
mov
adc
leave
push
je
idivb
xchg
dec
outsl
and
push
mov
repnz
adc
es
dec
fisttpl
les
inc
sub
leave
dec
jnp
dec
imul
adc
imul
andb
cmp
sarl
in
lock
adc
cmp
mov
aaa
in
mov
fidivrl
jo
jge
push
dec
xchg
push
cmp
leave
ljmp
sbb
xchg
dec
mov
pop
js
das
mov
pop
mov
data16
incl
cmp
and
test
mov
xlat
and
test
cmp
xor
sub
jl
mov
dec
in
or
cmpsl
sub
and
xor
leave
mov
in
mov
cmp
in
xchg
inc
xchg
sub
xor
add
aas
adc
and
xchg
lods
lret
dec
fsubl
sub
add
bswap
push
or
in
xchg
mov
xchg
lcall
out
out
pushf
push
nop
sbb
dec
insb
sub
mov
fwait
pushf
mov
pop
xor
xor
fs
xchg
inc
sahf
cmp
and
add
sbb
cmp
dec
test
test
popa
inc
cmp
and
dec
scas
pop
add
mov
and
mov
sbb
add
repnz
inc
add
addr16
sbb
adc
mov
adcb
mov
xchg
mov
pop
jbe
jl
dec
ds
mov
in
pushf
pop
adc
out
and
or
test
or
xchg
and
xchg
data16
xchg
int3
je
js
jne
xor
addb
enter
mov
mov
lock
in
mov
push
in
xchg
push
rcrb
cld
or
mov
hlt
cmp
dec
xchg
jecxz
adc
jbe
sbb
cmp
adc
xchg
mov
mov
sbb
nop
cmpsl
cmp
xchg
xchg
and
int3
into
xor
mov
mov
inc
and
daa
and
clc
adc
jo
adc
mov
nop
or
test
xor
sub
and
xor
jb
push
ficomps
add
sub
sub
das
flds
jp
or
je
sbb
xchg
pop
loopne
mov
pushf
test
and
mov
outsb
xchg
ljmp
in
in
call
fxtract
imul
or
mov
adc
sub
int3
add
in
xchg
pop
push
push
daa
data16
insl
and
sub
inc
add
cmp
push
lods
add
xchg
adc
ljmp
dec
int3
rolb
xchg
movsb
mov
mov
cmp
lock
dec
insl
ret
jo
jb
dec
out
into
dec
pop
loop
mov
cmp
pop
daa
jg
fidivrs
mov
nop
adc
add
movsl
cmp
js
dec
add
adc
ret
push
aad
call
pop
inc
mov
pop
inc
leave
dec
aas
and
popf
mov
out
xchg
repz
cld
inc
leave
sub
push
adc
jb
movsl
lock
lods
popf
popa
sub
jb
adc
nop
and
dec
sbb
popf
pop
scas
mov
mov
sarl
les
pop
mov
mov
dec
leave
xorl
and
les
mov
mov
and
call
add
xchg
adc
add
xor
jnp
xchg
cmp
popa
orb
pop
jg
adc
rcll
dec
in
push
nop
enter
push
xchg
and
dec
xchg
bound
inc
sbb
jb
dec
scas
fs
mov
adc
or
mov
adc
adc
adc
sbb
jp
enter
pop
xor
je
push
pop
test
daa
gs
test
fimuls
adc
sbb
push
xor
in
xchg
mov
mov
xor
jno
jne
add
lret
jecxz
pop
loop
and
call
push
inc
sub
iret
jo
pop
pop
push
inc
fnstcw
testb
mov
xor
mov
inc
adc
or
xor
popa
mov
jnp
movsb
jp
and
lds
dec
push
out
adc
cmpsb
jb
dec
lcall
cmp
pop
lcall
sbb
or
push
mov
sub
repnz
pop
cmp
mov
dec
dec
test
adc
rcrb
arpl
jb
jb
jb
dec
ja
cmp
orl
loopne
xchg
mov
push
fwait
and
push
xchg
scas
test
daa
mov
mov
leave
ret
leave
leave
lret
cmp
mov
filds
jmp
xor
push
lret
inc
cmp
popa
dec
cmp
cmp
daa
pop
fadds
pop
mov
xchg
das
loope
pusha
pop
cmp
inc
and
mov
pop
jb
pop
pop
orb
mov
and
loopne
jnp
inc
mov
leave
xchg
sbb
jl
push
xchg
adcl
sbb
xchg
scas
mov
and
lret
jl
sbb
xchg
xlat
addb
and
xchg
div
xchg
notl
xchg
sub
lret
adc
xchg
and
xchg
sbb
mov
cmp
inc
xor
leave
loop
sub
sbb
xchg
addr16
mov
sbb
xchg
jnp
push
xor
xchg
xchg
in
jb
fwait
loope
mov
dec
scas
loope
mov
mov
dec
dec
lret
dec
iret
push
cld
dec
xlat
les
cmp
xchg
out
pop
test
daa
repz
mull
sti
and
stos
push
test
dec
or
dec
adc
jb
pop
pop
sub
leave
xor
cmp
daa
aas
rcrl
cs
push
or
loope
addr16
add
lods
pushf
das
das
popa
rorb
inc
cmp
rorl
call
dec
dec
push
jbe
adc
daa
jbe
lods
pop
xchg
loop
mov
pop
les
and
clc
and
ret
sbb
xchg
xor
xchg
leave
or
pop
testb
jne
rcr
imul
test
jmp
or
xor
cld
mov
inc
lahf
loopne
sub
in
and
js
or
fs
rclb
adc
sub
xchg
loop
in
loope
push
and
daa
mov
or
cld
mov
insb
ret
rcrb
pop
mov
jle
jp
lods
orl
pop
xchg
repnz
in
mov
test
push
and
test
sbb
dec
test
pop
cld
jo
je
insb
jb
dec
mov
mov
data16
cmpb
and
fs
pop
das
adc
pop
and
enter
jl
dec
cmpb
xchg
insb
and
mov
ljmp
daa
mov
dec
mov
dec
add
ret
loop
jecxz
xchg
cwtl
cld
es
dec
loopne
inc
and
jb
mov
in
shl
and
not
xor
je
js
dec
aam
mov
inc
fstl
or
out
pop
mov
cmp
pushf
scas
xchg
mov
adc
out
out
das
push
fmuls
sub
dec
inc
testb
xchg
outsb
xchg
test
lea
ja
dec
daa
xchg
jge
push
adc
aas
adc
jle
in
in
popf
add
push
movsb
push
xchg
push
mov
enter
sarl
jmp
sbb
or
sub
or
push
loopne
jl
fistpll
in
jmp
xor
aas
push
ds
dec
pop
jo
jb
dec
cltd
ret
je
sbb
pushf
inc
xchg
dec
mov
mov
sbb
xchg
mov
repnz
dec
sub
mov
pop
add
daa
jnp
fs
adc
lods
add
out
sub
cmp
or
test
scas
and
scas
imul
cmpb
movsb
ret
push
add
call
or
dec
pop
into
je
mov
pop
mov
sub
mov
jg
jb
dec
and
bound
adc
inc
sub
xchg
cld
pusha
in
pusha
dec
enter
call
lds
push
shlb
cmp
or
daa
sbb
push
je
sub
int
out
and
jne
mov
sub
int3
or
mov
aam
or
jb
jno
mov
shlb
sbb
es
cmp
or
decl
das
or
pop
jb,pn
dec
mov
repnz
dec
sub
cmp
nop
inc
out
cmp
std
je
mov
push
rcr
inc
xchg
ljmp
pop
orl
test
clc
cmp
cmp
push
cld
jo
xchg
inc
clc
out
mov
mov
jb
pop
add
ljmp
fwait
xchg
ret
leave
xor
leave
fxch
in
sub
push
sub
in
mov
or
cld
mov
cwtl
pop
test
daa
std
and
ja
and
push
xlat
add
mov
fs
lea
sub
mov
cmp
push
es
add
popa
data16
das
sbb
and
dec
xor
add
leave
mov
shll
add
cld
ret
mov
mov
or
data16
dec
out
movb
add
fs
push
xor
or
mov
adc
sbb
int3
pop
pop
xchg
sub
es
mov
cmc
outsl
sbb
jne
ljmp
leave
dec
push
inc
loope
mov
shrb
or
and
dec
pop
mov
jecxz
xchg
fstl
add
or
mov
in
mov
orb
daa
pop
and
add
dec
inc
pop
push
pop
sahf
add
sub
push
jl
mov
mov
pop
rolb
sbb
xchg
ret
inc
nop
loop
jle
idivb
sti
daa
or
out
cmp
cmp
jl
ss
mov
outsb
fsts
pop
cmp
ret
push
add
mov
adc
into
cld
addb
test
xor
mov
mov
sti
lret
in
mov
lock
out
and
jae
cli
mov
ret
aaa
leave
jns
jle
sbb
sub
inc
push
cmp
mov
fstl
cmpsl
cmp
sub
lock
cltd
sbb
jne
push
leave
mov
mov
aas
or
mov
in
lcall
sbb
ds
mov
nop
inc
cmp
pusha
mov
cmp
xchg
mov
adc
mov
mov
inc
test
orl
and
hlt
in
mov
xor
and
cld
das
outsl
loope
mov
pusha
aaa
or
cmp
and
mov
popa
cmp
cmp
int3
test
sub
daa
shrb
mov
nop
lods
add
mov
dec
jns
pushf
mov
sbb
xchg
ljmp
xor
pop
sbb
or
or
mov
adc
les
dec
jb
pop
adcb
fmull
xchg
mov
adc
mov
dec
icebp
dec
push
and
inc
in
in
in
mov
jb
pop
cltd
enter
cs
adcb
fcompl
in
xchg
divb
pop
add
sbbb
push
pop
test
daa
outsb
test
cld
repnz
lahf
inc
test
jg
in
adc
xchg
mov
or
sub
jo
xchg
push
hlt
adcb
mov
test
cmp
dec
shrl
ret
aam
xchg
ret
hlt
jb
out
mov
inc
mov
mov
jle
cli
or
outsb
jb
jb
pop
jbe
lcall
inc
sti
and
jle
jbe
icebp
les
xchg
pop
clc
ret
dec
xor
inc
jmp
sahf
push
xchg
push
jmp
or
int3
mov
dec
inc
mov
leave
clc
sub
jno,pn
leave
pushf
imul
mov
dec
xchg
xor
stos
pop
xchg
pop
sbbb
jle
cmpsb
mov
mov
mov
shlb
loop
repnz
cli
inc
add
or
daa
mov
pop
xchg
fs
pop
mov
jo
dec
push
pop
je
sahf
mov
clc
sub
adc
pop
mov
dec
jo
cwtl
pop
test
arpl
nop
inc
xor
mov
dec
pop
xchg
add
arpl
add
xchg
outsl
aam
pop
ja
movsb
jg
xchg
lcall
pusha
call
or
pushf
sahf
stc
and
dec
push
sub
jb
jb
push
call
inc
pushf
add
mov
nop
push
aaa
cmp
dec
mov
js
mov
xchg
xor
xchg
daa
cmc
and
cmp
mov
pop
ret
movsl
pop
dec
jb
pop
or
dec
jb
jns
mov
cld
mov
sub
pop
rorl
add
dec
pop
push
ljmp
sub
sub
inc
imul
pop
jbe
inc
andb
clc
push
dec
shll
in
and
sbb
xchg
ja
push
xchg
ret
lcall
vrsqrtss
js
dec
out
jl
filds
in
xchg
ss
xor
cmpb
pop
mov
cmp
jae
cmp
je
xchg
in
sahf
adcb
mov
mov
add
add
pop
and
push
daa
pop
daa
imul
jp
mov
push
sbbl
xchg
mov
or
fbld
in
cmp
pop
and
add
hlt
lret
xchg
and
mov
sbbb
pop
pop
mov
jb
lcall
xchg
push
sub
fsub
pop
mov
ljmp
jl
sub
das
and
popa
xchg
outsb
rolb
xchg
lock
in
in
mov
int
sub
in
mov
adc
and
cmp
xchg
pop
xchg
push
outsl
jo
jb
jb
dec
xchg
or
movsl
fmull
adc
xchg
mov
pop
incl
sbb
xchg
inc
xchg
inc
lock
jb
pop
leavew
fidivrl
dec
mov
pushf
scas
xchg
mov
pop
lds
enter
xchg
inc
sti
xchg
or
loopne
pop
pop
js
xor
enter
bound
cmp
dec
pop
js
inc
sbbl
push
sub
add
repz
out
pop
ret
pop
dec
fs
addr16
addb
in
pop
mov
loopne
jo
daa
adc
out
dec
sbb
lahf
xchg
pop
push
movsl
cli
mov
mov
test
push
call
mov
jg
ds
jo
fmuls
mov
adc
xor
and
in
insb
cmp
cmc
sub
mov
in
lcall
xchg
lods
xchg
rcll
dec
imul
inc
xchg
in
dec
push
mov
lahf
inc
loopne
dec
fiadds
lea
insb
push
pop
and
pop
add
fsubrs
or
and
push
ficoms
inc
mov
pop
in
mov
dec
hlt
mov
je
dec
aam
or
xor
sbb
imul
fidivrs
cltd
xchg
scas
out
and
sbb
ds
daa
cmpsb
xchg
lods
ret
and
imul
pop
mov
ds
pop
int3
adc
mov
divb
or
cmp
loope
lea
dec
fcoml
aam
das
push
out
jl
pop
dec
push
add
stos
test
daa
into
add
cmp
jo
lock
iret
loopne
mov
lods
lock
or
outsw
ret
adc
xchg
or
sub
xor
pop
mov
shl
nop
sbb
in
adc
or
sub
pop
and
mov
mov
sarb
jl
cs
popl
xorb
enter
mov
in
scas
add
lahf
mov
mov
ret
mov
inc
fiadds
or
pop
loopne
ss
mov
and
inc
lea
jo
dec
xlat
ret
jle
adc
idivb
inc
inc
sti
and
adc
rorb
adc
ret
shlb
push
pop
in
loop
cmp
das
xor
arpl
jne,pn
xchg
sarb
orb
mov
mov
ds
or
das
add
xor
sub
cmp
jb
sbb
xor
pushf
pop
pushf
daa
mov
xchg
arpl
push
adc
and
fwait
push
xchg
outsl
or
mov
jp
mov
mov
xchg
js
daa
movsl
roll
jle
lock
movsb
xor
loopne
push
in
xchg
test
mov
cmp
in
xchg
xchg
cmp
mov
hlt
lret
push
mov
leave
mov
xor
jb
dec
xchg
add
sahf
das
mov
ret
push
add
cmp
das
movb
cmp
clc
sub
lock
in
in
xchg
xchg
add
leave
or
and
dec
push
dec
sbb
shlb
inc
add
add
stos
or
leave
pop
sub
and
pop
xor
push
movsl
aas
inc
xchg
je
pushf
xchg
dec
mov
inc
mov
loopne
lock
loop
push
les
dec
clc
mov
xor
loop
cmp
jns
cld
xchg
lock
xchg
jno
inc
hlt
mov
dec
dec
push
sbb
leave
data16
cmpsl
dec
stos
dec
mov
in
daa
icebp
and
dec
xchg
test
loopne
mov
adc
sarl
and
notb
in
popf
pop
insb
sbb
xchg
out
in
pop
dec
lods
pushf
leave
sub
repnz
dec
repnz
jo
ss
aas
pop
or
add
xchg
repnz
leave
rcr
sub
shlb
je
jae
adc
mov
and
or
pop
aas
cmp
cmp
fs
push
pushf
xchg
lods
mov
nop
jmp
xchg
daa
popf
and
flds
mov
add
xchg
xchg
mov
mov
subl
adc
add
pushf
ds
pop
pushf
gs
imul
mov
inc
cmp
or
jg
lcall
mov
fsubs
lock
loope
sub
mov
js
jb
pop
repnz
adc
and
decl
pushf
jb
xor
cli
in
lcall
fsubrp
jg
pop
jecxz
test
rclb
and
cmc
mov
scas
dec
jg
xor
xor
fists
xchg
aas
lock
clc
in
mov
or
mov
in
cmp
fs
and
jg
cmpsb
in
in
popf
inc
jbe
sub
dec
lods
sbb
pop
sarl
or
movsb
test
in
scas
mov
xor
dec
daa
fwait
inc
enter
pop
fs
inc
jmp
mov
sahf
jae
or
leave
in
stos
daa
or
xor
and
ja
test
sahf
mov
cmp
icebp
lret
mov
cs
bound
push
dec
push
dec
insb
sbb
mov
mov
mov
and
imul
testb
mov
lods
xchg
inc
push
imull
inc
inc
aad
adc
loopne
pusha
in
sahf
mov
insb
mov
inc
aam
cld
dec
or
mov
lret
imul
test
ljmp
sub
sbb
push
nop
inc
jo
orb
hlt
pop
xchg
lret
repnz
mov
jb
jb
dec
mov
stos
mov
inc
frstor
in
xor
test
loopne
xor
jne
push
mov
adc
test
daa
push
insb
pop
jb
dec
mov
shl
xchg
call
inc
data16
push
jb
dec
jae
fcoms
mov
ds
stc
in
and
imul
rcr
sbb
cwtl
dec
bound
hlt
leave
sbb
mov
cwtl
jo
ss
sub
sub
mov
mov
fs
pop
and
add
aas
and
fmull
loopne
testb
pop
add
push
gs
and
dec
push
sub
sub
and
lods
loop
into
and
out
cwtl
mov
dec
test
clc
mov
push
or
pop
test
sbb
aas
inc
les
rclb
jb
xor
stos
dec
and
mov
xchg
cmc
je
and
jnp
lcall
nop
or
enter
loopne
hlt
mov
jo
pop
movsl
dec
dec
movsb
mov
in
xchg
test
jae
mov
loop
cld
clc
cmp
mov
cli
adc
jmp
push
xor
ficoms
test
xchg
iret
loopne
push
mov
sub
cmp
lcall
pop
cmp
data16
or
or
and
mov
adc
clc
scas
jb
jb
dec
inc
mov
imul
rcrb
lcall
xchg
imul
xchg
mov
pop
lret
mov
je
shll
fsubrp
jb
add
jp
into
dec
cmpsb
cmp
rolb
mov
push
dec
push
pop
jmp
ret
pop
xchg
or
movsl
xchg
cmp
mov
icebp
inc
lods
sub
dec
iret
call
add
cmpsb
repnz
mov
cmp
or
ds
into
adc
lock
push
xchg
add
jo
and
sub
or
lods
adc
mov
jbe
jbe
sub
das
jle
adc
dec
dec
pop
andb
cmp
adc
fmuls
xchg
dec
dec
sub
dec
push
sub
adc
les
inc
cwtl
rorb
adc
dec
cmp
dec
push
call
mov
in
mov
fcompl
gs
ret
xchg
movsb
xorl
xchg
jmp
or
and
dec
and
das
dec
cltd
lea
sti
jp
cmp
andb
mov
and
lods
mov
in
xchg
test
lret
loope
cli
enter
xor
dec
iret
ret
xor
xchg
jo
fcoml
les
or
daa
je
sbb
xchg
xchg
dec
insb
rcll
jb
mov
pushf
pusha
xchg
gs
insl
in
mov
lock
and
es
mov
push
push
in
sbb
pushf
pop
pushf
bound
xchg
jb
push
jp
jle
jb
jb
jb
jb
jb
jb
dec
sahf
mov
cmpsb
in
mov
or
mov
pushf
xchg
lret
shl
jbe
fidivrl
adc
imul
cli
scas
or
mov
dec
push
push
push
push
push
dec
and
cwtl
jb
jb
pop
xor
jl
popa
jle
leave
push
insb
orb
mov
in
movsb
adc
mov
rolb
in
das
push
inc
scas
es
lods
inc
dec
dec
dec
imul
jb
jb
jb
pop
mov
cmp
das
faddl
dec
orb
add
or
and
cs
dec
out
mov
andb
mov
jle
mov
sbb
loope
dec
out
or
pusha
and
or
leave
xchg
cmpsb
add
mov
push
jb
pop
cmp
mov
test
mov
mov
xor
orl
dec
pop
call
xchg
mov
shll
push
pop
pop
sub
js
in
in
xchg
pop
pop
cmpsl
daa
stos
daa
ret
mov
sub
dec
or
push
dec
orl
dec
mov
mov
push
sub
dec
xchg
popa
data16
or
leave
lds
push
aaa
add
pop
jg
sub
je
adc
rol
dec
adc
sbb
xchg
inc
fldl
lock
mov
lret
das
in
loopne
adc
imul
xchg
arpl
rorb
in
mov
sbb
shlb
leave
xchg
pusha
or
in
mov
cwtl
fcomps
das
fcomi
jo
popf
xchg
fisubrl
cld
lock
lret
lock
mov
push
loop
fsts
loop
imul
pop
in
cltd
xchg
inc
cmp
push
mov
jb
negb
out
push
out
dec
test
pop
adc
jbe
nop
add
xor
lods
pop
aaa
adc
jo
jb
dec
mov
or
cmp
das
dec
inc
adc
jno
out
dec
cwtl
cmp
or
xor
push
inc
cli
dec
push
popa
add
shrb
loope
cmp
push
xchg
lcall
popf
push
pop
and
out
and
mov
mov
xlat
popf
js
popf
jp
pop
flds
jge
stos
les
and
or
stos
xchg
das
cld
sub
aam
pushl
andb
shll
ds
bound
lcall
or
mov
cmp
icebp
sbb
cmp
cmp
outsb
inc
sbb
xor
arpl
iret
popf
or
add
mov
das
cmp
out
test
push
jle
push
dec
sbb
pop
and
leave
inc
push
lock
movsl
bnd
lock
jl
adc
xor
leave
shl
les
mov
push
gs
popf
shr
es
xchg
jns
or
mov
pop
fildll
xchg
mov
test
xchg
out
push
cli
sbb
lcall
test
or
jb
mov
lock
in
mov
dec
pop
mov
in
mov
jg
add
cmp
cltd
jmp
repz
push
das
or
int3
adc
cld
mov
cli
push
jl
mov
mov
rorb
cmp
aam
adc
xchg
in
ss
nop
and
rolb
inc
sub
push
sbb
dec
mov
mov
cmp
daa
roll
loopne
xor
je
xor
dec
pop
sahf
pop
call
inc
or
xchg
and
ljmp
ficoms
testl
mov
cmp
and
jns,pt
xchg
mov
loopne
mov
push
lods
mov
inc
push
int3
jae
adc
dec
dec
or
xchg
adc
test
push
jb
in
mov
mov
pusha
leave
mov
pop
shrb
imul
inc
dec
or
enter
daa
or
inc
stos
add
lock
lods
fs
mov
dec
fs
and
mov
sub
ja
cli
or
hlt
dec
and
cmp
mov
inc
iret
mov
adc
je
ret
push
xchg
insb
into
in
in
in
sub
add
je
mov
jb
or
mov
adc
pop
dec
sbb
xchg
mov
mov
xchg
jle
popf
stc
js
jmp
or
and
enter
rcrb
outsl
call
or
sarl
aas
mov
das
push
push
movsb
clc
pop
mov
dec
and
lahf
in
in
in
mov
sbb
test
mov
fisubl
fxch
sbb
jb
push
daa
sub
pop
ds
popa
lcall
inc
pop
push
or
inc
xor
jo
subl
mov
sub
scas
enter
push
cmp
pop
and
mov
jb
dec
xchg
orb
mov
in
in
in
pushf
jle
fimuls
bnd
adc
subb
pop
pop
push
loopne
popf
popf
in
stos
clc
pop
loopne
sbb
pushl
sbb
xor
mov
xor
xor
or
pop
shll
pop
and
mov
inc
test
adc
lock
xchg
push
insb
jb
mov
andl
enter
test
das
lcall
mov
shr
jb
jb
jb
ljmp
inc
push
xor
dec
adc
popa
mov
das
and
cmc
mov
cmp
pushf
and
mov
call
or
rclb
mov
mov
and
cmc
jecxz
and
xchg
pop
pop
push
cmp
xor
loopne
ja
adc
xchg
popa
test
cmp
and
push
lods
out
imul
add
scas
xchg
mov
jle
iret
rolb
or
cmp
out
pop
jl
fidivs
movsb
jo
rclb
mov
jp
mov
and
test
aaa
cltd
sarl
lock
xor
dec
push
movsb
cwtl
mov
or
stos
inc
adc
cmp
mov
into
inc
cmp
sbbb
inc
in
rol
pop
and
adcb
inc
adc
cmp
mov
in
das
test
lock
rcll
imul
push
pop
outsb
mov
sub
ja
stos
sub
cmp
das
adc
ret
leave
sarl
sbb
jle
std
cld
out
sbb
xchg
sbb
inc
pop
xchg
mov
mov
cmp
daa
mov
mov
aam
hlt
xchg
into
sbb
pushf
inc
xchg
insb
mov
movsb
shlb
push
xchg
mov
insl
inc
leave
sbb
push
pusha
push
lret
test
and
popa
movsl
lea
cmp
test
xchg
and
xchg
and
es
sub
sub
push
sbb
inc
loopne
push
xchg
pushw
imul
mov
shlb
mov
js
leave
mov
sbb
daa
inc
js
pop
pop
loopne
imul
daa
mov
lret
and
ljmp
adc
fdivrs
mov
push
lcall
ret
sub
pushf
iret
dec
in
icebp
shlb
dec
test
in
mov
outsb
jle
or
je
testl
push
leave
es
dec
and
sub
scas
and
aas
loop,pn
shll
jno
sbb
xchg
xor
jbe
mov
fnstenv
out
mov
test
das
jbe
les
es
lret
test
and
mov
mov
xlat
adc
sarb
jecxz
movl
sbb
adc
in
mov
enter
in
pop
pop
std
lods
ljmp
and
xchg
std
xchg
sub
adc
mov
lea
xor
add
add
cmp
aad
and
gs
nop
jl
sbb
xchg
adc
bound
sarb
in
in
pusha
push
mov
cld
dec
pop
lods
sub
xchg
fs
and
mov
add
pop
pop
sub
xchg
out
dec
aam
dec
xchg
rcll
ret
aam
sbb
pushf
ljmp
push
cmp
call
test
cmp
ret
leave
leave
inc
push
and
loop
cmp
add
aas
aad
mov
stos
xor
cld
push
xor
sub
into
cmp
test
add
cmp
out
ret
push
xor
bound
insb
addb
add
jno
add
in
sahf
mov
and
push
fimuls
test
xorb
addb
cmp
and
cmp
xor
push
loope
or
push
add
popf
test
inc
in
add
mov
jp
arpl
xor
mov
xchg
test
xchg
or
loopne
xor
fs
data16
loop
mov
xchg
cmpl
pop
pusha
lock
sub
in
xchg
or
sbb
xchg
es
outsb
cmp
sub
cli
or
lods
sub
mov
adc
shr
lret
mov
mov
in
in
cmp
mov
pop
loopne
mov
test
in
adc
jp
nop
fucomi
shlb
sub
xorb
loope
movsl
ret
das
test
lret
and
test
add
pop
mov
arpl
mov
jb
jb
pop
test
sub
imull
and
popa
and
aas
pop
mov
cmp
jb
pop
ja
mov
or
mov
shrl
push
fiadds
rcll
notl
out
jmp
sarb
push
jb
jb
sti
cmp
fs
fcoml
lret
mov
xchg
movsb
out
lds
test
stos
jmp
inc
pop
in
ss
flds
stc
mov
nop
call
test
shlb
lahf
out
inc
clc
sub
push
pushf
and
inc
out
sub
ja
mov
mov
mov
mov
cld
jo
pop
and
mov
xchg
mov
inc
mov
lods
or
adc
push
pop
cs
inc
inc
aam
leave
xchg
loop
in
jle
shrb
xor
mov
xor
leave
jmp
out
cs
inc
clc
inc
sub
sub
xchg
es
or
das
sbb
cwtl
mov
adcb
cmp
sbb
cmpsl
push
ss
cltd
jp
cmp
sub
movsb
mov
in
in
mov
jbe
and
mov
and
xor
mov
jle
pop
add
test
mov
push
mov
test
jmp
das
lods
jg
mov
mov
dec
out
dec
repnz
negb
jb
sbb
xor
xchg
or
in
xchg
in
sbb
pushf
push
xchg
and
repnz
ret
filds
and
scas
push
mov
lret
lods
xchg
das
outsb
jo
jb
jb
pop
jle
scas
xchg
js
jb
pop
xchg
loop
daa
mov
or
mov
repnz
push
dec
lret
sarb
adc
inc
imul
pop
add
loopne
and
push
sbb
xchg
pop
out
and
push
push
movsl
repnz
mov
sbb
gs
xchg
test
js
test
mov
scas
out
jecxz
xchg
pop
push
bound
leave
popa
sub
and
enter
mov
xchg
in
enter
jmp
ljmp
stos
dec
push
scas
and
dec
sub
push
cmp
inc
in
popf
test
push
decb
mov
bound
dec
push
in
xchg
jbe
addr16
ror
das
adcb
pop
pop
adc
and
mov
ljmp
push
dec
adc
dec
sbb
dec
and
dec
sub
jl
sbb
pushf
cmp
pushf
dec
pushf
dec
pushf
push
xchg
push
mov
lahf
icebp
jbe
outsb
pushf
jb
jbe
jp
jle
sub
clc
rclb
lods
mov
pusha
jmp
fdivs
loopne
daa
dec
sbb
in
jp
test
out
test
xor
dec
popf
xchg
cmpsb
aad
inc
les
inc
pop
or
mov
sbb
dec
into
lcall
sbb
lock
dec
push
repnz
gs
jl
or
and
divb
je
call
sti
mov
mov
je
xor
addl
aaa
fildll
dec
in
pop
rclb
cld
adc
sbb
dec
leave
push
and
and
insl
and
leave
hlt
popa
push
cmp
sub
imul
in
nop
clc
sub
out
cmc
lock
dec
in
in
sahf
xchg
push
rcrb
add
scas
jns
fisubl
test
mov
inc
sahf
push
adc
shrb
pop
testl
cmp
stos
pushf
mov
rorl
jbe
push
in
ret
sub
nop
adc
dec
es
in
pushf
mov
mov
lds
negb
mov
dec
popf
add
cmp
leave
sub
fsubs
ss
daa
jne
jbe
adc
jbe
jge
mov
outsl
mov
data16
push
in
pop
loop
daa
push
daa
pop
daa
addr16
insl
daa
jne
xchg
sarb
and
or
inc
movsl
mov
scas
ret
ror
pop
insb
or
mov
mov
ficoml
adc
jp
mov
sub
inc
pop
cmp
pop
pop
cmpsl
dec
jae
andl
mov
jb
dec
aaa
in
sub
adc
orb
jb
pop
lret
lret
je
inc
sti
les
loopne
es
in
in
xchg
inc
xchg
dec
jl
sbb
xchg
imul
je
mov
mov
inc
and
in
cmp
stos
cmp
cmp
dec
loopne
lods
imul
insb
cmp
and
lcall
jb
dec
mov
aas
ja
ss
divb
nop
sub
xor
mov
loope
inc
out
cmp
cmpsl
cmp
pop
rcll
mov
fdivr
lret
mov
std
leave
fadds
or
insl
cmpsl
xchg
xchg
daa
fbld
xor
imul
mov
push
mov
or
cmp
inc
dec
xchg
cmp
inc
jmp
ljmp
jns
into
dec
aas
in
mov
mov
ret
jo
dec
jge
pop
mov
dec
es
cli
mov
jbe
pop
sbb
push
and
ret
in
pop
mov
movl
push
stos
dec
sbb
pop
sub
and
shlb
daa
test
jb
push
sbb
scas
and
test
scas
test
or
cmp
sahf
imul
pushf
or
pop
stc
mov
mov
subb
pop
xor
mov
orb
adcb
xor
dec
jl
push
or
cmp
inc
clc
adc
cs
jbe
xor
cmp
cmp
xchg
pop
push
loope
lods
sub
data16
in
mov
pop
dec
xor
rclb
sub
ret
push
and
dec
mov
loop
pusha
int
sub
mov
push
jg
add
cmp
adc
jl
push
pop
mov
rorb
fsubrl
jbe
inc
out
cmp
pop
ss
lods
add
adc
mov
pop
sbb
mov
push
sub
pop
cmp
call
cmp
lds
xchg
out
xchg
fwait
fs
test
dec
add
xor
mul
cmp
lcall
and
dec
push
daa
xor
jl
xor
mov
je
xchg
lcall
decl
fcom
inc
jb
mov
test
int
out
mov
pop
mov
and
das
sbb
daa
sbb
enter
inc
insb
adcb
les
and
dec
xor
pop
push
push
dec
div
jbe
sub
pop
int
into
icebp
in
popf
rorb
hlt
xchg
pop
shlb
adc
movsb
dec
or
cwtl
inc
mov
sahf
jmp
addr16
and
jb
dec
inc
loopne
lcall
mov
fiadds
pop
test
cmp
mov
inc
xchg
in
jno
mov
sbb
xor
jb
mov
nop
dec
jb
pop
cmp
xchg
test
cmp
sub
jb
dec
sbbb
sbb
enter
inc
push
fs
test
mov
inc
add
pop
adc
int
dec
xlat
xor
mov
das
loopne
inc
popf
loope
shrb
sbb
std
ret
shlb
xchg
jb
mov
dec
popf
test
pop
lock
xchg
dec
jns
test
xchg
sahf
cmp
or
int
out
loop
in
leave
repnz
or
push
add
or
lea
jg
cmpsb
pop
fidivs
popf
andb
rclb
filds
lock
loope
out
adc
dec
clc
repnz
bound
ja
rolb
loopne
mov
ficompl
cmp
cmp
je
mov
fcompl
push
dec
les
loope
loope
in
cmp
cmp
or
cmp
loope
sub
sahf
adcb
mov
sarb
cli
pmulhuw
mov
mov
add
pop
lcall
lcall
mov
ja
mov
daa
mov
push
pop
stos
jno
cmp
mov
loope
adc
scas
xchg
loop
call
add
pop
lahf
push
pushf
icebp
inc
cs
cwtl
mov
adc
out
mov
or
leave
movsl
sub
adc
inc
call
jg
loopne
les
shlb
ficoml
fistl
inc
std
mov
push
dec
sarb
and
push
daa
push
push
xchg
cmp
adc
bound
aas
and
outsb
push
adc
rcrb
adc
cmp
outsb
mov
mov
or
push
pop
pop
push
in
or
cmp
and
ljmp
outsl
sbbl
jo
ljmp
sbb
mov
dec
rcl
add
test
pop
fdivs
jb
pop
add
dec
dec
sub
test
lods
add
cmc
fcoms
mov
popf
inc
pop
adc
in
loop
push
xor
outsl
mov
call
and
test
and
pop
loopne
xor
inc
mov
ret
divb
mov
fs
dec
push
fsubl
jae
jns
push
adc
mov
sarl
mov
adc
cmp
jo
jb
lret
add
sbb
das
mov
xor
je
sarb
loop
in
mov
dec
ja
mov
push
sbb
pushf
ficomps
or
push
dec
pop
idivb
add
inc
add
rcl
or
push
xor
mov
sub
out
pop
das
rcrl
call
mov
leave
or
xor
pop
cmpsb
dec
push
orb
es
in
sbb
mov
and
cmp
insl
in
in
pushf
mov
push
or
pop
dec
push
dec
xchg
movsb
dec
rorb
into
pushf
je
btrl
pushf
imul
mov
lret
mov
out
push
inc
add
sub
je
pop
dec
pop
aad
push
das
xchg
leave
fwait
loope
out
pop
cmp
inc
fcoms
or
and
ljmp
jge,pt
rol
in
push
out
dec
pop
lock
pop
add
mov
inc
shl
jg
out
push
xchg
push
xlat
test
stos
or
inc
outsb
je
scas
sub
xor
sar
leave
scas
leave
leave
leave
into
jno
jnp
fs
lock
dec
in
push
add
ds
dec
cmp
das
mov
push
loopne
pop
push
ret
push
xchg
xchg
hlt
xchg
call
lock
pop
ja
movsb
les
in
enter
rclb
loopne
xlat
sahf
ficoms
adc
adc
push
mov
jmp
orl
insl
das
ret
dec
sbb
xchg
and
and
mov
xchg
cmp
lret
dec
sti
rclb
lret
dec
adc
push
dec
inc
jge
cwtl
ret
jg
das
adc
dec
es
ss
les
sub
jg
scas
mov
in
in
mov
and
sbb
adc
in
cli
xchg
mov
xchg
es
hlt
dec
cmp
and
cmp
add
daa
xchg
ror
pop
test
xchg
loop
das
in
sub
jnp
fdivrs
mov
addb
jbe
jp
jle
mov
lret
faddl
inc
testb
add
sub
mov
test
cmp
push
loope
ja
or
popf
loope
ret
and
or
cmpb
add
inc
xchg
jo
jb
pop
mov
jb
add
sbb
push
sub
ljmp
sarl
clc
loope
or
das
or
inc
and
jg
lods
lret
movsb
add
add
imul
mov
test
sub
adcl
push
dec
pop
dec
jb
sub
or
push
mov
ret
in
mov
fnstsw
jecxz
jmp
jne
push
loopne
push
js
xchg
fxtract
pop
xchg
dec
insb
cltd
daa
andb
jge
call
mov
stos
pushf
push
sbb
xchg
ret
iret
pop
pop
in
cld
testb
add
rolb
push
xor
push
out
dec
sub
cmc
mov
inc
fs
fwait
and
mov
out
rol
fdiv
xchg
or
xchg
pushf
scas
pushf
mov
rcrb
push
mov
inc
xchg
clc
orb
push
imul
mov
push
push
cmp
pop
push
sbb
xchg
imul
dec
sbb
in
xor
jno
mov
pop
xchg
sub
push
add
xlat
stos
hlt
lcall
pop
xchg
and
cli
aas
in
lcall
int3
mov
mov
scas
in
mov
dec
and
ret
inc
out
sub
mov
xchg
inc
mov
inc
push
leave
pop
sub
dec
popa
dec
gs
imul
jns
jge
cmp
lea
xchg
loop
xchg
fisubl
lock
pop
rorb
fstps
dec
add
loope
push
leave
leavew
push
stc
daa
push
pop
mov
dec
incl
pushf
add
and
or
mov
loopne
jmp
xchg
sbb
orl
test
xor
lods
push
daa
aas
inc
sub
jl
dec
xchg
sub
add
enter
cld
sub
or
cli
jb
jb
pop
sub
repnz
add
leave
pop
leave
imul
int3
mov
loop
and
mov
push
loop
sahf
cmp
and
mov
and
sbb
sahf
jecxz
xchg
ds
inc
jne
rorb
dec
stos
mov
pop
mov
ljmp
jle
adcb
xchg
pushf
lcall
xor
in
xchg
mov
fidivl
or
cli
inc
inc
and
sbb
lods
popa
inc
or
adc
push
in
xchg
fcoml
and
mov
ss
xchg
ds
add
mov
mov
or
push
cmp
cmp
cmp
sub
sub
jb
jb
dec
cmp
inc
inc
dec
inc
dec
dec
dec
dec
dec
push
push
cmpsb
pop
pop
subb
scas
and
xchg
mov
mov
xchg
xchg
add
sahf
mov
clc
scas
sub
cli
cmp
loope
lret
rclb
jb
dec
faddp
es
pushf
out
xchg
repnz
loop
cli
cmp
push
add
push
pop
or
or
aam
pop
loopne
shlb
pop
mov
in
and
jl
daa
lock
dec
das
push
mov
das
or
and
mov
pop
daa
arpl
mov
daa
outsl
and
lods
les
jnp
jg
cmp
lret
ja
mov
push
jbe
dec
lds
dec
int
dec
aad
push
push
loope
call
icebp
xchg
pop
adc
sti
xor
push
or
js
xor
daa
adc
and
and
xor
inc
xchg
inc
pop
insb
aam
xchg
scas
daa
lods
test
icebp
cmp
in
pushl
lods
and
dec
ret
ja
add
dec
data16
leave
jge
scas
fbld
mov
loope
lds
das
xlat
andb
bswap
dec
pop
sti
lock
or
adc
mov
inc
clc
or
dec
clc
inc
mov
xchg
push
pusha
pushf
int3
mov
dec
addr16
xchg
pop
add
jle
inc
mov
pop
lock
in
in
xchg
xchg
daa
mov
lods
jb
jb
jb
dec
or
adcb
mov
aam
stc
nop
in
daa
xor
and
subb
fdivrs
pop
xor
daa
push
add
jp
es
add
mov
clc
xchg
dec
mov
cmp
lcall
mov
add
xchg
cld
add
icebp
xor
sbb
push
leave
pop
xor
jge
mov
stos
or
aam
mov
dec
lock
int
je
xchg
lock
shrb
add
and
push
in
lcall
push
xchg
push
and
out
push
xchg
gs
jb
dec
mov
addr16
cmp
ljmp
xor
sub
cwtl
xchg
ret
loope
in
adc
call
xchg
sub
inc
fldl
xorb
shl
cmp
cs
test
pop
mov
push
push
iret
dec
pop
adc
ss
xchg
and
push
lret
shl
inc
sti
xchg
cmp
dec
out
sub
xorb
out
icebp
adcl
xchg
fists
lock
dec
dec
outsb
arpl
dec
jge
cmp
mov
add
and
sub
loope
cmc
outsb
ret
sahf
pop
xchg
bound
outsl
sahf
hlt
sbb
xchg
arpl
lock
fcoml
das
scas
loope
fbld
in
xchg
js
dec
xor
out
pop
dec
pusha
icebp
adc
pop
les
add
sub
dec
sbb
xchg
inc
lock
jne
add
ret
lock
add
sub
and
push
jo
jb
jb
pop
mov
jge
xchg
jmp
clc
aas
repnz
pop
inc
and
push
pop
mov
loope
in
outsl
or
or
pop
lods
and
fsts
into
jmp
addb
xchg
cwtl
mov
dec
in
ret
fdivr
push
push
test
and
fs
lahf
popa
ds
test
ja
pop
das
mov
sbbb
pop
add
xchg
aam
adc
xorb
mov
mov
repnz
data16
pop
lcall
jg
mov
call
push
aam
mov
int3
sub
adc
mov
adc
sahf
xchg
daa
scas
daa
in
cmc
jmp
lret
popa
xchg
sub
mov
lret
sub
inc
addb
dec
add
dec
mov
into
xchg
repnz
push
insb
xor
lods
shrb
mov
inc
cmp
mov
adc
clc
cli
das
testb
ljmp
ret
mov
mov
pop
inc
dec
mov
into
dec
jmp
sub
sub
or
xchg
call
cmp
daa
pop
xchg
andb
in
aad
sarb
or
sub
daa
loope
pop
push
push
jae
ds
xor
mov
and
sub
pop
mov
mov
cmp
sub
mov
les
or
xchg
popf
les
push
xor
dec
std
and
and
shlb
clc
xchg
ja
sahf
stos
mov
mov
cld
cmp
push
pop
in
pop
loope
jne
stos
sub
repnz
cld
mov
or
cmp
out
cmp
leave
adc
push
je
imul
xchg
mov
mov
sbb
dec
pushf
push
xchg
js
sub
shll
or
ror
dec
inc
add
fcompl
dec
inc
lock
jo
xchg
stos
into
mov
test
dec
lock
pushf
mov
popf
mov
or
sbb
lret
ds
rorb
jb
pop
jb
jb
pop
das
mov
xchg
addr16
sahf
aam
sbb
pushf
aaa
mov
xchg
xchg
xchg
mov
lret
xchg
aad
aam
push
aas
dec
xchg
jecxz
icebp
push
sub
leave
dec
leave
push
sub
adc
dec
jb
push
out
fisubrl
outsb
and
jle
adc
mov
and
sub
mov
sbb
popf
call
cmp
leave
cmp
shlb
adc
cmpsb
mov
rcr
leave
sub
xchg
pop
push
xor
pop
leave
inc
cmp
cmp
cmp
sub
push
xchg
cmp
and
jbe
sbb
xchg
fchs
jo
mov
push
outsb
sub
movsl
push
adcl
inc
sbb
push
popf
test
imul
xorl
xchg
jne
lea
sti
sbb
ds
pushf
pop
xchg
stos
ret
jne
test
sub
mov
shll
push
daa
xor
loope
subl
dec
xchg
popa
and
leave
sti
aas
and
jne
loop
dec
testb
jmp
push
jb
pop
pop
xor
pop
pushf
insl
pushf
ja
xchg
xchg
rol
adc
xchg
out
xchg
xorps
pushf
push
imul
pop
out
and
lods
cmp
imul
jmp
insb
mov
call
sub
test
ja
outsb
mov
outsl
addb
inc
sbbb
inc
sbbb
mov
pop
ds
jns
in
cmpsl
in
lahf
test
or
push
aam
adc
test
ret
lock
in
mov
push
mov
mov
add
push
fmuls
ret
pop
insb
dec
jle
xchg
popa
pop
mov
jle
adc
cmp
sub
movsl
in
lcall
outsb
xchg
push
mov
les
xchg
dec
test
mov
ljmp
xchg
jo
mov
mov
and
or
adc
loopne
jne
dec
in
mov
loopne
fs
add
xchg
test
jp
test
or
jnp
dec
rorl
punpcklwd
and
in
mov
ss
test
pop
cli
mov
xchg
jb
dec
pop
in
jl
xchg
movsl
ret
or
sarb
mov
scas
or
leave
jnp
into
lahf
mov
jb
dec
jecxz
div
jo
pop
pop
ret
jbe
adc
add
pushf
fstl
adc
dec
xchg
pop
dec
mov
dec
mov
push
dec
push
push
hlt
sbb
std
xchg
je
sub
cmp
push
ret
add
push
loopne
aad
loop
pop
adc
mov
test
leave
push
jle
cmp
dec
dec
and
ret
lret
ss
mov
cli
pop
ficoml
arpl
xchg
inc
push
cmp
leave
xchg
leave
cwtl
cmp
xchg
mov
out
int
mov
dec
push
pusha
stc
fdivrl
or
adc
dec
enter
stc
loop
icebp
test
leave
lock
push
dec
pop
fcoml
andb
mov
into
sub
enter
jmp
inc
daa
dec
add
and
and
out
and
pop
dec
jb
dec
in
mov
push
inc
cltd
outsl
or
lret
inc
xor
dec
repnz
cmp
and
leave
xchg
push
jbe
dec
or
cmp
xchg
test
cmp
and
pop
xor
bound
lea
or
and
add
xchg
push
xchg
pop
jmp
leave
mov
je
int3
push
cld
dec
decb
stos
es
add
ret
jo
dec
lds
mov
sub
adc
push
test
inc
cmc
je
and
sbbl
xchg
mov
test
das
stc
popa
stos
sub
xor
pop
data16
xchg
add
lret
fisttps
mov
cli
jb
pop
jb
and
daa
in
adc
icebp
ljmp
pop
rcll
in
leave
cmp
ds
fs
or
push
and
js
sub
adc
js
movsl
clc
push
pop
sbb
js
ja
lea
add
fstpt
push
aad
push
ds
push
sub
test
daa
faddl
lcall
or
shlb
push
ret
clc
jl
mov
cli
adc
dec
push
jg
xor
jb
test
popf
and
loopne
or
ss
loope
test
pop
aad
ret
dec
add
stos
es
xchg
inc
lock
popf
add
scas
jmp
dec
fstpl
and
sub
call
push
sbb
in
sahf
test
int
or
rcl
and
cs
shlb
rcl
xor
pop
lcall
pop
add
jmp
je
mov
or
out
out
dec
hlt
js
adc
scas
outsb
or
xchg
jo
or
jg
and
ss
push
push
out
push
add
ds
pop
int3
push
dec
cld
je
pop
pushf
or
and
and
push
cmp
add
xchg
push
jb
dec
xchg
push
push
movsl
dec
lods
pop
xchg
sub
and
pop
in
add
xchg
dec
ret
jo
dec
fcmovnb
push
pop
sub
cmpsb
sbb
xchg
adc
pop
jae
jle
xchg
shlb
in
and
popa
ljmp
and
mov
out
push
adc
dec
insb
jo
dec
fadd
fmull
xlat
pop
in
and
jbe
adc
xor
subl
mov
test
or
cld
and
leave
dec
sub
pushf
pusha
inc
out
xlat
imul
lret
popa
rclb
sub
das
dec
loope
pop
cs
pushf
xchg
xchg
popf
andl
xchg
pop
loopne
and
lock
inc
cwtl
mov
leave
fdivl
adc
add
arpl
xchg
sahf
ljmp
inc
add
outsl
ds
leave
les
and
and
inc
int3
inc
aas
or
jg
add
adc
leave
stc
je
and
mov
inc
out
loope
sbb
sbb
addr16
sbb
xchg
mov
pusha
pushf
push
xor
xchg
inc
fdivs
leave
inc
and
popa
mov
adc
mov
mov
and
leave
jge
or
jb
dec
lock
xchg
cmp
scas
push
nop
loopne
in
or
dec
scas
jb
gs
jge
js
xchg
ret
pop
in
out
or
xchg
dec
addl
jle
xchg
xchg
mov
lds
push
lret
imul
jae
and
loop
addl
leave
xchg
leave
fwait
leave
lahf
leave
mov
cmp
and
push
or
leave
scas
sub
inc
pop
call
inc
stos
clc
enter
pop
loopne
mov
xor
lods
lods
mov
cld
cmp
mov
out
xchg
adc
mov
addr16
and
daa
lahf
daa
frstor
cmc
and
in
and
popa
pop
in
lods
mov
pop
jle
adc
mov
or
out
inc
es
push
scas
addb
xor
rcrb
mov
pop
lcall
inc
shlb
loopne
aad
nop
xor
xchg
ficoms
push
ljmp
or
out
mov
and
inc
aas
adc
cld
nop
aaa
or
cmc
stos
xchg
in
fstl
adc
iret
jl
adc
mov
sbb
scas
or
inc
out
pushf
movsl
xchg
mov
xor
in
mov
ret
pop
test
je
pusha
lret
in
in
mov
sub
sub
jb
dec
jns
jo
loope
es
dec
mov
xor
mov
ret
or
pop
outsb
dec
add
add
xchg
test
inc
mov
or
daa
and
pop
add
xchg
mov
leave
mov
repnz
addl
inc
bound
orb
jecxz
aas
or
fdivrl
pop
and
popf
orl
jmp
jne
aam
out
mov
pop
cs
cmpb
add
lret
out
push
or
lret
mov
shl
and
mov
mov
mov
fsubrl
es
lods
stos
adc
dec
shlb
push
imul
xchg
hlt
rclb
in
pushf
or
cmp
xor
sbb
fmul
inc
jmp
enter
mov
addl
xchg
inc
fdivl
rcrb
fsts
or
pusha
dec
jle
test
mov
mov
je
or
mov
jp
xchg
mov
clc
push
jb
pop
push
mov
inc
fcomp
jb
push
test
mov
lret
adc
decb
push
and
mov
sub
test
xchg
aad
pop
push
es
xchg
scas
dec
xchg
cld
lcall
leave
xchg
fistps
or
and
ss
dec
outsl
push
nop
jg
sahf
dec
mov
out
sub
insb
adc
and
cwtl
push
leave
popa
leave
jnp
idivb
loop
mov
lods
dec
mov
aam
sub
sub
push
ret
dec
loopne
leave
xor
jp
mov
scas
jb
pop
lea
jl
mov
or
pop
push
xor
adc
shlb
ror
dec
in
test
and
and
scas
in
call
adc
movsb
fsubrs
push
notb
test
test
xchg
mov
sbb
push
xchg
mov
ret
aam
adc
ret
cld
xor
faddl
call
add
cmp
daa
dec
inc
bound
and
in
jb
dec
sbb
sbb
cli
push
loopne
dec
sub
dec
or
in
in
xchg
rcrl
jno
jne
or
leave
mov
xchg
clc
cmpsb
dec
cltd
or
loope
test
std
adc
nop
inc
int3
mov
jg
pop
and
enter
mov
pop
xchg
sahf
cmp
jecxz
sbb
xchg
add
or
adc
mov
sub
sti
xchg
inc
sub
dec
jp
aam
in
dec
rclb
sub
aas
leave
fsubrs
mov
dec
mov
aaa
popa
cs
adc
add
sbb
add
xchg
and
movsl
mov
mov
add
jle
pop
push
push
xor
dec
push
pop
mov
push
xor
out
or
movsl
jg
and
push
push
mov
dec
rorl
adc
pusha
dec
jne
dec
test
pop
fs
int3
lods
mov
cmp
lock
sbbl
std
xchg
add
mov
fistps
in
xchg
test
or
into
shrl
or
sbb
aam
sbb
xchg
pop
and
xchg
lahf
xchg
leave
jbe
push
cmp
test
in
cmp
daa
fnsave
adc
xchg
dec
dec
push
mov
rcrl
push
enter
pop
fiaddl
mov
arpl
dec
adcb
popf
push
loopne
shll
imul
fstpl
or
dec
cmp
aad
bound
call
push
dec
jge
sub
push
xchg
adc
jl
xor
inc
mov
les
dec
cmc
and
push
push
dec
cmp
push
cmp
adc
adc
lock
xchg
in
dec
jge
push
leave
and
inc
cli
push
push
cmpsb
dec
ret
fmull
pop
test
test
aas
dec
dec
ret
pop
and
rcr
or
adc
cmp
lock
mov
nop
insb
lret
out
mov
and
xchg
and
lret
pushf
jge
lea
fdivr
jb
jb
pop
pop
loopne
in
sub
and
push
and
cmp
pusha
fwait
inc
mov
and
jle
outsl
repnz
daa
loope
jle
aas
or
jnp
sbb
loope
sbb
and
and
xchg
ja
call
lods
inc
shlb
push
cmp
sub
pop
mov
inc
in
xchg
push
add
or
and
pop
movb
call
mov
insb
cmp
or
data16
lret
pop
scas
repnz
dec
add
repnz
jl
ret
xor
sarb
push
loop
dec
popa
loope
mov
subb
insb
pop
shll
out
lock
cs
adcb
or
aas
push
pop
orb
dec
mov
mov
mov
push
add
push
hlt
stos
sub
leave
push
fdivrs
sahf
sub
xchg
pop
test
and
mov
les
jmp
xor
mov
mov
shll
push
pop
ss
and
ficoml
imul
pop
sbb
mov
xchg
hlt
loopne
cmp
xchg
aam
ljmp
repz
cmp
lock
rclb
mov
rcll
xchg
mov
mov
mov
dec
cli
dec
jo
dec
jne
xchg
les
push
add
test
inc
scas
sub
loop
push
lret
add
cwtl
add
xchg
movl
dec
or
cld
dec
in
mov
pushf
mov
rcr
pop
inc
mov
in
in
mov
aad
mov
pop
pushf
lahf
xchg
cmpsb
lock
mov
test
cmpsl
daa
mov
push
sar
or
test
cmp
nop
pop
lods
push
das
or
and
jb
pop
scas
lods
or
repz
jo
and
jp
inc
jge
mov
je
add
test
xchg
add
icebp
and
mov
dec
mov
adc
push
leave
jbe
cmp
scas
xchg
mov
add
dec
and
shlb
adc
inc
idivb
inc
mov
outsb
dec
leave
or
mov
into
sbb
xchg
and
sbb
cmp
outsl
testb
daa
fiadds
imulb
rclb
mov
fldenv
out
mul
rolb
adcl
sbb
mov
inc
jl
sahf
sbb
pushf
cmpsl
xchg
mov
mov
sbb
adc
dec
mov
into
inc
ret
mov
ljmp
inc
call
jbe
sub
pop
mov
popf
loopne
mov
dec
push
sti
dec
push
jne
rcrb
aam
rcr
pop
in
repnz
cld
and
aad
mov
and
fistpll
stc
insb
push
push
rolb
xchg
pop
mov
sub
push
das
hlt
in
mov
mov
ja
jl
inc
xor
sbb
decb
ljmp
nop
das
test
cmp
and
in
xor
mov
pop
dec
stos
and
ljmp
cmp
push
lods
push
inc
in
cmp
test
xchg
in
adc
in
adc
xchg
hlt
cmpsl
push
pop
fs
and
lock
in
test
cwtl
jle
inc
mov
mov
inc
loopne
call
stos
andl
adc
sub
jle
dec
inc
stos
push
les
xor
ret
clc
es
cwtl
stos
dec
les
inc
sarb
cld
out
inc
clc
aad
adc
xor
sbb
xchg
dec
mov
pop
popf
push
fs
jo
js
fldt
mov
rorl
push
test
out
in
xchg
pop
mov
cmp
mov
inc
clc
pop
sahf
jb
dec
adc
rclb
push
or
pusha
push
es
jo
xor
mov
nop
popa
or
dec
mov
push
data16
nop
clc
adc
inc
clc
ret
into
or
sub
cmp
push
pop
push
loopne
pusha
in
xchg
pop
test
cwtl
filds
test
inc
daa
mov
loop
dec
test
or
dec
aad
sub
and
call
push
dec
inc
scas
dec
push
dec
mov
or
loop
aam
push
enter
fcoms
add
fwait
out
clc
mov
mov
sub
cmp
mov
dec
jg
hlt
js
leave
and
in
mov
outsb
xchg
shr
dec
fdivs
xor
out
dec
clc
fsubs
daa
and
mov
cmp
push
pop
xchg
pop
inc
shlb
xor
mov
into
mov
push
cwtl
and
fdivs
sbb
cmc
jmp
adc
movsl
xor
clc
cmp
jmp
mov
mov
in
clc
mov
loope
out
sub
into
push
pop
mov
xchg
adcb
ljmp
sub
pop
mov
jb
cmp
mov
and
loope
imul
pop
pushf
adc
addb
shl
es
mov
jo
mov
sar
pop
into
testb
and
in
dec
mov
loope
les
mov
cs
xchg
fs
mov
shlb
add
cmpsb
sub
mov
mov
cs
mov
sbb
xchg
inc
dec
jbe
movsb
jo
xchg
mov
cmpb
in
xor
out
xchg
loopne
test
and
aam
aam
into
push
testl
dec
xchg
mov
pushf
mov
les
adc
xchg
sub
adc
mov
imul
xchg
lock
add
out
fs
mov
pop
adc
sub
sbb
sub
mov
insb
dec
lods
xchg
and
mov
add
lock
xor
push
pop
leave
jo
and
lret
push
call
pop
or
cmp
push
adc
fsubs
loopne
adc
xor
cmp
insb
das
js
les
movsb
sbb
xchg
add
lcall
jl
adc
movsb
andb
pop
hlt
addl
lret
pop
inc
sbb
push
daa
rolb
and
sahf
lods
adc
mov
call
enter
pusha
test
cmp
in
fsub
in
in
jle
inc
cmp
mov
adc
xchg
fsubl
sub
push
ret
pop
pop
dec
movsb
or
popa
push
hlt
ds
sbb
inc
adc
insb
pop
cmp
or
popa
cs
aam
or
and
sbb
xchg
push
push
test
lods
and
fdivr
inc
mov
pop
and
sub
xchg
and
in
leave
outsb
adc
push
fs
pop
mov
push
jg
ljmp
mov
mov
push
xchg
nop
sub
inc
xchg
loopne
cli
or
and
mov
and
dec
or
bound
test
enter
pop
stc
scas
dec
iret
or
xchg
push
cs
lock
je
loopne
movsl
rol
rol
in
jmp
loopne
dec
push
fs
ss
adc
enter
lock
sbb
cs
cmpsb
xchg
push
pop
jb
dec
int3
clc
mov
and
inc
lock
xchg
test
rolb
sub
mov
jo
mov
cwtl
ret
fcoms
inc
adc
push
pusha
sti
and
pushf
js
dec
les
push
push
mov
fists
cmp
fsubrl
lock
xor
adc
movsb
js
dec
int3
or
push
fmull
or
inc
loope
insb
cmp
daa
xchg
add
mov
rcrb
popf
shr
js
gs
inc
adc
and
ficoml
dec
pushf
or
ds
lret
test
and
push
sub
or
mov
mov
sbb
fadd
es
subl
sarb
dec
test
pop
hlt
das
mov
adc
insb
push
add
repnz
pushf
or
ds
adc
lods
cwtl
mov
addb
ljmp
cmp
lcall
in
stos
aam
test
adc
fs
jne
lods
enter
nop
js
andb
pusha
lock
add
dec
pop
sub
mov
in
scas
enter
pushf
adc
rcrl
js
add
xchg
nop
dec
jp
fstps
mov
and
pop
adc
cmp
push
out
sbb
xchg
fmulp
mov
dec
pop
cmpsb
mov
pop
jo
test
adc
movsl
shll
ljmp
popf
pop
pop
adc
stos
rcrb
jp
mov
pusha
mov
lods
fimull
out
jle
test
lock
pop
lock
mov
test
lock
mov
in
das
hlt
stos
iret
lret
in
or
lods
jp
xor
mov
out
lret
mov
out
sbb
and
mov
shl
cmp
jbe
testl
mov
mov
xor
pop
cmp
aam
or
negl
push
sarl
cmp
pop
dec
pop
inc
daa
add
adc
inc
push
or
or
rclb
pop
sbb
add
cmp
push
push
fs
adc
pop
sbb
sti
mov
xor
adc
and
dec
loopne
ds
inc
dec
adc
pop
mov
adc
inc
dec
js
pop
and
mov
sahf
and
push
push
pop
adc
enter
hlt
movq
adc
daa
adc
mov
jo
lds
xchg
hlt
and
inc
cmc
dec
mov
adc
testl
inc
stc
test
cli
adc
and
dec
fcoms
std
or
decb
cmp
and
cwtl
in
call
xor
mov
jo
jg
cwtl
cltd
xor
adc
dec
cld
xchg
loopne
std
inc
clc
decb
adc
adc
push
jne
iret
test
sbb
push
stc
pusha
bswap
jo
inc
xor
pop
nop
mov
sarb
sar
loopne
enter
pop
xchg
adc
and
stc
xor
enter
push
repnz
pop
nop
jo
addb
stc
mov
enter
shl
loopne
nop
lock
rorl
mov
jle
and
xor
nop
inc
cld
push
xchg
pusha
aas
and
orb
nop
jle
mov
sar
xchg
loopne
and
sti
orb
clc
cltd
push
cmp
fwait
push
test
test
lahf
js
inc
mov
sarb
movsb
and
and
or
test
push
stos
adc
scas
test
mov
enter
cwtl
mov
call
adc
insb
fs
lods
cmp
inc
mov
movsl
inc
mov
mov
mov
mov
test
pushf
mov
mov
or
lock
movups
je
mov
or
and
lods
jo
adc
adc
nop
icebp
sbb
add
xchg
push
and
push
je
les
or
xor
fldl
xor
inc
pop
sbb
js
jo
xchg
mov
mov
enter
and
in
testb
inc
or
mov
adc
dec
add
sbb
and
ficomps
mov
push
sub
sbb
cmpsb
xor
inc
inc
inc
dec
sub
add
test
dec
lcall
pop
jb
fldenv
movsb
or
push
push
sbb
lea
xchg
dec
xor
sbb
into
xor
push
xchg
inc
or
push
xor
adc
aaa
dec
push
adc
int
ss
inc
clc
imul
stos
pop
sub
sbb
jb
add
and
inc
lea
add
add
add
xor
add
orb
add
mov
cltd
pop
mov
sbbb
test
add
mov
sar
or
call
inc
lock
and
inc
shlb
inc
cld
adc
aas
xor
popa
or
add
sarb
xor
xor
add
dec
or
mov
addr16
rol
push
adc
add
imul
push
inc
out
out
sbb
inc
fwait
testb
fisttps
and
cmp
rolb
add
loopne
ret
add
lar
pop
add
aas
sbb
and
lcall
add
xor
dec
mov
lds
std
sub
cmp
lods
add
dec
aaa
jl
inc
jne
xchg
or
jle
jg
inc
orb
inc
pop
pop
sbb
pusha
pop
mov
pop
dec
add
adc
sbb
xor
adc
or
inc
and
inc
pop
aas
mov
adc
aas
mov
or
and
dec
pop
xchg
aas
dec
adc
push
cltd
or
int
loopne
adc
mov
aas
in
or
and
dec
xor
add
das
add
jg
loopne
out
rcrb
add
sub
adc
movsl
and
pusha
and
clc
lcall
dec
xor
jo
rolb
loopne
insb
sub
sbb
test
add
sub
aam
sbb
inc
mov
sub
push
mov
lods
add
in
or
adc
test
ret
incb
xchg
sbb
xor
cmp
push
andl
sti
adc
cld
add
cmp
push
fmull
push
push
fdiv
add
lahf
pushf
movsl
xchg
sbb
push
or
add
lods
sbb
mov
mov
sbb
inc
subl
adc
sbb
push
sub
cli
int3
jnp
pushl
inc
jecxz
ret
rcrl
pusha
and
and
sbb
add
lods
add
or
je
xor
sub
mov
inc
and
and
adc
add
fsts
in
mov
pop
sbb
adc
cmpsl
add
xchg
push
incl
push
aad
pop
sbb
fs
ret
and
mov
cmp
adc
repz
cmp
repz
xor
inc
adc
jbe
push
push
mov
and
push
mov
or
lods
sub
daa
pop
sub
movsb
daa
mov
push
adc
push
stos
adc
adc
push
and
lcall
into
stos
daa
mov
stos
sub
into
mov
sub
adc
sub
loope
sub
cmp
jg
push
inc
fldl
xor
push
xchg
sub
adc
xor
jno
or
inc
and
cmpl
cmp
loop
xchg
cs
push
lods
sub
xchg
dec
sub
cltd
and
dec
sub
sbb
subl
cmp
push
cmp
or
sub
xchg
mov
mov
sub
cmp
xchg
xchg
movsb
orb
mov
stos
subl
adcb
push
sub
dec
sub
insb
push
int3
int
pop
adc
sub
insb
and
push
dec
xor
cmp
xchg
mov
adc
push
cmp
clc
ja
adc
je
xor
mov
fists
rclb
sbb
ja
dec
xchg
rcll
into
xor
or
adc
sbb
pop
sub
adc
inc
aad
xchg
fsubrl
daa
inc
aas
dec
sub
bound
out
in
xchg
js
decb
pop
sub
jmp
aas
xchg
xchg
push
lret
adc
repz
adc
stos
push
mov
int
push
sub
and
repz
and
inc
arpl
ljmp
imul
nop
clc
in
lods
sub
jno
dec
ss
popa
sbb
sub
ficoml
push
dec
adc
sub
sub
pusha
test
adc
dec
insw
in
bound
mov
jne
adc
dec
add
dec
mov
ja
mov
jecxz
sub
inc
sub
mov
mov
sub
jmp
int3
sbb
push
add
dec
sub
inc
mov
push
aas
xorb
arpl
cmp
or
cmpsb
arpl
and
lods
hlt
data16
mov
lahf
sub
push
inc
sub
or
hlt
xor
cmp
sbb
push
andl
stos
inc
push
cmp
lahf
into
mov
and
adc
sub
inc
mov
clc
adc
or
lret
repnz
sub
aas
xchg
addb
pop
in
dec
mov
dec
sahf
outsb
push
aas
xor
adc
stos
jno,pn
data16
and
inc
out
xchg
pop
inc
sub
xor
adc
dec
or
sub
push
adc
sbb
and
mov
lret
fs
xor
mov
cmp
out
sub
xchg
popa
mov
dec
adc
sub
sub
dec
clc
sbb
xchg
xchg
lods
sub
movsb
stos
xchg
adc
dec
movsl
pop
adc
xchg
ss
movsb
adc
dec
adc
daa
push
adc
push
jle
adc
daa
gs
pop
daa
jle
lock
xchg
daa
inc
push
dec
dec
clc
push
mov
sub
jl
cmp
xor
mov
std
daa
sbb
cltd
adc
cmp
pushf
sub
rolb
mov
or
inc
cld
mov
jbe
add
sbb
lret
xchg
sub
test
movsb
mov
push
sahf
out
push
mov
mov
xchg
lret
mov
sub
adc
mov
and
mov
pop
cmp
jb
or
xor
xchg
jecxz
sub
mov
insb
sub
pop
in
jo
sbb
xor
loop
push
ss
movsb
sub
dec
sub
sbb
adc
shrb
fs
aas
mov
sub
dec
inc
xor
add
xchg
lcall
in
je
mov
sbb
pop
imul
jne
xor
mov
and
in
fisubrl
stc
outsl
or
mov
in
clc
xor
je
fwait
lret
adc
cwtl
or
stos
frstor
mov
mov
stos
jecxz
aas
fists
add
push
shl
movsb
lcall
sarb
paddb
xor
mov
add
ss
xor
push
pop
mov
loope
or
xchg
aas
mov
out
push
xor
inc
add
ficomps
test
data16
push
push
push
push
ja
push
dec
shrb
or
push
shll
or
outsb
adc
cmp
imul
sbb
lret
adc
push
push
push
into
insb
fs
outsl
or
jne
into
mov
imul
sbb
or
inc
cmp
dec
insl
leave
or
js
je
sbb
dec
mov
and
insb
push
jo
inc
imul
outsl
jns
int
jae
xchg
and
movsb
fnsave
adc
add
mov
inc
icebp
jo
shrl
dec
jo
call
cmp
or
inc
cmpsb
movsb
push
jns
into
adc
dec
jno
fmuls
xchg
insb
or
aas
lock
sub
dec
cvtpi2ps
mov
sub
inc
mov
inc
jbe
adc
mov
mov
outsb
repnz
outsl
aas
lods
sub
and
push
dec
mov
sub
lahf
xor
and
movl
stos
cs
push
inc
fstps
xor
inc
fstpl
fs
or
xchg
xor
cld
insb
add
mov
or
adc
insl
jae
popa
into
xor
adc
imul
push
mov
fdivp
dec
les
test
push
insb
push
inc
push
xor
pop
imul
push
int
enter
or
inc
cmp
xchg
int
xchg
dec
popa
cmp
push
test
and
dec
xchg
jle
or
lret
adc
xor
orb
inc
fsubrs
add
and
push
xor
je
dec
pop
data16
fsts
push
dec
sub
xchg
cmp
xor
cwtl
push
push
repnz
lock
dec
lock
or
jb
and
arpl
js
sub
add
jp
dec
adc
mov
insb
fldcw
jo
mov
movsb
adc
cmp
and
stos
cmp
and
jns
xor
dec
test
push
or
loopne
dec
sahf
add
dec
aad
lcall
jns
push
xorb
dec
dec
add
jbe
pop
push
sub
insl
insb
push
cmp
add
add
sub
cmpsb
stos
in
jo
cmp
dec
push
outsl
cmp
leave
hlt
inc
int3
add
mov
sub
mov
fsts
inc
push
push
imul
adc
xor
and
bound
cmpsb
mov
loope
sub
outsb
xchg
adc
or
fisubrs
xor
iret
bound
clc
outsb
shlb
jl
cltd
push
insb
addr16
mov
xchg
sbb
shrb
sbb
popa
insb
and
imul
xor
data16
push
insl
dec
je
or
mov
xchg
inc
mov
es
sbb
mov
or
push
mov
jp
sbb
pushf
sbb
in
push
sbb
pusha
pop
xchg
test
add
push
jae
outsb
dec
insl
pop
and
es
mov
cltd
push
sbb
bound
cmpsb
push
push
xor
addl
sbb
dec
jb
leave
es
push
cmp
cmp
mov
outsb
aam
into
or
pop
mov
cs
into
mov
add
adc
push
mov
mov
addr16
xchg
sbb
cmp
addr16
add
and
stos
push
mov
js
add
les
popf
and
xchg
mov
addr16
sbb
jecxz
xor
mov
in
push
adc
push
xchg
es
add
cmpsb
int3
enter
dec
adc
push
xor
outsb
pusha
dec
add
rorb
pushf
push
dec
pop
lds
jl
ret
aad
cld
add
cmp
adc
clc
gs
outsb
cmpsb
lret
pop
dec
repnz
fs
push
mov
sub
arpl
arpl
je
sbb
push
push
xchg
jbe
bound
cltd
adc
dec
js
lods
push
test
mov
ja
pop
pop
movsb
lahf
cs
gs
iret
pusha
push
and
dec
jo
adc
cmpsb
sub
adc
cltd
nop
xchg
je
into
mov
fmull
sub
pop
hlt
movsl
gs
push
sbb
push
and
xorb
ljmp
dec
inc
loopne
sahf
adc
jo
dec
cmp
arpl
add
pusha
pop
je
push
dec
jo
rclb
dec
push
mov
pop
lock
daa
sbb
repnz
xchg
jno
adc
rcrl
cltd
push
xchg
fcomps
xchg
add
in
push
dec
insb
gs
or
push
les
cwtl
dec
jne
push
mov
les
inc
popa
jne
cltd
add
xchg
cs
jl
inc
pushf
push
sarl
scas
sub
enter
or
dec
jbe
shll
loop
in
test
dec
lods
pop
sub
and
lds
popa
pop
mov
sbb
lock
int
cmpsl
cmp
pop
in
cwtl
sub
pop
dec
pop
mov
pop
into
jb
and
lret
scas
jp
jbe
les
inc
daa
popa
xchg
clc
xchg
nop
out
push
cwtl
and
cltd
stos
sub
jmp
adc
push
mov
sub
sub
sbb
roll
dec
push
dec
sub
cmp
fs
and
xor
push
cmc
or
jb
test
push
xor
sahf
rcl
mov
cmp
je
xchg
cwtl
loop
mov
arpl
les
sub
mov
popa
je
enter
ror
or
imul
lods
and
jno
push
xchg
lds
lcall
sub
sub
jp
cmp
pop
sub
insl
fstpt
mov
add
loopne
test
mov
movsb
fimull
sub
popa
cmp
cltd
adc
rcll
dec
loopne
mov
adc
jo
sub
jns
mov
cs
xchg
sbb
loop
rcrb
lods
movsb
mov
jnp
enter
lcall
sbb
jbe
dec
add
pushf
xchg
shrl
orb
and
je
mov
xchg
sub
adc
ljmp
popa
adc
aad
mov
sbb
push
leave
stos
add
adc
mov
push
movsl
push
mov
lret
adc
and
mov
out
daa
or
out
pop
mov
jb
cs
mov
xchg
add
add
repnz
out
mov
daa
dec
je
hlt
aam
popf
shlb
fsub
mov
mov
jle
inc
adc
test
lea
cmp
dec
push
fiaddl
mov
leave
je
jle
push
or
xchg
mov
imul
push
mov
dec
adc
jne
cmp
dec
lods
bound
pop
addb
movsl
into
sbb
ss
lahf
cmpsb
dec
mov
aam
mov
xchg
sahf
leave
jne
sub
fstl
ljmp
insb
sbb
aam
fstl
mov
mov
mov
sbb
sbb
cmpsl
cmpsb
sub
cwtl
mov
cs
pop
call
adc
mov
imul
and
daa
mov
jb
sub
inc
dec
jp
push
dec
jbe
pop
jo
lods
repnz
je
add
push
xchg
movsb
jle
scas
cmpsl
sahf
enter
pop
or
out
mov
es
pop
rorl
sub
mov
cltd
pop
test
mov
inc
ss
mov
test
xor
clc
fidivrl
push
pop
dec
inc
jae
adc
dec
sub
or
pop
jb
adc
dec
bound
dec
push
sbb
and
insb
leave
je
or
pop
inc
jae
adc
pop
dec
xchg
add
sbb
jbe
dec
les
fcompl
inc
xchg
flds
rorl
loop
jle
jbe
js
and
xor
push
jo
fcoms
cmp
xor
sub
xchg
add
xchg
mov
mov
sbb
mov
insb
xor
je
icebp
out
xchg
or
sbb
mov
mov
outsl
adc
or
jne
sub
add
fs
in
fsubl
push
push
push
and
push
sub
sbb
ljmp
add
sub
lock
je
dec
xchg
je
mov
outsb
pushf
sub
adc
push
cmp
idivl
cmp
mov
push
repnz
xchg
repz
insb
mov
stc
aaa
or
push
mov
jns
outsl
add
push
push
mov
sub
pop
jo
inc
push
adc
cs
lcall
mov
sub
add
lods
and
shrl
nop
cmp
insb
push
data16
lods
adc
lret
outsb
jo
aaa
data16
bound
mov
loop
push
scas
add
fsubrs
xchg
push
sub
sahf
add
push
push
mov
push
sub
scas
xchg
nop
in
ds
leave
jae
outsb
fsubrl
pop
sub
test
call
fdivr
jae
mov
outsl
mov
xor
bound
lcall
xchg
bound
data16
dec
jne
in
cmp
mov
stos
je
pusha
in
insl
fimull
sub
push
jns
rorl
data16
jb
push
call
and
jl
adc
adc
push
and
adc
in
leave
pop
push
outsb
rclb
pop
sbb
xchg
mov
dec
shrb
pop
xchg
sahf
nop
xchg
ds
xchg
movsl
cmp
pop
ficompl
jle,pn
pop
pop
in
lret
jo
dec
inc
es
imul
xchg
enter
mov
jp
mov
pop
mov
push
sbb
mov
into
fsubl
cwtl
xchg
xor
inc
int3
imul
movsb
int3
push
arpl
sbb
xor
xchg
lret
adc
fsubs
xor
jecxz,pn
pop
and
in
stos
in
pop
insb
and
in
mov
lods
add
icebp
jp
ss
addb
fs
out
movsl
stos
lret
jae
or
xchg
in
sub
push
pushf
xor
inc
mov
dec
cmpsb
sub
jns
ds
gs
repnz
dec
sub
pop
mov
movsb
xchg
sbb
test
lret
iret
xchg
dec
sub
jae
call
sub
sub
mov
push
sub
mov
inc
addr16
jl
mov
in
pop
and
xor
movsb
pushf
push
cmpsl
inc
jns
js
movsl
cmp
lahf
aaa
in
or
das
scas
inc
fidivrl
pushf
push
adc
adc
sub
push
sub
adc
outsb
xchg
loop
pop
sbb
sub
xchg
popf
jle
loop
xchg
push
fs
pop
mov
cld
lret
or
or
inc
xor
push
movsl
gs
iret
shlb
jb
adc
sub
loopne
dec
dec
adc
arpl
dec
dec
and
cmpsb
push
stc
outsl
cmp
dec
in
movsb
mov
inc
aam
stos
add
cmp
aaa
add
pop
fwait
cmp
addl
mov
dec
xchg
jne
in
sbb
stc
ja
dec
enter
jbe
mov
or
lret
jp
sbb
add
outsb
push
jns
xchg
aaa
cmp
adcl
faddl
dec
adc
mov
mov
dec
xchg
aad
aad
inc
cmp
xor
popf
cmp
outsb
fsts
sbb
divl
cmpsl
cmpsl
adc
adc
push
testl
push
insb
mov
xor
scas
lods
xchg
fnstcw
push
cmp
dec
mov
dec
adc
pop
arpl
xor
int
sahf
sub
call
mov
jb
ljmp
ss
mov
pop
jmp
loopne
daa
and
dec
pop
push
loop
incb
mov
ficoml
mov
jp
hlt
sub
inc
jb
push
adc
insl
push
xchg
xchg
bound
and
jne
out
fs
mov
mov
push
sub
sbb
push
mulb
adc
and
jbe
mov
jne
xchg
int
insl
movsb
sbb
movsl
xor
xor
mov
outsb
cmc
dec
adc
enter
adc
dec
jnp
mov
mov
and
cmp
inc
sbb
inc
fisttpl
es
mov
mov
push
adc
leave
adc
sub
sbb
push
push
inc
subl
cmc
lds
data16
mov
push
xchg
inc
loope
pushf
or
js
insb
adc
nop
jecxz
outsb
arpl
xor
inc
rcrb
adc
ret
push
sub
push
mov
movsl
pop
jns
movsl
aad
and
adc
or
jnp
and
dec
inc
cli
xchg
mov
and
xchg
lcall
cltd
jnp
mov
jecxz
out
and
push
mov
cltd
add
pop
adc
and
xchg
jne
pop
sbb
lcall
pop
cmp
xor
mov
cmp
push
sarb
popa
gs
sbb
addr16
or
sbb
out
and
movsb
sarl
xor
arpl
sub
cwtl
ret
loopne
jmp
out
pop
fisubrs
jns
push
jl
jne
movsb
call
rcll
addr16
sub
push
nop
or
in
je
push
push
out
shll
mov
xor
hlt
scas
mov
push
pop
dec
dec
ss
inc
or
cs
adc
dec
xchg
xchg
sbb
rclb
push
pop
stc
pop
jecxz
movsl
imul
pop
gs
or
push
jns
cmp
push
cltd
dec
push
rorl
xchg
ja
fstl
inc
dec
aas
rcrb
xlat
gs
mov
jo
inc
sbb
sub
sub
push
and
jnp
dec
push
dec
pop
inc
ret
and
mov
adc
sbb
mulb
inc
fdivrl
adc
sub
push
nop
icebp
hlt
mov
arpl
fnstcw
sbb
pop
scas
je
imul
jp
ficomps
ss
cmp
mov
ja
xchg
cmp
adc
pop
pusha
out
arpl
pop
jo
data16
test
fwait
pop
je
arpl
push
sub
push
push
outsl
mov
sub
push
fidivl
leave
das
pop
fstpt
push
cmp
lea
push
cmpsb
pop
aam
std
cmp
dec
inc
inc
cltd
push
bound
dec
cli
mov
pop
out
leave
sub
ss
enter
jmp
sub
mov
lcall
adc
outsb
scas
divb
out
jge
bound
insb
push
pop
or
rcl
es
xor
loopne
pushf
nop
sbb
dec
add
loop
movsl
adc
add
and
jns
or
add
pop
test
mov
add
pusha
call
pop
sub
sub
jmp
inc
dec
dec
inc
dec
inc
add
pop
or
adc
add
add
cmp
nop
cli
push
mov
sub
jmp
mov
or
push
add
lds
add
mov
xor
inc
dec
jne
jmp
std
lret
mov
xlat
xlat
mov
in
xchg
inc
lret
mov
xlat
xchg
pop
jmp
xlat
xlat
push
push
das
xlat
xlat
xlat
aam
outsl
xlat
xlat
insl
call
xlat
xlat
and
fcmovnbe
xlat
xlat
aam
xchg
mov
sti
repz
aas
rcl
xlat
xlat
notrack
xlat
xlat
addb
xlat
xlat
pop
inc
fcmovnbe
xlat
xlat
pop
pop
xlat
xlat
xlat
push
ds
aad
adc
and
sub
mov
repz
xlat
xlat
mov
mov
sti
xrelease
rcl
xlat
xlat
ds
aad
xlat
sbbb
xlat
sub
aas
test
push
xlat
xlat
xlat
push
es
inc
dec
push
es
inc
dec
in
push
and
push
and
in
push
aas
rcrb
xlat
xlat
fcomps
xlat
xlat
xlat
mov
lret
out
push
sub
fcoms
xlat
xlat
xlat
push
sub
fcoms
xlat
xlat
xlat
mov
sub
repnz
xlat
xlat
xlat
xchg
sbb
sub
fwait
out
push
push
rclb
ds
sub
incb
rcll
push
aas
sarb
jl
sub
mov
imul
xlat
xlat
xlat
pop
arpl
call
xlat
xlat
sub
pop
rcll
add
xlat
xlat
pop
rcll
sub
sub
add
xlat
xlat
pop
rcll
xlat
xlat
xlat
in
aad
fcoms
xlat
xlat
xlat
pop
rcll
xlat
xlat
aad
fcoms
xlat
xlat
xlat
pop
rcll
add
xlat
xlat
pop
rcll
add
xlat
xlat
pop
rcll
add
xlat
xlat
pop
rcll
push
rcl
xlat
xlat
cmp
pop
rorb
mov
xlat
xlat
xlat
aad
fcoms
xlat
xlat
xlat
pop
rcll
add
xlat
xlat
pop
rcll
sub
sub
aad
xlat
xlat
fcoms
xlat
xlat
xlat
outsb
xlat
xlat
xlat
aad
fcoms
xlat
xlat
xlat
pop
rcll
add
xlat
xlat
pop
rcll
sub
sub
and
mov
fldcw
sub
lahf
push
aaa
fistps
xchg
pop
aas
outsb
xlat
xlat
xlat
aad
fcoms
xlat
xlat
xlat
pop
rcll
add
xlat
xlat
pop
rcll
sub
sub
xlat
stos
xlat
xlat
fcoms
xlat
xlat
push
das
xlat
rcl
xlat
fcoms
xlat
xlat
xlat
xchg
sbbl
outsl
sub
sub
test
xlat
xlat
fcoms
xlat
xlat
xlat
push
push
aad
xlat
xlat
sbbl
ds
sub
sub
xchg
in
pop
aas
fcoms
xlat
xlat
xlat
push
push
aad
xlat
xlat
pop
aas
sbbl
mov
adc
xchg
repz
push
repz
xlat
xlat
xlat
mov
mov
xlat
sub
push
xlat
aam
push
pop
jle
xlat
xlat
outsb
rcl
xlat
xlat
insl
cmp
pop
out
xchg
sahf
fcoms
sub
sub
rcl
xlat
xlat
shlb
mov
cmp
cmp
sarb
leave
sahf
fs
pop
cmp
cmp
test
cmp
cmp
cmp
in
mov
cmp
and
cmp
insl
insb
mov
sub
inc
aaa
cmp
leave
lahf
fs
cmp
loop
les
jnp
cmp
addr16
cmp
scas
sbb
cmp
xchg
cmp
cmp
lds
cmp
jnp
mov
mov
inc
aas
mov
cmp
cmp
jge
cmp
cmp
mov
cmp
cmp
cmp
test
cmp
shll
mov
cmp
cmp
xor
cmp
cmp
cmp
fcmovnb
xor
cmp
stc
cmp
jb
mov
sarb
cmp
cmp
addb
mov
cmp
sbbl
jnp
xor
int
sarb
cmp
cmp
and
loop
ficomps
pop
pop
mov
push
fcmovb
pop
pop
pop
leave
aad
push
leave
pop
cwtl
push
mov
pop
fbld
push
fistl
pop
pop
aad
push
pop
cwtl
push
mov
pop
frstor
push
pop
push
fidivl
pop
pop
pop
frstor
pop
pop
push
fistl
pop
frstor
dec
pop
push
ficoml
pop
pop
pop
or
mov
mov
mov
pop
pop
push
fisubrl
pop
pop
fnstenv
mov
or
xchg
push
xlat
pop
pop
pop
pop
movzwl
pop
pop
pop
nop
fistps
femms
mov
pop
add
sbb
fistps
mov
mov
cltd
dec
pop
pop
pop
mov
mov
mov
pop
ss
dec
pop
or
enter
enter
es
pop
pop
pop
cwtl
fistps
ds
aad
pop
into
or
mov
pop
pop
cwtl
or
xor
or
aad
aad
outsb
jbe
pop
pop
pop
cwtl
push
popf
or
cmp
xor
cmp
aas
jle
sub
sub
cmp
sub
sub
aaa
xor
jle
jo
outsl
push
push
sbb
sub
xor
cmp
jle
xor
cmp
xor
sub
or
sub
or
fs
sub
cs
sub
sub
xor
cmp
aas
cs
sub
cmp
cmp
push
sbb
aas
aaa
xor
jle
sub
xor
push
cmp
aaa
cmp
aas
cs
sub
cmp
cmp
or
aaa
sub
cmp
xor
sub
sub
cmp
sub
sub
jle
sbb
pop
or
sbb
sbb
xor
jle
cmp
xor
cmp
aas
jle
sub
sub
cmp
push
pop
xor
jle
aaa
cmp
sub
cmp
cmp
jg
push
adc
sub
jle
xor
cmp
sub
jle
sub
add
loope
add
xchg
or
add
icebp
scas
cmpsb
test
xor
das
in
mov
rcrl
cltd
clc
add
fdivrs
lds
add
mov
hlt
pop
int3
pop
add
js
sbbb
out
and
push
pusha
or
and
add
push
jb
add
inc
dec
fiaddl
cmp
negl
pop
cmc
mov
jne
loope
flds
fldl
mov
cwtl
or
mov
adc
ret
add
xor
mov
add
dec
and
insl
add
pop
inc
jp
fstl
sarb
add
rolb
test
push
mov
rolb
inc
sub
push
adc
add
cli
shrl
inc
daa
aam
mov
orb
in
adc
repz
xchg
jp
lret
inc
inc
push
adc
test
add
or
aas
push
xchg
inc
adc
cmp
sub
adc
rorl
lods
inc
adc
push
push
xchg
mov
add
adc
lret
xchg
mov
mov
aam
ret
xchg
push
dec
mov
stc
dec
lods
mov
dec
pop
or
rorb
mov
sbb
mov
adc
jl
sbb
or
xor
movsb
add
dec
pop
add
mov
pop
mov
sub
pop
or
adc
inc
pop
and
add
and
or
xor
xchg
cld
sbb
mov
sub
adc
es
mov
and
mov
rclb
sahf
aad
nop
and
inc
sbb
xchg
dec
adc
add
gs
add
mov
stos
cs
cmp
dec
push
add
lahf
adc
add
xor
rolb
cli
jnp
pop
adc
mov
jl
add
push
dec
sar
jbe
add
sbb
push
cmp
es
mov
add
jmp
add
lds
outsb
push
sub
push
and
in
add
test
pop
popa
fcoml
jp
add
adc
fildl
jge
mov
adc
gs
xchg
add
cmp
mov
std
dec
inc
ss
cli
mov
or
inc
cmpl
xor
xor
inc
int
cmp
inc
mov
mov
xchg
xor
scas
jge
outsb
jo
mov
inc
out
dec
outsl
xor
imull
scas
jg
icebp
hlt
ss
inc
sbb
push
jb
mov
jge
xor
xor
push
inc
push
push
jb
repnz
out
fiadds
sbb
inc
fcoml
lock
out
into
push
inc
sbb
dec
mov
pop
jb
xor
push
dec
popl
hlt
push
ret
xor
pop
xor
sbb
inc
dec
mov
inc
jp
jb
jmp
push
mov
outsl
faddl
dec
xor
cmpsb
inc
cwtl
lret
pop
cmp
pop
dec
push
and
out
push
dec
nop
inc
xor
jno
out
dec
mov
pushf
dec
mov
xor
jns
pop
sbb
push
test
push
outsb
push
sbb
xor
mov
stos
mov
push
push
push
mov
lds
sbb
push
out
es
push
xor
mov
xchg
rolb
dec
jle
push
push
ss
mov
or
dec
leave
dec
out
jp
push
cmp
sbb
rcll
inc
ret
out
loop
pop
dec
orb
aaa
xor
inc
sahf
or
pop
inc
aad
notl
rcrb
sub
cmp
loop
out
ret
fnsave
add
sbbb
dec
inc
push
push
push
inc
push
inc
pop
inc
outsb
imul
jbe
insb
outsl
jo
jb
pop
dec
or
add
outsb
outsl
je
pop
jo
fs
jae
arpl
mov
lahf
jge
int
push
roll
inc
out
jbe
add
sbb
mov
cmpsl
add
js
mov
jp
mov
fdivs
add
jns
test
std
fimuls
jmp
xor
jl
xor
and
add
mov
inc
fs
fadds
fwait
insl
scas
push
loopne
xlat
repz
or
cltd
subb
test
adc
mov
cmp
outsb
aam
push
lret
inc
push
xchg
cmp
cmpb
ficompl
mov
or
das
pushf
in
dec
pop
call
cmp
nop
add
bound
sub
pop
cmc
xlat
insb
pop
adc
add
rclb
nop
or
cmp
jle
imull
add
mov
fstpl
adc
pop
popf
add
mov
pop
andb
fs
iret
test
in
xchg
fiaddl
inc
inc
jmp
test
push
imul
sbb
in
sub
lahf
sub
push
movsl
jnp
add
xchg
add
xchg
sbb
in
push
je
add
jge
sar
ja
add
push
pop
pop
andl
popf
add
rorb
movl
add
mov
jbe
mov
int3
scas
dec
add
xchg
pop
jno
pop
xchg
cli
mov
xchg
imul
and
movsl
add
xor
xchg
xchg
pop
loopne
push
push
dec
inc
inc
sub
dec
jne
add
idivb
dec
pop
or
and
test
insl
add
add
sbb
fs
das
adc
xchg
ret
incl
fnstenv
scas
in
out
push
add
xor
inc
jl
add
sbb
push
dec
ret
mov
jge
rorb
sahf
add
sub
mov
jne
add
testl
adc
push
ret
xlat
dec
sbb
sahf
sarb
ljmp
rorb
cmp
push
and
insl
push
sbb
jl
mov
lods
cli
add
outsb
movsl
mov
pop
and
pop
mov
mov
xchg
mov
and
sub
cltd
xchg
dec
int3
jg
add
out
mov
arpl
push
mov
inc
add
cli
push
out
fstpt
add
ret
imul
andb
or
add
add
fiadds
xchg
das
pop
cmp
rol
adc
nop
push
cmp
mov
jl
arpl
test
pushf
pusha
outsb
adc
cmpsb
pop
dec
in
lods
cmp
and
or
loop
xlat
fisttps
ficoml
adc
jmp
dec
push
lods
jb
push
mov
loopne
mov
add
mov
xchg
cmp
ljmp
mov
shlb
jae
push
es
pop
loopne
out
add
popa
sbb
cmp
mov
pop
sbb
pop
add
xchg
mov
jnp
pop
add
enter
xor
dec
and
bound
add
mov
nop
sarl
jns
iret
or
jle
jno
repnz
pusha
mov
add
sbb
add
pop
nop
cmpsl
in
lret
jle
add
cmc
xor
sbb
push
add
int
xchg
aaa
push
stc
jae
ja
inc
pop
ret
mov
xor
push
pop
push
in
jno
ucomiss
hlt
jge
daa
in
push
test
sbb
sbb
in
jg
cld
test
in
arpl
fwait
adc
out
pop
lods
cmpsl
pusha
adc
inc
add
mov
sbb
sbb
inc
cmpsl
fucomp
jb
sub
cmp
stc
gs
mov
insb
add
popf
stos
rolb
add
mov
fdivrp
into
cmp
mov
ds
or
js
test
adc
sbb
xchg
add
add
testl
xchg
mov
les
pop
add
pop
hlt
fucom
mov
pop
in
sub
call
mov
sub
mov
fisttps
add
rolb
inc
inc
repz
cmp
lods
mov
mov
shrl
mov
and
test
add
inc
cmp
lldt
rol
jns
js
lea
mov
sahf
in
inc
mov
add
fisttps
xchg
pop
mov
leave
adc
xchg
xor
data16
call
push
xor
sbb
ljmp
addb
or
cs
mov
das
cmc
fistpll
mov
add
testb
clc
pop
add
fnsetpm(287
push
rcrl
sub
scas
fmuls
jl
adc
nop
addl
movsl
sbbb
out
mov
inc
xor
add
mov
add
adc
ds
pop
in
add
repz
jmp
lret
mov
cmc
repnz
or
test
mov
jo
add
jnp
gs
sub
aas
dec
add
cld
loop
dec
push
cmc
lret
xchg
and
shl
mov
sbb
rclb
out
call
push
push
add
decb
in
in
jb
scas
stos
movsb
mov
call
stos
pop
inc
add
push
push
pop
add
xchg
cs
aaa
xor
fcom
aas
pop
add
inc
or
in
xchg
aad
mov
enter
roll
sbb
les
add
xor
cmc
sarl
lea
addr16
xor
add
fsubrl
jge
test
add
xor
adc
sbb
mov
xor
add
lds
sub
in
enter
add
arpl
insb
stos
push
iret
jno
rolb
xchg
int
in
push
sub
jp
sbbb
sub
icebp
and
pushf
jbe
out
pop
gs
out
dec
and
xchg
add
cs
insb
imul
cmp
xlat
xchg
ds
push
add
out
nop
sbb
push
leave
mov
xchg
hlt
mov
in
data16
in
pop
adc
test
aaa
pushl
ja
add
int
filds
add
mov
adc
xchg
xlat
add
jmp
jp
adc
fisttpll
cli
add
fisttps
bound
stc
flds
data16
xchg
and
mov
into
dec
iret
jge
push
sub
add
insl
xchg
sub
clc
cmp
and
add
push
pop
popl
jmp
jno
and
inc
or
cli
add
sbb
pop
pop
adc
das
or
cmpsb
add
and
push
sub
dec
add
xchg
jmp
jmp
or
sub
fs
or
ffreep
stos
loop
mov
popl
xor
xchg
pop
enter
push
aaa
inc
mov
incb
push
mov
rclb
shlb
xchg
mov
inc
and
xlat
outsb
cs
in
mov
add
cld
xor
pop
cmovnp
xchg
mov
icebp
push
add
mov
inc
std
xchg
sub
add
dec
enter
inc
vucomisd
lds
out
add
mov
mov
sbb
or
lcall
cli
add
sbb
push
jo
pusha
leave
pop
and
in
xchg
in
enter
cmpsb
imul
add
fldt
aas
inc
cmp
and
mov
add
inc
inc
loope
pop
outsb
pusha
lods
js
mov
and
push
fs
int
cmpsb
sub
mov
push
pushf
jp
cmp
ds
clc
mov
lret
push
call
mov
push
scas
pop
mov
jl
loope
in
xor
jno
xor
loopne
in
cmp
loope
addl
stc
sbb
and
xchg
loop
add
std
cli
pop
pop
inc
jnp
add
negl
jg
nop
test
sub
lds
add
nop
in
push
xchg
add
xor
xchg
jb
loop
add
jne
outsb
call
jns
aas
fisttpll
loopne
mov
popa
and
jp
sub
inc
pop
fisubl
cwtl
fildl
xchg
add
stos
outsb
lret
dec
add
ficomps
lea
bound
cmp
add
imul
inc
add
sbb
cmp
test
test
lock
push
add
subl
add
int
push
push
push
addr16
out
add
fimull
lods
push
mov
add
ja
jb
jg
in
andb
jnp
repz
dec
out
mov
inc
xchg
shrb
sbb
inc
andl
or
xor
jp
ljmp
aas
cmp
jb
add
nop
nop
mov
bswap
or
shl
adc
push
in
mov
mov
mov
sbb
inc
sub
es
add
xor
cmp
fsubp
mov
nop
out
cwtl
call
add
addr16
jmp
jecxz
lock
loop
imul
jne
or
or
pop
cld
mov
add
punpcklwd
sbb
je
outsl
outsb
cs
test
das
sahf
or
jle
and
mov
scas
out
pop
lods
push
stos
out
testb
