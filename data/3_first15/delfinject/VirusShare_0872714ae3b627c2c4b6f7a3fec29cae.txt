push
call
ret
ret
inc
dec
ret
rolb
ss
das
cmp
scas
xor
clc
or
mov
jg,pn
je
pushf
add
push
fs
ret
fcompl
fimuls
ss
loope
pop
mov
mov
jge
addr16
xor
fcomps
lods
dec
jge
add
ror
pop
pop
jle
mov
jmp
das
mov
out
mov
cltd
in
arpl
sbb
push
ror
pop
inc
pushf
push
push
sbb
sub
mov
rcrb
stos
or
and
or
pop
sbb
push
mov
mov
fsubrp
push
ret
sbb
mov
lahf
lcall
xchg
inc
dec
dec
mov
aaa
stc
hlt
popf
cmp
xor
lret
or
call
stos
dec
sbb
xchg
jmp
mov
mov
add
mov
sbb
sub
into
aas
jp
xlat
adc
scas
es
jno
mov
sbb
popf
dec
inc
test
loopne
xchg
jae
push
aaa
ljmp
dec
fs
dec
outsl
sbb
ja
cmp
jns
push
fistpl
dec
sub
mov
push
rcrb
das
inc
mov
rolb
test
push
into
fcoml
cmpsl
cmp
es
cltd
jo
mov
push
cmp
insl
sti
xor
fwait
adc
clc
dec
add
mov
scas
or
or
mov
inc
inc
mov
jge
adc
mov
insb
movsb
mov
or
dec
adc
ja
sub
jle
mov
mov
lea
jns
mov
lret
and
loop
inc
pop
fildll
cmpsb
inc
popa
iret
sub
out
icebp
out
mov
mov
psrlq
pop
cmp
sub
pop
in
ja
and
jae
repz
les
lock
hlt
cmc
lret
mov
fstpl
outsl
jle
loopne
mov
adc
push
into
roll
lahf
insl
or
ret
loope
cmp
lahf
xor
fisttpll
inc
pop
push
adc
jmp
inc
cmp
inc
aam
adc
negb
fldl
hlt
xchg
cmp
pushf
notb
xchg
xchg
js
stc
ret
cmp
lods
mov
cmp
enter
fsubl
mov
ds
dec
movsl
sbb
lods
mov
adc
clc
or
mov
sahf
outsb
in
inc
dec
dec
cmp
and
scas
clc
enter
jg
imul
mov
fisttpl
pop
jnp
jg
imul
mov
jl
sahf
je
cli
mov
jae
jecxz
aas
xor
stos
popa
into
sti
add
jbe
sub
push
add
leave
cmp
shrb
mov
movsb
cmpsb
push
mov
into
mov
test
mov
inc
sahf
cmpxchg
mov
out
popa
ds
cmp
loope
cmp
pusha
testb
push
cmp
jo
mov
insl
or
push
lahf
cmpsb
insb
add
xor
pop
sub
adc
call
mov
out
cmpsl
adc
ljmp
cs
jno
negl
loop
inc
xchg
test
cmpsl
clc
push
jg
in
mov
sub
outsb
dec
lret
sbb
ss
repnz
mov
movsb
test
mov
pop
nop
lds
out
lods
or
and
xchg
imul
sub
push
cwtl
jno
adc
adc
scas
dec
mov
sub
stos
mov
jle
out
xor
loope
inc
lock
in
scas
and
gs
int3
jle
ds
mov
push
jae
nop
and
xlat
imul
into
xchg
lds
stc
adc
jo
fs
and
jg
mov
xchg
sbb
mov
xor
push
sbb
jne
shll
add
inc
mov
loopne
cltd
jo
sub
divl
jne
std
cwtl
push
jo
dec
fnop
mov
xchg
pusha
lock
inc
sbb
mov
pop
cmp
mov
loop
aad
and
pop
pop
call
arpl
orl
inc
test
test
or
mov
mov
lea
add
sar
addr16
push
pop
jge
push
aad
dec
adc
cmpsb
sub
add
dec
push
popf
in
test
or
xchg
fwait
sub
std
push
push
adc
sub
adc
mov
adc
lds
mov
fsubl
push
xor
sbb
in
or
jge
push
sub
psllq
iret
rcr
cmpsl
pop
enter
jae
cmp
xchg
and
or
sub
imulb
mov
mov
cmp
outsb
repz
nop
mov
out
insb
dec
add
in
mov
jmp
sub
cld
xorb
test
int3
dec
push
test
mov
cwtl
enter
lea
sbb
jge
cmp
cli
mov
inc
mov
mov
sti
nop
mov
addr16
xchg
jbe
dec
das
or
cmp
cmpsb
mov
xchg
dec
pushf
test
push
add
adc
ret
bound
and
movb
mov
mov
lcall
pop
xor
or
ljmp
out
std
icebp
add
cld
adc
pop
cli
jae
int3
push
outsb
leave
sub
mov
lret
outsb
popf
xchg
jns
xchg
sub
into
inc
scas
insl
sbb
jae
cltd
sarl
inc
mov
sbbb
outsb
sub
sub
dec
ljmp
mov
int
pop
push
test
push
push
xchg
jbe
iret
jo
sbb
stos
mov
adc
lahf
adc
cli
das
xchg
and
repnz
dec
pop
push
dec
add
movsl
jnp
fnstsw
nop
xchg
out
adc
nop
mov
leave
sbb
std
stc
sar
add
popf
pop
andb
mov
mov
clc
arpl
cmp
xchg
and
cld
sbb
ljmp
lea
negb
fidivl
daa
xchg
pushf
cmp
int3
out
add
cmp
adc
jl
inc
push
pop
mov
es
stos
fucomip
lds
adc
mov
repnz
dec
cwtl
hlt
push
pop
scas
xchg
cmp
fildl
popa
in
xlat
into
ss
out
inc
inc
pushf
sbb
dec
lds
mov
dec
inc
stc
out
out
xor
inc
in
leave
inc
xor
outsl
xor
dec
cld
iret
sarl
pop
in
push
fisttpll
inc
shlb
outsb
fs
and
and
adc
push
decb
daa
sbb
lahf
pop
mov
cld
stos
mov
xchg
push
test
testb
clc
rorl
imul
push
pop
iret
movzbl
idiv
xchg
test
cmp
aaa
sbb
dec
cmp
jnp
fiadds
pop
mov
dec
jae
pop
fisttpll
clc
ss
arpl
in
adc
or
jp
pop
add
hlt
cmp
mov
stc
popf
into
icebp
ret
sub
out
inc
jmp
push
shrb
lds
jle
in
into
pop
push
and
shrl
shrl
bound
push
je
sub
or
sahf
std
pop
or
andb
fcomps
push
add
add
cmp
ss
dec
pop
stos
add
add
sbb
pop
je
push
sbb
lds
hlt
fs
inc
fldl
and
jbe
arpl
push
pop
mov
xchg
lret
ja
vdivps
push
adc
mov
bound
lea
in
out
cmp
divl
inc
mov
sbb
lcall
les
and
add
adc
int3
mov
dec
jne
mov
xor
xor
bound
adc
inc
cmp
mov
mov
insl
pop
cmp
mov
and
in
fs
jecxz
sti
jns
lods
inc
adc
cwtl
pop
shrl
or
pop
and
mov
add
pop
loope
jbe
mov
scas
loope
mov
push
inc
mov
or
popf
outsb
dec
jl
into
popa
xor
push
hlt
nop
xchg
sbb
pop
roll
dec
shll
adc
cmpxchg
mov
std
pop
mov
stos
pop
stos
lds
jb
xor
push
or
add
daa
push
imul
inc
lret
add
push
gs
rorb
push
or
adc
es
sti
lock
mov
mov
das
jp
out
lret
mov
movsl
pop
push
leave
insl
ja
ret
push
adc
mov
hlt
inc
repnz
std
inc
mov
imul
jo
or
test
dec
push
sti
pslld
call
sub
out
xchg
or
das
test
add
outsb
add
sub
sub
xor
mov
sub
add
jge
mov
xor
bound
lods
adc
insl
ret
aas
mov
pop
cmp
jle
mov
xlat
sub
pop
fs
cmp
mov
pop
sahf
scas
clc
dec
imul
inc
outsl
pop
cmp
pop
nop
aam
pop
pop
mov
pop
xor
out
pop
lods
inc
gs
movsl
insb
lcall
stc
daa
mov
sub
ret
arpl
adc
mov
push
call
or
decb
adc
lods
cmp
sub
repz
dec
jmp
ret
cli
mov
aam
in
add
sti
jne
inc
cmpb
push
push
fisubs
imull
leave
push
mov
arpl
stos
lcall
dec
movsb
xor
jnp
arpl
imul
loope
outsl
sbb
in
mov
adc
int3
rcrl
es
in
fcoms
pop
out
mov
ret
or
mov
in
xchg
jecxz
jecxz
testl
push
mov
cmpl
cld
andb
insl
dec
loopne
clc
fldenv
or
adc
inc
xor
push
mov
push
mov
xchg
pop
xor
pop
sahf
pop
rcr
add
and
xlat
std
rorb
cmpsl
push
mulb
loop
jmp
shl
imul
aad
out
jns
adc
addr16
xor
mov
mov
int3
mov
inc
insb
xor
pop
nop
cmp
mov
inc
sti
xor
jne
insb
mov
dec
xchg
add
mov
mov
mov
addr16
popa
fsubrs
shlb
hlt
lods
incl
and
xchg
cltd
pop
mov
mov
scas
scas
push
mov
inc
add
sbb
mov
add
mov
cmpsl
mov
std
ja
testb
pop
fcoms
pop
lods
inc
dec
data16
add
inc
decl
shrl
xchg
push
scas
jecxz
jle
pop
sub
cmp
and
mov
sub
push
sbb
sahf
mov
imul
mov
mov
popf
add
fistl
cmp
sbb
in
add
pushf
mov
call
mov
sbb
jmp
xchg
movsl
clc
inc
test
add
rol
jmp
test
mov
lods
or
les
xor
cmp
adc
mov
dec
nop
bound
dec
ret
addl
or
sbb
mov
push
ds
push
sub
test
outsl
jp
mov
dec
ret
pop
sub
cwtl
mov
mov
or
pop
cmc
or
cmp
xchg
push
dec
dec
lods
mov
sub
dec
adc
aad
push
ret
xchg
mov
ror
jns
inc
push
ja
ss
jae
pop
jg
cltd
test
xchg
mov
cmp
cmp
adc
xchg
dec
add
pop
gs
add
sub
xchg
or
xchg
dec
adc
pop
mov
push
inc
mov
loopne
add
fnsave
pushf
or
lds
jl
xchg
out
xchg
pusha
and
inc
iret
mov
pop
in
test
ljmp
incb
mov
mov
ret
mov
std
adc
xor
stc
fmull
dec
in
jo
es
in
xchg
or
bound
loope
lret
xor
push
cmp
jb
sub
inc
roll
das
cmpsl
mov
or
add
add
pop
lods
mov
loopne
loopne
dec
dec
mov
mov
sahf
lods
icebp
adc
cmc
in
xchg
test
dec
sarl
push
cmp
add
lea
sbb
adc
insl
stos
and
mov
aad
mov
cmc
dec
ret
mov
push
out
subb
add
mov
push
jno
mov
push
lea
xchg
xor
outsl
add
ds
mov
lahf
out
iret
les
shlb
out
nopl
jnp
cmp
mov
push
divl
cmpsb
pop
mov
lds
fsts
lods
rcll
jle
stos
jne
int
sbb
push
and
xor
daa
je
lock
cltd
cli
sub
je
xchg
lods
adc
insb
stos
cli
xchg
repnz
scas
notl
pop
fcomi
xchg
cmp
push
shll
mov
dec
inc
cmp
push
outsb
les
jecxz
push
pop
jns
lcall
arpl
imul
xchg
adc
and
mov
xchg
adc
pop
call
mov
jg
mov
andl
xor
pop
out
lcall
sbb
push
mov
xorl
pop
in
stos
dec
filds
add
faddl
and
cmp
pushf
out
inc
xchg
ljmp
mov
mov
and
shl
mov
iret
scas
jae
sub
dec
and
dec
loop
lret
pop
lret
push
and
or
scas
xor
lcall
jge
xchg
out
in
loope
inc
lcall
in
dec
mov
xlat
movsb
arpl
insl
or
mov
int
sbbl
inc
je
xchg
mov
pop
shrb
xor
int
pop
aam
mov
lea
jo
pop
mov
daa
bound
test
push
mov
sub
hlt
and
lods
test
fstpl
inc
lods
xlat
adc
push
popf
sub
ret
fsts
mov
mov
cmp
subb
push
xor
rorl
add
ret
gs
sbb
pop
loop
cmpl
adc
das
insl
cs
xor
xchg
sahf
lock
fucomi
push
dec
test
enter
push
clc
cmp
or
mov
rcll
jb
gs
xor
cmp
lds
push
jmp
leave
mov
mov
into
mov
inc
scas
fwait
loop
shlb
and
dec
sbb
cld
add
jecxz
sti
imul
daa
mov
nop
daa
mov
xlat
or
mov
test
fstpl
movsb
stos
jns
popa
aaa
jne
add
pop
faddl
movsb
adc
and
repz
mov
push
loope
in
icebp
movsl
imul
mov
xor
lea
rcrb
shlb
fsubs
imul
and
gs
rcrl
jne
adc
mov
pop
js
fisttpl
pop
push
scas
inc
ss
not
add
jecxz
cwtl
mov
mov
or
xchg
mov
mov
dec
push
test
mov
ljmp
mov
jmp
and
insb
adc
mov
outsl
inc
adc
push
jle
xor
les
add
jp
.byte
ret
sbb
add
shr
lea
in
xchg
movhlps
sub
fnstcw
mov
sahf
sbb
mov
cmp
imull
push
movsb
cmpsl
add
nop
mov
je
fildl
cltd
lods
inc
outsb
inc
xor
or
ret
or
jno
enter
lret
mov
pop
jmp
xor
aaa
jecxz
fdiv
sub
jge
leave
mov
or
mov
mov
push
push
lock
and
cwtl
insb
jae
pop
dec
call
inc
out
jl
jmp
or
in
push
das
sbb
clc
std
je
push
sbb
jb
sbb
cs
js
sbb
dec
fdivrl
xor
mov
inc
out
in
mov
shr
std
out
lea
dec
out
sub
cmp
jp
scas
lcall
inc
sbb
repnz
push
push
mov
xchg
xor
push
insb
sbb
xchg
inc
sbb
imul
jo
int3
mov
ret
xor
sti
sub
popf
xchg
js
pop
push
call
test
push
xor
push
pusha
mov
shrb
ror
sbb
jg
sub
clc
pop
push
xchg
cs
add
lret
cmc
fiaddl
mov
pop
xor
pusha
push
stos
test
aam
cld
fildl
scas
or
out
or
dec
sub
mov
add
add
nop
mov
into
mov
adc
xor
int3
iret
push
cmp
cmp
test
jns
jnp
bound
pop
iret
inc
pop
in
mov
cmp
loope
mov
call
and
fists
mov
divb
pop
call
out
int3
outsl
adc
fxtract
enter
loope
mov
scas
mov
repz
out
sbb
add
mov
mov
lods
ljmp
leave
jnp
scas
pop
fidivrs
sub
pop
mov
ja
jns
in
xchg
stos
aas
popa
push
jg
mov
popa
sbb
add
mov
cmp
pop
cltd
je
adc
adc
call
mov
adc
mov
mov
sbb
and
les
test
add
pop
or
out
jl
daa
mov
sbb
leave
imul
and
imul
cltd
lcall
xchg
or
cmp
stc
mov
mov
sbb
loope
jne
sbb
aam
lds
icebp
pop
dec
push
xchg
pop
jp
push
dec
addr16
int
out
cmp
cmp
xchg
inc
adc
jae
sahf
out
push
in
push
cwtl
mov
int3
shld
jmp
pop
arpl
adc
add
cmp
adc
xor
dec
xlat
js
or
sbb
add
xor
adc
rcll
popa
scas
xchg
loopne
pop
mov
loope
test
or
imul
xchg
jmp
xor
cmp
stos
xor
mov
jge
or
dec
dec
cmp
adc
test
add
je
mov
dec
adc
xor
sbb
and
roll
pop
mov
out
mov
and
jb
adc
out
mov
stos
push
mov
mov
xor
sub
out
push
or
sbb
or
push
cmp
push
das
leave
push
and
into
or
jns
dec
push
pop
jno
ljmp
pusha
jae
or
sbb
lret
cs
sub
test
cmp
lret
jp
je
cmpsl
jecxz
call
and
adc
sahf
mov
sbb
mov
mulb
insb
jns
push
and
xchg
cs
dec
aas
inc
and
xchg
fists
cmp
pop
jge
jae
loopne
or
mov
bound
fcoml
inc
adc
xchg
test
sbb
sub
inc
or
insb
cmp
cmp
scas
or
push
add
xchg
sub
pop
stc
sub
hlt
xor
sub
xchg
lahf
test
jle
dec
and
andl
xor
xlat
xchg
add
jo
cmp
das
rcrl
xor
push
cld
fldcw
insl
sarb
xor
out
or
lcall
je
adc
pop
mov
lds
or
stos
call
popa
cltd
pcmpeqd
mov
in
mov
inc
adc
test
or
xchg
daa
add
fs
push
sbb
mov
pop
orb
push
jne
xchg
sbb
imul
pop
cmc
inc
in
mov
insb
notb
daa
xor
sub
loop
and
jmp
mov
xchg
cld
jecxz
gs
popa
movsb
mov
dec
rcrb
movsl
insl
repnz
and
adc
imulb
mov
xchg
lods
sahf
push
int3
scas
lods
fistpl
jo
mov
das
cmpl
fs
enter
lods
outsb
cmpsb
jb
cmp
movd
maxps
jge
arpl
scas
add
jno
mov
xchg
std
add
mov
jmp
roll
test
shrb
pushf
sbb
sub
cmp
and
popa
or
fwait
xchg
push
insl
add
push
xchg
mov
out
xchg
lds
mov
cmp
sbb
sbb
sub
mov
.byte
add
add
inc
add
inc
add
jo
add
add
add
add
or
add
sbb
add
add
add
add
add
add
add
call
add
xor
add
incb
add
or
add
add
add
add
add
add
add
test
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
enter
add
add
add
add
add
add
fadds
add
and
pop
add
add
add
add
add
sahf
pop
add
add
add
add
add
add
add
sahf
pop
add
add
add
add
add
add
add
sahf
pop
add
add
add
add
add
add
add
inc
add
add
add
add
dec
add
dec
add
dec
add
inc
add
or
push
add
inc
add
inc
add
inc
add
dec
add
dec
add
pusha
push
add
xor
pop
or
add
or
push
add
pop
or
add
add
or
movzbl
add
sub
cltd
sahf
pop
imul
outsb
jg
arpl
popa
js
ja
push
imul
jne
push
imul
add
sub
invd
inc
or
dec
and
add
push
add
orb
or
daa
push
or
add
or
cmovs
nopl
add
or
or
or
or
pop
add
or
or
add
sbb
add
in
push
or
or
add
xor
or
pop
fiaddl
or
or
add
and
add
sbb
xor
add
or
or
or
inc
or
out
invd
aaa
add
xor
or
sbb
inc
invd
jmp
or
sysret
mov
add
dec
or
in
or
inc
or
mov
invd
cmp
or
lsl
add
adc
leave
pop
or
out
or
jmp
or
add
add
or
add
add
add
movntq
or
lsl
das
jno
jle
or
pushf
push
add
or
or
or
add
adc
add
or
push
push
add
or
dec
or
ljmp
or
push
add
xor
or
aad
push
add
or
dec
or
ljmp
lar
add
adc
or
dec
or
cmovl
or
pop
push
push
ljmp
add
or
loop
and
imul
popa
pop
aam
mov
pop
popa
sub
pusha
cli
idivl
jl
scas
fwait
in
lods
imul
mov
sub
outsl
mov
pushf
or
lcall
mov
mov
movl
orl
sarl
or
xlat
enter
sar
push
in
sbb
xor
mov
xchg
cltd
test
add
test
cmpsb
xchg
sbb
ror
cmp
fistps
or
repz
test
push
test
push
cmp
ds
sbb
xor
call
mov
jbe
lock
aad
cs
and
jnp
pop
fstp
pop
insb
arpl
fsubl
sti
stc
push
ficoml
or
repz
sub
xor
pushf
and
sbb
movsb
xchg
rorb
inc
mov
and
jae
mov
mov
pop
dec
cmp
loope
mov
clc
dec
mov
les
xchg
or
out
inc
xor
pusha
nop
fstp
mov
popa
jno
xchg
imul
mov
xor
std
mov
xchg
mov
sub
xor
xorl
daa
js
inc
ret
sti
sub
enter
pop
and
push
out
cmp
dec
mov
ficoml
adc
lret
adc
sbb
mov
test
dec
ljmp
dec
add
mov
cmp
cmc
pop
in
jo
xchg
or
push
adc
sbb
pop
add
push
cli
xor
xchg
and
iret
mov
push
inc
cmpb
dec
jmp
scas
pop
cltd
in
les
and
push
adc
gs
and
mov
sarl
je
push
push
pushf
jl
xchg
sub
popf
mov
dec
mov
js,pn
lret
push
sbb
aad
mov
mov
cli
or
jbe
push
je
imulb
push
pop
ds
xor
nop
push
shl
inc
jg
sbb
andl
into
push
mov
pop
mov
pop
sbb
imul
mov
xchg
lret
adc
jns
jle
push
popa
cli
and
out
adc
mov
ss
in
ret
ret
sub
testb
sti
enter
dec
dec
fimull
pop
test
in
je
add
mov
xchg
enter
in
dec
mov
jno
xor
arpl
popf
jae
pop
lock
mov
or
cmp
xchg
mov
test
mov
out
sbb
addr16
outsb
repnz
jae
out
adc
xor
negl
aam
cmp
sbb
jb
dec
add
test
movsb
or
mov
jns
js
and
or
out
lret
fs
out
cmpsb
add
add
pusha
pop
xchg
mov
push
sahf
push
jle
or
push
das
mov
jb
adc
push
stos
cmpsb
jg
imul
adc
push
lods
daa
fnstsw
insl
lret
mov
repz
imul
inc
push
stc
insb
ss
xchg
pop
test
jne
jno
dec
aas
xchg
imul
or
add
rcll
pop
sub
sub
jnp
xlat
out
imul
inc
inc
test
aad
jl
lea
fstps
inc
out
ds
dec
mov
mov
addb
arpl
rclb
fsubl
int3
cmpsb
loopne
pushf
gs
jmp
sbb
push
dec
mov
inc
dec
ja
dec
aam
jge
movsb
fcmovu
mov
popf
jp
aaa
jo
fidivs
xchg
pop
gs
test
push
int
mov
adc
and
lahf
inc
push
dec
mov
and
movl
mov
sbbb
jmp
add
lret
jno
xchg
fildll
fdivl
fsubp
dec
lret
jae
rorl
movsb
sub
test
add
mov
inc
sbb
outsl
mov
shrl
icebp
movsl
repz
mov
cwtl
sbb
jb
stos
loope
lock
fimuls
jno
fisttps
icebp
mov
bound
mov
movsb
loopne
xor
add
dec
lods
repnz
lahf
push
push
adc
rorl
jb
cmp
pop
push
xlat
or
add
jne
mov
sub
jo
aad
iret
sub
jg
add
jg
fwait
pop
sub
pop
sub
mov
push
cli
sbb
pop
mov
xchg
out
sbb
sub
and
push
sub
js
pushf
daa
and
mov
pop
test
shl
xchg
pop
out
mov
pop
push
arpl
xchg
dec
push
cmp
test
adc
mov
in
mov
int3
mov
dec
xor
add
lods
mov
mov
xor
sbb
pushf
sbb
data16
dec
cmpsb
stos
cmp
les
iret
lock
ret
xchg
pop
jne
leave
xchg
aad
hlt
mov
sub
inc
lcall
lret
mov
outsl
gs
push
or
add
mov
sbb
and
add
outsb
adc
mov
xor
add
or
cld
push
popf
cmp
lods
or
dec
test
stc
movsb
mov
xlat
mov
adc
es
jl
push
jecxz
data16
adc
jmp
cwtl
and
jge
jmp
lret
adc
adc
mov
es
negl
dec
hlt
pop
cmp
loopne
pop
add
and
cmp
stos
sub
xchg
mov
pop
adc
pop
subb
adc
test
imul
movb
mov
aad
arpl
out
aad
mov
lods
int
addr16
out
jns
jp
cmpsb
xor
vhaddpd
xchg
pop
popa
cwtl
dec
jp
fsubs
dec
scas
jl
lock
aas
dec
mov
jne
mov
and
adc
andl
cmp
dec
imul
xchg
mov
into
cwtl
ja
xor
loope
fucompp
sbb
inc
shrl
fistpl
and
or
int3
dec
or
movsl
out
mov
adcl
fs
mov
lret
in
jmp
xor
stos
xlat
xchg
je
pushl
clc
ror
inc
cmc
inc
into
and
pop
push
mov
in
cmp
mov
mov
sub
dec
rcr
ljmp
inc
popf
out
stos
push
xor
movsl
adc
add
jl
pop
cli
add
popf
cmp
xor
pusha
rolb
fcoml
fmuls
mov
xchg
sar
inc
jbe
bound
ds
subl
nop
icebp
lret
jle
and
adc
push
iret
les
mov
rorl
or
lock
jo
jo
or
jae
xor
pop
mov
add
outsl
imul
lds
mov
xchg
rclb
rcrb
and
mov
xchg
test
mov
mov
xchg
xor
adc
in
jecxz
push
cwtl
clc
loope
imul
push
push
sarl
in
sub
push
mov
js
fwait
mov
pushf
mov
or
mov
int3
inc
std
loop
lods
lret
dec
inc
add
push
push
divl
sti
add
movsb
repnz
jmp
enter
or
push
pop
adc
out
pop
jo
push
jge
mov
cmp
sub
adc
adcb
add
adc
jmp
jo
add
dec
pusha
jo
fld
gs
outsl
or
adc
sub
call
jns
mov
mov
xor
cmpl
pusha
cmp
dec
aad
mov
stos
sub
sbb
movsl
mov
das
outsl
mov
push
aas
inc
lahf
fcmovu
call
out
cmp
fs
sub
and
leave
adc
adc
test
outsb
xchg
ret
movsl
lret
push
ja
xor
fcompl
test
je
cld
or
push
sub
inc
sarl
jmp
add
stos
in
fnstcw
mov
pop
gs
push
add
sub
adc
xor
fxch
xchg
cmpsl
mov
ja
out
ficompl
iret
jae
xchg
fists
adc
pusha
inc
shrb
insb
mov
dec
lods
cmpsb
mov
xor
lds
push
push
shl
push
sub
jg
jp
addps
mov
insl
jp
inc
xor
jns
sub
sarb
cltd
jo
or
and
aaa
jns
hlt
add
cmp
pop
or
dec
sub
popa
adc
inc
popa
jo
jg
outsl
aaa
out
shlb
push
cmp
jae
sub
pusha
pushf
les
push
les
sub
jo
cli
lods
xor
rorl
scas
and
out
mov
jae
scas
and
xchg
aas
xchg
arpl
mov
out
mov
leave
in
add
sbb
jbe
jmp
lret
int3
insb
fnsave
mov
lret
add
negl
lds
mov
sub
pop
mov
add
push
loope
xchg
imul
gs
out
out
stos
fstpt
rcll
or
inc
leave
lock
call
add
add
in
aad
pusha
icebp
ja
movsb
or
stos
jbe
jle
or
jno
js
lods
push
sbb
clc
cltd
lods
mov
add
fnstsw
pop
out
push
sti
sbb
fisubs
fidivrs
dec
fmuls
cmp
leave
scas
cmpl
adc
cmpsb
mov
lods
add
js
xlat
stos
mov
js
add
scas
imul
lret
lcall
mov
adc
sub
xor
daa
cmpsb
jns
scas
sub
pop
mov
xchg
scas
hlt
pop
mov
xchg
out
inc
xor
mov
and
push
mov
xor
cwtl
mov
test
jmp
sbb
pop
xor
stos
sbb
jg
fst
inc
stc
xchg
mov
xor
push
push
push
cwtl
inc
pop
pop
insl
mov
lds
xchg
fbstp
stc
adc
or
inc
call
fwait
mov
loope
icebp
pop
fsubs
xor
and
nop
sub
in
aad
sahf
mov
adc
lcall
sbb
mov
hlt
lods
fsubs
add
mov
cmp
cmp
jg
dec
cmp
mov
inc
les
aas
jnp
push
cmp
or
pop
xchg
or
dec
fistl
jns
or
loopne
in
rclb
mov
lret
fstpt
insl
sbb
or
push
dec
test
gs
scas
jno
inc
pusha
xchg
push
xchg
and
callw
mov
add
cwtl
dec
popf
rcrb
mov
sbb
mov
push
jbe
sbb
pusha
loope
add
jp
mov
pinsrw
call
mov
lahf
subb
adc
inc
fwait
push
inc
repz
test
stc
data16
sub
pop
cmp
sbb
mov
xor
faddl
pusha
mov
mov
fs
dec
insl
adc
push
lea
jbe
jno
mov
xchg
sti
lret
cs
decl
out
aam
cmp
xchg
jge
xor
out
jbe
jno
lods
add
or
out
scas
xor
lahf
pop
xchg
ret
jmp
mov
jge
inc
stos
rorl
and
lahf
lock
hlt
stos
xchg
shll
xor
xor
inc
hlt
lods
jl
mov
nop
mov
jo
push
clc
push
loope
out
xchg
lock
push
push
inc
pop
mov
xor
aad
cmp
fs
addr16
fildll
xchg
mov
rorb
mov
call
ljmp
aaa
xor
pop
div
cmc
push
inc
sbb
adc
pop
stc
mov
cs
or
pushf
add
data16
aaa
outsl
mov
cmpsb
leave
out
pop
mov
xor
mov
lahf
or
and
fidivl
mov
pop
fsubrl
shl
pop
mov
mov
mov
mov
jge
add
dec
test
or
add
xchg
in
cs
shrl
iret
push
aas
aaa
mov
xchg
js
pusha
push
pop
rorb
inc
lret
mov
loope
inc
cmpsl
repz
stos
inc
jo
shrl
orl
dec
subl
cmc
lods
cmc
push
jg,pt
icebp
xor
lods
add
or
push
sbb
mov
adc
lret
pop
add
adc
shrb
xchg
and
push
push
loope
fiadds
jl
out
in
add
mov
subb
sbb
mov
sar
fwait
roll
aad
push
aas
xor
jg
imul
les
xchg
stc
in
push
sbb
jo
in
xchg
add
xrelease
push
mov
sbb
add
sahf
fdivs
xor
loop
mov
lds
std
cmp
loop
jg
test
or
data16
daa
ficoms
cwtl
dec
imul
out
cs
in
sbb
mov
js
scas
jb
stos
je
out
add
pop
sub
fnstsw
xchg
stos
xchg
outsb
mov
lret
into
mov
cli
and
rcrb
sbb
add
jle
and
adc
sbb
mov
sbb
andl
scas
je
test
pusha
shrb
std
mov
pop
adc
loopne
sarb
add
pop
lcall
cmp
incb
lcall
jmp
fildl
frstor
inc
out
mov
out
fisubl
insl
scas
pop
sti
in
cmp
enter
add
xchg
test
pop
pop
mov
pop
into
cmc
test
pop
je
loop
sub
pop
and
push
out
dec
cmp
cmc
mov
xchg
stos
inc
aaa
inc
fsub
jns
pop
enter
jb
add
popa
imul
mov
mov
in
pop
dec
pusha
rcrb
data16
adcl
pusha
pop
pop
mull
mov
popf
sbb
xor
inc
mov
dec
adc
mov
xchg
pop
sbb
push
movhps
call
fs
push
cmp
cmp
test
fidivs
sbb
mov
inc
shld
xchg
xlat
dec
pusha
ljmp
fwait
push
jb
sahf
push
daa
cmp
ds
or
jmp
addr16
inc
jbe
and
ret
stos
repnz
and
push
and
mov
push
js
add
push
mov
in
pop
inc
sbbl
int3
bound
incl
add
adc
decb
cmpsb
adc
pop
cmp
xor
push
scas
jnp
frstor
jae
fs
pop
scas
sub
sbb
loop
mov
jno
cs
sahf
cmp
lret
xlat
in
sbb
test
dec
clc
test
shll
sub
decb
pop
and
pop
adc
mov
xchg
imul
test
fstp
or
push
lods
cmpsl
jnp
adc
mov
lret
test
xchg
repnz
xchg
lods
repz
push
mov
hlt
xchg
push
arpl
les
jo
divb
sub
jo
adc
sub
fsub
repnz
sub
sub
mov
lret
fistl
adc
mov
cld
es
adc
add
pop
repz
jb
xchg
and
mov
pushf
mov
pop
adc
out
int
cmpsl
jle
pop
jne
mov
and
push
cmp
push
popa
fisttpll
test
cmp
cmp
or
sbb
popf
mov
iret
movsb
fnstenv
jp
mov
xor
gs
dec
bound
jns
notl
and
inc
push
call
sub
les
call
test
adc
push
lret
fstpl
lcall
leave
out
inc
mov
js
mov
jmp
jmp
std
repnz
iret
cmp
xor
sub
ret
rcr
inc
and
push
push
loope
sub
inc
jns
popf
jp
incb
cmpsb
mov
jno
add
dec
mov
mov
xchg
mov
enter
leave
push
xorl
mov
mov
sbb
push
popf
dec
das
pusha
sub
mov
adcb
and
mov
clc
test
mov
loop
dec
xchg
insb
inc
pop
xchg
xor
test
xchg
push
inc
pop
cmp
movsl
jb
cmpsl
add
inc
ret
lahf
mov
das
dec
mov
paddw
and
bound
xor
pop
push
cmp
in
fs
mov
cmp
mov
jle
push
sahf
xchg
or
lods
fdivrl
in
insb
inc
loop
mov
jmp
add
mov
std
decl
jp
gs
stos
mov
pop
movsl
pop
lret
jge
push
movsl
lods
push
mov
setno
mov
cmp
fsincos
aam
bound
stos
addb
sub
or
loop
pop
xor
repz
xor
ljmp
push
inc
lds
pop
shlb
cmp
xchg
movsb
xor
dec
mov
call
jmp
mov
lock
add
sub
pop
outsl
cltd
pop
adc
pop
pushf
fadds
xchg
popa
mov
add
aaa
sti
sbb
mov
add
cmc
add
andl
add
je
insl
sub
jns
sbb
sub
ljmp
jbe
adc
movsl
aaa
ja
adc
jg
ljmp
outsb
hlt
sub
cmpsl
dec
push
xchg
ds
fwait
or
in
mov
scas
faddl
or
stos
mov
cmp
xor
outsl
xor
pop
xchg
loope
pop
push
add
lret
xlat
xchg
test
pop
mov
mov
outsl
jnp
scas
cli
sarb
add
push
les
into
je
scas
push
jae
mov
js
mov
xchg
push
adc
fsts
and
movsb
dec
fistpll
loopne
bound
sbb
pop
movsb
jle
pop
stos
imulb
xchg
adc
push
ds
sbb
mov
mov
lret
or
in
push
es
cmp
bnd
sub
in
nop
mov
adc
cmp
out
out
cmp
add
into
mov
and
inc
ret
mov
and
cmp
fnstsw
adc
iret
sbb
push
mov
mov
cmpsb
mov
mov
dec
mov
rcrl
nop
add
jle
sub
add
mov
pop
xchg
and
jp
ljmp
aaa
jg
lods
ds
imul
std
in
xchg
mov
jb
dec
lret
xor
fists
mov
bound
mov
cvtpi2ps
inc
pop
outsl
jae
adc
push
or
rcrb
icebp
addr16
pop
mov
popf
xchg
mov
jne
fisubl
and
jbe
adc
fisttpll
jns
sub
lds
mov
arpl
bound
test
mov
fsubp
push
dec
mov
jle
adc
mov
add
pushw
aad
nop
push
jae
cmpsl
orl
rcll
mov
fdivr
jg
jnp
dec
adc
arpl
jb
add
arpl
and
mov
loop
sbb
aam
mov
dec
jo
mov
ds
jae
stos
ret
stos
arpl
mov
or
fimull
shl
mov
ss
mov
arpl
out
movsl
test
int3
daa
test
sahf
cmp
jno
sub
or
mov
push
mov
loope
test
xchg
jne
mov
jl
outsb
lret
cmp
xlat
mov
test
scas
outsl
testl
xchg
xchg
in
sbbb
leave
adc
add
scas
popf
xor
mov
or
divl
outsb
mov
jmp
cwtl
xchg
ljmp
push
cltd
not
cld
and
xchg
xchg
sub
mov
mov
pop
daa
out
and
mov
jno
dec
mov
dec
and
out
sbb
outsl
ret
mov
adc
testb
push
cmpsl
inc
int
xor
xor
shll
outsb
push
mov
insl
nop
popa
mov
enter
push
or
sbb
pushf
icebp
outsb
leave
test
cli
pop
fnstsw
enter
enter
mov
adc
imul
cmp
mov
aaa
mov
cltd
and
or
mov
imul
roll
dec
scas
dec
repz
inc
loop
sub
ljmp
lods
popf
cmp
stc
je
xor
adcb
sarl
mov
push
mov
fidivrs
or
pop
ret
fisttpll
mov
repz
pop
aas
and
cmpsl
addr16
and
sbb
aas
mov
xor
sub
or
mov
push
loop
xchg
mull
cmp
out
add
mov
xor
dec
fcmovnu
or
xchg
adc
pop
cs
jne
jne
lcall
xchg
arpl
movsl
fs
fidivrs
xchg
shrb
mov
adc
adc
rcrb
scas
cmpb
leave
cmpb
movsl
lods
mov
fs
push
sbb
cmp
inc
xor
inc
testl
cmpsl
jmp
inc
jns
adc
add
pop
mov
adc
pop
add
cs
jle
jbe
insb
shlb
jnp
cmpsl
aaa
in
sub
into
cmc
mov
nop
testb
lea
cmpsl
testb
push
cwtl
pushf
lret
aaa
ret
push
inc
dec
je
pop
loope
hlt
or
add
call
push
mov
jns
add
sub
add
ds
xor
fcmovnu
adc
adcl
icebp
insl
or
pop
mov
pusha
lock
cmp
mov
xchg
inc
movsb
inc
xor
fwait
das
ljmp
xor
adcl
popa
pop
lods
andb
lods
mov
xor
xchg
mov
aas
jge
out
pop
jge
mov
aaa
mov
mov
mov
pop
xor
in
or
mov
sub
leave
mov
ja
sahf
push
lret
arpl
mov
addr16
mov
fdivs
add
dec
push
or
test
test
fsubr
xchg
and
inc
dec
mov
lahf
push
inc
shl
cmp
fsub
dec
pop
lds
shrb
lea
lret
pop
cltd
movsl
push
cwtl
xchg
xchg
shrl
aad
jle
cwtl
outsl
lret
cmp
sahf
xchg
lret
fwait
jae
jb
push
dec
adc
mov
and
lret
and
add
xchg
push
into
ljmp
mov
lahf
inc
cmpsb
cld
push
shll
pop
or
inc
andb
add
mov
mov
ja
mov
test
or
inc
mov
int3
and
mov
sub
mov
inc
ret
stos
mov
ret
xor
push
out
icebp
jecxz
xchg
add
sub
xor
out
push
fdivr
outsb
repz
sbb
mov
push
dec
jne
arpl
or
pop
les
cwtl
jno
sub
mov
fidivs
dec
inc
mov
inc
dec
fwait
popa
mov
fs
xchg
test
push
push
inc
mov
xor
dec
xor
cmp
test
fs
insb
inc
sarb
mov
out
cmpsb
popa
ror
inc
jns
xchg
pcmpeqw
adc
mov
aad
mov
daa
loop
mov
dec
fldcw
dec
and
sub
imul
into
mov
and
pop
sub
rcrb
lock
insl
cltd
dec
inc
int3
cmp
jle
push
dec
xchg
js
cld
jo
stc
aaa
sbb
lret
mov
mov
scas
xchg
dec
pop
push
xor
adc
cmc
adc
inc
cs
insb
scas
imul
xchg
gs
stos
or
sbb
fsts
fisubrl
mov
enter
push
fs
xor
lcall
ss
das
notb
pusha
xchg
les
aas
out
or
pop
ss
dec
and
mov
xor
shrb
cmp
mov
dec
pop
push
add
jle
push
pop
mov
dec
mov
cmp
sbb
dec
xchg
lahf
mov
js
dec
addr16
adc
mov
push
aam
jae
sub
push
mov
imul
jg
rcrb
mov
js
jg
xchg
insl
hlt
hlt
bound
rclb
cmpsl
hlt
out
xlat
incl
shlb
xor
ret
sub
dec
in
stos
scas
divl
cmp
data16
lods
int
jmp
dec
cmp
movsl
and
inc
movsb
mov
rolb
and
pop
push
scas
add
push
mov
hlt
bound
xlat
adc
ret
mov
iret
sbb
dec
push
and
shll
loope
test
repz
or
shlb
mov
push
dec
pop
in
cmp
xchg
mov
je
ret
sub
enter
repz
jo
lret
inc
add
xchg
outsl
pop
out
fs
sahf
and
inc
in
testl
mov
mov
mov
cmp
int
cmp
out
mov
notb
push
stos
gs
push
mov
out
sti
fcmovb
jae
mov
pmulhw
mov
loope
jmp
bound
popf
ficoms
or
pop
stc
jmp
ljmp
jg
icebp
lea
sub
std
pop
xchg
adc
int
xchg
mov
push
pop
mov
shl
pop
fidivs
xor
xchg
mov
xlat
sti
int3
mov
scas
jne
arpl
mov
test
push
inc
ficompl
cltd
repnz
js
int3
pop
sub
pop
push
loopne
movsl
adc
aam
xchg
or
inc
and
ja
gs
iret
pop
rorl
cmp
sbb
or
cmpsl
shrl
push
lock
out
xor
aas
movsb
dec
pop
inc
sub
ds
mov
add
in
jg
push
sub
jne
cs
repz
insl
cltd
xchg
sbbl
mov
cmpsl
dec
dec
mull
mov
mov
dec
test
inc
frstor
loop
adc
das
xchg
mov
add
outsl
sbb
or
sub
enter
inc
bound
jb
jns
lods
sub
jmp
and
ret
jns
mov
add
dec
imul
mov
sbb
xorl
pop
fsubp
xchg
rcrl
movsl
adc
push
jo
and
mov
iret
mov
sbb
aaa
call
rol
cltd
lds
nop
outsb
jno
sub
pushf
adc
pop
push
fcoml
pop
pop
inc
pop
insl
sbb
lds
lret
in
fiaddl
xchg
or
fcoml
fcomps
and
jnp
out
cltd
lcall
and
inc
fiaddl
pop
incb
pop
pushl
ds
adc
dec
int
push
pop
es
test
arpl
movsl
mov
pop
or
int
push
jmp
add
xor
and
rorb
je
fldt
cmp
mov
or
mov
cltd
push
adc
out
jbe
xchg
mov
and
lea
jmp
aas
divl
xor
pop
aad
mov
cmp
in
sub
fsubl
mov
cld
lret
add
mov
pop
mov
cwtl
sub
sar
xchg
in
mov
test
sub
push
in
lods
dec
and
movsl
pop
xor
sub
std
je
cwtl
loop
add
xchg
and
push
push
lods
jne
jle
cmpl
jp
je
stc
dec
out
insl
push
jbe
call
cmc
imul
sbb
lds
das
faddp
dec
outsb
fwait
or
sub
xor
inc
fisttps
dec
shlb
lock
xchg
mov
stos
or
adc
imul
insb
fldenv
sahf
mov
incl
and
clc
adc
sarb
xchg
jl
and
or
cwtl
cmpsl
xor
fistl
inc
cmp
or
jae
pop
jmp
xor
push
jp
outsl
xor
outsb
cmpsl
xchg
ret
jno
lods
in
sbb
adc
movsl
cmpl
mov
mov
cld
sub
xchg
ja
push
pop
cmpsl
leave
dec
adc
nop
iret
icebp
and
push
mov
andl
and
inc
pushf
test
shll
mov
arpl
inc
jl
jbe
rorl
cld
rcr
mov
icebp
push
lcall
or
cmp
sub
dec
xor
adc
xor
cli
pop
add
lret
data16
cmpsb
push
in
adc
inc
adc
push
add
inc
addr16
cmpsb
fsubs
cmp
filds
and
mov
sbb
nop
or
ret
push
aaa
cmpsb
adc
mov
andl
fsubs
add
push
fidivrs
push
sub
sbb
pop
jmp
int
jo
fistpll
xor
movsb
jbe
rcll
popa
ficompl
sarl
push
call
mov
xor
sbb
push
sbb
xor
jg
sahf
push
sbb
inc
adc
ret
lea
mov
or
dec
int
outsl
insl
jno
in
cmp
sbb
sbb
gs
cwtl
push
daa
lcall
in
mov
fimuls
cmp
mov
sbb
scas
xchg
mov
fwait
xchg
or
or
lret
mov
fdivrp
xchg
sub
xor
mov
mov
pop
test
mov
dec
xchg
sahf
sub
sub
shl
ret
test
and
fcmovb
and
mov
pop
sub
push
pop
inc
and
jno
pop
fs
lods
dec
stc
xchg
addr16
arpl
sub
sbb
ljmp
fs
mov
inc
fcoml
sub
test
mov
ds
mov
jmp
imul
das
pop
das
fstps
pop
sub
lcall
xchg
xor
aas
daa
dec
dec
pop
scas
mov
or
pop
or
outsb
mov
aas
insb
xchg
dec
mov
ret
adc
lcall
mov
add
pop
or
push
pop
je
aad
aas
xchg
mov
aaa
int
imul
or
daa
iret
mov
dec
mov
addr16
imul
les
aaa
mov
clc
xchg
aas
test
cmpsl
dec
xor
rorb
hlt
cmc
cmp
cmp
and
ja
mov
inc
jl
clc
rcl
sbb
cmp
push
and
jnp
scas
clc
in
jle
mov
cs
jne
adc
mov
sbb
daa
xchg
je
ret
xchg
adc
and
hlt
add
lcall
sti
mov
shlb
mov
or
cmp
xchg
addl
scas
iret
fld
ljmp
dec
cmp
jmp
fs
test
out
lods
fldl
jle
cmp
mov
jno
push
jns
loope
outsl
jnp
xchg
add
or
jle
cli
or
cmp
pop
inc
mov
lods
cmp
pop
adc
jecxz
xchg
cmp
and
les
jbe
or
jle
in
mov
mov
cmpsb
lea
add
cmp
aas
pop
push
incb
lahf
jmp
fs
dec
adc
add
inc
jno
inc
mov
xor
pop
repnz
stos
and
es
daa
push
or
and
dec
lea
fisttps
loop
movb
test
rclb
sti
fisttps
out
mov
aaa
popf
jb
lods
fstpl
popa
popf
divl
cmpsb
adc
xchg
gs
add
jb
or
xchg
aaa
rcrl
rorl
loope
add
mov
rorb
add
mov
adc
ret
push
daa
jle
mov
mov
out
mov
fwait
jb
sub
xchg
mov
test
ret
push
lret
ljmp
std
imul
ret
dec
mov
out
push
adc
mov
lock
push
ljmp
pop
daa
int3
mov
dec
outsl
lret
jb
mov
loop
lods
test
jmp
daa
jle
xor
pop
in
xor
add
sbb
repz
ficompl
cltd
pop
andl
jbe
rcll
xchg
mov
xlat
xchg
sub
adc
mov
dec
jnp
sbb
orl
jge
sub
inc
gs
iret
mov
nop
shlb
int3
and
loope
aaa
pop
pop
xchg
pushf
movsb
jl
xchg
stos
sub
rorb
dec
andl
sti
movsb
fcoms
das
outsb
popa
jecxz
adc
jns
insb
scas
cmp
pop
or
shll
daa
rorl
rep
cs
lods
idiv
pop
repz
fisubs
orl
cmc
adc
cs
cmpsl
xor
jge
lcall
gs
fldcw
sti
mov
movsb
cmc
adc
dec
xor
adc
add
pop
imul
sbb
sti
fidivs
daa
adc
loopne
mov
or
mov
pop
jae
cmp
mov
mov
stc
mov
fnstsw
mov
int3
sbb
das
mov
movsl
xlat
jo
sbb
es
fnstenv
je
roll
xor
addr16
push
stc
lret
sub
pop
test
jae
inc
xlat
mov
xchg
inc
aaa
clc
adc
mov
jle
imul
mov
cmp
mov
mov
dec
mov
int
jb
push
and
fstpl
dec
out
int3
shrb
leave
adcl
fbstp
inc
adc
adc
cltd
and
sbbb
push
sbb
fdivl
mov
add
in
fcmovnbe
inc
scas
lds
fidivrs
inc
lods
call
sub
stos
stos
xor
ljmp
add
test
movsl
mov
push
dec
cmp
and
in
xchg
push
lcall
cmpsl
push
or
in
stos
idivl
sti
icebp
repnz
fnsave
js
icebp
movswl
fsubrp
adc
pushf
pop
dec
add
xlat
mov
sub
sub
jg
and
push
cmp
ss
shlb
fistpl
push
mov
cltd
adc
iret
packssdw
sbb
loop
pop
iret
movhlps
testl
fdivrp
or
outsb
mov
mov
test
push
push
mov
mov
sub
add
sahf
xchg
paddq
jne
fnstenv
enter
xlat
mov
jne
inc
mov
je
mov
js
int3
pop
ficompl
scas
jmp
call
sub
into
movsb
cwtl
add
add
adc
pop
or
cltd
xlat
xor
mov
repnz
int3
out
fs
aad
or
int
je
cmp
js
bound
sbbl
outsb
shll
mov
std
fstpt
rcll
sbb
mov
ret
inc
cmp
xor
push
and
fcompl
in
stc
cmp
adc
or
jg
test
aad
loope
and
add
or
enter
cmp
idivb
loop
xchg
sub
sbb
mov
dec
test
in
or
outsl
jno
popa
iret
pop
sub
aad
movsb
push
inc
xchg
out
xchg
push
dec
fnstcw
mov
insl
pusha
leave
lahf
out
push
insb
inc
pushf
notb
jnp
push
xchg
mov
mov
ds
or
lds
pushf
testb
iret
mov
mov
lahf
inc
cmc
adc
scas
or
lea
arpl
push
cwtl
data16
or
push
push
rcr
dec
pop
push
lahf
cmpsb
push
add
pushf
inc
das
jbe
or
dec
loop
jg
jp
clc
push
or
pusha
pavgb
cmp
cmp
stos
xchg
fdivs
and
cli
test
jle
dec
push
iret
pushl
fisttpl
ficompl
aad
clc
rcr
nop
adc
mov
inc
cmp
scas
leave
sub
stos
clc
cld
int3
testb
jnp
xchg
cli
mov
pop
xchg
mov
push
repz
in
outsl
jae
xor
addl
movsl
xchg
scas
jg
sub
sbbb
xchg
jecxz
scas
inc
stos
adc
fwait
jno
test
add
adc
popf
enter
fcomps
or
pop
lea
int3
fwait
jmp
scas
dec
cmp
add
ret
or
xor
outsl
cmpsb
pop
cmpsb
ret
sub
add
fldcw
or
pop
cmp
or
dec
adc
inc
cmp
lock
cmpsb
outsb
cmp
out
xlat
cmp
idivl
loop
scas
sub
loop
aas
adc
inc
inc
sbb
pop
repnz
cmpl
in
push
into
and
cmpsb
push
lods
add
ljmp
and
ret
dec
jge
popf
cltd
ja
int
cmp
lock
ja
ja
jne
test
repnz
push
out
js
xchg
mov
movsb
inc
mov
repz
les
or
push
inc
mov
test
popf
ret
cmp
sub
ljmp
out
xchg
or
sub
daa
push
add
iret
jno
sub
insl
mov
addl
out
add
test
push
jle
jnp
mov
dec
inc
ljmpw
test
stc
cwtl
xchg
ficomps
jae
loop
add
ljmp
int3
mov
gs
les
inc
leave
bnd
push
jecxz
ljmp
jno
outsl
dec
ja
loope
mov
mul
fcoms
jge
adc
pop
sbb
andb
lods
stos
movl
gs
arpl
xor
scas
hlt
int3
mov
mov
push
mov
lret
bound
daa
int3
sub
pushf
mov
test
xchg
mov
mov
std
mov
stos
mov
fsubrl
iret
scas
add
outsl
mov
stos
aaa
lret
cli
in
cmpsb
push
leave
outsb
andl
leave
shrb
fwait
bound
mov
cwtl
stos
outsb
in
xor
sbb
jecxz
cmp
imul
ret
mov
xor
psubd
test
shr
inc
fildll
sbb
insb
stc
and
jb
or
or
jae
xchg
in
adc
sub
mov
and
aad
xchg
mov
sbb
cmpsb
push
fs
stos
xchg
sub
or
fbld
cwtl
in
rol
jns
mov
push
xor
dec
or
xchg
lret
add
sbb
ljmp
add
ficoms
scas
ss
mov
or
xchg
xlat
movl
cli
sub
inc
es
sbb
and
clc
outsl
push
loop
addr16
add
inc
jo
pop
lods
repnz
pop
ficoms
pop
scas
add
pop
adc
out
mul
mov
mov
pop
dec
lret
mov
into
roll
insl
test
dec
jne
fdivrs
and
scas
push
negl
test
dec
jg,pt
pop
mov
sub
or
stos
pop
xlat
loope
sbb
push
sbb
push
xor
test
test
and
ljmp
xor
fsubr
rol
mov
add
mov
ja
mov
ret
push
sub
pop
fdiv
data16
sub
xchg
jne
lea
sar
cmpsl
dec
lea
inc
xor
es
lods
cmp
int3
pop
dec
or
mov
sub
int
cld
sbb
sbb
shll
or
sbb
fistps
call
ret
in
sti
sbb
insb
or
push
mov
sub
jecxz
or
and
add
scas
lret
fs
movsl
in
mov
iret
jp
sub
pop
nop
into
push
lret
jb
inc
cmp
mov
jg
push
jno
or
sbb
and
jl
shrl
push
cmp
aas
call
xchg
xlat
pop
cld
fnstsw
push
loope
adc
and
jge
sbb
gs
or
mull
xor
int3
hlt
dec
and
aaa
or
es
stos
sub
jmp
loopne
adc
cmp
jo
adc
mov
je
mov
testl
inc
sbb
mov
xor
xchg
aam
pop
mov
inc
es
mov
mov
push
clc
or
ljmp
push
mov
stc
shl
mov
lds
bound
rclb
movsb
push
xor
icebp
cwtl
loopne
xchg
mov
cs
mov
jns
fwait
adc
lahf
cs
xor
dec
fstps
shrb
scas
xorl
sub
daa
cwtl
add
icebp
mov
jbe
jae
pop
fwait
pop
nop
lock
mov
sbb
push
aam
lret
sbb
cmp
addb
mov
ja
sahf
stos
cmp
xor
sub
pop
add
popa
jecxz
cld
mov
mov
fwait
pop
rcrb
sbbl
inc
add
cmpsl
adc
inc
xchg
fdivrp
aas
or
and
test
push
inc
and
cmc
into
je
push
dec
sti
cmc
insl
inc
clc
aas
ficomps
shrb
xlat
sbb
pop
mov
mov
xchg
xor
cli
lret
cmc
sub
ficoml
push
ret
ret
filds
or
iret
jne
dec
pushf
add
arpl
jmp
push
decb
mov
lret
push
mov
in
aaa
or
in
sub
and
add
mov
xlat
dec
rol
and
xchg
repz
ja
and
push
aas
pop
daa
cs
jo
aas
xor
sub
lods
xchg
test
inc
lds
cli
push
rorb
lea
and
pop
add
movsb
loope
outsb
sbb
xchg
popa
add
or
gs
ret
data16
xchg
stos
or
add
lret
insb
mov
add
sbb
mov
aaa
stc
mov
pop
rcll
dec
sbb
icebp
fsubr
nop
ds
add
repz
shl
push
addr16
test
xchg
pop
jecxz
mov
xor
cmpsl
push
lret
addr16
xor
push
out
adc
xor
imul
push
add
sub
cmp
stc
leave
mov
mov
iret
sub
andb
stos
in
sqrtps
fmull
cmpsb
lods
les
and
mov
outsb
mov
stos
jns
mov
mov
mov
or
jne
mov
out
mov
cmpsb
mov
add
pop
dec
adc
loop
pop
jecxz
mov
push
fstp
xor
fcmovnu
fwait
call
push
jb
movsb
sbb
pop
lock
rorl
dec
fidivrl
lahf
cmp
mov
out
stos
ss
shlb
orb
cwtl
xchg
jg
rolb
outsb
out
push
cmpsl
xor
sahf
movsb
mov
lods
xchg
out
dec
imul
fwait
xchg
dec
decl
dec
mov
and
sbb
and
daa
popa
cmp
inc
cmp
test
lret
repz
xlat
jnp
push
jae
push
decb
sahf
jbe
lret
or
add
lret
fsubs
pushl
push
movsl
int3
lret
repz
and
sbb
ja
and
and
inc
dec
repz
xor
and
rep
cwtl
in
lahf
or
xor
mov
inc
adc
add
iret
sbb
and
stos
movsb
mull
mov
daa
je
xchg
addr16
push
push
scas
fidivrl
movsb
mov
testb
int
mov
call
daa
cmc
loop
lret
out
cltd
or
sub
sbb
enter
js
outsl
cmp
out
pop
shrb
pop
mov
mov
call
push
sbb
imulb
mov
scas
and
mov
inc
dec
inc
add
out
xor
pusha
add
push
cmc
jge
cmp
sub
stos
sub
and
pop
insl
add
scas
sbb
ret
inc
movsl
scas
or
insl
pop
mov
stos
fidivs
sub
mov
std
xchg
aad
push
xor
mov
psubsw
pushf
mov
push
repz
jnp
mov
xor
xchg
xchg
mov
cmp
shll
or
repnz
sub
inc
data16
inc
push
arpl
pop
pop
ja
test
repnz
sbb
fldenv
xor
mov
xor
xor
pop
leave
ljmp
ret
movsb
pop
ss
jp
xor
lret
out
daa
fildll
sub
ss
push
mov
mov
push
sub
or
lock
xor
aam
enter
add
out
loopne
mov
mov
mov
xlat
mov
pop
jecxz
rcl
test
dec
cs
adc
jecxz
sti
outsb
or
ret
mov
push
pop
cmc
xchg
test
sub
mov
nop
in
mov
xor
subb
fistpll
xchg
pop
scas
ficomps
mov
imul
jae
and
mov
pusha
mov
add
cli
mov
and
les
test
roll
push
sub
popf
andb
mov
lds
inc
popf
in
int
mov
outsb
cmp
adc
inc
pop
jg
xor
push
movsl
out
sub
push
and
shrb
rorl
xor
cmp
stos
bound
jecxz
pop
mov
inc
push
hlt
cmc
mov
mov
lea
sbb
jne
pop
je
mov
inc
or
mov
les
sbb
pop
sub
push
sbb
aas
data16
and
inc
imull
mov
dec
in
int
nop
lock
jns
fildl
sarl
testb
fcmove
jb
lret
hlt
push
xor
mov
xor
xor
jge
lret
push
mov
jno
lods
adc
inc
mov
fs
pop
mov
cld
xchg
xchg
test
fwait
shlb
dec
movl
xor
int
and
and
cmpsb
outsl
std
std
cmp
lret
adc
push
cwtl
outsb
jbe
xchg
xor
mov
mov
dec
leave
dec
das
pop
stc
fwait
negl
add
lea
sbb
das
ja
adc
fmuls
outsl
ljmp
test
xchg
faddp
orl
push
cmp
hlt
hlt
or
dec
fsqrt
stos
idivb
fwait
dec
cmp
ud2
jbe
ret
dec
pop
into
push
pop
or
and
push
push
and
mov
pop
leave
mov
out
jg
jl
push
push
insb
int
data16
out
xor
push
sti
dec
into
in
lods
addr16
inc
inc
movsl
xchg
and
out
mov
in
add
ljmp
mov
adc
adc
pop
adc
add
inc
push
jecxz
cs
rcl
push
hlt
jno
dec
push
dec
shrl
inc
mov
pusha
cli
pusha
jp
aas
dec
dec
mov
scas
mov
into
lret
and
call
or
int3
mov
daa
jg
idivb
scas
lods
mov
jnp
push
leave
cmp
fmull
jne
push
adc
das
cld
out
jl
xor
cmp
cmp
push
and
mov
jp
push
insb
stc
loop
jg
sbb
gs
cmp
xchg
into
fistl
les
pop
sub
pusha
xor
std
push
sbb
repnz
fldcw
add
test
insl
pop
movsb
xor
ret
int3
pop
mov
les
pop
dec
push
das
pop
pop
add
lock
addl
mov
jae
mov
xchg
cs
cmp
jb
scas
repz
hlt
xchg
aas
in
std
pop
cmc
mov
mov
mov
mov
int3
push
pop
jae
adc
or
aam
dec
es
aad
mov
test
dec
insb
fcoml
push
cmpsl
pop
mov
push
mov
mov
leave
icebp
pop
in
daa
xlat
ja
outsl
das
insl
xor
out
mov
int3
and
fidivs
add
push
xor
push
jb
pushf
in
in
adc
cltd
movsb
inc
xchg
scas
and
pop
mov
das
xchg
ss
ss
push
inc
cld
ja
xor
mov
cld
xchg
cs
ss
pop
jge
adc
lahf
xchg
jle
push
mov
add
jecxz
sub
lret
in
mov
rorl
cwtl
push
pop
test
loope
pop
jl
out
nop
lret
test
enter
or
inc
inc
and
push
aam
enter
adc
std
dec
sub
dec
loop
mov
in
enter
ds
pop
push
movsb
lret
xchg
push
jns
pop
jns
scas
mov
cmp
icebp
in
pop
inc
mov
test
xchg
push
in
mov
and
popf
insl
stos
sahf
stc
or
pop
inc
dec
push
sbb
imull
xchg
out
negl
xchg
push
pop
sub
mov
shl
icebp
jmp
mov
pop
imul
pop
fildll
pop
xchg
xchg
cmp
inc
cmpsl
xchg
add
out
lds
aas
mov
push
rclb
int
into
out
sub
mov
into
shrl
mov
lea
inc
lods
jnp
test
pop
lcall
data16
inc
jb
into
iret
and
and
sti
int
scas
xchg
cmp
lahf
mulb
pop
sbb
dec
int
xchg
fistpll
test
pusha
mov
or
repnz
mov
push
mov
jbe
adc
jg
es
in
outsl
idivl
movsb
std
nop
cwtl
stc
frstor
xor
jmp
iret
fidivl
test
es
ss
fucomip
lods
fisubl
incl
sbb
xchg
push
sub
and
lret
cmpsl
mov
sarl
dec
jbe
xchg
imul
dec
xor
add
push
push
mov
icebp
lods
mov
cmp
xchg
in
repnz
pushf
lods
sahf
and
xor
aam
outsb
mov
lcall
mov
xchg
xchg
pop
adc
jno
mov
out
push
jns
mov
out
and
xlat
outsb
pop
std
into
test
cmp
pop
add
addl
pop
push
inc
test
je
sbb
fldcw
into
jp
cmpsl
fwait
lea
pushf
popf
pop
mov
call
pop
orb
xor
xchg
sub
sbb
add
dec
mov
mov
inc
sbb
jno
adc
out
stos
out
bound
inc
push
xor
fisttpl
addr16
shrl
xchg
jns
icebp
xchg
insb
fimuls
loop
cmp
pop
fcmovnbe
push
sub
mov
adc
cwtl
test
push
fs
inc
inc
in
inc
push
add
popa
xor
mov
test
filds
cmpsb
out
js
jg
lcall
jae
mov
out
xor
push
push
daa
loopne
mov
adc
nop
scas
xor
ret
loopne
mov
sbb
andl
test
insl
mov
sar
rol
xchg
dec
pop
pushl
fisttps
sbbb
idivl
loope
xchg
cmp
mov
add
mov
sbb
inc
sbb
je
push
andb
pop
sarl
out
cs
jmp
push
cs
sbb
dec
test
cmpsb
lcall
out
sub
xchg
inc
pop
lret
out
mov
jo
and
int
aad
xor
jge
sbb
xchg
mov
push
xchg
and
leave
sub
pop
test
xor
inc
loope
mov
dec
push
rclb
mov
fistpll
shrl
mov
cmp
jb
pop
pushf
lret
int3
nop
dec
aad
jbe
mov
push
or
sbb
xchg
cwtl
sbb
pop
lock
stc
pop
push
fwait
jb
push
add
mov
cmp
mov
xchg
lods
incl
lret
int3
cmp
andb
lds
out
add
stos
inc
insb
adc
lret
jns
jo
pop
bound
pop
push
pop
inc
jmp
jnp,pt
stos
ret
clc
cmc
mul
imul
lods
leave
fcomi
mov
arpl
push
mov
ror
push
mov
pushf
imul
adc
cmc
test
out
xchg
lods
pushf
push
notl
mov
mov
outsb
mov
mov
jg
fsts
jb
scas
push
mov
std
jle
dec
pusha
mov
inc
or
cld
int
aam
and
aas
xchg
adcl
jp
mov
aad
mov
fists
and
popa
mov
test
lret
lods
jb
add
or
loop
ds
sub
mov
add
cli
leave
push
inc
mov
dec
dec
dec
lock
sbb
and
es
xor
mov
cmpsl
adc
and
mov
mov
call
arpl
dec
pop
mov
out
pop
cmp
outsl
addr16
fstpt
add
lods
fidivl
add
or
and
sbb
jg
mov
dec
insb
push
stos
shr
fistpll
inc
lock
xchg
iret
xchg
mov
pop
repz
imul
add
pop
cmc
xchg
mov
sarl
and
movsl
imul
rcrb
mov
mov
cmpsb
sti
inc
shll
jne
orl
mov
and
mov
loopne
mov
dec
jno
or
cli
lcall
pop
xor
adc
push
push
cltd
bound
out
insl
lock
repz
or
mov
arpl
jns
push
mov
xor
mov
push
cs
nop
cmp
pop
stos
dec
std
pop
into
jbe
add
and
test
jo
in
inc
lret
inc
out
xchg
sub
aam
xor
jo
and
jmp
sahf
mov
fldcw
mov
divb
pop
mov
add
jb
cmc
int3
imul
out
ds
jecxz
scas
and
pusha
into
out
cltd
daa
jl
pop
out
sub
and
iret
pushf
and
adc
mov
jge
icebp
add
lods
addb
outsb
mov
ds
ret
and
nop
sub
push
cmpsl
cmp
sub
or
push
xlat
xor
and
stc
dec
sub
mov
jge
repz
andb
imul
ror
xchg
jne
or
sti
enter
loopne
movb
in
push
fwait
pop
push
test
cwtl
notl
into
into
cmp
fldl
push
out
mov
push
adc
push
ja
icebp
lret
add
arpl
jg
iret
xchg
and
repz
sub
enter
jg
adc
adc
sbb
adc
add
call
dec
push
pop
add
push
daa
adc
mov
push
pop
test
ret
or
in
movsl
rolb
int3
and
int
jge
imul
or
addr16
and
aaa
or
mov
addr16
std
and
fwait
mov
xchg
and
jecxz
popf
push
inc
xor
mov
mov
mov
inc
sahf
sbb
inc
push
jnp
test
or
jo
jb
mov
and
add
push
test
mov
sub
lret
inc
out
movsl
inc
lock
loope
cmp
ss
xor
push
jmp
stos
push
aaa
js
add
push
insl
int
xor
fbld
or
add
dec
pop
cld
add
push
inc
aaa
pop
dec
mov
in
std
push
add
imul
or
xlat
or
xchg
mov
jne
hlt
lret
lods
and
cmc
mov
push
mov
aam
and
es
ljmp
fsubl
push
and
pop
pop
add
adc
push
jp
fists
mov
cmp
mov
out
pop
movsl
int3
sbb
icebp
inc
add
xor
adcb
push
mov
loopne
mov
fildll
adc
jae
lea
data16
jno
cli
popa
fiadds
imul
inc
out
xchg
and
pop
jmp
lock
dec
cmpl
data16
lea
mov
movsb
jmp
out
out
stc
cmp
mov
push
jb
xchg
les
aam
xor
ds
dec
mov
adc
push
pop
dec
je
xchg
flds
xchg
dec
lods
push
lret
pushf
pop
jno
mov
loope
loope
and
or
mov
sbb
movsb
or
in
xor
cld
mov
popf
rclb
mov
pop
mov
mov
pusha
pushf
push
std
mov
shlb
jbe
les
or
or
cmp
jg
mov
add
popf
add
test
mov
jo
fsubs
and
adc
pop
cltd
jae
push
pop
dec
jo
pop
pop
add
xchg
xchg
repnz
jge
nop
cmovno
hlt
dec
testl
xor
lret
mov
cmpsb
enter
add
mov
lcall
push
inc
lret
leave
cli
lds
mov
icebp
inc
push
popl
mov
loopne
iret
stos
repz
pop
ds
dec
movl
repz
test
mov
lods
loope
xor
pop
and
fadds
mov
mov
sbb
nop
pop
jns
adc
xchg
xor
jno
orb
js
cmpsb
dec
jp
gs
sub
jae
xor
out
mov
mov
clc
xor
sbb
insb
cmc
ds
xchg
xor
mov
add
sbb
jne
add
int
mov
aam
xchg
iret
mov
fstl
aam
cmc
jecxz
xor
push
inc
dec
push
or
jmp
loopne
cmp
pop
test
out
mov
jp
out
cmp
out
clc
sub
outsb
pop
cs
mov
mov
xchg
sub
jbe
and
and
aaa
imul
xor
mov
popf
out
jae
or
inc
ret
into
fsubrs
pop
jmp
popa
cmp
xchg
sub
ss
jb
mov
insl
push
loopne
mov
xlat
lcall
js
dec
out
jb
inc
xchg
hlt
mov
jmp
pop
hlt
mov
scas
pop
lahf
add
jle
xlat
pop
dec
mov
and
in
repnz
xchg
insb
dec
idivb
popf
out
fs
pop
push
fstl
ja
jle
mov
adc
dec
sbb
jne
outsb
jns
push
xchg
fsubrs
into
pusha
ret
add
iret
out
aas
out
sti
inc
add
mov
rolb
xchg
push
and
sub
enter
xchg
mov
or
jle
mov
in
pushf
pop
and
data16
hlt
imul
shlb
stc
mov
add
pop
lret
cmp
add
add
mov
push
pop
xchg
enter
pop
pushl
and
outsl
and
lea
cltd
pusha
push
lret
fwait
or
mov
daa
aas
ljmpw
je
lret
inc
xor
shrl
imul
cmp
jnp
dec
and
cmp
iret
push
sbb
mov
imul
lea
ret
push
dec
mov
or
nop
hlt
leave
lea
dec
pop
or
pop
lret
loope
mov
and
push
add
pop
push
dec
or
mov
arpl
sbb
sbb
cwtl
pusha
adc
cwtl
ror
popa
gs
scas
jp
mov
in
sbb
inc
daa
adc
pop
add
pmaxsw
push
aam
sub
mov
shrl
add
adc
fs
popf
xchg
inc
mov
out
sahf
and
mov
testb
aad
mov
mov
in
clc
adc
xor
mov
mov
inc
mov
call
nop
sahf
mov
imul
out
pop
mov
push
and
stos
jne
jne
clc
daa
jmp
push
out
andl
lcall
push
add
lea
addl
or
lret
stos
arpl
negl
mov
rolb
cmpsl
pusha
je
pusha
xor
test
mov
shrb
xchg
cld
jae
subb
mov
mov
adc
je
mov
icebp
lds
lea
push
pop
adc
loope
stc
dec
lock
dec
popf
jbe
hlt
fimuls
lret
push
mov
pop
push
mov
daa
icebp
cli
mov
mov
add
in
out
pop
adc
sbb
test
shr
and
pop
push
sbb
arpl
enter
test
jno
xlat
arpl
dec
add
lock
jbe
and
add
es
sbb
sub
sbb
movsb
ss
sbb
movsb
dec
fwait
push
inc
dec
push
mov
mov
scas
sbb
pop
xchg
rol
or
jne
cmc
sub
dec
scas
scas
xor
push
fldcw
xchg
hlt
sbb
or
add
aaa
fstl
cli
push
stos
in
push
enter
lret
insb
mov
repz
jecxz
xchg
jle
mov
in
cmc
subl
cltd
loopne
ret
xchg
mov
scas
sti
aam
fidivrs
test
test
shlb
pop
jmp
addr16
outsl
neg
es
pop
fists
inc
cmpl
jmp
dec
sbb
test
test
xor
xor
and
dec
or
aaa
out
loop
or
push
sbb
nop
or
xor
mov
js
mov
popa
adc
adc
jae
and
mov
cmp
ret
jecxz
mov
lret
push
add
aam
outsl
pushf
dec
jne
fisttpl
add
daa
push
mov
push
into
dec
lds
or
pusha
xchg
fwait
push
xlat
rorl
mov
mov
mov
push
leave
shrb
sbb
int
xor
mov
xorl
out
and
push
pop
testb
fbstp
sub
cmc
mov
int
inc
ljmp
dec
into
cmp
repz
roll
ud2
aaa
test
jne
iret
les
rcrb
fs
pop
xor
inc
mov
sub
inc
fcmovbe
ja
mov
pop
xor
stos
jo
push
mov
mov
push
sbb
sbb
and
lds
jbe
sub
fisttps
mov
mov
mov
fcomps
movsb
jne
adc
pop
test
push
push
aam
mov
add
mov
push
loope
fnsave
mov
mov
jne
and
mov
xchg
das
in
into
lods
ficoms
jle
inc
ja
loopne
or
pop
and
pop
mov
outsl
mov
pop
lods
add
mov
mov
in
fwait
int
xlat
sbb
loop
jb
mov
or
ret
negb
shrl
or
loopne
push
cmp
pop
add
adc
mov
int
adc
xor
repnz
aam
xchg
xchg
mov
insl
das
push
mov
lea
popa
xchg
dec
mov
or
call
mov
push
cmp
je
fimuls
neg
cltd
cltd
ficoms
xchg
and
lds
or
xchg
mov
push
dec
testb
ja
sar
push
push
ds
dec
loop
cmp
pop
sub
adc
repz
lods
in
xchg
sub
mov
cwtl
les
aas
add
ja
push
push
mov
or
sub
xor
inc
pop
adc
push
xchg
mov
mov
aas
repnz
sti
mov
jb
mov
imul
mov
mov
xor
jle
sub
pusha
lret
sahf
pop
sub
icebp
pop
mov
sub
and
push
mov
repnz
xchg
mov
push
repz
mov
add
fisubrl
mov
add
push
mov
aad
cmc
into
orb
mov
push
jl
adc
sbb
popf
addr16
xor
or
movsb
mov
fistl
add
push
lock
inc
mov
shl
repz
mov
rcrb
mov
pop
nop
lods
aam
xor
add
inc
push
xchg
xor
out
fwait
je
in
clc
jmp
scas
sbb
add
fiadds
out
cmp
mov
and
mov
sub
xor
test
div
mov
xchg
into
and
xor
scas
pop
dec
fisttpl
add
cltd
xchg
outsb
mov
add
push
rclb
xorl
mov
jbe
or
add
sbb
pop
dec
shr
loopne
in
addr16
negb
sbb
sti
imul
jns
imul
out
inc
aas
imul
dec
jno
daa
and
fdivs
inc
or
pop
cmp
dec
or
les
dec
cmp
xchg
adc
or
je
int
push
lret
push
dec
push
test
rcll
add
mov
jnp
xchg
pop
sub
lods
cmp
scas
mov
test
push
rol
inc
test
scas
sub
xchg
sahf
adc
repz
sub
movsl
imul
aas
or
repnz
or
jno,pn
jmp
mov
mov
mov
jle
and
sahf
fidivs
mov
mov
sub
nop
or
cmpsl
adc
add
mov
mov
and
pop
adc
xchg
pop
test
add
daa
or
mov
shlb
mov
mov
loopnew
ficompl
jmp
notl
into
ja
fstl
lret
lcall
cmp
dec
push
out
adc
sahf
mov
mov
pusha
call
cltd
adc
cwtl
clc
mov
mov
mov
scas
test
mov
cli
adc
lcall
xor
dec
mov
sahf
les
xchg
push
mov
lret
call
mov
call
or
inc
inc
incb
inc
sub
les
jbe
lahf
cmp
inc
dec
and
mov
les
sub
and
xor
and
insb
push
fimuls
stos
pusha
or
sbb
insb
xor
pop
mov
nop
popa
jp
fisubrs
push
or
mov
stos
jns
sahf
push
ja
shl
dec
fsubs
out
mov
mov
mov
or
adc
adc
shr
adc
push
lret
outsl
push
stc
lock
mov
sub
pop
xor
mov
decb
lods
fldcw
jne
pop
jns
or
add
pop
inc
dec
add
pop
testb
cmpsb
in
jg
pop
mov
mov
mov
fstpt
sbb
insb
push
ljmp
and
andl
pop
adc
scas
out
mov
mov
mov
cmp
cmp
sbb
xchg
jne
shlb
fbstp
lods
xlat
or
mov
sbb
jne
les
cs
sahf
pop
cmp
lret
push
cltd
into
jg
pop
mov
sub
jno
cmp
sbbb
ja
adc
mov
or
xchg
xor
or
iret
add
in
adc
jg
popf
out
mov
fnstcw
idivl
pop
inc
loopne
out
push
sbbl
and
dec
sbb
cmc
dec
out
mov
testb
jl
test
sbb
adc
add
add
jb
mov
dec
jne
lcall
and
js
sti
shll
push
xor
inc
sbbb
sbb
pop
sarb
movl
sbb
and
push
int3
lret
adc
mov
out
adc
pop
lds
cmc
cmpsl
push
add
push
push
xor
cmc
mov
jae
inc
fisttpll
insl
pop
jg
pop
lret
cld
pop
lods
adc
xor
mov
lret
test
xchg
int
sti
icebp
mov
popa
cltd
insb
sbb
pop
dec
mov
scas
in
pusha
mov
pop
and
or
icebp
dec
sahf
mov
xchg
or
ret
test
testl
in
inc
dec
mov
es
xor
int3
pusha
ret
mov
xchg
mov
rep
sbb
cs
pop
sub
aas
push
jne
lcall
mov
mov
repz
dec
xchg
ss
pusha
loop
mov
push
pop
addr16
mov
ljmp
fidivrl
out
pop
scas
fimull
inc
xor
aaa
jo
dec
jg
inc
iret
mov
mov
cmp
mov
sub
adc
adc
loop
mov
cmpb
jo
andb
fistpl
lods
std
jecxz
mov
outsl
and
pop
stos
movsl
divb
jp
aad
dec
mov
out
lret
scas
push
push
add
out
mov
mov
mov
xchg
jne
mov
and
cmp
imul
js
repz
inc
test
xor
push
xchg
out
pusha
sub
negl
sarl
scas
mov
mov
enter
jp
push
ss
xor
pop
sbb
mov
lods
jecxz
xor
add
and
or
add
mov
push
movsl
loop
adc
pop
xchg
push
jge
pop
xchg
subl
sub
jbe
out
pop
nop
inc
scas
jne
pop
dec
jo
xchg
lcall
popa
adc
xor
push
mov
push
xor
cwtl
cmp
ficoml
shl
mov
addr16
out
ficoml
icebp
lock
in
data16
sub
adc
jp
and
push
dec
lcall
imul
and
add
sbb
rorl
jnp
nop
leave
rcr
and
pushf
addr16
orl
sub
push
cmpsl
into
mov
mov
mov
cmpsl
mov
mov
and
out
mov
bound
test
fimull
test
and
jo
movsl
inc
rorl
xor
stos
or
loop
or
xor
mov
dec
lea
sbb
inc
repnz
mov
dec
rclb
lea
lahf
fmulp
int
subb
push
mov
lcall
cmpsb
mov
mov
inc
add
mov
das
icebp
addb
mov
test
mov
lea
jl
imul
fdivrl
cmp
jb
in
mov
cmp
inc
fwait
mov
sub
sbb
gs
scas
lcall
push
sbb
lahf
sub
mov
pushw
mov
mov
sarl
repnz
js
fidivs
mov
xchg
mov
mov
inc
aaa
nop
test
adc
pusha
test
loop
aaa
jmp
sub
sbb
mov
sub
bound
or
cltd
mov
jb
pop
mov
fucompp
call
push
es
mov
jmp
xor
std
mov
xlat
adc
imul
sar
stc
subb
xor
movsb
mov
mov
add
or
mov
sbb
fisubrl
jns
call
inc
xchg
and
xchg
test
adc
dec
push
inc
jb
arpl
pushw
inc
adc
dec
aas
mov
push
cmp
sub
pop
dec
inc
inc
pop
iret
jge
sub
and
cmpsl
pop
roll
dec
aas
std
popf
dec
lret
testl
orb
sub
mov
mov
push
lret
push
pop
fucomp
data16
inc
xor
ss
rorl
addl
dec
andl
adc
mov
xor
ret
pop
test
or
lcall
stos
cmp
sub
or
arpl
dec
sub
pusha
hlt
push
cltd
jbe
push
push
imul
push
pop
adc
mov
data16
and
insl
jl
vmwrite
push
adc
int
pusha
and
adc
xor
add
cld
sbb
stos
sbb
xor
es
push
jb
cmc
xchg
fdivr
add
inc
iret
cmp
rcll
out
enter
xchg
lock
movsl
inc
xlat
mov
jle
ja
lret
imul
jo
mov
and
pushf
cmp
or
and
shrb
and
inc
pop
iret
dec
out
mov
sub
add
add
adc
cmp
push
aad
test
cmpsb
data16
jbe
xchg
aam
cmp
push
jo
stc
cmp
pop
push
jne
push
ficoms
sbb
push
aaa
lea
mov
jne,pt
cmp
pusha
dec
lret
adc
mov
sbb
popf
stos
xor
pop
sbb
push
adc
inc
stos
xchg
pop
push
leave
push
fisttpll
mov
dec
xchg
and
jp
pop
ja
push
int
ret
jmp
sub
popf
ds
mov
xchg
scas
shrl
arpl
dec
and
cmp
or
cmp
mov
ljmp
pop
xor
adc
pop
mov
pop
stc
in
lds
addl
and
sub
sub
push
shll
cmp
iret
jle
sbb
dec
sbb
dec
xchg
iret
or
xchg
pop
inc
xchg
sub
cld
dec
test
and
movsb
pop
test
cmp
xor
arpl
insb
int3
xor
inc
add
and
xchg
sub
popf
xchg
repz
sub
push
add
lods
movsb
jmp
sbb
cld
cmp
mov
and
sub
insb
test
ret
inc
loop
aas
stos
inc
shll
shl
xchg
ds
imul
out
mov
cmp
mov
decb
aas
inc
or
fwait
sti
lret
into
es
xabort
mov
sbb
jp
fidivrs
or
ss
and
and
fdiv
ret
cli
jge
dec
arpl
xlat
sub
lahf
test
pop
pop
jmp
and
aas
loop
mul
mov
sub
lods
mov
and
popa
sbb
pushf
dec
cmp
mov
shll
enter
lret
daa
xor
dec
sbb
test
out
or
popf
jle
pusha
imul
and
jl
jb
sbb
gs
bound
cmpsl
xor
mov
sub
mov
dec
mov
lahf
dec
cs
inc
shrl
sub
jbe
mov
das
cmp
lahf
jg
cltd
xchg
lock
lods
dec
les
push
mov
fsub
ret
mov
cmc
les
sub
test
jb
adc
mov
or
das
push
sub
mov
das
or
dec
bound
push
jl
dec
int
mulb
xchg
push
popa
rolb
clc
iret
add
sub
in
call
cmp
fiaddl
jae
cmc
inc
sub
test
outsl
inc
lret
neg
add
mov
push
adcb
and
inc
pop
inc
fisttps
ss
test
or
jge
mov
lods
dec
stc
fmul
push
push
mov
mov
jg
aas
sub
negl
out
sbb
loop
fdivrl
fwait
aad
pop
aas
arpl
aad
sub
lods
shr
ds
dec
inc
pusha
adc
push
stos
ret
test
in
mov
sub
mov
nop
ret
out
imulb
testl
push
or
mov
mov
cmp
add
fs
sbb
jl
push
mov
das
ror
jb
adc
test
roll
sbb
adc
je
push
cmp
nop
jae
lret
add
and
lahf
adc
fidivrl
cmpb
dec
dec
add
or
outsl
mov
add
xchg
jne
mov
inc
push
xchg
and
movsl
pop
movsb
cwtl
mov
divb
push
cmc
mov
aaa
or
dec
aad
mov
push
or
outsl
lahf
or
in
jecxz
les
dec
out
push
mov
push
aam
and
push
mov
pop
mov
ret
xchg
cwtl
decl
xor
lods
cmp
stos
scas
cmc
adc
daa
popa
fldcw
repnz
adc
stos
pop
cld
fisttps
test
fistps
jmp
lahf
inc
idivb
inc
mov
mov
cltd
les
jbe
push
dec
jo
mov
mov
gs
stc
cmc
add
push
jmp
adc
std
addb
out
ficoml
jl
dec
jl
cltd
fcoms
xchg
cmp
test
fimuls
fs
shlb
pop
jno
lea
pop
cmc
les
sub
in
inc
sbb
subb
sbb
cli
push
shl
movsb
or
cli
ja
mov
pusha
jmp
push
fistps
pushl
stc
aaa
push
xchg
fcoms
dec
imul
pop
fcmovnu
aaa
inc
push
rolb
mov
dec
xor
int3
and
xchg
cmpsl
fcomps
ljmp
popf
mov
mov
std
lods
mov
mov
fdivrs
insl
mov
sub
movsb
add
xor
dec
ret
jb
les
fiaddl
stos
cmp
lods
lahf
scas
pop
pop
arpl
dec
cmovl
dec
dec
push
lret
xchg
jl
dec
je
pushf
mov
hlt
add
rcl
add
lods
out
in
mov
mov
cld
lds
push
push
inc
sub
jge
add
fisubs
xor
pop
jo
and
push
pop
pop
add
push
clc
sbb
jg
mov
jg
sahf
or
cmp
jo
sub
jnp
addr16
push
push
lcall
cmc
jmp
adcb
dec
arpl
push
push
push
out
mov
adc
adc
repnz
xchg
mov
mov
xor
push
je
test
inc
fs
out
mov
les
cli
pop
cmp
mov
popf
push
sbb
mov
inc
xor
sub
and
add
scas
or
lcall
mov
xchg
xchg
cmpb
push
push
xchg
sub
cs
mov
movsb
ds
cmpl
or
rcrl
fs
jns
add
inc
in
in
cmpsl
jae
push
fs
test
mov
scas
cwtl
mov
je
cmpsl
sbb
dec
arpl
cmpsl
mov
jle
push
and
fprem1
sub
mov
test
push
adc
push
sbb
mov
cli
sbb
cmc
jl
xchg
call
add
faddl
ret
shl
pop
dec
es
inc
pusha
pusha
cwtl
xchg
stc
popa
fbstp
notl
jecxz
and
xor
cli
mov
pusha
jae
out
ljmp
or
mov
inc
jnp
jl
lcall
scas
lock
lods
cmp
inc
mov
fucomip
pop
es
jnp
clc
cltd
lea
leave
fildll
mov
and
push
mov
roll
sbb
iret
jb
add
cli
jge
or
ja
hlt
rolb
push
push
mov
xchg
xor
sbb
insb
divl
push
jge
pop
gs
out
adc
outsb
mov
icebp
inc
xchg
out
pop
push
lret
pop
hlt
es
mov
ficompl
fcompl
sarb
or
std
in
sar
add
cmp
movsb
dec
jle
fmuls
adc
mov
pop
arpl
mov
int
sub
idivb
cmpsb
and
adc
mov
sahf
and
push
outsl
xor
cmp
mov
cmp
addr16
pop
loope
arpl
push
lahf
push
mov
pop
lret
mov
dec
xlat
mov
insb
lret
pop
scas
or
inc
push
dec
or
iret
cmpsb
lods
and
int
pop
cld
icebp
out
loop
add
cmc
sbb
mov
shrb
xchg
enter
data16
mov
aam
mov
push
xor
xor
lock
popf
call
mov
xchg
sbb
push
jnp
lods
adc
sub
mov
adcl
pop
movsb
nop
dec
fidivs
rcl
mov
icebp
shll
outsb
dec
sbb
sti
int
add
adc
arpl
sti
xorb
and
mov
pusha
pop
mov
std
int3
scas
mov
jmp
enter
data16
dec
das
lock
jbe
jge
loop
cmpsb
jo
nop
jle
daa
testl
sub
sbb
scas
xorb
cltd
es
adc
push
cli
loop
mov
mov
jl
mov
sub
sti
jbe
jmp
push
shlb
pop
out
idivb
jg
dec
arpl
mov
jo
push
mov
xor
sbb
aam
pop
adc
imul
ret
pop
pop
pop
xchg
imul
cmp
shrl
xorl
sbb
pop
shl
jg
inc
ss
jecxz
adc
dec
mov
out
mov
cmpsb
ret
cmpsl
cli
es
jno
push
repnz
push
lahf
sti
ljmp
push
fs
pop
popl
mov
gs
xor
adc
sub
jbe
cmp
jno
dec
mov
xchg
rorl
test
and
dec
xor
lahf
jecxz
cmp
inc
inc
sbb
sub
pop
fstps
or
xchg
je
in
mov
rcl
and
cmp
sti
das
ret
ret
pop
mov
pop
lods
pusha
xor
pop
daa
sbb
xchg
mov
test
fcompl
jmp
pop
or
out
fdivrs
call
xchg
pop
lods
dec
int
sbb
and
and
movsl
jmp
subb
xor
fstpt
das
add
pop
fs
sub
cs
inc
inc
lods
daa
stos
sbb
and
xlat
je
in
divl
mov
jno
add
sub
ret
cmp
dec
lods
clc
aaa
clc
xchg
sbbb
pusha
dec
int
test
or
lods
inc
ror
stos
insb
out
lret
add
pop
rcll
loopne
sub
outsb
jae
std
jo
pop
mov
fwait
sbb
cld
mov
push
xchg
mov
movsl
lods
arpl
imul
jb
ljmp
push
ljmp
or
adc
jnp
mov
xchg
cmc
cmpsb
stc
add
or
dec
fwait
inc
push
cmpsb
daa
stos
ja
jmp
adc
in
mov
mov
xlat
or
test
jno
xchg
scas
mov
sub
mov
pop
test
aad
sbb
add
mov
pop
cmp
ja
jb
sti
push
jo
dec
push
pop
ds
inc
jle
lcall
lahf
popa
fldt
pusha
pop
mov
dec
xor
cmpsl
int3
xchg
rcll
ljmp
inc
ja
mov
adc
call
xor
fcomps
shl
es
pop
leave
adc
jno
data16
inc
cmp
jecxz
outsb
add
push
inc
adc
mov
push
fstpt
in
xor
mov
cs
subl
ret
stc
jle
push
lahf
mov
jmp
dec
lahf
ja
and
jb
ss
je
add
mov
xor
ficoms
mov
xor
mov
cmpsb
xchg
cld
je
cmp
aas
add
push
mov
repnz
call
imul
lods
xor
test
xchg
outsl
pushf
movb
inc
pop
ja
xchg
fcmovnb
aaa
pop
mov
stos
addr16
pop
pop
rolb
cli
adc
out
ret
xchg
adc
push
loopne
jge
cmc
push
stos
je
xchg
xor
add
mov
or
cmp
cmpsb
cmp
ja
stos
adc
push
inc
push
jb
daa
jl
mov
popa
cmp
mov
dec
into
sbb
rorl
push
loopne
ret
mov
mov
cmc
mov
dec
cmpsl
adc
sbb
test
or
push
lret
add
sbb
repnz
arpl
or
cltd
xor
fisubrl
sahf
pop
sub
jmp
lcall
popf
adcb
jne
lea
popa
or
mov
inc
lcall
jmp
cmp
in
adc
or
mov
lahf
xchg
aas
std
pushf
pop
decl
sub
sbb
push
and
mov
sub
jp
mov
bound
jnp
mov
mov
sub
ljmp
sbb
xor
mov
cmp
lahf
lret
and
lock
pop
dec
mov
jnp
js
pop
push
fxtract
sbb
test
inc
xchg
loop
xchg
fidivrs
and
sti
xchg
inc
sbb
lahf
cli
sbb
cld
or
mov
sub
or
leave
daa
inc
orb
mov
mov
jle
adc
xor
jecxz
mov
jmp
sbb
xchg
xchg
xor
dec
lcall
mov
les
mov
cmp
mov
pusha
popa
mov
jnp
fs
lcall
sub
mov
lret
pusha
scas
das
pop
das
mov
mov
pop
orl
int
enter
xor
sub
or
push
lahf
loopne
adc
rcr
fwait
inc
mov
jnp
into
sbb
mov
icebp
loope
inc
addr16
push
and
xlat
bound
ljmp
sbb
js
ljmp
jbe
xchg
es
loop
mov
add
sbb
cmp
adc
mov
scas
pop
out
adc
xchg
les
movsl
push
fnstenv
cmp
test
mov
inc
test
out
icebp
outsb
push
gs
sub
xlat
in
sub
sub
fstpt
addr16
cmp
pop
inc
loope
cld
mov
inc
mov
push
stc
je,pn
ja
dec
cmp
push
aas
add
dec
or
icebp
aad
push
sbb
pop
jecxz
aad
or
fmull
and
rorl
dec
cmpsl
loope
cmp
divl
add
dec
movsb
pop
lea
das
mov
fdivs
add
jbe
sbb
int
xor
xchg
mov
cmp
mov
js
dec
rcpps
idivb
add
fldcw
mov
out
out
bound
jnp
scas
add
jno
mov
or
in
in
push
adc
repz
lret
xchg
xchg
sahf
rclb
stc
stc
les
xchg
lcall
cmp
loop
lods
and
dec
addb
stos
outsl
daa
enter
lret
sub
jg
mov
dec
sbbl
icebp
xlat
insb
lea
or
jmp
add
sbb
mov
sbbb
pop
mov
adc
cmp
mov
cmp
xchg
or
pop
shll
jns
test
ficomps
mov
push
xor
stc
test
push
lret
mov
mov
rcl
sub
movsl
adc
inc
in
scas
xchg
mov
mov
idivb
push
mov
mov
and
lcall
adc
lods
mov
notl
int
mov
jge
lcall
inc
sti
testb
push
sarl
lds
testb
hlt
mov
ja
gs
and
dec
push
jmp
xchg
divl
adc
push
gs
lahf
test
dec
jecxz
in
fs
insl
lods
or
add
xor
out
pushf
dec
xchg
popa
insl
cmc
in
lret
sbbl
lahf
mov
fwait
fwait
inc
mov
enter
cmp
xlat
or
dec
sub
mov
sub
jbe
fidivl
addl
and
inc
cmp
popa
or
pop
inc
push
pushf
cltd
sub
fisttpll
push
pop
inc
push
pop
in
mov
mov
idivb
pushf
adc
dec
dec
jo
scas
mov
sar
orl
xchg
insl
bound
lods
mov
mov
movsb
dec
pop
push
lahf
pop
js
mov
mov
js
and
jns
int3
or
jmp
push
push
loop
or
iret
in
push
ficoms
cmp
xor
inc
mov
in
clc
loop
rclb
xor
outsl
cmp
fmuls
jmp
add
ret
adc
mov
adc
movsl
push
test
mov
aad
mov
cwtl
popa
inc
mov
mov
mov
in
and
loope
pop
fstps
mov
mov
pop
iret
push
lods
fistpll
cli
in
xchg
out
hlt
in
lret
push
mov
or
js
xlat
xchg
mov
rcr
xchg
lds
and
sub
xchg
shrl
jnp
sub
xor
mov
push
sbb
add
imul
mov
push
dec
repnz
arpl
repnz
sub
mov
int
jnp
mov
dec
fxch
sub
rorl
mov
pop
shrl
add
jle
dec
and
xchg
cmp
aas
mov
sar
xchg
int
inc
out
push
test
out
and
lea
jnp
xlat
or
insl
inc
and
cmp
int
addr16
pop
cmp
cmp
fistps
divl
jno
push
xchg
imul
jb
pop
orb
xor
push
sbb
inc
sbb
pop
and
sub
dec
iret
into
movsl
mov
insb
cwtl
mov
fdivl
xchg
fistl
xor
test
es
cs
mov
xor
mov
hlt
insb
push
jns
test
daa
in
mov
pop
pop
rorb
pop
loopne
imul
fldcw
sbb
sarl
mov
mov
test
dec
or
mov
mov
xor
mov
mov
sbb
fidivl
jecxz
arpl
insl
rcrb
hlt
push
sub
cmpsb
or
jo
cmpsb
cmpsb
pop
test
pop
loop
rorb
je
pop
es
push
loopne
cmc
dec
imulb
cltd
mov
xchg
mov
cld
divb
xor
xchg
test
mov
cmp
pop
and
mov
mov
jo
push
out
popa
adc
imul
mov
push
scas
jnp
inc
movsl
test
mov
sti
scas
lods
aaa
fldcw
cmc
dec
negl
mov
in
push
mov
cmc
cmp
movsl
cmp
cmp
std
mov
xchg
cmp
lods
jle
cwtl
xchg
jne
push
icebp
xor
test
lods
sbb
scas
shll
add
mov
popa
mov
lret
ljmp
adc
xor
iret
adc
and
imul
testb
jno
loope
xor
inc
xchg
push
rcrl
push
mov
mov
es
dec
imul
popl
cltd
dec
adc
adc
mov
pop
data16
std
jge
out
imul
rorb
or
adc
fwait
sarb
out
adc
mov
push
repnz
mov
adc
stc
test
les
xlat
jmp
mov
push
out
push
sahf
int3
idivl
lods
sbb
lahf
ret
popf
adc
xchg
outsb
xor
push
mov
push
sbb
pop
out
inc
and
mov
xchg
sbb
push
sbb
lss
sbb
mov
adc
test
jl
pop
mov
push
inc
sbb
fimuls
fwait
dec
rclb
xor
push
pop
shrl
jno
lods
xor
stc
adc
in
or
and
mov
ret
inc
sbb
xchg
mov
insb
pop
imul
jo
and
mov
jl
dec
pop
cmpsl
nop
pusha
or
push
jg
pop
adc
push
sub
and
mov
xchg
pusha
lret
push
cmp
xor
and
gs
jbe
inc
cwtl
fstps
popa
xchg
ret
dec
pop
rcll
mov
repz
adc
cmpsb
mov
clc
mov
pop
out
push
rcl
repnz
jge
cmpb
popf
out
popf
xor
or
cmp
mov
xchg
push
jae
and
mov
jnp
mov
push
test
add
or
aad
mov
mov
data16
insb
ss
lahf
and
jnp
or
jno
lcall
push
sbb
shrb
sub
jbe
push
push
jecxz
rcrb
in
or
and
fisttpl
mov
ret
cwtl
js
xchg
sbb
mov
cmp
add
sbb
orb
adc
xchg
sbb
push
push
push
sub
pop
ret
push
inc
pop
push
jge
ret
out
ret
push
or
into
xchg
into
ljmp
sbb
xor
jecxz
notb
test
mov
adc
in
mov
outsl
ds
push
out
sub
xor
jnp,pt
js
or
and
cmp
lcall
push
fsubrl
call
mov
mov
ds
and
mov
or
inc
out
lds
mull
cmpsl
js
enter
jne
or
mov
xor
sub
push
call
push
or
mov
add
ja
cwtl
cmp
sbb
fnstcw
cmp
aam
add
lret
fidivrl
push
xor
cmp
sub
fldcw
add
in
xorl
test
adc
push
mov
jb
inc
mov
in
insl
mov
incl
repz
dec
dec
fildll
rorl
popf
mov
adc
add
cli
adc
sub
xlat
fwait
push
cld
bound
xor
dec
pop
fidivl
fdivp
sub
nop
cmp
push
push
gs
jns
arpl
jp
fdivrs
ret
testb
pop
stc
inc
dec
mov
xchg
fstpl
mov
in
dec
and
inc
scas
jmp
ljmp
mov
adc
or
cmp
sbb
mov
and
pop
inc
dec
fildl
mov
mov
addr16
rclb
add
or
mov
es
push
je
adc
lods
loop
jg
decb
cli
fistpl
lret
sahf
repz
std
int
sub
in
mov
xchg
mov
lret
dec
pop
and
rorb
test
jbe
sbb
cmpsl
add
lret
adc
lcall
js
sbb
push
repnz
lea
and
sub
dec
rcrl
mov
xor
xor
enter
or
cli
sti
pop
js
iret
xchg
scas
repz
cmc
push
pop
shrl
in
push
daa
hlt
addr16
stc
fsubp
xchg
lds
fsubs
ficoms
rorl
mov
icebp
or
jae
pop
scas
cmp
cmp
mov
popa
je
or
pop
jb
inc
imul
dec
dec
insl
lret
dec
stc
or
movl
es
jne
lds
sbb
dec
mov
xchg
mov
js
push
dec
sarl
arpl
adc
ljmp
mov
jmp
sti
cmp
and
adc
testb
ret
pop
pop
lods
add
xor
fidivrl
mov
cld
test
adc
lcall
jecxz
add
mov
sbb
aas
jb
and
or
sarb
out
int3
in
inc
out
movsl
xor
loopne
repz
inc
cs
jge
lret
enter
fiadds
pop
mov
cmp
test
mov
verr
sbb
arpl
xchg
add
adc
pop
mov
sbb
add
xor
push
fsts
ss
xchg
push
sbb
push
push
aas
pop
mov
les
pusha
dec
popa
mov
pop
scas
stc
cs
mov
xchg
sbb
or
dec
sub
in
cmp
shrl
mov
js
jecxz
fstps
sub
xor
jl
aam
push
subl
push
or
std
pop
push
cs
xchg
aaa
outsb
repz
dec
mov
mov
cli
jnp
and
xchg
les
jno
xchg
jl
add
adc
daa
int
mov
push
xchg
daa
add
ffreep
sbb
repz
inc
and
sti
ja
flds
add
movsb
inc
dec
xchg
mov
adc
fdiv
inc
pop
enter
sbb
mov
cmp
jo
xor
inc
push
xor
sbb
inc
xlat
sbb
push
ss
dec
test
sub
push
jnp
or
adc
cld
addr16
inc
in
shll
scas
ds
std
mov
push
push
repnz
lock
nop
leave
ret
and
imul
dec
push
push
sbb
insl
jo
mov
push
jbe
adc
mov
lret
test
fs
je
xchg
adc
jb
sahf
push
mov
jns
mov
cmp
aad
scas
fs
outsb
pop
sbb
aaa
mov
dec
cmp
scas
aad
mov
cmp
pop
sti
add
mov
ljmp
rolb
pushf
push
dec
cli
cmpsl
repz
or
xchg
sbb
insb
fistpl
imul
inc
aas
sub
clc
xchg
mov
or
push
or
repz
add
sub
mov
shl
rorb
xor
pusha
jg
insl
int3
mov
arpl
lahf
jle
mov
xchg
test
mov
aas
js
mov
lds
int3
lret
pop
jmp
add
sbb
in
push
inc
pop
insb
pop
mov
arpl
mov
out
imul
and
xchg
pusha
dec
insb
out
adc
inc
clc
add
rolb
mov
bound
imul
sbb
in
pop
repnz
fidivrs
in
adc
push
add
mov
ss
jl
xchg
repnz
add
int3
fdivrl
stc
testb
jmp
cmpb
xchg
call
mov
sbb
test
sub
repz
es
fsubs
imul
outsb
test
scas
std
push
call
mov
xlat
mov
adc
lret
pop
nop
and
xchg
xchg
mov
into
sub
mov
sub
xlat
push
pop
sar
add
jl
fcmovu
push
sbb
aaa
cld
hlt
fiadds
je
out
push
xchg
and
mov
test
adc
rcrl
insb
nop
or
out
cmp
push
push
shlb
pusha
pop
std
pushf
sarl
lret
stos
jnp
jl
jb
negl
enter
rorb
frstor
or
inc
pop
mov
mov
iret
sti
roll
mov
cmpsl
inc
push
mov
dec
cwtl
xchg
inc
mov
arpl
bound
roll
fcomi
xchg
fldcw
pop
shlb
scas
int
xchg
adc
add
icebp
mov
shll
cmp
push
inc
xorb
outsl
sbb
movsb
stos
xor
insb
inc
or
jbe
push
mov
sbbl
cli
arpl
out
in
jns
and
into
inc
or
and
call
adc
inc
adc
or
inc
cmpsl
and
orb
add
lret
insl
mov
jl
in
je
fs
loopne
cs
xchg
push
pop
inc
inc
sbb
jle
int3
push
stos
in
inc
add
cmp
inc
push
adc
xchg
or
into
pop
loopne
pop
mov
notb
gs
jmp
inc
sbb
das
sbb
fwait
or
dec
adc
incl
mov
cmpsb
or
cltd
add
cltd
xor
js
xchg
lcall
dec
xchg
sbb
out
lret
mov
and
xchg
jecxz
push
inc
arpl
out
xchg
aam
test
push
push
add
xor
ret
pop
jne
mov
testb
iret
cmc
push
add
jne
and
pop
mov
ds
outsb
mov
test
stc
fldcw
out
lods
dec
arpl
add
mov
jl
xchg
subb
popa
sub
addr16
ret
mov
jne
mov
dec
cmpb
pop
inc
insl
jle
movsl
add
scas
lahf
mov
movl
push
filds
mov
xorps
andl
dec
dec
das
mov
cmp
cmp
fstps
gs
std
sahf
shl
in
mov
xor
pop
js,pt
mov
shrb
mov
and
xor
pop
iret
mov
cmp
std
pusha
pop
xlat
js
add
loope
pop
lods
inc
inc
add
into
xor
push
xor
or
fs
decl
xor
lret
test
mov
faddl
or
push
stos
sbb
hlt
mov
sub
es
loopne
cltd
dec
aam
cld
sarb
fadd
andl
popf
and
in
jge
cmp
inc
bound
mov
or
mov
jp
loop
sbb
mov
or
inc
test
mov
mov
or
addr16
mov
pop
fbld
scas
adc
xchg
arpl
mov
add
pop
add
jg
pop
xlat
ret
ret
pop
js
mov
mov
dec
jbe
pop
xchg
stos
adc
rcr
popl
dec
shrb
mov
dec
or
lret
inc
dec
cld
sub
outsl
stc
sub
fwait
sbb
je
bound
fimuls
cli
mov
dec
cmp
pop
aad
xchg
outsb
jns
pop
pop
orl
nop
fdivr
jae
and
hlt
push
mov
jne
loop
jecxz
xor
mov
dec
dec
mov
hlt
ret
cmpsb
push
ljmp
jno
sub
mov
push
pop
and
and
and
or
je
pop
mov
shll
pop
push
add
inc
sub
incl
xlat
aaa
xchg
arpl
cmp
mov
fisttps
lods
insb
movsl
imul
int
aad
loop
jns
jbe
mov
jl
sub
mov
mull
cltd
cli
inc
ss
sarl
jns
xchg
andb
push
xchg
scas
dec
inc
adc
mov
mov
lahf
push
inc
aad
adc
xor
xor
mov
arpl
into
or
decl
sub
rcll
iret
add
ds
or
imul
insl
mov
push
je
and
sbb
lods
push
out
shl
inc
push
cmp
lret
and
adc
adc
xor
lds
sub
sbb
sahf
push
push
movsl
jecxz
dec
sub
push
fldenv
imul
inc
popa
stos
jle
fsubrs
dec
lret
fisubrs
inc
pop
stos
loopne
mov
out
xchg
add
jb
imul
xor
mov
pop
loopne
jge
js
cmpb
addps
rol
push
dec
ds
roll
arpl
dec
cmp
xor
jge
scas
sbb
push
mov
xchg
xlat
scas
outsb
push
fwait
call
add
sti
out
daa
sbb
sub
pop
push
dec
inc
out
cld
roll
fsubrs
add
iret
pop
jle
shll
imul
xor
jnp
dec
or
jne
pop
mov
pushf
dec
idiv
and
mov
insl
push
xor
test
adc
xchg
xor
pop
jecxz
cmp
jge
or
jne
adc
hlt
sub
xchg
jno
int3
mov
mov
inc
enter
test
or
cli
cmp
push
enter
fcmovnbe
mov
jne
das
jg
mov
lock
orl
inc
gs
jle
lahf
push
nop
push
aam
dec
cmp
sub
or
cmp
out
stc
cmp
push
mov
in
mov
dec
lret
jae
push
add
out
ret
cmp
ds
jo
mov
add
stc
lods
mov
mov
leave
mov
into
xchg
xor
andb
mov
dec
addr16
jae
jge
adc
pop
sbb
dec
or
xor
js
fmul
cmp
and
pushf
push
cmp
or
cmp
jne
mov
mov
push
cmp
xlat
sbb
int3
push
sub
jmp
push
sub
in
js
mov
fidivs
mov
das
inc
int
xor
lcall
adc
str
push
sbb
imul
test
in
xchg
scas
xlat
push
sub
scas
aad
or
pusha
xchg
push
push
out
js
mov
mov
jmp
stc
jae
mov
adcb
xchg
pop
stc
mov
test
mov
mov
ret
repnz
je
jmp
jecxz
inc
cli
cld
loopne
push
insl
cmp
jbe
cli
fistpll
xchg
mov
mov
je
pop
push
sbb
pop
cs
shl
add
arpl
sub
jo
mov
cmp
push
mov
push
pop
imul
fcmovnbe
jmp
ss
outsl
enter
arpl
stc
js
insb
dec
mov
push
sbb
mov
popf
mov
les
fdivrl
push
inc
jne
ds
xchg
incl
cltd
jnp
mov
xchg
jnp
adc
incl
add
roll
sub
frstor
mov
mov
xor
repz
orb
mov
mov
pop
das
jo
jmp
lock
inc
cmp
adc
out
pop
xchg
daa
sub
pusha
dec
shrl
sub
ret
aad
in
inc
aas
add
rorb
push
mov
xor
pop
mov
mov
pop
repz
pop
cmpsb
and
ja
test
mov
arpl
inc
lcall
les
push
je
add
mov
imul
xchg
aas
sub
push
xchg
mov
shll
popf
jmp
jmp
lds
test
xor
and
aas
inc
out
in
mov
and
xor
dec
xchg
add
aaa
xor
mov
out
cltd
enter
hlt
xor
xchg
sbb
jnp
push
dec
xor
stos
outsb
aam
es
fwait
test
shlb
out
shr
jo
int
out
xor
imul
dec
fiaddl
out
push
pop
int3
movsl
mov
add
in
sbb
jae
cmp
and
sti
out
jl
fldln2
xorb
inc
data16
push
dec
or
push
add
mov
xchg
mov
pop
cli
fwait
jo
cwtl
loope
push
or
inc
aam
add
mov
mov
xchg
adc
aas
mov
mov
sbb
dec
pusha
loope
sub
jecxz
imul
mov
push
dec
pop
test
mov
test
ja
ret
je
cmpsb
insb
rcll
pusha
mov
push
and
imul
or
or
jl
inc
inc
xchg
mov
push
das
inc
fldcw
push
xor
faddl
jl
lock
sbb
dec
dec
addr16
je
push
lds
out
lock
fimuls
sbb
cmp
pop
push
jmp
movsl
sub
mov
je
lret
inc
rcl
frstor
push
stc
in
mov
jl
hlt
mov
lret
mov
andb
sbb
dec
xlat
out
in
pop
jno
or
out
out
cmp
push
ror
adc
ljmp
jnp
mov
movsl
pop
inc
sahf
inc
mov
test
pop
cld
ret
in
sub
adc
mov
pop
push
addl
add
fnstcw
das
jle
daa
pop
sahf
adcl
dec
movsl
insl
dec
lods
sub
add
outsb
sbb
push
and
add
mov
test
lahf
mov
lret
scas
lret
pop
icebp
fnstsw
addr16
lds
xchg
xchg
xor
sub
ljmp
int
inc
push
sub
dec
mov
fildl
xor
xor
jb
ret
out
xchg
sbb
adc
mov
aam
xchg
jno
cmp
jns
shll
push
jae
jns
cmc
pop
dec
dec
jnp
mov
pop
dec
xchg
repz
shll
xor
pop
fld
loop
xor
xlat
mov
lahf
cmp
lock
pusha
inc
mov
clc
insl
test
mov
pushf
push
inc
xchg
pop
push
push
cmpb
movb
xorb
mov
call
cmpw
mov
aad
pmaddwd
cmpsb
mov
sbb
add
add
pop
out
mov
pop
xchg
nop
enter
cmpsl
out
push
jge
dec
nop
mov
test
jno
ud2
cmp
mov
cmpsl
sub
sub
jl
scas
and
or
leave
fdivrs
out
aaa
or
xor
mov
hlt
mov
into
push
mov
inc
cmp
sub
mov
or
sub
icebp
inc
add
gs
inc
ficomps
and
mov
int
lcall
pushf
iret
lret
jb
dec
mov
int3
pop
mov
adc
bound
insb
xchg
les
aad
push
scas
test
rorb
mov
test
clc
orb
fldenv
andl
mov
stos
jnp
jbe
push
std
or
adc
pop
adc
adc
add
sub
cmp
sbb
scas
dec
and
movsb
pop
pop
addr16
gs
ljmp
test
sub
cmp
cld
out
test
stos
les
cmp
mov
push
add
dec
adc
jge
inc
inc
push
mov
shll
sarl
and
pusha
cmc
cmp
sbb
adc
sub
movsl
xchg
sub
inc
ret
jne
loop
pop
mov
pushf
imul
add
in
nop
cld
js
xchg
les
push
daa
cli
in
dec
mov
ss
fucomi
loope
stos
cmc
rorl
jg
lret
mov
sti
std
push
shl
lcall
icebp
cmp
jbe
xchg
mov
idivl
shrl
je
cwtl
adc
mov
cmc
loopne
repz
inc
and
dec
stos
inc
mulb
cmc
sti
sub
jmp
pop
movsl
mov
gs
mov
leave
mov
xchg
ljmp
jb
sub
loop
and
cld
push
jp
mov
jge
inc
ret
leave
mov
ljmp
sbb
fs
faddl
and
in
add
aaa
xchg
or
inc
mov
dec
xor
inc
push
cld
mov
insb
and
dec
push
sarb
scas
lods
jnp
or
push
cmpsl
xchg
cwtl
mov
pop
push
cwtl
loop
enter
adc
jnp
lea
insb
inc
and
mov
rcll
fisubs
cmp
lods
adc
stos
cmp
lret
lret
add
mov
mov
or
mov
pop
xchg
dec
jge
insl
faddp
pusha
fisttpl
mov
arpl
iret
mov
jp
out
and
ljmp
gs
je
mov
call
dec
stos
test
lods
sub
aam
imul
adc
pop
inc
and
dec
push
popa
fldcw
cli
mov
pop
or
inc
mov
sbbb
cltd
jle
dec
mov
rorl
aad
lock
xchg
lret
outsl
cmp
mov
dec
mov
test
jo
add
cmp
mov
jae
rol
test
mov
outsb
inc
jo
cmp
sbb
lds
shlb
dec
dec
rcrl
xchg
pop
and
ret
sub
inc
sbb
xor
and
push
pop
xchg
jb
cmpl
xchg
cmpsl
and
cli
mov
sub
daa
out
aam
int3
jnp
cmpsl
cmpsl
sub
das
adc
lods
mov
mov
xchg
sub
xchg
cli
sbb
loopw
dec
or
inc
sti
repz
and
mov
mov
jg
imul
sbb
push
xchg
cmp
dec
xchg
inc
mov
add
cltd
xor
and
ja
or
loop
mov
pop
push
stc
jno
lock
pushf
ljmp
mov
dec
sub
mov
rcrl
pop
popa
pop
in
jp
leave
mov
cmp
sti
add
push
sub
outsb
sbb
enter
test
imul
inc
cmp
jne
push
cli
and
loopne
ja
clc
xor
jnp
mov
sub
push
shlb
daa
shrl
loop
mov
mov
aad
adc
ret
das
rcrb
arpl
js
ret
mov
cmc
test
scas
inc
jmp
movsl
inc
popf
mov
sub
imull
in
addl
insl
gs
pop
test
repz
xchg
or
xor
aad
add
cs
idivl
and
pop
cmp
jecxz
xchg
testl
mov
inc
clc
push
xchg
lcall
push
es
popf
jbe
adc
std
jge
mov
mov
outsb
cmp
or
and
inc
pop
andl
jo
xchg
mov
mov
add
mov
mov
push
sti
pop
inc
jl
out
cld
and
dec
jle
jb
cwtl
sub
jecxz
add
rolb
lahf
or
test
xchg
inc
cmpsb
push
inc
rorl
inc
cmpsl
push
pop
jle
loopne
mov
inc
insl
lret
push
sub
lds
es
imul
loopne
push
cmc
cwtl
pop
pop
inc
pop
pop
fimull
lds
imul
and
jnp
mov
sbb
mov
mov
sub
sahf
stos
pop
cltd
popf
and
jge,pn
les
adc
push
add
push
pcmpeqb
outsb
pop
mov
sbb
fldcw
jp
jg
leave
addr16
ja
dec
sbb
scas
js
cmp
jecxz
je
inc
lods
lds
dec
xchg
shr
ljmp
xor
sbbl
cmpsl
adc
insl
pop
inc
scas
push
jno
cmp
sub
or
xchg
sub
shrb
test
icebp
scas
and
push
sub
test
xlat
testl
fcoml
sti
adc
enter
mov
nop
es
xchg
ja
push
pop
mov
add
mov
dec
jle
cld
inc
int
scas
push
ficompl
es
add
adc
cmp
lret
inc
divb
dec
jl
sbb
lea
jo
add
fidivrs
cmp
cmp
jmp
mov
out
sub
cli
pop
ljmp
les
call
loope
sbb
enter
inc
stos
aad
xchg
icebp
and
jno
ja
push
outsb
inc
int3
dec
sbb
pop
xchg
inc
or
mov
ja
leave
dec
sub
cld
add
frstor
fwait
mov
lret
stos
fs
insl
ljmp
adc
cmp
mov
aad
xor
in
ljmp
cmpsb
mov
dec
add
adc
mov
hlt
push
pop
jp
push
pop
jmp
stos
es
out
stc
xchg
cld
or
mov
jp
or
shrl
outsl
mov
sbb
mov
or
xchg
cmpsl
imul
xchg
int3
cwtl
jb
mov
lcall
pop
push
adc
ret
mov
push
cli
fistl
movsl
xchg
jp
in
test
iret
sbb
dec
push
xorb
jecxz
sub
inc
in
add
xor
ficoms
add
pop
add
pop
jl
xchg
sbb
divb
repnz
jp
cld
outsb
push
movsl
cmp
mov
out
int
inc
hlt
jae
lcall
sarb
notb
inc
ljmp
subb
push
adc
xor
or
and
xchg
xchg
sbb
jnp
cmp
or
call
imul
xchg
enter
pop
dec
mov
lea
jb
push
out
loop
cmc
loopne
and
mov
pop
sub
mov
mov
aam
dec
leave
outsb
fistl
gs
cltd
xor
pop
push
sbb
popa
jle
lahf
pop
lahf
sbb
adc
adc
fists
pushf
mov
add
in
cli
lahf
xchg
mov
addps
push
or
push
mov
or
es
sahf
and
in
jbe
mov
add
imul
mov
jb
inc
cwtl
push
mov
jecxz
mov
and
mov
bound
xchg
jo
shlb
xor
pop
push
pop
in
lock
xorb
cli
loopne
jl
cmp
out
adc
cmp
mov
jg
aaa
dec
mov
xchg
hlt
jmp
mov
jmp
dec
sbb
xchg
and
and
or
dec
cmp
in
dec
jb
ljmp
insl
push
and
rorl
mov
push
testb
pop
bound
xlat
push
iret
loopnew
aam
push
out
mov
mov
mov
mov
inc
lea
inc
hlt
adc
bound
mov
or
mov
xor
rcr
push
mov
test
sahf
setae
lds
ss
loopne
push
lret
out
out
into
xchg
pushl
test
and
pushf
xchg
cmp
push
loope,pn
pusha
xor
insl
jbe
cmpsb
lret
jecxz
push
sbb
xchg
pop
pop
cmp
leave
inc
pop
es
jne
add
xlat
xchg
fistpll
pushf
add
jnp
pop
rorl
aam
push
and
incb
gs
rcll
popa
movsl
mov
stos
pop
mov
pop
cmp
and
pop
xor
daa
push
repnz
popl
cmp
clc
es
jecxz
scas
daa
cmp
out
xchg
jns
pop
xor
cmp
mov
or
cltd
mov
fcoml
mov
scas
mov
and
add
jno
lcall
imul
cmp
and
jg
insb
ror
xchg
call
std
adc
les
pushf
movsl
sub
idivl
out
andl
add
inc
inc
jl
jmp
adc
xchg
sbb
clc
pop
fs
push
jnp
js
pop
or
mov
sarb
cld
sbb
inc
dec
sbb
into
mov
mov
mov
cwtl
mov
in
mov
mov
outsl
sub
push
pop
fcomp
popf
aad
mov
xor
lahf
clc
xchg
push
lods
shlb
add
lea
pop
popa
cwtl
lret
jge
movsb
imul
xor
int
cs
jecxz
les
xchg
push
cmp
mov
or
jno
scas
mov
out
cli
mov
pop
inc
popf
mov
int3
cmp
daa
lea
push
fucomip
lods
mov
jnp
mov
xchg
xor
sub
xor
dec
push
repz
cld
loopne
testb
dec
inc
xchg
cltd
scas
ja
cmp
mov
jne
pushf
aad
cli
sti
sub
addr16
lds
maskmovq
negl
jecxz
add
or
mov
mov
adc
cli
xchg
jecxz
popf
mov
in
std
cmp
iret
inc
pop
lea
imull
movsl
cltd
pop
cmp
push
cld
cmpsb
mov
pop
rcr
je
pop
xor
lods
jb
aas
loop
sbb
cmp
xchg
mov
mov
fisubrs
orl
dec
sbb
add
cmc
mov
pop
fwait
loop
rcrb
imul
lds
sbb
inc
push
sbb
iret
pop
add
add
and
or
sub
in
lret
fcoms
dec
fsts
insl
pop
ret
fisttps
add
push
outsl
push
pop
in
xchg
and
pop
adc
pop
and
adc
stc
pusha
loope
and
xorb
aam
adc
imul
cmp
stos
jae
pop
inc
pop
mov
or
inc
ss
lret
and
cld
xchg
adc
xchg
sar
mov
mov
jns
rcll
jecxz
mov
xor
adc
and
aad
aad
xchg
in
inc
movsb
ja
add
push
in
push
mov
aas
pop
jmp
and
lea
and
fsts
xor
xchg
cmc
ss
mov
stos
jg
es
or
mov
sub
cwtl
inc
sub
jnp
aas
iret
sbb
aam
inc
sti
mov
push
pop
push
call
in
popa
cmp
dec
ret
lret
cmp
sbb
push
xchg
insb
leave
jle
xor
sbb
pusha
dec
cs
cmpsb
cmc
xlat
leave
jg
jbe
jmp
addr16
jae
fsubrl
scas
sub
gs
cmp
or
call
xor
jg
cmp
lods
loopne
xor
test
loopne
pop
stos
jmp
jno
sbb
sbb
pop
call
jbe
loopne
inc
loopne
inc
mov
sbb
adc
mov
or
test
fnstsw
pop
fnstenv
or
mov
inc
jae
mov
lock
mov
sbb
push
xchg
mov
mov
out
pop
dec
rolb
idiv
xor
sub
mov
in
shl
pop
jmp
inc
cmp
jmp
jno
jb
mov
push
cmpsl
mov
loope
imul
orl
aaa
pop
xor
mov
xor
fcoml
and
mov
adc
pop
adc
in
push
stos
pop
or
mov
mov
sbb
fbstp
fcomps
addr16
pop
or
push
mov
sub
sub
sub
mov
xor
xor
mov
inc
xor
push
jmp
xchg
push
dec
ds
mov
and
ds
mov
gs
mov
cmc
push
mov
mov
shr
stos
mov
scas
mov
mov
push
mov
jl
dec
out
sub
inc
ret
dec
inc
mov
mov
bound
divl
jns
fidivrl
dec
jl
popa
sbb
adc
push
ja
mov
jmp
push
fistps
jl
xor
adc
mov
pop
push
jo
pop
sub
sub
test
jge
loop
lock
mov
shll
push
pop
jns
cmpsb
xchg
cmpsb
fisubrs
mov
xchg
leave
jg
fcomps
sti
insb
sbb
js
xchg
fistps
push
push
cld
les
xchg
sbb
add
dec
mov
lcallw
pop
fidivrl
js
jb
xchg
in
movsb
xchg
mov
and
xchg
sub
pop
imul
outsl
in
dec
shrb
cmpsb
adc
push
ljmp
clc
mov
jae
pop
rcll
sub
xchg
fldenv
dec
mov
leave
xor
out
xor
pop
xor
and
sub
call
mov
inc
and
or
inc
mov
jno
je
mov
add
pop
mov
push
cld
movsl
stos
sbb
add
aas
iret
shrb
nop
xor
dec
imul
sub
nop
lcall
mov
mov
cmpsb
imul
in
sbb
cld
bound
jno
repnz
jge
inc
pusha
push
fisubrl
cmp
ret
push
outsl
jmp
and
pop
cmp
and
ret
popa
orl
or
mov
or
and
add
jns
loope
mov
fnstcw
fwait
jl
mov
cmpsb
and
mov
dec
jmp
push
dec
fcoml
push
idivb
shlb
in
inc
sbb
xchg
gs
outsl
xchg
cmp
pop
xor
sub
iret
sti
jl
mov
add
int3
pop
test
int
xchg
addr16
cltd
lods
jns
dec
sbb
push
sub
and
fucomip
jp
xchg
cmp
testb
mov
pop
xchg
cmp
testl
mov
pop
fdiv
out
or
adc
addb
pop
cmc
mov
les
fadds
or
popa
cli
shlb
pop
dec
in
insl
sub
or
ffree
scas
add
mov
or
in
adc
xor
roll
scas
xor
les
add
push
loopne
push
add
push
push
jbe
xchg
ss
aad
pop
stc
dec
pop
dec
push
mov
and
dec
cmp
mov
and
call
loopne
pop
roll
dec
dec
add
mov
addr16
insl
popf
sbb
and
push
sbb
jnp
push
sub
mov
jg
sbb
or
clc
push
enter
and
dec
pop
cmc
repnz
or
dec
add
xor
add
aaa
jae
xchg
sti
or
scas
add
fcompl
and
pop
sub
lods
push
scas
std
xlat
loope
xchg
lds
add
mov
in
lods
mov
xorb
lea
mov
mov
add
mov
test
shll
bound
sahf
push
fimuls
sub
jmp
jecxz
loope
pop
jmp
push
mov
hlt
mov
cwtl
jl
outsb
faddl
sbb
loop
xchg
fisubs
cltd
daa
mov
cltd
into
icebp
int
icebp
add
lock
pop
int
fs
and
jl
std
xor
lahf
inc
dec
pop
xchg
hlt
inc
out
cli
popf
int
shll
pop
add
hlt
jae
test
sahf
xchg
jge
xor
push
mul
insb
or
or
mov
lret
insb
es
dec
ja
inc
imul
and
xor
sub
adc
push
adc
inc
fiadds
in
ret
mov
pushl
outsl
and
cmp
stos
sbb
lods
imul
push
nop
jo
inc
fdivrl
orl
scas
or
daa
inc
fnsave
cmp
mov
mov
pop
and
push
xchg
mov
and
push
xchg
test
pop
subb
push
jle
ljmp
ds
ja
jno
dec
idiv
mov
pop
lock
mov
sbbb
push
push
adcb
cs
xchg
jb
loop
int
out
fnstcw
and
adc
fidivl
idivl
jns
xor
mov
lock
into
cmpsl
xchg
jecxz
or
daa
xorl
inc
jmp
idivb
jge
out
es
sahf
inc
stos
insb
fsubrs
pop
cld
add
inc
dec
iret
addb
es
scas
subl
ss
sub
jns
mov
fisubrs
popa
lods
cmpsb
lcall
mov
movsb
xor
xor
fisubl
ret
mov
fidivl
and
dec
enter
or
orb
clc
cs
cmp
inc
jg
mov
xchg
cli
cmp
dec
jae
sbb
and
mov
mov
xor
pop
mov
frstor
mov
pop
jg
fidivrs
jo
fisttpl
arpl
call
mov
cmp
or
fwait
clc
xchg
mov
add
lods
sub
and
push
mov
push
mov
sbb
fbld
sub
jbe
jg
adc
mov
sbb
mov
sarl
xchg
push
pop
subl
xor
ds
bound
out
xor
mov
pop
addr16
mov
mov
movsb
in
adc
adc
and
jb
mov
dec
enter
call
xor
dec
sbb
dec
mov
cmp
int
mov
jbe
test
and
sbb
jp
xlat
or
adc
push
push
dec
sub
mov
repnz
jmp
ds
mov
test
fadd
ss
cs
bound
sti
push
ret
mov
inc
push
xchg
inc
cmpsl
ss
es
xchg
pop
hlt
in
call
mov
scas
adc
sub
mov
dec
xchg
add
push
sbb
in
mov
mov
ficoms
lret
lods
out
sarb
or
pop
push
lea
cmp
fldt
dec
inc
iret
jo
pop
aas
lds
dec
xchg
pop
push
dec
jne
fisubl
pop
shlb
dec
cwtl
jmp
stos
dec
adc
enter
repnz
loop
xchg
xchg
cmp
movsl
in
ljmp
sub
lret
pop
xor
inc
mov
dec
data16
xlat
idivl
jl
or
lods
mov
dec
pop
fdivrp
xlat
xlat
lahf
push
adc
outsl
movsl
jo
aaa
jp
inc
cmp
mov
inc
imul
imul
imul
xor
sub
or
cmp
dec
sub
pop
push
push
les
push
xor
in
enter
add
push
adc
push
xor
sbb
lahf
lcall
inc
pop
movsb
lahf
testb
test
ficomps
xchg
int3
into
pop
pop
js
ret
xchg
rorl
and
jp
popa
fwait
outsl
inc
decl
mov
pushf
pop
aas
xor
cmp
cmp
je
add
xrstor
cmp
cmp
adc
sahf
loope
js
lcall
adc
daa
addb
and
mov
das
jmp
fwait
mov
inc
mov
cli
scas
sbb
cmp
jecxz
mov
sub
jbe
push
or
in
dec
sub
lods
inc
mov
negl
xor
dec
mov
jecxz
outsl
fdivl
stos
sar
adc
mov
adc
cld
pop
push
movsb
pop
popa
xchg
adc
sub
imul
jmp
add
mov
insl
pop
loope
sub
mov
mov
inc
sti
jnp
adcl
sbb
addr16
dec
xor
fstl
push
dec
xchg
pop
push
icebp
mov
mov
jl
jmp
subl
jle
mov
push
dec
cmp
or
mov
xchg
jb
mov
push
addb
mov
xchg
cmp
sbb
test
aam
cltd
enter
pop
inc
test
dec
data16
add
lock
sbb
inc
sub
adc
std
nop
mov
lahf
insl
movsb
mov
jmp
daa
dec
lret
push
sub
lock
shl
cmpsb
jbe
adc
in
cmc
mov
mov
dec
cld
sub
dec
outsl
mov
ljmp
loop
ds
xchg
mov
aas
test
dec
aam
test
push
jb
or
push
pop
inc
out
mov
mov
inc
jle
in
loopew
rorl
frstpm(287
sbb
fdivrl
dec
clc
xchg
sarl
xlat
push
sti
add
push
add
mov
push
mov
cmp
jge
and
cltd
in
cmpsl
hlt
push
movsb
lods
mov
fstp
ficompl
movsl
jno
test
jecxz
scas
fsubrl
jo
jo
inc
mov
sub
xchg
cmp
mov
lcall
shlb
inc
mov
scas
jl
jne
adc
push
fs
mov
pusha
pushl
mov
jnp
movsb
sbb
rclb
jp
jb
adc
pop
call
mov
cmp
jno
mov
xlat
imul
in
inc
xchg
jns
repnz
pushf
cwtl
dec
push
adc
std
cmp
add
dec
dec
pusha
sahf
xchg
inc
rcll
mov
aaa
je
and
call
and
cld
aam
outsb
push
and
daa
and
mov
cmp
call
ret
adc
nop
mov
mov
test
push
into
jns
nop
aad
ja
sub
xor
fdivrl
cld
idivb
cld
xchg
out
inc
in
mov
push
jge
push
cwtl
sbb
push
dec
jb
add
test
push
movb
stos
pop
insb
pop
jmp
mov
sbb
pop
or
push
push
xor
out
dec
mov
cmp
xchg
icebp
call
repnz
sbb
aas
movsb
stc
insl
ljmp
xor
jnp
jno
scas
stos
jb
std
pop
push
jo
xchg
and
dec
icebp
outsb
gs
and
out
and
lods
sub
cs
lods
jg
push
and
leave
and
nop
cmp
movsb
mov
addr16
jmp
jl
or
fs
push
sbb
fcomps
sbb
leave
stc
aad
fisttps
push
pop
inc
push
pop
mov
pop
movsb
subb
or
mov
push
pop
mov
cmpsb
xchg
ss
mov
in
ds
mov
fbld
addr16
repnz
xchg
sahf
xor
leave
mov
stos
pushf
int3
fs
sbb
jg
cmp
out
sbb
or
std
loop
pop
push
push
and
sti
movl
fucomp
sbb
dec
mov
stos
jo
adc
sub
movl
lods
sub
dec
mov
mov
mov
mov
add
in
mov
insb
push
js
push
jnp
ljmp
lcall
push
push
lahf
mov
push
mov
xchg
fs
add
idivb
jp
dec
adc
je
mov
lods
out
adc
xchg
xor
sbb
sarl
popa
inc
stc
jl
nop
add
add
fcmovu
sbb
pop
daa
sub
int3
aas
shrb
mov
rorl
std
scas
jbe
mov
movsb
std
repnz
add
loope
sub
addl
fistps
xchg
dec
jge
in
sub
cmp
ficompl
mov
xor
cmp
and
stos
and
mov
pop
or
lahf
inc
popa
dec
push
gs
icebp
daa
pushf
movsb
inc
ss
or
enter
dec
or
ss
and
pop
jmp
ljmp
sub
call
mov
rclb
pop
pushf
repnz
jmp
fisttps
xlat
out
adc
data16
rcrb
add
sub
mov
inc
cmp
dec
cmp
push
inc
test
push
inc
mov
mov
test
push
sub
add
rolb
ja,pt
adc
pushf
or
out
or
lds
and
movsb
decl
xor
jmp
sahf
stos
adc
fwait
sbb
gs
jmp
notl
aaa
mov
jmp
mov
add
cmp
lea
pop
lods
in
fwait
mov
enter
push
xchg
das
dec
cmc
fisttpl
shll
addr16
scas
sbb
lds
cltd
or
into
loopne
push
pop
pop
push
arpl
sahf
sbb
sbb
rcrl
arpl
push
adc
shll
pop
mov
sahf
mov
pop
sbb
int
cmpsb
sbb
sbb
cmp
and
push
out
popa
leave
test
adc
sbb
iret
jne
or
sub
mov
and
sub
dec
push
sbb
adc
fwait
mov
dec
ss
adc
sub
or
test
fimull
stos
call
clc
or
jge
sbb
push
jmp
cmp
fs
decl
cmpl
adc
sbb
pop
lcall
fisubrl
ds
mov
xor
push
and
mov
pop
test
js
repnz
or
or
pop
push
scas
test
jle
jbe
cwtl
push
test
addr16
pop
pop
or
popf
mov
in
sar
jg
pop
into
ret
jge
dec
xchg
xchg
ss
fwait
push
dec
or
nop
xchg
out
lahf
pop
xor
in
pop
mov
scas
sarl
pushf
test
rol
iret
pushf
rclb
ljmp
sub
dec
std
je
push
cmpsb
mov
inc
jb
hlt
push
push
data16
pop
mov
lods
pop
push
into
int3
inc
and
dec
aas
add
mov
cmc
and
adc
pop
es
repnz
mov
xor
jo
test
and
jb
out
mov
xor
in
push
dec
imul
test
pop
mov
adc
fs
mov
test
sbb
aas
xlat
jge
jbe
mov
iret
int3
cwtl
pop
xor
enter
les
stos
xlat
and
xchg
int
repz
inc
mov
push
aaa
xchg
ret
aaa
ret
insb
mov
push
dec
sarb
mov
mov
dec
into
xchg
loop
out
enter
cmp
or
loop
jge
mov
mov
push
lea
arpl
cs
fsubl
fnstcw
mov
or
or
adcl
mov
fidivrs
cmp
shl
or
adc
cmp
into
ficompl
test
fdivl
lret
arpl
pop
popf
or
lret
adc
outsl
dec
xchg
fwait
sbbl
inc
xor
out
pop
pop
gs
mov
lret
xchg
movsb
jmp
aaa
lods
cmp
ds
in
pop
lds
aam
push
sbb
push
ret
mov
lods
rep
mov
lods
add
scas
iret
adc
dec
xchg
loopne
mov
xchg
test
dec
jl
sub
mov
or
repnz
cwtl
xor
or
sbb
stos
add
hlt
and
lods
inc
sarb
lods
mov
cs
ja
adc
and
jp
and
out
jae
leave
loopne
dec
push
dec
ljmp
aad
push
gs
xchg
jns
sti
adc
sbb
lea
xchg
ret
xchg
dec
push
icebp
pop
push
pop
xchg
sub
out
cmp
movsl
jmp
bound
popa
pop
in
stos
push
jne
imul
xor
push
shlb
cmp
stos
outsb
insl
test
pop
dec
pop
mov
stos
jb
je
daa
mov
andb
cmp
shl
dec
pop
test
sbb
inc
je
pusha
xor
jg
cmpsl
iret
push
dec
imul
inc
mov
dec
push
popf
movaps
mov
fldenv
and
shll
add
mov
hlt
jl
push
cld
and
adc
inc
into
bnd
andb
mov
in
imul
push
icebp
xor
cmc
movsl
outsl
lea
pusha
add
sub
fidivl
add
cmp
int3
cmp
test
push
fsubs
shll
and
and
enter
xchg
mov
lret
xor
jecxz
negb
pop
pop
fisubrl
ss
test
cmp
inc
loope
mov
das
enter
or
ds
pop
mov
dec
push
imul
mov
xor
cmp
sti
cmpsl
mov
adc
stos
cmp
aaa
mov
lea
and
pop
jle
clc
xor
pop
push
cltd
sub
test
sbb
jmp
inc
sbb
mov
push
insb
fbstp
fdivl
mov
dec
pop
xor
jge
in
inc
sbb
popa
jge
push
mov
cli
pop
fadd
push
dec
cmp
lret
shll
repz
lcall
into
mov
add
jle
adc
sbb
inc
cmp
clc
out
mov
imul
push
mov
jp
push
xchg
add
cld
sbb
mov
pushf
mov
mov
push
xlat
sbb
pop
xchg
cwtl
fisubs
jb
pushf
pop
mov
dec
scas
enter
ja
add
imul
xchg
int
aas
and
out
mov
mov
fcoms
pop
aam
cmpsl
sub
mov
fmull
pop
xchg
mov
pop
shr
js
je
fiaddl
add
xor
insb
stos
sbb
cmp
rorb
add
movsl
test
and
fwait
mov
fstpl
xor
outsl
insl
inc
cmc
lcall
icebp
sbb
insb
fwait
xchg
test
mov
xchg
mov
decl
pop
je
fldcw
xchg
ficoml
notb
jno
pop
mov
iret
dec
dec
push
out
pop
mov
pop
xchg
cltd
or
enter
imull
or
in
cltd
and
push
and
dec
inc
pop
arpl
lret
xlat
gs
lea
cld
xchg
test
mov
inc
imul
notb
cltd
mov
mov
dec
imul
enter
inc
cmc
jns
clc
das
cmpl
sar
adc
inc
sarl
pop
pop
and
pusha
add
fst
cmp
pop
aaa
pop
push
addl
lods
mov
mov
call
int
mov
jp
cmp
push
mov
sbb
aad
rep
xchg
lcall
add
cwtl
dec
nop
fcmovnbe
cltd
fidivrl
cli
cli
fidivrl
mov
das
xchg
push
mov
mov
inc
mov
subl
out
mov
xor
push
nop
xchg
fidivrl
inc
xchg
mov
mov
mov
sbb
jle
cmp
in
mov
inc
sub
lods
cmp
hlt
lret
and
std
push
clc
cli
ret
fcomip
and
aam
fdivs
hlt
int3
leave
xor
ds
adc
popa
cmpsb
xor
cvtdq2ps
fs
int3
movsl
inc
out
enter
ljmp
nop
sub
xchg
cmpsb
jecxz
scas
fld
insb
into
mov
movsl
sti
aaa
inc
and
rcr
fwait
mov
push
andb
in
aaa
mov
jle
push
in
xchg
js
shl
inc
enter
scas
inc
inc
mov
subl
movsb
fisubrs
enter
sub
shlb
mov
mov
aad
iret
lock
stos
jae
xlat
mov
nop
or
or
mov
loopne,pn
adc
jecxz
push
jnp
cmp
mov
xor
xor
mov
int3
adc
adc
ficomps
enter
push
sti
arpl
ljmp
inc
loopne
scas
daa
fistps
int3
cli
jne
shl
sahf
adc
aad
roll
cmp
shrl
popa
into
std
add
daa
cli
addr16
sbb
inc
mov
scas
in
int
sub
jo
aaa
add
xchg
aam
das
jb
adcb
lret
ja
or
imul
adc
mov
icebp
mov
testb
clc
jns
push
sub
subl
pop
ss
pop
xchg
leave
jmp
dec
in
mov
test
outsb
mov
mov
pop
sbb
lods
loop
xchg
vpunpckhdq
mov
into
sbb
pop
push
push
stos
sub
adc
popa
pop
jo
xchg
outsl
fstps
enter
sbb
dec
push
inc
cltd
outsb
mov
call
cld
dec
stos
int3
or
jle
push
test
fs
dec
in
pushf
stc
enter
jecxz
popa
and
fs
test
popa
inc
lea
push
or
gs
js
loop
sbb
pop
jne
fcoms
sahf
lds
ret
loope
std
cmp
fnstenv
inc
sbb
aas
jle
jnp
mov
aam
rclb
mov
nop
icebp
in
mov
and
add
int3
adc
adc
inc
stc
out
and
mov
scas
cmp
pop
ljmp
mov
xlat
inc
test
ffree
xchg
inc
push
jle
pop
sahf
in
push
cli
adc
mov
inc
pop
mov
imul
das
stc
mov
sbb
sub
pop
mov
adc
fwait
push
rcll
mov
mov
mov
fucom
in
stc
addr16
jne
fdivrl
aas
aad
ljmp
xchg
and
or
iret
mov
inc
push
mov
lahf
jg
test
adc
movsb
movsb
pop
jae
add
clc
cld
outsb
shrl
call
cld
scas
loop
jl
cmp
pop
fcomps
icebp
loopne
mov
mov
jge
rolb
ret
or
call
insb
aaa
mov
dec
jb
fiadds
fs
add
and
dec
popa
dec
jnp
fwait
mov
pushf
jmp
mov
xchg
outsl
and
leave
cmp
inc
inc
push
cli
arpl
idiv
std
adc
sti
loopne
sbb
fists
or
js
jae
scas
bound
repnz
sbbl
pusha
mov
xchg
das
fwait
inc
xchg
push
push
xor
sarl
jle
lret
xchg
loop
mov
inc
popf
dec
push
or
mov
dec
xor
aaa
lcall
inc
cmp
and
test
mov
ja
pop
lret
mov
int3
xchg
aad
rorb
cs
and
jae
push
pop
mov
sti
outsb
fbstp
lds
mov
mov
lock
es
mov
out
into
dec
xor
push
jg
shll
xchg
dec
out
movsb
mov
sub
jp
jmp
sbb
push
sbb
push
sbbl
sbb
cltd
shrb
sar
mov
loop
sub
and
adc
or
jge
xchg
or
mov
dec
add
pop
pushf
clc
outsl
inc
adc
mov
outsl
cs
jb
dec
sub
scas
gs
ret
idivb
push
xchg
or
jl
add
sbb
test
arpl
cmp
movl
lcall
mov
xlat
push
orl
xchg
mov
jle
repnz
lea
adcb
dec
out
ja
and
dec
mov
fs
add
jo
jae
imul
and
jge
jo
xchg
mov
in
xlat
adc
shll
ret
ss
dec
cmc
test
sbb
fxtract
add
in
push
jg
xor
mov
and
out
fndisi(8087
in
pop
inc
repnz
push
jecxz
add
loop
loope
push
outsb
add
clc
pop
ja
cmp
xchg
or
cmpb
test
or
xor
xchg
outsb
jns
fsubrs
mov
add
pop
sbb
outsl
sarb
cmc
mov
sub
cmp
arpl
sti
add
sbb
cwtl
loopne
sbb
xchg
or
mov
add
push
push
fsubrs
adc
lahf
jne
push
cmpxchg
es
lock
inc
pusha
je
sub
sub
iret
adc
cmp
cmc
cltd
jb
dec
ret
add
dec
shrl
mov
adc
adc
in
hlt
pop
les
inc
mov
cmp
jae
jecxz
lea
ss
cld
mov
pop
ja
lods
mov
in
je
ljmp
test
subb
cmpsb
or
dec
addb
jns
or
or
jmp
sbb
iret
out
or
dec
rol
mov
inc
add
cmpsb
xor
push
testl
in
pop
out
out
imul
mov
add
dec
hlt
outsl
daa
or
outsl
xlat
movsb
cmp
jp
dec
xchg
dec
ja
scas
enter
into
pusha
cmp
enter
movsb
insl
xchg
sub
lahf
test
xchg
mov
jp
fwait
popa
lods
subl
pop
ja
xlat
inc
mov
xor
lea
nop
dec
outsb
xor
sbb
pop
mov
or
xchg
push
inc
pop
mov
xlat
sbb
xchg
scas
mov
push
xchg
and
adc
data16
lret
rcrb
aaa
xor
fnstenv
nop
xorl
push
mov
pop
mov
cmpb
adc
jge
fs
mov
jae
pop
shll
cmp
xchg
jae
ss
pand
or
test
inc
insb
sbb
add
add
stc
rcll
and
mov
ljmp
jno
repnz
xchg
adcl
xlat
mov
add
jnp
sub
xor
movsl
adc
mov
bound
popf
pop
loope
mov
push
mov
lret
inc
xchg
dec
mov
lods
inc
loop
jecxz
xchg
enter
pop
clc
dec
xor
pop
jb
or
call
or
and
mov
xor
call
rcl
call
repnz
aad
stc
mov
and
jae
imulb
sub
stos
sbb
dec
hlt
scas
inc
in
jmp
mov
je
lea
out
lcall
adc
and
mov
rcrl
insb
inc
shll
push
rorl
popf
mov
mov
ja
add
mov
iret
push
mov
lds
ret
pop
jmp
pop
pop
jp
mul
jmp
test
imull
dec
sbb
fistl
xor
and
sbb
xchg
imul
jne
in
xor
push
or
dec
jo
push
insb
lret
jg
out
dec
lock
dec
iret
call
jne
mov
cmp
mov
int3
xor
cli
dec
out
out
and
loop
ss
cmp
mov
mov
xchg
int
xbegin
add
lahf
cmc
fisttpl
cmp
stos
adc
cmp
lock
pause
loope
or
adc
inc
add
lret
into
add
adc
and
lods
cmc
lcall
push
lcall
pop
push
ja
xorl
or
xchg
cmpsl
xor
mov
jecxz
ljmp
pop
icebp
xorl
and
lock
int3
arpl
imul
xor
cli
or
pop
repnz
hlt
pop
or
adc
or
mov
xchg
cmovne
xor
fisttpll
jnp
jno
pop
addr16
repnz
push
and
bound
push
adc
aam
sub
imul
decb
xor
data16
pusha
out
push
cmp
fwait
inc
decb
fistpl
and
and
enter
les
and
cli
call
jle
outsl
int
out
fs
dec
test
jmp
scas
ljmp
imul
ret
push
adc
add
into
mov
das
jnp,pt
test
mov
sub
add
subb
notb
fsubrl
mov
inc
sub
xchg
scas
adc
dec
mov
xor
das
mov
dec
pop
cmp
jg
daa
sub
push
fsubp
test
enter
cmpsb
jmp
stos
sub
xorl
pop
nop
lds
and
adc
lods
and
inc
push
btr
leave
inc
and
add
jns
inc
cmp
jno
inc
mov
adc
mov
cltd
cltd
sub
loop
push
xchg
adc
in
cmp
sbbb
jle
int
adc
push
push
sbbl
push
scas
faddl
cwtl
scas
cltd
clc
int
push
lret
mov
mov
pop
add
pop
cmp
xchg
adc
jp
xor
and
push
or
inc
jp
adc
mov
testb
loopne
adc
imulb
jecxz
xchg
cmpsb
push
xchg
leave
inc
loop
mov
pop
aad
push
adc
cmp
inc
pop
aam
xor
mov
ficoms
bound
xor
adc
stos
add
repnz
addr16
lea
mulb
xlat
fwait
adc
aad
mov
xchg
sub
and
dec
outsl
jne
aam
mov
push
jecxz
add
out
sub
jmp
fsubp
mov
inc
lods
out
mov
or
fmuls
xchg
das
nop
push
or
sub
hlt
fucomi
sti
icebp
enter
shlb
and
cmovp
sub
imul
jnp
cli
jp
out
adc
dec
sti
hlt
mov
xchg
into
out
test
jae
ss
fmuls
pop
scas
nop
inc
dec
jbe
int
xlat
and
sbb
pop
push
aam
pushf
shlb
pop
shrb
and
or
out
in
add
sbb
sarb
sahf
pop
push
jmp
dec
dec
cmp
pop
cmp
xor
out
pop
orl
popa
cmp
and
dec
adcl
jp
xchg
mov
repnz
daa
ljmp
sub
fbld
or
adc
jge
sbb
shlb
jmp
pop
mov
cmp
call
jb
aas
ret
mov
invd
or
in
mov
cmp
pop
fs
adc
sbb
test
sbb
push
mov
xchg
cs
mov
xchg
push
pop
jg
push
mov
mov
dec
fisubs
lods
test
jb
cmp
inc
mov
and
out
scas
lds
mov
das
fdivl
mov
mov
dec
and
or
jg
je
in
lret
inc
and
adc
hlt
shl
sti
pop
jge
call
cmp
fs
or
stc
jmp
cmc
adc
mov
dec
in
popa
sbb
shrl
mov
cmpsb
mov
push
cmp
push
push
inc
add
fsts
fistpll
dec
ret
arpl
xchg
data16
xchg
inc
pop
cld
xchg
dec
movsl
aam
loope
shl
jb
push
xlat
call
gs
pop
xor
or
lods
sub
icebp
insl
aaa
mov
inc
mov
clc
and
lcall
cli
popf
adc
cmp
repz
cld
and
cmp
pop
adc
mov
mov
jl
nop
mov
out
cltd
js
pop
outsl
lea
jge
test
lods
icebp
inc
sbb
inc
in
mov
fisubl
pop
add
stos
jae
xchg
iret
lods
push
cmp
pop
mov
cmpsl
push
hlt
lock
mov
cmp
repz
ficomps
test
icebp
push
jmp
das
testl
and
jg
gs
sbb
insb
push
lretw
mov
mov
xor
add
xlat
or
in
ret
shlb
decl
dec
fistps
and
lods
aas
adc
jge
nop
inc
sub
mov
fisubs
or
mov
aas
push
and
paddusw
jge
sbb
lods
into
xor
gs
inc
mov
mov
cmp
xor
or
sbb
xchg
xchg
jbe
ds
sbb
sub
push
fprem1
xor
and
mov
inc
test
mov
add
jnp
xchg
ss
sarl
inc
orl
cs
cmpl
push
es
fwait
mov
fwait
stos
sub
es
mov
cmpsl
adc
pop
jecxz
add
mov
inc
push
inc
add
push
xlat
pop
jnp
mov
cmc
fcomps
lock
adc
repnz
rorb
push
clc
test
push
daa
pop
shrb
enter
xor
ficompl
insb
stos
adc
fbld
dec
jne
lds
scas
adc
test
xchg
insb
cmp
cmp
or
pop
lcall
jo
jae
pop
jns
jmp
sub
push
adc
sub
rclb
mov
and
mov
xor
scas
mov
sbb
fisttpl
or
push
mov
aas
and
add
push
inc
scas
call
and
js
jecxz
addr16
mov
lahf
repnz
call
mov
pop
inc
mov
sub
rclb
rclb
syscall
mov
loope
pop
mov
mov
mov
mov
mov
mov
gs
sbb
or
sti
adc
dec
push
repnz
sub
rol
xor
push
pop
xlat
pop
push
cmpsl
fyl2xp1
popa
icebp
dec
je
or
xchg
das
xor
out
and
iret
adc
mov
lret
and
sbb
mov
jae
scas
dec
adc
xchg
ret
xor
stc
out
jle
aam
sti
sbb
and
cld
ljmp
cmc
gs
mov
lcall
daa
mov
nop
rcl
inc
test
push
mov
dec
push
lea
sub
mov
negl
dec
xchg
and
lea
gs
dec
rcrb
mov
fidivs
js
leave
clc
cli
adc
adc
add
into
shlb
sub
xchg
pusha
ja
pop
outsb
and
sti
xor
aaa
sub
cmpsb
mov
fldcw
inc
add
call
mov
sbb
xorl
mov
lcall
lcall
out
pop
cli
addr16
xor
pop
jae
xor
or
mov
sbb
shll
iret
or
clc
div
out
aam
mov
jmp
jmp
andb
fildll
sbb
mov
fsts
jno
dec
fcomi
fildl
xor
sub
and
rcll
mov
inc
jl
adc
nop
push
dec
xchg
hlt
xor
icebp
cmpsb
or
push
enter
xlat
mov
mov
mov
and
and
insb
sbb
mov
and
pop
push
add
add
in
stos
nop
or
lods
les
mov
movsl
pop
inc
xchg
cmp
jo
jmp
mov
xor
jns
inc
in
dec
scas
repz
ss
mov
pshufw
bound
lcall
cli
push
ret
scas
rol
call
adc
nop
lret
call
mov
push
repz
xchg
sub
cltd
fdivrl
jne
xchg
aaa
inc
movsb
sub
aad
or
adc
xor
repz
or
sbb
xor
shll
xor
inc
popf
out
sbb
es
push
inc
jmp
mov
jg
lahf
fdivrp
dec
int3
or
dec
jmp
sbb
stos
fbld
and
js
call
lahf
inc
cmpsb
jge
repnz
pop
clc
fistps
repz
mov
stos
xor
and
fs
pop
inc
ja
sub
cmp
mov
out
lea
xor
scas
push
push
add
add
push
insb
repnz
pop
push
repz
adc
jbe
outsb
pop
mov
adc
add
xchg
loop
add
mov
mulb
daa
and
orb
mov
insl
loop
jge
mov
nop
lds
ja
cld
icebp
mov
sbb
mov
sub
dec
push
lcall
mov
movsb
push
testb
xchg
rclb
outsb
and
test
cmpsb
aad
outsl
xor
inc
pushl
add
nop
xchg
xor
ja
out
orl
jne
ret
mov
push
sbb
stc
inc
lock
pop
push
lldt
pop
add
cmc
ljmp
adc
push
call
inc
ja
insb
sbb
dec
aam
sti
sub
cmp
lret
adc
cmp
mov
or
gs
jl
popf
sbb
fistpll
bnd
std
add
aaa
mov
mov
pop
loope
cmp
cld
and
or
in
mov
aas
add
mov
xchg
in
scas
lahf
imul
push
push
jo
test
fistl
or
rcrl
mov
sub
imul
sbb
decb
lahf
mov
sbb
jns
jae
ds
loope
jle
sbb
out
push
test
loopne
imul
or
mov
inc
ret
out
in
sub
xchg
stos
subl
jp
xchg
mov
fnsave
jo
dec
out
push
cmpsl
dec
pop
jmp
das
or
daa
insl
mov
sti
sbbb
test
or
out
dec
pop
mov
sbb
int
les
test
mov
addr16
sbb
push
lods
and
lods
lock
inc
inc
jl
xor
rcll
in
imul
mov
sub
sub
shl
mov
leave
add
ja
aaa
or
loope
rorl
add
cmpsb
add
sarb
repz
mov
cmp
xor
cs
sub
sub
stos
dec
cmc
jp
or
pushf
scas
cmc
jge
jg
jl
arpl
notb
mov
cmpsl
mov
dec
js
push
mov
cld
aad
ds
ljmp
fcomp
jae
icebp
adc
scas
jae
pushf
dec
test
sar
jnp
mov
and
xlat
mov
cmp
fdivrp
int
inc
out
enter
fildl
pop
cmp
mov
or
imul
pusha
dec
mov
inc
jl
repz
in
jle
add
and
xor
int
xor
test
mov
loop
lods
fdivs
xor
pusha
fsubrs
dec
push
arpl
lock
fldl
sbb
ficoms
sub
loope
das
daa
fmull
mov
jb
loopne
dec
cltd
cmpsl
cmp
xor
xor
jo
dec
sub
push
xchg
adc
rcrl
push
push
sahf
xchg
hlt
or
gs
popa
es
xor
sub
pop
and
pop
sbb
mov
dec
mov
enter
xor
xor
imul
xchg
aaa
add
aaa
lods
in
sbb
sbb
inc
add
push
jnp
stc
or
aam
aaa
add
insb
sbb
push
test
jle
stos
inc
inc
sub
push
push
xchg
nop
pop
subb
push
adc
xor
add
or
notl
mov
lods
fs
mov
je
loope
mull
mov
sub
jbe
xchg
negl
add
inc
xor
scas
dec
mov
mov
pop
and
xchg
cli
dec
fistps
fs
and
sub
xor
mov
jnp
lret
add
pop
jl
pop
icebp
adc
or
loopne
xor
adc
rcr
cmp
fcoml
sub
loop
or
add
lret
jge
mov
test
or
popf
out
das
pop
xor
push
ljmp
xor
adc
xorl
cmpb
std
cmp
mov
inc
cmpsb
xchg
in
in
cli
popf
ret
rcrb
mov
aad
adc
sbb
sti
push
inc
in
out
mov
xchg
or
jg
jp
mov
push
inc
push
rcrl
subl
cmp
into
jbe
inc
or
xchg
inc
pushf
pop
and
aas
mov
test
mov
cmp
pop
push
popf
je
sub
cmp
cltd
xor
push
jnp
imul
outsb
dec
and
fimull
pop
mov
inc
push
mov
xchg
loopne
mov
in
cltd
sub
iret
or
and
out
xor
pop
fcoms
push
or
xchg
outsl
scas
inc
test
or
hlt
out
or
and
cmpsl
xchg
mov
test
or
shlb
mov
mov
mov
dec
sbb
lcall
adc
jo
pop
push
ret
cmp
push
cld
jae
fincstp
jmp
cmp
sbbl
or
pusha
pushf
pop
add
mov
ss
jp
push
out
mov
add
jge
test
cmpsl
lcall
mov
push
xchg
cltd
shll
mov
mov
lods
cmp
fsubs
lock
push
adc
fcmovnb
fs
mov
cmp
lods
or
loope
cmp
xor
js
jae
push
rcrl
mov
arpl
test
lock
push
xor
mov
pop
inc
cmp
push
test
jl
dec
test
push
adc
imul
fsts
test
int
fisubl
rcll
ljmp
and
out
test
lods
add
xor
push
xor
xor
pusha
scas
mov
daa
push
inc
ss
ja
push
out
lds
lea
pushf
mov
sub
jnp
push
pop
rep
sbb
mov
mov
test
sahf
xor
sub
imul
or
push
inc
lds
std
aaa
or
clc
xchg
out
lret
arpl
and
dec
in
dec
sarb
push
or
imul
cmp
mov
ljmp
cmpsl
in
sbb
jne
les
sti
test
cmp
pop
scas
cld
bnd
std
xchg
ret
push
fistps
mov
jb
xchg
fnclex
xchg
cmc
lret
and
inc
push
imul
xor
mov
xchg
ss
pop
or
ljmp
xchg
icebp
ja
dec
mov
scas
clc
jne
cmp
enter
push
orl
mov
push
dec
sbb
cli
inc
mov
adc
pop
sub
test
movsb
jo
adc
bound
push
push
push
mov
sub
add
mov
test
cld
dec
ret
int
lods
movsb
imul
jmp
ret
inc
test
pop
jb
lods
inc
mov
xor
jg
dec
das
sub
insb
icebp
jmp
stos
test
stc
pop
push
xor
sub
movsb
dec
outsl
adc
jno
add
xlat
loopne
popa
mov
mov
es
jp
jbe
outsl
xchg
add
jbe
mov
mov
inc
jb
sar
popa
dec
pop
push
mov
jb
nop
jo
jmp
or
xchg
xor
and
andl
ret
jmp
call
pop
cmp
push
mov
add
inc
jecxz
pop
sub
add
add
aas
fsubp
mov
xchg
jmp
loope
inc
aam
lret
lcall
lock
lahf
imul
xor
dec
xor
insb
pop
inc
push
in
mov
adc
std
pop
dec
jnp
mov
inc
ret
sti
cmp
jg
sbb
fwait
mov
mov
push
shlb
xchg
imul
pop
and
jbe
or
jmp
ror
rcrb
mov
fiaddl
sub
out
daa
xor
leave
mov
adcb
or
and
and
lods
stos
inc
dec
jno
mov
divb
sub
imul
jno
ss
mov
push
mov
or
pop
rcl
and
push
xorl
xchg
mov
shlb
adcl
lock
xor
cmp
mov
ss
mov
mov
lods
sbb
aaa
movsl
ds
mov
push
es
fs
jne
xlat
mov
xchg
inc
inc
outsl
inc
loopne
rorb
xchg
cmpsl
add
cli
sbb
jg
sub
jg
loope
std
stos
pushf
int3
cwtl
iret
sti
les
sbb
sub
jae
or
or
mov
and
testl
test
xlat
xor
or
mov
xor
sbb
dec
adc
inc
lret
xchg
scas
adc
aaa
outsb
sbb
jo
jns
lods
sbb
rclb
pop
push
or
mov
mov
aas
outsb
mov
cld
lret
mov
jl
mov
mov
shr
loopne
je
push
leave
xchg
xor
dec
and
adcb
mov
std
push
lods
add
fstps
jp
pop
jno
sbb
sub
ja
repz
aas
jb
mov
and
xchg
inc
push
fs
mov
jge
push
xchg
push
and
push
jnp
arpl
mov
cmp
jbe
ljmp
sbb
aam
xor
jp
fwait
lds
xorb
aaa
fisubs
jg
jb
add
cmpb
jno
rcr
xlat
mov
mov
adcl
mov
and
xchg
sub
add
cmp
pop
and
sub
mov
stc
mov
mov
mov
popa
mov
lcall
inc
lret
pop
xor
nop
push
pop
inc
add
adc
inc
push
lret
mov
or
mov
xlat
mov
sbb
jo
notl
dec
xchg
jnp
shrb
and
subb
orb
pop
shr
stos
test
stos
or
inc
xor
sub
stc
sub
movhps
xchg
cmp
inc
repz
fdivs
orb
pushf
sbb
push
es
lods
jmp
test
dec
push
out
adc
leave
fsubs
push
stos
and
mov
es
and
dec
dec
jbe
sbb
cmp
pop
mov
daa
cmc
mov
addr16
in
cmc
jne
insb
rcll
popa
push
jmp
mov
and
or
sahf
roll
mov
daa
push
mov
push
inc
xchg
pop
pop
inc
mov
js
aad
dec
or
add
popf
fdivrp
jbe
movsb
repnz
xor
shlb
sarl
or
imul
icebp
mov
jnp
mov
push
add
insb
mov
outsl
adc
push
lds
mov
gs
jmp
push
jo
inc
push
lret
xor
jp
loopne
add
imul
add
cmp
movb
lods
or
add
or
jmp
mov
iret
jns
stos
fdivs
ja
loop
das
push
push
pop
pop
xor
jp
sbb
or
or
push
loop
call
aaa
arpl
lock
and
mov
inc
push
leave
repz
dec
arpl
push
mov
bound
hlt
data16
adc
ljmp
movsl
xor
cs
jl
inc
and
call
leave
sub
out
xchg
pop
lock
cmp
cmp
adc
sahf
sbb
cli
mov
repnz
xor
test
jp
xor
mov
divl
cmp
jle
stos
lret
sbb
and
lea
daa
ja
into
je
mov
xchg
fsubrl
or
imul
cmpsl
or
lahf
loopne
test
lcall
cwtl
sbb
inc
lahf
imul
cmp
fcmove
push
bound
sub
pushf
test
sbb
xor
cmp
cmp
mov
and
mov
scas
mov
xor
push
dec
imul
ret
push
in
sub
cmp
jmp
dec
cmp
jle
inc
xchg
pusha
push
dec
push
xchg
scas
lea
cld
fnstenv
sbb
jns
mov
or
int3
out
cmpsl
into
mov
ds
push
add
ljmp
mov
pop
jno
push
daa
insl
subl
imul
mov
rcll
movsb
test
mov
das
mov
and
and
jg
cmc
sbb
dec
inc
sub
in
test
out
push
jbe
jge
lods
sbb
or
jb
mov
xchg
push
mov
xchg
stos
mov
inc
pop
mov
test
dec
in
push
scas
test
loopne
iret
xchg
mov
scas
les
icebp
jne
sub
jg
roll
adc
pop
in
arpl
data16
mov
out
and
jge
loopne
lret
stc
push
fidivl
loopne
xlat
shlb
cmp
cmpsb
pop
cmp
enter
xlat
lods
test
adc
jmp
xchg
roll
popa
pushl
sarl
jmp
dec
test
fwait
outsl
movsb
clc
mov
bound
arpl
add
add
jp
add
add
xchg
test
mov
call
push
fistpll
test
xchg
imul
push
aad
cs
dec
push
outsb
pop
outsl
cmp
jae
lods
sbb
test
push
ja
lret
ret
lock
mov
mov
shl
inc
cmpsb
pop
jae
stc
movsb
sub
sbb
stos
outsl
mov
dec
loop
pop
aad
test
xchg
adc
add
dec
jl
sbb
enter
mov
push
dec
outsb
mov
jmp
inc
add
inc
xor
cmp
mov
test
cwtl
mov
fwait
adc
mov
fidivrl
or
add
fldenv
lods
xchg
xchg
loope
sub
scas
cld
das
lahf
shll
out
pop
dec
and
adc
cmp
push
push
mov
shrl
or
push
xchg
and
pop
rcll
int3
stc
jbe
xchg
sar
inc
js
je
fs
in
mov
das
mov
stos
mov
sti
add
dec
call
mov
loope
cmc
pop
out
pop
cmp
int3
psadbw
adc
mov
aaa
mov
in
test
mov
pop
addr16
pop
enter
mov
fs
mov
inc
pop
sbb
loopne
andl
xchg
pop
jno
out
scas
jnp
test
inc
xchg
test
xchg
lcall
mov
and
mov
jp
mov
pushf
mov
mov
nop
imul
add
sub
and
sbb
pop
popa
stc
cltd
xchg
inc
pushf
test
aad
ret
fisubl
outsb
sub
xchg
or
push
repz
sbb
push
fdiv
mov
adc
jle
mov
lds
neg
je
xor
push
sti
mov
pop
sbb
pop
fidivs
xor
cmp
push
imul
fwait
mov
ret
adc
pop
addr16
pop
sub
mov
pop
cltd
xchg
mov
xchg
and
mov
repnz
fwait
mov
mov
xlat
mov
clc
outsl
fs
lcall
inc
mov
pop
xor
jbe
lea
jns
test
mov
xor
fbstp
inc
les
test
ret
aaa
xor
insl
sbb
int
xlat
adc
pop
sub
lock
int
loop
outsb
enter
jne
in
iret
pop
hlt
call
jno
mov
sub
pop
xor
push
and
in
aaa
or
fcomps
jo
jmp
shlb
das
js
push
gs
pop
jp
fcmovnbe
repnz
add
sahf
mov
fistps
in
loop
pop
jns
aas
xchg
lcall
inc
jbe
adc
push
pop
add
xor
cli
sub
aad
xchg
dec
jnp
jno
pop
adc
push
sub
jb
and
jb
xchg
push
dec
push
aaa
push
ds
repnz
or
xor
gs
xchg
dec
dec
xor
inc
pushf
pop
leave
out
and
lcall
pusha
ja
mov
test
jge
cli
pop
lcall
sbb
adc
fwait
push
xor
mov
jnp
test
inc
fistpll
sub
clc
inc
or
lods
sbb
xchg
cmp
sarl
lret
rcl
data16
aam
outsb
adc
sti
cmp
and
sub
or
mov
lcall
iret
sbb
inc
pop
out
dec
imul
lret
adc
jle
inc
xor
test
push
xchg
dec
push
imul
scas
push
inc
mov
sub
sub
mov
icebp
and
pop
jno
and
xor
ficoms
push
pushf
dec
xchg
add
mov
hlt
out
or
movsl
jecxz
add
push
pop
cmp
inc
xchg
lods
add
inc
mov
jnp
pop
loop
sti
arpl
hlt
xor
mov
adc
sub
dec
sub
das
xor
cwtl
and
pop
ja
jns
or
xchg
lods
inc
push
sub
test
sti
cmp
mov
call
fsts
jb
scas
ja
jg
mov
xchg
in
sar
fs
adc
subb
shll
mov
push
shl
sub
add
push
sarb
jmp
bound
mov
fs
cli
icebp
add
rol
pop
sbb
js
and
scas
mov
mov
add
jp
repnz
out
mov
xchg
into
xchg
jae
push
in
mov
pop
sbb
loope
mov
or
mov
repz
mov
sbb
repnz
in
hlt
movsb
xchg
ret
inc
lahf
das
and
and
sbb
mov
popa
out
iret
push
test
pusha
xchg
pop
jecxz
mov
das
shr
ljmp
fs
jnp
mov
jnp
leave
imul
ja
int
jb
jecxz
movsl
test
xor
or
repnz
fnstsw
aad
arpl
ja
jne
sbb
fldl2e
xchg
mov
int3
push
cltd
pop
mov
xlat
mov
and
insb
iret
push
pop
jecxz
sub
push
outsb
push
test
xchg
dec
jp
nop
xchg
jg
out
rep
stos
inc
fidivrl
fimuls
popf
mov
pop
cmp
mov
cli
or
inc
lcall
and
mov
dec
cltd
adc
iret
mov
test
insl
orl
and
mov
and
sahf
xor
inc
xchg
pop
sub
and
or
lret
popa
fstl
dec
stos
hlt
outsb
mov
cmp
stos
lahf
mov
mov
mov
loope
dec
std
les
gs
shrb
sarl
inc
adc
cli
decb
loopne
pop
lods
jge
dec
cltd
test
aaa
push
xchg
xor
xchg
rol
shrb
pop
inc
jno
cmpsb
mov
inc
cli
daa
arpl
xchg
xchg
and
lret
repnz
mov
roll
mov
jp
mov
ret
fucomp
lcall
adc
cmpb
sarb
aas
mov
jmp
add
cmp
cmp
adc
pop
xor
scas
ret
jnp
jb
addb
aad
mov
loopne
call
jno
les
jl
add
scas
and
push
cmp
enter
scas
jle
or
shr
test
xchg
lods
pop
cmp
lcall
dec
sub
push
loopne
repnz
xlat
dec
mov
jp
push
lahf
in
fs
push
rcll
xchg
mov
arpl
jecxz
sbb
push
insb
ret
or
mov
or
xor
push
pop
int3
mov
inc
pop
int
outsl
cmp
cmc
mov
or
mov
xchg
icebp
add
add
inc
insl
xchg
and
imul
inc
fs
push
stc
push
adc
jle
test
sub
out
rcrb
mov
dec
cmc
aad
and
sbb
fs
pusha
pop
outsl
pop
out
or
jmp
xchg
neg
insl
or
fdivs
jg
and
movsl
movsl
and
shr
in
loop
add
hlt
xor
lea
lea
xchg
scas
xor
pop
xchg
cltd
mov
insb
or
mov
pop
mov
lods
pop
and
mov
dec
push
inc
cli
adc
jl
cwtl
mov
jecxz
ss
jmp
shlb
pop
pop
pop
push
cmp
loope
pop
cmp
xor
fisttps
sti
or
xlat
push
aaa
in
out
mov
sub
rorl
jne
jp
push
adc
dec
dec
xchg
jecxz
cld
jg
or
ja
out
mov
ficoms
repz
add
and
and
leave
jp
mov
push
pop
mov
nop
or
jnp
adc
xchg
jne
sbb
lret
fnstsw
pop
mov
enter
cmp
cmc
add
push
mov
pop
clc
stos
pop
adc
xchg
xor
test
insb
push
scas
and
pop
mov
cltd
mov
jmp
xchg
jl
inc
out
ud2
cmp
test
pop
push
in
scas
adc
cs
pop
jbe
imul
fisttps
adc
cwtl
cwtl
lods
sbb
outsl
shl
into
jmp
insl
int3
push
scas
fisttpll
fimuls
fwait
mov
dec
movsl
stos
popf
fxch
sbb
or
jmp
test
gs
jle
lret
mov
mov
ljmp
negb
fists
movsl
out
pop
shll
sbb
test
pop
mov
pop
or
int3
lea
xchg
sub
sbb
inc
popa
mov
roll
add
out
loop
add
sub
test
xor
enter
pop
lahf
test
xor
cwtl
rolb
orps
jmp
pop
out
shl
ljmp
sbb
rcrl
xchg
jo
and
jae
push
jnp
jbe
jae
enter
cmpsb
sti
cmp
push
les
sbb
pop
fldlg2
xchg
add
rcrl
ds
xchg
add
ret
test
negb
dec
shl
movsl
dec
ja
repnz
jbe
add
testl
leave
cs
ja
daa
loop
jo
sub
ss
mov
mov
xor
sub
loop
fadds
lock
in
mov
outsl
cmc
mov
mov
mov
leave
adcl
xlat
cmpl
and
dec
sub
push
fildl
roll
and
mov
dec
out
xchg
or
jno
sub
pop
out
fisttpl
in
push
adc
call
dec
cmpsb
mov
icebp
pop
sbb
out
push
mov
mov
push
int3
mov
pop
add
fiaddl
and
je
cwtl
push
push
idivb
orl
jg
daa
arpl
ljmp
je
jns
add
fisubs
inc
mov
adc
cmp
out
lret
adc
fmulp
sti
in
jno
adc
movsb
mov
xchg
pop
mov
mov
dec
in
adc
xor
mov
data16
mov
ret
enter
cmc
in
xor
sbb
xor
aad
push
cmp
loope
adc
mov
fstps
notb
xchg
mov
push
push
filds
shl
fisubl
cld
mov
shlb
adc
inc
rcr
outsw
push
jl
fstsw
sub
mov
push
pop
movsb
test
stos
push
pop
fmuls
xor
push
push
idiv
stos
mov
dec
xorb
aaa
orl
xchg
cmpsb
cltd
arpl
jno
dec
popf
mov
push
adc
or
filds
lahf
ljmp
dec
out
int
scas
stc
and
stos
jbe
sbb
mov
xor
jns
into
js
cltd
or
jecxz
pop
jnp
or
insb
push
popa
pusha
and
into
fistpl
jle
ljmp
out
inc
insl
xchg
mov
add
stos
fisttps
add
adc
pop
or
stos
mov
inc
scas
cwtl
repz
jo
cs
jo
inc
pusha
mov
mov
cmovae
and
xlat
fdivl
pminub
add
push
sti
cli
jge
scas
lods
xchg
cmp
cltd
stos
cltd
and
mov
xor
das
cli
push
out
dec
imul
icebp
cmp
test
call
rcrb
sub
lods
mov
rcr
clc
cmp
fists
inc
cmc
xor
and
cltd
cmp
adc
fbstp
sbb
in
scas
pop
sahf
test
sub
xchg
jnp
fadd
fwait
xchg
in
fucom
imul
jecxz
insl
shll
push
sahf
pushf
dec
imul
jp
aad
jo
inc
cmp
in
and
lods
mov
clc
and
and
jecxz
lahf
loop
push
jecxz
in
xchg
xchg
mov
test
nop
push
adc
test
adc
enter
jmp
xchg
pop
fwait
scas
leave
mov
leave
pop
lods
fstl
mov
lret
cmc
in
inc
and
cmpsb
stos
sbb
push
cmp
add
jmp
mov
xlat
stc
and
or
sub
out
mov
stos
ss
mov
aaa
sbb
scas
fsubrl
and
jne
cmp
cli
cltd
cld
sbb
xchg
xchg
in
adc
cmpsl
push
shlb
mov
add
pop
movsb
sbb
leave
enter
dec
sbb
xor
lods
jb
fs
cmpsl
popf
scas
push
loopne
mov
mov
sbb
popf
mov
fcmovb
push
inc
out
xorb
mov
cwtl
movb
out
xlat
pop
out
xchg
repnz
adc
js
scas
mov
inc
popa
inc
outsl
lea
shll
push
lret
cltd
imul
dec
flds
inc
int3
mov
out
sbb
adc
mov
cld
cli
sub
push
mov
dec
imull
lea
mov
jne
inc
mov
and
scas
cmp
or
lds
xor
stos
jae
push
orb
mov
popf
and
xor
cmp
xchg
mov
mov
xor
pop
inc
divl
jl
std
mov
jb
and
lock
idiv
cmp
rcll
xor
pop
cmp
ljmp
xor
or
mov
cmp
sub
dec
movsl
mov
sub
dec
pop
adc
mov
adc
dec
fcoms
dec
leave
add
fnstcw
out
sti
push
mov
dec
daa
mov
jmp
jne
pop
cmp
push
testb
cltd
jbe
adc
inc
int
outsb
sub
mov
sbb
inc
insb
mov
or
inc
add
push
xchg
stos
cmc
call
in
inc
inc
push
addr16
cmp
add
sub
int3
sub
outsl
mov
adc
hlt
clc
add
cld
scas
stos
mov
es
mov
push
xor
add
mov
mov
lds
jl
roll
mov
mov
push
les
movlhps
insl
pop
mov
or
imul
and
dec
gs
popa
mov
add
fiaddl
mov
fstpl
out
out
mov
js
xchg
outsb
in
dec
inc
test
jno
inc
in
idivb
fdivr
xchg
cmp
call
sbb
mov
sbb
mov
cmp
les
movsl
bound
mov
out
fisubrs
cwtl
mov
inc
test
repnz
call
cld
sbb
mov
jae
jns
xchg
dec
testl
jbe
mov
lea
popa
cmp
arpl
repnz
flds
push
jb
arpl
xor
cmpsl
pusha
sub
repz
push
xchg
fdivp
cwtl
mov
ret
jb
fldl
push
out
xchg
into
xlat
and
mov
hlt
mov
jb
test
sub
loope
mov
lret
inc
stos
popf
jb
mov
sbb
inc
into
mov
dec
loopne
or
sub
sbb
adc
ds
pop
jo
out
fisubl
repnz
sbb
xchg
imulb
inc
les
ret
push
fistpll
clc
sub
push
mov
mov
jne
mov
pop
aad
bound
pop
clc
pop
lods
pop
je,pn
fs
adc
cmp
cmp
flds
mov
sub
cs
sbb
inc
mov
sbb
movsl
mov
mov
gs
push
insl
mov
inc
push
movl
ret
jg
gs
or
sub
pop
pop
push
in
mov
mov
inc
mov
mov
xor
and
shrb
dec
mov
push
mov
dec
push
sub
adc
jl
sub
add
pop
inc
add
inc
xchg
sub
ds
fildll
mov
fwait
aaa
ss
cld
cmp
js
add
imul
scas
inc
dec
pop
dec
loopne
pop
imul
sub
bound
xorb
xlat
jo
repnz
xchg
dec
adc
mov
mov
cltd
imul
sbb
inc
outsl
mov
xor
mov
push
adc
gs
mov
cmc
add
lahf
mov
daa
mov
xor
insb
addr16
lods
ds
cli
lahf
test
mov
jne
mov
mov
push
jmp
inc
jae
xchg
andb
push
jnp
push
cwtl
dec
adc
sbb
fwait
les
jge
adc
pop
ljmp
cs
adcb
xchg
xor
xchg
jae
jle
mov
push
cmpsl
mov
jmp
or
cli
js
sbb
pusha
jo
xlat
fisttpl
or
inc
mov
sbb
les
sub
xor
std
sub
imul
scas
lcall
xchg
inc
cltd
push
sub
sti
and
jne
test
aad
test
jg
pop
mov
jbe
mov
xchg
xchg
xchg
cmp
xchg
adc
jle
int3
pop
and
jno
fcoms
aaa
je
aad
icebp
in
add
lahf
and
repnz
or
iret
sbb
aaa
jge
cmpsl
xor
sbb
lods
js
lods
push
mov
and
lods
mov
jl
shl
outsl
mov
cmp
insl
fwait
xchg
fabs
aad
ffree
jns
fcmovb
bound
out
xor
mov
addr16
jns
cmc
popa
push
xor
fdecstp
xor
arpl
sub
scas
into
xchg
xor
mov
in
mov
sbb
lock
mov
scas
xor
push
or
ljmp
movl
mov
jnp
or
jecxz
jg
xor
cmp
inc
inc
fcoml
stos
adc
and
arpl
imul
data16
mov
sbb
ficoml
mov
cltd
cmpsb
outsl
cwtl
mov
sbb
xchg
xor
xchg
ret
lret
mov
in
adc
test
rorl
mov
inc
scas
iret
cwtl
jnp
xor
clc
inc
orb
enter
das
add
or
pop
insb
popa
decb
outsb
mov
stc
popf
and
ja,pn
mov
pop
jl
sbb
test
nop
ds
add
push
mov
dec
shll
pop
inc
cmc
xchg
mov
adc
imul
sbb
dec
jns
lea
int
iret
xor
mov
mov
cmpsl
cmp
cmp
psubd
leave
xor
mov
fdivs
pop
sbb
flds
xchg
or
mov
pop
sbb
xchg
add
cmp
dec
push
aaa
shl
dec
adc
jae
enter
add
push
jnp
pushl
popa
cmp
mov
cld
pop
dec
jae
pop
mov
mov
pop
xchg
pop
push
subl
nop
stos
mov
sbb
lock
add
pop
stos
xchg
loop
les
sarb
push
daa
fidivrl
mov
dec
or
pop
shlb
sbb
push
jb
mov
pop
inc
and
xor
in
dec
push
js
xor
into
jp
xlat
inc
sbb
adc
sahf
mov
adc
imul
push
out
mov
pushf
loope
xor
push
sub
mov
lock
jae
dec
movsl
add
ja
mov
jle
xor
and
out
xchg
sarl
out
add
rcr
es
ss
push
jle
repnz
testl
or
fwait
insb
mov
loop
cmp
ror
pop
ljmp
mov
fwait
int
adc
xor
std
push
inc
int3
mov
xor
pop
ljmp
mov
jb
push
sbb
inc
sahf
inc
movsl
add
mov
inc
int3
jnp
in
fcoml
sbb
sbb
fsubrl
pop
jl
into
jmp
sbb
cmp
cmc
sbb
push
lock
loope
cmc
stc
xchg
push
pop
adc
rorb
subl
xchg
popa
pop
sub
mov
mov
orl
fcoms
push
jns
out
push
inc
inc
sbb
jo
aad
lahf
mov
sub
inc
in
adc
gs
xor
icebp
cltd
cs
push
cs
movsl
ret
mov
sti
fidivl
pop
aas
lods
arpl
dec
and
xor
mov
jns
xorb
xor
pop
rolb
jns
int
jmp
lea
or
out
jno
popf
loope
imul
mov
test
test
cmp
and
das
push
mov
stos
mov
sbb
cwtl
iret
and
fwait
pushf
cmp
int
lcall
mov
ret
fstp
sahf
lea
mov
xchg
aad
and
jno
out
push
lods
jno
cltd
mov
jmp
jne
out
jl
loop
stc
dec
movsl
dec
mov
pop
out
or
pop
aam
lcall
lret
pop
add
js
mov
pop
getsec
mov
xor
mov
jp
xchg
sub
inc
idivb
sbb
push
hlt
stos
and
dec
xor
pop
loop
shrb
addb
jne
jns
xor
xor
adc
jle
xchg
and
sti
mov
sub
mov
inc
cmp
mov
jnp
mov
out
in
sbb
xchg
pop
mov
arpl
mov
nop
fisttpl
dec
test
cmc
lea
jns
pop
popa
dec
inc
outsb
xlat
sbb
sub
popa
xchg
ret
jg
stos
xchg
mov
les
cltd
repz
stos
jp
inc
stos
pop
pop
add
out
mov
pushf
imul
sbb
lret
mov
scas
xchg
push
stc
inc
mov
orb
cld
push
mov
fwait
mov
bound
aaa
inc
mov
add
and
cld
dec
xor
sbb
mov
repz
xlat
test
mov
adc
jmp
shr
cwtl
lea
leavew
inc
pop
loopne
loop
not
dec
int
jae
cmp
mov
aaa
scas
adc
sbb
test
xor
xchg
or
mov
fidivrl
jbe
inc
pop
inc
rorb
jnp
xor
cltd
xor
jno
movsb
and
shrl
in
dec
aam
adcb
mov
add
pop
repnz
lret
add
fists
xchg
in
and
arpl
add
outsl
cwtl
add
adc
mov
mov
pop
push
enter
push
pop
and
jne
push
jo
or
xor
inc
repz
stos
push
adc
pop
add
movsl
adc
in
or
adc
divb
shll
lods
aad
ds
out
jb
mov
inc
mov
add
add
and
lock
insb
out
adc
mov
sahf
xlat
mov
in
adc
repnz
jmp
repnz
daa
rclb
stos
sbb
mov
test
inc
push
leave
push
pop
push
stc
lcallw
xlat
insl
jbe
mov
addl
sarb
cmpsl
push
mov
pop
pop
repnz
les
hlt
das
lcall
ja
push
sub
testb
inc
jmp
rol
pop
shrb
imul
xchg
clc
push
push
pop
call
jg
pop
cmp
xchg
insb
fstpl
push
and
loopne
sub
gs
mov
mov
call
inc
insl
push
mov
push
js
sbb
scas
xor
test
add
or
sub
cmp
adc
jmp
stos
addr16
not
iret
loope
push
cmp
xchg
pop
ja
dec
cmp
scas
movb
repz
sbb
and
out
lods
mov
insl
enter
jne
dec
xlat
add
shlb
repnz
dec
and
sar
mov
or
pop
xor
sti
jae
and
aas
jb
sub
scas
adc
nop
mov
shlb
cmpsb
ljmp
mov
rcl
test
dec
xchg
pop
roll
jnp
mov
adc
out
pop
xor
or
jns
inc
incl
adc
inc
cli
xor
push
loopne
mov
aad
push
inc
andl
inc
aam
inc
cmp
add
pusha
addl
cmp
xorl
or
mov
jg
add
cmp
xor
pop
add
sub
sub
js
sbb
or
nop
fnstcw
in
ret
pop
lret
xor
xor
js
arpl
mov
jbe
xor
add
fildll
xor
clc
mov
gs
pop
cmp
jae
leavew
rcll
or
xor
cmp
mov
lcall
adc
xorb
push
sub
lea
pop
loopne
jo
lods
xchg
into
jmp
les
xchg
gs
push
pop
inc
and
xchg
add
xchg
test
loop
or
xor
mov
pusha
adc
jmp
push
popa
cmpsl
adc
icebp
fdivl
mov
rcrl
out
je
outsb
mov
loope
sub
jge
sub
mov
mov
cmpsb
andb
dec
jle
adc
xchg
xor
sub
pop
sub
sti
das
std
inc
pop
fnstcw
pusha
inc
lret
in
push
and
cmp
jl
into
sub
cwtl
pop
fstl
dec
jnp
int3
sub
pop
in
mov
and
stc
mov
mov
stos
add
sub
or
mov
mov
push
adc
insb
xchg
cs
ret
lahf
stos
sbb
mov
push
pop
pop
gs
aas
push
jecxz
fyl2x
mov
ret
push
push
mov
jae
sub
adc
push
addr16
cmp
and
rorl
jae
aas
xchg
jno
push
sbb
adc
out
and
xchg
xchg
add
cmp
push
mov
adc
adc
mov
pop
test
jle
fimull
cltd
jno
test
das
loopne
call
add
cmp
int3
and
or
cmp
and
dec
movsb
pop
mov
dec
pop
pop
dec
cmpps
loop
arpl
das
das
pop
loop
push
aam
ljmp
jnp
ret
xor
int3
loope
cli
mov
mov
and
dec
stc
dec
sar
sbb
icebp
jno
add
sub
jg
iret
mov
loope
jo
cmp
int3
sbb
fimull
xor
repz
mov
push
pop
pop
add
adc
cmpsl
cltd
push
mov
scas
int
aas
daa
cmp
in
sub
xchg
jno
mov
mov
insl
fisttpl
in
push
cmp
sbb
outsb
dec
popf
push
mov
scas
insb
ret
mov
push
loop
mov
mov
adc
mov
adc
lods
mov
stos
adc
cmp
jae
inc
xor
jns
mov
or
push
push
call
push
cmpsb
shll
hlt
stos
test
cmpsb
push
xor
pop
testb
ja
xchg
pop
or
pop
mov
and
inc
mov
andl
jl
adc
aas
pop
test
into
push
xchg
repnz
movsl
jo
and
rcrb
cld
mov
mov
loop
pushf
lds
fdivrl
xchg
xlat
pop
es
add
mov
dec
insb
sub
add
mov
int
jg
cmc
mov
test
stos
ljmp
mov
fsubs
aaa
sbb
fcoml
xchg
repnz
cmpsl
or
mov
in
test
iret
ljmp
sub
mov
mov
int3
dec
dec
cli
ret
sub
cmp
lods
cmp
imul
test
outsb
pop
aad
sahf
adc
inc
xor
fwait
adc
cltd
dec
xchg
cmpsb
test
test
sub
lahf
dec
mov
mov
imul
dec
cwtl
sub
std
mov
repz
xchg
or
push
and
pusha
push
add
sub
mov
xor
roll
movsb
mov
leave
pop
bound
scas
push
xor
frstor
stos
xchg
les
cwtl
dec
out
shll
fldcw
jbe
lret
cmc
clc
sahf
push
pop
cmp
dec
lods
sti
dec
fsubl
call
inc
mov
lea
icebp
or
lret
jne
xchg
int3
js
addr16
hlt
ja
jne
aad
and
fstps
cmp
cmp
push
cmp
and
mov
push
dec
andl
cmpsb
mov
cmp
fcmovne
fwait
add
sbb
fs
adc
push
movsb
cmp
push
mov
out
dec
push
insl
fwait
pop
xor
rcr
rcrb
sbb
push
out
cwtl
outsl
mov
mov
inc
sti
adc
sbb
mov
iret
mov
mov
pushf
shll
fisubs
mov
jmp
mov
pusha
jo
negl
push
jae
adc
pop
sbb
sub
mov
jmp
xor
in
jb
cmpsb
mov
lcall
pop
push
test
jbe
pop
inc
push
enter
aaa
idiv
and
dec
rcrl
int3
ss
cmp
sbb
pusha
movsb
sbb
repnz
xchg
cmc
mov
jl
into
outsb
movsl
lret
xchg
pop
xchg
jp
cmpb
or
call
inc
adc
pop
mov
out
icebp
add
cmp
les
dec
loopne
gs
bound
pop
inc
mov
sub
mov
add
sbb
lock
aaa
ss
cmpsl
pop
mov
js
jne
daa
out
adc
xchg
pop
add
out
aas
ss
clc
int
insb
test
ficompl
jl
push
cmp
inc
fisttps
or
mov
popf
dec
mov
xchg
mov
push
repnz
lahf
xchg
cmp
xor
test
in
xor
imul
test
jl
sbb
push
xor
sahf
movl
aaa
add
mov
jecxz
pusha
sbb
pushf
mov
push
sub
bound
lock
test
adc
xor
mov
mov
js
lock
arpl
daa
pop
repz
in
pop
leave
jns
sbbl
test
mov
or
js
out
jge
lcall
pop
call
push
mov
mov
xor
cmp
adc
mov
push
sbbb
stc
addr16
sbb
fdivrs
mov
cmp
adc
cmc
push
pushf
sbb
rcl
mov
add
xor
pushf
mov
lret
inc
pop
out
insb
fisubl
xlat
sbb
jl
prefetch
mov
dec
lock
or
jg
cmpsb
cmp
shll
pop
mov
fdivp
xchg
mov
push
call
push
cmp
pop
pop
dec
mov
sbbl
out
xchg
fsts
ja
push
push
test
lahf
stos
pop
shll
jp
shll
mov
mov
mov
pop
dec
dec
es
xchg
aaa
inc
mov
jb
xor
inc
mov
nop
push
lea
pop
push
hlt
and
adc
jno
sbb
outsb
inc
mov
sub
xchg
loope
jno
jo
push
inc
push
lcall
mov
cmp
pop
inc
pop
je
sbb
cmp
popa
aad
imul
test
xchg
insl
cwtl
or
push
xor
pop
notl
in
jae
stos
xchg
idiv
insb
pop
inc
add
fiadds
jle
in
or
adc
lahf
or
fldcw
arpl
bound
enter
lcall
lock
mov
mov
pop
adc
scas
or
jo
ds
or
mov
mov
sti
adc
leave
out
sbb
cmc
mov
cwtl
sub
inc
fldenv
mov
jle
add
testb
in
cmpsb
or
xor
popa
es
cld
xchg
cmp
popf
sahf
xor
push
scas
in
sbb
pop
sub
add
lods
cld
xchg
lcall
fildl
xchg
shl
dec
test
stos
and
adc
cmc
add
lock
sbbb
add
fistps
lahf
and
popa
adc
or
fcoms
test
subl
dec
sub
outsl
addr16
inc
fsubs
add
xchg
add
inc
es
dec
or
test
jno
movsb
mov
jo
push
pushf
push
mov
pusha
push
imul
lcall
scas
arpl
jns
jnp
cmc
xchg
sbb
sbb
rolb
mov
cmc
fcoms
aas
movsb
dec
mov
test
add
in
loope
inc
sub
push
pushf
pushf
fldt
sti
jnp
sahf
daa
push
sti
mov
in
mov
mov
sti
dec
jno
sub
push
adc
and
adc
cmp
push
scas
scas
push
xor
scas
inc
adc
orl
cmpsb
or
push
ret
adc
jne
adcb
and
xchg
fidivrs
shll
sbbl
pop
repnz
pop
jo
imul
orl
shll
sarl
movsl
fld
hlt
sub
in
fmul
popa
lahf
jb
out
xor
outsl
cmpsb
dec
stc
popa
lcall
sti
push
and
lahf
test
testl
pop
adc
cmp
mov
mov
movsl
jo
cmp
rcrb
icebp
inc
ret
test
push
jp
int
lods
sbb
inc
fs
jp
push
popa
push
stos
fstpl
enter
jle
jp
in
jae
popf
inc
and
in
mov
out
and
divl
shl
pop
faddp
jecxz
mov
rol
push
lret
sub
pushf
lods
gs
sbb
cltd
scas
mov
push
test
pop
mov
stos
sahf
add
scas
mov
push
cltd
and
enter
les
icebp
sar
mov
sbb
in
subb
ret
rolb
sbb
aam
jne
inc
mov
xorl
les
pop
jmp
sbb
ds
subl
ret
dec
aad
ds
int3
push
jns
xor
adc
or
add
mov
vmaxsd
push
insl
stc
inc
mov
outsl
push
jno,pt
loopne
add
jns
lret
aam
cmp
popl
into
stc
dec
ret
pop
outsl
movsl
pop
or
int3
pop
mov
inc
lods
std
loope
sbb
shlb
sub
mov
sub
lods
jge
or
fiadds
int3
mov
mov
cmc
fstl
add
aaa
dec
fs
adc
and
add
pop
fimull
scas
lahf
ja
xor
sub
cltd
dec
ds
cmp
sti
inc
in
adc
xchg
xlat
aam
sbb
clc
mov
cmp
mov
jae
mov
sub
aaa
das
fistl
and
jae
cmc
or
xchg
shlb
or
inc
ret
cmp
ljmp
inc
das
pop
mov
mov
mov
ss
ljmp
xlat
sahf
add
dec
insb
add
ljmp
fsubl
aad
xchg
in
adc
sbb
sbb
iret
mov
lahf
xlat
cmpsl
lcall
mov
add
lea
inc
mov
push
xorl
jmp
mov
ss
insb
dec
mov
push
jnp
push
dec
nop
sbbl
mov
add
std
leave
out
pop
sbb
sub
lds
loop
or
jb
inc
mov
nop
xorl
cmc
ljmp
xlat
add
stos
sub
sahf
cmp
lds
push
xchg
aas
add
sbb
inc
pop
xchg
arpl
outsb
and
loop
adc
sbb
loopne
pop
xor
pop
jae
rclb
inc
scas
pop
mov
inc
pop
push
jne
out
mov
or
call
inc
dec
or
adc
repz
mov
xchg
mov
adc
mov
dec
sbb
ret
jle
jmp
hlt
aaa
jae
idivb
xchg
out
lea
movsl
shll
je
ud2
inc
jb
pop
mov
fimuls
push
pusha
xchg
hlt
cli
push
dec
sub
andb
mov
std
or
sbbl
scas
jecxz
scas
fwait
jecxz
mov
xor
les
leave
adc
outsl
sbb
dec
push
mov
pushf
lcall
rolb
cmp
ficoml
movsl
in
js
movsb
or
pop
scas
movsb
lret
into
in
or
mov
pop
push
outsl
xchg
popa
add
clc
push
clc
aaa
sbb
sbb
inc
xchg
jns
es
ret
xchg
pop
jp
in
mov
pop
outsb
mov
push
scas
jnp
vpsubsb
mov
sub
jne
mov
in
cld
jecxz
cmpsl
mov
outsl
mov
mov
test
stos
leave
mov
call
mov
pop
jmp
xchg
rol
xchg
mov
jp
cmp
push
fstl
push
cmp
push
pop
out
adc
cmove
sti
dec
dec
in
sub
xor
jae
jmp
lods
add
sbb
add
add
push
xchg
ljmp
sbb
arpl
xchg
daa
push
aaa
jnp
sub
les
cmp
push
aad
push
lods
cmc
xchg
or
divl
scas
js
pop
sbb
mov
pop
les
rcl
push
xor
sarb
sub
xor
pop
add
test
add
adc
in
aad
mov
push
fnstcw
shlb
sarb
inc
jg
cmp
push
test
fcmovu
mov
dec
movsl
cmp
xchg
cmpsl
and
mov
ja
sub
test
je
stos
and
cmp
and
mov
mov
adc
mov
jne
ror
in
jl
push
lahf
lret
push
pop
dec
xlat
cltd
and
test
xchg
scas
arpl
jnp
xor
bound
dec
push
dec
pop
and
pop
push
fs
cmp
mov
mov
cmc
lods
sbb
movsb
cmc
outsl
xlat
dec
call
scas
fisttpll
sbb
dec
jmp
xchg
push
push
leave
mov
sub
aaa
mov
les
add
out
or
in
int3
out
and
sti
add
dec
pop
lea
testl
mov
clc
lods
jl
push
fists
xor
aam
rorb
ret
pop
into
pop
pushf
stos
ja
rcl
sub
sbb
mov
jp
popa
int3
adc
pop
xor
cmp
and
in
jne
rolb
lods
cli
push
scas
pusha
loopne
xlat
out
pop
push
aas
ret
aam
xor
into
mulb
mov
mov
fstps
jp
xor
test
cmp
push
pop
jns
push
out
dec
sbb
sbb
and
pop
mov
xchg
mov
data16
pop
nop
loopne
outsb
rol
nop
aam
insb
hlt
push
jle
sbb
add
dec
cmp
mov
push
pop
and
mov
add
cmp
jmp
mov
mov
in
arpl
fadds
cmpsb
cli
fnsave
or
pusha
dec
cmp
cmpsb
sub
xchg
paddd
arpl
mov
shrb
mov
out
in
lea
lods
popf
fs
test
in
inc
int3
inc
xchg
orb
inc
bound
cmp
in
lea
sub
cli
jmp
mov
add
mov
jb
push
jne
mov
les
or
or
inc
push
popa
fildl
sbb
push
mov
sbb
xor
dec
test
clc
into
mov
ds
lods
icebp
stos
leave
divl
stos
adc
cmp
xor
push
repz
push
nop
adc
imul
add
call
pop
rcll
push
dec
push
lds
cmp
and
sub
mov
fcomps
push
in
adc
fistpll
sub
and
xor
pop
cltd
inc
pop
in
pushf
adc
mov
or
add
shl
pop
cld
ret
popf
lea
cmpsb
jmp
and
gs
sbbl
pusha
nop
mov
shl
imul
pop
lcall
mov
je
outsl
test
dec
fistps
dec
inc
mov
test
jnp
mov
test
leave
adc
lret
or
shrb
fwait
mov
mov
mov
or
mov
jae
aam
sti
xor
repz
mov
pop
sub
fdivr
xchg
push
inc
xchg
sbb
out
mov
pop
push
add
adc
mov
xor
cmp
aaa
cld
cli
lods
fistpll
dec
repnz
icebp
fidivs
push
imul
xor
xchg
adc
dec
pusha
cmp
sub
test
jne
ja
fs
repz
shr
into
sbb
mov
xchg
xor
mov
les
mov
xchg
out
ret
push
cmp
shl
or
inc
jae
cmp
cmp
mov
and
iret
mov
jae
cmc
ljmp
xchg
int
or
ja
xor
mov
xchg
add
cltd
mov
loop
mov
xchg
add
sub
xchg
adc
mov
pop
and
sub
push
xchg
pop
lahf
cmp
jnp
shll
jge
add
cld
mov
into
lret
mov
mov
ljmp
daa
popf
sub
push
push
cli
out
push
dec
push
cltd
add
and
ret
sbb
in
sahf
adc
push
movsb
adc
lret
xor
xchg
scas
cmp
addl
cld
mov
pushf
or
loopne
mov
imul
cmpsl
sub
mov
nop
lock
add
addb
aaa
pcmpeqb
jmp
or
xchg
scas
mov
xchg
xor
xor
mov
out
cli
out
adc
mov
pusha
mov
fwait
dec
mov
sbb
aas
or
mov
dec
fwait
xchg
fistps
shll
and
sub
imul
imulb
sub
data16
and
mov
push
daa
mov
sub
xorl
add
ret
dec
leave
imul
and
cmp
xor
sbb
sub
push
dec
into
int3
mov
fists
mov
jge
xor
or
or
shll
cli
movsb
push
mov
adc
int
or
jns
jl
sti
aaa
dec
jns
and
cmpsl
ss
cli
cld
mov
stos
sub
dec
sub
mov
adc
sub
outsb
pop
pop
clc
nop
enter
xchg
fcmovnbe
xor
data16
test
stos
mov
ss
movsb
jp
rol
int3
xor
add
pop
inc
dec
xor
cmp
xchg
mov
jle
dec
mov
je
jnp
push
hlt
test
ret
xor
fs
in
pusha
mov
adc
adc
xchg
jb
push
test
lods
or
cld
js
dec
addr16
dec
mov
subb
fs
xchg
pop
repz
ljmp
hlt
fidivrl
mov
xor
push
inc
inc
popa
out
pop
stc
cli
push
jnp
mov
pusha
cmp
adc
js
add
lock
int
xor
mov
vpmacsdd
or
dec
mov
jge
iret
mov
push
and
mov
inc
mov
in
sbb
in
lods
sub
das
inc
jne
fcmovnu
xchg
test
xchg
or
mov
ffree
lock
fimull
imul
dec
fidivrl
sub
mov
ret
mov
arpl
ds
mov
lods
jle
aas
test
or
mov
mov
fwait
mov
or
sti
into
in
dec
or
cmpsb
add
popa
shlb
push
jb
dec
ljmp
pop
or
cmp
adc
test
repz
pop
mov
in
sbbl
loope
inc
jmp
sti
xchg
xchg
pop
rcr
test
sub
sub
adc
or
fcmovnb
subb
push
jns
subb
movsl
hlt
xchg
std
sbb
sahf
pusha
addr16
or
push
fildll
mov
shlb
xchg
test
imul
rcrb
mov
rolb
inc
cld
push
sar
ja
subb
xlat
xchg
jp
mov
in
sub
jg
pushl
dec
or
sahf
xchg
pop
outsl
push
shll
mov
or
cmp
or
inc
or
add
shll
mov
gs
lret
fcmovnb
push
andnps
cmp
jnp
lcall
mov
xchg
inc
loope
ljmp
repz
xor
xchg
mov
imul
fmuls
adc
je
xchg
pop
inc
shrl
ja
sbb
cltd
aaa
fcomp
mov
std
lret
jbe
sub
dec
insb
clc
add
insl
in
cmp
sub
test
or
cmp
inc
negb
insb
aas
mov
add
jo
repnz
outsl
enterw
mov
stc
mov
push
outsl
sbb
mov
cmc
adc
rclb
pop
mov
or
or
pop
mov
mov
cmpsb
cmpsb
adc
push
mov
loop
mov
xchg
stos
aas
loop
out
mov
cmp
adc
sarl
pop
sbb
jno
mov
sbb
addb
incb
cmpsl
dec
stos
rcr
mov
pop
ficompl
gs
inc
jmp
add
imul
pop
enter
mov
mov
aaa
push
xchg
mov
xorl
jmp
aad
sbb
add
xchg
dec
jns
stc
add
dec
pop
mov
out
jmp
lahf
cld
cmp
shl
in
ret
mov
leave
mov
or
push
sub
push
scas
out
clc
cmp
mov
and
fistps
inc
in
cltd
sahf
push
push
push
icebp
push
jl
inc
lcall
sub
mov
mov
imul
out
jmp
mov
xor
xchg
js
sbb
inc
xor
mov
mov
repnz
cpuid
imul
lock
movsl
cmp
mov
rcrl
push
ss
je
into
xor
pop
push
cmp
add
xchg
mov
sub
xor
pop
pop
lods
mov
xlat
sbb
and
adc
or
mov
gs
cld
jbe
add
int
sahf
lcall
out
sbb
xor
fstl
lods
lcall
js
pop
jnp
jecxz
out
cmp
mov
outsl
iret
loop
add
clts
jbe
push
mov
mov
dec
xor
pop
and
sub
lds
mov
mov
lret
mov
mov
sbb
negb
insb
mov
or
inc
in
push
xor
pop
and
inc
lds
mov
sub
mov
push
pop
xchg
xor
stos
movsb
iret
aad
orl
push
jecxz
insl
aaa
ljmp
hlt
fsts
stos
roll
jecxz
ficomps
fcmovnu
aam
jo
nop
enter
das
mov
test
jnp
pop
xchg
sbb
pop
lods
cli
sbb
xchg
cmp
xor
int3
mov
jg
sahf
test
mov
clc
or
mov
sarb
mov
js
fildl
jo
xor
pop
mov
cmp
pop
aas
jnp
scas
test
xor
adc
lods
clc
push
cmp
aad
pop
and
mov
lahf
divb
push
das
sbb
mov
mov
loop
mov
dec
adc
push
mov
inc
lcall
sahf
sbb
pop
inc
adc
fwait
jmp
jns
and
insb
sahf
dec
xchg
mov
xchg
xchg
adc
and
js
or
push
test
lods
xchg
out
or
dec
sub
or
jne
mov
and
notl
mov
mov
std
push
lret
pop
out
adcl
pop
insb
and
dec
push
stos
lock
pop
xor
dec
inc
loop
addb
test
pop
aaa
fbld
push
pop
cmpsb
pusha
push
mov
and
pop
cmp
xor
inc
push
cmp
test
xor
push
inc
adc
or
shr
xchg
hlt
inc
stos
lods
pop
jae
ret
xor
in
or
jecxz
addr16
fsts
pop
xor
imul
fs
pop
and
into
outsb
jl
addr16
insl
mov
inc
pop
push
neg
addb
test
and
mov
lods
cmpsl
jp
lds
std
in
cmp
aas
pop
mov
mov
adc
loop
imul
faddl
imul
push
cs
les
ds
pop
mov
sub
fwait
mov
xchg
push
enter
xor
mov
ret
jp
push
add
or
test
sub
pusha
cmp
lcall
xchg
cmpsb
xor
add
lret
lods
pop
dec
mov
cmpl
ret
inc
push
adc
jo
xchg
out
mov
cmp
icebp
add
sti
cli
fadd
in
xchg
mov
pop
xchg
pushf
divl
xchg
les
push
mov
xor
pop
inc
push
outsb
gs
mov
xchg
jmp
cli
dec
pop
pop
scas
pop
sub
jno
sbb
lret
xor
inc
sub
cmp
mov
inc
mov
and
pop
fsubl
mov
add
adc
push
push
jbe
in
jne
movsb
cs
call
xlat
mov
xchg
in
sub
sub
push
lret
in
nop
ds
sub
jno
mov
push
xor
push
xchg
gs
call
xor
fwait
in
and
mov
pop
and
dec
movsb
mov
sti
test
gs
in
pop
cld
xor
std
add
rcrb
lcall
dec
xchg
out
mov
cmp
xchg
push
in
in
outsb
push
xchg
nop
jae
inc
pop
push
inc
push
mov
shll
ficoms
enter
movb
and
jo
mov
arpl
inc
lcall
ja
icebp
iret
fisubrs
mov
icebp
xor
dec
lods
mov
vmread
sbb
sbb
mov
jmp
fwait
jae
pop
mov
fwait
pop
fnstcw
cs
fcoml
add
push
imul
out
mov
mov
mov
xchg
fcompl
jns
xchg
cmc
add
pop
enter
jo
aaa
xor
ret
jb
pop
negl
scas
test
inc
aas
mov
dec
shll
mov
outsb
jle
and
mov
sub
pop
fsubs
pop
sbb
rcl
jns
test
adc
dec
hlt
mov
push
sub
inc
push
out
sub
sub
loope
pop
dec
pop
push
icebp
pusha
lods
push
int
xchg
dec
dec
fwait
clc
inc
mov
sbb
mov
cmp
jge
mov
push
push
lock
or
or
in
test
or
fs
je
ficomps
pushl
dec
sub
cli
sub
setbe
dec
cmpsl
cmp
stos
je
jbe
pop
push
in
movsl
inc
int3
fidivs
nop
stos
popf
sub
xchg
mov
xor
gs
sub
lahf
ljmp
mov
and
inc
push
movlps
mov
subl
test
sbb
int3
or
pop
xlat
xchg
pop
xchg
insb
mov
out
mov
inc
or
inc
sub
movhps
rcll
insl
aam
pushf
stc
fst
mov
push
push
aaa
pop
add
test
std
mov
shrl
jb
clc
xchg
push
inc
out
jbe
mov
pushf
cmp
add
jle
ret
push
inc
pop
push
jge
cmp
mov
repnz
dec
bound
sub
and
mov
aas
into
fwait
pushf
jl
jp
cmp
mov
fsubl
fs
sbbb
jmp
add
inc
or
scas
inc
pop
jnp
mov
popf
dec
sub
stos
inc
arpl
scas
mov
in
inc
mov
xor
dec
ja
xor
mov
jno
outsb
mov
lock
lret
xchg
inc
add
incb
lods
jns
adc
dec
sar
fstl
jp
ljmp
data16
push
mov
test
add
hlt
faddl
xlat
and
mov
hlt
and
leave
sub
and
mov
push
xor
and
pop
pop
sbb
jns
lret
loopne
cwtl
xor
incl
sbb
clc
adc
pop
leave
mov
or
or
push
xor
cs
push
inc
or
and
ja
sbb
inc
ja
fdivrl
push
in
cs
outsl
fdivl
ljmp
jle
jge
mov
loope
sbb
popf
inc
lods
and
sbb
dec
add
pusha
add
pop
mov
push
mov
test
mov
inc
adc
pop
dec
pop
popf
dec
and
outsb
inc
xchg
test
int
in
lock
fs
push
addl
xor
pop
mov
add
in
test
in
hlt
jmp
cmp
pop
rclb
jo
sub
push
fcomi
adc
or
ljmp
push
adcl
pushf
shll
add
push
in
cmp
test
leave
mov
mov
lret
loope
ror
outsl
mov
loopnew
xchg
imul
stc
fdivl
shrl
int
lret
mov
sub
inc
jp
je
push
push
pop
clc
js
pushf
leave
loop
sub
inc
pop
jp
lods
lret
push
enter
xchg
lldt
stc
addr16
into
mov
add
mov
ds
adc
adc
push
mov
dec
stc
dec
aas
adcl
out
scas
clc
push
sbb
sbb
sbbl
jg
stc
scas
fs
lock
jbe
mov
repz
xchg
outsl
movsb
mov
inc
clc
shrl
mov
or
dec
and
pmuludq
inc
jmp
arpl
sub
test
stos
in
jb
clc
jg
out
and
stos
xchg
mov
out
fucom
inc
adc
in
push
cmp
addl
cmp
dec
icebp
inc
inc
in
outsb
js
stos
dec
jp
leave
sub
push
sub
out
mov
sarb
cmp
lahf
and
pop
add
cmpsl
sar
scas
lret
out
lahf
stos
outsb
fs
jmp
mov
mov
dec
stc
and
lret
push
cmp
mov
xor
cwtl
xchg
fidivrl
and
ret
sbb
add
or
cmpsb
idivb
push
fdiv
pop
aas
call
mov
inc
repz
pushf
clc
jb
push
gs
pushf
sbb
xchg
pop
out
scas
dec
xchg
add
movsb
dec
outsl
pop
cwtl
adc
adc
add
hlt
xlat
cmp
movsb
pop
in
push
sub
pop
negb
push
ror
subb
mov
testl
rclb
gs
imul
negb
in
loop
shll
hlt
cmp
dec
shrd
or
es
stos
mov
mov
rcll
xchg
sub
and
mov
sub
std
dec
stos
ret
inc
mov
fldt
lds
lcall
push
or
cmc
mov
lods
sub
gs
xlat
pop
test
mov
dec
out
repz
lock
mov
fmul
test
stos
repz
sti
outsl
and
es
cltd
mov
add
mov
arpl
aas
mov
hlt
mov
sarl
mov
rcrb
cmp
pop
push
xor
dec
in
ja
test
int3
dec
imul
loope
incb
cli
push
push
inc
ret
hlt
sub
mov
adc
sub
es
fisttpl
mov
nop
mov
repz
sub
pop
pop
cmpsb
testl
cmp
into
add
loope
pop
clc
pop
cld
adc
mov
insl
xchg
push
adc
add
loop
push
in
add
adc
data16
in
xchg
push
cmp
aaa
sub
out
cmc
pop
adc
pop
push
jmp
dec
daa
sub
sub
jge
and
xchg
pop
ficompl
push
mov
fldcw
jecxz
inc
pop
icebp
or
push
sub
test
enter
cmp
push
lahf
gs
out
jl
lret
jp
xlat
in
dec
mov
mov
mov
rcrl
sbb
xchg
push
ret
rcll
inc
pop
push
mov
cs
leave
out
popa
adc
push
sbb
cmp
addr16
or
icebp
mov
jl
mov
out
arpl
cmpsl
push
int3
mov
xchg
pop
sbb
in
add
aaa
xchg
jle
jnp
pop
fistpll
insb
push
test
test
lret
outsb
addl
push
mov
sub
xchg
or
mov
addr16
sbb
ds
inc
test
push
xchg
sub
mov
push
adc
adc
push
gs
int3
out
lods
in
mov
sub
ja
scas
inc
xor
hlt
fmull
inc
ficomps
outsb
lods
mov
out
push
sub
dec
int3
sahf
mov
hlt
cmc
add
int
scas
ljmp
fwait
js
xor
cmp
pushf
daa
out
push
adc
mov
mov
inc
jge
cld
add
jp
xchg
ss
out
xor
pushf
cmp
test
mov
and
pop
mov
ss
rcl
stc
aas
xchg
mov
dec
repz
mov
push
jge
xorl
xor
push
mov
lock
mov
es
jmp
das
and
push
test
lods
test
sbb
rclb
xor
push
xchg
mov
and
pop
sbb
and
sub
lret
cltd
fcmovnbe
lods
es
xor
dec
hlt
je
addr16
out
add
shlb
xchg
rcrb
push
call
mov
lds
adc
mov
fsubrl
and
xor
pushf
stos
inc
shlb
pop
xorb
sahf
test
pushf
pop
push
jg
add
or
gs
cmpsl
mov
or
pop
or
cld
push
enter
data16
push
fdivs
stos
lret
inc
stc
jns
enter
lods
insl
in
mov
jmp
and
sti
loope
and
inc
inc
mov
std
sub
fnstenv
push
outsl
fs
xchg
mov
sbb
mov
aam
push
mov
out
movaps
mov
mov
test
ret
test
rcrb
lds
mov
testb
jle
and
add
jmp
repnz
mov
movsl
imul
cld
dec
add
cmpsb
nop
scas
enter
fs
push
cmpb
mov
hlt
mov
xchg
ss
in
push
sbbl
js
or
pop
xchg
jmp
dec
and
hlt
push
cmpsb
jg
push
std
cmp
add
icebp
data16
lock
aam
or
jo
notl
mov
lock
arpl
push
arpl
adc
ss
jne
dec
mov
sbb
sub
int3
pop
ret
outsl
push
xlat
jbe
cmc
adc
inc
lret
dec
cmc
pop
push
aad
repz
sub
push
out
icebp
dec
lret
push
outsb
mov
es
lea
icebp
testl
push
mov
std
outsl
pop
sti
mov
jecxz
rcrb
sti
mov
ljmp
dec
into
clc
ljmp
lock
sahf
and
add
mov
cmp
rcrb
lods
lds
in
jecxz
fimull
aad
xchg
pop
sbb
filds
adcl
cld
sbb
mov
cmpsb
inc
fs
jno
ret
xchg
out
aas
xchg
test
fstpl
rolb
dec
cmp
out
fisubl
in
or
sbb
or
jne
pop
roll
mov
add
push
xor
and
or
adc
jmp
cmp
loope,pn
imul
jns
jnp
aaa
movsl
insl
lret
test
daa
shlb
outsl
cwtl
xchg
idivl
cmp
dec
xchg
cmpsb
icebp
loop
xchg
cmp
sub
ss
out
cwtl
sahf
dec
sbb
sbb
lea
pop
jb
repnz
mov
enter
aad
push
mov
fisttpll
popf
sbb
push
lods
icebp
and
sub
jg
pusha
mov
clc
jecxz
or
push
mov
popa
mov
movsb
mov
gs
xchg
dec
fdivp
cmpsl
inc
test
daa
adc
sbb
mov
mov
xchg
xchg
mov
and
lahf
data16
sub
faddl
clc
daa
or
mov
addr16
test
jmp
dec
sahf
lret
xor
iret
inc
dec
loop
shl
repz
and
or
xorl
lods
xorb
push
jno
dec
xchg
addr16
test
adc
and
jae
mov
cs
push
cmp
sub
and
xchg
xorl
sahf
out
ror
pop
sub
lea
lods
mov
mov
cmp
cmp
add
sub
jl
aad
or
or
imull
cmpsb
jb
mov
sbb
push
inc
mov
jbe
lret
cmp
ja
xchg
shrl
mov
fcoms
cmp
loopne
sbb
shlb
das
and
or
test
sbb
lahf
pop
xor
sbb
xor
adc
je
mov
push
cmpsb
cwtl
out
sbb
mov
scas
jae
jnp
jp
xor
cmp
repz
insl
out
or
adcl
ret
push
cmc
dec
mov
aad
jl
adc
pop
andps
adc
mov
xchg
or
gs
inc
push
aad
test
test
pop
jne
mov
cmpsl
out
sbb
jns
push
push
lods
insb
lods
sti
movsl
lea
iret
push
dec
outsb
and
pop
dec
or
jp
or
test
sbb
sbb
inc
lods
push
or
shrl
xor
push
push
stos
popf
dec
stos
jne
ss
push
mov
imul
push
add
ret
lea
pop
inc
cmp
lds
lcall
movsl
popa
lds
xchg
das
xlat
xchg
popa
jns
andb
mov
popa
inc
call
push
cmc
xchg
rcll
in
in
int
mov
jnp
or
clc
fwait
in
add
sub
add
in
mov
shr
dec
push
or
mov
jecxz
jo
cmp
daa
cmpsb
imul
enter
outsl
lcall
repz
leave
pop
ljmp
add
adc
hlt
sub
lods
nop
cmp
mov
sbb
mov
cmp
in
ljmp
and
sbb
mov
lods
xchg
xor
pop
inc
leave
jnp
inc
dec
enter
pusha
push
test
cld
lock
int
lods
ret
cwtl
int3
pop
jge
imul
repz
pop
xor
decl
out
push
fstpt
out
dec
inc
in
dec
shl
cmpsl
push
or
push
jge
lea
dec
stc
mov
lret
mov
adc
lret
mov
jmp
loope
cmc
jge
mov
test
fistl
cmp
lahf
dec
gs
mov
jmp
or
push
add
dec
rclb
rcr
stos
mov
jmp
jne
sahf
cmp
sar
jnp
lret
xchg
lods
dec
movsb
out
sbb
jmp
test
jl
outsb
sub
add
mov
inc
cmpsl
stos
sub
xchg
out
std
mov
sti
mov
pop
mov
pushf
jne
call
iret
and
cmp
fdiv
mov
mov
mov
sbb
mov
insb
mov
dec
adc
push
cmpb
sbb
shlb
inc
add
call
xor
pop
push
adc
scas
pop
std
push
push
cmp
orl
loope
insl
jecxz
inc
push
out
mov
mov
int3
mov
stc
rcll
ltr
push
arpl
ljmp
jle
int3
add
pusha
sahf
push
out
test
dec
in
shlb
xor
inc
scas
mov
jnp
add
mov
pop
ds
stos
cmc
adc
test
pop
repnz
jne
leave
mov
ja
je
inc
inc
mov
xor
cmp
pushf
dec
stos
cmp
test
mov
stos
dec
xor
jne
xor
xchg
inc
and
jp
inc
cmp
ret
inc
sub
add
jmp
movsl
push
fldenv
fs
rolb
mov
mov
pop
mov
aaa
outsb
cli
ret
dec
push
aas
into
rcr
out
mov
stc
dec
pop
push
sbb
inc
xlat
mov
ret
cltd
push
jbe
arpl
test
ret
gs
xchg
push
pop
pushw
push
mov
pop
mov
aam
das
test
popa
cmp
and
xlat
inc
pop
xchg
int3
int
xor
fistpll
jns
in
push
scas
and
in
inc
adc
mov
mov
pop
or
scas
inc
arpl
cmpb
in
imul
leave
xlat
psllw
xor
nop
xchg
xchg
mov
sub
add
sbb
dec
or
iret
lods
or
and
int3
leave
bound
and
dec
std
mov
in
mov
adc
jo
xchg
std
xchg
pop
lods
test
mov
pop
jae
repz
sbb
leave
dec
sub
xor
pop
adc
cs
data16
arpl
or
push
sub
jnp,pn
fwait
adc
pop
inc
sbb
imul
pop
cmpsl
push
push
les
sahf
pop
lods
mov
cmp
lock
jno
repz
cli
mov
outsb
push
sub
mov
gs
jl
pop
loop
std
or
ret
stos
jecxz
pop
sti
cwtl
sub
inc
xchg
pop
mov
vpsllw
jnp
dec
iret
mov
sub
pop
pop
adcb
lea
stos
jno
mull
dec
notb
xor
out
dec
push
inc
notb
mov
movsl
lcall
lods
inc
xor
push
adc
cmpsb
dec
lds
fs
mov
sbb
or
dec
ja
ds
sub
lds
std
iret
xchg
insb
mov
mov
loope
xchg
stc
shr
or
sbb
stos
xor
out
and
or
mov
jbe
outsl
jecxz
into
cmp
xchg
sbb
lret
push
pop
in
fwait
pop
jg
cli
ljmp
cwtl
dec
pop
inc
inc
inc
pusha
sbbl
pop
imul
decl
jle
je
sarb
sbbl
sahf
mov
push
jl
sub
frstor
add
call
and
add
xor
dec
push
arpl
icebp
push
or
pop
or
das
dec
mov
icebp
les
mov
mov
xchg
xchg
in
xchg
push
or
pushf
loopne
rcrl
jnp,pt
jb
and
enter
jl
or
pop
test
rorl
xchg
add
mov
cwtl
out
fs
xchg
js
pop
dec
aad
lea
xorb
in
stc
sub
push
imul
pusha
pop
mov
cltd
mov
mov
pop
mov
xor
and
jecxz
and
mov
sub
mov
ljmp
movsb
push
es
or
add
aam
mov
cmc
aas
cld
xor
fdivl
mov
popf
mov
sub
mov
hlt
cmpl
int3
inc
and
pop
nop
pop
fcoml
mov
xchg
imul
cmpl
dec
mov
pop
in
xchg
sahf
adc
pop
aam
or
dec
loopne
mov
imul
cmp
or
nop
pop
xchg
xor
cmpsl
stos
push
mov
fwait
mov
idivb
mov
stos
xorl
testl
shrl
ss
and
and
cmp
pop
das
addr16
cld
inc
push
cmp
sbb
and
jg
mov
iret
mov
decl
jns
fildl
mov
out
adc
push
adc
or
je
gs
mov
movsl
rorl
shll
aas
mov
add
add
xchg
pushf
lods
or
out
scas
mov
xor
mov
pushf
int3
pop
jg
filds
push
dec
mov
pop
and
clc
movl
xchg
sarb
pop
out
pusha
movsl
inc
cmc
cmp
fstps
lret
jl
insl
in
sub
xchg
sti
pop
fs
sbb
inc
ja
sub
push
cs
cli
xor
mov
shll
xlat
test
arpl
push
stos
incl
enter
rorb
ljmp
xlat
push
pop
inc
cli
mov
cmp
pop
pop
aad
pop
jne
rorb
inc
pop
sahf
and
loope
shll
into
or
ret
out
jo
and
mov
cmpsb
rol
pop
mov
adc
push
push
xor
fstl
fistpll
sub
xor
and
stc
in
sub
push
movsl
push
xor
or
movsb
lods
add
cltd
or
in
imul
shll
outsb
adc
add
dec
mov
daa
fnstcw
rcll
xchg
cmp
rcrb
pop
fdivs
sbb
loop
dec
shll
jns
push
push
in
cmpsl
jmp
dec
mov
rcll
fs
mov
sbb
and
jb
aam
xor
sbb
rolb
movsl
cli
lcall
rcll
cwtl
add
int3
pop
pop
push
movsl
push
sub
or
dec
inc
push
shl
lods
je
jl
dec
or
scas
cmp
aas
lods
dec
stos
mov
icebp
push
inc
xor
xchg
shlb
or
lahf
rcrl
cwtl
aad
popl
scas
jecxz
jp
aaa
sbb
dec
push
jecxz
inc
pop
ret
ja
cmp
cmpsl
mov
ljmp
lock
mov
push
or
mov
push
mov
add
loope
adc
push
shlb
addr16
push
ja
test
mov
jecxz
lods
test
xchg
push
into
push
aam
mov
xchg
inc
lret
jg
adc
jmp
mov
loope
push
lret
stos
and
gs
push
mov
aaa
sbb
mov
mov
adc
pop
out
and
xchg
pop
int
xor
dec
pusha
adc
push
push
ror
push
dec
mov
clc
aas
sub
cmp
subl
xor
mov
pop
jg
fcoms
add
xor
add
cmp
jae
sub
push
dec
jo,pn
bound
dec
iret
call
adc
test
mov
push
sub
loop
in
aad
aaa
inc
cmp
mov
xor
clc
lock
std
jnp
mov
xchg
dec
pop
cs
jb
and
and
pusha
lret
das
sbb
xchg
or
add
je
pop
inc
jne
pop
daa
xor
mov
xor
push
rcr
test
loope
dec
popf
mov
pop
push
loop
lock
push
call
jmp
xchg
mov
ljmp
sbb
xor
test
mov
iret
pop
loop
dec
fldl
push
ret
enter
call
pop
or
cli
nop
inc
sahf
push
inc
test
cmpsb
jecxz
sbb
jp
dec
ds
adc
push
adc
dec
cmp
push
ljmp
jmp
mov
dec
mov
stc
mov
imul
xchg
sbb
mov
pop
lahf
push
xlat
cmp
fildll
mov
jnp
jb
mov
into
jns
push
mov
jmp
loope
inc
add
test
mov
sub
imul
pop
std
xchg
pop
pop
addr16
add
push
les
dec
pop
add
mov
pop
push
cmp
mull
jbe
mov
mov
lahf
imul
sub
push
mov
stos
xchg
mov
xchg
fwait
mull
mov
test
aaa
mov
outsw
int
out
imul
add
cmp
jmp
add
mov
popa
push
cltd
push
push
in
sbb
insb
push
fwait
popf
movsb
nop
xor
lds
cli
sbb
loope
fildl
aam
pop
aaa
sar
aas
sub
sub
mov
xor
sbb
mov
add
xchg
xor
jecxz
iret
aam
lcall
arpl
movsb
sbb
xor
xor
mov
iret
cmpsl
movaps
xchg
es
movsl
xor
dec
pop
push
call
fadds
add
adc
stos
inc
pop
dec
xchg
sbb
or
mov
ficompl
fldcw
lea
shll
xor
push
add
ja
adc
test
es
mov
addr16
pop
into
sub
adc
movsl
cmp
test
shlb
sub
sub
shlb
jo
inc
movsb
cmpl
fldl
mov
mov
fistpll
jmp
jae
rol
rclb
add
out
hlt
mulb
mov
cmp
stos
test
in
int3
test
aad
mov
es
jmp
popf
bound
xor
test
adc
adc
xchg
fstps
mov
and
outsl
and
xor
inc
push
jno
pop
loope
cmp
mov
dec
in
mov
movsb
inc
push
repnz
stos
xchg
cli
xchg
adc
mov
subl
pushf
pop
mov
mov
xchg
cmpsl
pop
into
lret
and
cmpb
sbbb
xchg
fwait
lock
daa
iret
shl
add
and
in
and
ret
xchg
cmp
inc
jb
sub
ds
in
pop
jg
fs
out
call
mov
adc
fldenv
inc
push
cs
mov
xchg
and
or
lock
mov
adc
int3
or
lret
mov
sarb
jmp
sarl
mov
dec
outsb
xor
sbb
bound
mov
subl
cmp
outsb
shlb
js
aad
or
hlt
pop
sub
adc
xor
inc
xor
adc
mov
mov
in
mov
dec
mov
xchg
jno
jo
add
in
sub
outsb
push
inc
gs
push
jb
jg
mov
sahf
repnz
das
js
lret
mov
loopne
xchg
in
test
jg
sub
nop
stos
fadds
lds
dec
and
jb
xchg
cs
sbb
hlt
jg
in
sub
adc
roll
test
xchg
sub
stos
sub
int
cmpl
mov
pop
in
bound
pop
leave
repnz
and
lock
dec
sbb
test
or
mov
arpl
or
ret
lods
jp
je
xchg
fadd
sbb
cmp
subb
sbb
sbb
rcrl
and
sbb
loope
mov
stc
add
fistl
rclb
pop
pop
sbb
scas
jmp
jmp
add
inc
push
mov
or
mov
lds
xchg
lock
lock
add
test
sbb
fcoms
pop
aas
dec
cmpsb
in
stos
mov
push
adc
push
rcrb
out
shrb
jl
jecxz
fwait
out
inc
mov
inc
fwait
in
sti
jecxz
push
xchg
es
loope
xor
inc
ret
inc
mov
icebp
std
ficomps
test
lock
dec
add
xchg
fwait
jnp
mov
adc
or
imul
loope
and
cli
icebp
xlat
mov
enter
std
sub
mov
stos
je
jmp
add
mov
or
pop
add
repz
sub
es
sti
hlt
iret
sbb
sahf
daa
adc
ljmp
sbb
pop
addr16
jno
mov
xchg
sbb
pop
call
mov
rorl
shrd
jb
mov
rcrb
sbb
inc
ljmp
adc
stos
mov
jae
mov
jnp
mov
enter
fsubr
cmp
mov
nop
cmc
loope
mov
out
push
in
pusha
sub
push
adc
xchg
sbb
faddl
push
jae
fstp
dec
mov
std
cld
notl
cmc
or
pop
jmp
dec
arpl
cs
inc
pusha
in
mul
mov
imul
fwait
jecxz
inc
mov
enter
insl
and
sbb
jle
rorl
sahf
test
pop
call
or
jnp
int
in
jmp
cwtl
add
sbb
clc
jns
rorb
jb
push
cmpsb
rcll
mov
jg
dec
call
fwait
xor
sub
pop
mov
lds
sbb
lods
adc
fimull
movsb
imulb
add
fnstsw
stos
mov
dec
clc
leave
scas
scas
mov
in
int3
sahf
fdiv
insl
and
or
cmp
or
xchg
push
adc
mov
mov
lods
movsl
inc
dec
or
mov
cwtl
mov
jmp
data16
pop
sbb
jbe
pop
and
sbbb
test
je
es
iret
daa
daa
inc
stos
lahf
cmp
cmp
or
jo
sub
fdiv
icebp
adc
sub
add
ffreep
push
das
mov
mov
in
and
push
testl
sahf
sub
jl
add
loope
loope
push
pop
ret
cmp
int3
mov
cmp
das
or
cmp
mov
adc
mov
or
inc
pusha
mov
aas
sub
add
test
gs
jns
addr16
call
sub
rcr
insl
add
jne
mov
insb
cmp
aam
adc
mov
inc
pop
mov
mov
cs
sub
xor
sbb
outsl
dec
or
push
add
push
pushf
in
div
push
or
jae
inc
sbbb
inc
mov
mov
mov
push
sub
inc
sti
and
and
pop
shlb
mov
inc
inc
test
dec
add
mov
xor
leave
mov
ljmp
fsubrl
and
fs
xor
jp
jne
stos
daa
pushl
aad
jnp
scas
mov
lcall
stos
or
push
sar
inc
and
inc
pushf
flds
mov
mov
sbb
dec
sbb
std
mov
xor
jecxz
mov
and
addr16
mov
das
mov
and
inc
cmpsl
and
sahf
mov
das
dec
or
adc
sti
inc
lcall
mov
pop
sbb
mov
xor
sbb
sbb
cmp
push
ret
pop
and
adc
xchg
loope
adc
xchg
dec
cmp
les
xor
test
cmp
in
sub
jg
add
mov
les
in
cmp
sbb
dec
cmpsb
aam
and
fisttps
jbe
jp
dec
mov
shll
push
inc
pop
lret
dec
movsb
das
dec
mov
lods
xor
repz
push
divl
inc
jg
add
add
movsl
xchg
outsl
add
push
xchg
add
pop
rclb
sarb
je
daa
pop
test
xorb
lock
cmc
jo
popf
pop
fstpt
xchg
out
es
inc
loope
mov
mull
cmpsb
in
fmul
jae
mov
adc
cltd
lea
xchg
xchg
inc
push
dec
test
xor
or
xchg
pop
in
push
in
stos
xchg
sbb
mov
and
mov
lcall
inc
sub
ret
ds
fwait
test
cwtl
loop
aam
dec
je
inc
dec
lock
sarl
dec
or
cmp
jae
adc
mov
push
pop
ds
pop
push
into
cmpsl
pusha
lret
sub
jp
xchg
push
lcall
addr16
sub
ud2
lret
mov
adc
cmp
xchg
xor
jne
lret
in
adc
pop
mov
lahf
push
pop
filds
mov
cld
dec
sub
jnp
inc
sbb
jns
bound
xchg
les
loop
cs
push
jo
pushl
cmpsl
icebp
loope
js
inc
ss
xchg
lods
sbb
push
mov
lcall
fimull
jne
pop
fldcw
sbb
xchg
pushf
jmp
mov
dec
rorl
loope
fwait
mov
enter
adc
sub
dec
es
jle
push
xchg
iret
movsl
out
ss
mov
jg
sub
daa
inc
push
dec
or
cmp
pop
sub
mov
inc
jb
add
push
inc
fcmovnbe
sub
les
sbb
push
add
jp
scas
stc
mov
push
loop
cmp
push
popf
fisubrl
fidivrs
hlt
push
adc
lahf
jbe
adcb
popf
in
jl
push
push
sbbl
push
movsl
mov
in
cmp
jmp
xchg
push
popa
es
jno
das
loope
xchg
dec
fs
loop
xlat
mov
sub
inc
loopne
les
push
rorb
std
enter
cmpsl
inc
xor
jno
and
out
je
movsl
sbb
jno
dec
cmp
push
cmp
loop
rolb
int3
sub
imul
mov
and
popa
pop
xchg
sbb
xchg
mov
add
push
insb
jmp
in
mov
aad
sar
sbb
fcmove
je
arpl
pusha
shl
mov
icebp
push
imul
js
pop
and
int
movsb
nop
insb
clc
add
and
sbb
in
in
or
cli
add
lcall
scas
dec
xor
dec
ret
cmp
and
incb
jp
xchg
out
pop
push
or
stos
inc
xlat
mov
lahf
cmp
je
push
xchg
outsl
rep
test
and
mov
subb
add
ss
jno
call
cltd
jp
push
fcom
sbb
or
adc
or
mov
adc
sub
cwtl
inc
into
movsl
lock
pop
push
fsts
fmulp
in
and
jae
lea
xchg
or
push
inc
adc
add
xor
mov
fwait
outsl
sahf
xor
push
fisubs
jb
subb
jge
fidivl
insl
pop
cmp
ljmp
sbbb
inc
cli
addr16
stos
popa
jp
mov
cli
lds
daa
jg
add
dec
adc
repnz
out
aas
mov
and
jecxz
das
push
std
mov
iret
leave
cmc
mov
sub
ja
lods
push
ja
daa
fimull
and
mov
in
data16
dec
clc
dec
loop
dec
pop
shll
push
sub
mov
mov
jecxz
jl
stos
mov
int
add
mov
mov
xor
jae
sahf
pop
jg
mov
scas
stc
jnp
incb
dec
push
adc
fs
jge
inc
fs
jecxz
adc
std
jns
in
cltd
dec
pop
lret
rorb
push
sahf
mov
jmp
les
cmp
pop
mov
jno
push
sub
mov
sub
fidivs
ror
leave
pop
xor
jne
fwait
aam
or
or
pop
pop
and
fwait
shll
fimuls
add
xchg
enter
xchg
dec
push
int
fnstcw
or
jne
xor
jg
fcompl
lods
mov
movsl
sbb
int
cmpb
sub
in
or
cli
lcall
mov
add
repnz
sbb
test
scas
pop
or
jle
mov
addr16
mul
adc
lea
cs
out
fisttpl
daa
add
sub
ret
push
jnp
add
cmp
sub
push
iret
outsb
adcl
pushf
insb
aaa
cwtl
popa
mov
stc
in
testl
iret
pop
dec
cmpsb
and
sub
outsl
outsl
sub
cmpsl
andb
in
mov
xchg
inc
subps
sub
inc
ror
jmp
lods
push
or
mov
fs
push
push
add
je
push
sbb
shrl
and
mov
test
fnstenv
sbb
ret
push
mov
inc
inc
hlt
in
push
and
aas
adc
or
in
pop
insl
jnp
mov
sarb
sahf
enter
mov
fs
out
dec
xor
mov
pop
fdivl
xor
mov
push
data16
popa
subl
cmp
sahf
fisubrl
or
xor
loopne
fisubrl
gs
aam
lock
or
dec
and
add
inc
out
fimull
pusha
dec
pop
and
nop
mov
pop
add
pop
icebp
push
popf
test
mov
cmpsl
sarw
hlt
dec
cmp
cmp
hlt
or
xchg
sarb
fistps
movsb
add
xchg
outsl
xor
pop
jns
xor
xchg
fldl
dec
fadd
jmp
mov
add
lds
lcall
stos
push
ja
push
push
stos
sub
xchg
sbb
push
adc
dec
ret
shl
and
inc
or
fstp
dec
lea
mov
daa
inc
std
xchg
inc
mov
repz
jl
int
inc
sbb
dec
lret
sub
inc
in
fstpl
jno
out
add
xor
scas
jb
fs
adc
jle
movsl
cmp
or
cld
popa
push
mov
xchg
xor
mov
sahf
jp
mov
adc
es
jmp
sub
mov
jbe
push
pop
ljmp
add
push
testl
mov
inc
xor
xchg
es
ret
loope
push
mov
int3
into
mov
push
dec
jmp
mulb
test
xchg
fstps
add
xchg
stc
hlt
mov
push
pop
mov
scas
aas
jl
push
and
pop
mov
and
jp
add
pop
mov
out
jge
jns
rclb
jb
jmp
je
jno
sbb
push
add
addl
shll
sbb
pop
sub
xchg
scas
adc
icebp
std
cli
or
add
sbb
jg
jp
and
in
mov
push
cwtl
nop
cld
arpl
out
sub
or
mov
rorb
push
es
and
addr16
mov
testl
call
outsb
psubusb
shrb
ja
add
sbb
inc
sub
push
lret
jo
gs
repz
cmp
fcomp
jmp
mov
push
aad
jns
mov
enter
mov
inc
jns
adc
pop
sar
and
stos
jecxz
or
mov
call
push
xor
inc
dec
daa
xchg
stos
sub
out
sarl
rcrl
xor
cmp
cwtl
push
or
sbb
xor
mov
fadds
addr16
mov
sbb
push
push
inc
sub
xor
test
add
add
xchg
movsb
fwait
enter
dec
jecxz
xlat
pop
aad
add
popa
push
mov
ljmp
sbb
dec
mov
xor
mov
and
inc
or
mov
das
xchg
mov
hlt
out
cmc
aam
xchg
add
mov
jne
mov
es
and
jb
mov
mov
psrad
sbb
movsl
xchg
movsb
leave
adc
push
pop
or
pop
imul
sub
and
aam
mov
push
sbb
pop
cmpl
mov
sar
mul
aam
or
xchg
mov
push
hlt
aad
test
fs
cld
testl
pop
fsubrs
in
inc
mov
push
es
subl
rcrb
xor
push
cli
icebp
push
fwait
pusha
icebp
mov
loop
lods
fs
jb
dec
cmpb
jl
mov
bound
les
icebp
mov
xorl
lock
ss
and
add
jae,pn
mov
std
mov
pop
or
xchg
push
shll
sub
push
aaa
sbb
addr16
sbb
jae
or
nop
inc
ret
addb
pop
xor
fimuls
sbbb
mov
jmp
in
outsb
sbb
adc
mov
adc
int3
jo
jnp
ja
dec
in
cltd
lahf
pop
push
orb
aam
jno
out
cmp
pop
jb
inc
rcrb
sbb
cwtl
jbe
stos
out
cmc
or
pop
inc
adcb
mov
adc
jns
jl
sbb
or
push
xchg
fidivrs
and
mov
mov
fcmovbe
push
cli
adcb
push
lahf
bound
lods
push
jmp
dec
popa
jae
std
jnp
inc
sbb
sbb
movsl
pop
lds
outsb
jg
fidivl
or
and
sub
pop
sub
iret
out
rorb
pop
mov
push
repz
loop
and
push
adcb
cmp
cmp
mov
and
mov
jno
leave
out
jge
in
ja
sbb
lock
loop
pop
push
push
mov
es
loopne
mov
mov
sub
adc
mov
jmp
call
out
insb
xor
pop
popl
and
mov
mov
out
aam
lcall
adc
cs
push
andb
push
cmp
sbb
hlt
xchg
dec
sub
inc
dec
sbb
jl
sub
cmp
adc
int3
call
ja
mov
lret
cmp
test
out
inc
icebp
inc
insl
add
iret
push
adc
push
dec
pop
pop
fisttpl
or
loop
xchg
mov
std
out
push
jns
mov
push
les
xchg
out
outsl
xchg
xchg
push
add
lock
jecxz
jmp
dec
push
jb
add
push
out
xchg
dec
jnp
jns
sub
out
jnp
and
std
sbb
xchg
lds
xor
imul
push
ret
incb
sbb
sub
push
mov
cmp
jne
stos
cmp
rcr
inc
mov
cmpsl
dec
call
ror
mov
xchg
jmp
in
push
pop
repnz
sarl
sub
fcomps
mov
fildll
dec
loope
sub
test
jo
out
adc
mov
subb
jmp
xchg
movsl
adc
scas
cmp
rolb
ja
push
add
add
dec
mov
dec
jle
lock
sbbb
ret
sti
mov
in
pop
add
call
or
addr16
les
inc
sti
cmpl
setae
push
les
xchg
ljmp
inc
and
ret
xor
xchg
shrl
pop
into
cmpsl
loope
sbb
inc
or
daa
nop
cld
bound
mov
lods
mov
push
adc
xor
add
or
inc
mov
bound
sbb
lock
test
dec
popa
xchg
iret
addr16
lods
mov
inc
xchg
sahf
pop
push
in
iret
xor
sahf
adc
ffree
fdivrl
enter
in
jo
dec
mov
das
dec
cwtl
cmp
push
stc
add
stc
push
jne
and
sti
xlat
in
daa
adc
loopne
xlat
jno
dec
mov
cli
pop
data16
adc
sbb
cwtl
insb
xchg
sti
or
cmp
rcll
or
clc
hlt
out
xchg
loopne
imul
sub
cmp
insb
popa
mov
loope
cmpb
cmp
push
sbb
xor
and
push
loopne
das
and
dec
and
movsl
dec
jne
or
addr16
mov
sub
jnp
mov
or
enter
push
lods
lcall
hlt
cld
mov
cmp
cmp
lret
mov
gs
inc
dec
jge
and
iret
dec
sbb
mov
adc
mov
sbb
das
in
lea
sbb
pop
out
or
cli
rorb
xchg
orb
fdivs
pusha
pop
cmp
icebp
xor
push
movsb
adc
inc
dec
les
les
ljmp
xchg
stos
mov
fildl
push
mov
aad
xor
xlat
mov
es
pop
insl
sub
sbb
outsl
push
xchg
inc
add
push
sub
jbe
stc
mov
idivl
mov
jae
fcmovnb
out
loop
mov
xchg
out
test
popf
cmp
dec
int3
movsb
adc
adc
cli
cli
in
rol
jp
lret
orb
stc
mov
adc
jg
sbb
iret
dec
movsb
iret
fs
mov
dec
add
mov
sub
sti
popf
je
jo
clc
call
add
mov
inc
or
mov
xor
cmpsl
test
xor
addr16
stos
inc
cmpsb
xchg
add
dec
adc
jb
or
inc
pusha
push
rcll
cmp
xchg
lret
div
jmp
xchg
vphadddq
inc
mov
ljmp
lcall
cmpsl
adc
loop
sub
fdecstp
xchg
mov
arpl
ss
std
xor
pop
cli
loop
inc
insl
orb
ror
es
push
lds
jmp
test
adc
mov
pusha
sarb
fnsave
adc
sbb
add
mov
dec
jmp
and
lock
push
mov
xchg
loop
mov
pop
cmp
cmp
jb
pop
xchg
pop
mov
add
subl
shrl
fisubl
cmp
jmp
xor
addr16
je
dec
ds
jae
loope
push
rcrb
fpatan
pop
mov
scas
lret
dec
popf
stos
xchg
inc
xor
sbb
push
cltd
jno
ror
xorl
into
stos
sub
sbbl
mov
es
or
xchg
rolb
pop
sub
int3
rorl
cwtl
ds
rorb
inc
dec
mov
cmp
sbb
push
dec
fbld
push
pop
cmpsb
xchg
mov
int
leave
data16
push
in
icebp
in
mov
mov
mov
popf
movsl
jg
jge
mov
xchg
dec
popf
fcoms
icebp
js
pop
fmulp
jp
inc
jns
add
movsl
and
ds
xchg
das
add
xchg
xor
inc
mov
pop
push
pop
shr
iret
pop
dec
mov
lret
push
adc
pushf
fildl
adc
add
inc
clc
lock
lea
cs
and
cs
insb
fbld
fisubl
pop
jmp
loop
or
out
pop
iret
lcall
fcoms
mov
mov
xor
inc
adc
pop
jb
xor
push
sbb
pop
daa
pusha
loope
xchg
sbb
cmp
dec
loope
das
subb
jne
testb
gs
sbb
push
push
pop
repz
add
loope
inc
adc
mov
arpl
aas
ret
movsb
pushf
inc
mov
enter
jno
inc
xchg
pavgw
mov
cmpsl
sbb
aam
iret
jge
addl
cwtl
clc
mov
xchg
ljmp
into
dec
lock
xchg
movsb
jae
add
repnz
rol
pop
fildll
fstl
and
push
xchg
xchg
iret
inc
add
test
xor
dec
lods
mov
cwtl
pop
or
sbb
jbe
jns
push
loope
imul
subl
dec
mov
int3
and
and
jnp
scas
pusha
pop
pushf
andb
and
stos
inc
adc
out
cmc
add
add
std
mov
aaa
pop
mov
jns
enter
push
mov
aas
xchg
and
hlt
enter
mov
mov
testl
adc
mov
adcb
sub
ficoml
xor
mov
mov
mov
ljmp
jl
mov
xor
mov
fldl
repz
mov
push
cmc
in
jmp
or
gs
xchg
pop
and
xor
or
pusha
popf
xchg
xchg
fcoml
mov
mov
pusha
cwtl
cmp
ficompl
jl
add
int3
in
fdivrp
fcmovu
movsl
fmuls
pop
addb
mov
sbbl
xor
sub
mov
sbb
ds
lds
std
xchg
adc
aaa
pushf
sub
inc
cmc
xor
sahf
dec
repnz
xor
dec
jecxz
in
aas
addr16
pop
pop
in
test
and
ljmp
sbb
ss
cmp
lock
cltd
mov
adc
adc
jb
sbb
mov
jae
out
addr16
jo
dec
cld
je
repz
shll
sub
js
cmp
inc
adc
pop
ds
mov
insl
cmc
cmp
mov
adc
fwait
scas
pop
pop
dec
pop
aad
fisttps
scas
adcl
inc
cmc
or
mov
mov
jbe
lods
pop
jg
sub
ljmp
xchg
outsl
jmp
xchg
adc
and
xor
add
cli
ret
pop
sbb
cmp
negl
nop
ret
and
lcall
dec
loop
test
js
sub
repnz
lock
imul
out
pop
sarl
dec
mov
jge
in
into
xacquire
sbb
inc
and
test
push
mov
out
add
and
xchg
nop
pop
lret
stos
cld
jmp
lret
cmp
or
shrb
repz
outsl
aaa
xor
orl
and
xor
mov
xor
dec
and
shl
hlt
loop
jg
or
mov
dec
jg
mov
sbb
mov
mov
pop
fs
xor
or
scas
mov
aaa
and
xlat
push
mov
adc
jecxz
xchg
push
jmp
call
pusha
aam
push
cmpsl
push
test
and
xchg
mov
mov
sbb
ljmp
mov
push
repnz
sbb
into
popa
and
je
fwait
pop
xor
loope
jmp
mov
gs
jbe
add
lret
dec
dec
cmpsb
xchg
nop
sbb
popf
cld
enter
fsubrl
test
xchg
cli
and
add
xor
mov
pop
dec
sbb
fdivs
in
fldl
call
inc
loope
sbb
or
int
loopne
ret
sub
xchg
cmp
aas
xchg
mov
out
xor
pusha
jno
aad
add
or
and
mov
cmp
daa
cmp
push
dec
xorl
data16
jbe
pop
jp
mov
jmp
mov
xor
push
dec
incl
pop
and
dec
call
and
add
cmc
lret
out
mov
negb
push
imul
pop
jp
cmp
dec
imul
push
outsb
push
jecxz
stos
fistl
rorl
mov
les
cmp
movsb
xchg
repz
xchg
scas
push
mov
dec
negb
int3
mov
iret
pop
cmpsl
xor
mov
shll
les
les
loopne
or
xor
mov
xchg
xchg
xchg
push
bound
lret
fdivr
push
add
add
arpl
sbb
iret
andl
test
jmp
sbb
adc
or
inc
pop
and
and
fucomi
xchg
jmp
mov
cmp
dec
sbb
dec
pop
jne
sub
and
xchg
pop
test
into
clc
jmp
iret
inc
insl
and
push
data16
add
std
lcall
xchg
jmp
pusha
js,pn
leave
sbb
mov
daa
cmpsb
jnp
js
in
clc
cmp
cmpsb
fmuls
aaa
mov
das
or
sub
mov
or
xchg
ja
sahf
cmp
cmp
rcr
pop
dec
inc
test
pop
add
push
lahf
jns
ss
lods
or
jb
pop
cwtl
leave
xchg
xchg
inc
dec
dec
jae
push
mov
jne
sbb
mov
inc
sbb
mov
out
mov
ret
jmp
loopne
sbb
setle
add
aas
enter
mov
xchg
mov
out
mov
xlat
sbbb
xor
and
inc
scas
outsl
or
xor
les
fs
ss
outsb
lock
fisttps
xorl
cld
test
fsubrs
mov
jbe
push
jecxz
push
xchg
aam
mov
mov
sub
xor
popf
and
xlat
test
or
dec
xor
cmp
dec
mov
ret
or
pop
inc
int3
adc
jne
test
mov
xorb
xchg
addr16
jmp
or
iret
rclb
jecxz
inc
jae
sbb
mov
shrb
push
fwait
outsl
ljmp
stc
sub
test
xchg
lock
add
add
mov
out
cmovge
and
ret
sub
and
out
jl
and
inc
pop
lret
adc
pop
lods
or
pop
jns
in
ret
pop
pop
fstp
out
push
out
jbe
insl
testb
jp
pop
pop
fidivrl
clc
sub
jg
scas
sub
lret
movsb
insl
and
jns
ficompl
push
mov
insl
lods
mov
in
or
jne
sub
lcall
jmp
dec
cwtl
push
xchg
mov
cmp
ret
and
mov
mov
roll
jmp
ret
or
lock
rcll
mov
jne
adc
jl
jbe
ss
inc
mov
sbb
xchg
cld
repnz
sahf
xor
addr16
xchg
mov
bound
mov
and
sub
mov
pop
push
mov
jne
jge
add
int3
add
ror
push
iret
fisttpll
test
jge
shll
xor
ja
and
rorl
js
push
mov
sbb
cmp
fisubs
add
inc
dec
jns
cmp
rcrb
dec
jp
pop
imul
adc
cwtl
movsb
int3
push
mov
aas
pop
jge
or
cmp
adc
inc
fldenv
repnz
jmp
das
test
push
ret
je
je
inc
clc
lock
sub
pop
adc
mov
mov
push
push
mul
daa
inc
fwait
lahf
out
dec
xchg
pop
push
lods
mov
insl
inc
adc
mov
jge
lcall
xor
aaa
cs
inc
js
cmp
mov
mov
mov
popf
add
in
pop
cmc
loopne
mov
fdivs
les
xor
iret
dec
fiaddl
mov
add
adcb
adc
std
popl
sarl
sbb
fisttps
inc
pop
cmp
push
dec
push
pop
scas
mov
in
xchg
xorb
int
sbb
icebp
loop
int3
or
sahf
inc
push
or
sbb
mov
shll
and
mov
xchg
or
insl
aam
ljmp
or
and
out
adc
add
mov
icebp
xor
scas
fistpll
inc
cld
mov
cmp
cmp
test
sbb
or
sbb
inc
inc
push
dec
stos
lea
sub
push
cmpsl
sub
daa
cmp
jecxz
xchg
or
sub
les
jp
push
subb
dec
xchg
ja
cmp
daa
xchg
inc
ja
daa
iret
or
sbb
mov
pop
or
add
and
pop
mov
jb
push
daa
je
mov
bound
mov
vpcomuw
mov
sbb
sar
in
rorb
mov
xchg
std
arpl
test
cs
out
add
cmp
repnz
push
xorl
adc
cmp
fdivrs
addl
push
jecxz
push
cmp
xlat
es
ds
hlt
pop
bound
pop
mov
and
test
inc
fs
push
lret
xor
xor
push
fwait
push
imul
mov
fnsave
into
push
pop
sub
add
lods
inc
sbb
icebp
push
inc
ljmp
adc
rolb
push
fsubs
push
lret
xchg
jne
aam
inc
es
mov
sbb
xchg
mov
enter
in
jmp
push
mov
inc
pop
data16
push
shll
jns
out
seto
mov
push
add
int3
mov
pop
mov
push
mov
shl
sbb
inc
int
sbb
fcmovnb
je
xor
push
out
mov
cmp
mov
sbb
inc
imul
or
mov
test
rcll
das
cltd
jmp
sarb
loope
jle
lods
fsts
aaa
or
pusha
cltd
add
fistl
jbe
outsl
add
adc
mov
dec
sub
test
daa
dec
loop
jl
lcall
verr
pop
cmpsb
pop
pop
cmpsl
mov
add
or
jns
mov
lods
adc
inc
stos
out
stos
xchg
mov
fists
adc
shrl
inc
mov
and
mov
loopne
ds
mov
cmpb
pop
or
and
and
cmp
into
fst
in
lods
inc
lock
cmpsl
out
shlb
bound
sub
fwait
inc
xor
inc
adc
cmp
mov
push
xor
movsb
push
inc
cmp
insb
pop
aas
push
popa
push
out
rcll
or
cmp
bound
faddl
xchg
pop
arpl
mov
push
sti
dec
pop
addl
xor
jne
int3
test
inc
out
cmp
mov
mov
leave
or
popl
stos
push
inc
xchg
xor
sub
pop
sti
xchg
cmc
cmc
mov
xchg
enter
lock
or
xor
dec
mov
jbe
sbb
pop
popf
sbb
cs
jo
or
hlt
out
std
lret
push
loope
sbb
sub
mov
jle
ljmp
orl
mov
gs
test
sub
sub
and
or
fs
fs
nop
in
xchg
int
in
add
rclb
jae
pop
fwait
rcll
lock
repnz
sbb
outsl
or
lcall
push
outsb
aad
mov
aaa
sub
dec
cmp
jae
xor
shrb
shrd
xor
jmp
pop
xchg
popf
xchg
sub
add
cmpsb
sbb
insb
fcmovb
cmpsb
ss
testb
fistl
test
mov
add
mov
cli
incb
sbb
cmp
mov
pop
push
jp
pop
imul
lcall
sti
mov
arpl
sub
in
mov
and
xchg
cs
pop
mov
mov
fwait
jno
mov
movsb
push
stos
fists
clc
pop
repnz
xchg
and
popf
repnz
cmp
ss
dec
ffree
dec
test
dec
mov
cltd
std
sbb
mov
stos
jmp
mov
jno
sbb
mov
jo
daa
stos
repnz
xlat
mov
mov
fidivs
cmp
mov
out
xor
xchg
mull
outsl
loopne
cs
push
mov
mov
data16
inc
pop
leave
ds
xor
dec
out
test
adc
mov
jno
mov
rolb
shrb
fs
insl
icebp
popf
xor
sub
and
sbb
enter
and
and
insb
testl
xchg
mov
shlb
shlb
imul
pop
clc
mov
in
enter
insl
xor
or
mov
mov
cs
into
cmpsb
pop
mov
lcall
sub
push
lock
loope
jmp
lock
popa
and
frstpm(287
jl
aam
dec
sub
addr16
into
stos
imul
push
jbe
aam
flds
adc
out
cmp
rcrb
je
jne
add
aas
cwtl
mov
faddl
test
fimuls
sbb
subb
popf
xor
jo
mov
mov
pop
loopne
jg
in
andb
mov
notb
xor
idivb
inc
adc
push
andl
inc
insb
mov
lcall
push
shlb
rcl
loope
dec
lret
cwtl
pop
dec
in
pop
push
bnd
sub
jmp
sub
add
pop
cmp
push
mov
ret
jge
and
pextrw
mov
mov
dec
mov
pop
and
adc
leave
cld
jmp
xchg
outsb
ja
or
outsb
bound
fwait
mov
mov
lock
add
pop
mov
rcrb
adc
inc
cli
lcall
lea
push
jle
pop
shlb
fwait
pop
mov
into
pushf
pop
pop
cmpsl
pop
push
mov
leave
in
iret
jge
jl
pusha
xchg
sbbl
dec
into
insb
test
push
out
das
adc
pop
cmp
mov
mov
into
or
and
dec
test
pusha
mov
test
push
cmp
loopne
cmpsl
dec
xor
lds
lods
pop
inc
fcomip
call
lret
inc
out
pop
add
xchg
and
push
std
mov
mov
pop
mov
mov
pusha
loopne
in
add
cmp
sub
xchg
and
enter
cmp
pusha
rcrb
nop
lret
xchg
xor
xor
jb
hlt
and
hlt
mov
lret
mov
xor
sbbl
pop
mov
pop
add
mov
sub
clc
stc
sbb
lods
xchg
dec
mov
inc
xor
xor
nop
jp
roll
scas
movsb
pop
mov
pop
stc
push
mov
std
pop
sub
add
mov
sbb
popa
or
inc
jmp
ja
ret
mov
xchg
cmp
loopne
jle
int3
std
jns
lods
fs
les
xchg
pop
dec
ret
push
sub
or
cmp
jle
roll
icebp
jle
popa
adc
js
jo
inc
js
aad
push
cmp
bound
or
std
cli
nop
and
int
xor
xor
cs
adc
shrl
pop
lret
cmpsb
pop
push
adc
ror
sbb
push
mov
dec
and
sub
inc
push
pusha
push
mov
dec
sahf
cmp
adc
jg
das
xchg
sub
icebp
mov
pop
js
out
daa
inc
movsl
aam
es
pop
and
leave
ja
stos
mov
fwait
lods
inc
mov
xor
repz
sub
ret
push
xchg
aas
mov
int3
popa
mov
mov
jae
fwait
inc
aas
lcall
into
xchg
dec
cmp
pop
jne
ss
cpuid
les
out
mov
cmp
adc
xor
jmp
cs
je
sarb
dec
imul
fwait
cmp
and
inc
sub
js
mov
addl
mov
dec
xchg
push
je
jge
cmp
mov
adc
lock
mov
mov
push
push
push
inc
and
pop
in
mov
pushf
popa
stos
jmp
cltd
xchg
xchg
pop
mov
jmp
inc
gs
and
dec
lods
mov
mov
pop
pop
xchg
movb
movsb
outsb
adc
xchg
cs
mov
je
cs
cmp
push
fcomi
cmpsb
imul
sti
push
popa
call
dec
dec
mov
js
push
testb
movsb
jnp
mov
enter
inc
push
shrl
ror
scas
insb
stc
xlat
aad
pop
sbbl
and
mov
sbb
mov
in
enter
or
xor
or
lods
test
idivl
pop
movsb
shll
shlb
jg
in
pop
pop
cld
cmpsl
jg
pop
cld
sub
out
push
stos
dec
dec
cwtl
add
rolb
ffreep
clc
aad
xchg
pop
stos
add
dec
cs
ljmp
jmp
mov
lods
bnd
push
pop
pop
in
jnp
jle
pminsw
push
pushf
fldcw
int
pop
fists
jecxz
popa
sub
out
insl
cmp
test
or
jb
push
fimull
sub
sub
mov
lods
hlt
mov
es
mov
pushf
pop
arpl
add
push
jmp
or
mov
insl
iret
loop
pop
cwtl
and
jmp
imul
xchg
cltd
push
sub
gs
add
fdivrs
jno
mov
jmp
iret
data16
or
lock
js
mov
mov
movl
fs
ss
jg
loop
inc
jne
loopne
push
add
in
jo
aas
pop
mov
mov
mov
outsl
stc
pusha
add
je
jmp
lods
dec
cmp
mov
sbb
xchg
fildll
xor
hlt
sbb
mov
repnz
fistps
inc
jae
jo
imul
ja
gs
lock
xchg
repz
pop
aas
mov
xlat
lea
mov
mov
outsl
sub
jbe
adc
daa
push
add
fldenv
sbb
dec
loopne
pop
es
daa
call
adc
shll
push
mov
and
jmp
jns
hlt
testl
xchg
push
sbb
enter
mov
inc
mov
and
add
cmp
jg
mov
cltd
mov
mov
adc
mov
sti
inc
jnp
mov
cltd
add
les
lods
push
mov
imul
mov
scas
movsl
cmp
test
cmp
aaa
inc
fisttpl
push
repz
add
fistpl
outsb
jae
xlat
lds
push
js
xchg
stos
sahf
xchg
sar
inc
xchg
inc
loopne
stc
scas
push
adc
mov
decb
loop
and
jns
adc
movsl
sub
gs
cmp
cltd
mov
lds
insb
sub
ds
push
push
cmp
lret
mov
je
gs
adcb
stos
mov
push
mov
cltd
and
cmp
pop
adc
pop
lea
jge
loop
or
fidivs
fadd
lcall
mov
add
mov
addr16
mov
jle
add
lahf
jnp
enter
push
dec
mov
adc
pop
out
cmp
xor
jns
dec
xorl
pop
loope
push
ja
data16
sti
mov
jge
mov
cmp
aam
repnz
push
inc
add
mov
dec
jp
sub
push
test
dec
mov
cmpsb
and
push
popa
pop
nop
outsl
je
outsb
sub
out
aaa
mov
pop
aas
inc
aam
enter
push
pop
jmp
inc
movsb
xchg
fimull
sbbb
sti
cltd
call
stc
loop
andb
fiadds
lret
adc
pop
insl
xchg
outsl
or
push
lret
les
daa
xor
neg
lcall
scas
xlat
push
fcmovne
sbb
inc
lock
sbb
dec
push
fidivs
dec
shrl
out
push
mov
pop
fwait
loopne
dec
aam
inc
or
mov
and
aaa
jns
sbb
std
adc
stc
pop
std
out
rcll
sti
adcb
leave
leave
into
xchg
jp
adc
add
mov
out
fmuls
push
ret
popf
insb
dec
jl
sbb
xor
mov
lds
sahf
mov
mov
sub
scas
loope
jno
lret
inc
sbbb
pop
fiadds
aaa
sarb
push
xor
xchg
mov
stos
mov
lods
sub
sbb
fimull
or
cmpsb
lds
jecxz
test
push
cmp
lock
mov
lods
loopne
enter
movsl
pop
cli
jmp
cmpl
push
xchg
aaa
adc
call
nop
inc
adc
dec
push
es
out
hlt
mov
into
nop
mov
std
out
outsb
iret
sarb
shrb
movsl
adc
cwtl
push
loop
imul
mov
popa
enter
pop
inc
test
inc
bound
repz
in
outsl
jg
dec
lret
sub
sbb
inc
js
imul
clc
mov
mov
push
lea
adcb
add
cmc
insb
xchg
push
sbb
aam
fucomi
and
movzwl
xor
xor
movsl
repz
loopne
jb
sbb
in
mov
add
loope
xchg
sbb
aaa
jle
xchg
push
push
out
cltd
sub
in
sub
or
mov
mov
sti
add
lahf
push
hlt
add
in
push
sub
jnp
sahf
dec
int3
push
jbe
pop
inc
aas
xchg
pop
enter
imul
xchg
push
xor
js
dec
inc
jne
in
dec
lea
xor
lock
mov
mov
add
mov
xchg
jmp
sti
xchg
dec
push
cmpsl
mov
lret
out
in
inc
insl
add
call
popa
xor
or
add
test
leave
pop
fwait
or
dec
jo
jns
stos
in
in
outsb
xor
lret
pop
cmp
pop
mov
repz
cwtl
pop
out
mov
jne
mov
lea
jle
filds
or
in
mov
push
inc
rorb
adc
push
lret
xor
push
loopne
sahf
sbb
andb
cmp
callw
adc
in
xor
inc
mov
and
sbb
stc
lret
jbe
pop
xchg
repz
lods
je
insl
sbb
cli
scas
stos
bound
push
pop
int
xchg
jns
ljmp
xlat
pushf
scas
scas
inc
in
jae
popa
dec
mov
xchg
add
lods
gs
decl
dec
mov
icebp
stc
loopne
shlb
adc
lahf
popf
jmp
out
push
push
cmp
lds
or
dec
rorb
or
mov
fdiv
pop
repnz
les
popa
adc
call
jecxz
push
lahf
call
cld
jge
add
gs
jne,pn
popa
add
jl
xchg
cmpsb
dec
inc
add
add
repz
sarb
repnz
sbb
mov
sub
or
push
sub
roll
pop
lds
add
jl
and
pusha
pop
cltd
out
dec
or
mov
mov
jecxz
xlat
lea
add
sarb
sub
int3
mov
and
and
mov
repnz
add
data16
inc
fcoms
fwait
imul
sbb
outsl
popf
xchg
sti
fisubl
or
mov
pusha
dec
movsb
insl
out
push
xlat
or
jg
dec
xchg
in
ret
jo
xor
addr16
in
sub
jmp
pop
cmpsl
cli
iret
lcall
add
stc
push
lret
inc
aam
mov
adc
fcomip
jo
sbb
jb
out
add
daa
je
pop
scas
cmpsl
mov
push
mov
mov
jae
jmp
sbb
and
dec
xchg
ret
fistl
clc
inc
dec
pop
mov
lret
ja
push
je
mov
pop
and
jmp
ret
or
enter
pop
mov
mov
push
push
shlw
mov
scas
dec
xchg
and
mov
or
cltd
pop
jecxz
popa
jg
ret
push
movsl
shlb
seto
or
pop
out
dec
aam
std
movsb
pop
cmp
cltd
push
cld
int3
into
std
push
ret
hlt
hlt
out
lahf
mov
jno
jns
add
add
lret
outsb
bnd
dec
enter
fidivs
dec
xchg
add
pop
xor
cltd
sahf
mov
sub
in
add
notl
xchg
jae
mov
fsubrs
inc
into
mov
cli
inc
bnd
fmuls
pop
sub
xchg
outsl
stc
cmp
call
arpl
roll
ljmp
cmp
inc
or
ss
mov
push
std
clc
lea
lds
stos
and
loope
pop
sti
in
pushf
xor
outsl
stc
andb
sub
aad
and
mov
or
lock
pop
sub
out
xlat
pop
cli
ljmp
sub
jmp
inc
xchg
cmp
mov
fdivp
inc
roll
xor
in
test
mov
adc
movsb
pop
cmc
ret
and
sbbl
or
push
xor
repnz
popa
mov
push
sub
pop
push
inc
dec
inc
cmp
mov
pop
js
ficoml
lcall
js
popf
pop
mov
test
in
scas
push
sub
arpl
xlat
arpl
sbb
pop
sub
pop
fwait
sti
lods
fadd
pop
scas
lock
jp
test
mov
pop
daa
inc
in
or
mov
leave
ljmp
push
mov
in
pop
psubw
ficoml
pop
lret
fs
jg
xchg
lock
out
gs
lahf
pop
sub
fcompl
add
popa
pop
in
inc
sbb
stos
nop
jne
xlat
mull
dec
mov
bound
mov
mov
push
jne
cwtl
nop
out
inc
das
sub
push
mov
nop
mov
lret
sub
xchg
inc
movsb
mov
push
mov
mov
pop
ficoms
out
test
adc
jno
mov
std
pop
mov
test
add
test
pop
in
inc
dec
imul
sbb
out
ljmp
xor
mov
andb
sbb
movsl
and
je
add
jae
inc
xchg
sbb
ficompl
es
sbb
outsl
out
repnz
mov
repnz
repnz
ret
lahf
adc
jmp
cmp
in
stc
pop
aam
jns
icebp
jae
in
sub
sti
shlb
sahf
mov
fwait
mov
dec
xlat
mov
imul
fsubrl
fdivrl
les
jbe
js
ss
xchg
sub
xor
adc
xor
fildll
or
movl
xchg
pop
test
cltd
push
or
push
add
or
hlt
sub
mov
loop
push
inc
mov
mov
mov
int3
cmc
cmc
jmp
movsl
in
fsubrl
push
ljmp
pop
push
jle
adcb
push
ja
mov
sub
clc
xchg
mov
inc
mov
pop
mov
imul
out
pop
test
cld
iret
push
loop
lret
hlt
xchg
lahf
adc
je
xchg
jae
xor
in
add
les
ss
stc
or
rcll
scas
test
iret
lret
xchg
pop
sahf
in
xor
xor
repnz
into
ret
jb
mov
shll
shlb
mov
dec
xor
jno,pt
or
adc
decb
add
jbe
icebp
mov
xor
adc
sub
xor
loop
sub
cmpsb
sbb
popf
lds
ljmp
jecxz
enter
scas
cld
add
cld
jp
out
or
jne
xchg
jnp
stc
inc
stos
test
mov
mov
lods
or
pop
cmc
inc
in
shr
jbe
ret
subw
popf
dec
pop
fwait
pusha
xor
xor
shll
xor
lcall
nop
neg
imul
adc
sahf
sahf
test
adc
pop
popa
mov
in
arpl
and
test
scas
mov
pop
aad
mov
dec
dec
xor
enter
mov
adc
push
movsl
ret
pop
jnp
sti
or
and
push
outsl
push
push
mov
cmpsb
adc
addl
push
int
icebp
xor
pop
mov
lods
fadds
pop
fsub
in
xchg
cmp
ds
aad
mov
xor
sub
pop
sub
add
sti
in
xorb
dec
inc
jle
out
and
xchg
loopne
mov
push
inc
mov
dec
orb
sub
xlat
out
jecxz
mov
pop
dec
dec
jmp
xor
xor
lock
or
sbb
push
lret
icebp
fmul
lcall
mov
pop
and
sahf
inc
push
orb
nop
filds
lock
out
pop
cs
iret
out
inc
inc
add
push
pop
pusha
jno
sub
jecxz
out
pop
out
loop
push
out
pop
push
std
add
fdivrl
and
dec
lds
mov
inc
movsl
enter
jg
mov
xor
dec
loopne
cs
aad
dec
pop
rcrl
pop
inc
pop
push
xor
in
aam
jp
ret
dec
mov
mov
xchg
ljmp
push
inc
push
orl
ljmp
jg
mov
dec
inc
aas
sbb
in
cmp
fisubrl
rcrl
stos
jne
aas
inc
mov
cltd
pop
in
or
and
idiv
nop
cld
dec
xchg
out
aaa
cld
mov
adc
xchg
and
jmp
sbb
mov
adc
mov
fildll
push
ja
rol
add
out
pop
pop
or
pop
fisttpll
fwait
outsl
nop
enter
pop
ret
inc
test
in
jge
mov
mov
aaa
gs
add
out
dec
cs
push
aad
std
pop
jle
pop
aam
pushf
xchg
iret
xor
rclb
in
jle
inc
add
dec
cmp
push
jge
pop
in
or
leave
test
mov
mov
xor
test
mov
lahf
inc
inc
into
cmpsl
dec
xor
mov
push
push
xor
jmp
int3
jge
fwait
gs
inc
jmp
cmp
fmul
jmp
call
sahf
add
out
rol
or
sub
mov
mov
jle
inc
inc
roll
or
out
out
mov
rclb
mov
test
pop
cltd
mov
sbb
movsl
cmpsb
lds
mov
sub
sub
cwtl
dec
outsb
ss
sub
xchg
mov
fwait
out
push
ss
pushl
dec
dec
lds
push
inc
adc
cmp
outsl
imul
mov
add
push
push
sti
mov
and
sub
mov
mov
mov
pop
pop
cmp
or
adcl
or
stc
aaa
fistl
cmp
mov
test
movsl
shll
mov
and
pop
sti
jp
sbb
in
mov
add
ffree
mov
test
adc
js
pop
mov
mov
push
adc
push
mov
ret
aad
loope
xchg
pop
push
mov
scas
dec
fbstp
xchg
lea
aas
cmp
out
inc
popa
icebp
test
add
push
fdivrl
sub
lcall
in
mov
add
pushf
sub
fs
or
pop
sub
cmp
mov
cmp
xlat
add
mov
xchg
std
sub
fistpll
push
adc
in
pop
out
lea
test
adcl
pop
and
xchg
fs
pop
sub
insl
and
jmp
inc
mov
cmp
sbb
xor
jecxz
cmp
inc
stos
adc
pop
inc
jb
fmuls
outsb
and
jo
sub
out
ja
jmp
push
add
sub
stos
sbb
scas
cmpb
dec
pop
ficomps
pop
pop
push
fisubrs
sar
outsl
stos
push
lods
and
mov
pop
mov
inc
mov
mov
in
sbb
test
dec
and
lds
stos
xchg
jmp
cmpsl
cmpsb
mov
mov
fisubrl
into
jne
xor
and
push
in
stc
add
sub
repnz
sbb
inc
mov
in
imulb
push
dec
cmp
pop
mov
dec
cs
sti
xchg
nop
pushf
mov
push
xchg
ficoml
js
lds
jge
mov
repnz
pusha
sbb
sbb
aam
and
mov
cmc
sub
mov
and
pushl
mov
xor
adc
ret
pushf
mov
sbb
xor
mov
cmpsb
xchg
mov
lods
fwait
cmp
dec
xor
imul
stos
mov
mov
stos
jbe
nop
ret
div
jnp
das
inc
lds
outsb
pop
clc
and
movb
sub
out
xchg
push
mov
cmpsb
fisttpl
jecxz
xor
jecxz
add
or
push
int
lret
addr16
mov
mov
hlt
fbld
lods
mov
inc
and
hlt
dec
or
in
and
adc
xorl
pop
dec
xchg
stos
in
inc
out
adc
push
dec
sti
mov
mov
aas
pop
jb
aas
inc
mov
pop
dec
lods
clc
aas
fsubr
js
jle
enter
or
push
jle
mov
ljmp
incl
pusha
sub
xchg
and
leave
stos
ja
outsl
xor
imul
mov
ljmp
cmpsl
xor
jecxz
lods
dec
fwait
imul
mov
cli
lret
cmp
mov
jmp
add
xor
push
mov
faddl
stos
cmp
xchg
es
pop
shll
dec
jg
mov
dec
sub
jmp
int3
xchg
pushl
sti
cmp
into
cld
sbb
mov
imul
inc
dec
sub
popa
mov
mov
fadds
mov
fcompl
add
mov
xchg
out
lcall
jne
push
adc
or
dec
mov
sub
sahf
nop
add
and
jg
pop
or
push
inc
ret
xor
scas
jne
xchg
xchg
gs
cmpsl
and
aaa
mov
push
lods
or
test
aas
add
xor
xchg
in
add
xor
test
xchg
mov
int3
dec
jmp
and
std
loopne
and
mov
shlb
adc
outsb
cmp
test
push
add
mov
mov
cld
inc
pop
inc
arpl
jo
gs
mov
arpl
shlb
loopne
cmp
aaa
test
idiv
cwtl
xchg
xchg
pop
jae
aam
mov
adc
jae
insl
shlb
sbb
xchg
xor
arpl
aad
mov
jp
das
mov
sub
or
mov
push
popf
into
push
js
leave
and
in
sbb
cmp
iret
sarl
inc
arpl
inc
enter
inc
pop
push
jne
or
negl
subl
scas
imul
push
stos
add
imul
loopne
jl
mov
stc
mov
pop
ss
cwtl
pushf
sub
cmpl
xor
xor
mov
cmp
loopne
cli
mov
das
sahf
push
aam
mov
test
xchg
jle
adcl
popa
xchg
xchg
std
adc
imull
cmp
inc
xchg
dec
pop
lret
enter
cli
push
jo
out
jb
ds
sub
outsl
stos
call
mov
aaa
fsubp
jns
enter
adc
test
pop
jbe
push
mov
cmp
in
dec
imul
aas
sub
adc
add
ret
pop
bswap
jge
lret
dec
iret
sub
cmc
inc
or
mov
ret
push
sub
sti
inc
jmp
out
jp
fcomps
push
fildll
mov
jle
push
push
es
pop
mov
jnp
filds
roll
in
dec
xchg
mov
push
outsb
xchg
xchg
adc
lcall
mov
mov
aam
add
xchg
xchg
mov
addr16
inc
inc
jle
inc
cli
mov
imul
insl
adc
cmc
ljmp
fnclex
test
rolb
outsl
and
inc
mov
rcrb
mov
push
cmpsl
push
mov
jmp
fstpl
dec
cwtl
and
je
mov
adc
mov
sbb
pop
out
lret
jno
popa
mov
and
sub
mov
lods
dec
int3
lret
sub
jnp
rcll
movsb
sub
aaa
je
xchg
add
and
add
fcom
out
mov
jmp
adc
sub
mov
das
mov
cmc
lret
ljmp
fdivr
adcl
scas
xor
xchg
loop
mov
andb
and
pop
cmc
repz
adc
jne
push
mov
arpl
lea
push
loop
fdivp
andb
mov
sbb
dec
in
mov
lcall
or
push
sar
mov
iret
fisubs
mov
xchg
aad
or
imul
inc
cmp
pushf
ret
fbstp
add
divl
push
fistl
inc
shrl
ret
mov
pop
xchg
js
decl
jno
mov
subl
and
push
fisubrl
cld
jb
jo
das
addb
add
mov
imul
sbb
add
inc
jl
hlt
xorl
call
sbb
xchg
mov
mov
fnstcw
jecxz
or
jmp
adc
dec
inc
aam
sti
adc
mov
inc
push
cmpsl
cmp
push
dec
xchg
stos
mov
adc
nop
out
insb
pop
push
xchg
stc
adc
stos
push
mov
mov
mov
in
mov
push
in
fcompl
push
sub
push
mov
or
dec
pop
aad
stos
adc
or
mov
and
or
jb
jno
cmpsl
stc
es
cmpsl
out
leave
lods
sahf
notb
pop
push
test
insl
cld
jno,pn
repz
mov
cmc
std
ja
and
and
cmp
popa
cmp
lods
pop
into
xchg
cmp
lcall
pop
scas
ja
inc
cs
pop
mov
imul
shll
lds
lds
cmc
or
jmp
push
inc
shll
clc
inc
and
jbe
loope
imul
push
call
addr16
adc
sub
int3
push
fsts
push
mov
rcl
xor
xor
push
jle
cmp
xchg
jge
mov
sub
push
dec
dec
fsubs
jp
jge
jb
and
and
out
sub
adc
push
mov
or
xchg
mov
popa
mov
mov
testl
jg
call
sti
dec
mov
xchg
pop
jle
imul
popa
inc
out
adc
je
shll
or
jae
sti
popf
test
bound
orl
push
movsl
xchg
mov
into
fdivrl
inc
mull
shrl
into
lods
roll
dec
lods
add
fsubs
enter
cmp
loopne
jbe
dec
hlt
pop
lret
mov
sbb
gs
push
fadds
ljmp
notb
int
daa
out
or
inc
stc
fmull
dec
push
ja
popa
negb
cmp
aad
test
in
es
adc
pop
into
movsl
shrl
test
inc
xor
add
xchg
movsl
mov
xchg
lods
adc
insb
insl
je
mov
stos
nop
jge
stos
sarb
ss
roll
ljmp
enter
adc
dec
aaa
pop
xchg
xchg
cmp
insb
aam
mov
les
dec
insb
rol
mov
push
push
sbb
jb
ret
add
pop
adc
repz
call
imul
leave
push
mov
sahf
int3
cwtl
mov
or
movsl
imul
dec
testb
aam
out
mulb
push
jecxz
fwait
ja
movsb
pop
int
inc
jbe
inc
in
call
push
mov
mov
dec
or
mov
out
jecxz
adc
mov
cli
mov
mov
xor
pop
cmpsl
or
push
icebp
rolb
out
lret
rcr
mov
fdivrl
mov
push
dec
adc
inc
andw
mov
mov
mov
in
xchg
mov
jecxz
adc
dec
sbbl
xor
std
pop
negb
cld
das
sub
insb
add
fidivrs
cltd
test
adc
jne
pop
mov
popa
sar
dec
cwtl
sub
sahf
into
das
lahf
mov
imul
arpl
decb
and
and
jmp
sbb
sbb
jg
out
dec
daa
insb
cmc
pop
std
mov
cmpsb
gs
jns
aam
addr16
jno
push
mov
sbb
jbe
mov
stos
pusha
mov
cmpsb
xchg
insb
sti
sbb
mov
lods
hlt
inc
dec
nop
cmp
test
movsb
and
mov
pop
or
std
stos
mov
and
mov
lret
es
mov
in
cwtl
testl
inc
cltd
movsl
mov
push
outsb
jne
out
mov
jmp
call
loopne
push
call
add
sbb
or
sbb
in
cmpsl
lods
shll
adc
xor
call
dec
cmp
cmp
outsb
movsl
aam
pusha
jle
shl
rcr
imul
dec
pop
stos
adcl
adc
jecxz
daa
cmp
jmp
add
jp
je
sqrtps
imul
lock
ret
hlt
lock
pop
data16
out
call
pop
movsl
out
mov
push
andb
ret
scas
dec
fs
mov
xor
xor
add
in
lea
mov
stos
inc
cmp
out
xor
popa
or
fidivs
mov
sbb
push
inc
cmpsb
popf
jb
push
cwtl
ret
xchg
sub
mov
ret
dec
sbb
out
inc
sbb
movsl
pop
addr16
jae
mov
fcmovb
jne
jbe
test
pop
pop
pop
cli
rclb
je
xor
jo
pushf
fwait
imul
pop
cmpsl
mov
dec
pop
pop
repz
push
pushf
lods
xor
xchg
or
lods
es
pop
adc
popa
jle
xchg
popa
push
sarb
pop
std
inc
xor
lret
cmp
mov
jge
inc
mov
enter
mov
ja
hlt
call
aam
push
push
adc
gs
push
out
mov
cmp
test
lods
rorb
sub
adc
cmp
fsubp
test
je
push
mov
and
mov
jb
ret
sub
lret
mov
hlt
mov
and
popa
fidivrl
sbb
dec
push
dec
in
shlb
in
mov
add
jnp
sti
xchg
out
push
add
adcl
sti
test
decb
jecxz
xor
push
xchg
daa
jl
jae
les
clc
loop
xchg
mov
dec
push
jge
clc
pop
jae
in
mov
insl
cltd
xor
out
push
lret
mov
scas
cmpsb
xchg
adc
mov
lcall
mov
aas
cmp
mov
push
xor
dec
or
outsl
in
test
mov
je
int
and
lea
movsb
cmpsl
mov
cmp
push
aam
xor
mov
pop
icebp
push
push
aaa
cwtl
pushf
pusha
icebp
lock
xchg
pusha
mov
sub
test
testb
pop
ficoms
and
lods
das
andl
pop
sbb
add
dec
outsl
cltd
mov
fcmovb
push
dec
cmp
sbb
in
in
dec
dec
mov
lar
mov
iret
xchg
dec
lock
call
inc
sub
jnp
mov
mov
lret
push
into
mov
mov
in
mov
xor
push
mov
cmp
cli
adc
lcall
ds
aas
dec
ret
inc
iret
out
cmp
sub
dec
pop
ret
xchg
pop
jnp
rclb
inc
cmp
pop
scas
int3
ss
enter
inc
xchg
sub
inc
frstor
insb
mov
shrl
fdivl
loop
pop
or
xchg
std
std
testb
push
aas
push
mov
cmp
fildl
les
ror
mov
inc
add
mov
roll
fmul
jb
cwtl
dec
cmpsl
push
cmp
jo
xchg
je
or
mov
adc
mov
mov
les
aad
cmp
fwait
xor
inc
mov
jle
xlat
leave
jns
aam
inc
or
lret
xor
jg
imul
lea
repnz
in
mov
sti
and
fnsave
or
or
fndisi(8087
mov
pop
mov
mov
das
xchg
and
pop
imul
push
mov
addr16
sbb
inc
rcr
or
push
andb
add
sub
stos
gs
add
inc
cmp
pop
out
sub
inc
and
pushf
ja
lcall
loop
jns
stos
in
add
jno
out
mov
dec
push
into
jb
and
xor
mov
cmc
push
jle
mov
pop
add
push
jg
pop
mov
mov
push
movsb
adc
add
inc
cmc
sbb
sbb
les
iret
pop
mov
test
push
rcll
mov
pusha
mov
repnz
add
jp
sbb
jg
jae
sbb
insl
push
xor
movsl
and
pop
orb
gs
je
and
push
in
in
test
mov
jo
leave
mov
dec
iret
int3
or
and
ret
pusha
xchg
cmp
gs
subl
xor
idivb
icebp
mov
loope
gs
mov
mov
push
aad
dec
adc
into
orl
xchg
ss
inc
leave
jl
pop
mov
or
icebp
sti
aam
pop
popf
jno
das
mov
xchg
pop
jns
and
or
lods
xor
pop
rep
cmp
sub
push
mov
fadds
xor
push
xchg
add
xchg
aad
add
mov
push
adc
lret
dec
cltd
dec
or
pop
jae
lods
push
xchg
add
ljmp
dec
movsb
jne
or
sbb
mov
dec
add
fdivrl
xchg
icebp
inc
sub
xchg
cmp
inc
test
sbb
inc
mov
jle
mov
xchg
mov
in
movsb
cld
jo
movsl
and
mov
mov
inc
add
mov
add
inc
icebp
adc
xlat
movsl
inc
outsl
push
leave
stos
jae
rcl
inc
inc
push
imul
inc
push
in
xchg
lret
dec
adc
movsl
iret
rcrb
sbbl
stc
cmp
stos
cmp
dec
mov
sbb
xchg
and
inc
inc
into
dec
lock
lsl
cld
mov
mov
js
inc
in
adc
jae
test
mov
pop
cld
orb
pop
movsb
xor
movsl
pop
cmp
insl
lcall
fwait
push
hlt
das
pop
loop
hlt
in
rcrb
xor
out
adc
shrl
aam
inc
sarb
sbb
mov
ja
iret
int
rorb
aas
mov
push
mov
pop
inc
adcl
test
mov
lods
cmpsb
mov
push
loop
mov
enter
lds
cmpl
push
adc
out
nop
push
into
lahf
movsl
sub
stos
dec
add
aam
cs
mov
adc
ret
mov
mov
jge
add
mov
add
insb
ja
ret
push
lret
cmp
sub
and
faddl
sar
lahf
pop
sub
clc
cmp
and
xchg
lret
int
and
push
insl
add
jge
out
inc
cmp
pop
xor
jp
mov
mov
mov
je
sahf
and
xchg
sbb
mov
sbb
daa
push
leave
mov
popf
cmp
push
addr16
std
push
mov
jo
fsts
or
cmp
iret
adc
sbb
xor
arpl
xlat
addl
push
jmp
pusha
sub
inc
fstl
ret
jmp
cmp
outsl
addr16
dec
mov
mov
fs
inc
lret
lcall
add
test
mov
scas
lcall
or
jle
dec
mov
dec
jge
mov
pop
das
or
fcoml
or
xchg
jbe
call
ror
fcmove
popa
fstpl
jge
ljmp
mov
adcl
mov
cld
pop
xor
sbb
and
mov
das
mov
mov
icebp
sub
daa
out
jmp
movsl
mov
add
inc
cli
mov
pop
pop
mov
jge
and
fdivs
pop
or
paddsb
inc
and
loopne
ret
sbb
xchg
dec
pusha
je
sbb
pop
shlb
negl
outsb
jge
rorb
out
cmp
mov
rcrl
jae
jmp
fildll
cmp
sbb
and
push
test
lods
imull
aad
sub
adc
das
xacquire
and
mov
adc
pop
rolb
das
cmpsl
rol
js
inc
aas
ja
xlat
mov
clc
xlat
and
in
arpl
loop
jno,pt
int
inc
int
jmp
sbb
frstor
add
clc
push
dec
mov
dec
fs
dec
xchg
push
dec
test
pop
sarb
mov
js
lock
jbe
or
push
jae
enter
jp
cli
mov
or
inc
sbb
mov
int
notb
adc
test
and
test
flds
jle
insl
sub
shrl
mov
pop
fldl
popa
aad
mov
sub
ljmp
xchg
mov
aaa
mov
mov
cmpsb
aam
mov
imul
repz
jns
in
ficompl
cmp
sbb
test
push
js,pt
and
cld
leave
or
sti
cld
xlat
mov
repz
iret
dec
shl
jp
rcrl
ds
add
test
dec
sbb
test
mov
xor
mov
push
imull
dec
xor
or
dec
add
cmp
jl
rcrl
or
xor
loop
mov
mov
xchg
jle
cld
mov
cmp
in
test
add
rclb
bound
lahf
add
aas
add
out
jns
in
adc
cmpsb
push
and
push
and
mov
movsl
xlat
mov
push
pop
pop
cwtl
out
icebp
xchg
jge
sub
pop
int3
les
dec
xchg
cmp
jbe
sub
outsl
add
lret
pop
sti
scas
lret
jae
mov
in
lcall
pop
or
push
out
or
std
jb
lret
ss
mov
mov
xor
adc
pop
xchg
cmp
add
cli
jnp
rorl
push
int
pop
fnstcw
xchg
xchg
xchg
leave
mov
addr16
in
push
and
mov
mov
xchg
dec
adc
popl
rorb
add
pop
fiaddl
stos
movsb
adc
mov
jge
fisttpl
arpl
movsb
hlt
arpl
rolb
aad
jnp
pushf
sahf
fdiv
cmp
shl
nop
mov
sub
cmpsb
cmpsl
inc
out
sbb
xor
jbe
sbb
fcomps
sbb
or
js
aaa
add
sbb
add
cld
pop
ret
shr
mov
cmp
and
addr16
jecxz
out
push
outsl
call
das
daa
mov
mov
es
imul
shll
dec
mov
subl
clc
cmc
sub
jb
pop
dec
or
lret
icebp
aaa
sahf
jp
loope
mov
jmp
mov
sbb
jge
in
in
pop
pop
cld
pop
adc
mov
mov
sub
data16
imul
cmp
push
stos
addr16
nop
jge
xchg
loopne
mov
fwait
xor
out
dec
popa
ja
les
sub
xlat
inc
pop
imul
inc
push
push
pop
mov
and
fwait
sbb
imul
adc
jae
mov
bound
out
out
mov
rcll
fsubr
shlb
je
jle
insl
mov
mov
push
and
mov
das
adc
ss
mov
cmp
pop
mov
roll
jo
test
dec
xor
addr16
and
xor
test
pushf
ja
test
clc
ds
addl
jb
mov
push
push
cmp
add
or
dec
cmp
mov
call
fwait
cmp
mov
push
mov
cmp
pusha
inc
ljmp
stos
sub
in
xor
mov
outsb
xor
inc
push
dec
out
pop
scas
aas
ja
hlt
js
and
mov
push
inc
insl
mov
dec
popf
and
mov
adc
jno
and
mov
sti
dec
movsb
mov
or
mov
je
movsb
or
xlat
and
mov
lcall
xor
xchg
pushl
jae
fidivrl
lock
lcall
fistpl
js
mov
leave
push
adc
mov
xchg
xor
jns
insl
mov
pushf
in
xlat
inc
inc
sahf
lods
outsl
popf
cltd
loop
cmpsl
into
pop
inc
in
stos
movsl
mov
or
cmp
sub
sbb
sbb
xchg
addr16
cmp
dec
jns
add
fimull
ja
adc
ja
cmpl
insb
sub
ret
cld
cwtl
lahf
iret
inc
mov
inc
fcmovb
scas
imul
lock
cltd
and
jb
xchg
fadd
mov
test
vmovq
loope
rolb
outsb
sub
lods
jmp
outsb
aam
test
cmp
lahf
add
adc
fdivrs
fnstsw
rcr
ret
push
stos
fldcw
mov
dec
in
arpl
jno
int
and
pop
inc
aad
fistpl
mov
mov
mov
mov
or
cmp
xchg
sub
mov
shlb
iret
pop
sub
fistpll
push
cld
call
mov
cltd
out
lret
test
cmp
lcall
add
jne
pop
testl
int
pop
mov
mov
sarb
mov
roll
fisubrl
mov
clc
xchg
mov
adc
inc
scas
repz
out
inc
js
pusha
daa
dec
inc
arpl
push
cmp
push
imul
imul
nop
mov
mov
pop
leave
mov
arpl
lds
call
iret
mov
push
shll
daa
jno
jnp
int
xchg
jmp
pushf
ret
cli
pushf
pop
xor
lahf
aaa
mov
cwtl
mov
sahf
sub
push
pop
orb
mov
div
xor
xchg
xchg
iret
in
popa
or
mov
lahf
and
rol
mov
push
sbb
hlt
movsb
in
call
mov
dec
fildll
and
xchg
lea
inc
pop
add
shlb
in
xchg
mov
xor
nop
repz
mov
std
cmp
mov
and
mov
pop
test
or
push
push
add
lods
lahf
test
sub
push
mov
les
subps
int3
mov
adc
nop
and
add
lret
and
cld
popa
addr16
notb
pop
fldcw
and
enter
mov
js
scas
push
and
scas
mov
popf
pop
loop
out
cmpsb
outsb
lock
sbb
inc
xchg
sbb
mov
nop
jmp
out
icebp
xor
cmpsb
movsl
stc
mov
scas
pop
in
xchg
enter
cmp
gs
fsubs
cmpsb
and
and
repnz
insl
mov
xor
xor
xlat
call
jae
mov
cmp
sbb
jno
mov
push
xor
out
dec
or
jmp
mov
jae,pn
pusha
jno
dec
sbb
sub
inc
movb
mov
jne
test
pushl
in
xor
adc
fbld
mov
shrl
sbbb
jne
or
jo
leave
mov
shlb
popl
enter
pop
lds
test
roll
ja
mov
sbb
out
in
inc
push
pop
stos
stos
cmp
xchg
lods
xchg
cmp
mov
xor
inc
pushf
adcl
sbb
pusha
pop
arpl
push
inc
adc
int3
stos
xchg
addb
adc
aad
mov
cltd
aad
addr16
lret
pop
adc
mov
add
jl
sti
insl
mov
inc
cmpsl
push
fstl
pop
shl
mov
jp
sbb
shlb
jmp
dec
rolb
or
mov
lret
out
jae
rcr
jns
data16
jmp
mov
jae
ss
enter
jae
cwtl
outsb
mov
inc
sbb
mulps
stos
xor
xchg
pop
pop
cmc
sarl
fstpt
ret
fstl
fwait
mov
or
inc
pop
mov
mull
insb
rolb
imul
outsl
loope
test
sub
push
ljmp
pushf
inc
sub
or
push
ret
sub
ds
xorl
test
loop
and
out
add
mov
out
add
nop
xchg
in
sub
addb
pop
shlb
sub
mov
inc
sbb
jecxz
loope
lret
push
mov
cwtl
shlb
pop
inc
in
das
mov
sahf
pop
dec
in
xor
clc
test
xchg
cli
add
push
dec
and
sub
push
in
das
pushf
xor
lods
shrb
aas
mov
mov
jae
ljmp
pop
ljmp
adc
add
adc
dec
int3
icebp
push
mov
rolb
or
cs
xchg
stos
sti
shlb
jns
jbe
int
subps
and
inc
xor
imul
mov
mov
inc
inc
xchg
testb
loope
iret
jnp
mov
shll
mov
adc
movb
mov
inc
adc
or
pushf
pop
imul
xchg
fdiv
adc
clc
cmc
stos
sbb
push
movq
mov
outsl
and
xchg
adc
into
fstpt
imul
enter
mov
aaa
sub
enter
stos
out
shrl
je
popa
adc
inc
add
jbe
test
pushf
mov
dec
loop
ret
push
jnp
push
mov
ljmp
ja
fxch
jmp
push
js
pop
inc
mov
std
xor
std
pop
fdivrs
call
fwait
hlt
rcl
push
pushaw
push
leave
fsubp
cltd
sbb
fnstsw
sarl
pop
call
sahf
loop
jo
int3
in
sbb
stos
lcall
push
mov
jecxz
rcll
xchg
jmp
xchg
lock
add
insl
sbb
pop
leave
xor
repnz
xchg
push
cmp
and
stc
pusha
add
mov
pop
mov
cmp
aas
stc
lock
xor
ljmp
leave
push
cs
das
sub
std
sub
imul
std
pop
sub
add
cmpsl
dec
pushf
lcall
mov
dec
xchg
adc
arpl
fadds
popf
hlt
mov
lds
add
push
sbb
pusha
sbb
iret
inc
cmc
je
addb
adc
daa
test
and
loope
mov
add
sbb
cmp
das
dec
jp
repnz
out
xchg
mov
out
ss
sbb
and
std
fwait
leave
and
loopne
movsl
outsl
adc
pop
daa
xor
xor
imul
pop
adc
stc
xlat
hlt
jae
mov
out
call
mov
sub
repz
enter
aam
adc
rolb
jmp
xor
mov
je
mov
xchg
sarl
mov
push
and
cwtl
lds
stc
popf
movsb
cmpl
add
cltd
xchg
mov
xchg
dec
xlat
mov
jns
movsb
dec
pusha
xchg
inc
fwait
xchg
into
pop
push
inc
hlt
es
xor
mov
pop
mov
lea
clc
sub
aad
and
in
loop
stos
pop
inc
fimull
adc
int
insl
push
call
sbbb
jle
mov
pop
shll
jl
stc
xchg
rolb
shll
push
out
xchg
mov
xchg
jae
pop
insb
add
mov
and
jl
fisubs
mov
or
push
xchg
cli
movsl
pop
mov
sub
mov
mov
jnp
mov
cwtl
mov
xchg
cmc
xchg
mov
out
xchg
cmc
jo
sbb
adc
popf
scas
xchg
push
mov
mov
cld
test
add
out
jne
xchg
fidivl
std
out
or
arpl
aaa
pop
into
or
add
enter
dec
cmpsl
dec
add
fs
or
stos
cmp
out
mov
mov
push
sub
adc
sub
dec
mov
fsubrp
rcrl
pop
xchg
insb
cmp
pushf
sbb
test
or
jbe
popf
rclb
mov
pop
add
inc
fldenv
inc
leave
imul
scas
roll
gs
jle
xor
adc
jle
out
fisubrs
adc
xchg
xchg
jl
leave
sub
test
scas
int3
out
inc
mov
fwait
xchg
add
xor
xlat
mov
scas
adc
sub
into
jg
ds
pushl
mov
sbb
insb
adc
jl
cwtl
dec
xchg
ret
dec
popaw
sub
lea
ret
incb
cs
insb
outsl
push
and
jl
pop
add
xchg
mov
in
fidivrs
pop
jle
adc
jb
out
mov
inc
dec
shl
xlat
ja
cld
loop
mov
shl
ret
xchg
call
cmpsb
or
insb
dec
pop
fwait
aam
mov
jmp
shr
mov
shll
mov
lret
cltd
cwtl
bound
lock
sub
push
pop
fadds
cmc
add
jne
push
cmpb
jno
sbb
and
sbb
aaa
outsl
mov
repnz
adc
js
data16
or
sti
mov
ja
cmp
or
in
or
xor
cwtl
gs
xchg
inc
repnz
sub
icebp
pop
scas
jne
sbb
leave
jbe
insb
xor
fs
sbb
mov
fidivrl
movsl
adc
dec
jge
icebp
lahf
sub
cmp
add
push
rolb
cmp
xor
cli
sub
daa
in
jnp
cmp
jne
jns
fists
cld
xchg
sarb
mov
inc
cmp
sbb
add
sbb
mov
aaa
dec
add
sub
mov
andl
imul
or
pop
mov
xchg
cmovp
and
test
xchg
test
addb
fimull
or
fcmove
dec
movsb
cs
mov
ja
fisttps
jg
lods
xorb
sub
mov
call
rclb
cmp
add
mov
xchg
add
stos
sbb
fcomps
adc
inc
in
popa
sarl
xchg
cli
or
adc
mov
or
xor
xchg
sbb
dec
cli
call
je
pop
mov
sub
mov
push
jns
addr16
sbb
leave
ljmp
cmp
mov
dec
adc
and
je
push
add
and
jae
in
jecxz
cmpb
push
shlb
xlat
test
sub
addb
xchg
scas
cmp
and
mov
xchg
lds
mov
aas
and
data16
out
jae
lcall
jmp
xchg
sub
and
xchg
arpl
mov
jbe
sbb
mov
dec
and
jmp
xor
imul
popa
fcomps
add
fbld
nop
jns
lahf
pop
mov
inc
imul
inc
std
aaa
insl
dec
fstp
fisttpll
jg
lock
out
or
gs
cmp
and
lock
hlt
xor
icebp
in
les
pop
adc
sbb
push
dec
div
mov
or
or
pusha
bound
adc
sbb
sahf
jmp
icebp
lock
ror
test
adc
mov
cmc
test
xchg
add
xchg
push
inc
xchg
push
leave
lret
xor
mov
pusha
cmpb
mov
mov
flds
mov
cld
sbb
aad
pusha
ds
out
jne
mov
inc
cmp
push
mov
ret
jge
add
stos
cmpsl
mov
adc
mov
and
mov
xor
idivb
outsb
sbb
addl
mov
das
lods
shrl
fidivs
and
jne
mov
jp
xor
dec
dec
sar
cld
nop
dec
push
push
add
insl
inc
lea
out
aaa
insl
mov
adc
jne
jecxz
jge
jb
xor
or
pop
lods
mov
sti
push
mov
sub
jbe
cmpsb
dec
mov
test
mov
push
jbe
adc
js
insl
movsb
aad
lock
outsb
sub
add
and
mov
lock
repnz
pop
add
push
sub
repnz
push
jbe
mov
test
call
fisubrl
inc
icebp
pop
iret
add
dec
cmpsb
icebp
or
stc
in
sub
mov
out
mov
das
sub
mov
push
iret
lret
xor
and
jmp
outsb
push
aaa
and
cmp
inc
cwtl
add
test
divl
pop
dec
not
jno,pn
je
idivl
push
inc
ror
in
sub
xor
stos
and
outsl
xor
mov
sbb
xchg
push
xchg
shlb
fs
jmp
xchg
sub
call
xor
mov
adc
aam
in
dec
inc
notb
nop
mov
fisubs
and
icebp
test
cmc
das
lods
cmp
xchg
cmpsb
clc
mov
imul
xchg
jae
push
mov
mov
ds
xorb
mov
jno
inc
mov
mov
pop
std
fdivl
out
outsb
pop
sbbb
repnz
les
lahf
in
rorb
int3
sub
rcr
daa
jecxz
inc
jae
pop
fstpl
mov
mov
stos
xor
dec
xlat
cmp
inc
lret
std
and
lcall
push
xor
pop
push
mov
outsl
lea
mov
dec
lret
pop
or
icebp
add
popa
outsl
clc
aaa
les
jecxz
dec
sub
jnp
push
lahf
sarb
jno
popa
int
stc
mov
or
cmpsb
ret
cmp
jg
loopne
repz
cmpsb
sub
sub
cmp
es
adc
ss
sub
jle
das
dec
mov
jne
jae
lcall
inc
bound
or
out
jb
clc
adc
lods
pop
inc
mov
sbb
xlat
mov
repnz
cmpl
in
xchg
mov
fidivrl
jg
sbb
xor
int3
mov
dec
aaa
dec
push
lds
lahf
imul
sbb
push
inc
pop
shl
push
or
shlb
inc
data16
repnz
test
mov
or
xor
adc
push
push
mov
stc
fbstp
add
cmc
inc
inc
push
aam
dec
xor
ljmp
jg
and
daa
aas
push
adc
cmpb
daa
lea
test
insl
pop
pop
jg
mov
imul
ret
cwtl
mov
inc
lods
sub
push
or
rcll
push
mov
sbb
and
test
repz
in
mov
in
push
inc
jge
push
inc
mov
cmp
add
push
xchg
xchg
movsb
or
inc
inc
or
push
dec
push
cmp
xchg
pop
movsl
dec
pop
outsl
sub
iret
pop
loope
pop
mov
mov
jp
test
out
std
ss
insl
int3
mov
jl
out
loope
movsl
dec
inc
sub
lret
dec
jmp
mov
clc
pop
in
loop
add
pop
push
arpl
rcl
inc
fnstsw
add
sbb
movsl
xor
cmpl
popf
pop
inc
pop
push
add
add
cld
xchg
lods
cmp
xor
jne,pn
cltd
iret
jl
cmp
fucomi
repnz
shrb
rcll
jp
rcrl
imul
pop
cmc
mov
push
dec
xor
shrl
mov
or
push
xlat
cmpsb
and
repz
int
push
enter
iret
and
sbbl
bound
sub
cmpsl
sbb
adc
sub
loopne
add
jne
incl
mov
sbb
inc
xchg
outsl
lea
ret
call
test
test
fistpl
rcl
pop
push
sbb
cmp
lret
cmp
push
xchg
add
push
mov
push
data16
jno
sti
out
int3
pop
add
push
pushf
insl
sub
mov
mov
mov
jmp
and
lret
xlat
and
ljmp
cmp
xchg
xchg
fcmovb
sub
repnz
dec
add
stc
and
loope
push
or
adc
sbb
adcb
cmpsl
mov
fadd
cmp
cmp
mov
jo
loopne
sbb
jge
sbb
stos
divl
fistpl
outsb
adc
push
jno
mov
inc
cmp
sbb
sub
jecxz
xlat
add
cmp
pop
sub
add
and
sbb
jnp
test
repz
repnz
sarl
mov
xor
in
or
cmpsb
stos
jg
cmp
dec
mov
in
pand
lea
mov
into
adc
jbe
and
stos
xor
out
xchg
or
ret
push
push
out
js
in
mov
pop
xor
and
inc
popf
xor
and
xor
fimull
dec
mov
add
test
fdiv
jle
aad
mov
xor
sub
jnp
and
mov
sub
mov
add
pop
xor
jb
or
mull
dec
xchg
cs
mov
imul
lret
mov
hlt
je
arpl
jmp
vmread
aad
loope
fadds
mov
inc
or
nop
mov
pushf
push
inc
sub
stos
shrl
aas
cwtl
and
ret
mov
sub
or
sub
in
xchg
ficomps
push
jne
addr16
push
jno
fsub
jp
cld
lret
pop
outsl
adc
cmp
or
pop
sbb
sarb
fcomip
mov
in
outsb
lock
xor
pushf
stos
mov
sahf
dec
xchg
notl
lcall
sbb
outsb
jae
push
cmp
cmpsb
dec
mov
adc
jmp
repnz
mov
sbb
inc
clc
ret
sbb
cltd
popa
xchg
arpl
fcmovnbe
and
lea
jmp
jle
test
pusha
xchg
and
pop
loope
ret
lods
and
insb
push
sar
mov
push
jnp
enter
sahf
ljmp
inc
cltd
movsb
shlb
sahf
jl
mov
lcall
jle
lcall
xor
addr16
lods
movsb
leave
fisttpll
and
jle
xlat
ficompl
fcompl
mov
push
add
xchg
dec
push
pop
jo
cltd
fwait
inc
je
push
mov
xor
mov
jnp
and
pushf
jge
loope
out
test
mov
cmp
xor
stos
bound
jecxz
fisubl
dec
fld
adc
xchg
das
mov
sub
dec
mov
into
sarb
insb
jecxz
xchg
dec
into
movsl
adc
mov
and
or
push
movsb
fldl
mov
push
push
lods
pop
pop
or
adc
jl
pop
pop
gs
nop
movsb
adc
in
rorb
outsl
lock
outsb
lds
or
dec
lea
mov
adc
sub
lea
cld
jl
call
mov
pushf
enter
clc
mov
fidivrs
and
cmpb
or
pusha
or
lcall
js
ja
repnz
cld
push
add
aad
push
xchg
inc
push
push
adcb
push
mov
cmpl
mov
jp
mov
push
mov
stos
xchg
sti
xchg
xor
pop
stos
clc
inc
aad
lods
cs
sub
stos
outsl
xor
and
mov
data16
aam
xchg
jge
mov
xchg
insl
pop
stos
cmp
cmpl
mov
adc
cmp
int
jo
jne
or
dec
or
insl
jns
rol
push
push
sarb
out
out
sbb
scas
mov
push
lret
rolb
fistl
dec
cmc
fsubrs
popf
test
xchg
lcall
and
jns
aam
out
jns
add
mov
scas
leave
sub
jmp
insl
into
adc
ljmp
xchg
pop
int3
cmc
stos
push
add
pop
inc
cltd
jge
int
pop
sbb
leave
pushf
cmp
faddl
jne
les
adc
lret
pop
ja
inc
pop
xor
loope
loop
pop
sub
xchg
fstl
inc
and
sqrtps
sub
mov
bound
sbb
push
add
fdivp
cli
push
lds
jnp
sub
add
out
ret
mov
dec
sti
xor
dec
xor
or
pop
xor
dec
adc
xchg
lret
push
loop
es
cmp
or
daa
add
sub
in
jmp
inc
push
and
adc
push
js
adc
adc
adc
cmp
sbb
fiaddl
push
scas
loop
into
fsub
cld
out
push
adc
ljmp
pop
or
std
cmpsb
mov
out
sub
jle
je
push
scas
daa
cmp
push
mov
adc
popa
jl
inc
add
fisubl
jg
xchg
cmpsb
xor
aad
or
dec
lret
push
pop
scas
int3
hlt
clc
and
or
dec
ret
movsl
cmp
lret
fcmovbe
stos
xchg
or
lods
rcll
repz
push
cmp
loopne
sub
xchg
xchg
pop
add
mov
shll
adcl
std
mov
scas
lcall
inc
stos
ss
int
je
enter
fldt
pop
push
cmc
test
xor
loope
adc
pop
push
notb
xor
cmp
and
xlat
pop
and
xchg
fsubrs
hlt
pusha
scas
dec
adc
loop
adc
cwtl
pop
mov
rcrl
push
mov
sbb
lods
ret
inc
test
sbb
cli
xor
add
sbb
adc
hlt
and
loopne
ret
call
fsubp
das
mov
fidivrs
adcl
mov
in
pop
sbb
rcll
dec
jb
mov
bound
loop
ret
sbb
and
or
pop
test
xor
inc
add
aaa
pop
shrl
insb
icebp
out
push
sbb
adc
dec
imul
mov
add
movsl
add
push
negl
orl
ret
movsb
push
test
pusha
jecxz
and
or
mov
xchg
icebp
fdivrs
inc
mov
mov
xor
and
idivb
mov
das
lret
lret
dec
les
subl
jge
or
mov
and
loopne
dec
nop
sub
hlt
fidivrl
shrl
adc
scas
out
mov
stc
test
cmp
inc
pop
aaa
call
stos
out
sar
jge
jae
mov
jns
or
jns
mov
add
test
sbb
repz
je
inc
push
int3
inc
push
addr16
into
pop
fmul
nop
adc
push
dec
cmp
lock
fmuls
dec
test
dec
sbb
sub
aas
pop
in
inc
xlat
sbb
jnp
and
scas
pop
jbe
cmp
dec
mov
add
mov
add
and
sbb
add
sub
pusha
or
pop
ficompl
jp
lds
ja
cmp
pushf
out
loopne
pmaxsw
imul
lods
cmp
out
movsb
mov
arpl
or
pop
push
pop
push
push
xlat
fwait
dec
adc
outsl
pop
sub
movsb
push
inc
imul
stos
push
aad
into
lea
jmp
sti
sub
std
fstp
fsts
cmp
lea
xor
cmp
xchg
mov
push
cmpsb
stos
call
xchg
out
sub
pop
pop
pop
imul
pop
ljmp
sub
add
cmp
mov
aaa
add
stc
mov
imul
xchg
std
push
flds
es
xlat
sbb
mov
rorb
les
hlt
and
ja
scas
mov
ss
and
sub
cmpb
add
popa
push
jns
popa
pop
pop
pop
cmp
nop
adc
test
setbe
addr16
jno
movl
xchg
movsl
add
int
popf
xchg
mov
roll
cmp
nop
in
lds
enter
lea
movsl
adc
popa
lods
mov
mov
test
jb
sub
pushf
lods
jmp
out
loope
loop
aaa
mov
in
idiv
xchg
and
cld
sub
fsubrl
cmp
mov
fmuls
xchg
mov
cmpsb
into
leave
sbb
lcall
mov
dec
repz
or
lods
mulb
ds
int3
sub
cmp
cmc
fidivs
add
cmc
pop
leave
push
fisubrs
lods
or
mov
jno
repnz
mov
das
sbb
rcll
cmp
sub
or
cmp
fwait
cmp
push
stos
les
rcrb
inc
cmpsl
repnz
ds
sti
sbb
sbb
jl
xlat
push
cmp
aas
cmp
add
mov
js
mov
nopl
icebp
add
push
and
adc
and
mov
outsl
incl
ss
add
jmp
pop
pop
jl
bound
shll
push
fs
cmpsl
and
add
sahf
loope
inc
sbb
ror
imul
mov
xchg
vpextrw
lds
pop
mov
ror
bound
jmp
loopne
xor
popa
fdivrs
jp
popf
jl
mov
ret
push
daa
or
stc
xor
repnz
xor
mov
iret
iret
sbb
dec
nop
mov
push
test
orl
pusha
or
inc
sub
shlb
dec
adc
mov
mov
add
push
adcl
sub
push
rorb
mov
stos
jge
and
mov
idivl
pop
dec
pop
mov
mov
jge
decl
sub
jns
in
adc
andb
jnp
push
xchg
cwtl
mov
ret
push
mov
js
lock
pushf
fs
insl
lret
cwtl
adc
std
sub
out
jmp
fildl
mov
les
mov
adc
repz
lds
adc
aad
fisttpl
mov
daa
ret
pop
push
hlt
dec
xchg
add
pushf
insl
aad
jge
add
sbb
clc
and
cmp
or
or
dec
mov
imul
cltd
popf
ds
cmp
mov
and
mov
outsl
movsb
insl
mov
pop
cmpsb
ja
add
test
pop
inc
push
and
lret
scas
pusha
arpl
sub
loop
push
insl
fsubrs
push
and
adcb
sub
cmc
xor
idivb
xor
std
mov
lds
xor
mov
subb
xor
add
call
jne
fdivrp
jl
cmp
or
testb
mov
sbb
add
jecxz
or
int3
jp
mov
in
and
and
mov
js
mov
arpl
rcrl
inc
cmp
add
lcall
or
add
mov
push
lret
add
xchg
cs
cmc
sti
stc
mov
or
mov
push
add
aad
imul
mov
ret
push
mov
mov
jns
or
jmp
ret
shl
adc
addr16
sbb
jno
jle
ds
addr16
pushl
xor
popf
pushf
shrb
daa
sub
imul
xchg
adc
xchg
pop
cltd
jmp
pop
fucom
pop
jecxz
and
imul
leave
inc
daa
in
fbstp
mov
inc
jecxz
push
pop
popa
pushf
lcall
lret
cmp
push
sub
jns
xor
mov
sub
je
pop
xor
push
movsb
push
push
push
jmp
jae
loopne
xchg
fdivrl
mov
scas
call
jmp
sahf
dec
mov
sbb
leave
or
sbbb
adc
fisubrl
and
in
rcr
scas
int3
imul
mov
lods
pop
enter
loop
sahf
les
sub
inc
sub
cmpb
mov
sti
mov
int3
loope
imul
mov
or
or
test
testl
mov
xchg
pop
push
inc
push
insb
push
mov
jae
ret
jno
push
adc
cmp
cwtl
mov
sub
add
lods
pop
adc
xor
inc
or
rclb
dec
aam
lods
icebp
data16
scas
imul
or
pop
dec
scas
negb
fdivs
dec
fs
andl
sti
stc
adc
xlat
sub
xchg
sahf
mov
test
test
mov
pop
add
adc
popa
clc
divb
mov
inc
sub
out
stc
jae
adc
movlps
add
sbb
jg
js
fcmovnu
test
mov
xchg
js
push
cmp
mov
ficoml
dec
int
les
mov
fs
pop
lcall
push
xchg
stos
add
hlt
test
mov
cmp
jns
mov
out
cmp
mov
cwtl
cltd
jno
or
fisttpl
and
idiv
pop
lret
cltd
and
cltd
rcrb
in
pop
xchg
inc
pushf
fs
das
mov
cmp
push
enter
out
lret
iret
mov
je
add
cmp
dec
mov
lock
sub
or
repz
or
sub
decl
daa
jle
fmuls
dec
stos
jg
xlat
xor
xor
loope
int3
cld
std
stos
ss
shlb
stc
idiv
xchg
bswap
dec
les
rcll
xlat
fdivs
jbe
sar
test
dec
and
or
and
roll
in
pusha
or
or
add
pop
jg
mov
shlb
push
jae
pop
sub
mov
jecxz
test
dec
aad
fdiv
sub
jg
pop
jb
imul
loopne
or
adc
mov
mov
mov
or
addr16
mov
xchg
xchg
das
stc
and
stc
ror
sub
mov
add
pop
push
data16
pop
pusha
pop
sarl
mov
pushf
and
mov
xchg
aad
mov
insl
sub
cmp
dec
movl
sbb
icebp
and
ljmp
pop
mov
xchg
ret
out
fildl
cs
decb
ret
jae
aam
ret
or
jb
aad
adc
aam
shrb
pop
adc
xor
jns
cmp
outsl
jns
outsb
jle
out
sub
setnp
pop
lods
mov
push
xor
pop
xlat
fldl
add
les
call
mov
js
mov
sub
mov
mov
shl
enter
iret
push
add
je
fcmovnu
mov
inc
adc
push
nop
sarb
dec
pop
loop
mov
pop
js
xorl
push
sub
inc
cmc
jne
pusha
repz
loope
fimull
rolb
fs
mov
push
mov
sbb
jmp
lea
es
int
or
xchg
and
movb
cmpsb
or
mov
mov
push
imul
pop
xor
inc
pop
imul
fwait
xchg
jge
push
sbb
pop
or
push
movsb
or
enter
test
mov
jle
scas
mov
or
lods
sub
sbb
pop
dec
sbb
mov
add
sets
add
mov
xchg
shlb
jle
std
jb
and
ja
push
insl
xlat
sub
shlb
mov
jmp
jmp
gs
loopne
mov
xchg
adc
mov
aam
sbb
xor
xorl
dec
jno
cmpsl
mov
out
xor
lret
cmpsl
xor
lcall
loop
ret
inc
push
shrl
out
xchg
push
or
fwait
or
mov
pop
pop
lea
cmpsb
movsb
icebp
shrb
outsb
lea
xchg
and
cmpsb
sub
and
cmc
sub
mov
ja
stos
push
sti
mov
and
ljmp
roll
push
mov
sub
xchg
repz
or
adc
inc
sbb
pop
mov
mov
fdivs
mov
lea
mov
dec
test
dec
inc
jmp
inc
xchg
icebp
loopne
xor
loope
movsl
rorb
inc
jno
mov
ljmp
loope
cwtl
es
lds
mov
dec
repnz
jnp
bound
mov
xor
push
into
xor
or
lea
ret
lock
mov
in
cld
leave
ffreep
and
frstor
and
push
repz
into
jl
cmc
movsb
add
sbb
nop
sbb
mov
mov
inc
test
inc
and
sbb
add
jge
mov
cmpsl
mov
or
hlt
mov
mov
out
stos
stos
fidivl
ret
scas
and
addb
ja
int3
adcb
fwait
cmc
cmpsl
mov
inc
popf
pop
mov
sarb
or
or
push
jne
daa
ja
movsl
mov
or
test
imull
jecxz
or
jne
fwait
imul
dec
mov
out
mov
stos
loope
push
das
imul
pop
lea
push
lahf
bound
pop
andb
jle
subl
xchg
aas
rorl
enter
loopne
shrl
ror
pop
es
mov
pusha
test
xor
add
rclb
fs
dec
fdivs
ljmp
cmp
cmc
cs
sti
mov
adc
data16
push
daa
xlat
cmp
cmp
hlt
cmp
in
psrlq
loopne
in
sub
popa
sahf
ret
and
adc
sub
jns
add
or
inc
pushf
ja
adc
rcrl
pop
inc
clc
fnstsw
pop
cmp
cmp
call
faddp
lcall
inc
inc
lcall
add
mov
ss
shll
cmpl
fwait
or
xor
xchg
pop
mov
xor
dec
mov
and
mov
mov
sbbb
lahf
mov
mov
mov
je
lods
lcall
jnp
in
shr
xor
jecxz
mov
xor
push
push
into
adc
imul
mov
jb
cmp
mov
add
jb
in
arpl
ds
push
mov
testb
inc
push
push
push
sub
xor
out
ljmp
outsl
ret
pushf
or
or
push
push
cld
jl
clc
jge
xor
icebp
push
mov
das
popf
push
cmp
in
lcall
inc
xchg
or
or
int3
push
shlb
or
push
push
adc
jge
andb
and
ja
inc
lods
jl
test
into
sub
xchg
leave
and
mov
icebp
add
iret
psrlq
adc
sbb
xchg
loop
lods
mov
out
mov
adc
mov
sub
sub
push
mov
adc
jecxz
inc
loope
add
mov
push
stos
push
xchg
push
xor
pushf
push
add
push
xchg
sti
shlb
add
or
aad
jne
xchg
inc
or
jecxz
nop
xchg
dec
xchg
cmc
xchg
insb
xchg
dec
push
add
shl
push
mov
or
pop
clc
outsb
adc
das
pop
jge
push
movl
cltd
push
lcall
lods
push
push
mov
nopl
jl
sub
adc
dec
aas
sarl
jo
sahf
and
outsl
aam
cmp
cmc
ds
xchg
loope
mov
push
cld
int3
ja
push
insl
syscall
adc
jge
loope
adc
mov
push
sub
xorb
sbb
lock
retw
jb
test
ja
mov
add
inc
push
ss
arpl
sti
insb
sbb
inc
mov
subl
cli
adc
xor
push
lahf
pop
movsb
repnz
pop
arpl
call
push
into
ja
jle
push
jle
int
jo
imul
cwtl
xchg
test
lods
scas
fisubrl
jbe
or
and
fs
jp
pushl
add
insl
xchg
jno
aam
mov
in
nop
pop
or
bound
push
andb
fidivrs
shlb
push
cmp
xor
xchg
xchg
pop
jb
jg
jo
pop
push
cmc
mov
adc
loop
mov
or
mov
ret
sub
leave
fistps
and
outsl
push
and
fnstsw
mov
in
sub
sub
imul
mov
mov
ffree
pop
add
mov
or
push
sub
sahf
or
sbb
out
add
enter
adc
int3
sbb
outsb
xchg
pop
and
std
test
addr16
out
rol
sti
or
lods
call
sbb
xor
iret
sub
je
push
or
rolb
idiv
cli
dec
insb
mov
bound
push
jp
or
add
in
outsb
pop
and
ljmp
or
insl
jb
test
mov
std
cli
in
pop
push
int3
mov
arpl
jecxz
pop
stos
icebp
push
test
stos
bound
and
jno
add
sti
pop
cli
lods
jne
jmp
popa
add
int
xchg
push
ret
inc
ljmp
test
dec
or
adc
xchg
inc
xor
or
inc
cmp
rclb
xlat
xor
ret
pop
fisubs
sbb
dec
jbe
lods
mov
dec
sub
scas
add
mov
jg
and
xchg
aad
repz
aad
sbb
sbbb
mov
lea
mov
lock
idivl
pause
sbb
inc
add
cmp
and
push
push
dec
daa
mov
movsl
mov
jecxz
in
push
mov
or
lcall
outsl
sub
movsl
test
fdivr
dec
popf
addr16
hlt
les
enter
shl
or
imul
sbbb
in
popa
pusha
xor
fldcw
cld
jb
adc
test
adc
inc
test
xor
push
push
bound
push
popf
and
mov
lods
mov
popa
dec
push
lcall
cmp
dec
frstor
loope
bound
pop
sarb
popa
mov
outsl
or
dec
adc
cmp
outsb
cmp
sub
rclb
clc
and
or
scas
cld
adc
pop
mov
std
out
das
dec
add
mov
sub
sbb
loopne
add
pop
inc
jb
push
mov
and
aad
dec
dec
ss
lds
test
mov
mov
ret
ljmp
cld
mov
adc
adc
out
pusha
lret
xor
test
push
sbb
stc
sub
out
arpl
add
or
sub
mov
shll
or
out
add
add
js
mov
pop
pop
nop
out
pop
add
sti
xor
jnp
into
arpl
pop
iret
adc
data16
mov
fwait
int3
ljmp
out
push
sbb
jo
aas
xor
mov
test
jne
cmpsl
xlat
mov
pop
inc
mov
push
sbb
call
iret
jno
lret
enter
ja
dec
mov
movsl
cmp
jne
cltd
lock
mov
test
jnp
mov
adc
inc
cmpsb
negl
rolb
adc
es
mov
test
or
outsl
mov
jle
mov
sbb
lcall
rorl
mov
shlb
or
cld
xlat
pop
std
int3
sub
sub
push
adc
xchg
outsl
fwait
xchg
add
call
mov
xor
sahf
fucomp
nop
lret
pushf
xor
cmp
outsb
push
je
push
andb
sub
push
pop
aad
loop
adc
sub
enter
mov
mov
je
les
cmp
jb
add
mov
jge
adc
xchg
dec
sub
out
push
into
jae
jg
pop
fbstp
fucomp
jmp
into
test
push
rcl
xor
clc
mov
xor
mov
and
scas
arpl
sbb
jecxz
nop
cmpsb
cmp
sub
addr16
inc
loopne
shrl
mov
pop
hlt
popa
dec
push
inc
dec
flds
mov
js
pop
iret
cwtl
scas
mov
sbb
add
or
popf
pop
nop
push
in
ljmp
enter
lret
out
adc
add
test
rcrb
add
mov
arpl
les
lods
adc
iret
cmp
cld
loopne
out
or
rolb
test
mov
pop
test
notl
movsb
push
mov
movsb
lea
cmpsl
xchg
enter
push
add
mov
adc
aad
jns
mov
pop
ffreep
pop
enter
add
lods
jno
mov
lea
inc
imul
repnz
and
movsb
dec
or
mulb
pushf
outsb
inc
mov
jge
flds
ds
out
xor
sbbb
jmp
mov
test
outsl
popf
shlb
ret
cmp
push
pop
aaa
cltd
or
mov
adc
ljmp
jl
mov
imul
lds
mov
lds
mov
pop
xchg
decl
push
fnstenv
fs
xchg
lahf
inc
repnz
out
pop
clc
rorb
out
out
les
notb
xor
push
push
adc
notb
loopne
cmp
int3
push
nop
jb
dec
movsl
icebp
cmp
sbb
push
mov
dec
loope
sbb
xchg
xor
xchg
mov
pop
repnz
add
mov
and
sbb
adcl
subb
cli
mov
ret
test
push
les
xchg
icebp
fisttpl
mov
jp
arpl
push
dec
cmp
xchg
xor
push
sbb
ss
sub
mov
xlat
cmp
mov
inc
inc
lods
repz
mov
ret
dec
sahf
mov
nop
shlb
xchg
mov
stos
jecxz
xor
pop
stos
mov
sub
sbb
cmp
inc
mov
stos
lods
sub
mul
add
mov
cmp
popf
push
jg
out
mov
mov
stos
pop
inc
dec
call
dec
mov
mov
adcl
stc
push
in
out
fstpl
imull
icebp
das
push
or
sub
pop
divb
mov
insb
sbb
cmpsb
repz
fcompl
in
insl
or
rcrl
orl
add
xor
out
mov
inc
xchg
push
scas
testb
in
test
sbb
sbb
xor
ds
mov
aad
inc
insl
test
jg
mov
or
sbb
nop
sub
push
dec
fisttps
testl
nop
lods
negb
mov
push
add
mov
push
inc
sbb
int
xor
setle
dec
dec
mov
push
fnstenv
cmpsl
cmp
loope
fimull
jmp
mov
cmp
rorl
bound
adc
sbb
cmp
bound
pushf
sti
pop
stc
cmp
xchg
daa
mov
xor
add
test
lcall
sbb
test
sub
popa
push
je
shrb
cmp
mov
pop
fcomip
jns
nop
or
dec
rcr
cmp
orb
sub
pop
je
int
jp
fisttps
popf
or
sbb
loope
pop
cmp
test
fistl
outsb
xchg
das
repnz
icebp
scas
dec
adcl
and
sbbb
popf
and
sbb
lods
jp
std
sahf
lea
cwtl
les
inc
jle
jno
pop
lret
out
lds
sub
or
inc
into
sti
ljmp
movl
jmp
dec
test
inc
mov
into
push
gs
lods
sub
pop
cmc
repz
cli
call
insb
sbb
test
outsl
clc
inc
pop
or
mov
pop
mov
repnz
out
jne
lds
loop
mov
add
fcom
int3
shl
xchg
jecxz
inc
in
test
and
jmp
push
adc
mov
inc
cs
testl
mov
pop
insl
mov
mov
iret
jne
andb
fwait
and
je
add
cs
pop
pop
mov
mov
push
push
fmull
aaa
lds
fldcw
lea
and
jbe
in
cmpsl
bound
lret
add
cltd
xor
sub
fldenv
test
inc
cli
call
into
pop
fs
mov
push
fdivl
mov
pop
jge
mov
jae
push
lods
mov
pushf
sub
out
rolb
push
loop
mov
dec
mov
fcomps
repnz
add
jge
in
out
scas
imul
mov
add
xchg
fcompl
dec
lret
inc
push
dec
add
mov
ja
pusha
push
pop
xor
xor
mov
inc
or
out
mov
cmp
jp
mov
sub
aam
mov
adc
es
sbb
aad
and
mov
inc
ljmp
rol
nop
cwtl
mov
aam
pop
neg
loope
dec
pop
sbbl
out
outsl
or
push
cmp
imul
mov
pushf
dec
xchg
push
jmp
icebp
mov
push
mov
shrl
push
sub
fmuls
add
jg
out
sub
sbb
mov
or
and
jmp
add
sub
cmp
in
shl
inc
xchg
jno
shlb
sub
hlt
push
rcr
iret
imul
movsl
xchg
push
xor
cmp
outsb
cltd
xchg
mov
shlb
lahf
push
inc
sub
insb
sub
xor
xlat
sub
fldenv
push
je
mov
xchg
fnsave
or
mov
lcall
test
fwait
shlb
lahf
je
push
iret
mov
loope
fcoml
cs
movsb
jae
jno
fldcw
jmp
push
rol
mov
in
adc
sub
pop
mov
cmp
jbe
fiaddl
sbbb
cld
nop
add
daa
enter
push
jno
xchg
out
inc
dec
cmp
push
cmp
inc
stc
repz
aas
rcrb
xor
sbb
mov
dec
cmp
adc
xor
pop
mov
xor
mov
cltd
rcl
xor
int
lahf
jge
sub
and
adc
pop
sub
negl
dec
mov
mov
mov
jl
ret
fs
popa
xchg
push
push
mov
nop
repnz
push
popa
aad
loope
loop
ja
xchg
shlb
cmp
mov
xchg
pusha
push
xor
sub
mov
jns
xchg
pop
mov
xor
xchg
out
push
fs
jmp
adc
hlt
testb
push
mov
lcall
sar
lret
mov
or
ltr
and
out
scas
and
divl
leave
aas
adc
cs
mov
andb
fsubr
ret
cltd
mov
sub
mov
lods
and
dec
jg
pushf
int
mov
pop
arpl
test
out
sbb
fcmovb
test
je
into
pop
sbb
sbb
mov
std
imul
std
dec
pop
jbe
cmpsb
sbb
scas
and
push
jge
sub
jnp
enter
rcr
roll
call
movsl
repz
push
hlt
adc
fsubrl
mov
mov
std
int3
negl
lods
pop
push
pop
push
pop
test
sbb
je
js
jmp
lahf
fiadds
add
shll
xor
rcr
pop
andl
ficoml
into
xchg
push
or
pop
mov
les
int3
fwait
push
push
pop
lds
push
shlb
or
cmc
cmp
xchg
inc
jl
shlb
mov
add
out
jae
js
push
sbb
enter
sbb
mov
add
lea
shlb
adc
xchg
push
cli
imul
mov
scas
inc
lcall
cmpsl
add
add
add
pop
scas
push
add
pop
sbb
mov
fstpt
cwtl
loope
add
fists
cmpsl
mov
adc
jp
ret
bound
ljmp
xor
adc
xor
cli
lods
push
jecxz
push
std
shll
rorl
test
data16
jae
push
cmp
rcr
adc
push
inc
add
or
or
rolb
movsl
pop
cld
addr16
fcomp
xor
loop
cmp
fs
lds
movsb
adc
shlb
loop
fistl
mov
ja
sarl
jne
sarl
rcll
das
and
mov
bound
pop
mov
push
test
xchg
repz
movsb
xor
fisttps
sarb
lcall
mov
jne
push
adc
loope
test
test
and
cwtl
gs
mov
cmp
cld
lods
jmp
call
mulb
ss
cmp
sarb
sub
insl
mov
scas
in
sub
int3
cwtl
aaa
push
int
aaa
das
pop
fcoms
cmp
mov
or
pop
push
shll
jmp
lcall
repnz
dec
mov
mov
mov
xchg
jno
inc
push
mov
fbstp
enter
or
mov
outsb
mov
rorb
fmuls
ja
push
rep
cltd
data16
xchg
aad
jnp
sarl
cs
aam
mov
rclb
adc
inc
shll
mov
xchg
bnd
movsb
inc
xchg
mov
or
add
data16
pop
dec
jns
adc
pushf
mov
out
lds
mov
jp
mov
sub
pop
jbe
or
xchg
lret
mov
pop
shlb
jge
std
cmp
or
test
pop
repz
fld
mov
scas
sub
divl
dec
movsb
stos
xor
cmp
ljmp
add
sbbb
cmp
sbb
pushf
adc
add
sub
mov
sub
jge
aam
inc
lahf
mov
cmc
xor
in
mov
scas
fcompl
xchg
imull
push
test
push
cltd
iret
sahf
mov
mov
dec
out
outsb
pop
pop
ret
inc
cmc
jl
mov
lcall
popa
fisubl
mov
cmp
add
mov
cmc
cmpsl
mov
mov
and
sub
idivb
dec
sti
int
cli
push
cmc
rcll
ss
jns
and
shlb
in
out
incl
cmp
add
int
mov
push
lahf
icebp
stc
mov
mov
arpl
gs
adc
sub
out
xchg
xor
mov
cmp
xor
pop
mov
push
ss
push
jmp
mov
dec
push
jnp
test
inc
xor
push
pop
sbb
ret
add
mov
xor
inc
sub
nop
pop
arpl
scas
mov
ret
cmpsl
stos
add
out
jg
and
mov
pop
rcrl
sarl
ror
cmp
mov
movsb
xchg
add
mov
cltd
lret
in
nop
pop
push
shrb
xlat
jge
movsl
lea
xchg
jp
xor
lret
mov
lods
out
cmpb
push
dec
sub
and
shlb
cmp
fwait
out
jb
xchg
dec
or
jle
mov
jl
sbb
cmp
sub
jne
loopne
push
jg
lds
cmp
adc
enter
cld
clc
lods
inc
cmp
popa
repz
jecxz
xchg
aad
in
xor
adc
dec
push
jnp
out
jnp
test
add
jmp
dec
arpl
icebp
xchg
jmp
mov
jecxz
out
imul
jge
adc
pop
xchg
pop
add
clc
aas
fildl
scas
clc
pop
popf
pusha
fnstenv
add
leave
movsb
stos
push
mov
in
ljmp
cmp
stos
mov
push
and
inc
add
dec
pop
push
push
ljmp
cmpsb
andl
jnp
dec
repz
cld
data16
loopne
icebp
iret
mov
lret
das
mov
fbld
add
push
fmul
pop
mov
je
ficoms
or
out
sbb
mov
xor
pandn
lods
push
cwtl
fcmovnu
repnz
push
fwait
data16
fcmovnbe
fcmovnbe
test
jbe
clc
jg
push
sbb
dec
mov
outsb
ds
mov
jo
das
imul
pop
xor
subl
mov
sub
adc
xchg
sbb
sub
aaa
lret
mov
in
mov
xlat
mov
xchg
rcl
arpl
enter
fisubs
jns,pt
xchg
sbbl
adc
adc
out
jno
test
outsl
jbe
sar
xchg
and
insb
lahf
lods
sarb
out
std
mov
mov
stos
insb
jbe
dec
dec
lods
cwtl
stos
push
jne
jnp
push
cmp
xor
sti
mov
and
aad
jnp
nop
cs
jle
adc
pushf
xchg
push
cmp
dec
and
into
jl
or
je
or
push
push
xchg
andl
and
popa
cmpsb
mov
idivb
adc
adc
sub
push
das
ror
jo
insl
mov
xor
pop
aam
push
jg
nop
out
jae
loopne
cmp
add
push
movb
cwtl
fs
out
test
in
mov
sbb
xchg
pop
mov
test
fidivrl
std
testb
mov
cli
sbb
sahf
sub
ret
daa
pop
and
fimuls
rorl
sti
cmp
mov
mov
rcrl
fwait
enter
sahf
enter
in
and
sti
stos
das
xchg
adc
mov
stos
gs
hlt
es
xchg
fmuls
xor
mov
out
add
mov
add
out
notb
int3
add
or
sub
pop
sbb
xlat
lret
jae
test
jnp
fisttpl
sbb
sub
jge
inc
cmp
mov
jns
movsl
repz
cmp
dec
cmp
fs
or
lds
fwait
jno
mov
push
sub
xchg
mov
xchg
arpl
stos
sub
aad
xor
dec
push
setp
les
xor
mov
outsb
sbb
push
cmp
stos
testb
les
negb
inc
jno
add
cwtl
decb
mov
mov
sbb
sbbb
ss
lods
mov
sbb
cmp
dec
ja
sub
hlt
jecxz
xchg
clc
ds
mov
mov
arpl
push
outsb
push
jecxz
add
mov
pop
andl
mov
fmuls
repz
mov
je
cmp
mov
sahf
into
push
jbe
mov
add
sbbl
cwtl
jg
xchg
inc
sbb
push
add
pop
loop
stos
scas
inc
lcall
in
push
pop
movsb
cli
cmp
jns
mov
mov
xchg
scas
and
xor
push
mov
fsub
xor
jle
add
push
add
dec
xor
jge
movsl
andb
lock
stos
pop
sbb
clc
pop
inc
jae
out
lock
mov
rclb
add
or
repz
push
out
nop
call
adc
jmp
ds
sub
lods
add
pop
adc
int3
lock
gs
test
dec
addb
mov
cltd
insb
out
mull
mov
or
cltd
gs
pop
or
and
mov
cmpsb
loop
add
das
lock
insb
inc
push
adc
aad
xchg
mov
push
or
fldcw
xchg
xor
jge
cmp
je
sahf
push
jg
int
aam
sub
popa
or
xchg
sub
pop
mov
fmulp
cltd
fs
xchg
mov
xlat
bound
es
rolb
lret
add
fs
mov
or
out
lret
jg
sbb
insl
jnp
dec
mov
push
xlat
jnp
pop
inc
jg
pop
mov
jnp
dec
lods
testl
add
add
das
mov
insb
shlb
dec
or
rclb
jg
dec
and
mov
lods
addl
cmp
sub
inc
mov
mov
adc
jmp
add
sbb
clc
inc
mov
icebp
pop
xchg
stc
ds
lahf
sub
adc
popf
pop
pop
xor
stos
mov
cmpsl
lcall
lods
cmp
dec
or
lea
lods
in
scas
pop
out
dec
fisttpl
sub
xor
retw
sti
xchg
or
mov
icebp
add
lods
ljmp
jne
dec
xor
jo
pop
jno
or
push
lret
mov
leave
jns
sub
stos
jl
mov
outsb
jmp
mov
cmpsl
dec
loope
test
cs
fbstp
mov
shr
sahf
mov
sub
clc
pop
mov
jl
out
mov
movsl
jp
cmp
rolb
ja
scas
mov
push
pop
jl
add
sub
and
cmc
and
inc
push
push
jne
lods
cmpsb
clts
int
or
pop
pop
cmpb
cmc
inc
xor
insl
xor
and
mov
aas
mov
js
jae
popa
outsb
mov
inc
adc
sub
sbb
jp
push
clc
adc
add
shrb
add
sti
cmp
dec
pop
in
scas
pushf
pcmpgtd
mov
mov
addl
out
mov
cmp
pop
mov
cs
addr16
sub
jg
and
sbb
mov
mov
mov
cmp
xchg
mov
iret
les
lea
js
dec
fidivs
fisubrs
mov
push
gs
fwait
cmp
xor
dec
aaa
xor
mov
lods
mov
or
nop
cmp
and
scas
jno
iret
outsb
into
or
test
out
js
or
mov
stc
push
cmp
clc
stos
test
dec
xchg
aas
adc
cmpsl
and
jne
mov
jno
push
repz
ret
or
es
sbb
xchg
cmpsb
mov
mov
lret
xchg
lahf
mov
mov
and
ror
sbb
andl
mov
jno
cmp
adc
mov
rcll
nop
push
pop
lds
bound
loope
data16
sbb
or
sub
lods
sub
inc
adc
arpl
repnz
clc
and
sub
xchg
pop
inc
mov
loop
mov
mov
fs
mov
bound
pop
mov
int
inc
dec
imul
inc
clc
sbb
shrl
ss
cmp
mov
mov
rorl
mov
xor
pop
pop
icebp
pushf
loopne
test
aad
push
ret
mov
decl
mov
shlb
stos
add
scas
insl
daa
jae
cmp
cmpsb
sub
and
in
push
scas
pop
lods
push
mov
loop
xlat
aam
and
dec
push
push
xlat
icebp
mov
mov
out
jl
imul
and
aaa
jmp
std
mov
sub
into
scas
sbbl
dec
inc
mov
pop
xchg
sarb
pop
orl
push
int
sbb
xchg
fildl
add
mov
jae
sbb
inc
add
insb
icebp
cltd
xchg
or
mov
sbb
pop
repnz
es
ss
xlat
adc
xor
test
sbb
add
imul
ss
adc
in
add
fcmovnb
lock
xor
pusha
imul
popf
sahf
xchg
in
pop
orb
cmp
adc
mov
insl
or
jno
lea
adc
xor
int3
scas
mov
lods
mov
inc
xchg
fidivs
or
rep
and
xchg
out
pusha
mov
pop
mov
jbe
jnp
scas
adc
js
push
xchg
cld
adc
dec
test
fmuls
fisubrs
subl
jns
mov
ja
mov
mov
add
stc
addl
sbb
inc
fldcw
clc
jmp
repz
dec
ret
cli
xor
push
adc
sub
call
mov
stc
xor
inc
push
int3
das
mov
push
flds
out
jo
gs
mov
fistps
int3
xchg
test
xchg
pop
xchg
and
pop
mov
daa
mov
xchg
dec
jg
xchg
enter
or
adc
cmc
jne
mov
cwtl
cmp
pushf
sbb
lods
mov
mov
and
pop
insb
sub
fstp
jg
mov
adc
into
ud2
inc
mov
jle
movsl
xchg
dec
gs
push
decb
shll
add
pop
lods
test
fdivl
jne
out
popf
adc
andb
scas
or
scas
js
mov
mov
movsb
cmp
outsb
lret
dec
push
leave
jnp
int
lods
pop
icebp
rorl
daa
or
xchg
fnstcw
sbb
push
push
cmp
or
insl
cmp
pop
sub
addr16
mov
in
ja
add
or
and
sarb
mov
lea
push
roll
stc
jns
jae
sub
addl
ret
cwtl
cmpsl
dec
adc
hlt
mov
arpl
aam
insl
cmp
mov
inc
fdiv
in
lret
inc
and
outsb
in
dec
fisttpll
fwait
sub
in
rol
sub
adc
lret
mov
pop
and
icebp
lret
insb
lods
jne
mov
mov
in
sub
or
aad
mov
mov
das
jg
arpl
mov
pop
sub
fwait
and
mov
add
out
out
adc
jge
jne
jge
test
and
jmp
or
bound
xor
lods
imul
insb
loope
movsl
pusha
push
and
or
and
pusha
jge
and
gs
ja
roll
adc
mov
arpl
xor
add
mov
sub
les
lods
clc
jae
push
add
cmc
addl
sbb
add
cmp
dec
fnstenv
sub
int
adc
pop
cmp
pop
mov
and
jg
aaa
arpl
sbb
inc
mov
shrb
sbb
ja
les
push
dec
sub
pop
xchg
out
jbe
xor
dec
or
adc
stos
or
push
adc
fcomps
outsb
add
test
ds
push
ljmp
aad
sub
push
jge
fiadds
lret
cmc
inc
push
adc
ud2
fldt
hlt
jl
pop
ss
add
xlat
xor
xchg
outsl
sarl
xchg
fistps
mov
fcmovb
popa
aas
cltd
pop
dec
mov
push
mov
mov
ret
in
mov
lahf
mov
xor
xor
pop
test
cli
and
ret
incl
mov
push
or
adc
xor
test
mov
rclb
sti
mov
xchg
sbb
jl
xchg
xchg
mov
jne
data16
mov
mov
sbb
or
test
sub
sti
mov
and
push
mov
jbe
stos
add
xchg
mov
mov
and
aam
push
mov
lds
pop
mov
inc
sbb
mov
lret
fdivrl
pop
inc
mov
loopne
in
lods
mov
inc
enter
mov
or
add
fwait
xor
data16
sbb
je
and
push
add
stos
push
adc
outsb
test
popl
add
stos
xor
jae
mov
jbe
jp
mov
mov
jmp
repz
adc
pop
jb
sbb
or
stc
mov
or
in
rolb
popa
sub
dec
mov
aam
pop
cmpsl
xchg
adc
push
add
sbb
sti
cld
pusha
push
loop
ljmp
icebp
mov
lods
rcr
dec
loope
movsl
push
rolb
sbb
sbb
insl
in
out
xchg
sbb
aam
push
push
add
add
das
add
hlt
aad
sbb
sub
scas
push
or
cmp
xchg
push
push
flds
fsub
aaa
pop
lods
or
into
add
aas
shrl
sbb
mov
in
mov
stos
aaa
loope
in
mov
test
dec
push
jne
orl
add
pop
out
mov
mov
lods
js
lcall
or
aam
insl
incl
pop
add
ret
daa
loope
inc
out
pop
les
dec
fnstcw
mov
push
xchg
push
iret
fisttps
into
adc
jle
mov
mov
orl
push
adc
stos
mov
dec
add
adc
test
xchg
lods
or
repz
inc
sub
call
jbe
js
jns
pop
ljmp
dec
je
or
xchg
push
sbb
cmp
shlb
push
dec
pop
nop
sahf
aam
cmc
push
sbb
jno
addr16
shl
into
xor
or
mov
push
or
in
mov
daa
xor
mov
loope
lcall
aas
sub
in
hlt
es
std
mov
inc
sub
push
pushf
add
pop
insl
lods
pushf
lret
aas
mov
rolb
cs
push
sub
mov
and
out
push
clc
cmp
inc
fbstp
fistps
mov
pop
sbb
jo
cmc
fmulp
pop
push
xor
push
mov
outsl
mov
lret
pushf
pop
sub
lahf
xor
gs
sub
and
xor
and
cmp
dec
shl
pop
test
xchg
loop
test
jp
inc
lret
rcrl
lods
sbb
push
pop
fisubl
jmp
sub
add
aad
and
push
jmp
loop
xchg
xor
push
in
testb
inc
cmpsl
flds
cli
jecxz
adc
jg
out
and
mov
leave
sbb
inc
inc
cmpsb
icebp
call
pop
call
lds
aam
insl
inc
or
jne
cmp
std
lock
jnp
or
jbe
pop
scas
test
push
jl
mov
pop
ret
pushf
js
fistpl
push
leave
or
int3
sub
jecxz
in
mov
jp
dec
pushf
sub
push
fildl
lea
mov
inc
sbb
inc
xlat
cmc
fisubrs
das
adc
repz
xchg
jo
sbb
xchg
xchg
push
mov
sub
jb
mov
sbbb
in
iret
xor
scas
or
add
xor
std
jbe
outsl
push
ds
fs
pushf
inc
in
mov
dec
xor
stos
mov
or
mov
cmp
jecxz
inc
push
ds
subb
inc
loope
or
fidivrl
test
pop
xchg
call
scas
lret
mov
addr16
ret
inc
xchg
or
fdivrs
jo
mov
mov
into
sbb
sahf
add
push
pop
mov
mov
mov
sub
or
lds
enter
notl
adc
call
sub
fmul
rolb
iret
mov
scas
scas
daa
jmp
mov
inc
xor
cwtl
pop
fisubl
push
pop
das
jmp
adc
adc
fiadds
pop
add
push
mov
cmp
rolb
pop
inc
iret
push
in
fimull
add
aam
movsb
bound
push
movb
clc
arpl
mov
mov
scas
add
or
xlat
ja
mov
inc
shrb
xchg
daa
cmc
xchg
push
pop
pop
dec
adc
ret
movsl
sub
rcll
leave
sbbl
push
movsl
into
hlt
xor
ljmp
adc
popa
pop
gs
pop
mov
imul
mov
imul
mov
bswap
test
stos
jp
push
into
push
lods
call
cmp
sub
mov
cmpsb
mov
inc
sub
xor
adc
inc
sub
sarl
into
jmp
mov
jl
sarb
mov
insb
lahf
mov
jno
push
cld
dec
push
add
into
cmpsl
inc
jge
aas
pop
sbb
enter
dec
stos
xchg
frstor
xchg
addr16
inc
stos
lds
mov
roll
bound
inc
test
and
push
movsl
push
cmpsb
sbb
adcl
cmp
lods
adc
sub
cmp
lods
dec
dec
pop
dec
inc
jne
aad
loope
xor
and
fdivrl
sbbb
aam
aaa
dec
aam
push
cmp
sbb
outsb
cs
mov
shrb
hlt
test
int3
pop
cmpsb
xchg
mov
mov
mov
push
into
jae
push
xchg
lods
cmp
fcomp
ljmp
and
mov
cli
lods
in
dec
enter
repz
dec
inc
add
pop
inc
outsl
shlb
sarb
arpl
fdivs
movsb
or
es
insb
and
testb
bound
in
mov
xchg
call
mov
ret
xchg
inc
and
mov
add
stos
fcmove
movsb
out
sarl
xchg
out
push
ret
xor
mov
jnp
xor
icebp
in
push
outsl
lahf
cmp
mov
sub
add
xor
jo
imull
outsb
movb
or
inc
add
aam
loopne
pushl
cmc
xor
add
xchg
into
xorl
into
out
push
fcoml
cwtl
test
nop
fisubs
cltd
dec
xor
add
out
cmp
pop
ds
mov
xlat
std
jmp
sbb
jmp
xchg
xor
inc
rcrl
loop
push
and
scas
dec
bound
jp
shlb
jns
mov
stos
pop
leave
cwtl
sub
xor
jle
add
aam
xor
pop
imul
lds
divl
mov
sbb
and
pop
pop
in
fsubrl
js
push
push
and
jb
xlat
pop
out
xchg
data16
mov
cmp
add
xchg
fsubrs
xor
sahf
sub
fistps
jne
dec
loope
pop
jecxz
outsl
inc
xor
xchg
fnstsw
imul
push
jp
cltd
shll
add
in
sub
pop
je
ljmp
dec
push
or
loope
adc
orb
jne
dec
nop
xchg
negb
fcompl
lods
pusha
and
push
pop
les
and
jecxz
pushf
inc
jae
fimuls
mov
mov
dec
lcall
pop
sbb
leave
sbb
aam
add
ljmp
or
leave
mov
in
aad
mov
xchg
loopne
imul
add
pop
xchg
cmpsl
leave
fs
pop
lock
stc
outsb
jecxz
mov
jg
fcmovnbe
scas
mov
cmp
loopne
add
push
in
sub
pop
jl
mov
imul
stc
rol
lahf
mov
repnz
testb
pop
enter
aam
shl
add
scas
into
pop
dec
fdivs
andl
adc
inc
loopne
xor
mov
mov
iret
pushf
xchg
mov
dec
and
mov
stos
or
mov
add
stc
jno
push
push
lods
ss
fstps
bnd
jmp
push
lea
lea
and
pop
push
mov
daa
mov
push
sub
ret
iret
iret
cltd
mov
fs
jl
push
push
xor
pop
es
cmc
push
movsb
sub
jmp
faddp
sub
jg
rclb
xor
xor
lahf
lret
and
adc
adc
pushf
or
cmp
rcll
and
mov
cmp
push
aad
xchg
pop
inc
push
lahf
and
sbb
repnz
ret
call
push
pop
int
jmp
addr16
or
sbb
xchg
mov
hlt
fwait
xor
mov
and
aam
cs
pop
lods
jno
and
jbe
inc
jbe
fcoml
popf
xor
iret
pop
sbb
sub
pushf
sub
and
mov
mov
enter
addb
jae
mov
sub
mov
aas
sub
xor
loope
loopne
iret
and
mov
jb
lea
or
sbb
cwtl
pop
or
inc
aas
ljmp
scas
mov
xor
xchg
pop
or
mov
pop
sti
ds
int3
pop
xor
push
mov
inc
mov
cmpb
mov
xchg
imul
js
xlat
xor
arpl
das
pop
jmp
hlt
repz
out
out
in
bound
insb
cmc
pop
mov
loopne
frstor
cmc
adc
inc
gs
mov
xchg
adc
cmc
mov
adc
outsl
push
or
push
dec
out
mov
xchg
add
sub
enter
movsb
push
mov
jb
xlat
jg
arpl
lea
xchg
sub
call
les
mov
xchg
hlt
or
adc
xchg
add
div
fstl
dec
and
mov
add
push
pop
add
inc
push
pushf
flds
push
jo
mov
js
outsb
dec
and
cld
shrl
or
xchg
sbb
inc
push
enter
mov
push
test
cwtl
mov
movsb
add
push
or
mov
jne
pop
iret
sbb
sub
xchg
ret
int3
or
xchg
je
test
loopne
or
push
jmp
and
and
lea
imul
movsb
icebp
xor
div
sub
shll
mov
mov
dec
popf
wrmsr
scas
or
sbb
mov
fsts
insb
bound
je
adc
xchg
test
and
adc
cmp
movsl
and
mov
pop
fs
adc
scas
iret
fwait
xchg
imul
shll
loope
jns
cmpsb
and
pop
mov
pop
and
xchg
sbb
ret
pop
xor
cltd
aaa
pushf
mov
and
jle
jb
or
xor
orb
mov
lea
inc
clc
xchg
add
push
push
xchg
lods
stc
dec
pushw
loop
push
adcb
popa
sbb
frstor
cmp
pop
push
jns
ud1
je
fs
jo
push
pushl
add
js
mov
mov
aam
jne
bound
out
adc
adc
jbe
mov
add
cld
scas
iret
push
mov
outsl
xor
jge
push
mov
cmpsb
mov
adc
add
inc
inc
fmul
xchg
push
lods
or
dec
scas
adc
mov
insl
or
adc
inc
mov
adc
mov
jbe
push
pop
jns
int3
stos
pop
int
sbb
std
mov
lret
pop
xor
imul
call
cmp
lcall
fsubl
test
out
mov
push
fucomp
xor
mov
add
cmpsb
repz
or
arpl
jp
movsl
ficompl
inc
ljmp
mov
out
mov
jae
cmp
inc
dec
lret
pop
iret
xor
xchg
add
mov
sbb
inc
lret
or
out
add
and
hlt
push
lea
sbb
outsl
imul
pop
dec
rol
out
int
xchg
xchg
mov
lret
push
stos
jns
cmp
mov
loope
aad
das
dec
insl
xor
push
fsubs
mov
xor
push
cmpxchg
sbb
lahf
adc
in
fwait
mov
adc
out
fisttps
jp
imul
or
fldcw
cmp
mov
dec
or
sub
fistps
sub
adc
jae
cs
sub
std
sbb
xlat
xchg
aas
rcrl
pushf
mov
inc
add
xchg
clc
lds
pop
shll
mov
sahf
sbb
stc
fwait
jne
mov
stc
adc
arpl
insl
pop
fs
test
push
xchg
mov
divps
add
cmpsb
dec
push
nop
push
mov
and
xchg
cli
cmpl
aas
call
and
cmp
adc
xor
or
and
popf
fwait
mov
jne
and
or
mov
add
sarl
adcb
add
jno
imul
mov
cmp
add
sbb
int
out
dec
xor
rcl
mov
insb
xchg
lea
addr16
mov
cltd
mov
movsb
xor
sub
jg
and
push
cmpsb
outsl
push
cmp
mov
cmpb
jb
mov
clc
addr16
stos
dec
push
sbb
inc
or
push
hlt
inc
cwtl
cmpsl
jns
in
xor
outsl
sti
adc
or
inc
pop
sbb
mov
lods
sbbb
mov
jg
sbb
mov
mov
mov
pusha
mov
scas
out
sbb
mov
fstps
lcall
xor
dec
imul
xor
fcoms
sub
scas
stos
movsl
sbb
mov
icebp
insb
outsb
int
pop
and
adc
rep
imul
lock
and
push
jno
jmp
loopne
imulb
test
les
and
stc
out
cmp
icebp
cmp
pop
fldenv
sbb
mov
pop
fwait
out
lods
or
rclb
push
add
dec
or
pop
lahf
int
movhps
cmpsb
incl
mov
cltd
mov
jae
cmp
sbb
repnz
movsl
leave
incb
mov
aad
dec
xchg
lcall
outsb
and
push
out
adc
xlat
pop
ds
pop
stc
ficomps
mov
out
je
nop
pop
repnz
in
fists
sbb
out
rcr
ds
cmpb
jmp
imulb
out
jnp
and
lock
es
fisttpll
in
add
and
mov
add
lahf
mov
adc
aad
inc
lods
push
imul
xor
cli
arpl
lcall
iret
nop
loopne
sbb
push
out
gs
xor
and
subb
mov
ret
sub
fnsave
in
xor
stos
ja
cld
ja
repz
data16
or
cmp
push
imull
sbb
sar
mov
ret
add
push
lea
in
sbb
jecxz
loopne
push
cmp
xchg
cmc
insb
dec
mov
nop
jae
in
mov
loopne
inc
pop
jb
out
orl
inc
mov
decl
sbb
add
xchg
rorb
adc
in
das
push
mov
or
add
addr16
inc
mov
push
sub
test
sbb
mov
call
jno
mov
push
orb
cwtl
and
fsubl
xchg
cmpsb
dec
sub
sahf
iret
jl
or
jle
test
out
sub
fcmovb
mov
or
ja
pushl
add
in
sbb
dec
push
and
fimuls
push
mov
dec
jne
mov
push
scas
cwtl
push
mov
pop
ja
pop
dec
sub
cli
movsb
jecxz
mov
fisttpl
insb
xchg
movsb
int3
xor
out
sub
inc
mov
sub
pop
jne
and
das
lret
pushf
push
sti
das
pop
or
lcall
push
and
xorl
cmpsl
jae
and
rorl
sarl
ret
inc
add
int3
loop
fistl
dec
xchg
loope
jle
aas
loop
dec
dec
sti
sbb
insb
cltd
mov
push
dec
out
adc
aaa
stc
rcll
mov
enter
xchg
push
cwtl
aam
out
lret
adc
adc
lea
jmp
dec
push
mov
rorb
mov
scas
mov
xor
pop
fwait
cmp
sub
inc
sbb
mov
js
jg
lahf
inc
rolb
push
das
mov
mov
xor
subb
xchg
shll
and
idivl
xor
mov
popf
cltd
xlat
mov
jl
shlb
imul
mov
sbb
out
imul
push
in
and
sub
mov
imul
orl
sub
loop
and
mov
iret
iret
jecxz
jo
aad
addr16
mov
pop
mov
rorl
jae
gs
push
sub
dec
repnz
into
leave
adc
jl
sub
pop
push
int
ja
adc
and
sub
pop
pop
mov
ret
push
xor
adc
fxch
shrb
adc
lock
mov
shlb
pop
lock
jge
xchg
jmp
mov
pusha
pop
adc
ja
scas
leave
pop
cmpsl
pop
orl
jecxz
testl
xor
mov
aam
mov
push
cmp
mov
pusha
cmp
push
xor
iret
std
sbbl
daa
sbb
sbb
ljmp
dec
sub
xchg
pop
xor
outsb
mov
fxtract
jo
leave
lds
xchg
cmp
sub
mov
fidivrl
lods
xor
cmp
mov
and
cs
cmc
xchg
dec
jge
xchg
push
dec
aad
push
stos
pop
sub
lods
jp
xchg
data16
mov
sar
arpl
test
inc
add
inc
ret
lret
or
add
sbb
xchg
enter
cmpsl
stos
andb
dec
ret
mov
lds
or
cmp
fcoms
sahf
gs
adc
xor
cld
fnstcw
inc
cld
aad
sub
jae
xlat
push
cmp
out
inc
into
adc
repz
roll
aad
inc
insl
out
mov
out
popa
and
ds
push
repnz
mov
mov
scas
leave
push
add
cmc
pop
mov
or
adc
xorl
mov
sti
cs
lcall
cmp
adc
cmp
cmp
or
push
xchg
adc
jbe
or
mov
inc
jb
les
jp
push
fadd
and
ret
sbb
cmp
leave
sub
sub
xchg
adc
ja
dec
jo
xor
sbb
jle
mov
or
cld
pushf
addr16
mov
inc
out
mov
testb
pusha
push
dec
jno
and
in
cmp
andb
lock
xor
lahf
jnp
sbb
mov
daa
push
mov
iret
ds
loopne
fstps
sbb
icebp
push
pop
cmc
xor
shl
inc
movsl
outsb
outsl
add
int3
rcrl
push
in
mov
pop
mov
hlt
fadds
cld
cmp
push
pop
jge
jnp
ret
ret
mov
loope
or
out
or
fcoml
adc
jl
cmc
jle
push
push
mov
orl
loop
mov
or
mov
sub
xor
cs
fidivl
addl
jbe
mov
int
std
inc
gs
jg
and
mov
push
cli
shl
aaa
sahf
leave
repz
out
sbb
daa
out
add
add
dec
jle
push
xchg
push
clc
cmpsl
daa
das
mov
aaa
and
leave
pop
fcmove
cwtl
jae
jno
add
and
jecxz
cmp
mov
or
cwtl
dec
jne
or
ss
inc
std
push
movsb
mov
loopne
insl
mov
jb
jns
insl
cmp
test
xlat
je
xchg
mov
rcrl
adc
es
mov
aaa
ljmp
dec
lahf
mov
daa
xorl
sti
fwait
cmpl
cld
in
sbb
jno
mov
mov
push
leave
adc
test
jmp
cmpsb
jge
xor
cmc
cld
fsubl
mov
popf
and
outsb
fsubrs
addr16
mov
loop
iret
fsubrl
push
test
cmp
xchg
mov
mov
leave
adc
pop
arpl
sti
jge
inc
frstor
and
pop
and
lods
imul
dec
and
je
lds
outsl
xor
aaa
repz
cld
and
lcall
push
lods
pop
pop
pop
fidivrl
mov
jbe
jae
xchg
adc
dec
push
daa
pop
stos
adc
jo
into
xchg
mov
stos
repz
xor
cs
jns
fimull
mov
dec
mov
ret
das
push
jo
mov
inc
fdivrs
pop
imul
xlat
out
cmp
test
mov
xor
rolb
leave
sub
decl
mov
pop
movsb
pop
dec
and
jns
xchg
mov
ljmp
loop
lahf
aaa
or
cmp
sbb
xchg
xchg
mov
mov
divb
adc
popa
fisubrl
jg
cld
subl
mov
jmp
popa
jg
sub
mov
sbb
add
repnz
xrelease
addr16
bound
adc
push
dec
xchg
into
mov
add
mov
mov
aam
jns
xor
and
jp
mov
mov
aam
sub
gs
mov
inc
or
test
add
mov
cmp
push
ds
scas
fldl
std
cmp
jno
sahf
sub
repz
xchg
lods
xchg
lahf
test
inc
daa
mov
inc
popf
jp
add
sub
sub
lcall
adc
dec
pop
sbb
mov
fwait
std
mov
shl
stc
mov
mov
popf
fwait
iret
imul
mov
fisttps
out
arpl
int3
lea
mov
lock
mov
pop
lea
movsl
bound
mov
mov
call
lahf
js
or
gs
pusha
movsb
loope
push
and
dec
mov
mov
stc
mov
aas
xor
dec
cmpsl
xor
and
lcall
pusha
pop
and
enter
lret
jp
loop
mov
loop
adcb
adc
sarb
xlat
cli
fs
xchg
mov
stc
lea
lcall
jo
push
or
jns
sbb
mov
xlat
jno
imul
xchg
pop
jno
adc
push
loopne
sbb
roll
adc
jl
push
aad
js
shrb
fnstsw
pusha
cmpsb
mov
lea
xchg
push
pop
shrl
ljmp
data16
mov
mov
mov
fwait
dec
add
jne
imulb
or
lret
inc
hlt
lret
popf
jae
enter
sbb
fcoml
adc
dec
fsts
jnp
shll
or
test
out
int3
inc
enter
jmp
scas
enter
out
cld
add
in
mov
andl
cmpsl
sub
jmp
push
xchg
inc
xorl
fnstcw
sarl
das
xor
push
push
pusha
pushf
add
arpl
jb
jle
test
bnd
imul
test
jbe
or
sub
pop
mov
js
jg
adc
jge
ret
ljmp
push
ss
and
iret
xchg
daa
sub
fiaddl
ret
repz
cmc
mov
leave
dec
lock
je,pn
push
xor
jbe
ficompl
into
pop
xor
std
outsl
int3
scas
mov
or
orl
jo
movsl
sbb
cmpsb
jl
and
jl
jp
push
xor
aas
insl
faddl
mov
in
sub
xchg
jl
bound
inc
push
out
and
and
repz
pushf
fimull
mov
stos
or
les
jne
mov
xchg
gs
mov
mov
cs
mov
call
in
lods
cli
test
sbb
inc
or
adc
sti
mov
lock
sub
insl
fstpl
aaa
adc
repz
ror
push
or
cli
imul
and
js
stc
fstpt
inc
gs
xchg
cmp
std
push
push
insb
iret
rclb
addb
adc
in
aam
jnp
mov
mov
loop
jno
addr16
add
hlt
in
scas
push
pop
cmp
testb
adc
add
mov
cmp
inc
xchg
jnp
inc
movsl
mov
fs
xor
pop
movsl
das
cmp
push
mov
mov
xor
dec
subl
mov
je
roll
enter
lret
mov
orl
sub
mov
sub
into
outsb
insl
mov
adc
inc
rorl
shlb
clc
ret
xchg
cmp
ss
mov
into
inc
mov
inc
pop
jno
jbe
mov
push
sub
mov
test
and
daa
sbb
push
pop
scas
incl
aad
cwtl
loop
xchg
mov
insb
mov
lock
xor
ja
sub
and
inc
in
dec
or
ror
test
pop
jb
mov
jne
repnz
fwait
sbb
and
adc
adc
fldt
jl
fwait
inc
jbe
or
jbe
mulb
fld
xchg
push
int3
or
ja
lahf
fisubrs
xor
mov
arpl
outsb
pop
jl
lock
mov
fucom
or
add
dec
testb
faddl
xor
and
rcrl
push
adcl
and
or
in
adc
inc
jns
lret
jbe
les
push
and
mov
dec
xor
faddl
ds
mov
cmp
ds
test
test
push
mov
int3
adcl
jno
outsb
adc
cmp
sub
pop
mov
jno
jmp
push
push
mov
push
xor
mov
add
mov
scas
in
das
faddl
mov
mov
inc
inc
movsb
sbb
dec
jne
sbb
mov
push
sti
int3
pop
adc
mov
mov
das
out
pop
push
jmp
xor
jmp
loope
mov
addb
mov
and
leave
gs
adc
hlt
mov
aas
roll
int3
jl
fidivrl
jp
in
jle
in
add
stos
imul
inc
mov
mov
xor
test
mov
scas
repnz
jg
std
sbb
push
iret
add
mov
daa
repz
ljmp
mov
mov
out
rcrb
adc
sbb
mov
push
outsl
lahf
jne
bound
sbb
mov
and
lock
sub
orb
dec
push
add
pop
xchg
cmpsb
push
mulb
and
test
mov
mov
movl
xchg
dec
imul
sub
into
mov
xchg
lahf
out
adc
sahf
lods
sti
jg
or
pushf
andl
push
dec
test
push
das
mov
js
and
mov
mov
outsl
mov
fnstenv
mov
outsl
test
lods
movsl
rolb
add
testb
pop
and
ja
iret
jbe
pushf
jnp
fs
std
push
and
cs
lods
mov
xorb
jg
incl
dec
das
jp
dec
xchg
insl
mov
and
pop
xchg
jno
aas
addr16
xor
addr16
cmp
or
iret
xlat
fs
cmp
dec
dec
pop
sbb
lods
and
pusha
cmp
pop
lahf
inc
push
aad
push
mov
xchg
add
imul
rcr
rcrb
sbb
stos
mov
mov
sub
inc
jecxz
ret
imul
sub
pop
scas
dec
xchg
pop
mov
nop
fadds
pushf
push
mov
mov
dec
cmp
xor
pusha
out
lret
xchg
inc
push
lret
dec
mov
push
pop
sub
inc
inc
adc
sbb
sub
shll
sbb
pop
pop
or
xchg
repnz
xlat
cwtl
cmp
push
fidivl
in
mov
in
dec
jmp
sbb
fidivl
mov
fwait
orb
rcrl
push
sbb
cmp
in
jecxz
ror
sub
lahf
vsqrtsd
sbb
or
sbb
fs
and
ficoms
jmp
inc
stos
adc
mov
cwtl
in
mov
and
add
push
add
xchg
push
xor
mov
pop
loopne
dec
xor
dec
pop
int
testl
jecxz
xor
jns
bound
fldl
dec
outsb
adc
iret
nop
jp
inc
pop
cld
and
pop
sbb
lcall
mov
dec
lcall
repnz
xlat
mov
xchg
add
imul
jbe
mov
pop
push
aaa
add
mov
lahf
push
or
sbb
or
stc
mov
rorl
jns
scas
add
in
rep
jg
call
sahf
pushf
rcl
mov
xchg
outsl
mov
cmp
je
add
xor
xchg
jb
repz
std
pop
mov
out
pop
adc
adc
mov
push
jne
add
outsl
xchg
mov
popa
sbb
inc
sub
dec
and
ja
jle
jge
mov
or
dec
pop
stos
push
adc
or
inc
sbb
pushf
je
fstpt
orb
and
cs
xor
stos
setno
mov
ljmp
mov
dec
push
inc
mov
mov
mov
xorb
mov
cwtl
inc
movsb
loope
inc
and
jp
add
in
push
fsub
loop
arpl
fists
add
out
pop
dec
sub
inc
jns
push
out
call
mov
mov
push
xchg
mov
fadd
call
jecxz
imul
xchg
xchg
dec
xor
mov
int
sti
inc
scas
push
mov
stc
subb
lret
push
cmp
sahf
lock
pushf
push
int
lahf
xchg
sub
call
ja
and
ds
out
jp
xchg
jl
or
cmpsb
fwait
inc
adc
xchg
fnstenv
xor
inc
mov
sbb
gs
lds
add
loopne
insl
mov
mov
mov
add
sub
mov
hlt
cltd
xchg
lods
mov
or
adc
enter
cmp
inc
pop
loope
imul
pop
ljmp
mov
lods
movb
call
mov
ss
insl
push
loopne
pop
arpl
pushf
or
mov
mov
mov
std
inc
movsb
movsb
sti
mov
fwait
ret
pop
es
inc
fsubs
xor
jns
jl
fdivp
ljmp
jp
das
repz
xchg
lret
fnstenv
aad
sub
rorl
sbb
enter
out
add
adc
sbb
xlat
or
fst
lcall
xchg
addr16
sub
popf
insl
rolb
lcall
cmp
pop
aam
add
dec
fs
cmp
loop
ja
and
xchg
vmread
mov
sub
fists
pop
or
pop
insb
out
fisttps
inc
scas
sarb
insb
pushf
test
jmp
mov
sub
lcall
lea
into
xor
movsb
lods
mov
jmp
lds
push
mov
lods
jmp
pop
scas
movzwl
inc
mov
scas
mov
xchg
xchg
cwtl
fwait
mov
mov
int
cli
divb
jmp
inc
loop
imul
pop
rcrb
sbb
in
dec
je
aam
push
insb
scas
repz
cmp
pop
mov
xlat
xchg
pushl
test
shl
aaa
cmp
mov
xor
icebp
adc
sbb
pop
shll
sar
cmpsb
sub
sar
inc
stos
cmpsl
pusha
or
add
loopne
push
push
jp
test
dec
jmp
jno
por
insb
sub
add
clc
aam
pop
imul
mov
ret
xchg
cwtl
mov
jecxz
rep
rorb
cmpsl
dec
xor
dec
add
loope
dec
btsl
or
shlb
adc
pop
repnz
movsl
or
cmp
les
lods
and
push
mov
in
stc
lock
insl
loopne
sbb
xorl
divl
call
insb
icebp
mov
mov
mov
sbb
dec
jnp
lahf
inc
cmp
stos
stos
outsl
and
pop
jle
clc
negl
int
fisubrl
stc
jge
adc
lret
fistps
jbe
fbld
into
dec
push
clc
add
enter
sub
popa
aad
push
icebp
mov
pop
add
cwtl
mov
les
adc
or
sahf
mov
jg
xchg
sub
push
out
cmp
ficoml
jecxz
push
xchg
sub
mov
mov
pop
stos
mov
jb
popf
outsb
roll
popa
mov
sub
inc
test
sub
and
aaa
cmp
and
inc
mov
xor
stos
xor
movsl
aas
test
jmp
movlps
mov
push
xchg
ljmp
loope
ljmp
xchg
add
popa
adc
xchg
jecxz
dec
cli
inc
push
jns
push
lahf
inc
in
cwtl
or
stos
sbb
push
es
test
jns
adc
jecxz
and
icebp
pop
jmp
adc
popf
cli
scas
fsubrp
shll
sbb
mov
insl
mov
lock
cmpsl
mov
int3
sub
sbb
into
ficomps
cld
in
repnz
scas
into
shr
cmp
dec
adc
cmpsl
out
iret
pop
xor
add
adc
int3
lret
test
mov
and
push
inc
in
cmp
fdivl
enter
inc
xchg
dec
jecxz
ljmp
add
inc
rcrl
test
xor
pop
lods
mov
insb
sub
and
insb
push
fs
je
in
jo
imul
stos
aad
inc
cmp
mov
test
icebp
fisttpl
pop
adc
inc
fwait
mov
mov
das
popa
mov
or
js
addr16
jecxz
adc
pop
leave
sarb
dec
ja
insl
test
jo
jge
xor
test
sahf
ljmp
shr
add
push
pop
pop
jnp
lods
jp
add
mov
mov
xchg
or
cli
xchg
lret
push
jne
cmp
sub
xorl
pushf
out
sbb
push
addl
inc
loope
or
sub
xchg
cmp
jb
pop
jp
fnstsw
adc
jno,pt
fsubs
mov
mov
call
loopne
fisubl
push
mov
or
sahf
imul
push
mull
pop
dec
lret
xor
inc
push
xor
aas
in
in
xor
cmp
and
pop
je
inc
cmp
mov
pop
jne
clc
mov
mov
inc
das
xor
or
dec
scas
shlb
jns
and
scas
addr16
or
mov
sbbb
outsl
xor
pushf
daa
push
fildl
lahf
add
or
pop
leave
sbb
into
test
mov
lods
lcall
sbb
dec
dec
aam
loopne
stos
add
insl
aam
or
mov
dec
mov
clc
fs
xchg
mov
test
push
mov
in
fmull
inc
ss
rcr
pop
aaa
mov
pop
dec
inc
cli
in
xchg
jns
inc
xorb
push
loope
jae
jns
xor
jbe
into
stos
call
mov
hlt
lcall
inc
mov
fbstp
cmpb
lret
cmpsl
gs
aas
sub
or
orb
dec
lcall
mov
mov
lahf
outsl
mov
and
mov
jne
or
nop
iret
push
aas
lret
adc
sub
cmp
xor
adc
mov
inc
out
sbb
jmp
xchg
lods
add
sub
lock
cmpsb
cmp
sbb
into
sub
ljmp
ja
js
push
popa
pop
xor
cld
add
cs
test
int3
es
add
mov
pop
test
sub
insb
ljmp
adc
test
lds
mov
sbb
addr16
ret
adc
adc
dec
cwtl
je
cmpl
mov
push
lret
mov
and
jno
jno
shr
dec
gs
out
push
ret
nop
jno
and
in
push
jno
mov
aas
or
repz
out
lock
pushf
adc
test
or
insb
jmp
or
mov
and
aam
sbb
xchg
fldcw
mov
inc
int3
shrl
aad
sub
adc
jnp
pop
fldenv
daa
mulb
mov
shrb
andl
push
stc
pop
pop
sub
movsb
std
add
outsl
inc
sbb
popf
mov
pop
addb
in
int
faddp
push
dec
mov
add
outsl
cmp
test
repnz
test
push
imul
sbb
enter
or
sbb
movsl
cmpsl
scas
mov
adc
mov
or
cld
adc
ds
sub
adc
out
pop
sarl
andl
into
lahf
pop
enter
div
pop
jecxz,pt
scas
push
aad
inc
or
jae
sbb
mov
out
loop
into
push
pop
xchg
cld
push
in
add
movsl
cmpsb
gs
inc
mov
dec
ja
dec
cs
xchg
xchg
pop
shl
push
push
cli
repz
iret
aad
and
ljmp
push
gs
repz
jbe
mov
enter
shll
mov
daa
pop
fcomp
add
aas
mov
sbb
inc
jmp
jae
fistpl
add
in
insb
cwtl
pop
jbe
int
push
pop
and
dec
xor
xchg
in
cltd
lahf
push
or
jo
adc
adc
jo
subl
xor
ret
stc
xor
repz
icebp
shrl
scas
outsb
lret
icebp
std
jne
jl
pop
iret
loopne
std
inc
cmpsb
xor
add
in
push
movsl
cmp
sbb
rorb
pop
pop
test
or
or
mov
adc
repnz
xchg
repnz
jg
fisubrs
mov
imul
lds
cmp
es
or
mov
loope
imul
mov
add
fstpt
push
rorb
pusha
mov
out
aas
shl
aas
rol
hlt
pop
push
out
lahf
pop
aas
mov
jne
adc
lret
and
adc
mov
xor
sub
and
adc
push
ljmp
sti
insl
test
leave
xor
mov
sbb
jmp
ret
les
jg,pn
sub
jo
xor
and
insb
mov
sbb
jg
out
test
arpl
ret
xchg
dec
lods
test
push
dec
int
mov
sbbb
mov
lret
sbb
xor
icebp
push
jecxz
hlt
or
or
lea
sub
fadds
iret
mov
test
lds
mov
dec
mov
les
push
test
push
repz
arpl
daa
dec
repnz
jg
rcll
fiaddl
int
or
call
cltd
fistl
jge
inc
jo
pop
sarb
test
sbb
mov
push
jno
pop
shr
jmp
fsubrs
dec
jns
mov
add
dec
popa
xor
mov
and
or
xchg
enter
cmc
mov
lods
test
outsw
int
sbb
mov
mov
inc
test
jb
xchg
fistl
pop
aad
enter
stos
pop
pop
xchg
jno
clc
and
jmp
and
divl
aas
or
cmpsb
push
push
add
push
push
push
insl
notb
movsl
sub
pop
ret
hlt
cmp
xchg
sbb
sbb
in
push
repnz
leave
cmpsl
pop
pusha
cmc
cmovp
xchg
push
xchg
lods
add
fldenv
sub
and
add
movsl
adc
push
addb
push
enter
xor
inc
pop
mov
xchg
fcmovnb
dec
test
lods
inc
or
lods
cmp
inc
mov
pop
sbb
xchg
fwait
push
xchg
sub
mov
out
test
out
or
jmp
icebp
loop
push
jbe
mov
or
push
add
imul
enter
loope
mov
xor
xor
add
jp
sbb
mov
or
or
lds
adc
jbe
out
mov
fbld
adc
lret
into
xor
enter
dec
sbb
inc
fistl
jp
out
push
insl
adc
aas
lds
aad
stos
pop
outsl
rol
mov
mov
xorb
shll
dec
sbbl
int3
adc
xor
inc
push
mov
andl
fwait
mov
cmpsl
dec
mov
loop
and
imul
test
rcr
or
and
mov
into
fs
add
pop
or
mov
ja
clc
stos
gs
sub
pop
js
daa
jb
stos
test
push
jno
es
loop
mov
adc
inc
sub
adc
daa
out
fwait
fs
clc
cmpsl
sarl
mov
push
nop
fdivr
mov
int3
clc
decb
lock
push
xchg
shrb
lods
movsb
xchg
add
mov
rclb
inc
arpl
stos
gs
add
mov
xchg
or
xchg
mov
pop
xor
cltd
out
les
push
mov
shl
test
lcall
jae
movsb
outsl
mov
jge
jns
xchg
sub
popa
and
push
dec
xor
mov
enter
les
xchg
leave
in
pop
add
pop
aam
nopl
clc
add
mov
leave
cs
jp
adc
xchg
sub
daa
gs
cltd
pop
scas
cmp
es
inc
sbb
test
movsl
sub
mov
aas
push
xchg
test
mov
call
ror
rcl
icebp
stos
and
jl
dec
mov
bound
aad
in
test
ss
xchg
pusha
xor
test
das
cmpsb
xchg
fcomps
adc
lcall
or
or
fidivrl
in
loopne
pop
das
imul
fbld
add
movsl
sub
outsb
push
inc
bound
mov
outsb
jns
adc
dec
insb
sub
lock
rcll
inc
enter
mov
mov
out
jb
repz
dec
push
sub
dec
cmp
addr16
loope
adc
in
fwait
or
lret
gs
add
push
shlb
sahf
gs
dec
mov
fsubr
push
add
outsl
add
ljmp
xchg
loope
icebp
lods
mov
cltd
in
adcb
cwtl
cmc
lea
xchg
or
mov
push
loope
mov
inc
lea
cmp
and
cs
push
jns
cmpsb
popf
and
addr16
stos
and
test
cmp
ret
outsl
test
shll
stc
mov
add
addr16
add
sbb
icebp
cmp
mov
xchg
cmp
sbb
in
lods
out
and
mov
dec
cmp
pop
stos
data16
sub
or
dec
jns
test
xchg
xchg
ja
dec
dec
adc
add
push
stos
mov
xrelease
add
add
insl
rclb
cmpsl
fmuls
add
mov
dec
mov
sbb
hlt
add
cltd
aad
cmp
aaa
xchg
add
nop
popa
test
push
dec
sbb
test
add
push
out
jl
jg
cwtl
add
jb
inc
push
xchg
rcrb
out
push
xor
jge
cmp
mov
sub
and
xlat
xchg
mov
fbstp
dec
cmpsl
add
mov
jl
ljmp
push
inc
call
cltd
push
xor
jp
add
jmp
push
adc
lods
inc
mov
push
push
add
mov
mov
or
xchg
cld
xchg
xchg
mov
pop
mov
pushf
es
mov
sub
xor
movsl
int3
lcall
lock
jle
mov
loope
mov
icebp
cmp
sbb
inc
and
ret
mov
dec
dec
popf
cwtl
pushf
mov
nop
mov
ds
std
or
cmp
inc
jb
xor
mov
mov
loope
les
dec
pusha
clc
xchg
xchg
mov
in
jge
mov
add
jno
rcll
inc
rolb
mov
test
popa
lods
dec
aas
lret
push
mov
fimuls
enter
subb
and
loopne
mov
popa
lret
fwait
or
push
pop
nop
aaa
and
rorl
aas
add
xor
pop
sbb
mov
add
ficoml
lcall
or
stc
inc
into
and
push
sbb
pop
push
ret
out
pop
mov
mov
sbb
pusha
aad
mov
inc
call
jb
mov
and
lret
xor
or
jg
lcall
cmp
add
cli
pop
or
mov
pop
clc
mov
movsl
pextrw
xor
out
in
push
out
pop
or
jnp
adc
mov
rcll
lcall
mov
lock
dec
fwait
shl
imul
mov
fbld
cmp
jge
jnp
jmp
jle
stc
pop
inc
inc
and
cmp
int
pop
sbb
cmp
cli
repz
or
std
fwait
shll
sub
inc
div
jge
xor
adc
xchg
mov
test
and
push
adc
sbbl
in
dec
adc
adc
sbb
out
clc
inc
out
mov
push
dec
add
iret
fsubl
xor
or
aas
sti
or
jge
fstpt
sub
outsl
mov
stos
scas
stc
addl
ret
pop
xchg
mov
sub
adc
sub
hlt
dec
xchg
dec
xor
fldcw
cmp
adc
popf
push
pop
sbb
xor
inc
mov
xchg
jle
inc
ret
pop
push
push
xor
add
ret
stos
enter
jle
in
mov
adc
push
lret
push
mov
adc
mov
xor
jecxz
cmp
fs
into
outsb
jb
lret
mov
or
pop
lcall
adc
add
and
jns
mov
addl
dec
inc
and
shlb
loope
shll
pop
out
dec
or
cli
mov
sub
shl
scas
mov
sbbb
xchg
or
mov
adc
push
or
or
dec
shrl
push
cmpb
dec
or
jl
les
or
dec
xchg
nop
loopne
nop
adc
push
adc
and
leave
inc
mov
pop
std
aaa
and
shrl
and
push
inc
add
or
dec
insl
movsl
inc
nop
movsl
push
inc
xlat
fidivs
sub
sbb
adc
jns
or
stos
add
mov
mov
cmp
fidivl
mov
es
cli
adc
lret
out
iret
and
out
sbb
jbe
jl
sbb
mov
cli
push
int3
cmp
xor
test
aas
jmp
int3
aad
fisubrl
stos
sahf
popa
xchg
ds
ja
in
jp
push
mov
pop
rcll
inc
ljmp
jnp
pop
mov
xchg
fsubs
ficoml
mov
add
repnz
stc
arpl
jp
push
ja
jb
int3
adc
or
push
push
xchg
mov
dec
sbb
xchg
push
cmp
mov
push
enter
pop
je
mov
pop
pushl
jno
imul
adc
mov
adc
xchg
not
pop
mov
repnz
pop
mov
arpl
dec
push
adc
stos
lret
fwait
pushw
dec
cli
fwait
xor
jmp
mov
adc
jno
jae
shlb
mov
and
push
add
or
mov
scas
or
lods
add
add
fidivs
outsb
dec
mov
popa
negl
pop
mov
aam
andb
adc
xchg
fwait
push
rcr
xor
js
adc
out
pop
outsb
sbbb
jbe
push
mov
mov
pop
pop
rcrb
inc
icebp
inc
push
xchg
push
mov
mov
stc
iret
mov
push
lods
out
cmc
fistpl
ror
inc
dec
adc
jecxz
adc
cmp
or
pop
lods
sbb
mov
test
push
leave
jns
push
aam
pop
cmc
imul
mov
push
mov
mull
cltd
jbe
inc
js
andl
jo
sbb
lock
sub
loopne
fs
add
pop
inc
arpl
movsl
xchg
sar
add
mov
jns
cmp
jecxz
cs
sbb
sub
sub
mulb
leave
xchg
lret
jo
clc
pushf
adc
mov
pusha
subl
lea
inc
or
outsb
add
sbb
xor
inc
push
mov
daa
sbb
aas
insb
xor
mov
lods
or
push
lods
xlat
pushf
fcmovu
lods
add
xchg
jne
xchg
mov
scas
in
mov
fsubs
xor
add
xchg
xchg
mov
outsl
cwtl
jle
add
dec
xor
dec
cmpsb
jnp
addr16
cmpb
faddp
les
lahf
push
push
lods
mov
xchg
inc
dec
fmull
lret
sub
lods
in
dec
push
mov
mov
xchg
fwait
sar
lret
jns
mov
or
mov
popf
repz
mov
pop
pop
pusha
mov
popa
leave
outsb
imull
mov
jg
insb
add
pop
xor
pop
dec
jmp
cs
mov
mov
adc
fadds
lods
loopne
cmpsl
aam
cmp
or
and
or
or
out
lods
push
jle
xchg
cmp
cld
lods
test
cmpsl
movsl
sbb
and
dec
inc
lock
and
gs
cli
insb
add
lahf
adc
dec
and
fcom
sub
mov
int
jns
pop
lods
mov
mov
mov
mov
adc
std
aas
ds
and
jbe
xor
mov
mov
mov
push
pop
rolb
nop
lcall
outsb
jns
decl
adc
or
pop
nop
xchg
push
pushf
fldt
mov
int
jb
sbb
fidivs
rcll
loop
jle
icebp
loope
inc
push
jne
or
divb
jns
dec
outsl
cmp
cld
scas
scas
shlb
dec
cmc
or
orb
push
fists
daa
jnp
add
add
adcb
fstpl
lds
mov
scas
mov
or
add
into
mov
cld
dec
dec
cld
mov
adc
aas
in
arpl
adcb
test
fbld
inc
mov
shl
mov
xchg
dec
pop
jmp
cmpb
adc
pop
in
pop
dec
sbb
and
roll
adc
jle
ret
cmp
les
sarl
aaa
cmpsl
and
insl
mov
inc
push
inc
test
hlt
andl
lret
pop
in
dec
arpl
adc
shll
dec
outsb
stc
adc
mov
ljmp
mov
jl
add
inc
loop
fidivrl
jl
clc
loop
nop
jmp
testb
mov
lods
cmp
popf
inc
sub
leave
xchg
jmp
dec
stc
push
out
shrl
gs
lods
lds
aam
cltd
lods
or
repnz
enter
xchg
dec
enter
divb
or
leave
lds
gs
lods
mov
pop
dec
fildl
xchg
sbb
mov
inc
inc
mov
sbb
rclb
jae
cmc
sbb
jge
xchg
stc
cmp
cwtl
push
sub
or
ja
in
xlat
in
incb
loopne
testb
in
stos
out
xchg
xchg
inc
mov
jns
cmp
stos
push
inc
cmp
lret
adc
inc
fisubrl
fnsave
or
adc
out
aaa
test
flds
mov
mov
clc
imul
sbb
push
cltd
mov
lock
imul
xor
jl
mov
insl
rcrb
jmp
push
daa
jae
push
cmp
mov
test
push
push
mov
insl
dec
call
fdivrl
pop
lcall
xor
xor
cmp
ds
jle
and
push
inc
iret
out
push
mov
push
adc
rcll
mov
fsts
cmp
push
or
fs
orb
adc
sahf
xor
ja
in
cmpsb
push
pop
mov
sti
sbb
pop
pop
scas
stos
enter
dec
add
or
push
inc
out
ficompl
add
cld
push
cmpl
mov
les
jg
sbb
or
outsl
filds
fwait
insb
sbb
xchg
xchg
mov
cltd
jg
cmpsl
mov
mov
stos
jb
rcrb
push
sti
int3
mov
scas
rorb
or
in
sub
push
jo
cmovl
push
pop
xor
cmpsl
cmp
xor
jle
aas
icebp
imul
push
mov
mov
xchg
sbb
add
nop
jg
mov
add
xchg
leave
inc
xchg
sahf
inc
test
sbb
out
subb
repnz
cmpsb
and
jle
pop
xchg
nop
jg
xchg
fucomp
std
popf
xchg
repz
lea
lcall
sti
push
sbb
and
sbb
cmpsl
xchg
add
cmp
and
pop
and
movsb
or
js
sbb
xlat
push
sbb
push
scas
bound
aaa
pop
inc
dec
pop
jge
xchg
idivl
mov
add
outsb
mov
xor
adc
push
and
addl
gs
inc
or
lods
mov
ret
mov
jb
lods
adc
cmp
pushf
and
stos
out
rcr
mov
iret
lods
xchg
push
loopne
push
push
xor
add
andb
mov
ret
or
rcrb
sub
xchg
mov
sub
and
xchg
enter
jp
xor
cmpsb
insl
popa
dec
inc
into
jle
cmp
cli
add
imul
sahf
stc
fisubl
add
or
popl
mov
repz
mov
and
push
mov
mov
fisttps
pop
mov
jg
adc
mov
leave
ss
sti
mov
in
lods
std
nop
insl
das
adc
adc
sub
testb
rcrl
lcall
pop
and
dec
add
mov
cltd
icebp
add
fistpl
pop
stos
inc
outsl
sbb
add
add
pop
aad
cmpsl
out
cmc
xor
mov
imul
repnz
jle
testl
and
xor
xchg
ljmp
cs
fstpl
jae
out
rorb
test
inc
push
lods
cmp
cmpsl
inc
scas
or
mov
sbb
jmp
mov
xor
das
pop
mov
in
push
and
pop
inc
mov
or
pop
push
test
bound
add
inc
int3
stos
cmp
push
adc
pusha
fcoml
lret
test
push
sbb
jb
lock
outsb
pop
or
mov
push
insl
or
add
pusha
xchg
scas
ret
dec
cmp
jmp
iret
and
roll
dec
cli
mov
xchg
jle
xor
adc
aam
repz
mov
arpl
mov
pop
pusha
mulb
push
dec
pop
pop
cmp
mov
or
inc
jp
mov
mov
pop
push
or
inc
jl
jae
andl
insl
mov
int
jl
xchg
xchg
mov
jl
loope
inc
lahf
fldl
loope
and
xor
sub
in
push
pop
pusha
cmpsb
pop
lcall
pop
dec
enter
sub
push
es
rcrl
mov
mov
xchg
mov
inc
sbb
sbb
pop
xor
mov
sbb
repz
repz
outsb
dec
jp
ret
ja
popf
xlat
insb
fsubrs
jae
scas
fstpt
jge
aas
xor
into
mov
shlb
or
and
cld
aas
mov
xor
xor
testl
and
pop
pop
fucomi
mov
push
pop
imul
sub
sbb
aaa
sub
or
mov
out
pusha
test
jnp
cmp
mov
pop
iret
fbstp
xchg
outsb
scas
clc
leave
pop
cmp
jmp
lcall
test
rolb
xchg
or
js
sbb
insb
inc
dec
jmp
popl
cmp
inc
jge
leave
pop
inc
cwtl
je
xor
sub
movzwl
ret
ffree
sbb
icebp
add
orl
inc
icebp
pop
mov
int
inc
jnp
inc
add
in
jmp
push
pop
jnp
sbb
out
and
push
popa
inc
push
sbb
cmc
cmpsb
jle
repnz
add
sahf
scas
cmp
pop
daa
xor
jecxz
lds
sub
outsl
cmc
call
mov
xor
in
add
xor
mov
or
or
push
dec
jno
fnstcw
cwtl
xor
popa
mov
xor
mov
push
mov
testb
lods
std
gs
in
test
jae
and
xchg
orl
xor
mov
sub
cltd
mov
cmp
into
test
pop
xchg
pop
cmp
or
push
jl
xchg
in
pop
add
sbb
imul
push
sub
or
dec
cmp
cmp
adc
mov
mov
je
ret
orl
js
pop
les
inc
jno
test
fcoms
mov
dec
cmp
mov
das
cmp
and
lret
xchg
dec
xor
mov
popf
rorl
fcomps
dec
xchg
insl
cmc
in
mov
xchg
loope
test
stc
adc
aaa
js
dec
int3
vaddps
sti
add
or
push
push
push
sub
ret
arpl
xor
daa
xor
xor
jbe
jge
aad
xor
aad
addl
adc
pop
sarl
jnp
jns
push
lea
and
mov
jl
mov
cld
or
push
mov
push
aam
jae
and
inc
jg
mov
je
clc
fistps
mov
or
idivb
repnz
into
aam
test
ss
jmp
inc
cmpl
movsl
or
shrb
pusha
out
rcl
jge
jmp
xchg
inc
mov
in
lahf
in
filds
ss
je
fistps
mov
fisubrl
clc
mov
inc
inc
icebp
sbb
and
inc
repz
aad
pusha
push
insl
xchg
or
cld
stos
sbb
mov
pop
jg
sub
hlt
mov
loop,pn
adc
das
imul
insl
mov
xchg
jb
xor
xor
inc
loope
push
dec
sbbb
stos
std
jns
xchg
dec
loopne
movsb
and
ret
inc
shlb
out
scas
and
daa
and
fisubs
xchg
cli
mov
add
stos
adc
into
inc
mov
cmp
sti
jae
pop
mov
mov
ljmp
dec
cmp
in
and
data16
sbb
sbb
scas
sahf
pop
clc
xor
lock
movsb
ljmp
and
in
or
push
dec
ret
cltd
xchg
inc
sbb
je
or
clc
cld
inc
pop
jae
mov
and
addl
sbb
cmp
dec
jae
js
inc
jg
mov
call
jmp
push
mov
loope
sbb
xor
cmp
and
lcall
inc
jge
loope
push
lcall
je
sub
data16
push
dec
loopne
clc
sarl
or
movsb
cmp
jne
xorl
iret
fdivrs
cmp
dec
add
idiv
cmp
push
ljmp
iret
mov
mov
imul
invd
shlb
pop
sub
dec
insb
out
inc
and
or
jbe
mov
jp
push
mov
dec
sbb
pop
pushf
pop
xlat
outsb
push
cmp
aas
into
stos
lock
fwait
je
out
shll
popf
aaa
pop
cmpsl
out
insb
call
jp
push
inc
sub
cli
jns
mov
aam
ficoms
fdivl
sahf
rclb
cmp
mov
shl
inc
enter
das
sarl
pop
sub
sahf
lcall
cmp
adc
pop
push
gs
pushf
je
jle
mov
adc
outsb
sbb
lods
pushf
js
out
cmc
mov
inc
repz
inc
lods
sub
add
data16
pop
clc
jge
mov
enter
sub
jle
jae
fstl
mov
pop
inc
stos
daa
pusha
jecxz
lahf
or
pop
inc
out
sub
adc
iret
mov
jae,pt
mov
roll
outsl
mov
fisubl
lods
mov
mov
mov
popa
lock
push
xor
xor
jbe
sbb
movb
lea
das
and
scas
cld
xchg
push
idivb
jp
pop
movl
xchg
es
adc
mov
mov
xor
pop
lock
mov
pop
scas
arpl
add
xchg
enter
and
jbe
aam
xor
jnp
addb
cld
mov
mov
ljmp
mov
aas
jle
mov
sub
cmp
mov
mov
dec
push
push
fcompl
push
adc
xchg
or
jbe
adc
sub
int3
movsb
xor
int
mov
cmc
cmp
sbb
scas
daa
fstpt
cs
popa
and
adc
mov
inc
add
sub
ja
lahf
adc
mov
in
cmp
and
jl
jo
mov
add
subl
stos
mov
jg
aas
and
mov
stos
and
pop
outsl
ljmp
push
or
js
mov
lret
test
add
call
leave
loope
psrlq
or
movsl
nop
iret
push
sbb
cwtl
add
mov
hlt
pop
scas
or
out
shlb
adc
cmp
andl
inc
adc
test
test
out
insb
pusha
ret
pop
cmp
pop
nop
enter
pop
roll
sbb
addr16
sub
jo
mov
int3
gs
js,pt
mov
lcall
jns
jo
pop
push
cmp
xchg
ficompl
test
aaa
push
imul
mov
cmp
mov
mov
repnz
fildl
xor
movsl
push
dec
gs
outsl
fcomp
iret
pop
fbstp
addl
test
push
jne
mov
movsb
xchg
das
mov
jae
jge
xor
call
scas
jbe
sbb
sbb
xchg
mov
push
pop
sti
add
xchg
cmpsl
cwtl
inc
mov
xor
pop
jle
and
lcall
pusha
add
cld
pop
scas
xchg
andl
push
out
sub
dec
insl
sub
xor
lods
push
push
inc
dec
lods
sbb
mov
xchg
loope
mov
testl
bound
movsb
or
adc
std
imul
push
faddl
dec
push
sahf
cmp
daa
adc
popa
or
fmuls
cwtl
divb
ret
sbb
pushf
and
das
frstor
in
sub
aam
jp
int
pop
sub
inc
or
shrb
mov
xlat
sub
sarl
add
cmp
dec
imul
cwtl
fiadds
daa
inc
mov
pop
aad
push
mov
mov
xchg
dec
in
popf
sbb
jb
dec
in
sub
pop
xchg
sub
jnp
dec
sub
or
cmpsb
loopne
popf
lret
aas
mov
and
das
push
fnstenv
in
inc
loop
mov
add
pop
sbb
add
outsb
sub
or
lahf
inc
outsb
scas
adc
rcrb
mov
pop
in
cmp
out
add
sub
andl
fnsave
push
pop
shlb
adc
and
dec
pop
xchg
jg
mov
cmp
fcmovnbe
mov
sub
add
divb
arpl
mov
and
pop
inc
hlt
xor
inc
push
nop
mov
lcall
lss
mov
call
jge
fmull
ret
stos
jle
std
sub
insl
sbb
lds
or
jl
rorb
loopne
fwait
scas
mov
push
add
mov
ja
sbb
in
cmp
jmp
jle
popa
jp
aam
dec
ja
test
subl
mov
cs
xchg
pop
test
jae
jbe
mov
sahf
push
ljmp
andl
lcall
out
or
pop
mov
dec
int3
jmp
pop
in
xor
mov
jg
push
andl
xor
push
dec
movsl
shlb
hlt
inc
stc
pop
xlat
cmc
mov
outsl
int3
out
xchg
adc
xchg
lret
shll
cmp
mov
xchg
shr
shll
cmp
push
dec
loopne
in
xchg
enter
stos
aam
pop
pop
xchg
and
cmpsl
cmp
insb
lret
push
outsb
roll
push
xor
shrb
les
add
inc
test
jmp
add
sbb
scas
adc
jno
pop
sub
jae
inc
and
pop
shl
jns
dec
iret
sub
lods
inc
mov
cs
daa
sarb
shr
lahf
test
idivb
out
pop
jle
outsl
das
or
popl
xchg
adc
clc
jmp
pop
fsub
xorb
int3
gs
sbb
stos
xchg
xchg
lock
sub
inc
leave
bound
es
into
cmp
imul
loope
jl
xor
mov
inc
mov
adc
pusha
mov
cld
add
xor
mov
movl
cs
mov
enter
xchg
cmpsl
dec
mov
cmp
sti
xchg
add
in
mov
xchg
xor
scas
imul
or
shrb
mov
and
pop
pusha
mov
call
cmp
aas
inc
add
adc
in
das
or
mov
dec
fcmovnbe
pop
cltd
cmpsl
jne
jmp
mov
push
sbb
jo
lea
cltd
push
imul
or
inc
xor
pop
jnp
or
mov
jp
int
add
cmc
ret
ds
and
xchg
xchg
shl
subl
iret
addb
cmpsl
sbb
pusha
call
sub
jmp
xchg
sub
outsl
inc
test
or
fisubrs
test
shrl
int3
addr16
lock
push
cmp
or
nop
mov
sub
inc
nop
loope
lret
cli
cmp
mov
popa
mov
push
mov
daa
into
loop
scas
xor
or
call
orl
fyl2xp1
inc
xchg
xor
and
not
push
xchg
loop
es
inc
push
cwtl
jns
lcall
mov
inc
pop
xchg
out
leave
jg
jo
mov
dec
in
lret
xchg
data16
cmpb
cmp
push
scas
pop
add
mov
out
xchg
pop
clc
lds
or
pushl
or
push
aam
push
and
or
loopne
test
idivb
xchg
cltd
ljmp
sti
jno
fisubrl
dec
fnstenv
daa
push
fistpl
jne
sahf
dec
jl
lds
lret
sahf
push
pop
mov
and
mov
inc
das
outsb
mov
cwtl
add
cltd
and
lret
movsl
stc
or
test
fidivrs
push
nop
push
insb
fwait
lret
stc
lret
xchg
push
ds
and
repz
enter
out
lcall
ds
add
adc
subb
push
lea
adc
fists
pop
jge
push
es
sub
sub
cltd
cmp
push
pop
pop
dec
mov
sub
xchg
xchg
cltd
jo
mov
mov
mov
std
out
mov
jbe
xor
aam
cmp
pop
out
enter
lea
xchg
push
push
rorb
lds
in
sub
ljmp
pushf
add
in
subl
ret
ret
mov
push
adc
push
shl
cmp
sub
push
push
pop
lcall
scas
iret
ret
inc
add
sbb
loope
bound
cmc
or
repnz
and
cwtl
xor
sub
leave
push
push
adc
jecxz
cmp
cs
dec
outsb
pcmpeqw
sub
aad
addr16
cmc
jecxz
enter
jb
stc
push
inc
lcall
xor
fdivl
int3
mov
lret
xor
fwait
push
jp
lea
sahf
iret
pop
jl
stos
cmp
sub
fs
mov
lea
imul
mov
jl
inc
or
xor
adc
clc
dec
push
adcb
lcall
ja
sbb
test
inc
sub
cmpsb
and
jp
dec
add
inc
adc
push
pushf
cmp
pop
pop
pop
add
mov
lcall
mov
sbb
mov
jbe
arpl
adc
jecxz
pop
outsl
jecxz
xchg
mov
std
mov
jnp
cli
lret
sarb
xor
inc
cmpsb
xchg
shr
ret
scas
xchg
loopne
sbb
lds
mov
lcall
repz
mov
sbb
and
dec
push
xchg
ds
flds
or
cs
xor
cmp
mov
or
imul
jge
cs
mov
xchg
loop
cmp
ja
lock
pop
dec
push
lea
rorl
xchg
push
dec
or
sbb
mov
cmpsl
mov
push
jecxz
mov
jne
mov
mov
mov
pop
lods
mov
fwait
test
dec
cmp
pop
pop
push
jmp
or
es
mov
icebp
and
insb
cld
mov
daa
sbb
xchg
idivb
jo
fcompl
pop
lods
call
sub
mov
xchg
mov
xor
ret
push
faddp
pop
mov
nop
pop
adcl
cmpsb
jnp
movntq
popa
jno
dec
ret
sub
addr16
mov
popa
inc
mov
adc
fs
imul
jmp
out
xchg
and
lahf
out
outsl
xchg
mov
jae
mov
lods
je
add
and
mov
shl
dec
pusha
aas
clc
pop
pop
push
mov
and
out
sbb
add
add
lock
in
inc
aad
addr16
inc
ret
jle
mov
lds
push
test
adc
xchg
pop
add
mov
mov
loopne
or
sbb
test
sarb
cmc
movsb
mov
jp
jb
ret
pop
outsl
daa
or
mov
xor
cwtl
mov
lock
cwtl
mov
or
mov
aas
dec
push
xorl
push
ljmp
mov
xchg
mov
push
mov
adc
lds
enter
pop
in
mov
push
or
sbb
sbb
add
neg
fs
lock
fwait
xchg
iret
adc
jl
arpl
mov
movsl
movsl
loop
pop
add
mov
sbb
and
out
sbb
cmp
pusha
mov
adc
shr
add
xchg
xor
jae
pop
mov
mov
cmpl
or
js
sbb
push
popf
cs
nop
loope
into
and
mov
lock
pop
dec
daa
popa
sahf
popf
sarl
mov
cmpb
or
pop
and
in
lock
fsubrs
das
leave
mov
mov
imull
les
mov
scas
pop
xor
push
out
xchg
mov
pushl
xchg
jne
lret
pmaddwd
cmc
xchg
xor
sahf
or
push
xlat
popf
and
out
adcb
sbb
add
test
or
ds
mov
add
mov
xchg
adc
push
insl
fidivl
je
ss
xchg
cmp
ret
lea
jno
jl,pt
or
pop
push
sbb
adcb
insl
stos
pop
lahf
push
cmp
jle
mov
repz
insl
movsl
adc
roll
shrl
rcrb
pop
sbbl
adc
push
mov
mov
add
insl
xlat
in
out
jge
xchg
xchg
loop
push
clc
test
mov
mov
test
pop
add
push
ret
lret
add
jp
xor
sub
or
out
fistps
xor
je
out
dec
data16
clc
push
pop
xor
mov
lcall
cmc
pop
adc
jmp
stos
in
jnp
dec
js
pop
in
stos
mov
or
jg
pop
fwait
mull
push
pusha
ret
fucomip
jb
pop
cmp
mov
fisubs
push
mov
fdivrs
decl
add
pop
xchg
cmc
roll
sub
mov
call
mov
xor
movsb
push
dec
fwait
pop
or
push
and
jmp
addr16
mov
outsl
push
sbb
mov
jge
and
jle
jne
sbb
pop
lea
sub
notl
add
mov
push
jns
push
test
je
push
les
dec
out
aaa
arpl
jl
fistps
andb
sub
push
cmpsl
xchg
cwtl
add
divl
xor
sbb
cmp
xorl
sti
cmc
mov
sub
pop
sbb
es
sub
sbb
ljmp
push
or
into
mov
adc
push
fnstcw
or
jmp
add
mov
push
and
xchg
in
cmp
add
fsts
sbb
mov
mov
jbe
xchg
mov
push
lcall
mov
fnstcw
hlt
ljmp
aaa
lret
ret
and
popf
call
mov
cmp
xchg
std
sbb
mov
push
scas
mov
or
fistps
out
mov
out
adc
jne
das
or
xchg
orl
push
xlat
or
sahf
aas
jb
push
int3
jnp
dec
ljmp
jns
je
stc
subl
add
mov
mov
add
fwait
orl
xor
popf
push
dec
mov
in
add
sbb
leave
lods
adc
sahf
xor
dec
sub
cmp
mov
sbb
push
dec
rorl
inc
fs
dec
lods
and
push
dec
sbb
xor
add
ja
or
call
mov
or
cmp
loope
mov
pushf
insb
and
push
xor
cwtl
insb
daa
icebp
js
add
inc
jmp
cmpsb
icebp
notb
inc
ja
aaa
dec
call
pop
es
loopne
add
push
ja
shll
xor
jle
adc
mull
and
pop
sbbb
mov
cmpsl
out
jle
outsb
inc
fwait
insl
inc
xor
mov
cmp
mov
mov
loope
mov
mov
rcrb
popa
jns
dec
fistpl
test
pop
push
fsubl
xor
cs
sti
hlt
jno
inc
fistl
xor
jns
das
into
push
sbb
movl
leave
pop
mov
or
das
int3
cmp
sarb
icebp
pop
adc
out
into
iret
push
testl
sub
adcb
jp
mov
in
or
imul
cmp
lds
loop
mov
stos
sti
dec
and
mov
int3
ret
hlt
cmc
pop
cmpsb
cmpsl
xchg
sbb
adc
ret
loope
mov
cmp
daa
mov
leave
push
or
mov
fcmovb
dec
mov
inc
movsl
jecxz
adcl
xlat
in
jns
xchg
mov
sar
lret
sub
add
lods
inc
shl
push
rcll
push
ret
mov
aaa
inc
out
cmp
cmpsl
mov
jnp
push
jno
pop
stos
inc
in
and
adc
cltd
test
ret
xor
in
mov
push
push
adc
xchg
hlt
fsqrt
cmpsb
call
mov
fdivrs
dec
xor
int
jg
ljmp
xor
aam
push
mov
and
jmp
or
sub
loope
cmpl
adcb
fisttps
or
mov
or
add
in
ret
mov
cmp
push
pop
sbb
std
pop
dec
stc
dec
adc
xlat
and
movsl
outsl
ds
fsubrl
clc
pop
jle
test
cmp
and
and
xchg
movsl
mov
mov
mulb
icebp
aas
sbb
mov
aam
xchg
aaa
mov
fsubp
mov
shrl
out
rol
data16
stc
mov
mov
shl
sbb
daa
mov
es
test
xlat
cmp
mov
inc
int3
pop
into
jmp
xlat
cmp
stos
pop
cmp
ja
dec
lods
or
insb
mov
mov
popa
push
ljmp
push
xchg
xchg
fadds
addr16
test
repz
ret
adc
push
insl
rcrb
cmp
cmpsl
xor
sbb
not
enter
sub
push
add
pop
or
enter
rcll
xchg
mov
jno
fwait
mov
pop
es
subb
jo
test
in
fisubrs
rcrb
subl
push
mov
adc
inc
leave
in
decb
int
rcrl
fs
pop
stc
lcall
mov
in
out
aas
cmp
mov
in
mov
rcl
add
fisttpl
idivb
sti
or
les
mov
aaa
and
mov
mov
lock
test
mov
mov
xchg
add
xor
push
aaa
faddl
mov
cs
cmp
and
adc
pop
xchg
jns
xlat
jns
scas
and
insl
inc
jbe
addl
jle
adc
les
push
cmc
pop
or
mov
add
in
sub
mov
enter
pop
ret
xchg
jns
mov
leave
xor
adc
lret
and
jmp
rcll
scas
js
sbb
mov
int3
mov
add
fs
inc
jne
mov
mov
pop
ss
pusha
xchg
dec
js
mov
nop
push
inc
jle
into
movsl
addr16
sahf
pop
mov
inc
cmpsb
sbb
jbe
popf
out
lock
mov
out
jae
or
shlw
xor
out
xchg
fwait
stos
stc
fnstsw
push
pusha
jbe
mov
mov
push
cmp
adc
or
rorl
jo
stos
cmp
or
mov
ret
rcrb
sbb
rcrl
fnsave
fsubrs
jg
ret
int
sbb
mov
aam
das
add
add
aad
mov
ljmp
xchg
testl
out
xor
cmp
pushf
mov
cmpsb
fwait
jle
xchg
mov
cwtl
aad
mov
popl
sti
mov
fisubrs
mov
xchg
mov
enter
adc
sub
sahf
jecxz
or
shll
shlb
push
or
mov
les
mov
rcrl
in
cli
iret
je
out
imul
jg
pop
fdivr
push
arpl
repnz
sub
pop
adc
sub
push
es
ret
stc
loopne
inc
stos
fs
and
rcrb
in
mov
jp
mov
push
out
scas
jbe
or
pushf
mov
inc
clc
mov
int3
jbe
dec
stos
repz
das
pop
aaa
dec
cmp
inc
xchg
mov
out
fbld
xor
and
in
adc
shlb
iret
xor
dec
inc
mov
shrb
sldt
dec
sub
mov
loop
cmp
test
adc
push
nop
inc
mov
jg
push
cmp
iret
lea
lahf
mov
fucomip
xor
imul
or
jge
int
scas
insl
inc
and
xchg
scas
pop
mov
pop
pop
mov
inc
and
add
cmp
cs
xchg
add
shr
dec
jge
mov
in
adc
add
pop
or
dec
js
or
ljmp
push
jae
jbe
sahf
fcoms
movsb
inc
test
dec
push
xor
movsb
xor
xor
fnstenv
and
mov
dec
sub
xor
clc
push
test
pusha
or
mov
adc
lods
mov
mov
xchg
pop
xchg
sbb
shlb
pop
fadds
jp
in
jmp
mov
sub
ja
pusha
aas
mov
jae
loopne
adc
xor
mov
mov
mov
jbe
pushl
and
mov
add
jg
dec
add
scas
push
mov
shrl
xchg
cwtl
xchg
pop
xchg
ss
xor
jmp
push
jmp
popa
mov
push
push
jbe
mov
mov
mov
fistl
movb
ss
hlt
pop
pop
cltd
add
aam
xchg
sub
add
mov
shl
mov
cld
dec
jbe
lahf
subl
popa
mov
repnz
push
cltd
add
jno
test
pop
push
mov
outsl
shrb
ror
jo
xchg
mov
mov
aad
adc
and
cmp
add
ja
pop
je
aad
jp
sbb
mov
arpl
and
add
test
xor
ss
cmp
outsl
pop
xchg
xor
lcall
mov
push
ljmp
and
out
lods
dec
xor
bound
cltd
aam
mov
add
or
inc
inc
push
movb
jne
adc
out
fwait
or
mov
mov
dec
into
loope
out
xor
jmp
push
test
scas
cld
outsb
pop
push
push
arpl
scas
aas
sbb
cmp
adc
das
mov
leave
test
pushf
sbb
push
pop
lea
out
jbe
out
pop
push
xchg
imul
pop
add
mov
push
inc
dec
sub
jns
push
bound
clc
stos
mov
negb
call
je
loopne
xchg
cmp
add
fwait
mov
xchg
jo
je
aas
cmp
pop
je
push
adc
mov
mov
test
mov
adc
inc
jne
mov
sahf
fdivl
sbb
into
mov
or
stc
lret
push
aam
cmp
sbb
sub
push
sbb
xchg
mov
sub
test
cwtl
jb
push
adcb
jbe
daa
xchg
addl
orb
fwait
sar
sbb
divl
scas
dec
dec
leave
xor
inc
xchg
cwtl
cmp
pop
repz
arpl
ds
mov
in
repnz
add
dec
jns
add
jge
lret
test
jmp
imul
mov
js
int
push
xor
stc
gs
repz
xchg
and
cwtl
fwait
icebp
mov
movl
test
cli
or
call
xchg
arpl
mov
pop
sti
inc
repz
mov
out
std
or
cmpsl
aas
jnp
ja
pushf
dec
dec
stc
in
pop
enter
das
push
sarl
sti
mov
jmp
rcrl
int3
lahf
imulb
pop
inc
mov
xchg
add
ja
je
sbb
mov
sbb
xor
inc
aam
mov
mov
into
lahf
push
scas
xchg
lret
push
lahf
pop
jno
cmc
xchg
scas
mov
mov
ret
stos
and
jle
ljmp
outsb
mov
insl
ds
je
xchg
enter
ljmp
sbb
xor
cld
pop
mov
pop
test
jae
pop
push
and
mov
and
mov
sbbl
dec
dec
mov
test
dec
or
out
jg
in
push
sarb
pop
xchg
dec
in
daa
hlt
lds
pop
es
sahf
sbb
mov
dec
cld
adc
test
adc
adc
sub
mov
add
add
add
fstpt
addb
popa
int
adc
test
sbb
dec
inc
imul
mov
adc
imul
aad
pushf
les
lret
xchg
or
shrb
pop
movsb
fs
and
lcall
pop
testb
clc
bound
jae
sub
add
inc
push
or
out
sub
push
fs
xor
inc
mov
shl
decb
scas
enter
xchg
call
jb
adc
mov
mov
dec
aad
das
dec
arpl
std
das
xchg
adc
test
dec
and
stos
mov
inc
dec
dec
in
inc
pop
cmp
pop
adc
loope
or
icebp
scas
ja
in
out
add
in
fiaddl
xchg
rcll
xchg
sub
adc
and
bound
loop
imull
es
fs
fwait
push
push
mov
xchg
dec
push
dec
push
bound
push
mov
fisubrl
mov
int
inc
push
or
pop
mov
call
dec
outsl
int
mov
mov
sar
iret
popa
jmp
les
cmp
adc
loopne
cwtl
fsub
je
mov
sahf
fsub
fwait
inc
movsl
push
ds
cmp
dec
add
in
mov
ret
jg
aam
sbb
mov
rclb
xchg
imul
mov
repz
jae
sbb
pop
aas
imul
loop
arpl
subb
mov
mov
xchg
lahf
xlat
sbb
addl
inc
fdivrs
push
pop
ret
pop
dec
jg
fmuls
sub
lcall
leave
xor
jmp
popaw
mov
cs
mov
outsl
add
outsl
rcll
mov
lret
mov
ja
or
push
add
lods
fwait
icebp
and
push
sbb
xchg
andl
mov
rorb
mov
push
leave
lea
add
or
push
ljmp
xor
xor
or
mov
sbb
dec
addr16
dec
or
lock
sbb
aas
adc
dec
stc
int
adcl
pop
and
or
sub
cmp
shr
pusha
jb
repz
xchg
or
inc
clc
pop
adc
pusha
call
dec
les
add
cltd
xchg
popa
and
mov
mov
test
cs
nop
testb
das
or
dec
jge
jp
jge
mov
and
lods
cmp
les
sub
ret
mov
and
mov
dec
lahf
and
or
mov
pop
xor
sbb
mov
push
jb
imul
pop
mov
mov
sub
pop
out
das
push
xor
push
push
not
adcb
add
and
hlt
insb
xor
jnp
int3
mov
std
fistpll
push
and
lea
xlat
xorl
xor
inc
cwtl
inc
sbb
fisubrl
out
push
insb
mov
test
adc
movsb
mov
call
pusha
les
push
xor
sub
sbb
pop
push
int
lahf
push
adcb
adc
inc
xchg
subb
js
and
shl
push
jno
mov
add
fmulp
or
xor
mov
sub
pop
jge
shrl
ss
fidivrs
sub
iret
xchg
scas
test
jmp
lods
or
es
xchg
sub
hlt
sub
jle
out
mov
aaa
int3
lea
lahf
mov
mov
push
cmc
mov
into
notb
into
stos
push
adc
lahf
pop
inc
sbb
xor
imul
lahf
or
lods
ret
xchg
cmp
mov
mov
sarb
scas
xchg
cmpsl
adc
dec
xlat
jns
test
pop
push
pop
test
push
lea
dec
or
popa
adc
sbb
inc
int3
pop
cmp
and
mov
fcoms
or
xchg
addl
cld
mov
mov
cmp
es
lcall
js
je
pop
adc
dec
ljmp
pop
mov
xchg
xor
and
pop
lods
testl
dec
cmp
jnp
sarl
je
inc
pop
cs
leave
inc
std
es
jns
jmp
out
ljmp
mov
xor
call
jb
repz
adc
xor
fwait
into
mov
pop
and
xor
int3
movsb
andb
push
imul
jp
imul
ljmp
adc
jg
add
xchg
cmp
test
mov
js
popf
add
in
mov
adc
xor
fisttpl
sbb
mov
mov
sbb
lock
push
sahf
lret
pop
dec
xlat
shr
loopne
out
inc
xor
xor
inc
push
mov
je
sub
push
pop
aaa
loop
inc
shlb
fwait
mov
shll
mov
add
add
fimuls
icebp
movsl
pop
dec
inc
mov
call
dec
dec
mov
mov
sbb
loopne
xchg
mov
cmp
loopne
pop
int3
pusha
xor
push
jno
sbb
lods
pop
sub
add
std
or
rcll
mov
leave
fs
loopne
lock
stc
sub
es
push
sbb
lret
cwtl
dec
jo
or
mov
mov
scas
fistps
ror
cmp
sub
xor
and
cmp
outsl
jnp
and
pop
es
fisttpl
or
cld
push
test
dec
xchg
add
int
test
mov
or
into
or
push
ds
ret
add
mov
xor
mov
mov
repnz
jl
push
cmp
outsb
sarl
jle
or
lds
fs
mov
cmp
xchg
loopne
adc
jp
rcrl
es
cld
repnz
fiaddl
fsubl
imul
or
jne
jns
addr16
cmp
data16
hlt
rcrl
inc
lret
xchg
xor
cmp
mov
pop
roll
pusha
and
xchg
testb
push
dec
adcl
push
and
popf
mov
cld
pop
imul
push
fsubs
and
loope
push
fstpl
lods
js
iret
add
mov
lret
fwait
and
in
in
push
popl
mov
fwait
dec
mov
push
pushf
push
mov
lea
icebp
cwtl
sti
arpl
or
fcmove
push
in
mov
imul
dec
mov
and
pushf
adc
xor
and
ret
and
enter
aas
xor
pusha
aaa
leave
and
mov
rclb
fnstsw
mov
jae
jge
stc
adc
scas
dec
mov
mov
push
dec
push
mov
into
aam
dec
pop
cmp
jl
in
xchg
aaa
xchg
push
push
mov
cmp
jle
rorl
push
lds
add
and
lea
pop
std
push
fucom
stos
lahf
inc
and
jnp
aam
test
mov
imul
es
xchg
adc
push
mov
adc
jbe
sbb
loope
lds
cmp
out
cmp
jmp
cli
push
movsb
cmp
add
scas
in
repnz
mov
lret
pop
imul
pushf
push
inc
cmp
push
movsl
dec
xlat
push
mov
repz
daa
inc
ljmp
xor
xor
jae
fists
xlat
jmp
sti
lock
rcr
scas
out
sbb
fnsave
out
mov
push
adcb
push
movsb
cwtl
lahf
mov
pop
sub
mov
repnz
js
jb
push
add
jl
std
dec
popa
lods
cwtl
push
xchg
adcl
repz
inc
hlt
push
prefetcht2
pop
frstpm(287
inc
ss
adc
mov
mov
adc
fs
sub
jnp
jo
popf
adc
add
iret
js
dec
inc
fs
add
and
cmp
cmp
int
jnp
inc
into
lock
and
outsl
rcr
cld
adc
pushf
pop
dec
xchg
out
xor
mov
call
jnp
shr
xor
aad
jle
pop
ret
add
stos
xchg
ret
in
imul
and
sbb
mov
out
push
cmpsb
int3
movl
mov
stc
cmp
mov
push
lret
mov
mov
movsl
pop
lret
jns
sbb
lds
rolb
ror
xchg
int
int3
xchg
lods
sbb
dec
lea
mov
cwtl
popf
hlt
shll
cmp
fucomi
cmp
xchg
out
cmp
daa
fdivr
lods
cmp
lea
call
inc
xchg
shll
xorl
into
pop
rorl
xchg
stc
je
mov
sbb
mov
shrb
dec
mov
push
xor
shrl
pcmpeqb
lock
sbb
xchg
jae
lret
mov
jmp
inc
stos
pop
jns
and
add
inc
out
sarl
add
loope
sbb
out
adc
push
movsb
je
mov
das
pop
ja
movsb
cltd
enter
shrl
aad
fld
enter
sub
pop
into
mov
push
gs
sbb
es
or
out
subb
mov
sbb
xor
imul
xor
enter
push
dec
repz
mov
enter
xchg
popl
aaa
das
les
insl
outsl
pusha
inc
sub
or
and
jge
cltd
mov
xor
imul
daa
clc
and
aas
pop
xchg
movsb
dec
or
push
stos
cmp
mov
je
mov
lret
sbb
movsb
fs
test
test
loopne
std
adc
lahf
or
adc
addr16
push
popf
mov
andl
and
push
outsb
movl
add
jbe
lds
stos
mov
xchg
pop
sub
mov
std
push
dec
xchg
aad
inc
lcall
out
xchg
sub
sbb
fiaddl
add
loopne
mov
pop
nop
pop
pop
mov
insb
and
mov
jecxz
rcll
xchg
and
dec
cmp
adc
call
or
hlt
or
test
ja
fidivl
je
mov
mov
andb
outsb
xor
jno
ljmp
mov
daa
mov
adc
iret
adc
icebp
xchg
or
inc
cs
lcall
dec
test
fcompl
and
add
loope
jmp
and
ljmp
lock
and
jge
mov
push
je
pop
sub
aaa
sub
pop
mov
pop
dec
xchg
xchg
nop
insl
pop
or
lods
jge
in
popf
pop
inc
loope
ljmp
add
lea
mov
sub
rolb
sub
aad
mov
lods
dec
es
jne
lret
mov
mov
sub
test
sbb
rolb
movsb
sbb
and
push
insl
sbb
pop
mov
jno
inc
int
add
push
cld
push
jbe
xorb
xorb
in
es
int
fs
out
fs
mov
or
adc
push
adc
mov
dec
pop
ja
popa
cmp
xchg
cld
scas
or
xor
mov
mov
int3
shl
xor
fildll
xlat
and
xchg
mov
lret
and
sub
xchg
out
and
cmp
movsl
inc
mov
mov
movsl
outsb
add
pop
sbb
xorl
jnp
das
jmp
stc
lods
je
sub
pop
lret
pop
fs
repnz
pushf
xchg
pushf
xchg
jbe
movsl
mov
jb
or
mov
ret
inc
icebp
mov
add
mov
xor
mov
movsl
jmp
jge
xchg
dec
pop
ret
repnz
and
clc
sahf
daa
aad
xchg
cmpsl
je
js
pop
add
or
insb
aad
int
cltd
inc
lock
shrl
orl
aas
lods
js
xchg
mov
lret
das
pusha
pop
loopne
cmc
addr16
pusha
jns
in
mov
jb
mov
xor
pushf
cmpsb
lret
pop
or
int3
push
mov
hlt
inc
subl
add
scas
leave
dec
test
pop
xor
mov
sbb
roll
test
push
sbb
rclb
jno
mov
pop
sbb
mov
imul
aad
jbe
pop
adc
stos
jg
sbb
fstps
rorb
arpl
jl
sub
and
or
mov
pop
mov
lods
popa
mov
and
lahf
jnp
and
or
xor
cs
dec
test
pop
mov
mov
lret
push
dec
jmp
scas
xchg
mov
push
movsb
imul
mov
mov
push
xchg
push
fdivrs
sub
xor
fcompl
in
ret
lds
xchg
and
dec
jl
push
xchg
loop
scas
add
rolb
movsb
inc
sub
outsl
mov
leave
dec
cltd
inc
lret
shrd
cmp
out
lods
out
push
push
adc
sub
data16
sahf
xor
jne
outsb
push
jmp
cmp
mov
daa
cmp
adc
push
adc
repz
push
xor
lret
mov
es
mov
mov
mov
lods
or
movsb
sbb
xor
test
imul
xor
filds
push
sbb
cwtl
mov
pop
test
fists
sub
cmp
loope
cmp
mov
ss
mov
cmp
jmp
addr16
ret
inc
mov
pop
js
jp
fs
lock
mov
rcrb
or
cmp
ds
icebp
cmp
in
sahf
xchg
add
inc
and
jbe
rdmsr
xchg
insb
inc
xor
xor
sub
pop
mov
dec
push
dec
lds
addl
mov
jb
insb
call
mov
add
push
xchg
sub
fsubl
xchg
sub
sbb
jno
imul
scas
orb
aad
xchg
cmpxchg
fsts
inc
shrb
jbe
aas
mov
outsb
mov
pop
fs
subb
sahf
adcl
and
insb
or
cmp
rcr
pop
mov
bound
stos
cmp
mov
xchg
xchg
lret
sbb
int
mov
mov
mov
sbb
in
sub
ror
push
int3
pop
inc
call
jo
pop
enter
xchg
dec
imul
fiaddl
mov
lcallw
xor
inc
and
sbb
adc
sar
call
cmp
aas
push
aad
cmp
pop
push
aas
or
test
pop
push
stos
sub
push
ret
and
scas
movb
inc
xor
jge
pop
and
mov
dec
les
outsb
push
pop
sub
shrl
aaa
pop
mov
add
in
xor
xchg
ret
rorl
sub
xchg
imul
icebp
test
imul
lahf
test
rcrl
fisubs
lds
adc
or
call
pop
sbb
outsb
inc
pushf
data16
sub
mov
repnz
test
repz
pop
cmp
cmp
jns
pop
aam
push
rolb
jnp
pop
subb
shrl
jo
or
fisttpll
mov
in
inc
sbb
pop
lret
lret
xchg
sbb
int
movsl
push
fcomp
jecxz
jecxz
add
js
out
pop
jno
cmc
insb
mov
push
scas
push
out
inc
rclb
movsl
into
leave
or
icebp
adc
adcb
rcrl
lcall
xchg
mov
jne
inc
pushf
jp
fwait
pushf
inc
jmp
test
xchg
xchg
ret
push
rcrb
xchg
dec
jg
jo
cmp
cmp
pop
adc
daa
and
inc
clc
ret
xchg
jb
cmpl
test
jge
mov
jae
movsb
sub
xor
pop
ljmp
shl
and
and
pop
mov
scas
jb
and
das
jno
push
rclb
mov
mov
orl
xor
inc
mov
imul
mov
lock
das
push
or
leave
pop
inc
clc
pop
addl
in
insl
dec
inc
movsb
lahf
mov
out
fstps
lret
jns
inc
xchg
lahf
push
test
sub
pop
repnz
xchg
in
cmp
add
ds
je
inc
loope
jno
xor
popf
sbb
sbbl
sub
in
int
mov
push
dec
cmp
mov
push
leave
inc
xor
jl
jle
cmp
ficoms
mov
xor
add
dec
maskmovq
fistps
push
out
jmp
or
shll
pop
movsl
mov
std
pop
xor
pop
dec
sub
mov
or
dec
jg
ljmp
popf
pop
ret
pop
mov
addr16
test
jg
pop
xchg
loopne
xlat
mov
out
mov
js
add
scas
inc
imul
pop
gs
pop
mov
int3
hlt
or
and
mov
dec
ljmp
lds
je
cmpsl
and
push
mov
lahf
out
repz
popa
jnp
notb
xlat
adc
sub
xor
mov
aam
out
shll
aas
das
xchg
std
jle
cmp
in
fstl
sub
ss
jae
mov
fwait
call
jp
xchg
push
sub
in
mov
fdivrl
or
imul
mov
or
sub
push
add
xchg
jb
loope
fsts
inc
scas
out
hlt
decb
sub
push
xchg
lea
pop
jne
pop
xor
fstpt
popa
inc
int
jae
leave
mov
inc
sbb
mov
mov
push
js
mov
call
sbb
push
adc
adc
sbb
add
jb
mov
xlat
xor
jnp
in
movsb
leave
cs
into
fcmovbe
call
mov
lea
call
mov
ljmp
bound
fwait
aam
inc
pop
cmp
cld
fnsave
inc
push
outsl
mov
or
fists
add
and
pop
mov
icebp
cmp
test
loope
lods
jmp
loop
sahf
rcr
call
or
mov
pop
loop
xor
xor
xchg
add
clc
ror
cld
lcall
jno
dec
jp
fdivrs
lret
push
je
mov
mov
push
fdivrp
data16
adc
jae
int3
fdivl
add
bnd
out
pusha
movsl
mov
rcl
add
cmpsb
je
jmp
and
or
nop
lds
xor
push
subb
and
iret
sub
dec
pop
pop
aas
out
add
repnz
int
jnp
loope
imul
cs
test
mov
or
shrb
rcl
jle
mov
add
jno
jne
mov
ret
add
into
mov
or
arpl
sub
pop
rcrl
loope
stos
inc
push
int
jno
stc
mov
test
mov
mov
add
push
inc
insl
cli
lods
xchg
mov
mov
push
jp
imul
out
pop
fmul
movsb
push
jl
sbb
xlat
add
imul
jbe
test
les
pcmpgtw
or
mov
std
jecxz
jge
push
mov
jbe
jbe
xor
aad
mov
fs
shll
push
testl
fcmovnbe
insl
sub
cmp
sbb
dec
inc
xlat
add
repnz
scas
mov
into
mov
dec
xorl
insl
lods
std
into
jbe
pop
in
mov
push
cli
xor
int
stc
sbb
jl
jecxz
xor
adc
mov
push
xor
push
mov
sub
pop
frstor
cld
xlat
push
arpl
test
pop
int3
dec
fdivrs
movsb
pop
pushf
and
mov
xor
add
fdivl
pop
or
sahf
xor
pop
fidivl
subl
mov
ds
and
and
mov
add
in
fwait
xchg
sub
and
xlat
cmp
mov
sti
dec
sbb
mov
or
lcall
lods
aam
mov
pop
jbe
sub
aad
mov
js
cmp
adc
insb
insl
mulb
icebp
enter
arpl
mov
stc
leave
sub
mov
pop
sbb
jecxz
xor
filds
inc
inc
pop
lahf
into
mov
jmp
jne
jp
xchg
dec
aad
add
mov
imul
das
mov
and
imul
sub
adc
xor
int3
call
pop
mov
stos
jecxz
int
lahf
xorb
mov
mov
pop
imul
cmp
cmpsl
push
cmpsl
rolb
stos
sbb
addr16
icebp
movsb
ror
ret
and
or
stos
pop
rcl
test
adc
push
sub
cs
mov
cmp
xor
int
lret
aaa
mov
and
mov
xchg
mov
cmp
sub
xchg
fisttpll
ret
sbb
xor
aaa
je
das
jmp
out
jae
mov
popf
inc
inc
or
pop
push
pop
mov
xchg
insb
jg
movsl
fisubrl
cmp
inc
xchg
xchg
sbb
sub
jb
push
dec
arpl
push
dec
mov
jp
fbstp
in
xorl
mov
lods
sti
loope
dec
xor
pop
lea
adc
xorb
jmp
adc
dec
inc
or
fdivrl
dec
addr16
add
pop
fldt
mov
popf
mov
fs
mov
or
and
sbb
lea
idivl
pop
and
and
mov
enter
mull
ret
inc
scas
pop
imul
pop
pop
mov
pcmpgtd
and
jno
cs
xor
mov
mov
dec
xchg
xchg
test
mov
mov
cmp
movsl
and
inc
xor
mov
mov
sub
mov
push
fs
adc
push
aam
cmpb
sbb
adc
xor
sbb
push
sbb
pop
push
dec
in
cmpsb
mov
outsl
popa
test
pop
jle
outsl
push
xchg
push
mov
adc
retw
xchg
cwtl
jp
aad
insb
shlb
stc
add
andb
xlat
sbb
mov
call
fdivs
popf
loop
push
sub
xor
das
popa
sarb
adc
cltd
pushl
jns
cmp
pusha
mov
inc
or
ret
addl
push
jp
add
js
xsaves
or
push
aas
push
jno
jg
pop
je
or
cmpsl
pop
or
cmp
pop
popf
mov
push
and
mov
lahf
xor
enter
mov
jae
mov
dec
or
sbb
lret
mov
outsb
or
shrb
das
jmp
andb
jmp
cmpsl
mov
cmc
mov
sbb
add
inc
xchg
cli
je
jp
dec
push
push
frstor
or
lods
aam
ret
add
push
dec
dec
mov
or
insl
mov
ja
out
inc
sub
xor
in
pop
mov
in
inc
dec
mov
dec
out
out
cmp
xor
xor
or
or
push
inc
adc
inc
pop
and
or
les
pushf
nop
in
inc
xor
xrelease
aaa
gs
pushf
mov
aas
pop
xchg
das
daa
or
mov
sbb
jmp
dec
pop
icebp
mov
ja
repnz
cld
sbb
cmpsb
push
dec
jnp
in
xchg
popa
pop
dec
pop
sti
sub
pop
les
push
aam
dec
cmp
jo
test
dec
inc
lea
sbb
aam
sahf
sbb
das
movsb
push
jg
rol
push
js
push
imul
daa
xor
lds
dec
nop
sti
jmp
mov
jno
adc
fists
pushf
push
enter
fs
mov
xchg
adc
dec
shlb
add
scas
inc
mov
mov
repnz
movsl
fprem1
dec
inc
sub
adc
adc
shr
xor
fwait
cmpsl
loop
xlat
xchg
mov
mov
cmc
in
data16
jbe
cli
mov
fisubrl
pusha
test
xor
lock
dec
push
cmpsb
jl
movsl
jae
cmpsl
or
cmp
jnp
aad
nop
adc
repnz
les
pop
inc
into
or
push
pop
mov
push
mov
mov
arpl
sbb
lss
cmpsb
jo
dec
mov
insb
adc
repnz
out
cmc
js
inc
dec
cltd
js
loop
sub
dec
fstpt
sbbl
in
insl
sbb
dec
mov
aas
fistps
mov
xor
mov
inc
sub
popl
ljmp
cli
lcall
loope
notl
call
ficomps
sbb
sub
shlb
add
fldt
ret
lods
test
cmp
hlt
daa
iret
mov
movsl
xor
cmp
mov
movsl
mov
lea
jne
add
cli
insb
fwait
loopne
xchg
push
cmpsb
add
clc
cmpb
bound
sahf
ja
jg
mov
loop
dec
addb
jp
subb
mov
les
call
into
or
and
sub
inc
jecxz
leave
jecxz
fnstcw
stc
add
incl
imul
mov
push
mov
in
fidivs
xchg
xchg
xor
lcall
aad
mov
cmp
sbbb
in
aad
or
loop
sbb
shlb
push
test
inc
add
or
ljmp
clc
jge
mov
sub
mov
add
mov
push
cmp
jecxz
sub
push
shlb
sbb
ds
sbb
dec
test
push
and
pushf
sub
and
jns
pusha
dec
call
inc
stc
lods
loop
xor
cmp
inc
inc
sbb
mov
cli
lods
mov
or
cs
mov
cmpsb
out
loopne
mov
adc
les
mov
or
cmp
mov
xor
cmp
mov
scas
incb
sbb
xchg
popa
dec
lcall
push
mov
cs
std
sub
xor
int3
shll
shr
pusha
sarl
loop
xor
loope
jmp
mov
int
lret
jp
and
or
repnz
mov
ss
in
stc
popf
adc
mov
jmp
aad
decb
jecxz
adc
xlat
mulb
mov
pop
lcall
ret
mov
imul
cmp
sahf
pop
outsb
lods
gs
push
jg
mov
add
addr16
std
add
push
fistps
outsb
inc
ret
xor
loop
push
xchg
jo
aad
mov
int3
add
pop
cmp
imul
shr
mov
ret
cwtl
test
pushf
mov
lret
scas
push
loope
adc
push
xor
ret
jo
mov
push
loopne
scas
push
outsl
mov
jecxz
into
sbb
ret
adc
xchg
xchg
out
ffree
push
mov
cltd
rcl
shll
mov
fisubrs
xlat
mov
stos
sub
insl
addr16
cmp
stc
stos
xchg
shlb
sldt
or
jae
pusha
jp
lcall
inc
lret
mov
xchg
hlt
push
pop
dec
mov
and
mov
pop
cmpsl
dec
cmc
push
jmp
push
push
outsb
push
dec
push
pop
dec
push
cwtl
repz
push
call
mov
push
add
bound
mov
push
inc
dec
fs
pop
cmpb
xor
mov
adc
les
jl
pop
pop
out
sahf
fsubrl
mov
mov
push
or
int
or
stos
xlat
aaa
lcall
ljmp
fcomps
pop
int
push
in
jle
lods
or
cmc
fdivrl
push
xorb
and
std
lds
ret
loopne
stos
mov
pusha
mov
and
and
jns
add
lret
push
push
mov
sti
popa
sub
ds
mov
int3
out
addr16
sbb
dec
lock
mov
pusha
cmc
lds
xor
sbb
jle
sbb
sub
push
nop
mov
mov
pop
gs
xchg
aam
adc
inc
mov
sahf
notb
xchg
cmpb
bnd
addr16
push
dec
or
movsb
cmp
or
mov
mov
jecxz
pop
or
xchg
cmc
dec
lock
loop
pop
in
aas
ja
test
outsl
test
scas
xor
lahf
call
jle
cmp
and
lcall
jo
out
pop
xchg
mov
pop
out
imul
push
data16
pusha
xchg
fs
sub
andb
or
mov
lret
push
jbe
xor
xor
out
mov
aas
xchg
fdivs
gs
jp
xchg
push
xor
loope
aas
in
push
push
or
les
cmp
jl
push
and
ds
mov
and
repz
sbbl
add
dec
repnz
mov
cli
cs
fcmovnb
mov
mov
inc
stos
mov
out
incb
xlat
sbb
add
fs
fdivp
movsl
jbe
mov
dec
xor
jp
ja
cmp
add
sub
insb
cmp
sbb
dec
adc
outsb
push
lock
jge
pop
div
xchg
jmp
and
mov
test
into
call
jb
xchg
xor
daa
ret
pop
lock
daa
test
or
lret
pop
and
das
cmpxchg
rcr
or
jnp
inc
lock
icebp
jns
out
push
inc
add
adc
js
ljmp
not
lods
mov
and
int
mov
stos
push
push
stos
arpl
sbb
iret
adc
icebp
fwait
push
loop
jge
into
cltd
insl
sahf
outsl
lods
sub
cs
addb
rcrb
stos
push
loopne
fs
or
call
dec
test
mov
pop
xchg
cmp
leave
push
push
sbb
pop
sbb
in
sub
in
testl
xor
push
inc
rcll
fdivl
cmp
mov
pop
push
mov
adc
jo
out
xchg
cld
aas
jge
pop
lret
or
bound
je
cli
mov
push
ficoml
pusha
xor
mov
outsb
clc
pop
mov
es
sahf
unpckhps
mov
repnz
mov
ret
pop
inc
pop
ds
push
push
dec
mov
test
aam
hlt
in
cmp
ljmp
sbb
aaa
mov
mov
jne
pushf
xor
add
jns
fdivs
xor
add
out
mov
mov
xor
loopne
and
stos
xorl
std
sti
xchg
ficompl
lret
nop
stos
fwait
pop
popa
mov
scas
inc
add
lods
fs
jg
ljmp
je
les
aad
mov
mull
and
mov
push
or
jge
sub
dec
scas
add
xor
enter
xchg
adc
ss
fcompp
mov
add
jmp
int3
outsb
cltd
bound
cmpb
in
cli
dec
fldt
div
daa
xlat
sub
cmp
or
xor
cli
xchg
inc
cmp
and
mov
push
pop
add
mov
lcall
mov
loope
lods
inc
mov
or
lds
inc
hlt
test
pusha
mov
call
mov
fwait
dec
or
test
outsb
cmc
pop
loop
mov
xor
cld
sbb
scas
std
lods
dec
inc
xchg
adc
cmp
test
ficompl
out
mov
fwait
jbe
ret
aas
mov
mov
test
test
sub
pop
int
mov
fcmovu
repz
test
push
mov
icebp
ret
add
jno
movsl
push
ret
stc
out
in
xor
lea
repz
cld
leave
outsb
fmull
dec
fldenv
add
push
mov
xchg
fwait
add
sar
sbb
jg
rorl
mov
xchg
mov
cmp
pop
movsb
dec
inc
mov
pop
repnz
xchg
and
xlat
imul
out
loopne
dec
push
shll
sub
sub
jnp
mov
xor
inc
sub
cmp
es
imul
dec
es
mov
test
xor
mov
movb
inc
sbb
xchg
out
fldl
jnp
and
sub
popl
jmp
test
mov
ret
ss
xchg
push
cmp
repnz
fucomip
aas
add
push
sbb
les
jbe
or
das
jecxz
insb
or
cli
xor
push
or
lret
aas
fnstcw
adc
outsb
dec
addl
mov
mov
out
roll
shr
mov
adc
mov
loop
inc
xchg
mov
or
unpckhps
xor
or
xlat
ret
xor
in
mov
xor
xor
pop
stos
sbb
dec
das
add
dec
dec
lock
adc
and
xchg
stc
push
jmp
jnp
aaa
sti
icebp
pop
push
pop
mov
or
push
je
scas
push
jo
fistps
push
and
lret
shr
xchg
sbb
xchg
xor
pop
fwait
incb
lock
push
insl
jo
push
mov
bound
xchg
jnp
or
mov
pop
mov
dec
push
lods
fstps
mov
xor
mov
fiaddl
loope
adc
cwtl
loop
lcall
das
fildl
push
movsl
sahf
pop
inc
cmp
push
inc
fmuls
jnp
addr16
repnz
shrl
outsb
or
std
jo
dec
push
insb
xchg
mov
sbb
les
addr16
in
int
fdivr
fsubrs
imul
adc
mov
push
mov
pop
jmp
subl
cs
jge
mull
adcl
lret
mov
cmpsl
daa
sti
sub
in
out
cmpsb
scas
pop
inc
pop
filds
cli
jno
fisttpll
sbb
bound
pop
sbb
mov
push
sti
out
add
mov
xor
ds
scas
mov
and
outsb
movsb
lahf
inc
inc
pushf
fwait
sbb
cmpsb
jp
mov
iret
mov
testb
jb
push
and
mov
jbe
and
test
adc
xor
inc
or
pop
push
scas
xor
call
adcl
inc
push
push
push
add
mov
mov
lret
mov
xchg
push
sub
inc
imul
mov
sarl
cmc
das
xor
add
and
into
xchg
mulb
in
loop
xor
icebp
xchg
push
pusha
out
mov
sub
jnp
into
sbb
loop
roll
in
daa
dec
push
test
jmp
daa
add
mov
mov
leave
and
and
shrb
dec
xor
mov
sbb
add
std
out
sbb
cmp
push
fsub
xbegin
es
mov
and
push
mov
pusha
inc
inc
mov
out
jbe
shl
andb
xchg
ljmp
cmp
or
sbb
stos
add
pop
lods
popl
int3
movsb
sub
lcall
inc
es
dec
cld
or
sub
push
jns
cmp
aaa
or
mov
or
pop
into
sbb
sarb
sbb
dec
cmpsb
fisubrs
cltd
fsubp
test
repz
mov
mov
add
fisubs
push
adcl
adc
dec
cmp
cmpl
jp
test
mov
cltd
xchg
stos
lret
mov
cli
movsb
and
or
xor
mov
add
push
mov
lea
adc
idivb
xor
int
repz
in
jnp
push
das
push
mov
leave
pop
pop
xor
pop
cltd
cmp
mov
push
pop
or
fdivrl
push
xchg
cmpsb
dec
enter
mov
sub
call
xchg
mov
sbb
ret
mov
in
mov
sahf
cmpsl
jecxz
sti
xchg
jg
mov
repnz
push
test
inc
or
add
xlat
jge
notl
outsl
ljmp
sub
mov
cmp
xor
adc
in
arpl
cmp
push
ret
mov
pop
adc
js
jo
scas
mov
mov
enter
or
mov
sbb
or
inc
push
ljmp
popl
fcmovb
testb
clc
loopne
lea
das
mov
nop
xor
lret
dec
jmp
nop
mov
and
pusha
outsl
mov
and
adc
mov
cmp
xchg
dec
mov
cli
pop
subw
xlat
in
xor
push
mov
fdivrp
mov
sub
jns
jno
xor
repnz
ljmp
es
cmpsb
fmuls
dec
arpl
pop
xor
dec
mov
loope
add
mov
cmp
inc
hlt
mov
jge
jmp
sbb
movsb
add
enter
xchg
mov
dec
adc
lahf
lods
scas
repz
paddw
mov
pop
mov
push
add
ja
dec
lahf
xchg
in
jmp
je
repnz
je
mov
push
mov
cmpsl
into
loop
aam
stos
test
pushf
xor
ret
les
lods
addb
inc
xchg
and
xor
jmp
push
add
pop
mov
cmpsl
push
popa
cmpsb
sub
adc
or
in
outsb
mov
ljmp
push
movsl
daa
stos
sahf
outsb
popa
jnp
sub
sub
mov
xchg
js
inc
ljmp
inc
jne
pop
and
mov
pushf
out
pop
sbbb
inc
sbb
out
inc
imul
push
mov
fsubrs
outsl
ret
dec
mov
mov
lcall
stos
rcl
xor
lret
add
sub
mov
sub
add
xor
nop
jno
repz
sbb
push
fildl
pop
mov
mov
mov
mov
mov
push
push
pusha
addb
and
or
fsubrs
lea
fcmovnb
sub
sbb
and
fstp
xchg
fcmovnu
mov
xchg
xlat
push
cmp
cli
push
jne
or
push
outsb
mov
lcall
ret
sub
test
icebp
push
hlt
push
pop
xchg
pop
add
rclb
std
pop
ror
mov
mov
mov
xchg
ja
inc
or
shrb
int3
cmp
cli
sub
inc
or
lcall
xor
adc
jae
inc
gs
pusha
adc
push
jae
mov
xor
sub
lahf
hlt
loopne
out
jns
divb
jl
icebp
ljmp
push
adc
mov
lock
movsl
cmpsl
jnp
inc
fwait
push
jne
mov
xchg
adc
push
xchg
xchg
xchg
mov
sub
xchg
sbb
jmp
leave
jne
xchg
push
mov
mov
insl
inc
or
add
sbb
xor
cmc
mov
add
popa
cmp
cmp
lods
je
mov
fcmovne
frstor
pop
jne
scas
test
aaa
push
inc
inc
jb
sub
aam
mov
adc
fildll
pop
pop
mov
pusha
sub
inc
into
lcall
sub
adc
xor
mov
aam
pop
cwtl
aad
inc
mov
pop
jae
jns
cmp
leave
testl
jecxz
sarl
sbb
and
add
dec
push
clc
mov
into
push
fsubrs
add
inc
je
inc
lods
in
jbe
inc
mov
jl
mov
sbb
jp
bound
in
repz
shll
push
enter
repnz
aaa
ljmp
loop
sbb
mov
mov
insl
loop
cmc
in
popa
aas
push
mov
mov
fdivl
sbb
push
mov
inc
adc
subb
mov
push
shll
mov
iret
scas
fsubrl
dec
or
cmpsl
and
fidivl
mov
cmp
cld
sbb
mov
idivl
mov
xchg
push
dec
push
mov
stos
and
jl
push
push
mov
mov
xchg
jp
fisttps
pop
mov
mov
das
fisubs
andb
ljmp
cmpb
inc
pop
movsl
test
in
addr16
xchg
adc
or
insb
jno
fldcw
jbe
pop
cmpsl
and
xchg
add
mov
mov
lahf
jne
mov
xchg
jg
jmp
xchg
adc
mov
orl
scas
lock
pop
ss
scas
lock
and
pop
aaa
jb
jecxz
mov
sbb
xor
sbb
divb
jae
sub
pop
hlt
outsb
adc
jmp
pop
test
sub
dec
sbb
pop
add
sub
add
in
mov
ss
int3
mov
iret
jo
mov
imul
pop
outsb
sahf
in
xor
pop
add
cs
ret
push
es
test
mov
add
imul
ja
xchg
xchg
mov
jg
or
push
xor
pop
sbb
mov
mov
aaa
or
inc
or
rcl
pop
imul
mov
mov
or
jo
xchg
cltd
hlt
test
std
jne
mov
mov
mov
cmp
sbb
js
fistpll
test
jl
dec
sbb
shlb
fwait
cmpsl
ficompl
push
sahf
int3
rolb
mov
scas
and
popf
out
xor
sbb
enter
mov
je
test
jmp
loope
rcll
inc
test
out
cltd
loop
mov
clc
std
or
mov
outsl
xchg
iret
dec
adc
enter
cmp
xchg
stc
jne
jno
jmp
test
push
stc
mov
in
jge
or
add
iret
mov
adc
push
out
inc
sbb
xor
stc
adc
call
push
dec
outsl
dec
fs
jecxz
je
movsl
repnz
inc
dec
stos
jne
in
sarl
add
outsl
sub
jmp
idiv
sahf
test
cmp
pop
leave
push
or
in
add
testb
jmp
out
push
jo
adc
movsl
sbb
mov
xlat
pop
cli
xchg
or
lcall
jle
gs
mov
fistl
push
add
cmp
mov
lock
xchg
and
orl
jg
add
cmpsl
fsubl
jno
push
mov
cwtl
pusha
ss
and
jne
in
dec
pop
xor
mov
cmp
jns
scas
fnstsw
pop
dec
push
push
scas
xchg
lahf
xchg
mov
aas
addl
lret
aas
in
mov
ret
in
imul
cmp
fisubrl
or
mov
scas
mov
cmp
mov
dec
aaa
lea
mov
cmp
test
jae
push
call
je
xchg
mov
add
mov
mov
addl
pop
add
sarb
sbbb
mov
mov
ja
and
cmpsl
scas
addr16
arpl
cmp
roll
and
or
cmp
mov
fcoms
sbb
stos
push
sub
jle
out
orl
push
adc
incl
dec
push
rolb
fwait
loopne
int3
mov
sub
pop
sub
jnp
push
sti
loopne
lret
lds
in
ret
lods
call
incb
cmp
lret
xchg
cmp
dec
fisttpll
or
mov
or
cmp
imul
push
jnp
mov
bound
sar
repz
f2xm1
and
lret
mov
or
lret
jbe
push
pop
mov
rorl
pop
and
rcrl
ret
shr
add
adc
ret
push
cwtl
ds
sbb
mov
xor
or
pop
push
cwtl
push
mov
ss
addb
mov
stc
inc
push
bound
cmpsl
xor
add
fdivrs
in
mov
cs
lcall
cli
xchg
ljmp
sbb
outsl
sbb
pop
push
sbb
sub
loopne
dec
test
mov
nop
sbb
pop
jecxz
hlt
inc
rolb
mov
fldcw
lods
stos
lods
push
sahf
into
test
inc
inc
push
inc
inc
les
stos
enter
cwtl
sub
push
add
sbb
push
pop
aaa
enter
dec
arpl
or
cs
and
xor
lret
inc
dec
add
rcrb
pop
loopne
mov
xchg
mov
sub
ud2
stos
xchg
sbb
sub
cmc
inc
xchg
jle
iret
jb
pop
ret
and
aas
imul
je
mov
scas
mov
jae
fnsave
cmpl
in
scas
add
xlat
jp
xchg
outsl
hlt
cld
jge
enter
stos
scas
mov
and
mov
jmp
into
imul
sub
pop
outsb
rcrb
sbb
jns
clc
in
mov
les
out
and
inc
addr16
loopne
jns
movsb
mov
pop
rolb
test
cmpb
push
dec
pop
adc
out
mov
je
jp
cltd
ficompl
pushf
or
lods
cmpsl
mov
dec
push
or
out
inc
mov
in
pop
mov
outsl
sub
add
lahf
lcall
pop
imul
les
add
sub
stos
lock
fstpt
push
push
mov
cmp
pusha
aaa
setbe
testl
call
inc
push
nop
fistps
mov
imul
int
dec
sbb
add
aam
push
repz
push
mov
inc
push
rclb
rcl
pop
mov
inc
sub
out
les
enter
cld
int3
inc
sbb
data16
sub
dec
sahf
out
cs
jl,pn
jno
cmp
insl
fwait
mov
out
or
mov
xor
jo
mov
les
call
mov
push
dec
das
je
aas
pushf
pop
leave
xchg
js
popa
test
lret
pushf
mov
xor
pop
inc
loopne
insl
sbbb
adc
pop
lret
in
je
dec
cmp
clc
xchg
pushf
lock
orb
inc
push
mov
mov
dec
scas
out
push
jo
test
xor
jmp
dec
cmpsl
xorl
add
xchg
dec
sbb
push
nop
push
aad
xor
mov
mov
sbb
pop
fpatan
leave
imul
sarl
pushf
jnp
mov
mov
pop
jecxz
sub
inc
iret
stos
movsb
dec
mov
add
sbb
stos
in
push
test
pop
test
cld
inc
xor
lods
mov
bound
cmp
push
xchg
add
mov
mov
mov
lock
mov
ds
loopne
imul
adcb
push
loope
ljmp
dec
or
lds
and
jb
push
sub
std
popa
out
sub
dec
in
mov
gs
mov
stos
sub
repz
mov
jmp
add
sarb
out
cmpsl
cwtl
adc
cmp
lds
jg
outsb
xchg
sub
clc
scas
arpl
mov
test
dec
xor
jb
jecxz
adc
rcrb
es
rorb
lcall
leave
mov
movsl
test
movsl
mov
push
jecxz
xchg
sti
xchg
inc
jle
int3
fistpll
movsb
cmp
push
xor
js
and
sbb
xchg
sbb
dec
mov
mov
adc
retw
sbb
sub
loopne
mov
jge
xchg
xlat
lahf
js
orb
cltd
clc
push
sbb
icebp
das
js
adc
push
mov
mov
scas
sub
insb
mov
test
inc
adc
jmp
lea
dec
mov
testl
pushf
aam
jge
push
push
lcall
and
jl
aam
mov
push
jmp
loopne
cmp
mov
dec
pusha
pop
jp
mov
arpl
addr16
aas
shrb
aad
test
fbld
cmp
mov
js
pusha
and
rorl
add
movsl
rorl
pop
push
rcl
pusha
sarb
jmp
outsl
ret
pushf
dec
insb
jmp
aam
push
mov
movsbl
nop
jbe
in
mov
cld
adc
mov
cmp
mov
xchg
sbbb
mov
cmpsl
frstor
pop
stos
add
fisubrs
xor
outsb
sahf
dec
or
std
in
roll
enter
aam
lea
stos
sub
mov
mov
jecxz
xchg
enter
sbb
fimull
js
frstpm(287
inc
cs
jmp
fwait
addl
leave
ja
dec
or
add
push
shll
fbld
mov
cmp
ret
lods
mulb
and
mov
pop
in
xor
rclb
jmp
testb
mov
jge
add
data16
enter
orl
ljmp
int3
test
insb
sub
loope
les
jl
movsl
scas
adc
xchg
fildll
ja
loopne
push
push
cmp
cmp
or
push
mov
mov
stc
sub
fs
jp
packssdw
in
popa
mov
pop
add
shrl
lods
cmp
int3
push
rol
pop
stos
inc
inc
or
mov
das
call
push
out
and
shll
hlt
dec
mov
cli
in
fstl
sub
out
adc
test
inc
bound
cmc
loope
jbe
add
inc
mov
xchg
mov
enter
shlb
es
xchg
nop
jecxz
pop
js
mov
push
in
dec
mov
fdivr
pop
fwait
lock
test
repnz
pop
aad
push
or
xor
mov
dec
call
dec
outsb
aam
sub
mov
imul
pop
repnz
push
jne
mov
sub
xor
sbb
dec
cltd
or
mov
or
xchg
cmp
cmp
std
jle
pop
pushf
into
fbstp
shrb
jl
out
out
xor
or
je
lret
sub
and
stos
cs
push
push
lock
int
sti
jbe
vmovlpd
sbb
aas
mov
dec
pusha
dec
adc
sbb
test
je
push
mov
lea
inc
inc
jmp
mov
mov
and
test
outsb
lret
jecxz
adc
lcall
hlt
mov
mov
jbe
pop
inc
and
mov
mov
fistl
mov
mov
xlat
mov
addr16
jae
push
cmp
ror
lds
mov
in
pusha
pop
out
dec
leave
push
fwait
add
icebp
sub
imul
dec
jne
or
xchg
inc
xchg
sbb
leave
xor
popf
xor
push
cwtl
in
xchg
cmp
rcr
or
or
xchg
mov
jae
push
xchg
or
push
test
in
adc
clc
ljmp
mov
mov
push
mov
scas
test
movsb
push
cmp
lcall
outsl
les
call
add
mov
aad
xor
mov
repz
fnsave
xchg
rcrb
mov
mov
clc
aam
std
cmc
jns
idivb
mov
mov
gs
out
lahf
mov
cmp
fwait
push
mov
push
mov
push
jmp
lea
add
xchg
jnp
test
aaa
stos
cmp
mov
lret
ds
mov
mov
cld
xor
jmp
jg
dec
adc
xor
mov
cmp
xor
negl
scas
outsl
out
cli
cmp
xchg
lcall
bound
pushf
inc
in
testl
outsl
leave
cmp
mov
out
xlat
inc
rolb
push
sahf
jg
out
or
jbe
fmulp
mov
jecxz
cmp
js
mulb
cmp
adc
xchg
pusha
loopne
jbe
sysenter
add
push
lock
roll
cmp
iret
add
jge
dec
or
push
xor
test
or
xchg
mov
fsubrl
cld
dec
loopne
inc
inc
inc
sbb
mov
imul
or
clc
cmc
data16
arpl
push
dec
sahf
popa
scas
fbld
mov
pop
shl
fdecstp
mov
cmpsl
enter
imul
add
jp
mov
ds
sbb
sub
fiaddl
pop
imul
stc
push
or
loop
or
das
adc
aad
in
and
push
xchg
add
pop
lcall
fsubr
into
push
int3
xor
sub
hlt
call
aad
sti
repz
cmp
sahf
jb
push
sub
imul
repz
imul
shll
mov
mov
testl
add
mov
cltd
test
cmpsl
push
inc
into
rcll
loopne
negb
jp
xchg
pop
repz
fwait
mov
push
in
add
arpl
lods
cwtl
loopne
jecxz
sahf
int
push
mov
arpl
dec
add
inc
sti
sarl
daa
xchg
out
mov
loope
inc
sbbb
mov
inc
mov
sbb
std
push
pop
adc
testl
scas
lock
fisttpll
mov
mov
sub
cltd
das
scas
push
jns
lds
pop
cmpb
mov
xchg
lds
add
mov
sub
xchg
iret
iret
popl
sub
jnp
adc
jo
sti
lea
movsl
cmp
xor
sub
cmpsb
setl
pop
pop
push
mov
adc
mov
insb
mov
mov
int
sub
rol
out
cmp
dec
xlat
dec
sub
push
ss
cmp
sbb
mov
inc
repnz
jns
ret
sbb
xchg
jg
movsb
js
das
gs
cmc
push
repnz
int3
sbb
inc
testb
nop
cmp
jno
sub
and
sahf
dec
mov
push
fxch
pop
test
xor
das
jo
imul
sbb
movsb
mov
sub
je
jge
mov
xchg
popf
jo
in
dec
jmp
push
movsl
lret
push
loope
loope
pop
mov
out
adc
ret
mov
insb
ljmp
or
loop
jl
jmp
jno
pop
mov
les
xchg
push
jno
cmpsb
ja
add
mov
jae
push
enter
movsl
outsl
das
sub
aad
loopne
pusha
scas
push
add
dec
stc
cld
mov
imul
adc
call
cmc
test
jmp
sbb
or
jae
insb
inc
lock
cmp
mov
sbb
lods
dec
mov
movsb
scas
ss
push
mov
mov
movsl
lods
clc
xchg
fisubs
lahf
inc
test
shl
dec
stc
in
cmp
in
aad
stos
test
aad
sbb
inc
je
cmp
add
cmc
mov
jb
cmpsl
fistl
mov
xor
sbb
jb
add
je
add
sti
insb
mov
stc
mov
movsb
leave
pushf
jge
loope
cltd
sbb
mov
movsl
cltd
sbb
scas
test
inc
mov
lods
popw
outsl
mov
rcr
shlb
pop
adc
push
jmp
pop
cmp
and
lea
mov
mov
add
xlat
and
cmpsb
iret
inc
iret
and
mov
js
adc
loope
or
ljmp
and
ffree
iret
adc
imul
ja
lods
insb
neg
mov
test
mov
fwait
inc
push
jno
cltd
je
adc
dec
and
mov
adc
movsb
stos
std
xchg
adcb
jmp
sbb
push
sbb
sub
jmp
jge
mov
mov
test
adc
xor
jl
pop
push
mov
adc
sbb
out
jmp
ret
call
mov
outsb
pop
inc
fistpll
ss
cs
pop
xor
sbb
inc
orb
push
jmp
or
sub
daa
jbe
imul
pushf
lock
icebp
je
aas
aam
icebp
xchg
in
pop
xchg
xchg
es
dec
dec
testl
and
mov
mov
scas
jmp
sbb
cmp
xor
mov
dec
call
movsl
add
mov
pusha
xchg
pop
mov
pop
pop
shl
ficoml
daa
lahf
push
xchg
push
xor
push
jmp
ss
pop
ljmp
ja
mov
or
jns
inc
cmc
pop
fsubl
cmp
sbb
mov
fcoml
and
dec
pusha
clc
adc
movsl
enter
loop
mov
popf
loopne
xor
add
xor
daa
mov
jae
mov
and
sbb
cmp
js
pop
outsl
inc
or
sahf
iret
add
xchg
js
andl
ss
xchg
iret
repz
clc
pop
loopne
ret
ljmp
sarb
lret
pushf
daa
push
mov
mov
mov
add
ja
sbb
sub
or
aam
adc
int
jbe
mov
and
and
sbb
subl
add
push
ljmp
adc
or
scas
movsl
aaa
ds
inc
sbb
fmull
lcall
iret
mov
xor
mov
popa
movb
cmp
pop
inc
out
push
and
inc
das
add
push
cmpl
xor
inc
push
adc
add
or
add
arpl
add
mov
fcomps
stc
aad
jg
sti
stos
push
sahf
add
cmp
sub
adc
inc
xchg
mov
popf
sarl
or
or
dec
sahf
add
jmp
stos
pop
mov
pop
addr16
adc
loope
cmc
mov
or
stc
sbb
jns
std
and
push
add
ja
mov
dec
dec
adc
push
add
out
lock
movsl
mov
or
add
inc
push
mov
pop
insl
or
adc
jbe
push
inc
jo
xchg
lods
inc
imul
out
sub
sub
sahf
xor
push
test
push
nop
push
bound
fs
cs
or
fdiv
mov
push
push
movsb
sub
jnp
jp
lods
test
dec
mov
pop
into
xchg
mov
sbbb
pop
out
mov
push
push
and
xchg
arpl
pop
aas
cli
cmpsl
cli
xchg
hlt
jbe
jne
lea
cmp
sbb
mov
mov
leave
data16
rcr
inc
iret
xchg
xlat
xor
addr16
scas
flds
int3
aaa
xchg
shll
ficoml
dec
dec
lock
inc
movsl
push
test
fsubl
sbb
stc
pop
fwait
and
test
mov
faddl
push
scas
or
sbb
cmp
cwtl
je
mov
inc
nop
call
and
das
popa
or
movsl
jo
or
bnd
lock
fistpll
push
ror
pop
js
test
adc
jge
jbe
or
adc
insl
push
pop
les
cs
divb
mov
lods
mov
cmp
notl
mov
nop
gs
cs
xchg
mov
adc
stos
or
icebp
in
cs
mov
cmp
sbb
std
aas
out
or
dec
cld
pop
sub
insl
les
cli
out
xor
xor
mov
lods
xlat
leave
fcoms
pop
cld
ret
push
inc
push
loop
test
cmp
les
pop
push
cld
lds
fld
gs
out
cltd
jge
shll
pop
pop
cmp
nop
cli
push
cli
ficoms
xlat
and
orl
out
mov
decb
add
push
lods
pop
pop
lcall
add
out
iret
cmpsb
jo
adc
sbb
or
inc
ret
out
imul
sub
in
lods
cmp
or
loope
stc
xchg
ja
divl
arpl
sbb
xchg
cmc
ss
inc
andb
das
shl
add
dec
pop
ja
fildl
xorb
dec
imul
sarb
mov
std
adc
std
cmp
rcl
out
fbld
leave
or
jle
in
test
inc
mov
and
scas
rcll
call
in
clc
jbe
mov
mov
rorb
test
add
cmp
cmp
call
sahf
xchg
hlt
jnp
jle
cmpsb
das
jle
mov
into
xor
cmp
push
test
sbb
fnstcw
mov
add
push
cltd
movb
bound
inc
push
mov
add
jg
pop
ret
xlat
int3
jnp
inc
je
stc
inc
pushf
mov
lock
mov
movsl
dec
or
mov
daa
jecxz
xchg
ret
and
out
mov
jae
jle
sbb
and
stos
std
movsb
adc
lret
jnp
adc
push
int3
jge
jnp
pop
fisttps
push
add
pop
xor
out
rolb
and
jno
aas
scas
shlb
cmp
inc
sbb
mov
daa
rorb
cmp
xlat
push
push
or
inc
jg
andb
add
or
notl
and
out
xchg
jae
jecxz
add
shlb
add
popf
cmpsl
sahf
xor
mov
or
inc
inc
icebp
or
sub
or
cmp
xor
push
add
sbb
roll
fldenv
ds
cmp
cld
dec
lcall
sub
xchg
sub
mov
xor
mov
xchg
iret
cli
jne
lods
mov
sub
cmpl
repnz
add
pshufw
or
xor
mov
mov
and
push
sbb
ret
fistpll
outsb
aaa
test
push
cwtl
rcr
fwait
cld
sarl
test
sbb
jae
sahf
pushf
into
pop
dec
out
std
pusha
cmp
push
lcall
stc
mov
xor
mov
iret
push
adc
nop
or
jle
nop
xor
fnstcw
cmpsl
jns
xchg
cltd
xor
cmpsb
loopne
inc
mov
pop
or
jg
and
aas
leave
push
ret
or
adc
out
ja
ds
idivb
aas
push
jecxz
push
sar
pop
lcall
sbb
cmc
xchg
call
or
mov
dec
mov
shlb
or
hlt
push
sbb
mov
inc
mov
movsb
mov
out
cmpsl
cltd
cmc
cmp
fists
adc
xor
pop
movsl
mov
or
into
jp
stos
repnz
dec
lahf
cmp
ffreep
xchg
mov
popf
fldcw
xchg
ficoms
aam
inc
jns
add
call
mov
mov
pop
jp
cmp
pop
stos
inc
insb
loopne
ja
mov
bound
cmp
dec
cmp
cmp
and
mov
adc
mov
add
rorl
jecxz
xchg
push
fwait
lret
jp
or
xchg
mov
daa
into
aaa
movsb
and
sub
sub
rorb
mov
iret
cmp
push
movl
jae
cmp
in
lcall
in
in
xor
mov
sbb
stos
cmp
stos
insb
sub
mov
cmp
pop
jecxz,pt
test
sub
cmpsl
mov
sbb
sbb
pop
jecxz
pop
inc
addr16
rorl
sub
mov
sub
jmp
mov
sbb
sbb
adc
into
pushf
mov
cs
notw
add
or
aad
mov
jne
pop
mov
out
push
cmpsl
cltd
cmc
mov
das
mov
clc
stc
js
loop
xchg
clc
addl
inc
jno
daa
flds
xor
fmull
fstpt
sbb
sub
inc
pop
ret
movsl
mulb
clc
xchg
out
pop
std
sub
fwait
mov
or
inc
add
push
cmp
rcl
fwait
inc
fisubs
push
pusha
xor
int3
lock
mov
inc
sahf
aad
cmp
cld
fcoms
cmpsl
dec
scas
outsl
int3
push
rorb
jp
xor
shrb
and
dec
rolb
ljmp
jmp
mov
inc
insl
je
xchg
lret
mov
xor
dec
mov
test
sub
popa
cmpsl
inc
js
push
nop
in
bound
cmpsb
or
jl
pusha
into
add
pusha
sub
cmp
push
or
cli
xlat
cmp
hlt
outsl
int3
les
inc
push
mov
dec
jmp
jae
or
mov
xlat
xchg
sub
shlb
mov
pop
sub
and
data16
cmpsl
pop
enter
push
imul
es
shlb
sub
inc
pop
and
mov
mov
bound
push
call
adc
repnz
mov
adc
xchg
xlat
xchg
xor
lods
xor
mov
adc
push
pop
test
cltd
or
js
fstpt
xchg
pop
lcall
mov
pop
mov
push
inc
adc
and
adc
mov
stc
es
xchg
pop
shlb
xchg
or
orb
lds
aam
mov
scas
repnz
idivl
dec
lods
lcall
rol
adc
mov
nop
adc
pop
mov
lock
mov
cwtl
lcall
xor
scas
xor
xor
adc
sbbl
jbe
insb
push
xchg
ret
data16
mov
leave
or
or
in
lods
and
adc
dec
xchg
addb
xor
in
nop
test
xchg
movsl
out
dec
arpl
insb
outsl
mov
nop
cltd
insl
movsl
jne
push
std
js
or
aas
adc
lods
test
inc
jb
adc
dec
rcrl
pop
jno
add
in
lods
jo
xor
jge,pt
fdivrl
gs
jo
and
ds
cmpsl
push
cmp
stos
into
add
pop
or
mov
xor
cmpsl
mov
rorl
fimuls
jns
mov
test
loope
mov
push
adc
inc
call
stc
aad
insb
js
sbb
int3
inc
adc
in
push
add
imul
dec
jo
push
aad
ss
int
fnstcw
jbe
leave
xor
sbb
je
xchg
adc
or
fbstp
xchg
push
insl
jl
mov
sub
in
cltd
inc
ja
paddb
jns
mov
adc
enter
xchg
inc
test
mov
xor
add
add
or
das
jl
lret
mov
dec
jmp
push
xlat
in
jl
push
jge
int
andl
add
dec
jge
inc
fs
xchg
pop
pop
push
fsts
arpl
xchg
xchg
stc
repz
mov
lahf
cli
lahf
add
dec
dec
push
and
xlat
xor
push
mov
cmc
mov
cmp
mov
movsl
out
out
jecxz
loopne
adc
test
fwait
shlb
fbld
pop
jo
lcall
pusha
ss
inc
or
lahf
sbb
push
test
std
aam
sti
into
xor
and
sbb
cwtl
imull
or
xchg
inc
pop
add
xchg
adc
call
xchg
shll
xchg
out
dec
pop
push
mov
jle
push
mov
pop
dec
mov
push
ffreep
and
cmpsl
push
push
or
repnz
addr16
js
xor
or
in
add
inc
outsl
push
cmp
movb
adc
lds
mov
fwait
popf
push
jbe
mov
cmp
loop
stos
mov
test
loope
adc
mov
dec
cmp
mov
adc
ss
inc
xchg
rclb
mov
mov
xchg
mov
or
aad
xchg
loop
leave
pop
push
pop
sbb
into
jnp
mov
dec
add
ret
vdivps
movsb
sub
dec
mov
js
push
cs
repnz
push
aam
pop
pop
sbb
imul
popa
imul
push
aas
aas
xchg
mov
aam
cmp
in
sahf
cmp
jae
sub
inc
test
sub
pop
test
sbb
cmpsb
divb
jno
mov
xchg
cmpsb
je
mov
push
dec
xchg
pop
mov
or
and
add
in
cltd
fucomip
cs
pusha
xor
push
sub
jg
push
add
xchg
or
aam
cltd
out
dec
inc
aas
or
mov
pusha
sbb
or
mov
daa
rorl
ret
iret
mov
ja
ja
and
mov
sahf
xor
inc
call
out
jmp
sub
inc
mov
iret
nop
mov
sub
push
and
shlb
xor
repz
sub
xor
test
cmp
ja
cmp
aas
cltd
iret
and
sub
lock
insl
aas
fidivrl
xchg
xchg
jb
mov
dec
sbb
sbb
mov
lret
ljmp
fmulp
cmp
or
lods
push
imul
cmpsb
das
icebp
dec
xor
mov
or
test
mov
push
imul
loop
add
inc
xchg
jge
and
xor
out
enter
cmp
aad
mov
out
mov
and
and
jmp
cmp
cwtl
and
and
roll
in
jle
mov
and
push
xchg
subb
pop
das
pop
mov
fs
ds
mov
aam
in
test
push
push
movsl
mov
add
call
add
add
sbb
xchg
push
cwtl
xchg
cmpsl
fisttps
sbb
dec
mov
adc
pop
adc
mov
mov
insl
test
cmpsb
dec
jecxz,pt
pop
nop
out
inc
lcall
push
ret
xlat
push
push
mov
movsb
lods
cld
das
aad
push
push
lds
jmp
jb
adc
cmp
pop
sbbl
or
aam
pushf
jnp
inc
dec
stos
add
cmp
cmp
shrb
xchg
and
cmp
popf
mov
idiv
clc
popa
dec
or
push
xlat
jle
jae
hlt
pushf
mov
lahf
sahf
jne
lods
popa
mov
sub
cmp
inc
ljmp
or
shlb
pop
mov
adc
popa
mov
pop
push
push
cmp
ror
js
pop
jnp
movsl
push
mov
pop
lods
adc
lds
int
xchg
sbb
in
xchg
shr
jo
scas
mov
dec
aad
outsl
rdtsc
test
push
roll
pop
add
sub
sub
js
lds
lcall
fwait
jns
dec
out
shlb
mov
int
rolb
cmp
sbb
xlat
push
nop
dec
push
sbb
pushf
xlat
add
xlat
jno
add
xor
push
cmp
jecxz
int3
push
es
in
xlat
je
add
cltd
in
add
mov
dec
adcb
repz
lock
inc
in
jno
outsb
sarb
sar
nop
popl
ss
sub
mov
in
hlt
and
aad
das
jge
cmp
pop
das
ret
pop
pop
mov
mov
cmp
jb
dec
iret
mov
loope
sub
enter
inc
flds
les
loopne
inc
in
or
mov
ljmp
or
les
inc
popa
adc
add
mov
or
dec
lahf
stos
adc
scas
mov
push
dec
out
sbb
dec
test
movsb
in
jbe
mov
sbb
lret
push
scas
dec
mov
xlat
in
scas
into
out
rcl
mov
mov
lds
in
mov
scas
cltd
jp
popa
rclb
aaa
mov
jp
dec
in
cmp
rsqrtps
andb
mov
xor
clc
mov
aas
adc
rcll
mov
ret
mov
pop
inc
xchg
xor
imul
mov
cmp
pop
or
test
xor
lret
dec
lret
jecxz
dec
test
shlb
out
xor
mov
cmc
out
add
jmp
popf
cmp
jmp
cmp
mov
pop
shlb
pop
sub
aas
std
in
stos
sbb
in
sub
or
rcl
leave
push
rcr
mov
fstpt
sarl
into
mov
and
lcallw
jg
push
adc
aam
and
sub
mov
in
and
loop
fmull
shll
mov
mov
mov
pushf
mov
inc
movsl
fsub
sub
pop
xchg
popf
dec
dec
rcr
cmp
add
or
add
jno
fs
mov
fbstp
aaa
add
int
imul
nop
or
sub
shll
add
mov
mov
mov
cmp
cwtl
sub
adc
pop
xchg
call
popf
mov
adc
mov
cmpsb
movsb
dec
ds
xchg
inc
bound
xchg
mov
aas
stc
push
adc
xchg
popa
push
jle
pop
and
inc
pusha
or
je,pt
pop
pop
test
shll
imul
xor
push
insl
mov
rcll
int3
lods
inc
xchg
mov
inc
lods
jno
jns
sub
scas
jae
loop
sbb
out
pop
mov
or
roll
in
mov
dec
ljmp
fildll
add
je
out
xchg
cmp
mov
ja
cli
or
xor
adc
pop
into
dec
jns
xor
hlt
shr
das
test
xor
sbb
xor
in
or
sbb
mov
push
aam
das
insl
mov
mov
cwtl
add
inc
mov
push
leave
adc
or
mov
inc
popf
dec
push
jg
lcall
pop
push
lods
fs
cltd
movsb
add
mov
rorb
andb
sbb
pop
pushf
sub
mov
mov
jg
cltd
dec
loop
and
inc
iret
mov
aaa
decl
loop
or
es
rolb
sbb
push
cld
lret
shrb
adc
or
cmp
pop
gs
adc
xorb
mov
add
mov
outsb
ret
lock
push
mov
xor
sbb
je
push
dec
mov
xor
and
int
mov
jae
inc
mov
mov
cltd
jne
test
mov
dec
out
mov
lret
sbb
into
and
jmp
jns
les
or
lock
iret
adc
fldt
sub
leave
aam
pop
iret
mov
pop
mov
fcompl
call
adc
loopne
in
adc
or
pop
mov
in
mov
repz
loopne
pop
push
xchg
jecxz
mov
stc
adc
pop
lcall
mov
pusha
or
jle
cmp
cmc
adcl
dec
pushf
das
cmpsb
ret
dec
addr16
testb
jecxz
xchg
aaa
pushf
test
jnp
stc
xorl
dec
push
test
iret
pop
mov
cli
pusha
or
pop
shl
scas
fstl
or
add
outsb
popf
mov
ret
cld
and
addl
sub
in
ljmp
sub
adc
cmp
cmpsb
iret
mov
leave
lea
mov
ja
xchg
cmp
xor
cmpl
icebp
mov
pusha
fnsave
enter
or
and
push
jg
aam
inc
popa
repnz
repnz
xor
push
sti
cwtl
fiadds
adc
fstl
fdivrs
inc
or
mov
pop
dec
ret
int3
shll
adc
mov
push
jo
ss
out
pop
sti
mov
aam
sub
mov
inc
adc
jge
repnz
push
pushf
xor
out
mov
add
dec
fwait
xchg
clc
test
repz
jg
dec
xor
repz
adc
mov
mov
das
mov
adc
ja
sarb
pop
jmp
mov
testb
into
cwtl
clc
fldenv
js
ret
push
add
divb
mov
inc
insb
in
mov
dec
fstps
mov
imul
pop
push
and
call
push
lods
out
xor
sar
aad
jbe
adc
dec
push
mov
mov
cmp
call
dec
loopne
mov
in
xchg
repz
pusha
mov
out
pop
in
and
cs
orb
cmp
or
in
insl
sti
sbb
loop
lret
das
cmp
mov
inc
clc
inc
lahf
push
or
clc
adc
mov
imul
imul
mov
mov
cwtl
adc
lcall
test
les
or
test
gs
sbb
lock
out
mov
xor
mov
jp
pop
mov
mov
mov
ficomps
xor
lcall
mov
insl
mov
jbe
movsb
sub
mov
push
lahf
je
adc
mov
pop
js
mov
test
pop
jae
arpl
cmp
jbe
add
jns
cwtl
mov
sub
jbe
lea
dec
jo
les
iret
xor
bound
mov
cmovs
mov
jp
push
mov
fisubrs
mov
lock
inc
std
lods
mov
mov
or
cmp
push
mov
out
ja,pn
les
das
les
mov
cmp
xchg
sbb
mov
mov
xchg
in
xchg
mov
pusha
icebp
imul
adc
xchg
cli
add
pop
dec
fcmovb
ficomps
pop
cld
addl
mov
loope
mov
scas
push
loop
mov
test
xor
in
fwait
mov
mov
andl
xchg
xor
loope
xor
test
adc
repz
push
adc
rorl
fstpl
sbb
adc
xorl
imul
dec
negl
add
hlt
in
pop
push
sub
sbb
scas
test
push
je
mov
xor
and
mov
or
dec
xor
fisubrl
jo
out
jecxz
insl
mov
xor
cs
movsb
out
scas
data16
and
jbe
dec
je
popa
sbb
pop
rcrb
dec
loope
mov
adc
fcoml
out
cmpsb
loop
clc
xor
or
jle
inc
xchg
ja
call
fistpll
sbb
stos
mov
cltd
stos
mov
cltd
test
inc
adc
fisttps
xchg
hlt
add
lds
jp
loopne
add
mov
or
dec
and
xchg
aaa
push
dec
xchg
mov
push
divb
push
cmp
test
dec
and
dec
pop
je
sub
repz
mov
sbb
ret
scas
and
pop
in
repnz
mov
or
bound
mov
scas
pop
test
add
jge
and
pop
fs
xchg
dec
jne
test
scas
cmpsb
adc
lods
jne
adc
xorl
ds
data16
cmc
push
sub
pop
push
roll
ret
push
xor
sbb
shll
jle
cmpsl
aad
rcrl
xchg
fmuls
push
sub
rol
mov
cmpsl
lods
test
es
dec
out
mov
jne
ficompl
and
dec
push
fnstenv
pusha
mov
mov
jp
mov
mov
push
cmp
sbb
pushf
adc
add
icebp
outsl
add
xchg
xorb
ret
xchg
cmc
xchg
aad
outsl
sub
pop
and
int
cmp
or
mov
pop
shlb
push
lods
cli
dec
pop
std
outsb
notl
sbb
nop
insb
int3
xor
stos
mov
jno
adc
lds
or
push
mov
xlat
test
cs
outsb
jp
cwtl
pop
dec
or
loopne
pop
xchg
inc
push
iret
stos
lret
xor
dec
scas
jno
jmp
insb
xor
mov
xchg
add
pop
sub
pop
mov
aam
lock
pop
out
xchg
mov
in
mov
xchg
dec
jno
mov
das
inc
movsl
aaa
and
mov
lds
sbb
dec
insb
nop
mov
cld
in
jae
xchg
mov
insl
mov
iret
dec
add
adc
aaa
xor
fwait
push
leave
stos
inc
inc
adc
mov
xor
mov
ret
jecxz
leave
push
insb
fstps
aaa
pop
xchg
mulb
jmp
movsb
sub
or
sub
cld
or
cmp
insb
lcall
pushf
push
orb
jp
dec
mov
aad
and
mov
outsl
outsb
jne
or
pop
addr16
mov
jbe
jle
lahf
lds
mov
add
cmp
decb
insl
sub
test
and
jne
dec
jg
inc
clc
out
xchg
out
stc
xlat
mov
lea
adc
xor
popf
lods
mov
mov
push
out
dec
int3
pusha
xlat
test
les
andb
mov
mov
es
js
push
pop
mov
inc
push
and
nop
add
sub
lods
icebp
sub
pop
sbb
pop
call
and
int
fadds
paddd
cs
adc
cmc
mov
mov
push
adc
mov
bound
mov
aaa
inc
sbb
hlt
adcw
dec
shlb
ficompl
data16
xchg
test
pop
lods
push
cli
bsf
add
mov
push
insl
or
stos
fadds
in
in
ret
popa
test
fistpll
push
cmp
ljmp
repz
pop
pop
or
mov
and
outsl
pop
xchg
cmp
repnz
inc
outsl
push
push
pushf
cmp
test
sti
cmpsb
push
cltd
or
ja
inc
mov
cld
fs
pop
dec
inc
lods
hlt
or
pop
xor
imul
push
scas
in
shl
mov
jl
test
in
es
pusha
loopne
jne
nop
xor
jns
mov
nop
cmp
jno
cmp
das
in
loop
sbb
aam
xchg
jmp
into
push
xchg
subb
jmp
jle
aaa
es
jecxz
ret
cld
out
mov
mov
cmp
loope
je
in
rcrb
mov
dec
adc
jg
mov
inc
add
lds
aas
fwait
jnp
rcrb
lods
push
hlt
bnd
cmp
popl
dec
sbb
ud0
mov
mov
mov
cld
push
lcall
sub
mov
ret
sub
dec
test
cld
and
sbb
callw
fbld
xor
mov
pop
cmp
mov
or
mov
jns
or
or
add
xchg
frstor
fldenv
xchg
mov
mov
subb
jb
inc
leave
cmpb
sub
push
xchg
pop
out
aaa
lods
jl
xlat
ljmp
mov
xlat
cmp
mov
and
ret
dec
pop
call
leave
push
lcall
or
movsb
cmp
lcall
mov
lret
out
xlat
loop
out
inc
cmp
int3
mov
or
ret
in
inc
imul
xor
ror
mov
sti
sbb
lds
cmpl
inc
clc
push
clc
sub
mov
add
lods
and
push
adc
jae
sub
pop
out
push
and
ret
adc
aad
push
fnstsw
test
xchg
pop
js
or
into
xchg
scas
movsl
add
hlt
je
popa
push
movsb
movsb
xor
sub
or
jp
jae
xor
mov
pusha
push
mov
cld
push
sbb
mov
xor
popf
inc
jg
sub
pop
dec
jecxz
sbb
cmpsb
pop
push
addl
inc
lret
sbb
dec
clc
jbe
icebp
in
mov
mov
pusha
fistpl
ss
stc
rorl
in
and
ljmp
sub
adcb
pushf
dec
sbb
jae
enter
pminub
repz
and
add
mov
movsl
and
aas
lret
sahf
call
pushf
ja
ficoms
xor
cmp
push
testb
int
aaa
clc
outsl
and
mov
and
sbb
in
add
lods
rorl
ds
into
mov
out
xchg
cmp
xchg
rcrb
mov
mov
and
lods
scas
jge
subb
in
mov
mov
push
add
xchg
cmp
inc
fiadds
push
repnz
and
xchg
pop
add
mov
popf
sub
cmp
dec
pop
fcompl
les
pop
push
repz
pop
or
mov
aaa
pop
in
sbb
pop
scas
dec
pop
inc
aaa
mov
xchg
dec
aam
enter
fs
or
sbb
or
inc
das
cmp
cmp
adc
daa
and
and
addr16
frstor
inc
xor
in
loopne
sbb
das
dec
pop
iret
loopne
push
out
mov
repz
call
add
jg
dec
xchg
push
jbe
xchg
imul
into
sub
mov
add
rolb
adcl
or
je
mov
shll
call
add
push
sbb
out
testl
mov
aaa
les
pop
icebp
cmp
push
rcrb
sub
and
inc
inc
cld
shll
push
mov
popa
xor
mov
leave
popa
inc
cwtl
cs
movsl
imul
inc
shl
mov
test
mov
jno
mov
inc
mov
lock
out
out
daa
cmp
iret
pop
push
lret
pop
repz
fcmovnb
ret
test
adc
sti
cmp
jno
adc
jae
adc
sbb
aas
mov
idivb
lcall
dec
jmp
into
out
sarl
sbb
jmp
mov
mov
icebp
in
pusha
out
xchg
scas
les
jg
push
in
pop
movsbl
loope
cli
pop
and
js
outsl
cs
push
and
jnp
dec
les
cmp
cmpsl
cmp
shll
xor
xor
imul
inc
aam
iret
idivl
cmp
shlb
lcall
mov
push
iret
aam
jp
pop
addl
insl
push
lock
inc
inc
xor
sub
sub
js
jns
dec
mov
mov
jae
dec
jmp
clc
or
sti
repz
popf
jb
shll
cld
arpl
fscale
xor
repnz
shlb
ss
shrl
out
push
cmpsl
arpl
jbe
push
pop
iret
cltd
adc
add
inc
mov
xor
xor
rolw
sbb
cld
andb
push
ss
sbb
das
cmpsb
out
orl
mov
jle
jl
popa
aaa
sbb
pop
sbb
xor
sbb
sbb
cmp
cli
xchg
mov
xchg
cmp
gs
and
jno
dec
iret
xchg
je
jl
push
xor
enter
ds
sarl
mov
das
pop
sbb
xor
leave
rol
repz
pop
push
mov
cmpsb
mov
mov
std
cmp
jmp
dec
pushf
out
jns
dec
jmp
in
daa
xor
push
inc
cmp
subl
sub
cmp
les
lock
lock
pop
repz
cmp
adc
xchg
xchg
fwait
enter
fstps
and
pop
sub
loopne
jg
jbe
mov
cmc
rcrb
loop
cmc
jl
cmp
arpl
xor
add
gs
pop
add
in
fstps
clc
jne
cmp
loope
addr16
pop
jmp
in
xchg
jmp
push
dec
jle
mov
pop
jne
xor
and
bound
dec
push
or
loopne
in
push
mov
jne
faddl
jbe
daa
mov
sbbb
cwtl
push
pusha
cmp
pop
push
mov
es
inc
popa
addr16
jecxz
fucomip
jo
xor
push
push
xor
sub
arpl
jne
ds
or
pusha
jae
jae
inc
jnp
popf
xor
mov
mov
sub
pop
cmp
pop
movsb
sbb
cltd
pop
stc
aas
fstpl
rorb
sarb
push
scas
mov
fwait
pop
ss
push
push
mov
cmp
dec
or
out
jne
pop
les
xchg
clc
dec
mov
sahf
sbb
cmpsl
mov
jno
mov
push
jmp
fmulp
push
jnp
or
push
cmpsb
leave
cmpsb
lret
pop
pop
jecxz
ficomps
xchg
dec
stc
mov
fldcw
in
xchg
and
mov
mov
push
push
xchg
mov
mov
pushf
xor
ss
push
xchg
nop
push
arpl
pop
cmp
cmp
sarb
xor
push
rcr
fs
je
mov
out
ljmp
fwait
cmp
push
and
or
add
mov
xchg
xchg
inc
xor
mov
fwait
mov
lock
lret
scas
in
loope
inc
mov
and
jb
push
mov
loop
jbe
outsb
inc
popf
lret
sarb
sub
test
or
sti
jb
scas
mov
xor
sub
aaa
push
in
mov
rcrb
lods
cs
and
stos
jl
mov
mov
cwtl
out
and
out
jmp
lcall
loop
sbb
or
pop
cmp
lahf
sub
repz
adc
or
xor
sbb
sbb
mov
xchg
and
xchg
jno
mov
je
xor
and
scas
ja
pop
jbe
addr16
fidivl
sbb
icebp
xor
ja
xor
and
lret
xchg
aad
test
sbb
data16
dec
idiv
xlat
and
cmp
xor
pop
sub
sbb
sub
rorl
outsl
sar
or
xor
iret
xchg
dec
sbb
add
into
mull
aam
push
mov
mov
sti
push
push
pusha
mov
lods
mov
dec
cmp
fsubrs
jl
push
add
or
in
push
pop
or
stos
adc
addr16
out
mov
xchg
das
imul
xchg
in
mov
repz
lods
repz
xchg
fistps
sbb
ficomps
sub
xchg
push
out
sub
pop
push
push
push
pusha
xchg
mov
mov
jno
andb
push
movsb
pop
mov
mov
cwtl
cmp
pop
popa
rorl
xchg
adcb
aad
mov
adc
mov
hlt
add
fnstcw
mov
or
xchg
or
pop
filds
gs
push
or
shl
dec
fildl
test
or
mov
aam
insl
push
mov
scas
jmp
mov
push
pop
add
jge
and
out
add
jle
cmpsb
xorl
mov
lods
test
hlt
pushf
pop
jne
jmp
or
push
mov
paddusb
jo
inc
movsb
ret
fistpll
lock
xor
push
fwait
inc
in
aaa
push
mov
aad
xor
pop
js
or
jne
mov
in
push
push
in
test
mov
fildll
ja
insl
xchg
cmpsb
bound
dec
idivb
mov
xor
scas
cmc
mov
mov
mov
pop
or
adc
and
mulb
xchg
mov
and
dec
pusha
cmc
jns
mov
add
xchg
shr
jg
and
pushf
data16
add
jmp
ror
xor
js
xchg
dec
int
les
push
out
jae
xchg
ret
int
out
in
pusha
jo
das
mov
lods
add
inc
xor
add
push
leave
inc
aam
mov
push
shll
sti
lahf
push
cmp
push
daa
push
loop
fisttpl
negl
les
adc
add
roll
fsubrl
lods
lock
sbb
jbe
xchg
imul
xchg
sub
xor
pop
fldenv
add
cli
int3
mov
and
or
sbb
push
inc
cmp
imul
inc
mov
cmp
add
gs
push
mov
sbb
imul
loope
jle
test
or
or
out
mov
and
sub
mov
mov
lock
sub
outsl
mov
inc
dec
jmp
dec
pushf
stos
in
ja
dec
xor
mov
or
adc
add
xchg
mov
inc
kmovw
adc
ret
mov
scas
or
cmc
mov
or
fwait
adc
enter
mov
iret
pop
mov
sub
or
into
sbb
rcll
pop
dec
lcall
xor
out
or
push
xchg
out
xor
leave
daa
stos
dec
xchg
testb
xchg
out
mov
add
inc
aaa
scas
icebp
push
addr16
pop
add
dec
sbb
push
jcxz
sbb
imul
outsl
mov
and
les
test
xchg
push
cltd
cmp
sub
or
ret
arpl
std
xchg
iret
loope
jnp
mov
cltd
dec
cmp
mov
cmp
stos
xor
cmpsb
sub
pop
jno
lods
jo
push
pop
bound
mov
iret
test
lahf
iret
adc
add
shlb
push
xchg
sub
jns
fwait
arpl
faddl
mov
jecxz
lock
mov
scas
mov
int
orb
dec
andl
mov
cmc
and
in
icebp
lods
xchg
insb
nop
bound
insb
cmpsb
jns
add
roll
or
push
mov
pop
push
jmp
jno
mov
jp
and
jb
sbb
xchg
ljmp
cmp
push
lret
movsl
and
movsb
enter
lret
in
pop
stos
imul
fisttpl
adc
mov
jnp
inc
xchg
add
push
addr16
and
rcrl
xchg
cmp
repz
cmc
sbb
in
xchg
or
sbbl
and
icebp
dec
ja
popa
lret
lock
adc
int
inc
pop
imul
inc
je
xchg
scas
add
cli
mov
mov
inc
inc
cmp
xor
jo
sub
mov
gs
sub
inc
fwait
cmp
outsl
sub
lock
frstor
jge
mov
xchg
repz
sbb
cmp
in
in
lcall
push
ret
dec
lock
dec
jno
sbb
inc
mov
je
mov
sbb
add
mov
sbb
xlat
icebp
test
cmp
lret
loopne
push
je
xor
sub
stos
call
notl
sub
pop
mov
stos
cwtl
rcrl
lcall
mov
in
lcall
sbbb
adc
out
movnti
sahf
jmp
or
push
sub
jne
in
jmp
sub
mov
aam
push
sub
add
xor
xchg
push
mov
cmpsl
adc
leave
mov
lods
stos
inc
scas
daa
xchg
push
sbbb
decb
mov
clc
dec
mov
inc
mov
test
fwait
hlt
mov
insl
jno
clc
xor
repnz
sbb
mov
adc
mov
fnsave
mov
pop
jle
push
popa
xlat
cmp
out
movsb
dec
stos
es
stos
data16
movsl
sbb
pop
mov
adc
inc
lret
loop
push
or
pop
push
xchg
ret
mov
xor
add
fidivrl
jae
jne
mov
lcall
xor
cmp
cwtl
sub
std
ja
lock
adc
gs
arpl
push
in
jle
jmp
shrl
in
hlt
pop
aam
mov
leave
mov
mov
cltd
cmc
loopne
rorb
test
mov
mov
mov
test
adc
das
push
sub
sbb
out
bound
mov
mov
adc
int3
push
sbb
rol
xchg
xor
mov
mov
jmp
ret
mov
push
scas
loopne
xchg
addr16
sbb
inc
mov
pop
sbb
outsl
mov
cmp
scas
fnstsw
dec
into
cmpsb
mov
add
add
mov
pop
or
roll
push
pop
adc
push
out
inc
lcall
xor
cltd
cltd
xchg
sarl
inc
outsb
sub
imul
push
jbe
lahf
mov
hlt
xchg
xchg
mov
das
lods
xchg
sbb
xor
sub
sbb
js
cli
cmp
add
movsb
push
adc
lcall
movsb
cmp
add
sub
leave
cli
lea
negl
xlat
xor
imul
sbbb
adc
adc
lea
jge
ret
push
mov
cmpsb
sub
xchg
xor
jg
sbb
fimuls
pop
xorl
std
add
mov
and
jp
pop
jmp
ret
lods
popf
shl
jbe
cmc
dec
jmp
fsubr
outsb
adc
pop
mov
mov
das
and
and
dec
mov
mov
insb
sub
mov
lcall
sub
pop
sahf
je
adc
pop
push
dec
jo
push
es
push
scas
add
add
inc
inc
inc
jo
jb
roll
push
xlat
push
add
mov
jp
dec
xchg
add
pop
inc
xchg
sub
jecxz
cli
ljmp
cmp
push
add
loop
das
sub
push
jns
lret
or
cmp
or
fnsave
in
aam
out
jge
mov
aad
addr16
and
xchg
pusha
sub
je
sbb
fdivs
call
mov
fwait
fists
dec
out
sbb
das
mov
jle
lods
cmp
in
add
add
inc
pop
ret
je
add
mov
imul
pop
xchg
mov
xchg
jle
inc
dec
mov
mov
sbb
addr16
clc
mov
or
or
in
mov
pusha
cmp
popa
mov
inc
cmp
fisubl
xchg
daa
jle
push
jle
sub
mov
cli
mov
xor
das
push
pop
call
xor
outsb
fisubrs
add
jl
mov
leave
mov
test
or
lea
sub
pop
cmp
jmp
mov
pop
jns
sbb
fisttpll
outsl
xchg
out
movsb
mov
stos
cmc
xchg
jb
inc
pop
mov
mov
into
mov
movl
in
adc
outsl
in
jbe
jns
jae
mov
ret
mov
xchg
jo
loop
mov
das
mov
test
inc
jo
push
sbb
xlat
into
and
cs
clc
movsl
cld
pop
xor
xor
outsl
fwait
jne
lret
jp
stos
dec
insl
mov
jb
sbb
dec
lea
frstpm(287
ss
sbb
movsb
leave
fs
mov
jmp
clc
imulb
sarl
push
push
push
cmp
cltd
fldt
dec
sub
loop
in
cli
dec
shlb
push
or
js
pop
cmpsl
arpl
imul
or
xor
mov
test
sbb
jle
inc
push
enter
pop
mov
sub
shll
imul
mov
mov
mov
insl
ret
xchg
xchg
dec
xchg
dec
pop
pusha
cmp
add
jns
imul
mov
into
fildll
ret
sub
xor
lock
js
mov
imul
cmp
mov
push
mov
mov
ja
adc
shr
pop
repnz
outsl
sub
xor
jg
jno
inc
mov
mov
xchg
insb
stos
mov
mov
stc
iret
xchg
inc
rol
into
cmpb
mov
adc
or
nop
mov
adc
jmp
icebp
popf
jp
add
ja
stc
pop
repnz
inc
stos
jmp
ret
inc
in
lcall
aas
adc
movsb
add
pusha
sub
jle
cltd
sti
pop
inc
pop
not
jbe
or
cmp
dec
je
mov
nop
data16
inc
fsub
das
scas
lea
mov
cld
jnp
sub
mov
in
sub
repnz
or
jmp
mov
cmp
xchg
out
push
pop
pop
inc
jp
fcomp
lret
mov
ret
mov
loop
mov
stos
aaa
loopne
jle
xchg
and
xlat
sti
adc
les
adc
sub
pushf
inc
jecxz
icebp
mov
mov
add
ja
mov
dec
sub
dec
out
adc
sub
pop
dec
dec
mov
mov
mov
iret
aam
imul
mov
inc
popa
stos
ljmp
cli
xchg
lret
cmp
push
mov
cwtl
jno
shrl
xor
in
add
inc
push
mov
cmp
jmp
xor
daa
mov
insb
jmp
hlt
pop
cmp
jg
jle
fcomp
jmp
test
and
scas
xchg
push
or
xchg
lods
or
push
fstpl
jp
mov
fists
push
movsl
stc
repnz
sahf
adc
call
mov
xor
add
pop
pop
xchg
mov
es
sahf
push
lods
inc
arpl
mov
inc
mov
scas
mov
mov
and
adc
cmp
jge
push
mov
cmc
dec
movsl
pusha
sub
push
aaa
mov
mov
sbb
sbb
out
out
pop
stos
ret
mov
pop
xchg
test
ds
insb
and
jo
rolb
bound
pop
inc
pop
xchg
pop
out
cmpsb
mov
add
in
iret
mov
call
inc
les
push
push
and
jmp
mov
jg
insl
and
mov
adc
mov
push
or
cwtl
fisttpl
cs
inc
cmp
test
dec
insb
lret
clc
ds
jmp
xlat
lods
mov
sbb
sbb
rcl
mov
scas
adc
jns
lods
pop
subb
dec
jecxz
sub
pop
pop
sub
pop
jmp
adc
jl
mov
adc
xor
jne
dec
dec
sub
mov
insl
inc
std
push
mov
cmc
insl
dec
lret
out
xor
mov
out
shll
jns
cs
and
aad
xchg
xchg
jb
aas
xlat
xchg
data16
or
lods
jb
mov
push
fistl
mov
sbb
and
fldl
push
mov
mov
out
jl
out
push
xchg
pop
jp
ljmp
add
cmp
and
lds
into
jns
outsb
inc
dec
push
fs
inc
dec
adc
xor
or
popa
add
aad
mov
inc
test
xchg
xchg
cmp
push
std
or
popf
stc
bound
pop
pop
xchg
loope
mov
je
jno
pop
jnp
lcall
xchg
dec
jo
aam
push
mov
mov
lods
ret
xchg
pop
xchg
es
mulb
pop
sub
and
jp
mov
push
mov
sets
xchg
rcrl
sbb
imul
std
mov
lcall
mov
or
xchg
lods
xchg
push
inc
std
lret
cmp
mov
fmuls
aad
dec
fsubs
or
hlt
sbb
mov
push
lret
xchg
cmp
jmp
ss
daa
cli
ljmp
loopne
xor
shr
inc
inc
mov
push
movsl
or
movl
in
pop
cmc
data16
data16
jns
jne
mov
mov
mov
out
test
outsl
mov
in
and
ss
push
leave
lea
mov
mov
nop
or
jg
push
cwtl
or
jg
pop
push
test
push
data16
add
sub
ss
mov
push
pop
cmp
bound
inc
ret
push
push
loope
loopne
xchg
addr16
dec
adcb
mov
je
push
jbe
sbbl
stos
xchg
std
jns
loop
lret
lds
fisttps
xchg
dec
xor
aaa
mov
dec
pop
sub
dec
fs
enter
loopne
mov
dec
shlb
jle
mulb
mov
and
fnsave
jns
aam
lea
xor
jne
push
xchg
jae
enter
lods
cmpl
fisttpll
or
enter
lret
jne
sbb
outsb
fwait
in
pop
dec
inc
or
mov
arpl
inc
mov
cltd
bound
cmpsl
pop
jmp
cltd
adc
shlb
xor
xor
rol
ficoms
outsb
pop
adc
and
cmp
cwtl
pop
out
aaa
and
push
jns
hlt
lods
out
xchg
mov
scas
pop
ds
cmp
mov
bound
cmp
fmull
sahf
cmp
sub
inc
jno
cld
popa
or
rolb
pushf
xchg
imul
daa
fwait
adc
xorl
sbb
add
cli
and
add
adc
push
adc
ljmp
pop
js
cs
xor
les
inc
sbb
cmp
jbe
dec
aad
dec
iret
xlat
icebp
lods
sbb
dec
or
xchg
push
jo
add
mov
loope
cmp
inc
dec
fsubl
sbb
scas
xor
arpl
in
jne
shrl
loope
outsl
xor
andl
xor
push
mov
xor
and
pop
out
das
jge
or
cmpsl
mov
xchg
inc
imul
jmp
cld
cmp
int3
mov
xchg
movsl
insb
pop
loope
sahf
cmp
iret
outsl
add
and
jne
inc
or
mov
dec
ret
inc
out
mov
ficompl
into
daa
addb
mov
jmp
and
inc
and
mov
shll
in
push
loopne
jg
negb
mov
cmp
stc
movsb
jmp
inc
outsl
bound
ret
inc
push
pop
jge
out
out
andb
or
push
sbb
orl
mov
pop
sbb
mov
mulb
xor
cmp
xorl
in
cs
xlat
xchg
mov
movsb
inc
out
add
jae
cmpsl
sbb
xor
dec
or
mov
or
and
ds
leave
pop
dec
ret
ljmp
sti
sub
iret
out
adcl
movsb
cli
mov
add
cli
icebp
dec
mov
adcl
popa
faddl
in
cmpsb
lods
sahf
pushf
push
cmp
fwait
adc
js
xchg
lock
lods
gs
loop
out
sub
out
and
add
in
pop
inc
push
cmp
adc
leave
stos
jo
lods
ret
push
add
inc
insl
loope
jmp
fnstcw
push
pusha
xor
faddp
push
push
mov
jge
push
fiaddl
xchg
pop
mov
sbb
add
mov
hlt
notl
xchg
xor
fcoml
call
stc
xor
jge,pt
dec
adc
sbb
inc
lahf
popf
in
mov
push
subl
add
mov
aaa
or
iret
enter
imul
fsubs
mov
inc
push
dec
xor
or
and
pushf
jmp
mov
pusha
lret
clc
sarl
xor
or
mov
enter
jl
test
punpcklbw
push
imul
jp
add
pop
mov
adc
inc
pushf
fimull
xor
pusha
mov
mov
popf
or
or
push
mov
add
sbb
mov
pop
xchg
ja
mov
sub
js
aas
adc
nop
test
jmp
add
jnp
mov
or
in
lahf
stos
push
fwait
add
and
jmp
pop
outsl
sub
or
cld
leave
popf
push
xchg
lock
data16
aaa
dec
repz
scas
adc
fs
xchg
sub
mov
mov
xlat
and
xor
mov
lea
negl
inc
outsl
imul
in
lret
mov
scas
inc
xor
pop
jmp
ret
xchg
bound
js
fildl
mov
and
insl
or
leave
cmp
movsb
xchg
test
int
jb
mov
xchg
jo
stc
aaa
ljmp
jae
adc
or
xor
xchg
mov
pop
push
ja
ss
mov
xlat
aad
sub
pusha
fisttps
or
ja
cmc
mov
fldt
mov
aaa
mull
subl
test
adc
mov
js
ja
mov
push
xchg
xchg
push
xchg
cs
std
int
lock
enter
lds
sti
cmpsb
and
divb
roll
or
mov
xor
push
pop
rorl
pop
loop
mov
inc
ja
pop
mov
xchg
add
out
fbstp
popf
in
lcall
ljmp
and
jmp
in
movsl
cmp
adc
fwait
mov
or
jbe
rorl
cmp
inc
cmpsb
push
stos
repz
xchg
pushf
addr16
lcall
mov
push
dec
pop
jmp
add
lret
lods
mov
arpl
push
outsl
stos
push
ss
repz
mov
or
imul
repz
dec
mov
or
xor
xchg
fsubs
inc
fiadds
sbb
mov
and
daa
push
pop
pop
cli
adc
sti
jg
in
xchg
xchg
incl
sub
push
test
sub
fwait
ja
mov
fisubrl
pop
gs
bound
mov
out
in
xor
mov
imul
adc
das
push
or
bound
mov
xchg
xlat
dec
subb
enter
xchg
movsb
repz
lods
adc
jns
jb
mov
fcoml
jne
scas
pusha
xchg
xor
pop
jp
dec
lahf
jo
clc
sbb
cmp
mov
addl
mov
or
cmp
dec
clc
pop
fiaddl
xlat
xor
in
push
sbb
adc
sti
mov
dec
or
cmp
mov
pop
cmp
mov
xor
int
xor
outsb
sub
std
and
orl
out
push
add
jecxz
sbb
lret
inc
add
addr16
jnp
lea
dec
bound
dec
pop
mov
bound
lds
adc
insb
imul
or
jle
xchg
je
icebp
push
cmc
es
jecxz
adc
and
sarb
mov
lods
push
call
ljmp
adc
out
xor
test
or
cmc
jg
and
std
and
imul
pop
lahf
fistpl
xchg
xchg
add
cwtl
je
or
loopne
mov
adc
lds
popa
xchg
addr16
push
sub
cld
pusha
push
xor
das
xor
xchg
rclb
and
xor
popa
repnz
imull
xor
ficomps
and
jae
cs
call
enter
adc
lea
pop
jle
adc
movsl
dec
add
pop
repz
adc
out
iret
testb
fistl
lock
stos
jg
jbe
cmc
push
sbb
or
repnz
sub
repz
test
lods
dec
imul
fcmovnu
movsb
outsl
mov
sbb
inc
push
cmp
out
inc
mov
imul
mov
sub
out
and
int3
inc
push
jnp
mov
sbb
stos
daa
bound
jp
stc
xchg
aaa
inc
sub
ret
mov
imul
push
pop
pop
adcl
inc
xchg
stos
int3
pushl
aaa
bound
fdiv
pop
jo
or
mov
rclb
and
scas
in
clc
cmp
test
ss
ret
or
pop
das
jg
mov
data16
out
dec
insb
cmp
inc
cmp
leave
mov
bound
fadds
inc
push
cmp
std
or
jp
jnp
je
loope
mov
xor
jecxz
aad
sub
push
add
leave
jge
movsb
push
and
mov
xor
out
xor
push
movsb
or
test
cmp
xchg
int3
dec
jecxz
notb
out
xor
sbb
pushf
decb
lds
nop
lods
add
mov
out
aaa
add
mov
xchg
jbe
mov
fcoml
push
sub
xor
stos
and
and
rcrb
xor
sbb
jmp
hlt
int
inc
sub
insb
mov
push
xor
jno
cltd
rclb
mov
pop
jp
movsb
adc
cmp
fistpll
imul
xchg
out
xchg
je
push
imul
cmp
push
std
inc
leave
mov
test
and
adc
aam
fstl
adc
dec
adc
jo
mov
cwtl
mov
lahf
icebp
or
pop
test
add
int
js
push
repnz
stos
add
les
stos
jb
and
fsincos
shll
pop
pop
lds
and
add
in
cmp
ljmp
nop
mov
jns
and
jge
dec
push
or
lret
xchg
push
nop
cmc
stos
push
movsb
xchg
push
test
fsubrs
bound
aad
daa
inc
js
inc
dec
pop
mov
jns
cld
dec
test
sub
push
adc
jne
out
popf
pusha
das
out
push
xchg
push
lret
push
adc
mov
jnp
lahf
loop
bound
hlt
jnp
ss
sbb
cmpsb
mov
leave
test
insl
ja
test
imul
inc
imul
cmp
fcomps
jb
mov
pop
sbb
jl
xchg
popa
jo
pushf
dec
js
add
xor
dec
cmp
lahf
sub
cmpsb
and
adc
aad
push
lcall
in
ds
inc
sahf
lahf
mov
sbb
jp
leave
scas
jl
inc
popf
mov
xlat
loopne
pop
sub
popl
fdivs
push
popf
ror
mov
sahf
into
lock
add
push
dec
outsl
loope
mov
xchg
xorl
loop
adc
arpl
add
sbb
js
ljmp
mov
ret
cmpsb
stos
ss
shll
int
sub
jle
rcrb
icebp
dec
shr
mov
neg
pop
xor
stos
rorb
roll
mov
mov
xchg
sbb
mov
pop
add
xchg
xlat
rolb
pop
in
xchg
jg
popf
push
cli
sti
pop
nop
punpckhdq
fistps
sti
aaa
jnp
jbe
cmpl
or
lret
mov
jbe,pt
sarb
xchg
mov
fiaddl
sbb
xchg
pop
rcll
scas
cmp
fistpll
mov
add
repz
dec
inc
inc
mov
lods
and
mov
arpl
fstpl
stc
ja
mov
push
pushf
pop
inc
push
ss
mov
add
jecxz
insl
adc
sub
sub
insl
outsl
and
inc
int
jl
daa
fiaddl
mov
jmpw
adc
mov
push
xor
pop
or
lods
add
cmp
push
sub
hlt
fidivl
js
divl
jne
mov
popf
das
mov
sub
and
jge
imul
xlat
xlat
aad
mov
test
hlt
pop
dec
repnz
dec
pop
jb
int
dec
in
shr
xchg
add
pop
sub
sub
adc
pop
lret
jb,pn
rcrl
jle
sti
and
sub
iret
add
fs
push
jmp
idivl
lock
data16
or
dec
sti
sub
int3
insb
dec
adc
jmp
ficomps
jle
loopne
push
mov
jge
jo
test
int
fwait
push
movsl
mov
mov
or
xor
std
xor
jo
push
fisttpll
xor
pop
or
lds
imul
repz
test
or
push
sub
clc
aaa
lock
mov
mov
repnz
xor
out
lods
clc
mov
sbb
push
lcall
sbb
fmulp
lock
loop
mov
xchg
mov
or
sar
int3
dec
loopne
pop
pop
sbb
sti
sbb
loopne
leave
mov
inc
cmp
js
fisttps
push
jmp
lods
test
add
ljmp
frstor
sbb
cli
xchg
rcl
pop
jg
add
mov
outsb
pop
insl
cwtl
cmp
jg
adc
loopne
imul
and
mov
add
sbb
cmp
pop
or
ljmp
cmp
add
int
fs
adc
pop
fucomp
jl
iret
adc
notl
inc
cltd
test
push
cli
subb
ljmp
mov
or
xchg
cmp
lret
lcall
jne
outsl
pop
mov
in
aas
pushf
lahf
jbe
dec
fstpt
sbb
outsb
push
xor
call
outsb
daa
mov
cmp
jnp
rcrb
cmp
scas
fisubs
jg
mov
cmp
or
or
jnp
or
pop
mov
pusha
adc
lods
and
pop
xchg
enter
roll
lods
push
ret
inc
pop
xchg
add
xchg
les
imul
outsl
sub
pop
into
cmp
push
add
pop
pop
xor
xor
imul
pop
mov
hlt
xchg
mov
pop
mov
inc
popa
popa
lret
xchg
and
or
std
insl
ret
mov
sub
js
int3
and
mov
popa
sar
fildl
shrl
arpl
sbb
leave
mov
dec
shlb
pusha
mov
push
dec
pop
test
aad
adc
cmp
adc
xor
test
fmull
mov
mov
leave
jl
lcall
xor
jb
jmp
out
xchg
adc
inc
notl
sbb
cld
xor
adc
clc
int3
jecxz
sbb
loop
adcb
icebp
mov
lret
sub
js
test
repnz
pop
push
push
repnz
ficompl
cmpsl
xlat
xchg
mov
mov
or
lahf
xor
xor
add
je
loope
pop
sbb
jmp
push
cmp
mov
sahf
jae
icebp
and
imul
sub
adc
mov
repz
fcmovnb
cmp
bound
leave
ss
dec
fnsave
cmp
pop
xor
shlb
jnp
adc
mov
mov
xchg
sbb
push
mov
imul
ss
dec
cmp
pop
fimull
jl
push
inc
sbb
push
inc
adc
cmp
sub
or
mov
stos
mov
iret
cli
mov
rcr
inc
popf
cltd
cmp
scas
jnp
pop
lock
mov
push
aad
cs
mov
lds
xchg
icebp
lds
ret
imul
mov
lret
add
aaa
dec
cwtl
pop
iret
incl
jge
pop
stos
test
stos
mov
loopne
mov
daa
jmp
outsl
in
es
mov
mov
outsb
jno
pop
test
pop
adc
fidivrs
ret
pop
dec
sbb
mov
xorl
lret
fwait
and
popf
xchg
cli
into
push
xchg
js
add
out
cmc
in
xchg
sbb
push
iret
xchg
cmc
pop
adc
jmp
in
mov
cmp
test
cwtl
push
stc
pop
in
jb
cwtl
jae
mov
cltd
mov
jno
sub
into
fwait
or
jmp
push
inc
or
adc
ret
push
push
xchg
cltd
sub
lret
repnz
cmp
fimull
add
push
inc
cli
and
inc
pushf
jge
in
mov
fisubs
or
out
loop
pop
daa
mov
inc
out
scas
pop
call
xor
imul
fstl
lods
hlt
xorl
cmc
xchg
mov
insb
sbb
ret
inc
push
and
jne
test
sub
fcmovnbe
clc
fnstenv
fnstenvs
xchg
scas
adc
std
xor
and
and
les
iret
sbbl
xorl
inc
sbb
ficoml
sbb
lock
outsb
xor
push
and
cld
or
push
insb
outsb
shlb
clc
inc
fwait
push
test
cld
jnp,pn
pop
stos
sub
jno
or
out
and
test
add
adc
or
xor
pop
repz
aad
aam
push
inc
lds
sub
test
add
jge
and
popf
jns
mov
repz
sbb
loopne
lea
daa
in
xchg
sub
aad
arpl
outsb
adc
adc
mov
sbb
xchg
bound
test
push
test
sub
inc
lret
or
stos
jno
inc
daa
pop
test
mov
test
add
xchg
lock
sbb
push
out
dec
mov
dec
jns
or
ds
mov
mov
xor
fistl
or
lds
bound
and
sub
add
xor
fsubs
mov
popa
inc
test
dec
shlb
push
int3
adc
xor
sub
sti
lret
movsl
in
sub
adc
dec
add
insb
sti
jb
sub
test
and
xor
inc
jmp
rolb
mov
mov
sbb
and
push
inc
in
test
sub
xlat
push
jg
ja
aam
pop
inc
inc
push
lds
repnz
xor
shll
adc
push
and
xor
aam
or
fldcw
leave
pop
jecxz
bound
int3
mov
sub
cmp
fdivl
push
jecxz
xchg
fcmovu
inc
jmp
cmp
test
mov
mov
js
stos
or
jmp
adcl
inc
push
mov
ja
mov
test
add
sti
mov
inc
lods
mov
pusha
cmpsb
stos
aam
cld
pop
sub
sub
mov
pusha
xchg
sub
adc
inc
iret
mov
lock
mov
dec
jns
ficoms
and
arpl
fidivl
jg
cs
or
xlat
inc
shrl
out
das
fwait
sub
jl
adc
leave
adc
in
sub
std
mov
iret
int3
push
test
inc
popf
cmp
inc
fdivrl
lret
mov
xor
fwait
pop
sub
jge
rorb
jbe
outsl
popa
jae
push
cmc
xor
or
hlt
push
sub
in
cmp
outsl
inc
mov
popa
pusha
ror
xchg
pop
aaa
shlb
fs
adc
fucomp
je
push
inc
sar
xchg
cmpsl
push
cmpsb
aaa
inc
ret
dec
dec
mov
add
inc
mov
mov
inc
ja
cld
lret
push
fisubrs
cli
mov
mov
rcll
or
dec
xor
cs
sub
lods
and
pop
jecxz
cli
addr16
cmp
aad
push
pop
incb
sub
xchg
add
mov
and
cmpsb
and
xor
push
es
fstps
mov
xor
ret
test
inc
sbb
xchg
adc
push
lcall
mov
push
movsl
in
outsb
addl
jmp
add
shlb
data16
inc
nop
lahf
in
int3
lods
push
cmc
xor
into
cwtl
ss
ret
sub
jno
sub
sbb
xchg
popf
outsb
sub
push
cmp
cmp
lahf
inc
inc
mov
aad
cli
dec
dec
mov
push
adc
inc
pop
loop
aad
push
jl
sbb
icebp
dec
pop
es
insb
mov
sahf
add
fldenv
ds
push
and
je
repz
movsl
cltd
shrb
sarl
inc
mov
movb
sahf
enter
pop
mov
xor
mov
jle
and
mov
adc
incl
imul
add
adc
pop
add
jge
incb
inc
dec
jecxz
or
mov
sub
lahf
rcll
lret
lds
sbb
adc
lods
mov
mov
pop
mov
enter
push
xorb
andb
jbe
push
arpl
les
fbld
push
clc
sbb
bound
xor
mov
sbb
push
sbb
xor
push
imul
dec
bound
pop
stos
ja
ds
mov
jle
xorb
xchg
sahf
cmpsl
push
in
mov
in
cwtl
sbb
ja
imul
mov
mov
sub
fadd
pop
cmp
pop
push
xor
rcrb
xor
cmp
mov
jns
mov
xchg
insb
movsl
pushf
insb
and
xlat
inc
idivb
add
movsb
xchg
cmp
lret
or
xchg
adc
mov
dec
popl
fisttpll
imul
mov
in
jne
stos
add
imul
out
mov
dec
sbb
mov
out
subps
cmp
hlt
or
call
adc
mov
in
popa
rol
filds
inc
test
fidivs
sub
fs
adc
dec
inc
outsb
fidivrl
dec
mov
lret
aad
xchg
pop
ss
cmp
movsb
push
daa
lahf
ret
test
insl
int
pushf
cs
inc
xchg
pop
xchg
ljmp
ret
jae
mulb
sti
pop
xor
and
adc
sahf
lret
mov
aad
mov
sub
and
int
lahf
inc
ret
js
jo
les
adc
mov
popf
pop
ret
push
or
xchg
icebp
dec
inc
push
and
push
int3
ret
adc
fldcw
in
mov
aaa
mov
cmp
iret
pop
pop
loopne
repnz
insb
xchg
into
xorl
andb
dec
xor
xchg
mov
push
pop
inc
mov
mov
jg
cmp
rorl
xorb
add
cmp
adc
shrb
dec
adc
cmc
jo
test
into
addr16
pop
rclb
fwait
out
inc
cmp
lods
nop
jle
dec
pop
jle
dec
sbb
test
mov
dec
xor
popf
xchg
test
xchg
imul
mov
shlb
sub
dec
loope
out
sbb
inc
push
and
jne
cmpsb
jne
xor
mov
out
enter
loopne
loop
mov
dec
jae
mov
gs
push
fldt
pop
inc
test
adc
xor
cltd
inc
sbb
or
mov
iret
cmp
lds
adc
out
pop
xchg
test
mov
lea
aaa
in
cmp
fildll
call
dec
jo
inc
pop
lret
lds
mov
cmp
imul
mov
cmp
cmp
sub
scas
inc
data16
hlt
int
or
jae
shl
dec
adc
mov
mov
cmp
sbb
sub
sahf
add
aas
pop
popf
popf
pop
test
fisubrs
push
sub
dec
xor
mov
arpl
push
ss
cmp
pop
push
repz
add
add
notb
lods
push
or
movsb
sub
daa
lods
xchg
xchg
sub
lds
add
cmp
lock
xlat
push
test
fisubl
dec
push
ds
or
mov
sub
cld
pusha
xor
gs
sti
pop
mov
mov
mov
jl
inc
mov
dec
ret
stos
mov
sbb
str
mov
ret
xchg
fidivs
loopne
inc
test
jmp
sub
jecxz
jmp
add
xchg
gs
dec
ds
rolb
dec
inc
daa
adc
jl
cmp
fs
add
add
lret
pop
or
dec
push
popf
in
xor
scas
jno
dec
ds
cmpsb
divb
cltd
loopne
mov
adc
ljmp
push
xor
std
pop
xor
xchg
push
aad
add
dec
sub
aam
dec
incb
push
pop
or
jns,pn
pop
mov
fs
fistpll
jnp
fidivrl
ljmp
mov
xchg
in
fistl
test
aam
inc
jl
dec
pop
iret
loope
inc
push
inc
cmp
aad
add
pop
sub
pop
int3
push
xchg
mov
or
insl
xor
lds
shll
adc
jns
in
adc
addb
call
inc
cmp
aam
fsubrp
cmp
notb
stc
cld
lods
pop
icebp
setnp
ret
sbb
fldt
repz
and
mov
push
outsb
fdivs
add
dec
pushf
jmp
sbb
push
scas
insb
push
or
push
leave
and
aam
leave
movsb
pusha
out
not
xor
jbe
mov
push
jge
daa
jmp
adc
test
jbe
xchg
cmp
test
xor
imulb
cwtl
enter
or
sub
mov
cs
dec
pop
dec
mov
addb
push
lcall
adc
sahf
jmp
mov
cmp
cmp
dec
ljmp
or
in
cmp
gs
add
mov
inc
mov
mov
inc
or
pop
push
fnstsw
adc
gs
pushf
cmp
sbb
push
test
test
mov
cmp
rdmsr
test
lods
aam
or
les
out
mov
add
mov
call
or
and
mov
xchg
xor
cld
out
in
mov
insb
scas
xor
aam
rcrl
mov
mov
jmp
ror
inc
mov
inc
cmp
cmp
stos
pop
fsubr
or
lods
mov
push
or
inc
add
pop
mov
je
outsb
jno
lock
lret
cmp
xor
imul
inc
outsb
aas
imul
adc
sarl
fisubs
adc
xor
aad
paddq
mov
lods
das
adc
lret
sti
outsb
sbb
inc
out
and
inc
iret
dec
insb
imul
pop
fsubrl
lcall
mov
test
test
je
icebp
enter
push
inc
cmpsb
mov
out
test
mov
int
or
rorb
add
push
fldenv
push
scas
lret
jmp
roll
cld
mov
dec
push
std
push
sub
dec
xchg
rorl
mov
jle
jbe
ds
clc
and
aaa
push
adc
roll
push
inc
jns
pop
push
xor
iret
sub
mov
inc
and
scas
iret
aad
add
xchg
jl
sysret
pop
mov
cmp
jle
std
movsl
rcll
fisttps
ficomps
push
cltd
and
ds
mov
push
dec
mov
sbb
int
pop
inc
dec
fs
push
imul
in
sarb
insb
jae
ss
xor
test
xchg
out
movb
fnsave
je
add
rcl
jb
xchg
xor
outsl
daa
loop
ljmp
add
sarb
cmpsl
and
lahf
enter
in
sahf
inc
dec
je
or
sarb
jns
cs
inc
mov
shll
loop
mov
fmuls
test
inc
and
jae
fimuls
dec
pop
dec
add
cmp
lahf
divl
ret
add
jmp
xchg
add
std
movl
daa
and
jmp
aad
push
fistpll
sub
stc
pusha
mov
and
out
lcall
mov
add
clc
mov
dec
mov
clc
jl
pop
mov
ret
sarl
or
in
rorb
out
pushf
xchg
sub
xchg
popf
jl
jg
test
std
in
imul
mov
cmpl
mov
xchg
addr16
mov
lcall
jp
mov
clc
xchg
sbb
pop
test
in
jecxz
mov
repnz
and
in
hlt
repnz
lcall
mov
int3
adc
mov
roll
ficoml
inc
es
jmp
sbbb
pop
es
mov
mov
movsb
test
rcll
mov
fcompl
adc
and
mov
cmp
lock
jmp
shrl
sub
data16
lea
pop
rorb
jns
mov
sub
enter
push
inc
loope
fsubl
outsb
sbb
mov
test
xchg
push
rorb
into
fs
popf
movsl
adc
mov
std
jl
mov
add
or
xor
lds
xor
movsl
adc
adc
inc
test
mov
pop
dec
stos
xchg
jbe
mul
sbb
xlat
enter
push
stos
out
jo
sbb
jnp
pop
int
scas
fs
cmp
and
ret
xchg
fsubs
sbb
insl
jmp
repz
addr16
jae
test
dec
insb
call
push
add
sbbl
push
inc
sti
push
aam
lcall
movsb
jl
outsb
ja
inc
testl
imul
shll
jmp
dec
lea
out
xor
adc
divb
rcll
in
inc
shl
cmp
mov
xlat
roll
cs
fbstp
and
test
ja
test
mov
das
push
xor
add
mov
pusha
push
stc
sub
pop
inc
mov
stos
add
dec
aas
xlat
mov
xor
jp
add
cbtw
add
test
and
lock
or
add
fldl
dec
stos
and
push
outsl
dec
xchg
inc
hlt
out
iret
leave
mov
cmpsb
xchg
enter
sub
lods
lret
xlat
lea
shlb
adc
in
lods
out
subb
out
jle
sbb
int
test
fldenv
xchg
mov
cltd
inc
pop
pop
ror
repz
inc
mov
inc
ret
add
sti
aad
ljmp
sar
jmp
loop
ja
dec
int3
mov
loopne
scas
and
push
mov
jecxz
jnp
inc
pop
push
pop
lea
in
pusha
dec
dec
int
mov
rclb
sub
out
dec
mov
and
scas
ret
adc
add
push
mov
pop
and
fadds
enter
std
jmp
xor
test
or
cwtl
sbb
mov
pop
aaa
jne
out
out
adc
pusha
sbb
ja
out
je
fcoms
sub
dec
xorb
sub
xchg
lds
insb
repz
xchg
and
pushf
stos
mov
stos
xor
pop
sub
mov
fdivrl
cmp
jmp
jno
int
aam
inc
fisttpll
nop
cltd
sbb
gs
inc
cmp
dec
xchg
lcall
mov
out
xchg
in
dec
xchg
sahf
int
add
ss
enter
mov
dec
push
pusha
xor
or
push
mov
call
and
pop
lds
test
cmc
fs
sbb
das
mulb
mov
cmp
packuswb
push
jnp
sti
jbe
arpl
jne
aad
gs
mov
dec
iret
mov
mov
sahf
cmp
pop
lds
pushf
pop
add
mov
in
mov
addr16
sbbb
sub
sbb
lret
into
popf
jae
nop
mov
sbb
dec
sub
stos
fstpt
dec
ja
addr16
xor
aaa
leave
lret
jnp
or
imul
ret
pop
or
jns
xor
movsb
mov
sub
mov
pop
fmuls
out
sahf
lods
lahf
or
jnp
or
lods
dec
sub
dec
fidivrs
inc
scas
xchg
movsl
inc
pushf
inc
mov
in
clc
cmp
dec
scas
sarl
mov
pop
aaa
lret
into
out
dec
add
int
notb
push
pop
jl
hlt
addl
jg
popf
mov
insl
add
sbb
cmp
push
dec
lret
mov
divl
in
je
mov
adc
cmp
jae
mov
sub
pop
xchg
aas
pop
mov
stc
sti
cs
jne
dec
inc
jns
mov
push
stos
rcl
je
or
jl
cmpsl
popf
popf
out
sti
sbb
jnp
jge
mov
pop
mov
cmc
and
popa
stos
dec
or
push
ljmp
bound
xor
aad
mov
cmpsb
dec
xchg
fdivrs
inc
rcl
movb
mov
ljmp
in
pushf
pop
lret
inc
mov
push
mov
aad
inc
and
mov
cmp
outsl
xor
pop
out
fisttps
mul
jmp
orl
lcall
data16
ja
lods
aam
add
push
lea
adc
mov
add
insb
popa
fidivl
mov
insl
push
test
not
mov
xor
addr16
in
xchg
jg
sbb
inc
cwtl
in
add
or
dec
mov
cwtl
lods
xchg
push
pop
pop
addr16
cmp
ficoms
xor
push
mov
stc
jmp
add
loop
lock
addr16
fistl
aad
call
hlt
scas
add
je
pop
cld
in
fdivs
loop
xchg
jecxz
test
lods
pop
dec
insb
inc
push
add
jecxz
cltd
mov
ja
pop
insl
jmp
int3
push
xchg
aaa
pop
cmc
repz
cli
pop
das
inc
mov
repnz
mov
xchg
inc
adc
cmp
mov
xor
cmp
push
pop
int3
xor
jbe
xchg
push
loop
sbb
push
sarb
jl
shrl
pusha
ficoml
jle
std
les
aam
mov
subb
mov
xchg
pushf
aas
pop
inc
pop
sub
pop
pop
test
lea
std
pop
lock
sahf
xchg
sbb
fsubl
jbe
pop
orl
enter
das
xor
xor
vinserti32x4
sub
mov
adc
xor
mov
fmull
mov
jmp
rcrl
insl
sub
inc
icebp
jnp
fwait
push
adc
lea
movsb
scas
sarb
cmp
push
mov
cltd
test
add
cli
or
xadd
imul
cmp
or
sub
ja
jge
scas
arpl
fcoms
loope
mov
dec
or
xor
faddl
xchg
mov
fs
imul
cmp
or
stos
adc
ss
nop
js
test
mov
push
rorl
sub
ret
adc
mov
adc
inc
jae
fdivrs
es
mov
push
or
jne
arpl
hlt
test
mov
xchg
mov
adc
jl
test
popf
cltd
cmp
stos
hlt
dec
or
cmp
xor
enter
adc
or
jecxz
dec
or
mov
xor
fstps
fsubrs
pop
mov
dec
and
dec
sbb
shrb
ret
movsl
mov
push
push
cmc
js
cwtl
inc
mov
imull
jne
xchg
stc
stos
in
push
sub
fcoml
je
mov
lods
fsubp
mov
cmp
cmp
in
jno
mov
movsl
dec
cwtl
mov
sbb
adc
xor
fwait
stos
rcrb
add
sub
sbb
mov
lret
dec
dec
notb
xchg
jl
ja
pushf
cmpsl
and
sub
cli
int3
orb
dec
shrl
jno
loop
ret
add
popa
jg,pn
cmp
mov
pop
pushf
into
inc
mov
fwait
hlt
arpl
loop
xor
lret
es
mov
jg
jecxz
jbe
or
rcpps
mov
pop
sbb
jnp
dec
cli
pop
addl
jmp
adc
mov
inc
in
jae
es
adc
lahf
repnz
aam
repnz
and
push
loop
aam
divl
pusha
imul
push
frstor
mov
push
mov
pop
xchg
pop
push
into
outsb
sub
xchg
mov
addr16
test
mov
sub
adc
xchg
sbb
mov
mov
or
subl
lahf
sbb
inc
icebp
xor
sub
cmp
and
fnstcw
jb
or
or
into
push
mov
xor
push
mov
loop
lods
out
push
cmpsb
dec
movsb
sti
lods
imul
repnz
and
xchg
jecxz
fistl
mov
xor
jge
insb
xor
ret
jmp
mov
int
lods
sub
sbb
int
lcall
sub
in
xchg
push
push
inc
mov
outsb
popa
pushf
jno
roll
push
scas
pop
and
into
js
dec
mov
leave
repz
ret
jo
ret
xchg
insb
popf
das
or
cmpsl
pop
f2xm1
paddb
stc
add
jp
jge
sub
scas
xor
adc
jl
int3
sbb
lret
test
ljmp
mov
or
dec
sub
dec
stos
data16
lcall
sbb
fdivl
shr
mov
inc
ds
int
enter
push
addr16
test
mov
lea
cmp
call
xor
loopne
push
pushf
mov
out
mov
mov
mov
jbe
push
imul
shll
pop
inc
dec
sahf
jmp
push
mov
or
dec
push
daa
pop
and
and
pop
je
xor
pop
add
xor
cmp
pop
repz
mov
mov
fmulp
mov
xor
pop
or
sub
loop
aam
jb
add
ds
mov
lcall
dec
idiv
ss
sbb
mov
mov
push
cmpsl
repnz
daa
mov
mov
dec
mov
mov
push
mov
sub
sbbl
jg
cmp
push
es
repnz
jmp
sbb
lea
je
cld
ret
inc
sbb
sub
lcall
test
adc
mov
cli
cmpsl
inc
sub
jge
and
inc
pop
test
mov
and
in
in
fistl
jnp
decb
insb
pop
mov
cmpsl
mov
enter
stc
int
xchg
lock
inc
inc
out
push
xlat
stos
pop
push
jno
xchg
in
jmp
or
fbld
add
cmpsb
ljmp
fwait
outsl
adc
faddp
aad
int3
call
and
fisubs
call
sub
add
push
xchg
stos
pop
cmp
inc
cmp
test
rol
cmp
shl
hlt
inc
jl
scas
hlt
add
push
xor
call
dec
in
in
loop
pop
push
add
mov
fsubl
or
jmp
fidivl
les
pop
in
dec
sub
add
in
je
sub
mov
mov
in
sub
pop
inc
mov
icebp
pop
repnz
dec
sub
dec
mov
pushf
test
arpl
cmp
pop
inc
shrb
icebp
mov
js
out
daa
rorl
test
int3
hlt
or
dec
dec
into
nop
push
mov
jge
adc
cmpsl
push
mov
shl
rorb
xchg
push
inc
push
push
ret
xchg
aad
or
ja
sub
pop
pushf
cmp
sub
sub
dec
jb
mov
mov
loop
hlt
scas
insb
inc
push
lea
add
mov
jne
jmp
mov
and
add
add
lret
pop
out
arpl
xchg
mov
dec
adc
and
popf
je
add
outsb
jecxz
dec
push
mov
clc
cmp
adc
xchg
inc
test
cld
mov
addb
push
into
aas
test
imulb
dec
adc
int
jl
cmp
mov
orb
pop
sub
jmp
in
sti
in
movb
out
mov
fldt
jo
sub
into
out
fisubrs
sub
cmp
lods
or
inc
jbe
nop
xor
addb
inc
pusha
daa
dec
out
in
push
repz
std
inc
push
rorb
mov
ret
or
adc
xchg
shrl
inc
mov
popa
jbe
add
or
dec
mov
pop
fdivrs
push
adc
cs
push
fcoms
js
jg
pop
data16
fucomip
push
test
jge
sbb
dec
sbb
int
nop
es
das
addb
or
sub
xchg
sub
ja
and
pop
dec
pop
and
in
pop
fldl
inc
push
loopne
test
mov
mov
xchg
cmpsb
sub
sahf
push
xchg
sbb
adc
sub
push
inc
das
insl
cld
cmp
xchg
shll
arpl
fidivrs
dec
out
jge
xlat
and
iret
dec
sub
jp
cmpsb
add
movsl
int
mov
popf
or
adc
lret
jecxz
aad
adc
ljmp
loop
add
das
push
imul
incl
jne
mov
cli
jnp
dec
adc
mov
jbe
loopne
aam
scas
call
and
cmc
push
sbb
pushl
and
roll
mov
jg
cmp
sarb
iret
and
popa
push
inc
bound
fisubrs
sbb
imul
xor
sub
push
mov
test
sub
sub
mov
imul
punpcklwd
dec
and
adc
dec
or
xchg
div
inc
popf
pop
cltd
add
and
das
cmp
sub
jp
loopne
push
popf
iret
jmp
loopne
shlb
pop
pop
jge
sub
mov
in
aam
fs
daa
push
or
daa
pop
or
sub
add
mov
mov
pop
ljmp
adc
daa
jl
aam
mov
push
aam
adc
lret
sbb
movsl
sub
clc
ror
sbb
or
mov
ljmp
bound
cmp
inc
dec
dec
in
xchg
sbb
mov
xchg
inc
mov
icebp
adc
movsl
xchg
or
or
outsl
imul
out
inc
sbb
arpl
mov
pop
lock
add
xchg
nop
xchg
leave
xlat
adc
mov
sub
mov
rcll
jnp
mov
mov
fwait
enter
ds
into
and
je
shlb
push
pop
rolb
adc
jle
jecxz
add
fisttps
inc
test
clc
repz
sbb
lds
adc
fs
xchg
in
lret
mov
fisttpll
and
stos
ljmp
pop
dec
lods
dec
adc
in
adc
jl
dec
push
dec
dec
xchg
adc
data16
dec
pushf
pop
xor
pusha
adc
sbb
addb
lds
and
pop
mov
jmp
add
inc
dec
add
or
das
pop
arpl
push
add
ss
loopne
push
push
jp
jmp
xchg
fstpt
xchg
test
popl
outsl
arpl
fwait
test
lea
xor
adc
scas
out
mov
inc
lret
rol
push
mov
sbb
aam
mov
or
xchg
fucomi
mov
add
xchg
aaa
and
sub
sub
and
sbb
or
sub
popf
aas
shlb
lods
lods
fnstenv
clc
mov
pop
int
insb
fwait
add
ds
mov
subl
lahf
sbb
cmc
cmp
xor
ds
stos
lcall
imul
ds
shrl
mov
gs
ret
jns
jnp
lods
out
sbb
bound
push
stos
in
out
movsl
inc
fisubs
fisttpll
push
mov
sub
fucomip
insl
jb
push
cmp
hlt
jmp
sub
vpcmpeqb
adc
mov
adc
cmp
imul
aad
jb
mov
or
xlat
xchg
cmpsl
cmp
push
xchg
rclb
mov
imul
push
arpl
fcoms
jne
nop
int
negl
adc
scas
stos
out
jns
mov
sbb
lods
in
into
lahf
aam
inc
cld
and
mov
movsb
mov
orb
jge
out
rorb
into
das
ret
daa
jl
fildl
mov
int
xchg
lahf
mov
repz
test
lock
mov
mov
cmp
sub
push
push
ja
or
ret
mov
test
sub
add
inc
data16
insb
sub
mov
pushf
sub
mov
or
shlb
xor
lret
mov
fdivrl
pop
jle
mov
inc
nop
mov
jb
shlb
pop
cmp
aas
dec
or
out
add
mov
xchg
enter
add
jo
push
repnz
push
andb
xchg
xlat
mov
pop
test
popa
enter
jne
idivl
sub
jl
adc
jno
movsb
and
and
stc
ds
test
or
mov
jae
shll
es
das
mov
ljmp
pop
mov
xlat
xchg
or
dec
scas
mov
sbb
inc
in
and
mov
lea
mov
dec
test
int
jecxz
mov
lock
sti
mov
xor
sbb
fmull
push
push
enter
ret
dec
dec
xor
pushf
pop
adc
add
jecxz
inc
xchg
out
test
xor
adc
push
rcr
mov
push
mov
dec
cmpsl
or
inc
cmc
push
jo
pop
xor
sub
hlt
cmc
xor
mov
sbb
pop
or
pop
das
sub
pop
out
jo
dec
movsl
fldl
fmuls
add
sub
lea
ret
in
data16
fwait
push
lret
inc
in
data16
sub
adc
les
movsl
xchg
addr16
stos
decl
out
movsb
sub
or
mov
out
pop
iret
inc
aad
lds
loope
or
cmp
orl
mov
pop
sbb
push
loopne
jecxz
mov
adc
jecxz
pop
out
mov
notb
stc
mov
incb
jp
push
sub
push
mov
shl
incl
repnz
jg
push
jb
cli
xchg
or
cmpl
loope
jo
rolb
dec
aad
xor
mov
aam
rorb
pop
call
mov
test
dec
andb
aas
xor
es
lahf
roll
out
sbb
repnz
stos
lret
dec
es
cli
dec
mov
jp
mov
dec
testb
popf
push
jecxz
sahf
cmpsl
inc
shrl
add
fcoms
inc
mov
daa
hlt
clc
sub
mov
or
shrl
icebp
add
mov
lret
stc
mov
mov
subl
sti
mov
push
xor
out
sbb
fldl
or
dec
les
xor
xor
movsb
subl
pusha
mov
xchg
mov
outsl
test
inc
mov
jne
out
mov
lret
xchg
and
mov
pop
mov
and
ds
daa
imul
data16
adc
push
inc
or
loopne
pop
adc
adc
es
shrl
les
xor
aas
orl
popf
inc
add
jbe
pop
cltd
loop
rorb
lahf
hlt
fstl
add
loopne
mov
xchg
pop
imul
dec
ds
xor
fldl
push
or
push
pop
and
cltd
mov
mov
cmp
les
dec
imul
cld
sbb
sbb
std
shlb
xchg
and
or
adc
mov
dec
das
scas
in
inc
push
mov
out
inc
mov
pop
dec
int
call
pop
nop
jnp
mov
cli
adc
and
shll
repnz
xchg
push
sub
add
xchg
sub
adc
inc
cs
test
ret
inc
pop
pushf
fadds
out
add
fs
dec
lods
aas
loop
adc
jbe
mov
fcmovnbe
mov
push
sbb
xchg
adc
cmp
ret
lods
sbb
int3
mov
dec
pop
out
lock
shrl
cmc
push
adc
dec
adc
clc
in
mov
lods
sub
out
je
ljmp
adc
mov
push
pushf
lahf
cmp
xchg
cwtl
es
jae
adc
add
dec
negl
pop
insb
sub
loop
dec
mov
cmc
sub
cld
aaa
test
cmp
testb
xchg
iret
jnp
pop
add
sub
mov
fwait
outsl
mov
into
push
scas
cmpsb
je
enter
pop
xor
loope
add
xorl
and
xchg
negb
enter
out
sub
jge
pusha
pop
lock
mov
fmull
xor
xchg
cwtl
sub
mov
aad
rcll
cmp
std
ret
cld
and
pushf
mov
lds
cmpsb
shll
in
sub
cli
adcb
mov
xchg
inc
sbb
xor
jne
dec
mov
lock
xlat
scas
mov
push
test
jmp
add
jo
xor
xor
push
jp
mov
popf
cmpsl
lock
insb
sbbb
and
push
push
repz
movsl
stos
inc
aaa
and
dec
std
inc
xor
cmp
xor
xlat
push
movsl
add
xor
scas
bsf
insl
and
inc
retw
push
push
int
cmp
inc
mov
xchg
out
movsb
mov
dec
cli
sub
add
mov
ljmp
push
mov
insl
dec
ja
pusha
das
inc
jmp
data16
jbe
orl
inc
mov
imul
mov
mov
cmpsl
xchg
adc
mov
dec
and
jg
inc
jl
sahf
or
xchg
fldcw
sbb
add
pusha
xchg
fstpt
dec
adc
inc
lret
adc
jp
and
aas
imul
mov
in
pop
lcall
pushf
pop
adc
std
into
xchg
jb
push
nop
sarb
or
add
pop
rcrb
adc
loope
rorl
test
fsub
sbb
sub
stc
pop
sbb
lock
andb
cmp
xor
fisubl
jae
mov
xor
push
cmp
int3
movsb
adc
cmp
sub
push
adc
stos
lods
add
and
or
into
push
xlat
clc
inc
test
cld
jno
ljmp
adc
pop
roll
xor
nop
push
rorl
sub
mov
daa
jo
sub
xchg
test
pop
push
jae
push
std
int3
mov
lret
jp
aaa
mov
jg
addb
ss
stc
rorb
push
mov
mov
in
add
push
mov
stc
mov
cmp
mov
test
rcr
movsl
lea
dec
push
xchg
movsl
xor
pop
sub
call
ficoml
ljmp
mov
sbb
pop
jne
int
je
fs
outsl
movb
pop
rolb
cs
repnz
dec
sti
leave
fsubs
decb
insb
addb
ljmp
and
bound
adc
call
add
mov
int3
mov
cmp
adc
add
shl
mov
jo
adc
dec
mov
push
xor
sbb
clc
mov
xor
insb
xchg
sbb
arpl
clc
mov
hlt
and
adc
xchg
inc
dec
push
idivl
pop
scas
stos
ja
jg
enter
xchg
mov
xchg
dec
mov
cmp
xchg
lahf
es
cwtl
imul
dec
mov
or
aaa
jl
pop
sbb
out
add
and
adc
sbb
stos
or
outsl
shrb
call
shll
and
sub
lahf
cmp
mov
lods
adc
cmp
stc
popa
jne
dec
dec
push
add
sub
fildl
into
push
testb
push
or
xchg
mov
sbb
mov
push
xchg
cmp
fndisi(8087
inc
add
push
mov
movsb
inc
pop
imul
sub
iret
repz
sbb
imul
push
test
iret
scas
jns
jnp
inc
rorl
outsl
aam
xchg
roll
gs
out
mov
imul
push
leave
lret
mov
addr16
inc
xchg
lea
mov
test
je
push
insb
insl
and
jae
jmp
ljmp
es
push
mov
pop
inc
jge
notb
add
pop
sub
push
sub
pop
add
mov
ds
hlt
mov
lcall
pusha
cld
xor
scas
int
push
or
test
pop
lret
in
cmc
inc
inc
or
hlt
int
imul
sub
mov
pop
scas
stos
in
shrl
sub
add
shl
cmpsb
dec
pushf
daa
mov
test
mov
pusha
xchg
subb
mov
bound
pop
pop
pop
mov
addr16
insl
pop
xchg
mov
cmpsl
sub
mov
sbb
jns
int3
mov
cld
je
sub
xor
add
loop
sbb
jns
mov
xchg
sbb
jo
adc
cmp
pop
mov
out
cmpsb
push
imull
mov
ja
aas
loope
dec
cmp
pop
add
dec
mov
mov
mov
jg
popf
lock
movsl
cmp
and
inc
hlt
jmp
mov
cs
mov
sub
push
xchg
inc
dec
cmp
mov
shrb
mov
lea
dec
cmp
push
inc
ss
adc
pop
repz
cs
mov
push
movsb
ficoml
ss
lds
mov
stos
mov
into
push
sbb
add
inc
cmp
pop
and
idiv
jnp
arpl
repz
aam
and
xlat
add
xchg
ljmp
mov
jp
jb
popa
pop
push
mov
jg
push
and
xor
sub
and
inc
jne
xor
cmpsl
movsl
les
push
mov
in
jnp
lods
cmp
add
outsb
and
add
sub
ljmp
loop
mov
inc
jg
cmpsl
or
sbb
pop
jecxz
and
popa
jbe
scas
xor
daa
cmp
pop
test
out
subl
lds
or
or
iret
shrl
mov
or
nop
mov
es
sbbl
mov
hlt
push
cltd
jo
addr16
bound
test
lret
fwait
stos
mull
scas
in
add
lcall
push
lods
sub
test
cmc
push
and
mov
imul
xchg
cmpsb
jno
jb
shl
sub
imul
sbb
or
mov
dec
hlt
jbe
out
add
loopne
int3
into
ficoml
ret
sbb
loop
loop
dec
xchg
aaa
xchg
jb
jno
inc
rcrb
dec
xor
mull
das
add
cmpsb
leave
push
fwait
loop
mov
or
xchg
enter
pusha
mov
pop
loopne
mov
cmp
mov
inc
push
and
xchg
shll
pop
fadds
aaa
mov
mov
lcall
bound
mov
std
add
adc
jbe
cwtl
std
popf
or
cli
gs
inc
cmpl
lret
xchg
scas
xchg
adc
imul
xchg
addb
dec
cbtw
xor
out
mov
xor
lds
xor
jl
or
paddusb
aam
ficomps
rorb
mov
or
negb
cli
pop
test
cli
push
enter
movsb
mov
sbb
repnz
and
idivb
dec
imul
jae
mov
xchg
jb
adc
test
xor
filds
adc
ret
mov
xchg
jno
in
arpl
mov
mov
dec
mov
leave
dec
push
jns
sub
pop
fcmovbe
sub
jno
scas
push
sbb
aad
cwtl
inc
outsb
push
mov
std
out
loope
imul
mov
lret
fstpt
rclb
cmp
adc
adc
push
push
mov
int
dec
scas
ljmp
das
mov
gs
dec
fcmovne
dec
jge
test
jns
rcrl
dec
call
filds
pop
nop
aaa
jae
mov
cli
sbb
push
out
decl
cs
adc
cmp
add
mul
sub
xor
adc
popf
cmpsb
add
jbe
add
jp
adc
aad
data16
enter
clc
push
lcall
popf
or
xor
xor
inc
insb
jge
in
sti
gs
xchg
in
cmp
or
mov
fistl
loopne
jno
icebp
in
repz
aam
aaa
add
dec
add
inc
pop
in
sbb
in
out
icebp
or
jns
dec
jecxz
jmp
das
adc
test
sbb
pop
push
cwtl
fldcw
insl
mov
mov
sub
scas
cmp
sahf
mov
xor
cmp
jmp
pop
in
stos
rcll
sbb
mov
adc
inc
or
push
loop
sbb
cmp
inc
nop
dec
jno
aad
or
insl
add
and
push
movsb
pop
dec
fwait
adc
and
jmp
or
data16
aam
lock
pop
inc
notl
or
inc
leave
jmp
sbb
sub
or
ja
mov
or
testb
lcall
popf
sub
jb
add
lcall
push
in
cmp
mov
aas
stos
adc
pop
fstpt
dec
sub
pop
pop
jmp
jno
fisttpll
mov
jmp
mov
lods
decb
add
pop
fsubrl
jge
mov
xor
push
or
mov
jecxz
mov
jle
add
mov
ret
dec
stc
inc
std
frstor
daa
rcl
mov
fwait
and
ljmp
orl
js
cli
adc
xchg
xor
enter
fstpl
arpl
orl
cli
cmc
push
rcrb
add
cli
cmp
in
add
cld
sub
scas
inc
sti
jp
jns
or
inc
jnp
mov
in
repz
cli
ss
mov
out
insb
dec
or
jbe
out
mov
xchg
pop
mov
pop
pop
push
jae
sti
cmpsb
xchg
mov
xor
cmp
or
xchg
jb
pop
add
dec
inc
xchg
movsl
repnz
fldcw
or
cmp
jp
pop
mov
xor
or
sbb
sub
aam
mov
sbb
mov
and
out
mov
add
inc
fldenv
and
pop
lcall
jmp
sti
push
jp
sub
stos
iret
stos
adc
outsl
pop
outsb
icebp
out
imul
ja
rcll
hlt
arpl
fnstcw
mov
lret
lea
sub
cmp
inc
xor
push
push
jmp
dec
mov
xchg
arpl
jnp
loopne
mov
jmp
pop
into
mov
jbe
mov
js
cmpsl
mov
lahf
loop
std
inc
ret
dec
pop
mov
addr16
cmp
push
fnsave
jp
mov
mov
sub
pusha
xor
es
out
mov
sub
sub
cmp
lods
daa
dec
fs
insb
xlat
shrb
lret
jb
mov
cmove
mov
ficomps
es
enter
cmpsl
adc
fcoml
out
xchg
jns
fnstcw
repnz
std
xor
lahf
sub
adc
xchg
adc
xchg
fbstp
loopne
outsl
ret
popa
hlt
sbb
imul
or
pop
mov
jns
je
das
mov
adc
adc
jne
lods
ljmp
or
jge
cmp
fmul
add
xlat
push
sub
push
test
or
cmpsb
out
lds
push
jnp
dec
lret
and
xchg
in
js
or
test
hlt
xchg
pop
inc
mov
inc
xchg
lock
aam
mov
call
mov
sub
ljmp
pop
fisubl
pusha
xor
push
popf
sub
and
sub
cltd
cld
leave
mov
cs
cmp
and
sub
call
iret
cltd
jl
push
cmc
dec
imul
jmp
jp
jb
in
stos
ret
mov
push
pusha
clc
sub
shr
mov
in
inc
das
sub
lods
mov
sbb
xor
mov
and
push
push
cli
out
subb
inc
mov
js
adc
in
xor
mov
aam
push
in
push
jle
cwtl
push
rcl
std
int
xchg
loopne
mov
sub
cmp
inc
cld
out
mov
inc
cwtl
and
mov
xchg
mov
outsb
insb
rorb
push
add
in
les
adcb
dec
daa
mov
xor
loop
xor
push
inc
jecxz
lret
push
adc
push
pusha
jno
fdivs
in
fsubrl
or
mulb
mov
test
pop
dec
adc
jge
sub
cmp
add
pop
xor
or
nop
cmpsb
mov
lcall
cmp
std
popa
gs
repz
int3
fwait
xchg
lahf
mov
inc
lods
sti
pop
stos
fwait
add
jmp
aaa
add
fnsave
push
in
out
sbb
cmp
in
push
repz
jmp
movsb
into
stos
mov
dec
sub
sbb
push
ss
nop
xchg
sub
xchg
inc
xchg
cmc
cmc
aaa
add
std
inc
push
sbb
xorl
stos
mov
jmp
cmp
push
in
fwait
push
ljmp
sub
mov
inc
mov
or
or
ljmp
mull
mov
outsb
add
inc
out
dec
cmp
sbb
xchg
out
push
pop
push
popf
inc
and
adc
movsl
lods
inc
xchg
enter
subl
push
push
pop
insl
push
je
jp
bnd
jmp
dec
or
icebp
mov
out
loopne
jge
iret
xchg
ret
cs
icebp
test
addr16
adc
inc
sub
into
dec
out
cmpsl
mov
and
cmp
rolb
sub
push
mov
dec
push
adc
into
fs
mov
cmp
stos
xor
mov
and
rcll
mov
sbb
cmpsl
jge
xor
hlt
push
iret
frstor
sub
aad
fsubrp
dec
inc
xchg
push
add
test
mov
jb
test
fwait
xchg
pop
sbb
xlat
or
sbb
lods
icebp
jbe
leave
add
inc
pop
iret
push
cwtl
sahf
sbb
cwtl
ret
mov
push
pushf
and
xor
into
xor
mov
xchg
pop
fildll
cli
repz
loopne
push
std
and
push
xor
aaa
mov
mov
inc
movsl
insb
enter
jge
ret
pop
inc
push
data16
push
pop
je
jmp
push
fdivrs
cmc
je
mov
sahf
in
push
xor
cmp
pop
xor
ds
loope
cli
addl
mov
push
inc
jp
add
inc
jb
es
in
rcr
push
out
stc
sti
rclb
in
lock
cmp
inc
bound
jg
repnz
les
dec
inc
ss
lock
pushf
push
fcomip
aaa
imul
xor
into
ret
mov
movsl
std
cs
lcall
and
jne
add
mov
je
jo
and
xor
push
add
scas
mov
clc
sbb
out
jbe
xor
fsubl
lret
lret
push
das
dec
adc
pop
cld
shll
inc
test
jl
cmp
jno
fld
dec
les
jge
xchg
cmp
push
fisubl
loope
xchg
loop
mov
mov
cltd
stos
jae
movsb
fdivr
jmp
and
dec
pushf
xor
pop
stc
sub
inc
ret
push
popf
mov
lods
xchg
pusha
fwait
nop
xlat
ljmp
lcall
insl
jb
adc
lock
addb
cmpsl
jp
jg
inc
notl
gs
arpl
arpl
inc
xchg
jecxz
lock
inc
dec
in
fnstsw
mov
in
cmp
xor
ljmp
shr
scas
pop
call
xlat
mov
out
jns
mov
fldl
push
aad
outsb
push
sbb
out
jmp
bound
mov
cli
dec
sub
sbb
cs
push
jbe
inc
shlb
adc
push
stc
sti
adc
adc
adc
bound
mov
clc
jne
sub
mov
jbe
cmpsb
dec
push
or
call
fcomps
ljmp
mov
and
add
jno
imul
push
inc
ja
test
mov
ss
popf
cmp
mov
mov
add
fldenv
cld
mov
out
mov
mov
jl
cmpsl
xchg
ja
sbb
pop
lcall
adc
in
pushf
pop
outsb
or
std
repz
cs
and
dec
mov
push
pop
xchg
cmp
xchg
or
pop
call
pop
inc
sbb
cmp
fwait
mov
sbb
cwtl
push
push
push
fwait
xchg
cltd
addl
clc
or
push
push
rcll
jle
das
movsl
add
or
rorb
jmp
or
idivb
mov
cmpl
cwtl
out
mov
mov
fmulp
cmpsl
sbb
or
jp
dec
mov
cmp
adc
add
es
dec
ds
push
mov
jecxz
and
push
push
jns
pop
outsb
mov
cmpsb
mov
mov
and
roll
cmpl
push
rep
pop
inc
sbbb
out
ja
push
stc
xchg
repnz
adc
shlb
xor
imul
mov
mov
mov
jbe
ffree
clc
add
addr16
ljmp
dec
push
ficoml
int
fxch
ja
fs
add
add
fwait
popa
xchg
xor
test
cmp
sti
icebp
mov
adc
or
repz
out
jp
adc
or
sub
lds
movsb
adc
cs
jae
add
pushf
outsb
test
aas
in
hlt
pop
fcmovnbe
insl
sahf
or
arpl
test
shl
mov
cwtl
test
mov
inc
push
dec
adc
xchg
mov
gs
push
pop
xchg
movsb
lcall
pop
scas
cwtl
ret
add
fisttps
xor
cmpsl
ds
jg
sti
shll
fldenv
push
add
out
data16
cmpsb
inc
inc
aaa
popf
inc
jmp
stos
inc
lret
cmp
sbb
shrl
xchg
ret
std
pop
leave
and
jne
pop
cwtl
dec
push
pushf
add
or
out
ss
fidivs
bound
adc
lods
adc
push
inc
or
fiadds
xor
adc
in
icebp
test
push
movsl
int3
adc
and
adc
mov
lods
push
sbb
outsl
test
and
add
gs
pop
mov
xchg
inc
shlb
mov
or
mov
inc
mov
dec
addr16
inc
inc
fidivl
je
mov
gs
mov
jbe
cmpsb
aas
out
push
aam
dec
mov
jcxz
cs
mov
out
or
sub
loope
dec
cmp
and
js
push
or
insl
aam
arpl
stos
xor
pop
icebp
xor
mov
insb
sbb
or
pop
adc
push
test
cmp
dec
scas
fs
push
std
add
scas
mov
imul
xor
daa
xchg
and
inc
dec
out
sbb
add
out
sbb
add
in
cltd
and
xchg
pop
and
mov
repnz
fbld
int3
push
pushf
xchg
dec
push
mov
and
ret
rclb
mov
int
push
lcall
inc
cltd
dec
stos
pop
push
mov
pop
push
out
jbe
xor
add
sub
std
mov
mov
addb
pop
ror
and
int
fsubs
std
jnp
aas
int3
loop
mov
and
mov
inc
jbe
add
xchg
dec
inc
out
mov
out
xchg
mov
add
lret
sub
cwtl
mov
push
roll
clc
pop
dec
pop
xor
inc
mov
jns
lahf
pop
mov
out
inc
insl
jge
xchg
add
scas
aaa
pop
add
pop
aam
or
dec
test
mov
outsb
movsl
push
pop
xchg
push
int3
ss
lock
mov
fnstenv
mov
arpl
aad
xor
push
xchg
ja
adc
jp
daa
dec
xlat
dec
and
add
in
mov
std
in
add
push
jo
xchg
fstpl
mov
repz
daa
add
popf
dec
mov
add
xor
data16
mov
lods
xor
mov
cwtl
mov
mov
push
aam
nop
addr16
repz
ljmp
push
jge
xor
lret
xchg
mov
je
fisttpll
add
leave
push
sbb
xchg
shlb
pusha
sbb
pop
lea
pop
comiss
jg
pop
sbb
mov
mov
cwtl
mov
pop
lret
bound
test
jb
insb
sub
aaa
xchg
dec
scas
je
jmp
mov
xchg
pop
sbb
mov
dec
lock
cltd
mov
xchg
cs
mov
cli
xchg
add
jge
int3
mov
out
rcrl
inc
mov
insl
dec
sbb
add
mov
push
xchg
mov
xchg
insb
push
mov
mov
mov
loop
ficoml
xor
add
push
pop
or
inc
or
je
cmpsb
push
and
push
jbe
test
sub
jmp
fwait
cli
sbb
jg
or
aas
popa
imul
and
jmp
xchg
jg
jnp
mov
pop
mov
mov
sti
pop
stc
rcr
insl
cmc
aam
ja
mov
cmp
and
cmc
int3
mov
mov
jmp
sbbb
mov
xchg
fldcw
jle
popf
inc
push
repnz
sbb
mov
sbb
inc
sbb
nop
ret
fists
rolb
mov
pop
jp
sbb
mov
add
sbb
and
mov
cld
fcmovbe
inc
fsubrs
insb
fdivrl
and
xor
shll
add
lahf
pop
or
icebp
or
popf
icebp
fsubl
bound
cltd
xchg
mov
dec
imul
mov
out
cmp
xlat
mov
stos
jecxz
addb
movsb
add
dec
and
sarl
jle
ret
movsb
and
iret
scas
sub
mov
lods
andl
mov
jl
insb
jne
lret
inc
dec
ljmp
cmpsb
ss
stos
push
mov
xchg
mov
fs
dec
mov
xor
cmc
rcll
stos
jg
aaa
or
mov
push
cmp
xchg
mov
imul
mov
add
or
shll
mov
mov
fs
sub
pop
dec
lret
das
dec
shlb
std
mov
inc
insl
jnp
lods
fs
sub
adc
push
dec
lret
test
push
and
push
addr16
clc
ss
push
mov
mov
inc
push
test
mov
cmpsl
clc
push
popa
mov
inc
pop
mov
or
dec
rcll
cmp
in
lods
or
jge
jae
jge
jg
dec
addr16
mov
jp
es
popf
xchg
sub
lret
fcomps
sbb
lock
in
aam
push
repz
cwtl
xchg
cli
imul
inc
xchg
xlat
jp
jo
and
cmpsb
cmp
nop
adc
push
andb
pop
in
fwait
mov
pop
stos
lods
pop
das
and
test
pop
sub
movsl
mov
out
mov
leave
mov
arpl
nop
insl
repnz
or
or
cltd
stc
pushf
fsts
stos
cwtl
call
mov
ret
dec
insl
lods
sbb
idivl
cmp
adc
clc
jae
xchg
rcr
inc
mov
mov
or
pop
lcall
mov
fsts
sbbl
loop
bound
adc
adc
mov
lret
roll
lret
adc
xchg
and
pop
bound
push
data16
jo
push
add
and
mov
cmp
or
add
inc
imul
fwait
clc
push
mov
enter
aam
jnp
jmp
hlt
sub
iret
cmp
jp
and
cmc
push
cwtl
xlat
sub
jae
sti
jb
xchg
xor
repz
jae
mov
mov
and
scas
jo
xor
jne
sbb
inc
add
dec
add
rorl
pop
dec
mov
insl
xor
pushf
rolb
jl,pt
ljmp
fldenv
xor
cmp
push
ds
in
sbb
ljmp
icebp
inc
xor
cld
imul
mov
xchg
xor
mov
push
hlt
hlt
cmpl
pop
fdivl
xchg
outsb
lods
add
out
stos
jl
je
std
bnd
sbb
cli
imul
data16
inc
mov
insl
movsl
pusha
repnz
adc
inc
divl
pop
aaa
lret
pushf
sbb
loop
push
insb
mov
pop
nop
add
and
sub
pop
insl
andb
outsb
repnz
mov
push
push
roll
adc
mov
out
vmptrst
inc
pop
xchg
cmp
push
bound
pop
push
mov
inc
cmpsl
mov
jae
or
movsl
and
xor
sub
fcom
in
test
jg
add
and
sbb
cmpsl
in
inc
sahf
popf
mov
repz
or
push
cli
mov
pop
hlt
movnti
xor
cmc
mov
pop
outsb
pop
or
xchg
test
inc
dec
jae
insl
mov
xchg
pop
adc
inc
fnstenv
in
cli
insb
stc
mov
into
popf
pushf
aam
adc
cmp
sbb
xchg
ret
jns
addr16
jle
add
test
push
pop
movsb
pusha
jecxz
repz
mov
push
push
or
sub
lods
inc
push
orb
sub
pop
jb
xor
aaa
jb
mov
inc
into
add
repz
jg
mov
stc
xlat
jno
xchg
out
movsl
bound
inc
adc
mov
pusha
test
clc
incb
and
shrl
outsb
cmp
testl
ret
jae
fmul
xlat
or
jb
imul
lahf
mov
jle
shrb
lea
mov
aaa
pushf
mov
or
out
sti
stc
inc
sub
pop
es
mov
dec
int3
jae
adc
or
lret
leave
out
mov
sub
pop
sub
jbe
addl
cmp
jae
jne
push
jno
pop
jnp
fdivl
adc
add
cli
ffreep
je
mov
fs
push
inc
xlat
aam
test
xlat
inc
mov
mov
loop
iret
dec
cmpsl
insb
sbb
xor
lret
push
ljmpw
mov
pop
jmp
les
mov
jbe
rorb
jl
repnz
mov
xbegin
movsb
mov
mov
in
xchg
pop
pop
mov
rcrb
popa
and
dec
inc
or
test
push
or
dec
pop
pop
aad
jp
mov
insb
popa
adc
push
cmp
test
ret
clc
icebp
testb
ret
cwtl
sub
lret
shlb
arpl
cwtl
loop
adc
inc
mov
mov
repnz
ret
test
test
fcoms
jb
aas
mov
pop
pop
test
push
stos
loopne
push
ss
or
add
mov
mov
int
jmp
cmp
mov
test
fwait
mov
jbe
repz
sbb
add
aaa
fwait
addr16
sub
mov
sub
lds
mov
push
lea
jp
out
mov
pop
movsl
jle
add
add
mov
ret
out
mov
xchg
xor
xchg
dec
jns
aad
std
repnz
xlat
jo
test
ret
cli
xchg
cli
sbb
push
scas
inc
pusha
jmp
push
icebp
dec
and
int
ret
ret
lods
mov
es
and
data16
mov
mov
push
fiadds
mov
insl
inc
js
hlt
sub
adc
or
add
lock
addl
xor
sbb
adc
cld
xchg
ret
and
pop
or
mov
push
xchg
inc
sub
addr16
push
sahf
sub
cwtl
loop
cld
rcl
cmp
pop
roll
ds
jmp
xchg
mov
mov
adc
aaa
jecxz
inc
xchg
nop
adc
stos
lahf
pop
ja
xor
xor
rolb
push
gs
push
add
movsb
inc
cmpsl
and
jmp
rcrb
in
sbb
fs
pop
cmc
pop
fldenv
rorb
mov
int3
jno
push
sbb
ja
sbb
push
scas
mov
cmp
mov
mov
notb
cli
sbb
mov
lcall
push
xchg
cli
cmp
mov
mov
cmpl
or
xor
inc
pop
add
mov
push
test
dec
push
int3
xor
adcb
sahf
jp
cmp
dec
inc
int3
jecxz
push
jns
pop
pop
push
stc
test
adc
lea
repnz
fiadds
adc
rolb
jl
repnz
adc
dec
adc
xor
mov
xchg
add
mov
fisttps
cmp
je
cld
aas
xchg
mov
xlat
lret
hlt
into
mov
jl
sub
lahf
stos
fildll
andl
pop
dec
repnz
fidivl
jl
fstps
inc
jb
xlat
inc
adc
pop
mov
xor
js
mov
jo
out
pop
int3
incl
jne
mov
fsts
hlt
bound
bound
jbe
testb
cmp
adc
aas
negb
lahf
je
sahf
xchg
rcl
fs
add
fldt
lods
pop
lret
or
test
mov
inc
sbb
in
cs
inc
push
aam
mov
jl
add
shl
pop
lret
outsb
mov
add
enter
pop
gs
mov
mov
dec
stc
ja
rolb
jecxz
out
mov
jbe
gs
clc
push
call
and
mov
repz
imul
imul
lds
mov
lahf
rolb
sub
mov
mov
mov
sti
jmp
test
dec
in
cmp
or
addb
repnz
imul
dec
sub
iret
xor
sub
pop
mov
icebp
jmp
out
or
test
arpl
jns
dec
jno
pop
sub
push
popa
adcl
cmp
push
sbb
lea
out
sahf
mov
hlt
dec
out
int3
mov
inc
adc
das
dec
dec
pop
ss
dec
mov
inc
cmp
xor
and
and
pinsrw
mov
jns
adc
or
jmp
add
aam
xchg
std
xor
sub
inc
cmpb
dec
sbb
cwtl
xor
in
mov
les
mov
or
test
es
jae
push
or
mov
aad
mov
or
push
ds
and
movsb
jmp
sbb
or
lahf
jge
and
fldcw
ljmp
js
mov
mov
pop
add
test
rclb
mov
sub
fidivrl
ret
sarl
cmp
xchg
ret
and
lcall
mov
fdivp
pop
imul
xor
dec
sbb
subl
sub
ljmp
push
add
push
mov
movups
xchg
jae
xor
mov
pusha
sbb
arpl
leave
inc
lret
outsl
mov
or
push
lock
mov
mov
inc
push
and
xor
test
and
cmpsl
dec
and
pop
dec
jae
sbb
sbb
jae
jbe
jno
test
shll
mov
push
movsl
jp
mov
pusha
xor
jg
lret
enter
jne
mov
ss
jl
lcall
fstl
imul
mov
dec
dec
push
jg
subb
dec
cmp
aad
and
add
nop
imul
mov
std
xchg
sub
ret
cmc
or
push
loope
mov
cmc
imul
cld
pop
shll
js
or
lods
mov
lcall
stos
and
push
mov
in
xchg
pushf
mov
ss
push
cmp
mov
fidivrs
pushf
mov
xor
imul
inc
xor
dec
jmp
mov
aam
addr16
fcomi
gs
test
repz
ljmp
xchg
mov
or
sbb
ror
int
ds
lea
pusha
shl
cwtl
popa
jno
decb
out
jecxz
pushf
or
mov
inc
lret
mov
repz
add
cwtl
loope
pop
inc
in
ss
rcll
push
mov
add
and
jb
cs
sbb
sbb
lret
shrb
cmp
ds
xchg
mov
out
xchg
jnp
mov
adcl
mov
sbb
and
repz
mov
sub
sti
sub
stc
lahf
mov
test
inc
xchg
ret
mov
inc
fwait
enter
stc
stos
pop
xlat
add
shlb
and
ret
test
fcmovnbe
ljmp
or
adc
and
add
das
imul
push
fdivs
sbb
push
repz
pop
mov
clc
cmp
lods
push
cli
insl
pop
sub
sar
ret
mov
sbb
mov
dec
lods
or
sti
mov
jno
push
insb
lds
aas
xor
sub
popa
roll
mov
nop
mov
repz
mov
pop
inc
sbb
mov
and
mov
jmp
and
fmul
add
mov
mov
sbb
sbb
adc
xchg
std
adc
sub
jns
rolb
out
cltd
jb
mov
inc
clc
inc
in
sub
dec
ficomps
pop
fcompl
ficoms
cmp
jle
clc
ds
test
inc
pop
inc
or
fildll
daa
je
dec
jne
jg
scas
orb
cltd
mov
add
in
sub
shr
jge
jle
xchg
and
mov
pop
ret
push
xchg
sub
push
shr
mov
loopne
into
xchg
add
cltd
mov
mov
sub
popf
loope
sub
test
and
popa
lea
cld
xchg
inc
add
mov
inc
push
adc
dec
ja
pop
mov
and
adc
aas
fdecstp
cmp
xchg
jno
xchg
cmpsb
and
rcrl
push
out
sbb
pop
or
xchg
std
test
xchg
jg
sarl
sub
jmp
jmp
sub
cld
movsb
cmp
test
sahf
jl
push
push
in
mov
mov
movb
inc
jp
and
and
lock
aam
testb
pop
sbb
mov
std
jns
std
lcall
jno
popf
pop
movb
in
or
or
popf
adc
popf
mov
sbb
fcompl
dec
xor
push
push
push
inc
insb
and
push
sbb
out
cmpsl
in
sbb
fisttpll
ficompl
sbb
jg
fmuls
pop
pop
in
aas
push
leave
or
or
cmpsl
pop
mov
fs
cmp
sahf
aaa
xchg
fidivl
xchg
js
mov
out
lea
in
arpl
lods
movsb
mov
loop
sub
in
jge
pop
xchg
fmuls
addr16
ja
outsb
scas
add
jp
mov
sbb
nop
cmp
into
movups
mov
cmp
scas
cmpsl
adc
mov
in
push
mov
int
test
adc
fstps
inc
jno
adc
xor
data16
sbb
scas
jp
sub
mov
xor
test
xchg
cld
int
mov
mov
adcb
es
push
mov
cld
test
adc
clc
hlt
ret
pop
jmp
subb
arpl
sahf
mov
shll
mov
das
rcrb
inc
mov
out
jp
sbb
ljmp
stos
out
stos
jo
lds
sarb
int3
mov
push
push
jp
cmp
sbb
insb
lods
pop
adc
push
adc
mov
adc
mov
sbb
popf
int3
testl
mov
fildll
mov
nop
dec
xchg
clc
fidivrl
mov
in
aad
cmpsb
shrl
mov
lcall
mov
pop
and
pop
cmpsl
in
gs
stc
xchg
ss
pusha
inc
loopne
movsl
add
je
dec
aam
ds
jp
fidivrl
and
ljmp
loopnew
test
pop
ss
cltd
in
lcall
es
ss
cmc
cltd
fidivrl
fldz
sbb
lret
test
adc
pop
call
aam
ja
cmpsl
and
mov
mov
dec
loope
lret
jecxz
outsl
popa
pop
int
and
and
sub
movsl
sbb
and
sub
call
pop
in
lods
dec
xlat
lds
mov
fiaddl
sahf
push
mov
adc
adc
add
jo
add
cmpsl
or
dec
inc
mov
in
push
push
nop
aas
jbe
ljmp
add
cmpsb
imul
xlat
arpl
or
inc
jmp
sub
push
inc
aam
sbb
push
xlat
test
test
inc
push
inc
pop
movsb
sbb
mov
in
jnp
xor
lret
pop
adc
stos
xchg
pop
call
inc
lcall
dec
mov
dec
clc
in
aas
push
mov
aas
aam
mov
pop
add
xchg
add
mov
clc
stos
pop
mov
mull
sbb
push
jp
xor
pop
je
cmp
pop
dec
outsl
pop
int
loope
jmp
mov
test
cmc
aad
dec
push
aaa
leave
insl
or
mov
cld
cmpsl
mov
nop
dec
rorl
add
mov
rorl
popf
xchg
scas
adc
mov
test
sub
lea
aam
xchg
loope
rorb
add
prefetch
iret
jno
sbb
push
out
bound
push
cmpsl
push
testb
inc
outsl
cmp
xchg
inc
rcll
xchg
jne
mov
lret
mov
pushf
pop
cmp
sbbl
jns
push
inc
jle
in
mov
jl
or
fdivrl
cmp
lret
and
arpl
dec
dec
push
and
rorl
mov
orl
xor
jg
mov
out
fdivl
jmp
mov
jmp
lret
adc
iret
insl
aaa
or
xor
jne
outsl
or
or
test
jo
dec
jbe
inc
insl
sbb
add
cmpb
mov
jae
jno
fsubrs
inc
sub
or
push
or
add
xor
and
and
mov
sahf
add
in
and
add
imul
xor
mov
sahf
fimull
add
or
adc
hlt
xor
jo
into
fldcw
and
jno
daa
cmp
call
jae
cmpl
pop
cmp
sub
jp
pop
xor
pop
jmp
int
mov
mov
cmp
and
cmpsl
es
out
adc
test
cmp
mov
dec
sbb
loopne
stos
cmp
inc
loop
shl
loop
mov
cld
inc
mov
adc
movsb
xchg
xchg
jae
shll
testb
sbb
jmp
outsb
es
xchg
fnsave
mov
iret
or
psrlw
fidivs
popa
pop
pop
mov
push
cltd
ret
mov
scas
add
jnp
adc
daa
xchg
mov
in
mov
imul
pop
dec
adc
pop
add
add
repz
ja
mov
cmpsl
lret
sbb
and
push
jno
push
jmp
xchg
rol
mov
sub
aam
js
out
enter
mul
mov
cld
push
scas
in
or
stos
adc
jo
loop
aam
andl
and
mov
out
mov
loope
adc
daa
aad
out
jns
lea
ss
rcll
xchg
sbb
xchg
cld
add
pop
sbb
jo
sub
shll
shrb
popf
mov
fimuls
loopne
pop
leave
xchg
mov
in
insb
leave
arpl
inc
in
xchg
sbb
outsl
add
out
cs
fmulp
dec
xchg
mov
jmp
cmpsl
push
inc
sbb
push
aas
leave
xchg
iret
dec
test
jg
push
pop
mov
pop
lds
enter
icebp
in
pop
xchg
es
pop
xchg
pop
es
dec
pop
leave
je
inc
or
mov
ret
fs
ret
jbe
xchg
cltd
sub
push
imul
mov
mov
fsubrs
mov
jp
push
scas
xchg
ret
mov
dec
sbb
dec
adc
inc
xor
push
sub
mov
push
fmull
cmp
xchg
dec
mov
hlt
adc
sarl
insl
fcoml
mov
imul
loop
fcom
dec
test
fnsave
xchg
sbb
xor
stos
dec
hlt
pusha
xor
stos
push
adc
mov
mov
hlt
faddp
lahf
fldl
or
xorb
xor
dec
pop
mov
xchg
insl
xor
pop
or
popw
testl
add
mov
xchg
xor
inc
popa
push
and
mov
fwait
cmp
pop
mov
mov
inc
xchg
pop
decb
jmp
xchg
es
mov
rorl
xchg
cmp
imul
sub
jecxz
mov
dec
cmp
subb
fisttps
jb
popa
fsubl
cmp
xchg
or
popf
aad
movsb
popa
add
je
inc
stos
inc
test
cmpsb
ror
cmc
loopne
js
mov
mov
mov
mov
cmpsb
xor
popf
jl
and
add
fidivrs
push
mov
add
xlat
push
js
dec
fxtract
pop
dec
or
ret
xchg
push
pop
test
mov
sub
js
sbb
dec
jl
lds
andb
inc
rorb
mov
popf
xchg
adc
hlt
sub
push
aam
jmp
adc
xchg
jmp
xchg
xor
inc
jne
ss
test
pop
in
sub
mov
clc
jbe
lods
std
aas
push
repz
push
pop
jecxz
daa
fidivrs
xchg
sub
sahf
mov
xlat
aas
mov
cmp
pop
loop
nop
cmp
ljmp
mov
shlb
stos
pop
std
adc
add
pop
lods
cmp
mov
mov
leave
mov
ret
and
lret
push
dec
scas
mov
sbbb
ds
cmpsl
inc
xor
push
jb
sbb
adc
ds
lcall
mov
sub
fwait
repz
fs
jecxz
xor
cmpsb
gs
std
cmp
push
sarb
inc
jle
mov
decb
ds
xor
dec
out
mov
cmp
insb
xor
or
mov
jp
movsl
sbb
or
aas
sarb
mov
mov
cltd
mov
xchg
or
pop
push
mov
jp
xor
stc
jae
out
push
xchg
mov
cmpl
rorb
pop
jo
sub
int3
arpl
dec
cmpsl
arpl
mov
add
stc
mov
lret
sub
push
xchg
fsubrl
sub
and
dec
xorb
lahf
xor
es
ret
mov
add
syscall
fists
xor
add
and
and
inc
add
fldcw
xchg
or
popa
sar
or
rolb
sbb
ja
sbb
negb
xchg
stos
xchg
mov
idiv
pop
outsl
rol
scas
insb
push
into
rorb
cwtl
lock
pop
push
inc
dec
imul
movl
movsb
pop
cs
jl
add
shll
cmp
aam
inc
jl
pushf
jle
inc
loope
mov
ret
inc
sub
and
sbb
rcrb
and
fisttpl
inc
inc
pop
jns
decb
addr16
and
cmpsl
aas
push
in
jmp
sahf
pop
sarl
adc
cli
aad
aad
gs
mov
int
pop
pop
mov
inc
in
js
adc
sbb
push
sbb
ds
aas
mov
scas
dec
jnp
test
enter
lret
mov
cwtl
dec
sti
adc
shr
adc
vmovdqa
and
hlt
push
and
repnz
push
dec
sub
call
les
in
pop
lods
mov
decl
fiadds
sbb
cwtl
cmpl
mov
std
or
xor
push
int3
outsb
mov
imul
jecxz
das
fisubrs
push
sti
fidivl
lcall
mov
and
pop
cmp
and
jb
nop
cmp
dec
ret
and
sub
imul
js
xchg
dec
sahf
mov
scas
xchg
dec
adc
mov
scas
fs
ds
jecxz
lods
loopne
mov
pushl
aas
adc
push
and
fs
add
pop
lods
and
leave
lahf
push
lods
sub
xchg
inc
imul
xchg
xchg
sahf
sbb
xchg
and
lock
adc
xchg
mov
cwtl
add
mov
mov
xchg
stc
xchg
jmp
inc
call
xchg
mov
loope
mov
movsl
dec
inc
test
in
in
jae
lcall
push
fidivs
mov
movsl
hlt
jo
add
pop
pop
sahf
movsl
fidivl
jne
sbb
jmp
mov
or
lods
stos
outsb
mov
or
xchg
sbb
pop
es
addr16
jp
push
xor
cld
lods
test
pop
pusha
mov
sub
inc
movsl
call
mov
dec
fdivrl
cmpsl
ja
push
mov
cs
xor
push
call
scas
pop
pop
cmpsl
aas
nop
pop
jns
dec
jmp
pop
or
mov
dec
inc
divb
ret
add
ja
inc
punpckhwd
push
mov
dec
call
dec
cmp
xchg
sub
adc
jmp
outsl
jge
out
out
lds
aad
push
mov
fdivrs
pop
out
fdivp
shr
ss
mov
sti
stos
jge
cmp
sbb
mov
or
or
repnz
xor
cmp
mov
push
and
repnz
aaa
and
imul
add
in
fwait
jbe
and
movsl
xor
jo
pop
testb
std
add
movb
or
dec
repnz
sbb
test
leave
subl
rorl
mov
or
mov
xor
enter
aas
cmpsb
jecxz
mov
push
add
mov
movsb
or
ficoml
movsl
std
nop
arpl
les
jge
mov
cmp
mov
mov
or
push
mov
mov
ja
adc
lret
out
push
mov
xor
or
enter
mov
adc
inc
jmp
inc
lret
sub
stos
loopne
call
popf
cmp
or
or
and
into
fcmovbe
push
cmpsb
mov
mull
pushf
test
loop
inc
out
pushf
jns
and
pop
mov
lds
js
scas
lcall
addr16
push
cld
inc
addr16
scas
dec
shlb
in
jmp
fimuls
shrl
inc
jae
cwtl
push
sar
fucomi
mov
sbb
cmp
mov
aas
push
xor
sub
push
icebp
ret
add
adc
fstpl
sar
push
mov
xchg
xchg
insl
xor
sti
pop
pushf
insb
cli
lcall
andl
call
scas
xor
ficompl
les
or
bnd
sbb
mov
xchg
adc
js
fmull
xchg
xchg
dec
leave
sub
cmp
je
mov
mov
or
inc
rclb
pop
inc
pushf
or
push
repz
jbe
cmpsb
sahf
push
jl
repz
mov
dec
mov
fiadds
fstpl
insl
aaa
mov
cmp
addr16
cmp
jp
call
pop
cmp
mov
add
popa
mov
popa
sub
jge
sti
fsts
xor
mov
cmp
push
jns
jecxz
test
push
xor
call
inc
xchg
mov
push
push
repnz
out
xlat
stc
push
mov
cs
in
sub
push
mov
dec
push
aam
push
mov
sub
jne,pn
or
xlat
or
push
jae
jns
push
lods
mov
push
inc
pop
std
sbb
cwtl
pushf
and
outsl
dec
ljmp
and
adc
outsl
mov
in
jae
aam
sbb
or
jbe
and
pushf
add
or
mov
leave
jne
jnp
adc
pushf
pop
adc
fdivs
pop
mov
inc
push
pop
jno
fs
aam
icebp
nop
add
jb
cwtl
test
or
pop
mov
rorl
pop
fcmovne
sbb
cmp
stos
cmp
or
test
mov
or
cli
push
ret
outsb
insb
mov
inc
movsb
inc
cmp
mov
rorl
mov
ja
or
jno
lcall
loop
mov
cld
cmp
test
jp
mov
xor
sbb
mov
outsb
fcomps
inc
lret
xchg
jp
jne
add
fsubp
addl
sub
cli
hlt
sub
loop
ltr
sbb
cmc
mov
xor
sub
xchg
jle
jge
mov
enter
ret
je
leave
xchg
test
test
out
add
jb
mov
out
push
hlt
sbb
sbb
pop
xorb
push
aam
mov
jp
push
loop
leave
push
in
fsubrs
dec
add
xchg
sbb
sub
jge
stos
pushf
testb
mov
cwtl
stc
in
in
dec
rcll
xor
mov
jg
popf
dec
scas
adc
inc
cli
lret
push
pushf
nop
cwtl
or
fistpl
test
mov
popl
jb
stos
push
js
push
fwait
in
repz
rcrl
xor
hlt
fdivs
pop
out
inc
lock
mov
push
jecxz
add
or
in
dec
mov
jecxz
jg
out
fs
push
es
mov
cmp
jle
in
push
mov
inc
push
pop
mov
push
enter
loop
jbe
loopne
push
fsubrl
push
shrb
jge
pushf
outsl
inc
adc
aaa
lret
xchg
subl
mov
fucom
xor
add
push
add
icebp
mov
fdivl
gs
mov
mov
imul
out
outsb
mov
outsl
jmp
pop
outsl
inc
jne
lods
test
dec
fs
jb
mov
lcall
scas
psubd
ljmp
xor
and
lret
adc
test
xchg
dec
add
add
sbb
xchg
sub
jno
fadds
scas
mov
sub
ret
aam
into
xor
ljmp
dec
mov
hlt
ja
cli
or
adc
aaa
je
fsub
dec
xchg
lods
lret
adc
mov
dec
mov
jmp
sbb
test
dec
cmp
inc
and
stc
fdivrl
fldenv
mov
pusha
or
mov
pusha
jmp
dec
sbb
push
or
faddl
pinsrw
add
dec
fcmove
pop
adc
imul
inc
pop
add
insl
cmp
rclb
fstpt
loop
sbb
inc
add
jl
adc
jae
test
clc
jno
test
sbb
add
lret
sbb
ljmp
push
mov
mov
mov
dec
cwtl
lods
testb
inc
into
cmpsb
jno
nop
dec
repz
jne
cmp
jle
mov
repnz
mov
sar
and
mov
int
psubsb
cmpsl
movsb
imul
cwtl
outsl
int3
js
inc
or
stos
lock
add
mov
and
int3
or
mov
loopne
sbb
mov
test
cmpsb
ret
mov
mov
push
out
jo
mov
test
mov
mov
and
mov
mov
push
scas
ret
bound
pop
inc
call
test
inc
in
inc
pop
aad
cs
stos
stos
inc
movsl
aaa
or
repz
inc
pusha
xor
inc
popf
or
ss
or
jecxz
decb
or
or
cmp
jmp
lods
jnp
sub
cmp
in
jb
fsts
push
bound
ds
testb
ret
dec
sbbb
xor
pop
cltd
iret
mov
xchg
iret
mov
or
cwtl
int3
jge
lret
push
je
or
stc
ret
popl
data16
sahf
push
enter
jg
out
in
rcll
daa
repnz
aam
lods
loopne
das
mov
in
mov
adc
mov
push
cmpl
movsl
and
add
cmp
icebp
mov
test
dec
push
mov
cmpl
xlat
out
jp
adc
xor
negb
sbb
and
movsb
mov
pop
dec
in
shll
mov
sub
adc
inc
test
xor
mov
ds
ss
aam
and
in
shrl
jno
cltd
imul
cmp
pop
pop
push
js
jo
test
lahf
cmp
inc
dec
pushf
imul
and
dec
aad
cld
mov
xor
les
jmp
mov
loopne
sub
or
push
imul
gs
jbe
ss
rolb
add
iret
sub
cmp
adc
and
and
push
gs
lcall
in
push
pop
jmp
into
mov
xor
rclb
cmovb
cmp
adc
mov
xchg
inc
add
fmuls
lahf
test
sbb
cmp
repz
ljmp
dec
mov
pop
in
push
mov
in
add
push
fmull
in
adc
mov
insb
mov
test
cmp
jle
shrb
fisttpll
mov
cmp
test
in
or
psubq
notl
out
pop
sbb
ficomps
ljmp
mov
aaa
stos
mov
sub
js
mov
mov
pusha
lcall
mov
stos
mov
nop
adc
sbb
scas
add
push
xorb
dec
sub
mov
sub
das
jae
or
or
xchg
xchg
rorl
push
xchg
in
or
lea
mov
cmp
inc
sbb
in
push
and
movaps
add
pop
test
cmp
xchg
mov
inc
ss
cld
shl
subb
or
push
push
movb
fwait
or
in
mov
ss
push
push
jl
cs
add
fwait
jno
mov
xor
movsb
adc
fsubr
lret
les
fs
mov
aaa
hlt
push
scas
repnz
ret
jg
mov
call
mov
dec
mov
mov
int
xor
xchg
mov
inc
mov
in
cld
enter
jo
mov
daa
mov
ja
push
dec
mov
pop
dec
test
call
mov
push
cmp
leave
push
je
fmull
hlt
mov
in
inc
repnz
and
mov
sub
cmp
outsb
cli
cltd
pusha
jne
movsb
lcall
insb
out
in
mov
insl
icebp
inc
jo
repnz
dec
into
dec
ja
pop
inc
test
outsl
emms
sbb
adc
dec
mov
xor
ja
mov
fsubr
lods
add
stc
mov
iret
inc
pop
jl
xor
or
imul
rorb
fsubl
dec
rclb
or
lds
push
outsb
leavew
xor
push
cmpsb
fldl
jg
jg
add
sarb
roll
jno
dec
mov
imul
pop
stc
and
std
repnz
xchg
and
jns
les
mov
fmull
and
movsb
repz
cs
push
mov
aad
leave
mov
fimull
out
cmp
or
push
fisubl
gs
fmull
mov
cmpsb
movl
lahf
dec
mov
add
add
ret
outsl
popl
insl
rcll
bound
addr16
loopne
xchg
inc
jge
xchg
xchg
repnz
repnz
mov
cmpsl
out
jb
jg
pushf
pop
mov
jmp
or
aad
adc
jmp
dec
mov
popa
ja
mov
jge
dec
and
push
divb
jg
xchg
rcl
adc
data16
push
icebp
loope
push
pop
cltd
test
fcmovu
not
sbb
push
push
lret
cwtl
pop
mov
jns
sar
add
testb
and
add
lret
int3
or
rcl
into
lcall
ret
mov
mov
js
stos
jmp
mov
std
and
stos
test
and
sti
dec
push
sub
movsb
sbb
jle
mov
dec
test
das
push
insb
cmpsl
aas
xchg
jno
xchg
mov
test
movsb
push
cmpsb
insl
call
inc
xor
mov
jne
outsl
xor
adc
hlt
push
ja
and
stos
sub
mov
and
and
out
das
hlt
add
adc
mov
and
xor
mov
das
loopne
inc
sbb
jg
faddl
add
xor
imul
repnz
iret
pop
aaa
add
mov
orl
pop
cmp
stos
mov
xor
in
popf
inc
cmp
jnp
ret
aam
mov
mov
and
sahf
xor
jle
adc
outsl
jbe
movsl
dec
or
icebp
repnz
lods
adc
jge
cmpsb
icebp
ret
inc
adc
jg
sub
stos
rclb
out
popf
das
push
cmp
shr
int3
rcll
bound
jmp
popa
add
dec
jb
movsb
jae
fs
push
push
add
or
dec
push
push
inc
int3
aad
cmc
fwait
inc
mov
lahf
xchg
imull
pop
xor
decb
dec
mov
ds
dec
std
insb
test
bswap
xchg
hlt
popa
or
mov
imul
or
cwtl
push
ljmp
fcoml
das
imul
lods
je
test
mov
cmp
popa
xor
add
cmp
imul
inc
lret
test
dec
ret
mov
fnstcw
stc
inc
and
les
xchg
dec
mov
cmpsb
rcrl
cli
dec
movsb
mov
popa
or
jae
loope
cmc
cmp
or
pop
jno
dec
dec
push
mov
ds
iret
jne
sahf
loop
mov
jle
dec
int
mov
add
cmc
arpl
orb
mov
mov
jp
dec
int
cmp
jo
daa
movsb
out
cmp
lds
and
stc
add
je
add
nop
fwait
add
mov
std
insb
adc
enter
negl
in
pop
orb
sub
arpl
jl
jno
movsb
jns
fidivrs
adc
popf
sbb
cwtl
and
inc
sbb
das
mov
mov
dec
jb
mov
hlt
imul
sbb
push
push
inc
adc
imul
jns
sbb
xor
xchg
fsubrp
xorb
jg
test
fnsave
ret
sbb
pop
sub
cltd
cs
icebp
hlt
and
fists
mov
sahf
sub
fs
je
mov
mov
pushf
jno
dec
sbb
or
mov
push
mov
sbb
jecxz
and
arpl
jnp
mov
add
cmpsb
fisubl
jecxz
sbb
outsl
ja
dec
jno
xor
xchg
mov
add
aad
fstps
xchg
sbb
int3
rorb
pop
daa
jae
push
cmp
mov
add
shl
xchg
xorb
sbb
adc
js
mov
gs
cmc
jl
stos
jp
mov
dec
push
pop
loopne
into
adc
sub
nop
mov
insb
leave
aas
inc
jae
imul
jbe
je
outsl
pop
sub
inc
popl
push
movsb
jnp
push
adc
or
cmp
or
mov
mov
inc
and
test
add
pop
lods
clc
mov
in
scas
mov
or
and
or
jg
inc
rorl
dec
dec
gs
insl
fildll
push
push
jno
cmp
pusha
out
pop
out
jle
or
divb
jns
jmp
cmpsl
es
mov
mov
loopne
sub
lcall
fucomp
in
mov
mov
fldenv
dec
je
add
push
out
sti
pminsw
xchg
into
icebp
negl
loopne
pop
adc
and
out
xchg
jmp
rcr
xchg
and
inc
rcrl
cmp
mov
lea
fdivrs
lret
cld
imul
xchg
adc
scas
add
adc
add
sub
pop
in
push
mov
adc
cmp
push
pop
push
add
and
insb
dec
push
popa
repz
aad
fcoms
push
xor
clc
aas
and
and
mov
sbb
xchg
or
adc
dec
in
out
andl
pop
pop
mov
jbe
push
or
inc
je
cmp
jno
mov
jne
scas
bound
ja
faddl
cmp
fmuls
push
adc
or
outsl
cli
push
jbe
push
mov
mov
pop
cmp
lods
pop
repz
lock
xchg
cmp
fs
xchg
test
pop
sbb
in
jbe
outsl
xor
adc
repz
movb
mov
gs
ret
and
inc
mov
mov
aaa
mov
loop
mov
push
and
nop
adc
pop
lahf
jp
fldt
mov
ret
cmp
push
gs
test
loopne
scas
adc
jo
dec
cmp
inc
lods
cmp
push
lods
aam
dec
pop
scas
imul
imull
mov
and
sbb
xchg
jecxz
mov
mov
sub
mov
mov
out
les
mov
sbb
js
jb
lods
lret
and
adc
pop
push
stos
or
lods
into
scas
test
ret
pop
jg
xorb
gs
lods
lds
fmul
sbb
pop
addl
xchg
cmp
sbb
shr
inc
sbbb
sbb
sub
pop
orb
push
clc
cmc
sub
ljmp
out
mov
aas
cwtl
sbb
repnz
js
mov
and
out
pop
cmc
es
add
mov
out
testb
mov
mov
adc
push
sbb
add
outsb
push
call
lock
sahf
pop
clc
mov
iret
jb
sbb
sub
into
adc
jle
xor
jo
inc
test
pushf
fiadds
cld
jo
and
sub
push
cmp
and
outsl
cmpl
push
adc
mov
icebp
movsb
cmpsb
dec
pop
sub
ljmp
fwait
jb
scas
xor
ret
xchg
lds
test
test
xor
ret
enter
or
repnz
push
xlat
jnp
frstor
or
stc
lods
ljmp
pop
jbe
sbb
call
addl
das
repnz
or
imul
push
repz
cmpb
xchg
sub
mov
shrb
ror
stos
out
xchg
les
jp
fwait
jnp
xchg
adc
ret
mov
adc
sarl
dec
xchg
jp
sbb
sub
aaa
pop
push
addb
pop
movb
popf
sub
pop
push
pop
mov
adc
ss
xchg
mov
dec
scas
xor
mov
xchg
dec
cmp
mov
pusha
in
bound
jae
cmpsl
pusha
bound
add
rorb
mov
sub
testl
add
mov
out
adc
push
ds
push
test
fisubrs
loopne
addr16
sarb
cmp
jb
jle
jecxz
push
push
jnp
xor
mov
lret
into
shl
mov
mov
mov
cld
iret
or
into
jp
aas
mov
js
jg
out
fmul
push
sub
ja
and
call
ror
popa
hlt
mov
aas
pop
dec
and
jmp
int
iret
data16
stos
lds
rorl
imul
pop
mov
xor
mov
mov
daa
mov
lock
sbb
in
xor
je
jecxz
sbbl
cwtl
lea
add
cltd
cmp
push
daa
fwait
or
leave
das
data16
push
loope
imul
into
js
push
mov
adc
repz
jl
push
cwtl
add
sub
mov
dec
loop
adc
cmp
cltd
subb
mov
lret
insb
repnz
inc
mov
xor
aad
lahf
jg
dec
in
movsl
mov
inc
add
mov
test
gs
xchg
dec
fidivrs
stos
mov
and
test
sub
pop
dec
jb
xor
xchg
and
shll
jle
rcll
xor
mov
and
dec
out
mov
in
cmp
loopne
cmpl
insb
mov
dec
inc
int
hlt
adc
push
dec
inc
fisttpll
xchg
mov
lea
cwtl
lods
xchg
add
insl
fwait
stos
mov
mov
nop
rcrl
push
pop
fisubl
cmpsl
fucomi
dec
rcll
cmp
push
and
aad
cld
loopne
out
mov
cmpl
scas
bound
pop
push
cmpsb
movsl
es
int3
sub
mov
xlat
jae
outsb
addr16
aad
out
loop
xchg
fcoml
push
ja
sbb
shrl
out
sbb
filds
xchg
nop
sub
sub
add
lcall
mov
neg
xchg
mov
gs
sub
xor
outsb
data16
insb
negb
in
sbb
xchg
test
mov
mov
das
js
test
adc
stc
lahf
idivb
aas
aad
hlt
pop
push
pop
mov
ljmp
shl
jmp
and
shll
mov
xor
mov
adc
push
dec
mov
add
jmp
cld
mov
cli
mov
syscall
lods
loopne
out
je
cmp
add
dec
repnz
mov
sub
cmp
inc
jl
pop
sub
xchg
lret
lods
jp
or
test
lahf
inc
ret
sbb
ja
mov
loop
jp
mov
repz
dec
frstor
pop
sbb
and
pusha
pop
arpl
fcmovnbe
int3
mov
int
pop
cs
jp
inc
xchg
and
clc
adc
sbb
mov
data16
jb
add
mov
mov
mov
mov
pop
data16
pushf
xor
fwait
loopne
flds
ljmp
dec
mov
test
outsb
inc
xor
daa
cld
imul
cmpsl
mov
shrb
aas
adc
adc
cwtl
push
mov
sub
dec
xchg
mov
mov
mov
test
std
cmpl
hlt
jle
jg
pop
dec
fsubrs
adc
loope
xchg
jae
sti
lods
mov
dec
movsl
sbb
add
mov
fisubl
push
inc
xchg
stc
dec
cmp
movsb
add
push
jmp
in
xlat
and
mov
jnp
adc
sbb
push
push
jae
loope
sbb
aaa
rorb
xchg
cmpsl
test
scas
mov
sub
iret
addb
pop
or
inc
in
inc
lea
sarb
gs
outsl
dec
je
push
mov
jg
std
xchg
mov
mov
and
pop
cmpsb
dec
jmp
xor
adc
sbb
add
nop
mov
add
int3
mov
or
push
insb
inc
mov
stc
lea
sbb
mov
movsl
dec
mov
pop
sbb
std
inc
or
dec
push
out
pop
sbb
inc
loopne
mov
out
cld
push
dec
mov
fcmove
scas
fsts
pop
outsb
mov
fmuls
sub
test
mov
add
mov
mov
scas
push
push
dec
les
pop
aas
sbb
in
pop
add
add
ficomps
je
xor
mov
jb
lods
mov
mov
mov
fstpl
je
xchg
fwait
xor
sar
adc
clc
inc
jbe
mov
sub
fcmovne
push
negl
mov
push
sub
imul
xchg
fwait
xchg
mov
shll
paddsb
jb
sbb
pop
bound
rcrl
xchg
out
xor
mov
push
mov
shrb
or
adc
mov
pushf
daa
cmp
cmp
or
imul
fsubrl
inc
rol
inc
add
sub
iret
fwait
dec
inc
mov
and
dec
arpl
dec
mov
out
divb
jae
int
rcrl
pop
mov
xchg
ret
out
test
pop
cmpsb
sbb
sbb
pop
ljmp
incb
andb
sbb
lods
xor
mov
insl
stos
andl
loope
or
jbe
or
inc
inc
test
call
add
cmpsb
out
ficoms
adc
fwait
inc
shl
dec
xlat
cltd
ret
stc
or
movsb
and
xchg
ljmp
inc
mov
xchg
subb
sarb
dec
into
mov
icebp
ret
je
adc
xor
enter
inc
rorb
or
scas
int
cwtl
dec
sbb
cmovl
movsl
bound
and
aam
cmpsl
shlb
jle
sarl
int
imul
stos
shll
mov
sub
push
test
ret
lret
movsb
sub
jbe
jp
or
jmp
hlt
popa
cmp
shlb
sbbl
xor
stc
cmp
fwait
mov
adc
and
push
sbb
and
cli
iret
shlb
mov
xor
push
flds
add
jp
add
stc
shrb
icebp
mov
xchg
fwait
jmp
xchg
jle
pop
jmp
or
incb
dec
loope
leave
verr
pop
or
int
mov
push
aaa
sbb
cmp
int
lods
cmpsb
ja
adc
imul
fwait
dec
or
and
stc
das
mov
jge
mov
mov
push
xor
pusha
fisubs
add
andl
in
in
and
pop
jne
mov
ficomps
cmc
repz
jnp
shll
push
dec
push
push
ds
lahf
ds
sbb
add
aam
dec
xor
aad
cwtl
pop
mov
sbbb
sub
icebp
adc
in
test
aad
cltd
dec
out
lock
cmpsl
jne
out
sti
xor
cwtl
out
imulb
mov
jbe
mov
jno
and
or
jmp
inc
add
fmull
enter
ret
sub
push
scas
xchg
pop
stos
jp
adc
add
mov
mov
push
aam
cli
adc
mov
les
popa
sbb
jnp
imul
or
outsb
divb
outsb
cmpsl
jg
pop
fmull
push
stc
xor
pop
cld
and
rcll
jb
pop
cltd
cmc
insl
mov
mov
in
test
xorl
inc
mov
stc
jecxz
stos
sub
fnstcw
dec
sub
add
jnp
dec
sbb
movsb
mov
clc
aaa
cmp
pcmpgtd
shlb
add
and
lcall
dec
jno
xor
jo
cltd
xor
cld
mov
adc
adc
jbe
cmp
sahf
gs
cwtl
repnz
and
mov
sahf
xchg
and
out
cs
scas
adc
ss
jnp
lods
cmp
shl
add
cmp
popf
inc
sub
mov
loopne
outsl
xchg
mov
mov
popa
loope
lahf
inc
loop
push
sbb
loop
fnstcw
test
ss
add
mov
mov
add
jge
out
into
xchg
aas
mov
insb
and
in
fdivr
mov
add
push
daa
mov
bound
jp
popa
pop
sub
push
dec
xor
inc
xor
sbb
ja
xor
call
mov
sbb
xchg
cld
inc
notb
stos
addr16
add
shlb
dec
idivl
jb
retw
shrb
data16
insl
fadd
js
mov
loope
sub
and
leave
mov
jmp
repz
jl
push
repnz
cmp
clc
and
mov
call
mov
push
in
iret
and
xor
lahf
imul
jnp
sbb
pop
roll
cmp
mov
inc
ret
int3
jge
rcll
inc
rep
ja
aam
daa
cmp
scas
push
or
inc
outsl
inc
iret
test
out
inc
dec
push
xor
std
popf
mov
movsl
and
into
sahf
xchg
mov
xchg
ljmp
mov
cmpsb
sub
or
push
xor
fdivrs
sub
adc
ds
lods
aaa
pop
jo
xor
add
pop
lods
pop
mov
rcrl
cmpsb
lock
mov
jb
into
mov
lods
cwtl
test
and
arpl
outsl
sbb
pop
pusha
pop
pop
mov
mov
jp
imul
pop
mov
inc
xchg
xchg
popf
shr
sub
imul
int3
jae
xchg
pop
and
push
int3
and
mov
jle
insl
stos
adc
xchg
and
mov
mov
fistl
inc
xchg
cmp
mov
lods
fwait
and
in
dec
jp
sbb
push
mov
movsl
int3
cmp
jl
rclb
notb
xor
sbb
jo
xchg
cmp
sub
mov
sbb
iret
and
fstp
inc
popa
inc
or
int3
lret
loopne
cld
cmpl
inc
mov
cmp
xor
cmp
xlat
push
sub
sub
xor
xchg
outsl
test
sarl
out
fmul
inc
addr16
and
ret
fwait
addl
inc
aad
ss
adc
push
clc
ds
fabs
ret
clc
decb
push
rol
inc
int
mov
stc
mov
imul
std
xchg
dec
inc
fdivp
es
ficoml
inc
lret
lea
pop
inc
jecxz
pminub
test
add
loopne
push
mov
sub
daa
sti
xchg
or
movsb
mov
adc
pop
mov
mov
arpl
cs
sbb
cmc
or
sub
ja
enter
lcall
fstl
pop
sbb
and
cli
sbb
mov
sbb
or
sbb
jge
mov
add
ret
dec
stc
inc
jnp
cmp
aas
adc
lret
cld
or
fidivrl
clc
dec
imul
mov
sahf
movsl
cld
cltd
cmp
sub
cmp
jnp
mov
loopne
xor
push
call
fnstsw
inc
call
mov
mov
add
jg
adc
adc
add
enter
popl
push
jno
ja
cltd
mov
xchg
rorb
mov
fucom
test
ret
dec
jb
inc
dec
repnz
push
push
mov
fistps
and
sub
test
adc
aaa
push
js
dec
mov
mov
adc
popa
jae
xchg
movsl
jae
push
out
adc
popf
and
in
lcall
ja
aam
pop
repz
or
adc
outsb
je
loopne
xchg
rcll
cmpsb
loop
movsl
mov
popf
les
mov
fdivs
leave
int
repnz
mov
not
arpl
or
data16
dec
push
mov
loopne
pushw
aad
fldenv
sbb
or
cmpsb
cwtl
int
icebp
and
jo
das
jno
insb
mov
mov
adc
leave
std
push
in
je,pt
xchg
sbb
js
inc
pop
xchg
jg
arpl
mov
and
mul
pusha
cmc
cmp
add
push
push
xlat
fsubl
shrb
fcoml
fidivrl
lahf
out
sbb
add
addb
inc
xorl
sbb
ffree
repnz
inc
mov
mov
push
jns
lods
jle
lahf
adc
sub
cmp
mov
sbb
xor
jns
cmp
or
jbe
jns
fidivrl
push
lods
pop
mov
bound
xchg
dec
dec
xchg
mov
lods
and
adc
sbb
jb
and
icebp
or
pop
adc
int3
xchg
pop
and
xor
rclb
es
lahf
notl
jle
jno
call
sub
mov
stos
stc
mov
ljmp
push
int3
imul
iret
jmp
jns
push
popa
shrb
cltd
divl
call
and
jo
or
xor
push
mov
imul
outsb
add
out
push
ljmp
lret
lods
or
rorl
jno,pn
pop
jo
andb
cmp
push
cmp
pop
or
xchg
inc
fbld
or
out
js
loopne
inc
lock
popf
jmp
cmp
or
int
cmpsl
mov
inc
xor
es
xor
cmp
movsl
ja
and
xorl
lock
sub
lock
imul
push
js
aam
inc
and
add
rorl
inc
adc
pop
fs
add
movsl
ljmp
jmp
adc
xor
rolb
pop
lods
out
dec
inc
ja
push
fs
pop
push
sub
fildll
rcll
pushf
jae
pop
repnz
ficomps
cld
test
push
push
daa
test
xlat
lret
push
jns
insl
jp
or
and
or
jmp
sbb
pushf
insl
in
xor
inc
ficoms
or
cmc
and
sbb
movsl
fistpll
xchg
mov
add
shlb
sbb
mov
mov
das
cmc
fcoms
pushf
add
mov
das
sbbl
iret
int3
iret
pop
lret
daa
test
push
pop
outsb
hlt
repnz
lcall
aas
pop
sub
dec
adc
cmpsl
xor
movsl
pop
stos
fimuls
ret
sbb
pop
loop
add
sub
jne
push
sub
aam
hlt
cmpsl
or
adc
push
and
cltd
test
mov
test
jbe
add
xchg
jmp
pop
cs
icebp
repz
pop
cmpsl
jae
add
ret
scas
xorl
jns
mov
into
fs
enter
sahf
sub
ljmp
js
push
ficompl
push
jmp
mov
jno
mov
and
icebp
adc
xor
push
fimull
or
mov
popaw
sar
mov
xchg
push
shll
and
pop
in
icebp
pushf
push
pop
xchg
leave
dec
repnz
outsb
xchg
sbb
and
xor
icebp
outsb
jnp
les
out
test
fsubrp
cmp
fs
push
xor
out
sar
sub
nop
cmpl
sbb
mov
add
imul
clc
mov
lret
add
arpl
cmp
jle
addl
or
push
js
in
mov
and
ds
std
sbb
jle
add
dec
stc
add
rorb
sub
fcmovu
sbb
push
dec
js
das
shlb
jbe
add
shrb
cwtl
dec
fists
stos
frstor
cmpsl
out
out
cmpsb
cmp
std
out
das
ret
test
dec
and
inc
push
ds
or
or
push
push
rorb
mov
sbb
dec
pop
cmp
pusha
js
sbb
push
and
or
adc
sbb
movsb
inc
xchg
pop
je
jno
pop
shrl
lret
imul
movsl
and
sub
repnz
inc
mov
mov
inc
cwtl
mov
pop
les
sbb
rcrl
dec
cmc
mov
pop
xchg
jl
rcrb
clc
inc
mov
ffreep
jecxz
push
mov
jle
rorb
push
and
mov
sub
xor
mov
push
adc
inc
rclb
pop
addr16
xchg
in
mov
dec
mov
pop
lahf
lea
repnz
sarl
mov
jmp
les
adc
jae
inc
cmp
or
lret
lods
mov
xor
je
inc
push
add
push
fnstsw
sub
sub
push
pop
lahf
jl
cltd
jmp
repnz
cmp
push
jge
push
fisttpll
cld
push
in
push
fcoml
nop
jbe
and
data16
cmp
aam
sub
shll
xchg
scas
sub
pop
sahf
xchg
cmpsl
adc
add
or
lock
mov
push
lret
adc
sarb
dec
rcr
mov
loopne
cmp
sub
sar
add
rolb
movl
setge
adc
rcrl
sub
xchg
mov
inc
dec
ds
dec
in
mov
stc
cmpsl
adc
movsb
and
ffreep
dec
shrl
sub
ret
cmp
push
pop
inc
pop
adc
in
outsl
mov
loop
xchg
adc
push
out
scas
xchg
jle
mov
mov
cmpsl
adc
xchg
adc
outsl
mov
imul
jg
dec
clc
cmp
stc
or
sub
sbb
data16
cwtl
dec
cmp
or
stos
mov
test
jge
mov
add
lock
jecxz
pop
add
inc
scas
jp
iret
outsl
jg
outsl
xchg
inc
lock
pusha
dec
imul
shlb
xor
or
imul
jge
in
sti
in
cmp
or
inc
push
rcrl
outsb
js
jbe
out
jp
inc
lock
dec
xchg
sti
pusha
pop
nop
stos
push
lock
jge
cmpl
xor
addr16
xor
jmp
aam
mov
insb
ret
cs
pop
or
pop
outsb
out
in
jbe
test
mov
push
cmp
pop
pop
jl
push
adc
ja
lahf
mov
adc
scas
push
shlb
add
dec
mov
or
jnp
cmp
insb
push
mov
sub
inc
jl
fstpt
iret
push
popa
jae
push
xor
ljmp
icebp
adc
in
xlat
pushf
out
mov
jae
loop
xor
stos
xlat
cmpsb
mov
jb
fisubl
add
mov
inc
jnp
inc
mov
adc
rorb
icebp
fldl
xchg
mov
dec
pop
subb
test
mov
mov
cmp
sub
je
stc
in
push
fbstp
cmp
out
test
xchg
les
pop
cld
out
cmp
adc
mov
outsl
pop
clc
stc
ljmp
ret
cmp
out
mov
ret
xchg
aad
stos
mov
mov
mov
fildll
fidivl
popa
fidivs
jmp
addr16
push
mov
xchg
andl
mov
sbb
inc
and
mov
mov
mov
sbb
dec
xor
movsb
mov
gs
pop
mov
adc
sub
sub
push
xor
inc
scas
in
and
shll
xchg
xor
dec
das
scas
orb
fcoml
mov
movsl
jge
mov
mov
pop
ret
pushf
or
stos
sub
xchg
insl
loopne
adc
xchg
fldln2
jne
decb
movsb
movsb
dec
lods
fmull
jae
xor
setp
daa
outsl
pop
and
in
shlb
and
push
fwait
xchg
push
adc
or
cmp
pop
wbinvd
add
xor
icebp
jnp
idivl
sbb
ja
dec
jmp
cli
out
aas
mov
xchg
lret
push
mov
inc
and
or
fldt
clc
cld
daa
test
test
movsl
out
out
push
gs
mov
pop
cwtl
test
jb
adc
and
mov
push
andps
xrelease
add
cmp
data16
jg
adc
mov
sbb
js
je
scas
nop
push
lcall
jns
xlat
sbb
and
dec
pop
sti
xchg
into
mov
mov
lcall
or
in
add
cwtl
cmp
in
mov
add
inc
mov
lcall
jae
push
and
jle
sahf
rcl
or
add
inc
and
add
jno
inc
add
lcall
inc
xchg
sub
jmp
jmp
ja
mov
dec
adc
pop
mov
xor
int3
push
cmc
ljmp
adc
mov
dec
rclb
pop
add
loop
cmp
sub
add
mov
test
inc
fsubs
ret
testb
mov
xor
arpl
dec
mov
add
push
adc
sbb
mov
xchg
stos
push
lcall
into
pop
xor
or
mov
jp
cmp
jns
xor
fisttps
add
jmp
push
jmp
int
movb
adc
or
and
imul
sahf
mov
test
xor
das
jmp
xchg
xchg
and
insb
pop
sbb
mov
shr
mov
xor
mov
fwait
lret
lock
cmc
pop
rcl
add
pushf
xor
cmp
mov
xchg
dec
leave
imul
mov
cwtl
dec
or
pop
cmpb
adc
xor
cmpsl
xchg
and
iret
and
pop
mov
and
cmp
test
out
xchg
dec
sub
loop
pop
lahf
mov
inc
or
add
sub
cmp
or
loopne
adc
jle
stc
arpl
rorl
mov
addr16
sub
push
xchg
lea
xchg
pop
daa
or
inc
mov
or
call
xchg
lods
iret
cmp
imul
push
jmp
and
ss
movsb
leave
jge
mov
stos
push
push
cmpsb
mov
sarl
add
ds
cmp
and
add
into
push
or
popa
aad
pop
jmp
push
mov
pop
int3
je
xor
arpl
mov
inc
stos
ret
cmc
inc
aam
dec
in
jb
cmpl
stos
imul
inc
xchg
jg
and
mov
ja
cmp
out
jl
cwtl
popf
add
stc
adc
and
aaa
out
out
insl
mov
js
add
mov
mov
rorl
jmp
mov
and
movsb
mov
push
or
mov
jmp
xchg
imulb
ja
aad
sti
inc
or
inc
sbb
mov
lods
inc
xor
jo
jo
or
pop
or
aaa
or
cmc
negb
ss
out
stos
or
mov
pusha
int3
imul
out
lock
leave
jl
mov
fldt
xchg
fsubrp
push
out
pop
stc
mov
xor
fildl
aaa
bound
sub
clc
add
sbb
sub
inc
dec
sub
jnp
jne
cmp
xor
or
mov
enter
lcall
popf
out
je
fwait
push
jmp
adc
push
in
adc
std
and
cmc
roll
ja
cltd
jne
push
cli
add
push
lods
pop
mov
mov
jno
xchg
shr
pop
fbstp
push
and
adc
mov
fwait
xor
out
fnstsw
inc
or
or
push
pushf
add
adc
xor
les
add
fists
mov
push
lods
pop
js
inc
pushf
xlat
loope
or
and
in
loopne
sub
in
test
or
je
cmc
dec
cmp
dec
cwtl
mov
adc
jge
adc
addr16
ss
mov
xchg
ss
xcrypt-ecb
cmpsl
lea
xchg
mov
mov
mov
xor
mov
xchg
sub
vorps
adc
inc
addr16
sbb
cmpl
je
jmp
sub
nop
aaa
sar
clc
fidivrs
rclb
mov
ja
dec
mov
ret
xor
andl
add
hlt
mov
cli
lcall
out
leave
xor
push
loope
aam
insb
movsl
in
jecxz
jle
and
je
push
aad
mov
add
dec
mov
outsb
popf
xor
sub
jnp
std
and
sub
outsl
adc
jnp
daa
pop
lret
mov
push
cmpsb
mov
pop
sub
cmp
fsubr
fmuls
int3
sbb
fisttps
mov
ljmp
mov
loopne
mov
sub
cmp
mov
or
cmp
push
imul
fadds
pop
jmp
push
mov
add
jecxz
sub
cmp
inc
mov
mov
cld
scas
sysenter
out
sbb
jae
fcmovbe
push
push
inc
and
cmp
lret
push
mov
pop
cmpsb
mov
lock
dec
pop
push
mov
jo
fdivs
jno
pop
fists
push
mov
fmull
sbb
pop
jns
fmuls
ret
shrl
lea
add
repz
mov
or
mov
jns
lds
dec
jne
pop
ja
inc
dec
data16
cmp
mov
cmpsb
pop
sarb
mov
xchg
imul
adc
scas
dec
imul
leave
outsb
mov
clc
jecxz
adc
add
fistl
imul
mov
mov
push
xchg
gs
jno
push
or
lret
mov
outsl
mov
lcall
lret
in
pop
xor
or
out
and
cmp
fisttps
mov
in
push
mov
mov
jbe
mov
cmp
dec
inc
arpl
daa
jns
push
das
push
cwtl
dec
mulb
xchg
inc
inc
js
jo
shlb
and
ljmp
jmp
shll
ljmp
flds
aaa
xor
dec
js
insb
repnz
cmp
out
in
idiv
dec
out
cmp
mov
jno
inc
lcall
aad
test
mov
out
hlt
mov
xchg
ss
xchg
test
push
xlat
cmp
and
scas
jne
arpl
fcmovb
pop
movsl
xchg
mov
test
sbb
pop
mov
mov
sarb
cli
push
pop
nop
in
sahf
mov
clc
in
cmp
push
test
mov
inc
or
pop
popf
enter
sahf
aam
mov
adc
addb
cmp
xchg
mov
subb
out
mov
imul
in
in
cltd
cmp
and
dec
int
call
das
mov
addr16
push
dec
outsb
xlat
out
or
leave
inc
in
jg
cmp
pop
dec
pop
mov
lcall
sbb
and
std
out
lretw
pop
adc
xchg
movsb
pusha
cmpsl
fcoml
popa
mov
enter
out
jmp
push
scas
add
push
sbb
sbb
int
mov
lret
and
test
cmp
loopne
add
xchg
imul
jns
outsb
cmp
in
xchg
fists
movsl
popa
mov
fxch
jecxz
xor
pusha
push
xor
mov
shll
mov
pop
jns
push
divl
sub
je
test
ljmp
sub
in
jmp
js
add
in
daa
iret
pop
and
lahf
lock
in
cmpsb
add
dec
dec
shrb
ss
fsubrs
inc
dec
xchg
and
movsb
lret
mov
imul
das
mov
xor
push
dec
xchg
clc
int3
pop
inc
sub
cmp
outsb
inc
mov
cmp
jmp
das
insl
mov
sbb
xor
cmp
lcall
pushf
mov
std
sub
jge
ror
and
push
icebp
out
roll
insl
dec
push
mov
outsl
pop
mov
popf
inc
push
leave
rcrb
push
in
repz
fstps
out
mov
inc
loopne
mov
add
mov
jg
jne
cld
jge
cmp
xchg
aam
pushf
cmp
test
mov
ss
int3
cltd
sbb
cli
lods
sbb
and
lods
mov
xchg
aaa
dec
add
pop
mov
fnstcw
mov
jge
lds
pop
cmpsl
test
lcall
sub
je
mov
jb
or
pop
fs
ret
ljmp
in
das
push
ret
add
xor
imul
jecxz
sahf
inc
cld
movl
mov
push
in
and
jl
mov
cmc
dec
cmpb
leave
sub
add
or
iret
incl
jmp
pop
xchg
lds
mov
xchg
xlat
in
cmp
or
cmp
push
fchs
lds
mov
xchg
mov
lcall
jle
mov
push
mov
jae
add
ret
dec
nop
jns
daa
testl
adc
test
add
dec
sbb
pop
cli
lcall
push
lret
push
mov
shll
scas
jne
fiadds
jns
addr16
int3
lcall
pushf
leave
mov
push
mov
xor
xor
cmp
sub
xor
aaa
cmp
inc
test
or
xchg
mov
shr
push
negb
fwait
scas
stc
and
mov
call
popa
cmp
push
push
mov
xchg
jl
sbb
push
cmp
xor
dec
cmpsb
lods
cmc
xchg
sti
or
cld
inc
in
gs
jbe
jecxz
pushf
incl
popf
inc
push
test
add
push
pop
cmp
notb
lcall
mov
jbe
jmp
popf
pop
clc
push
pop
sbb
xor
cmp
subb
adc
push
dec
sub
leave
jg
jnp
sbb
mov
sar
xchg
das
jbe
jmp
cs
ljmp
stos
inc
push
pop
cli
adc
scas
dec
outsb
adc
inc
xchg
movsl
xchg
dec
mov
sbb
pop
es
movsl
jno
mov
aad
xchg
sub
add
and
push
scas
push
dec
cmp
add
fbstp
dec
jg
pop
xor
pop
arpl
fimull
out
mov
sbb
cmp
push
sub
pop
sub
push
movsl
pusha
std
sub
rorb
mov
icebp
or
je
xchg
cwtl
lods
mov
sarl
or
in
in
insl
mov
mov
fimuls
es
adc
std
xlat
sub
mov
sbb
mov
lahf
addl
sahf
scas
push
pop
xchg
je
or
and
mov
vpsllq
ret
inc
subl
orb
repnz
int
pop
sub
mov
push
ljmp
xchg
lock
sub
lret
into
xchg
test
and
das
aam
push
je
lret
push
nop
mov
inc
sbb
out
mov
add
adc
push
add
fwait
testl
aaa
in
aaa
aaa
mov
out
mov
icebp
mov
lock
ja
xor
xorl
xor
rcrl
xchg
cmp
pop
mov
cmp
push
loope
outsl
sub
xchg
jge
in
lahf
mov
sub
inc
dec
push
mov
inc
sub
mov
pop
or
adc
xchg
mov
cltd
lret
cmpsl
aam
aam
fcoml
mov
sarl
jae
in
pop
mov
imul
adc
aad
std
or
inc
int
out
cmp
aaa
xchg
mov
adc
sbb
rcll
add
loope
cli
imul
movsl
aaa
loop
xlat
nop
enter
repz
mov
pop
fisubrl
xchg
mov
mov
inc
push
mov
xchg
sub
daa
stos
push
in
add
and
imul
out
mov
popa
pop
and
jg
aam
pop
nop
ljmp
sbb
pop
jne
jmp
cmp
inc
sub
sbb
bound
mov
lret
xchg
xor
xlat
pop
jmp
or
or
sahf
cmpsb
adc
xchg
sub
xor
mov
out
push
cli
mov
js,pn
cli
jno
ss
mov
dec
sub
add
mov
outsb
iret
pop
jns
cs
xorl
ljmp
adc
sub
xchg
stc
dec
ds
call
push
aam
hlt
xchg
push
jp
sbb
lock
and
jge
mov
cmpsl
add
mov
inc
jnp
xor
xor
pop
and
lea
rcrl
xchg
lret
sub
sbb
xchg
push
aam
jl
movsb
push
inc
rorl
pop
cmp
jge
mov
iret
ljmp
movsl
fstl
push
adc
inc
test
fs
fistpll
or
push
mov
cli
pop
pushf
add
sub
pop
add
test
negl
add
sbbb
add
jno
les
sub
ret
test
push
lods
lock
and
dec
jns
pop
xor
fdivrs
and
jmp
movsb
jl
xchg
xlat
inc
lods
jb
cld
or
dec
mov
outsb
mov
adcb
arpl
insl
arpl
xor
stos
cld
mov
cli
sbb
cmp
shll
xor
aaa
test
push
js
fldenv
lcall
lret
push
inc
lret
xchg
lods
jle
pop
std
jmp
in
cmp
inc
test
adc
test
mov
repnz
mov
jno
loopne
dec
mov
rcrl
shlb
dec
cmp
sub
imul
cli
imul
lock
je
mov
test
adc
add
dec
stos
scas
mov
sbb
xchg
lcall
iret
xlat
dec
cld
cmp
push
adc
mov
mov
scas
or
pop
lds
push
and
nop
mov
xchg
mov
icebp
sbb
daa
inc
les
insb
bts
xchg
fwait
add
add
cwtl
sbb
lods
cmpsl
xchg
xchg
adc
push
fnsave
pop
mov
mov
loope
jmp
inc
int
jb
and
add
add
mov
mulps
or
mov
ror
push
xor
into
add
xor
lods
ss
push
pop
xchg
inc
pop
fdivl
clc
ror
fadds
inc
cmp
stc
cmp
mov
adc
mov
movsb
out
adc
xchg
mov
inc
push
jg
scas
aaa
and
ret
stos
xchg
cli
xchg
add
jmp
xchg
or
nop
dec
enter
sahf
dec
loopne
nop
mull
loop
test
xor
shlb
ret
icebp
mov
dec
shrb
outsl
clc
outsl
cltd
in
sti
gs
sbb
sub
icebp
lds
adc
and
push
data16
adc
daa
push
cmc
sbb
insb
adcl
imul
xor
loop
call
fwait
inc
mov
sub
mov
fsubs
dec
push
cmp
push
sahf
loope
lret
jg
rcrl
or
mov
lret
mov
pop
and
sbb
cld
and
sub
cmp
fcoms
or
xorb
push
pop
out
xor
mov
mov
fmull
sbbl
fsubrl
popf
sub
sbb
lret
cli
sar
sbb
lahf
and
sbb
mov
fstpl
xchg
push
push
pop
out
or
xchg
lds
mov
cmp
inc
aaa
inc
add
loope
test
loopne
xor
cmp
or
test
and
sarb
faddl
lds
sbb
dec
adc
aaa
mov
xchg
ret
xchg
test
mov
push
addl
or
jg
cli
in
rcrl
not
rcrl
adc
mov
imul
comiss
adc
push
cwtl
popa
add
cld
stc
and
xchg
ds
dec
push
stc
xchg
sbb
loopne
pop
outsb
or
adc
stos
cmpsl
icebp
push
dec
pop
in
mov
sub
xor
les
repz
aam
rolb
es
adc
loopne
fisubrs
fucomip
in
inc
ret
dec
push
jmp
add
adc
fcmovbe
cmp
sbb
xchg
shl
dec
sahf
sub
fimull
xor
sbb
add
push
das
roll
add
and
cmpsb
mov
inc
jns
ficoms
loope
jbe
adc
adc
dec
loop
xor
das
outsl
das
pop
sub
push
jnp
loope
push
jmp
and
into
inc
dec
add
add
imul
cmp
mov
int3
sahf
loop
push
jge
shlb
jo
sbb
mov
adc
fdivrs
or
cli
pop
inc
pushf
pop
or
rol
lret
loopne
mov
jg
loopne
jecxz
sti
aaa
popf
pop
adc
cld
mov
add
sub
test
fmulp
inc
inc
push
mov
xchg
sahf
mov
push
movsb
xor
or
xchg
loope
iret
sbb
adc
mov
mov
or
in
push
pop
sub
shr
or
add
adc
in
loopne
mov
add
outsl
dec
mov
cld
sarb
or
pop
xchg
cld
shll
sub
pusha
push
fidivrl
lahf
dec
dec
cli
jno
xchg
or
or
inc
jns
mov
aam
sub
xor
pop
sub
loopne
add
pop
lahf
xchg
ss
jle
lahf
or
mov
outsl
cmp
mov
rol
adc
sahf
push
dec
xchg
outsl
and
pushf
push
cmpsb
pop
jb
lds
or
ret
dec
dec
xor
idivl
out
and
adc
fstpl
enter
jl
lret
push
scas
fsubrl
or
mov
aam
fs
mov
mov
int
xor
sahf
jmp
mov
push
into
sub
sbb
push
arpl
xchg
add
mov
jb
out
lcall
dec
and
push
je
iret
inc
mov
lcall
pop
icebp
sub
repnz
sub
jmp
rcr
mov
sbb
mov
cmp
stos
push
push
pop
ja
dec
cli
das
mov
repnz
mov
das
push
adc
inc
inc
clc
shll
xchg
dec
lock
cmp
sub
mov
add
and
jl
push
sub
mov
popa
pusha
dec
xor
out
jae
pop
js
sub
cmp
and
cmp
ja
mov
inc
in
push
daa
jne
mov
out
push
mov
fldenv
dec
dec
pop
jle
ds
push
daa
cmp
jo
or
out
out
aas
imul
dec
enter
push
add
jno
or
aaa
mov
ja
call
push
dec
cwtl
lahf
inc
nop
inc
jl
jns
js
cwtl
xchg
lock
ficomps
push
pop
xor
sbbl
pop
mov
xchg
ljmp
nop
or
test
mov
notl
push
sub
rcrl
cmp
in
lahf
fists
jb
in
ret
sbb
call
sbb
and
loope
test
push
int
sti
or
jnp
shrb
fmuls
cmp
insb
sbb
cmpsl
ficoml
mov
jle
pop
out
dec
sarb
enter
pop
scas
sbb
andb
int
pop
jno
ds
sub
clc
jg
jno
push
je
stos
lods
mov
cwtl
mov
jmp
pop
mov
scas
mov
rol
cmp
stc
mov
xchg
in
inc
or
xor
sbb
inc
stc
adc
fimuls
imul
ret
mulb
inc
jnp
inc
popf
sti
out
stos
cld
sub
push
inc
in
js
add
arpl
sub
imul
lds
pop
mov
mov
dec
mov
xor
into
pop
jmp
dec
sub
sti
pop
into
es
inc
xlat
pop
mov
mov
jmp
mov
repz
icebp
subl
and
pushf
xchg
push
mov
pop
xor
sub
fistl
cli
das
notl
das
movsl
ja
loope
les
sbb
cmp
dec
and
jl
inc
push
and
dec
out
lret
push
mov
jle
jle
push
pop
imul
imull
ret
in
loopne
jmp
jmp
aas
in
sbb
insl
cmp
push
andb
push
in
cld
jo
andl
xchg
push
lret
mov
jle
or
stc
cltd
lods
je
repnz
inc
push
pushf
push
mov
mov
mov
pop
mov
inc
aas
test
imul
in
clc
shr
mov
dec
mov
popf
dec
gs
jp
xchg
negl
sub
aam
les
cmpsb
cmc
lahf
pusha
sarb
testb
push
aas
scas
push
lea
sub
dec
mov
inc
sahf
imul
add
stos
das
push
movsl
mov
test
in
sbb
popf
hlt
jbe
mov
sbb
sub
inc
roll
mov
fmulp
mov
cmp
movsl
fldt
leave
push
xor
sub
ljmp
mov
in
mov
xor
sbb
xor
mov
rcll
mov
in
adc
mov
or
jns
cld
dec
cwtl
scas
call
jo
cltd
cltd
jg
fsts
jbe
adc
scas
mov
sbb
xor
mov
xchg
lods
cmp
cltd
lods
mov
cmp
shl
daa
mov
xchg
in
mov
cmp
cmpsl
pusha
lock
inc
xchg
cmp
lea
cmp
pusha
ja
jbe
cs
jno
nop
roll
mov
mov
imul
mov
xlat
push
cmp
mov
imul
sub
mov
sbb
adc
popf
hlt
inc
push
adc
int
and
add
test
shl
add
cmc
test
add
loope
mov
dec
movl
jns
mov
mov
std
push
xchg
repnz
call
es
adc
and
outsb
xchg
push
mov
rorb
lret
aad
sahf
aas
mov
jp
mov
outsl
test
lds
cmp
or
loopne
push
xchg
jo
and
arpl
jns
shrl
xlat
mov
icebp
out
ja
push
sub
in
test
fwait
aaa
out
xor
inc
mov
aas
shlb
push
gs
lret
cmp
push
imul
les
add
cmp
scas
loope
adc
xor
arpl
in
mov
icebp
and
mov
inc
mov
sbb
sbb
outsl
fnstenv
mov
xchg
mov
add
mov
inc
popa
or
mov
sub
or
cmp
mov
adc
xor
cmp
ret
push
lods
sub
inc
scas
mov
dec
mov
ljmp
xchg
out
xchg
sub
lcall
fs
add
add
daa
mov
cmpsb
push
xor
ficompl
push
test
pusha
inc
dec
cltd
mov
jo
ds
movsb
lea
idiv
push
sub
nop
inc
inc
mov
jmp
mov
cmovae
call
push
popf
mov
test
lea
les
cli
fisttps
push
cmp
dec
ljmp
out
jl
js
in
test
cmpsl
mov
dec
aad
pop
pop
xchg
push
xor
adc
addr16
ret
jno
xchg
jo
sarb
and
jno
hlt
push
sub
mov
loop
and
and
adc
es
icebp
popaw
inc
insl
mov
sbb
mov
add
inc
mov
int
adc
scas
lea
scas
mov
lds
xchg
pop
jg
in
ret
das
jg
jg
xchg
jae
arpl
ljmp
outsl
xchg
std
cmp
cwtl
cmp
fidivrl
dec
loopne
mov
and
or
lods
test
fistl
mulb
push
repnz
pop
add
pop
int
mov
mov
pop
sbb
dec
mov
jne
adc
mov
or
pop
mov
outsl
fdivrl
mov
xorb
movsl
mov
movsl
fisttpl
and
sub
stc
bound
xchg
sbb
loop
xchg
inc
xchg
popa
mov
rcrl
dec
push
gs
rcr
scas
mov
adc
cli
cmc
test
xchg
pop
pop
outsb
jae
dec
orb
pop
orl
xor
ljmp
into
push
cli
adc
mov
in
cmp
push
add
pop
test
add
and
push
neg
pop
ss
mov
add
les
aam
loopne
inc
fwait
add
xchg
and
pop
inc
cmpsb
add
inc
lcall
cmpsb
ja
rep
stos
jns
fsubrl
add
out
mov
cld
addr16
cmp
jo
cmp
jb
inc
int3
jmp
mov
test
push
mov
into
icebp
test
das
out
fdivrl
or
xchg
inc
jle
insl
xor
push
bnd
rcll
xorb
in
lods
or
adc
unpckhps
repz
cmpsl
cmp
add
shrb
scas
mov
add
jne
inc
nop
or
lcall
lea
dec
in
xchg
ficompl
mov
adc
ret
push
pop
jns
and
and
lahf
shlb
outsb
add
lods
xchg
lea
sub
jns
jo
dec
cmp
stc
xchg
andl
dec
ja
inc
mov
adc
loope
mov
jo
sub
or
jg
loopne
cli
cld
pop
mov
add
sahf
movsl
fdivrs
and
lds
popf
dec
je
and
dec
push
xchg
xchg
jmp
jb
sub
aad
orb
pop
dec
out
lcall
push
push
push
xlat
or
add
loopne
xor
xchg
mov
mov
out
ds
xor
std
adc
lock
nop
in
lcall
dec
or
cmpsb
push
xchg
sbb
mov
pop
xor
cwtl
pop
ss
cmp
test
pop
mov
sub
mov
lret
pop
insb
push
dec
jbe
test
lret
mov
xchg
dec
cs
in
insb
pop
sbb
dec
jne
dec
mov
pop
jb
xor
movsb
adc
data16
adc
sub
pop
enter
scas
ljmp
and
mov
inc
dec
pusha
adc
or
jg
and
push
cli
inc
out
movsl
mov
mov
push
aaa
fsts
femms
push
rol
dec
or
pop
stos
sub
scas
cwtl
mov
mov
and
pusha
push
sub
fcoms
mov
in
add
mov
or
cmp
jl
icebp
jne
cwtl
pop
hlt
xor
jg
xorb
imul
jge
filds
mov
xchg
push
bnd
sbb
push
jo
mov
cmpl
test
xor
jo
and
imul
lods
mov
dec
insl
pop
jno
dec
addb
test
cmp
imul
arpl
mov
mov
jge
adc
scas
daa
dec
iret
lods
pop
test
xor
push
xlat
ss
mov
mov
jmp
adc
jl
test
scas
leave
cmp
sub
jle
aam
sbb
imul
sbb
pop
xor
jb
mov
inc
xchg
xchg
roll
dec
dec
dec
and
into
arpl
lods
or
jbe
pop
fcomps
mov
or
xor
sub
jo
push
dec
lds
cmp
inc
int3
mov
jle
sahf
sbb
push
add
inc
jb
adc
lea
lahf
add
sub
xchg
sub
add
mov
xchg
mov
popa
out
testb
fidivrl
pushf
mov
dec
inc
loopne
add
xor
push
xor
out
ret
in
fisubs
fs
push
and
sbb
fs
hlt
adc
aaa
addr16
cmp
mov
mov
push
cmpsb
imul
sbb
hlt
xchg
push
pop
pusha
inc
fcomps
add
pushf
cltd
mov
popf
add
dec
out
mov
fcompl
jle
int
sbb
pop
iret
jecxz
mov
sbb
jbe
mov
push
leave
push
bound
xchg
jp
cli
mov
mov
imul
xchg
mov
dec
inc
push
into
push
mov
lods
popf
pop
and
inc
je
xor
fsubl
jnp
cltd
xchg
cmp
mov
push
out
sbb
fwait
pop
lods
ret
and
cmp
lods
enter
add
jns
sub
xchg
dec
mov
pop
ds
ret
movsb
mov
cmpsb
scas
shlb
lods
inc
xor
xchg
arpl
sub
jp
fwait
mov
ret
jns
fidivs
adc
xchg
shll
push
stos
ud1
arpl
in
loopne
mov
loop
mov
cmpsl
xchg
mov
push
stc
out
rcrb
xchg
les
adc
je
cmp
push
mov
adc
sarb
loopne
adc
ljmp
lods
pop
lret
nop
mov
data16
cld
insl
mov
sti
mov
enter
fwait
mov
addl
jmp
iret
or
insl
sub
hlt
mov
inc
mov
and
and
or
enter
icebp
jns
xor
loopne
movl
mov
ficomps
lock
testl
inc
jne
sbb
lcall
ffreep
mov
insb
movsl
sbb
andl
repz
push
add
and
in
sbb
mov
sub
iret
sahf
in
xor
add
lret
jnp
mov
lds
das
fsubs
sub
push
dec
sahf
ss
mov
cmp
loope
loopne
repz
mov
sub
lock
cmp
inc
cmp
mov
jg
sbb
mov
xor
jg
test
fistpl
jnp
xor
mov
roll
push
cli
int3
out
sub
pop
ret
jge
mov
cmp
pusha
inc
add
lods
cmp
lods
mov
test
dec
pusha
mov
mov
test
xchg
sub
add
push
into
fs
call
adc
or
jle
push
push
fadds
addl
push
pop
pop
sub
jae
imul
repz
scas
mov
push
push
loopne
lret
jns
arpl
cmp
leave
and
or
lret
rolb
or
testb
dec
fsubl
mov
std
jecxz
pop
or
mov
mov
test
lahf
rcr
mov
cmpsb
ret
or
add
icebp
inc
sahf
lds
pop
js
xchg
scas
lahf
pop
adc
jp
in
push
jmp
cmpsl
negl
loope
and
int3
icebp
push
je
int3
daa
fs
push
fwait
stc
push
sub
sti
dec
mov
xchg
add
mov
jg
xchg
push
mov
sub
pop
fidivrs
and
inc
push
inc
sbbb
ret
inc
push
pop
addb
sbb
ja
cmp
push
gs
call
jne
lods
xor
xchg
push
loop
fsubrl
cltd
xor
mov
push
inc
icebp
mov
dec
test
and
cmp
fwait
movsb
mov
xchg
rol
xor
sbb
pop
pop
sarl
stos
lret
or
outsb
xor
ss
add
dec
aaa
lcall
add
int3
push
xchg
xlat
adc
fbld
movsl
movsb
xchg
or
in
mov
or
arpl
jecxz
les
add
movsb
aam
push
and
test
inc
or
jbe
rolb
sub
rorb
or
mov
aad
pop
mov
cs
mov
ljmp
lret
cmp
rclb
push
iret
imul
pop
cli
cmp
gs
sbb
fsubs
in
and
cmp
cwtl
or
xchg
jmp
dec
xchg
push
jae
adc
lock
cmpsb
adc
insl
aad
add
lods
scas
add
icebp
cmp
xchg
sbb
daa
scas
inc
lahf
mov
cmp
adc
or
mov
cmp
call
rcr
and
out
roll
ljmp
or
inc
cmp
add
cmpsb
test
dec
sub
pop
ss
lds
test
mov
add
mov
push
idivl
xchg
popl
mov
shll
pop
mov
jo
out
loop
cmc
mov
stos
jae
scas
or
ret
sahf
test
cmpsb
jle
mov
or
jne
jge
push
std
add
loopne
sbb
pop
aas
jg
mov
pusha
ud2
jg
mov
or
lods
leave
jl
fistl
das
push
sbb
imulb
and
mov
mov
inc
xchg
and
dec
lret
adc
pushf
jge
push
mov
mov
imul
sbb
fwait
sbb
xor
adc
xlat
addb
mov
stc
pop
sbb
sub
adc
add
outsb
adc
cli
mov
jp
shrb
xchg
mov
and
inc
aad
pop
gs
sbb
test
jp
cmp
repz
stc
cltd
fs
push
fnsave
cmp
out
insl
das
les
stos
inc
ret
flds
in
jg
add
test
enter
cltd
mov
mov
int
and
mov
addr16
push
scas
xchg
call
sub
fwait
adc
and
hlt
push
jp
in
lds
pop
push
add
in
popa
mov
cmp
shlb
push
jns
adc
out
imul
jo
add
dec
xchg
out
scas
mov
aaa
add
into
cmp
rorb
add
fcomps
out
cmp
insl
shl
cmpsb
in
mov
fldl
loopne
arpl
xor
cmovns
dec
add
mov
xor
sarl
gs
ret
fistpll
cmp
es
xor
outsl
enter
in
and
add
push
mov
lea
lea
mov
rcrl
ja
das
dec
int
fists
movsb
jecxz
mov
xchg
repz
out
xchg
sbbb
stc
fimuls
ja
movsb
push
push
and
mov
xorb
xlat
push
mov
repz
arpl
lret
sub
pop
std
xor
inc
insl
adc
mov
dec
jl
pop
pop
aas
xlat
jbe
dec
scas
mov
popa
rcll
and
adc
insb
jb
xchg
in
in
shrb
es
pusha
rorb
sbbl
mov
pop
andl
push
push
push
and
push
clc
pusha
lock
aam
lret
push
push
imul
daa
xor
loopne
xchg
je
aaa
ljmp
cltd
mov
pop
jne
js
cmpsb
pushf
loope
fistpl
push
mov
add
enter
push
loopne
arpl
daa
push
das
into
popl
cmc
inc
mov
lcall
add
cs
loop
sub
stc
cmp
add
mov
lcall
ret
and
dec
mov
imul
das
sahf
mov
aad
add
scas
lea
mov
in
inc
add
rorl
or
bswap
mov
adc
add
rcr
inc
sbb
data16
mov
movsl
repnz
sbb
in
out
push
cmpsb
xchg
daa
sbb
pop
and
das
push
cli
cwtl
pushf
mov
lea
in
and
inc
jb
pop
ds
shll
inc
aaa
aam
lret
inc
mov
stc
sti
inc
push
dec
dec
or
or
sarl
xor
dec
jne
imul
inc
lret
mov
cld
into
inc
andl
in
and
push
and
int
mov
or
mov
fldenv
out
jnp
and
mov
xor
clc
dec
pushl
aaa
fsubr
push
mov
jp
pop
pusha
fwait
push
sarl
mov
sub
mull
and
mov
in
push
popa
cs
enter
scas
xchg
mov
cltd
mov
xor
cmp
test
jns
lods
aaa
roll
inc
fneni(8087
inc
lcall
shlb
mov
mov
pop
add
sbb
push
cmpsl
test
stos
popf
mov
cmp
xchg
or
mov
push
scas
sub
add
fsubr
imul
sub
jne
sub
dec
push
imul
inc
ret
xchg
cmp
jmp
sub
in
xchg
adc
icebp
popf
add
adc
ret
jo
jmp
lcall
push
xlat
stos
test
xchg
inc
outsl
leave
dec
cli
lods
pop
in
jp
pop
xlat
imul
mov
mov
xchg
mov
add
push
mov
jl
gs
loopne
mov
push
pop
mov
testb
lcall
jae
aam
testl
mov
jbe
xchg
subl
inc
mov
arpl
sahf
push
jnp
loope
aam
nop
aaa
sub
add
mov
cli
dec
into
push
or
mov
sahf
jmp
idivl
sti
or
dec
lock
mov
push
or
out
imul
adc
loope
sti
repz
das
nop
sbb
and
pushf
pop
pop
pop
outsl
or
xchg
dec
mov
ja
stc
ljmp
or
rcl
and
and
jmp
pop
pop
adc
fnsave
cmp
bnd
std
and
fimuls
lds
test
jbe
nop
call
loope
jb
repz
loope
out
ficompl
mov
pushf
into
xchg
outsl
mov
pop
hlt
mov
cld
fcompl
mov
popa
inc
sbb
pop
jl
out
or
arpl
mov
dec
out
push
xchg
out
outsl
jbe
pop
mov
cmp
in
andl
mov
aas
sbb
dec
mov
xor
mov
cmp
lret
scas
or
add
adc
sahf
and
mov
mov
add
push
test
dec
outsb
in
shll
je
sub
add
inc
or
loop
lret
int3
ret
xchg
dec
test
lea
ja
xchg
pop
lock
aaa
imul
addr16
adc
add
test
cmp
mov
nop
fsubrl
lea
sub
fs
pop
cmp
test
cmp
or
lods
push
div
ret
orb
push
xchg
mov
pop
mov
xor
cmp
cs
dec
rcr
cmp
bound
mov
adc
addb
add
shl
inc
ret
mov
daa
jg
mov
adc
pop
leave
or
bound
mov
mov
incb
es
notb
mov
outsb
je
or
xor
sub
lock
xchg
jp
aas
adc
lods
insl
xor
push
mov
das
ret
inc
popa
pop
mov
ja
iret
jnp
fsub
std
xor
out
adc
call
sbb
add
fsubrs
xor
ss
mov
mov
push
mov
loopne
es
movsb
inc
outsl
dec
and
ljmp
icebp
imul
mov
nop
inc
outsl
lods
ret
inc
pop
cli
adc
pushf
lcall
fbstp
aad
xor
ss
insb
cmp
push
les
inc
adc
out
jae
mov
test
pushf
mov
jb
inc
push
jbe
insb
mov
shlb
jnp
xor
pop
test
in
roll
fwait
add
add
dec
cmc
shll
push
outsb
mov
mov
ja
push
jp
mov
notb
in
cmpsb
gs
xlat
aam
pusha
cmp
inc
lret
lods
jne
hlt
cmpsb
ret
add
mov
mov
or
shl
je
imul
mov
lock
sbb
push
int
rcrl
shll
jmp
stc
cmp
inc
mov
mov
aad
int
push
mov
mov
out
lods
lahf
sbb
jb
pop
jbe
cmp
mov
subl
or
jno
aam
pushaw
fstpl
out
xchg
push
incb
ret
in
out
aam
xchg
fdivs
cmp
xchg
das
sbb
imul
jmp
push
sub
push
cmp
add
out
call
das
test
sbb
int3
mov
add
es
cwtl
and
imul
pop
add
outsl
inc
shll
ret
shr
sub
lock
imul
push
xchg
loope
dec
ltr
xor
jbe
mov
dec
testl
mov
ss
popf
mov
mov
in
push
aas
mov
lahf
lock
rcr
pop
cmp
mov
push
mov
adc
clc
out
dec
cmp
jnp
nop
in
and
xchg
pop
mov
and
adc
xor
popa
inc
inc
mov
add
xor
xor
repnz
inc
xchg
stos
push
push
push
jg
push
push
mov
test
arpl
jb
test
inc
test
arpl
test
sbb
fsincos
pop
and
cmp
rcrl
fsts
push
cwtl
aaa
lock
imul
cmpsb
lret
arpl
fsubs
pop
sbb
icebp
subl
xorl
pushf
lret
mov
subl
out
sbb
mov
pop
push
subl
mov
iret
mov
cmp
pop
les
lahf
lods
jp
cwtl
ljmp
cmpsb
imul
xor
or
xchg
sub
lock
push
push
add
inc
fwait
push
adc
lahf
dec
xor
push
cld
leave
clc
xchg
mov
lret
jl
fisubrs
andl
jp
out
pop
inc
push
cwtl
and
and
sbb
pop
out
popf
push
es
data16
subl
pop
stos
mov
cmpsl
xchg
clc
jg
cmp
ret
fs
sub
xchg
xchg
sub
inc
fiaddl
clc
mov
cld
ret
out
orl
pop
pop
xor
testb
pushf
cld
nop
sub
lds
stc
ret
aam
dec
fisttpl
imul
es
insl
mov
aas
fnstenv
mov
or
lret
sub
mov
in
xchg
fs
addr16
sub
aam
ficompl
repnz
cltd
or
inc
movsb
inc
pop
je
shlb
or
outsb
mov
mov
loopne
dec
insl
fucomi
cmp
addr16
lret
and
movsb
push
iret
mov
adc
stos
inc
aad
mov
ret
mov
es
fistl
pop
cmpsl
cmp
sub
test
mov
int3
aam
jp,pn
xchg
mov
inc
xchg
lods
jb
mov
insl
xchg
iret
mov
xlat
jecxz
pop
push
dec
and
mov
jg
icebp
lock
fs
repz
lock
inc
or
jl
es
mov
xchg
xchg
or
aaa
xchg
mov
add
je
sbb
sub
das
jnp
imul
fidivrs
and
cmp
rclb
push
sti
jmp
mov
mov
push
imul
fmul
adc
mov
mov
mov
push
adc
jb
hlt
mov
xchg
push
xor
xchg
inc
ja
cmp
shll
add
scas
push
cmpsb
fidivrl
mov
imul
sub
test
sti
xchg
adc
arpl
ret
jns
je
subl
add
loope
cmp
loop
out
pop
cmpsb
fisttpl
test
fists
je
js
mov
push
inc
arpl
sbb
push
lahf
push
mov
jg
jge
std
dec
add
mov
xchg
loope
lds
pushf
sub
fstpt
jne
popa
cli
mulb
shr
push
cmp
push
js
inc
gs
mov
xor
adc
shll
fldenv
ret
cld
mov
rclb
mov
mov
dec
insb
mov
leave
sub
cmp
shl
push
jp
cmp
fisubl
push
lods
xor
test
xchg
xchg
jne
das
mov
sub
mov
arpl
jbe
jle
sub
push
dec
push
lret
mov
or
sbb
xor
inc
sub
pop
sbb
inc
fcmovbe
xchg
jge
fs
xchg
out
push
inc
jo
sahf
aad
mov
add
sar
mov
or
inc
icebp
mov
loop
mov
js
aam
pop
dec
push
aas
roll
sbb
mov
sar
push
add
adc
icebp
jno
int3
push
xor
xchg
insl
fwait
outsl
lea
in
scas
dec
sub
mov
sub
ja
fnstenv
std
dec
sbb
or
test
xor
mov
out
sbb
jnp
inc
pop
dec
and
inc
icebp
cwtl
mov
test
dec
leave
mov
sub
and
xlat
inc
jmp
pop
or
sahf
mov
scas
dec
rcrb
mov
mov
mov
mov
push
icebp
inc
and
adc
sahf
dec
ror
inc
inc
ljmp
pop
fdivrl
sbb
mov
mov
data16
test
cmp
hlt
lret
cmp
add
test
and
icebp
mov
loopnew
sti
push
inc
cmp
push
inc
subl
push
mov
arpl
mov
cmpsl
jne
xchg
cmp
xchg
in
cmp
lcall
and
rclb
jg
shrl
mov
jne
repnz
push
sbb
test
lahf
lea
pop
and
cltd
sub
inc
fsub
cmpsl
cli
mov
inc
or
ret
xchg
jb
std
cmpsb
mov
ss
push
out
add
jae
jle
dec
mov
xchg
inc
shlb
inc
stos
mov
rclb
out
sub
inc
rorl
lods
sub
decl
ss
or
or
add
inc
mov
pop
sbb
adc
sahf
mov
sti
inc
add
xchg
add
sub
fwait
sahf
add
inc
popf
pop
popa
add
scas
cmp
enter
push
jbe
push
out
imul
cld
icebp
sub
jge
insl
mov
arpl
push
sbb
cs
add
popf
push
or
pusha
jns
clc
dec
inc
stos
data16
out
xchg
ret
add
mov
repnz
push
dec
ljmp
ljmp
jmp
sub
rorb
inc
lcall
inc
or
cmpsb
jg
nop
sti
out
and
mov
dec
shl
mov
stc
dec
pop
xchg
ds
jno
outsb
and
mov
adcb
pusha
je
pop
inc
fs
arpl
shll
mov
push
shlb
lret
scas
pusha
scas
sbb
cmp
cmp
cltd
xchg
sub
out
jmp
inc
or
dec
aaa
pop
cmp
out
inc
adc
pop
movsb
jns
pusha
add
cmp
lcall
xchg
jnp
sub
sbb
adc
mov
mov
sub
push
dec
mov
out
xor
cld
xor
adc
push
lods
dec
or
xchg
mov
lret
bound
pop
jno
or
roll
add
aas
adc
cs
lods
in
lret
push
inc
rcll
loop
inc
cmpsl
out
sbb
jb
and
movsb
xor
in
jne
loopne
and
jno
mov
adc
sbb
jl
mov
cmp
or
mov
sahf
arpl
cmp
aas
add
pushf
aam
insb
aam
push
push
jmp
sub
cmp
mov
xchg
inc
sub
push
mov
mov
inc
imul
daa
rcrb
xor
hlt
fs
repz
pop
or
cmp
and
dec
stc
push
cli
pop
add
loop
vpsubusw
loopne
push
mov
fists
push
rcl
xchg
pop
fstpt
stos
icebp
mov
aas
cmp
bound
rolb
dec
arpl
repz
push
stos
mov
pop
fdivl
xor
or
or
rcrl
mov
jg
les
fisubs
adc
cmp
xchg
daa
jp
mov
xor
add
jge
jp
in
nop
adc
lcall
adc
mov
inc
ret
sub
inc
int
stos
clc
sbb
inc
cmpsl
mov
push
sbb
ret
int3
lcall
scas
mov
jl
inc
out
test
movsb
imul
lea
mov
xchg
push
mov
xchg
std
in
sub
push
fsubrl
and
cmpsb
dec
jmp
into
add
dec
add
pop
xor
cmp
jmp
push
cmpb
cwtl
filds
add
jg
out
inc
adc
bound
jnp
xchg
sbb
mov
xchg
es
ror
sbb
dec
push
pop
or
xor
sub
inc
add
lret
jl
out
jne
mov
fstpt
pushf
dec
push
jae
clc
and
outsl
shlb
inc
mov
loopne
push
dec
sub
xchg
jno
sbb
loopne
jge
adc
dec
mov
ss
sub
stos
pop
dec
fisubrs
adcl
xor
mov
xor
ficoml
mov
sahf
push
lcall
mov
out
aad
cmp
aas
ds
sti
imul
pop
mov
fildl
loope
xchg
ja
test
jge
jae
rorl
push
pop
mov
and
sbb
sub
push
aas
std
jo
sub
and
iret
mov
leave
push
out
dec
jne
jo
xor
jp
cmpl
or
scas
dec
ret
inc
jg
cmp
ja
ja
leave
out
jnp
icebp
add
push
dec
adc
rolb
push
aas
mov
xchg
xor
mov
cmpsl
sub
mov
in
test
jl
roll
sbb
dec
js
movsb
push
aas
xchg
mov
in
repnz
mov
inc
push
cmp
pop
scas
shrl
sbb
mov
add
jl
scas
add
imull
mov
sbb
pop
out
or
mov
popf
outsb
push
fs
in
test
mov
adc
ror
movsb
jl
jnp
cltd
rcl
ret
xor
xchg
inc
mov
addr16
xchg
ja
std
cmpsl
faddl
cmpsb
mov
scas
jg
dec
into
lahf
aam
xor
sbb
fiaddl
sub
xchg
xchg
imul
cmp
das
fmull
xchg
cmp
adc
mov
int
in
ja
push
add
and
mov
xor
cmc
mov
push
xchg
cmp
insb
rolb
push
jle
roll
and
cmpsl
insb
aas
hlt
jo
jns
push
xlat
mov
movsl
pushf
in
lods
arpl
xchg
fisttpl
mov
mov
hlt
out
xchg
add
sub
outsb
cmpsb
push
scas
orl
into
push
jbe
pop
mov
add
mov
aad
das
aas
lock
movsb
ds
or
rorl
insb
mov
adc
adc
pop
mov
inc
mov
test
xchg
sub
add
jp
or
aaa
pop
fidivrl
mov
dec
push
cs
mov
fcomps
push
bound
push
xor
fisubl
adc
fdivrp
scas
outsl
jbe
inc
shrl
add
mov
inc
xchg
bound
jno
and
jecxz
mov
cmpsb
arpl
xor
mov
test
fsts
and
movsl
jecxz
sbb
pop
inc
add
nop
test
shlb
into
nop
lea
push
cmc
push
adc
or
cmp
fdiv
or
jl
fnsave
das
adc
adc
ljmp
leave
and
push
movsb
push
inc
popa
repz
notl
icebp
jecxz
addb
pminub
xchg
pop
scas
push
pop
lcall
push
dec
or
cs
xchg
movsb
adc
test
cwtl
push
or
int
sbb
xchg
inc
jno
sub
aam
gs
mov
push
sbb
add
cwtl
pop
clc
mov
sahf
add
int3
jge
mov
leave
mov
leave
leave
in
add
xor
dec
sbb
pop
mov
or
adcl
xor
sbb
or
repz
jge
mov
mov
or
lahf
movsl
xor
mov
adc
lea
xchg
xor
fidivl
lods
push
inc
outsb
dec
in
dec
imul
testb
and
inc
loop
pushf
adc
pop
aam
mov
mov
jecxz
in
xor
dec
xor
xchg
xor
clc
fcmovnbe
xor
ret
scas
lea
pop
jbe
call
iret
mov
add
mov
std
dec
in
jno
xchg
add
test
sbb
mov
mov
lea
movsb
fsub
iret
adc
sarl
arpl
push
add
pop
repnz
enter
sahf
andb
jbe
or
mov
jg
mov
mov
sbb
xor
xchg
or
cli
inc
push
mov
daa
and
movb
pop
push
loope
jae
cmc
sub
loop
lods
fisubl
repz
xor
out
adc
add
stos
outsl
xor
sub
mov
cwtl
xchg
push
movsb
xor
stos
mov
lahf
in
pop
fcmove
stos
std
adc
addr16
icebp
loop
fadd
push
lods
add
dec
cmpsl
out
iret
sarl
sbb
push
scas
jo
mov
int3
sbb
loope
test
mull
imul
mov
aad
mov
add
sbb
inc
cmp
pusha
les
dec
aaa
add
pop
and
lea
repnz
dec
inc
dec
ret
lahf
div
pop
push
clc
stos
aaa
rcrl
out
cmp
jle
mov
mov
cmp
push
imul
jbe
jle
adc
inc
lods
or
sbbb
mov
arpl
hlt
je
arpl
aas
or
adc
mov
mov
mov
outsb
or
cmp
sbb
mov
insb
ret
and
mov
push
sub
mov
pop
scas
scas
push
cmp
gs
fisubrl
cs
mov
scas
sarl
dec
add
ja
lods
outsl
mov
jle
test
aad
loope
shrl
and
jns
lea
cld
add
mov
out
mov
bound
add
push
mov
push
add
cmp
repz
arpl
in
mov
add
lret
dec
adc
xor
dec
bound
dec
or
mov
jns
cwtl
dec
adc
aas
jb
jmp
mov
mov
mov
and
cs
outsb
rorl
mov
into
inc
dec
mov
repz
xchg
bound
dec
das
dec
cmp
mov
adc
lret
mov
clc
cmp
andl
adc
out
scas
mov
mov
and
loope
jae
sub
add
ss
fstp
repnz
add
mov
sub
bound
or
jmp
test
pusha
sub
imul
xchg
xlat
sbb
sbb
call
roll
test
stos
leave
mov
call
mov
lods
cltd
mov
cltd
mov
dec
loopne
call
xchg
divb
in
xchg
gs
mov
inc
jns
inc
sti
fwait
jp
lret
aas
ret
je
mov
ljmp
ds
out
or
inc
shrl
ja
inc
pop
inc
and
jbe
cmp
cmp
push
push
repz
popf
aas
into
lret
sahf
sub
dec
add
and
ltr
xchg
cmp
fidivrl
int
notl
in
add
in
ss
cltd
add
mov
adc
loopne
stc
cmpxchg
add
dec
jo
mov
loop
xchg
ret
jg
sbb
mov
inc
sub
outsl
hlt
adc
jnp
inc
scas
notb
xor
je
adc
fisubl
sti
or
cmp
pop
jmp
pop
fsubrl
pop
cmpsl
add
sbb
and
ret
in
cwtl
inc
movl
test
mov
daa
xchg
sbb
adc
push
cmp
adc
pusha
cld
adc
push
icebp
pop
cmc
mov
adc
or
je
adc
cli
mov
sub
add
sbb
out
aaa
sbb
int3
subps
adc
aaa
cmp
xlat
jg
xlat
pop
xor
cmpl
push
lea
dec
sub
bound
mov
sbb
ret
mov
sub
pusha
call
mov
stos
push
push
xorb
test
stos
jecxz
mov
enter
pop
xchg
or
nop
xchg
mov
in
push
sbb
sub
mov
out
or
test
movsb
ficompl
jp
loopne
out
les
test
sahf
std
mov
xor
xchg
jg
insb
sbb
cmpsb
adc
push
nop
lret
add
clc
dec
aaa
xor
add
push
mov
divl
or
or
sti
icebp
pop
fdivr
mov
xor
push
mov
jbe
or
pop
xor
dec
push
lcall
mov
xchg
leave
clc
jg
lods
xor
rorb
gs
add
lods
fcmovnbe
add
pop
cmpsb
mov
les
arpl
xor
lock
lods
test
xlat
repnz
adc
jne
adc
std
fstpt
mov
dec
cli
mov
push
push
bound
movsb
jp
repnz
xchg
subl
movlps
or
cmpsb
in
ljmp
dec
mov
sub
outsb
or
and
dec
inc
jno
inc
loopne
arpl
sub
mov
dec
ret
nop
lret
xchg
repz
push
pop
add
mov
adc
add
out
out
push
scas
dec
enter
mov
jmp
xchg
cmpsl
and
sbb
mov
in
xchg
mov
xchg
in
inc
sahf
xor
sub
bound
inc
mov
sbbl
shll
mov
int
test
xrelease
dec
adc
push
pop
loope
pop
stc
pusha
pusha
addb
sub
push
je
xor
add
cmp
std
stos
cmp
into
pop
mov
jno
jae
mov
jmp
cwtl
hlt
ret
cmp
lods
adc
fwait
je
mov
push
inc
daa
push
in
enter
sub
flds
js
sub
cltd
lea
cvtdq2ps
fsubl
push
mov
push
xchg
xor
jno
cmp
lret
and
cmp
jbe
jmp
add
and
pop
sbb
sub
stos
push
push
jmp
pop
movsb
rcrl
inc
lahf
cmp
mov
cmp
mov
das
pop
or
outsl
dec
adc
mov
clc
xchg
out
mov
out
jle
cld
push
or
in
scas
cwtl
dec
dec
add
xchg
out
hlt
jmp
imul
lock
daa
inc
xor
repnz
pop
stc
arpl
outsl
mov
mov
add
sbb
push
mov
nop
and
imul
dec
ficoms
adc
aam
pop
mov
mov
xchg
sbb
inc
jp
xchg
ds
out
ror
mov
test
jnp
popa
mov
cmp
enter
cmp
enter
mov
scas
movsl
pop
js
stc
out
xchg
stc
pop
ficomps
push
lret
std
mov
addl
fwait
xor
mov
fisubrl
icebp
cmpsl
xchg
iret
pop
repz
mov
mov
ss
mov
dec
cmp
jmp
call
add
pop
mov
add
std
push
incb
xchg
cmp
cmp
adc
jno
cmpsl
sbb
cwtl
lcall
pop
les
jg
jecxz
xor
or
dec
ret
psubusb
push
jg
cltd
push
adc
fistl
xor
xchg
push
xchg
adc
mov
pop
mov
scas
popf
in
in
leave
xchg
scas
cwtl
inc
add
arpl
mov
push
jno
sbb
add
adc
push
adc
pop
jno
ficoml
sub
xor
or
out
cmp
cmp
push
xchg
fists
or
inc
enter
iret
loope
pop
mov
loopne
popa
int
push
add
adc
subb
or
or
loopne
sub
aam
pusha
outsb
sub
cmp
jecxz
stos
fsubrs
or
lods
xlat
in
inc
cmp
fidivl
dec
adc
leave
sbb
jl
movsl
pop
or
addr16
jns
ret
cwtl
inc
xchg
xor
loopne
and
out
loope
ljmp
lock
xor
push
ds
adc
ljmp
add
dec
ja
and
jnp
dec
sbb
insb
sti
mov
cwtl
xchg
push
inc
mov
outsl
dec
or
loopne
pop
mov
mov
xchg
rol
jmp
out
add
cs
enter
xor
in
or
gs
sub
mov
sbbl
mov
adc
nop
pop
repz
jle
jnp
shr
push
orb
push
dec
xchg
imul
jo
outsb
int
fisttpll
aam
lahf
cmpsl
add
or
call
adc
sub
bound
jp
cmc
xor
and
call
out
inc
xor
xchg
nop
enter
stos
or
ljmp
into
pop
lods
mov
jg
ret
into
xchg
or
xchg
test
adc
mov
xor
fimuls
or
xlat
in
sbb
xor
cmpsb
xor
xor
sbb
xchg
je
sahf
sti
dec
out
sub
sbb
xor
xchg
js
stc
xor
mov
stos
lods
or
xor
test
out
inc
xor
jp
cmp
inc
sahf
dec
cli
and
and
jns
xchg
xor
push
jmp
dec
or
shl
add
pop
insl
dec
out
das
add
xlat
pop
in
mov
mov
fidivrl
cltd
sub
fnsave
addr16
jecxz
mov
push
add
mov
fisubrs
push
push
push
or
jl
mov
fucom
lahf
lods
sub
shlb
adc
push
mov
or
mov
dec
insb
pop
dec
pop
sbb
jge
scas
adc
ljmp
mov
mov
sbb
clc
or
je
push
adc
adc
push
cld
adc
inc
imul
pop
popa
mov
fisttpl
dec
popa
adc
or
xchg
psllw
rcrl
insl
imul
add
adc
jo
divl
pop
jmp
mov
push
pop
outsb
xlat
inc
rolb
rclb
or
xchg
lods
cmp
clc
jo
and
clts
xor
push
jne
sub
mov
dec
sbb
or
int
inc
lock
outsl
push
popf
subl
sub
push
pop
outsb
xor
loope
aaa
inc
pop
xor
pop
lds
popa
insb
inc
lds
add
fists
jg
push
push
imul
add
mov
lock
outsb
xchg
fdivs
rorl
sub
shl
cmpsl
xchg
pop
add
lea
cmpsb
push
push
cmp
gs
xchg
std
cld
aaa
pop
mov
out
jmp
push
jge
pushaw
cwtl
pop
aad
push
inc
cwtl
aam
aaa
and
nop
jle
out
dec
xor
stc
rol
xor
mov
cmp
add
jle
das
dec
xor
cmp
sub
and
pop
pop
js
or
push
jg
adcl
xor
out
cmp
adc
lcall
and
in
jnp
cmp
mov
inc
js
sbb
mov
icebp
mov
xchg
cmc
pop
push
mulb
rorl
mov
shlb
and
pop
inc
adcl
out
xlat
mov
ss
movsl
fsts
mov
fistps
sahf
xor
xchg
jno
test
ficoms
mov
add
pusha
movsl
movsb
push
loope,pn
pop
dec
iret
into
out
fsubrp
and
mov
aam
lcall
mov
add
sub
insl
shlb
scas
xchg
ret
inc
add
mov
pop
add
lmsw
push
stos
rcll
pop
test
test
jp
imul
outsb
push
jmp
fmul
popa
test
xor
adc
roll
repnz
sbb
ret
in
mov
fwait
dec
inc
imul
aaa
outsl
movsl
lret
iret
jp
je
aad
jnp
das
rorb
mov
inc
hlt
or
xor
or
rol
xlat
imul
stos
ljmp
lds
pop
or
add
aam
sub
sbb
pop
and
adc
or
insb
out
sub
movsl
outsl
xchg
aad
lock
xlat
push
inc
mov
pushf
loop
mov
dec
adc
push
dec
dec
inc
xor
cmp
adc
enter
dec
push
mov
scas
adc
and
aad
shl
jno
mov
bound
push
setb
inc
push
ror
sbb
fisubs
scas
les
sti
mov
arpl
add
mov
mov
adc
out
cmpsb
adc
jb
shl
or
clc
int3
cmp
imul
mov
lods
or
into
dec
shll
xor
or
addr16
push
out
mov
mov
jbe
inc
dec
jmp
add
jecxz
jg
cmp
pop
out
push
and
sbb
psrld
movsb
mov
ds
dec
fcoml
push
sub
movsl
add
xchg
cmpb
xchg
int
dec
hlt
or
pop
dec
popa
sbb
mov
cmp
push
jmp
into
pop
ficomps
in
pop
push
lods
inc
pop
push
xchg
inc
mov
out
cmp
or
jb
jns
aam
decl
or
adcb
pop
sub
je
stos
repz
dec
or
cmp
push
test
addr16
and
sbb
sub
inc
sub
inc
movl
mov
mov
test
fistl
jge
test
xor
bound
mov
iret
sub
xor
pop
sbb
aam
cmp
fwait
hlt
inc
aam
push
dec
js
out
inc
cmc
mov
push
ficomps
lret
out
mov
xlat
mov
shlb
mov
or
mov
jns
outsl
push
xor
xchg
pop
fiaddl
daa
push
mov
addr16
sbb
mov
repnz
cli
test
sub
and
pop
add
lcall
push
pushf
in
cmp
jg
pushf
popa
mov
xchg
mov
cmp
push
mov
hlt
xchg
mov
pop
ret
dec
scas
cli
cmp
dec
sahf
mov
jmp
popa
loopne
push
movsb
push
sub
les
push
cli
adc
push
and
rclb
pop
movsb
pop
fnstenv
or
cwtl
iret
mov
push
cld
xchg
mov
xchg
xchg
mov
pop
sub
mov
aam
xor
sarl
or
add
or
stc
in
push
pop
cmp
push
push
imul
inc
xor
mov
test
ja
push
js
jo
ss
mov
xchg
dec
push
and
addl
notl
sub
and
inc
inc
pop
xor
jecxz
fsubrl
sti
shll
inc
ret
lock
cli
pop
sub
ja
das
insb
mov
jno
stos
xor
adc
cs
popa
xor
cmpb
jbe
sbb
addb
or
jmp
fistpl
and
xor
fsubl
aaa
js
out
lods
mov
leave
aad
rcll
mov
rorb
adc
inc
repnz
cmpsb
out
shl
shl
sub
imul
jmp
fsubrl
aas
fs
fstpt
lahf
addr16
xor
push
lret
bound
gs
in
pushf
inc
rol
aad
mov
cmp
stos
fwait
xchg
mov
pushf
mov
mov
adc
test
sub
loopne
xor
movsb
or
fiaddl
sar
xchg
shr
scas
sbb
movsb
outsb
fadds
dec
ffree
fs
jecxz
cmpsb
sahf
mov
jp
dec
xor
mov
push
push
out
jo
fildll
fdivrs
push
addr16
xor
outsl
mov
lahf
push
out
fstpl
rorl
out
xchg
xor
data16
testl
jp
cmp
rcrl
dec
in
movsb
roll
xchg
mov
pop
out
test
movsl
add
mov
mov
add
jmp
adc
and
sbb
iret
adc
push
jbe
ret
dec
test
mov
mov
arpl
adc
cmp
lods
or
pop
xchg
inc
xchg
fcomps
jns
andl
enter
nop
int3
pop
imull
cs
popf
push
fiadds
push
push
xchg
jb
and
lret
cli
pop
fistps
inc
ret
adc
inc
cli
inc
imul
pop
mov
mov
outsl
les
add
loop
mov
fldcw
mov
inc
dec
cmpb
jb
dec
mov
cs
dec
repz
cmp
sahf
scas
pop
or
fisubrl
stos
andl
repnz
push
mov
lret
adc
scas
cmp
mov
int3
loopne
or
dec
sub
and
sub
or
xor
nop
adc
lahf
loopne
out
mov
and
ljmp
out
mov
lea
je
mov
cmp
ret
aas
cli
push
mov
gs
dec
scas
mov
dec
sbb
gs
sbb
iret
add
stos
dec
cmp
or
mov
adc
sbbl
lcall
andb
js
xchg
xchg
lock
shlb
push
xchg
fisubs
aad
test
cwtl
add
mov
fildl
pop
sub
push
pusha
cmp
and
xchg
inc
mov
lret
aam
aam
cmp
jl
add
mov
inc
sar
lods
fs
jo
pop
push
aas
arpl
inc
scas
test
jmp
adc
jno
addr16
pop
ja
jp
pop
arpl
mov
xchg
gs
jecxz
xor
test
push
sbb
imul
xor
sbb
ret
fiadds
pop
adc
and
or
icebp
push
jo
call
fs
xor
lret
fists
push
shrb
and
push
pop
xor
and
pop
or
dec
cmpsb
mov
mov
and
sub
pop
sub
mov
and
jmp
lret
bound
outsb
movsb
dec
xchg
mov
xchg
in
jle
mov
dec
jne
inc
aad
rcrb
inc
xor
xchg
jb
mov
popa
lret
imul
sbb
lcall
xchg
jecxz
push
daa
or
mov
lahf
mov
mov
and
ret
leave
add
out
frstor
into
or
xchg
mov
imul
push
push
xchg
mov
add
cli
fstpl
js
jb
cwtl
ss
insb
std
lahf
aad
sahf
pop
lret
das
scas
out
adc
jp
dec
sbb
adc
sti
xchg
popf
repz
cmp
cmc
inc
mov
cmp
adc
inc
test
cli
enter
mov
idivl
add
je
addr16
mov
xchg
adc
and
lock
les
mov
mov
pop
adc
cmp
cltd
pop
in
clc
adc
sbb
aad
inc
sahf
rcll
vandnpd
out
pop
push
add
mov
rcl
es
sbb
dec
xchg
sub
fwait
incb
add
adcl
cmp
cltd
cmp
sub
inc
sub
push
add
add
dec
lea
iret
cmp
jle
jne
adcb
aaa
inc
mov
mov
popa
hlt
adc
and
cmp
js
ret
dec
insl
mov
dec
fcmovu
pop
leave
lcall
adc
outsb
imul
mov
sub
adc
sbb
jne
std
mov
mov
mov
mov
mov
xchg
add
cmp
xchg
test
std
fwait
jo
jg
sub
cwtl
add
mov
imulb
testb
dec
lahf
bound
push
sub
mov
fistl
out
inc
inc
std
lret
push
int3
and
cltd
xchg
testl
pop
lods
fisttps
mov
mov
ljmp
pop
bound
xor
mov
fnstenv
mov
lret
add
int3
mov
imul
mov
push
stc
jle
js
gs
jb
loopne
adc
in
insl
icebp
add
test
or
rcll
arpl
adcb
insl
sahf
inc
mov
xchg
rcrl
cltd
mov
pop
shrb
mov
dec
stos
roll
imul
adc
cmp
sti
sbb
in
xlat
push
ja
lret
cmpl
dec
xchg
enter
fstps
or
mov
scas
cmp
das
movsb
cmp
cld
insl
aam
dec
inc
jge
xchg
aas
aas
fists
cwtl
ljmp
les
sbb
pop
addr16
scas
ret
mov
push
jb
stos
dec
dec
mov
add
dec
stc
call
push
vandps
pop
fisubrs
xor
add
or
and
xchg
in
xchg
leave
mov
sbb
ja
xor
psrlw
mov
js
xchg
sahf
sub
pop
xchg
or
mov
addr16
mov
int3
add
dec
in
ja
and
mov
scas
in
dec
mov
addl
mov
gs
xchg
or
shll
es
inc
mov
fldl
inc
mov
mov
push
out
cmc
test
sbb
fld
push
call
ds
jnp
or
jae
mov
mov
pop
lret
inc
push
mov
or
cltd
cli
jg
leave
jns
in
mov
ja
mov
dec
or
aam
lods
xor
adc
jb
inc
push
nop
roll
mov
cli
imul
sbb
dec
pop
addr16
test
enter
mov
int3
add
push
sbb
inc
arpl
sub
and
cmp
adc
je
jns
xor
nop
sub
mov
mov
jno
shr
pop
xchg
cltd
ja
addr16
ljmp
andl
loop
or
push
jb
int
sahf
lea
in
test
jb
adc
arpl
das
cmp
cmpsl
ss
cmp
lcall
lret
xchg
adc
mov
mov
inc
in
fwait
jecxz
sbb
adc
push
popf
cltd
jne
push
cmp
cmpsl
mov
and
lea
fwait
xchg
pusha
fnstenv
jmp
loopne
data16
push
rcrb
sarl
mov
jg
mov
jge
sahf
and
lahf
pop
inc
aaa
lods
push
mov
bound
push
aad
sti
jg
int
gs
fs
push
cmc
push
mov
adc
aaa
mov
push
cs
mov
icebp
push
pop
sbb
jae
cld
jge
stos
sbb
push
test
xlat
stos
ret
xlat
mov
cmp
xchg
int
xor
mov
xchg
mov
fisubrl
xor
cmp
into
test
out
test
sarl
scas
fildll
popf
push
rol
mov
repnz
leave
hlt
add
xchg
and
adc
jge
pusha
ds
jp
sahf
cli
mov
repz
clc
mov
push
xlat
sbb
xorl
popf
ja
stos
ret
movsb
loopne
scas
mov
fimull
mov
mov
push
jae
aad
dec
cmp
adc
sub
lea
jb
das
scas
fwait
sbb
push
fwait
popa
mov
fnstsw
addr16
pop
push
arpl
lds
scas
test
insl
daa
leave
pop
xchg
xchg
xchg
and
mov
dec
mov
sbb
cmp
push
in
shll
rcrl
mov
rorl
sub
addr16
push
cmpb
mov
mov
negl
mov
adcl
sar
sub
and
jmp
xor
rorb
sbb
lock
dec
aas
jne
es
push
clc
mov
push
jbe
jmp
jno
sub
rorb
call
jle
data16
mov
rcr
mov
rolb
or
ja
add
fiadds
pop
lods
jo
xchg
ja
cmpl
mov
test
mov
aaa
pop
mov
rolb
out
jno
dec
xor
add
add
inc
cmp
jecxz
adc
out
dec
jge
stos
es
add
pop
pop
mov
mov
xchg
sti
test
stos
test
dec
aad
sbb
or
movsl
insb
fcmovb
adc
loope
cltd
fdivs
jbe
pop
add
mov
pop
inc
fcompl
add
mov
dec
cwtl
cmp
adc
mov
into
jo
sub
cmp
jmp
fidivrs
in
xchg
call
push
sub
adc
adc
xor
xchg
jp
pop
std
shrl
jbe
ljmp
jl
in
inc
xchg
xchg
fwait
sub
mov
clc
outsl
lahf
test
inc
leave
mov
leave
leave
cmpl
add
addl
ret
std
mov
and
mull
lods
outsl
adc
and
xchg
aam
movl
mov
mov
mov
push
insb
mov
imul
sbb
push
loop
aad
shll
mov
das
mov
test
and
dec
mov
xor
sub
in
xchg
hlt
and
adc
pop
jo
pop
push
sbb
cmp
mov
and
jecxz
mov
in
push
nop
xor
addr16
in
jno
pushf
xor
in
int3
xlat
aam
aam
rcrb
lcall
decl
icebp
out
push
es
test
jg
xchg
out
jl
jge
mov
outsb
sti
pop
mov
and
int
aaa
ret
fs
leave
fidivrs
mov
pop
mov
insb
fcoml
cmc
push
push
sbb
idivl
pop
rcr
shl
fs
rorb
stos
push
or
cmp
jno
jnp
nopl
daa
repz
iret
pop
xlat
scas
pop
inc
fidivs
mov
jmp
mov
push
or
or
push
imul
inc
stos
add
pop
mov
in
daa
loopne
add
cmpb
ja
decl
arpl
daa
lahf
insb
imul
cmpsb
int3
cmpsb
into
jo
xor
mov
loopne
div
mov
jmp
ljmp
out
ficoml
push
inc
push
insb
mov
bound
in
call
mov
push
cmc
je
xchg
pop
sbb
mov
or
fdivs
aam
test
imul
andl
push
lcall
loopne
or
cmc
xchg
ljmp
cmp
adc
or
sti
xchg
push
daa
mov
jbe
xchg
jle
divb
xor
es
pop
or
mov
call
jge
out
mov
mov
out
fwait
mov
lcall
rorl
push
lods
scas
inc
fistpl
ret
sbb
cmp
cwtl
pop
movsb
pop
into
stos
mov
leave
mov
das
jmp
psadbw
adc
and
inc
cmp
xchg
or
pop
cmp
pop
dec
lea
push
inc
out
lcall
loopne
mov
jnp
xlat
cmc
dec
inc
pop
add
add
or
jnp
push
lods
mov
lods
xchg
inc
sub
arpl
pop
mov
nop
push
jne
push
and
sahf
jbe
mov
std
xlat
mov
lock
adc
and
fsubrl
inc
imul
sub
jbe
and
sahf
fisubrl
movsl
mov
cmp
push
sti
inc
mov
and
call
and
adc
js
lods
sbb
jg
add
mov
jl
nop
xor
jbe
xchg
dec
das
jb
adc
movsb
push
movsl
adc
adc
in
sub
jecxz
pusha
mov
pop
inc
arpl
or
addr16
xor
out
fdivl
inc
mov
in
out
push
mov
jbe
mov
pop
cltd
adcb
inc
arpl
in
jnp
and
in
loop
sbb
and
mov
orb
call
into
and
test
lods
add
add
into
or
push
xlat
add
xchg
xchg
sbb
pusha
lret
pushf
cltd
insl
lcall
aam
stos
adc
loope
leave
mov
jmp
call
or
es
pusha
push
xor
int
bound
decl
imul
add
inc
mov
fdivrp
mov
pop
pop
xchg
cli
jne
dec
jo
cli
stc
cld
xor
int
rcr
ret
add
int3
jnp
and
dec
lret
loope
fsubr
icebp
subl
pop
stc
sbb
out
jge
or
pop
rolb
jp
int3
or
cmpsl
jbe
fnstsw
xor
repz
sbb
or
dec
je
jns
jg
push
aad
jge
into
or
stos
mov
lock
scas
fnstcw
mov
mov
adc
sub
loop
aas
cmpl
popf
js
adc
stos
jo
lock
push
rcl
xor
xchg
ds
push
push
lcall
mov
inc
dec
and
fcomps
sub
hlt
jns
xor
and
xrelease
sub
mov
xor
and
mov
pop
sbb
push
push
mov
pop
xchg
add
jb
sbb
std
enter
pop
lods
sbb
out
mov
lahf
mul
vmovdqu32
icebp
pop
sbb
add
insl
rcrl
data16
and
xchg
sbb
pop
pop
andl
pop
mov
in
and
insb
and
dec
sub
lret
int
or
ret
dec
or
jge
push
jno
push
jl
mov
pop
push
push
push
into
es
pushf
push
stos
shl
mov
sub
sbb
xor
jne
lea
movb
call
and
lret
dec
pushf
sahf
imul
dec
loop
dec
fwait
add
test
aaa
xchg
imul
inc
sti
icebp
cmpsb
cmp
jge
hlt
xor
mov
lcall
dec
fsubl
std
mov
and
jae
push
int
pop
pop
add
addr16
inc
fwait
or
push
xchg
inc
gs
jmp
movb
lret
xchg
aaa
add
inc
and
aaa
mov
cwtl
dec
mov
rorl
test
sti
push
int
push
movb
divb
mov
or
xor
cmpsl
insl
outsb
mov
loopne
shlb
inc
lret
mov
adc
xchg
jb
mov
and
insb
mov
add
push
jo
pop
sub
cmp
pavgb
or
outsl
jge
aas
in
push
push
loopne
rcl
xor
subb
jnp
fstl
mov
pop
sbb
cltd
add
dec
and
stos
out
mov
xchg
or
sub
cs
sub
mov
xchg
ds
data16
mov
pop
test
addl
adc
mov
pusha
icebp
call
and
in
mov
repz
inc
das
daa
mov
shl
xchg
adc
sar
pop
cmpb
cmp
lock
xchg
mov
xchg
ret
popa
nop
xor
nop
popf
movsb
mov
push
or
icebp
stc
mov
outsb
sbb
cmp
inc
jb
mov
xchg
or
fwait
enter
in
and
icebp
mov
sub
lret
test
aam
ret
popa
ljmp
inc
jae
xor
adc
les
pop
out
addr16
js
xchg
repz
dec
pusha
addr16
push
ljmp
mov
jmp
insb
outsl
jnp
dec
sub
fsubl
dec
ret
popf
cs
cmc
xor
fidivl
mov
jbe
movsb
pop
mov
addr16
dec
add
mulb
lret
loopne
aam
addr16
xor
std
sbb
cwtl
adc
lret
dec
pop
mov
sti
lea
adc
ret
sbb
movntq
into
dec
inc
sbb
xor
xor
shlb
lock
pop
xor
mov
ljmp
mov
xor
jb
aas
pop
xchg
jno
mov
jg
pushf
cmpsl
dec
and
lods
pop
xor
push
jo
mov
inc
adc
sub
or
dec
fst
lds
loop
push
xchg
mov
sub
lret
imul
cld
mov
inc
xchg
xchg
sub
fsubrl
adc
cwtl
mov
jle
dec
ljmp
mov
outsl
arpl
lds
mov
rcll
jecxz
jg
pop
ds
pop
aas
pusha
push
nop
ret
lret
arpl
out
std
and
jbe
xor
inc
sbb
fcoml
mov
sbb
push
movsl
and
adcl
gs
adc
iret
mov
cmc
inc
mov
add
jmp
xlat
adc
pop
ficoml
pop
sub
ljmp
div
negl
mov
test
xorb
in
stos
cmp
and
mov
and
sahf
cmp
adc
pop
cmp
sbb
lds
jge
imul
out
ret
add
sbb
pop
aam
cmp
sbb
inc
sbb
dec
push
cmp
jp
fadds
pop
push
adc
add
arpl
add
mov
inc
lea
adc
push
add
testl
test
pop
jmp
add
pop
leave
dec
sbb
dec
out
gs
in
pop
in
jecxz
repnz
xchg
inc
push
and
popf
mov
jp
mov
mov
cmp
dec
and
in
pop
imul
or
inc
stos
cld
movl
rcrl
call
daa
daa
lcall
dec
xchg
mov
cmp
imul
cmp
sub
rcrl
push
and
push
ficomps
push
push
xchg
lock
jg
jp
stc
inc
lahf
sub
aam
mov
frstor
push
or
mov
pop
shlb
sub
mov
pop
xchg
or
mov
sub
mov
xchg
dec
mov
mov
test
pop
aas
pop
ljmp
push
add
out
ja
jne
in
aam
jns
mov
movsb
xchg
inc
aad
icebp
bswap
cs
imul
and
cmpsl
imul
cmpsb
inc
mov
cmp
jnp
clc
cmpsb
or
lods
inc
push
sub
push
repz
aad
push
pop
test
stos
out
and
inc
push
jp
push
pop
mov
pop
addr16
add
mov
xor
jg
js
fcomps
lcall
adc
mov
or
inc
aaa
pop
icebp
push
and
out
je
push
sub
cmp
cmpsl
hlt
sbb
mov
add
add
mov
dec
xor
aam
cli
fldenv
iret
leave
popf
mov
into
sbb
addr16
cmpsl
mov
push
in
clc
pop
clc
xor
aaa
js
mov
pop
cmp
push
push
add
roll
test
mov
sbb
mov
cmp
mov
push
jg
sti
sar
jae
cmp
dec
ficomps
push
addr16
push
add
mov
ja
rol
mov
fstpl
rol
xchg
xor
dec
mov
mov
aad
mov
mov
in
popa
icebp
add
add
outsb
stos
outsl
fistl
push
out
inc
adc
mov
or
jp
push
push
mov
jno
stc
shlb
add
into
mov
mov
setp
call
cmp
adc
movsb
je
add
fwait
mov
mov
jp
xlat
push
fistpl
call
imul
addb
add
aas
mov
and
fs
fiadds
mov
sti
subl
inc
popf
das
jl
mov
dec
jg
adc
out
sbb
lea
push
lods
cmp
aad
dec
dec
frstor
adc
fcoml
icebp
add
in
aas
dec
inc
dec
adc
fidivrl
mov
ljmp
shl
adcl
xchg
pop
aam
movsl
push
xchg
addr16
ret
and
aam
insl
pop
xor
fdivl
pop
jne
je
xchg
test
add
lcall
mov
and
scas
outsb
pop
iret
data16
hlt
test
cmpsb
aad
test
into
pushl
xor
fdivrl
movsl
add
jl
out
adc
sbb
insl
or
jge
dec
pop
pop
testl
in
mov
int3
dec
sub
jl
jno,pt
mov
test
mov
adc
mov
add
insl
mov
cmp
int3
and
out
pop
cwtl
pusha
movsl
mov
fnsave
xchg
outsb
in
sbb
repz
cli
jne
int3
jne
xor
fs
je
pop
pop
push
int
aaa
mulb
rcll
cmpsl
mov
sub
ljmp
and
fisubrl
loop
mov
dec
pop
pusha
push
inc
jle
inc
mov
int
mov
pop
insb
mov
ljmp
popf
movsl
and
popf
aam
cmp
std
stc
cmp
push
mov
mov
sub
inc
popf
popf
sti
arpl
and
pop
mov
pusha
scas
jecxz
and
dec
ds
loopne
sti
sarl
xchg
mov
pop
out
mov
adc
into
mov
cmp
dec
nop
add
adc
xlat
cwtl
add
scas
add
data16
mov
xlat
inc
aas
lock
je
mov
int
daa
sti
inc
pushf
pop
cmpsb
jo
dec
dec
adc
int3
insl
xchg
pop
fstpl
aas
mov
jmp
shrl
int3
pop
xchg
clc
mov
ja
testl
mov
push
adc
mov
ljmp
xchg
popf
push
outsl
mov
inc
cmp
fisubrs
lods
xchg
cmc
ret
jae
sti
push
jnp
test
and
into
lret
rcrl
jne
xlat
pop
icebp
xchg
mov
cmc
cmpsb
jmp
xor
push
in
sar
testb
data16
test
mov
sub
fimuls
test
rorl
fs
add
cmp
scas
shrl
xchg
cmpsl
sub
adc
lock
call
mov
push
out
fnstenv
push
push
cmp
aad
xchg
hlt
jo
inc
loopne
push
insl
out
adc
sub
cmpb
movsb
insl
repz
lds
cmp
pusha
fisubrs
loop
sbbb
in
sbb
mov
sub
aaa
jg
mov
repz
add
inc
mov
and
xor
ret
mov
pop
mov
jne
xchg
cmpsl
ja
push
mov
push
push
cmp
mull
pop
cld
ret
xchg
and
hlt
ja
loop
push
js
mov
jg
mov
or
loope
push
inc
fldl
imul
sub
aaa
cmp
gs
mov
inc
iret
push
js
sub
xchg
stos
cmp
sbb
push
fistpl
add
mov
cmpb
outsl
cmp
pop
jecxz
leave
loope
scas
sbb
dec
ds
out
xor
ds
push
std
mov
test
mov
xor
int3
push
jl
and
dec
daa
mov
pop
inc
lock
cmp
add
push
push
bound
out
adc
dec
test
add
pop
les
out
cmp
scas
insb
es
adc
mov
pop
ds
lcall
mov
mov
out
sub
xrelease
mov
xchg
test
out
xor
or
mov
or
das
mov
sbbl
mov
aaa
xchg
int3
mov
testb
lret
jl
sub
push
scas
int
cld
sahf
aas
pop
rclb
mov
sarl
jecxz
and
leave
jle
pop
push
std
in
fwait
mov
xchg
data16
pushf
aaa
adc
repnz
push
xchg
test
nop
mov
bound
add
xchg
popa
ja
insl
in
jb
xchg
push
out
inc
scas
or
dec
test
lcall
pop
pop
roll
cmp
mov
xorb
incl
gs
dec
popf
sbb
clc
inc
data16
in
or
jno
cli
mov
push
cmc
icebp
push
add
stos
out
jecxz
push
in
sub
adc
and
popf
out
push
push
cmp
test
pop
xorl
xor
mov
movsl
in
mov
outsb
aaa
insb
cltd
inc
movsl
xchg
add
addr16
ret
out
and
hlt
xchg
gs
into
inc
sub
push
jne
hlt
les
cwtl
push
inc
fcmovnu
loop
dec
aaa
push
addr16
sub
mov
add
push
sbb
add
dec
jns
inc
aaa
mov
xor
ret
ljmp
mov
xor
cmp
pop
push
out
mov
jmp
std
imul
mov
js
stc
sbb
arpl
mov
xchg
sbb
lock
icebp
fisubrl
push
xchg
sub
dec
ds
mov
lods
fwait
inc
adc
fwait
loope
std
fdivrl
cmp
jne
cmp
lcall
cmpsb
or
sbb
sbb
add
mov
mov
dec
sbb
lcall
mov
xor
xor
pop
dec
sub
sbb
out
inc
ds
fwait
cld
xor
mov
cltd
and
icebp
xchg
mov
in
adc
aas
fs
fmuls
ret
xchg
inc
mov
add
pop
push
sbb
jmp
mov
daa
cmpsl
pop
add
jl
in
int
mov
jbe
xor
enter
mov
pop
loop
pop
ja
adc
lea
mov
out
in
push
or
test
or
jnp
sub
and
sub
ja,pt
pop
lods
dec
and
fisubl
dec
sbb
rcrl
fs
call
aam
sbb
ljmp
cli
push
imul
and
into
jg
fidivl
xor
scas
mov
sbb
rorl
shlb
xchg
dec
or
sbb
stc
push
shlb
xor
movsl
aas
ds
ja
movsb
pop
testl
or
push
cwtd
in
pop
cmp
nop
lods
push
cmp
add
jl
mov
mov
push
mov
fcoml
xchg
dec
sarb
fwait
add
push
and
clc
por
test
call
xchg
les
push
push
bound
movb
jmp
sahf
jp
iret
leave
out
jg
fimull
sub
mov
orl
add
enter
dec
cmp
mov
add
adc
in
push
push
sbbb
jmp
xchg
lret
or
fsubr
rcr
jo
fimull
sub
cmp
out
or
sub
popf
cmp
and
icebp
add
mov
pop
pop
adc
je
cs
and
and
in
sahf
test
dec
dec
dec
mov
and
int
sub
inc
push
xchg
push
jg
movb
cwtl
xlat
call
leave
and
andb
aam
xorb
addl
mov
call
lods
xchg
not
mov
loop
aaa
inc
sbb
or
xchg
dec
js
push
xor
adc
or
lea
jno
dec
out
jbe
xchg
pushf
pushl
cmovo
push
sbb
int
mov
dec
or
repz
jns
insl
in
fildl
mov
sbb
dec
rorl
in
fbstp
scas
sbb
pop
div
jl
cmpsl
xor
shll
out
jnp
addr16
push
or
mov
mov
daa
sbb
test
jae
mov
sbb
cmc
add
shll
push
dec
mov
jbe
xor
dec
scas
inc
sbb
and
push
sbb
clc
mov
test
jb
js
cld
cli
or
dec
pandn
jae
inc
xchg
lock
or
rcrl
xor
mov
int3
push
test
push
push
sbb
dec
adc
xchg
aas
jbe
sbb
hlt
xchg
iret
loope
test
mov
mov
test
inc
cmc
lods
inc
sub
pop
test
inc
pop
pusha
outsl
cmp
int
dec
jns
push
push
xor
sub
lods
xor
cmp
rcll
aas
mov
enter
popa
pop
xchg
mov
repz
jp
pushf
sbb
std
adc
adc
daa
aaa
int
mov
into
rcrl
jbe,pt
out
jb
out
ss
xchg
push
jg
pop
orl
mov
xor
xor
add
xor
lret
rcrl
push
push
dec
in
loop
rolb
pop
iret
cmc
in
loope
js
imul
pop
inc
xor
fadd
cmp
dec
adc
imulb
adc
cmp
jbe
lods
add
dec
in
sub
sbb
jmp
test
mov
nop
cmp
lret
das
or
popa
out
repz
dec
pop
stos
xchg
add
loopne
and
cmp
cli
dec
xlat
das
movsl
mov
mov
iret
insl
mov
ljmp
fwait
imul
std
sahf
iret
ss
pop
test
push
jb
mov
adc
or
imul
mov
adc
push
inc
lock
in
cmovp
idivb
xchg
jbe
imul
jg
aas
lods
je
fidivl
mov
call
add
and
mov
adc
das
inc
adc
sub
sub
lret
lret
sbb
jnp
lahf
stos
cmp
xchg
inc
pop
lods
sub
adc
mov
scas
sub
push
mov
orb
out
add
mov
cmp
shll
dec
test
mov
data16
loop
sbb
mov
das
push
je
inc
cli
iret
dec
and
data16
repnz
scas
test
pop
in
js
and
sbb
add
sbb
mov
pop
cwtl
jle,pn
sub
xchg
mov
iret
je
or
add
or
xor
push
fldcw
stos
test
sub
cmpl
fdivl
dec
loop
test
inc
jmp
repz
push
stc
js
cmp
mov
stos
popa
movsb
sar
loopne
mov
jnp
jne
push
mov
fcoms
repnz
mov
jp
shrb
dec
sub
push
lahf
and
jo
jb
inc
fnstsw
mov
push
xor
xor
sub
mov
jle
push
cmp
xor
insl
subl
add
or
lods
sub
out
mov
mov
cmpsb
sarb
push
mov
jle
mov
xlat
cmp
bound
inc
fs
push
adc
in
cmp
push
xchg
xchg
push
sti
enter
cmpsl
adc
in
mov
out
outsl
fcomi
xchg
mov
jp
pop
data16
pusha
mov
ret
mov
imul
cmp
pushf
iret
and
inc
or
aaa
or
out
add
adc
jg
movsl
cmp
mov
movsb
dec
mov
pop
xchg
sbb
arpl
sbb
xorl
cmp
cli
imul
dec
pop
push
shll
mov
sub
push
mov
mov
sbb
xchg
mov
xor
mov
mov
mov
fwait
int
push
sub
aaa
cltd
xchg
inc
jbe
push
movsb
jl
jne
adc
push
mov
in
mov
cmpsb
xchg
push
mov
cltd
or
movsb
imul
push
push
ss
insb
stos
mov
pop
sub
add
cwtl
int
mov
sar
rolb
cwtl
nop
sti
pushf
in
or
inc
and
scas
mov
fidivl
pushf
pop
test
ss
inc
cmp
dec
jbe
lods
rorb
xlat
add
xor
mov
mov
jo
daa
xchg
add
xchg
xchg
call
orb
xor
lods
and
fwait
loopne
inc
pop
mov
lahf
add
outsl
jge
jbe
push
sub
pushl
or
mov
outsl
jge
in
or
out
dec
xor
adc
inc
inc
popl
scas
pushl
jle
add
mov
cs
decb
aam
add
add
mov
test
shr
int
cmp
mov
sbbl
xor
pop
pop
jb
ror
fcmovu
dec
inc
mov
sub
notb
flds
scas
pusha
scas
xchg
mov
bnd
ds
mov
mov
pop
out
mov
das
daa
or
subl
outsb
jle
mov
out
cmp
jmp
sub
scas
adc
cmc
sbb
pop
in
lcall
xchg
test
pop
and
pop
push
jge
xchg
or
lds
and
mov
jnp
hlt
mov
fldcw
das
outsb
divb
sbb
pop
push
mov
out
in
sub
sub
jecxz
sbb
sbb
scas
loopne
dec
push
cmp
test
cmpsb
jbe
shlb
insb
adc
inc
std
mov
sub
xor
inc
lret
popa
mov
add
and
cld
xor
ljmp
andb
ljmp
scas
push
mov
or
popa
adc
jmp
mov
fwait
pop
cs
fsubr
inc
fmull
loop
push
cld
dec
cld
out
cmp
imulb
in
push
cmc
test
sub
mov
repz
mov
lret
and
and
sub
add
pop
or
mov
ficomps
or
in
stos
sub
adc
fwait
xor
mov
movsl
mov
inc
in
dec
dec
adc
das
adc
test
out
add
mov
mov
lds
mov
les
push
hlt
push
sbb
xor
out
inc
scas
imul
lcall
test
add
push
xor
inc
push
add
into
in
adc
pop
xorl
xchg
filds
imul
push
or
inc
mov
test
adc
mov
jb
mov
or
xor
cmp
cmp
mov
jmp
xchg
lods
call
adc
movsb
ret
in
pop
pop
test
cli
and
jno
loop
pop
and
push
ret
das
shll
fs
and
int
jnp
int
imul
mov
dec
sub
out
popaw
aas
lret
or
lret
sahf
xchg
xchg
cmpsb
mov
pop
lods
jno
jp
test
imul
outsb
rcl
dec
cmpb
mov
andps
pop
jnp
mov
subb
repz
hlt
cmovo
jno
out
sub
dec
pop
add
cmpsl
sbbl
cwtl
and
out
mov
or
pop
in
mov
imul
or
std
add
pop
insb
xchg
lods
mov
leave
pop
imul
mov
xchg
push
adc
mov
movsb
sub
das
ret
popl
mov
dec
ds
adc
jmp
xlat
call
and
xchg
xor
mov
data16
xchg
sub
lret
nop
push
push
nop
aas
imulb
daa
xchg
in
popa
pusha
fistps
push
out
cmpsl
je
subl
add
pop
cmp
repz
mov
fldt
and
inc
push
dec
outsl
int3
and
in
xor
add
out
xor
and
mov
xchg
mov
xor
and
or
mov
mov
shll
pop
je
loop
push
decl
add
mov
sbb
fcomp
inc
call
pop
jno
jge
call
pop
dec
add
or
mov
js
jbe
or
or
jge
repz
pop
orb
gs
sub
arpl
sbb
xchg
pop
xchg
xchg
dec
and
inc
stc
jb
les
popf
mov
enter
jb
sysexit
sahf
cmp
out
aad
les
push
xchg
mov
ret
icebp
and
add
xlat
aad
xchg
cmc
pop
add
mov
sub
in
popf
jp
pandn
out
push
mov
out
mov
add
ds
dec
mov
shrl
out
adc
iret
jo
xchg
lret
and
aas
in
ret
pop
sbb
jmp
mov
ret
cmpsb
xchg
sbb
mov
cmp
jne
add
push
popa
mov
aam
shll
and
mov
mov
lcall
ljmp
inc
mov
test
and
jp
mov
loope
pop
push
fnstsw
push
pop
pop
cmp
insb
pop
cmpsl
sub
inc
incb
sub
fldl
dec
pusha
and
push
js
push
push
pushf
dec
cmp
xor
push
les
sbb
lea
cmc
jl
and
jnp
adc
iret
sbb
pusha
fucom
and
mov
repnz
std
push
leave
fsubrp
out
sti
aam
data16
xor
xorb
xor
add
dec
pop
and
mov
mov
test
adc
shrb
out
pop
sub
adc
mov
aam
imul
loopne
xor
pop
movl
dec
jmp
aad
popa
mov
addl
mov
in
pop
jp
mov
loope
jbe
mov
dec
mov
mov
xchg
adc
inc
adc
dec
ret
and
fbstp
stc
jl
xchg
sar
insb
sbb
lcall
mov
movsl
and
aam
or
push
xor
imul
or
test
into
lret
pop
mov
loop
sahf
fld
mov
rcr
push
fildll
jae
sahf
add
mov
insl
out
mov
ret
cltd
in
sub
stos
mov
mov
xor
sub
push
mov
mov
arpl
adc
and
dec
sbb
std
rorb
mov
incb
cmp
push
jl
mov
jno
mov
mov
jns
data16
mov
mov
cwtl
adc
addr16
or
maxps
mov
mov
repz
std
sbb
xor
mov
cmp
xor
ror
out
ja
sbb
pop
cld
pop
adc
int
sub
call
mov
call
xlat
or
std
push
bound
lock
dec
adc
sbb
rcrl
jno
mov
add
inc
lret
push
mov
sbb
das
jbe
ss
ret
out
mov
sub
add
out
pop
or
movsb
div
dec
setle
lea
and
in
inc
mov
mov
sbb
mov
add
cmc
push
pop
mov
sub
mov
jmp
out
fs
and
cmpsl
in
mov
cmc
mov
or
push
icebp
decl
call
testb
xchg
out
fisttpll
aaa
lods
xor
fdiv
jle
cmp
cmp
leave
sbb
loope
mov
mull
sbb
outsl
inc
ret
fs
rcrl
push
stos
adc
arpl
push
or
mov
mul
jmp
mov
sbb
mov
pop
popf
fdivrl
fidivl
ds
jnp
xor
inc
mov
repz
and
ja
insb
xchg
cli
daa
iret
daa
daa
mov
cmp
mov
jne
mov
dec
dec
jmp
xchg
sahf
xchg
xchg
roll
ja
inc
xor
mov
push
out
movsl
pop
xor
xor
pop
dec
popf
and
aaa
sub
xor
dec
in
pop
lock
inc
lret
cmp
popa
adc
dec
fidivrs
fwait
dec
xor
scas
cld
jo
sub
std
lock
mov
stc
cmp
mov
lods
orb
push
movsb
aaa
aam
scas
sbbl
test
jnp
scas
std
mov
hlt
cwtl
or
jmp
shl
sarb
fidivrs
into
mov
iret
mov
ja
hlt
sbb
lds
bound
iret
les
pop
and
cld
adc
into
nop
mov
rcr
fisttps
aad
jl
xor
outsl
les
mov
jmp
aaa
dec
dec
adc
cmp
repz
fs
testb
outsb
loopne
adcb
sub
add
pop
arpl
adc
jne
lret
xlat
iret
ret
scas
push
sub
das
testb
mov
sub
jp
xor
inc
je
rcrb
inc
stos
sbb
cwtl
mov
mov
clc
jecxz
js
dec
mov
cmp
enter
cltd
daa
xchg
lea
mov
add
jecxz
shll
xorl
outsl
and
arpl
or
rorl
gs
push
inc
sub
xlat
lea
xchg
push
fs
into
arpl
xchg
aaa
xor
xlat
notl
pusha
fdivrl
in
push
push
mov
in
push
add
or
and
pop
mov
push
cltd
add
in
dec
in
xor
adc
add
mov
lcall
push
test
test
movzbl
shll
cmp
aas
and
imul
loop
cmp
movsb
ds
mov
jmp
sub
in
lock
xchg
push
pusha
mov
rcrl
mov
xor
cmp
cmpsl
fs
sub
dec
push
xor
repz
test
lods
or
sub
jae
leave
call
mov
xor
fildll
out
jnp
ja
cmp
les
xlat
rcll
aam
in
cmp
and
mov
jmp
lods
xchg
ja
inc
cltd
add
addr16
mov
clc
xor
lods
adc
pop
loope
std
dec
mov
adc
dec
dec
mov
out
in
or
xor
jg
stc
add
or
pop
xchg
push
insl
popf
repz
mov
sbb
iret
mov
jecxz
mov
fisubl
add
xor
jmp
sbb
jmp
dec
in
popa
orl
sub
or
mov
or
cmpb
pop
frstor
pusha
dec
je
add
adc
pop
xchg
cs
or
clc
cmpsl
push
out
aas
jg
cltd
xor
outsl
mov
add
movsl
sar
into
xchg
xchg
mov
gs
out
gs
cmpsl
das
ja
or
jle
adc
jl
popa
clc
xor
sub
mov
into
mulb
cmpsb
mov
mov
push
and
das
sahf
or
pusha
loopne
icebp
imul
hlt
cmpsl
gs
rol
mov
sarb
adc
cwtl
add
mov
gs
cltd
jno
cli
mov
decl
and
sbbl
addr16
mov
xchg
sarb
aad
mov
into
arpl
jecxz
lea
movsb
scas
imul
cmp
lret
push
gs
ret
repnz
add
in
push
daa
cmpsb
push
ds
aas
cmp
or
xlat
inc
or
push
push
pusha
mov
lcall
not
sahf
and
repz
popf
mov
add
gs
xor
punpckhdq
push
cmp
pusha
aad
jbe
cld
mov
insl
cmp
push
bound
jb
add
adc
lods
testl
sbb
push
pusha
push
inc
or
lcall
sbb
xor
out
jbe
mov
in
xchg
xchg
pop
mov
xlat
incl
or
mov
add
das
cmc
mov
es
andb
in
clc
push
lret
aam
clc
xchg
aam
cmp
adc
push
test
into
mov
out
xchg
jl
mov
arpl
movb
ja
shrl
mov
mov
idivl
pusha
fstp
popa
sub
cmp
cmp
mov
fdecstp
test
push
adc
stos
pop
mov
inc
arpl
jge
jns
xor
pop
adcb
cmp
pushf
lahf
adc
jg
add
ja
mov
jl
out
leave
xchg
xchg
das
cmc
jmp
sbb
out
sbb
xor
loope
add
nop
sbb
push
fstpt
loopne
test
mov
nop
mov
gs
imul
push
js
or
xor
repnz
or
jp
mov
sub
out
xchg
aad
dec
cmp
lahf
xchg
fnop
sbb
push
jb
into
sub
dec
jle
fs
pop
sbbb
xchg
dec
sbb
sbb
sbb
mov
in
dec
xor
xchg
lahf
inc
inc
mov
icebp
ret
mov
cmpsb
mov
cld
popl
cmp
fstps
jp
mov
enter
jno
repnz
jp
mov
dec
inc
aam
xor
fidivs
add
sub
in
sarb
mov
lea
out
scas
mov
push
add
fidivrs
sub
lock
leave
inc
xchg
data16
inc
jne
ficoms
inc
and
andb
adc
jo
and
cmp
or
fs
cmp
mov
cmc
lahf
not
imul
push
lods
xor
cltd
out
mov
fcoml
out
mov
daa
mov
push
sub
sbb
adc
mov
ja
jne
jb
lods
mov
mov
imul
cwtl
popf
jb
mov
mov
ja
je
push
push
test
std
push
cmp
push
or
xor
ja
jl
mov
pop
insl
test
ljmp
jno
imul
pusha
pop
lods
out
ss
sbb
fistpl
icebp
out
lret
add
sbb
cld
pop
cmp
out
lds
gs
clc
sub
mov
jle
into
sub
stc
sbb
mov
inc
inc
outsb
je
jmp
pop
cmpsl
jns
sahf
xor
inc
pop
lahf
adc
cld
stos
xchg
jle
mov
xor
jg
daa
aaa
out
push
or
sub
arpl
cmp
xor
out
in
jbe
test
cmpl
xchg
push
imulb
dec
stos
jno
cmp
hlt
jne
fists
pop
lds
push
insl
sub
mov
shrl
push
pop
push
daa
movsl
jbe
xchg
sub
or
mov
iret
test
lret
fiadds
ret
adc
lods
aaa
fdivl
push
out
aas
mov
push
or
mov
jmp
out
ret
adc
in
mov
adc
hlt
fnstcw
inc
sar
loopne
cmp
enter
adc
jg
popa
cmp
stos
lret
popa
adc
cwtl
nop
jnp
dec
push
add
mov
sahf
xchg
mov
adcl
insl
cmp
pop
fisttpl
bound
daa
cmp
iret
xchg
dec
aaa
add
movsl
fwait
cmp
xor
movsb
nop
fwait
int3
dec
fstpl
adc
pop
or
jno
fsubrp
jmp
ret
std
int3
leave
sub
movsb
or
clc
jp
xchg
out
dec
pop
jnp
mov
dec
std
hlt
in
int3
and
test
pop
or
fwait
mov
lods
fisttps
pop
pusha
mov
insl
fsubl
jnp
fs
out
push
and
out
out
adc
lret
aam
lret
repz
push
xchg
jl
insl
fstpt
sahf
mov
stc
outsb
xchg
into
not
lods
or
lahf
cwtl
nop
mov
and
pop
jne
in
or
and
call
mov
test
pop
jo
or
pop
shrl
inc
lock
xorb
lods
rcl
xchg
mov
dec
ss
add
add
lea
add
bound
stos
inc
test
cmpsl
jne
bound
cli
dec
lea
sub
or
push
mov
in
sar
mov
xchg
pop
loopne
and
js
aaa
fwait
int
pop
adc
add
movsl
or
frstor
xchg
jg
sbb
xchg
mov
dec
bound
push
adc
lea
and
mov
adc
insb
pop
mov
loopne
xlat
add
stc
push
cmp
sub
mov
clc
mov
and
xchg
pop
jnp
adc
add
adc
out
xchg
mov
sub
lcall
dec
lea
mov
inc
add
ja
scas
or
cltd
lods
fs
orb
jb
push
lcall
push
push
xor
xlat
fists
dec
mov
jg
lahf
add
mov
jns
and
lret
fdiv
push
movsb
adc
mov
jb
xor
sub
pop
dec
lahf
orb
inc
iret
add
cmp
stos
lods
xor
ja
jb
mov
push
dec
pop
or
sub
mov
jbe
iret
and
pop
dec
sete
push
cmp
mov
orb
aad
push
mov
call
ljmp
fisubs
dec
aas
or
cmpl
loopne
mov
ja
lret
mov
insb
add
int
aam
pop
shll
mov
insl
insl
movsb
into
sahf
stc
in
jmp
lret
cltd
xchg
cmpsl
adc
addr16
mov
lret
push
inc
sub
iret
add
mov
cli
jo
push
mov
pop
out
jmp
ret
xchg
scas
sub
in
stc
dec
movsb
fucompp
test
shlb
enter
push
pop
jecxz
dec
scas
adc
insl
test
popa
inc
test
dec
out
xchg
stos
jne
sbb
cli
pusha
jmp
outsb
hlt
xchg
das
push
jb
add
loopne
mov
mov
push
loopne
dec
fmulp
cmp
inc
and
lea
and
nop
aad
daa
jg
movsl
and
rcrl
or
shll
scas
dec
adc
lcall
xchg
push
and
sub
imul
and
fldcw
dec
lret
mov
push
shll
cld
push
ja
xor
xchg
fs
sub
sub
mov
movsb
shrl
in
dec
and
fs
out
scas
pop
mov
or
stos
andb
into
jno
dec
push
lahf
addr16
add
pop
add
sti
push
and
sub
dec
sub
sahf
mul
test
inc
and
and
int
dec
jae
mov
jo
data16
std
jp
enter
and
js
dec
inc
xor
add
adc
mov
int3
outsl
mov
or
and
jl
push
jecxz
je
cmpl
cmp
in
xchg
push
jl
and
arpl
mov
repz
repz
pushf
cmc
filds
hlt
adc
hlt
mov
popa
and
inc
cmp
dec
aaa
imul
movsl
mov
cmpsb
sbb
cmc
xchg
loop
adc
dec
dec
fisttpl
arpl
add
add
or
mov
sub
loopnew
out
xor
sbb
mov
and
sub
xor
clc
cmpsl
add
sbb
pop
cmp
insb
pop
sahf
inc
sub
push
sub
push
mov
rcrl
jp
repz
fimuls
sub
xor
jecxz
xchg
adc
jp
pop
std
xchg
lds
xorb
divl
push
aam
mov
aas
lret
xor
xchg
mov
repz
aaa
ror
cmpsl
in
dec
push
xor
popa
cltd
fmull
push
loope
orb
mov
dec
frstor
dec
mov
jbe
aam
mov
testl
sti
movsb
mov
inc
dec
dec
xor
push
mov
dec
adc
xchg
mov
dec
inc
mov
fyl2x
aam
adc
adc
jl
lahf
das
add
addr16
push
sbb
not
ljmp
add
sbb
mov
or
cmp
pop
cmp
lret
sti
inc
in
lret
jecxz
cmpl
daa
int3
and
dec
mov
aad
cmpsb
cmp
cli
jnp
pop
sub
xorl
aaa
xorl
int
adc
mov
or
or
mov
test
jb
popf
fwait
pop
arpl
nop
mov
jae
inc
notb
pop
dec
mov
in
lret
add
and
add
idivl
add
pop
andl
je
xchg
sub
xor
dec
mov
aam
mov
movq
scas
lods
inc
enter
push
lea
and
pop
mov
les
cwtl
jns
sahf
push
sub
ja
adc
dec
xchg
or
pop
xchg
fwait
xchg
add
imul
jmp
aad
mov
sbb
cltd
mov
xchg
xor
jae
push
sub
insl
inc
les
push
ja
mov
push
and
jg
mov
test
test
xchg
mov
xchg
adc
mov
dec
jp
decl
push
movsl
cmpsl
imul
xorb
and
nop
mov
frstor
out
cmp
mov
mov
sub
xor
cmp
cld
jecxz
lods
outsl
out
dec
push
mov
jb
push
test
sbb
into
sbb
ljmp
xor
insl
sarl
dec
outsb
mov
cli
add
pushf
ja
fwait
xor
movsb
mov
add
sub
pushf
jp
into
test
push
movsb
out
cmp
xchg
cmp
ljmp
test
gs
clc
enter
das
mov
mov
icebp
push
mov
jge
out
sbb
cmc
and
xorl
inc
lods
rcr
jbe
aaa
dec
fs
in
mov
repz
lds
adc
mov
mov
outsl
nop
mov
cmp
lds
dec
movsl
jo
stc
push
pop
jno
pop
test
insb
push
and
mull
jnp
imul
jbe
call
xchg
pop
xchg
push
xchg
xchg
inc
cmp
mov
cmp
mov
popf
cld
mov
int
sar
jp
cmc
or
ficoms
push
movsb
fs
sub
mov
cltd
xchg
fnstenv
js
xchg
ja
sbb
fmull
mov
loope
enter
sbb
xlat
push
pop
js
lret
adc
out
pusha
adc
scas
lock
inc
cli
jbe
xor
pop
fs
xchg
push
pop
shrl
daa
flds
sub
ret
jno
sbb
repnz
adc
shl
bound
xchg
out
movsl
andl
push
addr16
adc
orl
lea
mov
scas
lods
in
lcall
pusha
cmp
in
stc
divb
idivb
outsl
loop
icebp
jge
mov
or
test
sub
cs
insb
mov
cmp
push
in
pop
insl
dec
rol
bound
pusha
jl
imul
les
cltd
lods
xchg
jbe
cltd
or
pop
fisttpll
cmpsb
je
pop
mov
ljmp
add
flds
lret
sbb
xchg
or
dec
insl
sub
pop
fidivl
fnstcw
aam
outsb
outsl
cmpsb
ljmp
jbe
mov
pop
cli
cs
add
mov
inc
push
imul
add
mov
hlt
sbb
sub
ss
mov
repz
pop
push
xchg
mov
fs
sub
sbb
sbb
pop
flds
jo
and
pop
call
clc
fs
vmptrld
cld
pop
addr16
jno
orl
pop
add
add
mov
icebp
ret
mov
lods
stc
mov
in
or
push
stc
stos
adc
stos
mov
jns
shll
test
sub
cmpsl
mov
sbb
inc
push
pop
scas
inc
mov
xchg
xor
pop
dec
xor
sbb
mov
rcll
and
ds
shrb
sbb
mov
mov
test
insb
add
clc
jo
cmpsb
mov
add
push
dec
add
jns
mov
xchg
xor
cmc
cmp
int3
das
pushf
popa
hlt
rcr
vphaddbq
std
inc
or
mov
push
mov
jmp
scas
out
add
jo
pushf
or
fimuls
iret
cmp
mov
stc
and
gs
jo
push
jns
mov
cmp
fcoml
scas
lret
cmp
clc
xchg
push
push
mov
inc
mov
ja
test
stos
call
inc
lds
mov
in
jnp
xor
out
xchg
sbb
leave
cmp
xchg
mov
xchg
je
xchg
mov
dec
jnp
dec
loope
ror
test
sbb
lock
cmc
jp
aad
dec
dec
gs
or
out
scas
mov
adc
lcall
sub
test
stc
lcall
xchg
addr16
mov
negl
out
jle
and
jl
sbb
jg
sub
imul
mov
movl
inc
in
shl
adc
jno
cmp
ljmp
cltd
adc
or
pop
xchg
mov
mov
xor
aam
or
cmp
iretw
xchg
sub
mov
aam
pop
sahf
nop
ret
sbb
out
gs
pop
pop
repz
xchg
add
xorb
jge
or
and
dec
jmp
or
cltd
jo
fwait
jp
xchg
xlat
rcrb
jnp
popa
outsb
mov
pusha
rolb
ret
aad
es
jno
jo
push
xchg
xlat
mul
loopne
out
mov
out
xchg
xchg
ret
sti
fcmovnb
jbe
fyl2xp1
cmc
mov
adc
dec
jecxz
lods
sbb
push
lds
enter
push
and
jne
xorb
out
push
fstpl
jb
data16
fistps
jge
out
jmp
test
mov
stc
pop
sarl
xor
jns
and
dec
imul
lahf
dec
dec
cmp
inc
or
scas
sub
mov
adc
push
call
dec
test
or
dec
fwait
pop
push
popf
pop
ljmp
out
movsl
shlb
xchg
mov
sbb
and
fwait
dec
subb
stos
int3
mov
and
out
pop
lods
sbb
loope
fimull
pop
mov
xor
bswap
out
popa
add
dec
push
inc
adc
xor
dec
sti
out
loop
sub
xchg
daa
mov
daa
jl
stc
dec
movsb
dec
add
mov
xor
iret
inc
pop
daa
bound
gs
lods
push
add
adc
imul
pushl
mov
mov
enter
in
fsubl
adc
pop
mov
xchg
jne
std
in
or
jg
lcall
xchg
sbb
leave
lret
pop
jecxz
sub
into
inc
es
mov
decl
push
loopne
popa
enter
cld
or
dec
aad
add
pop
cld
jl
mov
jne
shl
jecxz
mov
sbb
les
fs
cmp
or
jno
xlat
inc
call
mov
jbe
adc
fcompl
cmc
and
inc
dec
out
aam
xchg
je
cli
imul
mov
pop
insb
ljmp
xor
das
xor
sbbl
scas
aam
mov
push
popa
mov
mov
je
into
cmp
cli
je
xor
cld
nop
mov
fcompl
lds
fmulp
sub
push
dec
sub
mov
xor
cmpsb
ja
jl
mov
jbe
xchg
scas
push
loopne
lret
vpacksswb
loopne
pop
cmp
inc
sbb
sbb
xchg
xlat
ret
ds
xor
sbb
cmc
dec
inc
push
int3
lods
lahf
xchg
rorl
pop
sbb
mov
ja
jb
jnp
test
or
xlat
shrb
add
rcr
daa
fdivl
adc
ret
push
incl
xor
mov
mov
in
fldt
mov
movsb
fisubs
xchg
popf
movsb
sub
inc
outsb
mov
cmpsb
jbe
gs
mov
jle
jl
nop
mov
ret
loop
roll
xchg
push
mov
push
sarb
mov
lret
and
in
ffree
jp
testl
fsubp
mov
pop
test
scas
mov
mov
sbbb
out
push
mov
xor
jno
xor
add
incb
sbb
and
mov
add
cmpsb
inc
ljmp
pop
push
rclb
xlat
push
and
fiaddl
or
nop
pop
daa
mov
xchg
lret
mov
in
outsb
push
jnp
je
mov
mov
sbb
add
xor
and
mov
in
test
add
add
insb
mov
jb
orl
add
in
fs
leave
sbb
jle
push
sub
dec
out
orl
adc
push
push
shll
mov
xor
js
lock
inc
mov
adc
and
dec
fcoml
jb
call
sub
mov
mov
jge
jno
rcrl
fnstsw
int
stos
aas
cmpsb
fcmovne
or
test
push
sarb
add
jecxz
in
xchg
mov
push
pop
cmp
mov
rcll
add
mov
push
pop
sbb
adc
jo
adc
les
inc
aas
loope
out
clc
mov
in
xchg
lmsw
mov
adc
clc
aaa
xchg
mov
add
mov
or
mov
dec
dec
mov
int3
dec
lret
fisubrl
fsts
out
rclb
xor
xchg
sub
mov
insl
test
mov
fnstcw
out
pop
or
adc
add
bound
mov
push
adc
arpl
dec
and
mov
xor
addr16
imul
movsb
inc
fdivl
flds
pop
roll
fmull
mov
movsl
push
fadds
outsb
and
out
adc
rcl
dec
xor
in
inc
out
into
mov
push
or
mov
mov
push
hlt
mov
lds
mov
xchg
imul
sub
scas
ljmp
jecxz
mov
aad
adc
subb
mov
jp
pop
push
mov
mov
dec
sub
out
ret
dec
loop
mov
mov
scas
negb
lock
lea
pop
out
inc
dec
movsb
push
repnz
lock
jg
pop
adc
or
sbb
idiv
hlt
icebp
in
jg
sub
adc
lock
xchg
cmp
addr16
mov
iret
popa
adc
leave
sub
inc
cs
push
cld
jmp
sti
push
mov
ds
push
ja
cmpsl
popf
push
adc
mov
dec
jle
out
sbb
or
lcall
stos
push
mov
mov
pusha
xchg
mov
mov
js
inc
dec
push
hlt
or
gs
bound
mov
xchg
cld
sbb
lret
cmpsl
fcmove
jne
les
mov
xchg
cltd
push
icebp
cmp
lds
jmp
push
and
stc
movsl
cs
adc
sbb
lods
fucomi
jnp
mov
dec
sub
add
in
mov
dec
enter
mov
or
repnz
adc
and
pop
js
sbb
dec
fldenv
test
xchg
mov
cmpsl
pop
into
jecxz
xor
mov
add
mov
cmp
xchg
test
out
cmp
push
jns
cmpsb
add
xchg
inc
and
and
popa
stos
sbb
xchg
push
dec
cmpl
addr16
sti
adc
sub
push
mov
dec
mov
mov
sub
add
adc
fld
das
sbb
movsb
outsb
cmp
sub
gs
add
and
movsb
add
push
jno
js
add
mov
movsl
or
aad
xor
cli
xchg
sub
jle
sbb
aas
out
cmp
int
pop
xor
testl
fcoml
popf
mov
mov
outsl
popa
mov
popf
imul
push
mov
cmp
fmulp
pop
cmp
scas
add
outsb
mov
cmpl
push
fisubs
pop
popa
lret
cmp
je
lods
shll
push
mov
sbb
jns
aas
xchg
adc
stos
scas
mov
pusha
mov
scas
pop
sub
jne
or
shll
insl
adcb
fdivrs
test
movsl
sbb
xor
outsl
mov
addl
mov
outsl
sub
xchg
mov
rcrl
adc
jno
cmp
daa
sub
mov
and
popa
les
and
aam
pop
add
inc
and
add
lock
sahf
mov
mov
mov
rcr
int3
and
imul
sahf
pop
pusha
push
adc
lods
jb
cld
push
inc
mov
xor
add
rorb
sbb
inc
push
aam
cli
inc
push
fsubr
and
imul
inc
jmp
icebp
cmp
mov
push
outsb
or
or
je
ds
into
lcall
arpl
jo
fwait
idivb
xor
xor
imul
pop
stos
pop
and
fadds
xchg
arpl
aad
mov
adc
lock
in
and
sti
test
call
dec
cmpsl
outsl
iret
out
pop
repnz
leave
sahf
inc
and
and
pop
repz
sbb
mov
iret
hlt
divl
xlat
cld
add
es
add
repz
push
jns
jno
js
mov
aaa
loop
cli
fdivrs
mov
mov
fisubrs
ret
mov
stos
xor
fs
js
addr16
sbb
fnstsw
repz
xchg
push
lcall
sahf
out
mov
push
jno
inc
ds
mov
jmp
pop
je
outsb
cli
inc
pop
cmpsl
sahf
pop
mov
mov
inc
mov
adc
les
push
sbb
cmp
xchg
call
push
in
movsl
jnp
call
pop
push
jmp
arpl
aad
ja
add
imul
pop
jp
fisttpll
xchg
aaa
or
inc
out
in
inc
mov
addb
sbb
fidivrl
fidivrs
sbb
rol
adc
mov
mov
stos
shr
sub
sub
pop
cmp
pusha
data16
gs
stos
sbb
fsubrs
mov
lahf
dec
xchg
lea
sahf
lods
and
sub
or
imul
movsl
aas
or
movsb
fldcw
pop
mov
mov
dec
ljmp
push
nop
push
das
stos
inc
sub
add
fldcw
dec
xchg
sub
ds
push
fwait
xor
insb
jae
shrb
enter
lods
pop
or
call
inc
add
cs
ss
xchg
fmull
xchg
dec
and
xor
fldcw
lods
push
clc
or
pop
stos
sbb
nop
dec
xlat
orb
test
repz
pop
sub
jo
adc
jge
lock
popf
dec
daa
cmp
and
ja
add
into
jp
adc
int3
mov
mov
outsb
cmp
mov
jecxz
cwtl
or
int
jg
shrl
sbb
or
rorl
cli
jnp
sbb
cs
sub
stos
loopne
iret
data16
mov
pop
xchg
adc
sbb
rcrb
lret
and
sub
scas
cmpsl
fs
fistpll
test
lret
pop
jno
xor
jmp
ljmp
lahf
pop
notl
push
cmp
fwait
lds
addb
fimuls
inc
fdivp
xchg
pop
popf
dec
adc
push
jp
xchg
fisubs
scas
mov
jno
add
add
pushf
xchg
lcall
movsb
notb
loope
pusha
cmc
adc
out
cmpsb
add
fwait
mov
mov
cld
inc
mov
push
loop
ret
xor
sahf
jl
rcrb
cmpxchg
adc
dec
lods
arpl
incl
xlat
aaa
inc
adcb
pusha
sahf
je
stos
pop
xor
pop
xor
pop
adc
pop
ds
daa
lods
push
mov
cmp
sbb
xorb
add
rclb
push
gs
out
xchg
sarb
sub
dec
imul
mov
lcall
int3
adc
jno
ss
fidivrs
and
iret
pop
sub
push
cmp
ret
cmp
xchg
push
inc
sub
repz
into
and
negl
cli
jb
push
sarb
push
lds
sub
aad
jnp
nop
int
popa
test
adc
or
mov
scas
mov
inc
loopne
xorl
das
ficomps
xorl
add
popa
cltd
adc
mov
pop
lret
mov
cmpsb
loop
dec
jbe
lds
leave
fcoms
cmp
add
adc
in
aas
inc
sub
rcl
adcb
ss
movsl
push
xor
js
sbb
sub
mov
jp
rorb
daa
xchg
fisttps
jnp
cli
mov
cmp
push
adc
stos
jae
inc
aad
push
jp
xchg
cwtl
xor
push
and
inc
push
push
mov
push
mov
jp
lea
push
and
aas
insb
popa
mov
lret
add
cmpsl
sbb
addr16
push
gs
jge
scas
xor
mov
mov
cmp
ja
inc
repnz
insb
lahf
idivl
notl
je
mov
or
xrelease
adc
movsb
imul
cmp
stos
ret
push
imul
jb,pt
inc
push
aad
es
push
icebp
sub
mov
pushf
std
das
push
inc
and
aas
lahf
ljmp
loop
mov
or
ret
hlt
mov
lods
dec
xor
dec
push
punpckhwd
jl
or
sub
pop
into
xor
ds
pop
add
ret
scas
xchg
int
test
mov
sarb
loopne
jae
sub
outsb
mov
out
dec
or
test
repz
pushf
mov
pop
and
out
or
adc
gs
mov
cltd
inc
push
les
test
nop
arpl
movsl
out
sub
fcmovnbe
repz
sub
dec
jne
imul
leave
lret
or
mov
add
repz
in
in
pushf
jae
add
sahf
dec
clc
enter
addr16
sbb
pop
nop
adc
andb
sbb
stc
jb
sahf
fwait
sbb
sub
mov
das
imul
inc
mov
mov
in
daa
insb
pop
shlb
rcll
push
dec
jg
sbb
xchg
jg
clc
fnstsw
into
es
ret
popa
cwtl
jnp
test
lret
mov
push
aaa
andb
mov
sub
add
fs
movsl
dec
aas
pop
cli
movsb
outsb
inc
mov
cmp
mov
jns
jge
mov
or
mov
jl
test
mov
sbb
movsb
or
adc
sub
insl
lods
push
or
and
movsb
shl
ret
dec
xchg
mov
sub
ror
outsl
pop
mov
mov
mov
sub
mov
aas
xchg
cmc
jne
add
jnp
fldl
adc
push
lds
sub
jae
aaa
outsb
insl
xlat
mov
ret
xchg
mov
inc
mov
and
sbbb
call
shll
das
sbb
or
pop
lret
pop
shlb
arpl
add
cmp
lock
xchg
sbb
jl
jnp
pushf
add
fs
movsl
push
adc
mov
lock
cmp
xor
clc
out
mov
lcall
xchg
int
pop
push
sub
shl
fimuls
xor
sti
shrb
je
mov
sbb
cmp
jmp
in
lods
inc
cmp
push
mov
mulb
es
add
dec
mov
aas
subl
jo
jmp
repnz
adc
scas
repnz
sub
lret
mov
push
iret
mov
in
lret
vpaddq
jmp
iret
pop
ljmp
inc
mov
push
fisubrl
packsswb
outsb
int
or
xchg
and
dec
aas
inc
ja
inc
or
jns
pop
roll
and
jb
ret
fbld
lahf
mov
iret
mov
int
mov
pusha
insl
inc
mov
lea
inc
adc
or
fcmovnu
std
add
stos
sub
xchg
fdivr
cmp
outsb
jno
stc
cmpsl
mov
inc
mov
inc
bound
rclb
and
popa
mov
das
push
mov
and
loop
jb
fidivl
loopne
cli
mov
dec
dec
pushf
dec
cld
sbb
push
repz
cmp
inc
inc
dec
call
and
xor
or
sti
jl
push
mov
daa
push
orl
inc
sub
outsl
pop
push
fsubrl
lods
sub
mov
jp
push
or
lea
adc
dec
or
mov
xchg
add
push
loope
mov
push
push
shrl
mov
lods
pop
cmp
xlat
dec
cmp
inc
adc
xlat
call
or
fs
jmp
fdivs
enter
mov
cmp
ja
mov
lods
dec
jle
aad
scas
lahf
and
in
pop
lods
sbb
xor
pop
test
leave
mov
push
cmp
or
fsubrl
cli
dec
mov
aaa
jns
int
xor
jno
in
sub
cmp
scas
fiadds
and
in
push
or
mov
sti
jmp
jbe
inc
ret
mov
xchg
jg
and
rolb
pushf
subb
ret
out
add
pop
lret
call
inc
ret
push
mov
sub
jno
popl
xchg
add
outsl
dec
pusha
aaa
loope
lret
ljmp
outsb
jns
or
test
test
lods
pop
les
xor
jns
mov
sbb
cli
mov
and
out
mov
mov
jmp
ljmp
jl
mov
mov
add
pop
jne
andl
pop
push
ret
pop
je
imul
pop
push
jb
lock
sbb
cltd
mov
data16
cs
add
insl
es
jne
xlat
insb
aas
and
nop
pop
adcb
pop
mov
jae
mov
pop
fsubl
cmp
mov
scas
out
cmc
and
out
lods
repnz
das
out
adc
in
jbe
dec
mov
in
mov
push
insb
int
cmc
or
push
pop
icebp
jno
xchg
fdivrl
stos
mov
int
mov
js
in
inc
in
cwtl
cmp
ja
adcl
xchg
addr16
jle
or
test
push
jns
cmp
jle
hlt
mov
fmuls
push
rorb
mov
xor
cmpsb
pop
insl
icebp
je
dec
dec
adc
in
cmp
or
jge
imul
cwtl
sbb
push
scas
es
test
mov
out
jmp
mov
cli
jmp
mov
ss
je
sub
cmp
daa
fistps
out
repnz
das
sbb
pop
hlt
mov
ficompl
jp
in
jo
es
stos
mov
call
sub
or
sub
add
add
inc
fwait
outsb
les
jb
add
int
icebp
test
pop
fistpll
sub
dec
push
xlat
popf
or
std
jo
mov
test
inc
pop
into
insb
sarb
pop
jp
in
dec
scas
add
push
sarb
xchg
pop
adc
push
ljmp
popf
movl
arpl
ss
and
ljmp
mov
cli
push
hlt
cmpsl
sub
rcrb
stos
mov
xchg
hlt
sub
dec
cmp
ret
sbb
rcll
test
clc
hlt
mov
adcl
movaps
hlt
push
in
xor
cmp
dec
jae
lods
or
fistpl
mov
rclb
sti
ficompl
add
fdivrp
imul
dec
lret
dec
mov
mov
push
repz
sahf
scas
mov
shl
mov
mov
stos
out
mov
adc
jl
mov
repnz
jl
mov
lods
adc
add
pusha
push
inc
sub
or
or
and
addr16
xchg
mov
popa
mov
add
out
cmpsl
ret
sarl
lds
dec
adc
xchg
repnz
cli
jno
xor
mov
jns
mov
pop
into
nop
es
iret
in
aam
push
dec
jo
adc
test
enter
xchg
aam
sub
mul
jb
cmp
sbb
lcall
sub
out
xchg
cmp
clc
xchg
fisttpll
repnz
cmp
and
dec
mov
mov
adc
pop
outsl
cmp
cwtl
push
or
rclb
jp
lods
in
std
decl
xor
or
jo
and
jb
mov
idivb
jmp
jg
cltd
loope
mov
fdivrl
mov
push
jle
pop
push
push
mov
jmp
iret
fwait
ss
nopl
dec
aaa
mov
lcall
das
push
mov
sbb
and
sbb
data16
cwtl
push
into
sub
mov
or
mov
in
mov
xchg
lods
lcall
jne
in
inc
jae
outsb
fwait
mov
arpl
hlt
or
mov
xchg
or
insl
pusha
ljmp
jae
inc
out
fadd
mov
pop
jl,pt
or
jg
shlb
jne
push
sahf
stos
sub
out
lcall
xor
das
rclb
jle
sbb
out
shrl
popa
sub
loopne
gs
mov
jb
dec
add
fstpt
mov
mov
inc
movsb
jg
inc
notb
pop
xchg
cmp
push
fs
jbe
mov
stc
fistpll
jge
aas
jae
dec
add
sbb
das
xchg
adc
and
cmp
pushf
pop
adcl
add
lds
inc
mov
les
push
cmpsl
pop
push
cmp
or
mov
mov
mov
dec
bound
inc
sub
and
mov
inc
push
repz
incl
push
push
inc
fst
call
push
cmp
das
mov
stos
and
rcl
dec
pop
mov
pop
and
cmpsl
jp
mov
pop
add
sbb
jmp
dec
ds
mov
aaa
add
inc
fsubrp
fwait
or
add
xor
pop
std
sbb
je
je
mov
in
pop
push
and
dec
adc
sbb
mov
sbb
hlt
mov
sub
clc
sub
sti
sub
push
out
push
sbb
pop
mov
inc
incl
sbb
dec
das
mov
sbb
mov
pop
cmpsl
shl
aad
dec
scas
cltd
mov
xor
fildl
inc
mov
xchg
mov
dec
popa
push
lods
in
jbe
lock
cltd
repnz
sarb
cmp
mov
pop
aaa
lcall
add
ficoml
sbb
stc
out
dec
into
sbb
loop
and
in
sti
mov
repnz
in
pusha
add
sub
push
push
pushf
lret
loop
mov
jge
inc
sti
int
repnz
xor
fisubrl
mov
xchg
js
addr16
fistpll
shrb
and
dec
test
mov
jno
ret
xor
dec
lcall
mov
cmpsl
jge
repz
inc
cmc
testb
dec
addb
mov
xchg
mov
popf
and
add
push
fsub
pop
xor
pop
aaa
jge
sti
xchg
add
mov
daa
int3
pop
or
addb
inc
adc
or
sahf
pop
mov
cmp
andb
add
andl
mov
cmp
sub
or
cmp
dec
inc
push
jae
add
clc
xchg
aad
icebp
mov
fbstp
das
aaa
mov
mov
icebp
sti
push
inc
daa
nop
xor
lods
jle
lcall
adc
xlat
fxam
adc
lret
fistpl
fmulp
lds
divb
pusha
shlb
mov
and
lock
jp
inc
sbb
aam
andb
mov
jb
inc
repnz
lods
xlat
mov
movsl
aad
hlt
test
aad
pop
push
mov
xchg
dec
lret
jne
stos
test
pop
mov
adc
arpl
sub
mov
rcrb
sub
fsubrs
sub
jge
cwtl
jo
push
mov
jae
out
dec
push
lods
arpl
in
sub
shl
repnz
aad
jno
dec
test
adc
mov
outsl
je
cmp
add
mov
jno
dec
fmuls
ja
cmovae
test
mov
aad
into
call
sbb
or
fistl
push
insb
lret
xchg
in
inc
pop
mov
adcb
bound
testl
xchg
jne
cmp
add
add
add
sub
pop
scas
jle
out
dec
aam
jle
jo
insb
stc
push
dec
popa
popw
xor
rcrb
mov
push
out
loopne
cmpsb
fmul
jno
les
xor
in
lds
add
fdivr
dec
mov
or
subl
pop
mov
or
push
test
mov
rcl
jae
pop
jl
cmp
and
add
cmp
dec
mov
and
cmp
mov
scas
mov
out
repz
das
dec
adc
icebp
dec
sbb
or
cmp
fldenv
jno
add
pop
jp
call
fwait
push
pop
daa
add
sbbl
mov
cmp
rolb
jge
adc
cmp
ja
addr16
xor
adc
fimull
mov
adcl
jle
push
lret
int3
mov
in
shlb
cld
pop
xchg
fwait
jl
adc
and
mov
paddb
push
pop
in
mov
rcll
jns
dec
popl
mov
cmpsb
mov
dec
inc
outsl
cltd
lods
dec
push
mov
movsl
jg
mov
leave
lret
mov
push
add
jno
sub
pop
inc
xchg
jae
adc
fisttpl
adc
das
or
pop
cmp
mov
imul
xchg
iret
test
popf
imul
nop
daa
data16
js
in
adc
loopne
add
dec
mov
adc
mov
and
or
out
subl
and
int3
mov
sti
mov
xchg
data16
add
roll
sbb
lock
mov
add
sub
daa
push
lret
ja
mov
fnstcw
cmp
mov
movsl
mov
ret
shlb
jbe
sub
cmpsl
mov
push
xor
lcall
pushf
xor
and
ja
out
stos
test
jmp
cmp
repnz
xchg
je
insl
and
dec
insb
sbb
mov
loope
and
jo
adc
out
je
fldl
push
call
fwait
or
cmp
mov
lcall
add
into
nop
pop
mov
fcoml
ja
dec
mov
xor
popf
and
mov
icebp
sarb
repnz
mov
ret
pop
mov
lods
scas
mov
js
inc
loop
sub
jl
pop
mov
add
out
jmp
and
mov
pop
rcrl
and
mov
mov
movsb
repz
loop
mov
jp
cmp
xor
and
mov
sbb
fs
add
scas
shll
filds
pushf
mov
mov
add
sbb
and
xchg
call
inc
call
xor
popa
sub
mov
popf
sbb
dec
roll
out
sbb
push
pop
pop
insb
iret
dec
dec
aas
test
das
shl
mov
mov
inc
mov
lcall
jl
ret
xchg
cmp
jo
push
out
mov
aam
xchg
leave
xchg
pop
sbb
loope
loope
loop
test
icebp
or
pop
outsl
scas
mov
xchg
rcll
pop
iret
adc
xor
iret
sub
ss
xor
push
add
pop
addl
rcll
mov
xchg
jbe
sti
add
inc
test
sbb
mov
sahf
leave
dec
xor
arpl
out
pop
repnz
es
xchg
mov
insl
into
out
mov
testl
int
dec
repnz
dec
ss
out
xchg
cmpsb
sub
shl
outsb
add
cli
xchg
aas
mov
sbb
sub
dec
arpl
mov
push
jae
adc
clc
ret
sub
leave
or
inc
fbld
inc
add
enter
dec
jns
lods
adc
pop
jge
xor
cmp
pusha
inc
pop
xor
ret
gs
or
sub
mov
sub
pop
jns
jl
xlat
test
addr16
pop
test
mov
inc
mov
loopne
mov
test
xor
insb
xchg
sbb
data16
mov
adc
test
ja
outsb
into
sbb
cmpsb
lods
lock
xor
out
mov
sbb
mov
call
stos
imul
enter
lcall
push
inc
push
int
jb
and
orl
les
rcrb
lock
aaa
jns
lahf
popf
xchg
and
sub
adc
mov
lods
fcomps
ret
sub
adc
enter
fcmovu
jmp
inc
mov
xchg
xchg
fcomi
pop
or
clc
jne
daa
or
hlt
jg
lret
enter
arpl
adc
fs
lods
out
sbb
nop
sbb
xor
adc
xor
xor
jle
cmp
jle
mov
test
lret
sub
inc
jo
sti
es
jb
pop
cltd
enter
andb
adc
fwait
rorl
cltd
mov
xchg
cmp
nop
fcompl
popa
xor
jp
repnz
xchg
out
adc
sbb
pusha
lret
cmp
scas
loop
jle
scas
ret
cld
in
cmp
daa
call
daa
adcl
mov
clc
pop
ds
mov
dec
cmp
xor
sbb
cmc
lea
ds
std
push
cmc
pop
cmp
mov
add
jg
push
arpl
cmp
xchg
stos
push
fisubrs
ss
cld
fwait
mov
in
push
imul
xor
jge
ret
sub
mov
pop
mov
xchg
pop
and
sub
std
mov
adc
push
pop
ljmp
out
rolb
test
loopne
xchg
repz
cmp
pusha
inc
cmp
jno
inc
cmp
rcrb
adc
add
out
and
xchg
xchg
flds
imul
std
jae
test
xor
lds
subb
push
inc
sub
rep
and
stos
call
mov
inc
js
xchg
iret
test
aad
sbb
add
pop
adc
icebp
iret
xor
mov
pop
or
xlat
and
scas
push
mov
and
xchg
or
or
ret
cmp
adc
repnz
dec
lea
hlt
cmp
jne
jl
inc
repnz
or
adc
in
sub
dec
scas
ror
inc
or
sub
jp
push
xor
cmpsb
xor
mov
push
sub
dec
cwtl
int
push
adc
fwait
sub
mov
inc
test
repz
loopne
adc
pushf
cmp
out
gs
test
imul
int3
sub
or
daa
jp
repnz
mov
bound
mov
cmpsb
pop
cmp
mov
push
sqrtps
loope
adc
leave
aam
sbbb
xorl
inc
mov
daa
inc
jle
test
jp
xor
out
out
test
lahf
shl
pop
mov
push
daa
mov
or
and
dec
lock
or
inc
push
push
fisttpl
imulb
daa
mov
imul
aas
sbb
lcall
mov
push
lock
inc
sub
cwtl
js
mov
mov
mov
mov
xchg
mov
add
fildll
xor
jb
xchg
sub
loop
lods
es
sti
dec
cmp
adc
xchg
sti
shr
imul
adc
push
testl
inc
adc
std
ret
jle
jo
cmpsb
cmp
mov
push
add
cmpsl
pop
mov
jnp
xor
call
addb
outsl
mov
sbb
push
movsb
ret
out
in
adc
add
fisubs
cwtl
sub
jnp
pushf
dec
adc
ljmp
outsb
inc
scas
in
xchg
jge
data16
out
test
shr
ret
sti
cmp
cmp
xor
ret
hlt
add
movb
loope
loopne
ret
int3
sub
in
xor
push
inc
movsb
inc
inc
or
loope
xchg
adc
xor
dec
in
fwait
mov
mov
sbb
inc
icebp
inc
arpl
pop
orb
jns
inc
movsb
js
mov
jmp
icebp
cmp
mov
mov
adc
pop
mov
jno
lods
in
cltd
mov
pop
in
ds
cmp
mov
clc
push
xchg
push
pop
inc
mov
ds
add
hlt
cmp
inc
iret
and
mov
xchg
sahf
push
imul
outsb
data16
sbb
mov
xor
cltd
aaa
inc
out
xlat
adc
sbb
jbe
cmc
neg
xchg
cmc
fsubp
xchg
out
clc
cwtl
incb
dec
jmp
aam
xchg
lcall
add
sbb
fdivr
push
jmp
add
rcrl
insl
fninit
jne
lret
fldl
hlt
daa
jmp
test
lahf
xchg
cli
nop
ljmp
inc
roll
or
jb
mov
test
ljmp
sbb
mov
pop
sbb
dec
std
xchg
pushf
popa
movups
out
fwait
push
movsl
xchg
pop
push
shll
jle
test
mov
stc
inc
push
frstor
jo
or
sbb
jbe
push
push
into
mov
les
sub
inc
jne
jge
jmp
rorb
dec
xchg
es
push
mov
cmpsl
add
test
mov
push
lods
std
push
xchg
or
pusha
xchg
push
pop
xlat
jne
xchg
inc
push
pop
pop
mov
mov
cwtl
out
add
or
subl
xlat
sbb
and
inc
bound
daa
mov
jp
fwait
adc
scas
mov
sub
addb
dec
mov
and
pop
imul
movsb
outsb
hlt
mov
leave
imul
out
jecxz
int3
adc
pop
push
jns
and
add
filds
pop
sbb
mov
scas
cli
jnp
jb
mov
mov
hlt
mov
movsl
je
jae
add
inc
aam
jne
mov
mov
lcall
iret
cmpsb
cmc
and
and
js
inc
popf
repnz
xchg
push
adc
clc
rcll
dec
mov
das
pop
xchg
mov
test
push
sbb
add
testb
fucompp
sahf
cmpsl
in
jns
iret
pop
add
pop
mov
lea
rclb
ds
dec
adc
sub
in
or
and
hlt
push
ljmp
lock
fstpl
xchg
xor
ss
and
jno
pop
cmp
add
and
cmpsb
sbb
repnz
push
test
loopne
xchg
pop
xchg
jae
mov
mov
or
insl
xchg
fisttpll
mov
sub
cmp
sub
jmp
scas
adc
fidivrl
jae
inc
call
jecxz
fwait
pushf
mov
xor
mov
movsl
dec
mov
jg
inc
and
sbb
cmp
loope
andb
pop
imul
inc
xor
ror
sub
lods
es
pop
mov
sbb
movsl
jle
daa
shrl
push
loop
int
les
dec
das
fwait
or
push
jbe
clc
aaa
addr16
dec
mov
xor
cmpsl
sub
outsb
push
es
scas
fbld
sbb
xlat
sarb
xchg
or
xchg
negl
sub
inc
inc
arpl
aad
cmp
inc
sbb
jecxz
mov
mov
push
loope
cmc
add
add
into
sub
push
lret
insl
jmp
rorb
mov
mov
stc
daa
jge
and
mov
insb
das
mov
es
push
ret
scas
cltd
inc
cld
lret
mov
lahf
pop
jp
mov
aad
jne
pusha
push
mov
inc
mov
dec
push
sub
jecxz
cmpsb
adc
xchg
movl
fists
adc
lret
push
int3
jns
jae
repz
adc
fidivs
cltd
std
mov
cmp
mov
out
mov
inc
andl
mov
popf
imul
mov
and
nop
ljmp
sub
sub
std
movsl
pop
fdivrs
cmp
xor
daa
xchg
jle
out
jno
sub
dec
push
mov
popf
loopne
add
xchg
jmp
mov
ret
and
sbb
data16
outsl
fnstcw
pop
cmp
enter
add
into
mov
xchg
inc
jns
cmpsl
and
fadds
jns
mov
dec
add
jbe
leave
lods
lcall
mov
lds
cmp
movsb
jle
out
daa
shl
sahf
lret
lock
push
sbb
push
subb
into
imul
xor
int
inc
jne
inc
inc
dec
mov
out
rclb
cltd
hlt
lret
xor
and
iret
jns
ja
movsb
iret
ret
lds
push
push
fcomps
mov
xor
cmp
lods
inc
fs
xor
stc
fs
push
mov
pop
std
hlt
cmc
push
jmp
aam
shrl
xor
push
ret
les
out
jp
xor
loope
push
outsb
test
add
fsubrs
test
ret
popa
xchg
ror
mov
mov
sbb
mov
pop
lret
jl
scas
adc
mull
jbe
out
push
pop
push
push
aaa
jecxz
fadds
or
in
mov
inc
rcll
test
cmpsl
xchg
xchg
sbb
popf
mov
ficomps
adc
shll
jmp
pushf
and
adc
or
rorl
movsl
pop
push
or
pop
addr16
push
push
leave
fildl
sbb
push
cmp
lret
cltd
mov
aas
cmp
inc
jp
loope
daa
push
cltd
lret
jno
ds
cld
inc
sti
jge
mov
push
xor
cmp
test
lods
inc
imulb
dec
rclb
jno
adc
adc
adc
mov
mov
inc
and
cmp
nop
and
ret
dec
out
sti
test
test
cmpsl
cmpl
mov
push
push
cmpsb
xchg
repz
cmp
cltd
andl
mov
cli
jno
aas
sub
int
test
or
dec
test
mov
ror
jbe
ret
lods
cmpsb
aad
mov
je
mov
mov
xchg
jne
pop
push
dec
xor
dec
rcrb
cmp
jle
sub
inc
pop
push
mov
pop
testl
jne
outsb
push
cmc
jae
jmp
arpl
cld
mov
insl
lea
jb
pop
loopne
jb
test
dec
insb
or
mov
xchg
xor
adc
or
decl
push
scas
inc
fwait
sbb
mov
sti
jo
inc
lret
jl
fisttpll
repnz
shll
dec
inc
cltd
aaa
push
mov
pushf
xchg
int3
inc
popa
rorl
cmc
xor
xchg
stc
push
or
sti
cmc
pop
adc
push
mov
mov
lea
inc
jbe
push
je
pop
mov
lods
mulps
ret
testl
rcll
loope
loop
xor
dec
pop
fadds
sarb
scas
stc
and
xor
rcrl
xchg
scas
cmp
scas
idiv
adc
dec
ficoml
mov
mov
ja
mov
xor
rcrl
and
dec
mov
cmc
lock
aad
cmp
ret
and
mov
std
add
or
jmp
pop
lret
sbb
sbb
cli
sub
ss
jno
push
cmp
fs
inc
xchg
les
jl
inc
call
adc
adc
xor
mov
jmp
mov
jle
jle
xchg
daa
push
cmp
hlt
fcoms
xchg
movsb
add
imul
fisubs
iret
jmp
in
sub
add
jo
das
lods
sbb
jp
insl
fcmovne
push
cld
dec
add
and
cmp
lock
inc
stos
mov
lods
dec
stos
and
lahf
xchg
push
stos
jae
dec
or
xchg
add
add
test
cmp
sub
xchg
fxtract
lcall
mov
sub
pop
rol
cwtl
mov
adc
pop
inc
mov
add
sbb
addl
data16
inc
jl
fldt
data16
push
sub
loop
movsb
call
outsl
sub
mov
lock
in
cmp
mov
lret
insl
adc
push
sbb
or
cmp
push
dec
or
and
aam
jns
mov
sbb
ret
or
cmp
sub
rclb
test
loopne
repnz
sub
xlat
or
lods
jecxz
pop
fisubs
dec
push
xorb
stos
xlat
ss
lods
jecxz
sti
je
aaa
lods
fcomip
lods
push
add
cmc
loopnew
clc
lret
xchg
push
lods
loopne
enter
jae
pop
dec
pop
fisubrl
mov
mov
xchg
mov
jno
push
movsl
adc
outsb
mov
xchg
lods
stc
add
cwtl
push
push
les
lahf
adc
push
sbb
loop
pop
jle
subb
inc
and
aad
les
inc
pop
rcl
push
cmp
push
jno
dec
out
imul
pop
mov
mov
cmpsb
pop
hlt
dec
jmp
mov
xor
mov
test
jmp
add
or
sbb
push
mov
xchg
add
aam
mulb
dec
data16
cwtl
mov
es
lcall
lahf
sub
xchg
sub
sub
cmpsb
nop
ror
sbb
mov
mov
ret
sub
insl
aam
mov
jecxz
cwtl
xor
icebp
jno
out
shlb
lods
mov
jl
lods
bound
imul
pop
dec
jnp
clc
pop
inc
pushf
repnz
inc
icebp
jg
jle
iret
push
out
repnz
dec
and
hlt
dec
nop
push
cmp
test
jecxz
hlt
dec
cmp
fisttpl
insl
xor
pminsw
pop
xchg
out
lret
pop
inc
int3
test
add
movsb
add
xchg
addb
xor
inc
jbe
and
adc
add
aad
xor
ds
rcr
push
push
dec
pop
mov
jp
cmpsl
cmp
shlb
jmp
fisubl
cwtl
out
aad
adc
movsl
subl
push
out
dec
cli
sbb
call
mov
jp
into
cld
sub
sub
or
cmpsb
std
sbb
mov
mov
scas
int
gs
sti
and
es
frstor
push
pop
dec
idivb
cmp
mov
dec
fists
inc
or
pop
out
pop
mov
xorb
inc
std
cmp
push
loop
sub
dec
push
sarl
or
mov
xor
int
cmp
jnp
int
stos
jbe
push
lea
sarl
or
sub
rorl
cltd
mov
sti
pop
xchg
mov
fcmovne
lcall
in
sub
lcall
inc
test
inc
int3
andb
cmp
xlat
jp,pn
loopne
push
add
rcll
rcrl
shrb
cpuid
imul
scas
pop
lods
cmp
popf
ljmp
pop
mov
cmpsl
into
pop
lods
adc
mov
pop
jno
popa
fadds
mov
sub
cltd
inc
into
imul
add
pop
push
sub
incb
mov
mov
repz
dec
fcomps
cmp
std
xchg
and
mov
jne
mov
imul
jmp
into
out
xchg
inc
in
adc
and
adcb
push
mov
and
jb
inc
icebp
lock
or
stos
in
std
daa
mov
xchg
into
add
shrb
mov
fstps
in
test
cli
orb
add
cmp
pusha
in
xchg
repnz
test
xchg
jg
test
xchg
aas
lahf
dec
push
ljmp
call
push
call
int
leave
pop
hlt
sub
popa
shrb
fiaddl
push
lret
mov
jg
in
ret
push
sbb
cmp
or
repnz
ret
out
popf
jne
test
inc
cmpl
sub
insb
adc
aam
insl
add
int3
jnp
jmp
sbb
push
jo
push
push
insl
rcll
and
jle
and
adc
faddl
and
and
mov
push
sub
xor
dec
or
outsl
fsubl
jecxz
lcall
dec
jmp
and
popl
cwtl
ret
mov
xchg
mov
ja
fucomp
xchg
dec
in
sahf
dec
into
ret
xor
andb
imul
pop
inc
imul
js
push
hlt
or
mov
sbb
mov
xchg
mov
inc
vcvtss2sd
mov
inc
sbb
xor
ror
or
enter
xchg
call
lcall
movsl
xchg
inc
fwait
cmpsl
dec
xor
sub
mov
stos
andl
fidivs
insl
push
mov
mov
loope
sbb
dec
adc
int3
cltd
test
push
pop
xchg
mov
inc
jl
dec
jne
subl
pop
jns
jb
inc
outsl
fs
push
fdiv
aaa
fcomps
adc
mov
mov
lock
int
sbb
xor
mov
aam
aaa
add
div
push
int
cmpsl
gs
mov
push
add
or
dec
mov
outsl
les
pop
mov
sti
aam
int3
in
mov
fildl
pop
movsb
mov
addr16
outsl
push
add
push
adcb
jae
repz
test
rclb
bnd
ficompl
test
lret
out
xor
popf
inc
jmp
daa
jg
dec
hlt
sbb
xor
fdivrs
aaa
jns
push
loope
aad
daa
sbb
leave
std
and
in
add
jecxz
in
jl
aaa
imul
cmp
test
stos
and
outsl
sarb
pop
aas
fildll
in
sahf
in
leave
dec
sub
fnstsw
mov
jnp
add
mov
add
nop
popa
cmp
cmpl
addb
xchg
mov
jno
popa
jbe
pop
jno
subb
fadds
pop
jnp
sub
ret
mov
stc
je
inc
mov
subl
out
out
adc
sbb
jg
sar
xor
jb
mov
rorb
fisubl
int3
testl
ljmp
es
dec
mov
jp
lea
lods
imull
shll
jo
test
pop
inc
fldl
mov
shrl
flds
imul
inc
and
jmp
enter
sti
xorb
in
jbe
pop
xchg
outsb
sbb
add
mov
gs
cmc
jecxz
out
xor
aam
int3
nop
outsl
dec
stos
mov
pcmpeqd
and
mov
jne
lock
mov
sub
pop
sub
dec
mov
push
xor
pop
mov
cmp
popf
imul
sbb
xchg
cmp
add
or
adc
shl
add
leave
sub
push
and
cmp
insb
xchg
insl
jecxz
mov
lcall
mov
push
fsubs
ficomps
mov
push
dec
add
aaa
mov
fbstp
mov
or
out
scas
xlat
lds
subl
in
adc
out
dec
into
adc
adc
xor
ret
loop
scas
mov
mov
js
out
movsb
cmp
xchg
out
test
cmc
movsl
push
push
ret
in
les
pop
sarb
push
dec
hlt
js
outsb
jnp
inc
and
int3
in
aad
fwait
rclb
mov
repz
lock
mov
jle
cmp
fs
fs
sub
ljmp
popf
es
sub
jnp
xchg
adc
rcrb
xlat
cmovno
lods
stos
filds
dec
mov
xor
add
sub
and
xchg
and
jnp
cmc
add
inc
insb
rolb
test
jg
inc
clc
jle
jg
in
mov
leavew
inc
loop
mov
pop
push
je
jns
dec
sub
and
or
fdivr
adc
pop
mov
and
mov
lahf
shrb
imul
mov
sbb
xor
pop
test
or
xor
movsb
xor
addr16
mov
sub
bound
jecxz
fabs
add
fisubl
aas
aam
jb,pt
in
rclb
push
jl
jecxz
or
sub
cmpsb
in
call
test
mov
xchg
scas
mov
jge
popf
pushf
sbb
aas
pop
push
lahf
ljmp
movsl
mov
mov
loop
lret
sbb
ficoms
jae
or
loope
mov
jp
in
ficomps
cmpsl
jno
pop
insl
inc
sub
sbbb
lldt
out
stc
mul
jnp
push
outsb
sub
dec
cmpsb
sbb
aaa
je
push
movsl
pop
loop
mov
lods
pop
push
xchg
fstpl
pop
add
mov
cmc
push
popf
ret
fisubrl
out
xor
add
adc
add
mov
repz
pop
shlb
mov
adc
ss
fcmovu
mov
dec
fwait
add
in
test
cmp
or
scas
or
inc
cltd
lds
xchg
fdivrs
adc
fmull
jl
cmp
ja
sub
mov
jns
or
jo
sbb
dec
and
xchg
or
dec
into
inc
scas
push
test
xlat
sarl
out
test
or
sbb
mov
leave
rcrb
mov
mov
inc
ret
mov
push
xlat
imulb
lcall
xlat
bound
mov
lds
adc
inc
in
pop
rol
dec
push
adc
pop
mov
sub
in
test
into
stos
cwtl
cmpsb
adc
pop
xchg
int3
repnz
in
call
xchg
jnp
ss
sbb
jg
xor
fwait
mov
xor
das
sarb
sahf
pushf
fisttpll
dec
jg
xor
ret
lock
push
daa
and
dec
lahf
nop
add
aad
mov
ja
ljmp
movb
arpl
arpl
add
pop
adc
inc
mov
xchg
ss
cwtl
push
shr
clc
loopew
adc
test
xlat
subl
xchg
xchg
push
xor
sub
xlat
in
xor
hlt
pop
cmpl
loope
cmp
loope
movsl
push
jb
push
mov
fmull
jne
jb
es
xor
xor
xor
jo
mov
mov
adc
into
xor
pop
lcall
sub
jle
xchg
js
pop
or
dec
mov
xor
and
in
adc
push
stc
in
ficoml
aam
mov
shll
call
inc
dec
cli
ja
ljmp
nop
jae
cltd
ret
call
inc
out
out
and
push
sub
pop
cmp
xlat
inc
pop
movsb
xchg
mov
cmc
pop
insl
leave
xchg
lret
mov
adc
insb
xor
push
insl
mov
jg
dec
dec
std
sbb
adc
mov
cs
stos
ja
or
inc
jmp
mov
insb
stos
sahf
xchg
repnz
insl
cmpsb
push
std
sbb
int3
pop
push
pusha
mov
mov
push
insb
mov
jmp
test
mov
mov
sub
mov
mov
lds
test
les
sbb
insl
xchg
xchg
mov
std
mov
jmp
sbb
xchg
fcoms
mov
pop
adc
mov
roll
inc
dec
jle
lock
insb
push
mov
jne
fucomi
or
mov
cmp
cmpsb
mov
mov
pop
cmp
mov
fsubrs
test
movsl
xchg
ljmp
mov
push
pop
pop
cmpsb
lods
sbb
icebp
xor
cld
iret
mov
inc
jb
rcll
divl
loope
jnp
cmp
cmc
sbb
mov
jb
outsb
clc
outsl
mov
cmp
xchg
icebp
mov
mov
fcmovb
mov
lret
push
mov
mov
insb
sub
mov
and
cmp
shlb
fld
repz
dec
sbb
mov
mov
dec
stos
in
push
push
mov
fdivrl
xor
imul
popf
sub
incb
or
sarb
cmpsb
fiadds
cld
mov
lret
clc
into
out
or
xor
xorl
test
xchg
mov
pop
pop
jp
leave
dec
inc
in
in
into
sbb
mov
push
dec
bound
or
lahf
jne
adc
inc
enter
mov
sbb
repnz
lods
inc
mov
mov
dec
into
add
sub
test
pop
cld
jns
scas
jle
jp
shl
repz
jnp
xchg
xchg
sahf
imul
mov
in
or
in
testl
and
add
jmp
adc
addr16
sbb
or
cli
mov
mov
jg
add
pop
mov
push
inc
arpl
pop
adc
pop
rcll
enter
addl
cwtl
jg
sub
popa
jmp
addr16
push
int3
xor
jmp
xchg
fnstcw
xchg
mov
mov
dec
fsub
in
sbb
sbbl
test
mov
movsl
sub
pushf
adc
xor
jnp
mov
mov
add
std
fsubrl
mov
jl
call
je
lods
stos
ss
sti
push
inc
andb
dec
clc
xchg
mov
push
jecxz
mov
sub
cmp
and
lret
push
test
or
add
stc
cli
mov
push
pushf
fwait
movsb
push
mov
xor
aas
incb
outsb
sub
xlat
push
fnsave
fdivrs
sbb
dec
loope
pop
addl
dec
sbb
loop
ljmp
xor
test
ds
jbe
sub
rcll
add
scas
inc
cmp
jnp
lcall
push
pushf
xor
pop
imul
sbb
mov
in
bound
pop
xchg
sahf
push
stos
aas
xchg
in
xchg
imul
dec
push
xor
pop
jle
inc
hlt
push
movsb
xchg
fistpl
xchg
shr
jo
pop
lea
and
or
dec
movsb
jae
sub
pop
jne
and
mov
aaa
and
ljmp
cmpl
inc
incl
repz
mov
in
insb
xor
cmp
dec
insl
sub
pop
jg
cmp
lcall
cmpsb
jnp
rcrl
jae,pn
mov
mov
add
adc
popf
ja
adc
mov
outsb
aaa
sbb
xchg
xchg
lds
in
rcrb
hlt
sub
mov
arpl
int
scas
aad
inc
add
test
inc
pslld
int3
add
stc
gs
cmp
adc
and
mov
js
popa
jae
xlat
lds
fadds
stc
leave
orl
sbb
fstl
push
jle
lods
xchg
mov
sbb
cmp
pop
cmp
orb
dec
jp
and
clc
in
or
das
mov
pop
or
mov
sbb
fcmovbe
dec
and
mov
lret
test
pop
ja
inc
lret
imul
pop
repz
aas
dec
cwtl
adc
rorb
mov
rol
xor
inc
xchg
ret
adc
lea
inc
mov
out
repz
leave
or
movsl
mov
mov
adc
out
xchg
in
enter
mov
push
adc
mov
cmp
xor
cmp
xor
cmpsb
sbb
pop
sahf
mov
dec
jno
insl
sub
divb
mov
inc
iret
pop
and
pop
das
rcl
adc
lret
mov
mov
fcomps
jg
out
pushf
pushf
int3
int
pop
popf
ret
pop
cmpsb
movsb
pop
add
mov
pop
xor
sub
icebp
test
pop
dec
je
divl
push
in
xlat
nop
mov
out
sbb
stos
or
test
pop
mov
je
dec
add
inc
fwait
lods
mov
jns
inc
xchg
push
adc
xor
xchg
jp
test
cmc
xchg
out
fcoms
mov
and
mov
xor
cltd
jnp
enter
jp
cmp
addb
insb
mov
push
test
in
hlt
stc
xlat
jg
es
dec
out
sahf
push
stos
xchg
inc
sub
or
aaa
mov
sub
xchg
xchg
repz
rorl
aaa
or
xorl
inc
jbe
add
and
push
mov
or
sub
aas
push
push
xchg
enter
xchg
sahf
jnp
stos
cmpsl
rol
shl
mov
inc
shll
push
cmc
movsb
outsl
pop
mov
add
fcoml
adc
lea
data16
loope
add
and
adc
sbb
xlat
aaa
adc
pop
stos
cmp
in
je
ret
sub
pushf
jbe
pop
repz
icebp
popf
cwtl
cwtl
lods
test
sub
cmc
addr16
jle
aam
dec
mov
mov
ja
dec
pop
rol
push
ret
mov
push
fcomps
in
jmp
fimuls
cli
fwait
lret
mov
cmc
ror
mov
fwait
loopne
lea
call
push
fwait
adc
shll
mov
pusha
les
push
repnz
popa
dec
mov
adcb
xor
and
pop
in
cmp
dec
enter
cmpsl
inc
stos
out
or
cmpsb
mov
pop
test
inc
adc
inc
xchg
loopne
add
in
adc
pop
fs
adc
cmp
pop
out
pop
or
pop
pop
and
cmp
push
test
cmp
mov
mov
in
imul
fistpl
test
fmul
adc
push
bound
mov
test
pop
add
sub
ss
lcall
and
test
lea
mov
or
rclb
cmpsb
dec
rolb
sub
mov
push
xlat
push
xor
jns
stos
outsl
jl
mov
enter
addr16
bound
in
pusha
lock
cmc
ss
aas
loope
push
test
or
jns
add
pop
incb
data16
adc
adc
cmpsb
lcall
mov
rolb
je
mov
out
cltd
push
push
out
push
out
test
add
jns
or
mov
push
push
pop
xchg
xchg
int
push
pop
mov
in
dec
stos
shlb
cmc
push
push
mov
mov
rol
xchg
mov
xchg
cmpsl
in
jle
mov
lods
int
lods
outsl
jg
xor
dec
mov
nop
mov
outsl
bound
xchg
lds
repnz
push
shrb
jmp
dec
out
mov
jg
add
xchg
add
adc
lods
hlt
scas
mov
and
jbe
test
imul
xchg
sahf
sbbl
sbb
pop
lea
clc
adc
movsb
push
iret
push
dec
cld
push
xor
inc
cmp
fdivrl
xchg
pop
mov
rclb
mov
xor
cmc
push
add
lods
cmpsb
call
enter
movsb
inc
enter
sub
lock
sbb
or
jmp
fmull
xor
jns
bound
into
push
dec
sbb
pop
mov
out
mov
dec
icebp
fwait
addl
or
ja
xchg
scas
aam
push
inc
inc
out
rcll
or
jp
adc
mov
add
mov
repnz
out
std
mov
jl
mov
in
outsl
daa
ss
in
push
sti
std
lods
push
test
pop
fmull
negl
mov
or
xchg
nop
xchg
jle
inc
shll
and
sub
push
pop
fwait
mov
div
into
cltd
dec
insb
aaa
insl
and
mov
ljmp
mov
cmpl
and
jge
fadds
jo
jno
mov
xor
xchg
fmull
jmp
adc
cmpsl
sahf
mov
sub
movsb
push
push
push
fidivrl
movsl
mov
shll
sub
xor
adc
shlb
lods
in
test
sbb
or
test
pop
popa
mov
mov
aam
dec
les
rcrl
sub
push
push
xchg
and
add
adcl
outsb
js
sbb
clc
lret
inc
pushf
pop
cwtl
into
inc
jge
push
bound
adc
loop
and
or
lods
dec
test
je
push
mov
jp
xchg
xor
call
hlt
ja
aam
sarb
fs
mov
jb
stos
xor
xchg
add
cmp
or
mov
mov
mov
lea
mov
lcall
adc
out
cmc
gs
add
repz
stos
adc
sbb
xchg
sti
aaa
pop
std
xlat
push
or
in
stc
cmp
sbb
lret
jo
aam
push
mov
outsl
movsl
push
xchg
scas
cmp
xchg
push
into
fwait
nop
inc
cmp
lret
test
pop
mov
cli
sbbb
cld
enter
adc
inc
jmp
or
daa
jp
out
dec
dec
addr16
ret
add
sarb
xchg
mov
iret
cmp
outsl
jl
inc
test
mov
enter
or
pop
jbe
call
xor
add
fsts
cmp
xchg
cmpsb
sbb
stos
jecxz
and
stos
sub
js
add
lods
cmp
push
icebp
push
dec
or
push
les
popa
xchg
inc
lcall
enter
or
dec
sahf
mov
jno
add
push
adc
rcrb
pop
add
movsb
aas
xchg
and
sbb
push
mov
fcom
fisubrs
inc
cmp
jmp
mov
push
jo
cmovnp
adc
dec
clc
xchg
sbb
mov
xchg
shrb
addl
add
aas
cltd
lods
repz
cmp
fistpl
jne
or
outsb
mov
and
aad
and
in
pusha
jno
outsb
adc
ds
or
adcl
je
xor
cmpsl
daa
and
fildll
xchg
push
jge
xor
inc
out
repnz
jg
pop
mov
jo
nop
push
sbb
outsl
sub
fdecstp
int
mull
mov
cmpb
andl
mov
sub
mov
mov
jge
jbe
outsl
pop
inc
pushf
xor
and
insb
pop
roll
jnp
mov
cmp
dec
pop
xor
test
imul
mov
outsb
inc
jo
sbb
andl
sub
push
fstl
fwait
adc
movsb
sahf
xor
out
jmp
sbb
mov
mov
jns
mov
arpl
sarb
aaa
addr16
xor
gs
call
pop
sbb
scas
and
inc
out
pop
add
add
add
test
fwait
pop
fisttps
aaa
loopne
lea
jecxz
aad
daa
cltd
pop
or
jbe
add
gs
push
loope
mov
jmp
loop
sub
repnz
mov
pop
or
cli
icebp
mov
cmp
fmuls
ja
mov
or
out
mov
cmc
jne
sarl
les
sub
pop
lea
ret
mov
jne
repnz
icebp
adc
imul
sub
jb
lret
popa
fisttpl
incb
cmp
cmp
cmp
xchg
add
sbb
push
daa
dec
mov
sbbl
xlat
sub
cmp
cwtl
cmp
inc
add
ret
pop
int3
sti
mov
testb
stc
outsl
orb
pop
xchg
enter
sbb
dec
inc
xchg
push
inc
inc
mov
xor
lret
dec
xor
add
xor
dec
mov
dec
leave
mov
and
xchg
jnp
hlt
je
stos
dec
mov
leave
dec
mov
popf
mov
popa
lea
or
sarl
sub
adcb
add
das
inc
mov
or
inc
test
push
pop
lea
je
or
movsb
cs
pop
jbe
cmpsl
in
push
and
mov
add
push
jbe
mov
fadds
not
mov
xor
outsl
sbb
fistpl
or
xchg
mov
sti
xchg
ja
mov
cmpsl
push
es
lahf
adc
fstps
or
add
clc
inc
sub
cld
add
add
adc
xchg
add
test
out
lods
inc
out
inc
ss
std
push
mov
aad
pop
and
sbb
cmp
negl
cmp
daa
mov
sub
lret
int3
in
and
xor
lods
sbb
cmpsl
and
es
ljmp
int3
adc
mov
add
push
push
lret
neg
ret
fstpl
test
lret
cltd
push
sub
cs
pop
hlt
call
sbb
jmp
mov
mov
push
lea
sub
pop
aad
les
adc
mov
fists
repz
mov
lods
das
mov
and
or
popf
ljmp
mov
add
pop
dec
push
xor
mov
rcll
jg,pt
popf
bound
js
in
pop
jmp
repz
daa
or
imull
test
dec
mov
cli
cwtl
xchg
sbb
add
mov
popa
insb
mov
cmp
ret
imul
mov
shlb
sub
jle
sbbb
fsubs
std
push
fadds
pop
push
pop
stos
pop
lret
cmp
or
clc
shlb
add
iret
sbb
fisttps
setle
push
cmc
add
pop
inc
xor
jmp
aaa
add
jg
add
or
or
shl
xchg
push
cmpsb
sub
addl
and
mov
out
or
pop
lea
xor
add
leave
mov
aaa
cmc
inc
inc
repnz
fiadds
add
leave
jnp
jecxz
test
testl
pop
mov
cmp
xchg
sbb
dec
jbe
push
pop
movl
xchg
and
clc
ret
addl
jae
dec
mov
pop
sub
cmp
mov
les
stos
mov
test
xor
fdivl
pop
cmpsl
pop
loopne
dec
fstps
dec
fidivl
dec
cmp
mov
push
imul
xor
shr
adc
dec
jmp
jno
pop
cmp
arpl
xchg
lods
pop
psubq
add
movsb
dec
pop
jle
inc
mov
dec
ficoml
add
mov
out
int3
xlat
cmpsb
jp
movsb
std
loopne
push
inc
jbe
leave
cmp
or
stos
add
adc
adc
or
imul
fs
mov
ds
hlt
mov
lea
xlat
or
cltd
sbb
adc
aam
inc
cmpsb
movsb
rcr
sub
adc
adc
mov
int
fisubrl
or
ljmp
adc
sub
in
xchg
pop
xchg
inc
xchg
pop
cwtl
call
in
fistpl
mov
xchg
mov
stc
out
mov
add
or
mov
mov
jl
inc
cmp
es
ss
sar
leave
dec
dec
cmc
add
or
stos
sub
rorl
orb
pusha
dec
sub
push
pop
or
cmp
out
add
mov
xchg
xchg
outsb
orb
icebp
ljmp
out
xchg
add
cmp
ljmp
push
lock
push
test
lahf
mov
sub
xchg
stos
push
stos
jecxz
leave
mov
jl
mov
sub
dec
clc
jbe
pop
xchg
xchg
cmpb
sbb
push
daa
xchg
xor
sub
sbb
inc
sub
out
xor
aad
xchg
jnp
addl
addl
push
in
es
es
hlt
push
push
jg
mov
inc
push
sarb
insb
or
mul
mov
stos
loop
inc
pop
out
ljmp
jno
mov
lea
insb
cmp
sub
inc
movzwl
ror
fists
jmp
or
inc
lock
ds
in
out
push
mov
inc
xchg
lock
lea
test
add
inc
and
mov
lret
add
jbe
push
mov
mov
mov
cltd
mov
xchg
xchg
rcrl
mov
adc
je
fisubrl
pop
push
int
shr
push
push
mov
xchg
std
fdivrs
fdivrl
rcrb
adc
xchg
test
jecxz
jg
adc
xchg
test
sbb
loope
shll
push
clc
mov
mov
mov
jae
jecxz
push
push
jbe
push
xor
add
fcmovne
pop
in
jmp
mov
loopne
punpckhwd
mov
lea
pop
add
pop
cmp
add
pushf
cltd
push
loop
xchg
cltd
int3
insl
mov
jbe
mov
test
mov
xchg
out
and
outsl
lahf
addr16
xlat
std
dec
rorl
loope
popa
in
in
in
movsb
nop
popa
and
pop
inc
pop
jp
pushf
dec
clc
lret
mov
mov
bsf
push
repz
lret
adc
xor
mov
sti
xor
ss
xor
cmp
int
sub
adc
mov
sahf
shlb
mov
or
gs
adc
add
add
add
mov
fwait
ss
fistpl
aaa
test
loopne
jg
push
loop
notb
aad
lret
cmp
sti
or
inc
push
inc
push
in
fmull
push
js
test
mov
into
sbb
push
cltd
in
into
insl
xor
and
jbe
mov
mov
xchg
dec
loope
dec
add
xchg
pop
mov
xor
insb
aad
repz
push
daa
repz
cmc
inc
addb
outsb
push
add
mov
in
ret
rcrb
push
lods
fistl
out
pop
loopne
sub
cmc
mov
mov
aas
and
dec
cltd
imul
cwtl
lahf
sbb
cmp
sbb
repnz
push
inc
push
push
gs
dec
push
fwait
ds
pop
adc
mov
jnp
mov
mov
add
lret
xchg
jno
mov
cmpsl
pop
movsb
test
push
xorl
mov
mov
mov
add
jp
das
mov
jo
test
jae
pop
mov
inc
addb
cs
out
in
bnd
test
sub
xor
pop
and
stc
outsl
std
jl
push
aas
outsb
call
mov
xchg
jnp
in
add
mov
jno
outsl
mov
mov
xchg
xchg
mov
mov
xor
jo
shlb
or
rclb
outsl
push
pushf
aaa
out
lds
xchg
dec
inc
pop
pop
and
dec
jle
mov
jo
lods
rolb
sarb
mov
fcmovnu
sbb
inc
loop
les
mov
sub
sub
scas
rcrb
adc
xor
mov
mov
cmpsl
push
imul
iret
sub
jmp
es
test
test
and
scas
enter
mov
adc
mov
cmp
mov
sub
fcmove
insb
scas
mov
add
xchg
fyl2xp1
imul
or
sahf
fwait
pop
xor
dec
or
mov
clts
jl
sub
ja
movsb
ds
cli
scas
fdivs
call
sub
mov
dec
jne
pop
sbb
ret
aam
mov
ja
push
pop
mov
push
mov
loope
cmp
or
nop
mov
adc
int
movsb
sbb
adc
fdivp
imul
aaa
loopne
mov
leave
jne
scas
add
das
mov
and
jp
daa
stc
stc
dec
imul
lahf
xor
push
out
pop
mov
js
cmpsl
and
cmpsl
push
data16
gs
repz
inc
gs
popa
mov
lret
sbb
and
pop
daa
jg
fdivl
aaa
mov
mov
into
pop
pop
and
push
pop
and
cmp
loop
add
loope
es
mov
push
xor
or
ret
push
movb
push
pop
or
ficomps
dec
dec
mov
leave
xor
mov
add
data16
jecxz
sbb
dec
fwait
ret
xchg
add
xchg
repz
sub
fildll
and
inc
cmpsl
xor
enter
add
xchg
mov
sub
sti
imul
sub
jne
pop
xor
push
dec
push
mov
mov
flds
int3
pop
outsl
jne
ret
mov
sbb
mul
xchg
cmp
inc
push
in
xchg
mov
daa
aam
xchg
and
ret
jmp
sahf
cmp
int
sub
clc
mov
or
mov
cwtl
xor
sahf
js
sub
scas
and
push
mov
mov
push
mov
ja
hlt
fbstp
dec
and
xor
ret
mov
repz
sub
shll
pusha
mov
test
mov
mov
pusha
test
pushf
lods
mov
or
mov
cltd
adc
test
rol
idivl
fidivrl
test
popa
push
sbb
add
ja
cmpsb
add
sub
shrl
push
sbb
out
aam
jns
push
aaa
sbb
cmp
push
clc
gs
mov
faddl
jp
ficompl
adc
daa
lds
lods
or
lods
pushf
clc
sub
and
sti
and
jb
and
cwtl
insl
in
pop
or
mov
dec
sbb
test
out
idivl
xchg
push
sub
sbb
das
pushf
jge
pop
cmpsl
cmpsl
adc
data16
inc
js
jmp
fcoml
dec
mov
xchg
cmpb
and
fdivr
out
or
xchg
test
pop
xchg
jg
dec
jno
movsl
test
js
jne
call
add
add
add
inc
popf
mov
add
aas
arpl
cmp
cli
sub
ss
pop
push
subl
push
rolb
cs
inc
pop
flds
fucom
pushf
scas
notb
shll
call
lcall
enter
xchg
push
bound
cmp
test
mov
je
push
insl
push
add
fldenv
lea
dec
ljmp
dec
js
es
adc
loope
mov
imul
lret
add
dec
and
test
mov
mov
repz
fisubrs
rorb
ds
sub
mov
jmp
pushf
mov
and
cmp
adc
out
add
mov
enter
mov
loopne
pop
adc
out
test
jmp
xor
adc
daa
xchg
push
fists
scas
ja
mov
adc
adc
testb
pushf
dec
adc
cmp
fcmovnbe
pushl
pop
sub
loop
pushf
jl
shlb
push
mov
jecxz
nop
ja
sub
ljmp
xor
push
mov
cltd
lahf
push
mov
and
cmp
leave
inc
dec
dec
add
add
in
ret
pop
mov
inc
xchg
ret
mov
mov
icebp
push
pop
loopne
addr16
jbe
xchg
fsubr
and
add
push
pop
popa
add
xchg
jmp
out
sub
and
mov
das
xor
ja
es
loope
push
outsb
lea
imul
and
jno
push
in
pop
and
adc
je
lcall
repnz
push
out
push
inc
push
insb
jb
adc
push
mov
push
shll
xlat
aaa
testb
fisttpll
aam
test
dec
xor
stos
jmp
nop
mov
sbb
leave
cmp
ret
ja
push
mov
xchg
lahf
sbb
or
and
cld
shlb
inc
cmpsb
stos
popa
xor
pop
enter
sub
aam
test
repnz
sbb
in
inc
mov
je
add
cs
movsl
mov
xlat
inc
ljmp
out
clc
dec
insb
mov
rcrl
pop
fisttpll
sar
xchg
xchg
cmp
outsb
xor
iret
or
sbb
hlt
popf
jne
dec
jmp
das
dec
popa
daa
and
aad
and
stos
in
int3
sbb
imul
adc
loop
outsb
scas
push
or
hlt
mov
push
xchg
or
jne
enter
and
inc
shll
cmc
addr16
xchg
js
in
jecxz
imull
and
bound
pop
out
shlb
pop
lods
sbb
adc
push
pop
pop
and
lds
sahf
mov
out
mov
jo
xchg
sub
sub
imul
arpl
inc
test
xchg
adc
xor
negl
jp
mov
aaa
adc
pop
lea
or
imul
mov
sbb
and
fistps
add
dec
add
jg
sar
insb
fimuls
int3
add
and
aam
or
adc
add
or
scas
cmpxchg
xchg
shrb
push
mov
jbe
loop
fs
stos
inc
jb
cmpsb
dec
sbb
cmp
mov
push
ja
lcall
icebp
in
hlt
ret
insl
dec
adc
adc
int3
sub
jl
pop
enter
inc
loopne
cwtl
sub
and
jmp
insb
mov
sbb
push
fwait
sub
push
xor
int
je
imul
iret
adcl
dec
mov
popa
movsb
stos
fiaddl
mov
sti
jg
or
mov
mov
mov
sbb
or
js
jg
loop
xlat
and
in
lcall
and
and
pusha
xor
lods
cmp
lret
imul
xchg
pop
out
mov
imul
fmul
imul
sub
mov
or
in
sbb
pop
dec
test
jecxz
stc
inc
mov
mov
arpl
shlb
rorb
mov
cmpsl
push
bound
rorl
mov
loope
repz
cltd
lods
sub
dec
dec
pushf
test
adc
or
lods
pop
sub
lcall
rcrb
add
pushf
inc
and
lock
pop
inc
loop
cld
jae
lods
aad
es
int3
add
jge
add
ret
clc
add
push
mov
pop
ds
inc
pop
jno
ficompl
dec
and
add
sbb
data16
popa
mov
rorl
mov
in
jmp
jae
popf
lret
and
fnstsw
mov
stos
insb
cld
fdivs
int
mov
int3
push
xlat
mov
xchg
mov
call
flds
push
loopne
jecxz
cmp
and
ud2
mov
aad
js
pop
xchg
sahf
mov
shll
mov
mov
cmc
mov
inc
xchg
jmp
ljmp
data16
fnstenv
sbb
or
das
add
xor
mov
cli
pop
enter
arpl
rcl
jo
cmp
movsb
rcll
fnsave
or
popa
jo
or
mov
imul
xchg
pushf
add
cmp
outsb
push
loope
std
shlb
les
inc
mov
jb
rcrb
pushf
sarl
jo
test
jns
in
lcall
mov
and
cmp
shl
aad
shrb
adc
fsubrp
fidivrs
sub
das
xchg
cmpsb
lods
jne
cli
xchg
sub
movsl
cmc
mov
repz
adc
pop
stos
shl
adc
lds
inc
mov
outsb
divb
cmp
cwtl
ds
call
sti
into
imul
add
pop
shll
mov
push
cmc
pop
bound
sbb
sbb
xor
mov
or
or
cs
mov
out
cwtl
inc
sbb
and
inc
incl
movsl
push
inc
fxch
adc
test
mov
mov
push
or
sbb
lret
fwait
pop
mov
sbb
mov
out
fnsave
nop
ljmp
cmc
gs
test
dec
jo
and
mov
pop
dec
scas
int
outsb
cld
cmpsl
pushaw
lods
leave
push
lds
cwtl
lock
fstpl
dec
mov
out
rcrl
xorl
add
dec
cmp
cwtl
mov
push
mov
push
xor
inc
mov
sahf
inc
jae
sub
mov
sbb
cmp
sub
pop
insl
sbb
jno
and
lret
jbe
mov
and
sub
xor
out
mov
sub
xchg
flds
or
je
jae
inc
call
adc
pop
dec
ret
in
mov
call
mov
in
adc
pop
fcompl
and
xchg
sub
cmp
mov
loopne
pushf
rcll
pop
pop
lods
push
pushl
xchg
out
mov
aam
push
test
int
adc
clc
sti
sbb
adc
mov
inc
mov
jge
mov
mov
add
fldl
scas
ror
out
jns
mov
jge
dec
mov
out
inc
xor
sbb
xor
inc
push
dec
loope
inc
and
ja
xchg
stos
mov
cwtl
jge
cmc
mov
sub
in
icebp
xchg
or
stos
jo
add
clc
pop
cmpsl
insl
jno
jae
xlat
mov
xchg
std
xor
xchg
lahf
ds
adc
ficoml
stc
lahf
mov
push
inc
push
fstps
les
sub
addb
mov
lahf
insl
loope
cmp
fst
add
mov
cmpsl
test
adc
out
cmpsl
mov
pop
test
mov
ja
pop
lock
sbb
or
shll
pop
xchg
push
fcmovnb
or
popa
mov
adc
gs
test
pop
es
and
cltd
sub
jge
loopne
rcrb
inc
shlb
xor
adc
mov
imul
in
loopne
push
ss
sub
jb
xor
inc
jno
and
jbe
inc
lock
jo
insl
aas
pop
push
cmpsl
clc
mov
outsb
lret
adc
imul
jnp
movsl
rorb
iret
fwait
mov
scas
xchg
xchg
xor
mov
out
inc
mov
daa
mov
add
inc
addr16
test
test
mov
mov
out
lcall
add
add
mov
xor
and
fisubrl
pop
fs
jno
pop
in
sbb
jle
xor
ret
sti
mov
xchg
add
fisubrs
xor
sbb
fldenv
sub
dec
sar
xchg
adc
cmp
cmc
jge
ljmp
call
pop
push
push
out
xchg
rcrb
adc
cltd
pop
xchg
lret
jns
stos
and
push
push
inc
and
xchg
inc
pusha
push
rclb
push
xchg
test
or
out
jecxz
add
lods
pop
stos
sbb
movsb
lea
aad
and
fisubs
push
xchg
cmpl
dec
xor
sub
faddl
test
mov
mov
cld
and
xchg
mov
dec
rcll
js
mov
imul
lret
stos
data16
addl
xchg
mov
xorl
xor
ffreep
xor
fimuls
js
and
fwait
lods
movsb
pushf
or
cmp
jno
push
notl
pop
adcb
mov
shl
push
insb
mov
xchg
ficoms
xorl
push
mov
hlt
movsl
cmp
cli
pop
repz
xchg
jns
sbbl
mov
sub
dec
push
in
push
mov
or
mov
shr
negl
xor
xorl
gs
adc
icebp
mov
mov
mov
xor
lods
dec
inc
pop
push
hlt
cld
mov
mov
dec
sbb
push
arpl
sub
mov
push
ficomps
push
pusha
dec
mov
or
push
cmp
out
push
mov
repz
sbb
fildl
aam
mov
sbb
mov
or
sub
mov
insl
push
mov
mov
fwait
sbb
xchg
cmpsl
dec
cmp
cmp
repz
stos
xor
push
push
js
jns
vpextrw
lds
cmp
mov
cmc
xor
punpckhdq
jl
xor
adc
fiadds
add
push
jne
push
inc
fcmovu
dec
cmp
outsl
sbb
out
call
stos
iret
fstpl
lcall
push
stos
pop
jg
sub
scas
out
fwait
shlb
and
fmuls
jmp
adc
and
ljmp
xchg
sbb
push
adc
jp
mov
mov
insl
push
push
shl
cmp
push
das
les
cmp
sub
push
jl
dec
int3
fstpl
xchg
jo
in
ss
arpl
movsl
in
ficoml
add
iret
sarb
mov
xchg
loop
aaa
orb
lcall
daa
mov
or
pushf
lds
mov
imul
xchg
mov
aam
pop
dec
sub
and
enter
popf
fs
fmulp
aam
mov
mov
dec
sbb
imul
xchg
bound
pushf
mov
or
mov
adc
in
fwait
stos
mov
mov
es
inc
pop
pushl
das
bound
shrl
xchg
nop
fs
xchg
jo
mov
lea
push
cwtl
inc
or
inc
shlb
bound
inc
jmp
inc
mov
xchg
xor
push
push
xchg
arpl
mov
jle
pop
pop
mov
shll
mov
jge
je
clc
aad
fcomip
loop
mov
shl
pop
mov
shlb
add
jae
imull
jae
hlt
cmpsl
cmp
les
mov
clc
cwtl
pop
fwait
or
mov
jg
rclb
cmp
fcompl
div
popa
ret
sbb
mov
adc
test
mov
mov
inc
mov
mov
xor
sub
punpckhbw
outsb
ffreep
out
inc
inc
pop
sbb
push
sbb
and
adc
mov
fs
cmp
adc
pop
add
cmp
push
and
or
das
icebp
lcall
cmp
push
pop
sbb
pop
add
test
cmp
sub
sbb
and
inc
sti
inc
icebp
shl
in
adc
jl
or
lods
or
or
fiaddl
out
js
lcall
jnp
repz
dec
loop
scas
add
and
fdivrl
push
push
xchg
dec
shll
insl
mov
pop
push
jne
cmp
loop
add
out
imul
adc
mov
xchg
jbe
xor
pop
inc
jno
or
shlb
mov
aaa
jp
cmpsb
dec
lret
arpl
mov
mov
add
nop
lcall
adc
pop
daa
loopne
lahf
sbb
adc
pop
pop
jg
adc
mov
mov
pusha
stos
xchg
add
add
or
push
gs
imul
cwtl
ljmp
and
push
in
sbb
out
cmpsb
cmc
ja
data16
lret
int3
jg
lods
stos
jbe
push
jne
lret
mov
jbe
pop
push
pushf
stos
fwait
daa
inc
pop
mov
dec
pop
push
lds
out
mov
mov
mov
repz
ret
stos
mov
jne
push
insl
pop
and
dec
xchg
shl
xchg
jmp
jne
pop
jno
mov
jl
aad
sbb
inc
sub
insl
aas
inc
insb
pop
and
adc
or
enterw
sbb
xchg
in
cwtl
sub
js
fildl
pop
aas
push
dec
jge
cltd
popf
ret
mov
sub
lea
gs
sahf
cmp
sbb
xchg
add
push
mov
lcall
ret
pushf
fwait
mov
call
adc
movsl
popf
jae
adc
adc
leave
and
mov
lret
dec
push
dec
in
jne
popl
repz
repnz
sbb
cmp
mov
into
add
lret
fucom
fnsave
push
mov
or
gs
and
mov
mov
jbe
das
push
in
xchg
in
popf
jb
sub
je
and
test
orl
or
jbe
icebp
scas
xchg
push
fs
arpl
and
pcmpgtw
ret
or
jne
mov
mov
mov
or
ss
fwait
movsl
je
ss
out
inc
xchg
into
adc
loopne
test
mov
xlat
jbe
rcrl
ljmp
dec
xchg
push
loopne
add
push
mov
sahf
int3
ds
xchg
lret
adc
scas
jle
push
dec
or
mov
adc
cs
push
pop
add
pop
mov
lret
xchg
mov
mov
int3
jge
jbe
cltd
add
cmp
adc
int
loopne
lret
mov
in
jo
mov
adc
mov
sbb
rclb
rorl
inc
mull
or
mov
mov
cmpsl
push
pop
dec
lret
jmp
push
int
mov
inc
mov
add
mov
push
mov
inc
roll
mov
nop
pushf
fcoms
out
mov
cmpsl
mov
fs
cmp
and
rorl
sbb
outsl
jae
push
in
adc
mov
mov
sub
enter
stos
mov
push
push
push
test
mov
and
aas
es
fcoms
sbb
sub
movsl
fwait
jp
cmpsl
jl
ljmp
mov
imul
loop
jp
ret
and
push
push
out
faddp
je
xor
fldcw
and
inc
cld
or
fs
xchg
inc
lret
out
mov
fcmovnbe
jae
in
outsb
jne
jnp
jecxz
sbb
sbb
mov
adc
or
enter
mov
int
xor
sub
xchg
cmp
dec
push
jbe
bound
pop
inc
push
or
aas
int3
outsb
push
test
outsb
fwait
ljmp
sbb
xchg
dec
pop
and
mov
jmp
add
cmpsl
fistps
bound
fldenv
lcall
xlat
jle
xabort
inc
out
sbb
add
push
arpl
or
cmp
or
mov
scas
sub
push
sti
xor
jae
scas
inc
xchg
jnp
test
ret
fldpi
cmpsl
int3
ja
add
fdivrp
std
push
mov
in
popf
dec
test
push
ret
dec
pop
test
lock
mov
dec
mov
cmp
mov
push
fsubs
and
test
ljmp
clc
pop
mov
mov
leave
pop
stc
fstl
mov
jp
add
fldl
dec
xlat
rcll
iret
xor
push
xchg
shl
cmp
pusha
aad
adc
mov
push
pop
jecxz
cli
dec
fcom
jnp
mov
aad
pushf
test
test
jecxz
repnz
fwait
and
push
push
jg
sahf
adc
loopne
sbb
mov
xchg
sub
xor
mov
insb
nop
xchg
repnz
enter
mov
das
fistpl
jecxz
mov
cmp
cmp
daa
aas
insl
xor
pop
shrl
sahf
mov
ljmp
cmp
cmp
push
inc
pop
sub
leave
add
inc
out
enter
sarl
aaa
jecxz
insb
add
out
lcall
dec
jb
inc
pop
sbb
movsb
jne
add
pusha
mov
bound
push
xchg
and
xor
fstpt
incb
stos
stos
pop
lods
dec
mov
mov
adc
pop
or
jo
xchg
sahf
lock
rolb
dec
add
or
aas
loope
mov
sti
cmp
insl
pop
sbb
cltd
arpl
lock
cltd
sbb
movsl
movsb
inc
dec
lret
push
pop
in
pop
cmc
lret
xor
jge
adc
divb
stos
pop
jo
divl
jb
das
sub
out
push
add
jecxz
mov
sub
jbe
inc
movsb
mov
mov
push
sbb
inc
mov
lahf
jmp
mov
jo
cmp
fcoms
pop
lret
add
gs
jb
ja
lea
cld
pushf
scas
out
data16
ds
add
fwait
lret
jb
jecxz
aam
outsb
unpckhps
loope
fisttpl
leave
mov
xchg
and
xchg
push
push
push
mov
movsb
frstor
push
mov
mov
pushf
popa
inc
into
pop
xor
repnz
aaa
pop
dec
inc
gs
loope
sbb
xchg
sbb
movl
sub
dec
pop
add
pop
jp
xor
mov
clc
xchg
icebp
sti
pushf
xchg
outsb
mov
jne
ljmp
pop
mov
cwtl
inc
dec
xor
fidivrl
cltd
xchg
cmp
mov
insb
in
ficompl
mov
cmp
inc
dec
popf
shll
xchg
push
and
sub
pusha
clc
push
mov
stos
bound
push
sbb
xor
inc
or
in
adc
out
jle
das
and
call
out
test
add
fcmovne
and
add
jnp
clc
shlb
mov
or
mov
sbb
pop
add
xchg
lret
mov
or
jp
cmpsb
mov
or
ret
sub
xchg
test
movl
enter
insl
ljmp
call
js
ss
pop
xor
loop
insl
movsb
rolb
ret
and
cmp
and
repz
cmp
xchg
mov
inc
jns
in
push
std
int
xor
jae
setae
sbb
scas
jbe
push
lds
mov
push
shlb
mov
or
les
mov
xchg
xor
mov
jne
imul
sub
sti
xor
mov
cmpl
dec
outsb
jmp
imul
and
sbb
add
das
adc
jne
mov
fcoms
mov
mov
push
cltd
fwait
popw
lahf
leave
jb
aaa
rorl
mov
add
sbb
sbb
xchg
lea
cmpb
jnp
cmc
gs
jle
fsubl
out
jmp
xor
or
cmp
xchg
mov
ds
sbb
insl
and
roll
and
jb
lds
loope
jnp
adc
sti
sbb
adc
stos
pop
clc
imulb
arpl
sbb
loop
bound
push
jp
sbb
in
mov
ja
sub
or
add
push
dec
xlat
pop
das
dec
xor
push
out
mov
push
sarb
inc
stos
in
jnp
sbb
pop
out
xchg
insb
xor
jmp
jp
cmp
enter
mov
cmpsl
inc
call
stos
inc
dec
cmp
dec
aad
cwtl
inc
dec
mov
xor
jns
cmp
aaa
pop
shll
xlat
cmp
sbb
fcmovnbe
pop
out
and
jns
jbe
pop
stos
dec
jmpw
cmp
repnz
dec
flds
lret
jnp
mov
outsb
pop
inc
andb
inc
jnp
adc
or
xor
push
or
push
scas
push
mov
xchg
dec
xchg
in
cmp
data16
push
sahf
xor
sti
es
ljmp
inc
sti
dec
imul
arpl
inc
mov
dec
cli
and
imul
add
jnp
mov
pop
or
or
jle
inc
xchg
push
cmpsl
jecxz,pn
xchg
dec
dec
es
add
js
push
or
cmpsb
sbb
sbb
out
mov
dec
fsubr
inc
push
or
cmpsb
mov
cmp
push
cmp
mov
xor
or
lods
xor
pop
shrb
mov
mov
hlt
push
or
cli
mov
xchg
rcrb
adc
jbe
add
inc
in
fnsave
stc
movsb
stc
cltd
adc
aam
jl
rolb
scas
into
je
lea
dec
dec
mov
cmp
ror
addr16
pop
mov
xor
mov
out
cmc
dec
popa
add
jg
rorb
lods
and
push
mov
es
pop
xchg
xor
dec
in
cmp
cmp
pop
sbb
cli
ror
and
or
xlat
push
cmc
or
mov
sub
sarb
dec
push
push
fcmove
fldenv
cmpsl
push
jb
and
push
mov
cmp
fwait
inc
fisttpl
sub
roll
rol
sti
fninit
jno
xor
ss
inc
aam
loope
insb
sbb
daa
inc
push
nop
jno
arpl
aaa
imul
mov
mov
jbe
jecxz
insb
mul
idivb
sub
cwtl
in
flds
sti
pop
jnp
mov
out
jne
and
jo
push
gs
mov
jbe
xchg
cvtdq2ps
xor
pop
pusha
popf
lock
outsl
jno
add
clc
test
xor
ljmp
lret
pop
mov
sbb
jae
cmc
cmpsl
stc
shll
mov
cli
mov
or
cs
jne
stos
shll
push
out
enter
lods
gs
pop
pusha
ficoml
loop
sub
push
call
notb
fs
push
xchg
mov
je
sub
fisubrl
pop
inc
and
inc
int
dec
mov
jl
adc
sahf
sbb
jecxz
stc
inc
fnstcw
sahf
jb
mov
xchg
cli
loopne
lret
push
push
xchg
fbstp
ficomps
imul
lcall
ret
lret
xchg
insl
arpl
stos
pop
aas
aad
je
jmp
ds
aam
popa
and
adc
jp
cwtl
pop
and
xchg
pop
std
fsubs
adc
das
sub
test
loope
sbb
mov
jb
lods
cltd
lahf
sub
jnp
je
jecxz
pop
leave
push
xchg
iret
pop
push
adc
jecxz
test
arpl
pop
ret
pop
stos
pop
call
add
and
lcall
gs
pop
insb
cmc
sbb
jo
es
mov
shll
lret
fldt
adc
push
push
and
ds
add
xor
sbb
movsl
xor
data16
jmp
push
movsb
outsl
aas
aad
adc
xlat
pop
xchg
cli
call
pop
push
lret
int3
dec
cmp
sub
aam
stos
jnp
xor
sbb
stc
cmp
lret
sub
pop
mov
mov
cmc
movsl
mov
inc
aad
fdivp
pop
mov
out
insb
dec
stc
scas
pushf
mov
cmp
out
pop
cmp
jno
je
idiv
pop
sbbl
imul
hlt
mov
imul
clc
addr16
arpl
int3
or
hlt
in
lock
int
cli
call
loop
mov
cmp
dec
xlat
cmpsl
rolb
fmul
fwait
in
sbb
loop
add
push
shlb
xor
stos
aad
lds
xlat
adc
loopne
mov
stos
aad
int
xchg
or
rorl
repnz
loope
xor
dec
imul
sub
test
iret
jl
aas
sub
mov
cmp
outsl
add
popf
out
jae
or
mov
sbb
ds
sub
pop
mov
ficoml
xchg
test
xchg
ljmp
mov
enter
test
and
xor
sub
and
fs
mov
push
or
popa
xor
lods
insl
cwtl
in
jae
cwtl
aam
and
cmp
xlat
mov
ret
jge
repnz
movsb
testb
shlb
int
decl
into
int
jno
addr16
aaa
xchg
xchg
xchg
fmull
sbbl
insb
cmp
jae
add
shrb
sub
ret
sbb
sbbl
push
push
add
vpsubsw
test
jns
int
fs
jge
lods
xor
test
iret
pop
xchg
mov
add
mov
jmp
addl
adc
scas
insl
inc
sbb
ret
pop
xchg
leave
stc
ret
lahf
sbb
aaa
adc
and
fwait
push
jno
cmp
cwtl
inc
add
xchg
mov
dec
sbb
outsb
add
out
test
out
lret
lahf
jp
push
or
add
mov
rcrl
aad
loop
cmp
lahf
push
lahf
dec
adc
inc
xor
in
lea
test
xor
scas
cmpsb
jbe
sbb
aam
and
xor
sbb
lret
cmp
arpl
and
sbb
jl
pop
aad
scas
int
out
or
pusha
movsb
insb
adcl
lds
fcmovu
dec
sub
jnp
and
add
out
mov
xor
push
in
loop
les
sti
cmpl
sahf
xor
push
mov
outsb
jne
or
pop
inc
xchg
ret
mov
test
sub
push
push
movsb
pop
mov
sub
push
xchg
gs
add
jne
xchg
cwtl
mov
decl
mov
mov
aad
arpl
sbb
sub
or
cld
pop
or
scas
mov
mov
jge
sbb
clc
das
bound
xchg
mov
and
adc
push
and
dec
mov
sub
pop
push
jg
fstpt
push
in
pusha
or
inc
cmp
sub
mulb
scas
mov
lods
aad
push
les
pop
ds
and
mov
fs
addb
mov
lods
push
and
or
adc
fcmovne
add
mov
test
cmp
jae
les
insb
in
cmpb
jne
dec
xchg
inc
mov
sbbl
pop
pop
mov
fs
pop
sbb
in
mov
cmp
push
sbb
xor
xchg
push
in
adc
xchg
or
fidivrs
mov
test
js
xchg
mov
insb
xor
mov
stc
lret
jp
aad
inc
ucomiss
cld
add
push
push
adc
dec
and
xor
cmp
xor
mov
xchg
in
xor
nop
dec
cwtl
adc
daa
dec
dec
mov
jae
sbb
push
push
sarb
pop
mov
mov
xor
sub
jg
popf
int
jg
out
mov
in
out
and
scas
imul
divb
cmp
mov
int3
insl
pop
pusha
push
fwait
mov
mov
enter
jecxz
xor
data16
fmuls
loopne
xchg
push
dec
mov
int3
inc
sub
rcrb
fisubs
pop
bound
ss
jnp
mov
shl
icebp
dec
test
lods
rcll
jnp
sbb
jno
out
xor
dec
imul
clc
lret
ficoml
adc
sub
cmp
mov
insb
jno
push
cltd
iret
pusha
ja
mov
sbbb
shll
and
test
negl
and
in
and
lds
test
xor
scas
lret
xchg
push
adc
adc
sbb
push
xchg
daa
fistps
push
pop
push
adc
cmp
test
insl
repnz
lock
push
dec
nop
test
xor
or
insl
into
insb
adc
leave
mov
in
and
or
inc
in
pop
ljmp
cmp
insb
xchg
fucomp
pushf
shrl
popa
xor
nop
cltd
dec
cmp
shll
dec
push
jb
xchg
dec
sar
out
out
dec
xchg
icebp
mov
adc
mov
mov
pop
loop
or
dec
jg
jmp
pop
pusha
pop
or
sbbl
cwtl
icebp
xchg
repz
mov
pushf
aaa
mov
lret
lods
lcall
dec
cwtl
push
and
pop
adc
sti
mov
in
outsb
pop
mov
nop
dec
vpshufd
add
xorb
pop
or
push
sub
fisubrs
imul
repnz
push
mov
dec
sbb
mov
xlat
xchg
xor
mov
pusha
jge
cmpsl
mov
stc
jbe
push
and
std
mov
in
shl
pusha
sub
adc
sbb
lret
adc
mov
addb
dec
cli
xchg
sub
mov
ljmp
fnstenv
fildll
loopne
cwtl
fistpl
add
xor
push
sbb
mov
ds
mov
stos
nop
ret
lcall
mov
push
imul
sub
push
xchg
jmp
adc
xchg
fcompl
inc
sahf
cmp
push
jle
inc
and
imul
cmpsb
into
sbb
jae
pop
je
rolb
cwtl
int3
mov
adc
adc
popa
pop
mov
pushf
push
lods
pop
and
in
and
es
push
jnp
adc
push
test
out
xchg
icebp
das
pop
jno
push
out
test
inc
je
mov
nop
pop
ficompl
dec
icebp
push
enter
or
mov
jne
out
jge
fistl
mov
out
xchg
mov
xor
or
dec
ds
cmp
ficoms
aam
les
mov
pop
sub
orb
sahf
fucomp
mov
fwait
or
fstl
ja
pushf
mov
xchg
arpl
dec
dec
cmc
adcb
insb
sbb
push
pusha
daa
mov
pop
ret
mov
mov
leave
xor
imul
lods
mov
shrb
nop
imul
shll
dec
je
pop
fnstcw
test
mov
or
in
push
out
sbb
iret
inc
inc
hlt
jb
jge
add
adc
add
gs
cmp
je
fsubrs
in
mov
notb
gs
sbb
mov
fdivl
cmp
idivl
dec
jp
subl
jbe
cmp
xchg
jnp
add
std
sbb
imul
into
popa
ljmp
pop
aam
jmp
scas
xchg
inc
add
mov
das
mov
xchg
mov
pop
or
add
add
cmp
or
push
es
test
data16
dec
inc
jg
add
pop
mov
into
xchg
xchg
dec
inc
lahf
ret
push
insb
mov
xor
call
mov
mov
in
pop
and
mov
rcll
sbb
lret
mov
test
lahf
cmp
int
xchg
and
jge
or
dec
aaa
or
and
cmpsb
outsl
xor
in
fisubrs
mov
leave
add
imul
pushf
popa
gs
push
movsb
and
xor
loope
nop
pop
jno
cwtl
repz
in
rcr
test
mov
sbb
jo
bnd
stos
dec
movsl
mov
dec
fs
das
pop
movsl
lea
js
cmp
cltd
add
dec
inc
ljmp
rorb
out
jle
mov
jb
call
movsb
push
sbb
fcomps
iret
enter
into
push
mov
mov
adc
imul
les
mov
and
dec
push
mov
aam
cld
xor
pop
orl
movsb
bound
sbb
pop
notb
add
or
ja
ds
sub
outsl
xchg
pop
les
dec
dec
or
jmp
in
ficoml
xchg
dec
cld
mov
pop
cmp
movsb
and
jl
rcll
sub
movsb
sbb
notl
mov
and
je
out
inc
ficoms
fiadds
pop
inc
sti
daa
lods
adc
rol
xor
mov
test
cvtdq2ps
mov
es
std
lods
jmp
divb
lcall
push
mov
xchg
nop
jns
imul
fadd
repz
dec
add
or
test
idivl
adc
cmpsl
jae
xorl
inc
xchg
ja
popa
cltd
adc
jg
inc
sbb
add
out
push
inc
shl
inc
stos
int3
call
mov
int3
push
js
pusha
in
cmpb
add
xor
pusha
xchg
lcall
scas
out
in
imul
mov
xchg
rcl
out
xorl
add
xchg
inc
shl
lret
mulb
loopne
into
inc
add
stos
iret
test
in
gs
mov
mov
je
push
mov
loope
jne
or
cmp
arpl
sbb
jnp
fstl
into
sub
jmp
mov
fdivs
scas
sbb
adc
mov
movsb
sahf
jbe
icebp
cmp
shl
xchg
outsl
push
popl
add
cld
mov
dec
ret
ss
inc
dec
rorl
sbb
mov
cld
dec
aam
fcmovu
flds
sbb
int3
cli
dec
cmp
das
out
sbb
jmp
cmp
mov
push
clc
push
adc
fldl
js
dec
call
push
ljmp
ss
rcll
jge
mov
add
mov
cmp
sbb
test
std
aas
dec
mov
jmp
cltd
push
inc
and
loopne
mov
lcall
sbb
daa
xor
push
hlt
shl
data16
mov
scas
sbb
pop
idivb
loopne
das
mov
jp
mov
es
daa
pop
jg
jecxz
mov
sbb
das
pop
es
out
pop
rcll
dec
sbb
mov
fnstcw
jns
jmp
jne
jg
inc
jp
sub
push
sub
pop
sbb
cs
sub
arpl
icebp
cld
sahf
push
rorl
pop
mov
cmp
outsl
arpl
stos
ds
push
out
lahf
leave
loop
mov
fdivrs
ds
jle
fwait
ret
ss
mov
pushf
inc
cmp
int
fmull
cmp
pop
int3
and
movsb
int3
repnz
aam
xorb
sbb
dec
xlat
mov
xor
inc
or
mov
mov
sbb
and
pop
out
xchg
add
inc
mov
cmpsb
pop
mov
repz
adc
pop
daa
adc
pop
sbb
mov
das
mov
into
fs
sub
outsl
mov
cmc
sbb
jmp
out
fidivl
jb
pop
mov
xchg
sahf
jle
push
adcb
sbb
ja
outsl
in
aad
sub
mov
aam
mov
pop
addl
cwtl
and
out
aam
scas
lods
adc
mov
test
imul
inc
lahf
test
xchg
leave
push
push
dec
cwtl
sahf
int
loopne
cwtl
mov
xchg
lea
xchg
rcrl
cltd
movsl
stos
adc
mov
jne
push
mov
cmp
pop
push
sbb
ljmp
imul
mov
sbbb
outsl
and
mov
imul
adc
popf
sbb
inc
pop
mov
adc
xchg
stc
xchg
mov
cmpb
xchg
cld
jmp
pushl
and
stos
mov
cmpsl
push
and
cmp
and
mov
push
std
scas
sub
daa
loope
jb
xchg
sub
into
add
jmp
inc
pusha
push
cmp
cld
aas
lcall
movb
and
and
dec
das
xchg
shlb
fwait
ja
lds
xchg
jp
jb
xchg
arpl
or
mov
sahf
pop
inc
stos
cmp
subb
aad
push
das
aaa
add
in
stos
push
les
lret
movsb
inc
pop
ja
fidivrs
xchg
cld
xor
xlat
jnp
popa
clc
push
cmp
lret
inc
cs
pop
add
mov
jle
shll
xchg
xor
inc
mov
shll
shr
ds
sbb
add
sub
jmp
sub
test
mov
les
pop
rcrl
popf
pop
cld
ja
push
pop
ret
or
fisubs
sbb
dec
push
movsl
lret
fcomi
movsl
int
sarl
hlt
xor
xchg
test
and
and
dec
push
dec
scas
xchg
loop
adc
fidivs
xchg
aaa
test
mov
aam
xchg
test
mov
pusha
aaa
test
xor
out
dec
push
daa
adc
popf
sub
or
aaa
lahf
out
pop
mov
pop
mov
dec
xchg
push
push
jns
gs
lret
mov
cmpsl
xchg
push
insb
sbb
out
add
pop
and
mov
inc
leave
mov
popf
push
loopne
leave
pop
mov
push
sub
mov
mov
push
sub
xor
ds
fldcw
mov
pop
adc
add
aam
aad
push
inc
into
fwait
sub
push
aaa
xor
clc
mov
imul
outsl
enter
scas
mov
pop
fimuls
mov
cmp
push
in
in
pushf
and
pusha
dec
inc
pop
hlt
or
gs
imul
sbb
ret
mov
or
jge
movl
movsl
sbb
loope
cmpsb
mov
mov
in
dec
xchg
dec
out
or
or
mov
call
jg
into
or
add
push
cmpsb
lock
xor
xchg
mov
out
and
aad
out
sbb
push
and
and
lea
mov
dec
cmpb
gs
not
and
arpl
mov
stos
js
or
xchg
cmp
and
test
adc
adc
js
jle
data16
mov
pop
sbb
call
out
cld
mov
push
ljmp
push
jmp
and
mov
daa
daa
fldl2t
aaa
cmp
dec
xchg
add
cli
jno
mov
aas
add
adc
in
sbb
and
cmp
sub
js
div
out
push
out
mov
pop
adc
loopne
cmpsl
pop
mov
pop
insl
jg
and
mov
jmp
adc
sub
sub
fdivs
movsb
inc
adc
inc
dec
imul
lcall
loope
mov
aaa
push
xchg
imul
fcom
cmp
mov
bnd
adc
xor
insl
dec
test
rclb
cmp
mov
pop
mov
mov
shlb
cmpsl
je
or
mov
lods
sub
pusha
xor
int3
iret
cmc
jb,pn
and
pop
jp
cmc
mov
sub
movsl
pushf
stos
in
gs
jg
inc
popa
hlt
mov
push
mov
xor
sahf
and
jo
mov
mov
xchg
call
ss
call
fidivrl
xor
and
or
ret
xchg
ss
imul
sarb
xchg
or
das
shll
jbe
mov
aas
xchg
repnz
cmpsb
push
and
cmp
pushf
pop
mov
and
rol
jl
int
cmp
in
lcall
mov
loop
xchg
ljmp
mov
jnp
outsb
je
or
jmp
out
sub
xor
aas
orl
subb
out
lods
adc
push
fsubrs
pop
inc
and
push
add
pop
cmp
out
mov
pop
lods
push
outsl
lds
cmp
adc
mov
sub
out
sub
jmp
push
sti
add
cld
es
lods
imul
mov
inc
adc
popa
mov
je
or
insb
test
inc
aad
add
mov
jno
push
popa
das
jecxz
fidivrl
mov
sbb
inc
stos
jae
sar
incl
imul
subb
test
mov
mov
outsb
out
dec
int
or
imul
pop
sub
jg
jnp
xchg
jg
test
mov
mov
hlt
les
push
int3
out
add
sub
daa
push
push
mov
jns
or
inc
mov
dec
cwtl
dec
test
mov
mov
sub
ljmp
push
shrb
notb
and
addr16
pop
push
into
mov
adc
mov
mov
enter
sub
int
fucom
jnp
stos
in
push
mov
or
outsb
aas
inc
out
push
arpl
je
int
sbb
lea
xchg
mov
dec
xlat
sbb
add
push
pop
fdivrp
cwtl
pop
add
inc
dec
aas
sbb
fiaddl
jmp
in
sub
mov
fstpt
aad
rolb
pushf
mov
and
repnz
cwtl
clc
ds
sub
cmp
mov
mov
sbb
add
adc
inc
nop
cmp
mov
push
mov
lods
push
xor
xchg
out
dec
stos
lds
in
pop
shrl
mov
aam
xor
mov
int3
fstl
mov
mov
out
xlat
rorl
into
js
repnz
or
xchg
insl
sti
cmp
mov
push
into
jne
mov
pop
jae
and
jno
mov
int
push
cmp
out
lret
sarl
negb
mov
xor
je
test
cmp
inc
jecxz
pop
sub
leave
sub
sarl
gs
xor
cmp
pop
addr16
xchg
fwait
xor
test
mov
jl
inc
adc
xor
xchg
mov
in
mov
xchg
aas
lret
sub
lcall
pop
and
rol
fisttps
inc
xchg
inc
cmp
ret
push
aas
into
or
mov
dec
mov
pop
cmp
mov
jmp
push
fstps
xchg
rorl
xchg
push
add
repz
add
jge
pop
inc
cld
popf
push
inc
loopne
imul
or
leave
mov
push
jge
adc
pop
test
push
shlb
mov
xchg
mov
outsl
mov
ljmp
outsl
sbb
imul
inc
repnz
aad
mov
jnp
mov
push
fld
push
sub
test
mov
mov
leave
test
mov
jp
stos
jmp
sbb
dec
iret
leave
dec
repnz
add
call
aad
sbb
jb
lea
into
dec
inc
testb
fistpll
test
rep
inc
mov
lret
lods
imul
inc
inc
xchg
xchg
jo
icebp
pop
insb
ret
movsl
adc
jno
sbb
mov
fs
jmp
jl
mov
sub
fildl
int3
sarb
cwtl
xor
push
inc
mov
mov
add
mov
mov
movsb
jns
xchg
cs
sbb
in
pop
cld
or
push
pushf
out
sbb
cmp
fwait
decb
fistl
xor
addb
jp
cmp
inc
and
out
les
pop
and
xor
adc
pop
loop
outsb
pop
mov
clc
rcll
loope
lret
push
into
pop
and
nopl
push
inc
dec
fisttpll
je
out
cmpl
stc
lret
in
inc
sbb
mov
adc
mov
test
gs
movsl
mov
lret
nop
xchg
fs
mov
inc
aaa
pop
xchg
push
out
xchg
lcall
lret
in
mov
cmc
das
push
xchg
je
insb
repnz
and
push
cli
pop
dec
inc
out
loop
divl
push
sbb
mov
out
mov
fsubrs
jne
repz
inc
dec
in
ds
or
repz
mov
pop
jle
jae
sub
int3
pop
cmovno
mov
add
cmc
xchg
fwait
dec
out
cmp
dec
outsl
sbb
cltd
cmc
fisubs
shll
jg
or
in
loope
mov
push
es
outsl
fcoms
addr16
lret
test
lds
xchg
es
out
and
movsb
mov
add
mov
ja
lcall
dec
subb
jecxz
shr
daa
and
gs
mov
or
shll
imul
pop
sbb
pop
push
jns
lods
mov
inc
lock
ljmp
push
aad
std
in
insb
push
sbbb
fs
xchg
imul
fwait
mov
lods
mov
aas
push
shl
add
cld
mov
nop
jl
push
je
jno
dec
or
xacquire
ficomps
scas
fisttps
pop
jecxz
incl
jne
stc
add
adc
jmp
sub
push
movsb
loope
push
jns
sbb
ret
xor
out
fnsave
ret
add
mov
sub
jmp
test
lods
icebp
rolb
jae
push
inc
fs
sti
cmp
cld
cmp
sbb
add
jnp
das
dec
add
jno
mull
cmp
jb
sbb
pop
call
andl
jmp
inc
imul
mov
mov
jbe
xor
xchg
push
add
and
mov
shll
fwait
push
ds
int3
data16
in
enter
pop
mov
neg
js
jge
mov
push
mov
repnz
cld
jne
jno
out
pop
ret
cli
or
lahf
sarb
sbb
jp
sub
jo
push
pop
js
fwait
mov
pop
mov
cmpsb
lea
push
out
dec
pop
jne
leave
lds
cmc
mov
xchg
mov
pop
mov
adc
adc
pop
loopne
leave
jno
loope
addl
leave
loopne
xor
imul
sahf
pushf
ljmp
aam
enter
iret
mov
xchg
pop
push
cld
push
dec
or
add
mov
stos
scas
cld
and
pop
inc
xchg
lods
clc
xor
mov
call
xchg
mov
push
mov
jg
pop
addr16
stos
and
lret
bound
xchg
pop
lcall
cmpsl
inc
gs
out
stos
inc
int
jmp
js
pop
jmp
cmp
pop
jl
push
dec
sti
pop
fwait
lret
and
stc
je
je
adc
mov
ret
cli
pushf
mul
push
push
movsb
gs
inc
xor
inc
nop
pop
pop
xchg
shlb
sahf
pop
sbb
movsl
jnp
xorl
mov
jb
add
int3
inc
shll
popa
inc
mov
subb
mov
mov
cmp
sbb
jnp
adc
fbld
cld
pop
pop
cwtl
mov
fiadds
push
popf
shll
jno
mov
movb
scas
push
dec
in
icebp
cli
jne
insb
cmc
addr16
inc
insb
repz
push
jl
xor
sbb
inc
in
iret
dec
out
inc
xchg
das
mov
mov
je
dec
aaa
insb
int3
aaa
ja
shrl
in
jl
pop
xchg
jp
movsl
mov
pop
xchg
mov
add
out
std
mov
adc
imul
das
pop
mov
jb
test
dec
fsubs
faddl
leave
jle
mov
mov
shl
add
jb
pop
das
ud2
pop
dec
jo
xor
mov
scas
or
lea
std
sbb
nop
stos
into
popa
stos
pop
cmp
in
sub
xchg
fcmovbe
mov
scas
mov
cli
mov
out
cmp
out
jnp
mov
mov
push
iret
jns
sbb
out
ret
and
lods
movsb
dec
mov
dec
lods
mov
shll
xlat
ja
icebp
lock
inc
jo
fildll
cmpsb
xor
rorl
mov
std
cltd
xchg
out
push
ficomps
xchg
adc
cli
xorl
nop
dec
sbb
fdivrl
xor
cmp
imul
imul
mov
mov
fldt
lods
adc
adc
sarb
or
pop
add
xchg
lds
mov
ror
sti
pop
das
push
rorl
out
or
imul
int3
cltd
loope
sbb
scas
bnd
ror
cmc
dec
lods
push
daa
jno
aad
xlat
cmp
jnp
mov
pop
lock
fadd
fwait
mov
lahf
in
cld
xchg
fwait
into
repz
stc
mov
xor
outsb
pop
jo
popa
push
repz
jecxz
inc
stos
mov
sub
cs
lods
jae
enter
adc
inc
test
inc
push
dec
push
jl
and
lds
mov
movsw
sub
inc
jbe
gs
loop
jp
lcall
cwtl
mov
stos
arpl
pop
jg
jp
js
stc
jo
popf
leave
cld
addr16
aad
pop
mov
gs
shlb
push
mov
xchg
test
pushw
dec
mov
add
std
or
into
cld
ja
adc
ljmp
adc
notl
gs
mov
cmp
aaa
and
lret
inc
push
inc
hlt
mov
sahf
in
jl
inc
test
fldl
adc
jle
popa
sub
inc
lcall
jae
and
out
in
add
pop
icebp
xchg
lret
arpl
insl
lahf
push
xor
jmp
pop
loopne
hlt
mov
sub
cmp
mov
pop
clc
js
jge
pop
dec
sbb
stos
mov
cmp
fwait
test
negl
sahf
push
sbb
push
popf
mov
fcmovnbe
jecxz
pop
aam
repnz
daa
sub
fldenv
notb
adc
subb
inc
inc
clc
sbb
or
lods
addl
cmp
leave
call
dec
mov
movsb
nop
inc
sahf
xchg
movzbl
insb
aam
pop
sub
and
mull
mov
sbb
mov
xlat
es
aas
push
repnz
mov
imul
pusha
cmp
dec
jb
and
pop
aad
nop
outsl
sub
jbe
jp
pop
adc
push
and
or
rorb
push
clc
shll
or
xchg
mov
sbb
mov
cmp
push
pop
test
pop
imul
negb
stos
ret
test
jl
repz
ljmp
cmp
movsl
cmpsl
cmp
ja
pusha
mov
pushf
mov
or
mov
dec
xchg
jl
push
mov
out
mov
inc
insl
stc
xor
cmp
mov
fcompl
aas
jnp
and
lret
xor
sub
cwtl
adc
icebp
scas
insb
div
aam
adc
inc
cmc
popf
push
mov
pop
push
dec
sub
cmp
movsb
setae
std
es
adc
data16
popa
test
les
in
rol
mov
xor
inc
mov
dec
daa
jmp
pusha
xchg
add
jge
cmpsl
enter
xor
add
adc
mov
xor
or
add
sahf
mov
xor
pushf
aam
jo
lret
sarl
subl
pop
cmp
xchg
mov
movsl
test
cltd
ss
out
pushf
cli
das
loopne
pop
mov
andl
imul
mov
les
outsb
adc
mov
sub
jmp
mov
jne
mov
gs
dec
or
dec
outsl
gs
or
dec
idivb
rolb
inc
out
cmp
push
xchg
pop
and
xchg
xor
stos
mov
xor
mov
shrb
into
adc
lahf
adc
es
dec
dec
or
xchg
cmpsl
inc
fldcw
scas
add
orb
jnp
mov
inc
mov
sbb
dec
add
push
mov
push
stos
push
daa
sub
repz
and
fsts
adc
mov
movsl
pop
cmp
cld
loopne
add
loope
push
xlat
push
xor
pop
cmp
and
in
out
in
test
mov
dec
push
sub
iret
inc
imul
xchg
push
ja
mov
out
mov
adc
dec
pop
test
sbb
lods
dec
jnp
adc
cmp
jmp
mov
leave
test
mov
bound
jg
cmp
jge
xchg
dec
data16
adc
xchg
mov
leave
test
xor
xor
rcrb
negl
xor
cmpsl
jne
inc
jns
gs
add
mov
cmp
or
adc
mov
sbb
in
or
lahf
push
sbb
add
dec
sbb
pop
jbe
mov
push
ja
loope
negl
cmp
hlt
jb
stos
xor
mov
inc
les
mov
xchg
sarb
out
or
push
mov
fcoms
dec
stos
xlat
pop
jae
sbbb
or
xor
dec
out
adc
ds
xchg
insb
arpl
adc
push
adc
movl
dec
jl
adc
push
out
xorl
mov
add
jmp
jg
ror
mov
ds
inc
inc
add
add
test
cmp
push
jmp
xor
mov
cli
mov
sub
scas
jcxz
sti
es
mov
mov
data16
cli
in
mov
mov
cld
sub
aas
repnz
loope
pusha
pushl
loop
std
lret
gs
mov
dec
test
inc
adc
loopne
sub
movsb
roll
cmp
jl
mov
nop
push
adc
push
mov
test
dec
mov
and
sbb
push
push
inc
sahf
mov
fnstsw
pop
add
das
pop
sarb
jbe
sub
dec
lret
mov
jb
mov
lock
mov
je
add
push
enter
inc
xchg
mov
xor
mov
push
ljmp
scas
rolb
insl
xchg
stos
mov
inc
inc
pop
dec
cmp
imul
shll
lods
lahf
inc
jnp
ud2
mov
lock
cmpsl
out
xor
shr
sbb
jmp
inc
mov
and
xor
add
sub
pop
mov
call
cli
insb
int3
mov
xchg
xchg
xchg
push
scas
mov
mov
cmp
and
or
lds
aad
int
popf
dec
int
ffreep
dec
sub
sbb
mov
cltd
push
push
rorb
mov
ja
sub
dec
pop
into
ja
sub
repnz
fstps
pusha
imul
test
jnp
cmp
push
add
into
mov
ja
xchg
cltd
arpl
inc
cld
mov
cli
pusha
inc
cmp
mov
pushf
sbb
pop
stc
outsb
inc
sub
push
push
out
shll
das
arpl
sbb
adc
and
adc
rcr
js
adc
outsb
ror
outsb
and
dec
dec
icebp
aad
jle
insb
jbe
ret
call
cltd
jge
out
shlb
pop
hlt
rorb
inc
lods
sahf
mov
out
or
xorb
hlt
pushf
negl
lcall
fistps
cmp
std
jge
push
xchg
cwtl
inc
in
movsl
out
mov
push
data16
es
sbb
adc
push
add
dec
rcll
jle
enter
push
sub
sarb
mov
xor
cmp
mov
jge
shlb
test
inc
lahf
mov
lahf
pop
adc
lods
add
cltd
sub
push
jecxz
mov
aaa
jp
jo
xchg
xchg
in
xor
xchg
in
xorb
bound
dec
inc
icebp
cmpsl
or
mov
lods
xchg
test
loope
mov
adc
rcl
jae
data16
jecxz
xchg
les
sbb
and
outsl
repnz
popf
stos
xchg
les
in
push
mov
xor
xlat
outsb
shll
mov
adc
or
mov
hlt
sti
loopne
pop
fidivs
sti
dec
adc
xchg
les
add
xlat
xor
sub
xor
iret
mov
lcall
jb
dec
out
movsb
lret
hlt
add
jge
insb
cmc
inc
cmp
out
leave
mov
pop
std
pop
cmp
push
inc
mov
dec
inc
fmull
daa
mov
push
imul
xchg
repz
dec
out
lea
mov
popa
fstl
lcall
addr16
scas
sbb
test
jne
mov
fs
mov
or
mov
xor
cmp
jg
push
fimull
jl
xor
jb
rorl
shl
out
roll
popa
mov
lret
sbb
add
cltd
fdivl
outsl
sub
sbb
fldenv
add
aas
adc
popa
lock
cmp
loop
push
pop
or
adc
sbb
sbbl
add
loope
pop
push
stos
std
push
pusha
adc
lahf
lret
popw
add
or
jae
rcrb
mov
xchg
sbb
cs
mov
nop
outsb
inc
test
rclb
jns
add
cmpsl
xchg
shr
sub
mov
les
add
mov
cli
mov
adc
or
mov
loop,pt
std
xlat
adc
xorb
lcall
add
mov
scas
pop
dec
loopne
push
ficomps
xor
pop
out
bnd
ds
fsubl
or
inc
xor
push
rcr
fdivl
cs
out
push
jno
mov
mov
push
leave
cs
es
out
mov
add
adc
mov
cmp
mov
leave
aam
jmp
outsb
mov
lahf
stos
and
sub
addr16
cld
in
lret
add
lretw
xor
jmp
dec
es
jb
popf
call
popf
imul
pop
hlt
cmp
pop
jp
mov
filds
dec
and
pop
daa
stc
movsl
insb
push
sbb
jge
pop
test
jl
xchg
mov
cmp
pusha
out
cs
cmp
jae
stos
jne
adc
push
or
stos
push
jl
jge
lods
or
pop
mov
dec
inc
pop
in
mov
xchg
cs
idivb
imul
or
ficompl
pop
loope
int
pop
sub
mov
mov
sub
pop
cld
pop
sub
mov
bound
lea
mov
mov
icebp
mov
xchg
sahf
add
inc
or
and
jo
scas
xchg
stc
pusha
pop
mov
inc
aaa
dec
clc
lock
jmp
sbb
dec
popf
andb
jae
es
cmp
inc
cmpsl
lock
xor
fnstsw
inc
loopne
mov
xchg
push
or
jle
nop
jns
push
cld
sbb
mov
in
pop
scas
dec
es
je
jnp
nop
ljmp
mov
mov
enter
mov
data16
fisubs
adc
incb
mov
loopne
xor
in
les
dec
add
rcr
mov
into
dec
fs
iret
jnp
out
xchg
xorw
and
popf
repnz
lds
cmpsb
loopne
ds
push
pop
popa
test
mov
cmp
mov
inc
dec
mov
push
sub
add
rolb
out
xchg
push
mov
ds
movsb
and
mov
xchg
mov
fisubrs
push
or
lock
imul
rcll
sti
imul
push
shrb
and
data16
or
clc
cmpsb
jns
loopne
adc
mov
pop
add
xchg
dec
mov
xchg
lret
push
cmpsb
xor
data16
xchg
add
pop
icebp
push
cld
out
aas
jl
ss
lret
jo
and
sbbl
stos
aas
idiv
or
push
mov
addl
cmp
sbb
es
xor
push
lcall
xchg
dec
into
out
cld
add
sub
or
lret
mov
xchg
or
out
or
rdpmc
and
pop
mov
imul
xorl
arpl
jae
in
jmp
add
mov
sub
enter
ljmp
sub
and
dec
or
mov
in
mov
sub
jnp
stc
push
sbb
call
cwtd
inc
mov
inc
push
push
stos
cmp
rcl
sub
or
not
enter
adc
adc
jae
pushf
aaa
mov
inc
mov
jne
xchg
out
dec
sbbl
outsl
add
sub
scas
icebp
loop
roll
faddl
xor
jg
imul
jnp
lods
cmpsl
or
xchg
adc
sbb
cmpsl
neg
insb
pop
xchg
dec
adc
or
sub
stc
add
sub
shrb
cmp
xor
sub
out
addr16
dec
or
outsl
or
or
sahf
cmp
xor
fistpll
cli
mov
mov
es
mov
push
cmp
int
negb
pop
jmp
push
std
shlb
pop
push
outsb
frstor
call
jnp
out
sti
leave
push
pop
adc
ret
test
test
dec
jmp
jge
or
addl
mov
mov
sbbb
loope
add
mov
jnp
inc
jo
push
or
ljmp
orl
dec
test
mov
es
mov
rclb
pushf
mov
repnz
and
aaa
stos
hlt
pop
cli
lret
fnstcw
mov
mov
push
dec
arpl
lret
inc
int3
call
cmp
lahf
pop
cld
mov
pop
sub
push
cmc
loopne
mov
arpl
adcl
push
jg
out
xchg
push
inc
push
nop
push
inc
sti
data16
jne
adc
pop
int3
je
mov
push
mov
cmp
pop
pop
xor
add
shll
ret
xor
sbbb
out
pop
sahf
mov
movsb
sub
cs
inc
cmpb
scas
jae
leave
mov
jmp
les
mov
push
dec
xchg
pop
lcall
hlt
jmp
dec
pop
fidivrs
movsb
cltd
test
jae
test
fsubrs
pop
imul
cltd
inc
push
jbe
lock
add
es
lods
add
sub
arpl
mov
fsubrs
sahf
mov
sub
jecxz
sbb
pushf
and
cmp
sub
aas
ja
stos
adc
sbb
pop
xor
push
mov
sbbb
pop
imull
sbb
or
sbb
pop
mov
jle
das
cmpl
in
or
dec
ljmp
outsb
in
cltd
nop
ljmp
or
mov
sub
push
dec
jg
mov
iret
xlat
pop
js
lahf
cld
nop
frndint
cld
push
push
rolb
adc
in
push
xchg
fstpl
adc
pushf
sub
out
hlt
inc
inc
lahf
xor
std
inc
test
in
mov
xchg
mov
mov
push
pop
das
mov
ror
dec
cwtl
xchg
ficoml
push
dec
pop
cmpb
sbb
push
lcall
pop
cmp
test
inc
push
in
add
jne
pop
sbb
int
fildll
pushf
and
inc
cmp
ret
stos
shlb
inc
cmp
jl
mov
leave
sahf
pop
inc
dec
lret
xor
in
dec
adc
addr16
sti
adc
loope
xlat
jno
es
xor
adcl
test
fidivl
insl
mov
adc
fldl2e
mov
repz
stos
ljmp
test
movsl
push
pop
pop
loope
mov
inc
push
cltd
jae
sub
push
mov
fdivrs
leave
dec
repnz
movsb
rcll
sub
insl
mov
cmp
mov
rol
test
xor
pop
adc
test
push
and
mov
sti
mov
jae
repz
or
dec
fdivs
push
repz
popf
adc
shrb
call
mulb
imul
pop
sub
adcl
pop
out
pop
mulps
mov
sub
add
xchg
adcl
pop
loopne
mul
mov
adc
gs
int3
out
push
cmp
xchg
lret
or
mov
cwtl
inc
clc
bound
push
in
pop
xchg
or
push
shlb
mov
xor
xchg
jle
or
lea
rcrb
push
subb
inc
mov
and
outsl
mov
push
cld
ss
outsb
call
sbb
cmpsb
jl
adc
and
fnstenv
shrb
or
mov
xchg
sbbl
cmp
inc
stos
xor
adc
ret
adc
and
sarl
lahf
das
dec
dec
adc
sub
pop
iret
clc
stc
add
mov
std
jne
movsb
lcall
enter
mov
icebp
dec
add
xchg
dec
les
pop
aaa
sub
pop
test
mov
sarl
daa
xchg
lea
or
xchg
adc
iret
enter
mov
sbb
fwait
in
cmpsl
jp
sbb
es
lcall
pop
dec
inc
fidivs
push
or
sbb
outsl
or
popf
stos
pushf
test
shrb
loope
or
push
icebp
add
aaa
dec
xchg
sti
or
lahf
pop
js
jp
scas
sbb
push
rclb
test
pop
inc
xchg
sub
mov
and
rol
xchg
mov
pushf
or
mov
imul
popf
jbe
push
add
jmp
sarl
leave
xor
arpl
sub
add
icebp
jbe
jnp
mov
cltd
addb
call
adc
inc
repz
push
sub
pop
adc
cli
inc
fldcw
andb
ljmp
and
stos
imul
pop
out
add
mov
jecxz
mull
call
push
inc
inc
mov
ljmp
jne
mov
dec
sti
fidivrs
push
xchg
nop
push
out
popf
pop
xor
inc
xor
sub
je
daa
aas
out
lahf
jo
stos
dec
mov
adc
lock
and
inc
rol
mov
mov
xor
stc
loope
sub
incb
xchg
cwtl
adc
popf
sti
mov
add
or
in
mov
mov
jns
cpuid
jae
mov
mov
lahf
aad
and
dec
xor
outsl
mov
pop
rorb
into
push
mov
or
popf
cmp
xlat
pushf
lcall
les
sub
adc
xor
jl
mov
jmp
imul
xor
dec
mov
pop
mov
mov
leave
sub
dec
pinsrw
xlat
inc
ja
cmp
xchg
clc
mov
stc
cmp
jp
xor
das
ss
test
sti
xor
push
mov
dec
sub
rcrl
pop
pop
jo
scas
push
popa
je
cltd
jg
sub
cmpl
mov
sahf
ret
movsl
out
mov
mov
les
es
imul
out
loop
mov
mov
sub
mov
addr16
test
imul
mov
mov
xlat
push
jb
sub
xchg
sub
fwait
sbbl
mov
sub
clc
lods
fimuls
jg
adcb
adc
sbb
aaa
push
xchg
jp
push
pop
sbb
movsb
lea
xchg
std
mov
mov
adc
sbb
iret
les
sbb
les
pop
pop
push
lock
insb
xor
outsl
arpl
mov
cmp
cltd
aam
cwtl
jle
lods
pop
adc
scas
xor
pop
cmp
movsb
and
nop
or
int3
fldcw
cmp
xlat
jge
iret
sub
sahf
out
mov
add
adc
dec
enter
insl
out
dec
add
daa
test
fs
mov
inc
lds
sub
stos
pop
xchg
test
cltd
pusha
data16
icebp
mov
and
aas
inc
xor
lret
adcb
test
adc
aad
mov
inc
mov
cld
mov
sub
sbb
adc
neg
loopne
jns
jg
je
fimull
les
leave
fldenv
sub
loop
das
mov
push
sbb
in
es
dec
mov
lcall
bound
int
outsl
dec
xor
mov
ja
movsl
dec
or
scas
in
or
fs
pop
or
stos
mov
or
or
cmp
inc
mov
repnz
int3
ja
insl
jp
ja
jecxz
out
pop
sarb
stos
adc
mov
jge
inc
push
mov
addb
xchg
or
jge
inc
scas
mov
movsl
fbld
push
jmp
xchg
lret
mov
stos
or
mov
mov
inc
jno
jb
pop
jbe
mov
xor
mov
pop
dec
stos
sbb
pop
inc
add
fisttpl
fstpt
cmp
enter
scas
inc
hlt
clc
ret
lock
mov
xchg
add
jns
cmp
push
push
push
add
inc
jmp
cli
xor
jle
cmp
mov
popf
pop
and
int
sub
jb
fimull
lea
sub
push
xchg
pushf
repz
fdivrl
jno
jl
adc
sarl
bound
aad
pop
sub
test
insb
and
hlt
insb
cmp
xchg
xchg
sbb
cld
mov
sbb
jp
stc
sti
cmp
imul
enter
mov
sub
adc
jnp
push
insl
push
cmp
mov
stos
mov
xor
sub
sbbb
sti
mov
jo
clc
jmp
ret
xchg
mov
push
sbb
push
jo
cmp
xor
les
pop
inc
pop
inc
inc
lods
icebp
ss
and
addl
xor
cli
push
ret
stos
adc
cltd
lock
sbb
sub
inc
imul
insl
icebp
ret
xchg
jnp
xchg
sbb
mov
imul
shll
or
mov
jl
mov
push
cmpsl
mov
bnd
dec
lret
cmp
lea
divl
das
outsb
test
jg
nop
adc
and
mov
std
add
sti
rcrl
mov
sbb
enter
movsb
xor
add
icebp
pushf
cmp
xor
movsl
push
and
shrl
or
jecxz
lret
ret
popf
addr16
dec
stos
gs
and
or
mov
or
mov
push
dec
pop
sbb
mov
outsl
aad
std
ds
push
pushw
out
jmp
mov
sbb
mov
adc
rclb
jl
rclb
std
xor
add
rclb
jo
leave
test
scas
inc
out
sbb
jle
lods
and
cmp
addr16
and
pop
fdivs
push
jb
xchg
scas
jno
pop
jge
fwait
dec
andb
xchg
mov
adc
inc
jo
or
addr16
cmp
fisttpl
pop
sub
mov
repnz
adc
xchg
mov
xor
xchg
jp
imul
mov
cmp
imul
push
scas
pop
xchg
stos
jbe
push
push
loope
sbb
jge
mul
in
cmp
stos
xor
and
xor
sbb
movsl
ljmp
dec
and
or
test
out
push
in
mov
jmp
cli
outsl
pop
push
popa
repz
mov
in
cld
dec
xor
repnz
xor
adc
mov
sub
inc
xchg
insb
xor
mov
cwtl
cmp
in
test
mov
mov
stos
lret
and
mov
pop
inc
sti
shlb
popa
inc
lock
jecxz
in
xrelease
pop
push
and
popf
scas
push
lret
clc
xorb
push
jno
push
mov
ss
inc
arpl
sub
jbe
inc
js
xor
enter
push
jne
mov
popa
in
jo
pop
cli
nop
adc
fildl
rcrb
ljmp
pop
sahf
push
inc
lcall
cli
and
jg
mov
rolb
in
inc
pop
sbb
inc
lahf
clc
nop
stos
and
and
dec
xchg
sub
jecxz
jl
bnd
sahf
insb
test
je
mov
stc
add
jl
fwait
test
mov
loop
dec
cmc
outsl
add
stc
imul
loop
fiaddl
add
add
sub
rcl
enter
jle
shl
jp
mov
lds
mov
into
xchg
dec
push
insl
lret
pop
lock
pusha
stos
fists
lock
loope
cmpsl
cli
xor
movsl
or
fstl
out
mov
jl
xchg
push
sub
mov
jmp
mov
mov
mov
pop
jg
add
sbbb
addb
sub
xor
push
aas
xor
jnp
jns
add
add
cltd
and
jge
or
test
push
push
jge
and
fidivl
push
xchg
inc
cld
jno
sti
mov
mov
in
push
stos
mov
add
jne
pop
aam
xlat
subb
pop
outsb
pop
addr16
out
out
mov
sub
ds
loopne
insl
cmp
xor
cltd
mov
xor
les
mov
push
mov
xchg
mov
cmp
push
mov
and
cmp
pushf
xchg
rolb
stos
or
mov
dec
mov
rcll
sub
sub
sub
shrb
mov
xor
into
rclb
push
add
push
stc
jb
sbb
or
in
aas
xor
fistpl
mov
sbb
test
pop
mov
and
cmp
mull
popl
jle
mov
and
pushf
ja
outsl
mov
dec
dec
mov
sbb
mov
loopne
and
fidivrl
lldt
sbb
cmpl
pusha
xor
mov
mov
inc
mov
mov
lret
je
pop
movsb
int3
and
sar
mov
cld
mov
jp
xor
dec
pop
jle
mov
addb
xchg
jle
sub
loop
pop
scas
mov
repz
rolb
aad
pop
mov
aaa
mov
sbb
pop
dec
pop
jl
inc
push
lahf
scas
repnz
cmp
jo
and
pop
cmp
daa
and
es
mov
imul
xor
out
mov
bound
add
movsl
xor
mov
push
push
xchg
sarb
stos
and
or
dec
ja
divl
loope
in
push
sub
add
fldenv
push
scas
pop
and
xchg
push
push
mov
or
jl
lods
or
cli
cs
cwtl
lods
jg
ss
lds
adc
sbb
out
push
xchg
mov
dec
inc
gs
rcrb
leave
push
out
and
shr
pop
jg
inc
test
add
orb
dec
scas
scas
outsb
aas
dec
lahf
outsb
inc
clc
xor
addl
mov
int3
xor
divb
rclb
jae
sarb
and
adc
xor
inc
and
jno
iret
sbb
ret
fs
lret
in
vmwrite
lret
jg
cmp
xor
rorl
scas
ljmp
daa
mov
aas
dec
inc
jo
mov
pop
testl
add
dec
or
jge
call
mov
or
ljmp
gs
mov
mov
lcall
lods
push
xor
push
das
and
gs
aad
and
sub
mov
mov
jb
lcall
xor
inc
call
stos
ss
cmp
int3
rcr
adc
pop
scas
inc
insl
xchg
shll
test
fcompl
cmpsl
mov
sbb
xchg
sahf
lods
add
lahf
cmc
sub
push
fcmovne
cmp
mov
dec
pop
jae
fsubl
push
insb
popf
adc
repnz
out
enter
xor
or
push
mov
decl
scas
add
mov
lods
out
adc
mov
and
push
repnz
ljmp
mov
mov
imul
int
lds
in
leave
aas
mov
call
push
push
cmp
push
shrb
imul
xchg
jecxz
sarb
dec
pop
mov
popa
stos
sub
sub
sub
imul
pop
dec
mov
dec
in
pop
scas
fdiv
daa
mulb
xorps
push
jl
push
cld
or
sbb
or
insl
adc
jb
out
int
lret
jp
test
mov
push
pop
sbb
sbb
jbe
cli
ss
or
fcomps
ljmp
cwtl
pop
adc
adc
mov
bswap
mov
add
sarl
jb
js
orb
xchg
enter
xor
xchg
outsb
cs
aaa
out
cli
testl
and
ljmp
jmp
test
sti
jg
insb
ret
pop
dec
lahf
cmp
imulb
jns
pop
stos
add
das
push
xor
xchg
fdivl
ds
and
xchg
lcall
loope
adc
add
pusha
sbb
sbb
gs
xchg
or
dec
mov
outsb
sub
mov
or
aaa
mov
mov
idiv
pop
fistps
loop
adc
sub
jo
lods
pop
jnp
sbb
and
xchg
jae
adc
jmp
xor
icebp
or
out
sahf
jne
lods
jne
sbb
mov
jge
cmpsl
xchg
in
dec
addr16
pop
jl
jle
push
sub
mov
cmpsb
imul
jg
jne
or
aaa
cmp
test
and
push
xor
jne
ja
mov
add
aas
incb
mov
pop
das
in
test
fsubrl
pusha
scas
sub
cltd
cmp
iret
adc
xorl
jge
or
push
lods
sbb
or
mov
mov
xchg
ljmp
pop
stos
aas
std
pop
out
push
sbb
aad
xchg
in
arpl
fstp
mov
push
jg
push
out
sbb
inc
daa
cs
pushf
xchg
je
xor
sub
xchg
add
xor
sahf
sbb
mov
movsl
test
fistpl
aaa
pop
pop
push
bound
xor
imul
xchg
iret
repz
faddl
pop
add
mov
fmull
dec
rcr
xchg
lea
sub
sbb
movsb
mov
loop
lds
mov
stos
loopne
lcall
int3
pop
pop
mov
fucomp
fcmovnu
outsb
andb
adc
cmp
dec
fcompl
cmp
inc
mov
ds
int3
xlat
mov
mov
outsl
aas
cmp
jo
jmp
dec
mov
xor
fildl
leave
fiadds
sub
jb
inc
mov
hlt
aaa
les
cmp
stc
inc
mov
fdivl
push
add
xchg
call
or
lock
push
dec
out
and
xchg
or
mov
mov
and
ja
loop
iret
adcl
jnp
aam
xor
mov
jge
or
cmp
inc
mov
repz
insl
aas
andl
inc
shl
nop
push
out
nop
popa
mov
sbb
scas
rclb
adc
mov
jmp
lods
dec
repnz
push
pusha
gs
inc
lcall
loopne
leave
pop
shrl
fisubs
jmp
int
adc
arpl
ss
je
cs
inc
lea
sub
imul
dec
cmp
insl
cmp
xchg
add
ja
mov
mov
and
outsb
mov
cmpsb
stos
push
mov
lock
je
cmpb
mov
in
fwait
cmp
repnz
xorl
adc
lods
cmp
add
cmp
or
jecxz
int
dec
cltd
mov
jle
imul
mov
sbb
cli
pop
lds
lret
jo
aam
hlt
mov
ja
fwait
into
mov
addr16
stos
mov
sti
xchg
cwtl
sub
fmull
sub
sbb
jb
xchg
mov
cmp
icebp
adc
sub
imull
mov
sbb
imul
push
mov
inc
xchg
xor
mov
push
and
xor
mov
idivb
aam
jmp
fmull
mov
push
idivb
fwait
cmc
loop
or
or
sub
or
rolb
inc
jmp
out
mov
sbb
xchg
push
adc
add
add
ret
stos
hlt
out
je
pop
test
pop
adc
and
sahf
add
out
xorb
out
jne
mov
add
sahf
inc
scas
negl
inc
test
or
xchg
scas
add
inc
xchg
dec
xor
push
jl
lret
jo
mov
shll
or
ret
add
mov
les
fcomps
in
adc
int
sahf
popa
jbe
aam
push
add
or
ljmp
jg
insb
push
xchg
cltd
xchg
pop
ret
lods
and
cmp
adc
and
cmpl
push
mov
out
movsl
sub
loopne
and
sbb
sbbl
xor
lret
pop
mov
adc
inc
mov
fs
inc
inc
adc
mov
push
push
jmp
adc
mov
aam
jo
mov
sub
sub
adcb
scas
push
xchg
jl
sub
cmp
add
mov
inc
ret
mov
fisttps
in
push
loope
mov
fptan
add
fildll
leave
inc
ret
shr
movsl
jg
leave
add
fcmovne
fcom
shr
mov
fcomps
dec
add
nop
lock
cmp
adc
add
js
shrl
push
in
pop
fwait
cs
cld
gs
lods
jae
ffree
je
jnp
sbb
and
jb
loopne
faddl
sub
int
ret
loop
or
iret
lret
fiadds
pop
pop
add
lods
out
rcr
hlt
mov
mov
mov
mov
xchg
mov
bound
in
xor
and
notl
add
xor
jno
or
leave
cmp
int
aad
inc
scas
js
stos
imul
shrl
push
jo
xor
cmp
lret
jl
lods
sub
push
out
ffree
fwait
xor
in
adc
lods
mov
sub
cmp
fwait
in
and
int
cs
lahf
call
add
lret
push
and
xchg
lock
icebp
sbb
cmp
repz
sti
andb
jnp
bnd
add
mov
aad
sbb
cmp
add
pop
std
bound
pop
mov
fiadds
ja
jb
jbe
fidivs
pop
fsubl
sub
test
je
mov
pop
imul
xor
shll
fwait
push
int
mov
repz
int
imul
lods
enter
aam
movsl
jmp
icebp
icebp
cmp
pop
out
cli
and
sub
pop
mov
mov
or
push
add
test
adc
loope
dec
xchg
and
xchg
imulb
push
add
sbb
leave
ret
xchg
xor
cmp
loopne
and
ret
mov
sti
xchg
pop
or
lcall
test
rcr
aam
sbb
clc
repnz
lods
popa
mov
mov
cmp
push
orb
data16
xchg
pop
das
mov
aam
pop
daa
aad
les
dec
adc
mov
lcall
mov
xchg
call
sub
lods
fwait
add
mov
mov
out
pop
call
add
imul
pop
mov
arpl
test
mov
insb
xchg
adc
sbb
add
out
test
std
cmp
imul
lret
mov
add
fdivs
sahf
push
pop
push
imul
clc
or
insl
xchg
js
push
push
xor
hlt
imul
leave
push
lock
cli
jmp
ret
notl
and
push
mov
sub
aam
push
mov
adc
xor
inc
cmp
sub
cld
in
sub
dec
es
shr
mov
bswap
sbb
adc
and
inc
icebp
lds
testl
xor
mov
outsb
pop
stos
stc
les
imull
nop
in
pop
and
or
jae
mov
adc
xor
push
popa
dec
and
cmp
out
fsub
push
and
in
testl
xor
les
fnstsw
and
mov
stos
cmp
movsb
lret
sbb
inc
adc
jg
add
jne
pop
adc
dec
fnstcw
push
add
jne
lods
adc
push
inc
test
mov
jle
int3
repnz
insb
jle
hlt
or
pop
sahf
cltd
aaa
fnstenv
mov
and
pop
sti
fld
std
shrl
cmp
pop
mov
ret
cmp
xchg
push
leave
mov
and
loopne
push
je
aas
xlat
push
mov
push
push
pop
xchg
jae
jne
cmpb
arpl
incb
inc
cli
loop
adc
ds
xor
insl
orb
and
adc
inc
lret
mov
sbb
notl
ja
aas
bound
movsl
mov
pop
jmp
nop
lea
sub
dec
or
mov
push
jp
pop
jp
push
xor
xor
shrb
adc
loope
ds
call
xlat
xor
pusha
and
rcl
aaa
jb
aas
je
jb
popa
aas
cmp
stos
addr16
enter
inc
dec
push
iret
mov
and
sub
or
mov
addr16
or
iret
add
or
fldt
fwait
mov
sar
test
pusha
stos
dec
jl
xor
xor
cmp
sahf
bts
addr16
jecxz
mov
das
jecxz
dec
xchg
cld
int
fldenv
stc
mov
fimuls
lods
sbb
mov
xchg
out
xchg
insb
imul
into
dec
insl
lds
push
and
cmp
cwtl
movsb
call
roll
lods
sbb
div
fists
arpl
enter
jg
jbe
xchg
sub
jmp
xchg
inc
das
mov
in
insb
sub
mov
mov
jecxz
out
pop
faddp
cmp
scas
ja
scas
and
cmp
dec
ja
inc
and
jg
sub
cmp
leave
pop
adc
cmc
rcll
imul
and
mov
sub
mov
sub
add
push
sub
jl
mov
xchg
ja
adc
into
iret
ret
jnp
jg
movsb
or
push
clc
pop
ds
xchg
cmp
and
and
cmpsl
cmp
fcmovnbe
jo
pop
dec
adcl
push
mov
lcall
xchg
mov
inc
int3
push
lds
pop
sbb
out
popf
out
mov
ret
add
or
push
xor
adc
xor
push
mov
push
xlat
or
shll
adc
pop
outsb
jmp
dec
push
out
adc
push
sahf
popf
xlat
inc
sub
or
aas
call
and
pop
jno
nop
out
xchg
mov
xor
bound
push
add
adc
jnp
sti
mov
mov
scas
xchg
aam
int
jl
mov
daa
pop
movsb
ljmp
out
out
dec
stos
out
faddl
enter
aam
or
hlt
mov
hlt
out
jns
test
mov
negb
or
xor
push
or
jo
hlt
or
push
xchg
pop
pop
inc
je
stos
xor
lret
imul
aad
mov
push
mov
push
shlb
xor
or
pop
pop
mov
push
int3
push
cmp
xchg
fwait
ds
dec
sub
jmp
stos
mov
fwait
mov
push
std
aad
ds
inc
addr16
andl
inc
jne
test
aam
cmp
and
mov
arpl
xor
mov
sbbl
pop
cmp
pop
insb
flds
mov
or
scas
pop
mov
stos
adcl
cld
push
xchg
jb
xchg
adcl
xor
iret
add
insb
loope
fsqrt
sub
sbb
daa
movsb
push
bound
add
int
mov
jb
lcall
bound
adc
cmc
mov
insb
lods
cmpsb
movsl
xor
sti
sahf
dec
rsm
cmp
xchg
bound
ja
add
out
xlat
pushf
mov
sbb
gs
mov
dec
cmp
inc
sbb
mov
mov
xchg
test
ret
ret
sbb
cmpsb
jl
xor
jge
subl
jnp
pop
and
pop
xchg
shrl
push
fsubrp
jbe
mov
test
fdivs
mov
xchg
int3
addr16
fnclex
jno
mov
addr16
jle
and
push
fisttpl
jg
stos
mul
adc
sbb
dec
out
inc
aas
and
out
fwait
xor
mov
jecxz
outsl
and
enter
jbe
cmp
adc
cmp
ss
jg
add
and
inc
nop
movsb
icebp
pop
adc
xchg
push
cmpsb
push
xchg
aas
cltd
gs
push
inc
dec
push
std
sub
xchg
or
xchg
inc
lcall
outsl
mov
push
push
jbe
mov
mov
js
mov
insb
adc
jge
rcr
mov
xor
loop
jno
mov
and
add
xchg
cmovnp
dec
test
add
xchg
jb
push
jne
mov
out
inc
dec
mov
and
fstpl
loop
fxch
lret
push
dec
out
push
jmp
inc
mov
in
stos
lds
pcmpeqb
adc
out
cld
mov
fildll
fisttps
lods
fsubp
stc
xchg
mov
or
cmp
dec
or
xor
mov
ds
jns
int
outsl
push
lods
testl
sahf
jbe
sahf
cmp
out
cli
xor
shl
inc
aad
ja
sub
mov
repz
icebp
mov
pop
or
lods
fwait
push
inc
adc
subb
dec
lea
mov
sub
das
mov
dec
xchg
gs
adc
xchg
jge
in
popf
lock
and
cmp
sar
std
mov
cmc
mov
xchg
push
dec
and
mov
mov
pop
mov
pop
push
push
jo
enter
cmpsl
aas
adc
pop
push
cmc
xchg
push
in
xchg
push
dec
jae
jecxz
imul
aas
test
ret
out
adc
loopne
sub
fnstenv
je
or
add
fnsave
mov
and
cmp
mov
cmp
je
mov
in
push
xor
mov
cmp
bound
mov
out
es
sbb
lock
dec
out
mov
pop
jno
ret
loope
mov
sarl
inc
add
mov
rorb
and
movsl
inc
xchg
fwait
pop
jecxz
imul
adc
jno
ret
or
aam
mov
pop
test
out
jne
cmpsl
mov
movsl
pushl
pop
fstps
clc
outsl
fwait
cmp
popa
add
add
mov
push
cld
out
sbb
pop
adc
cmp
adcb
jno
movsb
mov
pop
mov
pop
fwait
add
mov
dec
or
gs
sub
pop
rcll
xchg
pop
nop
jne
imul
xchg
adc
mov
loope
push
stos
fisttpll
sbbb
in
pop
in
repz
cmp
xchg
dec
cmc
sbb
xchg
xchg
cwtl
dec
cmp
int
cmp
cltd
jne
sti
loope
das
push
movsl
es
push
inc
das
aam
scas
mov
sbb
rcrb
add
lret
jno
sbb
mov
jne
cltd
push
jmp
jns
adc
fdivr
cli
hlt
popf
mov
fisubl
sub
test
jns
adc
lret
mov
rorl
or
fcoms
lret
ja
push
ret
push
sub
imul
pop
dec
sti
push
das
push
push
push
movsb
push
in
and
aaa
push
jnp
or
mov
mov
adc
or
cwtl
jp
lea
push
mov
xchg
mov
and
jns
adc
inc
push
and
dec
mov
and
arpl
xor
add
and
data16
in
enter
dec
mov
mov
push
test
xchg
sbb
into
mov
stos
clc
xchg
popa
addr16
fisttpl
cwtl
fcmovnb
outsb
sbb
ficoms
mov
iret
jns
adc
dec
mov
scas
in
mov
in
xchg
fs
mov
stos
pushf
leave
test
add
xchg
mov
jnp
out
insb
inc
add
cli
adc
cltd
loopne
mov
inc
xchg
enter
sbb
pop
push
les
mov
je
cmp
mov
jge
inc
and
lret
or
jmp
aaa
repnz
lret
out
dec
push
stos
xchg
jbe
sbb
and
outsb
sub
sahf
outsb
aad
fwait
dec
mov
push
in
in
in
out
vunpcklps
shr
xchg
hlt
cmp
into
shrb
jecxz
push
sbb
adc
cmp
xor
ss
popf
fcomps
ljmp
ret
pop
xchg
lods
lret
pushf
fldt
push
mov
sub
pusha
sub
leave
popa
add
cmp
imul
and
dec
mov
lret
sahf
test
mov
sbbb
out
cmp
xor
shlb
faddp
inc
cs
add
pop
fstl
rcl
ret
add
jecxz
or
or
sar
shr
jns
ds
inc
pop
inc
mov
jmp
insl
aam
pop
repnz
push
pushf
cltd
je
inc
push
test
jae
aaa
bound
fmuls
sub
mov
popf
das
fdivl
cld
add
cs
xchg
xchg
hlt
jg
pop
mov
add
or
dec
pmuludq
or
inc
sbb
sub
adc
adc
push
out
les
jns
popa
rcrb
push
bound
sbb
fstl
xchg
outsb
das
sbb
scas
rclb
mov
sbb
jo
movsl
in
inc
rolb
lahf
dec
jp
add
inc
and
xchg
xor
outsl
fs
push
add
sti
test
jge
sbb
push
mov
mov
insb
cltd
dec
fcompl
mov
or
inc
call
lock
cmp
scas
int3
es
movl
ss
pop
shll
jbe
les
cmp
mov
popf
fistpll
lds
and
xorb
mov
mov
orl
ret
outsl
jns
repnz
lcall
testl
push
loope
ljmp
xchg
in
out
fidivl
imul
js
mov
sub
xchg
out
sub
push
lcall
enter
pop
inc
ds
test
das
xchg
rcr
jb
mov
mov
mov
cmpsb
inc
sbb
rolb
push
loopne
hlt
sahf
insb
jo
push
or
dec
aaa
cmp
and
inc
mov
jae
add
negl
aad
mov
push
loopne
fsts
pusha
scas
enter
scas
out
jmp
or
xorl
and
jae
stos
pop
cs
jno
rcl
push
xor
add
rcll
cmpb
mov
lret
bound
dec
dec
in
mov
mov
xchg
add
arpl
imul
jno
adc
or
push
scas
outsb
imul
push
cmp
cmc
ds
inc
imul
leave
push
mov
xchg
aam
das
stc
pop
mov
mov
add
nop
add
inc
mov
aaa
mov
and
enter
pop
xor
dec
mov
inc
sub
mov
cld
cmc
inc
jo
popf
mov
es
in
sahf
push
dec
lock
pop
sahf
lcall
push
mov
or
rol
sbb
divb
dec
fs
cmp
ljmp
scas
shlb
lods
stos
scas
pop
mov
and
out
test
xchg
icebp
sbb
ja
sub
ret
imul
outsb
shlb
cmp
addb
jmp
xchg
ljmp
xor
hlt
in
adcb
lea
sbb
cmp
mov
aam
add
fs
ds
sub
jb
inc
in
dec
arpl
dec
jns
js
js
iret
fcompp
adc
cmpb
mov
repz
pop
jecxz
es
gs
and
xor
pop
xor
cmp
mov
push
xor
fs
jns
mov
addr16
jge
jg
leave
leave
cmp
mov
in
das
push
sbb
pop
out
mov
mov
mov
mov
add
xor
lods
xchg
lods
shrl
xchg
subb
lds
sbb
dec
repz
mov
aam
push
popa
loopne
dec
loopne
lret
and
sbbb
sbb
repnz
dec
lahf
enter
out
xorl
aam
pop
inc
jo
movsb
lahf
jnp
adc
mov
cmp
int3
add
aad
int3
inc
sub
inc
adc
adc
mov
jb
sub
cmp
out
out
push
test
push
mov
movsb
xor
and
pop
xchg
push
adc
test
not
cmpsl
or
dec
pop
mov
push
mov
sub
rol
mov
sbb
stos
mov
push
add
stos
imul
test
pop
push
push
insl
cmpsb
inc
xor
fnsave
ret
jnp
mov
dec
divl
mov
and
inc
cmc
cmpsl
inc
pop
add
mov
adc
sbb
and
push
mov
ret
test
daa
sbb
arpl
and
in
adc
in
xlat
fdiv
mov
es
pop
ficompl
and
lods
push
leave
int3
ror
lahf
mov
das
mov
cli
xchg
jecxz
push
or
out
pop
mov
push
sbb
add
push
jmp
xlat
out
int3
dec
loope
adc
jl
dec
daa
pusha
cmp
mov
mov
dec
cmpl
and
stos
shll
test
imul
ret
jnp
pop
sub
mov
loop
inc
fsubl
mov
push
ss
push
mov
das
lock
cmpsb
enter
mov
mov
push
inc
push
push
mov
mov
fnsave
add
insl
cmpsb
test
mov
adc
insl
imul
push
xchg
das
jmp
xchg
and
inc
fwait
clc
jle
jae
and
jp
adc
addl
lret
loop
lcall
dec
mov
dec
aam
aam
out
aaa
scas
test
add
push
enter
mov
add
loopne
das
push
rcrl
cmp
cli
adc
sbb
mov
cmp
fs
adc
jmp
xor
xor
pop
inc
pop
mov
fwait
loope
or
shll
mov
out
mov
dec
movsb
adc
cmp
pop
loop
push
pop
fisttps
insb
mov
movsl
mov
aad
mov
jecxz
xchg
lcall
fistpl
popl
test
xchg
sbb
pop
mov
cwtl
imul
lret
sbb
test
inc
gs
jp
and
std
and
xor
cwtl
and
pop
divl
mov
cmp
push
xchg
in
mov
pop
shlb
loop
mov
cmp
pop
add
dec
dec
jp
jnp
cmp
inc
jmp
mov
mov
sets
sub
shl
pushf
loope
setl
bound
pop
call
mov
jo
inc
rcrl
sti
cmp
cltd
lret
lea
lods
fsubrl
mov
repz
lret
mov
mov
jno
sti
loope
mov
ljmp
jb
adc
mov
addr16
enter
sbb
jl
or
jmp
sub
adc
repz
sbbb
das
jg
mov
les
mov
orb
jne
sbb
ret
push
fiadds
add
sub
mov
or
push
out
and
repnz
enter
cmp
ss
lods
xor
mov
mov
sbb
sub
xchg
into
aaa
gs
pushl
sarl
into
sub
or
and
fsubrl
sbb
dec
ja
or
mov
jno
xchg
lds
ret
jns
cmpsb
aad
outsl
test
xchg
aaa
shr
addr16
scas
mov
aaa
xor
push
xor
mov
pop
daa
pop
mov
and
cmpsb
mov
adc
cmpsb
imull
sbb
mov
movsb
jbe
cmpsl
and
cmp
lret
in
mov
adcb
mov
lock
out
rcrl
xlat
pop
jno
sbb
insl
jns
mov
jbe
repz
xor
sub
data16
adc
roll
pop
xchg
xchg
and
bound
jae
call
ja
mov
xor
cmp
mov
push
hlt
rcrb
inc
jnp
inc
sub
push
pop
test
cs
sti
lcall
les
xchg
lret
and
mov
sbb
adc
xor
lret
cmp
stos
subl
ds
mov
pop
sbb
rclb
mov
mov
jge
jnp
fcmovnbe
push
dec
stos
push
movsb
pusha
jo
ds
cmp
addr16
aam
scas
cmp
and
shr
ret
das
and
adcl
fstps
cli
sub
fbld
xor
xchg
lcall
lock
fsts
pushf
dec
inc
fsubrp
dec
ja
repz
int3
adc
or
jne
lds
std
int3
or
insl
fadd
mov
out
mov
enter
stos
pop
mov
lods
mov
jae
inc
jecxz
inc
pushw
mov
cmp
sbb
xchg
xchg
sbb
push
jecxz
xchg
in
mov
inc
mov
les
xchg
shll
push
push
mov
mov
jp
push
lahf
in
enter
fidivrl
shll
sbb
lea
aas
rolb
push
leave
faddp
jbe
imul
outsb
int3
push
and
das
cltd
sub
jo
jle
addr16
pushf
movsb
rorl
rolb
ljmp
mov
aad
jmp
ss
arpl
sbb
andl
lds
add
lret
add
aas
sub
aam
jp
rolb
jbe
sub
sbb
mov
push
mov
lea
dec
xor
mov
fcmove
icebp
cmp
data16
mov
mov
in
sub
sbb
mov
inc
dec
movsb
add
jb
xchg
xchg
xchg
dec
dec
xor
repnz
jbe
insb
jecxz
scas
rorl
inc
shrb
inc
mov
mov
stos
cmp
loopne
xor
out
in
popa
mov
fistpl
xor
lods
and
pushf
stos
movsl
jno
lahf
sub
jl
push
mov
inc
mov
aad
jnp
cwtl
jg
cmp
test
pminub
in
or
sbb
xlat
sbb
loopne
inc
les
jmp
iret
adc
repnz
mov
dec
lock
dec
jno
and
lods
jb
xor
repz
jnp
mov
sub
xchg
mov
push
jnp
sti
mov
jo
and
into
cmp
jae
mov
mov
test
fsubs
test
jo
push
stos
dec
mov
cld
pop
xor
mov
dec
adc
outsl
ret
gs
leave
pop
addr16
push
jns
jge
push
mov
mov
mull
adc
lret
icebp
stc
jo
pop
mov
cmp
dec
outsb
mov
mov
ja
shll
pusha
mov
add
jmp
cs
shll
xor
jl
push
adc
insl
ds
ret
pop
jmp
cs
mov
stos
sub
jb
rorb
pushf
mov
mov
or
ja
ljmp
addr16
jge
mov
xor
in
test
push
push
mov
add
in
jl
pop
xor
ret
in
lcall
dec
inc
call
inc
push
adc
xor
push
mov
gs
or
call
scas
adcl
roll
mov
daa
ret
cld
in
std
scas
cmc
les
lahf
or
xchg
jnp
test
xor
cmpl
nop
ljmp
subl
loope
cmpsb
add
scas
stos
inc
les
push
stos
push
and
imull
movsb
mov
out
push
adc
data16
jo
neg
xchg
outsl
push
xchg
cmp
mov
jle
xchg
mov
cs
repz
fidivrl
loopne
mov
loop
repnz
js
push
pop
lret
lea
cltd
push
lea
repz
pop
shrb
xlat
jmp
insl
xchg
shl
inc
jb
mov
jnp
and
lret
push
pop
add
jg
shr
sub
mov
push
call
ret
es
aad
add
enter
mov
push
aas
jns
push
repz
mov
subl
mov
lods
jge
mov
jmp
call
jmp
sbb
addr16
int3
mov
adc
sub
es
lods
adc
adc
loopne
pop
out
ret
sbb
fwait
mov
or
repnz
push
sbb
push
repnz
cmpsl
add
jae
mov
push
xchg
push
adc
xchg
jnp
xor
cld
and
iret
pop
or
rcll
push
or
popa
das
andb
lds
lock
mov
or
imul
push
push
es
xchg
into
in
seto
dec
in
inc
adc
inc
fs
scas
sub
dec
lcall
aaa
pop
dec
dec
xor
into
dec
pop
adc
mov
mov
jp
lea
cltd
mov
pop
mov
push
pop
lock
mov
ret
loop
dec
movsb
faddl
data16
mov
cli
test
jne
and
dec
pop
das
or
test
add
in
fs
rcrb
shr
cmp
mov
sahf
out
clc
mov
xchg
push
test
mov
jecxz
pop
mov
fmull
jmp
or
loope
sub
rcl
aam
out
jne
add
repnz
add
cmp
inc
bound
inc
mov
pause
jecxz
jbe
and
outsl
clc
mov
adc
cmp
xlat
jne
jb
sbb
jl
imul
lret
lcall
pop
ja
aaa
inc
inc
inc
out
jmp
sbb
adc
dec
and
out
popf
pop
insb
addl
push
fnsave
xchg
add
imul
push
sbb
add
lods
sarb
mov
outsb
outsl
mov
sub
xchg
pop
cmpsl
call
sahf
popf
sbb
inc
xchg
scas
mov
negl
jbe
inc
mov
xchg
mov
push
add
cmc
loop
pusha
insl
rep
push
jle
xchg
push
cltd
lds
outsl
adc
jecxz
push
ret
mov
sub
in
xchg
adc
sahf
dec
imul
add
sub
loope
sbb
xchg
push
push
mov
pusha
xlat
push
or
ret
and
jbe
pop
int3
jp
sub
lds
cld
mov
ficoms
or
insb
dec
in
jae
sti
adc
adc
jo
idivb
sub
mov
pushw
les
xlat
leave
xchg
mov
imul
cmp
and
lock
repnz
movsb
pop
dec
pop
push
pusha
cltd
cltd
mov
sub
lret
dec
xchg
sub
bound
or
add
inc
insl
jge
stos
test
mov
cltd
jmp
jo
dec
mov
pushf
clc
sbb
xor
inc
mov
daa
out
add
adc
cmp
fcmovne
int3
mov
inc
mov
jge
add
call
cwtl
aad
dec
cmpl
fstl
shll
pop
or
sahf
jle
mov
movl
lret
insb
xor
lahf
lods
hlt
pop
xor
pop
pop
cli
push
lret
hlt
test
movsb
lcall
push
jg
mov
and
xchg
popf
pop
test
mov
cmp
out
sahf
inc
xchg
orl
sub
xor
pop
or
xchg
adc
es
pop
incl
push
xchg
dec
or
mov
push
je
cld
inc
xchg
xor
rcll
mov
sti
jne
movsl
or
mov
sbb
mov
fstpt
xor
jnp
outsb
je
iret
les
mov
jne
mov
jl
leave
and
cmp
dec
pushf
dec
mov
xchg
faddl
dec
sahf
cmp
jo
xor
addr16
ljmp
xchg
jmp
lcall
pop
push
test
or
mov
push
push
push
pop
mov
xchg
adc
add
mov
movsb
stos
rol
addr16
shrb
push
mov
push
pushf
mov
pop
push
andnps
popf
insb
xor
pop
inc
into
sahf
xchg
jo
scas
pusha
mov
sub
int3
movsl
outsb
flds
push
dec
pop
lods
cld
pop
sbb
insl
repnz
push
mov
int
rcll
idivb
xlat
out
in
imulb
cltd
lods
push
push
aad
stc
adc
push
jg
jae
and
aam
and
subl
ljmp
pushf
lret
nop
or
std
dec
xor
and
std
aaa
cmpsb
fstp
jb
and
bound
inc
cmp
outsb
push
loop
add
scas
icebp
push
mov
xchg
data16
jmp
or
cmpsl
and
mov
adc
or
xchg
fwait
jl
in
jle
rcl
mov
sub
call
cmc
loopne
inc
imul
rclb
adc
es
push
rcrb
shrl
lcall
inc
jecxz
ljmp
iret
mov
into
out
lods
xchg
push
enter
js
or
fimull
jne
xor
cmpb
ds
sbb
xchg
xor
jnp
and
into
orb
std
mov
sub
into
ljmp
stos
je
leave
adc
in
add
xorb
jno
outsl
jae
cld
insl
xchg
mov
mov
mov
push
inc
cli
stc
and
dec
aam
push
ljmp
mov
pusha
mov
lds
sub
dec
lea
mov
jge
mov
xor
mov
mov
mov
lret
jno
adc
mov
pop
and
out
bound
sbb
add
testb
inc
xor
fstps
mov
mov
inc
push
dec
ret
stc
or
sahf
outsl
popa
lds
rolb
mov
mov
and
in
pop
shlb
push
das
addb
call
push
mov
in
movsl
sbb
xor
xchg
xor
aam
jbe
lods
xchg
inc
inc
mulb
push
clc
sti
pop
out
pusha
and
push
adc
stc
mov
in
fisubrs
jbe
mov
jmp
ds
sbb
fsubs
push
add
stos
xor
out
cmp
push
mov
jp
jg
in
bound
ret
pop
mov
stos
dec
mov
or
rcrb
mov
sbb
arpl
pop
sub
aad
mov
lahf
cmpsl
dec
pop
inc
mov
lahf
mov
lds
xchg
fs
mov
push
mul
stos
jg
vphsubdq
icebp
nop
and
divl
je
lods
add
add
cmp
sarb
and
jecxz
or
adc
nop
or
loopne
loopne
arpl
cmp
fildll
jae
rorl
rolb
fs
pop
test
decl
pushf
push
cmpsb
movsl
lock
gs
xchg
sub
push
loop
sar
popf
hlt
push
in
sarb
nop
mov
idiv
push
out
and
xor
mov
mov
mov
in
cmpsl
mov
js
sbb
je
mov
out
aam
mov
inc
ljmp
cmpsb
sar
lret
pushf
mov
xchg
test
lods
xchg
sbb
and
cmpsl
in
stos
and
arpl
jmp
fldcw
adc
mov
rorb
and
orb
scas
daa
and
pop
add
outsb
lret
lods
cmp
sub
mov
xlat
mov
sub
push
or
cmc
loopne
arpl
cmp
fcmovnbe
nop
mov
test
mov
add
insl
les
adc
test
push
outsl
scas
imul
adc
xor
pushf
test
aad
mov
subb
push
ja
mov
xlat
xchg
mov
pop
test
push
fs
push
fwait
sub
scas
movsb
dec
pop
notb
inc
imul
popa
push
inc
mov
mov
sub
mov
push
lods
sub
add
fiaddl
ljmp
pop
rorl
add
repnz
negl
dec
outsb
push
sahf
enter
int3
dec
mov
mov
lods
and
loope
mov
iret
shll
push
ret
out
in
pop
mov
leave
subb
pushf
and
mov
shrb
sub
andb
cmp
sub
jno
mov
ret
pop
dec
inc
bound
scas
dec
add
popf
jns
imul
sahf
cmp
mov
adc
or
mov
dec
cmp
mov
pop
scas
sbb
fs
jle
insl
sbbl
bound
icebp
ds
testb
out
cmp
lea
pop
jge
dec
sbb
jg
xchg
scas
sbb
iret
mov
jo
xchg
shll
pusha
sbb
shlb
cmp
jle
or
cmp
aaa
int3
into
pushf
mov
aad
sub
ss
xchg
lock
dec
sub
xor
sbb
xchg
sub
adc
cmp
jo
in
xchg
mov
mov
enter
jmp
mov
ds
lods
out
mov
mov
loope
mov
lret
xchg
xlat
jo
ds
int
and
jbe
int
cmp
fsubs
jae
je
test
add
cmp
cs
sbb
push
fcomps
popf
jmp
push
cmp
cmp
sub
xor
mov
add
pop
stos
mov
pop
js
dec
cld
je
jle
add
mov
mov
cmp
in
add
pop
fdivr
dec
cltd
mov
or
out
xchg
or
or
xchg
pop
int
and
ds
popa
jnp
pop
dec
out
outsl
xor
jbe
aad
dec
movb
shl
push
test
test
adc
sbb
test
jbe
xorl
cmp
push
adc
cld
mov
mov
jge
bound
xchg
xchg
and
and
jns
nop
mov
aaa
dec
idivb
mov
hlt
xchg
adc
stc
fisubrl
clc
addb
fidivrl
fisttpll
pushf
rcr
mov
rol
pop
outsb
xor
out
pushf
mov
add
add
cmpsb
sbbw
rcll
cmp
add
mov
cmpsb
jns
mov
pop
int
and
std
sbb
xor
mov
cs
jecxz
sbb
sbb
pop
adc
cmp
enter
add
neg
shlb
and
pusha
pusha
sbb
fiadds
sbb
loope
xlat
popf
push
outsl
or
in
movsl
push
sbb
mov
fcomps
pushf
call
aad
out
cmc
pop
insl
repnz
aad
xchg
push
lret
xor
lret
push
test
jns
add
fnstsw
imull
jg
es
popf
mov
mov
test
sub
cmpsl
push
sub
roll
push
mov
gs
imul
mov
outsl
add
icebp
fwait
jg
idivl
xor
shl
xchg
mov
jb
ret
pop
mul
rcll
lcall
stos
aad
scas
mov
inc
cs
ret
out
mov
out
jnp
or
dec
clc
fcmovu
jecxz
add
clc
out
cmp
xor
pop
addb
pop
mov
cltd
loopne
and
test
lret
pop
in
jl
or
jbe
mov
icebp
mov
lea
test
fimuls
lcall
mov
xor
repnz
adc
inc
ljmp
in
daa
sbb
sbb
dec
inc
out
mov
adc
in
pop
xor
dec
jae
lcall
mov
sub
mov
pop
pop
adcb
sub
hlt
inc
xchg
and
movl
mov
push
cmp
mov
push
ret
divb
xor
inc
shl
push
push
imul
jns
sarb
push
pop
adcl
pop
pop
lea
mov
shr
in
inc
mov
fstpt
imul
dec
rcr
mov
sahf
mov
jg
mov
push
jns
cmpsb
in
cmpsb
shl
mov
sahf
daa
adcl
rorb
and
aaa
add
in
mov
js
mov
cwtl
test
mov
fwait
cs
fwait
in
fistpll
mov
inc
add
inc
inc
pusha
das
xor
push
xlat
jbe
sbbl
sub
cwtl
inc
dec
xor
pop
or
lock
jle
adc
adc
xchg
lret
daa
sbb
popf
push
push
in
fstl
sub
adcl
jle
add
sahf
data16
mov
inc
xchg
xor
add
stc
dec
cld
scas
push
in
or
cwtl
or
nop
mov
mov
das
sub
adc
inc
xlat
cmp
out
mov
mov
xlat
leave
out
aad
jge
push
pop
push
pop
xor
push
insb
rcrb
cld
mov
jmp
cmp
mulb
loop
cmp
inc
cmpb
mov
and
pusha
or
dec
in
sub
xor
and
cmpsl
push
mov
push
and
andl
mov
in
jne
jecxz
hlt
adc
inc
pop
sbb
sub
outsb
and
insb
in
fwait
xor
nop
pusha
add
repz
inc
aam
rcrl
rcll
in
adc
cmpsl
cmp
ss
xchg
data16
xlat
push
bound
and
outsb
push
repnz
cmpb
cmp
inc
mov
jl
pop
mov
data16
ret
arpl
loopne
push
arpl
mov
mov
loope
cmc
and
inc
add
daa
dec
push
push
call
lea
into
movsl
jmp
fs
movsl
sbb
or
int
out
adc
adc
arpl
push
cmp
mov
push
lock
cmp
repnz
ds
notl
neg
je
jo
and
mov
scas
je
ljmpw
cmp
shrb
or
xor
jle
test
sbb
mov
mov
or
xor
xchg
pop
sarb
ss
rcll
ja
iret
jg
icebp
jne
test
xchg
std
or
ss
xchg
inc
xchg
pop
sarw
xlat
mov
dec
std
testl
pop
in
inc
imul
pop
push
ds
es
mull
lret
out
in
sbb
and
lock
aaa
mov
fwait
int
ja
mov
pop
cmc
jl
mov
xchg
in
pop
mov
sarb
fwait
xor
cmp
ds
divl
mov
lds
icebp
and
push
add
bound
inc
in
sbb
mov
mov
ljmp
push
xor
cmp
je
pop
pop
aad
scas
lods
sbb
leave
out
push
mov
movsb
cli
push
jbe
imul
pop
push
mov
cltd
jmp
stos
stc
repz
test
sub
or
clc
imul
push
lea
stc
xchg
loop
ss
adc
sub
mov
fnstenv
cs
jl
add
aas
sub
mov
aaa
mov
test
pop
mov
test
mov
out
add
cmc
xor
loope
mov
pushf
lret
pminub
out
mov
mov
lods
adc
dec
sub
clc
fsubrs
iret
push
jl
out
mov
add
and
or
daa
cs
adc
lods
iret
sbb
add
lea
fdivs
cld
xor
mov
push
cs
xchg
mov
cli
insl
fisubrl
movl
cmpsl
insb
cld
inc
call
scas
push
cs
mov
ficompl
scas
shlb
mov
and
add
out
mov
pop
xor
and
rcrb
jmp
je
outsb
cmpsl
dec
lods
jle
gs
mov
mov
sete
prefetch
cmpsl
les
call
dec
jno
mov
sti
clc
aad
repz
sbb
pusha
cmp
test
iret
mov
outsb
pop
jle
mov
cmpsb
xorb
dec
xor
xchg
jmp
sub
js
jo
insl
test
scas
xorb
lods
loope
dec
test
je
subl
or
xchg
pop
lds
inc
add
sbb
sbb
inc
cld
outsb
jmp
xchg
inc
test
jae
jbe
ja
mov
ja
cmpsl
sbb
mov
xchg
sbb
dec
and
or
pusha
in
mov
sbbb
clc
clc
inc
pushf
mov
push
js
in
outsb
pop
rcl
push
pop
rclb
rcl
push
pop
pop
push
xlat
into
dec
dec
rol
inc
rol
inc
rorb
lret
rol
ss
mov
cmp
cmp
mov
mov
sub
fwait
xchg
adc
cltd
pop
push
fwait
xchg
sbb
pushf
cltd
sbb
mov
or
test
or
mov
bnd
push
jb
std
pushl
cli
push
loop
pusha
arpl
rcll
push
pop
aam
push
push
fcomp
pop
pop
fst
push
inc
mov
dec
lret
lret
mov
inc
dec
into
lret
lret
ss
mov
xor
mov
sub
adc
lahf
adc
cwtl
xchg
adc
xchg
add
mov
add
sldt
ja
lock
hlt
cli
jg
cli
jge
in
loop
push
out
outsl
pop
fcmovnu
pop
pop
aad
push
pop
aam
push
pop
fcomp
push
pop
fcmovb
inc
inc
int3
lret
inc
inc
ret
dec
enter
int3
lret
iret
ret
enter
mov
xor
cmp
mov
sub
sahf
xchg
push
adc
sahf
push
adc
mov
or
addl
or
mov
jo
stc
jl
divl
cli
cli
jnp
clc
insb
pusha
in
call
pop
push
rcl
push
pop
pop
push
fcmovnu
pop
pop
fcomp
push
inc
ret
inc
mov
inc
lret
inc
enter
roll
mov
xor
mov
cmp
mov
sub
and
xchg
adc
pop
xchg
cltd
pop
sbb
xchg
or
add
mov
or
js
hlt
bnd
push
je
stc
cld
jge
ss
pop
xorb
icebp
xor
mov
pop
sbb
mov
test
mov
in
add
pop
mov
or
adc
js
push
sub
fucom
mov
addr16
stos
cld
push
cli
fiaddl
mov
clc
mov
push
push
popa
sti
mov
sub
dec
sbb
pop
in
js
push
push
and
adc
push
mov
inc
mov
jg
outsb
iret
push
movsl
daa
push
mov
mov
jp
mov
or
shlb
outsl
xor
pop
cmp
movsb
xchg
lcall
dec
sub
sbb
push
and
and
outsb
mov
cmp
inc
jb
dec
insl
dec
cmp
inc
push
adc
inc
add
std
mov
sbb
mov
and
data16
arpl
adc
pop
xor
push
mov
mov
mov
dec
pop
test
fwait
lods
lahf
rcrl
data16
cltd
aas
jle
jmp
scas
hlt
loopne
cmp
imul
outsl
fisubs
imul
or
mov
jne
pop
arpl
xchg
call
adc
push
fwait
sti
lods
mov
mov
sbb
jg
pushf
jo
xor
outsl
loope
push
xor
sub
nop
cmc
je
push
inc
mov
ss
mov
outsb
insb
sbb
push
sub
ret
int
jg
in
mov
mov
imul
add
jae
add
pop
hlt
mov
leave
push
cli
into
jno
fbstp
ror
sub
xbegin
mov
push
inc
pushf
mov
add
in
pusha
int3
jb
outsl
cltd
ret
and
or
int
push
inc
lods
outsw
cmpsl
mov
rcr
mov
pusha
test
adc
icebp
gs
push
repz
push
in
add
sbbl
mov
push
xor
jg
jmp
daa
sub
ret
jae
les
lret
subb
mov
int3
dec
xor
push
cmp
jp
push
shll
outsb
push
push
jne
in
xor
bound
pop
ds
sub
push
pop
pop
pop
xchg
jmp
adc
jmp
jno
and
aas
inc
sti
cld
dec
mov
xorb
push
adc
xchg
insl
jg
xsaveopt
sub
mov
xlat
xor
ficompl
cmc
outsl
jmp
in
aas
sbb
sbb
jno
xor
jo
xor
push
push
out
loopne
mov
ret
pushf
icebp
and
pop
leave
cmc
stos
xor
mov
mov
inc
rorl
inc
shlb
mov
sbb
add
push
adc
imul
mov
inc
pop
mov
jl
gs
ja
mov
fistpll
sbb
inc
lods
and
neg
sbb
call
ja
jmp
lret
inc
sbb
mov
outsb
mov
insb
cld
nop
loope
cmp
sbb
push
pop
push
sub
jb
xor
xor
popf
mov
cld
repz
adc
mov
in
mov
xchg
adc
jg
leave
xchg
cli
cltd
rcrb
int
xchg
and
mov
sbb
popa
jb
cmp
js
sub
outsb
and
ljmp
xor
sub
mov
stos
dec
inc
adc
jmp
pop
daa
mov
mov
nop
stos
cmpsb
leave
pushf
mov
ds
push
repz
in
add
scas
std
out
mov
arpl
mov
fiadds
movsb
frstor
in
mov
rol
loope
fwait
rorl
pcmpeqb
add
mov
cmp
xchg
mov
out
jns
adc
xchg
push
shrb
adc
mov
jo
add
stc
add
std
outsb
aam
inc
aad
push
mov
mov
mov
pop
arpl
pop
xchg
adc
jg
lret
lock
in
notl
jno
das
insb
lcall
das
arpl
bnd
adc
popf
mov
out
js
dec
loopne
sbb
mov
mov
cmp
cmp
cmove
dec
push
sbb
pop
cmp
cmc
mov
push
sbb
push
adc
maskmovq
negl
sub
or
pop
fdivrs
mov
mov
xchg
scas
jo
lret
push
xor
add
and
lods
test
push
push
dec
mov
rorb
cmp
gs
and
lods
jge
mov
icebp
mov
xchg
fwait
mov
xchg
roll
call
jmp
jo
loopne
xor
dec
push
sbb
push
and
push
stos
jns
or
cmp
popa
jp
mov
mov
int
adc
jns
or
push
ror
or
pop
daa
ds
mov
sub
and
xchg
sub
data16
or
pushf
outsl
push
pop
shr
in
adc
xchg
jae
or
mov
and
shlb
int
sub
pop
outsl
insb
cmp
outsb
inc
cmp
shll
gs
add
push
mov
sbb
decl
sub
jle
stos
popf
movsb
xchg
lret
movsl
aas
sub
pop
mov
ret
fldt
add
pop
je
aad
jno
ljmp
and
decl
cld
jns
insb
pop
jg
lcall
jp
std
mov
subb
push
addr16
pusha
movb
test
inc
xchg
out
sbb
in
orl
enter
mov
subl
scas
dec
mov
mov
inc
dec
pop
or
and
clc
add
mov
lret
insb
lock
push
and
sub
and
or
fists
pop
add
or
xchg
call
shll
pop
test
mov
sub
cmp
fwait
push
push
pop
adc
adcb
jbe
or
mov
addr16
in
enter
xchg
mov
cs
mov
mov
movsl
int
inc
jno
push
or
adc
int
sub
mov
xchg
loopne
stc
sub
sbb
ret
push
imul
cmpsl
jb
push
outsb
in
dec
cmpb
sti
mov
push
xor
loop
xor
out
mov
not
jmp
xchg
dec
fadd
mov
lds
fmuls
rolb
pop
mov
sub
fdiv
mov
mov
shr
into
xor
ljmp
lods
add
out
scas
push
xchg
rcll
cs
mov
push
xor
sbb
xchg
inc
pop
push
call
sahf
das
adc
pop
dec
mov
and
dec
xchg
testb
shrl
sbb
out
leave
or
xor
leave
int
xor
dec
mov
lret
and
fdivrl
add
jmp
pop
xor
pop
pop
dec
cmp
push
sub
pop
fcoml
adc
fnsave
mov
xor
fadd
and
push
rcrb
inc
pop
dec
cmpb
dec
fiaddl
cld
loope
test
ds
push
jae
popf
shrb
push
xchg
inc
in
mov
sbb
daa
add
leave
and
mov
gs
out
and
adc
aad
rorl
push
pop
sbb
mov
fnstenv
stos
jp
add
imul
in
rcll
movsl
nop
xor
add
lcall
adc
lahf
adc
daa
stc
push
jo
shrb
lods
and
movsl
cwtl
mov
ss
sbb
push
stos
lock
jae
pop
mov
cmpsl
lea
out
movsb
xor
inc
lret
call
out
xor
adc
nop
jp
mov
fiadds
loop
mov
adc
sub
cmpsb
in
jne
stos
dec
gs
inc
sbb
jo
ret
pop
pop
sbb
fs
sub
adcb
adc
mov
and
leave
sub
jns
pop
lret
pusha
sarb
imul
xor
inc
push
xchg
adc
sub
sbb
jmp
mov
cmp
test
scas
iret
sbb
jecxz
pusha
movl
sub
cmp
jg
and
je
addr16
cmp
pop
popf
arpl
pop
faddl
inc
push
sub
test
dec
push
ret
mov
dec
push
push
or
leave
stc
jne
cmp
cmpsl
ret
addl
mov
inc
push
lret
ja
pop
inc
xchg
popf
jne
out
cwtl
lock
lock
test
push
loop
lcall
pop
cmpsl
dec
sub
jbe
inc
pop
push
test
out
mov
xchg
pop
test
pop
cmpsb
jno
call
fwait
or
xor
lahf
popf
cs
xor
ficoms
xchg
inc
divl
cmp
fdivl
repz
xor
mov
xchg
xchg
xchg
sub
or
mov
cmp
loopne
jns
inc
imul
sbb
lret
cmp
loopne
push
push
icebp
test
adc
addr16
pop
jmp
and
add
ret
jne
inc
fisubs
xchg
repnz
ds
xor
pop
mov
pop
insl
lret
mov
xchg
cli
sub
and
hlt
int
idivb
inc
cltd
aam
cmpsb
stos
push
cs
push
cmp
xor
xchg
popa
sbb
in
cmp
test
push
adcl
mov
shlb
stc
sbb
cmpl
fstenv
stos
lods
add
int
dec
mov
stos
cld
popf
fwait
hlt
or
mov
out
iret
add
shll
jne
enter
push
out
mov
daa
ljmp
xor
jno
add
jo
popf
dec
stos
mov
in
dec
jg
mov
sahf
loope
sbb
mov
loop
cltd
sub
je
add
push
mov
sub
imul
mov
ret
adc
bound
push
lds
pop
xor
xchg
rorb
mov
aam
ror
mov
pop
push
or
in
data16
mov
sbb
cmpsb
mov
add
out
jae
push
push
fwait
lods
mov
push
adc
inc
or
jmp
push
jae
adc
in
sub
ret
rcll
push
lock
mov
adc
repz
mov
loop
aad
or
inc
call
add
xor
rcrl
mov
mov
or
lock
sbb
pop
mov
push
bound
ss
sub
push
xchg
add
ret
push
mov
cli
movsb
test
filds
incb
cld
mov
sbb
in
rcrb
stc
dec
gs
and
mov
pop
and
repz
jno
bound
cli
call
or
and
inc
movsb
into
aas
mov
fstl
cli
add
lods
and
das
pop
sbb
scas
push
xlat
dec
sahf
dec
and
push
hlt
inc
icebp
pop
loop
dec
ja
rorb
sahf
or
ss
inc
xchg
mov
in
adc
testl
sub
xchg
mov
ret
xor
repz
jno
mov
daa
and
xor
jmp
inc
loope
add
xlat
adc
push
into
or
xchg
dec
cmp
imul
loop
lret
bound
test
jae
mov
jp
dec
xor
call
jge
mov
mov
pop
pop
inc
mov
imul
loope
mov
cmp
fwait
xchg
adc
jne
pusha
mov
fstl
aas
pop
pop
sbb
add
mov
in
mov
xchg
leave
jp
arpl
mov
or
enter
bound
imul
sbb
ldmxcsr
jg
xchg
jl
and
jb
sub
or
ret
push
inc
pop
xchg
xchg
fcmovnbe
adc
ret
and
adc
nop
daa
ret
ds
data16
in
scas
push
out
xchg
sub
dec
cwtl
cs
fxch
mov
nop
aas
mov
or
data16
in
lock
cmp
nop
movsb
rcll
iret
mov
js
ret
das
stos
cs
xlat
loopne
stos
addr16
mov
mov
xchg
and
adc
push
scas
idivl
sub
and
push
ret
ja
movsb
mov
movsl
adc
shld
lods
xchg
cmp
xchg
add
jne
sub
icebp
jle
in
int
mov
fiaddl
mov
shrl
fldcw
stos
and
xor
fnsave
dec
mov
std
sbb
xchg
cmp
jno
dec
sub
data16
aad
adc
test
and
adc
push
test
mov
xchg
add
cmp
sub
jecxz
push
add
movl
imul
push
out
and
jecxz
inc
lds
sbb
lock
jmp
xchg
cld
sub
sub
loop
mov
jno
es
mov
push
xchg
pop
aaa
dec
ja
hlt
nop
cmp
pop
enter
cmp
sub
pop
sub
jl
sti
ja
sub
scas
ror
daa
fisttps
js
jl
aaa
pop
mov
stos
push
dec
das
mov
mov
test
subb
daa
push
leave
fsubs
leave
push
xchg
push
in
add
nop
and
cmpsl
dec
repnz
add
rolb
out
addr16
fldt
cmp
lahf
mov
inc
or
and
adc
loopne
push
and
cmpsl
dec
mov
jbe
cmp
xchg
test
cltd
push
mov
sub
fsubl
sbb
mov
mov
mov
jnp
cmpsl
sbb
mov
mov
stos
outsb
mov
rcrw
inc
add
popa
push
and
roll
or
jmp
in
pop
sub
mov
xchg
lock
dec
movsl
push
test
mov
stos
mov
popa
inc
cmp
inc
repnz
lret
leave
mov
ss
mov
mov
rcr
jb
mov
xchg
fs
shll
mov
call
repnz
addr16
pop
push
cmpsb
cmp
adc
mov
pop
mov
push
lods
and
jl
jo
lea
or
pop
jg
mov
loope
inc
or
cwtl
cmpsl
add
sti
push
rcrl
push
mov
iret
in
mov
mov
cmp
pop
xor
lret
dec
adc
sahf
stc
in
sbb
sarl
or
jns
sbb
jl
mov
jp
jle
mov
xchg
repnz
into
or
orl
push
fimull
xchg
cmpsl
pop
fs
sub
jg
sub
in
dec
cltd
jg
push
inc
xlat
insl
mov
sub
sbb
ret
jbe
cmp
sbb
sbbb
mov
pop
imul
inc
jno
mov
sbb
call
mov
fdivl
jbe
inc
xor
imul
mov
or
and
mov
cltd
fwait
xchg
rorl
push
xlat
push
xchg
jl
cmp
dec
test
scas
push
xchg
xchg
fs
xor
xchg
inc
cmp
loopne
cmp
lcall
insl
cmp
daa
es
mov
int3
cmp
jmp
and
mov
mov
inc
push
outsl
jecxz
mov
add
test
into
loopne
popf
pop
sti
mov
sbb
xchg
add
sti
jns
xchg
andb
inc
sub
cwtl
popf
cmp
aaa
inc
push
mov
cmpsb
std
lcall
movsb
stos
ds
outsl
pop
pop
ud2
sub
jb
push
cmc
iret
lcall
jl
mov
mov
loope
or
adc
mov
mov
dec
sbb
sub
sub
clc
push
in
dec
and
outsb
mov
cmpsb
lock
repz
add
dec
cmpsb
mov
push
or
lock
xchg
xchg
jae
ficomps
fs
ret
and
inc
pop
sub
gs
mov
adc
sbb
adc
cmp
lea
or
test
push
jmp
jb
outsb
es
push
jne
push
jo
xor
mov
cwtl
xor
out
iret
ret
je
inc
inc
fisubs
and
popa
daa
rorl
mov
sub
je
add
jecxz
xchg
lcall
js
out
xor
inc
jne
loopne
jb
lret
repz
stc
in
adc
gs
jmp
pusha
pusha
lahf
cmpsb
mov
loopne
adc
popf
je
xchg
lcall
add
or
jg
pop
rcr
cmp
movsb
xchg
sbb
push
in
hlt
arpl
xor
insb
imull
xchg
xchg
cmpl
bound
mov
adc
ret
inc
push
scas
cmp
loop
inc
push
std
ja
jge
push
pop
adcb
mov
push
arpl
fbld
fsubp
mov
cmpsl
aad
fsubrs
cmpsb
cmpl
shll
jg
lods
xor
popa
cmp
mov
psubb
cli
mov
push
mov
pop
stc
lcall
testl
rcr
sub
or
adc
es
out
fldt
mov
mov
inc
xchg
fs
in
lahf
int
or
je
popa
push
cld
adc
add
inc
xor
push
es
in
repnz
clc
leave
jns
inc
in
mov
rcl
loopne
jge
adc
repnz
mov
subl
and
or
adc
out
lret
lldt
lcall
jecxz
arpl
insb
jb
cmp
dec
imul
add
test
push
or
mov
or
or
jl
div
jbe
stc
lock
sti
sti
jne
mov
shrl
inc
jbe
push
xor
jae
xchg
xchg
push
mov
nop
leave
popa
aam
or
mov
mov
daa
lret
test
test
test
fnsave
shll
out
loopne
inc
pop
push
ljmp
insw
ret
push
cmp
and
in
mov
mov
inc
push
sbb
ja
clc
pop
lock
push
clc
jp
xchg
mov
push
sub
mov
inc
loop
inc
mov
dec
ljmp
push
push
dec
push
adc
lock
ret
mov
xor
xchg
aas
jge
dec
pop
lods
out
sbb
lret
sub
je
cmova
cmp
cli
mov
or
lods
add
test
sbb
icebp
xor
xor
mov
adc
pop
inc
stos
call
push
mov
xchg
sub
rcl
xchg
xor
out
adc
popf
popa
or
sub
jnp
mov
sub
arpl
repnz
ljmp
adc
gs
sub
cmpsb
fdivrs
xor
pop
lret
jb
ss
popf
fnstcw
orb
scas
sbb
lar
cmpsl
nop
jmp
jmp
enter
xlat
dec
les
dec
jbe
test
inc
and
pop
push
sub
je
hlt
inc
movsl
fistl
mov
out
adc
push
push
mov
cli
pop
jge
cli
subl
xchg
dec
int
int3
aas
pop
fadds
lods
stos
orb
pop
lret
arpl
pop
cmc
mov
out
sbb
or
fsubrp
adc
cmc
add
sti
adc
push
add
cmp
insl
ds
sbbl
repz
pop
std
into
adc
hlt
in
jno
in
inc
xor
gs
pop
inc
mov
mov
ficomps
scas
sbb
mov
gs
jb
adc
jl
andl
insb
mov
popf
or
xchg
gs
out
mov
movsl
xchg
bts
mov
xchg
jnp
inc
pop
sahf
jp
cmp
and
test
int3
in
insb
decl
pop
push
mov
das
sarl
out
icebp
add
clc
pusha
testl
jp
push
mov
movsl
and
dec
sub
lcall
ja
popa
sbb
sbb
push
imul
repnz
pop
cmc
mov
mov
push
sbb
enter
sub
push
ds
scas
js
enter
pushf
jl
sbb
mov
and
or
xor
and
lret
sub
mov
jno
test
sbb
fstpl
mov
das
xor
push
jns
cwtl
mov
mov
xor
cmp
adc
mov
mov
aad
and
insl
rcll
cld
rol
xchg
pusha
mov
mov
cmp
out
cmp
test
lcall
dec
xor
mov
insb
mov
mov
jp
mov
sbb
and
fsubrp
adc
or
mov
lods
dec
lret
inc
dec
hlt
popa
pop
adc
mov
arpl
loopne
cli
hlt
and
push
repz
add
cmp
sbb
xchg
adc
ljmp
and
mov
adc
imul
btc
adc
mov
lcall
out
adc
add
popa
push
mov
mov
loopne
push
pop
mov
pop
ss
aam
or
lock
fmul
lcall
and
ss
xchg
js
call
aaa
lret
and
cmp
test
fmuls
push
inc
mov
mov
cmp
inc
loop
out
roll
xor
je
push
loopne
sbb
xchg
or
outsb
cltd
dec
add
aad
inc
std
ds
jb
mov
std
cmp
scas
mov
aad
sub
mov
sbb
cmp
out
sbb
xor
das
pop
sahf
xchg
repnz
inc
mov
xor
mov
mov
or
fisttps
pop
xchg
cmp
jns
xlat
enter
addr16
cmpsb
push
insl
addr16
ljmp
or
inc
or
cmp
add
sub
repz
push
adc
and
or
hlt
in
icebp
jle
imul
add
scas
push
outsb
fcmovnb
mov
cmpsl
and
fsub
adc
insb
sti
fmull
jmp
cmp
repz
icebp
ss
hlt
out
popa
daa
scas
pop
int3
nop
push
daa
jp
iret
jg
out
in
mov
push
pop
aad
adc
jle
nop
pop
pop
jo
ret
daa
sub
add
lods
icebp
jge
sbb
arpl
lcall
inc
mov
decl
mov
test
sub
dec
jecxz
mov
insb
orl
movsb
xor
sbb
jo
mov
mov
je
insb
cs
test
mov
cli
shlb
outsb
std
popa
cs
sbb
and
dec
mov
mov
xchg
out
cltd
adc
add
scas
rcl
cmc
mov
sub
test
lock
push
jg
stc
mov
int3
sbb
sbb
push
subb
xchg
push
sbb
scas
stc
js
cmp
cmpsb
rcr
inc
insl
data16
mov
sub
pop
jle
jge
lds
inc
and
inc
mov
lret
push
dec
in
mov
cmp
jmp
fcoms
mov
xchg
mov
ja
push
mov
add
test
mov
xor
testl
pop
shl
popa
sahf
xchg
mov
repnz
xor
adc
sbb
out
ds
divl
scas
and
ja
mov
repz
mov
xchg
sbb
cmpsb
lods
enter
iret
scas
jns
repnz
push
cmp
pop
cwtl
xchg
ficomps
sub
scas
and
and
push
xchg
stos
testb
pushf
cmpsb
inc
pop
popa
xchg
dec
cmp
rorb
movb
rcll
xor
fsubl
add
test
dec
lods
je
cld
insl
sub
or
inc
adc
mov
mov
cs
dec
mov
cli
ret
xchg
add
push
cltd
sub
test
insb
sbb
push
xchg
outsl
in
pusha
or
dec
inc
lret
out
pushf
test
mov
out
cwtl
popa
lds
push
inc
fbstp
fdivrl
xor
jmp
cltd
push
data16
mov
pusha
jns
imulb
std
xor
icebp
sub
pop
ficomps
stos
ret
or
jle
aaa
mov
bound
mov
aas
and
lret
lds
int3
xor
lods
and
fdivrs
pusha
dec
jne
dec
dec
adc
push
dec
adcb
cmc
roll
mov
cwtl
fstl
mov
imul
and
imul
mov
mov
dec
jns
inc
mov
mov
or
push
nop
pushf
push
or
lea
sbb
jae
flds
push
fwait
js
das
xor
or
dec
sbb
pusha
popa
scas
sbb
push
fmull
imul
mov
nop
push
mov
scas
xchg
iret
jns
add
adc
mov
imul
movsl
jge
dec
scas
cmpl
jle
jns
lret
jbe
add
mov
inc
scas
push
shll
jo
rcl
jb
sbb
repnz
xchg
jnp
dec
and
pop
insb
mov
mov
jl
pushf
and
adc
mov
jb
or
mov
push
je
idiv
push
inc
push
sahf
and
mov
and
dec
mov
xlat
and
pusha
xor
push
pop
aaa
push
dec
adc
loop
sbbb
mov
add
mov
xor
into
fcoms
mov
popa
jmp
les
sbb
ds
add
dec
inc
push
dec
cs
jl
inc
pop
sbb
mov
pop
sub
cltd
ds
imul
xor
mov
add
cmp
xor
movsl
xor
lock
and
xchg
outsl
fsubl
cmp
or
mov
scas
leave
sbb
jo
popf
nop
jl
mov
les
aad
jne
or
or
lock
lahf
push
lock
scas
pushf
dec
cmpsl
add
jae
pop
or
and
daa
mov
test
cli
scas
mov
js
push
pop
ret
fldt
pop
insl
mov
xor
cmp
and
pop
sub
gs
in
movsl
sbb
xchg
mov
and
fwait
inc
and
stos
insb
push
cwtl
insb
cli
dec
pushf
adc
xchg
imul
outsb
fwait
lock
and
call
fistps
test
or
std
clc
or
mov
xor
movsb
insb
fcomip
scas
gs
lcall
notl
xor
xchg
ret
bound
cld
dec
lods
in
ss
cltd
cmp
or
sbb
and
pop
fwait
mov
mov
sti
inc
sti
mov
shll
hlt
jno
in
imul
cld
sub
jecxz
mov
pop
sub
push
xchg
fsubrs
dec
adc
sbb
ja
xor
pop
dec
dec
xlat
ss
fstps
jmp
fmull
movsb
je
jne
cmc
cmp
dec
xor
add
xchg
push
dec
pop
adc
lcall
iret
or
stos
fcomps
gs
xlat
icebp
shll
mov
leave
out
dec
pop
fldcw
popf
add
xor
jg
clc
fstl
insl
cmpsl
adc
aaa
and
dec
rolb
mov
loopne
jp
pop
mov
nop
out
iret
and
xchg
stc
pop
daa
insb
sti
rcll
xor
jg
ret
aaa
gs
mov
mov
inc
add
cld
cmpsl
rcrb
fadds
and
and
pop
push
ficoms
stc
and
enter
ss
adc
repz
mov
inc
clc
aad
out
mov
adc
inc
mov
lds
adc
sarb
test
xchg
dec
sbbl
pop
xor
fldenv
and
mov
aaa
mov
cmc
int3
daa
xchg
mov
enter
push
in
add
pop
les
push
mov
and
in
fldt
jmp
xorl
aam
mov
cwtl
fisubrs
or
in
outsl
out
and
fs
jno
pusha
sbb
shlb
aam
sbb
xor
leave
sbb
pop
int
popa
and
int3
mov
cmpsl
lods
and
push
iret
xlat
in
negl
out
das
mov
movsl
mov
dec
jno
dec
lahf
fldenv
mov
sbb
cwtl
push
add
lret
jp
xor
cmp
fwait
push
inc
leave
outsl
fidivrl
jbe
iret
dec
pop
dec
jae
imul
pop
outsb
sti
or
pop
jmp
out
dec
jecxz
out
fcoml
test
xchg
jne
cld
add
adc
bound
dec
jp
jecxz
cld
dec
cmovae
mov
pop
adc
jbe
dec
mov
lods
aaa
mov
cmp
jmp
pop
xchg
mov
lea
stc
jge
jecxz
cmp
lea
dec
repnz
cmp
aam
lods
test
imul
in
jnp
xchg
dec
not
scas
add
push
jecxz
mov
jne
aad
mov
lods
cmp
mov
cmp
push
xchg
into
inc
mov
scas
sub
mov
popa
pop
mov
in
mov
dec
mov
jnp
rcll
sti
decb
sub
add
lock
mov
jecxz
pop
pop
ret
ja
jl
mov
pushf
mov
fscale
push
jbe
nop
movsb
or
cli
inc
sbb
aad
repz
mov
pushf
xor
adc
les
push
fnsave
call
cmp
cs
and
mov
aaa
cmp
xor
sbb
es
imul
or
iret
ror
std
jne,pn
mov
sahf
jb
jg
and
clc
sbb
cmp
div
imul
testb
arpl
push
ud2
mov
icebp
ds
jno
sbb
xor
or
dec
add
ret
cld
xor
dec
inc
add
xlat
push
jb
hlt
jl
sahf
inc
rcl
pop
ljmp
jecxz
hlt
fildll
xor
cmpsb
out
ret
into
mov
hlt
and
shll
int3
jo
roll
lea
xchg
jo
fiadds
and
dec
movsl
and
scas
lcallw
mov
inc
ds
and
xchg
or
arpl
sarb
sarb
sbb
outsb
out
lcall
mov
adc
inc
jne
adc
push
jg
in
out
xchg
adcl
outsb
shl
fsts
adc
xor
int3
pop
loopne
rorb
ljmp
xor
sti
mov
lea
js
imul
mov
xchg
movsb
test
and
pop
mov
loope
mov
push
cmp
xchg
jp
pop
sub
mov
inc
adc
jae
rol
jp
and
loope
mov
lods
sbb
mov
out
xorb
mov
push
lock
rcrb
sarb
add
xchg
in
or
hlt
lahf
mov
sbb
jbe
test
repnz
das
iret
inc
pop
add
pop
mov
pop
insb
std
aad
mov
xor
out
jecxz
mov
mov
insb
and
push
mov
sbb
inc
nop
pop
les
arpl
push
adc
sub
lcall
into
pop
movsb
mov
and
xchg
push
out
bound
cmp
sbb
scas
pop
adc
inc
and
adc
mov
jo
int3
mov
fiadds
sahf
cwtl
sbb
lcall
inc
out
jecxz
or
in
jl
adc
aam
push
shrb
cmp
int3
negb
push
push
push
stos
or
lock
addr16
js
push
xchg
mov
dec
push
mov
arpl
nop
inc
dec
sarb
inc
scas
sub
mov
hlt
decb
xor
xchg
lret
ja
push
jg
or
push
push
dec
outsl
lret
xor
jmp
les
aaa
fs
and
adc
sti
lea
inc
je
and
iret
fsubr
add
ret
lds
fdivs
mov
jg
or
addb
push
stos
dec
test
sub
xchg
ret
pop
jmp
add
inc
sbb
cmp
pop
sub
push
pop
sti
sbb
cltd
pop
les
shrb
sub
pushf
and
adc
jge
mov
and
jecxz
jo
mov
inc
mov
ja
or
push
cs
dec
dec
decl
mov
bound
mov
jp
repnz
jecxz
pop
sub
or
push
mov
cmpsb
aad
and
ret
push
adc
lret
mov
aad
or
jnp
sub
les
fadds
outsb
adcl
imul
pop
jne
jmp
push
cli
insl
adc
loope
cs
sub
xchg
jp
fsts
cltd
adcb
loop
sbb
lea
adc
sub
jo
dec
lock
mov
push
fisubs
out
pusha
jl
sbb
pop
arpl
lret
loopne
lods
xchg
insb
push
xor
adc
clc
push
add
dec
scas
adc
sbb
out
dec
pop
movsl
arpl
aad
mov
aad
push
jne
mov
push
adc
add
sbb
fwait
in
jnp
push
mov
xchg
xchg
mov
out
mov
lock
inc
test
aas
xchg
dec
jbe
lcall
mov
shl
and
movsb
jmp
out
sub
inc
inc
jmp
icebp
mov
imul
mov
and
pop
ds
cmc
rol
xor
setno
inc
insb
pop
les
sbb
mov
fnstcw
fcompl
enter
xchg
enter
hlt
icebp
shlb
enter
sbb
jmp
loopne
add
aad
rcrb
inc
add
outsl
mov
les
cmp
testb
mov
or
aaa
inc
arpl
cltd
and
subl
fcoms
jl
ss
mov
leave
inc
add
push
pop
or
pop
jns
cld
pop
stos
cmp
xor
xchg
mov
loope
arpl
jne
test
jl
mov
inc
mov
sbb
and
test
jp
stos
out
lidtl
cld
mov
mov
mov
clc
xor
inc
cmc
push
jmp
subb
fsubrs
sti
sub
inc
xor
cmp
or
mov
xor
imulb
jo
stc
xor
mov
fnsave
fistpll
mov
sbb
sbb
roll
es
mov
repnz
mov
xor
sahf
scas
sub
sbb
inc
dec
mov
cmp
push
push
xor
mov
lret
fstps
sbb
mov
sbb
xchg
mov
loopne
test
pop
and
or
ret
div
jb
insl
stos
cmp
jb
in
jl
jg
enter
cltd
mulb
push
fdivrs
lcall
dec
ja
insl
mov
gs
xchg
ret
cmpsb
outsb
jmp
stos
sub
roll
mov
nop
out
das
sbb
out
adc
lock
mov
mov
push
andl
bound
sbb
lahf
ret
cltd
mov
jne
push
lods
cld
sub
push
lea
outsb
mov
into
outsl
inc
loopne
test
aas
bound
push
out
pop
call
xor
pop
movsl
addr16
jle
cmpb
imul
test
or
fidivrl
movsb
mov
test
cmovp
cmp
jle
clc
insl
sbb
inc
cmp
movsl
shrb
fwait
repnz
and
push
mov
rolb
mov
clc
fidivrs
jae
xchg
xor
imul
mov
dec
cwtl
movsb
hlt
xor
in
daa
jne
push
or
jns
sbb
fs
icebp
pusha
in
adc
push
cmpsb
je
push
and
dec
add
dec
cmp
std
scas
sti
jmp
jns
lcall
cmpsl
and
test
shll
xchg
bound
inc
pop
lahf
sbb
fwait
sti
pop
rorb
pop
cmp
pop
pusha
adc
std
imul
clc
bound
dec
adc
push
loop
push
mov
lret
sahf
lods
add
loop
popf
pop
push
rcrb
sbb
add
ss
inc
aam
fidivs
call
pop
aad
ljmp
xor
pop
daa
cmc
push
cmp
pop
cmp
jns
mov
repnz
clc
rcrb
xchg
ret
iret
call
pop
or
aas
adc
js
sub
lods
insb
out
dec
jl
and
jmp
icebp
and
sbb
jp
cmpsb
or
cltd
jg
push
test
sarl
rcrl
jo
insl
popa
punpcklwd
sahf
jle
aas
sub
jecxz
jmp
mov
inc
xchg
leave
jge
sbb
aad
lea
or
cli
pushf
sarb
fwait
mov
dec
add
jno
or
inc
jg
ret
adc
jnp
cmc
popa
and
mov
dec
adc
sub
add
popa
or
cmp
sub
push
out
dec
jge
mov
test
jae
shrl
iret
xchg
mov
pop
inc
lret
jbe
jae
iret
mov
xchg
dec
fcomi
cli
call
mov
push
mov
stc
stos
ret
inc
adc
scas
jg
push
or
js
scas
icebp
mov
mov
fidivs
ret
out
fwait
in
jmp
xchg
rcr
adc
pop
and
repnz
jp
divl
inc
outsb
push
jnp
or
outsl
clc
ljmp
cmp
std
ja
lock
movsb
dec
sub
xchg
or
mov
int
push
je
cmpsl
inc
jmp
cld
pop
adc
sti
loopne
pop
jecxz
rorb
xchg
data16
or
mov
xor
or
cmc
jns
jne
popf
jmp
cmp
xchg
push
out
arpl
testb
scas
sub
enter
pop
push
jle
sti
aaa
mov
subb
lods
lahf
sbb
jo
pop
loopne
xor
mov
sbb
std
adc
movsb
out
sub
idiv
je
dec
add
jg
sbb
push
jbe
adc
inc
pop
cmova
ret
sbb
sbb
loopne
js
mov
push
jbe
xchg
add
sub
push
sbb
jmp
fisubrl
jg
clc
movsl
stc
jle
mov
idiv
aam
sub
sub
xor
in
add
shll
push
cmp
cmc
aad
mov
loope
mov
movhps
pop
mov
test
ja
push
ficoml
stc
and
mov
xchg
lock
jb
sbb
bsf
inc
xchg
dec
jnp
mov
stos
mov
imulb
jecxz
imulb
and
bound
iret
pop
mov
lret
inc
mov
add
push
jbe
cld
jmp
jae,pt
je
aam
repz
push
pop
jle
clc
fxch
ljmp
push
or
jp
push
js
shlb
xchg
loopne
mov
and
mov
mov
cmpb
jb
xchg
adc
add
lret
std
xchg
or
inc
ret
rorb
sbbb
out
enter
fwait
sbb
shl
jae
mov
loope
xchg
stc
sub
pop
ret
fsubr
out
mov
jl
popf
into
inc
into
mov
ds
int3
pushf
or
mov
jmp
jmp
pop
push
insb
fstpt
nop
test
xor
aaa
pop
insb
adc
jecxz
adc
pop
pop
ret
inc
hlt
dec
pop
jns
or
mov
adc
pop
mov
sub
or
xor
push
dec
or
ret
test
adc
je
lret
lret
jb
aam
sub
inc
mov
xlat
push
or
sub
mov
mov
andl
mov
aas
ss
lea
mov
aas
loopne
sub
jnp
cmp
lret
ret
stos
mov
out
flds
fcomi
add
cmp
mov
loope
xchg
pop
das
lea
rol
stos
mov
sbb
into
push
mov
push
mov
add
ret
loopne
sbb
cld
sbb
lret
into
jge
add
popf
clc
pop
lock
jmp
movsl
mov
jne
mov
cmp
pop
cmp
inc
xchg
out
and
adc
and
dec
je
mov
jp
sub
push
pop
inc
push
mov
or
add
push
adc
test
fiaddl
std
mov
ds
jnp
out
shld
stc
add
popf
in
dec
clc
and
pop
mov
jge
fwait
in
mov
push
das
and
mov
lock
sbb
out
xor
pop
add
sbb
stos
mov
addr16
xchg
pop
inc
mov
sbb
mov
push
aas
ds
mov
pop
pop
jge
outsb
ret
mov
xchg
sbb
scas
daa
mov
dec
nop
shl
repnz
lret
add
scas
inc
pushf
into
je
push
mov
xchg
xorl
dec
pusha
xor
mov
inc
sub
daa
out
ds
cmc
cld
mov
adc
loopne
or
cli
test
popf
cltd
dec
xor
test
lods
mov
popa
xchg
push
pop
loopne
scas
and
les
sbb
jnp
pop
inc
inc
or
adc
out
pop
fldt
add
mov
outsb
test
lods
mov
loopne
sarw
hlt
out
push
jne
es
sub
clc
enter
push
push
lea
ss
or
aam
insl
add
pop
into
pop
addr16
mov
sbb
jae
jl
pop
cmpl
ret
arpl
ds
sub
add
jp
xor
mov
jb
push
pop
mov
sub
xchg
push
push
pusha
dec
mov
out
hlt
pop
mov
fcoms
sub
xlat
hlt
loop
jns
push
and
aas
lock
nop
adc
jle
fidivl
pushf
or
insb
fcoml
fsubrl
out
inc
inc
adc
xorb
push
data16
lods
icebp
loopne
sub
addr16
mov
and
clc
jmp
pop
mov
out
mov
cmp
adc
mov
adc
sbb
aaa
add
and
stc
adc
inc
sub
rcr
jmp
mov
sub
movsl
add
inc
movsl
dec
cmpsl
jl
out
mov
sub
cmp
dec
mov
popf
push
ljmp
shr
cmp
dec
jnp
or
mov
cli
daa
ja
sbb
push
lods
andl
aaa
call
mov
pop
mov
sbb
add
mov
ds
scas
sbb
dec
sub
cmp
add
jns
out
mov
icebp
out
test
inc
in
jo
int3
push
icebp
sbb
loopne
sarl
test
jns
pop
or
test
xchg
pop
jecxz
repz
fwait
jbe
ja
das
pop
je
neg
sub
sub
cltd
jg
adc
jns
rdtsc
xor
fistpl
mov
test
inc
pop
xor
imul
mov
mov
and
mov
int
negb
out
pop
xor
pop
cmc
cs
pop
loope
mov
sbb
jg
mov
add
flds
out
jp
jbe
roll
pop
add
fildll
cmp
jp
in
add
fdivrp
pusha
mov
pusha
xchg
sub
push
and
fisttps
call
addl
and
xorl
pcmpgtd
add
ret
pop
inc
jge
dec
dec
std
push
mov
xchg
lcall
bound
and
sti
rcr
clc
outsb
sub
js
lods
mov
or
test
adc
in
cmc
push
cmp
addl
cld
addb
sub
ss
pushf
leave
scas
mov
lcall
or
add
mov
push
lds
hlt
xchg
ja
sbb
lret
lcall
jnp
ror
inc
mul
insb
mov
idiv
xchg
cltd
mov
movsl
push
decb
jmp
xor
push
dec
pop
xor
xchg
push
inc
mov
mov
test
or
test
mov
pop
hlt
sar
rolb
or
pop
jns
aad
lret
adc
sbbb
pop
dec
mov
pop
shll
inc
mov
push
inc
scas
rcr
fdivrp
pop
push
inc
int3
lods
sub
cmpl
adc
sbb
xor
mov
lds
inc
dec
mov
dec
mov
jle
fildl
add
xor
push
adc
pop
lahf
pop
ss
in
cld
mov
jecxz
in
mov
xchg
stc
push
lahf
push
pusha
cltd
add
push
leave
push
jecxz
and
mov
lahf
xor
mov
and
stc
das
les
inc
inc
push
cmp
cmp
mov
rcrb
pop
imull
sarl
xor
lods
mov
dec
or
mov
jg
push
cmp
outsl
pop
sbb
push
push
shrl
aas
push
cmp
loopne
or
pop
inc
push
fistps
sbb
sub
mov
adc
mov
push
inc
in
mov
mov
jo
push
lahf
inc
addr16
fwait
out
push
xor
sarb
pop
aam
fldl
ljmp
cmpsb
mov
test
icebp
add
lret
adc
ret
jb
andl
mov
add
add
test
imul
fisttpll
fstpt
stos
mov
or
dec
shrb
and
push
out
add
mov
aaa
or
subl
mov
mov
mov
fmul
imul
push
mov
sbb
je
and
xchg
rolb
ljmp
sbb
lock
les
adc
leave
pop
ds
dec
cmp
pop
xchg
mov
sbb
arpl
jge
out
enter
imul
test
lret
popa
pop
push
sub
movl
popf
aam
cmc
sub
mov
js
jbe
push
sub
push
cmp
data16
inc
repnz
test
rcll
mov
add
xor
xchg
pop
push
xchg
std
mov
cmp
cmc
sbb
sbb
push
call
xor
stc
orb
jge
test
test
jae
sub
inc
out
stos
cli
push
fimuls
dec
xor
jbe
les
in
lods
xor
fwait
aam
xchg
push
xorl
sti
popa
das
imul
cmp
push
aas
mov
scas
jmp
mov
sbbb
cmp
mov
cmp
test
inc
add
xor
pop
or
fcmovbe
mov
add
or
add
push
test
inc
scas
test
pop
pop
loop
jb,pn
decl
outsl
pushf
pop
adc
mov
js
and
js
stos
out
inc
cmp
ja
je
mov
stos
enter
out
in
and
imul
or
scas
leavew
mov
jp
stos
jne
mov
adc
mov
sub
out
adc
std
gs
xor
ficoml
jns
movsl
loop
or
add
mov
notl
jle
out
xor
int3
pop
sbb
adc
rcrb
daa
aad
addr16
ja
sub
loop
mov
out
int
push
or
test
or
adc
push
cli
fdivrl
sbb
icebp
xlat
push
out
jo
adc
stc
mov
pop
push
xchg
pushf
push
in
xchg
mov
cmp
leave
lock
insl
mov
and
std
arpl
insb
dec
mov
inc
lock
bound
je
and
in
fildll
or
dec
push
jmp
js
sbbl
leave
sahf
lock
cmp
sub
dec
xor
mov
popf
jb
sbb
jl
mov
clc
fistl
xor
ljmp
icebp
mov
xchg
pop
sub
into
mov
and
popf
sbb
and
fstpt
jno
jns
sub
fisubs
jnp
pop
andl
mov
pushf
aaa
shlb
add
rcl
sub
xchg
stos
jg
iret
clc
icebp
mov
mov
mov
ljmp
pop
mov
cwtl
shlb
cmpsb
xchg
lcall
mov
icebp
mov
rorl
push
shl
add
push
or
mov
shlb
pop
scas
dec
push
lret
lret
sbb
and
rorl
sbb
les
xor
sub
dec
shlb
dec
push
push
jecxz
lcall
repz
mov
sbb
pop
sbb
inc
add
add
push
cmp
jne
test
ljmp
add
repnz
mov
sub
imulb
jae
out
jle
movb
adcl
mov
neg
add
jno
lock
mov
enter
push
int
stos
in
mov
mulb
jge
xor
insb
movsl
cmpsl
es
loopne
push
scas
scas
cmp
push
enter
sbb
jne
mov
xchg
loopne
dec
in
jo
sub
stos
mov
ret
fadds
lcall
or
xchg
mov
std
push
xor
fwait
sarl
shlb
inc
jbe
lcall
sub
and
jecxz
sbb
jmp
movb
dec
sbb
addr16
inc
cmp
mov
jmp
push
mov
push
xlat
mov
sub
out
adc
jns
push
push
adc
jg
call
adc
lods
loopne
pop
sub
das
jl
popf
lock
sub
and
mov
mov
push
jbe
scas
jp
ds
xor
push
sub
push
stos
sbb
aas
xor
xor
sbb
ffree
push
ficompl
leave
xlat
mov
sub
mov
xchg
cmp
int3
inc
mov
repnz
ja
or
push
adc
dec
jmp
outsl
adc
sbb
movsl
aas
jmp
adc
test
in
xchg
xorl
scas
add
and
fisttpll
rcll
cmp
xor
lret
mov
aas
dec
outsl
jne
imul
mov
mov
cwtl
jmp
lahf
cltd
mov
xchg
in
sub
lods
mov
sar
mov
jns
scas
cmp
xor
std
nop
mov
mov
or
jecxz
push
inc
ret
push
pop
or
dec
push
sti
enter
push
bound
lret
xor
arpl
xchg
pop
stos
cmp
jns
or
loopne
insb
sub
xchg
lea
pop
add
scas
cmpsl
xor
xor
notl
sbb
mov
sysret
mov
stc
fists
sbb
and
and
or
fadds
xchg
les
stos
jo
xchg
and
loope
add
mov
add
mov
addb
pushf
sbb
push
sbb
hlt
mov
adc
outsl
inc
ficomps
insb
iret
pop
or
push
sbb
sti
ret
into
jmp
push
jle
push
faddl
sbb
mov
js
xchg
out
lahf
leave
dec
loopne
fists
inc
sub
rorl
or
test
cmpsl
stos
jge
sbb
stos
mov
mov
mov
sti
xlat
call
pushf
icebp
repz
inc
mov
pop
dec
xlat
pop
loope
out
xchg
pop
dec
jo
sub
ror
jecxz
lret
pandn
push
stos
fmul
sub
add
xor
hlt
inc
testl
outsb
mov
test
repz
in
mov
push
roll
adc
icebp
jnp
jnp
push
mov
jp
test
data16
je
ret
cmpsb
sbb
outsb
and
in
fimull
push
ljmp
adc
insl
mov
negl
aam
sarb
notb
out
mov
gs
rclb
mov
jg
or
mov
loope
dec
cli
xor
or
dec
test
cmp
xchg
or
adc
cmp
aaa
inc
sbb
xchg
mov
out
xchg
fcomip
add
mov
xor
xor
in
cmpsl
sbb
fists
in
jno
mov
cs
xor
repz
mov
sarl
into
pop
outsl
adc
movsb
jnp
sbb
ljmp
lods
push
push
jo
mov
popf
je
nop
sbb
call
jbe
sub
sub
repnz
rcrl
xor
aad
cmp
sub
jg
or
push
push
enter
cmp
mov
ret
add
cld
push
jmp
xchg
sahf
fsubl
hlt
mov
fisttps
mov
add
fs
ds
push
cmpl
test
out
fsub
popf
jge
test
lods
pop
insl
sub
xchg
repz
fidivrl
and
lcall
xor
daa
xor
shlb
in
adc
and
mov
jg
mov
push
aaa
hlt
pop
int3
push
inc
jg
in
sbb
jge
ret
and
pop
hlt
pop
inc
pusha
inc
pop
xor
dec
aad
sahf
imul
mov
xor
ljmp
jge
jo
cmp
inc
jnp
iret
ret
mov
call
inc
xchg
xchg
inc
jmp
popa
decl
sti
dec
cmp
dec
pop
call
inc
int3
movsb
ljmp
dec
shl
dec
pop
mov
sub
std
dec
push
mov
mov
rcrb
jo
dec
aad
mov
xchg
mov
ret
cltd
es
movsb
xchg
in
sub
imul
adc
jle
push
int3
sub
enter
js
in
jne
xor
xor
ja
in
and
mov
pop
shrb
shrl
pushf
into
pop
lea
sarb
pop
xor
inc
add
lahf
ja,pt
fst
sbb
cmc
sti
pusha
adc
aas
pop
testl
movsl
mov
sti
xchg
push
add
mov
in
mov
cmp
pop
lock
loop
into
add
clc
xor
rorb
jns
mov
mov
xor
mov
mov
and
or
clc
loope
cmpsl
lods
dec
dec
sub
scas
ljmp
int3
mov
out
je
ljmp
fcomps
mov
xor
stos
imul
and
insl
jns
cltd
clc
lcall
shll
scas
fcoml
std
xchg
jnp
or
imul
mov
inc
jge
clc
cmp
mov
test
lods
xor
mov
lcall
jl
inc
sahf
push
xor
xor
lods
xor
jb
mov
dec
into
mov
or
pop
insb
jb
cs
loop
add
out
ja
pop
and
fwait
jne
sahf
cmp
add
faddl
jns
insb
xchg
cmpxchg
sbb
cs
and
faddl
adc
in
int3
inc
jo
nop
movsl
neg
push
dec
addb
sbb
je
movsl
cs
lods
jp
dec
lea
stc
insb
outsb
sub
jnp
movsb
dec
and
leave
fcoml
xchg
dec
add
inc
mov
or
shlb
push
dec
fcmovnbe
pop
and
shl
jmp
arpl
and
push
fistl
sahf
xorl
pop
lcall
adc
adcl
pop
jp
or
sbb
mov
test
std
or
fidivrs
adc
inc
dec
into
orb
and
ss
jl
mov
xchg
jne
cmp
and
cmp
push
mov
mov
shll
lds
or
mov
dec
call
loopne
add
xchg
stos
lods
mov
xlat
cmpsl
aas
mov
out
xchg
dec
xor
push
sub
or
loopne
mov
shrl
mov
je
and
cmpsb
std
lret
fcoml
enter
sbb
divb
or
xchg
jae
test
lret
or
sub
push
mov
and
movsb
notb
lock
dec
pushf
sahf
flds
adc
arpl
nop
xchg
xorb
loope
clc
pop
or
pop
test
clc
jp
push
lahf
enter
xor
popl
les
push
ret
inc
and
movsb
fdiv
dec
adc
or
mov
daa
mulb
xchg
sbb
pop
pop
mov
arpl
mov
sub
mov
loope
xchg
push
sub
xchg
push
lock
cmp
mov
loope
gs
adc
push
in
addr16
sbb
js
scas
jnp
std
nopl
xor
push
push
ret
adc
je
movsb
shrl
movsb
and
pop
pop
add
gs
jmp
in
pop
movl
mull
add
and
mov
addl
jae
loope
loop
fwait
pop
lcall
imul
repnz
stc
stc
lods
xchg
adc
cld
jns
in
loopne
add
pop
cmpsl
loope
sub
sbb
test
insl
nop
push
adc
lock
xchg
jl
inc
push
pushf
loop
int
es
add
aas
inc
fistpll
xor
mov
xchg
cmp
jle
mov
into
jno
and
rcr
rorb
mov
cmpsl
clc
sbb
dec
or
and
arpl
add
sbb
or
xchg
mov
arpl
jp
or
sbbl
aas
leave
js
or
fmull
xchg
inc
pushf
lahf
sti
or
pop
das
daa
and
lret
xor
xor
out
or
adc
mov
imul
xchg
insb
cwtl
daa
or
jg
out
inc
dec
lock
call
fildl
fs
in
ss
cwtl
jmp
xor
insl
pop
cld
or
lods
pop
push
test
mov
push
out
xchg
cmp
outsb
push
cmp
mov
lret
jle
add
sub
in
repz
or
xchg
xor
add
or
dec
or
lcall
scas
ds
adc
lcall
mov
int3
push
xchg
movsl
je
xor
or
dec
dec
jmp
pop
sbb
mov
or
lcall
or
dec
pop
xor
push
pop
add
fs
push
or
and
or
test
pop
jg
out
or
mov
sub
mov
mov
fisttps
je
stc
or
test
leave
and
or
cltd
movsb
inc
add
dec
mov
mov
dec
loope
add
or
mov
sub
xchg
mov
imul
mov
dec
or
jg
push
add
cmpsl
subl
xor
pop
inc
pop
mov
cmpb
mov
inc
scas
adc
shlb
or
mov
jnp
and
addr16
movsl
mov
psrlq
loope
test
adc
cmp
inc
rcl
and
jecxz
adc
adc
sbb
cs
je
cmpsb
or
or
stos
or
jmp
cld
add
outsb
add
fisttps
rol
pop
ret
dec
or
das
dec
and
add
and
inc
or
test
add
and
inc
repz
xorb
mov
ret
aad
or
push
add
shll
or
divl
add
or
test
jl
add
mov
sub
in
jbe
fsubl
or
xchg
mov
push
scas
add
mov
insl
cwtl
js
into
or
rorb
xor
lret
fistps
pushf
xlat
addr16
add
jnp
jecxz
jp
and
dec
neg
mov
or
xchg
jae
xchg
cmpsl
and
subb
sub
pushf
or
out
lcall
mov
dec
push
dec
xchg
les
pop
adc
aaa
or
gs
add
sti
and
or
fcomip
or
int
cmc
or
sub
inc
add
xlat
xor
dec
xlat
or
mov
xchg
jge
mov
popf
lahf
lea
movsb
test
or
int3
insl
jmp
cmp
sbb
cmp
cmp
jbe
inc
sub
add
xchg
push
jl
cwtl
add
insl
in
cs
mov
or
bound
or
push
scas
rcr
int3
inc
filds
scas
or
insl
jbe
iret
pop
jbe
fbstp
dec
cmp
jl
push
push
jne
subl
mov
test
out
out
out
push
adc
dec
pop
filds
mov
xchg
xor
arpl
es
push
test
bound
and
or
sarl
into
sbb
dec
add
pmaxub
daa
test
mov
popl
or
mov
sbb
add
test
or
mov
dec
sbb
or
and
and
test
jb
leave
mov
jge
cmp
push
mov
std
sub
das
pop
test
add
jb
xor
stc
ljmp
add
push
or
pop
sub
dec
pop
ss
or
xchg
dec
lea
jmp
pop
mov
add
mov
into
sti
mov
sbb
or
int
scas
popf
or
fistpl
cmp
xor
push
cmc
add
jae
lcall
mul
fs
ja
or
aas
pop
mov
mov
mov
or
mov
imul
lahf
add
push
add
sub
dec
test
pmulhw
lahf
outsl
lds
or
popa
test
loope
add
outsb
mov
push
sub
or
ds
in
ret
add
addr16
adc
sub
xchg
scas
push
and
and
inc
jl
push
cmp
jge
lcall
xchg
cld
pop
mov
int
inc
pusha
pop
fs
int
jl
push
movsl
jp
push
outsl
or
xchg
push
mov
mov
or
add
jae
movsl
push
sub
das
aaa
movsb
mov
jmp
add
rcrb
inc
jmp
dec
mov
out
mov
inc
fiaddl
jecxz
iret
inc
mov
or
pop
andb
fwait
or
jae
dec
mov
or
lahf
and
or
addr16
or
mov
test
pop
dec
add
nop
stos
pop
push
fwait
in
or
mov
jge
cmc
cmp
add
add
sbbb
imul
add
pop
pop
movsl
hlt
xchg
std
or
push
mov
push
or
add
push
mov
inc
imul
dec
incb
add
cmp
pop
sbb
or
push
cli
push
shld
add
or
mov
jmp
ljmp
and
test
add
mov
stos
dec
add
repz
in
out
movsb
loop
add
sbb
adcl
insl
add
test
bound
popa
in
loope
or
mov
inc
or
pop
or
clc
test
add
mov
push
js
adc
xchg
sub
add
ret
into
roll
sbb
mov
outsb
xor
and
lahf
or
cmp
push
ja
add
shlb
pop
xchg
or
shlb
popf
and
movntps
xrelease
add
cmp
stos
mov
lahf
dec
mov
or
mov
lods
stos
xor
scas
mov
mov
lds
lret
rorl
dec
lret
cmp
mov
mov
mov
cs
mov
xchg
sbb
push
sbb
sahf
or
sbb
lea
pop
add
addl
pop
add
jb
pcmpeqw
cmc
jge
lock
js
repnz
ja
rclb
xchg
insb
fucomi
xchg
sqrtps
test
push
rcr
push
pop
push
rcl
push
lcall
jo
pop
cmp
cmovno
rorl
lret
inc
mov
cmp
xor
mov
cmp
xor
stos
push
sub
cmpsb
mov
or
push
xchg
lcall
pop
lahf
popf
adc
add
mov
or
push
xchg
pop
or
mov
icebp
ud0
stc
je
decb
insb
pusha
in
or
imul
push
push
aad
fistpl
fcmovnbe
push
pop
fimuls
ficomps
sarb
inc
int
sub
push
and
add
popa
outsb
jmp
and
push
push
fcmovbe
dec
sub
add
inc
inc
ret
ret
dec
dec
int
pop
sub
sbb
sbb
adc
sbb
sbb
cs
daa
sbb
pop
sub
add
bound
popa
outsl
imul
pop
or
popl
pop
add
or
or
add
stos
js
sgdtl
js
add
jb
add
push
cmp
add
add
or
or
xchg
stos
js
dec
add
pop
add
or
pop
int3
jl
and
sarb
or
jg
mov
or
adc
or
and
jl
daa
or
add
mov
push
pop
inc
push
jns
add
pusha
cwtl
or
or
sbbl
pop
scas
cwtl
push
mov
xchg
or
cwtl
or
pushf
or
lcall
cltd
or
or
stos
jmp
or
pushf
or
sbb
adc
or
inc
rclb
sbb
sbb
outsb
or
add
or
loopne
pop
movsb
or
mov
or
loope
add
mov
out
add
push
pop
add
jb
mov
orl
mov
mov
std
addl
sti
mov
lea
xchg
mov
mov
mov
clc
popl
movl
cli
mov
lock
or
mov
hlt
popl
daa
push
addb
mov
xor
or
hlt
mov
imul
xor
or
jge
add
and
adc
pop
sahf
push
iret
pusha
add
or
pushf
or
setge
pop
repz
add
cmp
or
pop
mov
inc
lea
mov
hlt
push
xchg
jns
ud0
notl
scas
orl
ret
sbb
cmpxchg
or
lsl
mov
or
or
icebp
ret
or
xadd
push
movb
push
lret
rorl
lds
pop
lds
jno
or
pop
push
enter
or
les
lret
or
sub
pslld
or
popa
or
lahf
sbb
add
or
les
cmp
or
or
or
enter
or
lds
rorb
enter
psubw
add
or
es
or
roll
ret
or
add
enter
add
add
sbb
or
psubsw
add
lret
or
add
xor
roll
ret
sti
sbb
or
mov
inc
push
pop
or
xor
xchg
in
inc
cmp
or
int3
sahf
inc
mov
repnz
test
and
mov
popa
xchg
mov
lea
pop
hlt
cmpsl
or
es
in
inc
popl
mov
pop
add
scas
mov
stc
movsl
lea
and
mov
test
bound
mov
or
pop
mov
or
popl
push
adc
or
int
or
out
or
add
rolb
pop
lret
mov
fisttpll
or
insl
pop
or
adc
jbe
rorl
mov
dec
sarb
popa
pop
add
or
or
inc
ljmp
loop
or
or
add
or
cltd
push
add
push
mov
add
jno
add
popl
pop
mov
mov
jl
out
mov
jbe
jno
and
aad
pop
icebp
mov
orl
or
push
or
fdivl
add
sbb
add
or
add
add
inc
pop
or
pop
or
push
adc
lcall
mov
add
push
pandn
or
or
cmovne
or
push
pop
or
add
das
dec
add
add
dec
sti
add
inc
or
dec
or
or
add
or
pop
cmovne
add
pop
inc
or
inc
add
dec
or
jne
sub
or
sbb
inc
test
or
add
push
add
add
add
xor
add
pop
or
or
push
push
cmp
mov
add
or
add
add
adc
cmp
adc
sbbl
sub
add
add
jle
or
dec
or
and
sub
ud2
sub
or
or
jo
add
sbb
or
lea
and
or
xor
push
add
dec
orl
mov
dec
lea
or
add
dec
push
push
add
sub
add
sbb
dec
push
add
wbinvd
add
or
or
clc
testl
add
add
or
or
push
lret
or
or
push
sbb
add
cld
or
movsl
or
or
int3
add
or
or
clc
incl
inc
add
cmc
or
or
cmc
stc
push
or
clc
call
cmp
or
or
inc
add
add
or
rorb
jno
sbb
add
dec
xor
push
or
or
add
or
mov
add
imul
stos
or
or
pop
or
cmpsl
roll
add
add
or
sbb
repz
sbb
cmc
or
xchg
clc
shl
lock
jmp
or
ss
ss
cmp
pminsw
int
icebp
add
std
icebp
test
int
int
int
cmp
movb
sbb
add
icebp
pop
add
add
testl
cmp
popf
add
mov
or
push
test
dec
xor
mov
adc
push
dec
add
imul
or
ja
add
leave
lsl
cmp
or
int3
or
add
cs
or
pop
loope
xchg
cmp
or
mov
divl
or
or
clc
push
pop
popa
and
aaa
mov
lods
sub
inc
mov
lret
mov
inc
or
or
clc
add
std
add
sbb
and
dec
or
add
adc
dec
or
and
add
in
in
dec
xor
push
dec
or
stos
or
addb
or
or
or
pop
jae
or
icebp
insl
or
outsl
or
dec
push
out
sbb
add
lods
pop
testl
or
imul
push
mov
push
sbbl
in
sbb
push
adc
mov
add
or
scas
ret
or
ud2
sub
sub
es
or
or
sbb
or
sub
push
out
repnz
lret
mov
add
or
out
sub
loopne
loopne
jmp
add
or
adc
push
std
daa
jle
push
xor
pop
add
push
rcll
addb
push
jne
clc
js
push
and
pop
aas
pop
add
xor
xor
xor
or
pop
push
or
xor
pop
or
and
add
orl
inc
into
cmp
imul
cmp
and
pop
add
or
or
notl
pop
or
add
dec
adc
incb
dec
and
idivb
adc
adc
adc
jno
push
or
or
or
repz
jae
cmc
enter
ss
add
or
add
pusha
add
or
mov
mov
or
xchg
and
push
pop
add
add
enter
push
sbbb
mov
push
or
ds
add
or
pop
push
cmp
cmp
or
sub
xorb
iret
jns
or
jle
ss
cmpl
cmp
or
or
adcb
aas
repnz
xor
pop
repz
or
mov
add
add
aas
lock
dec
mov
insl
jp
cmp
xor
imul
or
push
or
or
mov
or
nop
or
or
add
nop
repnz
cmp
add
xor
or
orb
shrd
mov
cld
or
lock
invlpg
cmpb
sbb
test
mov
sbb
mov
lods
adc
push
movl
push
mov
jb
or
sub
push
xor
push
xor
in
adc
xor
xorb
sub
xor
jge
in
ret
bsr
mov
mov
test
jno
or
add
dec
add
daa
xor
sub
lds
test
lods
mov
inc
mov
lods
sub
xor
cmp
mov
sub
test
push
mov
mov
addb
or
mov
sub
out
mov
imul
or
adc
sbb
ds
les
jns
lock
adc
ss
call
xor
xor
xchg
cmp
cmp
cmp
xchg
xor
xor
xchg
xor
lahf
aas
cmpsl
adc
sbb
or
jne
cli
sti
mov
or
or
pop
or
dec
or
dec
sub
pop
std
fisubs
call
decb
add
xor
inc
or
test
sub
or
jns
or
sti
out
jecxz
add
jae
jge
jl
add
divl
jle
ja
cmp
add
xchg
or
cmp
or
and
cld
and
jp
cmp
repz
or
add
sbb
add
lock
or
add
or
setbe
addr16
xor
or
in
or
or
test
jg
cmp
cltd
xor
add
test
jp
imul
sub
adc
sub
icebp
or
je
or
sbb
sub
push
sub
das
add
in
dec
dec
or
cs
xor
mov
aaa
insb
mov
push
sbb
xor
mov
xchg
xor
cmp
in
or
addl
or
push
sub
add
or
or
or
or
push
add
add
mov
or
or
mov
add
add
or
testb
or
mov
or
lsl
mov
cmpsb
cmp
xorl
cmpsb
pop
add
or
or
mov
lcall
or
test
push
lea
xor
test
cmp
mov
orl
test
dec
cmp
add
add
enter
mov
enter
incb
cmp
int3
mov
cmp
sub
or
lds
inc
inc
push
dec
lea
repz
mov
pop
arpl
or
xor
inc
mov
pop
xor
lret
pop
cmp
stos
mov
adc
sub
test
jne
adc
das
out
addb
add
sub
cmp
ds
mov
jle
fs
inc
xorl
mov
xchg
mov
or
std
xor
or
xor
cli
xchg
sbb
dec
movsb
mov
cwtl
adc
push
into
leave
test
inc
cmp
or
ds
or
dec
mov
xor
push
sarl
xchg
int3
or
mov
nop
sahf
mov
rorl
insl
or
add
or
sub
or
iret
push
insl
or
add
iret
add
sbb
in
cmp
or
xor
or
into
or
jmp
adc
or
inc
hlt
insb
adc
push
adc
divl
xchg
xor
xchg
outsb
subb
sub
xchg
nop
cmc
dec
add
add
pop
xor
xchg
cmpsl
add
mov
and
xchg
pusha
add
push
mov
push
or
sub
orb
mov
mov
or
lea
cmpsb
stos
leave
addr16
mov
imul
movsb
outsb
or
or
sbb
add
push
cmp
out
sub
orb
ldmxcsr
pop
aas
push
cmp
inc
xor
inc
sub
ds
out
and
orl
lds
js
loope
subb
int3
sahf
test
cmp
sub
movsl
lret
cmp
out
dec
leave
insl
add
cmp
or
lret
or
iret
sub
imul
dec
ss
clc
popa
sub
push
enter
lock
leave
mov
sub
insl
add
push
lret
mov
add
arpl
jno
push
xor
es
add
jae
xor
xor
mov
lea
lea
add
pop
addr16
dec
mov
clc
pusha
add
or
cmpsl
mov
sti
int
sub
cwtl
and
adc
xor
pop
cmpsl
adc
push
push
xor
sbb
push
ds
xor
push
cmp
pop
xor
cmp
repnz
cmp
push
aas
pop
cmp
push
ds
xor
cmp
test
cmpsl
sbb
or
adc
sbb
sbb
or
adc
xor
add
sub
cmp
or
sbb
jo
dec
or
in
clc
js
add
test
or
mov
jo
into
adc
or
or
stc
or
or
or
flds
xor
add
inc
mov
adc
sidtl
xor
or
or
sbb
popa
or
add
or
xchg
add
fs
bswap
or
data16
or
or
cld
outsb
add
pop
sbb
push
or
or
or
in
push
lds
popf
or
cs
or
or
or
or
add
std
or
wrmsr
or
or
add
or
lods
add
leave
sbb
add
pop
sub
push
and
and
adc
add
or
mov
add
mov
push
or
inc
adc
mov
pop
add
or
push
adc
incl
or
push
xchg
add
jle
pop
add
sub
sti
adc
repz
or
or
sub
add
dec
adc
add
or
add
push
dec
or
add
inc
or
push
in
sub
pop
push
inc
push
dec
add
push
or
add
lea
lds
push
sbb
jmp
and
incb
add
cmp
add
imul
push
push
jo
push
add
sub
cmpsb
or
add
push
adc
aaa
push
sbb
and
sbb
or
adc
xchg
add
mov
and
add
aaa
ds
or
add
int
add
xor
sbb
push
into
add
pop
push
jecxz
int3
psubw
int3
xchg
repz
or
lret
add
or
add
mov
or
lea
add
jg
or
roll
leave
push
rolb
sbbl
or
lea
push
add
or
or
or
cmp
dec
add
or
or
pop
or
push
sub
push
or
jb
add
or
add
imul
or
int
enter
add
cld
orb
or
or
orl
add
add
push
js
add
js
or
push
iret
or
add
je
push
mov
pop
movnti
mov
or
and
or
dec
sub
or
add
test
fisttpll
sbbb
and
or
add
addr16
add
add
or
dec
or
inc
mov
dec
or
mov
mov
or
add
xor
dec
or
or
add
add
add
add
icebp
adc
or
sub
adc
add
test
pop
or
pop
das
and
arpl
repnz
stos
push
lods
adc
add
push
mov
xchg
stos
sub
xor
or
or
aas
testl
imul
scas
sbb
push
or
ja
jge
insb
xchg
push
or
scas
or
or
and
inc
dec
xor
test
cmovs
jnp
xadd
jg
arpl
std
mov
das
sbb
xor
adc
pop
mov
test
cs
addl
add
leave
xor
add
push
inc
xor
inc
or
inc
add
or
or
int
inc
add
rcll
add
pop
out
add
enter
stos
pop
pop
sbb
or
jbe
add
mov
jecxz
leave
or
lds
jge
and
inc
sbb
cmp
imull
and
or
and
int3
push
or
subb
or
outsb
or
mov
mov
jmp
or
jo
test
xchg
add
or
jmp
fstpl
push
sub
lea
inc
push
bound
cmpb
or
sahf
sbb
or
mov
add
push
jl
clc
and
rcll
mov
mov
or
aas
pushf
add
sub
shll
push
popl
movsb
adc
das
das
jbe
or
push
aas
push
jmp
inc
push
add
xchg
push
roll
repnz
adc
dec
bound
pop
call
lock
imul
sub
mov
ss
bound
imul
ret
add
mov
popf
push
sbb
or
or
imul
sub
pop
in
pusha
sbb
adc
pop
fldl
add
or
or
xchg
sbb
pop
or
mov
push
js
ret
cmp
adc
dec
cmp
call
pop
sub
mov
mov
repnz
push
cmp
xlat
inc
std
or
iret
adc
test
cmpsb
push
mov
sbb
or
mov
lahf
cmc
decl
sub
push
ljmp
push
push
divb
sub
iret
add
mov
and
xchg
ss
dec
cmp
hlt
addr16
or
das
add
push
pop
sbb
cli
or
pop
adc
pushf
and
outsb
je
cs
cmc
jbe
xchg
push
sbb
setno
lock
sbb
add
sub
mov
or
jns
ja
add
mov
mov
insb
add
adc
loope
js
jo
xrelease
aas
popf
inc
pop
pop
and
fiaddl
fbld
adc
out
inc
pop
adc
mov
push
iret
pop
dec
jp
add
jns
sbb
adc
push
cmp
outsb
and
ja
jo
jns
or
loop
push
into
xor
sbb
pop
or
inc
push
cmp
ud2
or
and
or
jne
add
or
push
dec
addr16
jnp
pop
and
or
push
pop
or
addr16
out
add
imul
push
inc
or
jecxz
aaa
or
or
outsb
or
or
add
nopl
lods
add
or
js
inc
or
gs
push
add
jge
or
or
or
add
or
str
or
or
or
or
add
or
or
or
imul
push
xchg
mov
or
or
push
add
jo
mov
add
or
sbb
sbb
xorb
xchg
mov
addb
or
or
xchg
sbb
lea
and
or
inc
xchg
mov
sbb
rcrl
arpl
ret
cmp
xchg
jno
repnz
push
push
xchg
dec
jge
and
add
or
adc
leave
sub
lock
push
into
push
addl
andb
or
sysret
test
dec
push
or
outsl
pop
popf
jo
das
add
or
dec
mov
test
pop
test
scas
cmp
or
or
sub
sbb
mov
inc
and
or
jo
sbb
dec
jo
push
and
and
and
and
nopl
push
push
call
jnp
add
sub
insb
mov
lea
inc
or
or
adc
dec
sahf
movsl
or
mov
mov
movsl
and
add
stc
lret
add
push
sbb
sbb
adc
loope
ret
xor
das
push
rcrl
iret
pop
cmc
test
dec
imul
add
and
int
int
sbb
xchg
in
dec
sub
or
and
sbb
add
sbb
das
adc
push
sub
dec
daa
or
adc
mov
mov
or
inc
or
xor
jne
pop
and
add
or
or
add
daa
pmulhuw
std
jnp
orb
shll
pop
loope
xchg
add
imul
sbb
mov
or
push
icebp
jns
mov
cmp
mov
xor
xor
dec
mov
adc
or
fs
cltd
xor
cmovp
lcall
mov
xor
js
and
and
mov
adc
sahf
pop
xchg
push
cwtl
push
cld
mov
dec
sbb
mov
pop
fmull
and
pop
sbb
cmp
outsb
or
mov
imul
sbb
pop
add
std
or
sub
or
pop
push
and
jae
jno
and
push
xchg
das
pop
xor
xor
add
or
cli
or
sbb
lahf
sub
inc
pop
aas
or
xor
incl
test
movsl
cmpb
jno
pop
dec
add
pop
ds
push
or
daa
or
pop
pushf
sub
lcall
jmp
jl
lret
sub
xchg
test
das
test
fmuls
push
jno
sub
and
lret
xorl
cltd
and
sub
jae
imul
push
fdivrs
adc
or
cwtl
outsb
add
jae
or
mov
cltd
inc
leave
adc
loope
adc
sbb
jb
adc
sub
loopne
std
ljmp
mov
sbb
neg
or
add
or
or
add
mov
and
aad
mov
js
dec
add
or
xor
fisubrl
xor
or
or
or
or
or
or
rolb
pop
icebp
jae
cmp
loop
nop
and
dec
or
dec
add
jbe
push
rolb
add
push
fistl
mov
lock
aas
mov
fsubs
testl
or
mov
add
or
xchg
jno
xchg
or
repnz
dec
pop
or
sub
push
dec
loope
enter
addb
mov
push
pop
xor
xor
cli
sub
jp
rcll
add
pop
or
sub
mov
outsb
or
or
or
or
inc
add
add
push
push
add
test
or
add
or
jge
or
dec
dec
or
popa
or
jl
cmpl
add
add
jne
or
or
setl
and
or
pop
or
and
adc
add
push
and
or
pop
cli
bound
push
jnp
and
and
sub
pop
loop
or
push
and
testb
or
or
or
inc
add
sbb
mov
outsl
xlat
or
mov
adc
mov
adc
sbb
cmpsl
or
push
dec
pop
add
jo
add
or
or
or
or
push
push
andl
inc
mov
or
test
adc
adc
or
add
push
cs
add
or
inc
cmp
sub
dec
or
mov
dec
mov
or
pop
mov
xorl
and
cld
rorl
or
add
mov
push
add
sbb
addl
pop
inc
or
mov
stc
push
or
or
add
mov
add
leave
add
dec
leave
xor
or
pop
mov
int
jg
or
mov
leave
dec
pinsrw
cmp
imul
mov
inc
iret
push
test
add
add
adc
sbb
testl
lret
xor
vmptrld
lret
addb
int
or
mov
dec
sbb
mov
movsb
mov
addl
cmovb
sub
add
or
xor
ret
add
or
or
push
push
mov
cmp
addr16
jnp
pop
test
push
cli
add
cs
or
or
push
pop
divl
push
ljmp
and
push
sub
mov
add
push
cmp
out
sbb
sbb
adc
or
mov
mov
enter
or
add
or
out
inc
lock
mov
lods
or
add
ret
mov
repnz
bound
pop
or
push
add
repz
shrd
or
das
lret
add
push
push
in
mov
mov
and
inc
adc
or
jmp
iret
or
adc
or
test
orl
and
sysret
mov
cmc
xchg
mov
and
sbb
dec
xor
or
or
pop
scas
loopne
cmovl
push
or
or
add
adc
jle
push
cs
or
pop
jo
add
mov
mov
mov
sub
mov
jp
sub
movsb
cmp
pop
push
mov
gs
xchg
or
or
sbb
loopne
loopne
cmp
fwait
push
stos
jg
inc
pop
lock
lcall
imul
xorb
jns
ret
sbb
pop
and
pop
cmp
outsb
sti
jns
ljmp
lcall
add
mov
jns
sbb
pop
push
ljmp
adc
ret
and
inc
push
xchg
insl
pop
repz
mov
cld
adc
or
sti
sub
call
out
push
xchg
push
gs
push
push
dec
scas
xchg
or
add
dec
sub
cpuid
push
loop
rcrl
xor
jg
sarl
or
daa
or
icebp
pushf
add
or
cmp
movsl
sbb
cld
sarb
ud0
dec
xor
push
add
mov
and
sub
sub
js
or
jge
cmp
pop
scas
test
lcall
jno
mov
adc
movsb
and
add
mov
mov
lea
add
push
aam
inc
add
sub
negb
dec
mov
or
testl
mov
add
clflush
push
div
inc
jp
in
or
xor
cmp
or
sahf
jno
mov
fcoml
sbb
sub
adc
into
cs
lods
fldt
repnz
pop
cmp
adc
pop
inc
sbb
pop
icebp
outsl
add
or
mov
sbb
ljmp
lea
mov
cld
pop
add
cmp
pop
insb
cmp
js
out
sub
mov
xchg
jnp
adc
inc
clc
out
enter
addr16
and
dec
sbb
pop
pop
pop
sbb
mov
adc
add
popf
push
dec
sbb
push
fnstenv
sub
insl
mov
and
sbb
xor
sub
push
call
pop
sub
mov
or
mov
imul
cmp
sub
movsb
push
adc
inc
outsl
push
popa
adc
lock
mov
or
std
loopne
inc
bound
and
ljmp
xor
or
cmp
stos
inc
mov
adc
mov
or
push
or
or
mov
pop
or
push
outsb
pop
add
jbe
or
or
or
add
outsl
or
push
dec
pop
popa
add
cmp
or
sub
add
or
dec
je
and
or
or
adc
and
loop
mov
insl
pop
or
add
add
imul
jnp
sub
dec
cld
or
or
pop
xor
add
add
testl
add
push
dec
add
or
incb
test
add
xor
mov
movups
cmpb
or
inc
add
or
push
pop
pop
add
mov
push
or
add
push
or
andl
mov
cld
addl
and
and
or
inc
ud2
add
pushf
pusha
add
xorl
mov
pcmpeqb
xchg
and
sbb
or
std
adc
add
sub
and
pop
or
sbb
and
add
sbbb
jne
add
subl
inc
jns
mov
add
adcb
rcrl
sub
nop
or
or
add
mov
int
orb
repz
mov
adc
or
add
enter
inc
add
or
sbb
or
or
xchg
dec
lea
pop
add
xor
add
ja
add
sbb
add
add
push
inc
mov
add
inc
sbb
dec
add
lea
jnp
or
and
add
add
pop
add
pop
imul
add
mov
and
int
shlb
js
inc
ret
mov
add
push
sub
push
insb
inc
sub
cmova
sub
add
inc
out
popl
orl
add
dec
mov
cmp
insb
dec
or
push
roll
fldl
scas
outsb
sbbb
hlt
and
push
mov
int3
jb
sbb
mov
mov
adc
icebp
addb
fcoms
mov
adc
or
int3
or
rorl
sbb
iret
mov
push
cmp
and
out
add
sbb
or
push
fsubrs
add
mov
sbb
mov
addr16
mov
pop
and
push
daa
add
xchg
and
loopne
std
push
cmpsb
or
mov
js
test
or
pop
shrl
mov
push
or
pop
rorl
fisttps
mov
fisttps
cltd
add
hlt
outsb
jb
jns
pusha
add
sbb
sbb
setp
and
sahf
jle
clc
movsb
sub
cmp
std
imul
or
mov
add
sub
unpckhps
outsl
sbb
fisubs
outsl
or
js
pop
or
nopl
xchg
repnz
cpuid
inc
pop
or
dec
add
jp
jnp
or
cmp
ljmp
int
xchg
xchg
decb
add
dec
and
adc
mov
cli
cmp
add
xor
mov
adc
jg
or
add
cmp
xor
cld
dec
mov
cmp
jo
js
jae
repz
ljmp
adc
xlat
subl
mov
repz
mov
movl
xchg
add
adc
xchg
repz
out
or
jbe
sbb
mov
xor
and
mov
push
xchg
xor
lods
or
jb
adc
xor
jns
sub
sub
fmull
xchg
or
xchg
or
rolb
cltd
mov
sbb
xor
push
xor
and
lods
fmull
pop
xchg
add
or
sbb
push
insb
addr16
jne
lods
xor
push
in
fisttps
or
hlt
inc
inc
in
inc
dec
mull
mov
dec
or
inc
pop
psubw
add
add
xchg
daa
or
push
mov
add
or
push
imul
add
or
push
add
or
gs
add
or
cmp
sub
or
addr16
push
or
outsb
add
or
xchg
and
or
adc
add
push
push
bound
adc
push
inc
jns
dec
pusha
or
dec
pop
sbb
or
dec
or
or
or
adc
ud2
pop
or
add
add
mov
pop
add
or
shrl
add
or
sysret
addb
or
or
push
inc
loop
or
mov
jo
mov
sbb
pusha
incb
pop
mov
add
ds
fwait
outsl
pop
sbb
test
sbb
or
sub
sub
pop
add
mov
int
xchg
pop
imul
or
jg
or
jno
mov
add
add
push
or
jg
push
and
dec
iret
adc
or
testl
adc
or
shll
dec
add
or
daa
mov
pop
testb
inc
test
inc
subl
or
mov
add
mov
push
ret
adc
mov
push
into
dec
pop
dec
or
test
leave
fwait
dec
add
imul
lea
or
incb
mov
into
sub
ret
add
popf
jno
push
mov
int3
mov
or
cmp
add
iret
adc
pop
into
pop
stc
inc
dec
mov
adcl
or
add
push
dec
adc
pop
jge
or
or
pop
pop
or
sub
loope
add
scas
cmp
push
lods
or
or
adc
jle
or
das
dec
lret
shlb
sub
sub
sub
mov
pop
mov
test
scas
inc
mov
sbbl
daa
mov
bndstx
bound
or
ret
push
aam
outsl
adc
dec
adc
jae
add
mov
int3
add
enter
jl
adc
mov
jle
leave
sbbb
enter
jno
or
insb
stos
or
mov
lock
adc
pop
mov
dec
add
or
sarl
rcrl
and
sub
fbstp
or
lods
add
daa
jp
filds
cmpsl
add
and
jge
mov
cmp
into
or
dec
add
pop
add
add
or
pop
xor
fimull
test
pop
movaps
clc
add
or
leave
adc
and
xor
stc
or
add
add
or
or
dec
jnp
insb
add
or
xchg
loope
mulb
pop
sub
sbb
or
adc
dec
or
mov
cli
push
lcall
cli
or
std
dec
jmp
push
mov
jge
ret
push
cmp
std
cltd
movhps
mov
loop
push
push
or
mov
subl
jns
push
sub
adc
testb
out
loop
push
adc
or
or
dec
pop
or
adc
add
sahf
pop
repnz
std
jp
sbb
jp
xor
cmp
das
or
or
clc
lods
or
push
or
sub
repz
lods
mov
add
or
add
add
popa
add
push
mov
xor
push
mov
cld
int3
add
or
stc
or
and
test
jmp
pop
mov
push
insb
sub
mov
cmp
or
add
dec
sbb
sbb
add
sbb
pop
inc
cli
push
add
jp
mov
insl
pop
rolb
or
add
sbb
or
fsubrl
cmp
mov
scas
imul
sub
into
add
and
xlat
rorb
or
bound
cwtl
or
adc
add
or
or
mov
jns
fisubl
add
stos
sub
mov
sub
cmp
stos
xor
pop
out
xor
or
mov
cmp
or
cmp
mov
repz
xor
pop
push
sbb
mov
imul
outsl
add
pop
and
sbb
lret
add
pop
push
add
pop
sbb
inc
lret
push
sub
andl
push
icebp
rolb
fildl
andb
adc
or
jno
sbb
jbe
jp
je
push
dec
mov
fimuls
jle
repz
push
jae
mul
fiaddl
str
add
or
packsswb
add
or
or
or
add
sub
test
push
andb
jae
or
ds
push
or
cmovno
sub
inc
or
and
jle
or
or
xor
add
jo
add
inc
or
and
pop
jns
or
or
or
or
add
push
inc
add
pop
adc
add
xchg
jne
orl
pop
push
or
or
pop
sbb
xor
or
xchg
and
icebp
mov
sub
or
or
iret
imul
sbb
or
aas
fwait
orl
xorl
push
dec
push
cli
sbb
add
adc
pop
xchg
lcall
adc
or
add
or
pop
or
cmc
or
pop
or
mov
rcrl
add
push
mov
or
inc
or
add
or
xchg
sbb
sbb
or
inc
sub
jo
cs
push
or
inc
inc
pop
dec
cmp
addl
or
mov
dec
add
xor
push
jmp
inc
or
add
push
jb
jne
inc
out
andl
or
out
dec
in
punpckldq
mov
mov
or
das
dec
or
dec
cmpsl
or
popl
aaa
stc
add
dec
sub
mov
call
push
lock
add
inc
pop
rcll
or
dec
xor
xchg
outsb
or
psraw
sbb
adc
add
push
cs
psubw
push
lret
daa
stos
inc
cmpsl
or
push
adcb
imul
pop
and
inc
xor
cmp
add
sbb
nop
jnp
add
imul
bound
pop
add
add
repnz
lret
lret
or
cmp
sub
stos
or
sub
pop
pop
jecxz
jo
push
sbb
sbb
insl
bound
sub
enter
or
add
or
out
add
jbe
or
aas
bound
cmpb
cmpsb
push
hlt
push
add
enter
or
dec
pop
pop
rep
sbb
imul
mov
rolb
or
push
push
std
es
adc
or
or
sub
les
and
add
add
dec
movq
inc
in
outsb
repz
mov
incb
fisttps
pop
jmp
add
testl
add
testl
std
cmp
or
ss
pmaxub
cli
xchg
or
scas
aas
xor
int
xchg
and
loopne
rclb
in
dec
push
rolb
or
into
jge
or
or
or
bound
or
sub
xor
pop
repz
pop
inc
movsb
push
pushf
sbb
push
cltd
add
dec
fnstcw
push
mov
mov
dec
jnp
or
dec
or
or
xor
push
push
inc
clc
je
popa
pop
fmuls
push
dec
add
adc
mov
xor
add
and
adc
repnz
or
xorl
mov
add
sbb
icebp
aas
cmp
outsl
jo
loopne
push
add
rolb
mov
mov
into
je
and
add
push
les
or
movsl
push
push
jg
mov
pop
orb
jb
outsb
je
pop
pushaw
jns
or
dec
add
sbb
jp
or
jns
pop
add
lds
jo
js
outsl
or
add
or
sbb
inc
dec
push
je
fs
or
bound
je
or
pop
pop
js
cmp
push
sbb
ja
push
sbb
arpl
or
test
or
push
mov
jae
insb
js
insb
jg
push
cwtl
add
pop
sub
data16
add
pop
and
insl
jnp
mov
pop
inc
ss
jae
popa
push
mov
pop
or
popf
or
push
push
adc
outsl
popa
push
or
popa
dec
jge
sub
bound
dec
lcall
out
or
addb
dec
dec
gs
jo
cmp
pop
jle
push
adc
sahf
arpl
push
adc
sbb
add
jo
jg
ss
bound
arpl
test
add
add
push
lods
push
push
dec
jne
mov
cmp
push
dec
push
add
push
sbb
sbb
imul
add
add
inc
cmp
mov
dec
lods
arpl
outsl
mov
lock
adc
unpcklps
pop
mov
mov
test
lea
imul
sahf
xlat
adc
fcoms
jecxz
jo
imul
jns
in
sbb
inc
jb
ja
sbb
add
or
and
aam
pop
inc
ret
popa
gs
inc
push
jns
or
or
pop
ja
outsl
sub
dec
pop
pusha
bound
insl
das
adc
push
repnz
cwtl
subps
das
push
test
jg
jle
inc
add
sub
xchg
adc
dec
bound
fs
je
sub
dec
data16
push
add
push
packuswb
add
movhlps
inc
cwtl
addr16
dec
pop
sbb
outsl
bound
shrd
movsl
dec
addr16
bound
dec
jl
imul
pop
add
dec
insb
dec
jbe
add
jns
insl
dec
pusha
inc
insl
outsb
insb
fstps
push
daa
jae
arpl
inc
jg
jl
outsl
imul
shrb
sbb
or
mov
sbb
outsb
addr16
dec
adc
pop
pop
call
insb
call
outsb
insl
bound
pop
call
imul
out
testb
add
add
or
insb
jns
outsl
insb
push
sbb
outsb
cmp
bound
jle
add
inc
insl
inc
inc
inc
arpl
insb
outsl
push
or
sbb
dec
inc
push
fs
pusha
jno
gs
loop
bound
outsl
jge
pop
imul
and
dec
push
bound
dec
jp
add
jae
and
outsw
addb
xor
out
dec
pop
add
or
pop
imul
push
add
dec
push
push
insl
sbb
jle
out
lea
pop
ja
add
xor
add
outsb
bound
fs
insl
or
adc
inc
push
dec
pop
push
jle
add
add
fsubl
jg
cmpps
pop
adc
push
insb
add
push
sub
insl
or
std
push
or
and
addr16
cmp
add
inc
pop
or
inc
or
inc
push
jbe
jge
insb
insb
pop
or
pop
addr16
data16
or
inc
outsl
es
and
daa
insw
pop
popa
push
or
pop
dec
pop
dec
outsb
gs
and
bound
xchg
push
insl
jno
mov
mov
inc
dec
insl
bound
push
pop
xchg
sbb
mov
mov
jno
push
or
or
pshufw
inc
inc
push
inc
dec
push
int3
dec
pop
int3
dec
dec
adcb
or
and
addr16
insb
bound
adc
dec
jae
jns
sbb
mov
jo
insb
mov
arpl
imul
add
jle
inc
mov
add
outsb
insl
jo
xchg
mov
inc
jbe
dec
push
dec
jno
push
or
push
xor
dec
or
leave
add
add
sub
outsl
inc
bsf
dec
outsl
or
add
dec
or
pop
jne
imul
push
inc
dec
dec
inc
or
xor
add
jge
fs
insl
pop
jl
push
cvtpi2ps
into
add
dec
addr16
inc
mov
gs
popa
imul
pop
dec
gs
or
iret
add
or
pop
insb
jb
or
fs
inc
inc
arpl
jl
dec
or
ja
imul
addb
dec
iret
sbb
add
push
inc
push
push
pop
inc
dec
jb
or
fs
xor
dec
cmp
xor
or
ds
cmp
pop
dec
ds
cmp
xor
xor
dec
aas
aas
inc
dec
sbb
dec
wrmsr
inc
inc
or
cmp
xor
or
xor
aas
inc
xor
or
dec
aas
cmp
inc
inc
or
xor
cmp
cmp
dec
cmp
cmp
xor
dec
dec
inc
xor
dec
aaa
dec
inc
ss
dec
xor
ds
cmp
ss
cmp
dec
cmp
or
cmp
inc
xor
cmp
xor
dec
inc
dec
cmp
cmp
cmp
cmp
cmp
cmp
dec
xor
cmp
add
dec
sub
cmp
inc
cmp
push
dec
xor
dec
cmp
cmp
inc
cmp
ds
xor
push
dec
inc
xor
inc
dec
cmp
cmp
inc
xor
cmp
dec
ds
xor
and
cmp
inc
xor
cmp
cmp
and
xor
aaa
pop
cmp
xor
cmp
cmp
cmp
dec
xor
cmp
cmp
inc
add
dec
dec
cmp
or
dec
xor
dec
dec
cmp
add
or
dec
aas
inc
xor
xor
xor
dec
xor
sub
cmp
cmp
mov
dec
dec
xor
xor
bound
or
dec
cmp
dec
cmp
dec
cmp
inc
cmp
push
dec
inc
inc
aaa
xor
cmp
cmp
dec
dec
inc
ucomiss
cmp
cmp
add
inc
ss
dec
dec
pop
pop
lods
dec
xor
push
inc
sub
push
push
jp
pop
push
xor
outsb
jge
movsl
lar
pop
addr16
das
or
or
jp
imul
and
fs
jp
imul
imul
or
arpl
insb
or
or
fs
bound
popl
or
fcomps
or
add
push
dec
jle
lret
jne
outsl
pusha
dec
outsb
imul
push
add
js
or
or
add
dec
outsl
pusha
js
add
imul
dec
add
jge
dec
into
cmpb
ja
add
dec
cmp
pop
cmp
push
dec
dec
inc
push
push
sbb
add
outsb
add
push
insl
gs
bound
sub
add
psadbw
push
outsl
imul
push
push
pop
dec
add
mov
add
push
or
dec
imul
or
jg
add
outsb
dec
inc
jne
push
sbb
and
data16
dec
sbb
add
jae
pop
push
insb
imul
or
mov
jl
outsl
or
dec
popa
push
mov
add
jl
test
or
imul
popa
jg
bound
or
push
push
sldt
push
push
arpl
gs
or
js
add
or
pop
jecxz
sub
xchg
pop
push
adc
mov
dec
jl
dec
outsb
scas
xchg
and
push
dec
insl
jo
bound
addr16
outsb
sub
add
push
insl
sub
add
bound
pop
popa
fs
lsl
insb
bound
insb
push
sbb
or
or
bound
pop
sbb
or
or
dec
or
add
add
or
insb
outsb
bound
add
sub
push
in
add
dec
movl
mov
inc
push
xor
pop
out
mov
push
pop
pop
sbb
imul
jne
stos
insl
inc
out
sub
add
ud2
cmp
add
or
push
adc
or
or
pop
or
push
or
pop
add
and
jmp
or
or
mov
add
mov
push
rolb
mov
jl
mov
wbinvd
testb
cmpsl
or
sldt
add
femms
icebp
orb
mov
jle
jns
add
jns
add
bound
jp
testl
push
movd
push
jno
or
dec
push
or
decl
or
mov
or
xchg
cli
hlt
mov
repnz
iret
wbinvd
pop
cs
or
add
or
cmp
leave
cmp
jo
mov
or
add
inc
dec
addr16
jne
or
pop
or
xchg
bound
insb
jl
inc
outsb
arpl
push
add
jae
inc
inc
pop
imul
cmp
mov
outsl
pop
lock
push
sub
sub
mov
mov
inc
daa
inc
cs
or
and
pop
jbe
jp
or
or
and
fwait
or
push
pop
or
sbb
add
dec
mov
sub
sbb
or
xchg
mov
add
add
lfs
orb
push
or
or
mov
daa
sbb
pop
movsb
add
pop
or
fimuls
or
fstps
pop
sahf
push
shl
cmp
jle
mov
dec
fwait
dec
pop
or
stc
mov
sub
cmp
add
or
or
xchg
dec
fwait
stc
sbbb
fisttpll
cmovns
popa
or
popa
minps
roll
das
push
pop
or
add
or
and
push
ret
or
add
outsl
cs
push
bswap
add
or
or
xor
push
das
jge
inc
rorb
popa
mov
add
or
add
flds
mov
pop
fstl
repnz
or
jg
push
xor
aaa
sbb
pop
movups
xor
arpl
ret
or
pop
add
adc
xor
pop
xor
inc
repnz
or
add
add
inc
or
dec
scas
or
push
cli
call
sbb
arpl
dec
test
jns
add
decb
wbinvd
push
add
add
or
or
add
ja
jg
or
icebp
sbb
add
adc
imul
adc
or
movsl
femms
std
or
push
sub
mov
out
lock
xchg
jns
cmp
bnd
push
lea
jg
test
jns
stos
movsb
jno
add
fildl
or
or
popf
xchg
push
ror
stc
dec
xchg
add
mov
xlat
in
or
jb
adc
shrb
add
cmp
sbb
cmp
loopne
dec
repnz
xor
inc
or
push
sbb
movl
cwtl
inc
lret
call
mov
lock
jno
clc
ja
cld
jl
jae
cli
push
loop
pusha
add
xlat
push
push
xlat
aam
or
rcl
push
pop
pop
add
ficompl
into
leave
dec
add
ret
inc
inc
mov
les
lret
add
mov
xor
mov
xor
mov
mov
test
add
test
adc
popf
sbb
sbb
pop
or
pushf
nop
pop
add
or
or
push
mov
adc
mov
jbe
hlt
std
jnp
jb
clc
jbe
hlt
divl
jnp
out
outsl
pop
adc
roll
push
push
rcl
push
push
or
aam
push
push
rol
or
rol
inc
rol
inc
inc
rol
inc
ret
lret
or
rol
cmp
mov
xor
mov
mov
or
sbb
xchg
or
pop
xchg
xchg
sbb
xchg
lahf
add
sbb
sahf
sbb
add
mov
or
pop
test
sti
or
mov
sbb
pop
cs
push
sub
and
es
cmc
in
add
sub
or
ja
sti
push
ds
and
mov
cmp
xor
or
lds
pextrw
adc
inc
inc
push
or
or
aam
loopne
or
xchg
inc
lret
pop
mov
int
daa
sbb
sbb
orb
add
jmp
shrb
loopne
pop
into
push
outsl
adc
bound
push
sar
add
mov
ljmp
insb
lahf
dec
pop
sbb
outsl
leave
adc
popl
xor
sbb
stos
lret
cld
flds
ret
mov
dec
iret
push
test
fldcw
jmp
or
je
push
pop
mov
adc
adc
and
fwait
pop
pusha
sub
outsb
jl
sub
lcall
clc
mov
and
dec
push
test
sbb
int
adc
dec
xor
pop
ror
idivl
pop
mov
imul
xchg
or
sarl
dec
das
out
pop
add
es
orl
adc
mov
fimull
mov
sbb
add
sub
adc
add
jl
add
dec
xchg
sub
ret
or
mov
fdivrl
cmp
lock
or
mov
adc
insl
jmp
add
add
or
add
jle
pop
aad
or
push
mov
flds
lret
push
or
lcall
add
push
cwtl
add
xor
mov
test
or
aam
xchg
imul
pushl
add
leave
lea
fsts
stos
lret
pushf
jge
xchg
pusha
push
insl
xor
xor
inc
inc
push
xchg
popa
add
adc
jle
orl
sub
movsl
xchg
or
std
inc
ss
cs
jmp
inc
das
jp
mov
adc
push
out
insl
scas
push
dec
jnp
push
xor
loopne
pop
xchg
push
hlt
mov
fbld
mov
out
xchg
mov
mov
cltd
lret
and
add
cld
fiaddl
sbb
mov
inc
adc
mov
add
or
scas
rcll
and
add
cmp
out
stos
cmp
sbb
rcr
mov
cmp
jnp
cmp
pop
push
dec
daa
int
rcll
mov
and
add
lret
scas
push
sbb
push
loopne
jecxz
dec
arpl
jne
push
jo
repz
add
pop
mov
jae
sub
pop
out
inc
add
pcmpeqb
mov
popa
jnp
sbb
ds
or
cmp
pop
pop
fdivl
imul
jno
fcmovne
mov
loope
gs
je
js
sbb
inc
add
sbb
jno
jns
icebp
add
sti
xor
popf
add
xchg
dec
addr16
push
jp
test
cmp
lock
adc
imul
cmp
jb
icebp
std
dec
out
cmp
inc
inc
rclb
and
jle
xlat
mov
xor
mov
dec
fisttpl
dec
pop
test
xor
popa
popf
mov
or
fildll
negb
mov
jmp
cltd
cld
outsl
sub
pop
cmc
test
add
push
pop
xchg
push
adc
daa
popf
mov
jno
pop
jno
add
dec
dec
popf
pushf
push
fisubrl
inc
xchg
jbe
dec
pop
movaps
dec
jae
sar
xchg
ror
or
cmp
add
push
jo
lds
leave
add
pop
pushf
jnp
sbb
mov
and
sbb
mov
bswap
mov
scas
lret
xchg
leave
sbb
test
cmpsb
mov
mov
aad
inc
jb
out
rcl
iret
add
sub
std
xchg
daa
iret
pop
pop
iret
in
add
jp
mov
xor
popa
mov
imul
fdivp
sub
jg
cli
mov
hlt
lret
repz
movsl
insb
sub
mulb
mov
test
dec
mov
xor
mov
sub
mov
mov
jne
orl
adc
loopne
shlb
inc
sub
into
xor
add
int3
dec
ss
jne
ja
mov
xchg
int3
jns
scas
push
ljmp
movsb
pop
pusha
popa
arpl
js
adc
adc
jnp
and
enter
xor
lcall
gs
xor
push
outsb
in
leave
movsb
fildll
pop
negb
or
mov
xor
insl
stos
pop
sub
push
mov
sti
xor
out
push
pop
xchg
fld
and
cmp
jle
add
mov
and
js
add
andb
das
mov
out
pop
js
repnz
out
sub
jmp
xchg
push
or
push
adc
cmpsl
add
pushf
repz
in
push
mov
scas
push
or
inc
js
imul
daa
insl
scas
jl
insb
mov
orl
or
jns
or
dec
shrb
mov
mov
ret
mov
je
int3
sub
push
stos
dec
insl
je
loopne
push
push
jne
popa
outsb
cmc
jp
dec
push
addr16
mov
ss
sahf
cmp
jb
inc
jnp
dec
dec
pop
sbb
imul
inc
out
dec
add
pop
jmp
pusha
ljmp
les
lock
sub
out
push
inc
dec
dec
movaps
dec
adc
call
shll
loope
sbb
inc
ljmp
add
fidivl
loop
sahf
add
mov
sbb
fdivrs
sbb
push
or
ret
mov
and
daa
imulb
cwtl
jp
cltd
ja
repnz
cmc
xchg
aad
addb
loope
lahf
rep
lods
lods
mov
cmp
xchg
jle
shll
mov
push
pop
or
ret
pushf
arpl
fisttpl
int3
pusha
inc
sbb
insb
mov
popa
cwtl
fiaddl
xchg
sub
mov
mov
lods
mov
fs
cmp
xchg
sub
sbb
xor
adc
es
dec
ljmp
adc
shl
inc
dec
xchg
daa
sarl
ret
stc
test
lods
sti
mov
imull
aaa
adc
lds
cmp
daa
mov
xchg
push
cmp
jge
sti
dec
sbb
punpcklbw
sysexit
pop
ds
cmp
inc
add
aam
mov
cmpsb
and
popf
adc
xchg
dec
and
mov
inc
sti
jmp
jbe
cwtl
xor
inc
xchg
clc
repz
mov
mov
lock
sub
decl
and
enter
xchg
dec
insl
movsl
inc
orb
cmp
push
ds
and
jp
mov
mov
cld
mov
inc
aaa
imul
andl
cli
jmp
scas
icebp
sbbb
ja
mov
dec
mov
mov
and
mov
pushf
insl
xor
xor
and
repnz
subb
sbb
sbb
lock
inc
jae
dec
arpl
gs
imul
cmp
or
pop
add
and
icebp
cmp
cmp
dec
sbb
xchg
cld
mov
add
fdivrs
push
cmp
and
or
sub
and
and
daa
leave
es
sub
ror
pop
mov
jl
bnd
mov
cld
loop
mov
pop
loop
hlt
loop
mov
hlt
jmp
sti
lret
out
out
xchg
jmp
mov
mov
mov
jmp
mov
aad
mov
nop
mov
jnp
pushf
lods
jns
xchg
addr16
mov
pop
mov
jl
inc
mov
jg
inc
lods
jne
inc
pushf
popa
xchg
dec
ja
xchg
dec
jns
je
jne
jl
jns
jo
mov
cmp
jl
js
jb
jp
jnp
jp
jp
jl
js
addr16
imul
insl
cmp
insb
push
outsb
cmp
push
sub
xor
push
or
sbb
idivb
pop
aaa
std
xor
sti
dec
sbb
xor
xor
xor
ljmp
dec
dec
lret
dec
int
dec
dec
ret
int3
dec
aaa
ret
mov
aaa
mov
cmp
cmp
sub
lods
lods
cs
xchg
xchg
adc
pushf
lcall
addl
or
xchg
or
jle
jle
lock
sti
clc
ja
stc
sti
insb
jmp
fcoms
aad
pop
pop
pop
pop
pop
fcmovbe
pop
inc
int
inc
dec
int3
ret
mov
dec
dec
leave
mov
xor
mov
ds
mov
and
mov
xchg
pop
sbb
sbb
popf
xchg
sbb
xchg
pop
rolb
lock
mov
or
js
hlt
bnd
cmpsb
ja
xor
popa
outsb
in
call
push
pushf
adc
test
mov
sbb
fadd
iret
cltd
mov
inc
lahf
test
lret
dec
mov
add
cmc
arpl
mov
insl
cli
shrb
test
sbb
sar
add
shl
leave
lret
xlat
std
or
fdiv
clc
int3
fabs
cmc
mov
shl
mov
out
mov
jmp
mov
rcr
cmpsb
xchg
mov
stos
mov
mov
loop
cltd
mov
lcall
lret
mov
xchg
mov
mov
jb
mov
mov
jae
xchg
mov
push
jo
outsb
je
mov
outsb
pop
jb
pop
pop
jle
push
dec
push
dec
inc
pusha
mov
jns
dec
pop
jl
dec
pop
data16
dec
imul
fs
dec
imul
push
aas
dec
bound
dec
pop
jne
adc
jle
aas
pop
jnp
sbb
bound
sbb
imul
daa
dec
add
ds
add
sub
cld
mov
cmc
add
cmp
add
sub
stc
or
sub
or
adc
call
lock
aas
jmp
mulb
jmp
fdivr
add
lret
jecxz
add
fcomi
push
iret
fdivr
repz
divl
loop
mov
mov
in
jecxz
int
hlt
lods
xchg
mov
scas
mov
sti
lods
pushf
mov
lods
popf
mov
enter
out
xchg
mov
mov
xchg
test
jbe
mov
mov
andl
movsb
jp
xchg
mov
pop
je
bound
mov
push
jbe
insb
pop
jle
pop
push
jl
pop
dec
lods
inc
inc
popa
orb
mov
jae
inc
push
arpl
inc
pusha
jns
inc
data16
inc
bound
dec
bound
dec
outsb
xor
jns
adc
and
jo
in
call
push
push
fcomp
push
pop
fcoms
aam
push
mov
push
xor
xchg
lahf
test
test
inc
xor
fwait
fwait
loope
std
jge
not
adc
mov
insl
fistps
popf
in
test
inc
inc
xchg
in
jge
fstpl
pop
roll
test
push
push
std
jnp
dec
mov
ret
jmp
cmp
mov
dec
aad
mov
sub
inc
inc
scas
test
sbb
dec
test
dec
fwait
pushf
addb
sub
adc
xchg
mov
bswap
mov
daa
xchg
cld
mov
decb
test
xchg
loop
stc
loop
xchg
jecxz
outsl
fsubrs
stos
in
pop
out
loopne
or
into
lcall
divb
push
int3
enter
les
clc
insl
mov
mov
push
sub
aam
inc
ds
mov
scas
adc
leave
and
pushf
dec
dec
nop
xchg
mov
fisubl
pop
fxch
incl
inc
dec
lret
lret
dec
rolb
int
out
enter
mov
into
cmp
adc
aaa
mov
aas
lods
stos
and
mov
ljmp
lahf
xchg
push
sbb
ficompl
addl
pop
add
mov
push
incb
je
divb
adc
jl
cld
outsb
push
and
addr16
and
push
pop
mov
fcoml
ficomps
jle
movl
cmp
dec
iret
movb
and
dec
int3
mov
xor
push
mov
ds
mov
js
loop
xchg
dec
divb
cwtl
adc
leave
arpl
divl
fadds
fsts
mov
cld
cmpl
cmp
push
xchg
lret
aad
push
add
fbstp
movsb
mov
clc
jp
sbb
mov
inc
pushf
test
and
push
in
or
movsb
add
sbb
inc
data16
lahf
add
js
or
leave
cwtl
add
push
outsl
popa
jmp
sub
cmpsb
dec
outsb
push
fsubs
add
mov
dec
sahf
fst
push
imul
cmp
add
lock
int
cmp
jne
xchg
sub
push
arpl
mov
cltd
rolb
sbb
push
inc
repnz
push
sahf
xchg
inc
roll
clc
add
xor
and
push
cld
stos
and
loope
repz
push
jl
in
dec
test
jmp
push
test
inc
push
insb
jecxz
outsl
pop
stc
ds
int
add
mov
cs
int
outsb
pusha
pusha
in
lcall
push
rcrb
loopne
dec
cwtl
and
xor
or
xchg
xchg
sbb
lret
cld
sub
ret
fwait
out
lahf
mov
mov
xchg
xor
cmp
inc
or
daa
adc
mov
xchg
and
mov
push
xor
xchg
fcmovnb
lods
xchg
lcall
mov
ljmp
sbb
jno
and
push
loope
jecxz
xor
xchg
cs
ljmp
jg
sbb
fcmovne
pop
pop
inc
add
fdivs
and
jbe
dec
dec
mov
pusha
sub
aaa
jg
and
sub
and
mov
cmp
adc
les
lahf
dec
add
cli
movsb
jle
aas
addb
mov
add
cld
or
cmp
pop
or
popa
subb
in
push
std
in
ljmp
stc
gs
jns
or
out
movsl
enter
or
leave
aad
lahf
mov
jbe
inc
fiadds
mov
push
xor
cmp
fs
mov
mov
and
and
mov
stc
adc
fwait
popf
cld
sub
cmp
adc
xor
adc
ds
push
out
enter
popf
lds
jmp
test
pop
add
in
push
cli
or
jno
imul
xchg
pop
push
and
das
shrb
pop
push
das
rorl
mov
in
jmp
push
out
xchg
dec
add
inc
dec
scas
aam
ss
outsl
inc
scas
scas
testl
stc
mov
dec
mov
xchg
call
mov
gs
mov
imul
pop
push
add
aam
mov
mov
dec
jne
cmp
mov
cmp
loop
fists
pusha
xor
adc
addr16
mov
and
push
lahf
loop
and
addb
sbb
fimull
andl
push
lods
fsubs
xchg
lods
stos
repz
sbb
pop
fsts
cwtl
xchg
xchg
imull
rclb
pusha
pusha
sbb
fstpl
push
popa
out
incb
mov
aas
adc
testl
xor
outsl
aaa
sub
int3
pop
cmp
mov
loop
or
movsb
add
mov
mov
idivl
xchg
test
addr16
sub
or
jle
mov
dec
fisubrs
lea
jle
sbb
pop
fwait
movsl
inc
fstl
jno
aam
sub
ljmp
add
pop
sbb
or
mulb
js
mov
out
daa
mov
sbb
pop
adc
lcall
cmp
xchg
and
lret
fimull
inc
repz
xorl
sub
dec
int
test
xchg
aaa
and
jns
xchg
mov
sbb
and
xor
jg
adc
loope
sahf
cmp
sbb
add
mov
shlb
push
jnp
mov
push
mov
out
dec
std
rorl
sbbl
sub
inc
xchg
push
and
mov
mov
aam
jae
and
in
in
scas
and
ret
lret
dec
mov
xchg
cmp
jle
and
mov
mov
dec
pop
inc
and
cli
jae
add
xchg
ret
sahf
jmp
gs
push
int3
test
scas
imul
sub
add
pop
dec
movsl
jbe
xchg
pop
icebp
inc
aaa
sbb
add
test
fisubrl
cwtl
ljmp
and
inc
inc
movsl
int
repz
xlat
mov
xor
shrb
add
adc
imulb
sbb
adc
rcrb
cmp
xor
sbb
ljmp
ljmp
lods
xor
loope
test
cli
and
xchg
sub
hlt
cmc
xchg
js
adc
mov
mov
xor
mov
sbb
mov
cld
push
aam
dec
in
dec
push
sahf
mov
lds
jmp
sub
pop
int
jmp
es
pop
in
outsb
mov
add
push
lea
xor
sbb
jle
push
jecxz
or
outsb
mov
add
icebp
mov
lea
fsubrs
sti
add
cwtl
pusha
xor
mov
jns
test
popa
dec
aam
dec
ds
push
and
out
jnp
dec
movsl
std
dec
repnz
daa
mov
push
mov
lret
xor
fisubrl
jb
or
mov
jbe
cld
rcrb
imul
mov
or
sbb
das
icebp
and
cli
cltd
lock
mov
jb
fisubl
loopne
sub
lea
jno
xor
cmp
jl
lock
pop
push
cmp
mov
sbb
pop
test
js
inc
and
popa
inc
test
dec
pop
data16
adc
iret
inc
adc
addb
daa
mov
mov
mov
xor
add
shrb
sahf
jno
add
push
pop
or
jmp
inc
insb
fwait
sti
mov
fcompl
jecxz
inc
jne
jb
jg
pop
jne
mov
jl
hlt
fstpt
es
out
add
xchg
jo
test
loop
loopne
xchg
pop
push
imul
add
cltd
cmp
dec
jae
xor
lds
add
dec
test
sub
push
cmp
movsb
lcall
jnp
pop
mov
mov
pushf
stos
test
or
sbb
xor
stos
ds
push
push
xor
mov
mov
lea
jmp
pop
lock
push
out
jp
stos
repz
jo
shrb
pop
aam
pop
out
mov
out
cmpsl
out
jmp
dec
into
outsb
cmp
xor
mov
mov
jno
or
std
mov
mov
icebp
xor
mov
sbbb
sbbl
popf
fbstp
pusha
loopne
xchg
or
cmp
jge
bound
xchg
inc
sub
mov
aas
cmpsl
and
push
cmp
inc
ret
shrb
mov
xchg
lea
cmp
jg
das
outsl
pushf
sarb
push
inc
lods
push
rcrl
test
jmp
add
pop
push
mov
xchg
xor
sbb
and
sbb
cwtl
loop
jns
sub
push
cmp
jecxz
sbb
rcrb
inc
loope
mov
jge
int
int
xchg
into
or
hlt
clc
stos
jle
subb
jl
sbb
mov
and
shr
into
xor
dec
sbb
dec
push
xchg
or
jmp
fadds
adc
add
stos
insl
int
mov
add
mov
sub
fistps
mov
sub
sub
pop
fisttps
or
fldt
push
mov
add
push
aam
dec
pop
mov
lahf
and
ss
jno
mov
jmp
jnp
fisubrs
mov
cli
xchg
stos
adc
mov
xchg
jbe
jns
pop
int3
and
ffree
mov
enter
sub
lods
and
clc
divl
popa
pop
mov
leave
mov
adc
movsb
or
movsl
xchg
xchg
out
jb
xor
out
push
fcoml
jne
mov
jmp
cmp
fs
inc
movsl
ret
je
sbb
push
dec
lret
lret
push
in
jp
push
sub
xchg
push
cmp
xor
idivl
add
jl
adc
loop
sbbl
loopne
jecxz
lods
fsubs
shll
mov
popf
stos
outsl
sar
xor
mov
addb
sub
dec
outsb
scas
xchg
lret
jp
sub
cmp
addr16
push
or
mov
ret
sti
loope
cltd
movsl
cmp
sarb
dec
mov
dec
lock
jecxz
fdivrl
sbb
shlb
aad
mov
popa
mov
cmp
mov
xor
inc
xchg
pop
jg
out
mov
stc
cltd
insl
scas
fnsave
or
jle
outsb
cmp
cmp
fdivl
ret
and
push
sub
push
pop
outsb
cltd
push
sbb
lds
popf
and
jp
sub
mov
jle
fistps
icebp
sahf
jp
jg
rorb
out
loop
fstps
adc
in
mov
and
bound
sub
or
or
arpl
or
mov
push
mov
mov
fnstsw
inc
call
sbb
fmull
pop
test
ds
insl
mov
in
push
xchg
pop
mov
sbb
repnz
jge
add
popf
xchg
ror
aas
xchg
or
inc
lock
insb
and
jge
cltd
shll
sbb
daa
sahf
dec
push
jmp
roll
pop
dec
mov
dec
cmpsl
cmp
xchg
enter
ds
in
mov
xchg
xchg
cmp
dec
adc
popa
xor
push
or
sbb
xchg
std
sub
jb
in
jmp
nop
inc
mov
imul
mov
cmc
adc
inc
test
je
out
adc
add
xlat
push
sub
or
sahf
dec
out
push
push
sbb
mov
xchg
add
fwait
loope
adc
cwtl
xor
lret
lock
jmp
mov
mov
mov
cmp
dec
clc
cli
pop
dec
sub
mov
push
mov
mov
cwtl
scas
add
mov
movzwl
out
xor
sbb
xor
and
add
les
push
mov
mov
ret
push
nop
fwait
in
out
xor
cltd
or
shlb
mov
add
pop
sbbl
inc
sbb
xor
jns
mov
in
ret
mov
lds
loopne
popa
cmpsb
mov
ret
movsb
inc
cmp
adc
pop
xchg
jge
push
xor
divl
repnz
push
xor
icebp
xchg
rol
and
push
push
mov
shll
mov
jae
cmpsb
into
popf
push
inc
je
jle
lods
pop
sub
ficoms
mov
or
inc
sbb
xchg
je
xchg
fimuls
dec
std
icebp
pop
inc
test
lret
cmpsl
sub
jp
icebp
xchg
pop
lods
repnz
sar
fcomps
xor
loop
jne
mov
or
andl
adc
or
adc
cmpsl
jae
mov
cmp
dec
loopne
pop
jbe
cld
loope
mov
cmc
dec
cmp
mov
adc
rcrl
out
fs
int
idivb
mov
adc
xchg
or
xchg
lret
mov
push
push
aas
push
and
inc
pop
push
aas
mov
into
mov
out
mov
sbb
sahf
and
mov
int
bound
das
or
sub
mov
xchg
inc
outsl
push
mov
pop
adc
adc
or
mov
add
xor
scas
icebp
popa
and
mov
ror
int
in
pushf
mov
xlat
adc
out
arpl
aam
dec
cmp
mov
lcall
sub
push
inc
jnp
rolb
pop
mov
lods
lods
jge
mov
ret
push
mov
cwtl
kmovw
lods
cld
lcall
xchg
jge
in
push
aaa
jo
outsb
punpcklbw
outsb
pop
xchg
js
les
jb
push
dec
lods
push
or
adc
dec
or
movsb
stos
mov
xchg
sbb
mov
fistl
push
add
clc
jmp
and
fdivs
out
mov
ljmp
inc
xor
inc
dec
loop
dec
or
stos
cmp
adc
xchg
aad
xchg
shll
sub
subb
add
xchg
adc
adcb
pop
mov
jp
cld
enter
mov
pop
mov
and
fstps
scas
xlat
iret
pop
popa
call
idivb
lret
cmp
sbb
int3
xor
inc
xchg
out
jmp
push
jle
xlat
jle
mov
divl
pop
xor
sub
and
sbbl
xchg
repz
cltd
xor
cwtl
ss
jb
outsl
pop
inc
mov
xorl
fwait
xchg
sbb
lcall
pop
xchg
jge
addr16
in
out
ds
test
dec
jns
insl
fsubr
mov
outsl
inc
outsl
xor
inc
cmp
out
pop
add
mov
sbb
fucomi
add
mov
insb
and
stos
xchg
inc
sbb
jg
jl
stos
push
call
jle
outsl
or
rcl
or
mov
icebp
push
das
fcmovbe
jnp
xor
int3
insl
mov
and
xchg
lret
jmp
inc
xlat
push
mov
jecxz
push
mov
dec
dec
inc
mov
inc
inc
mov
ret
loopne
or
ret
scas
mov
icebp
adc
fidivrs
inc
movsl
jbe
mov
mov
sbb
outsb
dec
or
bound
push
mov
in
lock
sti
push
mov
ret
jb
jo
or
or
aam
imul
sub
enter
mov
out
jno
add
pushf
jp
add
je
or
xchg
imul
stos
xchg
jb
jo
ljmp
adc
dec
sub
mov
enter
das
fiaddl
dec
and
notl
jo
scas
mov
inc
movsb
iret
or
mov
icebp
repz
sbb
imul
stos
addb
shlb
dec
rorb
jne
iret
sub
jle
cmp
js
xor
xor
cltd
add
mov
inc
pop
cmp
aaa
mov
mov
stos
pop
sbb
mov
mov
lods
iret
adc
int
stos
cmp
hlt
arpl
cwtl
xchg
and
lods
mov
sub
adc
dec
xor
adc
xchg
rolb
jne
or
imul
stos
push
nop
xchg
dec
mov
jl
sbb
cli
shr
jl
cmp
or
lock
pop
test
scas
stos
mov
inc
or
fs
push
scas
fistpl
xchg
mov
and
adc
xchg
cmp
mov
mov
xor
in
lret
dec
pop
stos
cmp
adc
xchg
jge
sbb
cmp
adc
std
out
sbb
pop
dec
xor
into
and
sub
xor
xor
jno
jg
cli
mov
and
or
pop
arpl
mov
fistl
pop
mov
dec
sbb
rorb
aas
stos
imul
iret
mov
ss
pop
pop
pusha
cmp
andb
fs
push
ja
sbb
mov
adc
sbb
xchg
sarb
xor
sbb
mov
aad
or
mov
sub
stos
insl
xlat
or
push
xor
stc
jp
stc
out
sti
push
dec
gs
out
add
popa
sti
or
out
xor
pusha
push
jge
xor
cmp
cmp
jb
int3
loop
and
cmp
ret
pop
inc
push
sub
or
adcl
dec
iret
push
or
pop
sbb
mov
leave
data16
mov
dec
mov
xchg
push
sub
sbb
dec
push
je
mov
fsub
jb
mov
mov
or
out
add
jae
addr16
insl
insl
addr16
pop
pop
test
insb
mov
push
push
iret
into
cmp
xlat
mov
mov
pop
fmul
repnz
rclb
ss
xor
xor
cmp
adc
mov
inc
ror
ret
call
inc
sti
sbb
in
add
fnstsw
mov
into
adc
jo
aam
pushf
ljmp
lods
sbb
in
jae
mov
out
fwait
pop
bound
cmp
arpl
jae
mov
sarl
aam
add
fiadds
es
jp
fmulp
mov
arpl
pop
xchg
negb
aad
sub
mov
jg
insl
pop
sub
xchg
sbb
pop
cmpsl
lods
xchg
in
mov
adc
mov
push
jp
ja
cwtl
repz
scas
lret
mov
mov
mov
mov
xchg
nop
jns
pop
fildll
push
jbe
push
jae
dec
and
push
lret
mov
loope
lret
inc
repnz
cmc
negl
aam
cmpps
nop
add
stos
adc
inc
ds
dec
mov
enter
stos
mov
xchg
stos
mulb
out
add
nop
xor
repnz
data16
mov
and
or
and
clc
mov
xchg
loop
rolb
movsb
test
mov
lds
shl
adc
push
out
add
insl
bound
add
scas
mov
xor
cmp
dec
cs
xchg
xor
mov
dec
int3
mov
sub
lret
pusha
sbb
dec
jmp
xchg
mov
sbb
cmp
sahf
cmp
mov
inc
xchg
ficomps
mov
lret
sub
mov
int
or
out
popf
push
divb
or
pusha
test
insl
jae
ljmp
pop
js
notl
addb
aaa
cmpsl
push
fsts
mov
jae
pop
rcrl
int
pop
xchg
mov
mov
pop
jo
imull
enter
fdivrs
add
inc
js
inc
sbb
adcb
push
mov
aaa
cltd
push
xchg
push
mov
out
stc
lea
int
clc
pop
int
outsl
xchg
mov
ljmp
jmp
adc
push
cmp
pop
insb
call
cwtl
in
mulb
xchg
mov
in
sbbl
mov
cmp
push
mov
jo
mov
dec
push
mov
or
je
jge
repnz
and
fdivs
inc
xchg
cs
inc
inc
repz
cmpsb
or
out
dec
pushf
push
jmp
sbbb
adc
out
jb,pt
mov
or
pop
jbe
and
mov
jne
cmc
mov
inc
daa
out
rorl
and
stos
push
test
push
int3
shlb
clc
stos
mov
out
pop
dec
mov
adc
mov
dec
inc
dec
jge
mov
mov
repnz
cli
fidivs
fcmovu
jmp
and
bound
push
ds
sub
sub
pushf
lahf
add
sbb
cli
or
test
pop
mov
icebp
add
push
outsb
nop
stos
jge
notl
jo
ds
gs
push
mov
sbb
icebp
mov
das
cmp
cmp
mov
int
movsb
inc
push
adc
or
add
jg
dec
mov
mov
or
cs
adc
popf
test
enter
mov
cmpsl
jne
push
cmc
jno
sbb
aam
or
cmp
insb
popf
loope
call
push
jns
mov
adc
insb
loop
jle
xchg
dec
incb
pushl
dec
adc
sbbb
fucomp
xlat
popl
into
mov
add
enter
and
lods
pop
idivl
call
repz
mov
sub
sub
lock
mov
jno
out
xchg
fwait
subl
icebp
mov
dec
orl
lock
and
cli
mov
sbb
mov
in
mov
pusha
add
cltd
jmp
xchg
int3
pop
pop
mov
aas
xchg
mov
loope
pusha
dec
ljmp
imul
push
scas
aam
das
jb
pusha
jg
xchg
dec
fidivl
sub
jmp
xor
enter
xchg
fildll
jl
adc
enter
lcall
mov
pop
stos
leave
cs
in
rcrl
stos
mov
push
pop
lods
mov
mov
outsl
shll
fbld
and
test
fs
adcl
shr
rolb
inc
add
inc
pop
inc
mov
add
push
lds
sub
mov
jae
cmpb
xchg
jecxz
das
shlb
fisubrl
jmp
add
es
movsl
push
push
mov
jo
mov
jnp
fidivs
insb
jb
mov
cmp
jmp
sub
sbb
add
push
add
or
jmp
sbb
adc
lahf
fnstsw
addr16
pop
jbe
jbe
or
mov
scas
loope
jo
cmpsb
push
mov
fstl
lods
jecxz
xchg
pop
and
or
repnz
lahf
xchg
dec
sbb
cli
or
dec
xchg
or
jb
daa
inc
xchg
popf
and
xchg
out
jns
mov
aaa
push
pop
stos
mov
enter
push
inc
lods
shrl
fldl
add
int
aam
jae
popa
inc
into
sbb
adc
inc
xor
popf
leave
jl
push
mov
inc
xchg
clc
loop
jne
mov
shlb
mov
mov
sub
mov
cli
jo
lods
sub
roll
dec
dec
push
test
clc
adc
loop
out
pushf
or
add
mov
andl
mov
sub
call
imul
cmpsb
insl
cmp
call
push
mov
mov
les
sub
out
lret
cmpl
cmp
add
mov
or
dec
daa
inc
sub
inc
test
scas
ljmp
cmp
add
xchg
fwait
rcrl
enter
dec
sbbb
lret
push
push
data16
add
push
dec
pop
cli
fidivs
icebp
xchg
stos
lcall
mov
or
imul
xchg
push
push
xchg
scas
lret
xchg
jns
sbb
aas
jb
xchg
pop
lods
cmp
mov
subl
add
adc
movsl
lods
pusha
mov
into
cwtl
mov
stos
inc
fdivrl
data16
mov
aad
mov
xor
sbb
sbb
mov
out
fisttps
stos
pop
cmc
fimuls
adc
jae
jp
mov
pop
xor
rcrb
mov
movsl
mov
out
cmp
cmc
mov
dec
addb
rorb
sub
add
cmp
ret
and
or
lock
push
gs
sahf
daa
add
mov
stos
mov
inc
aam
sbb
mov
push
jg
sbb
sbb
push
jge
inc
push
add
fidivrl
in
dec
mov
xor
mov
cs
cmp
inc
pushl
push
inc
push
push
int
gs
cwtl
cwtl
aad
testb
push
mov
les
mov
dec
push
jg
xor
pushf
pop
jbe
cmpsb
movsb
xor
das
or
loop
mov
sub
stos
mov
push
sub
cmp
add
orl
loopne
in
cmp
or
xlat
and
mov
iret
pop
repz
adc
sub
shrl
imul
push
mov
ja
repz
aam
mov
mov
sahf
xor
enter
xor
mov
repz
push
dec
aaa
xchg
ljmp
cmp
push
add
cmpsl
icebp
ja
ja
inc
pop
adc
adcl
push
sbb
test
cmp
add
push
cmpsb
cmc
outsl
fistpll
in
or
inc
add
loop
adc
shrb
jl
inc
sbb
cmp
xchg
out
push
hlt
and
test
addr16
dec
sub
dec
add
pop
add
inc
shll
lret
adc
sub
js
jbe
lds
clc
imul
cs
jae
sarl
call
jbe
std
movl
test
jae
orb
or
inc
push
jne
test
js
sbb
push
lods
sahf
add
hlt
das
cmp
mov
ljmp
mov
dec
ss
fsubrp
aaa
pusha
and
inc
adc
lock
xchg
jecxz
dec
cmp
clc
xor
orb
xor
mulb
xchg
pop
shll
mov
lahf
in
loop
sbb
add
jmp
in
jo
stc
int3
test
xchg
mov
add
inc
icebp
iret
lret
repnz
dec
dec
xor
insb
test
add
or
out
jg
push
fucom
cmp
stos
bound
lds
shl
stos
mov
pushf
xor
iret
ret
sbb
lret
xchg
ds
aam
xchg
bound
lods
sub
add
fsubrl
and
adc
subb
fnstenv
add
lcall
sbb
ds
inc
add
test
aas
lds
ss
test
rorl
aaa
inc
jg
loop
cmp
jbe
mov
clc
mov
int
fistps
scas
lods
outsl
sbb
and
sbb
dec
lcall
cs
sahf
cmp
out
int3
jo
mov
dec
jmp
test
adc
adc
adc
std
and
mov
and
mov
inc
push
fst
and
ds
loop
loop
loop
mov
js
mov
adc
jo
jle
addr16
pop
popa
jecxz
out
roll
lods
jnp
dec
mov
scas
sti
adcl
insb
pop
push
and
push
int
or
insl
das
test
mov
mov
aas
inc
dec
mov
int
ret
pop
push
test
dec
adc
push
xor
std
dec
fadds
test
test
xchg
cmp
jge
orl
les
mov
into
sub
addr16
fs
fmuls
test
inc
mov
sbb
ret
loop
mov
int
add
incb
movsl
add
pusha
sub
push
and
test
out
insl
cs
jg
adc
sbb
imul
sbb
jns
xchg
dec
mov
inc
test
add
mov
inc
movsb
mov
jno
jp
outsb
subl
dec
push
jbe
lret
arpl
jg
jno
rcrl
dec
loope
jg
jbe
inc
fstps
sub
mov
jl
in
jbe
or
inc
add
mov
and
pop
xchg
cmp
stos
test
setge
js
fwait
cmpsb
xor
sbbl
sbb
dec
dec
rol
sarb
sbb
push
cwtl
pop
popf
mov
aaa
adc
sbb
mov
and
xchg
pop
inc
or
or
inc
insl
in
mov
lock
mov
gs
xchg
sub
pop
mov
mov
sub
xchg
out
pop
rclb
insl
pusha
inc
inc
decb
add
pop
inc
clc
mov
xchg
arpl
jg
xor
xor
inc
cmc
ss
bnd
xchg
iret
push
and
arpl
addl
pop
popf
jae
shll
xchg
fstpl
scas
ljmp
ret
pop
mul
jnp
jmp
popf
ss
xchg
push
ficomps
jg
dec
cmpsl
push
dec
cmpsb
in
push
mov
dec
xchg
pop
in
jae
inc
rcr
pop
sbb
dec
cmp
xor
cltd
dec
or
mov
inc
push
aas
test
movsb
test
lahf
jnp
psllw
jmp
inc
inc
add
orb
ss
xchg
je
bound
or
lods
fcomp
sub
add
sbb
push
jne
mov
mov
pop
idiv
jl
mov
xchg
aas
push
and
mov
sub
push
sub
lock
jmp
xchg
inc
jns
out
scas
xchg
mov
cmp
out
or
dec
test
adc
jae
add
or
incb
lods
adc
sub
cltd
mov
lods
out
pop
ficompl
mov
std
addb
int
add
push
or
decl
pusha
mov
lret
adc
bound
outsl
movsb
add
movsl
mov
shl
rclb
pop
ret
test
push
aam
pop
test
jmp
sub
jno
jle
mov
adc
mov
int
xor
jne
ja
jbe
inc
push
sarl
stos
jle
sbb
cmpsb
in
imul
inc
notl
add
test
jb
cmp
pop
xchg
stc
sub
mull
lods
and
fwait
sub
cli
mov
jne
adc
jecxz
roll
add
dec
movsb
outsb
dec
into
add
push
mov
dec
sub
pop
sbb
jnp
adc
pop
pushf
jmp
sbb
gs
mov
shll
cmp
ds
iret
enter
and
das
push
cwtl
lea
jb
ss
xorb
std
push
add
push
das
mov
rcrl
sub
adc
xor
repnz
iret
mov
js
in
or
xor
add
jbe
clc
dec
push
xchg
dec
push
lcall
mov
or
cmpsl
xor
dec
lock
adc
mov
out
mov
jno
hlt
sbb
mov
sbb
imul
mov
adc
lock
rorb
mov
adc
xchg
xchg
cmc
subb
sbb
and
xchg
cld
xchg
cmp
stos
je
push
inc
std
hlt
cmp
fmuls
or
sub
inc
sti
pop
outsb
out
mov
test
mov
aaa
faddl
push
daa
pusha
sbb
fwait
dec
push
scas
lret
pop
mov
pusha
pop
push
call
mov
ffree
cmp
mov
cld
insl
in
scas
test
or
xchg
fwait
loop
sub
cld
in
out
xor
cmp
push
adc
cmp
inc
inc
call
mov
hlt
stos
shll
mov
jecxz
sub
jp
mov
pop
ret
popa
jecxz
mov
out
mov
leave
test
pop
and
dec
in
adc
and
inc
cltd
repnz
bound
pop
push
es
cmpsl
aad
in
dec
fwait
hlt
mov
enter
dec
or
loopne
das
ud0
aaa
out
cmp
dec
in
and
inc
mov
xor
es
shrb
add
std
push
js
cmpsl
cmp
into
mov
dec
mov
cmpsb
pop
jp
mov
and
fldl
ljmp
int
fs
pop
jecxz
daa
jmp
das
push
dec
xchg
es
inc
stc
mov
ss
sbbl
mov
rclb
scas
leave
add
mov
sar
pop
lods
hlt
pop
push
aaa
test
or
cld
adcl
icebp
aas
nopl
push
test
cmp
push
jne
and
lds
outsb
das
mov
clc
push
pop
bound
loopne
jp
ss
push
enter
or
fcmove
imul
nop
fcmovbe
pop
frstor
cli
cmp
sub
ljmp
out
pop
test
or
jge
sahf
adc
sti
enter
imul
mov
xchg
or
xlat
jecxz
icebp
arpl
hlt
cmp
mov
adc
loop
xor
ljmp
daa
inc
inc
sbb
dec
jmp
daa
mov
mov
test
xor
cmpsb
mov
fbld
fistl
mov
sbb
int3
cmpsb
mov
sub
sub
xor
xor
out
pushf
mov
sbb
repnz
dec
jmp
lods
inc
and
push
fiadds
push
dec
fstpl
jecxz
in
fwait
inc
mov
xor
xchg
push
adc
scas
cmpsl
push
mov
push
bound
stos
inc
inc
clc
cmp
inc
mov
cmp
test
xor
or
xchg
or
sarb
cli
add
pop
dec
mov
stos
xchg
dec
xchg
hlt
dec
rcll
cmp
push
push
or
adc
shr
in
or
push
mov
js
dec
lds
movd
or
push
test
lret
into
sub
push
int3
in
mov
xchg
addr16
out
pop
and
mov
or
leave
sbb
js
in
imulb
lea
outsl
int
daa
xchg
cmp
loop
pop
mov
out
xor
bound
mov
dec
int3
rol
ljmp
cld
stos
inc
in
jno
adc
das
or
and
cmp
adc
dec
popf
xchg
inc
repz
xchg
icebp
push
xchg
jns
cmc
pop
sbb
lds
jb
xlat
shll
imul
aam
stos
push
cmp
mov
in
lock
dec
pop
data16
clc
andl
rcr
adc
mov
mov
cmpsl
inc
pushf
or
adc
push
aaa
and
ret
jg
push
enter
lods
lret
ljmp
in
dec
mov
add
xor
cli
ljmp
xchg
ljmp
add
push
and
pop
sbb
sbb
fstpl
add
jp
pop
orb
cmp
cmp
sbbl
mov
and
xlat
loop
and
shrl
filds
cwtl
cmp
icebp
sarl
cmp
push
pop
jae
aaa
adc
adc
cmp
pop
push
adc
out
dec
insl
add
ret
xchg
push
imul
push
and
jl
int
popa
cli
lahf
pop
stos
ljmp
outsl
push
ret
xchg
dec
scas
movsl
push
addr16
test
ret
push
jb
fnstcw
jnp
inc
mov
push
mov
mov
mov
or
in
adc
aam
andl
lret
and
mov
stos
pop
push
mov
mov
ja
js
cmc
sti
mov
scas
pop
xlat
outsb
dec
mov
stos
inc
sbb
ljmp
xchg
sbbl
adc
adc
out
mov
dec
out
les
xor
sub
cmpsb
mov
popl
bound
adc
pop
outsb
nop
adc
mov
push
daa
and
call
lds
jle
mov
shlb
ret
addr16
gs
sub
aam
lret
into
mov
jmp
gs
je
fbld
mov
push
ljmp
call
movsl
neg
mov
or
cli
mov
xchg
or
lahf
arpl
cmp
and
fisubs
loopne
test
lock
adc
pop
adc
lcall
dec
jno
or
cmpb
in
or
jbe
mov
ds
mov
mov
dec
sub
shlb
push
cli
fidivrs
stc
push
jb
in
push
xor
adc
xor
inc
push
leave
lds
loop
pop
cmc
adc
popf
xor
xor
push
subb
xor
ret
or
adc
lret
in
xchg
stc
xchg
sti
mov
xchg
lea
lcall
mov
mov
outsb
fdiv
insl
xor
bnd
scas
fiadds
jbe
push
ja
jecxz
ret
sbb
ss
aaa
mov
sub
push
pusha
dec
or
lds
pop
and
cmovbe
jno
jle
int
ja
pop
scas
in
cmp
ja
adc
or
sbb
sub
mov
cs
and
sub
dec
shlb
xchg
mov
nop
jmp
or
cmp
sub
cltd
mov
fldenv
sub
unpckhps
mov
mov
fnstsw
dec
inc
dec
push
les
xor
fwait
mov
cltd
sbb
push
fwait
test
adc
mov
pop
sub
stos
das
arpl
sbb
mov
xchg
jnp
movsl
sbb
inc
pop
loope
out
repnz
jg
pop
int
add
sbb
stos
sub
add
inc
icebp
mov
or
lret
sub
int
inc
dec
test
test
in
push
outsb
lods
dec
inc
les
dec
cmpsl
jmp
inc
shrb
movsb
xchg
mov
adc
subl
mov
test
mov
xchg
or
in
dec
jecxz
lock
push
or
xchg
repnz
imul
ja
mov
push
divl
sbb
roll
into
lock
loope
jno
in
xor
leave
and
and
out
lds
leave
mov
inc
ret
fwait
ljmp
lock
mov
jle
aaa
lahf
xchg
sti
stos
sbb
sub
inc
sbb
dec
ret
scas
das
nop
pushf
pop
aas
or
push
mov
addr16
movsb
ret
cmp
jno
or
ljmp
mov
sbb
aas
movsb
out
js
jge
adc
das
mov
data16
inc
pushf
add
leave
adc
cs
imul
or
sarb
xchg
clc
aad
imul
push
jle
daa
xchg
cmp
into
repnz
adc
mov
stos
jl
cmp
cs
mov
stc
jmp
push
jle
jge
inc
cld
into
int
cs
nop
out
xor
fildll
sbb
sbb
and
ljmp
ret
test
pop
bound
mov
xor
push
mov
fisubs
lods
ss
sbb
ds
mov
xor
cwtl
icebp
mov
pop
pop
cld
cmp
ret
xchg
xor
add
bt
sub
lea
scas
mov
xchg
fildl
push
ret
mov
and
pop
xchg
and
lea
jnp
or
aad
cli
add
in
cmp
mov
mov
push
push
jbe
je
hlt
in
push
inc
inc
mov
inc
lcall
mov
imul
ret
xchg
push
dec
nop
pop
mov
repnz
and
add
mov
push
jbe
inc
cli
pop
dec
sbb
insl
push
xchg
add
loop
cmpl
inc
in
xchg
test
in
adc
jbe
popa
fists
enter
push
addr16
mov
xorb
enter
jmp
js
jle
fwait
push
aad
sub
push
mov
inc
mov
pop
adc
mov
jmp
stos
dec
movsb
xlat
aas
movsl
xor
fwait
and
loope
jmp
imul
scas
mov
mov
dec
and
xor
xor
sub
in
sub
mov
dec
rcrl
push
and
sbb
cmpsl
adc
divl
inc
inc
dec
in
call
outsl
outsb
and
pop
pusha
or
fimuls
pop
pop
repnz
inc
adc
dec
icebp
insl
jns
sub
lret
or
into
test
sub
das
jl
adc
outsl
ret
aam
xor
pop
outsl
add
push
in
mov
sbb
mov
sbb
mov
pop
sbb
test
sub
out
subl
mov
cmpb
sub
ret
xchg
mov
xlat
pop
sub
aam
adc
mov
in
repnz
add
dec
dec
pop
mov
inc
mov
push
outsb
negl
out
pop
sub
lahf
push
call
mov
inc
in
dec
outsl
pop
fdivs
int3
je
mov
sahf
and
jg
loopne
test
mov
stos
bound
test
push
rcll
ror
ffree
inc
lods
pop
and
call
mov
push
cmp
mov
fidivrl
dec
mov
stc
sub
fldl
cs
xchg
enter
sub
cmp
and
inc
mov
stos
cmpsb
fwait
add
and
mov
mov
adc
call
mov
or
es
rcll
mov
fwait
xlat
jo
pusha
js
xchg
stc
imul
xchg
pop
fisubrs
loope
dec
insl
pop
data16
mov
dec
and
cmp
data16
test
dec
dec
xchg
xchg
sysenter
mov
sahf
or
mov
cltd
insl
dec
add
add
aas
xchg
cltd
lret
lds
sti
xchg
sub
mov
fwait
adc
mov
lcall
jl
cmpl
fimuls
push
add
pusha
sbb
jbe
dec
sub
push
mov
repz
add
jns
mov
rolb
jp
daa
ret
lret
mov
and
out
imulb
dec
sub
stc
cli
mov
xor
les
sbb
imull
mov
arpl
imul
pop
popf
data16
gs
sbbl
inc
jl
insb
cmpl
aad
jno
and
and
lahf
loop
decb
push
lret
pop
sub
cmp
jno
repz
xor
push
stos
in
jno
inc
inc
dec
ret
jecxz
notb
mov
mov
mov
ret
stc
stc
mov
inc
xchg
out
lods
mov
pop
push
sub
mov
gs
cmc
fisubl
xchg
and
stc
sbb
pop
cmp
xor
mov
pop
cs
bswap
mov
dec
dec
je
pusha
popa
dec
arpl
sub
pusha
les
pop
in
mov
xor
jo
sub
dec
iret
ljmp
and
je
jmp
mov
movsl
into
loopne
fidivrl
cmp
or
sbb
aam
ss
out
leave
push
mov
adc
jecxz
mov
fists
sub
dec
xchg
sarl
adcl
sbb
push
xchg
and
or
pop
and
loope
inc
mov
negb
dec
pop
insl
scas
push
xchg
xor
mov
add
or
incl
or
sub
pop
test
mov
mov
or
adc
stos
mov
dec
xchg
loop
popf
cmpsl
and
loopne
shl
in
ss
push
mov
or
mov
clc
jae
outsl
and
xchg
mov
xchg
add
cli
dec
decb
inc
xor
stc
inc
jl
mov
xorl
loop
idivl
mov
cld
test
inc
std
lret
jg
int
fcmovnbe
adc
xchg
sti
dec
push
ss
enter
dec
lret
mov
adc
xor
sub
hlt
out
sbb
shll
ljmp
popf
push
int3
pop
leave
push
xor
mov
pop
insl
xchg
mov
inc
scas
sarl
cli
call
ljmp
and
ret
jno
pop
lcall
sub
adc
aaa
and
popa
dec
add
pop
shrb
pop
std
testl
stos
sub
inc
inc
enter
cld
inc
push
cli
orb
xlat
sub
dec
sub
xchg
les
sub
adc
cmp
hlt
imul
mov
mov
aas
cmp
or
movsb
inc
insb
sbb
cmp
push
popf
les
add
popa
mov
push
sarl
jmp
aad
stos
xor
sub
rcrl
pop
mov
in
mov
push
cmpsl
push
adc
inc
cmp
insl
loope
nop
mov
dec
cmp
fisubrs
push
scas
pop
mov
in
sahf
mov
popa
cmp
das
sub
inc
add
mov
sbb
daa
shl
bound
stos
outsb
mov
pusha
pop
pop
add
xchg
adc
into
js
mov
sub
in
jno
fsubrs
jae
jecxz
mov
paddsb
mov
dec
push
lret
pop
ds
mov
push
sub
movsl
sub
jo
pop
xor
dec
jno
sub
int3
inc
inc
jge
dec
jg
xchg
jne
jb
loope
xchg
outsl
cltd
inc
inc
or
stos
mov
test
or
add
jne
push
das
xchg
jbe
inc
dec
lcall
sbb
mov
jb
lock
lcall
out
fnstsw
xor
sti
pop
and
adc
xchg
sar
xchg
push
out
mov
leave
cmp
adc
or
movsl
repz
mov
push
push
xchg
dec
repz
sbb
push
fwait
imul
jno
push
lret
shll
ds
sbb
push
dec
or
lahf
add
jns
mov
or
outsb
push
cld
cld
int3
aad
test
push
pop
int
insl
out
or
pop
pop
cmp
add
aam
cld
fisttpl
aad
sub
push
dec
mov
es
sbb
xchg
shlb
aam
insl
cmp
es
xchg
out
mov
mov
sahf
out
sarl
fwait
test
cmp
or
scas
lea
mov
int3
dec
sbbl
push
icebp
mov
mov
sub
ret
divl
loop
mov
xchg
enter
fisubrs
dec
jge
and
pop
mov
sti
dec
cmp
dec
xlat
fstps
mov
daa
pop
mov
lcall
sbb
sbb
mov
sti
jge
fcmovu
sub
pop
in
jl
sbb
addr16
cmp
sbb
pushf
and
or
mov
repnz
lock
iret
mov
fsubl
inc
shlb
and
scas
push
das
shl
icebp
addr16
or
cmp
cld
outsl
push
pop
sub
cmp
pop
pop
mov
jb
or
ds
mov
dec
mov
jmp
push
mov
xchg
xchg
ss
les
movsb
sti
shr
scas
mov
jns
push
xchg
jge
lods
cmp
jbe
jne
cmp
fistps
cmp
pop
rolb
sbb
popf
dec
dec
mov
scas
unpcklps
and
enter
test
jle
ds
push
sbb
repnz
mov
push
movsb
call
sbb
dec
rorl
lds
aad
sub
data16
shll
stos
push
and
jg
push
cs
scas
mov
test
es
pop
out
inc
popf
pop
or
stos
cmp
movsb
jno
sbb
roll
push
lods
dec
pop
bnd
inc
jbe
shll
pop
push
dec
test
shll
stc
push
repnz
popf
mov
es
inc
push
adc
mov
mov
fbld
aam
jns
sub
inc
mov
test
cli
pushf
cmpsb
jmp
fnstcw
xor
aaa
xor
lock
outsb
lahf
popf
adc
add
dec
adc
mov
sarb
pushf
sub
jnp
push
loope
insl
jae
mov
fs
add
rcr
test
sbb
cltd
pushf
loop
fsubr
push
xor
cld
mov
jno
outsl
add
cs
test
cwtl
mov
ret
jne
pop
stos
imul
sub
adc
enter
add
or
xchg
mov
pop
movsl
mov
les
stos
pop
outsb
jp
aad
out
xor
sbb
add
rcll
sbb
sbb
xchg
push
dec
or
shr
sub
cli
sbb
jae
add
iret
mov
in
fiadds
test
or
enter
leave
xchg
jns
cld
mov
mov
std
int3
sarb
insb
adc
jge
test
mov
cmp
lret
inc
mov
pop
and
int3
ficompl
jge
xchg
sub
rcrl
sbb
mov
sbb
cmpb
or
or
add
cmp
jo
je
insl
xchg
mov
jo
outsb
push
imul
in
test
push
bound
outsb
mov
shr
shlb
dec
mov
mov
icebp
inc
dec
dec
inc
adc
movsb
push
dec
sarl
inc
cmp
daa
dec
mov
mov
mov
pop
mov
adc
mov
cmp
sbb
pop
cltd
add
adc
sbb
adc
xchg
mov
iret
add
add
dec
xchg
add
xchg
lock
insb
jle
gs
ss
in
jecxz
sub
inc
jmp
fsub
mov
or
addr16
mov
aad
mov
lahf
scas
test
in
dec
fwait
scas
pushf
adc
outsl
sub
rcll
and
jmp
das
add
call
or
dec
sbb
xor
pop
xchg
or
scas
xchg
add
in
add
stos
cmpsb
add
imul
mov
adc
repz
and
fimull
in
mov
mov
mov
push
cmp
jle
rolb
lods
jb
stc
push
dec
stos
sti
add
rcrb
and
inc
jae
pop
mov
inc
test
add
adc
jae
pop
xchg
mov
bound
dec
aas
in
add
cmp
xlat
icebp
mov
pop
push
adc
jge,pt
cmc
push
gs
out
movsl
ds
xlat
cld
jp
cwtl
fnstenv
out
cmp
push
in
or
testb
dec
in
mov
ret
subb
cmp
ficoml
iret
fnstcw
leave
les
inc
in
push
pop
xor
mov
mov
sbb
sbb
push
sbb
negl
push
jle
test
lea
adc
pop
int3
push
mov
pop
in
mov
test
pop
shl
or
insl
xchg
jp
fiadds
jo
lret
mov
sub
loopne
mov
inc
mov
mov
mov
test
xchg
jno
xor
and
stos
mov
imul
dec
mov
lcall
sbb
inc
push
cmpb
mov
or
pop
sbb
lods
and
mov
mov
push
addr16
ss
fcoms
jno
mov
dec
sbb
pop
jecxz
mov
or
dec
inc
or
cmc
mov
es
lcall
xchg
mov
mov
repnz
sbb
sbb
inc
sbb
push
je
rclb
in
pop
pop
pop
into
inc
cmpsb
cmpb
scas
ret
lock
mov
testl
add
shlb
jle
hlt
mov
bound
fiadds
mov
sub
inc
push
fcmovbe
push
out
push
xchg
sub
aaa
ret
test
pop
js
loope
xlat
add
xchg
js
es
and
xchg
and
cmp
mov
adc
mov
std
push
sbb
inc
sahf
push
xchg
int
lea
daa
clc
adc
rorl
test
jb
ret
movsb
call
push
adc
lea
aad
jne
hlt
mov
and
mov
ror
lea
jg
loope
lret
xor
pop
jp
iret
mov
sti
shl
adc
movb
inc
out
fidivrs
mov
aam
push
nop
adc
push
inc
mov
adc
lret
or
mov
sbb
mov
adc
sbb
idivb
dec
cmpsb
jae
loop
xor
ret
sbb
jne
scas
jo
jmp
xchg
sbb
push
fadds
aad
loop
mov
dec
imul
sbb
mov
idivl
xor
pop
push
lods
sub
iret
outsb
in
xchg
add
mov
push
lret
enter
jb
xor
imul
adc
sbb
pop
lods
and
push
pop
fwait
jnp
xchg
arpl
inc
mov
push
mov
out
and
or
daa
mov
xlat
cmp
jle
pusha
pop
xchg
out
mov
ret
idiv
popf
aam
popf
pusha
add
jge
mov
cmp
xor
and
hlt
pop
xlat
out
mov
mov
das
call
data16
sti
push
mov
jmp
xchg
mov
repz
test
jg
daa
nop
cld
inc
in
fbld
mov
hlt
or
inc
jl
cwtl
andb
ja
data16
inc
xchg
add
jae
into
fistps
stc
push
mov
cld
into
xlat
inc
popf
jg
in
fwait
aad
pop
cmp
inc
sub
and
inc
inc
leave
mov
mov
pop
mov
rol
std
sahf
lahf
outsl
dec
dec
imul
cmp
jnp
sub
mov
cli
cvtps2pd
dec
popf
inc
adc
xchg
fistps
xchg
push
sub
mov
dec
scas
mov
jbe
ss
lea
fwait
or
lcall
or
cli
ficomps
mov
loop
testb
mov
jl
icebp
dec
rorb
idivl
aas
mov
inc
mov
aas
dec
jae
inc
mov
ja
popf
hlt
out
ds
stos
outsb
jecxz
fwait
fs
sub
movsl
jl
dec
xchg
sub
and
popf
mov
ss
mov
jnp
mov
out
popf
jecxz
ja
dec
popa
sahf
sub
int3
clc
push
lea
mov
insl
lods
shlb
jl
pop
fmulp
pop
ficomps
fldenv
add
jge
bound
push
subb
adc
mov
aas
je
xor
add
adc
les
subb
addr16
push
shll
hlt
inc
xchg
cmp
or
sbb
push
fistpll
mov
insl
cmpb
andl
pop
shrl
stc
push
xor
sahf
xor
ja
and
xchg
push
xor
pop
in
sub
push
cld
push
push
pop
addr16
out
push
and
pop
xor
leave
add
dec
xchg
test
adc
sbb
stos
push
xor
das
jl
movsb
cmp
fmul
mov
enter
sub
subl
adc
adc
mov
or
push
push
sbb
add
aad
sbb
push
mov
push
test
outsb
out
hlt
dec
test
push
in
sub
insb
outsl
das
iret
xchg
out
outsb
pop
or
insb
leave
icebp
push
leave
add
outsl
or
inc
add
inc
pop
add
mov
test
push
add
scas
jp
dec
loope
pop
pop
mov
les
sbb
shrl
mov
stos
insl
in
daa
fucom
lods
fstps
adc
add
sub
xchg
inc
insb
fildl
ret
mov
cmpb
mov
or
shl
in
dec
jg
test
inc
stos
cld
pusha
fisubl
mov
pop
int3
and
popa
mov
pop
inc
jl
jmp
call
lock
movsb
push
mov
ds
mov
fdivs
add
mov
mov
mov
jg
add
out
scas
aam
mov
pop
mov
lahf
pop
jb
jne
out
inc
push
inc
push
inc
add
add
sbb
pop
push
jecxz
sbb
jle,pt
idivb
stc
shlb
test
divl
in
add
out
pushf
mov
jmp
sahf
pop
xor
jno
pop
inc
xor
sarb
ret
pop
add
into
into
into
insl
imul
jo
adc
inc
fwait
scas
and
mov
sub
xor
mov
loop
sahf
jne
fwait
ljmp
pop
sti
scas
outsb
pop
aas
dec
int3
xorb
jne
repnz
cwtl
data16
pop
pop
mov
adc
call
adc
gs
xor
sarl
add
mov
scas
push
cmp
pop
or
mov
mov
mov
es
xor
outsb
movsl
add
icebp
adc
lock
or
pusha
shlb
push
xor
mov
int3
jp
xchg
mov
jnp
add
cmpsb
std
inc
test
orb
and
in
cld
cmpsb
pop
pop
verr
mov
insl
rolb
adc
sar
out
outsl
or
cwtl
int
fnstenv
inc
pusha
or
sbb
jge
dec
inc
scas
adc
ss
dec
test
jns
pop
xchg
stos
movsb
stc
in
cmp
push
pop
cmp
movb
mov
xchg
jae
cmpsb
sti
pop
fistps
dec
sbb
or
pavgb
mov
jb
rolb
incl
dec
sub
fs
push
movsb
std
and
xor
mov
mov
push
movsl
aaa
test
movb
mov
inc
aaa
add
imul
jo
ds
icebp
mov
bound
mov
aad
cld
test
lcall
mov
cwtl
mov
push
cmp
scas
push
xchg
xchg
push
xor
cmp
push
xor
je
xor
inc
adc
pop
add
sbb
mov
rorb
jmp
inc
aad
jnp
lahf
fimull
pop
int3
je
inc
test
loop
das
jge
pop
out
jbe
popa
dec
xchg
and
movsb
adc
scas
cmp
out
jge
pop
and
or
mov
lahf
jmp
add
xchg
pop
nop
addl
mov
test
repz
or
aam
dec
xlat
cmp
jae
je
stos
fldl
out
pop
leave
mov
pop
push
mov
jp
decl
inc
push
cmc
lret
cs
xchg
cmp
shrl
mov
int3
xchg
jo
dec
xchg
push
or
loopne
and
enter
sbb
mov
mov
push
xchg
std
adc
gs
stc
leave
lods
mov
lds
test
mov
stos
arpl
sub
shl
or
or
or
arpl
jecxz
in
cmpsl
add
jbe
ljmp
xchg
lret
sbb
pop
fwait
int3
jbe
mov
add
sub
js
adc
lea
push
loop
out
xchg
add
sahf
cld
mov
stos
xchg
cwtl
leave
add
imul
aam
dec
jg
mov
push
and
lods
ja
xchg
mov
cmp
push
jo
jb
ja
cmp
inc
js
into
repnz
sub
push
inc
test
nop
adc
fdivr
sub
push
dec
push
je
pop
andl
or
test
iret
pop
dec
sub
aad
and
jge
pop
mov
xchg
and
lahf
add
pop
icebp
inc
push
aaa
pop
push
imul
sbb
sbb
sbb
andl
cmpl
adc
lret
pop
xchg
mov
adc
daa
out
ret
loope
rcr
cmp
addr16
aad
addb
jno
pop
xchg
jp
outsw
sub
and
pop
push
insl
das
pop
mov
jne
dec
mov
push
clc
sti
mov
out
and
or
mov
or
ss
daa
nop
inc
lods
repnz
adc
mov
sbb
sarb
fimuls
loope
push
mov
fldenv
add
or
not
mov
and
sub
add
push
and
cs
das
mov
push
fincstp
fadd
fldl
mov
push
ret
sahf
movl
mov
stc
push
xor
out
mov
insb
mov
dec
mov
ds
ret
aaa
mov
push
jl
pop
adc
sub
lret
popa
sbb
ficomps
cmc
cmpsb
js
cmc
inc
cmp
jnp
adc
adc
adc
jl
inc
cmp
sbbb
icebp
mov
out
adc
or
out
mov
xchg
mov
inc
xchg
clc
ret
into
dec
fildll
mov
xor
mov
or
mov
bound
out
or
popa
and
xchg
push
xor
xor
aam
rolb
popl
mov
filds
test
das
cmp
aaa
pop
gs
arpl
test
mov
inc
cmc
mov
out
ss
push
dec
xchg
notb
outsl
dec
push
not
xchg
push
hlt
xchg
mov
mov
imull
aas
dec
ret
je
dec
jl
sahf
test
ror
aam
int3
cmp
push
ds
push
les
dec
xchg
cmp
pop
leave
push
push
xchg
xchg
cltd
call
aaa
cmpsb
les
je,pt
loope
push
lods
shrb
jl
in
dec
jae
dec
rcll
clc
push
inc
out
fldt
push
mov
sbbb
xor
inc
sbb
lahf
pop
ret
xchg
adc
jg
loope
cmp
dec
leave
fstp
or
mov
inc
bswap
jmp
add
or
mov
adc
sti
mov
dec
mov
mov
mov
and
sti
les
ret
mov
push
xchg
pop
loopne
mov
addl
mov
push
scas
xor
adc
cmp
lock
lock
inc
test
loope
ja
loopne
cld
pusha
fisubrl
xor
fdivrs
outsb
xchg
outsl
test
dec
shlb
sarl
mov
shrl
fcompl
inc
push
sbb
cmpsb
lret
lock
lret
xchg
sbb
sbb
imul
dec
mov
inc
sarl
xchg
repz
cmp
addl
stos
pusha
sbbl
jb
inc
fnstenv
or
sarb
arpl
pop
lea
pop
test
neg
and
add
mov
addr16
rcl
in
mov
sub
mov
shll
push
xchg
xor
out
sub
pop
and
es
push
aas
inc
dec
lret
adc
les
add
popa
push
push
inc
loopne
push
mov
stc
xchg
arpl
inc
mov
andb
or
hlt
cmp
and
jns
jmp
mov
gs
fldl
lret
arpl
pop
push
rcl
adc
inc
addr16
push
pop
dec
cs
repz
gs
sahf
jp
call
or
ja
ss
pushf
das
dec
inc
jnp
and
mov
imul
and
imul
sub
mov
test
arpl
cmc
add
xchg
arpl
dec
pop
in
sbb
leave
jge
jp
mov
std
test
mov
fxam
push
insb
mov
sub
dec
stos
ret
push
ret
ss
outsl
pop
aad
insl
mov
lret
ret
jb
inc
and
dec
inc
push
enter
cmp
jno
ss
mov
mov
shll
loop
loope
mov
sbb
adc
push
je
xchg
inc
xor
out
cmp
sbb
je
cmpsb
mov
mov
jle
jb
loopne
ret
pushl
push
in
sbb
leave
xchg
stos
mov
das
push
pop
sbb
push
xlat
js
xor
jae
popa
lods
insl
popa
mov
out
outsb
cwtl
into
stos
push
inc
xchg
ror
adc
cmp
sub
xorb
xchg
test
loop
insb
mov
jb
imul
push
mov
das
lea
loope
jl
xor
xchg
pop
ss
cmc
sbb
mov
mov
cltd
mov
xor
mov
data16
sub
mov
push
iret
mov
rcrb
loopne
repz
test
xchg
lods
daa
pop
xor
lds
push
mov
mov
sbb
leave
js
jmp
lea
cli
bound
arpl
and
cmp
cmp
xchg
add
inc
cmp
fs
pop
je
mov
sahf
inc
push
add
mov
mov
enter
push
imul
sub
outsl
jl
cmp
sub
mov
test
dec
cli
or
dec
jmp
pop
dec
sbb
and
imul
xor
dec
mov
loopne
push
xor
dec
out
ljmp
leave
mov
nop
je
inc
rcr
push
lods
leave
fistpl
bound
nop
out
mov
pop
sbb
jle
scas
jne
cmpsl
mov
pop
ret
add
push
shl
push
mov
and
inc
fiadds
bound
in
adc
in
orl
push
inc
testl
pop
imul
or
icebp
rcl
fs
xchg
sbb
fnstenv
cmp
cwtl
jb
int3
push
xor
leave
xor
ficompl
mov
pop
loop
das
and
gs
aam
push
rolb
in
push
xchg
loop
call
push
jecxz
jb
add
mov
rcll
ljmp
ljmp
or
lret
inc
ror
aad
xor
insl
cmp
jg
jmp
loop
or
xchg
inc
int
repnz
push
in
dec
and
aam
nop
into
and
mov
dec
adc
movsb
mov
sbb
mov
lret
repz
jle
sbb
ffree
aad
inc
add
or
jle
sub
add
out
stc
repnz
and
xchg
push
pop
xchg
in
pop
xlat
mov
xorl
jle
aas
gs
stc
adc
mov
push
jno
or
scas
xlat
xor
sti
ljmp
subb
sbb
or
fisubrl
sbb
shrb
adc
rcll
inc
and
arpl
test
aas
movsb
jo
and
sub
addl
bound
add
mov
sbb
inc
lods
in
xchg
es
out
out
push
inc
cwtl
sbb
sarw
cli
and
add
xchg
and
test
lds
xor
shll
push
or
cmp
xor
movsl
call
fwait
movsl
call
sbb
or
scas
and
dec
fwait
gs
mov
cmp
or
pop
xor
outsl
popf
and
push
xchg
sti
mov
mov
pop
mov
lods
in
out
mov
add
or
nop
dec
out
aad
xchg
mov
cwtl
bound
inc
dec
mov
int
jmp
xchg
cmp
sbb
pop
sub
sub
lea
icebp
jns
fstps
add
push
sub
andl
call
or
dec
sbb
xchg
cmp
mov
mov
mov
sbb
cwtl
fidivrs
imull
cmc
pop
jnp
pop
std
pop
bound
fwait
int3
jg
stos
call
imul
lret
mov
dec
fnstenv
stos
mov
dec
jbe
and
test
mov
test
popf
mov
out
rcr
lock
push
jmp
movsb
out
jge
inc
pop
sbb
imul
in
sbb
nop
jo
pop
lds
push
xchg
push
sbb
sub
or
mov
leave
imul
and
mov
mov
mov
imul
mov
je
imul
movsl
je
push
sub
lods
ffreep
out
pop
not
shl
sbb
mov
sub
mov
and
inc
loop
add
jecxz,pt
cld
inc
filds
push
mov
mov
xchg
stos
xchg
repnz
sahf
adc
jbe
sbb
jo
shl
add
hlt
push
or
push
mov
dec
adc
jecxz
fcomi
in
movsb
xor
pop
jae
and
ficoms
sbb
je
fldcw
mov
sub
push
mov
pop
lds
std
out
ljmp
daa
or
xor
xor
fiaddl
outsl
pop
add
adc
pusha
popa
movsb
pop
push
cmpsb
ljmp
xor
pusha
fidivl
rcrb
and
xchg
aas
or
jp
dec
mov
push
mov
lret
pop
xor
jb
push
lret
icebp
fsubs
push
lcall
add
xchg
sbb
sub
or
pop
es
rorb
out
add
mov
out
pop
dec
lret
mov
mov
dec
pop
dec
inc
dec
add
movsb
aad
push
add
add
xchg
or
sbb
or
fidivrl
jl
inc
pop
daa
cmp
xchg
out
pop
jg
and
shll
jo
dec
cmpsl
xor
and
cmp
adc
fs
enter
add
or
push
notl
inc
xor
xor
cmpsl
xchg
mov
or
xor
cwtl
jne
xchg
arpl
and
mov
dec
nop
sub
xor
cs
sub
das
or
mov
cli
push
test
stos
into
jp
rol
sub
or
fstpt
sub
sbb
movsb
jecxz
mov
ds
sub
jb
out
iret
jg
jge
enter
ds
mov
cmpsl
mov
add
push
arpl
stos
lea
cmp
inc
cld
imul
inc
xchg
or
xor
xor
pop
fs
or
push
add
mov
jno
idivb
fnsave
jbe
dec
mov
mov
and
pop
pop
dec
addr16
es
data16
adc
scas
pop
lods
mov
jae
ds
cmp
loope
int3
dec
test
sti
mov
push
sub
es
mov
xor
repnz
dec
mov
clc
cwtl
js
push
sbb
je
cmp
mov
pop
aad
add
insl
mov
dec
add
adc
mov
andb
test
inc
je
sub
fisubs
xor
jno
push
mov
sbb
mov
cli
pop
fistpll
add
cmpsl
roll
out
out
pop
jmp
mov
mov
cmpsl
int
cmpb
sub
adc
adc
cwtl
mov
adc
pop
sbb
mov
dec
xor
lahf
push
into
pop
test
outsb
iret
mov
and
std
popa
jae,pn
jmp
rclb
adc
mov
mov
mov
mov
roll
cmp
jb
in
fld
inc
sahf
sar
push
lret
sbb
ud2
aam
dec
push
and
dec
lcall
xchg
cmp
mov
in
scas
cmp
lods
cmc
int
adc
jb
and
dec
pop
push
loope
das
or
xor
xchg
jmp
leave
sub
repz
lcall
xchg
pusha
cmc
stos
aam
push
addr16
and
cld
lahf
mov
lret
or
inc
pop
jne
enter
mov
sbb
xchg
das
adc
dec
inc
testb
or
hlt
push
es
call
hlt
out
cmp
jle
push
add
add
aas
int3
sub
jne
lret
lods
add
add
cmp
mov
push
lret
insb
sbb
push
stc
repz
repnz
sbb
push
loopne
dec
jo
add
shrd
lcall
jnp
lds
sti
dec
pushl
sub
mov
mov
mov
mov
cmpsl
pop
cmpsl
jp
aaa
inc
and
fiaddl
mov
cs
push
jnp
je
nop
ljmp
mov
push
lods
js
aaa
push
mov
das
insb
insl
mov
rclb
js
addl
or
sbb
lahf
push
mov
sbbl
mov
inc
xor
jg
inc
mov
xor
inc
cmpl
adc
xor
xchg
sub
pushf
movsb
stos
shlb
lods
or
int
mov
stos
jl
cs
mov
push
es
fwait
adc
lcall
aad
xchg
xorl
push
negl
mov
adc
jo
or
jne
mov
out
adc
jge
add
sub
das
inc
pop
inc
mov
icebp
sarb
mov
dec
imul
lods
xlat
aaa
or
mov
roll
mov
fwait
outsb
stc
jle
call
mov
cmpsl
xchg
repz
js
loope
cmp
jno
setle
bound
mov
pop
inc
lods
jns
and
and
arpl
movsl
test
jb
js
nop
outsl
pushl
out
addr16
mov
cmc
cli
out
test
mov
jns
xorl
xor
push
cmp
xlat
int3
int3
ss
push
mov
push
mov
sarb
inc
lods
out
out
into
adc
lret
xor
testb
nop
cmpsl
or
or
adc
mov
cvtpi2ps
xor
lret
push
je
mov
in
jmp
hlt
adc
shlb
outsb
sti
lret
dec
rorb
test
stc
pop
aam
aam
iret
rcr
or
sahf
push
inc
inc
pop
nop
mov
mov
jp
lods
sub
mov
jae
jns
sbb
daa
call
loopne
aas
mov
bound
mov
push
xor
repnz
inc
add
and
rclb
stos
fbld
fs
add
lret
jo
loopne
lret
dec
mov
mov
mov
sbb
push
mov
bound
dec
insl
adc
stos
inc
xchg
inc
lret
xchg
pushf
mov
sub
popf
cs
sub
mov
cmpsl
add
lods
out
stos
outsb
sahf
jp
fisubrl
mov
addr16
push
call
roll
adc
dec
pop
std
addr16
sbb
mov
xchg
mov
adc
repnz
pop
mov
jp
xchg
repz
fwait
outsl
sbb
scas
adc
push
fwait
sbb
add
push
xor
incb
xor
mov
dec
pop
lock
dec
cmpsb
mov
jno
mov
push
adc
mov
mov
inc
rcrl
das
clc
ffree
xchg
mov
insb
jmp
adc
std
xor
inc
outsl
imul
mov
xor
cmp
repnz
fldcw
inc
stc
loope
inc
and
pop
add
sbb
or
fmul
pop
adc
jmp
and
mov
pop
aam
cmp
push
gs
stc
jo
adc
cwtl
jno
xchg
cmp
dec
push
cmp
rcll
inc
push
call
orb
pop
pop
add
popf
lret
pop
inc
jns
xchg
test
mov
sub
test
hlt
stos
mov
or
sbb
push
pop
dec
lods
xchg
bound
fdivs
sbb
ret
pop
in
pop
mov
mov
loop
orl
inc
pop
cmc
stos
shr
insb
adc
jns
xchg
push
jmp
inc
ret
mov
shlb
xchg
push
xchg
fsubrl
pop
adc
mov
ret
xorl
dec
mov
stos
mov
jae
jecxz
pushf
adc
repnz
mov
aad
divb
mov
out
xor
into
pop
popf
cli
insl
shrl
push
mov
pop
dec
jg
push
mov
es
lods
es
into
outsl
in
ret
mov
mov
lods
cmpsb
loopne
jns
sbb
sub
sbb
cltd
mov
fsubs
lret
repz
push
xorb
loope
scas
es
cwtl
jo
or
inc
inc
xchg
sti
sbb
cmpsb
xlat
adc
and
in
cmpsl
add
mov
jae
xchg
jp
jb
xchg
ljmp
js
pop
cld
mov
inc
shrb
jo
cmp
pop
lock
mov
ret
mov
xor
arpl
add
xchg
xor
addl
popf
lret
jmp
imul
rcrb
ss
stos
mov
push
or
mov
xor
pop
pop
out
lods
sti
xor
hlt
orb
repnz
and
dec
inc
aam
fidivrl
jno
out
in
movsl
pop
mov
push
ss
push
fimuls
push
xrelease
pop
mov
aas
shll
mov
cld
mov
into
mov
cmp
pushf
jle
xor
adc
cmp
mov
or
or
mov
add
fdivrl
jl
in
scas
or
fcos
fs
aam
jmp
mov
push
mov
xchg
iret
xchg
xchg
fimuls
or
in
mov
mov
dec
dec
mov
addr16
pusha
mov
sbb
aas
xchg
dec
or
cmp
divb
mov
scas
insb
in
jmp
dec
mov
push
inc
adc
adc
mov
fmuls
inc
insl
testb
inc
mov
and
es
push
scas
jle
jns
mov
adc
pop
push
sbb
or
lods
pop
adc
ljmp
xor
call
dec
int
mov
lret
jmp
xchg
cmp
aad
sahf
lcall
call
adc
or
imul
test
inc
pop
jne
orb
shr
mov
fists
mov
hlt
and
fs
jg
mov
imul
xchg
cli
sbb
addr16
mov
jg
sbb
mov
js
ds
lcall
sub
mov
xor
pop
mov
cmc
int3
xchg
pop
nop
dec
jp
imul
test
xchg
loopne
mov
add
add
cmpb
or
lea
sbb
mulb
repz
stc
int3
clc
sbb
nop
cmp
add
push
push
xor
fcoms
mov
iret
jb
popa
dec
ljmp
lods
sahf
test
arpl
jno
mov
roll
push
mov
and
ret
push
adc
xchg
ficomps
sbb
bound
adc
lock
decl
xchg
xor
push
sbb
or
loopne
or
cmp
or
sbb
ljmp
mov
and
inc
aad
fbstp
fcomps
push
mov
xchg
cmp
daa
nop
movsl
sbb
ja
mov
xor
pop
pushf
into
mov
mov
pop
jecxz
xor
lds
outsl
sbbb
test
es
lock
adc
imul
lods
jecxz
fld
mov
lahf
add
push
scas
fdiv
jae
pop
or
icebp
mov
fsubl
jp
arpl
mov
mov
scas
add
clc
dec
cmp
inc
and
add
mov
xchg
mov
dec
les
jle
test
outsl
xchg
inc
xchg
int
mov
dec
outsb
in
lret
cmpsl
enter
rclb
xor
push
push
lock
test
or
test
div
or
je
jnp
xorb
imul
xchg
xchg
popa
es
sub
pop
cli
rolb
cli
pop
dec
ljmp
fcmovnbe
shrb
cltd
or
mov
icebp
mov
je
push
das
jecxz
xchg
sub
sub
clc
ds
xchg
repnz
and
fwait
xchg
xchg
xchg
sub
push
xchg
xchg
add
sub
xchg
out
pop
push
sub
push
cmp
ja
or
cmpsl
pop
fcomps
cmp
daa
push
std
mov
push
jl
sub
fsub
push
push
xchg
clc
xchg
cmp
cmpsl
insl
jnp
dec
mov
add
pop
pop
js
add
outsb
cmp
mov
inc
xor
sub
shlb
jge
aad
and
std
mov
scas
sbb
push
adc
cmp
loope
or
adc
xchg
sbb
hlt
and
fistl
jb
lahf
add
int
fisttps
jmp
pop
xor
add
pop
inc
xor
add
test
stc
sub
and
dec
xor
int3
or
subb
insl
push
sti
mov
xor
cmp
and
mov
push
mov
lods
mov
jp
xchg
jmp
lcall
cmp
pop
in
jo
pushf
xor
lahf
sub
jne
or
jbe
mov
jp
popa
dec
jne
ja
pusha
aaa
cmp
push
call
xor
shl
or
aam
sahf
lods
test
pop
ret
mov
fcoms
test
pop
mov
insl
cld
into
mov
rcrl
jns
push
xor
and
cmp
cmp
ds
lret
inc
dec
sbb
sbb
fsubrs
add
cltd
in
push
sub
negb
out
xchg
mov
jnp
push
jmp
popf
repnz
aad
pmaddwd
cwtl
outsb
lock
cmpsl
icebp
out
outsb
adc
push
and
bnd
nop
pop
inc
sbbb
or
subl
rorb
subl
adc
mov
out
and
mov
adc
sbb
clc
jmp
inc
stos
mov
je
int3
xlat
addb
inc
adc
sbb
lds
je
mov
xor
mov
aas
push
divb
jb
xchg
aam
adc
cli
cwtl
sti
leave
inc
adc
jmp
sub
cmc
aaa
mov
mov
mov
or
xchg
mov
sbb
xor
pop
aad
jge
xor
sub
lds
mov
xchg
mov
shrl
xor
lret
das
adc
jb
xchg
mov
andl
in
ds
add
cmp
fmull
or
sbb
dec
aam
repnz
xor
ret
push
pop
loopne
jecxz
xor
cmp
adc
out
cs
fsubp
lahf
sti
adc
and
dec
mov
push
pusha
sarb
lds
or
jle
and
pop
icebp
mov
add
jns
dec
movsb
add
push
lret
mov
and
push
mov
cli
lret
pop
xchg
movnti
or
loopne
pop
shll
and
jne
mov
notb
mov
aaa
xchg
add
dec
in
rcl
push
fsubp
test
popf
sub
cmp
ret
cmp
cmp
and
es
jne
bound
push
iret
adc
mov
push
add
mov
xchg
shrb
or
lahf
cmp
push
test
ja
lcall
and
add
inc
dec
xchg
in
push
testl
jne
jo
decl
loopne
add
cltd
pop
cmp
in
cmp
xor
addr16
adc
pop
xor
or
les
sub
and
ljmp
cmp
adc
jns
stos
fbstp
dec
lea
loope
adc
or
adc
push
out
pop
nop
cmc
fcompl
or
or
nop
add
leave
jno
mov
lods
and
test
int3
push
xor
mov
aam
mov
xchg
dec
lret
push
daa
pop
rcl
testb
pop
dec
cmpsb
adcl
dec
add
rcrl
dec
jns
hlt
sub
insl
cmpsb
cmp
jmp
test
ds
dec
nop
mov
movsb
bound
lret
pop
jmp
aam
clc
aad
sub
jbe
out
aaa
push
aad
mov
pusha
fmull
iret
xor
mov
or
or
sbb
xor
xchg
jle
repz
std
loope
jmp
pop
js
push
rol
push
lods
pop
cwtl
outsb
add
xchg
inc
push
test
testl
push
and
fs
or
in
push
pop
mov
js
xor
fcmove
add
shll
xchg
das
test
sub
cmp
xchg
lret
inc
les
dec
mov
sub
into
jae
enter
xchg
jle
insl
stos
xor
cmp
xchg
pop
loop
inc
inc
and
mov
pop
gs
popf
arpl
push
push
push
push
pop
aad
iret
mov
sub
lock
xor
cmpsl
mul
mov
les
pop
inc
xor
jle
jecxz
sub
and
mov
add
sub
xor
pusha
lcall
mov
mov
xchg
mov
add
cmp
test
pusha
outsb
mov
jecxz
and
ljmp
stc
cld
dec
cltd
out
cmp
add
shll
jns
and
mov
vdivps
rcrl
hlt
lret
xor
mov
orl
dec
ret
mov
xor
xchg
imul
xchg
gs
adc
in
cmp
cmpsl
mov
das
clc
adc
sub
lcall
bound
add
incl
jg
js
jge
mov
mov
sub
jecxz
rcrl
fs
pop
stos
xchg
stc
push
sar
inc
mov
outsb
dec
cli
shlb
lret
pop
fwait
and
mov
inc
cmp
dec
or
push
aad
jno
int
mov
jle
pop
adc
sbb
fsubl
test
in
fsubrl
and
push
les
and
add
sbb
cwtl
loopne
sbb
pop
mov
icebp
hlt
imul
jb
sti
push
cmp
sbb
sbb
addb
inc
outsl
xlat
insl
jp
pop
push
ficoms
dec
inc
push
dec
pushf
lret
mov
xchg
leave
push
sbb
mov
xor
iret
sbb
inc
mov
shlb
add
imul
push
test
sub
sub
hlt
test
jecxz
or
sbb
stc
sbb
ret
mov
adc
sub
xor
or
data16
je
lock
xchg
js
sahf
sti
bound
xor
enter
in
jns
outsl
out
adc
xchg
loop
jmp
iret
pop
vpaddusb
sbb
repnz
xor
cmp
dec
push
mov
mov
sarb
xchg
or
pop
xor
or
mov
add
stc
xchg
cmpsb
adc
ltr
ja
inc
icebp
and
lods
sahf
jp
add
mov
cmp
sbb
scas
insl
insl
enter
pop
push
push
and
push
xor
push
push
lcall
clc
mov
enter
cs
xlat
push
pop
jbe
mov
in
mov
xor
xchg
push
les
sub
pop
sub
imul
or
das
cwtl
cli
repnz
rolb
xor
push
push
fsts
or
push
mov
jp
loopne
popf
or
and
xor
nop
je
jmp
sbb
dec
out
jno
roll
jae
loop
xor
push
adc
mov
pop
nop
ret
out
sub
loopne
dec
pop
out
xchg
ds
push
mov
clc
mov
mov
subb
adc
aaa
mov
push
pop
movsbl
iret
cmp
mov
mov
in
repz
mov
hlt
dec
adc
jl
or
scas
movb
test
andl
mov
cmp
pop
int3
or
xchg
and
pop
rcl
jns
sub
subl
adc
cmp
popa
and
sub
scas
push
imul
jbe
pop
pop
add
cmp
mov
adc
xor
dec
fimuls
jns
dec
nop
push
push
icebp
test
test
or
xchg
addr16
mov
jl
cmp
clc
sub
mov
xchg
and
sbb
pop
cwtl
dec
push
ds
nop
loop
addl
add
daa
add
jo
sub
xchg
lret
insl
les
inc
mov
dec
stos
or
push
shrb
jae
test
imul
mov
cwtl
into
movsl
inc
lods
lds
inc
int
adc
popf
arpl
push
repnz
scas
jo
mov
xor
inc
jg
leave
inc
or
stc
jge
lcall
std
pop
dec
pusha
fbstp
add
inc
shlb
mov
pop
jmp
jl
push
imul
movsb
jmp
xchg
dec
dec
dec
cmp
sbbb
movsl
mov
aad
jb
movsb
mov
xchg
cmc
xchg
loopne
push
jl
and
sti
hlt
cmp
add
aaa
or
pop
jge
add
xchg
lret
adc
mov
or
aas
and
cltd
mov
pop
ja
push
mov
gs
iret
sbb
sub
out
dec
cs
enter
int3
aam
mov
std
push
add
test
adc
jns
popf
fstpt
dec
lahf
push
ja
ss
pop
mov
mov
daa
push
das
sbb
jecxz
rcll
jnp
xchg
cltd
inc
adc
fcomi
add
xchg
sti
pop
push
pushf
das
mov
out
and
or
clc
jbe
or
xor
js
fmuls
ret
lret
pop
xor
mov
push
shl
jbe
push
aam
jle
mov
cltd
sbb
mov
sub
aad
ljmp
fcomps
jl
out
xor
xor
push
scas
jae
stos
jge
jl
and
mov
into
mov
addl
adc
xchg
scas
pop
or
mov
push
jno
repz
sub
push
sbb
jmp
mov
jge
call
pop
scas
repnz
test
out
repnz
jne
scas
jbe
out
xchg
in
push
sub
fwait
data16
add
out
scas
push
cwtl
in
xor
jbe
xor
sbb
addr16
cld
cmp
adc
or
loop
add
pop
pop
ja
dec
add
mov
cmp
push
jecxz
xor
out
out
cmp
push
aam
les
mov
fidivl
shl
push
inc
xchg
mov
and
sarl
mov
mov
sub
xchg
int3
and
adc
iret
pop
insl
or
or
inc
test
xchg
outsb
aam
and
jle
mov
sbb
and
mov
or
mull
cwtl
andl
stos
rclb
push
sub
mov
mov
jmp
jns
jnp
enter
fcmovnb
pop
call
sahf
or
test
jl
fcom
adc
dec
out
dec
stos
mov
xor
sbb
pop
mov
fxch
ja
add
and
add
mov
mov
jno
subb
sub
and
adc
xor
dec
cld
repz
lahf
and
fildl
jle
rolb
out
xchg
push
je
les
xchg
icebp
fstl
pop
pop
fbstp
outsl
lahf
cmpsl
mov
daa
sbb
ljmp
xor
xor
push
xor
lahf
js
xor
das
popa
mov
cs
mov
bound
cmpsb
pop
mov
jns
popa
scas
imul
xor
nop
or
jge
dec
jbe
add
dec
ficompl
aad
rcr
xchg
flds
pop
sahf
sbbb
pop
fs
jp
and
sbb
subl
out
pop
add
int
ret
in
and
into
pop
add
loop
bound
xchg
sbb
cmp
sti
inc
xchg
dec
daa
xchg
cltd
cmpl
pushf
adc
add
or
adc
cmpsl
add
pop
sbbl
mov
aam
xorl
mov
mov
test
shl
sub
out
andb
ret
or
adc
cmp
inc
push
cmpsb
enter
lea
les
sub
idivl
jo
inc
or
xor
les
cmp
mov
mulb
pop
setle
xchg
in
hlt
mov
ret
in
lret
jno
stos
and
lret
cld
insb
push
jp
xchg
mov
sbb
adc
or
mov
sbb
dec
jp
sub
aas
lret
imul
adc
xor
rol
sbb
sbb
les
jne
xchg
pop
sti
ret
test
dec
out
fcomp
inc
jnp
cmpsb
dec
sbb
call
mov
or
lret
mov
in
fimull
or
sbb
cmc
movsb
fdivs
push
clc
rclb
outsl
out
xchg
xchg
repz
mov
lahf
jb
jnp
hlt
leave
out
push
repnz
mov
xor
in
test
fnstenv
call
cmp
out
outsl
adc
push
mov
fcmovu
fisttpl
dec
cmp
ja
lret
push
xorb
sub
inc
daa
dec
adc
rclb
mov
xchg
bound
hlt
push
xor
nop
test
stos
pop
fsubs
add
test
add
outsl
orl
fistpll
or
imul
sbb
pusha
sbb
pop
pusha
out
mov
mov
xchg
leave
dec
push
xchg
imul
fldcw
fcmovnbe
rcr
mov
pop
jle
mov
mov
adc
mov
movsl
iret
movsl
xchg
inc
insl
push
sub
sbb
mov
dec
mov
sbb
or
jne
sbb
fs
dec
or
mov
pop
or
pop
jne
pushf
out
jo
xchg
into
fdivr
sahf
jne
adc
jmp
insb
lods
sub
adc
push
cwtl
std
mov
dec
dec
push
or
cltd
leave
and
enter
dec
push
es
hlt
aad
aaa
pop
mov
and
fnstsw
cmp
fisttps
loopne
in
popf
sub
inc
mov
adc
loopne
mov
mov
popa
jg
loopne
ror
push
mov
mov
adc
pop
out
mov
mov
mov
and
jbe
mov
inc
adc
daa
xchg
xor
gs
cmp
pop
lods
sbb
or
xchg
sahf
push
xor
xchg
je
and
xor
pop
and
or
push
dec
dec
add
test
or
mov
sbb
lcall
in
sub
mov
roll
mov
pusha
mov
mov
cld
icebp
shll
loopne
daa
insl
sti
push
into
movl
lret
scas
jmp
lret
push
push
les
sub
in
dec
fcoms
clc
cmpb
mov
push
les
fcoml
mov
cltd
mov
cmp
cmpsb
addr16
push
mov
out
jmp
and
inc
pop
sbb
sbbl
jbe
lock
in
xchg
in
adc
ljmp
and
loope
cmp
icebp
cmpsl
jns
decl
jo
adc
lods
ja
rol
sub
jne
lret
mov
incl
cmp
ds
dec
adc
dec
hlt
das
dec
mov
jb
cmp
lods
add
push
mov
add
scas
fwait
pop
rorb
lea
ss
pop
dec
sti
jecxz
sub
sub
push
mov
clc
dec
jge
into
push
je
jno
dec
cli
outsb
mov
mov
sbb
call
sub
aas
mov
mov
iret
or
cmpl
stos
dec
inc
inc
xchg
div
dec
mov
lock
daa
jo
fidivrs
mov
adc
cmp
jge
push
mov
outsl
pop
jmp
sbb
xchg
in
adc
mov
out
mov
and
outsl
adc
xor
out
push
mov
cmp
mov
outsl
imull
bound
mov
js
jno
test
aas
roll
shlb
push
pop
out
push
dec
dec
test
xchg
dec
xchg
lea
dec
mov
push
mov
mov
jns
daa
mov
nop
mov
sub
lahf
scas
push
pop
leave
fwait
or
iret
jnp
cmp
ret
lcall
jl
xor
repz
faddp
bound
mov
aam
nop
lods
sbb
xor
sub
rcrl
fiaddl
inc
stos
fcompl
fldt
in
pop
mov
das
insb
sar
cli
in
and
call
jno
insl
out
or
loopne
mov
bound
xor
sbb
xor
fildll
out
das
push
mov
jo
fcoml
aad
cmpsb
xchg
adc
mov
pushf
leave
aaa
sti
fwait
call
add
mov
push
insb
xor
xchg
sbb
jecxz
jmp
fsts
mov
or
inc
shrb
or
sbb
mov
mov
pop
xchg
add
pop
pusha
fwait
repnz
int3
push
stos
cld
xlat
cwtl
repz
cld
mov
lods
jne
mov
mov
stos
xchg
add
sbb
fcoms
xor
fwait
xlat
jne
aas
ds
xor
xchg
mov
sahf
movsl
and
lods
cmc
mov
adc
xchg
pusha
jno
jae
fsubl
or
call
pop
push
jnp
lcall
pushf
scas
dec
xchg
cwtl
jge
into
mov
cmp
cmp
cmp
fildll
nop
shrb
push
scas
scas
inc
cmp
fidivrl
sub
sub
sbb
aad
cltd
test
orb
add
mov
inc
shlb
aam
ljmp
test
mov
xchg
ud2
jo
test
subl
mov
sub
xlat
mov
push
inc
or
das
add
adc
mov
or
or
lret
aas
outsb
cmc
lret
popa
xchg
call
fucom
bound
mov
jno
mov
es
popf
outsb
sub
cli
xchg
dec
ret
out
pop
xlat
add
mov
dec
xchg
inc
neg
stos
insb
hlt
cmpsl
jns
repz
sub
negb
dec
scas
cmp
or
ss
ret
dec
insb
xchg
rclb
or
aaa
std
out
pop
mov
clc
outsl
rcrb
mov
mov
dec
add
mov
xor
and
and
sub
or
pop
loop
push
sub
mov
lcall
cmp
inc
pop
or
mov
lods
add
fiadds
mov
jecxz
xor
leave
lret
mov
mov
sub
sbb
mov
clc
rcrb
jne
or
aas
pop
sbb
in
addl
std
dec
pop
cmc
int3
jl
lods
push
push
add
mov
popf
dec
fidivl
mov
pop
lock
scas
add
fstps
es
pushf
xchg
pop
loopne
nop
mov
addr16
in
shr
mov
add
pop
lcall
add
push
insb
xor
aas
into
imul
jg
sbb
pop
push
pop
adc
inc
out
fmuls
mov
into
cmpb
mov
int
int3
adc
sbb
or
push
mov
call
out
test
loopne
fcomps
add
js
xor
lcall
sub
fdivp
mov
fwait
imul
stos
jmp
lret
jmp
jmp
sar
xor
push
andl
xchg
sub
jg
repz
stos
in
mov
movsb
movsb
aaa
ja
in
fistl
cli
or
pop
mov
mov
jbe
xchg
clc
mov
push
sub
xchg
mov
cmpsl
fwait
inc
fmulp
xor
leave
mov
in
push
scas
mov
out
adc
jmp
xchg
pop
sub
sbb
cmc
repz
jne
xlat
jp
dec
mov
je
cmc
fildl
lock
cli
imul
testl
fnstenv
leave
test
push
loopne
or
pop
das
test
xor
mov
js
or
out
mov
mov
push
xlat
mov
imul
jnp
and
pop
add
outsl
pushf
ror
sub
sti
mov
repnz
mov
dec
mov
cmp
das
mov
push
pop
imul
mov
call
fcmovu
inc
lcall
push
sub
je
cmp
inc
cmpsb
lock
imul
out
stos
jle
xlat
ss
xchg
jge
sarl
and
bound
int
movsl
jg
inc
jl
xor
xchg
mov
mov
push
adc
into
jl
aam
jmp
inc
fcompl
sub
pinsrw
xorb
fbld
out
adc
pop
into
adc
das
push
cmpsb
sbb
inc
mov
fdivl
mov
shll
into
leave
jle
pushl
fwait
pop
nop
or
cli
arpl
rcll
add
imul
sahf
xchg
sarb
nop
ss
std
add
in
jo
ret
add
mov
cmp
adcl
mov
test
dec
adc
sarb
loopne
push
lret
inc
das
push
dec
or
icebp
fstps
inc
loopne
dec
cmp
cmc
fcmovb
dec
shlb
fcomps
mov
in
xor
pusha
cmp
cmp
push
and
and
repz
sbb
stc
call
pop
out
pop
shll
sbb
fistpll
xor
add
mov
ja
mov
fdivrs
adc
cli
push
out
pop
scas
in
ret
pop
sub
or
shlb
incb
and
push
mov
push
inc
mov
inc
adc
enter
lock
pop
ljmp
outsb
dec
or
sub
movsb
fisubs
sub
leave
xchg
and
xchg
jg
xlat
push
hlt
adc
enter
test
mov
shlb
movsl
ljmp
aam
inc
xchg
sti
ret
cmp
test
aas
sbb
dec
das
xor
aaa
out
out
fistps
mov
inc
out
daa
lods
pop
cmp
fiadds
lret
fs
pop
push
lods
lahf
loop
imulb
adc
push
pop
and
xor
adc
push
je
rcrl
jns
movsl
mov
mov
add
dec
or
add
cmp
or
mov
addr16
rcl
in
inc
push
dec
call
outsl
mov
cwtl
popa
dec
daa
pop
xchg
pop
xchg
fs
adc
mov
out
pushf
clc
js
mov
inc
and
lods
popa
sub
and
mov
mov
movsb
mov
and
pushf
mov
lret
cmc
pop
push
dec
jbe
nop
fwait
lods
pop
push
out
mov
outsb
orl
repnz
mov
cld
pop
leave
decb
imul
push
jae
mov
xor
sub
pusha
mov
das
mov
inc
or
stos
rorl
inc
jne
adc
subb
sub
xor
das
xor
cmp
add
fdivs
mov
mov
divb
sbb
loope
int
sbb
mov
or
push
inc
xchg
clc
mov
push
aad
int3
or
xchg
or
test
jb
ret
xor
in
add
xchg
push
stc
int3
jle
xor
mov
mov
arpl
xor
iret
into
pop
and
rol
roll
pop
fs
es
jmp
out
cmp
push
lods
rcrl
or
lods
mov
imul
cmp
jno
mov
cmp
add
test
shll
rorb
add
testl
repz
push
stc
test
aam
pushf
adc
stc
sub
cmp
data16
pop
pop
xchg
fcmovnu
mov
loope
inc
hlt
dec
jo
insb
outsb
scas
xchg
sbb
mov
in
ret
leave
iret
movsl
fldl
mov
inc
sti
mov
int
in
add
adc
call
add
lods
add
pop
hlt
cltd
sbb
ds
jp
xor
xor
lods
xor
ficoms
add
dec
ljmp
fnstenv
jnp
loopne
cmc
cmc
jns
sub
xchg
fildll
pop
aaa
jp
mov
xchg
ficoms
dec
or
dec
cmp
insl
or
movsb
push
lcall
pop
loop
ret
mov
cmp
shll
ds
cmc
mov
andb
cmp
gs
aaa
and
aaa
sub
pop
incl
add
xchg
std
outsb
test
add
addb
dec
or
add
inc
adcb
stc
jne
clc
lahf
pop
cmp
cltd
stc
push
adc
mov
mov
jmp
test
pop
popf
notb
mov
mov
jmp
mov
ljmp
dec
mov
leave
rclb
into
cwtl
test
and
test
ja
inc
test
sbb
test
test
test
and
dec
lret
inc
xorb
or
ss
and
out
xchg
hlt
mov
test
adc
cmp
repnz
in
sahf
push
out
dec
int3
nop
int3
pop
jno
ljmp
add
xor
add
cmc
test
stos
adc
mov
push
mov
mov
xchg
jne
test
cld
add
xchg
cmp
fdivrs
or
mov
adc
mov
sbb
xchg
or
or
pop
out
jns
sbb
jp
sub
sbb
add
jl
jecxz
lock
cli
inc
xor
inc
fwait
sub
stc
pop
xchg
push
test
gs
sub
inc
add
adc
leave
mov
mov
stc
sbb
jle
or
mov
fstps
or
imul
pop
sub
mov
cmpsl
mov
rorl
jae
or
or
das
and
ds
push
jo
frstpm(287
jp
or
push
les
lock
nop
jp
push
fistl
ror
fadd
jg
call
jno
fcompp
lret
mov
jns
outsl
mov
pop
call
out
push
dec
adc
mov
push
stos
sub
pushw
gs
adc
add
add
mov
sbb
push
mov
nop
cmp
les
add
lock
inc
ss
add
pop
das
inc
sub
cld
int
pop
xor
push
dec
lcall
shlb
sahf
push
jmp
fbstp
push
sub
sti
rolb
mov
mov
sub
std
lret
cli
fcomps
sub
pop
dec
cmpsb
mov
scas
sbb
add
pop
mov
shrl
insw
pushf
icebp
sbb
in
mov
dec
push
int
add
std
cwtl
add
xor
in
test
cmp
test
mov
insl
sub
adcl
shrb
cmp
mul
loopne
jns
push
mov
xor
divb
popf
cmp
scas
add
in
sahf
lods
or
rolb
mull
mov
or
add
pop
in
sbb
cmp
repnz
fiadds
mov
or
push
sbb
adc
dec
mov
aaa
shlb
repz
pop
arpl
mov
in
adc
imul
push
xor
outsb
sbb
push
outsl
pop
or
call
sbb
rcrb
insl
dec
outsl
sub
lret
mov
mov
add
leave
popf
add
aad
sub
pop
loope
cmp
lcall
inc
notl
ljmp
jmp
aas
movsb
addl
loop
and
shll
fdiv
stos
jge
pop
dec
testl
int3
mov
lds
mov
jl
adc
cld
mov
dec
cmp
sbb
es
andb
xor
xor
push
xor
sarb
imul
ret
mov
sahf
dec
hlt
adc
shrb
cmp
mov
adc
xchg
test
xor
or
sahf
loope
mov
in
je
sub
sar
pop
in
movsl
inc
pushl
mov
dec
lahf
sbb
sbb
pushf
add
shrb
jecxz
bound
clc
mov
sbb
inc
cmp
mov
cmp
pop
repz
mov
adc
out
mov
xchg
dec
pop
imul
cltd
sub
mov
insb
sbb
add
daa
jge
or
dec
in
adc
fnsave
add
mov
jecxz
mov
insb
adc
sub
stos
cltd
movsb
dec
lahf
scas
ss
and
stc
inc
push
mov
mov
dec
adc
lea
inc
fdivs
jno
mov
das
pop
jle
lods
cmpsb
jne
out
cmp
push
mov
filds
sbb
xor
insb
lcall
daa
cmp
mov
push
add
and
pop
cli
sbb
dec
add
push
loopne
out
pop
jmp
cmp
mov
stos
les
mov
std
sub
pop
mov
cmp
or
or
mov
mov
mov
push
mov
sub
sti
and
cmpsb
push
in
mov
scas
and
fidivrl
and
xor
and
inc
jne
push
stos
or
mov
inc
cmp
jbe
ja
testl
pop
dec
in
adc
je
loop
rcrl
dec
lret
xor
pop
movsb
and
imul
int3
orb
out
lret
sbb
das
xchg
shll
jno
xor
add
mov
xor
addr16
and
jl
pop
mov
rcrl
pusha
push
and
or
add
push
pushf
cmpsl
inc
jae
fwait
jns
dec
inc
call
mov
mov
lock
mov
ja
nop
fistl
sub
xchg
arpl
cmpsl
test
dec
push
inc
fisubs
hlt
mov
add
pop
lea
inc
idivb
xchg
xchg
cmove
popa
mov
lret
sahf
jo
es
xor
ss
jge
les
jmp
mov
xchg
data16
das
dec
or
stos
jecxz
push
sti
mov
js
fistpl
jb
jns
adc
ret
mov
cld
push
addr16
mov
stc
inc
cmc
xlat
out
push
ljmp
add
push
and
lea
adc
insb
sub
rcll
inc
fmuls
inc
fstpl
dec
mov
popf
push
mov
xchg
test
and
nop
int3
idivb
xor
xchg
lcall
sbb
sub
mov
add
add
in
mov
jl
xor
xchg
or
jle
adc
popa
jge
pop
cmc
adc
loopne
sbb
dec
push
dec
add
push
clc
push
mov
mov
sub
mov
inc
cmp
aam
sahf
pop
movsl
push
dec
jae
and
adc
sahf
cmp
mov
ret
jnp
popf
xchg
xchg
cmc
in
xchg
cmp
cli
dec
jge
push
dec
cmpb
jg
pushf
int
push
push
push
mov
jl
cmp
add
test
xor
sbb
movswl
xor
vmovaps
jne
and
rol
add
sarb
ret
inc
jo
xchg
movsl
fisttpll
or
pop
sub
loopne
repz
mov
and
and
cld
xor
jae
push
aam
inc
adc
repz
xchg
cmpsl
push
jmp
jp
lods
cmp
jmp
xor
add
cwtl
cwtl
sti
scas
aaa
inc
push
push
out
out
inc
jl
cmpsl
mov
movsb
xchg
imul
push
andl
mov
out
pop
add
lahf
jnp
fnsave
out
nop
daa
fsubrs
pop
imul
in
push
mov
iret
imul
mov
shrl
sbb
dec
mov
xor
and
push
out
and
mov
test
sbb
and
mov
jnp
sub
fildl
popa
jno
or
mov
int
adc
xchg
mov
fisubl
or
jle
mov
mov
push
xchg
push
xchg
test
int
scas
fdivrl
sbb
in
cmp
movsb
add
inc
dec
cli
test
lds
enter
adc
jl
add
out
and
pop
mov
mov
or
xor
je
imul
mov
mov
lods
cmc
in
cwtl
mov
and
icebp
and
subb
scas
push
or
cmp
pop
mov
jno
sbb
jmp
mov
mov
mov
xlat
cli
scas
inc
pop
push
dec
dec
aas
cmpsb
mov
ja
xchg
mov
and
leave
pop
enter
enter
movsb
mov
xor
pop
sub
or
xchg
test
xchg
repnz
add
pop
nop
adc
cmp
push
xchg
mov
jne
adc
mov
in
js
or
cmc
mov
test
adc
fxch
pop
loopne
jno
sub
mov
out
sahf
add
ret
sbb
xor
das
ss
xor
js
aad
mov
push
mov
adc
jno
jge
sbb
add
idivb
ljmp
xchg
jae
sbbl
aas
inc
mov
in
repz
mov
das
jle
int3
in
inc
adc
pop
cmp
int3
mov
iret
cmpsl
xor
ret
lret
mov
xchg
sub
dec
push
cmpsb
lock
mov
xor
push
int
icebp
inc
cmp
push
out
std
mov
mov
pop
iret
push
test
dec
lods
sarb
loope
pop
mov
jb
xchg
mov
mov
mov
pop
sub
push
shl
test
push
hlt
pop
fxch
add
cmc
push
jae
push
mov
and
push
sub
in
sar
mov
push
pushf
rcll
sti
sub
mov
roll
add
sbb
lret
and
mov
mov
ret
mov
data16
mov
scas
add
jno
mov
inc
rcr
leave
or
imul
add
jmp
xchg
xor
ret
jbe
or
add
sub
je
nop
jns
add
mov
xchg
or
and
lea
popa
inc
mov
adc
xor
dec
hlt
rorl
std
ss
adc
pop
cld
dec
std
mov
popa
daa
or
es
sub
or
and
sar
add
jl
sub
dec
sbb
xchg
mov
imul
lods
adcl
divl
lea
cmc
movsl
push
imul
sti
cmp
lret
call
insl
stc
jnp
dec
aas
cmp
in
pop
gs
fs
lds
add
jl
enter
mov
dec
sub
ret
shll
dec
daa
cmp
ret
xchg
leave
pushf
mov
dec
jb
sbb
adc
orl
fucom
pop
andl
pop
sbb
jae
aad
mov
add
fs
sbb
add
out
iret
out
jl
mov
jmp
cli
pop
xchg
hlt
negb
cld
push
lock
jbe
vorps
push
cmp
rcrb
leave
and
mov
imul
movsl
push
mov
movsl
cmp
fs
pusha
adc
adc
pusha
mov
xchg
sub
movsb
pop
sub
int3
enter
pop
sar
jno
xchg
std
sbb
fisubrs
ljmp
mov
mov
pop
cmpsl
and
fldlg2
adc
fldcw
scas
fcomps
lret
mov
cltd
jns
loop
rcl
pop
pop
jb
outsb
sub
sbb
iret
mov
movsl
mov
mov
enter
pop
cmpsb
data16
xchg
dec
xor
mov
cmc
cmp
or
xor
mov
jnp
iret
pop
hlt
mov
cmpl
xchg
jne
xchg
clc
add
out
push
ficompl
test
ljmp
dec
cmpl
addr16
jne
mov
bound
imul
mov
orl
mov
pop
fidivl
jno
inc
xor
and
add
sahf
mov
shl
xor
inc
scas
dec
mov
push
mov
add
push
lea
mov
xchg
roll
aam
jns
repz
js
mov
cmpsb
jb
lea
into
xchg
inc
cmp
adc
rclb
and
stc
inc
fsubl
movsl
jmp
enter
in
jmp
scas
add
or
or
data16
add
fwait
lret
xchg
adc
ficoms
push
mov
mov
mov
ds
sub
popf
pop
out
lock
clc
jb
cli
xchg
ret
scas
mov
test
inc
sbb
jle
jle
mov
push
subb
divb
jge
jg
jns
push
movsb
adc
imul
stos
test
pop
dec
pop
js
mov
pop
dec
in
adc
mov
mov
or
stos
cmp
adc
and
test
mov
jecxz
js
cmp
jnp
ljmp
adc
xor
or
xchg
imull
mov
mov
mov
dec
ud2
subb
dec
mov
stos
add
adc
add
rorb
hlt
rorl
cltd
lahf
mov
pop
mov
lahf
push
test
fistps
jne
lcall
jge
cmp
xchg
dec
hlt
jbe
iret
jae
js
jb
xor
inc
or
and
pushf
mov
mov
fnstsw
adc
xor
pop
lcall
jg
and
push
loop
sti
or
jne
fisttps
add
js
push
or
js
and
and
mov
xor
mov
je
pop
add
lret
fisubrs
dec
lret
mov
stc
jo
pop
xlat
mov
and
push
pop
add
xor
jae
jge
jnp
mov
scas
mov
lahf
fcomps
lods
out
jo
adc
stc
adc
rol
repnz
dec
mov
xchg
or
add
or
jne
xor
data16
jle
nop
push
adc
imul
in
lcall
scas
iret
add
or
jp
iret
xor
jns
scas
je
lret
jnp
sbb
in
push
jne
mov
cmpsl
ljmp
jne
aaa
repnz
popf
mov
xchg
sbb
or
repnz
out
push
loope
mov
mov
pop
xor
mov
xor
inc
cld
pop
lock
mov
data16
gs
or
sbb
sub
adc
push
sbb
sub
shl
mov
dec
mov
mov
pop
rorb
rol
xor
push
test
in
xor
xchg
dec
push
insl
nop
nop
scas
cld
ljmp
call
jae
sbb
arpl
add
pop
or
je
mov
orl
jno
push
cmp
and
enter
mov
mov
je
ljmp
push
dec
xlat
jne
push
add
int3
inc
loope
mov
leave
and
cmp
pop
cmp
and
cs
mov
stos
cmp
dec
xchg
jo
add
dec
xchg
fnstcw
xchg
fwait
mov
rcrb
lret
xor
mov
xchg
mov
sbb
jmp
adc
lret
jae
pop
outsl
outsb
ja
shl
fs
mov
loop
outsb
ret
xchg
mov
jnp
shlb
shrl
add
mov
and
and
out
cmp
inc
ret
dec
cmp
pop
or
leave
jns
mov
mov
ret
pop
jmp
stc
pop
mov
mov
adc
loop
stc
mov
aad
setb
push
stc
gs
xchg
xor
push
and
and
rolb
pusha
xor
insb
in
mov
push
mov
lret
test
xor
aas
mov
pop
lds
push
nop
xchg
into
pop
xor
mov
shrb
push
int3
stc
ret
mov
and
mov
out
mov
mov
pop
sub
out
push
push
cmp
push
push
cmp
cltd
fs
je
stos
lcall
sbb
jb
mov
jnp
add
lods
xor
data16
cmp
sbbl
xor
imul
loop
sbb
jp
int
ds
or
pop
and
aaa
mov
mov
lahf
mov
testb
scas
mov
rorl
movsb
dec
sbb
jmp
push
mov
xchg
add
test
stos
mov
jo
lret
repz
cli
repz
fisubl
mov
push
lods
repnz
sahf
push
cld
enter
addr16
xchg
testb
lods
ret
xchg
inc
dec
pop
outsb
into
dec
push
xchg
xlat
pop
cmp
mov
dec
shlb
add
outsb
out
inc
lret
fdivs
mov
cmp
cmp
jae
int3
je
cmp
xchg
xchg
mov
xchg
ret
xorl
stos
xor
sbb
xlat
fidivl
xchg
lea
add
jmp
cmc
and
lea
test
lcall
dec
test
je
xchg
aad
adc
fistl
mov
jo
lock
hlt
dec
inc
cmp
mov
fidivs
shlb
ss
inc
sub
xor
das
dec
inc
add
pusha
and
int3
das
cmp
mov
lahf
inc
sbb
pop
and
sbb
popf
cmp
insb
xchg
aad
pushf
and
dec
fcoms
cmp
and
dec
aas
pop
cmp
outsl
test
loope
ja
push
mov
push
xor
addr16
add
adc
pop
inc
sub
pop
test
scas
mov
push
add
aaa
push
out
cmp
xor
repz
lock
xor
jp
mov
arpl
jnp
mov
or
xor
adc
mov
cmp
jg
inc
mov
in
out
jp
repz
adcl
aad
sbb
stc
scas
jo
cwtl
mov
popf
out
sahf
pop
mov
mov
pusha
xchg
repnz
mov
mov
mov
stos
ret
push
push
int
mov
mov
adc
in
cmp
js
mov
fadd
sub
out
das
je
sbb
push
inc
loopne
pop
or
ja
pop
hlt
adc
push
push
pop
jp
hlt
repz
imull
mov
cmp
mov
nop
sub
icebp
adc
repnz
fsubrs
or
mov
xor
leave
pusha
mov
add
call
dec
aad
jbe
cli
clc
xor
in
push
mov
sbb
push
jmp
xor
iret
mov
test
dec
or
sti
sub
les
in
fmul
imul
movsb
sbb
sti
insb
insb
cmp
cld
out
xorb
xchg
mov
test
inc
jl
cmp
call
cltd
imul
xchg
arpl
xchg
roll
pop
scas
jmp
mov
ss
adc
xor
pop
pop
inc
lds
xor
mov
dec
movl
adc
lcall
xchg
cmp
push
sub
mov
and
fmull
and
popa
or
sub
lea
clc
lds
cld
je
cld
sbb
pop
sti
ret
movsb
push
cmp
cmp
jp
xchg
jns
sbb
cmc
xlat
xchg
fucom
fs
xor
movsb
imul
insl
mov
stos
xor
loopne
push
mov
arpl
addb
fisttpll
mov
pushf
sub
out
inc
fucom
js
imull
jbe
cmp
adc
mov
jg
lods
mov
lock
dec
pop
jle
xchg
cmp
cmovo
out
mov
out
or
mov
xor
or
sahf
mov
inc
fwait
xchg
sbb
add
sbb
mov
jo
fidivl
add
aam
jge
lahf
stos
sub
adc
or
sub
lea
cltd
hlt
dec
lcall
test
popf
mov
lret
and
adc
inc
addl
add
leave
imul
cmp
std
jge
push
fsubrl
outsl
add
repnz
cld
and
inc
jnp
or
sahf
xor
jb
nop
fsubr
add
push
inc
mov
mov
pop
sub
pop
sub
lahf
jge
or
xchg
push
sbb
pop
dec
test
mov
xor
adc
fistpll
cmp
popf
cmpsl
push
lcall
fisubl
call
pop
add
inc
jmp
sti
mov
xchg
lock
xchg
add
xor
mov
cld
out
orb
loope
clc
mov
jne
jne
pop
cmp
in
cld
int3
xor
jne
push
aaa
fdivr
ja
std
push
rcr
mov
mov
loop
mov
enter
je
sbb
aam
cmp
mov
xor
out
adc
dec
mov
mov
das
repnz
sub
xchg
pushf
ss
loop
push
mov
inc
outsb
pop
jg
jbe
mov
insl
aas
or
xor
fildll
dec
cmpsl
les
sarb
popa
rorb
xchg
push
cmp
lahf
fst
jns
stos
roll
dec
mov
jae
out
repnz
outsl
cmp
and
gs
adc
sahf
dec
adc
pusha
loope
cmpsb
pop
movsl
dec
jne
dec
leave
push
mov
aas
cmpsl
add
xor
aaa
hlt
push
rcr
mov
inc
adc
push
std
push
cmp
fsin
and
std
and
ja
out
daa
sbb
jecxz
loope
shlb
push
loop
push
push
and
add
add
imul
popa
push
sbb
or
xchg
rclb
out
div
jl
lods
lret
jae
add
stos
jl
dec
fiaddl
cmp
push
and
je
cmp
dec
push
jo
clc
jge
xor
mov
fstp
push
inc
int3
sbb
sub
nop
mov
lods
aaa
mov
jmp
fnstcw
pop
pop
jns
add
add
add
pushf
insl
ja
dec
das
mov
mov
adc
mov
cmp
dec
imul
or
es
mov
out
push
inc
xchg
adc
ljmp
insl
aad
jg
push
and
lcall
add
lret
mov
out
fnsave
fbstp
sub
mov
jecxz
test
xor
xor
sahf
jl
or
shrl
lret
out
add
out
push
jle
test
inc
lea
add
scas
mov
or
nop
loopne
in
adc
aas
sub
jo
inc
add
scas
or
adc
jmp
loopne
xchg
loope
imul
in
lcall
push
and
in
push
jp
rcl
es
scas
and
mov
jp
xor
es
adc
loopne
xchg
cli
ficoms
mov
out
and
loope
addb
sub
jb
rorb
out
adc
mov
xchg
stc
mov
pop
xchg
dec
adc
loopne
aas
filds
push
mov
loope
xor
in
outsb
inc
sub
movsl
push
dec
push
repz
sbb
faddp
fwait
mov
pop
ffree
inc
xlat
jmp
std
scas
push
sub
scas
push
loope
hlt
dec
mov
aas
xchg
push
ja
sahf
std
push
fstpt
add
sub
loop
sbb
mov
sahf
pop
jno
pop
dec
jne
orl
cltd
mov
jb
jbe
jle
jp
fstpl
cld
sti
nop
imul
add
gs
cmpsb
xchg
insl
aas
sahf
dec
xor
ss
jo
lret
add
mov
fwait
lret
mov
mov
or
dec
imul
mov
inc
lret
inc
adc
aaa
fs
xor
mov
fcmovne
outsb
call
adc
sbb
mov
popa
rcrl
inc
pop
push
lods
push
sti
lea
dec
popl
lods
cmp
pop
les
push
push
cmp
enter
aam
fcoml
aad
leave
fisttpl
mov
out
jle
loop
mov
mov
in
fmul
push
adc
enter
xchg
and
testl
cmp
and
lahf
or
ret
xor
pop
mov
je
mov
pop
das
sbb
sub
xchg
sbb
lods
lock
push
mov
xchg
xchg
rcl
inc
negl
pushf
loopne
cmp
jp
idiv
xchg
ret
pop
dec
repz
fstpt
or
push
loope
std
pop
jmp
iret
dec
fiaddl
mov
mov
lcall
daa
sarb
js
icebp
bound
jecxz
sub
int
jle
push
hlt
cmp
lahf
xchg
mov
cltd
adc
in
mov
add
sbb
mov
loope
mov
cmp
cmp
inc
fidivrs
cmp
adc
xchg
or
in
sbb
jns
mov
lods
aaa
push
je
jo
je
push
leave
xchg
inc
adc
and
mov
dec
mov
cmp
or
mov
xchg
enter
push
mov
push
cmpsl
and
xchg
dec
xchg
test
pop
gs
lret
call
dec
sbb
jge
fwait
dec
das
xchg
mov
inc
call
cld
ficoml
movsb
xor
xor
outsl
cmpsb
shl
jns
stos
ljmp
xlat
pop
jnp
cwtl
push
mov
leave
pop
stc
adc
mov
pushf
insb
xor
xchg
and
adc
or
inc
inc
repnz
push
dec
dec
inc
popa
andl
mov
pop
adc
pop
mov
mov
push
add
shr
sub
push
out
stos
lcall
cmp
cmpb
adc
mov
movsb
rclb
jge
mov
cltd
cmpsb
aam
sbb
push
xor
jl
fwait
shrb
daa
xor
jae
adc
jns
pop
pop
fisubs
push
loopne
ret
dec
fistps
push
xor
jnp
outsb
adc
fcoml
js
sahf
and
mov
and
xchg
dec
push
ficompl
xor
xor
jge
movsl
stc
or
loop
lret
add
dec
or
adc
ds
xor
in
mov
dec
mov
push
f2xm1
imul
mov
outsb
jae
insb
mov
frstor
or
and
leave
pop
xchg
stc
jle
hlt
ret
loopne
add
xchg
xor
ds
dec
sbb
jl
clc
lea
test
mov
mov
sub
leave
and
push
mov
mov
orb
push
add
jle,pt
mov
adc
sbb
int
outsl
test
ja
sub
inc
fcomip
ljmp
in
jo
pop
daa
or
mov
fcmovb
jo
leave
enter
mov
fisttpl
repz
jnp
cmpsl
popa
call
ljmp
cs
push
lret
ja
cmp
sarl
pop
jnp
sub
adc
std
xchg
leave
dec
pop
jnp
in
sbb
pop
pushf
lret
pop
xor
inc
or
daa
mov
cld
mov
dec
adc
mov
pushf
iret
mov
push
xor
xlat
call
cmpsl
mov
mov
mov
jp
ds
xor
or
fstl
cmc
xchg
mov
ja
push
shlb
ss
mov
cmp
sub
dec
sbb
sbb
mov
lods
fwait
mov
aaa
fsts
mov
in
das
xchg
aas
int
add
js
adc
pop
popf
arpl
aad
ja
frstor
xor
push
inc
or
int3
out
das
call
inc
mov
loopne
sbb
adc
shll
scas
sub
aas
fbld
cmc
enter
pop
mov
pop
int3
jge
sub
pop
cmpsb
and
xor
scas
xorb
pop
ds
xchg
and
stc
testl
stos
outsb
sbb
movsb
jle
aaa
cli
sahf
xor
xchg
jl
loop
mov
std
hlt
mov
fidivs
out
mov
or
test
int
mov
pop
imul
ja
pop
mov
cmpsl
js
cmc
push
je
data16
sub
inc
mov
xor
stos
add
or
inc
aas
jnp
and
cmpsl
enter
das
dec
push
aas
hlt
sbb
xchg
mov
push
jbe
mov
inc
test
sbb
inc
xchg
imul
sahf
mov
jae
or
xor
push
jno
mov
push
dec
roll
clc
fs
xchg
sahf
inc
add
popa
sub
sub
lret
jecxz
mov
loop
aam
push
loope
dec
outsb
inc
pop
adc
cmc
rcr
out
lahf
call
xlat
push
mov
pop
stos
test
test
mov
out
idivl
and
roll
or
push
add
fcmovb
push
sub
and
jno
out
popa
cld
out
or
dec
imul
in
in
aaa
fidivrl
push
dec
mov
imul
jns
out
or
cwtl
mov
or
movsl
push
dec
jns
pop
or
push
mov
pop
push
xor
test
repnz
leave
mul
jg
fldl
mov
nop
nop
sti
test
repz
repnz
icebp
call
fidivl
cmpsb
imul
add
jge
inc
loopne
int3
std
adc
and
xor
ficompl
fcompp
out
push
addr16
mov
js
jge
icebp
shll
mov
mov
out
jae
push
dec
mov
das
push
xchg
stos
xchg
mov
mov
cli
fnstenv
pop
in
jge
fsubl
adc
push
jb
sahf
fstl
pop
pushf
stos
push
addr16
ds
je
dec
or
outsl
cmp
daa
icebp
or
imul
je
xchg
dec
js
das
or
push
test
lea
push
fcoms
lahf
je
sub
fidivrs
ficoms
and
adc
adc
dec
cmp
mov
xor
jbe
mov
stos
movhps
jno
pop
adc
cmp
xchg
test
sbb
add
stos
gs
sbb
ljmp
mov
in
stos
pop
loop
dec
fadds
outsl
testl
shll
ret
mov
movsb
popf
sbb
fxch
call
mov
sarl
aas
sbb
jge
into
xor
jns
popl
pop
push
adc
xor
adc
fs
std
or
pop
and
aas
sbb
sub
sbb
adc
pop
out
adc
jge
bound
dec
movsl
iret
sub
inc
push
cld
shrl
aaa
sbb
mov
fidivs
mov
outsb
inc
mov
out
int
mulb
enter
mov
fdivs
lods
sbb
cmp
xchg
dec
jne
sub
das
add
sbb
sahf
sbb
into
jne
les
mov
dec
mov
jmp
push
jmp
movsb
push
rorb
xor
ja
movsl
lods
out
jb
jge
fdivrs
push
xchg
mov
in
pop
mov
popf
dec
clc
out
cmp
fnstcw
or
pop
jge,pn
test
dec
outsb
pop
jmp
sub
lcall
in
repz
inc
xchg
push
mov
mov
mov
xchg
enter
adc
lock
pop
add
sub
pop
xchg
and
rorb
jle
fdivs
mov
mov
rol
das
pop
aam
mov
fs
jns
aaa
mov
adc
pop
jo
pop
push
leave
jp
push
insb
mov
pop
pushf
sbb
insl
and
out
mov
insl
inc
jne
and
mov
xor
add
lods
sbb
cmp
add
aaa
sbb
scas
nop
lahf
mov
jne
test
call
out
dec
repnz
and
push
mov
jmp
fmuls
jae
pushf
repnz
cmc
lods
imul
lcall
push
dec
in
ja
dec
repnz
push
sahf
out
or
arpl
lock
inc
arpl
ret
loopne
mov
inc
pop
sbb
xor
adc
mov
fimuls
inc
jne
push
mov
into
imul
adc
std
or
stc
pop
fdivl
lods
xchg
cld
or
push
pop
sbb
imul
jecxz
pushf
cmc
push
lret
pandn
sahf
mov
mov
push
in
pop
lea
stos
mov
fwait
int
bound
pop
mov
call
adc
cmpsl
mov
mov
xorl
lock
pop
mov
jmp
rorl
sbb
add
mov
cwtl
and
out
and
cmc
cmc
jle
and
jg
push
fimuls
out
cmp
jl
mov
jecxz
lds
out
sub
gs
xchg
cli
outsb
inc
sub
mov
xor
ja
in
push
pop
sti
les
xor
insl
lahf
pop
stos
jb
mov
inc
jno
mov
sub
movsb
inc
rcl
andl
inc
jge
sub
mov
loopne
test
mov
cmp
scas
mov
dec
inc
cmp
cmp
loop
inc
sub
jge
push
adc
lods
test
pop
imul
sar
mov
inc
inc
lret
dec
fstps
scas
aaa
push
jg
gs
aaa
mov
and
cli
xor
xchg
fs
lods
xchg
das
daa
in
mov
jp
add
dec
sbb
imul
mov
subl
or
out
xor
dec
in
jnp
push
cmpsl
shrd
orb
sub
add
jecxz
adc
mov
fstps
call
push
jg,pt
xchg
cmpsl
testb
push
push
cmp
dec
and
cmpsl
scas
xor
dec
fs
mov
repz
clc
xchg
xor
pop
push
scas
mov
adc
mov
test
stos
dec
es
and
adc
adc
push
sub
mov
lods
scas
push
fnstcw
dec
push
shl
and
push
ja
lock
sub
jns
or
push
jecxz
outsb
or
jecxz
mov
jae
lahf
data16
cli
cmp
cmp
pop
mov
outsb
pop
out
xor
dec
pop
mov
jg
cmp
outsl
mov
jmp
xchg
int
clc
scas
xor
pop
imul
lock
adc
mov
in
imul
nop
push
out
lods
jb
sar
rol
mov
jge
nop
xlat
and
push
mov
cmpsl
push
outsl
fcoms
and
mov
cwtl
out
addr16
push
call
push
subb
lret
jbe
lods
sub
mov
out
rol
cmp
mov
add
idivl
xor
and
mov
bound
popf
or
bound
movsb
out
les
mov
xchg
mov
cmp
dec
dec
cmp
xor
rcrl
jno
icebp
ja
sti
sbb
mov
jns
and
ss
imul
dec
shl
das
shrb
pop
add
mov
and
cmp
xor
int
inc
hlt
mov
ret
sarl
cmp
fwait
cwtl
or
ret
sbbb
loopne
push
sbb
mov
movsb
mov
xorb
cld
int
adc
repz
in
addr16
or
pusha
jge
aam
rcr
cld
mov
gs
call
lock
bound
xlat
xchg
adc
push
adcl
mov
addl
push
add
inc
inc
sbb
cmp
cld
lods
mov
pop
dec
mov
int3
nop
mov
adc
jp
test
adc
fs
nop
pop
sbb
pushf
jb
dec
ss
or
xchg
add
inc
jae
sub
sbb
dec
loop
int3
loope,pt
sbb
insl
int3
mov
into
push
mov
cld
add
push
inc
pop
xor
mov
out
ja
fdivrp
fcom
ret
pop
push
leave
dec
sbb
out
in
in
mov
mov
jne,pn
cmp
into
aaa
push
outsb
test
mov
xor
pop
lea
fldcw
or
hlt
into
call
aad
sarl
cmp
popa
cmp
repz
mov
rep
jge
imul
je
popa
cltd
popa
mull
pop
cmc
xchg
imul
push
sbb
jo
xorb
push
iret
xor
mov
adc
sbb
cmp
jmp
mov
xor
ss
cmp
ja
mov
dec
adc
add
test
addr16
cmp
sbb
push
sub
sbb
idiv
or
pop
cmpsb
loop
pop
add
ret
ds
jl
add
lcall
cmpsl
push
dec
dec
add
jmp
push
dec
xor
push
pop
leave
push
sub
sbb
adc
int
add
insl
clc
sub
xor
mov
and
inc
jg
add
lods
xchg
ds
filds
cmp
ret
cltd
out
data16
andb
mov
add
cmp
or
jbe
lcall
push
dec
inc
fwait
push
xchg
inc
adc
xchg
pop
rcr
insb
outsl
imulb
inc
pop
out
iret
fxch
insl
imul
mov
jmp
mov
fcmovnu
js
sbb
sub
xchg
xorl
and
loop
jg
push
jp
and
dec
testl
popa
cmpsl
add
mov
dec
clc
outsl
or
add
cld
adc
push
fwait
xor
outsb
sub
jo
pusha
jo
int3
dec
xchg
or
lret
pop
push
jp
inc
ds
test
aam
adc
mov
loopne
dec
add
pop
test
mov
jg
mov
sub
xor
add
andl
ljmp
fmul
sbb
nop
enter
sbb
pusha
pop
data16
into
xchg
loopne
movsb
lock
inc
mov
orl
cli
repz
add
jbe
je
mov
sti
dec
mov
insl
dec
dec
xor
test
ficoml
pop
dec
adc
inc
xor
lret
dec
dec
inc
pop
aam
stc
pause
inc
enter
cmp
mov
xor
push
mov
stc
xor
outsl
or
add
ds
adc
sbb
xlat
test
repnz
xor
out
inc
cmc
cmp
lahf
or
xchg
and
or
jno
push
push
repnz
and
out
ret
push
mov
mov
pop
hlt
dec
fs
outsl
int3
icebp
mov
push
xor
or
sub
int3
shrb
lods
test
mov
test
push
rol
push
adc
pop
sbb
sub
mov
mov
xchg
fstpt
in
mov
lea
stos
dec
fidivrl
in
pop
mov
pop
int
jbe
imul
arpl
or
cmp
jb
sbb
les
popa
push
xlat
xchg
adc
rolb
xor
insb
andl
dec
ljmp
xchg
lds
andb
mov
sbb
ret
into
inc
cwtl
imul
int
sub
lret
fwait
je
pop
lret
xchg
sub
stc
inc
mov
xor
sbbb
jbe
xchg
mov
mov
pop
lret
or
rcr
in
and
lock
fwait
inc
push
xlat
and
clc
and
lea
push
fldt
sbb
movl
mov
jmp
pop
or
out
mov
ret
push
mov
fdivs
shlb
int
ja
push
iret
mov
mov
loope
add
or
inc
mov
fs
push
testl
xchg
int
cli
call
jne
and
into
repnz
daa
mov
hlt
add
mov
push
je
addps
mov
inc
xor
push
add
into
into
push
and
popa
pop
inc
push
and
sarb
aad
dec
ds
addr16
inc
or
cmp
push
ss
sbb
lcall
sub
pusha
pop
xchg
add
add
jge
xchg
push
mov
push
or
or
jno
inc
pop
mov
sbb
jno
and
cmp
xchg
sahf
lea
outsb
dec
icebp
shlb
push
lcall
add
mov
imul
and
dec
inc
mov
or
xor
and
cld
test
fisubrs
ret
out
or
rclb
cltd
xor
sub
lds
stos
loop
dec
frstor
xor
jl
and
inc
cmp
mov
mov
jp
roll
xor
je
adc
cltd
sti
in
mov
mov
push
out
test
lods
and
mov
call
jno
sbb
repnz
xor
in
insl
push
sub
lret
aaa
pop
ret
ds
mov
lea
repnz
repz
and
stos
out
scas
cmp
mov
adc
jnp
loope
pop
sub
adc
push
dec
sub
lods
xchg
cmc
aas
xchg
xchg
daa
sub
rorl
push
mov
mov
cmpsb
sbb
pop
fwait
pop
stc
push
sub
and
and
jp
jmp
imul
inc
popa
fdivs
cmp
mov
mov
repz
jne
sub
cs
sbb
test
cmp
cwtl
mov
sub
cmc
inc
ficompl
repnz
sub
add
or
cmp
jl
dec
mov
ljmp
das
add
clts
mov
sub
fcomps
addr16
and
push
sbb
aam
dec
rorb
in
xor
insl
popf
xlat
mov
daa
cmc
hlt
xor
int
sbb
sbb
push
pusha
sub
je
in
pop
jno
arpl
cs
or
mov
imul
mov
xchg
jbe
and
cltd
mov
lret
data16
enter
clc
jle
aaa
into
cmc
xchg
adc
xchg
mov
sub
jb
or
add
scas
mov
sub
sahf
cmp
xor
inc
call
movsl
movsl
jbe
or
outsl
dec
cmp
lds
lret
loop
scas
jbe
shr
add
pop
jbe
adc
bound
or
insb
and
cmp
inc
je
aad
jg
pop
mov
pop
inc
std
cmp
jb
icebp
icebp
pxor
aaa
xchg
jmp
sbb
xlat
sbb
push
outsl
outsl
fldcw
rorb
jl
movsl
push
inc
jnp
idivb
dec
int3
faddl
inc
jns
dec
push
dec
dec
pop
inc
outsb
mov
pop
lcall
dec
push
test
movsb
adc
and
ret
insb
push
sahf
lcall
inc
movsb
adc
adc
jmp
and
mov
xchg
inc
cli
ret
ljmp
jns
ficoml
push
out
call
xchg
adc
stc
data16
lahf
repz
lahf
or
or
jecxz
pop
jp
icebp
mov
mov
mov
mov
xor
mov
mov
out
and
stos
out
lcall
out
sbb
subl
mov
xchg
inc
lea
sbb
mov
mulb
pop
cmp
fdivl
rclb
mov
pop
arpl
xorb
or
hlt
sbb
cmc
add
les
movl
jo
mov
dec
cmp
adc
xchg
test
mov
mov
jecxz
mov
test
jmp
sbb
lds
cmpsl
xchg
movsl
in
inc
dec
pop
std
inc
mov
push
dec
incb
ret
add
scas
sbb
or
insl
add
mov
xchg
fs
mov
pushf
fwait
std
int
mov
rolb
aam
sbb
sub
iret
xchg
mov
push
test
movsb
mov
mov
movsb
xchg
mov
aad
push
rclb
push
add
mov
int
xchg
inc
imulb
lods
in
pushf
cs
mov
hlt
jb
xor
push
repnz
lods
lahf
std
mov
imul
call
or
cmp
adc
add
lret
mov
inc
dec
je
inc
or
wrmsr
shll
xor
and
inc
outsl
neg
or
nop
jge
add
push
stc
cltd
pop
dec
addb
push
adc
cmp
lods
inc
adc
test
ja
shl
stos
gs
ljmp
add
mov
dec
mov
pushf
testl
lods
mov
fs
mov
mov
dec
cmp
push
pop
mov
sub
cmp
xchg
push
mov
xor
imul
fidivl
xchg
cmp
jnp
cmpsl
push
lret
mov
sti
test
add
xor
xor
cmc
test
scas
jg
cld
fs
dec
test
inc
add
int
aam
rolb
pop
xchg
je
in
outsl
leave
faddl
fidivrl
lcall
pop
ffree
add
sub
cmp
stos
les
sbb
subl
js
or
jmp
fwait
sti
xorl
arpl
fdivrl
adc
push
popf
mov
pop
nop
icebp
sahf
outsl
pusha
in
lea
sbb
pusha
push
out
xchg
shll
fsubrs
pop
icebp
push
callw
mov
push
das
cli
inc
outsb
push
cs
mov
cmp
jbe
sub
fistl
inc
adcl
mov
mov
lret
iret
add
push
and
aas
lods
sub
or
inc
dec
cmp
add
nop
push
cltd
push
push
xchg
hlt
pushf
mov
js
rorl
push
push
dec
lds
mov
rcrl
adc
sahf
int
push
add
in
push
scas
iret
ficoms
sbb
je
jno
aad
mov
dec
mov
jmp
iret
pop
cmp
push
fwait
or
int3
mov
icebp
clc
std
add
rolb
fistl
xlat
fistl
movsb
dec
repnz
mov
inc
pop
pop
std
cmc
hlt
dec
cmp
jae
pop
xor
testb
mov
js
int
lret
lock
mov
jne
push
arpl
or
popa
mov
popf
or
and
jp
outsb
pop
enter
ficomps
pop
inc
shrl
inc
lcall
arpl
repnz
sbb
mov
jmp
aas
test
dec
pop
push
dec
mov
mov
lahf
icebp
mov
jnp
xchg
lock
mov
pop
push
adc
adc
or
repz
subl
xchg
sarb
clc
add
xlat
in
mov
cmpb
shrl
xchg
push
cld
and
jle
scas
fstpl
ror
jle
jno
inc
mov
shll
pop
leave
mov
push
xchg
scas
hlt
ffree
sbb
loop
mov
lcall
repz
lds
pop
sub
rcrb
test
sub
xchg
leave
jmp
inc
jbe
and
mov
push
mov
subb
fisubl
iret
repnz
sub
testl
insl
mov
mov
and
jmp
pop
fidivl
roll
push
rcrl
arpl
mov
xor
inc
ja
cmp
shlb
clc
leave
and
pop
test
xchg
movsl
leave
add
addr16
cmpsl
jp
ds
ror
xchg
test
addb
stc
or
fmuls
mov
test
inc
out
icebp
loope
lods
mov
je
insl
sti
xchg
inc
out
pop
mov
icebp
jecxz
cs
sahf
js
inc
out
and
fstpt
add
dec
movsb
mov
and
mov
mov
dec
dec
dec
add
and
add
xor
subl
or
fcmovne
lods
fistpll
cld
rclb
dec
mov
mov
shlb
xlat
xchg
jge
push
add
scas
cmp
or
pop
lea
cltd
or
arpl
and
out
jg
cmp
mov
cmpsb
inc
roll
in
pop
data16
push
rcrb
add
andb
test
lods
sbbb
mov
push
mov
rclw
testb
jne
fnstsw
cmp
cltd
stos
xchg
push
addr16
ds
and
stos
jecxz
xchg
sub
fs
inc
sbb
test
imul
ljmp
or
xlat
popf
jo
arpl
sbb
out
add
hlt
push
dec
test
pop
scas
mov
fstpl
dec
loopne
clc
dec
mov
divb
movl
scas
sti
enter
or
xorps
dec
mov
mov
mov
xchg
decb
adcl
test
in
jg
xchg
jge
or
fs
mull
shl
mov
test
incl
mov
xchg
daa
inc
fildl
sbb
cmp
in
test
es
outsl
mov
addr16
mov
mov
dec
mov
sahf
add
jns
in
inc
negl
inc
inc
adc
sub
adc
flds
jo
sub
mov
push
push
add
test
lcall
or
int3
rcrl
mov
or
je
xchg
ja
push
push
add
ja
jo
xchg
adc
xlat
jno
std
in
jmp
divl
outsb
jo
pop
rolb
mov
push
pop
push
pop
pop
inc
inc
cmp
push
cmp
std
cwtl
ret
xchg
cmpsb
jg
and
cltd
leave
imul
jns
rclb
xchg
lret
mov
gs
repnz
pop
sahf
lea
cmp
pushf
mov
call
or
mov
push
ret
mov
fnstsw
fcoms
sub
mov
sti
lds
xchg
mov
std
push
pop
mov
fstpl
sub
mov
adc
sub
inc
xor
pop
add
mov
mov
pop
jmp
nop
add
nop
jae
cmp
cltd
dec
ja
rcrl
scas
xchg
mov
add
popa
mov
xor
mov
repnz
addb
dec
dec
icebp
cmc
xchg
bound
mov
sbb
push
and
ja
pop
popa
push
cli
nop
mov
rcrl
sbb
into
or
adc
iret
pop
faddp
mov
lret
movsl
cmp
shlb
fidivrs
mov
cmp
in
loopne
mov
outsb
insb
dec
adc
pop
sbb
push
clc
mov
push
sub
scas
adc
sub
xchg
aad
add
cwtl
sahf
push
mov
shl
lcall
imul
shl
popa
adcl
sub
stc
pop
and
sub
mov
pop
popa
sub
push
sti
inc
cld
adc
jb
ss
fs
fcoml
or
mov
lret
pop
push
orl
lahf
and
adc
cmp
stos
ds
pop
movsl
xchg
loope
into
ret
iret
cmp
icebp
out
cwtl
adc
dec
and
xor
std
lods
pop
mov
sbb
xchg
cli
jg
cmp
adc
bound
cld
push
icebp
test
sbb
inc
lret
arpl
xchg
int
mov
ja
iret
xor
adc
shll
test
lea
lods
mov
jne
test
dec
bound
sbb
xchg
sbb
xchg
nop
dec
jecxz
xchg
mov
dec
add
lock
std
dec
jb
pop
or
aad
out
imul
jg
sbb
mov
imul
mov
cmp
fldt
push
mov
push
pop
cmpl
loopne
pop
jbe
mov
hlt
ljmp
mov
xor
inc
cmp
mov
mov
daa
push
movsb
push
movsb
or
adc
cltd
testl
das
test
int3
imul
aad
or
push
outsb
jg
jle
jns
push
or
cld
jp
add
pop
cmpsl
lods
push
rcrl
fwait
add
mov
imul
out
dec
sub
popa
dec
or
movsl
jb
mov
mov
jge
xor
ret
push
dec
enter
scas
fs
xchg
mov
lret
sahf
in
fsubrs
add
add
inc
loope
pop
aad
inc
mov
xor
pop
js
sbb
icebp
adc
pop
aaa
inc
rcl
aad
sar
push
xchg
cmp
dec
jne
push
mov
lcall
enter
leave
loop
dec
loop
or
arpl
lret
shlb
movsb
pop
mov
and
cmp
aaa
jmp
pop
xchg
insl
lret
sbb
cmc
cltd
ljmp
xchg
loopne
sub
adcl
adc
jle
aad
adc
icebp
cwtl
imul
jp
xchg
dec
add
adc
dec
idivb
pusha
popa
fimuls
adc
inc
addr16
xor
fsubs
push
lods
adc
std
loope
nop
pop
mov
rcll
int
fs
int
dec
fidivrl
sub
in
xchg
cmpsb
and
dec
dec
xchg
mov
pop
sahf
ffree
scas
ja
imull
mov
out
cli
pop
aad
and
jnp
icebp
jo
fmul
test
cltd
pop
sti
pusha
lea
scas
mov
cmp
pop
shll
cmp
push
and
dec
push
pop
lret
inc
stos
das
mov
xchg
cmp
pop
xor
sub
sbb
inc
push
xor
add
jg
clc
mov
iret
or
mov
and
push
xchg
dec
popf
jg
dec
or
pop
stc
in
add
dec
jne
inc
imul
push
and
popa
push
jmp
xchg
cmpsb
pop
and
pop
mov
into
inc
outsb
or
pushf
mov
sub
mov
and
cmp
lea
pop
xchg
bound
sub
hlt
pusha
mov
mov
mov
lds
fiaddl
xchg
cmc
mov
mov
xchg
test
xchg
sub
in
dec
and
clc
jne
xor
call
sti
mov
cmp
jmp
lock
mov
popa
cmp
push
je
fsubr
xor
cld
inc
sbb
xchg
ds
ret
mov
jecxz
adc
bound
mov
mov
or
sub
sub
and
out
clc
adc
inc
dec
xchg
xchg
pop
mov
adc
adc
dec
xor
shrl
push
sbb
les
lock
testb
dec
or
jno
dec
fisubl
mov
jp
sub
imul
or
lahf
call
sbbb
xor
cmp
scas
out
push
xlat
sub
push
mov
jbe
xchg
clc
lock
or
xlat
outsb
inc
xchg
add
fimuls
push
pop
jo
rclb
sbb
or
je
out
dec
or
test
repz
inc
in
xchg
jmp
inc
dec
pop
aaa
pop
repnz
jecxz
pop
std
adc
inc
jp
rcrb
jge
xchg
pop
sbb
dec
out
cmc
or
mov
mov
daa
adc
inc
jo
out
inc
ljmp
stos
pop
leave
pop
mov
mov
xlat
int
int3
mov
cld
push
imul
adc
in
dec
sbb
or
ret
sbb
xchg
mov
adcl
and
iret
or
int
jmp
or
mov
dec
xor
rep
cmpl
lret
outsb
push
dec
insl
outsb
jl
outsl
pop
push
dec
popa
or
lods
addb
out
test
mov
push
aas
movl
in
pushf
ret
aas
pop
mov
and
cs
sbb
sti
js
inc
ss
adc
pushf
sub
sbb
insb
fs
cs
inc
aam
pop
scas
xor
cmpsb
inc
mov
daa
cmp
jnp
sub
jmp
pop
jb
jmp
outsl
lds
sarb
lret
or
ljmp
dec
mov
inc
jnp
inc
dec
inc
pop
les
aaa
aad
orl
pop
sub
loop
adc
mov
sbb
lock
cmp
push
sub
cmp
decb
add
dec
sub
repz
jnp
and
stc
rclb
fsubr
lret
mov
lods
push
sbb
outsb
jge
addl
int
xchg
pop
jne
pop
xchg
test
repnz
pop
mov
out
movsb
mov
mov
sbbl
mov
fldl
pushl
mov
into
mov
dec
jo
mov
mov
dec
cmp
sbb
sbb
rclb
inc
into
stos
sbb
cmp
add
ficomps
mov
mov
jle
jge
mov
subb
jns
xor
mov
or
pop
test
push
push
imull
cli
outsb
loope
in
pop
outsl
and
sbb
pop
mov
or
and
xchg
xchg
mov
jno
xor
fsubs
lea
mov
mov
out
movsb
shl
jnp
push
add
addb
faddl
ret
psubsb
add
mov
testb
fildll
pop
and
mov
dec
add
or
jae
dec
lcall
pop
je
fwait
seta
jae
mull
repz
dec
add
adc
insl
cld
and
jae
mov
cmpsb
pop
push
roll
movsl
iret
jle
out
xchg
xchg
xchg
cmpsl
lods
cs
test
inc
hlt
imul
add
ss
cmp
subb
or
lods
dec
adc
jno
cmp
push
pop
cmpsl
and
dec
shll
mov
call
cmc
fcom
inc
arpl
cmp
cmpl
aad
mov
test
in
dec
jg
lods
push
mov
daa
lods
int
shl
jnp
fwait
mov
cwtl
popf
out
jecxz
aaa
stc
loope
imul
movsb
dec
and
dec
sbb
add
dec
xor
out
lea
sbb
sub
pushf
jb
cs
je
jne
outsl
mov
ds
ret
push
push
xor
push
add
add
jne
adc
xlat
or
aad
adc
sub
mov
mov
inc
scas
jmp
icebp
ss
sahf
imul
outsb
xor
lods
jmp
stos
addl
mov
idivb
jae
cmp
jb
addr16
mov
sbb
testb
push
jb
pop
insl
lahf
mov
iret
jno
clc
and
pusha
mov
and
mov
cmc
and
leave
mov
fldl
mov
imul
ljmp
cmp
enter
pop
outsl
call
arpl
test
in
and
jg
jno
cmp
adc
mov
call
pop
cmp
es
pop
fdivrs
sbb
mov
loopne
cmp
orl
add
dec
outsl
ss
daa
xor
aam
dec
sbb
std
outsl
xor
in
xor
fidivrs
clc
popf
jne
shrb
rcrb
dec
or
rolb
mov
sahf
add
mov
xchg
jbe
imul
stc
je
mov
inc
adc
fdivrs
outsb
lods
cmpsb
leave
mov
into
scas
xchg
mov
in
mov
cmc
or
inc
call
mov
andl
dec
lock
rcrb
bound
sbb
incl
cld
xchg
adc
call
or
mov
mov
push
movsb
out
adc
nop
push
jl
push
sbb
mov
rcrl
mov
dec
push
dec
xor
ja
pop
jmp
push
mov
jne
mov
sbbb
stc
ret
fildll
mov
jbe
jp
mov
lods
inc
lock
push
inc
mov
sysret
out
dec
lahf
bound
test
fldl
cmp
jecxz
inc
jbe
dec
lahf
stos
pop
sub
or
cmc
jbe
stos
mov
int
jle
cmp
leave
xor
pop
push
popf
or
lret
and
xchg
andl
inc
cmp
bound
cmp
jl
cmc
pop
ret
push
xor
pop
jle
push
shrb
cwtl
cwtl
jl
test
dec
xchg
push
mov
call
fcmovnu
in
xor
ljmp
fsubs
xchg
jns
lods
ss
inc
jecxz
outsl
ja
sub
cmp
cmpsb
or
fucomi
fs
sub
cmp
dec
mov
lds
popa
or
and
cmpsb
ficompl
cli
or
inc
pusha
push
xor
leave
cli
mov
cmpsb
pop
popa
mov
or
jnp
inc
cmpsl
addr16
push
out
divb
mov
mov
cli
adcl
enter
daa
push
cmp
mov
mov
aaa
cmp
testb
sub
aam
inc
xchg
dec
ja
mov
xor
es
adc
or
scas
pop
loopne
icebp
cmp
pop
adc
add
andl
clc
and
push
ljmp
std
cltd
ss
ret
mov
jmp
push
jle
mov
outsl
rcrb
shrl
stos
mov
jp
shl
je
outsl
add
addr16
pop
push
pop
dec
adc
add
ljmp
cli
push
js
mov
inc
mov
lds
shlb
mov
negb
cs
adc
pop
imul
adc
sarb
jbe
sahf
testl
inc
mov
pop
inc
inc
or
push
data16
mov
push
xor
adc
mov
lock
je
dec
dec
xor
jae
dec
mov
leave
cmpsl
aad
pop
mov
pusha
lcall
jnp
jno
and
ljmp
add
sub
cli
cltd
fwait
imul
imul
jmp
inc
ja
add
stos
ja
mov
int
push
mov
pop
xchg
and
fildl
xabort
jle
inc
lret
addr16
das
loop
pop
dec
aam
mov
or
sbb
shll
fdivrp
loop
lods
movsb
cmp
or
mov
fs
in
xor
stos
das
or
pushf
nop
push
pop
sti
sbb
pop
addr16
push
test
test
test
sub
cltd
jge
imul
lds
xchg
xchg
arpl
loopw
leave
push
std
pop
je
xlat
sti
arpl
jge
ret
test
hlt
stos
push
inc
pop
je
ret
add
sbb
push
pop
lret
mov
push
sbb
dec
inc
imul
cmp
int
dec
push
and
xchg
adc
add
enter
or
adc
mov
scas
lahf
icebp
sahf
cmpsl
shlb
cli
mov
nop
shl
das
dec
inc
test
roll
movsb
notb
add
adc
pop
gs
jge
test
or
sbb
dec
jnp
loope
mov
scas
cmp
pop
hlt
notb
sahf
rcrl
mov
les
sub
testl
mov
aaa
add
lret
and
mov
dec
adc
incl
inc
dec
or
in
sub
dec
dec
jne
pop
mov
lret
add
push
dec
xchg
test
ds
pop
push
lock
ss
sbb
sbb
jl
cmp
push
shr
xor
scas
in
in
pop
test
mov
or
dec
or
jge
mov
mov
cwtl
and
mov
inc
shr
in
sbb
pop
cmp
dec
out
cmpsb
popf
and
pop
in
push
xchg
cmp
rcrl
fisubs
and
push
or
pop
adc
mov
xchg
mov
sbb
stc
in
pop
lret
mov
push
push
xor
iret
aad
inc
shl
rcrb
in
pop
jbe
addl
mov
mov
adc
fcomi
push
xchg
stos
scas
iret
cltd
mov
cmp
and
xchg
out
sar
xor
or
ret
mov
jno
add
imul
push
xchg
adc
sub
add
add
xor
shr
and
jecxz
push
xor
nop
cmp
pop
sti
sbb
dec
add
outsl
fiaddl
sbb
push
push
cmp
es
cmp
cmp
data16
xchg
ljmp
mov
or
mov
out
cmpsb
pop
sbb
mov
xchg
shrb
or
leave
sub
pop
xchg
in
movsl
inc
push
xchg
pop
or
mov
jg
adcb
sbbl
loopne
rcll
movsbl
mov
repz
push
cmp
int3
movsl
mov
pop
leave
lods
outsb
push
pop
mov
inc
xor
pop
lret
leave
pop
push
jo
lcall
stos
adc
push
jne
dec
data16
add
pop
roll
xlat
and
xchg
mov
fstpl
mov
jo
push
lret
inc
mov
insl
test
sub
or
sbb
xchg
in
xchg
pop
stos
xchg
mov
out
shld
push
fwait
iret
scas
je
jo
push
loopne
pusha
dec
imul
mov
mov
sub
fisubrl
andb
push
push
push
lock
sub
xorb
gs
inc
adc
std
mov
push
popf
xchg
lea
push
test
lea
fs
into
pop
jno,pt
pusha
jo
nop
cmp
clc
enter
ffree
inc
test
das
jl
ljmp
xor
mov
outsl
addr16
xchg
inc
cmp
add
adc
xchg
cli
aad
and
and
popf
jg
in
icebp
mov
pop
mov
repz
es
inc
dec
or
push
push
cmp
pop
sbb
xchg
clc
jmp
jno
clc
fmull
frstor
adc
inc
loopne
push
dec
adc
jb
fucomip
push
cli
hlt
cwtl
sub
inc
leave
lods
das
cmpsl
push
push
rorb
stos
push
repnz
shrl
push
inc
fs
xchg
jecxz
loope
inc
hlt
ficoms
cmp
imul
push
cmp
push
aas
es
sahf
sub
mov
pop
out
aas
push
pop
daa
movsl
mov
sbb
lret
outsl
sub
mov
jbe
pop
imul
push
dec
jp
into
lods
repz
xor
popa
imul
xchg
sbb
mov
mov
inc
fcmovnbe
dec
jmp
sbb
dec
in
adc
pop
fnsave
aad
addl
or
jno
mov
dec
mov
les
add
push
fnstcw
or
push
and
jo
lods
in
pop
or
inc
in
movsl
lea
into
xor
test
loop
or
sbbb
popa
dec
xchg
enter
push
xor
movsl
jne
cmp
rcrb
scas
fldl
arpl
sbb
rcl
cmp
jl
pusha
shll
adc
stos
xchg
add
xchg
shlb
outsb
ret
inc
fcoms
cmp
dec
xor
int3
or
ljmp
dec
sbb
cli
inc
in
nop
cmp
ret
in
enter
stc
insl
xchg
push
outsb
push
and
outsb
mov
push
rorb
insl
push
mov
adc
insb
out
dec
enter
push
mov
inc
cs
xchg
stc
out
dec
mov
rorl
push
fs
mov
test
mov
sbb
dec
sub
sarl
xchg
outsb
test
mov
dec
test
pop
aaa
pop
mov
jl
fidivrl
and
test
inc
stos
adc
push
out
dec
pop
sbb
in
inc
pushf
jg
xchg
dec
push
test
or
cwtl
pop
popf
and
in
mov
xchg
shrb
mov
sbb
push
sub
push
out
xor
push
push
mulb
negl
ret
arpl
cwtl
out
mov
int3
push
loopne
jecxz
mov
out
adc
cmp
fcomip
mov
sahf
cmp
cmp
fwait
scas
cwtl
push
out
out
mov
jae
leave
lret
outsl
imul
ds
sub
mov
pop
mov
ds
fucom
cmp
xor
inc
rolb
shll
add
xor
andl
loope
sahf
pushf
stos
mov
aaa
sti
aaa
sub
jmp
mov
ja
cwtl
xor
push
mov
jb
shr
xchg
mov
sub
inc
push
testl
in
mov
mov
cmp
divl
or
inc
xchg
repz
int3
push
push
int3
fs
out
sbb
pop
sbb
aam
dec
and
cmp
cmpsl
pop
dec
fidivrs
push
ljmp
cmpsb
pop
xchg
fadds
mov
and
imull
fidivl
imul
inc
mov
and
lret
xchg
mov
mov
pop
test
nop
aad
mov
fildll
in
sti
jge
pop
adc
lock
pop
shl
push
push
add
test
sbb
lods
lods
sub
xchg
fsubl
loopne
inc
push
or
sub
mov
jge
mov
and
mov
mov
xchg
andb
pushf
cmp
push
popf
xor
sbb
sub
lahf
les
push
jg
shr
lahf
jbe
fcomps
adc
fwait
push
movsb
push
fmuls
push
insl
lea
mull
lods
out
imul
xor
int
sahf
push
mov
insb
ud2
adc
mov
in
mov
xor
vprotd
mov
sub
push
xor
leave
aaa
jmp
jg
xlat
sbb
or
jl
fxch
adc
mov
sbb
xor
sbb
outsb
shll
jae,pt
xor
cli
scas
pop
jp
or
add
xchg
sub
fldz
mov
outsb
dec
push
lcall
leave
sbb
inc
jle
pop
mov
hlt
les
jecxz
sbb
xchg
enter
aad
sahf
aad
cmp
in
daa
fwait
cmpsl
xchg
es
lcall
lds
stos
cltd
cmpsl
fidivl
add
in
pop
mov
xor
cld
mov
je
sahf
lcall
push
inc
cli
movsl
add
pop
div
int
sahf
sub
call
jmp
leave
xor
inc
mov
insb
call
ja
pop
pop
pop
or
cmp
mov
loop
or
fisttps
dec
push
pop
out
out
into
ljmp
aam
mov
das
and
jo
popa
data16
jo
lcall
and
sub
jmp
loope
push
inc
fs
pop
in
scas
mov
mov
int3
imul
bound
jmp
and
ret
test
jg
pop
sbb
cltd
aas
inc
stos
lock
out
pop
addr16
push
test
aad
mov
mov
insb
and
ret
fiaddl
and
test
or
adc
push
outsb
xor
mov
rcl
repnz
dec
out
mov
out
aam
shll
cmpsl
fs
es
dec
adc
jae
pop
pushl
adc
push
push
and
bound
sarl
lea
xor
pop
mov
addr16
cwtl
loopne
mov
lods
jae
add
sahf
dec
and
and
std
ret
popf
xchg
jo
pusha
jle
jecxz,pt
incl
sbb
dec
adc
jo
aaa
or
call
lret
xchg
add
mov
call
leave
inc
dec
rcr
test
jl
push
scas
inc
addr16
cld
jmp
in
sbb
jb
xor
jmp
out
out
or
sub
dec
fnstsw
cmpsb
movl
jmp
pcmpgtd
pusha
dec
test
mov
push
mov
add
stos
fwait
push
aad
test
rcl
cmp
dec
xor
inc
dec
cwtl
add
fidivrs
push
jnp
cmp
mov
push
jle
and
lea
dec
insb
jmp
ret
push
xchg
cmpsb
int3
stos
loopne
roll
dec
ret
nop
daa
jg
popl
arpl
add
dec
mov
mov
mov
mulb
fdivrl
add
or
cld
mov
cmpsb
push
lods
mov
jns
test
stos
xchg
and
sti
cmp
lahf
sbb
add
mov
shrl
pop
lds
adc
pop
sbb
int3
inc
add
lea
sub
fwait
pop
mov
mov
js
iret
jp
jmp
ret
or
stos
mov
pslld
shll
testb
mov
mov
jb
lret
jmp
cmp
inc
das
ficoms
mov
lret
pop
jno
scas
mov
outsb
les
lret
into
pop
mov
or
loope
sbb
jns
cwtl
js
mov
nop
cmpsb
inc
mov
xchg
into
and
cs
inc
pop
mov
fsubrs
movd
inc
sub
inc
ds
xor
and
les
ret
add
mov
mov
xor
jmp
ret
call
push
divb
cwtl
repnz
enter
ficoml
mov
int3
jl
mov
sbb
idivb
outsb
fistps
outsb
test
mov
outsb
xchg
test
into
push
or
add
push
and
arpl
pushf
out
or
scas
or
lret
and
jb
jge
xchg
movsl
xchg
add
or
rorb
or
fisubrl
idivl
dec
add
jno
push
mov
add
sbb
roll
add
lock
or
xor
les
cmpsl
pusha
es
mov
push
sub
inc
scas
push
pusha
dec
cmp
call
imul
cmp
xchg
jecxz
mov
cltd
sbb
jae
inc
adc
jno
mov
stc
cmc
outsb
mov
sbb
mov
jle,pn
hlt
add
xor
jns
lret
addl
repnz
pop
repz
jg
fisubl
jbe
lock
xor
sub
mov
dec
bound
pop
cmc
sub
lea
sub
test
out
push
in
out
inc
jns
fstps
fistl
xor
outsb
scas
scas
aaa
dec
push
mov
ficoml
in
pushf
and
xor
xchg
push
cmpsb
mov
std
hlt
andl
mov
add
test
repz
push
arpl
out
clc
in
mov
aam
pop
out
sub
jmp
movsl
bound
loopne
jecxz
mov
scas
test
js
in
xchg
pop
stos
out
das
dec
ret
adc
xor
inc
push
sbb
mov
mov
aaa
dec
mov
adc
into
xor
sarb
and
pop
pusha
insb
xlat
cld
mov
and
insb
loopne
jmp
fisttpl
mov
hlt
adcb
out
add
add
fcmovb
iret
outsl
fistl
sbb
and
jmp
jns
jmp
lock
fisubrl
push
push
ret
sbb
shlb
add
sbb
sahf
jl
lods
dec
add
dec
dec
and
sbb
cmp
imul
sub
cs
les
push
lret
loopne
fbstp
cltd
mov
pop
decl
jecxz
mulb
jno
jmp
pusha
sub
pop
imul
fisubrl
rcrl
push
jg
jbe
pop
jb
ja
jnp
outsb
mov
je
mov
leave
and
cmp
cmpsb
pop
sub
sub
not
cmp
loopnew
outsb
lret
inc
mov
mov
jno
pushf
leave
add
mov
test
mov
loopne
in
incl
inc
inc
pop
sbb
add
xchg
push
pop
xor
lahf
les
mov
hlt
repnz
dec
or
testb
push
addr16
nop
leave
add
pop
jne
lods
lret
jge
aad
xlat
popa
bound
test
fisubrl
jg
pop
xor
jnp
call
ret
lret
dec
loop
insl
cmp
inc
inc
ss
or
cmpsl
or
inc
shll
fidivs
adc
mov
bound
in
int
lds
mov
or
mov
jb
cmp
mov
sti
out
adc
push
fs
aad
fildl
xlat
cmp
imul
aad
test
jmp
frstor
popa
mov
gs
imul
or
inc
push
jbe
cmpsl
inc
andl
outsb
sbb
mov
int
clc
cmp
js
mov
lcall
out
aad
scas
aaa
mov
cmp
pop
insb
sti
sbb
xchg
mov
sbb
movsb
and
enter
add
in
cwtl
or
fdiv
xor
add
push
es
les
mov
sbb
mov
addb
or
push
jp
dec
and
and
int3
aas
cwtl
movl
mov
ret
mov
cmp
sbb
movsl
fs
inc
cmpsl
addl
add
out
jmp
push
xchg
mov
scas
mov
sti
mulb
call
lea
repnz
and
in
out
and
popf
add
fistl
inc
pop
push
ljmp
das
push
xor
iret
ljmp
sbb
jp
lcall
test
mov
mov
shr
jns
pushf
cmp
notl
dec
push
addl
scas
sbb
sahf
stos
sub
icebp
into
jns
aaa
repz
or
push
add
mov
cmc
testl
push
dec
push
mov
xor
mov
adc
outsl
jo
out
sbb
push
push
push
cmp
mov
imul
aaa
repnz
sub
lods
sbb
adc
data16
clc
or
push
ljmp
sbb
mov
jae
loopne
xchg
movsl
inc
insl
xor
pop
add
or
mov
jmp
in
loope
orb
les
cmp
dec
ljmp
push
inc
pop
push
iret
jecxz
js
dec
ret
les
jmp
sub
inc
pusha
in
sub
add
leave
mov
xor
ja
push
out
xor
cltd
sbb
jg
cmp
sub
jmp
mov
mov
and
dec
popa
or
lds
pop
adcb
cmp
sbbb
sbb
ret
lahf
lds
loopne
leave
inc
lahf
lea
xchg
jno
cltd
pop
cli
and
and
xor
inc
int3
aaa
lret
xor
iret
mov
push
mov
gs
dec
inc
mov
xchg
pushf
push
xor
mov
rclb
xlat
loope
and
stc
push
ja
xchg
stc
or
in
aas
add
sbb
dec
ja
pop
popf
nop
pop
mov
in
jne
mov
data16
pop
ficoml
jmp
pusha
sub
mov
jb
icebp
add
fwait
adc
jmp
int
jge
dec
push
cmovge
lock
in
es
mov
cmpsb
sub
pushf
cmpsb
sub
out
push
fisubrl
sarl
lea
mov
sbb
mov
cmp
cmc
inc
rol
jg
sub
rcl
mov
jge
mov
jae
adc
pop
sub
outsb
and
xchg
leave
jae
xchg
arpl
sub
testb
jl
inc
iret
ja
xor
push
add
shlb
ficoml
fbstp
push
mov
jo
mov
js
sub
ljmp
pushf
ffree
sub
xor
xor
ljmp
in
cmp
aas
xor
cld
xor
cs
cmp
leave
js
xor
adc
clc
mov
pop
stos
fldt
pop
loopne
enter
aad
mov
pop
push
sbb
jge
cmpsl
int
insb
stc
inc
sub
cmp
enter
mov
enter
out
pop
nop
mov
ljmp
xor
mov
rol
dec
jle
xor
daa
mov
xchg
dec
sbb
adc
sbbl
outsl
cmc
inc
mov
orb
mov
xor
add
mov
push
cmp
outsb
cmpsb
mov
jg
jns
lods
cmpsb
mov
cmpb
lds
or
out
in
repz
outsb
push
fldl
add
out
push
mov
cli
mov
inc
lret
lahf
fcoms
stos
stos
stc
sub
push
sub
mov
jg
adc
jb
cmc
je
xor
cmp
scas
pop
jl
test
inc
mov
stc
icebp
js
ud2
das
hlt
insb
push
in
and
out
aad
test
jno
adc
push
into
aam
xor
push
adc
push
pushf
aad
popa
sub
in
imul
pop
into
icebp
mov
out
mov
repnz
fstpt
and
cli
adc
mov
sub
cwtl
add
sahf
mov
or
lcall
xor
push
pop
je
ljmp
sti
add
clc
mov
xlat
test
or
icebp
mov
sti
pop
xor
scas
arpl
les
inc
enter
push
scas
mov
lret
xor
pop
outsb
push
inc
mov
sahf
fidivrl
loopne
outsl
xor
jle
stos
div
mov
mov
pop
sub
adc
mov
sub
ds
pop
jecxz
jle
push
out
arpl
shll
int
inc
push
outsl
push
mov
shl
scas
or
test
outsl
inc
pop
cmp
fs
xchg
movsl
mov
shrb
sub
add
mov
movsb
cmpsb
dec
loop
mov
mov
ret
cmc
aad
aam
aaa
or
sahf
cmp
and
cmpl
dec
mov
ljmp
cmp
add
cld
mov
sbb
lods
push
popa
dec
dec
loopne
mov
mov
jp
xchg
and
xchg
mov
inc
or
mov
mov
push
mov
mov
jg
sub
cmc
sub
and
dec
mov
scas
loopne
mov
mov
pop
orl
inc
out
aas
gs
pop
insl
lods
mov
and
inc
test
daa
int
cmpl
inc
mov
xchg
sahf
mov
insl
xor
sub
xchg
adc
mov
fcomp
jl
test
push
mov
inc
cmpsl
xchg
adc
mov
icebp
add
push
xchg
sbb
popf
mov
mov
faddl
push
out
mov
pop
arpl
out
shlb
push
push
cmp
inc
mov
adc
popa
adc
xchg
dec
push
dec
mov
push
mov
enter
pop
negb
loopne
cmpsb
cmpsb
aam
pop
add
int3
jmp
pop
cmp
adc
or
cmp
push
arpl
pop
test
push
and
jge
sahf
jns
stc
arpl
mov
adc
mov
or
sbb
cmp
imul
into
mov
mov
push
dec
lret
cmpsb
rcrl
sbb
or
pop
dec
loope
iret
loope
dec
call
roll
xchg
shrl
repz
scas
insl
mov
cltd
mov
mov
pop
es
pop
add
fbld
push
int
adcl
jl
add
lea
adc
push
mov
aad
test
repz
movsl
mov
lods
pop
rolb
push
outsb
aam
ja
pcmpgtb
roll
inc
sahf
and
sbb
mov
xchg
out
cmp
inc
cmp
sub
lods
sub
mov
mov
iret
fisubrl
adc
or
pusha
stc
lret
sbb
inc
rolb
movhlps
pop
cmc
jl
fstps
out
add
and
into
loope
roll
pop
and
pop
add
nop
loope
repnz
xchg
jb
pop
inc
mov
xchg
add
inc
and
mov
js
outsb
push
repnz
imul
mov
or
cmp
mov
jo
lods
mov
add
push
xchg
cmpsl
sub
aam
adc
or
add
bound
cmp
loopne
fs
js
dec
imul
jb
aaa
dec
js
arpl
shll
rclb
cmovp
jmp
mov
fisubl
js
and
cmp
add
jno
sub
fbstp
loopne
jb
jnp
dec
or
out
and
dec
cmp
dec
fstpt
and
add
xor
jmp
push
sbb
push
xchg
pop
and
sbb
xor
cmc
cwtl
mov
mov
icebp
lcall
push
jne
inc
cli
mulb
jp
cmp
mov
xchg
xlat
jg
push
add
gs
sub
mov
int
cltd
push
xchg
das
insb
jb
mov
inc
xchg
pop
mov
push
jecxz
pop
sub
imul
enter
mov
movsl
scas
rcrl
fsubrs
lcall
mov
mov
loope
adc
icebp
loope
push
jnp
or
pop
js
icebp
lret
insl
fmuls
push
or
sbb
stos
aaa
fiaddl
lret
div
inc
sub
jg
mov
and
mulb
stos
sub
ja
cld
jo
ret
push
ror
push
sahf
adc
outsl
mov
jo
outsl
or
out
aad
xchg
adc
js
je
xor
popf
cmp
pop
adc
pop
pop
sbb
and
xchg
dec
sbb
data16
jnp
gs
fmull
imul
fsubrl
dec
dec
arpl
mov
lret
push
ds
mov
inc
imul
xchg
iret
enter
cmp
push
mov
or
xchg
lea
push
test
mov
cmpsl
inc
shrl
outsb
push
push
add
iret
arpl
lret
out
nop
push
popa
jle
jle
mov
mov
mov
jmp
pop
iret
out
and
insl
cmp
std
mov
outsb
xchg
mov
jne
adc
pop
int
add
loope
test
testl
dec
rclb
mov
shlb
pusha
xor
out
mov
inc
push
cmp
shll
loopne
push
cltd
frstor
les
pop
bound
pusha
cltd
push
dec
dec
gs
or
jmp
fiaddl
cmp
pop
jl
dec
jne
addr16
and
loop
jge
ficompl
cmp
out
pop
or
xchg
mov
test
mov
add
mov
pop
jmp
dec
sbbl
aad
subb
cli
mov
adc
adc
xchg
repnz
stos
mov
cwtl
icebp
sbb
in
sub
fstpl
std
clc
ja
cs
or
dec
or
pop
lahf
imul
jecxz
gs
sub
out
xchg
repz
pop
out
pusha
dec
ret
shr
jbe
xchg
gs
push
sti
pop
addr16
push
push
jmp
sub
fwait
test
shrl
mov
xor
and
enter
mov
add
push
movsl
and
inc
mov
mov
jmp
adc
xchg
rclb
aas
std
mov
jl
mov
rol
mov
fildll
popf
cmpsl
out
sbb
sub
fisubs
cwtl
mov
jmp
aam
iret
sarl
add
in
out
in
fcompp
inc
pop
sbb
fsubrl
rorl
add
dec
mov
inc
fs
jge
ss
adc
push
add
jne
or
mov
inc
mov
sub
pop
call
add
fisubs
cmovp
sbb
leave
in
mov
cli
into
sbb
dec
fwait
jl
pop
mov
push
fs
jnp
into
in
jns
adc
adc
ret
add
ficoms
push
les
shll
xlat
ret
imul
pop
add
pop
jno
ret
sub
nop
add
popf
leave
jb
jmp
push
adcl
fidivrs
cltd
cmp
mov
into
dec
aaa
sub
popf
inc
insb
sbb
add
push
sbb
imul
fst
call
pop
mov
orl
jns
outsb
in
sub
nop
fistpll
repz
dec
mov
lea
stos
shll
jae
pop
push
push
jg
and
stos
scas
and
pop
cmp
xor
movsb
mov
and
pushf
sub
mov
mov
mov
daa
jbe
test
sti
or
test
out
call
call
xchg
outsl
adcb
xor
jge
std
arpl
lea
xorl
sahf
xchg
inc
push
mov
inc
jp
adc
dec
xchg
dec
dec
dec
lret
sub
cmp
cmp
and
cmp
lea
xor
out
mov
test
popa
push
adc
cli
stos
shlb
jg
pusha
sbb
add
jp
movsl
mov
jl
push
out
jmp
sahf
jle
mov
pusha
aam
mov
mov
cmp
or
shlb
inc
fcmovu
dec
mov
push
mov
into
mov
ror
fnstenv
mov
out
ds
icebp
xor
xor
adc
insl
scas
push
ja
div
lea
push
push
jbe
shll
in
loop
in
movsb
sub
mov
jb
xchg
fcos
popf
push
pusha
cmpsl
aas
es
inc
movb
arpl
aaa
std
pop
sbb
in
in
inc
or
sbbb
fldenv
ljmp
icebp
or
jb
or
and
arpl
push
sarb
stos
xchg
xchg
dec
cwtl
dec
ja
lret
xor
aad
fisttpl
hlt
ret
ja
push
cli
sub
cmp
pop
sti
sbb
mov
sub
ja
pop
test
test
aam
fsubrp
xchg
or
xchg
icebp
xor
xor
out
lock
repz
inc
pop
xchg
out
outsl
cmp
into
push
ss
jne
popf
add
or
inc
or
ds
addl
movsb
xchg
inc
xchg
scas
ja
cmp
aam
or
pop
mov
inc
icebp
iret
fsubl
les
das
pop
inc
jge
inc
inc
xor
xchg
add
push
pop
enter
mov
cmp
xor
or
sub
test
addr16
das
dec
test
jnp
push
push
data16
dec
jmp
sahf
xchg
or
lcall
push
mov
push
fldt
jmp
das
inc
pop
pop
clc
icebp
adcb
ror
cmpsl
dec
xchg
jb
repz
sarb
insl
inc
push
adc
lds
xchg
sbb
adc
mov
adc
push
add
add
mov
push
lods
sub
popa
lret
test
pop
repz
adc
fs
sti
sub
bound
clc
inc
popf
loope
mov
mov
pushf
pop
sbb
xor
push
je
push
cmp
push
aam
popfw
sub
jns
dec
xchg
or
loope
movsl
lahf
fnstenv
hlt
pushf
pop
repnz
leave
imul
inc
adc
mov
stos
andl
outsl
pushf
test
fcomip
test
dec
inc
sub
test
fcompl
cmc
fs
testl
divl
sub
sub
or
ds
and
int3
imul
push
aad
cs
and
sti
popa
inc
fisubrl
inc
jp
ret
rorb
int
sbb
xor
pop
divl
xchg
scas
mov
xor
mov
lret
ret
xchg
jge
fwait
stc
addr16
scas
jae
cmc
cmp
jb
sub
adc
test
mov
std
xchg
cmp
jle
sub
mov
mov
out
mov
jg
fcmovu
mov
cmp
push
rorl
int
xlat
je
sbb
fwait
mov
rolb
fistps
or
rcrl
movsl
pop
jns
push
mov
sub
sbb
xchg
mov
test
mov
add
lret
adc
push
pusha
xor
lcall
cmp
loop
aad
ss
mov
and
and
and
adc
mov
mov
push
shrb
rclb
loop
leave
addb
mov
test
arpl
daa
sbb
or
repnz
loope
cmp
sti
notb
jg
cmp
or
push
xchg
and
subb
jmp
es
push
push
in
jb
repnz
mov
insb
mov
mov
pop
xlat
mov
mov
das
imul
dec
movsb
push
and
imul
jp
cmp
lods
mov
dec
cmp
mov
rorl
cld
dec
outsl
rcll
and
sbb
data16
fnstsw
add
addr16
pop
pop
sub
sub
or
xchg
or
jl
xor
adc
fidivrl
pusha
sbb
push
subl
push
ljmp
mov
jl
in
xchg
add
push
sub
add
push
mov
movsb
mov
pop
out
aam
mov
dec
dec
jmp
mov
add
xchg
adc
js
mov
dec
int3
cmpsl
push
int3
dec
mov
sbb
pop
and
xlat
pop
mov
xor
adc
test
dec
or
cld
ss
jp
add
cmp
mov
jnp
aad
andb
loop
jl
add
popa
jl
outsl
pop
adc
test
push
rorl
daa
add
ret
dec
sbbl
nop
filds
fsubs
xor
test
mov
inc
stc
loope
push
mov
fidivl
pop
cmp
inc
test
add
jbe
out
xchg
ljmp
mov
sbb
sbb
mov
es
jo
les
and
cmp
mov
xorl
fstpt
in
add
lret
cmc
mov
lea
jge
xchg
jl
and
mov
push
js
adc
enter
loope
rcrb
or
mov
arpl
mov
and
add
push
dec
sahf
jp
ja
out
insl
aas
push
xchg
mov
cmp
int3
pushf
cs
in
fistl
lcall
and
sbb
loopne
xor
cmp
sub
xor
in
xchg
push
push
dec
dec
push
arpl
push
lods
inc
insb
stc
lock
jb
inc
testl
sub
inc
out
push
lock
sub
or
xchg
cld
int
movsl
adc
add
adc
dec
insb
or
mov
sub
mov
xchg
cmp
adc
clc
xchg
add
cmp
xor
sbb
mov
jmp
xchg
dec
test
or
jno
push
jbe
inc
sti
emms
mov
fimull
xor
sub
jb
std
pushf
fbstp
rcll
es
imul
xchg
pop
push
pop
adc
sti
rol
pop
leave
call
mov
scas
cmpsb
mov
insl
cmp
movb
xchg
sub
in
in
xor
inc
aad
movsb
xchg
adc
imul
pop
scas
inc
inc
bound
rcrl
adc
push
xor
shll
jmp
repz
scas
and
xor
sbb
fldl
invd
sub
adc
jo
mov
js
xor
fildll
cmp
jle
sbb
fbstp
mov
sub
fsubs
adc
sbb
push
push
cld
mov
mov
imul
sbb
pop
adc
int3
in
nopl
lret
mov
jg
dec
xor
orb
or
clc
cmp
push
popf
mov
jge
inc
loope
fsubrl
call
flds
lretw
rcll
xchg
mov
fidivrs
das
enter
imul
add
push
stos
jns
mov
ret
xchg
cmpsb
sub
sub
cli
es
loop
stos
insb
addr16
mov
movsl
cwtl
cltd
ja
inc
ds
popa
or
add
out
mov
and
jno
jecxz
addb
loope
sbb
xor
addr16
push
jnp
loope
lcall
pop
xchg
xchg
cmp
dec
lret
std
dec
cmp
ret
push
leave
popa
pop
sbb
pop
inc
mov
insl
mov
dec
std
xor
pop
sbb
jmp
mov
push
mov
fldl
add
adc
dec
or
and
out
add
or
ja
adc
adcl
xorl
cld
lods
iret
loop
jae
mov
sub
mov
test
lahf
mov
or
or
enter
cmp
dec
out
dec
pop
mov
pusha
js
rolb
imul
mov
lods
mov
lods
and
in
mov
in
add
jp
mov
xchg
test
iret
jmp
imul
out
data16
mov
pop
sbb
pop
inc
je
cmp
mov
pop
pop
lahf
inc
jmp
adc
xchg
clc
pop
iret
dec
xchg
shll
fidivs
mov
stos
inc
push
mov
sbb
xchg
add
push
lret
cmp
adc
mov
daa
mov
shll
rorb
icebp
and
fwait
and
adc
push
or
cmp
push
mov
sub
les
loopne
ljmp
dec
imul
cmp
pop
push
decl
movsb
or
dec
push
mov
push
ret
fldt
movsl
add
cld
inc
loope
rcl
xchg
repnz
jl
inc
enter
and
fbld
cmpsb
mov
lods
xor
fwait
add
and
push
pushf
or
je
adc
lods
or
jl
fdivr
ret
xor
test
dec
or
and
cli
call
outsb
mov
dec
sbb
clc
clc
sub
pop
xlat
jne
fwait
imull
xchg
scas
lea
or
push
dec
negb
and
and
and
cmp
daa
lds
in
lret
jle
enter
insl
sbb
mov
scas
outsl
xor
iret
inc
hlt
loopne
mov
test
in
jecxz
jnp
push
mov
ds
sti
or
cmc
push
mov
inc
and
adc
or
shll
jg
rorl
out
and
mov
movsl
xor
dec
mov
jp
test
dec
cmp
xor
xor
adc
out
jmp
mov
inc
or
mov
movsb
enter
sbb
mov
xor
sub
mov
mov
lcall
jno
les
add
pop
jmp
out
iret
xor
cmp
cmp
xor
push
notb
pop
cmp
or
xchg
int
push
add
out
jmp
scas
fdivs
inc
pusha
jb
pusha
je
add
dec
insl
sarb
movsl
fdivrp
shlb
dec
and
dec
dec
xor
in
dec
xor
aad
xor
mov
gs
test
or
les
aam
rol
lcall
push
mov
pop
daa
pop
shlb
test
lahf
jbe
jbe
daa
or
or
xchg
lock
into
stc
fdivrs
fs
jg
lock
push
or
xchg
loopne
fidivrl
dec
adc
insl
movups
xchg
lret
inc
jno
test
jno
ljmp
out
jne
mov
pop
mov
mov
and
push
xchg
adc
fldt
mov
push
rsqrtps
or
mov
xor
shll
xchg
sub
into
mov
in
mov
inc
xchg
lcall
icebp
add
ret
push
push
xor
arpl
sub
mov
lcall
lahf
jae
hlt
mov
outsl
add
adc
es
sahf
scas
pop
inc
jno
fwait
dec
xchg
ljmp
aaa
sbb
aas
aaa
cmpsb
negb
push
loope
or
add
jbe
bound
push
stos
testb
inc
lds
loop
pusha
arpl
leave
je
adc
inc
add
jnp
jb
pop
repz
cmp
rorb
pusha
mov
fisttpll
or
fcomps
into
dec
inc
loope
mov
orl
and
pop
daa
push
divb
xor
movsl
cltd
fwait
mov
daa
sbb
xchg
cmp
add
nop
sub
dec
shlb
pop
les
pop
inc
test
rcr
lcall
sarb
push
pusha
in
ljmp
sar
pop
fs
and
leave
adc
cmpsb
cmp
sub
fmuls
push
movsl
push
inc
xchg
mov
jecxz
lret
inc
fldt
and
aad
rol
cmp
dec
int3
movsb
mov
push
ss
mov
out
cmc
pop
mov
inc
mov
jne
xchg
data16
int3
arpl
movntq
out
popf
mov
mov
andl
jns
mov
mov
cld
inc
cmc
lahf
mov
int
xorb
test
xor
add
aad
in
aam
es
adc
push
sub
fsubrl
jge
mov
inc
xor
or
dec
pusha
repz
shrb
or
dec
sbb
inc
mov
or
inc
cld
push
je
pop
lds
push
jg
pop
mov
mov
inc
push
hlt
jmp
mov
xchg
out
mov
mov
mov
out
insl
mov
or
les
out
cmp
fldenv
pop
sahf
repnz
test
add
sub
leave
and
sbb
aaa
dec
dec
xor
scas
ljmp
sahf
jnp
dec
mov
and
sub
enter
fs
adc
jne
mov
mov
shll
test
mov
cltd
rcrl
cltd
add
or
stos
xchg
xor
ret
push
repz
inc
repnz
cld
xchg
pusha
jp
cmp
pop
fnstenv
xor
mov
imul
daa
cs
cmp
ret
adc
pop
or
mov
mov
inc
xchg
popf
rcl
enter
sbb
mov
dec
inc
mov
push
lahf
int3
pop
dec
cmp
dec
sbb
js
leave
mov
repnz
mov
orl
and
mov
das
push
repnz
idivb
sub
xbegin
sbb
adc
cmp
inc
mov
adcl
lahf
shlb
lea
add
lcall
xor
int
push
int
adc
and
or
fmull
shll
dec
push
mov
fdivs
fistl
icebp
stos
mov
sbb
cmp
cmp
repz
push
cli
clc
dec
sarl
sbb
jecxz
fdivrl
sub
fiaddl
jecxz
ljmp
pop
jbe
pop
cmpsl
mov
pop
mov
ret
push
and
cmp
jmp
dec
cld
push
cmp
in
cmpsb
loopne
and
mov
sub
xchg
xor
mov
xchg
in
cs
and
or
loopne
subb
sti
xchg
mov
sub
movsb
mov
movsb
or
pop
loope
mov
fucomi
movsb
mov
jbe
lret
xchg
push
jge
jl
adc
add
fwait
test
inc
cmc
xchg
les
shrl
jp
adcl
push
sti
jo
inc
pop
lcall
and
add
mov
mov
lock
cmc
jl
cltd
dec
add
sbb
js
sub
cmp
xchg
sub
lret
adc
or
dec
push
idivl
mov
std
aaa
push
test
cmc
push
sbb
push
pop
loopne
sbb
push
xchg
push
pop
inc
mov
push
dec
adc
inc
inc
aaa
aas
xchg
cmp
dec
dec
shlb
dec
jmp
mov
xor
lcall
das
outsl
mov
mov
sbb
and
loope
pusha
dec
sbb
cmpsl
stc
cli
pop
cmpb
mov
mov
xchg
ljmp
test
push
adc
notb
int
jecxz
xchg
lds
pop
es
cmpsb
fwait
push
movsl
in
mov
arpl
not
in
test
mov
push
in
int
mov
inc
cmp
js
pop
sbb
mov
or
das
ffreep
push
fcoms
das
adc
xor
or
outsb
xchg
dec
sbb
addb
cmpsl
pushf
data16
adc
mov
inc
js
sub
imul
je
inc
pop
pop
stos
cltd
std
js
scas
lahf
cmpsb
push
aad
shl
sbb
pop
pop
lret
rcrl
xor
rclb
push
pop
pushf
ljmp
pop
mov
jnp
js
or
jmp
lcall
test
popf
jp
aam
divl
sbb
lea
rep
mov
mov
js
pop
test
pop
js
xchg
repz
sti
pop
cbtw
repz
lcall
fsubl
push
leave
mov
mov
mov
and
inc
or
mov
xchg
data16
ficoml
test
daa
das
sbb
stc
gs
dec
xor
cmp
test
sbb
mov
mov
cltd
pop
insb
push
out
rcrl
pusha
xor
mov
mov
xlat
jbe
testb
test
add
out
push
xchg
mov
pusha
mov
daa
xchg
pop
gs
jno
adc
fwait
adc
dec
push
ficompl
or
sbb
bound
sub
sbb
xchg
mov
push
xor
mov
testl
inc
pusha
and
fs
mov
mov
sahf
outsb
jo
push
daa
ss
pop
in
mov
inc
mov
jp
add
inc
pop
xor
ja
leave
xorb
cli
mov
pusha
pop
dec
mov
test
adc
daa
inc
inc
in
mov
or
xor
lahf
inc
pop
testl
xor
aaa
mov
dec
cmpsl
inc
adc
mov
jae
xchg
clc
lods
lcall
scas
mov
rorl
jne
ret
adcb
bswap
mov
xor
mul
lods
sahf
ud2
out
xor
adc
aas
sti
pusha
inc
sbb
inc
or
sub
fstps
jo
pusha
scas
xor
adc
jnp
mov
clc
lret
sbb
dec
ret
inc
andb
aas
ja
mov
icebp
lret
addr16
push
adc
lds
xchg
pop
les
rclb
stos
sbb
jg
loope
jnp
add
mov
outsl
ss
movsl
lcall
sarb
test
and
aaa
scas
push
movsb
pusha
dec
test
out
xlat
js
xchg
out
in
push
jg
gs
iret
bound
push
dec
fiadds
das
jmp
sbb
mov
mov
lea
mov
icebp
iret
inc
pavgb
mov
pop
jb
xlat
and
test
out
adc
pop
orl
push
adc
out
fs
push
mov
outsl
mov
aas
cmc
jne
dec
cli
xchg
in
add
sbb
cmp
xchg
jecxz
ret
int3
xchg
out
pop
push
loopne
mov
push
int
sub
leave
add
sarl
mov
pop
and
mov
subb
mov
sahf
rorl
lock
cmpsl
les
clc
cwtl
pushf
jne
mov
pop
or
or
cmovno
push
cmpb
sahf
mov
shl
mov
xchg
cld
idiv
lods
idivl
shrl
and
cmp
xchg
fldenv
jnp
vcvtdq2pd
sub
lret
cmp
mov
cmp
icebp
sub
adc
inc
or
popa
xor
mov
ss
push
lret
in
sub
mov
cmp
cmpsb
mov
stos
cld
insl
movsl
or
xor
pop
pop
setae
jb
mov
out
xchg
inc
xchg
pop
add
add
shll
lods
mov
fs
fwait
jo
sbb
mov
xor
or
jns
dec
lods
inc
mulb
xchg
mov
in
jmp
fs
lahf
dec
insb
sub
ja
das
sub
mov
mov
jae
jl
xor
arpl
in
jae
sub
outsb
call
push
repnz
sti
or
adc
xor
out
cmpl
mov
jecxz
or
mov
mov
inc
aas
test
jnp
loopne
inc
int
push
push
call
mov
and
push
inc
push
std
movsb
je
test
inc
xchg
shrb
sbb
jge
xchg
cmp
adcb
push
xor
sti
push
push
push
ficoml
push
cld
sub
aaa
icebp
xchg
add
sub
sbbl
dec
and
mov
or
stos
test
mov
in
mov
add
leave
mov
in
mov
lcall
pop
sbb
lods
jns
mov
fcomps
xor
cwtl
arpl
movsl
and
jl
sti
dec
lds
in
or
data16
inc
mov
test
push
xchg
and
fsubp
or
imul
fnstenv
arpl
sbb
push
add
sub
mov
or
add
pop
or
jg
arpl
ja
push
in
fs
sbb
jl
and
sub
pop
inc
pop
jl
pop
aad
stos
or
push
flds
lcall
cmp
push
mov
sbb
fucomip
repnz
push
dec
mov
and
pop
cmp
dec
pop
mov
dec
push
push
lahf
aaa
gs
jo
sarb
dec
xor
or
xchg
fidivrs
cltd
xchg
inc
pop
in
dec
ja
in
mov
adc
sub
lods
mov
cwtl
loopne
inc
xchg
sbb
std
scas
mov
pop
xor
inc
aam
sub
je
sub
xor
lds
rcl
adc
push
xor
dec
xchg
push
inc
cmpsl
inc
xor
pop
orl
sub
test
loopne
xor
mov
stos
cltd
jb
idiv
das
cli
bound
outsl
mov
jecxz
adc
or
xor
xor
clc
or
jne
cmp
pushf
jnp
clc
ja
xchg
shl
jbe
pop
jmp
lea
mov
das
mov
or
cmp
fdivrp
adc
adc
xchg
mov
inc
repz
jmp
loop
aas
jg
mov
pop
fistpll
lock
xchg
inc
and
movsb
sub
fbstp
pop
cli
cli
lret
pusha
adc
popa
jae
pushf
mov
bound
mov
roll
or
or
jne
std
xchg
add
adc
jbe
sub
scas
jbe
fcmovbe
push
int3
push
fdivr
sahf
insl
dec
arpl
xchg
ds
fucomip
dec
inc
sub
mov
push
push
js
adc
sbb
dec
inc
push
xor
mov
push
sbb
movsb
or
test
imul
adc
loopne
xchg
je
fcoms
pop
iret
out
stc
lods
push
mov
pop
dec
inc
test
push
mov
sbb
jne
ret
xchg
mov
pop
and
add
xor
xchg
xor
test
jne
je
adc
xor
adc
mov
inc
ret
int
push
sahf
jecxz
nop
lods
aas
jmp
lock
push
fidivl
in
push
cmpb
cmpb
lcall
adc
or
adc
xchg
adc
adc
outsb
stos
insl
mov
clc
mov
int3
push
add
rclb
roll
push
inc
inc
js
cmpsl
in
jnp
pop
in
push
jns
jmp
jg
jbe
ret
test
scas
inc
cmpsb
call
lea
movsb
cmpsl
aaa
xchg
fcmovbe
add
lcall
jecxz
dec
mov
xchg
pop
iret
or
mov
jle
icebp
cmp
push
jmp
xchg
xchg
or
hlt
or
sbb
movsb
mull
jbe
sarl
das
xchg
iret
mov
mov
pop
andb
cmp
jb
fbld
pop
lock
sbb
mov
or
into
lods
test
jp
fwait
or
mov
or
add
sahf
pop
xlat
add
mov
add
adc
xchg
inc
mov
push
aas
hlt
add
dec
or
or
out
insb
cld
jae
jl
adc
cmp
out
test
mov
or
dec
mov
xlat
xlat
adc
adc
pop
es
mov
lret
xor
std
gs
shll
icebp
mov
jne
mov
sahf
xlat
dec
inc
adc
jns
jne
xor
xchg
xor
mov
test
push
or
testb
cld
xchg
insb
and
inc
ljmp
fsubr
push
outsl
jecxz
in
ja
inc
scas
das
push
mov
sub
add
pop
inc
out
movb
cmp
pop
cmp
xchg
sti
dec
stos
lret
data16
testl
lds
lods
mov
cmp
arpl
inc
daa
jg
dec
adc
xor
cmp
nop
and
cmp
push
or
hlt
xchg
sub
outsl
testl
mov
in
dec
sub
outsl
push
fstpl
xlat
fiaddl
sbb
jg
sub
roll
das
in
std
or
or
rcr
shlb
movsb
xchg
addb
testb
loop
cmp
mov
adc
push
adc
or
push
dec
sbb
arpl
xchg
xchg
mov
jp
adc
dec
or
jmp
andl
add
mov
jns
xor
addb
mov
or
movsb
dec
mov
xchg
daa
sub
sub
cmp
xchg
pop
sti
mov
dec
mov
push
xor
mov
or
jbe
popl
pop
xchg
sub
shrb
add
jp
push
fstl
aam
nop
loop
push
xor
sbb
jle
popf
enter
test
insb
push
pop
scas
add
je
fstl
cli
mov
nop
push
idivl
insb
call
dec
insb
pop
rcrl
in
lahf
cmp
int
pop
inc
and
inc
call
stos
lds
lcall
mov
imul
dec
pop
jne
ds
or
pop
stos
bnd
and
arpl
xchg
pop
sbb
dec
jnp
lahf
sbb
adc
inc
mov
rcll
pusha
add
mov
jns
mov
add
out
cltd
sub
aam
outsl
out
mov
call
ds
add
jecxz
jecxz
sub
cli
fldcw
jne
sbbb
ljmp
leave
and
sti
and
mov
xor
lcall
das
enter
xor
andl
fwait
rcll
int3
xchg
sbb
push
xor
push
push
cld
mov
inc
or
mov
ss
inc
shr
cli
cli
das
std
and
popf
lds
movsb
aaa
xor
test
push
mov
jne
cmpsb
inc
mov
mov
mov
xchg
sbb
sti
rcll
cs
clc
pop
scas
pop
and
pushf
push
ds
das
das
dec
insl
and
lods
xchg
add
testb
push
push
xchg
dec
mov
sub
push
fwait
inc
jno
out
stos
or
test
hlt
mov
fisubs
adc
push
mov
lods
popa
pop
xchg
dec
loope
dec
loopne
cs
mov
lds
push
lea
mov
mov
push
cmp
sbb
mov
and
sbb
cmp
in
mov
rorb
lcall
testl
add
and
mov
fistps
jle
jg
pop
in
outsl
std
jle
int
sub
add
cmp
imul
in
std
aad
lret
into
insl
or
push
arpl
dec
fimuls
and
int
jbe
xchg
sub
std
sarb
dec
jno
mov
les
jp
mov
push
mov
mov
fwait
int
mov
arpl
iret
repz
jl
pop
jge
adc
sub
push
jp
or
or
je
in
xor
fisttpl
das
and
mov
inc
dec
jecxz
adc
xlat
out
outsl
xorb
mov
fidivs
test
mov
dec
cmp
and
daa
mov
mov
ficompl
sub
jae
iret
xchg
pop
pop
cltd
mov
inc
lea
push
add
push
add
push
out
push
sti
subl
hlt
jbe
rcr
adcl
lods
cld
push
dec
xchg
xchg
arpl
pop
loop
cld
rolb
imul
cmpsl
mov
jno
in
leave
dec
sub
mov
mov
dec
fisttpll
push
xor
sti
call
ret
cmp
mov
mov
popf
mov
sub
mov
mov
jl
sbb
inc
jecxz
bound
ja
andl
adc
sub
add
push
push
sbb
aam
js
sub
js
add
cld
lret
push
outsl
xchg
imul
or
sarl
int3
bound
ret
push
inc
xor
out
jnp
lret
les
push
xchg
test
push
push
repz
sahf
mov
push
or
outsl
inc
xor
xchg
xor
insb
mov
xchg
jg
shl
jge
cmpsl
sbb
clc
sub
cs
jo
mov
cld
xchg
gs
sbb
stos
mov
out
pop
lods
je
cld
inc
add
stos
cmp
shrb
iret
daa
daa
inc
pop
sbb
repnz
les
and
xchg
or
cmp
push
aas
dec
cwtl
pop
sub
xor
pop
mov
add
pop
mov
mov
popa
test
decb
daa
loopne
sbb
add
je
sbb
mov
int3
sbb
add
dec
and
lcall
xor
push
out
jns
cmpsb
out
xchg
out
in
enter
rorb
rorb
xchg
pop
test
in
shlb
xchg
dec
mov
sub
add
jbe
mov
jge
jmp
shrb
cmp
jo
cli
pop
repz
sahf
lock
cltd
jge
jnp
test
les
out
lret
cmp
push
push
mov
sub
sbbl
mov
stc
fstpt
lock
push
cwtl
or
inc
jge
out
movsl
ja
call
mov
and
fistl
cmp
addr16
inc
lret
mov
test
or
or
jg
jg
or
xor
push
adc
push
mov
mov
je
add
adc
xchg
hlt
push
pop
mov
je
add
fs
sar
popa
xorb
add
outsl
mov
dec
pop
xchg
cwtl
test
rcll
pop
pop
xchg
push
outsb
in
mov
jmp
push
rcrb
loope
and
inc
xchg
js
ret
ds
inc
dec
dec
cwtl
mov
dec
into
dec
jbe
mov
pop
shll
ds
inc
inc
roll
mov
bound
dec
adc
xchg
in
push
xor
sahf
test
push
incl
push
add
jbe
cwtl
push
mov
lahf
jge
movsb
hlt
hlt
mov
jg
inc
test
pop
cmp
jmp
lret
addr16
cwtl
fdivs
test
pop
ljmp
push
and
push
fnstenv
push
mov
iret
dec
add
pop
pop
mov
xchg
popf
pop
pusha
push
call
jne
loope
lods
mov
sti
inc
inc
fisubl
into
nop
and
movsl
cld
or
lock
add
sbbb
mov
lock
sahf
idivl
sub
repnz
fbld
outsb
stc
mov
mov
mov
pushf
xchg
aaa
xor
mov
stc
lret
jae
cmp
clc
push
mov
outsl
lods
dec
adc
xchg
mov
jb
xor
or
or
aas
je
add
push
ds
adc
mov
xor
inc
bound
push
pop
or
mov
or
int
lahf
mov
cmp
in
in
jno
xchg
jns
pusha
push
repnz
aam
cmpsb
push
mov
mov
shll
inc
lods
adc
ss
mov
hlt
and
lea
sub
loopne
xchg
pop
jbe
xor
mov
out
jb
filds
in
mov
sub
int
sbb
mov
and
shr
pop
incb
and
jp
push
jge
arpl
cld
add
jnp
add
outsl
mov
enter
sbb
dec
clc
xor
inc
inc
push
cmpsb
lds
icebp
ja
xor
pop
jmp
mov
scas
cmp
and
sbb
ds
outsl
inc
mov
insb
ja
inc
es
xor
mov
push
int
stos
and
jb
cmp
jl
jge
sbb
dec
push
lock
and
mov
andb
out
fwait
push
sbb
insb
ror
pop
insb
pop
in
stos
shl
mov
mov
xchg
ret
adc
dec
cs
and
inc
leave
pop
push
dec
icebp
jl
pop
aaa
jns
rcr
testb
push
add
pop
pop
das
sub
out
inc
mov
inc
dec
adc
mov
sarl
xchg
cmp
pop
inc
mov
sub
jbe
inc
nop
inc
cmpsl
pop
inc
mov
inc
fcomps
inc
mov
jns
stc
es
xor
or
imul
cmp
mov
jbe
push
adcb
xchg
in
fs
push
repnz
scas
pop
mov
add
leave
dec
in
jbe
insl
lret
adc
das
and
insl
or
ror
or
clc
sub
pop
cmp
lahf
ret
xor
insl
ficomps
mov
push
push
mov
outsl
cltd
mov
or
aad
imul
cmp
mov
out
imul
adc
jae
aam
out
rep
clc
or
fwait
cmp
loope
loopne
in
push
dec
mull
mov
sarl
ss
and
enter
out
mov
test
dec
inc
dec
adc
pushf
stc
dec
scas
mov
lods
pop
cli
and
pop
mov
pop
aam
pop
loop
mov
lret
test
push
push
xchg
ja
jmp
pop
cmc
sbb
addl
pop
mov
push
aas
inc
je
mov
xchg
mov
movsl
jg
lcall
cmp
lret
subb
pop
and
fistl
pushl
xchg
aas
test
ret
xor
jns
lret
mov
jmp
jle
lahf
test
sbb
scas
jno
inc
mov
loop
aam
sub
mov
movsb
jbe
inc
or
in
dec
repnz
iret
hlt
xor
lea
in
mov
xchg
imul
inc
jne
fwait
lods
jno
mov
out
fwait
std
dec
push
cmp
jae
pushf
aas
mov
adc
mov
bound
loop
ret
scas
xor
mov
outsl
jno
pop
ret
ss
pop
lock
xchg
out
lods
mov
nop
ss
mov
xor
enter
pop
insl
fsub
in
cltd
les
lret
les
cmp
mov
adc
popa
jp
mov
dec
out
pop
fwait
xlat
lds
cli
inc
leave
pop
sub
ffreep
sub
jne
insl
xor
xor
push
ret
stc
fs
rorl
xchg
mov
add
inc
xor
addr16
in
cmpsb
sbb
push
jp
mov
and
push
dec
pop
popf
lcall
xor
or
xchg
mov
jp
jbe
jne
pop
or
sarl
pop
fimull
int3
xor
call
mov
dec
btrl
push
jo
mov
aad
aaa
mov
out
push
pusha
cmp
fmuls
add
pop
in
xor
pop
mov
sub
sub
jo
xchg
repnz
pop
mov
adc
xchg
ror
sbbb
ret
fidivs
jae
loopne
ret
adc
mov
cmp
fcomi
cmp
inc
pop
test
push
mov
loope
sarb
and
mov
jecxz
loopne
xchg
lods
int
lret
stos
arpl
mulb
lock
mov
scas
xchg
lret
xor
jo
xor
stos
pop
aam
ss
fcompl
scas
cmp
xchg
data16
inc
xor
loopne
pushf
pop
pop
test
pop
loope
lock
inc
inc
sbb
add
sub
sub
push
xchg
daa
loopne
xor
test
out
inc
loopne
mov
imul
roll
pop
adc
jmp
loope
mov
xchg
dec
dec
scas
imul
or
fldt
aam
xor
mov
lock
call
leave
movsl
cmp
not
mov
cmp
xlat
cmp
push
daa
or
outsb
fwait
pusha
das
lock
test
inc
outsb
cwtl
ud2
arpl
cmp
iret
fisubrl
push
test
mov
pop
shl
mov
aam
mov
mov
stc
out
mov
mov
sbb
adc
lret
jnp
dec
mov
and
cli
mov
lea
shrl
mov
sub
in
nop
jecxz
leave
icebp
xchg
cwtl
jge
mov
sbb
lcall
or
les
pushf
out
jge
pusha
xor
inc
mov
add
jne
pop
ljmp
clc
hlt
andb
dec
rcr
ret
outsl
dec
jae
mov
in
cmpsb
push
mov
inc
cs
call
mov
mov
stc
mov
mov
jle
rorb
inc
cs
jnp
ret
and
sub
pop
aad
adc
mov
in
pop
lea
mov
and
or
inc
cwtl
subl
sub
jno
adc
cmpsb
ja
insl
in
cmp
or
loop
pop
xor
fadds
xchg
adc
push
pop
cli
shrb
inc
push
cmp
inc
inc
xchg
test
mov
xchg
sub
sbb
mov
lret
divb
shll
sub
aad
pushf
nop
xchg
cmp
pop
fldt
and
mov
pop
inc
jns
fwait
mov
stos
sbb
xor
repz
into
or
aad
push
sub
sbb
loopne
sar
bound
addr16
sbb
and
movsb
inc
faddl
cmp
sbb
xchg
inc
hlt
adc
daa
mov
loop
ret
leave
xchg
xlat
enter
mov
mov
adc
das
lds
or
cmp
dec
xchg
or
add
mov
lea
xchg
imul
dec
inc
int3
xchg
and
jle
out
in
xchg
mov
push
aam
pop
jns
imul
adc
adc
jle
xlat
lret
mov
imul
dec
mov
inc
mov
pop
or
xor
mov
push
jo
daa
arpl
sub
cli
stc
dec
and
stos
or
adc
push
xchg
cmp
loope
cmp
aam
xchg
clc
xchg
int
push
xchg
jge
jl
jne
aam
cltd
imul
jbe
sahf
push
inc
cli
addr16
scas
and
and
int
mov
out
pop
dec
fisttps
add
mov
stc
pop
push
xchg
pop
imul
bound
mov
xor
sbb
shrl
pop
int
nop
mov
add
fwait
imul
jnp
or
dec
aas
call
adc
sub
bound
jbe
push
movsb
xor
push
incl
jbe
and
and
lcall
dec
or
inc
vandnps
sub
pandn
fldl
jne
ret
jnp
xchg
ss
mov
test
jo
cmp
insl
movsl
add
into
inc
inc
inc
xlat
imul
jmp
sbb
outsl
sub
jg
js
xchg
loop
sub
add
inc
int
cmc
leave
adc
xchg
not
mov
inc
xor
cmp
mov
jl
adc
sub
jb
add
fwait
das
pop
fisubl
mov
dec
pushf
xor
lea
dec
les
fnstcw
stos
shl
xchg
add
je
test
dec
inc
lods
shlb
add
add
lds
mov
inc
xchg
in
mov
test
xor
mov
out
adc
dec
cld
pop
mov
mov
subl
fsin
pop
cli
repnz
jl
inc
dec
in
ret
push
sub
in
and
xorl
jmp
or
dec
jge
leave
shr
mov
cmp
mov
jp
push
and
hlt
mov
and
cmp
sti
shlb
negb
pop
push
aas
sbb
call
mov
inc
mov
inc
sub
cmpsb
add
or
xor
mov
clc
mov
sbb
inc
imull
xor
dec
aam
pop
hlt
std
stos
repnz
into
cltd
shlb
testb
sub
test
lods
mov
xor
fistps
mov
push
ffreep
sub
mov
jle
adc
cwtl
in
and
icebp
aaa
xchg
sub
or
push
sbb
lock
out
lds
mov
mov
lds
adc
cmpsb
ja
addb
push
es
push
lea
inc
mov
xchg
jno
sar
das
mov
rclb
stos
cld
repnz
cmpsb
add
ret
lds
dec
and
int3
adc
pop
and
xchg
push
lea
popl
xor
add
or
pop
mov
repz
push
bound
jle
inc
test
movsw
xchg
mov
in
out
cmc
adc
outsb
rcrb
loope
fists
iret
sub
ret
sub
or
popf
sahf
cmpb
movsb
ss
dec
scas
enter
and
fnsave
into
ret
adc
lock
push
mov
or
icebp
arpl
and
sbb
sub
stos
addr16
jno
sub
adc
xchg
add
sbb
lods
les
int
cmpsl
roll
push
ret
scas
sub
cld
mov
sbb
test
loop
pop
lods
push
jmp
xor
xor
pop
cmpsb
adc
stos
xchg
imul
adc
mov
lcall
mov
adc
sub
fs
mov
xchg
sbb
xor
pop
add
mov
sbb
xchg
jmp
lret
sarb
add
xor
add
cmp
jmp
sbb
inc
xchg
mov
movl
ss
push
das
lea
cmp
push
adc
pop
push
dec
jg
jmp
int
dec
cmp
mov
add
mov
ss
out
jecxz
mov
scas
int3
push
lods
cmpsb
pop
daa
hlt
sub
xchg
adc
jmp
hlt
sbb
adc
add
or
js
jg
popf
int3
stos
mull
inc
imul
cmpl
addl
je
mov
cmpsb
cld
in
icebp
xchg
ss
cwtl
orb
aad
hlt
adc
ds
mov
cltd
mov
sub
mov
repnz
add
cwtl
sbb
xchg
lret
push
je
mov
mov
adc
sarb
cli
xchg
mov
iret
push
jno
jno
xor
jae
bound
xchg
in
add
shlb
in
inc
mov
insb
pop
stos
xchg
lret
and
mov
scas
mov
jae
mov
popf
daa
imul
std
cmpsb
push
mov
mov
scas
adc
bound
and
dec
into
or
js
mov
or
repnz
xchg
mov
jmp
dec
push
sub
lret
adcl
push
cwtl
hlt
adc
fcoml
cmc
jb
add
lods
and
dec
out
ss
inc
dec
in
test
shlb
aam
push
lods
mov
or
add
dec
arpl
das
sub
or
out
and
loopne
adc
mov
add
adc
call
push
mov
pop
aaa
xchg
sbb
add
pop
fwait
clc
pushf
enter
pop
pushf
ds
pop
sub
inc
sbb
testl
add
sbb
jge
xchg
jnp
cmpsl
jecxz
lock
sbb
dec
into
add
lcall
inc
cmp
or
and
fbstp
bound
sub
dec
gs
bound
aaa
inc
jle
xor
scas
pop
mov
sbb
popa
sar
cmp
insl
mov
pop
popa
movd
popf
pop
nop
imul
imul
pop
shlb
adc
mov
or
cwtl
mov
mov
mov
mov
xchg
mov
ret
lret
jge,pt
jae
adc
addr16
mov
cmp
cmp
lahf
pop
imul
mov
int3
xchg
push
pop
push
jo
adc
mov
imul
push
xchg
pushf
sub
sbb
int
cmp
inc
push
mov
jb
bound
push
sub
bound
in
lds
pop
and
test
es
push
or
bound
mov
add
in
jmp
gs
loopne
push
mov
mov
cld
mov
iret
dec
lcall
mov
mov
jecxz
xchg
mov
sti
std
insl
xchg
pop
sahf
pop
sbb
cli
add
cltd
inc
push
out
and
xor
mov
xchg
adcb
mov
mov
or
mov
or
ljmp
je
jecxz
cmp
das
leave
adcl
mov
add
jecxz
movsl
push
cmp
mov
xlat
xchg
ljmp
push
cmpsb
movsb
je
movsl
adc
fildll
dec
adc
pop
mov
mov
xlat
xchg
into
jo
or
lock
filds
add
hlt
mov
mov
es
jo,pn
fiaddl
mov
pusha
test
pusha
lahf
fists
or
popa
push
inc
xchg
add
movsb
ss
in
mulb
into
popa
mov
dec
fists
mov
icebp
sub
ret
inc
aad
int3
je
adc
dec
mov
jae
lock
jl
loop
daa
stos
insb
jae
fidivs
scas
jo
fisubs
add
out
loop
pushf
call
xor
loopne
test
addb
xchg
adcl
imul
pusha
xor
loope
jne
iret
xchg
notb
movsb
test
cmp
repnz
pop
or
test
inc
xchg
pushf
inc
push
inc
push
inc
mov
pop
push
and
subb
das
in
xor
mov
out
push
lret
scas
int3
sub
fiadds
sub
xchg
pushf
xorl
aam
dec
sbb
aam
sbb
add
jb
mov
adc
cmp
adc
stc
ja
inc
pop
fsubp
stc
mov
xchg
xor
aad
xchg
ret
jecxz
mov
push
int3
js
push
loopne
sub
jns
xor
leave
inc
stos
int
movsb
inc
mov
sbb
mov
ja
lea
push
inc
lcall
sub
xchg
push
sahf
fdiv
dec
outsl
mov
mov
clc
jns
shrb
arpl
addb
add
addr16
sarl
imul
xchg
dec
cs
insb
cmpsl
nop
jbe
mov
add
enter
jo
push
xchg
dec
xchg
outsl
mov
fsubrl
dec
les
pop
loop
sbb
xchg
jl
mov
or
push
push
xorb
cmp
inc
por
js
add
out
push
mov
gs
fisttps
pop
aas
enter
loope
int
mov
mov
jne
iret
arpl
es
and
shlb
mov
jnp
xchg
insb
in
mov
jnp
sti
add
std
std
rcr
pop
jmp
lret
add
fcomp
push
pop
push
sbb
sbb
shl
iret
repnz
xchg
cmpl
mov
mov
popl
push
mov
pop
mov
imul
adc
icebp
out
sbb
orl
dec
negb
stos
jecxz
incb
push
dec
fsubrs
xor
jb
ret
push
push
xor
test
mov
arpl
imul
dec
pop
cltd
pusha
scas
into
or
mov
push
mov
test
or
lock
pop
scas
or
imul
mov
movb
repnz
movsb
dec
movsb
popa
imul
ficompl
dec
xchg
das
adc
pop
fwait
jmp
mov
out
mov
test
test
mov
mov
inc
push
push
and
add
mov
lahf
movsl
hlt
bound
add
rcrl
jecxz
pop
jl
and
xor
inc
pop
sarb
iret
mov
out
inc
adc
ret
outsl
xchg
dec
mov
inc
fdivrs
mov
jge
xchg
mov
sbb
xchg
cs
mov
mov
mov
push
cmpsb
movsb
lahf
fwait
cmp
in
mov
fdivr
loop
inc
mov
pusha
xor
ja
cmpsl
pushf
add
xor
movsb
mov
adc
jle
hlt
movswl
add
outsl
test
jne
mov
imul
xchg
fcoml
out
outsl
jle
adc
out
cltd
sub
shlb
push
and
lock
mov
insl
push
decb
pop
push
stc
mov
test
into
and
pop
xchg
stc
jecxz
gs
xor
cs
cmp
stos
js
pop
dec
cmpsl
sahf
dec
addl
mov
loopne
and
xor
xlat
and
cs
repz
or
sbb
or
xor
loopne
inc
sbb
and
and
push
ffreep
data16
rcrl
ds
mov
add
mov
mov
mov
lds
inc
sub
adc
insb
rcrl
mov
cltd
cmp
cld
out
dec
pop
jnp
xchg
push
jno
jg
jbe
adc
pop
pop
adcb
nop
and
shlb
xchg
or
cmc
test
sub
cmp
jecxz
jp
ljmp
jl
jp
ja
add
push
mov
ds
bound
sahf
jae
aam
push
mov
jle
pusha
ret
retw
and
mov
inc
cmpb
mov
push
and
test
adc
add
pushf
xchg
mov
std
hlt
out
xor
dec
sub
push
xor
andb
sub
xchg
mov
pop
outsb
divl
lods
xchg
cmp
in
or
lds
push
sti
push
pop
sbb
push
and
sbb
and
sub
shl
lds
enter
mov
push
mov
imul
pushf
rcrl
xchg
xor
and
loopne
sarl
rolb
loopne
stos
sbb
jp
out
push
fnstcw
mov
idiv
xchg
fmul
sbbb
sbb
mov
xchg
jg
mull
fs
jp
xor
loop
mov
mov
sbb
leave
push
and
cmp
pop
add
inc
call
pop
loopne
jnp
imul
mov
sar
mov
mov
mov
into
push
dec
adc
test
mov
inc
lock
xchg
dec
sub
sbb
popf
clc
out
adc
aam
or
push
push
cmp
addr16
lea
nop
pop
movsb
sar
leave
movsb
mov
cmpl
lock
push
push
lea
imul
push
cmp
add
scas
mov
mov
lea
dec
mov
movntps
aas
ficompl
imul
repnz
inc
xor
push
sub
sahf
dec
push
mov
ficompl
outsb
push
adc
or
popf
test
leave
add
push
insb
xchg
push
xor
dec
push
testl
fs
popf
mov
pop
sti
rcll
cmc
and
xchg
inc
outsb
scas
mov
pop
cmp
mov
sbb
int
ret
cmp
out
jp
lea
push
int
fistl
cmp
jb
addr16
mov
mov
pusha
lahf
jbe
clc
pop
fcmovu
sbb
adc
adc
mov
push
pop
mov
cli
or
push
nop
push
jbe
rcrl
clc
cmc
mov
out
hlt
rcrb
outsl
adc
enter
dec
push
push
dec
adc
aam
pop
es
hlt
test
mov
cmp
cmpsl
fsubrl
add
xchg
push
mov
mov
fisubrs
mov
pop
mov
dec
test
rcrl
scas
pop
jo
cmc
add
xchg
andl
pop
roll
push
stos
adc
mov
mov
mov
and
xor
loop
cmp
addr16
pushf
push
jno
or
xor
inc
cs
jo
and
sbb
pop
orl
pop
push
adc
fmulp
pop
insb
popa
icebp
push
out
xchg
lret
xchg
dec
es
xor
mov
push
fsubl
ret
cmp
ret
inc
je
inc
mov
icebp
xchg
inc
and
push
mov
adc
cmpsb
sbb
mov
repz
idivl
fstpt
pusha
in
mov
lods
inc
inc
jbe
jo
aad
pop
jns
cmp
imul
pop
fstl
aad
cmpsb
aad
in
jmp
fdiv
lret
cltd
mov
lret
je
lds
mov
sbb
sbb
cmp
out
sub
cmpsb
xchg
mov
notl
push
and
or
adcl
jno
loop
test
dec
invd
jp
lahf
out
data16
bound
jle
fistps
or
loopne
ja
arpl
bound
subl
and
sysret
inc
sbb
fisttps
stos
push
inc
xor
stos
insb
mov
int
stos
fildl
jno
inc
jg
xchg
and
dec
mov
and
inc
out
mov
mov
pop
jecxz
inc
cwtl
xor
fisubs
nop
loope
mov
xchg
sbb
ss
push
sbb
cmp
aam
addr16
rclb
mov
or
push
pop
add
sbb
sbb
cmp
fsub
sub
data16
sub
sbb
mov
push
pop
aad
iret
rcrb
in
mov
mov
inc
sbb
sbb
xchg
mov
cmc
adc
sbb
dec
xor
js
mov
xchg
cs
adc
adc
hlt
test
mov
xlat
push
pop
jle
jmp
por
lea
repz
lods
and
div
fcoml
dec
test
data16
dec
data16
xlat
jecxz
test
shlb
push
push
dec
mov
mov
jle
icebp
stos
movb
lods
lret
ror
add
jg
pop
mov
xor
jbe
je
mov
push
fsubrl
ja
sti
imul
inc
nop
xor
add
addl
add
mov
sahf
int3
jae
pop
in
jbe
stc
stos
xchg
xchg
mov
lock
ret
cmp
and
in
pop
lds
ljmp
negl
inc
aas
xchg
sub
ret
test
push
dec
cmc
jecxz
xchg
es
clc
movsl
cmp
sub
push
xor
aas
pop
mov
fdivl
dec
jge
mov
das
pop
pop
out
test
inc
sbbl
sbbl
loopne
imul
mov
es
jne
roll
jmp
xchg
in
hlt
pop
xchg
push
rcrl
xor
aad
and
push
enter
iret
mov
fiaddl
aad
sub
push
push
sbb
leave
mov
mov
orl
pusha
inc
jno
lods
pushf
adc
stc
call
or
cmpsl
data16
sbb
adc
lock
pop
ss
xchg
push
not
sub
sahf
sub
je
pop
add
mov
addb
mov
hlt
mov
icebp
ret
xor
fs
xchg
das
sbb
popf
outsl
movsl
jns
inc
sarl
pop
aam
pop
das
inc
test
push
call
test
jl
lea
sbb
add
cmp
add
movl
cmp
cs
cli
pusha
sbb
pop
sbb
ds
and
imul
sub
add
shrl
test
popa
ficoml
int3
dec
roll
or
cld
jb
xor
cmp
push
push
scas
sbb
rclb
xor
mov
inc
or
je
xor
orb
cmp
mov
add
popa
mov
stos
ljmp
flds
push
cmc
add
push
xchg
jg
adc
cmpsl
out
shl
add
sub
test
in
cmp
xlat
xchg
fadd
xor
xor
adc
loopne
rcrl
int
mov
cmpsb
arpl
lcall
jmp
popf
inc
outsl
addr16
outsl
push
push
mov
fidivl
dec
bound
sbb
xor
js
xor
stos
or
subb
sub
dec
std
sti
hlt
xchg
inc
loopne
pop
pusha
je
jle
testb
bound
mov
adc
inc
or
mov
in
and
movsb
movsb
test
cmc
inc
sbb
sbb
and
andl
xor
ljmp
adc
adcl
pop
mov
jbe
mov
adc
push
add
shrl
clc
lahf
jl
daa
insb
sbb
xchg
notl
int
push
push
insb
mov
popf
icebp
xchg
dec
dec
ds
rcl
mov
out
jg
ret
mov
mov
xor
dec
lods
cmc
dec
mov
shll
cmp
stos
inc
mov
rorl
mov
mov
mov
stos
xchg
dec
jecxz,pt
jno
pop
cli
push
out
or
or
dec
or
jg
outsl
aam
add
outsl
jae
or
call
adc
jne
or
insb
addl
pop
fbstp
es
pop
jo
rcr
in
leave
cmpl
pushf
push
xchg
sub
gs
push
xchg
enter
cmpsl
and
mov
sbb
hlt
adc
rcrl
jg
mov
inc
adc
sahf
aas
int3
add
lock
jge
mov
stos
push
add
inc
mov
xchg
js
jl
add
mov
mov
les
mov
jge
mov
jecxz
pop
clc
add
out
movsl
push
fisttpl
ljmp
inc
add
or
pop
mov
inc
popa
dec
pop
sub
jmp
gs
notb
imul
cmp
or
push
testb
adcl
fdivrs
insl
jbe
cmpsb
testb
popf
pop
repz
out
in
pop
push
jns
in
stos
and
mov
jno
pop
mov
out
popf
stc
insb
xchg
mov
dec
movsb
inc
pop
jmp
sti
lcall
cmp
ljmp
gs
inc
inc
iret
testb
lods
mov
out
fsubrl
pushl
cltd
lcall
mov
mov
nop
pop
popa
addl
ja
je
negb
xchg
pop
js
repz
jne,pt
adc
jae
insl
cmc
add
in
out
out
push
outsb
push
cmp
cmp
mov
dec
pop
lds
xor
movsl
call
lret
mov
addr16
cli
mov
fcomps
ficoms
out
pop
cs
ljmp
mov
cmp
stc
cld
movb
push
adc
lret
push
lea
rol
push
xor
stos
icebp
jg
sbb
data16
dec
das
add
and
frstor
pop
insl
cmp
xchg
adc
cwtl
aas
add
xor
roll
xor
cmp
cld
lret
idivl
mov
cltd
cmp
cmpsl
jns
loop
push
pop
mov
jb
mov
scas
rcll
int
xchg
dec
faddl
popf
inc
xchg
sbb
mov
adc
inc
and
mov
insb
jno
xchg
stos
mov
gs
xchg
push
ffreep
out
arpl
adc
data16
and
setbe
sbbw
mov
imul
jp
jg
movsb
sub
lods
ret
mov
cmp
xorb
xor
add
mov
add
fists
adc
xchg
push
xor
jbe
ss
sub
or
or
lods
mov
repnz
push
lret
jns
loop
push
out
lods
pop
mov
inc
pop
repz
popa
aam
in
mov
adc
movsl
pop
fists
imul
int
test
fnstcw
shlb
cmp
jb
aaa
sbb
and
sbb
scas
mov
mov
lahf
mov
adc
ljmp
mov
and
xor
out
mov
dec
pop
stos
jmp
sarb
out
jecxz
pop
mov
add
pop
into
dec
in
scas
or
fdivrs
les
mov
jmp
ficompl
movsb
ljmp
repz
outsl
add
inc
ds
xchg
mov
cli
daa
mov
loopne
fisubs
xor
adc
cmp
movsl
push
lods
dec
stos
adc
mov
and
pop
add
jg
rclb
mov
push
add
flds
jle
xor
dec
dec
loop
arpl
popf
xorb
push
testl
std
pop
cmp
xchg
jmp
adc
inc
pop
pop
data16
jmp
out
xor
xchg
inc
mov
jbe
outsl
xchg
cwtl
or
in
and
cmpsl
mov
jge
inc
xchg
push
xor
jp
cld
sahf
jg
mov
ds
arpl
xchg
push
imul
ss
cmp
addl
jge
xchg
rcl
popl
outsb
adc
fmul
into
mov
xchg
jg
addb
inc
pop
stos
mov
inc
inc
or
or
clc
sub
xchg
movsl
add
mov
scas
ds
mov
aad
or
mov
not
or
cs
aaa
jecxz
vmwrite
or
les
ffree
push
in
push
push
dec
xlat
jne
imul
mulb
ja
mov
cmp
or
rcrl
jnp
packsswb
fmuls
fimuls
push
sbb
outsb
call
repz
leave
inc
adc
and
sub
cmpsl
loop
out
insl
add
es
std
movsl
xlat
dec
xchg
jbe
add
mov
stos
jle
cwtl
push
sub
push
out
dec
daa
push
push
nop
sub
jno
add
rorl
pop
mov
mov
adc
fsubr
pop
add
jbe
int3
push
int
push
fwait
rcr
jne
popa
out
ret
push
mov
lahf
dec
xchg
adc
jl
jecxz
shrb
dec
out
into
bound
or
sarb
add
ds
inc
jno
mov
xchg
cmpsb
xor
or
push
rorb
jnp
lock
aaa
mulb
inc
mov
pop
mov
jge
lods
or
pinsrw
dec
pop
dec
jns
pop
stos
xchg
icebp
ljmp
dec
cmp
xchg
addr16
fistl
sub
aas
scas
sub
mov
je
mov
mov
icebp
out
mov
lock
jo
enter
jnp
jae
aaa
pop
add
int
test
in
inc
and
outsb
mov
push
mov
jp
xchg
das
sub
jbe
je
lock
insb
out
les
scas
sub
mov
xor
mov
mov
sub
std
push
das
mov
mov
xor
cli
repnz
mov
iret
pop
push
add
fcomps
data16
mov
sub
into
jmp
xor
mov
rol
sbb
jne
mulb
in
in
cmp
fcoml
loop
out
sbb
dec
cvtps2pi
push
cltd
data16
into
adc
test
add
jge
cmpb
or
or
aad
pop
or
adc
loopne
xchg
idivl
std
repz
mov
sub
jno
iret
in
addr16
pop
leave
xchg
ds
flds
sub
in
loop
adc
sbb
jp
rol
repnz
jg
xchg
and
ss
aas
pop
jl
sbb
scas
xor
adc
pop
lods
xor
adc
scas
and
nop
xchg
das
dec
fstl
popf
popf
add
push
sub
in
mov
into
xchg
rorl
inc
fs
sarb
mov
sbb
fisubs
cmp
adc
xor
ja
mov
mov
pop
sbb
add
leave
dec
inc
es
sub
push
cmp
pop
push
andb
int3
add
xlat
test
ljmp
outsl
xor
pop
adc
push
in
sub
sbb
mov
es
int3
int
pushf
mov
lea
lret
jb
xchg
fstpl
cli
add
fstpl
out
bound
jecxz
dec
std
outsb
or
inc
insl
lock
out
jecxz
mov
fsubrs
pop
inc
push
mov
sbb
cmp
out
mov
pop
iret
and
sub
mov
in
push
fwait
stos
and
inc
add
nop
shlb
sbb
sbb
loopne
jns
arpl
ficomps
mov
adc
xor
mov
fiaddl
hlt
mov
neg
call
aaa
push
and
negb
stos
pushf
cmp
inc
scas
fst
jge
mov
les
add
test
sbb
outsl
and
clc
fists
ret
out
lods
mov
push
out
inc
loop
test
test
xor
pushf
add
dec
cmpsl
dec
lahf
inc
imul
out
in
sub
and
divb
stos
enter
movsl
cmp
aam
inc
repz
fs
ret
shlb
test
aad
andl
inc
jae
cmp
cmp
sti
lret
xchg
xchg
mov
insb
jno
outsb
mov
dec
enter
mov
jle
jmp
ja
jo
xchg
inc
xchg
dec
sbb
notl
pusha
jp
add
in
pop
addr16
movsl
or
xor
call
push
cmp
inc
mov
or
gs
out
mov
test
out
push
mov
les
insl
inc
in
xor
ficoml
cmp
lods
movsl
inc
mov
mov
dec
icebp
sub
mov
adc
sub
adc
mov
xlat
xchg
cmp
and
mov
sbb
push
pop
sti
dec
rcll
xchg
push
daa
mov
xor
movsb
sbb
movsb
clc
test
mov
jl
mov
push
cmpsl
test
addl
int
cmpb
fwait
jb
adc
leave
push
add
ficoml
dec
and
test
inc
fbstp
pop
push
lock
shrb
cmp
dec
icebp
adc
dec
mov
gs
in
js
xlat
in
mov
cmpb
xor
repz
jmp
cmpsl
or
jl
or
les
fwait
adc
jl
fidivrl
cmp
xchg
fwait
xor
sub
in
movsl
pop
aas
adc
mov
sbb
adc
inc
imul
mov
rcl
aaa
loopne
pushf
lds
pop
mov
add
movsb
movsb
cmp
add
icebp
scas
jns
push
js
ds
sti
scas
mov
outsl
xchg
sbb
cmp
inc
loopne
fyl2xp1
fmuls
pop
sarl
jl
adc
dec
xchg
xchg
stc
jno
jmp
mov
loopne
adc
lea
mov
hlt
xor
ss
repnz
imul
lods
repz
or
dec
pop
pop
mov
fldl2e
add
mov
fs
mov
into
cmp
adc
add
lret
sti
pop
or
mov
adc
adc
push
hlt
or
sbb
push
or
aaa
stc
jmp
ja
and
jbe
mov
inc
jb
mov
mov
jae
ss
loop
push
mov
mov
dec
mov
lcall
adc
lcall
popf
push
cmc
xor
dec
jmp
pop
leave
or
dec
mov
std
sub
shll
mov
and
stos
mov
xrelease
into
jmp
push
add
int
xchg
dec
out
int
fcomp
pop
mov
jbe
adc
loopne
adc
pop
cmc
sbb
mov
sub
rorb
push
out
cltd
sbb
aam
shrb
outsb
xchg
push
test
inc
mov
cltd
pusha
mov
and
fisttpll
jnp
daa
repnz
ljmp
or
mov
dec
sbb
add
adc
or
adc
mov
sbb
fildll
das
sub
aas
gs
ret
dec
fdivs
insb
ljmp
mov
aad
cmpsl
in
gs
subl
shl
outsl
les
or
push
push
mov
push
inc
aam
and
mov
add
leave
jl
jl
lock
add
pushf
jne
and
cmp
mov
aas
pop
pop
in
sub
mov
xchg
sbb
pop
and
or
sbb
testb
push
imul
fmuls
xor
cs
repz
inc
jle
jb
js
mov
into
inc
lods
cmp
pop
jne
das
or
dec
outsb
ja
imul
or
dec
popf
inc
stos
stos
les
inc
xchg
cmc
pop
inc
hlt
mov
sub
mov
adcl
xchg
lahf
or
sub
xchg
mov
cmp
outsb
cwtl
shld
popa
das
or
lret
cld
or
pop
sub
jns
hlt
xchg
iret
int3
fisubrs
push
add
add
xchg
fsubl
adcl
inc
imul
xchg
or
pop
in
or
mov
dec
adc
in
jecxz
and
dec
jno
lea
pushf
cwtl
sbb
cmp
out
pop
add
fcmovu
xchg
inc
xchg
jg
scas
icebp
or
jns
ficoml
imul
pop
std
lods
sub
add
mov
pop
shrb
repnz
push
inc
mov
int3
arpl
push
mov
xchg
out
rorl
dec
in
pop
pop
out
and
out
ffree
lds
push
dec
sub
lods
stos
stc
and
icebp
nop
cmpsb
jbe
xchg
sbb
fsts
and
inc
pop
fs
lods
push
mov
xchg
inc
mov
or
or
lcall
add
mov
mov
xor
mov
loop
xchg
stc
popf
inc
add
data16
push
lahf
ss
fidivrs
inc
cmc
jp
adc
dec
xor
mov
inc
mov
lret
call
sbb
lcall
cmp
nop
test
push
aaa
inc
mov
mov
sbb
ficompl
mov
sarl
inc
sbb
imul
std
add
and
fs
leave
pop
imul
sarb
xchg
pop
in
jo
ds
add
scas
cs
mov
xor
hlt
mov
inc
cld
setnp
mov
in
cmp
xor
daa
call
test
lcall
xor
sahf
fadds
les
pop
mov
pop
mov
fxch
or
add
enter
push
inc
sbb
addr16
xchg
cmpsl
loope
test
std
sub
insl
dec
hlt
fnstcw
push
repz
sub
add
dec
sbb
xor
push
push
mov
dec
out
fnstcw
mov
mov
mov
aaa
shll
popf
and
jecxz
lock
mov
adc
push
pusha
push
push
xchg
push
sub
das
pop
and
movl
sahf
or
cli
rcll
bnd
xor
push
cmpsl
arpl
sub
ljmp
test
and
push
cwtl
leave
mov
and
lods
bound
and
aaa
inc
adc
cmpsl
fisttps
mov
dec
and
xchg
pop
repz
cli
repz
je
aas
dec
push
repnz
loop
push
lret
push
ret
xchg
cli
pop
and
pop
xlat
mov
cwtl
cltd
or
sbb
mov
sahf
hlt
mov
jmp
andb
stos
xchg
popf
jae
repnz
inc
add
dec
fsub
out
sbb
jbe
xchg
sarl
xor
insl
test
xor
push
inc
cmp
xor
inc
push
cmp
out
mov
adc
push
mov
mov
lcall
mov
nop
sbb
loope
xchg
inc
ret
push
push
js
xor
jmp
movb
lea
repnz
subb
icebp
dec
fcmovbe
orb
std
hlt
mov
scas
daa
das
ds
sub
push
data16
std
repz
mov
cmpl
push
test
outsl
fidivrs
jo
cli
xor
or
xchg
pop
mov
lds
adc
jae
sub
xor
ds
sbbb
xchg
push
mov
mov
inc
xchg
stos
test
add
cs
mov
xchg
shlb
negb
xchg
mov
mov
and
add
or
cmpsb
pop
js
mov
cli
pop
push
or
int3
pop
sub
sbb
rcrl
lods
mov
lods
test
mov
icebp
xlat
mov
das
fs
mulb
push
scas
imul
push
push
fldenv
mov
repnz
jbe
add
dec
add
jg
scas
lods
sbb
test
mov
xchg
out
ret
push
pushl
cvttps2pi
orl
pop
jo
pop
xchg
push
sbb
sti
adc
inc
jmp
loopne
leave
xchg
or
mov
mov
inc
iret
cmp
in
xchg
sbb
mov
pushf
xor
enter
jge
shll
inc
jmp
inc
test
dec
lods
pop
pop
xchg
stc
push
inc
loop
lock
jp
ljmp
cmp
cmp
testb
pop
add
out
and
xor
aam
into
loop
in
push
divl
cmp
rcrl
lahf
mov
cmp
mov
jo
pop
mov
xchg
push
adc
mov
or
ret
dec
dec
xlat
mov
and
adc
cmp
sub
xor
push
mov
sbb
cltd
movsb
mov
xchg
ljmp
push
cmpsb
and
add
bound
cmp
jl
push
push
and
sub
fnstsw
pop
pushf
idivl
enter
or
lret
push
cmp
pop
jo
fimull
add
icebp
cmp
rol
cmp
mov
xor
xor
cmp
mov
xlat
cs
mov
add
cmp
mov
nop
sbb
scas
push
sub
adc
adc
xor
rorl
shll
jle
cltd
jb
xchg
iret
adc
sbb
stc
jne
inc
out
mov
outsl
mov
push
xchg
push
fmull
inc
repz
xchg
in
jbe
mov
sbb
mov
xor
inc
fcoml
insl
in
nop
mov
push
sarl
jb
sbb
movsb
sub
fs
and
fisubl
inc
push
scas
push
movsb
xchg
lea
in
mov
pop
adc
in
into
and
xchg
push
cmp
push
stc
sbb
dec
jp
mov
jo
xchg
pop
and
arpl
fsub
push
orl
ja
jmp
mov
enter
mov
loop
sahf
scas
xlat
xchg
inc
add
xchg
jmp
lds
addr16
jl
xchg
cs
inc
and
pop
sub
movsl
sahf
adc
push
mov
outsb
jo
leave
popa
adc
pop
dec
fisttpll
and
jne
out
je
xchg
dec
clc
jns
jg
shll
lods
aam
inc
jmp
jmp
jl
fwait
rorl
repnz
shrl
mov
aaa
call
and
lods
cltd
sub
xor
mov
pop
push
lods
cs
sahf
add
mov
inc
or
mov
imul
inc
mov
andb
jmp
mov
inc
mov
mov
xchg
mov
and
xor
add
cmpsl
fs
mov
mov
sub
sub
call
pop
out
mov
xlat
shrb
inc
xchg
fucom
or
adc
sbb
ss
mov
fistps
and
pop
sbb
adc
mov
add
mov
fistpll
and
sbb
jg
std
push
adc
jne
punpcklbw
mov
xlat
dec
mov
xor
pop
mov
and
popf
pop
movsb
clc
dec
mov
pop
stos
fisttpll
ret
and
dec
vmovhps
arpl
aas
or
xor
pop
test
and
les
cmp
test
mov
sub
cltd
or
mov
pop
ljmp
iret
xor
or
sub
sbbl
pop
aam
push
mov
sarb
iret
sahf
pop
inc
sbbl
xchg
inc
shrb
cmp
mov
and
jg
mov
shll
push
es
jecxz
add
cmp
mov
xchg
push
push
lcall
mov
dec
mov
rcll
sbb
push
aas
adc
push
lods
xor
jb
cmp
pop
xchg
xchg
mov
push
stos
into
mov
jo
into
scas
mov
jecxz
rorl
pop
xchg
jle
dec
xor
xor
sub
and
add
fildll
enter
push
push
and
test
add
add
push
mov
movsb
sbb
add
xchg
push
fstps
subb
pop
movsl
repnz
xchg
sbb
add
pop
ljmp
jg
outsl
lret
xor
test
pop
sub
testb
fiaddl
cmp
sub
bnd
test
mov
xchg
cmpsl
cmp
divb
xchg
pop
xorl
sub
cmp
divl
das
ficoms
gs
ret
stc
xchg
add
fldenv
sti
call
sti
sbb
ja
xchg
outsl
mov
pusha
xchg
fisttps
pop
and
imul
adc
cli
aam
mov
xor
sub
hlt
stos
rcll
jns
xor
andb
mov
lret
xor
ss
leave
aad
xor
jp
cs
push
lahf
dec
stos
inc
mov
dec
cmp
test
fstl
and
mov
add
jns
add
push
fmuls
rsqrtps
shlb
testb
push
decb
xchg
pushf
gs
xchg
movsl
lods
stos
ljmp
push
cld
inc
les
inc
ds
adc
pusha
int3
lcall
add
jae
into
jb,pt
dec
or
shlb
mov
mov
sub
push
mov
push
jbe
aas
ffree
orl
in
push
outsl
jo
or
xchg
push
sbb
mov
jbe
mov
mov
into
and
loopne
cmp
mov
ljmp
add
xlat
and
lods
sub
aam
pop
pop
jp
push
mov
add
test
dec
sbb
out
add
mov
jmp
shlb
mov
mov
lods
add
sbb
fsincos
push
popa
lods
push
cltd
lods
movnti
mov
sub
rol
xchg
punpckhbw
call
add
ret
sarl
loopne
cli
movsl
or
addr16
daa
jo
cwtl
push
jnp
repnz
xor
dec
adc
cmpsb
inc
test
push
pop
add
sub
mov
dec
cmp
cmpl
test
pop
cmpsl
stos
sbbb
out
pop
hlt
insl
dec
and
stos
add
inc
sub
lret
sub
jns
cwtl
and
scas
jnp
adc
push
leave
aam
push
dec
jns
push
inc
in
loop
fmul
testl
pop
cmp
xor
shll
fwait
out
outsb
push
ss
inc
mov
cmp
imul
mov
fs
pop
inc
out
rclb
mov
call
daa
lods
xchg
sub
test
stos
cmc
mov
call
mov
fdiv
mov
jle
mov
push
call
movsl
add
pop
icebp
jmp
fcomp
scas
andb
sbbb
push
andl
ljmp
test
pop
mov
inc
mov
fwait
les
outsb
mov
jmp
xchg
mov
ja
fnstsw
mov
dec
int
xchg
in
mov
inc
leave
std
dec
and
ret
mov
test
iret
or
pop
and
sbbb
fwait
and
call
and
xor
mov
push
or
mov
arpl
add
push
push
xor
mov
loop
ss
clc
or
jle
mov
inc
jmp
jnp
in
push
dec
cmp
sbb
xchg
xorb
rcrl
jae
mov
push
dec
xchg
out
add
push
shrb
dec
in
adc
imul
inc
xor
dec
negb
arpl
int3
aas
mov
les
xchg
inc
les
ficomps
ja
aaa
or
mov
jns
or
cmp
ret
cmp
cld
jbe
test
cmp
push
mov
aas
sub
push
mov
loop
clc
es
mov
pop
jnp
es
push
jb
popa
pop
sub
mov
pop
push
imul
push
fcomip
addb
cltd
dec
pop
stc
popa
mov
loope
lods
iret
mov
int3
mov
mov
lret
mov
mov
cmp
pop
dec
clc
imul
inc
stc
lcall
xor
mov
lods
shrb
dec
mov
sbb
pop
mov
aam
mov
push
mov
cmp
cmc
push
loop
xor
jb
or
orl
xchg
outsl
leave
and
xchg
in
es
push
fstpl
loop
mov
fs
fld
dec
int3
into
mov
xchg
pop
jg
cltd
sbb
inc
notb
dec
ret
sub
mov
xor
sbb
pop
aaa
cli
lahf
aad
js
fistpll
fwait
mov
or
or
insl
cmp
xchg
std
jl
in
bound
repz
push
jo
dec
mov
sbb
and
and
dec
sbb
sub
or
loop
icebp
sti
shrl
adc
shll
adc
into
xchg
lods
pop
fs
fists
pop
mov
daa
push
push
jb
mov
mov
popf
sbb
mov
bound
mov
mov
es
enter
sbb
push
push
mov
jb
pop
mov
sub
push
add
or
lods
int
xchg
mov
and
cmc
mov
push
repz
aam
inc
or
mov
jb
sbb
repnz
aaa
cmp
cmp
in
inc
imul
mov
and
scas
mov
divl
mov
stos
ljmp
dec
fisttpl
shlb
imul
push
ja
daa
xchg
movsb
int3
add
in
ret
mov
xchg
xlat
int
sti
mov
mov
jno
cli
add
mov
rolb
push
incl
add
or
cmpsb
testl
cmp
repz
jnp
cli
shlb
test
dec
push
or
inc
shr
pop
inc
mov
cmp
cld
lret
sub
jns
mov
push
hlt
sahf
mov
and
and
cmp
push
cs
mov
es
test
jg
ss
cli
bound
mov
out
pushf
jns
imulb
cmc
jb
xor
push
iret
or
lea
lods
incb
push
pop
or
in
add
lret
mov
mov
ret
cmpsb
pop
int3
enter
stos
xchg
test
push
jecxz
cmp
mov
gs
xchg
enter
xor
icebp
cltd
xchg
mov
jae
movsl
dec
adcl
adc
push
dec
call
mov
and
pushf
xor
dec
xchg
jge
or
mov
sarb
clc
jg
out
add
ljmp
dec
filds
das
add
ret
inc
jmp
rcrb
dec
or
and
shlb
aad
inc
repnz
jmp
push
xor
and
cmp
mov
mov
cli
xchg
sub
test
push
cltd
xor
stos
sbb
pop
cli
arpl
into
jb
fdivr
sbb
repz
cmc
in
notl
fisubs
inc
insl
cmpsb
mov
push
push
jo
jge
mov
jb
xlat
mov
aad
jl
jp
loopne
clc
sub
xor
fidivs
leave
in
xor
les
shl
shlb
icebp
inc
push
clc
mov
aam
outsl
mov
push
adc
fwait
jno
call
push
mov
pop
aas
mov
fs
sbb
inc
out
imul
dec
imul
cmpsb
mov
arpl
outsl
fwait
jbe
push
or
pop
pop
dec
xor
and
inc
mov
add
sbb
and
insl
inc
repz
ljmp
ret
mov
repz
xorl
push
jbe
cs
jle
lret
stos
arpl
sbb
mov
cmpl
xchg
sti
pop
lods
or
inc
sub
dec
mov
lea
sbb
in
fstpl
aam
mov
bound
fistps
insb
push
adc
or
fcom
sub
xchg
lea
push
xchg
jmp
in
push
mov
dec
adc
test
cwtl
inc
mov
fisubrs
rcrb
sub
lret
call
es
ljmp
stc
and
fsubs
inc
xlat
jo
mov
loop,pn
adc
roll
loope
cmp
mov
test
test
or
jp
sub
nop
mov
dec
bound
xchg
pop
inc
or
pop
jecxz
cwtl
aaa
adc
popf
cmp
add
ss
push
and
push
jnp
xor
push
jmp
rol
mov
shlb
fs
int
lods
icebp
loop
movsl
test
loopne
in
pop
sbb
mov
sti
imul
sbb
pop
mov
cld
popa
clc
mov
mov
movsb
loope
add
in
pushf
push
cmpsl
jbe
mov
inc
in
out
shll
addr16
lret
push
loop
mov
inc
mov
xor
mov
jp
es
loopne
jbe
int3
inc
add
add
sub
mov
mov
dec
sub
sti
mov
sub
cmp
pop
cmp
and
mov
mov
cli
cli
std
sarb
ud1
xchg
cld
dec
data16
das
push
xchg
cmp
pop
test
fistps
push
jge
repnz
mov
sub
fs
test
jecxz
dec
int
cli
fsubrs
mull
add
mov
pop
ljmp
neg
push
jns
jecxz
dec
cmp
leave
idivb
in
stos
xor
sbb
mov
inc
push
adc
dec
xchg
or
jno
pop
xchg
popf
std
push
adc
aam
sub
testl
rcrl
sti
jecxz
pop
adc
add
sub
add
jl
mov
out
mov
rol
cmp
imul
stos
push
lods
mov
int
je
xchg
lds
xor
neg
std
add
shlb
lcall
xchg
in
enter
dec
jb
pop
mov
jg
xchg
pop
pop
add
stos
push
ja
add
lods
cwtl
inc
or
mov
xchg
arpl
and
stos
jno
xor
xor
stc
jns
adcb
push
push
xor
pop
mov
xchg
mov
lret
mov
adc
mov
push
fcom
inc
jmp
fdivl
cmp
or
imul
jecxz
or
lcall
dec
sub
lcall
push
xor
lods
xor
xchg
mov
dec
jb
movsb
jno
out
lock
outsb
out
push
mov
test
sub
insl
pop
outsb
jg
mov
js
pusha
jae
dec
and
dec
cli
xor
xor
lock
inc
arpl
int
jns
std
ljmp
add
aaa
add
lds
pusha
cmp
divb
lret
inc
cmpsl
scas
sub
pop
xor
add
es
mov
aaa
mov
fwait
jno
iret
jo
push
sarb
pop
jmp
sub
or
outsb
sub
out
sub
mov
outsb
jmp
fstl
mov
push
xor
or
sub
loop
sbb
out
int
push
xchg
ret
jns
add
jns
adc
test
loopne
push
dec
clc
add
addr16
lcall
or
adcl
dec
jo
loope
cmp
pop
sub
xor
or
mov
xchg
movsb
in
rol
dec
sub
in
popa
mov
outsl
mov
xorb
gs
push
jb
dec
and
mov
fiaddl
mov
fisubrl
add
inc
jecxz
pop
pop
addr16
mov
dec
jmp
cmp
fs
hlt
test
jae
shlb
adc
jns
sbb
or
mov
pop
or
mov
int3
mov
sub
es
mov
dec
push
and
lea
or
push
arpl
lcall
shrl
je
xlat
dec
inc
shlb
sub
iret
xor
lds
jae
shll
add
cmp
xor
and
lcall
mov
cmpsl
mov
dec
es
cmpsb
cmp
enter
cmp
aaa
addb
jb
call
test
imul
mov
cmp
cmc
xor
jp
xor
insl
mov
push
subb
cltd
or
dec
rol
leave
or
mov
mov
mov
push
cmp
inc
sti
imul
push
cs
add
lcall
adc
lods
mov
aas
call
cli
sbb
ds
cmp
fisubs
xchg
mov
imul
fildll
and
cmp
repnz
inc
mov
aam
sbb
jbe
mov
add
popa
pop
lea
ds
pop
outsb
shl
push
rcl
dec
mov
adc
rcrl
mov
sub
mov
rorl
rol
push
xchg
and
stos
pop
imul
inc
add
and
pop
pusha
mov
xlat
cmp
push
aam
sbbl
sub
punpckhwd
push
ficoml
jbe
jns
mov
push
fs
xchg
cmpsb
xchg
mov
imul
fistl
lds
cmc
dec
mov
scas
das
mov
mov
nop
cmpsl
cmp
int
sbb
sub
dec
enter
pop
pop
flds
stos
and
cmp
ljmp
outsl
sub
adc
repnz
dec
mov
jne
loope
mov
jge
inc
fwait
cmp
add
xor
shlb
jne
mov
jp
jmp
dec
inc
pop
inc
push
shrl
and
push
addl
adc
xor
sbb
inc
sbb
mov
mov
push
mov
lods
ror
cmp
push
lods
mov
aas
or
mov
or
xor
lcall
test
xchg
test
mov
std
cmp
sbb
add
xchg
mov
imul
or
push
sub
mov
dec
sub
icebp
js
jno
push
push
xchg
subb
and
push
enter
push
pop
popf
adcb
cmp
and
pop
les
cmc
jge
add
mov
outsl
mov
xchg
pop
lea
sub
xor
in
adc
movsb
push
jmp
xor
lock
sbb
push
sub
mov
sub
pop
lcall
dec
orb
and
and
or
mov
test
in
and
mov
add
or
stos
pop
neg
jle
add
addr16
sub
pop
jne
sahf
xchg
inc
pop
sbb
mov
or
and
xchg
mov
mov
xor
mov
mov
int3
adc
push
add
jp
test
inc
lret
aam
sarb
test
in
lods
loopne
push
or
cmp
or
cmp
cld
ljmp
push
cs
das
and
js
rdpmc
jno
not
sub
pop
sbb
mov
pushf
dec
jg
and
imul
or
pop
pop
daa
bound
xor
into
add
inc
jle
mov
push
adc
iret
push
adc
jb
test
pop
and
cmpsb
lcall
xorl
dec
push
jo
mov
xor
sbb
jno
cmp
enter
or
js
inc
mov
mov
loop
loope
out
jecxz
xor
clc
je
push
inc
test
lods
addr16
gs
lret
int
and
push
mov
inc
sub
add
dec
gs
jecxz
shrb
mov
rcrb
scas
jl
mov
rcrl
sub
adc
inc
mov
push
fs
and
mov
jno
add
mov
ljmp
lahf
mov
ds
out
and
dec
push
or
fsubs
jno
es
loope
jg
bnd
or
xlat
jno
mov
xchg
push
jno
into
ret
inc
lods
sbb
popf
mov
cmp
mov
adc
xor
cld
sbb
or
inc
popa
mov
push
dec
int3
cwtl
cmpsb
adc
cmp
flds
dec
les
push
push
cmpsb
sarb
jp
je
push
push
cmp
dec
jns
add
cld
fucomi
shll
xlat
fs
add
jecxz
fdivs
aad
push
sbb
mov
pop
sub
mov
sub
int3
sub
out
aam
add
and
push
and
mov
inc
outsl
mov
cltd
ret
xor
xchg
rcr
ja
jns
sub
push
lahf
xor
mov
xchg
or
xchg
and
xchg
add
mov
xor
ficompl
aas
jmp
int
out
pop
outsb
repnz
popa
roll
cmp
inc
test
mov
pusha
iret
fsubl
mov
cmpb
movsl
cs
or
cli
pushf
add
jb
loop
fsubl
jns
test
inc
jo
push
mov
push
lods
push
movsb
add
repz
in
xlat
mov
popa
popa
jb
pop
enter
mov
outsl
test
imul
fidivrs
jl
repz
push
icebp
repnz
fsts
aas
fists
mov
inc
iret
push
cmpsl
iret
inc
test
push
jns
data16
ss
imul
in
xchg
inc
cmp
int
pop
adc
xchg
aas
rclb
add
cld
inc
ljmp
sbb
xor
mov
inc
jle
xor
cmp
das
in
or
add
faddl
xor
imull
ljmp
push
loop
fs
ljmp
rcrb
pop
dec
and
mov
inc
mov
call
inc
dec
arpl
aam
mov
sahf
xchg
pop
add
cmpsl
dec
sbb
adc
repz
sbb
jge
xchg
sar
movsl
pop
or
call
mov
enter
sub
pushf
in
sbb
mov
sub
je
not
into
jl
mov
clc
jns
aad
scas
pop
jecxz
xchg
cmp
pop
mov
adc
xchg
mov
outsb
int
movsb
bound
inc
cmp
cmp
in
dec
push
mov
push
addr16
sti
testl
cwtl
aad
mov
inc
sbb
sbb
pusha
dec
aam
add
cmp
mov
add
mov
jecxz
hlt
hlt
addl
mul
scas
js
bound
hlt
sub
dec
push
dec
mov
inc
xor
jg
pop
mov
jno
aaa
and
xor
pop
stos
int
repnz
fbld
dec
mov
or
loope
cs
cmp
mov
and
xor
pmaxsw
aaa
xor
sub
sbb
mov
xchg
push
scas
lods
test
gs
jge
xchg
int
mov
mov
fcomp
lret
or
nop
outsb
or
das
xor
addr16
mov
fcomps
cltd
in
cmp
lds
fdivrp
fnsave
push
pusha
das
sub
mov
cmp
cmp
icebp
scas
pop
add
cmp
fistl
ds
int3
out
lods
or
cmpsl
adc
dec
mov
jnp
aad
add
cwtl
mov
mov
out
pop
lcall
adc
insb
or
or
lea
adc
jl
jl
in
lahf
sub
lar
test
in
pop
pop
cmpsl
pop
ds
cmpsl
loop
loop
lcall
xchg
sbb
sub
cmp
inc
push
dec
pop
mov
bound
cmp
xor
shrl
iret
mov
and
popf
jnp
sbb
daa
inc
outsb
mov
push
lods
sub
fdivrs
cmpb
add
adc
dec
popa
jno
or
xchg
xor
outsl
pushf
pop
pop
and
adc
add
xor
pop
jl
ja
mov
jb
fdivs
test
lock
outsl
test
push
call
add
inc
clc
lds
mov
lcall
std
push
loope
adc
push
lcall
repnz
sti
and
adc
adc
dec
fstps
fwait
idiv
xor
push
cs
dec
sub
test
fsubrs
jmp
test
jns
sub
xchg
or
jle
lea
enter
mov
iret
xchg
jbe
insb
or
cmp
jae
aaa
sbb
pop
inc
in
fistl
in
mov
jae
shlb
adc
xor
test
sub
clc
dec
mov
push
out
aad
scas
repnz
cmp
icebp
mov
and
stos
mov
push
movsl
ja
pusha
scas
roll
sub
or
subb
repz
jecxz
enter
jnp
int3
outsl
sbb
out
in
inc
ljmp
add
loop
dec
xchg
mov
inc
into
pop
mov
fisttpl
or
adc
aaa
and
les
mov
arpl
dec
test
jnp
das
icebp
aas
imul
jo
mov
adc
icebp
mov
mov
int3
daa
arpl
add
nop
push
push
loopne
ret
shrl
dec
cwtl
mov
jne
xchg
cltd
push
pop
sbb
cmp
pop
lret
xor
lods
xor
jmp
repz
jmp
bnd
sub
add
jle
sbb
mov
leave
xchg
adc
cltd
gs
insl
fcoms
ret
adc
push
daa
scas
jge
repnz
cld
dec
ljmp
fdivs
test
pop
dec
jo
mov
data16
adc
out
ror
outsb
iret
stos
inc
adc
jno
jmp
sub
push
pop
pop
or
sarl
cwtl
jae
stos
stos
pop
and
ljmp
sbb
bound
adc
negb
mov
add
lahf
enter
mov
pop
mov
lock
std
in
test
cld
ds
mov
and
dec
mov
movsb
test
adc
mov
leave
mov
pop
js
das
pop
push
jb
push
int3
andl
cmp
push
inc
in
cmp
mov
icebp
push
mov
stos
arpl
shrb
xor
mov
pop
mov
mov
sti
jnp
add
out
mov
popf
mov
imul
mov
jno
iret
addr16
mov
and
jge
leave
adc
ja
jae
xor
iret
mov
push
pop
sbb
lods
xor
ficoml
outsb
out
mov
cli
pop
lds
sub
outsb
mov
decl
lcall
js
inc
loop
fbld
inc
insb
aaa
mov
cmp
lock
sbb
sbb
cmp
psubsb
aam
jl
or
stc
xchg
stos
mov
or
ja
jg
cwtl
jmp
out
fiaddl
test
sbb
xchg
lret
loope
aad
notl
cmp
cltd
stos
cmp
ss
inc
sub
cmp
mov
int
pop
ja
aas
inc
add
lods
dec
icebp
les
cld
push
mov
shl
mov
add
cmpsl
add
add
xor
cli
aam
xor
push
xchg
cmp
test
jno
mov
mov
icebp
push
pop
not
dec
add
pop
pop
push
and
inc
cmp
sub
cmp
pop
push
cmpsl
test
popf
dec
into
iret
sub
sbb
mov
sub
das
js
sbb
ds
mov
das
lea
add
add
mov
jbe
pop
sbb
pop
xlat
jno
icebp
rorb
mov
lahf
sub
ret
out
ret
gs
pop
jae
int
xchg
sbb
mov
cld
fstl
mov
inc
mov
mov
and
leave
data16
lods
mov
ja
mov
pop
adc
push
int
aam
pop
lahf
addl
sub
std
mov
or
mov
loop
test
lods
lods
test
jns
into
push
pop
scas
push
testl
jl
mov
sahf
je
pusha
icebp
je
hlt
xor
adc
ds
pop
dec
fs
pop
push
inc
push
mov
pop
and
cmp
sbb
pop
adc
jecxz
enter
xchg
loop,pt
mov
mov
mov
loopne
bound
push
fs
add
mov
mov
cmp
xchg
fsubrs
mov
test
adc
mov
sbb
sub
add
cmpsb
imul
and
jae
cmp
dec
dec
jmp
and
pop
ss
push
mov
in
sbb
jne
bound
mov
jb
sbb
sub
pop
shll
add
sbb
sub
fwait
dec
pop
out
sbb
cltd
movsb
xor
and
hlt
imul
mov
pop
pop
xchg
lods
aaa
lea
jmp
in
jno
cld
lods
adc
loope
fsubrl
test
fnstsw
sbb
inc
stc
pop
mov
and
pop
push
adc
int3
mov
xchg
mov
popf
fnstsw
insl
xchg
adc
pop
xchg
iret
sub
int3
sbb
mov
inc
fwait
jge
jbe
cwtl
pop
mov
adc
addl
sbb
sub
push
cwtl
jle
xchg
pop
ss
push
pusha
push
sbbb
in
shll
add
cli
adc
push
mov
push
nop
fs
push
lret
mov
lret
jns
lock
stc
int
adc
insb
jp
adc
popf
pop
in
mov
sub
negb
fiaddl
pushf
loop
sbb
jmp
in
jg
lds
xchg
insl
adc
hlt
mov
xchg
int3
je
push
pop
inc
dec
sbb
repz
push
insb
sbb
sub
imul
dec
jae
pop
rcr
clc
pusha
jp
push
xchg
cli
ret
or
sub
xchg
addr16
shl
push
push
lods
mov
xchg
stos
jbe
scas
sar
mov
mov
lock
ljmp
add
push
add
mov
sub
data16
jmp
inc
hlt
fs
sbb
push
fidivrl
mov
call
jno
or
adcb
push
and
sarl
and
jno
sub
sarb
repnz
dec
push
push
loope
loope
mov
idivb
rcll
jns
inc
in
enter
cmp
mov
sahf
xorb
in
cwtl
rcll
adc
pop
mov
and
and
sbb
lds
enter
cmp
test
movsl
data16
push
push
cmp
fwait
add
ret
sbb
jle
add
aaa
stos
fptan
jnp
inc
lret
movsb
jne
int
add
xchg
sbb
xor
data16
fsubl
cltd
das
outsb
adc
inc
or
pop
hlt
test
mov
aad
cmp
push
orl
nop
mov
jl
adc
call
test
fimull
cmpsb
dec
mov
xchg
idiv
rolb
test
push
xor
push
push
aam
addr16
lock
sbb
insl
xor
js
testb
xor
fcoms
cmp
xchg
sbb
inc
pop
mov
sub
popf
rcll
jl
movsl
lcall
es
xchg
or
les
pusha
movsb
add
addr16
loope
dec
inc
xchg
mov
loopne
and
cmc
add
push
or
xorb
dec
jge
pop
stos
ret
addr16
or
mov
or
int
inc
sahf
je
inc
and
les
add
add
adc
out
xor
and
divl
pop
jb
jb
test
lock
xchg
pop
cltd
std
push
and
loopne
push
cmp
das
rclb
hlt
sub
sbb
hlt
movsb
dec
inc
mov
jb
or
lret
lret
in
and
cmp
ss
fsubl
mov
mov
and
push
push
cmp
pusha
fidivs
xor
cmpl
inc
fistl
ret
icebp
ret
and
jl
or
sbb
push
or
sbb
je
test
sub
and
test
pop
sbb
stos
mov
adc
cmpb
add
xchg
repz
pop
push
lret
sar
repnz
call
xor
sti
jmp
or
lods
adc
mov
jp
fists
pop
insb
gs
xor
leave
inc
int
cmp
pop
call
pop
cwtl
orb
cmp
mov
les
pusha
jbe
sbbl
les
ja
mov
scas
and
lods
scas
test
push
lock
inc
mov
lock
push
test
pop
test
mov
xchg
mov
pop
sbb
push
mov
sti
and
lret
sub
xchg
mov
cmp
addb
push
sarl
iret
jp
mov
xchg
lods
fucomp
imul
dec
pop
rcrl
pop
jne
push
xor
and
mov
jbe
pop
ds
xor
icebp
shll
in
stos
mov
cwtl
arpl
and
lret
or
adc
sbb
addr16
scas
pcmpeqb
andl
jp
pop
push
jns
sub
lcall
sarb
xor
jle
fwait
add
aaa
pop
push
outsl
dec
jno
out
sbb
inc
cmpsb
mov
dec
mov
lcall
popf
stos
ss
xchg
subb
cs
int
sbb
aad
sub
mov
std
out
pop
or
jg
xchg
jecxz
lea
movsl
or
inc
cld
adc
push
pop
mov
jo
dec
dec
addr16
add
push
adc
inc
adc
mov
push
imul
dec
dec
push
bound
push
add
mov
je
cwtl
xchg
movsl
sti
sbb
push
sahf
loopne
cmp
sub
out
push
or
loop
add
mov
push
movb
movsl
in
or
mov
push
mov
lea
xor
into
scas
jp
push
pop
pop
test
roll
mov
jmp
mov
dec
pop
ret
das
push
inc
jmp
sub
popa
mov
xchg
sbb
xor
aas
imul
in
stos
pop
cmp
dec
lcall
aaa
jb
in
scas
mov
dec
cmpsl
mov
xchg
repnz
mov
lea
lea
ret
es
lods
nop
jg
push
mov
jle
jecxz
xchg
push
mov
cmc
fs
mov
ret
jmp
leave
mov
nop
idivl
mov
and
inc
test
sarl
fcomi
inc
hlt
xor
inc
and
notb
mov
mov
mov
mov
and
add
add
adc
jne
xchg
fneni(8087
xor
mov
or
pop
or
xchg
mov
subb
xchg
xor
aaa
mov
ljmp
push
jecxz
shr
sub
inc
imul
lock
sahf
mov
push
mov
aas
jecxz
sarb
pop
not
in
push
pop
arpl
cmp
mov
cmpsl
dec
mov
mov
add
inc
rcr
cmpsb
and
and
mov
ljmp
inc
add
pop
mov
add
cmpsb
in
jb
shl
clc
in
ds
out
jmp
adc
repz
and
pop
jno
push
addr16
xor
mov
xorb
dec
cwtd
or
dec
xlat
loop
out
mov
into
mov
mov
xor
fsubs
ja
int
dec
scas
push
pop
dec
mov
bound
das
push
mov
mov
jne
or
add
mov
adc
lcall
or
mov
add
mov
jnp
aas
or
mov
jo
cli
dec
xchg
insl
imul
pop
push
insl
push
imul
mov
pop
loopne
ret
push
nop
dec
jb
push
inc
cmp
inc
das
mov
and
in
mov
mov
cmpsb
loopne,pn
push
outsl
jo
scas
fnstcw
movsl
dec
test
das
test
adc
add
xor
adc
and
sbb
push
ficomps
xchg
testb
mov
popa
out
movsl
sti
pop
cs
jg
inc
test
fistpll
shrb
pop
in
pop
dec
pop
stos
xchg
cmpsl
aam
xor
pop
in
sbb
rolb
mov
mov
das
movsb
cmpsb
sbb
cmp
mov
sub
fdivs
mov
pop
sbb
lcall
adc
addr16
in
add
mov
mov
sbb
jno
mov
fs
add
sub
cli
sub
or
cltd
es
or
sti
inc
add
mov
repnz
sub
mov
pop
add
mov
xchg
push
mov
pop
pop
pop
dec
sbb
je
in
sbb
jp
and
push
pop
shlb
movsb
pop
lods
orb
cmp
jecxz
dec
inc
jg
pop
xor
sti
stc
pushf
shrb
mov
push
inc
gs
inc
xchg
push
push
sahf
in
cltd
jl
pop
mov
lret
push
sub
lret
cwtl
sub
pop
cmpsb
pop
sub
xchg
mov
lds
xchg
sbb
push
mov
add
xlat
ljmp
lahf
cmp
fdivrs
inc
ret
and
sub
cmpsb
dec
and
mov
and
mov
mov
cmp
mov
imul
xchg
jecxz
mov
lahf
popa
rcl
xchg
mov
mov
pop
pop
or
fldenv
jae
rcll
xchg
clc
pop
mov
adc
push
ljmp
es
adc
mov
pop
ret
push
pop
add
sub
jae
and
push
movsb
fcoml
adc
jle
aas
stos
sahf
aam
cltd
lret
jl
sbb
dec
ljmp
adc
iret
mov
mov
popf
mov
fidivrl
lock
sub
outsb
adc
sub
arpl
daa
test
jl
lds
loope
xchg
pushf
or
shr
sbb
or
fistps
popa
cld
pushf
cmp
jns
cmpb
ss
clc
stos
es
push
sar
mov
cs
and
fs
popf
repnz
popa
inc
test
mov
xor
into
xchg
mov
test
test
adc
mov
outsb
inc
rorl
dec
ja
and
pushf
std
cmp
sbb
sbb
imul
out
and
dec
aad
jns
mov
subb
mov
sub
mov
idivb
cmp
outsl
jecxz
in
mov
xor
nop
out
add
xor
pop
fwait
out
nop
sbb
push
adc
adc
jge
arpl
mov
insb
lret
sbbb
iret
je
dec
inc
sahf
mov
divl
das
lcall
sbb
jne
fmuls
mov
and
sbbl
out
addl
xor
stc
dec
and
flds
stc
dec
js
adc
jmp
std
lea
jle
xor
scas
shrb
sub
mov
push
push
cmpsb
aad
inc
adc
fsts
not
loope
pop
daa
mov
das
xchg
ss
xchg
mov
fiadds
sbb
and
or
enter
xor
mov
jne
jmp
shr
clc
jno
pop
lods
insl
pop
cmp
mov
xchg
push
or
sbb
test
into
xlat
sub
add
cltd
ja
test
xor
cmp
mov
sub
out
jae
mov
mov
fs
jns
jge
cld
icebp
enter
inc
fbstp
jg
push
pop
es
aas
sbb
adc
mov
xor
push
jecxz
jbe
push
hlt
or
push
test
scas
cs
faddl
fstl
pop
adc
push
add
mov
lock
enter
sti
pop
pusha
xor
mov
stc
push
popf
pop
cmpb
add
fidivrs
cwtl
lcall
mov
in
jae
sbb
fstpl
outsb
pop
int3
fucomi
sti
xchg
sbb
mov
shlb
mov
out
pop
aaa
or
and
arpl
out
mov
outsb
push
or
subl
mov
out
xchg
pushf
sbb
aam
mov
xchg
pop
maskmovq
push
add
push
jbe
sarl
fnstenv
pop
hlt
ljmp
call
lret
inc
inc
scas
mov
les
adc
or
test
pop
push
je
pop
test
fdivs
loopne,pt
stc
lret
xlat
fwait
pop
mov
push
xchg
inc
mov
add
notl
mov
add
cmp
inc
xchg
add
inc
out
xchg
mov
push
xchg
sbb
and
jp
iret
dec
std
repnz
lret
pop
hlt
xchg
or
mov
fldenv
xor
lds
dec
lods
jmp
outsl
iret
bound
jb
fcomp
cli
cmpsb
mov
inc
les
pop
test
mov
add
adc
and
ljmp
nop
lock
mov
pop
adc
cmp
fmulp
sub
cmpsl
leave
jne
ret
jae
lahf
or
fsubrs
or
das
jmp
rorb
ret
lea
xchg
repz
subb
push
cli
jg
cmp
fbstp
push
rolb
not
jge
mov
xchg
push
push
not
test
nop
fisubrl
pop
jae
shrl
jo
in
stos
mov
sub
addr16
pop
dec
xchg
cwtl
cltd
fwait
repz
aaa
popa
fwait
and
and
iret
bnd
or
insl
out
mov
push
pop
sbbl
xor
dec
test
test
xlat
add
cmp
and
lock
xchg
sub
sahf
mov
mov
push
cmpsl
xor
push
es
push
lods
pop
or
jb
mov
sub
inc
repz
mov
xchg
cmp
subb
cmp
push
pop
add
mov
decl
pusha
movsb
pop
hlt
push
mov
hlt
cmpsb
push
sbbl
movaps
aad
adcb
out
lret
pusha
xchg
mov
inc
sub
notl
mov
mov
jecxz
cmp
shll
mov
iret
cmc
rorl
cmp
stos
stc
adc
mov
push
inc
pop
mov
xchg
and
in
xor
and
inc
adc
mov
jl
push
pusha
das
loop
in
mov
jle
out
pop
push
lret
je
cmp
or
pop
ljmp
nop
pslld
xor
daa
dec
push
leave
cmp
push
push
insl
inc
data16
add
adc
push
jp
les
sti
iret
pop
pop
and
std
sub
test
inc
cmpsl
fidivs
add
lods
mov
je
pusha
aas
lds
jl
jp
aad
bound
mov
fnclex
xchg
lods
mov
and
xor
or
mov
mov
outsl
loopne
lea
jmp
test
xchg
mov
test
roll
push
pop
in
mov
push
push
hlt
inc
cmp
xor
cmp
xchg
xchg
pushf
decb
cmp
imul
orb
dec
inc
or
movsl
push
cmpsl
shl
xchg
gs
ficoml
dec
cltd
jno
cltd
aaa
mov
dec
movhps
cmpsl
popf
mov
test
stos
xor
and
or
cmp
nop
ljmp
out
je
es
arpl
addr16
in
test
in
cmp
add
into
jg
imul
dec
dec
sub
loope
mov
mov
jmp
mov
insl
pop
mov
adc
inc
cmp
adc
adc
pusha
pop
sub
daa
cmpsb
into
push
cld
xchg
test
mov
fwait
add
pop
mov
dec
addr16
out
cmc
lret
pusha
or
fcompl
push
movsb
pop
leave
loopne
adc
pop
out
cmpsb
pop
cli
out
and
aad
or
push
push
cmc
cmp
lods
pop
inc
rorl
shlb
test
push
sub
mov
and
mov
cld
xchg
dec
out
das
adc
push
scas
scas
ds
mov
in
test
jae
negl
das
std
hlt
cmp
jmp
mov
push
xlat
movsb
and
push
xorl
pusha
dec
adc
inc
loopne
pop
sub
in
pusha
sub
or
daa
adcl
mov
addb
xor
push
inc
dec
xchg
add
sbb
scas
dec
addr16
sbbl
pop
and
inc
mov
mov
lcall
rcrl
push
daa
add
push
imul
movsl
inc
push
jne
add
sbb
cmp
insb
aad
jbe
pop
adc
out
cli
testb
std
sbb
loop
rcll
and
fldt
ljmp
jecxz
mov
lret
arpl
mov
pop
and
inc
pop
pop
andb
arpl
pop
cmc
stos
dec
mov
adc
cmpxchg
dec
xchg
mov
adc
lcall
xor
jnp
dec
mov
decl
jbe
xchg
jecxz
imul
cmp
fs
sbb
add
push
ss
lret
rcll
aas
sbb
or
xchg
jl
popa
negb
and
neg
test
jns
rcrb
xor
jns
dec
repz
xor
xchg
ja
sahf
mov
or
cmpsb
fdivr
cs
cmp
clc
jne
repz
imull
popl
xchg
cmp
les
adc
sbb
xlat
mov
roll
sub
ja
and
sbb
pop
and
fdivrl
in
rcrb
aam
iret
and
mov
pop
or
mov
movb
and
sub
or
jne
jp
xor
pop
fidivl
fbstp
jb
pop
fs
adc
ret
out
sub
and
sbb
push
sub
sub
iret
xchg
pop
subl
jl
dec
mov
stos
sub
mov
inc
loopne
jecxz
xorl
dec
les
roll
cmc
iret
fidivl
cli
test
ret
xlat
jnp
dec
scas
mov
sbb
sub
imul
pop
outsb
cmp
adc
mov
mov
mov
shll
inc
data16
lcall
mov
or
lock
cwtl
imul
mov
lds
jnp
gs
mov
div
cmp
xlat
cmp
mulb
and
push
cmp
or
andl
push
sti
or
fs
dec
aam
aas
xor
push
shll
divb
pop
shll
lods
leave
sahf
or
dec
mov
loope
in
out
mov
add
lds
inc
lods
lds
and
mov
lods
or
sbb
pop
movl
xor
sub
sub
sahf
int
int3
enter
in
adcb
and
cmp
push
or
aas
scas
or
add
push
mov
aam
pop
gs
adc
push
rolb
add
je
mov
or
add
stos
dec
xlat
iret
clc
and
out
daa
sub
hlt
lods
jns
inc
xor
inc
cmp
rol
daa
fldt
aaa
and
mov
jmp
and
outsl
jg
inc
stos
lea
test
adc
cmp
dec
mov
jo
cld
std
mov
jne
cmp
push
pop
push
in
or
or
pop
push
pop
mov
stos
or
push
les
bound
cmp
sub
leave
test
dec
xor
inc
rolb
cmp
movsb
push
pop
cmp
es
mov
and
test
das
pop
xor
push
sbb
dec
enter
xchg
mov
or
lds
mov
pop
sti
fcompl
ret
fucom
jle
pushf
adc
push
mov
setge
xlat
mov
mov
fimull
dec
aas
inc
repz
xlat
mov
flds
dec
mov
movsb
int
imul
cmp
nop
mull
sbb
int
add
add
in
jo
movntps
rcrl
xchg
xchg
mov
outsl
mov
push
adc
dec
xchg
push
scas
fisubrs
insl
les
add
addb
or
push
and
xor
jg
rorb
xchg
push
inc
jbe
push
pop
movd
push
mov
sbb
cmc
push
rorb
mov
xor
fisttpl
in
mov
ja
aaa
mov
imul
jno
or
jb
xor
scas
adc
pushf
fcompl
int
mov
xor
xor
std
and
clc
pop
pop
ja
hlt
add
mov
and
out
test
and
out
inc
jne
jno
aad
ljmp
ss
insl
arpl
xor
shlb
push
loopne,pt
fwait
adc
ret
xchg
mov
mov
sti
cmp
into
adc
ss
mov
into
mov
inc
mov
cltd
ljmp
mov
sbb
dec
cmp
imulb
inc
int3
out
xchg
lock
cs
addr16
or
cs
imul
push
dec
shl
enter
cmp
mov
mov
jne
dec
inc
ss
mov
mov
int3
rcr
cld
add
push
test
std
sub
mov
mov
xchg
loopne
adc
sub
cmp
sbb
je
dec
mov
push
mov
mov
out
rorw
in
mov
fisubrs
rcrb
dec
sahf
fsubp
cmpsl
dec
sbb
leave
cmc
cltd
int3
je
and
daa
dec
inc
jmp
faddp
pop
cmpsb
fwait
aaa
loope
mov
pop
mov
add
and
push
push
mov
scas
and
sub
fcompl
fnstsw
cwtl
cmc
jle
les
lret
mov
mov
repnz
xchg
pop
in
or
out
outsl
xlat
xor
add
pusha
fldt
icebp
not
inc
push
dec
xchg
sbb
dec
fmulp
add
adc
daa
ret
das
pop
lahf
test
sbb
xor
jl
cwtl
mov
cmp
enter
jmp
sub
xchg
mov
movsb
pop
sbb
outsl
adc
or
daa
lock
mov
call
lret
aaa
ret
insl
xlat
div
dec
shrb
repz
push
jp
hlt
lds
lahf
jge
faddl
aad
js
inc
xchg
aad
mov
cmp
mov
mov
sbb
fmull
mov
pushl
stos
iret
mov
cli
mov
scas
jne
icebp
cld
jp
out
sub
adc
dec
test
movsl
mov
sbb
imul
fldl
pop
scas
mov
adc
repz
xchg
cltd
jp
clc
and
push
sbb
sub
add
clc
dec
push
sbb
push
mov
sub
xchg
dec
sub
dec
mov
mov
dec
lret
int
lds
sti
pop
mov
xor
rcrl
mov
subl
repnz
or
sbb
dec
push
imul
gs
rorl
jecxz
rorl
mov
push
pop
jbe
jg
je
mov
loope
jl
jp
arpl
lret
push
inc
or
pop
leave
inc
fdivrl
jbe
imul
int
scas
jg
mov
push
out
idiv
idiv
push
add
mov
mov
xlat
pushf
or
sub
sub
xchg
adc
out
popa
mov
das
scas
sub
adc
sahf
leave
loope
loope
mov
jg
negl
sub
mov
fucomp
pop
test
and
pop
js
test
xchg
out
rorb
push
cmp
out
jbe
inc
aas
cltd
inc
add
outsb
arpl
sbb
inc
add
or
cmp
jg
test
out
scas
imul
in
popf
cmpsl
movsb
nop
int
sub
sbb
out
pushf
mov
arpl
dec
pusha
mov
inc
xchg
out
pop
mov
sbb
cli
sbb
outsl
mov
test
out
fisttpl
in
rolb
sub
dec
cmp
jbe
cmp
add
mov
lods
stc
pop
movswl
test
shrb
mov
imul
adc
setge
sub
mov
test
sub
pop
xor
push
cmp
ljmp
lcall
sub
repnz
jecxz
pop
jle
inc
sbb
add
mov
in
mov
mov
push
fnstcw
dec
cs
movsb
dec
cs
fwait
or
xchg
push
xchg
adc
mov
scas
cmp
adc
jecxz
das
xchg
popf
testl
push
cmpb
pop
sar
push
jle
adc
push
jge
add
xorb
add
xchg
jbe
fisttpl
dec
icebp
mov
inc
jp
leave
mov
mov
dec
loopne
dec
or
mov
fadd
sarb
mov
out
inc
and
jns
inc
shl
cmp
das
mov
and
lods
loop
xchg
aam
sbb
gs
orb
push
xchg
jne
mov
or
shll
xchg
sbb
xchg
cmp
in
stc
cmpsl
stos
daa
frndint
push
push
jne
pop
push
bound
pop
cs
insb
sahf
in
call
push
xchg
hlt
sarb
add
and
sbb
inc
dec
aaa
push
shll
add
daa
dec
sbb
pop
and
int3
mov
xor
stos
neg
mov
cmpsb
sbb
xchg
sub
lods
cmp
int3
fs
inc
or
fistpll
jno
lea
mov
adc
inc
loope
arpl
jo
jmp
outsl
xchg
lods
ret
push
jp
clc
push
sub
sbb
jmp
pop
pop
cmp
cmp
inc
add
mov
insl
ret
mov
inc
scas
jno
daa
xor
movsb
and
enter
push
adc
jl,pt
fistl
cmp
adc
lock
xchg
ret
fwait
or
xchg
aas
mov
incl
jbe
mov
jp
stos
sub
mov
and
jns
sbb
out
push
fwait
ds
cld
xchg
or
push
pop
rcl
sub
jbe
fsubrp
fldln2
shll
out
data16
lea
js
pop
push
adc
and
aas
lret
lret
xor
shlb
xchg
lods
repz
inc
cltd
in
dec
scas
fildll
nop
int3
pop
adc
cmpb
icebp
popl
or
cmc
mov
nop
gs
test
xchg
imul
xor
pusha
je
andl
mov
fcoms
jecxz
or
pop
jmp
push
adc
popa
cmp
pop
mov
iret
push
shrl
int
fdivrl
dec
xor
dec
inc
scas
dec
inc
inc
sarb
mov
fistpll
shll
mov
inc
or
pop
in
orb
popa
xchg
sbb
pop
jnp
push
lret
sbb
cli
jmp
cs
or
cmc
xchg
adc
mov
fcmovne
mov
insb
sub
data16
mov
dec
mov
pop
and
js
jle
aad
mov
jmp
mov
dec
mov
ss
mov
jle
jmp
mov
mov
aad
cli
movsb
dec
cmp
or
sbb
mov
cwtl
pop
lea
pusha
mov
sub
or
cld
mov
add
out
insb
imul
data16
xor
call
fstpt
cmpsl
call
push
imul
dec
push
inc
add
test
mov
cmpsl
and
js
mov
cmpb
pop
dec
mov
ficoms
pop
sbb
or
sbb
pop
lds
clc
notl
sbb
mov
mov
insb
fcomi
test
fisubl
loope
cltd
add
loop
push
adc
push
js
leave
je
fstpt
stos
addb
fstps
clc
js
ss
das
pop
or
xor
sbb
mov
pop
jecxz
sbb
mov
sub
push
adc
stos
mov
lahf
cmp
sbb
icebp
adc
xchg
and
or
addr16
inc
xchg
and
lock
cmc
push
scas
cmpsl
jmp
push
jae
jns
jmp
sbb
pop
cmp
lods
in
jge
push
pop
aam
roll
int
push
inc
pop
xlat
ds
and
jmp
mov
leave
cwtl
orl
ss
mov
jbe
aas
mov
outsl
mov
xchg
add
imul
ret
mov
repz
cmp
mov
lret
sub
add
jge
dec
push
mov
fsubrl
insb
jl
addb
jns
call
mov
push
in
jmp
je
aam
shl
jo
aad
jno
xor
push
in
rol
and
dec
stos
dec
fmuls
pop
inc
pop
aaa
rcl
xchg
dec
mov
fbld
stc
adc
pushf
scas
sbb
fwait
adc
cwtl
pop
shr
lods
xchg
lods
hlt
mov
xchg
xor
or
imul
popl
mov
pushf
mov
adc
out
cmp
cli
xlat
mov
stos
mov
pop
pop
je
scas
push
shl
loop
insb
out
aad
into
notl
cld
fcomi
add
or
mov
cld
dec
arpl
cs
cmp
cmp
lock
cs
sbb
popf
or
sub
js
adc
cli
mov
mov
push
cli
inc
cmp
jo
jno
out
adc
jae
repnz
and
leave
loopne
lcall
jno
insb
mov
rclb
aam
pop
inc
pop
repnz
lods
inc
lret
sbb
jmp
push
fiaddl
lock
mov
inc
dec
mov
call
and
testb
mov
cld
and
sub
mov
sbb
dec
or
sbb
decl
addl
xchg
jno
sahf
insb
sub
or
add
cmpsb
dec
rolb
mov
add
inc
add
lock
push
ja
lods
and
jne
fstpt
fbld
popf
fxtract
shl
shll
scas
dec
fcomps
jae
pop
inc
ss
cmp
xchg
call
popf
mov
rolb
movsb
shlb
stos
insb
cmp
test
sbb
pop
das
lcall
jo
data16
popa
lahf
scas
jns
xchg
enter
js
or
loopne
mov
aad
shl
lods
push
mov
push
push
out
clc
scas
test
call
loope
sub
sbb
loope
sahf
mov
push
pop
int
int3
pop
shl
aad
inc
sub
test
jp
cs
or
clc
shrb
ja
mov
jns
cwtl
test
sub
mov
lea
pop
movsl
movsb
imul
dec
cltd
nop
rorb
jb
pop
stos
ljmp
pop
mov
sbb
in
orb
das
xor
clc
push
mov
lcall
push
imul
dec
jnp
push
repz
xlat
mov
dec
push
xchg
aad
adc
sbbb
and
addr16
mov
jne
inc
mov
outsb
mov
mov
idivb
cmc
nop
imul
jae
imulb
scas
push
in
ljmp
mov
nop
aas
push
and
mov
por
arpl
pop
dec
test
jbe
cs
and
int
lcall
sbb
push
dec
mov
xchg
cmpsb
test
insl
mov
lods
cmp
xchg
int
lea
inc
or
inc
inc
mov
mov
std
xor
iret
loop
lock
dec
outsl
push
jmp
je
inc
out
dec
popa
adc
pop
push
loopne
mov
les
clc
jl
clc
das
lods
xchg
and
or
andb
repz
aad
inc
mov
cmp
mov
cmc
mov
inc
adc
pop
jbe
ret
mov
sbbb
movsl
dec
loope
std
and
mov
dec
push
push
or
decl
test
gs
pop
fiaddl
or
outsl
push
das
dec
and
cli
mov
pop
jl
in
faddp
and
frstor
daa
jle
pushf
ja
pop
push
cs
push
jecxz
iret
xchg
outsb
lea
sbb
and
icebp
add
mov
pop
or
or
jle
out
xor
xchg
aas
mov
dec
sbb
jp
push
jmp
and
clc
dec
insl
xchg
or
aad
sub
xchg
ljmp
xor
or
sbb
dec
xor
cmp
in
jo
mov
cwtl
nop
push
in
pop
jmp
insl
lods
sub
rorb
lds
mov
je
icebp
mov
or
push
sub
std
push
mov
incb
out
dec
movsl
pop
push
push
pushf
movsl
push
mov
inc
fsts
dec
mov
sub
push
add
add
cmp
ja
xchg
dec
xor
call
and
pop
xchg
cmp
fs
inc
in
cmpsb
and
mov
xchg
sub
cmp
rcrb
jnp
xor
xor
bndstx
mov
mov
xor
cmp
movsl
scas
test
faddl
insb
clc
cmp
aaa
arpl
in
das
mov
sub
xchg
mov
mov
sar
dec
movsl
jno
xorb
popa
addb
lcall
popa
xor
mov
cmp
cmp
mov
out
xchg
cmp
adc
add
clc
pop
or
loopne
push
jo
xchg
push
add
ds
nop
mov
and
jbe
gs
push
pop
sbb
hlt
sub
inc
inc
aam
lret
push
sub
cmpsl
mov
lret
cmpsl
pop
inc
dec
jae
pop
sahf
jg
xchg
bswap
mov
jns
xchg
enter
test
or
aaa
cmp
leave
push
lds
xorb
ljmp
lods
add
lcall
movsl
jne
in
adc
daa
repnz
pushw
and
fwait
insb
mov
cmpsl
pop
mov
je
sub
movsb
pop
xorb
cmp
push
pop
add
negb
xlat
ss
push
pop
ret
ret
stos
cwtl
or
pop
dec
mov
cmp
fcoml
dec
cmp
stos
aam
add
or
mov
mov
cmp
dec
push
test
sub
insl
or
cmp
sbb
xor
scas
testl
ror
sbb
jbe
jle
jp
lods
loop
repz
jo
clc
xchg
idiv
push
enter
mov
fcomps
xor
xor
int
xlat
sbb
inc
lcall
dec
dec
inc
dec
pop
fwait
push
std
xor
mov
xor
push
out
lcall
pop
movsb
and
jg
adc
hlt
xchg
mov
pop
or
xchg
lods
pop
adc
ret
test
cwtl
pop
or
stos
sahf
subb
adc
icebp
insl
sub
sbb
clc
xchg
pop
xchg
cmp
ficoml
adc
or
cmp
rorl
or
mov
mov
lods
clc
lcall
fistpll
push
jo
clc
into
arpl
push
and
mov
and
inc
pop
xchg
out
imul
jno
sbb
adc
cmp
pop
sub
mov
push
outsb
clc
in
inc
inc
push
outsb
pop
push
xchg
rorl
jg
sbb
call
cs
insb
scas
fcoms
aaa
inc
pop
rolb
and
or
lret
jne
xor
insb
jecxz
scas
pusha
mov
mov
mov
adc
inc
je
mov
mov
push
bound
sbb
push
data16
pop
test
xchg
jne
iret
mov
add
orl
mov
adc
test
jae
jge
mov
mov
pop
xchg
or
sub
ficomps
sti
push
mov
pop
ss
scas
pop
cs
mov
movsl
pop
cmp
dec
sbb
xchg
jp
std
xchg
jg
in
popf
arpl
out
subl
call
subb
mov
out
lea
or
fisttpll
push
mov
insl
push
mov
shrl
push
inc
fcmove
push
cmp
mov
and
movsb
dec
sub
les
dec
and
daa
dec
stos
in
pop
push
pushf
mov
and
mov
mov
mov
inc
cmpsb
inc
and
push
fldcw
sbb
out
mov
pop
pop
daa
daa
xchg
popf
cmp
cmpsb
pop
inc
je
imul
mov
mov
testb
cmp
or
iret
jo
inc
jne
fstpl
push
nop
jbe
fdivrs
pop
xor
cltd
push
adc
aaa
pop
ffree
fwait
dec
enter
in
xor
sub
addr16
ret
mov
sub
add
mov
pop
mov
mov
outsb
pop
out
stos
ret
xor
sub
flds
inc
cmpsl
in
inc
jnp
mov
or
cli
xchg
aad
add
stos
jne
call
mov
mov
push
mov
cmp
in
arpl
inc
test
repz
jl
jge
andl
loopne
fwait
daa
jecxz
rclb
idiv
call
in
adc
xchg
aam
push
mov
jbe
fmuls
enter
push
dec
iret
dec
xchg
dec
cmpxchg8b
dec
out
je
ljmp
mov
std
cwtl
mov
das
out
icebp
les
jns
cmp
mov
insl
or
add
adc
hlt
add
loop
daa
jae
daa
rorl
inc
mov
xchg
and
inc
rorb
nop
inc
add
push
xor
mov
xor
ds
pop
jmp
sbb
jge
jo
dec
mov
add
mov
cmpsl
pop
movsl
mov
xor
and
inc
cmp
movsl
pushl
cld
scas
lcall
outsb
in
popa
xchg
cwtl
lcall
jl
jb
fadds
adc
aaa
mov
mov
mov
pop
mov
add
push
mov
jae
vpsubq
sub
mov
dec
scas
sbb
mov
jle
fistpl
push
adc
imul
add
pop
neg
cmp
inc
pop
mov
push
inc
arpl
and
dec
mov
imul
and
jmp
aaa
sbb
cmp
mov
mov
stc
test
call
mov
cld
leave
pop
adc
jbe
xor
shrl
popa
inc
test
inc
lret
int
stos
jbe
rol
push
pop
hlt
aam
int
mov
xor
inc
xor
sbb
cmp
inc
and
inc
lods
pusha
sub
shlb
mov
idivb
mov
bound
stos
cld
xchg
loopne
mov
mov
xchg
push
repnz
add
jne
cmc
aas
push
lcall
mov
lret
dec
fwait
sti
dec
aaa
rorl
jne
gs
add
fwait
movsl
mov
in
push
cmp
repz
clc
cmpsl
in
jge
cmp
add
fisttpll
xchg
or
push
add
cltd
jo
or
leave
push
in
push
cs
or
bound
insl
mov
sbb
dec
nop
roll
imul
inc
shll
fs
dec
mov
jns
int
outsl
cmpsl
xor
jge
mov
shll
and
pop
pop
push
mov
add
pop
xchg
cmp
into
xor
or
into
jbe
test
jl
clc
mov
add
repz
jb
fs
in
ljmp
dec
imul
fbstp
lock
push
out
pop
cwtl
je
lahf
xchg
rcrl
sbb
cmc
xchg
jge
add
pop
pop
push
push
push
pop
inc
cmp
outsl
sub
aaa
testb
cli
pop
jnp
sti
ds
into
aam
push
jae
pop
ret
loopne
sub
and
and
push
dec
std
mov
arpl
pop
divb
xchg
mov
dec
iret
xor
xorb
aas
xchg
shlb
adc
xchg
test
int
outsb
pop
mov
cmp
je
negb
xchg
hlt
or
outsl
mov
mov
jecxz
insl
or
xor
xchg
xor
push
jo
cli
test
enter
jne
data16
pushw
daa
mov
in
pop
mov
fildl
fadd
dec
mov
rdmsr
int3
out
sub
rorl
aad
ret
cmpsl
leave
mov
push
stc
sub
pop
xchg
cs
test
hlt
and
push
sub
adc
sbb
push
mov
jle
imul
mov
imul
mov
popf
repnz
jb
inc
jmp
mov
call
cmp
imul
mov
and
outsb
roll
stc
xlat
adc
rcll
pop
popl
pop
mov
mov
leave
cmp
dec
and
jge
xor
test
outsb
mov
pop
clc
movsl
inc
or
in
sub
fsubs
mov
xor
mov
pop
aas
adc
or
push
push
cmpsl
stc
es
inc
ficoms
cmp
fs
pop
jp
jge
stc
into
jno
stos
lock
clc
dec
hlt
popf
jno
xchg
sub
ds
sub
push
pop
fimull
scas
pop
and
mov
sar
mov
push
pusha
and
jne
xor
cmp
aaa
and
out
xor
pushf
cmp
sahf
push
movsb
repnz
inc
mov
xchg
push
xor
mov
lcall
icebp
stos
clc
je
out
std
stos
stc
orl
fistpll
mov
repnz
vpmaddwd
js
sti
in
addl
daa
mov
js
inc
aas
rol
mov
mov
pusha
rcll
inc
lds
mov
add
lret
pop
dec
das
mov
movl
jo
repnz
sbb
sbb
cmp
test
mov
inc
mov
mov
pop
pop
jae
jnp
cmpsl
adc
cld
popf
dec
and
push
ljmp
es
enter
aad
loopne
jne
push
rorl
jae
call
sub
dec
or
mov
sbb
jns
jp
and
or
sub
out
jle
inc
imul
jge
fstl
inc
adc
and
out
ss
lahf
cmp
cmp
call
jle
int
es
mov
insl
adc
scas
mov
jl
mov
je
jbe
mov
imul
mov
imul
mov
cld
mov
in
lods
jmp
adc
jbe
sbb
mov
xchg
jp
testl
inc
dec
mov
adc
cwtl
lods
repnz
jmp
sbb
into
lahf
push
cmp
mov
iret
xchg
pop
les
mov
inc
and
push
cmc
fidivrl
push
push
insb
add
mov
xchg
imul
cmpsb
sub
insl
fcom
rorb
inc
push
fidivrs
adc
jle
sbb
or
jecxz
add
or
insb
or
push
and
cld
mov
sbbb
inc
out
push
inc
or
add
mov
std
pusha
test
movsb
mov
imul
loopne
dec
sbb
adc
xchg
imul
adc
mov
push
pop
push
mov
sti
cmpsb
inc
jno
or
leave
mov
prefetch
cmc
and
xchg
xor
xchg
loop
xchg
pushf
mov
and
or
in
aaa
adc
push
or
xchg
mov
add
xchg
jge
lods
ud2
cmp
add
xlat
push
iret
jne
xchg
icebp
xlat
ds
xchg
sub
nop
jmp
fnstenv
and
or
loop
fwait
ljmp
lahf
nop
movsl
enter
adc
inc
lret
cli
orl
lcall
push
push
sub
verw
iret
add
cwtl
sbb
lret
lcall
inc
les
lds
sub
mov
fnstsw
rol
push
adc
adc
jne
adc
sbb
movl
push
call
iret
stos
pop
movsl
ljmp
sbb
or
push
les
pop
and
test
jne
mov
dec
rorb
sbb
loopne
pop
mov
in
nop
mov
mov
jl
addl
fldenv
idiv
popf
xor
mov
push
sarb
jno
cmc
mov
jge
into
adc
sub
jle
push
dec
pusha
xchg
jnp
add
sahf
mov
fbld
xor
push
fcmovnbe
rcrb
pop
mov
dec
xchg
inc
iret
mov
xlat
shrl
xor
and
pusha
mov
adc
mov
movsb
shrb
sub
sbbl
insl
dec
xorl
jae
icebp
cmc
sar
dec
cld
filds
or
jecxz
jmp
jecxz
out
call
jmp
push
sti
mov
in
push
cs
fstp
pop
lods
aaa
cmp
cmp
dec
sub
jno
int
add
ret
pop
push
insl
xor
pusha
jo
mov
stc
xchg
mov
insb
add
xor
insl
in
shrb
inc
cmp
fistpl
xchg
or
mov
jecxz
daa
adc
xchg
fsubr
push
jo
andb
push
cmp
jp
push
nop
jmp
pop
push
inc
enter
mov
mov
xchg
pop
pop
stos
mov
fwait
push
jmp
aaa
jl
repz
pop
xchg
cmp
cmp
aaa
ret
mov
imul
sahf
frstor
mov
fstpt
sbb
mov
sti
sub
dec
push
jnp
ss
ljmp
cltd
gs
aad
test
out
mov
cmp
ja
cli
loop
test
push
xor
popa
bound
adc
push
inc
xchg
cs
dec
push
sub
sahf
mov
loopne
dec
fstl
out
sub
add
fmull
pop
imul
sti
shll
aaa
and
mov
mulb
ja
or
lods
xor
inc
pop
sub
dec
and
imul
inc
cmp
das
jle
repnz
push
dec
adc
cmp
mov
push
nop
cli
loop
xor
add
scas
jmp
adc
add
lret
pop
les
outsb
push
insl
mov
ret
mov
popf
mov
dec
fsubrl
shrb
adc
rorl
les
ds
call
cmp
aas
sub
mov
and
roll
and
adc
pop
sar
lcall
xchg
sbb
addb
jecxz
icebp
divl
add
mov
hlt
fisttpl
mov
test
add
push
pop
rcl
rorl
sbb
xchg
aaa
adc
lods
nop
mov
rorb
sbb
stos
pusha
inc
outsl
test
ss
es
mov
jo
out
xor
test
sbb
stos
lods
mov
pusha
fildl
mov
or
in
adc
and
push
mov
cld
rorb
add
mov
int
jae
xor
cltd
cmc
hlt
and
int
push
aad
cmp
pop
sub
cmc
sahf
inc
fildl
add
fwait
jmp
in
xchg
arpl
rol
ret
mov
pop
push
inc
mov
inc
test
lock
iret
mov
mov
dec
dec
fdivs
adc
inc
cmpsl
popf
xor
or
mov
cmpsb
mov
inc
daa
fidivrl
sbb
add
push
rolb
add
in
cmc
daa
gs
sahf
dec
sahf
scas
xchg
pop
or
or
mov
mov
jmp
sbb
mov
int3
jns
mov
retw
fwait
outsl
push
popf
dec
inc
enter
or
pusha
push
dec
xchg
push
fisubl
or
stos
xor
scas
roll
push
test
push
sbb
pushf
js
mov
add
pop
ror
outsb
mov
fistl
xchg
in
xchg
rcrb
sbb
jmp
adc
push
fnstenv
fisubs
xchg
les
ret
xor
sbb
adcb
les
ss
inc
mov
and
das
inc
mov
add
jne
inc
sbb
out
lret
jg
xlat
mov
in
xchg
jns
mov
mov
push
in
in
aas
cltd
stos
xor
push
es
mov
fstpl
sbb
add
or
jae
or
xchg
mov
lahf
call
mov
add
push
and
in
out
jmp
out
mov
dec
inc
int3
push
mov
fcmove
or
jmp
cmp
aad
mov
in
pop
ret
jge
xchg
push
and
aam
pusha
inc
pusha
xor
or
icebp
test
push
add
in
insb
data16
mov
loope
call
and
sbb
in
jge
imul
sbb
push
jb
and
pop
inc
icebp
lret
xchg
outsb
mov
in
jo
dec
aas
push
dec
daa
iret
mov
dec
dec
inc
push
imul
add
lds
cs
adc
icebp
popf
mov
dec
je
mov
clc
fsubrl
adc
scas
dec
push
xchg
call
arpl
pcmpeqw
ljmp
imul
dec
clc
sub
mov
insb
xchg
sub
pop
xchg
insb
push
insb
int
lcall
in
fisttps
ds
repz
aas
dec
cmp
imul
ret
rcl
hlt
icebp
das
cli
xchg
popl
fisttpll
mov
xchg
xlat
mov
rcl
dec
pop
lods
and
push
sub
inc
ja
call
cltd
mov
mov
cmpsb
jcxz
inc
ss
sub
mov
add
enter
test
xchg
xchg
push
adc
rorb
or
add
push
rcrl
dec
add
lret
jl
mov
fistpll
loope
jecxz
cmp
jp
lods
jg
sub
pop
xorl
shlb
outsb
mov
pop
sar
inc
jnp
lret
mov
sbb
ret
stos
sub
js
adc
int
xchg
cmp
dec
mov
jne
xor
movsb
sbb
repnz
test
mov
mov
andl
lock
push
cmp
jmp
mov
orb
mov
in
pop
adc
push
roll
aas
fs
rcrb
aaa
or
pop
daa
inc
pop
insb
xchg
pop
pop
ficomps
sbb
sbb
or
jle
out
popa
adc
movsl
sub
mov
xchg
jmp
comiss
arpl
out
out
cmp
jmp
ljmp
sbb
push
adcb
dec
sbb
stos
add
mov
bound
sbb
sub
mov
and
icebp
push
or
pop
pop
leave
outsl
into
aad
push
ret
nop
xchg
ret
mov
sub
or
stos
and
in
ret
mov
xlat
imul
add
mov
scas
xor
jns
or
lds
jg
mov
mov
sub
sbb
mov
loop
loopne
outsb
pushf
xor
and
and
ret
lahf
outsl
lods
aaa
popf
dec
dec
rclb
div
sbb
andb
sub
dec
dec
dec
shld
cltd
jno
in
es
ud2
jecxz
pushf
pop
orl
xchg
movsl
mov
loop
loopne
xchg
inc
fists
mov
push
jo
xchg
hlt
pop
jmp
add
fbstp
mov
pop
call
mov
xor
sbb
xlat
jmp
inc
or
loop
mov
test
in
mov
fucom
pop
mov
cwtl
jle
pop
xchg
ja
lret
xchg
pop
push
mov
popf
mov
adc
mov
ficoml
cld
cmpsb
ret
jo
dec
jns
outsl
lahf
mov
mov
gs
and
adc
bound
dec
mov
and
mov
loope
dec
shl
sub
mov
hlt
push
je
fcompl
movsb
jns
rcr
rcrl
repz
orb
int3
insl
fwait
or
fbstp
ret
push
test
iret
pop
ret
mov
sbb
std
fldcw
pop
mov
sub
sub
sbb
mulb
pushf
cmp
sbb
int3
addr16
fcoml
movsb
add
xchg
imul
pop
push
stos
or
or
lds
stos
fmuls
mulb
repz
push
jns
in
outsl
sbb
imul
insb
vcmpsd
xlat
lret
mov
add
mov
or
outsb
fstpt
in
aaa
dec
and
mov
mov
std
or
shll
repz
or
mov
mov
int
xchg
repz
mov
xchg
or
pop
popa
shll
pop
test
mov
push
arpl
and
push
frstor
pop
lods
fstl
mov
xlat
shlb
push
xor
cli
or
or
int3
repnz
repnz
lock
and
out
adc
jmp
sbb
mov
pop
hlt
cmpsl
stc
in
cmp
mov
xor
fldl
fwait
pop
jne
add
mov
pop
insl
stos
sti
jbe
sbb
gs
dec
adc
ret
inc
bound
icebp
mov
movl
out
shl
dec
inc
aad
jb
xchg
jmp
aam
inc
inc
push
jne
xor
mov
mov
jo
dec
mov
jb
mov
pop
sbb
xchg
add
jns
loope
xchg
or
lahf
les
rol
cltd
add
lds
or
cmp
or
mov
stc
icebp
stos
repnz
pop
dec
repnz
ror
repnz
cmp
xor
push
jb
ds
sub
inc
push
inc
mov
sbb
sub
mov
aaa
push
jno
scas
push
jnp
scas
sbb
bound
jmp
scas
in
cmpsb
in
adc
out
inc
sub
dec
sahf
cwtl
cmp
pushf
shlb
out
pop
fiadds
in
mov
jmp
dec
lcall
loopne
ja
cmp
outsb
rcr
mov
outsb
jecxz
jle
in
movsb
inc
push
movsl
cltd
test
jne
loope
push
add
fwait
loopne
ret
sbb
mov
cs
and
dec
shrl
mov
pop
ror
cld
xchg
and
cltd
or
imul
sbb
add
adcl
xchg
test
xchg
sbb
mov
popf
in
daa
popf
in
sbb
push
or
cmp
repnz
or
jp
sub
sub
inc
cmp
jge
dec
in
inc
shrb
inc
dec
dec
and
inc
dec
dec
in
inc
ds
inc
clc
lret
enter
test
sahf
fsts
lahf
and
mov
push
inc
popa
loop
int3
adc
sub
pushf
inc
and
mov
jnp
fbld
insl
mov
xlat
mov
push
pop
push
nop
nop
adc
dec
cli
adc
pop
cli
mov
add
inc
dec
xchg
stos
cmp
mov
cmc
sub
push
mov
lcall
xlat
cmp
and
pop
in
dec
xor
aam
ficompl
xchg
mov
adc
addb
mov
shrl
outsl
into
clc
add
decb
mov
inc
mov
jbe
mov
xchg
add
loop
movsb
in
mov
mov
in
mov
add
dec
das
jle
movsbl
daa
mov
outsl
sbb
jns
out
add
bswap
popa
adc
out
clc
adc
dec
outsl
pop
imul
popf
mov
pop
into
dec
cmp
sub
leave
les
faddl
imull
stos
cmp
pop
mov
cmp
or
jae
or
cmp
and
enter
sub
aam
test
pusha
cltd
lret
lods
adc
sarb
xchg
and
xor
jnp
cwtl
addb
inc
int
outsb
enter
stos
push
pushf
sbb
push
sub
imull
movsb
popf
or
ds
add
test
push
insb
mov
ss
cs
test
mov
lods
xlat
fnstcw
nopl
dec
push
dec
sub
fwait
dec
insb
add
cmp
into
pop
jge
dec
int
cmpsb
jae
test
lock
xchg
jl
imul
andl
nop
xchg
insb
insl
lds
add
xorb
in
dec
sub
stos
ss
jge
cs
jecxz
repz
mov
and
outsb
rcrl
push
fildl
movl
inc
inc
mov
adc
xor
movsb
rorl
mov
dec
out
fs
aaa
rsqrtps
pop
lahf
jae
push
orl
inc
addl
loop
fcoml
push
enter
mov
mov
fnsave
mov
mov
jmp
jae
in
std
testb
cmp
and
and
fstl
pop
xchg
inc
pop
pop
int
dec
adc
inc
push
lahf
sub
add
add
sbb
loope
in
bound
pop
sbb
movsb
lock
xchg
and
rcll
stos
pop
sbb
push
adc
popf
adc
add
addl
mov
inc
xchg
fmull
mov
mov
loop
jge
add
dec
outsb
jb
push
or
adc
fildl
dec
je
cs
popf
add
mov
out
inc
pop
stc
xor
mov
or
mov
lret
mov
sub
xchg
push
scas
call
mov
or
add
ret
lea
out
fsubr
stos
sahf
mov
cmp
and
call
movsl
pusha
cld
jp
popa
call
add
pop
jmp
dec
ficoms
jmp
loope
push
adc
cmpsl
dec
cld
cmpsb
lret
popa
or
xor
divl
inc
leave
inc
pop
inc
push
jo
sbb
push
jae
sub
pusha
mov
fs
lea
dec
sbb
sbb
and
into
pop
mov
add
or
mov
add
scas
fildl
hlt
outsb
mov
mov
loope
hlt
pop
sub
jbe
nop
call
push
mov
movsl
dec
jbe
add
shrl
pushf
inc
mov
dec
add
pop
outsb
cmpsl
lret
shlb
cwtl
xor
xchg
sbb
insb
fwait
aaa
and
setbe
pop
call
push
arpl
jg
add
mov
cs
loopne
add
pop
popa
or
jmp
xchg
je
ja
mov
ljmp
add
mov
ret
xchg
sbbb
or
pop
out
xor
fsub
xlat
dec
dec
sbb
divb
jge
mov
push
push
int3
mov
add
xor
andb
push
fbld
push
jbe
int3
mov
repz
ficompl
std
cld
add
fxch
adc
adc
adc
adc
push
inc
mov
jnp
or
xacquire
movsb
repnz
into
ret
arpl
outsl
pusha
fbld
ljmp
out
jecxz
push
xchg
lock
dec
or
mov
rorb
dec
and
sbb
mov
fistl
out
clc
loope
mov
xchg
out
stos
pushf
xchg
xchg
jae
add
orl
pop
fsubrs
add
adc
int3
clc
adc
loop
mov
repz
lods
cmpsb
lock
mov
imul
xchg
or
ds
pop
out
aaa
pop
inc
cmp
mov
pop
ret
push
inc
dec
dec
inc
es
mov
pop
lods
mov
aas
pushf
xor
add
cmp
inc
popf
aas
sbb
ret
subl
sub
and
sub
mov
jo
loop
inc
scas
add
pop
xlat
adc
xchg
sbb
nop
cmc
or
dec
or
jo
mov
out
or
mov
daa
in
add
jne
mov
pop
jmp
fisubrl
lds
les
pop
sbb
pop
pop
into
cmp
jle
lret
fmul
mov
push
and
push
loope
lret
gs
mov
outsb
das
xchg
push
insl
and
rclb
bound
or
sbb
push
rcrl
sub
ja
pop
add
add
xchg
lds
hlt
inc
jb
or
jg
jge
xor
xchg
aaa
ja
jge
mov
mov
pop
daa
mov
arpl
dec
xlat
xchg
rcrb
push
ficoml
dec
stos
push
xor
das
pop
or
lret
jae
inc
ret
leave
dec
mov
jo
pop
call
sub
mov
les
xor
mov
sub
and
pop
inc
movsb
mov
ds
lahf
sbb
addl
add
push
aaa
mov
mov
cld
sbb
je
loope
fcoml
leave
in
pop
movsl
outsb
pop
aam
jmp
fbld
movsl
into
xor
enter
mov
adc
out
dec
ret
lret
jmp
insl
jle
test
cmp
inc
xor
pop
xor
pusha
aaa
in
adc
xchg
fildll
dec
outsl
cs
xlat
cld
adc
dec
sahf
fisttpl
add
test
inc
mov
jo
dec
decb
add
popa
jo
popa
divl
in
push
push
mov
xor
dec
jmp
insl
xchg
cmp
int
sahf
and
imul
clc
pushf
ret
xchg
pop
cmp
js
cmp
dec
popa
fsubr
and
cmpsl
push
pop
xchg
divb
popf
inc
or
adcb
and
sub
data16
pop
loop
push
int3
and
xchg
inc
cld
mov
and
mov
es
push
sub
cmp
test
sti
cmp
in
int
imul
or
movsb
aad
pop
out
rcrb
dec
adc
out
adc
adc
cmp
jle
mov
or
popa
push
rclb
xor
xor
cmp
push
mov
icebp
insb
data16
mov
push
xchg
flds
cwtl
xchg
sahf
cmp
and
push
ljmp
jle
jns
in
je
int3
pop
and
lahf
jp
xlat
out
mov
mov
rcrb
adc
in
mov
hlt
in
loope
mov
in
adc
sub
pop
sbb
rcpps
mov
sub
sbb
or
sub
ficomps
in
mov
and
rcrl
mov
push
sar
jle
divb
ss
hlt
pusha
sub
fisttpll
test
or
pop
sahf
push
xchg
xchg
arpl
push
out
in
cmp
ficomps
pusha
jle
fldpi
xchg
mov
pop
cmp
inc
cmpsb
adc
xor
mov
repz
mov
ss
lods
push
or
cltd
sub
adc
clc
pushf
mov
cmp
xchg
cltd
cmc
sbb
adc
pop
js
ja
imul
enter
test
or
outsb
fldl
jl
aad
push
mov
test
pop
mov
add
lods
push
lret
mov
sbb
push
mov
mov
sub
out
repz
fimuls
jge
in
popf
sub
fstps
jl
sbb
repz
xorb
sti
mov
cmp
mov
push
out
mov
jp
adc
jle
add
lods
movb
out
iretw
pop
mov
xchg
add
sbb
push
mov
adc
fisubrs
scas
dec
sarl
push
rorl
xlat
xchg
and
lret
ficoms
sarl
mov
push
push
jg
add
ror
push
xchg
mov
testb
sbb
mov
dec
insl
icebp
cld
insl
dec
faddl
xchg
adc
xor
push
cmpsb
sahf
cmp
lock
les
data16
addb
adc
pop
into
push
dec
or
lcall
lret
fwait
xor
jo
enter
mov
cli
outsl
add
pop
mov
mov
mov
das
test
push
jbe
jns
or
pusha
and
cmp
lret
unpckhps
test
inc
cwtl
add
das
int
cmc
sbb
mov
or
int3
call
out
lods
movsb
xchg
adc
or
push
ss
ret
in
jge
das
cmpsb
cmp
cs
rcl
les
pop
cmpsb
jmp
out
and
loopne
cmp
cmp
or
jle
mov
mov
xchg
sub
and
icebp
push
mov
inc
gs
push
in
jge
adc
and
xor
stos
out
jmp
mov
rorb
sbb
andb
sbb
and
popf
xchg
adc
cltd
inc
jbe
lock
in
enter
push
je
out
adc
aad
lea
gs
daa
pop
orb
ds
lcall
repnz
xor
nop
test
das
iret
ret
mov
in
push
addr16
mov
sbb
test
pop
adcl
stos
push
mov
xor
fs
add
mov
pushf
sbb
mov
adc
cmc
jns
int
xor
add
stc
mov
in
in
ss
sbb
dec
dec
adc
inc
addr16
scas
clc
ds
dec
mov
js
sahf
mov
mov
mov
int3
cmc
mov
fisubl
sub
pop
arpl
xchg
cmp
sub
cmpsl
jae
fdivrs
ret
pusha
dec
jge
push
xor
and
mov
or
aam
ret
adc
mov
inc
jno
mov
mov
push
inc
add
push
adc
dec
jae
mov
call
push
cs
incb
mov
push
mov
les
adc
or
repnz
loopne
fisttpl
and
sti
mov
cmp
test
das
pop
inc
sbb
push
mov
sbb
stos
pop
or
aam
fsubrs
pop
pop
adc
adc
jnp
mov
ltr
hlt
push
xor
insl
cwtl
mov
dec
inc
dec
test
roll
sub
scas
call
push
or
inc
sub
or
xchg
add
ljmp
sub
ret
lea
and
cmp
mov
andb
and
sub
or
mov
pop
out
xor
insl
push
add
xor
shlb
inc
push
decb
ret
pop
lds
add
push
sbb
outsl
sbb
cmp
in
mov
pop
lods
cmp
dec
jmp
ja
cld
mov
out
std
icebp
jecxz
or
xor
jae
lret
sarl
sbb
xchg
jb
or
cpuid
stc
ljmp
frstor
ret
inc
mov
lret
adc
popf
test
lcall
js
jae
jae
adcl
popa
fs
pop
and
jecxz
cli
int
jno
mov
loopne
ljmp
mov
sub
icebp
push
cmpsl
fsubrs
mov
dec
out
nop
mov
jecxz
lret
sub
test
scas
cltd
push
sbb
sbb
in
or
cmp
cmp
hlt
push
dec
cmp
test
ja
cltd
mov
ficoms
adc
mov
std
test
inc
lds
fcomps
out
movl
lahf
adc
in
in
xchg
out
out
scas
sbbl
sbbl
ljmp
rorl
pop
add
enter
outsl
pop
jns
sub
push
imul
cmp
xchg
mov
inc
cmc
bound
xor
add
cli
mov
dec
lods
popf
cli
xor
xor
in
push
inc
or
dec
sbb
inc
cmpsb
leave
and
cld
mov
ficomps
adc
pop
jb
repz
adc
adc
cmp
or
jg
xor
into
jae
push
xor
ljmp
scas
push
push
bound
and
mov
dec
inc
call
mov
testb
sahf
out
int
cmp
jae
mov
out
cmp
mov
mov
std
rorl
add
ljmp
pop
xchg
jge
in
dec
push
sbb
data16
sbb
cmc
adc
call
sub
lods
lahf
lea
ret
sbb
test
mov
imul
or
arpl
sub
push
imul
mov
sub
and
inc
lods
adcb
stos
aas
push
inc
subl
imull
movsl
push
xor
push
dec
pop
roll
mov
and
pop
push
ret
frstor
js
das
fists
xchg
jecxz
sti
sbb
xchg
insl
mov
hlt
pop
or
and
outsb
pushf
pop
and
add
int3
imul
add
or
loope
insb
sub
jmp
leave
adc
cld
push
jl
iret
js
or
adc
jge
in
jns
daa
out
outsl
les
adc
cmp
loopne
sub
mov
je
and
lret
push
mov
pop
jecxz
xchg
ja
fwait
mov
cmp
scas
xor
add
push
adcb
and
fs
scas
jmp
cmp
nop
testb
pop
sbb
inc
cmp
int
dec
and
xor
cmp
mov
hlt
pop
xor
dec
mov
sti
mov
popl
leave
clc
and
cs
scas
dec
je
out
jg
cltd
movsl
cmpsb
jno
out
sbb
pop
mov
mov
incl
in
int3
sbb
lcall
pop
pop
lret
mov
mov
in
dec
fisttps
jo
inc
push
jne
inc
pop
jmp
ljmp
ljmp
ficomps
and
mov
and
repnz
xor
sub
push
fistl
and
dec
cs
lret
xor
insl
pop
mov
add
arpl
pop
sbb
adc
jl
inc
daa
jns
fwait
pushf
rcll
add
loope
dec
inc
sub
sub
dec
dec
adc
in
push
pop
adc
into
and
call
add
jmp
inc
outsb
out
outsb
fnstsw
inc
add
push
jo
xchg
sub
push
mov
mov
mov
mov
or
and
inc
and
pushf
mov
leave
mov
cmpsb
out
or
shl
shrb
addr16
sub
mov
sub
cld
lds
ficompl
iret
inc
and
pop
mov
daa
shl
lret
xchg
pop
dec
insl
inc
mov
sub
mov
fwait
pop
and
idiv
xor
xlat
daa
mov
jmp
mov
scas
xor
leave
sbb
cmp
push
enter
andl
gs
in
xchg
mov
ret
xor
jmp
jecxz
mov
and
xchg
mov
sbb
test
xor
ror
push
mov
sub
rcll
test
aas
push
jle
shr
jg
dec
push
inc
cs
cmp
jno
imul
pop
xchg
xchg
cmpsl
jno
in
or
jb
and
inc
les
xchg
push
or
dec
out
fimull
jle
cmp
jmp
stos
pop
sbb
add
stos
mov
push
das
in
or
add
mov
andl
dec
sub
lahf
inc
cs
push
jmp
inc
mov
mov
add
lret
mov
outsl
dec
inc
inc
mov
lds
xchg
sub
xor
jbe
ret
pop
in
push
jp
mov
sbb
out
pusha
lea
or
aas
int3
inc
adc
inc
xchg
testl
jb
inc
stos
aas
lods
push
push
arpl
xchg
xchg
insl
stos
sahf
icebp
xchg
add
lret
or
scas
movsl
add
loop,pn
inc
push
clc
andb
outsl
das
xor
js
out
xor
xchg
mov
or
xchg
fmull
arpl
mov
add
in
dec
sub
mov
ds
jle
aaa
lods
adc
movsb
shl
orl
cltd
push
fsubrp
enter
mov
push
push
and
leave
in
bound
test
mov
sub
mov
lcall
les
stos
js
lock
mov
adc
add
testb
xchg
cli
xchg
and
or
shrb
jecxz
arpl
jno
mov
mov
daa
pop
xor
movsb
mov
push
out
and
sbb
cltd
jge
sub
mov
push
pop
xorb
repz
push
notl
push
lock
test
adc
lea
test
mov
adc
mov
into
call
adc
lds
or
mov
mov
add
mov
push
out
mov
popa
xchg
adc
addr16
pusha
push
std
lcall
mov
and
xor
sub
push
loope
icebp
mov
cmpsb
dec
and
fadds
add
cmp
lahf
sbb
push
neg
push
mov
cld
popa
pop
out
inc
push
sbb
test
xchg
insl
in
jmp
sarl
pop
xorl
in
aad
lahf
xor
out
popa
fimuls
in
jns
mov
ret
movsb
or
xor
fstp
mov
lea
int3
lret
jmp
xchg
jg
jmp
fstp
data16
sbb
mov
inc
mov
pshufw
aam
int3
popa
inc
and
out
pop
aas
dec
inc
pop
fmul
inc
sbb
mov
loop
cltd
out
mov
and
outsb
pop
xchg
sbb
pop
int3
or
jno
cmp
jl
or
clc
xchg
fnstenv
mov
arpl
add
sbb
xchg
imul
jns
repnz
in
mov
push
je
adcl
in
std
push
lods
adc
pop
jnp
cmc
sbb
jbe
popa
loopne
xchg
sub
scas
mov
jp
sub
push
jp
or
or
popa
sbb
fisubrl
push
movl
or
jge
inc
mov
sub
test
pusha
cwtl
sar
and
jmp
dec
cmpl
mov
shrb
lahf
push
std
or
js
push
jae
mov
push
bound
sbb
and
cmp
es
push
insl
mov
mov
jmp
xor
sub
and
jle
fcoms
jmp
xor
sbb
lods
and
stc
pop
pop
lret
push
mov
and
stos
aaa
mov
mov
mov
fmul
and
fisttpl
cmc
in
mov
or
pop
mov
fxtract
adcl
xchg
push
daa
popa
xchg
mov
stos
dec
mov
mov
insl
add
jl
stos
cmp
sub
mov
mov
cwtl
cmp
sar
fnstsw
dec
imul
inc
xor
std
xchg
fcoml
bswap
in
ja
pushf
push
outsl
mov
jg
mov
or
sub
imul
jo
cmpsb
sbb
add
mov
aaa
repnz
nop
loope
mov
out
push
cmp
mov
rclb
add
aas
arpl
fmul
jne
mov
push
stc
inc
aam
rcr
sbb
xchg
test
dec
shlb
cmp
imul
aad
cmp
repz
and
adc
popf
push
ljmp
fcmovnu
shrb
mov
cs
pop
and
sbb
add
idivl
ss
mov
push
push
sbbb
dec
cltd
sbb
popf
setp
mov
jbe
jb
jecxz
xor
fwait
sbb
xchg
xchg
pop
insb
dec
lea
loop
shll
xlat
pop
add
popa
and
cld
push
cmp
xor
push
mov
in
ret
je
insl
test
cwtl
push
pop
xchg
cmc
sub
xchg
or
mov
dec
shr
scas
enter
popa
je
xor
jns
jnp
xchg
popf
imul
sbb
mov
movsl
xor
and
aas
jo
daa
push
sub
xchg
xchg
adc
adc
leave
daa
lcall
pop
adc
int3
and
popa
lds
mov
mov
mov
dec
or
mov
stos
imul
dec
jle
aad
xor
stc
bound
push
cs
cmp
adc
repz
mov
sub
outsb
xchg
mov
lcall
pop
cmp
mov
shlb
aas
cwtl
fwait
adc
xchg
sub
icebp
mov
mov
or
mov
or
sahf
add
enter
and
shrl
ljmp
roll
in
jecxz
clc
std
xchg
xchg
dec
sub
jp
aam
push
cld
cmp
cmp
rep
xor
cmp
add
mov
adcl
ret
or
inc
je
adc
xchg
sub
aas
jmp
sbb
bswap
or
push
or
adc
stos
or
vpand
xchg
inc
mov
mov
outsb
mov
or
fistpl
pop
cmpsb
mov
imul
mov
dec
sbb
mov
bound
popl
aam
aas
jnp
popa
ja
pop
or
or
cmpsl
mov
sub
mov
mov
cmp
cmp
mov
int3
int3
pop
fstpl
sub
daa
and
sub
sub
rcrb
test
dec
lock
jecxz
pop
xchg
pop
sub
add
sahf
and
ljmp
test
js
mov
stc
mov
jg
jae
mov
xchg
fldt
sub
xor
jp
pop
bound
and
inc
dec
push
xchg
add
pop
sti
inc
cmp
xchg
and
xor
in
clc
xchg
gs
sbb
fsubs
push
xor
in
and
int
icebp
out
and
cmp
fmul
and
xor
xchg
mov
or
bswap
push
addr16
ret
jo
and
inc
outsl
out
std
cwtl
push
xchg
dec
add
pop
nop
xlat
push
push
daa
jne
jo
test
dec
out
imul
pop
cli
push
cmp
xor
fs
sub
out
lea
pop
inc
push
jbe
sub
add
adc
pop
inc
addr16
das
sub
mov
push
mov
jne
and
xor
test
pop
hlt
xchg
mov
cltd
jno
sub
mov
mov
mov
or
adc
movsl
inc
cmpsb
push
outsb
fs
leave
xchg
scas
or
iret
mov
je
pop
pushf
pop
cmpsb
xchg
add
cmp
adc
mov
xor
push
dec
jmp
pop
dec
lret
jno
push
fnstenv
and
dec
rol
fucomp
pop
sub
mov
ljmp
and
jmp
into
jae
in
mov
mov
add
xchg
push
test
xor
call
pop
dec
cmpb
stc
cltd
mov
push
mov
daa
lea
xchg
jne
push
push
jmp
loope
xor
aaa
gs
mov
icebp
mov
ss
or
add
test
jnp
imul
pop
adc
arpl
mov
push
push
dec
jo
test
inc
out
shll
loope
cmp
push
insb
pop
xor
aas
movsb
xchg
jge
push
sbb
add
mov
int3
iret
sbb
test
push
dec
dec
rolb
jle
push
in
data16
or
and
in
aas
lea
mov
lds
inc
mov
icebp
push
aaa
push
lds
pusha
std
pop
add
push
xor
data16
mov
jne
inc
or
inc
cmp
out
pop
sub
sub
sahf
mov
daa
xor
out
pop
and
nop
iret
push
movsb
loop
aaa
and
notb
insl
insb
mov
sbb
mov
xchg
cwtl
aad
jne
lea
into
dec
cli
loope
xorb
enter
fwait
inc
pop
and
xor
sub
cmp
lret
jecxz
sbb
pop
mov
lret
sbb
lret
dec
pop
mov
push
adc
xor
inc
push
or
xchg
jmp
push
xchg
mov
divl
movsl
das
les
jle
daa
filds
mulb
xchg
adc
stos
leave
out
sbb
mov
scas
icebp
test
fistps
mov
dec
pop
xchg
cmp
lea
sub
ljmp
mov
sub
xchg
mov
jmp
sbb
push
mov
mov
lret
das
lock
stc
gs
not
push
dec
and
pop
or
std
shlb
repz
sbb
insl
adc
inc
inc
les
sub
outsl
addr16
xor
inc
repz
and
jo
mov
bound
sbb
mov
pop
sbb
push
mov
fnsave
cli
cmp
cmp
xlat
lods
mov
mov
popa
sub
pop
push
cs
xchg
test
movsb
loopne
push
popf
cmpsb
stos
lds
add
or
lds
jae
mov
loop
adc
inc
cltd
fs
scas
sbb
shr
stos
les
loope
push
lods
dec
popf
call
and
or
out
addr16
testl
hlt
pop
inc
shll
cmpsb
mulb
gs
dec
dec
mov
in
xchg
cmpsb
arpl
xchg
adc
or
fstps
and
pop
mov
es
fwait
adc
repnz
xchg
jecxz
inc
lahf
in
sbb
dec
loop
call
fadd
out
aaa
test
sub
push
mov
fcoml
mov
sti
jl
mov
fildll
aam
dec
push
aaa
mov
cmc
js
adc
sub
paddusw
fcomps
cmpsb
hlt
mov
cmp
dec
jle
jnp
inc
dec
push
mov
add
cmc
mov
fistpll
jp
in
mov
pop
popf
out
dec
jb
pop
sub
scas
loope
ljmp
sub
inc
xchg
jbe
ds
xor
pop
loop
push
loopne
mov
sub
clc
fists
and
sti
push
push
movsl
mov
scas
in
pop
sbb
or
dec
sub
pop
inc
mov
cmp
gs
movsb
sbb
lea
in
push
rcr
xor
add
xchg
bound
stos
and
mov
lret
shr
repz
lea
or
and
fwait
jp
popf
cli
fsubl
sub
test
inc
test
je
int3
fidivl
dec
out
pop
mov
jno
adc
xchg
sub
cli
push
cltd
mov
sub
jmp
out
push
mov
fs
ret
xor
je
inc
sub
lods
sbb
inc
ss
pop
adc
add
movsb
jae
mov
insl
gs
insb
ja
hlt
movsb
or
in
sbb
jp
sahf
cmpsb
vpunpcklqdq
xchg
int3
xchg
leave
push
xchg
js
call
aad
ret
js
add
int3
cmp
stos
dec
adc
or
or
jp
dec
lahf
sub
inc
jecxz
imul
or
sbb
cmp
or
jnp
push
inc
mov
xchg
inc
xchg
xlat
or
pop
push
sub
or
popf
pop
mov
pushf
je
aaa
pushf
testb
push
dec
sbb
mov
test
mov
mov
cmp
sub
xchg
aaa
iret
push
sarl
popf
add
push
or
in
fdivrl
lret
mov
rcrl
outsb
xchg
inc
mov
shlb
push
stos
mov
and
add
jg
xchg
jp
clc
xor
repnz
bound
outsb
jnp
cmp
mov
fists
xor
cltd
dec
iret
out
sub
dec
outsb
push
mov
mov
cmp
xor
lcall
sbbb
push
sar
mov
popa
aam
rol
dec
aas
aad
sarb
aad
mov
cmpb
out
aad
adc
xchg
cli
jge
push
in
stos
xchg
xor
mov
call
jmp
inc
push
xchg
xchg
and
xor
fldenv
push
jg
das
call
lods
adc
or
aaa
mov
mov
push
push
enter
cmpsb
fsubrp
fwait
inc
mov
sti
or
and
or
pushf
add
out
pop
loopne
fnsave
mov
xor
xchg
mov
out
sub
inc
js
ret
icebp
fnstenv
mov
push
adc
lret
inc
fnstenv
pop
shll
inc
xlat
push
push
cld
and
fs
int
ss
push
add
out
call
or
xlat
mov
inc
jg
mov
mov
fmuls
mov
movsl
pop
xor
inc
jl
in
cmp
das
mov
decl
pop
push
or
repz
ljmp
inc
paddd
mov
sub
add
gs
xlat
fnstcw
in
lds
popf
imul
je
int
mov
mov
frstor
testb
fsubrl
adc
cmp
ret
and
aaa
add
test
sub
out
ds
movsb
rcr
sbb
xchg
addr16
nop
lods
mov
jb
cmp
push
mov
mov
sbb
addr16
and
or
ror
scas
jp
adc
addr16
inc
in
ds
push
outsl
sbb
mov
sbb
pop
mov
dec
mov
jle
je
stos
int3
inc
into
mov
push
iret
outsl
jecxz
outsb
push
mov
cld
das
push
sub
es
jns
out
mov
icebp
sub
ret
add
fstpl
jmp
movsb
mov
xor
dec
xor
fimuls
dec
out
sbb
call
imul
xchg
ret
cld
clc
jmp
sbb
pop
mov
cmpsb
jecxz
lods
pop
add
jp
jnp
push
imul
testl
push
data16
vdivsd
add
sub
sar
js
js
xlat
xor
pop
pusha
movsl
ss
adc
or
or
or
int
pop
fldt
push
cmp
jnp
jecxz
shrb
popf
icebp
xor
xchg
add
push
push
xchg
xor
gs
call
insb
rcr
outsb
loopne
and
cmpb
xchg
or
sub
pop
jecxz
mov
sbb
push
xchg
stc
xchg
inc
pop
sub
jbe
aad
mov
push
imul
or
mov
inc
dec
out
lods
jb
jbe
dec
in
leave
xchg
xchg
push
jge
mov
stos
in
inc
push
and
stc
xor
call
cli
push
xor
out
cmp
cmp
mov
or
mov
dec
dec
into
aam
or
pop
jp
out
ret
jg
test
jo
pop
mov
mov
lret
int3
das
cmpsb
bound
mov
xor
mov
mov
aam
popa
fistps
xlat
pushf
cmp
jl
add
pop
jl
push
cwtl
ss
xlat
mov
rclb
loopne
nop
mov
outsb
dec
or
xchg
mov
test
pop
mov
mov
inc
mov
addr16
push
das
cwtl
xchg
pop
out
jg
mov
clc
fldl2t
js
and
fsubl
cmp
leave
test
add
push
int3
sub
inc
fs
pop
xor
int3
mov
pop
or
push
adc
test
mov
mov
jae
sbb
out
test
testb
lret
or
movsb
outsb
js
idivl
cmp
lret
pop
das
dec
hlt
andl
jge
add
pop
jbe
std
out
xor
cmp
push
xor
pushf
dec
inc
pop
or
cmp
into
pushf
adc
inc
dec
daa
cmp
inc
inc
sub
lret
out
or
mov
dec
push
in
cmpsl
lds
aad
mov
mov
inc
hlt
xchg
mov
xchg
repnz
push
inc
jno
scas
dec
into
mov
push
call
dec
in
pop
mov
push
jle
cltd
repz
mov
leave
mov
pop
sub
loop
inc
ror
mov
push
test
popl
icebp
xchg
mov
sub
insb
inc
push
push
pop
ds
inc
fstl
jmp
jg
clc
push
sub
or
pop
pop
lods
push
sub
outsl
push
xor
add
cltd
adc
mov
lods
adc
movsb
sub
pop
popa
cmp
loop
sarl
lret
subb
xor
in
xor
nop
push
ja
add
lret
sub
jo
lea
jg
and
sub
xchg
xor
out
mov
insb
ljmp
mov
sbb
fs
adc
insl
test
sub
or
cli
call
jb
mov
pop
sub
xchg
mov
mov
in
cmp
adc
adc
mov
in
lods
mov
rol
rolb
bound
adc
mov
sbb
mov
jle
or
popl
inc
inc
ja
iret
xor
std
push
add
push
xor
sub
sbb
or
ljmp
scas
or
ffree
imul
jge
add
lret
push
aaa
mov
mov
sub
push
sub
sbb
xor
xchg
mov
dec
pop
and
js
mulb
jb
fnstenv
movsl
imul
cs
insl
dec
aaa
loop
xchg
xor
lahf
mov
sti
mov
or
popa
push
bound
pop
fs
push
div
and
fcoml
sbb
ret
or
sahf
lret
cmp
and
aaa
es
mov
out
in
mov
mov
daa
in
lcall
stc
insb
out
adc
jbe
aaa
or
or
mov
pop
xchg
das
ljmp
or
lods
cmpsb
pop
add
jg
into
aad
testl
jno,pt
add
out
test
in
and
dec
push
or
adc
cltd
mov
cmp
pop
cmp
int
ret
xchg
mov
dec
addr16
pop
stos
call
jecxz
fcmovnb
or
dec
ljmp
and
mov
ficompl
adc
decl
or
jl
icebp
decl
and
cmpsl
push
xchg
mov
jbe
lret
ret
jno
cmp
mov
push
in
hlt
dec
push
jbe
lahf
and
arpl
inc
adc
add
aas
pushf
dec
mov
sbb
bound
dec
mov
stc
test
dec
repz
dec
sbb
and
scas
xchg
cmovs
jne
shlb
outsl
push
jnp
add
sbb
aad
aam
test
fwait
xchg
ljmp
adc
imul
sub
xor
invd
sbb
mov
mov
inc
sub
cwtl
push
or
lea
add
mov
mov
mov
lret
pop
xor
sbb
cmp
out
pop
xchg
std
iret
mov
arpl
test
mov
negl
xchg
sbb
add
test
outsb
cli
daa
push
shll
mov
movsb
sub
xchg
pusha
clc
inc
into
imul
adc
insb
xlat
ja
ret
push
pop
inc
in
lods
pop
lcall
pop
je
out
xor
subb
leave
mov
mov
addl
insl
outsb
inc
pop
stos
dec
aam
mov
sub
pop
add
je
mov
lahf
sbb
push
scas
je
pop
cld
adc
pop
fwait
stc
pop
cmp
xor
daa
jno
dec
inc
add
cltd
dec
sub
and
pop
gs
insl
scas
sbb
xor
scas
pandn
inc
xor
dec
test
pop
sub
mov
mov
pushl
dec
icebp
pop
es
cmpsl
lods
or
xchg
aad
repnz
jecxz
jge
jbe
mov
subb
adc
sub
jp
xchg
outsb
bound
rol
movsl
xchg
ret
xchg
shrb
out
bound
pusha
dec
repz
mov
mov
mov
out
insb
aad
add
js
mov
iret
imul
nop
rcrb
push
or
sbb
pop
fstpl
sbb
fbstp
push
out
jns
jle
adc
fstpt
adc
out
das
xchg
enter
jae
xchg
lret
sti
xchg
in
dec
and
or
lds
cmp
mov
cmp
in
test
cmpsl
inc
push
mov
ja
imul
daa
dec
aas
xor
mov
push
inc
cli
nop
inc
rorl
jp
lret
cwtl
pop
sub
sbb
popf
or
hlt
add
fwait
adcl
mov
cmpsb
jb
or
leave
repz
hlt
out
inc
adcb
pop
adc
mov
mov
adc
add
fsubrl
in
dec
and
lahf
les
lcall
cmpsb
push
add
loopne
lods
jb
xchg
inc
ljmp
out
or
mov
shrb
cmp
add
bnd
out
sub
mov
rclb
mov
dec
clc
repz
outsl
hlt
rclb
push
int
add
inc
ret
dec
rol
jnp
sarb
insl
and
lahf
insl
rcrl
xchg
aam
adc
jb
imul
inc
pop
jg
push
pop
lret
outsl
movsb
xchg
inc
dec
enter
xor
sahf
repnz
xchg
inc
xor
scas
push
and
es
idivl
xlat
cmp
clc
fs
lds
pop
sub
daa
push
xchg
fcomi
arpl
push
jb
mov
mov
sbb
jb
mov
inc
push
test
test
mov
or
mov
xor
and
in
xor
in
shrb
cmp
xor
push
rcl
mov
out
mov
leave
mov
and
ljmp
or
sub
data16
into
cmp
nop
dec
xchg
fwait
sbb
dec
and
aaa
inc
mov
in
push
jmp
cmpl
push
mov
push
pop
sub
add
sub
rcrl
cmpb
cmc
loopne
sub
mov
aaa
mov
mov
push
les
xchg
divb
bnd
ss
aam
cmp
jno
xor
insl
mov
jmp
lcall
sub
pop
xchg
test
inc
sbb
in
lea
add
repnz
repnz
movsl
shlb
pusha
sti
xor
gs
enter
test
jl
mov
push
les
aas
pop
inc
jne
les
mov
cmc
ret
je
push
pop
out
adc
and
add
cmp
dec
xchg
jns
loopne
pop
jmp
push
dec
call
ret
jmp
mov
cmp
enter
add
aad
mov
lods
sub
cmpl
es
adc
jbe
xchg
push
push
sbb
fs
cli
sbb
loope
scas
icebp
dec
adc
in
loopne
sahf
xor
sbb
cmp
cmp
mov
mov
insl
pop
and
int3
mov
cmp
mov
mov
and
ret
mov
sub
notb
out
mov
scas
sbb
mov
mov
lea
push
andb
sub
insl
test
jmp
cmpsb
out
lock
inc
push
pushf
ficompl
sbb
test
lahf
xor
out
cmp
jmp
jo
xlat
lea
mov
inc
jb
enter
mov
nop
adc
sti
stos
add
xchg
cltd
imul
xchg
add
or
in
xor
jne
inc
add
into
lahf
aas
icebp
add
sbb
loopne
mov
leave
repnz
inc
jae
and
jl
pop
mov
mov
subl
sbb
mov
sbbl
mov
fildl
in
push
xorb
std
xor
int3
lds
dec
push
inc
outsb
dec
inc
insb
cmp
repnz
or
push
sbb
sub
pop
es
xchg
add
jbe
xchg
xor
add
xor
clc
xlat
inc
cmp
notl
and
mov
inc
stc
aaa
dec
jle
cmp
icebp
popf
cmpsb
in
fwait
jg
pop
inc
inc
mov
movsb
and
daa
outsl
arpl
pop
jge
cmpsb
ljmp
into
cmp
sbbl
jns
out
mov
add
and
mov
xchg
xchg
mov
xchg
or
sbb
fstps
ss
idivl
mov
or
or
les
xor
fistpll
lret
xchg
in
add
fnsetpm(287
faddl
jp
or
jl
mov
cs
dec
pop
push
or
lahf
mov
lret
movsl
fidivs
push
mov
pop
dec
xchg
jo
insl
push
dec
iret
pop
popa
mov
clc
or
push
fsubl
cmp
jle
out
and
ds
jns
sbb
cmp
inc
and
outsl
into
std
sub
sub
sub
push
xchg
lret
insb
out
pop
je
fmul
aaa
incl
mov
jge
inc
js
das
sub
xor
and
cmp
xchg
sbb
dec
xor
movsl
mov
lods
or
sub
or
sbb
mov
inc
test
movsl
jg
or
adc
test
stos
push
mov
lea
ffreep
cwtl
int
and
sub
adc
xchg
hlt
ret
cmp
add
push
in
outsl
mov
add
jp
push
mov
add
insb
xor
loop
fisubrl
aad
push
fstpt
xchg
in
das
clc
in
adc
mov
mov
push
jp
inc
inc
xor
add
jno
push
gs
rclb
addl
add
xor
push
mov
les
addr16
sbb
ret
adc
leave
xor
mov
inc
dec
push
cld
shl
push
aad
fisubrs
nop
fldcw
mov
fistpl
inc
mov
int3
test
imul
cwtl
mov
inc
or
or
push
pop
pop
cld
xchg
sub
cmp
hlt
hlt
addr16
cwtl
mov
lea
std
adc
mov
pop
hlt
shr
push
inc
rcl
idivl
cmpsb
out
push
mov
movb
pop
fdivl
subb
div
cli
into
lods
or
push
arpl
insl
frstor
lret
sbb
pop
pop
mov
insb
mov
insb
sub
cmpsl
out
insl
test
jbe
jle
in
outsb
mov
jo
sub
push
pop
stc
jmp
mov
nop
xchg
faddp
dec
ficompl
sbb
or
ja
inc
fyl2xp1
mov
mov
pop
push
lods
xor
push
idivl
sbb
mov
pop
xchg
jg
test
add
xor
out
les
pop
or
mov
inc
push
test
notb
mov
mov
addb
shlb
mov
xor
pop
addb
loop
xor
pop
sub
add
dec
xor
lcall
mov
jge
mov
push
ds
pop
inc
pop
mov
inc
push
dec
sbb
pusha
push
inc
test
mov
repz
lcall
pop
mov
push
push
jp
ss
pop
and
and
daa
ret
lret
decb
push
lods
inc
push
xlat
xor
je
jne
pop
cwtl
repnz
push
mov
xchg
sbb
imul
scas
mov
dec
mov
inc
sbb
lods
test
das
notl
mov
pop
push
fdivp
shlb
xlat
fisttpll
dec
in
hlt
andl
inc
mov
je
loope
insb
sub
mov
pop
pop
sub
cli
push
or
inc
push
inc
push
jns
adc
data16
xchg
xchg
mov
mov
aad
bound
das
jmp
adcb
fsub
jmp
add
add
add
aad
pop
mov
sahf
xchg
pop
fldt
sbb
test
lods
pop
into
adc
cld
es
fcmovnu
repz
jmp
push
jge
and
cmc
nop
adc
aam
sbb
sbb
popf
add
push
sbb
and
stos
dec
int3
shrb
hlt
xlat
push
lahf
imul
push
cs
xchg
fwait
out
mov
inc
loopne
xchg
dec
push
mov
dec
int
test
sahf
addr16
test
add
adc
mov
mov
xlat
out
push
jl
xor
sbb
cmpsb
and
mov
push
ret
push
xchg
orb
dec
mov
adcb
or
push
rolb
jl
cmpsb
xor
xchg
aad
cmp
in
xchg
mov
push
xchg
inc
xor
stos
idivb
mov
lcall
out
xor
mov
mov
add
jecxz
sub
pop
cmpsb
pop
xorb
push
sub
imul
lahf
ficoms
pop
pop
popf
cmp
scas
jnp
xchg
imul
mov
je
and
mov
mov
bound
jl
dec
inc
mov
std
add
lds
popf
test
mov
movsl
sub
or
ret
loop
dec
arpl
es
xchg
mov
inc
lods
and
xor
mov
and
mov
push
mov
js
add
jmp
push
or
dec
sbb
push
add
or
repnz
sbb
dec
mov
mov
shlb
xor
sahf
mov
enter
movl
mov
enter
aas
jbe
cli
sbb
or
fucomp
push
test
lock
push
push
jmp
jno
sbb
lahf
or
xlat
xor
push
stos
cmp
jg
xchg
pop
xchg
push
cmc
cs
inc
repnz
mov
lods
sarb
enter
adc
stos
mov
mov
cmpb
mov
in
cmc
xchg
sbb
movsb
dec
dec
cmp
inc
in
or
and
sub
cmp
pop
testl
cltd
mov
in
or
inc
neg
add
mov
pop
sbb
sbb
lcall
insb
sbb
lret
pop
xor
push
repnz
cmp
femms
sbb
rol
and
push
rcrl
pop
adc
push
push
xchg
aas
push
push
or
es
aam
aam
imul
jge
xchg
pop
push
mov
xchg
pusha
lahf
or
clc
mov
mov
dec
lahf
push
xchg
ja
dec
outsb
shl
out
shll
xchg
sbb
int
pop
push
int3
lea
push
push
push
jle
mov
mov
mov
ljmp
push
pop
xor
jno
int
jp
inc
fnstsw
sub
ljmp
ja
subl
push
fwait
arpl
or
lcall
cwtl
jl
inc
push
pop
lods
pop
mov
cmp
pop
daa
adc
and
loopne
or
testl
mov
push
or
dec
ret
fisttpl
nop
repz
push
add
xor
cli
adc
icebp
jecxz
cwtl
mov
outsl
push
icebp
sahf
sarb
popa
aad
jbe
inc
sub
fadd
and
or
add
enter
cmp
or
pop
hlt
jb
inc
cmpl
push
jb
cmc
lods
mov
scas
mov
jb,pn
add
lods
sbb
and
pop
mov
and
fwait
decb
adc
in
cmp
push
cli
mov
fimuls
outsb
push
sub
pop
dec
jmp
leave
cmp
jmp
fldenv
lret
or
enter
or
xchg
repnz
scas
add
push
or
cmp
cmp
jl
xchg
pop
pusha
aad
jmp
lahf
test
push
out
jno
repnz
dec
mov
or
ficoms
or
xor
fldt
mov
xchg
pop
or
xchg
out
imul
ds
push
xor
mov
loope
pop
fimull
mov
xchg
pop
xor
or
push
lret
jno
das
cltd
dec
out
daa
or
or
xor
jl
push
pop
lahf
pushf
dec
std
stos
scas
sbb
push
lret
ret
adc
inc
imul
xchg
or
push
pop
scas
jmp
lcall
mov
and
dec
cmp
xor
dec
loopne
xchg
sub
fcoml
or
add
insb
sbb
cs
push
pushf
push
rorl
pop
cs
inc
mov
pop
pop
shll
repz
jge
and
inc
add
or
cltd
dec
fwait
cmp
and
pop
push
cmp
ret
cmp
pop
push
jo
push
xor
je
or
lahf
mov
pop
paddsb
dec
mov
popa
and
cmp
cmp
add
pop
or
popf
ds
inc
and
pop
or
roll
orb
sahf
pop
xchg
mov
or
or
add
add
pop
popf
jne
push
cmpsl
outsb
aaa
push
aaa
bound
in
insb
jns
lahf
add
xchg
mov
xchg
imul
test
hlt
jo
fists
mov
pop
aad
jae
cs
dec
sub
mov
xor
test
jecxz
add
dec
or
pop
hlt
mov
push
mov
xor
or
in
xchg
jne
sti
pop
mov
daa
test
push
push
xrelease
adc
dec
dec
add
addr16
out
enter
leave
out
sbb
test
scas
xchg
push
or
stos
xchg
pop
dec
scas
ss
pop
mov
sbb
repz
cmp
clc
mov
pop
or
dec
pop
push
cs
shlb
or
inc
jmp
pop
imul
adc
pop
pop
dec
jle
or
out
cmpsl
pop
pop
nop
scas
mov
push
inc
push
adc
lea
js
xchg
cmp
sbb
mov
push
sbb
movsl
xchg
sub
mov
test
jo
mov
pop
test
fimull
add
and
mov
fwait
push
enter
mov
pusha
mov
outsb
fidivs
sub
pop
jbe
es
or
adc
dec
cmp
sahf
sbb
pop
stos
lock
rcrb
int3
icebp
test
aam
dec
orb
aaa
ds
push
fildl
lcall
cmp
aas
add
leave
push
es
xchg
loopne
cwtl
ja
jae
or
and
cmp
loope
call
rolb
push
fldl
push
cmp
lods
in
mov
push
lods
leave
mov
mov
mov
std
das
movsb
pop
cmc
pop
subl
adc
lcall
cmp
jnp
hlt
mov
push
xchg
adc
xchg
les
mov
ja
push
popf
xor
add
inc
mov
push
gs
xor
or
pop
xor
or
enter
std
mov
pop
fs
mov
filds
mov
je
cmpl
push
jmp
or
jae
std
pop
cli
jnp
sti
jl
clc
push
icebp
push
push
or
pop
pop
rcl
push
push
flds
pop
push
fcmovnu
pop
pop
fmuls
rcrl
int
inc
lds
ret
ret
ret
inc
inc
leave
pop
movb
lret
int3
push
mov
xor
mov
mov
xor
pop
mov
and
push
popf
adc
xchg
cltd
push
adc
lahf
lahf
sbb
xchg
pop
xchg
adc
orb
add
orl
add
sldt
cmpl
push
jo
lock
js
cld
or
jne
in
ljmp
pop
rcl
push
push
aad
ficoml
aam
pop
fmull
fstl
fadd
inc
inc
int3
pop
int
dec
rol
inc
lds
lret
int3
rorb
leave
inc
cmp
mov
xor
mov
mov
lods
mov
test
adc
sbb
cltd
push
xchg
sbb
cwtl
mov
add
or
add
or
in
or
mov
sub
pop
daa
notl
push
and
pop
and
push
sub
or
adc
sbb
sub
push
xor
pop
inc
insl
jnp
bound
aas
aas
es
inc
pop
inc
or
jbe,pt
inc
dec
pop
dec
insb
arpl
pusha
outsl
jle
arpl
dec
add
push
jne
push
imul
data16
or
pop
xchg
out
repnz
cmp
or
pop
or
add
add
test
add
pop
push
imul
pop
jmp
sbb
push
ret
add
xchg
loop
or
jbe
jge
add
or
jge
jb
or
pop
push
push
mov
dec
add
lret
or
aas
enter
push
jmp
or
or
addb
or
push
je
jno
jae
sbb
mov
int
mov
rorl
fistpll
push
mov
leave
enter
fcmovu
mov
mov
or
adc
mov
shl
lret
out
or
out
mov
aam
movsl
add
rol
mov
xchg
or
or
test
xchg
movsb
das
into
or
or
ljmp
mov
lock
es
cli
or
cwtl
and
lret
mov
or
mull
repz
stc
das
int
fdiv
cmp
push
sub
cmpsl
push
or
jmp
jge
pop
jge
mov
mov
ret
mov
mov
or
fcmovne
shr
add
dec
xchg
jb
in
xchg
popa
test
mov
pop
lea
sub
je
mov
mov
stc
insb
jb
mov
mov
adc
jmp
or
mov
pop
mov
fcmove
or
rcll
push
fs
mov
in
or
push
enter
dec
pop
add
add
ds
mov
or
ds
mov
std
xchg
xchg
adc
add
cmp
or
jnp
or
cmp
mov
pusha
ficomps
sbbl
push
int3
subb
or
sti
imul
push
add
fisttpl
mov
jo
inc
shlb
mov
into
inc
into
out
insb
add
mov
shrb
mov
xor
rcrb
adc
add
mov
insl
sti
loop
pop
or
sub
rcrl
mov
fiadds
and
sbb
repnz
add
sahf
or
jg
mov
lcall
sub
push
pop
out
pusha
adc
orb
mov
cltd
rorb
jb
push
add
jae
punpckhwd
out
cmc
lret
iret
push
jns
add
mov
fbld
cs
leave
pop
mov
jmp
loope
xchg
sbb
int3
aaa
rcrl
or
pop
or
pop
dec
mov
shlb
lds
jnp
aaa
lret
cld
xchg
add
ss
call
inc
sbb
lods
adc
push
mov
popa
aad
or
sbb
mov
sti
shlb
sahf
push
rolb
add
add
xor
imull
mov
xor
or
movsb
es
out
lcall
or
add
push
push
or
enter
xlat
arpl
push
xadd
pusha
xor
dec
xor
std
push
scas
mov
inc
ret
dec
aas
scas
push
or
xor
inc
testl
xchg
xchg
lret
push
vpunpckhqdq
sbb
pop
or
cmp
clc
xchg
hlt
in
shll
or
outsb
je
sbb
enter
pop
xchg
fnsave
or
sarb
push
fistpll
sbb
mov
aam
or
inc
ljmp
add
mov
aam
pop
mov
shl
sbb
adc
cli
decb
pop
test
seta
outsl
push
gs
mov
divb
cmovl
pop
pop
push
jb
or
repz
add
arpl
hlt
mov
mov
test
addl
mov
jne
orb
cmp
icebp
sete
iret
bswap
hlt
add
ret
dec
add
dec
jg
push
daa
pusha
sub
lea
or
dec
or
xor
xchg
mov
sti
notb
inc
mov
jle
lods
ljmp
sub
lahf
sbb
or
jns
enter
unpckhps
mov
test
lods
dec
dec
fs
in
or
shrl
push
dec
xchg
push
rcr
sahf
repnz
pop
shlb
or
mov
dec
jb
rolb
addr16
or
arpl
loopne
pop
jno
shlb
push
enter
xor
push
or
push
lret
scas
fstl
add
lret
dec
jno
test
fcmovbe
sub
mov
or
cmp
cmp
adc
mov
mov
cmp
mov
or
clc
lods
sub
or
pop
mov
shll
popf
cltd
push
movb
lcall
add
jl
or
std
push
push
push
loope
clc
pop
jae
pop
jg
add
jbe
loopne
jecxz
xor
loop
je
movsl
out
push
aad
imul
mov
ud2
jns
lcall
xor
cmc
or
lcall
or
xor
cltd
ds
lret
jo
and
cmpsl
or
cmc
jbe
mov
test
ja
in
stc
dec
nop
inc
cld
sub
adc
xchg
jp
bound
add
repz
adcl
arpl
pop
pop
or
out
add
push
fmuls
push
hlt
roll
bound
dec
dec
lret
ret
or
adc
mov
jbe
cmp
jg
cmp
inc
pop
push
mov
pop
fadd
popf
push
ret
pop
arpl
inc
aad
mov
bt
or
lods
sbb
out
add
fwait
ljmp
fnstcw
cmp
ror
out
sub
mov
bound
push
mov
or
and
inc
mov
xchg
or
sbb
mov
sahf
pop
xor
roll
outsl
fsubp
pushf
inc
add
pop
ljmp
or
scas
push
enter
add
rol
mov
pop
icebp
mov
or
xchg
dec
jb
and
adc
in
or
sbb
out
std
aaa
setle
or
inc
push
lods
lods
xchg
dec
mov
or
aaa
paddw
lds
dec
fidivrs
push
or
xlat
ret
repz
loope
andnps
push
sbb
mov
sbb
pop
nop
adc
jns
scas
cmp
call
or
lret
push
push
ja
pop
pop
aas
or
xchg
ss
rorl
popl
mov
cmp
das
emms
ss
cmp
ja
dec
or
popa
or
pop
mov
add
sbb
mov
push
pop
jbe
movb
cltd
xlat
jl
add
jns
aam
xor
cmp
dec
or
enter
xchg
stc
pop
cmp
push
out
bound
or
pop
insb
and
mov
repnz
lods
ss
stos
pop
lea
dec
andl
insb
scas
cmp
psllw
or
dec
or
push
xor
mov
add
add
cwtl
les
ss
adc
jge
vphadduwq
or
popa
imul
adc
in
aam
jp
or
pop
loop
sbb
inc
or
jecxz
sti
sbb
push
sarl
ds
mov
or
out
pop
pop
fimull
xchg
hlt
or
ror
mov
or
pop
adc
sbb
xor
fisttpl
mov
or
mov
outsl
add
cmp
mov
jecxz
cltd
or
test
sub
imul
and
pop
cmpsl
push
adcl
orb
lock
add
repnz
inc
xchg
push
or
lret
inc
out
or
fistpl
xchg
out
add
adc
test
cmpsl
popf
pop
dec
jecxz
daa
or
frstor
add
dec
int3
ret
or
fisubrl
popf
leave
push
jp
add
adc
pop
or
mov
adc
mov
popf
mov
or
and
arpl
pop
and
jno
jmp
add
or
lock
jge
sbb
fstpt
out
out
fcoml
push
inc
cli
sbb
pop
push
or
decl
dec
mov
mov
fistps
ret
iret
test
repz
sbb
pop
or
shl
or
adc
add
sahf
adc
or
jle
xor
cwtl
mov
or
mov
jge
jb
add
xchg
mov
hlt
sbb
add
lock
mov
sarl
sarl
xchg
pop
repnz
sarl
inc
ds
add
push
mov
pop
out
jl
xchg
dec
rorl
jb
sbb
add
xor
and
or
dec
stos
push
or
movsb
movsb
sub
lret
inc
mov
push
or
sbb
xor
or
mov
test
orl
icebp
movsb
cwtl
sbb
adc
mov
mov
jmp
sahf
add
dec
ret
int3
dec
insb
or
mov
jns
xchg
xchg
orl
add
jb
add
add
rcr
push
fimuls
inc
sbb
outsb
data16
mov
in
add
icebp
push
daa
xchg
or
call
sarl
add
lret
jbe
lock
jge
nop
pop
add
jns
ds
sbb
pop
push
mov
cli
mov
ffree
or
xor
lret
add
xchg
xor
or
stc
push
dec
insb
cmpsl
fwait
mov
in
movsl
imul
cmp
loope
or
subb
xchg
fwait
mov
rorb
cmp
sbb
sbb
mov
or
imul
sbb
xchg
test
inc
sub
pop
and
mov
or
scas
rcrb
jne
jae
js
jle
or
gs
mov
and
sub
aam
adc
mov
flds
or
fs
jno
mov
push
or
jmp
adc
mov
cmp
mov
xchg
je
rorb
or
int3
mov
clc
cmp
mov
inc
inc
pushf
and
add
mul
movsl
sub
mov
dec
inc
sub
sbb
cmpsb
repnz
dec
add
ret
sahf
xchg
push
add
mov
or
ja
in
and
popf
pushf
adc
inc
fwait
adc
push
fwait
out
or
sbb
addb
push
xchg
push
in
aad
sbbl
std
mov
add
insl
filds
insb
mov
fs
stc
stc
pop
pop
pop
lock
or
call
outsb
loop
push
push
add
rcrb
rcl
pop
movsb
or
push
cmc
or
xchg
inc
aad
movl
pop
rcll
or
inc
cmp
xor
mov
aas
adc
stos
lds
and
sbb
xchg
cltd
sbb
lcall
mov
mov
lea
or
mov
mov
mov
js
hlt
hsubps
jne
pop
idivb
jge
out
outsb
add
sbb
or
inc
enter
inc
push
push
inc
repnz
dec
ret
push
dec
sbb
dec
cmp
inc
or
into
rolb
inc
pop
inc
sub
dec
dec
ss
push
cmp
das
lret
aas
push
ds
pop
sub
cmp
das
sub
mov
sub
dec
adc
pop
or
roll
or
cmp
or
fisubl
mov
sub
out
mov
sti
cli
jnp
sti
or
cmp
imul
add
fadds
and
aam
into
jnp
ret
cmovbe
imul
int3
nop
jnp
lret
inc
inc
sarl
int3
int3
orb
mov
das
or
stos
mov
mov
mov
add
sub
dec
jp
nop
xchg
fwait
sbb
or
or
addb
mov
ud2
mov
xorl
divb
testb
dec
sub
out
bound
or
dec
sub
ficoms
fisttpll
popa
dec
dec
rol
sub
dec
dec
ret
sub
aaa
addl
mov
dec
sbb
or
push
ja
push
pop
add
dec
js
jbe
pop
add
je
xchg
or
mov
stc
jl
jmp
mov
fistl
add
imul
popf
nop
mov
or
pusha
insl
dec
sub
push
or
imul
push
fcomp
xor
ljmp
push
or
outsl
pop
data16
dec
dec
ret
jmp
mov
dec
mov
mov
mov
mov
inc
mov
add
and
out
popa
sbb
add
sub
pop
add
sahf
adc
enter
sbb
add
sub
outsb
push
jnp
and
hlt
adc
adc
sbb
cs
jns
adc
ret
and
and
add
jmp
cs
fimuls
pop
adc
repnz
and
dec
jb
and
or
mov
xor
mov
cmp
adc
mov
pop
inc
fwait
or
xchg
rorb
xchg
pop
mov
push
adcl
ficomps
push
or
in
add
or
cmc
or
xor
mov
decb
cmp
sub
jle
fiaddl
xlat
or
cld
fists
iret
dec
push
leave
sbb
cmp
mov
rcr
sbb
mov
addr16
pusha
push
or
lret
cmc
dec
or
cmpsb
or
aaa
mov
xor
mov
ss
mov
cmp
jg
xor
test
popa
push
ja
addl
xchg
or
cmp
sahf
mov
or
dec
loopne
arpl
cmpsl
addr16
orb
lods
dec
popl
jnp
or
inc
add
sbb
addl
or
push
or
push
push
es
aaa
mov
pop
fwait
cmp
add
add
add
add
or
add
add
dec
jo
outsb
push
je
bound
je
inc
outsb
jne
sbb
push
imul
add
push
jns
je
insl
add
adcl
je
adc
jns
gs
add
popa
dec
imul
imul
add
inc
xor
or
push
imul
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
sub
add
addb
inc
cmp
andl
outsb
push
jmp
and
or
leave
bound
rcl
pop
xor
push
mov
hlt
pop
lea
scas
lret
pop
mov
sbb
xchg
in
xchg
mov
mov
inc
pop
or
nop
aad
sub
dec
jcxz
push
cmp
movhps
mov
dec
and
or
out
jnp
std
loop
cmp
push
adc
mov
xor
mov
pop
adc
cmpsb
pop
inc
enter
shlb
jns
push
mov
cmp
sbb
das
jns
xor
add
sub
pop
jo
sub
xor
into
adc
dec
mov
mov
dec
xchg
cmp
repnz
repz
cld
mov
push
pop
mov
lods
insl
test
data16
in
pop
outsl
adc
mov
inc
sub
pop
ret
ja
xchg
jb
popf
addl
cs
call
cmpsb
pop
in
loope
add
mov
push
push
pop
push
mov
xchg
xchg
xor
mov
xor
insl
lds
xchg
pop
adc
dec
dec
or
push
jle
cmp
aaa
inc
sti
dec
lds
xchg
mov
jmp
sarb
sbb
sti
mov
push
cmp
sub
scas
ljmp
test
cmovns
sub
cli
jmp
pop
mov
pusha
add
aam
loopne
loopne
loop
push
push
sbb
ds
cmp
lret
int
xor
test
shlb
jl
sbb
mov
mov
fxch
mov
add
push
push
leave
rcrl
in
loope
movsb
inc
bound
dec
cld
mov
pop
pop
adc
mov
push
in
inc
subb
std
stos
push
out
in
.byte
.byte
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
mov
call
in
mov
mov
test
xor
imul
stos
push
add
pop
pop
mov
add
mov
push
push
pop
pop
mov
mov
sub
mov
sub
jmp
mov
scas
dec
fsub
mov
inc
je
adc
sub
jmp
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
mov
mov
sub
call
inc
jns
pop
insb
xor
xchg
push
movswl
pop
pop
sub
jne
jmp
inc
pop
xor
shlb
xor
or
jg
add
lock
jl
xor
xchg
leave
add
andl
mov
jmp
cmp
xchg
lret
mov
push
imul
or
out
xor
push
add
jmp
push
push
fldenv
mov
xor
xor
xchg
icebp
or
jo
test
dec
mov
push
inc
and
pop
jmp
sbb
xchg
gs
roll
fdivr
and
out
out
sub
xor
xchg
out
mov
in
pop
ud1
es
sub
fidivl
push
inc
insl
add
jb
icebp
and
and
es
ss
scas
adcb
call
and
mov
test
loopne
cmpsb
and
fs
inc
out
xchg
and
mov
stos
sbb
lods
and
and
mov
mov
int
mov
std
jp
insb
xor
rcr
xor
dec
pop
jne
pop
or
dec
mov
mov
mov
jmp
pop
mov
inc
pop
sbb
pop
add
ret
mov
sarl
je
and
mov
cmpsl
and
clc
xchg
cltd
mov
scas
fisubs
jae
sahf
xchg
pop
lods
push
xchg
in
jecxz
and
jp
js
and
jg
ja
and
push
iret
mov
hlt
ljmp
mov
sbb
loope
sbb
lea
das
stc
push
arpl
dec
stc
adc
das
add
test
stc
and
inc
mov
cltd
jp
leave
xchg
xor
and
les
xchg
sub
lahf
jle
pusha
leave
xchg
jb
xlat
xchg
jb
in
sbb
addr16
jno
dec
mov
scas
out
jne
shll
hlt
pop
push
jbe
inc
pop
push
hlt
sbb
jmp
das
sbb
pop
inc
dec
hlt
in
ret
negl
leave
orps
add
dec
jnp
mov
negl
pop
dec
pusha
jnp
int3
sbb
sbbl
ljmp
mov
test
jecxz
std
mov
dec
mov
fimull
dec
movsl
add
jnp
add
jecxz
mov
leave
push
incl
fnsave
repz
xchg
jne
inc
jl
inc
leave
pop
hlt
adc
popa
leave
xchg
jb
cmc
test
sub
jl
aas
jge
xchg
push
inc
push
push
sub
jne
push
xor
outsl
mov
mov
out
cmc
jge
out
ss
mov
jle
cld
push
mov
lret
aam
les
mov
xlat
sub
push
in
sub
push
lods
int3
sub
jns
push
xchg
test
pop
pop
pop
stos
ret
adcb
testb
xchg
cmp
xchg
iret
mov
cmp
int3
adc
add
jge
or
nop
mov
test
mov
sub
rcrl
enter
sub
aaa
sbb
sub
sbb
jp
sbb
jle
sbb
jl
adc
mov
fs
repnz
mov
xor
aas
mov
or
adc
leave
xlat
mov
and
or
fs
xchg
and
leave
xlat
mov
sub
sub
imul
lea
or
movaps
jecxz
movaps
iret
lock
test
sub
sbb
ja
insb
dec
daa
les
sarl
das
inc
daa
iret
test
xor
out
ss
fs
imul
inc
dec
xlat
push
and
xor
push
inc
sti
daa
lods
mov
sub
ss
xchg
popa
sti
daa
fs
xor
fs
fwait
push
movswl
or
fs
sbb
lods
outsl
or
jnp
or
or
sti
daa
fs
xor
fisubrs
inc
fs
sbb
js
dec
das
lods
fbld
ljmp
movswl
pop
movaps
fists
and
in
inc
xor
lock
mov
pop
wbinvd
pop
das
imul
adc
add
lods
pop
ret
hlt
pop
movaps
leave
cmp
push
movswl
pop
mov
movswl
pop
movaps
cwtl
adc
in
xor
sub
sub
sub
sub
jnp
addb
rcrb
push
adc
dec
imul
daa
fs
push
pop
inc
into
cmp
fs
jno
fs
movaps
in
das
lods
mov
cmp
cmp
adc
xor
lret
sbb
lret
ret
ss
std
mov
cmp
pop
lahf
lahf
bound
sub
ljmp
test
cvtpi2ps
xchg
std
mov
cmp
cmp
or
push
pop
adc
inc
and
cmp
repnz
adc
xor
lret
sbb
imul
cli
outsl
cmp
lods
insl
aam
stc
lahf
test
fs
cmp
repnz
adc
xor
lret
sbb
xor
rorb
dec
sbbl
and
lret
repnz
jae
adc
xor
lret
sbb
xor
add
pop
pop
icebp
sahf
loope
sysexit
scas
add
sub
sti
sbb
or
or
fs
or
inc
cmp
cmp
and
lret
repnz
xchg
mov
mov
sub
push
add
fcomps
icebp
sahf
mov
adc
ss
cmpsb
movsl
dec
push
dec
or
hlt
xor
cmc
adc
rorb
inc
sbb
dec
push
dec
or
hlt
xor
outsb
cmp
add
sub
pop
movaps
push
cwtl
push
sub
aaa
fldenv
fs
setnp
adc
push
mov
cmp
lret
fisubrs
mov
popf
pop
pop
pusha
ljmp
lret
movaps
negb
fs
sbb
push
into
adc
test
movaps
sbb
rcrb
out
or
fbld
cmpsb
addr16
fs
pcmpeqw
or
push
dec
xor
sbb
call
cvttps2pi
cmp
daa
mov
adc
bound
jb
movsl
lcall
std
out
jo
iret
lock
ds
adc
lock
fstpl
call
sub
mov
rolb
or
push
ficompl
inc
lret
hlt
pusha
lock
movaps
sub
sub
sub
sub
sub
sub
daa
dec
rcl
daa
clc
std
or
fs
daa
fs
movaps
call
fs
movaps
daa
fs
mov
sub
sub
sub
sub
stos
and
jg
fs
mov
fs
bsr
fdivrs
jbe
jae
arpl
mov
sub
std
mov
repz
push
cwtl
fidivl
add
lods
pop
or
mov
es
test
jle
xchg
sub
push
addb
iret
mov
cwtl
add
or
cli
and
inc
out
cmp
xchg
flds
or
and
enter
ficoml
sub
fs
push
xlat
popf
mov
jns
add
sub
push
push
flds
movsl
aas
xor
or
mov
repz
jns
mov
jmp
mov
adc
pop
fs
cld
xchg
in
pop
fstp
pop
inc
inc
pushf
cmc
push
aam
das
or
sbb
add
and
add
add
add
pusha
inc
add
inc
add
inc
add
jo
add
mov
pop
add
pop
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
pop
add
mov
add
loopne
pop
add
mov
add
jmp
pop
add
mov
add
cmc
mov
pop
add
mov
pop
add
pop
add
mov
add
jne
gs
xor
fs
insb
add
fs
insb
cs
insb
add
fs
insb
cs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
add
add
add
popa
jb
gs
inc
add
add
insb
inc
arpl
jo
gs
inc
jne
data16
add
pop
ja
outsb
insl
popa
jo
imul
arpl
outsb
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
movsb
cmp
add
popa
loopne
adc
add
lahf
add
add
push
pop
jo
xchg
adc
mov
adc
fisubs
push
adc
nop
mov
push
inc
nop
push
inc
or
outsl
and
inc
mov
mov
pop
enter
and
stc
lock
enter
scas
mov
dec
inc
or
push
push
je
imul
inc
add
add
xor
shrb
and
rolb
enter
cmpl
push
arpl
add
mov
mov
adcb
enter
jb
test
movsb
sbb
mov
add
cwtl
xchg
xchg
enter
add
cmp
sbb
jl
push
and
in
push
jo
insb
sbb
and
and
pop
enter
push
jb
cmp
dec
add
orl
and
xchg
add
inc
in
jb
cmp
xor
and
and
add
mov
les
push
add
and
pop
or
inc
hlt
sub
add
mov
pop
sbb
add
lods
or
cmp
gs
or
cmp
sbb
js
and
and
mov
adc
add
push
pushf
int3
push
call
add
leave
jne
inc
fistpl
lret
dec
inc
cmp
or
rolb
mov
add
in
repz
addb
fs
in
out
iret
adc
push
pop
add
add
pop
add
or
call
test
dec
dec
mov
push
add
add
jnp
add
int3
bound
xor
jo
add
jg
jle
add
adc
mov
nop
push
push
rorb
and
call
add
push
pop
add
nop
scas
cmp
inc
mov
push
or
push
jne
add
frstor
sbb
xchg
or
jmp
xchg
add
add
or
sbb
sahf
jmp
add
clc
jg
sub
pop
pop
pop
add
inc
je
repnz
add
xor
jb
inc
into
add
sbb
call
ja
pop
add
add
add
jnp
and
inc
inc
cmpsb
gs
jmp
or
divb
add
into
add
xor
iret
pop
sub
jmp
sub
and
add
aad
xlat
cmp
adc
add
sarl
test
loop
or
or
sbb
sti
cltd
mov
nop
stc
enter
in
xor
adc
pop
mov
cmp
out
adc
int
or
add
push
push
sbb
clc
mov
jne
add
mov
mov
adc
mov
cli
xor
pop
clc
stos
fs
push
pop
fsts
in
popa
push
pop
add
or
push
push
shlb
loop
add
xchg
and
sub
ja
movsl
fsubl
dec
adc
dec
in
sbbl
or
xchg
data16
push
nop
sbb
or
adc
add
repz
nop
out
ja
jns
and
add
out
xor
je
or
adc
jp
cmpsb
jne
add
xor
or
movl
pop
cmp
pop
jmp
pusha
ret
in
loopne
jl
jo
rcrb
shld
add
sbb
lods
adc
mov
xor
test
ljmp
mov
ret
push
dec
and
pop
inc
aam
dec
js
cwtl
dec
add
lds
inc
aad
xor
iret
cmp
pop
add
jle
add
rcll
fstpt
mov
cwtl
orb
pop
adc
cmp
push
adc
cmpsb
mov
movaps
orl
je
mov
test
xor
inc
sahf
jmp
sbb
leave
xor
sub
test
add
push
sbb
jae
ja
add
std
inc
int3
mov
daa
inc
mov
dec
loopne
rolb
cmp
ds
aas
dec
xchg
or
cmc
pop
pop
cmp
movq
add
xlat
fs
call
pop
ja
je
cmc
inc
add
mov
inc
leave
nop
stos
call
das
aas
and
mov
cmpl
pop
movsl
and
rorb
call
jns
pop
aaa
in
jmp
loop
add
aas
popf
xchg
xchg
add
mov
pop
es
or
popa
adc
mov
xchg
loopne
lea
sub
sub
test
lcall
xlat
sbb
or
pop
dec
leave
xchg
xchg
push
adc
loopne
mov
dec
mov
cmp
sbb
data16
decl
cmp
jmp
cmpsb
imul
pusha
stos
mov
dec
and
jp
adcb
cmpl
sub
dec
push
test
push
adc
or
pop
dec
cmpsb
lods
addb
dec
and
add
xor
add
lock
out
or
fiadds
jae
pop
dec
iret
je
sub
rorl
adc
mov
add
pop
ret
enter
out
add
adc
fdiv
adc
dec
repnz
cmp
inc
add
add
lea
sub
pushf
ljmp
andb
mov
ficompl
xor
cmpb
push
or
and
mov
push
stos
sbb
push
add
xor
inc
add
test
popf
pop
adc
add
xor
add
sbb
mov
mov
add
movb
add
push
jne
push
add
jmp
pop
in
test
pop
rol
jl
add
adc
test
aam
shr
push
bndldx
dec
enter
adc
xchg
add
push
clc
mov
hlt
add
adc
xor
cmp
out
sbb
sub
or
xor
cwtl
dec
jne
add
fidivrl
add
dec
in
fistpl
add
jl
orb
sbb
dec
or
cmp
cmp
add
test
leave
jns
add
xchg
stc
add
dec
aad
int
adc
push
jmp
pop
movsl
rcr
outsl
sub
negb
or
lea
add
and
add
shll
add
or
push
cld
adc
or
jns
adc
cmc
mov
addl
clc
xchg
sbb
pusha
add
adc
movl
mov
ret
or
cmpl
cltd
inc
push
mov
add
ljmp
add
rolb
cld
cld
in
xor
add
nop
adc
popa
outsb
or
bound
xchg
add
add
push
sub
or
add
ret
and
mov
add
xor
test
je
sub
add
scas
enter
test
test
add
mul
push
push
add
cmpsl
jb
sub
sbb
push
adc
add
add
add
fdivs
shlb
or
inc
pop
xlat
clc
add
fsubs
test
jne
add
repz
xor
push
jae
add
xchg
clc
xchg
or
pop
mov
and
lods
fdivr
call
shl
push
jg
not
lahf
fs
pop
lds
nop
adc
imul
push
xchg
jb
cmp
rolb
outsl
mov
sbb
add
adc
sub
dec
add
and
in
mov
popa
xor
jae
lcall
adc
shr
aas
or
shll
mov
add
pop
pop
popf
dec
sub
pop
mov
sub
cld
xchg
add
adc
mov
test
jmp
add
nop
hlt
xor
adc
test
mov
pop
iret
sbb
cmp
jecxz
lret
adc
add
pop
fcomip
sub
jg
cmp
jl
nop
cmp
or
sahf
addl
mov
xor
cs
mov
add
dec
or
sub
nop
lahf
add
jmp
mov
cwtl
mov
sub
sub
test
aam
es
xor
js
imul
movsl
cmp
cld
sub
das
or
adc
ds
or
add
add
call
pop
mov
inc
add
ror
rep
add
aas
movb
sbb
xchg
ret
fsubs
mov
scas
pop
inc
xor
cmpsb
add
adc
xchg
jbe
add
mov
push
add
xor
mov
dec
add
gs
add
repnz
or
mov
jo
push
addl
dec
lods
xor
dec
cmp
orb
mov
cmp
xchg
add
push
addb
sbbl
int3
and
pop
mov
sbbb
ja
sub
add
inc
pop
loop
adc
jle
and
xchg
xor
movsb
mov
pop
cli
inc
int
pop
enter
add
push
es
xchg
add
dec
inc
dec
sbb
mov
jmp
add
dec
xor
mov
jo
inc
xchg
mov
add
fsts
add
mov
cwtl
mov
lret
call
xchg
dec
add
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
fmul
sub
pop
pop
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
test
xchg
push
int3
rorb
inc
adcb
aas
subb
or
mov
cwtl
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
outsl
pop
adc
jne
sbb
arpl
inc
adc
sbb
or
mov
or
jo
pop
or
inc
adc
push
or
mul
dec
push
int3
add
enter
dec
sub
add
inc
pop
sbb
data16
xchg
push
imul
cmp
sub
jno
push
add
xchg
or
jle
add
movsl
scas
faddl
add
je
je
add
and
add
aaa
orl
test
mov
add
push
cmpb
push
adc
or
or
icebp
adc
bound
roll
mov
and
add
lods
and
add
ret
add
dec
mov
add
xlat
pop
mov
mov
add
nop
enter
add
mov
sahf
fdivrs
jne
cmp
mov
sahf
adc
data16
aas
jge
push
sbbb
sub
adc
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
add
jmp
test
mov
xchg
js
ret
jg
in
pop
cmp
lcall
fiaddl
loopne
in
sub
sahf
movsb
add
push
sub
or
cmp
dec
pop
sub
cs
push
and
mov
xor
adc
cmp
ja
jmp
jmp
add
lods
je
add
jbe
loope
adc
cmp
addl
mov
rolb
dec
ss
sbb
add
into
in
and
sbb
add
cmp
adc
jp
add
or
jmp
pop
pavgb
mov
jo
inc
and
lahf
jo
or
adc
add
adc
test
test
pop
mov
fsubl
inc
dec
add
je
sub
sbb
enter
add
jne
mov
shll
cmp
push
fs
or
out
jp
cwtl
pop
loopne
adc
scas
add
call
or
xor
add
dec
add
jmp
lret
int3
add
leave
xlat
iret
mov
fadds
lret
sbb
loopne
jecxz
in
and
push
push
push
inc
cmpl
add
leave
push
test
push
popl
paddb
cwtl
or
nop
test
lret
add
mov
cmp
add
adc
sub
sub
jg
lock
cmp
movsb
mov
xor
xchg
jl
push
sbb
or
cmpsb
sbb
inc
cld
roll
or
add
add
xchg
push
and
aas
jmp
add
add
cmp
loope
cmc
fmuls
cmp
jnp
or
add
out
imul
sbb
inc
addb
add
test
lock
out
movsl
add
sub
mov
addb
add
or
pop
into
add
test
adc
dec
fisttpll
xchg
sbb
test
adc
xor
push
pop
lea
adc
mov
xchg
ja
cmp
jmp
incl
jo
pop
lods
mov
lea
push
add
jmp
cmp
cmp
mov
cli
pop
in
sbb
mov
inc
lock
lsl
repnz
scas
inc
add
add
imul
enter
add
add
mov
pop
sarb
or
addb
fwait
pop
pop
mov
mov
fstps
inc
sub
add
cmc
pop
and
sbb
sbb
cmpsl
es
sbb
or
and
shl
push
dec
nop
dec
jno
add
fidivl
shlb
adc
enter
not
push
pop
mov
inc
and
xlat
xchg
outsl
add
sub
jbe
in
lret
jmp
xor
mov
push
add
shr
fwait
loopne
and
and
hlt
into
imulb
adc
add
sbb
sbbb
psubusw
dec
loopne
mov
jae
lret
sbb
mov
pop
add
ret
xchg
loop
push
add
pop
and
je
mov
cmp
xor
add
dec
add
dec
iret
push
add
cmp
cmp
sar
stc
or
sahf
ja
adc
mov
add
je
pop
xchg
adc
shlb
or
stos
cmpsb
adc
stos
jne
add
adc
or
loop
push
mov
negl
push
dec
js
add
xor
iret
rorb
sub
pop
pop
push
fildl
or
sbb
clc
pop
arpl
idivb
add
ds
mov
or
addl
sub
sub
mov
mov
rorb
xchg
sub
dec
jne
testb
sbb
aam
addb
jmp
enter
push
fs
cmc
inc
pushf
mov
sti
and
loope
push
add
icebp
data16
and
js
popa
add
mov
out
sub
dec
or
add
or
xor
cmp
pop
shrb
lea
jo
shlb
add
or
dec
mov
aam
jl
adc
testb
and
cmp
jle
pop
js
mov
fiadds
add
mov
sysret
xor
xchg
xor
xchg
mov
jbe
adc
add
cltd
ret
or
add
pop
add
jmp
cli
push
add
cli
in
shlb
sub
add
jne
repnz
cmp
cmpsb
add
xchg
add
jae
jmp
add
ss
mov
sbb
push
adc
dec
cld
or
mov
add
xchg
lahf
mov
adc
add
mov
or
jo
shlb
add
push
sbb
and
nop
add
jmp
pop
add
insb
adc
add
icebp
add
and
cmpb
xchg
ds
pop
mov
mov
add
push
add
mov
int3
cld
push
fadds
push
push
mov
arpl
call
dec
mov
push
jae
push
sbb
loope
mov
clc
lret
loopne
imul
or
push
mov
adc
cld
or
out
mov
call
mov
jle
int3
and
ud2
add
ljmp
push
dec
sbb
push
push
add
inc
pop
inc
outsl
add
push
popa
outsb
fs
inc
add
jo
imul
add
push
push
dec
popa
jae
add
insb
jne
gs
imul
or
jo
xor
adc
cs
push
mov
adc
adc
sbb
sbb
je
rcrl
jne
ss
dec
fmull
push
pop
or
pushf
divb
cmp
mov
js
xchg
movlps
mov
call
push
testb
or
add
rcrb
add
mov
pop
loopne
pop
mov
scas
dec
cld
xchg
mov
add
stos
mov
sbb
inc
add
stos
sarl
call
fs
add
imul
and
jmp
cmp
aam
or
sbbb
cmpsb
add
jno
icebp
jnp
xorb
jg
add
mov
jo
into
leave
adc
sub
sarb
add
repz
mov
les
push
xchg
sbb
push
cltd
or
push
addl
add
add
fs
jno
add
pop
sub
xchg
add
adcb
push
add
and
or
push
rolb
cld
add
pop
adcb
pop
jmp
add
lock
push
divb
adc
pop
je
adc
jb
sbb
imul
or
or
pop
add
add
sbb
sub
inc
or
dec
push
nop
or
adcl
popa
pop
and
or
xchg
add
call
pushf
inc
test
add
jg
aam
jge
push
call
pop
cmpb
jbe
fists
cld
imul
mov
push
add
sbb
push
add
push
push
enter
inc
mov
xor
push
loopne
adc
add
push
add
mov
fs
rclb
rcrb
std
add
cmpb
popa
pusha
sub
or
jne
mov
pop
pop
ret
cmp
sbb
std
add
outsb
loope
add
inc
pop
dec
sub
mov
push
xorb
mov
push
jecxz
imul
idivl
out
andb
sbbl
dec
adc
loopne
outsb
cld
call
xchg
add
mov
lock
push
adc
out
add
cmpl
out
push
je
push
pop
add
and
sub
cmp
ja
insl
xchg
push
add
xor
xchg
add
stos
popa
xor
lret
or
push
or
ret
stos
push
jne
cmp
adc
sbb
sub
cmp
outsl
add
add
push
xor
jl
dec
sbb
sbb
leave
sbb
mov
mov
fwait
dec
lcall
pushl
mov
push
mov
aad
add
movl
stc
rcll
jmp
jae
ss
xor
adc
add
sbb
mov
sub
outsb
pop
je
pop
xchg
es
or
add
sbb
or
push
mov
dec
inc
sub
or
sbbl
jno
cwtl
fadd
cmpsb
push
add
dec
pop
aas
pop
and
add
dec
add
jne
pop
fs
push
out
add
pushf
or
popa
into
je
and
imul
add
dec
mov
add
mov
adc
or
ficoml
and
sub
and
daa
add
insb
rolb
sets
mov
xor
lcall
add
xchg
xchg
add
pop
mov
loop
movsb
add
inc
test
in
mov
and
fdivrp
test
mov
dec
cmp
shlb
push
cli
push
add
push
das
add
jmp
xor
jl
add
inc
or
jnp
add
std
cmp
or
movsb
xchg
ljmp
mov
adc
adc
mov
sub
cmpsl
dec
push
cmp
xchg
fs
mov
add
pop
call
jmp
cmp
int
push
shlb
add
dec
test
add
lret
cmpsb
dec
add
add
push
add
pop
push
mov
cmp
add
and
add
cld
cmp
jmp
pusha
add
mov
sub
dec
add
cmp
adc
sub
int3
add
push
and
jmp
test
std
punpcklwd
push
mov
es
sub
enter
leave
cmp
xlat
mov
and
push
and
sti
rcll
fxch
loope
jmp
or
fprem
push
dec
add
roll
imul
test
pop
ret
jl
add
dec
inc
cmpsl
jmp
lods
cltd
add
sub
cmp
dec
lret
fs
xor
fimull
loopne
rorb
sbb
add
mov
fadds
cli
add
pop
cmp
and
mov
in
sub
cmp
cmp
dec
stos
and
or
ja
in
fwait
mov
xlat
loop
mov
sub
enter
gs
push
add
pushl
cmp
jne
and
add
mov
sub
loope
add
jo
pop
add
inc
test
jle
ja
add
add
cli
xchg
rol
add
out
idivl
enter
loopne
mov
sarl
pop
loopne
pusha
test
iret
push
xor
sbb
mov
xor
adc
add
jle
sbb
sarl
sbb
jo
jg
dec
add
push
adc
lea
mov
movsl
and
lcall
sbb
movsb
or
dec
cmc
or
cmpl
nop
pop
mov
or
push
bnd
inc
or
inc
mov
pop
xchg
je
pop
incl
xchg
dec
aad
mov
inc
mov
push
or
add
or
add
hlt
rcll
sub
inc
call
inc
sub
lea
and
inc
lahf
push
push
stos
add
daa
out
mov
cmpsb
sbb
dec
and
shlb
push
movsb
sbb
xor
int
jl
add
andb
adc
inc
cmp
add
cmp
mov
add
mov
lcall
and
mov
push
pop
adcl
in
push
ljmp
add
ja
push
and
aaa
daa
add
dec
push
dec
pop
sub
fcomps
mov
or
mov
hlt
gs
sbb
xor
adcb
cmc
jne
push
cmpl
loopne
ficoml
mov
xchg
add
call
jne
add
sbb
inc
je
call
xor
orb
push
mov
mov
or
lods
mov
ds
leave
insb
adc
ror
mov
add
call
sub
pop
insb
imul
adc
or
or
add
lss
sbbl
shlb
sti
jb
cmp
jg
add
aad
dec
sub
push
push
sub
sub
mov
lret
ja
add
push
testb
pop
jmp
pop
push
outsl
jb
add
outsb
jae
inc
bnd
jnp
hlt
addr16
mov
sub
xor
cmp
sub
pop
pop
xchg
cltd
insl
outsb
mov
nop
mov
add
sbb
mov
add
adc
xor
cs
xchg
sub
mov
cld
lock
push
or
psubsb
push
pusha
push
pop
mov
push
adc
add
or
insb
ljmp
int3
push
and
inc
sub
cmc
inc
shll
add
cltd
sbb
in
pop
add
shrl
outsb
add
in
inc
sbb
inc
jle
sub
jo
sbb
push
add
xchg
or
mov
cld
ret
mov
add
inc
jmp
leave
mov
aas
add
scas
movl
xlat
sbb
es
xchg
inc
or
je
frndint
ljmp
shlb
and
addr16
jge
fnstcw
inc
sbb
or
push
andb
test
shlb
jp
add
mov
xor
dec
es
jecxz
cwtl
push
call
loope
inc
jb
cmpb
mov
mov
sub
push
and
cmp
xchg
dec
jnp
sbb
jg
inc
sarb
xchg
add
imul
out
roll
pop
sub
add
daa
cltd
and
push
xor
bound
or
int
pop
or
test
jmp
in
push
add
push
cmp
jo
movsb
cmp
mov
add
adcb
dec
xlat
push
pop
repnz
pop
add
rcrl
shl
pop
movsb
sbb
lret
jo
xor
inc
decb
sbb
cld
xorb
or
ret
mov
add
cmp
inc
imul
add
sub
jp
push
dec
add
adc
pop
pop
cwtl
test
scas
fisttpll
cmp
mov
jl
subb
inc
cmpsl
push
xor
inc
stc
rorb
sub
adc
pop
cmp
into
push
add
add
inc
outsb
jne
fisttps
add
mov
ja
cli
cmpsl
add
lret
pop
and
iret
dec
clc
cli
mov
push
jmp
mov
push
cmpsb
add
mov
adc
pop
dec
adc
dec
lds
iret
pop
pop
xor
mov
mov
fadds
subb
mov
lods
dec
les
add
and
std
loopne
flds
mov
inc
or
add
push
add
rolb
ret
shr
dec
push
add
pop
mov
mov
xchg
adc
cmovo
out
xchg
pop
mov
loopne
and
addl
xor
cmp
jp
sub
jecxz
and
add
push
xor
add
shrb
and
mov
adc
sub
push
clc
inc
mov
sub
and
add
mov
mov
xchg
mov
pop
dec
movsb
and
add
push
ds
add
int3
pop
mov
dec
clc
sbb
pop
cld
jo
andb
jl
cmp
fidivrl
and
add
inc
sahf
jg
inc
hlt
mov
xchg
mov
rolb
lcall
mov
bound
mov
nop
xor
dec
add
cmp
jle
add
sub
popf
iret
fwait
add
sar
repnz
add
add
dec
sti
push
lock
cli
add
xchg
daa
mov
mov
jp
add
push
dec
inc
jnp
add
inc
aad
mov
jl
cmp
repz
pusha
je
push
add
aad
jne
inc
jecxz
lret
add
mov
nop
xor
incl
fwait
dec
mov
scas
and
addl
outsl
push
jne
shr
clc
ret
cwtl
sbb
loopne
ja
cmp
mov
sbb
cld
add
sub
or
mov
cli
xchg
call
jl
je
and
push
jmp
test
pop
add
push
bswap
sub
repz
inc
add
ficompl
dec
ret
add
push
mov
in
push
add
loop
and
sbb
pop
sub
sbb
lcall
jne
pop
cmpb
scas
stos
mov
ret
mov
pop
addb
je
jmp
add
leave
shll
or
pop
add
push
movb
pop
js
add
pop
sub
sbb
xor
inc
pushl
sub
mov
pop
push
push
add
bound
sbb
call
icebp
push
adc
enter
add
cld
push
pop
mov
hlt
dec
test
scas
jl
push
add
cwtl
cmp
call
mov
add
push
insb
cmp
pop
out
push
add
lods
add
or
or
je
xchg
nop
mov
jle
pop
add
ss
push
mov
add
sbb
fidivrs
rol
add
lcall
sub
enter
or
adc
push
add
adcl
jno
jmp
shrl
xor
fmul
jae
cmc
cmpsl
dec
push
lock
inc
mov
add
pop
int3
test
xchg
cmp
stc
popf
inc
and
or
push
xchg
add
ret
add
pop
mov
jnp
data16
adc
mov
xchg
pop
pop
cltd
push
add
or
sbb
add
sub
movsb
sbb
cmp
push
aas
out
das
push
aas
or
sub
jl
sub
shlb
sarb
add
push
inc
les
cmp
aas
add
cmovp
outsl
cmp
and
test
cwtl
and
dec
add
in
stc
and
enter
cmp
fs
or
inc
add
adc
mov
mov
ret
xor
pop
pop
cli
xchg
mov
mov
movsl
and
xor
loopne
sbb
dec
popa
dec
scas
cli
push
or
jb
push
dec
push
addb
rorb
jl
sti
xor
push
mov
push
orb
lock
pusha
mov
add
pop
fiaddl
ljmp
or
xchg
pop
lods
or
ds
push
hlt
dec
push
push
int
jg
add
adc
cli
je
add
and
scas
xchg
mov
cli
jmp
jge
test
sub
lea
inc
xor
adc
pop
les
add
or
cld
dec
dec
cltd
rorb
inc
xor
mov
jmp
cmp
dec
sbb
add
or
movsb
pop
and
aas
mov
and
stos
cmp
add
dec
jne
push
add
add
cmpsb
movsb
ds
cwtl
dec
jmp
and
mov
dec
mull
inc
add
push
mov
jge
xchg
incb
pushf
xchg
ret
lcall
insb
jne
jg
adc
cwtl
pop
addl
mov
jp
cmpsb
lcall
test
dec
cli
cltd
lock
sbb
pushl
add
ljmp
ljmp
cmpsb
nop
xchg
lds
add
adc
pop
add
cmp
jmp
inc
data16
mov
push
push
adcb
nop
xorb
pop
add
imul
aaa
mov
fwait
lds
or
inc
fimull
and
movb
cld
cld
jae
add
scas
push
pop
mov
stc
ror
jp
add
push
clc
lcall
adc
incb
mov
fcoms
stos
add
mov
enter
sub
outsb
repnz
jge
adc
xchg
add
scas
sub
cwtl
push
push
xor
hlt
addl
dec
jno
mov
popa
inc
pop
add
icebp
inc
adc
scas
add
sahf
adc
int
mov
pushf
sbb
cmp
add
test
and
sub
lds
jne
lahf
cli
xorb
jmp
add
sbb
mov
jmp
sbb
pop
das
xchg
insb
jmp
pusha
enter
adc
mov
add
popa
cmp
orl
inc
std
test
or
daa
jmp
adc
adc
mov
divb
add
pusha
cmp
jae
cmp
sbb
ljmp
mov
jo
or
movd
add
xor
xchg
js
or
or
push
add
dec
mov
mov
aas
fs
xorb
sbb
out
pop
enter
in
cld
jge
push
and
add
xor
int
add
sbb
nop
cmpsb
sub
pop
xchg
push
xchg
pushf
lock
addr16
xor
push
or
cmp
and
divl
add
call
cmpsb
lods
mov
and
pop
cmpsl
loop
add
enter
cltd
add
ror
xor
movsl
aam
cmc
add
lret
adc
push
inc
fst
and
add
lods
sbb
add
into
or
clc
cmpsb
inc
or
cld
int3
sub
add
test
cli
daa
lods
push
add
dec
sarb
add
clc
add
std
mov
dec
dec
insb
pop
daa
test
add
mov
rolb
and
fcoms
outsl
xor
add
push
daa
dec
imul
aam
pusha
mov
add
fldl2e
cmp
fdivs
add
xor
mulps
add
sbb
cmp
or
aad
push
adc
add
xchg
xchg
pop
add
lret
xchg
xchg
ret
xor
add
sbb
rcrb
aam
shrl
and
or
add
adc
push
mov
into
ds
cmp
aad
gs
dec
mov
add
xor
mov
add
sub
add
jno
insl
cmp
xchg
pop
ss
jns
hlt
add
or
dec
adc
push
add
pop
in
inc
pusha
sbb
add
fiadds
and
popl
xor
adc
pop
push
add
dec
xchg
jle
inc
adc
dec
nop
xor
les
or
pop
jo
dec
repnz
add
jg
jl
jge
mov
dec
add
or
jp
dec
iret
pcmpeqd
jmp
gs
jnp
popf
ret
movsl
insb
add
adc
mov
inc
aas
add
cmc
add
call
push
arpl
xor
icebp
xor
divb
testl
jge
cmp
cltd
hlt
jmp
cmp
aas
push
push
add
or
lmsw
in
jp
loopne
decl
sbb
xchg
sbb
xchg
imul
call
lock
incl
adc
pop
loopne
push
in
jl
xchg
lods
jnp
jmp
cmp
or
fsubs
add
lea
sub
push
inc
dec
add
popf
cmp
leave
adc
sbb
lret
push
mov
arpl
and
lods
jmp
enter
test
test
sbb
loop
dec
cmpsl
cmp
pop
dec
and
cmp
cmp
push
sbbb
add
ret
cmpsb
push
add
cs
int
rolb
add
inc
mov
ret
sub
lea
hlt
push
pop
clc
ret
xlat
mov
shll
jne
mov
repnz
aam
scas
cmp
rolb
push
lcall
call
clc
xorb
dec
shll
je
add
push
or
add
sub
pop
sbb
and
mov
xor
xor
hlt
and
adc
adc
sub
punpckhdq
mov
das
inc
xor
pop
clc
push
add
adc
xchg
arpl
clc
imul
push
dec
jp
lock
add
inc
icebp
jne
push
mov
nop
pop
sbb
repnz
cmp
pop
mov
push
or
jp
or
or
jne
jg
data16
adc
hlt
out
pop
jmp
setbe
gs
jne
xchg
mov
inc
mov
jecxz
decb
sti
jo
push
add
adc
lahf
jl
je
clc
xlat
and
add
mov
hlt
inc
push
lahf
add
sub
pop
sbb
int
push
add
mov
adc
call
cmp
cmp
into
orl
js
leave
jne
adc
sub
inc
data16
dec
je
je
add
inc
xlat
inc
mov
sbb
repz
lea
lcall
mov
int3
inc
iret
repnz
rolb
inc
cmp
add
push
enter
add
xor
pop
dec
pushf
jecxz
jb
lret
push
addr16
movsb
mov
cli
pop
xchg
rolb
inc
cmp
dec
adc
test
add
inc
xchg
lods
inc
lock
aaa
jne
add
jo
fbld
incl
inc
rorb
mov
jb
out
push
add
xor
fs
inc
shlb
outsb
sbb
into
push
add
and
loopne
adc
dec
cmpsl
and
add
pop
inc
out
dec
cmp
loope
loopne
add
test
inc
leave
or
je
pop
out
or
adc
nop
jbe
jb
adc
call
push
mov
shll
pop
rorb
dec
aas
fs
lds
pop
sbb
dec
flds
or
push
cmpsl
addl
mov
imul
repz
jg
add
fisubs
and
mov
scas
hlt
jge
repz
stc
data16
or
loopne
lahf
xchg
add
imul
push
add
jb
add
cs
add
adc
mov
add
add
cmp
scas
push
push
jne
add
push
inc
sub
hlt
inc
add
imull
or
or
int3
push
push
xchg
dec
loopne
subb
ja
jb
gs
jge
and
pop
arpl
decl
pop
fcoms
hlt
mov
ret
add
and
add
cmp
sub
clc
xchg
push
add
loope
or
mov
popf
popa
cmp
pop
push
xor
inc
push
mov
js
scas
iret
push
test
and
xor
roll
or
cmp
inc
add
pop
mov
cmp
ret
or
jne
inc
aam
add
dec
ljmp
lret
popa
ficompl
pushf
mov
jle
and
add
push
inc
xor
mov
add
js
pop
add
jnp
cmp
clc
lea
add
decb
loop
iret
jns
xor
sti
lock
add
int
add
sbb
push
add
pop
mov
in
add
aam
mov
cli
rolb
notb
jo
or
push
lea
movsb
loop
and
and
xchg
leave
pop
add
hlt
ret
lds
sti
cld
scas
add
scas
repz
insb
push
xchg
push
mov
leave
pop
push
cwtl
adc
inc
aam
xor
or
inc
jmp
pop
sub
shll
cmp
add
sbb
hlt
xor
dec
mov
or
push
adc
shrb
or
and
lock
mov
imul
mov
inc
sbb
dec
mov
mov
and
pusha
or
add
cmp
xchg
mov
push
and
les
and
leave
dec
add
sqrtps
add
push
add
add
jmp
mov
push
cmpl
sbb
mov
add
ss
inc
inc
leave
sub
add
push
cmp
pop
xchg
shrb
dec
mov
inc
das
add
fmuls
add
subb
push
sbb
cs
and
inc
add
ret
je
leave
adc
add
push
and
nop
mov
pop
push
lock
add
je
mov
mov
outsl
dec
imul
add
sub
cli
inc
xchg
in
pop
ret
mov
imul
push
add
fistpl
iret
push
and
or
push
lret
data16
sbb
fcomps
cwtl
add
push
inc
bound
mov
jb
add
mov
mov
sbb
adc
or
pop
dec
jne
js
decl
mov
mov
cmp
xchg
ret
and
dec
scas
divl
mov
sub
push
and
pop
sbb
fsubrs
inc
ljmp
ja
sbb
loope
pop
and
adc
cltd
mov
cmp
add
stos
aas
pop
mov
add
and
ja
jecxz
je
icebp
inc
jmp
cmp
add
inc
clc
mov
xor
add
mov
pushf
scas
inc
inc
mulb
je
adc
fiadds
push
jbe
push
pop
and
mov
movb
sbb
add
data16
nop
das
add
mov
cmp
je
fwait
dec
fnstsw
cmp
cs
add
dec
mov
es
ret
mov
stos
lret
add
jl
mov
inc
push
clc
fwait
pop
adc
or
ret
inc
rorl
int3
xor
pop
or
adc
pop
add
aas
test
int
ret
les
ret
push
iret
ret
add
jg
add
test
insb
movl
lods
cmovs
pop
mov
dec
or
hlt
pop
mov
lock
in
and
mov
inc
or
add
mov
push
sbb
jo
pushw
pop
jbe
inc
mov
mov
pop
add
sub
or
inc
xor
orb
leave
adc
add
mov
inc
sarl
push
adc
aas
dec
add
je
rep
pop
shlb
pop
pop
jmp
fiaddl
jp
add
adc
clc
rolb
mov
rcrb
pop
dec
pop
dec
clc
add
pop
cmp
jno
mov
cmp
add
ljmp
mov
xchg
stos
cmp
cmp
or
or
ret
sbb
lret
cmp
sahf
and
into
sub
loopne
or
fimull
pop
add
mov
jmp
inc
push
pop
mov
aad
or
pop
mov
dec
adc
rol
daa
add
loop
lret
adc
adc
insl
pop
add
lea
push
jp
add
mov
movsb
pop
pop
test
sub
jb
rcr
scas
add
rorl
sbb
movsb
add
adc
xlat
sbb
mov
jl
dec
je
inc
cmp
lea
hlt
add
rcll
lret
fmulp
jl
add
push
jp
sbb
jg
les
cmp
push
inc
mov
ret
testl
stc
or
xor
jg
hlt
sub
out
out
scas
adc
addb
sbb
add
add
enter
add
mov
pushf
inc
or
nop
ret
psraw
hlt
adc
push
andl
fisubrs
imul
mov
add
mov
and
add
call
sub
call
xor
out
mov
or
jecxz
inc
test
inc
xor
lds
mov
pop
shlb
imul
je
mov
sub
mov
inc
bound
lods
inc
add
push
xlat
fadds
lods
add
js
xchg
xchg
add
push
push
in
add
into
sbb
cmp
mov
push
pop
mov
push
ror
movsl
sbb
nop
pusha
adc
dec
sbb
hlt
daa
lret
cmp
test
xchg
clc
js
aas
in
sbbl
xlat
pop
fldenv
add
int
repnz
hlt
add
ret
jl
add
rcrb
add
clc
aad
add
or
mov
cmp
push
stos
mov
cmp
add
les
dec
mov
cmc
and
out
pop
mov
inc
imul
cmp
jl
xorb
cmp
call
out
mov
sahf
popf
sti
jmp
stos
loopne
add
das
push
sbb
push
add
sarb
repnz
sub
test
addb
nop
fisttpl
add
movsb
lahf
fiadds
adc
jecxz
sbbl
call
inc
aam
repz
loope
push
jp
add
mov
mov
ds
xchg
push
cmpsb
scas
cld
push
add
jecxz
adcl
int3
cmp
add
in
xchg
cmp
jo
add
pop
cmp
mov
lock
shld
popf
add
add
clc
repz
mov
fldl
and
leave
push
pusha
les
jo
lock
loopne
adc
jnp
sbbb
cli
ja
addr16
rorl
add
call
rcrl
add
mov
push
mov
cmp
or
mov
pop
or
shlb
pop
adc
jns
testl
add
insb
add
std
rorb
pop
orb
push
jb
sbb
shl
popf
add
sbb
std
clc
or
jbe
pop
repz
pusha
sbb
inc
loop
out
test
pop
pop
inc
sar
outsl
sbb
into
push
xor
jmp
push
mov
or
adcl
pushl
icebp
lret
repnz
add
dec
ret
mov
aaa
pop
add
add
sub
push
shrb
xchg
sub
sahf
add
repz
dec
pop
push
add
enter
lock
jb
hlt
cltd
test
repnz
out
add
dec
outsb
and
inc
das
lret
add
test
mov
dec
jl
icebp
or
insb
ret
pop
stos
sbb
loop
rdtsc
add
sbb
add
sar
mov
jae
add
cltd
sar
cmp
scas
aas
sbb
push
pop
cmp
jne
xchg
mov
test
xchg
add
daa
aaa
incb
mov
cmpsb
or
ja
or
or
add
add
clc
and
dec
add
js
add
mov
or
pop
scas
push
iret
sub
pop
mov
adc
data16
in
inc
cmp
xor
push
ds
add
aas
data16
shrl
mov
add
dec
xchg
or
loope
adc
int3
push
sub
pop
mov
shl
clc
inc
dec
add
cmpb
sbb
mov
out
push
mov
and
mov
popa
inc
scas
add
movsl
cvtps2pi
orl
sub
mov
add
movsl
xor
pop
or
fcoms
enter
or
or
add
dec
push
addr16
xor
add
cmp
jge
or
mov
add
sbb
inc
add
decl
dec
jbe
or
popl
jmp
push
mov
add
loopne
mov
lods
loop
jmp
call
inc
and
push
cmp
cmp
sub
jl
dec
and
pop
lock
pop
inc
loopne
sub
pop
sti
cmpsl
push
subb
add
or
add
cmp
adc
add
add
dec
pop
sbb
shlb
pop
add
out
mov
mov
sub
add
mov
sti
inc
add
adc
out
adcb
or
add
xor
aas
ds
cmpsb
outsb
or
jnp
add
mov
lock
call
add
js
mov
pop
loopne
mov
push
or
test
call
cld
xor
mov
and
hlt
add
and
cmc
pop
arpl
pop
fsubl
lea
adc
jg
add
in
cmp
and
push
xchg
xor
mov
xchg
bound
and
cmp
push
hlt
xchg
lock
je
add
cmpsb
adc
cmp
faddl
fdivs
cmp
sbb
mov
inc
les
mov
add
cmp
mov
enter
nop
jb
cmp
and
js
je
jo
insb
cmp
push
and
enter
push
jb
call
and
inc
das
xor
pop
rol
add
adc
call
test
lock
add
adc
sub
dec
daa
add
or
sub
add
mov
je
add
and
dec
ja
cmp
pop
iret
lock
or
icebp
cmp
sbb
movb
and
xchg
test
in
clc
jb
cmp
sbb
andb
and
xchg
fbstp
loopne
loope
loop
ret
cmp
out
out
call
jmp
iret
ret
paddsb
in
jb
cmp
rcrl
inc
sarl
aad
xchg
xlat
mov
jb
cmp
sbb
shlb
and
xchg
filds
enter
jb
cmp
and
add
and
xchg
enter
jb
lret
and
and
sub
add
sbb
add
mov
mov
or
mov
and
mov
cmp
movsl
aaa
call
pop
loopne
xchg
cmp
inc
sbbb
or
imul
and
lcall
push
out
arpl
push
fildl
pop
add
mov
xchg
rcrl
clc
out
iret
nop
lods
out
sub
mov
push
inc
sbb
pop
cmp
add
arpl
add
ss
cmp
mov
add
adc
and
lahf
add
iret
adc
nop
cwtl
jnp
std
cmp
lock
add
add
or
jb
add
pop
push
hlt
pop
mov
xchg
mov
or
mov
cld
dec
sbb
inc
dec
mov
je
adcb
movsb
pop
sbb
and
pop
rol
loopne
addr16
inc
cmpsl
pusha
push
or
push
mov
shll
adc
inc
imul
nop
mov
pop
and
rolb
popa
outsb
xor
push
popf
pop
inc
rorb
scas
adc
add
push
jo
or
jbe
dec
lds
roll
sbb
pop
sub
mov
sub
add
dec
jo
sbb
fidivrl
ja
mov
shlb
cmpsb
insb
sti
popa
jne
cmc
mov
or
pop
nop
int
inc
lea
jae
mov
push
outsl
add
jl
and
cmpsl
nop
sbb
je
jo
es
fidivs
jg
cmp
pop
mov
rclb
imul
inc
adc
ja
add
jae
lds
mov
jl
mov
fldenv
hlt
or
jns
pop
gs
nop
in
in
lret
cwtl
xchg
add
push
je
arpl
push
sbbl
add
jo
pop
loopne
jns
out
mov
enter
push
popa
or
cld
sbb
cmp
push
enter
gs
dec
inc
inc
popa
dec
outsl
mov
insl
xchg
dec
orb
bound
jnp
jae
pop
mov
mov
pop
imul
cmp
test
outsb
cmp
popa
and
les
add
incl
imul
lods
rcrb
ljmp
or
in
stc
xchg
add
lahf
add
mov
mov
push
call
or
add
and
push
ljmp
mov
popf
loopne
mov
mov
dec
cmc
pop
ds
adc
insl
push
add
movsl
addr16
daa
jo
add
pop
std
lcall
dec
sub
xlat
shrl
aaa
pop
adc
cmp
mov
rorb
jp
lock
and
sub
and
mov
mov
mov
outsb
in
rorb
push
out
mov
pop
rcrl
adc
add
repz
je
sub
inc
add
or
clc
jg
pop
sub
sub
cmp
je
add
movzbl
push
xlat
sbb
pop
rcrb
xchg
nop
and
mov
adc
sub
aaa
adc
ret
add
mov
cmp
jecxz
add
js
shlb
add
add
cmp
repz
sbbb
add
push
jge
mov
repz
sbb
dec
sub
adc
nop
jnp
into
sub
inc
mov
jg
arpl
repnz
ret
jno
xchg
or
out
xor
add
xor
imul
scas
fdivrl
adc
and
inc
xchg
add
mov
loope
and
pop
hlt
dec
mov
pop
pop
aas
test
add
lock
adc
add
fisttpl
adc
inc
mov
cmp
add
or
and
dec
aas
sbb
add
jp
mov
pop
mov
aam
inc
test
hlt
xchg
imul
ja
test
mov
push
pop
daa
or
push
add
loopne
arpl
pop
add
pop
or
lods
add
fidivl
aaa
xor
xlat
xor
ss
push
add
mov
inc
call
repnz
pop
rol
movsb
test
out
mov
dec
sub
sbb
in
das
ret
dec
pop
cmp
add
mov
adc
mov
mov
xor
xchg
push
mov
negb
subb
movsb
aad
push
sub
stos
xor
mov
frstor
aas
std
mov
push
dec
jo
sub
sub
stos
push
and
xchg
push
rolb
cmp
loopne
jmp
jae
fldl
sbb
ret
sbb
clc
aas
sub
sbb
iret
rcr
push
inc
sub
cmp
add
sub
fs
add
jge
or
xor
call
mov
and
sub
sub
cmp
flds
mov
push
jge
xor
cmpsl
fsubl
adc
movsl
adc
add
popf
dec
pop
jmp
mov
shll
fmull
pop
push
ljmp
adc
in
and
adc
add
in
dec
inc
repz
add
add
mov
lcall
add
adc
inc
add
mov
add
xor
daa
add
dec
ror
pop
jg
fdivr
xchg
add
inc
and
sarl
ja
add
lock
push
iret
imul
push
imul
out
inc
test
incb
popf
add
jne
push
mov
cmp
push
pop
roll
lods
pusha
or
addl
mov
push
add
add
add
jbe
push
inc
cs
cmp
lock
push
add
dec
push
xchg
leave
or
enter
jb
test
jg
jnp
mov
xchg
add
mov
fs
mov
xchg
jne
add
jg
call
inc
add
clc
mov
ds
repz
dec
aaa
inc
shl
loopne
dec
shl
cmp
movl
rclb
cmp
cmc
add
mov
inc
addb
or
add
sahf
popa
jns
add
loop
cmpsb
xor
xor
add
mov
testl
cwtl
data16
mov
loope
sbb
mov
pop
adc
shll
add
bnd
cmpsb
mov
ltr
pop
cmpsl
dec
iret
or
dec
add
sub
addr16
sarb
add
sub
ret
pop
fmull
pop
lcall
fstp
add
xchg
dec
sbb
or
and
icebp
xor
mov
in
mov
xlat
ret
mov
aaa
cli
xor
movsb
lret
push
adc
roll
adc
lock
stos
and
sbb
mov
mov
out
popf
add
dec
cmp
mov
cmp
jg
inc
int3
fwait
lret
clc
inc
cs
add
pop
push
fs
call
lods
das
xor
push
addl
stos
sub
pop
aam
mov
pop
dec
aam
pop
fiaddl
mov
rol
les
add
gs
movsb
push
subb
xor
clc
dec
rolb
pop
mov
mov
nop
daa
pop
inc
call
and
cli
cmp
in
ljmp
sbb
test
lret
jo
xor
fldenv
push
lods
jae
add
pop
inc
xchg
rcrb
arpl
rolb
add
push
push
pop
dec
add
push
push
sub
je
add
adc
icebp
add
sbb
addb
lods
dec
daa
adc
enter
add
lock
lea
or
jmp
stos
and
add
pushf
ljmp
add
aad
lret
push
lock
sbb
and
or
call
adc
fld
cltd
jo
jge
in
sti
pop
sbb
dec
add
dec
jmp
cld
and
dec
inc
fadds
std
stc
lret
push
rolb
jmp
push
cmp
sub
cmp
and
add
xor
nop
mov
aaa
testl
roll
rorb
add
test
add
pop
adc
inc
shlb
and
hlt
dec
lock
or
cmp
mov
lods
add
and
js
nop
aas
pop
sub
adc
dec
add
call
mov
in
gs
sub
fisubrl
ljmp
xor
and
les
in
mov
and
mov
mov
jne
push
push
lods
xchg
sbb
imul
add
jmp
or
lret
add
shll
movsb
sub
ud0
push
mov
pusha
jl
pop
arpl
add
cmp
clc
sbb
sub
xor
cmp
cmp
aaa
imul
ret
cmp
add
add
xor
popf
push
sti
or
add
test
addb
or
dec
mov
es
je
pop
xchg
lods
and
add
mov
mov
add
cmp
pop
test
jne
add
movzbl
add
dec
js
push
sbb
iret
jp
xlat
and
dec
mov
inc
jns
pop
xor
jge
fiadds
and
and
push
jl
call
mov
dec
fsubrl
lock
out
add
data16
adc
imul
adc
push
cmc
sub
pop
jne
rcrb
repnz
and
add
xchg
add
orl
pop
jecxz
push
imul
inc
dec
mov
ret
xchg
add
lea
cli
sbb
or
mov
negb
jns
pop
xchg
jnp
add
add
pop
push
dec
push
movsl
rorb
dec
sahf
mov
add
or
jne
lret
add
loopne
clc
movsb
jbe
cmp
push
js
orl
cli
test
adc
and
cmp
pop
add
push
mull
aam
xchg
cltd
movsl
jnp
orl
mov
test
pop
mov
das
loope
mov
ret
mov
xchg
cmp
jmp
add
leave
and
mov
test
lods
andb
loopne
add
push
cmp
sbb
mov
out
jmp
or
pop
jl
xor
mulb
movsl
add
dec
loopne
and
lret
sub
xchg
sub
jecxz
aaa
dec
cld
stc
mov
inc
push
and
movl
mov
push
add
cld
mov
add
loope
cwtl
outsb
mov
inc
jo
aas
lcall
cmp
adc
add
jle
enter
call
mov
add
ret
mov
jne
sbb
add
mov
popf
cmp
loopne
sub
lcall
inc
iret
call
dec
xchg
rcrl
lret
push
flds
mov
mov
add
adc
xchg
xchg
icebp
add
arpl
out
push
aas
incb
or
into
mov
inc
outsb
and
gs
shll
add
sbb
xchg
xchg
pop
cmpsl
pop
imul
loopne
cmc
xor
movsb
clc
xor
cmpb
mov
inc
ljmp
sub
in
add
adc
pop
jecxz
add
xlat
outsb
add
lea
test
out
stos
cwtl
jnp
jmp
or
scas
rorb
pop
ret
add
add
jle
inc
sbb
push
dec
dec
cmpsl
dec
daa
or
jge
test
sub
cld
arpl
cmp
imul
xchg
sbb
mov
imul
inc
dec
aaa
mov
push
loopne
ret
xor
movsb
inc
push
fdivrs
jae
aam
pop
push
push
test
push
out
insb
pop
cmp
jo
sub
and
push
out
int
and
fmuls
ljmp
dec
adc
dec
ja
cmp
jmp
or
addl
daa
mov
xchg
clc
push
call
jle
add
in
sbb
dec
or
or
inc
add
jle
addb
pop
cmp
cltd
imul
jns
pusha
fadds
xchg
add
push
rorl
mov
adc
jo
in
roll
fdivs
testb
fstpl
arpl
and
or
int3
fstl
mov
cmc
pop
jge
imul
iret
hlt
in
in
and
insl
or
adc
sub
rclb
dec
pop
jo
cmp
cld
add
hlt
mov
pop
clc
pop
push
es
leave
inc
jno
dec
call
add
push
or
xor
push
add
mov
add
das
mov
adc
mov
and
cmpsb
or
iret
daa
add
call
push
pop
negl
add
and
add
pop
and
or
mov
sub
testb
nop
add
jg
sbb
jmp
inc
clc
popa
insb
cli
pcmpgtd
push
xchg
adc
xchg
loopne
lea
out
jle
or
mov
orb
shlb
daa
cmp
jle
es
popa
jb
or
add
xor
insb
cld
add
clc
cmp
pop
lret
add
push
mov
add
lahf
xorb
pop
dec
mov
cltd
mov
icebp
pop
insl
lds
add
mov
sbb
pop
sub
inc
fwait
mov
cmp
int3
add
orl
loope
fistl
std
je
inc
add
pusha
xchg
fcoms
jg
test
sarl
outsb
xchg
jl
ds
inc
xor
cmp
call
sub
cmp
fimuls
mov
add
in
add
push
test
jg
pushf
pop
add
pop
pop
aad
or
hlt
imul
out
loopne
xor
jno
orb
pop
xor
dec
lahf
repnz
stc
sbb
cmp
cmp
jl
or
and
pusha
imul
xor
mov
cwtl
or
mov
lcall
add
push
cmp
cs
imul
and
sub
nop
aaa
js
add
cld
lock
loopne
add
dec
mov
out
add
push
pop
ret
push
adc
adc
inc
mov
aas
data16
enter
dec
mov
mov
push
adc
jb
xchg
sbb
sub
fcoms
cmp
or
addl
push
inc
hlt
xor
mov
aad
stos
dec
sub
mov
pop
inc
and
mov
scas
add
fs
sub
loop
mov
sub
ret
int3
dec
loopne
sbb
dec
sbb
jecxz
dec
imul
or
sub
xor
lret
add
push
mov
add
call
add
mov
fldenv
xchg
or
lock
dec
add
push
xchg
xor
pop
mov
cltd
cld
cli
scas
cmp
loopne
fisubl
cmpsl
in
or
xchg
xchg
sbb
inc
lea
movsb
lret
scas
enter
add
push
cwtl
sbb
mov
insl
add
fldt
pop
jno
pop
pop
inc
lock
sahf
xchg
repnz
test
loopne
stc
test
in
mov
call
jmp
add
mov
lock
lcall
mov
add
cltd
or
incl
in
mov
lcall
add
mov
out
pop
mov
push
push
addb
jne
and
cld
cld
arpl
sbb
sbb
out
add
dec
dec
bnd
jno
aad
movb
add
add
or
sti
adc
aas
and
test
xchg
mov
add
shl
sub
je
sbb
and
push
push
lods
add
lea
dec
cmp
xchg
add
xchg
cltd
jb
add
enter
in
movsb
add
inc
lock
mov
adc
push
pop
add
mov
aad
add
push
test
mov
cld
xchg
jns
add
or
jmp
xchg
aas
pop
and
sarb
mov
pop
sbb
test
xor
push
mov
add
call
add
push
add
and
pop
sbb
push
das
test
ss
jne
rolb
sub
mov
adc
pop
aas
mov
mov
out
loopne
loop
adc
sbb
mov
mov
sbb
add
imul
add
enter
push
jmp
cmp
cmp
repnz
insb
outsl
and
inc
dec
sbb
and
push
push
push
cmp
cmp
clc
jno
imul
inc
pusha
mov
jp
or
xor
xchg
push
addb
cmp
add
push
inc
inc
or
dec
sti
cmpb
dec
test
add
xor
add
fistpl
pop
sbb
adc
add
add
clc
push
add
and
inc
lahf
loopne
jp
pop
jo
push
and
nop
sbb
test
jmp
adc
addb
mov
mov
sub
mov
sbbb
sti
or
xor
mov
in
dec
subb
sbb
movsl
jae
es
lahf
popl
sub
add
int3
ljmp
or
add
cmp
jne
pop
cmp
sti
dec
mov
mov
mov
dec
lods
add
cmp
xchg
inc
addb
cmpsb
jmp
shrb
negb
or
fadds
mov
adc
adc
or
push
xchg
ljmp
andb
mov
pop
adc
add
add
or
call
das
lock
dec
and
push
mov
dec
sbb
pop
and
mov
mov
cld
mov
add
and
dec
add
cmp
and
sbb
jae
adc
add
test
xchg
icebp
add
dec
pusha
mov
clc
sbb
jmp
mov
push
pop
mov
test
pop
les
inc
or
pop
add
jmp
jecxz
inc
pusha
push
addr16
add
imul
or
call
mov
add
pop
and
mov
in
pop
mov
dec
frndint
andb
mov
adc
popa
mov
orb
ss
mov
or
imul
sbb
dec
jg
inc
je
inc
loop
arpl
into
or
test
pop
out
xchg
jmp
pop
bndstx
pusha
rcll
add
in
sbb
ja
ljmp
shr
adc
inc
lock
jne
enter
pop
adc
sbb
or
mov
test
push
rclb
ljmp
push
or
iret
lock
call
add
fbld
push
das
or
mov
xor
adc
add
hlt
cwtl
popf
call
xor
xor
ret
fsts
clc
mov
xchg
add
in
jns
add
test
pop
movsb
rolb
das
insb
push
jne
addb
ljmp
cmp
push
jns
pop
orl
jnp
hlt
cmp
dec
mov
add
add
ljmp
mov
xchg
add
mov
into
push
enter
jno
or
add
jp
dec
inc
dec
or
shr
mov
lahf
aas
push
sti
mov
fcom
insl
pusha
daa
cmp
push
sbbb
orb
loop
or
and
dec
mov
xchg
movsl
dec
movsb
cld
je
test
cmc
addb
jmp
pop
add
adc
stos
add
dec
mov
pop
adc
adc
mov
pop
xlat
inc
cmp
xor
push
sbb
pop
dec
addb
sub
mov
adc
imul
cmp
or
sub
faddl
and
pop
daa
pushf
inc
aam
ja
inc
dec
das
add
mov
push
add
adc
add
fcoml
and
mov
jns
test
push
cld
pop
gs
std
and
int
ret
xchg
and
jmp
add
test
cs
xchg
js
mov
pop
push
jmp
movsb
add
outsl
or
jge
push
aas
je
addl
xor
fstl
pop
lods
add
lock
cmp
push
jmp
je
std
mov
adc
sbb
testl
jne
add
xor
jmp
pop
mov
or
add
add
ljmp
mov
sbb
inc
xor
or
or
jp
lock
mov
cmp
sbb
jne
push
dec
adc
sub
int3
xor
std
add
lcall
cmp
push
orb
dec
add
into
and
mov
cmp
lock
cmp
mov
dec
pop
repnz
nop
pop
rclb
add
clc
sub
lret
and
add
mov
or
clc
cmpsb
outsl
xchg
lods
divps
push
mov
loope
add
in
xchg
adc
jecxz
movsl
add
push
cmp
add
jae
in
jo
mov
pop
stc
inc
lods
sarb
add
add
fildll
je
jae
add
js
lahf
push
nop
clc
or
push
cwtl
jmp
mov
or
roll
push
sbb
js
lock
pop
pop
clc
add
jle
ffreep
jne
cld
cltd
pop
add
jmp
xor
imul
add
add
and
xchg
xor
add
call
mov
mov
mov
incb
sub
dec
sub
cwtl
and
push
mov
or
orb
imull
dec
faddl
jl
and
cmp
arpl
call
xchg
or
cld
cltd
xor
sub
add
mov
sarl
imul
in
fdivrs
cmpl
js
dec
add
adc
pop
mov
push
inc
fdiv
dec
movsb
add
daa
add
pusha
lret
bound
enter
nop
push
fsubl
add
dec
in
pop
jno
outsb
add
adc
inc
add
cli
and
in
or
inc
bound
jg
shl
leave
xchg
push
adc
lods
sub
xor
pop
inc
sbb
push
jae
mov
adc
sub
add
pop
pop
repz
cmpsl
imul
movsb
xor
cmpl
jle
or
xchg
mov
lock
hlt
test
pop
or
jno
xor
test
add
mov
out
les
pop
add
andb
add
jmp
lock
add
sub
jb
cwtl
inc
dec
and
cmp
cmp
es
fidivs
adc
hlt
and
scas
add
or
jmp
sbb
cmp
jns
hlt
or
mov
push
and
es
es
add
sub
dec
movsl
daa
push
out
popa
invlpg
dec
add
jmp
jo
jecxz
stc
mov
movsl
and
mov
push
add
sub
loop
and
test
xchg
jge
add
clc
push
mov
jbe
cmp
or
and
jae
dec
das
and
xchg
add
add
sub
add
movsb
lahf
adc
push
cmp
jnp
cmp
je
cltd
cwtl
pushf
xchg
test
fildll
add
xor
mov
mov
xchg
adc
push
lea
ds
and
add
inc
ror
fdivl
in
cmp
cli
xchg
jb
adc
jecxz
in
sbb
mov
je
leave
push
fsub
cmp
xchg
mov
cmp
mov
push
cli
push
jl
dec
add
mov
nop
pop
bound
pop
cltd
pusha
add
sub
mov
pop
gs
add
mov
adc
stos
add
and
cmc
lret
in
call
test
incl
or
out
cltd
pop
movsb
jnp
add
mov
adc
dec
jmp
inc
sub
or
mov
sti
add
or
xchg
js
imul
jl
movsl
mov
inc
or
pop
pop
push
test
mov
rcr
xor
add
and
xchg
or
ss
inc
mov
push
add
push
push
cmp
sbb
and
jg
xchg
add
adc
test
pop
daa
cmpsl
mov
mov
pop
jl
add
stos
or
or
loop
and
and
orb
sub
aas
andb
dec
add
or
sbb
jle
add
int3
lea
push
sbbb
in
inc
jl
mov
add
inc
rclb
adcl
stc
jle
fcoms
sbb
sbb
cwtl
adc
inc
xchg
xchg
pop
mov
fsubl
xchg
mov
add
loope
fnstsw
add
aam
cs
movsl
repnz
jle
hlt
add
pushf
adc
leave
icebp
clc
pop
insl
popf
fwait
or
and
dec
loope
jle
cmp
rolb
cltd
fdivrs
mov
or
add
loope
test
jne
adc
fsts
add
add
mov
jnp
das
jbe
fmul
fcom
mov
dec
ljmp
es
add
cmc
lock
add
loopne
add
mov
in
lods
outsl
fs
insb
nop
pop
jns
push
stos
add
inc
xor
add
mov
xor
push
mov
mov
out
add
icebp
rorb
inc
dec
call
mov
hlt
push
les
nop
lock
mov
stos
imulb
hlt
xor
adc
jmp
popa
mov
nop
pop
pop
aad
loopne
cmp
pop
sbbl
pop
add
mov
mov
jno
dec
add
mov
or
pop
movmskps
xchg
sahf
adc
or
push
inc
inc
dec
mov
jmp
xchg
loopne
sub
jmp
jle
je
les
xchg
cmp
mov
dec
clc
mov
leave
into
or
adc
mov
jp
testb
cltd
test
dec
in
and
add
push
adc
add
add
mov
sbb
and
add
mov
adc
popa
push
in
aam
add
cmp
xlat
push
push
push
ds
popl
cmp
cmp
add
push
add
push
and
les
lods
inc
cmp
dec
sbb
hlt
rol
mov
add
jne
cmp
sub
add
lcall
test
cmp
mov
mov
adc
fwait
add
push
fmull
or
cwtl
ret
cltd
push
cmpb
decb
xchg
add
jg
cmp
cmp
loopne
add
inc
hlt
sbb
call
mov
hlt
das
add
sub
jle
xchg
je
add
or
xchg
pop
and
and
jge
mov
xor
lcall
mov
hlt
rolb
ja
sub
dec
add
xor
jmp
ljmp
and
inc
and
aas
mov
push
sub
loop
jbe
nop
dec
sub
pop
pop
and
add
aaa
cli
adc
lock
lock
mov
dec
je
add
lock
aaa
jle
faddl
sbb
cwtl
xlat
add
jmp
mov
cwtl
fwait
push
add
scas
adc
add
mov
jmp
adc
test
add
add
fimull
fldl
and
pop
call
dec
cmpl
add
mov
aam
and
insl
and
cmp
out
adc
dec
mov
in
mov
adcb
mov
xor
sub
repz
add
and
mov
lahf
add
push
arpl
popf
adc
add
adc
jae
sub
mov
add
mov
out
into
add
ljmp
ret
jg
jge
add
das
out
inc
cld
mov
insl
stos
adc
bound
mov
nop
hlt
mov
cwtl
enter
inc
push
or
das
lods
adc
rcll
mov
push
sti
xchg
mov
mov
lahf
add
xchg
add
ds
nop
mov
lea
push
dec
icebp
lahf
out
and
pop
mov
pop
imul
aam
xchg
add
jbe
add
or
xlat
sbb
icebp
pusha
shrl
pop
cwtl
mov
loopne
inc
add
xchg
mov
adc
push
pop
jmp
push
xchg
jns
lock
jmp
adc
scas
data16
or
dec
dec
in
cmp
mov
nop
xlat
mov
xchg
add
lea
cmp
add
sub
nop
add
push
shl
jb
sahf
cmp
mov
or
add
imul
add
and
sahf
push
test
lahf
pushf
mulps
add
loopne
aas
xchg
sbb
xchg
int3
sahf
cmc
pop
popl
pop
les
add
out
aas
sbb
sbb
mov
imul
add
or
imul
repnz
add
cwtl
add
fucomi
cmp
push
sub
lock
push
jg
push
cld
xlat
fldl
in
clc
popf
jne
push
pop
adc
lock
mov
mov
add
jmp
mov
insl
add
sub
mov
push
or
adc
pop
xor
enter
sbb
leave
push
adcb
add
into
push
xadd
adc
and
pop
and
sar
pop
es
add
dec
add
sahf
movsb
jge
fmul
jb
add
jbe
fs
sti
lret
push
enter
cld
pop
jbe
add
xor
or
dec
shl
fbld
je
pop
in
ret
pop
add
jmp
push
add
or
inc
add
push
adc
sub
dec
mov
fdivl
into
inc
add
loopne
aad
dec
inc
cmpsl
shll
pusha
sub
add
insl
loope
push
mov
and
roll
shrl
repz
popf
pop
mov
inc
xor
insl
mov
inc
add
push
in
cmc
into
add
or
push
adc
add
ds
add
xor
aaa
enter
sbb
xchg
adc
jmp
mov
push
add
add
andl
aas
inc
pop
pop
orl
push
or
or
push
test
js
jns
mov
nop
inc
pop
xchg
sbb
sbb
or
mov
in
mov
pop
jb
cmpl
jg
add
es
jno
add
push
popf
adc
inc
add
sub
les
mov
and
dec
test
pop
mov
add
cmpsb
in
and
or
test
add
mov
push
lea
mov
xchg
cs
hlt
cmpsb
add
inc
mov
cmp
arpl
push
movsbl
sarb
les
cltd
stos
cmp
aas
int3
jge
mov
or
ds
popf
mov
lea
adc
lock
rolb
fsubr
pop
cmpsb
xchg
inc
pop
xchg
and
and
test
leave
xor
mov
and
sbb
inc
adc
cli
xchg
sub
out
inc
mov
cmpsl
xchg
xor
arpl
mov
push
mov
jg
mov
sarl
cltd
shl
add
dec
or
movsl
sbb
jae
and
mov
push
call
shlb
ss
sbb
test
lock
jge
pop
test
ret
cld
loop
lret
push
add
lret
movsb
and
lock
repnz
add
das
jl
outsl
dec
and
aam
movsl
test
add
cmp
pop
fildl
dec
inc
fcmovb
icebp
out
add
aam
imul
and
jg
or
add
loop
mov
pusha
push
jge
push
inc
test
and
clc
mov
cmp
add
movsl
lahf
sbb
sub
add
inc
add
stos
or
xchg
bound
jb
adc
lock
clc
add
lcall
mov
stos
and
test
add
jle
hlt
sbb
insb
ljmp
xchg
pushf
ret
call
pop
aad
and
mov
or
or
fmuls
mov
push
adc
add
mov
mov
mov
xor
xchg
data16
cmp
jp
das
pusha
pop
or
addb
and
shlb
testl
test
mov
or
and
jb
xor
mov
jnp
jns
dec
orl
incb
test
sub
mov
push
mov
pop
pop
and
pop
inc
adc
je
jge
inc
dec
lock
add
xor
push
add
pop
push
adc
out
shll
inc
jle
xlat
add
test
xchg
loope
sub
idivb
addb
add
and
sub
sbb
incl
xor
add
inc
xorb
add
daa
hlt
ret
push
idivl
add
mov
jmp
add
mov
and
mov
add
loope
or
rclb
mov
adc
outsb
icebp
add
cmp
fwait
cmp
xlat
mov
add
push
leave
dec
mov
aas
mov
int3
add
shll
jne
sbb
jo
sub
loopne
jp
scas
inc
inc
and
or
or
aam
imul
add
mov
sub
add
mov
es
pusha
adc
lret
cli
cmc
ja
add
mov
je
stc
jns
push
cmp
mov
dec
sti
sub
std
inc
in
xor
cmpsb
pop
jnp
add
je
jl
in
call
add
mov
or
cwtl
pusha
aad
arpl
mov
aas
test
in
in
add
mov
pop
add
lret
add
sbb
gs
sub
ja
add
pop
cmp
add
add
mov
sub
adc
cli
jbe
imulb
movsl
cmp
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
repnz
push
add
pusha
inc
test
les
add
loopne
adc
in
inc
jecxz
dec
mov
jne
cs
loopne
int
mov
leave
mov
add
std
call
icebp
inc
nop
out
or
pop
sgdtl
mov
pushw
pavgb
xchg
add
aad
roll
pop
push
mov
push
adc
xchg
out
decb
nop
sub
sbbb
sbb
push
xchg
shrl
cmpsb
inc
add
and
jae
mov
fdivs
inc
mov
rol
stos
repz
mov
add
pop
repnz
nopl
jp
mov
and
test
dec
add
cmc
mov
add
jns
dec
rolb
jae
loope
outsb
mov
add
mov
imul
in
add
inc
addl
mov
sbb
clc
ss
mov
xchg
and
add
jo
insl
jmp
popa
xor
push
aaa
mov
cli
repnz
adc
cs
push
xor
dec
in
outsb
sbb
mov
xorb
aaa
inc
cmc
and
cld
lods
and
pop
inc
or
movsb
rorb
int3
inc
clc
mov
shll
fimuls
mov
sub
mov
add
mov
or
mov
int3
iret
loopne
sub
icebp
sti
enter
dec
repz
cmp
push
lret
in
push
fcomp
mov
inc
lret
pop
sete
sbb
aas
enter
push
and
dec
rolb
bound
mov
in
lds
gs
cld
ss
adc
add
mov
bound
pop
sub
lea
lock
jp
add
idiv
enter
ss
mov
jb
fs
cmp
and
sub
inc
pop
mov
add
rorb
jo
add
repz
bound
push
and
or
rcr
movb
into
movsl
test
scas
push
sub
add
cmp
add
pop
mov
lret
jmp
rcrb
inc
inc
xor
out
roll
icebp
mov
add
and
cmp
add
xchg
adc
xchg
enter
jae
inc
add
in
jo
popa
arpl
or
js
mov
inc
in
ret
dec
stos
add
adc
rolb
mov
lret
hlt
lock
add
dec
sbb
aas
mov
add
xor
cwtl
adc
clc
and
mov
sbb
rolb
jo
faddl
pusha
pusha
push
cld
xchg
pop
and
dec
inc
push
xor
out
mov
cltd
add
and
adc
and
sub
jp
jl
ret
dec
adc
cmpb
mov
push
cwtl
or
shlb
in
mov
push
and
movsl
or
mov
loopne
xor
add
fdivr
add
jb
and
xchg
dec
xchg
rcl
sub
int3
mov
add
and
cli
push
cli
shl
aas
inc
mov
repz
repz
inc
mov
sti
jno
inc
adc
movsb
xchg
nop
xor
push
adc
dec
pushf
mov
cwtl
std
cld
mov
nop
decb
orl
test
fucom
sbb
and
and
inc
and
aas
into
jo
adc
sti
mov
add
sti
xor
cmp
lock
cltd
js
pop
int3
dec
xor
sbb
or
push
aas
cmp
pop
cmp
cwtl
sbbb
add
adc
lahf
mov
aas
aas
out
add
adc
inc
xchg
rol
es
sbb
nop
mov
push
adc
sub
inc
pop
adc
jge
mov
add
xchg
arpl
push
lret
cmp
add
cmpb
jb
cmp
mov
add
push
cmpsl
jl
std
cld
clc
lds
adc
jg
push
jae
xchg
sbb
lea
mov
jge
add
movzbl
pop
adc
inc
or
or
mov
movsb
add
popf
xor
mov
clc
cltd
pop
add
loopne
or
push
mov
mov
add
jnp
pusha
ret
test
out
add
cmp
xchg
aas
cwtl
dec
and
test
jg
add
cmp
jl
or
clc
sbb
add
xchg
test
cmp
jnp
add
fldenv
sahf
mov
pop
xchg
je
mov
clc
pop
sbb
and
or
push
pop
rcll
mov
push
xor
sub
or
mov
dec
fcoms
sbb
or
xor
pop
out
mov
clc
adc
xchg
cmp
loop
add
andl
push
jo
mov
stos
xchg
push
mov
add
and
or
inc
dec
or
adc
xchg
sub
fdivr
and
jae
ret
cli
adc
jb
je
cmpl
jmp
sub
xor
and
roll
mov
add
repz
add
mov
or
add
push
ljmp
jecxz
jae
dec
lock
jne
stc
sub
jl
mull
mov
xchg
movsb
and
or
and
cmp
rcrb
cli
jae
fisttpll
add
mov
add
push
leave
and
sub
dec
sub
call
jg
push
mov
inc
loop
imul
cmp
test
dec
cld
jb
clts
pop
ret
and
inc
add
fstpt
or
pop
frstor
sub
sub
cmc
sub
add
dec
cli
sbb
inc
jp
add
cs
insl
adc
jae
cli
fildl
adc
xor
jne
fldl
xor
gs
pop
add
flds
imul
popa
sub
push
shll
pop
scas
mov
or
mov
mov
xlat
sbb
loopne
call
inc
add
pop
es
jg
adc
mov
mov
and
aaa
dec
fimuls
pop
or
stc
int3
add
shll
and
push
jle
push
sbb
adc
out
movb
scas
and
xchg
sbb
add
int3
dec
xlat
je
fidivrl
pop
mov
ljmp
sti
lock
jne
jecxz
pop
lods
cmp
daa
je
inc
and
add
out
loop
jne
pop
sbb
dec
pushf
add
and
dec
ret
rolb
lods
cmp
dec
shlb
sbb
imul
out
ljmp
add
mov
data16
mov
js
add
push
hlt
mov
call
add
pop
sub
jl
xor
shll
cmp
xchg
icebp
inc
orl
xor
filds
in
sti
cmp
push
in
shll
add
movsb
jno
add
cmpsl
xchg
sub
mov
mov
roll
sti
jmp
pop
in
test
push
sbb
dec
test
dec
sub
adc
iret
cmp
mov
push
imul
ret
cmp
dec
addb
add
sarb
pop
gs
popa
sub
jmp
xchg
sbb
lock
lea
ret
add
and
jne,pn
add
inc
out
push
mov
adc
and
dec
push
ds
mov
out
cmpsb
and
add
xor
js
add
or
stos
enter
mov
sbb
stc
add
inc
add
mov
out
mov
loopne
int3
add
inc
xor
pop
mov
lret
ficoms
mov
sbb
std
xstore-rng
cmpsl
pop
decl
jne
imul
or
xor
push
in
jle
lods
inc
je
jg
or
or
ret
xor
loope
add
insb
pop
jmp
mov
cmp
pop
inc
addl
mov
push
repnz
in
push
mov
xor
int3
rcrl
mov
mov
add
stc
jp
sub
test
add
cmpsl
gs
or
lea
mov
and
add
data16
testl
sbb
or
addb
je
add
cmp
inc
jo
jmp
cs
add
adc
push
inc
mov
pop
mov
inc
loopne
mov
add
cld
pop
fldt
fsubs
fldl
inc
cli
add
or
mov
clc
add
jne
lea
mov
fwait
mov
in
ffree
sbb
verr
xor
mov
and
or
lea
cmpb
or
pop
cmp
adcl
and
aam
xor
inc
fmull
add
js
push
adc
cmp
or
jmp
subl
xchg
dec
and
and
mov
outsb
cmp
shr
add
ret
push
push
sbb
mov
cs
enter
lret
mov
jo
jns
mov
call
xor
add
iret
dec
testb
add
mov
orb
cmpsl
sbb
add
movsb
push
rolb
and
or
pusha
js
filds
inc
insl
xlat
push
mov
ret
fidivl
repnz
mov
testb
les
in
add
dec
in
jmp
add
cmpsl
and
inc
and
leave
inc
cmp
cmp
dec
adc
mov
sub
pop
je
cli
aas
add
push
idivl
comiss
leave
loopne
sti
scas
aad
pop
call
rcrl
in
pop
loopne
scas
stos
mov
out
call
sarl
pushl
lds
inc
ljmp
stos
push
xchg
cmp
subb
push
adc
pop
cmp
into
je
mov
fisttps
sbb
and
add
test
ds
out
pop
cmp
ljmp
add
loopne
ds
aas
jmp
neg
call
test
sahf
mov
test
pop
and
add
lods
mov
lret
rol
jg
add
add
jae
fimull
nop
cmp
push
test
push
ljmp
cmovns
sub
es
es
cli
hlt
rol
ljmp
call
add
xchg
mov
add
jne
sbb
lock
add
push
aas
add
sub
notb
mov
mov
push
addr16
mov
pop
adc
pop
cmp
test
pop
out
sbb
je
and
repnz
shrb
add
cld
out
adc
clc
loopne
pop
add
lock
inc
and
dec
pop
rcrb
aad
cwtl
add
add
sbb
hlt
add
mov
sti
add
pop
and
leave
lret
pushf
xor
sbb
add
jo
iret
add
pop
xchg
pop
inc
push
sahf
sub
mov
mov
lods
and
xor
adc
shlb
add
push
push
ret
jo
dec
or
push
xor
push
inc
or
xchg
cmc
xchg
sub
add
rolb
xchg
fdivrs
dec
hlt
add
fninit
push
not
mov
add
inc
pop
sbb
mov
or
loopne
add
jno
jbe
push
repz
cmp
mov
push
popa
mov
shl
lods
push
js
out
stc
das
pushf
popa
fisttpl
jl
add
lea
imul
rcrb
sar
mov
mov
ret
rclb
add
daa
andb
jmp
or
add
loopne
add
out
outsb
lahf
add
clc
cmp
ja
mov
aad
jae
adc
adc
ja
add
dec
call
mov
add
push
sbb
lds
cmp
pop
add
int3
add
popf
or
add
xchg
mov
jae
call
add
sub
ret
jp
mov
jmp
and
cmp
pop
sbbb
inc
aaa
add
lea
inc
hlt
addl
call
cmp
push
add
test
jbe
inc
add
xor
int
add
add
adc
adc
inc
iret
sub
add
add
add
xor
or
jo
add
jne
aas
movsl
inc
adcb
jbe
cmp
scas
addb
mov
or
sbb
and
insl
mov
adc
clc
test
jo
nop
inc
decb
js
jmp
hlt
rcll
scas
adcl
xor
scas
or
decb
mov
push
pusha
mov
mov
movsl
push
aas
jne
add
subl
sub
movsb
add
mov
test
inc
add
sti
or
jne
call
push
mov
loopne
js
dec
inc
add
icebp
enter
sbbl
xor
adc
cmp
inc
dec
jne
fsts
lret
cmp
icebp
hlt
mov
divb
add
add
mov
nop
mov
or
xor
addb
aam
mov
sarb
inc
xchg
cmp
clc
add
add
loope
lcall
add
flds
sbb
loop
or
sbb
mov
loopne
pop
mov
sbb
xchg
xor
pop
cs
movups
and
add
xor
scas
push
sub
xor
pop
ja
cli
add
sub
in
xor
arpl
pushl
aas
dec
add
das
xchg
nop
jb
mov
jns
xchg
adc
and
movsl
div
outsl
leave
loopne
xchg
out
add
dec
mov
nop
add
adc
add
jne
xlat
pushf
rorb
les
jnp
bound
jle
cmpsb
add
cmp
mov
push
mov
sbb
js
add
sti
fcomp
push
add
jae
lds
sar
add
out
int3
aas
add
daa
jp
test
dec
outsb
shlb
or
dec
xchg
aam
add
mov
and
xchg
jge
stc
cmp
adc
je
clc
cld
push
into
jl
dec
xor
and
mov
inc
inc
inc
inc
inc
inc
loopne
add
dec
dec
dec
dec
dec
add
dec
push
push
push
push
push
push
inc
push
mov
pop
pop
add
arpl
addr16
push
insb
insl
outsb
pop
outsl
pop
add
jae
jne
ja
js
jns
xor
xor
xor
loopne
add
cmp
sub
cmp
add
pop
pop
jnp
sub
cmp
sub
and
sbb
or
or
lcall
sbb
push
ficoml
xchg
push
push
or
adc
mov
out
cld
mov
cs
decl
movsl
in
lahf
lcall
push
push
mov
insl
clc
dec
inc
add
add
cld
and
shlb
je
mov
add
cmp
mov
cmc
cmpsl
rcl
test
std
add
or
fmuls
lods
jb
mov
mov
add
cwtl
push
and
jge
mov
sahf
ds
mov
xorb
push
je
push
sub
subl
aaa
cs
shrb
jl
das
dec
ja
imul
adc
mov
or
inc
or
jne
out
cs
add
dec
inc
aas
mov
add
or
aas
push
insb
and
daa
sarl
add
rorb
lahf
jg
push
mov
into
and
add
mov
add
add
frndint
js
mov
inc
stos
mov
push
lock
str
xor
out
or
dec
sub
sti
add
add
repz
icebp
pop
add
ljmp
nop
dec
push
adc
cmp
ljmp
repnz
popf
jl
inc
jne
loope
lret
lea
pop
jmp
loop
pop
leave
ja
add
popf
rcrb
aam
add
mov
add
jne
add
adc
pop
insb
or
ret
add
jmp
mov
add
call
mov
adc
std
inc
fxch
shll
xchg
jmp
fmull
lock
pop
sahf
cmc
xchg
sbb
lds
add
les
add
mov
mov
add
cmp
pop
sbb
in
jmp
jg
les
int
jp
push
push
adc
push
add
xchg
cld
add
lods
inc
mov
adc
xchg
daa
cpuid
enter
pop
dec
fidivs
shl
jge
in
push
add
int3
and
lods
ja
mov
add
mov
sbb
push
xor
or
cmp
xor
inc
mov
icebp
add
pop
pop
and
push
adc
pop
and
icebp
jg
cmp
or
sbb
xchg
push
add
adc
mov
jg
sbb
cs
imul
out
mov
push
out
cmp
dec
cmp
mov
cmp
add
in
push
sbb
rcrl
mov
jge
jb
mov
sbb
jno
inc
ja
add
enter
ret
mov
add
xchg
sub
aas
mov
ret
lock
std
loope
mov
pushf
test
and
add
iret
xor
mov
push
jmp
push
add
test
mov
inc
ja
pop
xchg
ja
dec
shl
adc
xor
sarb
mov
inc
inc
ljmp
pop
cbtw
add
xchg
mov
sub
add
das
mov
clc
loop
xlat
pop
xchg
mov
xchg
jne
das
jg
mov
leave
cmp
add
subb
in
add
loop
ja
xchg
lret
add
fwait
insb
cwtl
jle
mov
in
inc
jle
lds
or
mov
add
rorl
jnp
xchg
add
xchg
inc
jo
or
add
or
ss
mov
push
mov
lcall
and
movups
hlt
xchg
add
adc
popa
or
popf
pop
add
in
push
push
js
out
test
ret
pop
fs
lock
sub
mov
ja
push
inc
sub
xor
mov
dec
xchg
out
push
add
dec
ss
cmc
imul
jg
inc
loope
jecxz
jb
dec
xor
ss
out
add
inc
inc
xchg
mov
jo
xor
xchg
add
cmpsb
jno
aad
mov
pop
cmp
add
es
scas
das
ficoml
fsubs
or
mov
add
inc
call
xlat
add
and
ja
push
jns
add
jne
xor
leave
add
jecxz
push
sub
cmp
dec
pop
addb
pop
adc
lret
cmp
sbb
adc
jmp
ja
jecxz
push
out
in
dec
mov
sti
add
data16
fsubrs
xor
xchg
add
inc
fs
xchg
push
cli
pop
inc
popa
nop
addb
jl
stos
mov
cmp
adcb
cmpsl
sub
int
dec
add
push
add
push
lea
add
sbb
andb
call
push
rclb
clc
fwait
roll
cmp
and
dec
mov
mov
mov
sbb
repnz
fstpl
fwait
sub
add
push
out
lea
dec
mov
jle
ss
adc
in
add
fistl
cmp
sub
pop
xor
or
inc
in
sub
loopne
ja
push
aad
sub
fs
inc
pusha
iret
xor
push
mov
fcmovnbe
dec
and
jne
add
xor
pop
add
addr16
pop
add
sub
adc
ret
loopne
imul
sub
pop
add
pusha
jge
add
cld
xor
dec
or
add
movb
xor
mov
jmp
mov
or
rolw
or
xor
xor
pop
into
jne
xor
and
jl
add
pop
negl
pavgw
add
loope
popa
jne
add
push
pop
add
jmp
into
sub
lods
add
inc
divl
mov
orb
sbb
inc
lret
add
add
mov
sub
push
loop
jp
roll
dec
cli
faddl
add
and
and
call
mov
pusha
loope
add
in
daa
and
jecxz
jne
push
out
test
pop
arpl
push
add
pop
push
jnp
xchg
push
push
mov
notb
pusha
push
into
add
pop
inc
inc
cmp
adc
icebp
add
rcrl
xor
into
lahf
addr16
cltd
dec
add
rcr
cli
mov
mov
sbb
add
or
or
rolb
xor
mov
test
add
inc
adc
jecxz
or
sbbb
shll
scas
das
add
movsb
cli
lret
add
les
mov
out
xor
mov
cmp
add
mov
les
sub
push
jne
ret
mov
jl
and
mov
pop
jle
es
les
lcall
into
add
and
iret
aas
mov
xor
insl
nop
cmp
pushf
add
or
scas
xchg
mov
mov
mov
xor
scas
aad
dec
cmpsb
mov
adc
pushl
aas
into
add
adc
adcl
stc
js
lock
add
repnz
in
inc
xor
out
cmp
push
inc
pop
or
push
add
call
cmp
stos
adc
shlb
mov
sbb
fcoms
fadds
cmpsl
loop
mov
clc
test
or
cmp
mov
push
mov
movsl
add
repnz
popf
push
and
lock
sub
jge,pt
mov
test
sbb
xor
loope
add
xchg
int3
xchg
lea
pop
ret
mov
push
lret
dec
in
arpl
out
adc
addr16
out
or
pop
add
pop
xchg
lret
sahf
fldpi
add
lahf
out
cmp
enter
div
mov
enter
cmp
and
imul
ret
dec
orb
sub
int3
test
popl
mov
push
orb
dec
push
adc
es
xor
mov
jns
rorb
test
xor
mov
jge
imul
or
dec
xchg
cmp
add
ja
add
bnd
or
add
sahf
inc
add
arpl
jmp
lret
jo
or
popa
stc
dec
add
sub
insb
js
sbb
lea
nop
or
enter
movsb
xor
repnz
mov
cmp
shlb
aaa
mov
or
enter
mov
movsb
incb
and
fiaddl
lds
sub
loopne
inc
cmp
xor
ds
mov
add
cmp
call
mov
pop
and
rcl
inc
cmpl
add
pop
add
add
and
pop
das
jle
cmp
xchg
sub
and
inc
mov
mov
dec
loopne
movl
lods
pop
fwait
and
mov
in
push
loopne
or
mov
std
and
pusha
testb
mov
xchg
loopne
push
sbb
sahf
cltd
faddl
cli
mov
adc
push
mov
fildl
aas
movsb
sbb
inc
xor
fmull
pushf
daa
cmpsl
hlt
subb
xchg
xchg
jge
push
out
inc
push
hlt
xor
jg
testb
fstpl
adc
add
scas
push
or
cld
xlat
add
aas
xchg
fisubs
sbb
add
pop
mov
test
leave
clc
cmpsl
jle
ds
adcb
push
add
ds
inc
add
les
pop
lods
leave
mov
pop
inc
push
mov
icebp
or
pusha
or
mov
fisttpll
mov
mov
add
pushf
sarb
pop
push
adc
fmuls
dec
imul
inc
insl
jae
test
jo
adc
mov
ds
test
jmp
add
std
clc
rcrb
cltd
lds
add
adc
or
mov
repz
out
test
adc
pusha
xor
ret
mov
stc
outsb
mov
shlb
jb
add
adc
xchg
push
adc
enter
ret
pop
les
jb
mov
pop
jg
sbbl
in
mov
mov
dec
or
cmp
xor
cld
inc
flds
add
lods
dec
mov
dec
mov
hlt
inc
or
lock
loopne
and
in
fiaddl
js
arpl
pop
cmpb
sub
out
add
push
inc
cmpsb
push
sub
and
test
inc
dec
fcom
add
mov
cli
out
repnz
pop
mov
clc
pushf
mov
push
unpckhps
shll
pop
sub
xor
add
jbe
rorb
mov
inc
mov
xlat
sub
sbb
sbb
mov
xchg
xor
hlt
bound
sub
mov
adc
xor
lods
add
shlb
cwtl
mov
add
in
xor
test
adc
test
icebp
dec
cwtl
das
or
rcll
into
fwait
add
mov
rorb
add
out
sbb
push
lds
mov
mov
lods
loop
ljmp
es
pusha
cwtl
mov
clc
add
jmp
xchg
movsl
mov
sbb
shl
cmp
mov
pop
jae
add
inc
mov
add
fwait
shll
fnstenv
stc
sub
add
push
dec
and
pop
xor
fcmove
rcl
aas
or
ja
mov
dec
jne
jp
sti
in
pcmpeqw
lods
add
xchg
adc
adc
cli
lods
add
lods
dec
or
clc
paddusb
aaa
mov
mov
insb
fisttpl
int
sub
sar
mov
mov
push
hlt
mov
add
mull
push
inc
cmp
mov
popa
sub
loope
fcomps
dec
mov
mov
mov
aas
cmpsl
inc
adc
enter
push
xchg
out
push
aad
sahf
add
out
loop
dec
enter
push
inc
and
dec
fwait
add
cmp
add
std
mov
popf
add
in
movsb
test
lods
inc
ds
pop
fs
mov
test
xor
dec
and
and
test
xor
testb
nop
or
call
dec
xlat
xchg
aad
rcl
in
addr16
sub
dec
jb
loopne
or
dec
nop
shrb
test
enter
pushf
dec
and
or
fldl
enter
mov
mov
add
ret
jae
dec
sub
add
popa
hlt
adc
push
mulb
xchg
fs
dec
add
cmovnp
not
cmp
in
inc
fstpl
js
add
jle
adc
mov
loope
dec
add
into
fldl
jb
add
mov
pop
jge
or
adc
pop
add
adc
clc
dec
fwait
add
int
mov
adc
repz
xchg
cmp
pushf
movl
cmp
add
das
push
add
out
xchg
ss
pop
add
and
in
mov
jnp
xchg
mov
inc
jo
sub
aam
mov
cli
lea
and
add
push
clc
cld
sbb
adc
pop
enter
mov
sub
leave
xchg
clc
das
add
adc
movsl
call
bound
add
jle
in
dec
add
or
jg
adc
mov
jne
add
sbb
fadds
das
add
pop
xchg
dec
subb
dec
jne
aad
filds
jnp
and
xor
mov
mov
aam
inc
add
jno
leave
sbb
inc
imul
in
lock
mov
add
loopne
sbb
push
mov
add
nop
or
repnz
jl
xchg
push
in
fcomip
push
lock
loope
jecxz
es
movups
push
divb
pop
dec
xchg
xor
lock
adc
sub
cmc
jmp
mov
imul
add
or
in
jo
inc
cwtl
rorl
pop
push
jmp
lcall
repz
cld
push
and
fmul
cs
in
xchg
out
add
loop
aam
and
or
in
gs
imul
xchg
jb
xor
mov
pop
std
mov
scas
sbb
out
push
and
push
lea
jne
mov
inc
pop
jp
nop
jb
push
gs
loop
aaa
xor
sub
clc
push
pop
les
cmp
cltd
arpl
scas
cwtl
aam
lret
add
lret
add
cmpsl
aam
jg
add
stos
int
push
lock
or
mov
or
dec
dec
pop
je
push
mov
int3
fistpll
pop
data16
sahf
and
jne
inc
orb
xchg
ljmpw
pop
jo
jnp
pop
mov
sbb
mov
rcll
pop
push
fs
es
mov
dec
xchg
imul
add
shlb
jne
or
lcall
sbb
lods
sarb
stos
and
and
lret
xor
xchg
xchg
inc
loope
clc
out
dec
sbb
mov
pop
push
orl
insb
rcl
daa
add
mov
add
push
mov
cmp
sub
lret
mov
call
insl
call
and
xchg
and
in
adc
jl
pushf
stos
jns
sbb
test
xchg
mov
popa
jns
add
adc
repz
add
mov
add
mov
cs
add
pushf
movsb
mov
dec
add
mov
cmpsl
rolb
jbe
inc
pop
movb
add
cmp
shll
imul
lock
add
and
cmp
mov
adcb
push
add
hlt
lea
pop
push
mov
mov
mov
mov
and
jecxz
mov
lcall
dec
into
mov
pop
pop
fmuls
jp
test
add
or
sbb
fcmovnbe
jecxz
in
mov
adc
adc
add
mov
jmp
dec
jno
mov
push
sbb
mov
or
push
xchg
fistl
inc
jne
fiaddl
sbb
push
or
nop
mov
or
data16
adc
loope
adc
pop
rcll
mov
pop
sti
add
sub
adcb
add
pop
lods
push
add
hlt
pop
mov
sbb
add
les
pop
dec
add
mov
add
sub
push
nop
add
mov
insb
gs
pop
data16
out
xchg
or
adc
add
pop
jg
jmp
clc
data16
or
mov
push
mov
push
adc
pop
rol
or
out
add
in
push
sub
mov
inc
adc
xor
mov
xchg
cli
xchg
pusha
emms
sub
xchg
test
pop
push
push
push
add
inc
push
or
add
je
pop
addps
pusha
jmp
or
out
sub
nop
adc
mov
test
mov
sub
add
inc
add
mov
ja
mov
fildl
add
dec
mov
add
push
xor
hlt
sub
mov
test
icebp
cs
dec
fldcw
scas
in
adc
hlt
xchg
add
sub
xor
and
adc
push
sub
dec
adc
add
dec
add
push
add
ret
mov
cs
xchg
add
adc
mov
pop
and
nop
ret
int3
adc
or
subb
daa
inc
xor
inc
push
or
dec
xor
mov
repz
pop
xchg
out
and
repnz
into
jb
lcall
add
mov
sub
inc
rcpps
inc
cmp
and
or
frstor
sbb
decl
or
clc
stos
pop
add
mov
rorb
add
cmp
add
jmp
adc
movb
lock
cmpb
mov
add
or
xor
cmpsl
faddl
jl
addr16
imul
adc
sbb
sbb
test
jl
fldenv
inc
and
push
movsb
xchg
inc
push
inc
scas
into
ljmp
push
in
and
movsl
sarb
or
sbb
xor
push
ja
fsubs
jne
add
sbb
movl
jge
and
add
sub
leave
add
nop
es
and
mov
add
mov
adc
movb
fdivrs
enter
add
or
dec
dec
xor
jbe
xor
sbb
imul
pop
or
movsb
fmul
and
out
push
cwtl
sarb
inc
sbb
pop
lock
lods
push
adc
push
sub
jge
push
add
shll
aad
lods
xorl
mov
add
call
cmp
inc
push
add
mov
pop
sahf
mov
adcb
add
mov
cmp
add
jne
mov
pop
sbb
sub
movsl
push
cmp
lods
inc
in
mov
in
xchg
push
lock
add
pop
cld
push
pop
lock
add
push
jns
pop
sub
daa
cmp
mov
push
lock
push
rolb
and
test
add
pusha
repz
add
cmp
test
cmp
or
cmp
push
add
jae
outsl
insl
dec
add
imul
shrb
call
scas
dec
add
cmp
clc
mov
add
or
cmp
xchg
inc
out
xchg
jmp
fbstp
mov
sub
add
incl
sbb
push
push
xor
dec
rcrb
fstl
mov
add
mov
dec
mov
imul
ja
xor
or
jb
std
add
mov
rol
pop
jg
cmp
mov
das
pop
fsubrl
add
nop
or
sbbl
pop
rclb
mov
add
pop
jns
out
mov
pop
ja
adc
pushl
jmp
push
pop
jle
sbb
add
mov
or
add
or
es
aaa
add
lahf
out
pop
xor
out
jno
ret
ficoms
andb
sub
dec
mov
jmp
outsl
cmp
lods
fistpl
rclb
test
add
jmp
add
xchg
int3
shrb
lock
jbe
mov
cmp
pusha
stc
pop
inc
dec
aas
adc
ja
shlb
sti
mov
sbb
xchg
stos
ret
xor
inc
in
mov
or
jp
add
decb
xor
sahf
les
add
xchg
fwait
ja
add
and
adc
push
sbbb
jmp
dec
mov
test
aas
lods
jg
dec
xchg
mov
mov
xor
and
xchg
ret
mov
xchg
adc
call
pop
repnz
ja
arpl
aas
aas
pushf
cmp
cld
adc
test
test
jnp
pop
sub
shrb
sbbb
ss
sub
pop
jge
fsubl
mov
push
cld
push
adcb
inc
sbb
sbb
call
add
outsl
insb
lods
add
inc
jp
lret
pop
inc
ja
repnz
jg
addr16
cmpl
sbb
dec
xor
push
push
dec
pop
repnz
fcoml
clc
add
xor
add
mov
sub
pop
xchg
mov
jbe
jle
dec
cmp
daa
dec
and
mov
hlt
in
jno
add
fldenv
out
add
popf
push
ss
add
xchg
cmp
stc
pop
add
push
pop
hlt
stos
jecxz
xchg
pop
push
mov
test
loope
testb
and
adc
cltd
lds
or
in
cmp
popf
pop
movsl
push
xchg
cmp
test
xchg
sub
mov
clc
push
pop
and
stc
jle
cli
adcb
sbb
cli
add
add
pusha
negl
mov
jo
adc
inc
int3
add
sbb
mov
and
nop
roll
add
enter
js
cmpsl
lock
add
or
and
clc
in
int3
jns
sub
adc
or
inc
cwtl
add
mov
je
in
mov
cmp
jo
sub
xchg
add
stc
jecxz
and
add
mov
sbb
add
mov
mov
pop
pop
push
dec
push
xor
push
movsl
mov
jnp
and
pop
adc
push
xchg
sbb
outsb
add
into
pusha
in
xchg
add
ret
bswap
clc
nop
jp
add
push
add
add
movsl
mov
ret
xor
jne
pop
lock
cmp
dec
lds
ret
movsb
pop
cmc
push
clc
mov
add
mov
filds
movsl
xor
out
push
mov
push
aas
ret
leave
pop
jge
es
roll
lcall
add
test
mov
xor
pop
cmp
add
fnstcw
jbe
pop
jns
sbb
push
or
jo
inc
inc
push
clc
and
sti
cli
jmp
not
sub
out
add
add
mov
in
int3
jmp
xor
in
pop
rolb
out
or
add
jp
int
cmc
clc
pushf
cmp
pop
push
call
sbb
and
pop
or
jns
jmp
and
neg
xchg
loopne
xor
out
adc
icebp
lods
jmp
add
insb
fists
add
or
push
lret
or
cmp
sbb
add
in
rcrb
inc
cmp
push
aas
cmp
mov
test
enter
popa
cli
xor
sbb
test
mov
or
xor
add
push
inc
in
mov
in
cmp
or
test
add
cmp
or
std
cwtl
inc
fisubl
add
add
pop
or
push
jg
add
out
iret
xchg
dec
in
mov
int
push
adc
aam
enter
add
inc
jmp
ret
jbe
cs
jl
sub
sub
pop
add
mov
je
mov
xor
mov
ficomps
xor
adc
push
adc
sbb
add
mov
shlb
and
pop
fildl
xor
addb
adc
rcrb
sbb
mov
sarl
or
mov
bound
test
flds
and
or
adc
loop
jmp
sbb
mov
stc
sarb
sub
add
cmp
fldenv
xor
inc
call
sub
cmpsb
add
sarl
faddl
add
jno
dec
jle
jne
add
xor
mov
jecxz
clc
lock
cli
jmp
adcb
mov
dec
adc
loop
cmp
fnstsw
insb
xor
adc
cwtl
mov
or
add
loop
in
subl
fiadds
call
in
pop
dec
add
xchg
test
cmp
and
lds
and
push
jmp
clc
xor
push
in
add
push
jmp
loope
loop
or
mov
loop
dec
push
dec
add
pop
inc
dec
adc
test
ud1
dec
insl
mov
daa
aam
adc
and
or
clc
dec
add
xor
push
dec
add
add
incb
fdivrl
and
jo
cwtl
les
loope
inc
ret
pop
testl
decb
fs
int
loopne
push
loopne
add
push
or
jae
lock
les
inc
loopne
aas
movb
add
addb
call
outsl
sub
lea
and
divb
jp
mov
pushl
pushw
orb
shl
scas
jns
inc
or
insb
mov
xor
les
push
inc
jb
aad
sbb
cltd
or
add
ja
outsb
inc
xchg
in
aas
add
cli
scas
inc
xor
add
cmp
jge
or
and
fsubl
sub
test
rorl
cmp
sub
out
add
add
mov
add
xchg
clc
shlb
ljmp
jge
sbb
lds
add
icebp
shr
adc
add
mov
movsb
push
cwtl
call
imul
pop
movl
out
cltd
loope
push
jp
push
or
mov
inc
or
mul
stc
out
jmp
sbb
and
imul
adc
paddb
push
stc
cli
stos
pusha
into
cs
fisubl
dec
shll
push
or
lsl
pop
lahf
scas
add
scas
cmpb
pop
and
test
xor
jb
loopne
add
xchg
icebp
stos
mov
xor
or
inc
xor
mov
add
xchg
sbb
adc
test
jo
fcomps
cwtl
subb
sbb
mov
inc
ljmp
adc
push
mov
lcall
es
pop
mov
inc
adc
hlt
xor
mov
cmp
loop
push
icebp
sub
inc
incl
and
xchg
jno
std
ret
loop
dec
lock
cmp
mov
cmpsb
and
add
fmull
mov
dec
fldl2t
mov
cmp
add
bound
call
mov
mov
loope
xchg
shrb
loop
xlat
sub
movsl
mov
cmc
add
push
pop
pop
es
pusha
les
add
rorb
jmp
mov
sbb
jle
add
xor
add
sti
adc
push
or
mov
add
das
inc
call
dec
subb
inc
add
fs
mov
psubw
scas
hlt
mov
adc
xchg
xor
shll
cwtl
enter
add
mov
xor
daa
cmp
xchg
add
loope
fildll
mov
pop
aaa
ret
add
lock
xrelease
push
xchg
ficoms
testl
in
adc
inc
aad
xor
xor
add
add
pusha
sbb
cmp
add
mov
jle
aas
mov
cmp
sbb
and
inc
add
xor
mov
cli
rolb
and
cmp
add
sub
repz
mov
push
ror
divb
push
xchg
adc
in
mov
addb
add
mov
popa
setge
xor
adc
add
cmp
or
in
push
sbb
inc
and
and
add
popa
test
add
adc
enter
call
lcall
cmp
mov
hlt
mov
cmpsl
pop
fwait
inc
incb
xlat
out
add
sbbl
push
cmp
bound
add
aam
cmp
cmp
shl
and
out
and
cmp
aam
flds
adc
mov
add
and
iret
add
mov
inc
nop
rolb
clc
jl
pop
add
sarb
or
gs
lods
les
add
stc
push
out
and
popa
add
inc
xchg
int3
out
add
mov
test
xchg
ljmp
add
inc
mov
in
xchg
adc
sbb
cmp
add
jo
or
pop
adcl
ret
inc
adc
ret
mov
cs
push
add
call
les
adc
add
pop
cmp
adcb
mov
test
nop
or
xchg
int3
rorb
or
sub
jge
out
ud0
xlat
cmp
inc
rcrl
add
xor
loopne
test
outsl
and
push
adc
shl
incb
and
sbb
fiadds
add
pop
adc
mov
inc
rolb
std
popl
imul
mov
mov
rcl
sub
sbb
adc
nop
ret
xchg
add
mov
clc
mov
popa
ljmp
arpl
mov
xchg
not
daa
mov
add
cs
sbb
pop
push
add
push
pop
std
jl
dec
pop
cmpsb
aas
cld
sahf
call
and
imul
mov
add
sub
pop
jg
add
ds
xchg
dec
xlat
add
daa
je
add
loop
push
stos
out
inc
add
mov
call
dec
xchg
addb
cmp
test
or
ljmp
inc
dec
incl
adc
xor
adcl
cmp
push
add
pop
mov
sub
jmp
js
fisttps
out
mov
pop
rcr
inc
cmp
mov
adc
mov
rorb
and
add
pop
fcomp
jmp
imul
push
xlat
out
icebp
or
add
mov
push
mov
cwtl
insb
sub
out
push
adc
mov
out
push
add
ss
cli
add
jge
sbb
sbbl
icebp
or
test
aas
and
add
add
scas
push
repz
repnz
jbe
xor
add
dec
int3
insb
outsl
insl
xchg
add
enter
or
ljmp
mov
and
test
jmp
cmc
jno
aaa
xor
pop
or
xchg
sti
xchg
and
cmp
lret
fldt
or
jle
add
repnz
aam
dec
aaa
sub
xchg
mov
inc
or
or
add
notl
jp
add
addr16
dec
fmuls
mov
inc
cmp
add
int3
aaa
dec
or
sbb
cltd
in
xor
pusha
into
or
cld
fiaddl
pushf
and
or
push
adc
adc
xchg
out
add
lds
addr16
jmp
jg
add
shrb
enter
clc
sub
xchg
add
sbb
sub
or
jle
and
les
js
pop
adcl
sbb
jo
dec
jmp
sti
call
sbb
or
adc
mov
mov
xorb
decb
jmp
out
nop
push
adc
or
add
jno
cs
pop
add
or
cmp
call
jmp
les
sub
add
inc
jne
xor
push
bound
call
push
jae
add
and
or
cmp
cmp
sub
cld
lret
call
xor
or
sbb
aas
rclb
ret
jae
add
loop
sbb
push
inc
xor
push
sbbl
inc
add
repnz
and
out
inc
or
dec
movd
test
xor
nop
sbb
adc
add
sbb
bnd
fmuls
cli
js
mov
cmp
pop
mov
mov
aaa
das
jno
cld
verr
pop
out
and
out
add
cmc
xor
inc
movsb
adc
in
sbb
jns
call
pop
push
push
mov
jp
dec
xchg
jnp
data16
and
inc
mov
aaa
movsb
adc
test
and
dec
xor
adc
scas
ja
pop
les
dec
mov
lods
add
jno
push
loopne
adc
jns
jg
or
les
loop
cmp
push
add
js
subb
add
pop
mov
lea
cmp
and
bound
mov
les
jns
cmp
mov
addr16
shl
cmp
hlt
mov
orb
test
xor
lds
iret
add
aas
xor
outsb
roll
add
punpcklbw
pop
adc
mov
add
test
add
push
nop
add
cmpsb
orb
mov
call
xchg
aam
jno
fcomp
adc
jmp
repnz
cmp
xor
jl
inc
or
adc
cmp
inc
push
cmpsl
daa
popa
xlat
jle
sub
ss
leave
or
inc
inc
lcall
fcoms
ud1
test
mov
and
add
and
test
ds
sbbb
sub
cmpsb
repz
aas
movsb
ret
push
pop
cltd
loopne
and
xlat
adc
test
subb
hlt
out
rcpps
mov
push
pop
mov
in
xchg
add
icebp
sub
js
and
lret
enter
cli
mov
jbe
or
fiadds
xchg
push
pop
xchg
or
xor
out
add
dec
clc
aad
add
dec
add
imul
jmp
sub
add
leave
sbb
push
xor
das
add
pop
mov
jb
call
pop
lea
shl
test
unpckhps
rcr
scas
arpl
pop
int3
or
jnp
add
xor
pop
jmp
sti
add
nop
jns
dec
aad
jnp
cli
jle
addl
idiv
add
lea
aam
xor
add
sub
fucom
sbb
sub
add
nop
sub
add
sub
sbbb
in
xor
jmp
adc
fcomps
mov
adc
dec
pop
push
add
aad
mov
in
sub
scas
aaa
mov
sbb
lds
jne
mov
add
jns
pop
cmp
les
add
mov
push
jl
test
aam
cmp
cs
pop
push
and
sbb
pop
or
xchg
adc
in
cmp
sbbb
inc
cmp
and
pop
and
cmp
sahf
jl
add
and
shll
inc
jg
out
iret
add
pop
xchg
lret
xchg
shrb
cmovnp
pushf
js
xchg
popl
fisttpl
xor
push
push
pop
cmp
loopne
sbb
repz
mov
sldt
push
push
adc
xor
jnp
cmp
pop
xchg
adc
sbb
sub
add
fdivr
jecxz
test
cld
mov
xor
push
pop
add
sub
lods
incl
jb
test
adc
daa
in
roll
mov
jp
mov
and
movsl
jns
arpl
into
push
lcall
pushf
cmp
leave
les
imul
dec
into
jmp
adc
pop
mov
ljmp
aas
ds
pop
xchg
or
inc
rorb
add
or
movsl
flds
dec
movsl
mov
std
adc
jmp
add
inc
pushl
adc
adc
les
inc
in
jns
filds
mov
outsl
out
sbb
mov
jl
xchg
xchg
adc
add
adcl
jns
add
jae
loope
loopne
push
adc
shrl
fimull
push
and
cwtl
aad
lret
sbb
or
adc
pop
or
push
hlt
mov
les
add
cmp
mov
jecxz
and
adc
pop
in
push
and
jo
imul
xchg
or
add
les
mov
arpl
pop
mov
adc
mov
fisubrs
pop
aas
and
push
inc
xor
inc
test
enter
and
mov
adc
or
clc
cld
pop
aas
mov
add
or
orl
cltd
les
and
jle
adc
mov
cmpsb
or
adc
push
jp
and
inc
icebp
pop
rorb
pop
pop
lcall
adc
out
mov
repnz
xchg
jmp
pusha
out
sahf
xor
das
lock
xchg
pop
lahf
shl
idivb
mov
pop
jle
pushf
pusha
pop
push
add
add
sub
in
pop
push
xor
addr16
cmc
add
add
fnstenv
popa
inc
hlt
xor
fcomip
mov
mov
das
add
mov
in
push
and
jl
add
push
scas
adc
fcmovnb
and
or
add
push
add
adc
es
mov
dec
ret
xor
ficoms
clc
mov
or
dec
es
popa
cmp
add
add
add
push
ds
xlat
and
sbb
xor
lret
orb
and
push
or
cmp
dec
std
add
sbb
mov
push
pop
push
aam
andl
sbb
adc
add
push
mov
xor
leave
pop
cmpl
add
orb
xchg
fidivl
add
mov
push
dec
stc
mov
aas
add
das
bswap
dec
adc
stos
pop
cmp
je
sbb
inc
cmp
xor
add
rcll
add
pushf
sbb
out
jno
mov
adc
push
sub
mov
add
or
adc
sub
inc
sbb
mov
jbe
cmp
add
add
push
nop
add
sti
xor
dec
xchg
add
test
add
add
repnz
loop
add
pop
mov
and
jl
xor
stc
xor
leave
clc
jo
adc
icebp
fisubrs
loopne
shl
repz
mov
ja
movsb
pusha
adc
lods
push
cmp
out
add
add
sbb
je
mov
sbb
mov
repz
add
call
xchg
mov
adc
and
test
mov
shl
movsl
into
imul
sbb
inc
faddl
out
in
push
sub
jge
xor
cmp
add
inc
xor
enter
push
add
clc
mov
std
or
cli
lods
push
add
jb
pop
xchg
xor
stos
mov
ljmp
sub
hlt
icebp
push
stc
daa
mov
lock
add
xchg
xchg
outsb
enter
mov
and
and
adc
fs
dec
divb
ds
cli
iret
clc
sti
jge
cld
cmpsb
sbb
jmp
pushf
push
mov
pop
dec
call
das
push
and
add
add
add
loopne
movsl
jno
movsb
cmp
inc
lods
sarb
imul
inc
adc
push
enter
icebp
add
loop
stos
inc
push
movb
andb
sbb
jb
add
xchg
and
mov
pop
jno
test
stos
adc
pop
sarb
shl
les
sub
jl
add
pop
int3
push
mov
adc
and
rclb
out
nop
andl
nop
enter
lahf
dec
popa
add
out
adc
add
adc
inc
in
or
add
out
daa
add
cmc
shrb
in
cmc
push
mov
inc
add
dec
inc
cmp
cmp
add
push
repnz
mov
jl
add
mov
mov
call
add
test
stc
adc
lock
xor
and
cmp
test
mulb
sub
xor
les
mov
andb
push
inc
inc
mov
cs
jae
fs
sbb
add
inc
fisubrs
and
cwtl
xlat
clc
enter
mov
aam
mov
mov
mov
cmp
roll
ljmp
dec
and
push
rclb
repz
loop
mov
daa
data16
push
and
dec
nop
jecxz
push
idiv
jg
push
es
add
inc
dec
jne
testb
cld
ja
mov
add
or
add
je
jcxz
and
mov
sbb
ret
add
aad
xchg
das
xor
pop
pop
jecxz
mov
jmp
pop
xor
insb
xchg
addb
xlat
jo
addb
jns
push
jg
js
dec
pop
mov
lds
int3
andb
orb
ror
or
jmp
or
pop
leave
rorb
orb
enter
sbb
sbb
fchs
sbb
rcr
fidivrl
inc
sbb
push
je
jo
sub
pop
sbbb
faddl
adc
aam
sbb
inc
adc
pop
adcb
inc
lock
mov
lret
rcl
int
rcl
shl
sbbb
xor
loopne
add
repz
jb
je
jo
add
add
shlb
loopne
add
cld
cmp
inc
add
cmpb
loope
leave
cmp
cmp
sti
clc
cmp
add
stc
cmp
loopne
or
sbb
inc
jmp
shrb
sub
loope
in
call
sub
sub
mov
into
or
repz
shll
mul
jecxz
outsb
and
shlb
and
cmc
mov
cmc
mov
mov
or
sub
cmpsb
xchg
shl
out
cmp
pop
insb
shrl
add
outsb
inc
scas
call
imul
stos
add
test
push
cmp
sarb
jg
jg
jg
jbe
sbb
jo
add
mov
jl
mov
je
sbb
ja
mov
sbb
jb
mov
mov
jae
inc
mov
out
jo
inc
mov
push
rcll
xchg
rolb
cmp
cmp
sbb
add
xchg
adcl
pop
sbbl
enter
push
sbbl
loopne
sarb
aas
inc
cwtl
mov
dec
aas
mov
dec
into
mov
push
dec
xchg
arpl
dec
inc
mov
inc
roll
shlb
inc
inc
xchg
sbb
loopne
sbb
cmpl
cmp
call
jecxz
in
pushf
mov
pop
rcrl
popf
movsb
push
shlb
mov
inc
and
and
push
add
nop
mov
mov
cmp
pop
popf
mov
pop
pop
pop
jle
inc
or
sbb
or
mov
call
mov
mov
add
jle
fs
pushf
add
adc
push
xchg
or
mov
mov
add
sbb
xor
add
sub
arpl
add
shrd
data16
sbb
pop
loopne
push
push
cld
add
cmp
or
add
ret
shr
add
pusha
mov
sar
jne
dec
or
add
call
pop
clc
sub
clc
cld
lds
pop
adc
add
jmp
jl
hlt
jg
jae
pop
inc
cld
imul
pop
inc
shlb
lods
cmp
cmp
pusha
add
jo
add
xorb
notl
add
mov
xchg
pop
and
xor
movl
jbe
lahf
lock
rcl
push
add
jne
imul
cwtl
mov
xchg
add
push
jp
stos
inc
pop
mov
jg
cs
add
lret
mov
pop
add
mov
stos
add
lret
sbb
add
inc
xorl
or
out
add
and
clc
aad
jno
add
push
pop
jle
and
insb
inc
mov
sub
fiadds
repz
and
pop
daa
and
add
pop
aad
add
add
ret
xlat
add
in
stc
cmp
sub
add
cmp
rcr
sbb
or
mov
push
adc
repnz
jno
add
xchg
arpl
into
rorl
pop
or
dec
ret
adcb
mov
sbb
fdivrp
loopne
ljmp
stos
mov
dec
outsl
mov
and
notl
mov
sbb
adcb
movsl
icebp
ret
nop
adc
and
sub
call
popl
test
addl
rolb
mov
sarb
cwtl
sub
xchg
jbe
add
mov
push
push
push
cli
mov
mov
arpl
stc
lods
rolb
and
xchg
pop
adc
out
pushf
aam
add
fsubs
ret
mov
es
push
lods
inc
dec
sub
inc
adc
and
inc
push
inc
movsl
xchg
hlt
xor
rclb
or
and
and
xor
inc
jmp
sbb
or
xor
adc
dec
dec
lods
testl
add
add
or
in
jb
push
push
lock
add
in
leave
repnz
inc
xor
adc
add
xchg
mov
mov
in
pop
mov
push
fs
xchg
jno
mov
arpl
sub
scas
fs
push
aas
popf
dec
sbb
test
xor
add
pop
iret
and
sbbl
stc
inc
cmp
dec
pop
and
inc
push
cs
aam
inc
dec
es
or
icebp
pop
push
test
sub
mov
ss
xor
repz
or
inc
repz
lret
lock
xchg
mov
icebp
mov
adc
sbb
rol
adc
add
dec
test
test
les
and
push
loopne
sbb
cld
and
inc
lret
inc
repz
mov
sub
or
adc
and
jns
pop
add
pop
jl
push
dec
dec
or
push
or
shrb
movsb
mov
dec
add
xchg
inc
iret
push
jmp
andb
je
push
add
ljmp
add
repnz
dec
mov
mov
imul
add
shr
in
jbe
pop
sbbb
inc
mov
add
int3
xor
dec
add
mov
int3
add
ret
mov
mov
test
cld
dec
popf
push
jnp
pushf
pop
aas
dec
jno
sbb
pusha
into
test
test
and
add
ret
xlat
in
add
cmp
in
add
push
std
pop
xor
and
add
aas
lods
clc
adc
push
push
push
add
je
jno
aas
jo
add
lret
mov
xlat
pop
sbb
adc
nop
push
or
pop
push
mov
in
pusha
inc
inc
sub
ds
mov
adc
sbb
push
ret
sbbb
or
leave
rep
in
cmpb
jae
adc
pop
lret
clc
inc
fldl
in
jo
ficomps
sub
jmp
iret
push
dec
in
cmp
pop
out
les
dec
sub
xlat
xchg
mov
add
pop
aam
dec
or
ud0
aad
add
push
mov
cmp
sahf
pop
pop
clc
movsb
loop
mov
pop
jns
add
xor
or
stos
shl
icebp
and
ss
clc
insl
cmc
and
in
push
push
push
lcall
adc
cmp
cli
les
lock
mov
xchg
ljmp
xchg
mov
cmp
repnz
add
dec
jg
psllq
jecxz
mov
mov
nop
cmp
and
je
inc
dec
inc
pop
cmp
xorl
xchg
jl
movzbl
push
sbb
mov
add
stc
pop
sbb
jl
jg
test
hlt
inc
cmp
gs
jne
add
push
sar
fmuls
rol
mov
sub
jns
lods
and
out
mov
mov
sarl
push
call
into
insb
sub
dec
add
pop
push
inc
enter
test
push
roll
ljmp
mov
add
lea
mov
nop
add
jne
pop
push
xor
cld
add
adc
std
inc
rclb
fsubs
mov
test
cli
jae
les
pop
adc
das
add
sti
xchg
cmp
jne
inc
xchg
mov
lcall
xor
add
out
stos
xchg
mov
and
inc
popf
shl
xor
decl
mov
pop
mov
add
mov
shlb
jae
dec
add
cmpl
test
mov
adc
stos
adc
or
lahf
addr16
add
adc
add
testl
fdivrl
and
add
xor
cmp
mov
mov
adc
daa
add
cld
cmovns
lcall
jp
push
cmp
dec
enter
add
pusha
leave
addb
inc
out
mov
mov
and
xor
mov
pop
int3
sub
ljmp
push
pusha
rolb
ret
cmp
out
or
lret
aas
add
sbb
and
inc
push
xchg
dec
decb
mov
xlat
and
mov
add
push
fidivl
inc
and
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
jle
mov
iret
mov
cli
push
sti
add
jno
mov
add
cltd
stos
sub
cmp
mov
fimuls
pop
iret
movsl
cmp
dec
or
dec
push
mov
std
add
stos
cmp
add
int3
push
arpl
ret
adc
jns
sbb
inc
outsl
mov
lret
mov
jne
push
cmp
add
das
dec
out
sub
push
push
pop
adc
add
mov
arpl
lock
pop
lret
push
and
add
and
fsubrl
mov
pop
or
pop
push
leave
call
push
sbb
lock
out
pop
mov
sbb
or
out
neg
push
shlb
paddusb
dec
js
add
out
test
mov
add
xor
lea
mov
add
daa
fs
pop
xlat
pusha
mov
and
movsl
hlt
lods
and
sub
add
ret
mov
movw
sub
push
repnz
cmp
incb
neg
ja
add
mov
adc
adc
push
dec
sub
mov
ljmp
add
or
loopne
add
mov
adc
cmpsb
or
out
dec
push
mov
add
mov
rorb
je
mov
cmp
pop
inc
add
mov
pop
add
daa
repnz
add
and
push
imul
cli
inc
add
cmpsl
jne
jmp
loop
loopne
or
mov
add
inc
jl
push
fsubl
or
shlb
mov
addr16
mov
push
scas
jbe
pop
add
mov
add
insb
inc
jb
add
dec
xor
pop
cmp
test
pop
cmp
inc
frstor
adc
loope
out
jo
movb
fcmovnu
or
inc
mov
ficompl
fnstcw
jle
xchg
add
icebp
dec
adc
int3
add
decb
cwtl
pop
jne
fists
mov
add
inc
mov
lock
sbb
inc
in
add
sahf
or
sub
inc
out
rorb
femms
call
scas
jne
xchg
or
loopne
pop
mov
pusha
pop
add
mov
repz
xor
lods
aam
leave
mov
push
dec
int3
fstpt
xor
filds
out
shlb
or
mov
add
inc
stos
out
adc
dec
add
fwait
xor
movzwl
push
or
cmc
movb
aas
pusha
adc
push
xor
push
add
rolb
add
mov
pavgb
push
sahf
push
jae
call
xor
inc
cmpsl
and
adc
sbb
arpl
inc
movl
lock
adc
xor
mov
or
push
add
jne
push
pop
push
add
dec
add
mov
push
pop
add
sbb
adc
add
pavgb
cli
push
lret
clc
push
aaa
add
in
subb
push
in
jg
dec
js
sbb
lods
add
pop
push
testl
out
lahf
test
add
cmp
adc
mov
iret
add
xor
jg
add
mov
inc
aaa
xchg
shrb
add
test
push
or
paddb
in
test
push
inc
xor
push
jo
add
iret
jb
and
mov
aas
lea
push
xchg
jno
add
cmp
add
pop
dec
ja
xlat
dec
scas
mov
jo
add
mov
imul
das
push
sbb
jmp
std
add
and
int
cli
sub
sti
inc
xchg
adc
std
shrl
xor
outsl
fs
andb
pop
insl
pop
sti
dec
loope
sbb
mov
fdivrs
pop
rorl
and
and
hlt
ljmp
add
call
xchg
mov
xrelease
add
andb
rol
leave
push
jne
je
and
xor
inc
pop
or
shrb
add
roll
ret
nop
add
cmpsl
fcoms
add
enter
inc
cmp
mov
jbe
pop
out
jb
nop
jo
add
sti
cmpsb
and
movsl
add
mov
loopne
in
outsl
push
lock
cmp
jnp
fs
sub
fdivrl
lods
pop
inc
gs
jl
or
pop
adc
test
pop
adc
inc
repz
nop
mov
into
les
lock
mov
and
xchg
jl
imul
gs
add
xorb
push
mov
rorb
ret
jmp
call
add
ja
cli
nop
mov
scas
add
sub
push
or
je
or
push
push
ret
jg
sbb
into
add
dec
pop
sbb
out
int
fsubrl
insb
xor
or
inc
push
mov
xor
or
arpl
in
pop
pop
jns
test
stos
pop
sbb
or
push
mov
and
rolb
xor
add
push
jne
jle
mov
or
xchg
loopne
pop
clc
lret
rcl
dec
add
add
das
stos
sub
sbb
pushf
xor
or
adc
loopne
inc
mov
pop
sarl
push
jb
add
js
mov
add
xlat
dec
cld
sbb
sub
pop
idiv
sbb
pusha
push
add
shlb
iret
inc
add
jmp
xlat
clc
jne
movb
call
aam
add
adc
clc
popa
xchg
aaa
movl
hlt
test
cmpsl
dec
or
mov
lahf
jbe
cmovae
fdivs
jae
and
loop
dec
testb
movsb
or
mov
mov
add
cli
test
inc
dec
dec
cltd
jbe
inc
add
and
sarl
jo
add
pop
mov
inc
call
pop
dec
je
push
xchg
sub
inc
imul
add
or
add
sbbb
push
call
add
ret
push
repnz
cmp
lods
mov
add
lds
xchg
repnz
pop
push
sub
iret
pusha
mov
add
xor
leave
add
add
jge
push
mov
dec
or
pusha
add
ret
movsl
js
je
jle
and
imul
sbb
fimull
loope
mov
add
jae
jb
cmp
jne
je
xchg
ljmp
dec
add
inc
pop
lret
sbb
xor
xchg
xchg
inc
fadd
out
call
mov
dec
mov
add
add
pop
push
sbb
ret
xor
nop
addb
sub
inc
pushf
adc
xchg
mov
or
cmp
inc
jb
mov
or
pop
scas
hlt
or
fs
inc
rolb
add
decl
add
leave
xchg
jnp
addl
or
rolb
dec
sbb
fisttps
fimuls
in
cmp
add
and
sbb
test
movsl
mov
mov
negl
sbb
les
lock
add
add
pop
flds
ret
cmc
inc
arpl
adc
lea
aam
jmp
mov
sti
repz
pop
arpl
es
inc
mov
pop
cmp
test
js,pn
cmp
mov
inc
add
out
or
add
rolb
addl
adc
stos
fcompl
add
push
mov
inc
dec
xor
aas
sarb
add
add
fistl
clc
or
add
push
in
mov
inc
add
out
je
or
push
movsl
sbb
je
cmp
xor
inc
das
and
or
add
jae
or
testb
not
cmp
pop
add
enter
test
adc
pop
flds
cmp
push
cmpb
add
mov
pop
adc
add
dec
push
push
aam
loop
pop
adc
dec
lahf
dec
cmp
scas
cmp
imul
cwtl
imul
or
cmp
adc
scas
and
addb
add
or
pop
mov
inc
sahf
lret
adc
test
fs
add
das
cmp
add
xchg
xor
pop
aad
test
push
xor
pusha
mov
adcb
lret
mov
pop
ret
inc
jae
add
push
or
jl
cwtl
cmp
cmp
cltd
xchg
push
hlt
add
dec
lods
mov
xor
xlat
dec
repz
pop
test
shlb
out
loopne
add
push
pop
cmpsb
add
lret
dec
scas
sbb
out
mov
xor
lea
inc
fcoml
and
adc
dec
jne
popf
repz
adc
sbb
and
push
cld
ljmp
int3
rcrl
popl
sub
xor
dec
cli
jns
je
inc
lock
inc
add
push
and
out
sub
xchg
push
enter
inc
stos
mov
je
sub
movb
or
cmp
cmpl
bound
mov
add
adc
add
add
insl
and
cld
icebp
xchg
pop
xchg
push
or
sbb
sbb
mov
adc
clc
subb
loop
add
testb
push
rorb
pop
xlat
add
push
lock
cltd
lret
add
sbbl
inc
sbb
or
adc
dec
jbe
movsl
add
inc
pop
outsb
and
scas
add
inc
mov
mov
add
cmp
inc
xchg
push
pop
jne
in
sbb
cli
sub
jo
sub
les
or
dec
leave
test
add
mov
mov
push
ds
shrb
dec
sub
mov
adc
mov
inc
scas
jb
or
je
xchg
fnstenv
adc
push
add
push
call
pop
cmpsb
adc
int
mov
xor
cltd
mov
add
pop
push
ret
popf
jo
add
sti
push
and
pop
fists
cmp
sbb
js
push
add
pop
mov
and
rolb
push
and
inc
pop
push
add
lret
jne
fwait
push
inc
add
loop
push
sbb
or
add
pop
imul
lock
cmp
xor
push
mov
jle
xchg
sbb
adc
nop
cmpb
shrl
hlt
mov
movsl
sbbl
fadd
pop
test
or
xchg
or
mov
mov
sbb
jecxz
xchg
ret
sbb
add
and
hlt
mov
repnz
adc
inc
jo
add
cs
add
int
mov
xor
push
cs
lcall
mov
stos
shr
testl
inc
sti
cmp
xchg
push
nop
xchg
lock
add
repnz
jb
add
push
sub
push
mov
out
add
rol
loopne,pt
cmp
jl
aas
fadds
xorl
rcr
cmp
call
push
add
sub
mov
and
or
mov
roll
rorb
add
data16
stos
xchg
jp
lret
je
in
add
ror
fsub
jmp
or
add
pop
dec
cmp
jge
andl
add
push
push
add
dec
fs
mov
lcall
imul
movsl
jae
adc
mov
pop
adc
xor
add
or
sbb
and
xor
stos
test
add
mov
mov
push
jecxz
lahf
push
cmc
lock
mov
add
xor
mov
outsb
aas
and
gs
jae
xor
mov
xchg
js
ljmp
sbb
andb
mov
mov
push
mov
call
dec
cltd
push
add
dec
adc
pop
pop
pushf
sub
inc
add
test
pop
ss
loope
mov
loop
add
sbb
push
adc
add
pop
adc
ja
add
test
add
outsb
push
leave
adc
sbb
dec
jbe
cmp
es
int3
adc
mov
pop
pushf
xchg
inc
shll
and
arpl
les
add
or
loopne
inc
jg
add
repnz
pop
clc
out
arpl
add
add
pop
jg
add
inc
push
mov
add
cmp
shll
shlb
sbb
push
outsb
xor
push
or
and
add
add
add
stos
add
mov
add
iret
pop
xor
xlat
nop
mov
loopne
stos
xor
pop
rolb
add
xor
mov
add
inc
mov
bnd
in
testb
aam
push
cmpsb
pop
jb
mov
push
pop
adc
stos
out
add
cmpsl
push
test
add
subl
cli
pop
cli
pop
pop
in
loopne
sub
repz
mull
dec
stc
movsb
in
lahf
add
pop
lods
pop
sbb
pop
aas
shrb
or
lds
add
inc
adc
fldl
lret
les
pop
adc
scas
sbbb
add
jg
arpl
in
add
test
int3
add
and
inc
or
cmp
push
add
adc
push
push
notl
jo,pn
push
cmp
adc
insb
lea
testl
xor
fs
adc
mov
adc
stos
popa
arpl
fnstenv
rcrb
mov
data16
mov
pop
fs
or
div
loopne
cmc
ds
add
popl
push
mov
repz
push
ror
clc
in
push
and
enter
sub
je
add
stos
mov
add
xchg
add
push
sbb
pop
aaa
test
xchg
adc
push
add
pop
add
pop
nop
sbb
sbb
cltd
push
sbb
mov
add
xor
cmp
or
test
sbbb
xorl
mov
pop
or
sbb
or
test
pop
add
mov
sbb
inc
adc
pop
jge
push
sub
fs
cmp
xchg
inc
test
stos
push
dec
lds
popa
sbb
push
add
inc
inc
xor
add
mov
aam
stc
add
ret
or
push
sti
adc
fadd
add
jmp
and
push
cld
push
or
cmp
addb
cltd
unpcklps
jmp
xchg
jo
psubd
sub
daa
lahf
shlb
jbe
push
pop
pusha
test
mov
adc
sbb
pop
sub
dec
xor
mov
xor
arpl
jnp
sub
or
icebp
pop
inc
and
add
mov
push
lret
pop
push
add
dec
cld
mov
sub
outsl
jbe
sub
xchg
push
fisttpl
mov
inc
pop
and
fildll
add
rolb
jns
xor
cli
fdivrl
cld
or
jnp
cmpsl
push
add
leave
jp
aaa
ret
and
xor
add
and
les
sbb
add
cmp
sbb
in
xchg
mov
adc
pusha
and
pop
dec
addr16
xlat
push
aas
mov
mov
and
rcrb
testl
push
test
and
ss
ljmp
lods
cmp
sbb
popa
push
test
insl
sahf
in
push
std
add
test
iret
sbb
sub
add
or
pop
sub
inc
sbb
lar
and
jge
jb
inc
xor
iret
aad
leave
sbb
mov
in
dec
add
cmp
aas
xchg
sub
pop
sbb
mov
and
or
push
test
mov
push
stos
cmpsl
add
or
inc
divl
hlt
fidivrl
sub
mov
test
cmp
add
cmp
pop
fcoms
aaa
test
into
add
mov
sbb
jbe
mov
outsb
test
cmp
jbe
andb
rcll
mov
and
imul
jle
call
les
pusha
imul
jbe
xchg
mov
sbb
mov
rcr
lock
add
adc
sbb
mov
cmp
add
adc
cmpsl
loopne
add
dec
mov
rcll
das
nop
jl
and
ficompl
mov
and
cmpsb
orb
adc
scas
movsl
xchg
add
xchg
push
adc
xchg
aaa
add
add
outsl
daa
add
push
dec
aam
or
pop
cmpb
mov
mov
je
jns
sbb
das
es
lcall
lods
add
daa
cli
mov
and
ljmp
lahf
push
adc
call
pop
imul
popa
sbb
adc
aad
inc
xchg
pop
lcall
lds
add
movsb
mov
inc
pop
xchg
add
xchg
ja
mov
mov
out
cld
loop,pn
cmpsl
add
scas
je
inc
mov
lea
xor
jns
js
nop
adc
int3
cmpsb
subb
leave
mov
daa
iret
ret
shrl
mov
adc
mov
fdivrs
jnp
adc
imul
or
add
movsl
fnstsw
fstps
fcoms
mov
adc
popf
add
or
add
movsb
pop
fimull
sub
insl
xor
mov
push
enter
pop
jp
cwtl
xchg
fs
jge,pn
fidivl
out
fdivrs
add
sbb
mov
fbld
push
pusha
aas
jnp
dec
or
pop
dec
jp
mov
fwait
inc
cmp
inc
push
jns
push
add
loope
push
pop
mov
pop
jle
insl
adcb
push
movsl
add
add
stos
push
or
sahf
enter
add
or
mov
and
inc
enter
add
icebp
mull
add
dec
or
or
pop
add
cld
push
cmp
icebp
xchg
adc
and
sbb
cmp
jl
mov
mov
push
inc
addr16
push
jmp
cmpsb
add
gs
cmp
and
cmp
push
push
add
sub
pusha
adc
jge
pop
and
xchg
cmp
popa
cmp
gs
lcall
inc
outsl
pop
jns
popf
inc
lret
fiadds
sub
sub
fildl
test
lret
ljmp
repz
add
cli
cmpsb
adc
add
add
sbb
jecxz
movsb
mov
lea
stos
repnz
add
push
idivl
loop
cmp
nop
jmp
jne
jno
jg,pn
test
add
xchg
lods
cmp
or
xor
xor
in
sub
or
jae
add
ja
push
iret
loopne
inc
sub
add
push
arpl
popa
inc
jge
ja
push
jbe
outsb
addr16
add
dec
push
add
call
add
cmp
sahf
imul
push
imul
jge
push
pop
jl
nop
jp
push
outsb
xor
cld
bound
clc
js
pop
pusha
inc
mov
gs
push
jg
arpl
imul
jns
aad
and
popa
mov
add
jno
popf
jp
fstpt
mov
dec
sbb
outsb
dec
arpl
add
popa
jb
jbe
pusha
add
data16
test
push
jno
add
arpl
jl
sub
outsb
data16
dec
push
jbe
ja
add
mov
inc
shll
subl
outsl
cmp
bound
sbb
inc
push
nop
ja
jo
and
inc
test
cmp
jb
pop
addr16
popa
loopne
push
bnd
test
mov
mov
imul
add
fs
inc
decb
add
dec
gs
imul
sti
and
xchg
pusha
add
outsb
dec
push
add
xchg
sbb
inc
adc
adc
inc
addr16
jbe
mov
ds
cmp
bound
insl
data16
jp
mov
and
sub
iret
loopne
aaa
loop
ljmp
push
adc
movsl
xor
inc
jbe
add
insb
mov
jb
je
jno
popa
imul
lret
add
jp
ret
adc
addl
sub
lock
loope
pusha
inc
adc
add
test
push
xchg
ss
popa
cwtl
push
cmp
fmull
fiadds
cwtl
or
add
daa
xchg
in
call
add
mov
add
jae
or
inc
pushf
mov
pop
mov
inc
and
add
xor
sbb
or
jae
add
push
dec
das
xor
xor
test
cmpb
outsb
inc
std
add
mov
insb
add
or
leave
or
and
out
add
push
call
and
cli
pop
add
arpl
cmpb
aam
sub
ret
jg
and
push
int3
add
or
js
jle
xor
push
lock
inc
jne
jp
cmp
mov
bswap
fstps
cmp
out
and
loop
ds
lods
pop
mov
pop
hlt
xor
loopne
inc
enter
rol
cmp
jmp
pop
push
push
mov
pavgb
push
dec
or
addl
sti
lret
jle
cld
iret
mov
mov
push
add
xor
add
fsubrp
fistl
adc
cmp
scas
adc
inc
mov
mov
mov
add
cmp
and
inc
adc
add
jl
mov
push
add
and
mov
pusha
inc
pop
mov
out
sub
add
test
repz
and
pop
jge
mov
je
xor
and
data16
out
and
or
add
dec
xchg
sar
adc
sbb
and
sub
sub
xorl
inc
add
cmp
enter
dec
out
add
pusha
imul
movsl
xchg
push
cmp
sbb
subb
repnz
in
lcall
cmp
movsl
mov
pusha
ljmp
outsl
and
insb
ljmp
loop
aaa
xchg
jl
mov
lahf
push
ss
mov
mov
mov
lods
xchg
sarb
xchg
mov
out
out
clc
add
or
int
fstl
mov
xlat
sub
rcl
xor
into
cli
add
call
enter
and
ret
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
push
call
cs
adc
ja
mov
jo
and
rolb
lds
lock
call
mov
add
ja
jge
pop
mov
push
lods
inc
je
cli
sub
test
sarb
enter
add
sbb
inc
sbb
loop
aas
cmp
push
sub
xor
pop
xor
and
lds
mov
jp
call
roll
cltd
pop
add
or
das
rcrb
add
daa
xchg
ds
pop
rcrb
fistpll
lea
in
stos
int3
test
adc
inc
pop
or
add
rcrb
movsb
loope,pt
mov
adc
cmp
jle
xor
rolb
jg
add
and
incl
in
or
xchg
sbbb
mov
add
ljmp
push
fnsave
xlat
shrb
sar
jae
cmpsb
and
fdivs
jne
add
push
divb
jle
add
pop
sub
shll
fcomps
mov
in
icebp
sbb
xchg
mov
jae
stos
push
mov
ds
mov
cmc
xchg
cmp
in
out
xlat
test
test
inc
cltd
cmp
or
jne
inc
inc
or
jmp
add
add
cmp
mov
push
mov
aam
das
lds
cmp
adc
icebp
push
push
xor
cmpb
xchg
jmp
cmp
cmp
sub
mov
lret
xchg
les
add
cmp
pop
or
pusha
loope
insl
xchg
adc
add
cmp
insb
sbb
push
add
mov
jbe
add
jb
lcall
push
mov
add
add
jmp
sub
je
mov
and
inc
jle
ret
adc
loope
add
nop
mov
cmp
mov
cmp
inc
mov
stos
adc
xchg
mov
add
xor
or
push
add
add
je
or
aam
xor
pop
les
add
sub
pusha
pop
mov
nop
xchg
ret
mov
cmp
pop
outsb
fs
outsl
jne
or
add
mov
enter
add
cmp
sub
popa
fadds
jae
or
push
int
mov
sti
jbe
add
dec
xlat
sarb
clc
ljmp
add
push
jns
loopne
fmull
cmp
out
je
filds
lcall
push
cmpsb
iret
pop
test
rolb
test
in
je
add
lret
inc
loopne
loopne
movq
mov
mov
incl
aad
or
mov
bound
add
dec
cmp
cmc
paddusb
inc
or
leave
and
nop
repnz
clc
mov
add
sti
cli
rolb
or
push
inc
xchg
sub
fcmovb
or
jecxz
mov
add
add
cmp
hlt
xchg
xchg
movsb
push
ja
add
adc
cmp
rorb
push
pop
jmp
sbb
les
sub
pop
add
cmp
ret
fcoms
mov
loopne
pop
add
push
outsl
mov
fstpt
inc
ret
pop
into
pop
pop
addr16
jecxz
jg
and
adc
scas
rcll
shlb
jae
push
lods
rcrb
mov
leave
loope
fwait
clc
add
out
add
daa
cmp
xorb
add
shl
dec
add
daa
outsl
repz
mov
push
dec
push
add
subb
orb
add
imul
inc
pusha
mov
adcb
je
mov
loopne
and
ret
fistps
in
xchg
lock
xchg
pop
dec
int3
in
mov
cmc
inc
cld
xchg
push
push
rol
cs
add
push
mov
jo
cli
daa
decb
pop
add
xor
inc
stc
pop
cmp
dec
test
subb
addl
mov
decl
fs
push
rcl
pop
bound
stc
push
aam
inc
ja
pop
cmp
push
mov
push
les
sbb
and
es
mov
int
jbe
add
pusha
xchg
adc
push
mov
cmp
pop
in
ljmp
inc
sar
sbb
xchg
packsswb
out
and
repnz
lock
mov
sbb
nop
aad
push
add
sbb
cmp
adcb
lret
and
in
enter
xchg
xchg
sub
mov
cs
imul
in
ret
cmp
sub
add
div
test
xchg
hlt
out
xchg
in
sub
add
xchg
outsb
rorl
and
inc
jle
sbb
cmp
ret
push
xlat
jo
push
call
addb
jmp
jg
jnp
mov
sub
cmp
call
adc
push
cli
shll
add
imull
add
add
in
shll
lds
ret
xor
pusha
loop
add
test
pop
call
loopne
aam
add
std
push
mov
add
inc
mov
pop
pusha
dec
mov
pushf
inc
cmp
pop
andb
je
add
jle
xchg
lock
add
mov
addl
or
in
fs
sbb
bound
jnp
mov
les
pusha
adc
pop
loopne
sbb
jmp
xor
shlb
jmp
aam
addb
cmp
ffreep
sbb
add
lock
cmc
adc
shr
add
mov
dec
cmpsl
call
jne
cmp
jae
inc
add
loopne
nop
add
bswap
sub
enter
je
and
insb
add
dec
fincstp
sarl
sub
fisttps
push
jb
lds
fidivrs
mov
add
lret
xor
hlt
or
push
ret
pop
cmp
mov
or
aaa
add
lret
jbe
dec
mov
mov
test
mov
test
rcl
fdivrs
cmpsl
adc
mov
addb
pusha
jg
mov
sub
daa
push
sub
or
xor
subl
call
jbe
pop
and
shlb
hlt
stos
add
push
and
inc
movl
push
aas
mov
add
xor
dec
or
inc
out
jmp
add
sbb
inc
add
inc
lret
dec
adc
es
repz
mov
dec
dec
sbb
mov
xchg
cld
add
hlt
jns
pop
sub
dec
out
add
sbb
add
shlb
aas
push
pop
pop
lock
add
es
push
add
add
enter
jg
nop
jle
jp
test
shl
popa
dec
fisubl
add
dec
xor
pop
pushf
jg
sbb
xorb
rolb
sbb
nop
add
js
mov
ja
pop
hlt
fnsave
sbb
bound
je
jle
add
scas
leave
mov
adcb
and
jmp
add
jge
mov
add
out
sbb
dec
sarl
data16
adc
orb
mulb
sbb
push
lock
add
jle
sahf
pop
daa
seta
add
push
push
add
push
in
pcmpeqw
mov
lret
dec
call
inc
xchg
mov
xor
or
out
jle
ds
mov
std
dec
movsb
aaa
int3
cmp
add
dec
rolb
cmp
jae
add
addb
or
jne
cmp
add
test
lret
inc
addr16
push
ret
popf
dec
pop
inc
fld
add
mov
or
sub
sub
mov
add
push
adc
add
jp
jbe
rol
test
jecxz
ds
cmp
dec
jl
vmwrite
sub
xchg
nop
sub
xchg
adc
dec
cmpb
out
add
push
aam
add
xchg
ja
je
or
int
loop
test
fstps
mov
scas
repnz
add
pop
stc
ljmp
mov
add
push
push
pop
push
xchg
mov
rolb
test
scas
mov
add
testb
add
mov
push
xor
add
add
adc
mov
sarb
jbe
or
aad
loop
hlt
in
jmp
inc
das
add
jne
sbb
or
add
aam
xchg
dec
or
pop
pushf
adc
dec
movsb
popl
cli
imul
mov
jp
cmp
in
mov
sub
sbb
mov
xchg
ffree
or
dec
inc
stos
dec
inc
lock
nop
cwtl
push
lahf
hlt
rol
in
add
gs
loope
pusha
and
and
add
fiaddl
inc
je
inc
lcall
cmp
js
inc
je
nop
call
mov
test
add
xor
scas
rorb
mov
cmp
xchg
dec
add
sub
mov
add
test
or
inc
ud2
mov
out
add
cmp
pop
add
cli
mov
mov
push
xor
xor
dec
ret
or
outsl
push
cltd
jecxz
cmp
arpl
add
lods
or
sub
mov
ds
dec
add
sub
push
sbb
jecxz
arpl
loopne
loopne
jb
psubusb
push
jmp
lock
pop
mov
mov
and
nop
add
shr
loop
pop
lods
repnz
inc
es
cmp
sbb
add
push
xor
bnd
outsb
sarb
xchg
test
call
ss
cmp
add
xlat
popf
add
add
xor
in
sub
or
cmp
jae
xchg
fsubr
js
add
out
jb
adc
cli
ja
dec
add
mov
add
xchg
cmc
test
pop
mov
push
lock
out
loopne
sbb
sbb
ss
pop
push
mov
insb
rolb
ds
dec
fisubrl
orl
jo
inc
icebp
popa
das
inc
mov
aad
sub
or
push
dec
add
jmp
add
rolb
rolb
jne
fnstcw
sarb
jmp
mov
nop
xchg
mov
dec
push
jo
xlat
int3
push
mov
mov
jmp
mov
call
imul
xor
add
dec
push
push
mov
scas
inc
sbb
aam
mov
xchg
pop
dec
and
xorb
pop
mov
sbb
mov
jg
and
out
mov
or
and
imul
shll
gs
cmp
sbb
fidivrl
xchg
hlt
loop
cmp
je
pop
sub
insb
inc
movsb
dec
inc
adc
push
adcl
jmp
push
add
in
add
push
add
inc
push
sti
jae
aas
push
lcall
push
subl
repz
in
repnz
mov
xchg
mov
pop
add
andb
imul
iret
push
inc
xchg
xor
sub
sarl
sbb
push
push
or
add
shl
push
leave
sub
mov
xor
xor
push
negl
adc
cwtl
jge
aam
sub
mov
into
cmpsb
test
sbb
repz
repnz
test
push
adc
pop
movb
cmpl
add
jmp
xor
sbb
cmpsb
lods
sbbb
jbe
add
pshufw
sub
xchg
dec
sbb
or
jae
mov
andb
adc
lret
mov
add
jb
cmp
add
stos
mov
mov
sub
leave
out
test
in
lret
and
cltd
movsb
lock
add
repz
cmp
mov
mov
push
or
dec
pop
popf
dec
add
repnz
test
or
call
cmpsb
jne
add
xchg
and
rclb
movl
inc
shr
xchg
dec
add
inc
dec
jne
push
or
ret
pop
movsl
and
add
dec
nop
push
out
mov
xchg
push
lods
in
test
ja
shr
jbe
cld
jb
add
loopne
fsubr
mov
ja
dec
xchg
or
sti
mov
lahf
cld
les
out
jb
cs
push
shlb
or
call
fs
add
hlt
or
mov
movsb
mov
push
xchg
sub
cld
leave
add
daa
inc
mov
mov
adc
cmp
sub
adc
xchg
add
lcall
int
test
and
movsl
and
add
imul
jb
push
jmp
add
repnz
or
inc
xor
add
popl
jmp
dec
test
jb
or
add
add
xchg
ss
dec
rcrl
mov
rolb
les
add
xor
push
dec
mov
imul
add
adc
inc
fsubl
loopne
inc
xchg
daa
jg
add
sub
adc
dec
adc
shrb
aas
xchg
and
addr16
pusha
cmpsb
call
xchg
or
bsf
add
repz
or
in
push
add
mov
mov
lds
loopne
or
cmp
push
cli
gs
sbb
add
add
dec
and
cs
jns
je
addb
cwtl
push
push
inc
xchg
je
cmp
repnz
enter
inc
addl
insb
es
and
pop
push
leave
dec
xchg
inc
mov
add
and
add
xchg
mov
arpl
add
jo
rolb
add
push
enter
add
sub
pandn
pop
add
mov
lret
movsl
adc
jno
mov
and
xor
add
hlt
push
rcrl
ss
bound
add
push
cmp
mov
cmp
lds
lods
pop
test
mov
sbb
push
dec
jl
add
bound
jp
jb
cltd
clc
aam
dec
js
jnp
addr16
xor
jno
add
add
pop
cmpb
and
les
mov
add
nop
pop
gs
mov
outsl
cmp
cld
lret
call
mov
dec
sbb
ss
cmpsl
pop
loopne
mov
add
sbb
xor
push
add
adc
out
sbb
mov
or
jo
loopne
jo
dec
adc
pop
add
shll
add
push
sbb
sub
clc
repz
add
xlat
xchg
sbb
test
add
cmp
gs
out
hlt
add
jge
adc
sub
or
jp,pn
push
add
pop
dec
xchg
sub
jb
fwait
pusha
add
add
loop
or
das
jmp
add
xor
xor
xchg
adc
and
xchg
xchg
adc
pop
adc
mov
aas
or
out
aas
adc
mov
add
test
arpl
in
cld
add
int
popa
test
add
dec
loope
out
outsl
pop
push
mov
mov
inc
ret
mov
cmp
jmp
call
sbb
inc
mov
sub
sbb
dec
cld
adcb
add
out
xor
cmp
insb
movsb
add
pop
adc
add
jl
push
cld
negb
jae
ljmp
subl
int3
push
adc
fldl
in
orb
in
ficompl
xor
insl
shlb
sub
jne,pt
and
adc
mov
in
ret
xchg
jo
xchg
mov
add
shl
inc
xchg
or
add
xor
jb
inc
roll
out
test
mov
lods
mov
adc
test
jg
jmp
pop
ljmp
cmp
adc
jg
add
in
jmp
dec
mov
xchg
mov
das
out
int
fisubrs
fdivs
jo
xor
cmp
cs
cmp
lcall
pop
jbe
xchg
mov
xchg
xchg
pusha
pop
push
imul
stos
and
xor
mov
das
jne
shlb
add
cltd
fists
sahf
add
ljmp
aaa
cmp
outsl
cltd
notb
aas
bound
cmp
ljmp
enter
dec
add
in
bound
add
mov
push
add
int3
test
push
add
lret
or
push
push
add
pop
inc
or
push
adc
mov
pop
hlt
sub
mov
push
outsb
mov
add
adc
call
inc
mov
push
or
mov
sub
add
movb
inc
rclb
push
or
cmp
sbb
adc
in
les
xor
pop
in
add
mov
jne
sbb
xchg
xor
inc
popa
jae
xor
outsl
dec
push
dec
outsb
je
push
aas
fidivs
ja
dec
push
push
imul
js
arpl
dec
popa
cwtl
daa
add
mov
les
sarl
jbe
adc
adc
sub
cmp
add
fiadds
jne
mov
sbb
pop
mov
fimull
add
xor
fucomip
dec
pop
decb
dec
xlat
enter
cmp
add
sub
fimull
mov
add
cmp
and
xor
inc
push
sbb
mov
sub
iret
sarb
insl
add
xor
inc
dec
jne
call
sub
iret
push
jb
inc
pop
add
xlat
les
psrld
xor
mov
sbbl
mov
push
lock
mov
and
mov
or
lea
les
mov
xchg
fstpt
idivb
fcoms
mov
shlb
cmp
jl
sahf
xor
insb
daa
sub
ret
jge
jg
dec
hlt
inc
pop
lods
sahf
loop
jne
ret
fsubr
jmp
push
jg
cmp
and
lods
pop
pop
push
out
adc
lock
inc
subb
test
call
cmp
ret
add
mov
jb
rorb
jbe
movb
jo
adc
roll
lods
jb
cmpl
jbe
mov
dec
sub
sub
jmp
ss
sarb
repz
push
repnz
add
adc
add
cmpb
xor
inc
add
imul
xchg
push
loopne
and
inc
out
push
enter
lret
out
cli
fcompl
int3
lock
pop
add
mov
testb
pop
mov
hlt
fsubrs
addb
jecxz
jb
rclb
ss
out
and
leave
roll
addb
push
push
call
fdivrl
movsb
pop
jno
mov
pop
scas
add
outsl
push
mov
add
adc
push
inc
add
add
add
or
inc
or
and
lahf
cld
loopne
dec
cmpsb
jle
imul
adc
add
dec
inc
rcrb
dec
fadds
andb
call
adc
push
push
fsubs
add
and
repnz
jno
and
jae
pop
push
dec
dec
arpl
rolb
imul
fisubl
or
fucomp
or
stc
pop
pushf
dec
add
loopne
add
jecxz
or
out
adc
pop
xchg
push
xchg
mov
and
ret
mov
les
popf
mov
aam
aam
sbb
push
dec
sub
cmp
pop
pop
xchg
push
inc
fwait
cmp
leave
push
jle
or
sete
fildl
mov
int3
loop
test
adc
xchg
sbb
jns
out
mov
add
fmuls
mov
and
test
iret
out
push
add
pop
mov
sbb
and
daa
pop
testb
pop
les
cmp
sub
je
inc
in
loopne
gs
lods
dec
add
shrl
dec
or
push
pop
jl
add
lcall
pusha
incl
jl
mov
mov
push
cmp
lea
div
mov
pop
or
cmp
pusha
add
dec
jp
jmp
add
pop
jg
cmp
shl
cltd
or
cmc
jo
lcall
inc
ljmp
jne
loop
add
push
mov
or
xchg
pop
movzwl
pop
mov
sub
fiaddl
add
mov
adc
and
sbb
jbe
sbb
sub
dec
add
mov
mov
push
and
fsub
and
pop
cli
lret
add
ljmp
in
xchg
add
and
mov
fldt
test
and
arpl
mov
jnp
cli
ret
cmp
idivb
les
xor
or
cli
sub
inc
add
call
lcall
xlat
pop
les
aad
and
nop
fnsave
in
push
fmuls
dec
add
jl
xor
mov
inc
lods
aad
in
inc
mov
aaa
add
repnz
daa
adcl
and
add
add
js
pop
add
add
or
adc
add
pop
and
add
or
movsb
out
add
cmpsl
test
sbb
and
cltd
bound
pop
loopne
pop
sbb
sbb
or
add
add
and
pop
add
or
incl
dec
jg
jp
pop
nop
add
rclb
stos
daa
pop
les
fiaddl
rolb
lea
add
test
add
inc
pop
rcrl
mov
add
mov
std
add
cmpsb
push
lahf
mov
lcall
fmuls
sub
scas
rolb
into
sarl
mov
jnp
add
inc
fptan
cmc
cwtl
or
pop
in
mov
nop
pop
add
mov
jl
pop
inc
sar
movsl
adc
lock
cmc
lock
fisttpl
add
enter
notl
add
in
fisubrs
imul
xchg
pop
out
leave
jle
sbb
mov
add
add
int3
add
test
pop
mov
inc
add
pop
sbb
or
cmp
orb
frstor
add
dec
add
adc
adc
adc
mov
adc
jmp
add
push
vmread
cmpsl
and
addr16
cmp
push
mov
xor
xchg
pop
lret
add
mov
stos
fldenv
inc
jmp
cmp
mov
push
add
mov
lods
jmp
cld
js
pop
sbb
rclb
add
mov
popf
mov
cs
mov
add
cwtl
add
push
fsub
popl
add
std
xchg
push
inc
push
enter
add
sbb
int
add
push
test
add
in
jge
orb
pop
lock
inc
rolb
pop
fadd
mov
push
pop
pop
add
sbb
mov
dec
lcall
push
push
pop
jnp
adc
mov
das
add
out
lea
movsb
add
fmull
lret
add
push
cmp
lret
mov
dec
shrb
loop
fldl
jo
xchg
and
add
cmp
pop
push
repnz
add
popl
jecxz
shld
mov
pop
add
cmpsb
mov
add
lods
in
push
mov
btr
push
scas
inc
test
jbe
inc
mov
repz
test
mov
ret
adc
and
cmpsl
fsubp
push
movl
cld
adc
in
and
mov
int
jle
pop
push
or
mov
add
jno
ret
mov
out
out
jae
dec
mov
cltd
cmp
push
jo
push
mov
inc
cmp
testl
add
mov
cs
push
pushl
pop
jle
or
adc
out
aam
ret
and
inc
enter
jno
mov
or
jo
data16
xor
loopne
push
push
and
dec
push
dec
sarb
pop
int3
adc
adc
loop
dec
sti
aad
scas
mov
clc
add
lds
push
roll
dec
pop
jno
pop
mov
mov
adc
iret
add
pop
lret
add
cmp
push
dec
nop
inc
add
fists
adc
aas
add
daa
mov
sbb
push
popf
imull
or
fsubs
nop
adcb
push
dec
add
movsl
dec
mov
sub
inc
sbb
jmp
scas
fwait
add
sbb
adcl
roll
mov
ja
or
pop
add
sbbb
jns
add
stc
ficoms
dec
jge
add
mov
or
pop
pop
clc
push
aaa
or
iret
sbbb
jae
mov
sbb
add
pop
stos
inc
mov
xor
add
nop
ljmp
mov
push
stos
lea
pop
loop
sbb
cmpsl
test
mov
or
push
jmp
xchg
add
jne
inc
push
cmpsb
jecxz
mov
ja
imul
adc
inc
pusha
test
jg
add
loop
xchg
enter
out
add
xlat
pop
jne
scas
rcrb
inc
and
cmp
add
and
add
mov
xchg
sbb
add
in
pop
xor
cmpb
sbb
clc
pop
icebp
std
add
mov
mov
rolb
jb
add
push
mov
and
sub
or
xchg
lret
mov
sbb
pop
loopne
mov
push
inc
sbb
add
imul
je
popa
jo
push
push
dec
push
rolb
stc
outsl
add
sbb
jne
sub
dec
add
aas
or
jecxz
add
add
pop
int3
cmp
cld
cmp
push
inc
add
je
xchg
or
mov
add
mov
call
push
mov
mov
add
jle
movl
or
sub
adc
pushf
and
adc
jo
add
push
jg
add
test
lods
sub
push
mov
les
jle
andl
jo
addb
add
ror
or
inc
push
add
sbb
jmp
xchg
stos
in
add
insl
mov
cwtl
cli
inc
jp
shrb
adc
and
hlt
out
add
sub
or
divb
movsl
sbb
adc
hlt
in
add
dec
scas
int
jg
jae
mov
push
dec
mov
add
in
adc
dec
sbb
inc
mov
stos
insb
add
mov
es
shlb
adc
jb
xor
dec
add
inc
cld
cmp
mov
js
outsb
out
subl
xchg
les
mov
inc
in
pushf
add
pop
in
shr
lods
repnz
mov
xchg
mov
out
or
sub
hlt
jmp
repz
mov
add
jnp
mov
add
ret
add
ljmp
stc
lods
hlt
jecxz
pushf
cmpsb
cmp
sbb
add
clc
add
xchg
lods
and
add
and
hlt
push
fbld
add
sbb
and
mov
inc
mov
add
mov
add
dec
xchg
mov
in
sub
push
mulb
or
in
mov
sti
add
add
xchg
mov
nop
sub
hlt
push
push
mov
out
clc
add
adc
dec
stos
add
cld
hlt
lock
mov
add
adc
add
sbb
push
movsl
ja
sbb
add
xchg
jae
sub
cmpsl
push
jo
mov
int3
lea
or
jbe
call
push
loope
fsubs
sarb
add
sub
jle
dec
xchg
add
dec
sub
add
mov
xchg
jle
jnp
jge
add
inc
out
not
dec
jmp
mov
mov
fstpl
fsubl
add
sbb
pop
repz
push
pop
jae
stos
es
add
jne
mov
add
push
hlt
add
cmp
clc
aad
ja
xchg
rorl
jno
add
fcoms
cmp
dec
and
add
pop
add
jge
add
inc
mov
xchg
add
sti
jb
jbe
out
addl
leave
lds
orb
lret
das
mov
mov
add
js
roll
adc
cmp
lea
mov
sub
and
pop
ret
call
mov
xorb
push
movl
out
mov
or
data16
aaa
mov
rcl
mov
mov
xlat
int
sub
dec
ret
test
cli
add
cld
pusha
repz
movsb
push
aas
push
inc
rol
adc
mov
push
insb
lret
mov
jl
dec
sbb
je
or
je
sub
pop
add
and
cltd
or
icebp
dec
add
jge
jae
lret
data16
mov
push
filds
pop
add
mov
push
mov
mov
add
jne
add
add
std
or
xchg
sarl
add
in
rorb
xor
js
xor
push
add
push
jmp
inc
mov
cmpsb
jo
add
out
rcll
and
add
cmpsl
mov
call
xor
mov
or
inc
ret
ret
sub
add
popa
ja
xchg
xchg
push
inc
add
inc
loope
or
inc
mov
push
out
xor
push
mov
mov
add
xor
or
fs
dec
cmpsb
cmp
sub
mov
arpl
jae
sbb
jecxz
ja
addl
xor
xchg
lods
sub
adc
xchg
sbb
enter
pop
out
js
pop
add
push
and
repz
movsb
cwtl
inc
adc
add
icebp
cli
pavgb
sub
sti
add
popf
inc
jb
push
pop
dec
std
addr16
movb
sbb
lea
movsb
and
cmpsl
or
imul
rolb
out
scas
enter
cmp
and
aam
mov
add
push
mov
xchg
jno
push
enter
insb
pop
add
add
out
mov
cwtl
xor
cld
adc
add
push
ret
shl
sub
push
mov
repnz
push
lret
test
sub
jnp
test
mov
loope
cmp
cmp
shlb
mov
call
add
mov
mov
adc
or
and
add
inc
movsb
jae
add
add
push
jns
aas
cmc
stos
push
je
jb
hlt
arpl
pop
pop
xor
lret
popa
dec
in
int3
mov
lcall
fcomp
sbb
add
sbb
xor
cmpsl
xlat
ret
lret
and
add
mov
dec
add
mov
repnz
popl
lcall
enter
fs
aaa
aad
mov
or
push
ud2
jne
ja
push
mov
popf
sbb
push
addl
sbb
cmp
mov
xchg
mov
mov
int3
sub
sub
add
or
cmc
ljmp
cli
jno
in
pop
pop
sbb
jne
add
mov
bound
xchg
mov
adc
add
mov
sub
insl
cmc
es
roll
mov
pop
lods
lea
in
push
jb
test
jp
pop
fbstp
xchg
aad
xor
rolb
inc
push
rorb
jae
push
add
dec
push
push
fs
dec
add
jo
inc
add
inc
jl
pop
in
sub
add
pop
push
adc
outsb
dec
jne
sbb
ja
add
pop
sub
and
inc
add
dec
xor
add
jmp
sub
cmp
sub
xchg
shrb
push
ljmp
sbb
push
inc
out
fsts
jno
xor
xorl
add
loopne
jg
mov
adc
popf
js
add
pop
xor
rclb
mov
loopne
add
jmp
lods
inc
pusha
sub
xchg
cld
or
xor
or
or
sahf
fwait
pushf
inc
pop
xlat
cmp
call
dec
sbb
adc
insl
jne
bound
xchg
add
fs
pop
movsb
push
adc
aad
mov
aas
cmp
add
xchg
add
add
or
push
push
push
adc
adc
adc
push
sbb
pop
sbb
sbb
sbb
push
pop
cmp
and
and
daa
add
sub
sub
sub
add
push
idivb
push
cmp
rorb
clc
dec
pop
inc
icebp
dec
jp
subl
and
cmp
xor
cmp
adc
flds
inc
pop
push
sbb
or
add
sub
cmp
push
and
jnp
jge
cmp
mov
pop
fstl
repz
setno
stc
add
jne
add
sbb
add
jmp
pop
xor
mov
shrb
scas
scas
cld
xor
mov
mov
mov
mov
mov
rolb
push
ret
mov
sbb
lret
int3
add
into
iret
rcl
rolb
rcl
add
xlat
fcomp
add
nop
in
fstp
jl
shl
add
in
out
lea
jmp
in
and
xor
mov
lret
hlt
clc
cli
sti
cld
sbb
push
incl
add
add
lods
adc
and
add
jno
sbb
and
fdivl
dec
sub
add
stc
pop
pop
xchg
add
out
mov
orb
js
ja
sub
jnp
pop
pop
loopne
add
addb
mov
cwtl
mov
xchg
add
lcall
add
out
movsl
sub
cmpsb
lock
lea
mov
mov
jle
ds
roll
pop
lret
lcall
jb
dec
xchg
add
sti
add
lds
shl
add
out
shl
icebp
ljmp
clc
sti
es
incl
enter
or
push
or
or
adc
or
cmp
sbb
loopne
pop
or
push
andb
mov
mov
mov
xchg
xchg
add
dec
pushf
addl
movsb
sbb
or
inc
ret
repnz
fnsave
addl
add
and
dec
hlt
mov
stc
mov
sbb
orb
adc
xor
loop
inc
mov
jp
add
mov
cld
mov
icebp
xchg
mov
ss
mov
mov
sub
into
out
add
or
dec
pop
loopne
jmp
add
dec
outsl
adc
adc
sbb
cmp
test
mov
mov
incb
mov
addl
xor
add
push
xchg
les
sbb
loopne
inc
mov
in
xor
cmp
sub
inc
test
add
addl
xlat
aad
push
xchg
lds
add
mov
mov
xor
or
inc
enter
dec
xchg
inc
jo
popf
insl
andl
adc
cmpb
xchg
add
xlat
shl
jo
jecxz
pop
out
xor
cmp
pusha
pop
addr16
mov
das
and
roll
xchg
aam
dec
jmp
adc
mov
cmp
inc
rorb
dec
push
lods
add
movl
leave
and
loopne
add
sub
xor
add
test
jp
dec
ljmp
inc
push
pop
add
add
incb
cld
or
pop
jmp
loopne
add
pop
leave
insl
mov
or
cld
rcrb
orb
inc
push
pop
andl
jl
xor
add
aaa
sub
inc
lock
or
lock
push
push
ud2
inc
mov
dec
in
and
jno
or
gs
add
jge
add
insl
push
mov
hlt
loopne
sbb
push
mull
out
add
inc
or
ja
shll
add
in
lret
les
push
add
daa
sbb
jg
fmuls
stos
or
dec
and
ret
xchg
pop
adc
ljmp
jnp
add
add
add
add
fiadds
or
rcll
mov
sbb
push
repz
shlb
pop
adc
sti
loopne
jno
lcall
mov
push
push
pop
sti
sbb
xorl
rolb
mov
dec
repz
adc
push
loop
test
fisubrl
mov
pushf
cmp
sub
add
bound
pop
dec
add
cwtl
jns
adc
repz
fsubrl
orl
add
inc
mov
incl
int3
stc
mov
pop
add
rcrb
dec
and
dec
or
bound
adc
pop
jae
jle
loop
mov
push
stc
xor
jb
push
xchg
jno
imul
les
mov
popl
lods
cwtl
loop
shl
iret
shll
cmp
pusha
dec
dec
pop
aaa
movd
pop
test
sbb
push
sub
adc
loopne
addl
add
add
jecxz
movsb
loop
shll
add
jno
add
subb
push
sub
fmull
ret
imul
xor
add
testb
add
test
cwtl
mov
mov
leave
mov
out
incb
int3
cmpsl
mov
sub
popa
pop
jnp
jo
dec
iret
adc
cmpsb
cmpsl
out
mov
cmpsb
add
adcl
mov
push
hlt
add
arpl
fsubl
repz
xorb
inc
mov
cmp
sub
cld
leave
faddl
push
and
fdiv
sbb
push
roll
dec
mov
add
repz
pop
call
bound
cmp
lods
pop
jmp
mov
pop
imul
andb
fs
mov
lods
ret
movsl
add
add
scas
psubusw
xor
iret
push
jp
adcl
add
dec
cs
sub
hlt
adcb
pop
add
lcall
mov
into
sub
je
shr
cmpsb
pushf
lock
add
lcall
sbb
mov
lahf
lret
rcll
sbb
jbe
add
xchg
adc
add
out
add
or
insl
mov
add
mov
inc
inc
add
sub
adc
and
clc
outsl
aas
push
add
cmc
xrelease
pop
sbb
movsb
add
mov
jmp
mov
out
lods
add
pop
push
addr16
sqrtps
pop
ja
mov
ljmp
mov
and
sub
push
scas
rolb
sbb
ds
out
add
cltd
aad
lods
xor
adcl
inc
fwait
into
sbb
add
or
jmp
jb
fs
int
aaa
push
inc
test
push
and
or
mov
sti
cmpb
push
jl
test
daa
dec
stos
repz
mov
add
and
in
pusha
dec
cmp
xlat
in
push
jp
orl
andb
out
sahf
add
bound
cld
jae
fwait
push
rolb
sbb
jns
push
std
aaa
mov
loopne
add
sahf
movsb
out
sbb
jne
cmp
roll
pop
incb
ret
imul
into
lods
shrb
in
pop
add
pop
ror
sub
inc
loopne
cmp
add
fbld
and
aaa
mov
jne
in
in
push
add
cmp
add
test
push
call
in
outsb
adc
sub
xor
add
cmp
push
fiaddl
cmp
mov
push
aam
add
out
or
mov
in
xchg
add
out
cmp
stos
bound
pop
call
add
es
fnstsw
loopne
add
add
inc
clc
inc
cmp
push
add
lea
add
rcll
add
sbb
loopne
inc
push
adc
aas
inc
jge
pop
mov
mov
cld
push
sbbl
add
pushf
add
aam
or
cs
xchg
lcall
sub
hlt
loop
mov
sub
mov
cmp
dec
mov
aaa
mov
nop
push
add
popf
rcrb
xor
sti
mov
aaa
pop
xchg
xorl
ja
jle,pt
inc
and
add
jmp
movb
adc
jp
xor
or
push
mov
dec
insb
lret
or
adc
inc
lcall
cltd
js
andl
inc
push
add
loopne
adc
movsb
or
fnstsw
xchg
sub
ret
add
bound
test
add
lcall
add
call
xchg
sub
ss
add
push
inc
add
pop
add
inc
add
pop
mov
stos
nop
dec
adcb
mov
push
cltd
popf
ffree
push
mov
jmp
jl
and
sub
dec
test
mov
mov
add
push
sub
or
sbb
adc
jnp
nop
rorl
add
pcmpeqw
jns
adc
mov
mov
and
cltd
mov
adc
dec
repz
dec
add
push
test
add
and
jbe
sub
pop
data16
imul
je
add
adc
fcom
jns
sbb
jno
inc
fisubs
loope
pop
mov
lock
pmaxsw
adc
add
or
add
pop
add
mov
add
in
ljmp
cld
and
cmp
xor
aas
mov
insl
clc
rclb
scas
or
push
pop
or
je
add
mov
push
xchg
push
lods
out
mov
add
and
loop
xor
sub
rolb
pop
cmp
pusha
test
push
mov
pop
mov
jge
add
mov
decb
push
push
push
or
rorl
jbe
mov
sbb
sbb
add
cmp
dec
push
cld
xor
and
xor
add
icebp
jbe
pusha
adc
add
and
pop
out
add
lock
testl
jo
pop
hlt
mov
push
add
mov
inc
xlat
lahf
jl
add
es
add
pushf
xor
pop
inc
add
jecxz
enter
call
and
xor
cmp
xor
imul
or
push
lcall
loopne
outsb
sub
add
ss
push
lea
push
scas
adc
inc
rorl
or
repnz
inc
stos
ss
add
adc
mov
cs
add
mov
jle
neg
add
lods
inc
push
mov
hlt
push
cmp
scas
fisubl
add
xor
adc
lock
in
push
add
imul
add
push
dec
mov
lock
add
in
or
scas
gs
add
cmp
mov
jne
popl
push
push
dec
test
fisttpll
cmp
fs
cld
mov
push
push
cwtl
std
add
or
mov
add
out
sub
fsubrp
or
sub
fsubs
push
adc
shlb
dec
add
test
mov
push
out
sbb
fistpl
pop
and
push
cmp
add
add
xor
enter
stc
shlb
outsb
ds
inc
mov
push
push
or
add
push
lret
cmpsb
call
cmp
ljmp
or
and
mov
mov
ret
push
push
or
sbb
loop
xchg
mov
adc
or
and
mov
ljmp
loopne
mov
insb
push
and
cli
cmp
push
negb
test
lcall
int
hlt
inc
loopne
je
clc
pusha
sbb
push
jl
shrb
rorl
push
test
add
and
fldl
push
pop
jbe
in
sub
xor
push
inc
ds
add
jne
data16
cmpsl
add
xor
add
in
and
add
clc
add
mov
add
cmp
aaa
xchg
pop
xor
mov
push
sbb
adc
dec
andb
cmp
and
add
add
inc
cld
push
mov
mov
gs
outsl
call
push
xor
adc
pop
ss
jmp
mov
inc
xchg
out
scas
jo
cwtl
in
add
and
add
push
or
pop
bound
inc
pushf
dec
das
mov
add
outsl
or
add
push
std
sub
in
xor
push
adc
mov
push
push
dec
dec
sub
nop
aad
xchg
push
test
mov
dec
dec
pop
adc
pop
repnz
scas
inc
loopne
dec
cld
bswap
test
or
adc
jbe
loopne
aas
out
ds
mov
inc
mov
push
or
mov
lahf
adc
int
xor
dec
cmp
or
mov
loop
push
sbb
pop
nop
rolb
inc
xchg
dec
das
and
jnp
mov
dec
cmp
mov
lret
xorb
add
call
add
addr16
push
mov
add
push
ret
test
adc
out
add
jae
cmp
aaa
fisttps
add
xor
xchg
rcr
add
cmp
ja
xorb
stos
mov
aad
jecxz
icebp
xor
insb
mov
mov
pop
stc
xchg
sbb
inc
dec
enter
sbb
push
fwait
jns
mov
push
outsl
add
cwtl
mov
cmp
je
lahf
xor
lret
in
pop
add
ret
popa
outsb
arpl
add
lcall
cmp
imul
mov
add
data16
or
push
mov
adc
inc
jb
mov
xchg
jge
jbe
add
pop
dec
hlt
cmp
pushf
add
sbb
in
stc
cmc
jbe
and
inc
inc
movzwl
clc
sti
int3
and
jne
add
sbb
lock
pusha
mov
dec
dec
xchg
icebp
xor
push
shl
mov
add
repz
pusha
mov
sti
add
push
subb
adc
jl
hlt
pop
add
inc
dec
in
or
jmp
add
cmp
hlt
or
add
sbb
push
pop
mov
push
sub
ljmp
jle
sbb
jl
jbe
ret
push
rorl
movswl
sbb
call
hlt
mov
movb
cmpb
das
inc
sub
rcll
sbb
jne
lea
in
es
dec
orb
jl
lldt
xlat
adc
roll
je
push
push
pop
lahf
fidivl
dec
repnz
mov
xor
cmp
and
sarb
loope
sub
in
clc
addl
ret
cmpb
cmp
sub
rorb
mov
mov
sbb
mov
and
dec
inc
mov
int3
add
mov
sub
pop
outsb
add
rdtsc
mov
cwtl
adc
imul
cltd
inc
les
xor
fnstcw
inc
faddl
xchg
xor
add
mov
insb
daa
mov
testb
call
test
hlt
loopne
popa
push
roll
mov
rorb
pop
add
jbe
adc
xchg
out
add
mov
mov
test
mov
call
mov
mov
imulb
cmpsl
jl
inc
test
add
xchg
lods
cmpl
je
push
jecxz
mov
adc
xchg
nop
call
daa
imul
pop
push
add
sub
addb
xor
pop
dec
sub
mov
hlt
sub
cli
push
mov
add
out
jb
fbstp
or
sbb
pop
jg
or
xorl
sub
enter
loopne
call
or
mov
add
adc
sbb
push
loopne
cwtl
inc
push
pushf
sgdtl
fdivs
fdivrp
jne
pop
rcl
cld
andl
mov
lock
aam
add
mov
fisttps
xchg
int
dec
repnz
sub
jne
faddl
add
mov
mov
sbb
test
cmpb
add
sub
add
mov
xchg
dec
data16
push
push
enter
dec
add
test
add
bound
mov
cwtl
dec
fsubrl
in
sub
pop
jae
jmp
dec
out
add
or
pop
add
or
rol
sbb
lds
jno
adc
sbb
push
test
push
add
rcl
lds
imul
test
and
gs
add
and
jnp
cmpsl
psadbw
jbe
inc
mov
inc
add
mov
fs
mov
push
xor
aad
add
cmpb
sub
mov
push
or
aad
sub
add
stc
add
andb
or
and
inc
outsb
mov
push
adc
dec
add
sbb
jp
ret
sub
adc
dec
pop
in
orb
mov
call
loop
mov
jl
or
enter
out
andl
add
or
jmp
mov
dec
push
nop
clc
arpl
mov
dec
aaa
or
fs
or
addl
pushf
xor
loope
fsubs
push
lea
cmpb
ret
arpl
jmp
rolb
and
mov
inc
and
loopne
add
or
add
loopne
inc
leave
pop
lods
cld
or
xor
testb
or
dec
adc
aam
cltd
test
sub
decl
insl
push
inc
pop
lds
add
add
minps
sub
cmp
test
jmp
or
add
push
mov
ret
ja
or
add
cli
pop
daa
adc
and
pop
data16
mov
pop
movsl
mov
inc
mov
insl
jl
je
push
xorb
jmp
push
mov
aad
gs
push
mov
add
adc
mov
lret
add
push
jbe
jecxz
add
xchg
gs
xor
sbb
push
push
add
leave
add
adc
bound
icebp
dec
fcoml
js
repnz
add
push
and
add
push
or
adc
cwtl
push
add
and
xor
ss
pop
imul
inc
push
test
scas
cld
jo
lret
jns
aas
test
xchg
idivb
imul
arpl
inc
outsb
push
movsb
hlt
lods
sbb
xor
in
add
call
dec
add
in
xor
cwtl
out
cmp
lock
inc
inc
mov
outsb
mov
insl
shlb
add
lods
dec
xor
mov
adc
js
add
sub
and
xchg
xor
fdivrs
lods
push
lods
push
push
jo
xchg
rcr
cld
pusha
mov
or
inc
cmp
in
mov
pushf
push
sahf
mov
pmaxub
inc
pop
jb
dec
jo
add
adc
or
push
lea
add
mov
mov
jnp
add
or
stos
pop
push
add
in
repnz
adcb
add
inc
add
and
fdivl
test
out
xchg
inc
jl
push
js
mov
push
inc
jns
xor
dec
dec
mov
xor
popa
es
add
pop
sub
jae
hlt
int
ja
add
dec
pop
loopne,pn
pop
cld
les
add
xchg
mov
in
and
int3
add
ror
pop
hlt
aam
cmc
or
lds
rol
xor
adc
push
jge
dec
ljmp
sbbl
mov
add
jp
add
psubsb
sub
push
and
in
call
mov
repz
das
clc
inc
and
push
dec
test
xchg
xchg
cwtl
add
sub
push
cmp
push
adc
sbb
fs
cmp
test
sub
add
jns
stc
mov
add
inc
dec
inc
inc
pop
mov
mov
push
sub
cmp
jb
sbb
push
push
sub
xor
push
repnz
in
push
das
xchg
icebp
xchg
mov
cmp
popf
add
shll
xor
fnstenv
add
push
outsb
imul
cmp
add
jno
jmp
push
inc
push
cmp
and
dec
push
and
mov
cltd
cwtl
jne
roll
das
adc
or
push
jge
dec
add
clc
jne
outsl
testl
and
push
incl
adc
stos
sub
pop
fs
xor
push
movsl
test
push
ljmp
outsl
popl
or
cld
js
flds
adc
jae
cmovne
pusha
and
lock
push
push
push
int3
push
push
or
mov
shl
je
sub
add
xor
push
mov
add
xchg
cmpl
add
imul
xchg
add
jo
and
jmp
lahf
dec
inc
enter
les
mov
mov
jmp
xchg
fmull
dec
popa
pop
jns
xor
mov
pop
push
sub
add
jmp
addb
clc
add
xchg
in
add
loope
adc
rolb
repnz
mov
add
and
add
pop
cmp
add
xor
xchg
add
adc
or
dec
nop
and
add
js
int
lret
pop
jmp
aam
flds
adc
add
addr16
test
pop
mov
xor
sbbb
push
xor
jne
data16
cmc
rclb
test
fisttpll
push
mov
test
adc
pop
mov
add
and
insl
add
jmp
inc
jle
fildl
or
movsl
notb
add
stc
inc
out
roll
pop
in
fsubrs
xchg
sub
adc
pop
mov
sub
inc
add
push
pop
cmpsb
or
mov
mov
mov
cmpl
ret
and
pop
into
inc
add
push
push
cmpsb
dec
pusha
data16
shr
leave
add
hlt
pop
sbb
mov
sbb
mov
sarb
call
test
pop
pusha
lods
ljmp
hlt
sub
loop
sub
jo
imul
pop
cmp
data16
add
mov
mov
push
mov
dec
add
scas
hlt
add
or
push
sti
ja
popa
add
mov
scas
mov
mov
add
jmp
jnp
popf
xor
add
loopne
add
lock
hlt
or
in
mov
adc
xchg
mov
lds
mov
es
mov
out
xor
xchg
sbb
data16
loopne
leave
push
js
jae
outsb
adc
dec
add
add
cmp
aas
mov
add
les
and
mov
leave
sub
sbb
dec
dec
push
mov
sub
mov
cmp
and
mov
sub
rorb
or
xor
fildl
addb
mov
push
sbbl
pop
pop
movsb
roll
aas
pop
les
add
mov
ret
aam
lds
stc
cmp
into
dec
popa
add
or
data16
or
inc
sub
sbb
cmp
sub
xchg
push
and
outsl
vmread
xor
jg
pop
and
clc
cmp
pop
jo
hlt
and
je
js
pop
or
push
adc
pop
out
xchg
sub
cmp
push
andb
andl
pushf
cmp
cmc
mov
adc
scas
je
push
das
cwtl
jl
pushw
inc
fs
and
mov
mov
or
dec
mov
cs
inc
pop
add
cmp
and
add
dec
scas
adc
push
dec
mov
jl
push
or
add
ds
pop
sarb
xchg
jo
ret
lea
add
std
shl
cmp
shll
mov
cmp
cwtl
daa
jmp
ltr
jne
add
sub
jb
test
and
xor
setb
sbb
mov
mov
inc
stc
call
outsb
dec
mov
add
mov
pusha
add
rolb
mov
and
mov
scas
xor
lahf
mov
adc
sbb
sub
add
inc
mov
jmp
or
adc
mov
add
sbb
movl
jmp
pop
cmp
jl
add
inc
jns
push
add
jp
ss
or
call
xor
movsb
lods
sarl
or
sbbb
into
rsqrtps
pop
dec
push
add
fldcw
les
roll
int3
jb
add
xadd
rclb
cmp
mov
in
and
mov
pop
cmpb
in
or
pop
or
sbb
jg
int3
repz
push
or
push
out
dec
mov
mov
lea
jmp
scas
mov
dec
mov
cli
lret
fs
lods
add
orl
add
leave
jne
inc
xchg
add
addl
jg
dec
in
dec
add
stos
jp
add
add
add
xchg
cwtl
adc
nop
push
out
add
gs
or
mov
fimull
imul
push
and
sub
push
or
int3
inc
mov
sub
std
inc
jne
add
adc
aam
shr
add
inc
mov
xchg
push
add
push
cld
cmpb
je
sbb
sub
add
leave
add
loopne
inc
movsl
testb
pop
mov
pop
push
popa
jb
cs
lret
les
jno
rclb
inc
cwtl
in
dec
bound
pop
jmp
add
aas
xchg
data16
sub
jecxz
push
into
stos
mov
hlt
dec
pusha
cmp
adc
sub
nop
rcl
cwtl
push
mov
scas
cld
jl
adc
lcall
or
clc
mov
xor
roll
fcompl
adc
xchg
inc
nop
cmp
lods
loopne
cmpb
add
sub
lea
pop
fwait
repnz
or
push
jg
add
test
adc
sub
cmpsb
subb
fs
dec
adc
pop
roll
in
stc
loopne
sub
xchg
pop
sbb
das
lret
lahf
cmpb
xchg
adc
and
imul
cli
cmpsb
mov
insb
insb
push
test
add
add
inc
outsl
insl
xor
cmp
add
bound
add
jns
mov
mov
rclb
mov
aam
push
adc
sbb
cmpl
pop
incb
inc
arpl
adc
xchg
sbb
xchg
mov
add
hlt
mov
add
adc
pcmpgtw
xchg
shlb
and
xor
je
and
add
dec
gs
test
jo
icebp
lret
subb
xor
test
sahf
fs
insl
add
adc
jae
mov
aaa
dec
add
nop
cmp
add
mov
xor
shlb
call
les
jbe
cmp
mov
call
mov
inc
jne
dec
xorl
and
loopne
leave
js
mov
inc
push
add
stos
push
pusha
xchg
xor
add
or
add
push
sbb
add
mov
and
in
xor
sub
lahf
mov
dec
pushf
or
adc
add
fs
mov
xchg
lock
add
and
bound
popa
xlat
call
add
testb
cld
xor
push
into
lock
add
call
out
adc
fucomi
stos
das
add
pop
or
cmp
jo
push
pop
add
push
cmc
incl
lds
push
xchg
sbb
popf
pop
pop
cld
loopne
jecxz
clc
xchg
add
pusha
popa
mov
jb
std
mov
inc
cmp
mov
fwait
add
cmc
push
push
int
ss
push
jmp
xor
pusha
add
lret
lock
jnp
fsubl
aas
add
cmpsl
pusha
pushf
sub
jecxz
add
pusha
movsb
fs
cli
lahf
pop
xchg
roll
inc
mov
xor
add
add
loop
popa
ret
or
push
jne
pop
pop
add
push
mov
add
ljmp
jae
addl
adc
jb
popa
mov
xor
and
inc
and
add
or
add
add
mov
sbb
sbb
addb
cltd
adc
add
or
clc
rol
add
icebp
nop
push
es
add
ret
inc
je
dec
pop
shrb
xor
rol
andb
inc
or
add
ret
jne
cmp
je
shl
in
add
int
fadds
inc
cmp
cltd
jne
or
inc
aad
sahf
andb
push
adc
negb
enter
jp
loop
pop
add
mov
lock
nop
push
pop
add
cmp
jp
or
jmp
or
jnp
add
mov
cli
jo
je
add
rolb
add
test
mov
mov
call
and
sbb
insb
pushf
notl
shlb
les
pop
mov
ret
push
test
or
cmp
adc
ret
xor
je
jp
ljmp
aaa
test
dec
icebp
lret
xor
loope
in
add
or
sub
add
add
mov
sbb
hlt
fwait
outsl
int3
or
adc
cwtl
aas
add
xchg
fisttps
int3
movsl
call
sbbl
add
rcrb
xchg
adc
aas
add
jae
dec
add
cmp
pop
or
adc
cmpsb
adc
mov
ud0
dec
add
lret
aaa
xchg
test
pop
movsl
sti
adc
incl
add
fs
pop
out
cmp
out
movsb
sbbb
adc
testl
lock
jno
add
ja
add
sub
push
inc
sbb
nop
and
pusha
push
inc
pushl
or
inc
dec
popf
cwtl
and
dec
or
jo
add
add
lds
and
xchg
pop
add
or
daa
or
pop
loopne
add
dec
fs
ret
sbb
jl
add
push
decb
je
add
push
out
add
push
hlt
add
in
cmp
and
scas
shlb
dec
inc
jle
pop
sbb
mov
xlat
sbb
fsubrp
nop
push
fdivrs
push
movsb
push
je
subl
hlt
jne
and
add
mov
test
lods
andps
sub
pop
jns
jbe
inc
and
or
rolb
into
or
shll
or
jp
inc
add
add
or
add
pop
lcall
cmp
ja
jne
xlat
push
ret
mov
out
pop
xorl
pusha
push
mov
icebp
xchg
add
jmp
hlt
mov
aas
add
xorl
jecxz
sub
les
mov
mov
jle
sbb
xchg
cli
pusha
and
cmp
scas
jno
pusha
mov
add
push
lods
push
sub
or
rolb
jg
pop
repnz
xor
incl
mov
out
mov
jmp
xlat
add
lcall
and
add
mov
adc
xor
add
fst
pusha
hlt
lods
add
and
xchg
mov
fs
fcmovu
loopne
shlb
mov
mov
movsl
pop
or
in
roll
push
mov
push
jo
rolb
add
pop
pusha
cmp
daa
or
clc
incl
or
sarl
mov
in
and
mov
add
jmp
xchg
adc
je
jl
add
inc
sbb
push
jo
sbb
pusha
add
sub
jno
add
das
xor
mov
push
jmp
push
or
add
stos
pop
jl
mov
sub
scas
es
std
adc
ja
add
stos
and
sub
aam
mov
jne
xchg
hlt
rorb
add
arpl
cli
jb
add
dec
fcoms
jo
push
ds
add
pop
sbb
add
or
sbb
lock
scas
cmp
add
cli
pop
mov
or
sub
and
add
aad
cwtl
cmpsb
push
xor
shrb
imul
mov
andb
loopne
push
in
enter
cmp
push
sbb
xor
adc
pop
insl
add
cmp
fmul
xchg
pop
sbb
aam
mov
test
rclb
pop
add
or
xor
int3
out
loope
loop
pusha
sub
out
mov
mov
rolb
pop
lea
pop
fisttpl
js
or
xorb
lods
dec
mov
jns
add
push
pop
mov
add
push
test
or
jl
add
xchg
mov
stos
lcall
popa
add
imul
jno
add
jne
ret
rolb
jp
stc
hlt
jmp
pop
and
lret
js
adc
lcall
push
test
or
adc
add
adc
cmpsl
dec
add
ret
lods
inc
mov
add
xchg
xor
add
sbb
dec
add
or
cmp
loop
jecxz
pop
aam
outsl
sbb
in
sub
or
ds
in
push
add
scas
inc
and
jbe
out
test
mov
scas
mov
call
push
xchg
test
pop
pusha
repnz
add
popa
and
mov
push
push
hlt
mov
bound
add
cmpb
jne
pop
stos
or
mov
jle
in
loop
lds
lods
adc
add
subl
jo
sbb
mov
pop
mov
xor
jp
pop
fimull
adc
out
repz
mov
adc
add
add
imul
daa
push
incl
pop
jl
jo
icebp
and
pop
sub
clc
hlt
test
inc
hlt
or
jmp
rcl
inc
int3
and
enter
jecxz
mov
jb
mov
lods
sbb
xchg
andb
imul
std
add
daa
stos
sub
or
add
shlb
mov
addl
cld
andb
jne,pn
outsb
loop
add
dec
jmp
fwait
add
scas
mov
xor
jmp
adc
mov
add
and
divl
mov
repz
pop
test
xorl
sbb
rorb
mov
add
dec
jne
mov
imul
add
pop
inc
out
pushf
dec
dec
dec
add
enter
push
add
jbe
bound
push
icebp
lcall
pop
push
add
add
sbb
push
add
lea
cmp
aas
in
add
inc
or
es
lods
sbb
sbb
adcb
jnp
add
movsb
aaa
xor
sub
jle
add
and
add
push
mov
push
jb
or
inc
push
adc
push
push
cwtl
aad
add
xor
jge
es
adc
xor
orl
add
adc
inc
add
mov
xchg
jl
lahf
adc
jnp
cmp
xchg
stos
xor
add
movsb
lock
mov
jne
rorl
xor
mov
ljmp
aaa
mov
add
adc
ljmp
jl
adc
add
add
xlat
add
int3
dec
inc
pop
and
shlb
test
sbb
jmp
enter
jbe
sete
sbb
inc
add
or
cmp
push
push
add
test
add
pop
and
add
into
cwtl
xor
gs
xchg
movb
test
adc
mov
adc
js
lahf
shlb
dec
in
icebp
pusha
and
movsb
fnstcw
addb
pushf
mov
mov
xchg
sarl
push
fadd
inc
add
sbb
pop
inc
inc
popf
jecxz
add
out
add
sti
xorb
sub
fs
pop
inc
arpl
ds
sub
loope
lds
inc
xor
nop
add
and
cmpb
add
out
mov
repnz
pop
pop
inc
add
cmp
test
adc
out
adcb
jge
aam
and
es
std
adc
pop
sbb
loope
dec
mov
and
inc
xchg
mov
jl
add
cmpb
je
sbb
rolb
adc
add
adc
insb
push
add
loop
cwtl
sub
xor
push
adc
mov
pop
aam
mov
cld
loope
add
mov
add
push
daa
ja
add
xor
aas
jmp
add
jo
sub
lea
rcrb
add
lret
add
xchg
dec
push
test
and
int3
add
mov
sahf
add
sbb
add
jle
mov
mov
push
cwtl
jp
cmp
or
mov
push
sbb
out
loop
pop
incb
stos
cmp
sub
inc
add
test
shll
outsl
je
shll
jne
push
adc
inc
int3
dec
add
inc
dec
dec
and
add
cs
imul
dec
mov
cld
inc
add
out
sub
call
pushf
fiadds
outsb
sbb
mov
nop
cmp
add
mov
add
cmp
mov
and
daa
sub
push
dec
cmp
pop
mov
jge
in
push
lahf
inc
jp
add
push
cmp
cmp
loope,pt
jl
cmc
add
push
xor
and
push
adc
jnp
test
fsub
xchg
adc
dec
add
inc
rorb
add
add
inc
push
dec
ret
cmp
adc
les
jmp
push
add
push
and
dec
cmp
add
repz
out
mov
lcall
inc
aas
rcl
add
sbb
xchg
xchg
cli
jne
pcmpgtw
sub
stos
hlt
lock
push
ret
cmp
movsl
sbb
rcr
inc
imul
ja
scas
out
lea
mov
movsl
cwtl
data16
hlt
jg
or
addl
repz
fdivrl
inc
add
mov
push
insl
cmovp
imul
pop
dec
pop
push
jne
xchg
pop
inc
sub
out
push
into
lock
sub
xor
das
nop
insb
pop
popa
imul
lods
jb
and
cmpl
cmp
xor
add
pcmpgtd
fcmovne
inc
call
add
mov
pop
bound
push
adc
dec
add
stos
pop
ljmp
test
mov
mov
sbb
xchg
lods
lock
es
sub
push
add
in
sbb
jl
pop
imul
add
xchg
inc
mov
fldl
adcb
rcrb
mov
sbb
add
add
xchg
sub
idivb
xor
and
incb
sub
rcrb
test
xor
jb
shlb
sbb
outsb
sub
xlat
cwtl
sbb
data16
pop
add
sub
mov
call
add
sbbb
push
loopne
cmp
pop
cmc
testl
imul
cmp
testb
dec
outsl
xorb
in
push
adc
js
out
add
enter
testl
shll
push
mov
push
gs
jb
cmp
inc
sub
add
inc
lods
lock
pop
or
notb
add
popf
call
inc
ja
test
das
add
adcl
and
rclb
outsl
add
imul
fsubrl
push
or
test
std
adcl
add
mov
mov
lret
pusha
in
pop
push
mov
xchg
push
shlb
lea
subb
pop
adc
das
push
aaa
add
aad
dec
mov
dec
xchg
call
in
add
lock
push
out
sysret
test
xor
mov
int3
jge
enter
inc
add
add
add
sahf
xchg
leave
stos
add
cwtl
test
imul
popa
les
add
xchg
ss
inc
add
or
sbb
enter
shlb
push
xor
mov
adc
xor
add
cltd
pop
cmpb
fs
aas
cwtl
pop
pop
add
or
pusha
xor
clc
push
lods
adc
and
add
and
jne
cmp
add
mov
adc
ja
test
dec
shlb
std
add
ficompl
jno
sub
xchg
sbb
outsb
add
in
add
dec
adc
inc
repz
movsb
cmp
sub
jnp
lret
add
pop
or
and
inc
enter
add
cvtpi2ps
cmc
fs
mov
jne
pop
inc
inc
add
xor
pop
lahf
in
fnstcw
or
mov
jle
ret
push
lods
jl
call
pop
mov
or
inc
push
push
pusha
adc
jae
test
cmpb
lahf
mov
fdivrl
xchg
xchg
xchg
mov
add
pop
adc
movsl
push
add
gs
test
mov
pop
repnz
shrb
inc
scas
jl
jno
jmp
loopne
and
add
push
data16
insl
add
fs
xchg
add
and
leave
xor
xchg
mov
inc
sbb
mov
ret
push
push
inc
xor
cmpsl
scas
test
in
sahf
add
xor
imul
andl
sti
mov
sbb
shlb
les
add
dec
test
cmp
rclb
adc
and
inc
pushf
add
in
call
pop
xor
push
lock
test
or
pop
jge
popf
sub
jno
fmuls
aas
test
adcb
imul
dec
js
jns
clc
cmpsb
or
inc
arpl
adc
jae
enter
icebp
popf
es
insl
or
std
adc
mov
hlt
pushf
cmp
push
jle
push
or
push
call
xchg
stos
add
or
rolb
mov
dec
rcrl
hlt
add
fldcw
add
bound
sbb
sub
add
movzbl
jbe
push
das
in
add
sub
jne
mov
mov
inc
in
push
push
jmp
inc
xchg
jmp
inc
enter
add
or
or
inc
cmp
insl
jno
imul
aas
xor
sub
shrl
mov
add
sarb
push
xchg
pop
push
fidivs
hlt
inc
mov
add
adc
addl
sub
and
push
push
and
xchg
push
shrb
mov
or
adc
clc
mov
ret
cmp
fwait
and
rcll
dec
adc
and
adc
adc
mov
mov
xchg
call
add
cmp
test
push
imul
nop
imul
aam
adc
cld
mov
and
push
shrb
scas
add
jl
pop
nop
mov
xchg
pop
sub
addl
mov
inc
sbb
xchg
faddl
jg
pop
dec
sarb
mov
or
jnp
or
add
cs
add
sub
adc
popw
jle
add
test
xchg
lret
mov
jno
add
adc
push
cmpsl
sbb
jle
add
sbb
xchg
sub
and
fs
add
xchg
inc
mov
add
les
enter
and
xchg
shlb
or
fldl
pop
add
xchg
push
aam
pop
scas
xchg
add
cwtl
iret
cmp
pop
test
mov
sub
dec
xor
ds
push
fmuls
cli
mov
jg
push
pop
cmp
test
lcall
or
mov
addb
push
fs
cmp
add
setg
loop
jmp
inc
lcall
sarb
pop
and
jg
std
cli
adc
adc
mov
jae
insl
pushf
dec
xchg
add
push
hlt
cwtl
nop
pop
test
add
shr
inc
sbb
add
clc
movsb
or
lahf
test
out
or
push
push
mov
push
jge
std
out
pop
xor
cmp
ja
push
jns
test
clc
pushf
add
dec
add
aam
mov
mov
or
xchg
pop
add
cmp
cs
pusha
and
cmpb
in
das
and
push
xchg
aad
and
in
mov
add
mov
mov
adc
adc
movsl
sar
sub
rclb
js
popf
in
add
add
ds
lods
add
adc
add
xor
adc
add
mov
sub
cmp
mov
push
cmp
dec
leave
fldt
insb
mov
or
mov
add
hlt
mov
add
push
in
add
xor
outsl
test
mov
test
or
data16
dec
in
mov
mov
in
add
dec
mov
imul
pop
dec
or
dec
jae
mov
ss
push
adc
add
inc
repz
pushf
dec
add
cmp
sbb
mov
cld
loopne
xor
sbb
dec
sub
cmpl
je
and
push
jo
inc
bound
fs
sub
shrb
scas
sbb
lds
das
js
adc
outsb
add
xchg
push
bound
js
jnp
in
sbb
notb
add
xor
add
inc
push
mov
jl
dec
out
repnz
and
sub
ficoms
mov
fstl
cmp
xor
loop
sarl
andl
xorb
es
bound
imul
and
pop
dec
add
outsl
shrb
mov
add
les
andl
hlt
pmuludq
mov
jle
add
imul
add
and
add
pop
adc
add
push
outsl
push
mov
mov
into
push
xor
add
imul
je
add
jnp
pop
sub
cmp
dec
orb
sbb
pop
xchg
inc
pop
stos
push
lahf
inc
popf
pop
cmp
push
add
mov
push
sub
mov
dec
push
cmpsb
cmp
add
dec
jne
adcw
jge
add
push
imul
dec
inc
adc
dec
adc
das
inc
testb
sub
and
add
mov
nop
lahf
sub
pop
lods
xor
addb
dec
aas
sti
and
movsl
adc
adc
push
mov
adc
add
ds
lldt
push
inc
or
push
add
xchg
mov
or
sub
add
nop
mov
aad
jmp
sub
add
orb
push
jo
mov
lret
and
mov
mov
sbb
mov
subl
cli
pushf
test
stc
repnz
out
inc
idivb
sub
mov
test
aas
push
xor
lock
push
rcrb
dec
cmp
loopne
xchg
hlt
push
xchg
mov
mov
rcrb
adc
xor
add
sbb
rcl
pop
add
ror
rorl
shlb
int3
in
andl
fdiv
rolb
add
push
lret
xchg
addr16
add
push
push
jnp
dec
xor
in
scas
int3
push
clc
in
adc
mov
mov
loopne
mov
je
adc
or
mov
shl
lock
mov
and
sub
push
pop
pop
cli
into
sub
jmp
rorl
sbb
jo
xor
sbbl
sbb
and
dec
push
pop
push
femms
xchg
stos
les
clc
enter
test
cmp
bound
add
push
pop
aaa
pop
mov
mov
adc
lahf
xor
out
rolb
or
pop
add
dec
add
xchg
pushf
mov
das
sbb
sbb
pop
add
mov
mov
imul
in
cmp
sub
mov
add
cwtl
dec
xchg
sbb
das
movl
sbb
sti
and
clc
cmp
jb
mov
enter
inc
add
call
add
les
inc
add
fidivrs
aam
sub
pop
pusha
in
push
push
pop
insb
adc
jns
adc
cmovp
cmpsb
testl
nop
mov
repz
mov
inc
repnz
cmp
ret
cmpsl
fnsave
mov
call
sbb
pop
lods
mov
fnstenv
jnp
cmovs
sbb
cmp
dec
dec
inc
pop
inc
cmp
adc
or
sub
inc
dec
cmp
mov
inc
or
lret
add
cmp
popf
leave
dec
or
xor
xorb
add
mov
add
adc
cmovb
cld
mov
or
in
sub
add
ret
test
add
movsb
icebp
mov
jmp
adc
mov
push
aas
add
hlt
adc
cwtl
iret
mov
sub
add
jmp
push
add
inc
fldl
mov
jne
pop
sahf
mov
jmp
mov
pop
dec
mov
rclb
mov
pop
ds
pop
adc
cmp
push
add
dec
test
shll
mov
jo
test
aas
jb
or
sbb
add
fdivp
dec
popa
inc
add
cwtl
jmp
daa
dec
jp
out
clc
add
add
cmp
add
push
mov
or
sbb
xchg
sbb
in
pop
ljmp
inc
ja
addb
lret
pop
hlt
pop
adc
add
clc
cmp
add
mov
add
lock
add
sub
sub
testl
add
es
lret
sbbb
fldl
add
dec
sub
loopne
pop
loope
jns
das
or
mov
lods
add
jo
add
sbb
cmpsl
add
sub
sbb
push
xor
arpl
popf
jg
inc
xor
or
add
add
cmp
ja
push
add
fnstsw
imul
jge
sub
inc
xchg
add
je
push
dec
ret
arpl
mov
add
push
adc
sbb
jo
add
push
xchg
pop
inc
sbbb
rep
jle
push
testb
stc
inc
loope
incb
sub
cmp
sahf
imul
xchg
sbb
js
repnz
lock
aaa
mov
cmp
xchg
fs
in
push
imul
sarb
loope
pop
adc
incb
fs
lds
test
and
or
pop
sub
cmp
mov
jne
pop
add
sbb
movsb
add
adc
push
pop
mov
push
add
movsl
cmpb
sub
jmp
add
inc
adcb
fwait
popa
sahf
cmp
pop
rdpmc
int3
push
and
add
lret
push
cmp
pop
and
cmp
insb
iret
loopne
adc
or
sbb
pop
lret
subb
xor
pusha
inc
sbb
sahf
jne
cmp
add
out
sbb
ret
pop
cmc
dec
je
pop
add
in
scas
sub
add
mov
dec
push
shrb
mov
test
pop
jno
in
into
popa
cmp
or
ljmp
add
lods
enter
div
add
js
cmpl
inc
xchg
lea
add
std
in
add
xor
fdivs
fiadds
jle
push
repz
pop
adc
add
cli
ljmp
and
xchg
xchg
and
out
xorb
cmp
das
je
add
imul
add
mov
cld
loopne
add
test
push
dec
push
aam
pusha
cwtl
out
sbb
repnz
add
add
decb
sub
rep
test
add
ret
daa
aaa
pusha
push
pop
jb
or
push
mov
pcmpeqd
inc
jne
mov
mov
mov
inc
mov
or
pop
fsubrl
add
cs
inc
jl
loopne
clts
push
sub
jle
bound
jmp
arpl
sarl
add
push
mov
enter
rcrl
add
mov
inc
add
jmp
dec
sbb
sbb
sub
and
je
add
or
add
adc
jmp
jg
incb
push
add
leave
negb
add
mov
add
pop
push
sub
mov
cld
add
enter
cmp
fstp
aam
icebp
add
jge
sub
jno
fdivrs
jb
pop
aaa
cmp
cmp
adc
inc
add
pop
push
add
orb
add
and
into
add
cmp
mov
sbb
add
mov
sbb
inc
jne
mov
pop
aam
call
push
adc
push
mov
sbb
dec
lahf
mov
adc
jae
pop
mov
adc
rcrb
prefetch
and
and
add
xchg
dec
fcoml
mov
jp
add
sub
dec
clc
adc
ret
insb
jmp
push
lock
add
repz
xor
jnp
add
push
insl
adc
mov
mov
dec
out
jno
lds
dec
dec
int3
and
inc
mov
sub
fdivl
add
popa
outsb
xchg
addr16
mov
inc
add
add
ja
mov
inc
jg
int3
push
jne
mov
mov
flds
dec
ret
cmp
add
sbb
or
out
cmp
addr16
cmc
gs
iret
add
or
or
loop
mov
cmp
push
movsl
jp
test
pop
mov
loopne
xlat
push
repnz
decl
jmp
or
hlt
mov
add
xchg
lds
adc
call
mov
pop
jbe
and
add
rorb
add
inc
pop
and
mov
call
loopne
fwait
dec
iret
xlat
gs
add
xor
pop
add
repz
xchg
nop
stc
add
ljmp
or
add
das
icebp
jmp
scas
leave
or
cmpsb
xor
bound
cmp
sbb
jo
or
mov
andl
call
fdiv
addr16
xor
dec
add
dec
jbe
test
inc
pop
mov
xor
mov
xchg
push
add
adc
cmp
sbb
jns
add
or
and
push
or
sub
xor
jns
add
push
shl
dec
hlt
jo
jae
adcb
cwtl
sarb
sbb
xor
add
jae
fs
mov
nop
test
jecxz
loop
repz
sbb
dec
lods
add
shlb
xchg
cwtl
pop
rolb
out
loop
rolb
mov
or
push
hlt
jg
add
rorb
and
pop
fadds
dec
test
in
adc
jp
rclb
jle
sar
les
xchg
sbb
je
lidtl
out
dec
pop
adc
add
mov
mov
cmovl
inc
dec
dec
icebp
out
outsl
cmp
ds
pop
sbb
sub
fadd
dec
dec
out
pop
push
inc
leave
pushf
loope
adc
rolb
inc
jp
fidivs
clc
ja
add
adc
inc
or
mov
std
aad
inc
or
cmp
xchg
push
bound
mov
inc
sbb
nop
or
or
and
mov
rclb
repnz
and
push
jnp
add
adc
push
lods
lahf
pop
mov
and
adc
orl
push
add
xchg
jo
xor
lcall
jle
cmpsb
test
push
inc
pminsw
loopne
js
xchg
sbb
push
mov
inc
shr
xorl
or
and
push
mov
or
mov
ss
enter
stc
push
scas
add
sub
setb
cmp
add
mov
faddl
imul
or
flds
cmpsl
and
pop
arpl
adc
ret
pop
cld
iret
pop
movsl
jae
cmp
cmpl
fidivs
pushf
add
add
mov
andb
inc
sarb
mov
lret
add
aad
or
push
decb
dec
jp
sub
std
pusha
push
adc
xchg
jle
add
in
jmp
add
sub
cmp
sti
push
dec
adcb
dec
movsb
outsb
jge
scas
sub
mov
inc
inc
sub
loopne
mov
lcall
fidivl
les
nop
sub
rcll
outsb
jno
add
and
mov
loop
sbb
cmp
add
inc
imul
add
add
dec
adc
aad
loopne
and
stos
xchg
fidivl
enter
ret
mov
lods
insl
add
add
mov
add
adc
insl
lods
movsb
fnstenv
mov
cld
and
sbb
mov
inc
clc
mov
push
jge
je
push
push
and
pusha
lret
jb
lds
xchg
add
pop
fldt
rclb
mov
push
xor
push
add
sbb
adc
xchg
mov
nop
cmp
jo
fstpl
lcall
add
out
pop
add
loopne
add
xor
loope
mov
cmp
rol
loop
sahf
mov
or
add
or
pop
rcrl
mov
sub
pop
pop
iret
mov
insl
add
movsl
std
sbb
xchg
daa
rcl
cld
sbb
or
add
pop
mov
test
inc
push
loop
mov
and
lret
adc
cmp
ss
push
dec
or
add
aas
jnp
aad
add
and
arpl
cmpsb
hlt
jo
add
mov
aam
mov
ficoms
cltd
add
add
rcrb
dec
add
aaa
pop
ds
mov
testb
add
dec
and
out
lahf
clc
stos
add
push
fimuls
cmp
push
xorb
jno
shr
nop
pop
jge
es
outsb
add
popf
cld
mov
inc
and
imul
jl
sbb
dec
lds
mov
jmp
jne
add
fidivrs
daa
inc
in
add
push
dec
aad
sub
cmp
jge
pop
adc
inc
add
jae
xor
rcrb
stc
lcall
inc
mov
pushl
pop
pushf
shlb
inc
mov
call
pop
das
add
ja
adc
sub
repz
in
test
cmp
sub
lcall
repz
pop
add
loopne
cmp
lock
cwtl
xchg
ljmp
or
sub
inc
adc
inc
and
mov
enter
clc
and
jmp
and
arpl
fstpl
fwait
aad
nop
orb
mov
cmp
push
sub
lods
jne
mov
add
sub
pushf
push
rolb
sbb
mov
push
xor
ds
or
enter
ret
jg
add
adcb
pop
mov
add
mov
fcmovnu
push
rolb
fwait
pop
jmp
pop
jmp
nop
sbb
add
cli
push
mov
cltd
mov
push
add
stc
add
inc
add
or
pop
add
icebp
in
fisttps
mov
xlat
lea
mov
xchg
stc
pop
stc
enter
pop
add
sub
add
adc
push
pop
sbb
pop
add
push
fs
ret
mov
or
roll
subl
push
flds
mov
fcmovnbe
mov
or
mov
subb
mov
repnz
fisttpl
faddp
fsubs
jecxz
fsubrl
sahf
ja
sub
push
pop
dec
sub
out
jb
xor
inc
xchg
cmpb
inc
jo
push
add
stos
rorb
aas
rolb
or
add
mov
push
add
call
nop
push
cmc
adc
dec
adc
mov
mov
cmp
rorb
add
jnp
out
adc
shlb
loop
push
add
or
sbb
adc
cmpsl
aas
dec
leave
nop
sbb
loopne
add
lea
inc
add
add
pop
or
pop
cmpsl
push
lea
movsl
in
aad
sub
mov
lret
xchg
cmp
adc
fisttps
sbb
dec
loop
lds
add
fistpll
outsl
xchg
andb
jg
int3
pop
add
or
dec
sub
add
inc
sbb
push
outsl
test
and
icebp
adc
fwait
les
lcall
cmc
and
sbb
push
jns
scas
or
and
add
mov
cmp
rolb
mov
mov
add
xor
pop
jo
xor
pop
repz
lcall
rolb
mov
pusha
test
lds
or
mov
andb
sub
filds
pusha
in
fdiv
adc
add
in
aam
push
and
sar
pop
mulb
out
cld
popl
aam
inc
add
inc
sarb
popf
inc
fidivrl
lds
add
ja
bound
adc
xchg
loopne
add
cmpsl
out
cmp
push
ret
fstpl
out
incl
jp
cmp
jecxz
pushf
ret
icebp
push
add
inc
mov
out
xchg
shrb
sub
lcall
outsl
add
sahf
or
popa
icebp
add
mov
sbb
popl
dec
xchg
xchg
cmp
add
les
pop
fstl
add
mov
nop
sub
push
sbb
cli
add
mov
jnp
and
push
pop
jo
imul
xor
mov
add
cmp
xchg
push
add
hlt
daa
jo
add
pop
stos
sbb
jge
push
inc
or
insl
sbb
lcall
in
popa
in
ljmp
les
enterw
pop
cmpsb
imul
add
push
cmp
cwtl
push
xchg
lret
push
cmpb
punpckhbw
mov
cld
lock
jo
cs
test
mov
shrl
xchg
aad
sbb
add
xorb
xor
add
mov
and
add
jbe
jo
jmp
icebp
stos
dec
jl
jecxz
mov
cs
push
inc
into
pop
loopne
rolb
dec
jg
or
test
enter
fadd
out
es
cmpsl
push
stos
fsubrl
xor
jo
add
cs
scas
dec
cmc
add
rorb
jle
nop
add
leave
pop
ds
inc
cmpb
pop
jp
movb
sbbl
add
add
push
mov
add
int
jecxz
mov
add
ss
adc
addl
pusha
push
outsb
jb
gs
imul
and
clc
call
dec
add
add
leave
imull
add
stc
mov
cltd
inc
push
lock
clc
cmp
test
cmpsl
mov
sti
imul
mov
ds
mov
adc
jne
setbe
add
gs
and
add
adc
push
mov
add
cmpb
add
clc
pop
xchg
jo
xor
add
fwait
inc
pop
add
adc
and
and
add
lahf
add
xchg
jne
mov
push
hlt
orb
mov
sbb
mov
xorl
popl
das
fldenv
ss
lods
scas
add
loopne
adc
sbb
hlt
mov
out
adc
arpl
mov
xor
mov
add
inc
fsubs
mov
ss
pop
push
add
mov
mov
jo
add
cwtl
and
ds
inc
shl
add
sbb
fidivrs
mov
verw
pop
je
push
mov
add
sub
mov
adc
dec
or
mov
sub
pop
mov
or
jbe
lea
hlt
inc
add
pop
loope
imul
jmp
push
loopne
xchg
jns
lsl
xor
add
outsb
push
jp
pop
rorb
cmp
sti
add
loopne
jns
push
xor
in
sub
sbb
adc
fsubl
sbb
hlt
movsl
add
loopne
mov
pop
add
or
sbb
filds
int3
jg
xlat
sub
jnp
jmp
add
adc
arpl
pusha
add
and
adc
nop
pop
movsl
add
daa
das
andl
xor
jmp
add
scas
mov
repnz
xchg
jle
push
ljmp
cmp
in
xchg
add
inc
xchg
jnp
cltd
ss
scas
enter
inc
incb
or
mov
in
data16
inc
and
add
fwait
pxor
cmp
fucom
std
pop
xchg
push
push
in
out
add
out
jbe
psadbw
add
cmp
mov
push
add
xor
rcrl
ret
add
sub
jp
or
sub
pop
mov
dec
xor
in
rorb
mov
movl
clc
add
jmp
jl
pop
xor
cltd
cmc
add
push
lods
das
cmpsb
fldl
xlat
fwait
shlb
std
add
into
pop
add
in
out
or
jl
add
out
jb
mov
add
push
or
jns
dec
mov
fld
fdivrs
add
mov
cwtl
nop
push
pop
push
dec
arpl
push
cmpsb
push
xchg
push
pop
add
cld
dec
sub
and
cmp
cmp
rolb
add
cmp
cmp
stos
pop
cwtl
roll
lds
lahf
in
cwtl
adc
add
add
pop
lcall
cmp
add
or
sbb
add
push
dec
add
push
cmp
dec
sub
out
enter
inc
add
rolb
pop
cmp
mov
aam
icebp
mov
jo
add
push
loopne,pn
pushf
lret
sbb
jne
cs
ja
xor
jg
nop
and
add
add
inc
cmp
add
or
mov
sbb
cwtl
hlt
stos
and
pop
addb
sbb
ret
fsubl
add
mov
out
sub
jge
fldenv
xor
fs
arpl
xchg
cmpsb
mov
add
lret
mov
lea
mov
cmp
jb
sbb
faddl
sub
out
mov
sbb
push
and
mov
leave
pop
pusha
push
xor
inc
pop
xchg
dec
xor
aad
test
test
xchg
sbbb
add
cltd
rcrb
mov
cmc
and
dec
pop
adc
inc
mov
aad
add
mov
hlt
loopne
pop
enter
dec
add
repz
adc
pop
jo
stc
push
push
rolb
cmp
xlat
in
add
cli
shl
adc
xchg
mov
lret
add
aam
addb
int3
add
or
cwtl
adcb
mov
push
loope
test
add
das
add
cli
xor
movsb
pop
mov
sub
leave
rolb
sbb
lds
inc
xchg
inc
add
loope
or
leave
xchg
add
mov
popl
imul
jb
add
outsl
dec
fiaddl
jmp
repnz
sub
pop
in
aam
in
int3
mov
ret
inc
scas
andb
or
add
in
sbb
adc
cmc
sub
cmp
add
mov
adc
add
or
mov
cmp
mov
mov
push
cmp
cwtl
or
mov
xchg
sub
xor
fildl
inc
jne
cld
add
fisttps
push
insb
stos
into
enter
dec
icebp
xchg
outsl
xchg
add
cmp
add
xor
mov
inc
and
jle
repnz
lret
fwait
or
jle
sbb
xchg
mov
outsb
cli
adc
rcl
icebp
inc
mov
cmp
add
add
mov
add
or
stc
inc
or
push
push
std
dec
jge
add
sahf
imull
in
movl
inc
imul
sbb
add
add
add
pop
pusha
add
mov
jmp
jmp
add
mov
fwait
mov
cli
fdivr
nop
and
das
loope
push
add
stos
mov
or
push
jg
insl
add
pusha
and
mov
dec
mov
inc
divl
out
ret
dec
cmp
test
neg
add
ret
mov
and
push
add
push
popa
adc
setge
xorb
pop
cld
adcb
icebp
test
adcb
gs
inc
add
sbb
inc
das
add
je
pushl
lock
add
mov
cs
dec
mov
pop
add
in
sub
pop
jmp
inc
clc
scas
adc
out
rolb
sbb
test
das
mov
adc
jne
add
cltd
sahf
cmp
clc
add
or
inc
jbe
in
cli
add
sti
addl
or
std
adc
lcall
or
mov
xor
adc
cmpb
dec
pop
test
sarb
mov
pop
sti
sbb
pop
in
mov
or
or
loopne
pop
nop
prefetch
andb
mov
add
imulb
pushf
test
add
fnstenv
mov
xchg
mov
test
outsb
popa
nop
xchg
or
add
jne
lcall
inc
dec
dec
test
mov
jnp
les
cmp
cwtl
adc
fs
add
shlb
mov
add
movsb
push
add
daa
in
adc
aad
add
dec
push
add
adc
pusha
add
lret
mov
mov
clc
push
push
out
add
das
xor
push
lea
ja
and
incl
ss
jmp
aas
rcrl
cmp
adc
lret
xor
repnz
aas
dec
mov
xor
mov
outsl
cmp
mov
stc
or
hlt
std
in
pop
sub
and
shlb
in
lods
push
mov
pop
sbb
add
jl
push
inc
xor
cmp
movl
mov
cmc
into
insb
cwtl
ret
enter
dec
mov
str
adc
add
push
pusha
cltd
mov
inc
dec
jmp
data16
mov
add
push
and
xor
sbb
push
pop
call
shlb
lods
test
orb
pop
and
dec
add
ret
movsb
clc
adc
xlat
adc
add
ljmp
dec
stos
push
mov
mov
pop
push
adc
fsts
add
cmova
int3
dec
xchg
cwtl
push
sbb
push
add
cmpsb
insl
rcrb
push
sbb
movsl
add
add
arpl
add
jmp
dec
xchg
and
mov
sahf
xor
add
enter
test
jmp
loopne
shl
jo
add
int
cmp
hlt
or
xchg
dec
out
jb
xor
lret
add
or
jnp
mov
mov
test
add
inc
pop
iret
shrb
ficoml
or
fsts
addr16
cmp
scas
cs
sub
add
outsb
jecxz
enter
add
fimuls
fucomi
mov
add
add
xorl
xchg
mov
pop
cli
push
fisubl
sub
add
mov
mov
repz
add
cmovp
push
sub
add
and
add
xor
movl
dec
push
or
adc
sti
lahf
pop
add
imul
mov
add
add
js
add
sbb
push
roll
aas
fmul
repnz
jo
add
inc
clc
adc
adc
sbb
push
cwtl
mov
adc
sbb
pushf
add
sbb
cmp
mov
and
push
sbb
out
add
ss
insl
sbb
cmpsl
daa
arpl
rcl
adc
data16
add
hlt
xor
sub
or
es
rolb
xor
cmp
or
add
pop
cmp
mov
scas
rorb
jno
add
xchg
int3
sbb
lcall
xchg
xor
jle
mov
cmp
js
dec
or
jne
movl
imul
or
fidivl
add
roll
data16
mov
push
cltd
pop
add
loopne
or
orb
fs
add
jns
add
sub
daa
adc
push
subb
sbb
es
cltd
sbb
out
inc
lods
mov
addl
or
xchg
push
mov
adc
jg
mov
add
repz
cwtl
adc
adc
out
les
inc
mov
push
jl
or
add
sub
loopne
add
decb
fcoml
mov
dec
cld
and
outsl
fiadds
sbb
fsubl
lahf
mov
test
sbb
add
ja
cmp
xor
sbb
pop
sub
or
inc
sub
mov
cmpb
sub
bound
jge
add
push
lcall
leave
pusha
pop
or
add
pushf
out
add
lahf
inc
lcall
push
mov
xor
and
bound
pusha
dec
add
jge
icebp
sarb
add
inc
add
adc
lods
add
adc
icebp
add
mov
lea
xor
adc
add
lret
inc
cmpb
jg
in
cmp
or
add
add
push
xor
orb
andb
add
lea
cli
push
int
add
xor
add
mov
sub
cltd
xchg
jge
cmpl
push
in
xchg
sahf
test
std
int3
leave
add
and
scas
fs
or
add
sub
xchg
lret
ret
add
out
lea
and
jg
or
sbb
jne
push
cwtl
jle
mov
xchg
sbb
adc
add
and
movsl
add
popa
adc
lret
add
stos
or
repz
je
popf
push
js
add
fisubs
pop
add
daa
popa
push
add
std
fimull
inc
mov
or
das
test
adc
add
cld
test
inc
imul
js
jle
arpl
in
add
xor
jne
lods
es
add
or
push
xchg
int3
add
jmp
bswap
sub
mov
fs
sahf
push
test
add
xor
loopne
loope
fstpt
push
pusha
out
pop
pop
xor
jb
je
cld
adc
loopne
lahf
push
or
add
cmpsl
addr16
daa
outsl
imul
or
add
jne
inc
ds
and
xchg
xlat
xchg
rol
sbb
or
and
test
fistpll
jbe
mov
push
scas
sub
lock
pop
add
mov
add
popf
insb
push
sbb
mov
hlt
sbb
sbb
jle
cmp
and
add
mov
pop
int
mov
adc
sbb
sbb
aam
pop
ja
jge
movsb
mov
or
push
push
imul
fnsave
je
push
mov
jg
add
outsb
xchg
cli
mov
test
cmpsl
repnz
mov
xchg
adc
orb
sub
lock
stos
sub
sbb
add
int3
arpl
add
pop
mov
jge
fimull
nop
loope
xor
cmp
add
push
xlat
sub
gs
sbb
nop
mov
imul
int3
std
xorb
dec
mov
dec
jp
loopne
dec
push
adc
movsb
mov
or
dec
test
out
insl
scas
sub
push
jae
add
inc
int3
jo
add
nop
out
push
cltd
mov
jno
sbb
jecxz
pop
push
add
jl
jns
jl
push
push
and
inc
mov
call
xchg
mov
hlt
in
shlb
clc
rorl
lods
xor
pop
push
ret
add
dec
push
mov
ja
sbb
je
lcall
sub
and
mov
xchg
xchg
in
xor
pop
mov
jb
add
outsb
mov
mov
jmp
lds
daa
adc
int
das
mov
int3
inc
dec
dec
push
and
add
insl
movsl
dec
test
add
inc
pop
cmp
lret
outsl
cltd
lods
leave
movsl
and
lods
aaa
test
xor
lea
and
je
rolb
movsl
cld
insb
dec
arpl
nop
mov
das
add
xchg
pop
xlat
dec
popf
add
add
iret
insb
ret
movsl
stc
mov
inc
loopne
in
popa
add
pop
or
das
adc
jo
shrl
and
push
sbb
daa
jbe
roll
mov
push
sbb
mov
call
into
andl
sbb
pop
add
test
pop
test
and
les
aam
addl
fnstcw
loopw
xor
loopne
ljmp
ljmp
adc
fsubrl
xchg
lahf
movsl
or
xorb
mov
clc
dec
xchg
inc
pop
push
and
loopne
sbb
rclb
je
add
push
inc
clc
cmp
test
jmp
ljmp
inc
hlt
adc
pop
or
std
dec
pop
sbb
add
sbb
in
add
sbb
or
insl
add
call
in
add
xor
popa
add
and
mov
sub
popf
jne
and
push
mov
add
jle
sub
bound
push
sarl
mov
adc
cmp
add
xchg
sbb
adc
clc
xchg
jns
add
stos
subb
mov
pusha
and
mov
movsl
jge
lahf
or
test
ret
inc
incl
sarb
pop
in
add
inc
divl
mov
test
call
ja
fadds
and
rol
mov
or
les
add
sarl
pop
or
xorb
add
stos
and
add
mov
pushf
push
xchg
pusha
les
jp
mov
or
xchg
xor
pop
push
add
or
nop
xchg
mov
push
xchg
mov
dec
jne
add
mov
jae
clc
insl
add
dec
mov
lahf
rorb
add
ja
jo
cmp
push
lock
push
xchg
jae
add
pusha
xchg
sti
mov
mov
pop
cmpsb
ret
scas
imul
lret
cwtl
push
mov
stc
push
inc
mov
jg
push
roll
pushf
jbe
and
test
call
or
outsb
aaa
sub
std
add
insb
mov
jnp
add
dec
add
add
ss
add
xchg
out
imul
mov
addl
sbb
jge
shld
sarl
dec
sbb
cmpl
adc
inc
mov
xchg
xorb
das
pop
arpl
sbb
xchg
adc
jne
outsl
test
sub
xor
push
push
pop
mov
movsl
lock
cld
push
loope
sub
cmp
cs
test
inc
xor
mov
lret
push
rorb
dec
add
xchg
cmp
ret
push
cmp
add
cmp
test
add
loope
jne
adc
call
fbstp
or
xlat
int
add
xchg
cwtl
or
mov
fadds
dec
jne
jnp
add
mov
cld
cmp
adc
clc
adc
add
imul
cmpsb
mov
or
int3
xchg
inc
stos
or
test
cmp
push
jae
pop
mov
sub
lea
mov
ja
pusha
popf
outsb
add
movsb
popa
int
mov
fldt
lock
xor
fdivs
je
add
dec
mov
add
scas
es
in
lret
out
popl
add
adcb
jbe
push
insb
add
xchg
icebp
cmp
sub
rcrb
cltd
ja
lcall
cs
bound
push
and
adc
lcall
push
cmc
sbb
test
xor
repnz
adc
jg
mov
lds
pop
inc
sbbb
test
jno
scas
add
xchg
mov
xchg
repnz
mov
cmc
sub
mov
lock
mov
lock
insb
verr
lea
add
push
lcall
getsec
xchg
or
add
stos
ffree
push
mov
pop
pop
xchg
push
inc
ja
or
jmp
aaa
lock
lret
adc
imull
btr
emms
jne
sbb
fs
xchg
xchg
std
add
out
lds
sti
ud1
in
inc
in
out
or
cmp
inc
push
lds
stos
and
cmp
inc
xchg
orb
pop
dec
pop
add
punpckhbw
aam
mov
mov
mov
aaa
mov
push
sbb
add
and
lret
call
daa
and
dec
out
push
add
cld
es
push
jmp
roll
movsb
clc
jp
scas
add
mov
push
sbb
es
dec
sbb
je
push
mov
fimuls
sbb
cmpsb
rolb
jmp
cli
loope
jp
adc
or
movsb
and
imul
or
cmpsb
xor
add
orl
jae
mov
test
sub
push
add
cld
ja
cmp
fwait
and
jmp
insb
jne
add
je
xchg
cmp
add
push
sub
leave
sub
and
inc
out
js
icebp
sbb
je
test
cs
aam
test
insb
mov
lock
jnp
and
or
dec
shl
add
xchg
aam
sbb
inc
mov
repnz
test
je
push
or
pusha
lea
aam
jp
sub
inc
pop
cmpsb
dec
mov
ds
shrb
jnp
add
cmp
mov
jmp
adc
add
inc
mov
sub
jl
xor
or
into
outsb
sbb
bound
mov
adc
add
dec
xor
push
mov
cmp
push
je
or
jno
jge
ds
or
push
and
cmp
nop
sahf
add
divl
dec
add
jge
add
movsb
out
jbe
xchg
cs
popf
push
int
jo
ds
inc
and
jo
pop
fs
cld
pop
add
cmp
fidivrl
cli
stos
or
cmpsl
data16
js
jge
xchg
pop
pop
push
rclb
ja
shrl
add
cld
xchg
lods
adc
notl
test
or
test
pop
add
cmpsl
inc
out
aad
add
adc
cmp
push
popf
int3
add
mov
add
mov
add
mov
sub
xchg
mov
out
adc
inc
jle
pushf
movsb
lods
push
movsl
clc
mov
shrb
imul
call
repz
xor
sbb
or
ror
pop
jae
lock
xor
push
test
jbe
add
mov
adc
rcrb
jge
jmp
mov
mov
test
add
test
sub
add
jae
adc
nop
sbb
stc
adcb
push
mov
sbb
ja
adcb
test
montmul
cmpsb
add
rcll
repz
andb
mov
std
inc
hlt
enter
inc
add
or
add
jnp
test
push
cmp
inc
push
cmp
inc
loop
jo
adc
enter
mov
and
cwtl
clc
in
adc
inc
addl
jg
mov
pushf
dec
clc
add
xor
cmp
inc
addl
or
hlt
movb
cs
sbb
add
mov
jnp
inc
inc
lret
jo
stos
add
dec
stos
iret
or
insb
pop
and
cmpl
imul
outsb
rcl
pop
add
xorb
add
adc
add
mov
and
es
insb
xchg
push
mov
add
rorb
dec
xor
push
mov
push
mov
roll
mov
sbb
pop
int
add
add
dec
adc
and
mov
in
inc
push
push
scas
mov
xchg
and
push
das
mov
loopne
pop
cmp
adc
inc
out
mov
gs
pop
sti
add
iret
push
push
pop
icebp
and
add
test
mov
cltd
dec
scas
adc
aam
add
jo
cs
push
enter
lds
jg
xchg
dec
inc
lods
scas
test
filds
push
xchg
mov
out
and
pop
stos
call
add
push
jne
xchg
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
fwait
gs
push
cmp
add
xor
add
fs
jno
bound
xchg
and
ljmp
push
mov
add
and
push
push
push
stos
shlb
dec
aad
sub
in
and
das
nop
test
in
xchg
addb
adc
pop
xor
add
cmp
test
in
movsb
iret
jecxz
test
test
mov
add
dec
mov
cmp
cwtl
add
imul
subb
mov
add
insl
mov
movsl
add
jno
dec
add
cmp
js
lea
xor
cmp
in
test
sbb
jge
mov
loopne
pop
xor
jle
push
adc
dec
ds
inc
jae
movsb
add
pop
add
mov
sub
pop
jge
push
lret
lahf
sub
mov
out
mov
test
cwtl
iret
leave
js
add
out
imul
add
outsl
mov
mov
cli
clc
je
add
js
jo
dec
cmp
add
cmp
jo
add
scas
or
jge
sbb
mov
or
jl
fcoml
in
pop
add
popa
lods
cmpb
add
cmc
nop
xor
std
and
sbb
and
push
xchg
addl
pop
cmp
in
sbb
add
pop
nop
rclb
insb
mov
and
jns
sysret
aad
dec
mov
iret
lock
pshufw
in
or
dec
mov
and
cmp
int
or
dec
popl
into
jo
add
mov
add
push
lods
frstpm(287
mov
sub
add
mov
inc
mov
testb
add
pop
shrb
add
shrd
mov
add
xchg
xor
add
inc
sub
lss
in
call
add
cmp
js
mov
fisttpll
cmp
add
hlt
rol
xchg
sub
and
add
add
leave
imul
push
and
pop
add
jo
add
movsb
dec
pop
push
lret
mov
add
pop
ret
add
pop
add
gs
lock
lahf
or
insb
ja
aam
and
rolb
mov
pop
aas
add
or
pusha
out
cmp
sub
adc
pop
mov
dec
nop
or
and
les
cwtl
or
je
imul
push
xor
cmp
das
xchg
add
subb
cmp
cmp
sbb
xchg
inc
add
mov
inc
mov
sub
adc
and
add
jle
xchg
jo
add
cwtl
xchg
add
push
pop
and
jp
int
repz
cltd
cld
xchg
mov
jae
fwait
test
pop
hlt
pop
add
sbb
or
jns
movsb
or
add
lcall
loopne
imul
add
shl
cmp
dec
lret
sub
push
lahf
and
in
inc
add
mov
push
lock
data16
dec
mov
xor
popa
pop
push
shr
jae
cwtl
inc
add
mov
add
jnp
push
dec
ror
lock
lret
pop
mov
jbe
push
repnz
mov
call
cmp
jnp
loopne
add
push
sub
scas
inc
andb
jl
add
rol
xlat
cld
mov
add
into
test
mov
ss
hlt
push
ljmp
pop
insl
inc
xor
adc
add
popa
rol
pop
cmpsb
push
xchg
sbb
push
jnp
add
add
inc
stos
add
in
pop
call
xor
sbb
movb
mov
inc
arpl
in
scas
add
mov
stos
jecxz
pop
lock
icebp
movsb
add
outsb
mov
sbb
mov
mov
nop
sti
add
mov
psraw
add
inc
loopne
pop
cmpb
nop
aas
dec
pop
js
add
dec
pushf
jecxz
inc
es
jbe
add
test
cmc
cmp
xor
dec
daa
pop
add
je
add
sub
pop
jnp
sbb
pop
data16
std
add
xor
fsub
mov
add
addr16
imul
push
add
mov
rcr
fsubs
push
add
fistpll
and
or
rclb
in
add
adc
pcmpgtb
lea
rcrl
ret
sub
roll
lods
je
pop
cmp
push
adc
test
icebp
lock
xchg
jno
xchg
add
inc
add
add
or
subl
add
fildll
push
add
mov
add
xor
or
add
add
pusha
jnp
cld
imul
stos
movl
adc
adc
pop
fiadds
jmp
or
sbb
repz
sar
addl
sti
jl
aas
adc
lock
subb
cltd
in
dec
add
pop
popf
in
ret
lds
ja
xchg
iret
lods
push
mov
mov
fdivrl
test
decb
lahf
movsl
jne
pop
pop
sbb
ret
mov
jo
push
or
push
pop
pusha
jnp
mov
loop
add
cmpsl
add
dec
xor
add
mov
aas
sub
sub
jne
mov
mov
pop
loopne
add
jl
dec
sbb
push
add
mov
lock
dec
add
andl
imul
ljmp
call
shll
push
or
dec
jo
cld
sti
xchg
pcmpeqb
adc
or
dec
loope
mov
jecxz
loopne
mov
je
jmp
sub
in
ds
jmp
add
scas
adc
popa
mov
lcall
inc
dec
je
adc
and
xorb
jecxz
pop
push
lret
push
or
ror
sbb
fdivs
jae
mov
out
add
scas
jb
jno
add
leave
div
insb
lods
jmp
in
loop
inc
add
inc
add
add
or
loopne
xchg
add
std
mov
sbb
jae
dec
mov
frstor
mov
and
jmp
xchg
add
or
jg
sub
cmp
cmp
jge
sub
iret
ret
mov
jno
jmp
push
aad
jo
pop
jb
paddsw
xchg
mov
mov
ja
add
pop
imul
mov
adc
lods
jne
pop
cmp
cmp
clc
xchg
push
ret
daa
mov
jmp
jge
ret
pop
pusha
fldt
xchg
inc
movsl
cmp
jp
je
push
pop
xor
inc
add
fisttpl
mov
sub
ljmp
sub
add
mov
push
rclb
das
mov
push
adc
repnz
xchg
mov
add
call
push
pop
mov
adc
inc
cld
jg
aas
inc
sbb
dec
fnstcw
jae,pt
test
mov
adc
shrb
sub
add
push
push
sti
xor
jmp
into
or
out
mov
dec
push
sub
jae
add
cmp
sahf
fstpl
cmpb
sub
ja
add
push
jns
jbe
cs
mov
sarl
xchg
out
jecxz
adc
pop
lods
inc
inc
jp
sbb
insb
pop
ja
subb
test
mov
mov
and
lret
add
xchg
mov
sub
jne
adc
dec
sti
ror
jns
add
repnz
imul
cmp
xor
insb
dec
add
dec
dec
xor
add
jnp
xchg
adc
adc
cmpl
or
and
insb
cmp
cli
adc
and
in
jbe
add
mov
xchg
and
pop
call
xchg
lock
test
xchg
pop
scas
rcrb
mov
add
ja
push
call
movsb
add
mov
outsb
add
or
or
cmc
or
not
addl
addb
mov
xlat
xor
or
dec
xchg
xchg
adc
sarb
subb
orl
xchg
test
test
add
repnz
ja
adcl
hlt
mov
in
loopne
les
lret
add
mov
insl
add
test
cwtl
test
int3
cld
cmp
jnp
push
and
jo
mov
add
mov
xor
xchg
repz
adc
xchg
cmc
daa
and
or
and
cmp
sbb
adc
adc
add
lret
call
add
dec
add
pop
mov
mov
add
lods
ret
mov
add
int3
dec
lret
push
leave
add
fsts
in
adc
mov
rcll
fmull
fistpl
adc
dec
xor
outsb
in
clc
lret
enter
add
shlb
add
inc
dec
int
stc
add
or
mov
mov
and
mov
add
in
jg
scas
adc
fxam
cli
ja
inc
add
mov
hlt
pop
xor
mov
ret
xchg
add
leave
inc
push
sti
enter
add
add
lea
aad
pushf
test
lret
xor
clc
stc
add
inc
mov
mov
cwtl
push
cmp
add
sub
jae
add
add
add
scas
or
push
pop
mov
addb
adc
push
sub
push
push
and
xlat
rorb
popf
imul
jb
movb
lock
dec
sbb
mov
or
cmpb
rorl
adc
pop
jne
insl
frstor
add
jae
xchg
xchg
push
push
cmp
fisubrl
add
inc
add
mov
outsl
push
mov
shr
pop
push
mov
jl
xor
add
stos
adc
jae
mov
xchg
daa
sub
xlat
movsb
in
mov
and
shll
inc
int
dec
cwtl
bound
arpl
jmp
repz
add
add
lea
sbb
push
adc
ret
cmp
fildl
fucomip
and
mov
ljmp
call
cli
fdivl
imul
in
pop
adc
dec
dec
sbb
cmc
loop
aad
incl
jl
js
lock
mov
sub
inc
leave
add
mov
jne
lcall
adc
xor
cmp
subl
add
imul
in
add
push
movsl
mov
dec
mov
lock
movsb
mov
cmp
aad
mov
insb
repnz
hlt
and
clc
inc
fadds
test
jbe
addr16
clc
mov
inc
dec
jecxz
push
jb
jmp
or
add
jne
dec
shlb
add
into
xchg
aam
mov
mov
enter
add
int3
sub
cmp
mov
add
add
out
push
lock
mov
inc
mov
je
mov
xchg
adc
pop
lret
inc
jne
pusha
push
mov
add
mov
js
js
add
sbb
pop
adc
cli
add
pop
xchg
inc
icebp
lock
xchg
dec
add
mov
xor
adc
test
jle
add
cmc
outsb
mov
nop
sub
dec
int3
add
inc
adc
icebp
mov
sbb
adcb
add
clc
inc
jl
cmpsl
or
adc
add
sub
fiaddl
mov
jmp
movsl
add
sarb
or
fistps
jne
pop
sub
push
pop
aad
xchg
in
shll
jae
scas
flds
inc
cmp
and
sub
pop
out
daa
nop
andb
jo
outsb
lods
add
or
insb
xchg
add
and
in
add
cwtl
lock
add
lds
and
mov
les
inc
dec
xorl
addb
or
mov
out
aas
add
mov
mov
jnp
add
mov
dec
push
xlat
or
pop
add
jne
jle
mov
push
mov
call
add
push
mov
pop
out
lcall
loopne
test
sbb
iret
mov
nop
push
mov
cmp
movsl
repz
mov
aas
cmc
add
and
adc
lods
in
push
pusha
sbb
pushf
cmp
push
add
cmpsl
cmp
cmp
shrb
xor
add
or
jo
ja
mov
pop
in
add
add
aas
xchg
or
inc
ja
hlt
incl
mov
rol
xchg
add
loope
loopne
addl
leave
jmp
ret
nop
cmp
ja
pop
lea
out
lret
nop
sbb
stos
push
sbb
sbb
or
vprotd
add
inc
in
sti
andb
movsb
or
out
or
mov
fs
cmp
or
int3
cmp
icebp
add
mov
test
lods
adc
adc
adc
daa
mov
add
outsl
int
in
inc
pop
push
or
add
sbb
push
popf
test
dec
mov
add
or
in
mov
add
inc
cmpl
add
outsl
add
int3
push
notb
adc
jno
scas
daa
inc
test
and
dec
adc
add
test
add
mov
jl
push
sbb
add
adc
leave
cs
aaa
mov
repz
or
stc
add
push
lds
sub
fidivl
adc
cmc
cli
out
pop
inc
push
cmp
dec
call
and
mov
out
cmp
and
insb
add
cmp
mov
test
mov
fisttps
add
push
rolb
jge
mov
push
cmp
push
sti
xchg
adc
dec
push
hlt
pop
lods
adc
xchg
pop
jecxz
dec
cmpb
jb
dec
pop
clc
test
pop
xchg
movsl
or
jge
push
or
test
nop
jp
and
dec
mov
adc
jmp
outsb
dec
add
dec
loopne
and
add
inc
lret
pop
rcrl
push
xor
add
mov
pop
cmp
push
jl
enter
push
sbb
sahf
mov
add
sub
jmp
or
test
imul
add
add
fnstsw
add
loope
add
fucom
psrad
fisubrs
pop
jle
mov
add
xor
or
test
test
mov
cltd
stos
ss
xchg
outsl
mov
dec
add
ljmp
call
pop
dec
inc
pop
paddq
cmp
dec
dec
fwait
aaa
push
add
inc
add
sbb
stos
push
inc
push
clc
mov
std
add
movsb
dec
fwait
adc
cld
add
jmp
mov
mov
xchg
stos
pop
andl
inc
fdivr
xor
adc
in
out
aam
inc
fisubl
lods
cs
int3
add
shrb
pop
in
aas
dec
adc
pusha
out
ja
add
fs
cmp
add
div
ljmp
scas
add
lock
push
cli
icebp
nop
addb
out
mov
add
pop
in
in
add
add
test
jmp
mov
mov
add
jl
mov
cwtl
insl
jo
js
pop
dec
imul
dec
push
dec
int
and
cmp
xorl
imul
add
jmp
out
add
ret
pop
in
push
push
fsubr
jecxz
sbb
js
cmpsl
jb
add
xchg
addl
ror
mov
pop
in
mov
push
pop
movsb
nop
test
sbb
sbb
push
push
or
pop
pop
or
pop
push
jle
push
push
add
aas
jae
movntq
out
or
push
enter
add
add
xor
pushf
popf
in
add
fimuls
test
dec
push
repz
out
add
outsl
add
cwtl
les
jno
add
shlb
xchg
lcall
out
ljmp
add
jle
or
push
push
cmc
push
icebp
jge
add
test
shll
mov
pop
add
test
mov
mov
addr16
test
inc
pop
cli
fldt
pop
pop
xor
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
add
cmp
xchg
cmp
pop
je
jge
cmp
sub
cs
jno
add
aam
mov
xor
add
mov
mov
add
jns
and
jbe
jb
mov
pop
movzbl
pusha
mov
sbb
dec
dec
jo
inc
push
in
add
push
or
push
push
add
mov
in
dec
incl
ja
outsl
jmp
sbb
int3
pop
add
lcall
in
out
sbb
pushf
sub
sbb
ljmp
add
inc
cmpsl
mov
ss
and
add
sbb
js
faddl
pop
push
fs
pop
ret
jbe
pop
out
pop
pusha
in
lahf
stos
push
into
add
inc
mov
les
push
clc
mov
mov
test
cltd
mov
bound
jns
add
gs
add
addr16
fstps
cmp
cmp
test
jns
jle
xchg
cwtl
xchg
add
test
push
dec
pop
in
outsb
add
jb
add
mov
push
xchg
ljmp
add
xchg
lcall
add
jns
mov
and
mov
inc
in
sbb
push
dec
add
cmp
clc
cmp
mov
push
add
add
cmpsl
jmp
lock
mov
aam
add
jle
mov
int
add
aaa
dec
pop
cld
sahf
add
arpl
cmp
dec
xlat
add
nop
out
jmp
shrb
int
push
mov
push
in
pop
mov
mov
rolb
loopne
or
loop
add
lret
sbb
push
cmp
cmp
and
dec
dec
jp
fcompp
cmp
xchg
mov
repnz
add
ljmp
call
int3
pop
inc
stos
out
inc
mov
sbb
mov
jg
dec
or
push
pusha
insl
call
arpl
rolb
stos
mov
insl
push
enter
jbe
adc
les
gs
pop
push
add
lock
mov
and
add
fsubl
add
adc
cld
xchg
xor
fwait
pushf
movsl
test
loopne
add
adc
add
fs
mov
filds
les
test
push
mov
xlat
daa
rcl
pop
adc
ret
les
outsl
jae
pusha
mov
call
pushf
sbb
pop
xor
andl
loop
addb
add
ss
inc
or
icebp
ffreep
mov
sub
movsb
popl
into
aad
in
mov
aas
stos
or
ja
cmc
test
shlb
add
fcmovu
jns
shl
add
mov
push
dec
add
cmp
pop
cwtl
add
pusha
stc
or
fs
cld
add
gs
fnstenv
mov
nop
aad
fsubs
inc
push
add
pmaxsw
add
and
in
or
xchg
daa
imul
or
mov
cmp
mov
jge
out
sub
lret
mov
add
outsl
scas
pop
mov
enter
mov
in
ret
ret
add
je
loopne
cltd
lcall
test
add
adc
add
pop
insl
xchg
jmp
sbb
mov
loopne
lret
or
in
enter
mov
dec
add
test
in
add
and
add
dec
jnp
inc
loopne
cmp
insl
add
je
jne
jl
push
and
adc
rolb
mov
cmp
add
movsl
stos
adc
pop
add
mov
lods
out
ja
and
push
mov
mov
mov
xchg
xchg
mov
jo
inc
stos
add
sub
mov
xor
mov
adc
adc
loopne
lock
xor
add
jae
sub
dec
or
rcll
push
add
mov
xor
jecxz
pop
in
jp
add
lods
leave
lret
mov
hlt
mov
rorl
add
lea
loop
xorb
mov
push
push
add
cmp
arpl
shlb
jo
add
xor
stos
add
jo
lods
addr16
dec
add
pop
push
pusha
cmp
jbe
mov
out
add
xor
loop
xchg
test
std
test
cmp
cld
bnd
cmpsl
lcall
add
dec
dec
dec
or
add
add
imul
xor
and
lock
cmc
aam
cwtl
xchg
out
movl
cltd
jnp
jo
add
xor
cmc
and
lods
add
dec
aad
repnz
mov
sub
and
add
push
dec
adc
push
add
enter
push
mov
xchg
push
lds
add
inc
push
add
and
xchg
push
aaa
lret
aam
data16
enter
out
add
jne
lods
or
cmp
xor
mov
add
out
fnstsw
lods
pushf
add
ja
mov
dec
add
push
jb
fmuls
roll
lret
mov
jp
js
mov
in
cmpb
stos
pop
scas
dec
movb
add
aas
ljmp
add
les
dec
gs
add
xor
xchg
mov
fwait
movsb
jle
mov
xchg
adc
mov
clc
sub
add
fadd
or
test
ja
cmp
or
ljmp
mov
stos
pop
add
leave
or
test
add
jge
and
cmpb
mov
out
ds
add
imul
lds
gs
adc
pop
or
out
in
incb
add
inc
inc
dec
test
inc
inc
cwtl
or
cmp
out
imul
mov
push
add
push
pop
pop
pop
es
int3
xor
push
dec
xchg
nop
xchg
add
int3
and
pop
jne
dec
in
xor
dec
test
add
sbb
loope
lahf
adc
push
sbb
pop
dec
add
call
add
fisubl
lock
push
push
push
insb
cmp
lds
in
mov
add
outsb
out
add
adc
stos
or
cmp
aaa
jno
xchg
test
dec
insb
addb
push
insl
adc
mov
je
rolb
and
dec
xor
add
dec
jno
sti
out
pop
out
out
pusha
scas
iret
xorl
fcomp
int3
sti
add
js
mov
or
mov
add
popf
mov
add
push
xorl
ljmp
xor
jmp
leave
rol
and
icebp
idivb
das
xor
call
jmp
jo
pop
addl
test
out
les
add
aam
mov
add
and
mov
add
pushf
addb
imul
jmp
ret
xlat
lret
add
fsubp
mov
push
adc
dec
sbb
cwtl
cmp
aad
xor
repz
dec
add
sbb
sub
jmp
out
movl
fisttpl
addl
out
push
pavgb
jo
outsl
mov
sbbb
das
jmp
push
mov
test
scas
xchg
add
inc
out
pop
add
sub
lods
sbb
fiaddl
shll
dec
xor
pop
and
jg
popf
inc
bound
push
aas
xor
pop
dec
hlt
jae
sti
popa
ss
enter
mov
pop
adc
hlt
add
test
mov
adc
dec
or
pop
and
mov
lahf
and
cmp
sub
add
test
xchg
push
push
stos
pop
mov
dec
sub
lcall
xor
clc
sub
ds
push
add
or
fstpt
sub
dec
jle
adcl
test
add
dec
add
fcomip
lock
movsb
or
mov
lds
or
mov
rcll
fldl
pop
inc
sub
ss
fadds
sbb
sbb
lods
sub
pushf
mov
sbb
adc
xchg
jae
ja
scas
add
cmp
add
push
or
rcrl
rcl
mov
lods
pop
add
mov
insb
adc
pop
xchg
add
xchg
xor
jo
aam
bswap
push
loopne
sbbb
shrb
xor
add
pop
scas
add
add
adc
lsl
fsubl
stos
clc
mov
addr16
mov
mov
pop
add
jno
or
pusha
jne
jns
add
cmp
dec
ja
sub
xchg
mov
add
pop
add
addl
push
fmull
or
mov
or
call
add
or
add
push
std
in
movsl
jo
lds
cmp
push
and
and
je
inc
cmp
push
inc
add
dec
pop
add
cmp
sbb
idiv
add
push
add
xchg
ljmp
arpl
add
xchg
sub
jmp
push
sti
add
mov
push
xchg
out
mov
pop
pop
in
push
outsb
mov
sub
loopne
leave
dec
call
not
xor
push
pop
movl
mov
into
add
jge
pop
add
rorb
sub
add
mov
or
shll
fistps
pushf
jge
add
inc
clc
popf
add
pop
idiv
jne
push
sbb
dec
mov
add
out
or
jle
pop
mov
mov
and
sbb
xlat
jge
push
inc
arpl
jbe
jnp
add
add
add
inc
xchg
addb
addr16
or
jns
xchg
add
ja
decb
das
pmuludq
mov
push
pop
add
aaa
call
dec
sub
mov
loop
addb
sub
push
or
sarl
dec
outsb
arpl
jb
gs
shlb
out
dec
and
dec
pushf
jbe
inc
push
push
nop
jbe
test
xchg
cld
insl
sub
aad
xchg
inc
sbb
jns
sub
je
add
push
lret
pop
push
sbb
push
mov
in
pop
aam
scas
add
or
lods
push
mov
sub
inc
add
cld
xchg
test
pop
xor
push
fmul
adc
ret
xor
popf
sub
rclb
mov
add
adc
js
testb
pop
ja
mov
sbb
mov
and
jo
repnz
cmp
jae
popa
jecxz
in
xchg
data16
imul
push
clc
jae
call
cmp
std
add
jno
and
sub
daa
jae
mov
sub
pop
fldl
cmpsb
lock
pop
cmp
jb
xchg
insb
jl
add
push
sub
push
cs
int
lock
jnp
add
jne
dec
mov
push
lahf
pop
pop
fwait
lret
shlb
negl
dec
push
add
sbb
add
sbb
push
lods
and
add
xchg
jo
jmp
frstor
add
imul
mov
add
add
lea
mov
jne
mov
test
push
sbb
out
adc
jmp
cmpl
lret
call
jle
add
shl
test
pop
in
mov
lods
cmp
in
cli
aad
mov
inc
add
inc
loopne
fsubl
add
mov
push
cmp
in
imul
xchg
mov
addl
mov
adc
pop
fildl
xorb
adc
mov
cld
gs
test
sti
les
stos
popl
cmp
hlt
sbbl
aas
add
vmovq
inc
lea
es
inc
add
cwtl
aaa
dec
xchg
mov
scas
orb
lock
xlat
push
stos
hlt
push
popf
push
inc
xor
adc
pop
jl
and
pushf
add
xchg
jne
push
sldt
aaa
std
adc
aam
in
imulb
sbb
sbb
lock
add
and
or
jp
mov
mov
push
and
outsb
clc
add
movsl
fwait
and
sbb
push
rclb
push
fwait
icebp
ja
mov
add
shrb
addr16
push
add
or
cli
add
lds
fadd
push
fsubrs
xchg
adc
stos
and
lock
add
adc
inc
popf
loop
testl
mov
jmp
cmp
add
test
aaa
stos
add
jl
sti
or
add
inc
adc
jae
add
add
pushf
push
into
call
pop
loopne
leave
mov
orl
pusha
in
jmp
push
sti
call
fs
aaa
das
add
in
add
or
cmp
cmc
rcrl
cmp
xor
or
mov
jge
js
cmp
adc
jns
sbb
js
lock
xor
imulb
and
jne
nop
fildl
add
cmp
cltd
lock
out
jo
add
push
push
and
loop
ds
inc
leave
lret
jb
daa
jo
ljmp
or
add
fdivrs
add
and
or
or
movsb
sti
cmp
dec
ds
jmp
sarb
add
adc
lds
loope
gs
addr16
inc
add
add
mov
cmp
jae
lea
xor
roll
popa
push
jnp
jmp
cmp
add
or
in
adc
dec
addr16
mov
xor
jns
cmp
adc
and
hlt
ret
rclb
iret
pop
add
es
lahf
jg,pn
dec
inc
adc
xor
add
xchg
scas
sub
dec
sbb
sub
test
enter
lock
add
ds
loopne
dec
xor
popa
ljmp
add
lahf
sbbl
inc
cmp
repnz
mov
ret
dec
add
testl
and
add
sub
popl
jl
add
jno
adc
and
adc
cmp
cmp
sub
or
nop
pop
add
xchg
shrb
mov
add
stc
nop
incb
add
sub
filds
sbb
dec
fiaddl
lds
fsubrl
loope
sub
test
js
pop
pusha
cmp
bnd
repnz
add
sbb
add
and
leave
sarb
pop
mov
fistl
xor
mov
add
orb
push
add
iret
dec
ljmp
insl
stc
jnp
pushf
add
add
push
inc
mov
scas
add
and
pop
add
ror
in
in
aaa
pop
mov
pop
rcrb
push
loope
push
test
jg
add
or
mov
add
add
pop
cmc
movzbl
xlat
jge
int
pusha
inc
cmp
dec
push
xor
test
mov
or
add
outsb
sbb
add
mov
daa
jnp
push
ss
pop
add
ret
dec
call
inc
movsb
dec
jge
and
cmpsl
mov
pop
loopne
add
aad
loope
xorb
leave
add
cli
xchg
inc
pushf
mov
push
add
and
cmp
test
pop
inc
mov
ljmp
add
mov
dec
xchg
push
add
rolb
cmpsl
pop
mov
lock
and
fbstp
loope
add
push
push
imul
xchg
mov
orb
adc
mov
es
mov
and
mov
pop
and
add
out
jp
and
sbb
push
add
or
xor
lock
lock
push
add
mov
pop
int3
add
leave
negl
lock
cmpsb
or
mov
aad
loopne
sbb
cmc
cmpsl
add
lods
std
sub
xchg
call
popa
sub
out
jo
add
sub
push
xor
add
xor
xor
shl
sub
push
fistps
adc
popf
cmp
sbb
inc
sub
push
pop
add
add
ds
shll
add
pushf
push
out
vpunpcklwd
aaa
movsl
sub
cwtl
mov
mov
call
add
jb
and
add
mov
adc
mov
add
cmpsb
andb
or
dec
add
push
xchg
repz
xlat
add
mov
inc
adc
mov
jg
mov
and
movsb
fsubs
sub
add
dec
popf
rolb
mov
pop
addb
inc
jae
scas
repz
jae
sbb
mov
mov
shlb
sarb
jg
pop
into
add
and
add
pop
fcoml
add
push
push
pop
xor
js
push
pop
xor
dec
add
mov
pop
popa
jnp
clc
inc
jo
out
add
imul
sub
iret
jp
add
pop
lds
add
push
movsb
dec
inc
out
icebp
or
lods
add
aam
loop
loopne
add
scas
rorl
cmp
rolb
in
sub
aam
push
push
add
or
rorl
sbb
js
mov
add
popl
push
cwtl
push
cmpsl
add
mov
outsl
nop
jle
sti
add
pop
cmp
mov
jbe
push
cmp
xlat
inc
mov
add
mov
jns
and
flds
xchg
inc
fsub
add
iret
inc
sti
hlt
push
ret
add
add
push
aam
aad
add
xchg
sub
add
add
mov
shll
or
mov
or
fisttpl
xchg
nop
outsl
aam
jle
jmp
jge
add
xor
mov
add
adc
cwtl
popf
mov
repnz
test
sub
sbb
nop
mov
cmpsb
dec
dec
lret
xchg
ret
push
out
ficompl
lahf
add
aam
pushf
inc
sbb
cmp
xchg
add
inc
rolb
addb
pusha
out
pop
add
cld
adc
mov
orb
imul
aas
add
fs
push
mulb
shlb
add
sub
xchg
mov
push
fcoml
ret
inc
cli
add
dec
pop
jbe
pop
mov
in
jae
sbb
or
add
mov
pop
call
xor
add
mov
or
loop
xchg
add
faddl
shr
ss
loope
cli
mov
sub
cmp
pusha
add
sub
leave
add
icebp
fldl
cmp
sbb
hlt
add
mov
into
test
jl
dec
inc
xchg
push
out
adc
pop
lods
dec
bound
mov
xor
ret
push
rcr
jns
and
mov
test
or
jae
sahf
jbe
xchg
comiss
insb
pop
loopne
add
dec
test
add
and
xchg
aas
stos
shlb
insb
dec
test
dec
inc
jbe
mov
imul
add
or
test
testb
inc
enter
int3
jo,pt
add
pusha
leave
hlt
and
or
cmp
push
xorb
or
jo
add
pop
movsl
mov
daa
loopne
add
push
pop
leave
cmp
jo
repnz
aad
int
in
jae
add
js
jl
rorb
add
shlb
hlt
add
outsl
mov
shrb
add
mov
push
sbb
pop
insl
add
cmpsb
cmp
cli
scas
loop
mov
add
sub
mov
aam
pop
add
mov
cmp
sbb
stc
push
dec
sahf
clc
add
and
mov
in
add
mov
sbb
fld
clc
pop
add
inc
push
addb
sahf
cltd
add
add
add
stos
mov
out
cmp
popa
pop
loope
mov
mov
sub
and
jno
jp
or
mov
dec
subb
push
sbb
sub
add
out
sarl
ljmp
jmp
push
inc
xchg
pop
pop
lock
daa
cmpb
cmc
cs
pop
iret
add
mov
or
ror
jne
add
mov
int
call
mov
inc
test
push
sti
sbb
jno
xor
cmp
sbb
call
jne
push
test
inc
outsl
fiadds
roll
repnz
les
adc
dec
out
push
addr16
add
mov
xor
int3
stc
pop
ficoms
pop
cmp
clc
test
push
jo
out
sar
call
lock
pop
test
push
scas
mov
stc
cmpsl
xchg
adc
or
push
jbe
daa
call
pop
sub
adc
mov
jmp
add
cld
insb
mov
and
sarb
loop
pop
call
popf
lods
add
cmp
add
push
daa
sub
sub
mov
pushf
xor
dec
inc
sbb
in
mov
rclb
mov
add
mov
sub
pop
push
test
les
inc
sub
std
into
mov
xor
xchg
pop
add
add
mov
push
push
jno
pop
ret
fmull
aam
out
cltd
mov
and
in
add
faddl
and
pop
jae
jecxz,pt
xlat
out
add
inc
decb
imul
jg
loopne
daa
jle
adc
ret
inc
or
inc
add
push
jne
mov
push
add
sub
sbb
lea
add
ret
andl
or
jmp
shlb
dec
xor
jl
nop
add
sbb
push
pcmpeqb
pop
add
add
scas
das
ss
js
fmulp
inc
jo
iret
ja
sbb
cmp
in
popa
or
inc
loopne
in
adc
jbe
stos
shlb
add
popl
lea
add
daa
ja
icebp
aas
push
jp
enter
pop
int
mov
insb
cmpsl
and
pop
adc
aad
hlt
adc
imul
les
pop
jp
jne
push
in
add
cwtl
outsl
cmp
add
cmp
dec
mov
add
mov
xor
mov
popf
mov
adc
daa
pop
aam
subb
cld
mov
cltd
hlt
sbb
movsb
ss
add
mov
jb
xlat
lods
pop
add
jp
inc
aam
mov
mov
iret
add
dec
mov
or
add
fnstsw
cmp
mul
pop
add
cmp
jb
popf
add
fiadds
fucomip
cmpsl
adc
addr16
xchg
movb
int3
pop
sarl
mov
xor
clc
dec
xchg
dec
add
jg
lahf
push
dec
add
adc
xlat
add
lock
out
bswap
gs
sarb
adc
pushf
aad
aaa
cwtl
xor
add
test
loopne
pop
jmp
cmpsb
and
mov
and
fstpl
cmp
dec
add
adc
mov
dec
ret
mov
add
jb
sbb
adc
ret
add
jmp
and
xlat
orb
int
sbb
inc
ret
pop
je
xchg
movsl
nop
inc
jmp
lea
mov
sti
das
add
pop
or
add
sbb
sbb
or
add
lds
into
ret
int3
pop
add
sbb
add
daa
xor
js
dec
mov
add
int
out
inc
mov
sub
push
add
mov
clc
xor
lods
xor
jb
xchg
sub
punpckhdq
add
mov
jne
mov
cltd
jl
add
int
mov
push
sub
sbb
stos
cmpsb
mov
cmp
loopne
clc
pop
inc
lahf
or
adc
out
shlb
add
inc
cmp
mov
out
add
sbb
sti
add
test
inc
or
xor
rclb
pop
jnp
inc
mov
xchg
push
sub
add
add
pop
pop
add
jne
shrl
pop
movsb
mov
and
les
scas
fs
and
cmp
ret
lcall
js
and
stos
dec
add
addr16
add
loope
int3
xor
enter
aas
inc
into
adc
push
mov
in
sbb
inc
hlt
test
mov
daa
sub
out
mov
ret
add
cli
fdivrs
adc
add
xchg
adc
sbb
push
or
dec
xchg
xchg
lock
mov
dec
sub
out
mov
push
dec
inc
push
dec
lcall
jnp
jge
push
adc
add
push
dec
xchg
sbb
inc
gs
shll
jae
and
push
cmp
stc
pop
inc
js
arpl
adc
daa
adc
outsb
sub
mov
xor
xchg
mov
in
orl
clc
add
lods
out
mov
xchg
ljmp
lock
pop
in
push
fs
js
jge
mov
enter
rclb
fdivrs
cmp
add
loopne,pt
dec
fs
xchg
or
insb
cmpb
shll
pop
adc
jbe
add
loope
aas
adc
and
xacquire
scas
add
xor
mov
add
fists
xchg
fisttpll
jl
xchg
addl
dec
push
arpl
das
mov
cmp
nop
xchg
add
test
sbb
xchg
sub
push
cmpsl
in
out
add
daa
inc
mov
push
jg
rolb
je
rcl
sbb
xor
or
xorps
or
pop
xchg
jg
add
push
decb
cmc
hlt
add
daa
inc
add
sub
jecxz
sbb
inc
add
call
in
add
or
pop
arpl
inc
push
push
imul
loop
sti
loope
cld
mov
xchg
jne
sbb
shr
xor
decl
add
mov
sbbb
or
lock
add
inc
outsl
lret
cmp
xor
test
cli
rorb
das
adc
adc
add
adc
inc
stos
dec
add
xchg
push
add
test
cmp
inc
ror
mov
push
add
push
jb
mov
ja
xor
leave
pop
push
repz
add
sti
jp
stos
fildll
add
cwtl
adc
rol
and
rcpps
loopne
dec
sbb
loop
add
pop
mov
inc
jl
add
pop
rcrl
add
add
pop
pop
movsb
add
nop
push
pop
mov
dec
pusha
test
jge
push
add
hlt
jle
add
divb
push
add
ds
sub
xor
add
popf
xor
loopne
pop
aam
test
pop
add
cmc
adc
insl
shll
push
xor
sahf
loop
xchg
sub
stos
add
push
push
jp
sbb
mov
or
and
jne
add
mov
add
int
dec
mov
pop
cmp
add
and
or
adc
mov
clc
sahf
aad
mov
sbb
lea
adc
loope
stos
mov
adc
push
pop
pop
mov
sbbl
mov
sub
add
mov
adc
in
add
jl
pop
sbb
pop
jge
aas
lock
mov
pop
data16
add
lods
sbb
add
roll
jge
inc
pop
iret
in
inc
add
and
int
sahf
pusha
icebp
in
jle
cld
add
xor
push
sbb
pop
adc
fstpl
testl
es
pop
mov
jge
pop
adc
jns
add
fbstp
lock
jnp
call
cmp
dec
sbb
lods
mov
lock
cltd
sbb
xchg
cwtl
les
adc
es
movsl
testb
loope
mov
stos
add
adc
mov
movsl
inc
or
imul
js
dec
or
cmp
mov
push
lret
inc
cmp
sti
mov
or
push
repz
loope
push
add
addl
mov
cmp
je
push
dec
add
mov
push
or
add
jge
stos
pop
sbbb
loopne
mov
mov
mov
aas
push
xlat
sbbb
dec
cmp
adc
movsl
sub
add
push
into
and
das
loopne
in
add
imul
add
dec
sti
shlb
je
outsb
adc
gs
push
out
leave
cmc
xor
jo
xor
mov
testb
mov
dec
cmp
inc
icebp
add
inc
mov
sarl
dec
cld
nop
mov
rolb
add
ds
or
sub
dec
es
les
mov
inc
and
xor
cmp
inc
lea
add
ret
push
hlt
pop
aaa
jne,pt
add
mov
inc
push
add
jmp
popa
jno
pop
ds
jl
inc
jno
jne
int3
mov
add
js
jge
xchg
mov
push
cmp
add
cwtl
sbb
lret
loopne
lock
aas
cmpsb
movsb
add
and
cmp
pop
sbbb
mov
cmpsb
jne
je
jp
push
das
rorl
shr
or
test
and
mov
mov
cmp
mov
and
loop
cmp
popf
test
rcrb
pop
sub
pusha
adc
fsubr
add
in
inc
and
je
push
or
flds
addr16
xchg
jne
jl
shrb
add
les
mov
int3
xchg
out
sub
dec
xchg
enter
sbb
out
lret
negb
cmp
adcb
sub
dec
mov
xchg
and
outsb
jg
or
sub
aad
in
jne
fiaddl
mov
iret
cs
roll
test
pop
inc
lock
je
mov
xor
fstl
jle
out
xor
pop
into
mov
ret
orb
imul
arpl
por
cli
scas
mov
xchg
dec
dec
jb
or
add
mov
xlat
add
fs
ds
scas
add
dec
xchg
insb
push
out
mov
xchg
push
xchg
jno
add
or
stc
cmp
add
push
and
jbe
mov
jecxz
mov
inc
daa
push
and
add
mov
or
sub
sti
pop
mov
dec
in
sub
mov
or
rolb
icebp
and
fs
subb
pop
add
add
mov
or
pop
outsb
mov
jnp
rcrb
jle
inc
add
lods
mov
roll
or
add
inc
out
pop
inc
jmp
inc
cmpsl
sub
push
add
daa
pop
in
adc
into
call
jae
adc
stos
fildl
or
jl
pcmpgtb
fdivl
inc
in
mov
dec
mov
sub
les
inc
roll
sbb
data16
fdivr
sub
sub
mov
or
xchg
sbb
mov
je
jge
xchg
fsubr
add
inc
mov
fisttpll
loopne
cld
scas
add
mov
inc
add
mov
lods
aas
das
in
js
add
sbb
mov
inc
cmp
sub
in
sub
lods
stc
add
sub
inc
add
mov
xchg
cmp
rcrb
cmp
mov
or
cmpsb
push
pop
popf
roll
add
pop
out
loopne
jnp
pushf
and
xor
add
loopne
dec
or
add
fstpl
faddl
add
sbb
popa
add
add
mov
mov
dec
mov
sbb
add
sbb
fiadds
inc
sub
mov
daa
add
cmpsb
dec
inc
call
aad
mov
add
mov
fisttpll
pop
add
test
cmp
lock
add
mov
jns
out
sub
sarl
mov
mov
imul
xchg
push
dec
add
adc
and
notb
loopne
sysret
pop
jbe
jno
xor
jo
mov
and
xchg
sbb
add
push
or
xor
push
jl
ja
scas
push
adc
test
mov
and
cmp
adc
inc
sub
dec
fsubl
lods
cli
push
daa
inc
push
adc
loope
jne
movsl
sbb
and
cmp
or
out
fisubl
and
call
cmp
enter
add
and
decl
aad
adc
adc
inc
sbb
iret
push
xor
sub
mov
cmp
sbb
or
jne
dec
cmp
rolb
scas
clc
inc
pusha
cmp
xorb
insb
or
push
add
xor
jp
push
shr
push
jecxz
xchg
cmp
cwtl
cmp
add
and
rorl
loopne
and
mov
or
cli
movzwl
jg
fcmove
daa
shl
add
in
sbb
mov
pop
pop
popa
mov
arpl
adc
ja
inc
xor
out
es
xor
aad
push
rcll
fidivl
inc
jg
adc
cmp
call
ss
jmp
inc
sub
pop
subb
andl
adc
adc
jle
inc
lock
sbb
pop
lsl
hlt
fisttps
dec
or
sub
fdivr
pop
add
mov
and
or
jmp
shlw
sbb
sub
jg
mov
push
in
pushf
push
inc
xchg
push
inc
adc
adc
jb
adcb
pop
add
stc
je
mov
rol
xor
adc
addl
jne
mov
nop
popf
add
test
jmp
add
pop
xlat
mov
shr
test
sub
incb
dec
shlb
sbb
aaa
inc
es
adc
ljmp
pop
add
lods
and
inc
cmpsb
sti
push
test
hlt
or
xchg
loopne
stc
pop
mov
loop
icebp
ljmp
in
mov
daa
and
push
and
sbbb
sbb
ja
hlt
in
rorl
add
rorb
cmp
mov
xlat
and
sbb
fisttps
sbb
inc
out
adc
nop
out
addl
or
jge
imul
pop
mov
dec
cli
loop
add
jne
shr
je
add
xlat
jmp
adc
mov
mov
xor
xchg
add
cld
sub
dec
nop
add
mov
add
sbb
popa
pop
cwtl
adc
adc
dec
or
jle
add
les
test
in
je
add
or
mov
jmp
add
pop
adc
lret
add
mov
adc
add
push
fidivs
pop
sbb
pop
or
inc
pop
jns
outsb
inc
ret
xor
call
inc
inc
rolb
mov
sbbl
sub
add
or
call
inc
add
movsb
dec
fwait
mov
aad
inc
loop
xchg
inc
les
adc
xor
xor
add
jns
jnp
inc
lcall
in
push
jge
mov
add
push
into
sahf
imul
add
addr16
icebp
pop
das
add
popf
in
inc
pop
add
lea
in
and
xchg
pop
in
push
js
inc
add
mov
add
push
push
sub
rcr
add
cmp
dec
adc
inc
dec
and
adc
ss
and
test
loopne
push
adc
xchg
xchg
or
cmp
add
add
or
dec
jne
add
or
aas
je
cmp
mov
cmp
jne
mov
lar
and
mov
test
cwtl
sbb
gs
stos
sbb
xchg
insb
push
subb
ja
pop
gs
mov
and
pop
inc
sub
jnp
xor
inc
jp
pop
cld
mov
stos
add
add
mov
sbb
enter
push
popa
mov
add
adc
push
iret
jmp
sarb
aam
jmp
imul
loopne
sbb
in
add
cli
xchg
sub
add
adc
pop
stc
mov
cmp
stc
cmp
arpl
add
movsb
das
add
ret
rcrl
andl
jp
add
jmp
cltd
add
mov
sub
sbb
push
xchg
xor
mov
rcrb
test
inc
cltd
xchg
pusha
sbb
add
not
ljmp
and
fcmovb
or
push
adc
xchg
push
lret
mov
incl
or
add
imul
negl
insb
mov
xor
add
push
mov
cld
cmp
in
push
inc
aas
xor
mov
sbb
dec
shrb
mov
in
cli
adc
fists
cmp
add
stos
or
lods
add
xor
mov
jmp
add
mov
push
add
stc
add
pop
mov
mov
jo
stc
orl
es
pop
call
mov
aas
sub
jne
add
and
fildl
mov
hlt
xor
lcall
jg
add
je
mov
mov
jo
add
jmp
add
sarb
add
bswap
xchg
push
sub
mov
mov
xchg
das
mov
pop
adc
push
in
std
or
cmp
push
mov
or
fisttps
roll
dec
push
add
sub
mov
xchg
add
add
and
push
loope
mov
cld
leave
adc
and
dec
sub
lahf
in
cmpsl
add
shl
add
push
push
push
xchg
pop
push
or
mov
je
testb
dec
scas
leave
jmp
and
add
test
and
clc
cmpb
ljmp
ds
add
push
jecxz
idiv
mov
adc
pop
cmp
not
adc
and
and
mov
daa
mov
push
mov
inc
add
leave
mov
adc
nop
imul
and
pop
cmp
dec
mov
lea
data16
je
lahf
pop
icebp
sbb
out
in
andl
lea
dec
mov
fcoml
sub
ret
add
bndldx
or
cmp
sub
jp
outsb
push
dec
jo
int
andl
test
aaa
fs
cmpb
scas
aam
add
mov
pusha
or
nop
ficompl
loop
test
ret
push
in
cmp
pop
shl
push
mov
push
add
insl
xchg
bound
pusha
dec
pop
add
mov
repnz
dec
mov
mov
jno
sbb
sub
cmpsl
popf
das
mov
push
sub
lock
and
add
adc
xchg
arpl
lret
ror
pop
adc
adc
jmp
ss
add
fnsave
sub
aas
ficoml
adc
push
shlb
dec
jns
repz
rcrl
xlat
lods
add
and
jl
add
aad
fnstsw
ljmp
cwtl
popl
out
mov
pop
inc
sbb
pop
testl
xchg
mov
ja
jne
add
ja
fdivrs
hlt
out
pop
adc
xchg
lods
lock
int3
add
mov
mov
popf
popa
push
pop
hlt
and
inc
add
roll
orb
xchg
lods
in
dec
movsb
jge
sbb
push
scas
and
add
mov
mov
adc
and
movsb
pop
in
ja
in
ss
push
dec
push
xor
fcom
mul
xchg
dec
hlt
ret
add
mov
inc
data16
or
add
xchg
iret
popa
dec
jae,pn
add
and
mov
dec
and
pop
push
js
cld
or
add
xchg
sub
mov
xchg
cli
lea
lods
xchg
mov
and
xchg
add
push
xchg
addr16
mov
pop
jns
add
jns,pn
dec
mov
pop
leave
into
cmp
adcl
test
jge
shll
push
xchg
fwait
ret
dec
addl
ror
xor
call
notb
sti
shlb
cld
cmp
add
push
ds
xchg
add
dec
or
cli
jne
sahf
jns
faddp
mov
xchg
loope
ljmp
adc
cmpsl
loopne
fldpi
rolb
cmp
push
pop
dec
imul
mov
add
add
dec
dec
inc
and
stos
repnz
push
fidivl
test
mov
testb
jns
lods
hlt
enter
xor
push
repnz
addr16
add
mov
aam
daa
add
inc
adc
repnz
rclb
int3
add
and
adc
dec
add
lret
dec
dec
sbb
adc
lcall
push
out
xor
add
stc
cmc
adc
push
fs
cmp
add
inc
xchg
test
adc
and
cs
stc
sub
add
add
xchg
mov
xlat
add
xor
je
push
push
dec
shll
in
mov
out
imul
xchg
add
and
enter
aas
mov
cmp
sahf
es
addb
mov
loopne
mov
and
idiv
call
add
dec
or
int3
pusha
es
out
pop
or
dec
je
add
idivb
add
dec
jno
test
jne
add
jb
das
add
adc
pop
adc
hlt
cltd
jae
dec
shlb
into
add
lret
movsb
les
adc
xchg
sbb
aaa
add
push
jne
add
in
shll
push
adc
sarb
add
ds
fdivrl
in
xor
into
add
xchg
cmp
adc
xchg
jecxz
cmp
pop
add
cli
add
daa
lea
xchg
adc
cmp
inc
push
or
add
mov
lock
xlat
adc
jecxz
test
fadds
pop
and
addb
incl
pop
push
iret
cmp
flds
mov
jb
pop
mov
adc
jmp
lret
roll
cld
roll
dec
cmpsl
jmp
sbb
test
lret
arpl
dec
scas
lods
pop
in
jb
jo
push
add
movb
adc
inc
pop
xor
xchg
scas
and
addl
pop
outsl
into
pop
out
lcall
out
dec
lods
pop
adc
and
add
call
push
ret
add
xor
pop
pop
sti
inc
fwait
or
movsb
or
js
pop
xor
sbb
push
lods
adc
jbe
in
inc
faddp
jno
sbb
hlt
push
add
aam
clc
imul
ret
inc
subb
add
mov
test
lea
jle
or
and
icebp
inc
nop
push
dec
push
mov
push
adc
daa
push
pop
adc
inc
fnstsw
lods
add
cmp
adc
test
xchg
fs
xchg
sbbb
mov
push
addl
dec
test
daa
shr
inc
xchg
inc
ljmp
lcall
xchg
jg
add
mov
and
outsl
loop
sub
scas
dec
and
lock
faddl
fists
into
xor
imul
add
pop
pop
add
fsubl
mov
push
push
addb
lea
test
insb
xchg
enter
jb
mov
movsb
shlb
rcrb
fmuls
mov
test
push
add
push
push
mov
or
fcoms
lahf
enter
push
std
inc
sub
add
dec
shll
pop
fadds
adc
lds
add
jecxz
and
mov
add
or
mov
int3
cmc
pop
rcr
xor
push
rolb
or
add
push
aam
inc
arpl
jl
sbb
xchg
insb
add
sub
add
fcomps
inc
add
pop
repnz
iret
adc
sarb
pop
jle
inc
lds
add
jmp
xchg
mov
or
sbbl
or
lock
add
jg
mov
push
out
inc
in
call
lods
test
sti
sbb
rcr
sub
roll
cld
xchg
jecxz
nop
push
mov
mov
xor
dec
sbb
pop
and
mov
sub
out
shl
hlt
lods
les
popf
xchg
lret
push
icebp
xchg
xchg
ja
jnp
adc
ss
mov
push
push
xchg
mov
call
movb
scas
in
imul
push
cmp
adcb
or
dec
lock
add
adc
inc
add
inc
call
jp
add
mov
jne
cmp
test
xor
or
inc
mov
call
hlt
mov
mov
lods
xorb
in
cmpsb
arpl
test
pop
and
add
cmp
lods
add
sbb
cmpsl
add
je
scas
pusha
movsl
aas
add
add
mov
add
mov
jno
jecxz
add
xchg
loope
add
aaa
in
jle
incl
cmp
add
iret
mov
shl
js
pushf
arpl
pop
fs
or
enter
push
jnp
shlb
fildll
repz
repnz
out
pop
add
outsl
mov
and
add
cmpsb
xor
sbb
test
sub
adc
dec
inc
jns
pop
test
add
adc
movl
and
adc
aas
sbb
push
mov
repnz
pop
cld
inc
or
add
xchg
sbb
xchg
sub
bound
je
aaa
in
adc
jno
ret
aas
inc
add
adc
out
ja
mov
aas
hlt
mov
aaa
ljmp
push
and
subl
out
ljmp
dec
repnz
inc
ffreep
add
and
jle
mov
mov
mov
inc
jns
aad
push
and
in
xchg
jg
add
cmp
and
xchg
xchg
add
and
mov
and
out
mov
inc
add
cs
imul
add
inc
mov
cmp
clc
mov
push
pop
pop
xlat
add
push
push
sub
or
jne
mov
cmp
cmc
pop
jo
cmp
add
icebp
bound
and
ret
sub
inc
cmp
cmp
fwait
pop
int
pushf
dec
pop
sub
cmp
push
icebp
mov
bnd
lret
or
and
mov
cwtl
jp
fadds
pop
cld
mov
pop
aas
clc
call
and
js
add
or
add
push
lret
decl
pop
fdivrl
add
loopne
add
and
cmp
add
sbb
push
stos
add
jo
mov
dec
jmp
add
and
mov
cmp
test
data16
adc
sub
repnz
jmp
inc
out
dec
mov
add
sub
pop
cmp
orb
lahf
push
dec
pop
in
add
loop
pop
es
push
or
lcall
adc
mov
or
icebp
or
inc
ds
testb
scas
sbb
and
xlat
inc
cmc
jmp
or
mov
sub
fs
scas
dec
and
faddl
cmpb
mov
int3
mov
sbb
es
push
in
jp
mov
push
cmp
lret
push
leave
hlt
push
pop
or
shr
stc
jl
add
test
and
dec
jne
jge
nop
xchg
inc
adc
and
add
dec
jno
scas
adc
sub
sbb
push
imul
hlt
mov
add
adc
add
or
pusha
lret
or
dec
push
push
push
add
xchg
out
repz
add
adc
jnp
rcrb
stos
mov
push
xchg
cmpsb
and
pop
sahf
cmp
add
lock
clc
imul
jo
fldl
inc
es
xchg
adc
outsl
mov
add
dec
xchg
mov
sub
cmp
incl
push
mov
inc
cmc
aas
and
xor
mov
sbb
mov
stos
loop
xchg
dec
add
sub
add
mov
xchg
fdivr
mov
or
add
xchg
test
out
mov
cmp
add
push
or
and
xor
mov
js
arpl
xchg
jnp
xchg
xchg
lahf
cld
stos
adc
mov
mov
cli
xsha1
cmpsb
cmova
and
icebp
sti
push
adc
inc
add
and
jbe
or
add
push
inc
dec
and
je
add
arpl
divb
sbb
sub
ret
mov
lret
jo
xor
shlb
cmpl
xchg
mov
push
fdivrs
fstps
add
jp
xor
ret
push
inc
test
add
sbb
add
xor
pop
or
sub
push
je
adc
cmp
roll
iret
jmp
and
out
xchg
add
filds
enter
jns
adc
xor
rcrl
or
in
add
add
mov
lea
js
dec
and
add
jne
sbb
push
lret
jmp
cmpl
add
and
les
or
add
and
or
add
add
dec
pop
xchg
xchg
and
push
and
and
cmpsl
clc
mov
add
bound
add
xor
dec
mov
dec
and
adc
popl
fidivrs
adc
test
adc
cld
movl
or
daa
sti
stc
pop
scas
mov
push
pusha
push
push
jae
dec
push
push
xchg
repnz
rclb
push
pop
dec
les
test
or
stos
and
mov
call
lret
lods
shrl
xchg
add
add
cmp
or
sbbl
mov
add
test
xor
add
loopne
xor
add
aas
ss
xor
jp
shld
addr16
pop
add
cmp
jnp
sub
inc
add
rorl
push
xor
mov
int
clc
cmp
and
in
lret
test
inc
mov
inc
add
enter
adc
adc
mov
loopne
incb
stos
push
daa
push
fisttps
push
push
jno
inc
rorb
pop
add
push
data16
push
movsb
and
daa
clc
xchg
cmp
fcompl
sar
inc
add
jg
xor
rcll
pop
dec
push
popa
add
fisubrs
and
jmp
xor
imul
in
or
add
int
mov
not
and
add
imul
andb
push
adcl
in
dec
arpl
lods
sbb
mov
xchg
int3
imul
mov
enter
lea
sub
sub
rolb
out
sbb
popf
outsb
push
jae
pop
push
and
sub
dec
add
push
insl
sbbb
inc
test
jp
add
popf
arpl
hlt
sub
jp
icebp
hlt
or
mov
jo
xchg
sbb
jmp
adc
loop
cmp
add
xor
fmul
add
cltd
jno
dec
popl
sbb
or
rcl
daa
xsave
test
sub
leave
adc
add
xor
jmp
jo
jge
dec
shr
jne
dec
sbb
xchg
cld
jb
das
xor
pop
add
pop
and
add
sub
int
xor
ja
pop
mov
xchg
popf
jp
vmread
push
add
xor
rclb
inc
sbbl
hlt
sbb
push
pop
and
and
or
in
add
dec
hlt
mov
cmpsl
jmp
push
xchg
pop
repnz
mov
es
je
pop
mov
xor
outsb
fcomi
and
push
inc
jne
insb
insl
jae
add
xchg
shr
outsl
add
or
pop
add
mov
lods
push
in
clc
orb
call
mov
push
sbb
imulb
xchg
mov
mov
add
adc
add
adc
mov
add
sub
add
dec
dec
pop
bound
lds
mov
std
adc
add
cmp
out
push
add
lret
and
and
add
incl
add
mov
add
mov
das
pop
subb
pop
mov
add
add
cmp
cmp
mov
cmp
jne
sub
sub
push
pop
add
inc
rcrl
pop
into
push
cmpsl
data16
mov
mov
sbb
out
cwtl
push
cmp
add
xchg
scas
mov
pop
xchg
add
sar
mov
push
sub
and
jle
aad
push
sbbb
jae
add
xchg
xor
pop
add
adc
mov
rolb
hlt
push
add
leave
daa
pop
sbb
or
jmp
pop
add
adc
pop
lcall
cmp
mov
pop
add
mov
lock
cmc
ljmp
roll
jae
or
jb
int3
fistpll
js
unpcklps
add
aam
in
add
int3
mov
push
into
push
idivl
pop
sbb
or
sbb
xchg
in
adc
xor
ds
inc
das
call
out
iret
rclb
fnstcw
mul
addr16
data16
les
or
scas
adc
add
cmp
xbegin
add
out
jmp
dec
cmp
rorb
cmp
pop
add
roll
lret
mov
add
add
add
push
rolb
mov
dec
sbb
ljmp
sub
add
mov
mov
mov
pop
jb
add
mov
cmp
rorl
daa
push
into
insl
sbb
dec
inc
push
lock
add
stos
sub
dec
sbb
sub
jno
mov
xchg
jl
add
das
and
lret
push
add
std
dec
rclb
aas
jae
adc
xchg
add
ja
mov
jge
push
jno
jbe
decb
loope
repnz
subl
add
jmp
or
add
cwtl
aad
cmp
xchg
add
jne
xor
in
or
cmpsb
xor
lcall
pop
addb
or
hlt
jns
push
lcall
mov
lods
scas
addl
or
adc
push
dec
shrl
adcb
pop
xchg
add
adc
sub
and
add
sbb
adc
roll
inc
xchg
ja
mov
aam
jge
mov
mov
mov
call
out
cli
repnz
je
push
in
lret
add
mov
sbb
cmpsb
xchg
or
in
or
lcall
ret
dec
je
lds
cld
mov
enter
shrl
xor
popf
imul
add
pop
push
push
mov
icebp
shrb
mov
cli
out
pop
jmp
push
das
lods
jb
add
and
cmp
mul
jmp
loop
jns
pop
jle
inc
add
pop
sahf
cltd
ret
jmp
push
sub
add
add
cmc
pop
push
rorl
push
test
mov
adc
jnp
daa
mov
sub
lahf
rolb
mov
mov
lods
xor
nop
ja
cs
loop
add
lcall
add
inc
and
or
cld
or
add
pusha
inc
adc
jg
add
add
rolb
or
mov
mov
inc
hlt
add
jg
out
inc
cmp
aam
push
lcall
popf
mov
repz
call
dec
add
lcall
pop
xchg
insl
jp
push
cmp
aad
repnz
insb
add
test
sbb
cwtl
dec
pop
orb
add
add
lods
psubb
and
dec
add
inc
and
jl
push
xchg
lods
push
jle
add
push
shr
cs
adc
not
insl
int
mov
sub
loopne
outsl
mov
add
aam
pop
pushf
inc
xchg
sti
bsr
hlt
add
adc
lea
mov
and
push
mov
stos
cli
in
int3
jne
in
push
add
cmpsb
mov
add
movsl
shl
xchg
mov
ds
adcb
leave
add
dec
aaa
outsl
jb
mov
mov
or
daa
or
rol
ljmp
movsl
sub
add
lret
sbb
adc
sbb
gs
adc
cmp
shrb
loope
test
or
xor
mov
inc
and
add
push
push
xor
pop
adc
sbb
sub
ret
int
inc
dec
cvtdq2ps
jbe
lods
enter
push
shlb
adc
sub
hlt
or
cmp
imul
and
mov
fs
lods
sub
add
das
push
dec
dec
add
insb
push
aam
cmp
add
mov
add
adc
sbb
dec
push
test
loope
cmpsl
out
add
dec
in
in
or
mov
shrb
xchg
call
bound
sub
mov
xor
fldl
rcl
or
or
inc
xor
xchg
pop
add
push
jnp
mov
mov
adc
adc
adc
js
dec
add
push
ja
add
mov
push
ds
xchg
mov
in
xor
add
xchg
inc
mov
sub
inc
aas
sbb
pop
adc
adc
add
sub
imul
dec
jns
add
aaa
lock
out
cmp
popa
dec
mov
outsb
add
dec
nop
xchg
mov
mov
out
cmc
inc
add
or
xchg
pop
testb
mov
jae
mov
out
add
sbb
test
add
inc
iret
adc
mov
das
sbb
xchg
xchg
mov
stos
jbe
out
sub
add
roll
mov
jne
pop
and
jnp
fisttpll
xchg
or
add
xchg
stc
xor
lret
hlt
pop
and
or
adc
add
pop
add
push
aam
lock
push
dec
mov
pushf
stos
sub
jecxz
inc
push
add
ret
cmpsl
loope
add
xchg
std
mov
or
jb
jmp
test
fmull
push
repz
aas
aam
xchg
add
and
or
push
and
mov
add
and
lret
loope
ja
jp
cmp
inc
lret
fcmovnb
mov
jle
add
jbe
imul
and
test
addr16
xor
add
adc
aad
clc
add
mov
xchg
ds
inc
mov
je
rolb
adcb
ds
scas
pop
insl
push
sub
shlb
jmp
test
pop
add
push
lahf
cld
sub
insl
mov
cmp
dec
ljmp
movsb
pusha
mov
aam
add
mov
push
in
cmp
inc
je
sbb
leave
push
sub
pop
cmp
jecxz
and
pop
pop
test
adc
xchg
mov
add
add
fcoms
jmp
jo
or
xchg
gs
test
mov
add
sbb
push
subb
notl
xchg
cs
push
add
repnz
or
add
mov
sub
movsb
incl
dec
and
ret
movsl
add
mov
and
pop
sbb
and
flds
mov
and
daa
inc
fsubl
add
pop
imul
add
lock
add
in
sbb
and
sahf
jecxz,pn
add
sub
add
adc
and
mov
inc
dec
pop
adc
sub
loopne
push
mov
ret
add
repnz
sub
mov
and
cmp
or
xor
in
mulb
jmp
lods
sbb
in
push
sbb
cmp
nop
pop
les
sbb
inc
add
aas
js
xor
or
nop
sbb
inc
paddd
in
xor
adc
push
movsb
push
jnp
sbb
pop
ljmp
nop
enter
add
andl
mov
dec
mov
push
add
mov
or
pop
xchg
aas
arpl
jecxz
pop
and
sub
pop
adc
mov
push
loope
subl
xchg
cmp
pop
dec
inc
shlb
les
xchg
cmpsl
xor
jo
push
into
mov
jp
or
add
je
shl
call
add
out
shr
sar
test
push
shrb
push
add
cwtl
push
xchg
mov
addb
add
or
js
pop
or
ljmp
lds
mov
lahf
js
xor
xchg
shlb
xlat
sbb
or
sub
rcrl
cld
and
sub
mov
push
bsf
push
loope
mov
inc
int3
outsb
dec
add
jbe
xor
adc
insb
orl
call
pusha
rcrb
pop
xchg
dec
push
ret
push
pop
jne
mov
dec
test
iret
pop
cmpsl
cmp
push
adcb
and
dec
out
mov
add
jmp
mov
push
adc
or
pop
and
adc
and
sarb
adc
or
inc
add
sub
shrl
fstps
mov
cwtl
adc
jne
or
add
push
adc
cmp
idivb
cli
or
sbb
out
pop
cmp
leave
push
push
xchg
cld
mov
jge
les
mov
idivb
sbb
popa
add
or
sbb
shlb
icebp
add
lea
out
out
into
int3
imulb
inc
jp
mov
js
mov
ss
adc
and
sub
add
jne
out
clc
mov
or
sbb
pop
pop
mov
mov
lea
add
pop
loop
fs
add
ss
pop
push
mov
and
add
mov
addl
dec
jne
xor
push
push
pop
push
loop
xor
xchg
xor
dec
das
pop
clc
sub
cmp
or
add
push
in
lock
div
andl
or
pop
cs
mov
or
cmp
mov
pop
xlat
add
push
stos
cmp
add
add
pop
scas
and
pop
adc
cwtl
addb
js
negb
add
dec
or
inc
add
mov
add
inc
dec
jne
sbb
ja
xor
pop
mov
std
pusha
xchg
mull
cld
jo
xor
aas
add
add
add
jne
push
mov
rcll
jae
add
xchg
lea
or
sub
and
add
mov
add
jns
clc
stc
cld
nop
or
adc
dec
and
test
sub
pusha
imul
lret
ret
push
out
and
popf
or
xchg
adc
mov
repnz
push
add
test
in
add
xor
push
hlt
jg
jno
add
cs
pop
out
sarb
push
add
mov
and
xlat
or
inc
int
add
fs
stos
or
cmpsl
mov
sub
inc
push
shll
enter
cmp
and
add
inc
mov
sbb
xor
loop
pop
add
inc
sub
add
fwait
mov
add
test
or
and
arpl
aas
add
popf
test
sti
cli
push
add
in
aam
cmp
jg
sbb
inc
rcll
pop
add
aaa
fildl
dec
push
clc
andb
out
ja
subl
addl
inc
xchg
add
call
mov
ret
lcall
add
in
push
pop
add
and
inc
sbb
or
inc
sti
lods
dec
call
das
or
sbb
popa
pop
or
shl
add
adc
push
loope
fstpl
out
mov
scas
add
lcall
push
clc
and
cmp
stc
mov
fcomip
sbb
arpl
xor
test
cmp
arpl
xor
push
jae
sahf
pop
mov
sbb
test
mov
or
sbb
mov
push
mov
ret
jle
inc
lret
mov
fistpll
fdivrl
and
xor
and
mov
sub
cmc
lock
adc
loopne
and
mov
out
pop
xor
mov
or
xor
adc
daa
adc
pop
cld
out
pop
push
jl
stc
or
cs
test
scas
mov
out
lret
in
pop
mov
dec
fmul
or
adcb
add
and
sub
jb
das
mov
jg
pop
cmp
call
add
push
inc
aad
loope
sbb
mov
lea
push
sarl
xor
outsl
or
call
adc
or
subl
add
scas
cwtl
jle
sbb
and
pop
dec
pop
sub
je
adc
verw
mov
jge
mov
add
mov
xchg
or
add
jmp
lods
mov
ret
pop
push
add
sub
sbb
in
xorb
cmpsl
fs
xor
lock
and
add
or
mov
mov
imul
sbb
roll
cld
cmp
je
or
es
das
addb
xor
fdiv
xchg
push
aam
decb
std
inc
xchg
mov
psubb
mul
sti
pop
xor
in
hlt
cmp
loopne
push
leave
pop
repnz
and
test
popf
sti
in
js
inc
xor
mov
add
cmp
xor
or
in
in
mov
jo
push
inc
jmp
call
fbld
or
pop
push
test
mov
jg
jle
add
mov
cmp
filds
ret
cs
rclb
testb
fdivs
xor
insl
subb
cmp
in
out
jg
out
out
into
js
lret
lock
repz
orb
clc
or
movsb
mov
fldl
mov
cld
lcall
shrl
je
subb
enter
xor
or
add
mov
enter
sub
jmp
adc
gs
jmp
idivl
clc
scas
ja
inc
mulb
mov
stos
lahf
xor
cmp
cmpsl
imul
dec
xchg
repnz
adc
icebp
mov
cmp
xchg
and
mov
adc
fsubrl
cmc
and
cld
mov
sub
cmp
pusha
pop
and
pop
loope
sbb
popa
imul
pop
sti
ucomiss
ds
xchg
aam
scas
or
fwait
cs
sub
or
inc
jns
js
jmp
data16
mov
cwtl
scas
add
divl
or
loop
add
fcmovb
mov
sbb
or
or
fidivs
repnz
add
bound
add
mov
add
lret
sub
mov
jmp
les
shrl
fxch
les
add
movsl
shlb
add
inc
xchg
dec
ret
shlb
or
out
or
je
xchg
xor
or
repz
movsl
jb
inc
push
dec
mov
jns
or
js
test
dec
subb
push
movsl
dec
test
or
add
dec
xor
push
mov
and
pop
mov
stos
mov
test
insb
push
add
fbstp
sbb
fiaddl
sbb
pop
xor
xor
cwtl
xor
stc
or
scas
or
sub
cwtl
adc
lods
cmp
adc
push
into
xchg
push
shl
xor
enter
cwtl
pop
add
jmp
popf
push
popf
and
mov
push
ret
dec
mov
pop
or
jle
loopne
cltd
pop
or
and
enter
add
loope
or
clc
jge
fdivrs
div
jnp
loope
mov
push
cltd
js
icebp
add
push
test
in
push
xor
add
imul
lock
xor
divb
loopne
cmpsl
or
ret
pop
test
mov
and
mul
pop
iret
xor
ret
mov
dec
in
dec
movsl
xchg
stos
dec
mov
ficoms
mov
or
pop
out
push
or
jnp
xchg
and
push
or
clc
punpcklwd
jl
adc
adc
and
lret
aaa
sbb
mov
or
or
jle
sbb
cmp
xchg
xor
adc
inc
add
mov
adc
dec
add
fs
push
mov
fldl
jns
dec
mov
loopne
ljmp
push
and
jmp
add
dec
jmp
mov
adc
bound
scas
sbb
call
dec
stc
xchg
xor
push
and
jge
cmp
mov
fsubl
add
sbb
dec
push
outsl
lds
add
xchg
js
repnz
add
arpl
cwtl
sbb
in
adc
and
clc
add
inc
pop
add
pop
or
and
movsb
pop
mov
aas
jg
mov
scas
mov
jecxz
and
jmp
pavgb
and
add
out
pop
inc
and
sbb
nop
and
add
in
dec
stc
repnz
cmp
or
addr16
test
scas
in
and
mov
inc
mov
and
test
adc
add
push
cmovno
fsubs
sbb
cmp
xor
xchg
insb
xchg
rorl
jmp
xor
call
mov
loop
xchg
fldenv
test
push
push
clc
jecxz
pop
test
dec
sub
cld
jmp
xor
dec
push
data16
mov
jo
push
es
or
pop
add
outsl
shrb
into
mov
push
xor
test
sbb
xchg
shrl
shr
sahf
scas
add
cmp
popa
xchg
lcall
adc
add
mov
jg
mov
cmp
adc
push
mov
das
arpl
dec
or
xor
sbbl
add
mov
hlt
pop
add
jecxz
pop
imul
leave
and
rorl
adc
mov
push
inc
jecxz
es
fiaddl
pop
or
or
test
add
jg
loope
cmp
push
aas
dec
add
pop
mov
push
sbb
shrl
sub
loope
movsl
or
dec
mov
aas
inc
ret
add
loope
add
or
lahf
subb
jmp
in
and
cmp
mov
mov
sub
dec
cwtl
js
pop
sub
popf
sti
ret
mov
mov
outsb
xor
or
push
mov
or
push
mov
sbb
adc
pop
in
jmp
inc
imul
xchg
aam
adc
add
pop
push
cmp
cli
loope
and
dec
std
mov
imul
sbb
mov
fcomps
dec
popf
pop
imul
int
call
xor
stc
jno
add
push
sub
test
jno
sbb
movsl
xor
fsubl
call
add
in
pop
inc
push
pop
jns
or
out
fs
pushf
mov
push
cmp
push
sbbb
push
adc
push
xchg
xchg
test
jo
lock
jo
sahf
adcl
inc
hlt
aam
mov
adc
lret
sub
mov
xor
xchg
inc
loop
aaa
loopne
iret
cmp
or
cmp
inc
cmp
pop
cmpl
inc
fiadds
fidivl
add
test
rorb
dec
loop
add
es
jb
mov
inc
dec
add
sbb
add
mov
mov
data16
add
rcl
leave
fistps
cmc
adc
sbb
out
jl
add
pusha
test
lahf
mov
stc
lods
sbb
leave
dec
push
in
cmp
in
jb
sbb
adc
addb
jle
xchg
lods
push
adc
sbb
mov
andb
add
clc
mov
jb
add
and
push
jnp
je
jne
dec
movsl
sbb
fistpl
mov
lahf
in
cli
ja
mov
nop
push
jl
adc
sub
jae
inc
sub
or
xor
jnp
pusha
std
sbb
sahf
jl
ror
adc
push
test
and
dec
mov
dec
fists
mov
adc
leave
inc
shrl
pop
and
lret
mov
or
out
testb
or
add
arpl
cmp
or
imul
cld
add
jno
jecxz
dec
xchg
adc
mov
add
mov
les
add
jp
sbb
stc
xchg
mov
repz
gs
leave
jg
cld
daa
in
lea
ret
push
and
loope
roll
es
dec
inc
rcrb
and
lods
dec
adc
or
test
dec
xchg
sub
in
push
or
popa
fwait
or
loopne
test
ficoms
or
mov
dec
fmull
repz
jge
rcrl
mov
xchg
jmp
push
stc
fadds
cmpsl
int
repnz
dec
out
sub
xchg
cmpsb
movsl
jns
jnp
cmp
pop
adc
adc
and
dec
fs
pop
out
add
sbb
add
or
cmpsb
or
jne
xchg
dec
test
mov
mov
loope
and
push
cwtl
mov
mov
movsl
mov
mull
pusha
nop
jnp
push
nop
lods
add
jns
mov
mov
and
cmc
nop
mov
adc
push
stos
jae
add
into
dec
sub
ss
add
rcrl
insl
sub
out
jle
sub
pop
inc
inc
pop
enter
mov
xchg
js
jle
xchg
dec
les
sbb
fisubl
sbb
int3
jne
add
fnstsw
mov
add
stc
inc
mov
xchg
les
mov
and
jns
shll
dec
add
push
pop
mov
repnz
inc
dec
fsts
lea
clc
loopne
push
loope
add
js
or
jnp
roll
outsb
ds
jnp
jno
sbbl
xor
push
mov
xchg
sbb
mov
addr16
popf
test
fmull
outsb
mov
cmp
movl
and
insb
stc
lcall
movsl
mov
pop
sub
xor
mov
daa
lea
pop
je
out
and
jecxz
leave
in
push
out
add
and
add
andb
inc
and
mov
adc
pop
dec
push
decb
add
inc
or
add
or
adc
cmp
popf
xlat
inc
into
ja
in
dec
or
mulb
ret
xchg
pop
out
mov
daa
pop
js
pop
loopne
mov
arpl
add
fdiv
and
cld
test
or
push
cmp
pop
orb
lods
fisttpl
sbb
cmp
call
and
je
out
add
or
dec
pop
cld
test
ja
add
push
adc
sub
imul
push
int
cli
inc
mov
dec
add
ja
jne
pop
push
push
cmpsl
jl
jle
and
jo
cmpb
push
stos
adc
std
out
sub
pop
xor
outsb
cld
push
and
or
std
sub
add
roll
push
divl
and
cmp
cli
or
add
sahf
or
sbb
js
push
fisttpll
cmp
and
sbb
or
sbbb
ror
repz
or
loope
out
cli
add
cld
outsb
dec
clc
cmc
mov
mov
cld
mov
in
bound
sub
and
add
adc
push
orb
lret
popa
add
fiaddl
clc
cmpsl
ljmp
adc
xchg
add
inc
scas
mov
dec
aad
imul
test
mov
nop
fsub
out
add
stos
cmpsl
in
xchg
adc
mov
add
xor
or
pushf
stos
ret
scas
sbb
add
aaa
sub
adc
add
inc
popa
outsb
pop
daa
je
cmp
fs
out
aas
nop
jo
pop
dec
ret
in
add
push
or
inc
sbb
sbb
lea
icebp
pop
mov
jmp
pop
lock
xchg
mov
push
std
cli
loopne
lcall
gs
add
testb
addb
int
jp
push
add
das
adc
add
add
push
jmp
jns
cwtl
mov
sbb
rclb
dec
add
mov
or
xchg
add
cmpl
add
mov
and
mov
sahf
loope
add
jle
adc
test
add
cltd
fldcw
pop
sub
add
add
test
xor
jg
xchg
rcr
xchg
sbb
inc
sub
push
call
xlat
jns
mov
fistpl
xchg
dec
popf
inc
mov
rol
cmpsb
pop
xor
sub
outsb
rcrl
or
loopne
rolb
sbb
in
xchg
test
out
inc
bound
call
fidivrs
mov
sub
js
add
jmp
xor
fs
jl
das
add
cmp
pop
push
ret
mov
inc
push
xchg
xor
scas
cmc
sbb
mov
rorb
mov
fdivrl
icebp
sarb
dec
add
jmp
cld
dec
add
test
cmpl
add
xchg
xchg
mov
or
pop
xchg
inc
std
push
test
inc
inc
aam
inc
bound
das
adc
scas
dec
mov
adc
add
arpl
inc
mov
lock
sub
call
cmp
je
xor
add
je
add
push
and
mov
les
mov
add
adc
add
ja
dec
pop
iret
lock
mov
call
clc
inc
cmc
sub
add
inc
mov
andb
adc
pop
dec
sti
mov
jb
add
adc
enter
int3
or
repz
stos
lods
dec
dec
adc
mov
push
jno
push
hlt
sarb
jo
add
jae
enter
stos
mov
sub
cmp
ljmp
jne
push
add
daa
push
adcl
in
sbbl
mov
in
clc
sub
add
js
adc
or
jecxz
test
push
aam
and
fadds
dec
cwtl
loop
add
jle
xchg
and
int3
lods
stos
movsl
mov
add
cs
cmp
es
pop
add
and
mov
adc
xor
nop
popf
add
out
inc
xor
pusha
stos
stc
add
sti
sub
sarb
mov
adc
sbb
jne
sbb
mov
mov
fcoml
rolb
sbb
aas
push
pusha
push
or
or
sub
jns
idivb
imull
dec
push
jg
add
xor
cmc
scas
cltd
das
mov
cmc
inc
test
sbb
std
ret
xor
add
aad
scas
repnz
lcall
add
test
sbb
push
xor
cmp
movsb
test
sbbb
sbb
push
dec
jno
pop
ficompl
mov
push
rcrb
cmc
bound
or
inc
insl
shrb
add
dec
movsb
scas
add
sub
cwtl
imul
add
pop
lds
call
add
movsb
orb
rolb
insb
loop
sbb
jo
add
push
je
movsl
leave
ss
dec
add
inc
xorb
call
cmp
inc
add
addb
sbb
or
mov
testb
mov
call
sahf
test
inc
jno
andl
lea
jo
xchg
pusha
dec
jbe
jg
inc
add
push
pop
fldt
loope
mov
xchg
jo
add
jnp
pop
push
jne
xchg
pop
dec
leave
or
add
cli
mov
mov
add
mov
or
loopne
mov
add
sbb
add
sub
popf
test
sbb
inc
sbb
nop
cmp
mov
push
subb
inc
mov
pop
cs
sbbb
das
mov
ja
push
mov
popf
mov
sbb
sub
pop
cmpsb
movsl
addl
or
call
test
xor
xor
aam
hlt
pop
mov
xor
mov
clc
repnz
inc
cld
cmp
loope
pop
es
jae
add
fidivrs
lock
push
test
popf
add
sarb
add
dec
mov
mov
xchg
ret
mov
fsub
js
adc
sahf
or
adc
mov
or
imul
pop
add
inc
pop
or
in
and
and
les
loopne
call
mov
and
adcl
faddl
jmp
cmc
xchg
xlat
pop
and
lock
xchg
inc
sarl
add
ja
xor
mov
jne
fisttps
shll
and
divb
out
in
hlt
inc
add
adc
leave
mov
or
mov
inc
jne
repz
sahf
add
stc
sbb
cmpb
bsr
xchg
jg
rcl
add
dec
andb
mov
je
inc
mov
faddp
dec
pop
add
push
mov
add
push
jle
jmp
daa
in
dec
pop
cli
cmp
cmp
cmp
add
push
jmp
add
push
sbb
ret
ja
and
lret
iret
adc
not
sub
mov
xor
add
dec
add
add
jb
push
sarb
push
clc
xor
and
cltd
add
cmp
mov
xchg
push
movsb
repz
jle
roll
push
stos
and
cld
cli
adc
cwtl
mov
test
mov
dec
add
lcall
adc
lock
and
lock
push
pushf
add
inc
lcall
stos
sbbb
jl
xor
sub
add
jg
add
out
dec
pop
sbbb
jne
stos
xchg
jo
add
clc
imul
sbb
pop
add
ljmp
push
subps
cs
rorb
xchg
push
inc
dec
call
hlt
or
or
subb
add
rclb
adc
mov
addb
cmp
filds
rorb
add
xchg
data16
cmp
pop
add
mov
loope
jae
jb
sub
sbb
popf
adc
leave
push
jl
call
add
sar
adc
scas
fcomp
pop
ljmp
cli
scas
pop
sbb
xor
inc
pop
or
cmovg
call
add
push
enter
aas
add
adc
loop
nop
lret
push
cwtl
lods
cmp
pusha
stc
jne
dec
loopne
pop
add
adc
xchg
sub
les
and
cmp
adc
add
ja
and
add
mov
add
and
push
hlt
cmpsl
sbb
add
ds
jge
add
subb
dec
les
popf
add
in
jno
divb
jne
jg
add
cs
stos
into
inc
or
mov
mov
ds
test
sbb
jle
aam
pop
add
and
cmp
inc
mov
mov
gs
or
repz
jne
add
mov
leave
pusha
cmp
mov
sbb
addl
add
add
add
inc
iret
mov
sbb
pushl
sub
add
pop
push
pop
add
dec
dec
out
xor
imul
cmp
dec
rol
lock
lret
sbb
cli
lret
add
cmp
cwtl
and
pusha
add
dec
hlt
dec
es
sbb
flds
mov
jae
insl
orb
lahf
fadd
push
add
stos
sahf
arpl
pop
xlat
add
loop
xor
cmp
lock
ret
pop
inc
enter
pop
addr16
mov
add
scas
test
mov
jl
subb
push
add
xlat
mov
inc
add
push
sahf
aam
sub
add
jle
or
fidivrl
add
adc
adc
popa
call
and
mov
inc
mov
mov
add
pop
fwait
mov
jno
add
mov
pop
or
add
dec
lock
cmp
jo
add
sarl
sub
sbb
jnp
add
enter
add
inc
xchg
jno
inc
pop
push
mov
jbe
decl
push
repnz
dec
cmp
add
test
leave
out
mov
jg
dec
xor
scas
add
or
and
push
inc
mov
int
push
mov
clc
push
add
xor
mov
rcr
lret
xchg
ds
roll
adc
jge
mov
pop
mov
sub
push
pop
andb
shlb
add
in
orl
mov
xchg
push
and
add
movsl
xlat
je
add
test
cmp
ret
mov
roll
push
fcoml
mov
int3
add
xchg
cmpsb
sbbl
out
xor
stos
add
sbbb
xor
add
or
add
cmp
cld
or
stc
bound
dec
mov
push
xchg
je
andb
cli
fnstenv
sbb
loopne
mov
les
mov
xchg
andl
pop
mov
jne
adc
sbb
and
jmp
fmull
lea
xor
inc
or
pop
dec
push
cmp
mov
xor
jne
pop
xor
pop
mov
nop
ljmp
pushf
add
xchg
jp
push
int
xor
out
ret
adc
push
test
push
in
jp
add
sbb
sbb
cmp
inc
dec
je
or
test
ds
jno
cmp
pop
in
sbb
and
add
addl
cld
jl
lods
jo
lock
push
jmp
test
dec
jne
outsl
ljmp
pop
cmc
cmp
addb
pop
fadd
jmp
je
mov
jnp
xchg
fsts
enter
adc
jl
add
pop
add
jg
clc
jge
push
cwtl
jae
dec
ja
or
xor
push
sbb
add
jae
movsl
outsl
stos
xchg
clc
push
jne
pop
add
fdivs
fdiv
dec
pop
jns
add
jmp
cld
push
nop
jno
add
pop
stos
out
cmp
mov
lock
std
cmp
add
mov
mov
adc
subb
xor
dec
inc
sub
inc
add
push
insb
pusha
dec
adcb
mov
sti
add
pop
leave
add
test
add
inc
test
dec
jne
daa
add
adc
popa
add
jmp
jo
lcall
lods
xlat
fwait
add
aad
jge
rol
pop
xchg
dec
jne
lods
les
fldenv
popf
pop
roll
or
mov
or
pop
pop
jno
rol
les
mov
push
or
or
in
rcr
xchg
fcoms
lods
shll
cli
mov
mov
mov
stc
les
add
in
out
faddl
decl
pop
stc
add
into
sub
add
inc
int3
jno
pushf
sub
add
ret
or
ja
add
adc
adc
callw
add
pop
cmp
je
add
ljmp
add
dec
mov
ret
xlat
xchg
cmp
addb
repnz
or
add
outsb
mov
xor
mov
xchg
dec
hlt
mov
movsl
mov
dec
add
xor
mov
mov
dec
mov
adc
xchg
add
data16
dec
or
mov
jae
push
addr16
add
cmpl
ja
stos
add
lcall
es
add
and
push
add
mov
or
pop
cld
fs
ret
mov
sub
add
idivl
das
push
inc
pop
add
and
imul
jge
push
dec
sti
pusha
cmp
pop
sub
scas
adc
jge
mov
cmpsl
add
inc
iret
pop
bound
call
lret
and
addb
add
jg
push
add
push
mov
inc
pop
dec
jmp
aaa
out
leave
push
jl
add
pop
std
xchg
js
add
lret
inc
cmpsb
movsl
adc
or
add
push
jno
pop
adc
loope
cmp
faddl
fcoms
in
cld
in
repnz
xchg
dec
cmp
adc
jne
jle
push
stos
aam
lcall
inc
andl
sub
add
div
adc
subb
xchg
pop
add
loopne
fdivrl
inc
stos
cs
add
jns
and
data16
clc
mov
fdiv
mov
mov
cmp
push
outsb
loopne
adc
jecxz
shlb
or
rcrl
fwait
or
les
mov
jge
mov
nop
loop
inc
fwait
pop
mov
xor
or
cmpl
xchg
adc
adc
inc
mov
mov
or
stos
stos
sbb
ficomps
loopne
loope
cmp
xchg
jne
outsb
std
and
mov
in
pop
in
mov
ja
add
fsubs
add
pop
or
jb
add
xchg
adc
mov
leave
xlat
xchg
dec
jb
in
outsl
es
and
sbb
mov
das
add
add
les
test
sbb
ss
xor
adc
in
into
add
jecxz
push
or
and
push
xchg
in
pop
lahf
add
cmp
sldt
push
inc
popf
pop
push
call
xchg
sbb
pusha
add
dec
add
mov
rorb
lahf
jge
add
push
arpl
sbb
out
imul
lcall
add
icebp
es
push
add
cmp
or
sbbb
aam
cmp
rclb
sub
cmp
jne
push
mov
jbe
sbb
mov
repz
add
ljmp
popl
add
cmp
pop
lret
cmpsl
clc
test
push
add
push
ret
test
mov
aam
loope
fsubrs
or
cmp
scas
enter
loope
adcb
cmc
or
pushw
fs
cmp
icebp
add
loope
test
dec
cmc
add
cltd
popf
jne
add
mov
add
les
add
xor
add
dec
loopne
fsubrl
mov
fwait
adcb
movsb
ds
push
xor
mov
scas
inc
daa
add
aad
ja
cld
jge
add
and
xor
sbb
and
adc
add
jae
add
push
cwtl
jp
pop
add
sub
gs
xchg
or
xor
jmp
xor
clc
sub
adc
faddl
push
lock
imul
mov
in
mov
xorb
das
or
adc
pusha
xchg
adc
lock
out
add
arpl
je
das
repnz
rolb
pushf
aas
cli
roll
lea
adcb
not
sub
das
pop
fidivrl
std
adc
roll
pop
dec
aas
movsb
rcrb
imul
jecxz
push
sub
nopl
jl
lahf
ret
sahf
sar
out
hlt
jle
add
adc
add
in
inc
add
mov
cmp
sub
mov
mov
aad
adc
jb
sbb
push
jo
add
test
cmp
add
aad
adc
loop
jne
add
cmpsl
inc
popf
ret
test
imul
add
mov
stos
add
and
pop
out
cmp
add
xchg
or
add
mov
sub
inc
mov
test
push
add
outsl
mov
enter
cmpsl
incb
inc
pop
and
insb
sub
lods
add
mov
push
sub
mov
push
int3
lods
add
cmp
daa
fildl
push
dec
jg
fwait
mov
mov
pushf
scas
orl
mov
lahf
or
mov
and
sub
or
test
add
adc
mov
inc
push
pop
mov
mov
daa
or
cmpsb
lahf
dec
jle
mov
rclb
cmp
jl
add
daa
adc
imul
cmp
sub
mov
push
and
data16
icebp
add
out
push
inc
cmp
add
lds
add
dec
fildll
enter
fisttpll
push
mov
stos
and
andl
and
and
mov
push
add
and
cmp
sbb
add
adc
mov
xchg
cld
push
lahf
nop
pop
into
adc
add
push
das
mov
adc
add
js
xchg
or
mov
and
xor
mov
pop
cld
or
pop
pop
lea
xor
aad
imul
or
sbb
test
je
rcrb
pop
test
incb
add
dec
xchg
mov
push
add
nop
cmpb
add
ret
pop
xchg
aad
pusha
sub
jmp
sbb
inc
pop
inc
call
xor
test
mov
push
scas
fadds
stc
arpl
add
cmpl
add
lahf
rorl
out
ds
add
add
push
mov
test
and
pop
mov
test
mov
add
xor
enter
je
xchg
or
push
fs
lcall
in
xor
add
fsts
adc
cs
push
sbb
dec
in
add
add
dec
xor
jae
cld
lret
sub
jmp
pop
fdivrl
mov
xlat
mov
add
cmp
add
cmp
sub
lcall
add
inc
test
push
xchg
out
scas
add
adc
dec
cmp
aaa
push
test
inc
xchg
jge
add
or
sub
ja
jmp
adc
add
pop
fstpt
sbbb
out
lret
push
mov
add
mov
adc
dec
enter
inc
add
in
out
lods
clc
mov
or
add
sub
jae
push
xor
outsl
add
es
push
and
sbb
clc
cwtl
rclb
ja
add
mov
mov
add
mov
lea
incl
push
mov
enterw
mov
add
push
xor
push
add
add
in
mov
push
add
mov
ror
test
call
and
nop
les
or
cmp
pop
add
adc
ret
insb
loopne
les
mov
sub
push
cmp
add
jbe
enter
sub
add
lock
stos
inc
adcb
adc
and
and
add
shlb
add
push
add
dec
cmp
cmp
adc
stos
mov
test
add
and
and
mov
jno
add
sub
test
popf
cmpb
mov
push
mov
test
call
add
fidivl
xorb
pop
mov
mov
push
and
push
dec
add
scas
stc
loope
aaa
or
xchg
movb
inc
or
mov
inc
adc
xchg
gs
pop
dec
hlt
mov
testl
jmp
std
ret
jg
hlt
ds
add
call
imul
xor
lcall
add
add
and
mov
push
add
push
sub
lcall
inc
call
sbb
jns
add
jl
xor
add
ja
add
out
fsubr
or
sub
pop
ret
orl
lock
sarb
xor
mov
lods
push
push
add
lea
pop
adc
mov
push
imul
pop
pop
inc
jne
in
add
loop
shlb
add
push
xor
cwtl
add
pop
lods
push
std
pop
lock
adc
dec
inc
push
inc
rorl
inc
dec
push
inc
or
nop
adc
add
xor
cmp
shlb
add
cwtl
sub
push
data16
sarb
inc
xchg
add
jmp
enter
cmpsb
pop
adc
cli
add
cltd
ror
out
pop
xor
and
adc
mov
test
inc
test
xchg
push
add
adc
dec
add
enter
js
push
add
outsl
lods
callw
pop
and
push
jae,pn
adc
cld
mov
jbe
add
int
sub
popf
jl
lret
incb
push
dec
leave
add
add
out
xchg
pop
jmp
xor
test
stos
dec
dec
sbb
addl
mov
add
and
push
cld
inc
add
push
sbb
pop
nop
enter
mov
stos
shrb
lea
add
cmp
add
into
inc
add
dec
andl
dec
jo
sbb
jg
pushf
rcll
mov
jb
aam
push
push
push
or
test
cmp
inc
add
out
adc
push
js
sbb
shlb
xor
das
add
or
fistl
xchg
loopne
add
jl
rolb
sub
sbb
mov
and
jb
movsb
test
fcomi
mov
repz
shrb
jo
xchg
add
shll
add
xor
into
js
rolb
add
mov
in
cmp
rcrb
dec
sbb
add
xchg
xchg
das
add
cmp
jno
add
jecxz
sub
rolb
popl
add
pop
lods
pop
mov
scas
cmp
pop
push
mov
inc
sbb
ljmp
adc
aas
cmp
scas
jne
addl
jns
mov
and
add
test
icebp
out
mulb
ds
add
es
or
push
test
in
jg
mov
fwait
test
xchg
sbb
add
pusha
mov
jg
int
int3
dec
lcall
sti
and
adc
push
push
xorb
es
in
add
dec
stos
cwtl
repz
adc
add
aaa
enter
xor
insl
loopne
test
add
mov
or
scas
add
mov
cmpsl
jb
clc
fcoml
or
xor
lahf
pop
cmp
pcmpeqb
jo
pop
pop
add
mov
iret
inc
or
sti
out
clc
lahf
sahf
xor
cmp
and
mov
xchg
pop
or
mov
cmpsb
mov
push
cli
cmp
or
pushf
add
inc
or
addr16
pop
push
mov
push
cmc
lock
dec
dec
xor
mov
in
cmp
xchg
sbbb
pop
adc
add
sub
mov
add
mov
cwtl
repnz
adc
or
pushl
sbb
sub
push
hlt
add
iret
ja
add
dec
scas
cmpsb
add
xor
in
ret
add
add
pop
jns
icebp
add
inc
add
add
mov
daa
mov
xor
gs
subb
jle
dec
jl
xor
add
inc
xchg
addr16
sbb
lea
or
dec
je
jecxz
and
jo
test
add
call
pop
in
push
pusha
je
add
mov
add
pop
jmp
popa
sbb
shlb
pop
mov
sbb
cmp
les
sub
mov
stos
test
cli
sbb
sarb
movsl
push
add
push
shr
loopne
add
fsubr
shlb
add
fnsave
jo
add
xor
sub
pop
add
sbb
mov
add
rolb
xor
pusha
add
andb
insl
into
pop
pop
clc
xchg
add
jecxz
in
push
aad
xchg
add
sbb
loopne
clc
push
push
add
push
mov
pusha
push
pop
and
cli
cmpsl
mov
mov
xlat
pop
xchg
jo
or
js
andl
sti
subb
jo
push
add
out
inc
push
dec
jns
repz
add
inc
xor
mov
ljmp
push
push
xchg
push
mov
pop
icebp
or
jae
mov
mov
push
lods
add
pop
aam
stc
add
pop
scas
add
lock
clc
adc
push
push
add
mov
and
loopne
add
push
cmp
pop
add
add
lods
mov
add
in
pop
jo
add
leave
jns
ja
into
ret
fisttps
add
cmpb
pop
add
mov
jge
add
mov
enter
mov
adc
jo
incb
pop
mov
lea
fistpl
sub
sbb
adc
pop
add
push
ret
jbe
cmpsb
jns
lds
and
or
imul
add
nop
arpl
mov
rol
push
nop
fisubs
fidivs
testb
or
test
stos
xor
fistl
add
dec
mov
mov
pop
sub
add
or
jl
iret
fs
mov
dec
pop
sti
xor
or
and
sub
push
fcomps
shlb
hlt
pop
mov
repnz
push
cld
and
adc
mov
nop
cmp
fisttpl
add
je
js
lods
cmp
call
jge
jne
jp
ss
mov
add
out
sbb
cmpb
loopne
mov
add
push
add
jne
in
sub
rol
sbb
fadds
lock
enter
add
pop
repz
add
test
lods
movsl
xchg
pop
push
rcrl
sub
push
loopne
jbe
out
ss
sbb
movsl
sahf
inc
adc
cmp
push
add
add
pop
enter
jmp
not
rolb
pop
lret
jp
push
sahf
add
hlt
andl
sbb
mov
ss
add
add
adc
add
mov
push
cmp
loop
orb
ds
popa
xchg
arpl
push
loopne
jns
pop
add
adc
sbb
pushf
lahf
add
lock
mov
cmpsb
push
cmc
cwtl
es
aam
or
nop
add
lahf
or
loopne
add
mov
inc
dec
adc
in
mov
and
sub
jmp
iret
adc
inc
in
sti
pop
push
pop
push
add
jnp
nop
add
call
push
add
add
sbb
lods
add
xor
out
mov
fstpl
daa
push
cs
shlb
insl
or
jmp
sbb
stos
lods
add
sbb
icebp
mov
cmc
bound
jp
add
fidivl
jo
add
lea
mov
add
push
out
shr
add
std
push
or
add
js
mov
adc
inc
mov
addl
mov
aaa
pop
push
cmp
jo
add
out
in
loop
pop
xor
cli
add
cmc
sbb
inc
and
shrb
lock
mov
or
xchg
mov
add
out
push
and
pop
xor
mov
rol
or
add
inc
mov
jns
or
jle
mov
adc
or
push
add
ffree
outsl
push
jnp
sbb
into
jb
rcrb
fstps
inc
cmpsl
int3
add
mov
sarl
mov
in
dec
in
scas
pop
clc
cld
mov
pop
mov
insb
cmp
add
sub
dec
popf
xchg
sbb
xchg
cmp
int
add
or
pop
scas
imul
or
pop
ret
mov
add
xchg
bound
jge
add
in
xchg
das
add
pop
add
icebp
ret
lock
and
push
add
popa
xor
xchg
mov
cmp
sub
dec
or
add
sub
push
adc
jae
bound
jecxz
cmp
xchg
in
and
push
inc
xor
dec
adc
xchg
es
jno
rcll
ret
lock
push
cmp
and
loop
add
or
lods
or
mov
or
mov
jg
add
sahf
jne
push
mov
jae
sti
push
dec
lods
add
jp
or
xchg
das
fadd
or
add
xor
data16
pop
jp
xor
addr16
add
pop
add
pinsrw
pusha
mov
loope
imul
leave
add
adc
ret
pop
pop
pop
call
shl
loop
lods
popf
lds
lods
cwtl
push
add
pop
shlb
sub
add
cmp
stc
adc
sti
add
and
repnz
jp
loope
mov
xchg
mov
mov
add
iret
jmp
add
in
stos
pop
pop
scas
test
dec
add
out
pop
mov
nop
outsl
mov
add
add
movb
sub
fcmovu
and
adc
unpcklps
cmpsl
xchg
lock
pusha
inc
outsl
mov
add
jp
pop
outsb
xchg
pop
jmp
adcl
fnstsw
testb
in
xchg
aad
ja
shrb
rclb
mov
sti
fiaddl
mov
add
int
stos
cmpsl
pop
xchg
add
sarl
popf
add
addr16
repz
test
xchg
sub
jg
lods
and
pop
hlt
outsb
test
mov
ret
test
dec
addl
mov
stc
mov
loopne
dec
and
pusha
fwait
add
add
lock
adc
jbe
pop
xor
mov
cmp
fwait
jbe
ljmp
iret
xlat
inc
sbb
push
ret
sbb
insb
add
data16
out
add
imull
loopne
mov
add
imul
pop
mov
movsb
aam
xor
sbb
push
sbb
cmp
les
outsl
inc
cmp
testl
loopne
adc
pop
incb
adcb
jp
jmp
add
add
out
dec
pop
pop
adc
hlt
mov
mov
add
aad
inc
xlat
pop
pusha
popa
adc
jle
loop
sahf
sbb
adc
push
add
testl
aaa
xor
jo
xchg
xor
dec
sbb
leave
dec
movsb
subb
out
push
and
ret
cli
out
loop
add
xor
rolb
adc
subb
jle
mov
add
mov
mov
ljmp
jecxz
add
jb
or
daa
sbb
or
jge
mov
add
xchg
imul
xor
mov
jl
mov
cltd
pop
xor
add
mov
lcall
popf
shlb
add
incb
push
arpl
mov
inc
pop
pop
sub
loopne
add
dec
jmp
jo
scas
cmp
mov
sbb
sub
fildl
repnz
push
mov
xchg
stos
rolb
scas
and
pop
fs
mov
fidivs
push
push
adc
and
xchg
ja
addb
loop
pushl
adc
pop
cs
in
cmp
or
arpl
cmp
out
xor
add
add
sbb
dec
add
out
aad
push
subl
daa
inc
leave
les
mov
pop
aad
add
dec
sbb
cmpsl
mov
out
adc
push
jne
mov
add
les
mov
test
cmpsb
das
mov
jne
jge
in
add
jle
dec
stos
call
cmp
fs
mov
mov
add
jb
adc
pop
adc
orl
inc
sub
and
in
js
pop
out
sbb
mov
jb
data16
cmp
push
and
add
and
ja
and
jnp
inc
je
sbb
jl
in
inc
inc
mov
fwait
shr
pop
inc
loope
add
test
pusha
mov
jge
cmp
lret
add
cmp
or
pop
clc
cmpsl
add
std
push
add
add
popf
arpl
and
icebp
or
cmpb
pop
xor
adc
inc
adc
jp
push
pop
scas
mov
add
mov
sbb
sub
push
xor
inc
and
xchg
pop
adc
add
aad
cmpb
add
add
jns
out
scas
mov
in
pushf
or
add
stos
sbb
mov
push
dec
dec
pusha
push
daa
cmp
sbb
and
loopne
sub
adc
adc
movsb
dec
xchg
add
in
xchg
lds
add
test
nop
add
das
test
insb
push
jae
add
pop
cmpsl
fadds
test
xor
jmp
adc
aaa
js
inc
xor
sbb
insl
ds
mov
das
mov
or
push
jns
add
sub
lods
sub
cmp
xor
add
ret
popa
add
push
mov
outsl
aas
inc
sub
clc
cmp
xor
seta
test
push
out
int3
jno
add
xchg
cmc
inc
stc
add
lods
sbb
push
xchg
rorb
cwtl
lret
fsubl
adc
add
iret
or
in
jb
push
mov
adc
add
dec
mov
or
pop
loopne
cmp
add
mov
xor
add
cmp
je
adc
push
jmp
jnp
int3
add
or
pop
cs
jmp
push
lea
call
out
add
popf
bound
mov
loopne
or
mov
shll
and
sti
dec
shlb
push
jmp
js
mov
xor
or
lahf
add
push
push
jbe
dec
jne
outsb
cmp
test
and
inc
pop
xor
dec
mov
mov
cwtl
add
les
enter
ljmp
in
mov
inc
sbb
test
shl
bound
pop
aas
mov
adc
cmp
xor
pop
in
in
push
push
std
add
add
dec
push
sbbb
or
inc
adc
dec
dec
sbbb
movsb
push
adc
or
inc
or
dec
or
roll
scas
pop
aam
push
add
mov
enter
jle
push
sbb
push
push
mov
pop
mov
cwtl
or
push
pop
adc
cltd
add
jb
xchg
jo
dec
imul
mov
popf
add
nop
inc
and
sbb
sub
cmp
adc
add
in
daa
or
push
xchg
or
das
ret
add
xlat
popf
lret
movl
xchg
or
cld
popl
add
add
adcl
idivl
sub
and
add
jmp
jae
add
pop
mov
fucomi
in
jo
ds
cmp
add
or
or
push
lea
mov
sub
and
adc
mov
addl
outsl
sub
popa
sub
je
add
and
fisubrs
or
scas
add
xor
lret
pop
movsl
add
mov
adc
dec
cs
sub
jecxz
mov
fstps
out
jnp
das
pop
add
mov
pop
adc
mov
icebp
inc
mov
dec
jnp
cmp
pop
push
jmp
cltd
mov
or
scas
jo
add
loopne
pop
lods
xchg
loopne
or
roll
and
stos
jg
roll
andb
add
sbb
hlt
mov
shlb
loopne
add
std
xchg
add
add
popf
iret
or
loop
sbb
dec
add
pop
and
sahf
mov
inc
cmp
and
jp
aas
stos
push
insl
addr16
jle
add
push
cmp
movsl
or
fidivrl
sub
jge
mov
scas
shl
subb
add
cld
jnp
je
cmp
and
pushf
int
add
inc
inc
xchg
xchg
shlb
stos
test
push
hlt
add
clc
or
jo
add
aam
xchg
dec
jb
and
pop
cwtl
xlat
pop
jecxz
jg
das
add
cwtl
push
cld
mul
insl
add
or
and
push
push
sbb
mov
or
scas
loop
and
add
sbb
lods
lods
add
push
hlt
outsl
add
add
jo
add
int
test
call
addb
inc
out
adc
xor
les
test
mov
xchg
jo
add
pusha
out
adc
popf
add
add
push
adc
cmp
mov
addl
ja
scas
or
add
insb
sub
loope
imul
add
lods
mov
and
pop
mov
add
shlb
fcoml
sbb
mov
jge
mov
jl
jmp
mov
lods
arpl
jp,pn
adc
mov
shll
aas
orb
inc
std
push
add
adc
add
xchg
loopne
pop
mov
popf
pushf
lret
xor
lcall
push
dec
add
or
pop
sbb
cwtl
repnz
mov
movsb
sub
enter
push
add
adc
or
xor
ret
add
cmc
leave
push
addb
mov
adc
mov
cmpsb
cwtl
or
jne
shll
rol
add
adc
push
cld
leave
pop
roll
jge
inc
daa
cmpsb
negl
fcomps
xchg
adc
out
sbb
out
cmp
shrl
push
mov
adc
aam
add
push
lahf
stos
add
pushf
jb
push
pop
add
cmp
xchg
mov
mov
add
cmp
mov
cmp
arpl
insb
loopne
mov
sbbb
out
dec
adc
inc
faddl
add
inc
mov
jge
xlat
add
bnd
data16
add
or
mov
adc
adc
scas
add
dec
in
movsl
pushl
in
mov
or
add
mov
in
in
xchg
iret
or
aad
dec
gs
mov
lods
dec
xchg
and
mov
jl
imul
movsl
or
jg
lods
cmpsb
cmp
sbb
jne
mov
xor
add
add
daa
out
js
les
cmp
jno
push
add
xor
clc
and
mull
add
mov
mov
jmp
pop
sbb
adc
and
loop
les
push
or
outsl
shlb
mov
sub
xor
pop
fsubrs
aam
xor
call
js
jb
push
fcomi
mov
push
add
or
and
add
test
cmp
mov
ret
pop
popf
inc
popf
int
and
adc
add
sub
icebp
xor
pop
imul
in
addb
xor
or
es
sub
fwait
add
push
sub
inc
xchg
add
fnsave
addb
in
adc
repz
loop
mov
test
pop
mov
pop
popa
das
push
pushl
stos
sbb
add
mov
cmp
cvtdq2ps
pop
ficomps
aaa
adc
arpl
shrb
inc
ja
dec
pusha
and
stos
pop
add
push
pop
push
dec
mov
add
cmpb
add
pop
stos
inc
add
popa
add
test
mov
movsb
and
sbb
pop
mov
push
pop
adc
push
sbb
dec
dec
pop
sbb
add
mov
leave
pop
and
add
xchg
mov
dec
lcall
enter
fwait
pop
ret
sti
gs
adc
dec
call
mov
sbb
add
xchg
in
sbb
push
shrb
jge
mov
movups
dec
push
sbb
ss
cmpsl
add
mov
push
xchg
add
fbld
push
lock
push
and
sub
nop
sub
sbb
add
adc
mov
sub
or
add
jbe
push
add
mov
adcl
mov
add
jns
mov
add
cld
pop
sub
xchg
xchg
mov
scas
add
stos
add
pop
outsl
movsb
aaa
psubsb
dec
jmp
pop
push
sbb
add
jmp
push
push
add
or
add
cld
pusha
cli
xchg
add
sbb
add
adc
shlb
jnp
dec
out
push
push
mov
leave
cmpsl
insb
add
popf
dec
testb
adc
rcll
mov
rcrb
add
dec
leave
test
out
jne
in
add
pusha
lea
push
and
iret
test
dec
or
add
xchg
addb
mov
add
adc
sbb
sub
pusha
xchg
inc
add
jo
mov
dec
add
dec
add
adc
adc
mov
adc
or
push
pop
jo
add
add
push
mov
push
cmp
jb
push
add
mov
shrb
mov
pop
lods
mov
das
inc
or
add
and
loopne
addb
mov
das
mov
shll
and
daa
add
sub
shr
add
loop
lret
and
sbb
arpl
pop
pop
jbe
mov
ret
loope
test
iret
loop
aam
int3
pop
andb
add
les
inc
push
sub
cwtl
adc
push
mov
and
lahf
into
mov
add
lds
cmp
out
mov
and
jbe
xor
mov
or
mov
pop
mov
sbb
or
inc
inc
add
lds
add
mov
sub
add
inc
ret
adc
adc
add
lea
push
adcb
xor
rorl
add
add
sbb
les
xchg
js
pop
xor
inc
push
pop
cmp
ret
addl
ds
addl
decb
ficomps
out
sbb
add
and
add
add
test
xchg
add
dec
dec
mov
add
jmp
push
add
and
and
repz
sbb
push
inc
dec
scas
lds
aam
fwait
xchg
cwtl
add
push
mov
sti
cmp
add
rcrb
imul
fistps
loop
inc
rcrb
cmpb
and
lret
add
cmp
add
loop
lea
and
cmp
or
xor
fs
scas
and
add
cmovle
or
xor
inc
mov
pusha
push
sti
in
dec
imul
push
shl
jge
add
or
push
mov
ret
mov
not
cmp
stc
add
jae
daa
addr16
punpckldq
lret
cltd
sarb
and
aam
andb
pop
in
enter
lock
fimuls
shr
mov
inc
sbb
or
sub
add
xchg
pop
addr16
add
pop
stos
mov
and
xor
or
pop
mov
inc
or
cs
mov
test
cli
add
mov
ret
int3
out
call
add
mov
pop
test
pop
mov
add
lcall
clc
push
mov
out
and
popa
roll
jecxz
into
jg
xchg
cmp
dec
out
xchg
shll
add
sbb
mov
lea
or
jb
add
and
inc
rolb
dec
add
add
jmp
sbb
push
mov
insl
add
dec
cmp
cmp
inc
or
outsl
push
add
mov
push
add
dec
clc
pop
movsb
add
adc
lcall
push
daa
repz
adc
arpl
push
add
int
mov
leave
test
xor
add
lret
push
stos
add
add
mov
popf
add
push
add
mov
repz
sub
pop
add
xchg
leave
or
sbb
ret
insb
adc
mov
sub
inc
push
mov
in
jg
loopne
sets
xor
inc
jmp
jne
push
decl
je
mov
jle
add
push
add
dec
and
adc
jmp
add
adc
sub
pop
pop
push
or
add
loop
movb
pop
sub
inc
or
mov
rcrb
jae
add
push
push
stos
mov
mov
push
lock
and
lock
int
push
inc
and
out
shlb
add
cmpb
or
push
orb
pop
movsb
push
sbb
gs
rorb
aas
add
dec
jne
imull
inc
push
inc
call
pop
nop
pop
test
or
pop
mov
sub
dec
mov
mov
push
mov
popa
sub
inc
hlt
std
add
push
dec
cltd
sbb
cmp
inc
or
add
cmpsl
loop
and
fs
or
rorb
lock
pop
inc
add
call
shr
lea
pop
outsb
mov
addps
mov
lods
inc
add
or
cwtl
pusha
jmp
xor
and
int3
cs
ss
xchg
sub
test
or
hlt
out
fsubl
xor
jle
sub
ror
xchg
aam
or
fdivs
in
insl
movsb
xchg
add
push
xor
or
adcb
add
mov
pushf
and
xchg
ds
sbb
or
cli
je
cmp
jb
add
sub
pop
pop
mov
push
add
adc
loop
data16
inc
mov
dec
add
xor
adcl
xlat
push
push
xchg
pusha
orb
inc
xchg
jo
enter
shr
or
inc
or
xchg
mov
add
negb
adc
add
xorl
cmc
sbb
add
push
fcmovnbe
mov
cld
flds
push
adc
fdiv
add
jae
mov
ret
loop
mov
jmp
sbb
enter
xchg
pop
mov
pop
push
in
add
bound
enter
inc
lea
xchg
jae
out
push
inc
add
or
loop
and
cwtl
jnp
xchg
or
push
adc
in
pop
into
cld
rorb
and
sub
add
std
xor
loopne
fadds
adc
movsl
lcall
add
mov
push
jbe
xor
pop
add
arpl
sub
pop
fstpl
fwait
push
lahf
roll
ja
pop
ret
add
loop
push
adc
ja
add
lcall
cmp
pop
jl
dec
jo
jge
and
addb
scas
sub
add
and
clc
or
cmpb
pop
subb
cmp
push
fs
add
and
dec
pop
mov
sbb
rcrb
js
mov
shlb
xorb
xor
lds
lret
add
lret
sbbl
pop
xorb
negb
inc
test
mov
pusha
jno
mov
cmpsl
enter
and
add
inc
fs
or
cltd
test
push
mov
adc
loopne
push
or
enter
js
pop
push
fnstenv
add
adc
stc
pop
xor
pop
pusha
mov
lock
cmpb
push
mov
adc
and
arpl
fs
inc
lods
or
mov
and
xor
xor
ret
cmpsl
add
mov
mov
loopne
and
sub
add
xor
dec
push
sbb
dec
add
adc
pop
nop
add
mov
orb
and
inc
mov
mov
add
sbb
sbb
add
mov
insb
xlat
and
cmp
add
imul
aam
cmp
cld
in
jmp
add
sub
sarb
mov
dec
add
inc
aam
rcrb
adc
mov
cld
dec
lea
hlt
xlat
and
jmp
xchg
jns
stc
and
xchg
sahf
pop
lea
add
fmul
xor
xor
jle
paddusb
add
cmp
adc
rcr
or
test
xor
xor
enter
inc
and
test
movsb
andb
add
mov
pop
jns
add
or
mov
or
int
aam
mov
shlb
loope
xchg
push
inc
sbb
or
int3
pop
or
or
xor
sbb
mov
dec
add
aam
and
pop
lods
add
rorb
sbb
fimull
inc
adc
mov
sbb
or
mov
rclb
outsb
je
insl
gs
jb
loop
out
addl
clc
ljmp
inc
sbb
inc
mov
jg
out
push
and
in
or
pop
mov
or
xor
lods
adc
cwtl
jo
pop
add
or
ljmp
aad
clc
xor
pop
jo
sbb
or
pop
add
add
lock
outsb
clc
pop
sbb
xor
adc
adc
xor
pop
mov
outsl
pusha
outsl
push
arpl
mov
std
test
mov
mov
sar
fdivr
loopne
call
mov
adc
sbb
add
mov
and
push
pop
or
mov
andb
inc
rcrb
in
jno
push
xor
inc
imul
mov
xor
adc
cld
jno
data16
mov
outsb
jns
add
mov
inc
dec
out
stc
mov
cmpb
hlt
push
add
inc
dec
cmp
add
arpl
push
insb
insl
aam
jno
jae
je
js
jp
add
popa
imul
adc
clc
push
sbb
xchg
insb
and
lcall
jmp
nop
test
xor
cwtl
mov
sub
xchg
das
add
dec
jmp
xor
dec
adc
fsubl
ret
lock
or
add
call
pop
or
int3
jo
into
shrb
push
sub
je
ljmp
mov
aaa
add
dec
loopne
hlt
pop
cmp
jmp
xchg
add
and
js
add
push
pop
fwait
jo
push
dec
push
pop
pop
sbb
dec
rolb
jl
add
aas
add
stc
movsb
aas
and
sbbb
sub
or
mov
pusha
shrl
ret
call
aam
and
xchg
add
rol
incl
add
jns
add
cmpb
es
popl
sbb
add
sbb
push
add
aam
inc
aad
inc
add
mov
incl
pop
nop
dec
int
add
subb
add
ljmp
mov
inc
push
stos
jnp
add
dec
sbb
pushf
sbb
xor
pusha
repnz
jo
rcl
pop
add
lds
add
out
or
add
or
push
es
inc
shlb
jl
xor
xor
jns
add
and
lcall
popf
in
or
clc
sahf
add
lahf
xor
mov
cmpsb
mov
sbb
push
cmpsl
adc
scas
inc
pop
std
add
add
jae
sub
call
sbb
xor
pop
nop
loop
jp
test
mov
or
xor
pop
cmp
add
add
repnz
mov
bound
enter
je
pop
roll
add
add
mov
in
or
mov
adcb
and
jle
pop
pushf
rolb
inc
mov
lods
rcrb
pop
push
hlt
add
fs
lock
ds
mov
inc
adc
sbb
pusha
mov
sahf
mov
daa
cltd
add
inc
pushf
movsb
inc
loopne
dec
mov
add
js
cmp
cmp
int3
fs
pusha
pop
pop
xor
or
pshufw
inc
sbb
dec
pop
shl
in
movsl
jo
cmp
and
push
iret
cld
mov
dec
enter
addr16
ret
jns
out
rcll
cwtl
xchg
repz
jo
xchg
pusha
xor
adc
cmp
fs
int3
sub
sub
xchg
addr16
jl
and
sahf
cwtl
bound
stos
shlb
jl
lock
loope
xlat
rcrb
jmp
mov
or
sub
jns
fsub
nop
sahf
fmul
cmp
adc
jl
add
add
push
hlt
pop
or
dec
dec
in
xor
bound
xor
xchg
mov
add
cltd
adc
repnz
lcall
pop
add
mov
lods
add
rclb
mov
cmp
add
pusha
push
add
add
xchg
add
sbb
add
adc
out
cli
aam
icebp
cs
add
ds
mov
adc
and
dec
clc
fiaddl
pushf
xorb
mov
and
jl
mov
mov
cli
test
cli
mov
ljmp
push
xor
adc
pushf
xchg
lods
and
stc
mov
int
in
xchg
pop
add
dec
xor
outsb
orb
mov
out
into
loopne
inc
call
push
xor
cmp
jo
and
pop
mov
lcall
mov
in
cld
push
and
xchg
je
movsb
mov
jo
testb
stos
xor
int3
add
dec
call
hlt
or
je
mov
dec
sbbb
mov
dec
mov
add
xchg
adc
cltd
xor
aas
or
cmp
inc
jb
outsb
mov
sub
adc
add
sbb
sub
mov
add
jbe
xchg
negl
mov
fwait
adc
and
push
inc
inc
push
adc
xchg
adc
in
and
shl
or
movsl
pop
and
and
mov
out
clc
adc
stc
outsl
adcl
jnp
push
jb
cwtl
add
dec
mov
adc
add
push
mov
jl
add
xchg
bound
je
add
or
sbb
es
add
inc
xor
hlt
add
push
and
dec
insb
xchg
jbe
push
add
gs
shl
add
cs
mov
lahf
inc
cmp
add
outsb
jae
add
or
fs
push
add
fbstp
xchg
imul
mov
out
mov
int3
xor
cmp
pop
add
sbb
dec
fldt
and
jp
cmp
jne
jb
jne
inc
in
jecxz
push
push
sub
pusha
outsl
arpl
push
hlt
sbb
in
sbb
push
sub
push
gs
jns
adc
fs
mov
push
pop
insb
add
inc
jns
add
or
cs
sub
je
fisubrl
inc
cmpsb
sbb
jns
ret
sahf
jmp
cmp
bound
rcll
js
and
cltd
pop
sbb
rclb
dec
add
outsl
inc
and
push
add
ds
add
arpl
std
pop
xchg
dec
popa
outsb
jl
inc
cmpsl
add
inc
imul
push
cmp
push
rclb
cmp
sub
push
xchg
lcall
mov
fs
mov
push
adc
xor
jae
adc
stos
jge
add
mov
aas
push
push
cmp
and
push
je
or
or
dec
adc
inc
pop
dec
dec
ja
add
movb
and
stos
sbb
push
faddl
xor
or
cmp
add
jp
dec
inc
jns
repz
insl
push
add
je
cmpsl
loop
jo
inc
add
fldpi
or
dec
add
adc
jb
add
and
inc
cli
lcall
test
dec
dec
incl
popa
pop
inc
inc
outsl
js
dec
cmc
xor
dec
fildl
xchg
jo
loopne
or
add
and
in
sub
loopne
shlb
push
mov
insl
and
mov
add
fidivl
xchg
jp
pop
xchg
push
dec
outsl
push
cmp
add
int
es
dec
add
lods
pop
gs
adc
jbe
xor
daa
push
neg
add
loop
push
int
and
cmovge
dec
push
inc
lea
jl
xor
movsb
mov
stos
adc
inc
outsl
sbb
push
adc
add
xorb
icebp
jne
add
xchg
xor
mov
dec
clc
int
or
scas
add
cmp
sbb
add
imul
in
loopne
enter
push
popa
pop
add
inc
xchg
xorb
outsl
fnstcw
xor
fsubrs
or
pop
add
jno
lret
jns
push
cwtl
inc
pop
jne
add
cmp
mov
inc
aam
outsl
sub
repnz
cwtl
mov
std
rcrl
dec
cmp
sub
cs
push
mov
push
ja
add
shl
cmpsb
sub
xor
lock
test
jns
inc
sbb
jae
add
dec
xor
add
cmp
add
mov
jbe
xchg
pop
add
lcall
call
jb
sarb
pop
testb
inc
stos
xchg
inc
daa
jae
mov
test
popa
arpl
es
inc
pop
mov
stos
cmovns
test
mov
sub
cli
aad
fsubrs
mov
sbb
push
jo
push
cmpsb
add
outsb
and
imul
add
cmovg
subb
outsl
adc
add
push
or
arpl
dec
aam
shlb
pop
add
adc
inc
add
mov
and
add
fs
jge
add
stos
pop
enter
outsl
pushf
shrb
or
sub
ret
push
sahf
inc
mov
dec
push
mov
cli
and
jo
rcll
dec
lea
daa
sub
push
add
xchg
fwait
push
pop
pop
or
dec
push
adc
fmuls
jle
fisttpl
andb
arpl
add
lcall
inc
or
arpl
fmul
sbb
mov
addr16
pusha
sub
movsb
and
mov
mov
pop
das
push
pop
xor
hlt
dec
sub
and
cmp
js
dec
jp
inc
jne
addr16
dec
sahf
push
mov
scas
sbb
sbb
cmp
add
push
js
inc
movsb
pop
insb
nop
inc
clc
xchg
hlt
sub
sbb
sub
aaa
and
mov
add
out
out
lods
jecxz
add
mov
loopne
fs
sbb
fsubl
jo
sbb
fldcw
fimuls
fcoml
or
adc
push
test
add
push
add
ljmp
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
call
push
and
es
add
mov
pop
pcmpgtb
jnp
sbb
add
sbb
xor
popf
cmp
add
jle
mov
add
xchg
xor
daa
adc
and
cmpb
xchg
out
fwait
je
jbe
js
jp
jl
add
loope
xor
leave
mov
add
xor
das
jbe
js
dec
mov
aas
mov
push
fwait
aaa
mov
xlat
mov
inc
cmp
mov
rolb
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
dec
call
negl
inc
mov
rolb
xor
adc
or
xchg
pop
dec
add
bsr
jecxz
add
xor
lret
xor
in
adc
xchg
add
js
jp
jl
mov
popf
sub
jo
and
pop
and
inc
mov
mov
sahf
aas
xlat
popf
loopne
out
stos
inc
daa
pop
cmp
xorb
cmpsl
xchg
es
inc
xchg
lds
iret
dec
icebp
cmp
pop
ss
leave
push
shrl
fldcw
dec
icebp
adc
pop
fildll
repz
add
add
xor
cmp
push
dec
aaa
subl
xor
lock
les
sbb
cmp
popf
push
test
sahf
stos
ds
cmp
pop
cmp
cmp
aas
cltd
sub
sbb
push
cmp
add
mov
movsl
sbb
or
cmp
outsb
add
shrb
xor
popf
xchg
sbb
xor
mov
cmp
scas
aas
mov
shlb
loopne
cmc
in
or
pop
inc
sub
xor
repnz
dec
je
jbe
js
jp
jl
add
adc
in
call
hlt
sar
out
incb
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
call
lcall
cmp
sub
pop
subb
jb
je
jbe
js
jp
dec
les
aas
jecxz
lock
add
or
add
sub
cmp
scas
cmp
push
cmp
cmp
jb
jp
or
loop
lcall
iret
mov
cmp
cmp
ljmp
aas
or
mov
inc
sub
xor
cmp
repz
cmp
push
cmp
cmp
jb
mov
ja
lret
out
out
out
out
loopne
sti
andl
add
or
xor
xchg
test
sub
dec
out
in
pop
lret
aas
xor
add
cld
js
jp
jl
jle
mov
cwtl
dec
mov
mov
rcrb
call
in
lret
add
je
jbe
js
and
lret
iret
inc
add
dec
cltd
or
and
jo
jl
sbbb
lahf
mov
adc
mov
pop
or
and
and
sub
pusha
xlat
cmp
lahf
inc
pop
int
push
cmp
cmp
jo
sahf
or
mov
cwtl
js
add
shl
in
call
call
or
pop
xor
and
decb
subb
nopl
mov
mov
clc
enter
sar
fsubrp
lock
add
jbe
add
jp
jl
jle
xor
cmp
dec
dec
insb
dec
aas
js
jl
xorb
jecxz
repz
repz
enter
aam
fdiv
fsubl
ret
and
lahf
in
enter
adc
and
sub
xor
popl
out
cmp
cmp
add
andb
je
jbe
js
jp
jl
push
mov
push
in
test
cld
subb
push
cwtl
fs
push
mov
iret
movsb
iret
test
lods
iret
mov
jmp
loopne
shr
adc
daa
or
xchg
inc
push
ret
pop
punpcklbw
je
xchg
fnstenv
push
jl
sub
cmp
or
adc
repz
and
inc
dec
jp
fsubl
jle
push
movsl
ret
jae
shrb
mov
mov
pusha
repnz
add
add
add
jbe
dec
adc
mov
pop
mov
pop
mov
inc
pusha
xchg
insb
jo
je
js
mov
lods
out
out
loopne
fs
cmp
enter
sarb
add
or
adc
sahf
sbb
and
xchg
xor
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
pusha
mov
leave
push
mov
stc
fmuls
mov
iret
in
call
cmp
dec
sub
sub
iret
xor
xor
imul
pop
lcall
xor
dec
divl
in
rorl
pushf
in
mov
js
add
repnz
mov
fs
lock
hlt
popf
clc
add
cmp
jg
inc
roll
dec
xor
push
lock
add
les
imul
xor
add
lret
call
add
mov
sarb
mov
adc
push
mov
loopne
and
add
add
xor
lahf
roll
out
push
xor
pop
cmp
aaa
mov
inc
movb
out
hlt
sar
cld
jb
je
jbe
sti
loope
and
repnz
idiv
cli
stc
clc
pop
cmp
cmp
sbb
pusha
cmp
push
add
cmp
into
rcr
ds
bound
mov
mov
nop
out
call
and
testb
pop
xor
leave
out
fcomps
add
push
cmp
cmp
aas
test
iret
mov
mov
stc
int
rorl
add
cmp
pop
addr16
or
clc
add
sbb
cli
xchg
inc
je
dec
mov
loopne
add
dec
invd
jae
add
dec
testb
push
add
push
cmp
jns
jb,pt
adc
or
lea
unpckhps
rolb
add
daa
add
push
add
cld
and
imul
push
xchg
hlt
mov
mov
mov
dec
add
shll
ljmp
cwtl
cmp
cmp
fstpt
movb
stos
xchg
add
in
call
lock
cmp
jne
add
outsl
cmp
jle
in
jle
daa
add
inc
mov
push
pop
add
add
cmp
add
icebp
pusha
push
xor
pop
in
xor
hlt
sahf
cmp
jmp
rolb
rolb
and
fcos
sub
sbb
add
dec
loopne
and
jmp
add
inc
sbb
pop
xor
rolb
imul
jecxz
repz
jno
or
xor
in
or
dec
jb
push
xchg
dec
leave
cltd
add
stos
fnstcw
aaa
cmp
cmpsb
mov
in
enter
push
xor
mov
outsl
out
cmp
cli
dec
andnps
pusha
shlb
pop
adc
jbe
addl
mov
xor
repz
lock
add
mov
mov
sub
aas
out
pushl
pop
add
mov
iret
ljmp
addb
adc
dec
and
pusha
sub
ds
fs
add
in
repz
adc
leave
xor
inc
cmp
jmp
sub
ror
pusha
or
cmp
sub
inc
lock
lcall
push
bound
jne
add
orl
enter
jmp
fdivrl
in
cld
frstor
xor
mov
pop
cld
lahf
and
xchg
sub
jb
je
jbe
pop
inc
ds
aas
push
aas
push
aas
pop
aas
pop
aas
pusha
sub
je
insb
sub
and
stos
inc
xchg
jmp
cmp
aad
lods
pop
clc
xchg
pop
notb
in
call
rcl
dec
inc
add
or
sbb
hlt
sbb
mov
mov
js
add
mov
out
test
inc
jmp
aas
jb
out
sarl
int3
lahf
loopne
in
in
nop
movsb
hlt
pop
cld
adc
adc
push
add
sub
xor
mov
inc
in
add
push
xchg
jl
into
rcrb
add
pop
cmp
cmp
xchg
mov
mov
hlt
adc
xchg
fldl
pusha
add
cmp
jb
sbb
add
arpl
test
cltd
fdivs
scas
fisubrs
xlat
mov
in
cld
mul
add
cmp
or
push
mov
test
mov
pushf
pop
cmp
cmp
jnp
test
mov
rcl
into
ret
int3
fpatan
push
and
das
mov
pop
inc
add
push
jl
in
push
es
dec
pop
sbb
push
sub
test
stos
rcl
add
sbb
xor
test
push
lods
push
int3
lcall
mov
push
lcall
add
lahf
add
jne
test
pop
ret
js
dec
add
push
cmp
fcomp
add
adc
sub
sbb
xor
sbb
movl
clc
test
pushf
shl
add
out
push
ss
insb
xchg
cmp
sbbl
mov
fwait
repnz
mov
daa
sbb
loope
cmp
sbb
inc
je
insl
lock
push
pop
js
dec
cmp
mov
add
scas
xchg
jne
lcall
mov
je
jbe
pop
xchg
jo
add
and
inc
or
cmp
insb
loopne
addr16
jbe
pop
mov
addl
mov
add
mov
cmpsl
inc
aad
movb
jne
outsb
jmp
inc
cmpb
push
mov
icebp
mov
test
mov
out
test
loopne
fucomp
add
aaa
and
decb
dec
sub
add
push
xchg
xor
lock
stc
jb
add
fcoms
push
or
cmp
or
jnp
and
mov
sub
xor
orb
gs
in
mov
fadds
in
into
adc
pushf
cmp
out
or
dec
aas
addr16
scas
xlat
inc
loop
lock
mov
push
xor
and
dec
jo
or
or
push
push
add
js
pop
mov
jge
rdmsr
cmp
daa
outsl
punpcklbw
bnd
add
xor
xchg
daa
rcrb
dec
add
jp
rcrb
xor
xor
movb
outsb
rorb
movsb
jl
dec
mov
je
stos
iret
mov
rclb
xchg
push
js
mov
adc
gs
jp
xchg
push
subb
je
jl
jnp
movsb
add
pop
mov
pusha
xor
mov
sbb
rcrb
adc
in
add
or
mov
mov
jle
mov
rorb
xor
add
adc
adc
ret
mov
mov
add
mov
ljmp
jecxz
jle
and
bnd
lock
inc
and
rcll
dec
xchg
mov
dec
or
das
xadd
orl
sbb
pop
inc
push
cmp
and
jle
out
mov
push
xchg
xchg
sub
add
lahf
cmp
dec
mov
cmp
inc
int
add
outsb
loop
pop
addb
xchg
addb
cmp
mov
fsubl
add
into
loope
add
fxch
hlt
jmp
jmp
loop
imul
xchg
shlb
pop
out
fimuls
jo
pop
je
dec
push
ret
add
roll
pop
cld
and
daa
inc
gs
rol
clc
add
xchg
rcrb
add
stos
push
hlt
push
jmp
clc
xchg
es
dec
add
jb
adc
sub
clc
dec
dec
popa
jl
cmp
test
xchg
cmp
add
mov
jo
add
clc
dec
push
jo
cwtl
mov
stos
xchg
fisubs
inc
adc
fsubr
add
push
mov
add
add
or
push
add
nop
sub
sub
mov
add
sbb
xor
popf
fiadds
add
jno
mov
jns
add
sbb
loop
loopne
add
in
sub
outsb
dec
jb
lock
add
xchg
mov
mov
sbbb
add
pop
in
call
test
or
out
mov
pop
popf
mov
mov
fcomps
popl
cmp
inc
push
push
cmp
inc
orb
add
dec
aas
push
dec
test
nop
xchg
lds
or
mov
test
push
cmp
add
xor
sub
pushf
push
out
add
cwtl
int
adc
push
cld
mov
mov
lea
mov
jne
call
pop
add
push
push
cmp
cli
and
sub
das
add
inc
mov
add
cmp
ret
or
push
arpl
pop
push
xchg
js
or
dec
test
repnz
repnz
xor
call
add
or
xor
rolb
push
jbe
dec
inc
adcl
jecxz
repz
xchg
into
add
faddl
or
sub
adc
sub
adc
push
push
dec
sbb
add
sub
dec
repnz
js
negb
je
push
adc
pusha
je
sbb
mov
pop
in
mov
and
xor
add
dec
xor
push
cmp
jp
xchg
jle
xor
add
mov
clc
hlt
xchg
add
test
inc
xchg
or
add
lcall
pop
shrb
mov
mov
data16
fcomps
jle
sub
xchg
jg
sbb
push
xor
pop
and
popa
icebp
mov
pop
popf
mov
add
pusha
jo
mov
imul
ficoms
mov
cmp
in
test
daa
xorb
cmp
cmpsl
repnz
int3
lods
cld
pop
and
ja
inc
sahf
mov
add
mov
xchg
sub
pushf
fadds
movsl
add
or
add
stos
ret
sbb
xor
push
lcall
adc
jb
pop
in
pop
or
lret
fs
xor
clc
out
sbb
ror
aaa
push
shrb
inc
stc
mov
es
add
sub
pop
push
nop
mov
pop
cwtl
jo
jle
and
mov
shr
nop
add
pop
cmp
test
cmpl
mov
dec
fmull
adc
push
jo
jbe
push
add
mov
add
add
loopne
sub
cmp
add
inc
test
and
push
xchg
xchg
sbb
push
xor
mov
je
daa
fldenv
nop
jmp
and
add
and
jp
js
pop
pop
sbb
iret
loopne
out
mov
mov
aas
shrb
test
cmp
lahf
pusha
add
xor
mov
dec
dec
out
add
cmp
rcl
rolb
xor
in
and
stos
add
ret
xor
jo
pop
mov
fildl
cld
adc
ss
cmp
popa
add
add
or
inc
dec
shlb
add
fadd
sahf
mov
jp
ret
mov
lock
or
push
popf
sub
pop
nop
mov
xchg
adc
rcrb
or
addl
or
setae
adc
add
lods
dec
imulb
das
mov
jbe
cld
mull
pop
inc
popa
addr16
jns
mov
xchg
out
out
out
out
loopne
lcall
xchg
daa
add
push
push
push
fwait
cs
in
push
cmpsb
cwtl
pop
scas
sarb
pop
ret
subl
cmpl
js
jb
je
cmp
push
aaa
andb
add
mov
mov
clc
adc
cmp
incb
sar
aas
clts
sbb
iret
rcrl
fstpl
loope
in
lahf
add
cmp
mov
push
nop
ret
add
rclb
push
cwtl
or
into
jo
pusha
insb
sbb
iret
out
leave
cli
das
jp
popf
dec
sbb
andl
loop
add
inc
and
je
add
popf
cli
add
bnd
adc
addl
mov
cmp
cmpsl
add
enter
dec
cmpsb
pusha
inc
incb
inc
mov
xchg
shrb
into
in
out
lahf
pop
inc
adc
sti
lock
jp
add
or
psubusw
rclb
cmp
mov
out
mov
stc
pushf
add
xor
and
pop
sbb
jne
cmp
pop
mov
sub
xchg
jne
ret
push
popa
pusha
jbe
ret
in
add
xlat
xchg
cmpl
loope
pop
pushf
ret
notl
add
or
aad
fdivrs
cld
cwtl
sbb
jle
dec
push
hlt
mov
mov
ret
aas
shl
adc
fimuls
adc
jp
add
push
mov
mov
ss
pop
adc
mov
xor
cwtl
add
adc
js
jmp
mov
pusha
xor
cld
xorb
push
add
add
xchg
pop
popf
lea
add
cmp
movsbl
inc
mov
insl
add
pop
add
adc
scas
xor
cld
mov
popf
clc
push
push
dec
and
pop
bound
mov
or
mov
stc
test
cmp
lods
jbe
cmpsb
sub
js
add
cld
mov
xor
dec
add
or
fsubp
push
pusha
pop
xchg
or
xchg
decb
mov
mov
mov
faddl
es
mov
add
jo
ss
aas
dec
es
xchg
mov
fimull
mov
adc
and
je
pusha
ss
push
dec
jbe
js
add
mov
inc
add
popa
sub
ds
add
xchg
cmpsl
jmp
push
xchg
pop
dec
xor
add
xchg
mov
leave
and
pop
shll
mov
addl
in
xchg
call
repz
add
lds
mov
inc
add
ror
push
mov
lock
test
add
dec
xchg
add
dec
mov
push
popa
jo
mov
pop
cli
inc
aas
pop
and
sub
xchg
loope
sub
lcall
pop
aas
shlb
add
les
ret
call
xor
in
cmp
lds
and
adc
ret
daa
bound
popa
test
icebp
cmpsl
lock
ss
dec
pop
or
fadds
inc
movsl
les
ret
aaa
sbb
dec
xor
jp
pop
pusha
mov
dec
add
dec
lret
push
inc
out
pop
push
imul
into
aas
out
sti
daa
frstor
std
sbb
inc
mov
xchg
sbb
data16
jbe
pop
dec
mov
mov
cmp
mov
hlt
inc
add
shl
das
movsbl
push
inc
add
cld
loopne
pop
jb,pt
dec
jle
add
add
sbb
lahf
aas
dec
push
leave
test
pop
test
sub
add
jl
out
add
cwtl
inc
pop
cld
daa
mov
sbbl
sub
and
add
inc
adcb
pop
pop
add
ret
aas
push
lret
popf
andb
xor
movsb
aam
sahf
sti
adc
xchg
xchg
mov
ret
xor
ss
pop
rsm
repz
or
incl
pusha
push
push
add
jb
pop
and
in
cld
inc
or
out
pop
or
add
mov
aas
cmpsl
daa
or
and
std
clc
je
and
leave
add
fiaddl
jle
pop
jno
aas
andl
loopne
and
dec
add
lcall
push
cmp
mov
lods
in
add
icebp
outsl
dec
jo
jnp
add
dec
subl
fs
outsb
and
add
mov
in
add
or
fadds
push
add
lea
inc
daa
push
xchg
add
xor
add
mov
jl
add
xor
popf
outsb
sbb
push
rcrb
cmp
or
dec
lea
aam
jae
pop
add
mov
leave
xchg
add
mov
idivb
adc
dec
xor
inc
lcall
add
and
aad
adc
push
daa
add
inc
inc
gs
mov
loope
jecxz
out
insb
outsb
add
adc
and
jb
cmp
dec
inc
dec
lock
cmp
popf
add
sbb
bound
subps
add
add
mov
or
cltd
adcb
dec
and
rcrb
add
xor
clc
xorb
mov
call
jle
adc
dec
mov
wbinvd
incl
cmp
movsb
js
pop
cmp
cmp
jo
dec
add
push
mov
cmp
lods
xchg
pop
sub
loope
cmp
je
lcall
xor
imul
push
add
mov
lds
push
addb
in
xchg
xchg
repz
fdivl
sbb
push
enter
xchg
xchg
add
clc
xlat
xor
jl
add
aaa
add
or
lock
add
pop
call
imul
and
pop
sbb
in
sub
sub
xor
add
inc
xchg
inc
cmp
repz
je
and
clc
roll
xchg
mulb
mov
and
mov
pop
paddq
addb
mov
pop
test
mov
xor
outsl
add
das
jp
outsb
push
movsl
rcrb
add
mov
fcoml
cmp
sbb
xor
add
push
xor
ret
jmp
jp
push
int
pop
xlat
mov
fs
inc
sbb
add
sub
push
add
cmpsl
or
sbb
clc
cmpsb
pop
mov
repnz
fcmove
push
mov
mov
mov
push
pusha
orl
int3
sub
mov
cwtl
call
add
fadds
sub
dec
xchg
and
and
push
jb
subb
add
sbbb
dec
add
ret
aam
mov
jo
andb
lahf
loop
loope
add
nop
out
hlt
sbb
dec
cmpsb
and
sbb
push
xchg
aas
fucom
inc
in
addb
movsl
sub
out
push
adc
daa
push
popa
xorb
pop
add
outsb
loope
jle
pop
int
ret
sbb
dec
pop
push
or
clc
addr16
xchg
nop
test
inc
sbb
push
leave
gs
mov
xor
and
jns
cmp
cld
fnsave
mov
pop
add
pop
notl
fs
lret
add
lock
cs
and
cmp
sbbl
pushf
sub
and
icebp
cmp
rolb
enter
cmp
push
cmp
pushf
dec
mov
in
stc
mov
cmp
out
shll
js
inc
adc
popa
add
fsubrs
aas
jbe
add
dec
cmc
jl
adc
xchg
push
lock
and
cmp
subb
add
cmp
in
or
icebp
stc
add
jnp
add
mov
iret
and
cmpsb
add
pusha
clc
scas
aas
fdivl
add
jle
mov
xchg
add
lcall
aad
iret
hlt
add
aas
dec
pop
add
rclb
movsb
das
testl
pop
add
ds
adc
ret
js
mov
pop
roll
cmc
lcall
xor
add
testb
cmp
mov
in
pop
outsl
or
pop
fwait
add
sahf
mov
add
test
sti
xchg
loop
pop
sbb
cli
pusha
fistpll
mov
push
cmpsb
js
iret
test
popf
mov
jle
repnz
adc
loopne
inc
out
inc
add
pop
fs
sub
sbb
push
rorl
pop
dec
mov
cmp
push
add
mov
mov
call
movsb
and
add
and
xor
fstps
dec
mov
daa
xor
push
inc
adc
cmp
push
sbb
xor
cmpsb
mov
nop
shr
cmp
push
add
sbb
cld
popa
xor
scas
cmpsb
push
mov
or
inc
inc
loopne
sub
hlt
and
cmp
xchg
and
lock
dec
add
fsub
std
mov
pushf
push
pop
fstpl
jmp
clc
addr16
add
mov
lahf
loopne
in
and
popa
adc
leave
pop
rcrl
and
and
pop
daa
clc
sub
das
and
adc
inc
mov
xor
xchg
add
adc
mov
ljmp
enter
cld
add
dec
xor
loop
sbb
test
aas
and
push
pop
jle
pop
inc
arpl
add
stc
ja
hlt
push
jns
jl
addb
jmp
adc
cmp
pop
addb
or
movsb
push
push
add
aam
fstps
mov
nop
rolb
add
rclb
loopne
les
fprem
cmp
add
pop
stc
cld
dec
std
sbbb
add
mov
imul
cmp
cmp
cmp
daa
pop
add
in
lock
das
pop
std
sub
roll
and
adc
lahf
cltd
ret
pop
mov
add
repnz
rcrl
mov
test
ret
xor
adc
sbb
mov
cli
pop
ljmp
xchg
daa
lcall
sarb
in
push
or
clc
push
dec
jo
add
jecxz
inc
cmp
dec
bound
fmuls
add
out
rorb
jb
data16
in
loopne
insb
sbb
rcrl
add
fiaddl
mov
xchg
les
jno
mov
sahf
dec
pop
add
mov
push
rclb
mov
cmp
inc
das
xchg
inc
int3
sbb
push
icebp
xchg
mov
push
add
cmc
fwait
std
lock
and
cmp
outsb
mov
jbe
enter
pusha
pop
rorb
add
aaa
leave
pop
and
push
aad
xchg
mov
pop
inc
fcoml
dec
cld
sub
mov
xor
cmp
push
mov
sarb
or
testl
cmp
inc
mov
mov
lcall
leave
sub
inc
push
push
dec
or
push
dec
sbb
stc
sub
js
aas
ss
call
cmp
clc
les
jg
adcl
mov
popl
mov
js
jp
jl
dec
pushf
jg
add
lods
call
mov
add
ret
nop
xchg
and
testb
sub
mov
cmp
das
cmp
enter
cld
adc
enter
push
cmp
cmc
and
cmp
or
pop
sbb
and
dec
and
fdivrp
sbb
cmpsl
inc
pop
test
aas
lods
xor
inc
push
dec
daa
dec
add
dec
movsl
addb
sbb
out
roll
cld
aad
add
add
mov
addb
pushf
and
pop
ss
sub
scas
push
cmc
add
loopne
adc
stos
loope
shrb
leave
push
jo
push
in
nop
ljmp
add
test
ss
add
cmpl
sbb
pop
notb
add
or
mov
add
cmp
and
add
push
mov
add
dec
pop
or
cmp
jno
jo
leave
cmp
fadds
jbe
call
lock
fdivrs
add
cmp
mov
push
jp
add
or
or
clc
sub
int3
inc
and
sub
insb
add
xor
insb
out
lock
pushf
add
jo
out
cmp
aaa
xchg
and
add
daa
pop
inc
mov
jg
add
mov
add
test
add
orl
xchg
sub
adcb
adc
test
into
xchg
add
xor
mov
ds
xchg
add
add
cmpl
adcb
lcall
lds
adc
and
lock
or
cmp
pinsrw
dec
bound
pop
xorl
sahf
inc
lods
pusha
mov
mov
cld
or
popa
mov
jns
add
movsb
pop
out
ja
jnp
movlps
and
push
mov
add
sub
and
fcompl
sub
test
daa
fwait
out
ficompl
mov
ljmp
adc
cmp
rcll
repnz
ret
in
add
shll
and
jg
add
dec
inc
dec
iret
push
leave
add
fs
jl
sbb
es
mov
lret
xlat
lock
dec
sub
mov
imul
jg
mov
mov
adc
and
shld
mov
push
add
icebp
in
loopne
push
lahf
xchg
push
jmp
nop
shll
pop
adc
movsl
enter
jo
test
clc
mov
or
xor
sub
mov
out
add
pop
jecxz
insb
testl
movsb
xchg
scas
js
add
loopne
incb
insb
pop
or
sbb
add
int3
xchg
test
aad
inc
stc
shlb
out
outsb
dec
cvtpi2ps
leave
add
sub
xchg
daa
inc
add
test
aas
add
jp
into
sahf
lret
fmul
shll
add
clc
xchg
sub
and
call
cmp
test
lock
or
dec
inc
push
cmpsb
mov
hlt
divl
pop
sbb
inc
or
add
mov
rcrb
add
mov
xchg
adc
sahf
rcrl
xchg
sbb
mov
clc
mov
clc
mov
aam
fnstcw
ucomiss
push
push
cmp
pop
dec
into
sbb
jg
sahf
loop
inc
call
lock
popa
and
mov
pusha
jbe
cmp
add
daa
std
test
es
add
ja
mov
push
lcall
int
pop
xchg
call
adc
add
push
or
push
dec
es
add
push
add
aam
lret
mov
mov
cmp
xlat
cmp
add
clc
push
xor
pop
add
mov
dec
icebp
or
push
outsb
sbbb
lock
mov
mov
popf
inc
stos
fildl
stc
loop
push
cmp
mov
push
dec
sahf
mov
aas
sub
in
mov
shl
cld
pop
loope
or
push
add
xchg
add
arpl
imul
es
stc
mov
xchg
dec
je
dec
dec
or
xchg
das
movsb
sarl
ret
xor
jbe
dec
inc
arpl
nop
pop
leave
pop
push
loope
hlt
subb
pop
test
insb
in
repz
repnz
leave
sbb
and
dec
add
push
pop
push
lahf
jnp
xchg
mov
sarl
lcall
pop
je
jbe
pop
js
push
or
dec
rolb
sarb
push
jbe
in
mov
push
lock
mov
test
add
xchg
or
add
cmpsl
addl
mov
ret
out
pushf
shrb
sbb
lahf
pop
mov
dec
pop
clc
pop
imul
mov
jnp
daa
aam
movsb
clc
test
jle
lock
xor
add
sahf
or
int3
pop
adc
pop
add
inc
dec
dec
push
cmp
pop
cmpb
sbb
cmpb
cmp
xorb
mov
mov
add
mov
loop
mov
loopne
mov
dec
jns
add
int3
xchg
rcl
sub
pslld
fsubrs
in
in
push
repnz
and
mov
jb
mov
outsl
adc
test
or
sbb
cmp
jb
je
push
xor
add
jmp
clc
dec
in
add
clc
pop
test
push
and
insb
movups
mov
jnp
mov
nop
and
xchg
cmpsb
add
dec
lods
repnz
aam
repz
jne
call
in
mov
hlt
popf
add
push
push
xchg
dec
xchg
rorl
mov
inc
inc
sub
dec
stc
push
cli
fprem
pop
cmp
mov
mov
jbe
mov
movsb
orb
add
sbb
add
and
mov
leave
push
push
mov
pusha
stos
and
insb
add
mov
test
xchg
fs
or
adc
pop
popf
xor
xor
adc
dec
in
inc
jns
push
pop
pop
sbbb
inc
repnz
mov
and
add
adc
add
jp
mov
xchg
nop
shl
xchg
pop
add
inc
pop
push
pusha
enter
out
or
push
pop
filds
out
cmpb
add
rcrb
and
add
add
mov
scas
sub
jbe
add
cwtl
lods
add
mov
jle
add
ret
push
hlt
repnz
jne
pop
inc
pop
and
sub
dec
xor
xor
shlb
movsb
repnz
add
add
aas
jle
add
daa
or
mov
add
mov
loopne
pusha
call
jmp
mov
xchg
push
nop
mov
ret
mov
add
sub
mov
mov
das
cs
jne
lea
daa
add
call
lods
fcompl
mov
lea
sub
enter
push
sub
mov
lea
inc
push
push
push
pop
inc
stos
out
dec
test
es
jne
inc
popa
sub
push
call
enter
cmp
mov
nop
shl
push
and
xorb
jecxz
pop
lea
test
ja
loopne
or
pushf
add
arpl
add
in
add
adc
push
fmul
and
mov
sub
cmpsb
sub
lods
add
loopne
mov
ud2
add
je
inc
add
sbb
adc
cmp
roll
dec
add
xchg
push
cltd
mov
ljmp
add
push
add
call
mov
jne
sub
test
mov
add
push
mov
add
pop
ret
aam
imul
push
divb
fcmovnu
adcb
sbb
cmp
rorl
or
add
dec
jmp
add
push
cmpl
add
dec
filds
out
sbbb
bound
dec
sub
add
stc
add
add
out
pop
add
adcb
mov
jp
or
pop
test
cmc
add
cmp
dec
mov
and
sub
je
call
add
mov
mov
pop
test
lds
shll
cltd
lods
data16
shr
repnz
xor
add
stos
push
pop
add
mov
das
and
add
add
cli
sbb
nop
inc
jae
add
lea
loop
mov
popa
mov
repnz
pusha
add
inc
push
jge
ret
fadd
in
inc
xor
push
push
inc
lock
add
xor
push
int3
jnp
jp
sbb
pop
sbb
jle
sbb
sub
movsb
mov
adc
jne
stos
ficoml
stos
push
sahf
add
jg
mov
push
sub
mov
jne
and
pop
mov
sub
xor
dec
add
and
fmul
aaa
mov
arpl
and
pop
rorl
loop
inc
in
wbinvd
xchg
lock
loopne
je
repnz
add
adc
and
jmp
push
sbb
dec
mov
pop
xorl
scas
cld
push
in
mov
add
inc
sbb
pop
fsin
loopne
mov
xchg
push
cmp
ret
adc
andb
pop
mov
or
push
xchg
lea
adc
push
shll
push
sbb
and
sti
int3
daa
xor
ss
mov
jbe
rolb
xor
sbb
pusha
pop
loop
push
xchg
mov
push
pop
fists
xchg
cmpsl
mov
or
push
addr16
add
cmp
sub
add
jmp
outsl
sahf
add
and
add
dec
js
mov
repnz
imul
stc
jle
pop
in
inc
add
push
dec
jp
pusha
stc
pslld
std
out
cmp
sub
push
test
andl
adc
and
dec
js
ljmp
cwtl
pop
out
dec
xchg
add
loop
xor
push
jl
sbb
std
and
add
mov
add
mov
pop
rolb
xchg
sbb
icebp
shll
mov
and
cli
stos
and
rcrb
loopne
xchg
js
add
lock
test
sub
add
push
add
jl
loope
cmc
pusha
dec
add
imul
popl
add
xchg
cmc
ret
add
stc
dec
leave
cld
sar
es
in
sub
push
mov
add
adc
add
sub
movsl
aam
filds
mov
in
movsb
cmp
cmp
add
fimull
push
mov
jo
add
clc
imul
xchg
out
pop
into
adc
inc
stos
mov
add
mov
sahf
add
dec
pop
movb
jno,pn
xor
push
rcrb
pop
xchg
loopne
in
mov
arpl
rcrb
test
add
jecxz
stos
push
sub
xchg
xchg
pop
or
push
pop
or
psubsb
cmpsl
cmp
inc
dec
aas
sub
std
jle
in
addb
out
adc
fwait
out
je
dec
inc
fldenv
add
imul
aas
cmp
andb
sbb
pop
outsb
add
je
adc
stc
add
inc
shrl
adc
mov
jb
and
add
and
xor
cmp
mov
xchg
sub
call
jne
inc
jbe
mov
push
add
cmp
or
and
pusha
rolb
add
jge
aam
out
add
xor
inc
rolb
push
sub
pop
dec
lods
pop
jecxz
sahf
rorl
push
push
push
add
mov
pop
hlt
mov
pop
xor
dec
jno
clc
inc
test
add
mov
mov
sub
xor
js
in
mov
bound
loop
mov
add
adc
push
pusha
lcall
loope
pop
sarb
imul
das
xor
cmp
scas
add
in
inc
loopne
pop
adc
mov
cli
push
hlt
add
cmpsl
xchg
jb
cmc
sub
cmp
scas
sub
das
aad
adc
cltd
mov
mov
xorb
iret
push
cs
inc
fcmovb
xlat
add
or
mov
loope
xor
mov
sub
ret
push
mov
pusha
pop
or
cld
cli
fdivrs
cmc
xchg
adc
out
xchg
or
ret
pop
aas
scas
movntps
rorb
je
pop
push
sub
or
pop
mov
add
in
jb
ljmp
and
mov
sub
rep
pop
sbb
pop
incl
dec
shrl
or
pop
cmp
jae
push
add
inc
inc
lock
adc
xchg
shlb
push
je
adc
mov
sbb
out
jnp
nop
es
cmp
popa
adc
or
lret
imul
cmp
jne
rclb
je
jne
xor
outsl
arpl
inc
in
gs
or
clc
outsl
out
stc
arpl
addb
call
scas
mov
inc
cmp
push
inc
dec
sub
popa
addr16
lods
inc
loopne
divb
jb
outsb
je
adc
dec
dec
push
inc
inc
push
and
jmp
push
ds
mov
jns
push
clc
and
pop
jne
fs
outsl
shrb
popa
insl
loop
cmp
mov
std
insl
icebp
arpl
or
mov
push
fs
mov
xlat
xchg
nop
push
movsb
add
rorb
in
inc
sbb
decl
std
pushl
dec
outsl
sarl
arpl
inc
arpl
dec
outsl
fildll
mov
data16
movsb
mov
add
xor
aas
and
add
mov
pop
mov
sub
imul
mov
sbbb
fldcw
lods
cmp
jb
xor
outsb
add
fcmovb
mov
push
sbb
pop
or
or
mov
outsb
adc
adc
cmp
jns
mov
imul
sbb
sbb
outsl
adc
mov
cmp
gs
cmp
push
mov
sbb
mov
mov
or
dec
pop
pop
cli
pop
lret
mov
outsl
pop
cld
iret
fcomip
adc
mov
in
lahf
leave
xor
dec
sbb
push
fidivs
mov
jb
sarl
push
xor
cmp
pop
cwtl
xchg
add
addr16
lods
clc
adc
ret
mov
lods
lock
out
adc
std
xchg
mov
mov
out
insl
cmp
push
enter
mov
push
sub
popf
xor
cld
jmp
aas
inc
dec
scas
cmp
out
jl
jecxz
std
xor
enter
push
imul
frstor
lds
iret
call
sub
cmp
ret
mov
sub
sahf
sub
xor
into
test
xchg
jmp
push
lcall
lds
adc
xor
adc
and
lcall
fbstp
outsl
push
mov
adc
and
imul
imul
out
cmp
cmp
jge
sub
xor
fisttpl
mov
xchg
ret
or
xchg
mov
leave
and
xchg
fcomps
lret
scas
adc
and
inc
jmp
mov
je
scas
daa
sti
cwtl
xchg
xchg
dec
loopne
and
fs
xor
inc
out
xchg
and
imul
mov
pop
testl
out
stc
add
jnp
cmpsl
dec
in
or
push
gs
jb
nop
fdiv
pushf
ret
dec
jns
test
leave
xor
aas
ficoms
xorb
mov
xor
sti
gs
ss
fwait
adc
cmpsb
mov
mov
jl
pop
dec
push
out
out
sar
adc
ret
jp
stos
xor
or
sarl
sub
dec
mov
inc
popa
rcrl
nop
int
push
call
scas
lcall
sahf
fidivrs
call
sbb
ja
mov
dec
out
imul
and
add
outsb
jbe
or
in
adc
push
jle
daa
add
mov
lcall
mov
inc
fisubs
imul
xchg
mov
mov
or
xor
inc
icebp
fs
pop
dec
add
sti
or
fldl
lret
add
mov
sti
push
push
fnstcw
cwtl
mov
cwtl
cs
leave
dec
std
push
fs
push
movsl
lock
xor
dec
rclb
rcrl
stos
icebp
icebp
je
xor
add
push
iret
adc
stos
mov
pop
std
pop
dec
test
pusha
clc
adc
movsb
mov
out
xchg
pop
push
sbb
fmull
inc
jo
test
add
sub
sub
outsl
stos
cmpsb
jne
vmovss
pop
adc
or
add
movsl
push
rcr
vminps
out
repnz
xchg
pop
inc
insb
push
jge
mov
xor
push
inc
dec
or
push
fnstenv
rcrl
add
xchg
xchg
loop
push
mov
cmpsb
aad
mov
movsb
and
in
push
lea
xor
test
lahf
std
imul
push
insl
cmp
ja
scas
dec
xchg
jb
hlt
movsb
push
add
pop
and
stc
mov
mov
mov
lahf
cmp
es
cmovo
push
and
ds
imul
cli
push
notb
jns,pn
xorl
cs
test
in
cmp
into
dec
or
jno
gs
outsb
jb
cmp
sbbb
mov
or
mov
xor
jmp
clc
stos
daa
adc
inc
xor
addr16
xchg
std
in
sbb
fcomps
pop
call
loop
in
xchg
cmpb
fbstp
sahf
insl
pop
mov
jae
in
and
movsb
xor
inc
outsb
fwait
lret
sbb
xlat
je
pusha
cmp
mov
lret
mov
js
insl
ljmp
mov
adc
jo
in
fmul
jg
xchg
sbb
les
lods
fidivl
add
push
xor
pop
adc
pop
sbb
int3
jbe
fcomp
in
xor
cmp
dec
test
movsb
jle
add
mov
jle
cmc
dec
rcll
and
out
ja
sub
stos
scas
arpl
repz
fcomps
repz
out
inc
jle
cmc
jbe
push
adc
addr16
mov
xor
mov
shll
push
xor
cwtl
cs
dec
xchg
popa
xchg
add
cmp
lahf
pop
sbb
out
sub
imul
loop
jae
jnp
mov
jle
xchg
push
aas
mov
fldt
mov
cmpsl
push
scas
lret
imull
incb
scas
jne
lret
dec
sub
lods
push
insl
bound
mov
lds
outsl
shl
mov
lret
pop
jo
jo
push
mov
or
cmp
imul
xor
in
sub
into
jg
xchg
lock
mov
mov
lods
jno
jmp
addr16
jmp
pop
and
aam
mov
cmpsl
ss
mov
shll
dec
xchg
into
scas
outsl
das
out
push
pop
ja
arpl
xchg
pop
xlat
cmp
inc
xor
inc
lret
add
and
sbb
push
cld
shrb
push
cmc
sarb
mov
dec
mov
lea
cmpsl
sahf
enter
movsl
or
cli
xchg
jnp
or
and
dec
imul
xor
push
push
stos
jo
out
xchg
cli
mov
movsl
push
into
mov
inc
cmpsb
fidivs
in
movsl
mov
jp
adc
cli
outsb
pop
mov
cltd
dec
and
push
mov
xlat
push
sbb
dec
lods
movb
out
inc
xlat
or
mov
icebp
pop
adc
dec
jo
pop
iret
jmp
inc
jmp
fdivl
ds
sbb
cmpsb
adc
jge
push
into
pop
shrl
cmp
mov
fldt
push
sahf
shlb
sqrtps
jmp
xor
enter
mov
nop
adc
add
loop
jo
push
enter
jno
nop
dec
adc
std
in
roll
mov
mov
jno
inc
lahf
fldt
adc
out
je
aam
mov
add
dec
rcll
pop
daa
scas
mov
fxch
mov
cmp
leave
dec
jno
inc
and
in
sbbb
adc
int
ficoml
jb
test
add
adcl
scas
daa
push
xchg
jno
je
clc
addr16
enter
out
js
mov
inc
fisubs
dec
shlb
pop
mov
sub
ficomps
sbb
and
pop
sub
test
lahf
xchg
dec
cmc
stos
pop
mov
adc
jl
add
dec
push
pop
loopne
pusha
mull
ja
in
xchg
sbb
mov
ficomps
pop
mov
xchg
test
and
repz
dec
or
jmp
fdivs
mov
daa
cld
xchg
push
sub
cmp
xchg
pop
popa
jbe
int3
mov
int
or
lods
ljmp
push
out
push
popa
mov
bound
push
lods
lock
sarb
dec
mov
popa
loopne
pop
leave
sub
loop
adc
dec
fcmove
jle
les
sbb
inc
xchg
push
les
shl
cld
pop
jmp
addl
in
xchg
push
out
sbb
xor
mov
and
cmp
stos
or
push
lea
pushf
enter
lret
mov
pusha
push
loope
andl
pusha
push
ficompl
adc
or
pop
or
les
cmpsl
or
dec
jmp
das
pushf
mov
mov
push
call
xor
dec
pop
js
or
sub
std
fwait
mov
divl
test
dec
cmp
mov
or
or
jae
std
ds
inc
aad
push
dec
in
bound
imull
dec
aam
aaa
cmp
mov
sub
sub
dec
xor
mov
fst
pusha
loope
incl
xor
dec
hlt
pushf
pop
add
stos
out
mov
mov
dec
ret
cmp
jge
out
and
shlb
pop
cs
pop
sub
and
aaa
incb
loope
fcmovnb
orb
cmp
js
test
push
pushf
mov
imul
ljmp
xchg
test
sbb
lods
outsl
push
mov
fwait
daa
subb
std
or
push
psubsb
pop
and
pop
mov
xor
icebp
sti
xor
push
or
or
xchg
lods
adc
test
dec
call
xchg
loop
fisttps
jno
cmp
dec
dec
out
addr16
or
lods
add
insl
sub
and
or
roll
loop
mov
cmpsb
mov
inc
mov
jmp
repnz
mov
push
xlat
mov
push
dec
dec
out
test
arpl
dec
lds
jns
add
jnp
aam
bound
out
inc
mov
xor
and
mov
jg
xlat
cli
push
or
push
push
mov
jb
push
jo
roll
pop
or
xchg
mov
adc
dec
into
adc
dec
xchg
dec
shll
push
cli
or
outsl
lret
mov
mov
cmp
cli
insl
fidivs
pop
jmp
xchg
lods
sub
xor
ss
mov
lahf
mov
scas
fs
loop
lret
fdivs
jne
fninit
inc
push
mov
mov
mov
add
xchg
iret
add
pop
xchg
jle
mov
bound
add
lods
addl
cmp
bound
push
xor
mov
or
test
mov
pop
ret
arpl
aas
jae
xor
push
jp
in
mov
pushf
adcl
push
cmp
sbbb
xchg
adc
push
popf
cmpsl
decb
repnz
push
mov
addr16
pop
test
mov
loop
repnz
mov
pop
or
sar
gs
gs
mov
ljmp
adc
cmpl
xor
jbe
and
add
mov
and
adc
call
pop
es
lods
pop
cli
push
scas
test
push
imul
adc
rcl
hlt
popf
jns
ds
cmp
mov
and
sbb
mov
leave
mov
dec
stos
inc
leave
xchg
in
jnp
fnsave
xor
and
or
fbstp
imul
into
loop
in
nop
je
in
xor
xchg
jl
testl
inc
xor
popf
shl
xchg
and
jno
cwtl
sbb
mov
cld
test
cmp
dec
cltd
adc
cli
es
mov
sub
xchg
ret
imul
push
xor
lds
or
inc
mov
ret
rcr
push
int3
xor
lret
ja
imul
pop
outsl
or
xchg
ficoml
ret
out
pop
mov
cmc
fs
lahf
mov
add
dec
sub
sbb
repnz
dec
movsb
jg
hlt
lods
push
push
cmp
or
sbb
dec
cmp
sbb
cmc
xor
cmp
inc
lahf
in
bound
sub
int3
shrb
loop
js
das
inc
test
in
outsb
rol
xor
ss
in
cwtl
repz
lock
andb
aaa
or
jmp
pop
and
cltd
dec
jo
loope
jnp
mov
pop
imul
lock
xchg
cmp
push
enter
push
outsb
xchg
stos
xchg
out
inc
stos
ss
movsb
stc
mov
mov
push
ret
sub
jne
add
inc
inc
ret
leave
cmpb
mov
and
nop
xor
sbb
or
push
andb
and
lock
fwait
pop
sbb
js
mov
mov
inc
push
and
test
movl
inc
adc
movsb
sbb
movl
int3
xlat
sub
dec
mov
test
addl
test
cmp
inc
inc
sub
jnp
sbb
mov
sbb
push
sub
fcompl
xor
fldl
mulb
ljmp
cmp
xorb
ret
shll
das
or
xchg
mov
jp
in
jns
cld
or
mov
and
clc
pusha
mov
inc
ljmp
add
mov
icebp
xchg
xlat
jbe
ds
sub
aam
sub
fsub
aaa
inc
imul
push
test
inc
bound
jno
mov
int
pop
mov
push
nop
js
dec
jg
cmp
subb
stc
pop
mov
add
outsb
cmp
or
mov
cltd
pop
mov
in
ja
sub
out
and
aas
pop
faddl
push
mov
mov
or
dec
add
xor
fwait
jmp
jmp
sbb
cltd
bswap
insl
push
cmpsb
add
cmp
repz
pop
jle
xchg
mov
out
popa
incl
inc
xchg
cli
lret
call
cmp
add
mov
aas
adc
lahf
jg
mov
dec
pop
movsl
adc
inc
or
push
push
xor
sub
jae
cld
push
adc
into
mov
shrb
add
xchg
bound
xchg
iret
das
neg
cld
push
xor
ret
push
or
fwait
out
in
fnstenv
aaa
orb
and
jge
inc
sti
push
hlt
xchg
ret
push
jle
imul
xor
stos
pop
insl
and
sub
dec
lcall
stc
push
sbb
repz
test
xchg
test
jne
xor
mov
pop
push
sbb
push
jecxz
lret
les
pop
xchg
push
inc
daa
iret
ja
outsl
push
mov
aaa
dec
push
adcl
rcll
stos
xor
out
inc
dec
enter
mov
in
cs
stc
mov
push
cmpsl
cmc
xchg
xchg
movsl
mov
inc
add
data16
push
mov
rcll
ljmp
aam
push
scas
push
and
mov
push
cmp
sbb
cmp
push
ljmp
add
pop
lcall
sahf
xor
ficompl
sahf
out
nop
mov
pop
lret
outsl
cmp
mov
stc
out
inc
aas
int
mov
mov
xchg
add
push
jbe
pop
lret
in
inc
in
sub
xchg
mov
pop
mov
test
xchg
sbb
pop
mov
test
xchg
loopne
sbb
sub
xchg
ljmp
lds
in
adc
sub
cmp
std
sbb
pushf
out
mov
jne
fmul
aas
lahf
mov
ror
or
xchg
int
pop
mov
jmp
outsb
shrb
ror
mov
jge
icebp
scas
or
fwait
dec
fstps
int3
pop
test
xchg
mov
movsl
push
mov
pushf
test
or
mov
adc
fwait
dec
adc
add
out
scas
les
lret
das
lahf
hlt
and
inc
cmp
sub
mov
mov
idivl
ficompl
or
dec
sub
mov
dec
leave
jns
xchg
das
inc
loop
lret
mov
dec
int
ds
shrb
jb
xchg
ljmp
cli
popf
andb
fcompl
insl
mov
fmull
pushl
jg
es
jle
xor
shr
cmpsb
mov
xchg
rorl
inc
cltd
dec
jnp
fs
cmp
inc
lahf
ja
adc
xor
ret
lahf
inc
fmuls
insb
hlt
push
js
in
add
cli
out
jnp
jecxz
push
pop
movsl
pop
xchg
pop
pop
mov
aam
jg
push
and
dec
notl
or
daa
fidivrl
dec
xchg
dec
movsb
cwtl
je
xchg
mov
rcrl
mov
daa
mov
out
and
sbb
xor
shlb
mov
cmp
stos
mov
pop
cmpsb
and
cld
cmp
pop
pop
adc
add
popa
fwait
and
mov
inc
pop
dec
xchg
icebp
mov
pop
cmp
pushf
pop
push
mov
ficompl
cmp
in
subl
jae
fcoml
xlat
bound
inc
ret
in
aad
stos
sbb
pop
xchg
ffree
dec
dec
add
cmp
pop
ja
pop
jge
shll
addr16
or
dec
mov
lret
das
dec
gs
or
inc
cmpsb
mov
cmp
loop
ret
jecxz
std
out
loop
dec
xor
shll
pop
cmp
sub
sub
or
cwtl
enter
inc
outsl
lock
stos
adc
lcall
movsl
dec
enter
sbb
add
nop
jns
subb
add
xor
or
sbb
xor
out
loope
lods
adc
imul
add
xchg
testb
dec
add
decb
icebp
mov
daa
cmp
xchg
in
jge
lret
into
popa
push
repz
rcr
xchg
mov
pop
or
pop
push
dec
xchg
sbb
cmp
jmp
add
lds
push
push
sbb
sbb
mov
lret
rclb
xchg
and
or
insl
xchg
fildl
sarl
mov
pop
subl
jp
es
loopne
repnz
add
inc
gs
xchg
jae
pop
xor
lds
and
daa
jp
fmull
or
scas
jg
xchg
popa
and
test
imull
sub
mov
scas
jns
pop
lock
stc
stos
adc
push
in
pusha
lret
and
push
scas
into
repz
loope
lcall
lcall
xchg
fdivrl
dec
hlt
shl
adc
shr
and
call
pop
sub
jmp
or
rcrl
xor
roll
cltd
mov
mov
pop
mov
fildll
xchg
sub
mov
lret
xchg
clc
cwtl
dec
icebp
sbb
jl
sub
shll
aaa
cmpsl
or
rcr
into
aam
pop
lock
imul
out
ret
sbb
das
jns
lret
pop
loopne
and
mov
test
cli
xchg
jb
lahf
cmpsb
xor
and
das
inc
das
mov
push
mov
dec
call
fbld
inc
jne
jns
rcrb
sub
ljmp
cmp
add
dec
and
rcll
mov
adc
popf
out
xor
ds
movsb
push
sbbb
jmp
lret
loope
gs
inc
cmp
xlat
xor
and
sti
adc
dec
or
jle
adc
mov
stc
ret
sbb
lods
into
stc
xchg
addl
lea
aam
adc
bound
cli
xor
mov
sbb
mov
pop
clc
push
addr16
cmpsl
ds
movsl
xor
jl
in
dec
sbb
ljmp
scas
lret
push
adc
push
push
push
andl
jl
addr16
mov
adc
fwait
xorb
out
mov
mov
mov
loopne
mov
into
loope
icebp
jnp
jl
jl
jnp
sbb
test
addr16
cmp
pusha
pop
adc
les
cs
xor
andb
cli
mov
mov
and
sbb
mov
adc
and
mov
push
adc
imul
dec
pop
add
inc
jg
xchg
xchg
jns
fists
into
jge
addr16
cmp
cmp
inc
mul
pusha
jne
or
mov
jle
jno
leave
inc
mov
imul
cmp
pop
sysret
fcom
adc
push
faddp
out
imul
and
xor
scas
push
jne
bound
pusha
push
das
es
mov
faddp
cs
int3
ljmp
bound
sahf
jmp
sub
mov
fadd
inc
cmpsb
in
mov
jne
out
jg
inc
outsb
jne
cmp
repnz
pop
adc
lret
aaa
popa
movsb
push
popa
xchg
xchg
in
sbb
fs
and
stos
iret
fsub
push
mov
mov
adc
or
jecxz
ljmp
addl
dec
cmp
in
out
mov
out
out
lods
xchg
and
push
mov
mov
mov
movsl
dec
adc
mov
ret
out
push
pop
insl
xchg
js
in
out
jno
aas
pop
aad
scas
pop
movsb
rorb
dec
dec
out
sub
inc
fnstsw
pop
es
stos
out
ret
push
test
sbb
mov
mov
pushf
sti
mov
jnp
fisubs
fistps
lods
sub
dec
mov
mov
mov
add
lret
sub
adc
loop
cmp
mov
mov
mov
inc
jl
pushf
or
lea
lods
pop
jbe
pop
cmp
push
cmp
or
pop
add
popa
into
xchg
mov
pop
mov
notb
cmp
adc
sbb
sub
pop
or
add
mov
or
xchg
sub
leave
and
or
cwtl
pop
pop
jnp
ss
lea
std
mov
aad
xchg
dec
mov
dec
jnp
inc
xor
mov
sbbl
or
lds
stos
mov
xchg
fsubl
pushf
fwait
rolb
push
jge
cs
adcb
fidivl
jae
call
add
into
dec
sub
pop
rorb
dec
ror
das
sbb
fildl
and
jne
pop
addr16
inc
fldt
pop
bound
popa
dec
jb
jmp
adc
jb
and
or
test
int
imul
or
hlt
sub
pushf
mov
lea
mov
lds
stos
or
inc
xor
icebp
fstl
mov
cmpsl
inc
lea
pop
iret
testl
pop
repnz
mov
cli
mov
sbb
test
testl
subb
jp
mov
jae,pn
fsubrp
mov
jne
adc
sub
sbb
sahf
aaa
cmp
adc
or
fldcw
mov
aas
mov
in
in
les
stos
mov
lret
movsl
out
dec
test
cmp
adc
into
sahf
out
out
or
aad
xlat
pushf
test
dec
test
mov
aaa
fcompl
jl
lahf
jbe
adc
aaa
xchg
jo
mov
call
mov
adc
push
repnz
mov
mov
fimull
icebp
pushf
adc
int3
cltd
add
and
nop
push
sbb
xlat
sub
add
aaa
ja
mov
push
dec
sub
shl
ss
lock
dec
je
mov
mov
cli
mov
outsb
mov
adc
pop
xchg
fldenv
mov
xchg
push
jne
mov
fcom
fsubs
add
cmc
pop
loope
adc
mov
push
movd
test
xchg
sub
add
sub
loope
pop
insb
push
xchg
mov
xchg
adcl
push
repnz
test
in
lret
dec
push
out
sub
jecxz
rcr
sti
sub
push
lods
in
jmp
sub
mov
jns
int3
xchg
mov
gs
push
fbstp
mov
rolb
fwait
adc
fisttps
fimuls
push
cltd
addr16
outsl
cmpsb
mov
sbb
aam
mov
push
adc
pushw
mov
outsb
fildl
fists
inc
test
aaa
push
aad
xchg
or
ljmp
mov
scas
mov
jns
or
pop
fwait
push
inc
idivb
rol
shll
sbb
std
xor
sub
pop
lcall
fs
jl
push
ret
fimuls
nop
loope
lcall
push
decl
sbb
pop
mov
insb
rcll
test
jmp
cli
lods
jge
clc
push
lcall
add
cmp
int
xchg
mov
jnp
and
mov
fildll
or
das
rcr
movsl
ljmp
cmc
ffreep
cld
jns
inc
mov
and
in
sbbb
jmp
or
loopne
or
mov
repz
pop
lock
in
mov
push
test
sbb
add
ds
xor
out
shlb
xor
cmpsl
inc
adc
loop
or
inc
repnz
xchg
mov
outsb
mov
pop
lods
jne
pop
add
repz
mov
leave
cld
dec
pop
xchg
popf
jns
xor
nop
push
fld
jp
mov
and
jae
fildl
sbb
ret
xor
jl
add
xor
sbb
inc
pop
imul
jno
xlat
mov
fnsave
mov
sub
sub
call
fcmove
mov
std
xchg
jg
inc
adc
mov
fsubrl
xlat
pop
push
mov
int3
mov
mov
and
scas
sbb
test
xchg
in
out
inc
out
lret
push
push
cmpsl
xor
mov
add
shll
leave
clc
pushf
out
fstl
scas
jecxz
and
mov
push
lret
jnp
fidivrl
add
pop
inc
sti
sub
xor
and
adc
xchg
push
fildl
and
xor
dec
jmp
fldenv
mov
test
mov
mov
mov
je
mov
bound
std
jg
dec
and
mov
fimull
sub
mov
cmp
icebp
mov
xchg
or
fistps
dec
cmp
jl
cltd
mov
popa
or
inc
jns
xor
cmp
cmp
push
in
xor
inc
sbb
nop
iret
cmc
in
pop
jmp
adc
popf
mov
aam
or
xchg
in
jo
add
xchg
jb
or
decb
in
mov
push
or
mov
ljmp
scas
or
dec
dec
and
pop
std
adc
xor
cmp
mov
cmp
enter
push
std
push
sbb
mov
add
mov
pop
les
jp
gs
sub
dec
scas
icebp
push
es
sub
popf
and
jo
shlb
or
mov
mov
fbld
shl
movsb
xchg
rclb
arpl
fprem
stos
jg
xchg
jecxz
insb
test
or
inc
cld
mov
mov
popf
in
test
lock
mov
sub
push
fisttpll
out
ja
sub
push
mov
sub
iret
ret
pushf
mov
sbb
incl
ljmp
pop
sar
sbb
stos
cmp
push
enter
int3
sbb
cmp
pop
mov
arpl
cmp
test
jl
mov
cld
fists
jg
ret
ret
pop
adc
aaa
dec
jmp
or
imul
fsubrs
movsb
test
push
mov
pusha
fidivrs
pop
icebp
mov
fwait
mov
mov
addr16
or
ss
or
stos
pop
pop
mov
cmp
dec
jo
arpl
gs
fidivs
adc
sub
xchg
dec
xor
pop
sbb
mov
rolb
sbb
xchg
lahf
rcl
in
mov
or
das
pop
xorb
repnz
rorb
xor
xor
jp
addr16
xor
sahf
loop
out
shll
pop
fbstp
aam
arpl
cmp
movl
xor
add
faddp
mov
or
fsubrp
and
addr16
aaa
andl
daa
inc
pop
xchg
mov
rcr
pop
leave
dec
push
push
sub
jno
push
mov
xchg
add
ret
mov
stc
jecxz
cli
fcomi
test
push
mov
ljmp
mov
fcmovne
cmp
adc
pop
xchg
push
out
cmp
pop
lods
ret
test
and
leave
xor
enter
cltd
sbb
xchg
sub
loope
aam
popf
jle
int
iret
cmc
xlat
movsb
inc
ljmp
xor
out
ds
adc
push
xchg
gs
mov
push
dec
movsl
test
stos
stos
or
repz
rcll
xor
xor
pusha
dec
out
ret
fs
test
push
inc
sbb
mov
out
fsubrs
cmp
inc
movsl
sub
adc
idivb
pop
frstor
jp
enter
mov
or
fsubs
aaa
dec
sub
xchg
mov
jg
adc
hlt
cwtl
imul
outsl
out
pop
and
xchg
push
hlt
jecxz
jae
or
mov
and
and
cmpb
rorb
mov
cmpsl
int
mov
cld
push
mov
and
loope
or
jo
dec
add
ret
mov
fldt
inc
negb
xchg
mov
add
je
adc
push
std
bound
shl
inc
insb
loopne
cmp
pop
das
fs
iret
jecxz
jle
dec
adc
mov
orl
and
jne
cwtl
xor
sub
in
mov
les
loope
mov
mov
ret
cmpsb
cmp
shr
lea
andb
mov
dec
popf
aam
repz
lods
mov
sbb
imul
mov
jp
idiv
popa
mov
fadd
fdivrl
mov
data16
push
add
mov
aam
stos
outsb
jge
dec
push
mov
sti
pushf
sbb
aas
xchg
sub
gs
push
sub
xchg
mov
xor
push
mov
js
mov
cmp
fdivrl
out
dec
add
inc
mov
ficompl
mov
cmpsb
into
mov
dec
fisubrs
push
aaa
push
jo
movmskps
jl
push
je
and
out
push
jo
daa
dec
jo
cmp
and
andb
outsl
out
rcrl
and
lret
test
popa
imul
and
xchg
arpl
mov
fldz
repnz
cmc
imul
xchg
sbb
push
cld
inc
imul
add
or
inc
mov
mov
ljmp
mov
loopne
cmpsb
div
sarl
add
loope
gs
add
aad
xchg
push
lahf
inc
fmulp
loope
mov
je
adc
mov
add
cwtl
sbb
scas
jb
jmp
cwtl
outsb
sub
dec
adc
fs
jnp
jp
std
cmp
into
jno
shrl
xlat
lods
fwait
mov
out
pop
repz
mov
adc
mov
out
push
test
or
scas
inc
cltd
pusha
sahf
xchg
and
pop
xorb
xchg
mov
fistpll
add
into
xchg
das
test
mov
and
cmp
insl
dec
xor
push
dec
jecxz
addr16
xlat
mov
sbb
lods
sbb
xchg
dec
inc
out
pop
adc
and
ret
stc
scas
stos
mov
sbb
cmp
jns
clc
and
fs
ret
cmpsb
lods
fdivrs
sbb
adc
loope
mov
popa
jb
aaa
cmp
gs
inc
fst
and
pop
dec
pop
xor
enter
popa
mov
xchg
daa
xchg
cmpsl
mov
add
add
sbb
pop
rorl
mov
ret
push
orl
movsl
mov
into
loope
sub
imul
cwtl
outsb
nop
lcall
sub
mov
mov
or
rorb
shl
std
aaa
ror
cli
sti
out
cltd
add
stc
mov
or
cmp
test
movsb
call
stc
mov
lahf
pop
lock
mov
dec
cmc
xchg
fwait
adc
dec
das
ret
cmp
iret
loop
stos
outsb
mov
aaa
or
xchg
daa
xchg
sbb
add
lea
xlat
sbb
cltd
mov
aaa
and
xor
ja
loope
es
push
mov
and
sti
in
mov
mov
push
repz
lret
xchg
ja
adc
sub
mov
xchg
jl
push
scas
inc
jo
dec
mov
dec
je
clc
iret
cmp
add
or
mov
stc
fbld
test
xchg
mov
mov
std
sbb
xchg
mov
cmpsl
jecxz
mov
lods
int
test
jle
mov
sub
pop
xchg
mov
dec
jne
sbb
fldt
enter
push
pop
inc
out
test
ljmp
dec
cmp
adcl
dec
lcall
xchg
aaa
mov
dec
aas
and
lods
fmul
out
fs
cmc
adc
or
pop
aas
pop
pusha
sbb
movsb
jmp
add
jae
aaa
sti
call
fwait
in
pop
jnp
mov
push
mov
and
fwait
push
xchg
enter
mov
jae
inc
add
negl
jae
push
mov
cmpsb
sbb
out
subb
add
xor
jno
ss
int
out
jp
sbb
pop
hlt
movsb
stos
mov
pop
addr16
cltd
cs
shlb
mov
fcmove
notb
lahf
repnz
outsb
call
adc
mov
cltd
jbe
imul
loope
clc
add
xor
sub
jp
data16
push
adc
mov
cmp
push
cld
adc
subl
sub
pop
push
xchg
and
aaa
mov
sub
shl
or
or
stc
or
fdivl
jle
lock
rorl
mov
test
jmp
jmp
adc
outsb
or
pop
dec
mov
sub
lret
movsl
lcall
dec
adc
xor
mov
push
xor
ja
mov
loopne
add
adc
cmp
mov
cmp
lds
push
jnp
fsts
cmp
imul
rol
adc
into
hlt
in
ret
fs
cmp
repnz
inc
mov
pushl
or
loop
dec
sbb
adc
jecxz
mov
push
cmp
push
xchg
mov
stos
imul
repnz
popa
sbb
mov
int
xor
test
mov
cbtw
filds
jae
das
pop
or
lock
fistl
lock
adc
lcall
ret
filds
ret
pop
ljmp
mov
sbb
aam
push
push
xchg
fldl
xchg
test
aas
adc
test
movl
movsb
ret
loope
pop
test
fisubrs
out
stc
sbb
or
push
lahf
adc
push
xor
out
lret
push
mov
push
adc
aam
pop
inc
mov
call
pusha
xor
imul
adc
xor
xchg
sub
hlt
xchg
mov
jmp
cs
std
arpl
mov
rorl
push
cmp
cmpsb
ret
test
das
jae
out
cmp
xchg
jnp
lahf
pop
arpl
pop
cld
fistl
jg,pn
push
sub
in
clc
xor
xchg
in
and
scas
sbb
dec
jno
xor
inc
lds
sarl
movsl
or
sub
lcall
push
xor
dec
ret
icebp
and
fisttps
xchg
cmp
push
xchg
mov
lds
xchg
aam
jae
sbb
sub
ds
xchg
push
mov
xchg
dec
enter
xlat
jno
fimuls
das
jg
jo
movsl
pop
push
xor
pushf
xchg
mov
outsl
call
dec
xor
cmpsb
add
es
enter
pop
sti
aaa
orl
sarl
in
sbb
cmpsb
loop
scas
mov
pop
xchg
test
jg
sti
ret
mov
pop
cmp
jl
add
xchg
xor
jns
outsl
movsb
mov
out
jo
aaa
mov
push
mov
add
stos
hlt
pop
fsubrs
xchg
fidivs
aas
xchg
int3
and
dec
sbb
cmc
dec
xor
cmp
je
or
jecxz
dec
jmp
popa
insl
jg
shr
mov
push
add
gs
into
xchg
add
mov
push
daa
rcl
push
ret
and
xchg
mov
lcall
das
pop
js
cwtl
outsb
outsb
mov
adc
int3
inc
inc
fisttpll
mov
inc
dec
sub
jg
xchg
pop
scas
jne
mov
inc
dec
sub
add
enter
dec
lds
jecxz
faddl
clc
pop
cmc
mov
rorw
hlt
or
jl
scas
leave
pop
jb
jno
in
and
insl
push
nop
push
sub
jge
lods
ret
inc
loopne
inc
sub
lods
ret
addr16
push
or
jg
jl
test
mov
mov
rorl
cltd
pop
jno
lret
dec
sub
push
lcall
les
mov
push
mov
xlat
popf
push
xorl
push
mov
push
pop
dec
inc
pop
pushf
push
xor
out
test
lea
inc
mov
and
push
aam
adc
jo
lret
ror
out
xchg
mov
cmp
sub
and
and
mov
xchg
xor
ret
ja
mov
nop
out
push
test
push
lcall
add
sbb
sbb
adcl
pusha
xchg
mov
fidivl
xlat
xchg
jmp
sbb
pop
fidivrl
add
mov
jb
push
out
out
and
dec
add
shlb
adc
xchg
test
add
sub
mov
lods
mov
xor
or
inc
ljmp
shlw
imul
aad
lret
pop
mov
add
movsl
sub
xchg
cmp
mov
ja,pn
pop
xchg
in
dec
dec
xor
push
and
or
mov
dec
xor
sub
out
std
popf
pop
sbb
jle
dec
pop
das
in
add
adc
mov
test
push
push
pop
add
push
pop
sarb
dec
rcll
insl
lock
pop
sub
fbld
pusha
or
std
cli
mov
pop
jl
pop
adc
pop
shrl
inc
out
mov
pop
dec
xchg
jmp
js
jnp
aam
daa
and
xor
aaa
test
test
ret
pop
pop
cmpsl
lahf
lret
sti
mov
imul
pop
test
nop
xchg
test
push
repnz
out
push
jge
out
rol
hlt
sar
mov
repz
cld
bound
sub
pushf
add
lods
or
shld
pushf
and
push
push
dec
mov
sub
movsl
mov
movd
shr
in
sbb
xchg
aas
ret
or
adc
adc
jbe
in
aaa
jae
mov
imul
pop
int3
inc
mov
cs
mov
rolb
pop
dec
or
xor
jnp
in
pop
imul
ljmp
hlt
cmp
mov
add
mov
sbb
push
test
or
xchg
daa
mov
or
cmc
adc
and
aam
push
sbb
mov
add
fiaddl
test
jp
push
cmpsl
and
clc
mov
stos
test
adc
xchg
cmp
jo
mov
add
adc
push
push
in
pop
mov
xchg
sbb
fcmovnbe
fisttpl
mov
daa
ror
fildl
cmp
enter
sub
and
xor
int
cmp
xchg
push
stos
xor
lret
adc
and
iret
cmc
fildl
pop
ja
cmp
mov
std
imul
jbe
stc
int3
sub
aad
mov
cmp
pop
cs
jb
mov
xor
lods
out
scas
and
int
leave
clc
jle
scas
les
gs
inc
loopne
sbb
test
cs
pop
xor
or
pop
mov
xchg
cs
insl
fnstenv
jo
pushf
jmp
es
in
dec
and
hlt
shl
sti
dec
pop
iret
pop
xor
ret
je
mov
and
fbld
jg
pop
sbb
shll
add
xor
outsb
jae
test
fistl
imul
test
mov
jecxz
jb
jg
enter
jl
xor
incl
je
mov
xchg
lret
insb
adc
int3
cs
stos
andl
in
testb
and
sbbl
bound
into
dec
xchg
jnp
xchg
lock
scas
xor
aad
sahf
sub
ljmp
das
xchg
pop
add
sbb
adc
cmp
rcll
sbb
xorl
adc
mov
lcall
repz
lods
sarb
aam
das
out
test
lods
dec
out
and
bound
movsl
sahf
sbb
and
aaa
mov
inc
jns
hlt
ss
subl
mov
sti
or
js
test
xchg
ja
aaa
hlt
jmp
mov
cmp
inc
or
ja
jb
xchg
dec
xor
xor
dec
cli
ds
xor
sub
jp
imul
imul
and
imulb
ljmp
mov
mov
adc
imul
lahf
adc
cmc
fcmovnbe
std
adc
add
out
or
push
add
arpl
xchg
jle
sub
pop
pop
mov
cwtl
sbb
mov
popl
push
lods
out
mov
fldz
lret
inc
jb
inc
push
pop
jecxz
mov
push
xor
repz
sbb
push
mov
icebp
mov
out
out
in
and
pop
push
cmp
mov
je
cltd
cld
loop
inc
rol
lock
cwtl
popa
aad
into
dec
outsb
or
fldenv
mov
outsl
cltd
pop
bound
push
mov
frstor
xorb
xchg
dec
sub
sbb
cwtl
inc
sbb
enter
stc
mov
cli
cwtl
loop
ret
outsl
rcrl
call
cmp
dec
pop
mov
mov
sti
test
movl
aad
insl
add
xorb
mov
xor
icebp
adc
ljmp
into
lds
jge
mov
out
inc
in
sti
testb
pop
sbb
mov
add
sbbb
dec
fdiv
sub
sbbb
or
dec
int3
inc
and
jmp
cmp
and
into
sub
mov
xchg
sbb
jl
dec
pop
fcomps
sbb
arpl
pushf
fidivl
ficomps
and
enter
loop
adc
nop
pop
or
insb
sbb
push
lds
je
gs
push
mov
xchg
aaa
push
pop
sbb
add
lea
ljmp
cltd
loopne
lods
xor
inc
xchg
push
adc
in
mov
jp
or
and
testl
xor
nop
pop
cmp
test
pop
mov
xchg
sub
insb
sti
lods
sbb
push
hlt
jecxz
popf
pop
sahf
popf
pop
roll
pop
push
push
idivl
dec
fstl
fisubrs
arpl
cmpsl
aam
mov
dec
cmp
and
add
pushfw
out
das
xlat
sub
popa
pop
pusha
or
xor
mov
sub
inc
cwtl
xchg
shll
outsb
push
stc
or
ds
sbb
mov
sbb
ret
jle
loop
mov
jno
and
inc
enter
enter
stc
mov
pushf
or
jle
out
into
jnp
shr
dec
popa
mov
add
hlt
call
add
cmpsl
and
xchg
pop
aam
sbb
xchg
daa
aam
imulb
jmp
mov
andb
pop
repz
stos
pop
test
mov
add
sub
lahf
test
push
mov
in
pusha
out
jne
jl
lahf
sub
mov
or
in
mov
mov
shrl
les
fwait
xchg
push
lcall
jo
and
cltd
std
das
in
fwait
iret
or
negb
cmp
push
or
imul
insl
push
xor
and
cmp
test
clts
dec
xor
push
jb
movsb
push
loop
adc
fisttps
xchg
push
dec
into
mov
clc
in
sbb
push
sub
lods
clc
loopne
jecxz
jno
out
jno
mov
ret
sbb
mov
cli
pop
loopne
addl
adc
int3
mov
ds
jns
mov
dec
es
insl
xchg
push
insb
xchg
mov
xlat
sbb
xor
ljmp
aam
sahf
lahf
mov
push
mov
cmp
aad
popf
mov
jl
into
loope
sub
cli
ret
movsb
jge
aaa
adc
mov
adc
int
in
mov
or
mov
fisttps
sbb
daa
jnp
sbb
push
and
mov
mov
sbb
jecxz
mov
popa
mov
enter
das
out
lock
gs
lods
inc
and
outsl
sub
cmpsb
sahf
mov
sbb
aas
and
jo
rcrl
comiss
ss
fmuls
testl
xor
aas
lds
stos
fsts
mov
ss
jecxz
pushf
sub
add
nopl
fsub
scas
adc
gs
push
dec
add
in
lods
ret
fstps
push
adc
mov
fs
sub
dec
push
mov
imul
mov
outsb
je
cli
aad
push
aad
scas
enter
icebp
push
and
sbb
xor
xor
outsl
iret
or
and
icebp
mov
aas
testb
cmp
enter
sarb
adcb
xchg
add
xorl
scas
hlt
popf
ret
clc
push
xchg
mov
cld
clc
fiaddl
mov
adc
popf
shll
xchg
push
iret
lcall
jmp
cmp
imul
sbb
or
mov
js
xor
pop
sbb
sub
jl
sahf
mov
stos
dec
pop
scas
mov
scas
xor
call
mov
scas
mov
inc
mov
or
sub
xchg
pop
push
pop
test
das
aaa
sub
push
adc
jne
dec
pushf
sbb
dec
cs
pop
fmull
mov
jbe
inc
mov
adc
xlat
inc
xchg
mov
adc
pusha
mov
orl
adc
pop
jmp
insb
jp
les
movsl
loopne
es
jg
mov
stos
hlt
in
add
loopne
test
xchg
push
jno
aad
xchg
jo
cmpsb
add
out
cs
es
mov
sti
lahf
rclb
fcomi
pop
lcall
xor
aaa
xchg
or
xor
pushf
cmp
js
add
sbbb
pop
push
mov
dec
or
dec
mov
add
out
jg
jmp
scas
pushf
mov
enter
daa
mov
out
mov
out
popf
pop
test
jae
mov
jno
pop
lods
xchg
mov
push
imul
add
pop
inc
add
fwait
out
cmp
xor
jnp
push
sbb
mov
imul
fstpt
lcall
js
push
cmp
jp
mov
or
int
popf
or
data16
ljmp
fwait
mov
in
push
pop
icebp
pop
pop
cmpsb
mov
mov
add
pop
fisubrl
cmp
inc
lcall
outsb
xchg
push
adc
ss
push
insb
push
mov
mov
stos
adc
outsl
lods
out
addr16
dec
mov
outsb
add
and
pop
xor
sub
xor
mov
fildl
sub
mov
or
and
mov
je
repnz
or
cmpsl
add
push
mov
sbb
mov
out
icebp
jbe
cmovg
roll
mov
add
lock
nop
das
and
adc
aad
xchg
daa
dec
popf
jmp
inc
adc
inc
or
fisubl
mov
test
pop
xchg
scas
and
imul
dec
inc
jp
lahf
add
jo
xchg
pop
mov
imul
adc
xchg
push
add
addr16
pop
push
jge
mov
aad
cmp
outsb
jne
cmp
lods
rdtsc
sbb
push
cmp
shll
js
mov
les
rol
dec
daa
test
ss
adc
mov
aad
test
mov
mov
stos
and
mov
fmuls
dec
add
stos
mov
dec
scas
mov
sahf
and
imul
mulb
sahf
pop
out
mov
out
jne
insb
jecxz
or
jae
lret
ljmp
add
pop
pushf
push
insl
mov
mov
sbb
fadds
xor
aam
pushf
gs
inc
inc
or
shr
mov
div
pop
and
sti
pop
popf
loopne
pusha
das
aad
xchg
sub
pop
pop
jge
xorb
nop
cmc
cmp
pop
jp
sahf
or
arpl
imul
sbb
addl
mov
push
test
push
fbstp
idivb
sbb
lock
adc
sbb
mov
mov
push
arpl
pop
push
push
inc
aas
test
jo
dec
push
into
test
xchg
imul
fldcw
je
ret
stos
daa
cmpsl
push
fs
loop
sti
insb
jns
leave
int
mov
pop
scas
shl
ret
shlb
sarb
lock
pushf
adc
int3
js
pop
rorb
xchg
dec
gs
inc
decl
xor
arpl
lea
mov
jmp
push
xchg
push
push
stos
pop
in
sub
hlt
repz
xlat
mov
aad
mov
js
push
adc
call
lock
stos
mov
and
xor
ja
push
adc
and
lds
add
mov
pushf
fdivs
pop
dec
xchg
in
jno
mov
movsl
dec
mov
ljmp
loope
sbb
mov
lret
mov
mov
enter
or
add
lcall
xchg
stos
loopne
addr16
gs
cmc
imul
test
and
xchg
push
ret
mov
mov
inc
pop
mov
gs
push
mov
lds
rclb
int
mov
stc
pushf
lock
cli
jnp
pushf
dec
pusha
jo
std
inc
fstps
stc
daa
or
mov
mov
sub
clc
and
pusha
test
push
loopne
loope
hlt
xchg
jle
das
xchg
daa
mov
mov
inc
sbb
clc
hlt
inc
mov
adc
xor
gs
mov
mov
cmp
pop
mov
dec
decb
or
shll
clc
mov
pop
pop
jmp
fsubs
pop
xor
and
and
ficomps
fistpl
addl
xchg
enter
xchg
data16
daa
loopne
jnp
lock
cld
or
ja
sub
push
mov
pushf
fwait
inc
inc
mov
movsl
stc
jae
pop
call
mov
daa
les
adc
lret
lock
jno
sub
mov
cli
add
aad
lahf
out
jmp
mov
push
neg
mov
pop
lret
out
fdivs
enter
mov
cli
mov
ret
xchg
andl
xchg
mov
push
pop
test
or
repnz
fdivrl
subl
out
mov
lods
lcall
mov
fs
adc
mul
out
ret
stos
pop
mov
repnz
inc
nop
sbb
call
pop
mov
ret
jp
adc
mov
fisubrs
jo
les
mov
call
sahf
repz
cmp
out
mov
adc
cmp
les
jnp
ret
push
xor
jo
mov
stos
dec
xchg
cmpsl
test
loope
or
mov
int3
das
dec
adc
and
out
int
push
repnz
pop
subb
cmp
aas
add
push
jmp
inc
pop
adc
jg
jno
movsb
sarb
pop
fwait
mov
dec
mov
add
push
fmul
addr16
mov
add
dec
dec
data16
add
int
iret
push
and
push
arpl
andb
out
mov
rorb
clc
jp
cli
in
decb
mov
je
and
or
push
lea
sti
or
fs
mov
pop
rcr
and
mov
inc
add
or
out
push
push
subb
pop
hlt
popa
xchg
sbb
adc
rcl
fwait
add
pop
test
ljmp
popa
ffreep
sub
sbb
scas
pop
inc
inc
mov
outsb
js
cmp
mov
in
repz
cmp
cli
pop
adc
popa
jg
je
push
ds
sarb
test
pop
pop
inc
jp
rorl
inc
xchg
mov
mov
sub
xor
cwtl
pop
in
movsb
stos
out
adc
xor
test
les
add
or
data16
jb
fwait
adc
rorb
in
lods
out
ret
je
comiss
enter
sub
push
sub
push
sub
pop
lods
push
ret
mov
jns
movsb
or
mov
gs
jno
outsb
dec
pop
cld
fnstsw
pop
adc
in
xchg
pop
icebp
dec
adc
pop
lret
in
jnp
scas
fbld
and
xchg
mov
pop
jmp
repz
pop
add
mov
sti
sbb
rcrb
js
or
fbstp
enter
add
inc
push
mov
pop
popf
mov
mov
icebp
leave
xor
push
adc
mov
and
stos
daa
cmp
lcall
mov
pop
clc
mov
pop
dec
movsl
test
pusha
cli
dec
icebp
test
mov
sti
push
shrb
gs
or
add
out
les
and
push
andl
mov
pop
test
notb
pop
inc
mov
fimull
lods
scas
movsb
ss
icebp
cmc
hlt
dec
xchg
jb
js
jb
and
test
in
cwtl
inc
inc
dec
jae
repnz
ljmp
out
andl
and
xchg
lds
push
ret
and
ss
std
inc
xchg
cwtl
pop
mov
loopne
aam
fwait
cmp
add
cmp
js
mov
cmp
pop
ja
pop
pop
or
push
and
adc
xor
mov
addb
mov
lret
push
les
pop
je
sbb
sub
data16
mov
sub
xor
push
movb
les
movsb
in
fcmove
pop
or
test
dec
lcall
xor
mov
sub
xor
or
push
mov
adc
pop
cld
mov
sub
jnp
push
or
sbb
or
stc
rclb
rorb
push
and
pop
jmp
mov
xchg
setle
mov
lahf
gs
xchg
pop
in
aaa
pop
into
clc
sub
aaa
shl
inc
push
adc
pop
push
lret
push
inc
mov
addb
jmp
fldcw
bound
sub
ljmp
push
movsb
add
leave
add
xchg
rorl
add
ds
in
notb
pusha
clc
pop
jge
mov
lea
fisttpl
jp
ror
xchg
fidivl
hlt
sub
popw
int3
jno
dec
hlt
fs
mov
inc
xor
cmp
sbb
loope
scas
add
lret
stc
dec
pop
adc
je
jne
jb
sbb
pusha
xchg
mov
or
pop
jg
cltd
inc
std
jae
fcmovnu
jno
jmp
iret
out
clc
jecxz
test
xchg
lcall
ret
popf
out
pop
enter
mov
imul
push
fildl
jbe
vpunpcklqdq
sub
fldcw
jns
cli
in
pop
pop
and
jmp
add
sub
sub
cld
push
popa
lret
loope
shrl
mov
inc
sub
outsl
bound
adc
movb
test
cmp
jae
mov
add
bound
xor
dec
xor
popa
cs
mov
or
out
icebp
push
push
xchg
mov
call
inc
and
push
rcrl
or
jns
jae
outsb
sbb
jb
pop
aaa
and
cmp
pop
mov
xchg
adc
enter
stc
pop
sub
add
stos
lret
orl
push
lock
test
fcompl
popa
loopne
or
pop
gs
mov
mov
jp
sahf
int
push
in
cmpsb
and
popa
push
push
arpl
test
push
jmp
orb
xor
xchg
jae
push
inc
lcall
sbb
xchg
adc
mull
movsb
mov
push
inc
test
pushf
xchg
mov
ljmp
stc
popa
iret
and
cli
outsl
pop
and
and
aaa
inc
adc
mov
cmp
mov
jne
adc
movsl
in
cltd
jmp
sub
jle
nop
fwait
in
mov
xor
mov
mov
push
dec
mov
sti
dec
incb
into
mov
bound
inc
or
mov
jno
pop
sti
movsl
jl
add
out
cmp
lods
cwtl
das
out
test
fldenv
mov
in
mov
dec
sar
scas
xchg
loop
loop
scas
cmp
xor
push
ja
mov
cmc
xlat
movsb
xchg
mov
push
loopne
adc
lods
ret
test
pop
movb
jne
leave
out
cmp
loop
sbb
lcall
or
in
sahf
dec
cltd
pop
shr
das
data16
mov
nop
repz
adc
push
and
cld
sti
mov
movsl
in
xor
ss
out
dec
ja
movsl
aad
out
mov
push
cmp
mov
in
test
mov
xor
jmp
jbe
mov
lds
pop
sarl
and
xor
loopne
inc
mov
add
mov
or
xchg
dec
ja
pop
adc
lock
cwtl
xchg
dec
popf
xor
inc
out
test
test
mov
cltd
adc
mov
pop
cwtl
inc
mov
es
xchg
jnp
popf
mov
jne
sbb
mov
mov
push
inc
and
lea
loope
adc
xlat
in
fiadds
loopne
xor
sahf
enter
mov
push
xchg
fcomps
test
or
xor
leave
lds
gs
or
outsl
sahf
pop
int
lret
xor
test
fdivl
pop
push
enter
cli
shlb
into
fcmovnb
lea
push
cli
xor
stos
orl
stos
push
adc
test
jno
mov
out
add
push
mov
les
dec
sub
mov
loopne
lcall
add
or
mov
add
sahf
dec
sbb
and
mov
xchg
pop
jnp
adc
cmp
lahf
mov
sti
dec
jg
add
pop
add
icebp
lds
dec
ret
inc
mov
hlt
jno
sbb
addr16
pop
mov
sub
sub
arpl
mov
test
scas
das
lea
movsl
mov
fisubl
add
mov
and
pop
sub
cmp
das
jne
imul
mov
enter
pusha
jo
xor
xlat
inc
cmp
sbb
jae
jl
std
mov
push
das
xchg
jne
ret
mov
imulb
in
incb
add
movsb
icebp
xchg
adc
add
hlt
ret
jne
mov
idivl
incl
mov
or
in
pop
xchg
dec
and
test
cmp
mov
in
mov
jle
or
sahf
mov
pop
adc
sbb
dec
xchg
lock
cmp
mov
push
cli
push
mov
pop
xor
push
icebp
popf
or
pop
or
out
xchg
push
mov
daa
cmp
add
jl
out
leave
orb
cmp
shr
xor
lds
pop
arpl
xchg
test
adc
es
in
and
mov
mov
stc
sub
bound
xor
add
sbb
pop
mov
push
lcall
ja
push
mov
scas
add
push
mov
and
sti
arpl
pop
sub
xchg
cmp
mov
xchg
stos
movl
cmp
cmpsb
mov
add
cmpsb
pop
pop
in
xchg
cmp
cmp
lcall
jns
mov
cs
fs
and
mov
jmp
or
push
test
lock
iret
sbb
adc
push
inc
xchg
sub
and
call
mov
xor
adc
test
lret
or
cmpsb
add
iret
rcrb
or
js
xor
pushf
dec
fcmovnu
dec
fldt
add
adc
jno
ror
incl
mov
pop
cmpsb
loopne
add
and
scas
dec
inc
sub
inc
jle
and
inc
cli
pop
stos
cli
hlt
jno
mov
loope
jne
shlb
sbb
scas
shrb
push
lds
aaa
sbb
dec
cwtl
mov
cmpsl
xorb
add
hlt
adc
arpl
das
flds
xor
inc
in
fidivrl
or
cmpsl
xor
aam
xchg
or
movsl
mov
add
nop
dec
pop
xchg
ds
cwtl
jmp
movb
fcomps
jne
outsb
inc
addr16
cli
stos
jae
cwtl
popa
xor
js
idivl
movsb
xchg
shrl
pop
lret
jg
or
ds
iret
mov
jmp
push
inc
or
daa
jecxz
out
aad
sbb
push
loope
andb
sub
cmp
out
and
aaa
pop
add
sbb
loop
out
cmc
dec
movsb
call
xor
jp
mov
mov
in
adc
pop
sub
aam
mov
stc
movsb
mov
push
and
mov
in
and
jae
mov
add
jae
and
mov
outsb
fistl
sahf
xor
outsb
hlt
cmpsb
movsb
sbb
loopne
mov
mov
call
jne
push
push
pop
pop
pop
ficompl
sbb
loopne
push
push
js
fwait
sbb
pop
mov
push
in
scas
pop
add
subl
xchg
mov
icebp
and
pusha
call
inc
ss
jle
or
fnsave
or
push
pop
lret
cmp
fldt
out
jo
cmp
or
repnz
insl
lds
nop
pop
dec
adc
out
xchg
mov
rorb
inc
jecxz
and
mov
adc
sbbb
push
sub
adc
add
inc
ds
scas
inc
jne
mov
inc
scas
rolb
inc
bound
or
mov
mov
inc
adc
jbe
lea
std
push
cld
xchg
sbb
adc
movsb
outsb
mov
xorl
es
aam
cmp
dec
xor
jl
dec
mov
or
ds
mov
cmp
ficomps
je
sbb
jbe
cmp
pushf
lock
fdivrl
rolb
mov
int
push
push
mov
cmpsl
je
shrb
in
fldenv
sti
nop
or
sub
xchg
mov
xor
imul
dec
add
sub
loope
addb
aaa
mov
or
outsl
stos
mov
xlat
jg,pn
cmp
fs
into
insb
pop
adc
jmp
test
xor
imul
mov
rclb
and
pushf
mov
sub
add
int3
inc
imul
nop
daa
add
dec
fsubrl
in
pop
fimuls
shll
xchg
cmp
pop
push
xor
jb
pop
cmpxchg
jmp
test
jae
in
test
or
stos
mov
mov
cmp
in
packssdw
insl
out
cltd
jle
or
out
sbb
and
or
jp
cmp
aaa
les
or
pop
xor
and
push
lret
int
and
gs
xor
sarl
cmp
sub
mov
fldenv
push
cmp
sub
lcall
imul
xor
xor
xchg
test
sub
sub
sbb
mov
pop
out
mov
pop
push
cwtl
or
jge
lds
fadds
mov
cmp
add
aaa
outsl
ficoms
add
pop
incl
mov
aam
mov
mov
pop
mov
lods
and
xchg
sub
mov
js
adc
testl
mov
pop
and
inc
sub
lock
sahf
mov
into
sub
lods
jecxz
subl
out
daa
arpl
jecxz
and
sarl
out
repz
dec
mov
sbb
inc
mov
cmpsb
or
sub
test
pop
fstp
mov
push
sub
outsl
mov
iret
icebp
dec
add
idivl
push
pop
in
sbbb
lahf
xchg
or
icebp
xor
fwait
jo
pop
popf
ds
scas
iret
pop
mov
inc
cmc
mov
and
fs
aas
repz
mov
lcall
fcoms
ss
inc
jl
adc
mov
loop
adc
xchg
bound
inc
les
outsb
xor
insl
in
and
xor
dec
into
mov
divb
jp
jns
mov
jge
movl
mov
sbb
or
mov
dec
adc
mov
pop
ss
into
jae
stos
or
faddl
and
push
insl
cmp
adc
cmc
hlt
loop
mov
xchg
cmp
rcrb
mov
mov
jo
or
dec
nop
xchg
jns
das
push
nop
sbb
xor
mov
jae
cli
jne
jg
loopne
add
push
cmc
mov
repnz
sub
cmp
mov
int
jbe
mov
mov
push
jp
pop
insl
mov
test
mov
jmp
cmp
xchg
iret
push
push
adc
mov
sbb
lock
mov
pop
js
mov
mov
stos
test
hlt
aam
jb
sub
xlat
jge
shl
dec
mov
pop
sbb
cltd
mov
stc
add
mov
rcl
jecxz
dec
mov
aaa
popf
ret
mov
jb
cmpsb
pop
loopne
in
out
sarb
mov
test
les
sahf
je
mov
mov
loopne
push
js
jg
sahf
mov
add
sub
cmp
rcrl
pop
and
mov
sub
imul
mov
mov
xchg
cwtl
push
lods
subb
mov
and
movsl
dec
xor
aam
scas
mov
mov
adc
cmpsb
cmp
cmpsb
ficoml
add
outsl
sub
iret
sub
pushf
jp
dec
test
fcoml
lret
enter
out
sbb
inc
jp
cwtl
aaa
sbb
push
arpl
iret
addb
mov
jg
sbb
mov
xchg
mov
cld
outsb
repz
lret
rcrb
outsl
push
ja
mov
mov
xchg
dec
cltd
cmp
sbb
inc
ds
xchg
sub
shlb
imul
mov
adc
dec
add
sub
call
out
add
pop
mov
call
subl
mov
les
mov
clc
bound
add
lcall
sahf
push
addr16
jecxz
cmc
hlt
cltd
xchg
iret
pop
std
add
fwait
mov
das
lcall
sbb
cwtl
pop
push
js
mov
outsb
sbb
les
rolb
andb
cmp
adc
xor
mov
movsl
pop
clc
or
adc
cmp
jbe
popf
js
or
icebp
or
and
repnz
in
mov
add
and
cmpsl
inc
lock
arpl
xlat
test
repnz
test
movsl
or
pop
mov
int3
push
out
ret
jmp
and
lcall
imul
xor
pop
ss
add
cmp
jb
jo
lret
lret
jle
pop
jle
cmpl
adc
sbb
ja
cltd
inc
mov
insl
int
and
shl
insb
add
cs
loop
mov
xlat
mov
in
lret
xchg
mov
jp
xor
in
rorl
mov
pop
cmpb
adc
cmc
and
mov
cmp
outsb
cmp
jecxz
sub
cld
fidivs
inc
and
mov
stos
inc
outsl
into
xchg
leave
or
movsb
xchg
xchg
sarl
loop
addr16
insb
sub
lods
daa
sti
jle
inc
pop
mov
add
dec
or
stos
rorl
notb
div
ss
xchg
sbb
sbb
mov
je
lret
or
ret
dec
stc
inc
mov
ljmp
pop
lods
push
stos
push
xor
xor
and
lds
insl
outsl
mov
pop
pop
ret
cmp
or
xchg
push
xchg
push
pop
sub
pusha
in
inc
mov
sbb
jne
xchg
mov
inc
push
ds
sarl
pop
mov
sub
movsl
lret
cmp
das
jae
pop
clc
push
cmp
push
icebp
jle
in
cmp
es
and
cmp
dec
fsts
aam
lret
xor
jg
pop
stos
or
jnp
mov
mov
repnz
sti
jmp
adc
cmp
push
adcl
pop
inc
cwtl
test
mov
add
mov
push
movsl
fwait
std
ficompl
gs
jo
movsl
sbb
jae
call
push
mov
push
pop
fsubrl
jl
insb
loop
mov
pop
jnp
xlat
insl
inc
inc
inc
pop
hlt
jns
pop
insb
out
stos
cmp
out
push
leave
mov
dec
sub
gs
mov
nop
mov
pop
jle
xchg
insb
mov
xlat
idivl
mov
inc
mov
add
addl
xchg
xchg
xchg
popf
push
dec
cli
test
fsubl
xchg
rorl
jge
xor
loopne
int3
in
or
rcrb
imul
push
mov
das
and
in
sti
add
xchg
and
or
adc
push
xor
dec
cmc
push
rclb
dec
stc
cmpsb
push
cld
mov
pusha
mov
adc
repz
xor
xchg
les
mov
cmc
fsts
out
xchg
mov
push
dec
clc
adc
cmpsl
pop
std
stos
out
add
flds
enter
rcll
pop
and
rolb
sub
inc
xor
popa
roll
jle
mov
adc
test
sub
cltd
iret
push
adc
test
nop
icebp
loopne
pop
dec
stos
or
xchg
mov
xchg
dec
inc
roll
inc
sbb
imul
cmp
cmp
jle
sti
jns
sbb
cld
xor
xchg
mov
mov
std
jb
testl
push
movsl
mov
scas
jecxz
jb
mov
pop
inc
int
ret
cmc
mov
push
lea
push
addl
xchg
aaa
nop
push
push
mov
mov
sub
out
pop
jnp
mov
pop
and
mov
or
mov
je
cli
out
test
mov
dec
icebp
in
iret
or
push
inc
mov
xor
fisubrs
divl
outsb
repnz
pop
jecxz
push
cmp
cmp
pop
outsb
inc
jo
imul
cmp
mov
pop
mov
rcrb
nop
adc
fnstcw
adc
mov
mov
sbb
pop
fidivrl
inc
sub
rorl
push
push
push
xchg
jbe
clc
mov
xchg
ficoms
pop
bound
cmc
shll
mov
cmpsl
add
jnp
mov
push
push
xlat
lcall
jno
fs
ret
mov
je
mov
int3
push
orl
or
or
mov
sub
xchg
sub
sti
jmp
int
js
mov
cs
pop
sahf
fadd
ss
nop
bound
xchg
adc
dec
adc
xchg
outsb
out
negb
cmp
add
fdivrs
adc
js
inc
sti
dec
fwait
hlt
arpl
jae
jge
add
cmp
dec
jae
cmp
cmpsl
push
or
pop
pop
loope
dec
jo
flds
push
in
ljmp
and
lahf
mov
inc
jno
inc
ret
orb
scas
lahf
insl
or
push
or
mov
test
inc
mov
repnz
data16
adc
inc
imul
jo
and
and
jg
sbb
jne
push
mov
dec
mov
in
hlt
cmp
pop
movsb
inc
jg
push
out
xchg
ja
push
add
bound
fsubrl
jae
out
add
xchg
es
scas
push
xor
sub
mov
sahf
ss
jge
aaa
sarl
jns
add
adc
inc
out
das
fsubrs
dec
mov
out
xor
push
push
frstor
xor
jp
push
neg
xchg
les
add
push
test
adc
xchg
clc
inc
jo
mov
xchg
daa
int3
cmp
pushf
ss
add
ljmp
pop
and
add
cwtl
outsl
call
push
ljmp
push
sub
add
and
and
fcoml
jmp
and
aam
loopne
jnp
add
aas
ja
sub
fistpll
jb
xchg
mov
fs
mov
rcrw
ret
jl
bound
loop
movsb
or
add
cmp
pop
dec
pop
fwait
push
xchg
inc
fldl
pop
inc
ja
ss
sub
jne
test
sbb
imul
xor
lods
repz
jne
cmpsl
int3
xchg
hlt
mov
cmpsb
and
pop
add
inc
xchg
pop
pushf
mov
push
adc
mov
cwtl
test
rorb
sub
mov
popf
call
testb
or
jb
in
jb
sub
or
lahf
push
in
test
mov
les
cmp
fcmovne
pop
jns
xor
and
cmp
stos
inc
or
jb
cmpsb
pop
cmpsb
repnz
or
push
xchg
add
fwait
loope
mov
movsb
mov
fimuls
neg
xor
stc
sub
shll
hlt
xchg
ret
and
mov
clc
aam
dec
cld
scas
mov
inc
mov
daa
dec
adc
pop
push
negb
mov
outsl
push
ss
gs
cs
mov
cmp
gs
test
cmp
cmp
mov
mov
sub
cmp
test
dec
cmp
jb
jle
loopne
stos
sub
and
stc
imul
in
sbb
xor
mov
daa
mov
subl
pop
and
test
orl
cmp
arpl
mov
adc
jne
stos
or
js
push
adc
pusha
dec
add
or
lods
adc
mov
lcall
out
movsl
mov
sub
push
sbb
idiv
xor
mov
dec
hlt
dec
stos
xor
lods
or
jne
jmp
pop
pop
sbb
fdivrs
xchg
icebp
and
cmpsl
mov
movsl
and
dec
inc
sarb
mov
insl
stos
adc
mov
in
enter
ss
mov
lds
jo
pop
xor
and
ljmp
out
rcl
xor
or
or
pop
sbb
je
nop
shrl
mov
ret
ja
lock
das
and
movsb
les
mov
inc
cs
inc
das
fidivl
adc
sahf
mov
ljmp
pop
and
inc
inc
rol
scas
inc
adc
nop
pop
arpl
push
aad
sub
mov
dec
pop
dec
jle
pop
jns
inc
int3
cmpsl
lcall
xor
pop
int
andb
pop
sub
pop
movsl
popa
dec
or
push
fxch
jns
sub
test
mov
les
test
sbb
fcomip
xchg
insb
xor
aas
imul
lahf
and
xchg
sbb
mov
hlt
jb
mov
test
dec
xchg
sbb
jo
in
push
sbb
xchg
pop
and
jno
and
adcb
sbb
test
fdivrp
loopne
pushf
lock
jl
push
cmpsl
sbb
test
add
cld
and
mov
sub
andb
out
push
mov
fcmovb
gs
ret
mov
ds
or
popa
sbb
or
test
cmpl
xor
in
int3
jge
out
gs
movsl
pop
in
cli
jno
test
add
gs
out
adc
bnd
jl
jbe
cltd
je
dec
push
fcomps
mov
and
fwait
jno
in
or
sub
pop
aas
or
hlt
lret
mov
mov
loopne
int3
dec
jnp
test
xor
jns
icebp
hlt
repnz
mov
fsubrl
mov
cmp
icebp
aas
mov
sahf
and
sbb
test
out
insb
int3
push
add
repnz
xchg
ror
mov
add
or
sub
ss
push
mov
inc
pop
add
ss
mov
gs
mov
out
shr
jp
inc
inc
lret
mov
scas
cmp
in
lods
pop
rclb
ss
push
mov
ja
aaa
dec
ret
das
xchg
jge
adc
call
mov
jg,pn
mov
lds
ss
dec
inc
mov
in
inc
cltd
adc
jmp
adcl
lret
push
adc
xchg
jae
bound
mov
sub
dec
sbb
xor
push
xchg
push
cmp
mov
nop
mov
adc
mov
sarl
test
cltd
jge
shll
cmp
jno
fildl
jo
add
adc
dec
test
orl
pop
test
loope
sbb
inc
movsb
mov
lret
dec
inc
cli
mov
xchg
push
mov
stos
test
mov
stos
iret
fcomip
imul
adc
sbbb
fdivrl
push
pusha
out
into
out
cli
sub
ds
adc
push
mov
add
xor
inc
inc
sbb
jb
push
xchg
add
cmp
jp
nop
lock
iret
jl
loop
sar
loopne
out
divl
dec
gs
imul
and
push
cmp
adc
fisubrs
das
popa
sbb
ror
cvtdq2ps
mov
movsl
les
push
rcll
jmp
dec
jae
mov
xlat
pop
outsl
scas
lahf
ret
loopne
inc
cwtl
shll
ret
push
push
stc
shlb
cli
mov
mov
arpl
push
cwtl
dec
std
inc
nop
pop
int3
hlt
int3
mov
movsl
cmp
icebp
jnp
add
sahf
out
push
mov
test
out
in
out
mov
xor
pop
xorb
js
inc
fildl
adc
in
test
in
push
insl
or
push
adc
fcmovnu
lea
push
ss
mov
inc
inc
mov
addl
pushf
cmp
outsb
in
sub
add
cmp
inc
dec
jns
lcall
sub
mov
cmp
cwtl
mov
out
outsl
arpl
insl
mov
stos
loope
xchg
outsb
cmp
insl
add
ret
dec
lcall
test
inc
inc
push
sbb
fcoml
jns
or
and
lds
scas
mov
inc
lock
loopne
xlat
and
insb
and
add
inc
popf
adc
or
or
adc
lcall
push
enter
pop
sbb
cmp
xchg
mov
push
inc
cmpl
aad
arpl
aas
push
mov
xor
cwtl
jl
in
aam
dec
js
daa
dec
adc
insl
cmpsl
repz
int3
outsb
inc
sbb
xor
loopne
outsb
push
push
adc
mov
mov
std
sti
mov
sbb
mov
mov
push
faddp
mov
inc
movsb
ret
adc
inc
shll
fwait
idivl
and
mov
cmpsl
fbld
cmp
hlt
cmp
repz
sub
lcall
jb
push
outsb
adc
lds
push
and
lahf
sbb
mov
add
and
stc
lret
int
int
pop
fwait
mov
inc
out
cli
mov
xor
push
cs
jecxz
iret
sbb
and
xchg
mov
test
callw
mov
pop
roll
bound
jae
ja
add
jne
jp
jge
outsb
sub
cltd
sbb
jl
clc
mov
lret
adc
pop
mov
pop
fidivl
lcall
sub
imul
pop
inc
cs
sbb
dec
movsb
pop
adc
cmpsl
dec
push
pushf
sub
or
xchg
mov
jmp
dec
push
and
lret
push
pop
jmp
lea
mov
outsl
push
frstor
xor
lret
aas
cmp
mov
push
jmp
in
or
jp
movsb
je
sbb
leave
out
dec
inc
mov
scas
dec
incl
les
aad
rclb
sub
dec
pop
loopne
scas
xchg
fwait
pop
sbb
out
add
pop
call
and
push
lds
leave
rorb
lods
outsl
mov
xchg
shlb
or
enter
pop
push
mov
mov
add
inc
push
cmp
cli
and
outsl
fstps
xor
mov
xor
inc
adc
loop
rorb
xor
roll
xchg
out
pop
sbb
mov
xchg
test
xor
lods
fs
mov
jns
xor
mov
sub
fdivrs
pop
add
fdivr
xrelease
cs
fisttpll
mov
jbe
sub
in
xchg
or
shll
sbb
cmp
xchg
mov
les
push
jp
lcall
daa
sbb
mov
pop
inc
mov
test
outsb
shlb
daa
pop
aaa
mov
aam
push
jbe
daa
sbb
sti
cld
mov
jo
dec
bound
push
jnp
xchg
rcll
lea
inc
jle
xchg
inc
gs
mov
lahf
and
cmovl
aam
outsb
xor
cmpsb
pop
pop
xchg
fsubrs
mov
iret
test
fsts
or
dec
add
xchg
fcom
dec
inc
cs
sbb
loope
fadd
inc
xor
xor
dec
sub
lret
push
addr16
cli
adc
ret
xchg
lea
lahf
rcrb
hlt
jae
sbb
outsb
out
inc
xchg
imul
scas
or
pop
xor
and
scas
pop
div
cmp
jb
gs
lea
xor
add
cld
dec
shlb
aam
repz
sbb
add
test
lock
loop
loope
cmp
push
sub
xorb
pop
push
decb
xchg
xlat
mov
hlt
add
xchg
scas
je
jmp
aas
lds
xchg
jae
scas
shll
test
mov
push
fisttps
mov
ss
dec
xor
xchg
and
mov
and
pop
mov
int3
int3
xchg
rol
jb
jg
cmp
daa
push
add
xor
inc
js
int
cltd
lcall
cmp
or
and
and
pop
add
mov
imul
push
push
pusha
clc
xchg
dec
jle
mov
or
test
xor
xchg
cmp
jbe
cmp
cs
jmp
inc
mov
jl
or
jbe
dec
mov
push
push
push
mov
mov
mov
push
jnp
mov
loop
rorl
pop
data16
stos
jge
xlat
push
or
shlb
ljmp
pop
iret
stos
mov
mov
jne
inc
or
mov
adc
filds
int
fs
xchg
mov
adc
popf
aam
add
jo
pop
push
out
movsb
mov
fmulp
xor
mov
dec
mov
cmp
or
and
pop
cwtl
xchg
jge
scas
xor
jae
sti
push
outsl
push
ret
cmp
dec
addr16
subl
mov
pop
jne
loope
xchg
sti
lahf
addr16
xchg
add
call
sub
mov
cld
xor
cmpb
loope
ret
ljmp
lods
enter
int3
push
sub
inc
lock
and
jmp
fwait
ror
pushf
ret
es
sarl
scas
jl
data16
adc
movsb
in
dec
rcl
push
stc
or
test
in
sub
std
xchg
loop,pt
sahf
mov
xor
gs
loope
add
xor
sbb
xchg
push
push
test
mov
in
xchg
mov
mov
cmp
and
out
lret
jle
xor
aaa
popf
jae
fsub
pop
stos
sub
aam
scas
jnp
xchg
imul
hlt
add
pop
in
lods
sahf
and
jp
roll
cmpsb
mov
daa
and
sub
jnp
popa
jbe
mov
xchg
xor
sub
inc
in
or
das
rcll
outsl
dec
pop
popf
sbbl
cltd
mov
out
ret
jle
mov
es
inc
fs
add
and
cmpl
xchg
ds
icebp
adc
inc
subl
xor
lahf
cmp
adc
fsubrs
jns
adc
dec
test
xor
jmp
xchg
lea
cmc
dec
dec
scas
rclb
lods
rclb
or
xchg
sbb
fnstcw
lcall
sarl
mov
pop
rorb
loope
shrb
mov
or
mov
jmp
or
ret
push
aaa
subb
xchg
movsl
fnstcw
cmc
popf
push
lds
and
jmp
adc
xchg
andl
push
cli
leave
outsb
push
sbb
stos
cmpsl
cmp
cmp
cli
repnz
adcl
movsl
loopne
and
lea
test
fmull
or
inc
pop
mov
mull
dec
cli
or
imul
sub
cmpsb
pop
cmp
outsb
and
stos
lret
repz
push
xchg
iret
idivl
repz
adc
jnp
shll
femms
pusha
mov
les
call
cwtl
cmpsl
je
stos
lahf
loop
out
cmp
jb
inc
cltd
loopne
jns
inc
push
fmuls
jp
push
push
insl
fimull
std
into
sub
xchg
xchg
in
ss
jp
sbb
scas
outsb
xrelease
rorb
push
mov
scas
xor
and
aas
cli
repz
shrb
les
mov
pop
mov
mov
outsl
dec
out
data16
xchg
cli
dec
repz
mov
aas
mov
lock
push
pop
or
xchg
adc
mov
mov
flds
test
dec
sysexit
or
xchg
imul
jbe
test
cmp
push
jg
icebp
pop
adc
push
push
int3
pop
imul
std
lcall
in
scas
pop
sub
xchg
lock
orl
sub
test
fst
lret
sub
stos
mov
movsl
sar
push
pop
fdivl
negl
test
sbb
xor
push
fcomps
icebp
mov
les
jg
call
fcom
test
mov
mov
addr16
lahf
fdivl
pop
lahf
push
pop
dec
push
add
jle
jne
insb
pop
pop
push
sbb
hlt
and
xor
movsl
fsts
fdivp
inc
mov
adc
and
es
repnz
orb
andb
idivb
ljmp
cld
mov
jge
std
xor
fmull
xchg
in
mov
pop
push
sahf
xor
cld
pop
and
lret
xchg
xchg
outsw
aas
rorl
inc
push
jp
add
arpl
sahf
testb
roll
jbe
pop
shrb
sbb
push
xchg
inc
es
aad
mov
or
adc
notb
sbb
subb
pop
and
stc
push
mov
leave
mov
repnz
out
lcall
les
cmpsb
aas
daa
inc
dec
loope
inc
popa
pop
std
inc
or
push
dec
cmp
xor
add
add
mov
or
push
dec
sti
aad
bound
jne
cmp
or
cmp
call
mov
xlat
in
mov
and
lock
or
or
and
loop
movsl
aaa
adc
or
adc
enter
loope
scas
test
packssdw
sbb
incl
push
pop
shll
and
and
xor
ret
daa
sub
cmp
fwait
orb
stos
jbe
out
mov
aaa
es
imul
lods
mov
xchg
std
in
cmp
int
cmp
icebp
inc
repz
enter
clc
les
push
inc
fisttpl
push
and
pop
and
xor
jle
sbb
mov
pop
psrlq
push
xchg
daa
daa
inc
lret
inc
push
or
imull
fwait
push
and
bound
cmp
inc
cmc
dec
jecxz
xchg
xor
ja
test
jno
adc
sbb
or
mov
jnp
cmp
cmc
mov
xchg
sbb
into
arpl
dec
out
and
xor
dec
rclb
in
jp,pt
ret
push
mov
aas
iret
lcall
test
nop
movsl
push
xchg
ret
adc
and
and
xchg
imul
cld
aaa
jb
stos
dec
loopne
add
xor
fisttps
push
mov
xchg
dec
add
fildll
mov
movsl
inc
and
sub
add
loopne
lret
in
adc
jae
stc
adc
add
fadds
sbb
andl
jg
dec
in
adc
jbe
imul
sti
pop
inc
mov
cmp
cli
dec
gs
pop
add
loope
pop
sub
mov
ljmp
cmpsl
rclb
cmc
imul
fistps
in
loop
or
push
cmp
sbb
shl
or
jno
and
jnp
mov
popa
sbb
mov
mov
adc
mov
pushf
flds
mov
xor
roll
sub
push
scas
lods
inc
popf
outsb
aas
hlt
sbb
add
test
aam
sbb
rorb
mov
mov
ret
imul
movsl
lret
lds
push
jnp
mov
jnp
pushf
mov
ret
jae
pop
cmp
and
jae
repnz
int3
aam
push
adc
inc
nop
mov
lret
sub
inc
adc
and
movsl
mov
out
xor
inc
inc
imul
shrb
xchg
push
push
lock
repnz
jle
xor
push
mov
lcall
andb
out
jnp
loope
inc
and
pop
push
pop
mov
lret
sub
mov
dec
inc
int
pop
mov
lahf
jae
inc
addr16
pop
jnp
mov
imul
xchg
rclb
pop
fidivl
or
dec
adc
popa
inc
sub
lahf
mov
movl
and
inc
xor
inc
mov
mov
xchg
cli
jl
mov
inc
std
push
push
cs
ds
popa
push
mov
or
aad
jo
cwtl
jg
movsb
mov
inc
ret
inc
jp
push
push
mov
arpl
arpl
movaps
cs
pop
into
fldt
mov
in
push
dec
in
xchg
jo
push
sbbb
je
mov
xchg
and
scas
rcrb
mov
xchg
mov
jbe
stos
jp
mov
mov
inc
xor
fmulp
outsl
pop
jo
subl
mov
xchg
mov
lret
mov
rcrb
cmp
cmp
jb
aas
pushf
inc
push
out
pop
jae
mov
push
adc
fnstcw
fs
pop
insl
ja
xor
xchg
pop
imul
sbb
ss
mov
mov
mov
cs
sbb
adc
cwtl
mov
js
pop
outsl
jl
push
push
stc
mov
inc
icebp
notl
pop
xor
add
jae
and
cmc
xchg
js
das
fwait
icebp
lahf
pop
dec
in
add
push
repz
push
dec
clc
jb
cli
xchg
sbb
dec
icebp
or
jne
mov
data16
fsubl
cmp
fldcw
int
sbb
xchg
mov
icebp
cmovno
es
mov
jnp
mov
cmp
lcall
mov
ret
mov
ret
jns
sbb
fildll
mov
inc
mov
int
jmp
test
outsb
push
es
lea
mov
mov
into
fucomip
out
inc
mov
dec
push
in
and
or
repnz
outsl
lds
push
jae
cmp
je
adc
jle
jge
gs
cmpsl
mov
xor
push
pop
mov
mov
into
mov
pop
inc
in
cmp
dec
mov
jmp
xchg
ror
scas
gs
imul
insl
pop
jbe
int3
sbb
jecxz
xor
dec
sti
in
mov
add
mov
dec
xlat
out
popf
out
das
enter
xchg
mov
xchg
sub
int
mov
fcmove
movsl
add
inc
sbb
ret
out
add
lahf
mov
mov
test
push
push
and
push
popa
cmpsl
sub
xor
jecxz
mov
into
jb
scas
xchg
rclb
rolb
fdivrl
sub
mov
xlat
inc
scas
pop
divl
rcrl
clc
frstor
push
cmc
sbb
lar
scas
add
movsl
negb
jae
sbb
mov
dec
fcomps
mov
sbb
mov
and
fisubs
push
imul
test
push
out
divl
add
mov
mov
inc
xchg
js
mov
call
lds
shll
xor
es
call
insb
gs
jno
outsl
imul
cmp
mov
out
adc
xor
outsb
iret
outsb
les
insb
fidivrl
xor
cmp
iret
ret
aad
rcrb
stos
xchg
mov
sti
movsb
push
stos
into
mov
and
dec
and
mov
xor
ja
and
cmpl
push
sbb
lret
mov
and
jns
popf
das
cmpsl
jae
push
xor
fcmovne
mov
out
bound
push
or
pop
fs
cmc
imul
and
les
bound
insb
imul
mov
cmp
mov
adc
add
fbstp
push
fwait
mov
jne
pop
aam
push
push
add
pop
dec
mov
cmp
mov
xchg
mov
ret
jbe
mull
int3
insb
xchg
dec
adc
sub
in
imul
cli
ret
cs
cmp
das
mov
push
mov
rol
adc
jno
loopne
push
inc
cmpsl
or
xchg
xchg
jne
inc
scas
addr16
add
fisttpll
fs
test
dec
cmpsb
push
outsb
and
enter
fs
add
or
or
or
cmp
out
es
cld
faddl
rorl
bound
jne
jnp
mov
repz
inc
xchg
push
popl
pushf
push
fisubrl
call
and
push
jo
test
pop
std
les
inc
jae
cmp
movsb
push
cmc
out
pop
dec
pmaxsw
leave
outsl
dec
xchg
pop
mov
test
xorb
jo
sbb
lock
sar
nop
aas
jl
mov
xchg
loop
rcll
xchg
jo
icebp
clc
daa
out
push
mov
sti
stos
je
inc
cmpsl
rorb
stos
push
dec
fwait
call
pop
scas
sub
add
enter
pop
sub
mov
xchg
xor
sbb
int
cmpsb
and
sbb
and
int3
xchg
mov
xorl
cmp
ss
mov
sbbb
loopne
loop
sub
or
jl
sub
cwtl
sti
cmpb
inc
sbb
daa
stos
pop
fldenv
jne
pop
or
jg
int3
mov
pop
push
xchg
xorl
dec
sub
incb
in
xchg
xchg
repz
movsb
rep
and
or
sub
cmpsb
cld
jae
aaa
add
dec
xbegin
int
into
repz
int
xchg
xchg
sub
mov
push
adc
inc
xchg
cmp
aam
leave
and
arpl
push
shlb
insb
psubsb
shll
enter
fimull
mov
in
pusha
push
lods
in
stc
adc
insb
mov
push
sub
inc
scas
cld
jp
pop
mov
ljmp
inc
push
scas
scas
pop
cmp
xchg
rol
xchg
lret
mov
leave
into
or
mov
out
mov
or
stos
cmpsl
enter
pop
pop
add
rclb
inc
fistps
dec
fildll
lret
or
push
mov
xor
pusha
or
pop
jnp
jmp
mov
outsl
or
mov
icebp
outsb
push
jae
pop
scas
cwtl
into
imul
out
cltd
pop
adc
inc
mov
es
es
fiadds
add
jl
je
fs
adc
adc
add
outsl
shlb
xchg
cmp
mov
dec
int3
fstl
cmp
inc
in
xor
adc
fwait
test
fcoml
push
mov
mov
mov
nop
shl
stos
cltd
mov
xrelease
and
ror
stos
add
cmp
jbe
sbb
adc
dec
xor
mov
lods
mov
pop
cmp
cmpl
pop
jl
or
pusha
scas
adc
rolb
ds
out
xchg
out
es
rorb
xchg
inc
sbbl
loopne
mov
sarb
dec
adc
adc
lret
xchg
push
xchg
bound
imul
pop
push
in
adc
or
hlt
js
push
scas
popf
lea
scas
out
push
shrb
xor
cmp
jns
inc
test
mov
xor
mov
incl
mov
push
das
sub
repnz
cmp
mov
xchg
push
gs
xor
cmpsb
pop
adc
pop
jne
dec
pop
xlat
lea
xchg
adc
testl
cli
sub
dec
in
cmp
mov
bound
lods
mov
mov
aad
nop
adc
push
mov
jp
jmp
cli
faddl
add
cmpb
ja
mov
dec
pop
stc
inc
ja
and
mov
mov
cli
mov
sahf
stos
xrelease
icebp
mov
sarl
imul
cmp
sbb
mov
jno
inc
mov
rcrl
pop
stos
push
push
and
lock
aad
aad
mov
mov
pop
mov
jl
std
rorl
push
add
in
mov
in
out
jnp
daa
mov
pop
outsl
or
inc
mov
mov
clc
xor
aaa
fadd
mov
add
lock
cmp
pushf
and
int3
mov
mov
shr
dec
jno
cs
fsts
sub
inc
jbe
or
sub
shlb
mov
push
fwait
rcll
jnp
xor
sbb
sub
lret
outsb
imul
sti
mov
mov
cmpsb
or
icebp
clc
ficompl
and
cmp
ss
aaa
std
or
add
and
pop
jb
shll
repnz
enter
lret
dec
arpl
icebp
movsb
std
pop
nop
sbb
or
lret
sub
cmpsb
adc
cmp
fs
xchg
sti
in
mov
sub
clc
mov
jo
mov
sbb
jae
insb
in
pop
dec
inc
das
mov
adc
or
jecxz
roll
call
adc
push
xlat
aam
cltd
inc
and
insl
lods
cld
das
sub
inc
mov
cmovnp
cltd
sbb
mov
out
dec
sub
popa
adc
xchg
leave
mov
jb
sbb
subl
push
and
sbb
xchg
sar
push
rorl
cltd
imul
jp
push
leave
jnp
cmp
jbe
xor
mov
fwait
mov
mov
shlb
dec
loope
mov
sbb
push
jg
int3
das
daa
adc
sbb
push
sub
int3
andl
jbe
clc
mov
in
cmp
push
inc
xchg
pop
add
push
sbbb
dec
fimull
insl
and
push
imulb
add
ss
jo
xchg
sbb
and
mov
lret
xor
mov
xor
mov
xlat
fldcw
out
sbb
in
inc
std
scas
fwait
outsl
jo
lock
or
aam
push
fcmovnu
push
je
int
out
clc
es
jne
inc
fwait
add
xor
loopne
das
mov
mov
std
sub
xchg
pop
unpckhps
nop
imul
lret
mov
arpl
aad
in
sarb
inc
mov
ds
mov
mov
or
outsl
outsb
push
outsl
jp
jle
add
adc
mov
xchg
cmp
sub
dec
cmpsb
sbb
aaa
nop
cmpb
data16
or
mov
mov
jb
movsb
leave
cmp
icebp
mov
sub
inc
lods
arpl
push
inc
fld
or
subl
pop
sub
jle
loop
lahf
aaa
ja
sbb
fs
inc
add
lea
jno
jo
sub
fstpt
push
dec
inc
and
cltd
adcl
pop
insb
jl
inc
sbb
and
xchg
icebp
sub
push
rorl
and
sahf
insb
jge
hlt
push
adc
sbb
sahf
sarl
pop
dec
mov
popa
and
lods
add
jb
in
pop
sarb
inc
fidivl
inc
addr16
mov
jne
dec
push
push
cmp
fs
jae
pmulhuw
sub
ret
xchg
push
and
ljmp
mov
movsb
cmp
cltd
repz
push
mov
or
push
rcl
aas
xor
pop
adc
leave
icebp
lahf
cld
je
dec
mov
in
data16
mov
cmp
cld
test
sbb
add
xor
pop
and
dec
divb
fisubrs
add
pushl
insb
cmp
aam
sub
xchg
testl
xchg
cwtl
push
pop
sub
jge
mov
inc
inc
movsl
mov
ljmp
jecxz
test
sbb
adc
xor
arpl
add
into
mov
jae
sub
sbb
xor
add
psubw
out
or
ret
test
stc
and
jne
insl
ja
je
imul
movsb
mov
imul
orb
adc
stos
pop
mov
cmp
into
and
mov
inc
cli
imul
lcall
push
outsl
xchg
aad
js
pop
js
js
jle
add
dec
mov
push
cmp
push
add
mov
arpl
dec
outsb
stos
movsb
xchg
xor
cmpl
in
xchg
push
or
pop
outsb
pop
nop
inc
popa
enter
fnstcw
addb
push
daa
add
aad
lret
ja
xorb
inc
inc
int
xor
int3
adc
pop
mov
sub
or
pushf
pop
filds
or
pop
jbe
push
leave
stos
mov
push
bound
rcll
dec
mov
adc
mov
jmp
dec
dec
mov
mov
add
lods
inc
mov
popf
cmpsb
jge
stos
dec
lods
mov
mov
dec
mov
dec
out
call
or
lahf
cmp
mov
cmp
jbe
xchg
or
dec
enter
dec
pop
imul
push
jmp
cmp
lock
lcall
mov
insl
incl
mov
shrb
andb
pop
dec
loop
cmp
mov
lds
mov
xchg
and
jne
lahf
jo
adc
jle
subb
mov
out
sub
cwtl
xor
adc
xchg
push
sbb
lret
test
mov
aaa
shrl
into
push
das
jne
mov
cmp
ds
and
xchg
xchg
cmpsl
lret
fsubrl
lcall
add
out
push
add
adc
or
aaa
sti
push
mov
pushf
xchg
sbb
fnstsw
jae
pop
cmc
sbb
out
pop
dec
and
sbb
xor
xor
fldenv
cmp
pop
xchg
mov
out
or
or
test
push
xor
ret
inc
pop
lret
repz
add
dec
sub
push
jne
push
int
push
pop
incb
inc
pop
sub
leave
jae
sub
xor
adc
push
cmp
add
in
jmp
popf
in
mov
ret
iret
adcb
cld
pop
pop
xor
test
xchg
mov
into
lret
ss
int
enter
mov
push
scas
and
sbb
repz
mov
push
push
mov
and
dec
rcrl
aas
out
mov
cmpsl
out
in
lds
lret
std
loop
adc
mov
sbb
or
xchg
sti
nop
dec
notb
insb
mov
rolb
jmp
pop
sub
shrl
or
cwtl
in
test
pop
lcall
add
and
sub
inc
cmp
pusha
add
dec
xchg
ficompl
ss
dec
sbbl
adc
mov
add
inc
pop
or
sub
push
nop
movb
frstor
and
add
lcall
mov
insb
mov
inc
xchg
ret
sub
cmp
add
fstp
cmp
popf
in
leave
leave
sbb
xchg
mov
xrelease
and
mov
das
or
mov
pand
jp
sbb
mov
cltd
and
dec
mov
cmp
cli
lods
and
loopne
fimull
mov
test
mov
out
andl
mov
xchg
adc
std
mov
jmp
fnsave
imul
add
pop
xchg
pop
xchg
mov
mov
insb
and
jne
aad
or
mov
cmp
mulb
hlt
addb
sub
imul
ja
mov
hlt
cs
or
push
xchg
mov
sbb
ret
mov
imul
xchg
gs
or
ljmp
ror
not
push
cmp
push
mov
push
mov
aam
fstpt
lret
sbb
mov
mov
cmp
dec
unpckhps
cmp
lods
inc
cmp
fimull
pop
pop
cmpsb
ret
rcll
fsubrs
dec
aas
pop
loopne
dec
mov
lret
ds
mov
dec
jno
in
mov
mov
sbb
add
lods
fwait
leave
sub
cmc
xchg
or
imul
nop
scas
adc
inc
mov
add
mov
dec
arpl
test
jnp
imul
ljmp
test
jle
add
and
int3
loopne
or
cli
popf
jge
lahf
scas
mov
xchg
inc
cmp
bound
sbb
and
jns
negl
inc
mov
scas
sub
rol
out
stc
inc
lcall
and
imul
and
enter
and
out
add
je
mov
or
stos
leave
lcall
fwait
shrb
jp
cmp
lret
sub
leave
and
loope
lods
repz
push
xchg
add
xor
mov
and
mov
and
loopne
xor
xchg
rorl
lret
inc
nop
ret
sub
mov
pop
adc
jb
cmpsl
es
cmpb
out
push
in
jge
adc
or
add
dec
dec
cmc
jecxz
jge
fisubs
jp
fsubrs
mov
cmp
add
data16
jnp
sahf
fcomip
sub
or
inc
fs
cmpsb
or
sarl
adc
add
pop
test
js
sbb
mov
fadds
adc
mov
push
mov
cwtl
inc
cld
lahf
fcmovnb
pusha
sti
inc
inc
and
test
lods
insb
push
shr
test
sbb
iret
bound
sbb
int3
jecxz
addr16
push
jl
cmp
push
or
push
inc
mov
pusha
jns
adc
push
inc
dec
and
iret
into
or
inc
push
pop
jl
xor
nop
mov
out
sub
jmp
mov
xchg
push
in
ss
shll
sbb
jno
js
jle
mov
sahf
lds
mov
sti
push
popa
cltd
xchg
sti
dec
jns
cmpsl
and
pop
ret
aad
in
jle
jne
sahf
xchg
jo
inc
pop
stos
data16
aad
xchg
mov
mov
nop
cmp
add
mov
sub
or
cmc
adc
mov
mov
jns
enter
jle
cli
mov
stc
aaa
aas
cmpsb
xor
sti
pop
jno
xorb
sub
lret
mov
in
test
pop
sub
imull
jno
movsb
mov
enter
add
jg
push
jg
sub
push
xchg
xor
inc
jp
std
arpl
nop
xor
sti
aaa
xchg
repnz
rol
stc
ret
pop
mov
xor
mov
shlb
mov
insl
subb
xchg
dec
sbb
es
mov
movsbl
inc
sub
pop
add
fwait
mov
subb
ljmp
add
aad
lea
mov
xor
sbb
nop
rcrb
or
clc
notl
test
je
push
cmp
push
pop
xchg
and
jns
dec
mov
leave
icebp
or
orl
mov
insb
and
xchg
rcll
mov
repnz
popa
mov
mov
mov
jno
aas
jl
jb
sbb
enter
je
mov
jecxz
sub
rclb
je
cmp
in
mov
cmp
mov
je
lock
outsb
or
add
mov
push
sti
dec
push
loop
add
and
insb
jmp
test
ret
mov
mov
outsb
pop
mov
push
jg
push
sub
lock
popl
sbb
jp
xchg
jns
sbb
adc
pop
iret
imul
jmp
insb
iret
out
sbb
adc
xor
sbb
outsb
cld
pop
mov
subl
fiaddl
inc
imul
mov
gs
mov
xchg
add
fidivrs
xor
clc
sub
arpl
jp
mov
roll
or
popf
inc
or
sbb
inc
sub
jp
in
ss
push
cmpsl
shll
mov
in
xchg
mov
adc
mov
dec
mov
cmp
std
and
jmp
push
out
cmovns
lea
sbb
sti
jmp
xor
pop
sahf
dec
sbb
push
mov
cmp
mov
lret
lods
rorb
dec
clc
iret
int
test
insl
dec
repz
xor
or
mov
sub
mov
lcall
cmp
pop
ret
mov
mov
adc
insb
in
fwait
cmc
movsb
mov
mov
and
adc
test
cmc
stos
inc
mov
fwait
bndldx
sbb
ss
mov
outsl
sbb
push
cs
incb
rclb
shll
jbe
jb
rclb
cli
filds
out
aas
mov
lahf
rcrb
mov
mov
out
mov
clc
mov
jl
test
xor
sub
aaa
mov
adc
inc
shl
lock
icebp
negl
fimuls
jne
aas
inc
loope
add
jnp
imul
push
decb
adc
or
push
js
jg
inc
testb
sub
das
shrb
scas
push
or
sbb
push
xchg
test
inc
outsl
xor
adc
pop
pop
mov
pop
repnz
add
sub
and
insb
mov
sbb
mov
fs
and
sbb
adc
fs
cmp
les
test
insb
shll
push
sbbb
mov
dec
les
mov
test
add
pop
movsb
stc
ljmp
stos
pop
push
loop
sub
push
push
mov
lahf
aaa
sub
out
icebp
clc
in
push
add
sarb
dec
sub
xor
push
push
inc
dec
cli
lret
insl
aaa
pop
dec
out
dec
jecxz
notb
stos
xor
and
cmpsb
inc
icebp
and
daa
add
push
rcrb
xchg
insl
dec
movsl
push
inc
jno
es
aam
insb
lods
mov
mov
mov
and
mov
scas
push
cmc
sar
jbe
sub
roll
xchg
loope
mov
cmp
mov
ret
ret
inc
fsubs
ja
sbb
xchg
xchg
jae
shrb
xchg
push
aaa
clc
cmpsl
cli
int3
call
and
jle
pop
xchg
test
jge
addb
jae
inc
test
hlt
push
sbb
add
in
and
lahf
stc
adc
orl
leave
in
sub
dec
dec
mov
mov
ret
imul
push
out
mov
xor
jmp
cli
xchg
inc
shlb
inc
jno
push
inc
and
mov
repz
pop
push
insl
daa
mov
loope
les
dec
scas
test
in
lret
sub
push
mov
jb
jp
data16
lods
mov
xchg
mov
lahf
cli
jne
xor
pop
mov
scas
hlt
xor
sahf
add
roll
or
rolb
rorl
nop
push
jo
mov
jecxz
jge
jbe
push
pop
pusha
fwait
repz
repz
sub
jmp
daa
ljmp
imul
and
dec
mov
ja
in
xor
pop
lods
test
out
aas
adc
gs
push
sbb
sbb
jecxz
xor
pop
mov
or
mov
and
and
mov
add
sarb
mov
jl
xlat
or
xchg
lea
lret
mov
pop
inc
in
xchg
adc
xchg
mov
andb
arpl
popf
cmp
das
add
add
mov
pop
mov
stos
je
push
xlat
inc
adc
in
lcall
xchg
pop
hlt
xor
jmp
push
xchg
sub
adc
insl
repnz
ja
ret
xchg
sbb
push
stc
popf
loopne
inc
mov
mov
insb
imulb
push
mov
mov
mov
pop
iret
dec
pop
into
stc
cld
mov
push
je
stos
pop
jge
add
inc
mov
mov
stos
ljmp
xor
xchg
add
jle
inc
cltd
imul
jle
lock
loope
sub
sub
cmp
nop
cmp
xchg
cmp
mov
push
jp
sahf
jae
mov
sub
pop
cmpl
adcb
adc
das
xchg
xor
in
daa
imul
inc
fisttpll
mov
sub
mov
andb
loopne
int3
push
dec
scas
mov
cmp
sub
gs
clc
out
mov
jp
call
int
lret
adcb
outsl
sbb
xchg
dec
fstpt
jmp
test
jg
sarb
ret
test
and
movsl
cmp
mov
test
xor
or
jbe
inc
lods
cs
icebp
push
adc
xchg
push
cmp
push
arpl
into
loope
inc
cmpsb
jecxz
push
imul
rep
mov
cmp
gs
adc
movsb
cmp
dec
jno
jae
mov
arpl
mov
ljmp
push
xchg
xchg
pop
sub
daa
repz
stc
ja
std
iret
pushf
test
pop
xchg
pop
fwait
jl
movsl
or
dec
adc
clc
cmc
sub
or
pop
xlat
fildl
loopne
inc
int3
fisubs
jbe
movb
jmp
adcl
sti
xchg
push
cmp
lret
mov
cltd
jo
adc
fwait
pushf
or
fs
add
inc
movl
les
scas
subb
cmc
sti
pop
inc
add
addr16
mov
lock
mov
sar
adc
ss
rcll
out
jmp
jmp
and
xchg
pop
mov
mov
and
inc
and
and
mov
enter
popf
mov
loope
test
ljmp
pop
cmpsb
dec
dec
imul
insl
fldenv
sub
cmp
insb
in
stc
cmc
in
jp
mov
cmpsb
and
or
xchg
dec
sti
push
stos
and
add
mov
neg
imul
lret
daa
ret
and
stc
jne
stc
add
push
pop
xchg
adc
outsb
mov
cmpsl
pop
cmp
mov
icebp
pop
inc
adc
lret
es
test
or
push
push
leave
outsl
in
lret
in
scas
fstp
std
scas
jmp
data16
mov
les
jo
fstpt
gs
pop
sub
mov
push
pop
and
pop
sbb
in
lret
pop
negb
sbb
lret
adc
mov
pop
fists
daa
lods
out
add
cmp
addr16
je
sarl
jg
insb
push
aad
mov
mov
and
or
scas
aas
neg
pusha
xor
cwtl
pop
dec
and
adc
xchg
into
dec
ss
push
in
push
cltd
shr
mov
aam
xchg
jne
sub
cli
arpl
pop
pop
into
cwtl
xor
xchg
lret
cli
sti
cmpsl
lods
std
aad
adc
fcmovu
pop
cmp
pop
mov
pop
fidivrl
dec
push
pop
push
cmp
out
mov
mov
clc
fisttpll
mov
mov
mov
xchg
enter
in
lods
lret
xor
xchg
int
sbb
fcoml
arpl
test
stos
cmp
nop
push
xor
outsl
and
lods
cwtl
pusha
repnz
and
pop
js
push
cmp
test
movl
sbb
fsts
sbb
push
mov
inc
test
mov
mov
xor
jecxz
mov
or
push
pop
in
sub
and
dec
pop
xchg
hlt
xchg
repz
sbb
cmpsb
pop
insl
jno
xor
pop
mov
loop
sarb
xchg
lret
cmpsl
sub
mov
enter
and
cmp
popa
pop
icebp
das
push
sub
pop
mov
adc
in
and
es
das
pop
mov
aas
inc
nop
out
push
or
dec
or
adc
cmovs
loopne
sub
inc
push
cmp
or
cmp
lret
or
inc
shll
mov
push
jg
sbb
pop
jp
push
mov
inc
scas
cmp
or
add
and
testb
xlat
fldpi
fidivs
mov
push
shll
iret
mov
shlb
push
xor
in
sbb
cmp
and
push
inc
popf
add
sbb
pop
scas
mov
jl
inc
rol
gs
ss
dec
imul
ret
inc
mov
loopne
inc
mov
dec
in
outsb
mov
xor
aam
and
push
dec
fcmove
stos
stc
and
pop
js
out
enter
or
int3
xchg
in
mov
jb
sbb
dec
mov
fst
mov
add
popa
popf
pop
add
pop
popa
xchg
adc
repz
stos
sarb
int3
cmp
or
arpl
cmp
leave
outsl
push
push
pop
and
lret
pop
xchg
push
das
adcl
dec
mov
and
pop
imul
aam
jnp
int
notl
mov
mov
movsl
or
aad
in
mov
sbb
mov
xchg
cs
xchg
movsl
stos
add
fidivrl
aaa
push
cmp
repnz
into
jae
sbb
ljmp
xchg
shll
mov
push
push
xchg
adc
sub
mov
push
iret
and
int3
nop
push
add
call
mov
jmp
push
lock
test
push
test
inc
rolb
orw
pushf
jnp
in
xchg
mov
cmpsl
stc
shl
enter
int
mov
ljmp
movsl
sub
mov
xchg
leave
lods
loopne
mov
lods
scas
imul
les
je
xchg
mov
int3
sbb
fstps
xlat
loopne
mov
and
pushf
xchg
add
cmpsl
pop
jle
arpl
ja
pop
push
fxch
mov
lret
sbbb
mov
xlat
dec
pusha
add
lock
or
dec
mov
add
xchg
add
xchg
call
imul
dec
cmp
sub
or
jb
push
movsb
xchg
int
aas
in
mov
movsb
jp
ja
adc
int
sahf
sub
data16
pop
pop
dec
cmpsl
push
mov
and
dec
icebp
sub
pop
dec
cmpsb
inc
add
and
cmpsl
mov
mov
cli
ss
out
cmp
and
push
fnstsw
test
fistl
pop
pushf
adc
cmpsl
or
or
sti
xlat
inc
fprem1
adc
mov
push
and
pop
dec
or
lods
in
xchg
lods
mov
cmp
xor
mov
inc
xor
or
mov
cmp
jecxz
pop
mov
outsb
cli
addl
lods
mov
and
xchg
push
das
inc
movb
lcall
sub
in
xor
shlb
dec
cmp
data16
in
je
fwait
ret
ljmp
int
push
sbb
notl
cmpps
leave
push
rcr
pop
xchg
adc
mov
mov
mov
divb
xchg
les
lret
loope
and
insl
mov
int3
jmp
sub
add
inc
or
movb
inc
fsubl
add
pushf
mov
sbb
daa
sahf
cmp
add
mov
dec
int
inc
cmp
sbb
test
mov
and
jnp
enter
fistl
push
adc
nop
dec
cld
movsl
ds
in
push
mov
or
sahf
insl
pop
xlat
aam
dec
adc
cmpsl
sub
or
repnz
mov
or
pop
xchg
sub
cmp
push
fwait
inc
mov
inc
adc
inc
sbb
push
jnp
inc
dec
test
sarb
mov
pop
enter
push
lahf
jns
aas
and
insl
mov
pop
outsl
dec
dec
mov
mov
fwait
shrb
or
mov
popa
outsb
hlt
sub
mov
pop
fnstcw
jnp
movsb
mov
sub
jmp
push
mov
into
inc
cmp
sub
rolb
rcl
dec
sub
mov
pop
inc
cmc
inc
test
cltd
add
jo
mov
loope
jb
cmc
xlat
gs
adc
xchg
test
mov
lahf
mov
add
inc
scas
in
dec
outsb
mov
xchg
push
xor
mov
das
call
popa
dec
jno
fs
dec
loope
bound
int3
lock
ss
or
lods
outsl
pop
std
lahf
mov
xor
loop
dec
xor
mov
fwait
out
xor
pop
mov
add
and
frstor
fst
mov
aad
fwait
arpl
inc
cmp
jnp
dec
jge
loop
es
dec
mov
cmp
adc
add
adc
iret
ljmp
stc
jbe
xchg
push
xchg
lea
xlat
or
popf
shlb
push
jl
ss
inc
pop
xor
ret
and
mov
xchg
in
or
dec
add
push
jae
push
icebp
jle
mov
mov
and
xlat
sbb
sbb
cmpsb
xchg
repnz
das
inc
sbb
push
add
xor
rorl
into
cmp
cmpsb
sti
jb
lock
cwtl
fcomip
in
aas
mov
mov
mov
leave
mov
loope
jne
ja
mov
xlat
dec
pop
xchg
ljmp
call
xchg
push
cwtl
daa
sbb
jmp
cmpsl
popf
insb
leave
clc
sbb
xchg
stc
sahf
pop
mov
push
aad
gs
movsb
xlat
roll
jb
outsb
hlt
repz
jg
addb
mov
jmp
test
mov
into
jb
adc
and
push
xorb
xchg
dec
push
cmp
pop
lahf
cwtl
outsb
jbe
sarb
gs
rcl
iret
std
pop
mov
cltd
mov
rorb
dec
leave
into
mov
pop
cmc
adc
pop
xor
jnp
sub
mov
cld
ss
mov
loope
sub
xchg
push
mov
mov
or
mov
cs
shlb
cmp
outsl
sbb
pop
scas
inc
and
push
aas
mov
loope
adc
into
and
mov
mov
sbb
in
decb
mov
adc
mov
ljmp
aam
ja
adc
lret
or
push
xchg
filds
push
and
cmp
mov
mov
jbe
inc
jne
sarl
xchg
sbb
rorl
sbb
fadd
push
sahf
and
jnp
cltd
and
mov
dec
push
loopne
aam
js
lds
out
pushf
cs
arpl
out
push
sbb
out
sbb
ds
int3
mov
mov
dec
mov
mov
jns
das
mov
cmc
mov
push
je
mov
jp
mov
or
mov
orl
pushf
mov
adc
jmp
mov
mov
outsl
scas
cli
pushf
mov
inc
pusha
pop
cmpsl
xorb
pop
or
sbb
rolb
pop
pop
mov
jo
into
loopne
sub
or
xor
inc
jge
mov
pop
mov
movzwl
push
repz
out
jbe
mov
mov
cli
mov
jecxz
clc
leave
xchg
cmp
push
rcll
std
jbe
mov
daa
stc
add
xor
sbb
outsl
jnp
cld
push
and
int3
lods
mov
jecxz
adc
jl
cmp
jns
into
jns
test
fsts
mov
fstpl
test
sbb
aad
mov
les
shlb
hlt
cmp
xchg
push
std
jle
push
push
jge
leave
pop
rcl
sub
pop
in
and
jae
add
arpl
push
inc
gs
sub
inc
pop
gs
push
cmp
cli
mov
ds
movsb
sbb
adc
out
dec
sub
or
insl
in
std
xchg
pop
ljmp
cltd
rcrl
fs
dec
mov
xchg
pop
gs
jb
pusha
daa
adc
lds
sahf
jo
xchg
sbb
lret
in
mov
fistps
push
shlb
mov
push
icebp
popf
xchg
jg
addr16
jo
loopne
int
dec
pop
xor
cmp
dec
sub
out
or
inc
inc
push
pop
mov
aas
jmp
cmp
and
mov
popa
jge
cmp
jns
into
sti
mov
dec
into
jle
mov
cmpsl
lret
stos
aas
sub
add
pushf
mov
sub
xlat
out
dec
mov
lds
mov
cwtl
lret
enter
mov
jne
mov
cmp
or
ljmpw
pop
in
repnz
sbb
and
leave
popl
jecxz
aas
cmp
xor
rcrl
sub
cmp
cld
leave
cmpsl
je
jo
pop
pop
jbe
push
data16
dec
mov
mov
mov
push
and
popa
dec
pop
scas
call
pop
in
pop
sbb
add
inc
dec
mov
stos
enter
pusha
adc
mov
nop
gs
mov
lcall
daa
popw
ret
jle
fwait
icebp
test
loopne
lea
repz
cmp
push
aad
cmp
or
add
xchg
lret
aaa
pop
sbb
mov
jp
add
add
dec
cltd
je
sbb
pop
push
fildll
jnp
fisttps
orb
mov
dec
fsubrl
mov
loope
push
sub
inc
sbb
jne
pop
scas
sbb
cli
std
inc
sbb
jmp
sbb
jnp
fcmovnb
sub
pop
rclb
adc
std
adc
shlb
ret
sub
cmp
adc
push
ds
sarb
lods
mov
sbb
sub
mov
mov
cmpsl
mov
sbb
cmp
outsl
push
test
adc
subl
test
add
pop
adcl
cmp
movsl
paddusb
sbb
pop
arpl
aaa
movsl
mov
ss
sbb
mov
mov
mov
mov
cmc
mov
xorb
mov
xor
add
jns
and
sar
jnp
cmpsl
out
out
pop
mov
pop
aaa
aas
mov
inc
cmp
aam
pusha
jno
mov
xor
into
jne
pop
cld
sbb
mov
jge
xchg
test
jmp
mov
negl
stc
push
inc
stos
jp
push
iret
gs
leave
inc
push
mov
loop
or
mov
mov
daa
cwtl
push
xchg
inc
mov
dec
scas
mov
test
or
out
sti
es
inc
ror
xor
cmc
fcmovnbe
sbb
cltd
push
jg
xor
fcmovbe
inc
mov
int3
insl
cmp
aad
mov
fdivl
mov
fs
daa
xchg
sahf
xchg
ja
inc
out
bound
pop
push
pop
sub
or
pop
or
and
mov
dec
ja
cmp
bound
jmp
test
jbe
xchg
mov
add
popf
aam
cmp
in
sbb
sub
gs
idivl
jp
cmpsb
push
jbe
loop
scas
enter
mov
inc
sti
mov
das
push
jg
xor
adc
inc
sti
mov
test
mov
sti
inc
testl
rolb
movsl
mov
cli
ret
lds
cmp
dec
push
fs
arpl
xchg
jno
jb
aam
mov
sub
insl
movsl
in
mov
jbe
pop
es
ficoms
sub
ja
inc
inc
cltd
lret
mov
cmp
mov
daa
ret
cltd
mov
in
inc
out
loope
cmp
and
das
and
fiaddl
mov
adc
pop
jo
push
sub
jne
adc
jno
xchg
pop
and
xchg
insl
sub
jmp
push
addr16
stos
ljmp
sub
in
out
repz
mov
mov
test
dec
call
repz
stc
outsb
mov
pusha
test
and
adc
sbb
rorb
cmc
leave
push
repz
sbb
push
mov
das
jb
shll
jns
adc
xor
jge
jno
cmp
lock
insl
and
clc
imul
mov
xchg
fidivs
ss
cld
mov
mov
mov
sbb
inc
adc
cmp
mov
pop
mov
fiaddl
lea
lea
rorb
add
mov
pop
insl
lods
aam
mov
movsb
in
es
std
push
and
jge
outsl
pop
inc
js
pushf
inc
dec
pop
roll
or
daa
adc
loop
xchg
sub
sbb
sbb
insb
mov
ss
mov
pop
dec
adc
cmp
mov
outsl
jmp
inc
cs
shll
or
addr16
lea
inc
mov
xchg
movsl
xchg
inc
out
stos
orl
sbbb
xchg
popf
ds
jo
addr16
clc
fnstsw
xor
pop
cmpl
inc
clc
add
lds
pusha
xchg
ja
mov
dec
int
cmp
sub
jae
pop
push
push
sbb
add
mov
aad
sub
jne
shr
decb
mov
push
mov
add
fistpll
adc
xchg
imul
add
es
mov
jecxz
mov
push
cmp
jne
xor
cmp
lods
inc
into
imul
xchg
add
lcall
xchg
and
roll
outsl
pop
jle
adc
inc
fsubrp
aas
pop
pop
popf
adc
mov
sub
mov
push
xchg
adc
cld
neg
and
test
xchg
lcall
repz
xchg
push
xorl
test
fdivr
jbe
add
mov
xchg
adc
add
xorl
or
mov
mov
int
lds
stos
iret
jecxz
dec
pop
dec
dec
cmp
mov
or
inc
jae
lcall
repz
pop
sbb
mov
add
pop
mov
aam
adcl
sbb
lcall
push
add
xchg
int3
cmp
loope
mov
sbb
mov
sub
sbbl
push
mov
jg
ret
fldl
adc
mov
int
fimuls
inc
movsb
xor
mov
push
push
dec
cli
sbb
jbe
push
and
andps
sbb
rol
decb
sahf
sbb
lds
xor
outsl
dec
xor
xchg
inc
cmp
pushf
xchg
mov
add
dec
mov
xor
xor
sub
orb
jge
test
xor
jne
movsl
jnp
es
jge
mov
adc
aas
or
fiadds
fwait
cmp
mov
add
fnstsw
popf
mov
mov
fwait
das
fstps
mov
test
lahf
xchg
fldt
out
es
push
loop
cmp
dec
test
mov
popw
pop
adc
jp
dec
jmp
dec
in
addb
fisttpl
jg
sub
gs
fwait
scas
outsb
in
loopne
xchg
repz
inc
stos
adc
mov
out
add
divb
testb
mov
sub
xlat
mov
in
ljmp
mov
cmpsl
vpmadcsswd
and
mov
push
in
mov
xchg
dec
mov
pop
out
call
fwait
outsb
test
or
pop
add
cmpsl
jp
pop
call
add
and
aam
sti
movsb
test
or
or
jnp
shrl
push
xor
jns
mov
shl
aam
hlt
mov
push
adc
pop
fsubs
dec
insl
dec
ljmp
mov
popa
out
cmp
adc
push
insb
jnp
rol
mov
or
jge
stos
push
push
aaa
int3
add
push
xchg
mov
xchg
popa
jp
aas
dec
sub
fsubs
mov
and
xchg
test
xor
cmpsl
pop
test
xchg
mov
insb
sbb
js
aas
add
mov
cltd
xchg
add
mov
inc
je
movsb
inc
subps
int3
ja
ret
outsb
into
push
imul
and
jp
test
mov
xchg
in
mov
add
testl
inc
fimuls
push
or
add
add
std
pushf
add
push
dec
lcall
ror
cmpsl
jno
and
mov
arpl
cmpsb
add
sti
and
pop
hlt
inc
lods
jae
je
insl
and
call
mov
subl
push
movsl
push
xor
aas
mov
shl
cltd
cmp
imul
call
push
push
aam
shll
fs
push
and
fidivs
sub
pop
mov
dec
loopne
pop
push
adc
cmp
or
inc
lret
gs
popa
sub
xchg
xor
mov
imul
push
mov
in
inc
test
jbe
xor
popl
jne
movsb
jnp
inc
sbb
fdiv
stos
outsl
fstps
ret
insl
jg
in
testl
mov
mov
aaa
mov
bound
arpl
xchg
xor
iret
shlb
jae
jecxz
pop
sbb
mov
sbb
fcomps
push
mov
pop
pop
adcb
sbb
mov
jle
push
pop
bound
popf
pop
sub
cmp
xchg
cltd
fcompl
push
sbb
aas
pop
fpatan
xchg
or
cmc
imulb
xor
xchg
jg,pt
aam
insl
jp
in
cmp
or
jno
xor
sahf
sbb
jns
lods
inc
and
mov
mov
cmpsl
daa
sub
data16
fbld
sbb
mov
mov
das
push
adc
lds
xor
jns
enter
sbb
in
ret
add
pop
out
jo
in
pop
mov
inc
mov
jb
jne
daa
bound
mov
cmp
aas
dec
cwtl
jb
lcall
out
adc
fwait
negl
and
mov
bswap
in
fs
xchg
dec
adc
push
test
or
cmp
lahf
pop
lea
xchg
aaa
adc
cmp
xchg
inc
sbb
or
pop
lahf
add
xlat
insb
imul
aaa
repnz
outsl
cld
pop
cli
mov
sbb
lods
cmp
jg
cld
sahf
xor
lret
lcall
cs
sbb
xor
clc
stc
jecxz
or
lea
insl
les
rcll
aam
sub
lea
imul
stos
jecxz
cwtl
xlat
dec
popf
div
xchg
adc
push
fiadds
fldcw
pop
sarl
imul
mov
xchg
rolb
stos
sbbb
and
xchg
into
fdivrl
cmp
insb
jbe
jge
add
xchg
cs
push
mov
cmp
jne
jno
cmp
out
mov
push
ficompl
cmpsb
icebp
sbb
push
mov
inc
cltd
cmpsb
dec
sbb
insb
sub
jmp
xchg
mov
adc
pop
bound
into
or
movsl
sub
sbb
mov
xor
aad
aam
xchg
pop
xchg
sbb
cmpsb
clc
mov
pop
add
fnstcw
mov
push
xchg
jo
mov
push
pusha
ja
lds
outsb
add
test
mov
or
outsl
xchg
sbb
in
mov
sbb
sbb
pop
imul
in
push
subl
and
and
out
xchg
adcb
and
ljmp
jle
int
add
loopne
imul
test
push
and
or
in
aaa
sbb
addr16
int3
xor
test
test
fsubrp
inc
mov
unpckhps
inc
push
inc
adc
push
jp
inc
test
dec
pop
inc
dec
add
ja
sub
loopne
ret
jo
mov
iret
dec
mov
mov
ficomps
dec
dec
leave
mov
ret
fidivl
mov
push
shrl
mov
pop
in
loopne
sub
add
adc
enter
adc
out
test
mov
sbb
inc
dec
cli
pusha
or
xchg
pop
or
sti
lcall
add
shll
out
inc
pop
pop
jbe
outsb
add
js
mov
sahf
bound
xor
push
ss
orl
std
sub
mov
sbb
testb
loopne
ret
or
pop
clc
inc
xchg
xor
sub
xor
push
nop
rorl
lret
or
xor
scas
data16
lcall
lds
std
inc
sub
sub
jne
xchg
adc
cli
imul
mov
xchg
pop
xorb
rorl
cmp
gs
cmp
mov
fcomip
rol
jecxz
mov
arpl
jp
lds
or
push
hlt
add
cld
std
push
or
mov
outsl
mov
mov
push
pop
repz
xchg
jnp
jae
daa
mov
push
mov
ret
shl
loope
pop
push
shll
mov
and
lcall
xor
jp
sbb
mov
jb
mov
pop
mov
loop
xor
or
pop
lret
cmp
xchg
outsl
in
ret
cmp
mov
push
cmp
jo
dec
xor
mov
setge
daa
sub
mov
push
fs
pop
pop
cmpsb
jle
pop
imull
xor
mov
pop
lcall
cmpsl
mov
sub
mov
adc
add
in
lods
dec
out
gs
xor
push
clc
jp
lret
push
pop
lahf
and
addr16
insb
outsl
push
idivl
push
xchg
out
aas
push
or
ret
cmc
cs
adcl
lods
push
std
jb
call
or
inc
sub
lea
dec
sub
decb
pop
daa
sbb
roll
mov
testl
stc
insb
xor
push
cwtl
mov
fidivrl
cs
xchg
cmp
in
sar
xchg
gs
and
sub
hlt
xchg
sar
cmp
xchg
pop
xchg
mov
popa
sbb
inc
push
popa
popa
mov
lahf
lret
popf
push
cwtl
fs
jp
and
or
test
mov
hlt
aam
cltd
pop
roll
ror
inc
or
out
xchg
out
lcall
xchg
out
cltd
mov
cwtl
cmp
jmp
lds
pop
testl
je
ja
test
fildl
aad
jge
xchg
fsubl
aaa
aas
andps
test
testl
outsb
inc
mov
js
lea
add
sbbb
popa
imul
imul
test
fldl
mov
sub
inc
or
and
sahf
adc
xor
outsl
rcrl
cwtl
mov
stc
js
in
mov
mov
je
sbb
fiadds
and
dec
jne
pop
or
lcall
test
roll
nop
or
jl
sbb
add
pop
les
arpl
fwait
mov
fcomps
adc
cs
vcvtdq2pd
fxch
fwait
mov
rorl
out
scas
inc
add
mov
mov
xchg
stos
mov
dec
pop
or
xchg
lock
sbb
or
mov
ljmp
lock
xlat
cltd
adc
loopne
test
nop
dec
push
sub
xchg
mov
lock
xchg
cs
outsb
xchg
mov
add
sbb
push
lods
push
test
sub
pop
inc
in
test
das
jnp
cltd
push
lahf
add
insl
pop
sahf
stos
jb
fsubrl
cld
and
aas
inc
fstps
cmp
lcall
jg
jmp
in
fidivrs
das
das
in
test
jle
pop
pop
mov
les
xor
sbb
aad
adc
arpl
push
movzbw
outsb
mov
insb
pushl
jno
popf
xor
nop
stos
dec
sub
movsl
jb
xchg
int
and
mov
xchg
cmp
loopne
notb
outsl
aam
mov
in
dec
pusha
dec
add
enter
addr16
cmp
pop
sbbl
mov
dec
lcall
pop
out
out
cld
movsb
out
shlb
mov
pop
out
mov
es
and
mov
jl
fstpt
and
int3
scas
sti
mov
es
lcall
cmpsl
inc
imul
mov
daa
fwait
leave
xor
jmp
pop
cld
mov
mov
fwait
sbb
jge
push
outsb
cmp
flds
xor
popa
je
jmp
mov
pusha
daa
xor
fisubl
mov
ret
scas
jle
not
xchg
add
pop
hlt
pop
fidivrl
test
out
add
arpl
mov
mov
xchg
jp
data16
ds
add
sarb
sbb
add
mov
push
cmp
and
js
and
outsl
sub
mov
ljmp
aas
ret
mov
into
jle
dec
lea
mov
pop
fisubrl
dec
lock
mov
subb
push
or
sbb
xchg
repz
mov
jb
stos
into
scas
sbb
xchg
cmp
pop
dec
cli
push
mov
pop
inc
xchg
fadd
xor
or
int
push
bnd
int
lahf
fsubrl
fs
or
mov
pop
mov
mov
inc
dec
sbb
je
mov
add
cmpsb
fidivrl
pop
movsl
insb
fisubrl
ljmp
stc
mov
arpl
loopne
jmp
out
xor
js
pop
xchg
das
push
push
call
mov
jl
shrb
mov
sub
and
hlt
sub
xchg
or
cltd
fmull
push
sahf
dec
jns
xor
loope
lret
adc
mov
or
fsub
fwait
xchg
ds
aad
std
xlat
call
sbb
in
movsb
sub
jnp
sahf
and
stos
aad
mov
nop
test
inc
out
inc
xor
xorl
push
or
or
call
notb
pop
mov
mov
test
adc
vcvtss2sd
xchg
jmp
cmp
and
jge
inc
loope
pop
jae
cmp
add
pop
jns
sarb
outsb
mov
popa
test
and
sbb
mov
lret
cs
mov
loopne
cmp
inc
and
sub
repz
dec
mov
add
dec
dec
dec
fistpll
add
call
js
scas
push
nop
rolb
dec
push
inc
mov
and
adc
adc
notb
bound
mov
aas
jne
add
sub
dec
inc
sbb
push
fimull
sbb
lods
xchg
testb
int
mov
add
daa
test
andl
jb
sbbl
movsb
mov
in
imul
pop
mov
sbb
sub
cmpsl
xchg
into
scas
sub
xchg
mov
jl
inc
sbb
jo
fldt
pusha
lret
jno
and
clc
loope
sti
and
adc
in
sub
rorl
push
and
int3
shrb
shlb
push
imul
mov
mov
sub
lret
cmc
xchg
dec
or
mov
hlt
push
lret
outsb
mov
subl
sbb
or
inc
xor
lock
or
fwait
cmp
movsl
insl
adc
or
xlat
jne
add
and
lcall
js
lahf
cmp
push
xchg
cmc
lock
dec
lcall
rclb
mov
push
lock
in
add
jae
cmp
lea
cmp
fisubrl
add
add
adc
insb
push
stos
mov
cmpsb
shlb
pop
insb
sbb
test
mov
or
sub
mov
fstl
aam
pusha
or
sbbb
scas
push
nop
inc
mov
clc
pushf
mov
fistpl
sub
xchg
loopne
lret
pop
rorb
sub
pop
outsb
pop
add
adc
aad
pushf
ret
pop
push
jl
and
add
xor
cwtl
loopne
cmpsl
ret
ss
leave
xor
sub
mov
loop
fidivl
xchg
jg
xchg
pop
mov
nop
outsb
mov
jmp
std
lret
push
xor
int
shl
lea
inc
sub
aad
mov
add
mov
or
sub
lock
das
and
push
adc
lods
lock
repnz
xor
lret
and
nop
stos
or
dec
mov
lods
aas
popa
mov
std
fcompl
mov
cmpsb
jns
xchg
enter
cmp
or
inc
mov
xor
and
in
ja
sub
jecxz
mov
insb
add
ja
pop
mov
loope
loop
fucomp
out
mov
lea
add
adc
mov
movsl
adc
insb
or
sub
lods
gs
cmp
insl
jb
in
add
mov
lahf
out
push
add
mov
les
ret
sub
mov
mov
shlb
adc
dec
icebp
hlt
dec
add
push
mov
rclb
fmuls
add
mov
mov
jb
push
push
in
inc
or
push
cmp
cmp
sbb
jo
inc
mov
adc
addb
in
pushf
adc
scas
adc
mov
shlb
jl
mov
insl
in
sti
adc
xchg
and
add
push
ret
cmp
in
xchg
xchg
cwtl
imul
inc
js
lret
xchg
popa
addb
ficoms
xor
addr16
mov
dec
lret
jmp
push
dec
adc
aad
icebp
mov
jecxz
iret
jae
mov
mov
stos
inc
xchg
addr16
shufps
leave
jbe
pop
dec
orl
in
mov
mov
inc
repnz
dec
fsts
mov
pop
cmpsl
sbb
pop
inc
push
or
mov
lcall
pop
dec
cmc
push
xchg
das
fstpl
mov
pop
and
jmp
cmp
cltd
jns
mov
ja
popa
std
pop
int
loop
jg
and
jae
jae
into
mov
insl
and
int3
shll
bound
shrb
and
pop
mov
xor
and
int
pop
arpl
into
pop
popf
cmp
sub
jg
cmp
pop
cs
dec
xorl
mov
repz
rcr
push
adc
xchg
fldcw
rcrl
push
add
int3
pop
or
in
gs
out
pop
or
cwtl
dec
test
mov
sahf
outsb
ja
insb
push
inc
test
pushf
scas
iret
loopne
xor
lret
mov
out
mov
lcall
aad
fstps
mov
dec
inc
adc
fsubrl
popa
enter
insl
mov
test
lock
cmp
clc
cmp
inc
insl
or
cmc
cltd
ljmp
sbb
pop
jge
mov
inc
pop
addr16
sahf
scas
adc
add
pop
mov
add
adc
fimuls
fdivrs
sbb
jne
shr
fldl
lcall
sahf
loop
cmp
pop
inc
and
add
pop
push
lahf
cmp
sbbb
pop
sub
into
inc
fildl
or
ret
cltd
enter
cwtl
push
icebp
icebp
mov
notb
mov
pop
call
or
das
das
loop
mov
mov
out
loop
mov
inc
pop
fisubs
std
mov
adc
ss
mov
and
je
gs
xchg
std
pushf
adc
les
xor
adc
or
xor
cmpsb
or
pusha
std
cmpsl
popa
insb
add
jl
push
stc
pop
sbb
shrl
sub
adc
sti
pop
stc
or
cltd
fnsave
movsl
fstl
jg
pop
shlb
popf
ljmp
sti
cwtl
and
call
jg
sbb
sar
loop
xchg
add
dec
mov
jno
mov
push
inc
xor
ss
inc
and
jns
xchg
adc
mov
add
xchg
adc
aad
sub
shrb
or
std
cld
mov
adc
xor
fwait
cmp
jmp
call
mov
outsl
mov
or
rcrl
lret
or
daa
inc
popa
push
mov
mov
test
test
mov
inc
or
iret
out
popf
dec
add
icebp
pop
and
repz
outsl
push
mov
femms
lods
fwait
shll
adc
sbb
ds
mov
ret
ss
jle
sbb
jne
xor
push
dec
xchg
movd
sbb
dec
shrb
cld
shl
sub
push
fistps
jnp
mov
sbb
pop
add
jmp
lcall
ret
ja
test
mov
out
mov
cmp
sub
xor
test
push
sub
add
daa
pop
aam
jbe
pop
mov
ficoms
pop
pop
or
rcrl
mov
mov
test
rcrb
sbb
cmp
cwtl
out
xchg
xor
ds
cld
int3
sbb
inc
sub
add
shrl
out
dec
mov
xchg
sub
pop
nop
jo
and
dec
aas
pusha
sbb
call
jno
pusha
add
incb
jne
push
mov
nop
movsl
dec
mov
push
fimuls
fwait
jle
mov
pop
loop
push
sbb
loop
lret
xchg
out
fsubrs
jg
mov
pop
and
jno
pop
adc
add
shr
pusha
and
das
fs
aam
push
outsb
xchg
pop
movsl
stos
xchg
cmp
pop
fsubrl
mov
mov
mov
jbe
mov
xor
pop
or
nop
test
push
xor
jae
cwtl
roll
sbb
inc
cmpsl
pop
cmp
dec
sti
inc
sahf
int3
ret
push
cwtl
addr16
adc
mov
insl
xor
es
cmpsb
in
push
inc
sub
lock
xchg
test
adc
ljmp
mov
xchg
lret
aam
cmp
repnz
decl
fiaddl
int3
xchg
inc
mov
stos
shrl
pop
dec
inc
fcomps
js
lret
mov
das
push
lcall
adc
cmpsl
cmp
cmpsb
pop
adcb
pop
call
shll
xor
popf
xchg
add
lea
jae
fxch
lods
test
cltd
ss
cmpsl
mov
xor
ja
imul
stos
dec
repz
arpl
orb
jp
xchg
addr16
sub
test
jle
hlt
daa
mov
mov
lcall
js
sti
xor
fisttpll
mov
adc
mov
icebp
mov
mov
xchg
in
imul
or
mov
push
in
push
cmp
out
push
push
stos
in
add
aas
test
xor
mov
sbb
cmpsl
mov
cmp
fdivr
sbb
sub
xor
sbb
call
add
jge
inc
and
sub
int3
sbb
fisttpl
push
cmp
dec
and
jno
je
mov
addr16
dec
cmp
fisttpll
movsl
loopw
in
aas
dec
loopne
rcrl
cltd
xor
jo
xchg
jmp
test
sarb
mov
outsl
ret
mov
cmp
mov
jo
lock
push
cmp
jmp
and
sbb
neg
push
lahf
cli
adc
push
cs
cmpsb
int
pop
gs
push
or
pop
cmpsl
popa
xor
inc
mov
ja
lds
jae
in
out
pusha
push
mov
pop
dec
or
push
adc
xchg
adc
pusha
ds
scas
clc
repz
cmpsl
mov
ljmp
inc
jmp
and
jb
call
inc
cmp
lock
xchg
or
cmp
cmp
sub
nop
ret
stos
sahf
fsts
ffree
mov
add
sbb
mov
push
or
jge
icebp
jl
mov
or
insb
jg
lods
in
inc
pop
arpl
or
xchg
xor
sbb
iret
out
test
pop
out
scas
addr16
push
pop
jle
and
add
inc
aas
scas
in
shrb
push
cmpsl
mov
int3
aam
aam
xchg
mov
sub
popa
pop
sbb
fstpt
pop
je
push
int3
imul
xchg
adc
cmpl
adc
sbb
add
push
mov
push
int3
xchg
sbb
aad
sti
daa
xor
cltd
lea
mov
cmp
ja
xor
stos
les
fdivr
insb
and
jne
xchg
or
jl
push
dec
fnstcw
xor
jnp
xchg
sahf
push
cmpsl
inc
sti
pop
aas
outsb
call
sub
dec
stc
fcmove
adc
aam
dec
or
mov
rclb
cld
inc
and
fmull
sbb
in
push
push
xchg
xchg
xchg
xor
xor
stos
or
push
popa
pop
cwtl
cwtl
popf
sti
lahf
sbb
mov
sbb
jne
std
lahf
stos
jecxz
and
mov
or
push
or
inc
cltd
fwait
cmp
fxch
std
mov
in
cmp
xchg
in
xchg
stos
rolb
push
mov
fwait
and
aaa
arpl
add
dec
shll
les
into
loope
fadds
mov
scas
mov
pop
mov
jno
xor
sbb
pop
mov
in
inc
jp
lds
mov
int3
fbld
or
into
dec
mov
or
push
add
fiaddl
adcb
fsts
lret
test
mov
push
push
xchg
add
iret
sti
sub
mov
nop
xchg
xor
pop
pop
paddsw
arpl
xchg
shrl
or
fists
sbbb
inc
hlt
std
insb
gs
mov
insb
test
jmp
lcall
jno
sahf
iret
mov
in
push
jne
enter
mov
cli
and
mov
cli
bound
jp
or
repz
xchg
pop
lods
sub
push
pop
test
mov
movsb
or
sbb
pop
and
inc
add
mov
out
lret
cmp
sbb
sub
lret
inc
ja
ror
stos
stos
in
and
push
je
lahf
sti
mov
repz
addr16
es
push
cli
rcl
popf
test
and
or
decl
jo
dec
sub
mov
adc
jp
pop
test
mov
popf
mov
xchg
repnz
pop
lods
pushf
enter
push
ret
mov
imul
sub
js
out
mov
cmp
test
dec
or
push
lahf
dec
jge
adc
les
inc
sbb
shr
ficoml
or
push
clc
mov
enter
add
push
stc
push
xor
cmpsl
sahf
ds
sub
pop
jp
jb
sbb
push
jecxz
test
hlt
xchg
push
dec
jo
jae
lret
daa
lds
jno
cld
adc
fdivrl
js
repz
in
cld
sti
or
clc
ljmp
shlb
test
clc
hlt
in
loopne
pop
insb
cmpsb
jne
jne
fidivl
cmp
jp
loopne
push
lock
mov
addb
addr16
push
daa
cmp
int3
loop
adc
adc
dec
fnstcw
fbld
dec
movsb
loop
nop
sbb
jle
cmp
aam
add
pop
add
or
add
cmc
and
dec
fprem
cmp
add
mov
sahf
inc
lock
dec
xchg
cwtl
inc
or
iret
or
and
pop
push
jo
add
push
push
daa
push
mov
ljmp
sub
or
js
adc
inc
sahf
xchg
aad
mov
pop
and
push
inc
push
rol
jns
fists
mov
insl
movsl
mov
cmc
out
cmp
test
jne,pn
cmp
mov
push
cmp
jae
ds
mov
push
je
loopne
and
out
push
push
pop
loop
cmpsl
sbb
popl
bound
push
shrl
xchg
add
insl
push
mov
inc
div
movsl
lock
subl
jmp
insb
imul
repz
out
ds
fs
lcall
call
lds
xchg
xor
xchg
and
pop
mov
pop
cmp
or
mov
rcr
cmpsb
jns
repz
push
sub
imul
mov
xlat
imul
or
and
scas
sub
bound
shr
loope
push
sbb
push
repnz
in
mov
inc
push
push
and
and
je
popf
sub
stc
pop
lods
or
scas
adc
push
xchg
cmp
iret
cld
mov
xchg
and
cmpsb
push
out
repz
jae
mov
adcb
adc
mov
cld
mov
lds
mov
pop
mov
cmpsb
das
push
push
push
cmp
jmp
mov
push
push
sahf
insb
xchg
cltd
sahf
xchg
push
aaa
or
ret
xchg
aaa
loopne
nop
pop
movsb
cwtl
out
fimull
fs
push
cmp
daa
int
sub
push
out
jo
stos
sbb
cmpsl
das
jne
cli
mov
movsb
lock
pop
dec
aam
iret
cmp
fnsave
mov
add
dec
nop
mov
sub
xor
jb
gs
jo
sub
std
cli
gs
xor
xchg
loop
mov
mov
mulb
jnp
mov
subb
cmp
arpl
sub
outsl
cld
loope
roll
jp
js
scas
movsl
cmp
daa
enter
pop
mov
cli
dec
cwtl
inc
push
jl
pop
mov
xchg
xchg
sbb
adc
inc
jns
dec
les
sub
dec
fcomps
enter
xchg
out
pushf
jbe
or
rcrl
aas
loop
cld
roll
addr16
popf
push
jl
fidivrl
sub
inc
popa
or
xor
pop
cmp
add
pop
js
out
call
cli
test
pop
lcall
mov
aam
orb
lcall
mov
loopne
pop
fcmovu
pop
loope
hlt
jae
lcall
fistpl
fistps
push
adcl
mov
cmp
cwtl
pop
sub
imul
xorl
dec
lds
movsl
outsb
adc
les
add
daa
sub
arpl
pop
xlat
dec
push
sbb
lds
pop
cwtl
xchg
mov
ret
xlat
inc
adcb
dec
inc
xchg
stos
leave
jle
ret
push
push
cmp
push
out
push
shr
out
and
test
inc
in
add
fcoml
repnz
mov
lods
fwait
push
mov
dec
mov
add
push
cs
lcall
test
sbb
jp
mov
and
inc
and
sbb
leave
lcall
and
imul
inc
stos
add
xor
stos
clc
cmc
pop
sahf
adc
push
and
imul
je
cwtl
cmp
mov
test
push
sti
mov
out
roll
and
cmpsl
xorb
jo
movsl
scas
xchg
and
outsl
fdivs
adc
scas
mov
pop
sub
adc
xor
icebp
xor
mov
fs
inc
sub
pop
xor
mov
dec
data16
pop
pop
in
xchg
iret
lcall
pop
outsb
add
or
jno
ret
outsl
dec
sbb
shll
je
iret
iret
test
cs
xchg
mov
insl
xchg
icebp
icebp
adc
sahf
cmp
add
int3
lods
jecxz
sti
pop
ja
iret
lds
cwtl
lret
test
fistps
pop
dec
dec
push
cmp
out
and
add
fwait
icebp
xchg
ucomiss
push
iret
pop
hlt
stc
or
pop
mov
mov
jbe
xchg
mov
xchg
sbb
cli
push
es
loope
push
xlat
call
sahf
sub
add
push
push
lock
and
add
xor
inc
addr16
popa
jp
fistps
xchg
push
jo
aas
push
cmpsl
jmp
repz
dec
jecxz
in
ja
imul
stc
and
jnp
pop
addr16
aas
jnp
gs
or
test
jmp
out
jbe
insb
lea
jle
sub
inc
push
out
dec
cmpsl
data16
test
adc
mov
filds
sub
adc
jl
test
les
stc
std
and
mov
adc
cmp
fnstsw
fcoml
insb
decb
mov
jmp
out
insl
sbb
cmpsb
mov
lret
xor
sub
mov
ss
and
cmp
sub
xor
sbb
dec
xor
inc
inc
lea
fsubs
inc
ss
dec
sub
cmp
and
lcall
inc
inc
imul
dec
mov
repnz
pop
and
mov
push
testb
iret
jle
push
push
cmp
je
iret
das
repz
jg
das
xor
imulb
push
mov
xor
popa
add
fsubl
and
rcll
add
cmp
cli
repz
ror
imul
rcl
jg
and
stos
inc
mov
hlt
fstps
cmp
cmp
les
bound
mov
jo
sbb
clc
pop
nop
imul
rcr
mov
xlat
test
lds
mov
sti
and
ret
push
popa
sub
pop
jmp
ret
adc
fistl
movsb
xorb
mov
inc
mov
addr16
cld
xor
lahf
inc
mov
cmp
out
xor
les
lods
mov
repz
jne
jns
mov
xchg
pop
inc
les
dec
sbb
shlb
repz
jns
les
insb
mov
mov
pop
dec
sub
dec
stc
adc
add
jae
aam
and
lods
adc
xchg
push
add
add
xchg
sub
mov
cmp
push
cmp
nop
push
or
outsl
testb
pop
fisttps
insl
push
imul
out
pop
mov
push
fcoms
cltd
cmp
mov
cmp
cmpsb
shl
shll
add
inc
mul
xor
fucomp
sub
in
clc
loope
jnp
jnp
hlt
mov
fisubrs
je
jno
sbb
fbld
in
shl
mov
shll
iret
outsb
decb
mov
rolb
test
std
jecxz
outsl
mov
imul
mov
rorb
inc
or
push
in
mov
cmpsl
jns
mov
test
push
ljmp
lret
adc
add
adcb
push
adc
dec
mov
and
fisttps
push
mov
test
sbb
add
pop
lds
add
cmp
jmp
iret
out
aaa
jp
fisubs
or
dec
js
and
into
sub
testb
push
mov
jg
fdivr
push
push
dec
icebp
int
test
shl
pusha
xchg
lods
sub
and
ret
shrl
push
adc
in
or
sub
xor
and
pop
sti
scas
push
data16
insl
push
xchg
sub
xchg
rol
movsl
jle
decb
cmpl
bound
mov
jno
cwtl
ljmp
xlat
and
jns
cs
fldcw
lcall
mov
inc
leave
push
lea
sub
data16
ret
data16
add
gs
push
sub
pop
mov
ret
push
das
inc
cmp
push
add
mov
cltd
or
bound
and
out
push
push
lahf
inc
decb
pop
loopne
cltd
adc
xor
adc
lds
les
je
push
xchg
cs
sub
sbb
xor
dec
test
mov
fdivl
push
xchg
dec
iret
pop
popa
ficomps
mov
xchg
push
mov
jle
in
xchg
cmp
aad
clc
imul
inc
nop
and
adc
push
fmuls
sbb
jne
jo
or
test
cmp
insl
das
cmpsl
push
in
mov
add
pop
push
lds
mov
orb
mov
xlat
cmp
pop
test
movsb
mov
enter
mov
lock
jns
mov
cmpsl
testl
arpl
mov
in
sub
and
or
lea
pop
cmp
mov
inc
out
adc
adc
jbe
jle
leave
xor
inc
xchg
lods
dec
sbb
add
pusha
lcall
dec
or
ja
sub
lods
ljmp
in
hlt
in
cmp
repz
in
xlat
adc
repnz
add
cltd
sub
sti
and
jl
cmp
imul
ss
pop
push
and
xor
sub
mov
mov
lret
jb
loop
lret
pop
jb
sub
loopne
in
cmp
ja
aad
add
jle
cs
mov
jle
lods
sti
jb
lods
or
xor
aad
mov
insl
jg
and
jns
inc
jno
out
dec
jge
fnop
ss
xlat
xlat
pusha
popa
into
test
imul
out
xchg
loope
xchg
jne
mov
std
inc
pop
loope
mov
xlat
xor
stos
pop
mov
cmp
into
push
lds
pop
xor
test
aad
jbe
mov
xor
xorb
ret
sbb
cmovns
dec
sbb
hlt
stos
scas
sbb
pushf
movsl
jnp
shr
pop
cld
xor
mov
jne
loop
inc
sub
and
je
out
push
test
xor
out
add
push
subb
fidivrl
mov
daa
sti
lcall
lock
cld
movsl
test
jb
adc
push
dec
iret
testb
xor
jmp
jecxz
jo
dec
or
sbb
movb
or
addl
subl
xchg
loopne
mulb
test
addr16
outsl
fisubrl
mov
idivl
or
pushf
outsl
xor
jb
stos
mov
in
lret
dec
push
lret
push
push
repz
imull
in
jmp
add
clc
push
std
cmp
out
je
mov
jo
pop
mov
sbb
xchg
mov
add
dec
mov
mov
dec
jbe
lret
enter
in
dec
mov
js
mov
lods
adc
inc
adc
mov
dec
inc
or
mov
inc
sub
pop
inc
sahf
vmovsd
fisttps
das
movsl
test
pop
idivb
lock
aam
clc
outsl
xchg
ficompl
pop
in
sti
jmp
cli
adc
mov
cmp
jns
in
mov
mov
cmpsl
cmp
sbb
rcl
mov
lret
mov
mov
repz
inc
into
outsb
dec
dec
inc
sbb
mov
in
pop
or
mov
jg
pop
lret
jecxz
fistpl
repnz
adc
jmp
sti
sub
sub
paddw
inc
dec
repnz
mov
lods
ds
sbb
sbbl
inc
cmp
push
test
fpatan
add
xchg
xor
pop
rcrl
mov
adc
aad
inc
add
in
pop
ud2
scas
push
scas
arpl
sub
xchg
es
or
add
xchg
push
daa
sbb
jbe
hlt
test
pop
or
adc
push
push
aam
xor
outsl
push
int3
add
sbb
sbb
and
lods
mov
jo
push
dec
test
add
dec
add
movhps
push
mov
push
mov
imul
jmp
mov
inc
jle
cmp
mov
add
mov
xchg
adc
push
nop
dec
xor
mov
push
or
and
jb
sbb
je
sub
jbe
stos
out
fimull
ja
cmp
fs
testb
and
cmp
push
cli
addb
sub
jne
repz
lods
jo
sub
jecxz
or
pop
std
xor
or
inc
add
pop
subl
nop
cld
dec
jb
jg
pop
push
cmpsl
lods
jge
cs
inc
xchg
rorl
mov
lods
lods
js
faddl
mov
data16
std
xchg
das
inc
pop
jg
cs
xor
jno
nop
pop
fistps
sbb
add
jle
mov
sub
popa
sbb
or
jae
int
mull
sub
cmp
push
sbb
fisttpl
mov
pop
int3
mov
jmp
stos
sub
jecxz
movsl
in
shlb
or
cli
mov
pop
sub
mov
push
add
addr16
push
pop
push
cmpsl
sub
mov
adcb
sahf
mov
pop
and
shll
pextrw
push
in
cs
lahf
jl
pop
or
fs
mov
pop
sub
es
insb
cmpps
rcr
jle
into
mov
adc
cli
ret
sub
repz
out
dec
adcb
aad
testb
inc
cmc
jp
pop
shl
xor
mov
enter
jle
and
pop
jbe
xor
mov
in
rol
pusha
sbb
data16
outsb
mov
pop
and
mov
xor
xchg
iret
add
sahf
cltd
xchg
mov
mov
dec
mov
sbbb
sbb
idiv
jb
int3
inc
les
mov
xor
push
sub
lcall
test
cmpsl
or
icebp
scas
in
mov
iret
clc
ret
sbb
xchg
cmp
or
out
adc
loopne
xchg
push
pop
dec
fisubs
add
fisubrs
fmuls
cmovno
mov
or
and
mov
inc
or
pop
or
test
push
out
xchg
lods
bound
dec
imul
test
in
cs
cld
jl
pusha
sub
leave
into
imul
pop
xchg
adc
sbb
sbb
aam
arpl
xchg
sub
mov
push
sub
cmp
xor
or
mov
enter
ret
imul
inc
shrb
mov
ljmp
xchg
cmp
pop
fidivrs
jmp
sub
xor
or
or
in
fwait
dec
ljmp
dec
enter
movsb
cmpsb
add
stos
repnz
xchg
icebp
popl
scas
mov
sub
xor
pop
jmp
sub
xchg
pusha
mov
rcrl
sahf
cli
in
mov
lret
lea
add
pop
lock
shl
push
imul
dec
inc
xor
pop
imull
push
aad
add
mov
and
enter
xchg
mov
dec
dec
and
mov
mov
sbb
adc
mov
and
arpl
mov
out
out
dec
sub
mov
mov
dec
add
xchg
dec
push
sub
dec
fmull
adc
movb
subl
dec
xor
mov
ja
mov
inc
and
outsl
and
roll
in
pusha
fsubrs
jge
pavgusb
ljmp
sub
mov
hlt
fcomps
insl
cli
out
mov
mov
imul
xchg
rolb
inc
mov
cmp
gs
lahf
pushf
sbb
sbb
repnz
das
sub
push
pop
dec
mov
or
inc
insb
mov
test
scas
pop
cmp
mov
jb
pop
inc
push
xor
neg
fstpt
dec
xor
aas
dec
into
inc
test
mov
push
mov
mov
xor
xchg
push
mov
sbb
sub
push
nop
or
fwait
mov
push
and
push
js
repnz
xor
popf
inc
add
inc
lods
and
mov
dec
pop
cld
or
frstor
and
adc
in
inc
in
mov
xor
dec
add
clc
lods
mov
cs
add
gs
nop
fcomps
sub
cwtl
test
inc
and
lret
jae
push
in
xor
xbegin
sahf
mov
push
add
and
movsb
mov
jns
jne
jle
adc
xchg
dec
ja
testb
jle
lcall
and
cltd
mov
outsb
out
js
sahf
cmp
fwait
pop
dec
cmp
and
mov
std
xchg
pop
lods
mov
loope
or
jmp
loop
dec
out
cmpsl
pop
subl
aad
xchg
pop
dec
or
ret
or
sysexit
cmpsb
adc
daa
idivl
push
cmc
lret
dec
lods
leave
jmp
pop
pop
mov
popl
adc
popa
jb
jg
stc
mov
mov
xchg
pop
bound
sbb
scas
or
mov
bound
dec
mov
push
cltd
cmp
xor
add
shrb
and
xchg
testl
mov
mov
xchg
loop
repz
mov
idivb
imul
jge
mov
push
mov
and
daa
int3
nop
dec
mov
xchg
mov
jmp
pushl
inc
push
cmpsb
xchg
jbe
movsb
add
sbb
sub
es
add
loop
cmp
pop
mov
jmp
add
mov
jbe
lcall
inc
in
sbb
mov
mov
push
adc
sbb
jo
dec
pop
out
nop
inc
mov
and
out
dec
imul
lret
sbb
adc
in
ja
scas
call
loopne
insl
add
cmc
mov
sub
pusha
movsb
rcrl
movsb
or
add
or
fstl
notl
add
es
mov
js
xchg
push
in
lcall
popa
push
pop
lods
mov
mov
jno
in
lret
test
pop
and
sbb
xchg
call
sub
pop
cmp
lret
icebp
adc
mov
pop
lods
pop
adc
aad
jg
or
out
cmpl
pop
jmp
ret
std
ficoms
or
dec
pop
lock
lcall
pop
insl
fwait
cld
icebp
shll
rorl
lahf
insl
das
outsl
inc
sarb
pop
repz
pusha
cmovg
or
jo
dec
ss
pop
aaa
xor
jle
push
sub
testb
sbb
xor
dec
ljmp
xor
cmp
sbb
sahf
fistpll
stc
sti
aas
inc
ror
into
leave
in
lcall
ljmp
lds
jge
cld
or
push
and
icebp
xchg
add
inc
xchg
and
mov
xor
inc
call
xor
rolb
cmp
and
test
and
xorl
out
cs
iretw
mov
push
mov
adc
jge
adc
and
pop
aam
sub
loopne
jae
movsl
mov
push
lahf
lock
stos
xchg
mov
xor
fs
ret
loop
lods
xor
clc
lds
cwtl
or
sbb
imul
pop
xchg
jl
sub
push
and
dec
test
or
das
jns
scas
sub
mov
fucomp
push
xchg
push
or
lahf
insb
scas
stos
or
xor
cmp
into
mov
sbb
lcall
lcall
aaa
shll
push
in
dec
sbb
mov
dec
stos
mov
push
and
jno
pop
aaa
shlb
ljmp
jne
xchg
adc
arpl
add
or
fldcw
xchg
pop
cmp
mov
jg
lods
cmp
les
lds
mov
sub
xor
add
add
rol
rorb
mov
les
inc
mov
mov
notb
mov
data16
mov
out
fsubrs
nop
adc
inc
and
lea
mov
mov
dec
sbb
enter
add
gs
repz
shlb
mov
push
pop
cld
mov
adc
push
outsb
xchg
push
movsb
shr
bound
fneni(8087
cs
adc
dec
push
mov
lahf
sub
ljmp
sbbl
cmp
inc
inc
and
fdivs
inc
cs
sbb
sbb
fcompl
ret
nop
push
lock
jbe
dec
jb
or
mov
out
sbb
push
mov
ret
aaa
sarb
push
or
lods
push
cmp
cmpsb
dec
lods
ljmp
mov
xchg
xchg
call
inc
test
mov
dec
mull
aas
mov
push
mov
xorb
or
lahf
int3
imul
hlt
ret
dec
stos
pop
sbb
push
xchg
or
ds
sub
mov
in
push
stos
jmp
ljmp
push
xchg
and
movsb
xchg
xchg
into
xchg
movsb
push
sub
pop
pop
jne
jl
mov
xchg
test
mov
sub
mov
sbb
xchg
fwait
pop
repz
pop
cs
test
enter
sub
test
mov
sub
adc
and
xor
jp
sbb
push
nop
jmp
les
sub
inc
repz
lret
repnz
cmp
fldl
fsub
sti
repnz
addr16
add
mov
sbb
inc
outsb
mov
fisubl
lock
enter
mov
cmp
fwait
adcb
cmpb
fs
int
roll
pop
jle
mov
iret
mov
xchg
imulb
test
ja
add
cmpsl
xorb
adc
loop
jno
sti
or
adc
cmp
push
sti
clc
xchg
lcall
and
sbb
pop
popl
cmp
inc
rol
out
mov
fldt
sahf
cld
int3
mov
jb
test
sbb
lret
dec
push
mov
imul
or
mov
fs
and
mov
testb
jg
sti
mov
in
jl
and
loop
mov
push
mov
stos
and
aaa
pop
fs
ja
add
imul
movsb
xor
lods
rcrl
add
pop
ret
pop
out
push
test
push
mov
aam
ret
jmp
rcrl
mov
shlb
xor
adc
mov
jg
imul
push
inc
hlt
sub
lods
sub
lods
cltd
in
push
cld
or
test
cli
popf
orl
fsts
out
outsb
mov
out
enter
or
push
mov
lret
xchg
push
loopne
cltd
mov
imul
mov
jle
xchg
out
cmp
mov
pushf
mov
sub
jne
fs
gs
cmp
mov
xchg
fistpl
sub
aas
inc
inc
push
in
cld
int3
into
push
addr16
sti
jns
add
popf
pop
mov
sti
cwtl
pop
lcall
in
push
xchg
mov
call
xchg
xchg
push
jns
stc
imul
mov
cmp
in
in
cs
jbe
xlat
inc
inc
outsb
lret
and
mov
or
mov
add
inc
xor
cltd
cmp
in
mov
fisubrl
scas
arpl
iret
jmp
xor
jg
aad
mov
push
in
movsb
mov
and
cltd
and
push
sub
insb
mov
dec
loopne
fs
into
repz
movsl
mov
imul
jg
aas
mull
add
xchg
iret
cmpsl
dec
ss
pushf
add
fwait
or
xor
dec
into
sbb
mov
mov
sub
xchg
sbb
push
mov
stos
inc
paddsw
pop
xor
jecxz
lret
mov
push
imul
jo
dec
sbb
outsl
int
adc
sub
subb
popf
dec
xchg
sub
mov
adc
dec
mov
loopne
adc
cmpsl
cmpsb
lret
shrl
jnp
xorb
test
cmp
sbb
sub
loope
mov
jno
rcll
xlat
cli
add
fdivl
inc
jb
push
sub
inc
adc
pop
test
data16
jno
push
sbb
mov
push
add
mov
jmp
sbb
mov
pop
xchg
add
popa
lret
loope
ljmp
shl
test
bound
lret
cmp
xchg
pop
scas
push
xlat
clc
and
arpl
and
inc
jl
fmull
pusha
testb
mov
roll
pop
aam
xlat
jno
shlb
jecxz
fmuls
pop
or
cltd
adc
fmull
insb
int3
jg
sahf
add
jne
test
cmp
inc
pop
popa
add
push
lahf
lods
outsb
repz
pop
hlt
ret
cmc
ficompl
cld
lods
repz
loop
mov
and
sbb
mov
cmp
addr16
arpl
lahf
outsl
in
std
sbb
cmp
xor
gs
jecxz
enter
ljmp
sub
cmp
dec
inc
pop
jb
inc
mov
nop
sbb
aam
inc
push
loopne
sbb
leave
lods
xchg
adc
fmull
mov
js
sbb
out
mov
mov
pop
xor
and
cwtl
into
addl
fidivrl
push
popf
stc
rclb
cmpsb
arpl
inc
ds
ret
pop
pop
mov
je
clc
clc
inc
push
push
aaa
xchg
loop
push
decl
jb
xchg
shlb
cmpsl
es
pop
dec
lds
xor
mov
aaa
push
std
mov
movsl
xchg
mov
addb
out
divl
mov
jg
xor
fsubr
push
cmp
dec
pop
adcb
jae
push
adc
push
icebp
rolb
mov
push
sbb
hlt
fistpll
outsb
jp
and
stos
lds
mov
adc
mov
aad
popf
lea
cmc
out
push
cltd
push
ja
sarl
jns
jne
pushf
pop
stos
push
arpl
gs
jge
push
xor
xchg
fdivrs
or
adc
mov
mov
add
scas
dec
dec
and
inc
movl
sub
or
inc
adc
cmp
fcomp
ljmp
jne
test
js
addl
xchg
push
lds
int3
enter
inc
mov
out
bound
cmp
jmp
fildl
movsl
push
popa
andl
adc
dec
push
or
sub
pop
aad
movsb
push
sub
clc
adc
aam
lret
sbb
xchg
lcall
cltd
in
test
add
push
popf
fcoms
push
or
cmpsb
sbb
sub
ds
mov
push
jmp
ss
xorl
inc
ds
je
aam
std
jmp
mov
xor
out
adc
inc
pop
dec
sbb
ds
in
imul
fwait
inc
stos
call
mov
mov
int
movsb
popa
add
test
inc
jp
icebp
adc
jge
jmp
test
push
jno
cmp
mov
lods
or
outsl
mov
lret
dec
bound
and
pusha
rcrl
mov
push
mov
das
lahf
in
fldenv
xor
adc
popa
inc
jnp
mov
movsl
int
testl
push
push
sub
imul
xlat
mov
in
test
ja
add
and
or
out
pop
cmp
icebp
jge
stos
adc
int
or
imul
imul
lods
sbb
outsb
mov
add
adc
cmp
dec
add
popa
icebp
icebp
aam
jb
in
jle
sahf
push
jne
sub
shl
stc
test
pop
in
cmp
mov
and
fcoml
cs
scas
js
pushf
mov
dec
cmc
and
leave
cmp
sbb
cmpsl
in
addl
mov
mov
ss
and
mov
cmp
sub
dec
ret
inc
push
out
test
or
xor
in
test
mov
pop
mov
fsubrp
cltd
mov
daa
mov
dec
xchg
sarb
andl
mov
aam
cmp
adc
ror
mov
pop
in
xor
jnp
mov
add
and
xor
cld
mov
ds
jl
iret
hlt
scas
add
das
stc
icebp
sbb
mov
das
in
aas
dec
adc
testb
xchg
pop
fsubl
div
cmp
movsl
movsl
cmp
add
lock
ss
fwait
idiv
mov
cmp
push
cld
pop
pushf
jg
or
inc
jmp
cli
lods
popf
xchg
or
lock
push
jb
jb
adc
fsubrs
push
dec
divb
jno
xor
nop
scas
push
jb
js
inc
adc
xor
popa
cmp
and
inc
sbb
sbb
or
dec
dec
mov
and
mov
imul
cmp
ret
testl
or
adc
aam
pushf
or
arpl
fcmovu
or
mov
xor
mov
ret
fbld
jmp
cmpsl
movsb
cli
pop
sbb
inc
mov
jo
adcb
add
push
clc
movq
jp
pop
pop
arpl
jae
inc
mov
cltd
pop
xchg
cld
in
ja
add
ds
imul
ficoms
lods
out
xorb
pop
lcall
sbb
push
sar
jo
add
sub
sti
sub
gs
xor
sti
orl
pop
pop
divb
fbstp
call
mov
imul
jmp
pop
into
inc
xchg
and
add
fwait
test
pop
insl
dec
pop
aas
fstl
xchg
pop
rcl
xchg
push
mov
adc
lock
lcall
xchg
mov
mov
ret
inc
bound
das
test
jg
or
push
sbb
mov
inc
movsb
filds
lcall
pop
or
repz
outsb
popf
insb
mov
adc
nop
or
stos
popa
push
and
lahf
enter
pop
lods
xchg
add
mov
jb
ja
inc
popf
outsb
popf
in
subb
aam
xor
pushf
mov
rcl
jle
jb
sub
adc
jne
sub
jae
push
sti
and
pop
mov
jp
sub
push
fisubrs
push
cmpsl
int3
add
flds
inc
sbb
movsl
adc
bound
jne
cmp
jno
lcall
inc
lcall
xchg
dec
add
xor
push
es
xchg
add
mov
std
sub
mov
xchg
push
xchg
repnz
pop
pop
jmp
jno
int3
pop
dec
fs
les
mov
hlt
jle
inc
mov
jo
cli
jg
xor
dec
pop
outsb
nop
js
fidivl
lret
inc
push
sub
mov
mov
or
inc
mov
lret
pop
test
fwait
sub
push
lods
in
jmp
and
mov
lods
push
mov
and
xchg
push
loop
mov
inc
imull
cmp
mov
leave
pusha
sti
call
pop
push
scas
or
jge
lods
mov
lret
push
xchg
popf
add
and
mov
adc
incb
lds
aas
data16
imul
and
xchg
xor
jo
pop
outsw
rorb
int
adc
mov
cltd
sbb
sti
fimull
ds
mov
push
mov
pop
pop
push
inc
xchg
data16
aaa
cmp
push
adc
mov
in
mov
inc
pop
lret
cmpsl
fsin
add
mov
movsb
mov
adc
dec
lds
je
lret
and
push
subb
jo
pop
dec
fdivl
shlb
mov
sub
popa
out
xor
cmpb
pop
and
jno
hlt
imul
int3
fnsave
inc
or
lods
out
jg
inc
sti
jb
or
jbe
lock
jle
lcall
jae
out
sub
cmpl
jb
mov
sub
mov
xchg
inc
mov
and
std
and
add
out
mov
jbe
xchg
xor
jge
push
dec
xchg
lock
mov
push
mov
fsubrp
mov
dec
jb
shll
add
imul
popa
fwait
adc
sbb
out
out
xchg
mov
and
repnz
and
inc
cmp
pop
push
sbb
jle
ja
fisttpll
push
icebp
jnp
pop
scas
jno
and
mov
ret
js
lds
fwait
push
aas
cmp
sub
mov
jne
jne
push
pop
cmp
push
test
mov
mov
fwait
and
sbb
sbb
and
xor
int3
xchg
push
fsubrl
jo
loop
es
es
ss
pop
jbe
adcl
faddl
test
jbe
insl
mov
push
fimull
popa
imul
mov
dec
dec
out
sub
mov
mov
test
sbb
aad
sbb
mov
aas
mov
cmpxchg
mov
jl
arpl
nop
mov
lock
fnstsw
mov
lahf
decb
jge
ljmp
xor
cmp
add
cmc
ja
mov
mov
xor
mov
push
mov
nop
out
cs
lock
lods
es
out
in
and
jae
call
lret
jne
cmpsl
call
push
loopne
stos
adc
je
es
cmp
pop
cmpsl
lahf
xchg
outsb
mov
xor
dec
sub
and
mov
dec
sbb
popa
sbb
mov
aam
jb
push
and
stos
rcl
jnp
push
pop
or
or
leave
cltd
sbb
aam
imul
fsubl
push
daa
jae
scas
mov
xchg
jp
xor
jecxz
mov
or
push
cmp
or
cmpsl
ss
add
jecxz
and
enter
mov
cli
pop
dec
pop
dec
add
or
bound
subb
push
mov
hlt
mov
jle
jo
pop
xchg
jmp
out
outsb
mov
imul
pop
jge
pop
or
imul
add
inc
inc
push
pop
jmp
icebp
lcall
nop
and
popf
into
aas
dec
cmp
lcall
cli
push
mov
repz
lods
fs
loopne
nop
jg
pop
loopne
repz
xlat
push
pop
or
xchg
cmp
std
mov
inc
shrl
aam
in
xchg
leave
lods
lret
stos
and
push
fisubl
sbb
mov
cmc
es
pop
jge
nop
jo
movsb
jb
mov
iret
fwait
dec
sub
shrb
mov
imul
push
pop
pop
shll
add
ftst
out
lods
and
mov
push
inc
jp
ss
adcb
mov
jge
add
jne
loop
lock
xchg
adc
mov
movsl
cwtl
xchg
sbb
lret
cld
xchg
movsl
xchg
sbb
jp
or
popa
push
sbb
push
out
in
popf
mov
dec
xchg
loope
scas
pop
sbb
fwait
cmp
pop
leave
ds
dec
add
push
jl
pop
dec
add
inc
fnsave
inc
sbb
cmpsb
cli
mov
xchg
je
outsl
xchg
sbb
orb
or
sti
pop
repnz
mov
sbb
or
xor
pushf
clc
ficoml
sti
xchg
jb
cmp
fstpl
lcall
sti
cmpl
jns
out
xchg
pop
dec
cmp
cmp
or
jge
sbb
cwtl
sub
dec
incb
or
stos
or
out
inc
pop
cwtl
dec
mov
xchg
xor
xor
mov
ja
and
sub
push
int3
xor
mov
mov
push
mov
sub
jo
mov
push
jecxz
rcl
adc
ds
push
je
pusha
sub
mov
fdivr
out
pop
jmp
mov
add
cmpsl
cmp
push
call
add
mov
and
ss
push
imul
mov
insb
xlat
ss
xor
add
push
jg
bound
and
and
adc
ret
mov
push
push
cmp
bound
rorb
mov
roll
add
push
or
add
jns
sbb
test
hlt
cmpb
sbb
xchg
aaa
jmp
not
das
jo
dec
jmp
out
bound
sub
cmp
sbb
adc
or
vpshufd
xchg
and
jns
call
sub
or
shll
pop
ljmp
xlat
or
pop
jl
imul
bound
dec
imul
jmp
jmp
iret
dec
loope
push
inc
stos
aam
lahf
jbe
sub
outsl
decb
inc
adc
les
lods
push
fisttpll
mov
in
jns
out
mov
scas
mov
add
inc
mov
js
xorb
dec
aas
sbb
in
ret
mov
sub
jne
dec
outsb
loope
lock
int3
pop
cltd
icebp
pop
cs
or
pop
mov
jmp
pop
mov
adc
and
add
jg
pusha
rorb
adc
icebp
add
push
out
test
push
sub
jecxz
imul
fs
lcall
xchg
idiv
gs
push
pop
pusha
pop
adc
sbb
pusha
mov
xchg
add
inc
movb
pop
out
jp
xchg
adc
sbb
jmp
jae
add
jnp
ss
sub
pop
mov
or
int
push
jae
jae
stos
cmp
fdivrs
addr16
and
push
mov
pop
sbb
add
pop
popa
mov
pop
hlt
lds
dec
repnz
mov
jbe
cmpl
pop
inc
leave
dec
movsb
pop
sub
ljmp
pop
in
adc
cmp
cmpsl
xchg
je
push
mov
fsts
das
mov
mov
insb
in
iret
cmp
pop
out
sbb
stos
push
ss
and
lret
imul
xchg
mov
rorl
push
punpcklbw
fs
add
and
enter
mov
mov
adc
pop
add
aam
aas
movsl
mov
fistl
inc
xor
into
shlb
pushf
xchg
stos
cmpsl
adc
lods
add
je
imul
aam
pop
rol
push
xlat
subb
or
jnp
push
xchg
xor
pop
mov
lret
scas
xchg
cmp
jne
sub
repz
push
shlb
fmuls
adc
mov
mov
cmpsl
sti
push
lea
in
and
sub
jecxz
jnp
lahf
movsl
jne
xchg
or
sbb
jae
sub
mov
js
jns
sar
or
pop
inc
lret
ret
dec
gs
dec
push
jo
inc
pop
test
pusha
loop
adc
adc
mov
sub
daa
sub
xor
xor
push
mov
sub
mov
and
mov
dec
test
push
das
mov
repz
je
pop
loopne
pop
cmp
jecxz
incl
out
mov
push
out
xchg
lahf
aaa
cwtl
xor
mov
mov
jp
push
inc
xchg
addb
scas
mov
pop
inc
int
add
mov
xor
fwait
repnz
cmpsl
pop
mov
and
andb
jae
add
push
jl
daa
sahf
test
push
mov
adc
rclb
nop
cs
cmpsb
cmp
pusha
add
or
out
loope
stos
adc
mov
out
jae
mov
js
mov
es
cmp
push
push
push
dec
adc
adc
mov
fcomps
sahf
mov
push
xorb
insl
add
dec
mov
sub
push
dec
push
mov
je
sbb
lds
inc
inc
xor
clc
sbb
fistl
std
jbe
std
fsubl
test
mov
adc
pop
gs
dec
add
sub
ffree
cld
cld
xchg
clc
je
or
adc
mov
loope
xchg
inc
adc
imul
push
lahf
leave
shlb
andl
shl
in
dec
mov
lods
and
popa
hlt
mov
enter
sbb
jp
iret
ss
sub
in
sbb
and
cmp
insl
dec
gs
xor
pop
pop
mov
mov
dec
dec
sub
sbb
mov
xchg
and
lds
nop
data16
xor
lods
mov
jne
mov
or
sbb
push
addr16
out
or
hlt
fnstsw
aaa
xchg
xor
cld
pop
push
test
adc
mov
fdivrs
iret
clc
sbb
ret
sub
xchg
aad
jg
popf
add
push
gs
dec
inc
in
ljmp
xor
clc
in
gs
push
ja
push
repz
int3
les
cmp
stos
lret
pushl
push
clc
outsl
add
push
mov
ret
out
push
mov
pop
mov
cld
mov
out
sar
outsl
jl
mov
icebp
pop
pusha
cmp
iret
jns
mov
lahf
and
leave
jbe
mov
sub
xchg
movaps
mov
roll
pop
xor
xor
ds
mov
dec
add
and
pop
daa
adc
jns
testb
int
pop
rcll
repnz
dec
mov
or
pop
fnsave
mov
stos
inc
ljmp
in
sub
add
push
sub
lcall
loope
cmpb
or
ror
iret
jb
pop
sbbl
and
mov
xor
aad
xchg
popf
xchg
or
scas
sbb
jecxz
sub
pop
filds
fstps
stc
stos
movsb
lea
jle
mov
cmp
cmp
mov
incl
dec
push
mov
jne
jbe
push
rcrl
add
xor
call
lods
sub
fsubr
lret
mov
add
loope
cmc
adc
add
push
lds
pusha
dec
mov
icebp
pop
ljmp
cmp
inc
and
add
jg
lret
push
mov
je
xchg
int3
xchg
pop
mov
shrl
test
jle
imul
mov
div
xchg
xchg
and
jl
jg
pop
push
pushf
stc
jae
ds
or
stos
mov
mov
and
pushf
in
lds
push
or
mov
sub
add
mov
scas
imul
and
and
and
loop
jno
and
mov
rcll
push
dec
cmp
xchg
insb
leave
loop
and
movsl
sbb
setb
dec
icebp
repnz
adc
dec
fwait
shlb
mov
sbb
jbe
jge
mov
lcall
je
add
mov
imull
inc
cs
cltd
push
sub
filds
mov
mov
sti
pop
jmp
cmpsl
jb
fs
dec
pop
nop
mov
pop
sub
cmp
mov
pop
popf
outsl
fstpl
fwait
jp
imul
sub
jmp
or
repnz
fidivl
push
push
out
inc
out
dec
repnz
movsl
gs
mov
pop
jno
test
lods
or
push
test
push
xchg
loopne
in
dec
pop
ss
daa
inc
and
stos
sbb
ds
jae
leave
push
in
add
mov
add
ficomps
xchg
push
cmp
in
sub
and
mov
aas
mov
jnp
inc
sub
insl
sarl
pop
fsubrs
inc
cwtl
mov
cs
in
add
xor
sub
mov
xchg
ret
movsb
cmp
popf
mov
lods
rep
shlb
mov
sbb
adc
mov
push
xor
imul
shr
mov
mov
jmp
aad
clc
cli
xor
aad
xchg
xchg
push
rorl
cmp
sbbl
add
dec
sbb
pop
jle
push
rorb
pop
stos
add
fnstsw
cmpsl
jmp
das
push
jecxz
pushf
adc
clc
add
jl
xchg
mov
mov
mov
inc
ja
cmp
popa
scas
mov
pop
adc
sub
fiaddl
push
int3
jp
inc
push
mov
lcall
push
stos
mov
mov
xor
or
mov
add
out
jae
mov
sub
xchg
popf
leave
or
jb
scas
inc
imul
cmp
inc
out
es
xchg
mov
cmpsl
rcll
jle
pop
inc
lods
iret
insb
dec
sub
lods
aaa
ret
jns
pop
sub
push
dec
enter
adc
test
mov
xor
mov
aad
sbb
jg
in
mov
mov
jge
inc
push
in
outsl
cmp
or
fcomps
xchg
imul
cltd
and
in
push
daa
push
xor
rclb
xchg
es
push
cld
xchg
push
and
cmp
jle
inc
or
push
mov
or
das
and
rolb
inc
xor
rclb
aas
int
inc
pushf
xchg
ljmp
dec
outsl
mov
push
mulb
daa
pusha
mov
addr16
lcall
mov
dec
mov
adc
int3
stc
sbb
dec
jno
mov
cmp
dec
int
jmp
mov
cltd
test
shll
mov
popa
insl
xchg
cmpsl
inc
outsb
dec
into
cmp
and
ds
mov
mov
add
cmp
pop
mov
int
faddl
adcl
adc
cld
test
neg
xchg
inc
adc
or
mov
xor
xchg
cwtl
xchg
cmp
inc
inc
in
shlb
cs
mov
push
dec
cmc
dec
lock
cmpsb
lods
cmc
lret
xchg
jbe
jns
ss
dec
int
lea
and
or
cmp
hlt
aam
cmp
aaa
or
sub
call
stos
xchg
xor
xchg
mov
inc
push
movsb
and
inc
cltd
cli
xor
mov
push
adc
dec
add
mov
jns
cs
shll
mov
cmpsb
mov
fisttps
push
push
call
loop
mov
jg
push
jns
dec
test
stos
or
rol
mov
lods
negl
jno
jbe
mov
es
fildll
decl
and
das
insl
dec
cli
data16
and
cmp
inc
or
outsl
iret
cltd
mov
mov
es
push
fistl
gs
imul
push
hlt
or
or
inc
cld
push
stos
cwtl
mov
xor
popa
jg
rcll
xor
insl
pop
or
cli
scas
xor
je
les
jp
lock
cmp
add
jle
das
inc
imul
or
inc
sub
fldenv
jle
ud0
inc
arpl
into
cwtl
sbb
cmpl
inc
ret
push
mov
mov
push
les
sbb
xor
ret
loope
jl
gs
and
mov
js
iret
cmp
mov
jns
les
push
bound
rol
test
pop
pop
inc
andb
cmp
add
rcrb
push
inc
pop
mov
and
cmpsl
in
push
xlat
jae
and
movsl
cs
fcoml
fbld
pop
add
shlb
insb
and
popf
jno
leave
jg
inc
arpl
cltd
mov
scas
xchg
sub
mov
outsb
and
inc
mov
sub
jb
sti
js
scas
inc
bound
outsl
mov
movsb
pcmpeqb
dec
mov
push
das
jl
xchg
rcll
adc
mov
lcall
fildl
and
cmp
pop
mov
or
or
or
ret
je
ja
push
cmp
incb
xchg
cltd
xchg
sbb
aaa
out
or
test
jns
inc
mov
push
pop
pushf
hlt
fistl
pop
pop
popa
rolb
jns
mov
xlat
mov
jnp
call
mov
insb
test
dec
inc
sub
shr
arpl
stos
xlat
ljmp
mov
jp
bound
sub
and
scas
or
ds
lahf
loopne
jg
mov
imul
pusha
cmpsl
and
adc
sub
cld
divb
jl
push
js
or
movsl
rolb
push
outsl
pop
aaa
into
pop
xchg
shll
sbb
aas
xor
mov
xchg
aad
cwtl
mov
mov
sbb
fmuls
push
add
and
inc
inc
and
sti
movsb
scas
or
rolb
xor
cwtl
mov
push
insb
or
lcall
adc
jns
cmp
test
xor
push
jbe
int
pop
outsb
in
negl
jb
ss
and
cmpsb
cmp
iret
xor
cmp
dec
stc
int3
mov
les
pop
rclb
pop
loope
dec
and
cmp
cmp
clc
pusha
out
dec
xchg
movsb
mov
xor
icebp
sub
outsl
fwait
sbbb
sbb
fisttps
gs
mov
insb
adc
xchg
lock
pop
sbb
outsl
dec
pop
dec
cmp
add
push
mov
xchg
movsl
and
add
push
or
mov
imul
lret
xchg
mov
lcall
mov
xor
push
push
mov
inc
sbb
xchg
add
jbe
or
jne
sahf
dec
mov
cwtl
or
dec
push
iret
sbb
inc
cmc
cld
jmp
xor
rorl
in
pop
repz
js
stos
sub
ds
xchg
roll
xchg
sbb
jge
arpl
int
add
out
sbb
xor
xchg
outsb
add
and
sub
pop
sub
jno
xchg
add
nop
jne
inc
and
cli
mov
or
out
inc
gs
xchg
test
mov
xor
add
mov
mov
cmp
adc
jl
es
data16
xchg
dec
jne
and
adc
bound
cmp
test
xchg
sti
add
add
or
mov
dec
push
shll
adc
or
rorb
cmp
mov
mov
ret
lahf
loop
cmp
lret
cmp
fidivl
mov
and
icebp
pop
je
outsl
xor
ds
sub
xchg
lods
xor
mov
push
loop
adc
test
cmp
jmp
push
adc
push
cmpsb
das
dec
xor
jle
xchg
add
mov
nop
stos
pop
mov
es
mov
mov
fbstp
mov
leave
add
sbb
popf
adc
mov
sbb
mov
les
sub
add
push
inc
push
imul
push
pop
pop
imul
movsb
push
inc
add
push
int3
cltd
mov
pusha
pop
stos
aam
xchg
pop
shll
add
mov
ret
in
add
xchg
jns
rorl
jge
stos
lahf
or
mov
pop
js
xchg
in
roll
int
add
rorl
sbb
push
cltd
sti
adc
int
in
mov
fsubrs
dec
outsl
jge
add
inc
shld
mov
jg
push
and
inc
sbb
addr16
pop
pop
adc
into
lods
push
test
aad
out
lea
add
imulb
xor
or
data16
jp
call
subb
mov
stos
addr16
popl
sbb
add
cmp
cmp
mov
inc
lock
scas
inc
cltd
idiv
xchg
and
jbe
jns
xchg
push
or
data16
out
repnz
cmpsl
xor
fnstsw
dec
mov
mov
cmpsb
cmp
shll
idivb
rorl
mov
and
pop
rol
mov
mov
pushf
adc
mov
or
mov
loopne,pn
into
das
add
in
in
bound
xor
out
ljmp
test
xchg
jecxz
or
and
push
push
xchg
out
stos
add
lea
sbb
mov
enter
and
int3
xor
cmpsb
sarl
push
loope
add
and
or
popf
or
sbb
and
test
inc
cmpsb
and
fistps
jb
sub
cs
pop
mov
notl
and
in
mov
inc
xor
nop
push
hlt
sub
jle
adc
or
test
bound
lods
and
push
shl
xchg
or
push
movl
pop
popa
mov
adc
pop
out
loop
stos
int
jecxz
lds
ret
jle
addr16
loop
push
arpl
in
push
mov
popf
inc
add
sub
push
sbb
insl
shlb
mov
jge
inc
pop
push
and
mov
movsb
and
lods
scas
or
jl
int3
add
fstpt
xor
dec
adc
cwtl
testl
insl
xchg
lock
pop
roll
call
mov
sub
add
pusha
xor
mov
mov
xchg
cltd
jne
incb
clc
pop
imul
clc
add
js
push
sub
push
ror
test
hlt
mov
scas
lea
aas
outsl
mov
aam
xor
pushf
xor
int3
std
mov
pop
es
sub
lea
outsl
adc
shl
pop
mov
jecxz
orl
out
icebp
sbb
icebp
repnz
pop
add
and
lea
add
imul
xchg
mov
mov
dec
inc
daa
xchg
add
in
inc
or
pop
pop
inc
data16
shrb
jl
sar
cmc
push
flds
aad
adc
or
das
lea
sbb
mov
mov
add
pop
sbbb
ja
in
insl
dec
rcll
hlt
movsl
in
jb
adc
mov
and
stos
ret
jl
push
mov
into
ljmp
add
push
test
add
icebp
mov
and
pop
mov
sahf
test
pop
popf
sub
mov
inc
xchg
mov
dec
bound
mov
lret
inc
mov
mov
cmpsb
add
clc
cmp
cmp
pop
call
push
cmp
mov
idivl
rcrb
das
push
je
repnz
in
mov
add
popf
inc
test
inc
add
shll
adc
scas
sbb
or
push
loopne
lea
inc
sbb
rorl
xor
cmc
out
cmp
pusha
pop
xchg
push
adc
pop
pop
jbe
call
push
sbbl
lahf
or
scas
sbb
jae
mov
pop
dec
aam
mov
push
sbb
loope
mov
leave
enter
push
jno
xchg
and
lret
cmp
test
inc
xor
nop
and
in
fists
sub
sbb
xor
testl
jecxz
notl
out
lods
pmaxsw
ss
das
and
dec
mov
pushf
cmp
pop
jp
mov
imul
pop
jg
lahf
shrb
cmpsl
mov
notl
sub
clc
xchg
sbb
xor
xchg
mov
stos
pop
jnp
into
aas
mov
xorb
nop
sbb
loope
inc
cld
jecxz
jg
lock
add
push
add
mov
push
pop
jae
ljmp
push
or
push
fsubl
imul
push
mov
std
adc
aad
dec
or
cli
adc
mov
inc
jge
jle
shrb
js
fwait
xlat
stos
xor
aaa
fiaddl
jae
or
xor
xchg
dec
push
sub
cld
dec
or
enter
rcl
sarb
pop
sarl
and
lret
dec
push
pop
int3
jbe
shl
outsl
insb
push
dec
mov
mov
out
test
push
clc
push
pop
xor
out
dec
imul
orb
and
push
test
shrl
cmc
jmp
adc
inc
divb
lcall
rorl
mov
jecxz
int
aad
fsts
xor
push
mov
mov
ss
loop
mov
sahf
ja
dec
test
mov
mov
movd
push
dec
in
or
cld
aad
es
into
mov
les
dec
pop
or
test
or
test
in
mov
clc
dec
test
test
xchg
mov
std
pop
fwait
jb
sbb
cs
int
fldcw
pop
jle
or
xchg
or
jnp
divl
and
mov
and
pop
mov
dec
filds
jg
fcomps
js
into
mov
movsb
aaa
hlt
popa
idivb
or
mov
lahf
cld
inc
pop
dec
push
push
push
inc
add
andb
adc
mov
nop
cmovge
lds
jg
jo
jne
add
dec
je
sub
mov
jmp
jns
sub
push
cmp
idivb
ret
loop
scas
aad
add
loopne
xlat
xchg
fcomps
imul
test
push
sti
popf
mov
pop
xlat
or
in
arpl
xor
out
in
hlt
pop
icebp
inc
repz
dec
jo
xchg
shl
and
testb
inc
lds
fstpt
fisubl
push
jb
icebp
push
aaa
in
fdivs
in
xchg
out
pop
in
mov
push
xchg
xor
xchg
pop
fs
and
clc
cmp
xchg
jmp
fldenv
add
je
xor
adc
loope
fildl
je
xor
loop
inc
sub
pop
add
sub
adc
mov
lcall
adcl
or
cmp
das
cmp
icebp
inc
push
enter
or
push
scas
lret
fistl
fidivs
je
mov
xchg
jle
test
mov
loopne
iret
mov
loope
rcll
pop
lods
mov
fwait
ja
jnp
out
mov
push
aad
mov
ficoml
insl
sbb
fistps
inc
dec
aaa
movsb
scas
les
mov
fsubrp
add
mov
inc
movsb
aam
xor
sub
cmp
xor
mov
and
pop
in
ja
rcrl
pop
jnp
or
lock
jecxz
cwtl
jecxz
into
cmpsb
mov
cmp
repz
fdivl
test
movsl
cmp
pop
mov
fsubrl
nop
mov
xchg
jns
mov
adc
and
pop
xor
shll
cltd
xchg
and
divl
sarl
push
cmp
enter
hlt
cli
inc
sbb
xor
outsb
enter
in
mov
xchg
push
scas
repnz
sub
xlat
jb
push
mov
notb
sbb
js
jmp
sbbl
mov
mov
push
mov
dec
out
dec
cmp
mov
jge
add
xor
sub
cmp
idivb
std
ds
xchg
mov
push
adc
or
out
fwait
ret
lods
lods
mov
dec
aad
sub
aas
jecxz
push
and
popa
adc
mov
shrl
fcomps
fwait
push
xchg
adcb
dec
mov
test
test
and
into
jnp
divb
scas
pop
addl
out
pop
xchg
insl
out
or
mov
or
xchg
imul
mov
mov
mov
mov
pop
lcall
and
inc
in
and
mov
push
cmp
push
aad
in
testl
stos
cmpsb
dec
push
pop
cmp
adc
inc
das
adc
cmp
imul
or
lahf
outsl
xor
sbb
cli
pop
mov
fmuls
rcll
dec
mov
gs
xchg
subb
xor
mov
pop
mov
dec
add
loopne
in
lcall
add
lret
cmpsb
pop
or
lret
outsb
popa
push
push
jmp
popf
or
enter
addr16
dec
jmp
fadds
mov
adc
mov
pop
stc
loopne
dec
inc
mov
add
jle
or
subb
pop
daa
push
push
fimull
xor
andl
dec
push
les
add
sub
xor
sbb
jb
bound
arpl
add
fisttpll
mov
je
pusha
lea
mov
lret
stos
fndisi(8087
inc
push
sbb
inc
push
xor
xor
jge
pushf
in
int3
ret
mov
aas
mov
mov
scas
jmp
clc
test
xor
jb
and
push
aad
push
push
and
fnstenv
cld
xlat
int
mov
cld
jns
push
andl
in
lret
ficompl
sahf
jns
mov
push
ljmp
fwait
pushf
sbb
sahf
pusha
xor
cli
icebp
sarl
daa
in
push
push
and
mov
add
fisttpll
pop
pusha
or
aas
adc
mov
dec
add
out
std
decl
ds
pop
cmp
and
sahf
push
mov
lcall
aad
mov
loope
xchg
jmp
add
push
adc
lret
imul
sub
dec
mov
and
mov
sbb
popf
pop
test
repnz
repz
adc
add
mov
imul
push
xchg
xchg
ss
push
arpl
icebp
pushf
lds
mov
and
adc
jp
gs
les
gs
cltd
in
mulb
jno
pop
insb
push
jecxz
rcll
call
fisttpl
lcall
sti
jbe
pop
mov
int3
inc
es
dec
std
mov
out
add
cmc
lock
nop
cmp
outsl
jb
stc
inc
sub
push
cmp
fwait
pop
in
and
cmp
bound
fdivl
cwtl
sbb
xor
or
rclb
mov
aam
scas
push
mov
sub
pop
icebp
aam
push
into
inc
popa
mov
js
xor
dec
into
jge
div
add
dec
add
arpl
push
jecxz
xchg
jnp
jno
adc
push
fdiv
pop
daa
aam
rcrb
mov
cli
in
jbe
sahf
outsb
jge
les
fildl
scas
out
add
push
add
lret
jae
cmp
push
push
pop
mov
int3
xchg
shlb
and
dec
scas
sub
push
das
jno
insl
cmp
in
cmpsb
sub
cld
push
adc
fistpll
fdivrs
lods
mov
aam
add
movsb
out
pop
cli
stc
cltd
outsb
stos
mov
lock
mov
sbb
loope
jne
mov
dec
outsl
adc
decl
mov
push
rorl
jge
cmp
in
jmp
push
inc
adc
frstor
add
xor
adc
ja
cmp
sub
push
sub
clc
sahf
and
push
lock
movsb
movsl
imul
mov
mov
xchg
inc
pop
mov
mov
adc
mov
adc
lds
test
sbb
mov
and
pop
cmp
lret
jns
jae
sbb
sti
test
mov
mov
pop
xchg
add
hlt
loope
sbb
push
insb
xor
add
dec
stos
repz
sub
ret
fsubs
mov
jne
dec
ds
mov
stos
push
jb
push
insl
adc
cmpsl
and
outsl
inc
out
adc
jmp
sbb
mov
arpl
stc
sbb
aad
pop
lea
and
xor
rcrb
out
out
andl
loop
sarl
idivl
jle
pop
std
lcall
cltd
sub
jnp
add
push
inc
arpl
sahf
mov
or
sub
adc
popa
adc
test
das
int
imull
ret
lds
bound
pop
ja
and
mov
jnp
xchg
jmp
adc
dec
mov
loope
pushl
lods
test
xor
fbstp
loop
or
clc
cltd
mov
xor
ljmp
ror
scas
test
test
xchg
sbb
jnp
dec
cmp
push
dec
mov
mov
sahf
push
lret
mov
jmp
movsl
xorl
ljmp
repnz
addr16
pusha
stos
or
mov
and
lret
dec
adc
insl
std
xor
inc
or
in
xchg
lahf
inc
xchg
add
je
lea
ljmp
cltd
inc
push
iret
push
ret
shl
push
shrb
outsb
lret
mov
adc
cmp
adc
inc
adc
inc
lea
rcl
mov
int3
or
test
mov
mov
pop
loopne
xchg
jbe
xchg
das
in
clc
cmpsb
movsb
jmp
addr16
xorb
movsb
test
insl
mov
lret
xor
jbe
dec
add
jp
fildl
or
push
test
pop
in
fidivrl
test
jnp
adc
mov
lods
and
aaa
mov
mov
stc
jl
scas
or
and
stc
jb
fbld
sbb
adc
xchg
add
push
fdivr
push
dec
inc
jb
cltd
mov
cmp
sub
sub
test
fdivs
sbb
pop
cmc
ljmp
adcb
std
mov
jl
loopne
jno
cli
sbb
aad
sbb
mov
dec
cli
test
jp
or
xor
sbb
iret
jle
scas
or
pushf
pop
push
xchg
jp
ja
add
leave
popl
iret
mov
fs
jb
xor
je
push
dec
and
and
call
dec
imul
hlt
jl
popa
outsb
mov
into
and
push
inc
pop
and
adc
jecxz
mov
ljmp
repnz
and
cld
adcl
cmp
lods
cltd
and
mov
aas
lock
push
js
mov
jle
or
inc
mov
mov
and
loope
sbb
add
adc
pop
fsubrs
scas
dec
xchg
and
lods
jne
add
mov
clc
cmp
cmp
lcall
pop
pop
jne
pop
sbb
fnstsw
test
pusha
cmp
push
loop
mov
shll
push
pop
roll
dec
popa
xor
xchg
mov
add
test
dec
sub
lock
jmp
test
sbb
sbb
inc
pop
jmp
cmp
je
test
rcl
mov
test
adc
inc
jne
adc
mov
or
lods
adc
fiadds
stos
rclb
pop
inc
adc
jbe
sahf
arpl
mov
notb
mov
xchg
popa
movsb
push
stc
ljmp
pop
lods
js
and
imul
sbb
shlb
jo
std
dec
inc
int
jg
gs
fisubs
xor
cmp
popl
sbb
incb
inc
mov
push
jg
add
int
inc
lahf
cmpb
add
scas
cmp
repnz
push
loop
push
bswap
in
sbb
inc
mov
mov
pop
xchg
mov
cltd
nop
mov
loopne
push
xorl
mov
push
mov
sahf
dec
loopne
out
inc
adc
or
imull
mov
xor
jo
pop
shll
shll
jmp
lds
xorb
cli
pop
pop
arpl
cmp
loope
bound
jmp
mov
loop
outsl
push
pop
fisubl
add
aad
and
cmpl
and
lret
shlb
pop
data16
jg
add
jbe
sahf
sub
jne
and
mov
jmp
ficoms
adc
pushf
ja
jmp
fisubs
mov
xor
pop
jle
push
dec
pusha
popf
gs
inc
ror
je
xor
gs
je
add
cmp
pcmpeqb
add
cmp
dec
inc
mov
cmpsb
xchg
sub
cmp
jmp
cmp
jno
push
lea
and
or
lcall
add
fidivrs
mov
or
pop
mov
dec
rol
in
mulb
mov
cwtl
in
mov
enter
add
cmpsb
and
cmp
push
or
cltd
push
addr16
jns
rcl
and
jbe
pop
aad
roll
mov
jp
out
push
ret
lds
xchg
mov
jns
dec
lret
popf
imul
mov
std
xchg
xlat
leave
movsb
arpl
dec
and
add
adc
scas
cmp
imull
int3
mov
clc
inc
dec
sbbb
cltd
ljmp
pop
mov
push
repz
out
pop
or
sar
out
icebp
xlat
ja
repnz
nop
mov
mov
cmp
and
stos
nop
or
sbb
pop
call
pop
jecxz
mov
test
mov
scas
rclb
int
adc
push
shr
lods
cmp
shrb
loop
sbb
jns
and
xchg
outsl
or
inc
ret
sbb
out
in
jns
pop
mov
cmc
mov
fisubs
jl
jl
cltd
cmpsb
add
lret
lcall
ss
mov
mov
push
aas
mov
pop
int
fiaddl
inc
push
add
push
mov
mov
andb
xchg
mov
add
mov
scas
fistpl
mov
cltd
dec
cmp
inc
out
outsl
adcl
je
shl
or
add
cmp
xlat
stc
das
ficomps
and
andb
add
push
push
jp
xchg
imul
addl
xor
pusha
lock
cmc
adc
dec
aam
lods
mov
ret
in
pop
and
shll
inc
cmp
icebp
or
movsb
mov
cli
cmp
sub
divb
xor
push
popa
in
pop
cld
ja
sbb
jp
arpl
cmp
push
int
insb
ret
js
mov
push
mov
dec
icebp
cli
add
push
mov
and
les
std
adc
rolb
cmpsb
xor
pop
xor
cmp
jb
push
fisttpl
cmc
pop
mov
xchg
jb
inc
adc
sti
xor
jecxz
addr16
mov
cmp
orb
fstpl
mov
jb
xor
sub
pop
ja
rcrl
les
js
iret
test
mov
jle
mov
jg
jle
mov
sbbb
popf
dec
cld
lds
stc
mov
push
enter
adc
push
outsl
lock
mov
lahf
mov
into
sbb
int3
xchg
stos
dec
out
sti
push
push
scas
fimuls
lcall
sub
pop
sbb
shll
dec
push
push
call
or
adc
rcl
stos
xchg
inc
mov
or
add
repz
push
mov
cltd
xor
test
es
scas
not
cli
rorl
subb
and
cmp
test
in
and
xchg
movsl
mov
add
push
push
js
xor
into
mov
sub
sti
fistl
jmp
scas
xor
orl
daa
lods
and
push
iret
jb
mov
sbbl
std
dec
mov
std
lods
or
clc
cmp
add
sbb
repnz
push
push
rcrl
es
inc
inc
popa
sub
xchg
ret
mov
cmpsl
iret
movsb
add
call
clc
mov
push
adc
adc
insb
push
pop
shll
sbb
dec
xor
imul
in
mov
mov
js
mov
cmpsb
push
adc
negb
in
lret
pop
es
xchg
dec
dec
dec
nop
cmp
sti
sbb
ja
shll
data16
mov
lods
mov
scas
call
mov
push
sub
jecxz
mov
sub
dec
and
push
fsubp
mov
leave
negb
jp
lret
xchg
frstor
cli
jo
mov
sahf
push
das
mov
jns
push
popf
in
lahf
dec
int3
jmp
cmp
mov
mov
in
push
and
push
adc
xor
push
and
or
shr
inc
mov
jmp
mov
seta
cwtl
xchg
arpl
mov
pop
mov
mov
rorl
push
mov
jle
das
dec
and
jb
loopne
psrld
and
inc
xor
cmp
mov
ds
rclb
outsl
in
dec
ds
adc
hlt
push
sti
fidivrs
add
xchg
sub
sub
fiaddl
mov
jnp
ljmp
pop
icebp
lcall
test
inc
orb
xor
or
loopne
in
stos
or
sbb
in
sub
xor
ja
jbe
mov
push
and
mov
mov
ss
aam
pop
rcrl
dec
pop
addl
aam
stos
ljmp
adc
sbb
xchg
xor
jmp
mov
in
out
pushf
mov
loop
jl
pushf
xchg
into
cli
fidivrl
jge
cmc
jo
mov
fwait
adc
in
loop
xlat
push
adc
mov
or
pop
leave
adc
cli
mov
pop
addr16
or
clc
adc
add
jae
cmp
or
and
or
pop
pop
jo
push
movsl
cmpsl
pop
jae
outsl
xchg
pop
or
fisttpl
and
fsubrp
push
pop
mov
cmp
insb
mov
jle
mov
ret
dec
incb
pop
pop
mov
dec
pop
stc
jle
pop
out
xlat
mov
pusha
icebp
add
mov
movsl
dec
test
mov
xchg
push
sub
pusha
insl
test
pop
stos
out
or
mov
xor
sub
clc
icebp
in
adcb
lcall
mov
add
mov
fmuls
xor
mov
adc
push
iret
stos
popa
mov
jp
je
pop
dec
mov
mov
leave
xchg
xor
fwait
jmp
pop
nop
adc
or
aad
mov
xchg
cmpsb
push
shl
rcrl
in
cmp
cli
mov
cli
jge
pop
inc
push
push
mov
adc
mov
scas
mov
test
outsb
arpl
out
movsl
sar
mov
push
push
jge
push
inc
xchg
sbb
shll
pop
mov
mov
mov
inc
cmp
out
out
adc
push
popf
int3
movsl
pop
dec
pop
lea
or
sub
fcmovnbe
dec
pop
jbe
or
insb
cmpl
clc
xor
dec
fadd
movsb
dec
push
rcll
jno
mov
add
cmpsl
mov
rcl
popf
mov
sbb
jecxz
mov
or
mov
outsb
push
pop
enter
enter
sub
aas
jmp
cmp
cmp
kandnb
sbb
add
cmp
roll
lods
enter
pop
add
mov
mov
ds
insl
dec
lods
push
orb
xchg
inc
fwait
cld
dec
and
or
mov
push
ret
sbb
pop
rolb
movsl
jecxz
xchg
cwtl
dec
mov
js
jb
pop
int
out
aad
pop
lcall
xor
rcrl
push
xchg
sbb
ss
xor
jge
addb
xchg
imul
lret
pop
inc
shrl
xchg
sub
xchg
mov
std
sti
mov
dec
lret
mov
push
cmc
xchg
mov
mov
mov
jo
aaa
push
jge
imul
repz
cmovne
imul
insb
mov
incl
or
mov
dec
int3
dec
or
sbb
sbb
loopne
sub
pushf
jmp
jg
and
jge
adc
imul
add
jmp
add
or
mov
and
and
sbb
sbb
xchg
mov
inc
push
imul
lods
xchg
ss
jl
xchg
mov
push
cmpb
movq
inc
fisttpll
jbe
in
add
cmpsl
ljmp
pop
mov
dec
aas
fidivs
jae
lea
or
jne
mov
pop
rclb
sahf
stos
adc
xor
out
bound
out
xor
dec
mov
xchg
xor
test
xor
inc
sbb
inc
adc
mov
outsb
loope
inc
cld
or
and
stos
icebp
xchg
mov
int3
xchg
enter
dec
leave
push
sbb
notb
and
jg
mov
ljmp
mov
repnz
pop
push
dec
cmp
pop
test
pop
add
fsubs
ret
sub
mov
inc
sub
adc
mov
in
shr
iret
xor
iret
add
or
popf
icebp
or
and
mov
and
jae
mov
mov
pop
cmpl
out
and
jbe
dec
lds
out
xchg
cmp
and
insl
mov
out
or
lret
enter
imul
fistpl
dec
cmp
pop
js
push
pop
ror
mov
or
out
mov
rorb
dec
stos
lock
test
dec
push
lds
pushf
sti
das
rcrl
in
js
ss
or
movsl
xor
out
add
ss
idivb
imul
ret
or
mov
js
mov
push
xor
push
mov
jg,pt
fstl
sub
dec
cmc
sub
adc
rcl
int3
pop
sbb
xor
dec
leave
icebp
add
repz
test
mov
push
aas
jg
or
xchg
mov
lods
mov
mov
out
movsb
cmp
ret
xor
add
pop
pop
ja
out
xor
popf
stos
shl
mov
inc
fwait
into
jl
jbe
pop
loop
push
push
test
mov
mov
je
aaa
js
mov
sub
pop
mov
les
lods
movl
mov
out
inc
xchg
andl
add
rol
xor
ret
shlb
loope
sub
rcll
fdivl
sbbb
cmc
insb
and
pop
push
fidivs
int3
dec
pop
push
sbb
shrl
lods
mov
cmc
push
push
fdivs
es
inc
mov
mov
inc
in
sar
fdivs
mov
orl
pop
xchg
shlb
cli
lret
push
mov
inc
dec
js
call
pop
arpl
stos
ss
mov
lret
mov
shll
int3
cmp
adc
lods
mov
sbb
adc
pop
inc
and
lock
scas
dec
adc
ds
sbb
shll
lea
jl
mov
ja
pop
aas
jno
int
sub
dec
inc
outsl
sbb
leave
jo
sbb
push
cmp
roll
cli
movsb
mov
sbb
adc
rcll
in
and
enter
aam
in
rcrl
inc
pop
fwait
add
aam
inc
inc
xchg
jb
push
mov
dec
dec
mov
mov
and
out
in
aad
das
leave
push
jl
lods
push
push
or
scas
scas
xchg
push
cld
repnz
push
or
mov
mov
adc
pop
jne
outsl
ror
xchg
jmp
add
cmp
jno
jbe
fdivrl
in
mov
mov
dec
jg
repz
sub
mov
lds
cli
lock
sub
adc
jg,pn
outsl
xchg
jb
aaa
mov
cmpl
sti
scas
std
jae
push
hlt
sub
mov
data16
mov
xor
pop
iret
stc
pushf
push
mov
fstps
jmp
dec
mov
jae
mov
pop
daa
jns
xlat
xchg
pop
inc
out
sbb
pop
inc
es
jg
jne
add
pop
mov
adc
or
mov
sbb
mov
clc
testl
sub
sarl
pop
adc
sub
mov
cmpsb
mov
and
ljmp
mov
mov
ja
pop
test
ret
ret
rol
hlt
jp
push
pop
add
jle
add
sub
inc
mov
mov
mov
lods
cmp
lods
cmp
dec
enter
pop
ret
xchg
es
adc
mov
dec
cli
in
aam
pop
dec
xor
push
jl
fcoms
lock
mov
fldenv
sub
inc
dec
jge
cmp
loope
cmp
inc
lds
loope
xchg
sti
rcrb
add
outsl
and
push
jns
lods
add
or
out
pop
sbb
std
gs
lods
iret
cmp
je
inc
in
in
repz
and
negb
push
cmpsl
jl
ljmp
inc
xor
pop
xor
icebp
sti
xchg
sbb
ja
add
pop
outsb
dec
lea
add
test
pushf
cld
pop
pop
mov
mov
test
xchg
lods
add
cmp
lret
movsl
adc
rcll
btsl
jo
cmp
cmpsb
int3
cli
sub
loopne
sub
cmpsl
test
xor
xor
adc
adc
and
stc
jbe
or
nop
in
frstor
and
pusha
sub
addr16
outsb
dec
inc
inc
arpl
mov
lahf
push
sahf
bound
out
add
pop
dec
dec
loopne
xchg
push
sub
in
mov
add
adc
sub
add
jl
jo
mov
enter
cld
and
jmp
sar
dec
ss
push
xor
sbb
in
pop
hlt
insb
add
push
sub
filds
sbbl
movsl
fcompl
pop
mov
imul
jp
ret
bnd
sti
cmc
jns
add
dec
dec
test
mov
add
sbb
mov
adc
sbb
andl
push
mov
push
sub
pop
js
or
sub
daa
jmp
popf
sbb
mov
icebp
lock
dec
or
aad
loopne
cmp
jbe
insl
dec
mov
push
mov
pop
popf
add
mov
jp
jb
loopne
xchg
sub
mov
jbe
sbb
add
fstpt
inc
cmp
cli
in
push
push
pop
xchg
leave
push
inc
outsl
leave
jle
stc
dec
dec
mulb
rcll
sub
leave
leave
cmc
sti
lock
cmp
cmp
shrl
mov
js
cmc
imul
adc
stos
jo
daa
stos
scas
push
xchg
push
add
ss
dec
orb
xor
pop
cs
mov
out
sbb
addw
les
leave
rorb
js
testb
sbb
mov
cli
aam
cmp
into
push
add
adc
and
jae
insl
bound
sbb
dec
call
add
fisttpll
sub
es
in
fdivl
or
or
sub
pop
repnz
cs
cs
mov
or
inc
mov
inc
ficomps
sbb
lods
imul
inc
aam
fs
mov
xor
add
dec
inc
xor
and
scas
out
sub
outsl
pop
pop
sti
mov
mov
adc
push
pop
cmp
daa
push
jecxz
jo
jge
pushl
push
ret
nop
jg
cmp
jecxz
test
xor
cmc
inc
das
and
or
jb
arpl
lods
and
lea
int3
xor
fldenv
inc
dec
dec
lea
into
pop
hlt
dec
sbb
daa
sbb
shr
bound
jle
xchg
sti
pushf
cmp
outsb
jp
es
mov
ss
lods
pop
fdivrs
mov
and
enter
sbb
loop
je
pushf
or
cmpsb
cmp
sbb
pop
jns
or
je
and
ljmp
aas
jns
pop
adc
dec
cmpb
dec
cmp
stos
jns
pusha
add
push
cmpsl
test
int
scas
jb
dec
mov
fstpt
ljmp
js
cmp
test
mov
insb
xchg
push
imul
sbb
in
mov
jl
xchg
adc
lock
lods
adc
sbb
lret
testl
inc
bound
nop
adc
adc
mov
mov
xor
lods
cli
das
jnp
stos
pop
iret
in
lret
aas
add
push
xchg
add
sub
xor
cwtl
push
mov
roll
mov
mov
add
add
fidivrs
call
loop
inc
std
loope
in
mov
ret
jns
sahf
test
push
jge
mov
sbb
sub
jmp
fwait
push
xlat
add
push
xchg
in
sbb
cmpb
sahf
push
xor
cmp
mov
popf
icebp
out
jae
push
lock
in
iret
lahf
cmovs
in
push
js
pop
dec
inc
nop
cmp
adc
in
xor
pop
mov
push
cmp
cmp
push
pop
push
xorb
cmp
jp
push
pop
mov
and
dec
xchg
daa
lahf
jno
push
add
sub
cmp
xchg
mov
pop
jp
in
lods
and
addr16
lds
pop
bound
jb
popa
sub
cltd
mov
bound
push
mov
repz
push
sbb
in
and
cmpsl
or
xlat
ret
cmp
jp
push
mov
or
mov
xor
jno
xchg
push
popf
mov
lods
push
xor
mov
movsb
xchg
imul
mov
ljmp
lods
std
lds
es
xchg
push
scas
jecxz
cmpsb
jne
mov
jle
shll
cmp
aaa
movb
mov
fucomp
push
or
sub
xchg
arpl
out
jg
mov
sub
stos
lret
and
popf
mov
jge
and
cmc
sti
push
ss
cmp
add
push
mov
movsl
push
adc
or
cmp
cmc
lahf
xchg
leave
xchg
or
mov
iret
popf
movb
stos
aaa
sbb
ljmp
cmpsl
repnz
xor
es
sub
xlat
popf
clc
xchg
push
mov
subb
negb
push
mov
fwait
aas
jne
add
addr16
frstor
mov
les
inc
xor
int
cmc
cmovge
jle
fsubr
fdivrl
push
cmp
jbe
push
add
mov
sbb
dec
jl
mov
jecxz
adc
push
stc
adc
int
ljmp
mov
xor
std
xor
sbb
clc
hlt
sti
xor
jl
adc
xor
pop
sub
inc
xchg
xor
dec
je
inc
sahf
fcomps
test
mov
je
xchg
jge
stc
lret
inc
or
stos
sbb
shrb
clc
gs
mov
pop
mov
mov
inc
das
push
sub
xchg
das
jno
insl
fisttpll
stos
add
shlb
mov
inc
and
iret
sbb
inc
pusha
sbb
push
push
js
repnz
add
in
cli
ja
mov
dec
pop
sahf
mov
xchg
lcall
adc
bound
push
cmp
scas
pop
divl
and
inc
and
les
jbe
xchg
lret
xchg
cmpsl
dec
lea
sub
mov
leave
xchg
mov
movsb
daa
aas
adc
sarl
in
repnz
sbb
cli
clc
loop
pop
jle
add
daa
xchg
jge
mov
jns
gs
jle
ficomps
clc
sub
test
sbb
bound
aam
adc
das
sbb
mov
aad
cmpsl
jge
or
mov
mov
lods
mov
movsb
jl
sbb
xchg
cmpsw
sub
mov
pop
adc
adc
xchg
push
in
xor
xor
clc
mov
jp
movsb
pop
lea
leave
push
xor
je
fsts
fimuls
popf
cmpsl
mov
orl
sbb
inc
out
dec
xor
cmp
gs
sbb
inc
nop
subl
mov
sbb
fld
andb
orb
lock
es
call
adc
ret
xchg
neg
test
pop
dec
mov
pop
stos
jbe
dec
push
xchg
addr16
sbb
jae
jbe
add
mov
lods
fs
xchg
pop
jl
arpl
dec
loop
movsl
fsts
fwait
or
hlt
out
xlat
xor
test
enter
outsl
sbb
xadd
into
add
mov
daa
je
orl
dec
insb
test
sbb
cmp
jmp
cmc
xchg
in
pop
clc
arpl
push
rcll
inc
sub
je
jle
ss
in
lcall
and
inc
lods
iret
pop
and
add
and
ss
adc
xor
and
jg
sbb
and
mov
iret
cs
jge
sub
fsub
mov
push
mov
jl
ret
sub
lea
add
adc
sub
xor
jnp
aaa
or
cmp
xor
loopne
inc
dec
imul
sub
ss
adc
mov
xlat
sbb
xchg
icebp
aas
dec
xchg
inc
pop
pop
push
push
aaa
and
inc
mov
sub
sarl
jns
popf
ret
mov
xchg
mov
xlat
pop
gs
xchg
jle
test
add
aas
clc
push
push
js
nop
repz
adc
imul
loop
outsl
in
xlat
cmpsl
movsb
mov
orb
hlt
je
sbb
cmp
jbe
mov
outsl
xor
idivb
dec
adc
mov
cmp
sub
sub
cwtl
lret
xchg
push
test
jns
fists
fstl
imulb
cmp
nop
inc
sti
inc
add
hlt
jge
cmp
cltd
mov
mov
daa
inc
enter
pop
movsl
and
jp
jmp
insb
xor
and
mov
ja
add
and
sbb
ja
dec
cmpsl
popa
and
fwait
iret
arpl
cmpl
or
push
popa
cltd
xor
pop
jae
ror
xchg
repz
dec
inc
sub
push
lahf
fs
inc
jbe
adc
or
out
andl
mov
mov
leave
or
jp
testb
in
addl
nop
jae
leave
sbb
jo
rcr
aas
addl
in
popf
iret
rcl
or
sarl
rclb
xchg
mov
repz
loop
jnp
lods
mov
enter
cltd
iret
outsb
andl
push
or
aaa
pop
sbb
push
push
arpl
jge
and
xor
mov
mov
add
mov
sub
sbb
dec
push
addr16
das
jnp
dec
dec
jp
cmc
sbb
mov
dec
pop
in
mov
mov
cli
pop
mov
xor
es
in
push
or
cmp
sub
mov
enter
dec
lahf
cmp
or
ljmp
iret
cmpsl
popa
jns
inc
cli
movsb
push
scas
imul
sub
gs
clc
cmp
ret
pop
cmp
mov
adc
cmp
nop
pop
sarl
jo
fadds
mov
dec
hlt
inc
cld
mov
and
add
mov
lahf
dec
loopne
mov
in
das
pop
popf
in
test
push
cmp
push
movsb
loopne
sub
lret
bound
xchg
lret
sbb
insb
pushf
lret
mov
inc
adcb
pop
inc
mov
es
xor
cli
repnz
sub
insl
or
popf
xchg
iret
cmpsl
adc
out
int
push
insl
add
rcl
xchg
pop
inc
xlat
je
or
jp
pop
test
push
cmp
sbb
pop
push
enter
mov
jb
mov
adc
inc
mov
push
data16
cmp
dec
jns
push
call
xchg
push
cmp
mov
adc
ficompl
adc
aas
into
fistps
test
or
repnz
pop
lds
push
push
outsb
fsubs
cmp
add
push
sbb
ljmp
mov
cmp
cmpsb
inc
fisubl
es
push
test
add
jge
mov
mov
push
xor
popf
inc
adc
cmp
sub
rcr
pop
ljmp
or
test
add
test
inc
imul
imul
enter
mov
cmp
jl
xchg
mov
mov
pop
xchg
dec
je
cmp
add
jp
push
mov
mov
push
stos
xchg
xchg
test
in
push
push
jns
mov
fisttpl
push
data16
pop
imul
pop
sub
ret
popa
add
inc
mov
mov
mov
lds
das
lea
mov
ret
sbb
mov
add
out
idivb
clc
dec
jbe
xchg
cmp
sub
fwait
lret
push
cld
xor
jmp
push
inc
mov
rorb
adc
loop
or
xchg
cmp
jae
movsb
dec
std
bound
xor
jl
cmpb
imul
adc
pushf
outsl
jne
pusha
enter
xor
add
cmp
aas
or
or
or
pusha
jbe
push
ficompl
das
nop
pop
mov
sbb
and
xlat
mov
clc
cmp
lock
cmp
dec
pop
xchg
add
loop
fld
jl
mov
sub
pop
jmp
cmpsb
jg
leave
clc
stos
xchg
sbb
fwait
jmp
fxch
jmp
jge
mov
pop
jo
imul
inc
adc
push
xchg
push
leave
mov
or
in
dec
sub
xchg
sbb
and
push
push
fidivrl
flds
fwait
dec
stos
cld
add
cli
pusha
mov
xorb
jmp
cmp
jbe
xchg
adc
movsl
and
push
lret
or
and
and
jmp
iret
push
cmp
adc
ljmp
xor
sbb
out
or
inc
repz
int
adc
jge
adc
inc
cli
xchg
cmpsl
lahf
sbb
sti
lods
imul
cmp
push
jg
sub
adc
push
int
rolb
jp
or
je
ror
xlat
sub
mov
push
stos
lret
add
cs
jnp
push
adcl
mov
mov
or
loop
xor
test
cmp
jae
xor
out
test
loop
pushf
jecxz
adc
ljmp
mov
jmp
ror
mulps
jo
test
jmp
stos
rcr
fisubrl
cmp
sarb
sbb
push
sub
test
mov
mov
scas
cmpsl
aam
sbb
xlat
mov
insb
inc
lret
mull
pop
cmc
icebp
fs
movsl
or
dec
mov
into
xchg
in
repnz
je
insl
jae
sahf
and
sub
test
adc
fldenv
cmp
add
cli
jne
jbe
inc
pusha
stos
and
scas
sub
xorb
pop
pusha
cmpsl
push
mov
push
jne
mov
popf
xor
adc
push
stos
ret
and
inc
mov
adc
das
in
lret
in
int
iret
pop
cmpsl
cmc
xchg
sti
pushf
mov
mov
cmpsb
sbb
or
fdivrl
inc
outsl
out
sub
xor
pop
push
mov
jae
scas
xchg
push
scas
push
xchg
leave
es
shrb
lods
popf
inc
in
sbb
adc
jmp
aaa
in
inc
pop
insl
mov
leave
mov
jmp
popf
dec
push
cmp
xchg
mull
lds
xchg
sbb
dec
mov
sub
shr
adc
and
mov
aas
movsl
jns
jmp
lods
sahf
clc
mov
sti
jns
xchg
jle
jo
int
pop
popa
adcl
inc
add
movsl
andb
pusha
fiaddl
mov
cmp
mov
cld
pop
inc
mov
xchg
lahf
or
addr16
stos
adc
inc
cmp
out
jecxz
into
mov
jg
push
ret
call
imul
jae
adcl
inc
call
push
dec
xchg
notb
cmp
sti
pop
jo
cmp
cmp
xchg
push
fwait
or
push
push
imul
jmp
sbb
xchg
cmp
mov
pop
xchg
int
mov
in
negb
mov
adc
cli
ret
fsubrl
sahf
cmp
das
jg
xchg
loope
add
pop
sbb
test
mov
shrl
mov
dec
pop
repnz
lods
call
js
xlat
or
dec
mov
sub
cld
cmc
xor
inc
xor
mov
adc
xor
andl
xlat
cld
popa
outsb
fwait
jo
das
mul
pushf
xchg
pop
xor
jl
jp
inc
push
or
popf
pop
dec
bound
pop
sbbl
xlat
pop
insl
sub
adc
loopne
ret
push
js
addl
push
call
ds
loop
ret
xchg
mov
imul
adc
aam
push
fwait
adc
inc
pushf
out
cli
xlat
ret
push
int3
xchg
push
and
sub
add
pop
sbb
jbe
rcll
inc
mov
xor
add
mov
pop
xor
sbb
cmp
adc
fisttpll
inc
xchg
test
loopne
and
daa
and
test
xor
and
mov
add
cmc
cmp
ret
xchg
and
mov
movsb
jbe
pushf
lods
inc
repz
cmc
ljmp
outsb
and
push
add
out
sti
shl
sbb
pop
insl
jl
mov
popf
cmp
ljmp
in
mov
imul
dec
ret
shrb
inc
inc
stos
inc
xchg
pop
js
adc
pop
aad
xchg
jmp
mov
mov
cwtl
stos
in
rorl
faddl
cmc
mov
mov
pop
inc
loop
stos
jo
aam
insb
jno
pusha
dec
xchg
cltd
jmp
cmp
jg
ja,pt
in
and
dec
arpl
dec
sbb
shlb
sub
stc
add
sbb
mov
or
push
sbb
icebp
js
mov
jmp
movsl
int
xlat
xor
test
xor
mov
gs
push
mov
data16
shlb
pop
and
je
mov
in
jnp
sub
and
ja
fs
or
dec
clc
lcall
cmp
jo
mov
pop
mov
lods
cmpsl
mov
repnz
cmp
movsb
pop
rorl
int
lahf
jmp
stos
jecxz
in
jge
imul
adc
push
mov
mov
dec
mov
pop
lock
mov
les
sub
sbb
jno
mov
mov
fs
fidivrs
xchg
push
lcall
loop
sarl
cmp
sub
pop
leave
mov
xor
pop
iret
hlt
sbb
jno
jp
push
push
hlt
pop
ffreep
xchg
and
sbb
in
jns
jns
xchg
adc
dec
cmp
pop
pop
stos
or
fdivs
push
stc
mov
dec
insl
aad
mov
jne
mov
pop
xchg
sbb
fistpll
xchg
iret
pop
sub
and
inc
adc
or
xchg
add
leave
mov
fadd
jge
inc
xchg
add
sub
push
nop
sbbl
mov
outsb
sbb
and
je
cmpsb
mov
out
fcomps
mov
aad
and
loope
dec
incb
insl
mov
dec
adc
enter
xchg
mov
jne
divl
leave
lock
dec
cmp
pushf
and
inc
push
mov
movsl
add
push
imul
mov
sub
lods
out
dec
push
cwtl
push
xlat
jns
loopne
scas
pop
jns
hlt
inc
in
pop
stc
pop
cmp
aaa
ljmp
sti
add
sub
lahf
sub
int
in
pusha
scas
mov
cmpl
js
loopne
xor
loopne
repz
dec
insl
jl
pop
mov
testb
sbb
push
add
mov
stos
pop
loopne
lock
hlt
inc
pop
loop
incb
mov
push
pop
jle
addr16
out
inc
mov
insb
fisubrl
in
and
xchg
insl
outsl
stc
rorb
pop
popf
add
mov
mov
std
cmp
cmpsl
jmp
cmp
xchg
in
in
adc
dec
repnz
push
inc
cmp
mov
dec
fnsave
push
das
pop
outsb
or
jg
pop
addr16
mov
gs
pop
and
mov
shl
fstpl
push
mov
mov
ss
jle,pt
aad
add
pop
roll
insb
je
cmpsl
cmp
mov
push
mov
arpl
dec
clc
ja
jp
jecxz
or
rcrb
pop
dec
movsl
sbb
repz
push
ds
jo
pop
lret
mov
sti
push
cmc
rclb
push
in
sub
push
push
sub
out
xlat
imul
pusha
cltd
sbb
and
mov
aas
pop
stc
les
movsb
outsb
jbe
sbb
jp
fwait
loopne
movb
mov
inc
imulb
rcr
inc
dec
leave
mov
adc
je
jg
icebp
pop
std
sub
or
sbb
and
cmpsb
pop
pop
adc
sbb
mull
sub
push
cltd
es
inc
cmpsb
imul
cltd
ja
incb
mov
xorb
sub
out
mov
fwait
pop
mov
inc
hlt
test
daa
inc
inc
sarl
add
mov
imul
mov
push
cmpsb
pop
add
sub
lahf
and
pop
daa
loope
dec
push
xor
add
std
adc
lret
test
mov
insb
lret
fwait
or
cmp
lahf
ja
push
dec
adc
xchg
enter
pop
movups
mov
mov
mov
push
loopne
and
mov
push
divb
mov
shlb
cld
ret
cmp
cmp
xchg
sbbb
mov
push
xor
in
xchg
or
sbb
jnp
cs
add
adc
mov
addr16
and
dec
xchg
xor
pop
xchg
or
jne
cltd
pop
sub
and
cmpsl
jmp
xchg
inc
inc
adc
mov
int
insb
push
lods
scas
test
std
cmp
mov
cmp
jb
lahf
adc
mov
aas
sti
jmp
popf
adc
mov
rolb
insl
test
cwtl
test
pusha
sbb
cwtl
or
andl
xor
aam
jns
je
ja
mov
pusha
inc
lret
dec
push
out
pushf
lahf
add
aaa
popf
aam
adc
dec
dec
add
fsts
adc
push
cmc
in
fwait
push
xchg
inc
mov
add
push
mov
into
cmc
xor
mov
mov
clc
push
loopne
mov
outsb
cli
bound
add
sbb
xchg
jle
pop
push
jb
push
out
push
push
mov
mov
aas
inc
dec
fbstp
lods
push
mov
bnd
jl
inc
adc
xchg
and
adc
sbb
lds
lcall
loop
js
arpl
jp
push
mov
dec
fs
out
jecxz
hlt
push
fisttpl
push
paddw
in
lods
xchg
fisubs
ja
mov
sbbl
cmp
jb
inc
mov
filds
mov
rclb
cld
adc
mov
mov
js
movsb
in
add
cmpsl
sub
push
jge
adc
call
dec
fimuls
cli
into
pusha
mov
xchg
roll
mov
mov
cmc
fnstcw
lcall
call
nop
fwait
mov
jmp
sbb
pop
mov
sub
addr16
mov
mov
sbb
or
repz
sbb
lret
cmp
mov
jbe
test
pop
movsb
cmp
stos
inc
jl
push
test
loop
mov
das
ret
out
cltd
or
mov
out
stc
clc
out
dec
aam
or
push
sbb
sub
jb
mov
in
push
adc
repz
adc
fwait
jno
fistpl
lock
pop
aas
jnp
aad
jl
jle
mov
dec
push
jg
shll
cmpsl
mov
cmp
mov
xor
negl
xorb
sahf
pop
sbb
pop
mov
cmpsb
adc
inc
out
mov
mov
xlat
lret
xlat
inc
mov
in
sar
mov
int
mov
jmp
stc
ljmp
and
out
mov
cmp
push
pop
lahf
dec
jg
mov
xor
cmp
adc
aas
lock
xor
outsb
mov
psrlw
mov
hlt
jno
mov
stos
mov
adc
scas
mov
or
or
push
aas
add
arpl
fisubrl
jae
mov
lods
out
sub
mov
xor
xor
add
jo
arpl
cli
fistps
cmp
push
xor
dec
fisttpl
mov
cmpsb
mov
fs
out
xor
push
sub
and
xchg
sub
xchg
call
cmp
dec
jne
rclb
adc
inc
xchg
xor
xchg
lea
and
mov
lcall
mov
in
sbb
nop
insb
adc
in
call
sbb
mov
dec
push
hlt
rcll
lods
push
cmp
flds
mov
or
ret
loop
push
jecxz
cld
jnp
jns
jo
addl
xor
ds
sbbb
jmp
jns
aaa
push
jae
pop
adc
lcall
cmp
adc
loopne
inc
int
mov
dec
test
mov
pop
ljmp
xchg
pusha
mov
and
push
in
aad
xor
lea
mov
add
inc
add
mov
fsubs
add
jmp
cmpsl
lcall
adc
popf
outsb
mov
std
adc
lcall
imul
mov
and
mov
aaa
xor
and
dec
dec
add
gs
out
rcl
adc
jecxz
sti
mov
outsl
rcl
cmp
int3
mov
fbld
push
out
cmpsl
xor
push
mov
sub
movsb
inc
movsbl
sub
cs
imul
sahf
mov
sbb
aam
adc
in
pushf
push
jecxz
or
and
mov
icebp
loope
mov
xchg
or
in
mov
xchg
lods
addb
into
orps
mov
sbb
and
imul
test
mov
lds
and
cld
mov
roll
jp
call
cs
mov
adc
in
out
in
stos
inc
into
outsl
or
push
add
cmp
jne
and
dec
loope
mov
stos
psllw
jmp
or
aas
xchg
loope
mov
std
fmuls
jl
jne
jae
into
sub
lret
sub
and
jecxz
mov
divb
test
mov
ret
or
enter
push
push
fcmovnbe
add
mov
pusha
jg
movsl
mov
mov
outsb
or
outsl
dec
orl
test
mov
mov
rcll
ss
lea
aam
jbe
push
jp
mov
or
adc
pop
daa
add
mov
in
xor
arpl
mov
cmpl
jge
add
cld
jle
arpl
jmp
mov
lcall
mov
aam
xchg
or
cmp
sub
xor
xchg
pop
jecxz
dec
xorb
add
fnsave
sub
insl
xor
unpckhps
popa
mov
arpl
xchg
pusha
outsb
lea
cmp
xchg
iret
jb
push
ss
jns
lds
mov
lahf
mov
icebp
lret
mov
cmp
mov
sub
sbb
push
movsb
xchg
in
jecxz
push
cmpsl
fxam
and
imul
adc
rcr
test
add
ds
lcall
sub
mov
out
dec
ds
lods
out
iret
add
mov
movq
arpl
mov
push
in
push
xchg
xor
mov
cwtl
cmp
insb
and
adc
pop
push
sbbl
lds
jns
insb
pop
and
faddp
cmc
sub
out
test
xchg
pop
push
cmp
jbe
stc
xor
ret
and
int3
pop
cmp
pop
push
jo
mov
jle
or
sub
cmc
mov
ja
mov
test
push
cmpsl
pushl
ss
lfs
scas
add
jns
xchg
aad
les
cmc
push
dec
or
or
mov
mov
cmpsl
jno
add
cmp
and
aam
add
scas
movsb
sbb
int3
inc
jne
lahf
xchg
jnp
xchg
daa
sbb
jbe
filds
in
lret
fnstsw
pop
mov
jno
dec
xor
mov
inc
fbld
push
dec
movl
mov
out
pop
add
cli
pushf
add
filds
jp
jb
shlb
xor
xlat
pop
jne
xchg
ss
push
sub
and
xor
jp
inc
out
add
aas
add
in
jmp
xchg
popf
stos
std
jbe
sar
mov
ficompl
sbb
fistl
sbb
jae
mov
pop
out
adc
mov
mov
cmp
in
cs
dec
xchg
and
js
mov
cli
dec
inc
dec
mov
cmpsl
addr16
arpl
and
int3
xchg
in
xchg
ret
je
jecxz
std
mov
mov
into
add
std
sti
scas
aad
pop
jae
pop
pop
add
push
jmp
inc
cmp
add
sbb
arpl
xor
stos
mov
repz
dec
push
mov
movsl
pop
ficoml
and
push
jne
xor
jmp
shll
add
add
popa
dec
add
lahf
aam
cwtl
insb
xchg
sub
cmc
xchg
push
cmpsb
xchg
mov
fucomp
bound
xchg
cli
cli
mov
jp
cmpsb
ret
fisttps
adc
sahf
out
adc
idiv
add
call
push
sbb
rclb
outsb
add
dec
insl
insl
and
ret
jp
fsts
repz
ret
icebp
decb
push
xchg
dec
mov
insb
sub
fdivl
adc
adc
daa
mov
or
xlat
aaa
iret
rclb
xchg
in
lea
mov
lock
addr16
mov
jae
pop
push
mov
push
push
mov
popf
or
orb
test
pushf
sbb
xor
popf
pop
lods
cmp
scas
and
dec
in
mov
inc
push
fwait
cs
hlt
jnp
inc
sbb
mov
stos
push
push
imul
repnz
dec
sti
dec
lods
adc
ficoms
dec
outsl
jge
sbb
ret
in
sti
test
cmc
test
mov
ret
pop
in
cmp
cmp
mov
inc
es
jecxz
inc
cmc
push
mov
shlb
xor
cld
xchg
sbb
jl
roll
test
mov
or
stc
pop
incl
inc
pushf
out
add
mov
inc
mov
dec
stc
orb
out
pop
cli
mov
sbb
add
pop
bound
aam
ret
mov
das
pop
sbb
sbb
das
xadd
test
pop
aas
stos
push
test
mov
mov
mov
cs
cltd
fdivrs
iret
sub
and
imul
push
push
daa
into
sti
pop
in
popa
je
mov
pop
xchg
pop
sbb
iret
ss
mov
mov
dec
fmull
mov
add
lcall
bound
or
jl
sbb
mov
aam
mov
std
sbb
xor
pop
ss
bound
test
cltd
fsubs
lock
inc
push
mov
ja
out
jp
xorl
inc
or
loope
mov
stos
loop
adc
mov
lds
je
xchg
prefetch
mov
ljmp
inc
div
or
out
or
lods
insb
sbbb
cmp
in
scas
aas
movsb
cmp
pushf
mov
dec
dec
add
jg
jnp
cmp
mov
repz
addr16
cmpsl
aaa
mov
repz
imul
lret
add
inc
cmp
mov
jno
lock
gs
jnp
cs
movsl
dec
repnz
mov
ret
push
lods
and
xchg
xchg
fstpl
pop
je
jge
fisubl
dec
push
push
gs
add
rcrl
or
hlt
and
jecxz
lods
pushf
add
rcl
push
aaa
js
xchg
mov
jge
mov
xor
cmp
mov
mov
out
add
lds
imulb
fiadds
lcall
ret
hlt
subl
shl
jecxz
jae
mov
stc
test
fs
pop
mov
xlat
clc
mov
pop
ja
jne
add
xor
sub
push
mov
addr16
mov
scas
adc
inc
jecxz
sbb
mov
cmpsl
cmc
mov
test
test
test
sbb
mov
dec
stos
sbb
sub
pop
je
mov
mov
mov
rorl
imul
sbb
sbb
push
jmp
jne
lcall
inc
xchg
cwtl
sbb
incl
or
push
xor
inc
lods
cltd
or
jb
cmp
lcall
rcr
adc
out
ds
jns
jmp
leave
jnp
push
arpl
dec
add
es
bound
dec
push
lds
jecxz
cli
sub
add
out
inc
clc
in
lods
in
test
pop
in
stc
adc
imul
test
out
mov
leave
mov
das
adc
loop
jo
leave
jmp
mov
mov
pop
fcomps
movsb
add
or
aas
mov
lcall
dec
jle
repnz
add
push
mov
mov
movsb
sbbb
mov
xchg
xchg
push
cltd
jb
dec
outsl
cmpsb
sub
mov
xor
mov
mov
outsl
loop
pushf
pop
add
push
push
imul
sbb
mov
int3
push
push
out
add
xor
mov
dec
sbb
jnp
jl
pop
inc
jno
sbb
sub
cld
mov
lahf
mov
and
dec
push
rcr
movsb
mov
je
outsl
movsb
addr16
add
sbb
push
es
rcrb
out
xchg
lods
cmp
push
lret
pop
inc
mov
int
loopne
push
ret
sbb
mov
add
dec
ss
aaa
or
movsb
inc
in
shrb
cmp
sti
fadds
pop
add
iret
jmp
and
xlat
lcall
xlat
mov
aam
lcall
pop
fwait
test
sar
int3
in
mov
mov
xor
sbb
jae
inc
pop
jae
jbe
test
fidivrs
pop
push
push
pusha
lahf
sbb
mov
xor
test
add
sahf
inc
mov
mov
inc
xor
inc
mov
notb
mov
int
call
xchg
mov
cmp
mov
iret
inc
outsb
stos
cmpsl
sub
fldcw
es
mov
pop
xor
push
inc
lahf
jp
pop
out
pop
sbb
daa
ret
push
sbb
ja
xor
int3
pop
in
dec
sbb
sub
xchg
inc
cmp
std
enter
loope
into
cmpb
popf
sbb
adc
enter
mov
in
movsl
pop
push
add
or
sub
rcrl
sub
inc
shll
jae
or
mov
shr
xchg
push
andl
dec
loopne
rolb
cwtl
push
out
shr
jp
movsl
test
jg
inc
xchg
arpl
dec
daa
mulb
mov
popf
jl
shrb
je
aaa
inc
inc
in
lods
xchg
mov
jl
stc
inc
pop
mov
xchg
fwait
mov
xlat
push
xor
subl
dec
push
fwait
add
pop
cmp
mov
xor
hlt
out
jb
fs
push
aas
jbe
adc
das
test
cld
cmpsb
out
mov
inc
lock
lods
stos
icebp
fisttps
repz
lret
std
cmp
aad
movsl
sub
push
arpl
push
cltd
imul
push
out
je
stc
in
dec
sub
aad
dec
pop
push
clc
mov
jne
cmpsb
in
fldcw
out
mov
aad
mov
sbb
mov
jb
mov
xchg
out
push
mov
je
add
cltd
xor
xchg
mov
push
mov
mov
mov
xor
adc
sub
or
mov
in
cmpsl
jne
jp
insl
sbb
icebp
dec
dec
jne
xor
mov
repnz
andb
cltd
push
push
xor
neg
nop
inc
push
mulb
mov
push
mov
adc
adc
adc
adc
mov
mov
out
jb
push
out
adc
inc
mov
xchg
test
lods
mov
and
lock
dec
jae
push
sub
iret
mov
pusha
cmp
leave
mov
in
mov
push
test
push
daa
inc
ss
dec
push
daa
xor
cltd
fldt
lods
inc
cmp
push
add
clc
enter
ret
imul
dec
mov
das
push
mov
xchg
xchg
cmp
inc
mov
inc
push
dec
xor
lret
sub
cmp
xchg
push
xor
sti
into
push
adc
xchg
mov
gs
sub
push
test
stos
out
mov
arpl
sub
lahf
and
and
add
xchg
lahf
push
fildll
sbb
lea
insl
call
int
js
or
mov
mov
nop
push
data16
cmpsb
adc
and
sub
movsb
sub
data16
dec
xchg
sbb
popa
xchg
jl
pop
adc
fildll
push
and
test
lret
add
adc
iret
loopne
xchg
scas
dec
pop
lret
stos
ret
mov
jl
jp
mov
jo
mov
xchg
inc
lds
dec
insl
leave
gs
lods
mov
ret
mov
data16
mov
dec
cmp
jl
mov
mov
ja
sub
xchg
jae
std
dec
jle
insb
cli
fwait
inc
arpl
fmuls
aad
decb
adc
das
pop
cld
jmp
outsl
add
cmp
mov
repz
scas
adc
or
sbb
mov
fcoml
mov
jecxz
fdecstp
repz
leave
test
pushf
cwtl
and
pop
xchg
and
add
fistl
jb
xor
ror
inc
mov
aam
cmpsb
dec
sti
ss
add
in
cmp
lods
pop
leave
pop
ss
add
test
fisttps
inc
mov
test
inc
mov
mov
xchg
push
adcl
mov
jmp
jg
sbb
xlat
cmc
fwait
mov
lcall
sarl
shlb
or
add
cmp
jecxz
push
dec
xchg
stc
scas
addl
std
popa
jns
dec
adc
push
mov
hlt
imul
mov
in
xchg
punpcklwd
cltd
fnsave
inc
outsb
test
icebp
jae
cmp
pop
fistps
scas
pop
xor
sbb
loopne
loop
lds
sbb
insb
out
ja
cli
dec
inc
lock
add
stos
adc
xchg
scas
jecxz
arpl
shrb
fisttpll
pop
insb
insb
rorb
xlat
sbb
std
pushf
push
int3
cmp
lock
push
push
pop
negb
or
stos
jecxz
stos
stos
jge
cmpsb
addr16
pop
ret
adcb
repz
cmp
out
and
inc
stc
nop
inc
inc
mov
repnz
repnz
dec
out
mov
flds
mov
loop
aad
or
mov
cld
add
push
enter
and
mov
mov
mov
ficoml
fs
pop
jae
pop
frstor
push
cmpsl
lods
jbe
inc
nop
pusha
out
mov
jle
push
sbb
pop
out
cmp
cmp
sub
cmp
dec
rcr
in
pop
stos
mov
inc
outsb
push
fcmove
ficoms
leave
cmpsl
jb
sub
fmulp
sbb
pop
mov
and
lret
push
push
and
inc
out
push
adc
jb
xor
cmp
adc
xor
jl
stos
comiss
pop
rol
loopne
cmpl
inc
lock
fdecstp
daa
push
dec
fsubrl
insl
les
repz
cmp
cld
xor
add
imul
push
cmp
int3
cmp
std
mov
and
arpl
lea
xchg
fnstenv
mov
push
inc
into
jge
jae
aad
push
mov
and
sbb
in
lock
sbb
xor
mov
iret
aad
test
jns
in
inc
lds
test
stc
into
outsl
and
pop
mov
mov
fsubp
loop
jle
scas
add
xchg
mov
aas
aaa
or
or
adc
cltd
inc
fdivrl
jmp
mov
pop
dec
repnz
xlat
dec
xchg
adc
test
clc
decb
sub
ret
push
jbe
loop
ds
xchg
jp
inc
mov
dec
xor
fstps
icebp
xchg
ret
push
adc
xor
data16
inc
ja
adc
pop
aam
loope
mov
and
fnstsw
test
arpl
in
stos
sub
cmp
stos
xchg
rcr
push
pop
mov
and
addr16
or
sub
mov
dec
gs
xor
pushf
xchg
sbb
or
lea
mov
jb
gs
in
insl
int3
add
je
hlt
gs
adc
pop
jg
in
push
mov
loope
clc
int3
dec
adc
movsl
sub
cmp
cmp
sarb
int
xchg
push
or
clc
sbb
push
dec
xor
sub
stc
sub
inc
cmp
xor
dec
loopne
inc
lock
push
mov
add
adc
cmp
pop
push
cmpsl
cld
lock
test
mov
jbe
lcall
adc
aam
insb
inc
mov
in
fnstenv
pop
imul
fcomip
dec
pop
insl
cmc
cltd
xlat
sbb
stos
movzwl
push
lods
popf
data16
cli
xor
pop
bound
push
adcb
mov
lds
lods
pop
inc
test
pop
inc
mov
sub
sub
imul
call
xchg
pushf
jb
xchg
sbb
inc
sarb
push
and
pop
mov
stos
xor
inc
sbb
sub
lods
adc
pop
je
push
dec
and
add
mov
xchg
lcall
xor
pushf
or
scas
add
adc
pop
hlt
mov
fmull
movsl
inc
dec
call
movsb
inc
movsl
xor
push
adc
int
pop
int3
rcrl
imul
jp
shl
out
xchg
sbb
aam
stc
mov
xchg
aad
xchg
or
xorl
fdivs
cmp
pop
clc
push
das
adc
sub
mov
jp
vpmuludq
pop
jmp
and
lret
scas
mov
push
icebp
les
xchg
jb
sub
loope
stos
loop
xor
ffree
negl
inc
or
pop
push
cli
sarb
iret
movsb
pop
in
aad
fiadds
hlt
nop
movsl
stos
popl
mov
dec
popa
incb
loopne
inc
bound
loop
loopne
mov
and
lret
insl
cmp
fcomps
push
adc
out
mov
mov
cwtl
push
xor
popa
lea
sub
pop
stc
or
mov
test
pop
gs
test
imul
cmpsl
popf
int3
data16
cmp
stos
fists
xchg
sub
cmp
mov
ljmp
mov
inc
sub
push
inc
pop
mov
shrb
mov
xchg
outsl
sahf
adc
and
inc
addl
mov
clc
shll
cmp
mov
and
sbb
jmp
xchg
mov
mov
push
jno
cmp
das
loope
xor
inc
adc
cs
inc
in
dec
insb
enter
mov
in
dec
or
icebp
enter
hlt
stos
test
loop
ss
cli
mov
lods
cmp
icebp
lcall
pop
or
insb
das
mov
test
xchg
arpl
faddl
mov
popf
sarl
mov
mov
xchg
insb
ljmp
xor
mov
mov
lds
adc
daa
adc
test
jmp
push
popf
fcoms
loop
xor
cmp
mov
xor
jnp
mov
cmp
mov
mov
repnz
mov
outsb
popa
es
lods
pop
dec
push
lret
add
daa
adc
stos
sbb
lods
dec
cmpsl
dec
push
lcall
popa
outsb
lret
fcompl
sbb
push
sub
aas
mov
fld1
pop
out
das
push
pop
shrl
lock
sub
and
jle
xchg
aad
in
or
or
out
push
nop
xchg
add
and
lods
dec
les
lods
out
push
add
mov
mov
and
xor
and
je
jecxz
out
scas
out
mov
and
or
insb
popf
adc
shlb
movsb
cmc
sti
pushf
inc
out
dec
insb
mov
scas
rcl
adc
inc
jmp
flds
mov
jle
push
test
mov
loopne
ficompl
out
push
mov
sub
add
movsl
into
lods
aam
mov
scas
aad
inc
gs
jmp
mov
sbb
test
xchg
or
popf
dec
adc
inc
mov
xlat
or
adc
fcmovnu
adc
cmp
nop
cld
adc
adc
rclb
sbb
push
mov
psllw
rcr
add
or
dec
mov
sub
into
sub
in
test
leave
sbb
pushf
adc
daa
inc
sbb
pop
int
cmp
fwait
push
dec
mov
ret
shll
mov
js
das
xor
mov
repz
pushf
and
pop
or
js
xchg
cltd
mov
mov
mov
out
add
arpl
dec
fsubrs
test
pop
lea
stc
mov
les
gs
es
inc
add
pusha
dec
mov
inc
mov
sar
jb
pop
arpl
fidivrs
jg
sbb
mov
addr16
mov
jbe
xor
pop
inc
fisubs
fs
je
xor
insb
and
ret
loop
push
repz
test
add
loopne
adc
pop
mov
cld
into
cmp
out
fsubr
xor
cmp
into
and
mov
insb
jg
mov
adc
add
push
scas
insb
mov
es
int
shlb
popf
verr
roll
in
adc
or
inc
out
ret
mov
cmp
loope
repnz
push
imul
loopne
push
into
iret
shll
adc
mov
dec
pop
xor
es
cs
cmp
stos
lcall
aaa
adc
out
jecxz
aad
xchg
stos
stos
add
mov
mov
sahf
out
popf
and
ja
sub
sahf
dec
cmpsl
fcomps
pop
lds
into
mov
xchg
mov
pop
test
fs
call
stos
dec
aas
icebp
fnsave
mov
push
sbb
cmp
mov
sub
fists
pop
ja
pushf
pop
stos
clc
lret
mov
lds
push
fildl
dec
addr16
iret
call
shll
sbbl
pop
jge
dec
and
and
jg
notb
sub
popa
push
filds
jmp
push
inc
roll
aad
aas
add
xchg
push
bound
push
repz
push
xor
iret
lret
fistpll
xor
jg
in
and
icebp
xor
lods
rorl
movups
mov
mov
cwtl
in
loopne
stos
sti
hlt
push
jns
lods
adc
roll
dec
pop
test
aas
mov
xchg
into
or
pop
cmp
lea
loopne
repnz
inc
cwtl
xchg
cmp
in
pop
mov
mov
nop
arpl
xorl
loopne
push
cmp
test
mov
mov
fldl
xor
pusha
dec
push
popa
int
inc
pop
test
mov
dec
sarl
mov
int
inc
mov
push
jbe
rcl
mov
clc
jne
xchg
sarb
shufps
inc
push
xor
sbbl
ds
xor
les
xchg
test
and
mov
push
arpl
fwait
test
fsubl
andb
or
jnp
adc
or
popa
cs
jne
dec
pop
xor
cmp
pop
jp
idivb
xchg
popa
out
out
dec
imul
fcomi
mov
cmp
xchg
xlat
ret
gs
adcl
push
push
nop
or
inc
adc
inc
sub
cmp
aad
out
lods
mov
out
rorb
mov
arpl
jnp
xor
adc
out
jg
xor
or
repnz
dec
scas
fcoms
or
sbb
sbb
or
je
xor
dec
cs
and
incl
and
pop
rol
dec
popf
mov
jbe
jecxz
mov
ret
mov
or
lret
xor
inc
movsb
lret
push
push
es
mov
mov
cs
icebp
mov
sub
and
mov
xchg
adc
fldt
adc
dec
xchg
mov
movsb
fldcw
fstps
movsl
insl
pop
mov
sahf
ss
divl
dec
ret
cwtl
out
lods
iret
xor
xor
lahf
cmp
addl
jl
push
and
inc
push
mov
adc
scas
or
inc
dec
test
cmpsb
cmp
nop
rcrl
lds
mov
adc
mov
ss
jb
and
jl
arpl
sub
jo
mov
push
push
aaa
cmp
mov
mov
imul
in
cltd
test
mov
sub
mov
into
dec
push
cmp
scas
adc
notl
cwtl
sbb
mov
and
mov
push
xchg
mov
jg
xor
movsb
nop
push
add
add
arpl
stc
roll
lret
loop
std
ds
test
mov
bound
repnz
rcl
loop
or
sub
sti
inc
adc
nop
mov
loopne
idivl
mov
ds
insl
or
clc
mov
stos
mov
pop
cmp
ljmp
sub
mov
push
rorb
adc
xchg
cmp
iret
sbb
ds
dec
sub
xchg
push
mov
add
scas
cmp
cmp
lahf
ret
dec
add
test
std
mov
sub
cmp
mov
aaa
lea
mov
lods
sbb
hlt
jge
add
arpl
adc
or
xlat
jge
rolb
jle
out
ret
js
icebp
mov
push
xor
dec
xchg
popf
sub
jecxz
mov
decl
lret
decl
mov
dec
sub
out
add
wbinvd
or
xlat
xlat
cltd
scas
inc
rcrb
out
push
mov
js
dec
adc
icebp
lahf
xchg
or
or
cmp
sti
push
std
scas
cmp
dec
shll
dec
and
cmp
mov
mov
xchg
cli
inc
xchg
in
sbb
ret
push
inc
test
xchg
iret
jp
and
cmpsb
push
sub
jno
ret
and
ficompl
add
push
andl
movsl
mov
xor
pop
roll
add
cmp
cmpl
data16
push
pop
mov
insl
xor
xor
ja
mov
fstps
adc
popa
jns
insb
xor
jnp
and
dec
int
movsl
cwtl
in
pop
jge
jl
dec
mov
jnp
pop
lea
or
push
je
inc
out
mov
into
adc
add
movsl
pop
sub
test
call
imul
sbb
loop
and
pop
shll
sub
sub
ja
lock
sahf
pop
xor
loope
test
popa
jb
shl
cmp
out
lods
mov
mov
aad
enter
jb
sub
cmc
std
jne
repz
dec
int
idiv
dec
fstpt
inc
ljmp
xchg
les
lcall
mov
mov
pop
jmp
aam
das
sbb
pop
scas
mov
outsl
popa
jmp
adc
mov
aam
test
pop
mov
fldl
std
lea
jo
mov
and
xor
or
push
xrelease
lods
xor
popf
push
jmp
jmp
mov
clc
jns
mov
mov
sahf
cmp
or
jmp
dec
inc
aas
xor
fmul
pmullw
pop
enter
or
repnz
adc
stos
sub
jge
out
insl
in
leave
adc
push
xchg
movsl
mov
sti
jl
fstps
mov
jo
fcompl
and
fs
out
mov
jecxz
push
movsl
pusha
cltd
sub
jecxz
lret
mov
add
fldenv
or
stos
mov
push
es
sti
mov
pushf
sbb
dec
lds
push
fs
add
outsl
dec
sarl
mov
mov
fisubrs
adc
mov
push
imul
sahf
cmpsb
xor
mov
dec
jne
sub
jno
mov
jno
push
add
and
fistpl
test
mov
rcll
push
push
jg
pop
hlt
ret
fisttps
mov
push
repnz
scas
nop
sub
pop
dec
mov
daa
sub
fistl
jo
rorl
imul
dec
push
popa
pop
pop
mov
pop
inc
jmp
inc
sarl
fstl
aas
shll
repnz
dec
jno
shll
shll
pop
pop
cld
out
cmpsb
sub
fsubp
or
mov
ret
in
aad
sti
rcll
repz
add
fcomps
sbb
mov
sub
sbb
push
lret
jl
push
mov
icebp
out
dec
jns
push
and
cmp
sub
lods
dec
cli
jg
test
aaa
xlat
jmp
ret
xlat
in
insl
lahf
aaa
into
inc
cltd
inc
push
add
sbb
add
mov
fmuls
push
in
xor
dec
fnstcw
insb
lcall
lds
adc
mov
mov
lods
subl
lret
mov
fwait
cld
stos
in
fcomp
aad
popl
fisubrl
or
and
mov
and
fcoms
mov
pop
pop
call
call
test
push
xor
xor
sub
lds
pop
daa
bound
in
les
clc
cmc
sbb
xor
mov
inc
out
cmp
cmpsl
movb
test
mov
pusha
rorl
daa
addb
mov
test
push
je
or
sbb
jo
push
or
inc
fs
ljmp
dec
ret
pushl
jp
adc
add
pop
jmp
loope
in
out
mov
int3
push
jle
or
push
xorl
pushfw
insl
or
xor
rorb
pop
adc
and
mov
mov
pop
rcr
icebp
in
dec
mov
push
inc
mov
mov
dec
xchg
sub
mov
pusha
sub
inc
jno
outsb
mov
stos
cmp
enter
hlt
jnp
add
fildll
jb
cmc
pusha
jno
and
inc
cmp
cli
dec
clc
mov
xchg
mov
xchg
xchg
jecxz
jns
insl
in
dec
pop
enter
mov
gs
xor
hlt
fimull
cli
xor
test
jmp
push
sbb
ja
cli
and
adc
ljmp
movlps
mov
mov
imul
prefetcht1
fdivl
adc
frstor
mov
sbb
stos
in
ja
sub
push
jl
loope
ret
cmpsb
cmpsl
stos
jp
repz
lea
and
inc
push
sar
stos
ficoml
cmp
mov
es
imul
decb
mov
mov
lret
mov
xorl
add
pop
or
cmpsb
outsl
ds
add
and
pop
and
cmc
popa
fchs
mov
cwtl
sbb
sbb
jge
es
jle
aam
xchg
xchg
adc
test
push
adc
repz
nopl
aaa
stos
or
lcall
push
sbb
push
dec
sarl
jnp
stc
ljmp
mov
or
fnsave
dec
sub
fwait
stos
punpckhbw
in
nop
popa
dec
movd
addr16
enter
push
pop
xor
xor
sub
pop
push
cli
sbb
outsl
sbb
movsb
lret
mov
and
fdivs
stc
decb
xor
dec
inc
cltd
cld
mov
add
scas
inc
lret
aad
sub
xor
test
mov
nop
mov
hlt
xchg
xchg
or
xchg
cmp
popf
std
popf
jmp
push
hlt
cmp
outsl
stos
adc
lds
push
xlat
xchg
push
loop
and
add
push
popf
push
sub
in
aas
cmc
push
addb
xchg
cmp
xorl
jl
xor
or
scas
mov
loope
lea
push
and
icebp
stos
hlt
mov
sbb
sub
cmp
mov
xor
inc
push
adc
inc
jle
mov
out
lret
stos
pushf
hlt
adc
xchg
outsl
in
add
jmp
clc
dec
aad
pop
mov
shlb
mov
add
loopne
and
push
pop
or
jmp
inc
loopne
std
jno
push
add
pop
bound
cmc
mov
sub
cli
add
lods
add
daa
ret
and
out
js
cmp
inc
add
scas
and
ds
imul
or
jbe
sbb
test
sbb
sbb
icebp
push
fcmovne
xchg
cmpsb
ds
adc
lods
xor
sarb
xor
cmp
xchg
rclb
or
out
pop
lret
rclb
inc
test
test
cmp
lret
jbe
scas
mov
lods
jns
in
pusha
out
es
lods
push
in
lock
pop
mov
mov
shll
push
cmp
lahf
push
xor
ja
inc
cmpsl
push
cmp
mov
sahf
xchg
and
rcrl
ljmp
ffree
lds
int3
in
inc
xor
je
jmp
mov
negb
inc
xchg
and
mov
es
test
xchg
int
pop
inc
sbb
out
repz
addl
sahf
fdivrl
ret
inc
jge
mov
inc
mov
cmp
repnz
or
popf
into
subl
scas
and
or
roll
adc
jl
movsl
lods
jnp
cld
divb
adc
shl
xchg
add
mov
sbb
subl
cwtl
cld
xor
pop
stos
sbb
xchg
adc
out
adc
stos
push
cmpsb
sbbb
xchg
inc
es
xchg
int3
in
popl
scas
jnp
mov
sbb
outsb
jmp
sarl
xchg
in
mov
idivl
testl
sub
sub
bound
sub
ss
pop
leave
outsb
nop
or
jno
dec
push
fsubrl
test
sub
inc
xchg
shrl
sbb
sub
dec
dec
push
iret
or
in
add
data16
aad
fiaddl
sbb
xorb
jge
push
fs
out
jg
in
cmp
jne
sbb
gs
out
mov
sbb
sbb
int
ljmp
or
xchg
or
xchg
xor
jmp
pushf
das
and
or
sub
ss
addr16
xor
jb
int3
mov
xor
xchg
in
ret
leave
es
loope
dec
pop
jecxz
push
jnp
xchg
pop
adc
testb
jg
iret
push
popa
lcall
testb
scas
popa
imul
push
mov
jb
push
or
and
add
and
rorb
add
jno
outsl
repnz
ljmp
mov
repz
push
test
movsl
gs
add
call
bound
aaa
xchg
in
fnstcw
idivb
cmp
fadds
mov
das
das
pop
cmpsb
movsb
and
out
outsl
fisubrl
mov
cmp
negl
arpl
rorl
cwtl
mov
mov
cmp
es
mov
sub
xor
cmpsl
dec
xchg
int
sbb
mov
pop
loop
add
pop
daa
xchg
jb
popf
fbstp
xchg
hlt
and
in
popl
sysexit
mov
cltd
cmp
cld
xor
mov
jmp
sbb
inc
pusha
cmp
test
add
adc
jns
dec
popfw
rolb
jo
mov
lock
aaa
xchg
addb
inc
push
nop
mov
mov
into
nop
inc
fs
aaa
movb
jo
outsl
nop
xchg
xchg
js
jl
and
jge
aam
cmp
ret
jno
jnp
cmp
iret
out
mov
adcb
mov
enter
movsl
pop
and
testl
clc
arpl
vorps
imul
inc
mov
jno
dec
andl
repz
sub
pop
mov
in
icebp
bound
std
jecxz
adc
leave
ficomps
imul
sbb
and
inc
loop
ss
jle
sbb
aam
inc
xchg
into
stos
sub
lods
stc
mov
into
pop
sbb
xor
adc
dec
cli
sbb
cmpb
cmp
jmp
loope
xchg
out
cmp
push
sbb
testb
sub
fwait
add
sub
jl
loop
pop
popa
dec
icebp
push
mov
sub
xchg
push
mov
ss
add
enter
mov
add
mov
push
lock
pushl
jnp
popa
out
or
and
stc
fistl
xchg
outsb
jnp
sarl
fwait
daa
insb
stos
cld
mov
mov
jmp
sub
or
aas
daa
push
or
sbb
ja
jae
subl
fisttps
push
jecxz
je
subl
jno
cs
lret
mov
inc
mov
movsb
cmc
les
jne
rcrb
fistpll
fildll
pop
test
cmc
mov
aas
push
jp
pushf
cmp
sub
shll
out
std
sbb
push
sbb
repz
xchg
jb
pop
stos
dec
push
sbb
popa
add
mov
adc
xchg
aaa
push
stc
mov
in
stos
pop
lahf
mov
aas
inc
insb
imul
dec
mov
imul
div
pop
push
jmp
inc
push
loopne
pusha
cmp
sbb
movl
outsl
scas
pop
in
icebp
mov
sbb
or
leave
cltd
add
jmp
push
ss
push
jns
xchg
push
xchg
iret
pop
add
pop
and
adc
and
mov
sbb
fists
xchg
aas
dec
into
test
stos
push
xchg
xchg
inc
shlb
fwait
call
and
into
rcll
push
aam
fsubrs
sub
popf
add
cmpsl
add
jne
stos
in
mov
push
mov
xchg
aaa
xor
cmp
jae
jmp
lret
xlat
mov
popa
js
adc
fs
cmpb
std
inc
data16
jmp
pop
ss
popf
mov
pop
mov
les
sub
jg
and
test
shl
and
into
add
xor
jno
repnz
pop
cmpsl
in
cmp
jg
sub
add
jo
xchg
loope
jge
adc
int3
sbbl
mov
ficomps
sbbb
jb
test
xor
js
push
scas
cmp
popf
jge
pop
adcb
cmpsl
stc
pop
jb
in
hlt
out
sub
insb
popa
mov
out
sar
lods
xchg
roll
ret
je
dec
mov
inc
jl
add
mov
int
mov
push
add
lahf
mov
pop
je
lcall
adc
xchg
into
test
incl
mov
cmpsb
lds
call
andps
add
dec
mov
gs
pusha
mov
inc
pushf
push
mov
cmp
ret
je
jmp
pop
dec
stos
test
push
lahf
insl
loope
mov
inc
pop
lea
mov
or
and
or
sub
aas
in
mov
roll
sub
fcoms
lcall
pop
jo
push
jno
cltd
fucomp
or
stos
daa
outsl
pop
xor
cmp
pop
repz
jecxz
sbb
mov
hlt
imul
loop
ret
test
imul
inc
sbb
sub
rorb
dec
pop
pop
cmpsb
std
jp
test
jae
nop
ret
sbb
push
mov
ljmp
rcrl
icebp
xorb
negb
sub
pop
jge
lahf
jl
xchg
cmpps
pop
and
repnz
scas
inc
test
or
jmp
sbb
je
fs
sub
inc
jmp
xchg
loopne
xchg
movsb
imulb
fsubr
add
fwait
xor
pop
out
cmpsl
int3
and
lret
mov
leave
add
mov
jb
mov
leave
enter
out
orl
adc
adc
or
in
clc
mov
dec
in
sbb
and
repnz
leave
stos
aas
mov
aad
dec
xchg
push
lods
cmpsb
ljmp
clc
cld
addr16
jo
push
ficomps
cs
pusha
cmpsb
adc
fst
adc
mov
jo
pop
cmp
rorl
das
gs
jle
mov
es
xchg
lock
cld
jno
sub
adc
sarb
push
jo
dec
lock
push
rolb
lcall
adc
in
xchg
fs
into
sub
shl
adc
push
fsubrl
test
and
out
mov
and
mov
jge
nop
mov
lret
dec
fwait
cmp
mov
lahf
push
loope
push
push
shl
lret
cmp
sbb
testl
es
dec
in
aam
mov
les
ret
in
data16
arpl
fcmove
loop
pop
lock
jg
push
xchg
or
sub
lahf
mov
lods
inc
jbe
sarl
add
jae
inc
fwait
lahf
addr16
add
dec
mov
inc
stos
dec
mov
scas
xchg
call
in
je
adc
sub
xchg
sub
ds
xchg
or
jae
repnz
stos
outsb
aas
dec
jle
lds
mov
aaa
or
ja
dec
pop
sbb
in
lret
adc
movsl
sub
pop
cli
jb
push
je
pop
mov
push
or
js
pop
push
pop
jb
movsb
jnp
xchg
aas
cltd
int
jae
push
jge
pop
mov
mov
test
stc
sti
js
push
int
pop
xchg
movsl
inc
fcmovbe
sub
mov
mov
inc
jnp
mov
insl
out
loop
mov
jo
jmp
lahf
repz
dec
outsb
repz
xchg
cmp
fwait
mov
rcr
cmc
ss
insb
iret
je
outsl
jno
jmp
movl
pusha
idiv
sub
mov
test
add
xchg
lfs
jmp
xorl
mov
inc
jmp
pop
ss
cmc
cmc
lret
mov
adc
lret
push
movsl
subb
loope
cmpb
in
inc
dec
idivb
or
shrb
ss
adc
push
das
inc
cmp
lret
pop
add
dec
mov
ret
cwtl
decl
pop
inc
mov
cmpsl
stc
pop
enter
mov
loop
add
in
mov
out
jecxz
jl
lods
ret
mov
and
jmp
push
imul
in
test
insl
xor
and
cltd
hlt
aad
aas
frstor
jnp
aaa
xorps
mov
push
rclb
dec
lods
ja
and
pop
inc
dec
rcrl
fstps
mov
lods
jmp
loopne
inc
gs
ljmp
xor
sbb
stos
pop
clc
imul
pop
aam
pop
pcmpeqd
jo
add
push
mov
data16
mov
out
or
mov
pop
into
fcoms
and
cmp
icebp
xchg
adc
xlat
add
add
push
mov
sbb
dec
mov
lods
stos
xor
pop
inc
fisttpl
scas
push
xchg
pop
pop
cmp
mov
inc
bsr
and
rol
mov
sbb
pop
js
dec
mov
or
call
shrl
inc
in
jmp
cmp
fnsave
pop
iret
insb
hlt
fidivrl
add
cmpsb
imul
out
sub
cld
dec
mov
repz
cmpsl
xorl
push
mov
mov
enter
push
out
out
int3
inc
mov
sbb
ret
leave
add
cmp
mov
repz
jo
mov
mov
pusha
repz
mov
cld
arpl
hlt
lds
insb
mov
fisttpl
orb
cmpsb
mov
and
push
mov
roll
cmp
shl
fwait
cmp
cld
out
xchg
sti
inc
mov
push
xor
dec
add
push
xchg
mov
xor
imul
dec
or
and
and
jnp
pop
xchg
out
mov
mov
aam
mov
in
ret
pop
and
pushf
cmp
sub
lock
sub
sti
mov
sahf
int
outsb
cmpsb
mov
js
in
aam
dec
mov
rcrb
out
fsubs
fldcw
popf
call
xor
bound
sub
cmp
pop
imul
je
fadds
les
addr16
aad
adc
pop
add
daa
push
bound
pop
call
shlb
call
in
scas
test
push
sbb
xchg
repz
icebp
insl
lock
outsl
adc
pop
dec
sub
dec
aaa
mov
adc
push
mov
inc
and
out
sbb
rcr
dec
push
push
add
in
out
dec
or
sub
sbb
iret
clc
test
push
in
jnp
sub
lds
test
and
lea
pusha
in
cmpsl
and
cltd
pop
push
das
and
jae
call
repz
inc
out
test
jg
xor
xlat
xor
xor
popf
xchg
std
pop
loop
popf
cmc
pop
add
jo
pop
repnz
push
sahf
mov
into
addr16
xchg
mov
jb
loopne
hlt
push
icebp
cwtl
jl
and
jmp
rcrb
push
pop
ss
cwtl
add
cld
sub
cmpsb
ret
movsb
xchg
lock
dec
cmc
imul
rcrb
mov
cmpsl
std
push
popf
aas
pop
pop
push
dec
sub
orb
or
fwait
xor
jecxz
iret
mov
mov
cmpsb
mov
in
or
inc
lods
mov
or
rcrb
mov
mov
push
movsl
les
test
push
sbb
mov
jae
xchg
ror
fsubr
gs
pushf
arpl
xor
scas
push
mov
pop
and
jne
aam
cmpsb
cmc
lcall
jge
pop
dec
push
jecxz
popf
bound
sub
or
xchg
insb
inc
shrl
ss
add
js
sub
push
mov
mov
shlb
mov
mov
and
ret
xchg
std
mov
lds
lock
mov
jbe
xchg
shrb
jg
mov
stc
xchg
dec
dec
in
rcrb
xchg
xchg
pop
aad
jge
push
clc
xchg
stos
xlat
push
jbe
cmpsb
xchg
inc
inc
xor
sub
lret
test
mov
jbe
gs
pop
dec
rcrl
cmp
mov
xchg
shll
jae
hlt
jmp
mov
cmpsl
adc
xor
push
stos
mov
jmp
or
adcl
stc
call
test
loop
pop
jle
jne
dec
lahf
outsl
jbe
push
cmp
sahf
ret
outsb
push
inc
push
test
enter
aaa
xor
sbb
movsl
adc
fists
sti
imul
dec
pusha
push
mov
sub
push
orb
pop
lcall
mov
mov
mov
idivl
xor
mov
imul
arpl
inc
fisubrs
cmp
mov
sahf
repz
enter
pop
test
sbb
cmp
outsl
and
repnz
or
or
add
jmp
mov
pop
and
mov
sub
arpl
and
jge
sbb
mov
lahf
pop
jne
mov
add
and
leave
and
fs
adc
int
cli
mov
mov
push
cli
pushf
xor
insl
push
jns
movsb
nop
int3
ljmp
fwait
lods
fisttpl
inc
sub
in
dec
cmp
lret
push
lds
mov
xchg
outsl
push
out
enter
in
push
int
sti
sub
or
adc
ret
sarb
lahf
movsb
imulb
push
fisttpl
mov
pop
xor
pop
and
repz
imul
dec
sub
iret
cwtl
ss
repnz
mov
test
scas
pusha
push
sarb
stc
pop
sbb
push
cmpsb
jge
and
pop
idivb
mov
pop
mov
pop
mov
out
add
add
xchg
cmp
and
into
sbb
xchg
loopne
insl
std
jne
sbb
xchg
fisttpl
or
and
mov
fmull
sub
xor
sub
mov
mov
out
mov
cwtl
mov
outsb
cmpsl
and
das
mov
out
push
and
mov
sub
mov
sbb
mov
dec
je
loopne
pusha
xor
jnp
fildl
lods
push
sub
dec
lods
test
push
mov
adc
lret
push
pop
jge
rclb
scas
pop
pushf
dec
loopne
jbe
push
mov
and
mov
or
fnsave
xchg
rcr
and
jmp
leave
cld
add
xchg
mov
test
inc
out
rcll
jb
icebp
int3
xor
jl
call
xor
arpl
cmc
movsl
fs
or
cltd
ds
movsb
add
cmp
ds
xchg
int3
ja
pop
popa
in
cmp
aad
sahf
pop
cmp
lds
add
add
lret
inc
rorl
sub
lret
sub
fldt
pop
or
mov
add
fnstcw
push
stos
call
jmp
in
pop
insl
cmp
xor
iret
jmp
imul
je
into
jg
rorl
inc
mov
inc
add
add
mov
test
mov
mov
mov
or
pushf
addl
jecxz
icebp
pop
pop
pop
roll
sbb
out
inc
cli
push
adc
loope
mov
lret
add
add
dec
jl
mov
fimuls
inc
cmpsl
pop
push
mov
fcomps
dec
imul
int
and
pop
in
gs
cs
pusha
jno
xor
insb
pop
lock
js
js
je
scas
sti
stc
cli
arpl
loopne
rcrl
lods
addr16
jnp
gs
notl
jge
cmp
imul
jae
js
push
lds
dec
ljmp
mov
insl
sbb
lds
sbb
sub
dec
push
adc
ret
je
pop
add
adc
mov
ljmp
mov
ret
jns
adc
iret
add
inc
fwait
lcall
test
mov
adc
ljmp
xor
aaa
jb
or
xor
mov
add
xchg
sbb
pop
mov
or
add
enter
cmp
icebp
or
jno
fcmove
cmpsb
add
js
ljmp
mov
mov
clc
inc
and
fistl
xor
mov
es
iret
add
push
sbb
pop
pop
sbb
xor
cmp
pusha
cli
imull
xlat
jge
mov
cwtl
icebp
nop
repz
cmpb
cmc
or
popf
in
lock
daa
sar
xrelease
mov
pop
adc
cld
into
jmp
mov
jmp
and
mov
inc
jns
gs
sti
adc
jo
mov
jmp
test
mov
push
les
dec
push
inc
je
jno
cmp
or
sbb
dec
xor
bswap
loope
dec
movsb
out
xor
out
fnsave
push
push
repz
sbb
mov
jno
jmp
bound
call
pop
gs
sub
or
mov
insl
add
int
sub
clc
sbb
mov
es
sbb
repnz
mov
aas
add
stos
imul
mov
xchg
in
dec
sub
int
rorb
and
jbe
jle
jnp
rclb
es
push
cltd
dec
sub
and
scas
scas
mov
xor
fstps
sbb
and
mov
or
fcompl
nop
cmp
fisttpll
pop
jne
in
ficoms
jo
mov
stc
add
and
mov
inc
pop
add
mov
bswap
push
push
cmp
ja
lds
subl
mov
rolb
ficomps
add
or
mov
arpl
lods
adc
leave
mov
out
mov
outsl
repnz
or
dec
and
stos
mov
or
mov
pop
and
xor
fistl
pop
push
sbb
pop
fldt
and
std
push
xorl
lock
cld
test
repnz
cmp
mov
sbb
jmp
stc
arpl
sbb
pusha
pop
sbb
shrl
scas
mov
je
add
add
pop
or
jo
sub
dec
imul
jns
mov
or
mov
lret
xor
xor
shlb
jns
dec
jae
jns
xor
stos
mov
pop
adc
in
test
cmp
pop
add
incl
ficomps
xchg
data16
cltd
dec
sub
outsl
mov
addr16
data16
mov
cmp
outsb
orb
bound
not
sahf
add
gs
int
jg
jo
jns
fdivl
add
push
add
lcall
loope
inc
in
out
jg
mov
jl
cmp
xchg
or
pop
inc
dec
sub
xor
jbe
imul
shlb
xchg
xchg
cli
cmp
push
or
lahf
inc
mov
faddl
lock
scas
loope
sbbb
ss
mov
out
lods
jg
cltd
inc
sub
mov
mov
adc
push
and
push
inc
jb
in
xchg
shlb
jb
cs
test
add
lods
loop
daa
inc
loopne
rolb
xlat
sbb
fadds
push
jecxz
jo
std
movsb
stos
and
pop
mov
mov
cwtl
mov
jge
inc
sbb
pop
xor
je
mov
jmp
sub
inc
test
ds
jp
xchg
ret
les
dec
les
or
xchg
mov
xchg
ja
dec
int3
xchg
or
sti
mov
in
mov
clc
out
dec
je
movsb
loopne
out
ret
and
xor
add
mov
mov
add
mov
pop
pop
idivl
in
int
mov
add
jp
mov
movsl
imul
lret
outsb
sbb
push
push
outsb
add
inc
stos
push
xchg
pushf
sti
or
enter
rol
jecxz
sbb
lcall
pusha
fs
xchg
stos
inc
and
pop
orb
adcl
sti
inc
and
jg
out
cli
xor
dec
mov
in
inc
mov
mov
inc
xchg
les
shl
pusha
daa
push
orb
push
cmpb
add
not
fadd
into
cltd
jb
jns
pop
rep
push
adc
jmp
xchg
mov
mov
movsb
fimuls
cmpsb
lcall
cli
int3
xchg
insl
bound
cli
lds
mov
test
adc
xchg
les
jb
push
jecxz
cmpsb
in
cld
jnp
sub
stc
push
add
push
pop
mov
repnz
call
rcrb
xchg
pop
je
mov
mov
push
rorb
pop
icebp
stc
pop
pop
sbb
cmp
js
sub
aaa
stos
cmp
push
das
sbb
sbb
adc
std
scas
xor
std
insl
out
pop
xor
fadd
filds
jo
cmp
add
mov
in
ljmp
sub
popa
stos
clc
jbe
dec
push
sub
cs
adc
out
xchg
andb
xchg
iret
mov
jg
hlt
sub
jns
pushf
push
sub
mov
daa
ljmp
bswap
push
movsb
and
fwait
negl
cwtd
inc
xchg
popf
and
xchg
jle
shll
xor
mov
push
movsb
paddsb
mov
push
jg
shlb
push
push
sbb
push
mov
popf
fcomps
cli
push
jae
mov
rorb
roll
test
pushf
icebp
cmp
cli
cmp
lods
add
call
xchg
fmull
shll
fsubrs
or
loopne
call
adc
fnsave
fisubl
loopne
test
fstpl
push
add
xchg
and
pop
cmp
sbbl
jns
adc
jmp
daa
enter
cs
mov
cmc
and
js
inc
clc
pop
sbb
push
xchg
popa
mov
leave
cwtl
jnp
popa
pop
mov
roll
rolb
mov
push
movsb
and
insb
repz
aaa
sub
outsl
mov
dec
jmp
fisubrl
mov
sbb
into
and
cmpsb
mov
mov
xchg
popf
pop
and
js
leave
xor
sahf
sbb
dec
popa
xor
lods
jne
pop
mov
fists
fistps
or
and
jb
aad
cli
inc
xchg
clc
ficoml
mov
adc
rorl
pop
sub
lods
dec
adc
add
mov
cs
push
sub
les
sub
aas
jnp
cmp
sbb
mov
cli
add
sahf
xchg
lahf
dec
xor
in
hlt
or
scas
xor
popa
sahf
adc
xchg
int3
push
jb
dec
ljmp
push
or
std
out
jmp
xchg
test
test
dec
and
test
adc
sbb
sub
inc
add
test
aaa
push
inc
fiaddl
pop
or
pop
movsl
in
sahf
push
sbb
push
pop
sub
and
icebp
test
adc
cmp
or
in
fs
popf
dec
insb
movsl
jmp
ret
ret
cmp
sar
out
push
js
inc
sub
cld
dec
push
enter
and
cmp
xchg
jbe
lret
cwtl
push
iret
jle
dec
aad
ficoms
lods
jb
mov
pushl
mov
cmp
push
mov
push
out
ja
push
pop
pop
jmp
loopne
sub
rorb
push
push
pop
out
xchg
xor
adc
aas
fdivrl
enter
xchg
iret
sub
loop
pop
cmp
scas
and
add
sarl
mov
inc
dec
jecxz
add
lods
ret
cwtl
or
rcrb
xchg
nop
psubsb
imul
fucom
pop
out
pop
push
enter
and
lods
mov
dec
jns
fcmove
les
sahf
mov
adc
shrl
xor
testl
xlat
sbb
sbb
dec
idivb
jae
push
pusha
jg
test
sub
fisubrl
pushf
pop
or
and
mov
jmp
mov
gs
int3
pop
sti
mov
stc
cmp
mov
mov
dec
vpaddusb
stc
push
jl
cltd
sub
xchg
mov
pop
jp
outsl
cmp
sub
dec
mov
pop
or
sbb
xchg
or
push
dec
aas
stos
test
pop
sub
mov
mov
mov
sti
pop
enter
rolb
int3
or
inc
cmpsl
jle
ja
push
cltd
sub
mov
rcrl
jns
dec
mov
sti
ja
subb
sbb
ljmp
mov
in
jne
pop
addl
inc
in
jge
xor
xchg
add
dec
xchg
loopne
cmc
jl
lret
clc
cmpsl
inc
test
test
dec
sbb
dec
aaa
scas
insl
push
pop
call
fwait
popf
push
and
sub
add
cmp
cmc
daa
sbb
fsts
sub
cmc
leave
push
insb
sahf
pop
xchg
inc
push
inc
inc
jns
repnz
or
push
pop
mov
cmp
cmp
mov
sbb
adc
and
dec
cmp
jne
push
xor
cmp
inc
mov
or
add
or
fcoms
outsb
xlat
xlat
cwtl
scas
mov
xchg
sbb
int3
mov
fisubs
xchg
sub
sub
aam
je
xor
xor
cmp
and
clc
cmp
int
mov
push
inc
sbb
jl
ljmp
ds
fs
lea
xchg
mov
call
fisttpll
scas
mov
ror
lea
clc
std
aad
cmp
mov
mov
int
daa
push
sti
sahf
lret
pop
mov
addr16
cmpl
inc
rcrb
out
push
mov
and
and
daa
cmp
add
fcmove
sbb
adc
and
repz
scas
fs
repz
add
imul
pop
xchg
cs
flds
sbb
mov
dec
or
dec
outsb
test
jns
cmpsb
mov
into
jp
push
or
out
icebp
mov
in
xlat
xchg
daa
cwtl
mov
mov
imul
pop
cmp
fbld
fists
cld
push
xchg
bound
push
movsl
dec
aad
icebp
pop
mov
movsb
fnstcw
lock
outsl
fisubrl
inc
cmp
push
subb
out
push
jae
test
cmc
mov
hlt
test
sub
repz
daa
repnz
sarb
mov
mov
out
pop
cmp
ljmp
mov
arpl
pusha
clc
mov
push
push
inc
sbb
clc
lret
lahf
dec
cwtl
repz
sub
mov
jns
in
cmpl
push
jb
cltd
sbb
insl
aas
mov
add
fs
sbbb
scas
mov
inc
jne
movsl
addr16
sar
jb
ja
sti
mov
pop
test
cwtl
scas
jo
push
or
mov
cmp
push
or
out
jae
mov
xchg
pop
or
or
cmpsl
jle
sahf
int3
test
pop
in
bnd
ss
stos
repnz
xor
sbb
divl
sbb
push
pop
mov
pop
xchg
mov
cmp
rol
repz
arpl
into
scas
adc
popa
cmp
jp
lret
sub
sbbb
lret
push
push
repnz
jne
and
repnz
decb
cmpsl
fstpt
jno
mov
outsb
sar
mov
lods
daa
or
sbb
jb
outsb
std
sbb
mov
pop
add
mov
idiv
sbb
ljmp
cwtl
std
push
stc
sar
pop
mov
pop
in
adc
pushf
inc
aad
daa
pop
popa
mov
add
mov
lods
stc
xchg
mov
fisttps
cmp
std
jne
pop
sub
sbb
push
sahf
std
add
loope
jl
mov
xor
dec
push
mov
push
jp
dec
push
out
mov
and
push
outsl
ret
xchg
and
inc
xchg
flds
movsb
jp
mov
imull
xor
adcb
and
cs
mov
leave
outsb
dec
mov
mov
cmp
mov
or
cmp
sbb
jns
stos
out
pop
testl
int3
push
mov
mov
test
movsb
or
es
pusha
jp
fs
mov
mov
addr16
inc
fs
cltd
rorl
scas
sbb
in
mov
setp
std
aas
loopne
mov
outsl
push
cmpsb
xor
sub
push
lds
rcrb
jp
push
inc
hlt
in
fisubl
mov
rolb
xor
adc
std
loope
push
stos
hlt
sarb
and
jmp
aam
es
test
fmull
fs
jnp
cld
mov
mov
push
lahf
mov
push
add
adc
cmc
hlt
cmp
push
fucomp
dec
cli
iret
scas
andb
outsb
data16
xchg
out
mov
imul
adc
data16
ljmp
and
xchg
jl
mov
xchg
push
sbb
push
dec
jmp
push
rcrb
xor
lret
cli
iret
ret
xor
imul
xchg
dec
ret
and
jno
push
icebp
test
dec
push
pop
pop
cmp
stos
fs
cmpsb
add
in
in
mov
sbb
jg
mov
cs
inc
adc
shrl
mov
xor
mov
cmp
xor
sbb
sub
inc
lods
mov
or
dec
imul
jge
dec
jle
pop
mov
jle
mov
xchg
shrb
cmp
xchg
ljmp
nopl
pop
cmp
or
loope
insb
cmp
mov
pop
cmp
repz
mov
mov
lret
xchg
test
mov
adc
push
sbb
or
push
jnp
fistpll
sbb
in
es
in
push
jle
and
out
icebp
push
push
sub
jns
add
mov
push
fwait
dec
pop
mov
test
xlat
dec
in
or
in
stos
sbb
xor
push
ficompl
or
cmc
mov
push
cwtl
adc
ret
xor
divl
push
ret
scas
cld
dec
outsl
enter
lahf
add
cmp
mov
xor
and
cmc
popa
test
movsb
and
jecxz
pop
js
fwait
dec
popa
cli
jno
cs
jecxz
adc
imul
ss
rcrl
pop
ret
inc
push
inc
mov
std
adc
jg
fisubs
pop
sbb
mov
mov
inc
inc
pusha
sub
fbstp
popa
or
fistl
daa
insl
fwait
xor
test
mov
les
xchg
sub
mov
inc
mov
sub
push
add
xchg
imul
stc
xor
lret
or
and
and
ret
outsb
clc
leave
inc
sub
out
jmp
stc
or
mov
sbb
ud0
inc
xchg
push
imul
negb
jno
roll
sbb
hlt
push
inc
mov
xor
push
test
inc
mov
frstor
add
inc
fsubl
sti
push
hlt
aaa
or
imul
dec
xor
jge
std
int3
movq
and
and
dec
call
out
and
gs
movsb
cwtl
jle
push
les
pop
and
data16
inc
add
sbbl
mov
mov
data16
inc
dec
imul
test
adc
rclb
push
ss
adc
jne
dec
xchg
add
sahf
test
adc
cli
xor
mov
lret
or
inc
rclb
mov
pop
test
cmp
dec
pop
or
pop
sub
out
in
gs
mov
sbb
nop
jge
arpl
adc
stos
jo
mov
fisttpll
pop
sub
jno
inc
aad
loop
in
xchg
je
dec
out
jl
mov
cmpsl
inc
hlt
in
pop
jmp
rcl
mov
loope
and
fidivrl
imul
jns
insb
in
scas
loope
push
push
xchg
insb
ds
cmp
pop
mov
test
je
loop
cmp
mov
in
lods
inc
popa
repnz
gs
out
imul
rcr
mov
iret
dec
ljmp
xchg
pushf
dec
mov
dec
mov
in
jecxz
cmp
enter
pop
cmp
movsb
cli
rclb
shr
scas
and
daa
dec
test
stos
pop
adc
icebp
mov
ja
cmp
xlat
jle
sahf
repnz
mov
cmp
xchg
or
adc
ret
pop
shr
cmp
bound
and
ss
adc
mov
mov
mov
and
imul
das
leave
out
pop
sub
arpl
lahf
stc
or
neg
test
lret
adc
sahf
out
pusha
pop
sbb
inc
stos
push
sbb
std
addr16
stos
xor
into
pop
jo
push
jmp
lret
adc
jb
ds
and
fisubs
xchg
lcall
cmpsb
xor
mov
lcall
pop
add
cli
adc
sti
lahf
mov
stos
jnp
xor
rolb
jnp
or
mov
xchg
add
leave
test
fsubp
imul
popf
add
les
dec
arpl
nop
lods
shll
pop
stc
pop
mov
std
nop
call
jmp
gs
sub
inc
inc
add
repnz
jns
xlat
xchg
repnz
mov
sti
and
push
ds
testb
cmp
outsl
mov
ret
stos
xchg
ljmp
and
je
pop
sub
xchg
out
outsb
int
shrl
jne
popf
push
insl
jmp
cwtl
push
pop
int
mov
movsb
and
xchg
rorb
cmp
loope
push
mov
test
push
cwtl
stos
insl
adc
push
daa
xchg
xor
aad
add
pop
jns
adc
stc
jns
lret
or
mov
in
push
pop
rcrb
pop
sbb
aaa
mov
and
rcrb
jno
add
jg
cltd
out
sbb
iret
pushf
jb
imul
arpl
push
jns
fnstsw
scas
mov
lds
rorl
repz
sbb
in
cmp
jae
adc
pushl
jge
lock
movsl
mov
aas
jno
cmpsb
bswap
daa
inc
sbb
in
int
in
add
xor
cmp
mov
std
leave
xchg
clc
or
jl
out
add
cmc
adc
mov
push
repz
movsb
imul
pop
jmp
into
push
not
add
or
sahf
fstps
xorl
mov
sub
push
cs
push
xchg
outsb
sbb
add
in
pusha
fimull
and
mov
lea
mov
dec
ficoms
add
xor
mov
add
xor
daa
pushw
aas
ljmp
shrb
pop
or
lcall
xor
stos
push
and
sbb
in
push
out
pop
leave
cmc
jnp
sti
pop
cmp
inc
lds
jge
ds
pop
push
icebp
dec
out
scas
fwait
mov
les
xchg
mov
or
mov
cvttps2pi
and
mov
aas
lds
cmp
xchg
mov
scas
pop
pushf
movsb
dec
inc
jo
repz
test
testl
mov
mov
jno
push
mov
lret
xchg
pop
cmp
push
sbb
lock
mov
ficomps
imul
lret
fwait
xor
into
cltd
dec
and
or
xchg
iret
mov
cmp
cmpsb
stos
cld
jo
jbe
das
int
hlt
mov
lret
call
mov
rclb
into
cmp
adc
dec
cmc
cmpsb
pop
stc
jmp
push
scas
push
cmc
ljmp
sbb
call
mov
jo
adc
adcl
enter
lea
mov
mov
add
insb
inc
out
out
inc
fisttpl
mov
gs
les
andl
cmpsl
js
sbb
sahf
mov
shl
movsl
out
mov
sbb
jbe
dec
xchg
fistps
sub
push
adcb
test
lahf
or
mov
jno
dec
inc
outsl
cmp
ret
insb
js
inc
sbb
sub
sub
fidivrs
inc
mov
sub
scas
jl
dec
clc
sbb
nop
inc
pop
dec
repnz
mov
sbb
push
shr
cmp
mov
mov
pop
jge
mov
aaa
out
mov
fimuls
movsb
icebp
or
jmp
adc
add
mov
jl
nop
or
cwtl
dec
jge
mov
out
aas
out
test
jp
hlt
sub
mov
aaa
push
sbb
imul
call
dec
add
jo
jg
in
outsl
lret
sbbl
mov
ret
mov
aaa
in
jmp
push
lcall
insl
push
cmp
arpl
arpl
repnz
lods
mov
fdivr
push
xchg
mov
subl
push
and
cmp
scas
pusha
pop
sub
dec
pop
fisubl
jle
repnz
mov
movb
outsb
cmp
shl
mov
mov
movsl
outsl
add
mov
rorb
xchg
clc
fidivrs
push
and
pop
popa
out
sub
test
pop
in
sub
push
pop
enter
int3
pop
xchg
cmp
xorb
jle
lahf
cld
fsub
outsl
mov
movsb
ret
pusha
mov
sub
xchg
mov
movsl
sub
icebp
enter
xchg
push
adc
adc
jecxz
dec
push
pusha
cmp
sub
lcall
ds
insb
stos
loop
jb
in
dec
jae
cmp
jae
das
sbb
outsl
ja
data16
in
cltd
cmpsl
lret
movsl
imul
test
push
out
std
cmp
xchg
mov
or
pop
adc
iret
jmp
jp
dec
out
pushf
orb
adc
hlt
xchg
shll
mov
ss
push
outsl
xchg
or
mov
aas
fmull
xchg
shl
mov
stos
inc
add
mov
int
mov
dec
and
shlb
hlt
sub
test
je
jno
pcmpeqb
outsb
mov
inc
popf
insb
xor
mov
jnp
push
jae
or
inc
aad
iret
gs
xor
cmc
je
pop
sbb
dec
pop
cmp
shr
cmp
daa
mov
out
andl
fstpl
mov
pop
es
xor
push
mov
push
cltd
in
sbb
in
cs
pop
orl
ret
rclb
push
popa
jns
stos
push
cli
inc
je
xor
cld
push
insl
push
cltd
fmull
lds
ret
mov
sub
sub
jmp
into
cmp
dec
push
rcrl
inc
pop
mov
mov
hlt
ret
jns,pn
mov
hlt
loop
sbb
call
jo
aas
jg
fwait
decl
dec
mov
jg
andl
or
jle
ret
mov
xchg
sub
ror
jbe
mov
insl
adc
movsb
mov
mov
mov
inc
js
rolb
into
xorl
lcallw
filds
adc
fstl
mov
sar
sub
icebp
adc
mov
and
add
jl
sbb
sbb
orl
insb
out
add
or
std
rcll
mov
push
out
xchg
adcl
aam
fdivs
xor
add
push
mov
mov
mov
test
divl
imul
add
adcl
xchg
scas
mov
push
xor
cmp
mov
je
xor
push
imul
stos
outsb
pop
jns
imul
hlt
test
shll
mov
xor
ja
in
jl
lods
mov
mov
cs
xor
pop
jb
fnsave
add
dec
or
push
std
lods
ss
adc
nop
repnz
cmpsb
out
cmp
adc
sbb
pop
adc
daa
sub
subb
jo
fsubs
fs
lret
push
push
and
mov
out
inc
imul
cli
mov
call
push
cld
cli
repnz
aam
in
push
cmc
iret
pushf
hlt
fnstenv
xor
fsubrl
aad
inc
rcrb
mov
mov
sbb
fnstcw
bound
sub
loope
mov
dec
jno
scas
sbb
lds
and
xor
enter
in
cmp
in
dec
dec
and
cmp
popf
sbb
lods
xchg
movsl
add
cvtps2pd
outsl
dec
cmp
test
in
add
mov
enter
inc
xchg
dec
daa
pop
push
push
mov
in
inc
xlat
inc
mov
pop
test
jo
addr16
imul
stos
pop
push
adc
pop
jno
push
pop
sbb
rol
adc
out
cmp
pop
push
lods
fmul
iret
pop
cmp
movsl
pop
adc
bound
mov
mov
sbb
lds
inc
mov
adc
jns
loope
ret
push
add
adc
in
inc
pop
in
adc
mov
jnp
adc
cmp
lds
and
subps
mov
clc
xchg
dec
loope
mov
mov
cmp
or
pop
rolb
mov
out
aas
pop
fidivl
dec
mov
xchg
or
cltd
lods
xlat
iret
aas
ljmp
out
fwait
push
dec
mov
xor
dec
cmpsb
mov
movsl
and
or
popf
jae
push
dec
mov
dec
xchg
mov
sbb
insb
scas
inc
mov
movsl
mov
pop
test
pop
add
push
xchg
in
in
push
fcoms
mov
xchg
insb
lahf
sub
ljmp
imul
xchg
sbb
roll
mov
jnp
adc
insl
cmp
fsubp
outsl
fiaddl
push
sarl
jg
addr16
daa
mov
pop
xor
sub
stc
pusha
push
out
dec
add
in
cltd
pusha
sbbl
in
js
mov
es
and
adc
sbb
inc
adc
xor
fstl
iret
mov
or
push
xor
sub
pop
fwait
jp
and
push
clc
fcompl
in
cmpsl
sahf
add
xchg
imulb
mov
add
xchg
adc
enter
out
hlt
test
in
rorl
jb
push
sti
scas
jbe
pop
xchg
mov
js
cmpsb
pop
enter
inc
rorb
fcoms
mov
cmp
push
and
nop
pop
mov
mov
int3
sub
add
out
push
mov
cmp
xchg
xchg
gs
sti
dec
in
scas
mov
cs
lods
push
mov
push
push
pop
inc
dec
imul
add
into
adc
in
add
or
mov
add
dec
pop
xchg
push
and
dec
add
les
pop
pop
cltd
jl
inc
cmp
cld
clc
mov
adc
repnz
mov
stos
xor
shlb
adc
sub
or
fidivrl
sub
popa
cli
lret
jns
mov
bound
mov
into
insb
ror
shll
cltd
movsl
push
mov
sbb
or
mov
gs
mov
inc
add
xchg
mov
mov
mov
pushl
out
cmc
loop
cmp
shll
jg
inc
adc
fnstenv
push
mov
lods
inc
icebp
sub
mov
imul
in
xor
mov
aam
clc
add
aam
shll
mov
sbb
pop
enter
dec
xor
popf
xor
cmovb
pop
and
fisttpll
or
mov
stos
and
sbb
pop
jo
imul
cmpsb
fsubr
mov
mov
jne
adc
stos
std
cs
mov
sbb
push
sahf
xchg
ja
jne
sti
xor
jle
stos
mov
xchg
scas
lds
dec
xchg
inc
pop
rcr
js
fisubl
push
pop
mov
dec
adc
adc
xchg
out
mov
and
cmp
mov
lret
lret
cmp
jno
scas
push
and
jl
mov
int3
add
ret
or
or
pop
push
sub
in
rclb
xor
dec
or
mov
push
mov
jge
cmpsl
sbb
sbb
dec
jg
adc
je
mov
pop
inc
fsub
mov
sbb
lret
xor
leave
mov
pop
fsts
lods
sub
adc
in
push
lahf
sbb
lahf
pop
negl
lods
mov
popf
shll
sbb
jmp
repnz
mov
push
lcall
aad
push
xchg
test
cmp
lahf
pop
cld
mov
add
add
push
dec
fld
movsb
stos
scas
out
daa
rorl
adc
je
push
mov
pop
xorb
ljmp
repnz
sbb
pop
push
loop
pop
add
mov
lcall
pop
scas
jnp
lds
stos
mov
aad
rcrb
mov
sbb
adc
cmp
pop
mov
sti
imul
pusha
mov
in
jl
cmp
mov
pusha
jmp
movsl
lcall
xor
test
sbb
mov
cmp
cltd
cltd
cmpb
push
pop
mov
std
jmp
clc
xchg
cmp
sbb
dec
lds
out
mov
or
push
loope
push
or
lret
idivl
add
mov
jbe
jnp
insb
fnstenv
lret
sbb
lcall
sub
or
mov
add
push
jg
ja
mov
fdivr
or
in
movsb
cmp
fs
out
mov
frstor
mov
mov
lea
mov
sbb
js
movsl
das
dec
jb
clc
pop
out
and
or
out
iret
bound
push
or
in
lea
and
jbe
fcoml
in
push
in
into
lds
aam
notb
and
mov
negb
lcall
mov
loopne
sub
rcl
idivl
xor
popf
aaa
test
les
imul
fs
jecxz
rcrl
outsb
dec
sub
div
mov
cmpsb
jecxz
xorb
jge
arpl
adc
jno
xchg
in
lret
cmp
shll
mov
andl
popf
dec
lock
js
adcb
sbb
shl
test
dec
jl
popa
adc
ja
cmp
cwtl
insb
popa
aam
dec
test
dec
cmc
mov
xchg
mov
mov
mov
xchg
test
xor
in
pusha
test
int3
hlt
dec
or
inc
pcmpeqw
push
dec
lods
mov
or
inc
outsl
push
xchg
lcall
jp
adc
mov
jl
push
and
dec
and
xchg
mov
jae
cwtl
paddusb
aaa
xchg
mov
jecxz
arpl
jge
test
adc
mov
stc
faddp
jbe
xor
xchg
iret
xchg
lock
push
mov
xchg
mov
stos
jl
fdivp
in
fcmovnb
xchg
fisubrl
jno
pushf
lock
out
cmp
inc
fnsave
addr16
repz
push
mov
ret
xlat
popa
push
repz
push
and
fimuls
repnz
fstpt
dec
les
in
pop
push
int3
ljmp
sub
lret
shl
dec
pop
lahf
sub
add
imul
je
cs
in
leave
mov
lds
cltd
inc
dec
mov
out
fidivrl
xor
and
mov
ss
adc
sti
aas
into
lea
jne
ret
xor
adc
pop
mov
jb
dec
sub
mov
and
shrb
push
rcrb
xor
test
and
stc
rcrl
test
mov
and
fsub
test
movsl
jbe
stc
push
adc
pop
pop
xchg
inc
fs
fadd
dec
sub
jl
sub
test
sbb
out
adcl
inc
in
push
inc
pop
rorl
fwait
sub
pop
cwtl
repnz
fdivs
pop
daa
hlt
mov
dec
insl
xchg
add
xor
mov
mov
rorl
insl
aam
gs
stos
sbb
mov
jns
test
push
in
jae
dec
je
stc
repz
xchg
mov
rcll
pop
aad
fwait
cmp
mov
pushf
jmp
inc
cmp
and
cli
sub
or
ljmp
vpor
shll
mov
dec
scas
aaa
adc
into
fdivrl
cmpsb
dec
addr16
pop
adc
xor
jnp
push
jae
hlt
mov
xor
jnp
xor
mov
out
jb
fs
and
jmp
or
js
push
dec
into
rol
lea
loopne
jp
in
das
je
or
mov
dec
arpl
xor
xor
or
out
in
ret
xchg
aad
sbbb
mov
out
insb
ja
jbe
cmpsl
rcll
cs
loopne
in
je
sar
mov
fcmovne
scas
push
add
mov
jg
adcb
ja
inc
mov
jg
cmp
xor
pop
inc
sub
xchg
mov
and
and
and
xchg
cmp
push
filds
jae
jp
popf
sbb
pop
xor
mov
sub
or
fists
add
scas
clc
test
in
out
jmp
cmp
and
inc
imul
mov
sub
dec
cli
cmpsb
pop
lock
fcoml
mov
xor
xor
ret
inc
test
cltd
movsb
and
test
leave
ret
lret
ror
and
or
push
scas
jmp
shll
mov
andb
push
shll
mov
lods
testl
or
lods
mov
cmp
pop
out
leave
cli
xor
or
adc
fidivl
inc
add
pop
mov
rcrb
dec
or
clc
add
out
pop
popa
push
cmp
pop
add
or
cmp
dec
push
mov
sbbl
jno
shr
int
pop
insb
bound
pop
scas
rorb
cmp
xlat
sub
pop
mov
fidivs
sti
dec
adc
movsb
sub
mov
insl
aad
daa
jle
or
shll
push
data16
mov
inc
mov
mov
push
aad
mov
testl
lret
scas
sbb
scas
sub
outsb
cmp
or
jp
add
pop
sub
mov
aam
xchg
out
mov
sub
jg
sti
clc
dec
dec
xchg
sbb
push
repnz
dec
sub
test
addl
stc
test
daa
popf
movsb
and
test
ret
sbb
inc
xor
pop
push
xchg
push
mov
inc
sbb
sbb
sbb
pop
test
xchg
rol
pop
add
pop
sub
iret
stos
add
jb
nop
ljmp
cmpsb
mov
outsl
push
sub
pop
cmp
stc
inc
mov
or
lret
idivl
inc
pop
addl
loop
int3
jp
call
cmpsb
mov
out
pop
iret
mov
adc
sub
bound
jne
aad
test
adcb
arpl
shlb
int
enter
int3
mov
sub
add
push
mov
sub
push
out
or
adc
std
rcr
loopne
arpl
mov
enter
push
gs
adc
movsb
sti
or
shll
call
dec
inc
addl
mov
jno
repnz
and
popa
xor
cmp
cwtl
aam
leave
stos
cld
outsl
bound
xchg
pop
or
in
loop
cmp
test
or
or
xor
inc
push
xchg
sti
jecxz
cmpsb
adc
cmc
cmp
jge
lds
frstor
sbb
in
xor
cmpsl
out
test
pop
sbb
or
shrb
push
xorl
cli
inc
push
fisubrs
ljmp
or
jne
test
xor
cmp
push
or
fcoms
inc
je
fs
dec
pop
imul
les
aad
cmp
sub
cwtl
stos
cmp
push
arpl
jge
popf
sub
mov
adc
adc
mov
fistps
jo
push
es
cmp
pusha
es
xor
mov
imul
lods
mov
data16
stos
stos
pop
movsb
mov
lods
dec
dec
lcall
dec
fistpl
notb
lea
fsub
mov
dec
jmp
in
imul
sbb
mov
or
inc
inc
inc
les
sbb
or
imul
pushf
push
hlt
js
adc
mov
jmp
hlt
stc
std
shl
xchg
mov
sbb
xor
mov
iret
push
lahf
inc
and
iret
sbb
movsl
mov
negl
daa
mov
jo
sub
and
add
out
in
push
hlt
xchg
mov
push
mov
jbe
dec
add
test
ds
inc
mov
mov
pop
out
mov
lds
bnd
or
and
imul
push
fs
and
jp
in
divb
pop
xor
cmp
nop
mov
cltd
lea
imul
loop
out
scas
gs
jo
imul
stos
mov
push
cmp
ljmp
cmpsb
inc
dec
sub
xchg
fmull
push
iret
sbb
pop
popa
cmp
lods
ljmp
loop
pop
pop
sub
dec
loop
pop
cmp
push
arpl
cmp
addr16
lods
es
add
andb
xchg
sbb
and
jge
ljmp
mov
bound
pop
hlt
loopne
fxam
mov
arpl
movsl
dec
dec
into
mov
ret
in
int3
sbb
sub
and
sbb
or
test
cli
xchg
mov
es
outsb
int
lods
xchg
sub
stc
xor
pop
loopne
pusha
mov
nop
and
push
inc
sub
addr16
insb
mov
inc
mov
mov
inc
and
dec
les
jg
shrl
jno
push
roll
test
xlat
push
std
int3
pop
test
ds
andb
pushf
sbb
dec
data16
adc
and
adc
pmulhw
scas
lahf
into
push
xchg
gs
aad
inc
test
cltd
loop
or
add
aad
js
dec
mov
clc
xchg
jp
das
xlat
xchg
xchg
repz
add
ja
add
gs
outsb
add
add
daa
pop
jo
xchg
adc
aas
pop
in
xchg
dec
xchg
cltd
scas
sbb
mov
sub
inc
jmp
mov
adc
sub
fdivs
iret
inc
pop
and
cmp
mov
addl
inc
push
movsb
arpl
mov
jp
mov
pop
xchg
fs
popa
inc
sub
stc
mov
cli
jae
in
cltd
cmc
add
jp
sbb
or
sub
hlt
roll
mov
dec
pop
cwtl
push
and
out
mov
rcrl
daa
inc
daa
pusha
mov
movsl
dec
inc
repnz
bnd
sbb
nop
shl
xor
lods
xor
or
imul
or
xor
cmp
ds
ja
pop
shlb
mov
jbe
loope
hlt
jbe
scas
sarb
out
jle
pop
cmp
xorl
push
inc
jne
lds
dec
push
rcl
jp
push
sub
insl
mov
mov
cmpb
mov
cmp
pushf
push
adc
mov
pushf
adc
mov
dec
jle
or
jg
ss
je
fistpll
ret
dec
dec
mov
cmpsb
out
repz
jl
call
xor
cs
push
imul
add
jle
test
mov
inc
repnz
or
add
push
int3
xchg
xchg
or
push
jge
sub
jmp
adc
pop
leave
std
fadd
outsb
xor
push
std
or
out
or
push
pop
mov
ret
xor
gs
stos
pop
mov
insb
or
out
dec
mov
mov
inc
or
jp
mov
pusha
mov
cmpsb
sub
or
cmp
jge
jg
shlb
rcrl
popa
hlt
test
cmp
pop
xor
fprem1
int3
add
pop
dec
mov
fidivrs
cmp
iret
ljmp
bound
jnp
outsb
sbb
shll
outsb
dec
xchg
adcb
pop
xchg
sub
jecxz
lods
in
jae
stos
lds
or
add
pop
lods
sub
push
hlt
pop
mov
cli
adc
and
loop
stc
cmp
jp
test
jecxz
in
lret
fisubrl
sbb
mov
dec
xchg
dec
in
add
add
daa
cltd
sbb
aad
aad
dec
inc
mov
adc
mov
rclb
iret
xchg
out
fwait
bound
cmc
sbb
std
aas
xor
hlt
negl
push
insb
fmull
jl
jb
or
stc
test
mov
jbe
xchg
mov
imul
push
aad
xor
out
xchg
stc
jecxz
les
mov
inc
inc
jo
out
cmp
rorb
dec
cltd
sti
mov
nop
sbb
pop
adc
push
mov
sub
and
and
ret
adc
jnp
adc
push
cmp
frstor
or
sub
mov
add
and
jp
js
mov
and
inc
pop
scas
jno
ljmp
bound
push
ss
sbb
dec
rol
and
roll
adc
jecxz
or
push
aad
xor
cmpl
adc
outsb
pop
fldenv
popf
mov
mov
lret
mov
int3
push
push
push
int3
pop
je
inc
fwait
sarb
inc
lods
mov
repnz
push
pop
lea
pusha
add
loop
mov
out
dec
fwait
pop
xor
push
cmpsl
adc
fcmovne
jae
stos
cltd
xchg
mov
or
mov
cltd
test
sbb
arpl
or
aad
popa
xlat
out
xor
out
push
test
pop
mov
sbb
lds
fptan
ret
in
inc
add
repnz
test
inc
pop
data16
adcb
in
mov
ja
dec
pop
pop
or
aas
jb
push
push
push
mov
lret
push
ljmp
cld
sub
pop
dec
loopne
cmpsl
cld
inc
dec
pop
xchg
sbb
loopne
inc
push
mov
repnz
fwait
sub
or
jb
js
dec
hlt
mov
push
aam
rcrb
into
jle
or
inc
mov
addr16
test
jl
imul
xor
das
mov
clc
sbb
addr16
scas
ja
and
dec
insl
mov
sbb
iret
out
jg
mov
push
jb
inc
and
repnz
icebp
pop
xor
inc
xor
icebp
push
fldenv
jae
add
in
mov
xor
jecxz
cmpsl
out
mov
add
jns
sbb
imul
mov
cmp
fstps
and
jnp
popf
ja
dec
test
sub
cmc
jecxz
xor
mov
sbb
sub
mov
push
std
push
stos
out
push
fnstcw
xchg
mov
jbe
jge
call
lock
mov
pop
mov
push
or
jp
dec
dec
inc
les
dec
popa
jl
add
test
xchg
mov
lcall
rolb
pop
jge
dec
xchg
int3
rcr
ret
int3
adc
fidivs
arpl
xlat
out
sahf
loope
lods
fistl
jg
jnp
add
and
enter
fdivs
or
aas
jecxz
pop
stos
das
push
mov
cmpsb
jle
addr16
inc
js
sub
add
dec
movsb
pop
in
add
lret
scas
loopne
cwtl
push
add
sar
fwait
pop
shlb
fdiv
incl
sub
adc
jge
dec
cltd
cmpsl
out
pop
adc
adc
fwait
inc
mov
dec
pop
cld
loope
out
jne
xlat
adcl
divl
jo
inc
xchg
push
xchg
ror
setne
push
or
loop
in
push
or
sub
dec
fs
in
lds
lods
dec
stos
call
xchg
xor
imul
jl
mov
out
popl
imul
pop
or
rcll
xchg
or
jp
les
mov
add
jmp
xor
stc
movsl
inc
clc
stos
setle
xchg
xor
or
or
pop
lcall
cs
push
push
xchg
or
icebp
pop
inc
jb
sbb
ss
xor
out
or
xor
ds
jbe
adc
push
mov
scas
jb
jmp
and
call
fistl
sarl
or
push
mov
cmpsb
loope
lahf
push
into
lods
mov
lahf
outsb
mov
dec
arpl
pushf
mov
push
cmp
iret
pop
push
xchg
push
add
jbe
pop
and
addr16
push
adc
adc
or
inc
cwtl
cld
mov
mov
dec
push
jge
sbb
sbb
xchg
add
sbb
dec
je
fs
aad
arpl
sub
frstor
jg
test
imulb
in
or
sti
xor
push
incb
stos
mov
cli
sahf
mov
jnp
loope
jl
scas
cmp
testb
decl
lods
dec
mov
mov
out
fiadds
imul
mov
xor
lcall
xchg
xor
inc
push
je
fdivrs
cwtl
popf
mov
mov
sub
call
or
add
jnp
cld
pop
fstpt
jge,pn
push
pop
in
and
mov
jne
sar
lock
adc
push
mov
jb
lahf
mov
ret
xor
xchg
lock
sahf
pop
jno
xor
sub
fidivs
and
ret
sub
sbb
lds
mov
es
sbb
inc
negl
les
xor
mov
lods
je
mov
test
stos
sbbb
repz
push
das
adc
in
or
mov
pop
fdivl
dec
sub
mov
fsubrp
adc
add
pop
xchg
jmp
lods
popa
and
xor
add
inc
mov
scas
push
in
mov
push
insb
dec
lcall
sti
rolb
adc
xor
adc
in
out
aad
and
mov
or
jmp
addr16
cmp
mov
mov
xor
inc
loopne
nop
jl
imul
clc
sub
movsl
pop
xchg
sahf
rclb
das
dec
pop
fs
push
div
out
mov
jl
das
adc
pop
pop
ljmp
push
cmpsl
pop
ret
lahf
push
data16
jno
push
xor
ss
add
gs
dec
popa
mov
push
push
and
repnz
cwtl
iret
icebp
test
xor
incl
mov
pop
mov
cmp
jno
dec
aas
je
sub
stos
pop
int
add
sarb
jl
inc
iret
cmpsb
aam
test
fs
jnp
int3
lahf
dec
dec
movsb
dec
pop
test
scas
out
iret
dec
adc
dec
xor
je
dec
shrb
leave
jg
sbbl
push
mov
mov
out
push
rorb
cmp
pop
cltd
pop
dec
push
pusha
and
arpl
rolb
scas
idivb
jge
xchg
and
fsubrl
jl
scas
mov
ss
in
fiadds
icebp
xorb
cmpsl
inc
dec
test
arpl
and
movsb
add
sbb
popf
test
dec
push
mov
jno
and
jno
ficoms
push
lcall
inc
push
lret
mov
dec
cld
xchg
mov
mov
repnz
daa
xchg
cld
cmpsb
push
pop
lret
dec
cltd
xor
dec
dec
loop
lret
push
or
loopne
add
mov
ljmp
fildl
mov
aam
sbb
incl
cs
mov
add
ret
add
popf
outsl
mov
sbb
xchg
inc
xchg
mov
scas
aas
ljmp
dec
mov
testl
push
jae
ficompl
in
sahf
jnp
sbb
divb
mov
mov
lret
cwtl
and
xlat
jb
adc
shrl
and
jle
add
fmull
mul
icebp
mov
jp
or
jne
xor
mov
loope
pusha
mov
mov
int
data16
sarb
jb
add
adc
xchg
call
rcr
in
outsl
add
add
nop
sbb
xchg
iret
nop
mov
xor
test
sbb
add
mov
push
xchg
or
adc
cmp
test
out
sub
or
jbe
stos
xor
xchg
aad
mov
push
shll
addr16
mov
xor
gs
jo
outsl
ja
ds
adc
aaa
scas
adc
jge
adcl
xor
jmp
push
xchg
or
jo
insl
movsb
out
mov
insl
sbb
push
notb
test
mov
inc
stos
push
imul
dec
pop
sub
sbb
aam
lods
aaa
push
jne
mov
or
jmp
cmp
fcompp
call
jle
cli
data16
push
inc
aad
loope
mov
cmc
lods
notb
push
sub
repz
mov
ret
imul
sub
cli
xor
int
ljmp
int3
adc
imul
out
push
pop
pusha
out
mov
cld
arpl
mov
popa
mov
ja
mov
xlat
adcb
mov
loopne
push
dec
cli
ja
push
xor
fwait
loope
mov
mov
dec
in
or
xchg
push
fdivrl
mov
movsb
arpl
js
adc
testb
mov
rcrb
mov
addr16
popf
aad
bound
dec
fnsave
push
lods
jge
mov
mov
popa
test
or
dec
mov
in
xchg
adc
and
sbb
call
cmp
fwait
sbb
cmpsl
out
or
add
and
aaa
lcall
xor
mov
add
sbb
xchg
addr16
je
fnsave
mov
out
sub
hlt
test
xchg
xor
pop
pusha
inc
dec
sub
push
xchg
and
out
sub
and
mov
loope
pop
push
aad
mov
jp
or
jg
inc
dec
test
pop
mov
enter
jns
cmpl
sbb
jge
jne
out
rorl
lock
out
out
push
enter
dec
xchg
push
xor
jg
and
lock
cmp
fists
dec
out
or
pop
jae
xchg
dec
test
add
jmp
adc
mov
fcomps
push
jbe
clc
sbb
jb
xorl
jnp
mov
inc
pop
cmp
insl
jge
daa
into
dec
aam
pop
outsl
push
or
idivl
mov
jp
pop
inc
inc
pop
sub
stos
fsubrs
xchg
or
jae
imul
sti
push
loope
fdivrl
subw
cmp
insl
cmp
fisttpl
repnz
and
enter
and
cmpsl
add
jp
sub
scas
mov
fimuls
xlat
shlb
je
jp
call
es
addb
push
mov
lret
adc
push
ror
push
adc
push
mov
mov
add
faddl
cmp
mov
in
dec
cmp
imul
stos
into
inc
out
les
inc
fstpt
outsb
stos
lods
aam
add
mov
xchg
adc
ret
mov
cmp
or
mov
out
cmpsl
rol
popf
jne
sbb
adc
aaa
push
ss
mov
stc
fldenv
push
scas
mov
push
and
push
pop
scas
cmpb
icebp
arpl
ret
scas
rcrb
test
xchg
hlt
and
mov
orl
cmpsl
aas
inc
leave
mov
and
add
add
ds
in
cmpsb
andb
push
or
xchg
cmp
mov
int
dec
mov
pop
adc
fsubrs
out
inc
pusha
loope
sbb
rcrb
mov
mov
cmpsb
mov
fnstcw
sar
fstpt
ljmp
ficomps
in
sbb
leave
jmp
fsubp
cmp
imul
inc
add
adc
out
int3
dec
dec
cmp
outsb
adc
adc
jecxz
sbb
lahf
add
lock
lods
inc
add
insl
sbb
add
dec
pop
sti
adc
pop
fmuls
repz
sub
mov
jecxz
popa
shll
movsb
pop
mov
ret
aaa
lret
out
stos
jl
or
mov
fnstcw
mov
lock
lahf
mul
mov
jne
aas
add
testb
mov
xor
mov
icebp
es
mov
scas
lock
sar
fimull
inc
imul
fstpl
addl
insb
mov
cvtps2pd
sub
push
push
mov
clc
push
jb
or
push
ja
sub
jl
xchg
clc
xor
movsb
icebp
sahf
insb
jns
popa
cmpb
xor
fsubrs
lahf
aaa
mov
and
inc
paddd
xchg
jg
mov
dec
mov
push
ljmp
rol
mov
push
jbe
je
adcl
cld
xchg
adc
dec
sbb
cmpsl
mov
push
adc
add
push
sbbl
dec
inc
pop
daa
push
repz
adc
lock
lcall
icebp
cli
in
clc
dec
das
inc
adc
mov
dec
movsl
je
inc
add
or
or
jl
push
mov
shrl
xchg
sbbl
fcmovne
stc
or
jmp
sub
adcb
cltd
mov
inc
scas
mov
lods
test
xchg
sbb
loope
dec
das
lea
incb
cmp
sub
dec
add
outsl
sbb
push
inc
mov
cltd
aas
pop
test
xor
add
lods
mov
hlt
jle
push
lds
sub
jbe
shll
popa
daa
push
jnp
inc
arpl
mov
sub
imul
cli
sti
push
jmp
push
push
mov
cli
or
or
mov
arpl
movsb
dec
mov
mov
pop
push
mov
add
pop
imul
test
add
cmpsb
inc
in
dec
dec
int3
pop
repnz
or
fildll
or
ss
loopne
loop
adc
and
dec
cwtl
mov
cltd
sub
int
sti
lds
mov
sti
decb
or
in
lret
jmp
mov
rorl
jmp
fwait
mov
pop
ficoml
mov
add
shr
push
cmc
and
cmp
out
jl
pop
test
add
sub
stc
lock
pop
mov
push
sbb
xchg
stos
mov
mov
xor
mov
xchg
xchg
fwait
or
sub
and
lods
icebp
mov
outsb
sub
arpl
test
repz
dec
push
pop
pop
fs
mov
dec
rcll
inc
aaa
or
lea
cli
leave
sbb
mov
push
sbb
push
sub
mov
fwait
std
and
les
pop
mov
xchg
daa
shrb
imul
push
cli
add
adc
orl
iret
test
xor
push
dec
jmp
hlt
xchg
push
adc
insl
inc
inc
pop
lret
idiv
jg
pushf
out
insl
insb
push
or
imul
rorl
mov
mov
aas
daa
add
ret
add
dec
repnz
loope
testb
sub
fisubl
cs
jecxz
xchg
scas
imul
dec
jmp
ja
cmpl
inc
jns
enter
popa
loop
push
mov
rcr
or
hlt
hlt
sub
fwait
in
aas
and
jl
adc
int
mov
aaa
out
lahf
stos
enter
out
outsl
arpl
mov
xor
out
push
pop
int
fsubp
lds
adc
mov
stc
lahf
movsb
imul
jns
test
in
mov
push
push
xchg
adc
mov
mov
adc
mov
inc
xchg
inc
aas
ret
dec
pop
outsl
mov
cmp
shrb
xchg
popa
push
js
jecxz
fimull
sub
push
sub
pop
std
adc
bound
fnstcw
jg
pop
add
add
leave
jl
cmp
sub
lcall
in
fcompl
nop
xchg
lods
cmp
arpl
sub
sub
and
adc
leave
inc
fsubl
xor
repz
ret
pop
stc
popa
mov
cmc
push
aaa
inc
xchg
jbe
sub
je
inc
out
pop
xchg
fadd
nop
xchg
dec
gs
and
jnp
xlat
arpl
xchg
mov
adc
test
inc
movsl
push
cli
rolb
bound
imul
in
fs
add
out
mov
adc
push
repnz
sti
dec
lock
out
xchg
pop
jp
es
les
mov
jmp
mov
mov
bound
aam
insb
dec
das
adcl
cwtl
jge
xor
xlat
test
and
lock
shr
stos
jns
pop
and
out
pop
lret
or
jns
lret
pop
pop
xor
cld
xor
pop
mov
cmpsb
leave
mov
addr16
incb
mov
fisubrs
pop
sub
xorb
sub
in
mov
imul
aam
xor
adc
popf
xchg
ja
adcb
add
adc
outsl
test
inc
and
pmaddwd
pop
push
sarl
rclb
jp
add
fmull
jns
jmp
xlat
mov
test
push
push
repnz
cld
lcall
dec
jg
jle
mov
cmc
out
adc
dec
repnz
xchg
stos
push
popf
jo
jecxz
and
jle
jb
minps
add
negl
or
jmp
and
push
iret
xchg
jns
add
stos
push
test
fmull
mov
lds
subl
sbb
ds
pop
jno
cwtl
jge
pop
inc
adc
inc
sub
xor
movl
movsb
das
dec
xchg
not
les
gs
push
inc
daa
xchg
pop
fdivl
ds
pop
cmp
mov
movsb
pop
sti
mov
jne
push
mov
cmp
cmp
ljmp
mov
jb
call
adc
mov
ret
push
sti
cs
popf
jg
adc
or
xchg
aad
mov
ljmp
jle
cmp
stos
jmp
ja
mov
lods
push
and
lea
aam
popa
cmp
cltd
xor
sbbl
sbb
or
cmp
and
push
fstl
fbld
adc
clc
dec
jmp
in
lods
test
pop
fsubrl
xor
out
xchg
lods
imul
sub
les
sub
pop
push
fwait
int3
pop
mov
fwait
shrl
aaa
pop
xor
push
sbb
push
outsb
ret
out
mov
push
jo
fistpll
or
jl
mov
push
mov
hlt
daa
xor
mov
adc
pop
aaa
xchg
sti
pop
shlb
sub
cli
mov
xor
in
sub
lea
inc
fcom
ja
hlt
jo
xchg
cmpsb
jnp
xor
andb
sub
mov
mov
pop
dec
mov
add
out
mov
cmpsb
test
jno
rol
dec
nop
fcoms
pop
test
jbe
cmp
adc
imul
sbb
jmp
adc
dec
arpl
pop
inc
xlat
es
hlt
xchg
fdivs
lods
mov
sbb
xchg
cli
rorb
bound
xchg
jnp
sub
inc
arpl
mov
out
js
sbb
push
enter
jns
js
pop
cltd
movsb
insb
bound
push
fnstsw
aaa
sub
popf
push
and
push
mov
fwait
add
shll
ja
stos
xor
fistl
push
imul
xchg
or
sub
sub
stos
mov
dec
cmp
shll
xchg
push
stos
pop
jno
mov
jp
adc
cmc
not
mulb
mov
mov
testl
cltd
and
push
fucom
push
mov
scas
cmpsl
pop
inc
pop
pop
jge
rcr
fcoms
repnz
mov
add
pop
sbb
mov
sub
or
stc
lahf
xchg
das
inc
xor
in
adc
lods
mov
mov
add
ret
bound
fs
add
aas
aam
into
insl
icebp
aaa
and
data16
stos
xchg
cld
std
cmp
aaa
dec
sbb
jecxz
out
and
mov
stc
xchg
shrl
mov
cmc
incl
js
xchg
sub
cmp
pop
add
movb
add
bound
dec
pop
out
adc
cmp
push
dec
jbe
lcall
xchg
mov
sbb
and
mov
or
scas
pop
in
inc
fstpt
jb
mov
sar
cmpb
cli
mov
jne
int
add
xchg
mov
mov
cs
shrb
lds
jno
mov
xchg
pop
xchg
jb
cli
cs
push
jl
aad
jae
mov
cmp
sbb
icebp
dec
pop
pop
sbb
outsb
callw
mov
ljmp
push
mov
test
jnp
aad
and
cli
test
dec
push
inc
dec
mov
adc
ret
mov
adc
and
push
mov
xchg
mov
or
mov
jecxz
sub
xsha1
cmpsb
or
in
not
xchg
jb
xor
pop
add
mov
incb
dec
andl
or
mov
loop
inc
lods
imul
mov
xchg
cwtl
mov
shll
cmpsl
mov
je
xor
sub
les
jmp
lods
sub
xchg
pop
inc
subb
mov
int3
jns
mov
testb
sub
fwait
cmp
xchg
jb
sbb
and
js
add
hlt
push
lds
movsl
mov
mov
shll
xchg
iret
mov
push
sti
std
ss
notb
nop
movsl
daa
and
arpl
push
mov
inc
sbb
and
inc
adc
sub
adc
cmc
push
cmc
dec
dec
ret
ds
push
xor
enter
dec
js
lock
leave
xchg
add
add
ljmp
push
subb
mov
cmp
adc
cmp
push
stos
jae
js
rorl
insl
rorb
das
or
movsb
mov
adc
clc
mov
xchg
or
lret
xor
call
xor
mov
push
sub
sub
add
xor
sub
sub
mov
mov
sub
gs
je
xor
stc
ljmp
mov
xchg
lds
ja
je
or
jns
lock
loopne
pop
xchg
xor
ds
cmp
xor
lock
mov
in
lock
cld
fisubl
ja
adc
adc
mov
push
cmp
in
sbb
aas
cmpsb
movsl
fucomip
mov
push
mov
rol
jle
ror
lahf
mov
pusha
pop
xor
cmp
sub
fisubs
xchg
iret
fxch
shll
xor
jg
cmp
es
pop
loop
and
adc
mov
dec
sti
adc
lock
lock
sbb
xchg
xchg
adc
mov
lea
fistpll
mov
push
pop
divl
push
lods
dec
repnz
test
cmp
repnz
repz
lea
mov
add
mov
sar
scas
sti
cmp
je
xor
lock
popf
aas
pop
mov
imul
outsl
mov
dec
dec
sbb
adc
and
ss
icebp
sbb
adc
popf
js
xchg
movsb
test
add
cli
psubb
incb
shl
hlt
iret
loope
hlt
or
mov
stc
pop
pusha
add
jnp
aas
mov
add
ret
mov
adc
pop
stos
add
xor
xchg
xor
lods
mov
pop
in
loop
xchg
popa
testl
icebp
les
xor
xorb
cli
mov
dec
rclb
add
pop
jmp
xchg
stc
cld
pop
jmp
cwtl
xchg
jne
xchg
rcl
dec
adc
or
push
mov
and
or
and
mov
ficomps
pop
enter
roll
xchg
fdivrl
mov
mov
xchg
inc
jg
pop
daa
ja
bound
add
mov
jb
pop
push
add
int3
bound
movsl
lods
xchg
imul
repz
in
mov
lds
jbe
je
push
dec
fsubrl
inc
lahf
fsubs
inc
lods
loope
arpl
mov
pusha
ret
lea
call
iret
lcall
movsl
mov
cld
sbb
negl
pushf
test
insb
push
or
sbb
sbb
xor
jecxz
sbb
mov
mov
sti
rorb
notb
idivb
leave
filds
movups
dec
std
xlat
xor
mov
xchg
dec
ret
sbb
mov
ja
sbb
mov
insl
dec
xchg
xor
or
fildll
js
pusha
adc
ud2
inc
pop
sbb
push
lods
push
enter
daa
pop
repz
test
inc
iret
in
mov
clc
xor
mov
mov
pushf
cmpsb
and
fistpll
int3
push
mov
fildll
data16
push
popf
push
daa
jb
push
scas
add
inc
hlt
jae
fidivs
jmp
dec
push
call
cwtl
movsb
test
and
cmp
loope
cmpl
mov
add
xchg
out
mov
je
xchg
push
movsl
rcrl
add
mov
ljmp
cmc
ljmp
mov
cmp
ljmp
inc
cltd
aas
popa
hlt
sbb
dec
sbb
and
lock
push
fists
mov
add
adc
out
movb
add
xchg
adc
lea
fwait
imul
adc
add
test
jmp
fs
jecxz
xlat
cmp
test
mov
mov
mov
pop
and
lcall
in
ret
scas
fdivr
sub
std
add
push
test
fisubs
mov
jmp
mov
popa
dec
push
outsl
mov
scas
mov
xchg
lock
fists
rolb
insb
push
cmp
fsubl
ds
aas
ds
xchg
test
pop
cmp
or
pop
std
pop
jne
add
outsb
jg
bnd
and
subb
daa
dec
jecxz
adc
mov
mov
loopne
aam
lahf
push
ret
gs
idivl
or
popa
jg
std
arpl
pop
insl
pushf
pop
clc
or
mov
ljmp
inc
inc
jge
push
or
ljmp
dec
sub
dec
ss
js
test
cmp
mov
test
iret
sahf
push
jge
scas
sub
inc
add
addl
scas
xlat
mov
or
daa
xlat
push
push
lods
ljmp
jnp
lcall
push
jns
mov
fadds
xchg
mov
pop
clc
cld
add
sbb
pop
stos
adc
addr16
xchg
jp
dec
cld
jecxz
pop
cmpsl
decb
pop
xchg
mov
cmovno
mov
cmp
in
aam
aas
sbb
adc
xor
in
xor
jecxz
iret
je
leave
sub
movsb
cwtl
cmpsl
shr
or
add
pop
mov
push
ja
sub
push
xor
out
or
add
aad
mov
pop
mov
int
fstl
rorl
mov
inc
imul
rclb
jmp
and
cmp
bound
mov
lcall
mov
aam
mov
mov
movsb
sbb
aam
fisubrs
jge
or
cmp
ss
push
jne
addr16
out
mov
mov
jmp
pop
pop
int3
scas
jcxz
mov
repnz
pop
xchg
or
filds
das
cmp
jno
cmpsl
cmp
iret
dec
mov
inc
xlat
lea
out
sub
jp
xchg
addr16
ss
mov
shll
xchg
xor
sbb
fisttps
jp
bound
insb
mov
arpl
mov
mov
ds
add
and
push
lock
popl
mov
dec
sbb
enter
jnp
repz
lret
or
jno
cmp
xor
mov
jl
std
into
dec
push
mov
cmp
mov
jp
ret
lock
adc
clc
pop
pop
jb
xor
roll
cli
cwtl
aas
std
rolb
fisubl
add
nop
mov
dec
pop
negl
sbb
jle
repnz
xchg
stc
stos
jg
mov
outsb
fdivrs
pop
push
pop
fcomps
mov
shll
pop
lock
cmpsl
xor
pop
lds
out
fwait
add
xchg
jb
out
aam
push
pop
sub
add
movsb
cwtl
pusha
inc
js
in
adc
test
stc
push
movsl
mov
mov
sbb
imul
data16
lret
sarl
push
mov
sub
sahf
daa
loop
xor
and
movsb
mov
fstps
rorl
cmpl
insl
test
js
ret
xchg
mov
dec
add
mov
fs
or
roll
push
mov
movsb
xchg
mov
xor
mov
repz
sbb
inc
mov
pushf
insb
js
sub
fs
jg
scas
jbe
out
mov
mov
push
and
dec
adc
rcll
jg
stos
fistpll
push
xchg
xor
popa
out
add
and
int
ficomps
fcompl
mov
mov
enter
cmp
mov
inc
adc
and
xor
sub
adcb
sbb
sub
pop
jnp
xchg
lcall
adc
adc
test
cmp
stc
jo
enter
mov
sbb
lods
rcrl
cltd
mov
stos
imul
fadd
in
xor
cltd
ss
xchg
movsb
leave
adc
adc
push
movsl
loopne
sbb
fstps
xor
xchg
mov
lds
lahf
jno
lea
add
sbb
mov
into
add
add
fimuls
adcb
mov
and
xor
and
mov
lcall
jmp
outsl
in
xor
int3
mov
xchg
mov
add
xor
mov
lds
idiv
lock
addr16
lret
aam
cmp
cmp
stos
jne
pushf
test
inc
nop
pop
rolb
pop
loope
adc
dec
in
lds
fnstsw
les
scas
aam
dec
push
into
mov
sbb
and
push
arpl
push
arpl
cwtl
pop
mov
sub
add
jmp
rcr
cld
nop
mov
push
or
mov
pop
and
cmp
pop
adc
stc
push
inc
mov
outsl
jecxz
sub
cs
sbb
cltd
out
xlat
dec
or
mov
mov
jge
leave
stos
stos
and
adc
stos
inc
push
mov
data16
repnz
xchg
xlat
in
adc
clc
mov
sub
leave
aam
mov
icebp
jle
sbb
or
fimuls
sbb
or
lods
lods
mov
ret
fiaddl
xor
mov
add
cld
inc
orb
cmpsb
sub
xor
out
mov
repz
out
ja
lods
mov
xlat
dec
add
mov
sbb
pushf
ja
lahf
inc
pop
xchg
jae
sub
pushf
les
sub
lcall
lret
add
adc
pop
es
push
stos
mov
dec
test
addb
nop
dec
insb
add
or
fwait
cmp
and
cmpsl
mov
test
cmc
mov
clc
popa
and
jbe
in
or
and
dec
cmc
cs
cltd
mov
je
movsb
push
xor
or
stc
sbb
sbb
mov
add
push
out
sbb
push
popa
incb
xor
cmc
mov
fistl
push
cmc
arpl
fadd
sbb
fbstp
push
cmp
popf
adc
add
stc
mov
out
addr16
lret
popa
ss
sub
inc
push
shrb
das
jecxz
push
outsb
xchg
ja
add
inc
adc
inc
pop
pop
mov
shl
lods
call
in
andl
cmpsl
push
mov
cmc
pop
lcall
jns
inc
inc
jge
mov
pop
enter
nop
sub
dec
sub
pop
xor
xchg
gs
repz
in
dec
mull
dec
clc
fs
cltd
mov
ss
jmp
dec
shl
insl
cmp
dec
xlat
std
adc
test
aas
or
push
stos
aaa
fwait
repz
mov
outsl
and
mov
sbb
mov
icebp
mov
cmp
jne
aad
fs
loop
scas
repnz
push
push
pop
ror
outsl
or
imul
mov
pop
movsb
mov
sbb
out
and
push
imul
movsl
pushf
mov
inc
push
lods
mov
xor
fadds
pushf
cmp
lods
inc
mov
inc
jge
int
loope
stos
sbb
enter
mov
sti
outsl
ret
cld
je
fs
xorb
mov
xor
push
and
sub
sbb
xchg
fcompl
xlat
test
or
inc
xchg
xchg
roll
and
adc
les
aaa
mov
lea
dec
pop
sub
jnp
mov
jmp
push
xlat
and
cmp
jb
shl
inc
cmpsl
mov
aad
loop
mov
push
les
pop
cltd
xchg
mov
sbb
push
subb
push
push
cmc
xlat
outsb
je
pop
mov
dec
mov
mov
cmpsl
into
rorb
lahf
rol
fs
sti
insb
fcmove
scas
addr16
adcb
add
addr16
in
cmpl
mov
pop
jmp
or
sahf
aaa
and
sar
and
xchg
ret
xor
pop
out
nop
pusha
pop
sbb
pop
push
pop
push
pushf
sbb
std
jmp
inc
xchg
divl
sbb
jno
lret
inc
fnstenv
arpl
loope
mov
mov
fcompl
enter
xor
mov
add
xchg
adcl
push
add
arpl
sub
mov
xor
outsl
int3
aaa
fwait
adc
push
xor
xchg
cmp
xlat
lock
rcl
les
mov
adc
pop
xchg
daa
and
outsb
sbb
nop
pop
xorl
mov
std
adc
aaa
mov
jno
sbb
test
jg
out
lcall
insl
out
mov
add
dec
push
arpl
sahf
push
int3
lods
mov
lods
xchg
pop
out
mov
sbb
jge
loope
mov
mov
mov
loope
lds
pop
xchg
xchg
xor
movsb
jg
add
fisubl
push
enter
pop
aad
adc
int3
iret
xor
push
ret
pop
push
add
inc
sub
jbe
movsl
out
into
add
mov
and
push
popa
or
cmp
push
in
and
push
and
pop
inc
mov
pusha
xchg
xor
inc
lcall
pop
add
in
pop
out
cmc
pop
lret
clc
cmp
int3
inc
jmp
notl
cs
push
rcll
lods
ljmp
mov
jnp
int
jo
xlat
inc
push
jmp
sbb
mov
ret
loope
sub
mov
in
cmc
and
mov
push
dec
lea
or
stos
sbb
fbstp
out
adc
sarb
and
and
das
mov
mov
adc
clc
jge
xor
add
mov
mov
ficoms
push
xor
pop
movsl
push
xorl
out
ret
sub
shrl
roll
stc
mov
std
xchg
mov
add
out
jg
inc
cs
cmc
mov
mov
jle
xor
fidivrl
push
insb
out
mov
sbb
and
push
pop
movsl
xor
mov
xchg
push
hlt
cmpb
bound
shrl
xor
add
xor
orb
jmp
and
repz
push
cmp
adc
int3
hlt
outsl
xor
mov
fcomip
rorl
xchg
test
scas
cmp
inc
push
pop
push
outsb
jae
sbb
lret
pop
inc
add
mov
sbb
insb
pop
jmp
and
push
mov
sub
icebp
loop
cltd
inc
sahf
popa
xchg
xor
sahf
add
inc
mov
repnz
adc
xchg
xlat
jbe
in
fucom
fdiv
fists
inc
mov
sbb
push
fisubrl
sbb
mov
aas
pushf
xor
jnp
lea
lret
mulb
js
inc
bound
ja
dec
mov
adc
and
sbb
jnp
cmpsl
xor
jl
xchg
sub
sbb
jge
adc
sbb
push
mov
out
lahf
mul
test
xor
add
pusha
jnp
xor
pushf
cli
sahf
in
aaa
jnp
jmp
sarb
cs
sub
popf
adc
sbb
fcoml
jge
shr
mov
out
cmp
inc
sub
cmp
xchg
ret
sbb
mov
sbb
cli
jle
or
fldl2t
imul
cwtl
scas
add
mov
push
and
popa
mov
sti
jnp
and
subl
clc
push
pop
push
cltd
enter
ljmp
push
push
push
add
es
lock
adc
pop
and
and
sbb
xchg
test
movsb
xorl
dec
mov
mov
aam
test
sub
mov
stos
push
aaa
or
jmp
push
lock
mov
lcall
ret
add
xor
lret
sbb
adc
std
repz
xchg
cld
pop
or
jle
ror
jmp
stc
inc
rcl
ficoml
dec
cmpsb
sbb
cwtl
push
pop
test
inc
movsl
inc
mov
stos
stos
adc
sbb
orl
sub
fsubr
test
jnp
sbb
sarb
jmp
inc
fnstsw
push
outsb
adc
lahf
lods
pop
jbe
jae
mov
loope
jle
or
push
repnz
in
sub
leave
pusha
sbb
jo
clc
insl
lahf
in
lret
push
mov
adc
push
clc
insl
dec
xchg
mov
movsb
imul
ljmp
mov
mov
mov
imul
repz
mov
jne
mov
jns
push
arpl
fcoms
or
pop
js
fs
sub
faddp
dec
pusha
call
outsb
jb
aam
push
out
les
hlt
jns
lock
pop
js
test
xor
outsb
inc
cmpsb
lods
loope
out
fcompl
xchg
mov
test
xchg
leave
cmpl
pop
imul
stos
repnz
pop
lock
sbb
sbb
and
out
mov
adc
cmp
call
dec
mov
imul
scas
popf
ja
and
fcoms
mov
adc
adc
or
jg
call
js
jo
loope
ret
ss
popf
cmp
loopne
mov
push
push
jle
pop
mov
sbb
hlt
push
repnz
loop
jne
and
rcl
fadds
int3
scas
aas
loope
mov
xor
insb
pop
loope
sub
xor
dec
lds
or
sub
inc
and
int3
push
dec
adcb
js
xor
inc
std
rol
dec
loopne
dec
xor
movsb
inc
sbb
lcall
mov
add
push
and
jmp
cld
sub
xchg
pop
sarb
not
fldt
mov
gs
mov
shrl
popa
adcb
aas
xor
nop
lds
mov
push
ret
mov
mov
jl
and
in
inc
mov
or
test
aas
in
das
jmp
pop
popa
loopne
dec
sbb
insb
fs
cmp
shr
rol
dec
rorb
shlb
je
test
jno
inc
cmp
push
inc
repnz
das
test
addr16
stc
adc
loop
cmp
popf
push
or
adc
loope
inc
aaa
mov
neg
and
and
mov
outsl
mov
std
out
pop
pop
in
iret
cmp
mov
add
sbb
ret
sub
or
movsl
push
push
push
iret
jb
std
jge
xchg
jecxz
insb
push
or
fdivp
adc
insb
mov
pop
add
dec
cld
ja
lods
xor
cwtl
xchg
cwtl
sub
push
cs
pop
outsl
dec
jmp
cmp
js
sbb
pop
inc
movsb
testb
push
ja
mov
fisttpll
insl
mov
dec
ds
shll
cmpsb
and
pop
xchg
es
pushw
aas
gs
cmc
movsb
inc
fstpl
jecxz
sbb
mov
jnp
adc
mov
mov
movsl
pushf
jge
jge
imul
daa
cmp
fucomip
jb
sub
cmp
sub
out
loopne
jae
sub
out
out
dec
pop
jl
mov
sahf
or
jo
jecxz
or
aaa
ja
icebp
jns
mov
and
xchg
and
cmpsl
or
xchg
test
dec
mov
lea
sbbb
daa
orl
in
rorl
orb
jne
shll
jbe
cmpsl
outsb
mov
insl
fiaddl
dec
push
lret
jbe
enter
ja
xor
cmp
push
push
fists
push
sub
push
jae
mov
insb
add
out
cmp
adc
cmp
fcoms
xor
fucomi
mov
cltd
enter
jbe
jle
mov
mov
pop
dec
pop
mov
lea
aad
mov
sbb
mov
cld
or
cmp
scas
add
push
aaa
add
loopne
pop
adcb
mov
aaa
dec
sbb
ja
cmp
jmp
data16
fdiv
mov
jnp
test
in
pop
jp
push
cltd
addb
sub
pop
int3
push
inc
pop
pop
mov
jb
fnstenv
les
pop
push
int3
andb
jge
dec
fcmovnu
cmp
cmpsb
dec
js
ret
outsb
mov
fisttpl
jno
sbb
movsl
cltd
xrelease
push
test
mulb
dec
push
sbb
adc
xlat
add
push
cmpsl
imul
or
sbb
push
movsl
and
or
xor
test
lahf
sbb
cmpsl
fisttpll
fists
lods
push
adc
mov
int3
mov
arpl
in
or
stos
dec
iret
mov
or
dec
aaa
mov
push
dec
jno
into
lods
mov
pop
mov
ret
lods
jle
mov
push
dec
enter
pop
loopne
testl
arpl
jno
fcmovnbe
pusha
mov
push
fidivs
mov
test
fidivrl
adc
in
mov
loopne
inc
push
mov
lods
ret
jg
pusha
loope
mov
jmp
test
loopne
fmull
es
out
loope
ret
mov
faddl
daa
jnp
cwtl
jg
ret
dec
inc
cmp
dec
pop
enter
cwtl
cmp
push
movsl
outsl
outsl
iret
pushf
ljmp
cltd
std
mov
rcll
sub
pop
mov
push
clc
ficomps
daa
dec
pop
movl
imul
jp
sub
push
aad
ss
xor
push
add
inc
and
sub
xchg
pop
xchg
dec
cmp
dec
cmp
xor
inc
jg
bound
shlb
xor
mov
scas
popf
leave
lahf
imul
sub
push
out
jecxz,pt
push
xchg
jecxz
and
pop
pop
aas
mov
out
ficoms
leave
xor
jnp
and
lcall
jns
ljmp
inc
cli
xor
es
pop
popa
les
sti
push
push
add
mov
pop
mov
int3
fs
jo
xor
ja,pn
popf
nop
lcall
sbb
and
outsl
push
cmpb
jbe
test
in
jnp
fadd
dec
sbb
push
adc
pop
mov
sub
xor
sbb
jo
in
jle
xor
cmpsl
and
add
out
inc
ficomps
hlt
notb
adc
cmp
push
inc
pop
rcrb
rolb
mov
mov
add
push
mov
mov
stos
scas
daa
ljmp
pop
stos
ja
jns
jmp
mov
das
push
xor
rcrl
cld
je
seta
xlat
jae
nop
imul
mov
loopne
inc
test
pop
cmpsb
mov
lcall
std
cltd
xchg
xchg
inc
sti
xor
dec
xchg
push
jmp
cmpsl
push
js
xchg
mov
xchg
loopne
add
cli
xchg
and
fdivs
or
xlat
sub
fsubl
outsb
and
mov
xchg
jecxz
in
mov
loope
into
jmp
inc
ret
sbb
rorb
bound
push
inc
inc
xor
lods
add
out
add
xor
je
push
mov
xchg
cli
aas
xor
mov
sbb
inc
bound
gs
cmp
lret
mov
daa
fbld
jmp
add
fdiv
jb
movsl
pushf
fcoml
int
mov
dec
inc
fdivp
add
xchg
mov
aad
adc
jns
mov
idiv
xor
xor
mov
ds
fists
ljmp
and
add
mov
iret
int
data16
test
lock
jmp
pop
ds
aam
shrl
fwait
stos
mov
in
pusha
popf
imul
inc
mov
test
shrb
lahf
ret
or
testl
pop
stc
dec
sahf
ljmp
daa
xor
pushf
sbb
outsl
std
idivl
sub
in
push
or
adc
in
jl
add
out
xchg
cmpb
jge
xor
test
addb
stos
orl
lcall
cmp
fldl
insb
hlt
pop
or
sbb
insl
fwait
push
les
mov
ja
inc
push
lahf
jmp
pop
sub
cltd
pop
dec
sahf
jb
pop
scas
mov
sarb
rorl
push
push
rol
mov
mov
and
lret
insl
mov
cld
jg
push
inc
xchg
push
stos
jl
mov
xchg
leave
inc
das
dec
repz
test
mulb
in
iret
push
mov
push
lret
jecxz
mov
or
inc
sbb
inc
add
loope
cmp
push
adc
es
lods
push
pusha
pop
insb
sbb
aam
cmp
pop
lret
xchg
jl
aam
and
pop
icebp
jmp
push
push
dec
pop
push
cmpsb
add
or
mov
push
out
lret
pop
pop
xchg
xchg
inc
pop
dec
lods
jg
frstors
push
and
gs
pavgb
nop
add
push
pop
stc
jmp
arpl
jmp
fistpl
sbb
mov
loopne
ss
mov
hlt
pop
sub
xchg
lds
inc
adc
jle
popf
popf
pop
push
lods
and
std
xor
pop
pop
jne
xchg
mov
cmpsl
and
mov
mov
orb
dec
repnz
jl
cmp
adc
sbb
sahf
mov
mov
xchg
mov
popf
lret
lock
dec
mov
jbe
cmp
cmp
movsl
inc
das
mov
repnz
aam
dec
aam
xchg
call
cld
inc
icebp
lods
sbb
mov
pop
mov
std
aas
repz
aad
and
faddl
test
cmp
dec
jb
mov
sbb
addr16
lret
in
xor
sbb
lds
and
mov
fistps
lahf
add
xchg
push
push
xor
fwait
jns
xchg
pop
imul
unpckhps
cmp
xchg
lods
mov
sbbb
sbb
mov
xchg
int
jmp
jbe
sbb
gs
xchg
sub
add
jle
xor
int3
and
jae
mov
pop
jmp
or
cmp
cld
iret
imul
lods
orb
or
sbb
cltd
adc
mov
stos
sub
es
mov
add
into
mov
xchg
icebp
xor
jmp
dec
aad
dec
dec
cmpsb
lods
inc
dec
mov
daa
jle
adc
sbb
pop
repz
rclb
pop
add
sbb
add
mov
xor
add
xchg
jo
mov
out
outsb
femms
scas
jae
imull
mov
movsb
push
mov
adc
mov
sub
leave
fdivr
add
daa
stos
push
inc
mov
dec
bound
scas
nop
mov
inc
lret
pushf
hlt
std
aad
adc
test
push
inc
mov
jae
lret
push
cli
mov
sbb
sbb
pop
rorl
scas
out
nop
mov
into
adc
es
jae
lock
adc
mov
es
cltd
pop
jp
push
ret
lret
imul
mov
pop
cmp
imul
xchg
out
cmp
sbb
daa
fidivl
dec
dec
sub
mov
ljmp
orl
dec
test
and
ljmp
sbb
jmp
in
mov
and
std
jl
ja
loop
jne
ret
les
pusha
test
add
out
icebp
mov
jo
jmp
cmp
scas
or
daa
pop
fs
mov
imul
push
out
lds
movsl
mov
jne
mov
fwait
mov
outsl
sbbb
mov
cmp
iret
and
pop
lahf
cwtl
push
mov
jns
or
jp
stos
cmp
add
int3
les
push
or
jg
xor
add
imul
sub
push
or
cmp
movsl
mov
adc
icebp
pop
or
jp
push
out
mov
xchg
push
dec
mov
sub
fdivrl
or
cs
and
pusha
sarl
cmpsb
xor
daa
mov
insl
clc
in
push
imul
xchg
lahf
and
inc
jnp
out
jb
jns
push
aam
mov
cld
cmp
inc
icebp
data16
sahf
mov
push
test
movsb
imul
jns
xchg
pop
pop
and
inc
je
lock
je
sub
inc
pop
inc
sub
mov
in
jge
add
rcl
sti
add
xchg
add
mull
mov
jmp
cmp
add
dec
xchg
sub
flds
fisubl
dec
dec
pop
aas
leave
loope
pop
sbb
mov
cmp
orl
fcmovnu
in
sar
lds
rorl
fldenv
js
xorl
in
js
das
pop
sub
lea
cli
cli
sub
dec
xchg
dec
jmp
or
cmpl
and
test
test
cmp
xchg
push
mov
mov
lahf
mov
test
icebp
push
cmpl
cmp
aaa
movsl
in
sti
mulb
and
das
test
sbb
sub
pop
jno
rorb
inc
mov
ja
cmp
ds
mov
insb
popf
dec
pusha
lods
subl
mov
pop
shrl
xchg
call
xchg
dec
ja
leave
cmc
dec
push
cmp
pop
mov
inc
sbb
leave
inc
pop
fdivrs
repnz
test
or
or
push
int
xchg
hlt
mov
xorb
sbb
lods
jns
pop
xchg
fstpl
icebp
adc
pop
pop
mov
pop
xor
jo
cltd
jae
cmp
jecxz
out
mov
lods
jns
adc
mov
jle
aaa
inc
mov
scas
jae
adc
mov
sub
xchg
loopne
mov
mov
pop
and
adc
mov
xchg
pause
cmp
xor
ret
ret
cld
call
je
jbe
mov
mov
in
sub
or
xor
stos
sub
sub
add
cmp
jge
fadds
add
nop
fnstcw
nop
fs
orl
and
mov
xor
cmp
enter
or
mov
add
mov
cmp
icebp
fs
sub
sbb
nop
mov
cmp
push
xchg
jmp
mov
xchg
lret
add
xchg
push
xor
xor
in
outsl
test
xchg
inc
dec
inc
jo
or
adc
fstpt
xlat
xchg
jmp
lods
cli
call
inc
xor
andb
or
mov
pop
test
repnz
test
sbb
mov
mov
jb
cmp
mov
lcall
leave
enter
gs
jle
xor
notb
popa
xor
mov
push
ds
imul
arpl
ds
addl
pusha
inc
lds
enter
jne
inc
mov
mov
lea
call
int
push
mov
add
jo
mov
cltd
enter
add
cmp
cmp
scas
mov
repnz
shll
pop
add
div
js
inc
and
pop
pop
push
adc
mov
mov
push
add
iret
std
xor
hlt
idivl
in
jnp,pn
mov
mov
stc
adc
dec
adc
cltd
test
mov
in
je
pop
xchg
pop
adc
jle
jp
adc
sbb
int3
push
movsb
cmc
mov
aaa
fstl
pop
insl
arpl
xchg
nop
pshufw
push
xlat
xlat
fucom
jg
int
add
bound
sub
jge
data16
fidivrl
xchg
pop
inc
fwait
cmp
xor
cmp
mov
inc
fistpl
mov
and
daa
inc
test
add
out
xlat
and
fistl
repz
fwait
mov
shlb
cs
arpl
add
fildll
xor
cmp
rcrl
dec
aam
inc
ljmp
lahf
xchg
xchg
mov
xchg
add
rorb
fwait
inc
fistl
ss
inc
mov
sbb
out
pop
cmp
inc
dec
mov
and
iret
pop
imul
xchg
ds
out
mov
mov
sbb
pusha
dec
loopne,pt
out
jne
lods
or
adc
sbb
hlt
fmull
incl
cmp
enter
xchg
cmpsb
data16
mov
push
repz
dec
pop
das
test
mov
xchg
push
pop
add
adc
lods
xchg
cmp
pop
lock
mov
das
stos
aas
inc
or
sbb
jne
lcall
add
lret
stos
iret
pop
adc
pop
mov
enter
push
xchg
or
inc
mov
scas
sub
mov
pop
test
and
out
xchg
pop
scas
std
stos
xor
or
cltd
test
repz
popf
jbe
add
std
jo
sub
adc
in
addr16
in
inc
pop
push
cwtl
push
outsl
mov
in
ret
dec
in
cmpl
add
cmp
mov
push
or
mov
lcall
mov
mov
or
mov
add
fimuls
pop
fs
ja
lods
stos
cmpb
fadds
dec
ja
std
dec
sbb
addr16
enter
dec
lret
stos
pop
add
lods
pop
jnp
mov
dec
fnsave
dec
frstor
and
aas
sahf
sbb
popf
mov
cli
flds
cmp
sarb
pushw
jmp
jno
mov
jg
sti
cwtl
nop
or
ss
pop
push
push
gs
and
sub
mov
add
aaa
dec
outsl
sub
lds
out
cld
lds
sub
xor
out
mulb
cwtl
adc
clc
or
loop
cmp
or
mov
or
mov
fisttpl
clc
jle,pn
mov
mov
inc
or
insb
push
xchg
pop
push
sar
add
fwait
sub
es
sbb
cld
dec
mov
les
aaa
in
mull
and
roll
clc
stc
test
dec
out
stc
mov
dec
jp
in
lods
pop
fs
xchg
lret
ss
sub
jno
shlb
xchg
fisubl
xor
sbb
stc
ret
cs
and
popf
std
mov
push
hlt
adc
aas
aas
test
pop
bound
scas
mov
cmp
inc
mov
lods
jl
aad
mov
loop
lahf
inc
or
ret
fisubrs
jmp
and
lock
inc
in
in
sub
ja
int3
cmp
sbb
pop
jno
jnp
test
mov
mov
xor
dec
aas
fisubrl
inc
cmp
in
dec
xchg
clc
mov
xor
lret
lcall
ljmp
nop
mov
mov
cwtl
xlat
pop
and
out
repz
rcr
insl
imul
sub
ficoms
sub
mov
pop
mov
nop
add
jg
pushf
jno
and
mov
jl
xor
inc
mov
add
mov
mov
out
cmp
jo
jge
js
lods
mov
shl
js
pop
sarl
leave
pop
push
arpl
das
or
jo
rcll
xchg
cli
cltd
repnz
push
jecxz
imul
pusha
pop
testl
stc
aad
int3
inc
out
push
inc
int3
jge
adc
add
test
mov
lds
pop
cs
ljmp
mov
cmpb
add
test
xor
or
imul
push
jle
or
pop
xor
push
adc
xor
xor
rcl
xor
sub
jbe
xchg
pop
divb
cld
dec
mov
inc
repnz
push
jl
ret
jmp
push
xor
cmc
out
push
cmp
inc
jae
dec
dec
scas
in
cmpsb
mov
loope
add
sub
adc
test
sar
or
ja
lds
dec
inc
ret
lods
scas
filds
add
popf
and
mov
outsl
aam
shrb
sbb
ficoml
jnp
aad
xchg
in
adc
std
push
adc
cld
aaa
jg
pop
lea
sub
rorb
dec
add
je
mov
pop
out
mov
mov
movsl
lcall
xchg
das
mov
shrl
push
mov
add
roll
aaa
inc
loope
cmpsl
pusha
out
out
dec
or
iret
cmpl
cld
jbe
pop
data16
mov
loopne
inc
add
lods
inc
mov
pop
mov
ds
mov
loope
mov
sbb
movsb
xor
push
adc
ljmp
push
cmp
pop
sarb
fstl
loope
push
mov
jge
jno
incb
ljmp
rclb
mov
cmp
outsb
outsb
nop
sbb
fisttpll
clc
xchg
mov
js
adc
xchg
ret
push
or
sbb
pop
ret
cmp
cs
sbb
lcall
mov
sbb
dec
xchg
cmp
pop
in
sub
bound
in
pop
push
mov
jmp
sti
and
sub
lahf
std
test
int
rcrb
mov
mov
fwait
dec
dec
sub
xchg
add
xchg
fadds
adc
xor
lahf
das
lds
sbb
fsubrs
cmc
add
mov
inc
das
xchg
inc
orb
ficomps
cmpsb
and
push
mov
mov
pop
add
pop
jbe
xchg
test
hlt
push
sahf
movsl
lock
dec
imul
addr16
mov
push
das
or
dec
notl
outsl
mov
fwait
mov
pop
pop
sar
push
xchg
sbb
aas
sub
fcmovnu
imul
push
and
test
cmp
push
sbb
sbbb
jnp
out
cld
test
add
add
jl
cvtps2pd
jecxz
adc
std
mov
lds
adc
ficomps
cmc
mov
subb
hlt
in
mov
push
push
lods
movsb
mov
pusha
xchg
roll
cmp
or
lret
adc
test
xor
sbb
fdivl
xor
add
outsb
mov
out
es
jge
int3
in
fwait
ss
ss
inc
sahf
les
and
loop
cmp
mov
adc
sub
fwait
jns
and
aas
shr
rcrl
movsl
fld
outsl
sti
not
inc
adc
jecxz
sti
mov
ret
imull
mov
jmp
in
pop
gs
mov
pop
loop
adc
pushl
lods
xchg
dec
scas
sbb
sar
repnz
pushf
loop
push
mov
xchg
ret
mov
outsb
or
mov
pop
pusha
jecxz
pop
ljmp
adc
movsb
in
jns
int
add
arpl
pop
adc
es
ret
add
and
cli
bound
in
rorl
movb
es
xchg
ss
fadds
dec
daa
loopne
jno
sbb
sahf
xor
daa
pop
jl
dec
aaa
xlat
dec
repnz
push
sti
popf
add
popf
sbb
jecxz
nop
adc
lods
sbb
in
adcb
sub
adc
inc
dec
nop
in
sbb
clc
mov
cli
adc
test
cmp
in
in
test
fs
sbb
sbb
sbb
shlb
stc
jae
adc
push
dec
inc
pop
jb
push
mov
ficoms
sbb
in
mov
rep
lcall
xchg
cmp
shlb
adc
lods
cmp
pusha
or
push
idivl
cmp
jge
imul
inc
fmuls
jbe
and
movsl
or
aas
fwait
enter
out
mov
scas
sbb
pop
mov
xlat
shll
cmp
mov
loope
and
cmp
repnz
ss
rorl
movsl
ja
mov
xchg
mov
mov
and
idivb
aad
int
data16
inc
lods
or
sbb
xlat
in
shll
and
xor
fdivs
stos
and
jno
or
mov
or
mov
mov
inc
sti
stc
mov
add
test
jns
loop
xor
xor
mov
cmp
pop
dec
enter
push
mov
jb
and
pop
out
xchg
outsb
iret
inc
sbb
daa
adc
aad
das
jp
or
popf
test
mov
rep
pop
jo
pop
cmc
outsl
adc
xor
mov
adc
mov
xchg
adc
mov
cmpsl
or
out
add
sub
mov
mov
push
dec
lcall
and
test
xor
add
mov
pop
outsb
xchg
ja
cmp
mov
or
cmpsl
leave
shrl
xor
shlb
fimull
ss
sti
xchg
or
loopne
ret
into
in
cltd
inc
sbb
sub
dec
in
or
inc
sbb
ja
pushf
pop
cmpsb
stos
dec
cmp
mov
test
xchg
push
mov
fistpll
jecxz
icebp
fs
or
insb
cld
sbb
leave
scas
sbb
stc
xchg
mov
das
pop
sbb
adc
lods
or
pop
mov
imul
fimuls
lea
cmpsb
mov
mov
and
out
jae
lds
repz
in
jns
or
xor
or
rolb
mov
pop
pusha
loope
ss
pop
ret
jge
mov
mov
pop
sbb
or
scas
loope
xchg
insl
cs
mov
xchg
rcll
test
scas
movsb
ds
adc
fisttpl
or
out
lock
into
loope
inc
or
cld
rorl
sbbl
pop
add
outsb
jne
mov
add
sub
cld
dec
pop
inc
mov
sahf
dec
mov
das
aam
inc
int
lods
cmpsl
aam
cmp
cmp
mov
leave
pop
in
ror
xchg
ljmp
inc
jg
xchg
adc
test
adcb
imul
xchg
sahf
jge
dec
fs
sub
xchg
lods
aam
xchg
sbb
sbb
sub
ret
push
dec
mov
cmp
xorb
repnz
xor
xchg
and
adc
xor
faddl
mov
add
shll
loope
and
in
xchg
push
scas
jo
mov
pop
xor
mov
xor
decl
xorl
inc
mov
in
aas
mov
shll
or
imul
mov
push
mov
stos
mov
mov
mov
andb
dec
stc
and
mov
aam
iret
movsb
mov
xor
xor
push
jle
push
sbb
lcall
xor
mov
jg
pop
or
cmp
in
push
mov
mov
lret
sbb
jmp
testb
sub
adc
iret
ret
xchg
add
out
inc
cmp
and
test
pop
cltd
imul
mov
in
stos
xchg
adc
pop
jo
xchg
pop
add
neg
loope
out
mov
sub
iret
orl
fstps
cmp
fsts
sub
xlat
and
mov
xchg
ret
inc
push
ljmp
or
stos
lds
loope
add
mov
aad
inc
test
popl
stos
add
inc
mov
cmp
mov
testl
std
xor
imul
push
lret
mov
out
aas
sbb
pusha
int3
add
push
jno
or
add
and
out
sub
or
push
jne
add
in
imul
sbb
push
aas
sbb
mov
jne
sahf
mov
mov
adc
loop
xor
das
or
shrb
sub
popf
mov
enter
lret
icebp
dec
jno
rol
adcl
rclb
push
push
outsb
jge
pop
subb
fisttpl
fsubl
mov
sub
cmp
sti
repz
push
lds
adc
pop
ss
xor
leave
ret
inc
das
repnz
aad
lods
rcll
scas
stos
shr
gs
sub
inc
push
popa
das
adc
test
dec
or
pop
andb
dec
dec
pop
mov
popf
rol
mov
movsl
fcompl
xor
add
pop
iret
sbb
sbb
aas
mov
pop
sbb
stc
imul
jp
ficomps
dec
dec
inc
dec
dec
sbb
mov
call
pop
sbb
adc
in
cmpsl
add
adc
iret
out
pop
pop
add
movl
pop
inc
jmp
test
cmp
cltd
daa
jmp
mov
stos
add
push
les
mov
xlat
movsb
orl
dec
pop
ficoml
mov
sbb
aam
sahf
cmc
ret
sub
jmp
pop
mov
aad
mov
cmp
mov
cld
and
cwtl
jmp
pop
nop
ds
in
lods
jb
adc
outsb
or
test
mov
cmp
and
dec
push
mov
pop
sbb
pextrw
dec
rol
dec
test
xchg
js
xchg
or
mov
nop
xchg
loop
mov
jl
xchg
add
inc
mov
mov
mov
jbe
adc
cwtl
aaa
add
push
or
std
in
sbb
cmp
dec
aas
cltd
int3
inc
daa
jmp
rcl
jae
imul
mov
je
xchg
and
test
pop
into
push
inc
ljmp
hlt
pop
inc
lahf
iret
push
cmp
bound
xor
xchg
xor
loope
fcomi
cltd
add
pop
push
inc
xchg
adc
sub
push
and
cmp
imul
mov
dec
out
out
cmp
or
cwtl
aad
mov
fucomp
imul
lret
sahf
jl
jle
adc
repnz
pop
incl
fnstcw
xchg
mov
jb
mov
ss
fiadds
adc
fbstp
adcl
inc
popf
into
dec
int
enter
orl
cs
loop
insl
test
mov
jae
mov
in
cmp
pop
xchg
jo
je
fisttpl
sbb
push
push
iret
and
int3
stos
push
jo
int
aam
dec
jp
sbb
xchg
ja
inc
jns
mov
gs
mov
les
mov
scas
rcll
insb
lea
xor
fsubs
dec
jnp
mov
stc
lds
test
jl
pop
int
xor
ss
in
sbb
mov
mov
ja
xor
loop,pn
xor
cmpsb
mov
into
test
out
pop
pusha
xchg
jmp
sti
xchg
cs
cli
xorl
inc
dec
icebp
lahf
sbb
xchg
mov
pop
int
jno
sbb
dec
push
xor
xor
push
add
pop
mov
scas
pusha
cmp
adc
sbb
xor
lahf
jo
fimuls
mov
cmc
add
insl
stc
mov
pop
mov
mov
popf
sub
ja
add
pop
adc
test
lods
mov
cmp
das
ret
notl
jne
cmp
ja
sub
push
frstpm(287
in
push
sahf
adc
cmp
sub
inc
xchg
mov
cli
inc
filds
add
sahf
adc
nop
cmp
es
lock
stc
adc
in
pop
dec
or
hlt
sarl
les
sub
enter
shrl
insb
in
mov
inc
sub
bound
push
ljmp
shll
popf
pop
imul
adc
js
in
ss
fstps
push
adc
pop
and
sbb
loopne
dec
scas
push
repnz
inc
add
popl
repnz
mov
mov
data16
push
sbb
decb
mov
push
ja
nop
dec
pushf
dec
sbb
lods
ss
sbb
cltd
scas
lea
popf
fcmovnu
test
xlat
lcall
mov
inc
int3
fdivs
cmpsl
jge
sub
lea
inc
xor
and
movb
add
cli
movsl
cmpsb
dec
idivb
stos
scas
add
xlat
mov
add
lahf
ss
jmp
testb
mov
cmpsb
pusha
idivb
daa
mov
pop
in
out
out
pop
int
xchg
xchg
test
out
inc
in
aam
insl
shlb
jbe
out
or
dec
rcl
dec
pop
add
inc
popa
out
and
ret
lcall
popf
int3
adc
add
mov
rorb
out
notb
lock
mov
xchg
xchg
inc
es
icebp
sub
insb
fs
pop
iret
jle
push
leave
push
jecxz
jae
mov
rcrl
addr16
jle
dec
outsl
cmp
into
push
sahf
shrb
pop
hlt
imul
outsl
push
int3
icebp
inc
dec
add
int
sti
jle
shl
push
xor
clc
call
loop
leave
mov
xchg
mov
insl
xchg
rcr
fdivrl
inc
aam
int3
iret
jp
jb
push
sbb
loop
sub
fcmovnbe
fmulp
and
cmp
int3
rcrl
push
pop
imul
push
pop
jno
dec
mov
insb
enter
cmp
mov
dec
mov
adcb
adc
movsb
dec
mov
mov
inc
arpl
fcmove
inc
jmp
testb
outsb
loop
push
adc
xor
adc
or
outsl
jnp
fwait
jne
xlat
sbb
aas
icebp
adc
dec
or
leave
inc
lahf
cmp
test
or
lods
jg
mov
add
sub
mov
or
in
rorb
cmc
test
imul
addr16
xlat
add
pop
xor
icebp
lcall
bound
sbb
jp
out
pop
mov
dec
sbb
outsb
xor
les
and
das
cmpb
pop
outsb
shl
mov
mov
stos
jmp
fisttps
jae
rcrb
push
arpl
int
icebp
test
ds
hlt
dec
add
jmp
pop
jbe
inc
add
jecxz
pusha
push
mov
push
test
insl
adc
jl
aas
add
stos
xor
jmp
adc
cmp
or
inc
sub
ljmp
push
lahf
call
adc
inc
repz
jle
jbe
mov
fisubrl
orl
mov
cli
loopne
and
sbb
mov
cltd
loopne
cmp
aam
jmp
scas
add
mov
sbb
outsl
ret
das
xchg
sub
pop
add
lods
jno
imul
push
lods
inc
cmp
xchg
inc
xlat
ficoml
sti
movsb
ds
dec
call
in
bound
addr16
lock
decl
outsb
nop
lock
cmp
xor
xchg
jo
hlt
xchg
xlat
xchg
pop
loopne
daa
pusha
mov
sub
pop
pop
mov
int3
mov
push
jp
imul
les
xor
add
sbb
aaa
sub
icebp
inc
mov
sbb
pop
mov
into
popaw
adc
add
lcall
cmp
xlat
inc
add
subl
push
sub
mov
or
jge
adc
clc
cmp
add
jle
stc
mov
jecxz
sbb
pop
xor
mov
mov
shll
or
pop
loopne
pop
fcoms
insl
movsl
das
pop
pop
xor
ret
sahf
gs
aad
mov
push
fcoms
into
fldcw
ret
pop
gs
lods
std
shlb
sub
jnp
push
jnp
xor
jns
sbb
add
test
cmp
je
shr
jl
pop
sti
leave
ljmp
inc
out
and
push
dec
jle
mov
fbld
xor
clc
mov
add
aas
adc
xlat
subl
sub
and
xor
int
fistps
mov
xchg
lret
inc
cmc
push
fisttps
stc
pop
jp
ret
ja
jbe
insl
test
xor
movsb
outsb
xchg
jle
imul
mov
push
lret
les
jae
dec
pushf
sbb
test
fsts
loopne
mov
imul
popa
add
scas
stos
or
nop
push
or
jno
push
and
movsb
ret
add
popf
je
insl
movsb
xor
leave
insl
jg
cmp
jns
fs
add
ss
push
pusha
insl
inc
xor
jne
cld
or
pop
scas
sbb
lcall
fidivl
sahf
mov
or
xchg
sbb
pop
dec
test
aam
mov
inc
cmp
sub
outsb
in
jo
xchg
jl
push
sbb
jl
sbb
adc
pop
test
jae
pop
xchg
aaa
bound
dec
cwtl
fnstenv
xchg
lea
and
in
sub
inc
sbb
cmp
push
adc
repnz
jmp
push
mov
xchg
xchg
mov
inc
movsb
jae
fistpll
insb
sub
cs
in
push
push
xchg
sub
test
lds
push
cli
sub
lret
popf
daa
mov
lea
cmpsl
cli
dec
and
test
sar
or
or
mov
aaa
test
aam
cmpsl
lods
add
loopne
dec
mov
cmp
or
ljmp
cmpsl
jg
mov
lret
jle
inc
mov
ret
cmpsl
inc
push
into
andb
and
xor
cmp
jno
data16
add
mov
je
mov
lahf
jp
stos
jo
lods
inc
mov
popa
ljmp
ljmp
or
fsubl
out
inc
ret
pop
fwait
sub
dec
sbb
and
dec
outsl
notb
mov
add
dec
nop
test
jnp
pusha
xor
fstp
pop
adc
inc
push
inc
lods
bound
xor
stos
rol
pusha
jnp
hlt
xor
adc
mov
lcall
adc
mov
test
push
fdivs
lods
lods
mov
ficoml
xlat
movsl
pop
jb
out
les
clc
jle
out
insl
popf
adc
addr16
jp
adc
add
inc
enter
pop
dec
lea
pushf
sti
test
pop
pop
sti
jno,pt
test
push
push
sub
mov
int
fs
lret
dec
or
push
and
pop
xor
out
cmp
je
aas
addr16
icebp
lret
ss
pop
xor
scas
lcall
add
sbb
enter
dec
xchg
jae
cmp
adc
in
jae
inc
jg
js
daa
aas
iret
mov
adc
xchg
add
out
inc
and
cli
int
sub
push
mov
xchg
out
mov
sbb
sub
mov
adc
add
dec
jne
lock
fbld
call
shrl
xchg
lret
clc
push
out
sbb
push
fistpll
adc
jg
jle
jae
pop
jmp
sbb
pushf
in
in
push
decb
fsubl
ret
ljmp
mov
mov
push
push
push
jle
fcomps
inc
push
push
push
negl
xorl
push
dec
push
mov
add
shlb
lahf
or
lds
inc
nop
dec
sub
pop
add
jg
dec
xor
mov
push
test
clc
call
cwtl
dec
loope
scas
jge
pop
std
loop
mov
cmp
mov
fcomps
or
jecxz
nop
pusha
stos
sub
loop
iret
inc
test
scas
test
in
xor
jmp
fistpl
jns
sbb
add
ret
out
mov
inc
dec
add
pop
lds
jnp
jecxz
icebp
out
pcmpeqw
movsb
xchg
sbb
imul
push
in
les
pop
mov
add
enter
loope
leave
data16
cmc
lret
frstor
imul
or
lcall
stos
fucomp
mov
popf
jmp
jo
or
lahf
aaa
mov
mov
add
pop
cs
jnp
cmp
je
xlat
int
sub
fs
xlat
inc
.byte
