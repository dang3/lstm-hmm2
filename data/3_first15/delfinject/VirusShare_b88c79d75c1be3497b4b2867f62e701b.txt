xor
inc
ret
push
push
call
xor
push
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
mov
push
call
pop
orl
orl
call
mov
mov
call
mov
mov
mov
mov
mov
call
call
cmp
jne
push
call
pop
call
push
push
call
push
call
mov
mov
lea
push
pushl
lea
push
lea
push
lea
push
call
add
mov
cmp
jge
push
call
pop
push
push
call
call
mov
mov
pushl
pushl
pushl
call
add
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
call
ret
jmp
jmp
cmpl
jne
jmp
push
push
pushl
call
add
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
jmp
push
push
call
pop
pop
ret
xor
ret
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
mov
lea
push
mov
call
add
mov
mov
addl
ret
jmp
jmp
add
ret
ret
xor
ret
xchg
addl
xchg
ret
add
popl
push
pop
push
xchg
push
pop
pop
push
xchg
push
xchg
add
xchg
xor
xchg
xchg
xor
xchg
push
popl
pushl
ret
jmp
ret
ret
push
push
push
push
push
push
push
push
push
push
push
push
call
add
pop
pop
pop
pop
pop
pop
pop
ret
mov
ret
pop
push
xchg
ret
push
popl
ret
push
pop
push
pop
push
xchg
add
mul
xchg
xchg
xchg
push
pop
push
pop
push
addl
pop
ret
push
pop
ret
push
pop
ret
xchg
addl
xchg
ret
pop
push
xchg
ret
add
push
mov
push
push
push
xor
push
mov
xchg
mov
push
push
push
call
push
call
call
push
call
call
call
push
call
call
call
mov
push
push
call
call
push
push
push
call
call
push
push
push
call
push
cmp
jae
ret
pop
call
or
fmuls
mov
push
mov
mov
mov
mov
mov
cmp
jg
mov
mov
mov
cmp
je
mov
mov
jmp
cmp
jg
mov
call
mov
cmpl
jne
mov
call
test
jne
xor
mov
jmp
cmp
jg
sub
cmpl
jge
add
xor
mov
mov
mov
add
mov
or
mov
mov
mov
add
mov
incl
sub
add
jmp
mov
call
mov
mov
mov
sub
cmp
jl
mov
add
xchg
call
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
add
mov
mov
andl
mov
mov
mov
or
mov
mov
mov
add
mov
incl
sub
add
mov
add
pop
pop
pop
pop
ret
push
mov
add
push
mov
cmpb
jne
call
test
je
cmp
jle
xor
mov
jmp
xor
push
push
pushl
mov
cmpb
je
aaa
jl
sahf
push
js
add
bound
inc
dec
fcom
mov
jl
push
xchg
fimuls
repz
mov
aas
pop
mov
mov
xchg
cs
push
vcmpps
out
fisttpll
inc
je
lcall
xchg
mov
sub
lods
push
dec
in
daa
push
mov
cmpsl
aam
inc
xchg
ror
pop
jecxz
and
push
xchg
push
push
iret
adc
push
in
lcall
mov
pop
in
sbb
arpl
mov
mov
nop
ret
mov
sbb
pop
test
daa
sub
pop
push
mov
enter
mov
scas
aas
lea
fcoms
mov
bound
imul
jnp
mov
idivl
cmp
pushf
adc
sub
xchg
jecxz
movsb
fcmovu
scas
pop
es
or
test
adc
inc
loop
jmp
cmpsl
lods
inc
pop
dec
fnsave
xchg
mov
cmp
in
ja
cltd
jmp
mov
xor
push
or
cmp
pop
test
daa
push
xchg
outsl
sbb
fidivrl
and
sbb
dec
push
and
fldt
add
cli
jl
mov
inc
outsl
ja
mov
pop
sub
mov
sbb
mov
or
and
xchg
sti
sbb
aas
mov
sub
push
mov
sub
sub
cmp
lcall
mov
call
sbb
lods
das
loope
lea
stos
call
xor
std
ret
cmpsl
repz
pop
insb
mov
push
adc
insb
arpl
sub
icebp
dec
out
mov
nop
std
lret
sbb
or
jmp
jae
fisubl
xchg
cmp
mov
adc
dec
pop
scas
bound
in
and
fs
inc
aad
mov
out
jmp
inc
push
das
push
cwtl
adc
dec
mov
ficoml
sahf
outsb
mov
ds
call
les
repz
ss
sbb
repz
incl
mov
stc
lods
subb
push
ja
pop
pop
lahf
int
and
xchg
daa
vphaddubw
dec
jl
inc
enterw
ss
fsub
lret
movsb
mov
add
inc
add
scas
add
sarb
insl
jo
sbb
pusha
fdivr
sti
xchg
cmp
jge
test
sub
dec
push
cmp
ret
cwtl
jns
push
mov
jne
adc
lcall
inc
test
sbb
mov
mul
adc
js
adc
pop
mov
pop
push
cltd
add
das
es
inc
data16
xor
mov
mov
or
cltd
hlt
mov
sbb
in
mov
inc
or
scas
mov
add
mov
push
pushf
jb
push
pop
out
dec
sbbb
xor
jnp
cmp
insl
bound
scas
popa
push
jnp
and
mov
mov
or
add
dec
out
cmc
push
fucomi
jbe
or
adc
xchg
loope
sub
mov
pop
or
jecxz
shrl
enter
sub
mov
jne
adc
jecxz
push
sti
test
loopne
les
cmp
sub
rcr
bound
sti
xchg
cmc
mov
je
pop
enter
mov
push
inc
ret
push
inc
mov
imul
fcomps
mov
inc
test
outsb
cmp
repz
hlt
pushf
sarb
jne
in
dec
jmp
fcmovnbe
fcompl
adc
gs
stos
insb
aaa
repz
jl
std
call
subb
sbb
imul
mov
xor
xchg
sbb
jl
negl
loop
adc
mov
sbb
mov
push
dec
rol
outsl
xlat
sub
xor
filds
les
sub
mov
pop
inc
inc
add
lods
or
xchg
outsl
jge
adc
fisttpl
jb
in
lock
js
mov
jmp
lret
add
fisubrl
mov
push
stos
bound
adc
xchg
xor
pop
mov
roll
fwait
cmp
cs
fists
xchg
push
push
fs
test
jge
pusha
mov
lret
lods
pop
dec
cmp
mov
sub
pop
les
pop
push
stc
dec
xchg
push
xor
pusha
cmpsb
add
cmpsl
scas
and
hlt
inc
push
or
lods
daa
sub
mov
clc
dec
jge
movsl
sub
xchg
inc
jnp
xchg
add
aas
loope
pop
xchg
lahf
out
loop
cmp
sar
pop
fisttps
xor
in
mov
mov
pusha
adc
jno
ficompl
pop
xchg
ret
jp
pop
mov
mov
xchg
xor
push
sub
push
loopne
mov
mov
and
and
cmp
add
or
cli
in
xchg
mov
push
jge
cld
sti
sub
mov
filds
leave
mulb
adc
cmp
jo
push
pop
push
sti
stos
or
jo
dec
movsl
sahf
aaa
jp
cmp
sub
pushf
mov
pop
mov
cmc
jb
jle
shrl
sub
and
fcmovb
or
pushf
bound
cmpsb
std
imul
push
dec
xchg
cli
adc
jge
clc
fwait
call
inc
clc
or
adc
sub
push
lds
mov
int
pop
or
pop
lret
cwtl
in
ret
mov
pop
cmp
xor
inc
sti
cmc
ret
insb
daa
outsb
dec
cld
lea
xor
test
clc
mov
scas
jb
in
add
sub
push
xchg
loopne
loop
cltd
jmp
xchg
dec
inc
movsl
lock
lahf
add
pop
pop
xchg
lock
out
test
dec
das
or
nop
add
divb
mov
mov
out
std
aad
fisttps
xor
push
out
xchg
in
sub
test
mov
or
add
aas
xchg
add
pop
pop
cmp
test
orb
in
fdivs
outsl
fsubr
mov
fs
jmp
lahf
sub
mov
popa
and
jmp
push
or
in
dec
mov
dec
cmp
fwait
sub
movsb
jge
sub
mov
adc
shl
mov
dec
push
stos
popa
sar
movsl
roll
or
cmpsb
xor
bound
movsl
push
inc
lret
sbb
sbb
sub
and
cmp
std
or
iret
or
into
pushf
inc
sub
sub
sub
into
sahf
aad
dec
and
cld
je
jb
dec
cmp
jp
dec
add
jbe
lods
xor
fstpl
pop
aam
push
inc
ret
rolb
sbb
gs
jmp
lcall
jbe
jmp
xor
out
cmc
pop
pop
shlb
xchg
mov
jle
loope
les
mov
push
ss
repz
pop
clc
cltd
js
fisubs
insl
xor
mov
rol
cmp
pop
rcll
jno
leave
push
lock
jno
or
mov
mov
jecxz
jae
dec
sub
out
mov
dec
mov
popa
jne
lods
cli
xor
mov
mov
test
test
xchg
cmp
outsb
jns
sub
fwait
gs
sub
mov
xlat
in
push
cltd
and
fnsave
mov
out
daa
lret
cmp
mov
and
sbb
test
outsl
adc
adc
xor
fmuls
mov
or
lods
data16
sbb
push
mov
fsts
adc
mov
mov
add
pop
or
inc
mov
fimull
dec
add
lds
aas
shll
xchg
pop
inc
scas
mov
in
mov
push
lea
flds
arpl
sete
mov
sub
inc
xchg
test
add
mov
nop
push
xchg
add
or
mov
in
and
xchg
cmovb
cld
pop
test
jle
fstpl
scas
stos
je
and
inc
jnp
adc
push
inc
mov
call
push
popf
mov
insl
enter
in
cmp
push
call
sar
and
stos
mov
jmp
inc
jno
mov
push
int
jle
sti
mov
jl
bound
dec
cltd
cltd
jo
lods
sbb
adcb
or
sahf
loop
mov
sahf
adc
out
xor
cmc
adc
xchg
push
xor
cmp
cmp
cmp
dec
lahf
mov
or
in
or
rcrl
sti
cmp
sbb
mov
stc
test
lcall
lcall
xor
inc
aaa
les
mov
test
mov
push
gs
rcll
mov
mov
out
mov
lret
dec
push
mov
and
pushw
mov
push
mov
or
xor
out
add
sbb
shl
fs
in
adc
cmc
mov
cmpsb
testb
shl
dec
push
fisttpll
pop
mov
add
call
movsb
imul
jl
jecxz
pop
cmc
mov
lds
testl
fimuls
das
out
jnp
into
pushf
sbb
cli
push
and
das
mov
cmp
or
dec
rorl
jmp
data16
inc
mov
stc
dec
lds
inc
dec
cmp
mov
ja
pop
xchg
leave
inc
outsl
adc
mov
lods
scas
in
mov
icebp
in
mov
push
pushf
fwait
dec
xchg
cmc
mov
pop
and
test
or
or
dec
mov
push
mov
xor
aad
mov
dec
insb
ja
fnstenv
sub
aaa
sbb
push
lock
jns
xor
nop
pop
mov
or
lcall
lods
fmull
rorl
adc
mov
mov
mov
mov
cmpl
push
cld
dec
dec
push
aas
mov
or
jg
insl
in
sti
iret
add
pop
fcomps
cmp
inc
std
fstl
sub
mov
out
adc
add
insb
xchg
push
xchg
mov
cmp
loop
gs
hlt
xchg
add
xor
cmc
pushf
icebp
loope
and
jo
scas
cli
sbbl
scas
jnp
pop
jno
jo
fcomp
outsb
incb
adc
xchg
dec
test
pop
cmc
fldcw
test
jmp
scas
add
loopne
pop
push
mov
fcoms
push
call
outsl
dec
cmpb
pop
dec
lret
cmpsl
test
cmp
push
insl
fxch
call
es
mov
pop
xchg
aad
sbb
jo
std
jo
insb
adc
mov
add
or
mov
rcll
leave
mov
jp
sbbl
mov
in
push
mov
test
dec
xchg
or
divb
push
shlb
jae
push
mov
dec
push
ja
scas
scas
pop
aam
push
jnp
mov
cmc
inc
adc
jae
adcb
jno
lea
jp
xchg
add
cmp
jmp
aad
les
mov
je
test
push
fstp
jns
ljmp
hlt
cli
cmp
das
fwait
pop
ret
jnp
mov
test
out
pusha
pop
cmp
popf
push
lret
pop
mov
repz
cmpsl
int3
push
jecxz
jp
iret
dec
mov
add
and
cmp
es
jb
movsb
enter
mov
js
lcall
sahf
imul
jmp
inc
into
nop
mov
fists
cmp
push
imul
mov
xor
and
push
test
scas
push
adc
imul
loopne
gs
pop
fistpll
mov
xchg
dec
or
push
mov
ljmp
pop
mov
jle
mov
jnp
mov
in
cwtl
mov
shr
cltd
pusha
loop
mov
lret
mov
fistpl
outsb
or
xchg
cld
and
idivb
and
push
jmp
pusha
adc
mov
adc
out
push
inc
push
xchg
decl
push
outsb
sbb
sub
xchg
outsb
pushf
in
jle
cmp
rol
sahf
mov
les
rorb
cmp
cmp
cmp
sub
test
in
sbb
pop
fiaddl
dec
test
jp
fdivr
push
lret
insl
cmp
pop
cmp
das
jne
arpl
scas
jp
aad
out
ret
das
jnp
nop
testl
aaa
mov
test
push
inc
xor
jae
int
sub
mov
ss
xor
clc
repz
jne
push
ja
int3
rorb
fs
das
fldcw
xor
lock
push
cld
lds
xchg
mov
cli
cli
mov
sbb
and
outsl
rcrl
movb
cmpsl
outsl
aas
stos
pushf
fistpl
xchg
aaa
mulb
and
mov
arpl
mov
fdivs
loop
popl
inc
pop
push
sub
mov
xchg
push
test
pop
mov
push
or
pop
js
cmpsb
mov
das
enter
rcl
pop
rclb
stos
mov
aad
dec
xor
cmp
and
outsl
movsl
stc
in
pop
ds
hlt
fwait
push
insl
imul
ss
rcrb
aam
fbld
jle
dec
inc
scas
adc
mov
sbb
icebp
fwait
in
pop
add
pusha
inc
dec
mov
sub
or
in
push
in
cs
aam
mov
xchg
mov
incl
dec
repz
adc
or
jns
mov
gs
cld
xchg
negb
roll
int3
fnstcw
pop
mov
pop
dec
psubq
imul
in
cmc
sahf
inc
pop
fsubr
std
jbe
shrl
hlt
ljmp
adc
js
mov
xchg
jo
jle
cli
jge
insb
nop
repz
js
sub
inc
or
or
adc
sub
xlat
imul
insb
int
inc
rcr
xchg
mov
sbb
xor
push
testl
out
jne
mov
test
add
xchg
shl
add
stos
inc
fs
test
inc
pop
movsl
fistps
xchg
jge
roll
add
cmp
xor
mov
adc
cmp
push
outsl
andb
mov
cmpsl
stos
jae
jno
fmull
iret
clc
js
pusha
into
out
in
mov
cltd
lret
ds
push
arpl
fs
popa
sub
fistl
loopne
cwtl
bound
jo
popa
jmp
sub
xor
mov
xchg
pop
adc
sbb
mov
push
lcall
sub
cmp
jnp
and
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
adc
push
imul
push
inc
std
push
pop
jl
mov
cld
xchg
outsb
push
loopne
inc
movl
addb
lds
rcrl
stos
fyl2xp1
push
xchg
push
cmp
xor
mov
mov
rorl
cmp
arpl
and
into
and
rolb
aas
lods
sub
lahf
inc
jmp
and
insl
push
addr16
jne
jbe
cmp
jmp
popa
push
movsb
cmc
sarl
add
jl
adc
mov
xchg
mov
les
enter
movsl
inc
inc
cwtl
push
daa
movsl
sbb
or
jecxz
lds
andl
mov
mov
xchg
loop
insb
lea
xchg
lcall
in
cltd
add
cmp
loop
jge
shl
fdivrs
xor
cmp
lds
ds
mov
mov
mov
sub
mov
repnz
sbb
shll
inc
loopne
inc
out
jns
add
lods
xlat
mov
adc
loopne
cwtl
pop
fbstp
xchg
jb
add
stos
mov
lds
fcomps
pop
aad
xor
cmp
adc
scas
or
shl
std
push
outsl
hlt
loopne
sarl
xchg
jno
ljmp
in
mov
sbb
xchg
in
jle
jns
outsl
sub
test
lds
mov
sbb
mov
pop
xor
fsts
xor
xor
or
int
ss
lcall
adc
stc
popf
in
dec
movsl
dec
incb
and
or
daa
test
xchg
xchg
cmp
cmp
jns
mov
outsl
shrb
push
pop
cmp
adc
jp
fwait
pop
ljmp
mov
mov
cmp
sub
lret
jmp
mov
pop
dec
push
and
mov
aas
push
in
xorl
dec
out
sub
mull
inc
mov
aad
test
mov
xor
rorb
xchg
out
jmp
and
flds
in
adc
jbe
inc
and
sbb
icebp
jmp
cmp
nop
dec
addr16
les
lcall
sbbb
adc
test
pop
ds
out
icebp
xor
addr16
mov
icebp
repz
cmp
imul
stos
mov
sahf
repnz
jmp
sub
arpl
jg
fs
lahf
sahf
notl
data16
cmp
xchg
mov
xchg
sub
sub
inc
xchg
dec
pop
mov
mov
mov
inc
jp
xchg
je
and
xor
pop
jecxz
xor
dec
push
fsts
mov
shrb
mov
data16
cmp
add
lods
push
and
push
mov
dec
ficomps
fs
pop
push
lds
ret
jb
xchg
mov
adc
icebp
fbstp
cmp
jno
pop
clc
inc
into
hlt
add
sub
xchg
out
xchg
dec
mov
stos
cmp
pop
in
popf
xchg
dec
ds
push
mov
cld
data16
pop
mov
cmp
shrl
je
movsb
out
xchg
test
popf
sbbb
mov
sub
sub
roll
lahf
lock
cmp
inc
mov
push
cmpsb
daa
shlb
jno
xchg
adc
cmp
repnz
or
stos
ret
popf
xorb
outsb
mov
fildll
dec
pop
pop
xchg
push
jl
popa
mov
leave
sar
loopne
testb
inc
icebp
imul
sub
sahf
and
stos
jno
imul
fs
sarb
or
lret
ds
arpl
jnp
pushf
mov
pusha
pop
lahf
push
lods
xchg
push
xchg
and
or
mov
xchg
shl
and
add
das
sub
inc
push
out
lock
data16
je
mov
pop
xor
and
and
loope
xchg
sub
and
mov
mov
jns
ss
lds
add
aaa
push
xchg
mov
sub
xor
lea
fsubs
push
andb
gs
sub
push
push
jmp
vpmacsdql
or
mov
xchg
xchg
sbb
push
shll
mov
jl
je
fstps
in
pop
mov
jmp
xlat
adc
mov
mov
lret
jge
mov
and
clc
icebp
cmp
sbb
xchg
sbb
fcmovnu
loopne
loopne
cmp
imul
mov
and
testl
pop
mov
je
test
outsl
cmp
pop
dec
jle
inc
xor
or
cld
mov
push
or
sbb
repnz
sub
inc
gs
cmp
push
hlt
test
enter
shlb
sub
stc
pop
negl
push
push
fcmovnu
into
pop
fcomi
inc
jmp
loope
mov
add
sub
call
sub
out
xorb
lods
add
in
leave
div
fimull
scas
sub
jno
movsl
inc
push
xor
in
cmpl
rclb
xchg
cltd
daa
mov
outsb
and
mov
pop
fiadds
and
mov
lret
xlat
mov
jl
mov
outsb
movsl
ret
sahf
sbb
pop
cli
dec
inc
cmpsb
add
repz
mov
jge
mov
mov
push
cmp
les
in
jo
dec
clc
insb
mov
push
shll
dec
xor
xor
cmp
mov
jns
inc
cmp
mov
inc
xorb
xchg
ljmp
int
xchg
or
movsl
cs
push
lds
pop
sbb
lret
arpl
sub
pop
jne
or
xlat
pop
cmp
mov
inc
mov
add
fld
pop
loopne
push
inc
inc
sub
into
shr
and
in
aas
lret
pop
xchg
push
jns
jnp
leave
sbb
jmp
inc
cltd
pop
test
imul
xchg
pop
inc
lds
and
ss
enter
push
jne
jbe
add
fsubrl
sbb
mov
sti
int3
lcall
in
popa
fdivp
jae
pop
jmp
sub
in
mov
mov
mov
pop
push
test
cld
cs
sbb
push
mov
pop
jne
adc
lock
les
push
aam
jo
pop
lcall
ffreep
scas
push
mov
ja
sbb
pop
gs
insl
push
pusha
cld
daa
ja
das
rcr
movsl
outsb
xchg
cwtl
sti
xor
sbb
mov
pop
leavew
xchg
or
add
mov
gs
ljmp
dec
xchg
ds
xchg
insb
or
and
pop
sub
imul
lret
sub
adc
and
mov
or
sub
inc
fs
push
adc
daa
inc
pop
test
sub
lahf
lret
aad
fisubrs
mov
fwait
dec
stos
cmp
mov
data16
mov
sbb
out
push
jo
int3
nop
mov
jl
cld
mov
push
adc
fs
and
out
add
dec
adc
mov
lods
bound
int3
sub
pop
cs
pushf
push
cmpsb
pop
ja
and
lret
cmp
int
adc
xor
shlb
xlat
in
mov
mov
in
push
rolb
add
aam
in
pop
lds
stos
mov
ljmp
std
push
push
mov
aaa
decb
pop
mov
pusha
js
jb
std
insl
jl
loop
arpl
out
add
sub
inc
inc
stos
mov
rcrl
cs
lahf
int
or
loop
and
xorl
sub
dec
sbb
push
jp
adc
rcr
mov
stos
inc
leave
mov
cmp
jb
hlt
popa
add
sti
adc
ret
push
outsl
shll
mov
sub
out
cmpsl
ret
imul
or
sub
mov
repz
out
aaa
addl
jnp
sarb
dec
inc
rolb
adcl
or
sub
xchg
adc
rcl
inc
mov
imul
cmp
jg
mov
fstpt
pushf
ss
loope
addr16
movsl
mov
sarl
mov
ret
adc
add
popf
cld
xor
pushf
imul
push
xorb
sbb
mov
int
mov
movsb
lods
jnp
test
out
cmp
and
mov
mov
int
cltd
jne
cli
inc
cmp
jno
pop
mov
pop
ret
or
dec
scas
jae
dec
les
iret
mov
pop
mull
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
mov
outsl
movsl
psubb
xchg
mov
xchg
dec
mov
sbb
push
mulb
movsl
sbb
pop
xchg
push
aaa
pushf
call
sahf
or
mov
xchg
cmpsb
fcoms
cwtl
and
mov
aas
ror
aad
ljmp
mov
inc
addb
cmp
or
mov
adc
enter
xchg
daa
cmp
xchg
dec
adc
jmp
clc
aas
jecxz
outsl
mov
subb
adc
mov
cmp
clc
in
std
daa
mov
and
sti
dec
out
pop
adc
sub
imulb
int
call
cli
add
inc
jecxz
test
nop
repz
rolb
leave
lret
mov
fs
sub
pmaddwd
stos
mov
loope
test
lods
in
cmp
addr16
andb
or
imul
mov
jl
pop
jp
push
mov
jns
repnz
jae
outsb
jae
pop
dec
cmp
pop
mov
aad
pop
and
outsl
xchg
mov
pop
mov
or
andl
stos
nop
adc
mov
daa
cmpsl
fwait
pusha
adc
sbb
out
ja
mov
or
jmp
in
push
ss
insb
xchg
cmp
xor
jo
add
pop
pop
add
daa
adc
jnp
adc
inc
sbb
int3
add
out
outsl
inc
xor
movsl
stos
xor
lret
xchg
xor
adc
fsubs
loopne
repnz
lock
jns
sbb
sbb
mov
push
andl
in
negl
dec
or
or
dec
jecxz
pop
iret
jb
dec
sub
xor
stos
insl
xor
push
jns
fnsetpm(287
jp
lcall
and
cmc
jge
fsubr
inc
or
xor
sahf
insb
data16
cmpb
arpl
mov
xchg
mov
movsb
sbb
call
ljmp
das
int
push
inc
in
dec
orl
and
sub
pop
xchg
les
jmp
mov
add
js
gs
adc
xor
cmp
cmc
sbb
cmpsb
adc
test
out
sbb
sub
mov
int
repz
mov
out
mov
sbb
daa
inc
popa
cld
dec
add
ljmp
push
inc
push
lea
aaa
mov
push
pop
incb
xchg
jbe
int3
stos
jp
jae
inc
xchg
lods
out
cwtl
push
lahf
mov
in
mov
push
dec
push
clc
fcomip
push
or
call
fwait
sub
push
mov
arpl
iret
int3
adc
notb
pop
sbb
jbe
push
lods
push
fnstcw
push
sahf
pop
pop
jmp
and
in
test
movsb
push
sub
add
xlat
fsts
pop
cli
sub
mov
push
mov
mov
mov
call
cmp
lret
insl
xor
fmuls
mov
pop
add
jg
xorb
mov
jns
inc
jo
and
xor
cli
mov
push
push
mov
jle
push
or
xor
pop
mov
mov
or
out
jnp
bound
xor
fs
lock
cltd
sbb
push
test
or
in
xchg
lock
outsl
inc
mov
push
sub
push
xlat
mov
aad
cmpsl
test
shrb
lods
jno
add
ret
or
fwait
cmp
cmp
dec
jl
mov
and
sbb
rorb
in
lcall
cmp
push
fdivrp
cli
adc
cmc
mov
stc
cmp
inc
xchg
xchg
in
fidivl
jmp
push
dec
imul
mov
pop
js
jns
lods
pop
or
add
jp
outsb
and
clc
in
mov
mov
movsl
or
pop
outsb
push
insb
jle
jae
mov
sbb
imull
sbb
dec
dec
ret
and
xchg
into
sub
xor
fdivrl
leave
jmp
in
bound
sbb
or
imul
sarl
mov
lods
dec
jno
sbb
lret
scas
sbbl
outsl
lea
mov
pop
and
ror
lahf
leave
in
lahf
mov
inc
enter
xchg
arpl
aas
ja
rcll
mov
lret
les
mov
ss
cmp
sbb
jo
cmp
aaa
out
dec
inc
sbb
sar
mov
mov
mov
fiaddl
pop
cmpsl
testl
mov
stos
leave
cmpl
pushf
dec
sub
mov
xor
or
add
push
jg
adc
cmp
or
pop
inc
push
jg
insl
std
out
cmp
jle
loope
mov
movsl
push
dec
es
xor
es
xor
or
je
xlat
es
aaa
lahf
ss
push
je
dec
xchg
incl
xchg
fstps
lea
jnp
stos
push
outsb
sub
adc
cmpsl
push
lds
ret
movsl
xor
cmpl
out
es
add
push
insb
jo
add
movsb
outsb
xchg
mov
out
adc
iret
stc
jns
int3
lds
scas
xor
in
ja
enter
mov
addr16
stos
mov
loope
and
test
cmpsl
sahf
sub
cmpl
push
mov
xchg
dec
mov
xchg
push
arpl
add
xchg
push
adc
cmpsb
push
fimull
aam
xor
icebp
arpl
push
cld
dec
jnp
jmp
and
lods
xchg
pusha
loopne
dec
mov
insb
loopne
inc
stos
mov
jbe
stos
push
loope
sbb
dec
or
test
fldlg2
jno
pop
test
cmp
insl
lcall
inc
jno
mov
inc
xor
push
jae
pusha
xchg
jl
lret
nop
repnz
inc
cmp
push
push
outsl
ljmp
inc
xchg
subl
or
mov
ss
sbb
mov
jge
prefetch
xchg
inc
mov
mov
or
sahf
in
cmp
dec
cltd
aad
in
add
xchg
pop
mov
jb
cltd
stc
in
popa
adcl
pop
cwtd
push
and
inc
pop
mov
out
cmp
loop
pop
xchg
mov
sbb
jecxz
or
inc
and
repnz
xor
out
add
cmp
xchg
loope
pop
dec
dec
ds
dec
test
fcomps
sub
add
aas
fimuls
add
sahf
out
and
pop
push
scas
sbb
test
jle
cmp
shlb
mov
add
pop
scas
es
lret
out
fstpl
dec
dec
subb
testl
inc
ret
push
mov
decb
out
insl
xor
cmpb
jae
pop
adc
es
push
sub
push
lret
adc
sbb
std
js
dec
push
xchg
jl
xchg
jmp
push
pop
gs
mov
lret
inc
enter
repz
ret
cli
sbb
inc
or
mov
jb
ss
sub
ja
sub
dec
cltd
inc
imul
repnz
pop
shll
xchg
add
cmp
leave
sub
and
cmpsl
add
movsl
in
gs
inc
rcll
jp
mov
and
xor
mov
xchg
mov
inc
push
cli
jmp
inc
bound
movsl
push
std
xchg
push
in
lock
cmpsl
test
int3
fs
cltd
and
or
cwtl
xchg
push
pop
xor
testl
out
fs
sbb
adc
test
jecxz
lods
inc
in
and
xor
cmp
shrl
lcall
mov
loop
jns
pop
jns
mov
int
pop
mov
adc
dec
pop
adc
jmp
or
into
fcomi
sub
ljmp
xorb
pop
repz
mov
mov
pop
mulb
mov
sub
cli
lcall
nop
mov
jge
out
push
push
push
lcall
cmc
xchg
addb
pop
movsb
jg
adc
sahf
mov
pushf
stos
push
js
aad
mov
jmp
test
mov
test
cmp
pop
dec
rcll
repz
mov
and
sub
xorb
int3
lret
lods
push
mov
clc
xorl
shr
je
hlt
or
enter
push
in
push
mov
inc
sub
stc
std
inc
mov
pop
inc
cmp
push
jp
mov
cmp
cmc
fldlg2
movsl
in
gs
ret
or
das
cmpsb
mov
fbstp
sub
in
mov
sahf
mov
pop
ret
dec
rcll
cmpsl
mov
fdivl
or
sbb
cmp
dec
add
ucomiss
out
jmp
in
ret
pop
mov
int
mov
mov
push
mov
or
cmp
sub
xchg
mov
push
mov
xor
cmp
loope
dec
lret
ljmp
mov
push
lea
sub
dec
lock
add
dec
mull
or
clc
add
xchg
mov
xchg
dec
popf
mov
shrl
jne
out
sysret
and
mov
mov
inc
stc
sbb
inc
imul
dec
inc
into
mov
add
lods
push
jp
mov
arpl
in
inc
push
xor
insl
shl
inc
cmpsb
xchg
enter
in
xor
aas
test
xor
imul
pusha
cmpsb
pusha
jo
dec
js
loop
jbe
aas
mov
je
push
and
sbb
cmp
ror
out
jns
daa
jge
cmpsl
inc
cmp
in
call
rorl
mov
lcall
insl
dec
out
ds
cmp
test
les
or
jp
aas
lret
outsl
fwait
jns
fstpl
test
inc
jno
gs
xchg
jg
pop
add
daa
fwait
js
jg
pop
add
add
in
inc
or
cmp
jnp
aam
xchg
ljmp
jno
mov
idiv
ja
mov
das
add
rcrb
je
into
adc
pop
std
add
inc
daa
fisttpll
pop
dec
mov
scas
dec
mov
push
cmp
loope
mov
push
lret
add
or
dec
pop
mov
test
ds
testb
cmp
or
aam
mov
or
mov
sub
nop
adc
fst
mov
pop
cmpsb
mov
adc
cmp
lahf
pop
sbb
test
jmp
repnz
xchg
mov
dec
inc
call
pusha
push
es
cmp
add
icebp
dec
push
inc
mov
outsb
stc
pop
mov
xor
test
dec
lcall
lods
push
cmp
arpl
mov
lods
lock
push
fisubl
adc
pop
js
adc
cmpsb
loop
arpl
cmc
mov
and
test
mov
lahf
jb
jno
xor
lods
and
das
arpl
sub
into
and
ds
out
sbbl
loop
xor
pop
shl
sub
or
dec
call
mov
fs
xor
xchg
push
dec
cmc
push
jae
jae
int3
sub
dec
mov
scas
mov
std
call
inc
out
scas
fldenv
popl
aam
mov
aam
adc
cwtl
sbb
fs
cwtl
mov
es
outsl
std
sub
shr
dec
dec
inc
push
repz
rcrl
mov
subl
std
pop
les
fs
sub
inc
xor
fs
addr16
pop
add
mov
xchg
cltd
imul
or
sbb
shll
jnp
ds
ret
inc
sbb
push
sahf
or
in
ret
add
daa
cmp
ljmp
pop
cltd
les
aas
lds
shrl
jno
or
aaa
inc
mov
xchg
sbb
fldl
and
mov
outsl
xchg
js
loopne
lahf
test
insl
fucomi
jle
iret
push
inc
cwtl
pop
fcoms
push
sbb
xchg
or
push
loope
mov
cltd
add
adc
movsl
std
inc
es
test
jno
pop
pop
nop
and
cmp
xor
inc
mov
xchg
fmuls
cmpsl
data16
lea
jecxz
scas
adc
mov
lcall
jb
lods
or
popa
xchg
mov
jo
arpl
mov
xor
add
mov
push
cmp
shll
mov
cmc
testb
call
xchg
xor
mov
adcb
adc
js
aam
fcompl
out
cmpl
mov
fsubrl
sub
mov
dec
lea
xorb
dec
mov
fsubrl
fnstenv
cmp
mov
inc
push
push
mov
add
lds
fwait
repnz
ret
int3
push
clc
movsl
aaa
jb
sub
pop
scas
push
nop
push
clc
xchg
xchg
repnz
test
sub
pusha
push
mov
jle
clc
mov
jecxz
and
jmp
mov
js
fldl2t
cmp
loopne
in
in
dec
test
fwait
xchg
lcall
jle
test
lahf
jne
jns
sarl
ja
sub
arpl
cmpsl
push
arpl
out
push
jae
xlat
rol
popa
andnps
xchg
das
enter
xorb
and
test
adc
dec
cmp
lret
inc
ss
adc
mov
cwtl
gs
cmp
cli
adc
pop
out
push
jp
jmp
mov
test
mov
push
jne,pn
xchg
sub
testb
arpl
lahf
stc
mov
add
xor
cli
nop
loop
mov
cwtl
mov
lret
fnsave
cmp
fistps
xor
xlat
push
out
xchg
pushf
adc
or
loope
adc
sbb
jae
jmp
mov
aaa
mov
cmp
cmp
ljmp
adcb
push
jns
in
nop
dec
mov
mov
ja
or
scas
pop
jge
and
sbb
jle
and
inc
lret
iret
scas
test
pop
into
jecxz
mov
lcall
dec
or
push
dec
loop
jo
fldl
mov
sbb
rcll
dec
shlb
sbb
enter
and
or
jle
insb
and
push
pop
dec
lcall
movsl
rsm
pushf
imul
enter
int3
xchg
rcrb
add
push
jae
push
jp
cmp
nop/reserved
xchg
mov
fimull
loope
sbb
lret
jmp
outsb
xchg
mov
shlb
jno
les
popf
or
imul
sbb
and
fcoms
pop
rclb
call
daa
in
gs
pop
pop
shrb
fwait
clc
add
lds
adc
loop
fcmovnu
aaa
aas
dec
xchg
in
jge
mov
adc
push
cmpl
ret
cwtl
or
or
cmp
and
and
sahf
jb
in
inc
mov
repnz
adc
aad
repnz
cld
pop
jp
and
gs
push
mov
xchg
adc
jno
into
xchg
xlat
sub
aam
pop
sub
inc
out
adc
jbe
push
dec
mov
mov
adc
fimuls
mov
insb
push
cltd
cmp
shl
mov
jp
mov
or
push
xchg
sbb
test
push
repz
xchg
push
mov
scas
lahf
enter
into
stos
pusha
in
mov
test
and
adc
inc
scas
lahf
jno
movsl
pushl
insb
ret
or
cltd
push
pusha
sub
icebp
xor
daa
in
and
push
rclb
mov
push
push
arpl
adc
mov
adc
sbb
addr16
push
movsl
xchg
jle
mov
push
repz
negl
test
loop
pop
pushf
jmp
jmp
cmpsl
or
outsl
xor
sbb
fdiv
mov
repz
push
sub
xor
cmp
jecxz
dec
sbb
loop
cmc
lea
mov
dec
mov
test
gs
sbb
mov
sub
push
enter
test
jp
aam
enter
iret
lods
arpl
sub
xchg
mov
push
add
lods
mov
mov
jmp
pop
jecxz
loope
fcoml
sub
sbb
sahf
out
outsb
loop
mov
mov
xchg
outsl
lahf
popa
lret
and
in
nop
dec
leave
test
dec
add
lea
je
cli
mov
mov
fdivs
cmp
aam
mov
clc
add
sbb
adc
fs
mov
adc
mov
xor
loopne
or
sub
add
in
adc
dec
mov
mov
pop
rcr
ljmp
sbb
ficoml
or
cmp
xor
lock
arpl
push
mov
push
inc
call
sbb
dec
sub
outsb
push
filds
mov
mov
mov
scas
push
aas
dec
mov
adc
dec
jnp
push
xor
fildl
mov
xor
scas
test
orb
sbb
rorb
pop
popa
repnz
mov
popa
call
jp
jae
mov
outsb
cmpsl
fidivrl
mov
sbb
jge
cltd
add
mov
inc
or
icebp
scas
dec
adc
cmp
jle
jg
dec
jnp
add
sbbb
loop
add
and
sub
mov
push
rcl
jns
jmp
sbb
mov
gs
adc
stos
prefetchnta
push
xor
sub
push
push
lahf
adc
jno
test
pushf
js
out
je
xchg
lfs
lret
xor
add
pop
jo
shll
cmp
arpl
js
push
jns
jo
leave
lods
popf
sbb
jge
addr16
movsb
cmpsb
mov
das
movsl
sub
fwait
pop
insb
xchg
mov
fstl
sahf
cmp
add
outsl
jbe
sahf
push
add
xor
xchg
mov
out
inc
fbld
repz
or
lods
cli
xor
mov
es
adcb
fnstcw
mov
mov
pop
mov
and
movsl
decb
pop
shlb
mov
fbstp
dec
cmp
stos
dec
push
sbb
or
and
int3
pop
daa
adc
in
mov
addb
and
xor
imul
xor
jg
mov
mov
jae
dec
cmpsb
xor
pushf
push
mov
push
or
cmp
addl
xchg
dec
mov
popa
scas
mov
jae
frstor
iret
ret
sub
dec
lret
mov
cmpsl
lret
dec
aaa
iret
mov
ror
adc
cmp
test
outsl
sub
jne
adc
int
mov
int
pop
mov
lds
sub
mov
pushf
aad
jnp
and
loop
mov
out
out
adc
cmc
mov
add
mov
int
lods
add
leave
stos
jp
xor
bound
mov
rcrl
add
push
ret
ljmp
adc
lahf
shll
int3
imul
out
ret
mov
and
or
sbb
and
mov
push
sbb
sti
xchg
push
cmp
push
jbe
push
or
lods
jno
pop
mov
loopne
mov
sub
clc
mov
and
outsb
mov
mov
pop
jl
xor
aad
mov
ret
popa
outsl
insl
or
mov
ja
mov
flds
repnz
testl
jbe
in
mov
jne
mov
push
and
outsl
dec
mov
sti
cmp
xor
cs
popf
cwtl
mov
and
xor
cmp
sbb
mov
mov
mov
ja
push
idiv
jbe
push
sbb
inc
pop
or
fwait
and
pushf
xchg
push
and
mov
andb
xor
lahf
not
in
subb
cmp
jo
popf
sahf
repnz
mov
fwait
cmpsl
lea
xchg
aad
xor
or
mov
adc
xor
xchg
xor
in
sub
into
cmp
sbb
insl
fs
loopne
push
lahf
mov
movsb
adc
cmp
enter
icebp
js
adc
push
push
mov
ljmp
jae
pop
and
sahf
and
adcb
test
xchg
push
je
int
loopne
jae
test
mov
and
dec
add
push
jmp
fcomps
and
lret
icebp
xor
scas
divb
jno
pop
push
mov
test
sbb
mov
gs
fisubrs
xchg
stos
xlat
pop
and
int
dec
push
clc
fs
sbb
rorl
sti
iret
push
sbb
mov
int3
xor
loope
test
jmp
daa
mov
jbe
push
push
sbb
sub
lret
cmc
ja
aam
imul
and
lea
hlt
sahf
jbe
dec
lods
divb
jne
in
mov
pop
pop
aaa
data16
rcl
iret
sti
xchg
les
lahf
jecxz
mov
pop
repnz
out
es
dec
mov
int
loopne
xor
arpl
imul
mov
pop
jnp
adcb
mov
int3
cmp
fwait
mov
sub
push
mov
mov
mov
or
sti
jb
dec
mov
aam
xor
mov
jb
lock
mov
sbb
and
test
mov
lods
jno
icebp
lea
lods
mov
ret
push
push
sti
fisttpl
test
pop
mov
fs
mov
add
add
ja
filds
cmp
and
lret
mov
sub
mov
inc
and
push
pop
dec
jmp
sti
cmp
jns
arpl
sbb
pop
dec
pop
test
ret
sbb
sbb
out
or
jp
movsb
mov
xchg
xchg
xor
mov
lods
xchg
cmp
out
jae
or
out
and
movsl
rcl
dec
cmp
inc
adc
sti
int3
xorb
xchg
push
mov
lods
push
xor
mov
testb
inc
or
pop
inc
dec
and
movsl
test
mov
pop
test
dec
push
ja
outsb
and
xor
jp
loope
in
add
test
cmp
cltd
mov
cmpsb
fwait
jbe
cmp
push
inc
cmp
loop
shl
icebp
daa
and
push
rolb
fnsave
push
lcall
mov
push
repz
dec
daa
mov
push
arpl
lods
push
mov
cwtl
call
das
dec
fimull
dec
mov
cmp
sar
ret
lock
mov
stos
shl
xor
pop
insl
arpl
aam
pop
sub
mov
xchg
es
push
out
adc
pop
mov
stos
cwtl
mov
inc
fisubs
fisubrs
std
add
nop
bound
push
adc
movsl
dec
leave
inc
or
push
rolb
sbb
clc
test
and
and
lcall
aam
popf
dec
shrb
aaa
adc
push
cmp
cwtl
push
push
mov
xor
dec
shll
and
sub
xchg
mov
push
sti
dec
inc
movsl
dec
mov
adc
stc
jnp
jnp
jns
sub
sbb
pop
ljmp
mov
bnd
in
insb
add
sbb
dec
xor
repz
sub
jae
dec
mov
dec
mov
mov
fldl
and
push
add
mov
mov
jl
mov
loop
in
ret
sbb
sbb
aad
push
xor
test
lahf
xor
test
pop
lret
xor
cmpsl
and
pop
or
inc
das
mov
push
pop
sub
cs
cmp
pushf
xlat
jns
add
int
data16
leave
sbb
pop
sub
push
in
mov
ret
cltd
xchg
sub
repz
leave
fisubl
cmp
flds
dec
popf
loope
fwait
movsb
pop
xchg
std
xchg
inc
inc
xor
loop
dec
popa
xor
lea
lods
pop
pushf
sub
pusha
adc
loopne
xor
add
pop
push
cmc
js
mov
adc
repz
jecxz
fdecstp
xchg
dec
jecxz
push
hlt
mulb
or
mov
and
loop
aas
mov
shlb
mov
stos
push
xor
jae
xchg
inc
rorb
cmp
cmpl
mov
clc
sub
pop
repnz
test
outsb
pop
sbb
jbe
push
ds
out
xchg
out
mov
std
lds
cwtl
or
and
push
sahf
shrb
mov
std
pop
or
push
loopne
rorb
add
cmpsb
cmp
sub
xlat
and
xchg
push
iret
push
jl
and
bound
andb
add
mov
xor
int
sub
mov
loop
sub
add
sbb
fnstsw
popa
daa
mov
mov
xorl
je
pop
cli
stos
outsb
sbb
in
pop
loope
inc
dec
pop
scas
jmp
mov
pop
fcmovbe
push
imul
and
dec
insl
cmp
mov
icebp
test
or
mov
or
ficoml
xchg
ds
mov
adc
push
faddp
int
out
and
lods
inc
rcpps
xor
aad
lods
mov
jge
imul
xchg
iret
iret
cli
out
mov
xor
jecxz
pop
add
xchg
sbb
jae
loope
jecxz
std
sarb
sub
and
js
test
rep
sbb
fwait
mov
add
repz
mov
inc
stc
mov
bound
out
mov
pop
dec
fwait
fwait
dec
ss
out
lods
in
mov
out
mov
xlat
push
xchg
inc
daa
rep
inc
pop
out
xor
mov
mov
mov
into
mov
aad
or
fcoml
cmp
dec
adc
mov
rcll
loop
fs
pusha
imul
callw
cmpsl
jbe
into
orb
sti
lea
in
in
ljmp
mov
out
shlb
mov
ss
aaa
mov
mov
jg
in
int3
dec
and
adc
inc
and
dec
mov
pop
jns
xor
sar
sub
inc
test
stos
push
xor
in
push
xorl
cmpsb
push
dec
pushf
fs
jo
outsb
das
mov
imul
cwtl
push
mov
imul
add
or
icebp
arpl
mov
out
xchg
mov
lcall
scas
shlb
loopne
test
bound
push
movsb
inc
aad
jo
xchg
pop
push
outsb
push
jmp
out
mov
dec
hlt
dec
adc
imul
lods
dec
and
rcl
fst
sbb
call
cmp
xor
lea
arpl
daa
loopne
bound
jl
ret
outsl
ret
xchg
mov
cs
cmpsb
mov
test
mov
subb
dec
insl
dec
rol
popa
lock
pop
sub
mov
xlat
fisttpl
fnstsw
es
dec
mov
fld
xor
mov
addl
mov
call
lcall
cmove
jo
cmp
xor
or
xchg
cmp
das
or
xchg
mov
mov
scas
out
jo
clc
fs
push
adcl
cmp
es
mov
mov
mov
pop
in
sub
negb
dec
mov
addb
mov
jmp
dec
test
sbb
shl
lcall
cmc
xchg
add
js
pushf
add
add
xchg
sbb
cld
adc
and
and
pusha
sarl
sahf
scas
mov
shl
push
pusha
fucomip
loope
add
into
sub
dec
adc
sub
iret
sub
pop
pop
fs
jl
add
xorl
xor
jb
clc
lock
in
outsb
lods
pop
adc
es
adc
xorl
loopne
out
rorl
outsb
xor
ret
add
adc
fcoms
popf
sub
sub
push
aas
or
cwtl
mov
fdivrl
js
mov
fdecstp
xlat
xor
inc
adc
lret
cmp
mov
jmp
ret
sub
jg
popf
pop
cmc
stos
cmp
idivl
inc
out
xor
xor
das
push
lea
fdivrs
pop
in
inc
enter
ja
dec
mov
add
bound
cmp
cltd
sub
xchg
cmc
mov
mov
je
jmp
jae
push
dec
sar
jl
mov
push
fistps
dec
cs
pop
cmp
negl
xor
hlt
jbe
ja
inc
leave
sub
enter
clc
test
gs
mov
adc
xchg
fstpt
and
clc
fdivp
and
nop
dec
loop
subl
mov
test
test
and
iret
pushf
fistpll
cmc
sbb
sbb
mov
or
jg
outsl
push
stos
inc
jne
cmp
insl
js
xchg
movb
sbb
jbe
push
ds
cltd
xchg
popf
mov
ss
outsb
sbb
dec
out
loope
sarb
mov
cmp
lret
call
mov
cmp
stos
dec
sub
push
out
adc
and
lcall
ret
lock
test
out
push
push
sbb
dec
rorl
push
jmp
loope
xchg
in
jne
insl
xchg
xchg
dec
inc
mov
push
pop
stos
mov
pop
xlat
jns
out
aam
sbb
aam
mov
lahf
xchg
jno
fcoml
pushf
push
mov
std
pop
fdivrs
dec
cmp
sub
cmpsl
or
mov
mov
or
xchg
mov
adc
push
adc
mov
cmp
sub
ror
xlat
sub
sbb
sub
in
jecxz
in
cmpsl
push
shll
cs
jbe
or
fcmovne
sbb
jnp
shll
imul
mov
jb
notb
es
pop
jge
stos
fsubl
xchg
or
dec
imul
mov
mov
or
mov
sahf
popa
das
mov
push
jle
shlb
bound
mov
call
fldcw
je
imul
fmull
pop
fists
cmp
push
dec
xor
adc
cmp
or
fmuls
outsb
pop
std
mov
xor
pop
dec
or
aas
and
gs
and
jmp
cmc
leave
aam
aaa
enter
mov
fwait
repz
loope
mov
pop
inc
sub
add
xchg
push
mulb
cwtl
push
popa
clc
mov
pop
in
lret
mov
fidivrs
mov
aam
hlt
ja
pop
xchg
xchg
rcll
sub
dec
add
jl
jbe
call
pusha
xlat
pop
stos
setg
shrl
push
ja
add
in
push
mov
hlt
mov
inc
adc
pop
and
notb
sbb
xchg
or
repz
arpl
fisttpl
sbb
pop
or
insl
adc
cmc
cmc
js
dec
pop
popa
lcall
add
cmp
add
xor
imul
push
jne
aas
in
cltd
imul
mulb
lods
cmp
inc
shl
jbe
aam
rcrl
mov
divl
pop
sub
outsb
pop
insl
or
xchg
add
push
loop
std
jns
and
iret
or
js
mov
pop
adc
add
out
iret
stc
in
xchg
mov
jnp
test
adc
or
xchg
sub
sub
and
jae
dec
mov
mov
fidivrs
dec
cmc
das
xor
jnp
dec
sub
enter
jo
ror
popf
pop
lock
or
xor
cmp
xor
mov
out
jne
fistl
mov
fistpll
sub
in
lock
stos
inc
add
popf
cmp
mov
xchg
and
rcrl
pushf
mov
jg
pop
mov
fdivs
dec
jmp
gs
cld
sbb
or
notl
cld
pop
add
mov
cli
push
push
mov
xor
arpl
or
arpl
jae
dec
lcall
popa
inc
gs
es
dec
fucomi
pop
dec
inc
jle
pop
dec
lds
or
xor
mov
sti
sbb
ja
jbe
out
testb
pop
andb
pop
loop
mov
add
pop
mov
leave
cmp
xchg
or
mov
push
or
outsl
xor
cltd
into
pop
sar
neg
push
mov
sti
push
mov
add
xlat
mov
adc
xor
lods
mov
sbbb
add
aaa
fildll
rclb
xor
popf
adc
jae
xchg
xchg
xor
push
dec
jo
mov
jmp
push
inc
xchg
cld
dec
shr
mov
push
lret
cmp
push
adc
outsl
shlb
cmp
out
sub
mov
lea
and
popf
xchg
or
pop
stos
bnd
lods
in
cmp
mov
pusha
push
icebp
jmp
pushf
in
xchg
ja
fstps
mov
pop
mov
mov
test
sub
leave
add
push
xor
lret
jae
jg
into
xor
sbb
or
xor
pop
cli
pop
imul
push
out
inc
mov
pop
add
pop
out
and
popf
mov
dec
cwtl
mov
imul
icebp
inc
xor
xor
sub
xchg
cmp
dec
push
fsts
test
or
add
outsb
pop
stos
stos
xchg
add
shl
fs
outsb
lcall
push
xlat
pushf
sub
cmpsl
mov
js
dec
sub
adc
jae
and
ljmp
cltd
pop
testl
push
fwait
jnp
les
jl
xchg
cmp
or
lret
ss
or
xchg
aaa
adc
push
sbb
pop
push
jle
cmp
hlt
add
mov
bound
movb
push
xor
bound
ljmp
and
cmp
out
mov
inc
and
cs
scas
nop
inc
push
mov
testl
xchg
loope
adc
add
push
cmpb
in
jmp
leave
outsb
in
out
cld
das
sbb
sub
pop
mov
xor
cld
incb
adc
std
jb
aam
imul
xor
popa
scas
mov
lds
in
jl
sbb
jo
add
out
gs
pop
pusha
xchg
ljmp
jns
xlat
or
and
or
mov
aad
jecxz
vmread
in
daa
arpl
mov
dec
movlps
sub
xor
sti
jecxz
pop
inc
inc
in
das
sub
insb
mov
xchg
popf
mov
rcl
rcrl
sti
es
ss
sub
outsb
fxch
cmp
stos
dec
add
xchg
int
cmc
xchg
outsl
add
adcl
fisttps
cmc
fstps
add
cli
push
imul
dec
mov
push
ljmp
fwait
mov
adc
lahf
pop
jne
push
lea
sub
xchg
push
pushf
sub
mov
sub
pop
imul
mov
dec
dec
test
ficomps
outsb
cmp
add
dec
mov
xor
cmpsl
pop
push
pop
inc
push
adc
pop
pop
aam
xchg
jl
jns
arpl
xchg
popf
jb
ret
push
add
repnz
hlt
iret
or
stc
jmp
insl
lahf
nop
xchg
jecxz
mov
or
jae
rorl
mov
mov
test
dec
fsubs
pop
ds
lcall
mov
adc
xor
scas
dec
adc
in
gs
push
xchg
lock
pop
mov
sbb
push
gs
cmc
hlt
xchg
pop
jne
jmp
pop
jno
mov
mov
cmp
mov
mov
add
cld
inc
mov
jle
addr16
jae
out
or
sti
pop
push
sbb
jno
testl
ror
xor
pop
mov
mov
sub
xchg
es
sub
roll
lret
in
mov
or
test
mov
sbb
jmp
rcr
repz
sbbb
sub
ljmp
pop
rolb
cmc
inc
sarb
fildll
pop
xchg
jge
scas
pop
xor
sub
jecxz
jb
aad
jecxz
cmp
pushf
gs
data16
cmp
sbb
jp
xchg
clc
andl
mov
mov
or
iret
mov
jge
inc
push
pushf
pop
xchg
mov
inc
mov
sub
xchg
add
movsb
adc
adc
les
jbe
rcrl
cs
into
mov
test
push
loope
xchg
push
pop
mov
cli
push
lock
sub
mov
shlb
adc
adc
adc
xchg
sub
lods
mov
add
hlt
fbld
cli
popf
adc
bnd
mov
testb
jnp
lret
jle
xchg
dec
gs
jne
imul
scas
aad
stc
mov
ljmp
into
cwtl
push
jbe
xchg
int
add
push
push
adc
pop
sahf
inc
dec
add
cmpsl
inc
add
jo
cwtl
loop
je
push
les
adc
loope
int
insb
dec
rorl
jno
aaa
xchg
mov
cmp
jae
popf
mov
xor
fistl
sub
xchg
add
fbstp
cmp
dec
push
push
sti
mov
lcall
xchg
push
testb
jp
arpl
mov
dec
cmp
ret
lret
lds
push
addl
mov
loop
test
ds
dec
xchg
dec
add
loopne
mov
fildll
ss
pop
shll
lock
movsl
loope
adc
pusha
pushf
cmp
int3
sub
mov
push
daa
mov
push
jp
out
cwtl
popf
mov
daa
pusha
cmc
jnp
push
pop
movsl
mov
dec
out
add
sbb
mov
mov
std
mov
adc
jns
movzwl
push
into
repnz
push
insb
dec
mov
jle
ret
jmp
fstpl
sub
subb
lods
jnp
ljmp
rcrl
mov
out
scas
sub
test
filds
and
dec
mov
sub
int
mov
mov
es
and
sbb
push
iret
pop
repnz
icebp
push
bound
js
xchg
aas
sbb
push
cmp
ja
daa
pop
enter
mov
or
pcmpgtd
lock
test
mov
es
mov
pop
mov
push
push
jb
sbb
lods
xor
push
xor
sub
push
jle
je
pusha
pop
cmc
popf
cmovo
lret
jnp
gs
in
push
movsl
push
lahf
pop
aas
xor
mov
add
sti
cli
ljmp
adc
pusha
push
mov
arpl
add
pop
scas
cmp
sbb
clc
adc
xchg
xchg
enter
jge
into
mov
inc
sub
iret
pop
and
scas
loop
push
dec
test
dec
mov
mov
roll
in
jo
stos
xor
cld
xlat
or
xor
jp
and
mov
mov
cmpsb
or
and
cmp
jae
xchg
out
xor
lahf
rolb
and
ljmp
filds
outsb
fnsave
mov
imul
dec
push
mov
xchg
dec
adc
mov
repnz
push
dec
adc
sub
sbb
or
scas
les
sub
out
mov
inc
push
and
mov
sti
cmp
not
and
rcr
daa
pop
addr16
xor
jp
push
jg
sbb
push
mov
adc
mov
mov
loopne
mov
inc
xor
push
xchg
outsl
sbb
sbb
mov
adc
push
negb
adc
out
xchg
cli
into
dec
add
dec
dec
cmc
nop
ss
sub
in
mov
mov
hlt
ret
and
cli
pushf
shlb
in
fmull
jb
movsb
rol
inc
mov
jmp
xchg
outsb
or
sbb
mov
jl
insl
or
xor
int
pop
jmp
xchg
inc
test
mov
mov
jg
hlt
lret
lock
and
cmp
push
repz
fdivs
mov
xchg
ja
addr16
cmp
inc
hlt
add
lret
shll
sahf
hlt
xor
data16
push
aad
cmp
fs
addl
popf
xor
sbb
inc
aaa
mov
lahf
jecxz
repz
xchg
sub
pusha
xchg
aas
es
and
aas
push
fld1
leave
ja
sub
add
mov
dec
outsl
push
mov
mov
aad
jbe
xchg
mov
add
testb
in
ds
in
ret
test
or
sahf
mov
std
and
pop
mov
push
sub
les
lods
fstps
pop
mov
mov
sub
jecxz
enter
adc
mov
into
shlb
xor
fwait
push
cmp
lahf
mov
out
aam
lea
ret
pop
sub
jle
in
call
dec
subb
loope
insl
gs
xchg
dec
sub
scas
out
adc
cmp
fwait
clc
subl
aaa
jae
int3
fistpll
sbb
xor
into
and
iret
add
cmp
fidivs
aam
into
xchg
mov
les
ret
lahf
jg
jae
mov
adc
cmp
adc
xchg
loope
mov
orb
shll
xor
dec
fadd
idivb
sbb
andl
inc
mov
push
test
push
or
inc
pop
das
insb
fistpl
leave
clc
push
push
or
or
mov
add
push
cmc
inc
push
out
adc
movsb
or
lahf
test
fsub
push
mov
pop
mov
mov
add
cmp
insb
pop
bound
mov
je
xchg
sbb
bound
int
inc
test
fs
test
cmp
mov
insb
or
cmp
push
cmp
push
imul
and
into
push
dec
sbb
stos
movsb
mov
add
test
mull
sbb
jmpw
xchg
push
sub
pusha
mov
stos
push
stos
test
push
jo
cmp
lea
daa
sub
movsl
popl
loopne
and
mov
ljmp
fnstsw
cli
sub
loope
mov
lods
or
dec
scas
mov
dec
mov
lds
fnstsw
insl
pop
and
insl
cmp
add
dec
jbe
out
fists
mov
pushf
test
pop
add
iret
sar
sub
pop
jno
adc
dec
push
imul
mov
outsl
cmp
divb
shlb
mov
orl
mov
std
inc
jo
out
out
daa
arpl
arpl
loopne
mov
mov
sub
mov
push
daa
or
loope
add
mov
mov
xor
sub
int
rolb
sub
dec
loopne
enter
mov
adc
popf
and
int3
aaa
fs
pop
mov
and
and
fwait
fs
popa
push
inc
mov
mov
fildll
std
and
sub
cmp
mov
pop
lahf
dec
mov
adc
and
call
and
jl
cwtl
imul
bound
and
movsb
repz
insl
outsb
lret
gs
aad
jo
mov
iret
dec
xchg
lcall
mov
push
lods
aas
add
aad
pop
into
add
sub
andl
inc
mov
cs
data16
sbb
lret
adc
loope
fmulp
imul
movsb
xor
push
iret
mov
fsubrl
inc
ret
and
in
jmp
sbb
imul
adc
rclb
push
negb
bound
scas
sbb
int3
notl
stc
movsl
sub
adc
mov
lds
jp
push
insb
xor
data16
adc
xor
cmp
pop
scas
in
mov
je
aas
rorl
push
sub
adc
dec
outsl
dec
rcrb
divl
dec
xchg
loope
into
add
sub
hlt
ds
aad
push
pop
fcmovnbe
fidivl
inc
mov
fstpt
adc
hlt
mov
adc
pop
xchg
or
test
cmpsb
xor
hlt
push
push
mov
pop
lds
sub
xorb
leave
jl
cld
inc
ss
and
jne
adc
xor
xlat
fwait
stos
leave
mov
aas
xorl
mov
pop
stos
arpl
call
pop
mov
insl
sbb
xor
and
and
aam
arpl
push
insl
mov
inc
mov
mov
mov
mov
fwait
icebp
adc
stos
jne
fbld
lds
mov
dec
adc
test
mov
jle
mov
fsubrs
dec
imul
cld
in
bound
adc
gs
mov
addl
movsl
cmpsl
cli
pop
pop
jno
loopne
push
xor
mov
pop
add
outsb
dec
add
mov
mov
lahf
add
lea
sub
rcr
daa
scas
fs
jmp
dec
sbb
pop
movsb
or
jb
inc
stos
sbb
jl
repz
test
shll
add
or
mov
lret
adc
into
int
sbb
je
ret
sti
fstpl
dec
repz
ja
inc
sbb
shl
cmp
decl
pop
mov
orb
sbb
xchg
xchg
xor
pop
outsl
stc
xor
test
sub
into
pop
data16
mov
mov
movsl
sbb
loope
mov
out
or
cmp
jecxz
push
data16
adc
sub
mov
loope
jl
ja
cmp
mov
pop
xor
mov
ss
sti
pop
cmp
cld
stos
pop
cmp
pop
inc
dec
adc
icebp
sub
xor
inc
cmp
sbbl
das
loope
loop
lods
sub
dec
scas
pop
mov
cmp
and
push
add
lds
mov
jno
dec
mov
xchg
aad
les
daa
cmp
rolb
fistpll
outsb
cmp
lods
add
movl
push
hlt
mov
addr16
and
mov
lock
mov
leave
add
inc
scas
fisttps
mov
orl
xor
push
dec
in
xchg
ficoms
push
inc
push
lret
push
in
sahf
push
scas
cli
pushf
xchg
test
fwait
jno
repnz
sub
mov
jp
and
mov
or
cli
xlat
xor
lods
jmp
mov
repnz
inc
push
push
or
ss
pop
cmp
adc
push
orb
stc
jbe
sub
scas
mov
cmp
xor
dec
dec
in
in
ja
dec
jg
cmp
dec
xlat
add
pop
test
cmpb
xor
cs
test
ss
cmc
in
jmp
jmp
scas
inc
xor
out
sbb
xchg
cli
xchg
out
cmp
push
dec
dec
lea
lock
sbb
sbb
xor
ficomps
xor
mov
inc
dec
push
push
ficomps
inc
repz
xchg
pushf
push
shr
fldz
sti
jbe
mov
pop
and
and
cmp
cs
leave
sub
out
sub
mov
sub
mov
test
push
ficoms
push
sub
in
adc
enter
or
adc
mov
push
aam
xchg
ret
hlt
sarb
lods
or
adc
js
sbb
lret
bound
dec
in
test
mov
push
aaa
jns
nop
and
jne
add
pop
mov
notl
adc
outsb
lds
pop
stos
dec
stos
push
pop
sub
add
call
cli
mov
sbb
inc
adc
lea
push
dec
std
pop
push
shlb
xchg
lcall
daa
lock
and
push
pop
push
push
pop
hlt
dec
cmpsl
mov
js
mov
enter
pop
push
xor
clc
inc
in
push
sbb
xor
sbb
aad
lcall
cs
test
lret
jg
popa
sti
addr16
loope
pop
pushf
cmp
cmp
jg
xor
pop
add
addb
mov
adc
ja
iret
lock
or
mov
xchg
jnp
pop
push
pop
or
xor
lea
xor
orb
xor
pop
push
push
das
cmpxchg
inc
jae
cli
stos
push
pop
test
and
aad
popf
sbb
mov
out
loopne
call
ds
mov
std
adc
ljmp
imull
cld
out
push
ret
mov
sub
sti
mov
xchg
mov
and
push
jp
sti
pop
cwtl
lahf
xor
filds
pushl
jl
cmp
rcrb
xchg
movsl
push
mov
mov
movsb
cltd
mov
gs
xor
mov
inc
mov
xchg
aad
xchg
dec
lea
mov
lcall
repnz
push
or
out
cmpsl
adc
add
xchg
ret
in
mov
pop
mov
adc
dec
shl
add
cmp
sbb
mov
cmpsl
mov
add
or
jle
fcoms
enter
pop
and
into
aaa
in
iret
push
scas
ret
fwait
lcall
adc
insl
pop
ffreep
mov
loope
push
mov
lock
call
mov
xor
push
push
jbe
sahf
ficoms
sbb
loopne
add
jmp
into
das
int
mov
add
xchg
push
ret
inc
dec
lock
inc
cmpsl
jp
and
push
sub
stos
lock
iret
incb
mov
fcomps
push
cld
mov
cmp
jmp
dec
or
loop
jae
cli
cmp
stc
mov
loop
scas
out
call
lcall
inc
ficoml
xchg
mov
adc
loopne
in
mov
sbb
jge
std
pop
ss
or
cmp
sbb
shll
lcall
cmp
cmp
jmp
and
sbb
outsb
out
push
repz
rclb
adc
mov
cltd
test
mov
loope
orl
xchg
je
repnz
fs
lods
adc
mov
aas
push
das
mov
push
ror
scas
and
movsb
test
adc
adc
adc
pop
inc
inc
or
push
and
stos
in
pop
cmc
rcll
in
les
mov
push
and
jg
stc
push
sbb
sub
aas
in
div
lahf
je
pusha
fwait
imul
lret
sub
xchg
fmuls
cmp
push
fmull
push
fucom
cmp
test
lods
pop
popf
dec
clc
or
jl
lea
popa
test
pop
mov
and
rol
dec
ret
jo
adc
adc
rcrb
dec
repnz
mov
lock
lods
sbb
cltd
mov
xor
stos
push
insl
movsb
cmp
xor
cld
test
ss
jge
push
mov
or
nop
inc
or
push
leave
add
mov
jne
aaa
iret
in
jnp
fidivs
jmp
fsubl
ret
orl
insl
push
stc
mov
lods
xlat
inc
xlat
stc
pusha
scas
popf
adc
mov
ja
roll
xchg
cmpsb
cmp
xor
mov
clc
bound
aaa
hlt
test
out
out
ret
aaa
scas
subl
add
or
sub
mov
mov
mov
xor
repz
add
in
xor
pop
insl
cmp
add
je
lds
lcall
fiaddl
push
sbb
shll
inc
add
iret
pop
std
sub
rcll
xchg
pop
dec
lods
and
int
idivl
mov
cmp
std
mov
hlt
lods
pusha
int
addl
dec
xchg
xor
cld
sti
stc
xchg
jne
hlt
sbb
stos
or
sub
sbb
cmp
out
dec
or
aam
hlt
adcb
loope
adc
rorb
mov
ds
addr16
xchg
int3
pusha
lods
xor
orb
jge
push
mov
dec
out
mov
xor
cmp
jmp
in
add
ds
sbb
repz
push
jns
scas
aad
jle
jae
jge
ja
movl
cltd
pusha
dec
mov
movb
cs
aad
mov
push
test
cmpsb
fs
arpl
adc
mov
out
fwait
jle
pop
int
cmpsb
inc
or
lcall
sub
subl
jbe
xchg
mov
pop
shr
sub
stos
push
mov
add
enter
stc
sub
in
int
jno
in
sarb
fnstcw
out
jmp
or
cld
cmpsb
mov
xchg
stos
xchg
addr16
xor
clc
sbb
mov
jg
or
movsl
and
mov
pusha
sbb
div
sahf
push
sbb
pushf
dec
inc
sbb
lds
jae
std
mov
dec
movsb
pop
pop
adc
sti
mov
loop
pop
add
int3
jae
mov
and
mov
pop
inc
lods
adc
rorb
jbe
in
adc
push
push
mov
mov
cmp
dec
add
bound
cwtl
jbe
ja
xchg
scas
cmp
cltd
aas
cmp
int3
cmp
fildl
jne
cmpsl
test
and
repz
adc
adc
insl
sub
mov
lcall
inc
push
mov
stc
or
mov
xchg
pusha
bound
data16
pop
stos
adc
mov
and
in
mov
lods
mov
aam
jne
sar
adc
dec
out
test
stc
popf
adc
xchg
or
cmp
cltd
cmp
jp
adc
push
adcl
mov
inc
fucomip
and
test
push
pusha
xor
add
ss
mov
hlt
divb
mov
cmpsl
movl
test
int3
pop
xchg
inc
lahf
cwtl
cltd
or
lahf
jnp
sub
bound
lea
mov
cmpsb
jg
inc
mov
imul
dec
mov
sub
jnp
fcomp
pop
clc
lds
sbb
xchg
push
xchg
and
sbb
pop
inc
nop
in
mov
push
je
inc
cmp
ja
lock
or
push
aaa
stos
aad
leave
ja
int
push
sbb
repnz
xor
and
mov
mov
mov
pop
lret
sbb
std
ficoms
inc
into
jle
sbb
xchg
or
stc
mov
aam
in
add
xor
jnp
jmp
shrl
mov
orl
aaa
inc
adc
test
testb
ljmp
ss
sub
addl
jmp
cmp
leave
popa
rcl
jne
pop
jb
xor
test
xchg
mov
adc
gs
cmpsl
lahf
mov
loope
aam
call
lds
add
cmp
jne
xlat
sub
sahf
lock
insl
and
adc
sbb
cmp
xor
sub
clc
inc
push
xor
cmp
mov
hlt
xor
lret
sub
in
mov
out
mov
arpl
ror
lahf
push
imul
ljmp
mov
dec
jl
and
dec
je
adc
sahf
inc
pop
pop
mov
or
incl
adc
adc
imul
mov
mov
rol
push
mov
repnz
fnstenv
sarb
fcompl
jp
lods
dec
pop
int
push
stos
inc
and
stos
out
pop
adc
sbb
add
mov
lret
hlt
inc
pop
fs
out
push
pop
jecxz
sub
addr16
adc
and
xchg
xchg
loop
push
jno
or
or
mov
jg
xor
roll
cmc
jmp
or
pusha
out
xlat
add
shlb
inc
fwait
push
add
ljmp
rclb
jbe
mov
push
and
aam
es
in
sbb
test
cmp
cmp
les
pusha
inc
sarb
movsl
sbb
pop
cmpsb
shll
pop
shll
mov
movsb
rorb
pushf
test
dec
cmc
jns
cwtl
and
ss
addl
mov
and
cmpsl
ret
repnz
insl
mov
add
adc
adc
jns
ss
add
lock
nop
sub
dec
xor
xchg
or
push
inc
mov
jno
lea
mov
fldenv
sbb
in
pop
sbb
dec
icebp
cmp
imul
loope
jnp
jae
inc
xchg
cmc
cmp
xchg
clc
mov
negl
sbb
or
cli
out
push
jno
cmp
cmp
push
fs
mov
loopne
cltd
je
adc
bound
inc
repz
add
bound
aas
negl
push
ret
or
sub
in
mov
cld
adc
scas
dec
dec
inc
and
movsb
repz
xchg
cmp
mov
lcall
mov
int3
aaa
dec
call
insb
cld
xorb
dec
or
pop
fnsave
inc
sub
rcrb
pop
stos
mov
movsl
in
int
hlt
jbe
mov
cmp
lcall
and
jo
add
cmp
jne
test
xchg
push
pop
jmp
push
and
mov
scas
dec
fisttps
push
xor
rclb
testb
jg
iret
shrb
and
das
cmp
mov
loopne
push
xor
ljmp
xor
xchg
and
pop
daa
mov
cli
xlat
ljmp
add
in
leave
aaa
xchg
sub
scas
mov
mov
mov
lret
mov
inc
out
lds
hlt
notl
mov
add
sbbb
and
cmp
cmp
and
dec
inc
bound
dec
out
stc
adc
fdivl
mov
in
or
dec
push
xchg
adc
movsl
sbb
aad
add
jno
cmp
lds
and
xlat
jg
pop
lret
pushf
sub
jo
mov
ficompl
add
pop
mov
jnp
inc
test
cmp
outsb
aaa
mov
cmp
leave
and
mov
loope
stos
das
cmp
mov
icebp
leave
cmpb
push
and
inc
push
fidivrl
xor
out
dec
xchg
popf
cld
test
aam
or
adc
pop
jne
push
pop
mov
add
jbe
vmovq
lods
inc
dec
sub
pop
xchg
fs
rolb
cs
mov
lea
xor
sbb
shlb
ret
iret
sar
cmc
cmp
dec
mov
das
imul
mov
inc
mov
jb
loope
in
cmp
xor
cmp
dec
lcall
leave
adcl
scas
adc
popf
sub
push
mov
mov
rorb
mov
mov
dec
cmp
repz
shr
fldl
in
inc
sub
jae
lea
clc
xchg
cmp
inc
push
testb
dec
popa
and
les
out
dec
inc
sbb
movsl
popf
idivb
pop
mov
loop
mov
cli
rcl
in
mov
xchg
jmp
inc
aaa
and
in
push
inc
add
test
adc
outsl
pop
lcall
lods
pop
mov
mov
xchg
pop
notl
mov
xor
inc
nop
nop
pop
jmp
push
inc
mov
insb
mov
inc
jae
xor
push
pop
lret
and
jne
fnsave
push
pop
stc
dec
add
sub
or
sub
sahf
rcrl
sbb
pop
xor
xlat
div
pop
pop
jae
and
mov
push
xor
ss
js
in
or
push
push
xchg
mov
push
add
and
outsl
push
sbb
xchg
push
cltd
sbb
push
js
add
fiaddl
xor
cmp
cmpb
pop
lods
in
cmpsl
jno
movsb
cs
pop
lods
mov
clc
xchg
and
outsb
cli
gs
or
sub
adc
mov
push
mov
push
repz
movups
lret
and
in
test
xor
negb
inc
adc
sarl
pop
ja
fsub
jmp
xchg
push
aam
xor
push
fs
rorl
sub
fs
sub
shll
test
cmp
cmp
xchg
ror
out
shrb
mov
xchg
push
in
dec
adc
std
gs
lcall
sarl
cmp
cmp
insb
lds
xchg
out
fidivl
je
mov
push
mov
enter
jo
repnz
or
iret
lcall
movl
popf
arpl
fisubrl
and
imulb
sbb
pop
and
aam
jnp
scas
adc
lahf
xchg
push
inc
lahf
cli
xchg
mov
stc
xchg
inc
sbb
fbstp
jbe
inc
out
xor
add
jo
mov
fcmovu
in
xor
sbb
faddl
ficomps
shll
sub
insl
jno
add
aad
pop
dec
mov
in
fcomip
inc
lahf
mov
notb
stos
andb
test
outsb
ret
inc
mov
fsts
or
mov
lcall
rol
jl
cmp
cltd
xchg
les
cs
fldt
mov
inc
test
test
pop
xlat
mov
fdivrl
cs
mov
js
push
mull
mov
cld
fadd
scas
lret
lahf
js
inc
movsl
lcall
popl
mov
out
dec
mov
or
mov
or
lcall
inc
mov
loope
inc
mov
mov
xor
add
icebp
mov
xchg
mov
mov
flds
push
insl
jle
or
shrl
adc
aaa
fidivl
adc
fcmovne
or
pop
subl
mov
sbb
orl
mov
xor
and
dec
cmpsl
xor
pushf
lea
lea
cmpsl
mov
cmp
lods
cld
cltd
push
or
jae
add
cmp
adc
cltd
ss
ficompl
pusha
in
movsb
sti
mov
xor
repnz
mov
cmp
rcrb
or
stos
icebp
and
sub
sub
sub
outsl
xor
xchg
pop
std
push
xor
cltd
sbb
lea
mov
sbb
adc
out
mov
cs
int3
sbb
jae
incb
mov
xlat
into
test
xor
cmpsl
pop
nop
mov
push
bound
rclb
mov
add
outsb
out
or
fwait
imul
repnz
push
shll
pop
pop
jp
or
pop
or
jge
cmpsl
aad
mov
push
rcll
dec
or
dec
fiaddl
or
mov
call
outsb
cmpsb
cwtl
jmp
scas
inc
js
pop
sbb
inc
inc
push
cmp
pop
nop
mov
xchg
sti
ficompl
in
adc
in
fsubr
aad
das
cmp
pop
add
pusha
into
rorb
mov
inc
in
notb
out
dec
mov
sbb
aas
imul
and
xor
cltd
aaa
aad
and
jnp
pop
sub
add
add
or
stc
nop
out
es
cwtl
xchg
jne
mov
add
adc
sbb
addr16
adc
push
mov
dec
mov
adc
adc
xor
pushf
add
jmp
gs
ret
pop
fistpl
shll
dec
pushf
dec
sahf
push
stos
xor
push
shlb
lahf
loopne
dec
jae
mov
outsl
nop
sti
mov
mov
xchg
fucomp
or
hlt
pop
jmp
stos
mov
clc
and
subb
movsb
movsb
stos
xchg
fisttpll
or
mov
mov
dec
mov
mov
sub
mov
outsl
push
sub
imul
pop
scas
dec
bound
or
mov
xor
fsubr
rcl
sbb
dec
rolb
push
jb
mov
sbb
sbb
lods
sbb
jmp
mov
dec
stc
push
int
mov
pop
push
mov
bound
mov
sub
push
enter
ret
fwait
lea
sahf
add
lahf
push
and
shll
mov
sahf
or
jo
scas
cmp
cmp
sub
imul
outsb
inc
cmpsl
jnp
sbb
xchg
mov
ss
sbb
inc
pushf
test
push
lods
jmp
mov
adc
imul
mov
imul
push
lea
mov
add
jne
int
dec
out
outsl
lea
mov
iret
xchg
fimull
adc
xchg
mov
adc
cmp
out
test
test
jbe
or
scas
xchg
mov
fidivs
cmp
sub
and
pop
es
es
shll
jl
mov
inc
push
add
lock
lds
xor
ret
lock
dec
jns
lret
pop
stos
test
in
jecxz
loope
pushf
iret
stos
push
adc
xchg
orb
fcoms
out
dec
xor
adc
daa
out
sbb
push
pusha
adc
sub
iret
xchg
fcoml
mov
and
cmp
jmp
out
rcr
pusha
sub
pop
mov
iret
mov
mull
adc
and
cmp
addb
xchg
cmp
xor
jnp
arpl
jmp
cmc
xor
cmpb
mov
mov
rol
pop
imul
std
jle
fs
pop
dec
adc
mov
insl
out
loope
sbb
mov
nop
pop
cmp
and
xchg
xchg
add
mov
inc
repnz
ds
cmp
push
inc
jbe
push
mov
stos
lahf
pop
mov
xor
mov
ss
add
test
imul
ret
xor
mov
sbb
inc
das
sbb
cmp
xchg
idivb
insb
aam
imul
push
push
fiadds
dec
test
jle
shlb
stos
outsl
hlt
cmp
cmp
jmp
inc
outsl
shll
test
rcll
lds
je
cmp
jno
addr16
in
xchg
pop
dec
xchg
fisttps
nop
pop
xor
dec
xlat
sbb
sti
xchg
push
cmp
or
cli
loop
fs
ret
scas
pop
aaa
cs
stos
gs
mov
cmp
fsubs
push
jno
fisubrl
mov
inc
leave
push
jb
and
sub
es
jge
cmp
ljmp
test
or
sbb
dec
shrb
orl
inc
mov
sbb
mov
movsl
jo
push
mov
sbb
dec
dec
pop
imul
add
addr16
ficompl
ret
inc
cltd
aas
mov
cmp
sbb
pop
adc
aaa
aaa
xchg
pop
jge
inc
jg
sbb
mov
dec
repz
lods
inc
bound
adc
aam
and
mov
test
mov
cs
rorb
int
int3
leave
mov
or
jns
jg
cwtl
ret
pop
imul
enter
aad
sti
xor
lods
cmp
push
lea
in
push
in
jge
pusha
cltd
arpl
subl
sbb
and
mov
inc
mov
sbb
cmp
ds
xor
scas
xchg
sti
fprem
push
mov
imul
push
jb
fildll
mov
cwtl
sub
aaa
cmp
jbe
mov
inc
insb
gs
rcrb
stc
nop
outsl
mov
push
push
add
and
pop
mov
sub
addl
push
sti
and
or
jb
xchg
sub
sub
add
and
rol
sbb
push
push
inc
jge
xchg
and
into
sbb
push
sbb
sbb
mov
dec
cmpsb
fmuls
xchg
mov
fstpt
adc
in
add
inc
popf
or
push
jnp
push
bound
roll
dec
xchg
bound
mov
in
xchg
jno
mov
and
inc
inc
jg
pop
lret
mov
lret
cmpsb
mov
mov
mov
jno
leave
test
loopne
jae
cmpsl
jge
mov
or
xlat
js
mov
sbb
pusha
out
stc
aaa
js
frstor
int3
sub
or
sub
jo
aad
sbb
mov
scas
cltd
jecxz
fbld
xchg
scas
shrl
lods
mov
pop
pop
pop
gs
aas
pmullw
sti
add
fmull
mov
dec
pop
xchg
xor
testl
andl
push
in
nop
sub
scas
inc
mov
ds
cs
or
push
dec
cs
push
push
adc
adc
or
or
insb
ja
dec
adc
std
js
scas
or
sti
repnz
xchg
aas
sahf
test
in
inc
xchg
sub
xchg
push
sbb
in
sbb
pop
daa
into
sub
and
push
pop
mov
dec
add
jo
aas
in
lcall
mov
pop
rcll
std
jecxz
filds
mov
pop
xor
movsb
pop
push
adc
fcoms
push
out
or
insb
adcb
push
cmc
pusha
test
pusha
flds
repz
xorb
stos
loopne
adc
or
mov
shlb
dec
arpl
lahf
mov
mov
or
xchg
and
mov
add
ret
sbb
dec
call
ds
ret
pop
inc
outsl
push
cli
cmp
cmpsb
push
repz
call
out
cmc
subw
in
inc
in
inc
clc
sub
test
stos
mov
dec
test
mov
cmp
jecxz
dec
insb
sbb
test
int
lods
mov
cwtl
stos
ret
fisttpll
test
loopne
stc
in
cmp
or
mov
sub
mov
call
add
mov
sub
and
popa
sti
xor
fs
add
shr
push
lcall
mov
and
loop
sbb
addb
mov
dec
icebp
mov
adc
jb
lret
push
adc
outsb
mov
inc
mov
shlb
xor
lock
notb
int
pushf
in
and
ja
pop
sub
add
cli
xor
xchg
add
and
push
iret
sub
shlb
dec
call
cwtl
call
push
aam
enter
js
or
mov
cmp
ja
mov
sub
sub
jae
xor
jg
pushf
loope
pop
fs
sub
mov
shlb
push
lcall
out
cmpsb
mov
adc
xchg
add
je
mov
mov
push
lret
pop
ficompl
insb
rcll
sbb
cmpsb
lods
adc
rorb
cmc
xchg
mov
clc
add
sbb
loope
or
cmp
mov
stos
push
inc
cltd
sbb
and
add
jmp
lds
clc
push
ret
add
leave
sahf
lret
frstor
or
movb
jae
fnstenvs
das
movsb
scas
call
stc
shlb
mov
jle
fiaddl
loope
push
mov
idiv
cmp
inc
pop
int
xor
data16
enter
ljmp
jl
and
jnp
cwtl
sbb
mov
mov
inc
push
mov
sar
mov
sar
cld
inc
lret
les
mov
xchg
filds
mov
fsubrl
in
pop
lods
std
je
add
sbbb
jbe
jp
lea
fisubs
das
das
fs
mov
cli
push
sub
add
xchg
mov
push
cmc
mov
mov
and
cmp
and
jnp
inc
stos
stos
sub
and
lahf
push
inc
pop
out
push
sub
push
test
test
lahf
leave
xor
pop
jle
inc
xchg
shr
dec
nop
dec
cli
jns
je
inc
rol
mov
negl
fwait
lds
mov
xchg
out
pop
repz
mov
sarb
mov
sbb
hlt
inc
push
lock
nop
pop
xor
jle
sarl
pushf
inc
sub
arpl
arpl
movsb
sub
xor
inc
and
xchg
and
push
sub
add
mov
ljmp
fisttpll
mov
dec
mov
jae
gs
jnp
mov
mov
repnz
dec
das
scas
or
ficoms
test
sub
call
movsl
fcoms
aaa
jns
loop
dec
sub
mov
aam
jae
jb
or
lret
pop
mov
inc
cs
hlt
pop
popa
scas
roll
mov
jp
adc
adc
jb
lods
push
es
pop
xor
movl
push
frstor
mov
iret
add
sarb
push
repz
sub
inc
jns
and
or
mov
xor
fs
cld
adc
outsl
icebp
or
sub
mov
xchg
or
or
pop
pop
out
cmp
pop
mov
popa
sub
xor
sub
ror
fisubs
jmp
lcall
inc
dec
ljmp
sbb
ret
mov
cltd
nop
mov
xor
cmp
rorl
jbe
jne
shlb
dec
cmp
movsl
fs
xchg
lcall
lods
lcall
or
adc
pop
mov
pop
and
jns
mov
xchg
or
popf
adc
push
push
and
dec
dec
push
mov
and
es
es
inc
and
dec
mov
nop
or
sbbb
sbb
push
mov
popf
movsb
pop
mov
aam
lret
repnz
lret
stos
ja
stos
mov
jb
or
push
scas
mov
mov
push
sbb
push
test
mov
pop
or
loopne
mov
jb
and
push
sub
movsb
cli
fst
cmp
cltd
test
dec
jecxz
or
fcom
pop
out
outsb
mov
add
movsl
aas
imul
mov
sbb
ljmp
cmp
frstor
aaa
lret
push
push
cmp
das
call
push
mov
push
insl
ljmp
cmp
xor
cmp
inc
out
xor
mov
movsb
fsubrl
cwtl
push
jns
fnsave
or
jge
leave
push
inc
ljmp
sub
xchg
cmpsb
sub
out
sub
jmp
scas
and
subl
test
lret
iret
arpl
xchg
cmp
scas
xchg
cmpsl
cmp
test
addr16
out
outsl
movsb
xor
and
aaa
mov
push
cs
aam
inc
inc
sub
add
adc
sub
and
stos
outsl
push
lret
fdivrl
loopne
shr
out
mov
popl
icebp
jg
jmp
jno
cmpsb
movsb
add
insl
sbb
jb
test
aas
pop
mov
pop
icebp
pop
mov
addr16
cmpsl
js
jb
pop
out
add
xchg
aaa
mov
xorb
xchg
pop
xor
mov
fildll
sbb
into
xchg
test
jge
add
xor
mov
stc
imul
push
pop
test
lret
dec
and
btrl
sbb
aam
movsl
dec
dec
incl
mul
imul
cmpsb
fildll
push
dec
dec
sbb
cli
cmp
add
mov
rol
lods
dec
sbb
xchg
cli
dec
sub
inc
shl
inc
pop
jns
jl
shrb
sarb
jle
jb
mov
lcall
imul
stos
and
pop
or
gs
or
jae
ret
mov
mov
ret
and
dec
xor
cmp
xlat
aas
std
pop
add
xor
lcall
in
push
push
cmpsb
rorl
das
data16
fsub
jmp
das
testb
das
xchg
add
int
ret
scas
cltd
jg
int
xor
jb,pt
jecxz
dec
adcb
adc
jns
cld
mov
cmp
icebp
outsb
loop
mov
fisubrl
cmpl
cmp
sbb
bound
xor
ljmp
or
pop
cwtl
jnp
ljmp
loope,pn
fisubrs
mov
test
pop
int
dec
mov
jnp
idivb
sbb
mov
ja
stc
data16
mov
pop
dec
jnp
ret
dec
mov
sbb
loope
xchg
or
xchg
push
notb
fdivrl
cmp
and
mov
pop
out
cltd
or
mov
in
dec
or
inc
js
xchg
movsl
fistpl
pop
jae
popf
std
adc
jbe
adc
add
add
inc
js
lret
repz
outsb
aas
mov
pop
mov
ds
pop
xlat
mov
jns
cmpsl
jl
ret
push
xchg
adc
mov
ds
jecxz
out
dec
jae
pop
sbbb
fcoms
repz
mov
sbb
jge
jmp
or
shr
jno
ja
stc
pop
cmp
outsl
fmull
into
sbb
adc
je
fstl
mov
mov
push
sub
mov
cltd
shr
loope
sub
push
mov
inc
mov
loopne
fbld
jb
adc
mov
mov
fs
scas
jge
imul
outsb
mov
adc
jb
ja
mov
add
mov
lcall
pop
lods
maskmovq
testl
sub
pushf
out
mov
nop
repnz
sbb
out
xchg
in
ja
inc
xchg
popa
movsb
js
mov
nop
sarl
jge
sbb
mov
fiaddl
and
jmp
std
in
push
mov
insb
repnz
js
mov
push
int
iret
imul
and
and
pushl
pop
push
je
sbb
or
cwtl
mov
outsl
xchg
add
fwait
je
xchg
fdivr
or
push
mov
stc
jge
pop
lcall
inc
les
push
add
popa
push
loope
fsub
mov
push
fdivr
es
cmp
push
shl
adc
lcall
jge
push
pop
out
push
fdiv
icebp
fs
cmc
movsb
push
add
adc
jg
or
int
jnp
sbb
inc
int
in
outsl
outsl
std
sub
ret
push
pop
cmp
cmpsl
jge
dec
adc
mov
arpl
add
pop
mov
jmp
mov
cmp
flds
cltd
pop
mov
icebp
movsb
and
xchg
inc
inc
dec
pop
xor
add
incb
mov
fisubrs
sbb
insb
mov
aaa
push
stos
ficoml
test
call
nop
push
bts
movsb
xor
and
mov
jg
and
and
jnp
int3
orb
in
stos
mov
and
jo
mov
dec
and
out
testb
lock
mov
jns
aaa
repnz
push
pop
dec
pop
push
aam
and
shll
insb
or
inc
and
and
mov
fisubrl
pop
mov
movsl
fmuls
das
inc
aas
movsb
sub
nop
or
adc
sub
adc
insb
push
or
es
jg
decb
mov
xchg
add
pop
test
ficoms
dec
cli
mov
fidivrs
stos
mov
mov
sbb
xchg
sbb
out
int3
mov
loope
in
jbe
scas
or
pop
push
sahf
pop
iret
mov
leave
cmp
lcall
daa
add
jb
stos
add
cmp
leave
aaa
into
dec
cmp
test
jae
cmp
mov
lock
jnp
mov
cmp
mov
push
outsl
aas
pop
push
pop
popf
mov
cmpsl
inc
xchg
push
mov
cs
add
notb
xor
fdivp
call
cmp
test
lea
adc
mov
loop
cmpsb
sbb
jp
sub
mov
data16
sub
rcl
add
fwait
lods
jnp
jle
loop
imul
sub
mov
cmpsl
stos
sarb
or
adc
push
mov
popf
xchg
and
push
xor
sti
icebp
icebp
fcoml
ret
add
adc
cmp
ljmp
dec
jb
cmp
faddl
mov
cmp
test
jae
jp
pop
push
enter
or
dec
cmp
in
jno
jl
mov
adc
pop
adc
enter
lea
add
std
jl
lret
dec
sbb
push
or
pop
mov
cmp
sahf
dec
pusha
mov
mulb
mov
out
dec
sub
out
add
sbb
cmpsl
std
adc
jnp
xor
push
popa
jg
sahf
in
add
and
cmp
push
mov
test
or
inc
sub
mov
lahf
cmc
xor
lods
pop
lret
mov
dec
inc
push
mov
xlat
shll
mov
out
push
sub
pop
sbb
add
shr
adc
in
push
fcmovu
jmp
sbb
loope
sbb
pop
xchg
subb
fiaddl
gs
loope
aaa
push
roll
jle
push
shr
add
mov
dec
repz
roll
push
xor
call
clc
and
in
sbb
aam
adc
adc
or
xchg
jg
out
inc
out
lahf
push
clc
mov
arpl
cld
in
jmp
aas
shl
adc
subl
shlb
es
xchg
dec
adc
outsb
shrb
shll
pop
ret
shrl
dec
push
mov
cld
les
les
cli
jo
fldcw
aaa
femms
fnstenv
mov
out
cld
ffree
repz
cmc
inc
push
push
add
nop
shlb
lcall
ret
jb
xor
into
push
sarl
movd
test
fsub
mov
sbb
lods
jno
fcom
mov
pop
js
mov
test
push
nop
mov
call
enter
lods
stc
xor
in
or
mov
fnstsw
pushf
push
arpl
and
int3
shll
cmp
dec
scas
pop
mov
pop
test
fistl
pop
jmp
inc
ljmp
sub
leave
cmc
daa
lods
out
add
jnp
or
lahf
je
insl
pop
mov
fisubl
ljmp
test
inc
insb
enter
mov
gs
mov
inc
push
mov
cmpsb
xor
cld
out
in
rsqrtps
add
aam
out
or
dec
adc
sti
subb
and
shr
loopne
in
iret
add
jnp
xchg
jle
xchg
and
jbe
mov
sbb
mov
movsb
jge
inc
xchg
and
fistpll
mov
ret
push
insl
xchg
inc
daa
shlb
stos
push
mov
arpl
push
daa
adc
nop
push
push
adc
sbb
dec
sbb
pop
shll
iret
test
lea
jno
andb
lea
mov
mov
mov
push
mov
in
popf
test
cwtl
dec
or
mov
add
push
push
sub
loopne
in
and
cmovbe
lock
pop
push
sbb
jns
int3
cmc
in
nop
or
cmp
loopne
mov
fwait
push
mov
mov
sbb
xchg
pop
xchg
data16
stos
lahf
call
sub
dec
test
pushf
dec
fcmovnb
inc
shr
roll
or
lahf
stc
gs
test
sbb
jno
add
cmpsb
push
mov
lahf
cli
leave
dec
mov
popf
test
es
xor
inc
jmp
cmp
xchg
addr16
mov
push
cmp
loope
dec
mov
cmp
aas
sub
inc
rcrl
cwtl
pusha
push
xorl
movsb
mov
mov
jb
pop
gs
sti
mov
je
outsl
insl
xchg
repnz
adc
or
mov
fldcw
jg
orl
push
mov
fidivrl
pop
aas
mov
jnp
ljmp
push
inc
pop
frstor
aaa
stos
adc
mov
xchg
add
mov
fsubrl
call
adc
test
mov
jo
xchg
dec
or
pop
sub
sub
mov
and
xor
sbb
xchg
andb
in
rol
inc
jl
aas
addr16
mov
pop
repz
dec
cmp
dec
iret
sbb
ret
scas
add
adc
stc
scas
enter
dec
cmpsl
jo
mov
mov
ret
jo
iret
mov
ret
shll
jbe
push
scas
mov
pop
scas
lds
fidivrl
sti
fldenv
xor
mov
ljmp
adc
data16
fsubrl
hlt
jmp
popa
push
test
or
add
mov
std
push
clc
pop
pop
test
sub
cmp
push
out
lods
mov
mov
add
mov
ljmp
pop
adc
sbb
xor
and
pop
cmpl
loop
cld
arpl
pop
sbb
mov
imul
inc
dec
test
cld
sub
cmpl
cmc
outsl
out
mov
jg
out
and
xchg
stos
inc
xor
mov
mov
cmp
mov
add
push
sbb
xchg
leave
loope
daa
cld
mov
into
jp
mov
push
push
or
mov
or
movsb
xor
xor
and
mov
ds
cmp
cmp
xchg
pextrw
or
xchg
stos
or
mov
push
ljmp
movlps
das
adc
mov
pop
dec
es
mov
sub
sub
jl
out
dec
xchg
push
pushl
scas
inc
aad
mov
sti
test
adc
cwtl
jbe
and
imull
fs
sbb
mov
adc
or
adc
test
xor
or
test
xlat
sub
loop
int3
cmp
out
adc
dec
cmc
sub
pop
xchg
icebp
popa
xor
test
leave
lahf
sti
inc
sbb
mov
adc
xor
cmp
fcomps
push
sub
jp
jne
movsb
cmp
mov
mov
adc
repz
push
aam
dec
int3
pop
mov
icebp
jb
ja
push
mov
cmp
sub
push
mov
mov
jp
dec
in
out
data16
std
fmul
or
sub
push
aam
sub
repz
mov
add
add
jmp
push
jnp
mov
jmp
mov
es
add
aaa
sub
idiv
mov
jb
inc
iret
rcll
out
jmp
sbb
call
sbb
in
jmp
movsl
ret
iret
shlb
stos
aas
sub
add
pop
cli
std
call
push
js
push
cmpsb
scas
stos
lahf
leave
movsb
movsb
cli
test
bswap
mov
mov
pop
mov
xor
add
int
lahf
aas
insb
stos
rcr
mov
push
call
dec
jge
mov
push
ja
rcrb
push
insb
ja
mov
sbb
add
std
loope
add
lret
mov
mov
insb
cmp
cmp
rorb
jg
and
repnz
push
lret
push
leave
movsb
leave
dec
sbb
or
pop
mov
aaa
push
cmpsb
scas
ja
clc
or
cltd
dec
xchg
loopne
hlt
mov
dec
mov
adc
in
adc
lret
int3
popf
xlat
das
int3
sub
sbb
icebp
inc
xchg
xchg
inc
adc
nop
int
in
mov
movsl
mov
xor
sub
push
xchg
mov
aam
pop
add
xor
sub
andl
xlat
inc
fidivrs
xchg
inc
in
inc
mov
notb
or
test
arpl
test
cltd
loop
sub
aas
dec
pop
mov
and
aam
insb
ds
pop
movsl
push
dec
loope
pop
inc
scas
fbstp
push
cwtl
cmp
inc
add
mov
shll
pushf
cmp
ds
loope
add
ss
push
pop
sar
and
in
mov
xchg
and
sbb
adc
mov
fwait
cmp
add
inc
add
jnp
int
or
mov
mov
mov
out
shlb
addr16
and
push
mov
or
push
daa
xorb
js
jle
mov
loop
push
movsl
sbb
pop
outsl
or
sbb
cmpsl
test
popa
jg
idiv
aam
out
icebp
cld
inc
das
enter
ljmp
lock
adc
sahf
pop
popa
rol
test
test
ret
dec
insb
iret
fmulp
loope
loope
and
mov
push
inc
lods
in
xor
dec
loopne
add
xor
stos
hlt
adc
mov
movsl
jne
jmp
mov
int3
enter
mov
mov
and
adc
adc
or
mov
js
lret
dec
lods
sub
mov
sub
aam
mov
bnd
adc
roll
xor
lcall
adc
imul
pop
faddl
add
stc
mov
loop
divb
insb
sub
out
dec
sbb
pop
dec
jp
loope
mov
outsb
xorl
sahf
push
sub
ja
adc
add
scas
into
idiv
aaa
repz
mov
dec
add
push
or
inc
cmp
adc
imul
cmpsb
inc
jnp
stos
inc
out
jg,pn
data16
std
pop
repnz
mov
adc
shufps
inc
mov
or
jl
xchg
mov
mov
push
dec
int3
adc
jecxz
adc
and
jl
sbbl
mov
int
pop
lea
and
cmc
adc
sub
lods
mov
pop
add
int
es
inc
cmpsb
fstpt
out
stos
lods
sub
shll
clc
xchg
mov
scas
xchg
imul
xchg
jmp
andl
or
ret
jg
clc
shlb
ficomps
pushf
pop
sub
dec
push
shll
sub
dec
and
mov
nop
pop
xchg
xor
ret
loop
fisubl
jl
in
dec
xchg
orl
add
and
out
fidivrl
div
sub
leave
js
jg
mov
lea
pushf
lock
inc
jg
inc
add
push
jp
sbb
xchg
pop
aaa
sar
rolb
mov
fdivrp
add
mov
imul
mov
jge
sub
pop
ficoml
cmc
test
dec
arpl
stc
dec
pushf
iret
aaa
or
inc
mov
jno
sar
push
pop
and
xchg
shrl
or
mov
sbb
lret
add
add
repz
jb
pop
scas
lahf
in
sub
dec
lahf
and
and
xchg
loop
repnz
out
fwait
or
pop
test
stc
inc
push
das
fbstp
inc
pop
xchg
add
jge
in
mov
nop
push
aam
jmp
push
das
fsubr
aaa
cmp
inc
jno
adc
mov
insb
push
pop
aam
jg
movsb
push
in
xor
clc
pusha
out
lcall
gs
cmp
movsb
leave
inc
loop
cmpb
jb
shll
loope
pop
mov
jne
add
xor
popa
dec
sub
clc
cmp
or
popa
daa
aad
sarb
ret
pop
cs
add
stos
or
and
sbb
xor
and
inc
scas
ja
cmp
out
and
pop
lods
fs
cmp
xlat
and
mov
push
inc
outsb
adc
push
sbb
lret
sbb
mov
add
fsubl
mov
jmp
mov
arpl
cmp
aad
jnp
and
pop
movsl
cmp
add
sub
popa
gs
sbb
imul
testl
cld
faddp
or
inc
and
aaa
clc
dec
popa
add
mov
sub
mov
std
mov
dec
push
in
push
inc
pop
push
pop
inc
aaa
lahf
in
ss
sbb
out
mov
aas
and
mulb
imul
in
pop
xor
arpl
mov
out
xchg
aad
popa
push
lods
mov
dec
in
mov
cmpsb
and
mov
mov
jnp
sbb
stc
mov
je
in
or
lods
and
into
in
dec
pusha
subl
adcl
out
testb
lahf
ds
leave
push
fiaddl
mov
fcmovbe
cmp
or
xchg
ret
jnp
push
adc
ljmp
ljmp
jg
pop
out
js
or
mov
push
xchg
mov
and
dec
in
int
sahf
inc
mov
cmc
and
in
xchg
imul
jne
push
in
mov
jp
fcmovbe
clc
adc
bound
subl
cmpsb
and
lahf
repnz
inc
inc
int3
addb
insl
pop
sbb
mov
mov
addr16
mov
pop
push
or
f2xm1
mov
mov
xor
mov
aaa
das
gs
mov
imul
les
das
mov
or
add
xchg
mov
nop
push
icebp
subb
cld
stc
addl
dec
cld
dec
loope
dec
pushf
xchg
fs
mov
fmuls
xor
nop
popa
mov
mov
cld
mov
test
cmp
mov
or
mov
mov
out
pop
dec
push
jg
icebp
rcr
lahf
popa
xchg
std
xor
in
mov
dec
xchg
imul
mov
xor
and
sub
add
frstor
push
dec
outsb
pop
mov
mov
movsb
adcl
pop
push
fdivr
dec
cmp
cmp
lds
xchg
int
mov
xor
pop
cmp
mov
test
imull
push
mov
and
mov
aad
jnp
cmpsb
lcall
or
icebp
addr16
inc
lcall
aad
dec
das
push
jl
bound
je
sti
cld
xor
xlat
out
and
push
fistl
imul
ds
loopne
and
negl
push
test
leave
mov
inc
insb
test
into
sarb
repnz
js
testl
jae
jb
xchg
bound
test
arpl
or
jae
sti
lea
xchg
ret
mov
insb
xor
xor
push
lods
cmp
in
fimuls
pushf
repnz
push
push
xchg
lods
sub
leave
pop
jbe
add
xchg
rclb
test
mov
ljmp
in
add
inc
loop
rcrb
ret
lds
mov
push
cmp
adc
je
idivb
ror
cli
sti
divl
pop
clc
xchg
lret
out
cmpsb
add
decb
inc
arpl
into
adc
push
out
dec
stos
mov
sbb
loop
movsb
mov
xchg
fbstp
push
fmuls
nop
cli
xchg
xchg
lret
shll
or
sbb
xchg
push
sub
inc
insl
and
cltd
jg
ss
aas
sbb
pop
daa
inc
sbb
push
mov
jo
sahf
sbb
cmp
out
cmp
mov
add
es
bound
fidivl
hlt
and
js
and
pop
adc
cld
sti
into
movsl
dec
lahf
les
push
shr
and
stc
pop
enter
das
data16
sbb
lahf
mov
dec
fbstp
and
dec
sub
leave
clc
lcall
push
mov
xchg
mov
jmp
icebp
sahf
jnp
test
dec
pop
in
pop
mov
xchg
xchg
jle
test
jecxz
pop
push
pop
lret
ds
clc
nop
sbb
or
das
cmpb
lcall
and
sbb
loopne
xchg
fs
mov
in
mov
orl
mov
repnz
cmp
mov
cmp
pop
mov
out
fisttps
xchg
dec
jecxz
jmp
xlat
or
adc
es
mov
jnp
inc
push
push
jl
mov
je
sahf
es
xchg
mov
fiaddl
or
cli
cmp
mov
movsb
sarw
push
pop
and
adc
nop
pusha
js
xor
inc
mov
sub
jo
cmc
cmc
mov
mov
mov
movsb
loop
leave
clc
in
out
sbb
dec
cmp
xchg
mov
dec
sub
mov
lods
movsb
push
mov
pop
pop
out
push
addr16
cmpsl
xor
jns
scas
push
les
jae
cmc
imul
xchg
insb
add
sub
jmp
push
sbb
pop
fwait
sbb
lods
stc
xor
inc
js
outsb
jbe
repnz
dec
inc
test
cli
sbb
jmp
jnp
add
dec
and
inc
push
xor
aaa
testb
or
xchg
movb
test
lods
sbb
pop
hlt
and
lea
add
dec
or
mov
inc
push
adc
jl
jge
push
add
mov
lods
fwait
pop
shlb
in
shll
xor
sbb
xchg
scas
push
repz
dec
xor
mov
adc
shlb
cmc
inc
pushf
cmp
lahf
cmovle
and
lock
flds
jo
inc
sub
xor
mov
hlt
cmc
mov
repz
jb
outsb
arpl
dec
or
adc
stos
adc
movd
mov
das
pop
jbe
inc
cmpsl
adc
int3
fildll
and
mov
pusha
sub
sub
inc
shll
sub
les
xchg
jb
sar
mov
mov
inc
push
cmpsb
ja
xor
lret
jl
push
xchg
cmp
in
or
mov
cmp
ja
adc
enter
fcmovbe
cwtl
imul
lret
fwait
orb
push
insb
ret
je
stc
popf
mov
jp
xchg
cmp
push
insb
xor
popa
faddl
clc
jno
ja
mov
out
xlat
sbb
shll
aam
or
int
or
aaa
sub
cmc
mov
js
sub
movsb
out
cmp
jo
fcoml
xor
mov
sbb
sbb
ret
ficompl
pushf
stos
pop
push
lods
sti
and
mov
or
or
mov
ret
sahf
popa
pop
lret
mov
in
jb
scas
hlt
je
gs
clc
mov
mov
push
int3
xchg
cmp
add
popa
adc
movsb
jb
insl
dec
bound
pop
or
push
imul
xchg
inc
mov
test
loopne
fistps
dec
arpl
test
and
push
jmp
mov
iret
jbe
mov
lcall
sbb
cmpsb
xchg
cmpsb
test
xchg
cld
insb
sahf
adc
bound
js
decb
push
test
push
orl
ja
out
data16
cmp
cs
movsl
xchg
insl
mov
push
lds
xor
loope
cmpsl
and
iret
aaa
das
sbb
jbe
js
cltd
rolb
adc
arpl
out
cwtl
pop
sub
xchg
push
jnp
rolb
xchg
cmpsl
add
scas
xchg
push
xchg
add
or
mov
movsb
movswl
lea
xorb
loop
inc
or
xorl
xchg
adc
and
aad
xchg
or
les
or
in
push
aaa
shrl
leave
addr16
js
je
xorl
cmp
add
or
mov
aam
icebp
lahf
fildll
dec
sbb
dec
fwait
xchg
sbb
pop
cwtl
jns
ds
pop
pop
shll
mov
loope
inc
insb
and
xor
xor
inc
fisubrl
jge
movsl
stos
xlat
cltd
test
movsb
ret
sbb
dec
call
call
pop
adc
sbb
cmp
dec
pop
lea
add
leave
add
movsb
jmp
xor
jge
and
lret
mov
xor
xor
sbbl
inc
jge
call
movsb
xchg
adcb
dec
pop
lretw
fxch
clc
popa
out
sub
daa
mov
fcmovbe
fwait
sbb
ror
push
fcompl
adc
jmp
push
xchg
jb
sti
push
int3
int3
push
iret
cmpl
mov
pop
pop
pop
mov
xchg
insl
adc
push
cmp
std
cwtl
in
sti
rorb
xchg
je
xlat
inc
inc
test
push
inc
adc
jmp
mov
jbe
inc
add
push
pop
jecxz
push
sbb
push
or
mov
icebp
mov
clc
int3
mov
leave
push
inc
and
loopne
out
sbb
fldenv
pop
das
and
push
scas
push
repnz
arpl
xchg
sbb
push
in
call
outsl
outsb
gs
mov
int3
andl
mov
fistpll
xor
rcrl
xor
cmp
cmpsb
cmp
lods
inc
or
flds
add
push
ljmp
test
shr
das
sbb
push
fucom
shll
lahf
dec
xor
jne
shll
lret
fildll
xlat
in
pop
mov
and
adc
xchg
xchg
ja
fst
xchg
mov
aas
pop
push
in
jge
aas
mov
cmp
jecxz
jae
hlt
inc
sbbl
mov
push
mov
dec
mov
int3
mov
jmp
inc
jg
xor
addb
btrl
jbe
fisubrs
imull
shlb
jne
lret
popf
jg
push
sub
scas
cmp
sbb
mov
ja
out
rorb
cmpsb
dec
lea
cmpb
lret
jno
movsl
fucomip
cvtps2pi
gs
cmpsl
pop
inc
jno
mov
clc
enter
idivl
push
and
js
out
mov
push
add
fadd
or
or
jno
mov
push
xchg
scas
rcll
cwtl
mov
add
insl
les
xchg
addr16
inc
xchg
push
sub
call
xadd
out
hlt
inc
jecxz
ljmp
inc
sbb
cmp
adc
pop
popf
stc
lahf
inc
xchg
mov
cmp
mov
sub
ret
add
xchg
into
ja
add
aaa
insb
repz
lods
adc
jp
jb
inc
adc
pop
and
cmc
movl
lret
xor
mov
jae
lock
imul
sahf
jecxz
pop
jnp
int3
orl
cld
sti
lods
push
mov
dec
or
aad
push
dec
xor
and
stos
cmpb
push
adc
sub
fsub
inc
shlb
es
cld
cmp
outsl
rolb
std
jo
in
pop
jbe
adc
inc
adc
jp
xor
jnp
es
fsubrs
sub
jp
loop
loopne
dec
jecxz
or
scas
adc
pop
test
in
cmp
repz
cltd
lods
loop
repnz
ss
dec
sarb
xchg
push
clc
mov
shl
andb
ret
in
sbb
cs
repnz
jae
call
adc
popl
mov
ljmp
imul
test
icebp
or
insl
pop
cmp
stos
jno
sbb
fs
mov
cmp
addr16
push
mov
adc
inc
pop
mov
mov
push
add
cltd
aaa
xor
mov
mov
in
xor
dec
subb
mov
ficomps
push
insl
popf
adc
xor
loop
or
std
inc
mul
daa
mov
or
and
out
out
dec
inc
adc
adc
xchg
bound
push
sub
fstpl
dec
sahf
xor
or
cmp
aaa
cmp
cmp
xor
and
xchg
sbb
push
xchg
test
pop
fistpl
mov
mov
fs
xor
stos
aad
dec
cmpsb
into
cltd
mov
test
aam
mov
ret
addr16
ret
in
sarl
push
movsb
lret
lods
roll
fnstcw
aam
fucom
push
mov
and
mov
stos
adc
in
push
xchg
arpl
aam
leave
outsb
bnd
daa
inc
push
cmpsb
mov
and
xlat
sbb
xchg
ficomps
test
cmpsb
lds
shl
sub
shrl
add
repnz
mov
sbb
ljmp
mov
and
mov
adc
cmp
mov
mov
loope
and
mov
gs
in
dec
fcomi
mov
sbb
pop
jle
stos
call
or
loope
mov
cmpsb
add
imull
out
or
mov
sub
in
and
and
jmp
push
sbb
repz
jmp
das
cmc
xor
inc
jnp
or
shl
inc
orb
aaa
das
es
adcb
xor
shl
bound
fstps
shl
inc
sbb
enter
ja
or
arpl
mov
in
jg
ret
js
stos
shl
xor
add
xor
addr16
jnp
repz
pop
xchg
or
pop
fmul
push
shrb
push
aas
in
sub
ret
xor
sub
cmp
sbb
cmpsl
cmp
jns
mov
adc
into
cmp
ret
xor
mov
outsl
sbb
inc
mov
push
sbb
and
icebp
xchg
or
int
push
push
repnz
into
mov
mov
repnz
push
repz
and
in
mov
fildl
aam
pushf
jae
sub
pop
out
jne
lret
or
lret
jb
adc
xchg
jg
xchg
ds
mov
shl
dec
loopne
lahf
repz
jmp
pop
add
ret
and
stos
jo
sti
orl
mov
sbb
jno
adc
jp
mov
out
fs
xchg
jp
pop
test
imul
add
adc
loope
xchg
pop
out
push
popa
and
stos
xchg
and
das
and
adc
icebp
inc
popa
inc
into
mov
push
sbb
outsl
repz
push
inc
sbb
lret
inc
mov
dec
pop
ret
inc
jne
add
das
dec
push
mov
add
push
jb
xlat
loop
dec
adc
fildll
test
in
clc
movsl
sbb
es
pop
imul
pop
add
lret
bound
xchg
and
mov
add
nop
enter
pop
aam
pop
sbb
xchg
inc
inc
pop
pop
mov
hlt
adc
sbb
fnstcw
xchg
mov
frstor
push
inc
lea
iret
pop
add
inc
mov
popa
aam
int
push
lods
test
mov
divl
div
pop
clc
fimull
push
xchg
imul
repnz
mov
jb
insb
sbb
xor
mov
jg
add
ret
pop
popf
inc
xchg
fmuls
mov
pcmpeqw
xor
and
bound
sbb
cmp
arpl
out
fld
cmpsb
lds
jecxz
mov
xor
stos
popa
cli
dec
cmpsb
repz
sbb
pop
clc
cwtl
sub
popa
adc
or
and
nop
pop
xor
out
xor
xorb
xchg
jo
scas
mov
mov
js
jmp
sub
mov
mov
sub
cli
ret
add
lcall
adcb
inc
iret
out
stc
dec
cmp
call
pop
push
or
enter
dec
jbe
call
jne
into
push
sub
sbb
sbb
rolb
cmc
rclb
jae
xor
sub
jno
clc
daa
dec
push
popa
cmp
inc
cmpsb
dec
sub
push
sub
mov
in
hlt
ss
ljmp
push
push
inc
or
pop
in
sti
pusha
std
aam
mov
push
dec
mov
mov
push
repnz
inc
inc
and
addr16
imul
pusha
mov
loope
les
lock
sub
pop
fldl
sahf
inc
pop
sbb
xchg
sbb
inc
ret
sub
jp
cmp
ljmp
cmp
pop
in
out
dec
or
cmp
fisubl
cmp
in
cmpsb
enter
inc
cmp
pop
jo
or
or
in
shlb
xchg
sub
testl
mov
and
lret
mov
mov
mov
add
out
movsb
scas
push
inc
pop
xchg
mov
ja
xor
call
adc
jne,pt
sbb
dec
xlat
movsl
pushf
rcr
xor
and
es
loop
mov
mov
mov
inc
sbb
enter
insb
push
add
fidivrs
addr16
pop
jbe
outsb
movsb
lcall
cmpsl
or
movsb
cli
jecxz
or
rorl
nop
cmpsl
or
std
and
mov
negb
scas
sti
xlat
pop
sub
cmp
push
popa
outsb
dec
test
adc
dec
fwait
adc
out
xor
testb
aaa
xor
pop
lret
inc
cmp
dec
insb
sub
push
cwtl
pop
popf
dec
lret
cmp
mov
and
dec
sbb
cmp
push
out
fwait
adcl
jne
shlb
mov
inc
dec
mov
xchg
lret
loop
ror
xor
push
and
cmp
cmp
push
jge
popf
cmp
inc
push
cmp
ret
shll
mov
addr16
dec
das
mov
inc
stos
aam
mov
or
loopne
lahf
insb
or
and
sbb
pop
mov
pop
loopne
les
cmp
sub
outsb
cltd
xor
jle
flds
jmp
mov
arpl
push
mov
test
push
imul
pusha
scas
rcrl
push
cmp
ret
jl
push
lods
dec
ds
sbb
inc
js
ret
or
cmpsb
insb
dec
shrb
rcrb
sbb
xor
jmp
push
pop
jecxz
sbb
mov
add
lahf
ss
out
leave
pop
fsubs
cmp
into
dec
fisubrs
sahf
aas
pop
pop
insl
loop
dec
cwtl
push
push
rcl
les
mov
jg
add
and
push
lret
jmp
mov
inc
idivl
mov
lahf
mov
stos
xchg
inc
xor
insb
mov
add
jl,pn
decb
pop
pop
xor
cmpb
lock
lods
fistps
aas
push
aam
pop
inc
sti
pop
in
lods
dec
scas
mov
in
lret
dec
add
pop
or
push
aam
fisttpll
sbb
xor
and
push
invd
or
inc
xchg
shrb
mov
adc
jg
add
mov
adc
cld
fdivs
inc
sahf
aam
lock
push
stos
adc
stc
aad
and
push
jg
pushf
imull
push
xor
addb
jno
dec
mov
insb
addr16
js
data16
or
or
pop
sub
fwait
aas
xor
jno
sub
iret
pop
adc
js
repnz
and
repz
outsl
lds
mov
xchg
push
aad
xchg
fstl
add
stc
push
dec
xchg
shlb
mov
pop
pop
xchg
je
jo
andl
and
js
les
xchg
stos
dec
dec
movd
sub
dec
and
jno
push
or
cmpsl
xorb
pop
or
ret
jnp
insb
xchg
add
outsl
popa
arpl
fiadds
inc
icebp
mov
lock
in
negb
jl
mov
cmpsb
sbb
and
test
loope
xor
push
push
loopne
sub
popa
push
adc
pop
popf
inc
dec
movsl
sub
sub
jmp
loope
insl
cmp
mov
fstpl
scas
cmp
push
mov
ja
add
fcomps
arpl
dec
fs
nop
adc
jp
mov
sbbl
out
stos
les
mov
shl
jne
jbe
in
jno
call
push
push
sub
dec
pop
outsb
out
add
xor
pop
sub
dec
fists
jb
push
xor
icebp
xor
xor
dec
jecxz
sub
jne
rclb
fisttps
pusha
xchg
add
movsl
mov
pop
movsb
sub
test
push
dec
add
jbe
xor
or
sbb
adc
in
xor
push
push
bound
jge
adc
cmp
mov
dec
inc
or
not
in
lret
cli
pop
fwait
mov
or
jge
xor
sarl
xorl
inc
cmpsl
cwtl
icebp
push
cmpsl
mov
fildl
adc
pop
xor
imul
jmp
sbb
pop
mov
jecxz
gs
out
dec
sbb
inc
cmpsb
test
xor
push
push
out
mov
or
xchg
ret
xor
inc
mov
jno
addr16
ret
aaa
ss
popl
fadds
xchg
mov
repz
loop
sbb
sti
lret
dec
sub
testl
sahf
fmuls
jp
aam
andb
jle
jno
in
lods
repz
js
xchg
jmp
push
jl
mov
xchg
fdivs
sub
aam
mov
xchg
aam
xchg
fs
shlb
pop
push
jmp
pop
insb
and
push
mov
pop
insl
sbb
push
rol
call
adc
insl
rol
xchg
or
dec
or
jmp
add
xorb
cmpb
cs
loop
stos
cmc
inc
jg
xor
mov
subl
jecxz
out
ret
repz
inc
mov
mov
sbb
push
or
fnstcw
outsb
push
sti
push
lea
jecxz
lock
outsb
testl
cmpl
add
imul
pop
cmp
xor
or
outsl
cwtl
fcmovnb
fcom
and
into
xacquire
xor
nop
iret
or
cmc
xor
cltd
xchg
push
bnd
mov
jns
orl
sti
out
lock
mov
repnz
mov
sub
ret
sbb
mov
loope
mov
int
jg
into
xor
pop
mov
inc
and
aad
dec
dec
roll
dec
out
test
jl
sti
imulb
aad
xchg
test
and
inc
jg
lods
pusha
cmp
popf
xchg
lods
cltd
pop
pop
add
divb
cs
sti
xchg
out
call
sub
imul
subl
mov
xchg
pop
into
fwait
popf
add
das
xchg
insb
cmpsl
roll
cmc
mov
inc
pop
jle
movsb
repnz
test
imul
loop
inc
rorb
stc
out
imul
call
mov
push
fwait
and
pop
dec
es
cld
cmp
imull
mov
push
xchg
mov
jo
ljmp
or
jl
mov
push
mov
and
pop
enter
in
and
mov
sbb
inc
into
xlat
std
xchg
mov
sbb
negb
xchg
pop
or
fcompl
mov
cltd
testl
jnp
pushf
jecxz
iret
mov
dec
lods
ffree
mov
cmp
les
inc
in
lea
add
cmp
pop
adc
mov
test
and
and
fidivrl
push
lds
mov
and
xor
js
mov
mov
hlt
shll
test
inc
push
insl
sub
xor
dec
dec
cmpsl
push
xor
push
dec
imul
push
mov
push
movsl
fstpl
ret
inc
or
mov
push
xor
leave
adc
inc
jns
pop
clc
repnz
dec
arpl
adc
pop
adc
xchg
dec
test
aaa
cmpsb
leave
out
push
rcrl
js
xorl
mov
pop
mov
cmpsb
mov
or
pop
rolb
mov
stos
fcoml
sub
icebp
out
xchg
stos
insb
pmullw
mov
jne
ret
shll
mov
jl
pop
subb
daa
stos
cmp
nop
cli
and
rorb
insb
mov
aam
push
push
fdivrp
dec
lods
aaa
xchg
bnd
dec
push
mov
stos
sti
es
inc
sub
mov
in
adc
add
pop
outsl
inc
sbb
mov
das
adc
sbb
dec
dec
out
retw
jg
mov
hlt
aam
cli
dec
push
out
xor
pop
inc
jae
cwtl
mov
add
xchg
rolb
mov
xchg
inc
or
fidivs
andb
pop
mov
and
fwait
lret
sahf
or
sbb
stos
mov
in
test
adc
push
fwait
xchg
push
sahf
xor
pop
jl
xor
cmp
jae
mov
inc
hlt
mov
ror
push
out
cld
or
or
lock
dec
repnz
pop
adc
push
int
clc
lret
decl
insl
testb
int
shl
test
shl
arpl
fbld
hlt
push
sub
cmp
mov
mov
lcall
je
xchg
mov
jns
ret
mov
pop
inc
rol
or
sar
cmc
or
aad
gs
dec
cmc
loope
roll
add
xchg
shl
and
dec
sti
and
loope
mov
lods
insl
inc
out
xor
inc
mov
fs
cld
fwait
clc
and
sbb
hlt
stc
add
lcall
data16
movsl
daa
fildll
fcoml
dec
dec
push
inc
imul
xchg
gs
fmull
iret
push
pop
jp
mov
ja
mov
andl
sbb
insl
ljmp
daa
scas
test
jecxz
outsb
arpl
repnz
out
mov
jne
xorb
sbb
iret
pushf
out
outsl
jne
or
and
mov
sub
das
or
adc
or
xor
loopne
test
fldenv
into
xchg
xor
mov
pushf
sti
push
shlb
shlb
push
sub
in
loopw
and
inc
dec
in
xlat
jmp
outsb
inc
ds
or
pop
inc
adc
sbb
push
sbb
push
cmc
cmp
bound
mov
xchg
in
jne
mov
aas
aaa
mov
data16
push
fs
mov
mov
jp
enter
or
mov
xchg
lock
push
xchg
aam
mov
movsb
mov
mov
fcoml
sar
ds
daa
aad
faddl
xchg
cmp
inc
mov
fistl
jbe
and
push
dec
imull
mov
lret
insb
test
imul
xchg
sub
inc
and
sbb
lret
mov
xchg
test
mov
into
pop
call
icebp
aaa
mov
arpl
inc
xchg
movsb
mov
popa
jbe
jns
sbb
mov
hlt
ret
lods
pop
and
pop
jge
or
or
cmp
inc
cmp
sbb
ja
jmp
ds
xchg
into
fmuls
pop
mov
mov
bound
lea
orl
jge
es
mov
inc
insb
sbb
in
hlt
jg
adc
pop
rorb
ss
cmp
lods
pushf
sahf
sub
cli
push
push
outsl
roll
dec
xor
ljmp
call
arpl
sti
jg
push
pop
push
enter
pusha
mov
push
daa
cli
shll
inc
sub
addr16
mov
shr
xorb
sub
cmp
out
xor
cmc
imul
add
sbb
dec
jecxz
lret
inc
pop
jmp
test
and
in
arpl
adc
xor
in
stc
sbb
xchg
add
mov
xor
lcall
mov
add
push
lock
xchg
out
and
sbb
dec
jle
in
sbb
add
ss
pop
jp
idivl
sti
cmp
add
aad
iret
sbb
outsl
mov
jle
fcmovbe
mov
xchg
push
cmp
cmp
dec
lods
sbb
lods
insl
out
pop
inc
mov
shll
imul
push
pusha
cld
sub
push
mov
cwtl
pop
push
ljmp
mov
push
sub
cmc
sbb
icebp
mov
out
and
push
push
dec
add
mov
data16
adc
ljmp
jle
lock
sbb
ja
xlat
push
mov
sbb
dec
inc
pop
or
jae
sub
std
jb
jle
enter
ucomiss
sbbb
xchg
sub
dec
call
jg
icebp
mov
inc
lahf
sbb
push
adcb
dec
push
jns
fs
das
fwait
pop
sbb
fwait
loopne
int3
sahf
out
or
push
ljmp
mov
cwtl
push
mov
fsubrs
and
pusha
scas
cli
and
loope
fwait
in
sub
cmpsl
inc
mov
pushf
rclb
pop
not
add
subl
rorl
aam
inc
repz
mov
pop
add
fstpl
ret
mov
and
es
lcall
or
cmp
cmp
sbb
mov
push
repnz
dec
in
mov
movlps
jb
popa
out
int
dec
test
jae
sbb
add
sub
adc
mov
and
pushf
pop
scas
add
lea
inc
mov
loope
out
cmp
mov
cmp
mov
mov
and
mov
mov
and
adc
sbb
scas
adc
lret
cmp
out
aad
dec
and
mov
adc
insl
out
lock
rolb
push
mov
mov
cmpsb
cltd
sbb
nop
sbb
jl
adc
add
add
aaa
pop
pop
adc
pop
pushf
cmp
jnp
outsl
push
mov
pop
jge
mov
inc
jnp
pop
arpl
jo
sub
jnp
outsl
repnz
sub
push
lds
out
into
clc
enter
pop
inc
call
sarb
push
mov
push
mov
mov
cmp
xchg
leave
cs
scas
pop
loope,pt
push
or
imul
fwait
inc
ret
int3
insl
inc
mov
test
dec
in
mov
jns
imul
imul
fldenv
mov
xor
push
or
mov
sub
and
xlat
cmp
cmp
outsl
lods
mov
or
sti
outsb
jns
sub
jns
scas
push
ljmp
push
mov
mov
cmpsl
les
lea
adc
test
mov
subb
push
es
adc
loop
fidivs
pop
flds
xor
mov
loope
data16
cltd
mov
stc
push
jl
push
popa
popf
hlt
roll
out
xor
orb
cmc
add
data16
lock
loop
lcall
ret
pop
cwtl
cmpsb
adc
jnp,pt
shrb
outsb
out
xchg
add
adc
mul
aam
rolb
mov
arpl
cltd
xor
loope
adc
jns
out
sbb
jmp
inc
mov
repz
cmpsb
outsl
mov
leave
out
outsl
pop
sti
mov
in
arpl
mov
pop
fisubrl
xor
sub
push
ret
mov
xchg
movsb
sub
push
adc
dec
xchg
jne
cmp
and
xchg
or
rcll
fiadds
xor
xchg
add
pop
mov
cld
xchg
pop
mov
push
xchg
js
cmp
icebp
and
icebp
sub
dec
cmp
ror
and
gs
push
mov
jo
dec
das
xchg
std
adc
push
jg
ret
xchg
ret
mov
popf
cmpsb
sub
or
jge
scas
enter
or
inc
or
cmp
adc
iret
cmpsl
xor
cmc
inc
mov
mov
aam
sar
sub
outsb
dec
adc
pop
xor
inc
inc
in
pop
aad
cmp
andb
cmpsb
popf
in
push
sarl
cmp
cmp
jge
scas
das
pop
daa
push
jnp
inc
ss
jb
fiadds
mov
ja
adc
xchg
into
sbb
mov
in
sbbb
xor
mov
jno
xor
sbb
aam
mov
mov
jecxz
and
pop
std
sbb
lret
cmp
dec
inc
dec
icebp
sub
mov
xchg
imul
jo
addr16
sahf
out
movsl
sub
cwtl
push
test
dec
je
int
xor
and
leave
adc
cs
mov
sub
pushf
mov
je
into
mov
je
mov
push
shrl
movsb
mov
push
sub
cmp
adc
sbb
push
dec
dec
pusha
sbb
repz
outsl
and
stos
addr16
xchg
mov
push
dec
repnz
push
xchg
mov
mov
call
lahf
jno
cltd
xchg
lret
repz
jb
fisubrs
xchg
test
xor
cmp
xorl
fld1
lahf
out
sub
out
mov
ret
insb
mov
xchg
mov
jmp
inc
pop
pop
and
mov
fcmovnbe
jl
dec
sbb
fwait
mov
sti
cmp
push
scas
push
adc
mov
rcr
lods
or
add
arpl
fisubrl
mov
ficomps
stc
les
jb
mov
inc
lods
jecxz
test
dec
and
add
jns
sti
mov
out
out
out
repz
adc
data16
and
inc
ds
xor
xchg
repnz
mov
mov
dec
sub
cmpsb
aad
dec
dec
push
mov
add
inc
cli
xlat
lahf
in
orb
xor
div
pop
inc
js
push
push
test
into
aas
add
cwtl
imul
adc
cmpb
cwtl
arpl
mov
insl
in
je
cmp
out
int3
xor
push
fistpll
rclb
call
xchg
jmp
pop
inc
xor
mov
mov
imul
sbbb
xchg
xor
push
jno
in
sub
repz
cld
ret
adc
dec
xor
and
fisubl
inc
cwtl
pop
roll
fcoms
inc
call
add
xchg
mov
call
add
sub
or
dec
jae
and
xchg
push
imul
in
icebp
loop
pop
pop
repnz
loope
sub
loopne
mov
lcall
sub
and
in
jge
xor
das
push
scas
inc
push
icebp
outsb
push
mov
pop
iret
sbb
sub
dec
add
mov
iret
call
xor
into
fadds
mov
in
cmc
mov
cltd
stos
loope
sub
cmp
shl
push
fnstenv
insb
fwait
in
jmp
sbb
jae
inc
pop
sub
imul
sub
pop
sti
pmuludq
add
or
pop
jmp
push
ficoml
ljmp
sahf
or
fisttpl
adc
test
pop
enter
xchg
into
mov
dec
adc
lahf
mov
mov
sti
push
sbb
pop
fmull
xchg
xchg
or
jl
inc
mov
or
mov
adc
jmp
testb
lea
push
inc
dec
adc
xor
testl
jp
adc
mov
or
outsb
jo
scas
ljmp
inc
mov
mov
es
mov
cs
jl
xor
add
stc
mov
ljmp
adc
jg
in
in
lds
xchg
idivl
stos
neg
mov
enter
aaa
push
lods
fwait
mov
inc
jae
add
jbe
aam
xor
cmp
dec
xor
xlat
insl
popa
dec
or
lds
cmpsl
jge,pn
cmp
xchg
pop
xlat
add
mov
adc
sub
xor
and
add
fdivrs
adc
cmp
std
inc
lahf
stos
pusha
xchg
xchg
mov
or
int3
or
jb
mov
outsl
sub
cmp
sbb
or
dec
icebp
scas
out
cmpsl
jns
pop
jnp
cmp
negl
adc
pop
and
pop
das
mov
adc
push
icebp
jne
xlat
sub
sahf
xchg
sahf
cmp
push
inc
ficoms
pop
mov
dec
stc
sbb
movsb
aas
and
inc
cltd
dec
or
mov
lock
sti
repnz
testb
push
sti
aam
mov
imul
inc
lods
nop
push
inc
shlb
mov
rorl
in
inc
mov
pop
scas
mov
xor
mov
shrl
sub
inc
outsl
lcall
mov
lahf
cmc
pop
pop
fbstp
test
inc
jle
repnz
and
pusha
in
xchg
jg
dec
cmp
mov
je
jge
xchg
fidivs
jno
shll
cmpsb
cs
inc
mov
ss
sub
pop
or
cmp
leave
sbb
sarl
addr16
and
or
cwtl
pushf
aas
hlt
shll
gs
dec
mov
loopne
insb
jns
sbb
push
sub
mov
scas
dec
cmp
leave
or
loop
push
pop
gs
lods
sahf
mov
mov
dec
cltd
hlt
jg
dec
call
addb
jmp
adc
lcall
std
or
ficompl
push
mov
mov
mov
leave
and
shrl
push
lods
xchg
jle
aas
data16
pop
lret
adc
jne
pusha
and
hlt
inc
lods
call
adc
adc
mov
fnstenv
add
cmp
dec
and
aad
stc
int3
mov
test
sbb
mov
inc
addl
bound
stos
daa
cmc
aam
iret
mov
jge
aaa
bound
loop
gs
into
sahf
jle
jp
xor
dec
sbb
mov
push
ljmp
pop
cwtl
jb
popf
sti
out
mov
icebp
sahf
enter
cmp
push
fsubs
sbb
mov
push
or
cmp
int3
cs
mov
out
pop
or
lods
add
xchg
add
incl
pop
cmpsb
shl
pop
dec
daa
push
xchg
rcrb
out
xlat
clc
xchg
lods
add
subb
sub
sbb
ja
dec
imul
ret
add
inc
jp
push
stc
pop
mov
push
dec
sbbl
das
jo
rolb
pop
xor
cmovnp
pop
aaa
aaa
testb
xchg
jge
out
ja
aas
insl
test
or
or
adc
jg
sub
xchg
inc
in
inc
pop
push
lret
iret
cwtl
cmp
xor
or
sbb
and
sub
imul
fwait
nop
jbe
scas
dec
mov
scas
nop
test
xor
add
loop
fistl
mov
push
lret
xor
mov
cmp
fisttpll
clc
insl
dec
fiadds
jb
sbb
imul
inc
movsb
dec
outsl
dec
sub
inc
dec
test
adc
jo
sbbl
push
push
add
fmuls
and
xor
lea
fstpl
call
or
mov
jo
lds
fs
xor
pop
and
pop
in
xchg
mov
adc
push
ret
mov
test
movsb
jno
aaa
jbe
and
mov
mov
ss
lahf
pop
xor
idivl
cmp
flds
jmp
fadd
and
push
into
aaa
xchg
fbstp
mov
pop
and
scas
dec
out
popa
jns
mov
add
xor
mov
pusha
test
mov
cld
mov
pop
or
adc
pop
ljmp
aam
jb
push
sti
insb
mov
movsb
jmp
repz
push
ret
jmp
ja
stos
repnz
push
mov
pop
hlt
adc
lea
fnstcw
loopne
pop
xor
pusha
xchg
jns
lods
push
clc
lcall
call
iret
lds
scas
andb
icebp
sbb
mov
fcmovnb
cs
mov
adc
xchg
dec
inc
dec
sub
pushl
xchg
rcll
pop
ss
aam
or
xchg
cli
dec
arpl
adc
mov
mov
mov
mov
mov
pop
add
mov
push
cltd
cmp
iret
pushf
add
je
sub
cwtl
jnp
xchg
xor
je
out
and
mov
xchg
jg
test
ret
sub
cmpsb
addr16
daa
push
inc
out
out
or
fnstcw
aam
das
cmp
and
push
sbb
cmp
outsl
cmp
inc
imul
or
sub
jle
call
jnp
add
adc
pop
mov
xor
jg
dec
adc
int3
mov
mov
and
pop
lods
mov
adcb
mov
sbb
cmp
push
jo
scas
outsl
lahf
scas
orl
outsl
iret
sub
and
mov
and
loop
sbb
add
jp
jl
dec
inc
push
clc
xor
shrb
mov
in
mov
mov
shld
loope
popa
mov
mov
cld
mov
insl
int
sbb
lods
insb
je
jp
test
jne
test
dec
and
mov
or
aam
inc
and
shll
mov
pop
push
inc
push
sbb
andb
lret
mov
retw
cwtl
ds
xchg
clc
dec
inc
xor
fiadds
popa
ret
xchg
sbb
xchg
ret
mov
or
cmc
pop
xchg
std
je
repnz
rorb
mov
pushf
aas
loop
fistps
jmp
pop
mov
push
adc
xor
and
test
iret
fnstenv
clc
mov
addb
ds
loope
xlat
mov
jg
and
add
dec
repz
sub
mov
notb
imul
scas
mov
into
stos
fwait
stos
xchg
and
cli
aas
sbb
movsb
jb
jo
push
push
loop
in
cmpsb
sarb
repnz
xchg
loop
jp
rcll
insb
scas
dec
mov
into
adc
cmc
das
insl
pop
pop
jl
mov
mov
nop
xchg
ret
jnp
adc
fistpl
clc
enter
sbb
jnp
dec
pop
xchg
cmp
xchg
js
popa
push
sub
int
xchg
addb
stc
adc
loope
xor
pop
inc
add
jae
xchg
cltd
enter
in
fnstcw
outsl
xor
enter
cmp
xchg
xor
jle
in
aam
push
adc
enter
or
push
js
fstpl
es
insb
pop
jb
or
ja
mov
mov
inc
test
fcompl
adc
std
cmp
inc
stc
add
clc
fcmovbe
fs
dec
push
in
pop
cmpsb
pop
je
loopne
lret
lods
rcl
jecxz
dec
add
leave
loope
dec
sub
mov
outsl
inc
fisubl
ljmp
subb
xor
cmp
aaa
rol
push
into
loope
enter
outsl
cld
or
xor
lods
aam
mov
mov
pop
and
cmp
cltd
arpl
xchg
pop
lret
cmp
sub
sub
das
fldl
xchg
jmp
repnz
cltd
addr16
mov
loope
mov
jns
lret
adc
jnp
mov
pop
pop
xchg
add
lock
ss
mov
in
add
inc
mov
jno
test
ljmp
fistpll
sbb
mov
out
push
mov
inc
cli
ljmp
ljmp
hlt
pop
lods
lock
pop
and
test
or
adc
dec
pop
pop
jno
and
in
lret
dec
dec
pop
ret
inc
sub
addr16
or
bound
cmp
inc
or
and
adc
xor
dec
data16
test
shl
pop
data16
or
inc
mov
clc
insl
push
out
inc
pop
call
cld
xchg
ret
jmp
add
xlat
je
adc
push
jo
jmp
out
fldenv
sub
repz
jno
rolb
ret
inc
jp
mov
mov
stos
push
mov
dec
or
dec
jg,pt
inc
aas
mov
cli
adc
jle
and
mov
cmp
sbb
stos
push
stc
stc
int
mov
sbb
or
pop
or
xchg
pusha
or
jp
xchg
lea
sub
jge
call
jl
lods
add
jmp
sbb
push
lods
fidivrl
shl
inc
add
xor
mov
add
jg
cmp
jge
loopne
dec
push
jnp
pop
inc
cmp
sub
dec
lret
pop
and
push
and
and
inc
fucomi
ljmp
lret
mov
jnp
inc
pop
sbb
inc
testb
add
jp
inc
imul
cld
not
jns
sub
mov
movsl
fwait
push
dec
mov
sbb
mov
push
repnz
mov
pop
ficomps
inc
fiaddl
inc
popa
push
xor
in
add
dec
and
shrb
bound
pop
aaa
pop
sub
adc
or
insl
xchg
insl
push
sub
inc
loopne
ja
pusha
xchg
jne
test
and
push
dec
das
dec
lret
jle
lret
cmp
fs
je
daa
std
jg
cmp
and
push
inc
sbb
or
or
inc
cmp
notb
gs
push
sub
mov
add
jnp
movsl
and
aaa
scas
sub
lods
aaa
xor
enter
pusha
psrlq
in
mov
jns
inc
imul
daa
jae
mov
or
push
inc
lcall
pop
push
jne
mov
sti
mov
ret
cmp
jnp
inc
ds
xchg
ja
jmp
loope
sti
stc
lret
in
mov
jbe
iret
mov
push
xor
mov
xchg
sar
mov
or
adc
sbb
adc
or
cmp
xchg
jp
iret
cmp
fwait
pop
sub
cmp
fistps
sahf
das
lods
loop
loope
pop
out
inc
cld
and
mov
pop
pop
push
mov
cltd
sarl
push
nop
scas
outsb
or
mov
aad
mov
les
std
push
shrb
xchg
inc
sbb
mov
pop
sbb
mov
dec
xchg
int3
ja
sbb
inc
push
and
lret
sub
jmp
or
jbe
cmpl
hlt
testl
inc
xchg
shrb
push
jecxz
lahf
ret
add
push
dec
adc
inc
xor
into
or
jnp
xchg
cmp
jno
ss
xchg
and
into
cmp
jbe
sbb
sub
cmp
add
jno
cmp
pop
inc
or
insl
in
aad
cmc
ja
or
xchg
mov
repz
int3
add
sar
jmp
sub
cli
mov
sbb
xchg
pop
cltd
dec
cmp
jmp
fadds
push
mov
mov
add
ja
call
jns
lret
movsl
sbb
loope
fists
loop
xchg
sbb
xchg
and
fiadds
mov
js
ja
ja
cld
test
cmp
cmp
adc
clc
cmpsl
fsubrl
xchg
mov
iret
out
xchg
mov
pop
out
adc
movsl
add
xor
xchg
nop
leave
icebp
mov
ret
or
add
test
outsl
xchg
clc
sbb
pop
push
out
and
ljmpw
cmc
and
mov
dec
cmpsl
add
cmp
inc
jb
sahf
pop
xlat
inc
pop
jmp
mov
je
sub
mov
scas
and
movsb
mov
ror
js
jne
add
or
mov
loop
or
mov
fstpl
dec
cs
push
mov
push
clc
ret
or
sub
or
test
sub
out
jb
ljmp
and
repz
test
and
or
cmpsl
add
mov
mov
mov
mov
dec
mov
dec
push
xchg
pop
lahf
jmp
mov
pop
gs
mov
in
jae
push
inc
lcall
sbbb
xchg
and
gs
mov
and
pop
sbb
ds
adcl
push
sbb
mov
fmul
mov
mov
imul
add
ror
int
fyl2xp1
jne
aam
insl
sbb
ds
pusha
jp
inc
je
inc
cltd
lods
inc
rcrb
insl
insl
pop
add
mov
cmpsb
stc
cmp
xchg
jle
dec
lods
sbb
insb
lret
mov
pop
push
dec
push
dec
jb
jae
movsl
into
cltd
cmp
push
aaa
test
fs
mov
test
mov
mov
mov
cli
call
enter
int3
insb
push
sub
mov
jg
and
leave
inc
pop
mov
rolb
cli
into
xchg
jg
movsb
rclw
dec
cmp
sbb
dec
scas
fistpl
mov
cmp
mov
or
xlat
pop
and
adc
out
icebp
dec
lea
sbb
clc
jnp
jbe
pop
sub
push
in
pusha
cli
dec
lret
lcall
xlat
icebp
fwait
mov
mov
rcrl
cmc
pop
adc
std
f2xm1
test
movsl
int
test
inc
enter
inc
bound
sub
adc
lods
ss
test
dec
xchg
jns
xor
ficompl
popa
popa
arpl
add
ret
jp
gs
xor
lahf
adc
add
out
popa
push
mov
movsl
sti
pop
cli
xchg
gs
adc
push
scas
sub
mov
inc
aam
lds
add
inc
sti
int3
jp
loop
sbb
ss
pop
push
push
out
ret
insb
xchg
mov
rorb
test
movb
adc
jl
xor
divb
push
test
out
ficomps
cmp
xlat
subb
mov
imul
push
lahf
cmovnp
imull
filds
loopne
xchg
mov
push
add
mov
call
cmp
xor
xor
leave
mov
dec
pushf
mov
and
aad
or
push
inc
adc
stos
inc
and
rcl
sti
sbb
cmpsl
es
aam
xor
pusha
jb
cli
popf
stc
mov
mov
push
dec
daa
lea
push
insb
mov
or
inc
push
sbb
ja
cld
sub
dec
pop
ljmp
mov
movsb
enter
xchg
es
mov
rclb
outsb
cwtl
sub
aam
ret
add
lcall
pop
dec
inc
or
mov
mul
dec
icebp
in
or
loop
negb
sti
sbb
push
or
fsubrp
cmp
pop
xor
out
jno
loope
repnz
lret
notl
or
pop
xchg
mov
clc
inc
xor
xchg
clc
fs
sub
scas
push
jmp
in
sarl
pop
loop
sbb
notl
xchg
pop
test
mov
mov
vandps
aas
mov
iret
cmc
lcall
pop
scas
call
sub
cmp
sqrtps
add
mov
fidivrs
mov
cld
dec
lret
push
or
mov
int
mov
ret
inc
in
in
and
ljmp
popf
wrmsr
sub
sub
cmp
xchg
aaa
jo
int
call
cli
fisubrs
push
xchg
jns
test
add
sbb
jns
pop
divb
dec
sahf
test
jo
mov
push
lret
mov
rorb
lret
and
jo
xor
mov
sbb
cmc
mov
mov
mov
jbe
adc
pop
and
in
pop
push
pop
in
dec
cmp
jp
mov
stc
dec
mov
mov
push
ja
hlt
xor
pop
xchg
fnstsw
ss
pop
lea
mov
mov
pop
lods
ss
push
lret
lock
inc
or
mov
leave
mov
addr16
mov
mov
aas
clc
xor
arpl
dec
in
push
cmp
mov
inc
or
sbb
sub
and
int3
aad
jno
sbbl
mov
out
jge
aas
xor
jnp
mov
mov
xlat
rcl
mov
shrl
movsb
mov
mov
ret
call
mov
ljmp
xchg
aad
or
mov
call
inc
sti
sub
jecxz
in
add
shll
xchg
pcmpgtd
test
jbe
cwtl
das
cltd
sub
and
push
test
loope
lods
adc
in
push
cmp
lret
ljmp
int3
int
and
ja
lcall
scas
xlat
or
cmp
maskmovq
notl
call
out
mov
clc
push
loope
inc
lret
push
addr16
jge
out
cmpsb
imul
mov
jb
aaa
lcall
add
fisubrs
mov
stos
mov
sbb
and
jae
cmp
pop
pop
mov
cmp
xlat
jns
leave
cmp
insb
sbb
xchg
adc
dec
ds
mov
mov
leave
ljmp
frstor
mov
pop
push
mov
decl
orb
imul
cmp
aam
rcl
mov
loop
outsl
fnsave
pusha
mov
loope
sbb
lahf
test
xor
scas
dec
inc
cmp
mov
sbb
fsubrl
adc
jbe
xor
bound
mov
das
adc
fildll
dec
stc
stos
inc
ja
repz
jmp
inc
add
repz
scas
or
push
fimull
mov
lret
adc
ds
mov
xchg
cmpsl
mov
popa
and
inc
ljmp
jo
jecxz
mov
pop
jae
mov
and
incb
loope
mov
jb
dec
outsb
mov
test
cmp
add
ljmp
fs
inc
negb
test
arpl
or
xchg
aas
sbb
jle
shl
movsl
rcrl
push
pushf
or
and
mov
test
dec
aaa
loopne
cwtl
aad
dec
les
sbbb
pushl
notl
addr16
inc
jg
mov
in
ficomps
adc
in
scas
mov
ret
sbb
lds
mov
sarb
mov
xor
lcall
cmp
mov
aas
xor
out
jmp
js
xchg
dec
stc
movsb
addr16
mov
ret
push
je
into
mov
jmp
dec
stc
dec
xorl
inc
xor
jecxz
mov
loop
sbb
jmp
inc
into
les
test
sub
icebp
inc
adc
jb
loopne
andl
cmp
dec
sub
fs
fisubrl
aad
out
and
bound
cmp
call
pop
and
mov
jmp
ja
xchg
iret
push
loop
cmp
repnz
nop
lahf
mov
sbbl
imul
and
shl
clc
or
ret
mov
sub
and
fisubrl
and
cwtl
jae
dec
out
in
popf
adc
bt
cmp
mov
imul
push
cmp
lock
lret
push
pop
sub
adc
jno
lds
xchg
pushf
es
jl
mov
or
add
roll
sti
out
lcall
add
cwtl
mov
jp
icebp
and
jp
inc
ljmp
incb
scas
push
adc
and
loopne
stc
int
in
xchg
jns
jge
xor
and
jl
scas
mov
xchg
stc
testl
cli
es
hlt
bound
ja
pop
aaa
pushf
fsub
xor
xchg
cmp
mov
pop
outsb
out
leave
push
xor
scas
or
pushf
std
xor
jmp
shll
and
mov
mov
out
aaa
sbb
pop
xchg
pop
add
les
xchg
cld
icebp
repnz
sbb
popf
xchg
inc
test
xlat
test
aad
mov
jno
sub
sti
jle
std
movsb
jp
fs
insb
into
cmp
lea
cmpsl
cmp
or
add
inc
add
add
rcrl
xor
mov
ret
insl
and
dec
and
mov
out
push
xor
sub
and
pop
repnz
jg
mov
mov
xchg
cmpsl
and
and
test
test
adc
out
aam
xchg
flds
jecxz
aas
add
sbb
enter
jb
dec
sahf
inc
add
jmp
adc
mov
cmp
push
push
std
cmp
fcompl
adcl
mov
fstpl
pushf
fcomps
sbb
mov
imul
stos
mov
insl
repnz
or
or
into
insl
in
mov
sbbb
popf
fidivrl
ss
arpl
sbb
fildl
sbb
push
loop
loop
jecxz
gs
imull
cmp
cs
mov
in
add
xchg
test
cltd
lret
add
fiadds
and
dec
jnp
sbb
clc
or
sahf
xor
in
push
les
test
aam
jg
sub
pop
fwait
dec
adcb
lret
mov
mov
mov
bound
pop
mov
aad
dec
push
push
ds
dec
dec
scas
mov
push
aam
call
mov
aas
das
pop
cmp
adc
mov
dec
pop
fwait
add
and
inc
test
inc
mov
mov
cld
popa
mov
push
jle
xchg
shrb
roll
push
push
dec
sbb
cmp
in
out
push
aas
pusha
mov
out
mov
pushl
sbb
ret
dec
sub
sub
jmp
xorl
jno
or
orb
fidivs
mov
xor
pop
xchg
push
popf
xchg
mov
mov
mov
jle
cmpsl
mov
stc
or
clc
mov
adc
add
inc
push
ds
xchg
icebp
fadds
sahf
imul
scas
dec
cmp
cli
popa
add
scas
push
aas
inc
stos
xchg
cltd
std
repz
lea
ret
and
out
mov
clc
xchg
sub
pop
cwtl
mov
ss
lcall
shll
test
enter
and
lds
xchg
lcall
in
out
adc
mov
dec
fcomp
and
dec
mov
js
lret
int
testb
sub
mov
rcrb
nop
add
cmp
subb
add
insl
dec
sti
cs
add
in
mov
push
stos
outsl
insb
xchg
add
aam
stc
cmpsb
xchg
cwtl
iret
pop
jnp
hlt
test
stos
gs
add
mov
fidivs
jne
lods
xchg
out
ss
lods
out
aas
out
cli
les
and
sbb
adcl
ret
insl
pushf
int3
xchg
dec
inc
pushf
imul
push
ret
pop
repz
mov
das
xchg
or
cwtl
adc
cmp
test
out
inc
ret
xor
gs
lods
lods
cmp
or
fwait
mov
rolb
and
cmp
jge
pop
lock
mov
sbb
ss
movsl
jo
adc
ret
ja
cmc
je
cld
inc
call
pop
mov
adc
dec
movsw
fnsave
jno
pushf
enter
mov
es
push
add
adc
mov
mov
push
xchg
mov
hlt
add
add
out
aam
mov
mov
cmpsl
sub
jp
ret
repnz
in
stos
sub
mov
ficoml
pushf
cmpsb
pop
sub
leave
stc
stos
cmp
stc
and
xor
imul
push
mov
repnz
gs
push
test
inc
pusha
mov
mov
pop
add
xor
fs
mov
es
mov
repz
movsl
dec
mov
xor
mov
lods
stos
fbstp
inc
mov
mov
and
jmp
ret
push
inc
dec
mov
mov
arpl
and
sbb
jns
popa
add
neg
les
inc
push
mov
inc
shl
xor
out
pop
and
sbb
sbbl
add
cmp
or
in
or
mov
frstor
stc
cmp
rcr
inc
dec
bound
lahf
jno
mov
dec
lret
insb
jo
call
sbb
movsb
jl
mov
add
sub
je
pop
icebp
push
fcomp
cmp
cwtl
mov
inc
scas
rcrb
dec
int3
iret
xchg
jmp
jp
and
mov
int
aad
sub
shlb
mov
mov
jl
xchg
xchg
jmp
mov
iret
gs
pop
es
test
push
ja
jge
push
scas
pop
jnp
mov
lds
repnz
pop
mov
cltd
pop
add
pop
jo
stos
pop
rcll
mov
push
dec
jae
xchg
les
push
lret
idiv
aas
mov
cmp
jb
sbbl
xchg
rcl
mov
and
lret
jecxz
xor
xor
into
aam
jb
aaa
sbb
inc
stc
fcmovbe
sbb
xor
mov
pop
mov
pop
and
or
in
sub
mov
jmp
jne
push
adc
xor
cmp
leave
adc
mov
setae
fwait
sub
repz
pusha
cs
sub
jbe
xchg
mov
outsl
dec
rol
rorl
jns
sub
jle
dec
daa
int3
xchg
push
fsubs
mov
lcall
pop
jle
fdivs
mov
push
cmp
jb
lahf
aam
int
fbstp
mov
or
in
cmp
cmp
imul
jne
inc
sbbl
test
dec
mov
pop
jo
lret
inc
aaa
addr16
std
jb
sahf
daa
sub
rol
pushl
xchg
ss
pop
and
cmp
xchg
pop
outsb
sub
push
fwait
andb
inc
or
rolb
pop
sub
lods
pop
add
pop
and
lods
pop
jmp
pop
ret
sub
push
inc
push
sub
or
pop
adc
outsl
mov
mov
mov
jle
gs
inc
out
outsb
incl
testl
cmp
cmp
fsubl
fcomi
clc
xchg
fdivrl
leave
and
fwait
adc
pusha
mov
mov
rol
stc
push
jbe
add
fmuls
test
dec
orl
xor
clc
adc
mov
push
or
test
jp
cld
jge
fidivrs
jmp
lods
cmpb
ds
mov
inc
jb
fistpll
cmp
mov
pushf
pop
mov
cltd
out
adc
lret
or
dec
xchg
ds
pop
sub
adc
cmp
movsl
sub
mov
lahf
sub
mov
mov
dec
jns
or
jle
pop
adcl
jbe
xchg
add
mov
enter
sub
xchg
mov
mov
cmp
scas
and
fnstenv
cwtl
cli
sahf
push
data16
inc
sub
test
icebp
hlt
and
out
xor
pop
fisttpl
jbe
cmp
scas
xchg
ds
outsl
adc
push
cmpsb
or
fcomip
outsl
inc
into
xchg
or
mov
pop
stc
in
push
mov
or
inc
sbb
mov
mov
jno
movsb
xor
call
nop
std
or
mov
and
inc
sub
and
pop
push
arpl
addr16
add
adc
out
cld
imul
xor
xchg
xor
and
push
add
int3
cmp
jne
xchg
adc
sbb
loopne
sub
push
pop
lret
inc
adc
scas
int3
imul
inc
mov
lock
jg
push
xor
pop
xor
lea
clc
xchg
aas
inc
leave
out
xchg
insl
sbb
pushf
lds
out
add
popf
into
pop
mov
fsub
jmp
das
add
jmp
mov
je
aad
mov
adcb
cmc
xchg
dec
out
pop
outsl
sub
mov
jno
cmp
dec
xlat
sbb
push
pop
test
inc
cltd
jmp
push
cwtl
out
xor
pop
mov
cwtl
out
and
dec
jns
or
idivl
arpl
pop
and
or
jns
lock
stos
xor
dec
ret
push
sub
icebp
cmc
insl
mov
enter
jb
sub
call
cwtl
insb
pop
dec
inc
cli
hlt
movsb
or
loope
lods
push
dec
cmp
leave
adc
sbb
negb
mov
into
into
xchg
test
mov
push
scas
icebp
xchg
pop
test
xor
lock
es
test
xchg
mov
sbb
fwait
and
test
and
shlb
inc
testl
lahf
push
sub
aam
jbe
dec
shlb
pop
mov
adc
dec
inc
test
xchg
cmp
adc
push
xchg
sub
mov
dec
mov
lods
sahf
xchg
or
pushf
outsb
inc
add
jge
into
mov
xor
xchg
push
pop
dec
mov
lock
arpl
outsb
mov
push
ret
jbe
hlt
sub
leave
daa
fmuls
adc
int3
sahf
fistpll
arpl
ret
adc
xchg
mov
jecxz
cltd
lcall
mov
push
lock
out
sti
bound
fstl
mov
lahf
xchg
push
test
stos
pop
in
in
or
inc
inc
jns
mov
repz
xor
sub
lret
lcall
mov
in
imul
mov
je
jae
je
aad
or
mov
or
bound
std
xor
clc
push
shlb
add
sbb
sar
jmp
fildll
xor
jae
or
jnp
icebp
jb
and
cmp
jp
icebp
pop
pop
jo
les
hlt
mov
mov
repz
push
gs
sarb
test
mov
mov
iret
cs
dec
jle
cmp
mov
fdivs
lret
xor
popa
ljmp
mov
jge
adc
and
stc
ss
mov
dec
sbb
shlb
xchg
lds
sbbl
dec
test
fucompp
mov
sub
pop
nop
cmp
jp
push
fsubrl
or
rcll
jbe
mov
jo
sbb
push
or
aam
lds
xorb
filds
cmp
mov
or
movsb
in
fcoms
and
mov
ds
popa
pop
jo
jb
ret
dec
inc
lods
call
stos
add
movsl
xchg
and
lods
and
imul
and
fwait
pop
sti
pushf
or
pop
test
das
pop
addr16
repz
fistl
dec
push
les
aas
pop
sar
addb
and
xorl
pop
fnstenv
cmp
cltd
inc
xor
cld
dec
cmp
repnz
mov
insl
sub
pop
jo
jle
xor
js
mov
inc
incl
xor
add
mov
push
lcall
pop
sbb
filds
jp
xlat
and
sti
push
shlb
sahf
mov
dec
cmc
les
add
and
lret
mov
sbb
mov
mov
movsb
mov
xchg
stc
push
pop
mov
adc
xor
dec
sarl
sub
push
mov
fcomps
adc
pop
inc
xor
roll
mov
stos
mov
arpl
dec
faddl
es
pop
repz
jne
push
cmc
ss
into
daa
dec
jbe
stc
sbb
loope
xor
inc
cmpsl
lods
mov
xchg
test
pop
cmpsb
sbb
jb
lret
xor
cmp
push
negl
mov
inc
lods
fisubrl
pop
add
inc
ljmp
mov
jnp
inc
or
push
mov
push
pop
fildll
addr16
dec
sub
xor
xor
and
insl
scas
push
pop
push
add
push
mov
or
ss
xchg
push
push
xor
fcompl
cmp
mov
adc
mov
mov
cmp
ret
int3
out
push
clc
pop
xlat
mov
push
pop
and
pop
xchg
sub
mov
std
dec
in
les
rcr
mov
add
mov
jne
addr16
jg
jbe
adc
mov
ret
dec
mov
mov
dec
cmp
lds
mov
lock
sahf
lahf
adc
neg
or
testb
imull
add
rclb
in
mov
es
xor
lock
xchg
lds
cmpsb
out
jno
aas
movsl
out
mov
mov
mov
imul
jmp
or
xor
in
mov
icebp
mov
cmp
jno
int3
xchg
std
cmp
and
sbb
xchg
into
lods
in
stc
or
sub
jnp
jge
in
dec
rolb
test
mov
sub
sub
and
jmp
ds
mov
out
or
mov
iret
adc
push
lahf
mov
and
push
cld
lods
inc
push
test
sbb
shlb
sbb
stos
scas
in
mov
repnz
sub
dec
or
ja
sbb
mov
repnz
test
sub
lahf
daa
xor
imul
pop
push
clc
or
out
sub
leave
das
sbb
mov
sbb
mov
inc
cmpsb
out
jle
repnz
sbb
xor
mov
loopne
or
scas
jge
loopne
fdivp
pop
dec
ret
dec
push
cli
xchg
pop
fidivrl
lret
jno
pop
aam
mov
das
mov
repnz
and
dec
in
or
sti
lock
lcall
test
sub
outsl
inc
cmp
test
xor
cmp
out
mov
fildll
push
jecxz
and
dec
add
push
sbb
clc
dec
lods
jle
insl
adc
xchg
jne
flds
mov
jbe
mov
push
add
mov
cmc
cmp
out
cmp
int3
repnz
sbb
orb
inc
cli
jge
jle
mov
sub
inc
enter
out
add
push
pop
cmp
sub
jl
sub
xchg
xchg
ret
cltd
mov
xor
adc
cli
sub
aad
inc
jle
clc
sbb
sub
repz
adc
push
xchg
or
pop
lahf
sbb
inc
in
cs
les
inc
add
sbb
pop
jmp
in
jge
loop
daa
mov
aam
jbe
lods
lcall
push
loopne
xor
scas
mov
fbld
shr
xchg
in
push
aaa
stos
inc
notb
jno
pop
jl
cltd
and
idivl
adc
mov
pop
push
mov
dec
push
add
mov
sbb
mov
adc
fisubrl
cmp
out
mov
jmp
pop
mov
ret
int3
xor
xor
inc
inc
inc
push
cwtl
pop
mov
push
pop
lods
sub
cltd
cmpsl
dec
iret
lods
and
sarl
loope
cmp
xlat
add
sub
pop
or
add
and
jbe
xor
ljmp
jl
stc
sub
xchg
sub
aad
popf
idiv
pop
sahf
ja
dec
xor
inc
mov
pop
xchg
dec
jle
sub
imull
add
sub
ljmp
lret
lcall
data16
arpl
mov
arpl
jl
out
jbe
mov
hlt
xchg
sub
or
stc
or
test
loop
dec
jmp
jno
jl,pt
out
vpsubq
in
popf
and
sbb
jge
jp
pop
xor
int
fwait
jl
mov
repnz
insl
jno
imul
jmp
es
fs
cld
les
mov
inc
or
stc
inc
fcomi
sub
pop
sub
insl
add
fdivrs
ficomps
data16
push
add
push
inc
aaa
push
inc
mov
fbld
cmpb
pop
xlat
pushf
cs
je
movsl
cmp
cs
xchg
sarl
sbb
jl
lret
mov
mov
sbbl
add
push
and
sbb
cmc
xor
into
mov
push
sub
pop
cwtl
leave
cmp
test
and
mov
xor
xchg
cmpsl
pop
insb
test
jno
cmpsl
scas
push
inc
icebp
shl
sub
pop
jmp
jmp
loop
cs
ds
xor
cmp
push
sbb
test
test
in
adc
pushf
sti
loope
adc
mov
jmp
push
icebp
lds
push
lcall
int3
adc
nop
push
in
add
popa
movsl
pop
xor
sbb
mov
jp
pop
push
aad
mov
jae
rol
andps
insl
mov
inc
and
cwtl
lock
push
pop
mov
push
sbb
aas
jmp
nop
test
pop
aam
shlb
mov
fisttpl
mov
sub
push
stos
inc
sub
stos
push
mov
lea
xor
pop
xchg
mov
push
inc
adc
pop
mov
aad
mov
cmpl
insb
lret
add
mull
in
loope
jecxz
add
dec
cs
pop
mov
cwtl
adc
fldl
popa
xorl
nop
inc
add
push
xor
test
mov
cmpb
addb
mov
pop
aad
loop
mov
xchg
aaa
add
rcrl
and
push
jecxz
int
scas
ret
mov
push
addr16
mov
cmpl
push
xchg
add
jecxz
mov
adc
jge
mov
mov
rol
pop
inc
daa
fstpt
adc
dec
push
jl
fwait
dec
jp
lods
stc
adc
call
or
cmp
mov
imul
push
xchg
in
sti
insb
xor
out
movsl
inc
jb
out
sub
sub
rcrl
jns
jmp
sbb
or
cmpsb
ss
js
xor
and
push
test
dec
stc
sub
clc
and
das
cmc
pop
popa
shll
sti
test
pop
fs
out
inc
adc
sbb
test
pusha
xor
push
in
xchg
xchg
fcompl
lcall
xchg
add
mov
rcr
adc
dec
imul
ja
bound
shrl
pusha
push
fisubrs
popa
adc
inc
imul
ret
orl
jno
out
add
add
lods
test
orb
nop
sti
cmp
scas
outsl
in
rcrb
mov
dec
insl
fwait
adc
mov
or
mov
outsb
in
mov
repnz
lahf
fs
sbb
mov
xchg
mov
pop
push
mov
sbb
xor
clc
push
add
cmpsl
pandn
add
imul
fsubrs
push
lret
lahf
addl
or
jnp
leave
test
pop
xor
mov
clc
lods
add
idivl
je
ljmp
mov
lcall
mov
lcall
ds
out
mov
loope
lods
mov
dec
xchg
add
cmc
cmp
movb
pushf
add
nop
inc
jne
dec
mov
je
xor
pop
in
lea
or
fnsave
sub
push
mov
pushl
in
loop
mov
pop
loopne
sub
dec
pop
ja
xchg
fs
lret
roll
mov
popa
insb
jne
adc
insb
jnp
loopne
je
adc
inc
inc
lcall
sbb
arpl
mov
lcall
pop
dec
aam
jns
adc
pop
mov
xlat
or
pop
imul
pop
ja
jo
int3
cmc
xor
fdivp
xchg
fldl
ss
jbe
dec
int3
cli
or
ss
add
mov
ja
push
fsubp
pop
jne
sub
pop
add
and
lods
dec
cmpsl
mov
aaa
push
mov
mov
xchg
xchg
shll
and
aad
test
adc
lds
and
dec
out
mov
and
add
xchg
sbb
shrb
outsb
icebp
sub
scas
push
add
mull
aad
pop
mov
int
and
sub
data16
mov
xchg
sub
inc
into
scas
ret
fstpt
push
shll
cli
mov
inc
rolb
cwtl
icebp
or
cmp
psllq
adc
cmc
pusha
shrl
sub
push
lret
cli
mov
enter
mov
outsb
mov
test
call
cmp
icebp
adc
inc
add
mov
fmuls
add
sbb
lods
cli
jp
push
mov
loopne
idivb
out
sub
and
sub
mov
mov
jmp
push
xor
pop
xor
pop
stc
orl
aad
dec
mov
lods
dec
sarl
mov
mov
inc
cmc
sbb
cmpsl
bound
inc
mov
inc
ds
cwtl
outsl
jle
lods
call
xor
pusha
out
sahf
mov
enter
cltd
pop
jbe
hlt
cmp
and
dec
iret
pop
sbb
movsb
add
pop
mov
cs
fmull
mov
out
fwait
jmp
lods
test
mov
lods
xbegin
mov
test
int3
push
jle
cmp
movaps
scas
insb
mov
jg
dec
inc
push
cmpb
test
mov
mov
add
mov
cwtl
sub
js
inc
sbb
cmp
or
dec
cltd
inc
in
leave
cmp
inc
imul
pop
into
movsl
push
je
or
pop
mov
fmul
jnp
inc
push
xor
mov
pop
movl
sbbl
aaa
or
pop
mov
mov
sub
test
fldl
out
dec
push
mov
xchg
xchg
and
fcomp
cmc
ficomps
or
xor
xchg
fwait
inc
pop
in
out
mov
dec
pop
sbb
rcrb
push
lahf
aad
mov
mov
pushf
icebp
xor
into
out
pop
pop
xor
ljmp
fxch
data16
ja
adc
lds
subl
dec
xor
hlt
ret
mov
aaa
lret
sub
xor
popa
imul
xchg
enter
jl
jnp
push
push
loop
shlb
ja
add
pop
fs
outsl
lea
les
mov
aad
stc
inc
cli
inc
push
pop
roll
outsl
shlb
shlb
xchg
adc
xor
mov
mov
cmp
jbe
test
fmuls
aad
scas
cmp
mov
loop
mov
in
sbb
int
pop
push
rolb
push
cli
cmc
dec
adc
dec
xchg
ss
lds
mov
dec
push
pop
out
clc
mov
push
push
xchg
loop
jno
sarl
xor
push
mov
loope
sahf
push
cmp
fists
dec
outsb
flds
sbb
or
mov
mov
aaa
aad
mov
stos
lods
aas
xchg
and
inc
mov
jmp
add
dec
push
cmpsl
test
int3
xor
pop
sub
jge
inc
scas
xchg
nop
in
imul
adc
leave
cmc
inc
push
mov
sti
movsb
sarl
mov
movsb
sarl
mov
push
sarb
jo
mov
push
cli
jb
mov
xchg
push
orb
mov
data16
add
aas
fstl
adc
dec
jg
mov
into
jne
in
push
shlb
push
and
push
adc
mov
aam
out
mov
ja
sbb
xor
loop,pn
bound
xchg
mov
mov
lahf
inc
popf
push
rorb
lret
push
sbbl
jecxz
enter
cmp
jno
jmp
xlat
movsl
leave
outsb
sub
or
daa
mov
xor
das
add
scas
adc
and
cld
cmp
adc
sub
mov
mov
jae
jecxz
or
inc
push
xchg
inc
call
xor
adc
pop
mov
jl
test
jno
stos
push
mov
shl
lret
or
das
cltd
mov
scas
mov
sbb
sahf
bound
cld
inc
loopne
ficoml
and
iret
mov
sub
mov
add
or
notl
popa
divb
cmc
sti
cmp
sbb
test
sarb
es
push
pop
jbe
or
jae
jae
lret
outsb
mov
mov
push
in
out
cmpsb
movsl
cmp
sub
pop
xchg
mov
fsubrs
sub
xor
cmp
in
adc
leave
popw
lea
lock
orl
push
mov
dec
sbb
mov
leave
or
ljmp
iret
jp
outsl
mov
bound
cmpsb
xchg
cmpl
pop
and
mov
sub
cmpsb
rorb
inc
loopne
dec
in
test
sub
pop
stos
pop
mov
outsl
dec
jo
xchg
xchg
mov
mov
jae
pop
repz
dec
flds
jge
stos
inc
pop
lahf
lret
xchg
cli
and
pop
mov
xor
xor
in
scas
pop
mov
xchg
pop
insb
dec
mov
inc
insl
jb
jmp
out
xchg
pop
cmp
and
push
pop
pop
cmpb
dec
push
ret
xor
xchg
mov
xchg
shl
sub
pusha
jb
lods
dec
out
pop
orl
mov
cmc
out
scas
push
ljmp
scas
sub
mov
push
or
mov
hlt
mov
arpl
push
add
inc
mov
pushf
jecxz
mov
loop
popf
test
cmp
jg
addr16
jnp
mov
out
mov
loopne
cld
xchg
fidivrs
adc
es
push
fstps
shlb
xchg
outsl
cmp
mov
xchg
push
fisubs
xlat
dec
mov
add
lods
dec
les
ret
jno
mov
push
sub
movsl
adc
xor
pushf
loope
cmp
int
shrb
jae
cs
cmpsl
aas
aaa
jne
shl
mov
dec
jnp
leave
lahf
mov
pop
daa
xchg
mov
and
or
mov
mov
mov
iret
cmp
jmp
mov
mov
or
in
pusha
in
into
xchg
xor
rorb
aam
mov
outsb
xlat
or
fsubr
loopne
mul
jbe
xor
cmp
sbb
push
or
pop
out
imul
cmpsl
test
sahf
ja
fidivrs
es
cmp
push
and
cld
sbbb
xlat
shrb
and
in
mov
mov
pusha
test
ss
cmpl
js
popf
loopne
inc
jo
push
ja
ja
push
aad
adc
or
subb
shlb
push
xor
cmpsb
ljmp
testw
shll
lcall
into
dec
sub
vcvtdq2ps
out
test
xchg
pop
adc
dec
pop
xchg
sub
wrmsr
testl
push
fwait
insb
xor
jp
daa
mov
push
movsb
xor
sti
or
cmpl
mov
jnp
hlt
ljmp
add
fdivs
cmp
mov
adc
lds
jnp
push
mov
cmp
ret
cmc
add
mov
xor
dec
jmp
rol
sti
aam
popa
std
lods
jbe
pop
xchg
cmc
je
xor
push
push
sub
cli
xchg
or
lock
xadd
lds
pop
call
add
mov
mov
mov
push
sbb
inc
pop
and
xor
scas
push
mov
rcrl
or
out
mov
pop
jecxz
xor
or
xchg
faddl
fdivl
bound
daa
mov
adc
and
pushf
insb
fisubrl
lea
int
adc
push
pop
shlb
mov
cmpsl
xor
jp
pop
push
xor
add
rorl
or
jae
sti
dec
test
test
inc
and
and
cltd
popa
das
cmp
aas
jno
dec
mov
cmp
push
pop
test
push
add
xchg
or
aaa
gs
cmpsl
clc
repz
vandnpd
jo
popa
lds
mov
imul
pushf
cli
mov
dec
jmp
movsb
stos
add
mov
mov
push
cmp
hlt
or
mov
push
in
inc
push
jb
pop
popa
and
jp
pop
or
imul
mov
inc
cwtl
movsl
push
cltd
xlat
int
dec
out
adc
or
flds
sbb
scas
ret
cli
mov
cmpsl
ret
or
sbb
jp
add
pushf
mov
jno
jo
fidivs
stos
movsb
xor
push
mov
stos
je
stc
pop
flds
dec
fbstp
ror
mov
xchg
mov
adc
lret
sar
push
imul
sbb
je
pop
push
loope
mov
adc
int3
mov
or
adc
aaa
sahf
test
dec
lret
pop
adc
or
mov
xor
jno
jmp
test
mov
int3
dec
outsl
inc
in
or
mov
mov
mov
lock
sub
cmp
repz
inc
xlat
jnp
sub
inc
mov
mov
into
dec
push
daa
mov
dec
shlb
mov
adc
stos
add
cmp
push
iret
jl
out
stc
fnstcw
cmovs
push
je
sbb
dec
and
fidivrl
testl
or
xor
mov
scas
loope
xor
mov
dec
add
mov
testb
push
xchg
ja
jl
rcrb
in
mov
mov
outsb
lret
xor
lcall
outsl
cmpb
insb
dec
out
stos
repnz
sar
mov
stos
sbb
pop
aaa
or
push
and
or
push
jne
pop
adc
sbb
arpl
pusha
pop
js
push
and
inc
adc
cmc
bswap
call
orb
out
mov
mov
lahf
mov
xchg
mov
inc
rcrb
jno
pop
ficomps
test
testb
mov
shrl
push
stos
js
inc
stos
sbb
mov
cli
cmp
ret
inc
mov
arpl
sub
mov
jb
xor
jg
mov
insb
xor
mov
inc
dec
and
bound
in
cltd
fucomp
dec
jo
push
dec
lds
mov
outsl
dec
popa
les
sub
ds
push
add
sar
inc
and
sbb
cltd
jge
inc
and
sub
sub
dec
inc
sarl
jmp
or
shl
repz
rcrb
mov
repz
push
dec
dec
fidivs
jne
adc
mov
stc
xchg
stc
sub
xchg
push
jbe
adc
push
ss
movsl
pop
sub
bound
out
push
mov
cld
or
mov
mov
sub
mov
pop
out
mov
xor
bound
cmp
and
stos
mov
push
jmp
or
jge
push
out
stos
pop
aad
pop
sbb
dec
mov
int
lds
sub
in
push
int
ss
aam
adc
add
mov
imul
inc
inc
jge
jno
jnp
popa
sub
sub
mov
jmp
xchg
lods
adc
insb
mov
outsb
cs
mov
xor
das
mov
lods
dec
jmp
cmp
dec
jne
xchg
jg
mov
fdivs
je
mov
push
in
fs
out
mov
movsb
repz
fwait
inc
addr16
xchg
out
inc
movsb
daa
popa
fs
dec
loopne
imul
aam
xchg
gs
test
and
cmc
mov
outsb
cmp
xor
add
in
clc
pushf
add
xchg
dec
push
jle
adc
xor
lods
inc
pop
lea
pushf
add
mov
into
out
xchg
hlt
test
xlat
adc
and
mov
imul
out
cmp
adc
or
sbb
push
js
push
add
cmp
movsb
and
sub
hlt
mov
jecxz
push
lret
stc
test
sbb
jo
mov
loope
incb
mov
jp
pop
rcll
xchg
jge
mov
or
clc
push
push
sub
xchg
jl
in
test
mov
jnp
movsb
cmc
add
adc
dec
arpl
out
and
push
out
xor
popa
test
hlt
xor
jno
addr16
popf
scas
popa
adc
cld
shrb
and
popf
adc
jne
inc
xchg
fwait
jl
cmp
or
cmp
mov
mov
and
mov
adc
lods
add
ja
ljmp
icebp
lcall
adc
callw
addr16
out
fwait
clc
and
jae
mov
inc
mov
and
je
std
mov
mov
loopne
sahf
lds
movsb
aaa
repz
lahf
lahf
pushf
scas
out
cwtl
jecxz
pop
daa
clc
out
pop
xchg
push
adc
pop
popa
xrelease
aam
ds
ja
xchg
sahf
jg
sbb
inc
or
cmpsb
in
jge
es
rcrl
add
pop
sub
jb
or
int
ret
pusha
arpl
incb
push
pop
inc
int
insb
pop
ja
push
es
and
fiaddl
and
push
shrl
adc
jp
cmp
mov
ror
and
insb
ret
mov
pop
out
dec
add
adc
xorl
cli
enter
loopne
movsl
je
or
cmc
cld
outsb
mov
clc
loop
sarl
inc
fsubrs
adc
add
cmp
repz
std
cmpb
mov
jge
ret
add
movsl
dec
cmp
jnp
test
cmpsl
out
movsb
jmp
push
jp
or
push
scas
jnp
jbe
in
insb
sahf
into
push
arpl
xchg
jb
ror
in
fs
pushf
sbb
jecxz
lds
in
imul
mov
cmpsb
addb
pop
push
outsl
mov
cmp
lea
xor
sub
mov
push
adc
cmpsb
test
outsl
int3
ret
or
in
inc
pop
jbe
adc
push
xor
xchg
sar
fdivp
sub
aad
out
sahf
dec
insb
insl
adc
or
testb
mov
and
sub
add
lea
lret
mov
dec
or
mov
inc
jns
frstor
push
sbb
or
repnz
add
xor
orb
repnz
cmp
sbb
inc
sbb
daa
out
mov
pop
push
or
add
es
mov
addr16
pop
and
icebp
mov
out
mov
inc
adc
cmp
and
xchg
es
dec
lcall
dec
arpl
adcb
pop
or
fiadds
jmp
cmp
dec
xor
popf
xchg
nop
adc
pcmpgtd
dec
outsb
daa
stos
jb
cmp
call
loopne
pop
mov
sbb
sbb
inc
rcr
sub
shrl
push
lds
mov
ljmp
ret
pop
outsb
adc
mov
mov
inc
repz
sarl
leave
cli
andb
out
lret
neg
dec
jmp
in
jns
or
movsb
mov
sbbb
cmp
mov
xor
popa
ja
repz
adc
mov
pop
fisttpll
adc
pop
das
mov
repnz
adc
fs
lahf
mov
push
mov
xor
iret
dec
insb
inc
mov
sbb
cmp
stos
movsl
aam
insl
lods
icebp
add
popf
xchg
js
sbb
scas
or
bound
mov
or
loope
jo
xchg
sbb
not
fwait
push
push
fwait
cmc
add
push
in
push
mov
mov
test
mov
daa
sbb
push
dec
pusha
jbe
les
inc
inc
pop
int
inc
out
push
jae
lods
pop
daa
test
negb
sub
test
insl
sbb
push
nop
out
or
sahf
adc
or
loopne
imul
xchg
and
add
div
cmp
push
add
xchg
lret
shrb
pop
imul
movsl
xchg
loop
std
pop
xchg
fcom
pop
lds
outsb
cmpsb
inc
in
push
xchg
push
lods
shll
cmp
lods
daa
enter
insb
mov
mov
movsl
aad
pushf
ret
lcall
mov
cmpsl
mov
jle
leave
loope
pushl
loope
sbb
loopne
mov
popf
cli
jge
or
and
sbb
insb
adcl
je
popa
fadds
mov
pop
ret
sbb
sub
lds
mov
jnp
jg
lods
inc
xchg
xchg
lds
adc
adc
dec
adc
js
add
scas
mov
push
adc
in
test
lods
push
jp
cmpsl
enter
jecxz
cmp
bound
push
das
mov
lods
fisttpl
push
imul
ret
test
sbb
sarb
out
dec
scas
dec
outsl
sahf
inc
inc
rolb
stos
xchg
cmpsb
ficoms
pop
adcb
js
pop
xchg
fisttpll
cmpsl
in
mov
or
je
test
mov
mov
add
push
mov
or
mov
dec
xchg
flds
fdivrs
inc
add
pop
or
das
stc
ret
std
hlt
fs
addb
repz
mov
negb
and
adc
inc
dec
mov
xor
and
push
jno
pop
jg
sub
add
or
mov
jge
fsubr
mov
jge
xor
and
push
pop
aas
aam
inc
into
fistl
push
xor
adc
mov
ret
jo
sar
call
cltd
cs
adc
or
jl
adc
nop
loope
inc
mov
leave
pop
ss
sbbb
ljmp
and
sbb
push
outsl
jo
add
sbb
xor
aad
cli
out
ficomps
loop
int
push
mov
lods
enter
push
js
stos
dec
mulb
mov
adc
mov
pop
dec
fldcw
or
das
xchg
mov
int3
aaa
arpl
stc
mov
aad
push
test
push
xchg
fldenv
outsb
mov
mov
hlt
push
ljmp
mov
fwait
sbb
jle
mov
add
xor
mov
arpl
gs
pop
inc
jl
mov
dec
insl
clc
movsl
sub
jecxz
jns
pop
jle
enter
inc
ljmp
mov
or
jle
dec
cld
sub
mov
loopne
rorb
lret
add
sbb
gs
xor
xorb
sub
add
mov
push
mov
push
sub
stos
test
out
sub
pop
idivb
pop
fcoml
inc
sub
push
push
dec
lret
inc
dec
xchg
das
in
fistpl
jmp
mov
xchg
adc
jbe
xchg
jb
movsb
xor
xchg
imul
dec
dec
cmp
stc
ffreep
mov
sbb
sti
mov
sub
in
jo
cmp
int3
and
lea
cmp
aaa
test
jne
inc
orl
rcr
mov
or
lcall
mov
mov
nop
cmp
xor
outsl
and
sbb
mov
jmp
nop
pop
jecxz
into
call
aas
stos
aam
xchg
and
xchg
xchg
mov
inc
bound
xchg
dec
inc
lods
mov
movsb
cmp
pop
mov
fdivrl
push
pop
xchg
and
fidivs
mov
test
in
scas
adc
lock
int
fists
jnp
push
mov
gs
nop
stos
lea
scas
cwtl
cmc
iret
push
out
xor
sbb
insb
scas
adc
xchg
dec
ret
pop
test
addr16
stos
cmp
popf
call
fdivr
enter
shlb
ljmp
mov
outsb
inc
push
cmp
xchg
sub
ds
lods
and
mov
loopne
aas
lods
mov
insl
adc
mov
ficoml
mov
and
aad
sbb
cmp
jle
and
mov
sub
push
andl
add
xchg
enter
pop
push
ret
call
sbbb
insl
int3
push
cs
scas
and
push
out
sbb
xchg
mov
out
mov
in
int3
sub
test
or
iret
sahf
mov
mov
dec
lea
mov
sbb
xchg
xchg
jg
jle
mov
cmc
das
pop
and
dec
or
or
cmp
bswap
push
mov
xor
xor
or
sbb
jne
test
in
inc
cmpsb
jp
pop
lahf
jae
add
sti
fldcw
mov
dec
and
mov
pushf
jp
jo
sbb
lods
in
mov
adcb
dec
lea
jg
mov
pop
inc
scas
sahf
add
insb
or
rolb
pop
daa
adc
mov
test
inc
enter
jae,pn
jnp
ss
popa
jb
and
ret
sbb
sti
fimuls
scas
mov
fistpl
in
and
push
das
lret
lock
inc
xor
and
pop
mov
mov
daa
jo
int
aam
push
add
test
dec
inc
das
in
mov
xchg
mov
push
adcl
fldcw
sahf
aam
rcrb
push
xchg
mov
aaa
out
xchg
insb
arpl
pop
adc
sahf
test
add
sbb
les
lods
dec
popa
xchg
pusha
sbb
adc
mov
ret
aad
fisubs
insb
push
mov
xchg
push
ljmp
mov
enter
mov
loop
sbb
jns
jbe
daa
sbb
divl
leave
imul
test
sbb
sahf
in
loopne
jae
mov
lock
aaa
mov
mov
xchg
push
ss
inc
icebp
aaa
sarb
or
mov
adc
bound
lcall
xacquire
mov
fcmovbe
or
push
push
inc
xor
push
jge
push
dec
dec
outsb
lcall
ret
adc
xor
pop
sub
aam
dec
pusha
repnz
push
lea
pop
int3
jle
mov
movsb
movsb
andl
sub
push
data16
int3
stc
or
je
test
cmpb
inc
lahf
nop
dec
inc
push
jns
cmp
sub
pushf
or
iret
bound
adc
mov
or
sub
into
call
jb
jns
in
mov
inc
out
pusha
sbb
xor
mov
cmp
mov
lods
push
push
scas
xchg
xchg
popf
jp
adc
and
out
aad
push
clc
ds
fwait
mov
fcomps
jb
adc
dec
inc
negl
int
ficoml
mov
lahf
out
sub
bound
add
sbb
and
jae
dec
mov
orb
and
rol
imul
cmp
fbld
outsb
mov
int3
shr
nop
shrb
loope
mov
sbb
mov
fisubs
pop
push
push
cmp
test
adc
lods
lods
pop
lret
lock
push
subl
adc
fidivl
mov
mov
dec
in
fstps
imul
xor
and
sahf
dec
mov
or
call
jne
mov
or
and
aam
adc
out
xor
push
cld
leave
mov
mov
aad
leave
mov
mov
sub
cwtl
call
out
sbb
scas
jl
stos
add
cmc
ja
jmp
xchg
inc
jmp
add
mov
cmp
loopne
xchg
in
fcoml
xchg
xor
xchg
mov
cmpsb
lcall
jnp
aas
push
test
xor
sahf
mov
ret
xchg
and
ss
mov
daa
stos
adc
inc
pop
popa
xchg
insl
push
push
movsb
fsubs
enter
jp
cltd
mov
data16
pop
push
push
xor
push
dec
movl
das
adc
mov
jne
imul
rorl
arpl
les
mov
lds
imul
add
xlat
cmc
push
dec
lea
popf
test
xchg
adc
pushw
mov
adc
movsb
cs
idivl
ret
cmp
hlt
add
aas
incb
scas
dec
jns
bound
add
ljmp
outsl
xchg
shll
and
mov
out
in
les
push
daa
or
push
cmc
xor
mov
ficompl
xchg
ret
outsb
jle
inc
fsubs
pop
or
adc
aad
subl
repnz
gs
adc
xorl
in
clc
sbb
scas
jo
es
std
push
push
jmp
popa
adc
aas
ds
pop
repz
pop
in
lds
xchg
lods
push
push
sbb
mov
or
add
dec
mov
cmp
lods
ja
aad
xor
inc
das
fadd
push
and
mov
xor
mov
xlat
jno
mov
ja
es
mov
mulb
xchg
pop
xchg
ljmp
xor
clc
ret
cmp
enter
jno
push
lods
jb
pshufw
shrl
pop
inc
shrb
pop
xchg
push
adc
cmp
xchg
dec
adc
cmp
jno
mov
arpl
es
xor
andl
ja
inc
hlt
xchg
mov
orb
sahf
or
xor
adc
jo
jg
mov
or
out
lret
jb
sub
mov
jecxz
cmc
fwait
lds
mov
sbb
loop
push
sbb
loop
insl
inc
mov
inc
sub
mov
xchg
mov
es
adc
mov
push
xor
sub
mov
mov
sbb
inc
mov
jbe
out
xchg
pushf
stc
into
and
mov
popa
mov
and
cwtl
xchg
mov
xchg
jl,pn
iret
insl
push
lock
scas
mov
or
es
rorl
push
add
push
or
or
xchg
ds
xchg
dec
mov
call
out
sub
fadd
xorb
and
inc
dec
sub
cwtl
push
inc
sbb
pop
cmp
aas
adc
outsb
mov
repz
sub
inc
stos
cld
jae
adc
inc
jg
jmp
cmp
daa
cmp
lods
in
xchg
xor
mov
sub
cmp
in
rcl
scas
mov
lods
clc
dec
inc
push
fcmovnbe
and
push
js
adc
loopne
add
sbb
cld
rolb
xor
dec
mov
push
xor
std
or
lea
out
mov
xor
sub
or
test
dec
insl
and
push
or
xchg
mov
cmpl
ja
mov
ror
push
iret
in
mov
aam
pop
inc
adc
les
push
sbb
push
outsb
test
cli
fdivrs
jae
outsl
js
push
aam
xchg
rolb
add
fnsave
xlat
int3
in
mov
je
imul
jg
or
inc
addr16
adc
jb
sub
out
roll
addl
cld
sbb
fnstsw
sbb
or
jb
xorb
sbb
les
jb
fcomps
test
xchg
xchg
lret
pop
ljmp
jne
add
js
adc
sbb
cld
inc
xor
aam
fdivp
xchg
fiaddl
stos
mov
dec
outsl
adc
push
sbb
out
jle
cmp
mov
mov
adc
frstor
lret
sub
inc
cltd
mov
cmp
bound
insb
xor
lret
inc
sarl
out
jl
notb
sub
jno
or
jno
stc
push
pushl
add
ret
inc
and
push
mov
stos
adc
or
loop
sub
cli
xchg
lods
mov
mov
mov
or
mov
pop
frstor
icebp
sbb
inc
fsts
and
xor
cwtl
mov
mov
xchg
call
out
popa
jecxz
push
mov
xchg
fildl
pushf
aad
add
pushf
pop
push
lea
jg
or
pop
mov
and
cmc
scas
inc
cmp
fimuls
mov
loop
push
out
popf
xor
mov
and
adc
pop
xchg
cmc
xchg
dec
sbb
pop
insb
loope
frstor
inc
fdivrl
mov
subb
push
xor
jmp
cmp
data16
outsb
jb
jg
and
mov
out
mov
lret
xchg
push
xor
dec
incb
inc
adc
push
mov
popa
cmp
loop
lcall
out
mov
lock
cmp
movb
in
aaa
stos
sub
test
int
repz
or
lcall
xor
dec
or
xchg
cmp
fwait
adc
cmp
push
in
jp
mov
stos
stc
xor
aaa
push
adc
repnz
movsw
pop
jnp
scas
sub
cmp
pop
jge
and
mov
out
cmp
cmp
fbstp
pusha
jg
and
and
test
jo
clc
leave
out
lsl
mov
imul
push
int
popa
sbb
movsl
and
xchg
xorb
ljmp
and
sti
pop
out
pop
inc
and
je
loopne
xor
mov
mov
lahf
add
fistl
xor
adc
es
test
mov
push
lcall
hlt
cmp
aas
jle
push
lcall
sbb
outsl
mov
cmp
test
pop
jle
inc
iret
dec
filds
cmpsb
and
cmp
or
rorb
js
lcall
dec
shll
outsl
inc
jmp
cmp
arpl
cs
cmp
pop
push
divl
fiadds
sarb
jae
fwait
and
sub
cmpsb
js
push
out
aaa
ret
fsubr
pop
fs
sahf
mov
ficompl
cmp
out
jle
test
test
adc
xor
xor
sahf
call
push
bound
inc
mov
jne
ret
xchg
sub
mov
add
add
xor
out
xchg
inc
rcr
or
jg
inc
cwtl
rcrb
scas
mov
lret
pop
mov
or
insl
sub
sti
push
out
cmpsb
inc
push
dec
lds
into
mov
mov
call
pop
in
in
int
and
outsl
fidivrs
nop
pop
popa
mov
das
lods
fdivrl
mov
inc
add
aad
mov
loop
sub
xchg
mov
sahf
test
iret
cmp
roll
push
adc
jg
mov
leave
out
movsb
jnp
jnp
les
and
cs
stos
mov
mov
psubusw
add
dec
leave
in
je
les
fisubrl
cmpl
pop
add
pop
dec
dec
add
mov
pusha
cmc
mov
xchg
xchg
ret
pop
add
pop
aaa
inc
decb
jne
pushf
loop
or
mov
adc
pusha
fcomps
in
vpcmpgtw
in
mov
inc
mov
cwtl
sbb
bound
lea
ficoms
mov
jg
movsl
mov
mov
pushf
mov
xchg
xor
jne
loop
xor
adcl
imul
sbb
lock
out
sub
cli
xchg
pushf
inc
push
jg
test
pop
xchg
mov
mov
jo
sti
adcb
jbe
inc
push
rcrb
test
sti
mov
adc
imul
shl
test
cmp
push
es
cmp
adc
aaa
inc
addr16
sbb
out
mov
xchg
cmp
stos
int
or
mov
test
push
or
inc
push
int
inc
jmp
aas
ret
lea
add
outsb
jbe
cs
int3
mov
and
repnz
mov
loop
adc
dec
cmp
jbe
mov
addr16
leave
cmpsb
adc
dec
fwait
daa
inc
in
cli
out
and
and
movsb
cmp
jnp
loop
jg
jmp
daa
inc
dec
jle
lods
pushf
fucomip
mov
xchg
ds
es
xchg
inc
aam
jge
xchg
outsl
dec
lock
cmp
pop
insl
push
xchg
jmp
inc
sbb
mov
ret
das
imul
sti
subb
hlt
mov
push
mov
mov
mov
sub
movsb
dec
sbb
out
fs
inc
movsb
adc
lret
adc
push
test
dec
adc
sbb
shrl
inc
mov
add
das
fstl
fisttpl
jne
mov
or
lods
lds
xor
mov
jle
shrb
push
negl
popf
lock
frstor
mov
xor
or
dec
cwtl
das
xchg
outsl
ficomps
cmp
push
cwtl
mov
sbb
sbb
jle
cld
lock
mov
inc
sbb
mov
jl
adc
pushf
jle
mov
cmp
dec
and
cmp
fidivl
sti
xchg
push
iret
call
sub
ret
outsl
adc
mov
ret
jl
mov
jns
jp
or
fnstenv
jle
leave
jmp
mov
mov
ret
out
mov
mov
mov
dec
and
mov
mov
shll
fistpl
mov
loopne
mov
outsb
aam
pusha
fwait
dec
mov
sbb
sti
clc
in
ficoml
add
cmp
pop
push
push
icebp
insl
call
lahf
push
dec
inc
inc
cmp
xchg
loopne
cmp
sub
int3
jns
xor
adc
or
inc
or
sub
pop
mov
gs
das
mov
sub
adc
sub
mov
adc
xor
out
jne
jns
into
and
icebp
mov
icebp
cmp
std
inc
and
clc
pop
daa
mov
in
adc
cmc
loopne
jo
mov
dec
jge
sub
sub
mov
cltd
or
repz
sbb
stos
adc
jle
hlt
das
mov
mov
std
sub
add
mov
sub
mov
pop
rorl
enter
adc
mov
iret
xchg
push
mov
enter
fs
pop
movsl
sbb
add
mov
push
repnz
pop
and
es
adc
int
mov
movb
add
sbb
sahf
lahf
subb
int
aaa
stos
inc
jo
into
inc
lret
test
js
jo
adc
jae
adc
xor
lods
loop
mov
fcompl
scas
inc
out
xor
mov
adc
sti
dec
push
push
xchg
dec
addl
push
xchg
push
mov
stc
inc
lahf
sarl
xchg
stos
adc
aad
add
call
arpl
mov
inc
xchg
jnp
dec
cmp
inc
sub
das
int3
mov
es
mov
ja
sbb
mov
stc
sub
imul
add
sub
lods
lahf
xor
adc
loopne
xchg
shlb
lahf
insl
into
pop
repz
jecxz
or
cli
pop
or
xchg
xor
daa
pushf
add
inc
hlt
pop
les
pop
aas
popa
cmp
inc
mov
dec
mov
jp
and
push
jb
outsb
ret
sbb
jge
add
xor
outsb
out
push
cmpsl
cmp
bound
mov
dec
dec
cmp
dec
stos
hlt
mov
sti
pop
divb
int3
mov
shrl
adc
and
mov
and
ret
repz
mov
iret
out
repz
xor
or
lret
dec
js
cmp
jnp
xchg
jb
mov
adcb
push
jmp
addr16
cmp
pop
imul
std
xor
sub
jae
sub
mov
test
out
test
xchg
and
inc
lods
je
divb
fiaddl
mov
cmp
and
rclb
pusha
out
cmp
repz
mov
push
xchg
push
lret
mov
mov
iret
mov
data16
xor
mov
daa
test
add
insb
ljmp
rorb
and
sub
mov
xor
adc
mov
sti
jl
lea
xor
mov
cmc
or
cmc
cld
das
dec
jb
adc
and
push
fnsave
dec
sub
clc
movsb
xlat
out
fcmovnb
out
sarb
pop
es
roll
cmpsb
inc
adc
mov
and
inc
xor
psrld
out
jne
jl
lcall
les
cs
push
test
jecxz
push
sub
adc
fmuls
movsb
or
out
call
into
aaa
ja
outsb
mov
daa
dec
mov
bound
daa
inc
dec
lea
arpl
jbe
enter
cli
jmp
mov
mov
pop
xor
mov
enter
sbb
mov
pop
xchg
add
flds
movsb
testb
push
cmp
jb
dec
jnp
imul
mov
idiv
ror
lahf
inc
lock
test
inc
cmpsb
lcall
cmp
or
jl
add
bound
jmp
das
sahf
jae
int3
aaa
shlb
sub
pop
mov
mov
inc
les
cwtl
shlb
fldt
mov
cltd
pop
sbb
nop
mov
or
decl
fstps
push
push
lret
cmp
jl
inc
cwtl
dec
mov
aas
push
xor
in
sub
out
sub
pop
cmp
fsubl
lahf
sub
mov
push
xchg
imul
sbb
push
fcmovb
push
test
repz
dec
xchg
xchg
test
and
test
dec
stc
push
push
fstp
dec
lock
sub
shll
cs
and
sbb
pop
ror
push
jne
lods
sub
jne
in
push
fwait
push
aad
jp
jecxz
shl
jne
and
pop
inc
add
add
mov
repnz
mov
test
fsubp
test
decl
mov
mov
jnp
xor
sbb
mov
lret
mov
cmp
jmp
in
push
pop
jmp
xlat
and
sub
pop
jnp
jnp
sbb
inc
fs
cmc
in
cs
pop
cli
mov
and
sub
pop
outsl
ljmp
repz
cwtl
push
adc
sahf
sbb
ljmp
cmp
mov
mov
mov
ret
fistps
and
in
inc
inc
push
xchg
test
pop
fwait
mov
add
sub
xchg
mov
inc
pop
mov
clc
insl
or
int
push
testb
sti
lods
sbb
lahf
test
jge
mov
xchg
shrb
or
pop
leave
cmp
inc
jle
xorb
test
mov
pushf
cmp
xor
in
lcall
add
push
xchg
lea
int
out
pushf
inc
testl
dec
sbb
leave
test
dec
fistpll
mov
in
or
repnz
inc
ss
outsl
mov
push
push
repz
push
repz
test
fidivrl
cmp
es
ljmp
pop
mov
cmpsb
add
add
add
pushf
and
les
xlat
adc
or
cmp
dec
dec
cli
xchg
mov
not
mov
cmp
rcrl
inc
pop
stos
arpl
mov
and
movsb
pusha
jg
push
mov
inc
push
xchg
xor
mov
ficompl
das
aad
add
or
out
push
imul
fstpl
sub
in
mov
dec
sbb
fdivr
mov
lahf
xor
aad
push
in
pop
neg
lea
mov
rcr
lock
dec
or
jmp
sub
arpl
dec
insb
push
ljmp
lea
dec
lea
pop
mov
fwait
rorl
fsubr
out
pop
into
xchg
dec
jle
hlt
hlt
and
pop
xor
iret
dec
filds
ja
bound
or
adc
mov
dec
or
icebp
scas
xchg
xor
test
pop
addb
mov
insb
push
adc
imul
dec
sub
icebp
xchg
shrb
jecxz
scas
jo
add
sub
loopne
jp
into
icebp
mov
enter
adc
out
adc
imul
jecxz
sbb
mov
mov
stc
icebp
jne
ss
out
sbb
xchg
call
adc
sbb
call
add
mov
pop
test
cmp
call
sbb
xchg
pop
and
mov
rcr
int
cli
lea
sbb
mov
je
aas
icebp
pop
sub
loope
gs
inc
add
dec
movsb
xor
dec
andl
pop
or
rcl
fisttpll
inc
and
sub
mov
push
mov
xor
stos
mov
pushf
cmp
popf
xchg
and
pop
loope
shlb
mov
cmp
stc
movsl
divl
jmp
mov
cmovge
dec
out
xchg
jge
add
xchg
or
push
insb
leave
sub
xchg
or
add
xlat
and
imul
cmp
rcl
loope
mov
std
enter
fimuls
cwtl
enter
lds
stos
je
sub
jb
jmp
mov
adc
jmp
clc
dec
xchg
adc
or
cmp
std
aas
or
seta
addr16
test
xchg
sub
jbe
mov
test
pop
dec
xor
dec
mov
in
into
mov
call
and
push
addl
test
mov
fdivl
pop
pop
dec
push
mov
pop
mov
inc
gs
stos
dec
add
cmp
xchg
roll
sbb
lcall
mov
sub
sbb
jne
xchg
inc
jecxz
ret
daa
push
std
and
add
sub
dec
out
sub
or
out
das
lds
sbb
repnz
lea
outsl
rolb
xor
and
add
cli
sub
sbb
inc
lahf
mov
lret
sbb
mov
dec
es
idivl
sub
sbb
pushf
ret
adc
adc
or
rcr
shrb
decb
adc
gs
scas
jge
or
arpl
jge
rcrl
push
das
dec
fcmovu
imulb
fwait
cmc
jg
push
cmp
cmc
lcall
xchg
xor
test
rorb
or
lea
xchg
into
cmpb
xchg
rolb
jne
jg
push
jns
je
les
out
or
and
inc
mov
ret
fsubl
ss
in
dec
loopne
dec
je
push
leave
xor
roll
js
mov
lret
inc
test
push
insl
add
xchg
or
stos
scas
into
or
adc
and
pushw
xchg
data16
mov
repnz
push
roll
lods
repz
or
leave
cmp
dec
imul
dec
dec
add
movsl
dec
push
adc
dec
mov
pop
jmp
fisubl
pushf
push
punpckldq
rolb
inc
adc
lock
adc
or
iret
cmp
inc
mov
and
scas
cs
add
stc
aam
std
dec
shrl
cmp
push
adc
add
mov
push
push
mov
add
adc
jb
add
int
in
loopne
mov
jns
push
jne
sahf
shll
and
xor
std
shll
or
add
es
push
dec
loop
sbb
popf
add
inc
mov
ljmp
fsubs
push
lahf
popa
pop
mov
icebp
in
mov
call
popf
aam
fidivs
xor
cmp
and
add
lods
imul
imul
inc
jo
fdivl
fwait
xchg
sub
xlat
jle
mov
push
ret
add
inc
jge
and
mov
shr
xchg
inc
lret
movsl
or
xchg
mov
test
idivb
test
and
dec
lcall
sbb
pop
push
negl
fnstsw
sti
jecxz
enter
add
sub
sti
push
movsl
push
mov
push
mov
mov
cwtl
out
cmp
xlat
loope
inc
mov
mov
adc
cmp
in
lods
jae
inc
aas
mov
push
add
inc
inc
pop
clc
insl
xlat
and
and
mov
loop
or
jne
cmpsb
adc
xchg
stos
push
insb
xor
lcall
std
call
push
sub
push
clc
pop
sbb
js
dec
mov
xchg
shll
orb
xor
xor
mov
mov
cmpsl
cmpsl
dec
sbb
mov
mov
std
cli
xor
cmp
icebp
add
sbb
adc
inc
dec
je
xor
rcrb
cmp
loop
xor
mov
mov
jecxz
aad
test
push
xor
sbb
movsb
pop
xchg
mov
test
in
cmp
mov
mov
loop
push
outsl
push
in
fidivs
int
xchg
dec
cld
mov
je
sbb
and
mov
inc
add
jae
sub
daa
iret
push
shll
scas
dec
mov
mov
jg
iret
cmpsl
jecxz
mov
stos
add
aas
xchg
sub
icebp
xchg
and
adc
pop
clc
pushf
push
sti
push
or
sbb
cld
in
sub
test
inc
fiadds
out
add
shl
rcll
das
add
or
inc
ds
ja
pop
push
sbb
leave
dec
sbb
dec
sar
shll
in
mov
push
xor
sub
imul
icebp
pop
jg
lods
rcr
mov
js
xor
adc
fwait
rolb
and
mov
inc
mov
stos
xchg
pop
inc
mov
inc
loope
je
xchg
cs
rol
adc
dec
iret
inc
dec
cli
jle
pop
jo
and
cmp
icebp
addr16
xor
add
cmp
mov
ljmp
sub
xor
iret
push
ficompl
inc
mov
imul
clc
fs
or
add
ds
push
leave
orl
sbb
or
ljmp
push
mov
pusha
arpl
lods
mov
mov
pop
pop
pop
mov
stc
inc
repz
jns
decl
adc
inc
xor
push
hlt
lret
shlb
xchg
popf
dec
sahf
aad
add
xor
loopne
push
lds
aas
jbe
fcmovnb
mov
cmp
adc
adc
sbb
sbb
push
pop
sbb
jmp
popf
int3
and
dec
popa
flds
inc
push
mov
cmpsb
aaa
and
icebp
push
sbb
repnz
test
mov
icebp
xor
sbb
xchg
xchg
dec
test
cmp
fsubs
jl
cmp
inc
test
test
push
sub
pop
jns
sbb
es
inc
addb
pop
daa
fnstsw
lods
pop
js
clc
in
add
ljmp
sbb
scas
testb
jne
sti
ret
dec
mov
inc
jno
xor
sub
das
pop
and
mov
pop
xor
in
scas
je
add
adc
xor
push
movsl
test
pop
popl
adc
jo
call
sti
add
mov
adc
inc
jne
and
xchg
stos
jns
pop
mov
lahf
push
cmp
int
jbe
cmp
jg
or
shlb
int3
lret
sub
outsl
jg
shlb
int
dec
or
cmp
push
sbb
xchg
out
pusha
xor
test
in
popf
push
push
jmp
out
adc
mov
inc
insb
adc
sub
and
xor
enter
negb
cwtl
pop
cwtl
adc
fwait
gs
test
test
cmp
cli
mov
dec
jae
ljmp
sbb
pop
mov
enter
rol
je
push
pop
nop
push
mov
pop
lock
arpl
xlat
xchg
loopne
test
fldenv
pop
lock
xor
xor
rcll
pop
pop
jo
les
push
mov
jae
cld
rcrl
je
test
hlt
cld
sub
mov
jecxz
mov
sbb
inc
icebp
mov
mov
mov
test
ds
push
data16
pop
xor
push
pop
adc
mov
fdivrs
jle
dec
sub
andb
rcl
iret
int3
cmpsl
xor
jle
jmp
dec
inc
imul
nop
pop
or
out
stc
sbb
xchg
out
in
int3
xchg
xor
aad
jge
aad
dec
leave
jno
add
sbb
in
sub
push
inc
nop
mov
jmp
add
mov
sbb
jge
test
push
and
mov
pop
xchg
xor
scas
insl
daa
lcall
cmp
je
aaa
into
out
dec
scas
arpl
jp
sub
xchg
subl
jle
xor
mov
pushf
xor
mov
sub
pop
les
inc
mov
arpl
ret
inc
or
pop
and
sahf
insb
out
jl
icebp
das
enter
popa
aad
idivl
mov
lahf
add
sbb
xchg
adc
lcall
jmp
pop
adc
pop
mov
mov
clc
inc
cmpsb
mov
push
fldenv
rcr
sub
test
es
inc
jns
inc
xor
insb
test
mov
sub
clc
pop
mov
ret
cltd
aas
scas
jecxz
sahf
mov
cmp
test
testl
add
leave
sub
daa
pop
xchg
rcl
das
xchg
movsl
int
inc
adc
scas
cmp
pop
push
jno
in
xor
xor
inc
cmpsb
iret
lock
jno
adc
loop
inc
mov
test
lret
mov
ja
loop
cmp
pop
roll
mov
cmpsl
aam
cmp
sbb
loope
sbb
push
imul
test
andb
insl
shlb
push
in
pop
movsl
inc
js
clc
popa
push
or
sar
and
sbb
mov
shrb
push
lds
aad
js
insb
and
xchg
scas
pop
pop
mov
repnz
fldcw
xchg
xlat
ret
xchg
jae
js
mov
fsts
loope
test
push
jl
fs
out
add
adc
inc
shrb
or
mov
pop
inc
inc
cmpsb
inc
shrb
push
nop
cmp
lret
xlat
fsub
imul
add
fdivrs
mov
dec
xlat
push
xor
aas
les
jo
push
jle
leave
out
push
mov
sbb
sub
dec
inc
push
or
push
mov
ret
xlat
xchg
inc
lock
jecxz
inc
int3
jle
ds
cmp
dec
pop
xchg
xlat
roll
movsb
enter
xorb
test
fiaddl
cmp
cld
leave
lds
push
out
jp
cmp
sarl
divb
cmpsb
fdivr
fwait
insb
or
gs
or
xchg
or
call
mov
mov
jae
jae
enter
add
fiadds
pushf
mov
ret
outsl
loopne
dec
sbb
mov
iret
test
ret
int
jne
lret
lods
imul
mov
fnsave
movsb
daa
cmpsl
dec
mov
cmc
imul
mov
inc
mov
sti
mov
xchg
mov
leave
pop
popf
enter
pop
xor
mov
push
ret
clc
xor
push
add
push
test
push
cmc
pusha
push
loopne
rcrb
and
aam
jg
dec
sbb
andb
and
sub
aam
push
nop
sub
stc
mov
pop
mov
jp
push
push
loop
xchg
xor
inc
jmp
jb
imul
sbb
cltd
es
aaa
cli
xchg
mov
cmpsl
cmc
push
fwait
js
inc
stos
and
ret
adcb
popf
cmp
mov
sbb
imul
xchg
mulb
test
leave
xchg
mov
xlat
data16
sti
xchg
out
hlt
cmp
dec
inc
test
repz
ss
rcr
sbb
leave
mov
pushf
fwait
jbe
shll
ds
shlb
dec
pop
or
mov
stc
into
dec
cmpsb
aad
or
mov
jle
call
cmp
pushf
sbb
xchg
pop
scas
mov
out
inc
fwait
mov
sbb
shl
clc
cmpsl
mov
pushf
pop
xchg
push
vpmullw
inc
in
dec
mov
push
jae
push
je
cmp
push
push
out
jecxz
js
sub
iret
xchg
xorb
jl
pop
mov
xor
xorb
mov
int
jle
dec
in
mov
xchg
sub
xchg
insl
and
aam
popf
icebp
es
int
addr16
xchg
mov
fmulp
movsb
jnp
out
pop
adc
shll
repnz
stos
ret
xchg
fwait
ror
into
les
cmp
je
xchg
shrl
in
push
repnz
mov
je
test
sub
inc
daa
imul
dec
sarb
xchg
or
inc
or
sub
cwtl
dec
test
ds
xor
pop
mov
ljmp
or
push
pop
int3
push
call
cmpsl
rcrb
pop
sbb
xor
dec
in
lock
and
es
outsl
std
dec
enter
in
mov
push
scas
mov
loop
adc
test
inc
sub
mov
test
daa
inc
push
jge
push
or
push
lods
sbb
rolb
and
mov
mov
jno
and
ret
stos
into
mov
jp
and
fistps
mov
mov
outsl
insl
scas
or
dec
pop
mov
mov
int
loopne
out
mov
lahf
mov
push
pop
mov
mov
jo
imul
adc
inc
cmpsl
sub
and
xchg
sbb
cmp
dec
imul
rolb
mov
dec
dec
jmp
aaa
dec
lea
enter
cld
in
push
adcb
pop
cmp
cmp
mov
in
jbe
pop
fists
dec
lds
push
add
movsb
aam
inc
mov
outsb
jmp
lret
out
add
sbb
ja
and
sbb
test
sbb
inc
inc
and
xlat
insb
int
xor
stos
push
repz
cmp
data16
stos
sub
adcb
adcb
repz
loop
xlat
outsl
les
add
and
mov
push
push
and
add
mov
negb
leave
push
mov
mov
inc
xlat
dec
shlb
fdivrs
mov
imul
xor
in
daa
lods
sti
cmp
out
xchg
xorl
movsb
add
and
add
fxch
adc
or
scas
mov
notb
das
mov
test
outsl
dec
cli
mov
or
fstp
jge
pop
shlb
hlt
ret
pushf
jmp
pop
jnp
pop
movsl
test
jae
jg
outsb
pop
adc
stos
pop
sub
imul
push
adc
or
ret
adcb
push
in
jp
cmp
rcll
jmp
jbe
push
enter
lds
mov
cltd
imul
into
xchg
mov
mov
enter
repz
gs
into
stos
dec
mov
jp
dec
ja
in
push
call
push
mov
pop
xchg
hlt
and
pop
stos
adc
xchg
fisubs
xchg
loopne
fwait
or
test
in
xchg
rcrl
push
jbe
ja
data16
xchg
imul
pushl
in
icebp
in
std
lods
cmpsl
cmpsl
ret
mov
sub
mov
adc
lret
lret
nop
lods
cmp
cld
or
push
jne
dec
inc
adc
shrb
mov
mov
ret
data16
adc
insl
je
cmpsl
fcomps
mov
pop
jl
jo
dec
sub
xor
cmp
pop
pop
jb
adc
fmull
lret
repz
stc
inc
mov
arpl
and
add
xchg
push
and
dec
adc
jo
dec
iret
push
dec
push
xor
push
pop
inc
popf
popa
repnz
gs
dec
xor
mov
dec
fistps
pop
adc
push
inc
mov
insl
xchg
mov
cmp
jnp
pop
add
call
push
push
insb
xchg
dec
cmp
imul
sbb
test
stc
outsb
cmp
mov
mov
hlt
sbb
push
adc
mov
mov
push
adc
xlat
adc
jmp
enter
xor
mov
mov
xchg
push
hlt
inc
pop
push
lods
nop
out
lock
dec
ds
xor
sub
popa
jmp
or
inc
inc
inc
cmpps
aas
xchg
pop
test
push
sti
scas
ds
test
call
pusha
bound
cs
and
jnp
mov
int3
insb
scas
mov
enter
xchg
push
xchg
aad
mov
fisttpl
mov
adc
out
loope
out
in
mov
jecxz
jno
jge
stos
cmpxchg
inc
fwait
mov
or
dec
rorl
mov
push
faddl
roll
pop
ret
stos
test
xor
stos
lea
add
sub
sbb
pop
pushl
push
pop
mov
add
hlt
add
pushf
add
lret
aas
bound
cli
pop
imul
inc
nop
pop
inc
pop
xor
push
mov
xchg
test
mov
cwtl
cmp
push
cmp
push
jg
lods
popf
lods
fidivl
loope
out
movsb
movsl
iret
and
lsl
in
mov
mov
mov
dec
push
repz
jbe,pt
pop
imul
lahf
inc
pop
addb
inc
dec
in
bndstx
push
pushf
cmpsl
push
sub
testl
inc
movsb
sarb
sbbl
test
add
cmp
cmpsl
mov
insb
push
leave
mov
jns
or
in
int
sbb
dec
jne
sahf
shrl
adc
jb
cmc
and
mov
jne
cs
pop
lcall
xchg
daa
js
cld
push
cmp
stos
pop
jmp
dec
out
pop
pushf
inc
inc
add
mov
ss
mov
clc
dec
xor
sbb
daa
sbb
aaa
ljmp
push
jle
cwtl
icebp
inc
rorb
jo
icebp
int3
cmp
mov
inc
push
sub
sub
jecxz
lods
mov
mov
out
stos
cld
sti
test
clc
rep
shlb
fs
sbb
and
int3
call
cwtl
jae
push
lret
scas
adc
fldl2t
adc
pop
lods
mov
lahf
jl
pop
dec
adc
inc
inc
mov
and
ja
push
mov
or
mov
or
push
pop
inc
add
cmp
ficoml
push
and
rcrl
loope
fdivs
mov
imull
roll
bswap
fisubl
ds
sub
addr16
inc
cmp
mov
mov
push
pop
popa
pop
fldt
out
fcom
inc
mov
inc
mov
divb
inc
cmp
jo
imul
add
jne
lret
xchg
leave
movsl
xlat
es
mov
adc
stos
xor
idivl
mov
faddl
cmp
mov
sahf
bound
jnp
jge
mov
mull
mov
pop
push
lcall
fcomp
loopne
inc
xchg
or
pop
shrd
jmp
fildll
xchg
fisttpll
jmp
out
add
jo
xchg
push
insl
test
jnp
shrl
jbe
push
pop
cltd
dec
iret
xor
push
lret
aas
movsl
andl
aas
fucomp
sub
inc
push
xchg
fnstcw
idiv
mov
jp
addb
pop
adc
fwait
adc
ret
lock
lcall
cmp
sti
pusha
arpl
cmp
loope
add
xor
cmp
lock
cmp
push
loop
outsb
pop
ret
shrl
div
xchg
adc
sbb
pop
push
cltd
jae
pop
inc
call
loope
mov
inc
adc
rorb
push
xchg
jnp
xor
aam
push
in
hlt
add
decb
sbb
xor
stos
std
adc
xor
adc
imul
mov
notl
inc
fs
punpckhbw
inc
push
enter
scas
lods
xchg
jmp
ds
mov
xor
jmp
jbe
adc
add
lret
xchg
xlat
dec
cwtl
jbe
sbb
mov
stc
jg
jno
push
jge
hlt
adc
fisubrl
stos
adc
xor
aaa
pop
shl
push
sub
rcll
or
loopne
or
push
sti
imul
cmpsl
push
nop
clc
sahf
xchg
push
pop
mov
jg
notl
ficoml
into
int3
roll
out
test
adc
add
pop
pop
sub
shll
scas
jecxz
cmc
movsb
aaa
sbb
adc
jns
lods
sbb
inc
add
mov
xlat
push
stos
lcall
cmp
fidivrl
mov
in
push
cld
iretw
icebp
inc
aas
adc
fdivp
or
mov
xor
ret
sbb
mov
add
fwait
sub
faddl
sbb
or
mov
aad
jp
inc
idivl
out
add
dec
mov
xchg
nop
sbb
int
push
add
sbb
clc
mov
lds
dec
outsl
iret
mov
push
push
stc
movb
cmp
popf
je
dec
xchg
mov
inc
out
imul
out
add
mov
mov
add
sbb
or
dec
sub
stos
test
hlt
es
popf
lret
js
or
sbb
icebp
int3
pop
lods
mov
jb
cli
sub
hlt
in
into
pushf
mov
data16
mov
repnz
jl
inc
and
inc
push
or
je
inc
or
mov
or
mov
pop
test
ficomps
sub
scas
xor
push
dec
jmp
rcrb
fwait
pop
loope
pop
add
jg
xchg
or
in
mov
es
jns
cld
mov
dec
sbb
jb
scas
add
jmp
pop
mov
out
add
push
jle
imul
pop
in
data16
lock
mov
lods
stos
add
notb
sbb
leave
sub
or
mov
push
sub
ds
stos
bound
enter
xor
sub
nop
lahf
mov
inc
imul
sarl
jg
xchg
mov
imul
cmpsb
rcll
xor
lahf
fwait
dec
inc
cmpsl
fidivrs
rclb
testl
or
fbstp
test
jns
outsl
adc
and
test
pop
push
dec
sbb
adc
lock
sbb
push
adc
lea
rcrb
pop
cmpsl
ficoms
add
push
imul
clc
dec
imulb
test
idivb
mov
mov
push
gs
es
jno
lret
mov
movl
stos
cmp
sub
xor
sbbb
cmc
pop
fcomps
data16
push
push
lea
jge
add
movsl
pop
jno
adc
xchg
es
mov
mov
jecxz
pop
xchg
dec
inc
pop
js
sbb
scas
movsl
adc
das
daa
outsb
jb
jno
adc
jp
cld
dec
into
dec
jbe
inc
dec
lret
adc
ffreep
adc
scas
movl
xchg
mov
mov
xchg
insl
addl
jmp
dec
adc
jae
movsb
or
cld
dec
sahf
cmpsl
dec
mov
in
out
dec
or
pop
sbb
cmp
add
mov
das
outsl
xor
or
pop
and
lret
push
xchg
xchg
xlat
pop
cli
mov
push
clc
lcall
mov
test
fcoml
or
int3
jp
adc
adc
mov
scas
repz
sti
fcomps
mov
push
push
fucomip
test
push
cs
or
outsb
in
and
xor
xlat
enter
push
add
int3
inc
add
mov
aam
sti
mov
sbb
xchg
lods
add
xor
jmp
notl
aad
popf
outsb
loope
mov
mov
arpl
push
stos
push
fldenv
jle
xchg
inc
je
or
mov
pop
lea
jmp
ljmp
xchg
loop
add
mov
xchg
imul
dec
inc
out
icebp
sub
mov
xchg
lea
in
cmc
push
lds
push
mov
push
fistpl
and
or
testl
inc
mov
mov
loop
mov
into
loopne
loop
push
int
adc
addr16
aad
mov
push
lds
mov
orl
imul
popf
fists
repnz
or
test
cmc
shll
out
leave
sub
mov
adc
jno
dec
cmovg
popf
pusha
xorb
adcl
push
dec
out
xor
call
leave
cld
ljmp
pop
loope
and
adc
mov
popf
cmc
jmp
mov
push
xor
xor
fsubrp
sub
insl
push
cmpb
xor
sbb
nop
cmp
sti
sar
cmp
je
fidivl
cmp
repnz
mov
mov
push
mov
stos
sub
hlt
test
dec
gs
scas
push
cmpsl
mov
sub
lods
rolb
pop
cmp
push
mov
in
insl
out
data16
adc
jmp
mov
mul
test
orl
sbb
mov
test
subb
sbb
xchg
dec
xchg
leave
or
add
jb
jae
inc
mull
push
outsb
add
mov
repnz
cmp
push
outsb
mov
push
mov
inc
data16
out
xchg
mov
clc
push
inc
or
mov
nop
dec
pop
rorl
push
cltd
ja
xchg
mov
cltd
sbb
mov
push
dec
xor
mov
scas
dec
jmp
out
push
push
push
push
push
hlt
jb
cmp
push
adc
les
mov
jle
iret
out
mov
int
jns
in
sbb
sub
push
inc
and
cmpsl
in
adc
rclb
inc
movsb
cmpsb
out
sub
add
out
dec
insl
test
fcomp
sti
or
pop
xor
sbbb
mov
in
aas
lahf
inc
cmpsl
xchg
xlat
js
pop
mov
push
insl
ret
ret
loop
inc
jecxz
mov
lret
lds
pop
sbb
dec
aaa
xchg
xorb
popf
sbb
pusha
int
mov
mov
pop
ret
push
sbb
shrl
imul
jle
push
shlb
sbb
xchg
mov
adc
scas
cwtl
lcall
outsb
sbb
cmp
push
es
in
int
clc
sub
outsl
into
or
loope
jge
or
ss
inc
ds
int3
sarl
icebp
js
pop
pop
fbld
repz
icebp
mov
outsl
das
or
add
cli
cli
xchg
jae
pop
dec
pop
nop
mov
in
cs
ja
cmp
inc
insb
mov
lahf
popa
or
fdivrs
aaa
inc
push
and
or
jecxz
movb
mov
or
out
mov
stos
jbe
xchg
bound
in
cld
jmp
pop
gs
push
sub
shl
xchg
push
mov
dec
fildl
jnp
imul
call
lahf
xor
inc
jp
push
and
mov
cmp
and
ret
cli
stc
mov
jp
pop
xor
mov
mov
mov
xor
lret
sahf
imul
gs
out
jl
mov
cld
add
fucomp
xchg
jne
or
cwtl
or
xchg
ror
daa
mov
push
mov
setbe
je
scas
and
pop
mov
ss
int
notl
push
roll
out
lods
aas
aad
lods
and
cmp
out
xlat
xor
cmp
loope
jp
call
leave
mov
jae
aad
stos
sbbl
sarl
jecxz
shlb
sub
incb
mov
mov
sub
sbb
pop
pop
lcall
ds
adcb
outsb
inc
in
sub
add
or
sbb
sub
test
sub
leave
sbb
cmp
fs
ficoms
jae
cmp
xor
fistps
mov
xchg
and
mov
mov
movsb
repnz
mov
bound
enter
out
in
out
fisubrs
push
inc
nop
fsubrs
std
mov
push
or
jo
imul
cltd
test
jbe
insb
inc
shrl
adc
pushf
cs
mov
movsb
mov
and
cmp
sub
xchg
or
sub
out
push
dec
pusha
dec
mov
out
lret
xchg
pusha
aam
call
out
in
sub
mov
xchg
test
add
inc
je
cmc
or
scas
mov
sarb
out
leave
inc
in
sbb
imul
sysexit
in
jg
inc
arpl
pop
popa
and
fisttpll
test
mov
and
test
repz
mov
orb
sbb
inc
dec
mov
sub
mov
loopne
stos
popf
aas
leave
in
push
scas
popf
mov
cmp
test
dec
daa
fs
pop
fmuls
or
sti
xchg
mov
movsb
dec
js
and
filds
xchg
sub
pushf
jno
sbb
mov
sub
mov
push
add
and
fdivrl
loope
shrb
or
mov
inc
jo
repz
ja
mov
ljmp
clc
xchg
imul
jp
adc
pop
and
jnp
dec
ds
xchg
mov
ror
out
out
insl
or
nop
or
iret
add
jge
jno
lods
cli
lcall
into
fst
leave
sub
out
sbb
inc
adc
pop
sub
and
cmp
push
jne
and
sbb
gs
ret
dec
and
sbb
int
cmp
cmc
fisttpll
mov
and
inc
jge
jle
push
jnp
ljmp
push
sbb
mov
in
popf
inc
mov
call
cmp
xchg
adc
xchg
mov
mov
add
push
mov
insb
shlb
push
inc
jg
in
fwait
ud1
xchg
xchg
shrl
fcmovnu
jp
hlt
add
iret
arpl
fistps
mov
lret
outsl
push
add
dec
test
repnz
mov
lret
dec
push
push
popa
inc
cmpsl
dec
jecxz
jl
or
dec
xchg
ret
dec
jns
stos
pop
push
inc
dec
jmp
xor
sbb
rcrb
nop
rorb
push
mull
test
xchg
jne
jmp
dec
into
mov
ss
mov
stos
clc
in
push
inc
test
imulw
cltd
mov
or
shr
lret
cmpsb
in
xchg
aas
mov
inc
repz
push
xorb
pushf
inc
xchg
jle
push
jnp
es
lds
test
adc
jecxz
mov
push
call
mov
test
add
nop
ss
sub
popa
out
mov
fdivrs
jbe
fists
mov
rcll
ret
repnz
pop
pop
and
repnz
popa
icebp
push
push
xor
push
xlat
lds
aas
int3
scas
repnz
not
pop
sub
out
lahf
cltd
sub
pop
lds
jb
or
outsl
hlt
fabs
and
mov
movsl
out
push
lock
push
fs
xchg
inc
mov
cs
in
repz
mov
push
cmp
mov
leave
mov
frstor
sbb
push
test
adc
add
sub
mov
fstl
shll
cmp
and
test
sub
insl
pop
mov
dec
test
jbe
push
inc
jbe
push
mov
mov
xor
enter
cwtl
call
mov
cli
gs
jo
xchg
push
addr16
xor
out
popa
loopne
adc
icebp
sbb
clc
ficompl
sub
adc
mov
gs
adc
mov
sbb
in
cmp
in
test
lds
xor
jae
aas
sbb
and
cld
jg
push
mov
pop
mov
enter
cld
sarl
lret
aad
and
xchg
adc
lcall
xor
insl
jmp
out
mov
cld
mov
out
mov
stos
rorl
xor
xlat
adc
aad
arpl
inc
jl
sbb
es
imul
push
add
sbb
test
adc
add
sahf
stos
cltd
daa
out
insb
fidivl
jg
lea
test
cwtl
loope
adc
sub
xor
fdivrs
pop
inc
jnp
mov
cli
data16
add
mov
mov
in
iret
fisubrs
push
mov
fwait
cmp
cld
fisttps
sub
dec
push
out
mov
mov
xlat
imul
dec
pushf
cmpsb
pop
or
jne
cmp
scas
outsb
mov
dec
cmp
js
and
xchg
cmp
mov
js
jb
mov
std
inc
mov
or
stc
int
popf
sub
in
out
movsb
fwait
sub
mov
out
nop
andb
mov
repz
andl
dec
xchg
stos
mov
dec
data16
push
or
ja
mov
xchg
push
icebp
jo
dec
les
rorb
push
jmp
insb
jno
push
push
sbbb
add
fmuls
loopne
and
shrl
sbb
mov
cmp
rcrl
sub
sbb
sub
insl
dec
subb
pop
outsl
fisubrs
dec
add
sahf
or
mov
aam
movsb
and
shlb
in
sub
sub
es
mov
xchg
into
or
jl
movsl
xor
jecxz
xchg
xor
push
cld
adc
xchg
xchg
pop
stos
mov
pop
fdivs
cmp
sahf
dec
cmp
int3
adcl
pop
mov
mov
add
andb
insl
lock
adc
xor
popl
mov
jg
stc
cld
inc
pop
js
fisubrl
xchg
mov
hlt
jmp
xor
mov
loope
addr16
fcmovu
imul
jno
insl
in
and
mov
push
outsl
cld
dec
test
lret
bound
mov
mov
xchg
jne
push
hlt
sbb
mov
dec
aam
mov
or
clc
pop
xor
mov
push
insb
shll
enter
out
xchg
xor
xchg
jb
inc
dec
call
cmp
or
push
les
out
adc
jle
inc
in
stos
std
cs
in
xchg
out
add
cmpl
insb
in
jg
imul
test
shl
mov
int
pop
or
or
adc
mov
std
cltd
cmp
sahf
scas
fistpll
xor
xchg
in
pmullw
sub
ret
xchg
and
loop
movsb
fwait
mov
xchg
cmp
mov
jge
pop
push
shll
cmpsb
mov
adc
ss
scas
ja
xor
test
mov
inc
lock
cld
loop
enter
mov
popa
mov
add
and
outsl
or
faddl
test
popl
call
push
mov
inc
dec
int3
xchg
jnp
fldcw
dec
mov
shll
iret
mov
push
daa
fsts
cmp
ret
stos
jae
ja
pop
aaa
cs
xchg
sti
jae
xchg
mov
ds
sarl
bnd
xchg
pusha
inc
cwtl
hlt
jg
pop
push
add
xlat
xchg
mov
pop
adc
lret
mov
cmc
cmp
mulb
mov
or
outsb
pop
scas
rcrl
inc
pop
imul
insb
cmp
gs
jmp
inc
xlat
mov
lods
xor
dec
aas
mov
and
fdivl
out
mov
leave
xor
inc
in
out
lahf
jno
aad
imul
mov
fnstcw
dec
aam
pop
xor
fnstcw
stc
cld
sub
outsb
push
adc
mov
js
sub
jge
adc
sti
sti
and
insb
iret
call
sbb
lret
std
ds
in
push
dec
or
mov
scas
mov
call
and
xchg
stos
leave
cmp
jp
sub
push
adc
cld
and
rcrl
loop
push
sub
sbb
mov
jae
fistl
pop
daa
xchg
test
mov
push
in
or
push
push
mov
and
mov
lcall
addl
fidivrl
sarb
ret
imul
or
out
lret
xchg
mov
int
sub
out
pop
push
xchg
jge
and
fdivs
and
pop
stos
push
jmp
or
pop
xchg
or
pop
jg
xor
ds
popf
out
sub
test
out
jbe
dec
imul
xchg
notl
jg
in
out
shlb
pop
les
call
mov
sub
add
xchg
lahf
push
jp
xor
xchg
sub
testb
xchg
jb
sub
push
in
fsubs
loop
pusha
mov
enter
pop
pop
jbe
mov
xor
push
mov
out
push
rclb
insl
lock
imulb
adc
sub
push
mov
mov
sar
ja
xor
fsubrl
test
adc
add
sub
xor
mov
and
add
mov
ret
xchg
and
filds
pushf
out
gs
sub
data16
jl
inc
sahf
mov
push
mov
sbb
inc
das
mov
cmpl
push
mov
inc
mov
add
insb
clc
xchg
pop
sbb
xlat
mov
iret
push
mov
scas
test
outsl
xor
mov
dec
xchg
jge
cmp
cmp
jp
popf
aaa
inc
pop
or
add
xor
fisttpl
in
mov
imul
inc
dec
mov
pop
fisttps
lds
cmp
ja
cli
mov
rol
xchg
out
xor
cmp
movl
sbbl
xor
sti
sbb
inc
and
out
out
out
scas
aaa
mov
inc
mov
and
mov
stos
outsb
push
sub
sbb
cmp
test
jl
push
jns
std
jg
and
add
mov
decl
mov
lcall
leave
pop
adc
insb
insb
pop
pusha
add
jns
gs
ja
nop
dec
ss
imul
fistpl
ljmp
sub
xchg
or
or
pop
lods
popa
dec
push
movsb
mov
mov
mov
or
outsl
mov
inc
movsl
inc
lcall
enter
dec
enter
pop
jmp
mov
jg
fistpl
aad
in
aam
cmc
mov
xchg
pop
xchg
mov
test
movsb
xchg
pop
scas
fisubl
inc
mov
push
dec
jge
jmp
enter
and
jmp
sbb
dec
pop
sbb
cmpsb
repz
mov
xlat
int3
mov
adc
test
sbb
test
sub
adc
sahf
pop
mov
mov
outsb
pop
das
jbe
add
sbb
cmc
mov
adc
add
sbbl
sbb
pop
pop
push
imul
lcall
push
pop
xchg
xchg
gs
mov
dec
mov
jns
mov
cltd
dec
ljmp
daa
faddl
inc
das
icebp
jp
mov
sbb
fidivrl
shl
leave
jle
jecxz
aam
call
aam
add
adc
or
push
mov
insl
ret
mov
push
add
jp
movsl
int
hlt
dec
mov
cmpl
adc
or
jmp
sbb
pop
dec
rcrl
rcrl
pop
sub
imul
outsb
or
testl
xor
dec
jecxz
add
add
int
mov
xorb
les
fists
jmp
inc
pop
push
outsb
adc
nop
add
xor
mov
adc
mov
rcrl
dec
lods
dec
xor
arpl
adc
movsb
int3
mov
sti
jbe
push
movsl
and
js
cmp
sub
mov
push
addb
shr
out
add
inc
arpl
adc
aaa
dec
repnz
mov
in
sub
xchg
pop
mov
sub
and
mov
ret
andb
sti
icebp
in
fisttpll
pop
adc
repz
or
add
and
shr
ljmp
xor
cmp
aad
push
add
icebp
daa
into
and
icebp
cmp
mov
in
adc
fdivrl
daa
and
idivb
inc
leave
sarb
in
pop
xlat
inc
pusha
outsl
inc
rolb
xchg
outsl
inc
jg
adc
fldt
loopne
outsl
leave
scas
idivb
xchg
jae
imul
xorl
jnp
adc
sbb
scas
idivl
addr16
push
mov
jbe
cmp
stc
mov
testl
js,pt
and
push
xor
int3
mov
data16
aaa
nop
and
lret
add
fistl
xor
mov
cmp
cmp
aad
push
fadds
stos
popa
mov
mov
shrl
mov
cs
mov
inc
xchg
rorb
xchg
in
jne
bound
test
rolb
les
call
scas
pop
pop
and
cli
pop
test
es
aad
push
test
jl
sbb
mov
sti
sbb
mov
mov
scas
loop
cmpsl
enter
add
popa
fdivs
nop
sbb
cmp
sbb
sbb
daa
je
lds
imul
repnz
sub
bound
clc
ss
shrb
jmp
cli
andl
mov
mov
add
fs
popa
fidivs
les
mov
fnsave
adc
add
adc
aaa
mov
mov
pop
popa
mov
or
push
int3
dec
outsl
mov
ss
cmp
sbb
mov
inc
push
aam
fistps
loope
jecxz
mov
out
jb,pt
sti
adc
clc
daa
adc
jbe
xlat
arpl
sarl
pop
adc
gs
sbb
jnp
in
enter
inc
jg
cmp
stc
in
xchg
cmc
dec
in
pop
pushf
lret
insl
call
fwait
sbb
icebp
jmp
adc
push
lods
jmp
shr
arpl
sbb
cmpsl
dec
mov
shrb
and
add
mov
scas
mov
xlat
pop
jno
les
negl
add
add
mov
lahf
and
les
jmp
sti
push
mov
repz
les
sbb
fidivl
insb
insb
sub
fistpll
dec
sbb
mov
repz
push
out
xchg
mov
test
mov
aad
movsb
sbb
sub
gs
int3
jp
mov
fs
andl
mov
mov
repz
jmp
or
fsubrl
movsb
arpl
jle
or
movsb
sub
mov
fiadds
pop
dec
xor
das
fcompl
push
add
sbb
inc
gs
cmp
push
inc
lahf
std
add
popa
adc
lock
and
mov
lea
jbe
push
mov
loopne,pt
mov
outsb
in
push
ret
mov
andb
push
stos
fadd
mov
sbb
sbb
int3
adc
adc
stc
push
xor
mov
sti
test
scas
jnp
fldcw
xor
enter
adc
cmp
dec
jp
movsb
pushf
dec
mov
repz
fidivrl
mov
lds
iret
xchg
out
outsb
or
push
lret
lods
push
xchg
pop
test
pop
mov
addr16
shlb
cmp
mov
movsl
jge
aad
mov
inc
sub
mov
cwtl
jo
sbb
adc
call
jle
mov
jmp
pop
clc
cltd
add
adc
cmp
mov
mov
push
shlb
mov
pop
sbb
cmp
jmp
lcall
incl
dec
cmp
pop
push
xchg
xor
pop
iret
sub
push
xor
pop
mov
mov
push
in
outsl
mov
mov
mov
je
int
orb
scas
gs
scas
mov
or
mov
iret
xchg
call
push
inc
nop
fcmovne
and
cltd
adc
add
mov
mov
sub
fs
addr16
repnz
test
cmp
stos
data16
jmp
dec
cmpsb
imul
mov
and
sub
jns
dec
incl
xchg
sub
jne
sbb
add
ret
push
lods
inc
sub
xchg
movsl
mov
loope
mov
add
mov
push
inc
inc
test
add
jecxz
pop
push
loopne
nop
cltd
nop
aaa
sbb
mov
pop
leave
in
xchg
xchg
in
xchg
ret
das
cld
movsb
jmp
mov
xchg
dec
pop
fisubrl
jmp
shll
cmpsb
cmp
sub
pop
icebp
pop
mov
lods
punpckldq
xor
adc
mov
sarl
mov
jno
es
shrl
jno
add
inc
add
mov
mov
sub
pop
dec
xchg
jg
js
icebp
push
imulb
fisttps
cmp
mov
jnp
cmp
sub
aam
mov
stc
cmp
sbb
ret
lea
lods
xchg
xchg
lea
or
gs
movsl
dec
adc
imul
adc
push
xchg
push
push
out
in
xor
inc
outsb
icebp
sub
sbb
js
fadd
mov
loop
sahf
sarl
inc
fnstenv
jp
pop
push
mov
pop
adc
scas
jl
fwait
test
and
stc
and
or
loop
jb
out
sbb
xchg
add
mov
in
test
mov
pusha
cmp
mov
dec
mov
rorl
adc
sub
or
shrb
in
shrb
xchg
xor
sub
dec
add
jle
lret
or
inc
fisubrs
cmpl
xor
or
out
enter
or
push
jbe
test
or
mov
sarb
fdivr
mov
push
dec
loopne
leave
sub
ret
sub
sar
dec
push
ret
mov
inc
mov
ja
lods
add
outsl
fcmovnb
stos
das
pop
push
inc
clc
std
jno
dec
pop
clc
hlt
jne
cmp
mov
mov
sbb
or
push
fdivrs
clc
mov
outsl
mov
push
fsubs
push
lret
rcrl
out
xor
fsub
or
mov
inc
pop
push
sub
mov
sahf
cli
fists
sub
xchg
mov
shrl
mov
xor
add
mov
lods
and
xor
loop
sub
das
cmp
pop
fcomps
jle
add
push
rorl
pop
repz
jne
add
loope
insb
lea
mov
xchg
jnp
movsb
dec
and
xlat
and
das
scas
repz
cmp
xchg
adc
jle
push
mov
dec
faddp
jp
pop
sub
mov
or
pop
out
pop
sti
int
stos
iret
stos
nop
push
lds
push
lret
hlt
push
push
das
jno
and
adc
mov
insl
scas
mov
jb
sbb
or
call
pop
lea
lock
cmp
sub
addr16
dec
mov
stc
hlt
mov
int
lods
addr16
cmp
cwtl
xchg
mov
and
mov
mov
loop
pop
xchg
pop
andb
lcall
lahf
xchg
add
iret
cmp
dec
xor
out
pop
inc
mov
lcall
aad
xchg
in
pop
xor
sub
subb
int
sub
rol
mov
icebp
lock
lahf
mov
mov
push
and
iret
push
xchg
jge
loop
lcall
add
jp
push
insb
dec
aad
shl
inc
xor
pushf
mov
lret
xor
xchg
aad
pop
shlb
lods
xor
and
mov
pop
mov
xchg
pop
iret
test
divl
mov
jno
mov
dec
or
push
movsb
mov
js
sub
and
cmpb
cmp
les
adc
movsl
push
cmp
inc
bound
jmp
in
adc
lcall
xor
movsl
into
adc
and
sub
outsl
popa
adc
and
inc
mov
pop
bound
lods
mov
sbb
shlb
lods
cmp
push
xchg
cli
ds
or
imul
addr16
adc
adc
mov
xchg
jmp
mov
lods
pop
and
or
ret
jp
test
jecxz
out
test
stc
adc
jp
or
add
mov
punpcklwd
lock
inc
push
stos
and
ds
add
movsb
dec
mov
push
psubq
pop
fwait
mov
fimull
mov
scas
sbb
cwtl
hlt
and
cmp
cmp
sub
insl
mov
push
or
mov
cwtl
and
icebp
add
cmp
sbb
ja
movsb
imul
jb
repnz
push
into
pop
mov
cmpsb
inc
aaa
sub
or
jo
dec
adc
pop
xor
in
push
stos
mov
pop
xchg
jns
not
pop
cli
xor
add
imull
or
arpl
push
aaa
adcl
adc
mov
dec
int
inc
icebp
inc
ljmp
xchg
xor
in
movb
sub
fistl
adc
lods
mov
mov
jae
jmp
sub
inc
enter
icebp
hlt
mov
pop
data16
lret
inc
ret
fsubrs
push
sbb
movsl
cmc
jbe
bound
fwait
enter
repz
add
fincstp
xchg
lock
and
mov
in
push
sub
mov
mov
mov
test
into
in
jo
jg
mov
xchg
xchg
fwait
mov
cwtl
lret
pusha
imul
push
mov
or
dec
icebp
mov
mov
outsl
adc
js
mov
add
test
sub
jb
fcoml
scas
shll
fdivrs
mov
mov
hlt
jne
movsl
pop
inc
ljmp
mov
scas
jns
mov
idivl
sbbb
cmp
pop
pop
in
jecxz
ret
sbbb
mov
std
fisubl
xor
mov
adc
pop
xorl
out
xchg
cmp
ja
je
stos
mov
test
sub
int3
int3
fstp
addr16
stos
or
add
rorl
bound
js
mov
push
inc
xor
xchg
jnp
xor
dec
jmp
push
mov
adc
jbe
jns
in
shl
aaa
jns
popf
or
jg
daa
mov
add
fldenv
xchg
sub
cmp
cmc
lcall
call
sub
cmpsb
xchg
fwait
dec
pop
scas
inc
out
and
std
mov
mov
addl
cmp
lcall
mov
mov
jne
ds
loop
fwait
pop
mulb
add
sub
aaa
icebp
pop
pushf
mov
push
push
ret
mov
adc
iret
call
jb
mov
jae
addr16
inc
pop
xchg
lcall
dec
rcrl
nop
and
pop
cltd
mov
clc
mov
shrb
and
pushf
mov
and
cmpb
js
mov
pop
and
cmc
inc
mov
stc
mov
popa
push
and
popf
mov
scas
loope
cld
inc
inc
and
leave
sub
and
mov
clc
fstpt
aas
mov
inc
push
insl
jle
jg
xlat
or
jecxz
imul
ret
adc
idivl
icebp
xchg
and
dec
push
sub
add
rorb
inc
inc
clc
imull
shl
int3
dec
pop
dec
adc
dec
and
test
xchg
push
pop
push
popl
sahf
add
pop
jg
cmpsb
aad
in
loop
movsb
xrelease
jmp
cmpsb
xorl
subb
aam
lret
lea
daa
inc
daa
and
les
xor
xchg
fcmove
pop
dec
xchg
mov
cmp
jl
xlat
mov
scas
push
add
pop
jo
and
loopne
mov
pop
and
aad
decl
xchg
push
ffree
test
push
shll
cs
adc
cltd
test
bound
ss
cmp
xor
pop
sub
icebp
std
aad
inc
sub
xlat
push
jge
enter
push
gs
mov
in
in
mov
adc
je
xchg
out
test
orb
icebp
inc
outsb
dec
insb
inc
ss
mov
cli
leave
aam
fsubr
push
push
push
cwtl
pop
and
and
sub
xor
sbb
gs
enter
add
lcall
mov
iret
sub
jp
xlat
ret
ds
jne
mov
mov
jp
adc
out
mov
pop
sti
mov
lods
dec
pop
std
je
sub
adc
adc
mov
sbb
dec
sub
cmp
jmp
xchg
sub
fsubrl
mov
jns
test
mov
scas
lcall
xlat
adc
in
lcall
xor
xlat
cmp
sbb
test
xchg
movsl
sbb
pop
sbb
jge
test
dec
mov
jns
xor
fwait
mov
push
je
pop
or
insb
hlt
lret
sub
insl
and
jl
movb
jge
inc
repz
mov
iret
leave
inc
dec
xchg
and
ss
insb
mov
sti
cmp
pop
sub
sahf
inc
stos
inc
pop
bound
pop
fiaddl
mov
and
je
add
push
jo
popf
lret
mov
ds
aaa
in
inc
cli
mov
sbb
aam
add
sub
mov
mov
mov
xchg
in
and
ljmp
rcll
int3
in
jno
popfw
mov
sub
imul
lea
xor
add
sub
addr16
sub
lods
push
movl
and
cmp
in
and
je
jle
scas
push
adc
xchg
jnp
push
addl
aam
int
fldl
mov
xchg
mov
cmc
pop
sub
dec
jg
and
or
mov
lock
push
jae
xchg
sbb
test
fwait
aam
push
mov
fwait
aad
mov
dec
lret
ljmp
bound
bound
pusha
jb
loop
andps
xlat
test
mov
cmp
aaa
aaa
push
or
fmul
mov
pushf
arpl
dec
stos
mov
and
dec
xchg
xchg
icebp
dec
clc
xchg
adc
outsl
sar
push
inc
insb
movsb
sub
pop
push
and
and
fnsave
inc
jbe
sub
xchg
lret
pop
fimuls
popa
xorl
push
lret
lahf
outsb
mov
xchg
fnstenv
lcall
xor
add
std
push
cmp
repz
outsl
sbb
xor
outsb
mov
push
in
mov
pop
out
lret
scas
aaa
cmpsl
mov
pop
sbb
stos
jns
shrl
ja
mov
adc
jno
sub
scas
ljmp
add
sbb
and
xor
clc
repz
dec
add
mov
jns
aam
pop
sbb
notl
lret
insb
cmc
dec
popa
gs
cltd
int3
xchg
movsb
cmpsb
fadds
or
xchg
inc
je
add
int
mov
jg
xor
repz
lock
stos
mov
ret
adcb
leave
popa
mov
fnstsw
cmp
fnstcw
xor
mov
mov
shll
add
ljmp
and
insb
add
or
sub
xchg
in
jmp
pop
fldl
inc
cmp
andl
dec
add
sub
mov
loop
mov
insl
cmpsl
lods
sub
fdivs
push
mov
ja
and
lods
mov
scas
and
adc
addr16
sti
fcoms
fwait
lods
hlt
sbb
jnp,pt
cmpsb
mov
cmp
and
aaa
mov
insb
adc
jae
cmp
je
hlt
add
push
xor
xor
loopne
pop
je
adc
add
into
sub
and
repnz
ss
ja
and
mov
fnsave
cmp
repz
out
gs
clc
or
lea
in
add
in
mov
pop
adc
sub
inc
jb
cltd
add
repz
push
mov
jo
xor
lret
stc
in
nop
sbb
or
push
inc
mov
sbb
cmpsb
out
xor
popf
cmp
and
xlat
add
dec
aad
xor
pop
inc
sti
or
push
sub
push
aas
divb
pop
xchg
dec
fimull
ret
movsl
mov
add
outsl
sbb
gs
popf
lcall
dec
stc
lock
push
loopne
cmc
insb
pop
jge
adc
or
out
jae
sub
push
inc
dec
push
adc
scas
inc
mov
je
lret
adc
xor
lret
in
insb
cmp
jecxz
adc
test
jp
xor
iret
mov
cmpsl
test
fwait
call
leave
mov
mov
aas
jg
dec
mov
push
stc
sbb
jmp
cs
push
or
aaa
inc
jo
add
cmpsb
in
cmp
hlt
and
fsts
and
int
cmpsb
imul
adc
mov
les
je
or
adc
or
add
inc
add
pop
xchg
outsl
in
cmc
rolb
cmp
in
cmp
cmp
inc
int
pop
xchg
add
add
jmp
lods
mov
dec
push
lret
sbb
cli
pop
dec
mov
adc
dec
or
cwtl
mov
jle
pop
mov
cmc
movsl
nop
push
jmp
mov
daa
push
xchg
daa
xor
pop
ljmp
mulb
enter
jg
pop
les
mov
mov
adc
lds
lahf
sbb
add
fxch
xor
sub
test
popa
popf
sbb
mov
add
and
mov
jns
popa
mov
dec
jp
mov
jb
inc
shlb
mov
loope
mov
lods
adc
pop
mov
in
stc
sti
aaa
aaa
mov
movsb
stos
dec
shrb
dec
add
jne
jl
std
jno
cli
ror
push
stos
in
sti
fs
mov
fcomps
xor
mov
and
lahf
jmp
jge
fs
pusha
lret
aad
das
xchg
mov
iret
data16
cld
jg
pop
sbb
fdivr
jp
mov
loopne
pop
bound
push
push
inc
notl
adc
xchg
lahf
xchg
outsl
sub
lock
mov
mov
mov
loope
push
hlt
xor
cmp
and
push
adc
in
addb
loop
insb
jns
mov
inc
imul
pop
dec
sub
rcrb
cmp
dec
cmp
hlt
std
jnp
aam
jmp
ret
loopne
mov
arpl
xchg
leave
call
ja
addr16
js
cmp
lcall
bound
int
out
jns
repnz
dec
fsubrp
test
enter
cs
stc
jge
jb
addr16
test
and
xor
lods
add
sbb
lds
mov
mov
fwait
cs
cmp
mov
mov
daa
inc
les
cli
cmp
push
jge
and
or
fbld
pushf
mov
mov
int3
fwait
repnz
cmp
and
xlat
xchg
xor
repnz
ret
mov
pop
mov
leave
test
lret
or
dec
test
rcrl
std
add
stos
jl
das
iret
inc
adc
das
jbe
cmpsl
sbb
ja
sbb
mov
cltd
addr16
iret
pop
je
pop
clc
in
sbb
std
test
mov
push
mov
outsl
jge
xchg
fbld
in
sahf
mov
cmp
mov
add
loope
and
and
fstps
bound
fcoml
pop
cmp
cmpsl
sti
imull
jg
inc
test
and
pop
mov
xchg
nop
inc
pop
mov
call
cmp
mov
loopne
push
test
jg
lods
add
sbb
test
pop
jmp
mov
xor
jp
lea
js
or
aad
lods
pushf
das
and
fwait
jno
aas
push
dec
dec
lock
bound
test
cmp
cs
je,pn
dec
sub
inc
dec
fiadds
mov
jle
bound
inc
pop
xchg
sbb
xchg
xlat
push
jns
inc
add
adc
mov
push
mov
dec
std
add
push
push
cltd
movsl
dec
mov
sbb
loope
dec
cmp
mov
pop
pop
in
lds
ljmp
jp
fmuls
jecxz
cmpsl
inc
add
gs
aam
inc
test
adc
enter
mov
push
lods
repz
mov
pop
int3
inc
push
mov
push
adc
jmp
mov
inc
js
fstps
popf
sub
mov
cmp
push
pusha
loopne
add
and
lods
rcrl
cmp
dec
filds
fldl
cmpsl
jl
bound
sub
jae
dec
int3
xchg
pop
push
jo
cmpsb
ljmp
jge
je
incl
or
sbb
nop
jnp
push
enter
inc
jl
inc
and
insb
inc
pop
js
push
icebp
dec
aam
mov
pop
cld
stc
lock
cltd
loopne
mov
sarl
das
and
push
dec
dec
pop
and
roll
enter
sub
cli
xor
add
ret
jae
rorb
aam
lret
fiaddl
sti
mov
jmp
ror
or
adc
insb
xor
es
js
fiadds
add
enter
ds
xor
sub
add
decb
jns
test
cli
jg
add
sti
mov
sti
inc
dec
pusha
xchg
xor
lret
icebp
xor
inc
icebp
repnz
xchg
int3
cwtl
aad
divb
jl
xor
cmc
adc
cmpsl
mov
xor
inc
or
cmp
lret
xchg
add
sub
jbe
sahf
dec
xchg
inc
dec
xor
cwtl
inc
cld
pop
adc
adc
mov
xor
mov
jp
pop
stc
or
mov
mov
inc
mov
inc
int
scas
or
fmuls
mov
aad
mov
cmp
sahf
mov
jmp
pop
cmp
pop
imull
lret
pop
cwtl
aam
mov
xor
xor
int
or
sbb
push
inc
fldenv
out
mov
adc
mov
mov
test
lds
sbb
xchg
addb
mov
xor
rorl
xor
loopne
inc
cmp
shl
stc
aad
inc
and
cld
nop
es
cmp
mov
cmp
xchg
iret
jmp
lea
jle
lods
outsb
or
lods
int
adc
int
jne
and
dec
jns
pushf
dec
pop
sbb
mov
lahf
into
loope
mov
adc
call
xor
mov
out
fdivrs
pusha
jno
popl
xchg
mov
lock
std
insl
lds
lock
loopne
aaa
rorl
inc
rcl
in
mov
push
push
mov
mov
cmp
scas
cmc
jmp
and
pop
xchg
lret
inc
shl
dec
xor
xchg
jno
pushf
mov
and
sub
pushf
adc
mov
and
xchg
lods
loop
mov
add
jne
xchg
out
stos
or
lds
dec
jge
mov
ret
xchg
adc
loope
mov
dec
jae
sub
aam
fcmovu
inc
xchg
add
push
test
adc
fwait
orb
or
mov
add
dec
sub
adc
loope
or
pop
or
and
sti
and
jmp
pop
popa
add
loop
jge
pop
data16
adc
das
fdivl
or
pop
inc
hlt
push
repz
and
clc
sbb
jne
leave
adc
call
cmp
or
pop
lahf
inc
mov
scas
push
and
sbb
sub
repz
mov
xor
repz
pop
jmp
sub
pop
fldenv
cld
jmp
ret
xlat
cld
cmpsl
inc
cltd
stos
mov
stos
push
imul
inc
mov
mov
or
fidivs
inc
jns
jge
pushf
push
cwtl
jnp
mov
std
nop
cmc
sbb
popf
push
in
and
push
jb
shlb
insl
and
adc
mov
imulb
dec
mov
cltd
xchg
jle
aad
xchg
xchg
pop
or
xor
loop
adc
loope
add
lock
sahf
in
rclb
ja
sbb
ret
inc
mov
call
lret
js
lods
outsb
movb
lock
cmp
mov
ss
shlb
lret
sub
ret
jmp
inc
or
add
sbb
push
data16
imul
mov
and
sub
mov
stc
dec
fwait
mov
cwtl
xorb
push
fldl
ja
fcmovbe
dec
sbb
mov
add
mov
sahf
jb
dec
popa
jg
or
cltd
adc
inc
dec
cmc
jge
and
mov
and
jbe
cltd
daa
mov
and
mov
out
add
push
mov
jae
inc
and
jg
mov
test
cmpsl
inc
adc
mov
cmpsl
repnz
sbbl
dec
inc
adc
push
lock
into
jp
jle
fcompl
es
jne
dec
mov
ret
or
lret
clc
lahf
xor
mov
dec
sub
cwtl
mov
fisubs
cmp
aaa
xor
push
cltd
ja
mov
sbb
mov
mov
mov
mov
cli
dec
int
mov
mov
mov
mov
in
jnp
stos
mov
pop
stos
mov
push
pop
mov
insl
lea
jne
out
icebp
adc
fnstcw
lahf
outsb
fnstsw
es
test
sbb
adc
and
xor
dec
mov
cs
lahf
dec
gs
aaa
xchg
pushf
jmp
jg
cmp
aas
clc
ljmp
push
call
sbb
mov
ret
les
das
cmpsb
and
mov
hlt
jmp
scas
inc
lret
dec
enter
cmp
stos
call
scas
arpl
sbb
inc
xor
andb
sub
nop
jp
repnz
dec
or
scas
push
testb
aas
ror
enter
adc
inc
les
bnd
adc
adc
mov
jbe
inc
pop
out
pop
pop
jp
mov
xchg
scas
je
std
jg
scas
fdivr
xor
xchg
xchg
fidivrs
jecxz
shlb
ds
int
mov
js
dec
xchg
roll
out
inc
adc
bound
lea
xchg
sub
outsb
fldl
incb
push
xorb
stos
mov
mov
xchg
mov
fldpi
addb
jo
xor
jne
xor
lods
inc
push
pop
inc
mov
outsl
dec
add
dec
loopne
ret
ja
add
inc
and
xchg
push
aad
rolb
sbb
inc
loop
cmp
fisubs
sub
loop
xchg
jns
les
dec
movsl
stos
fsts
movsl
mov
dec
jg
cli
enter
cmpsb
xchg
or
sbb
es
xorb
sub
push
adc
jecxz
scas
loopne
push
pop
stos
xor
push
pop
mov
mov
mov
test
push
add
test
jb
leave
mov
mov
cltd
cld
bound
jae
xchg
movsl
icebp
scas
or
jne
sbb
test
add
rcrb
sbb
shr
enter
aam
aam
jg
imul
push
je
pop
mov
dec
jmp
pop
jmp
xor
jecxz
mov
mov
xchg
cmpb
mov
cmpsb
mov
xchg
jmp
mov
xlat
mov
pop
stc
popf
or
sub
lret
pop
xchg
and
fisubs
adc
xchg
shl
scas
imul
pop
movsb
ljmp
jg
mov
xchg
jne
jl
movsl
sub
into
jns
test
adc
imul
add
mov
cltd
push
push
stos
fsub
xor
ss
add
or
ja
adc
testl
xor
sub
sbb
dec
dec
or
adc
push
push
nop
jo
imul
and
cmp
cmp
outsb
gs
scas
adc
scas
js
jl
push
inc
aas
lock
cmpsb
out
negb
scas
in
jno
dec
push
jmp
sub
leave
cmp
mov
cmpsb
jbe
pop
nop
push
or
es
fsubr
xchg
ds
lods
movsl
fnstsw
in
add
test
mov
aad
jmp
cmpsl
mov
jmp
cmpsl
mov
jmp
cmpsl
mov
jmp
cmpsl
mov
jmp
cmpsl
mov
jmp
cmpsl
mov
jmp
cmpsl
mov
jmp
cmpsl
mov
jmp
cmpsl
mov
push
dec
mov
lret
sbb
push
fisttpl
mov
jp
loope
mov
fidivs
jno
sub
add
leave
mov
dec
sbb
inc
or
icebp
jmp
loope
xchg
adc
sub
out
or
call
fsqrt
out
jae
mov
in
gs
sub
mov
cmpsl
jecxz
push
scas
adc
ja
jo
sbb
fucomip
and
pop
xchg
stos
pop
or
shll
inc
arpl
rcll
into
lret
rcll
sbb
adc
pop
test
mov
cmpsb
testb
fstpl
ds
sbb
in
push
mov
loopne
pop
pop
ljmp
in
adc
xchg
je
pop
notb
jg
xor
sbb
sub
xchg
shl
lahf
aaa
or
hlt
scas
adc
rcll
inc
mov
cwtl
lods
jmp
mov
stc
or
or
inc
lret
pop
push
add
push
mov
pop
or
sub
mov
sti
loopne
jns
pop
mov
pop
adcb
mov
jp
cmpsb
insb
push
cltd
adc
add
test
iret
pop
jne
cltd
out
push
jo
mov
scas
push
and
test
int3
dec
inc
lcall
mov
cli
push
testb
or
lods
ret
mov
cli
lds
and
jnp
in
add
dec
xchg
and
pop
aad
lret
roll
fs
dec
int3
mov
shl
fldl
cmp
push
jp
leave
add
cmp
cli
ss
inc
in
test
and
jno
or
push
jns
mov
xchg
lock
mov
sub
mov
adc
add
xor
jae
sbb
sub
push
loope
das
scas
or
in
fdivl
rcr
es
xchg
out
les
sahf
inc
test
or
adc
loope
scas
shll
repnz
in
jo
hlt
sarl
jnp
cltd
sbb
pop
xor
dec
or
or
ret
rcll
lret
add
and
and
repnz
jl
xor
sub
or
xchg
xchg
leave
xchg
out
push
arpl
movl
push
icebp
mov
lea
push
iret
xchg
fsub
push
mov
scas
and
iret
xor
movsl
cmp
daa
xchg
stos
out
test
and
push
inc
jbe
cmp
and
fwait
scas
and
xor
jmp
pop
mov
ds
sub
std
js
rcl
xchg
adc
push
js
std
ljmp
out
iret
idivl
lcall
xor
jae
movsb
and
sub
add
adc
inc
fnstenv
sub
jp
into
int
jno
push
ljmp
notl
jo
mov
call
jmp
aam
enter
mov
aam
xor
dec
or
mov
mov
cmc
xchg
hlt
fcomip
pop
in
test
imul
nop
dec
pop
pop
lds
out
mov
push
in
push
cli
lret
adc
jae,pt
and
inc
mov
pop
sub
out
test
or
mov
push
testl
pushf
enter
sahf
xchg
mov
in
push
mov
sbb
jge
insb
dec
shlb
sbb
outsl
jecxz
push
fnstenv
inc
adc
fists
jge
into
push
rcrl
je
mov
xchg
jg
in
adc
fxch
leave
push
jno
lea
pop
clc
add
mov
mov
fsubl
mov
pop
jl
in
pop
jne
ljmp
xlat
or
and
lret
fisttps
add
jge
shll
mov
jo
fistpl
jae
and
ret
pop
cli
rcll
push
cmpsb
out
aam
push
out
mov
jo
fdivs
add
lahf
xchg
xchg
jno
mov
cmp
fdivl
and
mov
mov
repz
lret
mov
lds
push
aam
add
pop
pop
mov
out
xchg
jmp
xor
popf
test
decb
push
ret
sub
lcall
and
push
xchg
shlb
fwait
shll
inc
and
in
sbb
cmp
sahf
jns
pop
mov
cld
pop
xorl
add
sub
push
movsl
mov
mov
cmp
inc
xchg
adc
shrb
mov
repnz
sbb
sub
imul
addb
push
xchg
popf
rclb
fistl
inc
sub
lods
xor
cs
or
or
repnz
mov
popa
mov
out
lock
sbb
test
orl
loop
jns
and
outsb
test
jmp
jae
sbb
mov
dec
sub
addr16
inc
fwait
add
mov
xor
pusha
mov
mov
dec
bswap
mov
pop
hlt
adc
push
adc
or
mov
adc
aas
xor
nop
or
push
gs
pop
add
mov
aaa
call
test
adc
rorb
fidivrl
stos
in
or
jne
int
jl
fdivrl
sahf
mov
rcll
insl
dec
or
adc
nop
adc
fcoms
or
xorl
popa
repnz
jne
mov
int
ljmp
outsb
sub
sub
mov
pop
jns
xchg
sub
outsb
sbb
and
and
lahf
jno
ret
cmp
std
stos
incl
mov
addr16
push
jmp
push
sbb
pop
sub
fldl
jb
js
xor
xor
aad
jle
adc
lods
inc
fdivrl
sahf
fnstenvs
cmc
add
and
decb
imulb
loope
movb
ja
cmp
scas
fimull
lret
xchg
and
bound
out
xchg
cltd
adc
pop
sub
or
movsb
push
vmwrite
pop
je
xchg
fistl
sar
sub
jae
inc
xor
jge
fsub
mov
inc
cltd
pop
mull
jge
adc
js
fsubrs
imul
fs
es
aad
aaa
xchg
mov
xor
in
jns
jmp
jge
shrb
push
insl
pop
cmpsb
data16
and
jb
xchg
and
push
xchg
pusha
jo
mov
xor
sbb
or
mov
dec
jae
mov
mov
or
aad
jno
sub
mov
lods
movsl
mov
addl
inc
mov
push
and
cltd
xor
lret
mov
lret
xchg
mov
dec
data16
lea
fs
gs
or
std
jg
rorb
xor
inc
and
sarb
jo
outsl
inc
cmc
aas
add
xlat
fwait
add
iret
test
xlat
loope
adc
mov
inc
pop
xchg
outsb
aad
movsb
adc
sahf
jp
icebp
dec
jmp
inc
sbb
out
aam
jge
mov
nop
les
sub
movsl
adc
dec
dec
daa
pop
jno
mov
sbb
mov
sbb
inc
push
pop
push
inc
arpl
cmp
imul
mov
and
decb
xor
mov
mov
push
xchg
mov
adc
adc
dec
mov
out
cmpb
arpl
add
fnstenv
je
jl
mov
lds
cmp
push
cld
scas
jge
ljmp
adc
aam
dec
nop
sbb
jne
dec
mov
push
loop
outsb
stos
xchg
jecxz
mov
out
repz
lcall
or
pop
sub
dec
mov
movsb
mov
dec
or
push
std
scas
pop
adc
arpl
gs
loope
jecxz
xchg
fwait
in
fwait
sbb
sbb
xchg
add
or
in
ja
das
mov
sbb
lcall
mov
ljmp
fimull
add
adc
pusha
aaa
das
dec
cwtl
or
mov
xor
and
icebp
xor
enter
xchg
in
je
or
int
out
dec
adc
mov
ljmp
int
adc
mov
shl
xor
and
test
negb
shll
sti
repz
ds
dec
sub
gs
leave
dec
push
mov
adc
inc
enter
lret
pop
cmp
cmp
stos
jecxz
mov
sub
sahf
xchg
inc
out
and
or
jle
in
sub
lods
lret
sub
popa
mov
xchg
push
enter
or
enter
clc
jg
jnp
pop
pop
add
test
int
jp
pop
imul
jle
pusha
pop
sub
test
ret
lea
and
mov
jge
pop
or
inc
ss
cmp
push
loopne
scas
sarl
add
cld
pop
daa
lret
or
xchg
pop
insb
mov
pop
lods
jo
mov
push
mov
ret
sub
cs
push
cwtl
mov
cmp
out
dec
push
outsl
push
js
sub
lods
add
mov
xor
loopne
push
pop
mov
adcl
outsb
sub
push
js
movsl
add
daa
adcb
daa
sub
imul
les
sbb
lret
mov
notb
jnp
sbb
sbb
lcall
les
aas
pop
aam
mov
gs
adc
ljmp
pusha
fwait
push
inc
aaa
fwait
mov
add
or
ss
pop
mov
pop
mov
popf
cmpsl
bound
jae
out
movsb
outsb
daa
ljmp
hlt
sti
or
cmp
rorl
and
adc
outsb
mov
lahf
mov
jmp
xor
sbb
jne
or
aas
jle
test
xchg
in
in
and
fucomi
xor
cmp
js
std
mov
and
out
pop
icebp
sub
mov
jp
addr16
jle
jns
jo
cmp
jge
mov
add
fidivrl
pop
dec
cmpsl
rol
enter
lock
addl
cmpsb
out
pop
icebp
cli
push
mov
pop
cmp
adc
movsb
mov
add
movsl
push
stos
insb
loopne
and
adc
push
inc
les
movsb
pop
out
jle
sbb
loop
sarb
pop
mov
movsl
jmp
push
fadd
enter
mov
outsb
mov
and
sub
inc
pop
fidivrl
movb
or
movsl
ret
jmp
push
fcomip
xor
xchg
ret
cwtl
test
testb
cmp
sahf
out
pop
fcoms
or
mov
xor
add
xorl
imul
repz
ds
int
mulb
out
insl
mov
addb
mov
mov
imul
add
cmpsb
mov
in
enter
dec
add
pop
sub
cwtl
inc
rcrb
mov
cs
xchg
jns
xor
mov
mov
mov
mov
mov
mov
adcl
jl
add
pop
arpl
dec
mov
fidivrl
les
shrb
inc
cmc
push
cltd
arpl
scas
mov
call
fdivrs
data16
bound
cmp
cltd
test
daa
std
fdiv
popa
push
or
xchg
lds
fsubrl
inc
addr16
jnp
pop
or
ret
jo
sub
sahf
jp
cli
stos
mov
popf
inc
mov
xchg
or
adc
sbb
test
out
xchg
and
mov
push
jae
ljmp
jl
repz
mov
call
orl
ss
loop
jb
sbb
sub
arpl
push
das
jo
repz
dec
jge
jg
lcall
data16
or
cmp
jns
dec
std
hlt
divb
into
pop
dec
add
adc
out
lret
mov
cmp
arpl
and
test
jmp
and
cmc
fiadds
loop
fimuls
in
scas
lock
mov
push
mov
movsb
mov
mov
xlat
push
out
loopne
lds
test
loope
mov
pop
test
xchg
mov
mov
add
push
clc
outsb
pop
sti
dec
inc
pusha
incl
sbb
icebp
add
mov
test
les
stc
pop
gs
pop
test
mov
int3
pop
aaa
enter
push
xchg
gs
imul
loop
xchg
mov
movb
daa
cmp
mov
and
xchg
sub
mov
jne
jns
aaa
pop
iret
loop
cmp
mov
cmpsb
popl
es
ljmp
xor
mov
jge
jne
cwtl
cmp
lock
cwtl
lds
mov
jnp
push
in
mov
dec
mov
mov
jg
je
insl
xor
jo
daa
test
ljmp
adc
call
imul
mov
test
sub
movsl
dec
push
out
adc
inc
out
cmp
mov
addr16
pop
gs
dec
rorl
ret
repnz
lahf
jl
mov
mov
xchg
jb
push
and
out
rclb
mov
xor
inc
xor
clc
and
xchg
xchg
sub
pusha
sub
inc
sbb
cs
into
dec
bound
rcrb
sbb
fistl
rclb
sbb
pusha
js
repnz
outsl
adc
es
adcl
stos
pop
lret
shll
pop
or
rolb
fisttpll
sub
jle
aam
xchg
ljmp
cmp
jle
adc
push
gs
imul
ja
cli
lret
pop
mov
adc
xchg
dec
das
test
dec
int
push
sahf
mov
scas
cwtl
data16
inc
adcl
add
or
lahf
out
imull
xchg
pop
inc
lock
out
rorl
xor
push
mov
add
xor
mov
mov
cmp
or
adc
push
aam
inc
xchg
mov
fwait
xlat
adc
sarl
adc
mov
adcl
cld
imul
daa
ljmp
adc
pop
pop
cltd
mov
pushl
lcall
in
dec
inc
data16
cmc
movsb
adcb
test
add
lock
or
mov
sti
pop
es
xor
pop
loop
out
rclb
pop
adc
mov
lret
pop
dec
xchg
pop
imul
adc
xchg
in
mov
bound
xchg
push
dec
mov
mov
rclb
cld
cltd
jl
mov
cs
pop
dec
sub
fldenv
push
jns
jns
pop
jl
sub
sbb
pop
or
loop
mov
pop
and
pop
cwtl
call
es
push
mov
imul
or
inc
nop
mov
scas
ret
pop
add
repz
stos
lret
call
xchg
loop
xor
mov
addb
in
dec
hlt
out
mov
ret
sarl
hlt
sti
and
xlat
outsb
add
pop
aad
dec
sbb
jo
push
xchg
lock
lahf
xchg
push
jne
lods
cmp
stos
xor
add
jnp
mov
xor
and
mov
xor
xchg
mov
xchg
mov
outsl
negb
ss
stos
enter
js
xchg
stos
sbb
dec
sbb
adc
mov
or
lds
mov
mov
fildll
aaa
out
mov
xlat
mov
mov
xchg
push
test
and
cmpsl
ljmp
js
xchg
cs
add
or
push
ss
ljmp
jle
ja
int
jmp
sbb
mov
sub
aas
nop
mov
neg
mov
cltd
lock
inc
cltd
mul
and
pop
jge
jmp
lea
ret
imul
xor
ret
pop
sub
sbb
in
fistpl
fldcw
and
dec
es
xchg
shrb
and
ret
aas
lock
fisttpll
jmp
sbb
shr
sbb
fists
subb
fdivl
hlt
mov
jle
push
cltd
int
shlb
lock
cltd
mov
fcomps
scas
and
inc
sbb
icebp
fmull
in
inc
mov
xlat
fdivs
call
mov
in
cld
dec
popf
cmp
sub
shlb
in
mov
or
lods
xchg
test
sbb
mov
cmp
xchg
mov
ja
fwait
xchg
mov
test
and
jb
push
xor
xorb
lods
sub
in
bound
mov
push
fs
sub
call
insl
fwait
mov
mov
xacquire
fldl
mov
xlat
out
sahf
into
sub
mov
jge
jg
leave
arpl
sub
and
mov
int
test
lahf
xchg
cmpsb
push
sub
mov
cmpsb
and
lcallw
jg
out
gs
mov
inc
cmp
std
arpl
fadds
lret
sbb
push
mov
cs
adc
stos
sub
outsl
rcrb
test
imul
push
movsl
lds
das
ss
dec
cltd
mov
fcmovb
or
test
lcall
pop
pop
testb
test
mov
adc
leave
outsl
push
mov
lds
xchg
in
out
addb
iret
push
ja
mov
xchg
hlt
jo
xor
cli
and
popa
pop
dec
push
push
into
in
mov
dec
repz
scas
sbb
lock
inc
sbb
imul
les
push
aam
std
ficoml
dec
push
sbb
mov
sub
adc
xchg
pop
mov
add
or
jl
push
pop
push
adc
ret
pop
in
mov
es
subl
xchg
cmp
cmpl
cltd
sti
xlat
add
fistps
xchg
jnp
mov
push
fnsave
fcom
dec
test
jo
mov
pop
mov
mov
bound
fbstp
sbb
add
ljmp
outsl
loopne
pop
pop
mul
sub
in
rcr
mov
in
xchg
sub
enter
je
popf
outsl
shrl
push
xchg
mov
pop
pop
xchg
jo
cmp
xor
push
sti
inc
xchg
pop
test
jl
mov
push
ljmp
ljmp
inc
aaa
mov
push
jo
imul
mov
pop
scas
imul
mov
push
inc
mov
test
jecxz,pn
repz
jae
pop
rdpmc
inc
cmp
push
scas
int3
rcrl
jle
pop
ss
sub
sub
cmpsb
jno
push
aad
sub
dec
jp
loope
sbb
mov
mov
cwtl
mov
out
rcl
cmp
divl
pop
nop
ret
pusha
lock
sbbl
mov
pop
jecxz
scas
into
add
mov
xchg
or
lea
iret
adc
fistl
cmp
mov
int3
pop
bound
push
mov
jo
mov
mov
jno
je
sub
pop
cwtl
ja
outsb
sub
cwtl
into
into
dec
out
push
sub
das
xor
jne
iret
outsl
pop
inc
cwtl
add
fistl
jge
das
dec
and
xchg
push
mov
enter
aaa
pop
xor
icebp
mov
push
cld
mov
xor
and
lahf
cmp
jle
lods
sub
bound
icebp
cli
jne
push
pop
ret
pushf
je
outsl
jae
je
sarl
fcmovbe
mov
pop
lcall
outsb
or
daa
pop
sti
push
cmp
mov
movsb
adc
jmp
into
into
xchg
into
mov
ss
add
test
add
pop
dec
addr16
adc
clc
loope
cmpsl
pop
mov
std
repnz
imul
and
jmp
jge
movsl
push
clc
mov
rcrb
and
int3
fwait
loop
imull
and
insb
mov
mov
push
call
mov
or
adc
ffree
dec
mov
cmp
mov
adc
in
xchg
addl
cli
std
pop
mov
mov
push
pop
xchg
lret
sti
inc
jge
int3
stos
mov
idivb
mov
push
mov
fwait
sbbl
adcb
cmc
push
mov
cmp
xor
adc
gs
add
inc
jb
mov
mov
repnz
arpl
jo
std
lock
in
mov
shll
pop
fidivrs
jecxz
xor
mov
mov
mov
push
pop
lock
jl
push
out
inc
xchg
mov
cmp
icebp
or
cmp
adc
notl
lret
adc
mov
xchg
cmpb
leave
ficoml
pop
int3
sub
popa
js
push
dec
adc
daa
leave
jb
enter
add
mov
lock
mov
sub
mov
cld
mov
inc
jo
lods
pop
mov
jbe
jb
cmpsb
pop
pop
stos
xor
add
xor
test
dec
adc
mov
inc
jecxz
mov
iret
sub
aam
cmc
lods
or
inc
pop
imul
ja
sub
inc
push
into
gs
mov
dec
inc
xchg
mov
mov
sbb
mov
push
jne
fistpll
lods
mov
repnz
test
xor
push
rcrb
dec
bndstx
loopne
add
cmpsl
cmp
mov
xchg
mov
mov
hlt
repnz
cs
and
arpl
jbe
negb
push
jno
cwtl
mov
xor
dec
lods
ja
or
popa
mov
add
push
movsl
lock
mov
dec
cmp
pop
rcrb
add
push
fcmovu
cmpsb
cmc
shlb
inc
or
scas
addr16
jle
cmpsl
sbb
fistpl
cmp
mov
jns
and
popa
mov
fcoms
cmc
ds
lea
shr
aaa
jae
out
push
add
bound
ret
mov
outsb
xor
jge
or
int
fisttpl
xor
add
push
add
ret
or
rcll
jno
push
pop
cmp
loope
dec
xchg
fidivs
lea
cmp
cli
fildll
mov
test
aaa
jno
sbb
pop
add
in
mov
mov
test
lcall
lods
sbb
add
ja
and
cmp
xlat
push
fldl
sbb
mov
data16
push
cmp
or
ljmp
push
mov
xor
mov
adcb
outsl
xchg
hlt
mov
lret
mov
shll
cwtl
fadds
xor
push
ret
fwait
repnz
mov
push
stos
shll
lods
cmp
int3
dec
jl
cmp
push
mov
sbb
aad
and
jbe
xchg
inc
outsl
lret
lds
stos
xor
push
divl
les
and
push
dec
adc
push
mov
jne
xor
jbe
test
inc
jnp
and
push
cmp
cmp
popa
in
xlat
divb
sub
pop
xchg
lea
mov
mov
mov
int
cld
aas
pop
jl
fcmovu
out
xchg
in
adc
adc
push
lcall
or
aad
fs
mov
mov
mov
icebp
nop
int3
or
xor
fstpl
cli
jbe
adc
mov
lods
lods
push
test
mov
cwtl
and
scas
inc
dec
pop
xchg
xor
cmp
fs
scas
cmp
xor
add
xchg
repz
inc
aas
sbb
pop
imul
iret
xchg
xor
stos
xchg
add
mulb
mov
or
pop
cmp
popf
test
call
pusha
gs
sub
sbb
aam
mov
stos
mov
sub
in
sbb
push
dec
lods
xchg
dec
push
imul
inc
fcoms
test
dec
jle
into
aaa
jp
rolb
jg
pxor
loop
push
lock
daa
xor
lret
add
sahf
arpl
outsl
rol
dec
jns
and
inc
inc
loope
mov
mov
jbe
cmpsb
and
inc
iret
push
jo
sub
mov
popf
and
pop
or
in
mov
sbb
inc
aad
mov
test
adc
xorl
cmp
pop
aam
daa
fistpll
dec
cmc
inc
lods
push
xchg
mull
or
mov
cmc
aas
pusha
dec
dec
repnz
ja
sbb
loop
jo
pop
adc
mov
push
pop
xor
inc
pop
stos
scas
into
mov
shlb
fsubs
sbb
ss
sub
sub
push
test
push
jg
mov
fisttpll
cltd
aam
mov
test
sub
cmovge
inc
or
sub
sbb
roll
and
dec
dec
sub
arpl
dec
mov
xchg
cmpxchg
shlb
stc
adc
mov
stc
loopne
or
das
jns
clc
ret
fidivrs
aad
push
outsl
pop
xor
lret
stos
inc
dec
cmpsb
mov
movsb
lods
loope
cmp
push
rol
mov
cmpsb
test
roll
inc
daa
jle
lret
mov
xor
fstpl
xchg
or
popa
incl
mov
jmp
mov
scas
adc
ds
stc
inc
pop
sarb
popf
fdiv
hlt
dec
out
inc
sub
inc
xchg
and
test
or
lret
cmc
repz
fadds
cmpsb
ret
mov
imul
out
call
mov
push
insb
std
xor
popa
adc
iret
xchg
mov
je
imul
adc
movsl
scas
popa
test
enter
push
aad
xor
sub
push
xchg
jge
pcmpeqd
and
fcmovbe
in
cs
or
sahf
jge
cmp
lcall
in
stc
scas
mov
sti
shll
out
out
mov
popf
jecxz
jmp
out
enter
inc
stos
push
dec
sbb
mov
xor
jge
push
pop
loopne
das
mov
push
int
nop
shr
fidivrs
pop
or
dec
sub
push
mov
repz
pop
inc
int3
jne
dec
ss
add
hlt
pushf
mov
and
sbb
daa
out
ret
call
enter
inc
divb
insb
mov
sbb
and
imul
int3
mov
xor
jle
inc
sub
hlt
sub
dec
fs
out
pop
or
jmp
movsl
cltd
sub
dec
test
int3
sub
push
nop
cmp
xor
push
mov
shrl
stos
nop
sub
xchg
fisttpll
xor
and
push
ss
jo
cmpsl
xlat
lds
sbbb
fdiv
cmp
xlat
mov
or
and
cmp
in
push
test
dec
ret
fs
add
loopne
sbb
mov
je
lahf
scas
decb
mov
out
or
cli
adc
and
in
sbb
mov
dec
sub
mov
in
adc
cmp
imul
lret
icebp
dec
dec
ds
push
pcmpgtw
insl
sbb
add
int
xchg
mov
cwtl
addl
pop
or
lret
jle
sbb
addr16
hlt
mov
push
inc
cmp
out
push
or
sbb
popa
sbb
pop
rclb
xchg
push
ljmp
in
pop
test
add
scas
fwait
dec
sub
aas
repnz
rcll
mov
in
ljmp
ds
lret
enter
pop
dec
cmp
mov
es
mov
stos
add
das
enter
clc
or
push
jae
imul
in
shll
call
and
push
pop
sahf
xchg
jb
or
lret
add
out
push
std
push
pusha
jae
std
popa
mov
jl
add
push
dec
in
pop
adc
nop
out
xor
or
ljmp
arpl
mov
jmp
xor
or
sub
and
push
push
or
dec
sbbb
lea
or
int
aaa
jmp
push
rcl
cmp
test
mov
push
cwtl
mov
fisttpll
inc
xchg
sbb
dec
pop
subb
dec
aam
push
add
movsl
pop
dec
cld
stos
push
imul
mov
aam
movsb
adc
gs
test
jb
and
test
fdivrp
push
out
xor
dec
das
fldl
inc
insl
xchg
push
test
cmc
push
mov
dec
fldenv
in
mov
mov
xacquire
sub
adc
and
cmpsl
mov
in
ficompl
fistl
xchg
icebp
mov
inc
inc
mov
lea
adc
fsubrs
fcmovb
hlt
pop
sbb
push
adc
loope
das
xor
outsb
cmp
dec
xor
outsl
pop
push
jne
inc
or
mov
push
xchg
inc
mov
inc
dec
or
inc
xchg
jbe
test
xor
push
rcrb
and
dec
adc
enter
push
nop
imul
or
out
cld
dec
rcrl
push
xor
inc
inc
ja
cmp
mov
jne
movl
and
push
dec
es
mov
addr16
psubusw
xchg
sbb
xchg
and
aaa
xlat
push
std
out
cmpxchg
mov
sbb
xor
imul
mov
pop
outsl
insb
maskmovq
imull
push
movsl
xor
sqrtps
inc
outsb
fnstenv
mov
fs
xchg
push
pop
inc
jge
or
cli
movsb
das
mov
mov
lahf
adc
aaa
dec
sahf
sbb
mov
add
mov
mov
lds
pop
pop
test
add
flds
std
nop
dec
push
fdivp
add
xchg
out
sub
out
imull
into
seta
inc
and
loope
mov
stc
add
xchg
in
stos
cmp
xor
inc
adc
sub
in
push
outsb
lcall
in
fnstcw
aad
pop
push
push
add
stos
mov
dec
aaa
pop
dec
les
ds
push
push
mov
xchg
add
add
lods
subb
add
sub
je
pushf
fwait
inc
pop
sub
orl
movb
cli
cmp
add
test
cmp
cmp
push
add
in
mov
xor
lds
int3
pop
cmp
out
fistl
ret
lea
lcall
addl
jno
mov
mov
lret
loopne
add
push
adc
pop
dec
popf
fsub
loope
cmpsl
in
addr16
aad
sahf
les
pop
lret
mov
mov
ret
std
cmp
xor
jno
mov
ja
pop
mov
test
das
jecxz
mov
pop
and
fcmovnbe
fcoml
adc
mov
cld
out
out
enter
or
fnstsw
jns
pushf
mov
aad
xchg
rcrb
lret
pop
icebp
sbb
pusha
pop
fisttps
outsb
push
es
mov
cmp
mov
enter
nop
mov
mov
inc
scas
lods
add
testl
mov
mov
test
cmp
mov
nop
cmp
jmp
cwtl
pusha
pop
mov
lahf
push
rorl
mov
cli
dec
and
xchg
ja
mov
sbb
inc
repz
addb
pusha
outsb
mov
mov
inc
call
push
jle
dec
xor
mov
push
cmpsb
adc
je
sbb
loopne
push
dec
xor
xchg
mov
icebp
cmp
cmpsl
fs
inc
add
idiv
js
in
subb
xor
imul
adc
into
inc
add
jb
sbb
clc
xchg
pop
adc
mov
rcrb
adcb
push
cs
push
rcrl
add
inc
mov
jmp
lret
dec
mov
aam
ss
mov
flds
pop
adcb
sbb
scas
adc
jl
rclb
xchg
dec
adc
fadd
mov
shlb
xor
notb
rcrb
jbe
add
xchg
mov
ret
mov
std
ljmp
push
cli
push
mov
push
sub
das
shrb
mov
repnz
imul
xchg
scas
orb
in
lret
mov
arpl
add
inc
test
je
in
ret
or
hlt
mov
in
or
insl
mov
insl
leave
or
js
cmp
out
add
and
xor
xor
stos
aad
fsubs
ret
mov
mov
aam
add
pop
xor
pop
cmpb
fsubrs
push
mov
sahf
pop
in
xchg
cmpsb
insl
in
sub
add
jbe
mov
je
outsb
stos
mov
data16
cmp
mov
in
lods
pop
lock
mov
push
sbb
adc
push
std
ss
inc
fisttps
xor
add
add
cmp
pop
jge
mov
int
hlt
mov
jbe
inc
pusha
inc
cmpsb
mov
hlt
sbb
sarl
lret
repnz
lds
andb
ds
loopne
jle
or
and
ljmp
fsubs
int3
ret
daa
xor
or
shr
pusha
es
mov
xor
xor
and
pop
fistl
pop
cmc
mov
sbb
adc
rcrb
mov
test
or
push
das
iret
cltd
push
pop
dec
jo
sub
mov
xchg
xlat
enter
xchg
mov
das
jmp
xchg
mov
pop
inc
aad
mov
ds
xchg
sbb
and
lods
fstl
sbb
popa
add
pusha
das
in
mov
fsts
pop
imul
leave
inc
movsb
aas
movsl
and
aas
and
iret
insb
jne
mov
inc
ss
decb
sub
inc
or
mov
xor
rol
push
xchg
sub
add
jmp
or
adc
insl
fdiv
pop
das
push
and
shrl
push
push
mov
mov
dec
adc
push
pop
pushf
dec
dec
fwait
movsb
insb
fwait
pop
and
mov
add
int
sbb
mov
adcl
jbe
orl
test
mov
int3
rcrb
repnz
pop
inc
dec
lahf
stos
and
lods
loope
js
clc
loope
push
jnp
nop
pop
and
or
sub
addr16
adc
test
rol
loope
int3
icebp
mov
rclb
sub
movsb
sbb
cmp
push
lret
mov
sub
xor
outsb
lock
pusha
outsl
inc
sbb
lock
adc
cmp
pop
ja
hlt
adc
cli
jecxz
adc
mov
jbe
dec
jle
popf
aaa
push
push
lcall
cmc
aad
cmpsl
xor
mov
test
cwtl
mov
aad
pop
mov
shlb
and
or
fdecstp
dec
adc
push
mov
xchg
clc
insb
jmp
aam
int3
inc
dec
mov
sbb
cmpsb
xchg
sub
cli
sbb
fisttpll
cmpsb
add
inc
fcoms
iret
push
in
and
ja
and
cmp
test
push
stos
shrb
insl
lods
mov
sti
dec
sub
and
push
cld
mov
je
rcrb
andl
pop
in
in
bound
xor
inc
jbe
lret
pop
add
jl
clc
rorl
mov
dec
add
test
push
je
jne
pop
jbe
add
jecxz
and
jb
jno
mov
or
bnd
inc
addr16
mov
aaa
loope
cmp
repz
fmuls
sub
mov
movzbl
mov
frstor
loopne
push
push
arpl
outsb
in
xchg
adc
dec
sub
idivl
fstps
push
and
test
ret
sub
insl
les
pop
test
xchg
xor
pop
clc
int
xorb
dec
jl
mov
add
subb
into
lods
mov
cmpsb
das
ds
adc
ljmp
out
ljmp
inc
and
lods
xor
mov
xor
shll
or
les
push
jecxz
and
push
xor
mov
lock
lods
pop
call
lods
es
cli
push
ret
add
enter
mov
pop
mov
les
cmp
cmp
lods
xchg
sub
mov
repz
rorl
cmp
shr
mov
sahf
jbe
mov
icebp
fs
sub
imul
test
js
lahf
std
or
cmp
lods
jne
sbb
pop
sbb
aam
jl
sbb
fimull
ljmp
bound
mov
pop
lcall
ret
lock
inc
int
shlb
add
int3
jne
ja
aad
lea
adc
out
adc
inc
jmp
pop
sub
push
mov
loopne
mov
outsb
mov
addl
aas
dec
mov
inc
addr16
push
push
mov
fwait
mov
mov
je
pusha
push
loope
add
daa
ljmp
ret
inc
imul
ljmp
and
cmp
pop
jl
out
pushfw
in
mov
dec
jl
jae
bound
inc
xchg
inc
sti
ret
sti
sub
xchg
cltd
xor
in
cmc
int3
xchg
jmp
rcrl
aad
xchg
xchg
outsb
xor
mov
ds
iret
jl
mov
aad
mov
clc
push
and
scas
dec
or
fs
push
push
cmp
outsb
scas
adc
dec
movsb
add
imul
xor
fdivrs
lods
out
shll
aad
pusha
mov
xor
lcall
adc
mov
mov
lret
pop
adc
dec
loope
call
mov
ret
push
push
mov
ljmp
push
hlt
adc
jge
xlat
lock
xor
repz
adc
in
mov
sub
pop
test
dec
mov
sbb
inc
aam
pushf
fsubrp
or
dec
cmp
stc
rep
popf
jmp
jbe
inc
add
imul
mov
enter
mov
inc
int
aas
es
daa
adc
inc
sbb
sbb
js
outsb
sbb
jp
push
or
nop
adcl
nop
test
push
dec
mov
jmp
pushf
cmp
mov
inc
ds
movsb
mov
js
testb
insb
call
mov
cmpsl
iret
mov
int3
mov
lahf
outsb
sbb
rclb
sbb
mov
jg
cmc
add
adcl
dec
sbb
mov
shll
iret
fwait
adc
inc
repz
sub
mov
rcll
or
popf
push
outsb
bound
ljmp
pusha
pushf
or
inc
adc
int
xor
adcl
sbb
fmuls
cmp
pop
add
jae
out
sub
sub
add
or
lret
test
push
shll
inc
insb
js
push
jb
and
mov
outsl
jb
add
add
mov
jg
scas
add
cmc
pop
mov
out
mov
es
xchg
sub
push
into
pop
imul
in
scas
divl
add
or
adc
rep
fistl
cmp
pop
sbb
test
in
push
rcrl
clc
push
pop
xchg
or
dec
jne
test
cmp
dec
pop
pop
outsb
popa
pushf
mov
cmc
mov
inc
add
cmp
ret
lea
shl
dec
jg
and
sub
push
rolb
fwait
xor
cmp
add
push
mov
sub
push
mov
sub
loopne
or
rorl
push
jmp
jae
sub
shll
lret
adc
xor
pop
sahf
call
call
cmp
int3
add
dec
add
pusha
cmp
xlat
bound
js
cli
jne
add
addl
push
jmp
pop
xchg
mov
dec
rcl
push
subb
push
fldl
mov
imul
aam
shll
sbb
dec
nop
jl
pop
lds
jp
sub
int
jne
popf
push
sbb
sahf
sahf
sbb
in
jp
nop
daa
loop
insb
jo
shr
in
sub
xlat
xor
mov
sub
cld
aas
rcl
sbb
mov
stc
mov
inc
js
pop
jecxz
xor
adc
lods
xchg
mov
in
into
mov
sbb
in
pop
xor
out
movsl
mov
daa
xor
mov
popf
scas
push
cmc
adc
and
mov
mov
add
jecxz
xchg
std
pop
sub
push
xchg
and
test
xchg
sub
jb
mov
nop
inc
test
bts
repnz
scas
in
je
ja
test
lock
incl
mov
filds
pop
scas
and
or
dec
cltd
mov
xchg
shll
pop
and
mov
xchg
dec
imul
and
cli
insb
shl
xchg
push
fsubrs
enter
adc
add
jnp
das
shll
adc
mov
iret
aaa
xorl
pop
sub
adc
cli
xchg
push
pop
adc
fistl
mov
xor
sahf
call
arpl
cmp
adcl
dec
jb
aas
and
rorl
pop
movsl
cltd
loope
out
cli
inc
xor
push
add
push
std
mov
lret
imulb
iret
inc
pushl
gs
and
mov
lret
mov
cmpsb
xor
aaa
stc
dec
cmp
sahf
pop
sub
ja
lret
jae
mov
mov
and
in
lods
jb
loop
out
loop
dec
adc
shl
adc
shrl
mov
adc
ret
lret
push
xor
adc
pop
jp
push
sbb
js
pop
in
sbb
inc
ds
mov
jecxz
scas
mov
mov
hlt
ds
push
xor
adc
pop
cwtl
sbb
test
lods
jbe
in
jnp
in
aaa
xor
lods
ljmp
push
sub
fsub
xlat
outsb
mov
mov
xchg
js
push
aam
mov
cld
pop
hlt
lds
lret
xor
scas
cld
loope
push
popa
pop
rcr
int
jp
lret
in
test
dec
xor
dec
arpl
pop
fdivrs
mov
and
cmp
into
popa
fmull
js
xchg
test
repnz
les
xchg
or
inc
jnp
adc
and
jge
lret
shl
idivb
les
lods
scas
pop
lods
xor
lock
pop
or
pop
stc
pop
fsubp
loopne
je
stc
fidivl
andl
mov
out
aad
xchg
xchg
rcll
scas
xchg
gs
repz
inc
push
sbb
and
pop
jnp
adc
call
dec
jp
lea
pop
sbb
rolb
sub
test
bound
test
popa
hlt
mov
pushf
mov
lods
pop
mov
mov
icebp
sbb
ds
jbe
cs
shlb
sbb
stos
pop
dec
pop
push
jae,pt
js
int3
sahf
lods
ja
mov
lea
shll
repz
add
mov
pop
fdivrs
cltd
pop
mov
scas
div
fcomi
int
inc
int
sti
xchg
stc
dec
pop
add
int
push
ljmp
adc
test
inc
arpl
insb
mov
xchg
add
add
mov
movsb
mov
mov
and
movsb
sub
push
les
loopne
ret
scas
mov
fildll
sub
pop
fnstcw
mov
and
into
mov
pop
out
cltd
mov
and
xchg
adc
add
xchg
popa
xor
sti
icebp
xchg
cmpsl
into
repz
jp
fsubs
sub
push
mov
pop
xor
mov
dec
jno
aam
push
cmp
out
mov
pop
cmpsl
dec
push
xchg
add
mov
xchg
jnp
fnstenv
je
jno
jle
sarb
mov
xlat
stos
imul
orl
jecxz
xor
in
ficoms
es
mov
sarl
leave
mov
insl
adc
xchg
inc
mov
add
imul
enter
and
jecxz
pushf
stos
mov
fsubp
imul
inc
inc
lods
es
pop
jns
mov
dec
cmp
movsb
push
sbb
fs
lahf
adc
inc
cmpl
push
fs
insl
dec
inc
test
shr
pop
mov
mov
mov
cmpsl
mov
push
pop
inc
mov
out
push
scas
out
jbe
or
stc
or
cmpsb
add
inc
adc
int3
dec
lods
scas
notl
fs
adc
jge
call
cmpl
repz
xchg
jmp
pop
mov
mov
clc
je
lahf
lds
pop
jp
movsl
mov
push
lret
popa
gs
xor
adc
test
mov
sbb
hlt
pusha
test
xchg
bound
xorl
out
test
xor
outsb
into
mov
dec
add
pop
imul
or
mov
xchg
push
jnp
hlt
in
add
fiadds
adc
push
mov
xchg
test
rorl
add
mov
lahf
jmp
mull
movsb
dec
mov
xchg
mov
xchg
cld
mov
cmc
xchg
pop
aad
popf
pop
push
or
cmpsl
mov
lods
push
out
loop
push
xchg
adc
rcrb
movd
ss
aaa
int3
bound
xchg
adcb
push
push
pushf
les
pop
daa
sub
enter
sbb
xor
mov
push
outsl
mov
mov
xor
roll
pop
pop
stc
xchg
and
cld
andl
pop
hlt
popf
daa
jl
cmp
stos
pmulhuw
andl
mov
and
shll
mov
or
nop
xchg
dec
cmp
les
and
mov
addl
cmp
stos
push
or
lret
xchg
imul
cmp
push
cmpsl
push
lds
lcall
popf
ds
icebp
icebp
les
cmp
pop
pop
lcall
inc
movsb
dec
jmp
sub
jne
fwait
in
push
pushf
push
fwait
jo
push
lods
iret
cmp
add
cld
and
mov
fcomp
fildl
jno
je
ficompl
fs
arpl
or
push
inc
add
int3
lea
jl
jnp
test
je
popf
jbe
or
cs
and
pop
add
call
mov
mov
scas
jmp
lock
cmp
mov
rol
jnp
adc
scas
jbe
xabort
pop
or
jb
gs
jg
gs
add
scas
sbb
mov
inc
and
cld
jae
lds
sbb
sbb
inc
jns
divl
mov
mov
xor
fisubl
or
inc
dec
test
jl
add
cli
loope
mov
pusha
push
ret
lret
or
pop
inc
lea
jns
js
into
inc
cmp
jg
gs
scas
mov
mov
cli
sarb
pop
dec
add
mov
pop
scas
lahf
hlt
add
test
add
mov
mov
test
dec
push
mov
rcl
sub
dec
and
jbe
in
flds
fmuls
cmp
leave
pushf
mov
incl
mov
jbe
out
int
aad
dec
jecxz
cltd
jno
test
xchg
cmp
push
mov
lds
xor
adc
cs
push
insl
xor
pop
notb
out
mov
lock
fmull
lcall
pop
imul
inc
lock
jnp
push
pop
jl
imul
fiadds
cmp
rolb
popf
xor
pop
hlt
popa
and
rcrb
std
pop
movsb
jo
aad
dec
cltd
add
xchg
scas
dec
push
scas
int
mov
test
and
add
movsb
fnstsw
andb
fisttpll
aam
pushf
sub
rcll
shrb
cs
mov
adc
xchg
test
neg
test
addb
arpl
xor
inc
mov
nop
sub
lods
push
ficoms
mov
aam
dec
loopne
or
pop
je
mov
movsb
push
jmp
inc
push
cmp
es
jecxz
nop
pop
aaa
xor
hlt
sub
aam
stos
mov
push
add
mov
inc
in
cli
mov
mov
mov
test
cld
enter
inc
stos
cwtl
adc
fdivrs
flds
ret
add
adc
sbb
and
cmpsl
out
adc
push
jno
xchg
mov
outsl
dec
dec
jne
shrl
fwait
mov
add
pop
cmp
fcoml
cmp
std
pop
push
faddp
cmp
rcrl
xor
lret
inc
mov
fsubrs
int3
subl
adc
shr
cmovp
jge
imul
loope
std
int3
and
outsl
pushf
or
add
into
push
cmp
lret
movsb
inc
sbb
dec
repz
pop
xchg
or
loope
mov
inc
shl
jb
dec
outsb
adc
lret
les
lahf
in
dec
add
jge
mov
mov
mov
dec
push
orl
out
out
and
call
pop
push
jb
aam
lds
sbb
push
out
je
aas
jb
add
or
popf
lret
or
fmul
jl
mov
lods
addl
mov
cs
clc
fadds
call
cmp
cmc
daa
mov
and
sti
hlt
mov
add
jl
xor
and
insb
jns
mov
and
sbb
dec
arpl
call
int
push
and
jl
fcomps
sbbl
repz
sti
inc
inc
jp
mov
insl
es
adc
adc
outsb
pop
lret
push
cmpsb
push
inc
mov
scas
sub
stc
mov
enter
push
pop
inc
push
inc
sahf
repz
iret
fidivl
add
jecxz
push
fstpl
xchg
adc
aas
jnp
push
push
push
or
cmpsl
sub
iret
mov
fnstcw
leave
cmp
inc
imul
nop
sti
popf
lds
mov
mov
lea
ds
mov
cmp
sti
cmpsb
sbb
jl
notl
mov
jae
pop
stos
popl
inc
xchg
mov
rorl
jl
jmp
out
sbb
movsb
jl
scas
jle
out
xchg
or
adc
lea
call
out
pop
xchg
int
dec
jae
sub
pop
sbb
scas
jmp
add
mulb
mov
gs
pushf
xor
stos
dec
mov
icebp
mov
iret
mov
push
lret
loope
sahf
arpl
xor
xchg
xorl
enter
mov
icebp
fwait
data16
cmp
cmp
ret
enter
repz
sub
ret
cmp
lret
and
jp
push
jbe
add
mov
and
jl
push
inc
ss
ret
mov
aam
rclb
rorb
dec
mov
aas
sbb
aad
mov
or
outsl
cli
mov
mov
and
mov
insl
test
ltr
fidivrl
js
jmp
in
fbstp
adc
mov
pop
add
jns
std
jp
push
les
rclb
pop
cmp
test
or
sarb
pop
push
ret
fisubs
sub
xchg
movsb
push
jmp
in
ljmp
testb
test
push
sbb
or
jno
stos
repz
cld
int
fs
push
aas
fbstp
pop
repnz
mov
inc
lds
paddsw
imul
scas
cmpsb
and
jmp
iret
inc
cmp
std
sub
mov
pushf
push
cmp
adcb
pop
insl
mov
outsb
sti
data16
incl
test
add
adc
lcall
jge
fisttpl
je
mov
mov
cwtl
sbb
mov
shlb
mov
ret
or
xchg
push
in
cmp
rcll
xchg
push
lret
ss
in
cli
or
add
cmpsb
shr
or
jbe
inc
sbb
ja
iret
push
pop
aad
xor
subl
adcb
adc
adc
sti
fidivs
inc
popl
repnz
xchg
ljmp
sub
dec
fwait
orb
lret
sbb
mov
mov
je
and
push
lods
adc
or
xchg
fs
cmp
cltd
pop
dec
fucom
pop
inc
push
dec
pushf
pop
fsubrs
pop
daa
adcb
push
push
ja
pop
lahf
data16
cmp
push
pop
xchg
xor
push
push
mov
bound
stc
loopne
imul
call
jae
sbb
imul
std
pop
lcall
nop
mov
pop
mov
fstp
inc
adc
repz
jp
jmp
sub
xchg
scas
jnp
or
dec
pop
mov
mov
pusha
fsubr
cwtl
cltd
fiadds
jbe
outsb
pop
and
mov
and
pop
stos
enter
push
xchg
mov
data16
jge
and
daa
push
lock
ret
test
ret
mov
ffreep
and
sti
test
fwait
or
inc
loope
and
ficompl
lods
testb
adc
pushf
lahf
fnstcw
pop
stc
stc
outsl
fnstsw
mov
jecxz
stos
and
mov
mov
aas
lock
mov
mov
jo
dec
sbb
xchg
mov
lods
push
inc
popf
jb
adc
fidivrs
xchg
das
inc
fs
pop
push
and
and
frstor
xchg
fstpl
mov
lcall
test
adc
mov
movl
mov
xchg
adc
sbb
add
aad
sarb
cmp
incb
or
pop
outsl
js
push
mov
jp
call
pop
push
enter
in
insb
leave
pop
cld
test
xchg
pusha
ljmp
mov
or
inc
push
movsb
xlat
pop
sti
pop
or
mov
jmp
xchg
jecxz
fimull
jae
mov
cmp
add
fsubr
popa
fdivr
add
dec
xorb
add
add
loop
rcl
fdivrl
adc
mov
aaa
sahf
inc
sbb
pop
ja
xor
cs
leave
fidivrl
repz
cli
incb
ret
cmp
loop
outsb
jno
jo
pop
cmp
cmp
sbb
leave
push
xchg
ss
cwtl
ja
push
bound
adc
divb
or
shrd
ss
in
lds
sbb
push
xlat
push
push
and
rorl
pop
xchg
cs
push
mov
adcb
mov
mov
mov
cmp
push
inc
in
lret
mov
movsl
or
in
and
ljmp
push
pusha
decb
jg
dec
mov
movsb
pop
subl
push
jne
sbb
jb,pt
negb
adcl
jge
dec
mov
popa
pop
inc
or
loope
push
xchg
xlat
pop
mov
mov
lret
and
sbb
fsubrs
or
shlb
and
sbb
stos
dec
xor
pop
mov
int3
orl
cs
sarl
push
mov
cmp
out
movsl
scas
lret
xchg
adc
js
jns
daa
xor
or
push
cmp
add
call
lods
adc
ja
xor
inc
cmpsb
in
ret
mov
push
sub
pop
adc
andl
repz
dec
aas
addr16
loop
out
out
pop
je
adc
xchg
incb
sbb
xor
loope
stos
or
mov
xor
jae
push
inc
iret
xchg
lock
inc
jmp
jp
js
adc
jl
push
lret
add
mov
sbb
and
loop
jae
enter
and
xlat
popf
mov
dec
lea
adc
sub
or
mov
sub
sbb
in
sbb
daa
mov
andl
pop
sbbl
push
mov
xor
dec
cld
cmp
push
sbbb
mov
addr16
rcrl
lret
mov
lea
movsb
jae
sbb
xor
push
aaa
fsubrs
add
sti
fistpll
and
and
pop
sahf
lcall
psadbw
adc
ja
es
or
icebp
or
xchg
adc
movsb
push
loope
and
test
adc
stos
mov
fisubrs
inc
loopne
sbb
out
mov
sub
js
dec
mov
jl
push
lahf
xchg
cmpsl
add
lret
sub
jno
dec
sahf
push
inc
lahf
lock
loope
pushf
xor
mov
pop
movsb
not
enterw
adc
push
sub
fnstcw
and
mov
and
sbb
cmp
or
add
jge
inc
xlat
bound
sub
adc
ds
mov
psubusb
into
dec
enter
mov
dec
jmp
data16
hlt
push
mov
ss
lock
fmuls
dec
push
dec
xor
addl
xrelease
add
adc
outsb
std
mov
add
mov
adc
aad
imul
pop
imul
mov
jno
incl
lahf
sbb
ds
addr16
ficoms
adc
jae
push
fwait
push
arpl
cli
stos
cmpsl
mov
jmp
mov
mov
das
sub
pop
aaa
shrb
shrb
lcall
or
mov
or
test
dec
loope
sbb
call
xchg
insb
movsl
or
adc
inc
lods
mov
cmp
pop
daa
lret
dec
scas
int3
jmp
mov
leave
sub
inc
loop
divb
imul
xchg
pop
jl
dec
or
mov
push
jl
or
lea
inc
out
gs
test
xor
mov
push
adc
sarb
cmp
popf
adc
mov
outsl
stos
out
push
mov
sahf
and
outsb
aaa
popf
jo
out
adc
sahf
jb
dec
and
push
subb
pop
cmpsb
je
sbb
sarb
mov
fnstcw
lods
xchg
and
cmp
stos
mov
xor
mov
cmp
xor
stos
pop
pop
push
das
cs
push
jmp
jne
sub
push
add
lods
push
call
fbstp
pop
mov
rcr
imul
testl
aaa
mov
fiadds
ficoms
pushf
addb
cli
jg
popa
push
dec
xor
xchg
xor
stos
ffreep
mov
das
sarb
loopne
ljmp
pop
sbb
mov
and
pop
sub
shll
adc
lds
dec
daa
dec
loopne
insl
std
ss
shll
pop
push
nop
call
clc
pop
sub
jns
mov
pushf
push
stos
setl
in
push
cmp
fwait
mov
movsl
addb
add
pop
fdivrs
sbb
scas
mov
sbb
stc
mov
sbb
xor
call
cli
outsb
jg
repz
cmpsl
or
lods
cltd
lret
mov
gs
cld
rclb
data16
test
rcrb
cmp
addb
mov
inc
mov
mov
hlt
pushf
push
sub
mov
add
sbb
and
ficoml
adc
sub
sub
jae
sub
fisttps
rol
lock
sbb
or
jno
sbb
mov
mov
in
sub
imul
fcoml
stc
call
loope
push
js
adc
sub
out
jno
inc
push
mov
jl
js
in
push
mov
cmpsl
jecxz
push
adc
xchg
addr16
mov
inc
aad
mov
mov
xchg
or
mov
push
adc
loopne
mov
out
add
push
mov
ss
adc
or
jmp
add
mov
std
std
jne
rolb
repnz
sub
cmp
adc
or
or
jg
test
ja
jp
stc
pop
mov
add
sub
jle
mov
gs
adc
int
mov
and
loope
or
pop
and
fwait
xor
xchg
outsb
clc
je
stos
add
mov
jae
rolb
bound
aas
lahf
jg
fwait
push
loop
movsl
cmp
xor
cmp
fs
movb
cltd
inc
add
xchg
cltd
outsl
sbb
xor
out
shrl
or
and
or
mov
fsubs
call
push
or
aad
stos
mov
pop
mov
fstps
repz
mov
push
fs
push
test
and
push
sub
into
xchg
ds
adc
nop
hlt
xor
dec
adc
mov
shrw
stos
lahf
push
das
push
xlat
dec
mov
mov
insl
pop
flds
pop
push
dec
into
loopne
in
xchg
jbe
fwait
testb
hlt
inc
lret
push
sbb
mov
and
mov
xor
mov
add
es
mov
cmp
shll
mov
cmp
stos
je
sbb
scas
mov
mov
jnp
rclb
jb
icebp
sbbl
popf
dec
sbbl
cltd
cwtl
inc
jge
pushfw
adc
scas
mov
xchg
inc
xor
rclb
es
mov
outsl
mov
pop
adc
andb
aas
rcrl
decb
mov
pop
xor
fcmove
dec
sub
enter
jae
and
xor
mov
and
adc
push
adcl
dec
clc
push
or
test
pop
xchg
adc
imul
mov
mov
push
or
aaa
das
imul
loopne
pop
jns
mov
ljmp
adc
jl
mov
xchg
outsl
jp
arpl
leave
call
cwtl
in
fidivrl
bound
sbb
mov
push
push
out
insb
loop
rcr
addl
test
fwait
shll
popa
aaa
push
imul
andl
aaa
test
push
roll
stc
subl
push
jno
cmp
fstl
inc
cmp
stos
int3
aaa
aaa
dec
mov
fidivl
insb
in
inc
icebp
xor
bound
jmp
xchg
outsb
and
adc
add
cltd
dec
jl
xchg
add
sbb
rcrb
jb
mulb
mov
or
push
jns
dec
das
test
add
cli
shrl
fisubrl
stos
jo
mov
in
adc
lcall
movsl
int
cmp
add
cmp
inc
sub
shlb
push
ret
dec
arpl
mov
pop
mov
adc
sbb
arpl
dec
and
mulb
fnstenv
sub
das
and
add
mov
lahf
mov
movsl
add
jno
stos
pop
les
in
out
adc
xchg
je
adc
sbbl
push
or
into
es
push
add
xchg
sbb
repz
lods
arpl
cs
xchg
jae
lods
xor
mov
mov
pop
test
xchg
mov
push
pusha
add
insl
sub
or
xchg
ja
and
aas
dec
add
sahf
inc
pop
and
pop
mov
stc
inc
jns
lret
and
lcall
xor
jo
cmpsl
jae
and
fnstcw
mov
mov
sub
add
test
and
cltd
xchg
pop
cwtl
inc
cs
lcall
adc
add
cmp
jmp
xchg
test
mov
popa
int3
pop
lods
adc
sbb
rorb
call
in
or
dec
ja,pn
sahf
movsl
pushf
mov
pop
dec
pushf
je
adc
or
mov
aad
fs
inc
lods
cwtl
cmp
lret
inc
jge
mov
scas
jno
inc
jl
sub
push
jns
in
cmpb
dec
scas
inc
jns
push
pop
mov
addr16
lds
cli
sahf
outsb
jae
xchg
cli
adc
cmp
pop
pop
and
push
mov
inc
rorb
cmp
adc
jp
pop
or
lahf
mov
pop
clc
cmp
lods
scas
add
adc
imul
sub
shll
pusha
pop
insl
out
mov
dec
mov
jmp
mov
outsl
cmp
pop
mov
lahf
call
push
xchg
ss
cmc
test
xor
rcll
sub
sarb
ret
rcll
cwtl
add
int
test
cmp
insl
incl
repz
jecxz
imul
popa
adc
test
movsl
push
je
rcll
fs
ret
xchg
std
insb
dec
rolb
sub
movsb
cmpsb
sbb
pop
ja
arpl
decb
ja
movsl
out
fimull
dec
fwait
out
lret
aad
fsubl
popa
push
adc
or
fidivs
or
rcll
cwtl
lock
adc
xchg
mov
sub
mov
add
ds
js
inc
jmp
and
mov
and
stc
mov
fcmovne
xchg
inc
adc
sbb
and
insl
cmp
je
lock
or
adc
mov
test
lds
fisttpl
mov
les
dec
mul
xor
adc
scas
shrb
mov
xchg
loopne
popl
popf
pop
add
lahf
adc
insl
sbb
jnp
push
sbb
pop
add
mov
pop
pop
testl
xor
sub
mov
mov
cltd
cli
adcb
push
mov
xor
and
sbb
push
dec
sti
stos
js
fcoms
mov
mov
dec
and
mov
out
mov
or
bswap
mov
out
int
mov
inc
push
and
cmp
mov
push
mov
aaa
rcll
call
fidivrs
xor
mulb
mov
and
jns
jmp
inc
lds
test
jge
sub
sahf
xchg
push
call
das
cmp
mov
xchg
mov
jbe
inc
inc
insl
std
dec
dec
outsb
mov
mov
mov
cmp
pop
jnp
enter
lahf
xchg
stos
mov
push
je
mov
cmpsb
fnstcw
xchg
sbb
fildl
pusha
rclb
inc
pop
fwait
mov
push
aaa
mov
xor
push
add
xchg
sbb
add
xchg
js
inc
xchg
sbbb
daa
sbb
push
insl
cmpsl
pop
sub
in
adc
xor
popf
adc
jns
fdivl
enter
xchg
mov
jne
rcrb
aad
out
pop
xor
pushf
mov
add
sub
inc
push
es
shll
jbe
lods
mov
sahf
sub
lods
fucomip
fnsave
add
lds
or
fnstsw
inc
pop
push
xchg
adc
jge
out
shll
adc
dec
xor
pop
pop
add
add
pop
aas
xchg
mov
sbb
test
into
cs
dec
jbe
test
pop
xor
jge
mov
popf
sub
cmp
shll
fidivl
dec
and
in
lods
pop
insb
xchg
push
cltd
cmpsb
cmpb
push
outsl
fistpll
jb
mov
push
and
mov
shll
mov
sub
or
int
in
sti
pop
cmp
test
sbb
jae
arpl
sub
outsb
or
xor
sbb
mov
jp
and
inc
cmp
xor
or
popa
inc
cmp
addr16
push
xor
into
stos
andb
lret
xchg
add
imul
out
dec
test
fisubs
jb
scas
sub
pop
lock
rcrb
add
stos
jno
cltd
dec
pop
and
negl
addr16
iret
loopne
aam
fnstenv
or
sbb
push
inc
xchg
pop
data16
movsl
cli
jne
mov
jbe
lea
xor
mov
imul
dec
adc
int
push
jge
xlat
andl
mov
xchg
out
mov
adc
mov
hlt
push
scas
cmpsl
adc
sahf
aaa
adc
mov
sub
nop
lret
aas
into
pop
dec
movsb
rorl
fldl
aam
cld
inc
fimuls
es
mov
stos
jg
sbb
bound
je
adc
sub
stos
adc
jg
lahf
cli
pop
push
or
bound
push
test
sub
push
xor
jae
adc
push
loopne
fsub
xor
fsubrp
and
cltd
jne
lcall
jl
stos
testb
in
dec
imul
xor
inc
add
xchg
mov
mov
scas
stc
jbe
testl
mov
outsl
stos
cmp
sti
sub
pop
fs
add
aaa
push
pop
lret
aam
out
and
cmpsb
xchg
mov
cmc
xor
hlt
xchg
sbb
sub
nop
xor
lret
mov
lret
xlat
or
adc
imul
jmp
cmpsb
stos
mov
loop
pop
clc
inc
jecxz
je
add
cwtl
cmp
or
mov
jmp
xor
cmpsl
cmpsb
jle
jnp
cs
fucom
mov
inc
jp
int
mov
or
push
cmpsb
in
inc
dec
in
lds
lods
or
push
mov
mov
dec
data16
xlat
stc
fistpl
push
fisubrs
push
lahf
inc
jne
sbb
fisubl
xor
pop
mov
stos
and
ds
lcall
xor
push
ss
je
xor
jbe
lahf
hlt
ja
fwait
dec
sbbb
mov
jp
pop
outsl
sbb
cwtl
nop
scas
pop
push
repz
arpl
xor
cmp
adc
push
adcl
stos
mov
data16
cmp
add
cmp
fwait
sub
lock
cltd
adc
inc
or
mov
jne
mov
jl
dec
test
jno
stos
xchg
sti
push
add
jle
fcmovnb
xlat
pop
add
mov
stos
rorl
ret
lds
int
sbb
jle
icebp
es
mov
add
insb
mov
or
addr16
das
push
pop
adc
push
inc
out
lods
mov
sub
stos
stos
jns
faddp
mov
pop
lock
jle
imul
leave
xchg
shlb
sti
repnz
pushf
ja
sub
jmp
cmpsb
jbe
in
push
imul
loope
leave
push
lock
jne
stos
sbbb
outsl
mov
jno
scas
adc
mov
push
stc
in
fidivrl
dec
dec
nop
sub
sub
sub
mov
mov
pop
mov
jnp,pn
outsl
sti
int
sahf
and
jnp
pop
fisttps
pop
sbb
adc
dec
shlb
mov
jae
shlb
mov
fiadds
pushf
adc
lahf
out
repnz
xchg
imul
inc
arpl
les
xchg
pop
or
mov
addl
adc
add
push
lret
in
sub
jnp
push
sub
outsl
je
mov
mov
xor
mov
fnstcw
and
add
mov
lea
sbb
lock
jnp
xchg
insl
mov
nop
int3
shrl
and
adc
push
cwtl
aam
mov
push
sub
leave
lahf
jnp
in
or
ret
lcall
sahf
fmuls
imul
sub
icebp
pop
push
inc
lods
push
xchg
jecxz,pn
test
pop
in
leave
add
add
mov
rorl
test
and
mov
xchg
and
and
insl
jae
cmpsb
adc
int
add
jo
fs
repz
les
and
mov
outsl
cs
xlat
xchg
push
push
ds
cli
xchg
in
outsl
fs
dec
mov
jne
xchg
rcr
ss
and
jp
and
dec
push
xchg
stos
std
out
fsub
push
mov
fbld
cmp
imul
negl
fwait
out
decl
insl
int3
pop
push
jnp
in
mov
pop
dec
stos
sub
jno
stos
push
jbe
sub
enter
ffree
inc
pop
hlt
stc
jle
out
loopne
jns
stos
stc
mov
cmp
jecxz
sub
mov
xor
lods
loopne
cwtl
hlt
jl
push
in
pop
out
xchg
int
adc
xor
jmp
test
popf
lahf
fs
xchg
mov
bound
push
test
sahf
fsts
daa
movl
cmp
and
mov
fiadds
insb
hlt
popf
mov
imul
jbe
add
xor
inc
clc
and
push
js
mov
daa
jne
aaa
mov
dec
int3
shrb
into
and
in
aad
cmpsb
xchg
shrb
dec
stos
or
xchg
mov
daa
ret
add
add
jnp
cmp
mov
xor
sarb
outsb
xor
mov
mov
xor
fwait
adc
cltd
lods
jnp
mov
dec
popf
xchg
in
les
cmc
mov
cmpl
push
mov
pusha
sbb
outsl
jge
adc
cmp
pop
rclb
cmc
xchg
es
cwtl
inc
outsb
repz
mov
out
adc
adc
pusha
sub
inc
stos
lds
dec
xchg
mov
into
pop
pop
outsb
hlt
cmp
adc
xor
jg
xchg
and
loope
test
out
push
lea
cmp
and
mov
xchg
cmp
mov
sbb
lods
fwait
mov
gs
pop
clc
nop
cs
lds
dec
xchg
pushf
loop
enter
and
cmp
jmp
jnp
pop
mov
mov
mov
fsubrp
sahf
dec
icebp
sahf
add
jp
or
mov
mov
aaa
loop
lods
pop
push
imul
and
cld
add
decl
out
loope
lea
aam
or
push
in
jmp
imul
cmp
cmp
xlat
dec
or
or
jnp
adc
jmp
pusha
gs
into
dec
mov
push
add
or
add
int3
lea
sub
sti
or
jns
ljmp
cmp
xchg
loop,pn
xorl
adc
push
xchg
sbbb
cs
sbb
das
ss
xor
jmp
inc
sbb
cmp
pop
lds
fldl
stos
dec
xor
inc
mov
loopne
aaa
in
sbb
shll
out
cwtl
adc
push
imul
sub
and
fbld
or
sbb
les
adc
mov
into
dec
daa
sub
popa
xchg
mov
and
mov
cmpsb
cmp
add
insl
inc
dec
dec
rorl
aad
mov
imul
pop
pop
dec
mov
cmp
and
cltd
rorl
das
ljmp
test
pop
cmp
mov
iret
cli
jne
xchg
loop
leave
aam
mov
mov
jmp
or
test
xchg
fnsave
in
mov
lock
push
in
xchg
les
outsb
add
xorb
shrb
add
push
es
adc
std
stc
cmp
repnz
into
sti
rorb
fisttps
push
loop
mov
pop
add
rcr
mov
pop
mov
test
push
push
daa
lods
fs
mov
in
xchg
sbb
inc
cmc
or
fwait
aad
loope
sub
inc
push
mov
das
or
adc
xchg
and
cmp
sub
or
and
adc
add
imul
int3
dec
std
lock
daa
xor
jmp
push
pusha
loope
les
out
push
rcll
loop
in
xchg
xor
or
sub
js
repz
idivl
movsl
in
mov
fcomps
sbb
test
mov
fisubrs
mov
in
or
dec
sbb
loop
xchg
ja
icebp
outsl
rcll
adc
or
xchg
push
dec
mov
test
add
xor
xchg
es
or
fnstcw
ret
enter
dec
repnz
push
mov
loope
jo
shl
into
push
cmpsb
js
in
jbe
pop
loope
xorb
pop
xchg
inc
inc
fsubs
stos
xchg
cmc
dec
add
mov
inc
dec
imul
cmpsl
jecxz
pop
data16
mov
add
pushf
pusha
push
into
mov
mov
clc
sarl
mov
add
adc
sbb
push
ss
push
pop
cmp
fucomip
inc
sub
test
sub
subb
jg
js
fdivrs
and
xor
rorb
sbb
sbb
jmp
cmp
js
clc
and
mov
cmp
divl
rorb
sbb
cmp
loope
adc
fldt
in
add
mov
push
movsl
stos
lds
jmp
mov
adc
mov
mov
push
jecxz
xor
xor
test
je
mov
sbb
sub
pop
aas
mov
sbb
adc
les
jp
or
loope
mov
push
orl
fldl
clc
mov
loope
les
cmp
sti
sbb
jle
pop
out
imul
mov
pop
lea
in
scas
inc
and
inc
xor
jmp
movsl
test
push
les
mov
outsl
in
lock
jg
movsl
sarl
insl
dec
in
loopne
sbb
jg
xchg
sub
mov
jp
sti
push
sub
and
jb
mov
lods
xchg
and
pop
repnz
call
jmp
add
insl
mov
fsts
ja
in
call
sar
jno
adc
push
xchg
ja
and
je
test
je
lahf
inc
pop
call
sub
iret
test
call
pop
sahf
push
fldcw
xchg
sub
cld
cmpb
insb
int
mov
orl
enter
jp
scas
jns
popa
pop
sub
push
insb
pop
xchg
lahf
jg
lret
pop
and
sarb
in
or
xchg
fwait
sbb
test
mulb
jmp
jb
sub
sbb
mov
aas
imul
stos
push
out
lods
enter
xor
sbb
adc
dec
or
xor
out
data16
xchg
call
sbb
leave
xchg
and
xchg
or
fsubrl
xchg
incl
sete
imul
ljmp
jns
hlt
add
adc
aas
xor
mov
mov
addr16
mov
mov
push
adc
dec
popf
out
in
sbb
xchg
idivb
shl
pop
push
mov
bound
dec
xchg
outsb
lahf
sub
or
sub
push
mov
mov
cli
das
xchg
mov
repnz
push
cmpsl
in
rorb
mov
xchg
jl
repnz
mov
mov
inc
pop
leave
push
out
data16
out
in
jne
pop
jge
pop
adc
into
aad
xchg
push
gs
mov
out
inc
rorl
fidivl
mov
mov
mov
aaa
orl
stos
je
out
cmpsl
sub
stos
push
imul
xor
sub
dec
inc
aad
lret
mov
lods
cwtl
repnz
in
loopne
mov
xchg
xlat
xchg
or
xchg
ja
test
cmp
out
insb
in
dec
data16
imul
mov
mov
incl
iret
and
mov
pop
out
clc
push
jmp
mov
loop
jno
inc
inc
cmp
sbb
jns
dec
in
aam
stc
jl
fs
int3
xchg
aam
xor
cli
mov
and
add
aad
sub
pop
sahf
cmpsb
inc
mov
push
mov
scas
and
add
test
xor
aam
cmpsb
adc
shrb
scas
and
or
ljmp
mov
xor
mov
cmp
push
inc
mov
ret
add
push
idivl
mov
add
mov
insb
shl
shrb
mov
fidivs
incb
cli
gs
add
sub
jp
push
push
imul
adc
out
mov
dec
cmp
cli
xor
xor
decb
jl
int
loop
outsb
push
mov
push
inc
ret
mov
push
pop
add
jp
or
lds
fcompl
adc
mov
add
xlat
sbb
xor
push
out
nop
xor
ja
xchg
dec
xchg
and
add
js
cld
or
mov
sbb
mov
and
fisttps
dec
data16
push
int
cmc
lahf
adc
aaa
ret
rdtsc
sahf
icebp
cwtl
or
cmp
lock
sbb
lahf
scas
pop
dec
popl
push
push
mov
sbb
jmp
lods
cmp
push
imul
mov
lahf
insl
fnsave
pop
pop
mov
aad
jecxz
add
outsb
sub
lea
jecxz
fldl
sub
xchg
add
cmpsl
dec
sub
fidivrs
imul
stc
adc
jle
aad
cmp
fs
push
nopl
ret
add
insb
jb
xorl
push
daa
rcrl
xor
mov
fistps
or
cmpsb
andl
and
xor
pop
xchg
xor
push
xchg
fwait
mov
cmp
adc
xor
add
or
pop
cmp
push
jno
dec
cmpsb
imulb
mov
mov
or
ja
in
lahf
adc
test
fiaddl
and
push
mov
shlb
dec
mov
xchg
cmp
cmpl
xor
imul
sub
es
mov
inc
push
pop
xchg
mov
or
mov
cmp
and
and
xor
leave
or
bound
lods
fimull
popf
sub
outsl
adc
call
jp
lcall
stos
and
stos
dec
adc
push
or
dec
adc
mov
sarl
pop
loop
nop
jo
scas
pop
sahf
clc
js
push
fsqrt
insl
ret
push
leave
in
lahf
test
lods
aad
and
sub
cmp
push
xor
mov
cs
push
pop
cmp
shl
sbb
iret
adc
lods
js
pop
loop
dec
enter
jle
inc
pop
pusha
mov
and
aaa
push
sbb
xchg
xchg
cmp
jmp
mov
xchg
test
mov
fsts
xor
mov
xchg
pop
cli
add
lret
imul
mov
fstpt
adc
ja
addr16
out
not
jecxz
push
jmp
or
push
fsub
clc
mov
cwtl
insb
das
popa
sub
push
adc
lret
mov
out
inc
jp
sbb
xor
out
xor
dec
and
clc
adc
nop
les
lods
lods
out
lods
push
mov
iret
mov
pop
repnz
rolb
sahf
lods
mov
xchg
pushf
outsb
adc
inc
cltd
pop
repnz
jg
jle
jecxz
xchg
mov
in
movsl
inc
sub
ret
sarl
cmp
imull
dec
jns
sub
adc
mov
or
jb
mov
cmc
sbb
mov
out
fdivrs
push
xchg
daa
mov
lods
xchg
ja
push
ja
cmpsb
call
aas
mov
mov
and
das
jmp
sub
daa
leave
xchg
sub
call
ss
mov
and
pop
mov
pop
jp
sbb
jnp
leave
jae
cmp
pop
je
xor
test
fstpt
mov
mov
movsb
mov
xorb
and
aaa
jo
add
test
cmc
nop
or
xchg
push
pusha
jp
xchg
aas
xchg
jecxz
sub
test
or
push
push
stc
movsl
divl
push
pop
hlt
leave
shl
das
dec
inc
shll
push
pop
addr16
insb
mov
xor
mov
mov
bts
push
push
mov
ss
inc
or
sbb
outsl
jmp
scas
andb
in
push
out
sbb
jg
int
dec
pop
add
mov
add
pop
lahf
sbb
xchg
add
xor
adc
outsb
vmwrite
fistpll
in
fisttps
or
fsts
rolb
ret
mov
sarb
jo
xlat
out
rcrb
sub
das
pushf
pop
and
cmc
pop
mov
neg
add
push
ljmp
inc
sbb
push
inc
jecxz
and
or
pusha
ljmp
int3
not
stos
je
inc
push
jo
add
push
sbb
les
adc
fcmovne
stc
dec
fisubs
cmp
mov
fildll
inc
rcr
xchg
lods
imulb
add
inc
pop
mov
inc
lret
lea
mov
push
jnp
pop
fildl
inc
dec
sbb
mov
gs
fnstenv
mov
test
out
mov
mov
mov
xor
rcrb
mov
cwtl
inc
or
int
cld
push
jnp
cmp
dec
enter
mov
lods
add
addr16
sub
insb
addr16
pop
lret
ljmp
push
ss
lods
mov
shr
xlat
and
mov
fiaddl
mov
xorb
dec
sub
lds
dec
sbb
xchg
xor
mov
js,pn
lret
sub
fnstenv
in
push
xchg
insl
pushf
sahf
sub
cmp
adc
mov
stos
outsl
lea
push
jb
ficoms
mov
leave
es
roll
nop
pop
decl
dec
in
pop
sbb
xor
and
cli
add
movsl
sbb
gs
sbb
loopne
es
mov
out
cmp
in
pop
call
cmp
daa
inc
lds
shll
dec
add
or
cs
xor
pop
outsl
xchg
pushl
mov
sub
fidivl
cltd
or
and
fsubrs
inc
sbb
inc
adc
in
call
mov
cmpsb
jge
add
pop
enter
sbb
add
pop
jbe
ret
inc
or
aaa
divb
sub
lods
fmull
ds
lret
sbb
jo
stc
das
out
dec
lock
ja
mov
aas
ret
es
mov
rclb
loop
cmpsl
cmp
sbb
popf
lahf
bound
outsl
fwait
cmpsb
iret
in
stos
andb
stos
imul
cmpsb
push
jbe
xor
mov
xchg
stos
fs
call
adc
scas
jl
mov
push
les
fsts
push
popa
mov
lret
sbb
xchg
jge
int3
mov
nop
test
jns
add
jns
iret
push
leave
rorb
sub
sti
dec
inc
stc
adc
fisubrl
push
scas
stos
stc
mov
dec
stc
es
mov
out
repz
jmp
int3
rcl
rcll
lret
loope
lock
lods
clc
outsl
or
jne
sbb
pop
fdivrs
fptan
cs
movb
or
mov
xlat
mov
cmc
subl
xchg
adc
inc
and
add
push
dec
repz
mov
jb
shrl
ret
mov
cmpsb
push
fistps
lea
scas
cmp
rorl
repz
sub
cmpsb
inc
xor
adc
sahf
adc
fnsave
fcmovb
dec
fwait
es
outsl
addl
mov
cmp
popa
cmpb
int
icebp
add
dec
in
in
bnd
inc
clc
pop
jg
push
ret
ljmp
xor
mov
push
dec
movsb
pop
cmp
xchg
dec
nop
mov
cmp
push
out
and
mov
jo
repz
pop
mov
xchg
pop
pushf
jb
pop
push
sbbb
in
mov
pop
test
cmp
pop
fisubs
jl
inc
imul
mov
rclb
lea
fistps
cmp
aad
sub
mov
mov
pop
js
bound
jg
and
or
int3
pop
jbe
mov
je
dec
outsb
xchg
scas
dec
nop
clc
cmp
sahf
lcall
lret
adc
inc
hlt
shll
cwtl
and
test
addl
inc
dec
int
dec
cs
dec
push
das
pop
add
cmp
dec
pop
test
rorl
cmpsb
mov
push
jge
inc
out
mov
int
in
add
adc
mov
and
jo
stos
pop
gs
mov
fcmovb
add
xor
xor
xor
shlb
or
in
pop
sbb
outsl
push
sub
lods
dec
and
mov
xor
sbb
dec
cmc
lea
xchg
xadd
dec
arpl
loope
fistl
push
xlat
pop
or
inc
sub
dec
rolb
dec
cmp
and
nop
xchg
frstor
int
mov
inc
test
dec
jns
xor
sbb
cmpb
dec
jae
xchg
dec
int
inc
jb
cmp
dec
xor
add
or
or
or
es
xchg
pushf
sub
fldenv
xchg
out
mov
lock
pop
pop
das
xor
insl
andb
sbb
enter
les
std
push
in
mov
mov
test
std
cmp
or
pop
jne
lock
fwait
cmovp
pop
and
imull
cmp
lock
jnp
mov
or
mov
insl
push
pop
and
push
push
xchg
cmc
pop
andb
mov
jbe
sbb
cwtl
gs
push
xor
filds
sbb
aaa
adc
int3
test
mov
mov
add
lret
fcmovnb
enter
sahf
std
sub
mull
and
and
dec
jmp
pop
ljmp
les
mov
pop
enter
xchg
testb
das
aas
leave
or
call
mov
xchg
stos
xchg
jne
fisttpll
or
cmc
jg,pt
mov
pop
xchg
outsl
iret
test
aas
mov
int3
inc
mov
lcall
notl
stos
xor
or
jle
aad
sbb
push
mov
push
out
out
fnstcw
mull
pushf
cwtl
cmpsb
dec
mov
push
and
and
cmpsl
mov
cmp
pop
or
loop
out
mov
jmp
and
xor
adc
aas
mov
popf
fnop
mov
ret
repz
xchg
adc
jge
and
mov
inc
xor
jno
ds
addr16
jno
dec
scas
adc
popf
roll
ficoms
int3
sub
push
jae
int
jb
mov
icebp
cmovb
xchg
test
sub
jae
fdivrs
xchg
and
and
out
lahf
ja
jmp
mov
pop
pop
sbb
addl
dec
ja
sti
out
popa
fldt
std
bound
push
fdivrp
test
dec
popl
test
or
jnp
addr16
mov
les
xor
repnz
fcmovnu
push
dec
sub
jmp
add
mov
xor
aaa
mov
scas
bound
dec
popa
mov
fisttpl
and
repnz
push
or
cmp
out
cmp
jl
push
add
ret
and
dec
xorw
fwait
popa
jg
mov
in
inc
mov
xchg
nop
fisttpll
push
sbb
lea
dec
mov
mov
cli
sbb
and
ja
xchg
pop
scas
and
ja
insl
adc
fs
test
push
sub
add
push
shl
fdivs
dec
adcl
push
incb
popf
bound
sub
sub
add
fwait
inc
lock
xchg
int
mov
pop
fcomi
push
sbbb
and
jo
aaa
sbb
adc
cli
push
outsl
sub
sub
lret
jb
mov
cmp
xchg
testl
inc
roll
cld
test
leave
call
lods
aaa
pop
stc
adc
push
imul
cld
dec
add
repnz
in
loop
fildl
daa
push
and
sbb
insb
sbbl
or
xor
sub
mov
inc
mov
das
popw
push
hlt
subl
jbe
jge
daa
push
cmp
in
pop
xor
sahf
push
and
fdiv
test
cmp
rep
out
cmp
dec
ret
test
push
add
int3
lods
jmp
jle
add
insl
add
stc
loop
iret
int3
cld
enter
and
or
mov
or
sbb
lods
ret
mov
jge
or
xchg
push
lret
adc
stc
aam
daa
sub
fs
imul
dec
push
cmp
lods
pushl
lods
arpl
add
cli
or
mov
cmpl
mov
or
std
loope
scas
stc
mov
mov
xchg
addr16
lea
cmp
push
std
fucom
mov
inc
rcll
pop
push
mov
lret
sahf
enter
cwtl
js
je
or
lods
push
or
ja
data16
cmp
mov
or
or
add
add
add
add
add
clc
sub
in
cs
add
sub
psubb
cwtl
push
lahf
shlb
iret
jecxz
pop
pushf
imul
lahf
shlb
sub
psubb
cwtl
push
lahf
shlb
cmp
dec
dec
clc
sub
psubb
cwtl
push
lahf
shlb
sub
psubb
cwtl
push
lahf
shlb
sub
psubb
cwtl
push
lahf
shlb
fmuls
adc
lea
add
add
mov
jb
add
add
add
add
mov
jg
add
add
enter
arpl
rolb
add
push
add
add
add
add
add
fadds
add
mov
add
add
enter
add
rolb
add
add
add
add
add
add
mov
inc
push
mov
inc
add
rolb
add
addb
add
add
add
lcall
stc
and
fwait
in
cmp
add
add
add
add
or
add
add
add
mov
add
add
ret
and
add
push
add
add
sbb
add
add
add
mov
add
add
into
add
add
dec
mov
loopne
inc
add
push
add
add
push
or
add
inc
add
stos
add
stos
mov
add
add
pushf
cmc
jae
enter
add
add
add
add
xchg
add
jg
add
add
add
or
int3
inc
jle
push
jle
rcr
in
mov
ret
cmpsb
int3
add
mov
enter
dec
and
push
ret
loopne
push
mov
sub
and
nop
lahf
xor
mov
push
add
inc
lcall
ret
jo
add
lds
xor
xchg
inc
sbb
rcrl
lret
popa
test
cmp
mulb
outsb
mov
xchg
shlb
fldt
xchg
adc
mov
fwait
mov
clc
mov
push
and
push
mov
jecxz
xchg
sti
lcall
dec
mov
sbb
gs
inc
flds
dec
jb
dec
add
insb
push
jo
out
jmp
mov
in
lret
lds
shlb
rolb
test
mov
fs
lea
out
test
call
jo
shlb
add
sbb
sub
dec
cmp
push
xchg
and
stos
mov
mov
arpl
jl
dec
fildll
jae
sarb
addr16
adc
daa
insl
test
out
pop
xchg
jmp
jmp
cwtl
movsl
mov
idivb
xchg
adc
in
inc
cmpsl
lods
lret
sub
das
jp
push
rcl
cs
pop
mov
xor
rcr
jge
aaa
out
xor
sahf
test
jle
ljmp
fadds
cmp
dec
pushl
inc
and
sbb
fldl
aam
xlat
dec
push
sub
outsl
ror
sub
inc
movsl
inc
cmpsb
jbe
jns
mov
aaa
xchg
mov
sarl
jg
dec
xchg
insb
outsb
sbb
cmc
and
mov
push
and
push
jns
loope,pn
addr16
fwait
pop
bound
jno
cmp
in
mov
xchg
pop
inc
xor
rcl
sub
lods
shll
and
movsb
pop
aas
lret
subl
mov
pop
inc
jg
adc
fnstenv
adc
mov
inc
jnp
cmp
jnp
fistpll
into
add
rolb
or
sub
dec
push
idivl
sbb
pop
cmp
idivl
daa
mov
jle
imul
inc
enter
cmp
and
inc
test
inc
loop
cltd
jmp
mov
sahf
xchg
inc
insb
mov
mov
movsb
cmpsl
and
mov
js
insl
sbb
jmp
imul
daa
sbb
pop
mov
ret
cmpsl
push
cmpsb
dec
icebp
adc
xor
repz
out
push
pop
stos
cmp
inc
imul
movsl
pop
clc
mov
test
cli
xchg
cmpsl
lods
sahf
mov
stc
stc
aaa
push
int
mov
mov
test
push
daa
repnz
push
push
cmp
inc
daa
xorl
aad
sub
adc
dec
mov
mov
mov
push
cld
adc
adc
ds
xchg
rorl
cmpsb
pop
cltd
push
jns
xor
pop
cmp
mov
pop
sbb
sub
scas
mov
stos
jg
int3
icebp
outsb
imul
enter
pop
aam
mov
stos
pop
addb
adc
arpl
pop
and
insl
fsubrs
add
pusha
ljmp
push
cwtl
pop
ds
mov
mov
jo
push
push
leave
mov
and
imulb
sarl
ljmp
les
inc
and
and
adc
jmp
repz
sub
or
pop
and
add
jo
pop
push
rcl
and
std
xchg
adc
pop
ljmp
nop
lret
or
pushf
mov
push
sbbb
fistpl
jb
xchg
stos
movsl
xlat
loop
std
mov
sar
cmovnp
dec
jge
sbb
mov
data16
xchg
xor
sub
rclb
cltd
pop
mov
mov
mov
jge
jg
xor
jmp
add
jno
push
fsubrl
bound
add
lock
fimuls
jge
idivl
stc
loope
daa
sbb
inc
addr16
insl
push
pop
mov
mov
mov
popa
pop
cmp
or
fwait
jle
scas
inc
ljmp
movsl
sub
decl
movsl
and
push
cmpsb
push
mov
mov
xlat
scas
stos
xchg
jbe
lock
out
in
scas
xchg
fstl
stos
mov
inc
add
fsts
xchg
addr16
inc
sbb
js
mov
jo
mov
sahf
xchg
cwtl
cwtl
and
lock
sbb
les
push
xchg
mov
imul
mov
jb
xchg
xchg
aaa
pop
mov
sub
ljmp
dec
jle
add
sbb
xor
pusha
dec
xchg
or
mov
lret
int3
push
roll
adc
cmp
fwait
add
pop
jp
int3
inc
and
pop
inc
pop
andb
mov
dec
mov
stos
mov
or
dec
aaa
leave
fidivs
fnstsw
fsubr
outsl
loop
aam
lods
jae
jle
and
arpl
cld
add
imul
repnz
xor
dec
cmp
or
inc
cmpsl
rorb
jmp
inc
out
lock
adc
sbb
xor
lds
test
imul
pop
les
imul
loope
call
rorb
and
std
or
dec
aad
xor
mov
inc
popa
daa
movsb
inc
leave
mov
stos
cmp
jle
cmp
or
in
jo
icebp
gs
out
das
rcr
rorl
add
xor
mov
aad
gs
sub
push
xor
mov
sub
imul
testl
fisubrl
ljmp
and
push
dec
jno
mov
testl
xchg
xchg
scas
or
clc
nop
movsl
cwtl
lea
inc
fistps
xchg
aas
mov
adc
add
mov
push
leave
loopne
aas
cmp
add
test
xor
mov
lock
lods
addr16
and
lcall
xor
test
iret
and
mov
push
xchg
rclb
pop
out
adc
sub
loop
ret
shlb
cmp
cltd
aas
push
cmp
ljmp
xchg
adc
ja
pop
adc
int3
sbb
adc
push
in
xor
cs
mov
cmp
inc
xor
iret
stc
rorb
div
xchg
ja
xchg
sub
or
mov
pusha
pop
add
es
mov
imulb
rorl
cs
jg
mov
int
mov
ficoms
jmp
mov
cmp
pop
cmp
popa
popf
fisubrs
js
sbb
mov
lods
js,pn
insb
dec
xchg
das
cmpl
imul
call
cmp
pop
test
mov
enter
mov
aas
push
cmp
mov
jg
add
cltd
jg
in
int
dec
or
popf
inc
in
rclb
cwtl
in
mov
mov
mov
fcoms
inc
shlb
out
mov
js
ss
pop
adc
adc
clc
cmp
cmp
sarb
adc
jge
repnz
fs
repz
inc
out
mov
sub
xor
dec
cli
pop
inc
and
xchg
or
push
push
dec
sahf
lret
xchg
out
leave
sarl
push
push
push
xchg
jge
mov
cmp
mov
xchg
insb
stos
lret
jl
sub
leave
or
sbb
add
inc
mov
ss
lea
sub
fwait
pop
xor
xor
lahf
xchg
add
js
loopne
in
xor
fucomp
shll
sahf
sbb
popa
je
fs
add
and
icebp
jno
outsl
inc
push
xor
call
cs
push
adc
or
aas
in
push
cmpl
sbb
stos
in
out
push
lods
lods
imul
jno
mov
roll
fisubl
mov
jbe
orl
repnz
cld
adc
and
mov
clc
or
popa
js
sub
insl
mov
mov
sbb
mov
sbb
decb
leave
cmpsb
sub
push
aas
subb
or
rorb
arpl
push
jae
shl
push
push
cmp
jecxz
mov
jno
jbe
xor
cmp
adc
lcall
outsb
and
ja
inc
lock
and
cmp
fs
mov
mov
pop
stos
push
popf
adc
mov
fcmovne
es
pop
popl
loop
add
mov
push
aam
xchg
push
inc
pop
cld
or
dec
mov
mov
ficompl
sbb
sbb
icebp
pop
mov
xchg
and
clc
testb
and
ljmp
mov
dec
aaa
ss
sbb
out
cmp
dec
fidivs
cltd
std
jge
dec
in
xor
shr
sbb
xor
mov
mov
cwtl
out
pop
fmul
push
dec
sbb
repz
mov
xor
mov
mov
xorl
sbb
cmp
dec
pop
jmp
sbb
outsl
int
sbb
mov
jne
scas
repnz
adc
mov
jp
dec
or
mov
call
xchg
jnp
and
daa
mov
sub
pop
fnsave
adc
sub
test
pop
lret
mov
or
mov
insl
pop
jns
mov
in
je
stos
iret
mov
arpl
push
sub
loope
xchg
jno
scas
mov
mov
stos
test
test
jae
arpl
icebp
xlat
mov
sbb
push
neg
outsl
mov
jge
pusha
xor
pop
mov
ret
popf
imul
ficoml
out
in
xchg
shrl
add
mov
cmp
outsb
jnp
push
jge
fwait
lahf
cmpb
xor
lock
sub
pop
and
int
out
cs
push
pop
mov
sbb
leave
cmp
arpl
inc
cld
add
repnz
jmp
arpl
push
shrl
xchg
xor
jno
cmpsb
push
outsl
dec
mov
and
sbb
pop
sahf
and
or
dec
dec
adc
dec
into
dec
loop
int
hlt
in
movsl
loope
or
mov
fldenv
jl
js
sub
mov
inc
cmp
pushf
mov
inc
xchg
mov
sbb
fsubr
fisttpl
jb
insb
dec
mov
jmp
mov
inc
call
fisubrs
mov
adc
leave
outsl
pop
inc
adc
sub
jmp
dec
sub
cmpsl
xor
inc
in
mov
mov
or
xchg
xchg
pop
fwait
dec
ret
rcr
mov
bound
and
cmp
test
pop
aad
outsb
add
out
pop
adc
pop
jg
mov
jno
popl
inc
std
in
aam
enter
scas
mov
fst
mov
push
push
sub
inc
fcomps
and
adc
mov
add
fidivrs
stc
rcl
inc
adc
sub
movsb
inc
pop
jno
dec
in
cmpsl
mov
add
pop
jno
pop
inc
and
mov
insl
and
std
add
lret
pop
push
test
icebp
in
and
test
dec
fcompl
aam
cmp
in
add
pop
arpl
mov
dec
ljmp
xor
arpl
std
aas
jg
into
icebp
sbb
ss
mov
movsb
stos
and
inc
add
xlat
and
xor
sub
stos
xchg
pop
hlt
jo
adc
call
adc
jp
subl
xchg
mov
push
movl
jge
add
adc
pop
jge
inc
je
shll
pop
sbb
push
ret
je
pop
push
sbb
or
movsb
pop
mov
jno
mov
repz
push
in
or
out
jne
leave
xchg
push
mov
inc
int
out
insl
jg
aas
mov
mov
clc
pop
aas
pop
sarb
lds
scas
or
jle
cli
aad
in
inc
or
and
add
test
inc
jns
push
inc
dec
mov
in
xchg
xchg
out
clc
add
out
inc
mov
ljmp
jae
scas
sub
xchg
cmp
sbb
fwait
mov
cltd
and
jne
or
dec
in
jge
cli
cmp
or
adcb
idiv
in
sub
fcomps
cmp
mov
cwtl
dec
dec
jecxz
mov
push
addr16
fisubrs
inc
adc
cmp
das
jnp
xchg
add
addb
dec
ja
arpl
pop
nop
mov
cwtl
cwtl
aaa
add
adc
imul
add
and
sbb
mov
js
or
xorb
push
js
push
pushf
pop
inc
dec
repz
jge
pop
xlat
fwait
xchg
xor
les
repz
cmp
dec
sbb
push
hlt
lods
cmp
pop
mov
inc
and
sti
dec
pop
xor
push
push
adc
dec
xchg
mov
aad
cli
outsb
jbe
push
inc
fs
std
sub
lea
loop
dec
in
add
insl
and
and
loopne
dec
lods
clc
mov
jl
dec
mov
ss
inc
pop
mov
lods
stos
or
cmc
pop
fcompl
cmp
pop
jo
mov
leave
je
leave
push
cmp
sti
lcall
sbb
xor
out
notb
rcll
leave
and
ret
dec
cmp
dec
je
or
pop
incb
mov
ljmp
dec
imul
cld
sbb
lds
inc
or
mov
insb
stos
loopne
inc
or
pop
and
mov
mov
jbe
jl
sbb
mov
ret
mov
jnp
jecxz
loopne
loop
sub
sub
in
aas
mov
fstl
test
mov
adc
or
nop
sub
xor
ficompl
push
test
and
sti
mov
fwait
cmpsb
movsb
incl
push
jno
xor
loop
sbb
xchg
cmp
or
out
pop
mov
mov
out
das
call
cmp
jae
mov
and
mov
push
inc
sub
and
aam
pop
call
into
cmp
lahf
xchg
push
leave
adc
jne
push
sbb
pusha
hlt
cmpsb
iret
sub
mov
mov
sbb
and
loop
xor
xor
jge
lods
stc
mov
gs
push
sbb
mov
and
lahf
push
hlt
andb
mov
ss
sbb
mov
add
mov
int
pop
cmpsl
mov
or
pop
push
int
lcall
mov
push
pusha
xor
dec
sbb
call
push
lds
fbstp
cmp
push
sbb
mov
sub
out
popf
andb
mov
das
jno
shl
add
js
shrb
push
xchg
lods
jnp
call
movsb
mov
std
push
push
pop
movsl
insl
jno
sahf
xchg
repnz
test
add
xor
sti
dec
jmp
jle
dec
and
sub
mov
push
or
dec
das
push
cmp
mov
mov
ss
and
scas
pop
xchg
pusha
sub
fsubrs
mov
xor
outsb
out
inc
cmp
pop
repnz
stos
scas
mov
loopne
cmp
aaa
jp
xor
adc
test
ljmp
pushf
int3
cltd
add
sbb
lahf
cld
insl
jle
pop
push
sub
mov
pop
mov
cmpsb
dec
scas
sahf
in
push
fxam
adc
sub
sbb
dec
stos
adc
jmp
inc
mov
pop
aad
push
or
pop
outsl
xlat
lea
xchg
cmp
lock
sarl
sti
or
add
loop
pop
cmp
stc
sbb
and
int
xor
and
test
out
inc
pushl
jo
mov
mov
pop
paddusw
addr16
cmc
or
or
enter
inc
mov
adcb
and
push
mov
fldt
pop
js
aas
mov
into
push
fsubs
call
in
ret
and
cld
jo
jmp
cmpsb
shrl
xchg
adc
xor
int
sub
icebp
xor
xchg
aam
sub
cli
sbb
dec
lods
pop
mov
shll
adc
and
cld
in
xchg
pop
repnz
pusha
hlt
adc
inc
xor
sbb
ds
and
xchg
or
fwait
popf
aas
out
adc
addl
sub
in
fidivl
mov
dec
jg
xchg
aas
xchg
xchg
or
mov
shlb
jo
sub
fstps
pop
mov
jl
dec
repz
sti
adc
rorl
cmp
fmulp
push
sbb
jp
aas
add
fisubl
dec
pop
bound
fidivs
dec
cs
push
data16
xchg
mov
adc
test
pop
repz
or
hlt
das
mov
sbb
jo
mov
sbb
xchg
xlat
xor
stos
dec
aaa
mov
push
lcall
pop
loopne
orb
je
pop
push
sbb
rcrb
pop
inc
xchg
push
or
and
filds
gs
adc
add
cmovl
shlb
ljmp
fistpll
push
sub
sbb
call
dec
ja
popf
aad
pop
loop
mov
pop
mov
lcall
clc
add
adc
ficomps
ds
mov
add
add
gs
enter
dec
enter
iret
aam
leave
out
lahf
xor
shll
or
push
orl
jle
mov
aad
fs
into
push
dec
daa
es
xchg
push
pushf
insb
mov
adc
pop
mov
bnd
stos
jnp
pop
push
jecxz
inc
push
mov
lods
lods
xor
imul
xchg
or
dec
and
jo
scas
ret
jecxz
push
aas
sub
adc
mov
xchg
arpl
sub
jb
pop
cmp
rolb
mov
adc
ds
push
hlt
and
lock
push
dec
or
dec
les
mov
aaa
cmpsb
pushf
mov
ja
cmp
or
mov
mov
sarb
fdiv
inc
sbb
dec
cmp
dec
sbb
push
sbb
in
mov
in
push
das
scas
sub
sbb
mov
fs
jle
cmpsl
shrl
hlt
std
je
cld
push
aad
jmp
push
inc
xchg
adc
in
push
addr16
jo
lea
push
mov
mulb
pop
ja
iret
sti
pop
mov
movsl
sub
xor
cltd
jb
inc
mov
sbb
lock
xchg
jl
xchg
jo
fmull
daa
lret
dec
push
bound
mov
jae
jecxz
into
sub
rcr
add
mov
lds
fildl
mov
mov
xor
push
icebp
mov
clc
xchg
iret
cmp
arpl
push
mov
fs
xchg
and
sub
repz
push
jp
fldl
loopne
addr16
fucomip
inc
mov
push
and
les
out
addl
in
xchg
hlt
mov
int3
cli
lea
lcall
and
inc
int3
pop
add
xlat
dec
je
push
mov
lds
push
insl
push
cmp
jp
loop
and
cwtl
out
fldl
clc
add
loop
sahf
mov
shr
insb
pop
jb
inc
aad
jl
aam
xchg
lods
fimull
push
add
xchg
sbb
mov
cmp
xchg
jne
pop
int3
dec
dec
sti
iret
repz
and
cs
icebp
es
push
pop
aam
add
push
je
movsb
inc
cmp
inc
shll
inc
jmp
popa
std
js
test
jb
sub
sbb
inc
cmp
shlb
ret
std
sarb
ja
cmp
test
out
cld
lret
fdivs
jle
dec
lret
jbe
idivl
leave
mov
jno
icebp
mov
movsl
dec
push
push
xor
fldl
shr
sbb
das
dec
pop
xchg
push
and
mov
and
in
ja
cwtl
ja
adc
push
push
or
mov
and
test
pop
inc
dec
or
pop
pushf
lock
imulb
cmp
jns
jmp
je
inc
nop
push
cwtl
cltd
cmp
jge
jmp
inc
mov
out
into
enter
les
insl
enter
int3
imul
push
xchg
and
sbb
xor
aaa
clc
daa
push
mov
push
sbb
and
push
and
jno
jne
js
dec
xchg
cwtl
push
arpl
enter
in
mov
adc
inc
add
or
ljmp
shr
mov
int3
sub
mov
xor
push
dec
in
pop
fiaddl
nop
test
cmp
cmp
dec
adc
int
xchg
movsl
lock
lcall
xchg
loope
rcll
scas
push
inc
and
ja
cltd
push
dec
sub
pop
sbb
rorl
popa
sub
fdivrp
dec
adcb
xor
jl
push
outsb
fcomps
aam
cmc
or
dec
sbb
outsl
imul
mov
xchg
dec
jl
insl
clc
dec
adc
pop
daa
mov
call
es
lahf
sub
mov
pusha
cli
sub
mov
es
pop
sub
mov
xor
mov
mov
or
shlb
jl
mov
repz
icebp
or
lret
ja
shlb
xlat
test
out
out
pop
xchg
sub
pop
inc
adc
inc
inc
das
push
xor
push
les
imul
jne
cmp
es
daa
fbstp
xlat
mov
inc
insb
clc
cmpl
cmp
adc
xor
insl
stos
inc
roll
fisubs
xor
jecxz
arpl
dec
mov
mov
sbb
mov
push
add
std
lea
je
mov
mov
dec
inc
lods
xchg
sbb
icebp
sbb
add
call
and
movsb
movsb
fldlg2
lret
les
popa
out
mov
jnp
out
mov
lods
fstps
sar
xlat
lods
or
popa
subb
inc
lods
pop
jmp
inc
in
stos
cmp
xchg
adc
dec
xchg
mov
iret
push
mov
cs
int3
imul
dec
sbb
pushf
jns
push
or
or
pop
inc
mov
mov
test
sbb
mov
dec
rcl
les
aas
lahf
xor
fcompl
outsb
mov
test
mov
out
pop
sarb
loopne
fwait
xchg
stos
cld
xor
outsl
mov
sub
aaa
outsl
int
cmc
sti
stos
push
xchg
pop
fdivs
cwtl
out
mov
mov
xchg
mov
aam
int
out
jl
jg
bnd
push
pop
sub
dec
stos
dec
mov
xor
cmp
jge
jecxz
jle
subb
shl
mov
push
fiadds
adc
push
xor
pushw
negb
ss
push
and
mov
out
push
arpl
stos
mov
adc
inc
pop
cmp
or
xchg
mov
cmovp
mov
and
ja
cmpsl
mov
fsubrs
arpl
lds
inc
jno
inc
ss
call
jle
sub
sbb
es
outsb
cli
adc
sub
cwtl
pop
jnp
inc
bsf
sbb
je
cs
loopne
out
and
xor
orl
jne
adc
push
and
jno
sahf
popf
js
mov
nop
add
cmpsb
pop
push
fisttpll
add
pusha
or
mov
xor
xchg
shrb
lock
jbe
mov
bound
mov
sti
mov
into
or
dec
roll
mov
imul
jmp
add
sbb
pop
sbb
pop
xor
outsl
int3
into
lods
jbe
jo
mov
cld
aad
mov
aas
outsw
jae
pop
cwtl
mov
jp
jl
or
fsincos
sub
fsts
test
mov
adc
fstpl
ret
xor
fucomp
adc
aam
mov
ret
dec
rcrl
jge
out
xrelease
cmp
xor
addr16
mov
icebp
rep
das
adc
addr16
and
mov
push
into
lds
pop
xor
gs
or
adcb
aad
xchg
loopne
fdivl
push
pop
mov
jnp
xor
in
adc
test
popa
frstor
or
mov
or
roll
scas
sub
adc
daa
jge
jnp
push
les
fnstenv
cwtl
test
in
fsubrs
stc
xor
push
dec
sub
lcall
or
in
shl
gs
lahf
inc
jg
mov
out
xchg
cmpsb
adc
leave
sbb
lahf
outsl
adc
xchg
push
or
daa
mov
pop
imul
enter
sti
jb
sbbb
sbb
cmp
pushl
inc
sub
mov
mov
cmp
lret
aad
shll
gs
cmp
inc
xor
dec
jnp
adc
cmpsl
pop
cltd
push
adc
push
pop
or
inc
xor
test
jne
dec
add
pop
shll
outsl
sub
inc
pop
inc
lret
cmp
test
adc
mov
push
add
paddusw
xor
ss
and
gs
shr
bound
fistpl
dec
test
inc
pop
pop
sbb
sbb
and
pop
dec
int
pushf
pop
pop
adc
mov
pushf
shll
cld
aaa
and
cmp
pop
lret
xchg
jg
xchg
aas
pushf
inc
mov
dec
cmpb
aam
les
lret
jecxz
inc
ss
insl
daa
xchg
cmpsb
in
pusha
inc
fwait
sub
popa
scas
hlt
cs
adc
inc
es
dec
scas
mov
mov
adc
pop
int
xor
push
and
xlat
fbstp
push
fs
xchg
pop
shlb
shl
aas
fistps
cmp
xchg
adc
addr16
add
scas
mov
mov
xchg
dec
bound
idiv
pop
js
xchg
push
test
pop
jmp
leave
jno
cmp
stc
inc
cld
repz
in
aaa
fsts
dec
mov
mov
push
xor
outsl
int
test
mov
push
pop
and
arpl
sub
sbb
dec
adc
sbb
test
mov
fst
popf
xor
add
test
in
mov
or
cmp
push
xor
sub
in
lret
shlb
in
test
mov
mov
mov
aas
sub
mov
add
jne
pop
fdivrl
jl
dec
and
adc
ds
rclb
out
sub
mov
out
es
pop
rclb
xchg
lods
dec
and
cmp
inc
adc
push
imul
inc
jb
sbb
sbbl
add
push
mov
pusha
add
testb
arpl
dec
pop
xchg
sti
sbb
imul
pextrw
pop
cmpsb
mov
gs
rcrl
dec
fs
scas
pusha
cmpsl
repnz
call
push
ret
into
dec
out
pop
mov
lds
push
enter
daa
push
jne
hlt
nop
jl
inc
aad
fidivrs
pop
insl
inc
xchg
pop
cld
sub
mov
daa
sub
mov
adc
dec
ss
mov
pop
adc
mov
sbb
jo
xor
xchg
mov
xchg
dec
inc
jge
out
scas
cmpb
in
inc
lods
aaa
loopne
fmul
loop
dec
or
jg
sub
dec
mov
pop
repz
add
and
enter
xor
xor
ror
jo
movsb
xor
jbe
fsubs
imul
dec
jne
adc
repz
popa
cs
push
jl
shl
mov
cmp
mov
or
insb
popf
cmp
in
scas
sbb
sbb
adc
inc
enter
ja
mov
cmpsl
ret
cmc
mov
shlb
jno
stc
mov
movsb
push
data16
mov
insl
lss
sbb
in
xchg
mov
mov
imul
test
pop
inc
xchg
int3
cmc
sub
fcompl
dec
loop
xchg
sub
cmp
mov
xchg
insl
and
sbbl
pop
sub
arpl
adc
and
ljmp
xchg
mov
jl
out
mov
pop
test
sub
dec
cli
dec
pop
fst
inc
shl
or
cltd
and
add
pop
subb
dec
and
imul
mov
aaa
xchg
sub
outsb
mov
push
loopne
insb
cmp
cmp
pushl
ja
inc
mov
sub
daa
xchg
inc
add
and
fistps
test
adc
xchg
loopne
leave
push
out
cltd
adc
mov
lods
cmp
test
mov
push
and
ret
push
sbb
mov
iret
xchg
inc
ja
gs
stos
ret
dec
ljmp
adc
or
jb
popf
mov
cwtl
sbb
mov
cs
and
cmpsl
fwait
jge
push
cmpsb
hlt
dec
mov
xor
dec
jge
int3
sub
sub
and
xlat
stc
xchg
movsl
mov
pop
setbe
jns
es
xor
das
jae
das
jge
out
push
stos
mov
in
lcall
shl
inc
mov
mov
cmc
adc
pop
pop
mov
test
movsb
hlt
fwait
sub
and
pop
hlt
test
inc
popa
pop
sbb
icebp
xchg
or
add
jns
or
ljmp
fwait
sub
lock
fcmovbe
xchg
rcrl
pop
jb
imul
xchg
cmp
jl
jle
and
aaa
mov
in
jmp
adc
dec
leave
mov
mov
int3
clc
xchg
dec
cmp
xor
fisttps
add
lods
movsb
repnz
orb
daa
or
fiadds
in
nop
dec
mov
pop
or
jns
push
push
fdivp
fisttpll
lahf
push
and
jmp
cli
fimull
xchg
and
fs
add
mov
aam
mov
das
cmp
popf
cli
fcomps
xchg
insl
pop
inc
mov
or
push
mov
push
cs
jne
mov
int3
mov
sahf
das
dec
inc
xor
xor
fucomip
lods
test
pop
negl
pop
sbb
adc
sub
pop
pop
push
dec
pop
inc
dec
sub
repz
mov
jg
add
test
mov
and
cwtl
or
data16
cltd
dec
fwait
pop
int3
jmp
jge
xchg
sbb
pop
or
inc
sub
outsl
xchg
movsl
inc
jl
mov
mov
js
cmp
test
test
mov
mov
or
aad
push
xlat
nop
and
mov
sbb
xor
pop
sbb
push
and
popa
loope
lods
shrb
call
fcompl
imul
outsb
inc
xchg
cmp
adc
aaa
push
in
xor
dec
cmp
jnp
pop
outsb
outsb
mov
sbb
xor
xchg
loope
loop
inc
aad
mov
dec
mov
add
je
sti
pop
mov
xor
pushf
pop
mov
cmp
xor
int
aas
cli
out
xlat
jge
popa
cmp
ds
shrl
inc
dec
out
pop
data16
fpatan
pushf
xchg
pop
inc
in
mov
and
ret
test
inc
call
inc
mov
scas
sbb
mov
adc
mov
hlt
push
lods
fistl
ds
cmp
scas
push
jge
fsubs
mov
loop
gs
dec
mov
pop
add
push
addb
sbb
ljmp
mov
enter
or
add
jecxz
mov
inc
cmp
test
cmp
je
adc
fisubs
mov
jle
outsb
sub
add
jge
pop
mov
jecxz
rcpps
movsb
cld
mov
cmp
fnstenv
add
inc
add
mov
pop
jne
mov
xlat
scas
and
cmpsb
stos
fbstp
cli
out
mov
std
cmp
sub
aas
adc
jl
icebp
movb
or
ret
adc
and
push
imul
add
in
movl
pop
and
sbb
fstp
insb
mov
adc
mov
loop
adc
bound
bound
dec
pop
gs
adc
orb
mov
cmovae
xor
pop
aas
stos
enter
clc
pop
rorl
mov
out
jle
inc
fs
dec
add
enter
cwtl
clc
jne
mov
test
arpl
cmp
cmp
mov
cmp
push
pop
jmp
fisttpl
sbb
ds
push
in
dec
aam
sbb
in
fmuls
je
sbb
in
push
stc
cmpsb
pop
jmp
inc
test
inc
mov
pop
or
orl
xor
fcom
rcl
mov
cs
pop
xchg
testl
divb
xchg
and
mov
dec
jle
int3
leave
xor
inc
mov
stc
mov
repz
test
cmp
out
adc
sub
and
cltd
mov
inc
adc
je
aam
test
addr16
ljmp
xor
mov
bnd
mov
mov
pop
mov
nop
pop
out
jb
jo
and
sbb
je
xchg
push
mov
mov
sub
fwait
ja
push
sbb
iret
mov
cmp
lea
push
push
jl
jmp
mov
push
dec
jnp
pop
sub
xchg
push
pushf
pop
mov
repz
or
sbb
mov
call
and
into
lcall
mov
mov
and
ja
or
aas
aaa
js
mov
sub
jno
aas
and
mov
xor
jle
mov
fucomp
jg
std
lret
loope
fs
insb
pop
pop
adc
mov
sbb
pop
fdivrs
scas
ljmp
mov
les
mov
jmp
xchg
sbb
adc
xor
push
adc
enter
push
pop
fucomip
es
imul
loopne
dec
mov
sbb
insb
aam
xor
xchg
push
into
pusha
ja
jno
or
xchg
cmp
aas
pop
repnz
inc
int3
mov
loope
and
sarl
adc
test
inc
cmp
nop
add
popf
cli
or
mov
call
inc
push
movsb
mov
push
js
mov
orb
mov
mov
adc
std
neg
lret
push
cmp
cwtl
popa
aam
out
stos
addr16
xchg
std
lods
int3
add
jb
or
pushf
sbb
addl
mov
and
mov
and
add
adc
sbbb
in
popf
sub
clc
push
mov
and
and
xchg
rol
in
sbb
xlat
lock
out
cmp
test
xchg
cmp
fsubs
popa
push
popf
mov
mov
aas
push
enter
adc
les
jl
ffreep
inc
sub
testb
xchg
enter
lret
jge
scas
adc
cmpsl
and
subl
mov
and
lahf
shr
pop
or
mov
scas
push
lods
cmp
js
push
dec
push
in
xchg
add
rol
push
out
or
mov
mov
pop
inc
fdivl
out
xlat
mov
jl,pt
pusha
fstp
gs
push
or
rcll
cld
fwait
shld
mov
jg
mov
sbb
movsl
adc
cmp
mov
add
jle
out
std
cmpsb
pop
imul
lock
xchg
inc
pop
pop
mov
and
cmp
mov
fstps
lds
push
ja
xchg
push
cwtl
sahf
pusha
test
jbe
mov
addr16
mov
test
dec
xlat
mov
filds
jle
inc
inc
sti
loopne
pop
iret
sahf
cmpsl
cmp
js
push
scas
and
adc
mov
sbb
add
push
cmpsb
pop
adc
jg
mov
aad
mov
imul
mov
lods
addr16
data16
lret
push
lahf
push
dec
pop
es
add
mov
or
popa
loop
jp
stc
pop
push
inc
adc
outsl
sub
call
int
cmpsl
mov
test
xor
pop
sbb
adc
jne
mov
and
mov
lcall
pop
lods
adc
outsl
daa
inc
popf
mov
out
sub
pushf
loope
xchg
sub
adc
cld
xor
and
xchg
mov
seto
jle
adc
xchg
hlt
mov
sar
ljmp
xor
aaa
roll
mov
xor
lds
cmc
notl
popf
cmp
addb
or
movsl
pop
test
add
fwait
push
xor
jno
pushf
imulb
jle
popf
add
aaa
cmpb
leave
pop
adc
addr16
int
pusha
cltd
shlb
sti
ja
into
pop
jbe
sbb
dec
pop
xor
test
test
mov
push
or
xor
add
ss
dec
mov
cs
fcmovnb
mov
push
adc
jp
cmp
fwait
jge
inc
leave
and
or
jno
mov
push
pop
inc
pop
gs
mov
pop
add
in
jne
stc
adc
ja
dec
or
insb
cmp
mov
sub
iret
popf
xchg
mov
xor
outsb
bswap
inc
lods
int
popf
jb
mov
cltd
inc
shll
test
lcall
insl
push
test
sub
pushf
mov
aam
push
mov
push
dec
repz
push
mov
dec
push
jb
cwtd
cmp
clc
shrl
xor
xchg
inc
add
push
inc
sub
xchg
lret
and
shll
mov
jne
dec
push
outsb
imul
int3
sti
xor
and
cmp
fnstcw
inc
push
push
xchg
int3
lods
pop
mov
jae
jae
mov
xchg
aas
imul
sbb
or
mov
xchg
and
aaa
in
push
add
pop
add
ja
je
rorb
shll
leave
or
cmp
jl
and
insb
sti
fsubs
add
dec
dec
jbe
pop
test
or
push
push
or
mov
jl
popa
push
mov
rclb
mov
cwtl
jmp
out
mov
and
jle
pop
out
cwtl
adc
sbb
sbb
insb
xchg
xchg
cmc
scas
scas
and
dec
ljmp
and
fcmovu
pop
movsl
cltd
lret
repnz
or
movsl
lcall
mov
int
stos
cltd
add
data16
pop
int
pop
mov
dec
or
rorl
idivb
test
notb
mov
inc
popa
mov
std
movsl
enter
sub
pop
stos
push
jecxz
sbb
cltd
and
mov
mov
sub
push
mov
and
ljmp
lods
push
scas
enter
pop
xor
jb
mov
aaa
shrb
and
xchg
push
and
dec
mov
pop
insb
rsm
andb
sbb
xchg
imul
inc
sbb
and
int
call
mov
jecxz
sub
rcrb
jne
xlat
mov
inc
sub
and
inc
movsb
dec
cli
js
and
and
loope
addr16
insl
add
mov
adc
movsb
lahf
jecxz
cltd
into
andb
xchg
loope
mov
test
rolb
fs
cwtl
int3
jecxz
je
test
adc
cmpl
jg
jno
fdivrl
lcall
mov
cmp
leave
test
push
popa
inc
cmp
leave
nop
jo
hlt
lods
mov
lea
cmc
push
outsl
adc
icebp
jae
pop
xchg
ficoms
mov
outsb
jo
jne
movl
lods
add
jge
fildll
ret
aad
popf
dec
arpl
add
ret
addr16
insl
mov
mov
sbb
fwait
out
rcr
mov
sbb
push
sub
test
scas
fldt
adc
ja
mov
adc
sbb
std
mov
xchg
add
rorl
cmp
inc
sub
test
add
out
stos
mov
hlt
lds
aad
mov
pushf
sub
movsb
inc
insl
bnd
notl
mov
out
pop
lds
sbb
and
cltd
repnz
leave
and
jmp
cmp
imull
sbb
jno
int
clc
and
push
leave
xlat
mov
or
fdivp
mov
iret
mov
pusha
lds
add
sub
aam
adc
fs
cmc
out
and
ret
test
jbe
xor
cmp
adc
mov
ljmp
dec
mov
insl
fwait
jnp
and
inc
int
in
cmp
jl
das
into
push
sub
mov
in
or
mov
and
lret
sub
icebp
push
loope
fstpt
in
outsl
rorl
mov
fbld
dec
inc
jo
pop
fnstcw
add
popa
std
pop
stos
add
sub
mov
mov
and
or
shrl
pop
imul
pop
add
mov
ret
mov
sub
mov
in
cltd
fimuls
jo
cli
pop
fadd
push
loopne
insl
sub
fildl
ficomps
xor
jl
outsl
adc
std
xchg
inc
jle
repnz
mov
dec
lea
pop
shrl
aad
sbbb
or
popf
cmpsl
or
mov
sahf
mov
stos
pop
loope
or
push
cmp
ds
adc
rcll
bound
out
and
mov
imul
mov
or
mov
sbb
iret
push
loopne
xor
xor
xchg
pop
sti
and
lods
mov
cmp
repnz
cld
into
xlat
add
sub
add
mov
pop
repnz
iret
jmp
adc
mov
icebp
adcb
lods
jmp
insl
adc
clc
les
ss
sub
fnstsw
mov
adc
dec
rolb
and
std
mov
aaa
cwtl
mov
inc
fcomi
pop
add
sbb
in
cmpsb
sbb
icebp
test
enter
xchg
pop
hlt
xor
mov
aad
push
ret
sbb
xchg
idivb
push
mov
mov
mov
adc
lcall
add
ja
mov
insl
cmp
xchg
or
shrl
hlt
and
in
jge
std
ret
data16
sbb
aaa
fistpl
push
inc
jbe
mov
adc
enter
lahf
sbb
out
sub
jo
sub
dec
std
jmp
stos
je
lds
jb
pop
pop
dec
or
test
lds
ljmp
and
push
mov
xor
nop
daa
dec
xor
shrl
pop
xor
dec
lock
cmp
and
xchg
das
fsubrp
mov
pop
mov
rcrl
int
lahf
decl
hlt
lret
cmp
fidivl
cld
mov
imul
fldt
fwait
adc
jmp
cmc
test
xor
cli
pop
in
pop
imul
pop
pop
pop
add
xlat
mov
mov
nop
push
bound
cmc
loop
insb
mov
scas
and
fildl
in
mov
cmc
data16
je
jbe
push
xchg
or
fstps
adc
int3
lret
and
adc
lret
xchg
jne
dec
ret
jno
sbb
cmpsb
adc
mov
ljmp
shlb
loope
ror
out
gs
cltd
mov
inc
pop
cmp
adc
out
ja
movsl
rclb
inc
ficompl
arpl
cmovp
pop
js
xchg
mov
push
xchg
or
cs
mov
loop
subl
xchg
ljmp
ds
scas
pop
jg
outsb
clc
pop
sub
mov
loop
mov
ja
jecxz
sbb
pop
xor
xchg
je
cmp
xchg
outsl
xor
enter
jnp
lods
addr16
stos
test
pushf
inc
xchg
cmp
adc
hlt
push
arpl
outsl
xor
jbe
ret
push
mov
push
dec
repz
loopne
and
pop
hlt
cmp
mov
jmp
inc
jl
jno
das
jmp
and
int
cltd
push
popa
or
and
in
inc
arpl
xchg
bnd
dec
je
xchg
cld
sbb
lcall
cmpl
jl
or
aaa
je
or
std
out
rcrb
icebp
ss
sub
jae
jne
sbb
xor
outsl
inc
leave
xchg
test
dec
xor
and
aad
xchg
cmp
addr16
push
lods
out
adc
fwait
loope
inc
scas
subl
jnp
dec
cs
sbbb
xchg
dec
or
pop
ss
push
fwait
and
sbb
xchg
and
mov
loopne
lock
cmpsb
add
leave
push
stos
test
scas
cmp
xchg
push
dec
js
mov
add
push
insl
mov
mov
int3
data16
xchg
das
sbb
and
test
xchg
lock
inc
icebp
jno
and
int3
rcl
out
in
or
cwtl
mov
int3
movsb
je
dec
mov
loope
and
xchg
fists
and
popa
sbb
xchg
adc
add
scas
push
adc
std
in
test
xlat
push
fdivrp
xor
test
adc
adc
inc
inc
cmp
mov
xor
out
enter
push
mov
pop
inc
pushf
mov
cmpb
mov
insb
or
jne
inc
test
xchg
leave
mov
pop
jg
jnp
jle
xchg
jge
push
outsb
push
enter
mov
femms
shll
sub
push
hlt
bound
insl
pop
jns
loop
sbb
daa
lahf
repnz
dec
cmp
das
jmp
fs
sahf
jecxz
ret
sahf
ret
jge
repnz
ret
jl
mov
lods
inc
jb
leave
cmp
and
jne
sbb
push
arpl
in
repz
mov
jmp
sbb
jge
jecxz
cmp
mov
push
rolb
fisttpll
pop
test
sarb
lcall
sarb
lods
jnp
mov
mov
cmp
lods
cmp
in
call
dec
sub
xabort
cmp
xor
adc
je
add
je
loopne
cmpsb
push
xchg
fildl
iret
jg
add
fbld
or
outsb
push
push
mov
call
rolb
aas
cltd
jg
pop
xor
nop
and
sahf
and
movsb
fimull
pop
mov
lods
cmp
and
pushf
cli
popf
dec
mov
lods
push
adcb
dec
lahf
lret
pop
push
mov
cli
cmpsl
pop
adc
cli
lock
add
mov
or
jp
aad
fisttps
lea
sbb
fwait
lods
or
mov
sub
pop
ficomps
loopne
leave
or
in
push
mov
sahf
sbb
roll
jmp
test
ds
or
gs
push
lods
pop
in
jge
icebp
ficomps
mov
dec
popf
xor
xor
nop
out
jnp
adc
xchg
std
fcomps
mov
orl
testb
fisubrs
ss
xchg
or
scas
hlt
int
pop
test
sbb
mov
hlt
push
iret
incb
push
repz
shll
xor
mov
out
pop
pop
les
fbstp
jo
adc
pusha
insb
in
sub
xor
cwtl
int3
cwtl
popa
xchg
jnp
xchg
mov
cwtl
and
bound
add
rcll
pop
out
addr16
iret
shrb
fidivrl
inc
mov
mov
loop
xchg
add
mov
push
pop
test
repnz
pop
sub
lret
loopne
mov
push
cmp
int3
pop
les
push
adc
rcrb
xor
push
nop
aas
add
and
pop
cli
dec
xchg
stc
loope
push
out
sub
jno
sub
or
adc
and
jo
or
cmp
mov
in
mov
insb
mov
push
cwtl
insl
ret
push
int
out
repnz
sub
cmpsl
dec
std
cwtl
pop
jns
mov
in
inc
xchg
cmp
aas
sbb
loop
lea
bnd
scas
repnz
push
or
enter
xor
inc
inc
aad
cmp
int
jnp
sub
or
mov
pop
pop
push
jne
stos
jle
jecxz
mov
cli
dec
rcl
nop
jle
cmpsl
daa
filds
aad
shr
gs
iret
mov
jno
add
cs
pop
imul
pop
xchg
sub
xor
je
sbb
das
arpl
cmp
lret
adc
cmp
fsubs
pop
outsl
stc
lock
adcb
pushf
adc
jnp
sti
and
sbb
outsl
repz
add
pop
fistl
sti
mov
test
int
sbb
sub
dec
add
jp
xor
jb
bound
mov
in
imul
cmp
imul
in
sbb
arpl
inc
ja
cmp
and
aad
xor
xchg
scas
xchg
in
lock
mov
es
pop
xor
stos
aam
pop
je
test
popf
xor
adc
cmp
cmp
sub
pop
out
imull
lock
rcl
addl
or
jp
lock
fcom
pop
int3
lret
sbb
ds
sbb
js
out
mov
push
pushf
out
cmpsb
pop
stos
loopne
cwtl
stos
fnclex
adc
mov
lret
jo
scas
or
rorb
cmpsb
xor
aad
je
cwtl
push
jnp
inc
sbb
aad
std
lea
and
test
dec
add
sub
and
push
sbb
clc
enter
fs
mov
sub
sub
and
sbb
movsl
stos
jnp
out
push
insb
cmc
xchg
mov
ficoml
xor
mov
sbbl
sbb
push
add
cwtl
repz
jns
xor
xchg
popa
lds
pop
cmpsl
jecxz
push
and
faddl
push
lcall
jbe
shll
xlat
jle
push
push
xchg
and
out
pushf
mov
movsb
lea
jns
fcoms
ret
xchg
sarl
leave
xchg
cs
inc
add
stc
cmp
cmp
inc
dec
fnstenv
xchg
pop
subb
sub
mov
inc
sbb
pop
mov
and
or
ss
enter
inc
movsl
xchg
into
inc
adc
push
notl
jl
aad
mov
mov
out
in
mov
stos
sbb
hlt
outsb
pusha
mov
push
dec
mov
pushf
add
daa
ficompl
insl
loopne
shrl
jae
jg
and
and
cmp
cli
jp
pop
test
xor
or
dec
cmp
mov
sbb
push
mov
das
mov
ja
mov
jle
lods
xor
rcll
sub
pop
cmpsb
mov
mov
cld
and
insl
nop
das
int
les
ljmp
pusha
mov
pop
es
or
add
cmp
xchg
fidivl
or
add
sub
adc
pop
or
dec
aad
xchg
lret
or
adc
adc
pop
jmp
lds
dec
jae
xchg
cld
das
jbe
xchg
insl
push
mov
pop
test
and
je
or
cmp
insb
mov
and
jl
rcrb
dec
xor
popf
in
push
xor
add
sbb
or
and
or
and
mov
cli
cmp
pop
jne
in
stos
addb
pushf
jbe
sbb
pop
rcll
pop
cs
inc
xor
xlat
insl
jl
cmp
xlat
popa
shll
push
and
mov
pop
in
xchg
scas
in
sti
and
repnz
push
jg
dec
loope
jge
addr16
xor
aam
inc
lcall
push
mov
dec
push
xchg
enter
leave
and
inc
repnz
loop
jmp
clc
jno
add
jno
loopne
sbb
call
arpl
in
xor
cmp
dec
xchg
pop
sub
xor
pop
or
lds
aaa
fwait
inc
jge
and
test
out
out
mov
adc
push
jb
rclb
mov
dec
add
mov
cmp
cmpl
stos
dec
jg
xlat
popf
fnsave
mov
ss
mov
sub
icebp
bswap
xor
push
stos
add
rcll
mov
push
cmp
pop
push
xor
lea
int3
loopne
jle
pop
cvtps2pd
add
adc
and
jp
or
mov
cmpsb
dec
cmp
ja
jne
pop
and
xor
pop
scas
nop
dec
jl
test
lahf
pop
les
jge
pop
leave
jl
movsl
cld
fisttpl
xor
jle
xchg
rol
ret
rcl
add
xchg
or
dec
dec
mov
xchg
out
mov
insb
dec
jns
sbbb
xchg
cmp
cmp
or
mov
adc
jnp
out
xlat
cmp
dec
xchg
sub
repnz
jle
jbe
xchg
stos
cli
movsl
andb
fsts
mov
inc
jp
enter
cmp
jg
cltd
mov
xor
inc
xchg
mov
movsbl
mov
movsl
sti
movsb
or
xchg
push
ds
imul
mov
jnp
mov
inc
test
test
jae
aas
insb
inc
mov
inc
xor
fsubrl
ret
popf
add
mov
sar
pop
sub
pop
cmc
xor
cmovnp
mov
movb
jnp
pop
adc
nop
lret
push
or
jnp
cmc
mov
scas
rorb
cmp
ficompl
xor
out
shll
aaa
insb
clc
push
shl
jle
lods
pop
cmc
mov
popa
mov
xchg
push
or
add
out
insb
jecxz
imul
cmp
fcomps
ret
dec
les
jp
mov
fbstp
add
nop
mov
arpl
mov
arpl
push
dec
push
xor
ret
and
dec
aad
mov
mov
cmp
xor
ja
fwait
ss
cmp
push
pop
lods
aas
or
hlt
jge
std
loop
loope
into
dec
fsubr
in
and
pusha
mov
jl
and
neg
mov
insb
sub
jb
fwait
mov
jp
mov
pop
cmp
cmc
in
loopne
fistpl
lret
incb
add
aaa
imul
push
xchg
cmc
bound
push
lahf
xchg
xchg
lods
ja
sub
jge
call
push
push
scas
sub
int
insl
inc
dec
sub
xor
cmp
out
dec
call
cld
and
out
sub
frstor
ret
mov
add
adc
ret
mov
decb
mov
xchg
mov
jl
and
repz
xor
push
push
push
les
mov
pop
incl
sbbl
push
inc
xchg
sarl
rolb
adc
pop
sbb
and
mov
loop
sar
sub
pop
pop
adc
fs
and
loop
fistpll
fidivrl
cmpsb
push
xchg
std
lcall
movsl
cwtl
dec
dec
sbb
xor
in
sub
popa
mov
test
sbb
mov
arpl
cmc
scas
dec
mov
rcl
out
leave
push
jae
je
imul
neg
sub
sub
and
dec
ja
pop
shll
sbb
inc
sbb
clc
or
sbb
add
lret
jae
xchg
jecxz
sub
or
in
mov
sub
ror
sub
lods
pop
mov
xchg
js
sub
xchg
mov
xchg
xchg
adc
and
int
lcall
hlt
and
lret
xor
rcl
arpl
pop
testb
enter
jmp
inc
adc
sbb
mov
lahf
jecxz
loope
arpl
or
negl
mov
sar
enter
pusha
mov
xchg
and
enter
mov
sub
mov
mov
fwait
sub
sub
fsubrl
repz
mov
dec
les
movups
mov
push
xchg
push
rol
sbb
mov
push
sub
mov
outsb
jl
lea
sub
popa
mov
popa
fldz
shlb
pop
mov
mov
dec
pop
je
mov
dec
shr
test
add
mov
jmp
cli
ljmp
xchg
jl
lahf
push
inc
fildl
sbb
sbb
fldl
iret
rcrb
das
in
dec
rcrb
mov
insl
mov
dec
sbb
xlat
xlat
lea
add
or
add
pop
sbb
pop
shrl
or
mov
push
xor
fidivrs
mov
cmp
stc
cmp
cli
stc
xchg
add
push
aas
rcrl
test
nop
sbb
push
cli
mov
jo
dec
ret
nop
xchg
fdivrs
push
push
cli
iret
aad
and
es
mov
dec
jno
mov
cmp
clc
out
stos
jns
xchg
fisttpl
mov
inc
sub
jg
notl
mov
push
lret
ret
and
ljmp
call
or
jb
flds
fwait
cmp
lret
mov
shrb
lods
sub
repz
scas
and
sti
xchg
mov
mov
dec
pop
mov
imul
outsl
dec
cmpb
lods
mov
and
cmp
cmp
push
mov
cmpsb
cmpb
pop
ficomps
insl
aas
lods
in
pop
popf
cmp
xchg
ficompl
adc
mov
loopne
push
aas
dec
xchg
repnz
lds
add
inc
xchg
cwtl
cwtl
xchg
test
add
incb
fcompl
jle
adc
dec
decb
bound
pop
push
outsl
push
in
jp
pop
in
popl
xor
jnp
std
add
mov
mov
cmp
dec
mov
and
push
mov
repnz
mov
cmp
jno
out
mov
ficompl
iret
or
in
mov
jp
stos
sub
call
loopne
sub
in
adc
mov
pop
sarb
jge
pusha
mov
cmp
mov
dec
aam
out
adc
sub
je
or
iret
outsl
mov
test
in
push
in
loop
sub
jecxz
shr
aad
push
add
outsb
outsl
sub
std
xor
mov
lcall
insl
sub
stc
dec
mov
lods
movsb
mov
jo
jns
cmp
je
in
cld
loopne
jecxz
fdivrl
lods
out
pop
and
insb
movzwl
add
movsl
xchg
scas
sbb
pop
fwait
out
and
dec
ss
flds
dec
clc
jo
in
and
jne
rclb
rolb
std
add
setge
or
inc
mov
push
jne
pusha
jae
daa
mov
or
adc
sub
lret
and
xor
pop
ljmp
rorl
sbb
push
mov
ficoml
andw
test
jp
gs
nop
fisubl
ret
lret
inc
add
test
jns
adc
ds
sbb
lds
or
mov
sahf
xchg
outsb
movsl
mov
stos
jge
test
mov
mov
dec
cli
es
cmpsb
outsl
mov
mov
jl
dec
xor
inc
or
xchg
jbe
mov
lcall
push
push
adc
mov
mov
jo
lret
jns
jo
cmp
and
loop
mov
sbb
call
add
leave
clc
pop
into
lret
xchg
notb
cmp
mov
dec
inc
int
pop
push
call
in
fisubl
sti
mov
jb
cmp
push
add
xchg
jo
fsubs
mov
out
arpl
test
cmp
imul
mov
lock
out
pusha
mov
stos
popa
mov
pop
or
cmp
outsl
sub
pop
fdivp
pop
add
mov
negb
cmp
ret
sbb
inc
mov
iret
mov
scas
push
inc
int3
push
or
inc
mov
ja
fadd
mov
jmp
pop
into
inc
mov
testl
or
xchg
inc
xor
in
ror
sbb
sbbb
dec
dec
xor
insl
ss
cltd
loopne
pop
test
ds
cmp
pop
push
cmpl
sahf
fcomp
dec
push
pop
pop
int3
mov
loop
sbb
and
out
pop
stos
jno
js
xchg
cs
fnstcw
repz
push
mov
dec
jo
add
iret
pop
lea
or
cmpl
push
and
in
sbb
xchg
adc
enter
in
xor
push
xor
xor
sub
subb
testl
pop
jg
cmp
pop
pop
jl
outsb
std
in
enter
adc
std
jl
xor
flds
or
mov
fsubl
and
insb
push
cmp
cmpsb
imul
jne
test
aad
sbbl
lret
inc
push
frstor
push
daa
mov
scas
je
xor
push
adc
aad
outsb
mov
mov
jl
bound
mov
scas
mov
mov
pop
popf
sub
in
and
popa
fwait
movsb
mov
fwait
stos
test
mov
add
dec
jmp
add
mov
add
lock
mov
push
mov
cmp
push
adc
faddl
fistl
and
jns
or
mov
fnstsw
dec
fstps
sbb
fcmovu
sti
in
adc
jge
mov
or
inc
and
push
out
hlt
pop
xchg
or
imul
in
bound
jmp
call
mov
jecxz
in
mov
sbb
icebp
into
mov
adc
jg
enter
repnz
xlat
push
jbe
or
or
pusha
push
sahf
or
jl
pop
dec
into
adc
mov
aas
iret
push
popf
in
adcb
cltd
aam
test
mov
test
cmpsb
iret
cli
and
fmul
test
arpl
xchg
mov
pop
jmp
mov
loope
dec
aaa
les
ret
ljmp
cld
int
fisubrs
scas
and
orl
stos
mov
jge
fmull
adc
push
inc
ja
addb
cmpsl
sbb
add
ret
xor
adc
scas
adc
dec
mov
xchg
add
xchg
scas
push
mov
mov
add
push
push
std
inc
fs
pop
xchg
jp
push
bnd
aad
iret
mov
lods
jmp
inc
xchg
mov
les
shll
rcrb
xchg
cmp
sbb
imull
push
mov
lods
and
push
mov
hlt
xchg
scas
jo
xchg
mov
je
cmp
loope
add
js
cmp
movsl
clc
cmpsb
arpl
jne
call
out
cmp
aam
mov
xchg
jne
push
cmp
scas
inc
cmpl
es
out
cmp
cltd
xchg
sub
lock
push
xchg
call
div
jo
fnsave
std
pushf
push
out
fs
lock
sbb
xchg
xchg
fidivrs
adc
mov
dec
bnd
fs
jbe
jne
cmpb
cmp
mov
jnp
dec
lods
lret
push
loop
repz
int3
and
scas
les
jo
pop
test
movlps
jo
insb
jns
test
push
mov
add
jne
sub
sbb
lock
fwait
std
mov
outsl
je
pop
popf
pushf
xchg
ss
inc
mov
scas
mov
test
loopne
mov
ret
movsl
xor
xchg
sbb
inc
mov
pop
enter
int3
lret
xor
repnz
xchg
push
loope
inc
ss
add
popf
xor
inc
mov
rcl
or
jl
adc
pop
mov
cmc
mov
imulb
ret
ret
inc
sti
sbb
adc
ja
mull
filds
in
add
pusha
push
inc
fucomip
insb
xlat
pop
lds
pop
xchg
mov
imulb
jo
and
je
arpl
dec
ljmp
test
add
dec
mov
sahf
aaa
mov
lds
int
int
sub
inc
pop
pop
adc
push
lods
cmp
inc
add
push
fcomps
sub
roll
or
addr16
cmp
in
push
adc
pushf
ds
or
xchg
es
inc
jle
mov
dec
mov
dec
dec
dec
add
inc
add
inc
mov
loopne
loopne
dec
or
xor
mov
push
sbb
mov
push
push
jns
test
sub
mov
or
adc
clc
xor
xor
inc
imul
fsqrt
dec
iret
rolb
xor
push
push
and
sub
xchg
js
or
adc
push
push
adc
fisubrs
jo
xorb
mov
and
lock
imul
add
cmp
ds
xor
xor
repnz
and
fidivrs
ret
jbe
nop
in
scas
sti
mov
mov
stc
cltd
lods
test
push
mov
and
clc
in
stos
jle
mov
rorl
xor
sub
and
or
ss
cmc
xor
sbb
int
mov
push
xorb
inc
jle
cld
das
xor
dec
push
stos
pop
std
mov
scas
pop
push
daa
and
pop
or
ds
xchg
int3
mov
lds
mov
daa
jmp
mov
dec
repz
aas
xchg
sbb
xor
jb
push
out
push
ss
jmp
mov
div
lret
in
scas
call
sbb
movb
and
sahf
in
ds
into
je
int3
sub
inc
or
repnz
sub
jg
fs
lret
cmpsl
pop
pop
ja
jg
fwait
scas
add
cmp
sbb
test
int
adc
jnp
xor
bound
mov
aaa
sbb
push
scas
adc
mov
add
test
push
stc
and
push
inc
test
notl
les
adcl
xchg
sub
push
data16
cmc
sbb
aam
or
test
fstl
mov
and
insb
test
popa
push
dec
inc
movsl
jo
jge
fcmovu
mov
add
rolb
loopne
xchg
mov
lods
add
mov
adc
rorl
adc
pop
and
pop
iret
ret
mov
sti
push
mov
stc
repz
mov
dec
loope
insb
sahf
xor
cmp
cli
cmp
jno
ret
lcall
stos
mov
inc
sub
jge
cld
dec
mov
cmpsb
or
pushf
pop
fs
xchg
int
call
pop
push
and
xchg
jecxz
leave
pop
xchg
test
pop
push
xor
jb
or
test
xchg
cmp
int
int3
setg
xor
xchg
mov
out
push
cli
jge
aaa
jae
leave
shll
fwait
stos
push
mov
mov
in
push
sbb
mov
outsb
lret
mov
idivl
aas
mov
or
in
xchg
adc
adc
lahf
pushl
out
fdivrl
ds
xor
stc
add
pop
and
adc
sbb
lahf
mov
daa
pop
inc
add
mov
xchg
inc
mov
fistl
mov
in
sar
or
xchg
in
int
test
sbb
dec
mov
push
mov
mov
iret
sbb
mov
push
mov
mov
aam
cs
mov
and
in
out
mov
dec
mov
pushf
or
js
dec
jb
test
cmp
lcall
pusha
add
iret
sbb
and
dec
pop
movsb
pop
cmp
lret
adc
lcall
inc
sub
push
cmp
cld
insl
in
jbe
scas
push
cmp
xorb
xchg
mov
pop
mov
push
xchg
sbb
push
out
outsl
pop
icebp
ljmp
arpl
mov
sarb
lea
test
nop
jg
cld
bound
mov
shl
mov
push
idiv
xchg
inc
push
jo
cli
std
cmpsl
jbe
arpl
addb
push
ret
pop
dec
idivl
fcomp
or
ja
lahf
orl
sbb
push
inc
jns
dec
ficoml
xchg
leave
sbb
and
push
xor
jbe
ja
add
mov
clc
mov
insb
popa
idiv
jl
shl
sbb
out
pop
jno
push
and
dec
inc
push
movsb
icebp
out
mov
movsl
fldenv
xlat
in
xchg
push
stos
div
daa
or
pop
sub
lds
iret
lcall
add
pop
adc
push
ss
scas
mov
je
dec
inc
cmpsb
pop
pushf
les
dec
mov
push
mov
xlat
fcmovb
jne
test
sarl
ror
inc
cmp
ficomps
inc
out
mov
fisubs
add
shlb
lea
sub
dec
test
aam
mov
iret
jg
push
popa
push
fisubl
and
int
sahf
jecxz
pop
repz
pushf
jle
dec
jnp
fwait
rorb
add
or
in
cmp
mov
mov
pop
jmp
cmp
shrl
mov
dec
pushf
jl
jg
pusha
popa
jg
scas
popa
and
dec
movsl
pusha
popf
test
jle
test
xlat
stos
xor
sub
pusha
int
mov
stos
add
cmp
xchg
mov
data16
mov
clc
in
sbb
sub
xchg
push
dec
pop
stc
cmp
dec
faddl
cmp
dec
pop
iret
lcall
push
jg
jmp
out
push
cwtl
dec
mov
pushf
call
add
fs
fwait
mov
dec
loopne
loop
xchg
enter
push
daa
dec
xchg
mov
je
mov
scas
in
jnp
je
mov
sbb
and
in
aam
mov
push
push
ljmp
push
xchg
stos
adc
fs
xor
popf
push
out
test
xor
pusha
and
clc
mov
enter
push
ss
addr16
mov
add
imul
repnz
mov
mov
cmp
jecxz
mov
scas
mov
lret
test
insb
and
xchg
or
jnp
in
mov
cs
cmovs
stos
mov
sbb
test
dec
jae
or
mov
fsubr
mov
hlt
pop
popa
cmc
outsl
scas
repz
xchg
out
cwtl
mulb
sbb
or
sub
addr16
in
mov
cmp
nop
mov
push
jle
gs
aad
sub
jmp
adc
fidivrl
das
or
movsl
add
fnop
xor
shlb
clc
pop
fs
pop
hlt
nop
into
mov
ret
repz
adc
sbb
jmp
jne
cli
fildll
jne
test
das
ror
add
mov
sub
dec
aad
mov
push
and
lods
xor
mov
xchg
mov
fwait
mull
mov
leave
pop
adc
sbb
mov
mov
pop
adc
adc
cmp
sbb
negb
aas
outsb
je
rcrl
jb
jb
jb
dec
sbb
jge
cmpsb
loopne
jo
sbb
xchg
ret
cmpsb
sbb
sub
pushf
pushf
scas
cmc
xchg
jo
in
mov
xchg
loope
insb
loop
fs
push
jb
dec
mov
mov
pop
add
mov
lods
xchg
aad
repz
inc
sub
mov
loope
mov
sub
adc
add
mov
mov
test
cmpsb
incl
scas
xor
cmp
jp
adc
ret
lods
repz
sub
and
aaa
call
inc
les
popa
jle
xchg
and
aaa
out
shr
into
scas
and
data16
sub
or
sbb
in
test
xor
imul
push
dec
or
xchg
cwtl
mov
aad
xlat
jmp
fcomps
das
mov
lahf
cmpb
fcmove
testb
sbb
mov
xchg
fdivr
lret
pushf
data16
arpl
mov
sbb
out
xchg
inc
add
xor
into
pop
add
int3
out
inc
popf
int
pop
or
mov
jnp
jnp
hlt
mov
mov
or
pop
jge
cmp
test
jae
adc
lret
jl
inc
icebp
inc
fsts
jnp
arpl
pop
add
cmp
mov
push
insl
mov
aaa
or
mov
test
dec
stc
mov
mov
stos
das
ljmp
lret
testl
repz
lock
push
cld
ficoml
sbb
push
and
push
cmp
aad
mov
pcmpeqw
aas
fucomip
pop
aam
jg
dec
fsubrs
out
pop
xchg
aam
mov
fdivrl
mov
xor
rcrl
xor
or
roll
mov
jb
sub
mov
test
dec
pop
pushf
ficoml
punpckhbw
cwtl
bound
adc
in
pop
mov
cmpsl
pop
int3
ret
stc
ljmp
cmp
cmpsb
test
sti
negb
adc
je
adc
in
xor
sub
add
les
lcall
adc
and
iret
mov
xchg
inc
je
cmp
leave
or
mov
push
jle
mov
ljmp
in
loope
add
cmc
xchg
inc
mov
push
daa
ret
cmp
pop
sbb
mov
lahf
les
jns
sub
xchg
mov
lahf
push
jns
das
outsl
stos
cld
xchg
jl
aam
in
xchg
lret
mov
shr
pop
out
push
lret
je
push
lods
push
test
insl
sub
pop
mov
jae
and
push
inc
mov
lock
mov
call
into
jno
push
mov
jge
popa
sub
sbb
notl
aaa
inc
lds
cwtl
push
jg
test
or
or
jp
imul
dec
adc
and
push
js
cmp
cld
lea
xlat
or
mov
mov
dec
fcompp
out
and
cmp
roll
inc
push
repnz
cltd
or
dec
xor
les
and
xchg
push
add
test
xchg
mov
cli
push
dec
sbb
jae
mov
int3
loop
xchg
je
rcrl
xchg
addr16
cmp
hlt
add
cli
adc
sbb
loopne
imul
nop
mov
bound
lret
jo
mov
mov
and
cmp
sar
pop
nop
rcr
aaa
jb
aaa
test
mov
test
lahf
in
stos
dec
pushf
xchg
cmpb
hlt
push
xchg
loope
fsubr
insb
inc
sahf
aas
sbb
sahf
nop
adc
and
scas
gs
mov
movsb
push
jg
jl
dec
mov
inc
ret
repz
scas
hlt
cld
xor
pop
mov
xor
cmp
sbb
xchg
xor
les
movsl
pop
mov
adc
dec
or
cmp
cmp
test
add
lcallw
pop
ds
push
sub
cmpsl
icebp
fisubl
adc
dec
aas
out
inc
ficoms
adcb
jge
call
bound
xchg
fistl
add
xchg
rcl
fwait
je
mov
lcall
xor
loope
xor
jo
outsl
sub
addr16
bound
insb
std
jo
negb
push
pop
mov
jg
inc
pop
xor
xchg
xchg
loope
xchg
dec
aas
sub
add
dec
jecxz
std
pusha
and
faddl
clc
enter
adc
xor
loope
ficoml
xlat
hlt
add
xchg
mov
dec
mov
xchg
and
and
sub
fsts
add
pop
sbb
mov
xchg
fwait
mov
pop
divl
ds
cmp
pusha
loop
loope
std
je
or
adcb
mov
sub
lods
cmp
adc
jmp
xor
inc
jns
repnz
loope
push
cld
std
lods
and
mov
rol
or
lods
push
fmull
jno
es
enter
mov
xchg
rcl
inc
outsb
pop
cmp
dec
inc
ljmp
xchg
adc
add
add
cmp
jbe
push
aaa
xchg
pop
jle
sti
pop
hlt
cmp
dec
ud2
repnz
adc
push
dec
cmp
lds
movsl
inc
mov
pop
bound
jae
jl
std
pushf
ficompl
mov
adc
xchg
ret
add
stos
pop
cmc
xchg
mov
mov
sub
test
push
add
and
cmp
mov
sbb
lahf
fsubr
out
mov
leave
decl
or
sub
clc
test
sar
lods
sub
sahf
lds
insl
cmpsb
xchg
outsl
shlb
add
or
jge
jne
lods
stc
dec
sbb
je
outsl
daa
xor
addr16
das
scas
pop
loop
rolb
f2xm1
jmp
insl
je
test
jmp
je
call
not
cmp
rorb
jo
jecxz
xorb
sub
add
push
shll
std
push
xchg
aaa
movsl
addl
push
xor
cmc
fucomi
mov
mov
mov
data16
pusha
mov
xor
inc
mov
lcall
out
push
cmpsl
jle
je
inc
dec
mov
scas
int
inc
and
mov
ret
or
or
xorb
es
lock
fwait
push
push
in
xchg
sbb
mov
push
es
loopne
repnz
push
dec
iret
cmpsl
cmc
fucom
imulb
aaa
fnstsw
pop
or
lahf
dec
gs
inc
out
jmp
out
xchg
jg
dec
and
pop
xchg
insl
mov
pusha
clc
pop
jno
lcall
cltd
dec
repnz
out
out
inc
push
scas
les
xor
cmp
push
adc
push
jp
int3
movsb
add
push
mov
sub
mov
push
out
lcall
sahf
test
es
or
ja
mov
jne
jae
cmp
sti
cltd
sbb
clc
cmp
mov
testl
sbb
pop
mov
pop
push
cmpsb
sbb
inc
nop
lret
lret
xorb
fsubs
add
mov
mov
push
dec
xor
push
int
mov
inc
das
xor
inc
dec
pop
dec
in
sbb
inc
loopne
add
push
inc
or
test
iret
mov
shll
or
push
sbb
fiaddl
push
addr16
xchg
pop
fs
or
imul
xor
aam
mov
jno
jg
mov
push
sub
insb
imul
cs
bound
inc
gs
push
sbb
je
aad
sti
stos
mov
inc
loope
add
pop
xlat
insb
sub
pop
ret
cmp
adc
into
xor
sub
mov
cmp
hlt
popf
mov
shlb
stc
mov
lahf
imul
ds
mov
mov
mov
xchg
or
das
mov
add
mov
lret
inc
mov
sub
push
sbb
xor
in
xchg
dec
or
je
cmp
loope
push
jns
gs
dec
movsl
or
inc
pop
jmp
icebp
and
out
xlat
jbe
cmp
inc
mov
insb
sar
dec
mov
hlt
lret
jno
fisubrl
mov
sbb
enter
push
jne
lods
lret
movsl
ljmp
insl
push
push
xor
leave
aas
xchg
pop
stos
scas
push
push
stc
popa
outsb
or
and
xor
push
arpl
and
jno
push
jb
in
add
jno
jbe
ja
xor
push
mov
sub
pushf
cli
nop
mov
fdivrl
imul
push
and
push
mov
pushf
loop
and
mov
test
pop
fisttpll
pop
adc
popa
data16
xchg
sub
data16
xchg
sub
scas
mov
fbld
in
or
sbb
adc
sub
loopne
imul
push
add
fldt
xchg
cmpsb
sub
aam
xchg
fdivr
push
clc
out
xchg
adc
mov
sahf
cmpsl
inc
inc
push
mov
inc
jg
jns
jnp
lahf
imull
adc
int
pusha
xor
lds
into
xchg
es
ficoms
orl
out
pop
notb
jno
add
inc
test
push
lcall
mov
pop
movl
iret
mov
mov
sbb
sub
cmp
subl
dec
mov
xchg
sbb
ret
arpl
and
ds
xchg
rclb
pop
inc
or
cmp
or
fcmovnbe
jne
fistps
sub
lock
imul
sbb
push
movsl
sbb
mov
mov
and
dec
xor
loopne
in
or
inc
loop
push
std
xchg
pop
imul
mov
std
dec
mov
mov
jno
aas
dec
mov
fs
cltd
lea
xchg
addl
inc
popa
arpl
xchg
push
add
sbb
xchg
popf
xchg
je
jbe
pop
xor
insb
inc
mov
nop
out
fdivrl
sub
and
jmp
cmp
jae
mov
mov
loope
add
test
xchg
pusha
push
push
mov
xorl
jne
adc
dec
mov
sti
call
push
inc
jge
rcll
popf
movsb
cmp
push
inc
js
jl
cwtl
xlat
fimull
push
mov
mov
cwtl
push
rclb
pop
mov
dec
hlt
dec
xchg
mov
bound
dec
js
adc
inc
in
add
dec
xchg
push
stc
out
jp
ret
jmp
inc
rcrl
and
iret
and
ja
insb
cmpsl
pop
lea
aad
adc
push
cmp
jne
test
ljmp
lret
pop
add
mov
out
inc
xor
cwtl
stc
pop
pop
aaa
mov
cld
push
lds
in
sahf
xchg
sbb
jp
stos
subl
pushf
ret
ja
sub
xchg
xchg
cmp
outsb
frstor
sub
mov
aas
cwtl
inc
add
mov
ja
mov
outsb
mov
pop
mov
ret
xchg
and
popa
daa
sub
ja
loop
in
pop
pop
stc
scas
adc
cli
insl
xchg
in
xor
aam
push
jb
clc
jb
jl
jecxz
sub
gs
push
loop
cwtl
loopne
sbb
inc
mov
jmp
dec
out
test
sti
popf
push
xor
push
lret
fadd
push
pop
jb
and
xchg
dec
mov
popa
adc
pop
cmpsb
int3
jae
lret
out
call
mov
sub
mov
jo
jmp
mov
xor
lea
pop
jae
xchg
icebp
lahf
std
adc
sbbl
pop
dec
inc
sahf
rcrl
mov
push
lret
nop
pop
pop
pop
jo
sbb
lahf
add
xor
mov
notb
jb
xchg
sub
push
imul
ljmp
sub
cmp
cmovnp
cmc
cmc
add
icebp
fiadds
sub
imul
xchg
lock
in
fs
mov
inc
push
testb
sti
pop
xlat
int3
lds
mov
scas
sbb
push
jno
xchg
sub
xchg
cmp
mov
dec
out
xor
or
inc
mov
sub
cmp
xchg
push
jnp
pusha
mov
push
xchg
leave
jle
push
repz
lds
xor
repz
aas
sar
loop
aaa
or
xor
jmp
cld
xchg
clc
insl
xchg
mov
push
dec
std
lds
into
loopne
mov
lahf
mov
aaa
add
cwtl
fmuls
mov
jg
sbb
mov
dec
or
mov
push
push
int3
nop
and
cmp
xor
cmovnp
mov
int
in
mov
ds
aad
cli
sbb
ja
cmpsl
xlat
int3
cmp
xlat
mov
jl
xchg
pop
mov
mov
sbb
notl
cli
scas
mov
add
jmp
and
jbe
jge
loop
pop
mov
pop
insb
pop
gs
daa
mov
jno
shll
xchg
hlt
ljmp
mov
into
push
pop
and
outsb
mov
incb
outsl
cmp
inc
test
xchg
lock
lahf
imul
popa
xchg
enter
je
jle
outsl
test
sub
cmp
mov
stc
rolb
das
test
fcomps
inc
mov
cmpb
jno
or
in
ljmp
in
ss
shrb
dec
fnstenv
in
aam
push
out
cld
jle
add
pop
fildl
push
adcb
or
push
cmp
ljmp
xchg
jne
inc
xchg
pop
int
inc
sbb
cmp
mov
clc
sahf
lea
xor
outsb
pmulhw
jg
jmp
sbb
cvtps2pi
daa
and
notl
cmpb
mov
add
sbb
stos
jle
xchg
add
fisttpl
pusha
pop
push
and
xchg
int
scas
sbb
add
sbb
jge
mov
sub
rcrl
xor
sub
lahf
mov
add
inc
mov
sub
les
or
or
mov
add
pop
gs
divb
imul
push
js
jmp
jg
push
fnstenv
mov
mov
fadd
jo
dec
out
jp
je
adc
or
imul
sub
test
jp
push
arpl
loop
jno
push
xchg
jo
lods
inc
std
cs
mov
nop
in
scas
adc
bound
aam
jge
popf
lock
cld
scas
lock
mov
in
loop
out
loope
fwait
xchg
and
dec
std
gs
jmp
mov
add
stc
jp
push
lods
sbb
jae
xlat
divl
lret
scas
out
push
gs
mov
or
mov
jle
pop
add
rcl
adc
aad
lods
addr16
mov
or
mov
sbb
addr16
cmc
cltd
ja
lds
add
push
push
inc
mov
aaa
lods
loopne
fstpl
cmpsb
cs
push
xlat
xor
das
fisubrs
loop
or
sbb
addr16
xchg
imul
jbe
xchg
iret
add
data16
lret
or
xor
mov
rclb
jo
xor
sbb
pop
sub
pop
lret
jmp
mov
or
and
cmp
fsubrl
xchg
cli
cmp
sbb
dec
subl
fisubrs
mov
ret
hlt
sti
movsl
fldenv
and
popa
sbb
sahf
je
xor
insb
add
jns
or
clc
sbb
in
pop
cmp
outsb
xorl
mov
enter
aad
sbb
jp
mov
in
ror
adc
inc
mov
jbe
inc
xchg
icebp
push
mov
xchg
ds
lods
cvtdq2ps
dec
imul
ja
cmp
lcall
fildll
rorb
lds
fcomps
add
nop
shll
test
js
mov
out
sysexit
sub
addl
dec
lret
pop
inc
out
icebp
cmp
ljmp
cmp
pop
repnz
cmp
jecxz
insl
stos
into
xchg
inc
jecxz
mov
jge
movsl
sub
xor
cltd
sub
mov
pushl
pop
test
adcl
xlat
xchg
push
pop
push
pop
in
iret
pushf
and
nop
cmpsl
xor
in
gs
push
xchg
and
in
or
and
inc
inc
xor
cli
stos
mov
es
sub
mov
xchg
pop
dec
pushf
fs
fiaddl
mov
adc
ret
imul
sub
ja
jo
bound
xchg
mov
inc
mov
enter
or
xor
xchg
adc
sub
add
mov
popw
pop
jge
sub
jle
xor
add
lahf
nop
pop
pushf
xchg
lcall
test
jb
mov
shl
mov
push
cmc
pop
add
pop
roll
sub
cld
adc
or
dec
loop
call
pop
add
fdivrp
call
jno
sahf
jl
jmp
scas
push
ljmp
mov
lods
call
sbb
ja
inc
jg
in
lds
fldenv
mov
addr16
jo
sti
popf
sub
cmp
or
fmuls
ret
in
test
jmp
push
aas
pop
aad
test
test
je
mov
je
bound
mov
add
jo
ja
xchg
jnp
adcl
add
sub
hlt
shrl
inc
push
adc
bound
jo
ficompl
sbb
int3
cmp
cli
les
cmp
add
mov
std
dec
fmull
mov
cmc
addr16
mov
ja
push
gs
imul
pop
stos
jl
jns
push
scas
mov
dec
pushf
inc
decb
cltd
mov
test
stos
mov
mov
aaa
dec
iret
cmpsb
rcrb
mov
popf
pop
loope
mov
sti
fdivrl
sahf
dec
lahf
or
stos
add
jo
cltd
cmp
movsb
in
aaa
cmp
popf
dec
cmp
je
or
push
mov
xchg
xor
jg
in
push
mov
cld
cmc
ljmp
xchg
rol
and
pop
lods
jns
add
pushf
xchg
andb
sbbb
int3
je
ja
xchg
and
roll
fistpl
out
and
cmp
lret
jns
cwtl
cld
imul
push
mov
cwtl
test
cli
xchg
lods
pop
repnz
push
mov
inc
lcall
sbb
lret
and
push
sbb
mov
and
inc
lds
jg
xchg
mov
idiv
pushf
push
cmp
push
jo
sbb
adc
outsb
nop
dec
dec
daa
xchg
jl
and
nop
hlt
test
ret
stos
cbtw
js
inc
imul
loope
cld
cmp
jmp
fildll
xchg
xor
test
sub
imul
lock
cs
cli
dec
or
cmp
clc
sub
bound
cmp
test
mov
imul
mov
or
imul
mov
clc
cwtl
and
cmp
cmp
enter
shrb
xor
jbe
and
stos
dec
jne
dec
mov
insb
out
mov
sbb
lret
mov
and
dec
xchg
jecxz
das
xor
sbb
pop
pop
shll
pop
push
xlat
mov
and
mov
cmp
jl
pop
mov
cmp
notl
mov
repnz
or
mov
cwtl
mov
push
adc
pop
ret
mov
lret
sahf
mov
mov
lahf
notl
mov
push
sub
hlt
mov
fidivrl
dec
lahf
dec
cmp
push
lea
dec
mov
xor
xor
dec
pop
pop
xchg
sbb
pop
mov
xor
push
adc
jnp
jmp
sub
loope
aas
mov
pslld
inc
movsl
loopne
sbb
sbb
pop
add
jp
in
sub
add
jne
pusha
sub
popa
mov
stc
lcall
fnstcw
mov
int3
lock
fsubrs
int
leave
mov
aaa
mov
cmp
lock
shlb
sub
jne
jecxz
pop
repz
dec
clc
fistps
adc
mov
fdivrs
loopne
sbb
insb
jns
call
mov
fiadds
add
cmp
std
mov
cwtl
push
pop
push
and
sbb
vsubss
and
aam
or
test
add
push
pusha
ss
lea
xlat
mov
push
lret
lea
jae
repnz
jnp
stos
xchg
jle
adc
stos
insb
push
fsubs
push
cmp
loope
iret
popf
andl
aam
repz
sbb
enter
pop
cltd
pop
cmp
bnd
test
imul
push
daa
test
in
mov
or
lds
pop
xchg
fxtract
test
lods
lret
mov
lods
or
adc
dec
push
add
fiaddl
and
pop
and
pop
in
test
fcomi
negb
mov
dec
jecxz
sub
inc
cmp
sub
arpl
imul
ret
jecxz
clc
clc
std
out
daa
or
das
add
push
xchg
ss
sbb
movsl
test
xor
decl
pushf
insb
sub
jp
test
add
xchg
push
mov
icebp
add
xchg
push
pop
lods
mov
lods
sub
imul
sbb
mov
cmp
mov
scas
or
jns
xor
lods
push
imul
mov
sbb
fwait
mov
fistpl
dec
mov
int
cli
mov
out
fcmovu
or
inc
pop
mov
adc
xchg
dec
jnp
aas
jp
cli
mov
xor
cmp
lahf
ljmp
sbb
sub
pushf
and
pop
ficoml
sti
std
iret
jnp
mov
andl
test
sub
outsb
rol
loope
movsb
or
dec
or
adc
dec
pop
pop
js
mov
enter
adcb
shl
and
ljmp
add
fsubrl
inc
add
pop
push
push
xchg
js
mov
xchg
mov
dec
push
stos
push
mov
int3
push
xor
test
and
cmp
out
xchg
lcall
outsb
lea
dec
xor
add
int3
in
lea
add
and
aad
lahf
sbb
adc
add
repz
ret
std
cmpl
fldt
push
aas
pop
adc
fcmovbe
mov
xor
cmp
pop
dec
rclb
lea
lds
les
mov
andb
aaa
xor
sti
pop
repnz
in
in
sub
cmpsl
pop
sbb
sbb
mov
jno
stos
es
or
incb
mov
das
int
add
push
pusha
xor
xor
jns
rorl
mov
mov
loopne
inc
xchg
fidivl
jno
push
push
push
clc
xchg
dec
addr16
sbb
inc
pusha
scas
xor
push
ds
jae
push
cmpsb
enter
cmp
shlb
xchg
jge
mov
fadds
clc
dec
mov
and
mov
mov
mov
repz
shll
xchg
adc
je
pop
stos
pop
lret
aas
cmp
xchg
push
mov
mov
mov
sbb
mov
cmp
ffreep
or
cmp
push
test
addb
movsb
jb
sbb
into
mov
test
aaa
scas
dec
and
js
jle
imul
push
cmp
scas
xor
push
xor
pop
and
push
pop
mov
mov
ja
popf
mov
sbbl
imul
fisubs
int
cli
insb
sub
out
pop
cmpsb
push
orl
cs
add
adc
add
out
or
add
cltd
add
pop
ja
movsl
adc
add
popf
ljmp
sub
and
mov
xchg
sti
test
mov
popa
bound
lret
dec
jae
mov
inc
mov
shll
daa
mov
jb
and
enter
fmul
lods
leave
pop
pushf
adc
lods
push
rclb
or
dec
aad
cmpsl
sti
pop
subb
repnz
insl
lahf
sti
out
pop
adc
jae
arpl
and
imul
sub
lods
push
dec
shr
movsl
les
or
clc
cli
mov
ss
sbb
mov
xor
or
adc
aad
rclb
push
sbb
mov
xorb
mov
sti
fisttpl
repz
sbb
push
sub
or
jmp
fcompl
add
dec
aad
imul
insl
push
push
dec
xlat
sub
fistpl
sbb
les
push
dec
sub
dec
sbb
mov
ljmp
cmp
sti
or
sbb
dec
insl
adc
dec
addb
and
sub
sub
adc
ds
test
mov
xchg
pop
mov
push
pop
push
and
cmp
loop
je
pop
jg
lret
sbb
filds
into
jle
dec
adc
mov
sbb
dec
pop
lret
insb
test
daa
pop
mov
sbb
mov
test
shl
out
mov
insl
insl
mov
sti
and
fadds
in
jecxz,pn
mov
aad
ret
add
mov
ror
cmpsb
lcall
adc
rcr
subl
push
fldcw
roll
ja
xchg
jmp
push
xchg
push
jmp
jbe
ret
lret
and
pop
leave
cmc
sbb
or
idiv
dec
mov
pushf
xchg
insb
sahf
push
add
or
in
dec
hlt
mov
pop
xchg
pop
loop
or
and
xchg
or
or
xlat
adc
add
mov
mov
pop
push
cmpsl
ljmp
fidivrl
xor
xor
int
ds
inc
mov
adc
jp
and
or
push
lcall
pop
fdivrl
xchg
fcmovnb
scas
xorb
lret
push
jae
negb
cmc
sahf
cld
stos
rclb
jne
rorl
mov
cld
mov
cmp
into
lret
mov
mov
das
inc
ja
outsb
sbb
sbb
repnz
jno
fldcw
faddp
outsb
lret
scas
hlt
stos
cmp
sbb
movsb
stos
adc
or
or
shlb
inc
add
push
popf
dec
jle
jp
cli
enter
push
outsl
jno
loope
adc
inc
mov
and
or
dec
repz
mov
mov
pop
rcr
cmp
lea
ret
data16
add
sub
and
mov
filds
insl
clc
sar
adc
popl
lods
and
mov
xchg
mov
mov
outsb
das
xchg
push
jne
sub
vmovsd
sub
int
orb
insl
sub
sbb
ss
xor
adc
ret
xlat
andl
clc
push
out
pop
add
xor
shrl
rolb
lret
lret
pop
fdivl
sub
pop
and
int
cld
int3
pop
addr16
mov
out
filds
in
lea
out
das
or
cmpsb
sub
mov
xchg
shrl
notl
cmpsl
cmp
dec
mov
push
lcall
push
xor
enter
xchg
mov
pop
lods
dec
je
gs
mov
lcall
pop
push
bound
and
stc
cltd
lods
hlt
mov
int3
int3
sarb
mov
jp
insl
shll
test
or
leave
mov
mov
loope
stos
mov
sti
shrb
adc
cmp
stos
jle
shll
push
adc
mov
xchg
das
and
in
cmp
jle
mov
xchg
loop
push
mov
ljmp
sub
dec
push
push
cmp
cmp
imulb
mov
xor
add
dec
sahf
mov
lcall
push
cld
sub
pop
insb
out
in
sbb
sbb
test
adc
cmpsb
les
mov
lods
imul
jnp
ret
xor
jmp
push
mov
sbb
sbb
lahf
pcmpeqb
jne
icebp
fstl
dec
xchg
push
adc
addb
xor
loop
roll
xchg
mov
loope
js
add
imul
sarl
push
jp
pop
push
roll
adc
mov
jne
sub
and
lcall
sbb
addr16
rep
jg
repnz
cs
test
sbb
fldcw
sbb
outsb
push
xchg
fmul
movsl
ljmp
pop
scas
cmp
scas
fcmovb
and
inc
sub
sbb
mov
cmp
push
fsubrl
mov
icebp
fidivl
inc
add
jae
sub
mov
lods
cwtl
and
add
jns
arpl
inc
ds
mov
pop
scas
and
mov
jb
pop
lahf
or
and
add
pop
mov
jbe
pop
ljmp
dec
jae
int3
xchg
ffreep
loop
push
lcall
popf
push
data16
xchg
ret
sbbb
nop
aam
std
fidivl
lret
cld
es
and
and
jbe
leave
dec
mov
or
daa
cmpsb
bound
push
aaa
xchg
ja
dec
jl
je
es
add
cmp
push
in
das
ret
arpl
js
fnstenv
fcoms
test
fistps
or
lcall
mov
inc
mov
sbb
leave
imul
int
cmpsb
mov
test
mov
movsb
inc
ret
test
or
mov
stc
sub
jge
dec
rorb
mov
mov
lret
arpl
jbe
xor
lds
hlt
sbb
push
xchg
pop
mov
int3
jne
popf
mov
rol
mov
sub
cld
xor
cmp
pushf
je,pt
dec
or
fimull
sti
mov
mov
jo
test
add
sbb
and
pop
test
xchg
test
jnp
or
stc
pushf
es
inc
mov
inc
test
imul
pop
stc
jnp
incl
xor
rclb
push
fcoml
mov
sub
inc
daa
lahf
adc
inc
ret
and
sub
notl
out
xchg
insl
imul
or
jns
test
fucomp
lods
pop
lds
push
cmp
dec
into
out
ds
or
mov
dec
fwait
inc
test
xor
lret
adc
popa
mov
xor
icebp
cmc
dec
inc
push
insb
and
mov
shll
jbe
push
ljmp
and
jge
xchg
rclb
mov
in
push
adcl
mov
mov
loop
fcoml
aaa
mov
cwtl
xchg
inc
outsl
leave
add
inc
adc
daa
les
stos
or
sbb
inc
in
insl
cmp
icebp
xchg
int3
sub
aam
nop
pop
mov
ret
daa
iret
dec
pusha
imul
jp
fistps
mov
cmp
xor
adc
mov
mov
sahf
sub
add
or
xchg
lret
add
lods
push
xchg
out
outsl
pop
test
icebp
inc
cmp
fimull
sbb
push
mov
or
xor
jp
push
sbb
mov
sub
mov
jae
out
adc
jnp
push
outsl
lret
jbe
rolb
lcall
cmp
cmp
mov
dec
cmovo
enter
and
out
fadd
cwtl
mov
or
decl
jns
jmp
add
mov
loop
nop
insl
dec
mov
sbb
push
in
mov
push
sarl
fstp
movsl
mov
cmp
loopw
icebp
fwait
jge
push
fwait
sub
dec
adc
mov
xchg
and
jne
fcomp
mov
movsl
fsubs
push
adc
add
push
mov
iret
lahf
das
dec
in
sbb
dec
jecxz
inc
dec
js
outsl
inc
iret
shrb
out
jno
ljmp
jle
inc
sahf
lret
aaa
jns
mov
dec
sub
int
dec
inc
lock
pop
pop
inc
cmpsb
ljmp
insl
clc
inc
in
and
adc
fimuls
pop
aam
and
clc
xor
push
add
lds
push
fbstp
int3
and
mov
bnd
aad
push
scas
mov
aas
popf
mov
pop
fisttps
push
ret
jle
and
ds
dec
mov
sbb
fsts
icebp
jnp
loopne
stos
aad
jae
pop
mov
rcll
cmp
aas
pop
loope
arpl
fmuls
mov
cmp
inc
dec
sub
push
pop
lret
insb
ds
out
cwtl
cmpsl
mov
xorb
sub
mov
mov
cmc
ja
jecxz
int
pushf
addl
mov
push
cmp
pop
leave
imul
push
pop
sub
mov
scas
aaa
pop
sahf
mov
dec
cs
addr16
lcall
and
jge
dec
cwtl
repnz
jae
push
mov
cmp
out
cltd
subb
mov
aas
pop
imul
int3
inc
mov
xlat
pop
xchg
adc
outsb
aad
sub
jg
test
repz
aam
out
dec
push
decb
mov
jno
fstps
int
fidivl
push
sbb
test
sbb
pop
loope
adc
rcrl
call
dec
sbb
in
out
adc
sub
or
cmc
bound
jae
adc
fdivrs
ss
mov
mov
sbb
out
scas
sti
data16
lcall
imul
icebp
fists
jno
mov
push
jb
jo
jp
pop
add
or
repz
nop
adc
ret
pushf
inc
sbb
mov
mov
aad
mov
cmp
pop
inc
rcr
bound
cmp
dec
xor
enter
sub
lret
cld
mov
scas
fwait
pop
outsb
mov
pop
imul
xchg
ljmp
sarl
xorl
lcall
xchg
or
xchg
mov
movsb
dec
bound
push
mov
sti
pop
add
jmp
mov
or
and
mov
test
aas
popf
rcll
mov
xchg
in
nop
test
push
sbb
jns
push
or
lahf
or
repz
push
inc
or
xlat
mov
mov
or
dec
das
mov
out
mov
inc
push
sbb
adc
cmpsb
jge
add
lods
imul
pop
push
mov
cwtl
jne
or
dec
jp
xor
cmp
aam
ja
leave
mov
add
cld
inc
xchg
mov
adc
insb
bound
jl
cmp
es
jg
fldl
dec
addr16
insl
jne
inc
jle
sub
in
mov
imul
add
movsl
es
les
add
out
mov
mov
loopne
loope
xchg
adc
popa
add
sbbb
or
xchg
repz
out
sbb
bound
mov
jo
jecxz
cmp
imul
xlat
add
ficomps
popa
push
dec
mov
mov
cmp
out
mov
daa
lods
call
xchg
sub
and
mov
aad
daa
xchg
pop
out
sbb
pop
lods
cs
ljmp
sub
inc
data16
ja
push
cmp
scas
or
mov
mov
push
daa
arpl
jno
fstpl
andb
cmp
and
lea
and
in
loope
aam
dec
mov
mov
mov
fiaddl
push
add
js
lock
jecxz
xchg
mov
lret
cmp
sbb
jecxz
loop
and
arpl
pop
stos
or
cmp
push
lock
cli
imul
sub
xchg
gs
inc
jno
add
xchg
sub
nop
mov
outsb
sahf
and
in
icebp
jb
cltd
sti
pop
xor
pusha
and
ss
xadd
je
pop
sti
adc
sbb
or
fisubl
mov
scas
sarb
das
xchg
ret
push
push
cli
scas
jnp
mov
movl
leave
cmp
std
push
sbb
in
ret
pushf
add
ja
xchg
out
scas
cmpsb
les
adc
sarb
inc
stc
cld
xor
inc
xchg
call
scas
mov
imul
int3
in
sub
xchg
adc
insl
cmp
sub
cmp
and
sbb
fisttpl
dec
jns
sub
cli
orl
or
nop
cmp
dec
out
test
scas
loopne
idivl
xlat
jmp
ret
aad
ret
jnp
pop
cld
lods
das
sub
inc
notb
out
mov
fadds
aaa
add
push
mov
cmp
pop
vmovq
or
push
outsl
push
xor
mov
sarl
mov
stos
push
mov
clc
pop
loop
xchg
push
mov
nop
inc
cmc
aam
das
pop
xchg
or
mov
loope
push
pop
adc
outsb
and
push
inc
stc
cmp
test
sbb
add
add
mov
imul
fwait
das
inc
inc
and
xor
insl
push
push
orl
shr
cli
xchg
and
js
adc
or
andl
adc
xor
jl
or
add
aas
mov
fdivl
push
push
adc
pop
pop
sub
add
dec
data16
stos
clc
mov
rcr
imul
mov
out
xchg
es
and
mov
dec
lcall
fbstp
dec
movsb
adc
shrl
or
lahf
sub
inc
and
int3
leave
lods
pop
push
dec
pop
dec
cltd
dec
testb
sti
push
mov
pmullw
inc
jmp
clc
ficomps
cmp
or
stos
outsb
nop
dec
jbe
and
psubsb
movsb
cmp
leave
adc
loope
out
cmpb
lock
pusha
nop
bound
gs
daa
dec
testl
xchg
fcmovb
pop
out
pop
xchg
fdivrs
or
xchg
push
sub
mov
in
cmp
icebp
in
aam
jo
sahf
pop
mov
das
pop
das
shl
mov
fidivl
mov
call
loop
mov
cmp
mov
cmp
imul
push
push
add
fstpt
jecxz
mul
mov
jp
cmpsl
jae
roll
jnp
arpl
loop
fcompl
aas
lret
pop
cmp
scas
mov
add
cmp
inc
push
cmp
sbb
pop
xor
filds
frstor
std
mov
cmpsb
ret
push
fwait
inc
cmpsb
or
sbb
mov
adc
arpl
fidivrl
pushfw
orl
insb
lcall
cmp
push
orl
jg
into
stos
imul
sti
cmp
push
mov
cs
or
or
test
lods
mov
inc
xor
out
les
add
insl
mov
or
testl
add
aas
jmp
dec
mov
addr16
jns
mov
pop
push
das
mov
out
mov
rorl
jge
add
call
cwtl
fsubrl
insl
rcr
imul
das
xchg
xor
gs
pushl
stc
sub
lods
xorl
xchg
gs
sahf
pop
das
jb
jo
sub
jl
or
mov
mov
push
mov
popa
daa
out
mov
fsubp
mov
fwait
mov
cltd
jl
fbld
cltd
pop
mov
xchg
shr
lret
rcl
imul
push
xor
lea
scas
jno
in
stc
mov
and
jp
add
mov
cwtl
jnp
filds
out
dec
xchg
lds
adc
lcall
mov
dec
xor
adc
lds
and
out
pusha
lcall
adc
adc
lea
pop
inc
popf
pmullw
cmp
fadds
stc
cmp
push
shrl
pushf
ljmp
mov
inc
jae
adc
xor
dec
enter
push
and
lret
mov
call
adc
add
jne
out
and
push
jno
lock
jle
or
out
test
pop
xchg
movl
xor
subb
rolb
stos
mov
sbb
icebp
leave
lret
popf
int3
bound
pop
or
test
stos
pushf
insl
pusha
inc
sub
mov
or
or
mov
outsl
das
das
scas
loop
cmp
mov
lock
cld
fstps
xorb
push
cmp
adc
ret
in
sti
push
jecxz
push
jl
mov
jmp
xchg
lods
pop
pop
and
nop
fstpl
hlt
shll
mov
mov
jge
outsl
loopne
scas
cmc
ljmp
ja
rol
sbb
test
notl
les
mov
mov
xchg
sub
adc
adc
rclb
cmpsl
jnp
push
inc
add
inc
xchg
or
mov
mov
sbb
lret
shll
sbb
jle
adc
callw
mov
dec
cwtl
jno
push
push
pusha
or
gs
adc
add
shl
or
sti
cwtl
and
or
inc
gs
cs
loop
adc
jns
cmp
inc
into
push
cmp
hlt
mov
mov
xchg
jbe
inc
mov
pop
fwait
jns
cmp
or
jne
inc
sub
fstps
cltd
orl
mov
popa
add
add
scas
mov
mov
sub
push
repz
aam
outsl
lods
ja
lret
push
inc
cli
cs
jl
dec
pop
sub
push
adc
lea
jo
jb
dec
les
cmp
and
sub
push
mov
jne
arpl
lock
dec
inc
add
and
xor
dec
in
rorb
repz
inc
ja
jb
ja
lods
jae
xor
fistpll
icebp
jne
inc
pop
adc
cmp
cmovne
pop
dec
subb
es
cmp
adc
and
test
test
dec
mov
aam
aas
jle
std
inc
daa
inc
icebp
outsl
ljmp
sbb
push
jns
mov
mov
mov
mov
lods
adc
mov
mov
xchg
in
out
xchg
cmp
push
pop
sub
xchg
jmp
cmp
push
or
mov
je
test
aaa
dec
mov
push
fimuls
push
push
jnp
das
fwait
adc
xchg
add
loope
lret
out
les
jle
imul
sbbb
sbb
pop
mov
xchg
lcall
scas
in
pop
cwtl
xor
imul
out
mov
mov
mov
inc
repz
lret
ljmp
ds
cmp
add
movsb
into
dec
aas
fwait
ja
and
sub
mull
dec
and
rcrb
sbb
cld
and
loope
cmp
or
mov
jecxz
cmp
in
pusha
aas
mov
mov
cmpsl
decl
movsb
push
and
imul
mov
fcmovnbe
lret
mov
ss
hlt
sub
leave
or
inc
sub
mov
xor
inc
rep
aad
xchg
jbe
cmpsb
lcall
lods
adc
cli
stc
rolb
in
aas
and
in
cmpsl
cld
es
icebp
aam
sarl
lock
and
dec
pop
jae
arpl
je
and
sub
sbb
cmp
repz
cli
mov
insl
dec
das
sub
and
mov
mov
inc
cmp
or
lods
push
ja
dec
pop
pop
mov
sub
sbb
push
xchg
subl
aas
adc
cmp
pop
inc
push
mov
scas
mov
ja
inc
out
pop
jae
pop
cwtl
dec
xor
xor
outsb
lods
insl
inc
pop
sbbb
leave
jb
pop
loope
data16
imulb
mov
jbe
xor
jb
and
mov
inc
shlb
xor
xor
ret
sbb
lahf
enter
outsb
scas
lods
pop
rcl
divb
push
add
mov
fmuls
xchg
mov
xor
pop
mov
mov
mov
insl
fistpll
push
cld
test
es
daa
xor
sti
mov
jle
adc
cmpsl
lret
pusha
cmp
cmp
sahf
lock
imul
sbb
pop
mov
addr16
jmp
mov
dec
cmp
jno
scas
mov
cmp
push
adc
outsb
and
mov
sub
xchg
fidivs
loop
mov
jae
repnz
cs
movlhps
outsb
outsl
ficoml
push
repnz
insl
in
mov
push
pop
jg
stos
pop
icebp
jo
push
addr16
sbb
imul
inc
out
pop
jecxz
adc
dec
movsb
lock
stos
push
push
rcll
testb
mov
lods
or
cmp
fwait
push
adc
inc
sbb
xor
mov
test
fisubl
ljmp
adc
jae
dec
clc
scas
pop
sub
cli
or
sbb
jmp
or
orb
add
ja
xchg
or
xorl
dec
push
ret
add
lcall
pop
insl
aad
cmp
push
mov
and
adc
inc
adc
xor
ja
ljmp
fidivs
and
push
mov
pushf
jo
inc
inc
jmp
sbb
adc
mov
xchg
mov
dec
psubq
pushf
filds
inc
mov
adc
cmp
clc
pop
push
adc
enter
pop
inc
loope
mov
loopne
xchg
pop
mov
pop
shlb
jmp
das
pop
add
jno
pop
adc
adc
jecxz
and
lods
btc
ret
add
xchg
mov
outsb
and
and
or
int3
inc
add
sbb
lods
mov
mov
pop
idivb
push
pop
add
lcall
sbb
sti
ret
sub
push
enter
jno
cmp
dec
and
test
lret
shll
shlb
out
jnp
ja
dec
insb
xor
popa
xchg
xor
pusha
sbb
mov
out
or
or
mov
stos
push
and
popf
fisubl
mov
jg
loope
lods
xchg
xor
je
loop
repnz
mov
pop
arpl
jb
aaa
cld
int3
push
and
lea
jnp
addl
jne
inc
inc
bound
lock
push
xchg
and
in
outsl
jmp
mov
scas
pop
mov
or
sbb
test
addr16
lret
aaa
or
lods
sub
jecxz
push
lods
insl
sbb
frstpm(287
xchg
in
cmpsl
psubq
test
and
imul
fidivl
test
or
stos
loope
inc
dec
inc
lods
xchg
jne
add
stc
cmp
push
out
jnp
mov
sahf
sahf
mov
dec
adc
and
push
aaa
adc
mov
and
stos
jg
pop
xchg
push
outsl
cmp
jg
adc
orb
repnz
frstor
mov
out
sub
jmp
mov
sbb
dec
mov
div
inc
pop
push
shrb
lahf
stos
pop
aas
adc
mov
sbbb
repnz
jl
shl
imul
xchg
aaa
and
sub
dec
or
push
out
stc
mov
insl
push
fxch
es
loop
addb
sbb
test
test
in
cmp
inc
test
ljmp
push
push
out
xchg
jmp
lods
ljmp
fs
imul
xchg
sbb
adc
mov
xor
add
sbb
push
and
fildl
mov
test
enter
fsubs
in
iret
dec
jns
sub
addb
jge
lea
jnp
es
push
add
andb
ja
adc
aaa
jp
jnp
mov
and
shrb
idiv
jmp
out
push
xchg
or
outsl
es
sbb
inc
xor
call
pop
cmp
add
out
call
rcl
add
adc
cld
push
sub
int
dec
add
mov
xchg
xor
inc
aad
pop
add
sub
cmc
add
and
out
es
sahf
movsb
into
xchg
js
dec
jmp
and
cmp
pop
ljmp
or
sub
jl
popf
sub
ljmp
mov
fwait
mov
xchg
ret
fcomi
inc
pop
and
mov
and
inc
push
pop
push
pushf
sbb
mov
mov
mov
nop
aaa
movb
add
lahf
mov
inc
popf
clc
mov
push
pushf
mov
aam
stos
push
push
inc
stos
mov
mov
dec
mov
sub
mov
sahf
jnp
imul
and
dec
out
int
push
inc
jns
pop
cmc
mov
fstl
pop
lahf
notl
ja
sub
fildl
sarb
sbb
lds
ret
cmp
or
sbb
mov
js
es
es
pop
mov
adc
add
inc
jns
add
and
xchg
cmpsl
test
jg
dec
dec
cmp
xchg
int3
jno
xor
pop
lea
adc
xchg
mov
das
mov
xor
stos
shll
cmp
mov
loope
add
xor
push
into
mov
push
jmp
outsb
mov
movsl
xchg
push
je
or
mov
repnz
lods
dec
hlt
stos
sbb
sub
add
pop
test
nop
add
and
repnz
mov
gs
outsl
xchg
xchg
dec
inc
and
and
int
les
jmp
insb
mov
lcall
push
pop
or
mov
sub
adc
lret
mov
cli
insb
jno
ja
pop
lcall
and
and
js
test
inc
pushf
test
imul
in
aad
xor
xchg
xor
cltd
and
mov
jecxz
lock
mov
andl
sarb
out
sbb
push
sarl
stos
cmp
push
jno
pop
dec
inc
movsb
add
mov
pop
cmpsb
cmpsl
pop
bound
or
stos
daa
dec
mov
je
das
cmpsl
cmpsl
inc
testb
loopne
mov
fildll
mov
push
or
pop
mov
jne
call
pushf
push
popa
jmp
cltd
mov
pop
jo
mov
in
test
jb
test
xchg
mov
loopne
test
push
dec
es
xor
insb
xlat
lods
rorb
and
bound
mov
stc
push
aas
or
sbb
fs
inc
push
add
cmpsb
addr16
xlat
and
cmp
cwtl
ret
push
or
dec
fcmovu
and
mov
jge
cmc
bound
lcall
in
mov
xchg
cltd
xchg
mov
in
lods
push
insb
dec
loope
xchg
fists
das
add
repz
popa
cltd
mov
and
push
push
pusha
addr16
aam
fprem
js
sub
mov
add
mov
repnz
in
enter
imulb
push
mov
push
mov
and
dec
xor
pop
cli
adc
adc
dec
adc
jb
sbb
int3
sub
sub
add
fbstp
mov
cmp
dec
mov
mov
ljmp
jmp
xor
pop
cmc
xor
jge
out
push
pop
je
lcall
inc
add
das
fistpll
ljmp
shll
jb
mov
rcrl
pop
sahf
mov
lods
test
sbb
xchg
jmp
mov
pop
loope
adc
imul
xor
aad
fnstenv
lret
lahf
push
mov
push
lods
pop
fs
mov
jb
and
test
cmp
mov
mov
mov
sbb
mov
in
out
iret
std
outsb
cld
hlt
pop
mov
in
xchg
aas
xor
add
fwait
xacquire
xchg
or
mov
mov
mov
call
movsl
out
jg
dec
jbe
inc
jmp
test
or
in
pop
movsl
add
xchg
adc
int
ds
add
repz
xor
arpl
loop
dec
push
xchg
mov
and
inc
ds
add
stos
loop
popa
fstl
dec
outsl
neg
inc
add
lods
iret
jns
repz
notb
inc
std
and
nop
mov
push
pop
aam
mov
push
push
out
xor
dec
movb
sub
cmp
push
xchg
rorl
loope
test
xor
mov
outsl
dec
dec
jmp
mov
sbb
sub
add
out
mov
mov
das
icebp
aas
inc
addl
movsl
dec
popf
repnz
and
in
cmp
loopne
pop
std
cmp
out
and
loop
xlat
test
pop
adc
or
sti
adc
idivl
pop
jl
xchg
aaa
rcll
adc
push
adc
jmp
lret
test
test
int
sbb
mov
insl
add
jb
adc
inc
hlt
in
sub
loope
push
sub
push
addr16
shll
push
cmc
stos
sbb
mov
xchg
out
rorb
cmc
bound
cmp
push
popa
mov
mov
cmp
ss
add
jbe
push
imul
fwait
js
pusha
xor
jp
popa
icebp
gs
cld
negb
das
stos
inc
hlt
iret
popa
xor
fwait
cltd
and
jbe
mov
inc
push
cmp
adc
inc
imul
mov
orb
rep
nop
pop
mov
pop
movsb
sahf
sbb
sbb
pop
push
out
jne
cli
cmp
jp
inc
aas
dec
cmp
push
les
adc
mov
xor
das
jmp
jb
xlat
mov
cmp
lahf
jmp
ds
sub
movsl
jmp
add
adc
cmp
sbb
bound
cltd
mov
dec
push
jo
inc
cmp
or
jbe
in
in
ljmp
dec
push
xchg
scas
inc
mov
sbb
ljmp
lcall
mov
jnp
sbb
sbb
cwtl
cwtl
sbb
cs
pop
iret
scas
or
xchg
hlt
sbb
fimuls
adc
ljmp
inc
dec
sbb
mov
and
lret
inc
jns
repnz
clc
inc
enter
in
out
ret
sub
scas
lds
js
pop
pop
sbb
xchg
movsl
adcl
loop
mov
mov
push
cmp
roll
push
cmp
das
dec
mov
push
xor
aad
add
xchg
mov
lds
dec
and
das
ds
xchg
add
outsb
test
cli
int3
inc
shrl
scas
aad
xchg
cmc
inc
xchg
add
and
dec
out
call
xchg
lahf
lods
lret
lea
inc
cmp
mov
arpl
out
mov
stos
or
xor
adcb
dec
scas
sti
pop
cld
mov
mov
shlb
aad
mov
pop
inc
sbb
stos
popa
aam
int
lock
lahf
test
icebp
shl
cmp
test
and
out
add
pop
dec
enter
pop
int
pop
aad
xor
stos
jmp
jae
sub
xor
lret
pop
and
inc
pop
fs
xor
dec
fisubrl
xchg
jns
cmpsl
push
imul
xor
daa
sub
callw
mov
sbb
jg
push
push
xor
push
pop
nop
popf
jns
jne
out
fnstenv
movsb
and
std
decb
mov
mov
xor
stos
sbb
add
push
lret
dec
inc
push
inc
jg
dec
and
jp
xchg
in
lods
or
push
movsb
leave
xchg
cwtl
loopne
add
shrl
pop
jae
imul
xchg
idivb
out
push
popf
je
adc
push
repnz
sbb
fstpt
push
in
sub
push
push
jecxz
pop
and
adc
xor
fists
setno
adc
bound
mov
mov
jge
pop
jp
loopne
insl
sub
pop
lret
xchg
mov
dec
cmp
inc
cwtl
inc
push
into
mov
daa
pop
addr16
mov
xchg
push
dec
cld
shll
dec
mov
test
pop
int
test
xchg
cwtl
push
mov
data16
sbb
pop
hlt
cmp
lock
pop
pop
mov
jnp
pop
mov
pop
shlb
sub
sbb
cltd
or
adc
mov
sbb
inc
ljmp
mov
lods
stos
aad
or
cmp
adc
or
int3
xlat
mov
and
mov
pop
fs
scas
test
dec
mov
call
adc
dec
xchg
in
clc
jge
fdivrl
jge
push
pop
inc
push
ljmp
pop
test
jg
lcall
or
sub
push
movsb
cmp
jp
adc
dec
nop
add
aad
in
imul
push
xchg
pushf
mov
lock
cmpsb
or
mov
jle
sarb
popa
int
jbe
das
bound
scas
test
lcall
jmp
sub
out
out
fwait
scas
js
xchg
cmp
sbb
jecxz
movsl
enter
das
es
cmp
mov
push
xor
mov
mov
mov
roll
add
fwait
ja
cmpsb
lret
dec
inc
ljmp
jno
mov
cwtl
mov
or
mov
xchg
cmpsl
aaa
inc
lock
insb
add
adc
xchg
xor
mov
inc
loopne
in
dec
and
inc
loop
inc
jns
mov
imul
loop
xor
push
loopne
jp
movl
js
rcr
dec
out
jno
dec
adc
lds
adc
addr16
cmp
outsb
imul
cmp
in
xor
inc
jne
sbbl
mov
and
or
int3
call
lods
jecxz
jnp
cld
in
lods
cmc
dec
test
cmpsl
sub
bound
inc
jne
stos
movsb
clc
mov
test
mov
cmp
fs
sbb
repz
mov
xor
jbe
sub
out
mov
lods
inc
cmp
repnz
add
push
sbb
scas
out
pop
lret
fisubs
pusha
test
mov
mov
loope
stos
cmp
adc
cmp
das
stc
push
xor
leave
push
test
lahf
orl
cmc
jge
test
leave
or
sub
out
mov
aaa
xor
and
lods
push
fs
imul
xchg
cwtl
push
cltd
out
cmpsl
xor
fidivrl
mov
jmp
test
js
dec
push
lock
cmpsl
loope
mov
pop
pop
dec
cmp
aad
rcrl
push
scas
scas
push
inc
out
movsb
std
pop
xchg
mov
scas
xchg
aad
insl
lods
pop
pushf
adc
sbb
cmp
or
in
sbb
outsl
sbb
loope
or
out
lret
mov
or
pop
lods
aad
mov
scas
cmp
mov
cmp
xorb
jae
leave
repnz
into
inc
sub
push
add
lock
std
jg
movsb
mov
mov
in
pop
sbb
adc
js
jmp
fisubl
dec
sub
xchg
inc
adc
mov
es
inc
mov
dec
jp
scas
dec
loope
push
xchg
lea
lar
cmp
stos
out
das
call
imul
in
dec
fwait
out
fwait
adc
adc
orl
imul
push
push
out
aam
push
mov
lods
pop
lcall
dec
pop
inc
fs
dec
add
cld
pop
arpl
out
mov
sbb
iret
ret
cwtl
scas
insl
lods
adc
movb
arpl
adc
mov
fwait
xchg
das
cmc
and
cwtl
xor
stos
xor
jecxz
xor
fldt
sbb
div
les
pop
fmul
sub
nop
dec
cltd
repnz
rolb
jno
lahf
hlt
test
jb
fildll
pop
pop
int
test
loopne
ds
incb
xchg
ljmp
xchg
in
addb
pop
sub
dec
sbb
cmp
fldcw
dec
mov
inc
fisubs
lret
or
ds
nop
scas
xchg
aad
ds
inc
mov
push
xchg
int3
cmp
cmc
pop
mov
inc
ljmp
sub
push
xlat
fidivl
jae
pushf
inc
stc
jns
ljmp
pop
repnz
addb
insb
jb
ss
pop
imul
out
in
inc
and
nop
mov
fs
shrl
cmp
lcall
loope
ret
in
jo
jns
mov
clc
xor
and
cmpsb
cmp
inc
jne
mov
sbb
cmpsb
and
aam
push
pop
cli
insl
sbb
jae
xchg
jae
mov
data16
or
aaa
sar
sub
mov
out
es
or
jl
fs
jecxz
jb
sub
sbb
maxps
popa
rorb
andl
inc
mov
sub
das
imul
or
add
xchg
xor
data16
pop
xchg
or
sbb
push
mov
xchg
scas
fdivs
lods
aas
stc
ret
shrl
xor
cmp
add
repz
jne
icebp
inc
push
out
popf
fwait
in
mov
adc
pushf
push
xchg
push
adc
push
jmp
mov
xor
adc
xchg
xor
popf
inc
sbb
cmc
cmp
out
pusha
aas
push
jno
xchg
dec
ret
or
cmpsb
dec
popf
ror
imul
push
out
inc
mov
ficoml
push
sbb
xchg
call
or
outsl
test
xchg
pop
outsl
inc
ds
inc
add
inc
and
test
iret
out
into
push
lock
stos
lods
ret
out
das
into
sub
aam
ret
outsl
ds
ret
cld
out
mov
cmpsl
js
addr16
shrl
cld
cli
aam
orl
call
in
mov
rcl
inc
enter
adc
mov
movsl
js
test
cmc
and
mov
push
xchg
imul
in
cmp
push
scas
add
adc
out
loop
pop
dec
xchg
and
in
stos
mov
rcrl
cwtl
rclb
sbb
or
ficomps
sbb
inc
mov
mov
lods
aad
inc
dec
adc
jno
add
ret
in
lahf
in
stos
std
ss
mov
push
sbb
sarb
or
adc
jo
cmp
pop
xchg
add
add
adc
fsubr
push
nop
xor
call
into
mulb
and
sbb
jnp
out
and
cmp
pop
sbb
lcall
fidivl
imul
add
or
sahf
std
in
dec
xchg
xchg
test
stos
sarl
push
idivl
inc
push
or
sti
jns
lret
mov
xor
fnsave
jmp
mov
jmp
insb
int
push
lock
jl
adc
inc
in
sub
stos
xlat
movsl
out
adc
ds
mov
xor
mov
stc
push
add
mov
pslld
movsl
jne
sbb
pop
addl
aaa
ja
dec
sub
mov
xlat
aam
stos
push
sbb
or
xor
or
or
shrb
jle
test
inc
or
mov
xor
pop
aas
sub
int
dec
aaa
data16
mov
xchg
fucomi
adc
mov
xor
mov
xor
cli
dec
lods
mov
in
mov
push
mov
mov
cmp
mov
add
mov
insb
pop
in
jecxz
pop
hlt
leave
dec
or
adc
test
mov
dec
xchg
enter
frstor
cmp
out
mov
int
pop
ja
call
sub
dec
sub
lret
mov
sbb
xchg
loop,pt
imul
jmp
sub
nop
aam
cmp
and
sahf
and
cs
lock
test
adc
or
in
shr
pop
mov
ret
movsb
push
fbstp
push
loope
lds
stos
sub
push
add
lahf
jg
lods
push
and
mov
sbb
and
andb
jo
pop
dec
shll
inc
bound
xor
xlat
cmc
iret
mov
mov
mov
push
jge
pop
and
mov
test
cmp
test
iret
mov
in
and
inc
adc
or
fadds
xor
xchg
hlt
and
movsb
pop
ret
ret
out
mov
jmp
cmpsb
xchg
and
stos
pop
sbb
fwait
pop
push
in
das
pop
test
cmpsb
cmpsb
jl
nop
inc
xor
or
pop
imul
dec
lds
adc
lds
jno
test
jl
xchg
les
xor
mov
data16
lods
cmp
sbb
push
fsubr
mov
jmp
adc
adc
or
cmpsb
ja
jnp
sub
das
std
push
imul
mov
xchg
mov
sbb
test
push
ja
xchg
imul
insl
pop
cld
pop
adc
mov
fld
pop
xor
mov
in
cmc
push
push
lahf
insl
fists
dec
test
out
cwtl
icebp
and
xchg
inc
pop
xchg
push
fsin
sub
es
loopne
sahf
lcall
outsb
imul
out
cmp
movsl
js
push
mov
jmp
push
sub
dec
and
imulb
iret
imul
or
pop
mov
xchg
mov
inc
and
xchg
dec
push
es
aam
stos
fsub
jmp
push
lcall
nop
xchg
scas
movsl
xchg
inc
xor
out
or
mov
leave
movsl
pop
jmp
test
dec
lds
dec
push
cmp
scas
inc
push
fists
add
es
aam
insl
add
stos
nop
rorb
mov
int3
jg
stos
les
in
sbb
in
inc
lea
dec
test
std
adc
out
int
lea
xchg
inc
sub
add
xor
pop
dec
sbb
mov
jbe
adc
movsb
and
or
mov
pop
dec
fisubrs
loope
mov
in
aaa
mov
push
lcall
es
in
adc
lods
js
fidivl
dec
sbb
testl
std
mov
ret
lcall
stos
adc
jmp
iret
nop
push
fstl
jae
fisubl
inc
rcl
push
in
sbb
ret
push
pop
bound
push
cmp
out
outsb
jle
std
and
push
data16
ret
xchg
fsubl
cmpsb
pop
or
ret
es
cmp
shrl
jg
fcompl
inc
sub
lcall
in
pop
dec
scas
idiv
or
ficoms
mov
or
subl
xor
mov
ja
arpl
bound
xor
cmp
cmp
push
xchg
xchg
out
pop
adc
pushf
movsb
cmp
lods
jo
movsl
cld
or
shll
push
xor
call
xchg
fiadds
popa
scas
ret
shrl
sbb
gs
adc
sbb
out
sub
cmp
test
enter
insl
subl
enter
out
aaa
popa
xor
push
push
sarb
push
pop
mov
add
and
inc
adc
test
push
imul
adcb
and
mov
and
jno
xchg
pxor
jp
inc
out
mov
lods
or
into
xor
insb
mov
mov
popa
and
fs
sbbl
jns
pop
jnp
xor
in
mov
sbb
push
lea
mov
je
pop
sub
vdivpd
cmp
sbb
cmp
out
hlt
jmp
cmc
aad
call
fbstp
cmpsb
jae
lods
mov
cli
and
pop
cli
push
fisubl
ftst
std
mov
cmp
sbb
fmuls
call
in
mov
adc
fsubrl
add
add
push
dec
cmp
ja
adc
inc
enter
imul
jbe
pusha
jne
jb
dec
cmpsb
mov
iret
cltd
aaa
insb
fs
inc
adc
int3
cmp
test
bound
aaa
es
loope
mov
test
push
jge
or
jae
mov
cwtl
xor
into
cmp
sbb
add
cwtl
adc
aam
adc
inc
sbb
data16
push
jl
cltd
sbb
jl
fs
mov
pop
cs
push
loopne
mov
addr16
dec
inc
ds
xor
push
mov
push
in
mov
pop
add
outsl
xor
sbb
sar
dec
mov
sbb
jl
mov
imul
sub
aam
jmp
fisubrs
jg
add
in
inc
xlat
and
cmpsl
imul
pop
icebp
pop
cld
out
ljmp
jne
cwtl
pop
inc
cmp
add
sub
add
sub
int3
cltd
out
sbb
mov
jg
fbld
out
and
push
sbb
inc
fdivl
je
xor
test
xchg
popa
cmp
push
psubq
and
mulb
testl
fnstsw
adc
cld
iret
sti
loopne
cmp
inc
fsubrs
mov
mov
xor
fcoms
popf
cmp
mov
insb
enter
mov
test
inc
movl
inc
fiaddl
jbe
inc
mov
cltd
sti
mov
js
jno
sahf
dec
jo
jb
mov
mov
roll
test
or
mov
inc
test
fwait
jns
in
out
mov
js
or
pusha
adc
pop
mov
push
or
mov
filds
lea
test
sub
push
cmp
iret
inc
xor
adc
mov
xchg
cwtl
adc
jnp
add
and
lock
clc
add
dec
jmp
test
ror
pop
add
les
faddp
into
leave
mov
clc
push
repz
jb
jle
push
mov
mov
xor
or
jl
loope
mov
scas
push
mov
mov
push
jae
mov
pop
lret
and
cmp
ljmp
jmp
mov
jnp
ds
je
rcll
repz
imul
dec
cltd
andb
nop
test
cli
cmp
stos
pop
shll
inc
inc
rorb
notl
shlb
mov
xor
adc
ret
sahf
aad
popa
pop
add
ja
sub
call
into
xchg
aad
xchg
fcomps
jbe
cmp
mov
imul
or
push
pop
pusha
shr
pop
jo
and
mov
ficoml
mov
and
hlt
or
mov
inc
lock
mov
xchg
sub
xchg
jae
leave
mov
adc
dec
imul
adc
ljmp
jb
cmpsl
stos
pop
add
mov
pop
insl
inc
add
sti
loope
js
repnz
pop
addb
xchg
rorb
cmpsl
dec
dec
inc
movsl
jl
out
stc
lcall
aaa
loopne
sbbl
jge
dec
fcoms
loope
aad
fcoml
int3
hlt
aad
lods
out
xchg
inc
mov
mov
andl
jp
cmp
xchg
adc
lods
and
pop
les
push
inc
and
repz
fcomip
fnstsw
mov
shlb
and
mov
xor
cmp
inc
stc
loopne
pop
and
xchg
inc
fsubl
test
loop
jo
loopne
mov
cmp
add
scas
dec
std
push
xor
pop
fwait
or
add
add
xchg
xor
push
jp
sub
fs
sbb
mov
mov
push
sub
pop
outsl
xchg
fisttps
push
jb
cmc
mov
add
cs
cmp
jbe
cmp
cwtl
lods
in
cmp
cli
rorl
and
mov
pop
mov
add
and
mov
es
test
xor
pop
xchg
clc
sub
lcall
fimull
mov
pop
lods
xlat
call
xchg
adc
cmp
enter
icebp
iret
inc
inc
pop
lahf
xchg
fistl
jb
cmp
jbe
stos
insl
ds
jg
dec
dec
imull
pusha
or
cmp
std
das
inc
jg
test
xchg
mov
rclb
ret
jle
out
xchg
popl
lods
ror
stc
adcb
bound
lods
outsl
xchg
cmp
ljmp
inc
jno
rcl
lock
rcrl
cmp
ds
xor
xchg
lock
mov
jns
loop
mov
ljmp
loop
pop
lods
pop
mov
lea
cmp
fcomip
xchg
push
in
call
aaa
push
push
out
or
inc
rclb
data16
cmc
data16
loope
scas
mov
scas
dec
or
pop
ja
mov
rcrb
fistpl
jne
dec
push
cld
push
mov
lods
aaa
in
loope
gs
mov
dec
cmp
aas
or
pop
mov
push
mov
mov
and
xchg
xchg
popw
data16
jmp
mov
add
fwait
xor
pushf
mov
sub
pop
lahf
aad
mov
bound
dec
xor
fisttps
jns
movsb
fiaddl
and
or
push
in
punpckhbw
or
pop
into
fists
cmpsb
ja
xchg
xchg
addb
in
fidivrl
xchg
popa
enter
push
and
movsb
fdivrs
pop
pop
push
adc
lcall
loope
out
in
ret
mov
aaa
fidivs
popl
dec
xor
and
and
pushf
pop
stc
inc
pop
int3
mov
xchg
rorl
sbb
and
lods
jo
adc
xor
movsb
mov
adc
adc
add
ffreep
push
jle
cmp
stos
or
sub
jmp
test
int3
add
sbb
sahf
out
and
testl
mov
ret
icebp
mov
fadds
cmp
mov
into
mov
shrb
jne
dec
aad
roll
orl
fnstcw
push
daa
pop
in
ljmp
enter
negb
add
jne
xor
cmp
add
cmp
or
sub
sub
mov
je
fsubrs
enter
sbb
shlb
bound
pop
mov
push
mov
mov
fdivl
mov
lds
or
andl
test
or
push
pop
inc
cmp
ret
adc
cmp
outsl
filds
ss
jne
daa
sbb
ja
sbb
mov
jg
mov
jo
insl
dec
cs
mov
cli
sbb
aad
clc
jl
pop
sbb
testl
hlt
imul
cmpsl
dec
dec
jl
into
jno
xor
lret
cmpsl
xor
lahf
mov
fwait
mov
test
push
mov
pusha
sub
data16
loope
leave
data16
in
in
sbb
add
lea
xor
mov
jle
scas
into
jecxz
fildl
mov
stc
in
in
pusha
insl
add
mov
mov
xchg
add
lods
and
xchg
call
pop
pop
jae
or
cmpsl
or
push
loope
mov
pop
ds
xor
fwait
imul
stc
xor
fwait
les
sti
scas
aad
mov
aaa
cmp
int
push
pop
in
test
mov
cmp
mov
mov
or
sti
dec
fwait
imul
xor
jo
test
jo
fidivs
imull
fdivrl
mov
jnp
dec
or
into
xchg
cmp
nop
jb
popa
mov
sahf
out
addl
insl
jae
pop
mov
push
loopne
jnp
pushf
adc
movsb
popa
lret
sbb
jp
repnz
add
pushf
sbb
insb
adc
es
mov
movsl
cmp
mov
pop
or
mov
std
or
fstps
psrlw
mov
mov
leave
adc
sti
mov
xchg
dec
xor
cltd
jge
pop
popl
jbe
or
xor
mov
into
insl
ljmp
fsubr
mov
push
fiaddl
sub
daa
test
rcrb
mov
push
out
in
out
xor
cmp
loope
inc
test
jnp
pusha
mov
outsl
jle
pusha
xchg
xor
or
xchg
sarl
je
and
pusha
scas
shrb
cltd
dec
mov
aad
fmulp
cmpsb
fwait
sub
cld
or
icebp
fstpl
out
lock
push
jno
mov
mov
push
inc
frstor
jae
daa
rcrl
dec
xchg
fisubl
pop
rcr
and
jns
xchg
pop
push
add
inc
aam
test
mov
call
cmp
sbb
xchg
inc
mov
insl
mov
push
sbbl
fs
aas
and
inc
mov
ja
jge
mov
sbb
xchg
add
and
outsb
sbb
mov
push
dec
sub
mov
fsubrl
push
mov
sbb
lods
scas
sub
sub
dec
jns
fsubl
mov
sbb
xchg
inc
inc
fnstsw
cmp
ret
push
sub
dec
mov
mov
jo
lahf
inc
mov
lods
testl
mov
pop
repnz
mov
roll
icebp
adc
cwtl
in
mov
sbb
mov
inc
sbb
dec
inc
jb
dec
pop
rorl
pause
or
loope
sub
jge
mov
adc
fsub
inc
int3
cmp
cmp
push
out
jge
mov
cwtl
popa
fbld
mov
dec
loopne
jmp
das
xor
and
repz
sti
pop
pop
inc
cmp
sub
lahf
pop
xor
sbb
xor
or
xor
cmp
imul
aas
sbb
mov
mov
into
mov
fwait
scas
loop
xor
outsb
pop
fwait
pop
int
or
leave
xchg
test
divl
test
pop
xchg
bound
pop
add
mov
mov
sbb
std
push
jl
pop
push
movsl
xchg
jo
outsb
mov
mov
mull
addb
mov
or
pop
sbb
das
in
ds
bound
arpl
sub
mov
movsb
or
clc
xchg
rorb
xlat
test
mov
hlt
push
dec
jns
in
fs
shl
enter
arpl
insl
out
shll
inc
aas
lcall
icebp
pcmpeqw
inc
inc
and
dec
out
fst
int
mov
mov
and
push
cli
popa
jle
mov
push
xor
and
xor
cmp
jnp
sbb
call
nop
test
in
scas
sbb
push
adc
fs
and
xchg
dec
aad
add
out
fcoms
push
xor
out
into
sbb
push
or
push
outsl
repz
out
mov
leave
dec
in
dec
inc
mov
fldl
inc
in
xchg
fmuls
movsl
fisttps
fimull
fucomip
or
shl
and
inc
pop
push
ret
out
and
push
fisubrl
xchg
je
inc
xchg
shlb
push
mov
divl
adc
imul
cmp
jne
dec
or
dec
loop
cmc
rcrl
mov
cmpsb
pminsw
dec
dec
cmpsl
jge
xchg
mov
mov
lods
sub
ds
sbb
or
test
in
adc
sub
or
enter
sbb
dec
mov
mov
push
push
addl
arpl
test
adc
and
jbe
adc
push
pop
sub
test
cmp
ds
int3
xchg
rclb
push
fs
add
repz
xor
arpl
mov
in
repz
mov
and
ret
lods
into
movsl
xchg
xchg
ss
cmp
cld
mov
addr16
and
mov
int3
jecxz
outsb
movsb
outsb
sub
out
pop
jle
push
xlat
lods
aaa
jle
in
pusha
xchg
pop
adc
fsubr
mov
and
sahf
pusha
es
movsl
into
lods
mov
inc
into
push
xor
xor
pop
inc
cmp
cli
xchg
fsqrt
adc
sbb
dec
sub
pop
call
lods
inc
test
les
roll
sbb
push
lock
dec
adc
cmc
popa
popa
inc
ret
test
and
rclb
rolb
jmp
push
mov
cmp
lds
inc
jae
pop
imul
stos
popa
add
cmp
inc
int3
out
push
xorb
push
rorl
imul
lret
pop
movsl
or
movsl
xchg
mov
jp
int
dec
orb
adc
push
lcall
mov
mov
loopne
outsb
add
pop
add
ja
test
xchg
push
add
mov
fs
call
mov
push
std
shrb
mov
sbb
sbb
push
out
cld
push
int
adc
imul
in
icebp
push
fiadds
fildll
mov
inc
inc
xchg
and
lahf
inc
xchg
sbb
clc
inc
aaa
mov
stc
arpl
mov
int
out
pop
sbb
pop
roll
out
scas
pop
iret
mov
add
cwtl
lcall
lea
push
out
mov
hlt
or
xchg
jge
push
cmpsb
dec
fimull
or
cmp
sbb
cmp
ljmp
sbb
in
in
shrb
mov
outsl
fsubp
xchg
loope
add
loope
out
jg
jmp
int
repnz
and
jge
sbb
jne
adc
inc
or
in
call
sar
loope
mov
mov
jmp
fiadds
sbb
pop
clc
cmp
mov
lret
and
repz
jae
xor
push
jno
bound
movsl
stos
mov
sub
punpckhbw
aaa
xor
stos
rep
test
pop
lods
mov
popa
sub
inc
mov
shlb
pop
cmp
subb
adc
rcr
jbe
mov
mov
movntq
and
test
insl
insl
mov
push
jecxz
inc
pop
int
sbb
mov
je
sub
mov
clc
popf
daa
shlb
push
mov
add
shl
jg
push
pushf
cs
jno
mov
cmp
inc
pop
mov
lock
xor
jecxz
pop
cmp
and
jmp
inc
push
inc
adc
roll
inc
bound
fwait
in
sub
inc
lea
sub
inc
in
cmc
popf
and
push
aad
repnz
les
in
and
xchg
cmp
push
insl
push
jg
fdivrl
mov
into
mov
xor
jb
cmp
pop
addr16
mov
and
sbb
movq
sub
lcall
negb
pop
ret
mov
scas
inc
cli
lret
push
adc
cmp
std
in
movsb
add
clc
mov
sub
rorl
add
dec
fimull
es
in
inc
mov
cmp
out
mov
pop
outsl
iret
adc
sti
and
aaa
mov
cmp
push
inc
sbb
cs
pextrw
fs
pusha
scas
add
fimull
adc
flds
sbb
inc
xchg
add
loop
in
push
jg
xor
adc
pop
jbe
jl
mov
inc
addr16
cmpsb
mov
mov
mov
xchg
lods
testl
or
or
call
or
jg
testl
dec
mov
repz
and
ds
imul
sub
mov
jb
lea
fs
xor
mov
movsl
add
les
push
iret
out
insb
jl
shl
call
aaa
inc
sbb
lock
in
cmpsb
inc
push
js
xchg
test
cmp
push
push
jno
pop
push
sti
lock
add
and
aam
mov
cmp
add
sbb
inc
mov
stos
shll
jo
sbb
aaa
xchg
push
movsb
data16
shrb
gs
jmp
ds
jns
add
add
fsubrp
mov
sahf
outsl
inc
cmpsb
mov
lea
mov
pop
js
sti
inc
mov
mov
bound
jnp
sub
sahf
dec
add
and
shl
test
push
daa
sbb
pop
pop
outsl
mov
stos
xchg
xchg
pop
leave
das
out
adc
jno
push
push
lret
mull
int3
jnp
xlat
sub
mov
push
call
mov
inc
xor
arpl
mov
mov
loope
sbb
in
inc
data16
xchg
mov
push
test
pop
je
ffreep
int
pop
stos
push
mov
jb
push
jecxz
pop
ret
dec
cli
jmp
repz
xchg
jge
mov
xor
sub
xchg
or
mov
jge
sub
push
lcall
cwtl
ss
xor
rcll
and
mov
repnz
movsb
xchg
decb
sahf
cmp
mov
mov
jnp
loop
and
scas
adc
adc
and
adc
rorb
mov
mov
jg
push
data16
ror
movsl
xchg
add
data16
lret
push
mov
in
outsb
in
lea
dec
mov
ss
sbb
mov
testl
movsl
sbb
jecxz
xor
push
scas
cltd
popf
inc
scas
in
ffreep
or
xlat
cwtl
lods
stos
or
cwtl
cmp
inc
mov
cmp
cltd
xchg
leave
fisubrl
adc
add
and
fwait
dec
sbb
ljmp
out
enter
ss
jno
rcr
jnp
das
adc
xor
ja
add
sub
lcall
sbb
sbb
js
xor
insb
mov
cwtl
sbb
scas
xor
into
jo
cmpb
push
mov
add
lret
xchg
fnstsw
pop
mov
add
pushw
arpl
or
jle
bound
out
adc
xor
mov
push
loop
add
xor
aam
push
std
scas
clc
inc
and
pop
xlat
inc
daa
addl
mov
xlat
mov
xchg
or
nop
push
adc
rorl
cli
xchg
lods
ja
insl
ja
cwtl
dec
movsl
dec
cmc
cmpsb
mov
iret
sbb
outsb
dec
xchg
jo
ja
movsb
in
pop
rorl
retw
shlb
mov
cs
fdivrs
mov
cmc
gs
fwait
push
sbb
mov
push
mov
cli
lcall
mov
or
lahf
inc
sahf
in
adc
adc
cmp
add
pop
push
inc
call
mov
or
nop
or
push
cli
icebp
leave
pop
or
shlb
sub
jl
mov
int3
jno
fs
xor
pop
test
int
push
mov
das
cli
dec
and
sub
fisubs
ret
rcrb
repz
ror
enter
push
pop
jmp
sub
in
aam
xchg
push
push
addr16
iret
mov
or
stos
dec
adc
mov
pop
iret
std
or
je
fwait
cli
add
insb
int
aam
inc
cmp
and
sbb
jp
jno
jns
lahf
xor
dec
lods
push
dec
adc
jnp
subb
cmp
out
cmp
dec
sbb
xlat
xchg
mov
mov
xchg
pushf
js
inc
xchg
sbb
mov
jae
lahf
sbbb
pop
popf
push
div
push
cmp
xchg
mov
xchg
jae
sub
xor
inc
sbb
sahf
stc
pop
push
insb
jne
rolb
lea
mov
jns
addr16
testb
xchg
mov
popa
call
inc
outsb
mov
dec
jae
mov
dec
out
xor
cltd
inc
mov
lahf
dec
andnps
cwtl
jb
daa
insb
popa
in
fadds
mov
pop
cli
xchg
pop
leave
sbb
dec
insl
sub
mov
loop
mov
andl
addb
sahf
fs
xchg
push
mov
sbb
jae
out
mov
adc
adc
repz
xchg
in
rep
mov
mov
xchg
icebp
test
xor
std
mov
sub
push
stos
pop
insl
push
insb
sub
sub
sbb
out
lods
mov
mov
fnstsw
mov
xchg
xlat
mov
faddl
lock
mov
adc
in
inc
fsubrs
cmp
jmp
mov
leave
xor
xchg
mov
inc
pop
xchg
popa
lock
xor
pop
xor
push
mov
scas
sti
jecxz
lahf
pop
movsl
dec
fildll
cmc
mov
sbb
mov
insb
push
addb
sub
jb
das
test
cli
je
outsl
shlb
ret
or
xor
out
fnsave
xlat
into
icebp
inc
and
outsb
pop
adc
xchg
divb
rorl
clc
int3
xor
cmp
dec
xlat
add
jge
add
arpl
cwtl
or
mov
jbe
mov
pop
lds
lret
dec
xchg
repnz
push
loop
lcall
std
dec
repnz
mov
outsb
xchg
ret
pushf
jmp
cwtl
out
insb
mov
push
add
add
jbe
dec
sbb
lds
repnz
les
dec
repz
ja
hlt
fdivp
popf
add
cmpsl
pop
out
out
xor
ds
fldcw
push
mov
pushf
xchg
fists
jle
mov
rcl
shr
push
mov
in
jb
mov
or
arpl
loop
add
fs
xor
and
and
cld
fdivs
or
bound
cltd
jae
dec
cld
rcrl
dec
push
incb
or
adc
xchg
lret
adc
or
jle
xor
mov
cmp
jno
es
mov
lods
jecxz
mov
repz
cmp
fwait
lods
lahf
mov
rcrl
mov
das
out
mov
cltd
outsb
mov
cld
jl
jecxz
mov
fistpl
inc
cmp
mov
sahf
jo
xor
sub
add
jle
iret
mov
pop
icebp
sub
adc
insb
sbb
inc
dec
stos
icebp
addb
movsl
xor
xor
mov
xchg
xchg
xor
and
scas
movsb
and
adc
mov
jmp
pop
ret
xor
push
push
mov
add
lahf
jno
test
pop
aaa
into
rcrb
or
jmp
xor
movsb
leave
or
aas
shlb
sbb
sarl
test
jbe
jmp
mov
sbb
rorb
and
pusha
add
inc
xchg
or
insb
insb
cli
rclb
xchg
and
mov
jne
inc
pop
add
adc
adc
dec
and
xchg
ljmp
dec
je
xlat
xchg
fwait
lds
add
mov
fadd
lea
sub
insb
add
movsl
loopne
push
outsl
pop
sbb
ljmp
mov
add
fcmovbe
stos
lock
push
popf
scas
adc
dec
add
call
sbb
ja
fisttpl
mov
mov
push
dec
test
mov
xor
jmp
sub
mov
rcl
repnz
or
pop
sub
mov
add
or
lret
dec
loop
cmp
adc
xchg
rcll
pop
cmp
cmp
mov
pusha
sbb
scas
cmpsl
xor
lods
aam
imul
xchg
andb
aaa
pop
mov
data16
and
mov
sarb
jle
push
xorb
and
sub
into
in
push
mov
mov
adc
in
xchg
fdivl
jno
outsb
jge
fwait
bound
lods
xor
push
xchg
dec
flds
mov
xchg
lock
add
mov
push
fisttpl
rolb
clc
lea
sbbb
xchg
ret
roll
call
mov
push
iret
jns
dec
std
repnz
or
pop
jnp
pop
mov
imulb
hlt
les
lods
mov
pop
test
mov
sub
sub
shl
add
ret
jo
pop
lock
ja
jne
aam
sub
outsb
sub
jbe
das
fwait
aad
loope
mov
add
pop
jecxz
lock
rcll
mov
fistpl
mov
mov
test
addr16
mov
sbb
sbb
and
fdivrs
push
dec
shr
jnp
mov
fisubl
lcall
lods
cwtl
push
sbb
mov
jno
in
shll
pop
and
mov
jp
jg
out
jb
mov
stos
xor
arpl
test
cld
ss
shr
pop
addr16
pushf
enter
or
and
jae
aaa
sbb
fnstsw
mov
out
jecxz
push
repnz
mov
add
lcall
pop
and
sub
rolb
adc
pop
cmp
pop
outsl
outsl
aas
mov
jns
xchg
xor
pop
mov
mov
push
cli
ds
push
out
es
cmp
loopne
bound
es
loope
in
imul
pop
jnp
cmp
add
lcall
mov
cmp
cli
inc
sbb
jle
or
sbb
xor
scas
xchg
inc
push
adc
xchg
mov
mov
lods
aad
xchg
and
out
hlt
mov
and
scas
and
addr16
fstl
pushf
adcb
fisttps
mov
pusha
push
mov
bnd
xchg
push
dec
shr
sarl
std
int
in
xlat
lods
push
cmp
ss
lahf
inc
out
aam
dec
sbb
lahf
mov
imul
pop
pop
xor
dec
mov
mov
jns
lret
jg
popf
dec
sbb
cmp
out
cmpb
add
pop
fbld
mov
push
cld
push
pop
scas
fsubl
int3
aaa
cmp
jecxz
out
mov
push
cltd
scas
loope
out
or
xor
int3
inc
sub
arpl
sub
pop
push
adc
popa
xor
aas
sub
and
mov
fldenv
jmp
mov
sub
sub
daa
lcall
in
mov
ss
mov
push
or
push
adc
push
stos
lods
addr16
sub
out
inc
sub
inc
mov
xchg
add
bsr
ds
or
mov
xchg
inc
pop
lahf
pop
aaa
int3
push
sub
push
pusha
jge
adc
mov
icebp
inc
js
lret
pop
hlt
es
aam
inc
mov
js
pop
ljmp
xchg
test
mov
ret
iret
decl
cmpsb
inc
mov
dec
aad
ljmp
adc
cli
aad
push
sub
out
subb
mov
mov
mov
loope
lods
xchg
ja
dec
ljmp
inc
mov
sbb
sahf
push
inc
loopne
nop
jno
imul
int
push
jecxz
in
or
int
jno
lret
sub
arpl
add
addr16
and
negl
and
icebp
jp
daa
push
push
lea
mov
pop
pop
push
and
fisubs
add
ljmp
out
ret
icebp
or
divb
popa
mov
fidivrs
fs
xor
cmp
or
dec
jp
test
orl
mov
in
mov
jp
xchg
add
cmp
push
aas
push
lahf
js
pop
xor
std
add
pop
adc
inc
and
cmp
inc
rcrl
mov
sbb
shlb
fnstenv
sbb
in
jg
push
push
scas
inc
aas
cltd
sub
push
xchg
push
loopne
repz
fwait
outsb
add
mov
inc
and
mov
addr16
xor
in
or
dec
mov
mov
in
insl
je
adc
arpl
inc
mov
pop
and
shld
stc
ja
outsb
sbb
test
jbe
jno,pt
in
ret
jp
imul
and
sub
or
lcall
outsb
popf
rep
out
pop
sub
jecxz
mov
icebp
pop
outsl
dec
mov
mov
mov
and
pop
cmp
push
inc
xchg
mov
ror
sub
or
das
test
mov
mov
repz
mov
neg
and
es
mov
add
mov
and
out
xchg
in
add
mov
xchg
push
shrl
or
inc
jns
decl
addr16
popa
cmp
xlat
ret
sub
xchg
lds
push
hlt
cmc
adc
iret
or
mov
inc
loope
pop
jno
imul
icebp
pop
test
mov
in
push
aas
jge
or
push
ficomps
mov
cmp
sbb
and
repnz
inc
add
xchg
pop
pop
xlat
mov
dec
arpl
pop
jbe
fdivrs
mov
xlat
xchg
lret
subl
add
popf
fwait
jne
inc
jbe
sbb
cld
rclb
in
cli
ja
xchg
pop
nop
in
or
cmpsl
adc
jmp
inc
cmpsb
push
push
inc
push
daa
sub
mov
test
push
int3
mov
pushf
cmp
or
bound
push
push
push
or
lahf
jnp
mov
cld
nop
pushf
mov
xchg
mov
fs
addl
xchg
cwtl
rcl
push
call
dec
mov
sbb
jns
orb
movb
scas
imull
pop
fmull
sub
adc
mov
pop
notb
sti
popa
mov
jbe
iret
sti
js
pusha
xor
cmpsb
es
ret
inc
lahf
ja
adc
out
cmp
mov
xor
dec
in
sbb
adc
ljmp
mov
xor
arpl
or
fnstsw
sub
xor
test
mov
in
enter
das
push
push
jmp
data16
or
shlb
pop
sbb
add
sbb
es
pusha
push
dec
or
and
cmc
add
bound
mov
ret
pop
inc
inc
mov
scas
mov
pop
test
lock
ficoms
mov
mov
lds
iret
mov
test
lret
or
call
insb
xchg
mov
cmpsb
or
push
cmpsl
int3
daa
push
test
xchg
mov
ret
push
sub
rclb
mov
fmuls
fistl
jbe
test
repnz
cli
pop
repnz
sbb
adc
cli
daa
subl
inc
ds
fcompl
sbb
add
xor
in
mov
leave
nop
mov
lcall
ret
jo
test
pop
int
ja
add
sbb
dec
scas
and
add
cli
push
js
xchg
push
or
mov
dec
cs
xor
imul
cmp
inc
add
aam
sbb
enter
icebp
in
pop
sub
sub
or
mov
scas
or
std
mov
dec
lret
xchg
test
pop
xchg
imul
loope
ret
push
sbb
stos
orb
add
sahf
fwait
and
ret
aam
aas
ret
ja
xorl
movsb
adc
fidivrl
pop
addr16
pop
push
pop
xchg
mov
pop
push
jnp
mov
pop
stc
pop
mov
loopne
imul
inc
ret
stos
aad
aaa
fcmovne
xor
shl
sti
xchg
loopne
notl
mov
jle
sub
push
xor
in
daa
mov
outsb
stos
xor
mov
lcall
pop
lret
cmp
jge
inc
mov
jae
sarl
clc
dec
xchg
lds
pop
lods
es
dec
push
push
mov
fdivs
subl
imul
lret
test
sub
mov
sub
mov
mov
mov
inc
dec
adc
movsl
rcl
aaa
jne
mov
jae
mov
pushf
cld
xchg
jo
xchg
sbbb
das
mov
pop
push
cwtl
insb
sarl
adc
dec
fdivrs
mov
dec
fs
pop
push
dec
jno
dec
and
stc
dec
out
rcl
rol
movsl
imul
xchg
mov
rcr
mov
xor
lea
jmp
stc
not
in
stos
stos
cltd
push
inc
xchg
rcrl
ja
pop
std
adc
push
push
mov
insb
arpl
adc
daa
invd
jle
jl
mov
scas
cmp
mov
into
or
xor
xabort
xchg
xchg
sbb
std
inc
push
cmp
xchg
into
cs
jbe
stc
cmp
and
iret
mov
stc
and
mov
adc
dec
data16
inc
sbb
mov
sub
push
ss
xor
mov
ja
out
push
cmp
xchg
ljmp
xor
inc
mov
ss
mov
pop
in
push
inc
pop
aas
fstpl
movsl
setb
aas
sub
je
and
add
mov
adc
fadds
imul
and
emms
cmp
or
jle
mov
cmp
cli
jp
and
sbb
dec
out
adc
fdivrl
movsl
xchg
bound
add
cwtl
aam
outsl
jb
stos
sbb
inc
fsts
dec
out
push
xchg
sbb
aas
int3
dec
test
mov
xchg
pop
dec
sbb
fildll
insl
cwtl
sub
fs
jp
mov
ds
stos
mov
xor
scas
xchg
mov
push
mov
bound
addr16
jb
cmp
stos
jecxz
test
cmp
inc
dec
sub
adc
pop
sbb
pusha
std
lret
int
jecxz
xor
in
push
add
mov
out
cmp
setg
add
xor
stc
divl
notb
sub
mov
push
shlb
loop
add
cmp
scas
jnp
cmp
adc
jp
inc
cmp
rclb
outsl
cld
repz
mov
sub
jmp
mov
xchg
lahf
icebp
insl
cmp
mov
push
and
enter
sub
js
cld
inc
and
pop
fnstcw
pop
iret
stos
fnsave
cmp
cmp
cmp
popa
pop
enter
and
popf
subb
pop
movsb
xor
fsubs
mov
jg
lea
out
sahf
jge
ror
sub
loop
mov
out
movsl
xor
std
test
and
movsl
pop
mov
shlb
push
adc
add
sbb
mov
out
mov
fistl
adc
jae
cmp
outsb
rol
iret
adc
in
pop
xchg
cmp
in
hlt
fisubs
aad
dec
aad
mov
inc
aaa
cmpsb
stc
cmp
adc
movsb
ljmp
jns
add
and
inc
pop
out
add
icebp
fimuls
cmc
movsl
fnstcw
cwtl
mov
test
pop
ret
sub
add
xor
fdivs
aas
pop
cmp
jnp
or
fcomps
iret
loopne
clc
mov
jl
cmp
add
loopne
jno
push
adcb
xchg
mov
fwait
add
sbbl
jg
scas
jne
inc
jecxz
inc
loopne
stc
outsl
pop
adc
cmp
inc
fldenv
movsl
leave
cmp
out
push
movsb
mov
push
add
or
pop
stos
nop
scas
pop
ds
scas
pusha
sbb
sbb
inc
pmaddwd
fsubrs
lcall
pop
lcall
shll
jmp
sbb
iret
lcall
js
insl
jno
aas
jo
lea
fcompl
jp
adc
orb
and
push
xchg
add
cmpb
pop
push
adc
aam
mov
xor
xor
pop
int3
imul
push
adc
fidivs
mov
insl
ja
jbe
cli
das
pusha
test
jge
aam
adc
push
mov
jle
mov
pop
jb
mov
xor
shrb
test
movl
push
test
leave
mov
push
fdivrp
mulb
lods
add
adc
int
add
pop
cltd
std
cmpsl
and
imul
les
aad
les
stos
fsub
inc
addb
xchg
cmp
stos
fnstenv
in
imulb
mov
jmp
push
sbb
inc
shl
pop
mov
xchg
dec
jae
ja
inc
repz
add
or
not
and
cwtl
test
std
sub
into
cmp
repz
or
xor
stos
lret
mov
jb
inc
rclb
cmp
scas
flds
icebp
mov
sub
icebp
fldt
hlt
jle
out
in
adc
add
sbb
popa
dec
jg
lds
les
pop
dec
dec
push
dec
inc
dec
dec
xchg
jb
test
sub
sub
sub
psubb
cwtl
push
lahf
shlb
mov
scas
addl
inc
push
mov
dec
jl
lock
fimuls
clc
sub
psubb
cwtl
push
lahf
shlb
sub
psubb
cwtl
push
lahf
shlb
jmp
inc
outsl
mov
dec
jg
xchg
sub
mov
ficoml
cwtl
push
lahf
shlb
sub
psubb
cwtl
push
lahf
shlb
sub
psubb
cwtl
push
lahf
shlb
sub
psubb
cwtl
push
lahf
shlb
sub
psubb
cwtl
push
lahf
shlb
sub
psubb
cwtl
push
lahf
shlb
sub
psubb
cwtl
push
lahf
shlb
sub
psubb
cwtl
push
lahf
shlb
sub
psubb
cwtl
push
lahf
shlb
sub
psubb
cwtl
push
lahf
shlb
sub
psubb
cwtl
push
lahf
shlb
sub
psubb
cwtl
push
lahf
shlb
sub
psubb
cwtl
push
lahf
shlb
sub
psubb
cwtl
push
lahf
shlb
sub
psubb
cwtl
push
lahf
shlb
sub
psubb
cwtl
push
lahf
shlb
sub
movaps
rcr
push
jl
.byte
