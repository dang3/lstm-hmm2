xor
mov
xchg
cmp
andl
mov
cmpsb
jae
pop
xor
jo
ret
pop
ja
ja
loopne
sbbb
leave
fs
sub
test
addr16
and
dec
daa
inc
into
out
leave
out
aad
repz
add
xchg
mov
push
inc
sbb
dec
stc
insb
insb
push
pusha
insb
or
and
mov
inc
lock
sbb
rorl
or
stos
cmp
mov
push
pop
icebp
shlb
sub
jg
jns
jg
xorps
cs
push
stos
and
mov
push
shll
mov
push
jnp
dec
pop
in
jno
scas
fwait
out
les
pop
in
dec
inc
lret
or
das
inc
pusha
mov
pop
std
mov
leave
loop
jmp
mov
rorl
pop
roll
mov
insl
mov
popf
mov
add
mov
rcll
fistps
fstpt
mov
pop
pop
jne
sti
cld
mov
push
loopne
and
in
sti
imul
movl
mov
fisubl
lahf
xlat
test
adc
mov
and
mov
sub
or
jb
mov
xchg
mov
jns
test
rol
jo
xchg
mov
or
jns
jmp
hlt
mov
fildl
adc
arpl
dec
imul
pushf
lret
js
divb
mov
fcoms
adc
mov
add
or
addl
sbb
pop
subl
dec
dec
add
pushf
sub
sbbl
inc
push
xor
or
pop
adcb
mov
mov
mov
stc
fsubrl
mov
sub
push
mov
int3
add
inc
sbb
pop
in
mulb
adc
pusha
cwtl
ret
mov
inc
js
loopne
imulb
push
sub
jbe
pop
jg
push
push
andl
mov
incl
bound
lods
xchg
roll
mov
xor
sbb
dec
and
xor
mov
add
pop
mov
ljmp
adc
push
adc
int3
adc
movsb
and
dec
sbb
inc
aam
cmp
inc
imul
adc
in
dec
push
mov
mov
pop
inc
and
lahf
xchg
insb
cmp
cld
xor
xor
sub
sbb
xchg
mov
cwtl
jge
cmc
cli
lods
rcrb
xor
adc
jge
lock
push
sub
aam
and
mov
loope
test
mov
outsl
insb
in
sub
jmp
movsl
xchg
inc
pop
and
inc
rorb
movsl
ljmp
loopne
mov
imul
push
dec
jno
hlt
adcl
jnp
pop
sub
mov
cs
dec
jmp
mov
fidivl
xchg
test
push
inc
jecxz
xchg
pop
test
cmpsl
pop
xor
push
sbb
aaa
mov
add
loopne
pop
lret
flds
add
scas
das
nop
outsl
xor
cmp
repnz
mov
and
inc
std
xchg
ds
je
mov
gs
add
dec
xor
push
shl
clc
aad
in
into
shl
sbb
pop
mov
add
fistps
add
adc
fcmovbe
cmpsb
sbb
pusha
lock
push
shlb
jb
xchg
push
test
xchg
and
cmpsl
adc
in
lcall
popa
data16
sbb
cltd
dec
xor
push
insl
sub
pop
ss
adc
mov
and
xor
mov
std
in
pop
bound
pop
into
dec
xor
push
icebp
pop
xchg
jmp
out
adc
mov
mov
ror
adc
je
popa
sbb
push
scas
mov
js
xor
pop
scas
call
sbbb
mov
fs
xlat
sbb
jle
and
es
and
cmp
loopne
xchg
imul
adc
lea
cmp
fmulp
fs
sub
push
cltd
jp,pn
clc
jbe
push
cmp
inc
sbb
popf
pusha
cmp
cmp
mov
popf
divl
mov
push
scas
xor
or
loopne
pop
mov
leave
icebp
lcall
cmp
mov
shr
lods
and
and
lret
ja
call
lret
filds
arpl
movzwl
inc
push
das
jno
add
hlt
mov
test
cmp
mov
mov
inc
sti
in
mov
push
pop
mov
dec
xchg
push
outsb
add
push
push
mov
mov
inc
sbb
enter
mov
in
xor
dec
mov
cmc
sub
and
jecxz
lahf
imul
mov
out
dec
xlat
outsb
flds
fdivrl
dec
mov
test
inc
cs
push
jno
fisubrl
int3
or
loop
data16
icebp
pop
adcb
pop
cmp
repnz
das
pop
or
jb
stos
inc
rorl
outsl
test
add
lds
pop
mov
popf
or
jb
cmpsb
in
mov
xchg
push
lret
clc
movsl
out
arpl
mov
test
insl
push
mulps
imul
ss
or
pop
lods
pop
popa
mov
ss
shll
aaa
repnz
push
sahf
sbb
insb
xor
ss
xchg
xlat
aas
jl
sti
negl
sub
sbb
push
imul
pop
ds
mov
inc
pop
incb
push
dec
mov
in
sub
stc
jecxz
outsb
sub
add
mov
inc
les
out
loop
ret
pop
or
or
lea
mov
hlt
or
cmc
iret
xchg
jae
sbb
cmpb
call
adc
mov
mov
adc
sub
jo
pop
sub
lods
fmul
and
das
mov
fsts
rorl
mov
cs
jmp
pop
int3
xor
sarb
jno
fstps
sbb
lcall
popa
test
and
out
or
jg
jge
je
rep
push
jge
jmp
adc
or
hlt
or
add
add
mov
iret
loopne
call
push
xchg
push
push
cmp
mov
jns
pop
push
sti
cltd
jle
mov
jle
mov
lea
out
lock
dec
test
mov
iret
iret
testl
mov
push
clc
pop
fsubl
push
jmp
lea
cltd
inc
mov
sbb
add
and
and
push
out
xchg
add
ljmp
fisttpll
jnp
aas
inc
jno
movsl
add
test
mov
pop
lret
or
incb
cmp
dec
mov
adc
scas
sub
into
mov
xchg
movb
outsb
xor
sbb
sub
sbbb
aaa
test
cmp
in
psubw
xchg
xchg
sti
lcall
in
pop
or
je
pop
je
lods
xchg
or
int
repnz
jmp
sti
cmp
fcoms
xchg
dec
test
pop
jo
mov
jbe
mov
stos
cmpsl
fucomip
negl
clc
mov
fnstsw
cmp
sub
aaa
jl
paddd
jae
ss
shrb
fsubs
frstor
shlb
xchg
std
aam
pop
mov
mov
xor
jp
sub
insb
xor
into
mov
mov
jns
xor
lret
fs
scas
sti
sub
push
mov
pop
fwait
add
dec
lahf
sub
cli
xchg
mov
mov
sbb
test
arpl
insl
jnp
or
call
stos
ret
adc
inc
mov
out
insb
add
add
push
jns
movsb
fsubp
out
std
mov
cmp
jnp
jp
out
out
inc
mull
je
mov
out
xor
dec
sti
aaa
inc
mov
imul
xchg
aas
aas
iret
push
fidivs
imul
rol
aad
mov
lods
jne
jge
mov
inc
jns
shr
dec
add
inc
jnp
sahf
jns
and
mov
mov
pop
fs
repz
mov
jb
push
std
pop
and
fwait
mov
xchg
mov
test
cmp
jno
jle
push
shrb
or
cld
cmp
jae
jl
push
call
clc
pop
mov
xor
cmpsl
fsubrs
lock
iret
aaa
shll
or
xchg
adc
dec
ret
adc
mov
mov
inc
push
fisubl
inc
lret
inc
loope
aas
mov
add
mov
scas
mov
and
dec
into
mov
mov
fcoms
daa
repnz
out
adc
popf
mov
ja
push
and
dec
and
and
iret
cmpb
or
addr16
jb
out
clc
xor
popa
je
cmp
fimuls
loop
inc
inc
lahf
sbb
aad
and
add
andb
pushf
mov
icebp
fidivrl
mov
xchg
fnclex
mov
popa
cltd
push
in
adc
fstl
inc
mov
dec
inc
and
loopne
shrl
dec
fs
dec
outsb
mov
inc
sub
push
int3
mov
stos
iret
mov
pusha
pop
sub
imul
mov
out
inc
push
sbb
or
mov
dec
sbb
inc
loop
cmpsl
fimull
push
inc
mov
mov
add
jns
adc
push
fcmovnbe
sub
out
pop
pop
cmp
aaa
jnp
cmp
cli
xchg
out
lods
jb
jecxz
add
mov
enter
insb
in
jecxz
js
negl
cmp
and
jne
mov
shr
test
out
fwait
and
fcmovne
ret
jnp
and
xchg
xchg
mov
cmpsb
dec
int
jl
ja
inc
sti
jbe
mov
inc
outsl
jg
dec
lods
inc
dec
into
bound
push
or
sti
nop
inc
test
out
pop
jns
pop
in
pop
fcom
jnp
pusha
push
jge
ds
inc
lret
sarl
inc
xchg
pop
xchg
push
ja
inc
cmp
push
jb
lds
mov
fsubrl
imul
mov
int3
sub
pop
lods
xchg
cmp
jb
inc
in
jg
mov
cmp
dec
cltd
leave
std
imul
mov
addr16
cmpsl
inc
dec
in
in
mov
icebp
shlb
sub
loop
out
mov
mov
cmp
sbb
xor
jb
repnz
jl
jbe
pop
fmull
add
andl
nop
pop
adc
out
aaa
mov
dec
js
xor
lret
insl
and
pop
xchg
jp
push
adc
mov
scas
push
mov
addr16
jbe
xor
inc
mov
mov
and
outsb
les
stos
loope
cmpsl
pop
sti
sbb
daa
push
int
adc
js
and
aas
jbe
dec
dec
sbb
cmpb
dec
push
lock
pop
in
xchg
popa
mov
je
mov
into
aam
cmp
ret
push
jle
test
inc
cld
notb
push
test
or
repnz
xlat
stos
arpl
cmc
loopne
fs
aad
push
cmp
dec
fwait
test
mov
pop
je
sbb
fstl
movsl
mov
out
sti
ss
insb
push
sbb
jecxz
xlat
mov
mov
insl
ret
dec
mov
shrl
or
mov
push
inc
into
cmpsb
nop
cs
ret
fnstenv
cmp
jmp
xchg
push
sti
lock
scas
mov
or
cmc
out
fxch
or
push
xor
cmp
das
push
dec
int3
je
xchg
jns
ffree
inc
test
xchg
pop
inc
xchg
mov
rclb
movsb
call
sub
lds
xchg
loope
push
push
mov
and
inc
aaa
icebp
lret
dec
shlb
xor
pop
or
jb
adc
shr
lret
ficomps
lret
mov
cli
inc
out
sbb
test
lret
into
ds
xor
rep
aad
repnz
in
inc
or
mov
aam
cmp
push
mov
xor
insl
pop
mov
call
xor
add
jge
ret
jo
mov
std
push
clc
adc
push
pop
leave
lds
dec
jnp
xchg
jge
test
adcl
fidivl
das
cmp
ds
mov
testb
daa
mov
jo
jb
mov
ljmp
dec
clc
je
dec
xchg
cld
or
xchg
adc
cmp
mov
shlb
dec
adc
inc
pop
or
test
cli
xchg
addr16
or
and
stc
adc
out
sarb
aaa
insl
gs
ret
cmc
cmp
jle
popa
pushf
inc
fstpt
fcoml
repz
enter
inc
loop
sbb
repnz
dec
lcall
icebp
inc
sub
gs
cwtl
cmp
scas
leave
push
je
push
pop
sbb
jle
add
adc
movsb
mov
ja
or
dec
xchg
xor
cmp
cld
leave
fsubl
mov
lret
fiadds
cmp
fmuls
mov
movsb
and
adc
mov
aaa
mov
push
push
test
xor
imul
test
jae
cli
mov
fwait
or
cmp
cmp
fsubs
add
dec
cmp
cltd
arpl
and
or
addl
mov
mov
fbld
in
jno
fwait
rcll
or
test
loopne
les
das
mov
ja
jne
aad
push
icebp
pop
and
stos
scas
lods
cmp
out
ljmp
sahf
popa
pop
add
push
in
inc
imul
push
imul
push
cmpsb
xor
dec
cmp
aad
xchg
mov
pushf
or
lds
stc
inc
rcrl
adc
rcl
or
xchg
pop
notb
arpl
repz
cld
imul
mov
xchg
clc
das
jg
mov
pop
add
pshufw
ret
in
mov
xor
sbb
and
pop
jne
and
jg
shll
add
fwait
lret
lret
shrb
xor
mov
adc
dec
leave
jbe
repnz
stc
and
mov
sbb
in
pushf
daa
xchg
dec
jecxz
fisubl
hlt
pop
push
repnz
test
gs
add
fsubrs
xchg
add
ret
popa
notl
stos
cs
scas
mov
sbb
sahf
loope
pop
test
fwait
fimull
adc
lods
int
adc
sbb
cs
jl
fstpl
jp
insl
pop
and
and
fsubs
cwtl
xchg
pop
lahf
out
dec
dec
mov
mov
aaa
cwtl
or
repnz
shll
test
dec
and
xchg
bound
or
mov
adc
mov
mov
hlt
push
or
ljmp
adc
dec
dec
jp
icebp
jecxz
pop
mov
lock
fdivrl
fimull
je
jne
ljmp
lds
mov
adc
jns
movsb
sbb
push
lret
fs
sub
xor
jecxz
bound
cmp
test
push
sbb
in
pop
rorl
test
daa
jg
jge
addr16
mov
test
pop
paddb
data16
into
lods
push
xchg
mov
or
popa
jecxz
rcl
lret
popa
mov
jle
adc
data16
mov
ja
xchg
call
jmp
jle
outsb
arpl
adc
adc
or
push
xchg
adc
sar
push
mov
clc
imul
test
insb
fwait
or
out
or
fidivl
add
xor
xlat
xor
push
je
cltd
addl
cmp
loop
cmp
or
rcrb
outsl
wbinvd
jecxz
fcmovnu
sub
push
leave
scas
pop
add
addr16
adcl
and
sbb
and
mov
call
imul
and
sbb
and
or
jo
lcall
loop
repz
fldcw
or
ja
cmp
cmp
rorb
mov
aam
pushl
push
stc
adc
jo
adc
fistpl
out
mov
pop
cmp
lret
jae
lret
cwtl
jnp
cwtl
jae
inc
add
inc
outsb
rcrl
js
aam
mov
cmp
adc
call
js
add
or
mov
xor
cmp
into
daa
je
mov
mov
in
ficoms
fabs
jmp
stos
aaa
mov
mov
mov
mov
cwtl
es
rorl
xlat
hlt
addr16
cmp
sbb
cmp
mov
rolb
fldenv
mov
sub
mov
mov
push
ficompl
mov
sub
int3
sbb
test
jb
icebp
push
pop
cmpsl
cmp
mov
cmp
movsl
jl
xor
fisubs
out
mov
pop
addr16
shrb
fcom
pop
roll
sub
pop
jl
in
es
xchg
mov
mov
dec
xchg
fnstsw
pushf
mov
lds
push
aad
pop
xchg
mov
mov
dec
push
sysenter
in
cmc
movnti
fbld
or
push
mov
shlb
cwtl
insb
pushf
push
cs
test
dec
sahf
jp
xchg
pop
shlb
or
xchg
out
xchg
jmp
movsl
out
movl
and
popa
xlat
and
lds
mov
push
pop
nop
shrb
cltd
jle
mov
ss
push
scas
dec
lahf
pop
sahf
cmp
push
daa
cmp
dec
test
insb
ljmp
sub
insb
dec
shr
scas
mov
mov
or
test
mov
pushf
jnp
jo
push
jl
das
sub
ljmp
xchg
pop
js
iret
push
setne
fsubrp
ret
in
cltd
out
cld
mov
adc
mov
cli
adc
or
sahf
xchg
jp
jns
mov
jg
dec
xor
pop
leave
cmp
cwtl
xchg
cmp
adc
mov
jle
jae
jo
ljmp
lret
je
mov
mov
aad
jnp
push
jl
sbb
shlb
imul
pop
mov
movsl
enter
push
popa
stos
pop
bound
jl
incl
xchg
push
pop
pushf
add
push
sub
dec
mov
lret
leave
pop
xchg
das
fidivrl
out
je
sti
dec
jae
mov
bound
xor
cmp
inc
out
inc
xchg
sub
dec
mov
xchg
jmp
shrl
inc
cltd
in
js
xchg
mov
insb
jl
sar
repnz
xor
cwtd
cltd
jae
push
lods
push
aad
stos
dec
mov
pop
repnz
cwtl
das
pop
pop
mov
xchg
movsb
push
mov
out
int
rolb
jae
lods
rcrb
and
jae
pop
clc
adc
jmp
sbb
push
rol
int3
or
out
repnz
insb
push
cwtl
add
cmpsb
lea
xor
xlat
dec
ljmp
pop
pushf
imulb
mov
or
xorb
mov
pop
stos
or
add
mov
xchg
popa
xorb
sbb
sbb
loope
clc
rclb
sub
adc
and
push
imul
es
out
adc
mov
idivb
fists
pushf
insb
bound
test
or
mov
pushf
push
inc
stos
sub
lds
scas
cmp
and
and
sub
in
xor
jmp
pop
adc
push
lcall
mov
adc
ljmp
je
imul
ret
fcmovb
ds
scas
scas
push
sub
xchg
rcrb
mov
sub
cmp
sbb
cmp
stos
mov
and
or
rcrl
scas
mov
popf
sahf
dec
mov
insb
lahf
push
sbb
lcall
mov
aam
and
sbb
stos
jmp
loop
pop
mov
mov
out
pop
or
out
mov
mov
std
sbb
popa
stos
out
mov
mov
xor
popa
cmp
or
mov
cmpsb
scas
sbb
or
iret
fsubrs
mov
xor
and
mov
pop
leave
mov
paddb
call
imul
in
xor
std
cs
sbbl
mov
cmpb
call
mov
sub
idiv
sar
into
mov
xchg
jno
cmpsb
sbb
jns
shll
adc
add
cmpsl
ja
push
adc
mov
and
cwtl
dec
pop
jb
int3
xor
addr16
enter
cmc
daa
cmc
jnp
ja
test
test
roll
inc
push
ljmp
daa
cmc
and
pop
mov
movb
in
dec
push
pop
xor
in
rcrl
inc
cld
jns
xorb
inc
xchg
pop
fadds
mov
mov
sets
pop
pusha
inc
xor
jmp
jns
rcrb
mov
xor
ficoms
pop
adc
daa
inc
add
int3
add
add
add
jmp
nop
or
inc
roll
dec
iret
insb
int3
jns
cmc
test
hlt
test
int
cmp
xchg
fnstsw
cmp
jns
inc
pushf
test
in
xchg
xor
and
jnp
mov
jne
mov
sub
les
fstpl
sbb
int3
es
mov
test
jo
sub
movsl
cmp
pop
cmp
jb
cmpsb
sub
adc
daa
stos
adc
adc
fcmovnb
pop
push
test
dec
fstp
cmp
inc
inc
mull
les
sub
jmp
push
dec
decl
add
jns
shlb
inc
mov
jno
nop
lcall
loope
jg
pop
dec
and
fwait
or
xchg
adc
inc
sub
ljmp
or
add
push
stos
cmpl
sbb
or
pop
cmp
jmp
mov
mov
mov
sub
mov
add
sarl
sbb
es
leave
shll
stos
dec
fdivr
ficoms
iret
mov
push
mov
or
jge
popl
lods
xchg
add
sub
sub
ljmp
cmpb
inc
shl
pop
cld
cmp
pop
subb
adc
sub
pop
jo
jae
jg
dec
push
sub
imul
jns
inc
mov
mov
sti
sub
fxch
add
in
add
loop
stos
stc
jnp
xor
mov
pop
xchg
mov
pop
adc
cmp
dec
jl
lret
inc
pop
outsb
jo
dec
mov
dec
jbe
sti
xor
xchg
adc
stos
jecxz
jmp
pusha
rcll
cltd
and
lea
add
add
push
movsb
sub
outsl
and
xchg
idivl
push
add
mov
dec
aaa
testb
jns
jnp
cs
test
bound
and
stos
sbb
enter
xor
nop
adc
jg
and
shr
push
scas
jp
jp
addr16
daa
rcrb
scas
sbb
popf
mov
outsb
adc
pop
nop
outsl
pop
push
insl
lret
xchg
mov
sbb
cs
inc
syscall
loope
mov
pusha
xor
mov
dec
xorb
push
xlat
sub
or
pop
cmp
bound
fadd
in
pop
jbe
mov
push
test
xchg
mov
popf
or
dec
or
mov
lock
xor
push
inc
loop
xlat
adc
aas
xchg
sahf
in
sub
xchg
push
fmull
mov
je
mov
popf
daa
jbe
insl
xchg
and
push
in
in
lahf
rolb
lcall
xchg
nop
jbe
repz
xor
ds
cmpsb
xchg
xor
push
test
inc
addps
int3
in
subl
into
out
cmp
or
push
dec
ficomps
data16
inc
aaa
cmp
or
pop
test
fcoml
inc
rorb
lods
in
sbb
test
mov
inc
out
sub
sbb
test
popa
call
and
cmp
cmp
ficoml
xor
sub
sahf
cmp
mov
fdivrp
lret
cmpl
push
mov
push
aam
xor
ja
les
and
xchg
fyl2xp1
arpl
enter
les
and
dec
inc
pop
cmp
aaa
adc
and
pop
lahf
out
sub
outsl
aam
int3
cltd
adc
jne
add
scas
jne
cmpsb
xchg
jbe
pop
ret
in
inc
nop
cmp
arpl
daa
jne
in
and
out
mov
push
ds
sbb
sub
cs
jo
mov
and
out
scas
out
sbb
sbb
inc
mov
inc
sub
jae
and
leave
movsb
xchg
push
out
fcmovnbe
push
dec
xchg
push
into
mov
sbb
adcl
in
call
adc
sub
movsb
scas
nop
or
and
jno
scas
mov
sbb
push
and
adc
jl
jecxz
cmp
ret
lea
sbb
out
xchg
sbb
negb
xor
sbb
cmp
bound
inc
ljmp
in
addr16
adc
or
sbb
call
call
xor
aad
ds
addr16
int
or
test
mov
xor
scas
les
mov
bound
xor
call
add
add
xor
sub
fistpll
in
fs
sbb
push
jbe
stc
imul
push
mulb
mov
bound
pop
icebp
cmp
ret
ret
push
pop
or
pop
aad
push
dec
icebp
enter
dec
ficompl
aas
jg
out
push
sub
jecxz
mov
fisubl
jae
stc
in
pop
cmpsb
dec
xchg
xchg
lret
repnz
mov
decl
jb
popa
jns
in
adc
cmp
cli
or
jp
shrl
repz
cli
push
lahf
mov
and
insl
out
mov
xchg
negl
out
repz
sub
push
inc
jae
jmp
notl
popa
out
sahf
repz
adc
lds
enter
push
inc
add
insb
int3
out
aad
fwait
push
push
dec
pop
push
je
fstp
jbe
xchg
scas
ret
ror
fcmove
xchg
cli
pop
insb
rolb
fstps
push
lea
test
jmp
push
insb
iret
into
inc
jp
cmp
mov
push
dec
inc
into
cmp
mov
or
sub
clc
jmp
imul
jg
jae
or
outsb
std
rclb
pandn
lret
mov
inc
jbe
inc
outsb
or
push
rol
aad
ret
into
loopne
mov
addr16
nop
fidivrl
sbb
adc
cmp
jmp
add
or
adcl
mov
das
bound
neg
inc
mov
or
mov
cmp
push
jae
and
pusha
and
sub
imul
push
insb
bound
fldl
cmp
xchg
inc
jae
mov
mov
outsl
xchg
cmpsb
mov
push
mov
notb
pop
fwait
lret
lahf
ljmp
push
mov
repz
mov
into
fcoml
mov
pusha
pushf
inc
int3
adc
dec
pusha
stos
jns
loop
mov
mov
pop
mov
add
adc
scas
rolb
or
pusha
adc
mov
mov
iret
or
and
inc
outsl
orb
jmp
mov
push
popa
pop
and
or
cmc
pop
jno
fdivs
and
cmp
lea
shrl
scas
or
nop
lods
ret
cmc
dec
repz
jno
mov
leave
sub
imul
aad
and
sar
cmp
jg
aam
mov
ljmp
das
daa
pop
lret
xchg
xor
push
enter
xchg
std
sti
lods
mov
imul
push
lcall
std
mov
repz
dec
and
mov
mov
cmp
dec
fnop
out
xor
sbb
shlb
and
or
lea
jmp
ret
sub
jge
pop
cltd
popa
jg
push
bnd
push
imul
sbb
jg
fistps
std
jns
add
test
daa
repnz
xlat
lods
popf
outsb
cltd
and
lcall
cs
xchg
in
test
jl
sahf
mov
rclb
xor
or
or
iret
lock
pop
call
add
add
cmp
lock
ja
andl
jo
mov
xchg
aas
lret
ds
cmp
xchg
sti
or
pop
adc
rorb
pop
add
push
cmp
mov
mov
dec
in
adc
mov
test
pop
fildl
outsb
add
or
cmpsl
hlt
rorb
jns
xchg
cwtl
mov
add
sbb
dec
sub
cmpl
dec
pop
pushl
push
loope
std
or
cmc
sub
call
addl
mov
in
cmc
fnsave
push
gs
test
xchg
imul
clc
in
inc
call
movsb
mov
and
add
ds
lea
jge
sub
aam
dec
mov
add
jl
pop
mov
sub
out
in
lock
out
test
test
sarb
scas
dec
mov
inc
cmpsl
jns
push
push
movsb
shlb
pop
lcall
iret
sbb
inc
cmp
subb
stos
mov
jbe
loop
xchg
mov
mov
xor
xor
data16
cmpsl
inc
outsl
sub
lock
cmp
cmp
jne
xor
or
ret
mov
mov
sub
lods
icebp
inc
into
in
mov
or
push
scas
mov
and
repnz
shll
push
fdivrl
jae
jp
loope
outsb
shr
jbe
in
lods
mov
push
call
ret
xchg
ja
jns
adc
test
adc
pop
lahf
aam
dec
xor
out
aas
insb
ret
adc
xchg
faddl
imul
es
cli
outsb
or
sub
mov
rorl
dec
xchg
mov
lods
xor
dec
mov
out
in
inc
jmp
pop
shl
xor
dec
mov
mov
mov
sbb
xchg
test
pop
insl
mov
and
notb
xor
jno
imul
scas
mov
mov
cmp
adc
testl
cmp
mov
icebp
dec
subb
fnsave
sub
sbb
leave
mov
cmp
gs
nop
call
inc
ffreep
pop
cld
xchg
je
je
xor
xor
pop
mov
pushf
fninit
js
stos
lea
xchg
push
rcll
xchg
mov
add
jmp
leave
jmp
bound
jae
stc
add
inc
xchg
dec
inc
mov
in
or
test
daa
mov
pop
cmp
xor
sahf
jns
les
jmp
fdivl
daa
sbb
test
popf
xor
or
icebp
push
in
and
cmp
push
imul
pop
sub
sub
int3
and
jecxz
in
scas
adc
cmpsb
adc
mov
mov
aas
decb
jg
outsb
lea
subl
push
mov
xchg
es
ds
movsb
loop
ja
mov
mov
pushf
cmp
clc
pusha
daa
out
shlb
sbb
ret
ret
test
cmp
rclb
ja
loope
shll
call
and
add
push
dec
sub
adc
pop
cmp
imul
xor
cld
pushl
pop
dec
xor
loop
lds
and
outsl
cwtl
inc
dec
jae
jmp
or
subb
push
scas
mov
mov
insb
and
mov
push
inc
das
sbb
std
xchg
cmp
mov
or
and
inc
icebp
ret
enter
lods
cmpsl
sbbl
data16
in
out
pop
pop
sahf
mov
xor
repnz
jne
cmp
xor
dec
popa
jns
mov
rcrl
push
mov
mov
xchg
jnp
add
cs
inc
fmul
and
xorl
in
cmp
dec
and
dec
rclb
fimull
sub
mov
jne
sbb
xchg
inc
stos
pop
daa
cmp
out
mov
dec
mov
faddl
mov
mov
xchg
dec
jnp
clc
rcll
js
ljmp
test
repnz
jae
pop
mov
lahf
mov
nop
cli
inc
jne
mov
fld
sbb
sub
xchg
and
mov
mov
push
add
sbb
mov
sbb
sub
rolb
hlt
out
xchg
stc
sub
mov
pop
mov
mov
imul
repnz
mov
xchg
out
sub
mov
push
clc
sbb
in
movsl
xchg
out
inc
gs
adc
call
loop
repz
pop
pop
cli
cmp
outsb
sahf
ds
or
pop
push
popf
loop
dec
dec
mov
outsl
xor
cmp
push
roll
or
jle
test
push
fwait
add
dec
sub
dec
ds
std
call
and
push
scas
shrl
rcrb
jns
xor
sbb
xchg
sti
pop
push
adcl
lea
sub
test
sbb
loopne
sbb
popf
sub
icebp
enter
or
dec
sub
ret
or
mov
cmp
test
mov
into
lcall
cmp
lahf
mov
stos
mov
sub
aaa
fildl
das
not
cld
scas
jb
pushf
popa
nop
inc
jg
mov
jne
test
scas
mov
xchg
fsubr
mov
mov
xor
xchg
sub
out
xor
xchg
sub
fs
mov
push
mov
rcrl
ss
push
pop
xor
xlat
pop
or
ljmp
in
insl
aad
cltd
rorb
int3
add
mov
xchg
push
lret
jmp
sub
sbb
pushf
xorl
jbe
rorb
std
dec
scas
or
and
xchg
es
mov
cltd
inc
xchg
jle
ja
inc
fnstcw
imul
dec
cli
outsl
cld
inc
in
and
dec
cli
adc
popf
in
icebp
cmp
sub
test
insl
and
cmp
dec
nop
mov
and
jp
jle
imul
sbb
popa
pop
cld
cmp
ficoms
jbe
orb
sarl
inc
push
js
add
jl
cltd
pop
aam
ljmp
les
jecxz
sti
cmp
call
mov
sbb
aad
mov
aaa
jbe
sub
adc
and
mov
cmpsl
mov
ss
ja
adc
pop
xchg
cld
cmp
out
mov
clc
sbb
out
punpckhdq
xchg
mov
clc
push
push
fistpl
xchg
out
sub
subb
push
cmp
mov
sub
les
xchg
orb
mov
das
aad
or
shlb
insb
in
push
jg
mov
pop
mov
repz
pusha
jp
adc
sub
pop
fcmovb
daa
test
add
ret
add
xchg
cli
xor
fs
sub
les
mov
mov
cmpb
mov
add
or
xchg
dec
test
out
test
jl
cli
jnp
jle
int
into
fadds
xchg
inc
or
int3
xchg
in
das
pop
inc
out
mov
sbb
jno
add
xchg
mov
fwait
add
icebp
aas
in
cmp
jb
into
lret
out
or
sub
outsl
push
in
shl
je
inc
sub
mov
pop
mov
cs
lret
sarb
sbb
addr16
test
sub
stc
mov
mov
sub
push
push
and
mov
into
jbe
sub
jecxz
cli
es
mov
jecxz
jmp
sbb
mov
mov
cld
push
mov
cmc
movsl
insb
push
icebp
pop
mov
clc
dec
fnstsw
sbb
jle
dec
or
xchg
jnp
subb
leave
dec
out
movsl
daa
cmp
jmp
fsubs
adc
push
dec
jo
mov
xchg
mov
add
add
jno
push
ljmp
or
testb
jmp
jae
cmp
out
jnp
jb
jnp
insl
scas
cmpsl
mov
jge
dec
pop
sbb
sar
repz
orl
push
aam
sbb
in
xchg
and
jnp
clc
cmp
ret
pop
scas
xor
add
ret
sub
repnz
cwtl
inc
fisttpll
ss
loope
outsl
popf
mov
out
xchg
mov
inc
push
std
or
cmp
xor
sbb
lea
mov
lahf
sbb
jno
mov
insl
add
sbb
mov
lods
ffree
lret
leave
xor
or
add
loopne
and
fstl
xchg
push
push
jmp
pop
repnz
xor
jg
rolb
push
pop
cmp
lods
scas
or
dec
adc
call
mov
push
sub
and
fsubs
mov
shll
je
in
mov
imul
adc
xchg
icebp
lret
rol
push
inc
cmc
cmpsb
les
fs
das
push
mov
and
ficompl
mov
fldenv
daa
aam
dec
inc
fimuls
std
or
sub
fs
xchg
jbe
pop
fistpll
xor
pop
mov
xor
adc
ja
sub
lret
frstor
mov
imul
add
sub
orb
sysret
add
or
popf
daa
ret
add
add
out
or
fistpll
loope
ret
mov
call
pushf
mov
aam
mov
fstpt
into
das
mov
pop
pcmpgtd
pop
jb
ret
lods
gs
cwtl
clc
xor
mov
push
test
outsl
aas
repz
push
jns
loop
clc
cltd
or
in
mov
pop
gs
cmp
xchg
sbb
xchg
pop
sbb
push
sbb
lock
arpl
stos
dec
loop
shll
or
mov
add
loopne
fcmovnb
fnstcw
test
adc
dec
idivl
fcoml
in
inc
cmp
pop
sti
add
hlt
jbe
xchg
lea
adc
sar
mov
cmp
jno
mov
popf
sbb
in
cmp
add
clc
in
scas
jns
xchg
sub
mov
mov
sub
xor
mov
out
xchg
cmp
addb
adc
push
cli
jmp
push
push
jge
lret
mov
xor
cmpsb
mov
push
outsb
pop
std
out
scas
pop
jmp
cli
push
cmp
pop
fldt
sahf
pop
lcall
push
push
jg
jne
jbe
xor
sbb
push
fwait
sub
cwtl
fsubs
cmp
cmp
and
jno
adc
add
mov
push
mov
movsl
jae
push
dec
push
cmp
dec
or
out
adc
and
jge
scas
repz
add
les
sahf
lea
notb
stos
sub
test
hlt
ljmp
push
mov
lcall
inc
dec
ffreep
pop
pop
jl
cs
clc
outsl
das
dec
lods
adc
lea
pop
jmp
xchg
push
inc
lock
bound
pop
push
mov
je
sub
or
cmc
imul
mov
sbb
adc
mov
call
sysret
in
out
fs
and
mov
hlt
cs
or
insb
into
jl
xor
les
and
imul
stc
sar
mov
push
xchg
mov
push
dec
inc
push
adc
lahf
loopne
dec
adc
add
popl
adc
pop
push
xor
shll
imul
pop
movsl
insl
or
data16
dec
push
cmp
add
xlat
sub
mov
cwtl
mov
pop
mov
add
xor
lods
testl
pop
mov
cmpsb
les
icebp
inc
push
pop
mov
and
sub
inc
pop
fistl
jbe
xchg
cmp
xor
mov
es
js
xlat
gs
popl
sbb
cmc
outsl
push
push
jecxz
cmpsl
das
jo
call
pop
jge
pop
rcll
fldl
clc
outsb
addb
xor
in
in
addl
adc
or
push
gs
jge
pop
out
mov
pushf
icebp
fpatan
xchg
idivb
sqrtps
imul
cwtl
in
sub
sub
adcl
popa
cwtl
push
mov
xor
push
scas
sbb
or
and
arpl
fsubrs
std
enter
stos
pop
stc
or
aas
xorb
sbb
bound
loope
and
xchg
nop
icebp
sbb
dec
jo
push
imul
adc
lock
mov
and
cli
dec
or
in
jge
mov
mov
push
or
sbb
lods
jg,pt
call
xchg
xchg
sub
outsl
imul
addl
dec
mov
pop
std
negb
add
inc
aam
or
add
nop
outsb
add
mov
or
lret
jg
icebp
mov
rcrb
push
inc
mov
pop
insb
lret
clc
call
xor
pop
movsb
xor
xor
jmp
mov
mov
outsl
push
ror
add
pop
sbb
pusha
adc
jp
push
sub
je
js
loopne
imul
mov
icebp
push
roll
clc
fwait
pop
es
xchg
dec
sbb
xor
add
mov
mov
xchg
imul
ja
fadds
int3
and
jne
movsl
xor
xchg
push
xchg
daa
or
into
cltd
mov
in
aad
cmp
mov
jl
jbe
cmpsl
inc
xor
add
sbb
mov
dec
test
stos
xor
sarl
pop
jp
frstor
test
push
adc
jl
jg
adcb
das
jno
ja
lods
ficoms
or
cmc
lods
loop
sub
cltd
sbb
fnstsw
jle
sub
test
dec
ficoml
push
arpl
ret
movsl
sub
lahf
cmp
dec
adc
push
inc
mov
pop
sub
icebp
or
or
fsubs
fildl
sbb
out
push
repz
enter
je
repnz
scas
and
out
push
jmp
jle
inc
jbe
cmp
ror
sub
jle
push
push
xchg
mov
xor
pop
mov
lea
xor
sub
loope
push
push
imul
mov
push
fsubrs
xor
filds
jnp
cmpsb
aam
mov
repz
xchg
mov
nop
jle
xor
adc
mov
rcrl
xchg
enter
je
push
adc
scas
push
xor
push
clc
cmpsb
xchg
and
xchg
fnstenv
aas
cmp
add
adc
mov
pop
loopne
inc
outsb
lock
scas
xchg
xchg
pop
mov
leave
jg
sbb
out
jbe
lahf
mov
inc
in
popa
loopne
je
cltd
inc
sub
sbb
sub
jbe
sbb
or
les
sub
push
mov
cmp
mov
add
pop
lcall
out
jmp
jb
cmpb
and
call
adcl
in
push
xor
push
pop
test
mov
xchg
jb
ljmp
xchg
xchg
movsl
mov
out
sub
xchg
push
faddl
andl
ljmp
shlb
out
jbe
jp
jl
test
mov
jl
jns
mov
pop
mov
scas
movsl
push
insl
mov
cmp
imull
das
mov
xchg
jge
adc
aam
mov
pop
scas
jno
or
jo
jno
cmp
add
or
fstp
inc
scas
addl
icebp
arpl
mov
jae
xor
or
pop
mov
and
sbb
cs
mov
push
fwait
lcall
adc
push
out
into
sub
gs
pop
mov
out
fwait
jp
data16
pop
setl
mov
jo
loop
mov
or
int
ja
mov
rcrb
in
das
and
push
sahf
xor
jne
pushf
xchg
mov
jmp
mov
rolb
pop
push
lea
fnstenv
xchg
into
jg
push
scas
lods
pop
xchg
inc
adc
fdivl
mov
packsswb
cmp
adc
sbb
cmpsb
dec
loope
dec
sahf
mov
add
loope
insl
xchg
cmp
sbb
aad
scas
inc
test
pop
cmc
ret
sub
rcrl
dec
ret
inc
and
imul
cmpl
xchg
sub
inc
insl
jg
fcomps
jb
es
dec
in
sub
call
xor
rcll
in
aad
add
pop
cmpsl
aam
pop
dec
cmp
dec
cmpsb
subb
lret
sahf
es
add
adc
mov
jbe
push
and
xchg
adc
pop
lcall
cwtl
hlt
inc
lea
mov
xor
push
push
push
and
clc
fimull
mov
icebp
mov
mov
pop
sub
movsl
mov
lret
in
sbb
sbb
rcl
cmp
and
xchg
cmpsb
xchg
mov
cmp
ljmp
fs
mov
mov
lea
fwait
sbb
nop
xchg
inc
push
and
dec
loop
pop
sbb
and
fldcw
sub
mov
mov
rcll
lods
jmp
cmp
xor
dec
xor
loop
clc
sti
mov
xor
sahf
test
stc
sbb
fistpll
inc
daa
xor
addr16
call
iret
ds
xchg
mov
jno
adc
pop
sbb
test
fstpl
push
cmp
sarl
jb
mov
cmp
inc
jo
mov
or
cltd
leave
push
adc
add
pop
mov
dec
push
adc
ss
gs
sub
popf
pop
xlat
sub
mov
and
jbe
dec
mov
imul
cld
xor
cli
popf
stc
mov
mov
and
push
cwtl
push
mov
sub
and
dec
movsb
mov
pop
lret
and
adc
aaa
cs
imul
pop
lods
in
xor
stc
into
shlb
fmuls
pushf
jae
in
or
inc
fwait
pop
addr16
push
addr16
stos
pushf
loope
sub
in
in
loopne
jae
pushf
test
sbb
mov
jge
dec
mov
and
adc
mov
xchg
sahf
add
dec
mov
outsl
adc
icebp
notl
pop
and
enter
int
or
iret
mov
lret
jecxz
loop
push
icebp
iret
push
mov
lods
sub
pop
inc
sub
lods
in
push
push
xchg
aam
popa
sub
aad
jbe
pop
xor
and
icebp
add
fbld
leave
or
sub
inc
dec
mov
orl
mov
jno
or
xchg
xchg
mov
sbb
or
mov
dec
or
pop
scas
sbb
mov
pop
notl
xor
xlat
dec
adc
sub
push
scas
shll
ljmp
cltd
cltd
daa
pop
and
das
sub
mov
leave
lret
xchg
popa
outsb
add
addr16
vucomisd
push
int
pop
sbb
jp
addb
jo
jo
or
or
jae
mov
or
and
addr16
push
arpl
cld
sbb
or
movsb
sub
pop
jns
mov
mov
dec
xor
xlat
incl
push
xor
mov
cmp
push
subl
inc
xor
push
or
adc
orl
adc
or
addl
adc
adc
adc
cs
andb
adc
sbb
xchg
mov
fwait
or
lods
es
outsb
imul
lea
rclb
imul
fnstcw
xchg
cmp
in
xchg
fcoms
xchg
sub
add
pop
aas
pop
mov
aas
push
sbb
jnp
and
jno
lcall
xchg
in
int
mov
fldt
lret
cli
pop
fwait
push
pop
adc
xlat
mov
arpl
test
rcll
imul
or
sahf
push
mov
addr16
imul
mov
xchg
ficoml
pop
addr16
xchg
or
mov
dec
mov
lea
cmp
mov
mov
loopne
push
mov
aam
xchg
add
fmul
inc
jg
cmpsl
mov
ljmp
lods
lret
test
repz
jle
iret
push
dec
lods
push
or
xor
and
add
pusha
xor
mov
fsin
pop
daa
mov
push
mov
fildll
pop
aam
test
xchg
dec
adc
outsb
sub
arpl
pop
sub
outsl
jbe
ss
push
or
fnstsw
mov
not
inc
push
jmp
fwait
rcl
adc
pop
adc
mov
sarb
inc
faddl
jns
jecxz
mov
fsubrp
xor
les
jl
int
xor
repz
lods
and
imul
jecxz
aas
les
out
movsb
aam
fdivrl
push
hlt
inc
xlat
jnp
cmp
cmpsb
jmp
repz
cs
jns
jnp
mov
das
push
adc
mov
out
sub
jecxz
scas
arpl
jne
shlb
push
cmpsl
aaa
jo
sbb
xchg
jmp
cmp
sbb
jo
pop
pushf
enter
fstl
call
fdivs
or
aad
sub
jmp
test
out
in
rorl
mov
ret
inc
outsl
dec
out
mov
sbb
pusha
test
stos
mov
sarl
mov
adc
or
mov
call
push
sub
xor
xchg
aam
cmp
cmp
movsl
push
lcall
jmp
cmp
dec
cli
ljmp
lahf
cmp
inc
flds
inc
cmp
push
fistl
jae
xchg
jge
sti
mov
dec
dec
sbb
adc
les
push
and
ja
add
sub
pop
xchg
test
adc
int3
xchg
and
cmp
mov
rcr
sbb
inc
mov
mov
pop
mov
jo
aad
ljmp
aam
scas
scas
xchg
fcmovbe
in
add
adc
fsubs
xlat
pop
add
and
cld
dec
fisubrs
int3
das
or
dec
aad
dec
jg
sub
out
push
loop
pop
lcall
lcall
in
inc
lahf
adc
sbb
inc
inc
fisubrs
cmpsb
out
cmp
sbb
cvtps2pd
xchg
cmc
jmp
jae
fidivrs
out
test
and
js
lahf
sbb
dec
jne
push
mov
and
les
mov
mov
mov
mov
jno
mov
sub
hlt
lds
push
adc
shrb
push
add
cwtl
lcall
sbb
popf
repz
clc
enter
ret
test
or
push
rcrb
dec
sub
jbe
loop
add
cmp
dec
ja
icebp
lods
mov
or
adc
inc
push
xor
fadds
rclb
push
mov
mov
cmpsl
testb
and
lret
pushf
sbb
push
pop
xchg
push
adc
dec
scas
add
std
dec
lock
addr16
mov
fsubl
xchg
mov
fwait
xor
rol
roll
pusha
les
mov
xor
dec
sbb
sub
adc
or
dec
inc
es
jns
pop
out
inc
sahf
or
push
xchg
push
nop
xor
lcall
add
adc
jnp
push
stos
fwait
lock
rcl
aam
mov
cli
outsw
stos
mov
xchg
ffree
add
mov
dec
sub
outsb
and
sbb
mov
repz
in
pop
or
cmp
jbe
mov
and
jecxz
dec
aam
jg
jle
in
in
lcall
nop
rclb
andl
xchg
mov
sbb
js
inc
in
rcl
cwtl
rclb
arpl
flds
push
jecxz
daa
out
fwait
dec
out
push
xor
icebp
cmc
mov
inc
pop
sbb
jge
lcall
lea
jmp
shr
orb
inc
lods
lea
mov
cmp
inc
enter
bound
cmp
mov
gs
pop
jb
in
arpl
inc
cltd
dec
insb
mov
enter
sbb
mov
outsb
into
cmp
out
dec
call
jp
cli
sub
loop
mov
outsl
xchg
push
scas
stc
sbb
test
xor
shlb
mov
or
adc
bound
mov
popa
xchg
push
sub
int
daa
adc
mov
fistpll
push
call
and
iret
inc
xlat
mov
loopne
lea
and
gs
insl
push
sub
pop
pop
pop
out
lret
dec
mov
imul
mov
xchg
scas
testl
ret
pop
inc
incb
addr16
pop
add
rclb
lcall
ds
sahf
adcb
lock
jbe
scas
jne
cld
test
leave
inc
pop
aam
ljmp
cmp
push
pop
ja
push
jo
and
fstl
inc
or
dec
out
mov
insb
pusha
ss
inc
mov
in
inc
jae
cmpsb
xlat
hlt
xchg
das
sbb
mov
gs
in
fs
fcoms
test
mov
leave
pop
push
stc
sub
lock
imul
pushf
and
cmpsb
xor
mov
inc
adc
lahf
sbb
test
addb
jp
adc
pushf
clc
cwtl
cwtl
loop
mov
push
aam
xor
jge
sbb
mov
add
test
mov
cmc
iret
inc
fmul
pop
frstor
fadds
movsb
daa
add
out
jg
sub
push
push
cmp
push
jl
fcoms
je
mov
sbb
outsl
add
ret
sbb
cwtl
adc
lahf
bound
pop
push
outsb
out
sbb
push
aad
sub
mov
insl
xsave
ret
lods
adc
aam
push
fistl
and
enter
dec
ja
icebp
dec
shrb
aaa
and
adc
and
data16
pop
xor
negb
cmc
mov
xorl
inc
lods
test
mov
arpl
adc
xchg
fs
mov
pop
mov
mov
mov
sarl
repz
mov
mov
xchg
mov
push
cwtl
movsl
sbb
pop
dec
aad
rcrl
jae
sbb
icebp
daa
mov
mov
or
out
test
cmc
sbb
lds
popf
push
push
lahf
fucom
push
in
inc
inc
stos
mov
inc
sub
sbb
mov
xchg
lods
push
xor
xor
mov
mov
dec
cmp
push
push
xor
jmp
push
dec
jb
jmp
mov
ret
pop
pop
inc
cld
lods
sub
cmc
das
stc
adcl
sbb
scas
mov
mov
into
xchg
push
aas
iret
push
jg
dec
xlat
xchg
aaa
outsb
mov
mov
fisubl
lock
sbb
dec
testl
inc
push
daa
shrl
lcall
in
out
or
dec
out
subl
mov
mov
movsl
lds
adc
fdivrp
pusha
adc
add
mov
pop
loope
adc
cmpsb
filds
stos
add
adc
sbb
enter
lea
rorb
xlat
fidivs
pusha
sti
mov
out
bound
rorl
stos
xlat
test
sahf
sub
pop
icebp
dec
mov
ret
mov
fwait
rclb
pop
sub
mov
dec
aam
imul
dec
xor
mov
orb
xchg
adc
popa
cmc
ds
pop
inc
jg
and
movsb
pop
dec
fcmovu
adc
jbe
aam
stc
jnp
fists
les
jp
into
mov
lahf
movups
push
fldt
movsl
ret
pop
in
dec
dec
into
add
and
and
sub
psllq
lods
mov
mov
arpl
cs
push
int
popf
push
mov
gs
add
inc
xchg
inc
fadds
and
inc
inc
xchg
outsl
leave
push
inc
dec
frstor
insb
mov
imul
inc
cmp
fcompl
xchg
cld
movsl
sbb
xor
jnp
int3
es
in
sbbb
sbb
div
inc
mov
xor
sbb
push
inc
and
inc
cmpsb
sbb
and
pusha
add
push
inc
add
cmp
add
or
cmpl
ja
or
xchg
ja
xor
push
and
mov
pop
dec
cmp
sahf
loopne
gs
shrl
fsubrs
idiv
mov
xchg
or
mov
cmp
cmc
in
cmp
sub
shl
or
sbb
push
fcoms
int3
fs
movsl
jecxz
iret
enter
lcall
je
andb
rolb
mov
mov
sub
jne
test
or
pop
mov
adc
or
test
jp
mov
mov
jb
aad
std
xor
pop
nop
mov
hlt
aas
inc
inc
std
iret
xor
lock
lahf
in
sti
jae
cli
int
fwait
xor
test
xchg
in
clc
cmpsb
pusha
cli
pop
stos
mov
mov
loop
mov
in
mov
repnz
and
jo
lea
mov
cmpsl
add
out
aad
xchg
and
cmp
mov
out
enter
xor
lods
rcrl
fisubs
cltd
ds
scas
mov
popa
push
push
pop
int
lret
mov
aad
xchg
sub
jno
mov
adc
mov
jo
sar
js
fisttpll
inc
rcll
cld
stc
mov
add
insb
das
outsl
fimuls
ja
cli
hlt
mov
scas
lods
sbb
push
push
pop
adc
enter
adc
pop
loopne
scas
fildl
fadd
push
ja
push
aam
add
in
jl
iret
cmp
cmp
sbb
cld
pop
jg
sub
es
jns
add
push
mov
adc
shl
sahf
cmc
ret
ljmp
stos
loopne
xor
adc
cmpsl
addr16
xorl
fsubrl
sub
push
shll
mov
xor
xchg
out
fs
aad
cmp
jg
jne
pop
ja
lea
add
pop
pop
out
lea
xchg
cmp
mov
or
or
lahf
add
sbb
stos
stc
xlat
push
adc
xchg
push
xchg
sbb
lcall
in
bound
xchg
pop
pop
fnstenv
xor
dec
or
in
in
mov
daa
push
into
inc
cld
jmp
cmp
out
cmc
stos
pop
scas
ficoml
xchg
xor
je
cmp
xchg
xchg
push
mov
mov
cmc
fwait
in
jno
mov
shrb
in
ss
jnp
addl
jb
xor
sbb
stos
jae
outsb
sti
xor
xor
pop
call
adc
or
inc
dec
xlat
sbb
cmp
inc
stos
sbb
push
shll
ds
sub
shrl
bound
xchg
incl
lahf
int
icebp
xor
or
into
xor
or
gs
pop
popa
dec
jecxz
out
roll
stos
mov
es
leave
in
or
test
and
repz
movsb
test
loope
aam
jg
stos
pop
lcall
jmp
in
insb
pop
pop
inc
leave
in
inc
fbld
cld
inc
rclb
sti
pop
mov
mov
sbb
lods
orl
push
scas
inc
add
pop
stos
add
jno
sarb
xor
jbe
scas
xor
shlb
inc
or
add
cmp
mov
lock
pop
lahf
cmp
push
adc
gs
adc
sub
cmpsl
scas
push
aas
push
lods
in
push
ss
or
imul
mov
test
cs
scas
adc
mov
inc
xchg
xchg
popa
xor
or
xchg
daa
pop
inc
mov
int
push
or
in
mov
mov
mov
lea
sti
daa
les
pop
xchg
mov
pop
inc
dec
int
fildl
lahf
inc
or
xchg
mov
inc
imul
fcomip
xchg
fwait
aam
movsl
jecxz
aam
sub
je
pop
rclb
pop
fcomps
pusha
pop
jbe
pushf
insl
loopne
outsb
dec
call
push
mov
sbb
js
add
mov
adc
mov
cltd
test
pop
divb
xchg
sub
repnz
pop
frstor
pop
cvtps2pi
pop
cld
ja
gs
xor
outsb
add
mov
lahf
rorl
int
adc
icebp
test
loop
cmp
xchg
cmpsl
push
lret
lea
xor
push
xchg
jl
inc
sub
xchg
inc
jmp
pusha
inc
in
lock
rcl
push
popa
jp
jno
in
div
add
test
sbb
scas
movsl
rcll
js
je
sub
jmp
andps
sub
aam
push
fldcw
sub
dec
push
hlt
push
mov
sub
inc
das
cmpsb
inc
sub
das
shll
add
cmp
pop
adc
cld
je
or
add
inc
es
mov
fimuls
sub
and
xchg
cwtl
push
lock
xor
sub
push
jae
cmp
int
scas
outsb
pop
inc
lea
scas
or
call
js
imul
cvtps2pd
push
adc
pop
testl
adc
inc
dec
adc
data16
mov
dec
mov
adc
xor
xor
fisttpll
scas
repnz
es
call
push
sub
imul
sbb
sbb
mov
out
pop
fistpll
sti
add
adc
pop
mov
xchg
sbb
sbb
scas
cmp
popa
test
mov
sub
sbb
repnz
popf
jno
jno
loopne
pop
stos
or
mov
jge
lea
js
sub
cmp
movsl
xchg
rorb
aam
popl
mov
mov
fdivrs
push
inc
lea
dec
jecxz
pop
sub
cld
or
ds
xchg
cli
push
push
dec
cli
adc
int
ds
cmpsb
fimuls
idivb
cmp
mov
repz
orb
cmc
mov
sub
xorb
pop
xor
jb
leave
daa
dec
movsb
mov
repz
mov
mov
out
mov
sbb
mov
add
hlt
add
mov
pop
add
int3
cli
ficompl
adc
jne
sub
bound
jno
adc
cwtl
cmc
lcall
in
dec
daa
call
into
int3
add
mov
pop
aaa
or
jle
mov
imul
and
ljmp
int3
fsub
rcll
mov
mov
lret
icebp
and
movsb
add
into
movsb
jmp
jl
cmp
and
xor
cld
pop
shll
aaa
sbb
stc
adc
mov
and
cs
ja
dec
push
sbb
lret
push
dec
cwtl
jns
stc
cmp
mov
imul
cmp
lds
push
arpl
je
and
aas
imul
fdiv
inc
int3
cmp
mov
idivb
cmpsl
adc
xchg
les
lea
xchg
xchg
dec
cli
push
enter
lahf
out
and
rcl
aam
jo
mov
test
sub
int
mov
sbb
aaa
pop
movsl
xchg
mov
shlb
lds
lea
jno
outsb
es
and
mov
das
fucom
fildl
out
fisttpl
mov
and
shl
mov
pop
andl
push
nop
dec
rol
cld
leave
ds
xchg
pop
inc
jns
or
xor
fsubrp
addr16
movsl
icebp
cmpl
mov
andl
add
pop
xchg
jmp
leave
add
std
enter
outsl
fmuls
mov
data16
and
popa
jno
or
stc
cld
lock
pcmpeqb
sbb
xchg
mov
int3
pop
push
fdiv
pop
dec
lahf
or
stc
add
popa
jmp
cmp
pusha
outsb
jecxz
mov
scas
inc
das
inc
or
popf
subb
fwait
cs
fstp
sbbl
out
sub
or
push
and
mov
jne
push
cmp
push
call
clc
scas
lock
adc
fbld
cmp
push
daa
add
mov
ljmp
mov
nop
insb
in
fists
rcl
push
test
ja
pop
jbe
dec
push
cmp
in
sub
aad
cli
xor
testb
sbb
movsb
sar
adc
out
mov
or
jbe
or
xorb
inc
dec
int3
pop
jne
addr16
mov
sarl
repnz
sub
dec
gs
push
pusha
fxch
subb
out
add
jnp
mov
icebp
push
popf
hlt
cmpsb
mov
push
push
cli
push
rcl
addr16
cmpsb
lds
inc
imul
loop
cmpsb
mov
dec
mov
xor
pop
push
pop
or
int
test
mov
cmpsl
mov
and
leave
mov
and
sub
fs
outsb
ljmp
enter
and
xor
jae
lods
sbb
lods
or
inc
aas
pop
lds
mov
jl
and
sbb
iret
daa
std
je
cmp
pop
in
repz
inc
adc
push
jle
lahf
or
cwtl
cmp
sub
out
mov
int3
cmp
out
nop
push
dec
aam
mov
das
out
jns
cs
sbb
call
les
inc
mov
lcall
jo
mov
dec
dec
jno
in
add
ljmp
jns
xor
out
or
push
sub
stos
call
test
in
sub
add
fists
xchg
push
xchg
cmp
out
jecxz
push
mov
sahf
mov
cwtl
mov
push
aad
fcoms
add
ja
and
call
das
inc
and
jbe
pop
mov
adc
loop
mov
dec
cmp
mov
icebp
adc
mov
ja
nop
mov
push
cmp
insb
test
xor
daa
pop
lret
or
adc
and
pop
inc
fs
add
sub
das
inc
push
outsb
sbb
movsb
dec
and
test
inc
jne
or
jg
jmp
and
mov
movl
cli
pop
sbb
mov
push
push
fs
shlb
jo
cmp
mov
int3
out
stc
rorb
lcall
pop
xchg
add
or
mov
push
shl
outsb
dec
mov
and
enter
cmp
push
imul
mov
xor
inc
push
aaa
outsb
pop
movsb
inc
aaa
jno
xorb
adc
cmpsb
jl
pushf
push
out
adc
fdivrs
adc
jge
das
sub
xor
jnp
adc
dec
idivb
fiadds
mov
sahf
dec
mov
mov
enter
aam
xchg
mov
cwtl
ss
pop
fsubrs
lcall
movsb
ljmp
stc
lcall
in
scas
adc
lret
mov
xchg
fcomi
shrl
xor
notl
jo
jp
and
mov
adc
sbb
add
cwtl
mov
jg
mov
sub
inc
neg
popa
fisttpl
dec
jmp
sub
jns
dec
cmp
inc
arpl
pop
inc
cltd
and
mull
sub
or
aam
mov
bound
ja
jle
add
xchg
cmp
outsl
adc
popf
pop
cltd
xlat
daa
repz
mov
sbb
inc
fisttpl
mov
cmp
ret
pushf
ret
and
sub
out
push
lahf
inc
int3
or
stos
push
out
cmp
and
push
es
sti
cmpb
lods
jl
cmc
mov
call
mov
dec
int3
cmp
mov
dec
imul
inc
ret
popf
mov
insl
dec
sub
andl
aam
orl
fidivrl
jl
and
adc
or
cmc
adcb
push
hlt
imul
or
pop
sub
in
test
je
sbb
pushf
adc
mov
call
pop
aaa
dec
hlt
bound
lcall
sbb
mov
or
dec
add
cmpsb
jbe
xchg
sahf
mov
mov
repz
out
es
push
gs
pop
add
loope
cmc
push
and
ja
sbb
insb
mov
pop
pop
rcr
mov
jnp
adc
icebp
or
sbb
test
pop
arpl
bnd
fdivrs
push
or
cmpsl
test
sbb
dec
dec
scas
add
dec
inc
jmp
or
fdivrl
mov
stc
sti
xor
mov
aaa
mov
scas
mov
push
and
out
jge
fiadds
and
int
or
call
adc
push
jp
cltd
dec
std
neg
inc
mov
cmpsl
pop
loop
mov
bound
repnz
or
dec
xor
xchg
dec
xor
jl
cwtl
pop
vmptrld
add
iret
in
mov
enter
fs
mov
leave
push
push
add
enter
mov
cmp
jb
pop
sbb
jns
add
mov
mov
push
mov
das
mov
mov
cwtl
aas
sub
out
and
addr16
cmpsl
adc
icebp
sub
inc
or
inc
ret
call
sub
pop
inc
out
insb
mov
xor
aaa
addr16
das
cli
fildll
pop
mov
gs
clc
sub
lds
inc
roll
add
jp
mov
jb
pop
cmpsl
dec
out
or
call
sub
test
and
mov
pop
cwtl
add
mov
mov
add
or
nop
stos
aas
and
mov
negb
test
xchg
ja
mov
sub
fstl
cltd
or
inc
xor
cld
cmp
gs
mov
int3
sub
hlt
and
jae
mov
inc
xchg
loopne
pop
mov
popa
cmp
out
pop
adc
iret
mov
fbstp
jbe
mov
pop
fstps
jl
xchg
and
pushf
xlat
fistl
mov
xchg
mov
shll
pop
jb
xchg
sbb
je
in
jne
enter
jge
cmp
jmp
pop
aas
test
arpl
andb
ss
int
add
mov
repz
cmp
sbb
stos
arpl
jo
loope
insb
leave
int3
ja
push
daa
sbb
lock
mov
pushf
in
addr16
ficoms
mov
aas
xchg
lods
scas
out
or
ret
jmp
pop
fdiv
shll
pop
jmp
int3
xchg
push
sahf
and
fcmove
imul
pop
mov
mov
mov
cld
jl
pushw
js
or
imul
leave
movsl
cmpsb
pop
lock
mov
xor
mov
push
mov
gs
or
xchg
cmp
lahf
adc
and
in
stc
es
sub
pop
test
lods
bound
sbb
fstl
xlat
and
dec
and
jg
out
cld
mov
notb
nop
movsb
out
cmp
jne
mov
pop
lock
popf
xchg
sbb
dec
push
std
mov
lret
xchg
scas
aaa
pushf
pop
inc
jg
or
or
clc
or
add
sub
rolb
outsl
pop
sub
inc
and
pop
mov
push
jmp
sub
cli
dec
dec
iret
arpl
stos
jp
out
into
cmp
jno
jl
loope
cmp
out
leave
repz
pushl
push
xchg
fnstcw
adc
mov
mov
movsb
dec
hlt
xchg
pop
inc
cmp
enter
enter
lahf
pop
and
sbb
ret
in
pop
push
test
sbb
or
mov
cmp
out
sbb
inc
push
aaa
ja
xchg
sbb
xlat
idivb
and
cmp
fbld
inc
fprem
adc
shr
popf
mov
adc
ret
pop
scas
inc
sub
dec
sbb
jno
data16
cli
inc
ret
outsb
mov
inc
inc
jne
xor
xor
ljmp
xlat
jl
push
jmp
mov
std
cmp
fsubrl
dec
inc
cwtl
xor
sbb
jmp
xchg
andl
and
sbb
push
mov
lods
and
ret
xchg
stos
lcall
jbe
movsl
repz
pop
sub
add
aad
pop
imul
adc
repz
ffree
add
mov
mov
enter
dec
push
cmp
loopne
lods
mov
lods
repz
jle
bound
dec
shrl
or
sbb
pusha
dec
fdivs
sub
stc
imul
out
mov
ja
fwait
mov
push
bound
outsl
fxch
addb
mov
jo
sub
shrl
jbe
cmp
or
and
jnp
dec
test
aaa
mull
je
std
in
and
push
lds
and
sbbb
mov
pop
mov
mov
pop
mull
xor
dec
rcr
pop
std
addr16
jns
aaa
mov
xchg
dec
push
shlb
mov
std
push
mov
fcmovb
mov
rcr
bound
xor
dec
icebp
sbb
aad
data16
pop
loope
cwtl
jge
std
ja
cmp
in
ljmp
les
pop
add
push
push
adc
enter
sbbb
shufps
adc
xor
jb
iret
mov
clc
adc
mov
xor
je
imul
cmpsb
repz
out
sub
add
sbb
xor
mul
mov
adc
and
out
std
jge
jae
inc
out
negl
out
bound
sbb
add
jg
call
pop
mov
push
sti
lds
push
cmp
js
fwait
hlt
cmpsb
pushf
pop
in
iret
icebp
int
clc
outsl
or
xor
call
sahf
mov
cmc
loop
dec
sarb
xchg
test
movsl
ret
xor
lea
dec
out
sub
fwait
push
int
les
test
xchg
data16
and
cli
ja
stos
push
cld
mov
lcall
and
add
xor
inc
mov
call
xchg
popa
mov
adc
icebp
bound
push
mov
addr16
fldenv
out
sahf
shl
sbb
cmpb
adc
iret
push
repnz
ss
les
scas
or
jmp
rclb
out
arpl
in
inc
mov
mov
inc
mov
stos
push
shl
pop
xchg
mov
pop
add
cmp
test
sub
bound
pop
xchg
sarl
aad
cmpb
mov
cwtl
scas
cld
fistl
fwait
push
or
in
or
subb
xchg
dec
adc
dec
mov
lret
push
push
outsl
daa
lret
or
dec
negl
ret
fsubrl
test
imull
jle
add
push
mov
fwait
cmp
add
mov
adc
dec
fimuls
xor
pop
popa
inc
push
adc
add
add
cmpsb
sub
shll
jbe
add
sbbl
jb
in
push
sbb
pop
mov
inc
mov
and
add
xchg
add
mov
enter
arpl
scas
mov
and
adc
add
or
cld
int3
sub
test
in
or
or
repnz
ds
aas
mov
push
xchg
mov
test
sub
inc
fldcw
mov
jmp
add
jno
mov
frstor
mov
imull
movsb
cmpsb
sahf
dec
fmuls
clc
in
add
in
mov
popa
sbb
inc
mov
push
pop
movsb
outsl
imul
xor
jp
jg
mov
mov
sub
rcrl
add
dec
imull
xor
imul
inc
lds
enter
test
jo
and
call
dec
add
pop
jo
lock
mov
cmc
jle
jg
icebp
and
repnz
cmc
repnz
jge
ljmp
mov
imul
pop
cmp
mov
clc
cld
in
lock
lcall
notb
lret
xchg
fwait
out
push
icebp
jmp
fdivl
xlat
lahf
inc
mov
mov
mov
xor
sbb
xchg
lods
loopne
imul
leave
dec
les
cltd
ret
jo
jne
ljmp
mov
shll
pop
test
xchg
lds
jl
sub
adc
push
pop
mov
mov
cwtl
inc
outsb
inc
mov
insb
mov
cmc
not
pop
jmp
sbb
test
jbe
popl
dec
sbb
cli
lahf
lods
mov
jle
fsub
mov
or
or
stos
sbb
mov
fdivl
cmp
sbb
sub
mov
mov
leave
loop
mov
jp
dec
sub
and
mov
inc
arpl
cs
lret
push
mov
pop
lods
fucomp
xchg
and
repz
cmpsb
mov
pop
and
dec
arpl
cmpsb
mov
xchg
sbbl
and
push
dec
sbb
cmp
ror
jnp
jns
adc
test
mov
jae
add
pop
iret
out
or
loopne
int
jecxz
into
clc
mov
pop
inc
fcomi
rcr
add
mov
cld
mov
in
testl
xlat
pop
pop
aaa
fwait
nop
jmp
out
jnp
or
cmp
cmp
push
divl
in
mov
movsl
pop
ja
cmc
scas
call
test
fisubs
or
jb
je
std
scas
lahf
mov
push
cmp
shrb
add
arpl
imul
jno
xor
loope,pn
adc
iret
insl
scas
inc
aaa
shll
lea
mov
jge
std
aas
dec
inc
bound
adc
fdivl
inc
in
in
ss
in
jg
dec
pop
inc
add
jo
jnp
cltd
in
lea
lret
gs
mov
add
test
dec
flds
arpl
xchg
shl
pop
xchg
in
int
inc
jl
xchg
mov
jbe
cmpl
in
pop
cltd
test
shll
je
test
dec
aas
addb
dec
inc
out
adc
mov
leave
jae
sub
add
xchg
bnd
push
mov
jnp
xor
cmp
jmp
frstor
out
imulb
pusha
out
fstpt
scas
orl
sbb
aad
cmp
not
dec
popf
xchg
or
aad
arpl
sbb
mov
icebp
clc
xor
inc
sub
xor
xchg
or
fdivl
mov
mov
push
stos
test
sbb
lahf
jge
jecxz
adc
pop
sub
jl
out
dec
movsl
pop
rcrb
xor
jl
mov
les
add
jo
in
fldenv
rcll
jecxz,pt
int
aam
daa
ds
mov
push
dec
in
and
cwtl
mov
cmpb
jl
mov
ss
push
and
pop
leave
pop
add
mov
sub
mov
pop
std
gs
scas
lret
and
jbe
sub
sbb
ja
out
dec
inc
sbbl
adc
out
dec
jo
loop
idiv
pop
stc
xchg
xchg
dec
xorl
jns
fdivrs
stos
dec
icebp
mov
jp
jb
ret
popf
xlat
je
dec
pop
cmp
xor
dec
popa
xchg
cmpsl
cmp
fisttpl
jg
mov
add
sub
lods
mov
add
pusha
test
shll
add
sub
incl
mov
aaa
lods
mov
dec
ret
pop
fiadds
push
xchg
inc
cmpl
adc
fimuls
jg
mov
ljmp
inc
cmp
call
lock
xchg
jmp
in
ror
xchg
jo
mov
jno
lods
push
outsl
jnp
lret
scas
mov
inc
push
inc
mov
xor
xchg
mov
xor
and
ljmp
adc
and
and
add
mov
xchg
mov
fldt
lods
pop
jae
xor
jno
addr16
out
mov
pop
sbb
ds
inc
in
scas
ss
je
cwtl
fmull
mov
jl
test
mov
xchg
mov
mov
je
push
mov
sub
in
clc
jnp
or
mov
add
ljmp
dec
adcl
xor
mov
popf
ret
popf
jge
loope
out
loopne
xlat
mov
jecxz
or
stos
pop
dec
inc
or
inc
notl
mov
mov
mov
jecxz
adc
scas
jb
mov
mov
or
jnp
mov
div
pop
outsb
add
cli
jnp
inc
aas
cmpl
jb
mov
popf
xor
xchg
ljmp
xor
popf
mov
pop
in
jns
cmp
jg
mulb
addr16
addr16
inc
mov
int
and
pop
ss
sub
insl
gs
cld
jbe
xchg
sbb
clc
ljmp
mov
pop
dec
cmp
dec
fcmove
adc
repz
mov
loop
sbb
popa
notl
lods
mov
jmp
xor
in
xor
je
scas
sub
push
push
cmc
push
imul
ret
mov
xchg
fwait
xor
hlt
addl
inc
insb
lds
or
sbb
bound
adcl
cmp
jb
cmc
in
jnp
adc
add
xchg
adc
mov
pop
mull
or
int
pop
das
pop
pusha
gs
lea
xchg
in
and
jbe
xchg
enter
add
aaa
andb
jecxz
xchg
bound
cmp
jg
test
in
bound
je
repz
aaa
jl
scas
gs
leave
adc
inc
insb
arpl
retw
mov
push
movsl
int3
jmp
mov
call
test
push
fimuls
cmp
jle
cwtl
lods
and
xchg
loop
fiadds
lea
adc
mov
fwait
jge
jp
sub
lret
jle
push
in
push
pop
add
movsb
shlb
js
popf
inc
xchg
rcll
std
mov
je
aaa
push
into
xchg
ljmp
xor
ja
mov
push
out
ret
add
sbb
sbb
loope
pushf
movl
mov
repz
popa
out
repnz
cmp
mov
pop
fdiv
xor
test
hlt
adc
popa
fstl
sbb
pop
xor
xchg
push
xor
adc
jnp
mov
cmpb
or
in
test
das
and
push
adc
push
cmp
push
sub
ds
cltd
push
mov
aam
daa
xor
inc
dec
cli
jecxz
out
mov
rcll
mov
cmp
cmp
xor
jo
mov
cmp
mov
imul
and
gs
mov
cltd
mov
add
cld
icebp
and
and
pusha
aaa
jle
fcomps
cs
movsl
loope
mov
hlt
adc
or
je
jl
xor
pop
mov
mov
faddp
test
xchg
int3
mov
and
push
scas
daa
sub
push
xor
push
fmuls
dec
adc
mov
mov
xor
sub
pop
push
push
nop
jb
cmp
mov
cwtl
jg
inc
pop
and
movb
sbb
insl
sub
dec
and
movsl
xlat
push
aam
repnz
ds
ficompl
insl
dec
xor
add
mov
sub
sbb
xchg
cmpsb
jne
nop
and
sub
imul
pop
jl
sbbb
mov
sbb
xchg
inc
lock
les
aaa
dec
cmp
roll
sahf
out
mov
ret
mov
dec
es
xchg
pop
xchg
lods
repnz
mov
cli
jle
mov
inc
xchg
mov
xor
das
jmp
push
push
mov
cmp
mov
sub
cmp
pushf
cli
mov
mov
insl
or
xchg
xorb
cmp
dec
xchg
test
test
and
xor
in
mov
std
jmp
pop
aaa
cs
hlt
pushf
aam
daa
xchg
adcb
xor
nop
repz
les
xchg
movsl
mov
out
jae
mov
sub
and
pop
and
lret
pop
push
popa
mov
test
inc
jae
inc
cld
mov
mov
int
lahf
call
add
add
ja
ja
inc
and
cmp
jmp
mov
testb
loope
cmp
int3
in
insb
jmp
int
fstps
mov
xchg
xor
mov
mov
jne
shrl
hlt
xchg
and
xorb
leave
add
rcr
pop
push
ret
inc
out
repz
aam
mov
adc
daa
icebp
and
lea
fisubrs
gs
jge
into
cld
sub
lahf
mov
push
movb
imul
cltd
push
in
adc
and
stos
mov
loope
fldenv
outsb
mov
mov
out
leave
jp
cmp
dec
push
add
popa
jmp
and
sti
aad
icebp
ja
lahf
mov
xchg
inc
adc
div
nop
inc
rcl
push
inc
pop
ficoml
aaa
mov
in
pop
mov
xchg
add
outsb
jo
ffree
outsb
cmp
push
sahf
push
fcoms
or
push
imul
gs
pop
sbb
xor
cmp
nop
push
out
adc
xlat
cmp
cmp
imul
push
ljmp
rolb
inc
push
push
jp
cmpsb
mov
xchg
xchg
fstps
rol
and
or
sub
dec
xchg
mov
fucomip
fldt
xor
adc
cmpsl
push
loop
pop
xor
loope
inc
jge
jmp
scas
in
cmp
ret
into
mov
dec
incb
jge
or
das
outsb
or
sub
call
pushf
int
push
and
mov
mov
jne
imul
les
inc
divb
scas
or
scas
pop
xor
lds
xchg
std
jns
subb
jle
sbb
mov
sbb
lret
mov
movsl
mov
jno
or
inc
cmp
lret
adc
and
outsl
icebp
jnp
adc
lods
cmp
movsb
xchg
cmp
jg
fldt
add
mov
fdivl
movb
lea
divl
jne
mov
push
mov
cmp
dec
push
icebp
out
xor
sub
sub
aad
shr
scas
pop
jp
pop
mov
nop
xor
add
push
xchg
orl
in
sbb
sbb
sbb
mov
jb
inc
pop
inc
dec
jnp
fdivrs
and
popa
sub
mov
mov
sbb
popa
sub
das
cmc
leave
inc
xchg
int
subb
stos
sbb
lahf
xchg
dec
lods
jo
fs
sub
scas
dec
scas
xor
mov
mov
mov
popf
add
fisubs
sub
push
jp
mov
jg
inc
decb
mov
fnstsw
out
js
jo
fstps
pop
sub
sub
dec
je
jp
mov
mov
mov
loopne
push
push
int3
rorl
xor
out
cmpsl
fadds
arpl
lods
movsl
pusha
or
aad
adc
movsb
and
imul
imul
pop
push
push
dec
or
mov
dec
addl
fcomps
pop
movsl
fisubs
rcr
stos
lock
test
lret
mov
lods
enter
stos
sahf
pop
insl
ret
shll
cltd
jmp
faddl
nop
mov
xchg
fildll
pop
pusha
aas
dec
lcall
inc
mov
icebp
adc
cmp
lahf
dec
negb
cs
mov
pop
int
lret
push
jae
ret
adc
aaa
sbb
ja
fwait
out
xchg
fwait
and
and
jns
std
push
pop
xchg
cmp
pop
int
inc
xchg
jb
jns
mov
cld
ret
mov
cmpl
outsb
lods
in
push
scas
xor
dec
pop
and
loop
jne
dec
adc
sbb
jmp
sbb
inc
dec
fwait
cltd
sbb
movl
imul
cmp
jne
out
push
push
imul
negl
int3
xchg
adc
stos
fdivrl
pop
jmp
scas
and
cmp
mov
test
sbb
movsl
stos
push
hlt
popf
mov
out
mov
mov
or
lahf
mov
cmpsl
aam
or
insl
or
mov
scas
daa
cmp
and
loopne
scas
out
cmp
stos
out
loopne
scas
es
addr16
out
pop
sub
aaa
push
adc
cli
push
or
sti
pop
enter
mov
lcall
dec
mov
jns
xor
add
out
jne
pop
xlat
es
adc
xor
mov
or
pop
add
cmc
loopne
push
int
jl
jg
mov
sub
shll
rclb
int3
loope
inc
imul
stos
push
je
ficoml
or
repnz
inc
push
insl
imulb
inc
xlat
mov
mov
cmpsb
mov
into
mov
or
jge
fistpll
hlt
jb
xorl
lods
inc
mov
sbb
in
inc
pop
push
mov
dec
es
frstor
jb
or
xor
hlt
jae
pop
in
daa
pushf
popa
xlat
mov
mov
in
aas
mov
jbe
out
sbb
je
sbb
fmuls
sbb
into
push
scas
test
xor
jbe
dec
push
jnp
dec
inc
push
popf
jecxz
push
jmp
jge
inc
hlt
test
adc
sub
jo
jle
inc
sti
fadds
ror
mov
fcoms
int
jp
inc
jl
das
xchg
xor
repnz
adc
daa
data16
push
mov
lret
sbb
insl
in
fstpl
cmp
mov
mov
xchg
imul
mov
pop
fs
cs
lahf
mov
dec
movsb
and
mov
xchg
pop
jne
in
cmpsl
or
push
pop
jbe
jle
pushf
fdiv
das
fimuls
pop
sub
jl
push
or
loope
stos
add
mov
sub
addr16
adc
mov
and
and
push
cmp
insl
out
mov
fs
movsl
inc
icebp
int3
mov
clc
mov
testb
imul
jne
or
or
and
insl
lods
shl
ljmp
fmul
loopne
cwtl
xor
ljmp
or
jecxz
ss
or
xchg
ss
sbb
and
mov
jecxz
mov
mov
add
cmpsb
insb
inc
or
scas
xor
aad
add
inc
push
imul
sbb
aad
aaa
mov
xchg
mov
pop
mov
daa
dec
test
sub
jp
insl
jb
sahf
shlb
or
push
sarb
pop
mov
inc
and
jb
pop
rorl
and
int
stos
repz
pop
cld
addr16
mov
fistps
adc
fstpt
outsb
ds
scas
loope
adc
je
dec
inc
add
push
popa
fsubrs
adcl
rorl
mov
pop
or
jnp
dec
aam
jge
mov
pop
xor
xchg
rclb
and
punpcklbw
add
aad
scas
pop
jecxz
lcall
cltd
in
mov
xor
mov
sbb
mov
adc
sahf
movsl
clc
insb
and
sbb
xchg
es
lock
aam
xchg
xchg
roll
das
addr16
xor
dec
outsb
ljmp
fistpl
std
test
adc
lcall
movsb
cmp
jb
cmpsl
lret
cltd
jl
aas
test
push
add
pop
xor
jo
sbb
xchg
and
pushf
mov
aad
outsl
inc
add
cs
jnp
mov
bound
insl
mov
cmpsl
test
test
push
insb
nop
jnp
mov
mov
mov
or
mov
inc
pushf
adc
push
mov
in
cmp
adc
ljmp
fisubs
or
in
adc
mov
bound
lock
icebp
jmp
mov
mov
out
sub
or
sbb
leave
mov
inc
jmp
decl
fisubrl
out
dec
clc
jne
cld
mov
pushf
es
xor
das
xor
icebp
ror
ja
jecxz
pop
ljmp
dec
pop
cmp
xchg
xchg
andl
dec
call
xchg
or
pop
je
cld
movsb
ret
mov
jbe
movsl
or
or
dec
jbe
loope
lods
pop
pop
mov
sbb
sub
and
mov
popa
bswap
adc
xchg
out
fwait
adcb
adc
lret
movsb
ja
enter
push
int3
std
in
or
and
adc
push
xlat
cmpsb
jns
pop
clc
leave
pop
cwtl
imul
loop
mov
push
ja
cmp
repz
iret
jle
popa
inc
loope
xchg
test
push
push
daa
push
cmp
pop
faddp
ds
mov
js
ss
scas
and
adc
adc
or
mov
pop
sti
adc
dec
aas
mov
add
jb
inc
adc
mov
test
pop
pop
dec
cmpsb
int3
inc
cmpsl
stos
inc
push
das
ja
and
outsl
loop,pn
jl
adc
sti
push
aad
ss
out
ljmp
mov
xor
rol
loop
imul
adc
and
jbe
lahf
push
mov
ficoml
xchg
inc
out
jnp
fcmovu
out
cmp
jo
mov
pop
es
mov
lahf
xchg
adc
loope
jo
sti
data16
push
cld
test
sub
loope
pop
mov
je,pn
shr
fsubl
inc
cmpsb
xchg
daa
cmp
pop
xor
lds
add
adc
insl
je
lock
es
or
fcoml
cld
ja
fisttps
sbb
sub
mov
pop
inc
or
mov
dec
mov
jl
xorb
mov
and
cmc
inc
push
adcb
popf
mov
testl
jmp
outsl
out
daa
sub
es
cmp
pop
and
inc
cmp
lcall
pop
leave
mov
aam
rclb
stc
lret
lea
mov
pop
fmuls
cmp
adc
mov
push
test
cmp
call
jmp
pop
fcomps
cld
dec
and
mov
cmp
enter
bound
repz
sub
cli
int
testb
adc
xchg
adc
sub
cs
inc
push
mov
mov
push
outsl
lods
jne
or
mov
nop
mov
fwait
sti
lahf
pop
mov
or
cmp
add
mov
out
ja
xor
imul
cmpsl
cmp
fists
mov
sbb
push
lods
popf
nop
test
in
add
test
pop
lods
pushf
jmp
jle
jns
ror
lds
sbb
push
mov
xor
sbb
sub
sub
mov
aad
inc
sbb
dec
push
out
push
ds
bound
enter
mov
ja
cmp
fmuls
mov
pop
std
es
fldenv
cmp
ss
mov
insl
and
mov
inc
cmc
xchg
arpl
push
int3
insl
mov
sbb
push
xchg
js
lea
mov
inc
bound
inc
push
dec
imul
pop
loopne
jg
enter
inc
into
jle
fwait
mov
and
sbb
or
ss
and
mov
hlt
lret
sti
inc
push
in
mov
push
adc
mov
cmp
add
movsb
gs
ret
dec
sbb
push
imul
push
dec
cs
and
cltd
arpl
inc
int3
sahf
pop
sbb
loopne
sub
ds
xor
test
nop
rclb
in
inc
ficompl
mov
xor
sub
pusha
cmp
mov
or
push
or
dec
into
and
xlat
ret
inc
dec
gs
mov
dec
push
leave
lret
out
push
add
pusha
inc
bound
cmpsb
mov
out
mov
mov
hlt
or
ret
idivl
and
cmpl
add
mov
cmp
pop
test
push
xor
imul
jge
pop
outsl
out
movsb
xor
and
les
add
bound
test
loope
pop
xor
bnd
push
xchg
adc
imul
cmp
jo
cmp
lret
sbb
out
loopne
int3
xchg
jg
iret
xchg
push
xchg
pop
scas
push
imull
movsb
mov
jns
sub
jbe
std
mov
out
movsb
int
adc
dec
xchg
push
push
mov
dec
jmp
shlb
pusha
lods
call
dec
xor
inc
imul
sbb
or
and
inc
rsqrtps
dec
sub
movsl
push
loop
mov
xchg
pusha
inc
inc
mov
aas
mov
mov
adc
inc
mov
hlt
lahf
fidivs
push
mov
imul
addr16
pop
pop
test
insb
or
push
dec
lods
mov
loopne
inc
andl
cmc
nop
cmp
sbb
push
cmpsb
mov
sbbb
cs
push
mov
jae
jo
pop
jge
test
xor
hlt
jbe
out
call
call
stos
in
mov
push
mov
cmpsl
test
scas
cmp
pop
and
inc
pop
loope
push
jge
sub
sub
mov
inc
mov
push
inc
adc
in
mov
mov
add
push
daa
fimull
xor
or
sbb
or
ja
inc
scas
pop
ss
in
ficomps
adc
out
fmull
in
cmp
fadd
jb
ret
inc
shr
ja
inc
arpl
in
xchg
jne
pop
jecxz
push
mov
lds
test
in
fwait
popf
lods
sbb
fnstenv
and
aas
adc
sub
movsb
pop
mov
xchg
push
addr16
xlat
or
push
arpl
aaa
adc
push
push
jno
enter
lods
lods
push
call
lret
and
xchg
sub
repz
add
cmp
cmp
jl
lods
mov
xor
lods
in
push
dec
fs
xorb
aam
mov
shl
push
popf
roll
cld
popa
xchg
adc
pop
pop
jnp
cmp
mov
es
xlat
arpl
aaa
xor
mov
mov
int3
adc
pop
cwtl
sub
mov
dec
xor
adc
jl
push
fiadds
push
mov
lods
lods
dec
push
mov
loope
in
xchg
ljmp
aam
cmc
jge
addb
dec
mov
mov
inc
mov
movsl
clc
fwait
pop
mov
or
movsb
shll
sub
push
mov
cmovne
gs
mov
and
addr16
fs
sub
xlat
mov
add
mov
dec
scas
pop
sbb
mov
jo
or
and
adc
ljmp
ret
and
adc
xor
mov
aad
pop
es
out
pop
pusha
out
sbb
ds
push
sub
shl
dec
xchg
rcll
hlt
dec
xchg
lret
pusha
dec
addb
jecxz
jbe
stc
mov
inc
lret
cmp
sbb
sub
and
xor
sbb
or
mov
mov
call
pop
sbb
cmp
pop
push
test
ja
adc
pop
add
into
jb
test
cmpsb
sti
sbb
sub
scas
xchg
push
mov
stos
sbb
repnz
mov
loopne
mov
pop
jae
lret
int
insl
faddl
popf
iret
cmp
or
lock
jecxz
dec
pop
daa
sbb
loop
cmp
insb
cmp
sbb
mov
mov
lret
sub
loope
repz
sub
in
dec
and
and
lcall
js
lcall
mov
mov
and
pand
gs
fcoms
shll
icebp
dec
test
xchg
pop
outsl
cmp
shrl
jp
fadds
shrb
aaa
stc
dec
sahf
sub
mov
loop
shll
loop
cli
daa
mov
movsb
add
push
mov
addr16
mov
cld
lds
popa
lea
out
sbb
sub
fdivl
inc
push
push
xchg
lret
out
jp
and
ljmp
hlt
and
test
sbb
lret
jg
push
stos
cmp
out
push
cwtl
jmp
cmp
inc
lret
fldcw
cmp
out
mov
adc
push
mov
xor
add
lea
inc
mov
jl
jno
out
cmpsl
nop
pop
push
jp
sub
cmp
jbe
push
iret
lea
std
lods
mov
add
jae
ja
inc
fidivs
hlt
push
pop
in
jbe
aam
rol
ss
jge
insl
test
jl
xor
sbb
fldl
lods
cmp
pop
test
into
int3
hlt
pushf
xchg
push
sub
dec
push
mov
push
jecxz
iret
push
pop
mov
push
aam
jg
xor
mov
sub
mov
out
xorl
inc
scas
adc
sti
mov
dec
mov
iret
mov
mov
or
xchg
bound
hlt
iretw
imul
pop
mov
jbe
lahf
mov
je
mov
dec
cli
inc
movsb
mov
push
mov
adc
mov
testl
pop
jge
pusha
dec
mov
xchg
mov
push
aad
jle
jle
cmp
jge
dec
pop
int
lods
aam
jge
jp
shr
adc
cli
push
ja
lcall
fmuls
mov
dec
mov
call
mul
sub
cwtl
mov
mov
inc
leave
xorb
lcall
push
js
pop
popf
js
mov
int3
test
inc
sbb
fistpl
nop
push
mov
xchg
push
mov
push
jg
dec
jge
cmc
icebp
cmp
lock
ret
push
pop
inc
shll
addl
push
cmp
ret
sbb
sbb
sub
inc
push
ds
in
ss
jb
xchg
movsb
xchg
jno
xchg
xor
inc
adc
add
push
pushf
push
push
iret
or
iret
ljmp
mov
rorb
fs
push
in
mov
sub
sbb
fs
je
orl
or
cmpl
test
push
mov
add
dec
lds
cmpsb
mov
adc
push
push
test
daa
out
cmp
jmp
scas
movsl
dec
les
cld
mov
cmp
icebp
sub
inc
pop
jo
jg
mov
add
xor
sub
in
xchg
sub
inc
sub
inc
lods
sub
insl
add
pop
data16
and
inc
jne
mov
sub
rcll
pop
std
pop
xchg
stos
insb
loop
cs
ret
aad
jnp
iret
dec
fmulp
mov
imul
sahf
test
push
add
inc
mov
scas
push
mov
jns
loope,pn
lea
jbe
ret
mov
lods
inc
xor
mov
xchg
add
add
out
movsb
adc
or
and
mov
mov
pop
and
mov
jb
add
shll
shlb
call
or
adc
mov
shl
loope
cltd
cmp
jbe
cmp
mov
mov
mov
cmp
push
stc
push
lahf
dec
cmpsb
shlb
enter
jle
dec
add
jmp
je
mov
cmp
xor
push
xor
and
mov
and
stos
arpl
pop
cli
dec
xor
pop
pop
mov
or
push
mov
dec
push
mov
dec
mov
nop
push
jmp
daa
ds
inc
jecxz
je
or
cmp
cmp
xchg
mov
lcall
push
mov
loop
insb
sbb
xorb
mov
cli
sub
xchg
cwtl
pop
in
aam
std
sbb
jne
cmp
sbb
and
xor
test
lock
loope
xchg
jnp
stos
or
or
js
jnp
ss
mov
scas
jl
or
mov
shlb
xor
pop
pop
sbb
fldz
push
out
bound
push
dec
mov
outsl
mov
pop
mov
es
sbbb
jge
mov
mov
jae
jo
and
mov
inc
pop
das
mov
repz
decl
cmpsl
jnp
cmpsb
popa
out
leave
mov
mov
and
lds
popa
test
loopne
repnz
rol
push
sti
shlb
mov
roll
xchg
lea
ljmp
add
movsl
dec
xor
inc
xor
inc
rep
dec
rcl
mov
jno
mov
outsb
lods
or
inc
fwait
jns
cmp
fmuls
sbb
movsb
lea
sbb
pop
mov
scas
or
sbb
dec
out
push
pop
inc
xchg
loope
jnp
xor
mov
xchg
mov
test
lods
loopne
icebp
mov
jg
in
iret
sub
sbb
adc
xchg
push
cli
cwtl
mov
stc
inc
cmp
mov
add
sbb
add
fs
movsb
xchg
sbb
xchg
pop
lea
rcrb
pusha
xchg
in
add
fcompl
mov
in
cltd
mov
mov
cld
scas
stc
lods
lahf
bound
or
sbb
mov
stc
std
or
mov
xor
loopne
mov
inc
pushf
enter
jecxz
mov
cmpsb
sarb
push
mov
cmp
xchg
pop
je
jne
xchg
pop
andb
push
xchg
push
or
add
jae
pop
popa
jb
aam
test
fimull
outsb
movl
lcall
rorb
data16
pop
movl
mov
adc
nop
insl
push
mov
lods
jle
repnz
sti
mov
adc
cmpsl
mov
movsl
idivb
mov
pop
andb
int
mov
mov
ljmp
lds
loop
add
lods
nop
inc
lret
inc
cmc
or
insl
fidivrl
gs
lcall
data16
or
and
inc
fsubrs
xor
test
mov
push
sbb
sub
in
cmp
and
sub
lret
xchg
stc
test
lods
jg
arpl
mov
mov
movsl
push
xchg
push
pop
push
or
xlat
mov
mov
mov
sbb
test
cwtl
pusha
mov
andb
cli
xor
or
hlt
pop
xor
pop
dec
sbbb
push
mov
push
movsb
mov
inc
sbb
cmp
mov
arpl
je
and
jne
xor
cld
daa
ret
incb
cli
mov
push
add
inc
push
jne
sub
mov
xchg
enter
mov
ret
adc
subl
sbb
push
ds
jns
test
das
test
mov
pop
jmp
out
jo
call
shlb
aam
fists
pop
push
dec
repnz
gs
mov
je
xor
and
xadd
xchg
repnz
push
pusha
lods
jle
sahf
cmp
fistpll
cmp
and
cmp
mov
lahf
pusha
mov
loop
jle
lcall
push
fs
ds
mov
sahf
sbb
mov
out
call
testl
jnp
sub
pop
sub
repnz
xlat
mov
cli
js
inc
jg
push
push
aas
mov
pop
ss
std
sbbl
jmp
mov
jae
mov
test
mov
clc
add
lds
add
lret
stc
fsubrs
mov
lcall
jmp
jmp
jns
jmp
push
xchg
shrb
pop
dec
mov
addl
xchg
mov
xchg
daa
push
push
shll
je
dec
shrb
data16
or
jle
add
xchg
repz
test
or
mov
test
mov
leave
and
mov
cli
jl
aad
ss
test
push
xchg
daa
pop
and
imul
fnstcw
mov
xchg
cmp
sub
mul
and
lds
gs
xor
mov
or
fwait
mov
mov
pop
test
mov
mov
lahf
ja
scas
pop
sbb
icebp
adc
in
popf
jns
test
das
push
mov
in
or
sbb
and
fdivl
adc
xchg
sbb
inc
xchg
push
inc
mov
cmpsb
cmpl
lods
adc
movsl
jle
js
pop
xchg
das
adc
pop
jg
and
jae
jge
or
mov
arpl
dec
inc
jnp
sub
xor
loop
mov
or
cs
jge
and
mov
sbb
in
lahf
jb
leave
ja
imul
dec
cmp
sbb
or
push
lock
mov
push
mov
bound
cmp
out
cmp
lods
incb
xor
test
shll
mov
test
mov
push
mov
insb
push
add
stc
add
imul
dec
fdiv
xor
mov
mov
ret
inc
mov
sub
and
and
std
sub
sbb
nop
pop
inc
adc
testl
aas
mov
mov
cltd
xchg
dec
loope
aam
ss
add
pop
pop
xchg
cmp
mov
shll
sub
sbb
dec
xor
stos
data16
scas
clc
in
sbb
pusha
xlat
jnp
or
mov
sub
xchg
xchg
outsl
scas
ret
mov
xor
imulb
scas
mov
imul
aad
pop
lds
mov
cltd
add
inc
jne
mov
mov
in
jbe
xor
data16
fiaddl
fldcw
add
andb
dec
negb
insl
sbbl
cmp
sub
mov
in
bound
pop
cmpsl
dec
daa
mov
mov
pop
or
xchg
lret
cld
fmul
scas
into
shll
sub
add
leave
mov
adc
inc
mov
xor
cmp
sub
or
inc
dec
test
push
xor
in
sub
fsubr
cmpsl
dec
lods
fs
out
add
mov
sti
mov
or
sub
mov
jecxz
adc
mov
xchg
push
ss
cld
int3
inc
mov
insl
pop
sbb
ret
sub
nop
stc
test
jge
in
sub
xor
ror
pop
push
xchg
gs
mov
and
or
insb
int3
pop
rorb
pop
mov
inc
call
ds
and
pop
push
out
xchg
mov
fwait
rorb
add
mov
sub
in
mov
pusha
cmp
mov
std
repz
mov
jb
mov
inc
cmp
push
int3
sub
pop
rclb
dec
mov
and
je
push
nop
push
into
adc
popf
movsb
movsl
repz
and
inc
push
fs
mov
cs
les
add
push
cmp
fwait
push
ret
mov
lock
xor
rol
push
mov
jl
or
scas
adc
rolb
fisubl
jge
movsb
or
push
mov
jnp
roll
mov
push
adc
push
ret
popf
cli
loopne
xchg
mov
cs
mov
lds
sbb
fistl
adc
sbb
js
aam
lahf
mov
dec
mov
push
repz
cmp
mov
sbb
ljmp
push
imul
dec
xchg
xor
sbb
inc
push
gs
sahf
xchg
push
loopne
pop
fiadds
add
jle
loopne
mov
dec
out
jae
std
lret
pop
icebp
dec
ljmp
dec
je
push
test
jno
pushf
fstl
movsb
nop
or
lds
das
rcrl
adc
loope
cmp
pop
gs
call
adc
mov
xchg
sub
fistpll
mov
xor
mov
mov
sbb
or
inc
out
mov
addr16
daa
pop
loope
add
xchg
aas
inc
mov
add
add
loopne
sbbb
push
push
roll
xor
push
xor
cltd
test
incl
jnp
cli
mov
shlb
mov
sub
insl
nop
adc
aam
sbb
enter
pusha
lods
jno
mov
lcall
adc
jl
add
popa
ds
adc
add
adc
add
xor
inc
sbb
inc
data16
mov
ret
push
inc
mov
rclb
sbb
xchg
mov
and
lret
add
sub
sbb
and
jp
shll
jg
decl
mov
lcall
sub
nop
shlb
repnz
movsb
adc
sub
out
pop
inc
or
xor
dec
cwtl
iret
push
syscall
xor
add
adc
out
mov
lds
dec
xchg
insb
call
scas
pop
gs
mov
out
mov
fistl
fwait
jno
nop
jnp
popf
jb
in
out
lods
pushf
jp
aad
sbb
fcmovu
dec
andb
cmp
fdivl
mov
push
mov
aaa
pop
push
push
frstor
pop
xor
repnz
sbb
ljmp
mov
les
js
inc
std
data16
mov
mov
sti
xchg
sub
lcall
in
int
mov
aaa
lds
enter
iret
xor
dec
lods
pushf
add
paddusw
sub
add
xchg
and
add
stos
sub
and
mov
or
nop
inc
or
sub
mov
ficoml
adc
push
adc
mov
or
sub
test
mov
mov
out
ljmp
out
decl
push
jle
and
scas
aad
or
cmp
xorb
insb
test
leave
ret
sahf
movsb
jae
adc
pop
iret
fcomps
sti
aad
aaa
mov
cmp
jg
mov
pop
and
mov
jmp
inc
cmp
push
xor
jne
cs
xchg
push
xor
sub
sub
dec
xchg
das
adc
fsubl
sbb
cmc
mov
push
aaa
imul
pop
cmp
sbb
push
sub
jg
xchg
nop
mull
repnz
ds
aaa
dec
mov
rcpps
xchg
aaa
test
pusha
scas
mov
dec
push
iret
push
pop
inc
fisttps
pop
sub
js
mov
or
dec
and
and
out
mov
pop
addr16
mov
fwait
aaa
xor
dec
xchg
out
imul
cmpsb
xchg
mov
icebp
jmp
mov
mov
leave
push
leave
aas
mov
push
hlt
js
xor
mov
cmp
add
or
mov
cmp
and
repnz
rorb
lods
fidivrs
hlt
cli
xchg
fisubs
flds
into
pop
arpl
mov
ljmp
push
jecxz
outsl
out
jg
jno
mov
dec
cmp
into
mov
xor
das
setp
sahf
pop
loop
push
fwait
fs
sbb
leave
lcall
imul
push
shl
pop
inc
lds
shl
pushf
add
pop
addr16
lea
mov
jecxz
in
in
pop
pop
xor
sub
aam
icebp
mov
movsb
mov
mov
jne
jno
jge
xchg
xor
cmpsb
jno
jg
or
mov
insb
outsb
out
push
xchg
jmp
ret
and
xchg
mov
lret
sti
pop
sbb
dec
clc
push
ds
and
movhps
dec
ljmp
pop
mov
aam
mov
dec
pop
mov
or
xchg
mov
xor
adc
or
mov
sbb
repnz
mov
movsl
sub
sbb
sbb
cmp
push
add
shrl
es
nop
push
test
stos
mov
test
je
fdivrs
push
mov
in
push
lcall
jbe
mov
ficoml
add
cmp
push
sbb
adcb
int3
out
adc
popw
flds
mov
stc
out
ja
and
mov
or
mov
leave
lods
mov
mov
sbb
mov
lcall
sub
subb
testb
jg
or
xor
xchg
popa
sub
jo
test
inc
inc
push
out
rol
dec
push
aam
addr16
push
test
sbb
cmp
int3
xchg
push
mov
pop
adc
orb
pop
jb
adc
mov
sbbl
mov
imul
mov
xchg
lret
lods
and
sub
cmp
fwait
jecxz
add
inc
rcrl
mov
xlat
fs
xlat
sahf
data16
mov
hlt
inc
ret
rcrb
adc
aad
sbb
mov
dec
ljmp
outsb
popa
enter
xchg
repnz
push
movsb
into
in
push
in
xor
ss
fucomp
ret
fs
inc
insb
lcall
or
fld1
sub
sti
sbb
push
adc
pushf
popa
iret
outsb
mov
push
cmp
movsb
pusha
push
bound
in
in
xchg
xor
adc
orl
xchg
fwait
sbb
jmp
cmc
push
sbb
mov
imull
mov
pop
insb
sub
in
mov
mov
pop
int3
fnstcw
add
in
or
mov
xchg
or
rcr
insl
cmp
mov
sbb
fdivrl
sub
jae
sub
fprem1
jb
scas
enter
mov
fnstcw
xchg
cmp
rolb
sub
xchg
fldenv
pop
in
cld
sbb
pop
jp
pop
push
and
mov
nop
xchg
jg
int
sub
js
xchg
push
and
mov
test
push
mov
xchg
pop
sarb
sti
dec
pop
rcrb
ds
push
jbe
and
mov
inc
ds
and
cmp
xor
shll
das
jecxz
loop
sub
lock
les
mov
icebp
pop
or
punpcklwd
fbstp
fimull
adc
dec
jns
xor
push
cmpsl
pop
das
movsb
mov
outsl
ret
inc
xchg
inc
push
hlt
pop
loop
inc
addr16
insb
or
add
mov
in
fisttpl
decl
add
mov
icebp
pop
mov
sub
cmp
xorb
pop
xchg
jl
mov
loop
dec
aad
nop
pop
push
or
push
sahf
gs
add
movsl
lods
inc
push
shl
sub
sub
imul
stos
adc
and
pushf
inc
bound
out
cmp
pop
pop
ja
sbb
cmp
loopne
int
lods
sbb
fwait
mov
fcmovbe
scas
add
mov
jnp
cmp
or
sub
inc
aam
pop
mov
jo
sbb
mov
or
push
mov
or
adcl
pushf
and
in
daa
insb
scas
pcmpgtd
dec
stos
xchg
jae
xchg
cmpl
loopne
lcall
addr16
in
dec
mov
dec
xchg
ljmp
or
push
ljmp
inc
or
in
in
cmp
imul
mov
je
mov
enter
pop
mov
filds
dec
cmp
stos
sbb
insl
xchg
sbb
or
cmp
sub
jne
nopl
mov
outsl
dec
rorb
sarl
in
sti
fisttpll
sarb
les
pop
pusha
push
fstp
sub
in
mov
lods
scas
repz
out
dec
cmp
xlat
dec
dec
push
lods
icebp
and
xchg
pop
mov
out
insl
sti
icebp
pop
xchg
push
je
stos
mov
fsubrl
pop
mov
pusha
mov
stc
mov
cmp
mov
pop
ret
add
repz
xlat
andb
or
or
nop
or
stc
lcall
mov
lahf
sti
out
dec
aad
push
pop
scas
or
push
dec
out
xchg
jne
dec
push
jecxz
into
test
sub
ret
daa
cmp
scas
insl
push
iret
mov
pop
ss
xchg
dec
pusha
cmpsl
movsb
mov
daa
mov
mov
cmp
add
out
push
push
sbb
cltd
pop
decb
aas
and
and
push
inc
les
loope
mov
cmp
jbe
mov
in
test
pop
jnp
imul
std
ds
out
imul
cmp
push
xchg
jo
mov
sbb
push
xlat
repz
lahf
pop
shrb
fnstcw
push
jbe
add
lods
sbb
rorb
jp
cmp
add
push
pop
push
orb
mov
add
or
stos
leave
gs
jge
mov
fcoml
sbb
and
das
lock
add
insb
mov
addb
add
add
sub
dec
adc
and
fld
xchg
sar
sti
mov
mov
xor
fcomip
loopne
sub
add
xchg
xor
movsl
push
loop
aas
cs
xchg
movsb
adc
and
inc
pop
mov
dec
roll
inc
test
je
add
popa
or
add
or
in
fiadds
fxch
or
int
dec
jbe
mov
aas
in
loopne
cmp
fdivrp
out
mov
adc
pop
orl
lods
jl
mov
mov
nop
mov
imul
xchg
add
std
and
inc
pop
leave
sahf
and
cwtl
rolb
inc
out
xchg
cwtl
or
push
lea
daa
jb
or
nop
push
aad
subl
aad
scas
jo
int3
ss
inc
out
mov
nop
or
jns
jo
xor
out
pop
mov
rorl
fst
xlat
jae
scas
stos
adc
inc
and
adc
adc
pushf
pusha
mov
xor
xchg
add
movsb
xchg
add
stos
repz
mov
cmp
add
cmpsl
unpcklps
dec
orl
push
xchg
mov
mov
mov
sets
jbe
mov
es
out
test
daa
in
or
and
cmp
xchg
push
popa
imull
sub
jg
adc
lcall
pop
mov
movsl
lcall
fs
cmp
dec
test
xchg
lods
cmp
dec
jae
adc
shlb
es
icebp
fldcw
mov
push
mov
or
cmpsb
test
int
push
mov
inc
cmp
dec
xor
mov
jb
inc
adc
and
dec
imul
ds
es
ret
shl
divl
fsubrp
cld
enter
rcll
cld
xchg
jb
dec
sub
clc
aaa
mov
push
push
cs
dec
xchg
out
sbb
push
sarb
jns
rclb
pop
scas
mov
mov
mov
jg
pop
dec
ja
inc
or
or
xor
push
ja
lcall
xchg
cmp
mov
mov
rcll
mov
mov
jg
cmpsb
pop
jle
ljmp
xchg
or
subb
jbe
inc
xor
imul
enter
lds
rolb
mov
cwtl
mov
pushf
and
inc
mov
and
and
scas
adc
dec
sbb
or
jg
mov
pop
cmp
insl
push
sub
iret
mov
push
popa
sbb
sbb
loop
jns
ret
adc
mov
jl
movsb
scas
pusha
ds
lds
xor
mov
lret
jne
mov
inc
insb
addb
inc
jge
mov
in
ljmp
fldt
and
mov
fistpll
inc
xchg
and
jns
es
cld
push
fs
push
ret
jnp
add
xchg
aam
jae
fnstcw
insl
dec
jle
jb
fildll
push
mov
adc
xchg
hlt
xchg
dec
mov
cwtl
jns
jp
lds
mov
cli
xor
and
or
movsl
jo
xor
scas
jmp
push
sahf
sbb
sub
jmp
cli
les
cmp
test
imul
jle
xor
aaa
mov
xor
gs
int
mov
xor
mov
leave
push
xchg
or
xchg
arpl
das
int3
mov
scas
leave
pusha
gs
pop
cld
arpl
cmpsb
mov
rclb
aam
pusha
dec
jne
push
arpl
sar
jg
mov
cmp
inc
xor
xchg
fistpl
loopne
inc
ja
ja
rol
in
mov
mov
push
xor
lea
push
xor
sbb
sti
std
or
add
das
xor
mov
sub
push
out
fwait
pop
mov
out
jmp
pop
es
xchg
or
cmp
cmp
pop
push
adc
cmpsl
cwtl
jg
int
fcomps
push
lcall
repz
jmp
ret
loope
add
test
enter
es
mov
push
rclb
neg
icebp
mov
inc
scas
iret
or
iret
bound
jo
mov
xor
xchg
repz
inc
test
pop
movsb
sub
push
xchg
lds
cmpsb
sub
daa
ficoml
mov
ja
mov
sti
sahf
js
outsb
je
add
xlat
jmp
xor
sub
jns
pop
xor
mov
dec
jo
fdivrl
or
arpl
aad
jecxz
call
mov
inc
dec
dec
lea
mov
xlat
outsb
out
lds
in
pop
or
aas
cli
jb
mov
sub
js
xchg
negb
add
push
pop
dec
outsb
sbb
mov
dec
pop
das
inc
xchg
bound
shll
iret
dec
dec
pop
shrb
fwait
into
cmpsb
mov
inc
shlb
xchg
or
mov
js
push
mov
ss
jl
ret
mov
xor
mov
faddp
push
stos
ljmp
loopne
cmp
push
mov
or
mov
cli
ds
mov
and
aaa
repz
mov
out
iret
sbb
loopne
jl
lret
jo
cmp
jge
int
xor
xchg
mov
imul
pusha
add
push
push
sbb
add
js
add
mov
pop
aad
test
lret
xor
jmp
cwtl
mov
xchg
mov
jmp
jmp
sub
gs
mov
loope
sbb
xchg
mov
mov
jbe
clc
push
jno
or
dec
in
cld
out
inc
data16
sub
in
daa
push
bnd
insb
pop
dec
adc
stc
sub
lods
pop
xchg
push
or
jnp
xor
jl
aam
jl
imul
or
repnz
loope
dec
cmp
out
imul
jno
mov
mov
mov
clc
mov
orl
jmp
sub
rcll
mov
sbb
mov
sub
fs
rol
stos
ss
sub
jb
dec
push
pusha
jno
cli
sahf
cmp
stos
sti
in
mov
xchg
ret
int3
fdivl
inc
loopne
mov
cs
repnz
sub
mov
xchg
jno
shl
xor
enter
outsl
or
test
outsb
adc
inc
jge
aaa
addr16
mov
jns,pt
fldenv
arpl
and
pop
pop
jecxz
imul
fs
lret
and
pop
daa
js
stc
mov
js
lea
push
pop
sahf
leave
scas
scas
xchg
ljmp
mov
xchg
cmp
mov
and
xor
push
sti
xor
in
sub
mov
jmp
data16
sahf
std
mov
jo
pop
loop
mov
xchg
adc
call
jbe
sti
pop
idivb
fdivrs
in
or
out
fwait
push
int3
sub
adcb
out
or
stos
add
xchg
cmp
enter
rcll
ljmp
rcr
xor
inc
js
clc
fisubs
lret
dec
fs
iret
mov
mov
repz
fidivs
aad
dec
cs
out
sbb
mov
negl
mov
push
lods
xchg
outsb
arpl
not
jge
icebp
imul
ljmp
testb
push
pop
inc
cmpsb
sub
je
test
mov
push
insl
jge
hlt
lods
mov
pop
mov
pop
jg
inc
xchg
outsl
push
ror
dec
and
call
add
lds
lcall
dec
es
jle
add
inc
shl
or
out
imul
or
aas
mov
inc
mov
popa
lahf
mov
adc
jp
dec
movsl
mov
cmp
sarb
inc
cmp
out
ds
mov
or
fcoms
sbb
ljmp
lret
xor
xor
filds
divb
popa
dec
or
inc
mov
inc
out
stc
xchg
in
dec
addr16
and
out
dec
je
cmpsb
mov
or
pop
cmp
jp
shl
push
fistpl
lahf
out
xchg
ss
push
push
daa
inc
push
shr
rorl
push
and
pop
adc
fdiv
sbb
jecxz
pop
push
jo
fs
rcrb
sarb
pusha
hlt
and
in
mov
out
sahf
lds
les
sub
icebp
idivw
push
xor
cwtl
jge
inc
xor
sti
or
test
mov
lret
cmp
jge
cmp
into
cmp
test
mov
lock
add
push
add
sub
cld
sbb
jb
pop
jp
mov
xor
push
out
xchg
mov
in
cmp
sub
or
cmpsl
xor
pop
fwait
test
loop
out
inc
loopne
mov
push
clc
or
and
nop
out
popf
loope
sbb
pop
xchg
shl
mov
outsl
sub
repz
mov
and
pushf
mull
mov
cmp
sarl
lods
add
cmp
sbb
pushf
fs
pop
popf
sbb
ja
cs
pusha
cmp
mov
popf
and
push
stos
hlt
dec
push
mov
shl
les
push
movsl
outsl
ret
mov
push
negb
sub
movsl
daa
push
ret
fiadds
xlat
sbb
aad
icebp
sbb
mov
inc
in
mov
dec
loopne
add
enter
mov
jle
stc
movsl
pop
mov
mov
fidivl
sahf
mov
in
dec
cli
lea
xchg
add
fsubl
or
lret
mov
ret
dec
mulb
subl
repz
mov
ljmp
sti
pushf
xor
or
int
notb
pop
js
ss
xchg
push
loop
xor
mov
insl
push
je
das
push
iret
cmp
and
sbb
enter
inc
mov
cltd
jns
mov
repnz
jnp
add
js
fildll
jb
inc
dec
jb
addb
stos
or
clc
rcll
ret
mov
aam
mov
inc
mov
mov
jge
and
xchg
imulb
ljmp
shll
and
xchg
lods
data16
ret
pushf
lahf
cmp
adc
int
mov
scas
jbe
bound
xor
rolb
jg
stos
add
mov
push
into
mov
jbe
rcl
mov
faddl
jbe
std
cli
mov
iret
lcall
jno
xchg
lea
adc
leave
cmp
test
inc
shll
sahf
jo
addb
int
cmp
inc
imulb
in
sti
fdivr
je
js
fldt
ficomps
fisubrl
outsl
sti
push
aas
xor
push
adc
mov
and
cmpsl
lfs
cld
outsl
cmp
int3
mov
sub
fs
pop
and
shll
out
in
mov
xor
in
jge
mov
sub
ret
adc
pop
lret
cmpsb
rolb
mov
notl
jae
xor
in
mov
loopne
xor
out
mov
cld
daa
imul
out
out
mov
jl
cmp
push
mov
mov
mov
neg
nop
lods
loope
push
and
popf
add
inc
lret
movsl
push
cmp
push
and
add
sbb
fs
loopne
cmpsb
cmpsb
insb
std
pusha
int
inc
jge
mov
push
stos
ljmp
pushf
xor
or
dec
aas
addr16
into
mov
arpl
imul
push
or
shll
mov
adc
imul
mov
mov
inc
push
bound
mov
mov
mov
shl
lahf
pop
je
pop
sub
push
inc
cmp
and
lea
xchg
cltd
and
or
iret
mov
dec
xchg
mov
gs
xchg
pushf
or
xchg
add
cwtl
notl
imul
in
ss
push
push
scas
inc
cmp
outsb
mov
insb
or
fidivrl
xor
rolb
ss
ret
shlb
mov
jno
stc
stos
insb
bound
inc
or
dec
xlat
mov
cmp
fst
push
pusha
imul
mov
or
add
xchg
jbe
xchg
fidivrs
sub
push
iret
inc
sbb
add
notb
lods
xchg
cmp
pop
pop
data16
and
or
pop
push
movsl
enter
mov
sub
outsl
push
dec
loope,pn
js
mov
inc
pop
adc
adc
or
sbb
jecxz
jle
mov
mov
mov
pushf
mov
mov
cwtl
mov
cmp
pop
idiv
clc
pop
sbb
sbb
addb
dec
popf
fidivrs
lock
fsubl
and
mov
push
push
push
mov
movsl
add
sbb
adc
pop
loopne
pushf
pop
mov
cld
icebp
xlat
cmp
fisttps
ret
add
xor
jbe
sbb
cmp
adc
add
ss
test
add
ja
sub
in
and
imul
mov
cmpsl
push
fs
xor
rcr
sbb
xor
shrl
and
pop
call
dec
and
shrb
cmp
xor
insl
push
mov
jg
lahf
jge
daa
fbstp
out
fcomip
or
pop
popa
js
imul
lods
push
lret
lret
sub
add
test
pusha
push
nop
xchg
jecxz
and
lock
mov
and
mov
and
adc
jg
ret
mov
inc
jmp
dec
jae
pop
mov
test
dec
jns
ret
mov
shlb
cld
jno
push
adc
les
lea
std
inc
xadd
xor
insb
sahf
mov
and
ret
bound
mov
shrl
icebp
add
lea
dec
mov
je
jo
scas
xchg
loop
pop
mov
and
je
pop
xor
and
adc
mov
lock
or
ret
cmpsl
add
push
sbb
mov
pop
push
xor
stos
shlb
popa
mov
pop
push
lcall
inc
sub
in
cmp
out
stc
adc
roll
lods
add
mov
mov
mov
std
xor
mov
in
adc
lock
sahf
shlb
test
imul
pop
aaa
mov
and
inc
push
lods
ret
scas
gs
call
sub
push
inc
dec
iret
sub
mov
mov
push
dec
lea
sbb
or
mov
insl
cmp
mov
loop
ja
shll
mov
insb
add
int
jmp
int
js
ss
loopne
mov
mov
popa
jecxz
sub
fdivl
cmp
sub
dec
fidivs
mov
das
adc
cltd
in
ret
cmp
mov
cmp
xchg
out
mov
shrb
insb
jl
pop
pslld
add
xor
sub
mov
inc
inc
jbe
jl
and
xchg
jb
clts
test
stos
cmp
movsb
shlb
movsb
xor
loope
and
sar
lahf
jne
mov
xchg
frstor
xchg
aam
leave
jae
mov
inc
xchg
adc
das
push
xlat
jo
scas
int
adc
cmp
jle
mov
mov
ret
in
and
scas
popa
ds
iret
cmpsb
hlt
lcall
dec
ljmp
or
insl
jb
test
mov
sub
dec
mov
fmull
and
out
cs
xor
test
push
adc
xor
fisttpll
mov
pushf
dec
divb
pop
mov
lods
lds
jg
pop
sbb
arpl
das
push
push
add
xchg
loopne
push
mov
lods
pop
or
mov
leave
outsl
loop
inc
into
jno
jmp
dec
jnp
cwtl
mov
mov
ds
lds
je
cmp
or
lret
pushw
ljmp
cs
inc
cli
adc
pop
scas
lock
adc
sub
in
cmp
cmp
ja
or
xchg
and
cmp
sbb
bound
aad
insl
das
mov
mov
loope
test
or
int
dec
add
sbb
dec
sbb
shll
adc
jo
fdivl
cmp
dec
cmp
movsb
sub
jmp
rcrl
cmp
imul
jge
sti
mov
sbb
jp
mov
sbb
out
xor
in
stc
int
inc
stos
push
and
mov
pushf
out
and
pushl
andb
roll
and
inc
nop
sub
stos
inc
sbb
aam
cmp
adc
pop
stos
out
lret
pop
loope
adc
cmp
insb
pop
xchg
inc
adc
aad
divl
cmpsb
rolb
jmp
and
shlb
movsl
sub
in
cmpsb
enter
andb
and
sarb
testl
xchg
insl
xor
mov
out
outsb
or
stc
iret
sub
jns
adc
xchg
aam
test
repnz
ret
insb
adc
mov
mov
mov
aad
stos
imul
or
mov
lds
adcb
repnz
popf
pop
mov
out
mov
add
jne
mov
dec
fs
xchg
add
xor
sub
addb
loope,pt
sub
xchg
mov
push
adc
jecxz
mov
cltd
cli
jle
sub
mov
mov
fistps
rcrb
sub
push
xchg
jbe
and
mov
add
sub
aaa
cld
ds
push
nop
int3
outsb
mov
test
inc
cmp
mov
mov
test
mov
push
scas
sbb
loop
fadd
ret
pop
mov
add
rorl
ljmp
sub
xchg
jb
add
jno
dec
xor
mov
mov
mov
cmp
push
repz
stos
rol
rcrl
push
out
cmp
xchg
add
xchg
cmp
adc
push
push
pop
jo
dec
int3
shlb
fwait
xchg
cmp
jo
int
mov
sarb
add
push
or
sbb
aas
pop
and
aad
pushf
cmp
loope
adc
pusha
idiv
sbb
dec
add
cli
imul
cmp
pushf
pusha
pushf
xchg
push
xchg
mov
ja
mov
push
and
scas
out
stos
stos
cmp
inc
dec
sub
cmc
fildll
sahf
sbb
push
cmp
loope
jbe
loopne
dec
ja
push
outsb
adcb
lods
icebp
push
std
push
push
sub
lahf
mov
xchg
data16
flds
adc
ds
jns
xchg
push
insl
rorl
xchg
inc
jb
fcompl
jae
push
dec
pop
sub
mov
addb
sti
cmpb
aas
cmp
fists
xchg
addr16
xor
jae
sbb
pop
xchg
fcmovbe
cmp
push
mov
mov
lahf
loope
jo
stos
test
dec
push
pop
push
aad
test
add
inc
cmovbe
or
jae
fcomi
idivb
mov
pusha
mov
add
xor
lock
pop
inc
and
jne
stos
fcomip
mov
imul
outsb
hlt
inc
pushf
and
data16
mov
aad
add
or
inc
sub
lcall
and
cwtl
push
into
test
jae
push
xlat
sub
add
mov
pusha
aaa
mov
jecxz
and
and
mov
mov
push
sti
inc
imul
fisubrs
lock
mov
mov
aam
cmp
bound
inc
hlt
in
inc
dec
mov
jne
clc
jmp
insl
push
aaa
imul
xchg
jnp
es
cmp
pop
push
js
outsb
jecxz
outsl
xor
in
loope
fwait
sub
push
call
xchg
xlat
fidivrs
sahf
push
ret
add
lods
test
ss
sub
adc
bound
movsb
ss
pop
adc
add
std
xchg
sub
out
cmp
push
fsubs
ds
cmpsl
pop
pop
sbb
xchg
cmp
jecxz
das
sub
daa
stos
and
pop
xor
jecxz
mov
mov
sbbb
lods
xchg
nop
or
testl
stos
jne
jmp
inc
shr
xor
iret
xchg
testb
into
test
xchg
xchg
push
xor
pop
orl
fisubs
fmuls
jmp
daa
cmpsb
add
push
xchg
inc
mov
sbb
mov
popa
pop
jp
jl
dec
or
gs
daa
shlb
das
and
pop
lods
dec
mov
dec
dec
mov
nop
insb
stos
jns
mov
sbb
jbe
jge
lret
or
xlat
xor
rolb
divl
in
loopne
mov
pop
sbb
mov
imul
cmp
jge
mov
dec
sub
or
jge
xchg
pop
cmp
es
xchg
rclb
shlb
cltd
movaps
mov
cltd
sarb
xchg
cmp
xchg
pop
fmul
rcrb
xchg
sti
push
dec
inc
mov
push
and
xchg
fwait
outsl
and
push
fwait
push
xor
mov
dec
sti
ret
xchg
movsl
sti
or
and
stos
addl
out
dec
mov
add
mov
and
jne
mov
outsb
aam
pop
lods
shlb
lret
dec
jp
imulb
mov
jl
jge
cmc
js
scas
out
repz
jno
xchg
sahf
call
nop
mov
mov
push
inc
jle
in
clc
fmull
scas
sbb
xchg
fdivl
lock
lcall
add
loop
int
add
test
mov
xchg
pop
fmuls
mov
jnp
sbb
jge
jo
sub
jne
inc
iret
or
std
or
sub
call
and
jnp
mov
call
inc
jp
sub
fimull
js
jge
mov
clc
into
into
mov
push
sub
mov
xchg
in
adc
out
jg
cmc
pusha
jne
jecxz
out
xor
stos
shll
mov
aas
xor
aaa
gs
idivb
in
push
xchg
test
jne
jge
lret
in
sub
leave
aas
cmp
pop
xchg
ret
in
cwtl
cmc
in
pushf
mov
dec
pusha
mov
cmc
dec
add
mov
call
outsl
sub
in
pop
jle
jmp
inc
push
ja
jl
adc
push
jmp
les
ficomps
sahf
push
cmc
push
or
jp
repz
jae
sbb
dec
fildll
enter
testb
mov
sbb
xchg
ljmp
mov
mov
hlt
dec
inc
or
cli
and
xchg
add
xchg
cmpsl
nop
int3
mov
mov
dec
cld
data16
or
xchg
dec
xor
mov
fwait
out
mov
push
inc
in
add
mov
sbb
cmpsb
jl
push
inc
movsl
sbb
out
and
sub
jg
and
iret
es
or
xlat
ss
xor
mov
xor
and
nop
fs
xorb
dec
into
or
ss
sbb
insl
shl
mov
mov
mov
inc
jbe
lret
add
jnp
pop
js
mov
bswap
pop
out
xchg
mov
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpl
mov
jne
lea
push
call
mov
mov
lea
push
push
call
stos
mov
scas
jne
cmp
jne
lea
jmp
push
imul
insb
insb
outsl
arpl
push
imul
jb
add
jb
jne
insb
push
jb
je
arpl
mov
or
je
mov
xchg
mov
lea
cmpl
je
push
push
push
push
call
mov
mov
add
push
push
push
push
call
mov
push
mov
add
pushl
pushl
push
push
call
mov
cmp
jne
incb
mov
add
pushl
movb
call
popl
push
push
push
push
mov
sub
mov
xor
or
je
js
lods
cmp
je
jmp
cmp
je
inc
dec
jmp
mov
jmp
cmpb
jne
and
rol
sub
mov
add
add
sub
jmp
pop
pop
pop
pop
jmp
mov
mov
add
mov
sar
rep
mov
and
rep
pop
push
push
pushl
call
add
cmpl
jne
push
push
pushl
call
mov
or
je
mov
xchg
mov
mov
sub
je
mov
shr
xor
mov
add
cmpl
je
mov
sub
shr
mov
add
add
mov
shr
cmp
je
cmp
je
cmp
je
jmp
mov
and
add
jmp
mov
and
add
jmp
mov
and
add
jmp
orw
add
loop
jmp
mov
mov
or
je
add
lods
or
je
add
mov
lods
stos
jmp
mov
mov
add
mov
test
je
add
mov
push
call
test
jne
push
call
mov
movl
mov
mov
test
jne
mov
add
add
mov
mov
add
add
test
je
test
jne
add
inc
inc
push
and
push
pushl
call
test
pop
jne
test
jne
push
mov
add
push
push
lea
push
push
jmp
and
mov
cmp
jne
push
mov
dec
shl
mov
mov
mov
add
mov
add
pop
jmp
push
mov
add
push
push
lea
push
push
jmp
mov
addl
jmp
mov
mov
mov
add
mov
jmp
mov
mov
add
push
push
push
push
push
pushl
push
call
pushl
push
movzwl
movzwl
lea
lea
lods
test
je
add
cmp
loopne
jne
push
push
pushl
andl
pushl
add
push
call
pop
lods
lods
mov
loop
call
pop
mov
push
add
pop
or
mov
popa
jne
mov
ret
push
ret
mov
lea
push
push
call
mov
lea
push
call
mov
lea
push
push
call
mov
mov
lea
push
push
call
call
add
pop
push
lea
push
push
push
call
push
call
imul
gs
xor
cs
insb
add
imul
jae
jne
gs
xor
fs
insb
add
jae
popa
addr16
outsl
js
add
jo
imul
dec
inc
inc
inc
push
and
push
dec
push
add
and
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
and
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
mov
pushf
lods
or
je
xor
mov
shr
jae
xor
dec
jne
jmp
xchg
pop
ret
xchg
nop
add
add
mov
xor
add
push
add
adc
add
addb
inc
add
loopne
pusha
add
add
add
inc
add
loopne
nop
add
add
add
inc
add
loopne
rolb
add
add
inc
add
push
add
add
add
add
inc
add
loopne
addb
add
add
add
mov
sub
lea
push
call
mov
mov
push
push
lea
call
test
jne
or
add
ret
mov
lea
push
push
lea
call
test
jne
or
add
ret
mov
add
ret
add
add
add
push
pop
or
or
adc
sbb
sub
cmp
pusha
jo
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
or
or
or
or
or
or
movups
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
push
mov
push
mov
push
cmp
jb
push
mov
mov
mov
inc
mov
mov
mov
mov
shl
and
or
mov
add
mov
mov
mov
cmp
jae
pop
mov
mov
mov
sub
shr
mov
sub
and
shr
add
pop
mov
pop
pop
ret
mov
mov
mov
mov
lea
mov
add
ret
sub
push
push
push
mov
push
mov
mov
xor
lea
xor
rep
mov
cmp
mov
jbe
xor
mov
mov
lea
inc
inc
cmp
mov
jb
mov
mov
mov
mov
mov
xor
mov
movl
mov
lea
mov
mov
shl
add
cmp
mov
ja
mov
mov
mov
add
cmp
mov
mov
jl
mov
mov
mov
mov
shr
mov
and
sub
add
mov
mov
mov
mov
mov
mov
shl
mov
shr
rep
mov
mov
and
rep
mov
mov
mov
add
inc
dec
add
cmp
mov
mov
mov
jge
cmp
je
pop
pop
pop
xor
pop
add
ret
mov
xor
test
jbe
mov
mov
test
je
mov
and
mov
mov
xor
mov
mov
lea
inc
mov
mov
inc
cmp
jb
pop
pop
pop
mov
pop
add
ret
push
push
push
mov
push
mov
cmpl
jb
mov
mov
inc
mov
mov
mov
mov
shl
and
or
mov
add
mov
mov
mov
cmp
jae
mov
mov
mov
sub
shr
mov
and
cmp
jae
mov
mov
shr
xor
mov
mov
jmp
cmp
jae
cmp
sbb
add
jmp
cmp
jae
mov
jmp
cmp
jae
mov
jmp
cmp
jae
mov
jmp
cmp
sbb
add
mov
mov
add
mov
mov
mov
sub
sub
pop
shr
mov
add
mov
pop
pop
mov
pop
ret
push
push
push
mov
xor
xor
lea
mov
push
call
mov
pop
mov
add
shl
add
inc
cmp
jb
mov
lea
push
push
call
push
push
lea
call
push
push
lea
call
push
push
lea
call
mov
pop
pop
add
pop
ret
mov
mov
mov
push
mov
lea
mov
movl
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
rep
mov
stos
call
pop
ret
sub
push
mov
push
push
lea
push
push
mov
call
test
jne
mov
mov
rep
stos
xor
push
mov
call
mov
inc
cmp
jb
lea
lea
push
mov
call
test
jne
pop
pop
pop
pop
add
ret
xor
mov
call
cmp
jae
mov
mov
add
and
mov
inc
jmp
jne
push
mov
call
add
test
jle
cmp
jge
mov
dec
mov
inc
test
jg
jmp
cmp
jne
push
mov
call
add
jmp
push
mov
call
add
test
jle
cmp
jge
movb
inc
dec
test
jg
cmp
jl
lea
lea
push
call
test
jne
pop
pop
pop
pop
add
ret
lea
lea
push
call
test
jne
pop
pop
pop
pop
add
ret
lea
push
lea
call
test
jne
pop
pop
pop
pop
add
ret
movb
xor
cmpb
jne
inc
cmp
jb
jmp
movb
mov
lea
mov
rep
pop
pop
pop
mov
pop
add
ret
call
nop
pop
sub
ret
sub
mov
push
push
push
movl
mov
push
xor
test
mov
mov
jbe
lea
call
cmp
jae
mov
mov
mov
inc
inc
mov
mov
jmp
cmp
jae
add
mov
and
shr
lea
cmp
mov
jne
lea
call
mov
xor
push
call
mov
pop
cmp
jb
mov
mov
inc
mov
mov
mov
mov
shl
and
or
mov
add
mov
mov
mov
cmp
jae
mov
mov
mov
sub
add
shr
mov
mov
sub
and
shr
xor
push
call
mov
pop
mov
add
add
mov
mov
mov
xor
push
call
mov
pop
test
mov
je
cmp
jb
mov
lea
cmp
jb
mov
mov
shl
mov
inc
mov
mov
mov
mov
and
add
or
mov
cmp
mov
mov
jae
mov
mov
mov
sub
add
shr
mov
mov
sub
and
shr
lea
call
add
lea
jmp
cmpl
jb
mov
mov
shl
mov
inc
mov
mov
mov
mov
and
add
or
mov
cmp
mov
mov
jae
mov
mov
mov
sub
add
shr
mov
mov
sub
and
shr
add
cmp
jae
mov
test
je
mov
mov
jmp
mov
mov
lea
mov
mov
mov
mov
mov
inc
lea
cmp
mov
jae
mov
sub
inc
mov
mov
mov
cmp
jb
mov
add
mov
mov
jmp
mov
call
test
je
cmp
jb
mov
mov
pop
pop
pop
mov
pop
add
ret
pop
pop
pop
xor
pop
add
ret
add
add
mov
xor
rolb
or
add
xor
mov
push
add
add
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
mov
push
add
push
add
rolb
ja
push
add
rolb
jg
push
add
rolb
xchg
push
add
rolb
pop
push
add
rolb
xchg
roll
add
push
add
add
add
roll
cmpsl
roll
sbb
push
add
add
add
roll
mov
push
add
push
add
add
add
roll
mov
add
dec
roll
iret
roll
pop
roll
xlat
roll
arpl
push
add
roll
jne
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
jbe
jo
xor
cs
insb
add
imul
insb
add
gs
xor
fs
insb
add
outsl
arpl
xor
fs
insb
add
gs
insb
xor
cs
insb
add
gs
insb
xor
cs
insb
add
popa
addr16
insb
insb
add
outsb
insl
insl
cs
insb
add
jbe
jo
xor
cs
insb
add
imul
fs
insb
add
gs
xor
fs
insb
add
jbe
popa
arpl
fs
insb
add
roll
add
add
stc
roll
add
add
or
push
add
add
add
push
add
add
add
add
add
ret
add
add
dec
ret
add
add
push
ret
add
add
gs
add
add
jg
push
add
add
add
add
add
add
add
add
add
ret
add
add
in
push
add
add
add
add
je
gs
outsl
popa
jb
push
jns
add
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
add
jae
jb
gs
je
imul
gs
gs
popa
insb
jne
inc
js
add
add
jb
je
push
add
insl
outsl
jne
gs
gs
outsb
je
add
push
push
inc
inc
insb
gs
outsb
jne
add
add
gs
insb
inc
js
arpl
gs
add
add
inc
gs
jo
arpl
insb
inc
outsl
insb
fs
popa
je
inc
add
add
imul
jb
inc
imul
jns
popa
je
inc
js
jae
jae
add
insl
arpl
outsb
fs
je
imul
push
je
jb
push
gs
imul
arpl
inc
jb
popa
je
inc
popa
jo
jne
gs
imul
add
inc
insb
outsl
arpl
outsb
jo
je
add
dec
jae
push
inc
fs
imul
