push
call
ret
ret
fcoms
dec
aas
es
scas
cmp
in
ja
pop
cmp
inc
add
cmp
ljmp
push
jbe
push
out
test
cmp
gs
push
xor
stos
in
pop
filds
leave
outsb
rolw
cltd
sbb
jge
mov
inc
rolb
test
lock
popa
adc
pop
sbb
movsl
jmp
inc
jp
loop
sub
fwait
mov
enter
mov
mov
adcl
dec
adc
cwtl
xchg
sub
data16
test
push
ror
popf
div
ja
inc
pushl
loop
loope
mov
cmp
mov
loopne
mov
and
mov
jno
lcall
jl
mov
addr16
and
mov
mov
mov
mov
adc
imul
or
loop
je
aam
jmpw
js
lret
lcall
ja
fisubl
pop
addl
jnp
jbe
cmpsb
mov
fnsave
cltd
mov
loop
pop
xchg
mov
imull
adcl
pop
adc
jae
pop
test
add
xchg
daa
testb
fisttpl
and
pcmpgtd
jecxz
rcrb
sbb
jbe
adc
sub
std
into
in
jo
jle
add
sbb
add
or
jg
iret
js
scas
xor
sahf
cmp
shlb
mov
mov
or
pop
add
hlt
mov
dec
ret
mov
out
or
clc
mov
rep
sbb
rcrb
test
mov
aas
sub
jg
pop
rep
outsb
aas
add
push
cmp
mov
push
movsl
subb
add
insl
mov
inc
mov
dec
lcall
loope
ret
cmp
add
in
push
cmp
rolb
negl
xor
adc
adc
xchg
push
out
mov
sub
ret
pop
repnz
mov
fidivl
loop
inc
xor
int
and
push
xor
xchg
popa
rorl
add
pop
xchg
test
insb
fisubrs
xor
or
adc
popf
mov
ret
lahf
dec
ret
mov
cli
clc
cli
push
add
push
popf
dec
sarb
jecxz
les
jo,pt
fcoms
not
testl
jg
inc
xchg
comiss
sbb
cmpsl
add
inc
mov
out
adc
imul
or
jmp
add
mov
jmp
scas
sahf
adcb
jmp
sbb
xchg
fistps
ljmp
cmpsl
or
pushf
pop
in
loop
push
cltd
movsb
push
sub
pop
arpl
add
psubb
es
jbe
fsubrl
jecxz
fldcw
sbb
xchg
fidivrl
pop
je
pop
jmp
leave
jbe
in
mov
dec
jp
clc
inc
push
dec
cmp
adc
leave
xchg
lcall
adc
jb
cld
pushf
pop
aaa
shr
scas
ret
shl
cmp
cmp
lock
dec
jbe
xchg
adc
mov
loope
xchg
mov
dec
push
jne
mov
adcl
loope
pop
out
adc
scas
push
lock
scas
lods
and
dec
out
rorb
xchg
inc
hlt
incl
and
xor
test
sbb
bound
push
insb
cmp
push
or
push
cli
push
lods
pop
movsb
mov
aas
cmp
cld
add
pop
mov
adc
fmull
out
mov
xor
mov
mov
pusha
popf
mov
xor
adc
push
rcll
push
lret
sub
mov
mov
sar
loop
hlt
repnz
mov
scas
sub
mov
pop
pop
adc
stos
inc
and
inc
js
cmp
fxch
or
push
cmp
dec
mov
jecxz
or
clc
add
loope
adc
sub
clc
stc
dec
outsb
sti
into
jp
ss
fisttps
push
jmp
pop
subl
add
cmp
dec
dec
push
pop
out
lahf
mov
xchg
fucomip
pop
call
cmc
push
stos
loopne
and
ror
jnp
mov
lods
nop
aaa
add
in
lods
daa
or
and
mov
cld
add
xchg
es
dec
in
add
add
lods
inc
push
mov
push
dec
cmpsb
adc
cmpb
out
cmc
jno
mov
adc
pop
out
mov
inc
cmp
outsl
xchg
cmpsl
adc
rcrb
push
mov
in
seta
push
jmp
push
stc
mov
insb
inc
jle
cmpsl
pop
in
mov
test
sbb
pop
out
sbb
std
xor
or
mov
push
mov
jge
das
pop
inc
andl
jg
lds
movsl
jecxz
scas
dec
rclb
xchg
mov
or
dec
push
dec
jecxz
jb
mov
cli
push
lods
cmp
ds
rcr
mov
and
aaa
shl
fisttpll
mov
rolb
push
xor
cs
je
loopne
push
fwait
out
nop
and
mov
out
jg
sbb
fwait
pop
jno
adc
cmpsb
negb
xchg
adcl
addb
xor
lock
imul
scas
mov
pop
mov
ret
scas
push
gs
jge
repnz
mov
in
sbb
cmpb
sbb
mov
cwtl
data16
nop
je
sub
lret
jbe
cmpl
xchg
sbb
inc
repnz
aam
sbb
js
or
jo
test
aaa
mov
xchg
out
push
scas
xchg
dec
mov
mov
pop
xor
in
jmp
inc
push
jmp
mov
inc
pop
adc
sub
xor
mov
mov
loopne
mov
mov
loopne
mov
lods
add
ret
in
incb
dec
call
pusha
pop
in
push
jle
cli
add
mov
jmp
mov
cmpsb
jecxz
jle
cmpl
call
and
or
aas
ret
addr16
movsl
outsl
add
jmp
xchg
sbbl
xchg
ja
inc
pcmpgtd
in
decl
dec
dec
ror
lock
ds
mov
popf
adc
dec
push
sbb
daa
popf
jne
daa
mov
add
shrl
push
pop
icebp
orb
pop
add
pop
jmp
cmpsl
jg
dec
scas
and
inc
ret
cmp
add
negb
push
cmp
push
rcrb
or
xchg
in
das
fdivl
repz
mov
ds
and
fs
fsubrl
mov
fcmovu
call
les
hlt
aam
mov
in
jg
lods
and
and
mov
test
add
xor
or
ss
jo
test
mov
pop
divb
pop
clc
mov
mov
repnz
lahf
add
xchg
dec
xchg
cmp
ss
mov
xor
repz
jg
mov
sub
push
mov
ds
mov
iret
insb
jecxz
out
cmp
jp
xor
incb
sub
push
decb
into
je
cmc
dec
push
pop
and
ffree
jl
aas
jge
dec
mov
xor
add
addl
leave
popf
in
sub
pop
pop
scas
mov
scas
xchg
loope
sub
pusha
push
add
rcrb
xor
and
cli
sbb
mov
xor
imul
mov
pushf
dec
or
lret
mov
xchg
fmull
adc
into
mov
loopne
dec
js
les
sar
push
and
mov
bound
dec
jecxz
pop
ret
inc
jg
das
sbb
sbb
mov
ss
jbe
xchg
inc
fnstsw
pop
mov
add
scas
mov
outsb
lcall
std
movsb
fstps
xor
pop
shr
and
lock
js
in
push
pop
dec
fs
clc
mov
push
popf
pushf
jl
in
test
addb
push
and
nop
daa
scas
sbb
icebp
pusha
add
mov
in
pop
lods
mov
sbbl
vpsubsb
add
and
dec
and
rolb
aad
aaa
mov
scas
int
fwait
dec
or
jbe,pt
cmp
xchg
mov
add
test
ret
push
or
ss
repz
jl
or
jge
decl
xchg
mov
jnp
xchg
push
in
mov
sbb
push
pop
stos
sbb
mov
mov
lcall
sub
add
sarl
insb
mov
push
or
inc
dec
lods
sub
cwtl
imul
or
and
arpl
fnstcw
loop
cmp
push
push
sbb
mov
stos
sbb
sbb
das
fmul
gs
jecxz
out
mov
cltd
xchg
roll
lock
lea
push
jae
mov
and
sbb
sbb
cli
andb
clc
xchg
mov
push
and
scas
cltd
shrl
in
sub
fdivp
xchg
cmp
xorl
mov
pushf
mov
lcall
orb
into
cltd
push
fnstcw
sub
iret
outsl
mov
add
jbe
mov
notl
rorl
mov
sub
rclb
stc
jmp
fnstcw
lret
stc
and
dec
mov
shll
add
sbb
std
adc
push
insb
xchg
jns
pop
addb
stc
mov
jne
or
outsb
addl
add
cmpsb
jmp
lods
in
xchg
jbe
mov
arpl
xchg
jecxz
dec
xor
xor
mov
loope
lcall
clc
mul
movlps
xchg
repz
lock
lea
pop
lock
mov
je
or
pop
lret
jle
fsubl
mov
loopne
push
sbb
jmp
mov
cmc
mov
jl
aad
lea
fsubrl
cli
fsubs
adc
mov
add
or
aam
dec
jle
mov
fdivs
cmp
add
push
or
sub
mov
sbb
push
dec
daa
cmp
sbb
xchg
dec
stos
shll
testb
leave
mov
pop
pushf
jne
or
ljmp
rcll
ret
add
vpaddd
in
inc
imul
pop
cmpsb
jo
leave
mov
adc
sub
cmp
je
fldcw
dec
outsb
push
test
gs
lahf
js
mov
sub
aas
xchg
push
sub
enter
mov
pop
int3
mov
gs
push
loop
scas
cmp
test
xorps
or
jmp
dec
mov
hlt
shll
sarb
jns
xor
insl
push
xchg
pop
push
lcall
jae
add
xor
insl
push
sbbb
xor
sub
xchg
fisttpll
test
sbb
lods
xor
push
rdtsc
pushf
mov
pop
ds
bound
mov
int
xor
cmpsl
dec
in
cmp
lds
adcb
stc
push
jnp
add
pop
mov
sbbl
dec
jae
xor
in
test
push
push
imul
loopne
insl
aas
test
movsl
pop
ljmp
outsb
cmpsl
daa
outsb
pop
lods
inc
inc
sub
pop
mov
je,pt
or
or
ljmp
in
aam
push
pop
mov
sbb
int
cwtl
xor
repnz
cmpsb
pushf
incl
call
stos
lcall
adc
mov
mov
subb
cmp
aad
inc
iret
mov
jns
cwtl
cli
add
jmp
pusha
jbe
scas
aas
dec
shlb
adc
xorl
mov
bound
loop
push
mov
mov
mov
addr16
push
xor
bnd
jo
outsl
iret
add
push
add
mov
mov
mov
lcall
out
pop
data16
aam
jbe
fsubs
pushf
dec
jb
shl
pop
insb
insl
movsl
daa
pop
xchg
sbb
pushl
sbb
enter
sbb
add
mov
cmp
push
fcompl
sub
decb
push
sbb
out
or
ret
call
popf
movsl
add
dec
pop
push
jae
jno
push
mov
jbe
test
shrl
jg
js
cmp
push
and
sub
iret
insb
loopew
mov
jle
rcrb
int3
adc
jle
mov
into
test
loopne
inc
mov
and
sub
push
mov
and
cmp
sub
inc
inc
fiaddl
insb
jl
sub
or
in
cli
push
sbb
mov
pop
sub
int
sbb
adc
stc
jle
dec
and
adc
mov
mov
dec
loopne
cmpsl
out
lret
adc
lea
mov
and
jg
mov
iret
cld
inc
jle
sbb
mov
ljmp
xchg
dec
es
shl
mov
adc
or
xchg
xchg
and
jnp
movsb
xchg
test
std
and
les
into
dec
and
sahf
jnp
nop
punpckhbw
in
add
out
outsb
inc
repz
enter
jp
sbb
push
xchg
cli
inc
xchg
ficoms
sahf
and
data16
call
cmp
insb
movsb
push
andb
or
lahf
lock
das
pop
aas
pop
iret
daa
add
testl
out
dec
loop
rcll
cmc
mov
mov
into
mov
out
add
loope
sahf
jge
jae
mov
sbb
nop
mov
dec
or
or
ret
xchg
in
lock
out
jmp
sbb
bound
shll
test
lea
mov
mov
lret
pop
loope
jae
lret
aas
push
adc
lds
iret
pop
push
dec
lcall
xor
in
sub
test
test
jge
mov
out
mov
inc
cmp
add
push
cmp
icebp
in
sti
jmp
hlt
test
jns
daa
pushf
clc
ljmp
mov
andb
test
pop
push
jecxz
jle
push
hlt
dec
jae
aad
jmp
jo
pop
inc
test
imul
adc
sbb
sub
cwtl
or
sbbl
movsl
imul
scas
push
clc
cmp
or
mov
or
and
jno
mov
xchg
lcall
jnp
push
andb
dec
mov
hlt
jne
sbb
or
mov
lret
lcall
pop
or
in
adc
enter
cmpsb
add
mov
rclb
xchg
mov
ss
lds
fwait
out
push
mov
sbb
aam
fistpll
loop
mov
sbb
sub
cmpsb
test
pop
fidivrl
sarl
pop
cmp
inc
xor
jg
repz
shrb
push
sub
fmul
mov
sarb
scas
ret
pminub
nop
xorb
push
mov
sbb
sub
or
or
sbb
xchg
rorl
mov
sbb
hlt
sub
inc
sbbl
insl
int3
pop
call
jb
pop
sbb
lock
test
fldl2e
cmp
mov
outsb
mov
mov
outsl
mov
lods
mov
fwait
push
add
int
mov
hlt
roll
inc
xor
xchg
cmpsl
xchg
imul
mov
mov
mov
stos
insl
ret
sub
jecxz
stos
iret
lret
mov
movsb
sbb
mov
xorb
pusha
lea
js
push
or
mov
ret
mov
push
popa
in
cmc
call
lods
sbb
or
pop
pop
xchg
jge
xchg
mov
sbb
add
mov
jne
mov
orb
jnp
testb
fistl
adc
push
imul
xchg
jmp
fadd
loop
repnz
sub
mov
cmp
loopne
sbb
pushf
mov
dec
cmp
mov
leave
popf
sbb
sbb
aaa
add
stos
jns
iret
xchg
das
add
xor
sub
jg
push
cmp
ds
push
stos
inc
hlt
dec
mov
sub
repz
mov
repz
or
into
inc
imul
push
adc
xor
and
loope
jb
xchg
in
mov
pop
js
push
test
bound
jnp
loopne
pop
adc
pop
leave
fs
lcall
sbb
cmp
mov
add
pop
inc
repnz
aad
jge
inc
and
xor
mov
sbb
stos
mov
cmp
and
inc
add
jge
test
mov
outsb
mov
xor
dec
push
mov
xlat
jle
xchg
adc
aam
dec
bound
call
cmp
sbb
pop
add
and
test
repnz
jge
mov
jecxz
pop
rolb
cmp
pop
inc
out
or
dec
add
mov
jns
inc
icebp
cli
cld
stos
xor
push
mulb
shl
mov
pop
dec
mov
out
mov
cmp
shlb
jo
sub
push
std
pusha
mov
xor
pushf
or
stc
pop
pop
push
mov
dec
xor
in
mov
jg
fwait
mov
cld
sbb
sub
cmp
lret
cmp
xchg
cmp
xor
das
inc
or
jae
out
test
and
insl
and
dec
cmp
sub
rsqrtps
andl
adc
in
sbb
jp
jmp
test
xchg
enter
xchg
mov
cli
cmc
in
or
std
in
in
fistpl
mov
dec
push
hlt
bound
mov
loope
iret
lcall
jl
mov
inc
outsl
pop
or
test
js
icebp
push
or
mov
dec
inc
movsl
clc
loop
je
pusha
mov
dec
and
inc
fucomi
fdivl
add
cli
lret
jp
add
shrb
aas
mov
push
test
aaa
fistpl
xchg
fisubrl
es
jg
ds
ficomps
dec
out
adc
xor
arpl
mov
iret
adc
dec
ret
add
inc
sub
xchg
add
dec
push
dec
xchg
mov
rcrb
icebp
pop
outsl
lret
int3
push
mov
sti
js
xchg
mov
pminub
xchg
mov
lret
bound
cmp
adc
jne
xchg
cmp
xchg
test
dec
and
les
sub
mov
clc
imul
cmp
hlt
out
movsl
adc
andb
pop
mov
daa
lret
push
and
push
push
inc
add
test
jl,pt
cltd
jb
add
mov
jne
loope
mov
push
lds
std
mov
out
sbb
xchg
das
in
in
dec
movsl
pusha
dec
ljmp
fildl
imul
dec
dec
outsl
sub
mov
sbbl
inc
pop
cmp
jge
dec
pop
addr16
mul
aaa
sbb
add
loope
push
lock
std
lret
stc
jne
mov
pushf
lea
ret
ret
into
mov
mov
or
fstl
adc
je
fildll
ret
pop
cmp
pushf
sti
jmp
inc
fcoms
arpl
std
mov
jmp
and
mov
mov
iret
ret
xor
sahf
fisubl
add
sub
push
sbb
syscall
cs
shrl
lods
and
cmp
sbbl
popa
icebp
push
enter
test
cli
test
xchg
sub
cmpb
cmp
mov
dec
sbbl
jp
inc
je
pop
int
and
call
out
ss
jbe
xor
mul
push
xor
icebp
or
inc
pusha
fstpt
call
xchg
stc
dec
add
sbb
lcall
out
inc
mov
inc
mov
jnp
fwait
dec
faddl
popf
repnz
jns
idivl
or
insl
out
mov
test
jo
sub
not
jp
push
adc
outsl
idivl
dec
fstps
repz
adc
les
call
fbstp
adc
lcall
and
scas
sbb
and
inc
shr
dec
scas
mov
jns
xor
jno
icebp
out
add
push
pop
lea
into
xchg
jecxz,pn
pop
xor
jp
pushf
roll
lods
repnz
outsl
bound
idivb
sti
mov
push
xor
test
enter
into
lock
xchg
fdivs
outsb
test
repnz
aas
ja
fcom
pop
test
sub
inc
push
insl
push
in
and
xchg
out
mov
cmpsb
jl
enter
icebp
sub
push
sar
push
scas
xor
loop
pop
add
outsl
es
cmp
inc
jmp
pop
dec
xchg
cwtl
push
test
shl
push
fnstcw
pop
sbb
test
mov
push
cmpsb
test
pushf
mov
add
mov
int3
ret
sbb
movsb
xchg
and
dec
imul
cld
repnz
out
push
push
adc
cmp
fdivrp
mov
cmpsl
in
cmp
js
xor
js
cmp
and
dec
ss
pushf
mov
rorb
cmp
cmp
and
dec
in
iret
xor
xchg
cmpsb
daa
adc
inc
addr16
addr16
xor
addl
stos
xchg
es
fadd
add
repz
js
mov
rorl
bswap
mov
jno
fiaddl
insl
cld
in
out
pop
jnp
xor
pop
fildll
sbb
jecxz
popf
inc
iret
push
or
test
decb
adcb
lods
arpl
repnz
adc
in
mov
lahf
scas
cmpsl
sbb
mov
push
dec
push
sbb
pusha
xchg
and
test
out
add
push
push
jbe
lahf
pop
cli
sub
int3
inc
mov
or
add
negb
mov
cmp
pop
in
mov
int3
fstps
mov
js
dec
and
dec
mov
mov
in
sub
xchg
push
mov
and
insb
jg
or
jno
and
int
push
xor
and
jg
orb
adc
testb
sahf
stos
sub
je
in
movb
int3
pop
sbb
cmc
fldl
movsl
jmp
or
jno
mov
sub
mov
xchg
pop
xlat
loope
les
enter
lret
cmpsl
push
jae
fdivl
jno
mov
add
leave
hlt
lock
pop
jnp
mov
cmp
adcl
nop
pop
dec
ret
iret
icebp
inc
and
push
sub
lods
fsubl
aam
gs
js
inc
mov
xlat
or
sub
jo
call
lock
add
lahf
mov
and
nop
in
movsb
jmp
ret
int3
mov
test
fsubr
ss
sbb
and
aam
dec
pushf
or
sbb
pop
mov
jbe
fimull
daa
outsb
imul
sarb
rclb
in
pop
imul
mov
sub
stos
jnp
ss
sub
xchg
xchg
out
xchg
jae
je
xchg
mov
xchg
push
sub
push
inc
mov
insl
out
inc
xor
je
cmp
dec
jecxz
mov
adc
cmp
int3
je
pushf
hlt
popa
jns
push
mov
je
loopne
sub
cmc
mov
call
data16
adc
scas
or
sub
js
dec
out
popf
add
push
add
inc
sub
dec
sbb
push
push
aas
into
loop
cmp
sarl
fildll
mov
mov
sahf
fcoms
out
xchg
aas
aas
scas
lcall
imul
imul
sbb
dec
enter
jo
push
out
stos
scas
mov
shll
inc
inc
dec
test
enter
aad
mov
sub
fs
movsb
in
mov
loop
rcl
mov
cltd
jle
outsl
mov
hlt
sub
out
fidivs
int
ret
cmp
pop
push
ss
sbb
movsb
push
dec
imul
mov
icebp
push
shrl
cmp
js
xchg
add
cmp
out
in
dec
mov
cmp
loope
fwait
pop
popa
and
adc
add
addr16
outsl
aam
pop
mov
sti
fiaddl
or
lods
sub
popa
adc
subl
inc
gs
out
dec
pop
rol
cs
js
cmp
pop
mov
fists
mov
fidivrs
bound
mov
or
lock
dec
ss
popl
jecxz
mov
shlb
inc
mov
scas
add
jnp
imul
jo
ja
pusha
cmp
sbb
dec
sahf
and
out
sbb
jmp
fstps
test
or
inc
jmp
sbb
dec
popf
xchg
les
push
mov
jno
int
dec
or
outsl
ja
xchg
mov
inc
adc
push
sbb
jp
in
adc
cmp
hlt
lahf
pop
rcll
nop
daa
push
cmp
outsb
push
in
dec
mov
enter
icebp
inc
jne
std
jbe
mov
inc
sub
mov
xchg
flds
dec
scas
inc
mov
movsb
fdivrl
push
xchg
shlb
rorl
push
and
repz
jbe
loope
push
mov
clts
sbb
xchg
scas
jno
lret
sbb
ja
mov
inc
cmp
pop
outsl
mov
iret
orb
and
xor
mov
out
mov
arpl
stc
loope
ljmp
push
add
jl
dec
stos
jle
lret
leave
gs
test
adc
xchg
mov
fs
les
xchg
and
les
mov
inc
add
xlat
sbb
imul
sbb
jmp
in
push
dec
es
shll
out
dec
fcmovbe
adc
dec
in
push
js
hlt
mov
js
popa
mov
std
xchg
mov
mov
fcos
jmp
rep
xchg
movsl
mov
dec
and
cltd
sub
mov
movsl
xchg
sbb
test
mov
pop
mov
testb
mov
test
cmp
or
cltd
mov
pop
pop
xor
jo
popf
adc
outsb
sbb
push
movsb
fimuls
rolb
adc
sub
xchg
jmp
fimuls
mov
mov
scas
mov
sbb
xor
cmpb
lods
dec
adc
mov
data16
adc
mov
arpl
into
xlat
adc
sbb
cld
jp
jae
mov
aas
cli
mov
dec
sysenter
pop
add
pop
xchg
mov
xchg
subl
out
sbb
mov
movsl
fwait
bound
loope
movsl
xchg
incb
iret
jb
and
mov
xchg
xor
xor
adc
or
ja
jbe
loope
cmp
out
mov
adc
mov
fninit
jbe
aaa
xor
insl
call
sub
aas
push
mov
enter
or
fimuls
insb
cltd
mov
lock
and
mov
insl
mov
dec
adc
mov
pop
dec
and
mov
ss
mov
adc
loope
push
adc
inc
fisubl
leave
inc
sar
je
mov
sbb
or
out
cmpsb
out
adc
stos
das
sub
hlt
jae
nop
test
nop
jne
dec
imull
fbstp
movsb
pop
es
daa
dec
and
mov
fs
lods
test
ja
sub
rep
mov
mov
inc
or
cmp
push
cld
fisubrl
divl
push
inc
xchg
mov
push
lahf
cwtl
fisubrl
mov
out
scas
inc
mov
insb
sbb
lahf
fs
jecxz
decl
xchg
push
int3
dec
hlt
sbb
sarl
stos
mov
repz
dec
mov
and
mov
pop
xor
mov
and
scas
fwait
lods
cmp
push
adc
mov
dec
xor
xor
orb
mov
cli
push
insb
adc
mov
xor
sti
pop
ret
icebp
push
sbb
dec
mov
popa
mov
in
test
lods
movl
pusha
push
and
shlb
pushf
sahf
dec
inc
mov
mov
jg
lods
repnz
test
ljmp
sub
movsb
adc
fs
mov
inc
push
jns
push
sti
jg
sbb
jb
pop
ret
xor
jl
jbe
lahf
jge
mov
imul
fsts
sub
popf
fs
jns
icebp
in
movsb
pop
out
ss
pushl
xchg
scas
cld
push
mov
std
jecxz
jmp
jl
rcr
pop
test
pop
adc
jne
std
pop
out
stc
inc
xor
rorl
scas
sub
and
jmp
pop
lods
inc
mov
pop
test
outsl
cmpsl
cmpsb
adc
in
sbb
aas
cld
call
lcall
mov
xchg
xor
jne
push
test
mov
cmp
adc
das
adc
popf
pop
addb
je
stos
push
push
push
mov
ja
inc
sarl
addb
dec
daa
lods
cltd
rcll
jae
xchg
inc
pop
xchg
mov
dec
stos
pop
js
xchg
xor
inc
xchg
and
jle
push
sarb
lcall
inc
xor
int
fdivl
mov
movsb
fnstsw
push
test
movsb
repz
push
stos
xor
jle
dec
imul
push
inc
xchg
jl
pop
mov
loopne,pt
mov
add
sahf
rorb
sbb
or
cmovbe
or
jno
adc
mov
mov
testb
shlb
js
cmpsb
push
mov
jne
cltd
push
jmp
adc
sub
adc
sub
lods
sbb
jns
in
xchg
ja
add
adc
leave
push
sub
xchg
jae
out
in
addr16
cmp
and
inc
push
aam
push
es
jae
jb
repnz
adcl
aas
cld
cmp
dec
xlat
test
in
inc
out
push
popf
sbb
jb
push
repnz
add
sub
aad
dec
inc
lds
jo,pt
jmp
rcr
rolb
sbb
arpl
addr16
and
in
in
pop
mov
cmp
sub
pop
popf
stc
sub
lock
mov
fstl
in
fsubr
xchg
add
mov
and
pop
and
fdivrs
sub
popf
cmp
cs
mov
dec
popa
pop
mov
jg
sahf
pop
mov
enter
pop
mov
inc
mov
push
mov
mov
hlt
sahf
pop
xlat
and
movsb
mov
lahf
rcll
cmpsb
pushf
gs
sbb
mov
add
xor
popf
mov
clc
adc
xor
clc
xchg
arpl
outsl
mov
scas
inc
lcall
sbb
lods
roll
push
mov
mov
sbb
mov
jns
leave
dec
cmp
dec
jae
shlb
adc
jns
sub
pop
sub
xchg
pop
push
jnp
xchg
push
movsb
and
pop
push
rep
xchg
andl
icebp
out
inc
sbb
sbbb
out
mov
iret
or
mov
sahf
insl
inc
sti
movsb
shr
cltd
mov
inc
xchg
int3
lods
pop
inc
xchg
cs
mov
xchg
je
in
and
and
jmp
sbb
xor
fsubr
fmull
pop
push
mov
or
daa
inc
sbb
push
hlt
sub
inc
mov
mov
pop
decl
cmp
lret
out
push
sarl
push
sub
daa
cwtl
daa
insb
shll
push
inc
cld
repnz
mov
das
cld
shlb
add
cs
mov
mov
out
leave
imul
mov
lahf
pusha
jnp
push
test
scas
mov
inc
mov
cmp
in
fstpl
pop
jnp
jl
mov
popa
mov
hlt
inc
push
mov
scas
lret
int
std
jne
bound
movsb
and
jmp
leave
lahf
jg
aas
es
es
and
call
in
cmp
mov
outsb
scas
ss
repz
dec
pusha
pop
aas
hlt
pop
add
outsl
sbb
inc
repnz
int3
mov
sub
pop
cld
mov
insl
jl
pushl
mov
and
xor
adc
faddl
repz
jl
sub
xchg
inc
fwait
push
sbb
stos
cld
stc
subl
sarl
inc
mov
mov
xchg
cmp
out
push
jmp
cmp
sub
jge
movsb
xchg
adc
push
inc
add
ret
push
and
push
cmpsb
dec
inc
adc
or
inc
push
aam
sarb
pinsrw
sbb
dec
fbstp
or
dec
xorb
xor
push
and
sub
movsb
push
xchg
divl
stc
cmp
lock
or
jae
and
bound
dec
mov
and
sbb
cmpsb
mov
bound
mov
mov
popf
inc
or
cld
dec
inc
mov
jecxz
subb
loopne
aas
sub
notb
push
cld
outsl
jge
xor
push
sub
pushf
lahf
rolb
jl
xchg
nop
cmp
ljmp
popf
cmpsb
cmp
xchg
aas
mov
call
mov
cmpsb
mov
inc
out
jne
stc
jle
mov
jge
add
push
leave
mov
aam
add
icebp
lahf
and
cmp
adc
cmp
jne
push
inc
jg
mov
ficoml
in
dec
call
push
repnz
adcb
iret
fimull
xchg
adc
sbb
xor
pop
mov
pop
outsb
pop
mov
dec
xor
xor
inc
pop
fisubrs
arpl
cmp
mov
gs
ja
mov
ds
push
dec
int3
movl
xchg
mov
jbe
and
push
leave
xlat
scas
sahf
orl
std
jmp
fwait
pusha
rorl
dec
outsb
test
push
loop
shrb
cltd
pop
jne
and
fstpl
aam
mov
push
pop
cmp
scas
shrl
int3
lahf
lds
call
sub
rcrl
mov
ljmp
sub
pop
mov
jmp
bnd
inc
mov
xchg
adc
or
pop
sub
test
jg
fdivs
test
fwait
imul
fcmovnbe
ds
push
lcall
jge
stc
cmp
adc
inc
inc
fst
lret
push
pop
iret
sbb
sub
into
jbe
sbb
and
push
fs
cmpsl
add
ss
and
mov
adc
mov
xor
popa
jne,pn
xchg
pop
jle
xor
scas
fst
jmp
mov
sub
into
fidivl
cmp
mov
dec
xchg
fucom
or
mov
stos
mov
lods
inc
stos
mov
mov
and
hlt
stc
daa
ret
dec
hlt
jbe
cli
stc
sub
mov
jnp
inc
and
int
push
aad
popa
ret
mov
jp
jge
fisubs
imul
jbe
pusha
sbb
je
dec
jnp
ss
ljmp
insl
dec
cld
ljmp
push
jl
loopne
mov
xor
ret
or
or
cmc
div
loope
cmpsl
inc
std
lret
inc
hlt
imull
leave
cli
test
in
lods
cmpsb
ret
dec
cmp
negl
divl
sbb
jmp
in
mov
xchg
mov
fmulp
xor
mov
dec
shrl
mov
jecxz
std
rolb
insb
add
push
cli
inc
aas
dec
jp
in
xchg
cmpb
cmp
loopw
or
outsl
pop
inc
arpl
mov
and
fnstsw
inc
cmp
push
dec
daa
loope
ss
aam
jnp
fwait
dec
dec
push
mov
filds
xchg
dec
mov
mov
cmpsb
cmp
jge
enter
xchg
sbb
shrl
je
xor
or
mov
mov
inc
sub
jmp
pop
push
es
or
addr16
cltd
pop
stos
mov
push
fists
cmc
fadd
cs
dec
pop
divb
leave
cmp
subb
mov
imul
ljmp
dec
das
out
jae
dec
rclb
sub
cld
push
pop
pop
xor
adc
jg
dec
jae
ret
lcall
or
cwtl
mov
xchg
xor
inc
xchg
adc
pushf
mov
lods
fwait
xchg
les
cmc
push
call
in
xor
movsb
sub
inc
mov
push
je
or
roll
cmp
push
arpl
in
jmp
adc
push
cmc
sub
sbb
jle
mov
ja
and
vmread
jbe
and
xor
pop
dec
add
call
stos
adc
imul
fcompl
lods
and
and
sahf
pop
ret
sub
xor
xor
popa
pushf
fsubl
add
mov
outsl
and
stos
or
addr16
add
inc
jb
push
dec
or
das
inc
aaa
jb
ss
in
iret
repnz
es
lahf
pushf
mov
cs
jne
sbb
mov
lea
xchg
lock
add
fsubrp
stos
push
jns
xor
scas
cmp
cmpsl
dec
adc
fmull
mov
inc
jecxz
inc
jnp
imul
mov
push
loop
pop
inc
adc
xor
sub
aaa
mov
or
mov
and
addb
cs
inc
push
loope
iret
imul
fiadds
pop
pop
adc
test
sbb
cltd
rorb
filds
sti
jbe
dec
insb
in
xchg
inc
dec
mov
pop
pop
sub
mov
loop
mov
xchg
rolb
test
push
xchg
nop
sbb
and
daa
sbb
test
insl
daa
cmc
jl
dec
mov
test
or
mov
add
stos
shrb
sub
in
add
shrb
sub
lret
nop
scas
pop
xor
mov
add
add
dec
sub
scas
mov
adc
mov
flds
xchg
push
mov
push
cmp
push
addr16
add
inc
imul
test
out
sub
mul
mov
shl
jae
adc
lcall
pop
fnstcw
sub
push
add
adc
imul
cmpb
and
mov
cwtl
jmp
mov
push
imul
jle
push
addb
adc
insb
sbbl
in
nop
loope
in
inc
sahf
inc
mov
xchg
dec
jp,pn
js
jp
add
cmc
inc
mov
dec
mov
jmp
shll
sbb
insl
out
pop
sbb
add
test
bound
das
inc
fldt
xlat
and
xchg
jo
or
cmpsl
lods
xchg
movsb
push
sbb
push
xor
pminsw
dec
aam
add
aas
xchg
xchg
inc
mov
dec
scas
loope
repz
dec
jl
add
mov
test
cld
mov
jl
xchg
loop
mov
mov
ficompl
xchg
jl
adc
je
filds
cmp
pop
add
mov
or
xchg
test
lahf
inc
aas
adc
pushf
imul
negb
mov
insb
cmp
sub
jno
fwait
xor
mov
jmp
cmp
sbb
mov
fidivl
imul
je
stos
xlat
imul
xchg
mov
adc
sbb
out
jp
inc
and
xor
cmp
ja
sbb
jp
jo
inc
maxps
jmp
in
mov
xor
pop
dec
adc
and
pop
cmp
lahf
xor
xor
movsb
sub
add
ret
sbbl
inc
mov
out
daa
repz
mov
cmp
loope
push
or
repnz
fwait
xlat
mov
fidivrs
add
movl
mov
mov
cmp
add
sti
dec
je
cld
call
adc
popa
jge
imul
stc
or
fstpl
cmpsl
xor
imul
sub
xor
mov
sub
mov
pop
mov
dec
inc
jno
ret
insl
pop
cmpb
and
test
ljmp
dec
lahf
dec
dec
jbe
out
dec
ljmp
mov
cmp
or
dec
mov
lcall
dec
pop
push
inc
fscale
lahf
dec
jmp
or
popw
movsb
cli
jge
jl
in
test
cmp
das
icebp
mov
xchg
mov
inc
popl
insb
adc
or
imul
cmp
into
pop
dec
std
cmp
mov
sub
fsubrs
mov
push
xor
dec
out
idiv
xchg
add
mov
sub
es
outsl
loop
jmp
stos
xor
dec
dec
dec
push
push
int
jmp
sub
dec
insl
cmp
push
xchg
mov
mov
lahf
dec
jnp
jge
pop
xchg
mov
clc
ret
mov
es
sbb
sbb
ljmp
aas
and
jno
xor
repnz
int3
pop
and
in
ret
cmpsl
cmp
pop
lret
cmp
push
mov
lock
push
lods
sub
xor
in
dec
xor
or
xchg
out
mov
addr16
add
cmpb
out
adc
pop
and
inc
sub
sub
fsubs
movsl
xchg
sub
cwtl
push
and
lret
popa
dec
pop
lret
mov
inc
xor
mov
mov
adc
xlat
sub
push
addr16
mov
push
cs
xor
adc
mov
insl
xchg
out
mov
outsb
or
mov
push
fistl
negb
cmp
xor
outsb
je
pop
sub
jecxz
outsl
jmp
jb
in
mov
icebp
or
in
dec
test
mov
scas
sarb
jl
adc
mov
sbb
xchg
mov
das
je
jmp
xor
test
push
sbb
test
cmpsb
inc
loop
daa
cmpsl
stos
xor
adc
aam
jnp
gs
adcl
mov
pop
call
stos
arpl
and
cmp
and
insl
or
xlat
jno
mov
out
clc
data16
lea
mov
mov
icebp
sbb
mov
inc
mov
jno
adc
movsl
pop
fsts
lret
cmp
movsl
daa
int3
push
mov
adc
out
gs
in
mov
mov
bound
xchg
jp
and
xchg
jnp
mov
hlt
aam
sub
mov
dec
or
dec
sbb
and
cwtl
and
or
xchg
outsl
je
xchg
and
fsubs
ret
adc
or
sarb
aas
movsl
push
pop
gs
icebp
inc
nop
js
mov
loopne
sahf
sbb
push
jp
rcl
iret
lods
push
scas
add
mov
or
leave
hlt
fdivp
cmpb
xor
jnp
mov
sbb
outsl
mov
mov
pushl
rclb
in
out
and
jecxz
sahf
test
xor
lret
xchg
mov
test
fsubl
fbld
push
dec
rol
pusha
frstor
sbb
jb
dec
push
dec
gs
fstl
push
in
gs
imul
push
push
sbb
add
sub
aad
push
pop
sbbl
shll
and
mov
fsubr
js
jl
in
mov
ljmp
xor
int
sti
or
out
clc
sbbb
mov
test
jle
out
push
sbb
shlb
fimuls
out
aas
mov
dec
cmp
call
adc
or
repz
je
sbb
clc
aas
fsubrl
inc
sub
xchg
repnz
xchg
sub
mov
aam
push
pop
repz
hlt
sub
test
pop
mov
xchg
cli
ljmp
cmp
inc
icebp
mov
inc
inc
xchg
movsb
jl
push
in
cltd
add
xor
and
dec
jle
es
lock
cmp
movq
and
in
out
jmp
rcrl
dec
sub
pop
ret
push
inc
ss
sti
inc
or
out
cmpsl
or
dec
popf
xchg
jg
in
mov
push
jl
iret
sub
mov
out
sub
jp
lock
adc
and
outsb
rol
push
fists
mov
and
sbb
push
es
pop
cmp
stc
in
add
mov
lds
stos
push
rolb
int
xchg
ljmp
mov
adc
shll
das
fcompl
sub
pusha
andb
cs
sbb
movl
pop
imul
xor
mov
aas
aam
mov
loop
jmp
loop
dec
popa
sbb
movsb
adc
xor
fldl
and
push
and
pop
xchg
out
jns
sbb
call
jne
pop
sub
jmp
inc
pop
enter
xor
int3
inc
inc
lret
fdivrl
scas
out
dec
pop
loopne
pop
hlt
sub
xchg
push
inc
jle
icebp
cmp
cmp
push
and
js
push
xor
inc
jo
sti
mov
sbb
sub
and
xorl
mov
test
mulw
jmp
fildll
sbb
lods
mov
push
scas
loopne
sub
test
cli
std
lds
mov
loop
pop
test
cli
push
and
xchg
ljmp
int3
inc
mov
ret
sub
mov
lods
aas
aas
addl
enter
repnz
sbb
cmp
mov
add
xchg
ss
lods
mulb
addl
bound
push
mov
sub
repz
dec
mov
xchg
pop
out
dec
jb
fldcw
xchg
out
inc
or
test
stc
xor
scas
dec
xor
insl
adc
psubw
add
je,pt
js
dec
pop
adc
dec
repz
jae
dec
outsl
ret
or
mov
repnz
cld
mov
push
mov
arpl
stc
fldcw
adc
imul
mov
negb
fsubrl
shlb
call
mov
jge
inc
cli
mov
js
adc
insb
xor
in
mov
pop
rolb
xchg
mov
adc
dec
cmc
into
inc
inc
sub
push
or
scas
xor
in
dec
loop
cmpsl
mov
jmp
fsubrs
dec
pushf
int3
outsb
hlt
jg
inc
adc
cltd
shrb
jb
mov
cmp
push
add
mov
inc
int
xor
push
mov
mov
rep
jge
loop
jmp
xor
pop
test
in
add
mov
jns
fdivs
push
imul
mov
shl
out
test
mov
aad
gs
outsb
jbe
push
sub
mov
sub
aas
addr16
inc
rcrb
pop
or
std
mov
addl
adc
and
shrb
sbb
rcrb
jge
cmp
or
imul
mov
rclb
push
fadd
mov
stos
mov
cmp
fldl2e
xchg
enter
and
lock
das
call
push
and
outsl
ljmp
mov
stc
test
loopne
mov
ja
push
xchg
lret
mov
cld
jns
cmpsl
dec
mov
mov
das
add
and
pop
outsb
mov
jb
cmp
popf
cli
rolb
push
popa
jae
nop
mov
xor
xor
icebp
flds
xchg
sti
mov
fsubl
sub
xor
stos
scas
aaa
je
arpl
or
and
enter
mov
xor
xchg
outsb
rcll
outsl
xchg
ja
ret
add
into
mov
mov
fnstcw
dec
sub
pop
ret
aam
pop
and
pop
bound
data16
cmp
fs
xchg
push
scas
dec
imul
or
cld
pop
jb
xchg
mov
cmp
dec
xor
mov
and
jno
mov
shl
arpl
fwait
push
mov
dec
push
popf
dec
mov
ljmp
into
std
int
mov
xchg
sbb
js
in
xchg
cmp
shll
mov
adc
out
fwait
xchg
test
xchg
outsb
arpl
mov
jmp
or
xor
pop
nop
cmp
ret
scas
in
arpl
dec
in
jle
in
outsb
push
scas
sub
mov
lea
push
es
inc
outsb
leave
insl
sbb
mov
addr16
xchg
in
movsb
push
push
mov
pop
sub
js
sbb
inc
or
call
adc
mov
ds
adc
jp
fsubrs
jle
mov
ljmp
and
insl
loopne
scas
rcrb
or
js
jecxz
xor
push
scas
cwtl
inc
push
sbb
ds
dec
pusha
imul
lcall
outsb
sub
hlt
andb
fadd
xlat
hlt
addl
and
ror
fmulp
mov
stos
push
iret
dec
arpl
xor
dec
pop
outsb
subb
call
in
scas
lret
loope
cwtl
stc
test
es
je
pop
inc
jmp
inc
sahf
fldt
mov
andl
dec
test
mov
pop
jo
cld
sbb
add
ljmp
bound
add
lret
sub
push
sub
std
lahf
mov
fisubl
aad
sbb
cwtl
popf
add
in
jno
mov
jbe
aad
stos
cmp
pushf
pop
sub
mov
or
testb
lods
add
or
out
pop
mov
mov
adc
imul
mov
cwtl
push
xchg
fdivrs
inc
sub
rorl
mov
popf
das
adc
daa
pop
mov
cltd
or
pop
cmpsl
or
mov
ret
inc
cmp
sbb
scas
cli
mov
push
lret
and
std
fstps
sahf
xlat
gs
xchg
xor
leave
loop
xchg
jae
and
ljmp
xchg
jbe
pop
sub
xlat
xchg
popa
push
xlat
adc
inc
mov
mov
cmpl
sti
jmp
dec
addr16
test
into
inc
push
or
inc
and
shlb
mov
scas
movsb
push
sub
aaa
data16
enter
xchg
sbb
repnz
push
pop
pop
loope
jl
rolb
int3
pop
cmp
xor
ret
outsl
sub
stos
pop
aad
dec
and
je
mov
pop
adc
mulb
dec
dec
sub
xchg
adc
xchg
add
jbe
insl
rorb
cmp
fsub
lret
repnz
mov
jmp
dec
decl
xchg
xor
nop
mov
shll
jae
pop
push
ss
mov
je
adc
incb
outsb
or
aas
int
daa
jp,pn
pop
jl
dec
sti
mov
cmp
push
shll
mov
jmp
loope
xlat
stos
pop
imul
imul
in
add
lods
mov
mov
gs
xor
call
fld
mov
data16
enter
push
movsl
dec
or
inc
mov
xor
inc
xor
into
bnd
adc
pop
xchg
jae
iret
mov
test
jae
pop
loope
sbb
cmp
stc
cmp
arpl
dec
das
dec
outsl
mov
pop
ret
jl
or
sub
mov
pop
mov
mov
call
push
sbb
xchg
inc
arpl
inc
adc
das
cmp
jns
mov
jl
stc
sarl
inc
xor
clc
cmc
mov
fldl
stos
xchg
lods
subl
movsl
adc
bound
into
push
jle
cmp
lea
cmp
popa
inc
or
js
push
mov
in
js
cld
or
mov
dec
sub
mov
addl
mov
push
imulb
jecxz
push
inc
dec
dec
mov
sbb
and
xor
dec
in
pusha
andb
adc
int3
rolb
or
fs
and
int3
push
in
aaa
and
mov
paddusw
mov
nop
dec
xor
scas
mov
rclb
mov
push
xchg
xchg
adc
lcall
cmp
jge
in
ret
push
ret
jmp
ret
outsl
xchg
xlat
mov
das
or
add
mov
dec
adc
pop
fcomps
ret
repz
cmpsb
cli
in
data16
mov
and
cmp
adc
xchg
iret
pop
insb
test
add
fcoml
adc
out
xchg
inc
imul
stos
cmp
fdivs
cwtl
add
ljmp
popa
stos
lds
adc
push
dec
inc
cmp
loope
ljmp
fs
pop
xor
dec
or
inc
xor
xor
or
pop
lret
or
loop
gs
mov
cmc
insl
inc
dec
cmp
xchg
cmp
push
push
cmp
ret
test
pusha
scas
xchg
pop
and
fnsave
sub
sarb
ficompl
dec
jnp
mov
js
sbb
mov
fsubrs
mov
mov
cmp
lods
adc
arpl
mov
adc
push
mov
sbb
adc
push
xor
inc
aas
cmpsl
js
xor
jns
mov
scas
jge
pusha
dec
bsr
iret
pusha
mov
jbe
mov
repnz
test
cld
xor
mulb
rorb
in
inc
mov
pop
jg
cmp
popf
scas
cmp
shrb
jl
cmp
test
sub
dec
pop
jge
outsl
cmpl
arpl
in
icebp
sub
and
jne
movsl
xor
inc
mov
into
cwtl
insb
cmp
mov
xchg
mov
test
push
out
push
pop
adc
rorb
nop
mov
adc
lds
leave
xchg
addl
dec
stc
or
dec
cmpsb
popf
add
.byte
.byte
mov
adc
add
pop
lea
and
rorb
or
popf
adc
scas
out
dec
add
inc
mov
fiaddl
movsl
sub
iret
add
mov
test
and
in
cltd
stos
outsl
mov
add
xor
add
fucomi
sti
in
ret
push
outsb
adc
repnz
xchg
loopne
xchg
dec
inc
lret
lret
lcall
ljmp
or
data16
push
outsl
sub
cmp
mov
adc
xchg
fwait
cld
push
shr
ss
mov
mov
pop
insb
movsb
mov
and
in
mov
jb
lahf
push
btc
adc
mov
sbb
add
ret
pop
jp
xor
cmp
mov
gs
xor
aaa
mov
xor
pushf
lcall
addr16
cld
push
rolb
jae
cmpsl
lds
pop
js
add
test
add
or
push
mov
sbb
pop
mov
mov
mov
mov
sahf
and
mov
ja
in
shl
fimull
and
pop
loopne
mov
cmpsb
imulb
out
cli
add
stc
inc
enter
fidivrl
in
loop
dec
insb
pop
fs
aas
jb
dec
xorl
in
data16
mov
inc
scas
lret
shlb
stos
decb
jmp
cmp
add
arpl
mov
inc
jae
push
mov
pop
fwait
mov
jnp
cmp
sbb
pop
mov
push
aas
popf
cmpsb
in
gs
arpl
sti
xchg
cs
mov
popf
dec
sub
or
ss
push
add
push
scas
mov
cmp
ljmp
outsl
jb
loopne
lret
sbb
mov
dec
popa
das
jge
dec
movsb
loop
sub
jne
ljmp
enter
pop
scas
add
mov
xor
loope
xor
shrl
sbbb
lock
sub
fiaddl
push
xor
mov
mov
lcall
std
insl
mov
movsb
add
pop
sbb
xchg
pop
xor
fisubs
add
xchg
cmpsl
adc
rolb
jmp
aaa
cmp
jmp
or
icebp
sti
imul
call
mov
or
add
outsb
pusha
or
pop
data16
dec
out
push
fldt
out
add
es
push
enter
mov
cld
in
fisubs
stos
or
ljmp
pop
mov
repz
cltd
or
xor
xchg
lret
and
pop
andb
cmpsb
adcb
iret
push
sti
mov
roll
mov
mov
or
fwait
sahf
imul
push
movsb
dec
mov
or
pop
and
mov
mov
and
nop
adc
mov
push
mov
mov
in
push
lcall
dec
andb
popf
out
lret
repnz
out
das
or
lods
inc
jge,pt
leave
or
hlt
jae
frndint
xor
test
fistl
cli
or
fdivs
xorl
jp
ljmp
jle
gs
rcl
into
js
outsb
or
jbe
mov
loope
sub
lahf
fs
push
lea
pop
imull
shlb
xchg
divb
cmp
jns
ljmp
mov
mov
mov
add
adc
push
push
ljmp
test
xchg
xor
push
adc
add
add
push
test
cld
cmp
std
sub
add
incb
mov
dec
lock
iret
fstl
leave
jb
adc
jno
outsl
mov
cmpsl
imul
cmp
lahf
xrelease
xlat
sbb
mov
inc
inc
pop
push
insb
sbb
aaa
mov
insl
lret
mov
ret
inc
mov
push
jp
ficomps
rorl
xor
lcall
int
ja
pop
inc
repz
xchg
mov
cmp
das
adcb
cwtl
pop
ljmp
out
jle,pt
fwait
xchg
cltd
xor
and
cmp
cmp
jge
xor
imul
fldcw
jnp
mov
or
fs
shll
into
loop
lret
adc
out
mov
adc
testb
mov
jge
repnz
int
repnz
aam
nop
add
nop
push
dec
or
cmp
or
cmc
ret
or
cmpsl
mov
outsb
test
subb
repz
aad
push
jbe
mov
and
or
push
inc
or
pushf
hlt
add
xchg
cld
lret
cmp
daa
test
mov
add
xchg
pop
mov
cmp
addl
js
mov
sbb
movsb
jnp
xchg
js
dec
pushf
out
aaa
add
or
insb
sub
popl
sti
push
pop
mov
jl
insl
and
dec
push
pushf
ljmp
sub
sub
mov
inc
cld
push
pushf
ljmp
jns
fidivrs
mov
adc
sti
dec
pop
xlat
insb
rolb
inc
cmp
and
stc
fsub
test
cmp
push
mov
pop
jecxz
fldcw
push
iret
sar
cmp
out
pop
xchg
daa
icebp
cmpsb
jae
clc
insl
push
repz
ds
xchg
xor
dec
xchg
shl
xchg
addr16
test
xchg
daa
dec
std
pop
stos
inc
sbbl
mov
jbe
cld
inc
cmp
xor
call
test
cli
mov
jl
jmp
das
fimuls
inc
pop
lods
fwait
lods
test
or
adc
icebp
xlat
fwait
popf
mul
mov
mov
int3
imul
mov
mov
addr16
xor
mov
xchg
aam
fstp
mov
push
fs
xor
mov
or
mov
push
mov
fwait
in
ljmp
jmp
fisubl
clc
dec
xchg
inc
js
mov
out
push
mov
roll
mov
loope
mov
loopne
push
pop
mov
fiadds
push
cmp
cmc
notl
fldt
les
dec
sarb
dec
mov
mov
sti
and
add
sbb
xor
fnsave
rcrb
xor
je
xchg
cmp
mov
add
data16
xchg
inc
scas
cmp
rcr
les
mov
adc
divb
jno
cmp
imul
mov
add
ja
nop
dec
imul
pop
mov
scas
lahf
rorb
lret
inc
fucomi
sahf
push
and
sbbl
nop
rcrl
adc
and
aad
xchg
les
cmp
addr16
shrl
jae
xor
mov
dec
sub
and
dec
jns
pop
call
decb
adc
jns
sbb
push
lea
adc
jecxz
jb
hlt
push
xchg
adc
cmc
out
ljmp
in
test
xchg
shrl
adc
repnz
hlt
out
mov
pushf
je
fadds
and
outsl
sbb
popa
add
add
push
xor
ret
inc
mov
jle
xor
fistpll
in
dec
loope
std
and
or
jnp
cmpl
cli
xor
lahf
sbb
aas
test
add
mov
shlb
stos
sub
ljmp
es
mov
insl
les
jo
int3
rcr
cmp
sbb
pop
insl
pop
jge
sub
jp
xchg
push
cmp
mov
fsubrl
idiv
pop
insb
pop
xchg
repnz
jecxz
outsl
test
pop
xor
call
cmp
xor
ljmp
sbb
pop
cli
jle
add
cmpsb
icebp
mov
leave
stos
xchg
pop
insl
repnz
out
cmp
repz
jmp
aam
mov
das
fcoml
push
dec
inc
loope
out
add
clc
sbb
xor
std
testl
int3
adc
mov
mov
sbb
jl
lods
jecxz
movsb
mov
mov
push
rorl
sbbb
push
sahf
test
outsb
pushf
std
mov
inc
mov
popa
and
sub
or
mov
fldl2e
ficompl
cmpsb
jle
pushf
fldl
test
dec
push
scas
negl
mov
add
xchg
and
aaa
ss
pop
xchg
dec
mov
fistl
xchg
add
out
push
inc
xchg
divb
push
and
cli
mov
je
jo
xor
subb
jnp
add
pushf
aaa
sbb
or
dec
sbb
stos
mov
test
lods
or
scas
test
loopne
xorb
mov
push
mov
mov
mov
xchg
cmpsb
sbb
push
lods
adc
xor
inc
push
sub
rcl
lret
stc
inc
cmpsb
cmp
jno
push
movsl
or
je
and
ret
sub
mov
ljmp
in
cmp
xorb
es
xor
fcoms
xor
in
push
pop
scas
repz
jp
adc
stc
test
dec
aad
push
dec
xlat
ljmp
dec
xlat
add
sbb
sbb
sub
jne
lds
add
das
ret
ret
aaa
sarl
dec
int3
jo
in
add
lea
xchg
iret
inc
mov
add
push
jge
xor
shll
inc
cmp
inc
cmp
bound
push
jbe
packsswb
mov
mov
or
stos
test
jno
int3
lahf
or
mov
jno
mov
test
mov
add
push
jecxz
pushf
jp
xor
mov
xchg
jge
and
push
sbb
inc
int
outsl
fldl
shrl
rclb
xchg
popa
jns
movsl
mov
lods
stos
jle
cmpl
out
js
shl
add
or
jo
jo
fldl
aas
outsl
pushf
jge
fnsave
xlat
js
xor
in
or
addb
jne
xor
rcrb
inc
cmpsb
push
or
and
orb
das
je
pushf
sub
mov
dec
movsb
aad
jae
pop
fbld
pusha
push
dec
xchg
jns
cmp
in
xor
pop
leave
xlat
pop
test
adc
rcr
push
enter
jmp
call
and
in
loopne
xor
jb
enter
xor
ss
pushf
push
add
or
fisttps
sarl
push
ret
jae
mov
cltd
stos
cwtl
out
add
jle
test
inc
inc
pop
xchg
outsl
ds
iret
cmpsl
jg
jbe
pop
mov
pop
jmp
call
hlt
cmpsb
mov
aaa
imul
mov
push
shlb
pop
and
jnp
jle
insb
test
sti
repz
insb
or
and
mov
xor
fucomp
pop
sub
pop
inc
pop
outsb
mov
cmp
or
lds
mov
sub
inc
xor
iret
orb
das
movsl
pop
imul
cli
aaa
xchg
cmpsb
mov
cs
lret
sbb
cmpsb
xor
xchg
cltd
shll
stc
push
cmp
add
test
dec
out
pop
mov
jl
mov
roll
cwtl
xchg
dec
sbb
dec
or
in
xor
jb
push
xchg
mov
or
push
push
lcall
scas
pop
mov
xchg
xor
jle
es
aas
insb
pop
xor
repz
nop
and
inc
adc
add
dec
add
mov
cmp
pop
popa
mov
mov
pushf
addr16
fucomip
adc
cmp
iret
pop
mov
adc
out
data16
call
mov
popf
adc
push
xor
nop
xchg
pop
insl
add
sub
jl
sbb
jmp
test
addr16
ljmp
mov
outsb
pop
leave
jbe
sub
out
les
or
lret
add
std
sbb
inc
addr16
orb
inc
dec
mov
lods
pop
mov
mov
popf
addr16
in
loopne
lcall
xchg
cmpl
repz
fld
xor
mov
pop
mov
shll
push
xlat
mov
mov
mov
dec
inc
xor
and
test
stc
testb
nop
ljmp
mov
test
data16
.byte
push
add
inc
add
rolb
nop
inc
add
rolb
add
add
add
add
dec
add
subb
add
inc
add
orb
add
pop
add
addb
add
add
add
add
add
add
add
pop
add
addb
add
add
add
add
add
add
add
outsb
add
sbbb
add
add
add
add
add
add
add
jbe
add
jle
add
mov
add
add
add
add
add
add
add
clc
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
cmp
add
movsb
icebp
add
add
add
in
add
add
add
movsb
mov
add
in
add
add
add
movsb
in
add
add
add
in
add
add
add
movsb
out
add
adc
add
in
add
add
add
mov
add
fadds
add
in
add
add
add
pop
add
add
add
dec
add
add
add
add
add
dec
add
inc
add
add
inc
add
add
inc
add
inc
add
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
sbb
mov
adc
and
cmp
fwait
pop
daa
sub
jge
adcl
and
out
push
and
mov
sti
and
sub
push
xchg
lods
sti
sub
pop
mov
and
dec
movsb
imul
ja
jae
mov
pop
movsb
jno
and
mov
push
inc
mov
pusha
add
push
fcompl
scas
in
mov
jns
imul
fcmovb
ja
pop
sbbl
mov
xor
out
adc
lret
add
into
jmp
incl
dec
pop
loop
insl
fcoms
ret
in
test
add
jp
orb
stos
xor
out
mov
and
fiadds
lcall
out
dec
jb
mov
add
leave
cltd
inc
or
adc
and
mov
add
mov
and
mov
dec
ja
mov
out
adc
addl
std
stc
push
inc
loope
xor
push
mov
inc
call
sub
mov
xor
inc
cltd
movsl
adc
dec
adcb
jae
push
sahf
push
fwait
push
sbb
xchg
clc
sti
movsl
xor
add
ret
shlb
mov
inc
and
cwtl
in
mov
push
mov
int
test
mov
or
add
sub
jo
jns
xchg
jecxz
lret
adc
push
or
rol
cli
jmp
cmp
xchg
adc
pushf
lret
adc
lock
jl
popa
add
inc
pop
mov
adc
add
mov
out
pop
test
leave
add
nop
sbb
mov
fldt
jl
pop
lcall
test
cmp
inc
arpl
add
imul
mov
xchg
dec
push
sbb
mov
xor
xor
std
jge
cmc
daa
jno
xchg
dec
push
lds
push
insl
mov
sub
sub
add
dec
pop
in
mov
or
ror
test
rcr
adc
mov
stos
imul
and
push
push
js
inc
decb
loop
bound
mov
repz
incl
dec
adc
pop
iret
lret
aas
aaa
jbe
mov
mov
popa
leave
mov
cmpsl
stos
inc
xadd
lods
push
pop
push
rcrl
mov
out
fs
jmp
jg
inc
cmp
out
outsl
std
mov
xchg
mov
adc
scas
xor
add
cmp
and
das
ret
test
push
cmp
xchg
pop
mov
xor
and
jmp
jmp
add
loope
adc
rcrb
push
or
jne
jl
xchg
cmp
jne
aas
stc
lret
dec
xor
mov
test
pusha
ljmp
xor
inc
and
or
pop
push
out
lods
outsb
dec
jo
xchg
cmpsb
inc
fst
add
les
mov
imul
insb
cmpxchg
dec
sbb
push
sbb
add
test
inc
out
adc
out
outsw
mov
loope
inc
adc
scas
in
fdivrp
ror
and
fiadds
dec
data16
insl
xchg
fisubrl
outsb
pop
cmp
outsb
data16
leave
fwait
cmc
loop
dec
shl
test
jae
mov
cld
pushf
xor
andl
mov
subl
sub
scas
push
hlt
sub
test
jnp
push
mov
fisubl
dec
popf
sbb
subl
stos
push
push
fnstenv
dec
dec
ja
loope
mov
fnstenv
js
dec
mov
cmpsb
repnz
sub
inc
sahf
xor
push
cld
xor
out
mov
add
add
mov
pop
pop
dec
repnz
push
sub
mov
sbb
xchg
xor
or
add
push
out
mov
mov
push
repnz
cmpsb
push
bnd
push
push
dec
out
ficomps
cmp
push
push
into
adc
mov
repz
mov
pop
mov
inc
aaa
sbb
dec
add
repz
xchg
scas
mov
popa
imul
rorl
jne
mov
mov
mov
cmp
cmp
fldl
leave
gs
orb
scas
shll
sub
add
ja
mov
pop
pushf
or
in
scas
repz
aam
aas
out
scas
ret
xlat
cs
or
jecxz
fmul
jg
mov
pop
xchg
push
jns
dec
push
mov
mov
clc
fs
rcrl
pop
punpckhbw
cwtl
xchg
sub
cwtl
into
cli
dec
inc
adcl
xor
repnz
fs
adc
pop
push
mov
adcl
pop
or
cmp
popa
pop
sbb
lret
fistpll
notl
add
loope
sub
mov
push
mov
push
shll
jne
enter
pop
clc
scas
jle
add
in
xor
mov
push
addr16
pop
sub
ret
repnz
es
repz
iret
mov
xchg
xor
xchg
dec
sub
outsl
push
jmp
js
jb
arpl
add
imul
in
push
enter
pop
sub
nop
pop
cwtl
fdivl
out
sbb
jp
adc
jno
mov
cmc
iret
mov
mov
cmc
mov
scas
testw
inc
adc
add
adc
lods
xchg
pop
xlat
jns
movsb
dec
cltd
cmp
imul
arpl
mov
pop
dec
add
int
cmpsb
adc
mov
pop
jecxz
not
mov
xchg
call
adc
mov
fwait
loop,pt
or
leave
pop
into
outsb
aaa
pop
insl
jecxz
or
rorb
jp
mov
mov
xchg
push
jmp
out
jmp
adc
adc
jo
push
cmp
mov
loopne
frstor
mov
add
adc
lcallw
add
mov
xchg
in
sbb
mov
pop
testl
out
aam
sub
dec
imul
inc
pop
or
pop
xchg
pop
stc
and
and
xchg
fnsave
and
xchg
outsb
sbb
mov
repnz
xor
dec
stc
add
pop
enter
subb
in
xchg
inc
imul
cmpsb
pop
nop
aad
adc
or
xor
aaa
stc
andb
out
jge
push
jecxz
pusha
aad
int
bound
adc
lcall
sub
insb
icebp
mov
adc
testb
xchg
inc
jae
dec
xor
sbb
arpl
mov
inc
fcoms
mov
dec
push
cmp
cli
sub
and
cmc
fldenv
inc
in
mov
cmpsl
loop
hlt
outsl
in
cmp
push
cmp
pusha
stos
push
sbbb
mov
pop
jmp
mov
inc
lock
lods
xchg
sub
mov
lds
jb
mov
push
mov
xchg
or
xor
mov
sbb
cmp
popa
dec
add
pop
jge
test
sub
sahf
xchg
dec
lods
push
shll
aas
mov
ret
add
lea
inc
push
xor
mov
jp
xchg
inc
jne
dec
dec
adc
mov
pop
add
mov
mov
addl
mov
movsb
cltd
shrl
in
ret
ret
fstl
test
mov
vmovsd
adc
or
push
inc
and
scas
outsb
dec
adc
lret
cmpsl
mov
pop
inc
shll
inc
addr16
mov
leave
jb
lds
std
int3
fwait
sub
out
insl
aad
imul
xchg
ss
jbe
jnp
sub
jecxz
les
jb
std
pop
daa
repz
int
sbb
xchg
inc
mov
mov
rclb
fldenv
jge
jae
pop
xor
and
jl
add
inc
rcll
sahf
xchg
lcall
fbld
fstps
pop
setns
in
mov
push
add
sub
mov
mov
and
icebp
je
loopne
push
pop
xchg
mov
pop
jo
outsb
mov
mov
repz
out
mov
or
push
adc
dec
inc
scas
mov
mov
pop
push
fidivl
push
pop
sbb
or
leave
push
jo
xchg
adc
enter
pop
jecxz
sbb
std
imul
mov
pusha
adc
rclb
psubsb
lret
ja
xchg
cltd
mull
jbe
adcl
aad
addr16
je
dec
in
adc
sti
aas
cltd
shll
out
lret
adc
das
shll
cmp
sub
outsb
mov
xor
pop
mov
data16
jg
data16
mov
pop
cmp
add
cmpsl
cmc
icebp
in
cmpl
int
pop
pushf
aaa
and
popf
push
cmp
repz
xchg
cmp
or
mov
mov
dec
pop
pushf
ret
das
pop
sub
sbb
fxtract
fbstp
inc
out
repz
push
scas
iret
mov
rcrb
pop
rcr
dec
sti
movsl
aam
scas
aam
inc
cmpsl
pop
lds
mov
fistps
push
add
xchg
inc
jae
dec
mov
fwait
fs
or
ss
inc
es
adcl
cmpsb
mov
lcall
jno
xchg
adc
jle
xchg
jle
push
pop
sahf
or
daa
adc
test
ss
popl
pop
fbld
icebp
shlb
stc
sarb
xor
sub
es
icebp
ljmp
xchg
fwait
push
nop
sarl
jge
jne
repz
ret
fisubrl
jns
or
xchg
push
sub
pop
cli
repnz
nop
rorl
jg
jge
call
inc
or
imull
enter
incb
fidivl
pop
mov
enter
push
and
je
lock
pop
and
push
sbb
push
cwtl
push
stc
popf
inc
stos
jnp
fs
xchg
fisttps
fwait
dec
cmpb
outsb
xor
rorb
xor
pop
xlat
lea
scas
push
lahf
shlb
lods
jle
cmp
test
aam
pop
inc
jg
test
mov
mov
mov
dec
call
daa
scas
xchg
mulb
xor
fwait
sbb
cmp
sub
les
add
pusha
outsl
cmp
sti
push
js
push
push
sub
into
dec
mov
addb
pop
es
ljmp
mov
jge
or
sbb
inc
idivb
outsb
mov
mov
lods
adc
push
dec
lea
adc
cli
jle
mov
sub
sub
dec
sbb
in
xor
lds
out
jmp
jp
fcompl
mov
sub
das
femms
das
mov
mov
ljmp
cmp
inc
out
and
or
leave
and
add
or
hlt
fcompl
adc
in
mov
loope
xchg
clc
rcrb
xchg
mov
xchg
iret
shl
je
inc
out
into
add
icebp
ret
or
xchg
xor
ja
clc
pop
sbb
dec
adc
or
jo
jae
repnz
ffree
inc
sub
mov
int
inc
stos
aaa
inc
fcompl
ret
push
fldcw
nop
sbb
mov
push
mov
invd
mov
iret
dec
mov
or
repz
and
xlat
subb
pop
and
data16
xor
insb
pop
stos
pushf
in
fdivl
rorb
jns
data16
js
xor
ds
inc
testb
cmc
dec
xchg
sub
lock
push
ds
cmc
adc
sbb
bound
shll
nop
cltd
addr16
sbb
sub
out
mov
lahf
jno
push
mov
jmp
lcall
inc
dec
pop
mov
and
fstp
insl
mov
dec
mov
cmc
jb
mov
mov
mov
sub
enter
fisttpll
scas
sub
mov
jmp
cmp
clc
js
out
jecxz
push
out
and
rol
subb
js
dec
sub
and
ret
mov
cmp
push
inc
add
pop
loop
out
iret
xchg
pop
or
in
inc
jle
movsl
sbb
pop
loopne
inc
pushf
adc
in
fistpl
clc
pop
aaa
pop
addr16
mov
and
push
push
shll
fcompl
inc
lret
mov
outsl
push
cmp
push
push
mov
repnz
pop
leave
mov
enter
in
jmp
push
dec
or
sbb
sbb
mov
data16
inc
scas
lods
cmpsb
or
mov
sbb
hlt
mov
cmpsl
adc
rorl
fdivr
loopne
sbb
xor
ss
bound
mov
xchg
mov
mull
push
jno
jmp
icebp
xor
mov
movsb
rolb
xlat
mov
jae
push
aaa
outsb
mov
sti
sbb
frstor
mov
bound
inc
fwait
adc
pop
bound
inc
fldcw
hlt
decb
sub
xchg
jbe
mov
pop
or
sbb
sub
lcall
mov
cmp
pusha
and
xchg
cli
mov
mov
pop
add
and
mov
icebp
mov
sahf
insb
sti
inc
divl
adc
sub
lret
out
cmp
and
movsb
movsb
mov
xor
push
out
dec
xchg
push
pop
aam
pushf
push
enter
nop
xchg
dec
sti
xorl
sti
ret
outsb
cli
sub
mov
or
f2xm1
add
ss
insb
cmp
shll
push
arpl
pop
icebp
daa
pushf
cli
mov
pop
cmc
ss
lds
mov
ljmp
or
loopne
mov
loopne
xchg
mov
fildl
fstpt
mov
pop
xchg
add
sbb
xchg
nop
nop
int
cli
in
sbb
cs
xor
mov
inc
adc
jo
mov
lret
in
push
jae
inc
nop
ret
out
sub
jnp
ss
pop
mov
loopne
jmp
leave
mov
xchg
cwtl
into
dec
push
mov
mov
xchg
and
xor
sbb
sbb
rclb
add
lcall
ss
jae
or
adc
cmp
add
rol
dec
insb
xchg
cmpsl
stos
or
lahf
cwtl
xor
xchg
ljmp
push
jp
inc
les
cmc
ret
mov
pop
divb
add
int
mov
or
mov
pushf
sub
xchg
divb
movsl
jnp
jae
mov
cmpsb
inc
dec
cmpb
in
lock
orl
ds
push
push
in
jmp
mov
movsl
jo
in
xor
flds
or
xchg
dec
push
int3
fwait
insl
pop
add
enter
ss
out
incb
in
div
popf
push
test
push
outsl
inc
mov
push
mov
cmp
mov
xchg
test
xor
daa
roll
leave
inc
cmp
arpl
push
dec
push
or
sbb
test
and
out
pop
test
xorb
ds
outsb
inc
push
cmpsl
popf
iret
xchg
sahf
mov
fwait
pop
or
rcll
mov
xchg
insb
mov
dec
mov
shrl
xchg
add
dec
subl
cmpsb
pop
and
add
dec
push
gs
push
inc
mov
lea
cld
adc
lret
cmpsb
dec
mov
lahf
mov
mov
gs
mov
push
xchg
pop
adc
adc
dec
mov
add
arpl
jg
test
rolb
sbb
das
lea
popf
out
sbb
jecxz
test
js
cmp
aam
repz
lea
insl
add
adc
mov
ss
jl
sbbb
add
fcoms
inc
iret
lcall
mov
outsb
push
pop
insb
aam
jno
das
add
aas
outsl
xchg
mov
sti
mov
push
and
mov
cmp
xlat
xor
sahf
mov
mov
mov
cld
push
popf
lret
leave
pop
test
jnp
cmp
ror
fstl
xor
inc
aaa
lcall
lock
sti
dec
in
inc
mov
shrl
mov
and
ja
sub
pusha
stos
inc
mov
notl
xchg
xor
jo
popa
mov
inc
jmp
jecxz
lcall
mov
jmp
popf
cmp
aam
fistps
cmpsl
mov
in
sub
dec
dec
xchg
scas
adc
mov
add
das
sub
les
mov
test
scas
aam
call
jg
in
dec
dec
scas
fidivs
imul
inc
jp
jl
rcrl
sub
pusha
cld
mov
outsb
mov
push
orl
xchg
xchg
orb
jge
inc
fisubrs
nop
add
rol
mov
repnz
flds
dec
cmp
adc
std
inc
pop
icebp
cmp
jle
movl
sbbl
xchg
mov
jmp
inc
push
sbb
pushf
aam
cmc
bound
popf
or
cmp
std
imul
stos
or
insb
cltd
lods
mov
and
lcall
popa
or
or
pop
and
iret
sti
jno
out
clc
push
divb
ret
mov
fiadds
sub
cmp
paddsw
pop
adc
nop
cld
les
fisubrs
mov
cmp
and
test
mulb
outsb
xchg
mov
or
jns
mov
es
cmp
test
sbb
mov
pop
mov
jae
mov
rcrb
mov
out
les
mov
or
push
mov
lods
add
or
or
test
jbe
xor
jmp
push
jb
cmpsl
push
pop
mov
cwtl
mov
push
jmp
mov
cs
pop
add
pusha
cmp
jge
xchg
outsl
lods
mov
popa
push
push
iret
push
mov
inc
shlb
xchg
push
push
push
iret
jge
dec
popf
icebp
fdivrl
mov
test
mov
fmul
mov
fcomps
sarl
jp
test
pushf
shrl
xchg
out
cmpsb
xor
daa
push
push
mov
scas
push
jno
lods
and
leave
test
and
jns
int3
pop
mov
adc
lds
repnz
loop
jo
xor
out
jo
enter
add
xchg
cld
out
xchg
das
fadds
inc
imul
cs
or
addl
add
jmp
adc
adc
adc
imul
inc
lret
fldl
mov
ja
add
dec
cltd
test
mov
sbb
fwait
mov
push
out
divl
fwait
add
test
add
fdivl
sbb
outsb
js
lea
xlat
xor
pop
out
mov
test
sub
xorb
test
lret
pop
dec
int3
test
mov
nop
pop
arpl
inc
xchg
js
imul
inc
sti
inc
jae
aam
cmp
dec
adc
fwait
inc
push
push
pop
or
xlat
push
insb
and
icebp
mov
sahf
dec
mov
cmc
mov
push
xchg
stos
mov
mov
ret
or
jne
pop
and
jmp
sbb
cld
mull
ds
insb
xor
rcrb
hlt
popf
xor
sahf
jno
push
test
sti
idivl
aam
roll
cwtl
mov
mov
stos
stos
xchg
pop
push
jno
mov
jl
negl
mov
int3
popf
lahf
pop
in
xchg
loope
push
test
sahf
mov
aam
in
xlat
das
cmc
mov
xor
into
mov
loop
icebp
negb
mov
add
pop
and
stos
es
pop
dec
out
mov
cmc
cwtl
repz
mov
pop
pop
popf
xor
nop
sub
xor
in
mov
push
push
sbbl
daa
sbb
inc
popa
fwait
pop
push
inc
or
fsubp
dec
adc
push
ret
and
jmp
lcall
mov
dec
fstpt
sub
cmpsb
push
adc
ret
iret
mov
call
or
sbb
out
aas
mov
jae
fnstcw
adc
mov
dec
cltd
into
stos
sub
andl
outsl
cmc
jns
std
movb
or
jne
out
sbb
scas
cwtl
loopne
sub
sbb
and
fildll
outsl
dec
xor
push
adc
push
loope
dec
mov
ret
sub
pop
jle
bound
mov
add
pop
ja
inc
lds
imul
je
push
jmp
hlt
int
dec
push
push
scas
jno
ds
ret
stos
mov
dec
aas
cmp
pushf
repnz
cli
and
dec
xchg
mov
jl
pop
cmp
push
js
daa
pop
mov
fcos
xchg
dec
xor
adc
and
cmpsb
cmp
orb
dec
mov
mov
dec
xchg
sub
lret
mov
mov
rcr
imul
or
inc
push
out
inc
lret
pop
imul
mov
xchg
xchg
lods
xchg
jecxz
aam
cmp
negb
pop
jmp
xchg
arpl
addl
adc
out
xchg
inc
sti
cmp
cli
gs
call
icebp
and
xchg
jge
mov
ret
mov
push
adc
mov
sub
xchg
or
cmp
mov
inc
xchg
mov
mov
push
lds
xor
fnstsw
das
cmp
add
fs
mov
mov
loopne
push
pushf
mov
pop
aas
push
aas
and
mov
push
icebp
andl
out
outsb
adc
cmp
std
cmp
arpl
inc
das
or
cmp
sbb
add
js
in
ja
adc
mov
cmpsb
cli
scas
dec
insb
rorl
inc
jge
repz
std
hlt
mov
divb
lods
sub
cmp
jae
test
outsl
cmc
mov
mov
cli
push
sbb
cmpsl
mov
inc
and
lret
dec
and
mov
and
mov
scas
js
pop
pop
fdecstp
lcall
dec
loope
jecxz
xchg
push
mov
mov
fnstcw
ds
popa
cmp
je
dec
ljmp
fisttpll
ret
add
out
mov
or
lods
or
and
fists
cmp
xchg
push
or
lds
popa
xchg
sti
xorb
pop
scas
xchg
mov
cwtl
icebp
or
fcmovbe
push
jbe
pop
pushf
imul
xchg
inc
jo
add
fsts
fwait
test
jp
and
xor
je
xchg
pop
lret
outsl
aas
outsl
bound
das
mov
pop
sahf
fwait
mov
into
lcall
mov
push
movsl
jbe
mov
shr
xchg
bound
and
mov
mov
std
inc
inc
scas
les
loop
divb
cmp
ds
pop
idivb
mov
shrb
dec
lds
bound
popa
mov
orb
les
inc
push
inc
imul
inc
arpl
push
mov
scas
scas
jecxz,pn
sub
sbb
push
clc
ret
shll
xchg
pop
dec
mov
int
jb
push
push
aaa
or
pop
mov
ljmp
cmp
loope
jmp
lea
arpl
dec
in
sub
pop
xor
pop
cmpsb
adc
jbe
insb
lods
std
sbb
mov
test
push
push
cmp
enter
nop
call
test
lock
xchg
ds
cmpsl
and
push
jbe
stos
ja
sbb
lret
repz
sub
pop
adc
jecxz
enter
js
xor
aad
dec
into
sbb
repnz
cwtl
jnp
movsl
xchg
adc
addw
jbe
push
test
jmp
add
fsubr
js
sub
rol
and
cmpsl
ficomps
sti
xchg
jg
ror
mov
inc
adc
mov
out
mov
mov
mov
cmpsb
fldenv
pop
mov
out
jns
add
push
pop
add
jae
mov
andb
dec
lds
jnp
sbb
in
sub
rolb
jae
push
std
sti
call
rol
ficoml
dec
inc
ja
lret
cmpsl
pop
fcoml
lret
jl
lcall
and
inc
mov
subl
js
inc
jb
fidivrs
jne
hlt
pop
mov
fs
subb
sub
adc
lea
stos
jo
adc
xchg
ret
xchg
sbb
fcomps
xchg
imul
xchg
fdivl
es
shrb
pop
push
sub
dec
cmp
loopne
enter
and
xorl
jl
xchg
mov
xchg
scas
into
and
outsb
jb
inc
push
xchg
or
pop
or
push
daa
gs
mov
inc
push
and
xorl
mov
push
jns
outsl
pop
lea
jb
xchg
test
or
mov
fidivrs
sbb
push
lahf
mov
out
jno
or
xchg
test
rorl
ret
xor
mov
shlb
lods
data16
jbe
sbb
popf
mov
je
adc
stos
add
fcomp
repz
mov
out
mov
dec
sti
push
xchg
pop
mov
push
mov
mov
push
and
pop
lds
lock
pop
xchg
xorl
inc
fwait
dec
and
sub
ret
cmp
or
dec
repz
cld
jae
insl
inc
scas
and
push
je
jle
cmp
lods
leave
je
pop
pop
pop
mov
push
push
xchg
test
xchg
push
add
sub
lea
pop
ss
outsl
ds
pop
push
pusha
cmpsb
stos
mov
adc
test
mov
and
insb
ja
and
add
and
and
mov
je
jg
aas
dec
jb
fimuls
movb
testb
ret
je
outsl
jne
pop
popf
aaa
sbbb
jb
decb
cli
sbb
stos
pop
loopne
les
pop
movsb
jo
divl
push
jge
jp
fwait
dec
std
pop
xchg
or
lds
dec
inc
lcall
inc
cld
inc
insb
pop
lcall
and
pop
push
and
cmp
int3
push
stos
arpl
mov
addr16
mov
xchg
lods
cmp
pusha
sbb
dec
imul
sub
out
scas
sbb
std
cmpsl
gs
mov
inc
aad
mov
mov
inc
adc
push
sahf
dec
ret
mov
rolb
sub
pop
cltd
outsl
sbb
subl
add
insb
inc
lds
push
insb
lods
xchg
fildll
jmp
in
or
dec
fiadds
mov
jno
fisttpll
fiadds
and
or
outsb
pop
sub
lahf
scas
mov
pop
dec
mov
xchg
sbb
mov
in
sti
pop
jno
xchg
lret
jp
hlt
fs
and
jp
stc
push
pop
outsl
xchg
and
rcl
xchg
pop
dec
shr
imul
push
mov
inc
xchg
pop
pop
pop
imul
sbb
repnz
enter
out
je
cmp
loopne
in
stos
sahf
dec
or
lcall
push
inc
and
xchg
loopne
xor
xchg
inc
or
pop
inc
dec
cmp
test
ret
insb
mov
divb
scas
out
movsb
data16
mov
in
icebp
inc
lcall
outsl
int
aas
cmp
mov
daa
imul
push
dec
mov
inc
pop
push
mov
and
mov
mov
cwtl
int3
imulb
iret
adc
or
subl
loope
sub
scas
loopne
ror
cmc
stc
jmp
mov
adcb
data16
ljmp
test
outsl
mov
inc
mov
push
dec
inc
clc
jp
push
notb
aad
pop
ret
les
pushf
cmpsb
popa
jae
sub
stos
repnz
sbb
fbld
popa
sbbb
loop
jge
out
push
inc
push
into
shll
sub
leave
out
sub
adc
jp
add
add
stos
imul
mov
loopne
addb
stos
sbb
out
sahf
mov
cltd
mov
rcll
das
daa
cs
out
pop
sbb
add
mov
ret
jle
lret
loop
jno
rol
inc
mov
iret
into
aad
cli
sahf
inc
jns
aad
pusha
pop
mov
insl
mov
adc
testb
stc
in
std
jo
outsb
movsl
push
pop
mov
push
fnstsw
cmc
fsubs
and
xor
lcall
les
mov
xchg
jbe
inc
sub
add
js
mov
fiadds
pop
xor
mov
xchg
loopne
iret
mov
push
push
int
jge
or
incb
mov
xchg
outsl
mov
jno
jle
imul
outsb
cmp
push
jb
test
cmpsb
loopne
out
fsubl
inc
sbb
cmp
jbe
xchg
in
in
inc
cli
and
inc
arpl
stos
lods
clc
sbbb
pop
sti
dec
adc
xchg
les
ss
inc
cmp
jbe
jo
xchg
sbb
fcomi
les
jmp
jp
sub
hlt
sub
pop
xchg
imul
aaa
mov
stc
jno
xchg
shrb
bound
imul
lea
mulb
int
jg
gs
jecxz
add
xlat
shrb
testl
jae
lret
mov
inc
xor
adc
hlt
int3
pop
push
rcrl
negb
insb
push
ds
movsb
shr
mov
js
rcr
sub
mov
mov
and
inc
cmp
push
mov
rcrl
stos
add
pop
popa
inc
ret
arpl
int3
cwtl
jo
jge
cmp
sub
fucom
pop
pop
mov
mov
fisubs
iret
fstl
or
decl
dec
cli
xor
mov
dec
cmp
scas
outsb
or
pusha
xchg
mov
inc
pop
movsl
xor
xor
loopne
mov
cmp
xchg
push
test
and
and
jnp
pop
or
popa
lds
aad
outsb
pushf
xchg
scas
mov
mov
jnp
mov
xchg
in
lcall
std
mov
xchg
scas
test
fldenv
cmp
stos
cwtl
stos
jnp
loop
hlt
mov
out
in
jmp
cmpsl
mov
aad
push
cld
in
mov
jno
sub
ds
or
outsl
ljmp
repnz
dec
test
ds
addr16
jge
dec
lcall
xchg
add
enter
ficompl
imul
cmovno
inc
sar
lret
mov
xor
pop
mov
mov
vpmovzxbw
push
xor
incl
jnp
jmp
mov
mov
xor
mov
xor
mov
adc
mov
xchg
rorb
sbb
xor
jae
lods
rorb
pop
popa
dec
mov
rol
add
jae
pop
mov
mov
in
popa
add
scas
push
or
fdivl
mov
fdivl
jmp
mov
mov
outsb
xchg
pop
mov
pop
pop
inc
mov
push
out
aad
fucom
imul
mov
mov
fimuls
int3
je
inc
dec
pop
push
jecxz
pop
cmp
inc
xchg
enter
dec
push
push
mov
mov
cwtl
out
and
add
rorl
aad
das
negb
lds
ja
stc
popa
fdivrl
imul
xchg
lods
icebp
xchg
mov
icebp
mov
add
inc
add
orb
test
enter
cwtl
in
fsubl
inc
cmpb
cmp
add
xchg
rol
adc
or
push
in
mov
test
xor
lahf
push
mov
or
daa
or
ficoml
out
inc
js
shlb
xlat
enter
jmp
lods
xchg
adc
imul
mov
dec
xorb
mov
out
imul
and
mov
sbb
fstpt
movsb
adc
fiaddl
and
push
out
cmpsb
pusha
mov
stc
mulb
add
fwait
daa
loop
xlat
jp
pop
popf
mov
fldenv
das
iret
rcr
int3
or
cmp
mov
adc
xchg
cmpsb
add
or
shll
and
mov
dec
dec
int3
jo
out
fwait
dec
cli
stos
cmp
lods
cmpsl
sub
in
inc
pop
pop
jns
imul
cmpsb
xor
dec
cmpl
xchg
cs
std
sahf
xor
cmp
ret
aam
cmpsl
subl
int3
jnp
nop
mov
inc
pop
jns
sub
gs
inc
xchg
or
xor
aam
mov
push
add
cmp
pop
lcall
jle
insl
jne
fisubrl
data16
jo
ret
lea
xchg
rep
pop
sbb
lods
or
jg
divl
stos
out
jle
xchg
jp
shll
leave
sub
adc
add
in
lock
rcr
sbb
mov
sub
repnz
add
negl
fcoml
icebp
xor
stos
je
sbb
xchg
jmp
pop
inc
out
mov
and
pop
cmpsl
ficomps
js
fldenv
inc
pop
mov
ret
push
stos
lds
shrl
inc
into
sbb
mov
sub
xchg
fnstcw
popa
inc
ds
cmc
sub
sbb
in
jb
xlat
addr16
je
pusha
push
sbb
rcrb
pop
mov
sbb
arpl
and
lods
scas
push
movsb
decb
xchg
test
ds
data16
leave
push
fs
mov
sub
xchg
and
push
and
dec
lret
xchg
ljmp
mov
fldl
mov
imul
jo
leave
leave
and
xorb
mov
and
and
fs
jecxz
loop
ja
rcrb
lret
mov
repz
jmp
sub
lret
jmp
sub
inc
mov
pop
int3
lods
rol
mov
lock
xor
xor
inc
ja
addl
mov
repz
push
push
and
add
and
pop
fisubrs
in
aam
enter
mov
int
push
push
mov
jp
xor
ds
repnz
out
and
rcrb
bound
cli
inc
fwait
sub
lods
mov
into
or
mov
adc
cwtl
dec
rorl
mov
mov
jns
pop
test
movsb
rclb
imul
mov
xchg
lret
stos
add
dec
jle
lahf
pop
mov
and
insb
loope
pop
xchg
jae
adc
lods
mov
pop
and
je
xchg
in
push
mov
mov
cmp
out
inc
mov
test
neg
movsl
lods
rorb
aas
popw
push
fiadds
xor
sahf
jno
pop
pop
cmp
arpl
sub
out
sub
stos
adc
movsl
and
shr
test
loopne
cld
push
scas
jmp
jbe
jg
mov
imulb
sbb
cmp
stos
stos
pop
inc
aaa
test
enter
cmp
mov
popa
jg
or
stos
push
inc
outsl
test
sbb
popa
jmp
bound
jge
and
push
pop
mov
das
mov
or
out
leave
xor
out
adc
adc
lock
inc
fxch
pop
adc
xchg
outsl
sbbl
mov
fwait
cld
pop
push
sbb
mov
jge
movb
push
adc
popf
jno
jp
cli
js
jns
fidivs
and
pop
mov
je
jno
adc
lea
outsl
add
repz
stos
push
push
inc
sub
cld
iret
lods
lcall
testl
mov
lret
jnp
sbb
loop
arpl
sbb
ret
sahf
in
or
scas
or
pop
xor
outsb
mov
or
mov
stos
inc
enter
jecxz
stos
fnstcw
cmpsb
sub
test
push
test
mov
push
fisttpll
push
jno
pop
cld
xchg
fcoms
pop
out
in
mov
popl
out
cmpsb
and
leave
inc
int
sbb
dec
jne
bound
les
and
xchg
xor
dec
stc
mov
lret
pop
shll
ja
aas
packssdw
mov
jo
ljmp
ret
outsl
in
inc
ret
adc
cmc
or
pop
xchg
aad
sbb
sub
jp
ret
mov
pop
jp
lahf
xor
mov
pop
add
xchg
and
pop
lea
sbb
cld
jb
fwait
sahf
cmp
rcrl
mov
xchg
mov
fcompl
add
inc
adc
jae
xor
fdivl
ret
sbb
or
out
sahf
insb
repnz
cmp
pusha
mov
sub
or
ffreep
xor
push
add
lods
jmp
js
loope
xor
lea
in
loope
andl
jns
psllw
dec
xor
pop
jnp
movsl
data16
das
inc
lret
pop
aad
cmp
xor
lds
hlt
jo
stos
mov
enter
dec
inc
cmp
add
or
cwtl
arpl
mov
loopne
sbb
jb
aad
sarl
aas
repz
inc
xchg
lahf
sub
popf
and
sbb
mov
mov
mov
xor
out
aam
or
ret
jle
or
or
sub
scas
sarb
shll
pmulhw
dec
adc
dec
stos
movsl
jno
adc
cmp
cmc
jnp
cmp
es
mov
out
daa
mov
mov
stc
scas
mov
test
nop
mov
xor
outsl
mov
adc
inc
adc
xchg
push
inc
int
inc
and
insb
or
xor
ret
pop
lock
rcrl
clc
imul
popf
and
rorl
fcmove
orb
lret
cmpb
xor
jl,pn
in
out
cmpsl
scas
fs
xchg
gs
and
mov
into
mov
aas
fldl
stc
mov
adcl
out
adc
pop
pop
popf
sti
mov
mov
cmpb
paddb
add
xchg
test
mov
mov
push
fstl
stc
cmp
daa
lea
ja
pop
xchg
cmp
adc
sbb
jg
jp
popf
cltd
stos
lret
decb
xor
xor
add
in
adc
inc
rol
or
js
fiaddl
add
mov
fisubrs
cmc
leave
or
adc
dec
push
mov
push
and
push
adcl
hlt
pop
xchg
ss
sub
cmp
jb
pop
xor
or
mov
mov
cmp
push
or
fbstp
fimull
xor
lahf
inc
out
aam
lret
mov
pop
stos
add
mov
arpl
out
dec
or
enter
mov
mov
mov
repz
add
pop
pop
add
pop
pop
fldt
jb
mov
jl
lahf
mov
dec
cmpsb
das
int3
fdivrs
inc
push
sub
es
xchg
mov
sahf
mov
lock
imul
orb
mov
pop
cli
jno
lea
test
movsb
lcall
or
sub
rclb
adc
fisttpl
xchg
loop
push
std
jmp
out
das
and
femms
ret
cmp
test
mov
movsb
jmp
mov
xor
lods
push
bound
clc
cmova
push
jge
xor
movsb
pop
or
lret
sub
rcr
lea
pop
sbb
mov
sbb
pop
pop
pop
movsb
cwtl
cmpsb
test
loopne
push
adc
xchg
jnp
adc
scas
stos
jne
cld
je
popa
icebp
mov
or
mov
loope
mov
andb
dec
test
and
pushf
or
jle
and
aaa
lods
add
ljmp
mov
sub
mov
inc
adc
je
sbb
inc
pop
cld
movsl
lds
or
sub
fiadds
ljmp
adc
pop
push
and
popf
push
push
mov
js
mov
jg
sub
sub
pop
sub
sub
scas
mov
sbb
ss
cmp
mov
mov
sbb
ret
sub
into
insb
mov
mov
mov
out
sub
jp
loop
mov
xchg
inc
mov
sub
ret
ficoml
fmull
xchg
insb
sbb
cli
inc
test
stc
lea
movsl
aam
sti
push
xor
insb
mov
test
ljmp
loopne
inc
bnd
out
or
xchg
lahf
jl
fcomps
cmp
les
cmp
les
cmp
add
daa
shrb
mov
fadd
repz
gs
cmpl
adcl
jge
sbb
sub
pop
add
pop
push
push
jae
xchg
xlat
push
dec
shlb
xchg
movsb
sub
test
mov
mov
outsl
mov
stos
xor
add
xor
and
in
pop
fdivrp
iret
lock
rolb
add
mov
pop
or
loope
cmp
cmp
lds
xchg
mov
les
jp
pusha
cs
hlt
movsb
sbb
dec
or
pop
popf
sbb
call
mov
fstpl
pushf
jns
jmp
push
test
sub
fildl
xchg
jle
ret
and
repz
mov
stos
div
xchg
pusha
enter
rorb
pop
push
cmp
sar
jne
aam
jnp
and
rcrl
out
pop
pop
sbb
mov
aas
std
sbb
fcomp
in
fbld
lea
add
out
pop
cmp
scas
pop
xchg
sub
mov
shlb
or
movsl
and
stc
movsb
mov
clc
lods
dec
aas
xor
jecxz
cmp
mov
xor
aaa
data16
mov
test
data16
out
xchg
mov
in
icebp
scas
mov
ret
loope
xor
jb
dec
xor
cmp
and
push
cwtl
xchg
test
pop
xchg
jmp
or
andl
leave
sub
js
insl
insb
imul
or
cmpsl
mov
out
xor
shlb
in
ja
push
sbb
jle
popf
pop
mov
inc
xchg
pushl
loop
inc
sub
fwait
out
push
pop
sub
sub
bound
mov
rclb
int3
jmp
imul
dec
cld
mov
lods
dec
test
jecxz
out
and
ss
loopne
in
mov
jne
dec
jg
aas
test
dec
push
pop
push
jge
cmove
push
jle
sub
mov
sbb
imul
rcr
cmp
push
jl
jmp
push
sti
mov
xchg
gs
fcmovb
iret
in
pop
and
lods
movsb
fisubs
aad
fcoml
aaa
mov
push
xor
aaa
adcb
xchg
jo
in
pop
sbb
push
pop
xor
cmp
cmc
adc
jg
icebp
lock
mov
fnstsw
mov
mov
popa
pop
xor
xor
and
pusha
dec
push
lea
insb
or
fbstp
imul
jmp
jl
or
or
add
mov
fdivrs
push
add
dec
iret
push
mov
repz
lods
fbld
mov
adc
in
movsl
mov
stc
xchg
lahf
mov
cmp
aas
daa
push
lods
sbb
repnz
pop
or
ret
xor
xor
xchg
or
ds
dec
movsl
pop
mov
lea
push
fcoml
or
pop
xlat
and
in
test
jle
push
imul
sbb
loop
cmp
inc
inc
jb
pop
cmpl
adc
xchg
in
loopne
sahf
xor
inc
inc
mov
stc
jns
add
rcl
cmpsl
dec
fs
xchg
cmp
pop
jle
shll
add
and
mov
pop
push
mov
inc
pop
inc
xor
dec
xor
mov
xchg
loopne
aad
insb
outsb
in
dec
xchg
ret
in
cmpsl
dec
sub
or
xchg
aam
addr16
inc
paddusb
mov
inc
inc
loopne
fistl
loopne
jp
addr16
fwait
cltd
cli
pop
sbb
push
ss
test
mov
ss
rorl
mov
ficoml
cs
ljmp
cmp
jmp
pushf
cmpb
dec
in
pop
int
loopne
bound
repz
adc
sarb
dec
pop
xchg
lods
xchg
mov
dec
jae
lret
add
in
xor
push
loopne
aad
dec
idivb
mov
push
mov
cwtl
jae
test
out
jmp
fwait
xor
loope
sub
shl
in
cmpsl
paddusb
add
iret
out
mov
sarb
inc
sub
cmpsl
sub
ljmp
dec
js
ss
xchg
adc
cmc
jg
lods
loop
sbb
xor
int
sahf
jno
mov
sbb
xor
xor
cmp
cmpsb
sti
xchg
jns
pop
add
cwtl
mov
into
sbb
cmp
mov
or
mov
hlt
dec
sub
jmp
repz
cs
shll
out
sarl
push
sbb
pop
fstpt
inc
mov
inc
fidivs
cmp
sub
fsubs
loop
pop
lods
xchg
lods
inc
add
loop
cmpsl
jl
hlt
lea
daa
movsl
xchg
nop
andl
dec
mov
and
mov
push
sbb
repnz
aaa
pop
mov
ret
das
push
push
xchg
inc
jo
xchg
and
and
aaa
into
add
xchg
fidivl
or
mov
or
pop
xor
mov
popl
mov
xor
fsts
and
stos
fcompl
fnstsw
aas
aas
jg
sbb
bound
xchg
ja
pop
jns
aam
addb
xchg
ja
mov
push
adc
add
nop
into
int3
jo
fdivp
in
push
orb
fstps
sbb
cmpsl
aad
push
add
mov
orb
movsb
xor
aaa
outsl
lret
sbb
mov
xor
ja
imul
pop
jge
adc
mov
sbb
xchg
test
fs
pop
mov
insl
push
sub
out
pop
cmp
push
lahf
or
and
fcomi
inc
mov
add
lret
lea
movsl
stc
xchg
rorb
movsb
jmp
test
mov
sub
out
cmpb
lahf
xchg
cmpsl
ja
jmp
push
mov
jnp
arpl
adc
aas
test
pop
int3
cmc
jne
cmp
sub
fiadds
add
aad
mov
in
pop
test
les
shlb
and
inc
dec
cwtl
pop
sbb
push
aam
ljmp
push
aam
sub
mov
push
mov
jo
cli
adc
mov
jo
and
gs
arpl
xchg
ret
and
fcoml
jnp
lcall
xor
inc
es
jo
inc
lcall
inc
jb
or
test
add
pushf
xor
or
icebp
hlt
jle
xor
jg
imul
out
push
std
icebp
add
fimull
scas
iret
xchg
jnp
mov
hlt
inc
jecxz
sarl
cmc
mov
mov
subl
insl
bnd
and
cmpsb
sbb
shll
mov
cmp
stos
pop
dec
pop
popf
add
pop
push
test
mov
shrl
push
xlat
pop
jbe
or
das
ljmp
adc
out
pop
fisubrl
das
pop
fdivrp
mov
add
sub
loopne
or
out
cmp
mov
pop
xchg
sub
rcll
nop
mov
jnp
inc
outsl
push
ja
arpl
jno
sarl
inc
mov
std
scas
lahf
push
les
dec
out
jno
adc
xchg
dec
xlat
std
mov
sub
cmp
ss
loope
cmpsl
je
or
inc
stc
push
out
push
pop
pop
sub
in
clc
or
fstps
cmpsl
and
stos
aaa
imul
jno
mov
aad
lcall
adc
ficompl
push
rclb
mov
mov
inc
cmp
xor
inc
sub
mov
js
lcall
and
cli
cmp
ret
jne
sti
pop
ljmp
cmp
imul
sub
test
cmpb
mov
dec
xchg
fbld
mov
jle
mov
lea
jl
inc
cmp
mov
mov
cltd
pop
push
push
adc
mov
add
js
scas
jne
xchg
mul
sub
scas
mov
push
std
divl
fldcw
inc
lods
push
adc
cltd
mov
lds
out
movsl
fisubs
or
xchg
mov
int
mov
and
ljmp
leave
stos
mov
and
mov
scas
shrl
dec
add
imul
loopne
pop
and
cmpsl
push
gs
in
cwtl
ds
push
push
inc
jecxz
sbb
sub
lock
jle
mov
dec
sub
les
and
lret
scas
lock
mulb
dec
mov
setp
mov
arpl
pop
mov
in
pop
daa
movsl
fsubrs
lcall
icebp
sbb
inc
dec
pop
lcall
and
ret
xor
dec
inc
clc
mov
mov
adc
push
mov
clc
xchg
push
ds
rcl
cmova
les
or
and
adc
and
mov
ja
popf
aam
sar
mulb
jbe
in
repz
push
out
inc
shlb
xchg
popa
mov
dec
adc
ret
xchg
out
fs
popa
pushf
cmp
addb
mov
enter
nop
push
je
jge
xorb
insb
adc
push
shlb
faddl
inc
gs
dec
xor
lcall
fistps
cltd
mov
in
or
and
pop
mov
nop
inc
pop
and
inc
or
gs
xchg
adc
outsb
xchg
xchg
xchg
in
sub
add
sar
dec
jne
pop
rcl
scas
mov
icebp
test
jmp
or
aam
test
pop
cmp
inc
adc
mov
sub
fdivrl
mov
sub
jae
ljmp
mov
fcmovne
jg
cmp
inc
and
add
fisubs
sub
pop
outsb
insb
int
push
pop
popl
fstpt
fisttps
subb
ja
or
repz
cwtl
xchg
std
ficompl
mov
mov
ret
aam
ja
push
aam
inc
fs
pop
mov
or
jns
mov
addl
popf
lret
adc
adc
mov
nop
cmpsb
mov
cmp
imul
shll
stos
dec
and
adc
jo
test
push
ficoml
or
mov
sbb
scas
mov
push
dec
mov
lock
or
js
fsubs
dec
pop
ljmp
dec
fcmovnbe
shl
cwtl
sbb
lahf
js
mov
sar
in
inc
mov
mov
jno
xchg
in
inc
pop
outsl
lret
sbb
ja
mov
sub
dec
bound
jecxz
outsl
xor
cmp
pop
and
inc
lods
lea
outsl
into
outsb
mov
int
mov
iret
cmp
pop
cld
andb
jg
test
xor
mov
mov
sbb
in
push
jg
push
loopne
jae
bound
outsb
imul
ja
cli
push
and
stos
adc
jns
mov
xchg
push
jnp
xor
adc
into
movsb
lret
add
aaa
cmc
mov
cmp
lahf
adcl
mov
push
lcall
mov
mov
cmp
pushf
fwait
test
loopne
mov
sar
movsb
testl
cmp
mov
ljmp
jno
cmp
test
xchg
cmp
sub
divb
dec
mov
cmpsl
repnz
adc
inc
cmpsb
inc
jae
lock
xor
iret
fstps
xchg
dec
ja
pushf
lahf
divb
es
iret
push
fldcw
dec
mov
add
push
xchg
out
mov
sub
cld
inc
push
add
or
aaa
mov
dec
shlb
das
push
adc
lret
lcall
and
inc
and
mov
mov
xorl
iret
cmp
sti
out
mov
xchg
dec
dec
add
mov
idiv
movsb
mov
adc
jg
and
jmp
mov
dec
mov
and
jae
or
pop
cltd
xor
jns
repnz
icebp
stos
cmp
jbe
push
addl
mov
push
lahf
mov
mov
lahf
mov
mov
fstl
add
jecxz
cmp
push
pop
repnz
lret
sub
and
loopne
cld
inc
movsl
jp
xchg
fldl
es
das
push
and
or
retw
mov
test
test
hlt
inc
inc
fwait
push
add
mov
inc
add
adc
lea
incb
mov
xchg
pop
iret
pop
fwait
mov
lock
xchg
jne
jns
test
add
pop
push
mov
loope
in
cmp
push
test
leave
or
xchg
and
lret
fsubr
mov
xchg
push
adc
ret
jno
add
sub
adc
pop
js
loop
pusha
and
je
xchg
test
idiv
dec
rcrb
clc
adc
inc
pop
data16
cltd
jge
sub
aad
jg
inc
adc
push
inc
fiaddl
jns
pop
daa
popf
fisttps
mov
cmp
arpl
lock
add
add
mov
push
fdivp
xor
scas
cld
ss
jp
lcall
push
sti
sbb
sahf
cmp
and
aas
ss
cmp
mov
sub
and
mov
mov
outsb
xor
out
xor
xchg
popa
insb
jp
sbb
mov
inc
ds
mov
xor
dec
dec
xchg
adc
aam
sbb
scas
out
lea
pop
mov
out
hlt
subl
adc
insl
arpl
aad
arpl
push
jmp
mov
inc
adc
add
repnz
or
sbb
fnstsw
fwait
cmp
repz
xor
inc
lret
cmp
das
insb
out
mov
xchg
orl
addr16
dec
xlat
jb
test
xchg
cli
clc
jl
shlb
push
mov
fstpl
cld
sub
inc
bound
pop
iret
xor
sbb
jmp
cmp
ffreep
jnp
lods
nop
and
pop
and
inc
shrl
push
fistl
subb
or
push
in
fdivrs
pop
fs
mov
sahf
je
int
sti
das
imul
xor
xchg
adc
push
push
adc
xor
push
outsb
mov
jno
and
mov
cmpsb
mov
dec
das
adc
push
mov
out
imul
aad
cli
cwtl
aaa
bswap
jle
xchg
xchg
cld
fcomps
add
jecxz
ljmp
jp
dec
imul
sub
push
outsb
in
repnz
pusha
add
jno
sti
sub
mov
jo
sti
addb
nop
rol
ret
xor
dec
push
mov
mov
mov
test
inc
in
sbb
cwtl
cmp
repz
jb
mov
xorb
scas
jbe
jecxz
pop
xchg
cmc
popf
jmp
or
popa
std
pop
dec
pop
jmp
cs
push
les
xchg
movsl
mov
dec
nop
jnp
or
outsl
bound
or
and
leave
push
adc
arpl
mov
dec
xchg
sti
mov
xor
push
ret
mov
jmp
cmp
lret
rorb
daa
test
ljmp
inc
push
lretw
outsl
dec
aam
sub
je
and
sub
in
xor
sub
sbb
xchg
addr16
pusha
enter
shll
imul
aam
mov
repnz
fisubs
rorl
js
sti
enter
dec
inc
push
sarb
inc
int3
push
js
sbb
pop
xchg
adc
ret
daa
in
add
lcall
leave
stc
imul
jnp
cli
fucomi
push
jmp
jne
xchg
repz
repnz
cmc
mov
mov
and
add
push
pop
xor
outsb
jge
mov
dec
dec
push
call
aaa
cmp
lahf
xlat
std
jne
mov
jle
dec
cmp
push
jae
ss
xchg
ss
xchg
push
add
cmpsl
xchg
jae
fbstp
mov
pop
mov
mov
push
sub
jns
xchg
xor
sbb
cwtl
xchg
push
push
add
negl
push
lcall
inc
xor
in
dec
pop
stc
push
xlat
outsb
daa
cld
cmp
xchg
adc
mov
jmp
pusha
xchg
adc
ja
dec
int3
dec
out
fistps
bound
xor
mov
mov
adc
loopne
icebp
and
cmp
adc
lret
loopne
lock
dec
test
mov
dec
mov
cwtl
into
adc
int3
bound
into
scas
xchg
shll
nop
jbe
hlt
sub
xor
jge
add
mov
bound
xchg
rclb
cmp
dec
into
adc
es
dec
sbb
je
push
lret
add
push
sbb
xchg
mov
xchg
stos
and
fiaddl
sbb
jb
sub
jp
cmp
xchg
rolb
sar
and
dec
outsb
mov
dec
adc
xor
fimull
sbb
testb
pop
pop
cmpsl
sti
jnp,pt
das
push
mov
out
jle
es
lret
pop
jmp
clc
cmp
jle
enter
shrb
mov
aas
cmc
jnp
cld
shlb
aaa
mov
stos
loope
dec
popa
divb
jae
out
sub
mov
push
cmp
dec
adc
adc
sti
or
or
andl
add
shlb
adc
pop
test
lret
test
aad
xor
call
push
add
sahf
notb
adc
push
shll
cld
inc
cmp
or
dec
jbe
mov
lcall
les
mov
hlt
fimuls
cs
mov
and
mov
jmp
test
mov
fdivs
sti
xchg
mov
push
jae
push
lea
cltd
pop
jle
pop
push
xchg
xchg
js
movswl
xor
nop
sti
fistps
pop
adc
pusha
cli
cmp
push
xchg
and
ficomps
push
cmp
outsl
shrl
cmpsb
neg
jnp
mov
or
cmp
ss
dec
fstpt
adc
jmp
pop
inc
clc
stc
js
movsb
decb
pop
mov
dec
test
mov
sarb
and
pop
in
movsl
and
into
pop
cltd
fidivl
mov
pop
push
scas
cwtl
jmp
fdiv
xchg
cmp
mov
lods
mov
push
xchg
shlb
aam
movsl
outsb
notb
inc
loope
aam
mov
xor
pop
pop
xchg
mov
lret
popa
aaa
test
stos
stos
jmp
cmp
enter
idiv
out
sub
std
aad
mov
push
loop
roll
sbb
inc
push
adc
std
mov
adc
insb
fcoms
push
xor
push
ret
ljmp
out
xchg
lods
sbb
xlat
mov
jo
iret
dec
push
daa
jo
sbb
jecxz
hlt
jne
adc
pop
cltd
sub
cvttps2pi
mov
sbb
pop
scas
push
push
ss
lret
jmp
cli
jno
cmp
xchg
or
sbb
mov
out
xlat
and
aas
sub
stos
aam
mov
pop
push
scas
or
fwait
sbb
sbb
lds
outsl
xlat
or
inc
jecxz
dec
push
int
icebp
into
leave
cmc
mov
test
xor
filds
xchg
bound
push
cmpsb
mov
sub
mov
loopne
cmp
jne
pop
and
and
scas
jp
popa
mov
jp
xchg
and
xorb
jo
jo
or
mov
mov
xchg
insb
call
aad
mul
xchg
sbb
xor
add
mov
outsl
xor
div
dec
xchg
rorb
xchg
push
jbe
cmp
xor
inc
lret
add
jns
aam
jne
cmove
jmp
int
data16
dec
ret
test
hlt
and
fnstenv
jne
pop
inc
sahf
gs
cmp
adc
jo
mov
in
in
int
dec
aas
xchg
enter
pop
rsqrtps
jmp
leave
test
jnp
out
mov
inc
mov
icebp
cmpsl
mov
setbe
mov
mov
in
popl
cmpsl
jno
lahf
jno
arpl
pop
dec
mov
cmp
scas
push
dec
jo
repz
in
push
fnsave
jns
mov
sbb
fwait
cwtl
cld
add
aas
ret
dec
dec
fbstp
sub
cmp
xor
ja
xor
pop
in
inc
and
shlb
push
push
adc
and
jb
cwtl
into
jo
pop
xchg
mov
cmp
std
mov
sti
cmpsb
dec
sbb
pop
aad
iret
mov
cmp
icebp
pusha
shrl
addr16
inc
scas
cs
dec
add
in
pop
add
xor
fdivrs
cmc
pop
mov
mov
jae
mov
stc
fdivr
mov
jle
std
ret
adc
or
xchg
xchg
adc
pop
add
leave
jae
incb
dec
dec
or
cmp
xor
jg
xor
ja
ficomps
add
or
dec
nop
mov
push
sahf
inc
add
xchg
fprem
and
shrl
ja
leave
push
mov
xchg
jo
stc
xlat
inc
jmp
call
cs
adc
dec
cltd
lods
dec
stc
mov
cmpsl
shlb
xchg
insl
shl
mov
sub
iret
mov
fwait
mov
dec
xor
sarl
mov
inc
jmp
inc
mov
in
stos
in
andl
outsb
cs
in
mov
sub
aad
xchg
testb
and
out
fadds
leave
mov
or
sbb
lock
and
push
xchg
jne
cmpsb
mov
mov
inc
and
ror
leave
push
or
xchg
cmp
add
sub
verr
and
push
and
dec
sbb
sub
xor
mov
push
pop
adc
clc
push
subl
stc
aaa
or
push
adc
jb
or
jbe
xchg
je
divb
inc
dec
add
cmp
sub
ret
cmp
pop
add
fsubrs
push
push
movsb
jno
cmp
test
aam
add
add
nop
rcrl
xchg
xchg
xchg
cmp
jne
lcall
add
mov
jo
ret
stos
xlat
aad
movsl
into
xchg
mov
cmp
pusha
int3
call
movsb
sbb
outsl
and
cld
push
daa
sbb
sbb
pop
mov
dec
cltd
xlat
stos
lea
and
lahf
loop
dec
fadds
sti
mov
mov
dec
clc
popf
stos
pop
adc
shlb
pop
icebp
push
aaa
test
fs
outsb
jecxz
leave
push
jno
add
dec
lods
inc
nop
jnp
hlt
leave
pop
inc
insb
xorl
nop
mov
push
pop
mov
out
das
cmp
das
and
xchg
in
mov
mov
push
or
clc
push
push
idiv
pusha
mov
push
movsb
test
pop
add
orl
mov
xchg
enter
cs
gs
mov
adc
xchg
shlb
and
pop
outsl
arpl
testl
mov
jae
pusha
shl
dec
lret
lret
lret
xlat
adc
mov
stc
sbb
int3
or
js
out
aaa
mov
pop
sub
and
add
fstpt
xor
pop
ss
icebp
cltd
or
lret
add
lret
popa
sub
rcrb
xor
or
movzbl
cltd
dec
inc
mov
push
cmp
cld
out
mov
movsl
jo
jnp
cwtl
inc
cmp
jg
aad
fidivrs
and
roll
push
jne
sub
xchg
sti
jg
jp
lods
mov
and
push
ljmp
ret
dec
imull
popw
push
daa
insl
orb
xchg
push
sahf
and
cltd
push
pushf
push
gs
jmp
sbb
sub
mov
adc
pop
pop
nop
dec
pop
inc
add
xor
insb
insl
jbe
add
popa
mov
out
stos
pand
sub
insl
push
pop
push
xlat
stos
sub
jno
ret
inc
movsb
xlat
xchg
sbb
sbb
push
pusha
sbb
adc
clc
push
in
std
lds
and
shll
lea
inc
fistpl
add
cmpsl
sub
mov
mov
fistl
popa
and
cwtl
jg
pusha
in
imul
aam
insb
xchg
movsb
movl
mov
mov
mov
sbb
push
xchg
pop
pop
push
and
loop
ret
pop
mov
lods
pop
loop
ljmp
push
ret
inc
jle
cli
cmp
cmp
add
pushl
mov
xchg
or
fsts
add
push
pushf
mov
inc
popf
imulb
mov
mov
adc
jno
fwait
inc
add
xchg
rorb
icebp
cmp
mov
xchg
xchg
or
jmp
cmpsb
inc
inc
loopne
imul
cltd
dec
sbb
mov
add
stc
xlat
ds
outsb
sub
int3
shlb
inc
loopne
sahf
sbb
cmp
sub
insb
push
popf
mull
rolb
jo
pop
cmp
cmc
lods
and
in
inc
out
or
out
mov
mov
cmp
mov
pop
cmp
lock
sub
orl
mov
dec
bound
rorb
cmp
adc
inc
testl
mov
mov
mov
imul
daa
add
lret
add
jmp
or
mov
out
mov
loop
outsl
stc
or
hlt
push
dec
daa
inc
fcomps
mov
dec
int
cmp
je
into
adc
inc
lahf
jl
add
fcmovnb
and
fs
aad
mov
push
jno
or
loopne
push
push
insb
in
inc
pop
cmp
fsubrp
cmp
les
lret
mov
pusha
or
adc
pop
out
divl
and
lcall
mov
dec
idivb
dec
cwtl
or
jle
mov
in
push
lock
jno
jne
clc
xchg
push
paddb
lea
movsb
xchg
push
push
arpl
add
jns
imul
fwait
jg
insl
sub
cmp
pop
movsl
out
mov
mov
adc
push
cli
mov
jmp
jb
or
sbb
mov
xor
inc
stc
xor
mov
mov
cmp
movsb
cli
push
lcall
gs
shlb
int3
sub
adcl
arpl
inc
sbbb
sbb
cwtl
xchg
xchg
inc
sub
dec
and
jmp
mov
cmp
and
adc
adc
push
sahf
ret
gs
xchg
pop
test
push
jmp
sbb
sahf
loope
mov
es
jo
mov
pop
sti
jmp
mov
pop
jmp
int3
and
mov
add
imul
push
popa
inc
pop
xor
inc
fcomip
push
out
pop
inc
data16
fnsave
push
mov
cmpsl
jnp
inc
mov
xor
sbb
adc
jp
and
jmp
sbb
push
mov
mov
pop
adc
mov
outsb
mov
or
ss
clc
aad
in
and
outsl
fisubrs
push
xor
pop
loop
pop
insl
push
adc
sub
js
mov
mov
jns
sub
dec
pusha
pop
adc
rcrb
jae
ds
pop
cld
aaa
shll
inc
sbb
idiv
daa
adcl
pop
cs
mov
cwtl
arpl
xchg
lahf
adc
add
mov
outsl
lods
xchg
mov
push
ljmp
rclb
mov
cmc
push
bound
adc
or
pop
and
hlt
sub
mov
push
lahf
shl
add
xchg
push
repnz
sbb
mov
pop
mov
and
cmc
cwtl
test
mov
insl
clc
xor
dec
ss
push
ja
test
test
loopne
stc
in
mov
mov
cmpsb
inc
jge
adcb
int
imul
pop
push
test
cmp
mov
popf
sbb
daa
adcl
sahf
ret
ja
icebp
addb
aad
repnz
inc
fistps
and
inc
andb
js
dec
les
jg
mov
test
push
dec
aad
and
out
jmp
hlt
adc
test
inc
cwtl
sti
and
xor
inc
pop
ljmp
aaa
mov
es
pop
ret
aas
aam
scas
hlt
sbb
jl
call
mov
scas
and
push
adc
rorb
mov
mov
pop
cmp
lods
out
jle
clc
or
sti
pop
ds
ds
lock
mov
mov
jno
nop
cltd
dec
icebp
repnz
mov
in
add
int3
test
cmp
aaa
std
lods
aad
dec
mov
mov
addb
xlat
and
arpl
add
push
test
cmp
mov
in
lds
dec
mov
sub
pop
sbb
out
sahf
jae
jle
mov
mov
cmc
stos
mov
inc
rorb
push
xor
enter
fsubrs
popa
out
std
jl
sub
iret
add
iret
pop
adc
xchg
popa
scas
js
dec
mov
fiaddl
sti
in
div
mov
mov
mov
fldenv
mov
test
insb
pop
rorb
cmp
or
pop
cmp
or
lret
pop
inc
cmp
and
jns
insb
jmp
iret
lods
outsb
rclb
cmp
cs
adc
rclb
sub
push
and
lret
add
xor
xor
in
data16
fisttpll
dec
mov
and
pop
mov
pusha
dec
pop
mov
pop
or
out
adc
jb
fs
mov
lods
push
add
fsubrs
jns
and
leave
jl
js
scas
mov
imul
lock
push
lahf
or
data16
or
or
adc
ret
int3
faddl
lea
cmp
dec
mov
jne
pop
xchg
lret
or
dec
aaa
pop
jb
insl
xlat
daa
pop
ret
aas
lods
adcl
int3
fstl
push
adc
addr16
push
jno
sub
outsl
push
jge
xchg
jp
xchg
jno
dec
mov
adc
lds
shlb
jge
dec
ss
mov
inc
mov
inc
mov
outsb
adc
adc
stc
jecxz
repz
xor
sbb
scas
fidivrs
loope
push
sub
cmc
stc
and
jo
icebp
mov
test
icebp
data16
jg
leave
pusha
xchg
clc
jecxz
ret
les
jmp
mov
loopne
dec
add
shrl
mov
pop
add
mov
scas
cmc
movsb
cmpsl
push
mov
cld
jge
fldt
push
imul
in
inc
lret
adc
scas
xchg
fldt
out
gs
popf
xchg
shrl
roll
scas
mov
push
repz
jne
stos
push
pop
adc
cld
into
xor
ret
xchg
lock
loopne
ret
fistpll
nop
add
pop
xor
lcall
ffreep
mov
enter
leave
jecxz
mov
outsb
push
lret
lds
ss
in
out
or
mov
jo
mov
scas
jae
bound
rclb
mov
cld
push
xor
pop
lock
imul
and
or
mov
dec
fcmovb
scas
add
add
sbb
loop
in
cmpsl
xchg
ja
lret
subb
inc
insl
push
fstps
mov
inc
jecxz
loop
mov
fdivrs
xor
fdivl
and
stos
mov
gs
fidivrs
add
icebp
jnp
lods
es
jmp
int3
subl
rorl
pop
idiv
cmpl
test
scas
imul
mov
add
popa
cmp
outsl
push
in
fidivs
pop
xor
scas
adc
mov
mov
dec
mov
push
push
mov
inc
jns
cmpsl
inc
outsb
mov
rcll
lret
mov
adc
fldt
movsb
push
lock
imul
adc
mov
mov
adc
mov
pusha
ret
lret
xchg
lcall
dec
bound
xchg
sbb
rcrb
mov
sbb
mov
out
int3
or
out
repz
push
sbb
cmpsb
sahf
cmpsl
shll
add
mov
cmp
test
dec
test
rcrb
mov
pop
jle
pop
adc
jmp
fnstenv
out
jmp
xchg
les
sub
cs
scas
pop
shll
cmp
push
mov
mov
aad
mov
andl
add
sbb
mov
push
xchg
xchg
cmp
adc
inc
js
jnp
aas
cmp
rorl
int
sbb
pop
jae
lahf
mov
test
push
jl
das
pushf
inc
es
in
js
daa
dec
xor
fcoms
add
adc
xchg
or
addb
pop
inc
push
pop
xchg
dec
fwait
in
popf
jl
inc
arpl
mov
popa
negl
pop
and
ljmp
addr16
cmp
lcall
popa
ss
or
in
push
jns
in
stos
neg
cmc
sub
xchg
add
push
ror
loopne
cmpsl
inc
inc
dec
mov
into
cmpsl
add
or
clc
cmp
rorl
lea
aam
jl
sbb
cmp
mov
xchg
mov
nop
ror
adc
insb
mov
and
cmp
push
mov
out
pop
nop/reserved
jg
and
test
outsl
dec
xor
push
or
push
stos
xchg
int3
sub
inc
das
iret
pushf
inc
outsl
into
cmpb
xor
add
outsb
pop
push
shll
fsub
mov
xor
cmpsb
push
and
mov
bound
mov
pop
cmp
xor
lds
cmp
xor
xchg
fdivrl
and
jo
movsb
ljmp
rorb
shrl
lock
pop
cmp
pop
cmp
and
fmul
push
push
aas
dec
dec
ds
dec
mov
push
xor
sbb
sbb
mov
mov
shlb
movb
mull
aas
push
xchg
push
sbb
test
mov
icebp
stos
mov
sbb
xor
lods
and
arpl
pop
mov
mov
call
repz
fcomps
loop
loopne
dec
xchg
pop
xor
loope
mov
pusha
leave
push
inc
in
add
mov
cmp
xor
gs
xchg
dec
add
jle
fs
pop
xchg
lock
cmp
pop
add
mov
in
mov
cld
in
adc
mov
pushf
sahf
jge
cmp
insb
outsw
fiaddl
stc
arpl
in
mov
pop
test
xlat
push
sbb
jg
rcrb
subl
outsl
add
push
mov
cmp
inc
xchg
aas
subl
shll
aas
shll
mov
mov
icebp
xor
mov
xchg
adc
mov
cmp
pop
mov
xchg
inc
mov
mov
shlb
std
mov
addl
cltd
add
add
nop
push
lahf
mov
sub
repz
loop
mov
rcll
xor
xor
nop
cmp
cmp
cltd
sbb
pop
sub
xchg
stos
push
mov
or
push
push
cs
out
mov
push
add
jbe
pop
scas
test
les
sub
cli
movsb
nopl
or
and
test
jge
fbld
sbb
pop
lock
lds
cmpsl
loope
adc
push
jno
in
pop
fsubs
push
jle
xor
je
mov
and
stc
push
in
clc
mov
cmp
jo
jno
inc
and
pushf
dec
stos
mov
sub
fisttpll
xor
cmp
scas
push
xchg
out
pop
pop
cmp
mov
stc
xchg
hlt
mov
hlt
xor
pop
xor
sbb
es
in
popa
push
xchg
popa
inc
pusha
shl
mov
sahf
into
jp
lock
outsb
sbb
jbe
and
or
outsb
mov
push
sub
ffreep
aad
push
je
rclb
xchg
jns
pusha
mov
jle
xchg
stos
xor
test
lret
mov
orb
imul
pop
fsubs
loop
xchg
int
inc
decl
divl
sub
out
ds
outsb
enter
fnstsw
es
lcall
sbb
mov
sub
jl
fldl
push
call
fwait
or
inc
sbb
scas
or
or
sbb
loope
orb
push
xchg
aad
add
enter
aaa
jnp
lcall
cltd
cmp
test
push
dec
inc
and
push
lret
jnp
pop
out
pop
movsl
lock
enter
inc
std
cmp
xor
add
xchg
sbb
push
jb
adc
mov
cwtl
ss
jno
xor
shll
or
js
outsb
mov
mov
cmc
sti
dec
cmc
lea
dec
les
push
aaa
ss
pop
xchg
cmp
repz
adc
call
push
loop
scas
daa
pop
hlt
stos
dec
push
cmpl
inc
cmp
or
xor
mov
dec
cmpb
sub
inc
test
sub
cli
jb
mov
repnz
cmp
dec
addr16
cld
imul
sub
sahf
dec
push
xorl
xchg
movsb
lret
rcrl
sar
jb
adc
or
call
mov
xchg
cmp
fldenv
jge
jmp
in
pop
mov
jb
add
adc
xor
lods
jae
popa
sbb
mov
adc
fistps
rolb
or
shll
dec
jg,pt
sub
mov
jb
rcrl
dec
sub
mov
xchg
or
adc
sti
subl
cmp
call
addr16
sbb
or
loopne
outsl
outsl
mov
pop
dec
daa
mov
sub
lods
fildl
inc
adc
popa
cli
sbb
push
cmc
push
in
pop
sub
cmpsl
mov
idivb
xchg
lret
xor
loop
or
insb
mov
mov
dec
dec
lcall
push
and
dec
sub
dec
jp
jl
insl
sub
sub
lret
mov
fmuls
loopne
loope
adc
cmp
jnp
das
inc
sbbb
xchg
lahf
iret
xor
fnstcw
push
shrb
bound
pop
add
sarb
cmpsl
mov
dec
mov
mov
pusha
push
cmp
or
lock
xrelease
int3
cmp
in
shrl
xchg
aaa
push
mov
lret
enter
ja
es
mov
mov
cmp
test
cltd
mov
sahf
cmp
cmpsb
push
cmp
out
xorl
dec
shlb
cmp
or
or
push
inc
cwtl
lcall
and
clc
sbb
clc
xor
dec
sbb
in
xor
imul
int3
into
imul
adc
ja
cmp
fidivs
popf
shlb
xchg
scas
sbb
dec
andl
and
pushf
stc
sub
data16
idivl
mov
pop
pop
dec
mov
dec
stos
pop
outsl
lds
icebp
add
mov
das
gs
inc
xor
adc
or
mov
jns
jbe
imul
mov
fcomps
into
add
inc
icebp
mov
enter
and
sahf
xor
outsb
mov
loop
mov
mov
repz
int3
adc
push
shll
adc
fistpll
andb
out
mov
imul
in
pushl
movsb
pop
int3
xlat
pusha
cmp
mov
fsts
aam
dec
andb
ja
pushf
push
scas
in
pop
and
jl
xor
aas
pop
cmp
loope
jge
or
cltd
popa
push
cmp
cmp
push
shl
sub
test
sbb
enter
adc
sub
imul
mov
add
mov
loope
test
es
data16
stc
push
xor
mov
outsl
and
pop
lods
add
cld
cmc
xchg
and
and
js
shl
cmp
cli
mov
and
loop
sti
dec
mov
cwtl
gs
add
fidivl
lcall
mov
aam
or
inc
mov
or
in
cltd
sbb
xor
xlat
cmpsl
out
out
add
pusha
je
or
mov
dec
xchg
mov
cld
pop
push
mov
sahf
cli
fnstcw
cmp
lods
cvtps2pi
xchg
fildl
mov
sbb
xchg
adc
notb
push
cmp
cmp
cmp
cmp
rorl
mov
daa
inc
or
jge
push
in
cmp
jle
and
xlat
push
jp
jl
pushf
rcr
pop
test
adc
jae
push
popa
aad
sbb
mov
inc
cli
test
loope
int3
popa
jo
inc
cmp
xor
mov
adc
insl
xlat
lds
loopne
out
in
mov
xchg
data16
push
fbstp
xor
pop
mov
stos
ds
jmp
sarl
popa
outsl
fdivrl
icebp
cmp
add
fstpl
xor
in
cli
adc
adc
aaa
out
negl
and
lret
cmp
jne
gs
lods
loopne
mov
mov
adcl
in
xchg
jbe,pt
or
adc
loop
mov
mov
sbbb
cwtd
loope
out
xchg
inc
inc
repz
dec
popf
stos
ja
mov
fs
repz
jne
jmp
push
xor
in
xchg
sbb
dec
movsl
push
mov
jl
pop
sub
loope
aam
rorb
outsl
sbb
testl
sbb
cwtl
jno
inc
nop
test
arpl
pop
dec
push
push
aas
or
sti
add
cmp
sti
scas
mov
inc
cli
lods
imull
cli
sbb
mov
out
gs
mov
jl
pop
add
repz
das
lcall
das
lea
push
pop
mov
mov
pop
iret
sub
mov
jecxz
xor
and
jmp
pop
je
mov
sbb
pop
bound
pushf
sarb
movsb
outsl
rcrb
setbe
jmp
fdivr
xchg
pop
pop
dec
cmp
fwait
iret
popa
imul
stc
dec
int
adc
ds
ja
inc
cmc
mov
sub
lds
mov
das
or
cltd
add
push
mov
mov
in
mov
test
pop
test
test
sbbb
dec
xlat
lds
pushl
or
and
mov
dec
clc
mov
sbb
js
mov
stc
jb
mov
push
mov
test
pop
loope
jmp
clc
jle
sbb
jnp
gs
hlt
aaa
pop
xor
pop
out
fdivrl
pusha
mov
ret
dec
popf
mov
jl
mov
ret
test
xchg
xchg
lds
or
inc
fucomi
mov
out
clc
loop
cmpsl
mov
or
jns
sbb
mov
js
idivl
pushf
out
jbe
inc
push
add
cmp
into
mov
popa
xchg
adc
mov
mov
mov
mull
aas
cwtl
cmp
insl
mov
adc
xchg
sarb
ja
movsb
push
mov
imul
cmc
sbb
mov
pop
loope
in
xchg
xorl
pop
pop
mov
dec
jg
pusha
movsb
rorb
cld
push
jmp
int3
clc
scas
mov
lds
sub
pop
mov
sbb
adc
xchg
inc
add
fidivrl
mov
out
push
push
jo
test
pop
aaa
sbb
xchg
lret
rcll
imul
nop
out
jp
fsts
mov
sub
mov
push
mull
cmp
jg
pop
and
scas
call
sbb
xlat
jge
push
jae
bound
and
adc
cmp
xchg
orb
xor
movsb
sarl
cmp
inc
in
xchg
movsb
sub
pminub
add
out
sbb
stos
test
repnz
daa
lcall
pushf
nop
pop
jae
sbb
fmull
mov
sub
int3
je
insb
pushw
xchg
adc
push
pop
jecxz
mov
mov
mov
push
sahf
jb
call
in
mov
enter
push
repnz
outsb
outsb
sbb
and
rcl
xchg
cmc
jnp
mov
sahf
xor
popf
xor
loopne
push
xor
cmp
fsubrs
dec
dec
xchg
shlb
push
push
sub
xor
dec
movsl
sub
sbb
add
scas
xchg
mov
hlt
ja
in
mov
cli
lret
dec
xchg
aas
xchg
mov
lock
fildl
cwtl
fwait
imul
fsubr
inc
or
xchg
sbb
push
dec
adc
into
test
cmpsl
sub
loop,pt
lahf
adc
dec
sub
sub
inc
ljmp
mov
das
xor
adc
outsb
push
in
cmp
lea
pop
leave
sbb
mov
test
idiv
imul
add
push
dec
sysret
adc
in
cmp
mov
jb
push
in
jbe
jl
jo
push
push
push
mov
in
cmpxchg
jmp
mov
xor
into
xchg
inc
test
mov
in
rcl
dec
inc
or
nop
insb
insb
ds
sub
cltd
and
fildll
cwtl
push
ret
pop
mov
inc
mov
mov
movl
xchg
call
je
leave
sbb
nop
rcll
mov
dec
ds
jmp
popa
into
mov
repnz
or
and
xchg
call
jecxz
ds
shll
xchg
test
jmp
call
cmc
lret
dec
int
cld
mov
test
subb
cmp
xor
outsb
repnz
pop
out
dec
push
and
fists
orb
mov
outsb
pop
lds
xor
in
fbld
xchg
fwait
mov
xchg
xor
cmpsb
and
ja
mov
pop
pop
sub
in
test
aam
push
push
js
sbb
sbb
xor
idivl
sub
enter
dec
pop
insb
fidivl
jg
movsl
aam
or
aaa
cmpl
sub
cs
movsl
iret
dec
jl
add
in
sbb
fdiv
rclb
popf
addl
cmp
dec
and
fadds
lock
js
cmp
ds
fidivrs
addr16
mov
call
jnp
mov
jno
out
xor
outsb
push
cmp
inc
out
push
rol
fs
pop
and
xchg
aas
sbb
shlb
pop
add
insl
leave
cmp
int
loopne
cltd
sbb
push
dec
loopne
lahf
xor
hlt
lods
ret
cmp
sbb
sbb
or
xlat
imul
mov
or
sub
inc
daa
testb
sbb
out
stos
jecxz
mov
adc
mulb
inc
jp
test
xchg
inc
lds
aas
sahf
mov
mov
fdivs
popa
pushf
and
ss
leave
pop
movb
add
mov
arpl
mov
push
jae
in
or
cld
inc
std
shrb
or
out
fldt
mov
ret
sub
aas
ljmp
je
jbe
add
int
outsl
xchg
mov
push
clc
jo
push
push
dec
mov
pusha
xchg
push
fdivrs
daa
sub
mov
inc
push
jp
ljmp
daa
sub
out
shlb
xchg
cmpsb
xlat
out
sbb
dec
jge
int3
lods
mov
imul
mov
insb
pop
lds
lcall
mov
add
xor
fsubrp
in
or
cmp
shll
fstl
dec
jno
xchg
push
shlb
inc
add
cmpsb
jnp
inc
dec
mov
test
ss
push
or
in
fs
sub
jbe
inc
xor
dec
mov
sbb
add
or
xor
lods
dec
sub
inc
cmpsl
jmp
into
push
mov
int
in
mov
out
aad
lea
outsl
dec
divb
sub
push
pop
es
or
inc
xor
mov
nop
xchg
xchg
xchg
ret
push
pop
popa
jmp
popa
iret
mov
xor
xor
add
inc
push
or
pop
orl
inc
in
icebp
push
dec
inc
pop
pop
inc
lods
test
data16
mov
push
shl
add
xchg
loope
adc
push
out
pop
mov
mov
jbe
das
cwtl
pop
cmp
xchg
pop
pusha
cmp
adc
push
xchg
test
fmul
add
sbb
and
lcall
inc
push
fcmovnbe
je
je
mov
punpckhbw
push
xorb
mull
fwait
xchg
pop
or
enter
xor
pop
fdivl
xchg
mov
aas
jmp
imul
pop
or
push
scas
cwtl
xchg
cmpsl
ds
in
adc
scas
imul
pop
mov
out
or
push
and
push
lahf
inc
cli
cli
pop
in
aam
rcr
sub
or
inc
sub
notb
test
mov
repz
sbb
push
xlat
inc
adc
out
jmp
sbb
fucomip
sbb
enter
pusha
mov
ret
shlb
mov
loopne
inc
fidivs
or
orb
mov
mov
insl
out
xchg
add
inc
imul
pop
icebp
jno
mov
push
lahf
jmp
iret
mov
jbe
push
paddd
int
das
in
jmp
lods
jl
adc
cmpsb
inc
pushf
stos
xchg
cmpsl
or
lret
das
outsl
sbb
jb
in
lds
xor
lret
leave
movsl
enter
xor
outsl
scas
sahf
add
inc
or
jle
cmc
xor
les
and
mov
mov
repz
sub
nop
lahf
fcoml
and
xchg
popa
ss
pusha
test
sbbl
sub
pop
and
mov
pop
add
fucomi
fwait
into
pusha
in
jnp
jns
mov
push
repz
jp
mov
rcll
xchg
mov
push
mov
add
cmp
xor
icebp
add
loopne
pop
jo
cmp
mov
xor
adc
int3
adc
lcall
jns
jne
fidivrs
inc
nop
out
push
and
cmp
sahf
dec
add
push
lret
add
faddl
icebp
popf
dec
xchg
lods
sbb
lods
push
inc
and
addr16
mov
shll
fnsave
jp
push
shl
nop
repz
pandn
xlat
mov
es
adc
xor
sub
xchg
movsb
fistps
xchg
sbb
adc
movsb
frstor
bound
cmp
js
jl
leave
lds
push
xchg
sti
int
mov
cmp
push
ds
orb
icebp
into
data16
aaa
xchg
jge
sbb
test
aaa
cmp
nop
dec
testb
cmp
sbb
jnp
jns
je
and
jmp
or
sahf
mov
stos
xchg
psubw
inc
or
cmp
shlb
cmp
aaa
jns
push
sbb
fs
imul
movsb
ja
push
cmc
pop
jbe
pop
mov
loop
sahf
scas
push
xchg
sub
push
sahf
addr16
mov
xor
pop
push
lcall
arpl
inc
fucomp
ret
gs
out
nop
stc
fdiv
inc
add
jmp
fnstcw
jg
add
dec
div
push
iret
fstps
sub
and
daa
add
add
and
pushf
mov
jge
xlat
inc
mov
idivb
fimull
insb
leave
mov
ja
mov
sbb
hlt
outsb
bound
sbb
leave
imul
add
cmpsb
movsl
or
cmp
sahf
or
xlat
int3
ficompl
sub
mov
jg
sbbl
out
or
out
jmp
idiv
cmp
stos
sahf
or
icebp
dec
push
cmpsb
js
and
bound
jge
add
pop
add
sahf
cmp
adcb
dec
sbb
rcrb
dec
lds
neg
or
mov
imul
xchg
aad
sub
mov
or
sahf
mov
lcall
into
cs
mov
pop
and
inc
out
mull
dec
addr16
fildl
out
pextrw
push
xor
test
shrl
fiaddl
loope
mov
jae
das
into
sub
je
cmp
cwtl
sbb
mov
mov
cmc
aam
nop
popa
pop
dec
ljmp
ljmp
mov
in
or
or
and
dec
inc
cli
pusha
jg
jmp
fistpl
std
xchg
ret
aad
cmp
in
jb
dec
stos
leave
cmp
cvtdq2ps
xlat
cmp
repnz
insb
incl
ljmp
mov
fcmovne
and
addl
lds
lcall
add
lods
clc
mov
popf
mov
push
dec
loop
inc
ret
add
aaa
insb
jmp
stos
je
lret
push
adc
data16
and
dec
mov
adc
cli
loope
shlb
and
jp
lahf
inc
aaa
jae
fmul
xchg
sbb
out
out
push
push
sub
jle
pop
xchg
loopne
xlat
mov
xor
mov
mov
ljmp
mull
mov
xor
lret
mov
lock
push
insb
xlat
mov
mov
lods
out
addr16
jnp
bound
arpl
push
inc
mov
pusha
xor
cmp
into
jecxz
scas
push
imul
call
orl
ret
inc
dec
mov
inc
sub
sbb
outsl
mov
aam
shlb
dec
add
cmpl
insb
rcll
inc
orl
cwtl
lea
and
sbb
xchg
nop
dec
xchg
adc
scas
cmp
mov
rorb
xchg
iret
jno
shr
xchg
fdivs
jmp
jle
and
jmp
mul
add
arpl
addr16
lea
jmp
clc
dec
sbb
add
mov
xor
lahf
pop
sahf
push
sarb
mov
in
adc
das
in
dec
push
xor
out
mov
push
and
xchg
jp
sbb
adc
cmc
jecxz
pushf
mov
les
xchg
sbb
push
lock
outsb
mov
mov
mov
imul
cmp
fs
ljmp
jns
popf
fwait
xchg
test
pusha
pop
test
xlat
jnp
nop
and
hlt
or
enter
fs
in
outsl
sub
or
sub
loope
and
into
in
add
sti
jmp
push
and
cwtl
lahf
dec
mov
in
cmpsb
cli
out
sbb
loopne
cmp
pusha
push
jg
cmp
jmp
mov
or
jg
inc
xlat
xchg
pop
inc
sbb
stos
pop
nop
mov
out
dec
popf
std
mov
push
push
aad
jg
push
imul
cmpsl
stos
pop
imul
stos
in
pop
mov
out
mov
sub
or
lcall
sub
enter
fadds
outsb
std
ss
lods
mov
insl
iret
and
fwait
je
imul
rolb
inc
lds
loop
adc
mov
lods
pop
fisttps
or
daa
rcl
arpl
push
cmp
loop
jmp
push
jo
loopne
cmp
test
sub
cmpsl
scas
in
out
pop
dec
xchg
loopne
dec
loopne
jbe
notb
leave
sbb
jae
cmpsb
testb
fsubl
xor
inc
mov
xchg
ret
jb
addr16
js
inc
pop
scas
sub
lods
daa
pop
fs
fldl
mov
ret
shl
insb
pop
pop
inc
push
lret
inc
mov
sti
add
sub
push
pop
fcmovb
push
lods
imul
iret
lcall
jb
ret
sbb
mov
enter
in
or
push
cmp
cmp
lret
xlat
xchg
inc
xor
sbb
push
dec
int3
mov
pop
lret
push
mov
inc
and
pop
jb
in
inc
repz
or
cltd
hlt
sub
jbe
jg
rcr
out
out
fldl
jg
push
mov
push
in
icebp
aas
pop
or
movsl
sbb
add
push
mov
pop
xchg
mov
dec
inc
xchg
dec
aam
cs
enter
ja
xchg
repz
addr16
fstl
jp
test
mov
stc
repz
inc
mov
push
push
fcoms
mov
iret
stos
imul
insb
inc
or
add
aad
jg
jb
mov
test
outsb
mov
mov
sbb
sub
shl
jae
push
cmp
aad
nop
cwtl
inc
pop
je
cli
xor
popf
jne
les
mov
aas
push
jns
mov
mov
mov
jle
popf
movsl
push
ficoms
xor
mov
adc
subb
ja
add
nop
push
movsl
mov
pop
sub
call
push
das
push
inc
loopne
lock
aad
cmp
andb
add
inc
pop
cmp
pop
xor
shr
cld
addr16
les
cltd
push
inc
ljmp
negb
jno
lods
xor
gs
mov
outsb
push
jg
xor
adc
or
addr16
adc
dec
cltd
enter
dec
pop
js
and
fs
push
lret
push
mov
fcoml
mov
rol
cli
add
jp
sbb
mov
aas
lea
mov
xor
xlat
or
xchg
jnp
jo
sbb
mov
loop
rcl
scas
std
mov
int
xor
xchg
adc
fstpl
push
inc
adc
out
icebp
scas
adc
adc
or
in
xchg
fdiv
mov
dec
cmc
jle
rcr
and
insl
pop
call
mov
test
lcall
mov
test
call
push
lcall
test
mov
fsubr
sbb
aas
in
or
push
dec
jbe
lods
testb
sbbl
das
mov
pop
loopne
loope
ss
out
in
lock
stos
lcall
in
push
fwait
mov
pusha
mov
imul
ja
ss
sbb
imulb
jecxz
xor
insl
minps
fwait
sbb
add
sar
jnp
cld
lds
adc
xchg
std
jne
mov
arpl
jmp
fwait
add
insl
fstp
push
push
out
xchg
stc
mov
mov
jle
jb
or
add
fwait
xchg
loopne
jno
lock
dec
ss
add
mov
xor
notl
push
cmpsl
jle
sbb
arpl
and
mov
shlb
push
xchg
cmp
fisubs
add
fidivrl
inc
idiv
arpl
jo
das
pop
jl
fimuls
mov
jge
adc
and
and
and
adc
and
out
repnz
dec
xchg
sti
jbe
sbb
mov
xchg
jmp
cmpsb
mov
gs
dec
mov
je
pop
jp
mov
jp
in
fidivs
mov
clc
out
aam
xchg
mov
ja
stc
xchg
jo
aaa
mov
push
mov
repnz
add
imul
stc
cs
loope
or
mov
mov
in
popf
push
vsqrtpd
fsubrl
mov
nop
cmp
and
arpl
das
bound
mov
shl
outsl
push
daa
sbb
enter
sbb
jno
addr16
inc
push
out
and
sub
sbb
cmpsl
in
inc
inc
insb
or
fisttpll
shl
popf
sahf
pop
aas
paddusw
cli
cmpsb
movl
outsb
dec
mov
mov
nop
jnp
ljmp
out
sbb
mov
fucomip
jb
mov
adcl
jecxz
fidivs
mov
pop
fwait
ret
rcl
or
out
or
cmp
cmp
adcb
pop
movsb
xor
arpl
mov
icebp
repz
pop
lock
pop
rorl
cmp
dec
mulb
notb
pop
aaa
pop
iret
or
jmp
mov
test
jp
out
cmp
lea
scas
daa
push
test
roll
or
loope
fidivl
aaa
insl
push
test
lret
loope
mov
dec
leave
cmp
mov
clc
notb
loope
and
adc
cmp
pop
leave
iret
repnz
xlat
inc
or
lea
adc
mov
push
test
add
mov
pushf
in
mov
aaa
leave
cmp
add
and
jae
xchg
into
jg
xor
sub
pop
adc
inc
sub
adc
movsl
jle
push
into
insl
mov
xor
popa
pop
in
xorl
add
mov
lea
es
testl
mov
ret
pusha
pop
inc
lret
std
bound
lods
sub
cmc
ljmp
jb
je
lret
push
aam
out
data16
mov
mov
xchg
cmp
shrl
ficompl
cld
pop
mov
call
outsl
mull
int3
and
ror
sbbb
sarb
xor
ss
pop
sub
mov
push
sbb
and
mov
bound
aas
mov
call
int3
rolb
push
lcall
ds
loop
jg
adc
pop
push
xchg
insl
aad
mov
add
sub
scas
icebp
pop
jns
add
push
mov
mov
sahf
push
inc
movsb
scas
addb
sbb
call
sub
je
sub
xor
inc
fwait
arpl
sub
cld
jno
xchg
aad
addr16
push
loopne
jmp
sbb
adc
sbb
cmp
sub
aam
negb
xchg
xor
pop
xchg
mov
xchg
ss
les
mov
data16
outsb
fs
mov
jns
adc
mov
inc
jnp
or
inc
pop
xchg
aaa
mov
pop
in
hlt
xchg
pushf
aam
fisubl
bound
test
add
orb
les
xor
mov
mov
orb
ds
xchg
xor
lods
pop
push
test
mov
cmp
cs
out
fwait
mov
into
arpl
xchg
inc
arpl
repz
nop
sub
mov
setg
sar
lods
jno
lods
imul
outsb
cwtl
lock
adc
add
mov
into
lret
sahf
mov
or
jge
and
adc
xor
or
and
in
lods
xchg
scas
dec
add
xor
pop
popf
mul
add
sub
clc
les
mov
xchg
jl
jno
popf
rolb
xchg
add
ret
sbb
clc
xchg
pop
sbb
jl
lret
mov
or
cmp
xchg
lret
iret
inc
mov
mov
pop
adc
push
lret
std
mov
repnz
xchg
shlb
mov
inc
dec
mov
xchg
pushf
enter
or
bound
dec
inc
cmpsb
loop
loop
jmp
out
adc
mov
sbb
mov
pusha
push
xchg
dec
fdivs
sbb
jb
je
mov
push
and
adc
cmp
mov
pushf
sub
pop
fstpl
scas
mov
sbb
inc
sub
addl
jbe
test
cs
jg
adc
scas
les
out
adc
lret
cmp
subb
jne
push
jecxz
test
jl
and
mov
es
pop
lret
add
ds
rclb
mov
loopne
daa
push
cltd
test
loope
adc
aam
mov
add
mov
xlat
je
lret
add
mov
scas
mov
les
hlt
data16
add
or
xchg
push
jnp
fs
or
leave
andb
dec
mov
xchg
sub
xor
mov
xchg
ds
xchg
jb
sbb
fiadds
bound
xchg
pop
outsb
xor
jnp
jns
inc
jnp
shrb
aad
stos
faddp
lods
fidivs
mov
xchg
fcompl
pop
fadds
test
or
popf
in
lock
dec
or
mov
inc
jo
cmpsl
mov
mov
cmp
sbb
cli
cltd
test
and
sbb
rorl
pusha
shll
loopne
xor
adc
fadds
stos
pushf
shrl
cmpsb
mov
push
jmp
ret
mov
imul
insb
push
into
pop
pop
daa
addr16
hlt
jno
xor
loope
adc
xchg
cmp
push
lea
rcll
rcrb
xor
mov
jno
xor
push
test
dec
cmpsb
mov
xchg
in
lods
lods
xchg
xchg
std
adc
xchg
in
pop
or
sub
sbbl
iret
jg
mov
data16
sub
ret
js
cmp
add
mov
sbb
mov
cmp
sub
and
adc
cwtl
push
out
sbb
lods
adc
gs
xchg
arpl
jbe
or
mov
popf
adc
pop
mov
shlb
mov
xchg
ds
pop
pmulhrw
lea
sbb
cmp
mov
push
sub
add
sarb
stos
std
scas
cmpsl
add
pop
lea
dec
jl
icebp
mov
xchg
stc
xchg
loopne
xor
sub
mov
add
data16
lret
pop
xor
rcl
fidivrl
and
fisubs
or
cmp
xchg
xor
inc
ljmp
test
arpl
fwait
sbb
stos
mov
test
je
aam
sub
sub
add
sti
sahf
out
sbb
out
xchg
push
mov
cmp
testb
cltd
fiadds
leave
repnz
jecxz
mov
add
repz
sbb
sub
mull
cmp
and
dec
mov
lock
shrb
xchg
jo
mov
and
cmc
xchg
and
out
les
shll
ljmp
fmuls
aaa
ss
pushf
xor
mov
aaa
aas
test
mov
jae
jecxz
ficoms
jbe
imul
imul
sti
jbe
sbb
mov
andb
jge
cmpsl
aaa
pop
jne
sbbl
or
fs
dec
sahf
add
cltd
lahf
shrb
jae
in
push
pusha
inc
les
mov
scas
inc
cli
fwait
lods
or
jne
xor
bound
icebp
je
cmc
clc
jne
fsub
lret
in
add
push
outsb
dec
aad
cmp
outsl
stos
cltd
movsl
fisttpll
ret
cltd
les
sub
pop
jns
mov
dec
scas
jecxz
xlat
sub
mov
jae
jg
aam
push
mov
sahf
or
and
mov
push
shlb
ss
fistpll
xor
mov
xorb
inc
in
notl
add
and
imul
ret
in
sub
cltd
scas
out
pcmpgtd
repnz
jp
inc
repz
adc
mov
shlb
push
inc
xor
jmp
fildll
add
xor
scas
aad
push
ljmp
shlb
push
jno
pusha
push
icebp
cmp
sbb
or
insl
sbb
cmp
sub
popa
mov
jge
ds
data16
loopne
sub
jmp
mov
push
push
scas
pop
inc
or
adc
push
mov
dec
mov
inc
lret
xchg
and
fldl
and
xor
hlt
pop
xchg
mov
scas
xor
push
ret
lret
cmpl
mov
orb
pop
sar
add
sub
bound
cltd
xchg
xor
shll
xchg
and
and
xchg
push
cmp
das
push
aaa
mov
and
sbb
cli
daa
cmp
mov
mov
lret
jp
das
ss
stos
mov
mov
sar
nop
xlat
mov
fdivr
dec
xor
add
out
test
cmp
dec
mov
xor
cltd
mov
in
xchg
xchg
xchg
pop
imul
push
iret
pop
adc
pop
jle
popa
das
incb
xor
repnz
fcompl
sub
cmp
out
mov
xor
xor
xor
lahf
inc
out
mov
inc
ja
int3
dec
dec
stos
jmp
mov
jno
sub
ds
icebp
add
cmp
shrl
pushf
clc
fyl2x
pop
subl
nop
cmpsb
mov
mov
sub
mov
negl
push
js
fildl
jle
mov
or
push
lods
xor
dec
leave
ja
pop
nop
add
jno
mov
cmpsl
sahf
xor
jp
sbb
bswap
mov
mov
fistps
or
adc
push
lock
push
mov
data16
loop
jle
xchg
sarl
jo
cmpsl
xor
or
ljmp
jg
nop
test
jg
mov
or
lret
push
or
xchg
sub
dec
jmp
div
xor
or
cmpsl
mov
pop
ljmp
dec
ror
sbb
movsb
insb
dec
dec
in
jne
fucom
and
and
and
cmc
cmp
outsl
mov
in
adc
loopne,pn
in
xchg
movsb
sbb
sbb
pop
mov
cltd
out
test
insb
sub
movsl
pop
jae
insb
ror
mov
scas
xor
pop
imul
inc
jno
ret
ret
xchg
or
stos
sub
add
jo
or
inc
das
rcll
and
xor
dec
ror
mov
pop
out
fwait
xchg
pop
pop
mov
clts
push
xorl
jle
push
mov
addr16
bound
ficoml
dec
mov
cmpsb
cmpsl
and
dec
incl
icebp
adc
cld
mov
dec
lds
mov
test
jae
mov
ret
sbb
mov
movb
adc
jge
mov
ud2
adc
fisttpl
jbe
je
out
bound
dec
push
into
nop
xor
cmpsb
xor
leave
test
lds
fdiv
jmp
lcall
out
out
xchg
sub
mov
push
mov
test
and
subb
stc
insb
push
sti
je
fimull
jne
xchg
mov
xchg
pop
push
adc
loop
push
add
std
test
repnz
cltd
and
je
adc
fwait
rol
lret
and
cltd
xchg
adc
ret
faddl
cmpsb
cmp
stc
sarl
add
jbe
popf
testl
cmc
xor
cmp
mov
mov
ja
sti
test
push
fcomi
rcr
fs
push
inc
push
xchg
mov
pop
xchg
mov
cltd
push
dec
stos
pusha
jns
mov
xchg
and
shl
shrb
xchg
sbb
popa
xor
imul
sub
bound
pop
adc
mov
pop
aaa
nop
push
loopne
jae
int3
and
jmp
inc
xchg
ret
repz
sbbb
std
inc
dec
adc
addr16
stos
in
fnstenv
adc
sarb
js
shrb
pop
sub
fldl
jecxz
mov
pop
aaa
inc
push
ljmp
out
jae
cmpsl
mov
xchg
pop
sahf
scas
mov
test
pop
mov
iret
cmpsb
add
pop
and
cwtl
aad
andb
mov
mov
xchg
aas
out
push
aaa
mov
std
and
mov
xchg
add
cmp
cld
cmc
inc
mov
push
lods
and
add
mov
je
shll
mov
psrad
xor
movsl
pop
xlat
mov
mov
add
inc
adc
mov
test
aas
push
sbb
scas
loopne
xor
lcall
jbe
call
jo
add
pop
sbb
idivb
mov
sub
sub
jbe
mov
out
add
lods
mov
inc
les
dec
in
stos
adc
pop
fs
jo
jbe
mov
mov
jecxz
jmp
cld
test
insb
scas
insb
push
out
xor
shl
pop
adc
xor
popf
scas
push
xchg
xor
in
xor
loop
imul
ret
sub
push
and
dec
pop
psubusb
adc
sub
outsl
jbe
jp
dec
sahf
sub
mov
cltd
test
mov
sbbb
cs
sub
xchg
mov
mov
mov
push
cmp
jne
lret
outsb
xlat
sub
add
mov
push
fcmovnu
cmp
jle
ss
mov
push
cmp
mov
mov
insb
push
inc
cmp
lret
ljmp
and
mov
lea
fs
pop
dec
mov
sub
jns
inc
pop
clc
jl
aad
lods
mov
dec
adc
lock
fs
pop
pop
lods
in
dec
push
cmp
stc
das
xchg
adc
ret
or
lds
pusha
lret
test
rolb
std
aad
loopne
inc
jae
ficoml
pop
push
lea
mov
mov
pop
pushf
push
inc
lcall
pop
pop
push
loopne
add
testl
aad
test
lret
pop
push
mov
frstor
jecxz
cmp
cmp
cmp
xchg
dec
mov
incl
fmulp
dec
lahf
icebp
adc
pushf
cmpsl
dec
jb
pushf
cs
rol
aaa
and
out
cwtl
jecxz
es
xchg
in
pop
addl
lea
cmp
add
aaa
xlat
into
sbb
mov
out
divb
rorl
pusha
ror
ljmp
imul
sub
dec
sbb
xchg
jb
sbb
and
mov
cltd
xchg
add
and
int3
adc
outsb
insl
lds
nop
push
sarl
pusha
aas
adc
jmp
pop
dec
adc
mov
bound
mov
outsb
mov
dec
test
xchg
enter
adc
scas
addl
pop
lds
lods
fildl
sub
in
fidivrl
adc
sub
mov
clc
jecxz
sbb
mov
adc
xor
std
cmpl
das
loop
fnstcw
addb
cld
scas
test
jne
cmp
mov
push
int
call
and
hlt
dec
pop
in
jg
adc
loop
cmp
sbb
adc
push
pop
ror
gs
xor
lds
fs
mov
sub
adc
ljmp
inc
addr16
gs
add
outsb
xchg
shlb
mov
push
adc
mov
mov
enter
lods
adc
add
adc
mov
mov
jmp
jnp
pusha
push
mov
int3
imul
leave
jns
mov
nop
mov
mov
jge
pop
loop
adc
orb
sub
lret
adc
cltd
rolb
mov
sbb
cld
mov
adc
dec
mov
stos
sub
sub
les
fldl
jg
mov
sti
adc
sahf
cmc
sub
std
notl
xchg
cmp
sub
stos
adc
sub
add
pop
dec
out
mov
enter
fwait
cmp
mov
fucom
pop
pop
loope
adc
add
repnz
bound
or
lcall
xchg
jb
rol
inc
ret
lock
lcall
mov
loope
mov
mov
fistl
pop
sbb
push
lock
jo
xchg
xchg
jae
loopne
shlb
lcall
es
cs
mov
xlat
push
xor
pop
jnp
pop
lods
or
inc
lods
mov
lods
and
outsb
mov
sub
and
push
mov
repz
das
aad
filds
stc
push
test
xor
fmull
inc
repnz
or
mov
incb
xchg
addr16
and
in
testl
pusha
inc
shrl
pop
fadds
push
je
cs
jae
int3
pop
sbb
mov
or
mov
mov
popa
push
mov
fbld
ficomps
mov
lret
jg
jo
idivb
movsb
push
cmp
dec
mov
push
lea
sarb
and
adc
pop
insl
popa
mov
adc
pop
jmp
test
sub
or
aaa
dec
addr16
and
add
js
and
andb
iret
sub
aaa
and
sub
or
cmp
cli
add
and
adc
ficomps
int3
fiaddl
mov
bound
jl
movnti
dec
rolb
jmp
roll
sbb
cmp
and
push
xlat
cmp
xchg
adc
jns
je
repz
movsl
cmp
into
dec
stos
push
ds
xor
aas
scas
and
xchg
stos
das
pop
call
fsubr
hlt
pop
mov
cmpsb
and
lods
sub
mov
repnz
loope
popf
push
xor
jo
cmp
ja
xor
pop
shl
pop
xchg
xor
cmp
sub
cmc
rorl
push
fidivrs
xlat
and
out
fincstp
pop
push
adc
ja
dec
mov
subl
movsl
das
pop
fscale
leave
lock
lretw
fadd
mov
inc
xlat
cmp
jns
or
addr16
or
sub
pop
pop
xlat
inc
sub
sti
pop
cmp
xchg
scas
incb
test
xlat
lock
mov
in
mov
ret
xchg
or
insb
sub
frstor
cmp
inc
loopne
push
or
pop
add
mov
hlt
sbb
or
sub
mov
nop
mov
and
dec
nop
mov
and
mov
outsb
aaa
add
jne
shrb
dec
movsb
cmp
lods
push
add
mov
jne,pt
push
in
arpl
cwtl
data16
ret
test
jb
pushf
jecxz
adc
ds
sarb
jb
pop
push
sub
dec
xchg
push
pop
lret
xor
sbb
mov
das
inc
subb
hlt
xorb
dec
xlat
scas
lret
movb
outsb
pop
jmp
test
es
mov
adc
movsb
or
sti
pop
mov
cmpsb
pop
inc
in
lods
sbb
fistpl
cs
mov
rcll
sub
int3
cs
dec
leave
sbb
xchg
out
or
and
cmc
sbb
push
jne
sbb
mov
lahf
adc
sub
cltd
inc
dec
fisttpll
scas
or
enter
jns
pop
mov
ret
mov
dec
gs
cli
xchg
cwtl
mov
in
je
fsts
push
test
rorb
pop
dec
movsb
jo
xorb
repz
test
js
adc
xchg
loopne
adc
push
cmp
aas
cmpsb
jp
ret
mov
inc
lcall
cltd
ljmp
rcrb
pop
cltd
call
das
push
stos
cmp
fidivs
mov
ret
sahf
mov
inc
adc
dec
test
pop
mov
push
dec
adc
mov
mov
add
data16
mov
adc
xor
xchg
mov
jmp
gs
imul
frstor
xor
mov
testb
test
inc
popf
jp
loopne
xchg
or
adc
shll
inc
ss
bound
or
jmp
jbe
clc
adc
mov
sbb
xchg
paddw
pop
addr16
rclb
jg
xor
test
mov
cltd
dec
lcall
and
jp
pop
or
push
adc
sbb
dec
fstpl
xchg
popf
xor
loope
aam
add
sbb
incl
jp
sar
mov
fnstenv
stos
out
xor
daa
inc
sbb
bound
xchg
and
push
aad
push
mov
cmpsb
movsl
sub
daa
cmp
xor
mov
pop
mov
adc
pop
xchg
test
dec
pop
loope
sbb
cmp
aaa
cmpsb
xorb
jo
push
mov
inc
psrad
inc
adc
adc
pusha
sub
and
push
insl
je
dec
dec
lods
mov
lret
aas
jp
adc
pop
mov
jo
xor
insb
xor
cmp
push
subb
lds
sub
sahf
add
fsubrs
sub
popf
mov
clc
out
out
sbb
aas
out
fnstenv
rcll
and
imul
fsubrl
aas
lock
mov
fbstp
scas
mov
mov
pop
mov
jo
out
mov
imul
call
ja
mov
dec
hlt
mov
addr16
adc
cmp
insb
mull
dec
mov
test
std
ja
lret
adc
loopne
inc
mov
cmp
mov
jp
in
leave
inc
push
mov
xor
pop
inc
outsb
xor
sbb
adc
xchg
inc
or
ljmp
int3
movsb
mov
push
mov
mov
js
arpl
jbe
aaa
shrl
add
stc
shl
dec
movsb
subb
jmp
test
call
arpl
cltd
fistpll
push
dec
lods
adc
push
xchg
andl
in
xchg
out
testb
push
lods
addr16
inc
lods
xchg
fmuls
scas
or
lcall
pushf
leave
inc
outsb
pop
mov
mov
sub
dec
pop
adcl
es
shr
je
dec
inc
jnp
cwtl
mov
add
pop
leave
push
sub
data16
pop
and
mov
pop
sub
cmpsb
in
js
push
rclb
inc
mov
xchg
mov
test
inc
out
push
dec
push
mov
jbe
and
adc
and
push
xor
or
mov
das
jg
or
pushf
lds
jb
push
xchg
daa
jg
outsb
cmpsb
cmpsb
iret
sub
into
jnp
lcall
jne
mov
addr16
ds
es
pop
inc
subl
xchg
jle
nop
les
ja
bound
cmpsl
cmpsl
addr16
mov
leave
cmpsl
pop
or
ficomps
mov
xor
insb
lahf
inc
adc
aaa
mov
sbb
imul
pop
jo
dec
pop
sbb
out
lcall
inc
leave
shrl
repz
xchg
sbb
xor
dec
xorl
jmp
xchg
cwtl
add
inc
daa
jbe
stc
nop
mov
jnp
dec
outsb
mov
movsl
xchg
rcl
aad
mov
fistpll
and
fidivl
pop
add
loop
xor
fs
jge
jbe
je
add
loopne
movl
idivb
out
inc
insb
xchg
jns
hlt
in
xor
aaa
jo
mov
shrl
sub
xchg
pop
aas
or
sub
mov
sub
loop
jns
test
cmp
mov
repz
mov
in
sar
movsb
sub
lods
pop
xchg
add
or
push
js
xor
test
imul
je
aaa
and
aas
cltd
mov
test
xor
imulb
ret
std
stc
outsb
pop
fisttps
fstp
shl
icebp
fcomip
jbe
add
out
fcomps
jb
sub
sbb
mov
loopne
arpl
xor
test
and
mov
fidivs
or
daa
sub
fwait
out
dec
cmp
int3
jecxz
mov
sub
push
xchg
in
notb
jle
sbb
jb
enter
pop
pusha
insb
xrelease
mov
ffree
mov
fisubrs
shlb
inc
sub
jg
add
push
imul
inc
aad
cmp
lahf
aas
in
sahf
push
cmp
add
ds
lret
cltd
arpl
jnp
shlb
lret
mov
cli
ss
lock
mov
pop
sbb
sbb
mov
lret
ret
adc
jmp
insb
lahf
jecxz
rolb
push
testb
inc
mov
ficoms
pop
mov
mov
mov
mov
dec
sahf
push
add
test
cmp
xor
adc
int
jae
sarb
repnz
or
bound
sub
dec
push
addr16
xorb
or
push
std
push
sub
test
into
loope
decb
dec
imul
sti
adc
jg
or
mov
cmp
lcall
xlat
or
mov
movsb
xor
mov
scas
cmp
push
mov
sub
mov
cmpsb
mov
je
mov
xor
out
or
sub
push
or
stc
lret
xchg
mov
pop
jns
jnp
cmp
dec
push
nop
imul
inc
rcr
mov
sbb
sbb
lret
mov
xchg
movsl
jb
lock
mov
jl,pt
add
repz
shrb
inc
inc
stos
insb
jb
nop
js
fs
cmc
jb
pop
mov
mov
dec
icebp
cmp
sub
cmp
jnp
leave
lock
dec
xchg
pop
sbb
popa
and
scas
xor
ret
mov
jecxz
inc
push
sarl
shlb
jge
shlb
stc
lds
lds
loopne
or
mov
jo
sar
adc
outsl
rcr
sub
nop
lea
jmp
mov
pusha
imul
es
and
enter
call
ror
sbb
xchg
fbstp
push
in
out
fimull
mov
dec
stos
scas
push
ds
cmp
out
jge
mov
rcl
imul
cmp
cwtl
mov
push
sti
out
mov
cwtl
dec
jge
push
and
add
xorl
insb
push
or
add
push
roll
in
clc
xor
mov
fwait
mov
push
push
add
addr16
or
jge
and
andb
imul
mov
pusha
mov
cmp
shl
dec
or
xchg
sbb
leave
scas
and
clc
sbb
fwait
pop
push
xor
aaa
xchg
fbld
les
jo
add
xor
jmp
add
sbb
dec
scas
jge
filds
pop
stos
sub
fldenv
sub
pop
jbe
jmp
push
loopne
cmp
cmp
jmp
scas
mov
imul
sti
fsts
lcall
xchg
xor
loope
pop
aaa
mov
arpl
fucom
pop
pop
push
adc
dec
sti
fimuls
adc
lahf
inc
pop
clc
out
pushf
cmp
xor
cltd
push
sti
mov
cmp
fists
sub
sbb
cmp
inc
cmpsb
outsb
adc
xchg
xor
clc
movsb
or
mov
mov
dec
mov
test
and
push
stos
out
scas
pop
fcompl
insb
xor
or
xchg
lret
push
rclb
xor
adc
bound
add
sbbl
xchg
das
xchg
adc
adc
out
ds
adc
and
adc
outsb
loop
or
dec
add
xlat
scas
cmp
pop
inc
loopne
jecxz
int3
mov
std
lods
data16
mov
cli
xor
sub
shl
cmp
add
cltd
cmp
and
lret
pop
or
mov
fs
jae
xchg
jno
or
mov
adc
dec
fldl
or
mov
popa
push
jecxz
add
call
insb
jmp
imul
pop
aam
mov
insb
mov
movb
mov
bound
push
cltd
push
cli
in
xchg
inc
xor
mov
das
sub
pop
aad
aad
mov
test
outsl
sbb
jb
and
divl
mov
and
jge
mov
xlat
inc
push
xchg
out
clc
cmpsb
lcall
push
xor
mov
xchg
icebp
push
sbb
push
cld
adc
adc
mov
ljmp
and
and
ss
sub
jecxz
mov
and
xor
rol
cmp
inc
sbb
and
scas
sahf
mov
add
xchg
insl
loopne
outsb
xor
adc
leave
sarl
push
pop
imul
sub
loope
hlt
sub
sahf
pop
mov
jae
push
xchg
add
push
lret
mov
test
inc
lret
enter
ljmp
fs
inc
test
mov
cmp
mov
sbb
into
cmpl
push
scas
stc
daa
ja
ffree
loope
xchg
dec
insl
mov
sbb
and
out
or
ds
sbb
push
ja
ret
sahf
cmp
cmpsb
lret
mov
cli
xchg
inc
loope
js
xor
sbb
add
sarb
pop
icebp
sbb
gs
mov
dec
inc
jae
add
fdivrl
sbb
inc
sti
je
pop
push
in
mov
dec
rclb
aam
xchg
xchg
repz
cmp
jle
mov
loope
xchg
add
and
sub
sub
mov
xchg
or
push
jge
xchg
push
add
adc
xlat
sbb
and
gs
out
mov
popa
mov
add
jmp
pop
mov
loopne
scas
mov
rorl
aad
push
and
cmp
jp
xchg
lcall
push
pop
mov
cmp
lcall
sahf
xor
out
add
mov
ret
mov
or
lret
lcall
push
pushf
xchg
fwait
sti
lds
add
add
dec
pop
in
pop
fsubs
icebp
xchg
inc
andb
ljmp
repz
clc
sub
ja
sbb
filds
jg
sub
rcr
mov
popa
push
out
scas
jbe
push
jo
lods
dec
push
xlat
mov
sti
push
fwait
add
jb
jbe
adc
int
sub
in
outsb
or
jb
mov
or
fidivs
in
cli
mov
adc
push
push
shrl
jno
pop
sbb
adc
mov
std
and
ret
mov
jg
mov
or
cli
cli
push
dec
pop
sub
mov
std
sub
push
xor
mov
test
dec
sub
dec
call
xor
push
aad
mov
mov
bound
add
jmp
or
mov
nop
out
sub
or
fisttps
dec
mov
sbb
jne
std
sbb
mov
xchg
insb
pop
and
jp
aaa
cmp
mov
mov
jae
push
mov
cmp
jae
xchg
movl
lret
sub
dec
inc
lahf
aaa
jle
cmp
jle
mov
hlt
dec
daa
xchg
sub
inc
loop
add
sub
movlps
pop
loope
inc
int
push
dec
sub
add
sub
add
loop
sub
popf
and
mov
mov
bound
loopne
cmp
aad
push
sar
inc
inc
mov
loop
mov
add
aas
addl
xlat
sub
fstps
cmp
dec
sub
rclb
xchg
cmp
fadd
repz
in
sti
and
jne
loop
cmp
popa
dec
pop
fldcw
or
lret
pop
pop
in
sub
lock
dec
rcrb
push
ss
sub
dec
mov
add
inc
mov
test
or
pop
cmpsl
push
mul
sub
adc
mov
adc
test
mov
in
mov
insb
int
sub
xor
test
pop
jg
mov
pop
adc
and
inc
sbb
loopne
sbb
ljmp
aas
pop
dec
or
jno
popa
fimuls
repnz
popf
sub
xchg
fwait
inc
push
test
jbe
pop
xor
mov
pop
aam
je
scas
mov
cmp
mov
pop
mov
inc
add
orl
in
and
push
xchg
mov
ret
aas
cmp
lea
scas
xlat
aas
sub
sahf
or
lods
or
xor
add
rcrb
pop
ja
insl
sbb
rcll
mov
movsb
in
inc
scas
xchg
outsb
pusha
cmp
fisttps
int
mov
ficomps
notl
clc
ja
hlt
or
bound
cmp
adc
loope
sbbl
bound
shrb
aaa
and
jmp
jb
das
or
mov
ret
add
mov
loopne
sub
movlps
ficoml
xchg
or
out
or
inc
call
sub
jno
or
add
loope
mov
pop
push
xchg
imul
lea
mov
into
dec
fsts
imul
aad
adc
cmp
or
mov
pop
fnstsw
xchg
in
mov
clc
push
or
movsl
and
cmp
repz
mov
lret
push
outsl
out
in
add
leave
les
aaa
adcb
movsl
push
sub
addr16
mov
sbb
mov
and
cld
mov
push
or
add
cmc
lahf
cmp
pop
dec
inc
push
data16
and
insl
shll
int
sbb
pusha
or
dec
push
rcll
out
push
nop
shlb
lret
outsl
ret
scas
pop
mov
add
xchg
popa
pop
xor
xorb
cmc
dec
fldt
cmp
dec
shrb
insl
outsb
sub
jg
sbb
stos
cmp
cmp
cmp
andb
repz
mov
xchg
add
jno
mov
sbb
bound
inc
fldt
popf
fldenv
xchg
cmp
das
enter
xor
hlt
into
pop
cmp
push
pop
daa
mov
ds
inc
xorb
inc
ljmp
cmpsb
orl
dec
call
ja
gs
loop
adc
loopne
adcb
cmc
out
insl
rcrb
lds
mov
cmp
out
jne
ret
and
sub
dec
push
iret
push
push
jmp
add
pop
xor
adc
xor
inc
inc
popa
hlt
mov
add
push
out
push
popf
int
mov
adc
jmp
rcr
ffree
loopne
xor
jns
ljmp
jmp
push
int3
sarl
imul
mov
ret
mov
mov
mov
loope
pop
xor
sbb
dec
or
mov
pop
cmp
mov
mov
add
jae
outsl
cmp
clc
add
bound
mov
test
mov
mov
popa
mov
adc
push
fidivl
pop
push
add
jg
arpl
idivb
pop
incb
mov
dec
call
sub
mov
shlb
cmp
lds
dec
aad
xchg
xchg
and
inc
fstps
push
pop
jecxz
add
sub
clc
or
cmpsl
inc
dec
push
xor
push
jecxz
mov
fs
lds
pop
cltd
pop
data16
mov
and
mov
and
std
cltd
aam
cmc
sti
out
movsb
or
sahf
mov
out
rcll
xor
cmp
call
aas
push
lock
xlat
sub
push
adc
sbb
push
cltd
push
stos
or
jnp
mov
popa
dec
ds
xchg
sahf
dec
jb
jge
push
jbe
jno
imul
sub
ss
push
push
push
xchg
rorb
cmc
testl
leave
pop
addb
ja
jae
shlb
jb
fwait
and
imul
mov
push
mov
hlt
or
ja
jecxz
jb
out
xchg
addr16
jle
je
sub
imul
sub
mov
mov
stc
cmpsb
mov
fstl
inc
clc
nop
jne
out
es
inc
mov
add
xor
push
jl
insb
xor
cmp
or
sbb
mov
push
insl
cmpl
push
pop
test
sarl
xor
fildll
xor
or
pop
mov
push
sbb
orl
gs
loope
push
fimull
jns
sar
int
cmp
fsubl
arpl
xor
adc
imul
in
xor
fmuls
sbbl
push
mov
mov
and
rorl
ds
shl
fucomp
jmp
mov
shr
and
sub
and
nop
cld
out
push
jnp
push
mov
or
xchg
mov
daa
dec
mov
push
outsl
mov
inc
nop
pop
fwait
push
cmp
jae
shrb
cmc
aad
sbb
repnz
mov
dec
arpl
mov
sub
jl
out
xchg
add
xor
mov
add
mov
call
sub
inc
cmp
push
push
mov
sub
xchg
aas
adc
cmc
adc
inc
out
xchg
inc
test
add
in
lahf
xor
loope
jns
sub
xor
cli
jo
icebp
shrl
pusha
divl
jb
push
dec
dec
and
mov
inc
gs
popf
jno
dec
imul
rcrl
aam
xchg
mov
mov
stos
inc
push
loopne
dec
aas
mov
sbb
into
fs
pop
in
cmc
cmpl
cmp
adc
imul
xchg
stos
xor
push
leave
pop
cwtl
int
jo
and
jae
stc
rcrl
stos
and
nop
cmp
push
push
rclb
and
xchg
test
adc
add
ret
test
cmp
data16
cmpsl
ret
hlt
dec
outsl
cmpsb
subl
jb
dec
lahf
fdivrs
cmp
cld
xchg
scas
arpl
mov
and
mov
leave
sub
dec
sbb
sbb
je
imul
add
xchg
xchg
pop
ret
aam
repnz
popa
ljmp
dec
popa
mov
mov
sub
lret
cmpsl
loope
xchg
pop
sub
aas
cmpb
push
mov
cmp
fs
rorb
push
jp
or
dec
push
push
inc
popf
sub
xor
and
pop
dec
mov
loope
es
daa
jle
fdivrs
lahf
xor
push
lods
les
movsb
pop
mov
lods
sarb
mov
xor
mov
imulb
daa
lock
mov
inc
pop
mov
call
fdivrp
pusha
mov
subb
add
in
loop
sbb
mov
add
add
in
mov
imul
jbe
adc
shll
stos
sbb
gs
cmp
or
int3
int3
cmp
lret
bound
jne
rcr
cmc
insl
sbb
in
pusha
jae
dec
or
xchg
push
push
pushf
lret
xchg
and
xlat
movsl
push
bound
pop
jge
mul
adc
ljmp
jb
outsl
push
xor
sbb
cmp
sahf
in
aam
cltd
fwait
push
mov
sbb
ret
loope
jecxz
repnz
xchg
int3
lods
ljmp
cmp
or
sub
lret
test
mov
js
sbb
rcrb
xchg
xchg
lret
xor
rcrl
xor
add
fnsave
mov
filds
pop
pop
pop
movsl
stc
or
jge
mov
mov
mov
movl
rcrl
loop
dec
sub
dec
sub
test
ficoms
pusha
test
rcl
dec
xor
add
int3
loop
jg
mov
mov
sbb
fdivs
sub
stc
scas
adc
andl
cwtl
call
mov
inc
mov
lcall
cmpsl
clc
dec
in
into
or
dec
mov
rcr
cmpsb
pop
xor
mov
mov
into
sbbb
stc
std
fimuls
shrl
push
inc
push
sub
or
add
cmp
inc
mov
cmp
xor
mov
lea
xchg
es
cmp
inc
cmp
mov
sar
fs
add
mov
mov
xor
adc
insl
jge
popa
in
cmp
sbb
bound
sbb
sbb
xchg
stc
pop
lret
xchg
add
cs
sub
lods
xchg
stos
fs
out
mov
mov
roll
lret
mov
js
cmp
das
out
pop
imulb
ja
lahf
test
mov
xchg
je
adc
mov
mov
imul
push
jnp
or
test
push
enter
xchg
jae
add
push
shll
loop
jb
cmpsb
jge
aad
cs
loope
mov
inc
cmp
cli
in
frstor
test
mov
fs
andl
fisubrl
out
nop
xor
sahf
jp
dec
jge
lahf
add
test
mov
ss
ret
aaa
mov
inc
popa
or
mov
aad
int
cmp
mov
mov
pop
lods
dec
lret
mov
inc
fidivs
adc
cmp
sbb
cmc
dec
sbb
lds
xchg
xor
stc
cmpsl
movd
jle
inc
mov
cmp
or
ljmp
in
imul
dec
lods
cltd
dec
add
mov
pop
lret
int
jl
push
xchg
sub
adc
popf
jb
xor
shll
fidivrl
jns
fstpt
adc
push
aaa
ss
mov
ljmp
push
into
scas
pop
mov
xor
cmp
je
scas
xor
or
cmp
adc
ret
test
out
dec
ret
dec
fidivrs
mov
mov
push
mov
dec
lock
xor
in
cli
add
adc
movsl
inc
and
mov
out
mov
cwtl
pop
test
xchg
xor
addr16
popf
orl
stos
and
xorb
aam
std
mov
and
sub
dec
cmpsb
add
dec
adc
push
pop
notl
das
mov
pop
pop
gs
mov
adc
cltd
daa
push
ret
jecxz
mov
icebp
inc
mov
insl
inc
mov
lret
sub
pop
repz
adc
jae
bound
mov
popf
and
xlat
mov
cmp
sar
jp
add
fisttps
mov
lea
cmpsl
fdivrs
xchg
rcrb
rcll
add
mov
mov
pop
xor
sahf
in
adc
fsts
dec
mov
rcll
dec
mov
sub
and
pop
lds
mov
or
sbb
in
popf
add
data16
add
imul
add
jge
or
cmp
cmp
jp
mov
mov
loopne
jmp
mov
pop
into
arpl
xchg
lret
and
pop
xchg
adc
mov
ja
pop
outsb
xchg
cmpb
lds
sbb
iret
shlb
sub
pop
roll
aas
cmc
movsl
fldcw
movsl
js
ja
jbe
mov
jae
dec
je
js
icebp
ds
ljmp
test
inc
arpl
popf
lods
fsubrs
xor
inc
sbb
and
pop
sub
xchg
sub
scas
addr16
sbb
mov
and
movsb
pop
mov
xchg
clc
ljmp
push
pop
xchg
bnd
test
mov
inc
rcrb
cmp
cld
scas
in
pushl
pop
xchg
out
lods
pop
mov
shl
sub
call
pop
mov
push
ja
pop
scas
or
ja
push
or
xchg
mov
push
xchg
dec
adc
fnsave
cmc
jle
mov
not
or
push
push
jg
jp
xor
fistpll
pop
or
jnp
add
xchg
cmp
out
fldln2
outsb
jno
cmp
push
mov
adc
out
add
inc
imul
addr16
shll
inc
sub
jl
mov
and
ljmp
outsl
lcall
mov
hlt
add
sbb
in
push
xchg
inc
mov
jbe
mov
js
enter
add
mov
jnp
fisttps
mov
shlb
xor
lea
mov
add
ss
mov
or
fldl
dec
jg
push
stos
test
mov
mov
shrb
push
dec
sub
scas
lods
lcall
gs
push
fsubs
jl
mov
sub
pop
cld
push
jae
int
arpl
lock
push
outsb
pop
outsb
mov
jno
push
pop
ja
test
ret
add
in
mov
push
pop
inc
ficompl
cltd
js
fsubrs
movsb
sahf
sbb
pop
push
xchg
mov
inc
loopne
in
jl
das
pop
pop
mov
aam
int
jecxz
mov
inc
mov
xchg
ja
pop
cmpsb
imul
dec
mov
jne
cmp
inc
call
jecxz
stc
dec
fnsave
insl
dec
push
xlat
adc
mov
inc
push
cmp
stos
mov
push
popf
mov
mov
outsb
mov
bound
test
xchg
imulb
rcrl
cmpsl
lods
shlb
mov
mov
lods
sub
dec
loop
pop
pop
add
jl
sahf
stos
cltd
add
xchg
negl
jb
leave
adc
fcoml
xchg
mov
sub
aam
out
sub
add
pop
data16
and
inc
cmp
in
or
imul
and
dec
rcrl
cmpsb
jae
out
dec
ja
pop
mov
sahf
mov
clc
cmpsl
inc
gs
mov
mov
lahf
shll
hlt
mov
jnp
cwtl
notl
sbb
mov
or
fdivp
xchg
or
jle
add
dec
gs
arpl
mov
mov
les
pop
popf
lret
dec
mov
add
add
mov
sti
in
lea
add
imul
mull
imul
mov
inc
sahf
test
sub
xchg
jbe
mov
dec
cmc
pop
inc
psadbw
mov
sti
fdivrs
ja
in
mov
iret
dec
es
mov
iret
inc
mov
add
mov
xchg
xor
adc
mov
stos
in
jno
cli
loopne
cs
mov
inc
sub
fsubs
xchg
pop
nop
jecxz
imulw
mov
mov
or
in
and
xchg
flds
push
and
pushf
fnstenv
xor
arpl
mov
lods
in
sub
and
es
push
pop
lods
fucomip
shl
sahf
pop
rcll
sub
or
push
shll
leave
fisttps
mov
mov
shrl
fdivrl
mov
les
xchg
repnz
inc
push
jbe
push
jl
inc
bound
addb
push
sti
or
jg,pt
ljmp
xor
cmc
setg
push
sbb
lock
insl
insb
ja
xchg
xchg
in
dec
and
fisttpll
jle
sub
sbb
test
xchg
es
mov
mov
out
xorl
and
cwtl
test
out
ja
rcr
cmp
in
jno
pop
mov
jns
movsb
jo
adc
mov
mov
add
pop
cld
inc
icebp
clc
cwtl
in
push
xchg
movsl
lcall
xor
pop
bound
or
push
dec
fs
dec
es
scas
inc
daa
push
push
repnz
movaps
cmpsl
sbb
jmp
dec
stos
mov
test
stc
mov
sahf
jecxz
dec
jecxz
mov
dec
sbbl
pop
mov
mov
inc
iret
ja
fsts
inc
inc
sar
sti
mov
add
movsl
je
cmp
dec
add
jnp
push
mov
daa
add
scas
xchg
clc
sahf
add
imul
fdivrs
leave
pop
scas
mov
insl
sbb
lods
cmpl
iret
push
mov
and
add
pop
int
faddl
add
test
ljmp
mov
lods
insl
pushf
fisubrl
push
jns
dec
push
leave
sar
mov
cli
mov
aas
mov
mov
gs
nop
add
daa
idiv
imul
ja
je
pop
sbb
sub
adc
mov
mov
dec
test
fsts
imul
in
repnz
pop
pop
in
pop
dec
sub
out
push
pop
xchg
adc
sti
test
loop
mov
scas
mov
testl
mov
xor
xchg
fdivrs
sbb
mov
js
mov
mov
xor
xlat
cmp
rolb
pop
gs
push
nop
mov
loop
push
push
testb
pop
popf
dec
mov
jle
or
mov
loop
mov
out
test
mov
fs
sbb
xor
jno
sti
cltd
jg
jmp
ret
insb
cmp
je
inc
sti
sub
xchg
outsb
mov
and
cmp
cmp
fdivr
ljmp
xchg
inc
xchg
xchg
sbb
mov
sub
jne
cs
aaa
leave
xor
mov
ds
inc
cld
int
jbe
sti
xchg
pop
repz
inc
push
cltd
inc
dec
es
sbb
dec
push
jo
sbb
not
or
mov
pop
sub
mov
pop
cwtl
dec
cld
mov
pop
and
jbe
xchg
daa
js
data16
shll
push
les
xor
dec
xor
lock
jne
xor
push
orl
es
aaa
out
inc
nop
ret
dec
cmp
nop
pop
loop
call
jmp
cmp
xchg
sub
out
and
jge
mov
int
and
push
dec
adc
int
outsb
shll
inc
adc
push
push
pop
push
sub
fnstcw
lret
inc
jl
pop
jno
mov
ss
or
imul
in
jae
fidivrl
adc
sub
insl
test
insl
shr
addr16
mov
jb
add
les
mov
into
mov
xchg
dec
adc
fisubrs
je
pop
fiadds
dec
push
fcmovbe
inc
cmpsl
imul
shll
or
sub
jno
xchg
outsb
stos
sbb
xchg
inc
push
pop
pop
pop
test
and
or
or
test
adc
test
lods
jns
or
out
inc
push
pop
test
sub
inc
loope
xlat
push
icebp
leave
and
rolb
fwait
imul
aas
inc
adc
mov
sahf
es
lahf
sub
scas
insb
xor
jb
leave
mov
dec
xchg
and
jne
pop
rolb
std
es
mov
or
cmpsb
movb
dec
outsb
cmp
xlat
mov
and
lock
aam
jle
pop
xor
test
and
arpl
outsl
jl
test
jle
mov
in
fadds
hlt
lret
ljmp
subl
test
andl
hlt
dec
into
pusha
inc
mov
out
jne
das
sahf
mov
lea
and
add
mov
xchg
icebp
lret
jns
add
add
add
rcrl
lds
mov
or
mov
popa
add
daa
pop
push
add
jnp
adc
cli
ja
sarb
pop
fisubrl
cld
sti
mov
insl
outsl
sbb
cmp
pop
rol
js
sbb
lcall
loopne
repnz
and
jmp
test
mov
xor
imul
xor
sbbb
mov
push
and
pop
add
xchg
jge
popa
fistpl
push
mov
insl
mov
sbb
or
ret
pop
les
mov
mov
add
jle
push
hlt
inc
frstor
mov
sbb
xchg
subl
addb
and
or
push
push
mov
lock
jg
ss
mov
es
lret
jnp
divl
xor
add
or
fwait
cs
cmp
mov
popa
and
inc
stos
mov
cmp
xchg
pop
jo
das
incb
call
ds
jl
or
jo
int3
aaa
xor
fldcw
pop
and
push
add
iret
movsb
sbb
in
jbe
imul
inc
sub
push
mov
push
push
repnz
sub
jb
sar
mov
fwait
clc
cmpsb
xchg
leave
stos
lahf
aam
xchg
jb
ficoms
sub
sub
xor
mov
adc
les
xor
lahf
test
out
rcr
sbb
inc
fisubrl
inc
pop
imul
jg
dec
dec
lds
repnz
loopne
pop
sahf
cmpl
lea
mov
fldt
cld
pop
popa
and
lret
lds
in
dec
and
xchg
aad
ljmp
sub
xor
out
and
sbb
add
and
mov
repz
mov
dec
iret
jmp
and
mov
outsl
repnz
xor
out
cmp
cmp
negl
or
jne
and
mov
inc
out
xchg
das
jmp
or
cmpb
adc
aas
and
cmc
xorb
icebp
jns
lds
call
les
mov
sub
xlat
mov
shrl
dec
or
jmp
lods
test
cmp
or
cs
sbb
pop
adc
nop
or
lret
adc
repnz
xlat
jno
flds
sbb
add
jmp
repnz
dec
xchg
mov
into
add
ljmp
dec
rclb
inc
sub
enter
xchg
lock
mov
lods
loopne
cmp
or
and
jb
cli
testl
mov
sbb
xchg
scas
mov
aad
ljmp
and
mov
movsb
sahf
push
or
cmpl
mov
jl
aaa
cmpsb
in
mov
or
cmp
addl
cltd
les
xchg
into
fwait
imul
or
jge
pop
stos
sub
push
shll
mov
les
dec
scas
xchg
push
cmpsb
cmp
sbb
pop
sub
xchg
mov
ret
push
mov
jl
int3
outsl
sbb
mov
stos
mov
loope
testl
sub
or
hlt
jnp
loop
cmp
jne
fwait
xlat
dec
jo
and
mov
pushf
xchg
cld
repnz
xor
and
test
cmp
xchg
jg
push
loope
push
popa
add
mov
inc
in
sub
dec
pop
sbbl
mov
cltd
dec
sti
fildl
jae
sub
xchg
xor
inc
mov
pop
test
sahf
int
arpl
aaa
es
push
sbb
mov
rorb
push
js
movsl
xchg
popf
fistpl
jno
dec
mov
sbb
and
sub
add
jns
mov
fdivl
fs
mov
push
push
notb
repnz
cmpl
mov
cwtl
dec
and
js
mov
imul
jno
outsl
sti
sbb
mov
sub
xor
data16
in
aaa
push
ror
xchg
sub
stos
xorb
cmc
mov
pop
cmp
dec
xor
enter
xor
cmp
adcb
lret
mov
lock
loope
out
mov
popa
daa
aam
test
pcmpeqb
test
sub
sarl
mov
mov
cwtl
xchg
add
xor
xchg
dec
dec
cld
xchg
xchg
notl
mov
xchg
mov
bound
cmpsb
roll
xlat
hlt
mov
sub
fdivrs
xor
roll
mov
sahf
rorb
mov
cmp
ja
jno
pushl
pop
out
cmpsl
adc
iret
or
popf
mov
add
fdiv
jge
jge
mov
stos
sub
in
sub
push
mov
or
sub
inc
push
idivl
jnp
mov
cs
adc
idivl
push
in
push
imull
loope
and
jns
out
js
in
loope
pusha
stos
test
call
mov
cs
sbb
push
pop
cmp
decl
push
out
push
or
in
fiaddl
loope
xchg
mov
dec
shlb
mov
add
hlt
xchg
mov
repz
stc
and
dec
pop
aas
xchg
xor
je
rcr
stos
mov
or
fidivl
jmp
cs
pusha
xchg
xor
adc
cmp
addr16
sbb
out
push
in
decl
jp
ret
jecxz
aam
fsubr
jle
fimull
inc
jb
or
dec
add
and
pop
dec
inc
mov
push
push
mov
cmp
movsl
jl
cmp
dec
lcall
jbe
xchg
pop
or
adc
movsl
aad
js
push
popa
stos
cs
fists
mov
les
xchg
stos
sbb
mov
dec
jno
mov
orb
mov
fnsave
inc
test
push
and
imul
lea
push
dec
add
vorps
pop
shr
dec
push
out
mov
xchg
push
stc
sahf
xchg
pushf
push
mov
xchg
bound
mov
bound
dec
dec
pop
pop
shlb
les
movsb
sub
sbb
pushf
insl
ljmp
add
arpl
sar
in
mov
test
test
add
int3
mov
add
scas
aas
das
push
push
mov
dec
or
mov
and
call
or
nop
lret
jo
in
nop
scas
daa
popa
add
add
xlat
inc
lock
test
into
adc
mov
cli
jmp
xchg
fcoms
into
xchg
sbb
and
xor
movsl
push
jecxz
popa
movsl
outsb
addb
imul
adc
test
stc
test
mov
icebp
test
add
push
xchg
ss
mov
push
in
jns
pop
fidivrs
mov
in
or
mov
test
push
ficomps
add
pop
iret
enter
nop
popf
movsb
push
je
repnz
cmp
in
sbb
int3
inc
dec
int3
shrl
js
xlat
ljmp
sahf
cmp
mov
stos
scas
adc
mov
push
jne
sahf
cltd
cmp
orl
es
pushf
jae
pop
add
ret
out
insb
add
dec
aaa
in
or
clc
andb
adc
cs
cld
mov
adc
lea
xor
cmp
daa
fistps
mov
cmp
sub
add
stos
stos
gs
icebp
or
mov
ror
pop
push
inc
adc
inc
inc
sbb
or
mov
repz
adc
mov
shll
in
push
cs
xchg
jns
cmpsl
sub
mov
push
ret
stc
inc
mov
add
pop
and
mov
scas
in
fs
leave
out
cmp
mov
das
adc
mov
scas
lea
lds
dec
cmpsb
lods
and
paddsw
xchg
and
fwait
dec
jge
sbb
mov
jp
les
rclb
ret
push
sbb
cmp
inc
mov
push
push
or
fisttps
and
jae
icebp
fld
inc
xor
xor
push
jnp
adc
mov
jge
out
loope
pop
mov
jns,pt
roll
adc
test
jb
fs
push
mov
test
mov
cmp
outsb
mov
add
xchg
add
pop
dec
fsubrl
je
outsl
pop
add
outsl
jle
js
mov
popa
xor
lods
xchg
xor
and
jmp
imul
mov
push
xchg
out
ja
test
dec
mov
icebp
aas
ja
out
je
pop
fsub
lret
cli
inc
add
sbb
xchg
mov
mov
fucomp
imul
sbbb
inc
xchg
pop
ja
jg
ret
hlt
cmp
insl
fadds
js
mov
pop
int
xor
sub
or
push
or
sti
mov
sub
imull
jmp
sbb
fwait
jmp
leave
jg
pop
add
sahf
xchg
jae
out
in
xor
add
mov
std
fisubrl
insl
mov
dec
sbb
and
or
or
sub
iret
or
out
mov
lcall
enter
stos
xorl
hlt
cmpl
mov
es
shlb
and
push
pushf
and
mov
and
inc
cvtpi2ps
jnp
and
xchg
or
adcl
addl
insl
stc
push
je
imul
sub
adc
mov
lock
mov
add
jns
mov
mov
adc
xor
jbe
jne
aad
out
nop
std
movsl
xor
inc
dec
les
dec
push
xchg
stos
into
icebp
jno
insl
jne
icebp
lds
push
cmp
xchg
push
jmp
inc
movsb
ljmp
inc
mov
xchg
pop
push
and
jnp
fistl
arpl
fildl
add
leave
std
testb
jle
shll
xchg
jns
mov
jae
sbb
movsl
scas
stos
xchg
add
pop
repz
add
push
les
add
cmpsb
in
inc
movsb
adc
xor
repnz
xor
call
mov
and
fidivrs
lret
fsts
jmp
sbb
jle
mov
pusha
repnz
insl
mov
mov
dec
xchg
xorb
cmp
mov
mov
ja
mov
stc
mov
jmp
paddw
insb
and
daa
roll
sbb
repnz
outsb
add
xor
addb
sub
or
jp
jle
mov
push
mov
inc
jne
int3
xchg
adc
inc
xlat
xchg
push
ljmp
inc
mov
fdivs
and
lahf
push
fnstcw
stos
jbe
inc
fsubrp
or
pop
popa
ja
mov
xchg
sbb
mov
lods
and
adc
popa
insl
cmp
outsb
imul
mov
mov
lods
adc
mov
pop
jge
jo
leave
inc
add
xchg
aam
mov
add
movsl
loope
mov
pop
jbe
pop
ret
cmp
repnz
test
in
je
push
arpl
leave
mov
adc
dec
jnp
hlt
jmp
sub
jmp
inc
repz
mov
add
pop
inc
fcmovnb
dec
inc
pop
inc
cmp
test
sar
inc
mov
out
mov
sub
push
add
mov
mov
cli
fsubrl
xchg
pop
or
fldl
sbb
xor
dec
pop
test
sub
jl
outsl
movsl
jle
xor
sbb
in
xor
mov
inc
cmpsb
cmpsl
mov
fnsave
inc
xlat
mov
push
inc
jl
sub
mov
pop
gs
adc
fstps
mov
lret
fwait
cmp
or
adc
sbb
mov
stos
mov
xchg
cmp
push
out
cmp
sahf
cmp
jmp
rcrl
movsl
add
pop
pop
adc
mov
loop
jmp
push
mov
cs
xchg
sbb
test
sub
pusha
pop
pusha
inc
sbb
es
fcoml
arpl
repnz
dec
push
cli
sbb
fdiv
test
ds
test
push
pop
mov
pop
sbb
fiadds
mov
pushf
test
sahf
cld
cmc
sub
xor
sahf
lock
jo
inc
in
ficomps
sub
into
jmp
popf
pop
mov
sbb
push
or
insb
loopne
push
lock
int3
mov
xchg
inc
adc
jae
xchg
pop
pusha
addr16
mov
ds
in
adc
ffreep
ss
filds
mov
jnp
add
push
or
add
pop
mov
mov
xchg
hlt
or
repz
ss
mov
cmpsb
add
jecxz
dec
mov
inc
jg
mov
mov
insl
mov
mov
push
jno
xor
in
sbb
icebp
repnz
loop
push
pop
or
inc
aad
ret
addr16
jno
jge
cwtl
pop
xor
scas
test
adc
mov
mov
cld
mov
test
enter
fsubrs
popa
sub
jmp
je
push
rcll
sbb
cltd
fdivl
xor
shll
cmp
lds
push
sbb
movsb
mov
adc
dec
jno
jbe
call
fisubrl
adc
xchg
push
cmpsl
dec
mov
cli
mov
outsl
cmp
das
cmpsb
mov
xor
push
jl
icebp
call
test
cmp
cmp
cmp
adcl
stos
addr16
sbb
fwait
inc
ret
inc
jmp
push
and
jge
lods
jl
ljmp
or
and
scas
or
or
in
in
mov
jb
movsb
lret
daa
test
sbb
jle
cli
sahf
pop
xchg
lahf
insl
xchg
jge
fcompl
xor
lods
pop
mov
push
jecxz
subb
repnz
inc
orb
aas
in
xor
xor
iret
mov
inc
jg
xchg
pop
jecxz
arpl
add
jb
push
test
imul
mov
outsb
mov
in
adc
sar
dec
orl
decb
mov
lods
jb
mov
sub
fsubrp
lahf
sbb
negb
bound
scas
jg
jl
lret
fwait
push
mov
div
sahf
stos
pop
aad
dec
adc
ret
ds
xchg
mov
push
ja
pop
xchg
movsl
repnz
loop
in
jo
dec
xchg
mov
dec
ret
mov
add
jmp
jecxz
imul
das
sti
xchg
cmp
sbb
add
test
xchg
es
ret
clc
jp
sbb
push
ror
jb
pop
out
jle
lock
and
pushl
xor
clc
es
fidivrs
cmc
and
pop
push
fcmovbe
cmp
sub
sub
cmpsb
mov
inc
inc
add
lahf
mov
int
aam
inc
in
test
ja
cmp
out
and
arpl
aam
mov
xor
movsl
mov
mov
insl
jo
imul
iret
xor
push
pop
outsl
and
sub
or
adc
and
mov
shll
push
clc
aam
sub
add
fs
aam
sbb
lods
add
std
pop
pop
fildll
jle
dec
cmpsb
test
sub
mov
iret
outsb
or
nop
push
inc
daa
mov
inc
imul
xor
inc
and
jecxz
movsl
fiadds
call
or
iret
mov
pop
mov
push
inc
dec
pop
je
mov
cmp
repnz
hlt
jmp
fistps
out
jle
lret
sbb
lods
jbe
icebp
inc
lods
cld
cltd
sbb
out
lods
jg
decb
jae
arpl
in
dec
dec
ja
push
lock
imul
add
xor
test
pop
out
push
mov
ljmp
nop
je
flds
fildll
movups
nop
ljmp
mov
int3
sub
push
and
mov
pop
arpl
test
testb
mull
fsubs
xchg
fiaddl
xchg
push
cmp
icebp
xor
pop
xor
xchg
xchg
add
fisttpl
lcall
adc
lret
and
dec
mov
test
cmpb
jl
xor
jmp
mov
mov
push
push
sbb
xor
cmp
sub
cmpsl
lea
or
xor
stc
adc
int3
adc
sub
cmp
jecxz
inc
push
inc
outsl
in
jge
clc
push
push
aad
mov
adc
addr16
pop
xor
iret
xor
mov
fsubs
jmp
leave
data16
rol
jecxz
out
sbb
push
repnz
lret
nop
pop
cmp
mov
mov
adc
xor
roll
into
xchg
fistpl
lds
pop
push
sub
cvtdq2ps
adc
mov
and
rcrl
aad
icebp
lock
dec
mov
ds
addr16
xchg
sbb
and
lret
or
mov
mov
lahf
rcll
fsts
adc
ja
int
add
mov
pop
stos
inc
dec
sbb
adc
push
or
cmp
sbb
pop
xchg
inc
iret
push
or
shlb
out
sarb
sbb
xchg
pop
and
loope
lcall
rol
movsb
push
xchg
mov
mov
or
or
push
je
lock
ss
int3
jecxz
icebp
in
inc
jp
pop
add
scas
fsubl
lret
out
add
sbb
mov
xchg
js
loop
aam
cmc
stc
mov
jo
aad
add
xor
mov
and
add
and
mov
mov
insb
fdivs
xor
mov
ret
enter
cli
mov
aas
jo
bswap
push
and
sub
mov
arpl
dec
inc
push
push
inc
mov
and
int
and
jle
xor
mov
cltd
adc
push
jns
fmull
mov
pop
dec
mov
or
xchg
sti
repnz
jb
push
dec
jl
push
inc
stc
jo
xlat
jo
icebp
sbb
mov
jecxz
push
ja
stos
sbbb
sarl
jae
clc
adc
outsb
fcompl
test
and
add
cld
pop
mov
push
sub
outsl
scas
or
sbb
lock
xchg
mov
mov
loop
dec
out
or
dec
dec
add
jecxz
cmpb
push
pop
mov
xchg
insl
jns,pt
stos
out
mov
sahf
push
sbb
jne
mov
and
loope
adc
xor
decl
jg
xchg
clc
outsb
sbb
sub
pop
mov
stos
cmpsb
outsb
in
out
insl
sar
shlb
adc
sbb
lcall
js
mov
insb
mov
fsubr
cmp
pslld
orb
and
xor
sub
cmp
jmp
nop
jns
test
test
pop
pop
cmpsl
cmp
mov
mov
rcl
out
icebp
xchg
pop
scas
or
testb
pop
movsl
lds
mov
add
mov
jmp
icebp
sarb
push
mov
das
jp
mov
mov
mov
adc
cmp
mov
pop
faddl
jno
icebp
fidivl
inc
or
ss
sarl
jno
flds
stos
lahf
fldl
mov
int3
and
jmp
cmc
sub
mov
pop
cmp
outsl
dec
sub
leave
sub
in
movsl
sarb
loope
and
dec
fistl
inc
rol
mov
sub
jge
mov
adc
dec
ja
sbbl
cmp
pop
pop
xchg
decb
adc
inc
add
fimuls
test
pop
jecxz
cmpl
std
and
dec
loopne
mov
arpl
aam
stos
ja
xchg
xor
or
cmpsb
test
cmpl
cmp
lods
scas
out
jns
xor
xchg
xchg
orb
jae
leave
push
xor
stc
push
popa
mov
jmp
sti
ss
or
mov
and
dec
or
dec
inc
jge
jae
cli
jnp
push
fimull
je
pop
mov
aas
outsl
repz
rcrb
mov
adc
fidivrs
xor
scas
mov
test
testl
and
lods
adc
movsl
lahf
lret
jne
shrb
push
in
cmpsb
mov
xacquire
aaa
push
jo
jge
movsb
in
mov
mov
fisubrl
cmp
cs
add
or
ja
xor
dec
sbb
push
push
imul
lret
xchg
push
mov
test
mov
rcr
pop
xor
popf
or
push
fists
fidivrl
lods
pop
push
adc
mov
dec
jecxz
mov
insb
pop
fidivrl
call
xchg
push
pop
mov
leave
movsl
addr16
out
out
aad
jl
xor
or
sbb
lcall
xchg
cmp
xlat
adc
push
xchg
and
or
inc
rcrb
xor
cwtl
mov
pop
push
cmp
and
sub
sarb
dec
lret
or
aaa
cmc
adc
jno
flds
mov
cwtl
jmp
adc
scas
jecxz
scas
or
or
andl
xchg
jnp
xchg
daa
add
ja
xor
out
or
cwtl
in
or
jnp
fwait
pop
cwtl
loopne
popf
gs
push
inc
test
jmp
xor
sarb
jnp
into
ret
and
icebp
fs
mov
pop
jb
pop
insb
inc
loop
scas
daa
cmp
in
inc
pop
sub
cmpsl
cld
add
jmp
pop
fistl
rcrb
sbb
xchg
mov
mov
lahf
ret
or
add
pop
cmc
adc
or
scas
cs
dec
int3
cli
scas
push
mov
add
fstps
xlat
popa
stos
stos
shrl
mov
sar
inc
in
sub
sub
add
sbb
insb
pop
sub
pop
out
push
stos
mov
and
cmpsb
hlt
cwtl
or
cltd
add
add
lret
ljmp
icebp
inc
test
xchg
mov
lods
inc
lods
popa
push
out
popa
pop
daa
lea
cmp
fsubrs
lahf
les
setns
push
ss
mov
jb
jnp
cmp
sub
jp
cltd
into
add
sub
jg
cmp
ficompl
cmp
shll
mov
out
add
lret
movb
and
decb
adc
bound
push
jno
js
mov
adc
fistl
and
test
arpl
pop
add
cli
mov
pop
push
adc
test
es
bound
into
js
mov
iret
scas
push
xor
hlt
fidivs
out
push
mov
nop
dec
adc
dec
pop
lahf
xchg
push
popa
cwtl
movsb
sahf
frstor
lahf
sarl
add
adc
cli
jno
lret
call
das
pop
jne
mov
sub
dec
jge
and
ljmp
loope
stc
repnz
or
inc
pusha
pop
xor
fdecstp
mov
and
insb
xchg
bound
int
pusha
iret
shrl
push
mov
jmp
dec
sbb
cmpsb
add
repnz
ret
push
push
mov
push
dec
lahf
out
xor
sbbb
xchg
lods
je
mov
mull
mov
or
std
data16
jecxz
or
jge
std
dec
test
pushf
popf
test
icebp
jp
cmc
loop
sar
or
out
jb
mov
stos
xchg
rcr
pop
aam
lcall
fadds
lret
sbb
jp
add
or
fldl
mov
dec
add
idivb
mov
add
cmp
mov
adc
sbb
sub
push
fisttpll
mov
call
pop
jmp
xor
int
cmc
xchg
daa
fld
mov
cmp
jnp
shlb
xor
or
mov
int
pop
cltd
test
mov
scas
push
pop
das
stc
and
imul
cmp
stos
cmp
in
shll
xchg
pop
outsb
jle
pop
jns
icebp
neg
mov
mov
ud0
lret
stos
inc
insl
scas
jb
sbb
in
pop
mov
xlat
cmp
add
or
mov
addr16
pushf
enter
testl
dec
and
or
cmp
ret
test
jmp
pop
shrb
fmull
xchg
xor
scas
sti
jl
adc
xor
rorb
lock
mov
push
inc
inc
jo
pop
mov
daa
xchg
jae
cmp
pushl
sub
cmpsl
call
aam
and
cld
pop
adc
jae
xor
ds
rcrl
imul
and
data16
div
pop
mov
dec
sbb
mov
fsubrl
cmp
dec
mov
adc
sub
icebp
xchg
push
push
and
and
or
inc
mov
inc
pop
cmpsb
ja
je
pop
mov
enter
stc
mov
dec
aam
aad
cmc
push
cmp
xor
dec
push
cltd
hlt
int
and
leave
cwtl
mov
pop
call
inc
pop
es
insb
int3
lcall
inc
cmpl
or
xchg
ljmp
clc
imull
ret
mov
js
mov
sbb
fsubrp
adc
pop
adcb
push
mov
adc
cmc
jmp
dec
xchg
jl
test
insb
faddl
das
push
add
enter
add
jo
mov
hlt
loopne
fucom
pop
test
cmpsl
sub
push
mov
int
xor
daa
ret
insb
repnz
push
loopne
inc
mov
sahf
sti
out
test
fimuls
add
adc
scas
mov
dec
lods
and
scas
loopne
lret
out
sub
mov
push
dec
outsb
sbb
or
rorl
loopne
das
fsubl
enter
add
or
mov
popa
es
outsb
cli
sub
ljmp
sarl
movsb
fiaddl
fldcw
outsb
jae
sahf
sti
inc
insl
ret
xchg
push
push
push
mov
xorb
or
push
outsb
into
loope
pop
nop
dec
testl
and
out
mov
pop
mov
cmp
inc
mov
gs
inc
dec
ss
push
rcr
adc
sbbl
fucomi
mov
xchg
les
sbb
pop
les
dec
mov
push
rorb
mov
into
scas
sub
jns
icebp
push
mov
iret
test
inc
out
lods
and
arpl
add
xor
dec
loopne
test
les
xchg
pop
push
mov
out
sbb
jl
pop
push
jns
jae
adc
fnstenv
inc
xchg
or
out
outsb
in
mov
add
xchg
dec
dec
jb,pt
stos
mov
gs
lret
push
jae
movsb
push
mov
setle
push
inc
arpl
enter
mov
push
mov
ja
fiaddl
aas
mov
add
sbb
stc
ret
dec
jno
cmpsl
js
or
mov
and
icebp
aaa
clc
hlt
pop
test
je
mov
xorb
pop
loop
jle
mov
aad
sbb
arpl
add
nop
scas
pop
cmc
nop
mov
cld
push
loop
aas
into
roll
sbb
test
sbb
cld
add
or
daa
mov
xchg
fwait
pop
fs
pop
or
out
push
rorl
subb
cmp
xchg
jg
xchg
in
loopne
inc
movsl
faddp
xor
xlat
in
jl
subb
xchg
test
sbb
popa
fdivs
sarb
and
int
out
adc
outsl
mov
jl
jnp
in
out
xchg
mov
mov
divb
loopne
pushf
dec
repz
push
das
push
xor
cld
std
sub
fs
pop
xchg
inc
outsb
mov
push
movsb
lock
loopne
or
and
popf
aad
mov
mov
stos
inc
sub
dec
cmp
mov
mov
or
out
outsb
into
test
push
and
pop
jne
aas
cmp
out
jmp
push
xor
adc
dec
dec
movsl
stc
data16
fdivrp
jle
and
cmc
cmc
or
sti
pusha
lods
mov
push
sti
dec
je
sahf
xor
fs
push
or
xor
pop
ret
xchg
loop
pop
enter
inc
sub
xchg
sbb
scas
cmpsl
adc
sti
sbb
mov
fsubrl
icebp
add
jecxz
lahf
dec
mov
arpl
and
sub
adc
xchg
mov
lods
insl
leave
sbb
sbb
subl
mov
mov
ja
add
mov
jmp
cli
ret
test
jmp
sbb
jge
jp
out
xchg
xor
xchg
lods
mov
ret
in
pop
andb
mov
jle
pop
adc
jecxz
mov
std
and
int
push
cmp
insl
mov
cmpsl
jb
cs
xor
inc
aas
sbb
and
pop
and
mov
loopne
xor
sbb
movsl
sbb
mov
mov
push
xor
and
pop
xorb
pop
push
cld
sub
stos
sbb
mov
test
fcmovu
and
and
enter
cld
xor
enter
outsb
rdtsc
add
or
stos
ja
jl
adc
adc
inc
mov
ljmp
adc
subb
cmc
mov
je
repz
mov
rcr
insb
add
sbb
mov
in
rcrl
in
mov
mov
sbb
int3
sbb
push
pop
dec
loop
fnstcw
scas
cmp
lahf
inc
xlat
gs
mov
mov
bound
out
shlb
lds
scas
mov
pop
pop
popa
xorb
fstps
pop
int
inc
test
icebp
sub
outsl
or
and
clc
push
sub
addr16
xchg
test
inc
sbb
scas
add
repz
pop
daa
clc
push
sub
stos
xchg
pop
jmp
loopne
or
pushf
lock
sbb
sub
ljmp
adc
hlt
fstpt
enter
ljmp
adc
sub
aam
cmp
add
or
imul
inc
addr16
dec
pop
push
cmp
aaa
mov
js
dec
aam
jae
ja
movsl
add
cmp
sbb
cmp
adc
inc
xlat
sbb
jae
ljmp
sbb
ret
lea
or
stos
cmpb
enter
xchg
and
and
inc
add
scas
test
ffreep
ss
cltd
popa
in
pop
xor
mov
mov
das
sub
stos
jnp
aaa
andl
popf
stc
loopne
or
ljmp
xor
stos
ret
cwtl
outsb
fnstcw
and
fstps
gs
mov
stos
cmp
cmp
adc
jge
mov
add
out
mov
in
mov
pusha
jle
cmpsl
pop
cld
int3
scas
stc
inc
mov
jo
cmp
jo
mov
scas
test
add
nop
push
popa
jae
jg
dec
dec
repz
adc
cmpsl
jo
xor
mov
fimuls
gs
or
gs
and
xchg
and
fdivr
das
cmc
loop
xor
orl
xchg
mov
xchg
lods
mov
push
scas
push
dec
pop
iret
scas
aad
or
xor
adc
inc
jecxz
adc
and
xor
fadd
data16
mov
inc
xchg
jp
pop
jle
clc
inc
pop
add
lcall
pop
dec
pop
mov
popa
push
lock
arpl
cltd
iret
mov
je
sbb
mov
stc
fcmovb
fs
sub
nop
pop
out
jnp
lea
add
or
lea
fs
out
and
int
rol
jmp
inc
or
movsl
rep
jmp
pop
adc
jg
sub
xchg
sbb
push
clc
mov
cbtw
lret
movsl
and
pop
add
and
mov
out
pop
dec
loop
aad
add
xlat
mov
jle
add
cmp
lea
fldl
out
sbb
dec
jae
clc
mov
sarb
enter
movsb
in
sub
jns
std
loop
push
mov
or
testl
sub
inc
loopne
fisubrl
loope
dec
lahf
push
cmp
xchg
mov
dec
and
aam
inc
dec
rol
xchg
dec
shll
lahf
lea
pop
xchg
xor
cwtl
call
gs
xchg
int3
inc
xlat
call
in
in
mov
push
flds
ror
cmp
and
in
ds
pop
stc
mov
xchg
dec
aam
or
shrl
mov
ljmp
xor
jne
stos
call
in
and
jno
pop
sub
leave
adc
ss
cmp
pop
movsl
movsl
mov
ret
dec
push
out
mov
mov
cmp
pop
adc
hlt
cmp
push
repz
cltd
std
das
mov
cmp
fsubl
pop
lcall
out
lahf
jbe
or
rcll
cmpsl
jnp
lds
stos
int3
pop
push
push
mov
lods
insb
mov
sub
mov
lea
cltd
jecxz
push
mov
data16
test
fisttpll
pop
test
mov
or
sbbl
pop
enter
mov
mov
mov
outsb
xchg
notb
mov
push
mov
inc
aad
xlat
ret
lods
xchg
imul
mov
sbb
dec
ja
xor
lds
mov
ss
push
bound
stos
jg
and
ret
pop
pop
fwait
mov
xchg
mov
pop
jp
inc
pop
pop
cmc
mov
xor
cmp
popf
je
pop
in
push
fdivrs
popf
sub
add
outsb
aas
xor
and
cmp
dec
pop
fwait
dec
mov
add
fs
outsl
mov
cmp
dec
sbb
fimuls
fdivp
adc
mov
cmp
xor
and
add
inc
jle
pop
cld
mov
jb
mov
lods
stc
pop
fs
mov
ljmp
cmp
ds
push
mov
mov
sbb
test
push
test
fcomps
mov
mov
lea
pop
xor
nop
test
push
push
lds
dec
push
xchg
jbe
mov
aaa
cltd
jmp
pusha
inc
das
js
sub
clc
cmpsl
mov
jge
cld
mov
xchg
mov
sub
xchg
ficompl
adc
fwait
jae
mov
push
mov
sbb
jae
mov
int
enter
xchg
movsl
lcall
lret
pop
pop
and
frstor
pop
addl
dec
mov
fs
cmp
pop
and
bound
lods
les
andb
or
mov
push
mov
mov
mov
jnp
cmp
fldl
xor
int
pushf
pop
dec
push
shll
scas
cmp
iret
insb
and
sbb
pop
adc
and
jle
pop
push
xchg
cmp
inc
jns
aad
sbb
jnp
popf
jmp
inc
rcl
outsb
xchg
xchg
fmuls
repnz
add
add
shlb
mov
sbb
sbb
call
fld
or
jno
jae
mov
popa
std
sbb
rcll
or
movb
add
lea
test
sbbl
sub
pop
shlb
mov
mov
aas
push
sbb
aam
or
and
das
mov
or
ret
cld
pop
std
sti
xchg
into
xchg
or
lds
in
sub
por
shrb
mov
xchg
dec
pushf
jbe
and
and
lcall
xor
arpl
pop
and
xor
sub
insl
adc
repz
insl
mov
push
rol
mov
fsubrl
mov
jl
xchg
out
leave
mov
sbb
mov
movsb
pop
arpl
cmp
lds
dec
cmp
xlat
jo
xchg
lea
and
sbb
sti
mov
dec
push
out
adc
xor
mov
mov
cmp
xchg
inc
mov
jl
push
jp
sahf
aad
clc
aaa
dec
dec
mov
mov
rorl
jge
aaa
jge
adc
push
inc
and
xchg
stos
fists
mov
imul
stos
mov
sbb
jo
repz
idiv
jnp
sbb
sarl
aad
std
xor
xlat
mov
adc
or
stos
push
push
jne
pop
sub
decl
jns
xchg
pop
or
jge
jle
and
jno
mov
dec
mov
xor
xchg
dec
add
sub
and
imul
add
es
sbb
pop
ds
jbe
mov
subl
test
or
inc
push
ss
lcall
ljmp
mov
pop
xchg
mov
std
pop
inc
mov
popf
sti
hlt
or
inc
mov
mov
sahf
mov
xor
or
xchg
lea
jp
push
cmp
sarl
inc
dec
mov
punpckhdq
xchg
rorl
xor
cmp
add
movsl
xchg
mov
sbb
xor
mov
nop
mov
pop
mov
mov
stc
imul
stos
cmp
loopne
fs
lods
xor
pop
les
std
inc
movsl
repz
or
sbb
mov
and
mov
or
push
xor
jmp
addr16
fisttps
in
inc
popa
mov
jno
pop
fsubs
pop
lret
das
jne
or
fnsave
xchg
loope
adc
mov
add
inc
xlat
sbb
dec
sbb
jmp
das
mov
mov
mov
or
sub
push
mov
push
imul
hlt
in
cmp
outsb
or
add
and
pop
xor
dec
loop
mov
mov
outsl
sahf
lods
jne
sub
xor
or
mov
add
lahf
pop
mov
shlb
pop
aam
or
jae
das
add
ret
pushf
pop
pop
ret
pop
lcall
mov
das
cs
xchg
fadds
xchg
sub
negl
outsb
push
in
pop
mov
data16
test
push
jbe
or
hlt
imul
loope
lcall
jns
aad
into
mov
pop
inc
push
scas
dec
hlt
imul
and
or
cmp
aad
xchg
xchg
fadd
movsl
in
or
fdivl
dec
lret
fdivr
and
jecxz
in
inc
ljmp
jbe
xchg
and
hlt
and
push
cmp
mov
das
clc
out
add
xor
inc
outsb
add
imul
mov
dec
jle
jmp
in
mov
out
cmc
outsl
pop
push
xchg
ss
mov
popf
out
ret
push
mov
sbb
xor
dec
daa
stc
insb
and
xchg
sbb
insl
lret
fwait
ja
adc
xor
and
xor
mov
xorl
xchg
sub
xor
and
sub
jns
test
in
add
mov
push
or
jae
dec
sti
dec
cmp
ja
or
shll
insl
add
mov
das
or
ss
adc
sub
insb
push
enter
cmp
jo
dec
mov
pop
sub
outsl
and
sbb
inc
push
mov
popa
cmc
jno
mov
outsl
sub
push
pusha
mov
xchg
jb
adcl
lcall
xor
lcall
add
xor
or
test
mov
fsubl
mov
imul
add
mov
iret
clc
stos
lock
dec
popa
push
pushf
push
rclb
and
mov
and
frstor
aas
dec
and
xor
ret
mov
sahf
imul
in
mov
std
insl
cmp
pop
cmp
outsb
jne
enter
xchg
cld
push
push
shlb
xor
jno
loope
addl
xor
cmpsl
pop
stc
adc
mov
mov
lret
aas
fs
loope
cld
lcall
or
test
pushf
icebp
xchg
jl
out
out
mov
ds
xor
lahf
mov
or
sub
jecxz
cmp
push
pop
imul
cmp
push
mov
sbb
call
clc
call
jno
mov
add
xlat
adcl
dec
das
mov
cld
mov
xor
out
rolb
out
pop
xchg
and
or
loop
out
push
or
iret
adc
lea
or
loopne
ret
jmp
ljmp
mov
xchg
imulb
xchg
and
push
mov
push
lcall
pusha
xchg
loopne
sub
xor
in
cmpsl
shrl
cmpsl
iret
xchg
add
lret
inc
xlat
sub
sbb
sbb
cmovle
in
cld
ret
xchg
sub
and
out
fbld
enter
in
inc
add
xlat
fists
jmp
adc
test
shll
ss
adc
mov
inc
jbe
cli
lret
dec
cmpsb
imul
cmpsb
ret
mov
and
jg
imul
addr16
push
xchg
xchg
loopne
mov
scas
pop
lods
hlt
jbe
inc
inc
fildl
jne
cmp
addr16
adc
cli
xchg
hlt
inc
xchg
insl
and
cmp
inc
adc
cltd
loope
fstps
mov
jns
dec
jp
fisubl
shrl
jae
push
out
xchg
lret
insl
sbb
into
jb
js
lods
lret
pusha
jle
repz
sbb
and
xor
adc
cmpsl
jmp
movsl
xor
push
xor
mov
ljmp
inc
dec
push
push
inc
out
mov
popa
fwait
jecxz
push
shrb
mov
xor
and
inc
and
inc
clc
orb
scas
iret
ktestb
xchg
adc
test
dec
xchg
dec
pop
enter
jae
cltd
and
scas
or
daa
mov
push
jns
orl
sbb
jbe
cmp
pop
cmp
sbb
ja
jecxz
adc
or
repnz
mov
in
imul
and
gs
and
fcomp
sbb
adc
push
jecxz
lret
mov
sub
test
jmp
sqrtps
mov
ret
jbe
push
dec
bound
test
into
mov
jle
jge
into
push
mov
mov
sahf
daa
rcrl
arpl
mulb
dec
std
nop
shll
add
dec
push
pop
cmp
dec
test
push
mov
push
cmpsl
or
das
adc
fsubs
pop
mov
add
mov
imull
cld
add
mov
xchg
daa
cmpb
pop
and
fiadds
jne
inc
sub
std
jl
push
add
ss
into
xchg
out
aaa
mov
xchg
pop
cmp
pand
test
cmp
cwtl
imul
pop
in
shll
ficoms
pop
outsl
pushf
add
std
mov
pop
add
rorl
addb
push
adc
clc
jbe
mov
and
dec
test
xchg
or
inc
addl
dec
int3
xchg
fldcw
dec
lock
mov
xchg
imul
xchg
fwait
cmpsb
xchg
ret
pushf
pop
adc
adc
loopne
mov
pushf
cmp
cmpsb
mov
insl
in
jnp
inc
mov
mov
sbbb
push
jb
jae
dec
test
add
inc
adc
lods
mov
xor
stos
mov
stc
cs
xchg
cmp
dec
xor
aad
sub
or
adcl
or
cwtl
sub
out
jae
in
xchg
enter
rorl
enter
dec
mov
jo
cmp
or
fwait
insb
inc
inc
icebp
mov
adc
movsl
popf
xorl
push
or
xchg
jecxz
sub
push
cli
ret
ja
icebp
test
cmp
ljmp
mov
and
popf
orb
cwtl
lds
inc
mov
xchg
nop
imul
mov
lds
xlat
aam
in
push
das
neg
cs
enter
outsl
or
pop
sbb
sbb
pop
sbb
dec
adc
ss
sbb
loopne
shrb
push
test
movb
adc
xchg
fimull
inc
out
mov
test
push
lret
aas
std
push
stos
cmp
std
cltd
pop
pop
aad
jne
mov
fcoml
loope
test
icebp
xchg
xchg
or
add
aad
push
fmul
enter
and
cltd
mov
sub
and
shl
xor
ja
ljmp
bound
loopne
push
repnz
lods
push
xchg
iret
and
xorl
xor
shll
lds
sbb
jge
in
stos
out
jbe
das
pusha
std
lea
loopne
xor
dec
sbb
dec
es
mov
xchg
mov
xor
or
daa
mov
in
xchg
push
lcall
adc
xor
inc
shll
mov
ret
cmp
xor
or
and
dec
pop
mov
or
inc
in
insb
cmpsl
push
cmc
or
xchg
add
cmp
xor
pushf
aas
addr16
mov
test
fmulp
pop
filds
test
andl
inc
nop
mov
outsb
ljmp
pop
ficoms
pop
insl
int3
inc
mov
leave
fmull
fstl
mov
loope
inc
in
test
jbe
dec
bound
clc
arpl
adc
movsl
lea
cltd
cmp
dec
loop
jg
sti
and
cltd
es
popa
ja
imul
sbb
jmp
push
cmp
and
xlat
leave
xor
movsl
push
xor
fsubrs
pusha
or
lea
in
test
jne
icebp
sbb
push
pusha
adc
lock
cmpsl
push
arpl
int3
mov
dec
or
dec
addr16
push
cltd
lcall
in
ljmp
clc
or
mov
jge
xor
and
repnz
mov
andl
push
jl
rcrb
imul
sbb
push
loop
fistl
push
daa
mov
in
cmp
xchg
pop
out
cmp
and
xor
push
dec
out
jl
push
push
and
pop
nop
sub
pop
fnsave
jns
pop
and
pop
ret
jnp
ret
xchg
mov
cs
out
dec
das
or
xchg
int
xor
jne
jp
sti
jo
xor
std
lret
add
lahf
loop
jne
mov
mov
push
sti
in
ret
jno
mov
pop
popa
lahf
in
cmp
stos
adc
out
cmpl
jp
add
or
sub
pop
sbb
pushf
or
sbb
cltd
out
push
xchg
pop
and
fidivrl
imul
inc
sub
sub
xorl
jecxz
cmp
fucomp
vpackssdw
cmp
inc
addr16
cmp
xor
insb
test
test
and
cmp
aam
cmp
movsl
mov
push
mov
xor
push
orl
mov
jae
push
xlat
test
stos
in
hlt
iret
popa
push
push
mov
cmpsb
divb
test
bound
movsl
movsb
es
and
outsb
movsl
mov
cmp
dec
outsl
cmpsl
sub
pop
jl
xchg
pop
cmp
or
frstor
icebp
imul
and
push
pop
dec
jp
jecxz
mov
cmp
mov
cli
mov
pop
push
iret
jns
shlb
push
lock
bound
stos
ds
leave
or
faddl
mov
ds
aam
inc
mov
jno
scas
into
push
mov
pushf
sti
cmc
stc
adc
setno
or
test
pop
outsb
les
and
inc
shrl
push
in
das
sub
xlat
dec
testb
xchg
mov
movsb
pusha
add
xchg
loope
sub
inc
pop
push
test
imul
outsl
outsb
addb
push
int3
test
cmp
lds
dec
mov
mov
aas
iret
adc
imul
jb
out
adc
jecxz
cmp
dec
mov
or
lret
adc
shrb
xor
stos
mov
xchg
pop
lret
push
loop
mov
shrl
jg
rolb
jecxz
and
ds
frstor
mov
xor
inc
xchg
xor
int3
sbb
je
pop
sub
and
pop
jnp
dec
notl
popa
fbstp
stos
test
pop
dec
pop
gs
xor
addr16
adc
dec
fisubrl
push
mov
jbe
jb
push
out
push
sbb
ss
and
cmp
jecxz
xchg
roll
pushf
and
dec
cld
pop
lret
sub
loopne
xor
pop
jbe
inc
jo
mov
jle
shll
scas
js
mov
es
jae
cmpsb
dec
jb
mov
xchg
enter
dec
call
push
repnz
mov
cmpsb
mov
cmp
adc
mov
mov
fisttpll
mov
sub
dec
xchg
push
hlt
cld
ds
add
xor
int3
out
pop
and
cmpsl
xor
mov
sti
popa
insb
and
imul
or
push
pop
outsl
or
mov
lcall
lahf
subb
aam
std
mov
jge
jns
rclb
xchg
mov
xor
push
add
sbb
decl
push
int
sbb
cmp
daa
and
ja
fsub
in
and
fildl
xchg
scas
out
mov
cmp
cmc
call
adc
test
sub
push
cwtl
add
out
sar
leave
mov
adc
xchg
or
add
xchg
mov
fistpl
inc
sub
addl
xchg
lret
push
dec
inc
pop
mov
icebp
push
loop
call
jl
scas
int
adc
adc
push
lods
push
int
arpl
outsb
mov
xchg
loop
bound
cli
int
xor
xchg
fsubrs
sub
and
jl
mov
aas
xlat
jl
cs
pop
sub
fsubr
cs
lds
mov
inc
repnz
aas
cmp
fcomp
arpl
add
loop
call
das
jle
lea
scas
je
and
pop
or
daa
dec
bnd
inc
lds
or
out
daa
das
mov
add
dec
mov
fbstp
ljmp
push
scas
test
stc
imul
mov
int
inc
std
fwait
sub
es
or
imul
stc
imul
jecxz
cmpsl
or
subb
insl
push
in
cmp
add
mov
aas
push
pop
and
or
cli
and
sbb
jecxz
ja
inc
or
mov
icebp
js
paddq
dec
mov
lds
pop
cmpsl
push
pop
push
imul
mov
adc
cmp
dec
cs
out
mov
popf
fldenv
ss
fistpl
mov
push
add
dec
add
adc
adc
lret
dec
cmc
insb
xchg
cltd
and
cmp
xchg
xor
cs
test
shll
and
in
nop
xor
jnp
xor
daa
jecxz
push
es
in
inc
pop
cmpsw
cmp
inc
mov
push
jae
lods
mov
outsb
push
das
sub
dec
push
and
cli
shrb
lahf
aas
sbbb
push
mov
cmp
fdivrl
cwtl
cwtl
jne
stc
test
lret
or
std
mov
dec
and
cs
mov
jmp
repz
adc
or
pop
in
popa
pop
scas
jmp
out
orb
adcl
jmp
pop
and
mov
pop
xchg
shrb
mov
dec
out
repz
and
insb
fsubrp
call
scas
inc
out
sbb
cwtl
inc
sahf
test
scas
nop
sub
gs
in
insb
mov
mov
pushf
xchg
out
and
movsl
push
xor
inc
mov
sub
mov
fwait
cmc
pushf
xchg
mov
scas
cmpsl
repnz
std
xlat
loop
pop
mov
xchg
adc
imull
cld
pop
shll
pusha
add
js
jmp
inc
mov
cmp
adc
subb
dec
push
fwait
cmpsl
test
xchg
adc
adc
fdivl
dec
jl
xchg
das
in
daa
mov
int3
push
xchg
idivb
push
std
xchg
adc
mov
dec
pop
out
subl
pop
sub
nop
xchg
cld
push
lock
lea
jb
cld
loop
add
int
dec
mov
stos
in
in
sub
jns
cli
addr16
cmp
push
shlb
out
xchg
pop
js
bound
xchg
in
sbb
das
mov
negb
pop
imul
or
in
xchg
insb
inc
rol
repz
cltd
inc
lahf
pop
int
inc
cmp
add
inc
das
xchg
or
in
sbb
push
add
add
hlt
add
and
call
xchg
mov
lea
movsl
dec
xchg
icebp
xlat
or
in
and
push
sti
in
jg
in
ds
sbb
sahf
fildl
fnstcw
jp
or
mov
inc
jle
push
out
pop
imul
dec
aas
push
pop
inc
pushf
add
or
adc
lock
push
icebp
pop
rcl
jge
push
mov
roll
adc
sbb
cli
and
das
cmp
push
push
insl
test
pop
inc
call
xchg
adc
xchg
stc
mov
jmp
in
inc
repnz
cmp
out
andb
fwait
push
jns
shlb
out
push
mov
and
pop
mov
add
std
test
pop
std
or
rorb
mov
sbb
shll
sbb
fucom
sub
notl
xchg
push
jge
pop
jle
test
arpl
sub
pop
incl
cmp
sbb
xor
cmpsb
aas
xchg
dec
xchg
inc
push
jae
test
jae
dec
adc
aaa
xor
add
add
lds
mov
jecxz
cmp
xchg
or
adc
nop
pop
js
mov
sti
das
aad
movl
add
push
orb
mov
nop
lods
repz
fldcw
in
or
in
frstor
in
mov
sbb
sbb
ss
inc
mov
cltd
add
rcrl
lods
iret
in
sub
adcb
sbb
lods
je
sbb
jnp
adc
xadd
pusha
pop
cli
lods
push
dec
mov
int3
rcrl
mov
jecxz
out
repz
shl
xchg
loop
mov
add
jns
das
mov
ss
jno
es
out
or
inc
add
inc
fstpt
push
repz
in
pop
mov
mov
pusha
fidivs
loopne
dec
loopne
xchg
mov
fwait
mov
sub
pop
inc
push
sbb
jnp
xor
push
inc
aaa
popa
mov
cmp
scas
in
or
int3
repnz
std
inc
mov
ja
out
sbb
jb
lea
mov
and
sub
adc
xor
cmp
clc
and
add
std
out
add
sbb
and
mov
push
insb
enter
js
pop
std
xor
in
add
enter
sbb
adc
gs
pushf
sub
insl
rclb
addr16
sub
in
scas
dec
subb
jmp
loop
loop
out
outsb
xor
push
sub
test
inc
add
pop
cltd
xorb
out
fucomi
mov
xlat
jns
dec
push
inc
cmpsb
pop
cld
pushf
and
inc
inc
and
test
scas
call
lea
dec
mov
test
sti
add
fldl
rcrl
add
es
enter
call
sahf
jne
push
sub
subl
jecxz
adc
inc
in
mov
mov
push
fisubs
mov
xchg
or
hlt
les
iret
je
je
mov
stos
scas
ds
push
xor
push
mov
aam
out
ss
mov
sti
sbb
jae
test
cmp
jle
cmp
dec
mov
jbe
cs
stos
push
xchg
mov
out
pushf
pop
stos
and
xchg
fcoms
inc
sbb
loopne
mov
shll
gs
lock
aam
outsb
into
pop
sahf
sbb
jno
cld
or
push
in
add
rcrl
testl
lahf
lods
je
inc
sarb
scas
push
jle
add
mov
ret
out
jp
shll
push
fdivs
mov
punpcklbw
jg
test
mov
loop
aad
pop
and
stos
loop
std
add
jbe
mov
xor
cmp
add
pop
pop
into
mov
inc
nop
fwait
xchg
dec
push
dec
dec
jp
pop
shrl
sbb
and
sbb
movsl
mov
sub
dec
cmpsb
dec
dec
aas
iret
out
jno
cmp
in
ret
ss
data16
and
pushf
dec
cmpb
aad
or
inc
fidivl
push
rcrb
inc
dec
out
push
xchg
lock
adc
gs
dec
out
xchg
aam
push
stos
lock
jno
xchg
addr16
lret
les
fs
lods
cli
cltd
jae
mov
lcall
divl
insb
stos
int
jl
pop
lock
sub
add
clc
addl
imulb
xor
repz
cmp
sbb
test
xorl
add
test
xchg
jnp
mov
cmp
dec
shlb
andl
out
mov
and
mov
daa
sahf
repz
mov
aad
daa
cmpsl
aam
das
lea
nop
xor
jnp
push
nop
sbb
fwait
out
arpl
gs
ds
popf
pop
push
iret
out
jecxz
lret
inc
fbstp
popa
aam
jno
loope
jl
lcall
push
jmp
repnz
pushf
imul
push
or
push
fadd
inc
loopne
push
add
repnz
test
insb
ficomps
sbb
in
dec
dec
mov
mov
jle
pop
cltd
fs
jg
pop
fimull
ja
xchg
pop
inc
push
stos
pop
ja
pop
push
adc
test
clc
pop
mov
cwtl
hlt
push
jno
cld
cmpsb
cwtl
mov
pusha
js
jecxz
addl
and
mov
add
test
shrb
jb
into
mov
and
jb
aaa
xchg
jnp
pop
movsl
sub
xor
loop
test
mov
jge
push
call
mov
ds
jo
pop
es
dec
and
and
lret
and
sbb
sbb
sbb
jmp
mov
out
sub
stos
and
bound
clc
into
xchg
xor
test
add
or
jmp
mov
aam
push
mov
cmp
dec
adc
xchg
sbb
add
movsb
cmp
rclb
add
out
sbb
les
or
mov
imul
push
aam
nop
inc
dec
add
arpl
jnp
lcall
fstpl
and
jge
jmp
fs
in
mov
push
je
roll
sbb
das
jb
scas
stos
sub
fsub
iret
lret
leave
jecxz
push
out
jne
adcl
and
and
pop
ret
pop
cmp
imul
xchg
sub
inc
xchg
test
dec
fs
mov
mov
int
dec
add
cmpsb
pop
sub
mov
cmp
pop
push
lods
pop
jno
icebp
xchg
pop
push
outsl
inc
pop
inc
shll
flds
movsb
sahf
jno
aaa
push
sti
dec
addl
test
fildll
and
xor
mov
outsb
rorb
test
lea
cwtl
push
jno
icebp
divb
fdivs
mov
mov
push
rclb
push
cmc
int3
xlat
nop
hlt
adc
cmc
sbb
dec
pop
aam
ret
add
sbb
mov
shrl
repz
sbb
daa
push
ljmp
push
jnp
dec
out
mov
dec
ljmp
cs
add
outsl
mov
call
shll
scas
mov
std
dec
sahf
cmp
sbb
xor
clc
pop
pop
mov
mov
xchg
ds
movsb
mov
xchg
xchg
cmp
icebp
insl
jnp
fsubl
adcl
test
mov
xor
and
das
fnstcw
jmp
inc
bound
sahf
js
adc
inc
fistps
aaa
inc
pop
pusha
inc
xor
cmp
mov
push
imul
out
jns
movsl
jg
add
lcall
xchg
out
push
addb
push
sbb
lods
adc
jne
xchg
mov
cmp
insl
lock
repz
cmpsl
cltd
lea
out
ljmp
stos
adc
scas
xchg
jns
xor
dec
pushf
fsubl
stc
ret
or
fnstsw
dec
dec
ljmp
cmp
inc
push
gs
pop
mov
push
push
inc
repz
pop
imul
in
mov
push
bound
loope
stos
mov
fmul
sub
cmp
test
pop
jae
stc
int
pop
in
mov
testb
gs
cmp
je
addr16
mov
sub
into
xor
ror
in
mov
dec
push
mov
dec
fisubrs
lods
cld
xor
aam
push
arpl
push
mov
mov
sub
in
test
push
mov
sub
fldl
mov
pop
subl
pop
cs
jne
aad
cmc
xchg
adc
mov
imulb
mov
mov
jp
dec
add
repnz
or
mov
push
test
sub
and
stos
scas
mov
xchg
mov
rcrb
xor
jne
lds
cmpl
fcompl
adc
xlat
push
mov
or
testl
into
cmp
mov
int
loop
jnp
or
sub
pushf
leave
fstps
in
cmp
add
sbb
clc
mov
or
xor
leave
out
daa
lcall
xchg
xchg
in
adc
pop
xor
fnstcw
pop
pop
xchg
cmpsl
cltd
loopne
mov
shll
add
mov
pop
fcompp
add
pop
clc
jns
cmpl
nop
dec
test
std
aam
jp
sbb
push
sbbb
fwait
ss
stos
into
cmp
arpl
lahf
rcr
sbb
adc
xchg
mov
mov
xor
inc
xor
cwtl
pop
pushf
adc
nop
cwtl
add
sbb
insl
or
dec
daa
clc
or
or
cmp
nop
mov
bound
inc
ja
or
int
hlt
pushf
pop
jecxz
data16
fucom
fwait
cwtl
inc
mov
cmc
cmp
pop
xchg
shlb
jge
sbb
call
xor
sub
out
ljmp
test
in
int
movl
pop
dec
stos
dec
push
xor
vpmacsww
add
hlt
jnp
mov
cwtl
stos
inc
inc
movb
dec
xor
in
pop
stos
nop
and
mov
mov
test
iret
cld
push
jno
push
in
cmpl
jp
test
sub
in
sub
fldt
xchg
sub
cltd
dec
adc
jnp
lods
jl
pop
das
push
sub
imul
sub
push
lahf
fisubl
mov
add
pop
cs
dec
adc
ret
sub
notb
mov
jp
int
popa
jnp
and
inc
lea
jl
gs
in
lods
lds
outsl
je
out
out
jge
icebp
or
inc
pop
hlt
mov
mov
inc
int
dec
mov
movsl
adc
faddl
or
sarl
fcompl
in
lcall
aam
arpl
cli
imul
lret
sub
add
in
mov
cld
push
out
pop
lods
out
push
xor
cmpsb
movsl
out
xchg
int
add
inc
mov
cmp
jo
jns
negb
mov
pop
int3
adc
test
inc
std
xor
xor
xchg
xchg
inc
mov
imul
push
xor
sub
add
inc
add
dec
adc
outsl
pop
scas
add
bound
stos
sbb
jae
lods
jecxz
mov
xor
lret
dec
pushf
rcrb
sub
lods
cmp
stos
sbb
fbstp
jg
daa
sub
pop
scas
xchg
pop
xorb
imul
xor
push
out
into
xchg
push
pop
cmp
in
in
fdivrl
std
pop
loope,pn
iret
pop
aam
or
lcall
add
inc
sbb
and
cmp
inc
aas
pop
sbb
std
add
repnz
lahf
push
in
push
imul
xchg
mov
fsqrt
sti
fistl
cmp
into
push
pop
cmpl
lock
inc
pop
into
pop
xorl
xchg
jecxz
sbb
jno
scas
rolb
in
push
mov
and
cmp
lret
ljmp
pushf
data16
sbb
mov
out
shr
aaa
add
fwait
jo
lods
aaa
sbb
adc
idivl
aam
xchg
mov
mov
cld
dec
push
mov
and
rcrl
add
cs
xlat
mov
stos
xor
or
movsb
sbb
fwait
and
cmp
and
xor
imul
inc
dec
sub
sahf
dec
pop
fcmovb
mov
jle
mov
dec
jle
dec
pop
das
in
add
sahf
xor
pop
push
sub
mov
call
sbb
cltd
into
add
add
push
in
push
bound
inc
leave
daa
cmp
movsb
push
pop
outsb
imulb
out
and
sarl
ja
mov
mov
dec
jbe
sbb
mov
fidivs
loop
aad
jg
test
push
outsb
fwait
mov
push
push
jecxz
inc
sti
push
imul
call
cltd
leave
mov
hlt
mov
pop
std
fs
xchg
cmp
dec
jle
push
pop
jns
jae
mov
dec
add
jecxz
cmpsl
enter
icebp
inc
mov
mov
xor
pop
pop
lods
in
jbe
xchg
cld
into
inc
jle
loopne
addr16
out
lret
cmp
repnz
dec
aas
fcomip
or
ss
icebp
mov
or
xchg
mov
pop
jl
push
imul
sub
sbb
popa
popa
testb
sbb
jbe
sbb
jnp
jnp
sub
cmp
stos
jnp
mov
mov
add
data16
and
movb
mov
insb
test
mov
call
jnp
leave
or
dec
cli
mov
sbb
test
pop
pop
out
sbb
pop
mov
jne
add
adc
std
add
pop
addr16
jo
xchg
cld
mov
lcall
adc
bnd
fdiv
jmp
std
popa
cli
push
loop
ret
js
sbb
push
xor
and
cli
outsl
adc
push
scas
fnsave
adc
and
lock
aam
outsl
jbe
pop
jo
pusha
hlt
cltd
xor
pop
mulb
test
movb
sub
cmp
pushl
mov
jg
cmp
scas
xchg
cmp
push
push
mov
jb
cwtl
dec
and
jnp
insb
loop
push
lods
cld
cmp
sub
insl
mov
test
or
push
test
loopne
movsb
cld
int
mov
inc
ja
ss
aad
sub
inc
jmp
in
rclb
push
mov
pushf
pusha
sarl
xchg
xchg
jo
icebp
mov
xchg
lods
mov
js
or
iret
add
jp
gs
ds
pop
stos
aad
icebp
and
cmp
popl
mov
test
adc
pop
lds
lret
jae
and
dec
aam
pop
in
ret
sbb
cmpsl
test
pop
and
xor
xor
jne
cmp
mov
mov
mov
mull
leave
mov
inc
test
jo
cmp
adc
mov
cmp
js
mov
or
movsl
inc
sbb
popf
ja
xor
add
rcll
jo
adc
neg
xchg
cmp
cwtl
pop
adc
mov
adc
repz
pop
jle
int3
sub
fmull
loop
sti
pop
mov
xchg
roll
das
jb
insb
repz
adc
pusha
daa
push
imul
jg
imul
mov
jp
add
call
enter
mov
xchg
xor
imul
rolb
cmp
jns
sbb
loope
lods
adc
sub
mov
mov
enter
ds
cmovs
push
clc
leave
sub
mov
fwait
shl
mov
mov
das
mov
icebp
jmp
test
aaa
push
jb
lods
dec
sbb
xchg
pop
inc
adc
dec
inc
sbb
sbb
arpl
jp
mov
or
call
imul
iret
lea
jbe
pop
xor
ds
pop
xchg
jo
cs
adc
fnstsw
stos
int3
orb
pop
fimull
mov
notb
lret
pop
jnp
and
leave
pop
dec
xchg
or
fisubl
sar
inc
clc
in
jbe
ljmp
xchg
js
aaa
jb
jno
stc
push
int
aad
inc
es
pushf
lds
imul
pop
push
pop
mov
mov
enter
sbb
pop
push
lds
inc
jae
lret
fstp
mov
stos
xlat
fidivrl
std
mov
xchg
mov
pusha
xchg
adc
repnz
or
sub
rclb
aad
mov
test
mov
mov
cmpsl
jmp
bound
scas
and
push
cltd
mov
daa
and
mov
aad
insl
xchg
xchg
mov
sub
int
cltd
ret
inc
adc
imul
insl
dec
mov
test
mov
test
dec
addb
mov
icebp
cs
call
push
xchg
push
sbb
jnp
mov
adc
mov
das
xchg
sbb
cmp
xchg
dec
shl
js
les
sub
out
ret
and
jne
sub
aas
call
addr16
insl
movsl
push
xchg
or
in
shll
jge
inc
je
addl
int3
ss
ret
mov
add
scas
or
jo
push
and
inc
hlt
add
jae
stc
les
repz
mov
pusha
jnp
jg
inc
xchg
lahf
sub
push
push
cwtl
popf
orl
sbb
jg
xlat
test
and
cmpl
mov
test
cltd
pop
fs
fsubr
out
jb
and
mov
mov
adc
mov
mov
inc
xchg
cwtl
pushw
fimuls
pop
mov
xor
mov
sub
add
aas
mov
cmp
and
xor
cmpsl
mov
adc
xchg
adc
pop
fildl
jg
pop
rcrl
sub
mov
mov
nop
in
mov
cmp
fstl
xor
dec
fcomps
imulb
jae
lock
mov
pop
mov
lods
inc
mov
les
jmp
fsts
in
jns
or
xchg
mov
js
int
std
out
jg
add
in
leave
xchg
jbe
jl
dec
cmp
ljmp
jne
das
jnp
push
dec
pop
inc
hlt
dec
rorb
sub
les
push
incl
sbb
push
in
inc
or
stos
stos
jnp
ss
adc
pusha
add
add
jmp
mov
js
rcrl
mov
mov
jb
xchg
or
loop
pop
xor
sbb
push
and
sub
stos
arpl
fwait
out
jl
movsb
xchg
pushfw
ss
mov
arpl
mov
mov
sbb
sahf
push
sbb
out
aam
inc
sub
mov
jo
aam
xor
aad
inc
xlat
pop
sub
in
mov
int
std
sbb
mov
pop
lods
jae
mov
mov
push
jbe
fstpt
fildll
out
loope
cmpsb
in
mov
movsl
xor
inc
aam
test
cltd
xor
xchg
and
adc
addr16
xlat
mov
or
cli
inc
push
mov
mov
inc
mov
call
std
and
inc
adc
insb
cmp
mov
xchg
cmpsl
xchg
inc
loopne
mov
mov
jno
jg
arpl
mull
sub
arpl
fsubs
enter
jne
ret
ljmp
repz
pusha
add
sti
imul
jg
inc
test
out
popf
sub
jecxz
add
ljmp
std
les
ret
xor
sub
mov
mov
stos
das
int3
jnp
into
inc
rep
sarl
and
dec
or
mov
cmpsl
mov
sbb
push
sub
es
or
pop
sub
es
xchg
cld
lea
clc
cs
adc
out
mov
and
add
out
arpl
sbb
xchg
or
dec
xorl
dec
jb
mov
cmp
cmp
jg
push
mov
push
jl
outsb
fdivl
xchg
inc
lock
and
xor
inc
sbb
shlb
mov
lahf
mov
in
and
push
add
push
add
pop
fnsave
push
mov
mov
fnstcw
inc
xchg
push
fstl
pushw
imul
sti
lods
jecxz
mov
jmp
bound
in
cmp
xor
stos
or
jg
cltd
mov
stos
mov
or
jb
inc
ret
dec
jno
ljmp
imul
sub
xchg
imul
rclb
sbb
mov
add
mov
sub
mov
test
stos
jnp
sar
pop
enter
mov
fcmovnb
push
jg
rcrl
std
xchg
and
add
cmp
sub
out
inc
movsl
aas
repz
sbb
aam
lret
and
shll
mov
sub
jns
xchg
jnp
push
pop
mov
test
add
jno
cli
cmp
mov
add
lds
dec
cld
int
and
inc
or
push
mov
insl
pushl
cltd
xlat
and
mov
mov
nop
sub
xor
push
ret
jnp
dec
and
adc
imull
rclb
cmp
test
pop
jnp
add
addb
or
dec
add
add
outsb
jp
jmp
mov
push
daa
jmp
clc
sbb
sahf
stos
cltd
stos
mov
sbb
push
push
xchg
mov
fistpll
pop
fimuls
jge
add
mov
loope
sub
pop
dec
mov
or
mov
mov
jo
inc
pop
mull
aad
push
imul
sbb
pop
lods
sti
movsb
movsb
aas
dec
sbb
jns
push
xchg
add
rcll
cltd
jnp
aas
xchg
push
add
insb
adc
jp
jmp
rcll
fs
fwait
ret
in
sbb
and
add
leave
adc
push
inc
mov
xorb
popf
pop
call
mov
mov
cmc
push
cmp
out
cmp
inc
push
pmuludq
and
mov
push
out
das
daa
aad
jg
mov
xor
mov
mov
sbb
rcll
mov
pop
sub
iret
cmpsl
out
idivb
das
je
rcrl
sub
ja
mov
js
cli
std
sbb
fistpl
lods
inc
lret
dec
and
xor
mov
sbb
jmp
pop
or
cmp
rcll
dec
sbb
test
push
cs
pop
mov
std
mov
xchg
sbb
and
mov
sti
fwait
imul
stc
out
adc
lcall
sbb
xlat
insb
movsb
adc
mov
xor
and
sbb
add
jp
aaa
sbb
in
cmp
xchg
cmp
aam
fisubl
jb
cmpsb
test
ja
jb
xor
and
data16
push
and
push
fildl
inc
push
punpckhwd
and
xchg
xor
pusha
mov
cld
bound
adcb
out
push
mov
xchg
iret
outsb
mov
icebp
lods
lock
cmc
sub
xchg
mov
fcoms
xor
lock
fidivrl
outsb
lret
int
outsb
mov
imul
push
jmp
cmpb
jns
fcoml
dec
xchg
dec
addr16
fistps
outsb
lods
data16
je
xchg
out
sahf
loopne
xchg
fidivl
ljmp
jbe
stc
cmp
ss
jmp
mov
sub
adc
ljmp
cli
xchg
push
aaa
lds
cmc
popa
jge
inc
ja
sub
push
fs
sub
aam
jmp
in
and
xlat
or
aas
aam
or
fcompl
rcll
mov
sbb
mov
sbb
push
pop
mov
xchg
sbb
mov
scas
lods
mov
sbb
xchg
movsl
aad
adc
int
and
popa
stos
clc
out
push
aaa
pop
jmp
dec
fs
sub
pop
test
leave
fisubl
addb
xchg
aad
sbb
adc
scas
mov
xlat
cmp
into
and
call
cwtd
mov
mov
test
rcrl
push
mov
jp
sbb
inc
mov
xchg
jbe
loopne
test
mov
cli
aaa
push
out
mov
xor
daa
pop
lcall
mov
mov
cwtl
mov
in
fs
push
push
push
popa
or
cmpl
adc
clc
in
data16
icebp
sbb
inc
pop
cli
rclb
push
jp
jae
mov
lcallw
xlat
and
test
mov
push
pusha
aad
push
mov
ret
lock
hlt
sbb
jmp
dec
sbb
add
ret
or
and
mov
xor
je
imul
pop
mov
pop
mov
in
stc
hlt
fcomi
enter
dec
in
into
out
or
and
sbb
fld
inc
xchg
jno
mov
pop
mov
fidivs
jge
inc
mov
ret
loop
push
mov
fbld
push
idivb
and
cltd
mov
cmc
fsts
mov
or
mov
cs
enter
mov
in
sub
xchg
test
fwait
jbe
add
mov
pop
or
cltd
xchg
adc
jg
xchg
inc
xor
test
ja
jle
mov
pop
mov
adc
mov
jb
sub
jmp
ljmp
xchg
fdiv
out
imul
fsubrl
cld
test
lods
cld
movb
inc
push
roll
test
and
or
repnz
pop
stos
xchg
jmp
cltd
dec
cltd
test
cmp
lods
add
cli
add
inc
int
xchg
shlb
popf
icebp
add
das
dec
inc
dec
cmp
lret
pop
je
push
cmpsl
mov
pop
in
popl
xorl
add
imul
lret
xor
xor
or
dec
das
mov
cmp
ljmp
mov
rclb
mov
rol
movsb
mov
inc
push
xor
stc
cld
test
mov
dec
sub
or
jmp
aad
jmp
pop
popa
fwait
sub
sbb
jecxz
cltd
mov
jno
adc
cmpl
jbe
lock
shl
mov
fmuls
andl
das
xchg
or
stc
pushf
cmc
es
jge
adc
mov
cltd
inc
clc
adcb
xor
fisttps
bound
scas
aaa
and
pop
mov
adc
out
dec
jmp
outsl
push
cli
mov
divb
clc
movsl
add
cltd
mov
les
fmulp
fiaddl
xlat
lods
idivb
arpl
nop
cld
mov
xchg
loope
outsl
js
rep
mov
or
inc
fmull
adc
dec
mov
mov
test
bound
aad
jns
push
aam
xchg
or
insb
adc
es
fisubrs
xchg
test
lods
nop
inc
jb
imul
fistpll
add
lea
pop
data16
adc
sub
and
lret
inc
imul
add
push
push
and
fiadds
loop
sbb
cmpsl
sbbb
push
jo
lret
leave
cmpsb
mov
outsl
popa
mov
mov
mov
and
sbbl
lea
add
test
test
lods
sbb
xchg
jo
push
cmpl
lods
stos
and
test
adc
leave
jl
pop
mov
push
jmp
pop
and
sub
fucomip
mov
jns
test
push
jge
pop
xor
outsl
mov
lret
adc
flds
mov
jo
shll
xor
iret
out
xor
and
stos
inc
test
inc
sbb
popl
mov
jnp
and
outsl
out
jp
dec
xchg
xor
call
push
or
fucomp
add
bnd
and
outsb
mov
fsubl
inc
das
int3
cwtl
int3
mov
loopne
mov
jns
mov
das
add
cmpsb
je
and
xor
cvtpi2ps
push
inc
push
mov
push
mov
enter
xchg
mov
decb
pop
rcll
cwtl
adc
ss
lahf
push
push
movsl
lods
mov
cwtl
int3
jl
rol
inc
sub
push
and
loopne
sti
mov
paddb
sub
cmp
sub
rcl
gs
pop
filds
add
js
lcall
sbb
adc
data16
das
mov
lahf
xor
mov
and
icebp
mov
iret
dec
add
subl
sub
repnz
sbb
push
push
insl
test
fs
mov
pop
pushf
es
ljmp
dec
int
mov
xchg
xor
xchg
movsb
cltd
adc
jb
xchg
xchg
cli
notl
fsubr
inc
or
mov
mov
jg
adc
add
int3
out
cmp
xabort
cmp
jae
or
fdivrl
cmp
loopne
sbb
xchg
shll
leave
mov
and
push
rcll
sbb
leave
and
mov
aas
mov
jg
jns
pop
inc
mov
in
mov
push
and
sbb
sbb
sub
test
adc
filds
sti
push
xchg
dec
mov
xlat
fdivs
cmp
in
sub
jge
pop
out
xor
mov
dec
push
jecxz
and
sub
outsb
push
push
daa
mov
stc
pop
push
xchg
add
push
sub
imul
fstpt
lods
fwait
xchg
xchg
sub
push
lret
mov
fs
mov
adc
pop
mov
pop
mov
std
xchg
les
pop
cmpsl
cld
inc
in
mov
aam
shll
arpl
jns
imul
xchg
mov
sub
out
inc
sub
cmp
repnz
outsb
jne
aaa
mov
adc
scas
jbe
stos
cmp
lahf
mov
mov
imul
in
adc
or
mov
out
inc
fcoml
addr16
call
jecxz
mov
mov
pop
or
cmp
pop
cmpsl
mov
dec
push
inc
push
in
enter
pusha
or
lcall
pop
mov
cmp
inc
jl
nop
inc
insb
push
xor
inc
sub
fdivrl
repz
xor
insl
ss
push
or
decl
sbb
adc
lods
adc
and
dec
sub
loop
cmp
mov
xchg
testl
movsb
jnp
jp
jbe
dec
cmp
loop
cmp
iret
pop
sub
ffree
shrl
leave
lea
cmp
cmp
jne
out
xchg
jae
sar
add
fstpl
ret
inc
sbb
jmp
pop
movsb
lcall
scas
mov
es
xor
inc
add
mov
int
mov
pop
test
cmp
inc
inc
pop
cmp
fidivl
in
pop
stc
gs
test
out
rcrl
call
jle
ficomps
cltd
cmp
insb
jbe
sahf
into
ficompl
fs
lahf
or
xor
cmp
call
cmp
and
pop
push
and
add
test
mov
sub
push
scas
fsts
pushf
lea
pop
dec
dec
lcall
clc
inc
xchg
xchg
lcall
ljmp
es
lods
add
test
outsl
fsubrl
lcall
pop
sbb
mov
jecxz
jns
pop
xor
rorb
add
cld
dec
test
dec
or
cmpsb
jb
mov
mov
notb
cmp
add
mov
or
fdiv
sbb
dec
out
jns
push
add
mov
leave
cmc
loope
or
push
jne
imul
mov
rcrb
push
xlat
cmp
idivb
stos
sbb
stos
mov
mov
and
mov
sbb
das
lret
movsl
lret
and
int3
adc
or
push
xchg
and
fcomps
addl
jge
data16
sbb
mulb
cmp
adc
nop
testb
scas
fldt
jge
adc
out
clc
adc
mov
xor
cmp
outsl
in
pop
out
pop
rorl
insl
lea
xlat
or
jno
and
inc
std
and
ds
adc
cwtl
cmpsl
and
gs
or
mov
pop
jle
adc
dec
jnp
outsl
inc
out
xchg
pop
lods
mov
test
ds
lods
stos
es
gs
pop
mov
aad
adc
jmp
icebp
push
mov
cltd
sar
add
aas
insb
test
icebp
loopne
sbb
ljmp
and
leave
data16
xor
pop
add
bound
subb
js
inc
sub
call
ljmp
xchg
jo
lds
inc
imul
aaa
je
movsb
loop
jmp
push
xlat
cmc
xchg
jp
arpl
mov
cmp
call
jg
enter
or
and
out
cmp
fimull
fisubrs
fldt
adc
mov
sub
and
inc
cmp
sbb
cwtl
inc
fwait
mov
xor
mov
loopne
stos
insb
cmp
xor
or
dec
cmp
or
add
xchg
nop
mov
push
sbb
mov
in
sbb
push
jns
cmp
outsl
arpl
aas
fsub
adc
cmpsb
mov
mov
orb
jge
lea
in
sbb
outsl
icebp
outsl
repnz
fadds
jp
or
inc
or
repnz
inc
push
lock
leave
adc
testb
lods
hlt
lods
mov
shll
fcomps
aam
sbb
fdivrl
das
lahf
fisubrs
js
or
faddl
cwtl
cmp
jae
cwtl
or
mov
gs
push
repz
xor
lcall
loop,pt
mov
fwait
ja
dec
cmp
lock
sub
mov
mov
pop
sti
jle
sub
rorl
adc
cmp
xchg
dec
cmc
and
jne
dec
cmpsl
jbe
stos
es
mov
iret
push
adc
add
inc
mov
icebp
rorb
inc
push
add
std
or
shlb
xchg
xorl
jae
les
or
inc
cmp
outsb
inc
movsb
push
cmp
dec
imul
jb
scas
pop
dec
jl
pop
movl
test
push
push
jle
sahf
mov
test
lea
and
pop
xchg
sbb
xchg
mov
xor
and
xor
lods
or
jae
jns
xchg
add
enter
cmp
pop
push
jae
jg
cmpsb
jge
stc
in
xor
test
mov
xor
icebp
int3
sub
imul
dec
fadds
aas
add
lods
sub
and
pop
cmpsl
negl
push
lret
data16
out
pop
es
xchg
ds
notb
mov
mov
out
in
add
adc
and
into
aam
mov
mov
cmp
fisubrs
mov
jg
xorl
inc
fdivr
orb
mov
int3
aam
ja
flds
nop
and
or
sbb
sbb
pop
test
shlb
mov
pop
test
mov
jge
inc
mov
cwtl
mov
loopne
scas
outsb
dec
fcompl
loope
adc
sub
pop
test
mov
xchg
inc
add
pop
dec
sub
and
es
and
leave
int3
xlat
push
xchg
cwtl
push
xor
push
leave
or
jo
mov
mov
dec
sarl
ja
out
jns
lret
fdiv
out
dec
jmp
adc
mull
xchg
or
mov
add
data16
loopne
add
mov
or
roll
add
mov
movsb
outsb
dec
subl
fs
sub
push
out
ljmp
push
lods
shll
icebp
xchg
mov
negb
lret
xchg
or
cmpsl
pop
out
cmp
shll
jb
rorb
xchg
inc
insb
out
sbb
mov
fisubs
and
pop
shrb
es
out
call
addr16
or
dec
ja
neg
mov
dec
xor
and
and
mov
and
jmp
cmp
xor
int
add
or
pop
pop
adc
jb
push
jae
fwait
cli
fistpl
and
cwtl
and
fwait
mov
cmpsl
arpl
enter
in
ds
pop
dec
pop
push
jae
dec
dec
sub
adc
stos
sti
scas
cmc
mov
or
inc
in
stc
inc
adc
lcall
mov
and
sub
push
pop
mov
sbb
mov
fs
pop
flds
sbb
ret
pop
movsl
popf
inc
sub
stos
roll
jmp
das
shll
testl
xor
sub
mov
xchg
insb
push
sbb
scas
sbb
jo
les
inc
xchg
add
loopne,pn
ret
jl
and
dec
das
js
adc
pusha
xchg
in
mov
mov
adc
xchg
mov
push
negb
dec
jne
popf
or
jbe
cs
popl
xchg
cmpsb
adc
nop
ja
lahf
dec
sbb
jae
into
test
rolb
sti
lea
cltd
sbb
push
cmc
adc
clc
lock
sbb
enter
sarb
rcrl
shll
adc
pusha
rorb
dec
cmp
nop
pop
std
test
inc
cmpsb
movsb
pop
push
pop
mov
stos
xchg
loop
add
xor
jg
stos
sti
jno
nop
or
fdiv
add
jmp
cmp
js
rolb
clc
icebp
outsb
or
push
xchg
xor
sub
cmp
je
adc
hlt
bound
sbb
pop
cmpsb
inc
mov
mov
stc
xor
test
filds
out
sbb
stc
aad
add
mov
shl
daa
ret
mov
aaa
fwait
push
and
jge
test
push
stos
add
ds
repz
test
adc
leave
stc
ret
aas
pop
xchg
dec
push
nop
sbb
mov
jbe
imul
push
jmp
mov
pop
enter
xor
mov
aam
pop
cmp
testl
icebp
pop
rorb
mov
xor
repz
fcoms
jp
test
ljmp
sarb
out
ja
int3
sti
hlt
push
pop
sahf
mov
pop
push
ljmp
and
cmpsb
test
movsb
out
push
dec
sbb
in
ja
cmp
das
jmp
idivb
rcrl
imul
adc
xchg
sbb
pop
xchg
push
ss
mov
jnp
xchg
push
enter
jno
add
and
xor
pusha
mov
push
push
mov
or
sbb
mov
push
inc
stos
xchg
inc
lret
sar
imul
test
ror
sbb
push
and
lods
jl
dec
arpl
lahf
jecxz
mov
insb
cmc
fsubp
lahf
stos
dec
add
and
push
aam
enter
pop
xchg
ja
push
cld
adc
mov
xor
sti
ficomps
dec
push
mov
fisubrl
jo
xlat
iret
xorl
push
inc
mov
xchg
mov
xchg
push
mov
jl
cld
repnz
or
or
mov
xchg
shll
out
add
mov
dec
pop
mov
jge
std
xor
mov
push
dec
push
in
jge
out
lahf
daa
inc
popl
rclb
icebp
xchg
shlb
test
inc
and
inc
dec
in
sub
pusha
scas
push
xor
dec
inc
add
sbbl
sub
jbe
push
sbbl
inc
xor
and
and
dec
test
notb
cmpsl
jae
lods
pop
incl
out
out
rcr
cwtl
mov
add
outsb
dec
adc
insb
xor
repnz
dec
std
adc
inc
mov
cmp
dec
sbb
xor
cmp
cs
cld
adc
int3
adc
cmp
aad
sub
and
repz
dec
test
in
pop
ret
hlt
mov
loope
outsb
mov
pop
mov
aas
fnstsw
push
inc
xchg
mull
das
adc
stos
rcr
mov
mov
inc
fyl2xp1
mov
outsl
add
shll
repz
xchg
arpl
or
data16
mov
mov
pop
js
ds
mov
dec
xchg
imul
loop
inc
dec
outsl
xlat
adc
sbb
add
les
rorb
xchg
std
mov
cmp
sbb
and
cwtl
cli
push
jle
push
testb
lods
jnp
arpl
adc
dec
fs
ficompl
fucomi
xchg
int3
xchg
jl
adc
mov
xchg
fdivrs
or
dec
into
andl
cltd
ds
cs
shlb
sbb
lret
push
fnsave
xor
repz
fstp
mov
enter
cmpsl
scas
pop
std
stos
or
js
fwait
mov
mov
cmp
divb
cmp
sub
jg
pop
or
cmpsl
test
add
pop
subl
in
int
loope
ljmp
pop
std
int
inc
int
outsb
adc
and
cmp
aad
shlb
out
pop
das
xchg
cmp
js
push
cmc
pop
sub
or
push
fistps
fadd
adc
cmpsb
lret
mov
and
add
xchg
out
movsl
xor
out
aam
sbb
fnstsw
popa
mov
jle
jae
adc
inc
maxps
adc
insl
inc
push
add
cs
and
out
push
push
and
call
dec
rcrl
aad
dec
pop
in
mov
ret
mov
adc
scas
shll
pop
cltd
add
mov
jg
inc
int3
inc
popf
dec
lods
lock
loope
xchg
fimull
test
ss
pop
and
js
outsl
movsb
into
out
iret
pop
cmpsl
cld
pop
xlat
or
test
pusha
lods
aas
push
in
ret
and
lahf
les
jbe
int3
push
fnstsw
dec
lret
imul
rorl
mov
dec
dec
mov
sbb
xorl
push
xlat
mov
fs
cmp
mov
ljmp
loopne
lahf
xchg
cwtl
inc
filds
pushf
js
jge
in
push
das
insl
dec
jae
add
pushf
adc
mov
sub
xchg
xchg
jne
mov
loopne
cmovl
scas
push
sbb
ss
and
cltd
dec
and
xchg
scas
repnz
movsl
test
pusha
popf
cmp
repnz
mov
ret
addr16
pop
mov
insl
cmp
aad
stc
fsubrl
dec
mov
jo
and
lods
aam
ljmp
pop
jl
sahf
out
or
mov
lds
gs
mov
mov
ljmp
sahf
mov
subl
ret
mov
cmp
cmpsb
insb
or
push
int3
push
sub
adc
aas
icebp
push
cmp
push
xchg
sti
mov
xchg
dec
xor
mov
rcrl
sub
sub
xor
in
mov
aad
imull
add
mov
loope
mov
adc
pop
fisubs
mov
icebp
icebp
dec
mov
jp
nop
andl
and
rcrb
mov
out
ss
insb
xor
cwtl
adc
adc
pop
or
sarl
notl
sub
and
rcll
push
xchg
mov
sub
mov
mov
lret
inc
cmp
cltd
cmp
mov
ja
lret
jmp
xchg
push
jbe
push
lea
push
aam
mov
addr16
idiv
in
sti
push
in
mov
into
stc
push
mov
push
clc
push
aam
jns
mov
jae
adc
stos
lret
push
mov
cltd
mov
jne
rcll
es
jmp
add
out
aas
loopne
mov
mov
mov
mov
fisttps
xor
addb
push
pushf
pop
mov
pop
dec
xchg
jmp
aad
and
movsl
push
adc
dec
adc
and
or
rol
jecxz
mov
jecxz
lea
shll
add
push
mov
lock
push
mov
outsb
xor
xchg
inc
push
fcoms
xchg
test
fmuls
orb
test
dec
add
fidivrs
dec
add
xchg
adc
mov
nop
aam
clc
push
pop
cmp
sbb
jecxz
cmp
jg
sbb
mov
clc
fimuls
jno
cmp
mov
scas
adc
addr16
std
nop
data16
lock
outsb
sbb
test
fcom
push
push
test
fmuls
push
sub
mov
mov
xor
fildl
cmp
arpl
lods
inc
pop
insb
jmp
mov
jecxz
lret
stc
cmpsb
sub
int
add
sub
pop
xor
or
testb
les
pushf
rcr
sbb
sbb
in
stc
pop
enter
arpl
cli
aaa
fwait
stos
push
cwtl
mov
cmc
sub
loop
loopne
mov
jmp
outsb
push
mov
shl
or
rorb
mov
jle
adc
xor
nop
shll
and
cmpsl
neg
xchg
mov
xchg
adc
pop
std
fmull
jbe
ljmp
ror
mov
sbb
pop
inc
adc
xor
mov
mov
loop
dec
fsubrl
inc
xor
stc
fcompl
inc
lea
or
das
or
lea
les
ror
cmp
cwtl
cs
or
push
cld
cmpsl
mov
pop
lods
pop
lock
rclb
xor
sti
xlat
and
add
cmp
subl
jbe
shl
dec
outsb
inc
in
iret
and
push
add
fwait
or
sarb
sub
jmp
push
mov
push
sub
mov
mov
push
or
add
movsl
rclb
lods
rclb
add
push
mov
push
sub
fcmovu
mov
pop
fidivs
sub
arpl
mov
and
daa
loop
lret
or
aad
jg
leave
subl
testl
and
jae
pop
add
sbb
mov
add
sbb
out
test
jmp
push
jne
cmp
add
jg
inc
shll
and
pop
shll
cmp
dec
mov
iret
andl
scas
jbe
jnp
cmc
pop
pop
pop
outsb
or
sbb
pusha
adc
je
and
ja
jmp
xor
inc
imul
dec
out
enter
inc
jge
push
mov
xchg
mov
xchg
cs
imul
cwtl
push
mov
je
pop
out
push
mov
push
xor
push
fs
jmp
stos
add
xchg
ret
out
lods
sub
adc
outsb
pop
movsl
rorl
sbb
sti
decb
insl
repnz
xchg
sbb
push
pop
inc
sbb
and
loop
dec
stc
out
flds
arpl
mov
ret
push
inc
sbb
fwait
xlat
loope
xor
aas
mov
jmp
das
jo
adc
push
ja
mov
jne
adc
dec
sbb
push
dec
lea
adc
xchg
in
addb
or
jmp
fcoml
arpl
nop
sbb
or
cli
sub
mov
sub
mov
lds
call
xchg
mov
repnz
add
loope
push
in
addl
in
jnp
ds
mov
int3
dec
or
ss
lods
repz
scas
cmpsb
lock
js
dec
out
or
mov
add
jno
xor
dec
sarl
test
std
cli
or
in
jae
fdivrl
cld
xor
mov
mov
pop
notl
push
or
fwait
mov
data16
cmp
xor
jns
add
push
cmpsl
pushf
or
sahf
daa
cs
jbe
pop
mov
sbb
pop
sarb
or
cmc
and
or
mov
les
lret
push
inc
add
jb
mov
mov
mull
adc
pop
push
dec
ss
pop
rcrl
je
repnz
pusha
enter
push
xchg
jae
loop
xchg
test
xor
frstor
or
jne
fadds
jns
and
imul
icebp
ss
rorb
push
cmpl
cmp
mov
xor
sahf
repz
xor
or
les
jecxz
jl
push
and
xor
xor
test
scas
or
nop
jns
movsl
bnd
mov
sbbl
fldcw
rolb
and
jl
mov
push
lods
mov
enter
lret
mov
push
hlt
add
in
add
sub
or
lcall
lods
and
ja
in
ret
xchg
lods
xchg
ds
arpl
cmc
mov
in
xor
mov
jl
pushf
negb
xchg
pop
or
jmp
fwait
movsl
dec
xchg
cld
icebp
fsub
cmove
xchg
in
rcll
or
jp
mov
test
movsb
inc
aas
push
push
scas
arpl
fsubr
pop
pushf
push
sub
mov
push
test
rcl
and
mov
sarb
nop
movsb
cmpsb
or
and
aad
lret
push
mov
push
mov
fstpl
in
dec
pop
dec
mov
bound
mov
and
cmc
out
add
mov
sti
or
rclb
xor
rcl
adc
and
push
or
push
outsl
out
gs
sub
adc
add
iret
sahf
push
int3
pop
adc
mov
push
push
fistpll
shll
mov
adc
inc
dec
mov
add
mov
movsb
xor
iret
insb
inc
xchg
or
lods
mov
xor
outsb
mov
loopne
sbb
cmpsl
jg
sbb
fisubl
aas
cmp
fmul
repz
pusha
inc
cmp
pop
lcall
ss
jmp
into
shr
imul
cmp
mov
or
jne
xor
pop
decb
xor
and
cmp
jp
outsl
xchg
sub
loop
mov
or
xchg
stos
xchg
inc
lahf
inc
push
cli
js
int3
dec
popa
lock
jge
push
cli
jmp
stc
sbb
nop
and
push
roll
jo
dec
cwtl
mov
dec
push
dec
mov
mov
jno
push
mov
loope
jmp
js
mov
lcall
insb
insb
fld
pop
add
jecxz
arpl
mov
imul
sub
dec
push
pop
push
das
jl
in
inc
pop
or
lock
outsl
add
cmpsl
int3
mov
cmpsl
jne
jmp
add
js
sbb
xchg
test
outsb
jl
lcall
add
xor
mov
dec
mov
mov
rorl
xchg
fisubrl
movsl
addr16
mov
fucomp
or
outsl
or
and
sahf
mov
pushf
xor
ret
ss
in
stc
ja
add
in
mov
pop
popa
jge
add
mov
pop
jbe
std
jno
pop
jb
sub
adc
shlb
enter
or
ja
jl
or
leave
dec
pop
std
adc
lea
xlat
mov
push
les
dec
out
test
xor
dec
xor
inc
cmp
dec
daa
outsl
mov
ret
out
dec
negl
jbe
insb
cmc
lret
test
scas
cpuid
cmp
jo
xchg
xchg
and
xchg
cmc
inc
fnsave
pop
enter
mov
sbb
add
mov
sbb
inc
rclb
addr16
stos
mov
mov
mov
negb
and
adc
outsb
cmp
clc
enter
cmp
inc
push
xchg
pop
shr
cmp
xlat
jb
lods
sbbb
push
cli
mov
pushf
mov
jle
xchg
jl
jg
daa
cmc
push
dec
sbb
ds
fiaddl
cltd
jmp
jne
orl
mov
xor
and
aas
ds
sbb
jbe
inc
dec
cltd
sahf
or
fisubrs
lds
or
test
sub
pop
int
pop
je
ljmp
push
xor
fisubrl
ss
inc
cmp
ss
test
iret
mov
jae
fsubrp
test
popf
mov
mov
dec
notl
xor
nop
in
pop
push
or
jb
mov
or
or
insl
cli
nop
xor
les
mov
inc
aaa
adc
pop
cmp
push
xor
push
push
mov
into
out
rolb
inc
into
ret
bound
dec
push
call
pop
popf
lret
popf
add
inc
mov
adc
ja
repnz
cmpsb
leave
sahf
in
mov
pop
insb
imul
int
test
sub
popf
cmc
adc
push
add
fdivl
mov
adc
push
mov
call
fs
xor
aaa
mov
aas
cmc
xchg
adc
stc
es
adc
iret
push
fs
dec
sub
rol
aam
mov
pop
rorb
add
adc
sbb
test
sbb
xchg
dec
js
insb
or
outsb
fcmovnu
test
pop
sbb
shrb
pop
mov
outsl
pop
mov
mov
iret
jae
jns
pop
loopne
inc
addr16
loopne
inc
pusha
push
fsub
add
xchg
pop
or
sbb
add
insb
sub
mov
mov
sub
pop
xchg
mov
push
mov
in
sbb
cmc
stos
xor
push
les
mov
sahf
and
cmc
inc
mov
push
nop
pop
stos
mov
xor
loopne
push
mov
movsb
cmp
xchg
enter
mov
daa
pop
test
aam
pop
or
out
fwait
mov
in
call
popa
dec
jmp
inc
sti
fstl
mov
sub
stos
lds
mov
cwtl
aaa
iret
sbb
repnz
push
xchg
cltd
lret
shr
and
or
pop
push
mov
test
pop
adc
movsl
sub
sbb
xchg
pop
xchg
std
xchg
in
stos
adc
movsl
push
addr16
scas
push
jmp
int
push
fstp
shl
imul
jae
sub
mov
in
jmp
xchg
std
call
sub
sub
cmp
sbb
xlat
negb
ret
pop
outsb
fwait
or
rcl
inc
dec
insl
int3
mov
icebp
xchg
inc
aam
leave
sbb
push
jle
pusha
in
loope
negl
cli
cli
push
push
jb
fnstsw
cli
out
mov
enter
mov
xor
bound
inc
ret
sub
daa
ja
lock
aad
sub
in
mov
xchg
jns
je
mov
inc
mov
sbb
dec
sahf
fidivrl
mov
mov
mov
cli
dec
jle
vucomiss
orl
cmp
mov
and
iret
push
popf
out
loope
pop
mov
xor
repnz
mov
imul
push
loope
imul
dec
dec
sarl
inc
cmp
push
jo
jno
cmp
and
and
imul
in
ljmp
negb
aas
pusha
push
pop
hlt
inc
repnz
xchg
jle
insl
test
sub
lods
lahf
inc
xchg
nopl
and
mov
bound
push
push
popf
cmpsl
push
xchg
jo
stos
lret
fbld
cwtl
sbb
push
jmp
rorb
das
out
mov
ja
mov
lret
mov
aas
bnd
clc
flds
in
pop
pop
mov
das
iret
rcll
fistpl
inc
fsubs
sub
ret
int3
dec
imul
inc
jbe
in
lahf
bound
xor
dec
mov
int
test
inc
ret
shl
aas
xor
add
sub
arpl
test
iret
aas
jae
out
sub
fcmovnbe
jecxz
sbb
xlat
jmp
jae
jo
into
jo
add
jp
jle
cmp
in
out
push
mov
mov
mov
xor
push
outsl
out
dec
cmp
cwtl
in
mov
cmp
jmp
out
rcll
cmp
sahf
stos
clc
mov
loope
shl
xlat
rcr
dec
add
movsb
test
xor
sub
mov
pop
sbb
push
cs
add
daa
and
mov
xchg
xchg
mov
icebp
shrl
insb
ret
push
stos
xchg
fsubrl
adc
lock
adc
ret
inc
jle
shrl
outsb
daa
out
popf
mov
pop
jmp
lods
fdivrs
ret
or
test
aaa
xchg
repz
jmp
sbb
or
cmp
xchg
pop
inc
jmp
imul
out
testb
int
out
sbb
xor
cmpsb
inc
mov
dec
clc
cmp
xor
mov
lds
popa
jae
mov
ret
mov
stos
mov
xor
loopne
or
mov
add
testl
das
cmp
cld
lcall
adc
repz
leave
sub
imul
dec
out
dec
dec
inc
cmpsb
jne
inc
xchg
stos
sahf
mov
lcall
pcmpgtw
mull
or
mov
out
mov
pop
pop
jno
loopne
call
popa
test
xor
lods
mov
xchg
aas
int3
std
data16
shl
fisttps
xor
das
int3
leave
sbb
dec
push
lock
cmpsl
fsts
jge
outsb
jle
dec
faddl
fwait
mov
aaa
add
aas
pushf
xchg
inc
mov
clc
pop
xor
idivb
adcb
inc
dec
mov
ret
out
pop
test
lds
jle
iret
cltd
add
loope
je
jmp
dec
mov
repz
pop
sub
jo
lret
jo
out
fwait
enter
jae
lcall
sahf
push
and
dec
jge
lret
jp
sarb
aam
jae
sub
mov
shrb
sbb
mov
out
or
mov
cs
lahf
dec
mov
mov
sbb
lea
cli
xor
add
or
sbb
xor
sbb
sti
stos
fcompl
cmp
mov
shl
iret
ficoml
or
lahf
testl
out
mov
fs
xor
in
push
imul
sbb
jecxz
and
shll
xor
push
dec
mov
repz
in
ja
jbe
pusha
sbb
arpl
xor
insl
pusha
outsb
outsl
adc
hlt
pop
mov
add
out
dec
mov
push
fcoml
pop
and
push
adc
jl
out
pushf
fsubs
das
fistpl
subl
pop
xchg
push
or
mov
xchg
jge
inc
ficoml
and
scas
cmp
dec
mov
jae
sarl
into
mov
jecxz
pop
andb
sbb
in
add
stos
insl
cmp
test
sub
pusha
fs
mov
adc
xchg
out
in
mov
movsb
and
add
movsb
mov
mov
sbb
fucomip
sbb
adc
push
xor
dec
jb
jmp
sub
sub
jne
mov
fisubrs
and
pop
out
adc
push
addb
into
cmp
aam
pusha
in
iret
mov
push
pop
stos
cmp
sub
mov
pop
jg
flds
aaa
jmp
lahf
in
fs
xchg
aam
push
daa
or
pushl
xor
dec
push
and
mov
cwtl
js
and
mov
out
cltd
addr16
je
cmpsl
jge
jae
aas
sub
mov
movsb
sahf
lods
sub
pop
mov
sub
lcall
in
push
ret
cs
call
movsb
fs
fs
orl
cld
mov
dec
cmpsl
js
fs
pop
iret
xlat
push
pop
outsb
in
and
outsl
cmpsb
cld
lcall
dec
inc
mov
stos
movsl
sahf
ss
cmp
sub
and
test
jno
sarb
iret
jl
ja
push
xchg
mov
cmp
jnp
popa
mov
aam
push
in
test
pop
lcall
mov
scas
fsubl
sub
in
push
rep
hlt
pop
mov
dec
mov
or
pop
xchg
mov
mov
and
push
out
test
js
mov
arpl
ja
inc
cmp
inc
mov
sti
sbb
in
aad
es
dec
push
cmp
jbe
inc
cld
repnz
cmp
rcrb
and
jbe
nop
add
ss
xchg
mov
popf
add
cld
xchg
pop
adc
cmpsb
daa
rcr
pop
cmp
cmpb
data16
jmp
add
int3
push
inc
pop
cmp
push
cmp
ja
shlb
mov
mov
mov
adc
pop
adc
cwtl
pop
das
andb
sbb
xorb
jb
xor
cmp
aas
imul
adc
arpl
out
xchg
mov
mov
inc
mov
pusha
adc
test
dec
mov
xchg
daa
xchg
call
jl
push
scas
jmp
stc
dec
popa
test
sti
sbb
aam
out
icebp
push
add
fildll
pop
add
cmpsb
pop
or
stc
jl
xor
imul
cwtl
lds
cltd
dec
in
movsb
fdivs
pusha
adc
push
daa
lcall
inc
addb
pop
mov
fs
jge
push
mov
leave
wbinvd
mov
mov
jmp
inc
add
out
idivb
xor
scas
jae
xchg
idivl
sub
mov
aaa
mov
imul
loop
nop
cmpsl
enter
cmp
and
daa
sti
add
mov
xchg
call
mov
pop
dec
icebp
inc
mov
push
jp
xchg
cmp
dec
addl
jae
sub
xor
adc
mov
pop
int3
jmp
mov
lods
test
sub
xor
mov
fisubl
stos
jmp
pop
lods
sbbb
and
jg
flds
daa
sub
add
fadd
cmc
sub
push
xchg
jge
xor
pop
cmp
jbe
les
inc
pop
or
xchg
mov
ljmp
out
andl
dec
scas
jmp
jp
jb
push
not
dec
dec
test
fcmovb
jae
cmpsb
mov
daa
int
adc
mov
imul
in
js
vmovlpd
push
sub
iret
fdivrl
test
add
je
sbb
test
mov
xlat
dec
or
cmpsb
jae
cli
movsb
dec
mov
cmp
jp
xlat
in
out
sbb
jno
mov
test
sbb
out
xor
cmp
fisttpl
sbb
sbb
cltd
clc
clc
mov
push
ret
cs
lret
mov
leave
pop
sub
sbb
neg
xor
add
dec
loopne
mov
adc
push
cmpsl
cs
or
sbb
movb
orb
into
fldcw
or
rolb
stos
ja
sbb
dec
cs
mov
mov
or
adc
scas
scas
pop
cmc
pop
adc
xchg
jnp
gs
lret
xor
cld
popf
or
arpl
js
movsl
xor
mov
lds
inc
bound
mov
sbb
rcrb
xchg
shl
rcrl
xlat
pop
xrelease
sahf
std
inc
outsl
pop
mov
clc
sbb
xor
rcrb
sub
jp
add
sbb
dec
cmp
mov
adc
mov
shr
cmpb
or
and
repnz
fld
shrl
adc
enter
mov
out
lcall
das
lods
fbld
jae
cmp
out
out
sub
out
cmp
or
cmp
add
jl
call
xchg
jns
or
inc
inc
and
notb
jg
sub
sti
jp
cmpsl
mov
cmpsl
iret
and
mov
or
cld
fcompl
mov
outsl
mov
fdivl
mov
mov
pop
mov
xchg
aad
repz
push
xchg
cmp
jno
pop
mov
std
fimull
xor
lcall
stos
icebp
and
dec
mov
add
insl
push
xor
mov
or
push
pop
push
nop
xchg
and
cltd
push
cmp
xchg
lea
cmpl
inc
mov
inc
xchg
jl
push
cltd
inc
subb
adc
aam
bound
jecxz
rorl
sti
fcomps
in
shll
insb
rcrl
cmp
xchg
xchg
and
mov
cmp
pop
jle
adcb
sub
aam
jo
lods
cmp
and
mov
leave
push
jl
cmp
mov
lock
sub
shll
cmpsl
call
mov
sbb
inc
jae
addr16
jb
or
cmp
aaa
cmp
push
mov
jecxz
enter
loopne
neg
aas
mov
jge
outsb
cli
cmpsl
and
ret
jge
popf
test
movsl
xchg
mov
and
out
testl
loopne
pop
sbb
fnsave
ret
mov
das
cmp
mov
pop
add
xor
and
sbb
data16
inc
loope
jbe
fistpl
lods
push
fistpl
daa
and
pop
outsl
loop
mov
mov
cmp
add
xchg
fisttpll
rcr
xchg
mov
ret
pushf
jmp
adc
adc
lret
and
aad
pop
fwait
xorb
test
or
repz
jge
and
dec
call
jg
shl
cmpsb
jae
out
mov
aam
sbb
pop
mov
cmpsb
jg
dec
mov
cltd
cld
fdivl
enter
push
icebp
jns
mov
jmp
push
mov
pop
aaa
adc
jle
pop
sub
stc
push
inc
sub
hlt
shl
repz
add
pop
out
xchg
dec
lcall
push
and
gs
stc
outsb
xchg
inc
fistpl
mov
sbb
mov
mov
pop
lcall
push
xchg
call
orl
jnp
decl
and
push
sbb
mov
rcrl
icebp
pop
add
std
lahf
fnstcw
push
xchg
push
shl
sti
dec
xor
or
pop
test
loop
stos
sub
jmp
sbbl
jmp
lds
sbb
in
aam
pop
mov
aaa
or
jg
es
shrl
testl
out
adc
aad
mov
jl
shrl
mov
aaa
mov
inc
sahf
sub
jb
lds
jle
sub
sub
sbb
loopne
lcall
cmp
jno
adc
xchg
stc
mov
filds
cmp
cmp
xchg
jl
jb
loope
rcrl
loope
leave
pop
push
adc
popf
jmp
imulb
pop
fcompl
nop
daa
sbb
je
jo
pshufw
gs
xor
mov
xor
test
out
cmp
pop
or
mov
jnp
pop
push
sub
test
dec
in
lea
xor
sbbl
mov
dec
stos
mov
mov
mov
ja
cmpsb
orl
addr16
push
ret
adc
sbb
aad
inc
lret
and
jmp
xchg
jbe
adc
lods
cld
les
shrb
sbb
jp
mov
shll
movsb
pop
push
std
cmp
pop
and
mov
sbb
mov
mov
inc
cmp
fsubrl
es
ja
pop
dec
cmp
cmp
fdivl
mov
jg
pop
aaa
cmp
sbb
and
dec
push
adc
ja
add
sub
cmp
in
adc
outsl
je
incl
add
in
mov
loopne
lret
cli
and
mov
push
psubusb
aaa
xor
dec
aam
pop
std
lcall
mov
rol
pushf
adc
adc
insl
inc
hlt
iret
and
sub
mov
cmp
lret
mov
pop
jno
mov
adcl
inc
jp
into
push
mov
pop
xchg
test
or
loop
ret
iret
out
hlt
mov
xchg
cmp
cmp
push
jns
jae
push
subl
sub
xchg
xor
mov
rcrl
sti
cmp
imul
loopew
mov
xlat
cltd
xchg
shl
mov
cli
daa
jno
shll
or
mov
inc
add
push
push
data16
and
or
cmc
outsb
mov
and
call
cli
repnz
les
push
inc
aam
repz
cld
jne
mov
decb
mov
pop
push
mov
sbb
lret
mov
dec
xchg
subl
add
push
test
sub
in
lea
add
and
js
pushf
dec
xchg
sbb
xchg
mov
inc
rol
mov
or
cmpsl
dec
mov
mov
hlt
mov
cld
divb
sub
imul
outsb
and
xchg
add
inc
popf
cltd
cmp
push
out
loop
mov
and
pop
outsb
movsb
lods
pop
jmp
cmc
sub
inc
hlt
jmp
push
jae
js
adc
adcl
dec
inc
and
sahf
testb
mov
outsb
lds
add
stc
arpl
inc
add
jnp
in
movsb
scas
sbb
dec
jo
movsl
lret
pop
test
movsb
jmp
call
mov
int
popa
cmp
imul
movsw
pop
test
fwait
lds
in
xchg
xchg
inc
out
jp
mov
fs
outsb
cmpsl
pop
dec
push
shll
and
jmp
jmp
nop
and
mov
pop
jmp
mov
aad
and
push
pop
pop
mov
scas
lds
adc
rorl
inc
adc
or
lahf
aam
or
inc
mov
sbb
notl
inc
sbb
int
sub
inc
adc
sbb
cli
insb
ja
cs
cmp
push
jp
or
cmpsl
pop
jno
or
addl
or
jb
stos
dec
pop
jp
jge
cmp
in
mov
sbb
rorb
jmp
stos
jl
aam
push
jmp
iret
push
or
xchg
push
stc
ret
push
mov
orl
adc
sub
jecxz
inc
loop
addr16
and
xor
imul
mov
adc
rclb
mov
mov
inc
inc
mov
loop
jl
fistl
jp
insl
xchg
es
xchg
call
aas
in
cmp
cmpsl
adc
xor
iret
clc
aad
push
cmp
ficoms
test
sbb
int3
inc
jns
aas
sbb
out
int
pop
pop
push
daa
in
mov
push
jnp
pop
mov
divb
js
xor
daa
jo
shrb
mov
push
jg
dec
paddsw
test
pop
sbb
icebp
push
push
add
pop
paddsb
shlb
int
call
out
inc
jae
xor
rcrb
cmp
adc
push
pop
out
inc
push
mov
and
mov
inc
pop
mov
fidivl
aam
sahf
pop
adc
xor
sub
stc
cltd
cmpl
imul
pop
ficompl
xor
adc
push
into
cltd
dec
int
lret
out
bound
test
testb
mov
out
add
mov
pushf
xchg
inc
iret
jo
inc
lea
adc
repz
sbb
push
rorl
aad
mov
pop
xchg
mov
push
jbe
repz
push
mov
xchg
inc
outsb
and
loop
push
inc
pop
int3
xor
imul
pop
xchg
add
fwait
addr16
loopne
mov
mov
rcr
dec
push
adc
icebp
mov
jmp
stos
sbb
xchg
jnp
scas
mov
add
and
ss
movsl
fwait
rcrb
xor
xchg
pop
gs
nop
cmc
in
enter
jecxz
push
loopne
mov
lock
pop
or
in
int
xchg
or
fwait
push
mov
mov
js
outsl
rep
mov
mov
jle
and
fwait
sahf
sbb
ret
mov
push
clc
xor
jmp
pop
hlt
cmp
add
pop
adc
mov
jl
int3
pop
sahf
jp
push
jg
out
loope
movl
ss
fcoms
dec
dec
dec
adc
dec
xchg
aas
pop
popf
sbb
cmp
xchg
mov
pop
pop
xchg
inc
jecxz
and
dec
pop
sub
repnz
or
mov
lea
test
push
sub
test
int
pop
ret
mov
mov
dec
jnp
or
divb
inc
mov
xor
fcompl
jbe
push
adc
lea
inc
push
jecxz
fists
aad
sub
jne
std
pop
mov
xchg
xchg
push
push
add
gs
add
imul
fdivrs
stc
loope
inc
popa
push
and
xchg
mov
lock
icebp
cmpsl
push
in
and
in
daa
outsb
dec
push
xor
mov
cltd
cltd
hlt
addr16
std
shrl
cmpsl
lret
testl
insb
leave
repnz
jle
add
repz
pop
test
push
cmpsb
mov
dec
test
test
popa
jl
jmp
adc
or
cmpsb
pop
out
xlat
ljmp
add
xchg
lods
int3
inc
ja
jnp
adc
test
gs
lret
pop
jge
leave
fcomps
push
sbb
jne
out
movsb
jl
dec
sarb
jl
adcb
or
test
cmpsl
fildl
xlat
aam
stos
add
xchg
out
pop
idivb
jg
jg
jns
sbb
mov
sbb
jecxz
pop
rol
adc
clc
jle
inc
push
xchg
xor
cwtl
repz
mov
mov
sub
or
jl
fists
out
icebp
add
lret
adc
cmp
or
adc
dec
xor
sti
rorl
arpl
push
in
test
mov
arpl
ret
lods
std
lods
add
mov
cmp
fidivrl
cltd
loope
es
pop
mov
cld
fcmovb
int
stos
scas
xchg
stos
movsl
sbb
incl
movsb
dec
cmc
push
jecxz
scas
jae
and
mov
cltd
sub
add
or
jmp
mov
xchg
cmp
sub
sub
sahf
sub
pop
dec
popa
lret
lods
popa
push
out
xor
add
loope
cmpsl
lds
jne
mov
mov
cmpsb
pop
push
inc
or
sub
and
mov
add
popf
fadds
cmp
pop
xchg
sub
hlt
dec
push
enter
out
cs
pop
decl
sahf
mov
mov
fildl
jae
jae
cmp
xchg
sub
jle
cli
pop
inc
cmpsl
mov
pop
sbb
pop
fdivrs
add
dec
mov
ret
pop
xchg
enter
addr16
mov
leave
cmpsb
int3
jge
orb
std
ds
push
dec
cmp
jno
mov
or
aad
mov
jnp
pop
gs
aam
fwait
inc
fldcw
sub
sbb
shlb
xchg
inc
test
or
push
cli
or
mov
add
sbb
cmpb
push
mov
mov
les
std
leave
stos
cmp
cmpsl
add
je
inc
out
and
shlb
lea
movsb
xchg
arpl
sbb
jmp
push
int3
cs
jge
adc
insb
lahf
lahf
dec
jg
inc
test
shll
sub
jno
arpl
xor
outsb
ffreep
pop
es
cmp
shll
and
std
cwtl
mov
lea
int3
mov
arpl
stc
pop
loop
sbbb
cltd
inc
fs
jg
xor
movsl
into
fimuls
inc
pmuludq
mov
std
out
xor
cs
inc
dec
mov
lcall
push
add
and
dec
into
mov
mov
mov
sbb
fdivrp
outsb
stos
mov
mov
push
mov
jb
jae
xchg
outsb
pop
cmpsl
inc
xor
popa
fs
movsl
push
outsl
push
cmc
sbb
sub
sub
ljmp
xchg
jne
mov
xor
mov
pop
loope
xor
lods
mov
bound
lcall
sbb
aam
fcompl
mov
incb
and
outsl
sub
divl
mov
pop
sub
jecxz
into
push
iret
out
cmp
int3
dec
jge
scas
pusha
sarl
sbb
sub
mov
add
push
adcb
scas
push
fdivl
bnd
push
roll
jp
or
js
lret
push
mov
pop
xor
lret
das
mov
icebp
lcall
pop
jo
leave
inc
rclb
mov
add
lds
mov
es
xlat
and
ret
cmp
fmull
dec
push
push
lahf
rolb
and
push
rcll
sbb
addb
pop
adc
ficompl
push
ljmp
inc
cmp
pop
xor
roll
xchg
and
scas
clc
pusha
iret
mov
dec
xlat
pushf
push
repz
lods
cmp
in
repnz
xchg
push
mov
popa
rol
sbb
xchg
mov
loope
fistl
push
mulps
xchg
mov
xchg
fcmovnb
mov
icebp
mov
cmp
dec
inc
mov
in
dec
js
jno
sbb
mov
mov
jne
popf
subb
out
les
or
mov
sahf
daa
pop
or
mov
lcall
cmp
out
pop
ds
cli
lock
cmp
fldt
inc
mov
jmp
mov
and
sbb
cmc
clc
xor
scas
xchg
cmpsb
es
sub
jge
xor
mov
and
test
pop
cmc
ja
inc
aaa
lods
mov
dec
test
jae
inc
std
loope
xor
jg
lret
out
test
mov
push
test
nop
in
dec
inc
bound
push
and
test
clc
add
jp
mov
cs
mov
fs
pop
xchg
mov
int3
pop
testl
lret
loopne
loope
xchg
sbb
ds
lcall
out
ljmp
ret
dec
mov
imul
lods
dec
add
pop
sahf
mov
pop
sahf
adc
or
jns
ljmp
shlb
push
hlt
pop
jns
xchg
xchg
xchg
sub
test
sbb
pop
dec
xchg
repnz
fisttpll
inc
rorb
or
cltd
mov
leave
pop
and
add
inc
cld
test
mov
or
cmp
ret
add
jg
push
inc
or
xchg
inc
sbb
loop
sbb
movsb
inc
adc
xchg
gs
mov
loope
lods
data16
sub
repz
cs
add
mov
es
mov
es
or
push
scas
mov
sbb
add
rcrl
stos
jp
ljmp
rcrb
dec
xlat
push
adc
lcall
fildl
imul
jne
mov
jnp
mov
incb
add
push
dec
xor
mov
lcall
les
sbb
lds
pop
ja
add
sub
jne
pop
cmp
mov
loopne
push
into
pushf
mull
push
lds
fucomp
rol
pop
scas
pop
jmp
es
hlt
aad
pop
outsl
push
std
mov
dec
shl
add
jns
pop
and
inc
xchg
cmp
out
dec
out
adc
rol
cmp
int3
and
lods
mov
sahf
call
repnz
popf
lods
bound
adc
push
int3
or
int3
into
and
cltd
xor
repz
icebp
mov
or
js
xchg
ljmp
jp
sbb
mov
shll
rorl
iret
sbb
popf
or
sub
stos
cmpsb
jns
add
push
inc
xor
pop
js
rorb
push
test
mov
cmpsl
mov
push
push
jmp
aad
xchg
mov
adc
movsb
jecxz
or
pop
mov
insl
jge
lea
daa
mov
xor
sub
out
mov
sbb
dec
dec
sub
mov
mov
xorl
in
pop
imul
dec
in
in
loop
shrb
sub
mov
inc
aas
adc
jecxz
cmp
negl
dec
mov
loopne
and
mov
insl
lcall
in
pusha
sbbb
inc
or
popf
push
dec
outsl
sbb
push
sub
pop
fmul
aaa
arpl
sbb
dec
xor
mov
pop
jmp
xchg
dec
xor
xchg
cwtl
aas
div
stos
mov
hlt
pop
inc
inc
insl
aaa
mov
call
movlps
mov
fs
mov
js
xor
out
mov
daa
repnz
ss
add
js
imul
cwtl
fdivrs
pushf
xor
mov
jb
mov
pop
inc
fidivrs
loop
andb
mov
push
cs
daa
xor
or
andb
mov
mov
mov
push
jmp
cltd
in
adc
addr16
rsqrtps
add
insl
negb
scas
or
orb
test
and
icebp
mov
cli
xor
test
and
pop
inc
je
mov
movsb
jne
lcall
or
push
lock
sub
sbb
loop
dec
cli
inc
mov
imul
popa
shlb
or
mov
dec
inc
xchg
stos
lret
sub
loopne
mov
in
iret
fsub
dec
adcl
sub
inc
push
std
mov
adc
sbb
inc
frstor
lahf
dec
mov
stc
movsb
pop
dec
arpl
ficompl
mov
call
ja
mov
xchg
sbb
arpl
xor
fistpll
shrl
xchg
test
test
pop
int3
sub
and
fildll
sub
fstpt
dec
or
or
dec
enter
fbstp
in
jb
cmp
insb
jo
mov
div
push
fildl
mov
jno
popa
repnz
or
notb
mov
inc
sarl
mov
aaa
cs
xlat
inc
push
repz
dec
nop
lock
push
cmp
xor
pop
inc
or
test
xor
cs
push
pop
jnp
dec
stos
cmp
lret
push
pop
inc
dec
jle
mov
and
pop
lret
pop
push
loopne
cmp
lahf
pusha
jns
inc
addr16
icebp
outsl
dec
push
fnstsw
jmp
ja
roll
aam
and
push
into
xor
testb
mov
add
sbb
fadds
xchg
shl
lret
arpl
add
sub
insb
xor
inc
lret
ss
test
add
mov
dec
mov
xorl
cmc
or
push
push
add
loopne
cmp
inc
out
sbb
test
das
dec
cltd
pusha
test
xor
adc
cmp
js
adc
icebp
dec
in
add
shl
out
fwait
cmp
ret
jo
push
xor
jnp
jo
dec
adcl
pmaxsw
cltd
jno
shrb
dec
stos
icebp
out
imul
pop
and
daa
lods
lods
mov
cmp
ret
daa
scas
sti
push
inc
fsubs
sbb
jo
mov
pop
popf
arpl
pop
push
mov
dec
jp
push
mov
das
xlat
or
outsl
pop
or
inc
test
xabort
call
sbbl
push
dec
xchg
arpl
push
andb
dec
lods
mov
cmpsl
mov
insl
xchg
push
insb
cmp
pop
push
push
std
or
cmpsb
push
and
cmpsb
cmp
add
loopne
cmp
cld
nop
sahf
dec
insl
ret
rcll
dec
or
lahf
lcall
bound
test
pop
push
mov
xchg
push
inc
pop
mov
scas
or
cmpsl
filds
dec
mov
mull
push
sub
jl
push
jne
pop
inc
lret
psubsb
aam
jnp
xor
cld
mov
cmp
sub
fs
adc
es
sbb
mov
dec
cmc
imul
aaa
jle
and
ss
mov
sub
inc
fst
xchg
test
ficoml
jle
incl
inc
loop
shll
push
leave
cmova
and
fcompl
mov
sub
jbe
adc
pop
pop
out
mov
out
sahf
sub
js
mov
or
sti
jge
cmp
push
bound
adc
std
mov
sub
ret
cwtl
loope
enter
sub
int
mov
jge
fistl
inc
shrl
pop
cmc
push
dec
and
xchg
fnsave
ja
rdmsr
int3
popa
inc
pop
sbb
jne
pop
inc
xchg
pop
je
jne
insb
sbb
sti
or
mov
decl
es
popf
sbb
cs
mov
and
scas
cmpl
pop
into
jge
jecxz
or
push
in
jecxz,pn
in
pop
xor
dec
call
ret
ds
mov
fsubl
lods
rep
jo
adc
fwait
inc
and
xlat
adc
lock
inc
cli
enter
loopne
in
fcomp
fld
mov
int
mov
inc
or
fisttpl
push
loop
mov
jne
adc
sbb
mov
pushf
or
imul
sahf
scas
sbb
out
cmp
movsb
std
xor
into
add
insb
loope
lahf
push
arpl
xor
shl
ret
dec
cmp
jnp
inc
es
aam
fwait
es
add
sub
cmpsb
push
and
xlat
imul
lea
inc
jmp
out
loop
lock
jb
cld
push
cmp
or
jne
dec
cwtl
dec
sub
das
jnp
jns
mov
cmp
insl
jg
fldenv
mov
mov
aas
nop
jb
mov
or
adc
xchg
clc
es
popf
adc
lret
xlat
in
movsb
push
aaa
ljmp
enter
xchg
popf
xor
popf
dec
pop
ds
inc
and
stos
jnp
inc
cmpsb
lds
inc
sahf
int
dec
insb
or
and
push
rcr
loopne
push
add
xchg
insl
push
inc
cmp
push
lods
mov
sub
push
lret
lar
stos
lds
pushf
cmpsb
gs
test
mov
and
mov
sbb
jle
add
xor
gs
cmc
and
mov
push
add
mov
fldt
int
push
test
cs
je
call
adc
call
lcall
lret
mov
xchg
divl
jecxz
in
jno
loop
sbb
icebp
loop
xlat
fidivl
fs
mul
pop
pcmpgtd
cvtpi2ps
sbbl
test
sbb
std
mov
sbb
dec
out
mov
jg
out
stos
push
push
fbld
sub
cmpsb
jae
aas
cld
mov
mov
inc
and
testb
inc
add
add
fwait
stc
mov
and
cli
adc
call
stos
pop
adc
push
mov
aaa
mov
push
loopne
sub
imul
daa
dec
sub
push
mov
insl
nop
jne
in
sub
loope
push
pop
add
ljmp
lods
xchg
mov
mov
loopne
push
mov
test
cmp
out
fiaddl
stc
mov
or
jge
adc
fucomi
adcb
hlt
rol
adc
xchg
pop
stc
jle
mov
lds
inc
add
in
xor
push
mov
jo
sti
sbb
cmp
jo
mov
ret
jge
sbb
inc
mov
fcomip
imul
inc
clc
out
pop
dec
lea
in
sub
pop
data16
aaa
int
jle
pop
repz
pusha
aaa
fcoms
cs
js
inc
add
push
dec
jne
fsubrs
mov
shll
pop
hlt
or
pop
jmp
sub
pop
and
or
iret
fisubl
xor
sub
dec
mov
rorl
stos
adc
les
outsb
mov
int3
push
or
sahf
cli
push
sahf
push
test
out
scas
pop
aam
xchg
fs
push
lret
xchg
cwtl
or
sbb
sbb
xor
loope
push
std
les
cmp
adc
inc
push
cmc
xchg
inc
notl
jae
xor
adc
and
cld
cmpsb
pop
mov
jmp
ja
test
inc
cmp
mov
mov
cwtl
sub
or
ljmp
idivl
pop
ljmp
leave
jle
loop
mov
pop
lock
arpl
js
dec
mov
gs
jmp
ljmp
xor
xor
pop
inc
orl
popa
cmp
iret
mov
mov
inc
xor
jg
xor
mov
mov
inc
je
leave
sub
ljmp
int
ds
dec
inc
inc
lds
cmp
mov
cmp
jl
pop
jl
mov
pushf
pop
lret
into
popa
and
call
xchg
das
rorb
cs
lret
cmp
cmc
push
mov
mov
repnz
mov
add
dec
pop
lds
daa
mov
mov
mov
rep
push
pop
cli
or
in
mov
adc
adc
aad
je
js
add
cmp
ltr
test
jl
mov
shrl
sysret
je
mov
or
jecxz
stos
subl
les
mov
js
lods
in
pop
xchg
icebp
iret
dec
ret
lds
jecxz
and
cltd
dec
call
int3
inc
lcall
sub
addps
sbb
xor
mov
aas
push
sbb
push
clc
fnstsw
movsl
into
adc
dec
fisubs
stos
cmp
out
xchg
jg
hlt
je
into
jno
mov
pushf
loopne
das
std
fistpll
push
mov
notb
sbb
icebp
addr16
mov
ss
xchg
fwait
or
test
push
push
pop
mov
and
outsl
pop
dec
repnz
pop
pop
mov
out
xchg
hlt
cmp
hlt
push
lds
sub
sub
std
sub
in
aas
loopne
push
lret
push
stc
sub
sbb
jnp
les
sbb
lock
scas
lahf
fwait
jg
mov
imul
pop
call
push
inc
movsb
aas
push
mov
frstor
shr
inc
ret
lret
push
jnp
push
mov
push
cld
sti
lret
xchg
inc
ja
lods
imul
pop
cmpsl
push
adc
sti
fwait
scas
add
pop
adc
fadd
enter
sar
jno
shlb
cmpl
test
jmp
mov
and
testl
loop
dec
sub
push
inc
mov
cmp
cmp
rorl
cs
lds
int3
adc
shl
stc
das
sahf
inc
adc
pop
es
cmpsb
sti
lea
mov
into
push
cltd
fld
nop
jne
fwait
or
nop
cmp
mov
xor
xchg
popa
mov
sbb
jle
add
fucomip
push
aas
inc
into
mov
or
bound
ret
mov
sub
shlb
decb
push
inc
pop
sub
mov
mov
test
dec
jecxz
test
clc
inc
pop
sub
pop
leave
in
and
adc
das
sbb
dec
mov
setno
stc
fnsave
dec
cli
scas
cmp
and
enter
sbb
add
jbe
sub
xchg
or
jne
dec
lods
jno
push
mov
shl
lods
jns
jp
or
xchg
jns
or
scas
loop
inc
outsb
outsl
adc
pop
mov
outsb
add
sub
dec
lret
ja
insl
and
testb
insl
pusha
push
fdivrl
mov
mov
imul
dec
cmp
jo
sub
shrb
std
das
sbb
mov
mov
aaa
imull
subb
add
fs
jmp
pusha
scas
xchg
jae
push
outsb
aam
xor
mov
mov
gs
lahf
ja
jb
mov
inc
and
fdiv
adc
cmpb
push
shl
inc
jne
jge
enter
data16
incb
pop
outsl
popa
inc
adc
sbb
add
mov
cs
xor
mov
bound
jecxz
push
dec
pop
push
gs
xor
pushf
sbb
mov
fs
not
cmp
push
jbe
sub
sahf
push
and
cmova
xor
in
jg
mov
fdivr
out
xchg
xor
aad
inc
cmpsl
lahf
xchg
and
lea
sahf
xor
cmp
mov
xchg
sub
clc
scas
mov
mov
jns
int3
xor
iret
aad
das
dec
cmp
sbb
mov
dec
mov
push
mov
shr
or
jge
in
into
or
call
jg
test
mov
lcall
cltd
dec
xchg
push
frstor
pushf
out
sub
sbb
mov
jle
sbb
push
jo
cmpsb
cmpsl
mov
out
xor
mov
ja
std
mov
inc
mov
aaa
xchg
dec
mov
inc
divb
push
shr
push
movsl
add
sarb
mov
scas
jb
test
inc
test
or
pop
adc
movsl
gs
por
jg
vphaddudq
cmp
pusha
outsl
cmpsl
xchg
repz
mov
call
aam
mov
sbb
and
sub
and
sbb
mov
mov
dec
test
mov
jae
cmp
inc
dec
ss
cmp
mov
cmpsb
jbe
rcll
cltd
cmpsb
shlb
mov
pop
inc
jl
call
mov
movl
rorl
bound
dec
cmp
sbb
lret
shll
dec
mov
mov
adc
repz
repz
imul
clc
xchg
add
mov
aaa
ljmp
mov
sbb
jecxz
subb
rclb
xchg
dec
cmp
sub
lcall
pop
leave
push
fildll
mov
mov
aaa
sub
mov
mov
mov
cmpsl
jb
add
cmc
loopne
aam
addr16
or
fs
data16
jne
lds
out
lds
mov
lret
callw
mov
push
test
adc
mov
add
and
sbb
lock
lahf
repz
sub
dec
mov
cmp
das
cwtl
clc
into
icebp
jo
fildll
mov
xchg
aas
into
cld
add
shrb
xchg
stos
sbb
xor
jge
ss
mov
bound
sub
das
mov
in
int
lds
adc
inc
rep
inc
xor
cli
ret
cmpsb
popf
jmp
push
imul
pop
sbb
jno
add
mov
pop
adc
sbbl
push
and
dec
xor
lahf
loopne
scas
sbb
rcrl
and
ret
xchg
push
in
push
out
jecxz
rcl
push
jecxz
sbb
jmp
mov
add
loope
lahf
fwait
dec
sahf
or
mov
imul
push
fcoml
lods
xor
or
xchg
xor
jl
cmpsb
or
repnz
fucom
pop
adc
dec
jge
movsb
xor
cld
addr16
xchg
xchg
cmpl
xchg
pop
and
hlt
xchg
push
mov
xor
mov
sarb
iret
pop
mov
push
and
andb
bound
jb
fiaddl
cmp
gs
lods
es
shrb
shl
inc
shll
xchg
call
je
mov
or
or
test
rep
mov
mov
orl
daa
rcll
sti
cmp
pop
ljmp
cmc
out
mov
mov
rclb
enter
fiadds
outsl
cmp
jne
xchg
jns
lea
imul
push
in
mov
mov
pop
and
sbb
jg
cmp
push
insl
or
cmp
dec
pop
mov
dec
mov
and
sub
ret
adcb
cltd
or
les
sbb
lods
ds
fldt
pushf
cmc
lcall
bound
mov
in
jecxz
pop
cmpsb
lret
pop
push
cmp
jp
rcrl
xor
and
out
push
mov
inc
mov
imul
mov
fsubrl
adc
mov
stos
adc
push
or
and
mov
mov
iret
fcoms
repz
add
mov
xchg
push
ja
stc
xchg
push
loope
pop
sti
mov
cmpsb
and
sbb
adc
lock
adc
imul
aam
ret
fcompl
dec
dec
lods
jmp
adc
mov
adc
push
sgdtl
xchg
cmp
xor
into
add
out
hlt
pop
and
inc
push
shrb
sbb
mov
push
inc
aad
fadds
jnp
mov
pushf
unpcklps
cmp
inc
xchg
cld
and
and
out
mov
loope
jno,pt
rcl
imul
sub
subl
cmpsl
push
fdivrp
and
in
stc
mov
pop
push
cmp
je
rcll
imulb
and
movsl
mov
lea
cmp
sahf
jne
mov
push
and
push
mov
leave
dec
out
imul
push
jbe
inc
test
xchg
jbe
mov
pop
cmp
push
jbe
adc
pop
popf
pminub
test
fcomip
xchg
adc
mov
cmpsb
add
outsl
sbb
loopne
xchg
and
lret
ljmp
pop
das
add
insb
out
aas
pop
adc
aaa
enter
jne
push
push
inc
push
data16
test
clc
mov
and
pop
or
ljmp
addr16
out
push
mov
inc
cli
jnp
movsb
push
add
or
xchg
mov
jae
clc
lods
and
dec
fsubrp
neg
repnz
icebp
cmpsl
das
fnsave
sbb
subb
push
int
fwait
lods
jl
push
pop
pop
xchg
and
sbb
and
lea
sbb
inc
test
int
pushl
fidivrl
sbb
out
inc
cmp
rcr
pop
mov
jecxz
aad
adc
cltd
dec
xor
pop
mov
rcrl
fs
popa
fsubr
sahf
push
and
add
sar
les
test
ficomps
sub
mov
pop
add
scas
add
dec
fistpl
sub
xchg
mov
imul
jecxz
add
pop
ljmp
inc
outsl
pusha
mov
hlt
adc
scas
xor
cmc
mov
mov
outsb
lock
pop
shll
xchg
data16
sbb
jo
mov
add
insb
jo
rep
sbb
je
sbb
sbbl
lods
jg
lcall
adc
int
lds
aad
fistpl
nop
out
repnz
aam
mov
xchg
ljmp
testb
imul
testl
and
fstps
dec
call
call
adc
adc
mov
mov
lret
ds
mov
jecxz
add
ret
xor
je
mov
mov
xor
lds
jecxz
xchg
leave
sar
pop
lret
xchg
sub
add
inc
aaa
fistpl
movsb
jns
inc
andb
fmull
sub
test
mov
add
leave
sub
mov
jecxz
cmc
rcll
push
push
das
jns
out
jnp
push
xchg
lods
cwtl
push
arpl
or
js
je
and
and
orb
jecxz
xor
loopne
aas
jb
jno
ret
mov
dec
outsl
jmp
popf
das
rolb
mov
popf
lock
aad
mov
std
cwtl
jl
sti
mov
imull
fldcw
sub
xlat
sbbb
jle
inc
aas
pop
cmc
cmpsb
inc
pop
add
insb
loopne
dec
sbb
mov
bound
shrl
xor
and
mov
insb
and
mov
and
xchg
cmpsb
movsb
jnp
and
inc
mov
fadd
mov
xchg
mov
and
adc
fdivl
mov
mov
aam
push
cmp
icebp
pop
pop
fbstp
pop
dec
mov
jge
iret
fstl
xor
icebp
aas
xchg
add
jmp
pop
scas
push
outsl
xor
xchg
add
inc
or
mov
mov
mov
mov
push
mov
or
cmp
pop
push
ffreep
daa
imul
adc
push
or
sbb
adc
and
sub
in
lods
fcomps
mov
popf
movsl
pop
int
iret
adc
imul
cmpsl
je
test
pop
mov
popf
or
xchg
mov
nop
pusha
push
fs
or
xchg
mov
shr
cmp
out
push
lods
mov
mov
xchg
or
and
ja
dec
sbb
and
mov
loopne
cmp
sbb
aam
test
pop
push
ja
xchg
pusha
xor
testl
push
or
mov
js,pn
incb
push
jg
into
mov
hlt
jo
addr16
pop
mov
loopne
mov
stc
inc
push
add
ja
mov
and
mov
cmc
push
rorb
mov
mov
fistpll
dec
and
mov
push
sub
popf
test
xorb
push
out
or
das
lods
bound
scas
mov
mov
bound
retw
cmp
into
jle
and
sarb
jns
repnz
dec
xor
jecxz
imul
cmp
sub
jns
sub
repz
sbb
and
push
push
or
gs
fcoml
mov
loop
mov
cld
in
xchg
imul
movups
sarb
mov
stos
mov
loope
cmp
push
sbb
sti
in
xchg
arpl
mov
call
cmpsb
insb
imul
or
push
gs
adc
xor
lods
add
cmpsl
jmp
scas
dec
jno
jne
cmp
adcl
mov
push
fsts
ficompl
out
sub
into
or
dec
and
mov
les
xor
pop
and
clc
mov
mov
mov
out
xor
into
cltd
xchg
and
imul
cmp
test
cs
ljmp
ret
lods
cli
mov
adc
inc
inc
sub
add
clc
cmpsb
fidivs
mov
sahf
pxor
out
mov
inc
or
pop
lret
dec
outsl
jnp
nop
outsb
loope
push
stos
mov
dec
mov
inc
xor
mov
xor
test
mov
or
lret
jns
xchg
cmpsb
pusha
push
adc
sub
push
sbb
pop
sbb
add
inc
mov
sbb
rcrb
lahf
push
mov
pop
mov
jg
jp
pushf
fsubp
cld
mov
cs
mov
inc
scas
add
inc
xor
push
xor
adc
ret
call
jns
cwtl
adc
arpl
es
fsts
setno
sti
ds
mov
add
popa
shrl
jne
in
xchg
lds
iret
sahf
test
sti
mov
dec
sub
mov
imul
test
shll
cmp
add
xor
mov
lahf
in
mov
aam
and
leave
and
pop
jmp
fcmove
push
sub
mov
sbb
xchg
adc
mov
mov
repz
into
mov
mov
cmpsb
fwait
xor
pushf
mov
sub
icebp
nop
lds
cmp
movsb
data16
push
outsb
mov
icebp
call
pusha
or
mov
fucom
out
insl
mov
in
mov
xlat
dec
shrl
jl
ret
pop
xchg
jmp
sbb
mov
mov
mov
push
fnstsw
inc
in
ss
mov
movb
cmp
or
sub
sub
clc
pop
push
dec
pop
sbb
mov
mov
stc
and
cmpsb
and
pop
jnp
ret
clc
pop
outsl
imul
cmp
loope
int
or
mov
js
pop
sub
mov
les
sti
scas
dec
sub
pushf
movsl
xchg
cmpb
cmp
dec
in
fcoml
sub
negl
lret
adc
and
xchg
xchg
and
mov
icebp
adc
call
jl
and
fisubrs
pop
xchg
sub
or
pop
es
ja
jle
and
push
loopne
jnp
mov
lock
adc
or
sbb
movsl
incb
mov
test
divb
sbb
xchg
adc
lods
cmp
xchg
aad
mov
test
sub
add
lea
outsb
jbe
push
icebp
scas
xchg
cli
sbb
dec
push
xor
test
sarl
cmc
mov
roll
lods
in
inc
dec
das
lods
add
inc
mov
js
cs
lahf
push
dec
and
rcpps
add
push
jb
lods
or
hlt
or
mov
cltd
lcall
shr
jnp
dec
cmp
bound
jg
sub
jmp
cld
push
arpl
aam
popa
inc
add
pop
gs
iret
popf
test
neg
push
lock
jp
rorb
adc
push
jo
adc
add
xor
ss
jns
add
rorl
pop
pop
ljmp
movsb
mov
xor
mov
add
adc
test
fbstp
lahf
lods
jb
rorb
pop
xlat
out
subb
daa
push
jl
ret
cmp
adc
mov
std
mov
mov
or
icebp
jp
js
aad
loope
jns
imul
fwait
sahf
and
xchg
dec
mov
cs
divl
jl
sub
mov
mov
fsubl
mov
pushf
dec
outsl
mov
mov
enter
mov
pushl
clc
lahf
cmp
jne
dec
mov
mov
sbbl
sub
or
in
sti
mov
movsl
jmp
cmp
add
adc
sahf
clc
or
imul
hlt
pop
push
inc
aaa
negl
add
or
push
ret
cmp
inc
cmpsb
push
sbb
ficoml
sub
add
fcoml
sub
cwtl
scas
cltd
leave
cmp
jg
jl
repz
xchg
cltd
insl
ret
aaa
or
lret
rcrb
test
call
call
pop
xor
jno
stc
adc
push
in
sbb
loope
add
sbb
push
sti
lods
xchg
mov
leave
cmp
add
and
lock
in
pop
push
mov
loope
fdiv
mov
insb
clc
xor
cltd
or
cmpsl
negb
leave
movsl
cmc
add
push
jmp
or
bound
cmpsl
adc
cmp
jne
jns
rcrb
stc
call
imul
negb
arpl
out
inc
dec
int3
mov
addr16
lock
cmpsb
movsl
popa
sub
dec
xor
add
popf
jl
icebp
rolb
sbb
addl
or
mulb
insb
in
sub
pop
insl
push
pop
jmp
mov
or
sub
sub
gs
mov
sarb
int3
test
into
cltd
shlb
xlat
sub
mov
mov
pop
out
fldenv
adc
loop
mov
movsl
xchg
jmp
aas
rorl
mov
push
mov
push
inc
and
pinsrw
mov
and
mov
dec
mov
int
inc
pop
mov
and
pop
je
sub
mov
in
jo
mov
sub
lret
in
bound
push
pop
daa
ds
push
aad
or
push
jbe
shr
ljmp
cmpsl
lods
xor
in
jmp
jmp
into
stos
lock
dec
push
sbb
jnp
loop
arpl
fiaddl
cwtl
hlt
or
sub
jge
mov
mov
or
xchg
rclb
sti
mov
jns
popf
into
int
adc
add
cli
jecxz
in
pusha
mov
iret
stc
sbb
movsl
xlat
inc
movsl
jg
mov
add
jmp
xchg
cs
cmpsl
pop
xchg
add
push
push
add
insl
ret
ret
sbb
in
or
sbb
push
or
iret
xchg
popf
fisttpl
xor
outsb
mov
push
ds
mov
cwtl
or
cmc
xchg
stc
shlb
cmp
outsb
xor
outsl
and
sub
push
mov
sbb
movsl
jecxz
out
mov
add
lods
dec
jo
mov
cltd
add
in
bound
xor
xor
shrb
adc
bound
ljmp
cmpsl
jmp
hlt
pop
adc
mov
rorw
out
stos
mov
mov
test
in
repnz
inc
rcr
lea
pavgb
daa
xchg
mov
and
sub
mov
mov
rcrl
pop
ficoml
or
aad
cmp
mov
mov
nop
ja
and
mov
mov
aad
sub
mov
jp
cmp
in
out
pop
xchg
add
pop
hlt
decl
popa
inc
lret
repnz
les
bound
mov
or
cmp
fcomi
push
pop
cli
js
in
jb
dec
jns
jae
std
into
sbb
dec
notl
scas
call
push
push
push
dec
xchg
mov
leave
dec
jmp
ja
pop
das
pop
outsb
ja
out
fwait
sti
dec
jb
jb
mov
dec
sti
xchg
in
fistps
mov
bound
nop
scas
pusha
sub
and
fcompl
jae
mov
outsl
int3
out
dec
es
mov
pop
push
imul
loop
and
cli
test
into
rorl
xchg
call
pop
xlat
adc
pop
push
dec
pop
imul
lret
mov
and
popa
fstpt
pop
mov
ret
mov
outsl
mov
imul
ret
or
xor
add
xor
dec
lea
adc
jne
mov
xlat
add
sahf
clc
cltd
imul
mov
mov
xchg
xchg
sub
push
cmp
dec
sub
out
ret
mov
scas
sti
test
test
jns
sub
inc
jge
ja
xor
aam
mov
call
iret
sar
push
adc
dec
sar
cli
cmp
inc
jne
jl
loop
stos
gs
jo
insl
adc
imul
insl
test
dec
test
push
mov
cs
jo
test
fiaddl
jl
clc
mov
mov
out
cmp
pop
jle
xlat
mov
scas
repnz
mov
cltd
jae
inc
xchg
cmp
push
divb
les
imul
dec
outsb
leave
and
jl
outsl
pop
in
cmp
adc
sub
and
fidivrs
nop
push
insb
inc
lock
sbb
sbb
js
fcmovnu
mov
lcall
fxch
add
mov
es
xchg
cs
inc
add
loopne
popa
jg
push
xor
mov
hlt
dec
pop
xor
push
inc
int
adc
add
dec
fiadds
mov
nop
mov
lahf
mov
adc
shl
sbb
sub
mov
xlat
mov
sub
scas
xchg
pop
add
adc
jb
cmp
cwtl
test
fistl
lret
outsb
imul
jmp
and
hlt
sbb
sbb
lock
insl
test
sub
jno
aas
and
es
push
push
pop
ds
pop
out
icebp
mov
mov
iret
aad
mov
sub
mov
icebp
add
adc
inc
cld
mov
out
sub
std
andb
mov
clc
jbe
fildll
adc
add
les
cld
negl
jle
cmpsl
bound
popa
out
mov
pusha
jbe
insb
xlat
lods
dec
shlb
cmp
sub
idivb
jnp
popf
shll
or
daa
jne
stos
clc
gs
clc
lret
dec
movsl
push
dec
mov
jg
sub
out
jbe
xlat
jmp
jecxz
popa
ror
insl
dec
in
rcrb
gs
sahf
push
aas
xlat
add
sub
adc
xchg
adc
icebp
ss
mov
ss
in
out
push
leave
xor
cmpsb
cmpb
push
push
push
ja
push
mov
mov
inc
inc
lods
stos
stos
jmp
mov
sti
cmpl
add
push
out
add
dec
lret
ljmp
mov
shlb
inc
cmp
mov
adc
mov
mov
fstpt
jmp
jae
sub
add
jl
movsb
adc
push
cmp
pop
inc
jp
jns
cmpsl
stos
mov
ret
cmp
out
packsswb
cmp
dec
aas
sub
fcoml
fildll
jmp
mov
popa
pushf
jg
xchg
pop
pop
xchg
jle
jnp
int
dec
aaa
mov
xchg
push
and
mov
xor
out
adc
pusha
mov
jno
xchg
pop
lea
rorl
sbb
clc
clc
lods
stos
inc
push
add
ret
sbb
popf
xchg
std
sub
leave
lds
addr16
insl
aaa
push
jmp
test
test
addr16
fsubl
or
push
sbb
test
insl
pushf
pop
dec
outsb
and
xchg
sarb
mov
or
popa
out
repnz
in
icebp
test
cmc
fs
pop
loop
inc
adc
jbe
mov
arpl
xor
push
xor
lods
in
iret
jp
push
pusha
jmp
lea
stos
pop
hlt
dec
mov
push
clc
fiadds
lods
js
scas
lahf
xor
xchg
mov
fdivs
aad
iret
mov
inc
mov
lock
out
sti
imul
out
sbbl
stos
jmp
sub
xor
xchg
mov
sbb
insb
mov
pop
xchg
negb
stc
inc
xor
stc
and
cmpsl
xchg
in
ja
push
mov
scas
imul
jno
mov
push
cmp
and
sbb
inc
in
jnp
in
fists
sbb
mov
ds
sbb
xchg
movsl
shll
sbb
jl
pop
mov
inc
and
jg
outsl
xchg
mov
adc
push
add
inc
dec
sub
addr16
pop
rcll
cmp
subb
icebp
cmp
cmp
jmp
sbb
hlt
fistl
fisubrs
sub
xchg
dec
testb
xor
movsl
loop
fstpl
mov
lcall
scas
test
jno
cli
and
repz
fwait
push
xor
fidivrl
dec
jbe
mov
jge
or
jg
pop
pop
lds
bound
cmp
les
xlat
lods
div
jbe
adc
nop
pop
pop
lahf
lret
mov
xchg
sub
movsb
imul
int
or
cmp
daa
push
in
dec
fxch
mov
sbb
jbe
or
mulb
outsb
es
pop
addl
adc
cmp
test
pop
fdivrs
or
iret
sub
aad
mov
and
mov
mov
mov
xchg
push
arpl
insb
fwait
dec
jl
out
push
out
adc
or
mov
js,pn
aad
arpl
jae
xchg
sub
cwtl
or
ljmp
pop
and
jg
scas
repz
negb
mov
cmc
out
in
pop
mov
add
fldl2t
shl
fsubrl
mov
in
mov
sahf
popf
out
test
mov
lret
mov
mov
push
outsb
cmp
xor
in
mov
cmp
cmpsb
sbbl
fisubs
lret
aam
xchg
sbb
ret
mov
add
test
push
xor
push
mov
out
xor
cld
sub
push
xchg
fstps
xorb
pop
aaa
xchg
andb
and
cmp
sarl
daa
lcall
fisttpl
add
popf
fadd
pop
es
jmp
call
lods
stc
or
outsb
sbb
adc
sbbb
or
jo
or
mov
mov
lcall
pop
push
jo,pt
imul
aaa
push
mov
in
cmp
mull
push
movsb
std
scas
push
xor
and
jg
aas
cltd
cli
xchg
popf
jecxz
dec
lock
test
xchg
fidivrs
aad
repnz
sub
out
xchg
sub
xchg
fadds
outsl
lret
and
add
faddl
xchg
mov
fistps
sub
mov
jp
add
call
cmp
gs
sbb
push
sti
int3
xor
ret
pusha
add
push
xchg
test
imul
cld
es
icebp
sub
xor
jle
inc
shr
loop
andb
in
dec
stc
and
das
inc
jno
jo
cmp
lcall
mov
mov
jne,pt
xchg
lea
mov
daa
lret
rorb
or
xchg
mov
leave
fistpll
jnp
push
rorb
ss
aas
jg
push
lods
sub
mov
ljmp
addr16
pusha
pop
mov
and
movsb
int3
scas
ficomps
imul
dec
inc
mov
pop
movl
pop
dec
rcrb
lret
js
out
xchg
sub
push
aad
xchg
inc
cmp
pop
xchg
or
sbb
loop
pop
mov
jno
mov
daa
jns
sub
sarl
shrb
xchg
cmp
adcb
nop
jle
pop
aaa
pop
mov
ja
inc
jno
lahf
lods
cmp
or
cli
test
cmp
push
xor
cs
mov
add
jo
xor
cs
stos
mov
push
rorl
hlt
and
push
lcall
daa
jl
mov
insl
inc
out
sbb
mov
test
jmp
or
jge
jmp
push
pop
jno
rol
fsubrl
jecxz
or
adc
sarb
sub
mov
fdivr
ret
bound
cmp
psubusb
decb
lcall
leave
sub
or
aad
mov
mov
sahf
pop
aas
sub
jecxz
dec
jo
lret
jb
rcrb
scas
dec
aaa
push
enter
pushf
mov
cmp
xor
loopne
inc
sub
or
stc
ljmp
pushf
icebp
loope
sbb
dec
sbb
mov
dec
ss
shll
lea
push
inc
cmp
js
imul
mov
push
idiv
xor
add
into
sbb
or
movsb
cmc
mov
mov
mov
hlt
pop
push
jno
inc
add
sub
jno
mov
dec
data16
mov
jae
xor
rorb
shll
xchg
rep
imul
dec
lret
out
and
pop
inc
movsb
out
xchg
jecxz
mov
cmpsb
sbb
shrb
add
push
mov
addr16
faddl
lcall
pushf
dec
mov
adc
cmp
ss
mov
lret
push
cmp
cltd
push
fmul
or
add
pop
jo
lds
fwait
sar
mov
push
cld
scas
arpl
ja
mov
rcrb
lcall
les
push
in
dec
mov
test
in
shl
add
incl
in
mov
ljmp
mov
xor
je
pop
xor
out
cmpsb
shr
fisttpl
int3
mov
jb
mov
sbb
or
mov
mov
mov
xor
mov
mov
and
jbe
mov
fs
outsl
cmp
out
dec
fld
xchg
mov
and
in
pop
dec
sbb
xor
inc
or
mov
mov
leave
push
adcl
ja
cmp
jp
out
in
enter
dec
dec
adc
push
xchg
cwtl
mov
and
insb
mov
ficomps
es
cmp
pop
inc
ret
jb
outsb
in
push
test
mov
repnz
xchg
inc
xchg
repz
pop
adc
bound
mov
popw
push
mov
sbb
lcall
out
and
sbb
mov
push
cmp
xor
and
std
cmpsl
mov
xor
cmpsl
fcoms
push
popf
ret
sbb
mov
fsub
paddsb
andl
dec
adc
and
add
dec
les
lea
pop
or
lods
insl
adc
ja
sub
pop
push
cs
icebp
pop
test
cltd
repnz
in
out
push
shlb
ja
mov
aad
ret
sbb
mov
mov
inc
or
popa
xor
pop
inc
es
lahf
or
sbb
cwtl
sarl
sbb
ja
movsb
sbb
and
lret
push
cltd
mov
push
lahf
ret
add
aas
ljmp
xlat
fsts
jno
sub
push
ljmp
repz
push
cmc
mov
fs
sbb
jg
shlb
sti
sub
fsubl
xchg
shrb
jo
sbb
sub
test
mov
jecxz
add
mov
pop
add
xor
mov
or
xlat
test
pusha
in
pop
pusha
out
ss
mov
add
stos
ret
in
insl
icebp
and
and
push
push
push
fisubrl
pop
in
inc
dec
ss
push
insl
mov
sti
or
cmp
icebp
cwtl
inc
and
loopne
iret
je
inc
mov
add
or
scas
push
out
adc
push
pop
add
sub
or
pushf
dec
inc
mov
cli
push
adc
jb
stos
mov
push
daa
cmp
cmp
xchg
or
sahf
jb
sub
subl
cmp
push
mov
dec
lcall
pop
xor
sti
stos
xor
cmpsl
or
and
aaa
dec
adc
inc
lahf
jl
mov
push
lods
adc
jb
call
test
mov
mov
mov
or
das
mov
adc
add
or
stos
adc
pop
sub
cmp
cmp
inc
sbb
xchg
stc
rcll
add
sbb
je
adc
inc
sub
es
adc
or
add
lock
and
shufps
cltd
lock
fcompl
ja
push
pop
cmp
mov
bnd
pop
sbb
pop
stos
bound
cmp
jmp
mov
shr
daa
ss
push
sahf
mov
popa
scas
lret
out
cmovge
mov
pop
pop
int3
stos
outsb
ret
imul
lods
xor
xlat
xchg
das
movb
lcall
inc
jb
insl
imul
scas
push
sti
cli
fisubl
mov
xor
xchg
xorl
mov
and
adc
repz
and
inc
insl
movsl
inc
jae
add
push
aad
imul
or
out
mov
rolb
pusha
sub
add
mov
int
fsubrs
loope
mov
sub
dec
xchg
jne
and
fldcw
mov
data16
push
mov
ja
dec
adc
xor
clc
cmp
push
mov
ret
aam
into
xchg
add
cmpsb
fst
pop
adc
push
repz
xchg
mov
aad
xor
stos
adc
jp
xor
arpl
inc
jmp
xchg
adcb
xchg
enter
adc
stos
inc
adc
pop
ret
out
mov
std
inc
in
lret
mov
and
push
mov
cmp
inc
mov
pop
mov
sti
sub
hlt
add
mov
and
or
sarl
clc
add
sbb
jne
addb
mov
fdivrs
push
aam
push
pop
or
mull
jp
rcr
pop
sarl
pop
push
lret
rclb
repnz
xor
test
inc
lods
xor
jne
pop
mov
lods
fdivl
outsl
xchg
mov
jge
loopne
adc
push
xchg
jg
sti
lcall
call
xchg
cs
decl
mov
test
lret
insl
mov
mov
pop
inc
nop
jp
mov
adcl
mov
jnp
and
xor
jns
test
cmp
sub
decb
cli
adc
enter
imul
adc
and
add
jp
mov
dec
push
outsb
insl
das
lret
sub
dec
xor
jmp
mov
pop
mov
cwtl
cwtl
test
pop
subb
push
xor
dec
add
jno
add
and
xor
and
adc
rol
pop
sbb
mov
testb
sub
dec
cli
call
push
daa
jecxz
movsb
mov
mov
test
pushf
sub
mov
outsb
enter
lock
je
js
out
push
and
mov
or
test
lcall
mov
std
pop
dec
inc
stos
inc
cld
outsb
add
imul
ljmp
add
jno
shll
inc
or
dec
imul
in
add
dec
icebp
fildll
xchg
cmp
xor
test
or
lea
test
mov
aam
add
ljmp
js
xchg
jns
mulb
jns
out
hlt
cmp
xchg
sbb
into
pop
int3
mov
mov
pop
sbb
jp
testb
xlat
cwtl
xchg
fwait
nop
cmp
in
out
lds
orl
jp
add
imul
lds
mov
scas
movsl
inc
xchg
mov
pop
add
xor
push
orb
fdiv
test
cmp
cwtl
loop
jno
je
jns
les
pop
aaa
mov
hlt
imul
and
or
mov
jl
mov
and
sbb
mov
or
popa
add
pop
and
mov
xor
imul
andl
jno
pop
aaa
popf
jae
inc
lds
bound
nop
xor
arpl
popf
push
popf
mov
inc
dec
pushf
shlb
pop
cld
scas
cmp
mov
rcrb
fcmove
popa
xchg
f2xm1
mov
shl
test
lret
bswap
mov
in
add
lret
xchg
aas
push
sbb
adc
and
mov
xor
test
pop
sahf
dec
mov
dec
jge
jo
inc
push
push
jge
and
cld
arpl
aaa
or
add
inc
sti
rcrl
cmp
push
les
shlb
ljmp
popf
pushl
dec
mov
fwait
push
jbe
inc
adc
pop
cmp
cld
add
jmp
cmp
inc
in
iret
xchg
jge
inc
ret
jbe
lods
out
gs
xchg
mov
xchg
jo
mov
jl
mov
ret
or
and
mov
aad
imul
dec
jbe
das
sub
pop
dec
inc
cmpsb
loop
xor
xor
sub
dec
ss
fcmovb
mov
fdiv
push
dec
rolb
cmp
cli
popf
or
mov
sbb
jbe
xor
push
cmp
test
cwtl
sbb
out
iret
mov
incl
xor
fdivr
out
push
out
push
stos
nop
push
adc
shrb
roll
int
out
imul
aas
inc
scas
subl
xchg
xor
cmp
pop
inc
jnp
leave
lds
repz
rcrl
push
nop
xor
out
add
mov
push
int
mov
mov
out
add
enter
push
sbb
xchg
adc
adc
jge
pop
fst
hlt
arpl
push
mov
icebp
sbbl
lea
sbb
cwtl
jg
cmc
and
or
mov
loopne
xlat
rcrb
sbbb
and
mov
dec
mov
stc
xor
out
loop
jecxz
pushf
and
stos
mov
les
repnz
mov
pop
in
and
xchg
or
shrl
sbb
fadds
sbb
decl
xor
iret
cmp
enter
sub
sbb
loope
lds
out
jp
dec
psubd
hlt
and
int
sti
outsl
ret
loope
sbb
cs
lods
xchg
mov
insb
fwait
cmpb
popf
mov
mov
pop
push
or
fdivrs
xchg
adc
push
fwait
jmp
rcrb
or
pushl
ret
jge
outsl
sub
xchg
ret
jbe
in
pop
add
push
dec
mov
inc
or
int3
xchg
sbb
sbb
hlt
cwtl
xor
std
push
pop
pushf
inc
ja
repz
add
jg
movsl
push
dec
divb
popa
cmc
jo
testb
push
je
sahf
mov
mov
jg
push
xor
pop
cmp
int3
leave
test
fsubrs
xorb
scas
add
icebp
mov
sbb
jb
cld
jg
aad
mov
dec
add
outsl
repnz
icebp
xchg
inc
sbb
test
data16
mov
ss
nop
sub
cltd
inc
div
aad
lcall
lock
mov
arpl
inc
add
nop
lahf
mov
push
cmc
fisubs
sbb
insb
scas
mov
mov
add
out
and
cld
or
sub
sub
lahf
aad
xor
pusha
adc
incl
es
cmpsb
jecxz
cmp
mov
pop
mov
es
icebp
popfw
les
aam
pop
pop
pushf
jnp
aam
sub
ss
or
push
inc
imul
gs
loope
inc
flds
push
or
ja
clc
mov
xor
inc
aam
mulb
mov
int
mov
cli
mov
jbe
test
call
mov
test
mov
xchg
inc
pop
imul
add
and
inc
mov
pop
push
adc
pusha
mov
je
fldcw
test
adc
fimull
outsl
and
or
sub
xchg
and
sub
mov
scas
pop
mov
cmpb
out
adc
cs
and
jns
call
cmpsb
mov
sbb
mov
lods
andl
fistps
push
jmp
aam
js
out
icebp
mov
dec
loop
clc
loopne
add
in
cmc
in
cmp
push
fmull
fwait
pop
ja
pop
or
movsl
cltd
pop
lods
adc
xor
add
lret
out
mov
subl
inc
fwait
xchg
push
test
sbb
mov
mov
sub
popf
loope
jnp
mov
leave
mov
std
xchg
pop
in
sti
idivb
jle
ret
adc
and
jle
add
shll
lahf
mov
psllq
xchg
jne
scas
cli
sti
push
adc
sbb
testl
add
mov
into
sbb
in
add
dec
mov
shr
leave
int
fiaddl
sub
into
mov
cmp
ret
push
clc
cmp
push
mov
jge
lea
mov
jno
jl
fcompl
sub
loope
fsts
rol
cwtl
jae
sbb
in
popa
xlat
int
cltd
pop
out
insb
inc
cmp
jp
lret
insl
insl
lods
scas
rclb
dec
mov
loope
jae
dec
jne
lods
movsb
pusha
data16
shll
xor
loopne
cmpsl
std
test
imul
setg
sbb
movsb
nop
stos
or
cltd
mov
push
repz
clc
addr16
adc
rol
inc
imul
pop
lods
fistpl
test
xchg
fisubrl
pop
imul
inc
xchg
xlat
loopne
stc
sarb
mov
stos
lret
mov
adcl
lds
es
add
push
daa
ss
bnd
aam
pushf
shl
dec
mov
or
out
push
ret
lds
add
sub
mov
adc
cmp
add
lods
mov
adc
out
shll
xor
fldl
dec
fdiv
mov
adc
stos
push
jge
adc
iret
mov
hlt
mov
aaa
sub
scas
pushf
pop
sbb
fnstcw
adc
mov
inc
sarl
push
aad
jne
mov
pusha
and
daa
mov
sub
out
dec
shll
rcl
and
xor
jp
aas
insl
stos
outsb
mov
mov
or
push
dec
sbb
lret
test
mov
fistps
xrelease
imul
js
xchg
cmc
ficomps
cmp
cld
gs
add
sub
jmp
ja
sbb
jno
sub
popf
pop
adc
mov
sub
mov
lahf
bound
cmp
cmp
out
loope
jb
jnp
mov
test
jnp
mov
pusha
inc
into
mov
int3
sub
jle
je
mov
loope
adc
jo
sub
stos
inc
mov
mov
cwtl
test
push
shll
in
scas
pusha
dec
cmp
jae
outsl
dec
rcl
mov
mov
insl
mov
daa
mov
push
pushl
out
test
xor
push
out
jno
sub
adc
iret
movsl
mov
orb
mov
add
dec
xchg
mov
and
sub
inc
mov
sti
push
das
mov
adc
mov
cmp
cmc
pop
dec
xchg
mov
push
adc
add
in
int3
ret
stos
fcomps
push
jmp
sbb
test
or
push
xor
lret
das
cltd
les
bound
xchg
mov
ret
push
lret
add
sti
rolb
mov
sub
enter
add
les
in
std
aas
jmp
jge
jns
pop
popa
in
push
shll
aam
sub
pop
js
sbb
xor
movsl
lret
rorb
lock
or
xor
cmp
and
mov
cmp
fdivs
or
bound
lea
movsl
adc
jno
inc
dec
mov
jns
fisttpl
push
push
mov
mov
push
insl
xchg
mov
mov
mov
dec
jmp
ret
jae
dec
cmp
xchg
lret
push
lods
pop
mov
mov
dec
loopne
test
xor
jae
jne
mov
add
xchg
cmpsb
repnz
add
sti
int3
ret
movsb
add
fnstsw
movsl
jmp
subb
adc
push
push
jecxz
fcoms
lods
scas
dec
mov
fcoml
out
sub
adc
hlt
fnstenv
rolb
nop
jp
adc
lahf
filds
inc
mov
mov
jle
dec
orl
adc
sub
pop
adc
in
fidivl
out
sbb
rcr
test
mov
cmp
mov
enter
test
jmp
pop
loopne
daa
xlat
movsb
pop
fdivrs
or
aaa
jmp
mov
int3
shrl
xor
push
sbb
adc
push
pop
or
test
mov
mov
into
push
push
inc
jno
repnz
int3
mov
ret
dec
gs
mov
cmpsb
sbb
sahf
xchg
ss
sbb
push
mov
xchg
push
std
cmp
add
inc
adc
movsb
arpl
cmp
add
inc
sub
xlat
rep
inc
mov
mov
loopne
aaa
xor
je
mov
pop
pop
sub
push
out
inc
jle
clc
mov
faddp
aas
xor
cmp
xor
imul
lea
xchg
frstor
jmp
push
mov
loope
into
adc
ret
xor
push
int3
mov
divb
push
lret
pand
pop
add
je
xchg
inc
addr16
lret
movsb
jl
pop
enter
out
sbb
xchg
test
orl
insb
cmp
jge
in
mov
push
movsb
push
movsl
push
push
inc
test
fs
minps
mov
xchg
mov
ss
in
je
test
mov
stos
jb
out
xor
push
fadd
scas
out
repnz
sub
cmp
lahf
mov
xor
ret
mov
push
xchg
and
test
xor
out
adc
mov
mov
std
in
cs
in
push
mov
xor
pop
cld
fcmovb
cmc
je
punpcklwd
inc
aaa
movsb
xchg
xchg
js
jg
pop
cmc
jnp
mov
ss
stos
and
popf
cmp
jb
cld
mov
and
enter
push
das
hlt
jnp
and
mov
lret
mov
pcmpgtw
mov
ret
aas
imul
ljmp
cwtl
mov
jb
mov
mov
fldenv
adc
adc
and
xlat
xor
push
jg
gs
adc
pop
bound
lods
or
mov
lods
jbe
or
or
jb
fcoml
mov
dec
mov
sbb
leave
stos
clc
scas
lods
loop
adc
pushf
fs
scas
adc
mov
ss
inc
pop
dec
xor
adcb
movsb
dec
test
mov
sub
push
mov
cmpsb
leave
pop
sub
test
mov
loopne
cltd
iret
cwtl
cltd
test
mov
lods
push
add
push
out
mov
jae
sub
sbb
sub
add
pop
jns
cmpsl
insb
jns
push
adcl
out
dec
popf
and
push
mov
subb
sbb
adc
out
lcall
mov
add
lods
push
sub
sbb
pop
stos
shrl
inc
lret
xor
ja
lods
nop
or
mov
fstpl
sub
pusha
adcb
mov
xchg
rcll
shll
ljmp
jge
ljmp
dec
mov
insb
frstor
int
sub
xchg
push
cmc
daa
mov
xchg
sub
push
cmpsl
std
mov
jmp
mov
fs
jo
inc
repz
dec
dec
daa
into
xor
aad
xor
dec
mov
ss
fdivl
sub
mov
adc
mov
mov
lods
mov
in
jg
popa
push
roll
outsl
mov
fidivrl
and
push
xchg
sbb
adc
or
mov
andl
ret
inc
mov
push
sub
mov
sub
sub
shlb
xchg
repnz
gs
call
cmp
mov
movsl
in
mov
pop
push
lock
sub
arpl
inc
hlt
mov
mov
mov
mov
and
adc
adc
sub
lock
add
nop
adc
imul
outsl
xchg
push
push
pop
push
jb
stos
push
test
sbb
cmp
or
incb
or
add
cmp
sti
sbb
push
dec
mov
testb
cltd
in
sub
adc
mul
in
out
std
js
fisttpl
out
xor
add
rcll
es
insl
in
mov
inc
and
rcrl
movsb
push
mov
scas
stc
fdivl
dec
popf
hlt
mov
push
xchg
and
data16
mov
iret
push
nop
pusha
adc
xlat
andb
add
fcompl
add
push
push
xchg
mov
xor
imul
add
jae
pop
pop
leave
add
or
adc
cmp
cmp
aaa
jmp
and
cmc
fdivrp
jns
dec
lret
lahf
fmuls
adc
adc
pushf
inc
cmpsl
fmulp
stos
sub
or
daa
je
mov
mov
mov
test
outsb
and
out
enter
loop
sbb
mov
xchg
lret
cmp
imul
out
sub
sub
lea
pushf
lock
popf
jb
xchg
add
rol
rorl
mov
cmp
sub
cmp
lock
and
mov
jp
ds
into
push
loope
test
mov
xchg
clc
shll
inc
mov
sbb
stos
repz
test
xor
ror
das
add
in
out
dec
add
mov
out
stos
push
fimuls
rcpps
jns
sbb
sbb
notb
xor
and
mov
mov
xchg
xchg
data16
bound
and
sti
mov
movsb
mov
jbe
and
xchg
lret
popf
mov
sub
pop
sub
les
pop
mov
mov
cmp
add
enter
out
mov
push
aad
je
daa
dec
jmp
xlat
mov
ret
sarb
out
dec
mov
jno
loop
xlat
iret
xorb
aad
xchg
or
and
xor
jge
sbb
repnz
xor
mov
in
xor
jl
jge
mov
mov
dec
leave
loop
cmp
or
push
push
pusha
mov
push
xchg
or
mov
push
sbb
sbb
xor
adc
outsl
mov
pop
bound
int
and
call
and
mov
push
cmp
into
mov
push
adc
mov
packuswb
test
in
lds
call
frstor
js
icebp
or
jge
xchg
scas
shrl
mov
scas
cld
xchg
and
stc
fistps
xor
dec
xchg
add
cmp
test
jb
test
orl
aaa
jne
push
fildl
ja
xchg
dec
xchg
and
out
fists
xchg
xor
fmul
pop
sbb
mov
mov
leave
sahf
cmp
and
dec
fsubrl
inc
mov
pop
js
push
mov
bound
shll
movsb
cmc
push
lds
pop
adcb
pop
add
xchg
ss
pop
clc
fldt
inc
dec
stos
out
hlt
ljmp
ja
std
add
cmp
xor
mov
jb
mov
ret
xchg
call
xchg
xor
fsubl
clc
stos
mov
jl
dec
jbe
out
out
std
adc
push
lods
mov
mov
repz
gs
jmp
push
sbb
pop
dec
mov
dec
out
and
cmp
ret
popf
nop
outsb
rolb
outsb
xchg
call
dec
or
sub
push
and
inc
mov
loope
push
adcb
stos
push
shrl
out
and
data16
scas
mov
add
jb
mov
mov
ds
pop
ret
jae
out
imul
rclb
push
jp
push
jae
dec
cmp
jmp
dec
ja
scas
push
xchg
xchg
movb
psubb
ds
rcrb
adc
mov
test
xchg
daa
fsubl
xor
out
pusha
sub
jb
pop
mov
inc
lret
inc
inc
fdivs
push
mov
xlat
cmpsb
stc
insb
cmp
mov
mov
aas
sarb
into
movsl
testl
leave
adc
adc
iret
mov
dec
loop
push
sbb
jl
rorl
inc
jg
nop
xlat
cmp
dec
cmp
mov
insb
pop
sub
jecxz
pop
cld
rol
ret
inc
push
jne
fldl
pop
and
sti
lret
jbe
lods
jno
addl
or
lods
sbb
or
stos
inc
jmp
adc
test
inc
stos
imul
cltd
aaa
cmpsb
scas
pop
mov
or
movsl
test
mov
mov
pop
test
daa
sbb
cld
mov
and
mov
shrl
repnz
stos
xchg
sti
mov
and
test
adc
push
mov
push
ror
xchg
mov
jnp
push
lret
pop
add
aas
or
xor
jae
orb
sbb
movsb
loopne
jo
shll
or
inc
sarb
sbbl
jmp
cmp
dec
fcmovnb
mov
and
jnp
mov
and
negl
mov
js
scas
inc
imul
nop
mov
sbb
pop
xchg
cmp
xor
out
adc
and
mov
inc
aas
cld
pushf
repz
dec
sahf
std
mov
fistps
cmpb
add
or
enter
cmp
adc
mov
cmpsl
add
jns
xchg
or
dec
push
fs
out
bound
jp
xor
and
sahf
push
rcl
dec
je
cmc
aas
and
test
add
lret
stc
outsb
xchg
adc
movsb
jg
jb
sub
push
lcall
cmc
push
and
or
pop
daa
cmp
add
push
jns
imul
sbb
add
mov
sub
in
mov
mov
sub
inc
sarb
mov
sbb
ficompl
int3
xchg
sbbb
add
mov
add
je
pop
into
icebp
js
bound
inc
test
dec
jecxz
or
rclb
test
repnz
mov
shll
sub
pop
and
js
lret
push
add
stos
jmp
in
cmc
sbb
out
fisubs
xchg
dec
imul
lods
fwait
sbb
mov
inc
adcb
loope
push
push
sub
dec
or
mov
cmp
fistps
sti
sub
out
inc
mov
in
xor
cmpsl
sbb
roll
mov
cld
inc
sbb
sub
mov
mov
aad
mov
aad
push
mov
popa
mov
out
out
xor
mov
pushw
int3
sub
shlb
xchg
ja
outsl
fstps
jg
lret
in
leave
frstor
test
insb
xchg
les
popf
vmovntpd
adc
and
inc
iret
dec
pop
add
xor
loop
mov
test
mov
jmp
add
mov
xor
pop
push
lret
insl
arpl
int
or
sbbl
jbe
aad
and
jle
popa
xchg
adc
jb
movsl
ss
iret
and
mov
scas
pop
iret
cmpsl
inc
jmp
sahf
fsubrl
sahf
js
xorl
inc
nop
rdpmc
sub
xchg
sbb
sti
stos
test
pushf
iret
jbe
jle
pop
das
jbe
stc
int
xchg
or
push
cmp
sbb
jmp
fstps
push
ljmp
repz
sarl
jp
lock
sti
mov
xor
cmp
movsb
push
popf
test
push
cltd
mov
data16
scas
adc
sahf
mov
mov
xor
fisubrs
dec
sub
cmp
mov
lock
data16
xor
leave
ds
pop
ror
mov
stos
sbb
fistps
push
shrb
rorb
dec
inc
rcrb
xchg
jge
aas
adc
sahf
test
pop
mov
mov
lcall
pop
xor
das
and
test
cltd
dec
mov
pop
cli
lcall
aad
cmp
xchg
dec
rolb
and
stos
xchg
pop
push
divb
orb
sub
sarl
test
in
lcall
adc
iret
imul
dec
in
xchg
jne
inc
es
jne
scas
mov
inc
mov
cs
loop
cmpsl
jmp
sahf
aas
ret
mov
sti
mov
int
jecxz
inc
xchg
jbe
outsl
mov
cmpsb
mov
xchg
pushf
fmuls
popa
lea
pop
xor
jnp
movsl
xchg
std
adc
mov
jno
and
ds
push
push
std
aam
jg
push
cwtl
and
mov
sti
lcall
ret
hlt
lods
sub
clc
mov
mov
push
push
popa
je
mov
sub
fisubs
xchg
jns
into
js
call
into
jle
or
sub
outsb
xor
cmp
cwtl
add
or
add
jle
pop
mov
xchg
in
in
stos
push
sti
xlat
dec
rorl
mov
or
stos
aaa
or
xchg
and
add
mov
mov
in
jl
pop
outsb
pop
notl
shll
mov
mov
repnz
pop
xchg
test
push
jns
call
xchg
mov
add
adc
push
fistps
jge
sub
div
adc
icebp
mov
xchg
icebp
mov
cmp
push
es
shrb
lret
inc
push
js
sub
lcall
mov
add
mov
jbe
and
hlt
outsb
clc
mov
rcl
andl
stos
push
jg
xchg
scas
out
cld
fwait
aad
ret
xchg
shlb
nop
negl
cltd
mov
fstps
jl
jp
sahf
outsl
ret
inc
mov
and
movsb
mov
or
mov
or
lds
roll
cwtl
sbb
pop
outsl
nop
in
fcmovnu
cmc
lods
sub
xor
aam
cmp
lret
push
call
mov
rcll
js
enter
test
pop
cmp
insb
mov
into
lock
jmp
sarb
and
or
pop
js
inc
jl
mov
loop
aad
sub
jnp
xor
repz
mov
add
int3
mov
push
sbb
xchg
and
mov
hlt
fnstenv
push
lods
jnp
mov
repz
xor
mov
cmp
or
jno
push
sub
sub
mov
call
push
or
dec
shrb
pop
push
test
inc
stc
rcll
fs
xor
cmpl
add
jbe
and
js
sbb
jns
hlt
push
inc
xchg
sub
push
or
arpl
scas
jbe
and
jne
push
out
faddl
test
jb
insb
adc
push
and
mov
test
bound
xchg
mov
int3
push
nop
inc
loope
pop
into
les
dec
xor
and
mov
push
arpl
cli
inc
js
aas
mov
jmp
mov
outsl
and
insl
lea
inc
popaw
mov
into
sbb
mov
in
faddl
mov
std
out
roll
sub
pop
xrelease
clc
xchg
push
cmpsb
sub
je
test
jbe
sbb
jmp
inc
roll
aas
aas
and
lcall
fstps
lahf
in
arpl
and
lds
mov
fistpl
fs
imul
inc
scas
faddl
xor
pop
add
dec
es
cmc
fld
and
sub
pusha
sub
add
add
sub
enter
or
cs
loope
fwait
jb
incl
and
cmc
testl
push
cs
in
inc
test
notb
and
dec
cmp
or
or
xchg
fisttps
adc
sub
pop
push
stc
lods
test
dec
mov
movsb
mov
cmpsl
das
mov
or
mov
add
mov
lods
fidivl
imul
or
rcrl
out
mov
insl
sbb
je
loopne
out
inc
mov
bound
jp
cmpsl
jg
and
outsb
sub
cmp
fidivs
push
pop
fwait
or
push
dec
test
sub
inc
out
data16
dec
sti
aas
shl
xchg
pop
jns
push
std
push
in
out
cmp
shll
xor
sbb
imul
into
cmc
add
in
lods
cmpsl
ret
sbb
inc
lahf
inc
fisubl
pop
sub
xor
jg
rolb
rcll
in
in
inc
push
testl
sub
imull
cmpsl
sbb
addr16
fldpi
lock
inc
pop
jp
add
inc
lcall
sub
testl
xor
fistpl
jno
jmp
rorl
adc
test
test
pusha
mov
dec
nop
out
xor
dec
mov
adc
nop
xor
cmp
call
aaa
jno
or
addr16
adcl
data16
push
and
sub
rcrb
pop
je
test
flds
add
or
jle
fadd
xor
stc
dec
mov
sub
leave
cwtl
pop
loope
addl
mov
adc
pop
and
add
lcall
icebp
jo
adc
aad
xor
sahf
xchg
outsl
outsb
mov
sbbl
xlat
cmp
lret
adc
mov
push
repz
je
ss
mov
fsub
cmp
mov
cmp
into
push
fwait
sahf
jnp
ss
or
xchg
mov
pop
loopne
jno
out
clc
test
and
pop
lods
test
mov
addb
es
fcompl
out
or
flds
cmpb
add
mov
sub
ja
add
xchg
xchg
sarl
clc
inc
add
sti
xor
out
int
push
std
ret
push
gs
xor
push
lcall
and
lock
imul
stos
sti
mov
stos
jb
or
leave
sar
inc
out
ljmp
test
call
push
jno
push
sub
inc
mov
pop
mov
imul
sahf
dec
mov
stos
fmuls
xchg
int
sub
push
loopne
jmp
jp
daa
inc
nop
jmp
push
ret
ja
add
shrl
movsl
sub
cs
xor
or
push
inc
mov
xchg
outsb
xchg
call
mov
lds
push
and
ss
movsl
mov
sbb
jo
and
lods
lahf
scas
fwait
dec
imul
push
ss
pusha
pop
push
xchg
lock
mov
pop
je
lret
fiadds
shrl
cmpsb
mov
jns
adc
fucomi
pop
test
cmc
push
push
mov
std
unpcklps
ds
mov
ret
daa
mov
stos
idivl
xor
insl
in
sbb
or
ljmp
cmp
mov
orb
dec
cmp
jno
sbb
scas
andl
ret
sub
shll
mov
xor
mov
cltd
in
push
in
daa
or
lods
stos
popf
xchg
daa
mov
das
cmp
mov
jae
subl
dec
movsb
push
dec
xchg
fisttpl
pop
jl
jb
add
rolb
js
pusha
or
in
pop
cwtl
pop
cwtl
pop
fst
jne
pop
push
jb
test
mov
sub
nop
gs
outsl
lahf
out
test
inc
int3
arpl
or
pushf
or
les
ljmp
addr16
fwait
push
dec
pop
ja
cmp
subb
sahf
imul
lods
add
inc
mov
js
add
bound
fwait
jns
pop
lahf
sbb
leave
cmc
sbb
call
aam
cmp
imulb
lret
jecxz
mov
xor
stos
imul
mov
fisttpll
push
xchg
in
lcall
int
push
loop
sbb
cmpsb
js
xchg
lds
pop
fwait
gs
mov
sub
mov
arpl
pop
mov
push
push
fwait
push
pop
inc
adc
outsl
stc
and
in
push
jbe
scas
pop
ds
add
mov
data16
fidivrl
outsb
add
or
repnz
mov
dec
sbb
data16
pop
fwait
pop
mov
sbb
mov
and
incb
nop
add
jmp
outsb
cmpb
lods
test
sahf
jno
mov
adc
jle
xlat
test
dec
loope
imul
in
jbe
push
je
inc
dec
lcall
stos
xchg
add
movsl
sbb
cmp
ds
or
repnz
in
cmp
addr16
add
inc
imul
or
mov
inc
cmpsb
sub
sbb
lds
dec
pop
jb
ds
js
cwtl
sbb
sub
es
fwait
popf
jns
mov
or
cmp
inc
xchg
push
pop
cmp
imul
adcl
push
ret
loopne
mov
mov
bound
xor
push
push
mov
push
ljmp
sbb
in
hlt
xchg
rolb
jmp
movsl
pop
mov
rcl
mov
jmp
adc
pop
or
push
or
subb
ja
or
sbb
nop
or
cld
inc
dec
sbb
stc
pusha
mov
sbb
push
out
sub
sbb
sub
push
out
das
daa
mov
jle
lods
xlat
push
inc
fiaddl
pusha
lea
xchg
cmp
add
sarl
cli
loop
xchg
not
shrl
push
subl
pop
or
int3
and
fdivl
sub
in
imul
xchg
push
orb
dec
xchg
push
adc
jo
mov
cmp
in
incb
sbb
or
jecxz,pt
or
xchg
pop
adc
ss
jnp
sub
push
sub
test
fistl
jae
push
sub
sbb
sbb
imul
mov
movsb
in
pop
mov
sbb
movsb
in
lods
rolb
cmpsb
rol
pop
cmp
or
aas
pop
xorps
and
rcll
fidivrs
out
in
pop
ret
cmp
in
mov
rolb
nop
xchg
xchg
push
dec
test
aas
lret
mov
and
outsb
push
int
mov
out
mov
adc
cmpsb
push
scas
inc
jmp
outsb
pop
mov
inc
notb
test
fwait
dec
pop
test
fwait
ljmp
push
mov
shr
xchg
dec
mov
arpl
aas
push
inc
jg
test
adc
out
ffreep
lods
je
andb
js
frstor
mov
pop
ss
cld
and
cmp
mov
xchg
sub
jbe
lret
fbld
adc
loopne
mov
jno
mov
xchg
cmp
mov
negb
push
mov
mov
int
fwait
addb
aas
dec
repz
aad
jns
dec
pop
rorl
xor
sbb
push
xor
push
pop
pop
push
arpl
push
sbb
insb
or
pop
inc
lret
push
test
repz
mov
data16
rcrl
out
jne
xor
fbstp
loop
lods
mov
push
stos
fs
cwtl
mov
push
mov
sahf
bound
scas
mov
mov
mov
popf
inc
mov
lods
cli
pop
xor
xor
fistpl
or
insb
xlat
mov
pop
inc
sbb
xchg
lods
jg
out
aam
add
and
xchg
addl
sahf
xchg
mov
or
shl
lock
sub
mov
mov
std
iret
ds
in
nop
leave
add
divl
jp
jg
dec
test
push
cmp
cmp
stc
lcall
dec
lods
inc
cmpsb
fsubp
fidivs
inc
sub
scas
dec
or
sarl
in
leave
sbb
fs
sbb
dec
in
push
mov
imul
xchg
or
cmp
xor
pop
out
pop
adcb
dec
mov
push
xchg
or
rcrl
clc
pop
jp
mov
in
sti
into
fistpl
adc
cli
and
mov
outsb
sbb
je
mov
sbb
cmp
insb
sub
out
dec
pop
cmp
jl
dec
ja
xor
jg
test
pop
push
das
cmp
cmp
sbb
scas
lahf
hlt
test
lahf
inc
lea
add
xor
fiadds
mov
repnz
cld
sbb
sub
nop
fstl
dec
imul
adc
sub
jmp
xor
fs
fnstsw
adc
stc
jo
jmp
cmpsb
inc
ja
xor
inc
stc
out
push
lret
bound
push
nop
outsb
lock
adcb
push
xor
pushf
sub
jmp
jb
pop
xor
test
mov
xchg
cmp
xor
or
mov
mov
andl
adc
fwait
test
push
ss
push
xchg
scas
and
inc
dec
lods
sti
loope
jmp
repnz
sarl
inc
cwtl
lret
lea
push
fwait
cltd
xchg
repz
les
add
stos
mov
mov
sbb
das
sahf
rcrb
in
push
les
and
aam
sbbl
adc
xchg
insb
sbb
inc
mov
xchg
addr16
lret
push
bound
adc
outsl
sub
push
xchg
mov
sbb
adc
add
inc
inc
subb
adc
push
xchg
pop
ficoml
idiv
and
push
rcrl
jmp
int3
popa
jp
lods
arpl
add
xor
out
mov
subb
loopne
int
add
dec
xor
jno
push
xlat
jne
xchg
lock
mov
iret
int3
test
xorl
jecxz
push
ljmp
icebp
and
cs
xlat
clc
dec
mov
fst
sahf
xchg
push
mov
sub
mov
pop
or
push
sti
xorl
jge
lods
test
inc
je
xor
pusha
loopne
adc
dec
cmp
es
lods
das
sbb
pop
idiv
mov
mov
xchg
shll
test
mov
jmp
clc
andl
leave
idivl
mov
js
ja
in
sbb
pop
fisubrs
mov
notb
call
loope
add
or
sbb
sub
jmp
std
sbb
xor
jb
out
rolb
fisubrl
sbb
in
dec
insl
leave
sub
adc
andb
enter
mov
jmp
das
mov
push
fucomp
rol
loop
pop
cs
xchg
jns
loope
xchg
leave
mov
cmpsb
jmp
hlt
loopne
adc
shrb
lods
jmp
mov
pop
fildl
add
xchg
inc
lcall
and
adc
lods
out
or
ja
dec
mull
les
jp
stos
ds
push
test
js
sub
sar
dec
and
inc
jecxz
fldt
xchg
test
das
mov
jae
test
mov
out
jnp
popf
gs
jbe
dec
sti
xchg
rol
icebp
bswap
rclb
cltd
popf
dec
in
into
mov
popf
aad
es
cmpsb
mov
mov
add
inc
mov
mov
inc
aam
roll
adc
pop
sub
aaa
out
es
scas
add
inc
ljmp
mov
and
ret
ja
outsl
xor
add
imul
pop
jnp
stc
xor
sahf
mov
ret
nop
add
and
dec
iret
test
mov
out
jecxz
xchg
adc
push
cli
ret
mov
cmp
cmpsb
jle
push
test
xchg
pop
jae
ret
nop
sub
cs
mov
xor
push
inc
cmp
mov
cmp
movsl
sub
fstps
inc
aam
mov
cmpsl
pop
mov
adc
in
push
dec
pop
nop
inc
cmp
ljmp
jns
inc
xchg
int
mov
xor
cmp
clc
xlat
lods
fs
add
add
cmp
jle
push
jo
pushf
jmp
arpl
aam
pushf
in
lret
pop
add
hlt
and
daa
dec
pop
mov
add
pop
and
sarb
mov
js
push
test
push
pop
stos
fidivl
jb
push
xor
sahf
pop
enter
ja
jg
push
mov
stos
lahf
into
jb
and
sub
rcrb
arpl
sbb
mov
and
movsb
jnp
pop
xchg
das
and
mov
mov
xchg
hlt
popa
aaa
cmp
and
or
iret
or
sub
adc
xchg
sub
inc
aam
insl
dec
or
jbe
popa
rcr
pop
aas
mov
movsb
pop
das
in
inc
lcall
insl
stos
gs
jae
cltd
ret
imul
and
adc
fisttps
fs
mov
cmc
int
ror
in
jae
sbb
mov
aam
xchg
inc
mov
lahf
nop
dec
jg
ud0
add
cltd
xchg
pop
add
mov
inc
jmp
sbb
and
je
in
mov
call
adc
jne
sbb
out
sbb
out
mov
adc
adcl
jmp
xor
adc
push
mov
dec
and
push
xchg
bound
mov
jb
push
insb
jp
adc
and
in
out
add
mov
dec
mov
mov
into
or
in
shrb
mov
jecxz
pop
inc
dec
xor
outsb
or
ja
mov
push
rcrl
icebp
add
decl
lcall
mov
aad
push
out
out
add
rcrl
xchg
test
rcl
lret
xchg
pop
push
cmp
ficoms
mov
cmc
aas
adcl
movsb
cwtl
std
popa
pop
push
test
mov
clc
cmp
aam
out
xchg
inc
ficoml
fistpll
inc
rclb
or
mov
pop
pop
das
stos
mov
fmuls
popa
mov
jmp
cmp
mov
in
and
add
cmp
dec
xchg
pop
insl
sbb
lods
cmp
pop
inc
pop
cmp
and
repnz
in
repz
stc
push
cmp
jecxz
sub
nop
jo
fcmovnbe
xor
repnz
inc
daa
dec
xchg
dec
add
sub
lods
adc
cmp
push
or
mov
push
push
rcrb
js
icebp
aam
mov
pop
inc
push
cmp
pop
mov
fs
xchg
cmpsl
push
cld
testl
repz
js
xchg
es
dec
mov
or
push
scas
pop
jns
stc
xor
insb
ficoml
dec
lret
sbb
pop
cmpb
push
xchg
push
add
push
ljmp
and
ljmp
out
leave
lods
sub
rcll
aam
mov
std
addr16
scas
mov
adc
sub
out
into
lcall
pop
jno
cltd
aam
xchg
pusha
call
lods
push
vfmadd231ss
adc
mov
pop
mov
mov
pop
adc
adc
in
out
adc
test
je
and
lahf
mov
pop
stos
loope
pop
mov
cli
popa
mov
pop
cld
lds
mov
inc
and
cmp
outsb
fcmove
xchg
dec
jge
sbb
ret
mov
jmp
jg
insl
cmp
iret
jae
or
ljmp
test
jbe
sub
add
sbb
imul
pop
mov
nop
mov
aam
out
mov
inc
cmpsb
cmc
in
and
adc
push
xor
xchg
cwtl
cmp
cli
jb
aaa
sbb
stos
repz
mov
fs
adc
mov
sbb
adc
cmpsl
in
fstpl
xor
xor
mov
out
mov
pop
nop
cmp
mov
or
fsts
lret
mov
dec
aam
scas
push
push
ds
rorb
pop
pop
sbb
jecxz
loope
inc
f2xm1
lret
cld
mov
sub
stos
fsubrs
xor
orb
cli
sub
xlat
xor
and
stos
faddl
fxch
pop
and
dec
sbb
add
idivl
loopne
rcll
sbb
or
jecxz
arpl
lret
xchg
clc
stos
cmp
enter
push
xor
shrl
push
dec
repnz
ret
xorl
out
mov
movsl
xor
jnp
and
or
in
pusha
imul
adc
jmp
mov
cli
add
xor
shll
sbb
mov
dec
add
pushf
lods
insl
addb
ds
dec
dec
mov
push
fmull
es
shrb
and
ds
push
cmp
cli
sti
les
in
add
adc
sbb
outsl
and
in
je
mov
mov
testl
dec
es
jb
xchg
push
movsb
push
sub
xchg
outsb
stc
fwait
mov
bound
mov
stc
mov
jo
test
sub
and
inc
or
push
mulb
pop
imul
dec
push
jl
inc
ret
mov
addr16
test
cmp
in
jne
jnp
in
in
mov
cmp
loop
mov
sub
fmul
sbb
sub
outsb
mov
pop
sbbb
std
jecxz
jbe
xor
lock
xor
sub
dec
sti
pushf
sub
imul
xorl
mov
sti
jne
inc
rorl
inc
or
inc
push
add
stos
jecxz
test
cli
les
nop
xchg
test
push
jno
shrl
ljmp
inc
mov
subb
cli
push
inc
inc
andl
lods
sti
adc
cmp
push
jp
jl
adc
rcl
add
jge
inc
cli
out
fdiv
adc
bound
test
sti
mov
loop
and
mov
cmc
fs
rorb
bound
sub
pop
cmpsl
outsb
xchg
and
pushf
jecxz
jecxz
je
xchg
pop
jle
adc
divl
push
cmp
or
out
pop
out
mov
xchg
sub
dec
into
mov
add
outsb
cmc
pop
loope
jl
xchg
or
cmp
test
scas
mov
xor
enter
in
mov
sbb
enter
rol
jecxz
bound
mov
lock
add
mov
jmp
pop
sahf
loop
fsubrl
or
pop
push
cwtl
ficoml
mov
repnz
js
cmp
push
and
cltd
lock
adc
pop
icebp
cmp
fwait
and
test
bound
in
sbb
fisubrl
dec
mov
cld
lret
xchg
iret
in
xchg
pop
xchg
sub
loop
pusha
cli
repz
outsl
pop
sub
in
xchg
pop
add
lcall
icebp
or
pop
jp
push
xchg
xor
lret
les
push
cmp
ret
lea
sbb
out
sbb
dec
arpl
aad
mov
cmc
es
sahf
loope
imul
orl
fwait
mov
lods
test
sti
gs
popa
imul
popa
push
push
cmp
jo
jl
sar
mov
out
je
rclb
xor
out
mov
push
xor
adc
jae
push
loope
fwait
movsl
sbb
add
mov
dec
fs
jg
data16
mov
inc
push
fnsave
mov
ljmp
imulb
fndisi(8087
out
inc
cmpsb
test
shll
insl
lret
insb
or
fdivr
mov
mov
xor
outsb
or
inc
rcrl
repz
mov
fsubr
data16
push
xchg
testl
pop
pop
cmpsl
xor
cmp
push
testl
xchg
push
xchg
out
fldcw
test
lahf
jb
repnz
cltd
ljmp
js
pop
dec
xchg
aaa
std
push
xchg
xchg
or
fisttpll
pop
loopne
loope
mov
js
js
std
cltd
lret
xchg
jp
fcompp
sbb
jne
dec
pushf
cmc
xchg
fnstcw
mov
push
mov
cmp
xchg
ljmp
inc
cmp
cmc
loopne
dec
sbb
and
in
jae
jae
dec
cmpsl
js
adc
popf
fnsave
test
add
cmp
daa
jecxz
jl
lods
dec
shlb
stos
xchg
mov
mov
out
imul
adc
sub
loop
push
test
fs
sbb
dec
push
add
cmpsb
loop
loope
xlat
pop
mov
inc
add
mov
jbe
mov
mov
inc
test
xchg
cmpl
je
iret
push
sbb
xchg
sbb
pop
jnp
xchg
stos
mov
hlt
outsl
pop
pop
jle
mov
or
mov
xor
xor
sub
jne
jne
dec
lea
inc
sub
out
or
dec
mov
xor
fldlg2
shrb
scas
add
xchg
push
push
sti
and
repnz
mov
lcall
loope
stc
push
push
das
push
push
push
add
inc
jae
insl
adc
scas
les
es
sbb
cmp
cmp
jecxz
mov
inc
push
dec
test
inc
jae
xor
insw
add
mov
push
or
push
in
xchg
out
test
jne
mov
rclb
jns
xor
adc
aam
inc
loope
int
pop
bound
movsb
mov
pushf
xchg
fbld
pop
xor
jl
pop
insb
mov
out
push
or
jo
sbb
and
rorb
push
fisttps
mov
add
in
mov
xchg
push
testl
mov
push
test
sub
cltd
ret
cmpsb
jns
ja
stos
outsl
and
inc
add
rcll
push
jmp
lods
add
pop
add
xor
jb
addr16
insb
test
dec
xchg
je
inc
outsb
sbb
xchg
test
fldl
jecxz
out
aaa
cli
imul
jo
sbb
ljmp
jg
rorl
xor
push
int
scas
inc
test
inc
adc
iret
push
push
dec
xchg
push
sti
dec
repz
lods
pop
arpl
daa
js
pop
mov
mov
andb
test
bswap
adcb
xchg
add
xor
rorb
cmp
jb
enter
mov
sbb
pop
gs
cmc
insl
jns
push
lret
pop
daa
xor
sub
sarb
repz
test
push
roll
andb
or
adc
movsl
and
sbb
lods
mov
iret
sbb
inc
jg
and
cwtl
icebp
dec
hlt
push
loopne
dec
data16
jbe
jo
fidivl
jnp
test
dec
adc
fwait
pop
xchg
lret
add
pusha
cmc
mov
or
or
pop
mov
mov
add
repz
adc
mov
jg
fidivl
mov
or
sub
push
pop
les
dec
inc
nop
mov
mov
cmc
sbb
test
insl
dec
js
imul
mov
cli
jbe
sarl
mov
fnsave
add
push
cmp
imul
jo
and
pop
inc
inc
jmp
xchg
push
jle
sti
xor
mov
into
or
js
sbb
xor
ret
pushf
or
mov
shll
xchg
test
lods
pop
adcb
pop
adc
test
push
imull
cmpsb
cmpsb
imul
std
mov
repnz
daa
fstl
in
sub
stos
leave
inc
or
lods
leave
xchg
dec
mov
mov
adc
cmpb
loope
sahf
aam
scas
mov
imul
dec
cli
sub
fwait
adc
push
dec
aas
pop
dec
jne
or
mov
out
popa
jb
daa
xor
mov
push
jmp
push
mov
xchg
or
je
cltd
lret
jae
dec
mov
pop
jbe
xlat
lds
out
jae,pn
imul
xchg
lea
movsl
inc
pop
inc
pop
and
pop
in
sarb
lods
mov
inc
in
es
dec
or
jp
outsb
adcl
xchg
cltd
mov
in
aas
sti
inc
mov
in
cmp
add
jge
mov
int3
add
sbb
xorl
cmp
mov
dec
subps
mov
lcall
push
shll
jp
dec
xor
xor
xchg
mov
mov
popf
push
icebp
adc
ficomps
push
aas
push
cmc
jnp
movsb
ret
jmp
lods
out
adc
popa
imul
dec
xor
add
fcmove
lea
inc
dec
in
adc
mov
repnz
jecxz
push
repnz
push
insl
adc
cmp
jae
push
pushf
xchg
inc
sub
sbb
dec
pop
jae
cld
sbb
dec
fdivr
std
dec
popa
negb
fs
push
shl
imul
adc
mov
icebp
mov
insl
or
lret
insb
cmp
and
pop
cwtl
in
data16
int
std
testb
mov
sbb
movsb
lret
fisttpll
sbb
add
sbb
pop
idivb
xor
out
in
icebp
std
add
repz
movsl
push
stc
pop
adc
inc
push
clc
mov
jp
movsl
mov
jns
popa
imul
mov
cmp
sub
or
push
sub
mov
test
dec
ds
imul
lret
jmp
add
mov
pop
add
outsl
xchg
pop
in
clc
dec
je
sub
out
ret
sbb
arpl
nop
and
movsl
orb
jne
pop
add
cli
sub
xchg
xchg
xor
stos
test
jne
jmp
mov
mov
dec
inc
mov
mov
adc
inc
pop
pop
xchg
dec
das
inc
pushf
test
pop
rcrl
rcrl
mov
push
fimuls
cmp
and
je
cs
out
fbstp
xchg
gs
mov
test
dec
iret
add
mov
cmp
sub
mov
ljmp
repnz
testb
mov
dec
ja
testb
or
jb
jnp
sarl
mov
lret
lea
jns
hlt
pop
lret
inc
ja
lret
inc
lcall
cs
lods
cmpsl
rorb
cli
addr16
jmp
imul
xorb
pusha
xor
cmp
push
cltd
and
or
pop
mov
mov
inc
inc
stos
cli
and
jne
adc
cmp
in
mov
lcall
adc
fdivs
gs
pop
fists
mov
scas
pop
dec
test
sub
incb
dec
jp
ljmp
and
daa
pop
dec
nop
mov
adc
and
in
lcall
xor
cmc
pop
loopne
iret
fidivs
sub
ror
mov
add
shl
dec
mov
cmpb
mov
jp
xor
adc
ljmp
mov
stos
push
scas
test
cmp
cmpsb
inc
lods
fldenv
xor
or
dec
mov
es
repz
dec
sbb
cmp
dec
imul
fnsave
inc
sub
mov
rcl
push
jp
sub
pop
lahf
fwait
inc
xlat
es
sbb
cs
sti
mov
and
mov
push
cmpsb
pop
push
and
fbstp
lds
sbb
inc
outsb
xor
push
lods
aam
push
ret
push
stos
movsb
cli
lret
mov
cmp
or
jbe
mov
jns
cs
in
std
mov
mov
hlt
xor
rcr
ljmp
push
push
imul
shr
or
adc
rcl
mov
loope
mov
in
or
or
data16
jmp
fwait
popa
repz
aam
dec
sub
test
cli
mov
fs
mov
std
repz
jns
pop
jb
jp
cmp
or
push
mov
add
fsubrs
std
pop
out
push
jbe
gs
add
movsl
fdiv
testb
xchg
lret
push
cmp
or
clc
cmpsb
lock
push
inc
popf
test
dec
pop
or
jae,pt
push
sbb
imul
sbb
aaa
sub
xor
mov
ja
int3
nop
jmp
test
cmpb
out
aaa
cmpsl
xor
push
cltd
cmpsl
in
roll
into
enter
call
fwait
cmp
dec
xor
jg
pop
scas
jl
out
inc
jo
in
jg
aaa
and
xchg
xchg
leave
mov
aaa
int3
sti
in
lahf
aaa
movsl
ficomps
fistps
les
push
xor
sti
orl
negb
or
testl
inc
lahf
std
leave
adcb
xchg
inc
js
or
mov
cmp
add
enter
or
push
pusha
xor
fcomps
xor
pop
hlt
push
dec
pop
imulb
inc
pop
mov
fcmovnbe
pop
push
ret
mov
and
adc
cmpb
testl
es
insl
movsb
fisubl
jno
lods
mov
cld
fbstp
jl
dec
int
pop
cli
jo
add
subb
push
mov
jb
xchg
and
pop
jle
rcl
push
bound
adc
mov
in
xlat
push
sbb
fs
pop
mov
jp
stos
outsl
rcr
push
and
mov
mov
into
sub
push
loop
push
ret
repz
ss
shlb
add
xorl
jmp
jnp
sbb
out
aam
test
push
das
dec
stc
rorl
das
inc
subl
aam
adc
lret
cmpsb
hlt
mov
adc
enter
aaa
mov
mov
test
out
sahf
push
scas
out
dec
fnop
add
adcl
mov
push
mov
pop
lods
int3
imul
mov
fs
aas
out
mov
iret
jae
out
scas
push
scas
mov
arpl
jb
push
testl
ja
mov
aaa
push
jge
movl
and
or
jmp
dec
push
fucomp
movsb
popf
pop
rcl
pop
mov
mov
lock
cmpsl
mov
ret
push
add
popf
xchg
xchg
mov
loopne
ret
subb
std
in
xchg
cli
setne
mov
and
test
push
lea
out
fistpl
int
insb
popf
ret
aaa
repnz
cli
cmpsl
je
dec
mov
or
dec
mov
dec
mov
repnz
xor
mov
loopne
out
mov
popa
push
in
pop
in
mov
jle
cmp
es
cmp
into
mov
dec
fstl
ret
imul
clc
fwait
stc
jb
out
push
pop
lret
xchg
jbe
adc
mov
push
mov
jecxz
mov
lods
rol
mov
frstor
mov
inc
cmp
es
pop
mov
int3
xchg
add
xor
or
div
mov
loope
int3
mov
test
sti
mov
jns
es
aad
pop
cmpsl
js
rolb
jp
outsl
out
iret
int
sbb
cmpsb
imul
mov
mov
sbb
pop
sub
ja
sub
icebp
add
dec
inc
adc
xchg
add
jecxz
xlat
adc
daa
inc
or
test
adc
mov
push
pop
mov
lds
xlat
xlat
xlat
into
jb
inc
push
lock
test
adc
cmp
das
mov
in
hlt
jge
xlat
pushf
sub
pop
or
int
xor
mov
xlat
push
mov
arpl
test
int3
and
out
mov
or
loopne
sub
out
and
cmp
push
int
sbb
lock
pop
clc
andb
je
int
and
stos
lods
stos
cmp
push
jmp
adc
in
out
dec
lcall
ljmp
inc
or
nop
add
sahf
insl
mov
inc
xchg
inc
or
aad
push
sahf
or
cmp
ret
sbb
je
push
mov
push
mov
push
outsl
popf
bound
push
in
dec
stc
dec
shll
dec
pop
fsubs
outsb
and
jns
and
inc
lods
mov
fcmovbe
jnp
popf
cmp
pop
xchg
and
dec
and
push
sbb
xor
outsb
stos
je
pushf
jge
imul
cmp
xor
lock
xor
mov
hlt
test
lds
or
inc
shlb
cld
repz
cmpsb
lcall
loop
mov
sbb
in
data16
dec
mov
rorb
fcoml
orl
cmpsl
popf
push
xchg
xchg
stos
aas
and
jnp
test
adc
xlat
adc
jge
loop
gs
adc
mov
mov
popf
dec
mov
faddl
inc
je
pop
add
outsb
in
push
adc
xor
ss
dec
xor
push
jae
mov
or
pop
pop
cmp
gs
or
lock
xchg
dec
and
scas
and
sub
adc
pop
cld
lea
and
mov
mov
aam
cmp
inc
xor
jns
les
sub
mov
int3
ljmp
mov
js
sahf
mov
arpl
push
shrl
mov
out
pushf
lods
mov
cmpsl
das
stc
mov
stos
bound
sbb
std
jmp
into
pop
inc
dec
out
push
or
sub
adc
mov
push
fldcw
ja
sbb
and
loope
mov
sbb
adc
sahf
dec
sbb
dec
cmp
imul
iret
add
stos
jnp
mov
fwait
pusha
shll
inc
xor
push
xor
cli
add
add
jmp
lahf
sub
cmpsb
jg
sbb
ds
int3
jecxz
add
mov
pushf
push
add
mov
in
dec
bound
fbld
arpl
pop
movsb
jns
fcompl
addr16
call
xchg
cltd
addr16
cs
daa
rcrl
inc
cmp
rcl
inc
lea
jp
push
pusha
sub
dec
jl
divb
mov
int
cmc
movsl
push
repnz
out
test
mov
mov
mov
mov
ljmp
fs
add
dec
in
sti
clc
aad
add
into
sbbb
in
mov
mov
adcb
push
pop
and
rorb
sub
lcall
sbb
or
jo
adc
add
sbb
repz
lea
aas
xchg
sub
icebp
and
orb
xlat
pop
sahf
add
xor
cmp
xchg
jecxz
mov
add
add
inc
pop
pop
test
loope
mov
or
pop
dec
push
or
xchg
mov
sbb
cmpsl
lods
es
insl
bound
dec
sarb
stc
gs
and
cwtl
cld
cmp
shr
and
push
dec
cmp
data16
and
jb
lods
mov
imul
stos
add
sub
rol
inc
repnz
stos
push
out
lcall
jl
inc
in
loop
cmp
pop
fbld
adc
pop
cld
jecxz
inc
sub
sub
dec
popf
xor
xor
sbb
or
xchg
inc
mov
cmp
dec
ret
bnd
mov
shlb
addl
fs
arpl
insb
and
mov
enter
xchg
ja
and
lcall
fsubp
fadds
loop
fisttps
xchg
mov
sub
jecxz
int3
je
add
popf
mov
xchg
shll
pop
xor
hlt
or
fisubl
mov
fsubs
scas
mov
mov
cmp
mov
subl
xchg
inc
push
add
jno
mov
scas
fwait
mov
leave
jb
pop
jo
push
jg
mov
repnz
mov
in
jnp
movsb
mov
iret
jae
pop
insl
in
jle
sbb
scas
nop
push
jb
mov
scas
add
pop
insb
in
stc
lods
push
pop
mov
dec
push
adc
cs
call
xchg
pushf
xchg
cwtl
push
por
ret
jmp
out
loop
jns
loopne
in
mov
dec
pop
addr16
adc
add
pop
jmp
fs
rorb
add
sti
mov
out
jp
adc
mov
aam
testb
ret
and
jl
pop
jp
lcall
and
xor
xchg
lahf
cmp
call
fwait
xchg
pushf
cs
pop
mov
sub
xor
pop
jo
pop
pop
or
and
mov
adc
dec
int3
push
push
push
xchg
int3
lret
enter
sbb
pop
mov
mov
cmp
arpl
sti
nop
jbe
pop
and
cmp
stos
rorb
leave
cmpsl
mov
test
imul
push
mov
outsb
lcall
movsb
or
push
in
push
outsl
std
fsub
push
cmp
std
pop
push
jp
dec
aam
out
cld
mov
fs
sub
mov
pop
stos
ds
xor
cmpb
or
popf
jle
ficomps
push
shrl
mov
cmpsl
push
xlat
mov
mov
cmp
jle
xlat
cli
ss
hlt
add
xor
inc
mov
mov
ja
pop
fnop
sbb
imul
cmpsl
mov
push
aad
mov
fisubs
and
lret
push
cld
mov
xor
dec
push
pop
and
rorb
cmp
ret
aad
pop
fisttps
adc
and
loop
fistpll
push
cmp
push
jb
and
sub
xchg
out
mov
jne
lods
lods
jmp
pop
out
xor
repz
push
scas
js
cmpsb
xchg
aaa
sbb
lret
test
inc
mov
xor
jecxz
std
push
mov
cmp
lahf
fsubl
push
pop
xchg
pop
loop
inc
in
fsubrs
jmp
mov
sub
push
xchg
mov
lods
mov
testb
adc
pop
dec
iret
mov
inc
mov
pop
add
or
cmp
mov
stc
jl
pusha
shl
jmp
ret
mov
negb
jecxz
pop
lret
mov
cwtl
out
push
sbb
pop
add
xchg
fwait
mov
int
dec
fwait
lahf
and
ret
push
sbb
mov
inc
shrb
out
stos
xchg
iret
cld
shll
outsl
mov
das
inc
fs
mov
xor
xchg
sbb
ret
stos
xchg
pop
rolb
xor
mov
divl
sub
jge
jge
test
and
out
xlat
add
insl
movsb
mov
arpl
repnz
sub
add
ss
imul
pop
das
cmp
or
repz
out
pop
rcrl
stos
and
sub
stos
jecxz
mov
push
adc
inc
rcll
dec
mov
add
lock
inc
jb
xor
sahf
and
xor
jecxz
popf
clc
cmp
ret
mov
push
pop
cwtl
dec
cmpsl
mov
inc
or
pop
xlat
jg
not
pop
adcl
sbb
insb
push
mov
jne
or
sub
pop
jp
xor
xor
add
les
push
insl
jae
stc
jmp
push
cmp
mov
xlat
xlat
loope
mov
pop
or
push
push
sub
shll
xor
lock
cmp
lods
mov
jne,pn
mov
inc
icebp
negl
ret
jge
add
sub
in
mov
fmul
mov
push
jns
inc
aam
cmp
push
xchg
cwtl
jno
in
inc
std
jp
inc
arpl
jle
adc
popa
add
aad
repz
xchg
jecxz
inc
aas
mov
movsl
js
aad
cltd
stc
adc
sbbb
loope
lods
cmpsl
insl
lods
xor
loope
sti
add
jl
fiaddl
aam
cmp
in
adc
push
mov
mov
ds
sbb
cli
lods
push
mov
fisubrl
and
mov
mov
push
lahf
imulb
dec
inc
cli
clc
packssdw
adc
push
lcall
and
insl
fcoml
fcoml
sbb
adc
push
imul
cmp
ja
in
test
push
popf
and
fdivs
add
lret
rcr
mov
loopnew
nop
sbb
fcmovnbe
sbb
test
ss
aas
hlt
jne
or
lahf
sub
mov
mov
pop
sbb
scas
cltd
ret
std
loop
sbb
xchg
add
or
lret
shl
outsl
cld
inc
out
imul
stc
add
adc
pop
cmp
loope
loope
mov
insb
clc
in
cmc
pop
or
ljmp
push
stos
adc
jmp
pop
xchg
cmp
in
adc
push
mov
lret
dec
xchg
xor
icebp
xor
ret
mov
lds
mov
cmpl
lahf
gs
sub
xor
in
pop
leave
sub
das
fcmove
and
scas
sbb
sahf
xchg
and
repz
inc
push
push
fisubs
loopne
movsb
mov
movsb
cmc
imul
xor
xor
or
pusha
jge
mov
inc
jl
cmp
cmp
addr16
xchg
inc
mov
popf
push
sarl
sbb
test
jb
and
xchg
add
add
test
je
push
cld
test
js
adc
jmp
mov
add
dec
and
adc
clc
test
mov
outsb
sub
cs
movsl
or
lahf
sbb
imul
repnz
mov
lock
xor
pop
jg
scas
stc
jo
sub
int
jg
mov
sbb
xchg
lea
jmp
jbe
push
pop
mov
adc
mov
outsb
arpl
or
inc
xchg
les
adc
aam
push
ret
mov
test
lahf
outsb
or
icebp
or
daa
xor
lea
inc
gs
dec
adc
inc
adc
insl
sub
fidivs
rcrb
or
lods
pop
jb
je
add
jno
gs
addr16
jl
sbbb
mov
mov
pop
mov
pop
push
sbb
cwtl
cli
aad
xchg
lcall
cmp
insb
sbb
addr16
adc
rol
repz
and
scas
push
ret
and
adc
and
in
and
mov
lock
jge
pop
out
shrl
loop
hlt
fisubrl
jp
push
xchg
mov
dec
stc
jle
cmp
arpl
out
inc
stos
insl
mov
mov
adc
push
sub
sbb
adc
xchg
gs
push
and
scas
insb
or
jecxz
add
call
out
jnp
outsb
scas
fdivrl
negb
add
inc
inc
and
shlb
mov
xchg
es
data16
dec
push
inc
loop
mov
lret
lret
in
mov
je
fs
rcr
mov
push
and
outsl
xchg
sub
mov
mov
rcl
test
xchg
ss
xor
aad
dec
push
sbb
out
fstl
add
adcl
pop
push
pop
cmp
push
daa
scas
fxch
dec
pusha
pop
mov
cmp
inc
movsl
cli
mov
ret
out
push
imul
dec
es
lods
jb
add
in
pop
dec
dec
inc
dec
ja
push
pop
aaa
cs
xchg
mov
xor
mov
inc
sbb
movsb
dec
push
popf
les
xchg
dec
loop
mov
mov
adc
popa
dec
jge
std
aas
sar
xor
inc
out
xchg
sub
aas
lea
movsb
lods
sub
mov
mov
pusha
pop
addr16
rcl
push
outsl
mov
add
ret
aad
outsb
xchg
and
jecxz
xchg
mov
mov
daa
mov
cmp
test
cli
out
and
jg
jb
mov
fstpt
in
mov
test
push
xchg
jbe
xchg
mov
xchg
dec
xor
push
or
shr
ficoml
add
ffreep
adc
ret
mov
dec
sbb
jno
xchg
push
xor
int3
int3
or
cmp
cmp
shlb
es
fs
adc
cmpsl
mov
pusha
ss
sub
cld
or
das
push
scas
jmp
data16
insb
das
stc
repz
jae
lock
or
fyl2xp1
mov
in
popf
or
add
out
push
stc
pop
insl
push
loope
jb
shrb
pop
jge
cmp
sub
pop
scas
mov
iret
mov
sub
sbb
mov
imul
cmp
add
test
or
daa
sti
push
push
mov
test
sub
mov
cmp
mov
mov
xor
out
cld
js
aad
and
mov
mov
mov
sub
data16
mov
movsl
faddl
popf
inc
pop
xchg
pop
adc
pop
pushf
movsb
gs
mov
psubw
mov
subl
arpl
mov
mov
addr16
jge
aas
stos
aad
lret
xchg
and
or
dec
inc
mov
jbe
sub
sbb
bswap
inc
stos
popa
out
adc
add
outsl
add
lods
das
mov
pop
roll
mulb
mov
cli
and
lcall
add
ja
sub
loopne
in
fcoms
or
xor
lea
fcmovnu
mov
mov
test
in
sbb
loopne
add
pop
cmp
mov
xlat
add
push
lcall
push
or
xchg
insb
mov
mov
jle
mov
cltd
in
xchg
xchg
incb
sub
xchg
inc
adc
aas
insl
shrl
and
jmp
test
add
aas
pop
imul
mov
jg
mov
out
and
or
sbb
sub
shl
out
addr16
jb
aaa
sahf
and
sub
cmpsl
dec
xchg
call
sub
xchg
mov
or
shll
jg
subb
jnp
inc
sub
mov
aam
arpl
mov
stos
fcomps
and
inc
and
ficomps
inc
sti
pop
xchg
js
sub
xchg
sarl
sbb
cltd
loop
aam
or
mov
cmc
push
aas
jbe
cmp
add
add
adc
sub
loop
cmp
mov
sbb
imul
setp
cmp
or
sub
out
push
in
hlt
inc
mov
movsb
mov
pop
inc
or
jp
fists
jb
mov
test
repnz
lcall
es
dec
fsubrs
mov
sbb
jle,pn
out
adc
dec
dec
stos
mov
add
call
mov
push
jo
in
dec
in
or
jno
popa
or
icebp
jl
fstpt
dec
sbbl
test
jae
jp
jle
ds
push
xchg
jle
dec
aaa
sub
sbb
or
cmc
dec
arpl
mov
add
ja
mov
leave
sbb
aas
aaa
xchg
icebp
sub
push
xchg
dec
loop
dec
daa
mov
mov
xor
pop
sarb
retw
add
mov
mov
xchg
jge
and
test
andl
dec
pop
in
sbb
or
pop
inc
ljmp
nop
jge
loopne
in
inc
jg
mov
jb
jns
xor
mov
sbb
aas
xlat
dec
sub
jne
mov
mov
dec
into
dec
pop
mov
mov
xchg
pop
mov
ret
mov
pop
mov
adc
inc
imul
adc
aad
fs
pusha
fdivl
pop
xlat
lret
aad
cmp
pop
and
sti
lods
testl
in
mov
inc
xchg
inc
mov
push
leave
mov
pop
mov
cltd
fidivrl
dec
loop
movsb
lock
xor
dec
push
xor
sbb
loope
imul
jg
dec
and
or
out
nop
test
xorl
dec
add
or
jl
add
in
arpl
std
jmp
pop
sub
jb
ja
dec
xor
pushf
pop
mov
cmp
outsb
lods
jo
aas
fstpl
and
jae
and
inc
gs
fisubrs
outsl
sahf
pop
add
mov
pop
lret
scas
loope
jo
sar
xlat
outsl
mov
sub
sbb
fiaddl
cli
orb
push
lock
iret
add
inc
sbb
in
std
mov
test
sub
xor
rcl
cs
or
add
mov
outsl
out
rorb
sub
gs
outsl
sub
dec
aas
push
lds
mov
push
push
into
cmp
pop
fnstcw
into
mov
cmp
es
sbb
and
lret
sbb
int
in
fisubrs
push
sub
dec
adc
ss
cmp
daa
xor
push
push
outsl
sbb
push
data16
sub
and
xchg
js
shll
pop
mov
sbb
int
in
leave
je
mov
mov
xlat
or
xlat
cmp
movsb
sub
mov
pop
scas
setne
jg
xchg
and
and
push
movsl
into
cwtl
movsl
dec
inc
sbb
ss
sub
jns
enter
data16
inc
push
popa
and
mov
pop
mov
dec
cmp
xor
shll
xchg
dec
cmp
adc
and
arpl
in
cmp
ds
mov
movl
icebp
xor
adc
xor
adc
es
and
and
rorb
in
gs
mov
pop
dec
mov
subl
pushf
dec
adc
dec
aaa
adc
push
lds
ljmp
ss
and
mov
icebp
push
int
daa
in
xor
lahf
outsl
xor
pushf
jmp
aam
cmc
push
pop
mov
pop
jp
mov
jae
iret
sub
push
mov
andb
pop
dec
push
push
rcrl
push
lods
out
rcll
mov
hlt
jns
arpl
rorb
jp
cld
nop
rorb
mov
shll
or
fidivrs
jg
inc
xchg
flds
adc
fwait
sub
das
inc
mov
loope
stos
add
repnz
lock
push
fimull
pop
push
lret
orb
outsl
loop
mov
fcmovb
icebp
mov
mov
cmp
scas
dec
or
std
data16
mov
movb
and
clc
das
pusha
pop
or
adc
lcall
sahf
or
scas
dec
ds
sarb
stos
addl
jo
lahf
dec
mov
stc
ljmp
xor
and
or
inc
enter
xchg
pop
aaa
jecxz
cmp
lods
mov
test
cs
inc
test
sub
cld
sub
js
scas
mov
push
icebp
xchg
jne
jecxz
adc
xchg
daa
push
fdivrs
enter
imul
mov
enter
daa
mov
xchg
aas
add
hlt
add
mov
dec
dec
lret
adc
xchg
test
cli
mov
cmp
popf
outsb
pop
push
jle
addr16
xorb
scas
mov
mov
jae
out
adc
in
mov
mov
mov
jb
push
dec
xor
ja
aad
sub
stc
mov
dec
lea
push
and
ja
pop
iret
or
lds
loope
xchg
mov
cli
mov
gs
aam
fildll
out
pop
nop
loop
push
push
xchg
sub
mov
and
hlt
repnz
jns
popf
or
into
sbb
sahf
inc
insl
stos
dec
je
mov
sub
add
or
aas
mov
in
nop
pop
lret
xchg
xchg
test
fcoml
push
or
lret
out
adc
inc
cwtl
add
nop
jne
rclb
xor
fisttps
and
stos
andb
inc
in
lods
or
cld
dec
addr16
orl
add
xlat
add
je
adc
loop
add
or
out
inc
jb
lea
fwait
insl
inc
dec
dec
ds
in
mov
cmp
push
jb
xorb
sbb
xlat
inc
push
fiaddl
mov
xor
mov
out
xchg
mov
dec
pop
arpl
mov
into
lea
fnstcw
in
ret
push
out
test
and
or
int3
cmc
movsb
mov
loop
dec
pusha
sbb
mov
sbb
out
js
mov
mov
cmp
lcall
rcl
insl
imul
xor
sub
inc
jp
mov
cwtl
mov
or
fldenv
mov
repz
sbb
pop
std
xchg
adc
sbb
lds
es
cmp
pushf
xchg
cmp
test
sbb
enter
nop
push
pop
dec
jge
lods
jl
pop
in
cmp
mov
shlb
jmp
jecxz
xor
cld
add
int
sbb
ljmp
jb
jp
jle
pop
or
lret
aad
or
ret
pop
loopne
add
notl
iret
mov
xorl
cmp
and
push
stos
mov
call
or
jne
push
in
cs
xchg
mov
pop
mov
movsb
aas
ret
shrb
sub
sub
push
aaa
cmpsl
aaa
and
popa
movsb
sahf
das
add
cmp
push
push
pusha
push
mov
lcall
fs
cmp
xchg
fdivrl
push
fists
pop
aas
aas
sti
mov
ret
adc
iret
dec
scas
leave
je
pop
mov
cmp
lahf
mov
adc
add
add
push
sbb
cltd
mov
xchg
push
xor
jo
add
leave
out
punpcklwd
adc
bnd
pushl
mov
jge
mov
lahf
dec
mov
rcrl
cmp
imul
stc
mov
sbb
mov
inc
xchg
rol
xor
out
cmp
add
stc
pop
mov
aaa
cltd
jmp
aad
ja
movsb
jbe
sub
popf
push
loope
adc
ss
imul
lret
mov
cmp
aas
fidivl
xchg
sbb
jns
enter
mov
test
mov
addr16
sub
cmp
pop
ret
and
subl
imul
outsl
dec
xor
cmp
sahf
inc
in
in
push
popf
mov
mov
mov
mov
mov
dec
fwait
push
add
add
ja
into
mov
xchg
push
jg
adc
push
xchg
push
add
shlb
inc
icebp
stos
ja
add
or
inc
mov
cmpsl
mov
mov
insl
test
adc
xchg
add
stc
stc
fiadds
ficompl
shl
sahf
addr16
aaa
jno
cmpsb
rclb
jecxz
mov
dec
add
das
das
and
add
es
sahf
cld
mov
push
push
mov
lcall
mov
mov
sarb
or
pop
cld
mov
add
fdivr
mov
mov
popa
mov
movsl
mov
addr16
in
add
jecxz
push
push
call
test
add
popf
psllq
clc
fstps
push
clc
ffree
enter
and
cmp
arpl
mov
mov
pop
int3
cmp
cmp
int
cmp
stc
cli
add
fwait
mov
or
jl
sar
shr
cld
push
stos
mov
in
loop
or
xor
cld
mov
xlat
xor
mov
jmp
sub
jbe
hlt
popa
js,pn
lahf
and
bound
sbbb
into
aas
inc
mov
in
out
and
ss
jno
dec
mov
sub
and
mov
and
flds
push
add
loopne
out
mov
push
dec
xor
adc
or
mov
test
pop
jle
inc
rcrb
mov
sub
dec
leave
inc
stos
cld
or
popf
mov
push
pop
call
pop
fcom
jnp
and
fcmovne
mov
stos
fisttpl
sbb
cmp
xor
dec
fwait
leave
sahf
jne
cmp
sub
adc
sbb
mov
inc
xor
pop
jl
and
lock
push
cs
in
icebp
push
xchg
enter
push
and
pop
mov
cmp
sbbl
pushf
add
loopne
stos
andb
loope
ja
adc
xor
sbb
incb
cmpl
fsts
add
push
mov
inc
push
jl
sbb
xchg
in
popa
ret
dec
push
add
lret
dec
inc
inc
fs
jmp
sub
pop
icebp
or
mov
inc
pop
cmpsb
lods
dec
cli
cmp
inc
pop
test
mov
sub
mov
inc
or
movsb
std
roll
push
mov
add
push
jae
movsb
sbb
loope
sbb
in
ljmp
pop
movsl
shlb
push
mov
popa
cld
adc
subb
cmpsb
add
xchg
cmp
test
cmpsb
imul
jo
out
and
test
mov
popa
popf
xchg
testl
ljmp
das
push
mov
jecxz
xchg
jp
rcrl
xor
leave
push
ror
adc
push
addr16
lods
fcmovnu
inc
aaa
jae
jne
pop
imul
lahf
arpl
inc
imul
mov
xchg
jg
js
inc
lock
int
cld
xchg
add
sahf
jnp
dec
mov
test
inc
movsl
icebp
lret
jns
push
sbb
add
adc
mov
cmc
cld
fsubs
out
in
repnz
mov
ret
mov
cmp
xor
outsb
mov
jle
stos
out
aad
and
lds
fisubrl
xchg
add
dec
mulb
mov
dec
cmovg
xchg
lret
int3
js
ljmp
mov
xor
mov
mov
mov
in
andl
jno
push
push
sbb
into
add
sar
pop
and
inc
cmpsl
bound
fsubrs
or
cld
out
loop
imul
push
mov
xchg
jo
jge
lret
or
mov
jle
aas
movsb
jns
and
cltd
pop
shr
xchg
ret
in
movsl
mov
ds
cli
imul
mov
add
push
xchg
pop
mov
lahf
xchg
jae
int3
jne
ss
out
xchg
das
aaa
stos
mov
mov
sbb
cs
enter
out
lcall
orl
mov
outsl
aad
push
mov
sarb
mov
mov
cmp
sbb
mov
cmp
push
les
add
jp
dec
sbb
sbb
mov
fmuls
inc
xchg
test
into
out
jbe
mov
pop
repnz
faddl
test
cltd
shlb
iret
jmp
mov
mov
and
xor
jno
das
dec
add
aam
js
xor
insl
je
ja
mov
push
lods
cmc
sub
push
cmp
jl
fwait
inc
sbb
mov
movsb
popa
xor
jp
hlt
dec
xchg
pop
dec
stos
iret
pop
cs
push
pop
popf
scas
jg
pop
cmp
xor
lds
icebp
ljmp
lahf
imul
push
imul
mov
scas
jnp
xor
movsl
dec
mov
ffree
dec
mov
cmp
mov
stos
pop
sti
sub
or
out
jl
inc
sti
popf
sub
fldcw
inc
int3
or
movsb
push
mov
imul
cmp
in
push
adc
jecxz
aaa
mov
std
xor
pop
out
movsb
and
es
xchg
xchg
pop
xlat
xchg
mov
mov
cmpb
inc
sahf
pushf
pop
pop
stos
movsb
cmpl
dec
push
movsb
adc
cli
mov
cmp
jnp
push
jl
cmp
je
aaa
cmp
and
je
mov
out
loopne
cmc
cmp
incb
ret
push
aad
push
add
pop
xor
icebp
sahf
or
pop
jnp
mov
stos
dec
lock
stos
sahf
xchg
cmp
fdivl
lea
sbb
xor
cld
lock
dec
out
hlt
js
popf
imul
jg
dec
pop
in
mov
or
jmp
pop
aad
gs
and
iret
divb
aaa
clc
aam
jne
cmpsl
in
cmpsb
push
or
lret
shlb
sbb
stos
adc
push
push
mov
or
sbb
test
cmp
repz
mov
or
ljmp
mov
hlt
inc
inc
push
push
cld
mov
mov
dec
push
push
int3
jge
test
cmc
fmull
and
fld
or
or
out
push
pop
or
xchg
jo
mov
popf
sti
mov
enter
pop
jge
icebp
inc
icebp
pop
or
mov
sbb
adc
out
nop
shrl
out
popf
push
sub
popa
movl
or
jns
movsl
xor
testl
mov
mov
popa
jns
loopne
aas
sub
std
mov
sbb
call
jmp
lret
ss
pusha
push
bound
in
sub
ds
push
xchg
outsb
lea
cmpsl
cs
adc
jne
dec
stc
sbb
ds
lret
out
dec
cmp
sub
aad
mov
out
test
pop
dec
inc
jb
dec
adc
xor
loop
pop
push
data16
stos
scas
xor
dec
mov
xor
leave
sti
je
loop
and
sub
out
pop
push
dec
scas
jno
pop
fnstenv
xchg
cwtl
jmp
lea
ret
ss
pop
orb
xor
inc
mov
pop
addb
repz
inc
fcoms
bound
roll
loope
data16
or
arpl
call
inc
adc
ds
bound
cltd
andb
xchg
gs
shl
cld
and
pop
testb
ds
loopne
mov
cltd
xorb
in
lds
daa
sub
inc
jae
add
imul
mov
leave
add
loopne
mov
loope
mulb
xchg
jg
lret
addr16
lret
sub
jmp
popa
out
stos
add
dec
leave
faddp
data16
cmp
and
mov
or
push
lcall
aaa
daa
sub
jae
xor
call
pop
iret
scas
rcll
sahf
int
out
repnz
mov
clc
js
stc
add
pop
add
jno
dec
inc
jo
mov
fcom
in
cmp
pop
mov
fsubrs
insl
or
adc
push
dec
aas
scas
insb
insl
sub
adc
stos
testb
xchg
jg
add
or
push
repnz
mov
pop
addr16
test
lea
insb
sbb
adc
ja
adc
or
or
pop
pop
inc
mov
sti
cmp
adc
xchg
sarl
mov
fcmovu
es
arpl
push
imul
les
jae,pn
mov
push
call
dec
jb
loopne
xchg
xchg
cmp
rcr
lcall
pop
sbb
push
fs
xchg
out
pop
in
jecxz
adc
lcallw
mov
adc
sub
les
pop
fs
jmp
mov
add
int
adc
nop
sbb
and
scas
cmpsb
and
sub
xchg
jbe
sbb
push
mov
fidivrs
ret
cmp
ljmp
in
jmp
int
push
sub
cli
test
int
push
sbb
imul
aas
rorb
jns
dec
std
test
hlt
inc
lock
and
mov
push
aas
push
pop
bound
ret
mov
js
clc
lea
movsl
fcoml
sub
cmpsl
pop
movsl
xchg
cmp
xchg
out
fimull
and
xchg
xchg
fisubrs
push
xor
rclb
xchg
and
arpl
and
mov
inc
push
cmp
mov
or
inc
and
dec
aas
out
ja
loope
mov
xor
sti
jns
xor
pop
call
bound
cltd
cmp
pop
std
sbb
fnstenv
jle
aad
sbbb
cmpsl
jb
sarl
lret
lods
les
mov
adc
xor
mov
jnp
sub
add
and
jecxz
cld
ffree
loope
xchg
and
sahf
sbb
out
aaa
pop
pop
scas
cmp
pop
pushf
mov
fwait
test
nop
cmp
andb
and
dec
mov
mov
sbb
dec
xchg
mov
cmp
dec
test
in
pop
enter
test
adc
lahf
mov
sub
daa
test
jp
jle
fbld
loop
mov
das
cmc
arpl
cs
inc
mov
ret
rorl
daa
push
mov
lds
movsb
das
sbb
xlat
sbb
jo
cmpsl
lea
push
sub
pusha
jl
call
sbb
xor
xor
mov
int3
std
jno
cmp
mov
dec
mov
xor
and
outsb
aad
or
dec
pop
cmp
xor
scas
repz
push
cli
adc
add
rcrl
ja
xchg
subl
mov
inc
inc
xor
xchg
sbb
dec
lahf
orb
xchg
ret
mov
sbb
inc
fcoms
into
and
and
insb
adc
mov
jg
outsb
cmp
jae
mov
cmp
push
inc
cmpsl
mov
gs
push
ds
xchg
add
loope
in
popf
mov
repnz
movsl
mov
inc
sbb
adcl
ret
push
mov
roll
aam
das
push
test
sub
dec
adc
inc
mov
mov
lret
cs
loopne
popa
test
and
and
adc
sbb
jnp
leave
pop
insb
xor
xchg
jno
insb
cmp
les
xor
aam
stc
hlt
push
push
dec
push
outsb
push
mov
mov
jle
outsb
icebp
sbb
in
es
inc
sbb
mov
out
xor
and
or
and
xor
call
shl
mov
push
pop
jb
jmp
mov
push
jo
dec
out
cmp
jae
or
test
cmpsl
.byte
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
mov
call
ss
movsb
or
add
add
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
or
data16
add
xchg
add
add
outsb
sub
mov
pushl
or
pop
jmp
fs
xchg
ror
into
out
cld
test
or
adc
add
xchg
cmp
jle
sub
push
call
les
cs
pop
gs
pop
pop
pop
sub
add
xor
push
sbb
popl
call
nop
mov
lret
movzwl
pop
sub
push
adc
pop
dec
mov
cmp
jne
sbb
and
or
add
mov
dec
insb
mov
xor
push
call
mov
sbb
pusha
int3
fimuls
sbb
push
scas
pop
outsl
mov
sub
or
jae
xor
insb
lods
int3
add
push
cs
mov
lcall
repz
jae,pn
sbb
mov
push
fsubrp
jns
ja
test
arpl
lods
mov
test
sub
push
repnz
repnz
jae
or
sub
out
and
sbb
outsl
ljmp
dec
pop
cmp
jae
ss
daa
jae,pn
sbb
cltd
cld
scas
xchg
cmp
pop
jnp
adc
shlb
pop
sbb
cld
cmp
mov
push
jecxz
push
mov
dec
in
mov
adc
dec
fsubrs
fsubrl
es
nop
lahf
inc
xor
inc
notb
xor
call
adc
and
repnz
in
aad
dec
cmp
out
jns
push
notb
pop
ljmp
cmc
mov
test
xchg
push
adc
and
adc
sbb
roll
in
jnp
sub
sbb
inc
mull
cmp
jle
aad
in
sub
repz
js
popa
insl
call
push
divb
mov
test
push
xor
fwait
jae
adcb
adc
idivl
push
mov
in
push
push
scas
add
xchg
scas
pushf
mov
icebp
jno
ret
fucomp
mov
push
negb
lea
mov
mov
loopne
dec
ret
pop
push
test
mov
push
cmp
aaa
sbb
pop
cmp
std
adc
shll
and
pop
lods
xor
mov
add
inc
ret
pop
pushf
ret
aas
sbb
ds
add
mov
adc
jg
jns
sub
outsl
dec
in
sbb
add
sbb
or
mov
lcall
cmp
ss
or
jns
or
push
mov
aad
cltd
mov
and
lahf
adc
sbb
xchg
sbb
outsb
stos
lock
jecxz
inc
sbb
into
cmp
add
scas
and
testl
out
or
jecxz
loop
sbb
mulb
add
push
push
fstl
mov
xchg
loopne
lahf
test
test
sbb
pop
test
adc
pop
mov
and
add
xor
pop
xor
test
sub
sbb
adc
fs
lahf
sbb
sbb
arpl
mov
jecxz
sbb
negb
decl
add
jle
data16
mov
jmp
mulb
sub
cli
mov
mov
daa
or
loopne
sbb
jo
test
cli
mov
lods
int
add
xor
lea
test
inc
lea
and
pushf
add
and
and
test
clc
mov
push
jp
sbb
testl
push
jp
sbb
jp
add
aad
xor
or
pop
shrl
dec
lods
testb
loopne
sbb
and
test
notb
std
loop
insb
movsl
dec
sbb
ret
inc
pushf
push
cmpsb
inc
mov
lcall
jne
nop
dec
push
stos
xchg
adc
push
jp
sbb
xchg
jno
cmp
lcall
adc
push
mov
mov
test
mov
inc
aad
dec
rcll
sbb
jp
sbb
jge
aad
mov
mov
mov
in
add
mov
lea
pop
insb
add
testb
testl
mov
mov
test
xor
aad
push
mov
sbb
out
fwait
adc
xchg
imul
mov
mov
stos
mov
sbb
out
fwait
jo
push
fwait
push
jecxz
mov
dec
fnsave
mov
cmpsl
cmc
sbb
dec
inc
mov
inc
aad
push
sbb
hlt
fisttps
push
hlt
iret
dec
lret
sbb
cmc
sbb
dec
inc
mov
inc
aad
push
mov
ljmp
mov
cmpsl
cmc
sbb
dec
inc
mov
push
mov
andb
push
insb
and
cmpsb
inc
push
lahf
in
test
push
jecxz
mov
dec
fnstsw
mov
cmpsl
cmc
sbb
dec
inc
out
aaa
push
repnz
mov
sbb
push
push
insb
and
in
mov
add
inc
je
and
and
pop
push
jbe
cmp
xchg
inc
je
and
and
mov
xor
testb
pop
xchg
sbb
testb
test
mov
xor
testb
push
mov
mov
testb
jge
lods
testb
testb
pusha
jae
sub
ljmp
cltd
sbb
stc
pop
jecxz
stc
and
jno
mov
loopne
imulb
arpl
xor
jnp
dec
inc
pop
dec
xor
sarl
shll
lods
push
lods
stos
jmp
sbb
adc
gs
fldenv
lcall
mov
nop
pop
fisubs
aas
mov
push
insb
aam
cmpsl
clc
out
or
jo
inc
cmpsb
cmp
and
testl
test
testb
testb
sarb
sbb
test
test
testb
idivl
fisttpl
sub
testb
testb
inc
lahf
pop
int
cmp
sub
jo
cmpsb
mov
divl
and
inc
mov
dec
sub
idiv
mov
xor
out
lret
cmpsl
in
sbb
sub
add
ja
and
mov
dec
or
fs
push
lock
or
add
push
adc
push
out
inc
mov
scas
adc
push
fisubl
loope
jbe
ljmp
jbe
push
or
dec
xchg
push
mov
mov
add
xor
es
mulb
mov
hlt
movsb
jl
jl
xor
icebp
pop
jmp
icebp
nop
and
jg
push
outsb
pop
pop
out
mov
cmp
hlt
daa
cmp
sbb
iret
push
lock
aas
stos
insb
outsb
cli
cli
jmp
xor
add
dec
fcompl
inc
rcr
in
shll
sbb
arpl
dec
add
jbe
jle
mov
insl
lret
xor
push
dec
jb
or
in
movsl
jl
in
jb
mov
fstpl
out
mov
inc
push
test
pop
add
scas
sub
icebp
sbb
cmc
pop
es
adc
sub
fsubs
sub
nop
xor
fstpl
ja
adc
jns
ss
mov
adc
out
push
xorb
jb
mov
add
dec
jns
cltd
arpl
cli
into
sbbl
nop
mov
jae
out
pop
dec
inc
stos
sub
fucomp
pusha
xor
fadds
lods
sbb
inc
pop
add
cmp
pop
aam
jbe
xorb
popa
jecxz
pop
sub
testl
mov
add
movsb
mov
adc
movsb
push
loope
mov
repnz
outsb
iret
lahf
mov
xor
in
movsl
jnp
and
push
fisubrl
lcall
mov
mulb
aam
jno
mov
pop
sub
dec
or
in
addr16
pop
mov
mov
dec
mov
jo
xchg
sbb
xchg
push
mov
scas
cmpsb
insl
cwtl
jle
push
mov
flds
fsubrl
adc
jp
aas
dec
roll
cmp
imul
testb
sbb
js
push
cli
inc
hlt
outsb
out
lret
das
xor
dec
jmp
test
int3
outsl
leave
mov
shrl
push
or
lods
addr16
and
cs
dec
jne
popf
and
enter
test
enter
test
inc
imul
mov
lods
out
cmpsl
call
stos
jp
jmp
shl
adc
cli
icebp
dec
stos
push
xor
out
and
add
add
add
rolb
rolb
nop
inc
add
rolb
adc
cld
add
cmp
add
imul
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
cld
add
hlt
sti
add
cmp
add
mov
add
inc
std
add
mov
add
add
add
ret
add
add
lret
add
add
sar
add
jne
add
add
jg
add
loop
add
mov
add
ljmp
add
std
add
movsl
std
add
cli
std
add
jne
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
jbe
jo
xor
cs
insb
add
gs
xor
fs
insb
add
outsb
insl
insl
cs
insb
add
gs
insb
xor
cs
insb
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
incb
add
add
add
add
add
add
daa
incb
add
add
add
incb
add
add
add
add
add
add
push
incb
add
add
add
add
add
add
add
add
add
add
add
add
add
je
gs
outsl
popa
jb
push
jns
add
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
add
jae
jb
gs
je
imul
gs
gs
popa
insb
jne
inc
js
add
add
outsl
ja
imul
add
gs
gs
jbe
outsb
je
add
push
dec
inc
gs
jo
arpl
insb
inc
outsl
insb
fs
outsl
arpl
imul
je
jb
push
gs
imul
push
popa
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
iret
add
xchg
inc
inc
insl
push
push
add
add
add
inc
repnz
adc
mov
sbb
cmp
lods
sub
jno
jb
jl
leave
addr16
adc
dec
mov
mov
jp
push
xor
jne
mov
xchg
fs
arpl
mov
pushf
jp
fdivr
adc
rolb
call
insb
add
jb
mov
xor
xchg
fst
jg
cmpsl
dec
cmp
add
lcall
fsubs
inc
jmp
cmp
popa
insb
repnz
and
mov
sbb
adc
bound
xlat
mov
mov
xchg
mov
xchg
fldt
xor
pop
jl
cwtl
and
sub
or
or
cld
xlat
xor
push
xchg
lods
dec
ja
sub
inc
subb
mov
jge
mov
and
mov
cltd
sub
push
jecxz
je
invd
les
addr16
push
xchg
adc
or
push
or
xchg
sarl
jae
test
mov
mov
lds
popf
inc
inc
mov
lea
js
and
and
sbb
cmpsl
or
jecxz
dec
jo
into
dec
rclb
push
loopne
xchg
or
stc
mov
xchg
lock
push
xor
xchg
cs
sub
jbe
pop
cltd
call
ja
mov
lock
mov
fs
mov
call
bound
xor
inc
loop
fisttpll
aam
adc
dec
or
push
scas
dec
ret
sub
push
inc
fdivrl
jb
test
popa
mov
lahf
and
cmp
mov
sbb
and
or
sti
lea
or
mov
stos
mov
mov
jno
mov
jo
dec
sub
das
push
sub
imull
test
test
xor
or
mov
dec
mov
dec
pop
in
mov
mov
mov
bound
dec
ds
fbstp
adc
inc
sub
xchg
xor
adc
gs
sub
push
imul
sarb
loope
repz
push
sub
dec
sbb
rcll
jnp
cltd
push
clc
pop
scas
or
insl
call
xchg
scas
fs
or
dec
fiadds
adc
sysexit
jmp
in
retw
stos
test
or
pop
test
pusha
and
imul
enter
or
sysenter
mov
push
test
scas
pop
hlt
cwtl
cmc
fisubl
in
push
xchg
outsb
cmp
aam
ret
scas
jae
scas
xchg
dec
push
jae
roll
subl
xchg
xchg
fstp
push
lods
lahf
push
or
add
subl
adc
and
clc
stos
loop
test
mov
sahf
push
in
and
popa
jne
ss
mov
jae
gs
lahf
cmpsb
sbb
pop
or
lock
cmpsl
sub
rolb
jmp
xchg
faddl
push
adc
sbb
out
push
repz
add
cmp
push
or
push
in
cmp
hlt
push
add
repnz
loopne
jnp
scas
leave
adc
jo
cmc
cmp
clc
xchg
mov
pop
jge
push
add
mov
int
inc
pop
mov
daa
iret
inc
sbb
cmp
pop
cmp
cwtl
mov
mov
adc
mov
cli
and
daa
movsl
imul
xor
cmp
mov
repz
adc
adc
inc
dec
ret
mov
icebp
stc
push
dec
rcr
dec
push
cmp
xor
hlt
adcl
push
sub
test
or
jno
sub
pop
stos
mov
rolb
xchg
mov
mov
pop
or
pop
inc
pop
shlb
imul
push
stos
insl
test
mov
lcall
inc
decl
loopne
sub
xchg
add
test
mov
mov
adcl
adc
mov
inc
lcall
cmp
mov
jno
cs
std
pop
push
push
jno
jp
in
jnp
dec
sbb
dec
fstpt
add
or
push
xchg
in
cli
ret
adc
xor
into
xor
jno
push
popf
dec
mov
cmp
xor
cltd
cmova
fildl
cli
sbb
ds
jo
mov
sub
negb
ret
add
je
call
sbb
mov
adc
addr16
inc
repz
andl
lahf
cmp
loop
add
push
leave
push
arpl
or
fdivrs
nop
into
popf
cmp
loope
js
jnp
adc
lods
hlt
fwait
jge
inc
gs
jo
jl
test
sbb
mov
ja
lahf
cmc
pop
insb
movsl
sub
jg
cs
shrb
lahf
adcb
pop
or
sub
push
cmpl
adc
loopne
lret
out
inc
adc
lret
subl
or
cwtl
push
push
iret
rcrb
aad
cli
clc
mov
cmpsb
xor
orl
loopne
aas
jp
dec
int3
jge
daa
mov
push
lahf
mov
pop
cmp
in
movsb
push
test
ljmp
sbb
nop
rcr
xor
gs
dec
out
rolb
inc
mov
shl
out
and
loope
sti
outsb
inc
push
pop
xor
es
sahf
daa
shlb
loope
loop
movsl
mov
pusha
mov
test
cmp
pushw
push
cmp
cmp
inc
pop
popf
mov
imulb
sahf
es
ljmp
jo
jnp
movsb
ret
lods
pop
stos
sub
xchg
jnp
sbb
inc
testb
xor
data16
ja
lods
cmp
ret
pop
add
jecxz
adc
mov
xchg
fwait
aam
cmp
xor
ja
int3
or
add
das
into
xchg
sbb
fsts
or
das
pop
xchg
stos
ret
cltd
pop
enter
sub
pop
int
mov
jecxz
mov
dec
aad
jnp
pop
mov
pushf
fcoml
jg
push
inc
adc
mov
stos
daa
cltd
xchg
int3
loop
pop
in
sbb
and
and
xlat
fdiv
inc
hlt
enter
cmp
cltd
addr16
pop
pushf
scas
je
movsl
nop
or
xchg
sbb
ret
sarb
les
xchg
in
lods
push
movsb
sbb
fsubs
fidivl
mov
test
popf
in
xor
jns
xchg
inc
inc
jecxz
adc
fcoml
sahf
dec
mov
pushf
ss
adc
and
mov
pop
push
rdpmc
add
sbb
arpl
ljmp
iret
dec
call
mov
pop
xlat
xchg
cmp
push
cli
and
ss
repz
imul
lods
shlb
rcr
decb
enter
cmp
hlt
jp
xchg
movsb
xor
subb
stc
sbb
lea
in
sub
mov
ja
nop
leave
fbstp
sbb
cmc
xchg
push
and
jmp
sbb
jbe
xor
movl
ljmp
push
call
jl
sahf
fldt
push
mov
cmp
rclb
imul
adc
loop
fldt
and
into
xorl
loope
xchg
jnp
mov
stos
ds
push
sbb
jae
nop
and
insl
dec
xchg
icebp
sub
sub
ror
lret
inc
es
lcall
jle
dec
or
ret
or
inc
loopne
mov
push
push
xor
xor
popf
fwait
xor
mov
setbe
jb
lods
test
cmpsl
cltd
fstpl
mov
stc
ret
lret
jmp
cld
xchg
xchg
loope
and
clc
dec
add
push
cmc
jmp
dec
jns
mov
mov
pop
pop
adc
push
pusha
adc
cmp
jl
cmpsb
sar
mov
jns
xor
jne
lret
dec
fsubr
fincstp
fldl
or
mov
jae
andb
pop
sahf
or
sarl
jg
fcoms
jb
repz
jo
out
test
push
inc
sbbb
dec
and
inc
pop
inc
cmp
dec
mov
cmp
js
rcl
dec
mov
es
push
ror
jne
cmp
sbb
repz
dec
xlat
jo
fstpl
mov
not
or
or
dec
and
push
scas
rcll
pop
cmp
out
lods
push
int3
inc
stos
imul
mov
dec
xchg
jo
pushf
mov
mov
imul
xor
sbb
mov
push
jmp
inc
and
or
sbb
clc
es
push
fsubrl
js
nop
scas
cld
fsubp
in
sbb
rcrb
pop
pop
and
mov
je
fsubrl
orl
mov
iret
push
mov
jle
sbb
pop
sarb
hlt
sbb
jmp
inc
sub
fidivl
popw
add
addr16
mov
dec
xchg
cmp
ret
xor
test
test
cmp
rorl
fwait
test
aam
dec
sbb
adc
and
xor
mov
or
cld
xchg
or
mov
inc
int3
mov
js
xor
and
loopne
movb
mov
orl
mov
dec
je
imul
or
adc
xchg
xor
lods
xor
mov
daa
jmp
or
sbb
jg
inc
xchg
testl
fdivs
push
aaa
pop
fcoms
test
rorl
dec
inc
aam
add
xchg
xor
aaa
ljmp
into
fildll
push
lods
xchg
sub
cmp
pop
aas
sbb
jmp
jp
cmp
mov
in
call
stos
mov
push
rclb
outsl
mov
leave
inc
mov
leave
mov
jl
repz
outsl
enter
pop
adc
mov
xchg
ret
aas
dec
cld
outsb
jl
popa
xor
sarb
push
push
mov
jmp
pop
repnz
jnp
or
jle
add
inc
xchg
inc
xchg
mov
ss
sub
das
xor
sbbl
insb
and
cmp
sub
mov
mov
jne
sub
cmp
jbe
add
outsb
dec
int3
shrl
hlt
clc
lret
sbb
in
pop
pop
push
stos
pushf
jo
je
jnp
xchg
subl
stos
xchg
mov
insl
inc
fcmovbe
loop
faddl
add
in
pop
adc
mov
inc
or
adc
into
dec
and
cwtl
pop
push
sub
add
ret
jge
imul
sub
cmp
aam
dec
fnsave
nop
outsb
fmull
aas
stos
sbb
cwtl
mov
cmc
stos
push
test
test
cltd
insb
adc
adc
cmp
jbe
out
sahf
xchg
lods
sbb
shlb
cmp
lret
mov
inc
xor
pop
ret
jae
mov
lods
int3
std
test
dec
adc
xor
popf
xchg
pop
sbb
mov
inc
filds
mov
notb
out
push
lret
xor
iret
mov
repz
xchg
andl
add
out
and
mov
sbb
push
decl
enter
popa
xchg
add
mov
xchg
push
xchg
cmpsl
popa
dec
nop
js
decl
and
in
pop
jne
addr16
mov
lds
mov
dec
shl
xlat
sbb
outsl
jp
out
xor
dec
jmp
mov
cmp
jb
inc
push
leave
aad
insb
mov
clc
and
stos
mov
insb
sub
dec
repnz
or
and
jo
aam
jns
subl
inc
jae
scas
je
filds
gs
push
inc
pop
xchg
mov
insl
stos
aas
shl
lret
xchg
push
push
dec
mov
scas
out
xor
push
imul
sub
and
and
mov
mov
cmp
xlat
aas
and
mov
pop
lods
and
inc
mov
lret
bound
cmp
mov
out
xchg
add
mov
out
dec
pop
mov
lcall
hlt
sbb
test
jae
push
mov
stos
scas
jo
daa
imul
sub
push
pushf
jbe
pop
sbb
adc
and
add
mov
mov
xchg
jg
or
pop
into
inc
dec
cld
push
hlt
xchg
add
pop
repz
aad
sub
scas
int
je
pop
push
loope
and
mov
xchg
insl
adc
xor
mov
mov
pusha
and
mov
cltd
push
or
insl
pusha
hlt
push
fimuls
outsb
aad
and
xlat
outsb
sti
xchg
inc
jecxz
jne
lret
mov
ja
add
movsl
push
or
mov
pop
pop
test
fmull
sub
xor
or
or
mov
xor
mov
mov
out
leave
jmp
movq
andb
insl
nop
lods
ds
lods
subb
addr16
subl
cmpsl
adcb
pop
inc
mov
pop
test
test
or
dec
ret
popa
add
or
push
in
enter
cmp
dec
iret
xor
jnp
xlat
fmull
lcall
sbb
add
lods
stos
das
cmpsl
fldcw
fs
jo
ds
mov
notl
mov
cmpsl
pushf
xor
into
or
or
or
outsb
and
or
push
leave
or
push
inc
pop
ror
cmpsl
mov
mov
sbb
mov
inc
inc
jnp
mov
cmp
lea
in
pushf
pop
and
mov
push
es
psllq
orb
dec
nop
sbb
mov
lret
cmp
pusha
mov
sbb
nop
pushf
vpavgb
jl
clc
dec
push
out
add
pop
inc
xor
inc
sub
pop
xchg
adc
out
pop
daa
dec
xor
outsl
sub
pusha
push
jmp
xchg
inc
test
std
sbb
pop
jno
into
les
inc
adc
sub
fs
mov
mov
shl
sbb
or
xchg
adc
mov
les
mov
imul
addb
jbe
pop
sbb
sbb
and
push
xchg
add
push
aaa
fildl
xlat
mov
iret
repz
popa
inc
pop
mov
das
call
sub
inc
call
cmp
xchg
xor
dec
repz
jmp
sbb
mov
test
add
push
jecxz
jno
xchg
test
push
inc
mov
jmp
mov
adc
fsubr
leave
ret
add
pop
jmp
xor
push
dec
cmpsl
xchg
lds
mov
lds
inc
orl
and
inc
mov
cs
sub
and
out
lods
cmp
mov
loop
jg
stc
push
inc
in
loop
aas
push
push
push
pop
mov
aas
inc
test
mov
inc
pusha
fnstenv
test
cmp
dec
cli
aad
add
sbb
fwait
mov
into
pop
xor
pop
push
int3
mov
in
test
xchg
inc
mov
mov
inc
ds
xor
ret
sahf
cmpl
inc
movsb
jne
mov
nop
fs
jne
in
divl
fldenv
cmc
in
fisubrs
jae
icebp
in
ret
shrb
dec
adc
std
mov
jnp
mov
enter
lods
out
pop
cmc
arpl
push
andl
jg
ss
int
dec
and
cmp
jno
cmpsl
mov
fwait
leave
push
test
jge
dec
mov
add
negl
daa
testl
jne
out
or
cli
jle
ret
dec
xchg
js
inc
push
cmp
mov
mov
jns
lahf
xor
jp
or
loop
add
add
lock
rcpps
cmc
inc
sub
and
rclb
andl
dec
cwtl
aaa
jbe
lret
cli
push
subb
push
js
and
jecxz
test
and
or
xchg
mov
fsub
jg
loop
push
js
mov
adc
push
sub
clc
andb
pop
inc
add
xor
dec
rorb
shll
mov
test
mov
shll
pop
stos
aam
and
je
jg
sti
push
sub
insb
les
cs
pusha
jmp
jle
mov
mov
pusha
iret
push
jns
cwtl
jp
push
aaa
jns
pop
cmp
jmp
push
fldcw
inc
adc
imul
xchg
lcall
sub
jecxz
sbb
dec
sub
push
js
clc
cmp
adc
shrb
sbbb
cmp
subl
ja
jnp
aam
push
icebp
imul
iret
movsb
adc
cmp
jno
andb
sub
mov
scas
fs
cmp
les
out
iret
mov
add
inc
dec
push
inc
sbb
pop
ss
outsl
outsl
jne
fisubrs
mov
add
adc
lods
fnclex
shll
mov
xchg
jecxz
out
insl
dec
pop
test
dec
dec
pop
mov
or
mov
pop
pop
jmp
and
mov
rolb
inc
xchg
pop
sbb
stc
in
sahf
pop
nop
and
sbb
jle
out
add
dec
pop
dec
mov
lds
sbb
subb
rcll
add
cmp
fnstsw
mov
push
in
xor
vmwrite
jl
enter
dec
test
fadds
dec
out
sti
jl
aas
jo
and
inc
jae
jle
xor
call
mov
cld
lea
dec
sub
cmp
cmpsl
inc
ja
xchg
mov
cli
lcall
int3
jns
and
test
jecxz
imul
push
push
repnz
pop
inc
cmp
pop
orl
aas
aas
clts
xchg
jbe
ss
daa
js
mov
lods
ret
mov
adc
dec
push
popf
gs
bound
cmpsl
xchg
cmp
cmc
mov
pop
and
movsb
inc
sbb
cmp
enter
pushf
gs
add
mov
jns
lcall
jnp
aad
pop
mov
popf
jl
jo
jnp
sbb
pop
movsb
xchg
inc
mov
inc
jl
divl
ffreep
lods
lahf
das
imul
pop
jecxz
push
cmp
pop
xchg
sbb
lock
jo
push
sub
or
test
mov
arpl
aam
mov
les
mov
shr
pop
das
cltd
loop
test
out
test
push
dec
jl
cli
mov
mov
rcr
inc
imul
mov
sbb
ss
xchg
inc
lahf
push
xor
xchg
mov
sti
and
xchg
sub
gs
mov
add
xchg
mov
cmp
dec
sbb
scas
outsl
jge
xor
and
adc
sbb
femms
out
fcoml
jecxz
jbe
ret
dec
cs
add
in
cs
sub
gs
xchg
mov
xor
sar
mov
icebp
fstpl
inc
call
and
mov
xchg
out
cmp
mov
lcall
dec
dec
lret
das
jl
repz
arpl
out
jmp
dec
subb
stos
lods
inc
and
dec
pop
jl
outsb
je
sub
jg
fldt
fldenv
and
dec
adcl
mov
int3
sub
popa
lahf
cwtl
sbb
or
imull
mov
jle
fs
repz
popf
aad
arpl
jnp
in
cmp
adc
pop
mov
cwtl
arpl
aad
mov
fisubs
mov
add
fisttpl
movsb
and
mov
cmp
dec
dec
cmp
mov
xchg
xor
hlt
xchg
xor
jmp
pop
cmpl
xchg
add
dec
push
cmp
mov
and
in
mov
xlat
mov
lock
xchg
addb
ret
movsl
jbe
cmpsl
pop
mov
out
fildll
rcrl
jb
scas
imul
xchg
or
sub
cmp
push
repz
lahf
add
adc
rorl
push
cld
repnz
gs
aam
xor
movsl
lods
push
push
int
dec
lret
mull
es
jb
inc
jbe
mov
mov
xlat
xchg
jmp
outsl
push
pop
or
enter
icebp
in
or
cmp
or
mov
outsb
and
fwait
cwtl
in
sbb
bound
les
inc
xchg
add
ret
test
push
mov
mov
adc
es
add
jecxz
outsb
push
inc
and
add
sub
shlb
insl
adc
aad
hlt
pop
int
xchg
hlt
inc
inc
daa
lods
cmp
push
add
ljmp
out
adc
inc
mov
rclb
inc
cmp
insl
or
orps
push
sub
mov
int3
int3
add
push
add
imul
iret
je
adc
cmp
jmp
in
xchg
sbb
loopne
xchg
push
pop
loop
or
sub
dec
mov
inc
sub
lret
inc
in
inc
test
cmp
sbb
or
sub
sti
add
scas
inc
stos
add
les
mov
stos
push
or
iret
adc
or
jg
and
inc
mov
xchg
sahf
int
rcr
fcoms
movsl
repz
mov
mov
stos
dec
test
mov
dec
ds
imul
clc
mov
mov
push
add
xlat
jns
sti
dec
cwtl
mov
dec
push
xor
jecxz
arpl
lods
push
xchg
mov
push
iret
inc
pusha
lods
jns
mov
xor
mov
or
mov
imul
mov
sbb
dec
int
std
and
sbb
stos
les
movsb
int
stos
mov
and
dec
xchg
mov
or
test
push
mov
test
mov
jmp
imul
pop
push
inc
test
out
cmp
fwait
push
stc
std
mov
mov
js
int3
sbb
mov
jns
sub
ds
rorl
push
pusha
lock
or
out
jecxz
popa
mov
hlt
out
je
rolb
jl
addl
lock
jl
pushf
dec
pop
lock
sub
adcb
movl
pop
inc
in
adc
nop
mov
jmp
outsl
std
add
scas
add
out
xor
xor
ret
or
sarb
outsb
inc
xchg
add
add
ja
nop
and
les
stos
inc
inc
xor
cmpsb
xor
push
mov
ss
shrb
popa
fcmove
add
arpl
and
cmp
push
out
cmp
push
jecxz
mov
out
push
aaa
rorl
xor
and
mov
adc
pop
xchg
mov
dec
xchg
sub
aaa
shl
and
nop
pop
cwtl
rcll
or
into
mov
pop
clc
shll
je
mov
mov
add
mov
inc
or
fsts
aas
sbb
rcll
jle
repz
js
xchg
push
mulb
nop
push
mov
movsl
mov
sar
loope
rcrl
stos
and
xor
adc
jmp
in
jbe
jb
je
out
aaa
fnstsw
push
dec
daa
xchg
loope,pn
pop
inc
push
jb
lcall
int3
aaa
shll
pop
mov
out
mov
sub
push
sub
pop
sbb
jecxz
nop
xorl
andb
cmpsb
sbb
scas
push
push
sbb
fildll
daa
adc
or
adc
push
stc
jg
jb
pop
or
fistl
add
int
mov
xor
int3
imull
sbb
xor
and
aaa
je
imul
and
or
loopne
gs
sbb
jne
adc
enter
pop
cmpsb
mov
or
cmp
test
and
and
sub
sub
movsl
shll
scas
and
enter
push
jae
inc
outsl
icebp
pop
push
jb
stc
xor
push
mov
fadds
in
inc
pusha
test
ds
shrb
sahf
mov
mov
and
lcall
inc
les
sti
fadds
add
and
movsb
nop
mov
adc
stc
adc
mov
add
test
push
fld
lahf
rcrb
ret
cmp
insb
outsl
xchg
inc
mov
loope
dec
pop
sbb
cmp
fimuls
call
add
cltd
mov
enter
jb
inc
push
shll
js
push
or
loope
jb
inc
push
ja
fs
test
xchg
push
fsubrs
inc
jno
gs
pop
mov
push
pop
call
daa
mov
mov
std
pop
mov
out
insb
add
es
cld
stos
jo
adc
pop
sbb
xor
jae
jno
xchg
pop
imull
mov
ret
mov
mov
pop
xor
mov
pop
sarb
mov
in
xchg
xor
rclb
sub
cld
gs
add
pop
mov
and
pop
fdivr
jge
cmp
popl
scas
out
lods
mov
pop
or
mov
sbb
sbb
cmpsb
dec
xchg
popa
inc
std
divb
jge
repnz
push
push
bound
aas
pop
repnz
xor
lds
pop
lahf
xor
les
jne
push
or
ja
sbb
inc
mov
pop
cmc
lcall
in
repnz
sub
pop
push
sbb
mov
or
fwait
call
ret
dec
or
mov
pop
jmp
adc
popf
pop
and
daa
jmp
outsl
cmpsb
test
lods
jb
mov
pusha
es
sbb
mov
scas
xor
mov
ss
push
enter
in
sub
cmp
mov
mov
fisubl
in
lret
mov
push
test
fildl
pushf
mov
je
adc
and
fsubl
outsl
movsl
add
rolb
mov
cmp
mov
sub
sar
shlb
cmpl
inc
sahf
sub
loopne
sar
cmp
test
cli
imul
out
lock
dec
stos
xlat
cmp
xlat
stc
xchg
sub
popa
mov
ds
sbb
in
push
adc
sub
add
xchg
jo
cmp
ds
xchg
repnz
mov
mov
clc
iret
in
lcall
and
pop
out
mov
lret
lods
cmpb
inc
scas
cmp
push
addl
xchg
test
sbb
bound
and
and
sub
cmp
cmp
decb
dec
sbb
inc
pushf
sub
pop
fisubrl
adc
xor
in
jne
js
jns
or
std
lret
fldt
inc
in
int
cmpsb
movsl
sub
aad
dec
stc
adc
stos
mov
xor
or
outsl
push
mov
nop
cmpsl
out
and
pop
scas
movsb
mov
mov
negb
jg
mov
sbb
or
sti
aaa
lock
ret
js
ret
cli
xchg
pop
sbb
cmp
fcomip
adc
enter
dec
lods
stos
pop
ljmp
cmp
cmpsl
xchg
in
fwait
pop
pop
xor
shrl
loop
icebp
cld
cmc
mov
xchg
adc
movsl
mov
lods
xchg
xor
in
add
fisubrl
lods
add
push
sbb
add
adc
pop
sub
adc
int
les
xlat
mov
sbb
mov
push
sub
xchg
mov
mov
pusha
out
std
into
pop
sahf
dec
fmul
dec
push
and
add
sbbl
mov
mov
jmp
mov
popa
subb
inc
lock
pop
addr16
adc
out
pop
test
mov
adc
or
mov
inc
sbb
out
push
aam
jmp
imul
hlt
ss
cmp
inc
adc
data16
adc
push
repnz
sti
mov
push
scas
ret
jae
shll
xchg
mov
out
icebp
jge
cmpsl
and
add
mov
pushf
xchg
mov
sbb
not
sbb
or
cmp
aaa
push
and
push
sbb
outsl
xor
mov
sub
sub
mov
stos
pusha
mov
js
cmpsl
mov
add
ret
aam
orb
out
sbb
stc
xor
repnz
sti
dec
mov
cmc
movsb
mov
imul
mov
adc
dec
fdivr
dec
aas
mov
arpl
mov
xchg
fbstp
into
and
adc
fcmovu
adc
rol
movsb
jb
insb
push
xchg
rcll
adc
popa
cmp
sub
cmc
dec
push
xlat
and
fcoms
xchg
dec
mov
cmp
cmp
aas
dec
fs
test
inc
in
sub
lock
ljmp
lahf
xchg
clc
cltd
push
xchg
push
les
mov
or
je
aaa
hlt
repnz
adc
pop
inc
and
and
inc
fsubs
and
push
mov
hlt
es
stos
push
rorb
flds
xchg
dec
enter
and
xchg
jno
or
dec
mov
mov
hlt
movsb
jecxz
lds
cltd
jecxz
pushf
les
bound
add
les
xlat
inc
xchg
loop
mov
dec
clc
jo
lret
pushf
cmc
push
xor
push
jne
fnstenv
mov
ja
push
rorb
and
jg
or
sar
inc
adc
mov
mov
pop
lahf
pop
dec
adc
mov
jb
adc
fldl
push
je
icebp
xlat
test
add
push
push
movsl
stos
jb
test
pop
adc
mov
sub
xchg
mov
xlat
inc
lret
dec
cld
jno
push
into
mov
nop
sub
push
int
jae
xor
mov
out
cmp
cmc
fsubl
xchg
jne
data16
or
fcoml
aad
imul
jle
push
sub
pop
mov
popf
push
fsubl
enter
lret
xchg
inc
call
cli
add
xlat
dec
mov
int3
mov
jne
mov
nop
stos
add
sub
push
ficoml
imul
dec
popa
test
jne
push
loopne
cmp
mov
xchg
adc
leave
hlt
jne
das
addb
cmp
loop
hlt
in
pop
cmc
lret
sub
cmp
mov
jbe
stc
push
call
mov
dec
mov
jl
sub
out
mov
push
test
xor
sub
nop
addr16
and
insb
outsb
dec
test
add
cmp
ret
pop
inc
roll
aaa
adc
je
mov
cmc
in
jecxz
and
sbb
rolb
gs
mov
repnz
jmp
leave
or
repnz
sbb
bound
mov
ficoms
mov
xchg
cli
fs
add
rcr
lods
fdivs
sbb
stos
sbbl
push
imul
dec
or
cmp
sbb
clc
mov
lahf
sub
xor
add
jge
mov
sbb
mov
shll
jle
mov
out
mov
test
jnp
dec
adc
push
arpl
fildl
popa
jb
jae
loop
inc
dec
stc
mov
mov
jp
sub
cmp
jmp
sub
inc
lcall
out
sub
mov
and
cmc
mov
andl
pop
mov
jns
stc
in
add
mov
sbb
mov
jae
mov
mov
inc
dec
mov
daa
mov
jecxz
test
lcall
mov
add
push
lock
sti
and
jo
cld
std
cmpsb
ljmp
es
inc
jbe
test
push
xor
pushf
mov
xor
and
loopne
xlat
lock
push
and
or
mov
ret
mov
cmpsl
sub
ljmp
sbb
mov
cltd
int3
dec
jle
repz
cmp
popf
lret
subb
xor
xor
in
dec
ljmp
sub
jl
scas
cmp
rorl
fildl
mov
icebp
mov
lds
mull
rorb
pusha
insl
lea
or
stc
push
stc
pop
mov
mov
or
andl
out
or
stos
sbb
inc
sub
out
xchg
pop
stos
sbb
cmp
inc
add
and
fsts
aas
inc
hlt
mov
pop
pusha
jl
sub
fidivs
into
inc
jne
enter
clc
jae
mov
cmp
adc
mov
pushf
std
ret
xor
in
push
loop
cmp
jnp
xor
push
out
out
mov
test
ja
rol
pop
adc
push
inc
push
sahf
popl
inc
mov
push
dec
jg
cmp
jle
es
loopne
cld
addr16
pop
push
movsl
mov
repz
je
push
bound
in
adc
add
inc
dec
and
ret
pop
xchg
loop
aam
dec
cmpsb
mov
mov
push
dec
adc
rorb
mov
xor
xlat
sub
xor
lds
in
jo
jge
in
xor
divb
insl
clc
imul
mov
jmp
in
cmp
jecxz
movsl
jg
stos
icebp
pop
mov
mov
push
bound
subb
test
push
xchg
aas
cmp
in
pusha
into
pusha
jmp
insl
xchg
inc
push
or
inc
outsb
es
outsb
inc
fcoms
xor
jne
jbe
fstl
sub
arpl
adc
pop
push
rcr
scas
mov
push
adc
out
pop
sti
int
xchg
and
adc
inc
add
mov
sbb
cmc
xor
test
add
mov
mov
add
mov
adc
hlt
sub
push
js
or
jns
inc
iret
int
dec
push
in
push
sub
movsb
dec
jne
loope
adc
add
clc
scas
loope
scas
les
mov
jne
aaa
orb
add
popf
mov
xor
std
out
je
sub
mov
les
orb
push
lea
mov
mov
inc
sarb
shlb
sub
loopne
xor
adc
xchg
jae
rcrb
sbb
in
xorb
lahf
cmp
jge
out
sbb
bndstx
pop
fists
push
mov
movsl
movsb
xor
and
xchg
fdivrs
fildl
xchg
jno
movsl
xor
and
repz
dec
nop
mov
dec
cltd
mov
and
xor
sbb
xlat
daa
sbb
outsb
sbbb
push
lret
jmp
dec
cmp
shlb
scas
lahf
pop
mov
xchg
cli
push
dec
in
xchg
int
mov
xor
mov
fldenv
or
sbb
jns
and
sub
mov
sahf
pop
sbb
cmc
or
subb
xor
pop
mov
add
add
push
push
mov
xchg
cld
push
std
mov
pop
mov
inc
lret
lds
and
add
lahf
inc
xor
mov
cmp
rcl
sub
cmpsl
push
ret
sbb
adc
in
mov
or
aad
roll
jo
aaa
push
mov
int3
adc
add
ss
shl
cwtl
imul
xchg
or
or
mov
sbb
cld
xor
push
scas
in
push
jmp
and
and
aaa
mov
adc
push
push
cmpl
bnd
sti
shlb
fcmovnbe
adc
or
xor
inc
add
or
mov
outsb
xchg
in
xor
lret
mov
and
adc
xor
bound
loope
inc
fnstsw
xor
test
cmc
mov
rorl
mov
mov
add
scas
cmp
addb
subl
xor
out
or
jl
xchg
xchg
pop
mov
cmp
jg
mov
int
sti
clc
lods
jo
test
dec
std
in
pusha
mov
and
rcrl
cmpsl
jbe
scas
adc
mov
lahf
add
pusha
sub
push
adc
pop
shrb
test
ljmp
in
mov
iret
mov
pop
test
into
cld
add
subb
mov
out
sbb
push
xor
xchg
and
sbbb
add
in
dec
mov
inc
ss
test
mov
pop
xchg
cmp
hlt
repz
add
fcoml
ret
stc
jecxz
clc
adc
addb
sub
inc
add
cmp
sbb
shlb
call
pop
push
clc
popf
xchg
mov
clc
jns
enter
repnz
in
mov
and
rol
jns
mov
shlb
or
pop
inc
adc
or
xor
adc
pop
cmc
mov
cmp
subb
cltd
fwait
scas
sub
fxch
adc
push
sahf
ret
xchg
ljmp
push
outsl
mov
push
movsl
je
je
aam
jno
shrb
shlb
lods
inc
inc
and
xchg
das
lret
in
add
mov
dec
cmpsl
xor
jns
movsl
in
dec
xorb
lret
lock
jmp
sahf
pop
mov
arpl
inc
vmread
cs
jp
fadds
sti
ss
mov
popf
and
ret
lret
hlt
inc
pop
fldl
outsl
pop
sti
loope
mov
xchg
int3
les
mov
sbb
cmp
fists
pop
cmpsb
xchg
subb
out
jle
sti
push
add
ljmp
sti
add
dec
mov
lahf
icebp
xor
xchg
mov
push
insb
imul
and
inc
out
mov
dec
scas
or
mov
xor
add
lock
jge
xchg
push
pushf
loop
leave
mov
mov
mov
movsl
cmpsl
add
out
xchg
xchg
push
push
lret
pusha
aas
or
push
popf
sarb
and
mov
cld
cmp
adc
sub
sub
lret
lds
lds
ret
jp
cwtl
xchg
and
mov
push
push
mov
addl
arpl
inc
jne
sub
shrb
mov
mov
xchg
call
pop
out
xchg
cwtl
out
jecxz
add
push
pusha
clc
lahf
clc
inc
add
enter
add
adc
adc
fidivs
mov
xor
cwtl
imul
adcb
testl
lds
test
cmc
int3
das
pop
rorw
ret
jno
outsb
popf
rcrb
pop
std
sbb
out
notb
mov
mov
lock
mov
mov
addr16
ret
jg
sub
cmc
fmull
mov
movsb
adc
fwait
xor
loopne
xor
iret
pushf
sbb
mov
faddp
sbb
movl
xchg
loope
jp
cmp
mov
outsl
fstl
cmp
test
jg
sub
jg
orb
mov
std
and
aas
jns
aaa
into
xchg
cmp
add
or
mov
xlat
in
and
mov
xor
or
and
insb
bound
out
inc
daa
mov
xor
mov
sub
or
cmp
dec
ja
das
and
aas
out
pop
inc
nop
mov
dec
push
push
xor
loope
jmp
mov
mov
nop
jno
mov
rolb
dec
sub
outsl
test
xchg
popf
xor
rorl
xor
push
push
aad
mov
dec
add
add
les
subl
push
ret
pop
scas
or
fildl
xchg
push
jns
xchg
sub
js
or
inc
add
insb
mov
pushf
xlat
and
xor
mov
push
std
in
sbb
xor
jmp
pushf
mov
sbb
ds
scas
mov
xor
sub
leave
cmp
jp
into
dec
call
ljmp
xchg
in
jmp
arpl
fcomp
popa
and
mov
xchg
push
jp
and
sbb
rcr
cmpsl
sub
xchg
jb
mov
mull
mov
push
dec
ds
mov
mov
sbb
sub
and
repnz
pushf
dec
pop
sub
ds
lds
roll
jns
inc
and
push
fdivs
pop
xor
jecxz
push
mov
and
jecxz
lahf
cmc
negl
sub
test
ss
rolb
mov
fisttpl
ret
add
stos
jne
adc
pop
or
adc
cmpb
mov
add
xor
sbb
stos
sbb
inc
pusha
nop
cmp
fdivs
xchg
gs
jp
mov
mov
fdivrl
push
pop
aam
mov
or
mov
add
fbld
jnp
mov
insl
lea
cmp
pop
aas
xchg
jb
addr16
sbb
cltd
mov
mov
push
xor
outsl
ljmp
xor
stc
cmp
cmp
sub
lcall
test
test
jo
xchg
or
aam
lcall
outsb
loopw
sbb
mov
or
mov
test
jns
inc
xchg
inc
dec
insb
dec
mov
adc
movb
sbb
lret
data16
xchg
inc
pop
fisubl
mov
jnp
jne
push
cld
xor
xchg
push
cs
adc
sbb
push
inc
mov
push
imul
rolb
in
test
pop
int
jo
and
inc
pop
adc
das
orb
add
sbb
fadds
loop
int
push
ret
jmp
mov
push
int3
out
fnop
bound
pop
loop
cmp
push
push
mov
xchg
xchg
fsubrl
mov
addr16
fucomp
stos
ficomps
sub
nop
inc
or
stc
pop
shrb
mov
enter
data16
jno
mov
xor
shlb
popa
fdivp
xchg
push
insl
or
jmp
push
xchg
enter
sbbl
or
xor
jmp
cmpsl
aam
mov
mov
gs
aam
cmp
sbb
rorl
lds
je
add
sbb
movsb
cmp
add
pop
std
xor
shlb
sub
add
dec
xor
inc
pusha
jmp
or
out
dec
rorb
or
pop
dec
outsl
xchg
pop
add
adc
outsl
cmp
outsl
dec
jns
pop
or
push
mov
int
jl
add
not
jo
xchg
or
stc
jecxz
inc
mov
inc
inc
push
fsubl
fsts
cmp
inc
ds
ljmp
nop
dec
xchg
or
packuswb
or
and
mov
jecxz
ret
pop
xchg
xor
push
out
les
sarl
jno
mov
in
lret
loope
pop
je
mov
pop
inc
xchg
cmpsl
out
add
imul
dec
xor
loope
dec
hlt
lret
adc
fst
add
jle
inc
push
loop
shlb
xchg
pop
sbb
mov
cmpsl
mov
cmp
je
dec
dec
adc
js
sbb
loope
rorb
div
aad
add
xchg
or
loop
addr16
sub
sbb
mov
adc
xchg
xchg
sbb
jg
test
adc
xchg
sbb
js
mov
mov
jl
test
notb
out
movsl
arpl
out
icebp
xchg
jg
xchg
mov
mov
in
lock
xchg
testl
inc
sahf
and
sbb
mov
adc
das
inc
arpl
push
stc
pop
adc
or
ret
add
int
test
or
gs
je
aam
subl
ficoml
insl
call
add
in
mov
movsl
lock
enter
arpl
adc
add
fidivs
ja
xchg
frstor
sahf
adc
adc
outsl
push
jmp
inc
xchg
loopne
and
mov
jb
shl
adc
insb
fmull
loop
out
int
mov
inc
mov
dec
and
mov
push
outsb
inc
mov
std
int3
mov
jnp
pop
jb
outsl
iret
leave
sbb
fcompl
es
insl
sbb
nop
test
scas
cmp
std
pop
loope
or
cmpsb
dec
push
or
jae
xchg
xor
cmc
rcl
popf
mov
lock
loopne
add
bound
icebp
test
out
in
pop
movsl
add
ret
push
aad
insb
jp
jns
mov
loopne
das
inc
cli
popf
mov
add
and
mov
push
sub
lods
pop
in
push
mov
mov
xor
sub
out
jnp
fdivs
insl
mov
or
mov
sbb
mov
sti
dec
cmp
push
pop
das
imul
sub
lcall
das
sbb
cltd
daa
xchg
fmull
in
mov
into
aam
xor
and
insb
in
cmpsl
pop
xlat
lock
lret
mov
nop
xchg
hlt
xor
ja
addr16
pop
in
hlt
mov
pop
test
sub
arpl
in
imulb
cs
dec
icebp
push
mov
cmp
mov
aaa
shlb
xchg
pop
outsl
push
adc
mov
cmpsb
or
loope
xchg
jp
aaa
and
lock
outsb
rcrl
push
lods
mov
jmp
adc
cltd
xor
lods
mov
or
sbb
pop
sbb
pop
mov
lret
repnz
xchg
xacquire
pop
arpl
cwtl
dec
sbb
repnz
jecxz
xchg
xchg
jbe
xor
dec
push
jp
jl
inc
cmp
xor
rcll
aas
sbb
dec
jmp
adc
mov
movsl
cmp
ds
xlat
xor
fwait
xor
iret
or
test
or
adc
movsl
cli
data16
lret
inc
hlt
adc
mov
notb
fsubs
jle
orl
je
dec
dec
test
ss
sub
roll
xor
roll
nop
mov
cld
stos
gs
jns
mov
cmpsb
adc
js
mov
call
or
pop
leave
ret
inc
push
fdivs
pop
movsb
sahf
inc
rcll
fsubr
testl
and
aad
fstl
les
pop
popa
xlat
fadds
int
mov
outsb
mov
xchg
int
pop
aas
in
loope
mov
test
inc
enter
sbb
in
pop
loope
les
cmp
fstpt
hlt
mov
inc
inc
xchg
mov
pop
sbb
mov
jns
cmp
adc
fcompl
mov
in
xchg
mov
mov
cmp
push
jmp
pop
fidivs
imul
mov
nop
mov
or
test
addr16
lea
insl
jb
xor
adc
dec
aaa
repz
icebp
dec
roll
jo
inc
xchg
scas
aad
into
dec
mov
mov
mov
cmp
int3
call
mov
sbb
pushf
add
cmpsb
dec
cmp
adc
pop
sbb
clc
cltd
push
mov
mov
mov
rsm
xchg
pop
popa
push
mov
pop
sbb
cld
stc
mov
imul
mov
aad
xor
sbb
out
imul
xor
repnz
mov
mov
int3
scas
sub
xchg
stos
orl
add
ret
inc
insb
mov
xor
xor
pop
std
addr16
dec
add
jae
xchg
sub
fcoms
fimull
xor
test
test
sub
mov
ljmp
add
mov
std
add
hlt
hlt
cmpsl
mov
sarl
pcmpeqw
sbb
and
pop
inc
sti
sbb
or
jle
repz
icebp
fmull
cmc
test
scas
xchg
in
mov
push
xor
test
lahf
xchg
andb
mov
mov
mov
push
cs
mov
nop
cmp
sub
es
in
push
loopne
push
fcomps
outsl
push
outsl
mov
xchg
add
adc
lahf
roll
aam
mov
jno
fiadds
outsl
and
jge
bnd
adc
ret
xor
xor
and
push
call
arpl
push
xchg
jns
cmp
xchg
pop
enter
fwait
cmpsl
jae
daa
out
mov
inc
imul
dec
popf
cld
das
pushf
stc
stos
xor
adc
mov
mov
ret
sub
repnz
or
fstl
jg
pushf
hlt
adc
inc
jge
jmp
sub
inc
jnp
adc
mov
push
mov
shrl
mov
lcall
sbb
xchg
push
adc
insb
je
push
or
stc
inc
jle
mov
mov
and
push
aas
pop
out
shll
jmpw
inc
fs
or
xor
in
aam
imul
sahf
xor
jg
add
and
mov
push
mov
fs
mov
add
fbstp
mov
lods
out
sub
mov
mov
jmp
adcb
roll
insl
fimull
mov
les
push
sub
loopne
lret
jo
add
cmp
icebp
mov
xchg
mov
mov
mov
cmp
arpl
int3
out
cmp
add
lahf
imul
mov
mov
in
dec
push
or
mov
and
pop
lods
sub
stos
inc
pushf
divl
xchg
mov
xchg
scas
dec
test
clc
pop
sbb
mov
aad
scas
xchg
roll
in
mov
daa
push
arpl
xchg
fstps
and
data16
jbe
mov
std
inc
ret
sub
xlat
adc
clc
jmp
hlt
xchg
jecxz
les
adc
std
ja
inc
ljmp
dec
rcrl
lock
cltd
xchg
xchg
jg
cli
aad
out
and
push
fisubrl
stos
inc
xchg
inc
mov
push
push
pop
push
dec
jns
jbe
dec
es
fldl
popf
loop
lahf
mov
sahf
bt
cmpsb
icebp
push
inc
call
jmp
jb
sbb
add
lahf
or
ret
lea
push
jge
aas
push
adc
pop
shlb
shl
dec
mov
mov
push
cli
sub
movb
xor
test
mov
dec
loop
test
js
or
rorl
add
xor
fs
xchg
sbb
sub
dec
into
cmp
jp
das
pop
loopne
sbb
jns
lret
adc
lahf
sbb
sbb
mov
movsl
cmp
cmp
jecxz
and
sub
jmp
sub
mov
jecxz
jp
jne
xchg
je
popf
dec
incl
incl
xchg
rclb
cmp
nop
mov
js
push
ss
push
and
in
xor
and
xor
fidivrl
sub
out
inc
cmpb
adc
icebp
xor
jae
sub
mov
mov
mov
push
not
lret
xor
adc
jl
stos
add
xchg
fstl
or
xor
repz
cmp
mov
dec
outsl
push
sub
pop
mov
sub
dec
cld
call
icebp
jmp
jp
adc
mov
sbb
sti
nop
mull
sub
or
nop
stos
dec
int3
ds
arpl
and
stos
rolb
pop
inc
push
fwait
push
ja
cs
push
cs
push
pop
call
and
and
xchg
xchg
jne
sub
xchg
push
stos
xchg
es
mov
add
ds
lock
mov
jns
nop
add
sahf
add
into
or
fwait
mov
mov
movsl
mov
lret
out
xlat
xchg
aam
xchg
or
aas
add
data16
add
es
repnz
fadd
pop
inc
repnz
lcall
into
sub
enter
mov
push
inc
es
ja
xor
xlat
sub
inc
add
pop
out
sbb
pusha
sub
add
lret
add
adc
or
jno
cmpsl
xor
jl
lock
aaa
xor
xchg
nop
push
pop
popa
test
scas
lcall
push
inc
and
fistl
adc
sbb
nop
cmpsl
jnp
sbb
cwtl
dec
cmp
test
jp
mov
fisttps
and
xor
vmovaps
pop
arpl
inc
clc
test
jp
test
xlat
or
out
rolb
aas
sub
sbb
cmp
faddp
lret
and
lods
into
lock
xchg
ljmp
pop
push
fisttps
push
jne
js
adc
jne
or
and
fadds
loop
pop
mov
xorl
sar
dec
fdivs
not
andb
movups
adc
cwtl
or
enter
pushf
mov
xor
cwtl
sub
jge
mov
popf
addb
je
mov
cmp
jae
jg
cs
loope
daa
data16
adc
sub
outsb
movsl
out
cmp
aam
adc
sub
jb
jo
xchg
add
sub
and
std
xlat
push
sbbb
insl
dec
scas
insl
ja
dec
mov
fwait
sub
lahf
push
mov
shlb
push
and
jle
sbb
pop
push
pop
stc
mov
loopne
in
addr16
je
push
pop
sub
jecxz
enter
nop
enter
adc
cmp
push
fnstcw
adc
ds
fsubl
mov
push
lret
test
dec
cmp
add
xor
fistpll
or
in
sub
test
xor
leavew
fiadds
testl
add
pusha
ljmp
lcall
iret
push
in
repz
jbe
add
hlt
mov
idiv
jg
mov
int3
inc
sarb
shrb
hlt
dec
sub
aad
push
dec
jmp
sub
push
add
dec
pop
xor
mov
add
iret
jg
push
or
add
jb
push
gs
sub
push
aad
sahf
xchg
push
test
jae
cs
xorb
mov
lahf
iret
addr16
mov
push
dec
pop
ds
fst
lret
jge
xchg
adc
addb
pushf
push
cmp
adcl
out
and
pmullw
pushf
mov
or
dec
daa
sub
fwait
lcall
int3
aad
orl
out
cmpsb
je
inc
addb
sbb
sub
addr16
xor
mov
ret
xorl
cmp
adc
jl
out
inc
ss
adc
in
jle
movl
sahf
daa
in
aaa
ss
negb
in
leave
fisubrs
and
push
ds
cmp
pop
mov
pop
xor
pop
outsl
inc
data16
push
mov
cmp
jbe
mov
test
into
cwtl
fwait
std
scas
mov
movsb
hlt
cwtl
lds
js
rcll
jecxz
loop
test
cmp
inc
dec
adc
mov
pop
leave
mov
mov
push
jge
popa
pop
scas
ficompl
dec
xor
cmp
add
mov
stc
and
xchg
subl
or
loopne
cmp
test
mov
aam
mull
clc
push
xchg
and
mov
jp
outsl
nop
loop
and
inc
mov
dec
mov
jbe
addr16
jnp
pop
popf
stc
pop
insb
cli
repnz
mov
in
xchg
and
jnp
inc
sbb
hlt
mov
jg
fwait
jecxz
inc
cmpsl
loope
leave
jecxz
pop
mov
stos
inc
divb
mov
std
movsl
add
dec
sub
adc
adc
in
inc
or
dec
push
sub
cmp
or
mov
or
jp
xchg
xlat
inc
xchg
les
or
push
insl
mov
xchg
loopne
inc
mov
mov
or
popl
mov
fldt
mov
pushf
mov
out
incl
setnp
out
addl
pop
push
mov
sbb
orb
lret
mov
pusha
bnd
pop
mov
insb
leave
pop
out
dec
push
mov
pop
push
jmp
imul
dec
add
adc
inc
xorl
mov
cmp
and
cmpb
mov
dec
imul
xor
push
jl
scas
mov
xchg
lds
mov
std
mov
push
pushf
rcrb
push
mov
sub
das
cwtl
mov
call
popf
ficompl
hlt
jns
mov
lods
loopne
mov
lds
adc
mov
cld
data16
or
push
movsb
or
mov
in
and
add
lcall
sub
ss
pop
test
lods
arpl
shrl
adc
insb
addr16
out
pop
sub
mov
dec
das
push
adc
xor
data16
pop
inc
inc
shrb
push
inc
cmp
insb
mov
jmp
cmp
lret
or
icebp
loopne
xlat
pusha
and
pop
push
xchg
push
sti
lods
imull
jl
mov
and
mov
mov
in
lods
and
lcall
or
xchg
lock
imul
mov
rcl
pop
cld
fisttps
jecxz
adc
scas
sahf
sbbl
sbb
sbb
cli
fwait
jbe
out
and
and
aam
iret
dec
sti
nop
cwtl
jmp
sbb
out
xchg
push
lcall
pop
xorl
movsb
pop
std
outsl
push
into
mov
imul
xor
scas
test
sti
push
das
orb
mov
xchg
ja
leave
push
cmp
dec
out
or
jno
push
shll
mov
aas
pslld
mov
test
das
das
add
jle
or
push
and
sarb
test
add
jl
mov
ficoms
repz
mov
mov
adc
inc
in
inc
enter
push
lret
push
mov
outsl
aas
lahf
push
adc
xchg
into
ss
aad
pop
pop
push
jno
nop
sub
mov
movsb
add
jbe
and
lods
mov
or
adc
pop
mov
dec
out
fwait
xor
pop
pop
mov
xchg
mov
stos
xchg
out
cld
test
mov
push
jecxz
add
pusha
lea
push
mov
outsb
mov
das
dec
xor
mov
jmp
pminub
repz
sbb
nop
xchg
push
outsb
lret
repz
cmp
dec
ss
inc
cmp
aas
mov
insl
sub
neg
pop
push
mov
divb
iret
ljmp
jge
clc
push
mov
xchg
mov
test
lcall
dec
ds
pop
push
inc
mov
jno
lcall
inc
mov
cmpsl
scas
xchg
adc
dec
xchg
adc
push
inc
cmc
out
and
fsubr
pop
jne
add
adc
sub
stos
in
and
mov
xor
inc
adc
aas
mov
cli
cli
outsb
sbb
xchg
jecxz
jb
std
mov
mov
adc
sub
adc
xor
in
inc
das
ljmp
in
jne
ret
push
lds
jmp
stos
adc
aaa
lods
sbb
sub
jne
rolb
xchg
popf
test
repz
pop
mov
cs
out
mov
push
pop
cmp
test
jl
ja
icebp
mov
repz
sarl
aas
pop
and
mov
adc
dec
mov
loopne
scas
mov
negb
jmp
dec
dec
arpl
xchg
jge
inc
or
pop
jns
or
into
insl
hlt
mov
and
fcompl
ljmp
cmp
jb
enter
loope
mov
dec
xchg
je
rol
movsl
jl
bnd
repz
mov
jae
fs
push
xlat
xor
fldcw
xchg
and
jle
into
mov
jecxz
lret
shrl
icebp
cmpsb
dec
push
daa
push
add
dec
sub
fcmovnbe
out
jge
push
xor
jg
jns
aad
mov
cmp
arpl
lods
sti
xchg
lahf
in
ffree
push
xchg
aad
ficomps
inc
imul
lcall
jge
scas
pop
cmp
jne
fsubrs
mov
leave
fwait
adc
xchg
push
push
mov
je
dec
in
pop
aaa
sarb
aam
dec
pop
or
cltd
pop
sub
stc
and
mov
mov
insb
pop
adc
or
jbe
outsb
movsl
mov
push
adc
lea
xor
inc
mov
or
pop
andl
adc
cmpsl
lcall
xlat
inc
pop
mov
mov
out
sbbl
movsb
jno
add
shrl
loopne
cli
mov
jb
or
pop
fdivs
dec
inc
stos
les
cmp
test
add
jl
fs
mov
mov
jb
jb
push
adc
xor
jbe
cmp
scas
xor
dec
pusha
call
das
icebp
jmp
mov
sbb
mov
ds
xor
cmp
stos
add
mull
inc
aam
cmp
mov
movsl
push
ljmp
push
lret
or
cmp
mov
push
and
dec
sbb
int3
adc
or
inc
dec
in
lret
insb
hlt
into
pusha
adc
sahf
mov
add
jge
in
dec
insl
adc
stos
sub
mov
and
lea
push
inc
mov
xchg
xchg
jne
xlat
adc
mulb
rolb
dec
jns
push
xor
bound
fstl
jbe
cmp
adc
dec
mov
xchg
adc
push
pshufw
mov
and
rorb
data16
and
shll
lods
bound
cmc
fistpl
icebp
jno
adc
stc
lea
push
jo
repz
cltd
sub
xchg
mull
icebp
fldenv
jb
xor
mov
outsl
and
inc
lahf
push
lock
mov
xor
xchg
in
out
and
push
imul
inc
jp
imul
jle
inc
pop
fdivs
xchg
test
arpl
sub
dec
sub
fidivrl
or
jae
xchg
cli
sub
fs
outsb
xor
sahf
stc
ficoml
mov
xor
aad
mov
and
add
add
movsb
adc
into
jecxz
xchg
mov
sub
pop
inc
inc
push
lods
push
mov
jp
fs
inc
jp
incl
and
mov
mov
int3
pop
mov
fists
cs
or
je
or
int3
mov
scas
cmpsl
frstor
cmp
rorb
mov
mov
jg
int3
sbb
int3
faddp
jns
notb
notl
sbb
and
jmp
xchg
fs
inc
sub
dec
mov
inc
cmp
rcr
mov
cs
lret
cmc
roll
incl
and
push
pushf
push
cltd
daa
mov
les
mov
testl
in
adc
push
jmp
pop
jge
lock
jbe
jae
mov
adc
mov
jno
cmp
mov
add
mov
adcb
and
adc
bound
fmuls
mov
sbb
out
and
push
lahf
cwtl
into
adc
test
shr
loope
and
in
jb
xchg
outsb
cmc
cmc
daa
or
push
test
jge
aam
jg
jne
mov
cld
scas
mov
repz
and
mov
mov
pop
adc
mov
or
ja
cmp
lods
les
sbb
sti
push
cmp
jg
mov
jne
lea
xchg
adc
lea
mov
jno
or
out
cmp
divb
enter
pop
shlb
jg
into
jg
push
cmc
mov
sahf
push
or
fwait
outsl
in
push
mov
ds
fildl
inc
int
popf
jge
mov
xchg
gs
xor
dec
cmpsl
in
mov
cli
lods
add
inc
jp
push
sbb
loop
jo
test
xor
out
imul
push
shll
xor
aad
sub
ljmp
pop
shrb
push
pop
pop
ficoms
push
aam
ljmp
xchg
mov
add
cmp
jb
lahf
and
mov
enter
lds
ja
mov
xchg
inc
jmp
loope
or
addr16
les
sub
pop
pop
loopne
je
scas
je
cld
jne
pusha
inc
cmp
ljmp
ret
dec
inc
out
sbb
test
jo
inc
out
fidivl
ja
pop
mov
push
cmpsb
mov
in
xchg
xor
mov
shll
cmp
sbb
test
stc
pop
sub
pushf
rorb
jne
xchg
aas
test
mov
xchg
xchg
sub
enter
lock
xchg
add
andl
cmp
gs
cmp
jmp
add
jnp
sub
cmpsl
lods
inc
rcrb
add
daa
xchg
xor
gs
and
int3
add
mov
xchg
jae
loopne
adc
cwtl
stc
xlat
out
pop
loop
repz
xor
dec
and
mov
insl
je
notb
xor
push
enter
add
adc
cmpsl
cmc
mov
pop
rcr
xchg
mov
hlt
fstps
cmc
fldl
fcompl
dec
lcall
push
sub
inc
ds
mov
out
lods
lahf
stos
push
fs
xchg
pop
in
jle
lods
pusha
in
out
lods
gs
sub
sub
add
cmp
movsb
daa
addb
or
adc
cwtl
in
mov
mov
jp
sbb
rcr
stc
push
out
jmp
inc
xor
mov
sbb
xchg
inc
daa
frstor
push
xor
dec
js
push
ljmp
pop
popf
jle
mov
adc
in
mov
in
sub
pop
imul
pop
mov
jge
inc
in
dec
out
inc
adc
lods
or
and
orb
jns
mov
lret
xchg
scas
jge
cmp
incl
xchg
push
xlat
out
cmc
icebp
sub
add
ljmp
push
xchg
rorl
sbb
clc
outsl
loop
cmovge
push
sbb
in
mov
test
outsb
adc
js
imul
stc
inc
int
add
pop
pop
imul
push
dec
fists
lret
and
out
cmp
sbb
sub
addr16
jmp
mov
dec
aas
cmpsb
dec
sub
ffree
pop
or
or
je
test
mov
mov
daa
cltd
aaa
sbb
jae
mov
ficoml
popf
push
pop
ljmp
xchg
sti
xor
ds
cmp
dec
jg
inc
inc
add
flds
pushl
enter
add
popf
sub
std
dec
push
fwait
xor
rolb
mov
ret
mov
adc
mov
repz
insb
outsl
jae
movsb
and
and
adc
add
push
aad
popf
dec
xchg
andb
mov
scas
out
lahf
mov
cmp
xchg
xchg
xor
sahf
adc
cmp
in
das
icebp
dec
or
mov
aad
ds
mov
xor
mov
cmpsl
incb
leave
fldenv
dec
shl
fdivrl
call
lret
cmpsb
loopne
das
mov
sub
ficoms
mov
jb
fisubl
aam
mov
adc
jmp
pop
or
popa
jbe
or
inc
cmp
pusha
loop
cmpsb
mov
es
jmp
and
jle
lahf
jo
insl
push
mov
dec
mov
lods
mov
push
mov
cmpsb
xor
repnz
shr
cld
mov
mov
nop
add
adc
xor
out
jmp
out
in
xchg
test
sub
xor
xchg
xchg
clc
popa
lret
push
sbb
dec
loope
pop
xchg
push
cld
out
in
mov
jge
adc
xchg
cmp
test
lret
fstps
outsb
adc
clc
into
cwtl
incl
sbb
cmp
ror
fcoms
dec
push
andl
loopne
dec
inc
push
fdivrl
jo
mov
cmpsl
jge
add
xchg
inc
cmpsl
cmp
fidivs
sysexit
cmpsb
cld
outsl
mov
inc
pop
add
pop
pusha
add
mov
in
fdiv
push
xchg
add
and
dec
ljmp
pop
xchg
sbb
push
out
lahf
mov
cwtl
jnp
and
mov
push
xchg
loope
roll
jg
lods
out
mov
pop
jns
lahf
sbb
lea
lret
or
cli
fwait
push
adc
pop
xor
loopne
xchg
adc
scas
lcall
jmp
ljmp
sbb
test
cmp
and
inc
sbb
arpl
cmpsl
cmp
out
lcall
mov
lahf
sub
fwait
les
pushf
pop
mov
pop
test
mov
and
ss
add
mov
add
int3
mov
push
push
aas
insb
in
cmp
movsb
mov
add
inc
sbb
dec
jnp
add
pshufw
and
cmp
cltd
rorb
jne
mov
mov
stos
jle
mov
push
cmp
ss
pop
cmp
call
push
test
mov
xor
test
repz
dec
in
in
sbb
ss
lahf
shll
jl
inc
sahf
pop
mov
pusha
rcrl
movsb
fwait
into
add
test
ljmp
add
adc
pop
sbb
mov
pushf
pop
sub
add
movsb
sub
mov
mov
aad
dec
mov
mov
sbb
push
dec
dec
xor
push
lods
pop
out
out
outsb
push
outsl
out
pop
dec
jmp
push
daa
mov
popf
cmp
pop
mov
lret
adc
loopne
pop
dec
test
js
mov
int
clc
xor
test
fs
insb
and
mov
stos
rcrb
in
sub
lods
cmp
test
sbb
cmp
xor
add
dec
pushf
adc
dec
cmpsl
xchg
jae
jae
fsubl
shlb
pop
push
fdivl
sahf
mov
xor
movsl
sub
xor
push
or
jae
bound
jno
mov
mov
cmp
inc
mov
outsl
stos
adc
push
xor
dec
sbb
and
adcl
js
fistpl
adc
mov
and
test
stos
subl
mov
pop
cmp
add
xchg
xor
or
arpl
stos
paddd
mov
adc
adc
pusha
pop
jecxz
loopne
jnp
or
push
fsubrl
divl
in
adc
aaa
mov
inc
lahf
aad
inc
inc
sbb
xchg
in
ljmp
pop
pushf
loope
and
sahf
daa
sub
xlat
stos
int3
aaa
lcall
jne
add
cmp
jns
push
add
cld
js
outsb
cmp
aad
sub
test
xor
and
xchg
lret
adc
insl
inc
clc
loope
fsts
ds
aas
xchg
xor
pop
movsl
movsb
shrl
aaa
jne
add
pop
ds
ljmp
mov
mov
mov
clc
enter
mov
ja
push
push
rcrl
push
loopne
mov
push
dec
lods
and
push
sub
hlt
std
hlt
push
addr16
sti
cmpsl
pop
daa
out
push
xchg
out
arpl
xchg
pusha
stos
push
loope
in
xor
pushf
inc
xchg
sti
push
pop
xlat
repz
mov
xor
testb
or
ljmp
call
fisubs
stos
fistl
pop
shrl
cli
sub
outsl
gs
jmp
nop
outsb
pop
aam
sub
in
fcomp
lcall
xchg
ret
in
mov
cmp
mov
movsl
add
addr16
les
ficoml
adc
pop
mov
bound
cmp
pop
jo
dec
sub
xchg
outsl
fcmovne
and
add
xchg
xchg
sbb
xorb
jl
xor
pop
add
sub
loop
jnp
cmpb
xor
jae
sahf
pop
movsl
xchg
cli
cmp
sub
fwait
fwait
dec
xchg
movsl
outsb
xchg
dec
push
pushf
cltd
lret
adc
mov
adc
jg
pop
and
mov
mov
rorb
cmp
add
fsub
cmc
inc
mov
cmp
shll
mov
mov
xor
in
fcomip
jp
rolb
inc
lret
icebp
ja
pop
push
lods
cmp
cmc
ds
xchg
and
add
scas
adc
mov
sbb
je
push
dec
enter
out
ret
leave
xlat
pop
es
lods
cltd
adc
mov
mov
loop
cmp
pop
mov
pop
mov
jbe
ret
or
testb
into
pop
ret
pop
mov
fsubrl
add
push
adc
mov
jb
and
lock
xchg
nop
xlat
and
in
xchg
push
dec
push
nop
out
ja
adc
xlat
push
pop
mov
jnp
pop
ja
lret
sti
imul
vprotw
adc
andl
jno
int
jp
call
and
sbb
push
jo
sbb
in
cs
fimull
jae
xchg
lret
xor
fdivs
inc
decb
mov
stc
inc
cmpsb
sub
lret
sub
xchg
fidivl
xor
sti
into
dec
test
or
inc
mov
pop
mov
aaa
sbb
addr16
icebp
cld
sub
scas
jg
mov
cmpsb
movsl
aad
test
jp
mov
and
js
in
push
mov
push
push
xor
jp
enter
or
shl
or
stos
lcall
mov
sub
stos
je
aas
xor
lret
push
add
push
or
cmp
bound
in
adc
xchg
iret
js
dec
xchg
dec
xbegin
jb
pop
mov
test
adc
mov
in
sub
mov
dec
rcrl
xor
aas
stos
jg
lcall
xchg
mov
xor
pop
das
ja
mov
xor
cmp
lea
cmp
adc
aas
xor
aas
pusha
jl
or
or
lret
pop
xlat
int3
cs
xlat
mov
adc
popf
sub
xchg
pop
sbb
pop
sbb
outsl
dec
push
addr16
sub
fnstcw
mov
add
lods
mov
into
xor
add
lret
mov
ret
push
scas
inc
jns
mov
int3
or
leave
cmc
cli
cmp
fdivrp
fsubl
or
and
inc
scas
stos
jne
cmova
mov
adc
mov
jb
and
loope
xchg
cld
test
jbe
jnp
and
and
xor
pop
mov
or
push
call
mov
xchg
icebp
gs
insb
mov
or
mov
pop
xchg
xchg
lret
lret
sbb
jno
push
sub
aaa
jg
ss
mov
sub
ficoml
dec
dec
mov
and
xchg
mov
pop
out
aad
jae
daa
push
addr16
stos
addb
stc
leave
cltd
dec
push
dec
stos
js
rclb
xor
mov
bound
cmpsl
arpl
aaa
cmp
sub
movsb
dec
ss
cmp
xor
xchg
push
test
aad
adc
and
jne
les
add
jno
lret
js
pop
mov
xchg
fs
xchg
pop
pusha
ret
jge
shl
in
leave
mov
inc
fsubl
pop
popf
pushf
fsubp
mov
xlat
dec
orl
out
call
dec
jo
icebp
fists
addr16
jae
rcrl
jmp
in
add
adc
cmp
lcall
pop
push
aas
gs
addr16
pop
outsl
and
and
jnp
leave
xchg
push
cmpb
inc
mov
mov
loop
out
push
cli
add
ret
cmpl
lods
push
xchg
push
das
push
and
dec
test
sbb
fdivr
inc
dec
int
xlat
movsb
xchg
std
sub
cld
enter
mov
dec
xchg
push
jp
or
mov
pop
dec
pop
mov
xor
push
scas
sbb
mov
sbbb
sub
rol
mov
push
xor
out
mov
scas
xor
repnz
lock
mov
and
cmp
xor
je
pop
and
outsl
jge
int3
lock
sbb
jge
pop
fnsave
aad
adc
mov
xchg
pop
add
cmpsl
xchg
sbb
lock
cmp
dec
jge
lahf
lods
ja
cmp
aam
cmp
mov
mov
rolb
lds
xchg
or
mov
pop
add
fs
cwtl
cmpsb
jmp
or
sbb
xchg
incb
je
test
dec
sub
and
add
sarb
cmp
jge
mov
in
mov
adc
cmp
fcmovbe
sub
pop
in
out
orb
mov
les
xchg
je
out
xor
ret
cmp
xor
sub
out
test
ficoml
cmp
push
jmp
dec
cmpl
push
test
xor
mov
push
vandnpd
rorl
std
dec
add
sub
cmpsb
bound
js
subl
fimull
jo
dec
sub
iret
pop
and
jmp
cmpsl
cmp
aad
sbb
fcmovnb
pop
jb
imul
add
out
pop
fwait
cwtl
fcompl
or
pop
icebp
inc
jbe
shlb
test
mov
cmp
data16
xchg
pop
push
jo
iret
mov
in
xchg
push
gs
div
mov
hlt
xor
pushf
es
cmp
xchg
es
lcall
inc
mov
dec
pop
sbb
out
jo
inc
xchg
sbb
mov
pop
add
aad
lret
mov
adc
dec
repz
mov
push
push
push
das
xorb
das
xor
jg
push
call
lret
mov
shlb
or
bound
add
add
jo
nopl
flds
jge
sar
cmp
push
int3
je
adc
loopne
adc
xor
or
lock
push
or
jmp
fsub
mov
ret
insb
repz
lea
mov
out
push
mov
je
xchg
subl
in
cmpsb
movsb
dec
push
and
int3
xor
mov
mov
mov
xchg
or
cs
sbb
fcmovne
in
aaa
in
fstp
pop
aas
lahf
daa
test
sub
inc
dec
iret
sub
pop
cltd
inc
xor
lods
rcll
push
unpckhps
call
push
jo
mov
jecxz
insl
ret
or
dec
adc
jge
orl
rorb
add
loop
jno
lcall
pop
daa
ja
jmp
dec
push
jp
movsb
mov
mov
dec
mov
jecxz
mov
mul
lahf
fwait
sbb
aas
mov
mov
cmp
dec
cmp
pushf
push
dec
fistpll
fidivl
imul
fiaddl
mov
and
arpl
insb
cmpsl
fmul
inc
test
xchg
shrl
xchg
imul
dec
sbb
icebp
sbb
lret
xchg
jno
cmpsb
out
nop
stc
in
std
mov
xchg
int3
mov
sbb
aad
lcall
pop
arpl
inc
xorl
je
mov
pop
lock
aam
cltd
scas
daa
sbb
cmp
sub
popa
push
loop
sbb
or
mov
mov
addr16
and
lods
mov
adc
clc
sbb
sti
mov
xchg
pop
sbb
or
pop
into
lret
insb
or
add
sbb
push
pop
mov
lcall
insb
js
sbb
int3
outsl
push
jg
push
mov
shrb
imul
js
adc
or
xchg
les
fistl
movhps
gs
mov
fwait
jp
mov
je
jbe
stc
scas
cs
nop
enter
fistpl
loopne
mov
lods
xchg
dec
shlb
jmp
in
push
adc
push
test
xchg
xor
cmpb
inc
out
out
clts
mov
xchg
std
xor
push
pop
cld
pop
bnd
lret
iret
mov
popa
popl
xor
movsb
pop
inc
idiv
jnp
or
bound
and
stos
jb
sahf
mov
insb
daa
or
mov
pop
pop
mov
push
mov
stos
hlt
xchg
stc
mov
lea
not
dec
hlt
mov
xchg
cltd
int
fs
lahf
mov
mov
mov
out
push
pop
lahf
cmc
jl
sub
pop
push
and
xchg
cli
subb
lods
and
sub
cmp
mov
out
out
push
xchg
shll
push
mov
lahf
out
mov
aas
xor
movsl
mov
hlt
inc
sub
stc
daa
imul
mov
fisttpll
out
lret
int
mov
insb
pmullw
adc
bound
sub
and
sbb
mov
mov
ret
push
lret
mov
loopne
aad
dec
cmp
xor
stos
dec
or
lahf
repnz
in
sub
lods
clc
mov
popf
out
mov
xor
jmp
mov
addb
das
xor
notb
pop
leave
xor
or
scas
jle
rcll
push
in
sub
test
sub
cmp
pop
adc
aam
rclb
movaps
sub
jns
pushf
sub
jge
shlb
xchg
jns
imul
jo
push
fbld
mov
in
mov
cltd
inc
cmp
rcrb
imul
xchg
fcomps
sbb
xor
and
das
je
test
push
sub
or
lods
rcrl
push
xchg
pop
ficoms
adc
xchg
push
mov
adc
add
adc
xor
mov
add
jno
adc
lods
xchg
mov
sbb
cpuid
dec
out
xor
mov
inc
cmp
push
cs
push
dec
lods
jno
int3
xchg
mov
mov
cwtl
xor
adc
in
or
dec
xchg
mov
clc
into
daa
and
cmc
fldl
and
in
sbb
mov
inc
jne
cmpsl
popf
je
pop
outsl
push
jmp
push
mov
xor
fisttpl
sbb
sysenter
xchg
sub
aas
pop
stc
mov
jmp
mov
xchg
or
aaa
jge
call
mov
adc
or
and
gs
popf
inc
dec
lea
outsl
es
fbstp
mov
cld
sbb
mov
pop
idivb
jne
shr
pop
idivb
inc
mov
fsts
push
mov
push
jno
dec
push
adc
xchg
adc
into
int
lret
lds
sub
xchg
nop
fcmove
adc
iret
cmp
iret
push
mov
out
imul
lods
xor
add
dec
cwtl
loopne
xchg
push
adc
mov
into
jecxz
mov
loope
lods
ja
ljmp
jb
cld
adc
lret
adc
mov
jle
and
add
xchg
ret
mov
push
pop
fidivs
sub
lods
aaa
repnz
das
movsb
pop
idivl
add
xchg
or
mov
xor
mov
mov
jg
pusha
cmp
sbb
rorb
push
xchg
dec
cli
add
js
dec
clc
les
adc
inc
jne,pt
adc
bound
fninit
xchg
mov
xchg
cld
and
ss
ss
mov
adc
aas
mov
movsl
int
adc
cmpsb
or
ljmp
cmpsb
and
fimuls
dec
pushf
cmp
mov
and
imulb
mov
in
jno
jl
loop
dec
movsl
cmp
out
movsl
cmp
ret
adc
ja
lods
mov
xor
cmp
and
fs
bound
gs
add
outsb
lcall
or
std
sub
push
dec
cmp
mov
cld
pop
nop
mov
or
add
push
pop
push
mov
mov
sub
scas
lret
xchg
xorb
in
cltd
dec
fsubrl
or
sbb
lcall
dec
into
addb
insb
test
pop
cli
daa
xor
fdivs
or
movsl
xlat
lcall
notl
out
mov
leave
ds
jne
dec
outsl
fcoml
or
ss
jae
sbb
int3
mov
cli
add
popa
inc
addr16
xchg
mov
pop
jmp
sub
aaa
sbb
cmp
movsl
jns
push
pushf
xlat
shr
aad
mov
push
mov
add
sub
mov
out
mov
cld
push
pop
loop
push
and
xchg
dec
ljmp
xchg
cmp
outsl
sbb
or
mov
jno
inc
cmp
pop
fwait
xchg
adc
mov
pop
in
sbb
ljmp
adc
inc
mov
sbb
ljmp
aad
dec
jmp
fs
pop
cltd
pop
add
xchg
jmp
mov
xor
cmp
push
scas
mov
push
cmp
test
mov
or
loop
cmp
ret
pop
push
inc
pop
in
push
loope
xor
xlat
lea
dec
mov
jnp
icebp
rcr
test
mov
mov
call
adc
ret
cmp
dec
push
or
scas
jp
push
dec
es
mov
rcr
sub
fmull
or
lods
jecxz
inc
cmp
movsl
mov
or
mov
hlt
pop
sbb
inc
inc
stos
stos
jns
scas
pushf
xchg
add
cmp
jno
sub
push
mov
push
imulb
addr16
rorl
into
lods
cmpsb
adc
ficomps
into
imul
xchg
xchg
add
pop
add
jno
push
mov
add
mov
adc
in
and
push
fdivrs
orb
outsl
mov
mov
cmpsb
and
xchg
int3
sahf
push
sbb
loop
jmp
hlt
call
out
push
ljmp
arpl
imul
cmp
andb
es
or
fstps
sub
repz
aam
xor
sbb
pcmpgtw
lods
cwtl
xchg
arpl
mov
push
sbb
jne
pop
rorl
ljmp
push
in
adc
ss
aad
cmp
push
sbb
mov
add
mov
lods
cmp
leave
jae
and
xchg
add
iret
in
adc
lcall
loope
xchg
daa
push
pop
adc
pop
push
movsl
push
frstor
stos
sbb
rclb
mov
or
inc
mov
sub
adc
lds
out
stos
daa
push
cld
xchg
push
push
scas
mov
cltd
push
shll
lea
xor
loopne
test
daa
cmp
add
add
pop
adc
nop
xchg
test
jne
xchg
popa
cmp
push
mov
add
aad
mov
inc
push
popf
testb
loope
adc
repnz
or
sbb
jg
shl
or
sti
dec
mov
ljmp
xchg
es
sbb
or
subl
stos
and
lock
dec
shll
gs
ja
cli
inc
xor
mov
ja
inc
ss
xor
inc
dec
fcomp
xchg
adc
add
adc
lods
mov
cmp
cld
adc
jecxz
in
sbb
outsl
ss
fists
ja
scas
sub
inc
outsl
lret
fstl
popa
or
pushf
iret
mov
sub
enter
mov
push
fistps
jns
aam
xchg
leave
fcoms
loope
pop
and
mov
mov
xor
add
push
in
cmp
icebp
sbb
rcl
or
fsubs
xor
ljmp
fisubs
xor
jo
in
negl
mov
sbb
cmp
pop
out
sahf
repnz
stos
xor
xor
and
mov
adc
pushf
fidivl
xchg
mov
lret
sbb
dec
clc
or
cwtl
or
push
pop
pop
shr
enter
xchg
cmp
sub
jae
mov
xorl
dec
arpl
cmp
jo
icebp
mov
cmp
add
xchg
leave
push
mov
push
cwtl
scas
mov
sbb
sub
data16
pop
mov
push
in
movsb
or
sti
pop
clc
xchg
addb
out
aaa
ss
aad
in
xchg
mov
jb
loopne
or
mov
xchg
pushf
mov
addps
mov
mov
leave
xchg
lods
ja
push
loope
fdivrs
and
das
push
jp
or
jbe
and
or
aaa
shll
adcl
out
cmp
push
es
mov
test
pop
arpl
orl
shrl
sub
int3
jns
cld
fcmovne
int
test
jb
lock
fbstp
xchg
sub
clc
lods
cld
out
push
sub
mov
sbb
sub
jle
outsl
and
sbb
mov
push
fisttps
addr16
and
cmpsb
sub
add
popa
lea
scas
out
test
pop
jno
bound
test
outsl
ret
es
std
stc
fbld
test
pop
dec
aas
jne
std
xor
sub
loop
fcompl
add
xchg
test
popa
out
push
dec
iret
xor
jg
mov
popa
or
jnp
cmp
test
hlt
mov
shrl
xor
jnp
add
mov
mov
and
in
push
leave
jp
scas
inc
mov
pop
test
gs
jecxz
mov
call
popa
arpl
xchg
clc
fucomi
or
mov
shl
filds
mov
loop
sbb
jp
loopne
arpl
jno
arpl
inc
ljmp
jle
xor
pop
test
mov
cld
stos
cltd
push
fs
movsb
imul
hlt
das
add
xchg
js
xor
andl
jecxz
shll
or
aad
dec
push
test
and
cmp
repz
ss
jo
hlt
negl
and
rolb
es
jmp
rol
pop
xchg
int
adc
cmp
jbe
mov
jle
dec
repz
add
sbb
mov
pop
into
inc
popa
xchg
ret
bound
test
jnp
cmp
scas
push
insb
or
fisubl
push
out
insl
jae
xchg
xorl
push
outsl
jecxz
jmp
adc
popa
and
fdivl
xor
pop
push
iret
cmp
incb
fildll
lahf
pop
iret
stos
ret
xor
inc
pop
jge
mov
into
mov
pop
xchg
mov
iret
lds
cwtl
adc
push
xchg
jb
xchg
mov
adc
lods
test
test
loopne
lahf
loop
or
lahf
dec
sbb
call
imul
sahf
daa
xchg
sbb
sub
add
outsb
inc
int3
in
and
cmp
xchg
inc
or
xlat
fwait
mov
xchg
sbb
mov
dec
es
cltd
xchg
mov
sbb
xor
push
loopne
icebp
imul
in
insb
rcll
cmc
cmp
lds
je
mov
iret
push
dec
lods
mov
call
popa
in
or
int
loop
sub
mov
insb
loope
and
sub
daa
lock
loope
out
cld
mov
fldenv
js
push
sub
mov
fmul
into
inc
cmp
jmp
or
fsub
push
addr16
adc
test
bound
and
add
fmull
adc
ret
jp
ja
imul
add
push
movsl
or
lds
cwtl
jb
addr16
clc
in
or
call
cld
xchg
sub
lret
sbb
insb
mov
aad
mov
imul
push
jecxz
popa
cmp
and
stc
adc
push
rclb
jo
lret
movsl
mov
dec
sub
sbb
pop
ljmp
scas
in
outsb
testl
out
ret
adc
test
sbb
pop
fdivs
sbb
xor
add
push
jl
jae
enter
inc
or
imulb
les
mov
shlb
inc
aam
test
pop
sbb
sbbl
fildl
cmp
ljmp
sub
push
and
xchg
cmp
mov
into
mov
mov
aas
xchg
pop
pop
inc
pop
add
outsl
in
enter
inc
and
sti
je
push
mov
cmp
mov
fsubl
push
xchg
fbld
scas
sbb
shlb
mov
inc
icebp
dec
jns
dec
xchg
inc
mull
jmp
aaa
ss
push
inc
das
dec
inc
in
popa
rcll
cmc
inc
loopne
in
jl
pop
jns
sub
push
jo
and
push
adcl
or
lahf
pop
lret
adc
shr
mov
aas
data16
add
or
aad
dec
aam
lea
fisubrl
and
xor
aaa
and
mov
and
push
in
push
jne
shll
shlb
int3
push
sub
cmp
in
pushf
or
rcl
ret
xor
in
and
out
aas
bndstx
xor
mov
hlt
adc
jb
cs
xor
xchg
les
push
jb
jl
sbb
mov
gs
loopne
push
cmp
jg
arpl
loope
and
pop
mov
mov
dec
jle
mov
jge
cwtl
test
ficoml
lret
data16
pushl
fnstsw
rolb
das
inc
cltd
lock
lods
sti
mov
pop
pushf
das
inc
outsl
xlat
out
or
in
fdivrs
and
rolb
xorb
jns
xchg
cmp
adc
push
adc
dec
xchg
adc
mov
push
mov
push
ret
jecxz
push
test
add
loop
jge
or
and
push
xchg
mov
hlt
out
sbb
jecxz
scas
sahf
andb
lea
and
popa
shl
cmpsb
sub
jno
jmp
fmul
or
and
loopne
adc
ret
shlb
xor
push
mov
mov
jge
dec
pop
cmp
notb
mov
sbb
inc
repnz
mov
mov
mov
stc
mov
mov
mov
lds
mov
aas
loop
addr16
adc
popa
icebp
push
adc
push
inc
sti
scas
shr
aaa
je
mov
dec
push
xor
pop
lcall
dec
pop
inc
test
inc
mov
cwtl
jne
push
int
pop
sbb
scas
test
sti
mov
ljmp
inc
push
push
ljmp
lods
in
cmpsl
mov
dec
sarb
dec
nop
test
pop
jle
pop
xor
stos
scas
dec
daa
gs
test
sbb
or
ja
or
push
loop
or
or
imul
mov
push
pop
mov
es
push
sub
add
dec
pop
push
pop
pop
ret
xchg
ja
outsb
mov
pop
xchg
add
add
sbb
outsl
add
rcll
fstpt
idivl
cmpsb
mov
imul
shl
sub
sti
push
push
inc
xchg
and
push
mov
inc
ret
rcl
shlb
dec
jecxz
push
inc
cmp
repnz
sub
sub
xor
cli
dec
divl
mov
push
cmp
pop
imul
fisubrs
jecxz
loop
in
inc
std
divb
jp
jnp
fsts
and
cmp
mov
sarl
and
and
imul
pop
movsb
lret
enter
add
das
test
std
adc
popa
cli
dec
decb
test
lock
mov
aaa
stos
mov
dec
outsb
jp
sahf
in
inc
mov
xor
add
iret
mov
dec
fsubrs
dec
and
xchg
adc
push
call
aas
mov
jnp
sbb
sti
or
leave
imul
cmpsb
sbbl
jmp
cli
cld
insb
pop
push
push
mov
push
int3
sbb
mov
mov
add
loope
ljmp
daa
nop
mov
jo
xchg
insl
mov
push
xchg
inc
lcall
rclb
and
loop
daa
push
sbb
mov
cmp
out
add
mov
sub
pop
mov
jbe
pop
fs
cmp
xor
dec
sub
gs
pop
and
inc
adc
add
mov
mov
into
fdiv
push
rcll
push
jo
mov
rorl
insb
push
js
xchg
gs
dec
cmp
pop
dec
dec
stos
add
loope
fistpll
addb
jb
mov
fs
sub
add
ret
push
inc
pop
je
ret
adc
cmpsl
fstpt
inc
lds
or
test
loopne
call
cmp
push
xchg
out
jae
shl
xchg
lcall
into
dec
inc
add
pop
xor
andl
sbb
and
xchg
pop
sbb
push
popf
filds
mov
lock
lods
divl
cmp
lods
and
ret
and
xor
mov
mov
leave
push
test
mov
pop
ljmp
jns
adc
add
pushf
subb
push
out
mov
cs
jo
and
addl
push
adc
sarb
add
and
or
mov
rclb
sbb
add
adc
into
cltd
cmp
or
cmp
push
ljmp
or
mov
jb
jb
cmp
out
in
das
jae
lea
lcall
gs
xchg
and
shl
adc
nop
cmp
xor
icebp
cltd
pop
mov
and
mov
lods
and
adc
sub
jecxz
cmpsl
xlat
add
add
xchg
mov
aam
or
fsub
xchg
mov
or
int
sub
mov
mov
hlt
add
enter
mov
mov
adc
push
jle
xor
jl
push
mov
dec
adc
ljmp
add
jmp
cmp
mov
jp
add
pop
adcl
mov
pop
mov
out
pop
adc
sub
pop
xlat
icebp
std
imul
in
dec
sti
mov
scas
mov
sbb
ds
data16
xor
sub
add
popf
roll
lock
pop
in
lods
add
js
leave
dec
mov
lahf
add
cli
dec
nop
lock
negl
jnp
mov
shlb
sub
inc
lods
je
or
fistpl
je
popa
jno
lret
and
cmpsb
lret
stc
xchg
adc
adc
sahf
rcrl
lret
add
mov
lea
fistpl
addr16
adc
scas
push
jle
ss
in
mov
cs
add
push
pop
add
xchg
shrl
lock
les
sub
cmpsb
aad
sti
xchg
pop
jbe
leave
loope
fadd
stos
mov
xor
cli
sbbb
push
nop
loopne
ja
fsubr
loope
out
jle
pushf
mov
cmpl
imul
testl
sbb
or
int3
ret
adc
dec
fisttpl
pop
mull
cmp
mov
and
xchg
mov
mov
push
incl
dec
int3
and
xlat
in
rcrl
and
lods
out
orl
xlat
lds
sub
ffreep
dec
test
ret
lcall
addl
sub
push
enter
jl
repz
mov
rol
and
pop
dec
call
shlb
clc
push
movsb
addr16
ss
cmp
dec
ds
int
cwtl
mov
sbb
clc
mov
and
mov
les
repz
fucomp
sub
fiadds
push
push
xchg
inc
dec
ljmp
lret
adc
addr16
repnz
push
cmpsl
sbb
mov
jl
pop
loop
inc
repz
lods
aam
jo
xchg
or
test
push
jmp
fwait
ret
pop
sub
es
popa
jbe
sub
and
subb
and
jb
add
lea
out
orb
ret
rorl
pop
ja
cmc
mov
fsubrl
ja
shrb
adc
mov
ja
outsl
cltd
ss
lcall
stos
pop
or
xchg
es
sbb
mov
rorl
movsl
lahf
loop
mov
rorb
test
jno
mov
test
jmp
dec
imul
dec
push
inc
mov
mov
sub
mov
jae
enter
out
or
inc
xchg
cmp
test
push
add
movb
pop
mov
movsb
pop
mov
daa
sbb
inc
and
decl
adc
or
jmp
pop
inc
mov
mov
sbb
push
jnp
sahf
sub
int3
dec
lret
test
mov
pushf
loop
sub
mov
je
frstor
xlat
xchg
cmp
icebp
jle
aaa
ja
and
roll
lahf
sbb
inc
shrb
add
and
and
jge
cmpsl
cmc
fstps
or
jns
je
push
pop
mov
mov
test
mull
inc
push
ds
and
xchg
es
cmp
mov
sbb
add
xchg
in
add
dec
mov
push
mov
lock
es
or
repnz
xchg
and
sarb
jmp
lcall
ljmp
xor
jae
incb
clc
xor
arpl
int
mov
or
call
mov
xchg
xor
sbb
or
out
push
add
adc
pop
xor
ljmp
dec
int3
int3
xor
sub
jge
in
jns
cld
jno
pop
mov
xchg
inc
cld
iret
jge
add
xchg
dec
and
jnp
inc
lahf
int3
outsb
jge
xlat
xor
and
or
dec
iret
mov
std
mov
mov
inc
push
adc
add
cmp
pushf
mov
call
shlb
xor
cmp
cmp
ljmp
xlat
mov
ja
popa
xor
in
xchg
pop
push
push
push
xchg
repz
jmp
shlb
pushf
dec
data16
shrb
js
das
mov
xor
inc
movsb
xchg
mov
outsb
ds
pop
std
mov
dec
push
and
and
je
xchg
pop
jg,pt
lret
cmpsb
roll
xor
ret
mov
xor
inc
add
lods
andb
fs
out
in
es
nop
and
push
pop
out
ret
out
mov
jo
sub
xchg
rcl
xchg
lahf
sub
cmpsl
clc
jns
mov
dec
mov
out
lcall
jl
mov
ja
mov
rolb
dec
sub
xor
popf
repnz
popa
or
sbb
or
sbb
int3
mov
sti
mov
popf
pop
test
sti
cmp
push
or
dec
movsl
sub
movl
xor
std
iret
cld
pop
add
cmpsl
mov
mov
ljmp
data16
pop
add
pop
popf
inc
test
jge
pop
mov
mov
mov
mov
lds
lods
loop
jae
pop
pop
lds
pop
jl
push
pop
das
clc
rorb
inc
fsubl
xchg
dec
push
jmp
xor
add
push
add
jecxz
iret
out
notl
roll
clc
iret
subb
std
out
push
fisttps
jmp
adc
repnz
mov
fisubrs
jo
and
movsl
out
cmp
adc
call
mov
push
cwtl
out
out
pop
push
pop
inc
mov
sbb
sahf
cmpsl
mov
in
fs
sub
in
ljmp
mov
xchg
repz
call
test
pop
pop
or
and
enter
out
inc
and
insl
xchg
nop
push
xchg
data16
out
mov
frstor
and
std
add
mov
jl
sahf
pop
cmp
aas
push
adcl
sbb
js
mov
test
push
imul
inc
inc
jl
adc
xor
cmp
idivb
out
push
dec
dec
sti
sbb
das
rorl
ljmp
xchg
scas
adc
dec
push
adc
rolb
pop
mov
mov
in
jno
xchg
adc
add
xchg
push
lret
outsb
in
nop
cmp
adc
outsl
pop
popa
daa
xchg
mov
pop
cmp
lcall
xchg
ljmp
inc
ja
lods
mov
xchg
pop
mov
iret
xor
xchg
pop
int3
xchg
push
pop
jmp
push
test
cmp
mov
sbb
pop
mov
sti
dec
mov
mov
jmp
mov
aas
jmp
sub
addr16
add
sub
ja
cmpsl
lcall
dec
mov
or
fwait
clc
pushf
sbb
cmpsl
xchg
or
jg
pusha
test
dec
loopne,pn
push
test
add
jne
cltd
mov
jle
enter
jo
mov
cmp
inc
aas
les
test
push
inc
fadds
mov
xchg
sbb
aas
decb
mov
sbb
cmp
lahf
mov
xor
jmp
xor
std
add
xchg
iret
test
add
aaa
scas
cs
test
pop
mov
sub
push
add
mov
loopne
cmp
pop
and
fchs
mov
jae
pop
push
push
divb
inc
icebp
stc
test
push
into
adc
xorl
int
dec
lcall
mov
sahf
cmp
jne
jo
push
les
fmuls
mov
or
outsb
and
gs
mov
ljmp
pop
jns
mov
fwait
dec
loop
jmp
outsl
std
or
inc
pop
cmc
xor
mov
out
out
mov
pop
pop
fistpl
ret
mov
or
xchg
in
sub
lods
adc
inc
imulb
in
ss
xor
sub
das
jb
mov
and
push
push
dec
shrl
dec
stc
jo
xchg
fbld
roll
and
fwait
ja
popf
jne
jno
cwtl
pop
sub
pop
jno
or
daa
fimuls
pop
push
inc
int
add
and
decl
cmp
dec
test
and
es
sub
xor
icebp
mov
jmp
js
stos
push
mov
imul
test
inc
aad
ds
mov
ljmp
arpl
outsb
push
pop
push
push
mov
sbb
mov
xchg
dec
iret
notb
inc
xchg
mov
sbbb
jl
pop
lea
mov
adc
mov
daa
xor
dec
and
jl
cli
inc
cli
inc
or
fldcw
out
ror
cmp
add
mov
arpl
cltd
push
inc
ret
std
cmp
sub
movsb
adc
loopne
jg
pop
push
xchg
testl
mov
cs
ljmp
int
pop
in
push
leave
push
aad
add
dec
mov
pop
sahf
es
cmp
jl
pop
jae
jne
push
mov
loop
lcall
fprem
ret
fs
pop
inc
push
add
cltd
xor
mov
cmc
push
movsb
jp
bound
lcall
adc
push
pop
pop
fisttps
addr16
mov
dec
into
jge
je
clc
cwtl
es
add
es
pop
adc
cmp
stos
xchg
repz
lahf
aas
sub
mov
out
fisttps
mov
pop
adc
xorb
ds
pop
call
mov
pop
xchg
xor
xchg
mov
or
jp
aam
mov
stos
mov
bound
test
imul
outsl
adc
fcmovnb
jecxz
xchg
es
arpl
cmpsb
mov
and
xor
test
jae
out
inc
push
cmp
bound
rcll
mov
aaa
cmp
cmp
int
and
pushf
stos
iret
and
pop
dec
icebp
enter
lret
stc
pop
nop
ds
sbb
jns
enter
add
inc
mov
cmpsb
imul
in
adc
sbb
rcrl
xor
outsb
imul
rcr
cmc
jge
mov
divb
fnstcw
xor
cs
sahf
nop
mov
mov
aam
mov
std
push
gs
sbb
mov
pop
cmp
fwait
inc
mov
out
nop
into
int
ljmp
sarb
push
jbe
sbb
out
daa
ss
or
push
adc
xlat
or
xor
hlt
dec
movsl
or
sahf
into
mov
jmp
sarl
pop
jno
dec
push
xorl
pop
cmc
outsb
aaa
add
jp
stos
jo
push
js
pusha
cli
mov
adc
fmull
mov
hlt
pop
addr16
inc
inc
pop
xchg
rcrb
in
dec
adc
mov
out
add
push
data16
fs
arpl
jge
dec
popf
into
cmpsl
int
adc
clc
aad
inc
add
data16
push
or
mov
push
cmc
mov
lods
xor
mov
cmc
sar
mov
test
mov
jl
shll
inc
inc
push
xchg
cmp
push
test
daa
push
hlt
push
cmp
aad
int3
and
loope
mov
jp
pop
sub
pop
cmp
push
cmp
in
xchg
pop
mov
pushl
cmp
inc
mov
orb
repnz
addl
pop
fwait
dec
daa
sub
ret
add
addr16
arpl
xor
fdivl
cli
pop
popf
mov
mov
pop
add
pop
shl
pop
cld
xor
add
xor
xor
or
leave
xchg
sbb
je
into
call
mov
je
fsubrs
lret
jo
je
ret
dec
test
pusha
cmp
jl
and
mov
jl
xchg
jno
adc
dec
std
xor
dec
jle
out
mov
pop
push
dec
daa
repnz
fsub
mov
movsl
sub
or
ret
popa
sub
cld
aam
inc
enter
mov
leave
cld
sbb
push
fucomp
jno
jmp
cmp
add
scas
jl
and
bound
cld
mov
mov
scas
jmp
clc
lods
mov
rolb
lods
cmc
inc
jmp
mov
nop
or
rclb
adc
jecxz
sub
lret
fisubs
push
adc
leave
bnd
pushf
cmpsb
mov
sbb
fisttpl
mov
pushf
fistps
sbb
inc
xor
push
dec
cmp
xchg
arpl
xchg
adc
push
leave
insl
orl
pop
jns
bnd
dec
shlb
pushf
stos
pop
addr16
xor
into
imul
and
scas
pop
in
lds
add
add
add
jb
rcll
insl
pushf
outsl
scas
clc
push
pop
and
sbb
push
sti
xor
mov
sahf
mov
fnsave
int3
nop
addr16
xchg
mov
int3
adc
mov
and
mov
mov
out
mov
pop
pop
orb
xlat
adc
pop
cld
rorl
jb
leave
mov
jae
pop
mov
pushf
xchg
push
jo
mov
xor
jg
add
mov
cmp
or
xor
xor
jno,pn
gs
ds
icebp
push
mov
inc
clc
cmp
xor
aad
cmp
out
call
mov
das
cmpsl
lods
aaa
jecxz
push
inc
jl
sbb
jo
test
ficompl
push
cwtl
pop
sub
jp
out
stos
push
jnp
xor
and
scas
int3
movsl
adc
mov
and
leave
inc
mov
xor
mov
mov
pop
test
cmp
adc
ja
rorl
sbb
fistpl
mov
push
or
jle
ja
addr16
push
lret
mov
inc
loope
out
mov
arpl
inc
das
cld
enter
inc
jge
sbb
jne
and
sti
das
mov
mov
or
lcall
ret
fwait
into
sti
orl
data16
mov
mov
fs
mov
jmp
loopne
xchg
xchg
in
cmpsb
lret
leave
insl
adcb
lret
xchg
xchg
mov
cmp
xchg
push
in
out
mov
lret
fwait
sub
fcomip
add
lret
fcmovnu
jge
inc
mov
jecxz
ljmp
jmp
jo
insb
insb
or
enter
fcmovnbe
ret
dec
adc
sub
test
sub
ljmp
pop
dec
sbb
cld
out
rol
fcoml
mov
loopne
push
jge
add
mov
aas
mov
mov
sbb
jecxz
test
xchg
mov
fdivl
lret
dec
pop
push
dec
mov
or
push
inc
repz
outsb
lock
mov
jae
call
jmp
stc
inc
mov
jbe
sbb
lret
sbb
sahf
jp
js
push
fildl
aam
jge
aam
adc
adcl
enter
imul
dec
inc
sti
mov
and
jnp
lock
lret
or
jecxz
jle
pop
and
es
xchg
pop
xchg
xchg
jo
inc
push
icebp
cwtl
mov
mov
pop
xor
fimuls
mov
cmc
shll
or
ficompl
jecxz
hlt
or
in
popa
test
lods
subb
mov
cs
mov
rcrb
int
pop
add
jns
and
pop
outsb
push
xchg
jae
aad
inc
std
mov
outsl
mov
fadd
repz
lock
hlt
loope
dec
pop
xchg
les
fsubl
xchg
jae
jno
adc
icebp
cmp
pop
stc
mov
lcall
stos
lods
hlt
xchg
cmp
push
add
pop
repnz
mov
or
aaa
mov
lds
out
jmp
in
mov
sbb
xchg
pop
inc
enter
int
ret
pop
push
and
mov
or
ds
roll
sarl
repnz
inc
fsubl
inc
xchg
pop
push
cmp
cmp
cwtl
stos
sbbb
inc
nop
cmp
jmp
in
and
mov
xor
insb
jl
lret
mov
dec
and
push
jmp
xchg
jno
inc
mov
loope
imul
mov
xchg
fstl
ja
mov
add
adc
fidivl
stc
das
push
ljmp
fldl
cli
mov
mov
ds
pop
into
mov
push
sub
test
popa
scas
jb
mov
jns
imul
jbe
inc
add
mov
fidivrs
xchg
and
cmp
add
jge
xchg
mov
xchg
ss
xchg
push
add
xchg
mov
movsl
jb
jno
jne
mov
arpl
mov
xlat
lret
popa
cmp
pop
outsb
push
dec
and
inc
lods
adc
mov
fmull
gs
ss
add
inc
dec
xor
cs
mov
cld
adc
push
out
stos
mov
pop
shl
data16
loopne
loop
scas
or
xchg
adc
dec
hlt
repnz
test
or
jge
mov
sbb
push
pop
xchg
into
and
dec
sar
push
fwait
push
stos
xor
gs
lcall
cmpsl
rcrl
cmp
in
push
pop
mov
push
sbb
inc
fsubrl
xorl
test
fildl
push
std
scas
sub
dec
scas
pushf
xchg
push
push
xchg
jb
mov
lahf
cmp
xor
and
inc
sub
inc
xchg
pop
loopne
insl
mov
xchg
add
fcmovnu
aam
aaa
shrb
and
xchg
cmp
jns
insb
cwtl
add
xchg
xlat
jb
pop
test
sbb
clc
ljmp
leave
inc
int3
mov
rcll
adc
mov
ret
ds
jl
mov
jae
fsub
xor
mov
cmp
mov
xchg
xlat
std
push
adc
in
push
inc
repnz
mov
cmp
js
mov
stos
fstl
jno
inc
in
push
int
xor
mov
and
jae
pop
cltd
push
xchg
xchg
notl
mov
outsl
push
pop
fldz
jb
mov
xor
sub
fcomp
xchg
aaa
movsl
add
outsb
push
in
mov
mov
add
mov
mov
out
pop
in
cmp
mov
add
pushf
fwait
xor
aad
push
jp
jns
push
mov
gs
cmp
xor
int
in
push
xorl
jmp
mov
and
movsb
mov
mov
adc
cli
add
aad
and
aaa
lods
sub
pusha
and
xchg
jge
das
push
inc
shlb
jno
in
xchg
sub
movsl
std
sbb
xor
aaa
shrb
arpl
and
nop
lahf
mov
icebp
aad
cld
scas
jmp
pop
sub
jnp
inc
std
leave
cwtl
sub
ficoml
scas
fwait
lahf
bnd
add
sub
incl
xchg
push
push
das
lods
mov
jecxz
cmp
stos
jp
mov
insb
and
push
lods
jne
imull
mov
xchg
mov
outsl
mov
sbb
adc
mov
cmp
aam
push
loop
jae
push
out
inc
cltd
inc
roll
test
jle
inc
and
cwtl
ret
adc
mov
testb
les
insl
push
arpl
fwait
pop
les
push
cmpsb
inc
test
jae
mov
mov
dec
dec
pop
pop
jge
jp
repnz
negl
cmp
jecxz
ds
and
dec
test
mov
and
jmp
xchg
add
mov
daa
pop
shlb
movsb
inc
lret
and
ret
jge
xlat
dec
in
aas
push
fdivr
dec
dec
out
and
mov
out
out
je
adc
outsl
call
push
mov
inc
mov
jno
push
imull
pop
icebp
jb
inc
mov
adc
push
add
incb
pop
jns
jge
scas
jmp
stos
fsubr
mov
jnp
cmp
outsb
mov
imul
xchg
add
repnz
adc
and
inc
js
mov
jg
addr16
addl
sbb
mul
lcall
sub
insb
movsl
insl
ret
or
add
ret
es
fdivl
mov
pop
hlt
mov
aad
mov
aam
notb
loope
and
rorl
dec
subb
push
in
lock
adc
xchg
mov
inc
sbbl
pusha
inc
dec
sbb
jmp
pmaddwd
mov
sbb
roll
mov
arpl
cmp
sbb
dec
andl
xor
sub
std
or
sahf
sub
sbb
orl
and
insb
xor
xor
xorb
int3
sbb
add
push
xlat
dec
or
repz
ret
loope
mov
es
sbb
mov
daa
fists
hlt
roll
jle
xchg
sub
add
xchg
fcoms
repnz
adc
pop
add
inc
adc
js
xor
add
xchg
jb
xor
addr16
xor
fisubrl
popw
jmp
cltd
sbb
stc
cmc
rol
sbb
in
fcmovbe
aas
jno
leave
xor
pushl
mov
in
mov
sahf
popa
cli
popa
adc
or
add
arpl
imul
rorb
adc
movsb
push
leave
or
pop
and
ret
push
sub
push
add
inc
bnd
idiv
scas
mov
pop
mov
fbld
adc
adc
into
dec
add
ficompl
shlb
mov
scas
enter
dec
jbe
fstpl
loop
lods
xor
jns
out
mov
pushf
es
inc
pop
ljmp
sbb
movsb
mov
int
mov
and
test
pushf
daa
push
fiaddl
add
push
pop
pop
testl
fstl
adc
inc
sbb
js
jg
jl
mov
dec
push
imul
and
rorb
jnp
ja
jmp
lods
int3
adcb
pop
aas
sub
dec
bound
lret
out
fcomip
pop
sub
idiv
cli
out
loop
es
in
cli
enter
ss
mov
mov
or
adc
movsb
mov
ss
movsb
les
fcoms
jb
push
divl
mov
or
add
icebp
or
out
dec
jg
xor
in
jl
mov
mov
adcb
pop
jbe
xchg
mov
rolb
add
dec
repz
stos
mov
out
test
std
ss
mov
sbb
xchg
mov
notb
pop
dec
sbb
insl
in
stos
cmp
movsb
in
jo
or
mov
pop
or
lods
sub
xchg
mov
fdivl
inc
cmp
mov
push
cwtl
cs
adc
ja
and
fdivr
or
dec
ljmp
sbb
ja
jmp
cmpsb
mov
pop
bound
push
pop
subl
mov
mov
sbb
mov
fadd
cmp
cli
cmp
jb
test
and
or
loope
lret
push
mov
cltd
and
push
xchg
xchg
inc
sarb
inc
dec
cs
pop
and
mov
addr16
jecxz
push
xor
lret
push
jne
outsb
popa
ret
mov
shrl
xchg
std
aaa
rorb
scas
mov
rcr
data16
clc
lods
pusha
outsb
lret
pop
inc
and
ds
mov
nop
jbe
leave
lret
std
in
arpl
ljmp
fdivrs
cmp
shrl
push
leave
mov
cli
jmp
jl
pushf
add
push
xor
loopne
jne
sbb
jo
clc
or
cmc
pop
jne
mov
inc
sub
test
bound
dec
fsubr
dec
push
loope
push
sarb
arpl
or
ret
pusha
pop
mov
jnp
adc
or
faddl
dec
xchg
xchg
and
mov
negb
imul
subl
sahf
push
cltd
add
fxam
cld
mov
arpl
ljmp
ss
lock
add
adc
out
test
mov
xchg
mov
jge
daa
xor
pushf
xor
cmp
fsubrl
adc
lret
xor
and
addb
adc
mov
bound
sbb
popf
aas
mov
ret
lods
add
loopne
leave
inc
inc
mov
jbe
mov
pop
lds
dec
mov
outsb
xchg
push
cs
inc
xor
jno
ds
pop
aam
lds
lods
sbb
push
jae
dec
inc
mov
les
cmp
or
jmp
rcll
add
xchg
cmp
lahf
leave
or
imul
fstpt
js
adc
fldenv
repz
out
xchg
add
fstpl
bound
mov
test
popf
jnp
mov
dec
rorb
xor
mov
push
test
out
je
pop
mov
ja
sub
sub
cmpsl
jle
cmp
dec
rcrl
arpl
mov
aaa
aas
sbb
aad
xor
and
cmp
dec
nop
loope
inc
lods
lea
lcall
imul
add
clc
add
or
cmp
sub
xchg
sub
push
popa
xor
lcall
imul
enter
cmp
inc
inc
lds
jne
or
leave
sub
cmp
pop
or
xchg
sbb
stos
adc
cmp
dec
adc
iret
rol
stc
xchg
inc
mov
add
dec
aam
sbb
pop
add
mov
negl
and
je
rclb
dec
fisubrs
fsubrs
add
cmp
mov
pop
fwait
push
jg
mov
out
add
and
mov
sub
dec
dec
aam
add
fadd
ljmp
pop
and
xor
sbb
in
pop
or
jp
pop
icebp
or
adc
daa
inc
test
out
sti
mov
iret
icebp
jg
cwtl
dec
xor
xor
sub
xchg
dec
repz
lock
repnz
jl
cmc
add
sub
sbb
cli
js
fstpl
mov
jmp
inc
iret
pop
mov
sbb
test
movsl
and
mov
push
popa
in
mov
cmpsl
or
inc
lods
push
pop
sub
icebp
xor
dec
std
mov
inc
cmp
push
jecxz
cmc
xor
je
mov
aam
jmp
inc
sub
bnd
in
outsb
mov
jg
jl
mov
cmpsl
clflush
mov
imul
scas
and
loopne
jae
adc
sbb
cs
out
icebp
pusha
or
movsl
inc
adc
push
push
popa
rolb
movsb
or
dec
or
xor
sbb
pop
xor
add
push
mov
movsl
and
or
pop
inc
gs
xchg
or
sbb
cmp
mov
sub
mov
jle
daa
sub
jb
sbb
xchg
aas
inc
nop
adc
in
or
mov
jae
cmp
push
mov
mov
mov
out
ljmp
cmp
adc
popf
dec
pop
cmpsb
mov
rolb
movsl
add
pop
mov
mov
js
jmp
pop
sbb
fs
pop
jg
mov
and
gs
xor
sbb
xorl
jle
fs
shrb
dec
sbb
cmp
push
xor
sahf
mov
jge
incb
out
hlt
es
adc
scas
xorl
ds
dec
mov
inc
movsl
mov
ja
add
dec
gs
imul
jb
pop
outsb
sbb
dec
cmp
push
stc
lret
js
pop
popf
sub
pop
mov
movsl
mov
movsl
out
mul
enter
dec
ret
test
aam
fsub
incb
ret
push
cmovp
es
negb
xlat
jmp
inc
push
leave
push
or
sub
imul
aaa
bound
cmp
enter
jle
jmp
xorb
mov
push
mov
sub
test
pop
jbe
cwtl
insb
in
dec
pusha
xlat
inc
adc
cs
xchg
jns
daa
dec
jle
mov
ja
imul
mov
cmpsb
mov
sub
inc
cli
pop
xor
adc
pop
dec
insl
jmp
js
mov
mov
mov
mov
mov
lcall
cmpsb
pop
push
pop
mov
enter
and
and
push
mov
js
push
mov
xlat
cmp
xor
push
cmpsl
cld
or
dec
jno
xchg
fstl
inc
stos
pop
or
ret
stos
mov
loope
adc
jecxz
adc
inc
push
pop
stc
out
lds
push
dec
cmc
int3
int
or
cmpsb
data16
enter
sahf
aas
xchg
xchg
dec
mov
je
cmpsl
mov
or
and
in
cmpsb
cmp
xor
cli
jne
adc
nop
stc
cli
cwtl
push
and
mov
fptan
cmp
mov
adc
mov
add
loope
cmp
adc
xor
imul
mov
rclb
mov
arpl
hlt
cmpsb
cmpsl
lock
adc
mov
inc
lret
int3
mov
dec
mov
xor
mov
stos
pop
and
dec
push
paddq
push
jb
and
iret
push
pop
mov
jbe
les
xor
xchg
iret
pop
cmp
sbb
andb
mov
test
shl
inc
int3
cmp
sub
lods
sub
dec
std
push
inc
imul
mov
cmp
lcall
adc
xchg
test
push
popl
fisttpl
jle
pushf
pop
sub
adc
pop
adc
inc
xchg
icebp
push
shrb
orb
mov
jp
or
and
sahf
insl
pop
gs
sbb
dec
int3
jb
sbb
dec
gs
push
test
xchg
aad
sub
mov
push
lods
pop
cmpsb
int
push
mov
or
fucomi
inc
leave
mov
push
jecxz
xchg
nop
test
push
lock
pop
sbb
xor
shrb
mov
cmp
testb
imul
loope
mov
add
movsl
inc
loope
jne
cmc
out
and
lahf
lcall
repz
or
repz
pop
arpl
stc
pop
sub
add
push
roll
neg
jae
mov
pop
insb
dec
std
mov
and
push
imul
ja
mov
dec
fisubrs
int3
or
sub
inc
cmpsb
and
imulb
in
jmp
jne
mov
cs
sbb
jbe
add
mov
jns
xchg
add
bound
xchg
scas
push
push
cs
fnstsw
jo
jo
cltd
inc
mov
test
fisttpl
sahf
fcoml
dec
mov
dec
aas
cmp
xchg
dec
cmp
in
popa
ret
scas
sub
scas
fisubrs
loope
roll
jo
in
adc
mov
mov
out
mov
stos
mov
pop
ja
inc
inc
mov
jbe
pop
test
cmp
pop
stc
cmc
mov
push
imul
push
cli
roll
addb
xchg
fnstsw
pop
hlt
xchg
dec
lahf
jmp
mov
mov
test
rcll
repz
push
mov
mov
mov
jnp
inc
and
out
sarl
mov
or
sub
pop
push
mulb
jae
pop
daa
hlt
pop
dec
fdiv
cmpb
add
jmp
and
mov
lahf
pop
loope
lods
adc
sti
test
jg
add
into
iret
cmp
adc
adcb
xor
aaa
jle
mov
imul
pop
add
jbe
movsb
jae
movsb
stc
repz
add
pop
test
in
insb
mov
mov
fidivrl
mov
in
mov
in
js
mov
mov
ljmp
sub
mov
sub
pop
and
insb
fxch
jbe
inc
xchg
stc
shll
pop
jnp
sti
dec
mov
ja
ret
mov
repnz
pop
das
ret
cmc
cmp
pushf
cld
cmp
inc
xchg
mov
out
ficompl
and
aaa
mov
jne
jbe
test
mov
pop
std
or
movsl
or
fnsave
das
std
push
xor
sti
mov
xchg
insb
pop
ja
jno
call
into
stos
aam
mov
add
xor
addr16
and
pushf
jo
cwtl
and
repnz
icebp
call
scas
outsl
dec
scas
inc
or
sbb
cmp
cmp
push
inc
push
jae
push
sub
into
pop
cmpsl
dec
mov
jno
ja
cmpsb
mov
rcrb
cmp
xchg
imul
sbb
cmp
cmp
inc
inc
and
mov
and
pop
inc
mov
xor
inc
jbe
jp
cmc
mov
outsl
imul
inc
xor
ljmp
cld
and
xor
mov
cmp
ljmp
insl
imul
cs
or
push
fisubrs
push
fwait
and
unpckhps
mov
dec
daa
clc
ret
pop
add
loope
add
mov
mov
in
mov
cmp
mov
pop
xchg
adc
std
mov
push
testb
ss
lods
push
ret
and
mov
fiaddl
dec
mov
or
je
sbb
xor
lods
aaa
and
je
or
arpl
sub
jmp
cmpsb
xchg
jg
mov
arpl
inc
mov
xor
lret
xchg
inc
adc
jg
mov
pop
outsb
jo
shll
xchg
mov
shll
inc
xchg
sbb
fwait
outsl
inc
jns
push
mov
loop
arpl
jnp
cmp
sub
ds
outsb
jge
mov
cltd
xor
pop
or
sti
aas
rcll
mov
pop
mov
cmp
adc
js
aad
test
aad
ljmp
jae
gs
arpl
cs
cmp
jl
inc
push
imul
movsl
cli
imul
push
or
cli
cmp
push
push
add
fisttpl
sub
pop
jecxz
cltd
popa
in
xchg
fs
cld
mov
xchg
push
mov
out
lret
pop
add
loopne
ffreep
jmp
push
loopne
or
and
cwtl
in
xor
jae
xchg
scas
dec
lods
into
inc
lock
popf
jno
pop
sub
aaa
insl
fdivrl
rclb
mov
shlb
fwait
xor
and
hlt
xchg
mov
cmp
leave
pop
mov
pop
push
sub
inc
gs
xchg
or
adc
rolb
push
popa
cmp
aas
adc
xchg
pop
arpl
adc
fadds
dec
add
shrb
fistpll
inc
filds
mov
mov
jmp
lock
push
pop
movsb
sbb
scas
cmc
das
lods
ljmp
dec
or
mov
das
xchg
cmp
js
mov
add
mov
cmp
pop
jb
stos
bnd
cmp
popf
inc
aas
pop
sub
stc
aam
cmp
push
adc
sbb
sub
inc
mov
jnp
movsl
pusha
jbe
and
clc
or
ret
pop
cmc
and
adc
mov
filds
jecxz
in
fbld
jle
rcl
psrad
call
ds
mov
sub
pop
imul
mov
jnp
movsb
adcb
lcall
inc
lahf
loope
sub
cli
inc
imul
out
xchg
enter
push
add
cmpsb
sub
faddp
int
cli
jns
mov
jp
adc
out
lahf
test
lcall
movsb
stos
stc
outsl
jle
dec
or
dec
testl
pop
out
pushf
lret
enter
mov
lock
or
gs
inc
cmpb
rol
push
sub
sar
inc
lahf
outsb
xchg
clc
in
popf
mov
ljmp
imul
and
mov
icebp
lods
sarb
cltd
cli
enter
inc
sub
sarl
inc
out
repz
sbb
out
xor
aam
dec
iret
or
adc
pop
divl
pop
pushf
pop
fucomip
inc
mov
aas
inc
mov
inc
xor
into
adcl
mov
ret
mov
pop
push
iret
lds
leave
nop
fld
fcomp
xchg
push
scas
movsl
jle
incl
repnz
and
jp
shl
xlat
inc
ret
sub
xchg
adc
inc
in
push
mov
out
ss
inc
adc
sar
lcall
xor
xchg
jns
adc
jl
add
dec
xor
mov
aaa
ja
pushf
sbb
sbb
ja
ss
in
inc
or
and
movsl
dec
xchg
adc
lcall
jnp
push
cmp
sub
mov
and
repz
or
xchg
test
xchg
cs
dec
mov
loope
dec
jns
or
out
movsl
cmp
pusha
shrl
addr16
inc
insb
cmpsl
dec
cmpsb
bound
xor
push
and
mov
mov
outsl
ret
mov
cmp
test
fcoms
jg
call
sbbb
or
adc
stos
js
rcrl
or
pusha
push
stos
shll
adc
into
push
mov
iret
and
jecxz
cmp
ret
insl
jno
out
push
int3
add
sub
jns
jg
sbb
cmc
mov
sbb
jl
push
xor
enter
mov
arpl
or
iret
shll
mov
pop
cwtl
xchg
pushf
push
shll
add
nop
sub
jecxz
gs
pop
std
fnstenv
lock
icebp
pushf
mov
sub
mov
sbb
mov
mov
or
add
out
pop
and
pop
push
dec
sti
and
imul
pop
enter
sar
adc
sub
movsl
cmp
xchg
into
shr
xchg
das
xor
jle
dec
leave
push
das
test
popa
popf
sbb
dec
imul
ret
lods
sub
xchg
ja
cmc
in
filds
inc
mov
jmp
pusha
sub
aad
xlat
call
xlat
or
icebp
in
inc
sbbb
xor
stos
popa
jo
adc
int3
sbb
cmp
dec
imul
xchg
sub
subl
fsubr
add
dec
sub
out
aad
ja
scas
sbb
push
sub
inc
mov
cmpsl
cmpsb
lret
movsb
ljmp
icebp
jne
ret
cld
out
push
dec
cmpsb
rorl
push
popf
imul
clc
aam
daa
gs
outsl
nop
loopne
leave
dec
movsl
xorl
insb
adc
push
pop
sub
sbb
mov
test
adc
sbb
not
mov
enter
push
pop
fsubrs
lret
int3
xchg
add
inc
aad
push
fwait
movl
cmpsl
cmp
div
jb
cmp
addb
mov
mov
fisttpl
cwtl
mov
mov
jo
xchg
cmp
enter
mov
into
pop
sbb
aaa
loope
test
pop
sbb
jno
fldt
mov
dec
ret
dec
mov
inc
popf
mov
scas
fdivrs
cmc
or
pop
fs
std
add
imul
fdivs
mov
iret
push
imul
cmc
std
mov
pop
test
inc
fnstcw
fcoml
inc
lret
ss
rclb
mov
es
repz
jmp
or
xchg
pop
mov
aam
gs
inc
outsb
sti
dec
ficompl
pop
sub
decb
pop
cs
fxch
jl
mov
icebp
div
inc
fwait
mov
mov
inc
inc
pop
dec
bswap
clc
inc
push
sbb
iret
jl
cmp
sti
call
sbb
pop
xchg
sahf
test
adc
cmp
aas
or
lahf
loopne
in
and
push
adc
push
dec
and
xchg
push
cli
test
and
ljmp
daa
adc
subb
push
jae
adc
xchg
mov
cmp
xchg
shrb
imul
mov
add
popa
lret
cld
mov
push
movsl
xor
outsl
pop
out
popa
cmp
leave
je
lret
push
pop
in
iret
pop
or
pop
xchg
xchg
cmp
dec
sbb
sbb
aas
ret
enter
xchg
decb
dec
xchg
mov
push
xchg
in
pop
sub
and
push
pop
test
inc
mov
sarl
dec
or
inc
movsl
mov
jmp
ficoml
sahf
mul
jl
jns
sub
stos
cmc
jp
dec
jl
sahf
or
stc
sbb
cmp
mov
or
jge
dec
inc
in
fldt
call
jns
jmp
mulb
mov
lods
inc
xchg
xor
imul
ret
fldenv
dec
inc
ja
cmp
mov
loope
test
jg
and
cmpl
ret
into
or
and
inc
and
xchg
dec
sub
shl
fistps
cli
dec
out
adc
int3
inc
adcl
in
ficoml
mov
movsl
fimull
rcrl
mov
sarl
jbe
cwtl
mul
imull
mov
cmpsl
pop
arpl
aad
bound
clc
push
pop
xlat
lret
pop
jge
push
mov
sbb
mov
js
xchg
into
fisubs
mov
enter
lret
or
mov
aad
pop
cs
inc
mov
cmp
xchg
xchg
xchg
aas
rorl
adc
and
jnp
and
xor
lret
mov
lahf
hlt
loopne
sbb
jb
xor
dec
pop
movl
jbe
stos
inc
xor
out
lods
mov
call
lods
fstps
adc
sbb
sti
xchg
cmc
jl
incb
cmp
sub
cmc
repz
mov
add
rorb
mov
mov
mov
cmpsl
jmp
pop
mov
cmc
lahf
cmp
jns
or
movsb
ret
roll
sbb
dec
pop
outsb
call
adcl
les
aad
cli
out
pop
in
xchg
out
inc
cmp
loopne
imul
test
cmpsb
jmp
je
fstps
out
pop
cmp
mov
xorb
outsb
mov
insl
lds
xchg
sar
inc
repz
jecxz
mov
and
sbb
xor
fistl
jns
shlb
cli
cmpsl
add
out
mov
or
ds
test
mov
pushf
cmpsl
lret
es
mov
adc
out
mov
sti
ret
dec
aas
rcr
loopne
out
dec
and
or
push
scas
sbb
inc
hlt
jl
rcr
sub
jns
dec
test
das
push
repnz
adc
mov
xor
push
test
cs
xchg
repnz
cltd
xchg
sbb
xor
add
xor
pop
mov
ret
test
or
orl
leave
iret
lret
arpl
jl
or
movl
and
and
cld
sbb
mov
push
xor
cmp
cmp
mov
iret
xor
vmovd
mov
fidivs
push
ja
outsl
jae
imul
imul
and
ret
xlat
in
or
test
mov
mov
mov
test
inc
mov
and
lret
jmp
jne
cld
adcb
xchg
pop
sub
adc
ljmp
out
xchg
sbb
lock
dec
ss
dec
cs
in
adc
mov
sahf
ja
push
mov
in
inc
ret
cmp
mov
in
lahf
lods
mov
imul
rol
xchg
mov
xchg
adc
aam
mov
stc
pop
imul
push
xor
mov
jg
dec
inc
mov
jmp
imul
and
jmp
test
out
mull
int
icebp
repz
lcall
test
das
loopne
enter
xchg
add
loopne
movsl
in
inc
xor
and
pop
push
jecxz
add
fisubs
sbb
dec
cld
shll
outsb
repnz
xor
mov
cmp
into
ljmp
fldt
xor
cmp
rorl
cwtl
mov
es
mov
ffree
mov
sti
xchg
xor
lcall
or
inc
mov
ret
out
inc
mov
clc
cld
push
sahf
into
xor
scas
jle
lahf
mov
adc
jmp
inc
inc
in
fbstp
push
mov
cmp
or
test
dec
add
lods
xchg
mov
pop
stos
addr16
gs
push
pop
icebp
fistps
jge
call
xor
test
adc
call
aad
dec
outsl
nop
lcall
lcall
loopne
and
clc
mov
loope
addr16
jmp
shrl
imul
cmc
jle
dec
sbb
ja
jae
sbb
push
adc
inc
pop
loope
sbb
test
test
cs
push
cs
cwtl
or
loop
jg
mov
popl
int3
jp
in
and
aad
and
out
mov
mov
scas
inc
push
aas
mov
in
mov
and
xchg
jmp
aam
bound
and
inc
out
mov
in
loopne
cmp
hlt
add
sub
mov
cwtl
mov
int
daa
sbb
daa
cmc
push
inc
sub
xchg
or
mov
cld
pushl
lock
xorl
repz
mov
pop
jae
cmc
and
enter
jo
fwait
xor
jo
mov
inc
inc
push
cmp
loopne
addr16
sahf
jnp
inc
fcmovnu
push
jle
or
sub
divb
mov
or
mov
cmp
xlat
xor
adc
popf
les
dec
and
orl
int3
push
push
pop
test
shll
xchg
lea
nop
mov
push
faddp
push
push
adc
dec
sub
push
hlt
nop
ljmp
xor
mov
jg
mov
andl
mov
dec
ljmp
xchg
enter
pop
adc
sahf
sbb
sub
push
sti
xchg
mov
add
jbe
jne
lds
mov
loop
and
ljmp
pop
push
jmp
push
fucom
xchg
xorb
dec
inc
cltd
xchg
inc
or
mov
pop
fs
ljmp
mov
xchg
mov
call
shl
mov
xor
dec
ds
push
or
cmc
cmpsl
mov
jecxz
test
mov
mov
ret
roll
sbb
loopne
scas
popa
cmp
push
leave
xchg
incl
std
stos
shrl
lock
mov
cld
loop
movsb
jnp
fistpll
mov
pushf
stos
pop
jo
xchg
or
inc
xor
xchg
insl
dec
dec
mov
inc
lock
dec
adc
or
adc
xorl
mov
call
jo
imul
mov
enter
icebp
ds
insl
out
jecxz
sub
imul
xlat
movsbl
mov
out
ret
icebp
pop
js
or
pop
imul
mov
adc
jp
cli
xchg
cld
lods
pop
paddq
dec
fsubrl
push
dec
test
shll
repz
add
stos
push
inc
rorb
mov
out
hlt
out
fmull
int
xor
dec
xor
sbb
into
mov
loop
decl
mov
iret
outsl
mov
xor
clc
adc
sub
dec
add
dec
push
ret
or
movb
aaa
jnp
sbb
call
lret
fbstp
jecxz
jmp
dec
xchg
push
out
fidivrs
stos
test
sbb
adc
push
rclb
cmp
mov
xchg
aad
jle
adc
shr
mov
out
and
scas
outsb
popa
cmc
add
sti
sbb
jl
pop
or
add
hlt
cmc
push
inc
aaa
std
sbb
in
sub
pop
gs
mov
pop
mov
enterw
pop
test
in
inc
and
ret
iret
sbb
or
mov
test
sub
ljmp
movsl
push
dec
fnstcw
pop
data16
aaa
push
ja
es
mov
stos
push
or
mov
or
std
lods
jae
cmpsb
addb
push
sti
inc
cmp
ret
cli
fstpl
mov
add
pop
mov
daa
mov
in
adc
out
icebp
pop
call
and
rclb
cmp
mov
cwtl
add
nop
pop
leave
in
xchg
outsb
xor
mov
pop
fcoml
cs
and
aad
pop
aas
push
outsb
jmp
cmp
orl
or
cli
shlb
mov
fwait
pop
xchg
cwtl
sahf
jle
and
mov
push
push
loopne
sti
icebp
fcoml
mov
push
loopne
hlt
jns
mov
pop
dec
shll
adc
jne
lahf
flds
xchg
push
int3
imul
jecxz
into
xchg
jne
jne
jne
jmp
mov
test
cmp
push
mov
addr16
fisubl
pop
icebp
repnz
out
andl
lret
push
sub
stos
cmpsl
jb
jnp
loopne
arpl
mov
movsb
data16
stc
xor
xchg
xchg
add
shll
out
out
rcrb
jg
mov
push
add
popa
fmuls
nop
ja
cli
fmull
bound
fcoml
mov
repz
mov
dec
fildl
test
pop
outsb
jae
in
jl
shlb
xor
mov
lret
out
rcrl
mov
dec
leave
lock
pop
fmull
mov
daa
pop
loope
cmp
test
lods
xor
pop
scas
xchg
fiaddl
cmp
inc
stos
lds
nop
add
loop
sub
jmp
sbb
mov
sub
lar
mov
cmp
dec
and
movsb
fcoms
sbb
ffreep
and
shrl
sbbb
fsubr
mov
pop
icebp
push
sbb
add
jno
imul
add
cli
adc
js
int
out
sbb
sarl
movsl
dec
mov
cld
xchg
push
add
popl
mov
xchg
jae
mov
stos
mov
push
or
jmp
mov
adc
xchg
loop
test
pushf
adc
ljmp
rcll
popa
mov
cwtl
jno
pushf
cwtl
into
movsl
mov
push
ljmp
mov
mov
ja
inc
push
mov
inc
jmp
add
xchg
jo
fmuls
sub
in
adc
inc
adc
push
rcrb
cmp
jno
aam
in
aas
cs
out
mov
nop
mov
divb
shrb
lret
jo
aas
fs
sbb
and
mov
sub
enter
jmp
cmc
or
inc
jae
repz
test
sub
and
pop
repz
adc
addr16
cmpsl
cmpsl
and
subl
jle
dec
lds
mov
push
or
loopne
sub
and
call
out
sbb
ss
fildl
lret
shll
xchg
lahf
js
rorl
xchg
mov
inc
lea
stos
in
les
and
xchg
fisubrl
inc
adc
sahf
pop
xchg
jo
les
sbb
in
pop
stos
jnp
push
mov
daa
mov
cld
cmp
xor
seto
sahf
xchg
or
fnstsw
inc
rcll
movsb
sub
inc
mov
add
repz
es
jb
mov
call
mov
scas
jge
add
cltd
rolb
mov
mov
test
add
cmp
xor
and
fldl
call
inc
xor
sub
mov
pop
daa
inc
push
adc
mov
fldl
mov
sbb
mov
pop
adc
shl
push
pop
mov
loope
in
adc
lret
arpl
test
iret
xchg
jmp
adc
push
cmc
or
pop
xchg
push
insb
lahf
bound
aaa
ret
jbe
movsb
and
inc
insl
push
cmp
or
mov
pop
out
mov
scas
frstor
scas
jmp
lods
push
pop
xor
adc
pop
mov
sbb
pop
and
shll
push
jg
mov
sbb
sub
mov
mov
mov
or
mov
pop
mov
fwait
lock
outsl
clc
sbb
adc
sbb
dec
mov
pop
push
rorb
jp
scas
psrad
mov
adc
in
adc
addr16
xchg
push
sub
cmpsl
inc
push
icebp
and
adc
pop
jge
aas
cltd
mov
sar
xchg
cmp
out
test
adcl
jae
out
cs
sub
imul
popf
stos
iret
or
stos
cmpl
sahf
je
arpl
into
pop
and
push
lea
loop
hlt
or
gs
fstps
push
outsl
mov
loop
xor
xor
fsubp
mov
dec
push
mov
jnp
inc
push
test
sbb
sahf
incb
enter
xchg
pop
push
imulb
adc
xor
mov
adc
out
jb
pushf
xchg
pop
xor
sbb
xor
add
xchg
imul
xchg
xchg
mov
sbb
dec
pop
adc
adc
sbb
pop
ja
mov
out
adc
mov
and
test
aad
sbb
mov
mov
jne
clc
dec
cmp
xlat
out
divl
jns
insl
and
aaa
idiv
xchg
mov
cmc
mov
sub
dec
fistpll
or
fldt
dec
adc
cld
mov
scas
lret
push
push
jg
xor
movsb
lock
jp
mov
jnp
pop
push
jecxz
add
pop
push
xlat
jmp
xor
pop
test
pop
xor
xchg
lcall
sub
fiadds
fs
mov
adc
mov
std
xchg
push
mov
sbb
xchg
sbb
cmc
incb
pop
es
sahf
mov
cli
lahf
xor
xor
imul
fisubrs
jbe
sub
push
push
adc
push
and
scas
ljmp
jo
iret
dec
std
insb
jge
cmp
mov
cmp
mov
mov
leave
imulb
push
movsb
sbb
fidivrs
pop
aaa
pop
xor
ror
mov
jp
jae
enter
in
add
mov
cmpsb
dec
sbb
mov
xchg
cmc
add
scas
jno
fisubl
and
in
ret
hlt
bound
rcl
xchg
clc
jle
inc
pusha
fs
inc
jmp
lahf
sub
and
addr16
mov
sbb
repnz
int3
sahf
loopne
sub
sub
fiaddl
sub
sub
scas
das
add
or
adc
xchg
jbe
sub
fisttps
out
testl
pop
mov
call
mov
add
mov
mov
jnp
xor
inc
stos
data16
push
push
xchg
test
lods
cmp
out
pop
clc
jno
xor
test
sub
adc
pop
fwait
lret
mov
arpl
jmp
cmp
pop
xchg
push
pop
pop
mov
test
mov
lahf
shl
pop
mov
jmp
in
lret
mov
jne
ret
mov
repnz
or
out
mov
pushf
test
aaa
les
ret
sub
dec
andl
scas
adc
sub
mov
xchg
sbb
insl
mov
mov
int3
adc
lret
push
ja
loopne
xchg
sub
jmp
xchg
jo
inc
jecxz
jnp
insb
sub
popf
mov
in
push
andb
aam
imul
in
mov
cmp
lods
jnp
idivl
cwtl
pop
scas
push
xor
adc
fcmovbe
mov
fsubs
subb
jge
ret
xchg
ds
imul
pop
lret
cli
pop
rep
test
shrb
pop
ja
gs
pop
sbb
clc
jg
jecxz
sbbl
add
jbe
xchg
or
adc
das
push
test
push
add
fimull
lahf
loopnew
pop
xchg
jle
stos
test
ds
mov
xchg
loopne
mov
adc
pop
fisttpll
pop
add
adc
dec
inc
pushf
arpl
fwait
push
das
adc
push
push
into
fidivs
mov
pop
rcrb
adc
stos
loope
push
lahf
jl
repnz
cmp
int3
mov
movsb
and
adc
cs
cmp
add
je
test
push
dec
mov
fisubs
jb
and
arpl
clc
out
repnz
or
test
popf
test
cmp
mov
push
or
aad
outsl
adc
xchg
mov
adc
push
cmp
cmp
dec
xchg
jae
sub
aas
dec
sub
add
aam
cmp
cmpsl
mov
pop
sbb
hlt
lcall
ljmp
and
lcall
sti
clc
fmull
lods
xor
sub
lret
iret
aad
jbe
scas
mov
mov
jbe
mov
outsl
iret
adc
cmp
stc
in
xor
xchg
xor
fwait
addr16
fnstsw
xchg
addb
cwtl
pop
xor
mov
push
in
push
pop
stc
mov
lods
add
lea
fbld
fisttps
mov
mov
push
xor
mov
jl
fldln2
movntps
xor
xor
in
inc
jno
sbb
stos
sbb
pop
sbb
dec
test
inc
mov
sub
fbstp
fdivl
push
mov
fbld
jae
push
out
inc
repnz
mov
test
sub
cmpsb
pop
push
movhlps
cmp
mov
imul
push
fwait
mov
mov
mov
lods
cmp
lcall
outsl
roll
scas
adc
pop
in
ret
sbb
subl
fldl
push
test
mov
pop
xchg
sbb
outsb
leave
sub
jmp
insl
ds
mov
xchg
popf
andl
and
adc
aas
mov
add
pop
jne
add
repz
decl
stos
mov
pop
daa
jecxz
sti
dec
scas
jmp
inc
sbb
and
bound
aaa
push
cmp
mov
sbb
sbb
in
mov
clc
or
out
pop
inc
test
int
mov
xchg
fldcw
stc
pop
jno
jbe
call
and
sub
stos
dec
loopne
repnz
pop
pushf
loopne
test
xor
sbb
add
xor
les
in
cwtl
hlt
xor
scas
cmp
das
pop
push
jge
adc
lret
and
fucom
outsb
call
fcmovnb
dec
inc
popf
andl
pushf
push
xor
adc
ret
mov
loop
scas
pop
sbb
pop
lcall
xchg
push
fsubrp
xchg
pop
inc
test
jecxz
test
outsl
lods
in
push
in
test
push
inc
nop
sbb
lcall
ror
xor
movsl
shr
cld
add
mov
out
or
sbb
jmp
dec
add
push
push
jg
inc
repz
out
inc
jae
movsb
pop
jecxz
iret
mov
jecxz
or
loop
add
sub
sbb
mov
fisttps
lock
mov
jns
cmpsb
insb
xchg
xchg
lds
ficoms
mov
dec
jnp
inc
jbe
repnz
pop
push
jno
arpl
cld
mov
ja
imul
or
fisttpll
inc
push
sti
sahf
push
or
test
rcll
daa
stos
inc
mov
jmp
jge
notl
fldt
arpl
outsl
roll
lods
stc
add
cmp
movsb
sti
sbb
dec
mov
gs
in
cmovle
orl
sbb
inc
sbb
push
or
ficomps
pop
outsb
and
xchg
jno
push
scas
repnz
push
lods
mov
movsb
icebp
test
pop
push
jl
int
sbbb
dec
outsl
pop
xor
cmp
pop
fdivs
mov
inc
xor
pop
push
ficomps
or
imul
dec
inc
repz
faddl
or
mov
sub
ljmp
loopne
and
shlb
adc
xchg
dec
lods
mov
ss
cmp
mov
das
flds
sbb
aad
push
fcoms
es
shll
push
push
jbe
pusha
icebp
fdivs
lock
loop
pop
dec
mov
push
xchg
lds
xor
lahf
pop
cmp
dec
dec
mov
jp
mov
mov
outsl
rorb
shl
out
jmp
sub
orb
push
sbb
in
js
cltd
aas
pop
sub
js,pt
cli
jmp
push
push
mov
or
mov
mov
push
mov
adc
xchg
sbb
and
adc
sbb
or
movsb
xor
out
xchg
mov
incl
daa
mov
frstor
insb
lods
jnp
adc
cmc
dec
inc
cmc
sahf
add
ja
clc
cld
mov
and
dec
in
aad
movsl
sub
sbb
xchg
mov
push
imul
add
add
sahf
inc
push
clc
pop
xchg
ljmp
sub
adc
movsl
arpl
stos
pop
mov
inc
pusha
fs
push
and
lods
shll
test
adc
push
addr16
adc
repz
je
int
sub
sarb
mov
push
mov
adc
xor
dec
jecxz
nop
jns
inc
not
xchg
ret
fadds
inc
addr16
gs
or
cmp
bnd
loop
test
sbb
dec
xchg
enter
insb
cmpsl
mov
mov
scas
xor
orl
lahf
das
dec
mov
out
mov
xlat
std
imul
push
loopne
hlt
shll
jns
inc
dec
and
push
xchg
dec
mov
add
in
icebp
fdivrs
out
and
add
push
and
jp
insl
sbb
pop
jb
or
imul
dec
roll
cwtl
mov
mov
call
pop
or
xchg
dec
or
xor
mov
pop
dec
push
adc
mov
inc
fcoml
popf
cmpsl
jg
jg
fwait
mov
add
cmc
cmpsl
jns
jp
test
jmp
xor
lds
mov
pop
movsl
adc
ja
mov
adc
push
xchg
jae
cs
pop
jmp
call
sbb
mov
fnstcw
jbe
inc
in
sbb
fildll
add
xchg
push
pusha
fcompl
pop
xor
rcrl
inc
jg
leave
mov
hlt
jo
mov
es
xchg
jecxz
lock
in
cltd
cmp
repnz
add
in
sbb
leave
int
sub
je
adc
gs
sbb
sub
and
cmp
jnp
xchg
add
insl
sbb
jecxz
lds
inc
pusha
loopne
cmp
movsl
push
ja
jb
stos
iret
cmc
pop
js
mov
das
cs
ds
push
mov
xor
jg
std
loope
add
addb
sbb
out
pop
movsl
or
nop
mov
ja
je
nop
push
push
jg
lret
mov
inc
cltd
daa
in
jae
insb
scas
inc
data16
mov
xor
addb
and
inc
jne
inc
scas
pop
inc
lock
mov
lds
sbb
popa
jecxz
cmp
mov
pop
pop
jbe
cs
ret
sbbb
addl
movsb
mov
daa
shll
adc
xor
inc
pop
adc
popf
dec
sbbb
jl
jne
aas
lret
sbb
sbb
cmc
cmp
dec
pop
jnp
mov
push
ficomps
faddl
inc
arpl
dec
fbstp
aad
adc
pop
imul
fwait
jmp
add
sbb
sbb
popf
lds
adc
sbbb
mov
fbld
mov
insl
aad
sti
aas
push
xchg
push
mov
daa
push
es
ss
jl
mov
arpl
ja
fwait
xlat
inc
hlt
scas
push
add
push
inc
xchg
jno
sbb
mov
bound
pop
aas
pop
sti
gs
adc
inc
sub
xor
add
mov
mov
shll
cmp
imul
insl
mov
and
jbe
into
or
mov
mov
loop
into
arpl
int3
popf
cs
jl
mov
aam
mov
fsubl
sub
ret
cmp
scas
fimull
dec
pop
lock
outsb
stc
inc
shl
pop
and
dec
push
cmp
fsubrs
fists
je
mov
insb
jmp
pop
scas
gs
mov
mov
inc
js
inc
pop
push
xchg
dec
cmp
push
mov
xchg
mov
mov
ret
out
inc
testl
push
rol
cld
pop
push
rorl
dec
fst
push
dec
and
cmp
orl
loop
jae
into
xor
mov
ja
clc
push
pop
stos
jnp
call
jmp
mov
add
subl
dec
fbstp
pushf
imul
cmp
or
lods
bound
in
push
cmpsb
out
jp
inc
and
push
fisubrl
aad
sub
mov
into
or
sbb
test
orl
inc
and
in
cmp
cwtl
or
rorl
pop
cmpsb
fimuls
lods
out
int
aas
add
adc
adc
movsl
sbb
push
in
rcrl
or
adc
cmp
into
movl
es
sub
in
sub
and
mov
cwtl
mov
and
jl
pop
add
mov
ret
dec
movsl
loope
mov
std
jns
xchg
jl
mov
pop
mov
mov
mov
sbb
bound
lds
sub
in
dec
xchg
lret
movsb
jp
jne
mov
jg
pop
das
arpl
loopne
rcrl
aad
rclb
sbb
outsb
adc
stos
test
es
es
addr16
cltd
push
cmp
sbb
repnz
pop
add
aam
mov
push
stos
xor
outsl
pop
rol
push
popa
cwtl
mov
xchg
xchg
ljmp
data16
pop
lods
stos
jmp
sahf
xchg
es
hlt
pusha
mov
pushf
loope
mulb
xor
int
jl
cmp
and
inc
sbbl
les
fists
jmp
mov
mov
dec
inc
loopne
frstor
sub
aaa
xchg
push
xchg
daa
sbb
mov
sub
flds
je
insl
sbb
in
xchg
mov
lds
and
lods
addb
inc
notl
stos
mov
sub
adc
push
mov
sahf
data16
inc
jle
add
and
jo
dec
mov
xor
in
xor
inc
mov
jo
push
test
lahf
mov
ja
jnp
xor
scas
xchg
push
sbb
and
or
fsubs
and
push
adc
xlat
mov
test
pop
pushf
icebp
xor
dec
outsl
fst
fsubs
fisubrl
nop
outsl
mov
bound
lock
xlat
imul
jp
negl
xor
and
out
mov
inc
xchg
pusha
xchg
push
cltd
inc
test
xor
pop
pop
fldt
test
fcmovu
imulb
leave
mov
pop
and
scas
xor
ja
in
leave
stos
xor
xchg
mov
mov
pop
lcall
jns
leave
mov
xor
or
cmp
lret
lock
jno
lret
push
cmpsb
in
dec
pop
jmp
push
imul
aad
pop
call
repz
jnp
fildll
ficoml
sub
loope
out
jnp
sarl
mov
test
leave
data16
fnstenv
or
jno
hlt
das
movsl
inc
push
pop
out
cmp
push
out
insl
jno
testl
sti
xor
mov
dec
mov
cs
adc
aas
insl
xchg
and
jbe
push
cmp
movsb
mov
cmp
inc
pop
jl
push
jb
nop
push
cmp
cmp
js
insl
dec
cwtl
arpl
les
adc
or
fst
sbb
cltd
cmpsl
cmpsb
addl
jnp
enter
ret
mov
dec
scas
mov
xchg
es
leave
cli
pop
mov
pop
mov
cmp
push
or
clc
dec
pop
xchg
mov
jmp
test
mov
mov
jbe
data16
jo
mov
inc
rorb
jge
sub
jmp
push
sahf
add
mov
fldl
mov
sbb
jp
loopne
fcoml
xor
fsts
sub
mov
andl
jb
and
adc
mov
jl
int
add
xor
sbb
mov
leave
push
outsl
cmp
mov
xchg
jl
fstl
jmp
pop
or
and
nop
mov
mov
push
mov
jmp
lea
sbb
mov
sub
es
cwtl
lret
mov
repnz
in
mov
das
fsubr
mov
jle
fildl
iret
imul
push
sub
pop
push
das
pop
mov
dec
xchg
out
nop
cmp
push
pop
loop
add
in
fcomi
cld
sbb
rorb
pop
enter
loopne
daa
icebp
push
repnz
sub
arpl
in
and
into
and
sbb
stos
jns
addl
out
movsb
cmpsb
int
inc
arpl
mov
mov
fdivrl
adc
inc
adc
jb
les
mov
mov
cwtl
fisttpll
insl
je
dec
jbe
mov
gs
in
dec
push
daa
xor
pop
jl
cmpsl
insb
out
mov
or
ret
inc
orl
movsb
fcmovnu
adc
imul
push
push
je
mov
cmc
fsubrs
insl
inc
lock
mov
jnp
les
int3
shlb
mov
ljmp
test
pop
sub
mov
xor
pop
fs
xor
pop
mov
in
dec
or
cmp
pop
call
mov
iret
stos
push
cmpsb
push
fnstenv
mov
outsb
std
xchg
mov
fisttpl
movsl
xchg
adc
push
add
inc
inc
mov
ficompl
jnp
icebp
adc
dec
lret
add
hlt
mov
or
in
push
mov
dec
inc
dec
cld
ret
xor
es
cmp
xor
push
inc
ja
cmpsb
push
movsb
outsl
outsl
loop
lods
xor
fs
mov
repz
dec
out
subb
mov
leave
inc
jp
push
xor
push
cmp
jno
sbb
push
pop
mov
hlt
add
xor
sbb
push
scas
pop
movsl
xor
leave
mov
inc
repnz
outsb
cltd
or
sbb
sbb
bound
rolb
popf
inc
and
cltd
pop
jmp
daa
push
mov
mov
pop
adc
add
mov
pop
addr16
pop
mov
gs
repnz
fs
stc
sub
mov
popf
xchg
push
pop
cld
aad
mov
nop
xor
cli
pop
rorb
filds
jg
shlb
xchg
and
out
addl
mov
adc
fdivs
push
imul
jne
in
xor
dec
into
add
add
inc
jnp
mov
popf
dec
jmp
sahf
and
das
mov
or
test
pusha
popf
sub
sti
mov
jo
jp
mov
push
aaa
fstpl
insb
ret
and
aam
outsb
pop
pusha
jp
mov
xor
adc
fdivr
in
adc
xor
sub
jae
xor
xor
push
cld
xchg
xchg
push
cmp
inc
shlb
arpl
add
loopne,pt
popf
out
mov
movsl
popf
les
loopne
xor
add
jl
stc
fcomps
lret
pop
adc
out
in
mov
jle
jb
fdiv
or
cltd
xor
lret
test
inc
xlat
or
jae
xor
sbb
jae
and
xor
mov
mov
shrb
pushf
mov
loop
out
dec
sbb
xchg
adc
outsb
xchg
arpl
fnstsw
call
cld
jg,pn
mov
pop
sub
std
std
arpl
jo
sub
into
adcb
arpl
dec
mov
inc
sbb
into
xor
push
sbb
cmc
push
xchg
and
idiv
fmull
rorl
push
mov
xlat
in
sub
lods
mov
mov
out
dec
sub
outsb
sti
test
add
mov
xchg
test
jl
and
jo
jno
inc
mov
cli
shll
push
mov
aaa
sbb
adc
sti
jbe
jnp
mov
je
mov
push
push
mov
in
leave
sub
add
jl
cs
enter
scas
or
dec
je
cmpsb
cltd
mov
pushw
add
xchg
push
js
jecxz
in
ljmp
loopne
hlt
sbbl
xchg
mov
mov
movsl
nop
push
or
sbb
push
xchg
fs
sbb
add
cmp
ss
cmp
jne
push
cmp
or
pop
dec
test
stos
inc
ret
sbb
cmp
adc
jno
test
mov
shl
imull
xchg
xor
ja
testl
sub
mov
lret
test
sub
test
cld
pushf
jp
ds
push
or
popa
movsb
stos
ja
mov
je
fidivrs
dec
decb
adc
lret
or
rcl
and
lcall
ret
cmp
xchg
and
je
icebp
mov
mov
inc
icebp
lods
sub
fnstsw
sbb
lods
pop
imul
clc
xlat
lret
and
mov
push
ficompl
xor
rcrb
ret
jl
in
pop
into
std
jp
loopne
test
pop
sbb
jecxz
jg
in
mov
xchg
mov
sbb
test
aas
fiaddl
jne,pt
test
loopne
mov
and
dec
xor
jb
sbbb
pop
sub
lahf
fildl
outsb
in
outsl
loope
vmulps
scas
ljmp
fisttps
cmpsb
dec
push
es
add
cmc
je
mov
ret
out
aaa
xlat
jnp
dec
or
lock
mov
xchg
cmp
ja
cs
test
xor
mov
and
sbbl
jge
imul
dec
out
cld
pushf
pop
ja
mov
adc
in
scas
nop
sbbl
xchg
or
push
hlt
xchg
jge
rcl
lds
add
pop
sbb
and
dec
xor
and
into
lret
ss
pop
call
cmp
cltd
rclb
dec
insb
adc
adc
hlt
lret
fisubs
sbbb
and
jp
das
inc
in
add
mov
xor
mov
adc
add
mov
test
aas
out
push
push
mov
and
jnp
xchg
inc
jp
jl
ja
daa
ds
enter
rcl
das
es
mov
push
push
adc
mov
mov
lcall
cmp
ljmp
icebp
aam
inc
loop
add
shrl
orl
test
fsubrp
sub
ds
fidivrs
fisubrl
cmp
cwtl
and
xchg
paddsb
out
or
icebp
mov
xorl
add
xchg
jp
repnz
add
lds
push
inc
aaa
jae
pop
ljmp
sti
mov
xchg
mov
xor
fiaddl
icebp
test
mov
jne
jmp
inc
sub
repnz
xorb
sub
mov
int
lret
ds
loop
lcall
dec
pusha
daa
mov
inc
xor
inc
out
sbb
mov
repz
cmp
push
pushf
adcl
in
pop
int3
cmp
xchg
adc
ret
jle
mov
mov
pusha
movsl
fcompl
dec
sbb
and
xchg
dec
scas
mov
mov
call
lods
sbb
jmp
sahf
test
into
dec
xchg
pop
and
rcll
push
jge
cli
inc
adc
sbb
aad
mov
push
and
pop
mov
sbbb
icebp
mov
cmp
aad
jle
pop
ret
call
ss
loope
jle
mov
test
mov
subl
jae
jmp
lret
push
mov
jmp
mov
dec
mov
push
xchg
add
repnz
insb
dec
mov
mov
out
adc
jo
and
daa
imul
and
ret
inc
inc
xchg
mov
scas
pop
adc
call
ljmp
pop
push
outsb
test
dec
mov
inc
ret
aam
out
daa
xchg
das
arpl
mov
mov
sub
sub
data16
sbb
stos
and
push
mov
cwtl
insb
or
sbb
std
mov
pop
push
arpl
push
filds
int3
in
fildl
fs
ret
or
into
addb
jne
testl
mov
mov
jge
fisubs
aas
sbb
and
out
loope
int3
repnz
mov
rorl
cmp
data16
cmpsl
loopne
sbb
icebp
xchg
lds
jbe
jge
xor
adc
and
mov
pop
mov
mov
mov
jl
in
daa
mov
mov
faddl
test
arpl
mov
jl
and
out
and
jnp
stos
aad
add
pop
xchg
pop
pop
cs
shr
mov
bts
or
lods
or
jno
ss
loop
add
ret
sarb
mov
inc
popa
nop
inc
aam
pop
les
subb
mov
sti
add
out
mov
imul
loope
adc
jg
lock
inc
push
mov
dec
test
sub
call
jl
hlt
add
fwait
sbbb
sbb
ficompl
imul
cwtl
or
adc
sub
and
ret
aad
cmp
fldt
imulb
jnp
fnstsw
sbb
imul
add
cmp
ret
sbb
or
sbb
add
negl
testb
mov
inc
dec
sub
pop
xchg
repz
pusha
or
mov
loop
out
hlt
in
insb
or
in
dec
cmpsl
jne
pushf
xchg
jle
call
fsubs
and
push
mov
lcall
jno
or
repnz
jge
rcrb
xor
push
shlb
fbstp
jno
or
push
xor
loop
sub
add
inc
movsb
pop
adc
stos
dec
lret
lahf
jecxz
push
nop
cltd
and
out
push
out
sbb
dec
outsb
dec
pop
mov
das
add
inc
out
sub
repz
inc
sahf
psubsb
popa
and
into
mov
loope
push
push
aas
push
adc
lods
fadds
std
lret
pop
cmpsb
cwtl
push
lods
inc
pushl
sub
push
cwtl
test
jl
sbb
lea
push
ret
cld
xchg
je
push
cmp
sbb
rcll
test
adc
test
dec
lods
sub
cmp
jo
add
sbb
fistps
pop
inc
fisubrl
les
push
imull
out
and
clc
and
sahf
sti
mov
or
loope
loopne
cmp
and
pushf
jae
mov
cmp
mov
std
add
mov
pop
cmc
subb
je
aas
imul
push
loop
iret
hlt
pop
mov
pop
sbb
cmp
adc
mov
in
sub
or
lcall
enter
stc
mov
sub
fs
sub
mov
test
push
outsl
inc
push
nop
ret
inc
inc
es
lret
enter
stc
arpl
and
inc
ret
jb
push
ficompl
xor
jmp
xchg
jl
push
cwtl
jecxz
jnp
arpl
mov
les
inc
or
rcll
cld
inc
test
add
inc
mov
xor
test
jp
adc
xor
sub
mov
gs
cld
iret
cwtl
insb
sub
arpl
incl
dec
xchg
xchg
in
test
rcll
mov
push
mov
sbb
outsl
fcom
call
cmp
int3
dec
stos
cmp
inc
mov
out
pop
es
lock
inc
inc
pop
mov
inc
incl
pop
insl
mov
stos
decl
xchg
lahf
cmp
push
or
outsb
mov
xchg
and
lock
jne
js
sub
int3
dec
and
mov
popf
int
push
lods
mov
test
pop
repz
cwtl
bnd
and
jmp
xor
sub
mov
dec
rcll
addl
in
adc
dec
cmp
mov
test
xor
sti
pop
xor
xor
pop
sub
lods
roll
pop
cmp
std
mov
sbb
push
ja
sub
push
call
cmpsl
sbb
addl
sbb
dec
fs
in
mov
sti
lahf
clc
push
imul
xor
jbe
ss
popa
lret
loop
je
sub
out
iret
aad
mov
jne
sub
movsl
jmp
sbb
testl
push
xchg
fdivl
stos
imul
or
xor
lret
dec
add
jns
movsb
icebp
scas
fistl
in
xor
ja
imul
pop
cltd
data16
jp
inc
xor
lea
mov
and
mov
ss
pop
or
sarb
lcall
adc
inc
xlat
adc
xchg
mov
pusha
jbe
mov
mov
outsb
gs
adc
stos
test
inc
les
dec
mov
cli
imul
out
arpl
and
in
sbb
and
dec
stc
mov
fwait
mov
push
adc
dec
movsb
xor
or
lahf
fs
push
or
mov
or
push
out
orl
scas
mov
ret
mov
mov
aas
ja
push
insb
outsl
in
cmp
xchg
sarb
cmp
mov
and
adcl
ljmpw
out
pusha
inc
jecxz
or
xchg
arpl
je
jmp
sub
mov
push
imulb
xchg
push
in
cmpsb
mov
mov
iret
std
xchg
jle
mov
popf
or
aas
div
add
sbb
adc
cltd
dec
cmpsl
dec
push
jns
push
inc
cmp
pop
adcb
lea
dec
dec
subl
dec
mov
je
and
lcall
push
pop
ror
bound
daa
sbb
push
adc
pusha
push
inc
mov
rclb
adc
cmp
sar
stc
mov
pop
subb
dec
inc
mov
pop
dec
popa
dec
test
dec
cmp
push
or
mov
roll
add
inc
test
faddl
test
lcall
cltd
popa
loop
outsb
call
xchg
pop
mov
push
jecxz
insl
movsb
or
subl
fistpl
mov
sub
rcrb
inc
sbb
mov
push
mov
add
mov
mov
cs
jp
mov
cs
xor
push
shr
dec
jp
and
inc
movl
fwait
jle
xor
mov
addl
in
pop
mov
lds
lcall
shrb
push
scas
xchg
jae
fcomp
cmpsl
fcmovnb
mov
sub
xchg
test
jmp
mov
add
or
xchg
inc
sub
sub
ss
or
cmp
mov
inc
leave
mov
add
lcall
je
inc
xchg
xchg
push
bound
stos
mov
call
cmpsb
fstps
fldenv
movsb
xchg
inc
repnz
popf
add
cmc
mov
repnz
pop
nop
jle
shlb
ds
dec
push
or
ss
icebp
pop
sbb
orl
jns
xchg
mov
jecxz
add
adc
inc
lahf
subl
mov
js
dec
cwtl
pop
les
shrb
push
push
add
rorb
jmp
sbb
adc
imul
mov
push
ja
rcl
cli
mov
adc
fbld
mov
out
les
das
aam
lret
pop
in
pop
pop
adc
jmp
mov
int
jge
ret
add
lds
in
xchg
pop
push
cli
mov
orb
out
shl
xor
in
into
jmp
pop
rorl
dec
ror
jmp
mov
jl
popa
push
notl
push
cli
jb
neg
push
inc
in
mov
mov
dec
sub
xchg
rorl
lds
inc
daa
sub
pop
pop
mov
and
sbb
push
aaa
std
mov
lret
adc
pop
inc
and
cwtl
xor
cmp
les
imul
jo
xor
stc
dec
push
jns
incl
arpl
test
sahf
lahf
xchg
cs
push
test
ret
xchg
ljmp
popa
pop
xor
push
call
mov
lds
sub
movsl
xchg
push
fbstp
sbbl
stc
lods
lcall
add
ret
vsubsd
loope
fcompl
adc
iret
xchg
repnz
aaa
nop
inc
test
test
pop
stos
push
pop
aas
pop
aad
out
inc
ret
fwait
jp
imul
sbb
push
inc
pop
mov
ret
cmpsl
test
adc
mov
test
pop
push
pop
outsl
daa
fsubrp
and
pop
enter
insl
mov
adc
outsl
xchg
sbb
dec
ret
int
and
movb
cs
scas
mov
xchg
cwtl
arpl
jbe
movsl
sub
cmp
adc
xchg
ja
xchg
cld
push
ret
pop
test
xor
fs
xor
pop
sub
lahf
jl
push
pop
push
fwait
push
adc
pop
pop
es
dec
fcomps
sbb
sbb
lahf
dec
clc
or
aam
mov
bound
pop
xorl
stos
subb
shrl
andl
in
sbb
dec
jae,pn
inc
sub
iret
push
cmc
ljmp
sbb
shll
les
hlt
bound
mov
xor
jne
mov
enter
xor
dec
xchg
lea
cmp
mov
jae
adcl
push
repz
fcmovbe
popa
xor
jne
prefetcht0
out
adc
dec
sub
sti
dec
mov
inc
pop
ss
mov
cli
dec
inc
int3
mov
cmp
scas
push
push
fidivl
xchg
icebp
loopne
dec
cmp
clc
scas
test
push
xchg
add
out
and
shr
jmp
push
cld
sbb
faddp
jp
lods
mov
stc
mov
and
rolb
dec
jmp
add
inc
lahf
sbb
loopne
popa
andl
movsb
xor
dec
cmpsl
leave
mov
lock
cmc
imul
xor
sti
mov
in
je
rcrl
popf
popa
pop
sbb
add
sub
jne
mov
rorb
popf
repz
push
aaa
sub
icebp
aad
popl
mov
mov
pop
mov
int3
mov
iret
pop
xor
push
insb
fmull
dec
push
dec
jo
rcr
add
cltd
mov
xchg
mov
sbb
cmp
sbb
cmpsb
test
sub
mov
dec
sbb
daa
ja
and
repz
lahf
xor
stc
sbbl
adc
pop
xchg
push
cmp
mov
nop
daa
loope
jge
dec
xchg
jbe
imul
push
push
dec
fs
out
cmpb
out
mov
test
jbe
add
rcll
nop
pop
jge
lods
iret
enter
jnp
hlt
push
or
aad
push
sbb
ficompl
add
rcll
or
testl
push
xor
pop
or
mov
adc
mov
dec
test
xor
ret
ret
fisubrs
pop
aam
rcll
xorb
stos
xchg
pop
out
pop
scas
outsl
sbb
xor
lret
xor
shlb
adc
push
loope
push
jb
inc
jns
hlt
mov
push
jp
mov
sub
out
push
js
daa
lds
das
mov
insl
add
sbb
dec
or
jg
cwtl
sbb
lods
sbb
jae
andb
and
mov
ss
jmp
icebp
fdivrl
lret
mov
sbb
lock
aaa
dec
xchg
roll
push
lock
mov
test
cmc
cmpsl
jno
pop
cmpsb
mov
pop
cmp
pop
mov
dec
xchg
push
jne
push
pop
mov
cld
mov
mov
cs
dec
loopne
pop
mov
sar
dec
sub
xor
into
dec
or
fisubrs
popf
aam
mull
pop
int
lahf
jae,pt
pushf
mov
scas
in
mov
sub
mov
cli
and
pushf
fldl
rdpmc
cltd
outsl
lock
loopne
add
or
xchg
xchg
inc
or
test
popa
cmp
inc
mov
adc
sahf
mov
cmpsb
lods
dec
es
inc
xor
xor
lcall
cmp
or
mov
adc
dec
push
adc
ljmp
cltd
mov
es
icebp
xchg
xor
jbe
jge
lcall
inc
popf
mov
ficompl
inc
sub
clts
leave
lock
add
movsb
dec
inc
gs
iret
stos
pusha
add
int
fldl2e
in
xor
cmpl
testl
andb
mov
notl
fnstenv
push
orl
pop
inc
sbb
clc
ret
in
ljmp
gs
dec
jge
mov
cmp
push
adc
movsb
mov
repz
push
jno
fildl
js
das
clc
in
jecxz
cmc
adc
shl
aam
stos
cmp
jl
loopne
fs
repnz
fdivr
sub
cmp
xchg
cld
mul
imul
pinsrw
mov
fsubp
repnz
popf
push
fldenv
rcrb
add
pop
add
push
pusha
and
xchg
inc
mov
mov
inc
in
mov
ds
mov
push
iret
push
ljmp
pop
lahf
arpl
lahf
or
cli
add
hlt
imul
jns
add
dec
cmp
xchg
insb
jb
sub
sti
icebp
jmp
lcall
dec
jg
std
mov
add
out
flds
mov
push
popf
jle
xor
scas
js
lock
jecxz
mov
adc
cmp
pop
sub
rorb
push
adc
pushf
stos
dec
subl
jo
das
iret
fst
in
out
mov
enter
sub
or
dec
mov
inc
fisubrs
mov
loope
call
shr
mov
inc
ds
dec
in
sbb
fstpt
outsb
addr16
rorl
pop
mov
adc
lret
add
jne
mov
dec
xchg
cmc
cmp
inc
orl
mull
jbe
fisttpll
insb
shrb
cs
mov
jp
push
mov
mov
and
inc
into
pop
scas
cmc
add
xchg
int3
jmp
movups
xor
lock
xlat
mov
fdivrl
inc
cmpsl
lods
inc
aas
ret
inc
jecxz
sub
inc
pop
or
sbb
mov
fiaddl
outsb
sub
xlat
dec
mov
cmpsl
rcrl
js
lahf
inc
pusha
fsincos
fs
in
out
sbbl
bound
pop
xchg
pop
sti
push
out
cmp
mov
inc
add
aaa
movb
popl
outsl
xchg
sbb
cmpsb
pop
inc
adc
xchg
push
lods
mov
les
nop
jge
jo
out
addb
jb
popf
push
xor
adc
jae
and
imul
mov
mov
add
cmp
sub
mov
stos
lcall
daa
push
and
popf
cmp
filds
or
dec
sti
jmp
mov
jb
outsl
sbbb
add
sbb
push
fdivrs
pop
cmp
mov
jns
dec
rcrl
data16
xor
sti
or
xlat
cmpb
js
xchg
fwait
xchg
call
xchg
cmp
jge
pushf
addb
hlt
adc
jle
inc
int3
mov
outsb
into
lea
push
mov
lret
mov
cmp
add
imul
pusha
xchg
push
pop
pop
bound
push
movsb
fdivl
dec
jmp
inc
leave
inc
int
imulb
in
mov
cltd
jns
scas
out
roll
xchg
cmpsb
pop
cwtl
lock
dec
js
jmp
fcmovu
push
cmc
inc
push
insb
sub
adc
push
sbb
aam
cmpl
rorb
cmp
test
push
gs
pop
xlat
mov
outsl
lret
pop
mov
push
cmpsl
iret
mov
push
jl
ljmp
mov
xchg
movsb
lret
movsl
jae
cltd
rcrl
and
xchg
cmp
mov
push
test
aas
pop
adc
fldenv
rorl
mov
inc
loop
xchg
js
nop
mov
aad
js
and
cmp
xchg
or
pop
pop
lods
jecxz
dec
les
or
nop
push
xor
outsb
push
sbb
xlat
sub
add
jnp
pop
mov
and
mov
mov
mov
dec
push
add
sti
mov
popf
iret
push
imul
sbb
push
pop
push
mov
outsb
sub
sub
in
inc
pop
dec
mov
idivl
add
mov
rcl
cmp
mov
push
dec
fbstp
or
pop
inc
cmpsb
sub
or
fmull
push
int
mov
rclb
rcl
inc
andb
or
jge
mov
cs
jnp
lds
int
push
push
dec
jle
push
std
sbb
xchg
pop
cwtl
out
or
das
leave
pushf
shlb
lods
mov
repnz
xor
xchg
dec
enter
push
xchg
mov
push
testb
dec
in
ret
mov
xor
fldpi
enter
into
mov
ljmp
mov
push
adc
push
dec
sbb
adc
cmp
movsb
push
jno
lahf
add
pop
std
aaa
lret
xchg
adc
jp
jne
fmul
pop
xchg
movsl
pushf
cmp
test
inc
in
mov
es
mov
sbb
xchg
pop
aad
mov
add
jmp
xchg
or
test
jno
cmp
sbb
scas
fdivrs
pop
fnsave
fisubl
jl
mov
arpl
ss
cmc
jecxz
mov
mov
test
mulb
mov
xor
dec
xchg
jl
out
add
and
dec
push
push
pop
in
ret
xor
inc
dec
and
or
cmp
and
in
fiadds
dec
mov
mov
sbb
sbb
cli
mov
mov
adc
sarw
jns
nop
aad
mov
push
movsb
jl
xchg
test
test
xor
dec
clc
cmp
sbb
xor
push
jns
inc
jb
into
outsb
or
popf
hlt
inc
add
xchg
jnp
idivl
out
mov
push
pop
repz
je
xchg
ret
loope
push
das
scas
out
icebp
xor
aas
and
and
js
jle
add
aaa
mov
xorb
push
xchg
push
cmp
mov
xchg
lea
loopne
out
subb
mov
or
pop
mov
mov
jno
dec
outsb
cltd
jl
adc
cmp
scas
pop
mov
and
mov
fisttpll
sbb
mov
adc
dec
aas
mov
sbb
pop
adc
cmp
push
mov
out
fcmovnbe
add
push
dec
repz
mov
cmpsl
call
outsl
js
dec
mov
fcmovnu
xor
and
and
out
cmpsb
ds
testb
mull
jecxz
and
push
dec
addl
add
dec
movsl
lret
or
rcrl
cs
or
testb
fwait
or
in
jmp
jne
ficompl
cs
daa
push
cmp
dec
jp
pop
add
xor
sti
inc
or
fcomps
movsb
nop
adc
pushl
dec
xchg
or
cli
fst
inc
jl
adc
push
aaa
or
dec
push
popf
outsb
mov
sub
arpl
jp
sti
je
mov
jl
push
dec
lea
int
enter
les
add
and
in
movsl
das
push
and
out
enter
cmp
jle
int
rorb
out
add
call
pop
adc
jp
pop
sarl
xor
in
in
jb
xchg
bound
jge
jbe
fldl
repz
data16
pop
pop
push
xchg
lahf
inc
xor
fwait
cmpsb
icebp
cltd
lds
fbstp
sbb
cmp
push
inc
mov
add
out
or
adcl
js
popa
dec
mov
xor
sbb
push
orb
jne
loopne
int
sbb
xchg
ja
ret
mov
inc
inc
out
xor
nop
aad
scas
inc
stc
inc
jle
jmp
insb
mov
pop
rcll
jmp
leave
add
mov
and
popl
decb
in
ret
insl
stos
scas
mov
js
stc
mov
cmc
outsb
ljmp
mov
out
xchg
push
pop
cmp
pop
cmc
pop
int
sub
out
inc
fisubrl
and
jmp
cltd
jge
in
test
mov
mov
xor
popf
hlt
mov
cmpsb
sub
push
scas
aad
and
iret
pop
rep
push
test
fimull
das
jo
scas
in
out
fstps
roll
jecxz
popf
mov
push
cmp
outsl
pop
sbb
sub
les
jecxz
in
pop
repnz
mov
mov
clc
or
es
sbb
jnp
or
sub
imul
adc
xchg
jnp
fists
mov
adc
push
movsb
xor
aad
inc
fs
xchg
cmp
push
scas
xchg
or
cmp
movsl
fnsave
clc
jb
dec
mov
or
mov
push
mov
icebp
adc
out
xor
push
dec
jns
push
fsubs
fdivrs
in
es
jl
lahf
push
enter
pop
mov
push
imul
incb
sub
push
lds
outsb
outsl
fmull
cmpl
add
mov
mov
dec
lds
add
cmp
cmpsl
add
add
js
sub
push
lods
mov
loop
int
imul
sbb
or
push
or
je
stos
inc
pop
xor
mov
jge
mov
imul
loopne
add
add
sbb
loopne
mov
sub
aad
test
jge
imul
roll
std
addb
pushf
xchg
adc
gs
cmp
inc
gs
pusha
lret
ljmp
fistpl
dec
push
icebp
lods
shll
decl
or
push
dec
cwtl
test
cmpsl
adc
sub
xor
lcall
sub
mov
jg
pop
push
xchg
mov
out
pop
jmp
mov
add
inc
sbb
jb
xorl
sub
dec
pop
sbbb
movsl
fcoms
pop
sbb
jecxz
dec
dec
and
cmp
or
dec
int
fists
mov
addr16
xchg
ss
mov
jno
add
cwtl
sbb
lock
mov
push
lahf
clc
outsl
subb
adc
inc
xlat
jge
push
loopne
cmp
js
repnz
pusha
mov
fst
jecxz
push
fisubl
mov
bound
das
add
xchg
lods
adc
mov
aaa
divl
shll
fidivs
lds
sbb
pushf
loope
inc
mov
ret
loop
cmpsl
daa
in
shrb
das
clc
hlt
out
and
loope
nop
clc
mov
ret
pusha
adc
or
clc
jg
inc
push
xchg
mov
cmp
jo
rorb
scas
push
inc
test
xor
add
jle
push
ja
stos
jno
repz
cli
nop
sub
or
stos
sub
cmp
sbb
cmc
aad
lods
push
sub
mov
lea
mov
lock
ja
xorl
sub
jmp
loopne
mov
lods
and
jge
jnp
push
dec
cmpsl
jge
fnstcw
pop
cmp
inc
lea
rcrb
mov
bound
shll
xchg
subb
dec
jne
in
push
dec
jmp
scas
push
aas
add
cltd
mov
mov
mov
iret
ficoms
sbb
popa
lea
lods
xor
jo
cmpsb
adc
mov
mov
lret
sahf
shl
or
or
dec
lcall
xchg
stos
test
xor
imulb
mov
movsl
addb
imul
rcrl
sub
sbb
ret
push
jo
xchg
orps
loope
add
aaa
ret
xorl
mov
inc
js
sub
jns
js
divb
sahf
mov
test
push
lcall
sbb
jl
jle
jne
mov
cmp
clc
cmp
push
js
mov
or
lret
nop
push
dec
xor
inc
in
mov
lret
pop
dec
bnd
dec
addb
sbb
gs
int
push
push
cld
es
dec
movl
idivl
xor
mov
or
mov
or
lahf
xchg
xor
sbb
outsb
negb
std
ljmp
leave
ficoms
dec
cli
pusha
gs
add
dec
inc
sub
dec
movsb
cltd
lea
clc
cwtl
lret
inc
test
test
jecxz
jp
cltd
js
sub
push
fistl
jge
enter
or
mov
cmp
pop
jo
insb
imul
xchg
add
shrb
xchg
adcl
sbb
outsl
xchg
jno
sbb
inc
mov
xlat
mov
xchg
imulb
xlat
add
loop
cmc
in
cmpl
lahf
adc
pop
mov
add
cmp
arpl
bound
scas
scas
orl
dec
xchg
add
mov
adc
neg
imul
and
adc
and
xor
adc
stos
xchg
jb
fstpt
jg
xchg
daa
cmpsb
mov
in
inc
int3
std
pop
add
inc
in
mov
je
add
pop
pop
cld
lock
fwait
or
or
add
ret
and
mov
add
rcr
inc
in
lods
sbb
ret
sbb
mov
sub
inc
pop
ret
icebp
in
pop
adc
mov
push
cmp
sbb
sub
sbb
js
push
cmp
ljmp
xor
in
mov
jae
add
incb
fildl
mov
callw
xchg
outsl
dec
mov
mov
mov
push
gs
sub
lds
mov
and
jnp
jmp
mov
js
xor
addr16
add
sub
movsb
cmpsl
fadd
filds
and
pusha
outsl
cmp
cltd
mov
mov
aas
mov
mov
pop
push
ret
jns
adc
lret
push
shl
lods
or
stc
fildll
aaa
leave
jmp
mov
stos
sub
jecxz
ljmp
rolb
xlat
mov
imul
xchg
dec
sbb
in
nop
xlat
jnp
test
adc
rcrb
and
adcb
push
mov
inc
in
mov
and
fists
les
jnp
shlb
push
cmc
mov
cmc
aad
sbb
orl
les
je
pop
sbb
dec
pop
bound
dec
ror
lock
aaa
mov
push
mov
or
rclb
fisubrs
movsl
xchg
sub
shr
adc
jnp
gs
add
add
sub
xchg
mov
xor
pop
out
xchg
cmp
push
sbb
fs
aaa
mov
add
filds
outsb
in
jmp
mov
push
call
test
scas
inc
xchg
hlt
pop
popf
loopne
movsl
sbb
pop
dec
enter
or
xor
xchg
sub
lock
xlat
push
mov
xchg
imul
sub
sub
addr16
lods
add
mov
movb
loop
daa
mov
xchg
push
lret
enter
mov
scas
mov
lret
lds
cmp
adc
jp
xchg
jle
xchg
sbb
gs
dec
std
add
jbe
xor
inc
xor
mov
mov
xchg
sbb
fwait
or
inc
cmp
sub
jp
or
push
mov
xlat
pop
cmpsb
rcr
jo
into
repnz
ljmp
cmp
ds
lea
mov
mov
inc
outsb
dec
and
cmp
mov
ficompl
outsl
push
fcmove
inc
ret
sbbl
mov
pop
orl
loop
inc
jmp
jmp
popa
dec
inc
scas
mov
jg
cmp
inc
adc
enter
mov
imul
mov
fildll
pusha
mov
leave
test
movsl
inc
lds
xor
lahf
pop
cmpl
outsb
jmp
adc
jp
mov
js
bound
jmp
sbb
in
sahf
jle
and
dec
mov
movsl
cmp
int
mov
pop
cmp
pop
pop
add
sub
and
cmpsb
fldcw
lahf
arpl
mov
pushf
jmp
ret
push
mov
inc
push
sbb
test
push
adc
push
mov
lret
sbb
mov
imul
push
add
pop
sbb
cmpsl
insb
sbb
fidivrl
clc
cmpsl
jge
in
mov
adc
mov
add
stc
xor
pop
ficoml
sarb
das
mov
lock
dec
mov
push
adc
arpl
ljmp
dec
xchg
pop
in
bswap
inc
std
jge
roll
test
test
test
xlat
fildll
sub
add
leave
insb
test
dec
mov
into
fistpl
pop
or
lahf
lods
inc
out
jle
mov
into
sahf
jp
into
push
pop
or
loop
popf
cltd
fucomip
adc
cmc
xchg
lea
push
in
push
das
push
cmpsl
out
clc
add
or
lret
icebp
movsl
pop
xchg
mov
shl
and
pop
fcmove
cmpsb
cmpsb
pop
mov
test
les
push
or
mov
inc
dec
xchg
and
jmp
movsb
movsl
xchg
mov
dec
sub
or
aas
arpl
fadd
jp
js
add
dec
pop
mov
arpl
or
iret
and
jno
call
and
push
inc
pusha
push
xchg
or
cmc
test
mov
xchg
pop
std
push
out
mov
lock
dec
shl
aam
push
sbb
adc
mov
dec
sbb
scas
insb
jb
adc
lcall
dec
adc
rcr
clc
fstpt
cs
push
out
or
cmp
xor
pop
mov
add
sbb
xchg
push
aaa
xor
inc
pop
out
xor
and
lahf
out
nop
xchg
rcrb
dec
lret
enter
adcb
ret
mov
mov
sbb
flds
shlb
cwtl
or
nop
bound
pop
pop
xchg
jne
ja
dec
cwtl
hlt
lods
adc
call
loope
mov
inc
out
or
mov
inc
cmp
or
xor
adc
nop
lret
jne
mov
jne
jecxz
pop
add
pop
rclb
repnz
push
mov
inc
nop
subl
scas
in
mov
test
outsl
jecxz
jns
aam
mov
cltd
jne
fwait
cmpsb
notl
jg
sub
push
push
xchg
add
mov
std
xchg
ret
lods
jp
and
outsl
mov
in
jb
outsl
lock
fsubl
hlt
mov
cmp
adc
fistpl
sub
cltd
jnp
pop
dec
sub
movsb
sub
mul
mov
daa
add
sub
cli
popf
mov
push
shrb
mov
inc
sub
cmp
jl
fscale
xor
mov
push
push
andl
rol
xchg
fiaddl
rcl
mov
or
mov
or
dec
pop
popf
xlat
leave
mov
setp
push
adc
or
outsl
pop
mov
aaa
ret
mov
mov
fmuls
loopne
repnz
pop
hlt
mov
testl
fidivl
mov
aas
fsubs
hlt
pop
xchg
das
movsb
shlb
shl
dec
pop
test
sub
jge
push
mov
inc
mov
bound
sub
leave
shrl
inc
notb
and
cmpl
inc
les
inc
xchg
repnz
sub
sub
or
xor
cmc
in
and
cwtl
cli
cld
rcl
xchg
test
jb
cmp
out
mov
push
lahf
inc
pop
clc
orb
cmp
xchg
sub
in
popf
pushf
popa
dec
mov
sub
js
dec
mov
pop
out
in
lods
jne
and
mov
loopne
cmpsb
dec
cltd
mov
xchg
cmpsl
insb
cmc
std
int
adc
in
jmp
or
pop
nop
insb
ss
xchg
test
rorb
mov
icebp
loop
movb
jae
push
pop
cwtl
lods
mov
lds
imul
cmpsb
ret
addr16
push
pop
jbe
cli
aaa
fdivl
fildl
bound
xchg
or
mov
xchg
cwtl
fisubrs
dec
jecxz
pop
dec
mov
sub
test
jp
xchg
push
xchg
dec
out
adc
into
lods
fidivl
rorl
aaa
ds
out
in
sub
sbb
mov
nop
dec
fidivrl
cmp
xlat
sbb
inc
xchg
inc
cmp
daa
xchg
and
jl
popa
push
or
ret
mov
xor
jge
inc
mov
insl
add
or
out
xor
push
mov
pop
idivb
jb
sahf
incb
xchg
xchg
repz
pop
fcoml
jne
mov
mov
mov
fs
insb
pushf
sahf
pop
xor
push
mov
inc
outsb
testl
outsl
sbb
xchg
insb
iret
inc
loop
jg
push
lret
mov
inc
mov
push
push
add
sbb
jg
fiaddl
jge
movsb
loop
popf
mov
mov
shlb
cmp
mov
inc
aad
repz
stos
test
outsl
fnsave
loop
jns
in
mov
push
popa
xor
lret
and
aad
mov
je
mov
cltd
enter
sbb
clc
mov
or
lea
jns
mov
cli
test
mov
in
ror
cmp
sub
mov
cld
add
fldl
icebp
mov
adc
cld
pop
movsl
sbb
cs
lret
lret
jb
loopne
inc
aad
cmp
sbbl
cwtl
add
lock
fucomi
push
lods
aad
adc
or
mov
pop
push
lock
rolb
das
fidivrs
push
out
mov
pop
ljmp
and
rorb
mov
xor
out
jo
jge
xor
scas
mov
push
xor
scas
xor
or
pusha
push
mov
andl
scas
lret
out
mov
pusha
mov
cli
hlt
mov
sti
mov
movsb
int
or
orl
lods
loop
jl
test
js
imul
pop
movb
cmp
mov
inc
push
ljmp
cs
pop
sub
aam
outsl
jmp
sub
xchg
push
pop
xchg
je
pop
js
or
ds
mov
fimull
jmp
sub
movsl
push
rcrl
lret
xchg
push
xor
pushf
push
fsub
mov
push
mov
stos
push
xor
cltd
mov
dec
je
inc
push
cmpsl
je
fisttpll
arpl
jnp
xchg
pop
insb
bound
ficomps
arpl
imul
push
icebp
mov
jecxz
shl
inc
aad
xchg
aam
scas
add
ret
push
loop
call
cmp
mov
and
or
clc
lock
out
and
ss
fcomi
jns
push
inc
jno
ljmp
in
and
jg
repnz
jl
dec
mov
lods
add
repz
out
daa
mov
mov
out
shlb
insb
test
aad
jno
inc
ffreep
imul
sub
xlat
sub
ret
fidivl
lods
push
int
iret
ret
jle
xchg
dec
fldcw
cmp
sbb
mov
sti
sub
dec
xchg
jmp
test
negb
inc
scas
vpunpckhqdq
cmp
mov
inc
dec
fadd
adc
pop
add
ret
mulb
mov
fiaddl
xchg
mov
adc
sbb
inc
push
lds
leave
mov
insl
invd
sbb
ja
mov
outsl
jno
adc
mov
sti
repz
and
dec
rcrb
fsubrl
jns
cmpb
jecxz
xchg
mov
movsb
adc
fistl
stos
mov
mov
jo
xor
xor
mov
in
or
aas
mov
lret
xchg
xchg
pop
sbb
cmp
mov
inc
mov
es
in
or
test
mov
lcall
pop
aam
stc
testb
stc
inc
mov
mov
push
daa
sbb
rcr
dec
push
pop
inc
cmp
in
dec
fcmovu
inc
repnz
stos
lods
lret
jl
hlt
fisubs
mov
xchg
inc
push
imul
adc
sub
or
imul
sbb
jp
sub
ret
sub
repnz
mov
pop
inc
in
sahf
lods
popa
jg
add
stc
imul
fdivs
mov
xor
out
outsb
adc
sub
ja
push
mov
subl
test
mov
adc
jecxz
pop
jo
cmp
and
icebp
repz
dec
add
addr16
cmp
sub
xchg
and
jno
inc
ficompl
push
aaa
shl
pusha
pop
fstl
sbb
push
dec
lea
test
fisubrs
pushl
mov
dec
or
sub
icebp
mov
push
repnz
jnp
add
sbb
aam
sbb
call
cmp
push
inc
jb
pop
cmp
dec
std
push
mov
inc
lock
jmp
fsubl
loop
call
sbb
shrb
push
test
adc
sub
mov
jmp
lds
mov
and
sbb
pop
outsl
out
sub
dec
pop
stos
cli
jg
mov
gs
cmpsb
test
pop
xchg
sbbb
test
test
mov
push
xor
scas
mov
or
and
fisubs
mov
inc
dec
pushf
in
mov
dec
mov
mov
cmp
add
movsb
les
jb
lret
sti
movsb
rclb
cmp
lods
pushl
push
in
lahf
jbe,pt
add
inc
lahf
mov
jl
push
mov
xor
push
mov
push
pop
scas
outsb
loopne
lock
cmp
inc
xchg
xor
push
mov
out
orl
inc
add
pop
dec
push
pop
pop
stos
push
test
xor
xlat
loopne
mov
ret
and
repnz
add
fstpt
insw
pushf
xor
in
lods
dec
sbbl
icebp
cmp
ds
mov
sbb
movsb
test
fidivrl
aaa
popf
xchg
leave
pushf
daa
cmp
loopne
pop
ret
inc
mov
enter
push
enter
push
dec
sbb
mov
orb
sub
pop
rol
ret
jmp
cmp
js
stos
mov
jge
jg,pt
stos
in
icebp
cmp
pop
sbb
mov
mov
cld
mov
push
lods
sbb
mov
cmp
je
adc
add
call
jmp
call
icebp
out
mov
xchg
leave
arpl
mov
mov
nop
xor
dec
popa
pushf
mov
out
nop
movsl
jo
mov
adc
jbe
dec
adc
xorb
xor
add
adc
pusha
lock
push
loope
jl
mov
sub
add
outsl
les
or
lock
or
adc
es
jge
mov
movl
mov
pop
add
jecxz
mov
and
popf
mov
sarb
jge
pusha
cmc
mov
or
push
pop
pop
sahf
cs
and
mov
test
dec
mov
xchg
mov
sub
dec
pop
test
cmp
push
add
jl
aad
sbb
cmc
adc
fwait
insl
stc
jns
sbb
jg
pop
ss
cmp
leave
inc
scas
nop
lds
inc
pop
and
int
xchg
mov
ja
or
sbb
push
pusha
adc
pop
add
dec
movsl
or
dec
lods
dec
add
dec
pop
xchg
fsubl
sub
mov
sbb
in
rorb
lea
xchg
fsubl
loope
aam
pop
leave
mov
or
mov
in
cmpsb
es
push
adc
insw
inc
xor
mov
add
add
sahf
push
jge
cmpsl
enter
dec
movsl
movsb
cld
lock
push
push
cmp
add
outsl
jno
push
or
xor
and
stc
add
push
lea
inc
xlat
xchg
sbb
pop
or
xchg
mov
xchg
cmc
pop
push
iret
les
and
lods
lds
adc
imul
xchg
movsb
outsb
fs
push
test
push
aam
or
fwait
inc
mov
lcall
popf
xor
rorl
in
shlb
neg
push
pop
cmp
subb
inc
cs
jno
fidivrs
xor
fiaddl
ds
mov
clc
and
ljmp
inc
aad
xchg
add
icebp
sub
clc
add
lret
jne
jmp
sbb
sub
pushf
pusha
rcll
jbe
fnstsw
dec
fucomip
xlat
mov
xchg
fadds
mov
xlat
ljmp
push
mov
popa
std
cmpsb
pop
dec
mov
mov
jmp
adc
xchg
adc
pusha
fstpt
adc
sub
out
push
inc
cmc
or
test
repnz
lcall
jg
jge
movsl
add
jno
mov
push
fwait
cmp
ja
mov
push
loop
call
aas
xchg
pop
ds
test
or
popa
fsubrs
xchg
jno
outsb
pushf
repnz
lret
loope
and
dec
or
outsb
jb
mov
jne
mov
ss
ds
lret
lcall
and
sub
leave
inc
inc
inc
in
mov
data16
movsl
iret
inc
repnz
arpl
lret
popa
dec
cli
nop
ss
in
inc
dec
xchg
pop
ret
pusha
loope
mov
push
mov
ret
nop
pop
and
mov
lds
mov
loopne
pop
lock
pop
mov
push
push
pop
pop
popl
xchg
es
pop
fmuls
mov
ret
mov
fisubrl
inc
jo
or
test
lea
dec
lea
mulb
push
xchg
push
lods
mov
push
pop
pusha
fdivrp
stos
push
cli
mov
icebp
stos
xchg
mov
mov
jbe
jae
mov
stos
jmp
test
das
lret
mov
inc
sbb
jne
mov
adc
pop
jecxz
xor
push
cmp
sbb
mov
cmp
xlat
imul
repnz
testb
sub
lds
cmp
dec
pushf
xchg
lcall
xchg
das
mov
roll
out
insb
sbb
sbb
and
imul
fcomp
xchg
imul
int3
ljmp
out
pavgb
imul
and
dec
sbb
add
popa
adc
movsl
mov
push
cmp
jg
fildll
out
add
sub
outsl
incl
into
mov
mov
xor
enter
xchg
mov
push
mov
sbb
or
xlat
adc
xor
mov
mov
mov
sbb
rol
cmp
outsl
lahf
pop
xor
mov
adc
paddsw
ret
xchg
popf
jae
nop
sbb
jb
mov
mov
pop
pushf
sbb
ficompl
push
es
movsl
push
sbb
dec
sahf
lahf
int
shrb
mov
sti
mov
mov
ljmp
xorb
fiaddl
xchg
ljmp
rolb
or
adc
mov
arpl
ret
andb
push
xchg
leave
dec
test
sub
push
sbb
roll
insl
xor
sarl
mov
jb
sahf
mov
lahf
into
mov
repnz
pop
or
push
outsb
xchg
xchg
push
jg
push
fsubrp
lret
jmp
dec
lock
enter
bound
data16
les
hlt
cltd
xchg
js
stos
test
adcl
adcb
add
xchg
scas
in
jbe
mov
mov
aam
xor
xor
stos
call
add
xorl
mov
std
inc
sub
add
ret
jnp
movsl
sbb
xlat
adc
sub
inc
shlb
scas
jb
mov
mov
roll
ds
lcall
or
jns
mov
js
mov
sti
insb
add
mov
dec
lahf
bound
jge
pop
adc
test
jno
cmp
jnp
cmp
insl
ret
in
mov
cmp
cmp
mov
dec
pop
pushf
push
bound
adc
test
sar
gs
test
jmp
pop
or
lahf
jg
pop
movsl
xchg
rolb
rolb
pop
dec
lret
and
outsl
or
dec
mov
mov
mov
sbb
fs
pop
cmp
fidivrs
cmp
ds
pop
mov
cltd
push
frstor
daa
fisubs
int
out
cwtl
es
roll
or
das
call
mov
daa
lods
lcall
push
adc
ucomiss
aad
and
sbb
jne
cmp
rcr
sbb
pop
sub
enter
aam
lock
js
cli
or
aas
dec
push
cmp
call
fdivrl
push
mov
flds
jns
xor
sbb
call
pop
xchg
push
call
jl
push
shrl
push
jge,pt
popa
ret
inc
mov
pop
dec
xchg
dec
xor
mov
push
hlt
test
sti
or
enter
out
xchg
lods
ficompl
and
pop
jmp
push
mov
sbb
xchg
and
insb
cld
fwait
mov
jbe
xor
repnz
mov
je
inc
xchg
mov
pop
mov
lcall
jne
xchg
lret
adc
mov
lods
mov
lahf
cltd
mov
mov
repz
jecxz
fcmovnb
lods
leave
popf
add
aas
sub
int3
dec
out
lods
mov
adc
out
subb
xchg
pop
xor
jns
roll
add
loopne
xchg
xor
cmp
add
shlb
cmp
sub
pop
cmp
push
or
pop
pop
sahf
icebp
enter
subb
cmp
jle
xor
inc
adc
inc
jae
mov
mov
enter
mov
add
psubusw
mov
cld
test
sub
adc
jns
or
mov
out
into
sub
jmp
gs
cmp
mov
mov
cmp
jne
decb
mov
std
gs
cmp
lock
cmp
xchg
popa
pop
shr
jns
gs
push
fcmovu
mov
fldcw
out
test
scas
sarb
movsb
mov
lock
cmp
sub
push
cmp
dec
inc
testb
ja
fisubrl
inc
mov
xor
xor
rcrl
and
sub
sbb
iret
pop
mov
push
mov
sub
dec
out
add
jp
mov
std
pop
dec
movsb
jg
cmp
xchg
pop
sub
int
gs
in
mov
xchg
mov
aaa
add
mov
andb
cmp
push
xlat
and
adc
pop
pop
adc
jecxz
aaa
sub
mov
lds
hlt
sbb
push
add
mov
mov
lods
mov
testl
ds
sbb
movsl
and
in
in
xchg
cli
std
out
cltd
in
imul
and
stos
mov
ja
push
pop
loop
cmc
ret
lcall
jle
bound
dec
jge
decl
xchg
mov
inc
cld
fs
mov
cmp
pop
shr
out
sbb
lcall
incb
repz
sar
scas
je
lahf
lcall
push
jl
out
fnsave
sub
std
nop
xchg
inc
int3
je
int
xchg
orb
add
push
jp
subl
dec
xor
jecxz
dec
inc
outsb
mov
out
push
call
push
push
sub
sti
mov
xchg
aad
imul
xor
cld
aaa
mov
inc
dec
jbe
sub
mov
or
pusha
or
lret
jbe
inc
loope
shrb
lds
add
mov
divl
push
mov
inc
push
xchg
jns
sbb
ljmp
bound
pop
add
pop
inc
lcall
popa
jbe
inc
xchg
sub
das
jbe
sahf
ljmp
psrlq
test
shll
addr16
in
filds
lar
mov
sub
add
cmp
xchg
fcom
repz
jno
pop
mov
mov
add
mov
mov
mov
xor
arpl
insl
ja
inc
and
cmp
jne
or
mov
negl
mov
lret
jl
xor
sub
pop
cmp
ret
ds
test
sub
dec
adc
into
cwtl
sub
popa
dec
cmp
sahf
mov
cmpsl
push
cmp
pop
subb
mov
lock
lret
adc
push
out
cmpsl
mov
sub
scas
outsb
pushf
and
pop
mov
and
mov
ds
sub
cmp
xor
mov
mov
xchg
push
mov
nop
lahf
lock
into
outsb
mov
ljmp
pop
or
mov
aaa
cltd
stc
outsb
push
test
jne
push
push
lods
jl
lret
enter
cmp
icebp
les
hlt
xchg
push
outsb
cmpsl
nop
cwtl
dec
into
dec
dec
jg
rcll
mov
xor
dec
adc
mov
and
cmpl
xchg
sbb
notl
insl
and
fistl
imul
fmuls
cwtl
jle
out
cmp
ds
mov
add
jae
jl
adc
push
std
pusha
iret
ret
insl
dec
xchg
or
xchg
xchg
mov
push
mov
jnp
push
xchg
pop
mov
mov
jbe
loop
imul
jge
test
pop
mov
xchg
and
mov
push
cwtl
ret
pop
ljmp
es
sahf
dec
pushf
dec
push
scas
leave
clc
sbb
out
mov
lods
add
sbb
adc
adc
fmul
in
cmpl
jae
pushf
inc
or
out
sub
adc
ss
insb
pop
scas
sbb
lds
xchg
aas
mov
pusha
xchg
daa
aad
incl
fs
jnp
pop
add
mov
sub
mov
add
and
add
and
mov
in
dec
lahf
lea
adc
mov
xor
jge
stc
iret
lret
cld
mov
insb
xor
or
cwtl
and
xchg
xor
aaa
sub
sbb
repz
fmuls
push
adc
cmp
fnstenv
lods
or
xchg
lahf
dec
mov
xchg
or
pushf
mov
and
xor
sti
jne
test
or
push
cmpl
xor
sti
adc
mov
pop
cmp
call
jnp
jo
into
mov
jo
iret
sub
frstor
pop
xchg
shrl
push
fidivs
jle
je
xor
imul
shrb
iret
shrl
into
cmc
fistps
add
daa
mov
jle
movsw
xor
or
out
xchg
jle
insl
fcoml
lret
mov
adc
ret
test
cmp
shrl
jae
fs
into
jle
popf
and
sub
subl
or
inc
repnz
pop
pop
xor
inc
pop
xor
cmp
sub
outsl
sub
dec
or
jo
xchg
add
push
test
inc
js
sar
sbb
test
dec
andl
outsb
jb
xor
scas
fcoms
mov
popa
cmp
scas
filds
add
sub
and
mov
ror
adc
xor
adc
ret
or
push
loop
lcall
push
xchg
int3
xorl
daa
std
xchg
insl
jo
repz
pusha
ds
aad
mov
nop
push
sub
xor
jb
inc
pop
cmpl
and
and
lock
jnp
xchg
pop
xchg
mov
jp
lret
mov
inc
inc
sbb
jecxz
btc
add
sbb
fwait
adc
sbb
pushf
stos
pop
jge
jmp
mov
add
inc
push
xor
xor
loop
fsubrs
sub
decl
jns
or
inc
popf
adc
lock
or
jle
idivb
xchg
push
stc
icebp
xor
lds
cmpsb
into
stos
inc
mov
aad
inc
les
popf
jle
and
xlat
data16
push
mov
jg
cltd
out
sbb
sbb
cwtl
js
or
inc
mov
xchg
xchg
out
xchg
jno
mov
jle
xor
addl
sbb
iret
and
add
divb
popf
gs
inc
push
rcrb
jecxz
fs
push
test
sbb
or
xchg
loopne
and
mov
test
inc
in
and
mov
pop
lea
and
mov
sbb
test
aam
sbb
cmp
push
and
cmp
mov
subb
into
dec
aas
xchg
pop
or
push
mov
mov
sub
cltd
pop
adc
js
pop
xor
xchg
and
int
psllw
test
adc
cmova
or
xchg
add
pusha
fdivs
pop
movsl
adc
movsb
push
mov
xor
inc
es
inc
mov
and
outsl
jg
sbb
add
xchg
mov
sbb
jge
fidivl
or
fistl
mov
stc
cmc
pop
inc
jb
mov
test
fidivl
add
repz
jp
repz
inc
add
repz
pop
cltd
cmpsb
pop
xor
xchg
test
xor
xor
loopne
bound
mov
icebp
aam
pop
sbb
sbb
push
pop
daa
or
popa
js
es
pop
sub
daa
mov
test
fisubrl
fstpl
daa
filds
clc
fwait
imul
mov
inc
fistps
inc
cmp
jnp
rcrb
daa
shr
pop
sbb
pop
pushl
cld
aaa
lds
push
mov
dec
je
mov
out
ret
push
mov
pop
jne
push
cs
bound
imul
xchg
ja
jle
decb
cld
sbb
ds
jns
add
stc
mov
imul
adc
jo
xor
leave
xchg
dec
sahf
int3
push
shlb
sti
dec
clc
jp
xor
inc
ss
push
add
xor
sbb
pop
sub
mov
adc
nop
inc
outsb
arpl
sahf
out
and
sub
cmp
imul
cwtl
mov
sub
jmp
cmpsl
cmc
sti
sbb
hlt
dec
pop
mov
fs
mov
pop
xchg
repnz
rclb
add
mov
sti
ds
sbb
or
jmp
rcrb
sbb
in
xchg
std
lods
cmpsl
loopne
mov
data16
hlt
test
cmp
pop
bound
in
jmp
jl
aas
loop
cld
cmp
arpl
and
outsl
mov
mov
movsl
push
negb
into
xor
adc
xchg
aad
fisubrs
and
push
xchg
lahf
out
xlat
bnd
aam
mov
clc
out
mov
hlt
add
pop
and
cld
mov
pop
data16
pop
xchg
xchg
stos
int3
adc
cs
adc
xor
or
inc
push
push
add
test
arpl
cwtl
push
leave
pop
sahf
adc
dec
scas
lods
mov
sbb
mov
icebp
repnz
jmp
fldt
notl
adc
lds
int3
pop
jbe
repz
rcl
mov
push
inc
lods
loopne
inc
cmp
jl
mov
lcall
ret
mov
push
jmp
cmp
inc
shlb
jmp
inc
inc
cli
pop
js
xchg
das
pop
cmpsl
xchg
rorb
jge
xchg
sub
mov
dec
mov
jb
jl
fdivr
repnz
inc
out
push
xor
pusha
in
jo
dec
test
out
idivb
idivb
out
outsl
xchg
aaa
cmp
lods
shrb
insb
lahf
ljmp
add
or
xor
stos
mov
enter
dec
stos
popf
xor
jmp
pop
lfs
mov
jae
test
inc
imul
jecxz
outsb
loope
cmpsb
add
xchg
lret
iret
bound
out
cmp
hlt
test
in
push
cmp
sbb
add
test
ja
mov
xorb
mov
shl
test
enter
inc
adc
dec
imul
inc
mov
dec
loope
jno
mov
loop
sbb
je
cs
mov
mov
int3
ss
in
loope
sub
jecxz
subl
cmp
test
push
sub
std
and
subl
push
movsl
xor
pop
cmp
imul
add
pop
lea
mov
ret
imul
pop
pop
jle
std
push
mov
enter
mov
nop
out
push
add
and
enter
xor
js
imul
pop
mov
iret
nop
inc
outsl
and
movsl
cmp
add
lret
jmp
std
insl
scas
add
in
aas
rclb
popa
xchg
cmpsl
ja
or
pop
in
inc
push
ja
aam
insl
or
aaa
stos
ljmp
cmc
movsl
rclb
mov
jecxz
lret
sub
out
mov
fbstp
push
out
pop
sub
mov
lods
test
xor
clc
cmc
xor
ljmp
adc
pop
out
pop
sbb
dec
add
and
add
pushf
jbe
mov
mov
mov
mov
pop
mov
aam
mov
cld
in
enter
cmpsb
lcall
or
punpcklwd
lock
loopne
inc
popa
pop
fsub
xchg
xor
scas
inc
xorl
lods
stos
data16
fbld
pop
dec
add
xchg
lea
stc
xor
out
inc
xor
mov
movsl
jg
gs
leave
xchg
je
es
ja
std
or
popa
testl
xchg
mov
mov
in
movsl
ds
movsl
inc
fisttps
sub
xchg
lods
insl
add
pop
xchg
jecxz
mov
push
push
sbb
ret
jbe
aad
pop
outsl
adc
cmpl
lahf
inc
int
imul
and
xchg
rcrl
int3
icebp
fisttpl
and
sbb
push
cwtl
mov
insl
cltd
ficoms
rorl
xchg
scas
les
pop
outsb
imul
sbb
xor
pop
mov
sbb
cmp
je
js
pushf
push
test
pop
std
jp
ljmp
pop
push
lds
sub
cmc
mov
sub
jns
sbb
push
lock
fimull
inc
pop
jl
push
inc
push
int3
and
lret
or
sub
bnd
jmp
out
xchg
in
adc
lret
pop
pop
insb
cmp
xor
mov
dec
xor
dec
ret
mov
fidivrl
sbb
rclb
in
fdivr
mov
stos
pop
je
outsl
sbb
push
dec
stos
outsb
lret
test
in
add
push
ja
xchg
mov
add
sub
je
and
jbe
xchg
insb
cs
mov
add
cmpsb
lahf
mov
mov
jbe
push
sub
in
pop
outsb
add
sub
inc
ret
jbe
push
push
dec
ljmp
dec
push
mov
xor
jno
les
in
int
xchg
sbb
lahf
jl
rorl
adc
ret
mov
xchg
cwtl
in
loopne
loopne
sbbl
mov
push
dec
adc
sub
push
cmp
push
mov
into
sub
push
dec
xchg
jle
and
addr16
mov
ror
sbb
outsb
mov
xchg
out
and
fsubl
imul
popa
push
ret
sub
sbb
out
push
jno
xchg
cmpsl
mov
jno
and
jmp
loop
fs
sbb
lods
jae
nop
xchg
icebp
sub
ficoml
arpl
pop
std
dec
gs
and
shr
test
jecxz
mov
inc
mov
jb
aaa
cmc
dec
out
shlb
jmp
lods
leave
sbb
fsubrs
xchg
stos
sysexit
in
xor
fs
xor
mov
dec
and
mov
mov
jg
mov
sarb
cld
test
popa
sbb
mov
pop
mov
out
or
fistl
pop
pop
add
mov
ljmp
out
fstpl
sbb
cmp
xor
lock
and
mov
fldlg2
fldenv
je
cmp
jno
sub
adc
xor
dec
jmp
mov
out
jne
aas
jge
cmp
inc
ficoml
fwait
push
mov
imul
pop
add
jmp
add
sub
out
dec
pop
push
jbe
push
out
loop
pop
sub
xor
aaa
inc
xchg
adc
lds
sub
jbe
sub
inc
and
inc
adc
popf
loopne
mov
in
mov
or
sbb
movsb
push
lret
xor
push
roll
cwtl
adc
leave
mov
inc
cli
mov
mov
pushf
sub
add
push
and
and
ljmp
rorb
add
js
adc
jmp
push
or
les
add
xchg
mov
push
loope
pop
jecxz
dec
arpl
jne
loop
cwtl
sub
jne
bound
call
adc
adc
cld
es
imul
adc
scas
sbb
movb
lcall
cmp
mov
fsubs
xor
jne
xor
cld
jno
fistpl
dec
inc
mov
ljmp
push
pop
pop
daa
outsl
adc
mov
sub
movsl
push
cmp
js
test
and
arpl
stc
sarl
mov
adc
popf
in
xchg
ss
cmpsl
int3
pusha
pushl
mov
aad
mov
jae
lds
lds
pop
addl
dec
pop
lds
mov
cmp
aad
add
inc
fsts
and
jno
pop
pop
push
mov
or
lods
dec
cmp
xchg
insl
loope
mov
mov
sbb
xor
stc
mov
xchg
outsl
or
push
inc
xor
sub
mov
push
xor
pusha
sub
dec
scas
inc
cmpsl
mov
shrb
stos
jl
in
pushf
ja
add
jnp
jo
cmp
fisubl
cmpsl
imul
popf
test
outsl
shrb
arpl
pop
add
call
mov
aad
inc
dec
jns
mov
into
pop
jns
fsub
mov
sti
jnp
pop
scas
frstor
pushf
jns
rorl
fs
test
loopne
call
inc
cwtl
cmp
ret
xor
jae
mov
dec
push
out
push
jle
fistpll
insb
loope
xlat
inc
add
pop
xchg
in
pop
lea
int
mov
push
negb
stc
fldcw
int3
sub
dec
cmpsl
test
jp
push
cli
pusha
xorb
add
cmp
test
fwait
xor
je
cmp
test
and
outsl
xlat
dec
cmp
out
inc
jbe
sub
mov
sub
mov
mov
sbb
ja
jb
inc
mov
mov
jmp
mov
adc
inc
add
mov
ficompl
and
sub
mov
bound
cwtl
ds
mov
jno
lods
stos
clc
imul
rclb
pop
pop
dec
mov
inc
in
es
xlat
or
push
xchg
sub
out
movsb
int3
push
xor
mov
xor
cmp
jecxz
aas
xor
fadds
movsl
es
mov
aaa
mov
dec
xchg
in
cmpsl
pushf
cltd
cmp
test
push
fsubs
push
insb
push
iret
push
ret
fiaddl
mov
and
add
nop
aas
insl
mov
jmp
push
sub
inc
mov
and
mov
leave
es
or
pop
out
cmp
lret
jae
mov
xchg
in
jge
adc
adc
push
addb
mov
xchg
out
js
add
adc
mov
push
loopne
sbb
int
test
testl
lock
cmp
shll
xchg
inc
add
loopne
pop
push
ret
daa
fmuls
mov
xchg
sub
cltd
and
stos
sbb
jl
fwait
mov
lcall
jbe
dec
xchg
and
mov
push
sti
lcall
mov
rcll
push
insl
mov
mov
xorb
mull
inc
imul
mov
fidivs
jg
mov
jl
pop
loop
or
out
stos
inc
insl
cwtl
js
push
rcrl
out
leave
lods
bound
fdivs
or
lahf
nop
pop
ja
jmp
cmp
push
in
push
jp
ret
mov
or
adc
pop
into
ja
insl
mov
mov
inc
mov
sbb
adc
ret
and
cmp
and
add
test
sahf
daa
loopne
ss
loope
mov
into
clc
movsl
push
cmpsl
fs
or
jg
jle
sarl
pop
dec
sbb
fisttps
into
push
adc
xchg
rcll
divb
cwtl
cmc
inc
pop
add
fnstenv
xchg
add
inc
mov
lret
repz
lods
sub
fdivrs
cli
adc
data16
in
daa
or
jne
out
adc
push
push
daa
fucomp
add
enter
lods
add
in
push
inc
cwtl
data16
mov
sahf
push
dec
and
mov
xor
push
sbb
dec
enter
add
daa
inc
rcrl
jnp
xor
sbbl
or
fucomp
cmp
sbb
and
fsubl
loope
inc
xchg
jmp
xor
pop
mov
sub
scas
xchg
xchg
mov
in
sub
pop
mov
mov
cmpsb
je
daa
xchg
mov
lods
std
push
mov
daa
adc
mov
lcall
das
pop
pop
lret
repz
insb
mov
test
push
stc
rcrb
jp
xor
icebp
mov
inc
sbb
adc
rorl
arpl
jae
xor
aam
dec
push
sub
pushf
push
jbe
sbb
popa
pop
iret
jb
int3
jo
ret
pop
mov
cmp
add
or
cmp
ror
subb
aam
call
xchg
pop
arpl
cmp
cmp
nop
test
lcall
popf
movsl
pop
lret
cmp
adc
mov
sbb
push
cmpl
gs
ret
jmp
xor
scas
pop
shrb
stc
push
cwtl
stos
sub
loopne
lcall
out
xor
outsb
pusha
lcall
dec
icebp
xor
test
xor
test
mov
clc
push
or
sbb
jae
mov
out
mov
adc
mov
sub
scas
adc
push
mov
das
sbb
cmc
jl
mov
push
xor
sub
mov
push
out
sbb
lea
jb
dec
sar
mov
insl
xchg
popf
loopne
pop
lods
push
cs
sarl
xchg
mov
jge
xchg
leave
sahf
ret
jmp
and
pop
test
push
sub
mov
sub
mov
cmp
repnz
and
mov
sub
movsb
jmp
into
jmp
inc
push
pop
mov
xchg
fs
dec
fs
jge
out
pop
in
hlt
adc
sub
push
mov
ljmp
push
and
fsubrs
lds
and
jo
add
shll
inc
inc
jno
mov
pop
pop
and
dec
iret
mov
out
sub
sar
mov
dec
loop
jnp
inc
je
mov
mov
sub
filds
xchg
cli
add
or
rorl
hlt
lahf
push
push
movsl
ljmp
lahf
add
xchg
sub
mov
or
xchg
hlt
adc
mov
imul
jb
insl
pop
mov
stos
addl
loopne
cmp
arpl
cmp
cmp
pop
loop
sbb
outsb
lahf
test
test
mov
sbb
xchg
add
mov
mov
mov
jae
jecxz
jne
push
test
sub
and
mov
adc
mov
lods
add
scas
jnp
out
movsl
dec
pop
addr16
or
mov
pop
push
add
push
repnz
fiadds
fsubrs
fucomip
sarl
pop
xchg
repnz
add
mov
and
call
mull
mov
push
and
scas
xchg
dec
jge
inc
mov
jmp
js
add
sub
cmpsb
dec
std
mov
cmpsl
out
push
loopne
jecxz
mov
push
jb
sub
cmp
xor
dec
std
jno
ret
jmp
xor
aas
xchg
loopne
and
mov
hlt
lock
repnz
fadd
stos
in
lods
ss
scas
leave
lahf
mov
jge
xchg
nop
xor
xrelease
and
dec
mov
scas
cs
inc
or
cmpsb
fdivr
and
std
sbb
data16
addr16
stc
adc
dec
cwtl
mov
mov
mov
daa
add
scas
lods
mov
inc
movsl
or
cld
xor
xor
push
popa
cmp
mov
mov
shrl
mov
sarb
int3
jo
gs
sbb
fcoml
rclb
and
add
adc
mov
enter
into
pop
dec
clc
loopne
cwtl
mov
mov
sub
add
pop
lds
add
lahf
adc
movsb
cltd
jmp
xchg
fdecstp
cld
xor
jle
xor
leave
inc
imulb
xchg
push
roll
je
push
mov
int
loopne
push
jle
adc
mov
pop
and
loopne
mov
mov
or
xor
repnz
lret
mov
mov
jnp
loopne
push
or
mov
mov
scas
jl
sub
xor
xor
repnz
or
xor
fcomi
int
mov
int3
xchg
inc
mov
mov
test
jns
push
add
pop
push
jle
ja
cmp
mov
adc
mull
dec
lret
or
loopne
sbb
adc
lock
fldenv
xlat
pop
mov
push
sub
cmp
inc
mov
adcb
sub
je
fcom
jae
in
pop
sub
adc
xchg
jb
lock
xchg
aad
mov
lahf
data16
cmpsb
mov
xchg
xchg
adc
sub
jmp
jmp
xorl
push
sti
push
xchg
pop
inc
xchg
push
enter
or
out
test
pop
fisubrl
xlat
add
jbe
pop
cmp
out
mull
push
shll
lcall
inc
lds
xchg
dec
pushf
in
loope
cmc
sub
or
stos
pop
daa
lahf
sahf
jmp
sbb
fcoml
fwait
pop
loopne
jmp
aaa
imul
and
cmp
jns
fcompl
ret
out
push
mov
adc
adc
add
jle
sbb
mov
cmpsb
xor
cld
movsl
stos
out
sub
packsswb
pop
mov
sub
arpl
add
mov
dec
das
lock
js
or
aas
adc
in
push
sub
inc
ljmp
inc
pinsrw
dec
cmp
jmp
jg
add
loope
push
dec
data16
xchg
xor
inc
push
roll
add
pop
movb
call
sbbl
clc
test
mov
jle
imul
mov
test
out
lds
fistps
cs
ja
sbb
test
dec
lock
sub
shlb
or
inc
mov
enter
mov
pop
mov
outsl
in
mov
push
cwtl
insb
nop
mov
int3
popf
shl
mov
sub
pushf
negb
push
push
inc
push
or
or
addr16
test
addr16
test
call
push
xor
imul
imul
xor
push
stos
cmp
push
roll
xchg
cld
sbb
pop
inc
enter
and
cmp
imul
mov
inc
jno
scas
out
adc
rcrl
dec
insb
xor
fcoml
test
sti
js
cmpsl
pop
or
mov
add
jge
cmpsb
adc
adc
dec
push
mov
fstpl
icebp
and
dec
loope
cmpsb
inc
pop
add
ret
jb
cmc
mov
dec
pop
add
xchg
ret
mov
cwtl
daa
jo
pop
lods
inc
inc
jns
mov
adc
mov
lods
jle
scas
in
into
pop
fmuls
pop
fadd
arpl
and
into
mov
fucomip
push
push
shrb
dec
frndint
imulb
int
xor
push
repz
std
insl
stos
and
dec
repz
out
mov
sub
or
nop
sbb
dec
fsubp
xor
mov
dec
push
rcrb
lcall
aaa
cli
je
cmp
mov
add
ljmp
outsl
and
ret
and
inc
push
jne
fmull
lea
outsb
mov
pusha
mov
sub
insl
insl
popf
ret
inc
pop
std
adc
mov
or
push
jmp
add
dec
jmp
jae
push
lcall
loope
inc
stos
call
and
sbb
ss
repnz
add
daa
outsl
sbb
sbb
ret
mov
lods
insl
call
fwait
lcall
jns
out
dec
roll
push
jge
test
call
iret
ret
inc
xchg
mov
frndint
in
icebp
outsb
cmp
inc
jbe
jnp
cmpl
lahf
inc
jns
jmp
icebp
mov
sbb
fcmovnb
cmpsb
cli
lret
jp
in
push
shll
xlat
jle
in
popa
fsts
fistps
fs
std
in
icebp
jns
and
jbe
ja
gs
das
mov
cmpsl
or
lret
mov
xorb
cld
and
movsl
lock
xchg
mov
mov
jbe
outsb
dec
and
cmp
int
push
xor
mov
int3
sbbb
shlb
mov
vunpcklps
popa
pushf
xor
push
inc
rorb
inc
and
stos
fld
sub
out
cmc
sub
sub
add
push
loopne
pop
faddl
push
ljmp
test
loopne
lods
repz
insl
insb
push
fcompl
or
push
repnz
movsl
xor
repnz
adc
push
lea
mov
icebp
inc
movsl
cmp
cmp
cmp
daa
jg
ret
loope
push
clc
adc
push
add
push
lock
outsb
cs
cmpl
dec
and
xlat
dec
in
sub
lret
push
rclb
jl
mov
pop
or
fildll
arpl
cmp
ret
mov
popf
ss
cmpsl
imul
mov
cld
in
cmp
and
push
push
inc
jg
xchg
sub
jbe
push
out
pop
and
push
leave
lea
jecxz
inc
add
adc
pop
mov
push
jae
mov
lret
hlt
pop
cmp
jmp
push
cld
sahf
icebp
cmp
pop
nop
test
xor
pop
out
jg
insl
inc
xor
mov
cld
adc
xor
out
xor
test
pusha
lock
push
mov
bnd
or
dec
rorb
jne
popa
cmp
pop
sbb
scas
fildl
sti
imul
mov
seto
insb
scas
add
int
popf
leave
push
sbb
push
clc
stc
sbb
cmp
dec
push
mov
xchg
push
arpl
and
push
test
stos
add
and
hlt
add
mov
inc
stc
sarl
stc
hlt
iret
fwait
imul
enter
cwtl
testb
scas
add
in
lods
fidivrl
and
jmp
ja
fisubs
sbb
icebp
std
flds
dec
cmp
loope
imul
jnp
mov
pushf
insl
pop
inc
movsb
add
mov
mov
jp
mov
mov
mov
mov
pop
mov
xchg
ss
sbb
inc
dec
cli
pop
pop
jbe
rcll
mov
leave
mov
imulb
inc
insb
xor
divb
push
jns
or
call
or
fmul
jl
cmp
and
sub
add
or
sbb
cmp
sbb
cmp
mov
xchg
jle
insl
test
jne
push
or
sahf
flds
xchg
aad
frstor
aad
dec
ja
cli
es
iret
jbe
sahf
push
sub
xchg
imul
or
scas
aas
pop
mov
push
inc
enter
add
xlat
xlat
test
mov
sti
ds
mov
dec
lret
dec
pusha
xor
lahf
lods
iret
dec
pop
imul
jl
xchg
and
es
gs
jo
dec
ret
or
in
fiadds
cli
loope
cmp
rcrl
movsb
es
clc
hlt
dec
mov
iret
movsb
pop
pushf
pop
add
leave
jmp
cmpsb
pop
dec
sbb
xchg
insb
lahf
mov
mov
cmp
imul
jle
in
sbb
pusha
lret
mov
shlb
icebp
jle
aas
aam
sbb
mov
xchg
nop
imul
dec
jnp
movsb
add
xchg
sti
mov
rcl
cmp
scas
xor
lds
adc
fimull
je
fwait
jg
imul
into
lds
pop
popa
or
enter
popaw
xchg
ds
mov
jmp
mov
dec
bound
pop
mov
jecxz
sbb
inc
stos
testb
int
pop
test
xchg
mov
xchg
ds
xlat
xor
sbb
push
ficoml
pop
movsb
ret
out
inc
int
adc
leave
or
push
jp
cmp
cmp
mov
hlt
sbb
xchg
test
mov
or
aaa
outsb
mov
inc
insb
popf
lret
out
push
push
out
jl
out
aas
aad
push
out
shl
mov
movsb
pop
pop
xor
popa
and
arpl
daa
push
insl
jno
dec
pop
mov
and
lret
shlb
jmp
jecxz
jne
arpl
cmp
lret
mov
loop
fwait
mov
mov
fdiv
adc
movsb
xorb
push
push
sbb
imull
das
mov
pop
pop
sbb
fdiv
xor
cmp
jb
cmp
adc
repnz
fcoms
jle
roll
jl
sbb
test
cld
dec
inc
mov
mov
repz
adc
int
das
fsubrl
cmc
hlt
aas
mov
shrl
fistpll
dec
test
push
icebp
mov
adc
fwait
push
mov
cmp
outsl
sbb
jb
repz
cmp
jp
or
dec
stos
cmp
cmc
cmp
rorl
sbb
cmp
in
jp
leave
pop
arpl
jmp
cmp
test
js
lcall
xchg
movsb
cmpsb
aad
fisttpl
mov
call
or
mov
push
in
adc
repnz
or
push
dec
jb
jge
and
scas
mov
jbe
ret
sub
mov
cmpl
ficompl
mov
movsb
test
shlb
nop
adc
mov
push
test
ss
aas
cmp
jg
orb
cmc
mov
jne,pn
aam
cmpsb
aam
mov
shl
in
mov
rcrb
lods
cmp
add
iret
jp
pop
push
call
loope
sahf
fmuls
mov
xor
and
ret
pop
mov
pusha
ret
xchg
test
loopne
or
outsl
jg
ja
push
es
and
pop
push
out
xchg
push
out
adc
sub
cmp
out
adc
push
imul
or
and
inc
mov
inc
sbb
into
push
dec
divl
jbe
push
xchg
outsb
addr16
dec
scas
jp
in
adc
imul
addb
push
xchg
mov
repnz
fs
mov
aad
xchg
push
inc
mov
pop
rorb
aad
push
jecxz
mov
mov
cmp
test
adc
sbb
mov
jbe
fsubrs
out
or
sub
ss
rdtsc
dec
mov
movsb
and
mov
je
ss
aas
es
orl
inc
inc
nop
jae
popf
cmp
sbb
rol
sbb
popf
jl
and
rcl
out
dec
xlat
push
outsb
adc
flds
mov
sbb
dec
ds
adc
popa
repz
pop
jle
and
inc
xor
shrb
enter
pop
sub
icebp
xchg
fisubl
push
cs
mov
std
xchg
cmp
rcll
in
mov
loopne
insb
jle
hlt
or
jno
push
cmp
mov
sub
or
daa
sahf
mov
add
pusha
rcrb
jnp
mov
jp
mov
or
xor
and
add
hlt
lret
mov
dec
xchg
lcall
adc
xchg
dec
and
push
cmp
add
fs
or
in
lock
mov
js
fidivrl
sub
pop
jecxz
cmpsl
shll
xchg
mov
jge
mov
repnz
gs
addr16
jmp
clc
pop
pop
pop
daa
ja
shlb
fimull
xor
loopne
and
cmp
out
add
xchg
add
add
xor
jmp
jp
aaa
cmp
fcompl
mov
in
fchs
dec
inc
xchg
aas
enter
popa
popf
jno
push
outsb
mov
dec
mov
push
adc
dec
add
lcall
sbb
and
jno
pop
lea
fcoms
sbb
xor
stos
adc
fnsave
inc
scas
idiv
cmp
add
sub
ds
push
int3
inc
mov
mov
fisttpll
dec
push
xchg
sub
dec
sbb
inc
ss
fst
and
rorb
add
add
mov
test
test
mov
xchg
mov
arpl
lahf
xchg
dec
cli
or
jbe
and
dec
mov
sub
icebp
push
dec
mov
mov
xor
and
hlt
push
sahf
mov
mov
xchg
mov
or
nop
lret
mov
or
dec
in
or
adc
cmc
loope
out
fdivs
data16
jbe
pop
adc
stc
lds
pop
inc
shlb
popa
sbb
sbb
add
dec
fwait
jge
enter
fwait
dec
adc
push
or
or
inc
pusha
fildl
adc
or
loopne
xor
or
mov
sub
and
cmpsl
adc
fwait
or
mov
repz
push
jecxz
pushf
jp
notl
xchg
gs
mov
jae
inc
dec
in
in
cli
cmc
adc
sbb
popa
push
inc
fs
pop
mov
lcall
adc
test
cmp
mov
jno
int3
fs
mov
fisubl
dec
imul
outsb
jp
add
inc
vmovd
lods
or
inc
or
movsb
mov
pop
iret
nop
out
mov
inc
mov
clc
lods
icebp
jmp
les
inc
dec
fs
jnp
je
inc
lods
sbbb
loopne
fisubl
arpl
ss
insl
pop
ds
std
mov
popf
push
fmuls
repz
pop
add
cmpb
insb
dec
sub
and
ljmp
pusha
pop
add
pop
and
aas
adc
jle
cmp
pop
or
scas
mov
popa
in
xor
in
shrb
or
les
mov
test
and
cmp
mov
sbb
cmp
mov
addb
jecxz
in
add
repz
sti
popf
fs
les
out
mov
dec
pop
jp
test
xor
mov
inc
icebp
pop
dec
mov
xchg
mov
mov
rcl
lds
test
outsb
pop
push
fcompl
jmp
rcll
pop
mov
daa
lods
dec
and
pop
rcrl
push
nop
int
les
out
sbb
xchg
fwait
push
or
add
cld
stc
xor
cmpsl
iret
pop
pusha
fisubrs
jbe
imul
inc
xchg
sub
cltd
mov
mov
fnstsw
xlat
jp
popa
cmp
sub
in
stos
je
add
mov
inc
fisttpll
jge
scas
pop
rolb
popf
dec
lea
outsb
lret
xor
push
lods
pop
pop
jmp
cmp
dec
stos
lahf
push
call
popf
jmp
inc
inc
call
mov
xchg
jl
repz
es
roll
lgs
adc
cmpsl
or
jns
pop
sub
or
adc
outsl
lcall
pushf
lret
jge
adcb
jae
in
int
add
in
repnz
outsl
push
insl
ds
pop
rcrl
and
mov
jo
pop
ret
call
outsl
rclb
lret
daa
xchg
int3
mov
or
pop
inc
add
cmpsl
sbb
inc
push
mul
jne
jmp
aam
movsb
sub
xchg
mov
out
pop
dec
push
in
inc
rolb
or
or
pushf
fstpl
xchg
add
icebp
idivl
mov
shll
fstpl
push
out
stc
insb
and
mov
cmp
rcrl
out
and
or
ret
xlat
mov
hlt
mov
jmp
add
fiaddl
dec
mov
xor
not
das
rcll
adc
pop
adc
xor
or
dec
inc
mov
pop
outsl
jae
push
mov
stos
adc
mov
cmpsb
push
pop
mov
xchg
js,pn
mov
inc
repz
sbb
mov
fsubr
mov
arpl
popf
movsl
pop
insl
and
or
loopne
hlt
fdiv
mov
jl
jo
scas
add
imul
push
adc
in
adc
xchg
sub
add
xorb
out
jnp
add
cmp
xlat
dec
ret
mov
mov
push
jge
aaa
push
fistpll
and
daa
test
and
fisttps
xchg
mov
movsl
push
pushf
lcall
icebp
push
loop
rorl
daa
or
int3
jne
in
push
addr16
dec
and
xor
mov
inc
xlat
shll
fstps
sub
adc
push
mov
adc
lds
movsb
push
and
inc
mov
aas
sub
sbbl
enter
push
add
pop
push
sbb
fldt
cmp
iret
sbb
fildl
test
rcrb
enter
mov
mov
sub
or
sti
push
dec
push
not
jne
loope
sub
jbe
rcl
mov
repz
popf
dec
adc
test
cmp
ja
mov
pop
sbb
or
insl
xlat
adc
movsl
jmp
and
add
jae
mov
inc
loope
movsl
xor
divl
push
pop
sti
leave
incl
cmp
adc
push
cmp
test
inc
ret
inc
imul
movsl
rcll
jge
cmp
adc
lods
bound
pop
push
mov
aam
ret
cmp
pushf
pop
jmp
xlat
push
jmp
dec
arpl
mov
inc
loope
inc
mov
mov
aaa
cmp
lcall
cmp
std
popf
adc
pop
xor
inc
xor
jp
loopne
scas
movsb
in
aaa
and
mov
into
sahf
sbb
xchg
mov
sub
mov
dec
outsl
inc
or
or
jno
inc
pop
sub
sbb
scas
mov
dec
mov
popa
mov
push
push
mov
cvtps2pd
sub
mov
lock
or
repnz
add
loop
ss
nop
jmp
lods
aaa
mov
adcb
sub
xchg
int3
fcomip
push
ss
lods
add
cmp
mov
push
mov
pop
push
not
push
data16
sub
mov
xchg
and
push
pop
add
and
mov
imul
pop
pop
cli
jne
test
test
je
shll
push
repz
cmp
adc
mov
int3
sti
ljmp
push
pop
or
neg
xor
mov
sub
push
jns
jge
sub
cmp
out
cmpsl
cmc
iret
in
sub
add
fdivrs
mov
or
stos
push
jmp
clc
cmpsb
jp
and
leave
jp
add
mov
add
push
jge
lea
and
aas
out
xor
sub
sbb
xlat
push
cmp
jmp
push
rcrb
add
lret
or
xor
outsb
fnstcw
xor
jo
cmp
into
ja
jae
push
stos
inc
shr
sbb
push
pushf
les
xor
sbb
insb
pop
pusha
and
addr16
jle
mov
inc
jmp
push
add
aad
lods
dec
inc
add
jo
push
leave
mov
popf
inc
cltd
mov
lret
popa
pop
sbb
inc
jmp
arpl
jo
ljmp
sbb
cld
subl
pop
push
and
insl
cmpb
cmp
inc
shlb
ficoml
rorl
out
pusha
jae
dec
out
or
or
dec
out
idiv
repnz
lea
add
dec
subl
lcall
xchg
push
test
dec
jge
mov
pusha
and
movsb
mov
fsubs
cwtl
incb
inc
ds
mov
fldt
and
jge
cs
pop
adc
pop
insb
popa
adc
mov
cmp
jle
adc
hlt
pop
xor
fbstp
mov
in
xor
push
mov
out
push
fs
push
aad
mov
cmp
lods
sbb
cmc
mov
in
cmpw
enter
out
or
fdivrl
push
push
and
scas
lret
arpl
int3
fnstcw
sarb
lahf
xor
dec
sti
push
icebp
xor
insl
fisttps
push
arpl
and
movsl
add
mov
jo
in
xchg
incb
popf
xchg
add
test
adc
sbb
xchg
xchg
popf
idivl
dec
lahf
testl
fmuls
push
or
push
pushf
cmp
ret
cmp
rolb
test
pop
outsb
and
mov
dec
lahf
mov
fsubrl
jmp
ud2
mov
add
ljmp
test
sub
mov
insl
add
xchg
xor
fidivs
inc
or
fsts
in
jne
lcall
pop
popa
dec
push
cmpsl
dec
ljmp
cmc
and
jb
jle
jl
imul
std
aas
and
movups
fs
enter
xchg
out
fstpt
test
cli
mov
iret
add
mov
adc
mov
xchg
inc
jb
movsb
inc
and
int3
push
test
sub
popa
push
in
imul
jno
mov
aad
or
push
jmp
jb
call
sbb
mov
pusha
shr
sarl
jle
dec
jnp
lcall
shlb
cmp
dec
inc
pop
inc
aaa
addb
faddp
jo
cmc
mov
sbb
movsb
jnp
xor
cs
push
ja
fwait
dec
shll
inc
insl
push
jg
jbe
dec
push
xorl
mov
inc
dec
in
aad
enter
fstpt
dec
out
dec
push
ds
mov
and
enter
lods
mov
xchg
cmpsl
pop
or
cwtl
or
fiadds
xor
sarl
imulb
or
jmp
loopne
lock
fwait
mov
std
dec
cmp
mov
and
sbb
ss
mov
mov
push
clc
jb
mov
add
sti
sub
xor
loope
loope
push
add
mov
sbb
dec
cmp
pusha
mov
add
and
notb
cltd
lahf
cmc
imul
lock
out
repz
and
out
popf
xor
xchg
xchg
fnsave
mov
pop
aas
mov
add
movsb
sub
mov
push
lcall
jl
inc
push
decl
jne
iret
stos
adc
outsl
leave
cmpsl
xor
mov
ja
push
in
inc
outsb
in
adc
mov
xchg
xchg
or
push
add
or
cmp
cmpsl
sub
add
add
lret
ret
ds
mov
sub
ficompl
push
xor
pop
repz
fwait
out
sar
mov
jae
addl
pop
mov
jae
inc
data16
or
push
inc
mov
divl
jecxz
mov
fs
pop
jecxz
dec
hlt
cld
aad
adc
ljmp
lret
or
out
test
mov
adc
jp
inc
xchg
mov
addr16
jg
jne
inc
jle
and
das
pop
fstps
jmp
stc
scas
inc
adc
or
and
movsb
cmp
outsb
jle
xchg
mov
sbb
or
scas
push
push
shr
movl
mov
inc
jp
sbb
aad
rcll
pop
adc
int
fcoml
xchg
pop
cmp
shll
test
lea
cmp
and
inc
pusha
aam
and
clc
les
push
dec
cs
sbb
dec
fs
or
testl
dec
xor
mov
dec
and
lret
sub
sub
mov
or
add
dec
sahf
movsl
mov
pop
push
mov
icebp
inc
jg
cmp
ds
icebp
scas
pop
mov
push
not
mov
cmpsb
insl
arpl
fisubs
ljmp
in
pushf
bound
xchg
sbb
pop
outsw
pushf
xchg
mov
call
xor
popf
xchg
clc
mov
out
setl
mov
movsb
push
sti
cltd
lahf
movsl
mov
dec
int
lods
mov
insb
test
cmp
xorb
push
test
push
scas
mov
test
inc
les
xor
or
ja
sub
div
mov
int3
fadd
xchg
push
lea
sbb
fs
int
sbb
adc
sti
cmp
shrl
sub
sub
dec
lcall
fisubrl
daa
outsl
cmp
stos
inc
mov
fcoml
mov
add
jle
cmp
mov
sbb
ret
or
adc
xchg
fdivp
or
push
aad
cmp
inc
mov
xor
pop
sub
mov
fld1
xchg
mov
mov
jnp
fsubl
shlb
and
xchg
xchg
mov
push
push
call
lock
fsubp
jb
or
jb
sbb
xor
hlt
sbb
dec
fcmovb
or
ret
or
adc
arpl
xor
fdivl
lea
scas
xchg
call
mov
jne
std
mov
pop
add
imull
lcall
adc
xchg
add
inc
call
scas
dec
inc
adc
lret
inc
testl
ret
cltd
imul
lret
mov
sub
sub
fwait
mov
cs
stos
fs
movsl
enter
sub
mov
js
inc
sbb
mov
jecxz
into
out
mov
add
inc
test
fildll
push
sbb
jae
mov
jo
dec
arpl
outsb
addr16
outsb
lcall
jg
stc
xor
ja
test
sub
lret
push
jp
jge
ds
add
and
sub
add
jb
ret
pop
insb
stc
fisttpll
push
out
ljmp
mov
xor
sbb
addr16
adcb
pop
jge
pop
xlat
lahf
mov
fs
inc
mov
sbb
testl
popf
das
scas
out
xchg
ljmp
ficoml
mov
stc
mov
xchg
cwtl
push
ljmp
bound
xchg
and
cltd
add
imul
pop
lret
sti
dec
push
mov
clc
imul
out
sbb
ret
jb
adc
adc
mov
push
fnstenv
add
push
sbb
pop
aaa
mov
lds
mov
addr16
mov
mov
pushf
mov
or
sti
push
jnp
int3
sbb
data16
mov
cs
or
cmc
lods
or
outsl
xor
fmull
xchg
mov
xchg
pop
mov
lds
mov
inc
pop
jns
icebp
adc
xor
add
sbb
stos
pushf
and
cld
mov
addl
cmpb
repz
dec
and
inc
mov
mov
push
mov
mov
xlat
shl
cmpsl
cmp
xchg
mov
push
stos
mov
scas
pop
xor
call
add
mov
fimull
out
cmc
cmp
jle
jnp
popa
mov
add
push
pop
stos
xchg
mov
clc
xchg
sahf
sub
mov
fs
sbb
std
add
ss
sar
pop
push
sub
xchg
adc
jne
bnd
push
adc
xchg
movsw
lods
mov
icebp
or
xor
fbld
dec
aaa
adc
push
adc
outsb
or
mov
jl
pop
dec
jge
cmp
jp
mov
jo
ret
fiadds
dec
mov
sub
dec
repnz
leave
pop
mov
gs
ds
push
mov
out
mov
dec
scas
xor
add
rol
and
and
roll
gs
sub
pop
dec
aaa
pusha
cmp
gs
xor
sti
lcall
push
push
les
xor
testl
jl
lds
lret
aaa
in
mov
pop
dec
mov
or
jbe
sbb
inc
ljmp
add
scas
decb
js
sbb
xor
lret
jg
cmp
add
mov
mov
mov
int
jmp
aam
inc
out
cli
ss
jmp
stos
mov
ret
adc
add
dec
jns
xor
or
push
aam
adcb
mov
in
sahf
push
cltd
mov
pop
pop
scas
ret
in
pop
nop
inc
daa
or
xor
shll
jl
cwtl
adc
xor
add
add
pop
or
push
fisttps
clc
gs
pop
or
dec
adc
enter
cmp
xchg
mov
mov
aam
mov
pop
popa
push
xor
inc
pushf
sahf
mov
ret
add
sub
mov
shll
sbb
repnz
push
or
cmp
int3
and
jle
and
xor
insb
jns
push
arpl
les
mov
jns
fcompl
mov
jbe
mov
cmp
popa
xor
xchg
xchg
cwtl
cmp
push
xchg
or
test
jae
dec
nop
pusha
cmp
pop
jp
mov
pop
cmp
mov
adc
sbb
mov
cmp
jno
gs
shlb
addl
mov
mov
arpl
cmpsl
lock
mov
jnp
divl
jae
sub
je
inc
or
xorb
sti
cmp
adc
loope
cld
push
lds
xor
add
push
mov
in
pop
mov
mov
lds
sarb
sbb
dec
lods
and
mov
cmpsl
andl
jmp
into
loopne
push
mov
xor
dec
mov
aad
imul
loopne
inc
mov
in
enter
in
fsubrs
rcrb
pusha
dec
scas
or
mov
lret
cmpb
add
fs
data16
fimuls
mov
aad
add
add
or
stc
loop
xor
jae
fldt
xor
pop
xor
scas
mov
test
push
fwait
xchg
inc
repnz
addl
xor
cmc
sub
nop
pusha
sbb
jno
jns
pop
sbbl
xor
inc
dec
ljmp
dec
or
iret
mov
xchg
shll
int
mov
or
jne
lret
popf
mov
lcall
outsb
sub
mov
push
cmp
stc
pop
add
inc
xchg
push
push
and
stos
sub
add
xchg
sbb
jo
notb
cmp
jecxz
push
or
test
gs
or
lods
stos
ret
lds
or
push
mov
out
mov
gs
cvtdq2ps
or
ret
dec
xchg
jmp
popf
push
iretw
das
sbb
add
xor
xchg
lahf
mov
or
lds
fcompl
in
push
mov
sbb
fldl
jb
shr
sarb
sbb
sub
dec
push
inc
repnz
lret
pop
inc
repnz
pop
out
and
jp
cmc
xlat
pop
mov
int
sub
jae
cmp
fwait
popf
in
add
outsl
sbb
mov
inc
stos
call
jge
xchg
test
aam
mov
xchg
mov
mov
add
dec
mov
insl
cmpsb
adc
or
xor
cmp
mov
movsb
inc
adcl
push
jg
and
pop
pop
mov
pusha
cmpsl
out
jnp
pop
mov
xor
mov
lock
lock
mov
mov
sub
xchg
pop
fisttpl
sub
repnz
xchg
jne
and
fcom
xchg
cmpsl
inc
mov
mov
rcrl
fiaddl
pop
mov
mov
pop
mov
dec
add
out
aam
aas
leave
sbb
mov
mov
in
dec
testl
inc
xor
ja
into
ret
cwtl
loopne
insb
cmpsb
out
mov
aam
cmc
imul
xor
lods
and
fcmovbe
sub
cld
mov
sub
loop
enter
mov
xchg
push
sub
test
xor
jne
jl
sub
insl
cmpsb
in
adc
pop
out
call
sbb
repnz
shl
ret
cmpsl
out
fnstsw
out
mov
pmaxub
jmp
scas
push
cmp
push
xor
pop
fnstenv
dec
adc
xchg
cmc
dec
add
fildl
jge
shl
insl
mov
cmpl
xchg
aad
xlat
leave
mov
int
adc
arpl
adc
jecxz
xchg
dec
xchg
lea
jns,pn
lret
and
dec
jo
inc
jg
fstpt
and
je
out
and
test
cmp
sbb
inc
or
mov
cmpsb
test
sahf
lcall
inc
sub
clc
add
or
cmp
stos
cwtl
ja
mov
xchg
clc
clc
adc
push
les
loope
add
imul
aad
cld
repnz
insb
ja
cmp
rol
fsub
imul
jno
sbb
xchg
lret
in
pushf
add
push
aaa
xchg
and
mov
xor
cmp
scas
mov
jo
mov
enter
and
push
in
sti
pop
aas
int
cmp
and
or
push
idivl
dec
mov
cmc
fsubrp
testb
xchg
xchg
adc
sbb
movsl
sbb
sub
cmp
cmp
xchg
push
mov
push
add
repz
mov
ds
jl
ja
push
pop
jge
lods
adc
jl
dec
call
icebp
ja
int
aad
xchg
out
clc
xor
push
inc
mov
ds
and
notl
and
jl
pop
mov
jns
jmp
xor
pop
inc
pop
popf
cmc
out
add
enter
dec
dec
and
stos
jl
jbe
add
and
ffreep
test
push
sub
mov
xchg
xchg
add
jecxz
dec
push
mov
mov
dec
cmp
push
cmp
iret
icebp
dec
ljmp
stos
cmp
dec
mov
xorb
pop
lea
mov
outsl
and
stos
inc
mov
mov
cld
lret
inc
xchg
pop
repz
mov
dec
orl
push
adc
mov
xor
push
lock
stos
cmp
inc
jle
or
leave
pop
mov
divb
repnz
jg
aaa
fsubl
inc
xchg
ja
mov
into
lds
jle
push
popf
push
jp
jno
adc
jmp
cmp
push
fisubrl
mov
clc
mov
jbe
jecxz
sub
adcb
daa
sbb
rcrb
xchg
push
std
je
fucom
call
push
mov
fsts
adc
testb
out
imul
and
shlb
aas
or
shrl
mov
sub
lret
push
cmp
sub
das
cmc
mov
add
inc
movsl
add
xchg
out
repnz
xchg
out
test
push
jge
test
inc
jb
inc
cmp
mull
xchg
in
sub
adc
mov
cwtl
ret
dec
iret
sub
adc
xor
mov
dec
sbb
insl
cmp
gs
mov
fs
push
shll
js
negb
fmuls
pop
jae
arpl
ret
jmp
sub
push
fiaddl
xor
sbb
xchg
sub
mov
in
dec
rorb
push
movsl
sub
les
es
mov
imul
push
push
in
fnstsw
out
cmp
cwtl
lods
jno
lods
aad
testb
xchg
fimuls
sbb
shlb
and
push
lock
sbb
mov
jmp
lock
push
je
stc
das
mov
mov
inc
ret
pop
enter
sub
sti
and
xchg
out
into
mov
mov
xchg
iret
out
mov
ret
jmp
lock
adc
shr
clc
mov
push
mov
mov
cmp
sbb
sub
push
sub
push
stos
jnp
cltd
cmc
enter
clc
push
mov
pushf
je
xchg
icebp
mov
xor
js
sbb
or
inc
insl
mov
cli
jl
pop
cmp
sub
mov
cmc
nop
cli
pushl
fsubrs
jp
addr16
rol
or
push
xchg
mov
out
lods
lret
mov
ret
add
outsb
cmc
pushf
imul
jne
push
adc
xor
ja
and
dec
ljmp
mov
sub
movsb
mov
jmp
sub
fnsave
popl
rcrb
popf
je
shll
cmc
jge
imul
push
xchg
lcall
inc
pop
scas
lret
sbbl
in
test
or
inc
mov
or
mov
or
push
stc
push
adc
add
add
jle
jg
xorb
lahf
aaa
lret
mov
pop
out
js
push
cltd
sbb
mov
fldl2t
xorb
scas
imul
lds
or
cwtl
loope
xor
cmp
mov
dec
cmp
shr
jle
daa
lahf
xlat
imul
pusha
mov
push
adc
jl
lret
ret
jmp
test
sbb
faddl
into
aas
add
bnd
repnz
sub
aaa
xchg
push
xlat
gs
hlt
aam
add
sbb
pop
xchg
mov
mov
push
dec
outsl
pop
das
loop
inc
lret
sbb
in
out
test
jnp
repz
cmp
adc
jo
stos
gs
and
cmp
inc
in
or
adc
mov
movsb
dec
xchg
stos
ds
sahf
inc
cltd
cmpsl
xor
int3
rcrb
xchg
cmp
inc
pop
stos
sub
movl
loope
sbb
bound
loopne
cmp
mov
mov
test
mov
adc
leave
lock
jmp
insl
stc
mov
pop
mov
arpl
sti
cwtl
imul
sbb
add
call
lock
in
test
mov
bound
inc
in
sti
push
adc
jmp
outsb
mov
ret
xor
sbbb
fcmovnu
in
jge
xor
mov
jmp
fcompl
xchg
cmp
js
mov
fsubs
adc
adc
cmp
mov
pop
call
leave
test
inc
push
add
add
scas
and
add
dec
popa
push
adc
pop
or
es
mov
lds
rorl
das
cmpsb
jns
xlat
pop
subb
cmp
ret
sti
lods
or
stos
mov
fistps
stos
lods
outsl
into
jb
ret
pop
sub
mov
shr
xor
or
movsb
xor
mov
insl
pop
cmp
outsb
inc
lea
aaa
mov
pop
loope
sahf
fnstsw
xlat
pop
mov
test
fdiv
add
rolb
add
xchg
xlat
out
mov
jae
jmp
dec
out
test
jecxz
xchg
bound
inc
jle
mov
jge
pop
push
adc
out
in
mov
call
or
cmp
lret
sub
inc
rcrl
inc
add
rcll
fadd
mov
ror
adc
pop
mov
cld
mov
loope
pop
mov
insb
xchg
mov
and
push
adc
shlb
test
cmp
push
test
push
xchg
lret
add
ficoml
sub
jecxz
je
fldl
jp
xor
or
push
xchg
jmp
rcrb
fistpl
sbb
repz
js
fisttpl
xlat
movsl
subb
sti
testl
out
adc
or
push
jae
pop
imul
movsb
pop
std
scas
jl
iret
pop
rol
push
jmp
ret
stos
mov
jmp
js
arpl
adc
mov
mov
stos
in
out
int
mov
into
iret
dec
mov
idivb
test
pop
xchg
add
dec
aas
sub
addr16
add
mov
into
test
stos
test
lcall
add
jnp
icebp
aas
nop
cs
jbe
rcrl
arpl
mov
push
das
or
mov
dec
in
rcrl
push
mov
std
insl
mov
push
fs
gs
shlb
stos
lret
cld
movsl
pop
cmc
fwait
cmpb
int3
dec
movsb
mov
add
outsl
and
loope
dec
call
jo
push
cmp
mov
dec
mov
xchg
icebp
mov
or
adcl
sub
int3
arpl
sbb
and
inc
cltd
mov
xchg
inc
xor
aad
and
xchg
lods
ljmp
out
insb
das
mov
xor
jge
xchg
jl
dec
fldt
mov
inc
xchg
sbb
cmp
mov
fs
xchg
cwtl
xchg
out
push
fcoml
aam
push
or
mov
inc
aad
stos
subl
inc
mov
jne
sub
adc
in
adc
je
gs
filds
pop
inc
mov
cmpsb
jnp
or
fildl
stc
dec
rolb
inc
adc
test
xchg
jmp
int3
loop
vpshaq
aas
mov
in
popa
mov
inc
sbb
fiaddl
push
js
jb
jmp
mov
enter
jo
in
ljmp
movsl
jb
pop
add
xchg
out
push
idivb
ret
mov
popa
pop
psubd
xlat
xor
xchg
sub
sub
aaa
push
mov
pop
or
or
xlat
sar
mov
or
dec
xchg
inc
adc
stc
xlat
mov
imul
pop
add
mov
add
ds
jns
scas
aas
mov
test
pop
pop
ret
and
orb
inc
imul
push
pop
dec
and
aam
cmp
insl
adc
sbb
cmp
js
cld
jo
push
loopne
lods
fldt
push
cmp
cmpl
sub
outsl
and
cld
out
pop
pushf
add
xchg
xchg
mov
inc
rcl
jne
sbb
jge
mov
push
shr
lahf
cli
xchg
push
push
test
ret
and
or
loopne
jno
mov
incl
mov
xor
stos
fsubrs
aad
push
sbb
and
lock
mov
push
mov
movsl
cmp
int
daa
xor
and
pop
and
testl
mov
stc
mov
sqrtps
push
ljmp
mov
in
push
jp
pop
fstl
ss
lret
lahf
and
and
orb
xchg
sti
pop
pop
add
sub
inc
in
sbb
fisttps
frstor
mov
iret
mov
jle
ja
pop
sbb
dec
fs
out
fbstp
dec
sub
mov
daa
mov
int
stc
pop
mov
lock
fsubr
xchg
in
shlb
js
cld
mov
test
lret
bound
or
sub
and
sahf
jecxz
rol
add
loop
int
mov
pop
mov
out
das
push
push
inc
cmp
roll
sub
das
addr16
mov
inc
movsb
cwtl
pop
jle
pop
out
xchg
push
jbe
inc
iret
bound
aaa
pop
lods
cmp
popf
mov
shlb
je
mov
mov
add
lds
xor
adc
loopne
xchg
cmpsb
sbb
add
lret
jmp
sar
das
cmp
inc
mov
leave
mov
lods
mov
lock
push
clc
mov
or
push
in
repz
ljmp
das
popa
lcall
jnp
push
pop
add
call
xor
test
xlat
mov
mov
add
shll
sarb
test
out
test
scas
fisttpll
mov
and
sub
add
sti
or
ds
cmc
leave
popa
repnz
jbe
repnz
call
loope
mov
fcmovb
insb
out
cltd
pop
shlb
pop
xor
dec
test
movsb
xchg
lea
add
adc
add
nop
adc
push
sub
jg
cmp
adc
movsb
and
clc
fcomps
xor
adc
push
data16
adc
je
sbb
mov
lahf
add
aam
pop
adcl
xorb
in
outsb
mov
fadds
popa
mov
ja
fmul
test
cmp
cli
cmp
jb
imul
mov
sbb
mov
push
push
jge
push
or
cltd
jo
xlat
rorl
inc
ret
ret
adc
inc
mov
sub
cmp
stos
jp
and
in
mov
les
leave
scas
dec
push
push
xor
faddp
xor
cmp
mov
dec
lds
dec
imul
mov
shlb
adc
add
mov
dec
jecxz
cli
repnz
lds
pop
and
movsb
hlt
inc
xor
aad
jmp
out
add
in
dec
sub
mov
outsb
jb
add
cmp
mov
int3
jmp
popl
int
dec
aas
sub
push
popa
leave
pop
popf
or
aam
or
xchg
pop
je
adc
cli
neg
jmp
xlat
adc
test
mov
adc
popf
test
jg
pop
pop
std
xchg
jl
mov
cmp
add
pop
sub
fildll
loopne
mov
iret
fimuls
xchg
xchg
test
call
movsb
mov
dec
sub
dec
xlat
fmuls
inc
cld
ret
jae
clc
xor
adc
ret
cld
dec
imul
fisttpl
inc
dec
ja
sub
ja
imul
or
es
sub
hlt
jle
dec
add
les
mov
repnz
dec
std
dec
mov
pusha
in
popf
jmp
pop
adc
mov
pop
sub
dec
notb
repz
ret
inc
popl
pusha
lds
mov
fisttpl
jbe
loope
stc
sub
inc
dec
popa
pop
lret
dec
movsb
jmp
and
das
movsb
jg
imul
fdivl
sti
stos
cli
addr16
pop
addr16
jg
ror
in
repnz
mov
mov
ljmp
aaa
sub
loope
loopne
push
pop
push
push
xor
pop
mov
das
cs
dec
sub
pushl
in
dec
mov
clc
push
and
loop
loope
es
add
mov
mov
ja
and
xchg
inc
neg
adc
mov
xlat
push
shrb
bound
lret
sti
jmp
add
fstpl
insl
iret
aaa
lods
outsb
inc
push
mov
cld
sbb
mov
mov
ja
mov
push
mull
sahf
mov
sbb
push
push
jnp
cmp
fstl
in
test
adc
stos
cltd
pop
subb
repz
sbb
test
add
mov
sbb
and
daa
mov
xchg
pop
mov
jg
mov
fists
mov
and
mov
adc
in
imul
fdiv
push
xchg
xor
test
add
lods
scas
pop
aas
push
pop
jae
add
push
and
sub
ffree
lea
pusha
mov
xor
out
mov
jbe
and
in
dec
daa
sbb
dec
mov
scas
pop
sbb
mov
push
fnstcw
daa
adc
xor
inc
sbb
mov
lods
dec
sti
cmp
mov
shlb
or
cwtl
jecxz
mov
sbbl
cmpl
xor
daa
cli
int
call
adc
adc
outsl
and
jmp
and
mov
lcall
and
stos
lea
stos
add
aaa
mov
mov
shrl
pop
pop
mov
lods
std
sti
pop
jg
push
in
rclb
add
lea
pusha
sub
add
mov
outsb
cwtl
pop
les
stos
xorl
or
fstpt
push
xchg
in
cmpb
andb
push
xchg
and
jmp
movsl
outsb
lret
repz
lcall
sbb
arpl
or
and
out
pop
mov
and
fdiv
ret
jmp
icebp
sarl
jp
in
xor
adc
push
lods
hlt
jbe
bound
loope
int3
push
jp
adc
pusha
scas
movl
dec
adc
push
ficomps
jecxz
xlat
cltd
mov
xor
mov
xchg
pcmpeqw
sbb
mov
sti
pop
stc
loopne
pop
lds
pop
sahf
imul
jae
inc
pop
and
inc
add
jp
mov
scas
es
outsl
ret
out
cmpsl
push
in
repz
fidivs
nop
insl
inc
imul
lea
iret
insb
cmp
jle
mov
fiaddl
cli
inc
rcr
testb
outsb
xor
jb
gs
scas
or
cmp
test
movsb
push
cmpsl
stos
mov
mov
jno
adc
jnp
imul
loopne
push
and
mov
inc
add
in
in
jle
shl
or
outsb
sbb
imul
inc
test
push
push
jg
inc
xchg
push
mov
daa
pop
int3
mov
pop
sub
mov
inc
outsb
mov
out
loopne
push
lea
aas
sbb
xchg
fwait
or
loopne
sub
and
jno
pop
sbb
sbb
sbb
shr
imull
dec
fsubr
imul
cmp
jp
sbb
jge
mov
cmpsl
jl
jae
add
sbb
push
pop
inc
out
fcmovne
xchg
lret
ja
rol
xor
and
jmp
jg
xchg
xchg
mov
fdivrs
mov
std
mov
push
inc
out
add
inc
add
rcll
cs
sbb
nop
adc
int3
leave
aas
stos
ss
jmp
mov
jo
enter
push
sbb
cmpsb
push
mov
fs
jae
cmp
aam
movsb
test
cs
pop
sbb
lea
push
or
mov
inc
sbb
pop
stc
sub
jge
adc
stos
mov
pop
imulb
std
sti
aaa
sti
dec
and
mov
loop
push
dec
lods
mov
je
mov
cli
and
inc
push
js
sbb
add
cli
negb
jb
cld
mov
mov
lds
mov
outsl
dec
in
ds
sti
adc
int
inc
insb
cmpb
pop
xchg
sbb
out
push
pushl
adc
movq
or
xchg
fcoml
cmpsb
loope
flds
lret
add
mov
outsb
mov
test
and
dec
sbb
cmp
lcall
call
mov
xchg
cld
mov
stos
cmp
insb
into
ret
in
lea
movl
xor
xor
lret
iret
in
push
sbb
add
test
pop
test
mov
xchg
mov
or
jbe
mov
cmp
cmc
inc
push
cli
mov
cmp
mov
inc
loopne
popa
sarb
jne
cmpsl
dec
inc
les
sub
dec
xchg
imulb
xor
call
or
push
fnsave
out
xlat
add
mov
mov
xor
dec
mov
push
inc
in
add
repnz
cmpsl
scas
fsubs
jmp
sbb
and
jecxz
jbe
hlt
punpckhwd
and
adc
insl
jns
mov
jl
nop
lea
lret
push
pop
sbb
ds
mov
jno
push
xchg
pop
xor
xchg
pop
lret
mov
inc
repnz
std
ret
cltd
and
sbb
mov
mov
jmp
mov
adc
adc
or
vpshufhw
mov
pop
lock
shrl
mov
ror
mov
pop
punpckldq
push
movsb
push
inc
arpl
bound
push
cmc
mov
mov
into
mov
pop
and
hlt
aam
push
addb
xor
movsl
std
int3
jne
add
fidivrl
outsb
outsl
test
or
mov
popf
dec
and
int
movsb
and
jnp
repz
push
in
movsb
mov
pop
lahf
out
aas
add
int
cmp
jbe
loope
push
rorl
and
aam
test
fdivrl
jnp
out
or
dec
pop
cwtl
mov
jg
int
test
mov
adc
jne
cmp
mov
add
push
push
xchg
mov
mov
std
xor
ss
xorl
aas
mov
push
mov
and
xor
push
inc
xchg
in
icebp
cmpsl
repz
jns
insl
mov
push
or
xchg
jb
pop
movsl
cwtl
stc
imul
mov
icebp
mov
pop
test
test
push
movsb
fisubl
push
loop
jge
xor
mov
add
pop
js
in
fildll
imul
addr16
jbe
sarb
sbb
pop
std
inc
pop
into
push
push
imul
and
js
xchg
jecxz
pop
push
int
xchg
mov
rcll
pop
jb
sbb
mov
inc
int3
nop
mov
and
inc
std
xchg
cmp
in
mov
cmpsb
add
cmp
popl
clc
jp
xor
adc
es
xchg
lods
movsb
mov
insb
cld
xlat
xor
roll
or
mov
jp
fs
cmp
sub
rcrb
xor
scas
mov
cmp
pushf
sti
cltd
sbb
dec
push
mov
movsl
xor
sbb
movsb
jnp
pop
push
popa
sbb
jecxz
add
fisttpl
sub
mov
add
dec
xor
outsl
xor
into
pop
sbb
xor
or
jnp
add
roll
mov
adc
andb
je
cmp
aam
xchg
xchg
or
add
lret
popa
clc
repnz
mov
mov
dec
imul
xor
adc
hlt
loop
push
pop
inc
xchg
outsl
fiadds
icebp
add
xchg
arpl
ror
mov
ljmp
sub
mov
adc
inc
clc
sub
xlat
sub
sbb
push
iret
mov
sbb
popf
cmpsb
insb
das
pop
mov
stc
cmp
dec
push
mov
pop
push
jge
je
jmp
shlb
fistps
mov
sub
push
icebp
flds
ja
and
rcpps
xchg
insl
rcll
cmp
push
push
int
mov
cmc
test
fcompl
sahf
inc
jo
jo
inc
es
mov
jb
cmpsb
inc
xchg
hlt
mov
mov
push
push
or
les
or
pop
cli
mov
shrl
add
jge
rcr
das
repz
aad
jge
xor
mov
stos
push
and
cmpsl
xlat
mov
cmc
idivl
pusha
out
rorl
cmp
daa
dec
inc
dec
lret
xchg
pop
sbb
jge
aam
mov
sbb
xchg
sub
fildl
jbe
adcb
fstl
xor
inc
xor
fists
stos
adc
jl
enter
push
scas
fiadds
push
fwait
dec
inc
imul
icebp
arpl
jg
jecxz
sbb
aaa
sbb
xchg
mov
sti
sbb
and
mov
scas
jmp
rorl
cli
popa
inc
inc
sub
sbb
add
inc
sub
std
mov
mov
adc
and
cmpsb
stos
data16
pop
xlat
fidivrs
icebp
pop
push
sbb
inc
and
stc
cli
fisubrs
out
pop
test
pop
aam
inc
lods
aad
call
or
cwtl
add
adcb
cmpsl
fs
and
insb
fcmovnbe
movsl
xchg
fnsave
in
xor
ja
imul
xchg
jl
or
jg
jbe
test
jp
pop
ret
inc
fwait
cmc
lea
inc
adc
sub
fimuls
mov
xor
cmpsl
mov
or
sub
adc
addr16
push
test
jl
frstor
shrl
xchg
pop
and
jb
enter
test
in
mov
or
inc
jmp
daa
lret
in
enter
rolb
lods
jno
fimull
mov
xor
stos
addr16
xchg
mov
dec
xchg
sbb
scas
ss
mov
dec
int
or
mov
mov
xor
fdivrl
mov
mov
pop
push
pop
stos
push
sbb
dec
pop
mov
sbb
pop
and
jne
outsl
add
and
daa
cmp
add
insb
xchg
jne
inc
and
cmp
adc
pop
inc
das
jno
sub
mov
push
cmp
int3
fmuls
add
mov
ret
je
mov
outsb
push
dec
mov
out
mov
cld
sti
jge
punpckhdq
int
into
cli
data16
out
loope
sti
adc
push
out
clc
in
or
mov
push
inc
mov
cmpsl
ds
or
inc
scas
inc
pop
mov
push
and
xor
fiaddl
inc
mov
cmpsl
pop
addb
push
xchg
dec
lock
cli
xchg
inc
push
cmp
dec
andb
mov
rcrb
push
test
test
popl
or
aam
jecxz
jp
xor
mov
pop
mov
xchg
das
out
movsl
leave
in
dec
int3
fdivrl
sti
cmp
into
mov
sti
cmp
test
jnp
push
maxps
aad
cmp
lods
lcall
divb
and
push
imul
ss
push
aas
adc
stos
mov
sub
pop
je,pt
cld
and
dec
fbld
pop
lret
sti
test
and
mov
xchg
jmp
push
jae
mov
hlt
pop
movsl
call
xchg
cmp
repz
sti
push
lahf
pop
mov
xor
inc
fidivrl
ds
jg
dec
ret
mov
sbb
jo
cmc
pop
push
mov
adc
xchg
mov
sbb
pushf
or
movsb
pop
adc
faddl
cmp
push
lret
push
loope
push
and
fisubrs
fsub
lea
mov
hlt
stc
call
fsubl
dec
mov
sbb
stc
fs
into
mov
xor
push
daa
clc
or
sbb
mov
scas
out
subb
into
sarl
xor
aaa
push
sbb
call
hlt
ret
push
int3
repz
or
adc
out
xchg
lea
outsl
adc
aad
mov
cmp
int3
xchg
and
cmp
test
inc
rcrb
xorb
test
jne
in
lcall
xchg
lds
call
cmp
shlb
outsl
mov
jo
push
ja
push
call
out
and
inc
lds
mov
jne
mov
mov
and
addl
cmp
nop
mov
jbe
ret
mov
mov
mov
das
test
cwtl
cli
or
cwtl
sbb
out
sub
dec
lahf
sbb
shrb
aaa
push
jle
add
jno
push
loope
cmp
inc
and
adc
inc
xlat
incl
add
pop
arpl
xchg
mov
push
mov
scas
rorb
cld
in
inc
adc
ja
rcll
add
insl
jae
jb
mov
sub
add
xor
jbe
push
sti
mov
dec
xchg
xchg
push
or
mov
dec
daa
dec
jo
outsb
data16
out
push
pop
repnz
bnd
xchg
adc
mov
stos
pop
arpl
or
mov
pusha
adc
pusha
pop
fcmovu
aam
pop
dec
dec
adc
mov
cmp
pop
dec
and
mov
mov
mov
dec
imul
adc
test
pop
jmp
sbb
popa
sbb
jno
cld
lahf
push
pop
add
jmp
shl
mov
mov
repz
aas
movsl
inc
call
pop
ljmp
xchg
mov
sub
add
nop
scas
jl
mov
addr16
out
std
mov
in
imul
sbb
movsl
cmpsb
test
out
mov
sbb
xorb
dec
out
pop
das
cld
cmp
popf
xchg
xchg
xor
pop
xchg
sub
mov
clc
mov
pop
pop
arpl
inc
mov
add
xchg
pop
test
mov
rclb
xchg
mov
jp
push
cmc
cmpsl
and
imul
ret
insl
ret
xor
je
jbe
fsubr
loop
xor
jae
jle
iret
mov
hlt
fstps
mov
scas
addl
xchg
movsl
inc
pop
dec
mov
sbb
jl
pop
repz
subb
pop
cmp
cltd
test
add
xchg
pop
mov
mov
out
shll
jl
js
push
pop
andl
or
push
push
push
mov
popa
push
cmp
out
or
xor
fnstenv
sbbb
push
stos
mov
jb
int
pusha
mov
mov
cli
xchg
aam
nop
hlt
sahf
xchg
int
lcall
test
or
ds
pop
je
in
mov
cmp
bound
js
push
cmp
and
int3
dec
loopne
mov
fdivl
or
sbb
icebp
mov
test
mov
inc
das
cmc
add
in
xchg
mov
jg
lods
push
repnz
cmpsl
adc
and
jl
pop
repnz
xor
stos
imul
lret
add
pop
inc
or
push
inc
cltd
pop
iret
shl
xchg
mov
xor
cmp
popa
repz
mov
repnz
in
sub
mov
xchg
jecxz
pop
inc
mov
xor
stos
mov
jns
xchg
cmp
mov
shr
adc
out
mov
cmp
repz
push
xchg
cmp
insb
add
mov
jo
insb
test
add
aad
cs
push
xlat
jl
out
sbbb
jo
mov
sbbl
fcmovnb
insl
mov
je
pop
and
mov
mov
push
mov
dec
sbb
ja
push
cmpsb
dec
jno
or
mov
inc
bound
es
sub
pandn
lock
sub
inc
outsb
lods
js
js
mov
mov
andb
dec
xchg
jmp
popf
xchg
xor
cmp
into
fld
mov
test
movsl
cltd
out
ret
sbb
popa
movsb
outsl
jg
ds
aad
mov
sub
fbld
in
stc
std
movsb
jae
test
clc
mov
ds
dec
lahf
ja
movsl
popf
scas
mov
xchg
fcomps
jns
xor
cltd
jbe
cltd
addl
sbb
lock
xchg
mov
and
roll
insl
xor
je
std
jmp
icebp
es
das
pop
ja
pushf
xor
xchg
pop
add
sub
addr16
fldl
cmp
mov
movsb
sbb
mov
mov
insb
lahf
jae
lahf
jno
cmp
int
push
sbb
mov
das
imul
pop
out
mov
out
test
in
push
mov
fildll
xor
hlt
lock
or
inc
les
loop
or
int3
jmp
sub
and
movsl
jge
cmp
xchg
out
js
enter
jbe
sbb
add
or
or
mov
aaa
ja
jnp
sbb
xchg
inc
in
call
sbb
push
rcl
pop
xchg
dec
cmpsb
repz
mov
and
jl
out
pushf
and
mov
rol
add
mov
add
adc
mov
inc
adc
int
jp
xchg
sahf
daa
and
mov
cmc
in
ret
clc
cmpsl
mov
insl
loopne
std
call
xchg
popa
adc
jo
lock
out
leave
and
pop
das
inc
sub
out
add
lds
outsl
mov
push
divb
shll
dec
leave
pop
je
pop
rep
or
popf
and
and
mov
push
or
adc
xchg
push
es
in
pop
mov
rcrb
jle
pop
out
mov
xchg
mov
xor
adc
cmc
lret
pop
add
repz
test
outsl
mov
repz
push
insl
gs
ficoms
lds
adc
pop
push
push
idiv
in
cmpsb
sub
jb
nop
rorl
imul
pop
iret
orb
call
xchg
rcl
stos
popf
push
cld
in
mov
and
fisubl
and
repnz
sbb
test
fimuls
pushf
int
call
mov
frstor
adc
pop
dec
cmpsl
data16
add
sub
lods
mov
mov
inc
pop
loopne
jae
xchg
xlat
push
and
rcrb
push
repnz
cmp
cmpsl
mov
and
iret
loop
push
xor
cmp
and
add
and
ds
loopne
cmp
or
mov
sar
aaa
jle
andl
lret
shlb
leave
jl
addr16
jp
pop
mov
in
sbb
icebp
outsl
push
xchg
lret
shll
cmp
or
jle
xchg
shlb
scas
or
loopne
sub
aad
clc
mov
iret
and
lahf
add
push
jp
push
pop
pop
sub
jmp
int
adc
mov
addb
adc
sahf
adc
mov
pop
mov
xchg
sbb
adc
cmpb
sarb
mov
xchg
dec
or
out
add
dec
jns
dec
sbb
adc
out
sub
sbb
sahf
jecxz
inc
lock
and
bound
loope
pop
loop
pop
inc
xlat
xor
shll
lods
ds
test
xchg
sub
rep
or
push
mov
mov
cltd
pop
xor
mov
adc
or
jle
and
aaa
lea
dec
nop
sub
shll
ret
int
push
lods
xor
pop
mov
adc
or
es
xlat
mov
pop
xchg
cs
or
xchg
out
ret
outsb
sbb
inc
std
jne,pt
cs
pop
lds
daa
lret
outsb
lea
mov
cmc
subb
inc
push
xchg
data16
addr16
test
out
subb
sbb
mov
lret
or
pop
cld
mov
pop
and
jbe
pusha
or
lahf
pusha
or
xchg
lods
dec
pop
cmp
cs
xor
and
stos
dec
adc
cmp
das
fmulp
es
xor
movsl
lods
cli
sbbb
sbbb
cmp
xchg
adc
lahf
ljmp
aaa
aas
cmpb
add
mov
cmp
push
lea
cmpsb
jne
cltd
out
in
scas
mov
data16
sbb
inc
lahf
orb
sahf
add
sub
das
addb
or
das
ljmp
test
pusha
push
xchg
ds
cmp
push
cmc
add
rolb
mov
pop
not
in
adc
xchg
addr16
push
enter
pop
pusha
loope
and
pop
dec
divl
xor
jns
mov
arpl
cmp
dec
insl
and
push
arpl
or
mov
shll
enter
and
and
mov
inc
rorb
pop
sbb
movsl
sub
rorb
ja
push
sbb
mov
lea
dec
lods
cmp
arpl
scas
inc
addr16
stc
push
adc
push
pop
ljmp
mov
lds
cmp
mov
cmpsb
sbb
sub
add
fisubrl
addr16
scas
inc
or
xchg
jp
xchg
stos
lret
std
cmp
dec
sub
push
mov
cmp
lock
xchg
add
rolb
cld
les
push
push
and
clc
repz
repz
pop
add
xor
fnsave
hlt
mov
sbb
push
fs
dec
sbb
mov
pop
gs
mov
cmpsl
in
aad
xchg
lods
icebp
jns
std
sbb
shlb
push
mov
aad
dec
xor
test
pop
aas
sbb
or
insb
loope
add
test
and
das
lahf
jno
das
sarl
lahf
vucomisd
xchg
clc
lret
push
jbe
bound
add
xchg
mov
xchg
mov
test
mov
test
pusha
pop
cmp
push
mov
stos
push
push
clc
add
jns,pt
adc
push
out
out
xchg
repz
ds
scas
imul
inc
out
or
and
jge
and
jno
sub
jp
mov
or
std
pop
cli
lret
jae
lds
notl
jo
inc
xchg
cmp
jb
and
insl
andb
xchg
imul
sub
loope
ret
or
xor
pop
clc
pop
xor
or
int
pushf
xchg
jae
int3
sub
cmp
lds
pop
scas
adc
rol
dec
or
dec
xor
aam
or
cli
dec
rcr
cmp
testl
out
xchg
fs
in
or
and
cmp
dec
mov
addr16
push
add
mov
inc
aaa
out
arpl
dec
out
lds
imul
ss
and
js
adcb
cmpsb
mov
int3
jbe
gs
fwait
insl
sbb
pop
dec
aam
xchg
and
push
inc
push
pushf
insl
nop
jl
inc
push
sub
fiaddl
mov
push
push
jle
repz
sub
sbb
pusha
jb
lods
insl
into
jle
aas
addr16
in
shlb
sbb
mov
pop
fidivrs
icebp
call
iret
inc
adc
lea
repz
mov
cmp
jg
jnp
add
jl
repz
and
in
push
adc
or
in
nop
fs
dec
stc
jg
jmp
push
stos
adc
jnp
mov
cmpsb
add
xchg
insb
jp
mov
loop
mov
ret
jae
inc
fmuls
sti
mov
fcomps
dec
push
inc
push
ficoml
dec
outsl
jbe
mov
dec
in
or
xor
lds
mov
push
sbb
aad
lret
or
adc
fildl
std
fstpt
xchg
pusha
arpl
std
sub
adc
outsb
imulb
bound
push
xlat
jge
fidivl
fldt
aam
adc
repz
sbb
jae
mov
cmp
and
paddq
daa
ret
pop
std
lahf
sub
pop
or
sbb
and
out
mov
or
pop
bound
nop
xor
mov
std
in
pop
push
fnstenv
and
sti
das
stos
xchg
inc
mov
gs
insb
xchg
aad
orps
test
mov
ds
shll
out
arpl
mov
add
push
add
lahf
lods
dec
decb
mov
and
int3
cli
push
push
sti
dec
dec
push
mov
testb
lods
sahf
xchg
xlat
cmp
cmp
sub
insl
adc
mov
test
xchg
jmp
loopne
lea
popa
mov
cmc
aaa
xchg
movsb
loope
pop
mov
ss
leave
cli
mov
or
add
int3
jnp
sbb
cmp
sbb
mov
inc
cli
movsb
aad
aam
mov
loopne
out
mov
push
push
lds
sbb
dec
fwait
fwait
jbe
cld
sub
stc
out
pop
test
mov
fimuls
out
hlt
jmp
sub
dec
add
mov
push
ds
mov
call
cmp
fnstcw
sar
loopne
cmp
inc
movsl
lods
mov
fldenv
sub
loope
sub
ss
and
stos
scas
lds
roll
and
xor
icebp
daa
cmp
sub
cli
popa
stc
add
out
xchg
adc
enter
cmp
pop
sbb
xchg
sbb
xchg
cwtl
loopne
dec
mov
mov
or
or
cmp
push
pop
jl
mov
repz
xchg
and
enter
and
insl
lods
out
cmp
mov
and
mov
stc
ficompl
mov
inc
loope
lea
sbb
xor
ret
inc
inc
arpl
xlat
nop
and
push
cmp
mov
inc
in
fcomip
cmp
sti
enter
push
out
pop
filds
sub
lahf
dec
mov
ss
decb
repnz
inc
sub
lahf
call
shrb
es
inc
fiadds
mov
sbb
dec
fistps
setg
add
rorb
mov
jns
rorl
mov
pop
mov
push
repz
testb
add
mov
pop
andl
lods
mov
cmp
adc
mov
test
mov
mov
add
xchg
in
and
test
pop
hlt
aad
xchg
gs
sub
out
loopne
mov
add
pop
pop
out
aaa
mov
jb
push
js,pt
aam
inc
cli
fistl
adc
imul
cmp
pop
fwait
stos
pop
adc
cwtl
in
lods
out
pop
push
adc
adc
sahf
shlb
mov
rol
sbb
adc
shl
push
addr16
enter
test
sbb
mov
popl
in
pop
xchg
sub
inc
xor
dec
cwtl
pop
cld
or
imul
pop
cwtl
popf
sbb
sti
test
aaa
cli
and
jbe
repz
sbb
pop
clc
into
inc
jg
or
pop
adc
test
cwtl
int
pop
xlat
ffreep
daa
popf
sub
popf
xchg
out
fwait
push
add
mov
call
stc
xor
adc
xor
stos
loop
insb
add
loop
cmp
push
inc
scas
push
add
mov
rol
mov
and
and
lret
fwait
dec
sub
movb
fimull
xchg
jmp
xchg
lods
dec
pop
call
sbb
jle
add
lock
xchg
or
or
dec
in
jne
xor
jno
sub
in
mov
push
and
and
pop
cmp
insl
xchg
ret
sbb
push
cli
and
dec
adc
mov
sbb
push
add
mov
fcoms
shl
jl
mov
dec
sub
mov
push
mov
js
mov
ret
pop
out
js
dec
mov
in
and
jne
inc
fmul
out
call
xchg
sub
es
push
and
pop
and
lcall
dec
aad
jne
add
jmp
mov
fs
cwtl
test
push
fbld
andl
mov
adc
orl
pop
adc
fdivrs
mov
fcmovnbe
push
push
cld
mov
ficoms
pop
cwtl
shlb
adc
mov
xchg
dec
fists
lds
inc
movsb
in
stos
mov
mov
cmp
mov
cmp
into
cwtl
push
cmc
dec
add
jle
insl
loope
aad
out
jmp
and
ljmp
ret
out
add
cmp
lods
mov
addr16
adc
in
push
test
out
jl
mov
movsl
lea
inc
jg
stc
fisttps
cmp
int3
in
jle
movq
inc
inc
sarb
aas
mov
push
out
out
adc
xor
shll
jmp
dec
jno
rolb
push
test
add
jmp
nop
inc
fdivrl
or
lret
mov
xchg
inc
imul
inc
ss
stos
cmp
mov
jns
xchg
out
mov
iret
mov
rol
add
push
or
insb
pop
rcll
push
sbb
aad
repz
push
jbe
dec
dec
repz
pop
add
sbb
loope
or
shlb
call
int
mov
cmp
hlt
lea
movsb
fsubrl
stos
sub
imul
push
jne
ljmp
jge
xchg
imul
pop
dec
insb
sbb
mov
sub
push
mov
stc
test
xchg
out
sbb
je
cmp
adc
fmull
imul
nop
jns
loop
stc
xchg
xorb
add
adc
xorl
lret
scas
mov
cmp
xchg
inc
mov
fstpl
jbe
and
adc
lds
pusha
arpl
scas
int
cmp
mov
jg
dec
popa
lcall
jmp
push
ss
test
fs
jne
insl
xor
jne
cmp
push
js
jg
je
int
adc
sub
add
repnz
mov
lcall
mov
adcl
shl
cld
mov
cmpl
mov
icebp
jecxz
je
dec
lahf
sets
addr16
dec
xchg
sub
bound
mov
pop
xor
jl
mull
test
sub
push
inc
out
hlt
pop
pop
aad
iret
sub
add
adc
add
sbb
repz
roll
cmpsl
or
in
adc
jp
mov
adc
adc
mov
cmc
mov
sub
sub
mov
xlat
sbb
pop
pop
and
push
mov
lods
xor
add
outsl
xchg
mov
bound
shrl
inc
fimull
jo
lahf
xlat
mov
mov
xor
and
sub
sbb
out
mov
pop
mov
inc
subl
push
pop
daa
insb
mov
sahf
lahf
cwtl
pop
lock
inc
sarb
inc
xchg
std
mov
mov
jmp
and
dec
mov
jp
out
pop
cmp
stos
cmp
inc
lods
or
add
test
aad
mov
add
in
pop
repnz
sahf
pusha
iret
das
mov
clc
xchg
sub
jbe
jne
jne
push
dec
adc
sbb
divl
jp
adc
cmpl
lds
add
pop
mov
pop
jge
pop
add
jno
mov
outsb
jmp
jbe
rcr
nop
push
scas
loopne
xorl
es
mov
mov
sbb
das
insl
jo
nop
cmp
lcall
jnp
test
cwtl
jge
dec
mov
fsubs
xchg
mov
xchg
icebp
jg
dec
popa
add
xchg
sbb
or
dec
lret
cld
pop
xor
mov
mov
sbb
xor
mov
stos
ljmp
hlt
sub
adc
sbb
lock
ficoml
les
sahf
and
jmp
jmp
jmp
push
push
sti
pop
jb
jno
or
inc
push
push
pusha
imul
loope
mov
jmp
loop
cwtl
cld
jae
and
rcrl
add
int3
inc
fsubrp
xor
enter
cmpsb
inc
xor
inc
pusha
cmc
pop
ss
outsb
mov
int
add
add
mov
sbb
in
mov
mov
ds
mov
sub
or
mov
and
ret
repnz
mov
sahf
sbb
mov
xor
jge
fcmovu
mov
enter
jne
inc
jno
jbe
jecxz
and
dec
mov
fwait
mov
mov
in
xchg
xchg
lds
lahf
mov
sub
mov
scas
data16
insb
icebp
cmp
mulb
int3
adc
jno
stc
cmp
pop
fdivrp
cs
addl
outsl
xchg
or
out
jae
cltd
aad
xchg
pusha
adc
lahf
out
inc
inc
cmp
sbb
cmp
push
pop
cmc
mov
push
ss
fwait
and
jnp
out
jecxz
shlb
cli
cmp
jecxz
dec
repnz
imul
dec
out
sarl
xchg
cwtl
mov
push
pop
jge
ja
test
jecxz
std
pop
int3
imul
inc
fsubl
movsl
adcb
int
out
lock
loope
pop
imul
jmp
movsb
xor
lret
loope
fsubrs
sahf
dec
loope
mov
das
fldcw
repnz
test
scas
dec
and
int3
loop
lea
pop
xor
or
lret
cmp
sbb
push
and
lods
xor
adc
test
adc
pusha
pushf
inc
mov
mov
imul
pusha
dec
movsb
xchg
cs
xor
push
xchg
cmpsl
lods
pop
mov
mov
mov
or
fildll
fidivs
mov
cmp
lahf
xchg
sarb
cwtl
and
inc
scas
out
adc
ss
dec
inc
push
fwait
inc
sub
sub
lret
mov
sbb
mov
in
push
push
or
mov
dec
pop
or
dec
in
cld
xchg
jbe
xchg
or
mov
leave
xchg
inc
inc
jns
mov
enter
mov
xor
adc
cs
insb
sub
and
adc
xchg
fwait
mov
xor
pop
sbb
cli
stc
add
test
pop
cmp
jbe
jno
cwtl
pop
dec
and
inc
sbbl
jmp
mov
insb
repnz
push
cltd
dec
add
lea
push
test
jnp
cs
lcall
pop
loopne
push
outsl
sbb
test
rcll
fmul
jne
insb
dec
inc
das
sbb
hlt
fcompl
daa
push
mov
sbb
lret
test
mov
in
adc
dec
pop
fsub
push
sub
mov
loop
cmp
cld
mov
aaa
out
fsubs
cmpsb
mov
cltd
ss
les
lret
push
xor
daa
or
cmp
add
inc
gs
push
mov
sbb
aaa
pop
pop
mov
or
loope
insb
inc
mulb
insl
out
aam
stc
push
daa
mov
out
jnp
enter
pop
mov
xchg
xor
inc
sbb
add
dec
sub
adc
int3
or
in
addb
ja
xchg
fistpll
leave
ret
inc
inc
mov
bnd
sti
mov
mov
ss
mov
pop
mov
pusha
shrb
lds
push
mov
sub
mov
mov
out
sub
fisttpl
icebp
int3
insb
dec
or
xchg
out
sbb
dec
mov
mov
xor
popa
mov
out
and
cwtl
sti
mov
jns
cmp
testl
inc
sub
fistpll
rcrl
sbb
cmp
pushf
js
and
cmpsl
rcrb
scas
sbb
cmc
ss
sub
xchg
cmp
mov
pop
inc
cltd
xor
dec
lods
movsb
fwait
and
out
data16
jno
ljmp
xor
jp
pop
std
es
cmp
adc
into
roll
xchg
inc
lds
mov
pop
in
out
fwait
aaa
icebp
xor
data16
cli
arpl
cltd
xlat
or
sub
lods
cmp
xchg
jne
adc
mov
subl
out
mov
ret
push
add
xchg
sub
sub
xorl
shl
add
inc
lahf
mov
mov
cmp
sarl
in
scas
jl
jne
or
int
icebp
cltd
pop
mov
rorl
enter
mov
jmp
push
aas
repnz
mov
movsl
into
inc
into
cmpsb
ficoms
xchg
lret
out
out
mov
and
push
aad
dec
jl
and
mov
pop
xor
sbb
addb
sub
fstps
int3
xor
int
mov
ss
inc
sbb
xchg
sub
mov
inc
inc
push
dec
xor
lock
icebp
add
jb
push
ret
sub
push
outsb
ds
lock
mov
jmp
outsb
inc
loope
popf
inc
imulb
fildl
jne
dec
repz
les
cmp
std
xor
xchg
adc
stc
mov
xor
call
sub
push
xchg
out
push
push
jae
fcompl
inc
xchg
mov
add
jne
xor
add
mov
in
xchg
stc
pop
and
dec
or
outsb
mov
mov
dec
xchg
mov
adc
sub
cmp
lods
xor
psrlq
cmc
pop
add
outsb
int3
xor
jecxz
sub
jl
inc
dec
inc
out
xor
div
hlt
and
pop
pusha
clc
push
mov
sub
add
mov
out
pop
mov
call
xor
inc
jp
ljmp
jle
rorl
push
sbb
flds
lcall
scas
popa
mov
cld
loopne
inc
xchg
lret
xchg
in
jmp
sub
push
push
mov
and
dec
fimull
fisubl
and
fsub
inc
test
stos
mov
gs
mov
pop
pop
das
jmp
add
mov
aad
push
dec
lret
add
push
leave
lea
adc
daa
xor
ret
fs
ds
xor
lds
dec
mov
jbe
xchg
loop
xchg
mov
or
pushf
or
mov
inc
mov
mov
mov
pop
sub
fldl
dec
xor
dec
mov
push
xchg
adc
xchg
testl
scas
add
into
adc
fcmovne
add
cmp
shl
cmc
mov
pop
jns
dec
push
in
adc
push
adc
enter
cmp
and
imul
push
imul
sahf
imul
pop
stos
or
cmp
inc
sub
test
cmp
dec
mov
xchg
push
and
lods
rolb
mull
mov
mov
loopne
pop
scas
inc
mov
xchg
xchg
mov
pop
adc
adc
movsl
jl
das
xor
mov
xchg
mov
mov
and
add
sbb
iret
cmpsl
cmp
int
sub
jg
idivb
push
insl
shlb
dec
je
push
xor
push
subb
and
jae
or
mov
add
sbb
sub
int3
rcll
hlt
mov
and
cmc
and
adc
pop
push
cmpsb
int3
or
sub
lea
in
sbbb
pop
int
loop
imul
mov
sbbb
lods
xchg
aad
lea
or
and
dec
jnp
jne
imul
aad
push
subl
das
mov
pop
push
out
cmp
fcompl
imul
mov
insl
mov
jge
addr16
push
and
push
inc
sbb
push
imul
mov
mov
idiv
enter
and
mov
and
dec
sahf
and
mov
stc
fisubrs
adc
push
rcrb
lds
mov
pop
rcl
pop
or
bound
cwtl
in
frndint
aad
scas
test
andl
sbb
cmp
aaa
push
shl
aad
mov
mov
jns
sbb
and
rcll
getsec
adc
pushl
enter
mov
jae
mov
sbb
mov
cmp
sub
sub
loope
insl
sahf
pop
in
subl
scas
or
data16
lret
mov
ja
fs
sbb
adc
cmp
jmp
jns
out
xor
pop
inc
negl
aad
sbb
sbbb
xor
mov
mov
testl
xchg
cld
jl
loopne
int
negb
imul
cwtl
repnz
outsb
mov
cmc
in
enter
aam
mov
popa
cmpsb
dec
mov
lahf
mov
bound
cli
mov
dec
sbb
xchg
cmp
rcrl
std
add
jecxz
pop
push
or
dec
fstpt
cmp
fldt
scas
lcall
scas
test
add
inc
lahf
xor
push
mov
xlat
xor
and
push
testl
adc
adc
jmp
les
int
inc
in
sbb
sahf
push
aam
mov
loopne
and
xor
gs
or
push
add
inc
inc
add
pop
cmc
call
iret
push
mov
add
xor
daa
and
fdivs
xchg
loopne
xor
mov
ret
lahf
pop
add
mov
fwait
lahf
xchg
lods
xor
lcall
cltd
adc
adc
bswap
negb
inc
testb
insl
mov
sahf
xchg
dec
mov
dec
movsb
jge
push
nop
pop
push
or
jns
shrb
lret
aas
scas
scas
insb
mov
imul
imul
xchg
mov
fsubr
popf
or
stos
gs
mov
shlb
jecxz
lret
pop
jbe
inc
imul
fcmovnu
stos
inc
ljmp
dec
shr
and
cwtl
and
clc
je
lock
out
sub
loopne
and
cmp
xor
vmread
and
push
and
aas
push
call
xor
mov
test
jecxz
cli
pop
or
dec
repz
mov
les
jbe
cmp
inc
test
shl
adc
test
daa
fists
adcb
mov
jno
mov
loop
aaa
ret
adc
xor
pop
stos
std
icebp
aas
and
sub
add
stc
popf
push
pop
std
mov
mov
push
lock
mov
sbb
cmp
and
xchg
sbb
add
imull
add
jo
cld
data16
les
mov
lret
or
add
sbb
xchg
adc
jbe
or
mov
adc
jp
sarl
mov
xor
in
sub
popf
insb
mov
push
int
push
sub
xor
lds
cld
xorl
sub
pop
or
ja
je
mov
and
adc
jp
push
push
cld
dec
mov
jnp
shl
dec
lock
xchg
dec
pop
pop
mov
sti
sub
subl
xchg
jp
fisttps
add
mov
lcall
jp
and
xchg
mov
test
dec
xchg
dec
pop
pop
xchg
frstor
jns
cmp
in
shlb
jecxz
or
jns
repz
jnp
aad
les
in
and
shlb
loop
leave
push
in
popa
insb
lahf
inc
push
or
jge
push
das
mov
cmp
push
loop
push
sub
sbb
mov
xchg
adc
xlat
or
mov
sub
loopne
movsl
sbb
pop
out
dec
xor
test
xorb
mov
mov
scas
mov
daa
xchg
xor
in
fimull
movsb
loope
xlat
jno
lret
je
sbb
cmpsl
cmpsl
out
sub
in
mov
mov
xor
mov
inc
and
nop
inc
fisubs
mov
push
xor
cmc
mov
push
pusha
movsb
or
inc
loop
bound
sub
out
mov
add
inc
insb
cli
test
pop
mov
lret
scas
popf
jp
mov
dec
pop
mov
pusha
jle
stos
test
test
loop
mov
cmp
cmp
mov
das
pop
cmpsb
push
xor
push
fnstsw
mov
xchg
push
push
mov
sbb
inc
rcrb
pop
jecxz
mov
jge
imul
or
sbb
mov
out
sub
arpl
inc
test
adc
lret
and
lea
aad
rorl
jae
dec
int
adc
xchg
jmp
pop
cmpsb
jl
fs
fwait
mov
mov
add
in
into
imulb
mov
push
fcomi
pop
pop
sub
cwtl
incl
lds
je
add
xchg
loope
sar
mov
cmp
push
mov
adc
leave
bound
mov
xor
test
push
adcl
lds
loope
cmp
subb
push
jnp
dec
push
call
test
pop
rclb
jmp
jg
mov
outsb
shl
popa
xchg
mov
cmp
and
jl
outsl
enter
movsb
mov
out
cmp
fstpt
dec
push
inc
loop
mov
aas
inc
adc
jnp
insl
mov
in
sub
mov
aas
sub
sbb
mov
mov
in
das
xchg
mov
push
into
xor
push
orl
jmp
dec
sub
jge
cli
loop
mov
mov
insb
or
push
iret
fcmovu
in
mov
mov
mov
add
or
cmpsb
ret
andl
pusha
repnz
lret
mov
xchg
rcl
jbe
mov
aam
mov
fwait
jb
imul
rcl
loopne
out
test
and
xlat
idivl
fwait
jo
loop
sbb
sub
sbb
dec
sub
jecxz
mov
mov
inc
fisttpl
pop
in
xchg
sbbl
lods
cmpsb
fidivs
or
push
pushf
or
or
jae
popf
jns
es
out
lods
sahf
xor
add
pop
jne
xor
cltd
xchg
xchg
dec
call
pusha
daa
fists
dec
hlt
test
bound
lcall
adc
lcall
pop
leave
jbe
sub
js
out
into
in
lods
lret
and
ret
mov
fsubrs
mov
xlat
and
pop
shrl
aas
xor
stos
push
ret
cmp
arpl
stc
jnp
popf
mov
daa
fnstsw
cmp
pushf
add
mov
scas
mov
pop
clc
lcall
cmc
leave
add
js
push
sub
sub
clc
inc
rorl
lahf
jns
inc
inc
fisttps
xchg
cs
or
jmp
pop
inc
lahf
mov
add
mov
mov
popl
sbb
scas
sbb
xchg
dec
xchg
es
lret
loope
dec
jo
or
fnstenv
cmpsl
or
add
and
mov
xchg
hlt
in
mov
inc
jns
push
insl
push
imul
cmpsb
mov
nop
data16
mov
adc
fnstenv
das
xor
xlat
or
add
pop
das
stos
cmc
dec
pop
and
or
bound
adc
fsubl
imull
aad
xchg
pop
fldt
jnp
xor
xor
adc
shlb
data16
dec
aad
scas
xchg
add
jbe
push
lcall
mov
sub
ss
cmp
in
push
pusha
adc
mov
mov
je
mov
pop
jo
or
xchg
cmp
aam
es
lret
sub
lock
testl
push
sahf
test
mov
dec
fsts
mov
scas
lret
ja
dec
pop
jb
adc
push
inc
fdivrp
or
cmp
out
addr16
or
sbb
and
mov
mov
xlat
add
fwait
or
add
jb
jb
sub
sub
xchg
into
mov
or
add
ss
mov
out
fisubrs
mov
inc
iret
adc
call
push
dec
outsl
inc
cmc
mov
pop
addl
cmc
pop
rclb
push
xchg
sub
dec
cs
bnd
movsl
fsubp
pop
gs
scas
mov
aas
cmpsl
popa
jle
les
push
pop
lahf
or
xchg
dec
jp
into
dec
test
insl
xchg
mov
mov
inc
and
into
add
inc
fs
jbe
jl
dec
lahf
xor
jae
js
adc
push
mov
or
scas
mov
test
or
arpl
cs
iret
jns
adc
dec
mov
cld
jo
lods
int
aad
int
ud2
pop
jb
cmpb
xchg
mov
std
fs
in
pop
in
push
test
inc
lahf
mov
sub
pop
add
push
mov
mov
or
sub
addr16
movsl
mov
or
push
jge
cmp
or
mov
jg
scas
div
mov
xor
xor
out
sub
push
daa
jl
das
rorl
daa
inc
fs
sarb
and
jns
bound
add
inc
adc
ljmp
in
nop
inc
add
les
mov
cmp
jg
and
ljmp
bound
jle
aaa
lods
xchg
inc
out
lea
pop
jo
adc
mov
lret
cmp
sbb
inc
pop
jl
sub
jno
sahf
sbb
aas
and
add
jmp
mov
pop
mov
ja
sahf
mov
jnp
inc
fistl
sarb
shr
mov
into
sub
add
pop
mov
xchg
adc
adc
xchg
jp
pop
jle
dec
add
movsb
pop
stos
mov
mov
jecxz
fsubrs
mov
push
pop
mov
addr16
and
sub
outsb
mov
push
ljmp
adc
pop
xorb
push
mov
outsb
inc
mov
rcll
push
flds
inc
cld
xchg
xchg
dec
cli
push
xor
daa
and
sbb
test
mov
mov
xchg
xor
adc
int3
sbb
cmp
adc
mov
pop
call
in
rcrl
lock
das
cmp
aad
sub
pop
or
neg
xchg
in
mov
fwait
add
sahf
rolb
jp
jbe
subb
scas
pop
mov
mov
shlb
pcmpeqd
insl
push
cmc
push
out
pop
pop
or
cmpsl
cmp
aad
inc
add
adc
enter
rcrb
les
inc
in
and
push
pop
adc
in
sbb
mov
ja
adc
leave
stc
sub
adc
shlb
adcl
fwait
aam
fadd
add
aaa
imul
pop
mov
sbb
xor
shrl
pop
mov
nop
cwtl
jmp
mov
cld
mov
in
cmp
inc
pop
xor
and
mov
mov
adc
test
out
mov
in
dec
les
out
mov
mov
adc
insb
cmp
into
dec
dec
mov
rcrl
rolb
adc
ljmp
leave
rsm
adc
and
lds
sub
fistl
repz
out
mov
and
mov
cmpsb
cmp
movsl
popa
mov
jmp
and
push
aad
mov
imul
xchg
loop
sahf
in
jbe
mov
jo
arpl
adc
divb
lret
adc
sbb
cmpsl
outsl
mov
push
scas
sbb
out
fcmovne
shlb
lods
jl
lea
cli
dec
fcmovne
mov
xchg
adc
add
mov
out
imul
movsl
push
insl
sub
nop
xor
fisubrs
push
lret
xor
cli
mov
xor
or
leave
xlat
push
fadds
push
aaa
outsl
out
fisubl
ret
jge
dec
fstpt
pop
in
push
test
push
loopne
in
sbb
jp
mov
jb
sarl
adc
ja
mov
or
xor
jge
out
mov
fstp
jmp
fwait
clc
xrelease
push
add
test
xchg
lret
push
enter
cmp
fcomps
xchg
scas
fbld
mov
pop
pop
jo
sahf
adc
xchg
push
ret
out
data16
xor
lods
in
cmp
icebp
loope
mov
mov
bnd
ja
cld
push
add
lahf
data16
xchg
arpl
inc
out
imul
add
pushl
jb
adc
inc
pop
jne
push
out
frstor
fistps
and
pushl
adc
or
fsubrp
mov
imul
fisubrl
pop
pop
outsl
add
xor
fldenv
lods
dec
out
sub
lock
imulb
xchg
dec
pop
add
push
movsb
mov
mov
cmp
les
jo
push
adc
cmc
cwtl
lcall
add
int
rclb
pop
xlat
sbb
mov
loop
cmpl
xchg
cmc
and
xchg
fcoms
xchg
pop
std
mov
int3
int
jno
sbb
inc
mov
das
cwtl
fstpt
gs
popa
adc
stos
in
incb
addr16
xchg
pop
scas
mov
loope
in
add
pop
arpl
aaa
test
add
sub
sti
mov
pop
jg
lods
daa
int
push
lock
inc
lods
out
add
mov
sub
pop
push
outsb
faddl
sbb
dec
xor
push
je
xor
jmp
mov
arpl
cli
adc
lds
hlt
mov
cwtl
xor
in
popf
add
icebp
pop
mov
dec
adc
fisubl
inc
lea
ja
push
jecxz
lock
pop
out
cmp
daa
push
mov
dec
fcomi
divl
dec
inc
test
dec
arpl
test
das
xchg
repnz
fmul
mov
cmp
add
adc
xchg
sub
adcb
sbb
insl
clc
ret
or
pop
dec
aaa
inc
iret
movsl
fidivrl
add
jl
scas
mov
xor
daa
popa
aad
int3
jne
stos
mov
lea
inc
sbb
rorl
dec
fdivrs
stc
repnz
cmp
int
lds
test
jp
mov
and
sbb
in
sbb
out
aam
mov
mov
mov
nop
pusha
push
sbb
inc
lea
das
mov
add
test
fbstp
push
inc
lods
fldt
xor
cli
xchg
lret
dec
aaa
push
push
cmp
mov
jb
xor
jno
mov
les
rolb
cmpsl
cli
hlt
lds
lds
mov
jmp
push
cmp
jns
call
subb
pcmpeqw
nop
lds
sbb
cld
imul
lret
inc
sbb
dec
leave
mov
sbb
lahf
outsl
imul
dec
in
inc
sbb
sbbb
test
pop
mov
aad
or
push
mov
jg
movsb
outsb
out
dec
push
mov
sub
jmp
and
or
stc
xor
push
lcall
in
out
pop
out
imul
ljmp
iret
jle
mov
xchg
xor
mov
cmp
inc
clc
imul
pusha
push
lock
adc
mov
cli
leave
pop
insl
ret
out
lea
jmp
and
out
cmp
mov
arpl
daa
xchg
pop
lock
pusha
sub
movsb
arpl
insl
lret
jns
xchg
shlb
mov
ret
cmp
xchg
sbb
es
inc
lcall
and
add
jnp
mov
loopne
mov
imul
xchg
rcll
out
je
xchg
imul
loop
mov
imul
clc
sub
mov
cs
add
mov
adc
arpl
xor
xor
adc
and
or
imul
outsl
outsb
int3
not
xchg
mov
std
lds
pop
in
mov
icebp
nop
int3
out
gs
and
adc
das
dec
xor
add
jp
or
div
inc
mov
mov
insb
sub
xchg
lods
popf
lock
pop
xchg
ret
movsb
in
push
out
rcr
add
or
xchg
xlat
outsl
out
cmc
fs
repnz
mov
adc
push
das
sbbb
in
push
dec
in
sub
jg
jno
mov
rcr
cli
jnp
sbb
andl
push
pop
mov
scas
xor
ljmp
imul
jns
pop
in
mov
jge
xor
xlat
or
and
xchg
adc
jbe
adc
sub
mov
xchg
stos
cmp
sbb
loop
test
mov
pop
mov
lret
pop
sbb
data16
adc
inc
mov
push
mov
scas
cmp
push
and
pop
and
xchg
subl
fldt
push
fxch
jnp
jne
aaa
andb
lods
es
test
sbb
movsb
jae
mov
and
iret
cmp
ljmp
es
xchg
pop
out
add
sarb
mov
mov
out
sbb
add
push
mov
cmp
push
pop
cmp
out
inc
pop
inc
cli
lret
push
roll
ljmp
es
sbb
repz
push
push
mov
pop
sbb
ja
out
xchg
mov
mov
add
out
mov
imul
movsl
into
sbb
or
xor
repz
mov
adc
inc
lods
ds
mov
das
call
dec
push
push
jbe
push
xchg
ljmp
imul
mov
pop
ret
fisubl
jge
aaa
in
sub
insb
notl
pushf
insl
push
aad
or
lds
pushf
mov
adc
pop
cwtl
or
mov
shr
push
inc
ja
fiadds
testl
sbb
inc
fmull
pop
sbbl
push
pop
aas
popw
lods
inc
xor
and
cmp
mov
loopne
inc
cmp
or
outsl
lcall
mov
mov
push
or
iret
xor
aas
stc
cmp
inc
aaa
dec
inc
out
jns
xchg
sbb
inc
mov
or
xor
or
into
das
dec
mov
jge
out
repz
add
add
add
mov
adc
pop
mov
pushf
sub
adc
sub
cli
lret
xchg
push
dec
sbb
inc
orb
daa
iret
xor
cwtl
mov
in
push
out
std
das
push
cmc
mov
push
ljmp
test
std
rcll
dec
sbb
addr16
sahf
push
lods
pop
sub
mov
pusha
data16
xor
call
cmp
cmpsl
xchg
adc
mov
outsb
jnp
pop
inc
pop
dec
mov
mov
imul
push
stos
and
sbb
pop
xchg
hlt
mov
in
scas
sbb
sub
or
mov
push
pop
hlt
int3
mov
loop
jmp
aas
dec
cmp
insb
dec
or
pop
sbb
fs
mov
cli
push
mov
ret
push
stos
psubusw
fcomip
ret
adc
outsb
xor
xchg
in
lahf
mov
dec
mov
sbb
loopne
dec
xor
pop
add
test
addr16
or
jno
inc
pop
jl
movsl
cmp
pop
test
push
jecxz
or
stc
push
outsb
leave
mov
arpl
loop
adc
pop
pop
fcmovne
call
xor
ja
xor
fdivrl
ret
out
cmp
mov
out
sbb
sub
cmpsl
and
inc
cltd
stos
hlt
push
fiadds
insl
or
js
and
jbe
cltd
jge
js
pushl
mov
cmpsl
pop
fmull
sub
pop
dec
test
xor
incl
cmp
jnp
mov
jno
loope
mov
inc
and
push
jb
stos
scas
pmaxsw
lahf
idivl
sub
call
lret
jg
subb
loope
mov
pop
mov
mov
js
sbb
sbb
lcall
mov
xor
mov
sub
stos
add
les
add
push
ficoml
outsl
jmp
and
cmp
lret
test
xchg
into
mov
lods
cmp
lea
mov
add
adcb
fisubrs
jg
outsl
dec
in
dec
dec
push
movsb
outsl
jno
aam
je
dec
xchg
xor
dec
into
lcall
iret
cmc
cmp
cltd
lahf
dec
pop
lcall
jae
push
movsl
xchg
out
lret
or
popf
xor
and
shll
xlat
mov
xor
dec
xchg
sti
mov
in
adc
rcrl
pop
data16
add
sub
push
mov
jb
nop
jbe
insb
add
cmp
sub
and
xchg
mov
bound
xchg
aam
mov
jmp
jae
outsb
fst
sbb
aaa
divl
sub
dec
sbb
push
jo
xchg
outsl
fmuls
xor
fs
xlat
cmp
pop
xchg
cld
inc
xor
fsubs
push
loop
fs
inc
inc
loop
out
cmp
rcr
insb
lcall
mov
std
sbb
or
popa
arpl
adc
mov
ds
jl
mov
push
out
add
push
add
inc
setge
push
xor
stos
xor
and
and
cmp
mov
xchg
push
rol
mov
insl
xchg
add
dec
xchg
xor
enter
mov
out
mov
adc
sub
enter
jecxz
mov
mov
loop
sbb
pop
adcl
das
dec
mov
push
xchg
out
fxch
jb
mov
insb
mov
test
cmpl
jnp
out
fs
push
pushf
push
sbb
dec
xor
inc
faddl
mov
sub
and
jae
cmp
pop
fmuls
cli
pusha
and
or
cltd
xor
inc
sub
mov
test
loopne
push
pop
test
xor
les
insb
call
ja
inc
je
xor
lret
and
cwtl
push
sub
fldl
mov
cmp
inc
fwait
mov
jae
push
leave
add
roll
inc
in
add
xchg
sub
scas
pop
push
in
arpl
jbe
xor
outsb
das
inc
icebp
out
ret
xchg
adc
lea
mov
popf
inc
ljmp
push
add
lahf
lods
imul
aas
insb
addr16
dec
dec
dec
imul
pop
jecxz
sbb
clc
les
insl
subb
sub
xchg
enter
sub
dec
lea
sbb
movsl
add
mov
fidivrl
in
je
aaa
inc
shr
push
lds
xchg
int3
test
pop
cmp
jl
fptan
cli
push
and
pop
dec
push
fstl
sbb
out
insb
into
sbb
dec
fwait
mov
in
ss
das
adc
sbb
sub
xor
inc
dec
mov
pop
daa
test
enter
inc
lds
cld
lods
dec
nop
loope
fwait
inc
xor
repz
jp
jp
add
iret
std
mov
fstps
js
fldt
cmp
fsubs
mov
jecxz
stos
xor
xchg
clc
dec
ljmp
ret
cmpsb
dec
dec
cmp
fisubs
add
jbe
mov
frstor
adc
xchg
nop
pusha
stos
mov
shl
xor
xchg
fcoms
xor
mov
or
jmp
dec
sub
sbb
xchg
add
mov
sub
es
lahf
lods
cld
jne
jb
adc
adc
js
cs
lods
push
stc
lret
mov
nop
aaa
test
xor
pop
jecxz
mov
mov
adc
add
insb
mov
cld
push
lock
dec
mov
outsl
popa
js
xor
dec
clc
sbb
add
cmp
insb
stos
hlt
test
sub
or
mov
stos
sbb
add
rcll
pushf
sbb
dec
movsb
sahf
jl
mov
andb
in
xchg
mov
inc
addr16
scas
add
pop
cmc
cmp
cmp
imul
lods
loope
dec
movsl
jmp
jb
ficompl
lods
decl
push
stc
movsb
sbb
lret
loop
nop
movsb
mov
cmp
push
or
hlt
in
adc
add
adc
cmc
dec
aam
cmp
in
push
xchg
sti
mov
rcrl
imul
popa
shll
fisubs
rcrb
in
cmc
frstor
ret
dec
ret
cmpsl
dec
ror
xchg
mov
dec
jge
cmp
bnd
push
mov
fsubrs
cmp
inc
cs
push
rclb
sahf
roll
andl
addr16
mov
xchg
fsubl
xchg
pop
enter
daa
lret
or
inc
sub
in
xchg
scas
ret
xor
aad
fimull
fdivrl
test
mov
jmp
push
sti
mov
loope
addl
push
sbb
out
xor
pop
outsl
movsl
rorl
das
adc
cltd
mov
aas
mov
ja
mov
es
frstor
xchg
jns
jge
cmp
test
movsl
lea
mov
stc
and
xchg
orb
sti
xor
punpcklbw
adc
jl
imull
sbb
shlb
js
popa
daa
or
decl
aas
subl
icebp
in
xchg
ret
adc
and
ljmp
mov
sbb
in
and
testb
or
sub
rcrl
mov
gs
dec
popa
out
sbb
movsl
inc
dec
xor
xor
push
push
mov
dec
fnstsw
sbbl
aaa
sbb
cmp
cmp
cli
jno
gs
sub
cmp
fwait
addr16
testb
xor
nop
ds
sub
xchg
xor
cmp
push
push
or
lret
repnz
sbb
push
dec
dec
push
sti
int
fstps
adc
pusha
nop
aam
sbb
inc
cmp
repz
fildl
push
mov
int3
mov
cmp
jge
loop
js
cli
pop
add
push
and
and
pslld
pop
test
cmpsl
repz
sahf
pusha
mov
push
inc
call
int
xor
jg
pop
shrb
xor
fiadds
mov
icebp
adc
mov
scas
push
pop
outsb
call
lods
in
mov
push
ss
pop
sbbl
jmp
daa
divl
add
pop
xor
in
scas
fiadds
cmpb
fisttpl
adc
cmpsl
in
mov
pop
pop
or
pop
pushf
popf
lahf
pop
rcrb
pop
xchg
add
pop
xchg
mov
push
and
mov
add
fldl
fwait
das
dec
nop
pushf
ret
mov
adc
ret
or
inc
sub
and
repz
xor
cld
fdivl
and
sbb
nop
adc
pop
add
stc
in
lock
sbb
movsbl
pop
cmp
loope
andb
aad
dec
fisttpl
into
adc
cmp
cmp
dec
in
repnz
arpl
cmpsl
cmpl
cmpsb
and
lret
sahf
xor
mov
test
xchg
xor
dec
mov
aam
fldenv
in
push
sub
lahf
ret
xlat
enter
jl
and
aas
bound
jp
test
pop
addr16
xor
les
adc
add
xor
rcl
push
fstps
pop
push
hlt
addr16
shll
jo
push
bound
or
xor
fldcw
test
data16
leave
stos
shr
inc
xchg
xchg
mov
test
out
push
mov
sub
sti
mov
or
push
cmp
xchg
ss
hlt
mov
lods
pop
pop
data16
xchg
or
subb
fwait
sub
nop
push
hlt
negl
xchg
orb
daa
cld
lods
mov
inc
arpl
mov
and
sbbb
pop
lret
nop
out
xor
adc
dec
popa
ja
xor
inc
pop
adc
lea
das
shrl
inc
jb
repnz
stc
jl
test
or
test
ficompl
movsl
jb
fninit
movsl
mov
aaa
in
add
adc
dec
mov
and
aaa
sti
scas
movsl
pusha
movsb
lds
and
lret
sub
pop
nop
popa
mov
nop
pop
add
ljmp
add
pop
sbb
fisubrs
push
and
push
xchg
rcrb
loop
dec
cmp
js
mov
mov
test
adcb
nop
les
rcr
pop
or
in
jb
stc
je
inc
fldt
imul
xchg
sub
cli
or
adcb
push
sub
inc
sbb
data16
lods
jmp
push
fmuls
sti
lods
cs
add
add
sbb
sub
sbb
arpl
inc
inc
and
pop
dec
ret
push
mov
int3
je
inc
ja
cmp
xor
push
int
push
push
lods
lret
gs
xchg
cmc
fcomps
inc
mov
idivl
dec
lock
mov
aam
cltd
push
mov
add
pop
std
fsubrs
aaa
push
pop
nop
daa
movsl
push
fcoml
icebp
mov
imul
xor
adc
rcll
sub
lahf
inc
xor
xchg
dec
dec
mov
xchg
xchg
mov
out
inc
sub
ja
xor
out
lret
mov
cmp
jecxz
imul
lahf
fs
icebp
sbb
jg
mov
aam
lret
movsb
lea
push
push
dec
test
repz
in
inc
add
jb
lods
jno
andb
movsb
or
cmp
cltd
lret
movsl
jbe
or
mov
fsubr
imul
jmp
or
jmp
lods
jl
ja
ret
mov
vandnpd
into
pop
pop
test
cltd
dec
push
pop
or
or
mov
ds
lods
xchg
orb
fidivl
lret
les
in
fldt
data16
test
aad
jae
pop
mov
nop
inc
jnp
rol
pop
rcrb
leave
pusha
add
leave
jmp
flds
pop
push
push
mov
add
cmp
push
xchg
push
imull
mov
mov
test
sub
ficompl
xor
add
mov
pop
mov
xor
add
mov
arpl
sbb
fcoml
test
arpl
movsb
dec
es
mov
dec
js
ljmp
add
or
testb
je
out
mov
arpl
dec
out
out
repz
cmp
shrl
xor
adc
xlat
enter
sahf
push
jb
cmp
data16
pop
scas
mov
popa
sub
jecxz
and
or
sbb
xor
mov
sub
xchg
ja
clc
mov
add
dec
fucomi
sbb
mov
daa
push
dec
jbe
inc
fsubl
mov
jne
add
in
pop
inc
addr16
add
shrb
fcmovnu
out
and
movsl
js
pop
aaa
out
mov
pop
imul
scas
sub
xchg
inc
xchg
shl
inc
push
add
inc
in
daa
movsl
fildll
sbb
push
jmp
out
mov
jl
jge
xchg
adc
adc
pop
movsl
push
pop
sub
ja
jb
sti
dec
pop
add
test
pop
out
dec
mov
lcall
jb
mov
sti
mov
mov
cmp
mov
in
outsb
test
in
stos
es
rclb
pop
push
mov
inc
jno
loop
add
xor
sub
lcall
loopne
lret
divb
mov
sub
fdivrs
in
pusha
jns
ror
push
push
dec
iret
std
sti
out
imul
and
insl
stc
ss
pushf
push
test
fidivl
clc
jbe
sbb
or
inc
rolb
out
xor
and
jnp
addl
mov
aam
add
xor
pop
int3
dec
push
cmc
in
daa
loop
cmp
or
jle
mov
fisubl
mov
or
mull
push
js
add
lock
sti
lret
sub
rcrb
mov
sbb
pop
mov
pop
sti
cmp
in
dec
cmpsb
xor
popa
js
aas
push
sahf
and
push
clc
xor
cwtl
xchg
mov
sbb
pop
push
adc
adc
pop
imul
mov
add
shll
std
jne
xchg
fisubrs
mov
ret
add
cmc
stc
ja
jg
jae
and
add
pop
or
xchg
mov
mov
adc
das
iret
ret
daa
cltd
jb
loope
pop
pushf
mov
daa
fistps
add
jno
std
dec
dec
push
mov
les
jo
jp
pop
test
inc
dec
xchg
popa
push
cmpsb
mov
fisubs
test
jg
frstor
popf
mov
xor
leave
xchg
pop
mov
xchg
jnp
inc
out
cmp
jo
cmp
sti
xchg
mov
outsb
add
mov
xor
xchg
mov
pop
adc
xor
jb
adc
call
inc
jmp
mov
adc
sbb
pusha
nop
call
jae
cs
sbb
jno
popf
in
insl
decl
mov
push
add
or
scas
mov
mov
adc
cmpsb
xor
hlt
enter
mov
or
mov
shrb
dec
adc
push
push
sub
scas
mov
xchg
inc
cmp
std
jmp
and
jmp
dec
cmp
cmp
fcoms
lret
loope
or
add
xor
outsl
or
mov
jle
push
mov
daa
jle
icebp
mov
jno
inc
std
mov
mov
sbb
push
mov
je
cli
pop
pop
dec
mov
sbb
sti
push
jne
xchg
hlt
sub
and
mov
cli
rcl
out
mov
mov
test
ljmp
jmp
inc
nop
in
les
adc
rorb
cmp
imul
out
mov
test
ret
mov
loope
hlt
pop
repz
inc
and
call
jg
test
imul
cwtl
jl
fmull
sub
push
inc
mov
or
ret
mov
stc
mov
mov
push
dec
sub
push
inc
orl
mov
test
mov
mov
add
popa
xchg
fistpl
pop
mov
fistpl
dec
xchg
adc
dec
mov
push
test
pop
jo
pushf
jp
ss
xor
xchg
cmpsl
lret
ljmp
mov
dec
and
push
mov
push
push
out
inc
mov
enter
fsubrp
into
into
dec
cmp
mov
cmp
int3
pop
lods
sbb
inc
dec
push
pop
jl
call
lea
test
subb
add
pop
adc
mov
loop
test
int3
inc
inc
decb
push
mov
jb
mov
test
movsb
lods
lods
sub
clc
xchg
mov
xchg
test
mov
sub
fiaddl
or
inc
sub
shlb
repz
push
ret
loopne
adc
mov
dec
scas
in
repnz
mov
xor
sbb
int
outsl
sub
ja
jg
inc
out
shll
or
mov
xor
in
or
sbbl
outsl
and
sub
stos
fdiv
lret
inc
popa
inc
mov
add
push
inc
shr
adc
cmp
pushf
mov
loopne
lea
mov
test
notb
xchg
adc
or
sbb
flds
rcll
pxor
cmpsl
adc
icebp
or
aaa
pop
sahf
fnstcw
sub
sbb
or
in
mull
adc
fsubp
adc
enter
pop
cmp
jle
pop
setbe
cmc
jae
popf
or
loopne
adc
sub
pop
jge
mov
sbb
loope
imul
fisttpl
outsb
test
adc
push
pop
jg
inc
mov
rolb
movsb
je
dec
jnp
push
int3
dec
in
jl
sbbl
cs
lds
mov
mov
jge
aaa
adc
sub
fildll
xchg
sub
xchg
mov
pushf
mov
or
dec
loop
cmp
xor
aad
add
push
add
cmp
pop
push
xor
xor
cmp
xchg
movsb
or
cmp
clc
jb
cli
andb
fistps
lock
dec
test
pop
adc
mov
mov
xor
mov
sahf
in
push
scas
push
ss
jmp
add
fistpll
push
test
loopne
movsb
mov
xlat
iret
sub
fadds
or
sbb
jns
xchg
cmp
push
dec
cmp
or
lods
xlat
and
imul
mov
push
adc
scas
inc
lods
js
clc
sbb
aam
fldcw
aas
adc
ds
ficoml
xor
add
rorl
jne
jb
pushf
icebp
cltd
cmp
rcrl
insl
adc
pushf
je
dec
mov
pop
sbb
mov
loop
xlat
xor
cli
jp
pop
scas
jecxz
xchg
xor
fs
rorb
ret
lahf
insb
xor
push
popf
imul
je
insl
adc
inc
lea
out
push
add
cmpsl
xor
pop
dec
loope
push
or
and
lods
xchg
andb
mov
gs
mov
mov
add
fdivs
and
in
dec
out
cmp
psllw
rclb
fsts
push
cwtl
dec
mov
lret
out
pop
ret
addr16
jne
out
cmp
mov
cmp
mov
sbbb
mov
push
insl
sbb
xor
enter
sbb
xlat
or
cmpl
pop
fcoms
adc
test
in
ljmp
popf
gs
loopne
popa
stc
bound
xor
enter
andl
sub
mov
mov
std
nop
push
ja
in
jg
pop
cmp
pop
cmp
shlb
push
stos
test
jge
jl
jmp
dec
cmp
bnd
pop
repz
jae
addl
dec
imul
mov
jle
stos
es
push
cmp
adcl
adc
mov
into
movl
stos
ret
cs
mov
adc
les
cs
xor
pop
shlb
rcl
add
and
aas
leave
cltd
mov
and
or
mov
js
fptan
inc
fwait
adc
in
sub
cwtl
in
popf
into
sti
lds
icebp
pop
fdivl
mov
xchg
jmp
mov
and
cs
mov
add
sbb
dec
ret
loopne
gs
loop
fxch
jb
inc
js
andb
addb
mov
pop
ds
outsb
and
mov
and
js
xor
mov
xor
push
or
push
ljmp
addr16
pop
movsb
add
movsl
decl
sahf
idivl
popa
adc
xchg
add
xor
inc
add
imul
mov
dec
cmp
add
or
mov
into
sbbl
cli
pop
out
test
nop
stos
shll
fsubr
pop
scas
ret
cmp
push
mov
sub
popf
enter
jbe
and
and
mov
lock
pusha
dec
shrl
sbb
xchg
ficoms
loopne,pn
adc
out
inc
shll
gs
jmp
aad
mov
test
add
xor
or
mov
cwtl
fldt
icebp
call
dec
aaa
cld
hlt
mov
lahf
ud1
push
xchg
int3
inc
sbb
sbb
mov
mov
push
jmp
ss
leave
dec
clc
mov
inc
out
and
or
pusha
call
mov
dec
daa
setns
mov
xor
xchg
ror
adc
cmp
outsl
push
pop
test
push
repnz
mov
and
push
cmpsb
mov
data16
xlat
rcrl
jb
adc
fdiv
scas
add
pop
daa
pop
sbb
mov
ds
and
stc
call
sub
push
add
adc
sub
push
in
pusha
or
sbb
xchg
shrb
and
pop
fnstenv
dec
rol
adc
mulb
dec
clc
sub
xor
cli
or
scas
dec
sub
pusha
cmc
or
lock
xchg
or
add
or
push
cmpsl
adcl
mov
jg
or
inc
imul
xchg
cld
shll
cmp
out
lahf
mov
mov
xchg
gs
mov
adc
btcl
inc
outsb
test
adc
adc
mov
lret
clc
leave
cli
mov
sub
dec
data16
mov
idivl
movsb
jne
loope
sub
aad
lods
pop
popf
lods
jo
and
ljmp
bound
pop
or
cmpsb
in
lods
xchg
push
sub
shrb
data16
mov
cmp
xchg
ret
inc
sub
cltd
and
dec
ss
movsb
push
xchg
icebp
push
fwait
call
fwait
add
aad
inc
lds
jecxz
aas
sub
fs
cmp
arpl
pusha
mov
xchg
inc
std
pop
dec
loop
jbe
sbb
jmp
push
and
and
int
test
notl
movsl
cli
pop
sub
test
cltd
mov
jge
jmp
ljmp
std
shlb
dec
out
xchg
cli
xchg
ret
and
jno
loop
mov
push
cmp
mov
xchg
mov
pop
stos
cmpsl
fistpll
xchg
xchg
loop
leave
clc
fwait
clc
in
sahf
in
cmp
mov
iret
push
fstpl
mov
lret
mov
aas
loop
add
pop
push
sub
mov
push
mov
pop
pop
xchg
icebp
sbb
mov
mov
push
ret
dec
das
mov
mov
out
inc
lahf
lods
sbb
xchg
enter
mov
repnz
add
rolb
imulb
jle
xorl
ds
and
aad
or
or
leave
and
mov
test
adc
pop
frstor
adc
fdivrl
loopne
sub
jmp
shll
sbb
dec
aad
imul
test
mov
inc
or
js
aam
xchg
int
dec
add
ja
xchg
push
xcrypt-ecb
cmpsl
sbb
inc
pop
adc
push
push
cs
mov
dec
stos
cmp
into
sbb
or
filds
jnp
sahf
pop
jp
sbb
cmpsb
pop
push
popa
js
or
enter
out
mov
push
adc
and
jp
loope
jmp
enter
adc
outsl
or
xchg
cmp
ja
xor
pop
sbb
or
fs
out
aas
enter
cmp
mov
sub
push
push
push
pop
add
test
jne
cmp
das
test
jno,pt
push
aad
pop
adcb
push
pusha
jne
shll
fiadds
in
cmp
mov
mov
ljmp
dec
dec
aam
pop
in
pop
mov
lcall
stos
inc
call
shlb
daa
lahf
inc
pushf
and
xchg
mov
movsb
int3
inc
mov
daa
mov
js
sub
xor
outsl
push
add
aas
sub
jne
add
sti
mov
pushf
in
test
mov
cli
mov
mov
and
mov
icebp
loope
dec
pop
sub
cmp
andb
jg
pop
mov
and
std
stos
cmc
test
dec
sahf
push
ljmp
pop
out
adc
or
pop
int3
xchg
ret
loope
stos
cmp
dec
addr16
xchg
les
xlat
int3
inc
mov
mov
cld
ss
xchg
lds
mov
lret
push
xchg
sub
push
cli
sahf
ss
mov
jno
scas
notb
shlb
add
sbb
mov
add
and
push
mov
adc
inc
out
mov
cmpsl
fwait
outsl
jno
repnz
jo
cmpsb
or
ds
mov
ret
mov
cmc
movsl
in
adc
lea
cmpsl
mov
mov
dec
sbb
mov
sbb
popf
iret
daa
add
int
call
inc
xchg
dec
cwtl
cmp
pop
cs
sahf
cmp
cmp
imull
aas
cmp
mov
in
adc
leave
sub
or
cmp
push
sbb
pop
cmp
je
jmp
push
sahf
or
popa
mov
clc
xlat
cmp
test
or
jp
fs
les
pop
inc
mov
fbld
mov
inc
push
stos
inc
stos
mov
mov
lret
pop
sarb
test
lock
nop
leave
sbb
popf
out
inc
mov
or
xchg
push
or
or
push
mov
sub
sub
push
mov
rcr
adc
ljmp
pop
lods
sub
sti
inc
push
aaa
dec
inc
or
jno
sbb
pop
mov
fs
out
inc
xor
jg
sbb
sbb
cmovl
dec
in
sbb
daa
or
lret
fs
cmp
pusha
push
ss
enter
outsb
xor
dec
je
cmp
cmp
push
shll
mov
out
int
lcall
cmp
repz
or
fistpl
pop
cmp
jmp
shlb
push
addl
dec
inc
mov
lods
out
mov
nop
xor
mov
sub
dec
or
and
and
arpl
cmc
xorb
push
outsb
ljmp
push
cmpsb
cwtl
xlat
jmp
lret
xor
fiadds
nop
js
lods
jno
jbe
ds
dec
fiaddl
or
jbe
pop
push
in
call
push
scas
aam
add
add
dec
xor
xor
or
jnp
test
xor
icebp
push
mov
enter
repnz
nop
xor
ret
lret
pop
dec
divb
mov
fdivrs
mov
insl
and
mov
sbb
inc
stos
ret
inc
mul
dec
popa
setb
mov
test
mov
lods
orb
clc
std
cmp
popf
mov
pop
orl
jae
push
xlat
inc
push
or
andl
push
call
stc
inc
adc
or
jg
adc
rorl
push
ljmp
add
fcmovu
dec
mov
fistl
enter
lcall
add
insl
xor
and
aam
jge,pt
imul
adc
out
or
out
loopne
mov
cwtl
lods
jnp
adc
les
dec
inc
mov
shr
outsb
ja
mov
test
xchg
xchg
fidivrs
add
mov
mov
fs
sub
sbb
mov
jle
adc
mov
mov
iret
bound
sub
gs
xchg
jle
xorl
outsl
subl
jbe
xchg
ljmp
hlt
stc
pushl
iret
or
stos
pop
mov
loope
or
cwtl
leave
mov
call
imul
shrb
sti
insl
mov
dec
mov
sahf
and
scas
dec
fsubrl
and
lahf
add
and
jge
pop
cwtl
pop
std
jge
lods
fcomip
or
pushfw
aam
loope
add
push
jo
sbbb
pop
sub
mov
mov
xchg
shlb
out
bound
cmp
arpl
lods
fs
negb
out
lock
dec
lcall
add
sbb
dec
and
rcrl
daa
or
push
cld
xlat
repz
loopne
filds
lcall
orl
cmp
mov
pop
in
or
mulb
in
repnz
sti
cmp
test
pop
dec
mov
jp
lods
push
in
ja
outsl
mov
imul
pop
in
sub
shrl
adc
pop
and
jp
sub
addb
mov
imull
bound
hlt
adc
jl
xor
sub
pop
std
add
xor
jnp
jp
outsl
adc
outsl
dec
int
jnp
xchg
xor
cmp
cli
mov
adc
std
pop
cli
jg
inc
pop
cmc
pusha
arpl
add
mov
mov
aam
std
mov
add
loopne
add
lea
push
imul
imul
or
sbb
aad
sub
xchg
inc
mov
push
fisttpll
mov
gs
mul
ja
and
ds
dec
or
sti
sbbl
lcall
outsb
mov
jl
xchg
shlb
inc
lods
inc
push
mov
push
daa
hlt
or
cmp
xchg
orps
push
push
fldcw
and
ret
push
push
xchg
pushf
sahf
popa
jle
out
mov
dec
hlt
push
sbb
push
loope
push
pop
fstpt
adc
pop
mov
pop
rcrb
mov
lcall
sub
mov
jp
repz
sub
rcrb
cmp
push
shlb
inc
mov
loopne
shl
cltd
outsb
xlat
sub
sahf
fsubrl
xor
aam
add
test
scas
add
adc
std
cmpsb
lret
imul
jns
mov
stos
pop
inc
xchg
sbb
scas
ret
xchg
cmp
ficoml
jbe
movsl
rcll
scas
jne
jno
out
dec
push
arpl
push
js
cmp
leave
push
out
in
push
sub
xchg
jne
cwtl
dec
loop
into
add
and
pusha
inc
push
pop
pop
lds
mov
xchg
dec
mov
faddl
inc
popf
xchg
sbb
pop
inc
andb
push
out
sub
scas
mov
push
gs
sub
stos
add
arpl
sub
jne
sbb
or
cmc
inc
and
fwait
jno
dec
and
or
repnz
pop
cmp
loope
jb
pop
out
mov
out
pop
pop
nop
inc
push
inc
sub
adc
insb
fldcw
and
icebp
sub
push
pop
cmpsl
int3
pop
aam
or
dec
push
inc
dec
sbb
popa
jmp
sub
inc
popf
sub
adc
insb
dec
adc
in
popa
jnp
out
cltd
jno
inc
cmp
cmp
xchg
xor
mov
mov
gs
sub
dec
mov
jb
into
ds
sub
jne
dec
pop
cs
mov
mov
inc
mov
pop
into
cmp
and
push
cli
sahf
xor
das
push
inc
or
lods
in
or
out
jne
jno
pop
push
adc
cmc
push
fucomp
cmp
cmpsb
mov
test
in
int
xlat
mov
xchg
fcmovbe
or
insl
dec
fiadds
cmp
push
pop
or
shlb
push
dec
out
bound
in
jnp
add
mov
xchg
imul
or
daa
jne
outsl
sub
mov
sbb
fwait
mov
xchg
punpckldq
das
pop
mov
aad
and
mov
rolb
mov
push
outsb
les
into
dec
daa
ret
imul
outsb
xchg
xor
sub
out
testb
shrl
sub
push
cmp
push
aaa
fcom
jno
das
test
inc
test
movsb
mov
lods
lret
or
push
dec
mov
loopne
sbb
rcr
adc
ja
in
inc
lahf
popl
mov
mov
repz
xchg
aas
lret
insb
cmp
mov
ficomps
cmp
hlt
daa
mov
pop
and
int
cli
or
jns
out
xor
shll
mov
mov
fcmovne
cld
std
jb
notb
adc
lret
jle
add
movsl
adc
or
dec
pop
jne
xor
dec
int
xor
or
and
mov
divb
das
repnz
cmp
pop
jo
cltd
out
xchg
sbb
jae
pushf
jnp
scas
add
mov
es
sub
lcall
fcmovne
daa
and
stos
push
mov
test
mov
fcoms
lds
ja
gs
dec
adc
in
dec
xor
sbb
dec
adc
movsl
inc
loope
pop
xor
cltd
call
pop
mov
aas
sub
mov
jle
jp
ret
dec
mov
xor
out
xchg
pop
inc
cmp
fs
movsb
lods
mov
push
imul
push
adc
push
pop
push
scas
mov
test
dec
popf
sbb
ror
adc
mov
in
jne
loop
je
xchg
clc
adcl
daa
jmp
xchg
ds
call
sub
push
ror
xchg
push
sahf
sub
leave
jp
subb
test
stc
jmp
addr16
sbb
test
or
aam
adcb
or
mov
add
inc
pushf
or
and
push
jne
sbb
adc
jmp
mull
mov
icebp
sub
int3
rcr
push
loop
sub
lcall
filds
lahf
mov
mov
sub
xor
gs
xor
dec
enter
cmp
rol
add
dec
into
jmp
cmpl
jno
cmpsl
inc
jmp
inc
mov
cmp
inc
jnp
mov
xor
inc
inc
pop
in
add
nop
jmp
fcmovnu
lret
push
jae
push
dec
sub
xchg
mov
ja
cli
dec
or
jge
pop
dec
sti
daa
fsubl
push
push
inc
adc
leave
mov
ds
inc
fildll
loopne
test
imul
outsb
inc
int
xor
pop
or
outsl
scas
shlb
add
cs
mov
sub
sbb
imul
add
cmp
mov
mov
cmovo
add
out
ror
jae
mov
es
arpl
into
or
imul
mov
and
xor
lahf
and
pushf
adc
add
aas
cmp
pop
inc
int3
xchg
loop,pn
fidivs
cmp
cli
add
cmp
add
in
fidivrs
push
aas
leave
bswap
shrb
jmp
test
pop
inc
mov
rcr
cmp
mov
ss
adc
adc
inc
lret
mov
fnstcw
ds
and
xor
or
cltd
sub
out
movsb
add
fildl
mov
xor
jne
jp
jae
adc
out
sub
sbb
sbb
mov
xchg
lret
xchg
gs
leave
mov
dec
and
push
mov
subb
inc
dec
icebp
xor
inc
jns
pushf
inc
rcrl
addr16
int3
mov
insb
jmp
das
jns
xrelease
and
pop
push
jb
test
aam
mov
push
mov
loopne
adc
repnz
movl
jg
pop
xor
lock
decl
fwait
lret
cmpsl
pop
mov
mov
sub
xor
cwtl
xrstor
sbb
popa
js
push
out
imul
popf
sti
inc
es
sar
into
adc
fists
mov
sbb
mov
lods
rol
cmp
sbbl
cmp
inc
fisttpl
or
int3
mov
push
push
fbld
pop
sbb
bound
cmp
mov
es
sti
in
out
cmpsb
outsb
movsb
jne
jnp
push
sub
add
xor
shll
fdivrl
fwait
cmp
fsubp
adc
pop
dec
jae
flds
in
mov
add
stc
cmp
cmp
and
stc
aas
sbb
mov
xchg
jle
pop
cmpsl
cmc
mov
insb
sbb
and
int3
pop
stos
mov
movsl
mov
call
adc
pop
iret
jb,pt
pop
movsl
leave
hlt
ds
push
mov
call
outsl
repnz
aas
sbb
push
ss
add
push
or
ret
insb
in
ret
insb
fisttpll
lea
mov
xor
cli
test
addr16
mov
add
push
xchg
loopne
xor
add
add
mov
adc
dec
or
sub
fdiv
mov
loop
push
adc
pop
dec
add
xchg
cmp
push
cmc
ljmp
dec
mov
mov
xchg
jmp
mov
popa
jb
dec
cmpsl
mov
pop
mov
fld
sti
sub
cwtl
sete
aaa
pop
cld
or
cmp
mov
cmp
or
xchg
sbb
arpl
xchg
or
sti
jmp
stos
jmp
dec
push
pusha
cli
mov
add
push
jp
add
int3
rcll
ja
mov
mov
fstpt
sbb
cltd
bound
jge
inc
add
dec
mov
add
out
sub
push
mov
mov
or
stc
push
and
ss
mov
std
cmpsb
push
out
out
pop
stos
push
mov
sbb
push
stos
loopne
and
push
outsb
adc
notb
arpl
xor
int
movsb
popf
test
cmp
and
int3
sub
aad
push
push
fincstp
push
repz
stc
rcl
int
cld
pushf
imul
or
jno
sub
lcall
test
xchg
adc
stc
loope
sbb
sahf
mov
aas
mov
lods
or
cltd
enter
mov
xchg
xchg
pop
inc
cmp
hlt
push
shll
sbb
ss
outsl
ds
adcb
sbb
sub
scas
jle
ljmp
call
pop
or
xchg
xor
xchg
mov
in
decl
int
mov
xorl
mov
sub
dec
orb
mov
adc
xchg
cmp
cmp
ss
add
pushl
adc
das
es
ja
sbb
into
dec
dec
faddl
sub
jnp
sbb
mov
jp
adc
sub
lret
mov
xchg
test
fmuls
jne
insb
dec
jne
test
sahf
fistl
add
int3
xchg
test
psubsb
inc
sbbl
fdivl
ficoms
das
add
mov
sbb
cmovnp
push
xchg
fdivr
xor
jle
inc
push
mov
and
xor
jne
addb
jecxz
mov
stos
cwtl
stos
test
cltd
jle
divb
push
pop
test
xchg
dec
mov
inc
jecxz
jno
sbb
push
aas
int
xchg
pop
data16
pop
xchg
fmul
cmp
jmp
dec
xlat
dec
jl
fistpl
lret
jns
push
xchg
insl
subb
js
popa
jge
pushf
cmp
push
push
jg
xchg
mov
jns
mov
sub
pop
fs
stos
movsl
push
push
cmp
mull
dec
enter
hlt
pop
jmp
and
lret
mov
mov
and
lret
cmp
pushf
movsb
pop
sbb
add
xchg
js
or
or
adc
sbb
out
mov
jb
out
test
aas
imul
xchg
jo
rcll
cmp
xchg
or
in
jb
dec
jno
sub
inc
mov
nop
fwait
dec
jns
ficoms
js
push
inc
daa
jae
adc
dec
fistps
jmp
sbb
ja
jb
ret
ret
jl
xor
orl
mov
mov
mov
mov
xor
call
inc
push
imul
mov
jnp
lock
int
subb
or
jge
pop
mov
mov
shl
test
lahf
aad
in
mov
addl
sub
mov
popf
sub
ljmp
lds
jmp
fwait
and
push
xor
mov
xor
scas
mov
aam
mov
stos
push
cmp
stos
mov
dec
mov
and
add
insb
add
push
mov
fbstp
rclb
cmp
scas
inc
cmpsl
dec
out
sbb
pop
sbb
call
mov
aam
mov
stos
rorl
xchg
sub
es
inc
cwtl
fsts
fcompl
js
cmp
sbb
push
ds
and
push
fnstcw
adc
icebp
mov
mov
add
jl
bnd
push
scas
pop
mov
nop
sbb
push
out
andl
stos
mov
cmc
add
sub
std
mov
sti
mov
insb
stc
add
inc
jecxz
jecxz
or
xor
pushf
sarb
addr16
pop
push
xchg
lds
pop
hlt
loopne
push
cmp
jae
mov
cmp
in
popa
lock
cmc
dec
outsl
mov
fnstsw
cmp
mov
into
int3
sub
push
js
cmp
imul
rcll
shlb
ljmp
and
xlat
call
outsb
cmp
cld
pop
pop
jle
test
mov
xor
sbb
xchg
mov
jne
pop
insb
pop
fcompl
jb
inc
jle
lcall
stos
sahf
dec
sti
mov
add
xchg
inc
in
pop
push
jno
push
xchg
and
pop
jmp
nop
aaa
ljmp
in
fdivrp
and
fwait
sub
daa
js
lods
inc
shll
cld
scas
imul
leave
mov
sub
xor
dec
int3
xor
xor
repnz
dec
fiaddl
xor
leave
js
or
enter
mov
mov
iret
jl
bound
in
inc
int
cli
mov
jg
mov
jmp
xor
imul
lea
mov
jle
xchg
push
icebp
and
pushf
stc
sbb
jbe
inc
pop
sbb
mov
jne
imul
gs
sarl
pop
jl
jns
ret
pusha
in
dec
cs
cs
mov
cmp
push
jo
out
arpl
lods
pop
xchg
pop
loop
loopne
loopne
in
gs
out
dec
push
cmp
adc
cmp
scas
mov
mov
add
cld
mov
sti
outsl
mov
jne
jnp
jo
pop
dec
into
shl
xlat
cmc
dec
cmp
dec
out
stos
sub
adc
out
cmp
jge
and
push
daa
out
cmpsl
cltd
jo
loope
dec
mov
addl
negb
dec
inc
in
inc
push
add
int
pop
outsl
xchg
cld
cmc
cmp
jecxz
loope
fistl
mov
insl
inc
loop
data16
xchg
div
add
leave
fnstsw
or
mov
add
js
outsb
push
repnz
mov
stos
jl
je
fsubrl
mov
adc
stos
sbb
insl
push
mov
les
jge
cmp
call
add
push
cltd
mov
ror
test
mov
into
fucom
jmp
rcrl
cmp
ja
push
xlat
sbb
insl
icebp
iret
jns
xor
jle
dec
and
cld
aaa
push
sbb
ret
mov
shlb
mov
mov
int3
jmp
jl
xor
mov
and
lods
lds
pushf
adc
cs
call
ja
inc
inc
jo
pop
or
add
mov
loopne
sub
rcrl
jp
jae
stos
adc
mov
push
out
insl
out
call
fwait
repz
jae
cs
int
fwait
pop
pop
dec
jbe
jecxz
testl
shrb
push
and
inc
out
fldl
sub
mov
ljmp
gs
dec
and
mov
lret
scas
ret
pop
aaa
int
mov
add
stos
ljmp
jo
stos
jno
xor
mov
aaa
mov
mov
push
pop
loopne
xchg
aaa
shlb
lea
jg
sub
mov
xchg
xchg
leave
inc
jmp
sub
cli
fstpl
enter
ficompl
mov
inc
add
pushf
jae
inc
movsb
loope
loopne
mov
jnp
aam
jle
sbb
and
fwait
daa
or
pop
xchg
repnz
pop
outsb
lods
add
incl
cmpsb
inc
sbb
sbbl
loop
fstps
mov
and
xchg
mov
ret
shrb
inc
gs
or
sbb
jns
push
sub
mov
popl
pop
ds
add
out
in
in
movsl
jbe
mov
addr16
sub
dec
mov
stc
dec
xor
bound
aaa
sbb
inc
mov
pop
mov
sbb
je
jg
jmp
mov
inc
jne
cmp
push
test
frstor
dec
dec
adc
cmp
adc
cli
cld
cmp
mov
out
mov
aaa
push
adc
not
imul
imul
and
push
test
out
addb
fdivr
push
xor
pop
lds
inc
xchg
xor
shll
sub
cmpsb
pop
test
mov
jmp
mov
enter
sub
jmp
ja
and
inc
push
or
pop
aam
or
cmp
xor
hlt
ja
outsb
rcrl
add
aam
mul
mov
inc
aad
fwait
aam
push
adc
test
sub
dec
or
and
push
mov
enter
pop
movsb
movb
cmp
jmp
mov
lds
jp
push
jge
mov
daa
adc
iret
cmp
rcl
mov
popf
mov
lahf
xchg
push
mov
in
xor
mov
clc
fsubs
jle
stos
loopne
push
inc
lods
es
addr16
mov
imul
pop
int
dec
out
movsl
or
or
mov
xchg
sbb
pop
push
ficoml
push
aaa
push
jbe
xchg
mov
adc
jecxz
andb
add
cmp
inc
lret
pop
dec
scas
jae
aad
popa
mov
sub
mov
sti
xchg
jno
lds
clc
push
scas
repnz
inc
or
ds
mov
test
cmpsl
gs
shlb
and
push
imul
add
push
lds
jne
pop
adc
in
mov
mov
mov
inc
out
xor
daa
popf
fiaddl
pop
dec
mov
outsl
mov
fnstcw
popf
outsl
pusha
lahf
aad
xchg
mov
xchg
pop
push
shrl
scas
dec
xchg
je
mov
scas
or
push
and
push
jbe
movsw
shlb
mov
data16
push
shl
mov
fsts
adc
lods
je
jnp
adc
mov
xchg
ret
jmp
mov
pushf
cmpsb
xor
lret
rcll
sub
pop
loope
test
scas
out
xchg
les
push
fcomp
stc
cmp
repz
ret
mov
push
in
push
push
out
aam
mov
xchg
push
clc
addr16
outsb
xor
push
sti
lcall
arpl
stos
jl
jmp
stos
adc
mov
sub
cmp
fstps
mov
pop
arpl
pop
push
mov
adc
add
jb
mov
repnz
das
push
mov
je
sub
scas
mov
andb
pop
outsb
int
aam
push
xchg
fs
das
push
dec
and
vmwrite
aaa
out
mov
pop
andl
inc
insb
adc
sub
fwait
mov
jmp
sbb
jbe
repz
push
das
loop
decb
jo
arpl
scas
movsb
jb
stos
pop
dec
mov
es
aaa
adc
cmc
xchg
out
fisubrs
cmp
mov
dec
mov
xchg
mov
outsl
fiadds
pusha
add
or
or
popa
pop
mov
adc
xchg
xchg
ret
jg
int3
cld
add
mov
mov
xor
lret
xor
xor
and
push
cld
sub
mov
xlat
ret
pop
shrl
faddp
aaa
lds
and
std
lods
xchg
ss
dec
ret
cmp
push
mov
lahf
aam
cld
push
jnp
addr16
jb
loope
xor
mov
mov
jae
mov
and
mov
cmpb
mov
or
push
les
sub
scas
jne
jo
or
jo
pop
lea
sar
lods
lahf
add
or
setl
cmpl
jbe
pop
and
rcr
adc
and
mov
and
lds
jle
mov
ret
add
leave
adc
cmc
in
insl
sahf
pop
sahf
flds
into
or
mov
dec
add
mov
vmread
in
push
dec
cmp
lock
decl
dec
dec
jnp
push
fwait
mov
in
mov
sub
xchg
sarl
loopne
pop
cltd
bound
jo
xor
inc
lret
dec
cmp
test
popa
movsb
lds
shll
jne
cmp
movsl
mov
and
inc
fstpl
jp
insb
pop
fnstcw
cmp
fs
mov
int
movsb
push
lahf
dec
clc
mov
faddl
test
jns
jp
es
lods
dec
fs
or
inc
and
mov
movsb
mov
lds
popf
ja
icebp
pop
iret
iret
sbb
add
mov
insl
xor
aad
int3
insb
mov
jae
cmp
mov
inc
std
xchg
repnz
out
mov
add
mov
movsb
mov
pop
mov
sbb
jge
cmp
mov
dec
dec
rolb
and
add
add
and
sub
test
mov
add
pop
jge
sahf
mov
mov
fcmovnbe
jo
fcomps
scas
faddl
sbb
aam
pop
push
jecxz
jne
loopne
and
dec
iret
outsb
mov
aam
cmp
into
pop
sub
mov
fwait
cmp
mov
add
stc
xchg
clc
jns
frstor
push
lods
daa
sbb
mov
cmpsl
in
mov
outsb
mov
pop
mov
daa
dec
out
ret
push
test
daa
pushf
xchg
push
inc
sbb
adc
lret
sub
xchg
mov
pop
cmpsl
dec
mov
jb
mov
adc
xor
lock
es
dec
out
pushf
scas
adc
xchg
sub
sbb
icebp
push
xchg
push
xchg
and
ret
cmp
sbb
and
lcall
nop
mov
shlb
sub
cli
mov
xchg
or
adc
das
dec
and
mov
xchg
adc
push
ja
bound
or
push
jnp
ret
mov
mov
mov
pop
dec
inc
sbb
movsb
mov
mov
sub
mov
or
mov
imul
lahf
push
jp
mov
aad
push
fidivrl
fcoms
mov
mov
out
pop
les
pop
cltd
scas
jecxz
shl
pop
pop
dec
out
sbb
subl
fidivrl
hlt
ja
shr
lahf
fidivrl
push
sarb
and
iret
xchg
jo
ret
push
clc
and
push
pop
sbb
xchg
adc
out
pop
adc
nop
test
aam
cli
xchg
in
rcrl
lods
dec
pop
out
jne
test
mov
inc
shl
andl
add
fstpl
push
daa
xchg
sahf
aas
push
movsl
xor
mul
mov
cltd
dec
daa
mov
cmp
sbb
jle
mov
mov
shll
pop
in
jp
mov
xlat
push
addr16
mov
sub
std
inc
push
aam
inc
pop
lods
pop
sbb
addr16
push
stos
and
into
bound
jl
add
push
pusha
cmp
aaa
icebp
bound
hlt
repnz
sbb
jnp
adc
fadd
or
push
sarb
or
pop
mov
inc
sahf
jle
inc
in
lds
sub
adc
ljmp
xchg
pop
mov
pusha
mov
jl
jecxz
and
push
cwtl
xor
out
xor
mov
jbe
mov
push
imul
notl
std
lahf
cmc
addr16
jmp
cmpsb
push
imull
clc
sub
or
loope
mull
lea
pop
jne
adc
ljmp
lcall
bound
xchg
cmp
inc
lods
sbb
push
sbb
arpl
fwait
mov
aad
lods
test
mov
std
out
iret
int
cmpsl
ss
mov
in
in
pop
add
popf
pop
sub
push
into
and
xor
rclb
insl
and
and
adc
push
lock
sub
mov
adc
fimull
scas
movsl
mov
ror
add
int
loop
or
push
std
sub
push
dec
idivl
imulb
or
pushf
push
xchg
fs
mov
pop
lea
fcomps
imul
loope
xor
inc
xchg
cwtl
test
lcall
fsubr
mov
outsb
push
adc
icebp
loopne
pusha
adc
pop
bound
mov
and
add
cmp
lahf
nop
jp
pop
xorb
les
gs
cmpsb
ret
adcb
rcl
push
push
faddl
leave
dec
sbb
test
ljmp
pushf
or
mov
mov
sbb
sub
lods
je
pop
or
leave
xchg
and
pop
fcmovu
loope
lret
and
pop
jg
push
leave
dec
xchg
cwtl
mov
ret
and
add
inc
popa
sarl
sahf
lods
pop
fbld
hlt
jle
or
repnz
loop
or
pop
imul
xor
insl
push
loopne
or
jne
mov
inc
ss
push
pop
dec
adc
sub
aas
fisttpl
int
and
loopne
mov
loopne
mov
iret
xor
in
add
jle
fs
std
imul
cmp
dec
or
mov
shrb
movsb
dec
cmp
sbb
in
cltd
jne
cmp
mov
fdivrs
out
push
add
mov
sbb
test
popf
and
jl
pop
je
leave
sbb
out
aaa
cmpsb
inc
orl
jecxz
pop
cld
fs
icebp
stc
insl
push
jae
in
cli
js
jp
jnp
rol
movb
lock
xor
cmp
imul
push
scas
and
sbb
push
jg
clc
ret
jo
mov
test
sub
mov
hlt
xchg
out
push
sub
aas
pop
cmpsb
xor
xchg
mov
lahf
dec
shll
jne
sbb
xchg
inc
in
mov
push
inc
pop
inc
lret
decl
jle
fwait
mov
or
xchg
xchg
or
mov
lcall
add
mov
imul
jnp
fstps
jne
push
xor
or
cmp
stc
imull
jbe
mov
addl
scas
xchg
inc
repz
icebp
lahf
pop
mov
jbe
adc
push
xlat
and
repz
dec
sub
cmpsl
jnp
mov
xchg
shlb
and
negl
mov
hlt
mov
cmp
imul
mov
or
mull
mov
mull
leave
sub
jmp
ret
pusha
dec
scas
xor
jg
xlat
outsl
int3
jae
bound
mov
lret
in
movsb
mov
mov
outsb
inc
insb
mov
xchg
fnstenv
sub
inc
sbb
or
js
jns
push
push
sti
cli
or
in
xchg
movsl
pop
sub
mov
imul
or
cld
pop
cmc
les
mov
in
rcl
mov
cmp
test
jl
fsubl
mov
sbbl
push
push
loop
sbb
xchg
fdivr
xor
sbb
push
xor
in
cld
dec
cli
cld
adc
add
adc
push
jecxz
push
fwait
pop
push
repz
aam
mov
shll
adc
inc
inc
jne
cmp
mov
xchg
pushf
test
mov
loope
jb
jp
nop
ljmp
or
dec
push
inc
mov
pop
cmp
or
test
and
inc
cmp
lret
sbb
push
das
movsb
push
fwait
stc
data16
inc
pop
test
sbb
shrb
fldcw
cmpsl
xchg
sar
sbb
xchg
imul
ret
lahf
mov
lcall
mov
sub
push
add
or
inc
movsb
fsubrl
xchg
mulb
test
jmp
mov
outsl
push
ljmp
push
inc
and
jnp
dec
rcrl
adc
fdivr
jbe
sub
inc
and
cld
xchg
mov
imull
es
addr16
aad
xor
sti
xchg
cld
cld
loop
add
enter
hlt
mov
in
mov
mov
jbe
call
xchg
int3
rcrl
pusha
std
rcll
ja
ret
push
sub
aad
or
mov
nop
mov
push
xchg
mov
mov
and
ja
repnz
dec
push
idivb
jo
std
adc
imul
jmp
test
cmp
fwait
ljmp
sub
ret
xchg
test
mov
cltd
add
inc
inc
mov
sbb
cmp
pushl
ja
int3
imul
mov
std
out
pop
add
addl
in
in
push
cld
insb
or
jb
mov
les
int3
add
arpl
pop
or
bound
and
imul
fs
lea
pop
cmpsl
sub
icebp
xor
mov
rolb
int
in
dec
es
decb
jl
adc
pop
and
and
xor
or
pop
fadds
rorl
fcomip
dec
xor
dec
out
sub
and
inc
xchg
inc
sbb
addr16
mov
fimuls
mov
cmp
mov
jns
xor
jl
rcrl
push
or
and
lcall
or
jns
sub
mov
add
rorb
inc
jbe
lea
mov
mov
pop
cmpsb
in
sarb
aaa
add
push
cmp
mov
pop
test
loope
jb
cmp
or
mov
das
dec
lahf
ret
sub
aaa
sbb
idivb
ss
jb
mov
pop
mov
xchg
or
jecxz
das
cmp
mov
popa
xlat
jnp
sti
jo
mov
clc
mov
mov
fsubrl
in
inc
test
cmp
jge,pt
in
mov
imul
outsb
mov
in
push
inc
pop
sbb
pop
xchg
fcmovb
ret
sbb
cmp
arpl
adc
push
je
jbe
iret
adc
pop
ljmp
inc
xlat
push
aaa
popf
out
pop
mov
mov
cwtl
cmp
lds
mov
xlat
dec
xchg
and
pop
shrl
cmp
aaa
imul
pop
inc
cmpsb
std
jg
cmp
jb
hlt
shrl
test
push
test
enter
or
jmp
shlb
and
and
add
inc
sub
push
scas
xlat
cmpl
arpl
dec
lret
movsl
pop
jecxz
pop
in
clc
mov
pop
mov
lock
loop
lods
jle
dec
sub
test
repz
bound
in
pushf
lds
dec
pop
push
dec
ljmp
incb
ss
arpl
jg
sahf
mov
add
cmc
xor
xor
sbb
fsts
jbe
and
jbe
mov
orb
outsl
clc
outsl
rcrl
push
popf
test
jmp
out
xchg
das
mov
mov
lods
jl
rcrb
jmp
inc
mov
leave
popa
aaa
cmc
xor
adcl
mov
fwait
stos
and
sub
pop
lock
mov
aad
sbbl
pop
aad
xchg
cli
nop
fcmovnb
mov
jle
stos
roll
adc
js
xchg
dec
mov
aaa
dec
inc
test
in
add
sub
aas
add
js
cmp
xchg
jns
pop
iret
stos
jmp
hlt
test
in
loopne
push
cmp
push
adc
xchg
int
fucomp
sbb
jne
xor
xchg
mov
sbb
xchg
rorl
cmp
stc
mov
cltd
push
fcomip
and
insl
outsb
hlt
inc
jmp
enter
orb
and
popf
mov
movsl
idiv
in
stc
or
imul
adc
push
test
rorl
inc
add
fstps
mov
je
fcmovnu
loop
ja
dec
test
push
scas
push
test
mov
xchg
out
fld
in
cmc
stos
imul
jns
rcr
adc
btr
push
dec
shll
clc
xor
addr16
pushf
in
into
pop
mov
mov
or
jb
add
jmp
or
fstpt
xchg
jns
xchg
lea
popf
inc
xchg
sbb
cmpsb
pushf
cmp
mov
jmp
ds
mov
out
aas
adc
daa
fwait
cli
pushf
enter
clc
mov
mov
es
push
mov
or
mov
rorl
jnp
mov
mov
cmpsl
and
dec
mov
mov
sti
xchg
jae
push
adc
mov
int
push
aad
bound
ja
lods
testb
xor
movsb
sarl
lea
pop
add
push
in
add
les
mov
rol
xorb
nop
daa
ds
fcoml
aad
mov
icebp
test
in
pushf
in
mov
filds
push
addr16
fcompl
push
inc
adc
mov
add
adc
or
gs
cmpsb
mov
aad
or
pop
in
push
pop
mul
insl
mov
cmpsb
out
arpl
adc
push
orb
repz
mov
stc
cmpsb
scas
cmp
xchg
cmp
pusha
call
inc
push
inc
iret
out
inc
dec
arpl
xlat
push
xchg
in
pop
cmpsb
push
push
sti
inc
adc
std
ljmp
clc
and
dec
pop
xchg
xlat
mov
push
aaa
mov
xor
lret
pusha
mov
cli
test
pop
jo
loop
lea
imul
pop
std
stos
std
clc
sbb
jne
aas
ret
pop
fsubl
repnz
mov
sbb
push
jl
dec
jne
in
fbstp
lret
ret
ficoms
fsubrl
ja
push
scas
lods
add
and
inc
pushf
mov
jle
push
int3
and
jmp
push
pop
lret
ja
sub
adc
shr
mov
pop
in
jg
dec
setnp
inc
adc
cwtl
rcrl
movsl
gs
jle
sub
push
dec
or
lods
sar
subl
jmp
out
shr
sub
jno
jecxz
xchg
leave
pusha
push
repnz
push
rolb
push
push
sbb
and
adc
ret
loop
inc
sub
pop
rorb
clc
inc
pop
xchg
ja
data16
fwait
dec
mov
or
arpl
mov
out
aam
xor
lods
lods
inc
cli
xor
mov
push
fidivl
push
adc
test
stc
jns
push
fcmovbe
les
push
fadds
pop
cmp
sub
lret
aas
stos
sbb
adc
sbbl
mov
leave
sub
mov
stc
mov
sahf
jp
mov
cmpl
push
sub
out
out
pop
or
cmovns
out
jno
nop
cmpsl
aad
pop
ljmp
push
dec
fmuls
or
add
scas
paddsb
loope
xor
mov
popa
jns
xor
outsl
push
and
icebp
dec
jns
in
inc
mov
xor
or
pop
or
jmp
arpl
cmc
aad
sbb
sub
rcrb
push
int
mov
pop
lea
mov
repnz
xchg
fnstcw
adc
cmc
fisubl
jmp
fcoml
repnz
pop
sub
in
pop
pop
push
xchg
mov
aam
mov
push
inc
in
and
and
mov
xor
inc
or
lret
loope
sti
cli
pusha
sti
ss
pop
stc
fcompl
fiaddl
and
xchg
les
mov
pop
jecxz
call
jmp
mov
cwtl
pusha
shrb
xchg
cmp
ss
data16
mov
or
fs
mov
in
fucomi
xor
jmp
mov
xlat
xchg
push
cmpsb
add
test
pop
inc
scas
inc
nop
push
inc
or
sub
mov
xchg
sar
aad
enter
push
push
cmpl
add
adc
add
sbb
enter
iret
mov
mov
sti
xor
jl
and
inc
cmp
fisubrl
pop
pop
add
std
xor
idivl
and
out
mov
cmpsb
fwait
mov
jg
push
inc
mov
jnp
imul
sub
shl
cmp
sub
testl
pop
movsl
mov
jne
rclb
xchg
and
int
gs
addr16
sub
pop
pop
aaa
mov
or
push
test
jo
push
shl
push
xchg
adcb
das
inc
enter
mov
out
mov
in
test
push
arpl
sub
cmp
mov
prefetch
jns
incl
ds
rorl
rol
pop
mov
or
arpl
orl
or
das
aas
bndldx
jmp
jns
jne
cmp
cmpsl
arpl
xor
adc
aam
xor
adc
jns
xchg
fiadds
xor
cltd
jmp
jne
jl
or
mov
loope
sub
lods
aas
sub
cmpb
adc
or
enter
pushf
shll
inc
loopne
fnsave
push
shrb
sbb
sbb
clc
mov
xchg
cmp
or
lret
or
adc
movsl
dec
out
mov
rorl
jno
lahf
cmpsl
leave
das
sti
sub
das
xor
repz
ret
dec
mov
addb
push
mov
fs
xchg
insb
lock
icebp
imul
in
shl
mov
adc
and
cmc
iret
adc
xchg
orb
fistpl
pop
sar
stc
xor
imul
fs
inc
xchg
or
mov
mov
jno
in
fs
xor
push
mov
fisubs
iret
cltd
or
in
jecxz
sti
in
insl
clc
inc
mov
in
out
jno
xor
aad
push
inc
lret
pop
out
cmp
cli
jbe
mov
adc
xor
daa
adc
std
shl
lahf
mov
enter
subb
adc
inc
jb
arpl
jnp
or
cmp
fldenv
push
test
cmp
dec
xchg
pop
stc
cmp
cmp
inc
aad
xor
mov
repz
dec
outsl
cs
mov
or
push
and
cmp
mov
fisttps
std
stos
lcall
arpl
inc
cs
repz
fdiv
push
incl
dec
aad
ret
push
ds
lcall
push
iret
clc
or
push
dec
in
cli
mov
ljmp
sbb
into
inc
mov
mov
fsubrs
or
pop
xchg
ljmp
push
pop
ret
sub
cs
loop
std
mov
pusha
insl
mov
daa
ds
xchg
sahf
fdivs
sarb
clc
lret
xor
pop
jp
mov
inc
test
outsl
imull
push
cli
mov
dec
aad
cmp
and
ds
out
adc
fnstsw
outsl
mov
jmp
cltd
push
int
out
or
ret
adc
mov
sub
fidivl
mov
mov
sbbl
push
mov
xchg
xor
lahf
fsubl
lds
movsb
mov
mov
inc
sub
notl
lds
and
jbe
inc
imul
inc
shr
cmp
or
lret
jns
sahf
jno
dec
sbb
aad
mov
stc
mov
add
movl
stos
repz
mov
jg
ds
daa
pop
xchg
pop
shll
insb
int
movsl
ljmp
jle
outsb
fs
pushf
addb
insl
add
and
repz
and
mov
jb
inc
call
mov
mov
aad
ljmp
mov
adc
fdivrs
sub
pop
loope
mov
push
mov
or
add
inc
stos
push
dec
push
or
insl
inc
scas
jns
mov
repz
mov
call
xchg
ja
jle
mov
sti
mov
jo
dec
jne
cli
pop
jmp
mov
adc
adc
pusha
push
int
jl
ljmp
sub
ret
and
aas
pop
idiv
jmp
mov
mov
cmp
lcall
xor
dec
aas
cmc
clc
adc
addr16
enter
xor
add
cmpsb
notb
sbb
stc
dec
push
sbb
ficompl
cmp
inc
mov
cltd
cmp
cmp
inc
es
mov
loop
out
xchg
lds
out
mov
outsl
loope
test
mov
sub
mov
pop
jbe
sarl
fsts
pop
push
popf
xor
adc
pop
mov
dec
movsl
ds
pop
loopne
je
sbb
xchg
xchg
lret
xor
push
cmp
dec
mov
mov
test
std
sub
ds
ja
push
push
stos
add
in
cwtl
mov
aam
cmpsl
mov
and
out
popf
cs
push
cmp
fs
out
outsb
es
pop
cmp
movl
and
xlat
cmpsb
daa
dec
dec
cmp
adc
pushf
out
cli
add
push
repnz
mov
repz
jecxz
js
daa
sbb
insb
shr
lods
mov
add
xchg
dec
por
jecxz
ss
cmp
daa
mov
setg
cmp
xchg
inc
add
in
sub
sbb
add
dec
jno
into
sbb
pushf
scas
push
shll
sbb
sbbb
pusha
push
xor
push
add
mov
mov
test
clc
getsec
int
loope
negb
pop
inc
and
cmp
or
sbb
add
mov
mov
cmc
sub
andb
inc
pop
jl
adc
daa
pop
pop
fstpl
jmp
cmp
mov
ret
lds
adc
sub
loope
pusha
mov
nopl
jp
fs
mov
jg,pt
in
hlt
cli
mov
mov
mov
arpl
push
loopne
fcompp
outsb
popa
xchg
ret
lret
xchg
int
leave
add
lock
xor
psrlw
or
pop
xor
pop
jnp
mov
jle
outsl
icebp
jno
mov
rcrl
cmp
push
xchg
test
out
cmp
je
sub
repz
stc
inc
and
and
push
xchg
call
cltd
aad
les
inc
dec
inc
cmpsl
xchg
sbb
dec
imul
outsl
adc
lock
ror
es
mov
xor
lret
outsb
cwtl
cmp
pop
std
push
imul
and
pop
mov
adc
pop
dec
rclb
inc
mov
ljmp
fisubrs
aaa
dec
mov
dec
lahf
or
mov
stos
jmp
movsl
outsl
rcll
leave
insb
aad
jecxz
in
mov
dec
sarl
add
mov
jne
ja
stc
in
lret
or
cs
mov
test
stos
into
push
hlt
or
sbb
lea
dec
repz
popa
mov
mov
pusha
fidivrl
pop
es
jl
dec
dec
add
mov
fcmovnbe
ficompl
out
sbb
sahf
adc
sbb
xor
lret
push
cs
cs
sbb
xchg
push
push
cmp
push
cmpsl
cmc
daa
xor
data16
scas
std
sbb
insb
sbb
les
xor
repnz
xchg
outsb
bound
je
aad
and
enter
jl
fimuls
ret
sbb
mov
in
sbb
fistps
in
lret
outsb
ret
ljmp
les
repnz
js
rcl
rcrl
pop
sbb
mov
push
and
outsl
mov
aad
loopne
mov
pop
es
add
shll
dec
xchg
jne
imul
fidivl
xchg
fs
fcoms
mov
adc
imul
aam
mov
fmuls
and
jg
or
push
xor
push
jae
adc
imul
dec
ja
cld
bound
jp
out
add
test
cmp
dec
xor
shrb
aas
leave
inc
clc
popf
mov
fidivrs
scas
push
adc
push
cmc
int
add
xchg
push
clc
mov
lea
dec
std
inc
xchg
les
xchg
aaa
adc
andb
flds
mov
insl
cs
xchg
or
push
cmp
jae
ficoml
cmpb
lea
outsl
repnz
rorl
sub
scas
popa
cmpsl
lock
icebp
jle
fmulp
mul
movsb
xchg
jge
int3
incl
inc
pop
sbb
push
push
mov
fnclex
fwait
ret
mov
int3
sahf
scas
arpl
jmp
mov
xchg
mov
int3
inc
aad
mov
push
xor
icebp
out
add
loope
xlat
and
sub
ficoms
in
mov
sti
mov
mov
movsl
test
movsl
dec
notb
xlat
push
imul
add
push
stos
push
fistpl
in
push
xchg
jae
ret
ss
int3
dec
sub
jle
aam
mov
test
std
hlt
push
lret
jecxz
or
lret
mov
inc
mov
cmc
out
sub
mov
jg,pn
mov
jno
cmp
mov
cmc
loope
popa
in
dec
ret
jg
bts
pop
ss
xchg
lods
xchg
stc
add
push
add
enter
inc
xor
sahf
mov
gs
pop
test
mov
jecxz
adc
mov
pop
out
jns
ds
paddw
sbb
or
aad
cmp
and
hlt
push
rcrl
aaa
cmp
mov
dec
push
and
out
pop
sbb
sbb
clc
push
sbb
xor
lods
jns
in
rolb
jae
adcl
cmp
xchg
jns
mov
push
pushf
xchg
dec
pop
rorl
sbb
test
sub
fistps
add
mov
inc
adc
and
scas
cmpsl
lahf
call
ret
inc
mov
popa
jmp
inc
iret
insl
fdivl
push
dec
xor
adc
jle
mov
adc
pop
insb
and
pop
ljmp
jle
pop
int3
or
xchg
in
test
pop
push
xor
arpl
xchg
gs
mov
jg
lcall
lea
push
pop
loopne
mov
push
aas
loopne
fbld
xchg
mov
add
pushf
cmp
aad
rolb
pusha
jo
lret
or
adc
int3
mov
sbb
hlt
insb
packssdw
xor
popa
insb
adc
add
outsl
inc
pop
xchg
ret
adc
dec
call
call
out
mov
add
jb
loop
out
jae
pop
imul
push
jmp
mov
in
mov
xchg
cmpsb
cmp
mov
popa
and
dec
adc
lea
dec
ss
add
sub
or
sub
pop
cmpsb
loopne
cmp
popf
sub
arpl
inc
cltd
and
mov
mov
mov
fisubrs
icebp
and
fdivrl
mov
fiaddl
mov
jecxz
mov
rorl
dec
arpl
xor
clc
inc
jns
sbb
stos
iret
mov
mov
bound
inc
out
les
out
daa
mov
push
adc
fdivs
mov
or
cmp
outsb
xor
dec
es
mov
dec
repnz
mov
inc
loop
stc
push
pop
push
es
mov
mov
mov
jnp
fisttps
in
sub
dec
jl
and
sub
fidivl
in
mov
fnstsw
add
pop
mov
loopne
movl
mov
fmuls
adc
jecxz
inc
sbb
lea
pusha
mov
and
movsl
and
xchg
mov
inc
cmp
loop
or
mov
mov
xor
stos
pop
jne
je
sub
adc
aam
jae
jmp
loop
mov
setb
lret
mov
push
dec
and
ds
dec
mov
cmp
bound
std
in
cmp
push
mov
inc
insb
lcall
aas
xor
test
add
push
lahf
sub
gs
ja
xor
in
stos
cmp
lcall
lahf
test
aaa
jecxz
hlt
sbb
ficompl
rorl
jecxz
push
jl
or
aam
cmp
movsl
xor
sbb
xchg
push
movhps
int3
out
sub
in
test
and
push
out
arpl
cmp
hlt
stos
mov
gs
stos
or
jle
inc
xlat
cwtl
sbbl
pop
idivb
pop
ret
sub
popf
push
push
insl
addl
lea
loope
xchg
inc
lods
dec
and
cmp
sub
ret
fisttpl
sub
out
dec
mov
scas
cmc
inc
cmc
push
fs
jge
mov
testl
mov
sub
in
dec
push
mov
dec
mov
push
mov
xor
push
cli
xchg
and
and
dec
divl
jo
jl
lock
dec
das
int
stos
lret
inc
imul
cmpsl
shl
push
rcrb
repz
fisubl
mov
int3
cmp
xor
int
stos
std
out
inc
add
sub
xor
fisttpl
ret
push
jmp
mov
stc
cltd
fmull
mov
cmpb
ret
imul
cwtl
jge
pop
into
push
push
outsb
sahf
sbb
add
xor
sbb
sbb
sbb
fnclex
push
mov
xchg
cli
jae
adc
pushf
je
inc
add
mov
and
cmp
jge
mov
push
cmpl
jb
filds
push
ljmp
adc
dec
fs
popa
rcll
cmp
or
add
push
dec
lcall
dec
mov
jecxz
enter
test
sbb
aam
push
das
add
lods
add
mov
lret
aas
mov
shrl
fs
add
loop
jmp
mov
aas
mov
push
sub
cmpsb
mov
dec
stc
add
loopne
ret
jb
jb
divl
inc
sub
je
sahf
inc
nop
sub
push
add
fdivs
cs
sub
arpl
xchg
inc
lods
imull
gs
add
fcmovbe
jg
cltd
aas
xor
pop
mov
jmp
mov
movsb
inc
mov
or
cmc
push
loopne
test
pop
sub
mov
pop
mov
out
fsub
rcrl
and
fidivrl
jnp
in
out
mov
icebp
int
stos
insl
cmp
repnz
or
push
nop
inc
ljmp
jg
mov
loope
mov
movsl
sbb
inc
out
jecxz
sub
outsb
dec
sub
je
sub
movsl
ds
int3
xor
mov
fsubl
sti
mov
mov
xchg
std
xor
out
dec
sbb
or
lahf
cmpsb
cmc
jg
sub
cmc
mov
movsl
xchg
test
inc
push
out
mov
mov
xor
mov
or
pop
scas
push
sbb
fsin
stos
mov
or
imul
mov
xlat
lahf
push
adcl
cmp
jbe
sub
push
mov
pop
jbe
pop
movsl
enter
and
jmp
cmp
add
fistl
mov
adc
dec
inc
jmp
cmpsb
fdivrl
popf
fidivl
inc
cltd
pop
stos
rolb
mov
and
mov
repnz
add
push
cltd
test
lock
loope
pop
or
pop
aaa
sub
fdivrp
test
mov
cmp
dec
dec
mov
sbb
loop
inc
or
mov
sub
scas
jns
add
scas
sub
pop
xor
mov
stos
lods
mov
jg
cld
out
cmpb
in
fs
negb
xor
mov
into
popa
mov
jmp
inc
fstpt
cltd
push
mov
aad
inc
lods
pop
addr16
lcall
pop
aas
shrb
repnz
pop
pushf
mov
sbb
test
xchg
mov
adc
repnz
pop
xchg
xlat
mov
shlb
clc
aas
popf
add
adc
repz
sti
sbb
xor
ja
push
mov
dec
stos
xchg
test
fcmovnb
cmp
or
lcall
loopne
push
imul
lret
or
mov
fs
idiv
xor
xchg
dec
add
fidivrl
repnz
mov
cs
bound
push
clc
stos
dec
jl
fwait
sbb
pop
or
xlat
ja
into
inc
inc
mov
add
pushw
sub
sbb
xor
imul
icebp
adc
dec
fisttpll
push
or
into
shr
jg
gs
js
and
nop
dec
bound
and
pop
jl
mov
or
or
or
aad
mov
jecxz
fsubrs
xchg
cli
push
push
jb
xchg
outsl
test
fadds
pop
sub
and
cmp
push
jne
push
pop
xor
jp
pop
xor
xchg
xor
cmp
lods
leave
dec
daa
pop
shll
js
fucom
push
dec
in
sbb
sbb
std
ds
in
popf
mov
xlat
adc
clc
push
fs
push
test
jle
fdiv
popa
ljmp
mov
popa
loope
sub
and
out
pop
xchg
cld
jmp
cmp
inc
lea
shr
aam
jle
sbb
lret
or
jb
fisubrl
pop
aaa
xchg
imulb
mov
test
jae
sbb
push
repz
stos
shlb
sbb
rol
shl
dec
stos
cmp
fistpl
mov
call
push
mov
aad
lock
stos
lahf
bound
cmp
loope
mov
popf
shrb
ljmp
ret
ja
mov
pop
pop
sub
out
or
dec
pop
mov
mov
lcall
xchg
push
mov
jnp
or
ret
ss
test
pop
ret
aam
mov
imul
hlt
xchg
cmpsb
movsb
into
ret
addr16
or
out
push
xchg
jecxz
jbe
js
adc
lds
and
ret
sub
int3
sbb
and
sub
or
mov
out
dec
mov
mov
mov
and
test
out
mov
cmp
pop
dec
adc
add
es
jae
push
lret
pop
jns
fdivr
fs
cmc
lret
add
cltd
inc
inc
aaa
rclb
les
inc
adc
jo
fstpl
jge
and
and
stos
mov
test
jbe
inc
mov
and
xchg
scas
push
pop
in
xchg
push
push
xor
rcl
mov
rorl
orl
pop
sbb
push
jb
push
inc
push
xor
mov
cs
gs
xor
adc
push
inc
cmp
pop
pop
xor
adc
negb
int
insl
lahf
and
addb
jo
out
rcrl
lcall
xchg
mov
push
mov
lock
daa
roll
sbb
dec
xor
inc
ss
jne
cmpsb
enter
sub
push
mov
xchg
adc
mov
pop
mov
dec
fistps
mov
pusha
out
ret
sub
orl
inc
rolb
mov
jb
push
adc
adc
call
repnz
subl
arpl
fcompl
jb
adc
or
lret
loopne
rcl
js
and
pop
aaa
jle
jo
mov
test
dec
pop
repz
loopne
repz
push
daa
outsl
inc
push
mov
cmp
jb
add
jmp
loopne
mov
mov
push
or
rcl
push
xchg
pop
pusha
nop
inc
pop
jnp
mov
cmpl
push
and
add
pop
outsb
xor
lcall
dec
fistl
adc
pop
or
adc
and
jb
fistps
sbb
inc
aad
lods
or
mov
lea
mov
push
pop
cmp
das
insl
adc
enter
cmp
adc
mov
data16
mov
lcall
int
cltd
mov
cmc
pop
sbb
mov
loope
roll
and
sti
shlb
mov
data16
and
faddl
mov
cmc
adc
repz
daa
pop
dec
push
push
out
nop
test
and
sbb
dec
and
lock
sub
dec
les
std
movsl
daa
lods
dec
xorb
jno
bound
arpl
inc
push
dec
andb
mov
mov
hlt
mov
mov
rorl
inc
cld
xchg
adc
shll
mov
xlat
inc
push
add
pop
je
in
andb
ljmp
cmp
and
cltd
pushf
test
lods
and
outsb
stc
test
into
fnstcw
fiadds
push
pop
dec
sbb
sbb
sbb
jl
xchg
lret
jl
push
popf
fwait
jnp
pop
jg
movhps
int3
out
fnstcw
adcb
cmpsb
add
push
adc
int
mov
int
mov
xor
scas
sbb
add
push
inc
inc
mov
setg
sbb
pop
push
jno
icebp
lock
jl
jbe
jle
pop
pop
add
pop
jns
sbb
xor
push
inc
in
leave
cmp
cltd
daa
push
push
jp
dec
and
outsb
cmpl
lock
repz
xchg
scas
sub
test
jge
mov
lods
mov
cmpsl
or
dec
scas
dec
hlt
push
testl
mov
pop
shll
add
sbb
or
in
dec
stos
pushf
xchg
dec
xor
mov
push
imul
sbb
and
cmp
ret
sub
movb
lret
or
ss
loopne
addr16
xchg
idivl
mov
repnz
rcrb
adc
jecxz
sub
outsl
fiaddl
sub
data16
xor
pop
cmp
outsl
add
outsb
ror
inc
fdivp
push
push
dec
call
jmp
dec
and
icebp
rorl
sub
std
add
mov
sbb
call
fisubs
icebp
mov
inc
cmpsb
push
sub
cmc
int
jmp
out
in
pushf
mov
shrl
imul
or
mov
jmp
mov
add
lea
jo
mov
mov
pop
push
jne
shlb
scas
and
cmp
cmpsb
add
sbb
scas
cltd
movsl
or
sub
hlt
loope
xchg
test
subl
sbb
cmp
sub
xor
lods
cmp
add
jnp
sbb
incl
fwait
push
inc
inc
jo
leave
loope
imul
std
dec
sub
orl
cmpsl
neg
popa
aaa
and
and
lods
jecxz
in
adc
dec
push
mov
push
push
and
push
jne
aad
in
jbe
je
nop
mov
ret
call
cmp
fdivrs
or
mov
or
loope
arpl
adc
movsl
add
iret
jo
jb
das
je
sbb
je
hlt
aaa
das
and
loope
leave
adc
push
mov
add
fwait
sub
in
sbb
jecxz
outsl
ret
jle
fidivs
mov
fdivrp
mov
shrb
jg
push
mov
add
in
push
lea
lods
and
fistl
bound
add
jl
js
mov
cmp
jno
dec
jmp
mov
xchg
popf
fsubs
xor
jns
xor
mov
fadds
pop
test
cmpsb
ficompl
test
cmp
shll
orl
jae
gs
aaa
ret
adc
ja
insb
ja
pop
inc
iret
repnz
ss
icebp
inc
xchg
or
xor
and
jg
cli
sub
mov
sub
or
fcmovb
pop
pop
add
sub
sahf
jle
mov
jb
jne
mov
dec
pop
pop
jae
jmp
or
insl
jg
mov
mov
inc
xchg
pop
adc
mov
lods
popa
mov
sub
aaa
mov
sub
lret
pop
fs
push
shrl
pop
mov
or
jmp
sub
jmp
sbb
arpl
lret
aad
cwtl
adc
dec
subl
shrl
mov
mov
sbb
lcall
std
jns
scas
imul
and
sbb
xchg
jne
stos
dec
aaa
mov
mov
clc
push
pop
mov
imul
mov
fnstsw
lret
jg
mov
mov
ret
pop
mov
je
adc
mov
mov
nop
frstor
push
std
push
cmp
jmp
repz
xchg
sbb
ret
add
leave
dec
rclb
or
jmp
jns
inc
xchg
mov
lods
or
mov
and
and
fsub
jg
or
xor
loope
jb
icebp
in
jae
nop
rclb
xor
lock
pop
bound
push
inc
mov
sbb
push
or
andl
stos
fists
or
mov
push
aas
dec
insb
aaa
xchg
push
or
jbe
fnstcw
xor
pop
fcmovb
lcall
out
call
mov
enter
lods
movsl
mov
fistpll
into
es
sahf
dec
add
dec
mov
sub
stc
jne
repnz
stos
dec
jp
jmp
testb
mov
shrb
push
repnz
push
pop
sti
push
fisubs
add
or
lock
xchg
dec
pop
idiv
xor
inc
jmp
xchg
push
bound
push
aad
cmp
xchg
loope
mov
addr16
out
in
hlt
inc
xor
pop
imul
fwait
popf
insl
add
lcall
jmp
scas
jp
sbb
addr16
xor
inc
iret
xor
ficoms
movsl
and
xchg
push
out
insb
repz
dec
or
pop
or
ljmp
js
mov
data16
ds
and
ja
repnz
int
sub
push
clc
out
outsb
daa
push
aam
dec
mov
xchg
mov
mov
mov
add
sbb
fs
insl
cmp
mov
inc
pop
stc
mov
cmc
outsb
rcrl
lods
and
xor
test
stos
add
sahf
into
in
mov
cmp
and
dec
mov
jecxz
pop
test
mov
add
mov
mov
pop
ret
aas
nop
mov
rcr
inc
jg
fildll
cs
pop
inc
imul
pop
shl
clc
xor
mov
push
mov
mov
inc
mov
out
xchg
fidivrs
sub
adc
js
dec
loope
data16
sbb
jmp
fstl
outsl
daa
xchg
les
insl
xor
mov
insb
xor
lcall
push
inc
cmp
repz
jno
mov
shr
mov
fdivrp
invd
sub
imul
pop
mov
in
and
push
push
add
int3
dec
adcl
cmp
icebp
std
call
addl
aaa
jae
stc
cmp
inc
cmpsb
jl,pt
lret
xchg
cs
movsb
stos
std
test
roll
loop
sub
sbb
ret
repz
mov
in
push
add
movsb
mov
or
jne
das
push
inc
mov
rorl
js
shr
scas
push
jl
push
loop
pop
or
mov
adc
test
cmp
adc
lcall
in
fmuls
jno
test
shl
add
es
and
cltd
xchg
push
xchg
fwait
adc
mov
pop
push
xor
adcb
add
inc
cmpl
mov
mov
pop
or
sbb
or
mov
cmpb
out
rcl
push
jbe
popa
shrl
aas
dec
imul
pop
or
inc
inc
aaa
lods
cwtl
xchg
cmp
lods
push
xchg
mov
mov
push
insb
sbb
pop
xchg
ret
data16
xor
and
jg
int
xor
fdivrl
mov
inc
mov
jbe
pop
pop
lret
xchg
fwait
sbb
adc
and
movsl
fldenv
jnp
lret
loope
add
dec
in
mov
pop
xor
push
add
xchg
pop
das
cld
je
fmuls
fisubs
xchg
sub
xor
sar
adc
sbb
cmp
pop
rorl
adc
jle
fidivs
and
psubsb
or
sub
push
push
push
and
movsl
mov
adc
jl
sar
xor
out
jmp
stos
negl
sub
sub
mov
in
cs
lret
cli
push
sbb
inc
rcll
sbb
mov
push
sbb
shl
repnz
inc
cs
fstl
inc
lock
aaa
mov
fwait
jns
push
xlat
pop
pop
jge
pop
mov
out
mov
or
stos
inc
hlt
cmp
hlt
jl
cld
pop
mov
aad
sbb
cmp
andl
sub
stc
push
adc
ret
shl
gs
jbe
jo
jmp
lock
orb
xorl
out
or
pop
add
pusha
inc
out
cli
repz
ja
jnp
jg
movsb
mov
stos
repz
out
add
clc
mulb
andb
adc
nop
mov
push
push
test
rcrb
inc
scas
mull
rorb
adc
add
sbb
mov
or
divl
or
dec
mov
outsl
pop
je
repz
or
pop
inc
fcoms
mov
cmp
cld
push
or
mov
in
sbb
imul
addr16
mov
pop
into
mov
cmpsb
mov
mov
xchg
test
or
mov
fcomps
cmp
xchg
mov
inc
push
push
loop
sub
xor
sub
lret
jb
mov
scas
inc
cmp
fiadds
mov
lock
lods
ja
or
lret
mov
cmp
les
fistl
je
sbb
mov
mov
cmpsl
adc
jmp
jne
dec
test
push
insl
xor
rcr
popf
mov
fwait
imul
sbb
xchg
test
mov
or
jne
xorb
aaa
dec
popa
fwait
xor
mov
pop
orb
js
fucomp
mov
sbb
or
sbb
lods
adc
push
mov
out
inc
mov
sub
leave
push
in
aaa
test
stos
push
inc
bound
jb
mov
std
and
push
sub
mov
adc
xchg
xchg
mov
pop
mov
cmp
ret
xor
push
pushf
lds
out
and
jmp
or
adc
cmc
xchg
sub
cmpsb
scas
loop
sbb
add
js
dec
inc
hlt
mov
in
inc
inc
mov
jno
pop
cmp
and
mov
xor
ret
xchg
xor
int3
adc
jns
adc
movsl
dec
imul
dec
dec
es
lds
fsubl
add
xlat
mov
cmpsl
ud0
sbb
sub
mov
cmp
xacquire
and
sbb
pop
popf
leave
xchg
jns
and
inc
sbb
xchg
adc
mov
popf
icebp
gs
rolb
pop
dec
scas
mov
cld
cwtl
cmp
add
fwait
xchg
add
aam
pop
pusha
sahf
ret
cmovg
test
mov
pushf
mov
mov
imul
mov
jmp
aad
sub
loopne
mov
dec
dec
lods
dec
adc
data16
lret
mov
fldt
xchg
jnp
sub
mov
xor
aam
adc
test
les
je
call
clc
and
jle
mov
test
lahf
jae
pop
cmc
mov
push
inc
push
js
and
leave
adc
mov
fiadds
in
out
repz
loope
cmp
mov
mov
sahf
fldl
jnp
in
xlat
mov
sarl
in
xor
mov
popf
jmp
jp
push
insl
push
cmp
or
xchg
xor
inc
push
stc
pop
testb
pop
aad
imul
jl
loop
lds
mov
std
outsb
ja
and
inc
sbb
lahf
rcr
inc
leave
sub
insb
popa
js
push
mov
lcall
pop
inc
jns
ljmp
push
in
sub
scas
xchg
nop
ret
sti
orl
or
ljmp
mov
pop
test
push
mov
mov
push
clc
sub
insb
icebp
test
roll
mov
sbbl
mov
or
out
sub
jns
or
xchg
xor
ss
popa
int
out
stos
cmp
and
cmpb
sbb
in
in
shl
or
cmp
push
lret
es
popf
rol
das
fcomps
fcompl
out
jae
loop
sahf
iret
cs
pop
outsb
in
icebp
pop
xchg
xor
jge
adc
scas
mov
rorb
sar
inc
jge,pt
dec
cmp
rcl
push
aam
ljmp
and
cmpsl
stos
jno
loope
hlt
or
jb
lahf
popl
nop
inc
or
out
in
adc
out
ds
adc
fwait
scas
or
adc
sbbl
mov
adc
mov
push
fldenv
in
mov
mov
mov
jae
pop
les
sarb
and
mov
arpl
dec
dec
popa
or
xor
popa
mov
dec
popl
or
into
mov
pop
or
add
jle
and
pop
shrb
add
mov
movsb
sub
sbb
loopne
sub
push
out
das
inc
inc
add
sbb
loopne
adc
pop
xchg
inc
test
rolb
in
lock
inc
jb
es
inc
das
fucom
or
movsb
aas
shrb
scas
pop
xchg
lea
ljmp
scas
jnp
cmp
stos
cmpsb
lret
aad
out
int
scas
gs
out
jmp
jns
pop
outsb
cltd
test
jae
pop
jb
fadd
and
leave
pop
jae
nop
shl
push
push
push
pusha
push
adc
rcl
jb
movsl
push
cmpsb
or
lret
or
sub
fistl
sbb
inc
xchg
ss
cmp
int3
lods
mov
mov
push
sbb
mov
cld
push
test
imul
test
aas
fsubr
adc
sbb
or
movsb
daa
fsubrs
sub
daa
and
test
ret
adc
in
ljmp
mov
in
add
sub
mov
and
sbb
outsl
stc
rorl
cmp
push
push
in
sbb
jo
add
cmpl
outsl
adc
jbe
test
inc
ss
jp
pop
xchg
mul
gs
mov
mov
add
popa
negb
xchg
inc
pop
into
mov
ds
ret
pop
sti
or
sbb
test
push
notl
cmp
lcall
orl
jp
push
insb
push
enter
dec
jmp
push
ret
shll
call
add
cli
inc
fsubs
dec
mov
inc
sub
sbb
push
cmpsl
dec
jg
jnp
pop
or
test
out
pop
outsl
or
pop
mov
jb
push
cld
out
mov
cmpsl
scas
cmc
popa
pop
adc
cmp
aaa
cmp
xchg
mov
shlb
out
mov
sub
and
inc
adc
mov
push
mov
test
or
ficompl
dec
sbb
movsl
jg
lahf
aam
out
iret
jle
mov
ja
pop
subl
dec
pushf
repz
rorl
dec
xchg
add
vxorps
pop
icebp
push
test
or
push
rorl
insl
cld
jbe
ret
pop
xor
and
mov
loop
je
movsl
and
stos
cmp
jge
fstpl
push
repnz
dec
gs
test
pushf
ljmp
sbb
test
daa
icebp
xor
pop
daa
inc
and
xor
int
cmp
mov
xchg
jno
lcall
inc
mov
ds
adc
mov
push
adc
jns
jnp
xor
mov
xor
jge
sbb
mov
and
mov
clc
icebp
sbb
sbb
dec
pop
cli
ret
mov
xor
add
jne
jae
cld
pop
dec
inc
pop
inc
dec
adc
push
jae
stos
xchg
mov
dec
mov
mov
test
jae
test
and
divb
push
push
sub
cmp
mov
in
jecxz
stos
pop
sub
add
rorb
and
es
sub
rorb
outsl
nop
ret
std
ret
clc
cmp
add
and
add
ds
mov
data16
imul
fisttps
add
mov
sub
addl
or
adc
jg
movsb
mov
and
repnz
inc
out
iret
mov
xchg
lods
push
mov
loopne
fildl
daa
sbb
sub
push
mov
addl
mov
imul
dec
mov
int3
loope
stos
in
sbb
mov
int3
cltd
sbb
pop
bound
dec
fwait
jae
add
hlt
push
xchg
push
ja
add
xor
push
lods
adc
mov
mov
push
mov
fstps
in
or
xchg
add
cld
xchg
ljmp
clc
fsub
xor
js
call
fisttps
test
cmp
movsl
mov
ret
ss
les
lods
sbb
cmp
cmpl
mov
pop
stc
cmp
loop
mov
inc
pop
arpl
test
dec
aaa
icebp
jno
iret
test
or
outsl
shll
lahf
cmp
jo
bound
and
sbb
xchg
nop
imul
div
cltd
and
repz
jbe
mov
and
iret
mov
mov
sub
or
movsl
in
xchg
jmp
in
and
outsl
pop
add
jb
popf
or
movsb
inc
mov
lahf
pop
aad
mov
and
lock
push
das
imulb
pop
mov
pop
pop
daa
or
sbb
lods
int
pop
fisubrs
jns
xchg
dec
ret
sbb
push
push
decb
xchg
push
cmp
gs
stos
js
and
aaa
std
jae
push
mov
jmp
je
pop
dec
lahf
push
jp
mov
push
andl
subl
xor
cmp
mov
fwait
sti
pop
dec
jbe
mov
adcb
cwtl
cmp
cli
popa
bound
lret
test
out
or
pop
inc
mov
mov
out
add
fildll
test
shl
mov
stos
sub
inc
outsl
cltd
cwtl
push
inc
pop
and
pop
and
in
sub
mov
jo
cmpsb
out
in
or
jo
push
test
sub
cmpb
mov
sub
je
jno
mov
sbb
sarl
cmp
jle
stos
je
jo
in
hlt
sbb
sub
imul
ret
lods
add
fstps
scas
aas
mov
into
or
xor
adc
mov
shr
cmpsb
hlt
mov
rclb
orb
cmp
lret
pop
push
xchg
xor
aam
pop
mov
xchg
push
mov
fs
mov
div
sbb
push
stos
dec
mov
xchg
dec
dec
inc
sbb
sub
mov
or
repnz
push
in
fcomip
and
pop
mov
mov
mov
addr16
sti
int
dec
ljmp
std
jl
push
shrb
popa
cmp
push
lahf
mov
dec
dec
cs
out
sarl
mov
mov
shll
sbb
cli
mov
xor
lret
adc
cmpsl
js,pt
vsubsd
cmp
mov
ret
cmp
fmuls
adc
lea
sarl
sbb
cmp
mov
int3
cmc
dec
or
loop
xor
aaa
sbb
test
pop
std
fmuls
mov
xchg
mov
dec
test
lret
arpl
inc
je
dec
cltd
and
loopne
dec
ret
jno
fisubl
mov
sarl
mov
clc
subl
mov
iret
int3
insb
or
les
test
xchg
xor
add
xorb
add
inc
ret
test
rcrb
pop
icebp
scas
mov
icebp
xchg
jmp
sbb
rorl
jp
pop
mov
inc
les
pop
xor
sub
add
mov
inc
inc
push
sub
adc
inc
jmp
imul
lahf
pop
inc
mov
mov
outsb
popa
rclb
pop
or
inc
add
or
lock
andb
lods
and
stos
in
sub
inc
popa
gs
ret
sub
xlat
rcl
jne
lahf
fwait
outsl
pop
pop
dec
test
insb
xchg
mov
fldcw
lods
push
jno
dec
cli
xchg
imul
adc
lcall
sarl
in
mov
std
adc
sub
pusha
call
mov
inc
mov
inc
ljmp
fildl
pop
insl
std
dec
and
pop
jp
sbb
dec
dec
xchg
inc
mov
outsb
std
insb
xchg
mov
aad
imul
cltd
xchg
or
mov
push
xchg
or
dec
xchg
inc
inc
js
in
push
arpl
and
shll
mov
insb
roll
xchg
dec
mov
xchg
ljmp
pop
rolb
pop
punpckldq
xchg
sbb
inc
push
sub
cmp
cs
and
dec
add
ret
jo
ljmp
in
std
in
xor
fisubrl
dec
fdivs
fs
add
and
insb
adc
push
test
arpl
push
mov
dec
scas
jae
mov
dec
lods
sbb
and
mov
les
testb
pop
lahf
jmp
out
out
mov
jmp
andl
pop
cmp
mov
mov
hlt
xchg
and
xchg
fdivl
add
xor
imulb
shlb
push
test
movsb
inc
sbb
or
add
insb
dec
stc
ret
call
push
imul
push
divl
repz
jbe
adc
pushf
sub
pop
xchg
pop
mov
lds
jg
mov
in
fsub
lods
loopne
les
mov
test
loope
jno
inc
nop
xchg
hlt
sbb
fdivrs
xchg
push
int3
mov
inc
or
in
pop
lret
cltd
out
jle
aam
popf
mov
outsl
xchg
adc
std
lret
xor
dec
testl
aaa
sbb
pop
clc
sub
push
pop
sbb
das
add
pop
cmp
arpl
mov
aaa
scas
in
rclb
test
cmpsl
orb
mov
xor
popf
out
cmp
fsubrs
or
fstl
out
add
in
sbb
push
les
push
hlt
int
mov
rolb
into
sub
shrb
jge
dec
jno
xchg
mov
js
ja
xor
xchg
or
fucomp
cmp
repz
xchg
cmpsb
jnp
add
lods
jle
adc
xlat
xchg
mov
fadd
cmpl
sbb
aas
mov
jmp
bswap
fmuls
or
and
push
arpl
std
lds
dec
shll
xchg
lea
lds
repnz
test
push
andl
mov
loop
sbb
clc
aad
xchg
test
pop
mov
sub
cmp
add
sbb
mov
repz
and
jecxz
aas
push
test
sbb
adc
sub
rol
insb
inc
icebp
adc
cli
imul
rcr
cltd
sub
mov
push
mov
repz
cmp
in
fisubl
sbb
aas
add
andl
xchg
and
cs
push
add
sub
lcall
add
mov
or
xlat
in
dec
mov
rcll
pop
add
mov
jae
cmc
lret
popf
fnstsw
jbe
xor
test
push
icebp
xor
call
push
inc
popf
rolb
xchg
ret
jmp
mov
test
and
sub
sbb
cld
jmp
out
jns
dec
sub
dec
cmp
ljmp
jmp
jmp
inc
pop
pushf
loop
add
xchg
sub
cmp
push
mov
test
add
mov
adc
jle
xor
js
mov
mov
xor
fadd
repnz
xchg
scas
mov
lds
xchg
push
xchg
mov
loop
and
lods
mov
out
push
jae
popa
daa
or
lret
movsl
lea
mov
outsb
outsl
and
lea
sbb
dec
subl
sbb
xchg
outsb
xchg
fnstsw
idivl
gs
push
and
mov
sbb
pop
jle
jmp
inc
pop
lods
jb
sbb
fisttps
andl
setle
insb
bound
pop
mov
scas
mov
cltd
in
jnp
aaa
jne
cmp
mov
pop
scas
repnz
xchg
sbb
push
and
pusha
aaa
dec
and
dec
loop
jmp
enter
ss
clc
mov
out
sub
adc
sahf
insb
dec
pop
xchg
scas
mov
test
out
sbb
pop
jae
popf
and
pop
jle
mov
push
int
ds
dec
mov
fstl
shr
fisttpll
sub
jmp
and
or
jne
cwtl
idivb
clc
shlb
orb
lret
cmpl
das
jecxz
decb
pushf
sti
jbe
adc
jp
push
xchg
in
ja
imul
imul
sahf
or
jbe
in
add
sti
or
jg
in
xchg
inc
add
pop
cwtl
std
imul
push
mov
mov
cld
pop
push
pop
inc
addr16
into
push
frstor
dec
out
addr16
jne
cmpsl
sahf
xor
inc
inc
iret
popf
jns
fisttpl
sub
cld
pushl
sahf
jno
addl
mov
push
popa
aaa
mulb
repnz
imul
jg
or
mov
cs
test
es
je
mov
or
addr16
pop
push
insl
jns
xor
test
mov
lea
push
xrelease
mov
outsl
lods
mov
int3
push
and
fistps
hlt
sub
push
neg
rorb
iret
dec
sub
xor
sbb
loopne
xchg
pop
push
mov
and
dec
fmul
shrl
cmp
mov
fwait
popa
xchg
xor
insl
sti
mov
inc
cmc
xor
aaa
mov
dec
in
xlat
fcmovne
lret
aam
lret
in
cmp
aad
sbb
mov
pusha
js
xchg
jl
das
adcb
pop
jmp
sub
and
es
push
sub
call
inc
mov
daa
nop
sbb
cwtl
adc
paddusw
jo
sbb
out
add
in
cmp
cli
xchg
std
je
inc
scas
xor
push
sbb
stos
xor
mov
push
xor
adc
ror
imull
ljmp
lock
shll
xchg
insb
ret
orl
call
ffree
das
push
out
push
int3
sub
popf
xchg
mov
pop
adc
pop
loopne
push
mov
push
jge
stos
cmp
gs
into
xchg
cmp
mov
lcall
ja
inc
imul
pushf
inc
aam
xchg
jecxz
mov
xchg
push
movsb
pop
fistl
sti
inc
fcmovu
mov
lea
shl
popf
mov
add
push
into
sub
mov
cmp
sbb
shll
imul
xchg
add
js
fmuls
jno
mov
enter
adc
scas
lahf
out
mov
or
fmuls
and
pop
mov
imul
fnstsw
out
les
mov
loop
sbb
push
iret
sbb
icebp
mov
and
push
pop
dec
lds
push
enter
or
add
lret
sub
sti
fildl
jmp
inc
add
lret
adc
push
mov
movsb
aam
insb
jns
lods
stos
cmp
out
int
cmp
pushf
aad
sbb
inc
ret
in
rcrl
mov
sub
outsb
das
xchg
push
test
fcompl
icebp
jmp
adc
or
cmpsl
jns
cmpsl
or
and
xlat
pop
lock
add
movsl
sbb
push
fidivrs
cli
xlat
in
push
movl
ds
cmp
cli
outsb
sahf
push
outsb
push
add
cmp
insb
shl
or
inc
insb
mov
ret
js
jge
pop
je
push
orl
shll
arpl
dec
xchg
mov
mov
movsl
mov
cmp
sbb
add
push
push
mov
outsl
add
or
popf
stos
xchg
rcll
cmp
push
or
pop
cmp
sub
fidivrl
xlat
ljmp
xchg
sbbl
das
lret
movsb
sub
lds
adc
push
and
arpl
addr16
jb
or
lahf
cmp
add
push
fbstp
sbb
or
adc
loopne
ss
fsubr
out
sub
and
sbb
xchg
jae
mov
or
or
dec
lahf
mov
imul
push
div
push
push
mov
cmp
stos
adc
xchg
xor
pop
cmpsl
fsubr
jmp
repz
push
mov
lret
xchg
in
cmpsl
repz
ret
pop
insl
fwait
or
fildl
dec
aaa
pushf
jl
mov
mov
add
je
inc
mov
jo
mov
jo
add
lret
add
clac
dec
pop
mov
lcall
add
dec
xor
sub
hlt
sub
jnp
push
or
dec
rcll
push
sbb
mov
cwtl
pop
inc
push
inc
adc
mov
loop
cmp
xorb
mov
mov
pushf
pusha
sub
out
mov
sub
pushf
jno
push
movsb
dec
lcall
mov
push
movsb
lea
xchg
movzbl
cmp
cwtl
push
mov
js
scas
clc
inc
xor
imul
jecxz
inc
dec
adc
mov
test
xor
mov
cwtl
lods
repz
cld
dec
add
outsl
adc
test
cwtl
adc
sbb
and
movsb
imul
enter
mov
sub
icebp
push
mov
cmpsb
push
inc
pop
mov
mov
je
inc
xchg
out
jmp
sbb
push
aas
adc
sti
sbb
lods
out
ret
lret
ret
insl
ret
mov
mov
cmp
sbbl
cmp
adc
pushf
mov
or
js
mov
pop
mov
pop
arpl
aam
inc
mov
into
pop
or
mov
pop
addr16
mov
pop
xlat
jg
cs
adc
pop
push
roll
pop
std
mov
outsl
xor
cmc
jge
xor
cmp
sub
aad
cld
cmp
stos
enter
dec
jnp
lret
push
mov
pushf
pop
in
pop
pushf
clc
imul
adc
jo
adc
js
int3
div
sti
jmp
movsb
and
cmp
mov
sub
and
mov
jle
leave
xchg
xlat
sub
repnz
jmp
xchg
or
movsb
push
mov
std
int3
pop
sbb
push
add
ret
pop
sbb
jp
jg
cmpsb
mov
movsl
arpl
in
sub
sbb
add
adc
push
push
in
xor
mov
sub
cmpsb
xchg
jl
lock
or
inc
cmp
pop
fisttps
sub
fneni(8087
pop
mov
imul
mov
push
fucompp
push
push
xor
add
cmp
push
inc
xor
adc
xor
lods
pop
decl
push
iret
cmp
adcb
sahf
dec
cmp
jmp
outsb
ret
into
or
add
push
fldl
push
xor
jbe
adc
and
push
lret
mov
cmp
mov
je
jnp
add
push
inc
loope
scas
lret
enter
jns
jnp
lds
js
and
push
inc
je
xchg
push
cmp
and
ss
shrb
dec
roll
pop
mov
lahf
in
into
scas
mov
in
int3
jno
in
dec
roll
daa
xchg
xlat
mov
push
sub
hlt
sbb
cltd
les
popf
or
xor
cwtl
cmp
pop
lods
cmp
mov
and
lods
mov
sub
jns
mov
push
push
mov
insl
mov
mov
enter
jmp
int3
pushf
aaa
movsb
aam
in
lock
mov
sub
add
add
das
dec
sbb
jne
inc
xor
ret
dec
cmp
int
mov
or
and
ljmp
push
js
pop
cmp
push
jno
cmp
mov
sbb
dec
sub
int3
dec
adc
xchg
xchg
loope
adc
xchg
fnstsw
sub
notb
mov
lret
daa
pop
mov
cmp
push
dec
jmp
xchg
inc
ret
je
dec
lea
sub
fisubrl
push
aad
pop
rep
mull
xchg
bnd
pop
pop
mov
add
je
sbb
push
pop
ljmp
xlat
lret
mov
rcr
sub
outsl
test
mov
ffree
arpl
test
or
scas
test
popa
or
cltd
dec
jbe
fcompl
ds
scas
imul
insb
in
ficoml
in
arpl
fwait
repnz
cmp
mov
imul
cmp
mov
daa
shll
inc
cmc
cmp
sti
push
cs
mov
shr
in
push
std
fsubrs
dec
or
out
xor
pop
xor
dec
lahf
in
xlat
sbb
and
iret
jnp
stos
aas
dec
adc
lock
dec
and
mov
sbb
out
jno
ds
lret
mov
ljmp
add
xchg
push
loopne
test
out
out
sub
xor
cmp
jnp
int
sbb
dec
shlb
call
cwtl
lret
call
inc
pop
std
mov
aad
stos
sub
jno
lret
pop
dec
push
cmp
inc
mov
cmpsb
jno
test
jmp
in
jno
add
jns
pop
adc
std
xor
clc
mov
popf
sarb
sbb
notb
ljmp
and
push
test
pop
jp
sub
mov
js
enter
mov
xor
inc
rorb
out
clc
fs
pop
push
lea
inc
xor
mov
jmp
call
cmp
mov
xor
sbb
mov
cld
xor
and
mov
push
addr16
sbb
nop
inc
movsb
push
iret
push
rcrb
sarl
mov
push
in
mov
mov
jmp
insb
mov
mov
sbb
ds
cltd
iret
cmpsb
sarl
ljmp
add
scas
pop
dec
ret
movl
into
xor
xchg
xorb
or
lods
mov
insl
adc
ret
cwtl
ss
or
imul
nop
sbb
cmc
pushf
cltd
popa
lret
lock
stos
daa
cltd
out
inc
and
inc
adc
scas
push
dec
out
call
adc
jp
arpl
movsb
lods
pop
mov
popa
dec
push
mov
cmp
sbb
jnp
orb
xlat
mov
ljmp
popa
xchg
mov
add
fsub
psubusw
ljmp
pop
loope
popa
std
adc
mov
xor
adc
cld
mov
push
dec
stc
addb
xor
mov
mov
xchg
jge
mov
loope
popf
stc
jmp
or
cmp
add
icebp
push
out
into
loope
faddl
hlt
imull
loopne
sbb
mov
add
in
mov
inc
aas
cmc
mov
enter
push
add
shlb
mov
enter
pop
jmp
jp
outsb
sub
mov
xor
test
or
mov
cmp
lea
and
inc
xchg
in
xor
sub
or
push
or
jb
out
and
mov
adc
push
cmpsl
loopne
cli
enter
fstpt
add
xor
inc
dec
adc
or
cmpsb
jnp
jne
and
xchg
xlat
fwait
mov
lods
cmp
jno
dec
lock
dec
or
sbb
mov
aas
shlb
mov
pop
ds
mov
fsubrs
xchg
push
icebp
sub
lock
mov
lret
mov
sti
mov
mov
pop
test
aad
imul
ret
mul
xchg
mov
jo
add
dec
mov
xchg
scas
xor
shl
pop
ret
lret
leave
mov
repnz
jmp
std
jge
insl
mov
push
jl
ja
and
popa
mov
inc
icebp
orl
mov
fsubl
adc
ds
push
sti
inc
mov
fs
xor
pushf
or
sub
fisubrl
sbb
cld
mov
xor
test
aad
lods
sub
adc
ljmp
sub
and
push
mov
pop
mov
data16
loopne
inc
sarl
pop
adc
push
enter
fiaddl
sbb
sub
pop
loopne
dec
into
inc
and
leave
mov
inc
scas
pop
sbb
scas
push
or
mov
pop
dec
adc
daa
push
ret
das
cltd
loop
es
in
sub
and
pop
test
data16
xchg
jecxz
dec
repnz
rcll
das
out
in
pop
iret
fcomi
mov
sbb
and
cmpsl
addr16
jnp
arpl
push
mov
ror
mov
xchg
or
inc
cmp
pop
rclb
dec
push
pop
jg
dec
inc
inc
sub
or
mov
out
jg
add
lret
jae
push
add
mov
inc
pop
not
imul
cmp
inc
sbb
jmp
pop
add
cmp
xchg
repz
rcll
popa
mov
in
and
or
lret
adc
shll
add
mov
mov
cmp
lcall
inc
mov
cs
cmp
movsl
loopne
pop
mov
inc
adc
call
rcr
popf
push
nop
lea
cmp
xlat
push
insl
pop
add
ds
inc
dec
xchg
add
sbb
fisubrs
out
mov
pusha
mov
xchg
aaa
ljmp
cmp
mov
std
inc
pop
iret
xchg
push
mov
faddp
and
mov
mov
or
rolb
test
adc
dec
pop
pop
test
out
sbb
cmp
mov
mov
scas
sub
pop
fdiv
aas
sub
dec
sbb
dec
lret
ljmp
pop
pop
cmp
sarl
adc
clc
adcl
mov
and
mov
stos
cmc
mov
imul
add
inc
mov
or
lea
rcll
popa
insl
jmp
aas
add
pop
dec
sub
cmp
inc
inc
push
jae
inc
movsl
pusha
scas
cmp
gs
in
add
mov
lea
push
push
add
es
movsl
mov
clc
fiadds
adc
daa
mov
daa
test
mov
cmp
pop
mov
xor
popa
mov
mov
push
cmp
add
mov
or
sub
mov
push
sub
out
arpl
sub
cmovbe
clc
rcrb
and
adc
xor
xchg
aam
jnp
cmp
adc
or
push
cmc
cs
insl
cwtl
mov
dec
nop
ja
rclb
cmpsb
or
add
sbb
push
push
enter
mov
stos
fcoms
in
sub
ret
test
and
mov
and
mov
idivb
ret
in
add
in
stos
fs
insl
negb
sub
add
test
inc
cmp
enter
mul
push
cmpsl
decl
add
sub
jne
xchg
insb
ret
mov
add
mov
popa
repz
push
xchg
int
scas
testb
xlat
icebp
out
jl
mov
inc
cmpsl
in
int
add
rol
fbstp
pop
das
mov
cmpsl
xor
outsl
sbb
out
sub
push
fcompl
inc
cli
cmc
ficompl
out
addr16
in
imul
push
sbb
in
shlb
aad
pop
cmp
imul
dec
loop
pop
mov
cmp
popa
sbb
rclb
jne
and
fdivs
fs
lods
sub
push
inc
es
cwtl
ds
mov
in
addr16
mov
loope
ja
enter
and
inc
xor
loop
and
std
xor
xchg
in
fwait
mov
lret
fdiv
enter
adc
lock
xchg
gs
adc
and
cmp
add
adc
push
pop
cmp
adc
sub
cmpl
cltd
mov
in
sbb
ds
in
add
js
and
ljmp
add
loop
shrl
mov
cmpsl
jmp
iret
jbe
mov
jg
lds
or
pop
insl
or
shlb
adc
cwtl
xchg
mov
scas
inc
loop
xchg
cmpsl
scas
and
jns
xlat
in
out
jg
loop
addr16
out
xor
jno
mov
xchg
in
ljmp
inc
jecxz
mov
test
dec
and
sti
std
stc
mov
sbbl
hlt
mov
inc
sbb
mov
out
js
lahf
movb
ret
sub
call
outsb
fst
cwtl
aas
fmul
mov
xlat
fsubl
xor
out
addr16
cmp
outsl
sbb
aad
push
mov
and
cmc
pop
ds
jno
jno
adc
mov
ror
loop
jo
sbb
pop
addr16
mov
test
mov
adc
fcoms
sahf
dec
incb
mov
movsl
cmpsb
jo
stc
cmp
pop
dec
cmp
or
xor
sbb
xlat
jb
in
mov
fimuls
lret
mov
xchg
push
jno
clc
scas
ljmp
in
ja
adc
imul
subb
cmp
jbe
fs
add
sbb
jmp
xor
push
push
ds
daa
nop
leave
or
bound
int3
repnz
popf
dec
fmull
loope
add
fiadds
gs
adc
adc
aas
and
inc
push
out
fnsave
data16
call
jmp
dec
call
fwait
jb
mov
fwait
icebp
cld
shl
push
insb
mov
leave
mov
bound
leave
mov
xchg
cltd
addb
dec
outsb
imul
mov
mov
sarl
addr16
iret
clc
lea
adc
sub
cmpsb
dec
test
xchg
ret
cld
addr16
cmpsl
mov
repnz
pushl
in
pop
adc
test
pushf
mov
push
and
loope
fmull
pushf
cmpsb
insl
mov
stc
jp
fbld
pushl
sti
sahf
push
out
movsb
mov
in
mov
or
mov
xchg
les
pop
setno
inc
dec
fwait
cmp
and
and
or
jmp
dec
xor
xchg
es
push
gs
insb
pop
cltd
or
xor
dec
mov
es
jl
pop
mov
mov
ljmp
das
push
pop
xor
adc
ror
es
jecxz
mov
pop
roll
add
subl
fs
dec
cmpsl
enter
pusha
int
addb
add
push
cmp
adc
sub
xchg
inc
and
sub
jno
pop
push
cwtl
movsb
fsubl
aad
xor
daa
mov
mov
sbb
adc
mov
cli
mov
and
pop
add
popa
jmp
add
in
add
daa
fisubs
jae
cmp
inc
mov
pop
jns
icebp
popa
push
gs
sbb
mov
sub
sbb
add
inc
insb
into
adc
int
push
xchg
repnz
pop
xlat
mov
dec
adcl
cltd
sti
into
sarb
sbb
inc
adc
pop
sub
lret
and
push
je
push
jae
mov
jecxz
leave
lcall
or
dec
sub
mov
sbb
pop
mov
jl
mov
adc
jae
pop
loope
mov
mov
sbb
fisttpl
xchg
pushf
flds
inc
cmp
adc
sub
cmp
clc
sub
mov
shr
and
lods
or
jns
xor
clc
xchg
lea
outsl
test
dec
outsl
aam
and
test
popf
cmpsl
jcxz
add
gs
pushf
adc
xchg
cmp
cli
cld
push
ds
cmp
es
inc
popa
adc
mov
pop
jmp
das
into
mov
imul
test
in
stos
orl
inc
push
rcll
pop
stos
nop
scas
scas
lock
pop
arpl
mov
test
mov
call
ret
add
mov
pop
lahf
pop
movsl
push
lods
push
dec
lods
test
loope
arpl
add
sbbl
pop
sti
rcl
xchg
lods
ret
fwait
shl
xchg
and
stc
inc
mov
push
adcl
test
test
push
popf
movsl
mov
cmp
mulb
imul
ret
push
popf
mov
push
jmp
sub
inc
push
mov
jl
add
dec
jg
cs
dec
lret
cwtl
insl
cmpsl
daa
push
and
or
stos
fcomip
out
xor
cmc
mov
insb
inc
mov
mov
mov
stc
xor
push
pop
or
mov
ja
sahf
dec
ror
add
std
xor
fstp
out
mov
dec
mov
sub
scas
ljmp
dec
inc
sub
push
insb
inc
mov
bswap
daa
aaa
gs
push
pop
mov
mov
sarl
aas
loope
push
mov
popf
shrb
testb
and
shlb
jns
out
jle
lock
and
repnz
and
test
inc
mov
out
dec
sti
cli
movl
push
dec
cld
mov
jmp
and
mov
nop
imul
sbb
push
scas
inc
push
sbb
cmpsb
or
icebp
rolb
xchg
aad
fldenv
mov
inc
push
rcrb
je
ret
sarl
add
xor
or
ret
pop
mov
cltd
outsb
decl
pusha
or
jno
jg
jo
push
and
insl
inc
aad
jmp
jg
ds
out
lret
shlb
test
jae
inc
int
push
lahf
shll
notl
test
iret
or
add
rcrb
xchg
scas
arpl
or
jg
aad
xchg
fwait
or
movaps
lods
lods
test
dec
push
out
sub
pushf
dec
out
dec
and
leave
xlat
imul
inc
aas
xchg
idivb
and
add
rcll
out
imul
js
aas
sub
cltd
mov
in
inc
aaa
aad
xchg
popf
shrb
enter
enter
and
sbb
mov
pop
ficomps
incl
mov
popa
cmp
xchg
push
push
xor
mov
pop
imulb
push
and
add
cmp
mov
jns
mov
dec
cltd
mov
pop
pop
in
outsb
xchg
fs
dec
cmpsb
mov
cs
and
mov
cmpsb
xlat
mov
lahf
mov
push
sbb
lret
insb
add
fadd
jecxz
mov
jp
pop
cmp
aad
es
pop
mov
mov
lods
sub
sbb
push
adc
add
test
je
xchg
in
ljmp
add
ret
fistps
ds
cmp
addr16
jmp
lods
scas
dec
cmpsl
push
push
fld
bound
pop
int3
adc
fldenv
shll
cmp
jg
clc
push
testb
mov
aaa
jmp
and
jb
subl
test
cmpl
cmp
orl
adc
nop
out
xchg
jnp
daa
mov
fbstp
subl
test
and
adc
out
mov
push
push
daa
or
sub
test
ret
int3
in
and
cmp
pop
orb
cmp
aam
dec
mov
inc
sbb
outsl
cld
icebp
pop
dec
push
into
call
inc
aaa
outsb
fistpl
jns
je
add
add
fs
inc
jle
adc
mov
rolb
in
dec
xor
packssdw
xchg
push
pop
mov
test
xchg
scas
pop
fdivs
fsubr
decb
add
out
fimull
imul
aas
add
fisttpll
add
mov
dec
adc
popa
mov
movsl
leave
sahf
out
jg
movsb
ja
aas
je
repz
xchg
aad
clc
xchg
jae
inc
xlat
push
test
sbbb
imul
iret
loopne
cmc
push
ja
mov
jp
jns
gs
sti
push
xor
sub
or
fcomps
popa
push
bound
and
jno
push
jne
in
mov
jb
subl
mov
icebp
jno
test
mov
push
jg
or
lods
sar
les
mov
mov
and
movsb
hlt
sbb
push
stc
xor
sbb
in
jmp
out
shlb
imul
daa
push
cld
push
pop
push
cltd
or
adc
xchg
test
les
jae
xchg
lahf
neg
ljmp
jecxz
mov
ftst
lea
hlt
pop
xchg
mov
mov
adc
lcall
enter
jnp
out
outsl
ja
cmp
mov
xchg
cmpsb
lahf
loope
fsubp
fadds
aad
pop
sahf
jne
in
scas
adc
fidivrs
dec
xabort
xchg
xor
mov
add
imul
push
mov
sbb
inc
inc
pop
into
idiv
outsb
or
fcmovnb
jbe
subl
cmp
idivb
pop
leave
mov
adcl
push
push
psrlw
fdivs
orb
push
popa
sub
andl
cmp
popf
jmp
cmp
rcll
jae
insl
jg
push
mov
pop
lret
adc
push
dec
jb
xor
cmc
xchg
pop
cli
mov
push
adc
out
daa
mulb
mov
jne
add
mov
test
sbb
aas
jl
xchg
sub
and
test
or
cmpsl
dec
aas
cs
inc
fnstcw
addr16
pop
sub
mov
push
loop
add
addr16
cltd
faddl
sbb
in
or
scas
mov
add
filds
xchg
in
and
inc
fsts
insb
in
popf
add
xchg
jns
xor
and
mov
seta
dec
xlat
loope
les
cmp
inc
and
stc
mov
fcmovnu
aam
xchg
cmc
add
cmpsb
mov
loope
add
dec
xlat
jle
xorb
scas
cmp
sarb
js
scas
dec
add
add
loop
rolb
sub
fisubrs
and
dec
push
je
int3
jl
jo
ljmp
pop
leave
mov
jb
inc
in
sahf
jns
ret
ficoms
push
fldl
je
mov
lret
inc
pop
adc
ja
push
add
out
in
cmc
call
sbb
pop
scas
pushf
loopne
lods
inc
fwait
and
js
add
jno
xchg
and
sbb
test
sub
mov
movsb
js
arpl
jno
imul
push
push
add
mov
insb
xlat
adcl
xchg
sub
jecxz
xchg
ds
mov
dec
sbb
cmpsl
repnz
mov
cmpsl
les
sbb
stc
mov
test
mov
xchg
mov
cmpsl
icebp
popa
ret
test
adc
lods
xchg
xorl
repz
aaa
aam
push
pusha
or
mov
adc
sub
fwait
stc
or
int3
sub
jmp
and
and
push
xchg
insb
cmpl
mov
pop
push
mov
mov
and
stos
pushf
pop
pop
test
imul
repz
test
xor
mov
cmp
lds
dec
mov
jns
xchg
jo
jnp
inc
test
test
je
stc
mov
push
xlat
cmpsb
mov
push
jl
mov
push
dec
je
loopne
mov
inc
outsl
dec
push
repz
mov
les
fcmovu
push
ror
lods
jno
cmp
xchg
jmp
sbb
inc
icebp
mov
pusha
lock
xchg
add
push
jae
repz
ljmp
inc
in
mov
dec
mov
test
sahf
out
adc
xor
addr16
xor
mov
jp
ljmp
xchg
out
sub
lods
dec
xorb
les
cmpsl
adc
xorl
cmpps
cld
and
rclb
in
mov
std
pushf
cmp
movq
aaa
movsb
xor
js
cmp
movntq
out
mov
xchg
pusha
sbb
mov
xor
fldt
lock
pop
mov
and
rorl
dec
ss
mov
jmp
mov
cmp
inc
and
sti
push
xchg
push
rorb
lea
mov
into
gs
xor
ss
xchg
or
add
aas
pop
push
mov
or
adc
sbb
jb
xor
fdivl
gs
mov
addr16
ja
lcall
shlb
or
and
ror
popl
push
push
cltd
sbb
or
fs
icebp
push
cmp
loop
idivl
xchg
xchg
xorb
jl
shl
fcoms
bt
sbb
scas
push
fnstenv
or
lock
mov
and
lahf
inc
loope
sbb
push
push
sub
leave
pop
pop
sbbb
scas
notb
gs
jmp
insl
arpl
xchg
popf
dec
dec
popf
mov
rolb
cmc
adc
cld
rcr
xchg
fistl
cmpsb
shrb
cwtl
jns
mov
insl
push
adc
xor
dec
jne
sbb
lds
in
or
pop
out
cmp
xlat
jl
ljmp
mov
mov
mov
mov
ret
addb
mov
adc
mov
xchg
sahf
andl
test
sbb
xor
pop
icebp
jmp
xchg
insb
aaa
xchg
stc
xor
dec
inc
jle
aad
call
inc
into
out
or
iret
push
xchg
test
aam
push
clc
shrl
and
loopne
inc
or
sbb
jecxz
movsw
dec
movsl
negb
or
movsb
adc
push
sahf
inc
iret
dec
pop
xchg
jl
out
sub
mov
sbb
scas
aam
xchg
add
sub
call
bound
sub
jp
movsl
jae
pop
addr16
lock
mov
add
jno
mov
sub
hlt
sub
cmp
sbb
mov
push
movl
and
rorb
mov
rcll
adc
cmp
mov
pushf
inc
cmc
mov
std
imul
xor
inc
loopne
inc
dec
test
sub
dec
sahf
bound
xor
mov
movsb
jbe
insl
leave
mov
jne
mov
imul
jbe
insl
pop
sub
jmp
cmpsb
scas
pop
fildl
ret
add
out
fdivrl
shlb
adc
int
add
test
loop
mov
push
stos
fsubr
shrl
pop
mull
and
xchg
lods
mov
push
int3
mov
test
and
rcr
clc
fdivr
xor
sti
es
jb
scas
lods
push
mov
pop
ret
aad
sahf
int
jae
mov
sub
jno
mov
mov
test
jbe
jmp
ds
ret
jg
mov
jl
mov
daa
loopne
cmpsl
cmp
inc
daa
push
xlat
pop
sub
dec
pushf
and
jno,pt
sarl
fsubrl
fwait
xchg
in
mov
mov
repz
xor
int3
jl
frstor
fcmove
fimuls
das
js
or
rolb
int
jp
int
push
sub
movsl
push
cmpsb
cmc
test
out
xchg
fidivrl
lods
mov
jbe
pop
lods
clc
pop
dec
seto
fbstp
fidivrs
aad
push
push
push
or
stc
test
mov
je
dec
sbb
nop
pusha
push
out
jne
sub
jg
mov
iret
outsl
pushf
mov
or
and
mov
lret
jnp
repz
cmpsb
fidivrl
mov
adc
lock
push
cmp
stc
icebp
xchg
mov
push
test
dec
cs
and
std
fcompl
push
mov
sbb
out
inc
enter
int3
lahf
xchg
dec
pop
dec
cs
xchg
add
pop
inc
pop
mov
ret
xlat
sub
sbb
push
add
and
cwtl
or
loope
sub
incb
dec
daa
sarl
pop
and
je
sbb
xor
stc
pusha
fldenv
sbb
mov
mov
or
ljmp
insb
arpl
add
push
notb
fidivrs
ret
loop
bound
jns
xchg
cmp
cmpsl
xchg
sbb
sub
add
loope
xchg
jne
sub
mov
and
arpl
out
addr16
push
mov
loopne
incl
inc
in
cmp
lret
ret
leave
push
cld
push
movl
inc
fcoml
aad
outsl
aad
xor
movsl
jno
incl
push
clc
sub
mov
cmpsb
sub
cmp
movsb
jae
add
xchg
nop
cmpsl
cmp
pop
push
hlt
addr16
push
push
push
push
loopne
aad
mov
xlat
mov
aam
jle
xchg
xor
andb
fldt
cmp
aas
call
and
ja
leave
push
ds
popa
xor
loope
rcl
fidivl
pop
sbb
sub
pop
or
popa
divb
jae
lods
insl
fdiv
shll
pop
pop
dec
push
ret
out
mov
mov
addb
push
xor
push
lret
data16
and
lock
sbb
icebp
pop
lret
and
sbb
push
test
jl
dec
movsl
xchg
cmpsb
jl
aas
adc
sbb
into
mov
les
mov
push
pusha
pushf
push
fucomip
sbb
in
jo
fsub
pop
push
iret
push
fidivrs
push
repz
aam
ret
scas
cmp
cmp
test
aad
test
pop
mov
out
rol
pop
nop
xchg
inc
dec
pop
lods
xchg
test
pushf
push
out
add
inc
pop
sub
inc
adc
sti
cmp
rcll
jbe
push
and
fbstp
xor
lods
fisttpll
mov
sub
cmp
scas
stos
jle
dec
xchg
out
mov
cmp
xchg
mov
sub
jge
inc
icebp
and
ficoml
cwtl
clc
mov
mov
inc
outsb
adc
sbb
mov
dec
ss
fs
and
push
dec
or
pop
cmp
andl
ficoml
cld
xchg
or
rcll
push
inc
stos
push
push
or
cmc
sbb
inc
pop
add
imul
ret
mov
roll
mov
dec
sub
mov
jmp
inc
int
scas
push
dec
inc
aaa
sub
pusha
pop
aam
and
push
inc
aam
and
rcrb
sub
mov
push
push
repnz
into
dec
mov
shrb
sti
loopne
mov
add
mov
inc
sar
cmp
adc
movsl
xor
sub
cmp
cld
push
jns
cmp
jbe
inc
out
jo
cmp
and
mov
movsb
add
pop
jnp
ds
test
and
pusha
or
cmp
mov
loopne
push
mov
icebp
mov
aas
pop
or
lcall
add
es
jmp
pop
test
and
popf
popf
das
ljmp
add
sub
push
jle
pop
jg
mov
xchg
mov
testb
ljmp
cltd
shl
sti
pop
into
jne
imul
push
bound
pop
jae
roll
loopne,pt
jnp
aas
adc
scas
or
fistpll
and
push
inc
and
icebp
and
push
addl
ret
das
lahf
test
or
or
and
mov
lds
lea
xor
jge
insb
decb
ds
inc
fadds
sbb
inc
and
cmp
movsl
arpl
pop
mov
xchg
xlat
or
out
cmp
hlt
scas
push
mov
idiv
cs
js
imulb
dec
sti
and
sub
stos
xchg
cmc
mov
dec
mov
inc
mov
jno
mov
xchg
out
rorb
cmp
xchg
jl
sub
lods
and
fisubs
dec
addr16
sahf
sbb
loope
lods
mov
and
mov
ss
pop
rolb
inc
or
hlt
lret
adc
in
mov
scas
jo
notb
outsl
int
xchg
push
jbe
ljmp
in
in
mov
imul
mov
pop
sub
cmp
ds
loope
ds
popf
pop
sahf
sbb
pusha
loope
fsubrs
adc
stc
xchg
and
loopne
adc
mov
ret
pop
xchg
repnz
pop
xor
jbe
leave
loopne
test
inc
in
xor
outsl
mov
or
lcall
pop
popf
call
lods
pop
mov
cmp
sub
push
or
add
movsl
subb
sbbl
sbb
mov
jl
or
aam
and
jp
std
test
bound
xchg
jb
push
push
pushf
jl
fwait
jl
xchg
test
aas
pop
popa
jp
jbe
lret
in
lods
ret
jl
jne
lea
fidivl
ds
sbbl
cmp
mov
add
in
dec
pop
add
in
mov
pop
pop
sbb
sub
xor
pop
je
jb
dec
mov
push
daa
pop
inc
js
jge
sub
sub
stc
iret
fwait
and
pop
pusha
pushf
lods
inc
sti
aaa
loop
and
hlt
addl
faddl
jo
imul
push
lods
fildll
mov
push
mov
mov
popa
js
icebp
fcmovnu
adc
add
int3
test
jb
push
shlb
push
repnz
add
add
sbb
cmp
out
pop
inc
push
mov
cmpb
sbb
add
out
call
fsubs
outsb
cmpsb
cwtl
mov
mov
ds
imul
mov
sti
or
xor
push
data16
mov
cmp
pop
jl
pop
shlb
mov
hlt
push
cmc
sbb
xor
mov
xorl
xchg
jle
xor
xchg
ficompl
sbb
jbe
dec
mov
xor
pop
rorl
lock
outsb
push
roll
fsub
xor
out
sbb
mov
mov
xchg
dec
inc
out
jp
mov
mov
and
cmc
mov
movsl
adc
sbb
xchg
cltd
xchg
hlt
jno
adc
pop
in
cld
cwtl
fisubrs
shrb
or
or
repnz
lret
xchg
mov
push
or
sbb
push
fisubl
xor
daa
ret
aaa
add
and
push
or
fstl
push
mov
and
jnp
shll
cli
shl
or
cmp
dec
insb
lcall
mov
adc
loop
inc
and
push
jmp
pop
mov
mov
inc
adc
dec
xchg
nop
ret
add
imul
inc
cmp
jbe
ljmp
scas
push
xor
or
sbb
aaa
mov
pop
rorl
jmp
or
test
sahf
mov
test
and
repz
jnp
int
inc
outsb
sti
cmc
push
fidivrs
insl
push
loop
adc
fcompl
popa
outsl
hlt
cmpsb
sbb
pop
cli
sub
xchg
mov
inc
loopne
sbb
inc
rcll
insb
cmpsb
and
add
fildl
pushf
jmp
aam
leave
mov
lahf
call
ss
in
ja
jmp
shr
in
rcll
xor
pop
fldcw
pop
ljmp
xchg
adc
test
sahf
mov
sbb
cmp
enter
loop
mov
lods
aam
test
cld
ja
mov
inc
inc
fldenv
gs
int3
ljmp
scas
aam
xchg
addb
ret
cmp
mov
jnp
xchg
aam
xchg
pop
out
jmp
xchg
es
sub
jb
mov
sub
xchg
sub
mov
stos
and
scas
loope,pt
fadds
out
jle
or
fs
movsb
sar
or
or
xor
push
ror
xchg
or
sbb
shll
cmp
in
jae
add
sub
negl
fistpl
dec
dec
jle
addl
in
popa
xchg
jp
adc
xchg
std
repnz
sub
push
outsl
sbb
xor
mov
daa
pushf
or
sub
cmp
cld
push
imul
or
xor
jmp
cmpb
push
dec
and
ret
xor
fadds
pop
stos
adc
daa
and
mov
aas
into
xor
adc
iret
push
cmc
jb
xor
xchg
pop
loopne
lret
stos
pop
lahf
fiadds
jle
sub
ss
lock
or
push
ja
mov
jno
xor
movsl
fidivrs
dec
ret
xchg
or
cmpsb
ds
mul
add
adc
fcmove
mov
add
sarl
in
arpl
add
inc
int3
mov
xchg
movsl
out
cmp
in
dec
adc
jne
or
pop
xchg
adcb
mov
cwtl
dec
cmp
cmp
mov
outsl
push
mov
inc
mov
and
mov
mov
lcall
mov
insl
inc
mov
inc
faddp
xchg
cmp
aad
pop
sahf
movsb
cmpsl
jae
fdivrs
insl
sahf
shrl
mov
jb
call
mov
xchg
lock
shlb
push
sub
mov
xlat
cmp
push
icebp
scas
lock
loopne
sbb
stos
push
xor
cmc
test
aas
inc
movsb
fcoml
jne
xchg
xor
mov
dec
inc
fisttps
mov
mov
add
jmp
test
divb
mov
xchg
pop
imul
movsl
aas
push
pop
addb
jg
insl
sub
add
fstpt
pop
sub
mov
xchg
dec
hlt
mov
push
sub
sbb
push
pop
mov
inc
add
inc
aas
jl
push
in
and
imul
icebp
dec
pop
popf
aad
fisttps
test
movsl
test
out
das
addr16
pop
jp
pop
mov
arpl
mov
add
imul
xchg
test
xchg
xchg
mov
inc
icebp
adc
mov
add
sub
out
jne
cmp
or
xor
xchg
sahf
cmp
sbb
inc
mov
testl
mov
pop
mov
xchg
fwait
push
arpl
jle
push
ret
fidivs
mov
xchg
mov
jb
mov
jp
adc
and
sbb
pop
lcall
rclb
repz
mov
test
nop
lret
movsb
jnp
xchg
cmp
fldt
sbb
dec
mov
inc
xor
addr16
inc
push
dec
sub
inc
mov
inc
mov
js
repz
dec
push
stos
stos
sbb
cmc
xor
xchg
lods
popf
push
cs
roll
dec
sbb
fnstenv
xchg
in
cmpsb
sbb
and
sbbl
add
xchg
pop
add
push
movsl
ds
and
cmp
xor
leave
ja
mov
cmp
sub
ss
scas
and
popa
inc
ja
out
pushw
iret
add
jnp
mov
call
and
sbb
cltd
loopne
and
andl
and
push
idivb
data16
pop
fwait
repnz
les
into
and
idivb
ja
cltd
inc
loop
and
fwait
insl
xchg
aas
dec
sub
gs
pusha
add
decb
sub
mov
mov
divps
dec
cltd
shll
cmp
and
lret
cmp
sub
notb
call
mov
rcrl
sbb
dec
or
test
xchg
mov
dec
jne
push
cld
mov
push
ljmp
and
jg
dec
aas
fcoml
pop
pop
jo
jbe
xchg
insl
xchg
in
fsubrl
xchg
xor
outsl
cld
jmp
jge
jb
and
jmp
insb
jge
mov
pop
scas
cmpsb
and
stc
nop
lret
bound
imul
aad
pop
inc
xor
pop
mov
stos
in
mov
dec
ljmp
add
jb
lods
aaa
jle
jecxz
in
push
lret
inc
pushf
repnz
adc
stos
xchg
je
subb
dec
movl
fwait
push
data16
fisubrl
rcl
ret
sbb
inc
adc
dec
sub
dec
or
pop
and
push
sbb
mov
test
sbb
icebp
rol
aas
fistpll
repz
adc
pop
pop
and
aad
push
pusha
push
pop
out
cltd
popf
mov
aas
pop
mov
icebp
jmp
mov
xor
sbb
inc
ljmp
and
jae
sahf
pushf
adc
pop
mov
stc
ret
push
idiv
xchg
pop
sbb
sbb
sar
lea
nop
mov
lods
add
or
jmp
mov
push
in
fstps
xchg
adc
and
nop
xor
out
xchg
jle
jne
movsb
push
pop
nop
repz
cmp
pusha
inc
add
ljmp
not
fmull
arpl
dec
mov
cmpsb
push
lds
push
sub
adcb
inc
lret
es
xor
sbb
mov
add
push
js
dec
and
loopne
iret
lret
xchg
push
std
int
daa
ljmp
call
push
mov
pop
inc
pop
mov
test
call
subb
scas
insb
icebp
add
into
test
jne
mov
sub
xchg
dec
cmp
dec
hlt
sub
or
daa
inc
cmp
loope
int3
aas
inc
mov
xchg
daa
adc
inc
ss
push
jb
loop
mov
inc
out
push
pop
scas
shl
scas
icebp
loop
les
mov
inc
int3
cld
in
aas
pop
mov
fwait
test
inc
ret
stos
fimuls
dec
mov
jl
bound
outsb
cmp
rcrl
ret
lods
cld
test
outsl
lds
cmp
lods
fs
jno
adcb
dec
jecxz
sub
push
fs
mov
enter
jne
mov
popf
adc
mov
call
add
jge
xchg
and
pop
pop
mov
repz
jo
fstpt
dec
mov
mov
jg
or
aad
bound
cmp
popa
out
shl
mov
dec
mov
outsl
clc
es
xchg
fdivl
mov
jmp
push
call
std
pop
test
stc
cmpsl
sub
decb
mul
jno
pop
push
cmp
std
stc
fiaddl
jge
push
push
mov
ljmp
pushf
push
push
call
in
in
pop
pop
imul
mov
push
popf
dec
sbb
enter
pop
mov
sbb
sbb
repnz
mov
mov
xor
int
stc
dec
ret
lcall
inc
imul
pop
icebp
jne
jecxz
add
and
dec
ret
jl
pop
aaa
adc
jle
cmpsb
or
or
mov
and
xchg
xbegin
hlt
adcb
sub
or
movsb
sbb
lds
mov
or
daa
out
jae
outsb
sbb
add
sti
xor
ljmp
pusha
lahf
out
iret
jmp
shll
scas
in
ljmp
sahf
pop
lahf
aas
jbe
inc
rorb
cs
cmpsb
fnstsw
faddl
and
or
fwait
enter
dec
push
adc
adc
or
or
xchg
sbb
movsb
and
das
aaa
push
movsl
mov
cmp
pop
xchg
mov
adc
aam
icebp
inc
mov
std
les
push
test
and
sbb
pop
jmp
pop
call
cld
add
mov
mov
scas
andb
inc
daa
jmp
popf
pop
or
xchg
add
test
js
mov
and
inc
cmp
cld
dec
xor
and
dec
mov
sarw
ljmp
xchg
jp
das
xchg
popa
xor
je
les
scas
jmp
stos
dec
xchg
push
aam
lds
lods
push
popf
rcl
xorl
dec
inc
xor
sahf
mov
cmp
push
xchg
mov
fyl2xp1
cmp
fs
sbb
jb
movsb
mov
lods
mov
into
jl
jno
test
gs
adc
mov
xchg
shl
cld
and
faddl
daa
jb
push
int3
and
cltd
das
add
push
xchg
scas
das
pop
xchg
xchg
jne
mov
xchg
cmp
ret
xor
dec
lea
in
mov
dec
repz
sbb
pop
int3
sub
xchg
popf
sarl
mov
movl
bound
leave
mov
jmp
je
test
clc
cmp
hlt
adc
or
ja
mov
xchg
outsl
push
push
xchg
and
clc
fcomi
sbb
sbb
decb
sbb
cli
jmp
mov
dec
mov
sbb
in
lods
sbb
movsb
inc
mov
sub
sub
adc
imull
mov
push
push
push
cmp
mov
test
xchg
mov
xchg
mov
dec
fdivr
or
nop
mov
pop
lea
pop
repz
mov
dec
cs
and
js
jmp
push
push
or
and
cli
jge
inc
stos
and
je
jp
mov
or
cmp
int3
into
sub
jle
pop
ret
imul
pop
pop
or
pop
movsl
adc
pop
sub
inc
cmp
das
aaa
mov
push
test
cmp
aam
out
xchg
out
cwtl
gs
aam
adc
sbb
mov
imul
mov
and
shll
jae
dec
mov
outsl
fisubl
aad
rorl
mov
mov
push
icebp
out
push
pop
out
sub
add
lock
out
loope
and
pop
icebp
fwait
imul
xorb
pop
jmp
idivl
dec
mov
es
or
mov
xor
mov
cmp
sbb
mov
pop
lret
fwait
and
int3
mov
push
push
sbb
inc
push
aas
gs
cwtl
cmpsb
loop
dec
inc
insl
sub
inc
mov
ja
sub
or
sbbl
mov
push
je
imul
sbb
arpl
pop
pop
jbe
lahf
mov
dec
popa
lahf
and
iret
stos
xor
and
or
xorl
xchg
in
or
call
pop
andb
sub
sub
add
adc
pop
jb
lock
sub
int3
shll
jno
or
pop
sbb
pusha
pop
daa
bound
popf
mov
dec
mov
mov
std
pop
sbb
jmp
das
pop
push
arpl
add
pop
pop
jmp
xchg
push
or
vpavgw
sub
je
and
ss
jno,pn
adc
leave
loope
ja
les
cmp
sub
es
jb
pop
jmp
shlb
lret
imull
shl
sbbl
ret
lea
movsb
cli
adcl
push
sub
dec
mov
pop
ds
imul
test
addr16
xor
jbe
mov
pop
jns
xor
xor
ljmp
adc
test
sbb
mov
out
hlt
call
xor
sti
push
add
aaa
cmpsb
icebp
lock
cmp
cmp
repz
mov
dec
int3
fcmovnu
xor
cwtl
xor
gs
fnstenv
pop
mov
mov
pop
sbb
mov
addr16
or
mov
cmpsl
js
popa
popa
push
sub
push
sub
pop
and
add
pop
aas
jno
das
push
and
dec
stos
cli
cld
and
iret
jg
stos
sbb
xor
xchg
arpl
mov
add
jge
sub
push
xchg
movsl
xlat
and
arpl
gs
jg
jle
aad
push
cltd
xchg
push
outsl
out
aad
enter
sub
popa
fcomi
push
leave
jne
jp
mov
and
add
jecxz
mov
mov
stos
push
pop
push
and
push
mov
loope
adc
movsl
cs
jl
xchg
xor
test
aam
sbb
sbb
adcb
inc
lret
ret
jmp
mov
sbb
inc
fbld
push
outsl
inc
sbb
lret
bound
cmp
fdivrp
mov
repz
gs
mov
dec
shll
lret
pop
addr16
pop
lret
jecxz
mov
ret
mov
stos
dec
test
aaa
call
sbb
mov
imul
sbb
push
push
and
int
test
sbbb
cmp
push
cmp
movsl
jle
in
test
push
int3
xor
lods
xchg
pop
sarl
popa
stos
out
sbb
fpatan
dec
outsl
jge
aaa
inc
mov
dec
mov
in
lretw
adc
int
ljmp
fmuls
inc
dec
scas
mov
loope
in
jle
rorl
addr16
xchg
and
lahf
outsb
mov
mov
adc
push
test
pusha
and
mov
sbb
shll
dec
cmp
lcall
xor
repnz
mov
bound
push
dec
xchg
mov
push
gs
add
or
outsb
into
pop
aaa
fs
rorl
in
sbb
mov
adc
rclb
repz
ja
lahf
mov
aas
imul
and
cs
gs
das
insl
and
sub
and
lock
dec
dec
lods
loop
out
or
pop
popa
pushf
inc
pop
xor
dec
pop
loope
dec
or
clc
inc
push
insl
imul
xor
in
test
sbb
mov
add
inc
in
mov
inc
in
sti
sbbl
sub
fcmovnbe
in
push
ds
mov
cmp
xor
fwait
lds
lods
and
and
or
mov
repnz
pop
push
add
ljmp
pop
jne
fdivr
daa
adc
dec
xor
mov
negb
js
popa
mov
stos
mov
cmp
pop
sbb
shrb
scas
xchg
cmp
outsl
clc
das
dec
push
sbb
add
push
add
push
fcoms
fimuls
inc
jo
mov
ror
pop
pop
cld
cmp
es
stos
dec
pushf
xorl
leave
sub
into
repnz
lahf
sahf
jo
mov
out
call
stos
in
test
xor
cmpsl
ds
cmp
out
daa
xor
add
ror
mov
pop
mov
std
clc
out
xchg
cld
jecxz
std
fwait
mov
stc
cmp
jae
shlb
sub
fisubrs
add
pop
sbb
or
xchg
pop
inc
push
dec
sar
and
mov
jnp
adc
or
loope
pop
mov
sbb
or
sbb
pop
dec
xchg
das
sub
mov
in
stos
cltd
std
test
adc
vpunpcklwd
cmp
mov
cld
scas
add
add
jg
lock
aas
jmp
jbe
or
bound
jmp
push
mov
xor
test
pop
shll
lret
xor
push
dec
clc
mov
mov
int3
xor
ret
repz
das
cld
dec
inc
test
dec
xchg
or
mov
jg
jns
lret
data16
int
stos
aaa
mov
stc
movsb
divb
mov
cmpsb
xchg
insl
mov
xchg
bswap
cmp
mov
bound
mov
jbe
imul
add
adc
cmpsl
mov
shl
orb
fcoml
mov
push
imulb
aas
lret
or
adc
jns
std
ja
clc
roll
ds
stos
pop
sbb
cld
push
not
fcoml
push
hlt
hlt
test
jmp
adc
mov
xchg
lret
leave
inc
outsl
mov
mov
outsl
pop
scas
jle
enter
and
jg
sahf
sti
cltd
int
addr16
push
and
nop
movsl
mov
movsb
sahf
cmp
in
sub
loop
inc
test
loopne
repnz
lcall
or
xchg
xlat
imul
add
cld
add
jg
pusha
lods
adc
mov
jo
mov
lret
pusha
xchg
mov
cltd
sub
call
out
sbb
icebp
shrl
mov
test
sbb
sbb
movsl
adc
scas
int
or
test
xor
popa
decl
lock
pop
mov
std
leave
stos
out
scas
sbb
dec
jg
icebp
lods
dec
mov
cs
xor
testl
xchg
inc
in
rcrb
push
subl
adc
lods
in
loope
cld
sbb
jno
popf
jle
stos
dec
sub
xchg
jle
sahf
mov
cmp
xchg
stos
pushf
insl
int3
aaa
cmp
dec
fstl
std
jbe
or
adc
mov
mov
xchg
imul
adc
lods
mov
ljmp
inc
arpl
test
mov
fbld
inc
xor
mov
iret
or
cwtl
insl
mov
lahf
inc
xor
cli
cmp
push
mov
push
jmp
sbb
ror
and
sti
jo
js
hlt
ljmp
rcr
and
inc
cmp
pop
and
add
dec
xor
push
cli
fisubrl
pop
xchg
xlat
loope
int3
xor
out
dec
insb
jae
lret
mov
xor
scas
jae
daa
xchg
sub
add
sub
dec
lock
adc
ss
fsubl
movsb
call
daa
bound
cld
aam
jnp
mov
test
outsb
cwtl
dec
jb
sarb
or
or
insl
xchg
pop
inc
daa
inc
sbb
incb
jbe
jo
mov
xor
or
imul
mov
xchg
int
out
or
clc
insb
clc
lock
mov
pop
stos
dec
aam
xchg
add
leave
out
pop
push
cwtl
fwait
sub
loop
mov
pop
in
jge
int3
or
jb
fwait
push
je
mov
sahf
std
loope
jle
movsl
leave
fistps
jae
data16
movsl
add
xchg
cmp
xchg
inc
pop
subb
ds
out
mov
xor
cmp
cmpsl
adc
rclb
push
jecxz
cmp
pop
outsb
adc
enter
adc
mov
aad
push
mov
lods
loope
mov
dec
push
js
mov
sub
scas
nop
mov
rorl
mov
inc
pop
sbb
push
sub
xlat
sub
pcmpeqw
int3
test
add
mov
hlt
cwtl
mov
mov
sub
jg
imul
sbb
aad
jno
cmp
push
adc
pop
div
xor
pop
jp
fucomi
mov
popf
movsb
shr
fsubrs
sbb
dec
data16
jmp
and
and
rcrl
mov
fdivr
ficoml
mov
rcll
movsb
shlb
adc
sub
loopne
pop
ja
pop
sub
mov
stos
cmp
and
lahf
and
push
mov
popa
fimull
frstor
addr16
mov
gs
adc
dec
and
or
mov
push
pop
hlt
pop
jp
cmpl
inc
add
dec
push
ret
dec
sub
sahf
push
jge
imul
and
xor
out
mov
filds
je
psraw
fsubrl
adc
pop
inc
dec
mov
jb
mov
pusha
mov
and
repnz
fwait
dec
ficompl
shl
icebp
incb
decl
add
clc
mov
inc
ss
shr
lea
push
add
mov
arpl
mov
std
hlt
ljmp
push
ja
mov
or
les
mov
mov
ret
fwait
aam
add
jge
sub
mov
xchg
addl
decb
test
ljmp
pop
fstl
xchg
incl
pop
aaa
inc
adc
pop
cwtl
xchg
cmc
dec
ret
jecxz
or
adc
hlt
jle
in
ret
fldenv
jp
pop
sub
push
cmp
adc
cmp
js
add
inc
mov
cmp
add
cli
push
cmp
and
dec
xchg
lds
dec
push
into
sub
xchg
xchg
std
sbb
sbb
pop
pop
fdivp
cmpsl
icebp
push
rcr
cs
popf
xchg
pop
xor
pop
dec
ror
mov
movsl
fsubrl
jmp
and
mov
fsubl
out
jmp
jb
aad
lahf
inc
sub
xchg
xchg
out
push
mov
ret
pop
cmp
out
push
dec
mov
sahf
outsl
xchg
jb
les
lds
push
nop
jnp
out
add
pop
movsb
daa
insb
pop
stos
imul
mov
scas
pop
mov
fsubrl
mov
fmul
xchg
sbb
jns
sbb
jnp
fcmove
push
mov
shll
jl
aaa
cmpsl
mov
pusha
shll
push
daa
dec
pop
and
inc
push
mov
jbe
xor
icebp
mov
push
aad
fsub
nop
mov
adc
push
cltd
arpl
popf
js
adc
mov
movsl
mov
lods
imul
jae
data16
mov
ljmp
fstl
or
dec
clc
cmpsb
mov
jp
imulb
int
cmp
jb
jge
adc
adc
cmpsl
xor
cmp
xchg
mov
or
repz
je
dec
or
addps
cwtl
lcall
xchg
pop
shlb
aas
clc
sbb
out
cmp
xlat
mulb
shrb
jns
sbb
inc
mov
push
mov
cmp
pop
dec
cmp
mov
push
jo
mov
mov
pop
inc
out
fdivrp
ret
and
mov
xchg
imul
mov
pop
int
or
inc
mov
push
sbb
inc
repz
mov
xchg
ret
xor
lret
ljmp
shrl
test
sti
sbb
jnp
fs
adc
pop
push
jp
or
scas
sbb
pop
dec
mov
push
mov
movsb
inc
pop
dec
loope
aam
pop
cwtl
xor
in
xor
xchg
out
mov
lds
inc
mov
dec
sti
sub
sub
pop
jle
inc
lahf
xor
inc
mov
repz
sbb
jecxz
jl
inc
aam
imul
sbb
scas
push
mov
ljmp
jecxz
pop
mov
push
or
or
lods
add
sub
mov
push
and
xor
jmp
add
call
pop
and
ss
jmp
push
out
cmpsb
pop
aas
dec
and
lret
pop
sub
and
adc
inc
stc
loope
xchg
sbb
pop
imul
fidivrs
out
enter
pushf
or
sub
clc
test
adc
or
aaa
mov
movsl
and
lods
mov
sub
xor
mov
cmpsb
ljmp
mov
xor
pop
jecxz
push
mov
push
movsb
push
pop
subl
psubd
push
cmp
mov
inc
gs
scas
cli
or
and
push
push
dec
in
imul
jo
fdiv
pop
inc
push
and
outsl
out
and
add
inc
cmp
xor
jae
xchg
outsl
push
aaa
jg
add
mov
or
sub
and
and
or
dec
test
pop
sbb
jo
push
pusha
cmp
xor
lret
lret
loop
inc
adc
int3
out
mov
mov
fsubrp
testb
cmpsl
fs
push
sbb
es
push
stos
lahf
jne
lcall
pop
orl
das
jl
fcmovnbe
cld
xor
imul
fcoms
pop
or
mov
sub
fiadds
and
mov
rcrl
orl
pop
addl
mov
inc
pop
adcl
sub
out
aaa
repz
repz
jno
inc
xchg
push
icebp
mov
jne
das
aam
sbb
push
inc
inc
jmp
cwtl
fistpl
sub
sub
stc
mov
pop
das
xchg
xor
xor
add
jmp
aam
dec
sbb
data16
add
iret
push
cmp
push
in
lret
and
mov
cmpsl
sbbb
popf
jle
xor
arpl
leave
into
fld1
sbb
test
ret
dec
mov
les
popa
dec
push
insb
inc
inc
imul
mov
dec
inc
idivl
push
mov
movsl
or
sub
into
stos
lahf
pop
jp
xor
outsb
pop
outsl
daa
nop
mov
cmp
testb
adc
fidivrl
adcl
mov
mov
mov
sub
icebp
ftst
test
ljmp
rorb
mov
mov
jno
fsubrs
adc
bound
sub
mov
add
xchg
push
ja
and
arpl
mov
adc
arpl
test
daa
jp
pop
cmp
ret
fmuls
lret
dec
xchg
fs
and
sti
xor
xor
hlt
cli
imul
dec
adc
dec
dec
lods
sti
ja
cmp
add
cmp
in
push
test
icebp
mov
loopne
push
rep
int
pop
xchg
icebp
adc
and
push
xor
sbb
call
jne
push
inc
out
lock
lods
mov
testl
jns
popf
sbb
pmaxsw
icebp
jnp
imul
insl
mov
push
push
enter
lcall
sbb
fcomps
mov
mov
cmc
pop
pop
cmp
push
push
pushf
out
push
pop
pop
fbld
pop
jp
cmpsl
sbb
je
add
xchg
sub
add
je
call
mov
lcall
gs
jg
or
jp
pop
sbb
sar
iret
xchg
xchg
and
imul
mov
mov
bnd
fsubl
jb
jno
lcall
pop
sub
sbb
jae
aas
subb
mov
add
push
inc
iret
stos
xchg
sub
push
push
scas
adc
jmp
cmp
popa
bnd
int
pop
bound
xor
push
loope
mov
sahf
lret
fwait
cmp
sbb
push
into
mov
dec
mov
xor
push
pop
mov
outsb
mov
stos
loope
lahf
into
hlt
out
pop
std
add
push
push
push
shlb
ja
jnp
jne
adc
cmp
fldenv
sbb
xchg
lahf
sub
push
movsl
pop
popl
pop
out
popa
or
add
push
inc
jnp
loop
add
in
or
in
pop
jb
ja
scas
and
icebp
sbb
out
out
fcompl
xor
jmp
outsl
addr16
mov
fbld
out
adcb
aaa
stc
adc
sub
das
mov
pop
cltd
sub
dec
inc
pop
xchg
inc
inc
repnz
adc
add
lretw
fdivp
stos
inc
lods
lock
mov
jp
lcall
xchg
xchg
iret
test
pop
adc
repz
sub
sbb
sbb
push
sbbb
lcall
cltd
push
pusha
daa
mov
mov
push
out
pop
mov
inc
test
std
out
push
xor
stc
dec
std
jge
pop
ss
add
or
hlt
push
cltd
movsl
popf
into
push
xor
jnp
mov
aas
int3
aaa
jns
xchg
fidivl
and
jbe
rorb
in
call
pusha
loope
stc
dec
jb
sub
jne
jbe
test
add
stos
addr16
out
popa
icebp
sub
or
clc
mov
pop
push
jmp
repnz
pop
fmull
enter
jge
inc
jmp
jecxz
sub
cli
fidivs
repnz
out
xchg
repnz
lock
xor
sub
lcall
mov
call
add
scas
pushf
inc
cmp
and
enter
pusha
sbb
mov
push
push
sarb
nop
mov
mov
sbb
mov
stos
and
jmp
pusha
jecxz
mov
imul
shrl
add
pop
push
fwait
dec
dec
lds
sbb
xor
jmp
shr
hlt
out
add
xor
in
cmp
inc
add
dec
mov
sub
fcoms
cld
aad
xor
pop
dec
in
or
jle
or
cmpsl
test
mov
jb
push
fcomi
jge
ret
fwait
add
ret
jae
jbe
popa
lret
out
mov
cmp
std
lret
and
stc
scas
ret
cmp
push
inc
int
push
aam
mov
or
sub
push
jo
sub
lods
jae
lret
bound
fs
xor
rorl
pop
pop
push
add
fnstsw
or
add
push
sub
push
cwtl
mov
mov
xlat
scas
xchg
inc
lahf
pop
inc
lret
sbbl
pop
ds
or
shr
dec
dec
lds
inc
popa
add
popa
mov
out
ret
jb
sti
fisubl
lods
shll
and
pop
fisubl
push
sbb
xorb
push
pop
adc
sbb
fst
repz
adc
mov
icebp
inc
es
dec
daa
std
jnp
das
push
mov
jmp
cmp
or
into
xor
punpcklbw
inc
or
pop
xchg
int
fidivrs
xor
loopne
inc
sbb
add
dec
jmp
fucomip
mov
cmp
rorb
and
aam
cwtl
rorb
inc
decb
push
int
arpl
mov
jmp
adc
xor
lahf
ret
test
mov
push
xor
sbb
outsl
inc
pop
cmpsb
fs
inc
sbb
cs
xor
adc
jbe
repz
gs
rol
cmc
adc
sub
cli
fiadds
xor
adc
in
and
jmp
popf
into
jg
arpl
push
sub
ss
iret
inc
mov
xchg
out
fldl
loop
out
lock
cmp
arpl
leave
and
xor
mov
pop
mov
mov
call
daa
imul
mov
imul
xor
add
fisttpll
push
sub
mov
mov
insb
icebp
sub
xor
outsl
xlat
mov
inc
push
inc
push
pop
cld
sub
inc
pop
add
dec
push
das
shl
or
movsb
cmc
sub
sahf
cmp
push
mov
cli
pop
add
xlat
hlt
mov
repnz
or
inc
into
mov
fcmovne
and
jmp
push
and
add
pop
jo
jle
out
gs
test
sub
sar
addb
mov
push
hlt
aaa
mov
lds
imul
cs
mov
fildll
lock
aas
hlt
subl
xchg
into
leave
cmc
addr16
cmpsl
aas
iret
test
ds
jnp
pop
sbb
dec
lds
int3
sahf
nop
fisubrs
jmp
cmc
inc
jle
jnp
jmp
jnp
mov
stc
into
or
loope
mov
lods
inc
and
aam
fsubrs
mov
mov
add
pop
out
or
add
enter
mov
popf
lods
loopne
hlt
or
mov
mov
in
inc
xor
arpl
ja
ret
jmp
in
imul
pop
cmpl
sbb
sub
adc
pop
push
push
dec
sbb
jl
into
enter
lods
gs
xorl
cmp
scas
pop
jp
add
pop
xchg
outsl
or
loop
push
adc
and
sub
mov
inc
iret
int
jbe
mov
sub
data16
push
cmp
xor
shlb
pop
repnz
add
sarb
xor
mov
stos
jne
dec
addr16
imul
lea
pushf
cmp
addr16
stc
push
fcomps
lock
sbb
xor
lea
add
mov
sbb
sbb
dec
dec
lcall
xchg
push
xchg
pop
xlat
ljmp
mov
pop
add
push
push
push
shrb
pop
gs
cmp
icebp
stos
lds
adc
cmp
jg
dec
jbe
sbb
insb
stos
and
adc
sbbl
push
push
adc
js
pop
in
outsl
and
fildll
lea
push
inc
jns
lods
dec
lret
out
sub
outsb
dec
aas
scas
push
or
outsb
inc
jbe
mov
ss
lods
jae
pop
loop
sub
cli
push
ss
nop
mov
jg
mov
bound
xchg
dec
and
sbb
mov
orl
push
jg
pop
in
mov
sub
push
and
fisttps
xor
mov
aad
mov
and
rolb
es
and
ljmp
lock
xor
in
cmpsb
pop
aam
enter
mov
mul
cltd
add
pop
mov
in
xchg
cmp
xchg
mov
rorb
je
int3
cwtl
pop
mov
xchg
push
dec
icebp
mov
push
pop
dec
pop
dec
pop
addr16
ret
xchg
mov
mov
cmp
lret
sbbb
cmpsb
sub
pop
mov
aas
dec
fcmovnu
cwtl
cmp
ds
mov
test
inc
adc
das
into
data16
jo
mov
xchg
scas
scas
loopne
in
jecxz
and
addr16
xor
push
xchg
ljmp
notb
mov
sbb
adc
add
pop
jle
ljmp
addr16
das
cwtl
adc
call
ret
test
jno
mov
cmpb
leave
or
pop
fcomip
orl
inc
ds
movsb
addb
push
insl
sub
mov
ret
movsl
in
xchg
mov
mov
mov
in
add
adcl
fisubs
inc
and
lcall
push
sub
dec
and
sbb
sub
inc
loope
fs
rorl
iret
xor
loope
xchg
jmp
lcall
out
ja
add
xor
test
add
sbb
xlat
mov
gs
pushf
xchg
sub
stos
fwait
and
scas
sahf
cli
shrl
std
mov
loopne
pop
ljmp
dec
xchg
jb
popa
dec
ja
imulb
unpckhps
and
sbb
mov
push
push
push
shll
mov
dec
pushf
push
sbb
lods
ficompl
insl
mov
mov
inc
jns
adc
add
mov
cmpl
push
lods
sbb
inc
pop
xor
mov
pop
dec
shrb
jnp
push
jp
sbb
mov
pop
adc
cld
dec
xchg
rolb
mov
push
inc
adc
out
adc
xchg
iret
cmp
clc
andl
adc
aas
xchg
sub
mov
sbb
call
mov
adc
fdivl
mov
in
aam
aaa
arpl
jmp
mov
pop
test
mov
mov
test
mov
dec
test
sbb
lds
out
test
mov
imul
fcomi
cld
add
sahf
imul
jnp
sbb
xchg
sarl
or
loop
mull
xchg
loopne
mov
test
mov
or
cmp
call
test
scas
frstor
xchg
jmp
je
scas
dec
xor
gs
cld
push
cmp
arpl
jae
mov
or
stos
mov
leave
into
nop
orl
dec
xchg
icebp
loop
sbb
sar
xchg
stos
mov
pop
adcl
and
mov
adc
dec
jne
outsb
clc
call
push
jbe
dec
leave
adc
sbb
mov
shll
pop
or
or
jns
movsl
iret
popa
xchg
push
mov
cmp
jnp
add
ss
add
rcrb
fisttpll
or
cmp
push
je
mov
xor
mov
notl
mov
ja
inc
flds
movsl
into
fisubl
sbb
dec
mov
stc
cmp
rcr
or
test
es
sub
pop
lret
pop
cmp
push
ljmp
lahf
and
push
ds
inc
test
icebp
adc
lds
push
cwtl
xchg
push
movsl
dec
sub
aam
mov
aaa
lcall
out
xchg
xor
ds
das
cmp
mov
xor
mov
sbb
cli
mov
jmp
mov
pusha
stos
test
mov
fucomip
das
pop
xor
jp
adc
call
jmp
push
mov
in
ljmp
daa
cs
adc
aaa
xchg
inc
mov
cld
push
dec
out
fs
xchg
xor
inc
scas
int3
cmc
sbb
cmp
push
rcrl
std
lcall
pusha
lahf
xchg
pusha
push
inc
fisttpl
add
das
pop
cld
adc
inc
inc
gs
ss
mov
pop
lcall
sub
jl
cmp
and
mov
jae
call
jbe
dec
stc
lock
mov
lret
and
jmp
pop
jl
nop
clc
xor
cmp
sarl
ret
push
inc
arpl
stos
orb
inc
cs
add
in
inc
ljmp
xor
pop
pop
dec
loope
xchg
sub
or
roll
data16
mov
pusha
push
jge
rolb
push
pop
xchg
push
addb
cmp
enter
out
pop
sbb
popa
clc
cmp
pop
pop
sbb
xchg
add
fldl2e
jne
mov
pushf
and
rolb
and
popf
repz
shrb
xchg
sub
lret
inc
mov
inc
xchg
xchg
addr16
pushf
cld
sbb
fs
inc
es
jae
mov
imul
ror
fcompl
mov
pop
and
test
cmpsb
les
andb
fmulp
add
mov
lret
push
mov
jge
das
mov
lcall
addr16
fnstsw
mulb
fistps
xlat
mov
inc
mov
outsb
lahf
in
out
orl
mov
mov
sarb
cmp
xor
arpl
cmp
fsubr
sub
popa
mov
in
inc
ds
pop
pop
cmpsl
addr16
inc
repz
js
call
pop
insl
inc
sbb
add
fsubrl
aad
pusha
in
jb,pn
mov
or
adc
ljmp
push
lret
cmp
xor
mov
subl
dec
shll
push
fcomp
jmp
mov
aaa
pop
daa
and
inc
jo
pop
push
xor
cs
mov
rclb
aaa
mov
push
icebp
and
xor
scas
pushf
popa
int
sub
mov
dec
aas
mov
jns
xor
sub
pop
or
push
add
stos
imul
mov
xor
addl
stc
xor
stos
repnz
nop
test
and
sbb
sti
shr
sbb
insb
push
jb
lods
int
xor
mov
out
sub
movsb
jge
or
push
adc
mov
fcomps
repz
je
mov
cmc
fistl
jge
pop
dec
rcrb
cmc
shll
pop
adc
idivl
jecxz
ljmp
sbb
mov
sub
cmp
sbb
mov
inc
fnstsw
rorb
outsb
jne
pop
scas
inc
push
jle
out
mov
cmp
mov
leave
ja
mov
push
or
sbb
bound
jmp
or
pop
or
scas
push
loope
addl
mov
sub
dec
push
inc
xor
imul
mov
adc
fsub
orb
adc
xchg
ret
mov
add
shl
enter
pusha
inc
ljmp
fisttps
mov
xchg
xchg
jge
mov
dec
mov
push
pop
xchg
fsubp
inc
hlt
das
xor
mov
popf
xor
bound
xchg
cmp
pop
mov
addr16
outsb
mull
dec
pop
cmp
mov
push
xor
hlt
cwtl
rclb
mov
jmp
fs
inc
dec
stc
in
ljmp
sub
loop
into
xor
jns
leave
cmp
int
lods
aas
dec
mov
mov
add
dec
sbb
icebp
lds
dec
es
addr16
sbb
add
fcomps
or
mov
mov
push
xlat
insb
popf
je
xor
mov
mov
addr16
push
mov
mov
mov
sub
cmpsb
stos
sti
mov
adc
jp
xchg
lahf
daa
sbb
in
das
mov
ss
cmp
mov
inc
loopne
dec
jp
add
or
xchg
lock
push
ret
cltd
dec
jg
stc
mov
fnstenv
ss
movsb
sbb
dec
dec
jne
leave
add
xchg
popa
mov
jbe
std
inc
popa
mov
mov
pop
stos
jge
add
jns
and
push
rcrb
divb
sub
ss
aad
pop
clc
mov
push
xchg
je
movsl
mov
dec
rcll
nop
cltd
or
and
xchg
xchg
loope
inc
je
xchg
xchg
hlt
sar
ja
pop
lods
xor
cmp
xchg
xor
xchg
cltd
int
fs
mov
and
push
ds
dec
lock
mov
test
popf
std
stos
popf
sti
pusha
or
mov
push
addr16
mov
int
fldenv
sti
ret
xor
outsl
subb
xor
fmull
sbb
mov
dec
mov
mov
sub
ds
cmp
cmpl
dec
in
and
mov
gs
icebp
clc
arpl
adc
out
mov
aaa
ficoms
xor
xor
mov
xor
lds
jl
sti
adc
add
ja
lcall
divl
pop
flds
and
jp
ds
cld
and
call
fwait
adc
xchg
xlat
or
shll
lock
sarl
xchg
aad
xchg
fwait
ds
push
mov
gs
or
add
mov
xor
sub
loop
mov
push
cmp
test
jmp
in
scas
add
or
xchg
push
mov
xchg
or
mov
push
das
outsl
dec
fsubs
add
xchg
repz
jle
movsb
sub
test
xchg
aaa
das
push
lcall
in
inc
adc
popa
adc
jae
pop
lods
inc
mov
fisttps
cli
shlb
adc
mov
jns
mov
adc
xor
cmp
sub
test
xchg
inc
repz
push
bound
pop
inc
int3
sysret
and
movsb
fdivr
xchg
lret
ret
shrb
sahf
push
and
bound
lock
rclb
dec
call
frstor
cmpsl
add
jmp
movsl
push
xrelease
into
and
cltd
inc
inc
andl
jbe
adc
sbb
ljmp
and
clc
repz
ret
jmp
data16
mov
aaa
cmp
loope
mov
outsb
testb
push
dec
cld
setnp
cmp
jno
mov
dec
pop
mov
mov
xchg
mov
mov
pop
push
jbe
inc
or
push
jns
dec
popl
xchg
flds
stos
or
mov
sub
clc
or
in
outsb
dec
ss
clc
sbb
push
xchg
in
or
call
icebp
adc
testl
xor
outsb
ret
dec
in
rorl
mov
mov
int3
pop
mov
sbb
negb
pop
mov
inc
and
out
lods
cli
xchg
repz
push
out
test
add
rcr
arpl
jge
lea
addr16
int3
cmc
mov
push
xchg
add
ljmp
aad
fidivrs
cs
mov
jl
jnp
scas
and
dec
in
cli
int
repz
pop
inc
lret
lret
sub
das
test
push
test
and
mov
xor
adcb
inc
inc
jg
aaa
movsl
sbb
and
jl
loope
push
mov
les
cs
test
push
push
push
adc
pop
or
inc
or
movaps
xchg
dec
ljmp
mov
adc
cltd
loopne
cs
arpl
lcall
and
push
mov
cmpsb
mov
mov
jnp
mov
and
loope
ret
scas
repnz
cli
bound
clc
xchg
aaa
add
push
sub
ja
les
fidivrs
int
cmp
sub
movsb
and
mov
mov
sti
push
cmp
xchg
icebp
nop
sub
incl
adc
ja
out
mov
sbb
lcall
sub
lods
incb
int
sbb
inc
js
sbb
leave
jb
push
mov
nop
aaa
sbb
pushf
in
push
sbb
ljmp
ret
cs
sbb
mov
lds
mov
loopne
adc
mov
jae
popa
xor
nop
sbb
decb
addr16
out
jbe
or
jns
pusha
mov
xor
sub
mov
mov
ret
repz
gs
pop
or
lcall
add
adc
gs
mov
dec
rclb
imul
push
lret
or
pop
shll
xchg
in
jae
sbb
rorb
xor
inc
inc
pop
outsb
jmp
lds
xchg
sti
imul
outsb
out
mov
ljmp
insb
cltd
in
mov
movsb
fcmovnbe
pop
cmpsb
enter
inc
lret
mov
shll
insl
ret
inc
cmp
into
jge
loopne
lcall
cmpsl
pushf
cmp
mov
jg
mov
xlat
lods
jo
nop
xchg
mov
cli
lret
imul
mov
push
jmp
out
pop
shll
fnstcw
sbb
ljmp
jecxz
rclb
fcompl
aad
mov
add
and
add
stos
cmpsb
push
test
adc
popf
mov
xor
int
int3
shlb
std
adc
dec
or
jne
pop
ret
mov
cltd
fists
imul
stos
ljmp
mov
test
rolb
cld
push
add
push
filds
mov
jl
push
shr
bound
lahf
mov
popa
sbb
je
mov
loope
mov
inc
test
push
push
pop
into
ds
insl
daa
decl
repz
add
adc
dec
int3
mov
addr16
mov
push
ffreep
pop
imul
mov
jne
int3
or
addr16
lret
and
daa
xor
rorb
rorb
orb
mov
outsb
mov
dec
flds
dec
cs
aam
clc
aas
js
add
xchg
push
imul
mov
or
enter
push
push
testb
roll
mov
and
jl
dec
mov
jecxz
es
pop
repnz
sbb
sbb
jecxz
out
adc
incb
pop
mov
or
stos
dec
int
pop
dec
jae
pop
sbb
bound
adc
orl
movsb
mov
addr16
iret
dec
jle
int
lret
push
insb
mov
dec
dec
ja
les
dec
mov
lods
pop
and
jge
sbb
cmc
push
sahf
jnp
testb
mov
adc
jne
lret
and
jecxz
or
or
mov
std
fstl
pop
or
jmp
popf
pop
xor
bound
sahf
out
pop
sub
inc
loopne
mov
insb
out
je
jp
sbb
jno
and
mov
pop
jmp
dec
and
push
mov
mov
sbb
lods
pop
jmp
loopne
adc
dec
sub
dec
or
mov
push
add
add
jb
sbb
repnz
imul
pop
and
aaa
sbb
call
fdivrp
or
jo,pt
mov
aaa
lock
divb
jnp
pop
in
je
xchg
or
adc
jo
mov
sbb
std
sub
insb
add
iret
lds
sub
cmp
and
mov
repz
sbb
mov
mov
push
lcall
dec
dec
scas
ret
mov
xor
stos
sbb
mov
sub
out
and
ret
loope
sbb
xor
and
mov
push
fisttpll
test
aam
iret
movsb
ja
jl
out
inc
mov
or
pusha
mov
mov
bound
jo
in
push
cmpsb
or
xchg
xor
ds
mov
mov
int
icebp
xor
lahf
call
adc
mov
jmp
sahf
jmp
in
push
dec
mov
test
dec
mov
shrl
cmpsl
mov
pusha
sarb
xor
outsb
roll
mov
mov
or
xchg
cmp
ret
std
mov
iret
rcl
cmp
outsl
xor
lods
push
adc
jns
pop
xchg
push
nop
mov
push
bound
jmp
stc
out
arpl
js
and
fcoml
sarb
mov
das
xchg
sbb
push
inc
out
cwtl
add
mov
and
push
into
lods
je
pushf
ret
js
sub
jae
add
pop
mov
xchg
mov
out
aaa
add
and
clc
xor
sub
push
or
lods
inc
xor
mov
mov
rolb
dec
loope
xor
loope
cs
aam
outsl
xchg
sti
leave
stos
je
cltd
test
lret
arpl
leave
mov
rcrb
mov
add
rcll
xchg
and
inc
cltd
mov
cmp
addr16
int3
das
insb
and
hlt
mov
fwait
cltd
jle
sti
pop
faddl
inc
xchg
outsb
icebp
stc
fwait
sbb
pop
dec
xchg
cmp
sbb
testb
inc
xchg
stos
stos
cs
mov
pop
mov
icebp
aam
or
cmp
negb
mov
out
sub
and
or
fildll
adc
cli
loop
push
int
bswap
xor
jmp
xchg
cmc
outsb
push
xchg
aaa
icebp
add
ror
rclb
mov
notb
pop
into
mov
cmp
fildl
push
stos
imul
adc
stc
jo
mov
sub
inc
jge
insl
je
xlat
lods
idivl
or
or
cs
fsub
cli
lods
into
test
jae
inc
iret
mov
shlb
out
mov
sbb
lods
mov
dec
push
movsb
sbb
dec
cmpsb
insl
dec
int
cmp
aaa
mov
xor
les
std
mov
add
or
mov
sahf
jno
movsl
aad
pop
int3
inc
sub
incb
into
cmp
mov
insl
ss
xchg
xchg
xchg
dec
push
jle
shlb
inc
mov
shlb
mov
mov
aas
xor
cmp
gs
cmpsb
xchg
dec
pop
fwait
sbbb
mov
or
int
sbb
sar
pop
jge
lds
addb
dec
popa
cmp
pop
xchg
pop
test
dec
adc
xlat
mov
cmp
push
mov
in
adc
pop
add
mov
push
repz
add
ret
xor
test
insb
cwtl
and
cli
mov
pop
sbb
adc
loopne
addl
repnz
add
jns
sbb
mov
rcrl
push
bound
dec
out
in
jg
pop
push
adc
ljmp
push
and
jl
out
repnz
pop
int
pop
and
cli
mov
lahf
insl
pop
mov
pop
stos
out
shlb
test
jbe
xchg
push
sub
inc
mov
or
mov
xor
outsl
lret
push
nop
hlt
mov
jecxz
push
inc
mov
shlb
or
pusha
pop
cmp
rol
fwait
outsb
pop
pop
mov
loope
pop
in
xchg
test
mov
ds
dec
outsb
leave
cmpsb
orb
push
outsb
fs
dec
int
push
pop
fs
jge
cmpsb
add
mov
push
inc
data16
xor
dec
mov
jle
xor
inc
popf
idivl
out
ss
inc
sub
das
lods
adc
inc
cmpsl
inc
cmp
mov
sub
jne
shrb
enter
mov
fwait
rolb
pop
mov
gs
leave
test
and
fldenv
mov
pusha
cmpsl
mov
jp
push
inc
sti
dec
cvtps2pd
push
push
xor
mov
inc
ljmp
cmpsb
and
sbb
jl
stc
in
mov
pop
add
idivl
test
sub
insb
mov
push
repnz
divb
pop
push
pusha
pusha
lahf
xchg
fsubrl
pop
cmp
xchg
cs
jl
adc
xor
push
ret
pop
ljmp
flds
popf
shrl
jmp
fwait
dec
pop
xor
lods
push
dec
and
pop
xor
or
inc
jne
scas
mov
sti
xor
mov
mov
cmp
pusha
pop
mov
mov
mov
sbb
pusha
sub
mov
fmulp
loop
aas
fadds
enter
in
insb
lds
push
push
data16
ret
outsb
cmp
mov
sub
sarb
jae
stos
xchg
dec
dec
mov
mov
xchg
lret
outsl
testl
adc
pop
stc
sbb
popf
push
std
cwtl
shlb
xchg
mov
mov
xor
xchg
inc
test
jae
dec
lahf
cwtl
sub
mov
jae
je
in
mov
mov
push
dec
arpl
test
add
add
push
adc
das
dec
cmp
movsb
in
inc
and
fs
add
push
fmulp
and
sbb
popf
xchg
push
test
filds
movsl
push
in
nop
lock
outsb
shlb
xor
sub
out
and
xchg
dec
movsb
icebp
pop
xchg
add
mov
xor
push
and
push
inc
dec
dec
jb
lret
jecxz
jns
repz
lds
cmpsb
pop
andl
les
dec
lcall
adc
lahf
pushf
xchg
add
cli
nop
out
imul
inc
aaa
add
adc
mov
xchg
pop
fiaddl
lahf
push
out
inc
cmpsl
inc
inc
or
imul
push
ljmp
xchg
les
adc
cmpsb
and
data16
addr16
mov
rorl
or
mov
pop
add
xor
cld
xchg
mov
bound
repnz
loope
xor
outsl
add
sub
icebp
dec
push
sbb
or
fsubrs
sub
insl
mov
sub
and
ja
pushf
mov
jl
add
xchg
out
xchg
faddl
roll
or
sub
sub
stos
loope
ret
fldcw
and
int
jl
push
xlat
mov
ds
xor
ret
call
add
pusha
push
xchg
fsubs
aad
cmp
push
mov
push
mov
push
dec
sbb
jmp
mov
jl
rolb
clc
push
cmp
xor
sub
loopne
ljmp
enter
leave
ror
shl
add
mov
cs
imul
nop
ss
jnp
mov
call
cwtl
pop
insl
push
idivl
mov
lret
add
test
mov
in
fldcw
mov
ret
outsl
lret
fimuls
sub
push
cmp
mov
push
lods
add
rorb
mov
es
pop
into
sbb
loop
lret
mov
in
fnstcw
aas
jo
cmp
cmp
int
xchg
push
jl
insl
cs
out
inc
enter
cmp
int
jbe
mul
into
or
mov
cli
and
cmpsl
mov
psrlq
mov
push
mov
push
dec
sbb
xchg
aad
inc
sbb
push
pop
adcl
out
repz
cld
dec
adc
sbb
mov
inc
int
aam
lcall
mov
cli
adc
sbb
mov
loopne
cli
sub
mov
cli
xchg
jmp
xchg
mov
arpl
aas
daa
inc
lods
xchg
outsl
inc
sub
icebp
sbb
aad
dec
xchg
cmc
es
aas
jbe
sbb
dec
pop
cmpsl
jnp
ja
cmpsl
out
ret
imul
sub
outsb
aaa
push
jge
test
cmp
and
int3
jg
and
lock
popa
mov
xchg
js
sub
in
outsb
outsl
std
fimull
aam
in
or
xchg
fcom
cld
pop
lcall
mov
jbe
pop
rorb
pop
mov
cmpsb
dec
lret
in
imul
std
jg
xor
or
lds
rcll
cs
out
inc
or
mov
mov
repnz
movsb
mov
adc
sbb
push
std
shrb
rcl
data16
insl
push
mov
jl
xlat
mov
das
in
adc
pop
fistps
mov
fdivrp
push
lcall
orl
and
cli
add
imul
cli
sub
aas
in
jg
icebp
sub
outsb
lcall
jmp
jns
pop
sbb
cmp
adc
jecxz
dec
insl
inc
subl
nop
pushf
push
addl
into
imul
mov
rcrb
ret
inc
mov
jns
fadds
and
lret
lahf
ja
call
ja
in
dec
nop
sub
inc
xchg
call
add
add
jbe
jmp
mov
jmp
xlat
std
xchg
mov
or
imulb
nop
addr16
stos
ljmp
das
pop
shlb
dec
cmp
sub
outsl
nop
mov
ret
shlb
adc
fwait
aad
imul
lahf
leave
pop
xchg
cmpl
jge
rcrl
stos
jl
leave
fdivr
jge
in
sbb
or
jbe
call
add
or
test
lret
dec
push
es
sbb
stc
dec
inc
inc
cs
inc
shlb
cld
pop
das
mov
adc
rcrb
fwait
mov
sbb
jge
xchg
push
fcoml
mov
mov
shlb
push
mov
loopew
cmpsl
movsb
aad
add
jae
push
pop
loop
fistps
sbb
mov
arpl
mov
int
into
mov
dec
testb
push
push
sti
sbb
popl
imul
jge
lds
add
xor
mov
fdivr
push
clc
sub
push
ljmp
outsl
dec
or
mov
cmc
push
mov
nop
xchg
xchg
inc
sarl
pop
push
ficoms
in
aas
mov
lds
lods
aaa
inc
test
arpl
rcll
pop
sub
jo
cmp
xor
xor
push
sbb
cmp
mov
mov
test
adcl
sahf
xor
subl
fldl
pop
rolb
ss
xor
jmp
iret
jle
push
mov
add
test
jbe
orl
mov
mov
adc
push
xchg
mov
or
ret
inc
push
push
ficomps
xchg
test
xchg
mov
in
and
divl
outsb
xor
sub
dec
xchg
cli
mov
mov
xchg
movsb
mov
into
add
fidivrl
or
mov
jp
dec
mov
xchg
cmp
in
aaa
cmc
hlt
pop
mov
lcall
lea
jle
xchg
sub
push
or
mov
mov
aad
inc
inc
cmpl
pop
pop
or
adc
ljmp
fistl
in
into
cmp
xlat
enter
fwait
xchg
mov
lahf
loope
bound
popf
shlb
or
nop
cmpsb
sbb
sub
stos
subb
imul
mov
outsl
js
int3
fadds
lods
xchg
clc
and
das
mov
into
adc
push
mov
add
mov
insb
mov
dec
sub
jp
sub
aam
xchg
mov
or
cmp
dec
int
inc
or
addl
push
and
lcall
push
push
pop
dec
xor
add
xchg
pop
and
push
dec
test
jo
leave
fdivr
stc
into
xchg
push
loopne
lret
pop
mov
jb
dec
cmp
and
popf
adc
mov
bound
mov
xchg
into
cmp
insb
jnp
jb
movsb
push
pop
or
test
mov
push
sub
cs
jp
jno
add
jge
mov
inc
add
ss
cltd
mov
pop
popf
nop
nop
rorb
inc
sbb
mov
sub
icebp
icebp
add
int
pop
loopne
and
lods
dec
add
push
or
es
adc
add
pushf
imul
fmull
jbe
and
xchg
mov
mov
aaa
test
cltd
enter
cmp
sahf
aaa
test
clc
and
add
ss
iret
ret
or
or
jge
fdivs
jo
jnp
add
mov
push
dec
scas
shll
sub
in
add
mov
sbb
pop
xchg
cld
jl
cwtl
pop
ss
jo
shlb
pop
cmp
inc
push
mov
lods
pop
mov
jne
cmp
adc
sbb
je
pop
ret
mov
loop
sub
push
push
inc
mov
pop
dec
xchg
mov
ja
daa
xchg
imul
sub
mov
and
pop
and
fmuls
shrb
stc
js
add
pop
subb
fsubrs
mov
xchg
pop
cs
mov
mov
inc
test
repnz
cmp
sbb
inc
dec
pop
adc
xchg
fisttps
sbb
jns
lahf
push
movsl
rcr
mov
in
xor
push
lcall
test
in
add
xor
mov
fcmovb
sbb
pushf
mov
xchg
xchg
mov
jno
mov
outsl
xchg
and
cli
dec
sub
fbstp
rcl
or
stc
dec
pop
fisubrl
mov
push
xchg
popa
enter
and
dec
daa
loopne
xchg
pop
xor
mov
mov
mov
into
mov
dec
inc
or
pop
ss
mov
dec
adc
ret
xor
loop
dec
mov
pop
loopne
mov
pop
add
cmp
mov
cs
movsl
lahf
in
ljmp
xor
gs
pop
icebp
bound
rolb
sbb
insl
rol
ds
add
xor
lret
mov
jno
out
mov
popa
push
popf
push
cmpsl
test
and
jmp
test
subb
test
inc
pop
mov
inc
push
sbb
fldt
adc
dec
push
xlat
push
mov
inc
dec
popf
adc
sub
lods
adc
pop
js
insl
push
mov
jnp
lds
sbb
cli
call
aas
or
and
js
xchg
mov
add
add
scas
ss
aas
ds
stos
je
mov
or
or
scas
movsb
icebp
test
sub
imul
mov
fsubrl
jle
nop
mov
xchg
add
and
mov
mov
mov
adc
mov
push
push
jle
sub
rorl
and
sub
aad
or
mov
testb
dec
jmp
mov
push
fimull
cld
lret
pop
fdivs
cld
adc
push
scas
push
mov
loop
gs
std
enter
sbb
push
xlat
mov
jbe
cmp
ror
addr16
mov
test
mov
dec
dec
sub
xchg
inc
fistl
rcl
mov
push
rol
pop
xchg
in
das
dec
mov
imul
jno
ljmp
les
in
es
jle
push
fsub
fistl
mov
adc
decl
loopne
movsb
int
and
xor
in
pushf
and
icebp
xor
mov
xchg
xchg
pop
and
pop
mov
mov
pop
std
jle
fidivrs
js
lret
dec
repnz
in
mov
pop
push
loope
pop
outsb
adc
inc
pusha
push
test
dec
cli
adc
mov
sar
jb
dec
sub
popa
int
mov
and
cmpsl
cmc
rcr
sbb
inc
sbb
icebp
or
fcmovbe
mov
jecxz
data16
test
mov
test
shlb
push
push
sarl
sbb
sub
push
mov
xchg
inc
sar
jle
cmpsb
imul
mov
scas
jmp
xchg
daa
sbb
xor
ret
mov
pop
ficoml
mov
fidivs
pop
scas
aaa
loop
in
xchg
jg
fsubr
mov
addr16
push
dec
and
pop
pop
mov
inc
jae
jge
je
push
add
stos
fdivrs
push
push
xchg
add
push
dec
add
shlb
dec
push
mov
cwtl
cmp
loopne
mov
call
out
mov
xchg
leave
popa
into
fnsave
mov
adc
sbb
ficoms
and
jae
inc
fbld
or
or
and
ja
enterw
in
test
mov
add
sub
push
imul
push
call
mov
leave
xor
pop
lods
pop
shll
aam
push
xor
add
test
lods
ret
je
icebp
push
sub
imul
lods
nop
daa
pop
enter
lods
lcall
add
inc
iret
mov
sub
in
xchg
mov
addr16
into
out
jl
mov
pushf
fiaddl
dec
push
test
pop
mov
je
jo
xor
dec
lea
dec
pop
mov
jl
in
cmp
pop
outsl
andps
inc
into
nop
push
add
cmp
sub
fistl
pusha
sarb
xchg
addr16
mov
xchg
loopne
jl
jle
mov
stc
shll
pmaddwd
movsb
sbb
inc
cmp
loope
jg
xor
call
imul
scas
pop
jecxz
stos
add
add
jp
out
shlb
aas
hlt
add
out
dec
jne
imul
adc
xchg
loop
xor
sbb
bound
or
and
and
cld
mov
push
cmc
jo
add
inc
mov
adc
shlb
std
das
stos
addr16
mov
cmp
arpl
call
cmpsl
fwait
or
fcmovb
or
add
pop
pop
cmp
jo
and
es
dec
insl
dec
jg
loopne
repz
push
and
cs
ss
mov
or
out
push
dec
fisttpl
out
outsl
movsl
ficompl
jmp
test
jmp
cwtl
inc
insl
adc
mov
jno
xor
push
pop
popa
fildll
daa
pop
popa
bound
dec
push
stos
sbb
sbb
jbe
mov
dec
or
push
dec
fstps
mov
lret
add
mov
mov
inc
into
xor
and
xor
mov
out
xor
insl
movsl
dec
mov
shll
jmp
movsl
mov
inc
fistps
push
pop
faddl
cmp
jbe
inc
inc
sub
push
outsb
mov
pop
fildl
and
and
adc
pop
mov
cmc
jge
fwait
and
shr
cli
out
push
cmp
in
mov
inc
xor
mov
xor
clc
push
fs
ret
aaa
loopne
mov
inc
cmp
int3
mov
inc
adc
scas
and
mov
movsl
pop
mov
lcall
cmpsb
push
hlt
pushf
out
rorb
fnsave
fldenv
jmp
cmp
mov
sarb
popa
dec
push
insl
push
out
test
add
dec
out
scas
test
mov
mov
mov
das
jo
jecxz
adcl
xchg
mov
mov
adc
fwait
and
lods
add
jl
pop
cltd
add
scas
dec
pop
push
dec
ror
and
lods
inc
cmp
inc
xor
inc
push
mov
xlat
pop
repnz
adc
mov
pop
loopne
sbb
aad
iret
xor
pop
incb
repz
push
mov
lahf
fildl
js
cli
jne
movsl
mov
xor
pop
popf
sysret
mov
sub
cmp
stos
jne
xchg
repz
pop
mov
push
mov
loopne
out
fdiv
lret
fildll
test
xor
sbb
lret
jg
jnp
dec
rol
or
xlat
nop
rorb
ret
xchg
sbb
notl
mov
insb
imul
dec
pusha
movsl
sbb
ljmp
ret
jb
mov
cwtl
xchg
xor
sub
popa
push
add
test
vmwrite
sub
add
scas
mov
and
push
dec
sti
pop
popa
xchg
sahf
cmp
sbb
in
inc
lret
popf
adc
sarb
hlt
hlt
and
out
sub
sub
test
into
xchg
ljmp
sub
aas
jmp
idiv
sbbb
rolb
pop
sbb
mov
out
cmp
fsubrp
cmpsl
aaa
dec
jp
ds
dec
adc
clc
jmp
cmc
aad
xchg
sarl
pusha
arpl
test
cmp
adc
push
sahf
sub
cmpsb
lea
mov
mov
ja
mov
hlt
push
or
cmp
dec
pop
out
xchg
jnp
hlt
add
inc
xor
nop
ja
outsb
inc
jno
jecxz
or
jne
jne
ret
decb
loope
sub
stc
push
inc
push
jae
pop
std
arpl
dec
insb
inc
dec
jne
loopne
test
xchg
xor
and
lahf
fildll
pop
xor
cmpsb
pop
adc
test
mov
mov
mov
testb
add
test
into
and
rcll
out
jnp
lea
inc
shll
cwtl
aas
popf
cmpb
int
xchg
sbb
das
mov
stc
jnp
enter
dec
mov
adc
clc
addr16
adc
addb
aas
cwtl
xor
sub
and
lds
cmpsb
jns
loop
outsl
aaa
in
push
and
out
lahf
jmp
xlat
mov
mov
lods
xchg
push
jle
adc
rcr
insl
push
and
inc
jae
fs
sbb
mov
iret
icebp
ds
jecxz
mov
inc
xchg
es
sbb
in
dec
fistps
lcall
dec
push
inc
xchg
mov
cmpsb
push
dec
mov
mov
sbb
push
jae
push
or
fadd
xor
call
inc
sahf
jmp
pop
or
jnp
jecxz
pushf
sbb
stos
push
shll
inc
jns
test
push
ja
enter
mov
fstpt
call
push
jge
cwtl
not
ljmp
stos
push
lret
or
cmp
add
lea
cmp
cmp
pop
sbb
xchg
stos
int
xor
adcl
dec
jecxz
xchg
fadd
adc
jno
jbe
add
add
dec
cld
dec
xchg
jne
pop
ss
sbb
and
mov
cmp
pop
cmp
cwtl
ja
sahf
adc
pop
sub
cld
xchg
jp
xchg
imul
dec
push
xor
push
xchg
and
push
hlt
in
push
push
icebp
outsl
data16
enter
mov
jl
or
push
xchg
clc
sub
or
insb
int3
xchg
sbb
jle
add
mov
dec
adc
stos
mov
cmp
xor
lods
cld
xor
jecxz
enter
and
cwtl
in
xchg
data16
push
into
xchg
lea
cs
inc
pop
out
xor
sub
notl
or
or
stc
xor
push
out
cmp
out
mov
cmp
hlt
add
cmpsl
pushf
pop
lods
inc
pop
cmp
loope
mov
sbb
loop
sub
push
jnp
mov
lret
sub
incb
lock
fsubp
jp
lock
fsubrl
xor
mov
daa
mov
jl
adcb
mov
mov
xor
mov
sub
adc
or
sbb
faddl
sbb
cmp
xor
jp
stos
test
ds
addr16
and
inc
adc
aam
icebp
pop
mov
sub
dec
out
pop
push
xor
or
aam
sahf
push
iret
aam
lock
leave
ds
pop
adc
sbb
sbb
lea
arpl
fisubrs
sahf
dec
cwtl
movsb
xchg
imul
jmp
fnsave
jns
sbb
rol
insb
add
ror
jle
test
mov
pop
int
mov
mov
outsl
inc
loop
arpl
cmc
pusha
outsb
popf
push
or
push
pop
xor
jmp
pushf
pop
cli
outsb
or
mov
stos
mov
popf
cmp
or
lcall
fwait
add
dec
inc
sar
stc
out
in
dec
out
mov
xor
inc
cmp
cmp
in
xorl
cwtl
cld
stos
and
xor
inc
daa
or
sub
outsl
lods
popa
stc
aaa
jae
repz
sub
js
mov
pusha
pop
pushf
pop
out
pop
pop
cmpsb
jns
loop
lea
add
incb
imul
push
push
or
repnz
inc
push
imul
adc
out
int3
push
jb
cmc
outsl
sbb
jle
lds
push
push
xchg
aaa
adc
lea
bts
mov
bound
inc
pop
stos
xchg
ret
aas
aad
cwtl
sti
dec
sbb
movsb
or
jns
mov
arpl
pop
dec
add
and
lea
xor
add
fldl
cltd
lret
sub
xchg
sub
stos
pop
data16
sub
inc
inc
lret
enter
push
addr16
jmp
insb
aad
or
scas
cwtl
push
imul
mov
mov
cli
popa
cmc
dec
mov
or
cwtl
mov
jne
sbb
jmp
cmpsl
fistpl
popf
add
and
push
xchg
jo
dec
fidivrs
rclb
rolb
icebp
jge
ret
jne
ds
push
sub
add
iret
insb
and
stos
jecxz
sub
sbb
pop
inc
outsb
sarl
add
stc
mov
xchg
stos
mov
movsl
cmpl
imulb
xchg
aas
cmc
inc
clc
clc
pop
std
cwtl
jle
subb
icebp
mov
stc
mov
add
jg
and
repz
test
orl
fcmove
xlat
insl
imul
pop
out
aaa
fnsave
adc
sbb
xor
xchg
out
and
pusha
xchg
xor
cmpsb
shrb
pop
xchg
fisttps
sahf
cs
push
xor
xchg
fcoms
inc
mov
sti
add
mov
and
cmp
mov
mov
dec
cmpsl
sbb
xchg
mulb
mov
mov
mov
testb
mov
mov
mov
inc
jnp
rclb
das
cmpl
dec
lret
inc
js
or
gs
add
in
xchg
lahf
pop
pop
sbbb
ja
inc
dec
fs
ja
adc
or
ficoms
push
mov
mov
cmp
fwait
push
testl
dec
sbb
mov
mov
inc
scas
xchg
test
pop
cwtl
int
gs
add
insb
and
xor
push
mov
dec
imul
add
or
pusha
fsub
mov
aad
adc
out
lcall
in
cmp
pushf
or
mov
cs
aad
fdivr
stos
ljmp
xchg
les
aaa
pop
add
add
hlt
shr
gs
mov
cmpsl
in
jmp
and
shl
mov
call
iret
xchg
xchg
sti
and
lds
loope
shlb
xchg
fwait
pop
jnp
insl
mov
add
das
mov
in
push
ret
sbb
mov
pusha
jns
cld
inc
cmpsb
loope
rcrl
dec
clc
iret
jle
aaa
and
inc
data16
addr16
scas
xchg
and
mov
inc
cmpsl
pop
pop
pop
or
cld
xor
add
dec
ficoml
adc
mov
and
push
jne
je
hlt
add
dec
lahf
std
cmpsl
pop
push
pusha
movlps
mov
sub
aad
shll
push
mov
and
andl
push
andl
xchg
jmp
push
fldcw
xchg
gs
inc
mov
mov
inc
add
jmp
or
xor
std
pop
imul
jb
int3
cmp
ficoml
add
shll
sbb
xchg
out
ret
xchg
leave
pusha
lret
sbb
adc
push
js
test
shll
and
out
shll
or
lcall
aad
mov
pop
and
rorl
js
fwait
ss
adc
push
in
inc
cld
jmp
popf
rcrb
in
mov
imul
fwait
or
xchg
ss
push
cwtl
xchg
mul
repz
leave
lock
dec
fidivrl
mov
xchg
repnz
push
inc
xor
xchg
pop
jbe
pop
test
out
mov
ret
pop
adc
ret
pop
out
in
fdivrs
stc
addb
xor
ja
xchg
cmpsl
or
int
push
dec
std
in
pusha
pop
stos
stos
call
call
fcomip
mov
xor
clc
push
js
and
imul
fst
push
sar
xchg
dec
mov
or
push
jnp
pop
sub
pop
movsl
mov
shll
push
push
pop
and
pop
cli
js
insb
fisubrs
and
nop
pop
sbb
aam
lods
push
rorl
xor
jle
dec
mov
jmp
push
mov
sub
cwtl
stos
mov
outsl
iret
movsb
clc
or
loop
add
mov
std
sti
adc
rorb
insb
cmp
jl
mov
xchg
test
mov
pop
mov
pop
push
je
xor
jg
out
or
mov
out
adcb
sub
sbb
aaa
cmp
das
out
pop
cs
mov
or
rcrb
mov
cmp
dec
ss
push
loope
adc
imul
adc
dec
add
jp
fwait
xor
popa
push
repz
cmp
and
pop
pop
cmpsb
out
dec
inc
adc
cmp
pop
stc
dec
ja
mov
into
xor
ret
xlat
adc
add
cmc
pop
jp
jecxz
shrb
sub
jecxz
outsl
stos
popl
pop
or
push
mov
inc
pop
andnps
mov
idiv
aam
sbb
mov
xchg
and
imul
push
enter
or
ljmp
and
xchg
mov
ret
outsb
outsb
test
push
dec
test
inc
out
popf
cmc
mov
push
ja
into
lcall
imul
je
xchg
test
sbb
or
cmpsb
out
call
int
out
pop
fistpll
inc
leave
inc
loop
mov
pop
xor
fildll
stos
jge
adc
ss
cmc
pop
shll
xchg
sub
adc
xchg
inc
add
inc
xchg
mov
dec
es
add
inc
jo
imul
sbb
shlb
lret
nop
lcall
in
pop
cld
test
inc
ret
das
pop
cmp
mov
cwtl
test
or
sub
fisttpl
fists
in
mov
inc
mov
leave
sahf
dec
pop
jle
mov
mov
lods
inc
dec
dec
pcmpgtw
ret
loopne
dec
xchg
dec
in
call
jnp
mov
xchg
orb
ljmp
sti
inc
mov
int3
sbb
jp
sbb
in
jge
std
mov
sub
dec
jmp
pop
fists
je
dec
mov
dec
push
mov
clc
lock
dec
cmp
sub
adc
cmp
out
mov
pop
push
dec
dec
fldl
je
test
incl
mov
mov
cwtl
add
pop
add
push
call
add
outsl
mov
out
mov
movsl
jl
ds
mov
mov
sbb
test
sbbl
jecxz
pop
outsl
iret
cmp
pusha
inc
push
adcb
loop
sbb
add
mov
cmp
fxch
and
aam
loop
fildl
mov
xor
movsb
insl
or
mov
stc
push
mov
rorl
das
fistpll
cli
adc
rorb
lds
add
data16
stos
out
add
pushf
aad
fcmove
in
les
pop
jp
mov
xchg
xchg
sahf
lea
repnz
adc
jl
xchg
dec
cmpsl
lods
push
sbb
aaa
in
clc
mov
roll
push
cmp
sbb
mov
jmp
xlat
subl
push
jae
ljmp
aad
or
stc
dec
pop
out
inc
or
hlt
clc
pop
add
test
lds
loop
in
dec
xor
lods
lods
sbb
pop
cli
popf
cmp
xchg
pop
outsl
ret
clc
stos
daa
push
and
push
fsubs
mov
cwtl
dec
das
push
mov
pop
stc
push
fldcw
fs
xor
arpl
and
xlat
iret
mov
sub
pop
stos
std
or
enter
shr
hlt
xchg
inc
ljmp
push
inc
mov
mov
lret
mov
mov
icebp
out
popa
mov
ljmp
xlat
clc
xchg
test
je
mov
xor
dec
push
inc
or
insb
comiss
addr16
sahf
cmp
cmc
push
test
decb
mov
gs
out
sub
mov
xchg
aam
cwtl
jno
outsl
mov
fstps
jmp
adc
cmpsb
cld
shlb
adcb
popl
xchg
inc
mov
ucomiss
push
sbb
xor
lods
and
xlat
addb
fisubl
loop
jnp
ret
jbe
mov
ret
lods
push
mov
in
in
add
xchg
ffree
ficompl
mov
jo
shll
mov
sbb
ficomps
or
dec
jae
mov
mov
call
inc
out
test
jp
mov
cmp
push
push
xor
testb
je
xor
add
loope
lods
cmpsb
jle
addr16
push
clc
fabs
mov
jle
mov
ret
jl
jne
sub
pop
movsb
rcl
mov
xor
andl
mov
testl
sub
add
in
dec
pop
out
push
and
lock
mov
fucompp
dec
pop
fcoml
add
xchg
mov
neg
sbb
lods
pop
scas
test
sti
sub
insl
fs
cmp
rcrl
cmp
pop
adc
jmp
pop
cwtl
in
adc
mov
and
mov
jnp
lods
mov
ret
jno
imul
sub
add
cmpb
ja
lea
ja
scas
jecxz
loopne
outsl
repz
pop
jbe
push
into
push
ret
icebp
jno
push
cmp
fstpl
out
cmp
cwtl
xchg
xchg
adc
cmp
inc
mov
out
shrl
out
jmp
pop
ret
inc
es
faddl
jne
xor
or
ret
aaa
sbb
mov
arpl
mov
in
pop
outsl
imul
out
push
jmp
outsb
mov
or
or
jnp
cmp
jo
dec
dec
ds
pop
adc
pop
mov
xchg
hlt
out
inc
push
test
push
sub
cld
inc
mov
idivb
arpl
adc
adc
push
sbb
pop
fistpl
xchg
dec
inc
fidivs
stos
pop
out
push
insb
in
int3
int3
nop
in
mov
xchg
dec
lds
sub
cs
inc
push
mov
xor
mov
dec
xchg
jecxz
xchg
inc
xor
mov
sbb
incl
xchg
inc
in
jns
mov
stos
sub
or
jp
aad
ret
xor
mov
pop
mov
idivl
mov
mov
push
cmpsb
popa
and
lret
dec
ja
lcall
jae
mov
jle
arpl
jne
nop
fisubrl
pop
pop
inc
adc
movsl
stos
push
dec
jns
xorb
dec
inc
addb
mov
in
adc
nop
rol
dec
cli
adc
mov
in
inc
scas
into
xor
or
pop
sahf
jge
outsl
xor
jo
inc
sbb
mov
push
int3
mov
dec
cld
sbb
popa
test
mov
push
or
push
lds
cld
fs
rolb
adc
xor
das
insl
out
pop
leave
shlb
rcrl
cltd
ret
mov
test
fdivp
sar
test
pop
jo
push
fcomip
cwtl
int
outsb
mov
cmp
inc
lock
mov
sahf
enter
add
das
sahf
jecxz
iret
iret
movsb
push
jo
bound
js
test
pop
pop
scas
push
pop
or
in
arpl
sbb
mov
sub
xor
pusha
lret
push
inc
lds
mov
call
mov
lret
jae
aaa
mov
mov
or
jo
fs
outsl
pop
into
subb
xchg
add
bts
push
sbb
or
pop
cmp
stc
outsb
ss
push
mov
es
insl
mov
sub
mov
and
mov
pushf
sbb
imul
mov
insb
out
mov
mov
std
xchg
adc
dec
iret
pop
jge
fwait
mov
out
sbb
push
filds
cmp
sub
frstor
cmpsb
sbb
pop
and
adc
in
jg
mov
adcl
inc
push
fldt
test
mulb
test
scas
jp
push
iret
xlat
out
mov
in
pop
xor
add
fisttpll
adc
sbb
ds
pop
test
mov
jns
pop
inc
or
mov
andb
ja
ficoms
xchg
in
shlb
dec
into
out
imul
push
jnp
movsb
ds
sbb
xchg
ret
add
mov
pop
int
xchg
test
aas
cmp
adc
pop
sub
or
daa
fisttps
jnp
shlb
sub
pop
mov
pop
jl
pop
lret
push
inc
adc
or
cltd
pop
pop
mov
leave
pop
out
movsb
pop
push
mov
mov
insl
ss
mov
call
and
mov
int
ret
add
mov
negb
addb
daa
xchg
mov
xor
je
clc
iret
jg
inc
insb
ss
mov
lods
repz
xchg
gs
test
jbe
in
ja
add
aas
xchg
inc
xorl
jp
popf
outsl
add
add
push
mov
cwtl
sti
mov
add
mov
lods
pop
movb
inc
aas
xchg
movsb
std
cltd
cmp
scas
pusha
jno
adc
dec
cmp
adc
das
icebp
fisttpll
fdivr
lods
sub
adcb
jmp
push
jecxz
fidivs
mov
outsb
sub
add
add
cmp
mov
adc
pop
stos
popa
mov
leave
jo
add
add
sub
mov
daa
jmp
adc
scas
clc
fcomi
jecxz
push
dec
jg
fists
into
xor
pop
sub
ljmp
icebp
xor
or
aas
jge
xor
push
popa
push
and
push
xchg
mov
aad
push
xchg
mov
mov
pop
fisubrl
daa
loope
pop
fsts
rorb
int3
fidivs
rcrb
and
mov
bound
js
or
js
popf
mov
mov
rolb
inc
mov
mov
dec
dec
and
jge
shlb
outsb
popf
jb
push
fs
cmp
shrb
mov
mov
push
adc
lret
push
and
jl
mov
pop
rcrl
add
pushf
push
xchg
sbb
std
sbb
pop
into
lgs
mov
dec
mov
adc
dec
jmp
lods
cmp
mov
fsts
mov
pop
ja
in
mov
aas
jg
iret
mov
outsb
in
cmp
xchg
mov
jns
iret
push
or
xchg
test
aad
dec
jae
enter
in
daa
std
cs
cmp
lahf
imul
fldpi
mov
dec
sub
incb
andb
imul
fstps
add
loop
iret
leave
push
aam
xor
loope
test
jae
mov
cmc
popf
pop
pop
adc
test
into
mov
pop
stos
bound
pop
lret
ret
fistl
mov
sbb
jg
test
andl
rcrl
movsb
add
icebp
ret
into
dec
cmp
nop
sbb
aad
pop
pop
jne
icebp
mov
xor
mov
cmpl
out
fwait
mov
adc
cvttps2pi
out
popa
in
mov
mov
or
roll
xchg
pop
jo
in
int3
xchg
mov
incl
or
rep
jb
mov
cmpb
jns
jns
cmp
out
xor
and
jmp
je
loope
mov
stc
cmp
adc
sub
data16
lret
cmc
lcall
jae
xchg
lds
mov
call
rcl
lods
ja
pop
inc
dec
out
jle
or
mov
jnp
negl
xor
loop
out
clc
adc
out
mov
inc
lea
outsb
hlt
mov
add
test
mov
lcall
fdivrl
das
cmpsl
movsb
mov
bound
mov
push
loope
and
mov
sbb
sarb
fsubs
sub
mov
ror
xor
lea
fmull
insl
mov
ror
jge
sarl
aad
adc
mov
cmpsb
js
mov
pop
cwtl
std
pop
std
mov
in
or
sbb
lods
cltd
mov
insl
sbb
notl
rol
add
inc
pop
push
xor
mov
jno
ja
cmpsb
cmp
push
pop
ret
pop
push
jp
je,pn
sti
lock
cmp
mov
das
lret
xor
dec
ret
dec
lea
adc
cmc
jecxz
xchg
ds
sub
daa
mov
cwtl
push
gs
jmp
adc
jmp
shll
mov
mov
xor
mov
data16
in
sarl
mov
lcall
cmpsb
fstpl
out
xlat
clc
xor
xchg
fs
aad
pop
jb
lock
jo
ret
xchg
and
mov
mov
out
fwait
or
sahf
dec
sti
addr16
xchg
cmpb
jecxz
insl
push
mov
dec
sarb
cmpsb
or
repz
inc
sub
xchg
test
push
aam
xor
adc
into
aad
jbe
sbb
xlat
or
xchg
lret
jns
or
jno
jle
jp
sub
cmp
das
loop
sbb
je
repz
jl
fisubrl
aam
adc
leave
pop
test
popf
add
push
cli
js
int
mov
push
mov
insl
mov
sbb
aad
mov
out
or
mov
cmp
es
lcall
lret
lods
lock
mov
push
fsubrs
sbb
stos
daa
or
jb
jg
shr
pop
nop
mov
add
mov
das
xchg
mov
add
add
testl
xchg
xchg
stos
jne
mov
dec
pop
fnstenv
xor
outsb
ret
fwait
and
pop
lcall
mov
mov
into
in
arpl
ss
idivb
push
push
subb
imull
rolb
cwtl
in
dec
pushf
mov
fbld
mov
ja
mov
xlat
lds
pop
mov
mov
cld
xchg
dec
ficomps
xchg
popf
cmp
and
in
inc
lea
mov
fabs
add
stos
inc
sbb
fs
ret
xchg
faddp
shl
jl
inc
mov
mov
fsubrl
mov
add
loop
and
stc
xchg
sub
sbb
lods
push
jo
add
aam
leave
xchg
mov
sbb
loop
icebp
mov
cmp
cli
ret
filds
sub
loop
mov
mov
xor
rcrb
movb
push
pushf
rclb
push
testb
loope
cmpsb
fcomip
xor
jns
in
sbb
cmp
cmp
add
lcall
xchg
mov
push
cmp
sub
mov
lods
in
sub
inc
out
mov
aad
and
insb
add
add
bt
inc
adc
cmp
dec
xchg
push
movsl
pop
add
stos
lret
push
loope
or
aaa
mov
int
pop
sub
sbb
mov
xchg
jge
push
or
das
sbb
insl
pop
fbstp
jb
enter
psubusb
outsb
ret
jae
sbb
pop
mov
aam
cmp
test
into
es
xchg
jbe
fucom
sub
pop
stos
jo
push
add
sub
fldenv
loop,pn
mov
jne
repnz
adc
sbb
addl
dec
jnp
movsl
cmp
push
jge
mov
lahf
notb
repz
adc
pop
xorl
xor
cmp
pushf
mov
mov
ffree
and
push
add
dec
es
insl
mov
sub
stos
out
adcl
adc
or
jne
test
shl
cs
bound
and
aas
stc
scas
xor
jl
daa
or
mov
out
cmp
arpl
loope
push
lret
and
sbb
inc
movsb
add
cmpb
dec
xlat
out
pop
lret
jecxz
outsb
aas
mov
int
dec
jle
sbb
iret
cmp
xchg
test
stc
and
rolb
stos
fldcw
push
fidivrs
dec
insb
and
inc
sub
inc
mov
dec
ss
or
xor
dec
cmp
jle
fstpt
jns
mov
pop
lahf
pop
mov
insb
inc
dec
xor
dec
add
sbb
xor
cs
push
test
mov
or
lds
or
negb
aad
jb
jp
xor
hlt
xor
sahf
xchg
rcrl
pop
das
pop
dec
rorb
dec
sbb
movsl
mov
jbe
std
scas
mov
pop
lds
int3
bound
jo
or
mov
mov
stos
sahf
push
add
fsubl
ss
movsb
jo
mov
inc
shrl
rol
andl
test
ss
negb
cmp
sbb
mov
cmp
imulb
fwait
hlt
pop
sub
test
sti
ss
inc
or
xor
out
cmp
mov
mov
std
out
cld
sub
stc
adc
jp
mov
in
int3
xchg
and
xlat
lret
and
adcl
fsubrl
inc
mov
ret
leave
gs
jb
fidivrl
dec
sub
mov
scas
shrl
or
jbe
insb
add
vmaxps
flds
cmp
inc
hlt
ficoms
loope
outsb
loope
scas
jb
inc
out
xor
subb
dec
imulb
aaa
call
push
mov
test
xchg
xor
loopne
or
loop
insl
lds
cmp
adcb
pushf
lret
out
mov
ficompl
je
xor
jnp
xchg
xchg
push
or
ss
andl
inc
in
xor
pop
sub
jecxz
out
or
mov
int3
add
ljmp
lea
btr
insl
dec
orb
cmp
push
mov
pop
sbb
in
adc
sarl
mov
cmp
movsb
popa
cwtl
pop
data16
inc
push
inc
pop
jbe
cmc
jecxz
mov
lcall
xor
push
and
subl
mov
fmul
sub
js
mov
sub
or
scas
or
push
lea
or
lods
mov
jne
dec
repnz
cs
in
cltd
push
jg
sub
movsb
aas
cmp
mov
xchg
mov
pop
fstp
out
sub
outsb
sbb
mov
mov
adc
fiadds
in
sub
stc
mov
popl
shrl
mov
repnz
addr16
adc
ja
inc
mov
mov
test
sub
push
daa
std
jne
stc
pop
push
pop
mov
cmpb
inc
xchg
stos
pop
cmpsb
mov
jmp
jnp
inc
and
jno
mov
fimuls
fnsave
xchg
das
fcmovu
nop
ss
stos
cs
aaa
daa
arpl
in
cmpsb
js
xor
lahf
lret
inc
xlat
aad
mov
cmp
lret
mov
dec
std
stos
mov
rsm
mov
cmpb
popa
testl
push
xor
out
outsl
add
xor
std
loop
cmp
pusha
mov
sub
mov
arpl
lds
dec
daa
sub
mov
or
sti
lret
pop
pop
call
leave
mov
sbb
add
adcl
gs
incl
xchg
push
add
mov
dec
stc
daa
out
popf
mov
cmp
or
dec
xorl
push
pop
lcall
int3
push
cmpsb
pusha
cmc
xchg
pushf
push
sbb
or
iret
jns
sar
inc
push
pop
mov
cmpsl
push
add
out
or
lock
or
sbb
jns
lods
fs
xchg
imul
mov
xchg
push
pop
filds
repnz
nop
fidivl
sbb
cmp
clc
xor
test
or
xlat
bswap
outsb
jo
movb
xlat
into
lret
jae
jecxz
fildll
cmpsl
mov
mov
and
sbb
psllq
lods
sub
push
das
inc
mov
fcmovnu
push
add
pop
sbb
andb
adc
jno
loop
fwait
xchg
xchg
test
mov
rsm
pop
cld
xor
and
cmp
int3
add
cmp
std
pop
gs
inc
icebp
adc
jne
cli
stos
popf
jmp
xor
or
dec
fisubs
jno
mov
decl
add
enter
frstor
hlt
out
xchg
outsl
jb
sbb
stc
fsubrl
in
push
xor
jl
fldcw
loop
inc
notb
jno
ljmp
cs
sbb
sub
or
push
inc
mov
sbb
dec
fs
mov
loopne
add
imulb
loopne
cs
aad
cwtl
testl
dec
xchg
jno
orl
pop
dec
sub
xor
adc
inc
push
xor
arpl
fbld
xchg
xchg
adc
call
and
pop
test
push
flds
bound
jns
sub
aaa
xchg
cld
mov
cmp
and
jbe
inc
jbe
pop
orl
jmp
push
push
inc
nop
orb
jo
jp
ja
xor
fildll
popf
dec
lock
mov
jmp
mov
imul
repz
xor
pop
jg
aam
inc
into
mov
or
xchg
mov
pushl
xor
pop
cltd
push
fisubrl
sbb
in
cmp
popf
sti
mov
xchg
loop
mov
and
inc
or
adc
bound
out
cltd
dec
adc
lods
cmp
fidivrs
fs
adc
sti
popa
mov
jg
cltd
mov
popl
test
mov
sbb
mov
sbb
sub
mov
lcall
jmp
cmp
pop
imul
stc
test
adc
ds
sbb
and
adc
sar
sar
jmp
pop
imul
rclb
insl
testb
push
rcrb
gs
ret
mov
pminsw
sbb
cmc
shl
jp
or
mov
push
mov
int
into
xchg
insb
adc
push
adc
or
fs
mov
add
pop
push
xlat
sub
xchg
out
gs
mov
icebp
and
rcrb
mov
and
cmp
inc
jo
mov
mov
adc
loope
mov
jl
jmp
push
mov
lods
sub
mov
rclb
sti
mov
add
cmpsb
or
popa
push
lret
xchg
dec
lds
add
je
pop
sbb
lret
inc
pop
scas
je
xchg
push
pop
pop
mov
dec
xlat
popa
push
aam
sbb
cmp
mov
ja
pop
jae
loopne
lods
add
lods
scas
push
aas
mov
add
push
test
int
stos
mov
pop
movsl
out
xchg
ljmp
lds
rorb
push
pop
test
mov
sub
cld
xlat
or
mov
sub
fwait
dec
out
dec
mov
mov
movsb
cmp
pop
lret
test
or
and
jecxz
push
adc
xchg
push
ret
and
insb
test
cld
test
sbb
push
repnz
cli
xor
ljmp
xor
adc
cmp
push
repnz
xor
xchg
mov
push
in
das
mov
or
jmp
repz
ret
xchg
lret
add
xchg
sub
rcll
loop
xchg
or
imul
adc
out
int
and
insb
arpl
and
fmulp
mov
arpl
jne
cmpsb
cmpsb
mov
sub
outsb
mov
lods
mov
dec
repnz
ret
imul
or
pop
cmp
sub
xor
fisttps
pop
mov
scas
mov
push
sbb
outsl
bound
xchg
xor
sub
mov
jp
mov
sahf
clc
sub
movsb
imul
cmp
xor
mov
jne
popl
mov
jl
push
stos
dec
push
dec
out
mov
insb
outsl
cwtl
cmpsb
enter
and
xchg
pushf
fadd
jecxz
mov
cmc
rcl
xor
add
cmc
sbb
lahf
imul
mov
cmpsb
and
mov
daa
gs
out
sbb
jne
inc
aas
jle
mov
imulb
js
adc
xchg
iret
sahf
adc
pop
push
dec
and
add
or
outsb
in
sub
mov
sub
inc
jno
mov
jge
cmp
jmp
mov
cltd
les
cli
stc
pop
aam
push
jnp
mov
cmp
mov
fbstp
xor
imul
stos
sbb
cmpsl
addr16
inc
jbe
push
dec
inc
push
add
and
ja
mov
bound
int
sbb
inc
jg
inc
lods
inc
add
fdivs
jns
pop
xchg
scas
push
insb
data16
mov
dec
arpl
loope
mov
cmpsl
int
or
repz
enter
leave
jnp
fwait
push
iret
sub
cmp
pop
xchg
in
dec
std
icebp
pop
pushf
in
mov
push
inc
mull
jne
pop
adc
lods
mov
pop
xchg
pop
dec
xor
in
mov
repz
inc
pop
mov
imul
inc
popf
jp
lds
push
mov
dec
sbb
test
xchg
rcrb
add
lcall
lcall
sbbb
stc
xor
adc
xchg
ljmp
mov
fwait
test
stos
and
xchg
jg
jmp
mov
cld
dec
mov
cmpsb
jo
lods
and
es
fwait
xchg
shll
inc
mov
xchg
jmp
mov
in
leave
stc
push
out
or
jecxz
mov
sbb
lcall
mov
adc
and
pop
xor
jle
not
mov
pop
sub
inc
mov
add
jl
jp
push
test
js
popa
stc
fimull
lea
fwait
int3
movsl
jge
dec
jb
jmp
xchg
shl
int
gs
pop
sub
out
repnz
or
xor
rolb
jne
inc
adc
hlt
pushf
pop
scas
xor
scas
icebp
rorb
hlt
repnz
inc
cmp
adc
lds
xorb
mov
mov
cmp
mov
test
sub
add
mov
jge
add
iret
aas
scas
push
adc
jae
testl
xchg
nop
sub
outsl
loop
pop
clc
add
inc
and
sub
push
aam
arpl
pusha
imul
push
inc
test
cmp
mov
push
mov
jb
sbb
adc
std
bound
cwtl
cld
pop
je
test
adc
lods
and
nop
addr16
hlt
adc
repnz
mov
dec
in
jecxz
add
aas
stos
xorl
addr16
aaa
pop
xchg
xchg
mov
pop
jp
jle
ret
loopne
xchg
stc
cmpsb
mov
outsb
mov
das
pop
cmp
push
je
add
lret
cmpb
jg
lret
jecxz
xchg
sub
jg
aas
and
jo
sub
xchg
and
aam
fs
mov
push
xchg
xchg
sbb
into
xchg
mov
sbb
lock
cld
js
sub
testb
jge
adc
cmpsl
jbe
xor
out
sbb
add
and
call
dec
xlat
dec
lret
jp
sbb
es
mov
testb
clc
test
sti
pop
sub
xorl
ljmp
mov
jae
xchg
dec
adc
lret
mov
out
jg
pop
cmp
lret
add
dec
sbb
test
sbb
mov
in
in
jb
cmpsl
and
loopne
clc
lods
cmp
repnz
lds
jae
cmovp
or
int
cmp
negb
mov
fucomi
jbe
lods
in
insb
mov
pop
add
xchg
ds
jb
add
push
jge
ss
call
add
cmc
cmp
sahf
xlat
loope
fisttpl
imul
xchg
into
or
sbb
ljmp
mov
call
pop
adc
rorl
divb
jnp
mov
jae
call
mov
iret
or
ret
sbb
hlt
jge
push
mov
cmpsb
out
xlat
movsl
idivl
ja
scas
push
nop
adc
test
pop
movsb
popa
gs
jno
mov
pop
push
movsl
xor
push
cmpsb
jecxz
cmp
xchg
test
xor
or
add
inc
out
sub
xchg
sbb
xchg
out
into
lret
sahf
push
in
pop
scas
frstor
xchg
int3
adc
data16
jle
es
sbb
call
push
cli
add
mov
imul
ficoml
mov
adc
out
and
mov
cmp
xlat
xlat
jmp
lahf
mov
sub
xor
movsb
and
pushf
mov
xchg
sti
lods
sub
into
add
shl
or
dec
push
popa
test
call
xor
insl
mov
xchg
repnz
cmp
xor
push
in
loop
cwtl
or
adc
and
xor
sub
iret
inc
out
jo
inc
loopne
mov
rorb
push
in
lds
ss
add
mov
les
adc
es
ja
aaa
popa
sub
test
xlat
jl
aaa
fldl
xchg
pop
repz
cmpsl
mov
cs
pop
movsb
je
in
xchg
outsl
jl
outsl
and
sub
cmp
imul
stos
push
jns
mov
mov
mov
and
jecxz
cmp
imul
shl
in
pop
sbb
mov
inc
out
sbb
popf
cmp
fstps
xbegin
xchg
sub
stos
mov
mov
cwtl
xor
inc
repz
fs
sbb
xchg
out
movsl
sub
dec
mov
add
pusha
sbb
mov
imul
or
add
cmp
sahf
dec
pop
das
or
mov
sub
fwait
mov
inc
arpl
push
lahf
retw
das
mov
orb
nop
xchg
mov
insl
das
push
test
and
mov
add
mov
rcr
cmpb
cli
repnz
jl
adc
mov
mov
xor
popf
mov
icebp
xchg
cwtl
pop
aaa
pop
rclb
jge
stos
insb
stos
adc
cmp
je
mov
sbb
mov
mov
and
push
fisttps
sti
lds
outsl
js
ja
ret
addr16
adcl
or
mov
stos
push
dec
daa
into
xor
movsl
fildll
rol
std
mov
pusha
mov
or
sti
mov
nop
jns
mov
out
clc
sub
stc
inc
sbb
xor
pop
test
sub
xchg
pop
cmovg
cmp
sbb
pop
stos
es
stos
ja
lahf
cmp
push
dec
jo
or
ss
inc
das
out
and
push
cld
popa
fucomi
faddl
loop
jmp
xor
pushf
jne
je
mov
into
ljmp
imul
insb
hlt
lds
add
call
mov
cwtl
jecxz
pop
aas
pusha
push
fs
fiaddl
fisubl
add
or
sub
data16
push
xor
push
cwtl
inc
mov
mov
fwait
cmp
add
faddp
inc
push
dec
out
fidivl
in
jo
dec
mov
jg
jno
xchg
xchg
loopne
rcl
shll
mov
or
or
push
xor
xchg
cmc
dec
mov
cmp
imul
movsl
or
add
notl
add
mov
mov
fisubrl
and
cmc
cmp
mov
pusha
bts
push
sbb
sbb
dec
pop
das
inc
xchg
shll
jmp
sbb
dec
add
add
and
and
mov
jnp
jnp
roll
push
loope
inc
dec
mov
fs
mov
cmpsl
xor
jno
xor
jo
jb
clc
jle
xchg
sbb
inc
int3
cltd
mov
mov
mov
outsl
push
repnz
sbb
pop
lcall
es
add
xchg
sub
cmp
xchg
or
aas
out
push
xorl
fstpt
jecxz
or
mov
les
addb
out
cmpsl
out
and
xor
adc
sbb
aaa
push
subl
or
dec
or
stc
and
ss
lock
push
cmp
jns
incb
inc
mov
outsb
jae
ss
les
pop
jns
adc
loope
enter
cwtl
iret
out
adc
das
inc
or
dec
into
sti
xor
dec
bound
jno
out
lret
es
sbb
pop
add
jge
dec
xchg
neg
nop
or
dec
sbb
lcall
xchg
inc
sti
icebp
daa
pushf
scas
scas
sahf
or
cltd
and
pop
or
inc
cs
shlb
fistpll
test
xchg
pop
push
dec
shlb
lock
jmp
sub
sbb
mov
xchg
hlt
cwtl
mov
ror
xchg
jmp
mov
add
std
mov
jmp
xor
aaa
adc
adc
lods
xor
imul
push
mov
loopne
inc
dec
je
and
imul
loope
sub
mov
movsb
and
fnsave
sbb
dec
pusha
cmp
sbb
adc
ljmp
adc
pop
adc
jbe
cmp
scas
repz
cmp
call
inc
outsl
ret
paddb
or
faddl
inc
inc
mov
test
mov
out
arpl
mov
cwtl
lahf
xchg
lcall
je
pop
push
xchg
cmp
xor
lds
xor
push
add
imul
adc
push
mov
mov
dec
cmp
insb
cmpsl
sbb
scas
loope
push
loope
sub
jl
fsubrs
repz
jmp
or
add
push
test
sbb
hlt
enter
std
lods
pop
or
test
dec
scas
inc
in
inc
imul
or
and
add
and
jbe
or
push
jmp
lea
sbb
fadds
lahf
xchg
or
mov
leave
out
dec
les
jmp
cmpsb
mov
push
mov
lss
enter
call
mov
cmp
outsb
push
add
xchg
out
cmp
std
mov
push
shll
ffree
movsl
dec
in
nop
pushf
push
fcom
dec
xchg
or
push
push
xor
jmp
mov
lock
bound
sbb
or
jg
ja
repz
mov
mov
mov
enter
push
mov
mov
mov
cmp
idiv
or
push
lret
and
push
and
scas
stos
mov
jp
ror
add
addr16
push
push
and
xchg
movsl
loopne
xor
add
test
imul
mov
inc
mov
or
mov
pop
pushf
shl
pop
jne
ret
into
pop
insb
or
mov
insl
push
enter
pop
data16
into
add
iret
mov
fstl
cmp
test
hlt
adc
inc
mov
jg
dec
cmp
sub
scas
ja
rorl
test
lcall
sbb
dec
add
lock
push
sti
into
mov
popa
cbtw
out
and
sub
push
insb
outsl
push
cmpb
notb
out
mov
push
int
jmp
or
jmp
sub
movsl
push
lods
addr16
fs
test
cmc
idivb
push
fcomps
ljmp
xchg
imull
fbstp
cmpsl
rclb
dec
int3
sahf
pusha
jmp
addr16
and
dec
and
pop
cmp
int3
stos
popf
cltd
xlat
jmp
jne
in
aad
je
lret
inc
mov
sbb
es
push
jne
mov
sbb
bswap
ja
hlt
dec
mov
mov
cmp
pusha
pop
stc
es
mov
js
rolb
xchg
pop
test
jbe
cmc
or
shll
adc
mov
xchg
and
mov
icebp
data16
clc
icebp
sbb
dec
mov
loopne
lahf
cmp
xor
lret
jb
mov
mov
mov
iret
jo
gs
fwait
cld
push
insb
test
out
or
push
fs
and
pop
inc
and
xchg
addb
jno
xchg
push
or
stc
sub
ja
sbb
pop
push
stos
sub
lahf
xchg
push
jnp
sbb
popa
pop
aaa
jnp
mov
lahf
negl
loope
std
xchg
in
or
inc
inc
jecxz
mov
push
mov
sbb
fsub
aam
movsb
jns
push
sti
das
pusha
dec
inc
popa
ss
cmp
jb
andb
add
stos
loop
xor
mov
lcall
sbb
outsb
mov
mov
inc
lds
in
aam
push
and
cmpb
imul
push
pop
in
xor
stos
lods
add
sahf
sub
test
int
jno
mov
jp
mov
sub
bound
rorb
icebp
test
arpl
fcmovne
mov
outsb
dec
xlat
or
adc
in
mov
push
sahf
pop
sub
mov
sbb
sub
lock
cltd
aaa
push
out
cmp
neg
xor
shrb
test
cmp
xor
repnz
mov
sub
in
dec
push
dec
sub
inc
lret
int
mov
ret
mov
xchg
mov
or
rcrb
loope
push
mov
into
leave
xlat
cmp
cwtl
aas
fidivs
cmp
push
xchg
call
sub
and
mov
push
mov
mov
jg
jb
icebp
mov
pop
fcomps
insl
add
movsl
fbstp
pusha
fimull
es
loope
or
and
test
jae
repnz
push
add
pusha
mov
loop
or
in
dec
das
push
and
sbb
cwtl
cmc
pop
sub
sub
movsb
jecxz
popf
mov
or
mul
insl
not
sbb
repz
enter
xor
pop
fiadds
mov
cmp
rorb
cmp
dec
lcall
fists
les
jl
in
mov
mov
xchg
cmp
andl
jae
xor
mov
xor
or
add
mov
cwtl
xor
push
decb
mov
mov
sub
adc
loop
or
addr16
ljmp
mov
inc
mov
nop
roll
mov
call
fistpll
rcl
std
mov
insb
or
adc
stos
orb
mov
mov
mov
jecxz
push
add
pushf
sub
in
fs
cmp
jle
fidivrl
movsb
sbb
or
clc
jle
cmovs
stos
int3
pop
icebp
int
jno
int3
xchg
fstpt
fldlg2
inc
mov
jns
fwait
jecxz
mov
sub
imul
and
cmpsl
sbb
callw
in
sbb
mov
xchg
jle
ret
int3
pop
push
cmp
popl
push
mov
clc
inc
test
lock
outsb
mov
cltd
mov
cwtl
subl
out
fdivr
das
mov
jb
xchg
pop
das
sarl
sahf
jecxz
mov
rcrl
xchg
movsb
adc
xor
or
loope
xor
jae
adc
lods
outsb
ljmp
mov
xchg
stc
cltd
add
xor
out
mov
fcmovnb
movsl
cmp
xor
rorb
adc
enter
adc
pop
push
test
add
fldenv
jo
ss
outsb
jno
mov
mov
imul
les
mov
fst
ljmp
sti
jbe
mov
dec
mov
xor
pop
test
scas
test
sub
xchg
xor
sbb
push
pop
lret
test
out
pop
in
sbb
push
or
jae
xchg
pop
cmp
iret
sti
cmp
mov
and
xlat
lcall
mov
xor
dec
mov
lcall
jne
xchg
pop
insl
hlt
aas
xchg
and
js
mov
test
push
mov
gs
cmp
clc
les
mov
cmpsb
xchg
in
or
fidivs
xor
mov
jge
mov
imul
pop
push
scas
int3
and
cmp
lahf
xchg
leave
ffree
fimull
lea
or
pop
or
xchg
adc
inc
jo
inc
jle
or
xchg
in
inc
jg
in
pop
lods
loope
jl
jae
xor
pop
cmp
pop
sbb
add
or
mov
mov
orb
xchg
xchg
sbb
in
ss
pop
aam
pop
pop
aad
ss
aaa
stos
imul
adc
sub
out
and
into
xchg
sub
icebp
cmp
jge
mov
fisubrs
cmp
or
push
mov
mov
mov
lret
negl
sub
or
xchg
jmp
push
daa
pop
enter
sti
fisttpll
arpl
cli
inc
inc
mov
push
cmp
cmpb
jle
and
mov
lcall
jle,pt
mov
and
inc
nop
sbb
push
hlt
xchg
aad
fldl
es
sub
insl
mov
sbb
push
loop
addr16
data16
out
xchg
aam
dec
jl
ficompl
mov
mov
push
in
cltd
xor
cwtl
cmp
lret
xor
fists
fsts
jo
int3
shrl
lret
jmp
xor
cmp
int3
dec
push
aas
jo
adc
mov
lahf
addr16
neg
jecxz
cmpsl
clc
call
lock
aaa
int3
mov
fucomi
movsl
or
or
sbb
mov
xor
add
das
das
push
jae
xchg
inc
lds
rorb
sub
inc
xor
dec
pop
lea
dec
int
inc
inc
sub
fs
cli
gs
mov
inc
sbbl
clc
aaa
mov
ret
mov
mov
adcb
pop
aam
ret
aas
out
mov
inc
xchg
inc
xchg
xor
pop
sub
sbb
fdivl
sbb
dec
loop
mov
popf
rorl
fwait
push
repnz
testb
add
adc
inc
and
add
mov
mov
psubw
cmp
xchg
xchg
lahf
je
mov
mov
inc
add
iret
out
jne
dec
jnp
js
jnp
cmp
sub
rolb
lret
xchg
imul
cmc
in
mov
sbb
inc
stos
sbb
outsl
scas
mov
leave
shlb
subb
andl
aad
aam
hlt
pop
sub
sbb
jbe
cld
pop
sbb
lahf
push
outsl
ljmp
cmpsl
mull
push
out
or
or
mov
repz
push
ljmp
mov
push
jl
add
push
sbb
jle
pop
pop
andl
adc
repnz
hlt
cmp
xor
arpl
inc
cwtl
pop
mov
mov
jp
or
xchg
xorb
xor
iret
decb
mov
sub
rorb
data16
adc
inc
mov
cmpsb
iret
cwtl
stos
xchg
xchg
push
stc
add
cmpsl
dec
mov
mov
out
adc
mov
xchg
sbb
out
sbb
mov
insb
outsl
lahf
shll
xchg
insb
icebp
je
sbb
add
pop
cld
es
outsb
adc
inc
cmp
in
xchg
cmc
add
daa
hlt
dec
and
cli
hlt
fsubrl
cltd
or
movsb
xor
test
jbe
add
inc
ds
push
stc
sub
add
int3
lock
pushf
and
sub
pusha
xchg
in
sbb
jae
inc
stc
vandnps
push
lock
xor
pop
and
aaa
sub
lea
mov
or
std
mov
jecxz
insl
sub
inc
jle
xchg
movsb
insb
mov
repnz
push
adcl
push
mov
stos
in
xchg
lfs
test
xor
sbb
adc
insb
cmp
push
sbb
pop
mov
and
sahf
xchg
mov
xor
xchg
jmp
hlt
push
stc
stc
cmp
sbb
inc
adc
mov
cmpsl
mov
insb
jbe
sbb
bound
test
push
sbb
sbb
push
leave
and
and
mov
les
inc
xchg
fdivs
dec
jge
popf
and
je
cltd
add
mov
outsb
xor
andb
mov
cmc
jp
and
inc
pop
dec
test
test
dec
fdivp
stos
xchg
sub
imul
leave
ds
insb
lret
or
lcall
outsb
test
mov
rcpps
jg
orl
sbb
sbb
mov
push
jg
imul
mov
pop
ret
subb
in
orl
stos
xchg
or
xchg
mov
sahf
jecxz
and
scas
jl
and
adc
mov
insb
test
pop
bound
xlat
xchg
lods
aas
and
mov
push
mov
call
mov
movsb
xchg
or
fs
mov
pusha
sub
ret
mov
popa
push
hlt
test
cmp
shlb
inc
sub
out
mov
pop
inc
mov
mov
adc
cwtl
in
sbb
mov
dec
shll
xchg
sbb
out
loopne
int3
push
loop
lcall
into
push
inc
addb
jmp
inc
pusha
pop
inc
loope
xor
sti
