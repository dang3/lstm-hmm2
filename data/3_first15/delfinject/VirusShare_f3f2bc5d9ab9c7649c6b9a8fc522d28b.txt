mov
ss
push
push
xchg
dec
adc
sub
dec
insb
inc
sbb
dec
mov
cwtl
pop
pop
aam
add
imul
repnz
xchg
add
add
dec
outsl
push
lret
mov
sub
das
cmpsl
and
cmp
lock
es
mov
cmp
addr16
repnz
daa
dec
sbb
fisubrs
jne
and
xchg
clc
pop
sbb
pop
jg
mov
movsl
jne
subb
mov
in
rcrb
iret
insw
jmp
ja
das
mov
push
imul
stos
ss
add
mov
ret
mov
cltd
lahf
int
stos
xchg
mul
push
dec
hlt
mov
lods
xchg
imul
fmuls
mov
mov
cmpsl
xor
add
dec
out
xchg
pop
push
jnp
mov
cmp
xor
sbb
fisttpll
ss
push
int
jp
ds
rcrb
xchg
cmp
adc
pop
ja
mov
cmpsb
aas
dec
ficoml
add
ljmp
insl
push
aaa
push
jae
pop
mov
bound
jg
inc
test
push
and
mov
rorb
lret
xchg
jl
mov
cwtl
push
xor
mov
fsubp
mov
adc
into
jnp
xor
lods
jp
jmp
sbb
or
push
jae
or
mov
mov
push
and
and
scas
ss
rclb
outsb
mov
repz
pushf
xor
filds
add
mov
push
data16
xor
inc
xchg
adc
repz
stos
push
mov
dec
mov
ss
stos
jge
rcr
jecxz
sahf
dec
push
dec
flds
inc
sub
jbe
jbe
push
or
sub
or
cmpsl
mov
in
out
pop
mov
mov
ds
sub
add
ret
mov
daa
push
cmc
pop
cmp
cmp
push
insl
mov
inc
xor
dec
aas
pop
movsb
rorb
mov
call
rcrl
into
push
push
jo
jle
call
mov
mov
out
mov
dec
outsl
fdivrl
testl
iret
xchg
cmpsl
iret
fists
cmpsl
jo
das
insl
roll
enter
orl
sti
and
ret
jg
outsb
cmp
mov
jne
aaa
dec
xchg
iret
movsb
mov
rcll
iret
push
mov
mov
hlt
movsl
dec
pop
xchg
leave
cmp
aad
leave
outsb
ror
inc
cmp
lret
repnz
sub
adc
ret
ds
cmp
xor
inc
imul
inc
notl
pusha
call
add
xor
inc
add
adc
mov
fisubs
ret
call
aad
out
mov
out
outsb
aaa
mov
mov
mov
xchg
psubsw
adc
jp
roll
mov
jmp
adcb
pop
pop
movsl
push
arpl
gs
inc
stos
push
mov
jmp
and
mov
adc
fisttps
mov
repnz
int3
lret
enter
add
fwait
stos
dec
pop
jge
add
das
int
cld
ss
jne
cmpsl
lret
inc
fs
jle
pushf
lret
call
mov
xor
hlt
jo
mov
cmp
pop
out
in
push
xor
mov
out
dec
stos
mov
cmpsl
popf
jb
xorl
testb
notb
inc
or
mov
jp
das
push
xor
jno
fwait
jl
cmpsl
push
xor
jge
inc
inc
insl
and
dec
pop
imul
pusha
jo
in
xor
mov
mov
jbe
xchg
dec
sub
std
inc
jg
rcrb
jo
imul
mov
int
fmuls
xchg
cmp
fsub
lret
subl
mov
mov
push
cmpsl
jge
int
sbbl
insl
int3
daa
xor
pop
mov
and
jl
notb
js
jge,pn
jbe
mov
shll
call
sub
xlat
test
mov
pop
pop
xchg
mov
mov
frndint
out
dec
popa
mov
mov
sub
push
add
loope
lcall
push
testl
inc
mov
cld
push
lock
sub
mov
jb
fdivrs
add
int
icebp
lcall
xor
loope
outsb
test
jae
sbb
inc
jo
adc
sbb
mov
popa
mov
cmp
aam
mov
int3
cli
xchg
jns
addr16
and
loop
mov
mov
cmp
add
scas
push
mov
lock
lods
sub
js
cmp
mov
jb
cwtl
outsb
push
xchg
arpl
cltd
jb
icebp
dec
sbbb
repnz
stos
lret
dec
scas
inc
xchg
mov
mov
stos
arpl
rorb
std
jno
mov
out
repnz
popf
pop
aam
scas
xorb
sub
or
sar
ja
orl
sarb
lret
repz
mov
aas
test
dec
data16
cmpsb
dec
mov
fdivl
sar
into
outsb
cwtl
push
pop
push
or
shl
mov
mov
repz
pop
mov
das
test
hlt
push
in
mov
pop
add
imul
push
push
stos
scas
je
dec
scas
mov
adc
out
mov
push
cmp
sbbb
mov
call
cmpsl
mov
fxch
cwtl
mov
mov
xchg
cmpsl
xor
mov
scas
insl
mov
jb
jge
lds
and
pushf
push
ror
std
mov
cmc
push
aad
pop
mov
cmp
fists
cltd
out
arpl
push
lods
icebp
dec
fiaddl
adc
xchg
inc
push
add
adc
sbb
adc
fnstsw
or
outsl
movsl
ds
pop
insb
add
mov
inc
cmpsb
mov
cmp
cmpsb
orb
ret
arpl
dec
outsb
cli
subb
js,pt
ror
out
add
fs
cmp
jns
mov
rolb
imul
pop
sbb
inc
xor
popf
cmpl
and
dec
popa
nop
xlat
nop
jmp
push
out
or
xorl
mov
jg
dec
xor
push
mov
jmp
jl
jns
or
pop
leave
jb
addl
mov
and
addb
dec
call
push
outsl
mov
pop
lock
mov
sbb
int
icebp
cli
cmp
jmp
add
pop
pop
les
cwtl
hlt
xchg
or
sub
jmp
xchg
cs
pop
jnp
xor
xor
jne
shlb
push
or
enter
jno
dec
fwait
inc
xor
lcall
xchg
in
pop
sar
jge
sarb
mov
cwtl
mov
push
or
icebp
dec
ret
pop
xchg
pop
stc
mov
sub
pop
lret
mov
and
pop
xor
sub
add
cmpsl
aas
or
mov
push
mov
jae
lcall
imul
sub
shrb
ljmp
aad
leave
mov
adc
mov
mov
adc
fdivs
data16
sbbb
lret
jge
jp
jbe
cmp
clc
xchg
mov
adc
fwait
mov
mov
pop
je
or
frstor
xchg
cmp
fcoms
mov
rorl
lea
cmp
sarl
dec
jg
divl
sbb
jmp
aas
sub
pop
lods
sub
out
int
out
cmpsb
lods
repnz
and
sbb
xor
inc
scas
daa
bound
jmp
xor
cmpsb
mov
rcr
xor
sub
pusha
scas
imul
xor
cmpb
jae
add
in
test
xor
and
out
pop
xor
dec
mov
jb
iret
popf
in
mov
xor
es
ja
out
push
enter
sub
cmp
fstl
stos
mov
mov
jp
ror
popf
sti
cmpsl
jnp
sti
inc
fists
jg
scas
mov
in
inc
xorb
subb
into
push
divl
cltd
in
out
add
lock
mulb
pop
mov
add
fistps
and
cmp
push
adc
inc
out
sub
jbe
js
mov
mov
push
lret
pop
push
std
clc
les
mov
in
inc
xor
cmp
xchg
cmp
push
imul
jcxz,pt
ds
or
xchg
xor
push
sbb
dec
push
stos
iret
jbe
inc
push
inc
adc
movsb
mov
insl
mov
add
inc
or
push
mov
pcmpeqb
inc
sbb
lea
adc
lds
xor
int
mov
nop
imul
push
xlat
dec
aaa
mov
dec
outsb
je
negl
mov
sbb
push
or
sub
cmpsl
cmp
mov
push
call
push
mov
imulb
test
maskmovq
divl
insb
dec
addr16
push
push
mov
push
call
adc
gs
movsl
adc
push
clc
sub
push
outsl
mov
or
das
ret
outsl
loope
sub
jno
rorl
xor
cmpsb
cltd
pop
mov
sbb
ds
and
sbb
mov
xor
aas
dec
stos
push
andb
push
push
cltd
stc
add
jle
mov
and
repz
mov
mov
mov
test
stos
jae
mov
xor
jmp
out
pop
ljmp
es
sub
jno
notl
and
pop
movsl
add
stos
pop
push
lcall
push
push
push
mov
pop
cltd
xchg
pop
aaa
test
push
stos
pop
mov
addr16
lcall
or
iret
cmpsb
add
dec
hlt
aas
sub
pusha
adc
rcr
and
xor
in
mov
adc
xchg
insl
in
neg
daa
movl
test
es
mov
fstl
aas
aam
rolb
cwtl
xchg
inc
mov
lret
push
stos
imul
mov
sub
arpl
sub
std
lock
mov
bound
add
pushf
sub
sub
sbb
aas
pop
add
mov
fs
cli
aaa
data16
div
inc
xchg
jecxz
jl
pop
leave
mov
pushf
xor
cmp
sbb
xchg
scas
jbe
out
mov
das
aaa
xchg
dec
adc
cmpb
in
mov
push
mov
jg
scas
cmp
jo
sbb
push
ljmp
mov
daa
inc
insb
movsl
leave
mov
cmc
clc
xor
scas
inc
mov
fisttpll
das
cmp
pop
adc
daa
testl
mov
sahf
lret
dec
cmpsl
in
daa
push
bound
jnp
jnp
arpl
lea
lahf
cmp
shrb
js
out
push
fwait
cmp
outsl
popa
repnz
mov
enter
push
xor
pop
cmc
cmp
popf
out
dec
push
jl
rcrb
dec
cld
push
push
inc
stos
dec
test
ror
sub
das
popl
lret
mov
ja
lahf
push
adc
imul
icebp
or
shl
pop
jl
fstpt
or
cld
nop
or
in
adc
mov
mov
imul
pop
cmpsl
sbb
add
xor
outsl
cmp
mov
push
into
mov
add
imul
push
inc
bnd
cwtl
es
pop
cs
and
das
pusha
push
mov
cmc
ljmp
mov
cmp
mov
adc
pop
int
xor
stc
mov
xor
jo
ret
pop
stos
inc
addr16
inc
das
in
push
mov
ljmp
fisubl
scas
test
sub
push
sub
jb
movsl
cwtl
inc
ret
pop
insl
inc
mov
fidivrl
cmp
inc
push
in
movsl
mov
push
addl
cs
cwtl
add
pop
addr16
stos
xchg
jo
jae
xor
pop
mov
cmp
out
out
dec
in
mov
sbbl
mov
stos
xor
and
inc
lds
les
daa
mov
mov
and
in
or
push
scas
cmp
es
mov
mov
test
addr16
addr16
dec
imul
xor
es
scas
mov
jmp
rcl
cmpsl
js
cmp
cs
decb
push
enter
sub
cs
sbb
leave
and
jmp
test
push
xchg
push
push
imul
xor
movl
jo
jne
imul
sub
pop
cmc
xchg
punpckhbw
sub
inc
test
push
push
cmpsb
or
ss
mov
push
sub
mov
inc
les
sbb
sub
scas
lcall
pop
cmpsb
iret
jp
fs
jns
fsubs
jns
pop
jl
test
lods
pop
cmp
sbb
lds
lahf
push
xorl
pop
arpl
rol
dec
out
ret
mov
cmp
or
jns
jnp
mov
int3
push
sub
mov
movsl
pop
fcmovnu
jns
pop
mov
xchg
push
mov
xchg
push
add
lcall
push
sbbb
pop
add
stc
mov
push
xchg
daa
xchg
pop
vpsubusw
jne
sub
addr16
hlt
rorl
lahf
xchg
mov
int
or
leave
jbe
xor
mov
out
inc
push
inc
lret
popf
or
sar
imul
insb
push
imul
pop
jle
ss
pop
call
xlat
dec
add
pop
lret
aam
mov
imul
xor
ja
shlb
jp
cmp
lods
ficoms
outsl
scas
mov
imul
push
adc
repnz
popa
cmpsl
dec
fwait
cmp
cmpsl
leave
mov
mov
adc
xlat
push
clc
push
xlat
in
sub
push
pop
test
fisttpll
cmpsl
lret
iret
sbb
pop
dec
cltd
shl
xchg
jmp
sub
shll
mov
rorb
mov
sub
inc
cwtl
fistl
scas
enter
pop
in
mov
adc
cmpsb
cltd
shrl
adc
cmpsl
cmc
xor
push
hlt
popf
jb
call
pop
xchg
lods
adc
dec
and
xchg
mov
inc
mov
addr16
iret
mov
mov
ret
sbb
xor
xchg
xchg
in
cmpsl
xchg
pop
pop
sbbl
xor
mov
pusha
aam
cmp
xor
adc
test
inc
loope
xchg
xchg
loope
stc
repz
outsb
sbb
out
ror
add
cwtl
push
jmp
lcall
sub
mov
div
movl
sbb
cmp
inc
shll
into
sbb
xchg
xlat
test
or
pop
jecxz
arpl
repz
movsl
ljmp
daa
pop
jo
sub
sub
push
pop
mov
loopne
sti
es
sbb
mov
sbb
dec
pusha
out
adc
test
jmp
dec
cli
aas
xchg
cmp
mov
aaa
out
loope
add
outsl
enter
xchg
aam
insl
or
addr16
popa
adc
cmpsb
cmpsb
xchg
push
test
or
add
xchg
scas
inc
stc
aaa
lcall
mov
int3
xchg
inc
mov
lods
in
or
mov
cmp
test
jbe
fcomip
fwait
or
mov
inc
in
mov
stos
add
bound
cmp
outsb
movsb
iret
mov
jecxz
mov
mov
lods
mov
out
mov
cmp
inc
add
mov
jno
pop
scas
out
mov
shll
scas
test
nop
pusha
xor
mov
popa
call
lcall
cmpsb
push
das
call
ljmp
je
hlt
mov
mov
mov
sub
mov
out
addr16
lock
inc
rorl
dec
js
xor
in
in
stc
test
inc
or
mov
cmc
mov
pop
adc
dec
mov
xor
notl
cs
aaa
mov
or
das
mov
fcomps
test
push
sub
repz
mov
cmp
es
es
mov
ljmp
cmp
or
loopne
cmp
and
test
lret
mov
out
pop
loope
clc
test
xchg
scas
dec
ja
push
sub
push
jle
enter
test
js
pop
out
dec
adc
adc
sub
mov
pop
sub
test
push
inc
out
push
and
fs
roll
inc
lret
int
int
addr16
inc
mov
jo
xor
lods
inc
leave
out
push
and
andl
loopne
sbb
les
adc
jg
cmpsb
xchg
out
dec
gs
cmpsl
xor
stos
sbb
xor
and
inc
filds
lcall
out
cmp
jmp
lods
pusha
pop
or
insb
mov
pop
lret
cs
fcmovne
pop
es
cmpsb
lcall
popf
jle
dec
sub
or
cmp
xchg
cmp
in
jo
ja
icebp
cmc
push
sub
divl
in
pop
pop
cmpsl
bound
jg
xchg
hlt
sub
cmpsb
sub
daa
mov
mov
sub
add
js
lods
fwait
shl
xchg
iret
sub
insl
add
js
pop
and
outsl
outsb
aas
jmp
xchg
jg
push
in
xor
pop
sub
sub
rcl
or
flds
int
xlat
jb
in
sub
push
ss
mov
in
xor
sub
push
in
test
xchg
xor
daa
push
or
ja
mov
or
ret
rcrl
in
lret
jb
movsb
adc
push
popf
mov
adc
jb
pop
aaa
pop
ja
mov
mov
sub
wbinvd
ja
xchg
cmp
gs
fs
aaa
push
xor
fisubs
cli
aaa
mov
sbb
out
testb
ss
in
shll
add
sub
loope
loope
mov
mov
jb
nop
ljmp
shll
ret
mov
xor
add
out
outsb
cld
cmpsb
xlat
andb
aaa
stc
and
call
xchg
lret
jecxz
out
mov
mov
jo
xor
sahf
cwtl
movsl
mov
rol
in
std
push
adc
pop
sbb
or
mov
enter
outsl
mov
sub
mov
repnz
mov
addr16
adc
call
pop
std
or
mulb
mov
add
or
movl
dec
mov
out
pop
shll
aad
push
ror
lock
data16
insl
or
dec
pop
xor
lcall
adc
push
xchg
push
scas
rcll
addr16
inc
xchg
dec
dec
mov
mov
js
dec
pushf
imul
xchg
int3
cmpsl
cwtl
jmp
rcrb
adc
and
mov
iret
in
and
xor
jl
rol
or
sbb
xchg
jb
inc
mov
and
in
pop
mov
aas
mov
mov
das
and
aam
cmp
mov
outsb
jmp
xchg
das
out
push
sub
scas
sbb
lret
mov
adcl
test
ljmp
dec
loope
sub
xlat
and
jae
add
cmpsl
xchg
inc
jecxz
clc
cs
addr16
mov
in
negb
add
jo
or
cmp
mov
fstl
cwtl
test
sub
or
pusha
adc
mov
xchg
jl
mov
decb
cmp
shr
addr16
push
lret
rcrb
out
insb
in
mov
xor
addb
mov
insl
out
pop
inc
lods
cmpsb
out
movsbl
xor
push
xor
inc
inc
push
mov
dec
dec
dec
pusha
mov
dec
mov
aaa
lret
loop
out
pop
mov
lret
xlat
lods
aad
inc
jne
sub
outsl
cmpsl
cld
mov
jns
out
inc
or
push
cmpsb
add
pop
pushf
sub
cmp
les
pop
push
or
xor
div
xchg
xor
aas
scas
imull
pop
lret
shrb
jmp
sarb
std
inc
pop
xor
stos
dec
sti
mov
sub
stos
lds
jmp
xor
out
lcall
xor
in
xlat
inc
out
loop
cmp
mov
sub
or
icebp
mov
dec
insl
jbe
jecxz
sahf
loop
fists
subb
and
je
mull
pusha
aam
add
mov
mov
sub
ret
arpl
mov
sub
ss
out
fwait
ret
cmpsl
pop
or
jae
mov
inc
mov
and
aas
aaa
popa
mov
mov
jb
scas
int
in
div
testl
xchg
adc
leave
xlat
ds
lds
cmp
rcll
out
dec
lds
hlt
int3
and
rorl
out
outsl
dec
xor
mov
frstor
adc
into
test
rcl
sahf
int
data16
add
push
pop
ret
or
push
imul
dec
xor
scas
add
rorl
or
movl
cmp
lcall
lods
adc
inc
mov
and
data16
jmp
xchg
sahf
or
testb
movnti
es
imul
push
divb
or
cmpsb
pusha
adc
lds
rorl
fstpt
jns
dec
push
add
xchg
mov
jbe
test
cmp
pop
xor
mov
jmp
xchg
inc
loopne
pop
call
ret
movl
outsl
mov
psubsw
pop
push
insl
stc
xor
mov
xor
mov
pop
scas
cmpsl
xor
inc
popa
es
add
or
dec
lcall
pop
insl
push
movl
cs
rorl
scas
xchg
clc
shlb
out
jecxz
ljmp
xor
pop
out
leave
pop
ret
pop
call
jne
fdivrs
cmp
xor
out
mov
out
aam
lods
mov
and
ljmp
stos
xor
pop
cmpsl
gs
fistpll
enter
popf
arpl
fidivrs
xor
xor
jmp
int
push
push
add
sbb
xchg
cld
push
imul
add
pop
and
shl
pop
fbld
and
in
shrb
or
fs
adc
sub
scas
mov
mov
pop
mov
pop
xor
dec
jge
out
pop
mov
jnp
hlt
add
jne
dec
lret
cmp
adc
sub
sahf
divb
dec
add
jp
jg
xor
frstor
addb
cmpsb
lret
pop
mov
push
movl
inc
mov
daa
mov
test
adc
jmp
sbb
mov
mov
cmp
sahf
test
es
rorl
data16
loopne
inc
out
es
sub
adc
es
rorl
hlt
cmpsb
mov
out
jbe
and
rorl
subb
imul
inc
dec
mov
xchg
xor
cmpsl
bound
jne
dec
dec
mov
data16
pop
aas
aad
mov
xchg
pop
xor
int
inc
sbb
sbb
fstpl
fdiv
sub
jmp
gs
subb
int3
xchg
mov
xchg
lret
and
sub
js
andl
cmp
mov
dec
flds
movsl
mov
lret
jno
cmpsl
adc
inc
cmp
out
aas
sbb
mov
es
dec
fiadds
mov
xchg
jae
fwait
aad
sbb
dec
sarb
jns
jmp
rorb
shrl
arpl
out
hlt
lds
dec
fistpll
mov
mov
xlat
push
loop
cmp
pushf
mov
pop
in
cmp
inc
sbb
mov
ljmp
int
pop
push
lods
es
lcall
and
add
inc
jle
pop
decl
fstl
pop
dec
add
jmp
mov
mov
pop
pop
mov
mov
adc
mov
rcrb
push
jb
fisubs
out
mov
out
cmp
mov
push
mov
or
mov
add
xor
cmpsl
cltd
push
and
adc
mov
ret
xchg
es
mov
push
or
nop
call
or
mov
loopne
mov
lock
mov
xchg
and
dec
aaa
mov
movsb
mov
sub
mov
mov
push
push
push
fs
xor
stc
mov
push
pop
rorl
ret
pop
insl
or
xchg
push
into
sub
dec
jb
dec
xor
sbb
push
cmp
rcrb
ret
sub
insb
sar
adc
in
cwtl
xor
xor
mov
jg
subb
arpl
mov
push
movsl
mov
push
pop
imul
dec
mov
sub
or
icebp
fldenv
sub
mov
xchg
mov
push
ss
mov
jecxz
push
std
nop
outsl
xchg
push
outsl
cwtl
sub
fsubrs
test
push
cmp
pop
jp
mov
and
mov
pushf
cmp
int3
xchg
lock
jmp
and
xorb
pop
in
iret
bound
and
push
xchg
sti
lea
sub
das
push
cmp
lea
leave
imul
xchg
lcall
mov
mov
addr16
xchg
pop
fadds
cmp
xchg
xor
nop
add
jmp
daa
in
loope
mov
rcll
subl
sub
xor
clc
mov
mov
in
fs
shrl
arpl
pminsw
sarb
pop
faddp
mov
mov
xor
stos
push
out
jp
add
in
dec
push
into
mov
cmp
shlb
mov
stos
call
xor
pop
xor
ljmp
push
mov
dec
or
push
or
daa
rorl
mov
scas
push
jle
les
jae
xchg
out
mov
push
or
out
sti
cmp
mov
call
nop
cmpsb
gs
sbb
mov
xor
ja
data16
mov
sti
lods
lods
or
dec
inc
xlat
adc
pop
popf
fcmovnbe
aad
in
pop
dec
out
ja
fwait
sub
add
sub
ret
add
inc
inc
pop
outsl
mov
mov
lahf
pusha
test
jbe
call
std
mov
into
dec
lahf
fcmovne
pop
repz
clc
in
cmpsb
xchg
ljmp
mov
das
insb
pop
test
inc
rcll
add
cmp
test
cs
pop
adc
push
movsl
shll
adc
mov
xchg
nop
cli
and
shll
pop
addr16
mov
adc
and
xchg
lcall
inc
imulb
sub
and
jo
cmc
dec
in
add
xor
ret
js
adc
adc
xlat
push
mov
sbb
push
xor
xlat
inc
divb
lds
mov
pop
mov
jb
rcll
jo
iret
aas
lods
sbb
lods
lock
out
imul
mov
or
into
cmp
or
gs
push
xchg
cmpb
push
mov
outsl
shlb
in
cwtl
push
int3
jecxz
ja
sub
push
inc
and
cmp
or
dec
adc
jecxz
push
mov
ror
ret
jp
xor
daa
mov
mov
dec
push
mov
pop
scas
mov
inc
cmp
cmpsl
jl
add
cmp
mov
push
sub
hlt
es
std
mov
mov
decl
pop
fisttpll
int3
push
xchg
gs
jns
jae
loopne
outsl
jbe
jo
xchg
gs
adcb
ds
in
stos
ret
sub
xor
sub
sbbl
xchg
mov
or
js
mov
ss
stos
mov
and
fsubr
jecxz
or
rolb
imul
es
cld
js
pop
ss
pavgb
in
add
loop
jmp
enter
inc
push
hlt
and
lods
fisttpl
das
pop
fdivrs
pop
iret
scas
mov
xor
push
push
adc
call
rolb
ja
daa
ljmp
cli
lcall
jge
lods
add
push
clc
xorl
and
sub
imul
add
int3
pop
scas
or
fisttpl
insb
std
jmp
push
cmp
out
cmp
sub
cmp
in
sub
in
jns
mov
neg
jmp
into
pop
js
cmp
stos
rol
jo
jne
push
addr16
cwtl
inc
lea
mov
lock
pop
ror
cmp
out
jns
cmp
cmp
adc
dec
and
sbb
imul
mov
mov
insb
sub
xchg
test
xor
ds
and
sbb
cmp
fisttpl
jle
cmp
cli
imul
and
movsl
push
mov
pop
xor
xor
shlb
lret
into
lret
cs
loop
fstpt
inc
fucomi
jge
lds
pop
scas
or
shrl
push
xor
imul
imul
movsl
mov
cmp
test
lods
dec
adc
arpl
push
or
cmpsl
aaa
stos
je
push
mov
xor
sub
fisttpll
push
mov
jl
push
cmp
mov
notb
pushf
xor
push
mov
xchg
addr16
ror
das
jns
push
push
mov
cmpsb
push
mov
jo
push
jbe
sbb
fstpl
dec
pop
lds
aas
adc
push
call
in
in
fwait
jnp
fstpl
pop
clc
sub
aam
cmp
addr16
dec
das
mov
cmpsl
mov
push
das
push
push
push
into
add
pushf
push
addb
push
mov
adc
testb
or
xchg
push
adc
mov
shll
cmp
into
cwtl
je
sub
push
sub
xorb
push
call
inc
lret
ja
das
cmpsb
adc
rolb
push
imul
data16
xchg
adc
cmovl
int
mov
jns
inc
int
mul
outsb
push
js
lods
push
sub
dec
inc
or
jns
xor
fcomi
out
int
cs
lcall
enter
in
sbb
gs
push
gs
and
aam
imul
lock
in
mov
jae
cwtl
xor
std
das
push
mov
mov
push
jnp
scas
add
xchg
or
int
adc
push
fcomp
cmp
icebp
cmc
fldcw
rolb
pop
add
pop
out
repnz
lcall
mov
pop
ror
mov
mov
dec
das
pop
js
jp
fadds
repz
mov
aam
std
lcall
pop
imul
call
push
lret
adc
mov
lods
imul
add
lock
inc
xor
adc
xor
leave
ficoms
mov
sbb
sbb
or
mov
jb
int3
push
loop
lds
insl
out
mov
add
jecxz
lret
mov
inc
adcb
push
fs
mov
cwtl
iret
xor
fdivr
xor
lock
or
aas
xor
cld
mov
push
jecxz
xchg
mov
xor
sub
cmpsl
out
jbe
sub
cmp
movsl
ja
jbe,pt
outsb
leave
pop
mov
push
xor
jo
inc
inc
inc
jae
int
fstps
cld
loope
jg
jb
dec
inc
stc
shll
popl
cmp
mov
addr16
sub
xor
lods
xlat
aas
sub
mov
and
ja
xor
fcoms
out
outsb
stos
popf
call
xor
ret
add
daa
mov
sbb
push
mov
scas
stc
mov
aaa
adc
cli
push
xchg
bound
cmp
mov
rcrb
or
cld
push
hlt
adc
jle
mov
ds
xchg
xchg
aaa
jae
push
inc
orl
scas
mov
sub
push
in
jl
jnp
jb
jae
outsb
stos
fildll
call
stc
xor
dec
cli
das
mov
test
dec
or
xor
pop
or
movsb
das
jmp
cltd
mov
mov
mov
or
adc
sti
jp
inc
and
gs
or
pop
cmp
pop
xlat
mov
cli
outsb
mov
cli
cmp
mov
xchg
add
add
cmp
pop
shrb
ja
xor
ss
sub
xchg
cmp
dec
push
dec
xacquire
aad
pop
sbb
xchg
pop
push
sub
clc
popa
imul
cltd
pop
and
lret
jno
xor
stos
jle
pop
mov
dec
out
cmp
sub
dec
inc
jae
arpl
pop
fs
cmp
vmovapd
popl
dec
cmp
xchg
sbbl
inc
leave
data16
je
dec
scas
into
jne
xchg
mov
orb
daa
dec
mov
sti
and
push
aad
mov
fucomip
rcrb
rep
cltd
mov
enter
xchg
loope
xor
mov
out
jbe
lods
negb
loope
xor
imul
out
push
fsubrp
or
pop
xor
ja,pt
and
enter
out
lret
js
mov
insb
jo
jae
sbb
and
decl
incl
cmp
leave
mov
lods
mov
jo,pt
mov
push
xor
shlb
xchg
mov
cmp
add
in
call
dec
jo
enter
add
faddl
fwait
jecxz
ja
hlt
xchg
daa
stos
fisubrs
or
mov
xchg
dec
imul
ss
mov
stc
testl
push
mov
repnz
and
dec
push
aas
adc
fcomps
mov
add
hlt
ljmp
aam
in
leave
and
std
lea
nop
das
bound
push
in
pop
in
into
jmp
outsl
mov
mov
subl
daa
je
jg
jl
outsl
fxch
bound
sti
pop
jl
sti
push
popf
push
ficomps
dec
lds
jg
cmpsl
stos
scas
lcall
xlat
aam
inc
sti
sub
jl
cs
lahf
iret
inc
adcb
test
sub
fisubrl
adc
daa
jbe
adc
pusha
and
rorb
mov
jne
mov
int3
lcall
into
into
imul
xchg
add
xchg
inc
int
jnp
mov
push
cltd
sub
cmp
add
xor
xor
mov
jg
sbb
xor
sub
jo
into
jnp
pop
dec
iret
jbe
aaa
adc
push
rolb
xchg
fidivl
jmp
push
rclb
shll
and
shlb
daa
cltd
leave
xor
aas
sahf
xor
sub
pop
mov
andb
cmp
xchg
and
pusha
cmp
outsb
jo,pt
inc
test
mov
pop
mov
aaa
dec
data16
test
sbb
in
dec
mov
das
sub
fcmovbe
lcall
xor
sub
arpl
inc
and
jg
data16
push
jmp
std
loope
clc
xlat
aaa
cmp
test
pop
push
imul
jbe
stc
jbe
and
call
inc
add
add
xchg
repnz
pusha
call
xchg
mov
outsl
mov
enter
test
fadds
sahf
inc
jl
ss
xor
mov
sub
scas
cwtl
sbb
test
stos
in
mov
dec
popf
loopne
sub
inc
pop
push
das
mov
int
jno
testl
call
call
pop
ror
in
cmp
pop
mov
adc
out
out
xor
push
leave
stos
shrl
mov
in
mov
mov
xadd
jno
cwtl
negb
push
lret
mov
or
fstpt
dec
dec
jle
rcr
mov
repz
insb
out
std
in
pop
pop
lock
or
lcall
xor
inc
in
pop
cwtl
sbb
arpl
loop
cmp
ljmp
dec
scas
and
mov
mov
lcall
shrl
dec
jmp
insl
and
test
popf
call
mov
push
cmp
das
mov
ret
std
inc
pushl
push
cmp
mov
test
pop
into
js
outsb
popf
lcall
popa
jne
xor
mov
cmp
out
mov
dec
sub
scas
stc
sbb
inc
rcrl
in
cmp
outsl
inc
aad
es
lret
arpl
outsl
stc
jp
xchg
adc
mov
out
pushf
jg
and
test
sub
mov
dec
cmpl
cs
in
mov
adc
sub
out
sub
es
jecxz
pusha
aas
mov
mov
sub
xlat
push
ja
pop
push
out
sub
jl
ja
mov
xor
jp
aaa
inc
dec
cmp
ret
insb
mov
test
and
inc
adc
xchg
mov
mov
call
sarl
adc
inc
aaa
dec
pop
mov
fstpl
orl
mov
adc
and
add
out
push
xor
cli
inc
cwtl
mov
cmpl
jno
jae
lods
jle
push
shll
addr16
insb
stc
and
pop
xor
push
cs
adc
or
loope
sbb
shrl
xchg
xor
mov
adc
mov
mov
jnp
pop
es
je
adc
fwait
pop
repnz
mov
in
aaa
lock
cmp
icebp
pop
repz
shll
ja
push
add
loopne
inc
loope
fwait
shr
insb
popa
lahf
sbbb
repnz
mov
out
mov
mov
outsl
stos
pop
xchg
jo
enter
int3
mov
arpl
daa
jmp
bound
daa
jae
inc
in
popa
and
push
xor
push
mov
fistl
adc
pop
jno
xor
push
and
dec
ror
push
scas
hlt
fisubrl
xor
movsl
negl
xor
call
and
aas
dec
sbb
sub
cmp
mov
mov
xor
les
mov
push
mov
xor
dec
adc
jle
jmp
inc
jne
shlb
stos
adcl
stos
test
xchg
mov
lret
push
or
insl
sar
repz
add
cmp
xchg
mov
xor
fnsave
pop
push
push
aam
adc
into
daa
ds
sub
out
addr16
cltd
dec
dec
pop
mov
test
lods
push
addb
sub
jno
dec
mov
push
inc
or
cmp
repz
dec
incl
mov
imul
and
xchg
xchg
in
and
orl
cmp
push
mov
into
addr16
push
mov
in
mov
add
hlt
addr16
or
fs
in
xlat
push
cmp
dec
or
jp
mov
mov
das
test
jne
mov
nop
jp
scas
pop
inc
xorl
dec
cmp
dec
clc
cmp
das
aad
cmc
sub
mov
mov
clc
pop
sti
out
andb
and
xor
push
enter
jne
out
call
mov
xor
mov
outsb
xchg
shlb
inc
mov
push
imul
xlat
ret
testl
pop
rclb
xchg
dec
getsec
nop
dec
daa
js
pop
repnz
mov
or
sbb
outsb
icebp
sub
cmp
bound
dec
mov
xor
inc
cmpsl
mov
sub
mov
sub
xor
daa
and
push
pop
add
imul
test
xor
out
push
adc
cmpsb
test
jp
mov
mov
stos
jno
cs
fwait
subl
fs
cmp
dec
xor
mov
sahf
mov
gs
or
repz
dec
xor
mov
mov
push
cmp
dec
or
test
or
repnz
mov
cwtl
fisubrs
mov
push
push
jmp
aaa
inc
into
inc
push
mov
fs
icebp
xor
inc
jmp
lcall
mov
push
sub
push
cmpsb
cmp
test
es
rcr
xchg
xchg
out
repz
inc
add
xchg
pop
mov
iret
pop
mov
lea
jae
push
outsb
rolb
cmp
cmp
adc
adc
fwait
fs
ror
push
mul
push
sub
mov
aaa
mov
cmp
cmpsb
test
push
loop
pop
rorl
ror
xor
loope
inc
out
fsubs
out
sahf
push
pop
or
shll
lret
bound
xchg
mov
ret
mov
xchg
push
inc
add
push
jo
mov
aad
push
dec
mov
insl
jmp
mov
ja
jmp
test
cmpsw
nop
out
test
jnp
test
jg
aas
rcll
sub
test
mov
es
addl
pop
xor
xor
outsl
cmc
hlt
mov
test
rorb
mov
jb
fmuls
std
adc
inc
loopnew
ja
sbb
adc
pop
pop
aas
mov
xorl
mov
divl
xchg
xor
ds
xor
lcall
into
add
rclb
push
jecxz
mov
ret
shlb
aaa
xor
mov
aaa
test
int
xchg
pop
or
push
mov
into
inc
mov
test
arpl
sti
ret
xchg
cltd
and
ret
push
inc
mov
or
fbstp
jns
dec
sub
scas
mov
mov
into
xchg
pop
sub
and
add
mov
xchg
out
push
pop
xchg
lret
dec
dec
sub
and
pop
cmp
out
mov
imul
mulb
inc
cltd
push
xor
sbb
aaa
int
jbe
sbb
lods
loopne
int3
loope
enter
adc
mov
negb
scas
cmpsb
push
jle
dec
push
push
daa
stc
mov
mov
mov
dec
fwait
andb
xor
dec
cmp
rclb
mov
pop
dec
into
xchg
push
in
cmc
pop
stos
xor
jo
bound
and
data16
adc
ret
mov
push
bswap
repnz
xchg
cmp
fistpll
dec
adc
outsl
adc
arpl
stc
cmp
jmp
mov
pop
aaa
xchg
int
negl
adcl
out
sub
push
icebp
mov
hlt
mov
cwtl
sub
dec
and
xor
dec
loop
mov
pop
scas
mov
push
jo
nop
mov
stc
rcll
push
aam
cli
xor
sbb
cmp
cmp
and
push
imul
xor
ret
repz
fildll
dec
mov
sbb
rcrb
into
pusha
jge
in
icebp
cltd
inc
push
pop
call
sub
mov
rcl
loopne,pn
fcoms
stos
mov
inc
test
jns
xor
cld
cmp
cmp
push
lcall
push
mov
addl
test
rcrb
dec
shlb
lahf
xorb
adc
mov
push
push
outsb
fst
in
int3
aad
cmp
push
outsl
das
into
sarb
js
mov
sbb
mov
dec
mov
inc
ret
sub
cs
cs
fisttpl
and
add
adc
mov
pop
aam
lods
subl
jmp
insl
sbb
lock
pop
call
cmc
inc
or
les
mov
sbbl
sarb
or
loopne
in
sbbb
push
lahf
mov
xor
inc
inc
sub
mov
pop
outsb
ljmp
add
or
xlat
cmp
jnp
dec
call
mov
bound
push
flds
add
jg
mov
pushf
mov
sbb
cmp
shll
push
mov
je
pushf
and
rcll
adc
mov
clc
clc
cmp
lock
arpl
out
jnp
lds
jmp
xor
test
push
sub
fistps
outsl
ljmp
aad
out
mov
ja
imul
jne
mov
dec
pop
pop
stc
mov
push
sub
mov
sbb
mov
cmpsl
cmpsl
lcall
mov
ds
cwtl
ret
lret
ret
insl
nop
sub
ljmp
inc
jo
cmpsl
mov
in
add
cmp
testb
out
sbb
jge
mov
mov
stos
repz
pop
mov
xor
or
inc
xorl
leave
xchg
sub
cs
test
pop
pop
out
lahf
stc
cmpsl
data16
test
ficomps
dec
mov
cli
sbb
pushf
aas
sbb
mov
repnz
push
and
loopne
imul
mov
daa
js
sti
fstps
push
add
push
mov
fimull
or
pop
sbb
out
mov
xor
movsb
mov
mov
repnz
bound
aas
aas
jae
clc
nop
call
mov
ss
ret
xlat
out
xlat
cmp
das
inc
sbbl
or
addr16
scas
pop
in
sbbb
xor
pop
mov
dec
jnp
push
cmp
inc
push
fistpll
dec
jns
push
fdivrl
jmp
and
repz
mov
cmpsl
inc
jb
cs
cwtl
outsl
cmp
pop
shll
lock
lods
push
cmp
add
sub
das
test
jge
insb
mov
shrb
data16
ret
cs
mov
shrl
or
mov
xchg
jb
push
push
xorb
jne
xor
ds
push
rcrl
add
mov
xchg
adc
jns
mov
sbb
popf
aam
mov
push
lea
jns
sbb
out
pushf
in
imul
xchg
jbe
xchg
jns
scas
scas
mov
out
shrb
aaa
cmpsb
sbb
sub
fcompl
xchg
ret
jne
pop
leave
dec
xchg
dec
and
pusha
adc
cmp
pop
sti
mov
dec
mov
fs
push
mov
mov
push
in
push
aad
add
xchg
adc
or
rcll
imul
enter
and
pop
dec
out
push
jae
das
das
cmp
pop
stc
sbb
dec
fcompl
insb
pop
cmp
arpl
mov
negl
stos
xor
sbbb
cmc
lret
dec
lahf
aas
dec
push
jp
adc
shrl
mov
jg
lods
int
mov
pop
cmc
adc
outsb
add
or
or
xlat
dec
mov
lock
stos
dec
dec
testl
and
add
cmp
sbb
mov
cmc
cmp
outsl
push
pop
fcmovnbe
jecxz
inc
mov
sbb
add
xor
rcrb
int3
mov
aaa
add
out
popa
adc
stos
cmc
mov
push
pop
push
dec
insb
imul
xorb
mov
lcall
cmp
sub
rcrb
sarb
cmp
push
xchg
ficoml
ljmp
inc
popa
push
and
adc
xchg
pop
dec
aaa
into
test
clc
cli
lret
in
mov
ss
repz
shrb
mov
sbb
mov
cmp
or
hlt
or
bound
mov
add
stos
dec
js
sub
push
lret
orb
insb
adc
add
cli
mov
sub
gs
xor
adc
cmpsb
out
into
mov
lea
test
out
adcb
push
push
int
push
jmp
mov
mov
xlat
push
and
shl
enter
sbbl
push
mov
add
and
aas
xchg
lods
xor
decl
pop
std
push
dec
adc
mov
add
pop
cmpb
and
ljmp
inc
adc
jle
add
jno
cmpsb
pop
fistps
sbb
icebp
sbb
mov
sub
rorl
cmp
js
daa
inc
dec
cwtl
test
popa
xor
js
jnp
outsl
mov
out
lcall
mov
cmp
int3
std
popa
sbb
ljmp
hlt
mov
cli
xor
pop
outsb
imulb
cs
mov
pusha
inc
int3
daa
cmc
jo
fildl
and
dec
dec
cmp
sub
dec
or
lahf
adc
pop
addr16
and
ds
mov
mov
fidivrs
xchg
popa
loope
pop
xor
out
mov
jne
sbb
lcall
push
push
push
aas
sub
push
lds
fwait
dec
cltd
in
xor
jno
test
sbb
xor
es
stc
xchg
jmp
lret
lcall
pop
loopne
test
ljmp
mov
jp
scas
or
mov
or
jle
jb
ret
adc
bnd
adc
adc
cmp
imull
outsl
stos
dec
leave
mov
pusha
xor
mov
sub
cmp
stos
adc
xor
pop
cmp
jbe
mov
notl
out
xor
sub
cmovns
xchg
aam
xchg
cmp
fisubl
out
lret
inc
inc
repz
shlb
scas
lods
mov
loope
xchg
jno
fwait
mov
pop
cmc
cmp
and
stos
push
xchg
out
push
inc
add
nop
pop
pop
loopne
in
stos
sahf
in
iret
dec
xchg
ret
sahf
lock
push
divl
fcoml
cmp
or
jae
xor
cmp
mov
push
out
sbb
mov
clc
mov
xor
icebp
in
das
rorl
jmp
sbb
hlt
inc
in
dec
pop
jns
iret
sub
cmp
stos
add
mov
out
dec
scas
cwtl
mov
imul
addb
test
cmc
adc
mov
out
xlat
dec
ljmp
ss
cmp
cmp
mov
sar
adc
imul
lret
mov
leave
and
sbb
xor
xchg
and
rcll
out
mov
popf
xor
and
mov
dec
bound
test
out
xor
cmp
xchg
mov
sbb
ljmp
in
sub
jb
fwait
sbb
enter
outsb
nop
cmpsl
xchg
es
add
adc
or
mov
das
xchg
cltd
cwtl
jl
insb
aaa
insl
xchg
lods
in
push
aas
inc
mov
mov
test
stc
int
xor
xchg
cmpsb
and
decl
scas
jns
mov
call
and
sbb
cmc
jecxz
call
push
cmp
jne
outsb
int3
mov
aaa
pop
mov
add
and
sub
enter
inc
adc
arpl
mov
jae
push
je
push
xlat
jbe
xor
mov
mov
cmpsb
sbb
into
push
add
gs
outsb
cmpsl
push
xor
pop
and
inc
dec
push
int
adc
or
jg
xor
add
push
in
ficoml
shrb
sub
jmp
jmp
push
and
cmp
lahf
push
dec
cmpsl
jmp
mov
xchg
pop
es
roll
lahf
cs
push
ret
adc
mov
sbb
enter
push
push
push
push
lcall
pop
xor
or
arpl
dec
inc
sub
aas
outsl
mov
jmp
push
sub
cmp
mov
mov
scas
int
adc
push
xchg
inc
push
pop
push
sub
add
in
or
mov
jo
jns
jb
outsb
dec
mov
cltd
pop
fldl
push
call
inc
dec
loopne
jb
int
and
add
out
dec
sub
push
arpl
cltd
fmuls
out
ja
xor
push
xchg
dec
add
in
lds
cmp
repz
mov
mov
out
cmc
and
push
adc
push
jp
insb
leave
jb
push
scas
cmpsl
lock
mov
mov
lock
pop
daa
sahf
sub
cmp
add
lock
push
repz
inc
pop
mov
and
daa
xchg
test
inc
sahf
and
xlat
popf
test
xor
mov
mov
or
add
or
adc
xor
js
cs
cmpsl
leave
loop
test
icebp
ret
fistl
test
fisttpl
mov
stos
adc
cmc
negl
std
shll
add
jnp
jl
xchg
sti
ljmp
pop
in
lcall
jle
push
inc
scas
dec
pop
je
pop
adc
and
test
adc
fwait
and
cmp
mov
fwait
icebp
mov
sbb
mov
shrl
mov
push
push
shlb
leave
gs
inc
dec
in
lock
add
jnp
test
pop
mov
lea
out
add
testl
xor
pop
test
add
inc
in
cmpsb
cmp
add
dec
xor
fwait
adc
cmp
push
add
je
lods
mov
int
mov
cmp
test
imul
das
in
incl
movsl
add
subb
lock
in
mov
sbb
movsb
sub
add
inc
mov
in
aas
or
and
pusha
lret
sub
ja
and
adc
cltd
mov
adc
dec
aam
pop
out
mov
sbb
mov
xchg
lods
mov
add
addb
mov
insl
ret
shlb
or
lret
or
jbe
leave
jns
icebp
push
jnp
repz
adc
mov
imul
xchg
xchg
stc
cwtl
cwtl
call
mov
or
fisubrs
push
loop
insb
aad
mov
ja
or
lret
jmp
sub
push
jbe
leave
pop
mov
shrl
repz
push
sub
pop
xchg
sbbl
push
test
ss
dec
and
dec
sbb
js
mov
stos
and
cmp
adc
mov
add
xchg
scas
sbb
push
pop
stc
xor
movsb
movsb
jp
xchg
std
cs
xchg
lds
xor
push
call
xchg
or
aaa
out
mov
dec
add
mov
mov
inc
mov
mov
movsl
jp
iret
mov
adc
shrb
xchg
adc
xchg
mov
jae
in
hlt
xchg
fwait
pop
jecxz
adc
or
out
mov
mov
cs
pop
fiadds
repnz
fildll
imul
push
sub
cmpsb
cmp
pop
fistpl
adc
bound
ja
cs
xor
gs
dec
xor
repz
pushf
inc
sub
xlat
jge
pop
stc
scas
add
mov
dec
mov
daa
rorl
xor
aad
sbb
bound
lcall
push
dec
int
adc
mov
test
arpl
dec
scas
xor
iret
fidivrs
hlt
stos
dec
pushf
or
fldt
mov
inc
inc
push
xchg
addl
mov
cmp
cmp
cmp
aaa
jmp
jbe
dec
mov
mov
or
addb
fsubrl
pop
jb
inc
mov
xor
mov
add
or
adc
or
ss
hlt
sbb
cmp
fbstp
add
psubw
xor
test
movsl
jle
outsl
mov
js
adc
jge
or
data16
repz
push
and
push
sahf
push
mov
add
fistpll
mull
ja
or
icebp
out
push
and
dec
mov
insb
inc
push
arpl
xchg
inc
mov
mulb
add
jne
ret
cmp
pop
sub
push
fists
dec
call
cmc
outsb
push
aad
into
lods
push
shll
aam
mov
jmp
out
push
pop
cmpsl
repnz
pop
sbb
add
mov
pop
inc
sbb
iret
sbb
imul
insl
mov
adc
pop
arpl
lahf
xor
es
dec
pop
dec
mov
stc
call
mov
jnp
dec
negb
rorb
xor
imul
jbe
xor
jecxz
pop
jp
mov
ret
repnz
insl
sbb
shlb
shlb
daa
sahf
cs
sahf
push
cmp
in
or
ja
test
pop
fsubs
daa
mov
pop
sti
into
push
test
mov
adc
add
imul
cs
repnz
mov
mov
push
out
out
fildl
jb
das
xor
sarl
ja
das
cltd
mov
sub
add
daa
cwtl
icebp
enter
add
mov
stc
add
mov
adc
pop
add
movsl
addr16
push
xor
es
dec
lcall
cmc
hlt
sub
sbb
mov
shlb
aas
dec
in
or
notb
mov
jno
xchg
lahf
je
jae
icebp
xchg
js
xchg
das
bound
sti
xchg
out
filds
dec
jmp
inc
cmp
sbb
xchg
mov
scas
cli
pop
dec
xlat
shll
xor
gs
pop
das
jbe
xchg
cltd
stc
andb
cmp
add
cmc
sti
jns
pushf
test
pop
cmp
lock
rorl
cmp
adc
addr16
push
mov
scas
add
xchg
xor
stos
cmp
push
mov
mov
je
pusha
mov
lock
mov
mov
dec
in
xchg
popa
loope
xor
lret
xchg
xor
adc
es
loopne
in
mov
jo
push
push
popa
imul
out
aaa
or
incl
insl
adc
sub
sub
xor
dec
jne
imul
mov
sub
test
ljmp
cmpsl
dec
mov
xchg
dec
fs
sbb
in
ret
pusha
aaa
push
jg
jl
cmp
shlb
fcmovbe
rcrl
jmp
sbb
cmpsl
xor
movsl
mov
xor
cs
xchg
ljmp
mov
cmp
or
xor
andl
xchg
cld
insb
dec
jmp
movsb
mov
inc
or
filds
out
mov
in
cs
pop
jns
mov
mov
dec
movsl
out
dec
cmpb
mov
push
sub
and
mov
cmp
sub
add
loop
outsl
add
mov
rcrl
sahf
lea
adc
push
jmp
xchg
jns
out
push
cltd
and
popa
adc
sub
call
stos
pop
test
outsl
pop
in
out
stos
mov
adc
hlt
push
dec
mov
shll
rorb
inc
or
in
rcrl
inc
pop
cmpsb
repz
adc
sub
pop
dec
lcall
fsubrp
sahf
aad
in
xlat
out
pop
xchg
sbb
sub
movsb
push
dec
mov
fwait
ljmp
aaa
xchg
push
scas
mov
addr16
and
sbb
pop
adc
in
pop
stos
xchg
pop
scas
insb
lcall
ret
mov
hlt
and
in
in
add
movsl
int3
jne
mov
cmc
aad
add
dec
or
mov
ljmp
add
addr16
fld
pop
mov
gs
frstor
adc
and
out
movsb
push
arpl
push
add
or
insb
imul
dec
ficomps
bnd
push
mov
xor
lea
fildl
lret
mov
xchg
add
mov
add
sub
mov
push
aaa
mov
and
scas
fwait
jecxz
out
dec
rcll
iret
mov
pop
and
cmp
hlt
mov
rcrb
fwait
xor
xchg
xor
ret
shll
aas
xlat
pop
and
sub
cld
arpl
pop
test
movsb
dec
pshufw
int
lret
adc
lret
mov
pushf
in
push
jno
inc
je
pop
popf
shll
mov
sbb
dec
out
dec
sub
sbb
jb
sbb
or
jns
cs
jge
cmp
xchg
jne
test
es
int3
out
ja
xchg
out
sbbb
pusha
dec
adc
adc
out
gs
in
cwtl
popa
cwtl
idivb
pusha
and
outsl
push
lock
dec
data16
mov
pop
lret
imul
test
int3
adc
setne
insl
cmc
pop
scas
xor
jne
pop
int3
cmpl
and
icebp
mov
imul
mov
das
and
adc
sbb
mull
sub
mov
mov
dec
enter
out
or
adc
dec
je
mov
movsb
cmc
ficompl
daa
sub
jb
popa
push
mov
ss
aaa
pop
jl
mov
cmpb
aaa
inc
scas
and
notl
test
sub
js
subl
ja
aaa
js
push
cmp
or
lahf
sbb
inc
dec
mov
mov
test
or
pop
cs
fmul
push
cmp
outsb
pop
inc
inc
push
push
pop
mov
insl
in
xchg
sbbb
into
adc
sub
andl
mov
mov
ror
mov
adc
mov
cmpsb
dec
bound
sbb
in
jo
cmpsl
lea
jl
into
lds
dec
dec
xchg
enter
mov
cmp
push
jmp
out
push
std
jmp
push
sub
and
adc
sbb
jmp
xchg
or
cmpsb
add
dec
adc
sahf
xor
aaa
mov
jb
mov
int
cmp
xor
inc
inc
dec
ljmp
mov
add
scas
jecxz
push
inc
mov
mov
mov
stos
jo
cmpsb
stos
out
fdivrl
shlb
jle
xchg
cli
fwait
insb
decb
mov
imul
subl
push
ret
adc
mov
sbb
adc
push
mov
xor
push
lea
push
fdivs
arpl
cmpsl
popa
lds
fstpl
xlat
mov
stos
xchg
cmpsl
testb
and
ss
pop
dec
out
cwtl
pushl
sti
push
scas
out
xchg
ret
hlt
dec
imul
call
mov
push
ss
call
add
lods
mov
das
insl
pop
jno
js
sub
fnstcw
mov
or
pop
icebp
loopne
sub
lods
push
push
clc
mov
arpl
cmp
lahf
pop
inc
push
jp
cltd
push
clc
in
xor
jne
xchg
or
stc
lahf
push
cli
mov
push
aas
int3
dec
mov
lods
lds
xchg
sbb
or
xor
imul
je
xchg
push
push
adc
gs
dec
sub
rcrb
mov
shll
adc
xchg
push
mov
imul
push
fdivl
or
ja
fwait
jb
add
aam
lock
mov
jg
cmp
jns
push
out
out
je
adc
ret
insb
mov
lock
sbb
pop
add
or
push
ss
arpl
cmp
inc
ja
rorb
aam
ret
leave
mov
or
jecxz
daa
push
and
xchg
mov
mov
inc
and
out
aas
pop
mov
mov
ljmp
cmpsb
inc
movsl
pop
xor
mov
aaa
push
fistpl
xchg
test
jp
in
sub
adc
int
and
adc
push
jne
mov
out
cmc
insb
js
bswap
dec
dec
insl
mov
popf
mov
sbb
jl
enter
pop
mov
lcallw
lahf
xchg
sbb
dec
mov
mov
xor
mov
mov
scas
in
jne
inc
push
xor
lcall
pop
rcll
mov
or
add
leave
xchg
rcrl
in
outsb
adc
sub
xor
push
icebp
sub
xor
sbb
fwait
gs
iret
leave
cmp
in
dec
mov
jno
js
pop
cmp
idiv
ljmp
xor
push
mov
faddl
iret
mov
dec
and
mov
repz
push
adc
nop
mov
outsb
or
cmp
jecxz
jno
or
xchg
sbb
and
push
pop
xchg
fcomps
dec
cltd
cltd
fnsave
pop
sub
test
into
push
push
xor
cmpsb
inc
or
jle
xchg
das
lea
insl
in
xchg
mov
and
and
mov
and
jnp
inc
jne
xchg
sbb
sub
jg
jmp
repz
enter
call
xchg
sti
test
xlat
stc
and
data16
inc
addr16
push
ret
movsl
pop
dec
xchg
fs
mov
das
push
xchg
shll
xor
cli
imul
inc
fldcw
leave
in
aaa
mov
sub
cmp
xorb
mov
pushf
fnstenv
cmp
inc
out
push
cld
add
dec
pop
in
jo
add
push
stc
daa
dec
test
movsb
and
negl
pop
mov
in
mov
icebp
subb
adc
sti
jb
pop
push
outsl
cmpl
mov
out
ljmp
pop
sbb
je
xor
cmpsl
negb
or
shll
aad
adc
in
mov
mov
push
mov
push
sbb
xchg
xchg
dec
lret
lcall
sub
xchg
inc
xlat
and
xor
or
add
lea
loope
add
out
rolb
pop
push
aaa
sub
cli
repz
push
adc
push
sub
pop
ss
pop
pop
and
sti
clc
aad
cs
cwtl
ret
jns
add
add
pop
fistps
xchg
pop
test
sarb
fmuls
test
aas
jl
sti
arpl
push
cmc
lret
xor
aam
pop
add
jns
mov
ror
cmp
arpl
mov
add
inc
sbb
or
pop
out
jle
add
int
js
jns
jg
push
pop
pop
cwtl
cmpsl
popa
and
sub
mov
test
je
xchg
mov
or
mov
data16
jmp
sub
aaa
cs
mov
sti
loopne
ss
push
stc
icebp
loop
jo
call
lret
inc
add
mov
pushl
jp
movsl
ret
xchg
mov
clc
cmp
dec
fcompl
div
mov
stc
loopne
adc
outsb
or
mov
push
xor
insl
mov
push
inc
jmp
sbb
movswl
loope
dec
mov
stos
sub
xchg
in
dec
pop
dec
ret
sub
inc
lods
pop
test
sub
mov
inc
aad
lea
sbb
pop
movsb
jae
fnstcw
xchg
imul
out
cmp
jl
inc
cmp
dec
sbb
inc
mov
ds
jae
xor
pop
sub
xchg
cs
xchg
aas
jnp
add
or
out
cmc
fsubrs
ja
pop
cltd
inc
inc
xchg
xor
loope
sub
aam
js
add
fimuls
cmpsl
ds
push
cmpsl
ja
rol
cs
fwait
lock
xor
inc
push
hlt
xchg
xor
xchg
dec
dec
leave
lahf
enter
xlat
daa
dec
or
push
dec
add
or
inc
and
mov
out
push
xlat
in
push
dec
lcall
test
lea
xchg
sub
xor
pushf
adc
sarl
daa
sbb
push
and
or
xchg
stos
and
dec
pop
mov
xchg
decb
call
or
call
pop
or
nop
scas
xchg
jne
inc
and
jne
aaa
or
or
insl
sub
sbb
mov
and
cmp
dec
movsb
mov
sarb
cmp
add
or
dec
pushf
hlt
and
and
xchg
ja
icebp
ja
ror
lds
ficoms
out
shll
cs
add
out
pop
mov
pop
notb
pop
jb
mov
outsb
in
stos
inc
inc
ret
and
lcall
repnz
jmp
inc
test
jne
push
push
jne
clc
inc
or
jb
imul
cmp
and
std
ja
xchg
icebp
jbe
jge
orb
and
in
je
fiaddl
cmp
out
dec
sub
addr16
mov
and
shlb
and
shlb
imul
sti
sbb
lods
shrl
mov
push
xchg
mov
fs
jb
movsl
adc
pop
out
cmp
scas
and
or
rolb
adc
jge
sub
daa
addr16
cmp
fs
push
pop
add
xchg
mov
jne
lods
or
cs
int3
bound
insb
add
rorl
jno
sbbl
inc
adc
outsl
nop
cmpsl
pop
add
mov
xor
out
pop
out
jae
stos
clc
cs
adc
arpl
stos
mov
add
adc
or
das
daa
iret
lcall
jbe
jo
sbb
pop
out
imul
arpl
xor
movsb
loope
sbb
pop
outsl
je
mov
push
cmp
pop
aaa
jbe
push
test
outsb
mov
cmp
lret
inc
sub
pop
inc
addr16
dec
out
outsl
sub
enter
sub
shll
mov
xor
push
shlb
mov
imul
cmp
cmpsl
cmp
cmp
push
in
push
rcrl
hlt
js
mov
fistpll
call
movl
xor
adc
mov
pop
xchg
sub
inc
bound
push
daa
mov
jmp
mov
popa
jns
lret
xor
and
test
sbb
clc
sbb
xor
add
jb
or
outsb
mov
insb
bound
mov
test
fldcw
adc
pop
outsb
cwtl
loope
es
cwtl
inc
add
cmp
mov
cmp
mov
filds
nop
arpl
pop
add
pop
scas
lahf
imul
sbb
mov
pop
ret
mov
or
add
loopne
add
mov
cmp
adc
lret
out
imul
lcall
dec
jle
dec
push
idivb
push
pop
ret
xor
mov
decb
subb
ljmp
dec
or
pop
cmpsb
into
repz
sahf
insb
mov
lret
pop
push
loope
sub
cmc
xor
push
hlt
in
fadds
push
cmp
in
adc
sub
subl
xchg
pop
and
lret
xchg
clc
add
push
mov
lret
and
mov
push
lods
insb
data16
lcall
es
inc
dec
xchg
rolb
in
add
xor
sub
stos
repz
push
xor
sahf
mov
test
add
lds
mov
dec
jnp
pop
or
sub
das
and
push
pop
push
orl
pop
mov
in
nop
dec
test
cmpsl
jne
test
adc
mov
js
into
imul
clc
fnstcw
std
jle
sahf
mov
add
test
lcall
jg
call
mov
je,pt
cmp
movsl
cwtl
mov
lret
pop
pushl
cmpsl
and
rcrb
dec
repnz
mov
pop
push
pop
mov
push
mov
rcrl
scas
dec
mov
inc
sub
filds
pop
outsl
xchg
dec
cmp
xchg
adc
xor
sahf
faddp
push
fmuls
movsb
dec
imul
imul
xchg
sub
jmp
adc
mov
dec
les
cltd
jns
or
mov
daa
push
inc
cmc
jecxz
pop
xchg
cmc
xor
fstps
jo
sbb
xor
sbb
sub
dec
iret
les
pop
mov
push
aaa
mov
movsb
mov
inc
pop
shll
leave
cld
rclb
add
xchg
test
das
pop
xchg
movsb
xchg
jbe
sbb
dec
mov
or
ret
cmpsl
jecxz
jne
imul
loope
and
rolb
fsts
movsb
dec
int
test
mov
icebp
dec
dec
sub
insb
subb
mov
dec
fisubrl
std
mov
lds
mov
inc
and
movsl
inc
mov
addr16
mov
negl
pop
mov
stos
pop
mov
mov
js
popl
mov
mov
stc
push
gs
popa
cmpsb
ffreep
jae
out
sbb
xchg
outsb
xor
pop
cmp
or
fidivl
cmp
mov
push
cmpsl
and
push
or
mov
cld
fisttps
push
cmpsb
push
fdivrs
jbe
icebp
std
es
test
call
imul
rolb
aaa
in
pop
or
xchg
cmp
inc
mov
out
mov
je
rcrb
sub
icebp
mov
pop
cmpsb
std
xchg
mov
daa
shlb
pop
imul
scas
xsha1
cmpsb
into
cli
shrb
add
orb
cmpsl
lahf
test
not
cli
lods
or
jo
into
and
mov
fists
dec
jp
out
cmc
dec
cmp
mov
sbb
addr16
mov
pop
jno
cld
jge
add
cmovl
data16
into
ror
lret
dec
xor
dec
aad
test
int
sub
ret
and
mov
push
out
popa
inc
fildll
xchg
dec
cmp
outsl
adc
icebp
sbb
mull
pop
mov
ss
mov
push
cltd
push
test
push
out
movsl
inc
xorb
inc
inc
js
lock
sbb
inc
sub
cmp
movsb
rcrl
pop
dec
scas
jae
cmp
std
mov
sub
mov
pop
push
pop
les
adc
icebp
xor
push
movsl
add
inc
and
sub
jge
xchg
shlb
test
cmp
movb
adc
add
test
xchg
aas
addr16
ret
stos
repnz
shl
mov
outsl
jle
push
jecxz
lods
int
imul
mov
cmp
pop
xchg
mov
lods
js
cmp
cmp
das
xchg
push
test
cmp
ffreep
mov
push
or
lahf
lcall
cmp
push
xchg
imul
mov
stos
jae
aas
mov
test
scas
add
in
out
les
mov
xchg
inc
icebp
lock
hlt
std
xchg
ds
lcall
mov
mov
jae
loop
cmp
sahf
insb
in
outsb
and
int
jns
rcrl
test
push
cmpsl
jb
cs
loopne
sub
cld
scas
push
ds
or
jb
push
imul
mov
dec
mov
sbb
lock
or
fldcw
adc
test
mov
hlt
push
arpl
xor
add
ret
clc
mov
cmc
loop
dec
push
lcall
mov
out
dec
into
mov
test
out
sbb
inc
push
dec
sti
inc
fnstsw
pop
lods
sub
imul
rcrb
leave
and
aam
jnp
pop
push
adc
cs
and
push
cld
xchg
aaa
and
push
pop
daa
mov
imul
adc
not
insl
mov
int3
outsl
popf
data16
iret
out
dec
int
inc
into
aad
jecxz
jbe
mov
into
lods
mov
xchg
call
mov
mov
mov
cmc
dec
mov
shlb
leave
dec
cmpsl
arpl
or
mov
push
jl
inc
rcr
and
adc
fcomi
push
push
outsl
pop
inc
arpl
stos
int
int3
mov
iret
mov
mov
dec
and
fistl
ljmp
scas
xchg
push
inc
inc
test
and
push
jae
dec
loopne
mov
shrl
or
out
or
adc
jae
sbbl
push
ss
lahf
in
std
dec
minps
cmpsl
popa
fidivrl
lret
and
popa
scas
pop
enter
push
mov
inc
cmp
ret
sarb
clc
cmp
adc
dec
stc
outsb
in
or
inc
out
fistpll
push
xchg
and
test
push
roll
mov
mov
insl
jno
iret
jb
out
andb
data16
xor
sub
push
dec
das
in
sbb
out
dec
mov
std
lock
mov
inc
add
mov
sbb
cmp
inc
xchg
out
inc
data16
je
mov
dec
stos
add
bnd
jno
mov
xor
cli
lcall
jb
jp
add
push
push
sub
pop
sub
ja
in
in
xchg
outsl
cmpsb
and
pushf
sbb
rcl
subl
pop
xchg
adc
fcompl
das
or
aas
sbb
shll
push
push
scas
mov
and
mov
mov
lods
and
sti
jno
inc
mov
sti
sahf
push
sbb
dec
fwait
cmp
pop
adc
add
dec
pop
and
arpl
and
insb
aaa
sub
ljmp
pop
mov
and
pop
outsb
jg
idiv
xor
adc
stos
scas
cwtl
sub
cmp
and
add
pop
dec
pop
lret
adc
clc
popa
fs
ret
rcl
xchg
je
bnd
push
dec
bound
iret
and
and
jmp
push
add
cmp
sub
lcall
loope
idiv
divl
xchg
xchg
mov
xlat
xor
cmp
and
lods
add
cmp
outsl
mov
mov
add
fldcw
cmp
popf
mov
int
lods
adc
mov
out
and
lret
ss
push
and
sub
rolb
into
mov
pop
orl
rcrl
add
add
sub
call
scas
mov
add
adc
xchg
pusha
add
mov
sahf
or
jo
outsb
orl
cmp
ljmp
aaa
out
lock
cmpl
push
mov
loopne
jae
test
aas
sub
test
push
popa
hlt
popw
fistps
lret
adc
loop
clc
mov
cmpsb
adc
dec
call
int
mov
out
aad
add
mov
fwait
sbb
adc
daa
pop
and
cmpsb
mov
xchg
push
push
cmp
and
cmc
loopne
lret
cmp
out
push
pop
fildl
fisubs
sbb
fimuls
or
leave
in
and
stc
imull
jg
push
cmp
jecxz
and
ret
lds
sub
mov
push
testl
dec
inc
mov
pop
pop
xor
sbb
sub
jo
push
jmp
ret
pop
lods
jbe
adc
lahf
xchg
sbb
xor
ss
xchg
add
icebp
and
fstl
test
inc
and
lock
add
aam
and
es
mov
std
mov
movsb
cmp
jnp
arpl
dec
dec
push
daa
push
mov
sbb
mov
lods
xchg
subb
jns
inc
les
xchg
mov
std
inc
push
adc
xchg
jle
xor
jo
int3
mov
jge
inc
sub
mov
jl
and
adc
xor
fsubs
and
iret
or
aad
mov
inc
jae
ret
lret
and
int3
mov
or
rcrb
ja
cmp
add
int3
inc
scas
imul
inc
pop
in
mov
popf
push
mov
lods
or
es
data16
xlat
pop
mov
mov
mov
outsl
or
ret
shlb
shll
repz
aad
int
sbb
cwtl
lock
cld
jo
pop
lea
push
in
stos
inc
sbb
repnz
cmp
in
or
sub
jbe
jmp
sub
gs
xor
push
xor
addl
jl
jbe
xor
dec
cmpl
psubsw
popa
ss
mov
bound
mov
xchg
xor
pop
xor
mov
lods
dec
out
pop
imul
or
inc
test
push
and
sbb
adcl
icebp
ret
cmp
cmp
fistps
jp
data16
insb
jo
or
mov
gs
outsb
xor
xor
mov
jno
cs
mov
xor
leave
data16
xchg
lahf
and
sub
jae
xchg
fldl
and
xor
add
scas
cmp
push
cmp
inc
loop
lds
loopne
lds
leave
jmp
loopne
mov
xchg
cld
mov
jb
pop
and
xchg
repz
test
mov
inc
adc
cmp
xor
mov
xor
cwtl
pop
int
mov
adc
dec
loopne
jnp
dec
leave
nop
rorb
mov
or
push
imul
scas
or
mov
fs
cmpb
xlat
sub
test
cmp
and
xorl
outsb
iret
pop
xchg
xor
push
push
push
cmc
adc
and
push
adc
lea
cmp
adc
mov
push
mov
cmp
xchg
xor
div
jne
adc
and
enter
inc
pop
sub
out
sub
int
push
leave
adc
jbe
xchg
xchg
pushf
cltd
adc
arpl
jb
inc
loop
mov
shll
xorb
fwait
imul
pop
inc
cmp
mov
in
data16
xor
loopne
pop
push
scas
fidivs
inc
jg
push
popf
dec
add
cmp
xlat
sarl
int
mul
leave
std
push
stos
dec
dec
jp
lods
mov
mov
dec
outsl
push
lahf
pop
call
xchg
lods
pusha
push
sub
dec
adc
test
icebp
adc
dec
mov
lcall
stos
lods
imul
sub
out
push
xchg
push
aas
pop
cmpsl
fdivl
ja
or
movsb
push
je
lcall
sbb
xlat
aam
mov
mov
faddl
jb
xor
fimull
dec
or
sub
pop
insb
push
cmp
rorb
out
cmp
andl
std
push
mov
xor
mov
ror
push
repnz
cwtl
mov
outsl
sub
mov
popa
sbb
sub
aas
sub
outsb
js
aaa
xor
jg
movntq
in
enter
pop
jbe
adc
add
cmpsb
mov
cmp
or
and
mov
mov
ljmp
shrb
addr16
xchg
jecxz
dec
cmp
mov
dec
aad
iret
dec
mov
adcb
jle
xor
sub
sub
sub
adc
lcall
inc
dec
mov
push
cmp
insl
mov
rorb
push
and
cwtl
add
xchg
cmp
and
jb
jmp
pop
sub
jbe
add
fwait
inc
cmp
dec
sub
std
sti
jbe
sti
and
and
loope
dec
cs
inc
gs
add
or
push
stos
xor
fildll
bnd
xchg
repz
dec
shr
dec
xor
mov
sub
mov
addr16
mov
jmp
adc
movsb
in
shl
push
sub
jo
mov
outsb
ret
or
data16
add
out
mov
xchg
xor
xor
push
pop
mov
outsl
push
push
nop
call
das
fisubrs
in
dec
push
arpl
stos
clc
sub
rcl
sbb
dec
dec
pushf
cmp
and
add
sbb
je
icebp
xchg
inc
xor
xlat
cli
imul
push
ret
sbb
outsb
sbb
rcr
shr
aad
sbb
loopne
int
fbstp
push
add
lret
shl
imul
inc
inc
lret
push
lods
jns
or
adc
mov
adc
jnp
lods
ljmp
sub
pop
pop
inc
mov
jmp
outsl
pmulhuw
fistps
aas
fdiv
shr
ss
ja
or
stos
pop
jae
rcrb
iret
jns
roll
inc
insl
div
dec
outsb
jge
es
cwtl
fstp
dec
ja
sub
mov
push
mov
fs
pop
lcall
push
sub
mov
cmpsl
inc
in
mov
lcall
imul
movsb
notb
es
lahf
ja
movsb
xor
sqrtps
mov
mov
fs
fwait
icebp
scas
daa
rol
push
test
jecxz
mov
pop
lea
dec
test
xor
xor
lea
mov
je
mov
ret
pop
mov
ss
dec
mov
xchg
not
aam
in
data16
out
ret
sub
mov
sarb
pop
pusha
test
xor
and
int
ja
jmp
jge
or
xor
out
xchg
xadd
stc
loope
dec
cmc
adc
or
ror
push
jo
mov
dec
inc
cltd
out
stos
push
dec
ds
push
ja
jo
fidivrl
or
pop
jno
jbe
mov
shlb
movsl
movsb
das
in
mov
nop
into
sbb
popa
je
and
dec
dec
out
add
pop
nop
jae
pop
ret
ja
and
enter
mov
xor
shlb
push
inc
call
sub
ds
push
es
cs
push
push
xchg
dec
into
or
jns
jns
mov
xchg
sub
insl
shlb
shrl
ds
enter
rorb
fidivrl
aas
mov
adcb
mov
or
push
push
sub
adc
jl
xchg
movsb
testl
enter
xchg
repnz
pop
sbb
xchg
xor
cmc
pop
stos
mov
inc
fidivrs
fs
int
les
jne
cs
gs
insl
dec
dec
stos
cmp
xor
aam
push
cld
ficompl
adc
inc
push
lds
lock
int3
das
test
xor
add
popf
jae
cli
jns
test
dec
cmp
sub
pop
out
adc
sub
aas
sti
mov
and
mov
jg
and
cmp
mov
sbb
mov
xor
cmc
lock
mov
daa
hlt
mov
or
jp
jb
lret
jmp
daa
popa
imul
mov
and
outsl
into
repnz
imul
push
xorl
xchg
cmpsl
stc
lret
rol
jmp
fdivl
lcall
xor
movsl
repnz
lea
sbb
mov
inc
ja
mov
inc
std
xlat
les
das
xchg
cmp
mov
push
or
pop
xchg
inc
bound
movb
fsubp
xchg
icebp
movsl
and
adc
jp
in
push
in
dec
add
rorb
imul
test
inc
mov
lret
or
push
xchg
xor
mov
mov
xchg
or
aad
mov
push
loopne
or
leave
adc
imull
dec
pop
imul
ret
shll
aaa
push
dec
loope
sbb
inc
cmp
xchg
and
xchg
scas
andl
push
aas
lds
outsb
ret
flds
outsb
and
mov
inc
fisubs
and
push
sub
lcall
out
lds
xor
sub
xor
ret
mov
cmp
push
mov
lds
sub
in
nop
mov
dec
jne
pop
xchg
cmp
cltd
sbb
loope
shr
in
lds
and
push
arpl
test
in
aaa
aas
cmp
lods
jnp
stos
push
sarb
mov
pop
adc
jg
lods
push
lods
mov
and
imul
add
sti
ja
pushf
cmpsb
dec
jp
adc
scas
pushl
clc
cmp
inc
xchg
movsl
dec
xor
push
xor
loope
les
cmpsb
lahf
sbb
adc
in
or
mov
popa
ffree
call
push
jl
stos
push
in
add
jno
roll
jp
add
mov
cwtl
repz
cmp
jno
mov
jecxz
pop
int
negl
lea
jnp
jle
das
pop
aaa
sahf
inc
xor
sti
dec
loopne
xchg
cmc
jb
aad
add
popa
fidivs
or
arpl
test
add
cmp
push
mov
stc
out
cmp
shlb
aaa
push
adc
aad
das
add
rol
rclb
pop
fwait
iret
sbb
jno
sub
nop
mov
xor
sub
adc
ljmp
sbb
gs
int
inc
xor
sub
arpl
and
inc
add
out
mov
xchg
xor
mov
push
jo
in
xor
jmp
sahf
aam
outsl
mov
divb
rcll
mov
sbb
addr16
push
in
dec
out
xor
scas
xor
mov
mov
cmp
shll
das
enter
sub
xor
imul
mov
insb
loope
jne
imul
shll
negl
lret
xor
mov
das
pop
das
mull
iret
mov
jmp
add
cmp
xchg
stos
aam
out
jno
mov
push
fwait
add
add
fwait
add
jmp
xlat
jo
imul
aas
cmovb
pop
xor
push
insb
cmp
inc
mov
mov
sub
das
mov
das
loopne
or
adc
mov
mov
shrl
outsl
fcomps
cmc
pop
push
adc
sub
stos
das
xchg
inc
arpl
sbb
jle
push
fwait
mov
andl
and
mov
or
add
cmp
insb
leave
dec
in
test
and
sbb
or
test
imul
inc
in
lock
push
xor
add
aas
jbe
leave
xor
mov
insl
pop
mov
push
testb
outsb
cmp
clc
ffree
sbb
insb
or
pusha
push
loope
pop
mov
or
sub
test
stos
lock
fldenv
rorb
test
xchg
test
mov
in
mov
mov
gs
mov
push
jne
mov
add
in
jl
xor
push
inc
repz
push
adcl
push
outsb
clc
mov
sub
xchg
stos
push
mov
adc
out
and
xchg
sahf
dec
pop
ret
inc
ljmp
aas
sub
add
das
clc
loopne
dec
jae
dec
jge
fstpt
sbb
push
mov
adc
xor
add
fstl
ljmp
insl
dec
ret
mov
adc
xor
and
aad
pop
rcl
push
inc
dec
push
xor
mov
cli
and
cmp
lods
js
decl
pop
mov
xlat
test
daa
rorl
push
cltd
push
xor
out
mov
inc
pop
push
sahf
sub
dec
and
jbe
std
xchg
add
icebp
mov
xor
fildll
xchg
movsb
mov
outsl
mov
lds
out
xchg
fs
mov
inc
adcl
mov
push
push
repnz
mov
add
dec
jo
cmp
xchg
lea
andl
lea
xor
scas
jecxz
lea
mov
pushl
xor
popa
pop
sbb
ficoms
jno
mov
testb
aam
jne
add
in
mov
xchg
mulb
jo
sbb
adcb
leave
and
mov
ja
dec
and
out
jl
lahf
mov
loop
adc
ljmp
ss
out
fadds
and
xchg
inc
push
jge
push
jb
repz
test
xor
xor
jg
rcll
xor
leave
lods
push
or
xchg
mov
dec
notb
imul
xchg
in
mov
enter
iret
cltd
jp
and
out
sbb
push
ja
in
sub
frstor
popa
jo
fnstsw
jno
out
jge
das
scas
bound
mov
ret
push
xchg
dec
test
jg
fcoml
lret
and
jb
sub
aaa
push
add
pop
xor
iret
sub
mov
mul
stos
das
outsl
pop
aas
stc
cld
push
cmp
insb
pop
fwait
lret
or
cmp
sub
in
sahf
fwait
push
dec
lahf
mov
inc
xchg
xchg
aas
cmpsl
insb
lods
mov
jmp
cmc
jecxz
dec
bound
pushf
loope
mov
jbe
dec
sbb
cmp
imul
in
pop
lret
cmpsb
jl
stc
mov
js
enter
cmp
sub
push
les
jae
pop
fnstcw
pop
xor
scas
adc
inc
leave
mov
fcomip
in
push
or
sbb
daa
in
lods
push
push
in
in
xor
fstl
out
movsb
cmpsl
jmp
out
push
pop
icebp
fstpt
pop
mov
cmp
pop
push
testb
int
push
sub
bound
sbbb
pop
cs
int
mov
mov
push
or
sub
in
jmp
pop
adc
push
sbb
or
movsb
jecxz
or
repnz
in
fst
stc
mov
inc
aaa
jecxz
mov
dec
sahf
jge
pop
or
inc
stos
xor
flds
add
pop
xchg
stos
jle
sub
sbb
xchg
loopne
loop
pop
mov
jecxz
daa
imul
xchg
jno
push
and
dec
test
ds
sti
sbb
mov
mov
out
or
pop
add
mov
rolb
insb
sarl
push
pop
int
inc
in
mov
sub
sbbb
hlt
pop
sahf
in
repnz
jno
xchg
add
movsb
repz
mov
hlt
dec
mov
std
shll
dec
jl
aaa
jecxz
pop
add
adc
push
rorl
jno
ljmp
and
mov
pop
and
cmp
repnz
add
in
into
negb
sbb
test
ret
mov
push
popa
lret
cli
pop
xchg
mov
adc
imul
subb
popa
push
or
push
cwtl
jmp
lods
push
sbb
adc
sti
add
add
sub
push
or
sarb
ljmp
and
hlt
pop
inc
pop
sub
shlb
xchg
adc
ret
xchg
dec
jg
adc
jbe
dec
enter
lret
dec
and
adc
icebp
push
or
sub
insl
pop
arpl
shlb
popf
roll
movsb
ljmp
sub
push
jnp
mov
or
adc
lret
ljmp
insl
out
xchg
movaps
dec
stos
push
cltd
fcomps
dec
shrl
push
iret
fdivl
shll
fwait
pop
or
mov
orb
scas
mov
in
sarl
adc
xor
and
jle
pop
outsl
subb
mulb
sbb
push
or
andl
push
and
fnstsw
cli
mov
lea
rorl
dec
cmpsb
cmc
mov
inc
pop
and
test
aam
push
je
xchg
je
push
jbe
test
xor
inc
push
xor
sti
ror
insl
jnp
js
subb
shl
aas
pop
jae
in
add
icebp
mov
cmp
cwtl
jbe
lcall
addl
test
jno
xorb
xor
mov
mov
push
or
mov
jl
mov
cmp
jb
repz
idivb
and
out
jp
sub
js
sub
xchg
jns
fildll
xchg
imul
push
cmpsl
pop
test
data16
les
mov
mov
jne
push
jl
fwait
or
xchg
jae
aas
jbe
xor
fs
arpl
sti
and
addr16
shll
loope
sarb
xor
outsb
jecxz
in
pop
jecxz
jp
mov
data16
mov
mov
cmpsb
out
mov
mov
mov
outsl
mul
jns
icebp
gs
pop
cwtl
inc
rorl
das
lahf
xchg
jo
add
addr16
mov
sub
xor
fmull
xchg
inc
xchg
xor
shl
jno
or
int3
sbb
add
arpl
sub
mov
xor
push
dec
inc
mov
mov
cmp
in
pop
xchg
xor
or
xor
ds
xchg
lahf
outsb
cmp
push
inc
xor
cmp
pop
jbe
push
in
push
and
push
add
lea
mov
inc
sub
rcrb
movups
add
xor
cmp
pop
test
mov
mov
sub
aaa
sbb
inc
stos
mov
ds
lcall
lcall
sub
pop
imul
lds
push
test
and
stos
sub
mov
sub
mov
cs
mov
sub
mov
lahf
mov
push
lret
mov
and
dec
out
ret
push
pop
push
imul
dec
sub
xor
cmp
sub
jp
mov
aas
mov
in
mov
push
cltd
std
sbb
sbb
pop
mov
adc
xor
adc
loopne
or
fistl
cmp
push
dec
inc
inc
filds
mov
jp
je
callw
push
push
or
jbe
pop
push
inc
scas
cwtl
fsubs
jae
xor
nop
out
cmc
aas
adc
das
fs
xor
sbbl
call
cwtl
xlat
pop
mov
mov
mov
dec
aas
inc
xlat
mov
jne
xsaves
inc
push
sub
dec
ds
jmp
push
inc
iret
je
pop
shrl
sarl
or
push
jne
push
imul
mov
imul
shlb
push
sarl
stos
cmpsl
lcall
add
push
cmp
and
fwait
xchg
jbe
icebp
inc
sti
ffreep
lds
in
mov
push
imul
and
push
test
arpl
cmpsb
jne
mov
es
inc
xor
lret
daa
xchg
or
ret
mov
xlat
hlt
lods
sbb
jge
dec
int
inc
pop
or
lcall
loope
call
adc
push
lea
pop
add
loop
iret
or
leave
xor
in
and
iret
ds
mov
out
ss
pop
pushf
repnz
lea
pusha
mov
and
stos
or
jne
xor
mov
sbb
jne
lea
jae
es
xchg
enter
out
scas
dec
out
sub
das
xchg
cmp
bswap
shll
lcall
xchg
fildl
inc
sarb
push
in
sysenter
aas
jno
and
add
cmpsl
mov
cmp
lock
cvtps2pd
in
push
or
pop
mov
movsb
mov
push
cmovp
add
idivb
push
push
imul
bound
mov
mov
in
nop
pop
push
jmp
dec
mov
jge
outsl
or
inc
xchg
ret
sub
add
les
inc
idivb
adc
xchg
rcll
mov
cwtl
aad
aaa
xchg
icebp
in
lods
sub
rclb
mov
pop
jno
pop
jns
jecxz
pop
test
xchg
aad
mov
int
jmp
jge
mov
hlt
xor
mov
arpl
aas
mov
out
daa
les
inc
test
iret
mov
lock
adc
bound
jo
fnsave
mov
add
insb
xor
mov
adc
mov
push
push
mov
movl
ljmp
adcb
stc
sub
rcll
lahf
sub
cmp
xchg
xchg
dec
and
xchg
pop
jmp
jno
rcr
or
pushf
out
add
dec
orl
aas
xchg
das
jo
lahf
scas
jp
cmp
mull
dec
mov
cwtl
popf
pop
push
in
jno
jp
imul
sub
push
popa
stos
lahf
pop
mov
ficoml
xchg
adc
and
jae
js
sbb
inc
and
ret
add
jne
or
cli
loop
push
cld
mov
inc
mov
mov
sbb
lret
mov
ret
xor
icebp
shll
int3
lret
adcl
out
dec
cmp
in
sbb
pop
test
bound
dec
xlat
daa
loopne
in
mov
pop
popa
arpl
movsb
and
push
jb
mov
imul
iret
movsl
xchg
xchg
out
lcall
clc
arpl
sub
movsb
repnz
push
mov
adc
sub
jo
ret
cmp
adc
outsb
push
ret
or
sub
ja
dec
jb
add
imul
fisttpl
cmp
add
adc
sub
leave
mov
call
xchg
shr
cmp
daa
sbb
outsb
add
mov
push
jb
xchg
mov
jle
jmp
je,pn
sub
imul
clc
push
sti
mov
mov
pop
dec
fstpt
sbb
sub
cli
pop
scas
lods
push
sbb
xor
lock
mov
inc
sub
fs
repz
loop
imul
aas
cwtl
mov
cmp
cmpsl
or
mov
mov
sub
iret
insb
nop
sub
pop
xor
aam
lret
lods
push
lcall
push
dec
das
sub
inc
cs
mov
cld
loopne
xchg
loopne
ret
xchg
rolb
or
rolb
scas
scas
ljmp
lret
cld
mov
outsl
aad
dec
mov
pop
jbe
cld
fldcw
or
in
push
jl
mov
sbb
dec
sub
xor
ret
sub
call
dec
mov
lahf
fs
mov
pop
dec
add
sbb
insl
out
mov
sti
stc
xor
daa
out
push
xor
or
mov
sahf
sub
mov
fcomp
out
nop
ss
out
xor
or
jecxz
and
pop
cmp
add
and
cmp
or
aam
mov
cmpsl
jno
or
inc
sbbb
cli
push
adc
xor
fimull
insb
jmp
mulb
test
aam
sub
dec
scas
cmp
pop
cmpsl
or
lahf
mov
lods
repz
lds
shl
mov
mov
xor
insb
sbb
neg
nop
aaa
xchg
lcall
shlb
test
jb
outsb
jb
mov
shrl
shr
and
pop
cs
cmp
jns
push
or
lds
pop
sub
mov
incb
xor
mov
mov
xor
add
inc
mov
sub
push
jge
dec
sub
mov
add
sub
frstor
sub
in
mov
daa
int
imul
adc
push
mov
mov
mov
out
jo
lahf
ret
add
ja
and
cmp
inc
xor
hlt
jl
push
xchg
inc
or
sbb
cmp
es
fstps
adc
jle
or
jae
add
cmpsb
in
mov
daa
mov
mov
pop
test
mov
int
and
jae,pn
jnp
add
dec
xor
into
adc
xchg
ss
idivl
cmp
loopne
bswap
out
addr16
sahf
mov
jp
test
subl
or
adc
dec
enter
jno,pn
stos
inc
inc
push
vpcompressd
loop
sbb
das
es
jae
hlt
mull
insl
push
push
xabort
add
rolb
or
into
jg
xchg
push
lahf
int3
shrb
fsts
and
into
addr16
ja
sub
add
lret
mov
ljmp
shlb
sarb
or
xorl
pop
imul
mov
add
aad
stos
push
js
jmp
xchg
jg
jbe
in
mov
repz
shrb
js
adc
add
movsl
test
in
mov
cmc
push
sub
outsl
xchg
nop
fptan
sub
mov
xor
xor
ds
je
or
jbe
push
adc
rclb
cmc
jae
or
outsl
imul
je
sbb
cmpsl
pop
imull
in
mov
nop
dec
and
clc
inc
cmc
mov
out
arpl
fwait
orb
xor
mov
mov
insb
mov
jb
iret
cmp
inc
adc
inc
push
or
lods
repz
xchg
push
fisubrs
jle
mov
mov
mov
sbb
ja
int3
dec
jb
inc
imul
sub
push
iret
out
sbb
xor
stos
jmp
pusha
sbb
dec
das
jo
and
enter
test
and
mov
push
mov
jnp
push
scas
leave
orb
cmp
inc
jae
cmp
mov
cmc
dec
add
sub
mov
jmp
jne
sti
es
xor
mov
sbb
adc
int3
stc
sti
xor
cli
mov
cwtl
add
movsl
inc
shl
xor
jmp
addr16
lahf
fwait
push
std
mov
lds
addb
rorb
pop
stos
xor
mov
or
jl
jae
roll
stos
push
insb
or
cltd
pop
jle
aad
idivb
mov
mov
and
pop
push
jno
leave
add
jge
jmp
stos
movsl
adc
cmp
mov
dec
and
mov
sbb
sub
loop
outsl
push
sub
cmp
popa
out
dec
andb
cmpsb
mov
js
sub
xchg
dec
imul
jns
and
dec
sti
jmp
push
ficompl
lcall
pop
jecxz
and
cmp
xchg
cmp
stc
push
sbb
iret
in
and
test
imul
jg
stos
sarb
mov
cmp
pushf
out
loopne
mov
stc
les
stos
sub
roll
sti
fs
int
mov
fistps
nop
inc
fists
lods
dec
jg
pop
rorb
xlat
outsl
xor
cmpsl
and
outsl
xor
jbe
lea
sti
outsl
mov
fldl
cmp
repz
or
outsb
mov
iret
mov
cmp
sbb
mov
lahf
xchg
pop
jbe
ret
or
jno
testl
das
stc
mov
inc
bound
fistps
push
test
testl
out
xchg
push
int3
xchg
push
stos
pushf
mov
sbb
jo
jle
pop
mov
jo
aaa
or
adc
lods
add
into
mov
jno
jl
add
mov
out
xor
fmuls
add
das
pushf
mov
je
jns
int3
dec
dec
int
sbb
sti
lret
in
sub
xor
in
lahf
or
push
nop
clc
jb
pop
xor
push
cmp
int
xchg
jmp
add
cltd
jno
lock
inc
mov
bswap
xor
pop
or
cltd
push
lret
dec
test
repz
sub
cmp
pop
mov
push
ds
and
out
mov
out
mov
ficoml
cmp
outsb
imul
mov
int
push
mov
inc
mov
jmp
xchg
cmp
lcall
pop
sub
mov
cmp
or
jo
loopne
mov
leave
mov
loopne
addb
mov
or
sbb
pop
in
push
ds
cmp
andl
lods
and
movsb
push
jnp
cmp
xor
lcall
fs
sbb
cltd
je
icebp
orl
dec
mov
lods
sub
outsb
sub
decb
aam
xchg
scas
sbb
or
inc
inc
sub
mov
lods
in
add
fbld
lret
shrl
imul
popa
aad
cwtl
xor
xor
fs
and
ret
fldt
or
mov
ss
push
in
sub
jnp
jmp
cmp
push
mov
or
mov
or
or
iret
into
lahf
mov
jne
jne
lcall
sbb
stc
jne
pop
push
mov
xlat
pop
mov
inc
jmp
cwtl
mov
stc
iret
je
insb
sbb
out
fwait
test
sub
pop
xor
cltd
dec
dec
push
idiv
add
out
es
adc
inc
push
xor
mov
gs
ret
dec
lahf
jecxz
mov
or
outsb
je
sti
loopne
divl
dec
test
sbb
or
xor
cmpsl
data16
ror
fdivrs
lahf
shll
cltd
xchg
and
ret
shrl
sbb
cwtl
in
test
sbb
push
scas
in
repz
insb
outsb
sub
xchg
or
ljmp
add
xchg
ss
xlat
clc
repnz
repnz
lret
xor
les
jnp
sub
sub
mov
push
push
in
fimull
xchg
xchg
or
aas
pop
aaa
add
xlat
mov
outsb
adc
lock
sub
mov
jae
jb
aad
lcall
loope
mov
pop
insl
fsubrs
into
pop
mov
xor
fldl
movsl
cmp
and
pushf
insl
movsb
aas
lock
imul
mov
sbb
sbb
inc
int3
dec
mov
xor
js
xor
jo
cmp
insl
enter
ret
movsb
add
dec
in
out
bound
cs
sub
inc
xchg
mov
xor
jmp
mov
push
mov
mov
scas
call
push
pop
shl
push
pop
aas
push
and
jnp
xor
or
inc
outsl
sbb
adc
cmp
inc
or
xchg
add
cmc
movl
repnz
in
or
cmp
out
stc
mov
push
jmp
pop
andl
pop
xor
cmp
mov
cmc
jb
lods
xor
pop
jo
leave
cmp
cmp
xlat
out
inc
outsb
test
data16
notb
pop
or
in
mov
fsubrl
cmp
fdivs
fst
cmp
lds
pop
pop
and
stc
movsb
aaa
mov
inc
mov
stc
out
stc
imulb
xlat
ja
sarl
dec
popf
dec
mov
ret
ss
mov
test
mov
inc
mov
lods
rcl
mov
ror
mov
sarb
clc
aas
imul
notl
aaa
xor
mov
sub
out
push
push
ja
insl
inc
fmuls
out
cmpsl
inc
or
xlat
loop
imul
stc
enter
rclb
gs
xor
pop
out
in
aaa
fsubrs
sbb
inc
lahf
in
ret
cli
ljmp
insb
rclb
shll
dec
cmp
cmp
int
pop
mov
or
cmp
iret
add
push
out
mov
andl
jmp
cmp
call
push
cmp
sub
mov
addr16
mov
adc
jo
shrl
mov
push
imul
insb
sbb
out
loope
ret
jns
jge
jle
push
inc
pop
inc
push
aas
pop
lcall
iret
cmp
jae
ds
shll
or
lahf
outsl
inc
or
test
das
daa
hlt
xor
daa
lea
push
outsb
push
add
mov
fldenv
push
mov
push
or
arpl
add
nop
dec
pop
inc
aas
adc
inc
incl
pop
push
ret
push
push
insl
lret
mov
iret
push
ds
ror
push
jmp
popa
mov
and
sub
stos
daa
cmp
test
icebp
mov
inc
icebp
cwtl
dec
aad
jg
js
mov
xor
sarl
push
rorb
in
shlb
lock
mov
mov
inc
pop
add
dec
clc
jge
mov
mov
add
sub
xor
cmpsl
cmpsb
adc
pop
jbe
ret
mov
cmc
inc
jg
cmp
fucomip
dec
jp
repz
icebp
aas
push
sbb
shlb
ffreep
push
icebp
icebp
jae
pop
add
add
cli
sti
je
mov
cs
inc
arpl
pop
loopne
sub
xchg
xchg
ja
pop
insb
ljmp
add
mov
push
stc
out
jnp
push
mov
mov
sub
shlb
push
aam
cltd
sahf
int3
into
das
loopne
mov
xchg
mov
sbb
push
inc
popl
mov
repz
or
test
imul
or
hlt
add
in
inc
push
lds
mov
movsl
push
rorb
icebp
inc
das
fstl
pop
mov
loope
ds
test
dec
ror
hlt
rclb
add
jmp
jg
sbb
add
push
pop
cmp
xchg
sbb
xlat
out
je
icebp
jge
pop
loopne
mov
fs
arpl
cltd
or
lret
fistps
pop
adc
lods
js
icebp
je
insb
jne
pushl
test
movsb
orb
ss
test
call
dec
mov
incb
pop
add
dec
pop
adc
sti
cmp
outsl
mov
testl
add
xchg
inc
lock
dec
insl
subb
hlt
push
mov
ftst
mov
leave
icebp
pop
nop
out
adc
push
pop
dec
pusha
repz
insb
ja
mov
mov
into
orl
mov
jae
dec
adc
push
push
or
lods
xlat
mov
in
mov
imul
lods
pop
push
repz
xchg
popa
mov
lods
sub
addr16
js
idivb
dec
mov
sub
push
shrb
sbb
std
ret
inc
mov
mov
lods
sub
cmpsb
cmc
jnp
arpl
js
testl
push
jg
mov
daa
stos
inc
cmp
xchg
pop
idivl
cmpsb
cmp
sarl
inc
push
mov
cmp
mov
cmc
pushf
pop
xor
mov
in
std
add
sub
aam
dec
rcrl
jnp
addr16
testl
push
cmpsb
push
imul
jecxz
in
push
jb
lcall
lea
cltd
lret
into
pop
rcll
iret
pop
imul
icebp
mov
jbe
mov
sub
sbb
mov
loop
frstor
pop
jb
or
mov
xor
sbb
adc
in
mov
into
ret
insl
lods
out
mov
stos
orb
xor
push
mov
sbbl
or
imul
add
mov
xor
lret
xchg
scas
adc
repz
fbstp
das
jp
and
enter
xor
cmp
mov
pusha
stc
repz
pop
jne
aas
jp,pn
out
jmp
mov
mov
or
bnd
int3
and
test
jnp
cmc
sbb
adc
mov
es
cmp
inc
xchg
mov
popa
sbb
jns
push
aad
pop
push
fdivp
cmp
inc
adc
push
sbb
mov
mov
into
and
out
adc
push
inc
lods
sahf
push
fistl
add
push
sub
aaa
pop
js
gs
and
mov
dec
pop
outsl
and
imul
xlat
and
stc
add
aad
sbb
xchg
push
adc
data16
jb
shlb
out
into
aam
pop
jno
hlt
fisttpl
aad
sub
dec
pop
mov
mov
mov
addl
mov
sub
stos
mov
cmp
addr16
adc
sar
xchg
mov
push
jmp
jg
mov
jle
xchg
mov
stos
shrl
outsl
mov
fildl
je
fs
sbb
das
mov
mov
ret
imul
mov
insl
stos
sbbl
cmp
mov
and
fisubs
or
loope
inc
push
mov
mov
mov
pop
out
lahf
pop
jge
push
fcoms
loop
scas
stos
lret
xchg
lret
lcall
sub
nop
adc
icebp
aaa
inc
testl
rorb
dec
ljmp
xor
jo
popf
mov
jmp
and
sub
mov
cmpsb
fs
dec
xor
int3
mov
out
or
outsb
push
ss
or
into
sub
in
jb
lcall
lret
xor
xchg
add
lret
lcall
rcrl
dec
cs
adc
cwtl
test
dec
xor
paddd
adc
fnsave
sbb
push
fnsave
mov
aas
push
push
std
icebp
push
sarl
lods
dec
and
mov
paddusw
push
fcmovnu
jne
and
push
in
jo
enter
sub
fwait
out
mov
sub
sub
inc
sub
mov
cmp
sbb
mov
xor
dec
fcmovnbe
cmp
rclb
xlat
dec
pop
ret
stc
inc
jne
mov
lods
call
in
sub
addr16
mov
or
xchg
push
xchg
mov
cmp
jl
cmpsb
sub
pop
repz
jg
mov
mov
xchg
mov
loope
lahf
pop
enter
inc
nop
add
jge
or
add
xor
mov
xchg
mov
es
xor
lods
lods
push
cld
loopne
and
or
push
inc
data16
rcpps
enter
adc
push
bound
stos
mov
cmc
mov
scas
xchg
inc
xor
mov
sarb
clc
aaa
push
push
push
aaa
movsl
mov
xchg
in
push
ds
loopne
mov
adc
mov
jo
xor
lret
push
pop
data16
pop
je
sub
call
fldl
sub
dec
jbe
sub
jo
or
fdivrs
mov
xor
leave
or
mov
test
mov
dec
or
clc
imul
movsl
pop
es
inc
or
xor
leave
pop
cmpsb
ret
cwtl
outsb
int
pop
and
xchg
fidivs
popf
pusha
sbb
fucomi
inc
jo
dec
aaa
jle
mov
cmpsb
int
inc
cmp
shl
insl
mov
xor
movsl
or
addr16
clc
imul
xchg
sub
cmc
ret
or
dec
sub
mov
push
dec
dec
mov
push
bnd
ret
in
stos
inc
jg
adc
dec
popa
rcll
mov
pop
sbbl
cmp
jmp
or
enter
jno
jmp
push
mov
pop
repnz
imul
mov
lret
jmp
leave
call
fadds
dec
xor
add
wbinvd
xor
pop
mov
sti
adc
jne
cld
cmp
mov
out
and
pop
jmp
rcrl
ja
sbbl
pop
sub
xor
shlb
push
addr16
out
push
sbb
pushf
sub
xchg
xor
out
push
fcompp
sbb
pop
dec
cmpsb
xlat
and
iret
mov
adc
pop
movswl
sbb
les
stc
adc
stos
sbb
repnz
imul
insb
addb
jmp
sub
sub
enter
jle
dec
add
push
push
and
imul
and
pop
and
mov
mov
xor
das
pop
jmp
inc
mov
xor
pushf
pop
scas
loopne
mov
dec
pop
xchg
dec
test
repnz
mov
push
xchg
cwtl
adc
xor
cld
jne
xor
xor
cmp
dec
push
sti
push
mov
push
std
xchg
ret
std
and
add
in
push
or
mov
out
test
pop
jns
popf
mov
mov
inc
add
lret
clc
lea
stos
ret
sub
xor
jmp
push
jl
iret
sub
adc
sbb
lock
pop
ret
aam
out
dec
mov
push
push
pop
loope
arpl
mov
cwtl
outsb
ljmp
insl
xor
ss
sti
push
add
xchg
aaa
mov
in
push
mov
negb
jnp
or
dec
jbe
cmpsl
xchg
es
cmp
and
out
popa
stc
mov
mov
pop
imul
dec
scas
bound
push
cmpsb
mov
mov
icebp
and
mov
sub
rep
xor
call
mov
pop
std
inc
shll
push
fwait
scas
inc
lods
pop
out
out
icebp
and
mov
inc
pop
in
add
mov
jo
pop
push
idivb
lcall
cmpsl
dec
xor
lods
ss
fbstp
sbb
je
cs
pop
or
inc
loope
cmp
ss
pop
adc
mov
sub
cmpsl
fstps
dec
insb
and
jae
push
cltd
clc
inc
mov
ja
pop
sbb
xchg
push
shlb
sbb
inc
jo
sub
jg
pusha
cmp
sahf
cs
xlat
cltd
inc
adc
or
test
int
ds
dec
clc
mov
insl
ffreep
xchg
nop
jge
push
mov
test
aas
arpl
mov
ljmp
adc
icebp
arpl
loope
pop
pop
mov
out
adc
mov
dec
cld
or
xor
push
les
pop
or
cmpsl
outsl
scas
mov
jmp
and
push
sub
adc
and
cmp
mov
inc
push
shrb
add
repz
das
xchg
jnp
mov
xchg
push
pop
aaa
lods
jo
stos
mov
das
cmp
ss
das
dec
mov
lret
xchg
lcall
sub
fwait
mov
pop
mov
mov
mov
fldcw
inc
into
pop
cmp
icebp
xor
hlt
call
fstpt
mov
cmp
cmp
xchg
repnz
and
pop
cmc
mov
or
outsb
out
jl
lock
sbb
mov
mov
push
ss
cltd
xchg
and
cs
stos
out
sti
mov
mov
xor
popa
dec
sub
imul
lret
sbb
or
jmp
mov
cmpsl
xchg
and
daa
add
push
in
in
loop
mov
shlb
mov
in
push
rcr
pop
mov
inc
cmp
adc
insb
in
jbe
leave
pop
fs
arpl
mov
in
mov
xor
imul
dec
sbb
mull
add
out
aas
cmp
shlb
mov
mov
ja
icebp
sbb
or
popa
or
pop
mov
call
xchg
shrl
aam
add
mov
cld
call
add
mov
adc
jle
fs
jne
rol
and
cmp
fs
push
jb
movsb
out
sub
xor
mov
and
aad
xor
and
ret
in
mov
rcl
nop
jns
jmp
inc
cmp
cmp
cli
pop
imul
cld
mov
inc
in
aam
andb
daa
in
xor
ds
andb
stc
pop
sub
mov
rorl
imul
cwtl
aas
or
xor
in
js
push
mov
pop
mov
dec
cmp
leave
ficomps
xchg
testl
test
das
ret
nop
lret
xor
repz
sbb
decl
daa
pop
xchg
aaa
or
shlb
call
rorl
sub
jo
int
inc
xor
rcrl
or
mov
push
xchg
lret
loop
test
jmp
mov
sarb
push
hlt
out
dec
mov
dec
mov
fucomp
push
daa
push
addr16
jl
sub
mov
xor
mov
arpl
movsl
xchg
flds
roll
jge
fbstp
int
rol
adc
rclb
jecxz
and
cld
add
stos
js
adc
and
mov
in
pushf
push
roll
pop
fsubrl
clc
xor
ja
cli
stc
and
jnp
jp
cmp
pop
lea
sub
scas
inc
in
cmp
lahf
outsb
mov
popa
into
mov
pop
pop
push
mov
pop
jns
aam
ror
jmp
stc
mov
jmp
or
cmp
ljmp
dec
cli
add
push
xchg
push
inc
orb
mov
mov
cmpsb
inc
shll
cmp
int3
sahf
les
pop
aam
xlat
mov
mov
add
jmp
movsl
jb
shl
lret
cwtl
data16
bound
daa
outsl
cmp
jecxz
mov
lret
lret
dec
adc
mov
test
add
cmpl
dec
out
fdivrl
addr16
add
push
add
frstor
mov
out
inc
movsb
push
fisttpl
iret
cmp
cld
inc
jo
jb
sub
out
pushf
iret
cmp
shlb
repz
outsb
pop
pop
in
pop
inc
sub
jns
jmp
aas
push
sub
jne
das
shrl
ret
or
jge
ss
repz
insb
aaa
ss
sub
inc
xchg
je
fldenv
popa
inc
jmp
or
xlat
arpl
inc
scas
inc
icebp
cmp
mul
imul
outsb
add
mov
lock
jae
and
test
scas
jp
or
cmc
mov
pop
pop
xchg
je
pop
in
cmp
xchg
sti
pop
jge
dec
inc
in
cmp
subl
pop
jge
dec
es
cmp
jg
lods
pop
jge
dec
or
cmpb
jb
bnd
and
add
mov
shrb
into
or
push
dec
mov
mov
scas
rol
dec
dec
fimull
adc
stos
outsb
inc
in
mov
shr
adcl
push
adc
cwtl
push
fisttpll
cmp
xchg
pop
mov
and
out
push
sahf
ret
jns
jl
xor
jo
jmp
xchg
js
add
pop
pop
mov
in
push
repnz
push
sub
pusha
and
ror
push
cltd
adc
mov
andl
cmp
dec
shlb
lock
cmp
das
je
and
shl
adc
addr16
das
pop
push
and
mov
or
mov
or
les
adc
cmpsl
xchg
aas
imul
lret
push
pop
stos
test
push
push
sbb
push
je
cmp
in
add
pop
inc
popf
dec
dec
mov
stc
pusha
out
sbb
inc
pop
idivb
inc
imul
cmp
loopne
pop
push
icebp
jo
dec
shrl
adc
arpl
fdivl
or
rol
dec
clc
std
adc
pusha
jb
push
hlt
stos
push
add
icebp
in
xchg
popa
cmp
or
cs
adc
jp
fisubrs
loopne
cli
push
dec
or
adc
dec
pop
nop
fstpt
xor
jno
test
mov
jbe
enter
pop
jge
push
mov
das
addb
xor
mov
insl
pop
sbb
mov
mov
rorl
in
sbb
adc
icebp
mov
bnd
lea
out
jl,pn
jg
pop
cmp
and
lret
mov
cwtl
lcall
mov
out
cmp
fisubs
jbe
sbb
mov
enter
pop
insl
push
sub
ja
lods
cmp
dec
cli
sbb
lret
pop
cmc
cmp
stos
or
and
addr16
push
sarb
imul
jmp
mov
jne
inc
mov
stc
jecxz
popa
insb
or
pop
mov
fiaddl
cwtl
movsb
lcall
jno
movsb
mov
cmc
outsl
mov
faddl
cmp
fisttps
xlat
adc
mov
mov
sub
insl
inc
push
mov
ffree
sub
lret
jae
sbb
mov
fnsave
mov
shll
stc
adc
aas
cmp
and
inc
jg
jne
insl
cmp
cmpsl
imul
add
std
ror
out
push
inc
lea
mov
sub
lea
push
pop
adc
jne
ficoms
mov
outsl
and
dec
lods
int
push
and
cmc
mov
test
sbb
and
mov
or
inc
push
cmp
movsl
push
inc
pop
xor
cmc
arpl
pop
clc
inc
xchg
test
cmc
adc
lret
mov
mov
and
test
ja
into
and
in
lahf
or
iret
jns
jns
push
js
adc
and
dec
nop
add
ret
pop
mov
sub
and
and
mov
push
adc
inc
jg
out
aaa
push
scas
mov
pop
xlat
xor
iret
cli
fwait
daa
aad
pop
xor
cs
dec
jle
mov
sub
add
dec
mov
lcall
push
nop
and
push
fldcw
mov
jns,pt
mov
xor
cltd
fildl
into
mov
pop
movsb
xor
jb
cmp
ret
pop
sub
lret
xor
icebp
sbb
xchg
pop
jbe
sarb
pop
jl
inc
inc
and
dec
lcall
push
sub
popf
scas
outsl
lock
sub
jl
inc
test
mov
push
and
adc
jge
sub
sarl
aaa
call
sub
ja
cmp
or
fimuls
cmpsl
sti
fwait
xor
shll
fmull
test
mov
repz
rorb
jg
aad
mov
fidivrl
mov
pop
sbb
sub
push
pop
testl
xor
das
je
push
stos
jp
test
mov
bound
gs
sbb
jns
push
inc
push
int3
in
leave
lock
mov
push
lods
or
dec
xor
add
sub
fadd
loopne
cld
lcall
in
insb
xor
out
xchg
add
xchg
aad
and
movsb
mov
cmp
cmpsl
dec
imul
aaa
stos
and
mov
or
stos
and
xchg
lcall
ret
stos
andl
fmuls
hlt
sbb
outsl
loopne
mov
call
cmp
addr16
xor
jge
cmp
push
and
xor
adc
jg
adc
push
mov
popa
mov
inc
sbb
lds
or
in
pop
or
bound
in
iret
pop
sti
push
pop
inc
inc
jg
mov
xchg
push
je
popf
add
insl
and
or
inc
in
dec
aad
dec
push
push
rorb
shlb
xor
iret
ds
xchg
sbb
out
xchg
fwait
cwtl
inc
adc
sbb
mov
mov
imul
cwtl
push
push
icebp
arpl
testl
mov
push
xorb
pop
imull
mov
add
dec
push
jl
cmp
icebp
andl
aaa
add
hlt
jecxz
push
adc
outsl
inc
mov
jg
push
sub
push
stc
inc
add
insl
and
imulb
or
fdivs
push
inc
cmpb
rcr
mov
ja
or
lret
in
sub
push
jbe
pop
leave
xor
lods
jae
int
insl
inc
shr
outsl
xchg
rcrb
jae
mov
movsb
popa
fisttps
out
mov
movsb
pop
mov
push
lods
add
push
mov
push
imul
mov
xchg
test
popa
mov
mov
repz
cmovb
lods
pop
add
dec
movsl
cs
filds
pop
cmpsb
fisubrs
inc
cs
arpl
pop
dec
xor
das
mov
jnp
xchg
cmc
ljmp
call
fsubrl
fnsave
adc
inc
leave
dec
mov
push
sub
js
cmpsl
push
es
mov
jle
and
pop
or
xor
pop
inc
leave
daa
inc
xor
lahf
inc
gs
es
jp
xchg
pushf
adc
pop
cmc
dec
lock
xor
shlb
cmpsb
sbb
mov
lret
xchg
pop
push
fdivr
or
int
xchg
jno
push
iret
in
inc
les
jb
into
push
sbb
int3
sub
add
xor
leave
movsl
daa
std
cmp
xchg
mov
scas
icebp
xlat
push
arpl
negl
jno
imulb
in
in
nop
add
and
fldl2t
das
das
adc
push
add
mov
jo
rol
sub
push
mov
imul
mov
pop
and
xorb
fcompl
mov
mov
jnp
leave
mov
sub
mov
imul
in
out
gs
nop
fwait
dec
adc
into
sbb
jo
shrb
adc
mov
ss
gs
scas
scas
mov
and
mov
cmp
iret
test
lahf
iret
insb
in
jmp
imul
jne
fwait
inc
inc
sbb
fnsave
fsubrs
mov
mov
nop
dec
mov
jbe
pop
xor
dec
mov
lock
mov
push
icebp
mov
inc
inc
aad
mov
dec
cs
mov
push
mull
lock
xor
pop
sbb
sub
movsl
aas
mov
inc
xchg
movsb
int3
rcll
xchg
dec
and
cmp
or
jg
push
arpl
sti
int
mov
mov
xor
push
adc
cmpsl
outsb
ret
sbb
insb
std
clc
and
iret
xchg
jl
cmp
int
stos
mov
push
jne
jae
cmp
fsubs
mov
jecxz
cs
xchg
les
pop
lock
push
adc
sub
loope
inc
roll
xchg
xchg
ja
sbb
pop
loope
enter
shll
or
lcall
jecxz
gs
cs
jne
mov
mov
bound
scas
jmp
cmp
ja
xchg
xor
adc
jle
mov
leave
in
arpl
pop
shrb
xchg
push
cmpsl
movl
cmp
dec
jo
sahf
nop
pop
xchg
and
in
ret
mov
fwait
out
push
xchg
daa
pushf
and
inc
popf
mov
add
adc
sub
fsts
pop
inc
or
arpl
imul
loop
add
mov
sbb
xchg
sub
xchg
adc
std
add
iret
pop
xor
mov
adc
das
xchg
idiv
mov
shll
daa
rcrb
decl
stos
mov
push
dec
ret
push
imul
dec
mov
dec
cmovbe
mov
lock
loop
aaa
div
cwtl
lods
dec
icebp
call
add
andl
mov
mov
push
ret
dec
dec
pop
enter
shrl
lods
mov
and
fildll
add
daa
pop
arpl
ss
out
cmp
inc
or
fcoms
mov
int3
arpl
inc
test
loop
jg
or
mov
nop
mov
jne
xor
cmp
adc
inc
shll
rol
int
mov
lds
lea
jae
loope
xchg
pop
lret
xchg
jmp
mov
ret
cltd
orb
mov
adc
lahf
fs
pop
inc
aas
jle
repnz
dec
popf
std
and
add
and
pop
pop
lods
ficoms
mov
sub
aaa
sub
mov
stos
xchg
out
mov
loope
adc
clc
subb
movsb
inc
mov
push
mov
movsl
ds
xchg
icebp
lock
xchg
inc
in
pop
pop
sti
jge
testl
mov
into
data16
inc
pop
loop,pn
fs
ljmp
mov
repnz
dec
xor
push
mov
dec
cli
mov
test
dec
xchg
push
loop
jmp
stc
and
repz
js
pop
clc
xor
dec
ljmp
loopne
xlat
push
std
in
das
cmp
jg
sub
aaa
fisttps
xchg
sub
ret
jnp
inc
adc
cmp
mov
add
pop
xor
std
mov
dec
movl
mov
add
mov
jp
sbb
imul
scas
lds
and
aas
scas
sub
repnz
cwtl
jb
dec
insb
push
cmp
inc
dec
cld
mov
clc
jmp
and
sub
hlt
lcall
cmp
mov
mov
sub
out
sbb
in
adc
jne
jl
fnsave
mov
loop
push
out
mov
jb
sub
pusha
dec
sbb
outsl
es
das
mov
and
push
in
add
xor
adc
je
mov
cmc
adc
cltd
rcll
add
cmpl
pushf
out
addr16
pop
in
out
push
sbb
scas
adc
out
scas
pop
in
jle
hlt
jecxz
nop
shlb
mov
xchg
testb
mov
or
popa
xor
dec
jne
xchg
mov
pop
mov
fadd
loope
aad
fucom
mov
outsb
cmp
xlat
sbb
movsl
mov
mov
sbb
mov
jg
fnop
xchg
pop
rcr
imul
insb
push
sub
aam
lret
test
out
paddw
jmp
insl
mov
and
pop
xchg
aaa
dec
and
push
fwait
mov
jne
lahf
adc
sub
jmp
cs
ljmp
push
pop
sub
dec
jns
test
sub
inc
fs
and
out
push
adc
xor
add
test
js
pop
xchg
jmp
arpl
adc
pop
push
rolb
xchg
mov
aas
lods
movl
lcall
mov
loopne
lahf
mov
cld
push
inc
pop
pcmpeqd
repz
mov
sub
incb
repz
es
dec
outsl
dec
jmp
das
or
dec
sub
jl
cmp
mov
ja
xor
push
adc
clc
lock
movsb
ret
imul
push
mulps
add
cmp
dec
push
lret
cmp
mov
xchg
repnz
insb
sub
js
or
sti
mov
jmp
addr16
fdivrs
xchg
test
push
in
cwtl
xor
out
mov
push
inc
xchg
out
out
cmp
push
mov
stc
aas
repz
fidivl
or
push
daa
outsl
mov
mov
sbb
sbb
fisubrs
mov
mov
test
clc
stc
clc
out
push
imul
push
pop
jmp
fdivrp
jp
inc
out
into
jbe
jo
notb
sbb
inc
pop
ficoms
mov
sbb
dec
pop
pop
mov
iret
fisubrs
mov
xchg
push
mov
stc
rolb
loope
sbb
das
xor
in
or
aaa
testb
fsubrl
sahf
jno
in
ss
pusha
ret
bound
xor
jmp
rorl
push
push
mov
sahf
sub
fucomp
mov
pop
adc
dec
dec
adc
daa
sbb
cltd
idivb
pop
test
repz
mov
es
sub
push
ffreep
push
jmp
pop
mov
fwait
cmp
dec
jmp
loopne
xor
sub
fisubs
int
loop
imul
lahf
loope
lcallw
andl
xchg
jns
int3
inc
bound
movsl
pop
xchg
fimull
mov
push
mov
dec
cmp
sub
hlt
mov
push
outsb
cs
fcoml
or
push
es
push
pop
aad
int
icebp
out
cs
cmp
sarl
dec
outsb
jo
bound
mov
ficompl
aaa
into
lods
cmp
xor
imulb
push
cmpsl
pop
lret
fstps
jmp
xchg
push
rcll
jo
xor
repz
dec
push
push
xchg
ret
test
dec
aaa
push
inc
dec
sub
mov
or
fsubrl
cmp
cmp
mov
mov
xchg
add
mov
pop
pop
enter
mov
inc
pop
xchg
jl
push
dec
xchg
fidivrs
int
mov
lea
pop
xor
mull
pop
sub
add
cmp
sbb
mov
or
cmp
mov
mov
fisubl
xchg
imull
sbb
dec
rcll
cs
ret
push
cwtl
imul
jno
mov
jbe
and
leave
mov
xorl
ret
pop
add
nop
jno
insb
sub
daa
in
sub
outsl
cmp
ret
repz
mov
pop
inc
jo
insb
sub
aaa
cmp
lock
movsl
mov
jae
mov
sub
sbb
jp
mov
push
cmp
dec
fsubs
mov
pop
pavgb
jle
clc
xor
pop
inc
pand
xor
repz
push
cmp
adc
shl
mov
fsubr
into
inc
cwtl
xchg
inc
aam
imul
mov
and
shl
add
jne
or
xchg
sub
inc
mov
xchg
cmp
aas
fnstsw
pop
push
xchg
addr16
sub
jnp
outsb
jno
inc
push
fimuls
pop
ss
fsubrs
movsl
mov
jp
enter
in
rorl
cmp
fdivl
test
stc
ja
cmp
cmp
jmp
jne
xlat
in
dec
jo
mov
fisubrl
imul
jle
xchg
rcrb
mov
movsl
shrb
or
stc
fistl
mul
pop
mov
adc
xchg
das
sub
xchg
pop
inc
add
xchg
bound
sub
mov
js
and
and
mov
ja
inc
pop
jnp
xchg
bound
sti
or
or
xchg
clc
js
pop
sub
pop
mov
cltd
std
fnstsw
push
js
test
cmpsb
in
xchg
mov
clc
js
clc
xor
dec
xchg
mov
fwait
or
into
pop
fnstcw
push
popf
xchg
imul
mov
out
and
loope
mov
ret
xchg
test
mov
popf
push
push
shll
jo
int
aas
hlt
inc
mov
sbb
mov
outsb
cli
dec
push
cmp
fdivl
push
xchg
aas
mov
adc
out
or
movsl
repz
das
sbb
cld
inc
negl
push
push
out
data16
xchg
pop
fcomps
outsb
add
or
and
adc
mov
stc
fiadds
test
aas
push
loop
inc
sbb
mov
add
push
jg
or
ja
es
fstl
mov
in
ja
cmp
imul
jg
sub
dec
push
inc
mov
xor
push
imul
adc
rolb
pop
dec
gs
sub
into
cmp
jmp
inc
inc
sub
adc
xchg
xchg
jne
addr16
fbld
adc
fidivs
dec
sub
out
ret
push
jp
gs
or
xchg
das
dec
je
adc
jbe
mov
insl
push
iret
and
xchg
jnp
dec
adc
clc
das
xchg
ror
outsb
mov
fs
aam
sti
aaa
icebp
or
addr16
mov
out
idivl
mov
jno
in
into
out
clc
stos
inc
cltd
cld
cmpsl
xchg
sub
pop
test
and
and
add
test
xor
int
lods
cmp
mov
mov
dec
lods
jnp
push
xlat
imul
jmp
imulb
in
les
add
or
mov
push
xchg
dec
or
or
cmp
out
push
push
ret
aam
xor
cmp
dec
movntq
out
xor
xchg
loop
sbb
push
ror
int
pop
outsl
addl
cmc
sti
addr16
leave
push
repnz
jbe
lcall
ds
icebp
sbb
xor
imul
inc
lock
sub
call
jp
mov
dec
shrb
ljmp
push
pop
push
test
out
jne
sbb
sbb
addl
lods
arpl
jo
and
xchg
fldl
js
xor
lahf
pop
dec
ja
lods
mov
push
jmp
je
xchg
cs
sub
mov
cmpsl
int
xor
sti
push
lods
pop
push
shrb
dec
xor
push
shl
jl
mov
mov
lea
xchg
dec
pop
pop
dec
jae
icebp
ret
cmpsl
lea
test
aam
out
test
test
mov
and
pusha
sub
jns
push
mov
xchg
enter
std
lcall
repnz
cmp
inc
push
lds
test
inc
or
insl
movsl
mov
jle
sub
adc
mov
notl
int3
pop
f2xm1
adc
dec
insb
xor
sub
xor
jecxz
jge
cmp
mov
leave
loop
lock
sub
je
inc
push
lret
flds
push
loop
shrb
sarb
cmp
mov
in
inc
fwait
push
push
sbb
test
mov
outsl
push
jns
mov
iret
insb
xor
test
or
cmp
fs
cltd
lock
mov
ret
or
fsts
pop
rcr
sbb
popa
mov
test
cmpsl
ja
jp
jecxz
and
sub
nop
pop
or
inc
cmp
lock
shlb
into
pop
add
sub
sarl
add
sbb
movsb
mov
jnp
test
mov
loopne
insb
pushf
leave
and
outsl
outsb
and
movsl
pop
jne
mov
adc
mov
sarb
lret
jb
aam
outsl
adc
mov
popa
lock
or
jg
das
iret
imul
xchg
mov
data16
xor
dec
mov
inc
movb
or
jbe
sub
inc
test
mov
arpl
sarb
mulb
mov
push
mov
lea
out
pop
sahf
insb
shlb
and
int
mov
pop
mov
pusha
or
stc
popf
inc
cmpsl
fstpl
rcrl
xchg
xchg
dec
mov
dec
fs
fdivrs
sbb
xlat
jge
ljmp
mov
popa
dec
stc
insl
and
in
add
js
dec
shr
push
icebp
inc
cmp
jo
popa
push
dec
sbb
and
mov
daa
push
stos
jnp
xchg
and
or
dec
push
inc
aaa
push
fidivrl
mov
lods
cmp
test
js
cs
aam
stos
test
popf
sbb
cld
mov
sbb
push
jmp
adc
jle
test
cmp
mov
jno
cmp
shlb
pushf
cmp
push
xchg
outsl
enter
sbb
pop
mov
fwait
xchg
jl
push
bound
cmp
data16
jns
sub
movsb
fidivrl
push
insl
repnz
adcb
xchg
loope
rcll
mov
pop
push
rcl
lock
les
xor
orl
mov
icebp
pop
pop
lret
cmp
jmp
push
or
aas
lret
out
ds
pop
outsl
sub
lods
jp
in
mov
arpl
mov
shll
push
xor
loopne
jo
lods
xchg
cmp
pop
out
gs
mov
and
inc
aas
movsb
add
lret
or
test
idiv
xor
xor
out
loop
popf
ja
cmovb
push
sub
jae
sarl
stos
cltd
push
and
inc
pushf
xchg
mov
aam
xor
icebp
in
jg
flds
push
adc
or
scas
pushf
sub
jmp
jno
mov
jb
push
pop
shlb
out
leave
movl
xchg
loope
ror
lock
scas
push
mov
lahf
xor
xchg
cmpsl
adc
and
lock
pop
test
outsl
cmpsb
bound
lcall
int
sub
adc
add
lock
lcall
xor
cs
lret
and
es
xchg
orb
adc
jnp
cmpsb
push
out
cmp
aaa
mov
aaa
fxam
mov
arpl
sub
loop
in
ljmp
jo
xchg
mov
sub
inc
popa
sti
and
pusha
push
sbb
sub
lods
push
or
cmpsb
push
movsb
paddw
mov
dec
adc
mov
loope
daa
data16
leave
or
stc
pop
fisttpl
sub
leave
aaa
rorb
push
shl
testb
cmp
lods
outsb
add
xchg
or
pop
push
cwtl
in
leave
or
pop
jnp
pop
inc
dec
push
dec
pop
mov
fisttpl
ret
adc
pop
and
pop
cmp
mov
pop
stos
inc
sub
mov
pop
mov
xchg
arpl
mov
outsb
inc
pushl
stos
jl
aaa
lret
loop
stos
add
std
in
dec
inc
movsb
jae
shrb
dec
xor
repnz
out
mov
push
and
cmpsl
mov
or
divl
test
int
cmc
jecxz
push
dec
arpl
je
or
pop
fsubrs
or
or
adc
sti
or
inc
xchg
inc
or
or
fstl
sbb
xchg
mov
sub
and
mov
ficomps
or
sub
loope
add
push
cmp
inc
imul
jns
jae
jns
push
fcmovbe
dec
sub
loope
jecxz
jne
loopne
out
xor
push
xchg
jmp
mov
sbbb
add
mov
or
jecxz
popa
jp
mov
mov
cmp
inc
dec
lret
jecxz
jnp
lcall
pop
mov
mov
jns
jae
mov
push
lods
adc
out
cli
pop
xor
xor
and
movsl
imul
fcomip
push
inc
sub
mov
aaa
test
inc
gs
jbe
jns
mov
out
arpl
push
je
aam
shl
cli
inc
clc
sub
push
mov
push
jae
add
push
pop
xor
int3
xacquire
lahf
sbb
mov
pop
scas
lds
mov
adc
adc
iret
ljmp
mov
outsb
stos
scas
push
mov
and
aas
es
scas
cli
mov
iret
sub
xor
or
lock
and
daa
in
fwait
nop
add
jmp
fs
mov
mov
xchg
jns
call
lea
push
jnp
cmc
aaa
jl
cmp
push
xchg
outsb
daa
push
lret
mov
xchg
jnp
dec
loopne
sub
ja
jne
mov
push
ret
loope
xchg
cwtl
mov
int
ret
xor
fists
hlt
dec
test
mov
fsubrl
loope
scas
add
dec
dec
stos
push
cmp
fimull
int3
inc
mov
iret
int
push
mov
mov
aam
call
mov
dec
cmp
jl
inc
gs
std
test
add
jns
adc
out
shrl
outsb
pop
lcall
mov
test
stc
gs
jns
pop
mov
jae
add
mov
data16
outsb
dec
cld
mov
mov
lret
mov
aas
stos
xor
lea
insl
stos
test
xchg
jp
cmc
and
in
fst
mov
mov
mov
stos
lahf
or
cld
xchg
xor
mov
jno
jnp
leave
daa
cltd
push
push
enter
fwait
dec
sbb
mov
call
dec
push
ret
bnd
cltd
sbb
add
dec
lret
pop
cmp
fists
mov
push
adc
mov
xchg
dec
fmulp
mov
sub
sbb
pushf
and
mov
out
aam
cltd
add
fs
inc
add
cmpsb
cmp
ja
pop
adc
clc
shrb
dec
dec
inc
ret
sbb
int3
icebp
movsl
insb
push
std
pop
fbld
inc
enter
shld
cs
sbb
push
ss
stc
and
in
mov
dec
shr
push
lea
adc
js
insl
cs
test
jno
pop
pop
add
sub
jo
outsb
sbb
mov
pop
into
sub
sbb
mov
jge
popf
in
pusha
dec
xorb
lcall
iret
sbbl
xor
test
scas
and
mov
pusha
jne
aas
mov
movsl
sbb
shr
iret
loope
hlt
mov
les
pusha
insl
mov
push
loope
inc
dec
out
int3
sarb
mov
cltd
sub
gs
jns
push
das
jecxz
mov
shll
mov
push
and
mov
call
rol
insb
outsb
in
push
xchg
and
pop
sub
adcb
dec
incb
jno
fsts
mov
mov
jno
pop
dec
xor
push
mov
mov
mov
pop
xor
lds
sahf
inc
mov
or
rolb
das
ljmp
mov
dec
and
mov
cmp
out
cmp
cmp
mov
jl
imul
mov
clc
nop
popa
adc
pop
movsb
fwait
add
int3
jns
into
push
adc
popa
fsubl
lea
int3
out
in
mov
adc
arpl
push
push
or
and
jnp
jp
and
push
jne
jmp
xor
xchg
jnp
xorb
insl
mov
mov
sarl
add
xor
pop
inc
fisttps
nop
mov
sets
fbstp
sarl
sub
mov
stc
mov
push
rcrl
add
inc
sub
lods
xor
orl
idivb
lcall
cmp
adc
inc
sbb
rcrb
add
gs
insb
xchg
jmp
inc
sub
and
inc
cld
and
sar
push
insl
xor
lods
pop
in
sub
sub
gs
aam
bound
adc
add
enter
ffreep
shrl
dec
cld
fldt
sbb
and
das
mov
outsl
xchg
imul
fcompl
loopne
xor
xlat
dec
fwait
cli
mov
push
inc
dec
fcomi
xchg
jecxz
stc
in
inc
push
aad
sbb
mov
andl
mov
stc
inc
inc
mov
xor
rcr
std
mov
in
inc
testl
cmp
adc
mov
xchg
dec
and
in
push
inc
pop
lock
inc
push
adc
jg
stos
jmp
jle
inc
jnp
aas
mov
cmp
test
xor
add
inc
push
fisubs
jmp
rcrb
in
nop
ja
inc
xor
out
ljmp
pop
scas
xchg
cmp
jmp
icebp
fistl
sub
les
mov
mov
inc
sbb
leave
sub
sbb
in
and
cmp
lea
cmc
lcall
mov
mov
push
lret
xor
in
cmp
or
xor
in
jl
mov
and
jp
push
fisubrl
negb
movsl
imul
pop
mov
sub
cs
leave
mov
jo
sub
jno
movsl
pop
ljmp
and
test
loopne
jbe
test
mov
sbb
pop
or
je
pusha
push
std
icebp
xor
mov
mov
addr16
shlb
div
dec
jno
out
popa
push
fistpl
addr16
adc
stc
hlt
inc
lock
xor
vpsllw
stos
insb
decl
aad
js
pop
inc
push
mov
cwtl
cld
notb
je
shll
lret
ret
cmpsb
stos
cld
adc
xchg
aam
nop
jge
into
pop
push
pop
add
mov
out
jle
pop
dec
sbb
stos
inc
cmpsb
pop
mov
mov
and
mov
pop
mov
and
jbe
mov
rol
add
sub
jle
pop
mov
cli
adc
inc
jo
pop
push
movsb
movsl
pop
inc
pop
mov
and
lds
jnp
imul
add
mov
fnstsw
jecxz
stos
cmp
or
ja
jns
push
xor
inc
xor
pop
lret
mov
fs
pop
aam
and
aad
sahf
dec
jnp
in
daa
jl
loopne
call
iret
cmp
out
jmp
push
jnp
sarb
mov
xchg
sub
dec
in
iret
mov
lret
pop
mov
jecxz
dec
stos
sar
int
test
cmp
push
mov
mov
xlat
je
scas
rclb
popf
and
jbe
dec
rcr
jae
clc
adc
idivb
adc
xorl
movsb
out
shll
mov
sbb
push
lods
jns
push
mov
sahf
imul
adc
xchg
sbb
aad
lret
stos
scas
add
or
mov
pop
pushf
xchg
ss
orl
bound
fstps
xor
js
dec
push
pushf
popa
sub
xor
xor
inc
xor
inc
rolb
or
cmc
adc
out
xchg
cltd
shlw
jl
adc
faddp
mov
add
shll
andb
or
sbb
cld
and
cmp
or
fcomps
mov
es
push
lahf
push
das
push
out
ljmp
arpl
fdiv
and
das
adc
sbb
ss
and
add
imul
imul
and
xchg
shll
gs
negl
nop
sbb
shll
pop
push
movnti
and
mov
mov
jecxz
movsb
ljmp
xlat
sub
adcb
mov
in
push
push
cmp
mov
jae
mull
lret
imul
jae
fwait
pop
pop
add
iret
sub
dec
int3
lahf
pop
xrelease
xchg
adc
sub
fists
lret
mov
jno
jp
dec
xlat
pop
imul
int
push
cmc
stos
cli
xchg
mov
cmp
push
les
dec
clc
sub
aam
mov
inc
pusha
sub
mov
clc
int3
subb
push
imull
loopne
pop
mov
in
adc
jo
mov
push
mov
fdivrs
in
roll
cwtl
jg
jb
jae
inc
inc
jno
xor
ljmp
inc
jne
flds
nop
jle
cmpps
iret
mov
pop
jnp
ret
or
sub
cwtl
sbb
bt
fadd
or
andl
pop
movsb
xchg
ficompl
in
jecxz
adc
mov
mov
cmp
ds
add
pop
pusha
push
xchg
jbe
add
xor
hlt
aas
das
jle
stos
push
cmp
pusha
jle
mov
push
dec
cltd
cmp
cmp
xchg
jno
cmp
jno
mov
imul
mov
jne
jns
sbb
adc
mov
js
xchg
sahf
add
push
mov
inc
subb
cmp
pop
xor
in
test
cmp
or
cmp
testb
adc
cs
loope
xlat
arpl
xchg
addr16
or
jecxz
lcall
xor
sub
testl
popf
and
loop
arpl
dec
jnp
bt
cmpsl
out
out
fwait
push
mov
das
lcall
push
ss
shrl
cmp
movl
mov
inc
dec
xchg
scas
pop
push
arpl
sbb
adc
cmp
out
cs
adc
data16
scas
and
ljmp
enter
inc
pusha
adc
push
test
int
or
and
xor
inc
or
xchg
sti
cld
jp
popf
outsl
cld
stos
icebp
fsubrs
mov
aaa
push
mov
adc
std
push
xor
sti
jb
xor
jo
insb
jmp
inc
add
inc
jmp
das
xor
push
mov
sub
and
divl
mov
or
ss
fstpl
mov
jo
sahf
shlb
xchg
xor
inc
jnp
mov
std
jb
push
ja
adc
mov
xor
cmp
cli
rcrb
mov
push
mov
fldl
movsl
je
fcmovnb
pop
push
cmc
mov
ficoml
and
inc
inc
insb
sbb
pop
push
fwait
mov
add
mov
sub
mov
pop
shl
jno
cltd
cwtl
inc
repz
ds
lret
ja
jbe
enter
std
mov
xlat
pop
loope
lret
sahf
jg
sarl
les
lret
sbb
fnstsw
pop
fidivs
mov
cltd
int
mulps
sti
or
popf
mov
cmp
pop
sub
movsl
ljmp
movsl
int3
into
push
cltd
notl
mov
dec
loope
cmp
xchg
cltd
pusha
sarl
sti
leave
call
lds
jge
jge
sti
daa
sub
andb
jo
imul
aam
adc
jge
out
lret
push
mov
dec
xor
sbb
ss
ret
pcmpgtd
dec
adc
clc
pop
jae
adc
inc
adc
xor
inc
xchg
xchg
mov
daa
sub
out
movsb
push
or
ret
pusha
sbb
adc
xor
outsb
cmc
xor
push
inc
and
pcmpgtw
das
into
dec
mov
and
ret
xchg
je
xchg
fwait
push
ror
and
pusha
fcoms
std
test
and
lahf
clc
or
aam
rep
clc
mov
stc
xchg
jmp
and
and
jmp
cmc
mov
repnz
xorl
mov
add
inc
ret
fadds
sub
adc
rclb
js
roll
addb
xchg
sbb
and
jp
inc
ret
jl
test
pop
daa
stos
nop
cmpsl
xchg
or
js
lds
loope
lods
nop
xchg
sub
imul
sbb
adc
clc
mov
vmovlps
adc
mov
clc
sahf
divl
inc
icebp
mov
iret
movsb
pop
cli
lods
add
xor
imul
not
pop
pop
mov
or
imul
jo
push
pop
les
arpl
loop
adc
xlat
dec
sbb
pop
ret
jno
add
mov
arpl
push
push
inc
xchg
aas
mov
nop
jge
enter
mov
jl
adc
add
sub
sub
divl
ds
in
lock
or
pop
pushf
outsl
xchg
mov
negl
and
inc
hlt
hlt
mov
das
add
dec
inc
sbb
das
mov
xor
daa
fbld
and
sbb
fidivrl
xchg
sub
rcrl
rcrb
jns
imul
insb
add
test
pop
mov
das
push
roll
jp
jae
inc
xchg
mov
mov
or
mov
xchg
cmpsl
adc
pop
add
and
pop
loopne
xchg
test
or
ja
fisubl
aas
out
bound
xor
into
push
lahf
cmc
mov
fldcw
push
add
or
cli
fs
jno
cmp
sub
nop
sbb
inc
jl
jp
add
dec
aad
inc
xor
fstpl
xor
cs
or
je
xor
sti
mov
mov
enter
push
dec
insl
ja
jle
or
add
jo
mov
adcl
mov
inc
mov
call
xchg
and
jecxz
pop
repnz
push
sbb
sub
pusha
push
and
mov
xorl
pinsrw
mov
xchg
jbe
jbe
sbb
mov
push
shll
int3
or
outsb
fwait
push
divb
xchg
in
clc
in
dec
mov
rorl
adc
mov
jecxz
dec
inc
inc
test
divb
sub
test
rcrb
ljmp
inc
fcomi
inc
jge
mov
mov
sub
popa
daa
push
fildll
jb
insl
fsub
scas
push
jg
fnstenv
push
pop
mov
cmpsb
sbb
lret
pop
xchg
adc
push
bound
cltd
movsb
mov
in
cmp
pop
cwtl
movsl
jb
sbb
scas
ret
sub
pop
jl
fisubl
push
cli
adc
subb
movb
in
push
or
fcmove
xchg
and
les
arpl
push
mull
scas
rorl
sbb
shl
arpl
or
jg
xor
cmp
shr
or
ljmp
je
push
in
aaa
sbb
mov
test
mov
aaa
nop
fdiv
mov
xor
in
mull
xor
xorl
pop
or
mov
pop
arpl
addps
cwtl
jb
insl
test
and
mov
in
fdiv
test
mov
pop
mov
js
inc
xchg
mulb
cld
jmp
add
aas
lds
push
stc
out
lods
rcll
jg
loop,pn
jmp
add
ret
xchg
xchg
je
sbb
pop
call
push
push
adc
adc
fsub
dec
add
mov
jl
pop
cmp
jb
cmp
mov
jo
mov
push
lock
push
movsb
sbb
xor
xor
adc
adc
jbe
pop
adc
jns
mov
out
pop
cmpsb
xor
mov
bound
sub
mov
fdivrs
cld
mov
pushf
fwait
mov
mull
cld
push
or
and
sbb
imul
push
pop
data16
scas
and
lock
mov
mov
lret
xchg
test
icebp
sbb
inc
fdivs
leave
cmp
pop
fsub
test
or
sub
sbb
add
sbb
or
stc
loopne
sub
dec
aad
in
or
es
mov
or
aam
push
pop
mov
xlat
adc
jp
hlt
mov
xchg
repnz
xorb
or
xor
mov
sbb
ffreep
pop
imul
dec
test
push
loope
lcall
mov
mov
aam
pop
sbb
daa
xor
xchg
addr16
or
int
or
push
pop
pushf
mov
cmpsl
xor
pop
and
jmp
and
sbb
xchg
mov
xchg
lods
icebp
cmc
popa
cmp
mov
clc
cli
addr16
stc
lock
sbb
and
dec
sbb
jae
inc
and
repnz
mov
out
out
pop
hlt
jb
std
adc
cmp
pop
loop
scas
int3
cmp
fisubl
sarb
mov
sbb
mov
ret
xchg
pop
or
outsl
or
mov
push
call
cmp
xor
jns
repz
xchg
shl
mov
xor
push
js
sub
add
out
jb
push
fwait
test
and
call
pusha
mov
pop
stos
icebp
or
mov
mov
lcall
dec
not
inc
es
popfw
cmc
loopne
lcall
das
cmc
cmp
and
push
shrl
testl
orb
sub
int3
cmp
xor
jmp
jae
adc
inc
icebp
sub
out
lret
lret
inc
add
push
push
or
jb
dec
stos
adc
stos
push
mov
fcomi
dec
daa
adc
cltd
dec
sbb
mov
inc
jle
pop
lret
cmp
imul
xor
jne
pop
les
cli
loopne
std
out
dec
std
mov
push
ss
icebp
stos
mov
and
dec
fwait
cli
mov
insl
imul
into
inc
adc
or
arpl
xor
adc
xor
sti
lds
pop
sti
dec
sub
mov
mov
addr16
mov
adc
pop
cwtl
jbe
fucom
xchg
mov
jle
xchg
push
pop
aas
sbb
out
int3
add
mov
arpl
mov
xor
sub
or
lea
insl
xchg
add
xchg
xlat
fisubrl
mov
push
xor
and
out
xor
loopne
das
stos
cmc
fisttpl
cmp
mov
cmp
lret
sub
call
pop
adc
mov
sub
push
cltd
mov
icebp
jp
or
adc
les
aad
cs
add
mov
sbb
jge
out
cmp
js
sbb
sub
lods
xor
imul
cmpb
jecxz
push
das
testl
loope
dec
jl
dec
xor
pop
xor
imul
sub
push
out
pushf
cmp
arpl
popa
movsl
adc
or
jg
lods
pop
jbe
sbb
lcall
mov
stos
into
daa
sbb
adc
sahf
xor
mov
stc
in
int
mov
jb
and
loop
pop
mov
xor
inc
or
iret
inc
aaa
mov
inc
int
mov
outsb
sbbb
cmp
fldenv
push
xchg
jl
xor
pop
xor
and
cs
mov
clc
rclb
insb
sub
decl
xor
mov
les
jmp
mov
mov
rcrl
repnz
xchg
daa
gs
punpcklwd
sbb
sarb
fwait
movsb
jne
jmp
sub
lcall
fdivs
pop
adc
bound
iret
and
add
ljmp
cmpsb
push
popf
jmp
iret
sbb
dec
mov
or
cmpsb
lods
in
ss
add
imul
jle
movsb
popa
mov
mov
xchg
xor
xchg
js
jbe
test
cli
inc
jae
mov
dec
fildll
divb
fnstcw
das
lret
shrl
sbb
nop
jb
push
cmpsb
movsl
mov
scas
jp
jecxz
mov
xchg
addr16
mov
inc
or
lock
xlat
dec
js
push
nop
insl
test
or
cmp
adc
cmp
or
mov
cmp
and
and
adc
and
push
jmp
push
pop
jbe
push
xlat
rcrb
aaa
lock
and
ret
jo
das
outsl
xchg
call
popa
aam
je
test
mov
sti
jg
push
outsl
rcrb
cmp
repnz
sub
xchg
outsb
bound
inc
cld
movsb
mov
lea
or
call
mov
push
test
inc
inc
xlat
sbb
or
pop
push
and
aas
flds
inc
sbb
dec
and
and
lret
adc
fucomi
ja
into
repz
cld
ds
jo
jbe
lahf
pop
fdivp
dec
inc
adc
jbe
ja
mov
outsl
dec
push
mov
movsb
pop
and
cmp
mov
mov
mov
jge
imul
call
xlat
in
mov
mov
test
stos
cmpsl
clc
enter
nop
sbb
push
cmp
inc
jge
in
lahf
adcb
cs
fists
jbe
lahf
mov
jb
dec
fidivl
scas
cli
mov
push
addr16
cmp
movsl
add
jl
pop
mov
jbe
sub
les
and
cwtl
jmp
xor
popa
ret
repz
insb
sub
shll
xor
xchg
fmull
jbe
test
imul
mov
mov
std
mov
repz
mov
push
test
xor
or
dec
mov
or
sarl
mull
lcall
movsl
dec
fcomi
cltd
in
sbb
push
das
push
adc
sbb
daa
adc
fwait
jns
and
dec
inc
roll
aad
sub
mov
cwtl
xchg
push
daa
mov
dec
cmpsl
jp
jmp
mov
cmp
cli
loopne
xchg
xchg
fcoml
fnstsw
adc
jecxz
jns
and
xchg
pop
and
fsubrl
ss
jb
jne
iret
jo
movsb
sti
pusha
loop
dec
sti
pop
adc
mov
jbe
cmpsb
and
jae
sub
xchg
xor
int
fldcw
push
pushf
repnz
ret
nop
jmp
add
loope
test
fs
testb
pop
jle
add
jmp
pop
sahf
bound
cli
adc
fdivs
lods
outsl
xor
xchg
ret
enter
jecxz
aas
push
stc
shl
adc
loop
gs
testb
jmp
dec
in
in
pop
adc
adc
jne
outsb
mov
cmp
mov
inc
cmp
popf
shll
sarb
pop
ss
push
test
mov
pop
scas
das
lods
popa
sbb
cmpsb
xor
and
pop
cmp
cltd
call
jmp
daa
cmc
fbld
cmpb
push
mov
arpl
xorl
add
cltd
xor
xchg
mov
push
mov
dec
cmpsb
xchg
rcrl
rclb
xchg
sbb
stos
inc
pop
fbld
xchg
sarb
rorb
xchg
insb
sbb
loop
or
xchg
pop
jbe
cmp
outsb
add
ret
xchg
sbb
leave
add
movsb
cmp
and
lods
cmpsl
sub
int3
inc
out
pop
cmp
pop
dec
aad
mov
mov
outsl
push
call
pusha
or
cs
push
dec
bound
xchg
mov
sub
popa
cld
xchg
jg
mov
daa
popa
or
ss
xchg
repz
xchg
lcall
mov
outsb
mov
sbb
push
dec
sub
ljmp
clc
pop
pushaw
push
imul
decb
push
push
fisubrl
test
push
mov
stos
push
lods
enter
jl
xchg
add
pop
repz
ja
sub
mov
push
mov
push
push
fbld
ret
into
push
aaa
rorb
push
scas
xor
repz
mov
or
iret
out
cs
cmp
popa
mov
dec
nop
stos
lock
sub
xor
inc
adc
xchg
out
push
push
iret
sti
or
fidivs
mov
inc
inc
out
and
in
push
adc
in
lock
sub
mov
add
or
insb
mov
jno
sti
inc
test
inc
sub
or
jae
ficompl
mov
outsb
push
aas
push
dec
nop
jmp
jg
pop
icebp
in
ljmp
fildll
ljmp
xor
push
aas
jo
inc
push
jp
lock
stos
rolb
jge
jnp
or
cmp
es
inc
push
xchg
xor
inc
mov
jg
fidivrl
adc
mov
std
test
or
in
inc
sarb
in
in
add
in
cmpsb
les
dec
sbb
jae
mov
filds
rorb
in
bound
out
pop
lahf
jl
xor
in
add
out
xchg
into
mov
push
ss
ljmp
hlt
xchg
mov
stos
movsl
fwait
xor
cmpl
les
fs
or
mov
inc
rcll
addr16
sub
loop
inc
movsb
xor
adcl
out
pop
sbb
jecxz
movsb
repz
xor
mov
xchg
and
insb
or
adc
leave
cld
or
or
and
cmp
stos
push
xchg
sahf
in
adc
push
cmp
xchg
add
push
sub
push
fwait
mov
cltd
lahf
push
daa
cld
dec
scas
jb
cs
pop
push
push
jns
mov
mov
out
test
xor
data16
rcrb
adc
mov
ficomps
pop
lea
xchg
push
mov
add
dec
sti
jp
aaa
jmp
mov
push
scas
or
dec
mov
cmp
add
sahf
sub
rol
out
mov
xor
push
adc
pop
scas
sub
cmp
xor
adcb
push
bound
or
adc
and
movsb
icebp
loope
fiadds
ja
mov
das
jno
int
pop
movsb
loopne
test
inc
scas
lret
inc
mov
insb
daa
and
dec
or
cmp
outsb
test
adc
push
inc
or
popa
cltd
inc
mov
fmuls
out
cltd
or
clc
jecxz
mov
fs
add
testb
jle
dec
cmc
jl
sbb
push
push
hlt
sbb
xorl
out
rcrl
fstl
mov
inc
push
in
xchg
in
std
std
ret
shrb
aaa
pop
fisubs
pop
in
in
pushf
or
in
lahf
cmp
test
xlat
aaa
mov
mov
jns
sub
lock
lcall
sub
push
lcall
mov
idivl
sbb
leave
mov
int3
lock
mov
push
xchg
pop
add
stc
loopne
movsl
bound
lods
push
lock
nop
fcmovnb
and
fsubl
push
mov
insb
dec
daa
mov
sarl
jg
leave
loop
inc
lods
aaa
pushf
mov
inc
movsl
jo
jae
outsl
inc
aas
xor
out
inc
jmp
jne
mov
fiaddl
or
mov
sbb
push
mul
and
jg
loope
sti
or
scas
pushf
push
mov
fldt
js
inc
lea
int3
sub
adc
ljmp
cmp
rcll
adc
push
scas
int3
notb
cmp
add
lock
inc
das
xchg
subb
mov
inc
sub
cmp
jle
je
xor
stc
mov
aas
leave
mov
dec
jbe
lret
jmp
sbb
jg
lcall
out
jge
into
xchg
pop
dec
add
adc
leave
data16
jp
jo
mov
sbb
pop
xchg
inc
data16
add
jmp
sbb
and
loope
ficoml
xor
fwait
negb
and
pop
loopne
dec
or
and
mov
fwait
add
push
outsl
sbb
dec
shlb
add
aam
loope
mov
or
cmp
xor
xor
fmul
mov
cmp
fisttps
dec
imul
ja
or
sbb
mov
aam
bound
xor
movsb
enter
movsb
jl
scas
adc
mov
out
jnp
pop
inc
xor
movsl
out
aad
out
clc
dec
test
adc
arpl
inc
int3
ds
lahf
jl
inc
stos
js
sbb
mov
lock
xor
sbb
pop
popf
je
int3
lcall
negl
out
bound
pop
enter
enter
pop
jbe
dec
and
ret
imul
xor
or
insb
cmp
push
mov
aaa
mov
test
out
movsb
cli
inc
pop
adc
lret
jo
push
mov
popf
in
mov
sub
cmpl
das
dec
push
lcall
rcrb
push
xchg
lods
dec
push
cmpsl
and
vunpckhps
lea
xor
jle
pop
jns
test
mov
cltd
aaa
repnz
arpl
es
lahf
xchg
and
mov
jle
jecxz
mov
nopl
cld
stc
fwait
aas
fs
lds
addl
lods
mov
scas
jo
sahf
mov
add
push
xchg
rcr
cs
aam
out
jnp
into
jl
sub
push
mov
cmpsl
inc
mov
es
add
rclb
and
in
fs
sbb
adc
sub
mov
test
push
fidivs
sahf
aas
icebp
jecxz
insl
mov
xchg
std
lock
or
insb
fiaddl
addr16
and
int3
inc
mov
repnz
push
lcall
or
push
lock
add
adc
mov
mov
or
dec
or
outsl
mov
mov
push
cmp
add
mov
aas
xlat
mov
in
mov
paddq
out
std
push
ljmp
xor
fsin
adc
or
leave
rol
sub
pop
push
popa
mov
fiadds
ss
mov
mov
cltd
jl
and
push
sti
les
daa
fbld
icebp
xchg
ret
lahf
insb
sti
pop
cmpl
add
inc
aaa
dec
rcrl
leave
pop
in
gs
cmpsb
daa
jecxz
ficomps
cmc
aaa
or
loope
fcmovnbe
test
and
lea
popf
test
shll
mov
and
into
add
or
enter
shr
mov
push
mov
scas
pop
pop
jbe
add
fwait
test
inc
ljmp
xchg
mov
lcall
xor
repnz
or
pop
xchg
cmp
sahf
mov
test
repz
cmp
data16
repz
mov
cli
fdivl
int3
sarl
ret
mov
mov
repz
mov
xchg
ret
dec
add
mov
repz
data16
les
es
cmc
repnz
mov
test
jl
mov
sbb
pop
test
cmp
in
addr16
jmp
aam
cmp
xor
jbe
cmp
imul
movsb
lock
pop
and
or
add
mov
jnp
pop
mov
xchg
leave
xchg
adc
push
sti
sub
popa
cmp
mov
lds
cs
xadd
inc
add
add
jbe
neg
mov
jb
xor
popf
or
lcall
fmull
mov
inc
pusha
push
out
mov
jmp
stc
loop
push
js
and
mov
sahf
data16
add
lods
jbe
movsl
cmp
scas
jo
shll
rolb
cmp
pop
sbb
stos
lds
test
cli
daa
popf
out
pop
imul
pop
sbb
sbb
out
ss
cwtl
dec
sarl
cli
push
push
pop
call
stos
mov
ds
mov
das
jle
aaa
add
push
mov
test
outsb
push
insl
out
in
push
sbb
sbb
cltd
xor
add
nop
cmp
repz
lcall
jo
subl
shl
add
movl
pop
lret
scas
or
jns
fistl
pop
fdivl
outsb
fdivl
pop
fcmovu
setno
outsb
xchg
inc
loope
sbb
mov
je
out
insb
ja
mov
divps
sti
sub
in
mov
push
bound
inc
pop
je
clc
jg
das
shll
outsl
xor
xlat
cs
icebp
inc
pop
inc
out
aam
and
sahf
neg
inc
xor
lods
int
cmp
into
sbb
inc
cmp
inc
lret
sub
push
test
sbb
lea
xor
std
mov
xor
das
pop
or
push
push
mov
dec
mov
push
sub
pusha
mov
and
data16
cwtl
dec
inc
loope
in
mov
inc
mov
add
mov
or
cmp
cli
pusha
sahf
xchg
pop
ljmp
inc
cmp
rorl
sarb
and
xchg
push
jae
int
mov
fwait
add
jne
fisubrs
je
push
push
roll
push
push
lds
ucomiss
pop
adcl
fs
aas
jmp
out
mov
inc
repnz
xor
inc
xchg
or
call
xor
icebp
jno
and
dec
cltd
in
lret
xchg
xor
cmp
add
mov
jns
ja
and
mov
jg
cmp
into
fnstenv
mov
stos
es
adc
adc
cmpsb
movsl
loop
sub
in
mov
xor
je
cmp
add
cmpsl
call
std
iret
fcomps
lret
adc
sub
xchg
inc
push
inc
or
adc
aad
clc
push
repz
adc
movsl
jge
xchg
loop
jbe
pop
add
popf
inc
push
dec
pop
aas
cmpsl
sub
addr16
std
and
sarl
jge
lods
pop
loopne
aas
psrad
mov
lcall
lods
inc
enter
xchg
imul
pop
inc
test
cmpl
sbb
jg
popa
lods
cmp
dec
popa
out
cmpsb
pop
lea
push
jno
xchg
jle
xchg
fcomp
ss
sbb
push
pop
jmp
xchg
testl
into
in
and
inc
xor
jbe
imul
in
jb
mov
cmp
das
stc
push
mov
lret
ljmp
adc
inc
adc
dec
inc
icebp
push
clc
fiadds
dec
mov
mov
incl
mov
inc
dec
js
aas
xor
aas
rcrb
cld
push
adc
mov
lret
cmp
ss
pop
lods
in
shrl
mov
xor
push
sub
cmp
sbb
cmc
outsb
or
jns
mov
shr
pop
wrmsr
mov
add
mov
sahf
lock
push
shrb
push
aad
mov
push
sbb
sti
loop
mov
mov
sub
aaa
jo
jb
dec
sub
ja
cmp
or
sbb
pop
imul
scas
ss
into
xchg
xor
xchg
adc
or
dec
fwait
icebp
sub
xor
mov
push
sub
lea
leave
nop
out
clc
inc
sub
jo
sbb
out
incb
xor
jle
mov
mov
jo
popa
cmp
loope
push
mov
cmpsl
and
pop
mov
jno
sub
or
lahf
ret
arpl
jbe
cld
mov
xor
outsb
adc
mov
outsl
mov
adc
pushf
shl
inc
adc
mov
xchg
les
lds
das
jae
push
arpl
aaa
or
into
inc
cmpsl
add
and
xchg
hlt
pop
mov
xchg
pop
js
lods
hlt
cs
pop
jbe
fiaddl
sub
addr16
xchg
arpl
rcrl
lret
mov
push
scas
jo
mov
xchg
jne
cmp
add
xor
inc
lret
inc
jl
insb
js
jo
mov
les
pop
inc
add
pop
dec
shrb
adc
adc
repnz
lcall
mov
xchg
bound
incb
popa
popf
and
fidivl
mov
psllq
paddw
inc
mov
mov
push
cmp
and
sti
inc
ljmp
aas
and
sub
pcmpgtw
adc
sub
daa
cmp
or
daa
sbb
pushf
testl
push
sbb
xchg
or
adc
fwait
mov
xchg
or
nop
sarl
cmp
xor
xor
lcall
cli
faddl
fldenv
js
mov
fwait
outsl
lcall
xor
xor
pop
dec
js
loope
push
mov
dec
int3
loopne
sub
out
push
mov
dec
in
sub
xlat
repnz
cmp
outsb
ss
sbb
insl
xor
adc
sub
jno
sub
outsb
std
cmc
mov
or
jnp
and
mov
mov
adc
dec
nop
outsl
ljmp
repnz
mov
int3
inc
insb
lret
pop
jne
jge
sbb
dec
divb
lea
or
mov
add
cmp
outsl
dec
popa
xchg
mov
enter
add
insl
les
sub
cwtl
push
inc
insl
rorb
cmc
push
shrb
out
iret
sub
int
clc
movsb
icebp
imul
ret
add
mov
aaa
jb
jg
xor
mov
push
xchg
xchg
fiadds
lods
cmpb
psrlq
in
lret
shlb
inc
sub
mov
imul
roll
repnz
mov
xor
sbb
xor
andb
or
pop
push
lahf
aas
in
hlt
jg
mov
inc
lea
and
jge
adc
sub
xchg
mov
push
jne
subb
repz
rcrl
add
lret
add
outsl
out
loop
divl
xchg
add
mov
pop
cltd
hlt
leave
jb
jp
and
adc
repz
adc
mov
sub
mov
dec
dec
sahf
mov
stc
insl
outsb
push
sub
push
cmpsl
mov
mov
jp
mov
pusha
call
pop
cmp
cwtl
xchg
int
sbb
loopne
test
jge
lahf
sti
and
movsb
pop
and
fwait
mov
or
sub
lret
or
popa
rol
mov
jns
jnp
xor
inc
fbstp
je
mov
arpl
and
dec
ja
push
jns
mov
rolb
int
mov
mov
jno
adc
mov
insl
push
xor
loopne
dec
sti
and
mov
dec
leave
bound
cmp
xchg
xchg
mov
lds
lods
and
hlt
push
mov
xchg
cltd
inc
fmuls
xor
je
je
mov
jmp
test
js
aas
xchg
shlb
pushf
pop
insl
jns
sub
or
and
stc
xchg
rclb
mov
xlat
sub
in
xchg
sbb
pop
mov
pusha
xor
das
pop
aas
in
je
in
mov
les
cmp
mov
xchg
sahf
or
outsb
lcall
push
jecxz
jg
ljmp
xchg
jb
and
jle
inc
sub
dec
push
cmp
or
leave
mov
mov
rcll
add
or
cmp
xchg
cmp
enter
pushf
xchg
sbb
scas
lret
mov
icebp
fwait
addb
cmp
inc
push
ljmp
insl
pop
daa
insl
pop
or
xorb
nop
adc
gs
int3
das
push
jno
and
fs
inc
xchg
push
dec
mov
fnstcw
por
outsb
jb
dec
gs
enter
mov
or
mov
jp
movsl
mov
clc
mov
push
cmp
inc
pop
inc
pop
cmp
sbb
push
cmpb
shlb
mov
std
repz
shr
pop
push
and
xor
loopne
inc
jg
testb
fs
cli
xchg
mov
sti
dec
pop
jmp
daa
pop
cmp
adc
js
push
xlat
cld
call
stos
out
push
or
cmp
cmp
push
cmp
push
subl
sbb
aam
xor
mov
inc
xor
ja
xchg
into
push
xchg
lods
pop
push
aam
pop
ret
jo
and
and
test
aas
dec
jns
decb
das
lock
cmp
mov
add
mov
aas
scas
cltd
jg
stos
insb
mov
jns
inc
pop
stos
mov
sarb
popa
ret
repz
push
addb
jns
inc
dec
push
fcmovb
and
xor
xor
int
lock
enter
testb
stos
push
incl
xchg
pop
idivb
push
jmp
fwait
mov
lahf
mov
mov
rcll
jp
ret
push
jp
mov
dec
sbb
jns
shlb
mov
mov
iret
stos
and
cwtl
sub
ja
inc
addr16
scas
mov
popa
ss
aaa
icebp
or
sti
push
bound
cmp
xor
movsb
jg
mov
mov
lret
cmp
scas
inc
inc
in
mov
push
sub
dec
arpl
cld
sbb
mov
scas
lods
push
mov
jl
cmpsb
sbb
stc
adc
stos
dec
inc
xor
adc
xchg
push
shrl
mov
push
fisttpl
fcomp
and
and
ljmp
push
fwait
out
add
sub
into
xor
pusha
lcall
loopne
add
dec
mov
or
or
lret
pop
and
enter
pop
out
scas
dec
in
mov
sub
jp
out
mov
ret
cwtl
jbe
ja
push
mov
jno
lahf
xlat
loope
cltd
mov
xor
mov
jge
imul
dec
jae
adc
add
outsl
sarl
stos
xor
lcall
scas
iret
and
lcall
ljmp
push
outsl
stos
lret
push
loope
sbb
push
notl
and
in
outsl
pop
test
sub
outsb
arpl
jb
cmp
push
pusha
imul
shll
sahf
pop
nop
leave
scas
inc
cwtl
sub
cmpsl
jne
sbb
out
add
shll
pop
outsb
mov
sti
cmovb
rolb
incb
add
arpl
xorb
adc
push
mov
popa
mov
imul
and
and
sbb
pop
int
scas
movsb
and
push
and
lret
mov
mov
xchg
rcl
sbb
jp
pop
je
mov
lcall
jne
rcrb
sub
and
jmp
push
es
ret
or
rcll
lret
adc
lahf
shll
xchg
add
ficoms
inc
sub
sahf
push
jge
je
rolb
add
cmp
outsb
icebp
push
aas
int
fdivrl
clc
and
fcomip
imull
xor
aad
hlt
mov
mov
sub
adc
aaa
enter
xchg
add
iret
call
cmpsl
pop
das
mov
loope
cmp
xchg
lock
test
inc
dec
add
aam
adc
arpl
aam
sbb
push
mov
xor
pop
ret
iret
pop
in
lods
fnstcw
jmp
lret
scas
jno
cmp
xor
jae
out
scas
jae
pop
sub
inc
cmp
sub
xchg
jmp
sub
loop
sbb
cmp
scas
lret
sbb
lods
int
stos
xchg
jp
in
aas
inc
pop
push
shrl
pop
dec
aam
sti
test
ret
andl
sti
movsb
jne
inc
mov
dec
pop
imul
and
loope
setp
dec
cli
xor
push
iret
add
mov
sub
or
test
sub
ss
cmp
repnz
mov
rolb
sub
adc
fstpt
ret
sti
pop
jns
imul
inc
mov
in
jb
pop
popa
push
cmp
lahf
out
dec
jne
push
int3
insb
or
inc
aaa
mov
cli
or
xor
cmp
fidivs
call
inc
lret
cmp
xor
and
ret
sbb
lahf
mov
mov
repz
and
dec
inc
fcompl
jnp
imul
mov
push
rorb
dec
push
push
pop
pop
mov
push
ret
ret
dec
mov
addl
lcallw
xor
lahf
js
loop
xorl
mov
push
les
inc
rcr
pop
mov
xchg
fsubp
ss
sbb
rorb
xor
call
lods
rorb
call
inc
or
fmuls
mov
pop
pop
cmpsb
loope
dec
mov
jge
dec
push
jl
lea
out
ja
fistpl
jns
dec
and
pop
insl
xor
stos
sbb
mov
rolb
jle
cmpb
jle
mov
pop
mov
les
sarb
imul
adc
aas
stc
faddl
fdivrl
inc
or
and
or
cli
lret
aas
push
enter
in
sub
loopne
sar
push
sub
mov
xlat
dec
pop
out
insl
cmp
stos
cmp
das
and
jp
cwtl
pushf
mov
shr
push
cmpsb
jle
xlat
das
add
testb
mov
orb
push
inc
push
xor
pop
daa
xlat
dec
into
inc
stos
outsb
popf
loop
cwtl
dec
inc
int
scas
mov
loopne
cmp
les
scas
adc
mov
test
dec
insl
push
mov
aaa
and
aam
icebp
loopne
add
iret
sbb
hlt
push
cwtl
add
cmp
fnclex
ljmp
stos
lcall
jmp
mov
jae
jecxz
mov
cmp
addr16
jbe
cmp
mov
jns
das
or
pop
xor
push
jb
mov
imul
dec
sbb
scas
xchg
mov
xchg
sti
jecxz
adc
cltd
adc
rolb
out
mov
cltd
cmp
push
ss
aad
pop
aas
mov
test
mov
inc
icebp
dec
aaa
in
in
loop
cli
jbe
sub
stos
pop
lret
hlt
das
jecxz
lods
imul
daa
imul
testl
pusha
cmpsl
sub
inc
jp
add
xlat
inc
cld
cmp
jl
rcl
xlat
into
cwtl
jmp
push
out
sub
xchg
mov
sbb
js
sub
pop
out
cmp
xchg
loope
aaa
icebp
aas
cmp
nop
sub
sahf
adc
int3
outsl
test
scas
sahf
outsb
ffree
std
adc
shlb
sbb
jle
push
mov
cmp
mov
sub
nop
idivl
mov
dec
in
lcall
das
loopne
and
pop
sbb
loope
jmp
mov
movsl
loope
jne
sbb
lea
pop
out
loope
jl
ss
push
ficoms
lds
dec
sub
mov
inc
movsb
cltd
mov
daa
push
cmp
cmpl
xor
xchg
jmp
in
cli
push
and
jmp
xchg
push
push
int3
in
xor
mov
or
inc
sbb
pop
mov
jecxz
mov
lds
add
sub
mov
push
mov
lock
cmpsl
rcll
mov
inc
inc
adc
xor
cmp
fsubp
into
mov
jl
pop
inc
xchg
lods
inc
insl
addr16
xchg
psraw
pop
add
lds
scas
add
into
cwtl
popa
mov
call
gs
dec
icebp
sbb
and
and
pop
outsl
add
inc
out
cld
cltd
sub
push
sub
shrb
movb
sarl
pop
xchg
pop
in
out
mov
scas
add
and
aad
xchg
cmp
loopne
inc
mov
pop
call
inc
enter
adc
xchg
js
int3
cmc
mov
pop
add
mov
mov
pop
jmp
ret
test
jb
psrld
imul
xor
xor
lds
das
pop
adc
sbb
les
outsb
rorb
loopne
das
jecxz
jnp
add
mov
cmp
into
pop
push
sub
ds
je
jle
fcomps
jmp
xchg
jns
imulb
jno,pn
aaa
arpl
ja
or
fnclex
xlat
cmpsb
movsb
test
sub
adc
repz
int
or
push
repz
jl
ret
jl
push
fcoml
jnp
adc
lahf
mov
mov
jo
adc
lret
inc
leave
or
mov
and
les
xchg
cmc
das
push
notb
mov
lods
lret
xchg
xor
nop
pop
push
or
ds
fcoms
lret
lea
call
push
xchg
sbb
inc
cli
ss
xchg
jle
test
or
mov
jae
ljmp
movsb
jns
lods
xchg
mov
stc
leave
lock
in
xchg
mov
cs
scas
je
test
mov
mov
shl
inc
xchg
mov
and
fisttpl
sub
xchg
mov
cmp
aas
xchg
outsl
pushf
push
dec
jne
mov
adc
dec
cmpsb
push
jmp
subb
cmpsb
sbb
test
pop
pop
js
lcall
jl
arpl
gs
adc
sub
sbb
mov
mov
xchg
lods
jecxz
repnz
xchg
jnp
sbb
cld
insl
adc
jg
push
push
mov
xor
fisttps
aaa
sbb
and
pushf
insb
popf
cltd
scas
xchg
repz
xchg
mov
pushf
loope
aaa
js
ret
movsb
dec
push
cli
cmp
stos
sbb
dec
jnp
testl
popf
movsb
xchg
enter
call
test
cmp
pop
add
mov
cwtl
sar
inc
xor
dec
push
aaa
push
push
nop
inc
pop
push
push
imul
icebp
ss
call
enter
push
mov
push
aas
das
mov
adc
mov
dec
sarb
data16
jb
pop
adc
aas
xlat
stc
inc
aas
imul
je
sarl
pop
sbb
cmp
mov
xlat
lahf
push
jle
mov
add
adc
pusha
inc
ja
xchg
jp
jle
mov
mov
movsl
lahf
dec
loope
mov
and
xor
push
mov
scas
int3
push
mov
dec
movsb
push
push
inc
cltd
mov
add
stos
test
xor
jmp
jae
ficoms
nop
mov
cmpsb
pop
cmp
inc
and
cmp
push
jge
stc
das
mov
rcll
lods
mov
xchg
mov
mov
out
out
cwtl
push
rcll
add
cmpsl
lahf
js
add
movsl
repnz
pop
test
rcll
cmpsl
mov
outsb
dec
cld
loopne
mov
outsb
xor
std
ds
mov
nop
imul
mov
xlat
or
jg
shll
mov
xchg
jmp
cwtl
test
je
xchg
pop
jne
lcall
sbb
jg
mov
xchg
stc
rolb
addr16
das
test
movsb
mov
into
push
or
dec
shlb
insb
sbb
mov
mov
push
data16
adc
shll
das
mov
sbb
xchg
andl
mov
ja,pt
icebp
add
xor
pop
adc
and
sub
outsb
or
jnp
jmp
imul
fmull
mov
shrb
push
out
and
aas
cmp
shrl
mov
mov
lea
clc
lods
mov
cmp
pop
jl
xchg
aaa
mov
pop
das
ficomps
scas
inc
push
xchg
mov
faddl
mov
push
popf
bound
mov
fistpll
inc
dec
sub
lds
mov
sub
enter
pushf
movsb
fcomi
jp
sbb
mov
les
push
ds
testl
nop
rclb
inc
hlt
fnsave
sbb
ret
push
cltd
enter
xchg
push
cwtl
cmp
mov
cmp
push
mov
and
push
push
ret
pushf
mov
popa
test
push
inc
add
mov
das
test
sbb
xchg
mov
jno
stc
stc
arpl
mov
ss
dec
movsl
int3
fsubl
outsl
mov
rolb
popa
push
shlb
in
outsl
jns
mov
pop
mov
adc
cmc
cmpsl
sub
movsb
jp
jg
and
xchg
sub
iret
add
negl
out
and
subb
icebp
jecxz
pop
add
cwtl
adc
int
iret
jae
imul
stc
loop
xor
push
cmp
into
push
inc
cwtl
adc
mov
popf
mov
push
sub
das
lcall
outsl
inc
inc
mov
push
test
dec
or
xor
ficoms
loopne
outsl
movsb
scas
arpl
mov
jge
mov
mov
add
scas
xor
stos
call
pop
outsb
xor
cmc
jmp
push
sub
mov
mov
insb
ljmp
xor
push
mov
mov
or
or
jecxz
pop
push
sbb
cmc
bound
pushf
add
inc
ret
cmp
cli
sarb
icebp
pop
movsb
cmp
lret
pop
popa
ljmp
test
mov
outsb
out
mov
cmp
mov
dec
icebp
mov
outsl
ja
mov
or
shl
sub
hlt
dec
mov
cmc
rolb
xor
in
sub
mov
fadd
xchg
int
loope
ficoml
xchg
sbb
pop
in
push
aam
pop
lret
or
mov
addr16
jb
stos
pop
ret
arpl
inc
sbb
adc
rorb
out
inc
push
int
adc
aas
pushf
push
mov
movsl
fmuls
push
in
push
pusha
clc
daa
sbb
cmp
or
or
jno
pop
add
sti
dec
loope
and
int3
mov
jne
lock
xchg
cwtl
mov
mov
popa
gs
lahf
cwtl
push
sbb
dec
enter
cmp
jno
shrb
aad
jb
inc
popf
std
rcrl
or
aam
sub
arpl
mov
sbb
xchg
shlb
testb
or
sbb
jno
push
popa
inc
int
or
imul
cltd
das
es
xchg
imul
les
ffree
idivl
stos
xchg
or
repz
gs
bound
popf
out
lods
cmp
pushl
pop
pop
cmp
and
sbb
movsb
xchg
jb
cmp
inc
aad
ja
fstps
fistpl
aas
pushl
int
and
dec
cmc
aaa
sub
pop
mov
shrl
daa
inc
ds
popa
dec
pop
mov
xchg
aaa
xchg
xor
stos
add
sbb
lcall
mov
ds
mov
mov
pop
and
out
dec
rcll
add
scas
mov
stos
rcll
pop
rorb
pop
sub
into
jno
mov
fidivs
mov
icebp
cltd
leave
jp
mov
mov
sbb
push
ljmp
add
cmp
mov
lret
pop
imul
mov
rclb
sbb
and
xor
mov
push
lds
mov
push
lea
imul
cli
push
js
pop
and
test
cmp
mov
mov
hlt
outsb
inc
xlat
enter
std
xchg
push
mov
or
pop
xchg
adc
outsb
stc
xchg
fidivrl
jae
iret
leave
jae
jnp
pushf
pusha
mov
repnz
pusha
or
sub
push
punpckhbw
rcrl
ljmp
test
mov
mov
data16
addl
loope
lods
pop
lea
push
dec
mov
dec
stc
mov
stc
out
mov
icebp
mov
loope
mov
pusha
fsts
cmp
hlt
inc
sub
dec
dec
mov
es
aam
cmpsb
ret
dec
das
outsb
test
mov
mov
push
fs
cmpsl
scas
xor
mov
sahf
lods
pop
sbb
fimull
add
mov
sbb
cmp
test
and
xlat
jbe
jg
sbb
pop
iret
xor
not
inc
icebp
push
xor
push
bound
cli
cwtl
cmpsl
shll
loopne
mov
or
iret
fwait
sbb
mov
imul
push
or
test
repz
or
ja
in
in
addr16
outsl
scas
pop
aad
sbb
test
dec
test
or
pop
loop
movsl
hlt
icebp
jae
sub
add
sarb
into
and
mov
mov
test
dec
imul
daa
adc
xchg
add
add
jp
ss
and
push
dec
outsl
jno
lcall
fadd
xchg
sti
je
rorb
pop
sbb
mov
cmp
lods
je
xor
mov
adc
hlt
incb
iret
cmp
sbb
cmpb
int3
aaa
adc
mov
lcall
imul
mov
orl
add
and
lea
cmp
push
mov
push
addr16
cli
ret
fsubp
mov
cld
fs
popf
xor
or
ss
push
clc
jmp
cmp
nop
subb
xchg
sub
insb
push
push
dec
out
std
bound
daa
push
cmc
pop
sahf
sti
xor
insl
jns
aam
es
xor
hlt
add
int3
jp
sbbl
jae
cltd
neg
leave
inc
cmp
jns
jbe
inc
jnp
dec
mov
inc
pop
addr16
pop
test
push
adc
stos
mov
jg
mov
adc
ror
mov
sarb
pusha
and
mov
or
mov
repz
loopw
insb
mov
dec
int
test
xor
push
jno
xor
fwait
icebp
movsl
pop
ret
adc
sti
dec
push
mov
mov
add
push
xlat
in
adc
pushfw
ss
push
out
imul
aas
sub
out
mov
xchg
jno
dec
in
aam
fadd
aam
xchg
cmp
imul
jo
mov
inc
out
out
adc
and
inc
push
dec
in
mov
pop
lea
mov
mov
mov
push
pushf
inc
jecxz
mov
stc
mov
cmc
jno
push
call
in
adc
bound
aam
xchg
outsb
fidivrs
ret
xorl
ss
or
cmpsl
bound
data16
pop
lcall
xchg
and
mov
push
dec
pop
ja
xchg
pop
leave
adc
jnp
inc
lods
mov
call
sarb
add
negl
sub
xchg
testl
inc
das
xor
fldcw
mov
insb
and
xor
cmpsb
inc
aam
popa
pop
es
ljmp
lret
pop
decl
out
sub
xchg
in
outsb
mov
lret
xchg
cmpsl
sub
push
xchg
sub
stos
pusha
xor
lret
jecxz
adc
sbb
test
outsl
enter
mov
adc
pop
adc
inc
jns
push
inc
adcl
mov
lea
ds
mov
xor
push
pop
hlt
cmpb
sbb
dec
stc
mov
mov
ljmp
cmc
ret
dec
jb
push
fwait
and
sarl
pop
cmp
filds
aas
jae
aas
cmc
imul
mulb
xlat
xor
dec
loopne
add
mov
insl
cmc
mov
or
into
aad
data16
cmc
nop
ljmp
jnp
outsb
or
cmp
movsb
dec
inc
inc
pop
fiaddl
out
pop
scas
jno
int
add
and
mov
loope
mov
cmpsb
pop
inc
cwtl
push
push
aad
je
fimuls
sub
mov
adc
dec
inc
sub
push
xor
xchg
imul
adc
sahf
hlt
pop
push
xor
sub
addr16
cmp
movsb
cwtl
add
in
imul
sub
enter
leave
push
adc
movl
pop
push
clc
outsb
stc
push
sti
mov
setae
mov
adc
fistpl
lcall
arpl
mov
aas
cmp
cmp
cmp
mov
aas
mov
xchg
push
pop
dec
sbb
mov
adc
adc
shrl
dec
jbe
push
mov
mov
pushf
adcl
sub
js
out
mov
add
arpl
shl
mov
insb
xchg
psubd
fcomi
xchg
hlt
adc
sub
mov
in
insl
push
je
fisubrs
out
push
mov
dec
xchg
popa
mov
out
push
push
push
add
mov
add
cmp
cs
inc
xchg
stc
mov
mov
icebp
testb
jns
clc
jmp
add
cltd
in
push
out
and
xchg
add
daa
dec
leave
mov
repz
lock
add
and
mov
jb
jno
push
jl
adc
enter
ds
sti
mov
push
dec
inc
hlt
bound
mov
insl
inc
mov
outsb
mulb
nop
clc
mov
mov
aam
es
ret
loopne
push
xchg
pop
adc
jb
pop
xchg
in
sub
mov
mov
xadd
cmpsl
mov
sub
out
lahf
fsubl
add
cmp
pusha
fsubp
inc
pop
aam
or
ds
cmc
loop
push
sub
mov
xor
call
ret
scas
sub
in
fldenv
sub
mov
stos
daa
iret
js
dec
fistpl
fmull
pop
mov
in
mov
inc
pushf
or
popf
sbb
cmp
mov
jo
out
cmp
int3
inc
add
movsb
leave
cmp
pop
or
clc
inc
cmp
jl
addr16
and
shl
sbb
lret
and
fnstcw
iret
or
dec
pop
not
fwait
dec
cmp
ss
push
mov
mov
mov
xor
and
imul
push
fdivs
push
mov
push
pop
outsb
mov
mov
mov
or
gs
inc
int
mov
mov
xchg
data16
jne
loopne
sub
mov
sbb
leave
jmp
stos
in
inc
xchg
and
jmp
inc
dec
add
ss
inc
xor
adc
les
ja
mov
add
test
xchg
push
sub
nop
addr16
dec
pop
ja
lret
loopne
pop
stos
push
xchg
pusha
rcrl
popa
ret
jb
add
lock
roll
inc
adc
mov
mov
loop
fucom
gs
adc
ss
xchg
or
clc
rcrl
xor
pop
mov
pop
pop
xchg
pop
inc
jg
pop
inc
jp
push
mov
lea
mov
and
call
and
idiv
cmp
pop
jo
gs
icebp
xchg
mov
pop
mov
jae
and
mov
xchg
loop
lahf
icebp
movsb
std
cmp
push
imull
or
daa
jb
mov
lock
pop
inc
popf
outsl
popa
dec
repnz
mov
out
mov
imull
int
ret
stc
cli
xchg
call
add
testb
lds
push
mov
inc
pop
push
icebp
pushf
xor
pushf
push
xchg
mov
pop
sbb
xor
stc
mov
xor
mov
adc
sub
pusha
je
pop
mov
idivl
jp
mov
icebp
push
into
jae
out
jo
mov
jl
into
iret
js
push
out
sub
or
or
mov
js
adc
cmp
inc
pushf
int3
jo
clc
xor
daa
outsl
shlb
movsb
jp
jb
movsl
push
pop
imul
xchg
sub
push
cli
pop
pop
xor
mov
cltd
loope
mov
mov
mov
add
xchg
jmp
lcall
out
ds
aas
mov
add
dec
jbe
jecxz
and
dec
pushf
popl
xor
add
xor
clc
mov
filds
test
dec
in
cmp
pop
xor
xchg
cmc
jl
pusha
mov
hlt
cmp
loopne
bnd
lret
mov
push
test
insl
xor
popf
dec
test
jbe
push
jno
aaa
out
ds
inc
jle
push
ljmp
sub
in
adcb
mov
int3
cmp
push
xchg
out
stc
call
sbb
fs
jecxz
xor
mov
clc
sub
fisttpl
js
ret
sub
lock
enter
insb
add
sbb
cmp
mov
pop
mov
inc
push
imul
jecxz
iret
mov
xor
push
jmp
lret
pop
mov
push
shrl
in
jp
sub
repz
faddp
inc
int3
scas
ret
rcrl
dec
sub
scas
into
adc
sti
data16
scas
xchg
mov
loop
xorb
outsb
add
xor
ds
add
fstl
std
mov
out
outsb
lock
xchg
scas
push
pop
aas
cltd
decb
jo
ds
pop
xor
sbb
iret
outsl
out
jl
call
out
std
mov
aad
jne
jnp
cmc
repnz
and
jbe
gs
cld
into
mov
test
add
mov
add
sub
ret
dec
push
das
stc
outsb
mov
push
cmpsl
adcb
les
sahf
das
xor
test
movsl
xchg
jle
xchg
loop
or
ret
hlt
mov
sub
mov
push
fdivrl
jnp
mov
push
xor
jb
data16
adc
mov
pop
int
adc
aam
mov
inc
mov
mov
insl
dec
mov
sbb
lret
jecxz
pop
sbb
imul
ret
add
xchg
sub
js
cmp
lcall
out
fisubrs
stc
mov
xlat
xlat
and
lcall
xor
jle
std
jno
mov
jecxz
enter
lea
and
inc
add
insb
jns
mov
mov
fs
cmpsl
movsl
dec
cmp
sub
fnsave
repnz
cmpsl
enter
sbb
testl
aaa
jle
pop
sbb
mov
popf
int3
in
je
fists
jo
dec
call
sub
ror
insl
cltd
nop
and
enter
aas
imul
and
xlat
and
mov
xlat
sub
gs
sti
mov
cli
pop
mov
insb
cmp
pop
push
aaa
or
mov
mov
inc
shr
mov
js
mov
mov
pop
jmp
popf
xor
outsb
ss
xlat
xchg
outsl
or
push
fs
mov
outsb
cmp
sub
cli
dec
pop
loope
xor
ret
repz
roll
sarl
movsb
movsb
pop
pop
int
or
das
rorb
out
and
out
lcall
jl
mov
cmp
imul
out
mov
mov
xchg
fdivrl
outsl
aaa
ficoms
dec
int3
outsb
push
pop
cmp
pushf
shl
lods
jge
or
rclb
jbe
sbb
pop
mov
pop
lret
dec
jb
sarl
pop
cs
inc
pop
pop
test
jno
sub
cltd
fbld
js
push
rorl
mov
or
or
roll
cmp
imul
push
lcall
sub
mov
cmp
sub
xchg
repnz
idivl
aad
jno
jae
mov
sahf
sarb
popa
adc
in
add
and
pop
bound
mov
subl
xchg
je
lds
cmpsl
into
xor
aad
sbb
adc
mov
inc
dec
sub
shlb
stos
lcall
lcall
pop
les
push
stos
pop
add
addb
fldl
pop
ficoml
pop
scas
lds
push
in
cmp
lret
mul
inc
mov
push
adc
or
jge
push
push
mov
sub
mov
cmp
xor
cmc
adc
ljmp
insl
ret
xor
xor
stos
lock
int
jmp
dec
sub
jle
xchg
mov
loope
push
jmp
mov
xchg
iret
xor
fmulp
dec
movsb
scas
int3
push
addl
das
push
ret
mov
nop
add
jp
int3
divl
jmp
dec
jl
push
and
xchg
je
fiaddl
enter
fldt
leave
push
cmpsl
out
lret
ret
jle
push
addr16
add
je
xchg
out
add
aad
push
mov
icebp
cmp
xor
dec
sbb
cmpsl
das
mov
out
mov
loope
pop
repz
jmp
bnd
fildl
sti
add
add
cld
push
mov
test
push
pop
dec
repz
xchg
dec
jg
cs
mov
aas
xchg
out
insl
pusha
daa
mov
cmp
jbe
and
mov
shll
adc
add
outsl
xchg
das
das
rcrl
sub
cmpsl
dec
xor
fbstp
movsl
jno
out
sbb
lret
pop
sbb
imul
xchg
test
testl
push
stos
addr16
xor
add
mov
aaa
cltd
xor
push
mov
daa
addb
add
cmp
sub
dec
mov
dec
test
cmpsb
jmp
rcrb
mov
push
pop
cli
add
mov
cmp
inc
xor
movsb
jae
push
popa
out
mov
xchg
xchg
pop
jnp
inc
scas
sbb
je
repz
push
lods
inc
arpl
mov
adcl
pop
lods
dec
clc
or
cmpsb
mov
jns
lcall
mov
loop
clc
jmp
cmp
sbb
ja
lcall
in
or
jge
cmp
scas
fisttpl
out
gs
pop
mov
xchg
repz
inc
gs
lock
sub
pop
sub
pop
sbb
mov
jbe
aaa
imul
or
data16
insb
jae
dec
sub
ret
ret
test
sbb
jbe
xor
inc
inc
mov
ds
mov
pop
stc
cmpl
aas
sub
stos
inc
int
mov
sbb
push
inc
cmp
xor
dec
xor
flds
test
aaa
das
add
add
leave
ffreep
loop
sub
mov
jne
push
scas
xlat
mov
gs
inc
cmpsl
popf
shlb
dec
cmp
jnp
and
loopne
cmp
mov
pop
cmp
inc
popa
inc
push
mov
pop
ds
sub
cmp
rcrb
ja
adc
rolb
in
aam
jle
popf
push
insb
aam
jg
int3
std
js
fcmovu
sbb
imul
lods
push
lahf
adc
mov
cmp
cmp
test
mov
cmc
in
push
out
sub
ret
in
fldl
inc
dec
js
add
jecxz
or
sub
nop
and
dec
dec
push
jb
jp
mov
adc
out
pushf
or
dec
imull
test
push
push
push
push
dec
outsb
xchg
sub
mov
arpl
inc
pop
idivl
inc
data16
mov
sub
sub
push
pop
adc
imul
jecxz
rorb
cmp
sti
cwtl
inc
inc
adc
dec
lods
mov
ljmp
les
adc
push
frstor
adc
dec
and
enter
ret
xchg
rep
in
jge
jno
jecxz
pop
cld
nop
dec
cmpsl
outsb
cmp
mov
cmp
push
loopne
xchg
xor
ja
not
pop
pop
fwait
outsb
out
lods
xchg
lret
fwait
loop
ja
and
lahf
push
mov
and
das
pop
cld
lret
loopne
cmpsb
cmp
pop
sahf
cmp
inc
xchg
std
dec
loopne
dec
ljmp
pop
xchg
je
outsb
in
mov
int3
mov
add
mov
movsb
es
dec
paddusw
or
mov
mov
jo
jae,pn
mov
outsb
adc
adc
ret
push
sbb
add
out
pop
cmpsl
add
iret
shlb
cmc
lods
repz
cmpsl
jbe
mov
xor
stc
push
out
and
or
movsl
cltd
dec
cwtl
out
sarl
cld
and
xor
pop
pop
das
add
pop
sub
mulb
jns
fdivr
mov
cmp
das
imul
mov
xchg
mov
shrl
sub
jbe
sahf
push
int
jno
imulb
pop
cmp
pop
ret
out
inc
sbb
out
and
gs
lds
mov
jb
hlt
ljmp
dec
repnz
push
jmp
mov
sbb
pop
mov
push
mov
js
cmp
andps
mov
sbb
mov
inc
mov
ret
xor
repnz
mov
push
jmp
lcall
rcr
sbb
inc
lret
mov
cli
push
aas
jae
mov
cmp
push
test
roll
imul
std
cmp
inc
sub
push
inc
xchg
dec
inc
jns
mov
call
mov
pushf
aas
add
inc
cltd
push
outsb
aad
imul
jl,pt
js
jae
test
push
in
addr16
sub
mov
sbb
subl
dec
test
out
daa
stos
mov
loope
and
je
mov
push
mov
mov
cwtl
adc
mov
cmp
das
adc
out
mov
xchg
in
push
pop
sti
mov
push
jl
sub
in
mov
or
fs
pop
enter
outsb
test
nop
pop
repnz
and
and
repz
add
call
dec
or
mov
sub
test
test
xor
push
mov
jae
sub
mov
push
sbb
jae
ljmp
mov
push
mov
sbb
and
dec
movsl
mov
in
mov
push
sub
and
jge
arpl
cwtl
scas
call
adc
lret
leave
lock
jo
jmp
pop
xor
dec
adc
imul
push
outsb
outsl
push
dec
popf
mov
js
repnz
pop
cmp
and
and
push
pop
push
out
pop
cmp
pop
xchg
icebp
and
dec
xchg
inc
ret
push
and
lock
xchg
xor
dec
cld
sbb
push
stc
les
dec
inc
nop
sbb
iret
or
shrb
enter
mov
push
xchg
pop
xchg
inc
sub
push
jns
les
cmp
sub
lock
daa
inc
pop
and
arpl
das
adc
jbe
push
jb
aaa
dec
mov
ja
ret
mov
rcl
daa
test
xchg
scas
or
cwtl
pop
pop
lret
je
xor
mov
gs
sub
mov
stc
push
test
dec
push
add
imul
test
dec
adc
pop
int
mov
mov
mov
repz
xlat
out
xchg
insl
jmp
sbb
test
popa
nop
int3
shl
outsb
or
push
sbb
pop
jecxz
sahf
push
pop
xor
loop
dec
in
pop
ret
push
xchg
rolb
xor
xchg
cmpxchg
push
mov
push
dec
pop
dec
cmp
adc
cmp
inc
jecxz
ljmp
inc
adc
xor
xor
adc
pushf
jle
mov
lahf
or
fsubs
push
sub
aad
inc
shrb
or
lods
pop
dec
lret
scas
mov
sbb
jbe
setae
sbb
xchg
push
push
arpl
notb
out
cmp
popf
inc
cmp
or
subl
out
aam
rorb
or
and
mov
lret
nop
mov
cli
imul
mov
pop
jae
jns
sbb
out
sbb
jg
pop
cmp
xlat
arpl
iret
jg
add
aam
or
push
or
or
addl
xchg
mov
pop
insl
and
cmp
mov
pop
test
cmp
mov
ss
insl
daa
gs
subb
cmp
add
outsl
sub
lret
inc
insl
cltd
xchg
cwtl
and
rcrl
sahf
std
pop
jbe
mov
cmc
repnz
cs
mov
sub
ljmp
inc
enter
mov
shlb
jo
mov
pop
add
xchg
shrb
mov
cltd
dec
in
stos
aaa
xchg
shl
jbe
jnp
icebp
mov
mov
test
fcmovbe
sbb
int3
scas
int
jl
je
out
pop
pusha
ficompl
or
jb
rol
test
and
test
arpl
stc
jecxz
cmp
mov
ficompl
mov
leave
lods
mov
rclb
in
sub
pop
scas
pop
sub
push
adc
lods
int
jb
and
xchg
jo
mov
adc
in
sbb
out
in
out
cltd
aad
cmpsl
dec
push
push
mov
popf
lods
mov
in
xchg
push
fsubs
cmp
push
xchg
pop
add
jb
fadd
ds
cs
dec
add
aas
xor
jmp
shrb
and
hlt
mov
push
subb
callw
test
insb
xor
fwait
xchg
scas
mov
mov
and
jne
addr16
nop
fsubrp
cltd
push
mov
ud1
xchg
out
mov
ja
inc
lret
daa
mov
test
push
mov
test
mov
sbb
push
sub
pop
jmp
fisubs
xor
lods
pop
mov
dec
aas
dec
inc
inc
vcvtsi2ssl
mov
cmp
sbb
cmp
cmpsb
shrb
cmc
pop
mov
test
mov
inc
insl
hlt
mov
xchg
fsubs
and
add
cltd
cmp
pop
xor
dec
loope
aaa
and
cltd
inc
mov
jae
pushf
sahf
adc
jne
xchg
xor
test
push
cltd
dec
adc
adc
mov
pop
pop
shll
or
or
mov
sub
xor
xor
dec
divl
xor
ljmp
jmp
sbb
sahf
jo
mov
fiadds
mov
testl
xor
push
jmp
movsb
lods
mov
ja
add
add
sub
je
jnp
imul
arpl
gs
cmpsb
push
xchg
rcrl
in
hlt
lds
add
push
insl
push
jbe
mov
xchg
hlt
ljmp
xchg
xchg
push
jp
jb
lcall
xor
mov
jp
repz
test
push
xchg
xor
loopne
push
cmp
dec
add
icebp
and
lret
fwait
das
sub
das
ret
std
aas
sti
inc
out
int3
push
sub
mov
dec
jmp
in
testb
mov
push
push
lods
cltd
xchg
xor
lcall
pushf
adc
jnp
fldl
out
addr16
push
mov
cmc
push
push
jo
ret
mov
pop
das
mov
sub
mov
pop
jb
dec
xchg
jnp
adc
push
mov
lcall
mov
ds
movsl
stos
in
ss
cmp
or
bound
xchg
sbbl
mov
and
mov
mov
leave
fidivrl
cs
push
es
jbe
push
and
mov
adc
sub
pop
lahf
out
mov
xchg
ret
cmp
inc
inc
adc
sbb
scas
cmp
sub
xor
data16
aas
push
mov
pop
or
in
pop
push
cmp
data16
push
sub
inc
sbb
stos
mov
mov
das
xor
leave
mov
shr
inc
sti
mov
lods
push
idivl
mov
sub
add
out
pop
fnstsw
cmpsl
ss
xor
mov
loop
xchg
dec
stos
daa
push
jp
sbb
fld
out
cmpsb
sub
inc
pop
imul
push
jbe
stc
clc
hlt
adc
add
ja
and
movsl
shrb
add
in
push
jp
mov
sbb
xor
cmp
jmp
ss
cmp
shlb
cmp
sub
das
dec
fimull
fcmovne
aaa
xchg
rolb
jl
jb
dec
mov
inc
push
xor
or
in
adcl
pop
rcr
dec
sbb
mov
dec
popa
popf
test
pop
push
jae
js
ljmp
scas
adc
jle
cmp
fsubrl
es
mov
incl
jbe
bound
xchg
call
shll
adc
dec
xor
lcall
cmp
fiaddl
iret
lods
xor
arpl
sbb
add
fsubrs
test
adc
out
pop
pop
fcompl
xchg
cmp
sub
pop
pop
xchg
pop
les
aaa
xchg
imul
cmp
push
mov
or
adc
jbe
mov
sarl
cmp
or
repz
adc
ficomps
and
shlb
repnz
sbb
and
dec
add
sbb
push
cs
aad
mov
scas
lea
mov
imul
sbb
out
aas
jmp
mov
jne
outsl
sub
out
bound
int
push
pop
in
int3
rcrb
pop
mov
jmp
enter
dec
pop
pop
loop
add
fidivrs
out
out
sbb
xchg
sub
ljmp
aaa
push
or
mov
ret
xchg
fldenv
in
orb
dec
mov
test
test
mov
ja
dec
mov
clc
out
shrb
test
xchg
pop
ret
xchg
bound
pop
or
cld
rcll
push
scas
mov
xor
jnp
and
lahf
repnz
mov
jns
cs
cmp
mov
lcall
es
notl
sub
mov
xchg
test
mov
jmp
sbb
sti
popf
xor
sub
xchg
mov
xchg
mov
scas
out
xchg
cltd
dec
mov
and
add
out
js
cmp
outsl
stos
mov
pop
xlat
and
pop
pop
sbb
fwait
fwait
lods
cli
mov
jmp
loope
hlt
std
add
cltd
and
jne
dec
std
pop
stos
pop
out
out
mov
jbe
cwtl
ds
pop
repz
sub
test
dec
xchg
adc
inc
mov
cmpsb
clc
dec
call
mov
ja
or
fwait
out
in
sti
cltd
push
push
aaa
sbb
inc
xchg
mov
ss
pop
pushf
testb
jl
push
mov
dec
ret
push
ljmp
push
mov
add
rorl
mov
xchg
jo
out
xor
insb
xchg
sbb
ss
lcall
inc
imul
push
outsb
push
xor
pop
inc
or
fmull
jns
adc
mov
loop
aas
cmp
dec
push
cmp
mov
sub
or
jle
daa
arpl
outsb
mov
and
jnp
cmpl
mov
das
daa
dec
aaa
int
jo
mov
popa
loop
movsl
stos
cli
es
push
fldl
test
add
popa
cs
lea
jbe
inc
mov
or
adc
enter
shll
xor
stos
dec
sbb
mov
xlat
inc
inc
xchg
xchg
mov
push
cmpsb
std
xchg
xchg
xchg
dec
arpl
mov
push
sub
jne
mov
mov
push
or
adc
outsb
das
scas
test
jae
xchg
dec
adc
aas
inc
jae
ret
dec
mov
outsl
into
shlb
dec
imul
mov
jb
outsl
mov
js
jle
aas
into
jmp
pop
lret
in
jno
mov
inc
and
xor
mov
das
push
jb
inc
adc
outsb
and
test
test
mov
sub
aaa
enter
fs
jmp
dec
add
mov
mov
outsb
jne
imull
lds
mov
clc
or
pop
pop
ror
jle
inc
rolb
mov
out
arpl
out
addr16
repnz
mov
add
xchg
in
test
pop
push
push
jns
cmpsb
das
out
add
xchg
fs
adc
push
mov
jp
sub
sub
jno
mov
aaa
mov
add
popl
lods
add
test
sahf
sub
inc
jl
push
inc
inc
push
xchg
pop
cmpsl
test
jg
iret
ds
hlt
dec
dec
bnd
or
ret
and
jne
out
cltd
jmp
push
sti
xchg
test
mov
cmp
inc
add
mov
mov
xchg
mov
sbb
mov
outsl
gs
dec
data16
rorb
pop
xchg
adc
dec
sub
clc
mov
or
dec
mov
and
jecxz
adc
lret
pushf
inc
inc
ja
xor
outsl
aam
bnd
loop
adc
push
gs
xchg
aad
mov
sbb
mov
imul
pop
movsb
cmp
add
mov
test
lcall
int
push
xchg
icebp
and
lret
sub
mov
int
mov
sub
xchg
testl
xchg
inc
test
sbb
xor
lock
mov
fstl
notl
mov
inc
sub
fisttpl
icebp
hlt
dec
push
mov
inc
fldenv
xchg
jl
xchg
or
imul
mov
les
roll
loopne
jne
lahf
push
outsb
mov
lret
fpatan
mov
pop
xchg
jne
stos
or
and
pop
xchg
mov
aam
and
fsubl
clc
mov
out
mov
cli
insl
cld
sahf
push
add
call
mov
inc
lcall
mov
ret
adc
js
sub
push
mov
mov
sbb
push
push
mov
mov
inc
sub
mov
das
lret
jg
inc
push
sub
adcl
or
aam
lods
push
inc
loopne
bound
sub
or
and
or
imul
mov
push
cld
das
roll
inc
push
jecxz
in
cli
xchg
jp
sbb
or
pop
cmp
sub
jb
insb
jecxz
divb
and
in
push
jge
mov
mov
fbld
push
mov
iret
dec
or
pop
daa
xchg
addr16
inc
cwtl
push
jmp
jmp
das
mov
inc
jle
outsb
adc
pop
lcall
and
shrb
pop
pop
cmp
jmp
rcrl
push
enter
pop
es
xor
add
mov
cmp
test
je
pop
xchg
movsb
shlb
stos
xor
jg
fwait
lds
mov
cli
stc
lock
and
cmp
lret
lea
cwtl
pop
adc
cld
adc
mov
mov
fnsave
arpl
decl
push
push
pop
lea
in
push
add
pop
ljmp
jb
sbb
ret
mov
rorl
push
jp
shll
test
inc
sub
mov
push
lock
xchg
pop
adc
lret
fnstsw
pushf
sub
jno
cltd
jb
add
bound
xchg
xchg
imul
pusha
add
sbb
and
aas
fistps
inc
outsb
fnstcw
fbstp
xchg
movsb
pop
xchg
xchg
mov
push
test
push
insb
and
dec
sub
mov
cwtl
call
out
out
pop
test
repnz
lock
mov
dec
loope
stc
xlat
repnz
xor
daa
jg
inc
or
outsl
push
insb
pop
mov
rolb
jmp
sahf
outsb
push
stos
xchg
int
mov
rol
push
sti
pop
and
jo
add
in
cmp
mov
stc
outsl
mov
xchg
pop
aad
add
iret
or
outsb
dec
dec
addr16
int
push
out
jmp
mov
adc
sbb
dec
sbb
nop
xor
rolb
inc
sub
filds
mov
popa
mov
mov
bound
adc
cld
inc
xchg
dec
loop
jp
into
and
in
inc
int
push
jb
fnstsw
xor
scas
icebp
mov
pop
jge
out
cwtl
push
jne
in
sub
leave
jbe
es
dec
jns
push
mov
add
bound
enter
xchg
jp
lret
and
lahf
jae
xchg
mov
xor
mov
mov
mov
das
ljmp
sub
or
repz
jo
push
sahf
sub
mov
loopne
or
fldt
sbb
mov
pusha
mov
sti
test
stos
xchg
mov
sub
jl
add
fsubp
cmp
jmp
std
int
mov
out
icebp
xchg
push
cmp
inc
jle
sbb
add
push
ja
jecxz
iret
mov
sub
ds
hlt
add
fs
xchg
xchg
lcall
das
sub
cmp
xlat
ss
repz
cld
jbe
out
push
sub
and
insl
addr16
and
fcoms
mov
bound
ret
sub
cli
imul
popa
jae
loop
hlt
mov
xor
loop
cmp
negl
rcrb
pop
mov
repz
bound
sbb
push
jge
dec
or
mov
push
testb
jg
arpl
andl
push
in
adc
jge
sub
loop
test
inc
cmovne
and
ljmp
cmp
xchg
leave
mov
add
adc
outsl
inc
inc
lret
cmpsl
lods
jl
jno
imul
out
sahf
jmp
push
pop
pop
add
xor
push
push
icebp
stos
mov
sbbb
repz
sbb
ja
lds
pushf
pop
sub
mov
cmpsl
repnz
mov
mov
cli
ret
dec
gs
pop
fldt
pop
jge
lcall
pop
loope
sub
jg
inc
add
inc
lcall
mov
xor
rclb
aas
mov
out
int3
mov
aas
adc
shll
mov
lret
aas
mov
data16
cmp
push
test
xor
std
and
and
aaa
jp
in
out
add
in
mov
dec
dec
xchg
add
rcll
mov
dec
pushf
mul
push
jns
shll
jmp
mov
xor
or
sti
mov
popa
insb
adc
sbb
xor
sub
fsubrp
mov
push
sub
addr16
xor
push
das
mov
jne
or
les
sbbl
mov
test
ja
lea
mov
push
xchg
call
xchg
xor
dec
ret
pop
ds
mov
test
icebp
test
xor
gs
cmpsb
and
hlt
jnp
push
std
shlb
add
or
arpl
test
xchg
push
orl
sahf
fdivp
mov
xchg
jl
sbb
mov
dec
arpl
lcall
repnz
or
inc
lcall
ret
outsl
pusha
dec
iret
and
mov
ret
test
icebp
xchg
mov
push
push
arpl
outsl
bswap
pop
cltd
jmp
je
mov
bound
pop
adc
cs
test
aaa
add
das
dec
add
ret
repnz
mov
xor
imul
dec
push
sarb
push
mov
xor
imul
sahf
dec
adc
not
ficomps
pop
popf
sub
jg
aam
jno
push
pushf
inc
push
outsb
pop
aas
dec
push
push
fldlg2
incb
jle
sbb
orl
lret
stos
adc
cwtl
xlat
jo
sbb
int3
xor
loope
inc
stos
ja
push
add
ljmp
sub
xor
mov
xchg
inc
push
push
es
mov
fcoml
cmpsb
js
dec
mov
mov
push
imul
adc
or
mov
sbb
jp
push
sbb
outsb
sbb
inc
cs
js
dec
shll
pop
pop
push
pop
cmp
pop
out
push
neg
mov
test
add
or
jecxz
mov
sub
mov
testb
adc
orb
push
xor
mov
cltd
jle
out
pop
sbb
pusha
xchg
out
xor
out
inc
popf
push
shrl
rol
outsl
jecxz,pt
pop
out
mov
jle
leave
push
aaa
adc
nop
call
rorl
mov
stos
cli
repz
adc
mov
leave
push
jg
lahf
pop
dec
ljmp
or
cmpsl
cmp
int3
push
pop
mov
mov
pushl
push
add
mov
xchg
ljmp
cmp
mov
xor
insb
pop
mov
pop
xchg
pop
cmc
js
out
int3
mov
das
adc
sbb
mov
pop
imul
fbld
pop
jnp
pop
mov
sahf
aam
pop
ja
mov
fdivrs
lahf
mov
movsb
inc
lds
pop
mov
jns
int3
out
rcll
fmul
xchg
fcoml
sbb
mov
sub
fcompl
xchg
out
mov
xchg
out
mov
filds
xchg
movsb
pop
outsb
dec
push
out
adc
mov
out
dec
fisttps
jle
pop
notl
scas
push
push
cmp
push
push
into
mov
dec
daa
push
aad
or
add
xchg
sahf
test
imull
or
mov
fidivl
movsb
lcall
imul
adc
or
mov
dec
pop
daa
cmp
mov
jnp
xlat
sub
add
jmp
dec
xor
push
stos
cmp
xchg
insb
sbb
jg
sub
imulb
mov
or
push
pusha
jl
push
inc
iret
push
shrl
pushl
outsl
mov
pop
add
cmp
inc
mov
jo
mov
outsb
add
int
loop
sbb
and
std
push
inc
adc
push
mov
cli
push
xor
xor
or
jno
aas
sbb
inc
mov
nop
outsb
and
pop
xor
fsubs
ret
mov
xor
add
xor
ds
mov
sbb
xchg
loop
and
pop
cmpsl
iret
mov
sub
dec
adc
movb
adc
xlat
cmp
or
xchg
adc
and
or
jl
sarb
hlt
push
addr16
lea
mov
clc
and
adc
dec
jns
sub
push
or
insl
dec
jmp
mov
mov
add
xchg
add
or
out
xlat
mov
sbb
lods
push
mov
push
pop
arpl
or
gs
or
dec
push
mov
pop
test
shlb
inc
int3
in
cli
lretw
add
pop
movsb
jecxz
leave
sbb
test
pop
push
in
mov
mov
mov
idivl
or
xchg
dec
fbld
sbb
xchg
stos
in
add
push
push
daa
sbb
push
jge
xchg
xor
mov
adc
adc
push
or
inc
pop
ds
or
mov
lret
fnstenv
ret
cmp
cwtl
out
mov
push
cs
mov
mov
sbb
mov
div
push
pop
call
inc
lret
psrld
popa
sbb
jns
inc
sarb
hlt
push
push
cmp
leave
adc
mov
sahf
sbb
xor
push
sub
movsb
jl
sbb
lcall
repnz
adc
or
aaa
xchg
inc
call
fwait
xchg
xor
call
xor
shll
imul
dec
mov
ja
sti
lahf
add
int3
dec
fidivs
pushf
cltd
push
cltd
cmp
push
push
das
dec
mov
jmp
loopne
push
pop
cmp
dec
mov
sbb
test
push
imul
xchg
loopne
adc
xlat
ljmp
mov
ja
lcall
mov
or
mov
arpl
xor
test
nop
inc
stc
ljmp
aaa
sub
ja
popa
lods
xor
loop
xchg
adc
shr
movsl
out
mov
es
mov
hlt
jge
xchg
jp
mov
ljmp
imul
outsb
psubb
fyl2xp1
add
push
ret
sub
icebp
popw
sbb
sahf
cwtl
stos
pop
fmulp
pop
xchg
les
xchg
pop
call
enter
cli
insl
out
add
ja
sub
xor
or
enter
pop
xor
jnp
add
xorb
mov
clc
jne
and
decb
cwtl
mov
lods
imul
andl
xchg
scas
push
pop
xor
cs
outsl
fbld
mov
jne
ror
push
adc
sub
outsl
or
mov
jo
scas
fisubrs
mov
xchg
ljmp
imul
jmp
xchg
mov
scas
pop
call
push
es
mov
dec
cs
daa
sub
stos
test
pop
into
dec
and
insl
mov
stc
inc
call
inc
in
fidivl
out
or
sub
pop
rol
mov
daa
xchg
and
out
jp
cmp
stos
mov
bound
loopne
aaa
fwait
fs
or
mov
ret
sbb
mov
iret
cmpsb
and
pop
mov
incb
dec
xchg
xlat
xchg
jno
mov
sub
jns
incb
xor
outsl
iret
sub
or
mov
sbb
sti
pop
jno
xor
xchg
lods
sbb
jbe
cwtl
int3
cmpsl
jecxz
push
test
mov
or
pushl
cmp
push
aaa
outsl
aas
jl
cmp
int
imul
pop
fstpl
or
test
dec
fistps
push
nop
out
push
sub
mov
dec
dec
leave
repz
imul
loopne
sti
ds
clc
shl
and
sub
inc
rcrb
out
aaa
dec
xchg
push
xchg
xor
aaa
mov
scas
cmpsb
in
aaa
pop
addr16
hlt
icebp
xchg
jl
lock
pushl
scas
cmp
dec
push
xchg
cli
ret
inc
mov
mov
cld
outsb
stos
sbb
sbb
xor
push
ljmp
jecxz
imul
fstp
lea
mov
inc
lock
sub
adc
xchg
sti
ljmp
inc
roll
mov
adc
outsb
xchg
sbb
outsb
jbe
data16
xchg
fcoms
int3
push
jb
mov
enter
adc
xor
cmp
cmp
dec
imul
xor
ss
mov
in
pushf
fisubs
stos
js
stc
pop
out
and
mov
mov
lret
push
data16
jbe
daa
dec
pop
pushf
icebp
xchg
jmp
push
adc
mov
inc
outsl
sub
out
and
lret
in
sub
ljmp
aad
xor
adc
outsb
inc
cmc
test
mov
jp
les
jmp
sarl
jmp
in
or
push
and
mov
push
push
and
push
addr16
mov
mov
scas
bound
sbb
push
test
xor
pop
ret
ds
leave
out
add
outsl
leave
add
mov
add
mov
rorl
ret
xorb
xchg
leave
jg
pop
test
push
cmp
cltd
dec
bnd
dec
sbbb
out
arpl
stc
lds
les
es
cmpsb
xor
movsb
dec
sub
outsl
xchg
mov
rcrl
inc
push
jo
inc
sub
jmp
in
push
sub
xor
jmp
push
shl
pop
xlat
push
mov
or
push
iret
mov
movsb
or
xor
mov
fmul
xor
es
ficoml
sub
and
lock
dec
inc
sub
fstpt
mov
push
popa
fimuls
mov
or
sbb
push
inc
push
andl
mov
test
mov
aas
push
pop
incb
and
inc
sbb
push
negb
mov
xor
in
imul
cmp
iret
int3
and
xorb
fcoml
mov
mov
scas
test
mov
repnz
filds
mov
xlat
dec
push
mov
rcl
jbe
enter
jecxz
aaa
ret
push
inc
xchg
push
daa
push
lods
mov
xchg
inc
cli
cltd
mov
xor
cwtl
jl
aam
loope
repz
push
cs
jp
clc
ret
xor
or
lock
mov
into
filds
xor
out
or
lods
fcmovne
sarl
sbb
outsl
call
jno
add
lods
dec
cltd
jl
push
js
mov
into
jle
mov
dec
in
jne
sub
mov
outsb
mov
cmp
leave
mov
les
cmpsl
clc
les
mov
jmp
mov
repz
into
jecxz
mov
ljmp
in
out
xor
lock
lock
imul
ror
mov
out
dec
sub
js
cmp
jbe
popa
pushf
orb
pusha
inc
dec
pop
mov
jo
ret
fimuls
movsl
sbb
xor
in
cmp
pop
mov
js
or
xchg
jno
test
dec
test
arpl
mov
jmp
jns
jbe
mov
mov
push
addr16
inc
mov
inc
and
and
roll
in
cld
lea
sbb
imul
repz
pop
out
ss
cmp
jmp
cmp
cmp
mov
cs
sbb
data16
cmpsb
repnz
sub
in
mov
ret
or
xchg
rclb
cs
ret
data16
xor
or
sti
sbb
mov
ret
xor
push
and
mov
ljmp
cli
inc
jno
seta
aaa
xor
mov
outsb
mov
mov
jmp
cmp
mov
jo
push
inc
enter
popf
mov
fsubrs
fnsave
push
ss
call
lds
das
notl
push
dec
imul
negb
leave
push
mov
inc
fidivrl
aas
stos
mov
push
sbb
cmp
cmp
cmp
lahf
aaa
pop
test
cs
lahf
cmp
aam
sub
loop
pop
xlat
into
mov
insl
sub
test
pop
icebp
push
cmpsb
lods
sub
xchg
or
mov
jmp
adc
xor
mov
ss
in
ljmp
imul
add
aas
cmp
pop
jb
outsb
pop
ficoms
jp
dec
add
pop
sub
inc
cmp
sbb
mov
lret
pop
jo
cli
xor
sub
andl
aaa
jg
mov
mov
jne
mov
xchg
daa
or
and
push
clc
subb
repz
jnp
loope
cwtl
pop
or
push
fcompl
xchg
icebp
pop
ret
lret
dec
pop
xor
jmp
iret
sbb
jbe
scas
pushf
movsl
and
bound
loope
push
clc
fucomip
cmp
push
pop
fnstcw
cmp
push
mov
dec
pop
dec
mov
pop
mov
mov
bound
inc
push
fldt
lea
int
imul
sbb
jo
pusha
lea
and
sbb
lods
dec
lods
loope
jno
mov
cmp
jb
lods
out
orw
cmp
xchg
shll
sti
dec
int
fcomp
in
or
jp
cmpl
rolb
icebp
mov
dec
cs
cmp
fisttpll
adc
shlb
aaa
dec
daa
sub
repnz
dec
cs
fmull
adc
and
xor
cs
push
ret
push
js
xor
mov
push
inc
ja
and
mov
xor
mov
pop
inc
daa
dec
mov
lds
pop
pusha
jno
arpl
pop
ljmp
jmp
addr16
stos
add
pcmpeqw
int3
rorb
fwait
xor
aas
mov
das
jbe
mov
into
shll
jne
push
lock
xchg
and
xchg
sbb
xor
stos
dec
mov
fmuls
xor
sbb
push
imul
xor
fdivrs
adc
xchg
pop
cmp
inc
outsl
adc
mov
imul
xchg
ja
jecxz
jne
jle
or
aam
idivl
push
clc
scas
dec
fnsave
mov
xor
mov
push
mov
stos
push
das
jb
stos
cmpsb
xchg
sbb
imul
lcall
out
movsb
cmp
cli
jne
out
adc
push
leave
jb,pn
out
pop
dec
cmp
mov
adc
xchg
roll
or
mov
fwait
shr
insb
pop
cwtl
filds
fwait
shrb
pop
sub
pop
in
aas
mov
sbb
xchg
aas
pop
pop
or
sbb
sub
xchg
mov
adc
jbe
test
jno
dec
fdivr
daa
fisubl
cmp
leave
mov
or
and
inc
aam
xor
lock
jbe
sub
sub
ja
push
or
into
dec
jnp
dec
xchg
daa
jecxz
cs
fildll
ss
sti
fcompl
inc
cmp
adc
sbb
or
dec
pop
cmp
mov
out
call
xadd
add
mov
ss
aaa
cmp
push
gs
push
push
fidivrs
dec
cmp
cmp
imul
and
fnstcw
adc
cmp
sbb
push
je
add
notb
js
sbb
cmpsb
inc
mov
adc
xchg
shrl
test
imul
xor
rdpmc
xor
mulb
sub
movsb
and
ret
fstpl
nop
push
repnz
insb
addr16
pop
dec
or
das
rcl
negl
cmp
mov
adc
cli
pop
inc
sbb
jbe
jae
jbe
enter
cs
or
xchg
xor
call
mov
xchg
stos
enterw
mov
aad
mov
cli
lcall
iret
mov
dec
scas
pop
iret
sti
aas
in
mov
dec
sahf
notl
mov
xor
imul
and
xor
das
add
psubb
inc
in
and
fistps
and
sub
or
sahf
cmp
and
and
stc
dec
push
stos
inc
xchg
dec
lret
enter
gs
adc
push
xor
aad
outsb
cmp
sbb
pop
lret
call
lret
in
sub
mov
clc
sti
stos
cmp
jge
rcll
lret
inc
test
xchg
cmpsb
rclb
cwtl
lea
xchg
xor
xor
clc
mov
cwtl
mov
mov
pusha
cli
inc
rcll
test
sbb
push
ficoml
jnp
jle
pop
pop
mov
je
ja
cmp
adc
lret
loopne
int3
jmp
mov
jns
in
out
ljmp
das
mov
cmc
pop
push
jge
cld
movsb
imulb
xor
cld
ja
dec
ss
lret
pop
mov
push
jno
loop
cmp
or
mov
xor
lds
test
mov
lret
rorb
xlat
add
xchg
adc
push
int3
mov
push
add
and
mov
mov
fucomp
xor
sbb
jns
add
shrl
leave
insl
cld
cmp
and
adc
insl
push
sub
test
int
stos
ret
sub
inc
xor
in
mov
rcl
xchg
aad
dec
pop
jbe
and
repz
jle
lret
jne
sub
mov
jnp
aas
push
cs
jne
lret
xor
scas
cltd
pop
cli
mov
arpl
popf
lds
aaa
cmpsb
out
jle
jne
or
adc
jl
inc
xchg
sbb
push
add
pop
xor
xchg
dec
push
xchg
push
in
adc
cltd
and
into
sbb
sub
mov
push
push
scas
cltd
sahf
iret
lock
dec
or
sti
outsl
sub
inc
cmp
mov
divl
dec
pop
into
loope
clc
rclb
sbb
xor
jg
stos
into
stos
mov
rcll
arpl
add
rorl
idivl
js
loope
add
push
sbb
cli
pop
pusha
mov
lods
popa
dec
mov
out
shrb
sbb
add
jmp
xchg
cmp
xor
jbe
out
mov
xchg
enter
lret
icebp
outsb
imul
stc
fs
in
push
adc
jo
adc
add
or
push
loop
popa
scas
and
mov
jl
mov
xor
into
test
repnz
push
adc
fnstsw
cmc
cmp
dec
add
xchg
mov
fsubs
sub
jbe
out
mov
inc
mov
aas
pop
mov
out
xchg
movsl
add
pop
mov
adc
push
or
scas
hlt
xchg
push
lahf
int3
mov
andnps
pop
lods
or
dec
sub
or
addr16
push
cli
cmp
jmp
out
in
lahf
pop
mov
push
imul
jae
push
jp
dec
inc
or
xlat
or
and
push
ss
push
or
lahf
pop
mov
jo
inc
pop
xchg
mov
rcr
inc
mov
mov
je
lahf
stos
jbe
or
lret
roll
inc
pop
int3
ficoml
mov
jmp
into
jb
shll
cmp
mov
out
push
sbb
mov
xlat
in
cltd
xchg
dec
pop
in
mov
mov
or
fbld
out
es
insb
pop
adc
lock
push
fbld
mov
cltd
adc
adc
cmpsl
cld
mov
call
iret
push
dec
xchg
dec
rclb
mov
inc
daa
fmull
scas
stc
xor
nop
fstpt
xchg
int3
dec
add
lods
add
jmp
pop
inc
icebp
mov
xchg
ror
scas
add
aaa
mov
into
imul
mov
mov
and
loop
inc
scas
pop
fwait
xor
add
jl
les
xor
mov
icebp
ja
sahf
dec
adc
xchg
jecxz
mov
pop
loope
xchg
jno
sub
lods
xchg
push
mov
add
fs
xor
add
xchg
xlat
das
loop
hlt
cmp
cli
add
cmpsb
and
cmp
jae
dec
shll
icebp
push
mov
mov
cmp
jbe
or
push
popa
das
pop
xor
gs
mov
ficomps
mov
add
daa
leave
or
jecxz
lcall
sbb
sbb
and
pop
stos
pop
push
fstl
adc
lock
xchg
pop
scas
mov
jmp
aam
test
lds
and
pop
xchg
and
pop
fdivrp
aad
sub
jp
loopne
jmp
mov
jae
ds
inc
std
es
jne
imul
jbe
rcrb
push
lds
fyl2x
jae
or
imul
and
cmc
dec
xor
or
pop
push
icebp
push
inc
aas
aaa
iret
inc
sub
shll
push
cmp
push
mov
aad
sbb
mov
fprem1
lahf
adc
call
mov
xor
cs
jbe
daa
or
or
in
and
js
pop
and
and
xchg
dec
ljmp
out
jmp
test
arpl
ljmp
out
inc
es
cmp
lods
sar
out
test
cmp
int3
or
jle
enter
and
or
leave
ficoml
push
ret
push
fldl
fdivl
lock
insl
nop
xchg
fucomi
mov
pushf
fstl
pop
pushf
jmp
mov
jle
mov
cmp
pop
inc
dec
mov
movl
and
insl
jo
daa
xor
ljmp
ret
mov
icebp
adc
cs
test
loopne
imul
push
mov
fsubl
xchg
js
movsl
push
mov
inc
sbb
jne
fistpll
sub
int3
pop
inc
pop
cwtl
sahf
jne
dec
int
repz
sbb
mov
outsb
fwait
mov
cmp
xor
test
push
outsb
std
lret
mov
mulb
repnz
xor
or
dec
or
ds
jmp
adc
pop
sysret
xor
mov
dec
pushf
sti
pop
mov
inc
cmp
ret
mov
inc
popf
or
fildl
mov
adc
dec
push
mov
jmp
cmc
pop
out
loope
xor
scas
shll
add
inc
or
mov
in
jecxz
insb
lock
add
sub
mov
fimuls
lahf
mov
pop
imul
addr16
jge
push
push
jecxz
ror
push
push
in
jnp
add
insb
push
adcb
rorl
or
and
or
adc
mov
push
jp
fs
fdiv
lret
xchg
test
shl
or
pop
push
out
mov
jns
jae
jae
shll
lds
xchg
sbb
addr16
dec
test
das
cmc
fwait
mov
xchg
fldl
movsb
repz
mov
push
jno
xchg
shlb
cs
adc
iret
mov
ss
and
ret
sti
or
dec
subl
jb
cld
add
sarl
sub
sbbl
jno
int3
lret
out
add
std
lea
mov
adc
xor
stos
je
add
push
loope
les
mov
movsb
pop
inc
mov
xor
jns
push
xor
pop
mov
in
rcrb
mov
mov
sub
mov
cmpsb
sbb
jmp
out
shl
mov
std
cmp
push
pop
push
lahf
jg
aas
mov
shlb
xchg
push
push
psubusw
shl
pop
je
xchg
mov
mov
xor
add
test
pop
fs
jae
or
mov
cs
or
mov
xchg
xchg
push
cld
and
push
imul
dec
pop
leave
rorl
or
mov
mov
mov
mov
aam
mov
stos
mov
outsb
add
push
sbb
jg
sub
cmp
shll
push
cmp
xchg
cmp
pop
jno
adc
dec
and
fucomp
or
sub
dec
xchg
cmp
jle
pop
je
out
jae
out
ja
ja
or
stc
pop
adc
nop
fnsave
jmp
idiv
lods
sbb
int3
push
ja
aam
jmp
in
sub
js
les
das
test
xchg
in
repnz
jo
icebp
sub
lods
sub
mov
mov
mov
inc
ret
mov
jae
fstpt
sub
orb
fwait
adc
push
inc
shl
lcall
mov
add
push
pop
mov
xor
in
pop
mov
sbb
mov
fistps
mov
add
mov
dec
lret
xchg
imul
insb
das
ljmp
xchg
cmpsl
add
inc
arpl
mov
ss
xor
jge
mov
sarl
movsl
lcall
pop
push
insl
jmp
cmpsl
cmpsb
push
cmp
jp
or
leave
push
test
or
jno
mov
jae
xor
sub
add
aaa
mov
push
in
dec
cld
aas
push
jo
and
jle
push
sub
xchg
push
push
lods
lret
insb
cmpsb
out
mov
jb
xchg
mov
sahf
aam
das
dec
andl
adc
mov
popf
test
mov
in
xor
fadd
xor
bound
rcl
xchg
lcall
fs
into
mov
aaa
rol
fcomp
xchg
cmp
shll
pop
inc
sub
dec
cmp
es
inc
in
hlt
xchg
insb
pop
mov
stos
shrb
les
neg
loop
or
stos
cmp
xchg
jo
sub
dec
push
leave
jp
pushl
ja
mov
fsubrl
js
out
cmp
sarl
xchg
pop
push
outsl
sub
stos
jo
lcall
ficoms
dec
mull
mull
push
stc
jb
add
mov
add
mov
xchg
hlt
out
mov
cmp
cmpsb
rclb
add
jecxz
and
sahf
xor
add
out
ret
xchg
dec
mov
push
out
cwtl
xchg
cmpsl
and
cmp
push
and
clc
scas
mov
lods
xor
xlat
add
mov
jge
inc
adc
pusha
sub
mov
jo
icebp
ljmp
out
add
or
jno
aaa
mov
int3
push
loop
mov
cmp
adc
rclb
jge
clc
inc
enter
pop
push
dec
sub
sub
nop
loopne
in
out
mov
sarl
lods
ror
aad
rcrb
mov
cs
xlat
ja
dec
push
test
das
push
lods
repz
mov
push
cld
xor
cmp
fcomp
dec
mov
sahf
push
or
mov
pop
pminub
jl
pop
jnp
dec
scas
sub
push
mov
push
test
sahf
stos
and
mov
cltd
and
push
xor
mov
jge
and
outsl
and
jmp
add
and
insl
and
jmp
add
push
inc
mov
cmp
and
in
xchg
mov
push
and
cmp
dec
push
mov
imul
pop
cmp
ss
daa
outsb
pop
adc
out
cwtl
ss
push
jle
test
push
mov
inc
insb
pop
xor
lret
dec
icebp
adc
push
test
leave
push
aaa
clc
and
out
add
and
push
mov
mov
icebp
or
and
icebp
enter
stos
les
and
bound
pop
add
in
cmp
aaa
mov
xchg
and
stos
or
jno
imul
push
enter
mov
aam
js
or
mov
dec
jg
mov
or
cmp
mov
out
inc
adc
sbb
sub
mov
mov
stc
push
lods
shll
pop
sbb
cmc
inc
fsts
rorl
add
inc
or
push
addr16
mov
lock
pop
fwait
das
push
jo
adc
cli
mov
or
xchg
xchg
shll
jae
fisttpl
imul
int3
dec
nop
fistpl
dec
fisubl
pop
jbe
dec
cmp
lret
loope
mov
mov
mov
aas
notl
test
shlb
cmpsb
gs
ret
fnstenv
imul
xchg
push
cwtl
leave
jb
cmpsb
pop
out
pop
jbe
insl
sbb
xor
mov
pop
repz
sub
sti
icebp
loope
out
adc
mov
das
mov
shlb
xchg
xchg
outsb
push
lods
cmc
add
rorb
adc
push
push
sbb
adc
hlt
sbb
cs
mov
cmp
xor
aam
sti
push
mov
js
jmp
xor
lock
jno
loope
push
sbb
pusha
adc
in
ret
nop
decb
aad
cmpsl
lcall
std
xor
ret
jno
lret
sub
js
lea
inc
pop
jb
sbb
popa
jb
sbb
mov
mov
sbb
adc
jae
ja
push
andb
fsubrs
cmp
cltd
fsubl
mov
push
aas
outsl
sub
cwtl
inc
dec
adc
xor
in
inc
inc
fistl
aaa
test
push
clc
icebp
fstpt
adc
dec
adc
je
inc
cmp
adc
popa
inc
xchg
test
and
lret
pop
mov
leave
push
xchg
adc
ret
in
adc
pushf
jae
push
mov
push
and
push
addl
sub
lcall
xchg
out
stos
sub
out
aas
pop
and
in
add
push
daa
mov
into
push
or
push
icebp
fwait
ja
jae
aad
insl
jg
push
cmp
test
cmp
pop
aam
aam
loop
pop
ja
mov
scas
jle
xchg
push
dec
andl
and
xchg
cmp
insl
dec
cmpsb
cmp
imul
adc
xor
mov
lahf
icebp
push
out
push
push
fwait
xchg
out
or
sub
in
sahf
test
cmp
shrb
pop
mov
add
xchg
xchg
pop
icebp
mov
sarl
mov
loop
adc
pop
shll
movsl
jle
testl
push
scas
mov
lds
ja
push
cvtps2pd
push
mov
out
pop
jns
mov
xchg
or
mov
movsl
sub
xor
xchg
ret
enter
pop
mov
repz
xlat
lds
aad
cmp
sub
xchg
mov
cmc
pop
push
xorb
lret
adc
lock
ss
ds
cmp
pushf
inc
outsb
sub
test
push
sti
clc
or
cmp
mov
fnsave
orb
lock
das
daa
or
das
fcoml
push
mov
jmp
xchg
rcrb
imul
test
adc
sbbb
xchg
adc
xchg
push
fadds
aad
or
mov
and
imul
xchg
bound
ret
mov
sarb
mov
std
repnz
scas
xlat
stos
divl
cmp
xchg
aad
cmpsb
cmpsl
xchg
or
scas
lods
pop
sbb
cmp
std
ljmp
pop
in
pop
push
xchg
inc
dec
ljmp
mov
scas
in
in
mov
cmp
xchg
jbe
repz
hlt
xor
dec
in
adc
sarl
mov
mov
in
xchg
jne
push
inc
sub
xor
inc
movsb
ret
or
jo
mov
bound
sub
lcall
xchg
jbe
sub
push
mov
les
xor
or
daa
mov
push
xchg
lret
adc
and
pushf
and
or
cli
and
xchg
pop
in
in
addr16
lds
adc
jno
inc
pop
les
in
int
dec
test
pop
cmp
sbb
cmp
jo
mov
imul
data16
ret
push
insl
pop
jae
outsb
out
dec
aaa
fidivl
adc
xlat
mov
pop
scas
pop
nop
cmp
adc
mov
push
xor
out
lcall
repz
div
shlb
icebp
mov
aaa
or
in
inc
cmpsl
mov
sarl
test
insb
fstl
xchg
xor
cmpsl
in
mov
cwtl
cmpsb
or
scas
push
cmp
popa
insl
addr16
jmp
popa
insb
add
mov
pushf
push
mov
push
outsl
jge
pop
dec
out
push
sub
cmp
sbb
mov
mov
les
cmp
add
mov
cmp
adc
push
lahf
std
outsb
mov
sahf
mov
pop
adc
or
mov
rorb
xchg
out
outsb
ljmp
sbb
pop
pop
sbb
xor
mov
cmc
mov
jb
loop
fnstcw
das
fildl
sbb
xlat
add
sarl
or
iret
sbb
cvtdq2ps
clc
subb
stos
mov
lock
dec
inc
repz
subw
popa
push
xchg
push
mov
pop
addr16
out
mov
pop
mov
sbb
xchg
gs
mov
and
out
cs
imul
mov
dec
ret
stos
add
cli
jno
lock
mov
cmp
nop
lret
mov
in
mov
outsb
sbbl
or
mov
xchg
aaa
into
ret
push
mov
daa
cmp
xchg
aad
std
fwait
insl
dec
adc
sub
push
jnp
mov
addr16
xor
sbb
dec
xchg
xor
test
mov
mov
lret
lods
xor
dec
test
mov
mov
fs
sbb
mov
mov
scas
add
dec
fwait
dec
jno
xchg
sbb
cmp
add
pop
pop
jg
arpl
jno
xchg
dec
pop
loope
jmp
incb
and
clc
shl
inc
leave
add
sub
repnz
xchg
jg
fs
xor
mov
sub
shrl
mov
iret
jle
inc
and
ja
push
mov
test
addb
js
push
divl
addr16
or
inc
xchg
stc
testb
aaa
cmp
sahf
pop
and
sbb
sub
aaa
mov
push
add
pop
mov
push
out
mov
shl
jecxz
xchg
sbb
push
call
pop
push
xor
lcall
mov
femms
cmpsl
mov
sahf
test
scas
insl
push
mov
jnp
test
dec
add
push
push
imul
adc
adc
sub
or
push
pop
mov
pop
paddb
push
and
pushf
es
ss
and
sbb
xor
clc
fcomps
dec
mov
insb
data16
loopne
iret
scas
ret
or
into
push
jl
nop
out
stos
cmp
dec
pop
addr16
ret
cmpsl
inc
stos
sub
pop
push
dec
push
popa
cld
mov
cmp
xchg
mov
insl
stc
je
xchg
push
pop
lahf
or
adc
mov
pop
jg
jne
inc
dec
push
xchg
lret
lock
gs
jae
lock
jo
mov
cmp
dec
rcll
xchg
jno
mov
loopne
lock
sub
dec
or
push
ret
mov
mov
insl
test
mov
or
dec
inc
out
and
nop
daa
jecxz
sti
or
cwtl
ds
adc
cmc
adc
fnstenv
sbb
loop
jle
xor
jns
test
sbb
dec
arpl
add
push
mov
jae
dec
or
lahf
cmp
ret
ds
and
add
sub
fdivr
leave
mov
mov
xchg
iret
sbb
cmpsb
bound
fistpl
cwtl
dec
test
movsl
inc
dec
popa
ja
test
mov
cmpsb
js
mov
push
arpl
jge
xor
arpl
icebp
mov
mov
jnp
add
int3
pop
sbb
mov
lock
dec
add
mov
outsl
pcmpgtd
inc
arpl
nop
cmc
mov
or
mov
jno
subb
inc
movsl
fst
cmp
xor
and
mov
stos
stos
dec
cli
dec
pop
js
imul
int
or
mov
inc
test
rorl
cwtl
out
cltd
mov
rol
out
cmp
aad
ret
stos
adc
push
mov
mov
or
fwait
lods
xchg
mov
push
xor
sarb
jo
popf
testb
jp
sub
fmull
mov
pop
idiv
ret
insb
outsb
shrl
es
stc
imul
jl
imul
sti
arpl
fwait
xchg
lahf
lret
mov
js
les
subb
push
xor
mov
movsb
or
cmpsl
in
loop
jmp
and
js
xor
add
fwait
imul
movb
stc
sbb
fsts
adc
xchg
mov
dec
test
mov
cs
les
sub
xor
inc
xor
and
ret
dec
jp
outsl
mov
sub
mov
test
popa
sti
fisubrs
add
movsl
push
mov
jbe
in
repz
std
push
scas
xchg
add
sub
or
push
in
pop
inc
aas
stc
cwtl
in
sub
mov
gs
imul
cmc
mov
xchg
xor
sub
test
ds
or
xor
add
std
add
lods
push
fimull
jae
incl
or
or
es
push
add
push
cmp
pop
movsl
mov
push
push
cli
pop
dec
fstp
cltd
cmc
sub
pushf
add
xor
mov
sub
cmpsl
enter
sahf
movsb
mov
jmp
nop
cmp
fs
in
mov
xor
pusha
stc
sub
xor
dec
in
daa
out
xor
inc
shrl
shrb
mov
subl
call
sub
test
pop
jmp
inc
mov
sti
dec
frstor
push
data16
fcoms
mov
cld
in
jmp
mov
push
mov
lea
xchg
test
cs
fildll
xor
das
ds
out
or
or
push
add
test
or
xchg
ret
mov
inc
mov
sbb
cmc
mov
mov
mov
movl
or
or
xchg
jge
mov
repz
mov
dec
mov
mov
push
pusha
scas
call
xor
das
outsb
ljmp
xchg
shrl
iret
jecxz
es
push
jl
xor
sarb
fsts
cmp
lret
movsl
movsl
jb
clc
hlt
stc
sub
mov
lds
adc
sub
hlt
scas
mov
sarl
inc
sub
js
sti
jecxz
add
popf
xor
lret
push
es
jle
lods
imul
adc
scas
scas
mov
sub
jae
dec
push
icebp
decl
rolb
push
pop
jmp
es
stc
sarl
push
mov
inc
adc
cmp
movl
pop
mov
cmp
int3
cmp
mov
cli
into
pop
push
adc
adc
test
in
pushl
clc
lcall
push
fsubrl
stc
movsl
fistpl
addb
test
jecxz
lds
andb
bound
pop
add
mov
movsl
push
push
rolb
pop
std
arpl
aam
sbb
dec
into
mov
mov
sbbl
jne
xor
mov
ss
jl
xchg
je
lock
inc
insl
xor
adc
pop
imul
push
mov
xchg
push
push
lock
cmpsb
cmpsl
lods
cmp
aad
pop
adc
jge
out
push
adc
push
and
adc
xor
add
icebp
mov
aad
inc
push
mov
sbb
sbb
sbb
and
push
lock
ret
sbb
icebp
outsl
add
jns
xchg
test
pop
push
cmp
stos
mov
push
sub
loopne
pop
xor
jbe
sub
jbe
in
ja
and
pop
xchg
lahf
add
pop
cmp
sub
mov
push
inc
push
sbb
sub
jne
pop
out
mov
lods
cmp
cmpsb
sub
xor
xchg
pop
enter
mov
shll
in
aad
inc
rorb
jae
insb
xchg
cmp
mov
jle
out
jge
mov
loopne
iret
jecxz
loop
loopne
push
jae
pop
dec
dec
mov
add
popf
sbb
mov
hlt
xlat
cmp
mov
scas
stc
daa
insl
or
xchg
icebp
mov
cmpsl
or
icebp
je
jg
test
mov
in
sub
inc
jp
or
sub
jmp
dec
pop
adc
and
ror
loopne
popf
addr16
jecxz
or
xchg
cmp
adc
outsl
enter
outsl
ljmp
or
push
in
and
dec
pop
sub
and
mov
or
lcall
dec
mov
sarb
xor
rcl
arpl
jp
andb
inc
xor
sahf
cs
mov
adc
gs
sarl
push
adc
dec
xor
pop
pop
jo
or
ret
ja
cmp
test
std
sub
sbb
loope
cmpsl
das
xor
mov
out
or
xchg
imul
xlat
cs
mov
ja
mov
add
test
int
pop
pusha
xor
sub
add
loope
bound
mov
scas
pop
jno
test
pop
pop
cmpsl
test
aaa
mov
xlat
push
sub
xchg
push
add
nop
cmpsb
int3
es
loope
push
add
ficompl
popa
xor
push
sbb
or
xor
mov
aaa
lahf
mov
push
fildll
sbb
aaa
mov
add
or
add
push
imul
scas
mov
push
cmc
mov
leave
adc
cwtl
adc
es
es
mov
xchg
test
sti
dec
xchg
push
shr
jne
lods
jno
shll
js
pusha
jbe
cltd
fwait
insb
push
popf
pop
stos
push
aaa
pop
lret
ret
sub
push
adc
out
idivb
xlat
mov
daa
mov
push
mov
mov
mov
xor
shl
jmp
sub
testb
daa
inc
mov
pop
pushf
fxch
sub
addr16
pop
adc
dec
or
out
push
cltd
sub
loop
ror
jmp
mov
adc
sbb
pop
pop
cli
adc
aaa
xor
cs
xchg
mov
mov
in
mov
repnz
pop
jl
testb
ss
jns
in
stos
jle,pn
or
popf
out
nop
inc
pop
mov
loop
jl
repz
mov
mov
inc
jnp
push
pop
fwait
repnz
shlb
mov
jp
ljmp
mov
jmp
pop
insb
dec
mov
pop
jp
mov
adc
leave
aaa
shrl
adc
push
repz
sbb
stos
stc
dec
lods
insb
lret
pop
mov
pop
pushf
mov
mov
push
jg
popa
adc
fs
mov
js
mov
push
push
xchg
push
push
mov
xchg
add
sub
jg
movsb
lcall
adc
pop
movsl
inc
insl
movsl
loop
in
mov
lods
push
xchg
repnz
ret
fyl2x
or
mov
scas
aaa
cmp
scas
sbb
leave
or
xor
pop
nop
mov
test
shl
lret
dec
mov
lret
imul
std
daa
adc
enter
out
cmp
fimuls
cmp
rcrb
mov
rcrb
sarl
shrl
popf
push
cmpsl
pop
xor
and
mov
test
push
shrl
dec
leave
leave
sub
std
into
or
mov
cli
loop
aas
wbinvd
fldt
and
iret
loop
and
pop
cmpsb
fldt
ret
pop
idivl
addl
xchg
clc
or
data16
int
inc
pop
fstpl
push
add
popa
daa
in
jne
sbb
mov
faddl
mov
leave
out
nop
inc
mov
lods
jbe
jp
adc
pop
sbb
out
mov
push
jns
push
lcall
xor
dec
jp
mov
jg
fwait
xorl
ljmp
lret
loopne
cmp
dec
fiadds
fiaddl
sahf
push
xor
add
ret
das
lahf
push
mov
jne
adc
lret
push
iret
sbb
out
xchg
jbe
shll
stc
push
pop
out
mov
push
test
out
mov
daa
fadds
movsl
lea
push
jge
mov
adcb
pushf
inc
pop
or
mov
sub
dec
pop
push
mov
cld
push
and
cmp
test
jmp
popf
xor
mov
lret
and
clc
dec
lods
sbb
mov
add
push
sti
jnp
push
ret
cmp
fwait
pusha
cmp
ds
stos
andl
adc
leave
jg
addb
aam
xor
push
inc
xor
cmp
adc
ja
sbb
dec
in
mov
mov
mov
ret
dec
lock
add
or
outsl
ds
lds
test
leave
sub
xchg
lret
pop
das
cld
and
test
inc
pop
test
nop
dec
cmp
ret
mov
cmpsl
sbb
mov
sbb
nop
mov
sahf
fnsave
jbe
js
ret
mov
mov
xor
mov
fnstcw
add
sti
jb
dec
dec
pop
mov
xchg
ret
inc
mov
mov
cmp
xchg
mov
cmc
sar
cmp
js
mov
mov
sti
shlb
pop
fcmovnu
aaa
scas
in
stc
aad
bound
fidivrl
mov
mov
push
push
sbb
outsl
mov
fidivs
loope
cmp
mov
mov
pop
stos
dec
adc
shll
fisttpl
out
orps
push
aam
std
dec
cmp
adc
push
popl
mov
jae,pn
pop
push
aam
daa
mov
mov
fcoml
xchg
in
push
lret
stc
or
mov
shlb
jg
stos
sbb
subl
pop
inc
and
push
pop
stos
cwtl
xchg
sbb
faddl
adc
dec
add
xlat
xor
out
hlt
cmp
fmul
negl
add
js
sub
int
jne
pop
das
les
fdivs
test
cmc
and
js
adc
das
push
dec
std
stos
aaa
push
subb
push
addr16
xor
xchg
push
aaa
cltd
mov
inc
mov
subl
call
jge
jo
rol
mov
sub
pop
iret
stc
fwait
and
mov
stc
mov
mov
push
mov
out
sub
pop
mov
and
out
xor
es
cmc
fwait
mov
stos
cmp
jae
xor
jns
sahf
addr16
cmpb
inc
daa
es
add
add
mov
sarb
divl
stos
popl
into
shrl
inc
xchg
xchg
sahf
fbld
add
shrb
pop
cs
imul
mov
enter
imul
sahf
mov
sbbb
push
jnp
lods
outsl
lret
aaa
and
dec
cmp
hlt
xchg
pop
mov
sar
push
xlat
push
pop
push
mov
or
fnstcw
outsl
icebp
pop
test
add
jp
sub
shrl
lea
xchg
fmulp
lods
fnstenv
mov
pop
xchg
push
aad
fcomps
cmp
add
sahf
arpl
mov
mov
outsb
mov
mov
das
add
push
gs
jne
ror
das
rclb
fistps
lea
jl
ja
lret
cmpsl
mov
outsl
or
arpl
pop
out
jp
insb
stc
xor
outsl
outsb
cmpl
fbstp
xor
syscall
add
pop
ss
shl
mov
je
in
daa
cmp
out
mov
mov
inc
cmpsb
inc
adc
push
ror
inc
dec
mov
mov
cmc
and
dec
out
sbb
iret
add
jns
sbb
jge
pop
das
xchg
nop
mov
ds
or
ret
sbb
xor
shll
push
loope
xchg
xor
jo
sub
adc
rcrl
not
in
repz
xor
xor
js
jne
jl
lock
dec
movsl
mov
mov
push
adc
sbb
jmp
into
outsl
sbb
mov
outsl
dec
xchg
mov
xor
push
adc
inc
dec
adc
jge
aaa
mov
ret
sbb
mov
pushl
cmc
mov
insl
and
cmp
test
ficoms
xorb
fcoml
add
movntq
jg
push
addr16
outsl
xor
popf
pop
inc
call
roll
lcall
cmpsb
repnz
fwait
enter
and
stc
pusha
mov
jo
jmp
sub
out
test
sbb
shll
add
test
popl
fwait
and
push
pop
rcrb
sub
loop
xchg
cld
xchg
sub
pop
fucomp
xchg
mov
std
inc
cmp
add
push
xlat
xchg
inc
push
jp
xchg
call
loope
aaa
outsl
lock
aam
and
lods
mov
jmp
fdivs
xchg
adc
mov
aad
add
dec
dec
inc
aas
mov
out
or
mov
iret
push
push
lock
repz
out
mov
xor
out
mov
ss
inc
sti
imul
dec
cmp
mov
jg
in
xchg
mov
sbb
dec
in
lds
flds
daa
inc
jmp
aad
mov
or
sbbb
adc
roll
imul
sub
mov
mov
movswl
stc
sub
add
push
cmc
cmp
sbb
cwtl
cli
dec
cmp
push
push
idivb
xor
mov
cmp
cmp
or
daa
divl
pop
dec
cmpsb
jmp
out
ret
push
fbstp
scas
cmp
stos
sub
adc
mov
int3
push
lret
xchg
and
and
jae
push
inc
pop
sub
ficompl
and
push
add
jbe
xchg
je
cmp
push
ss
ret
shl
ljmp
push
leave
sub
jg
popa
xchg
sub
sbb
cmp
insl
pushf
pushl
mov
outsb
push
push
xor
leave
ficoml
adc
dec
dec
shrl
adc
movsl
dec
inc
pop
jl
ret
test
inc
jle
fisubrs
call
lods
movsb
dec
jge
lods
jmp
nop
jl
sub
out
push
cmpb
dec
in
inc
push
cld
out
pop
lret
shrb
sti
xchg
xchg
das
inc
fwait
getsec
repnz
loopne
push
das
mov
pusha
inc
push
sub
dec
cmp
or
sub
mov
das
adc
cmp
dec
xor
add
push
aas
jecxz
insb
sbb
lods
push
test
call
jae
fadds
out
int
inc
jno
xrstor
jp
add
fstpt
sbb
inc
ja
loopne
clc
cmp
icebp
cli
fs
pop
xchg
testl
inc
aad
cmp
scas
xchg
pop
sbb
ss
cltd
es
lcall
cld
scas
mov
dec
and
inc
xor
xor
and
jl
xor
lods
test
out
inc
and
pop
mov
adc
test
sbb
je
iret
sub
sub
pop
push
subl
mov
subb
jp
jmp
in
and
leave
leave
pop
scas
or
lock
dec
decl
lret
dec
pop
fsubp
ja
fisubrs
mov
out
clc
xlat
mov
lds
ds
pop
in
stos
inc
rolb
repz
sub
iret
outsl
jno
ret
daa
in
sbb
pop
dec
dec
pop
cltd
dec
in
or
jge
fdivs
pop
fbstp
incb
or
test
and
movsl
rcr
in
pop
sbb
dec
jno
add
mov
repnz
flds
and
arpl
lea
daa
dec
sbb
les
fmull
mov
cs
leave
stos
fstpt
ret
pop
js
pusha
cmp
sbb
sbb
clc
xchg
leave
aaa
repnz
inc
xor
push
cmp
mov
or
ret
cmpsb
pop
mov
test
imul
lret
hlt
cs
movsl
scas
rorl
xor
jb
sub
inc
xor
adc
lods
push
call
or
pop
mov
adc
jb
ror
pop
inc
jb
cli
shlb
lods
loop
xor
aas
mov
int
in
lods
mov
les
jno
lock
cmpsl
xlat
jno
pop
sbb
lods
pop
movsb
mov
test
jmp
daa
xchg
retw
cmc
stos
mov
and
fwait
mov
ret
in
xchg
ret
rorb
std
xchg
scas
cltd
cmp
xlat
lea
pusha
inc
sub
out
push
fcmovu
lods
ljmp
adc
into
in
push
inc
movsb
jno
ljmp
mov
fwait
adc
mov
adc
jbe
jno
mov
push
inc
insl
inc
mov
pop
out
outsl
sub
inc
sbb
mov
jp
rorl
cmpsl
fscale
xchg
outsl
iretw
push
fldcw
xlat
cmp
and
bound
fwait
jecxz
rclb
cmc
dec
es
imul
cmpsl
and
fldt
repz
sbb
cmc
or
jge
popa
ret
dec
add
or
insl
movsl
stos
ss
dec
in
ret
dec
ss
mov
jp
push
addl
cmc
mov
loop
or
loopne
push
dec
mulb
shlb
mov
out
xchg
daa
dec
or
in
mov
cmp
lea
mov
and
sbb
lahf
mov
imul
pop
dec
std
pop
and
fwait
adc
cmp
inc
xor
repz
repnz
sahf
js
push
iret
dec
cmp
push
ja
filds
outsl
lods
push
adc
xchg
xchg
mov
cltd
rolb
icebp
mov
cmp
insw
repz
pop
push
hlt
or
jnp
lds
pop
inc
call
push
add
xor
xor
iret
imul
popa
outsl
mov
ret
ret
and
stos
sbb
and
adc
add
mov
out
sbb
fsubrs
clc
mov
mov
fisttps
je
cmp
loope
mov
arpl
or
pop
mov
sub
sub
dec
xor
xchg
stos
movsb
mov
leave
adcl
cmp
repnz
dec
mov
out
scas
xchg
jae
mov
cmp
aas
test
jnp
imulb
or
inc
mov
xchg
shrl
xor
aad
cmp
fstl
inc
pop
push
imulb
jbe
dec
ds
cmp
ds
lret
or
shll
std
fcmovnbe
insb
adc
aaa
sub
adc
mov
ljmp
cmc
pop
push
mov
pop
insl
and
dec
daa
and
ret
stos
loope
and
lock
ja
movsb
push
int3
mov
mov
mov
imulb
cs
or
rclb
sti
mov
je
mov
lods
scas
ret
add
dec
fwait
jns
pop
shr
loope
mov
mov
cbtw
and
testb
push
fisubrl
sub
addr16
jp
mov
push
fidivrl
out
sub
or
mov
in
pop
aad
movsb
rclb
cmp
sahf
or
lret
iret
stos
daa
xchg
aaa
mov
pop
dec
mov
stos
sub
addr16
xchg
iret
leave
lock
mov
sti
mov
jle
icebp
arpl
shlb
gs
out
outsb
cmpsl
dec
mov
icebp
sub
out
mov
pop
pminsw
mov
out
pusha
dec
cs
push
enter
cmc
repz
cltd
pusha
rcrb
cmc
icebp
inc
dec
mov
sahf
dec
add
jle
sub
mov
not
pop
insl
rorl
dec
in
sbb
push
popa
jae
out
sub
lcall
mov
ja
imul
or
mov
stos
sub
lds
jbe
iret
outsb
daa
mov
xchg
stos
sub
addr16
and
push
or
jp
ud1
pop
scas
xchg
or
lds
push
jne
xlat
mov
repz
pushf
mov
mov
adc
sbb
dec
cmc
push
pop
sub
mov
pop
pop
pop
cmpl
push
es
decb
shrb
pop
add
xchg
add
cmp
scas
push
or
popl
xor
jl
push
jg
sub
iret
cmp
sub
mov
jle
adc
pop
lahf
and
mov
jg
fs
sbb
mov
into
scas
lret
mov
xchg
mov
jmp
mov
xchg
mov
aaa
jbe
jecxz
mov
nop
testl
scas
insl
push
jns
xchg
fcoml
dec
xor
add
xor
addl
stos
sti
xlat
scas
jbe
mov
adc
mov
xchg
xchg
add
mov
gs
hlt
pushf
test
push
push
lcall
test
pop
inc
aam
push
nop
fcoml
push
xor
arpl
mov
cmp
mov
mov
xchg
enter
testb
test
cmpsl
mov
sbb
lahf
inc
dec
scas
cs
cwtl
sarb
mov
mov
mov
vpshad
gs
pop
push
push
xor
in
pop
shl
xchg
dec
and
push
cwtl
call
mov
stc
insb
aad
addr16
jmp
scas
pop
mov
out
ret
jbe
adc
jge
ljmp
mov
inc
cmp
int
repz
mov
pop
enter
dec
int3
icebp
repnz
or
mov
popa
lret
out
imul
jo
out
push
mov
int3
xchg
int
or
lds
sbbl
fistps
popf
das
xor
xchg
outsl
repz
pop
or
inc
loop
push
push
cmp
inc
addl
jnp
inc
iret
inc
xchg
inc
cmp
rolb
xchg
mov
cmpsl
int3
pop
dec
out
push
cmc
mov
imul
push
or
mov
push
jge
mov
out
xchg
mov
inc
mov
or
call
lret
dec
je
lods
sbb
push
inc
popa
ret
pop
mov
shrl
insl
sub
js
imul
std
jb
adc
pop
and
xor
cs
xchg
inc
mov
icebp
push
dec
xor
inc
jb
push
sbbb
cs
push
dec
repnz
gs
and
ljmp
int3
push
lret
or
inc
add
imul
or
cmp
add
pop
repz
leave
inc
outsb
in
aad
cmpsl
rcrl
mov
push
mov
and
repnz
adc
cmpsl
and
xor
inc
arpl
dec
mov
out
push
ss
dec
xchg
mov
inc
xor
push
jne
out
iret
lret
das
push
jbe
mov
push
pop
sub
and
push
aaa
mov
adc
int3
mov
lretw
xchg
xchg
dec
lcall
cs
xor
cmp
cmp
xorb
xorb
mov
inc
das
jge
sub
xor
sub
add
enter
mov
adc
outsb
push
mov
sub
stos
pop
jmp
repnz
orb
dec
cmpl
pusha
push
enter
daa
jmp
ret
movsb
shrb
enter
mov
repnz
mov
mov
outsl
test
mov
sbb
scas
mov
mov
mov
ds
mov
mov
shlb
jg
jecxz
mov
lret
or
jecxz
xchg
mov
sub
jle
cmpsl
push
jecxz
inc
mov
xor
cmp
andl
pusha
adc
repz
iret
ja
mov
xlat
sbb
out
sub
idivl
mov
inc
inc
jge
sahf
rcr
xor
add
fiadds
enter
pop
push
jge
cmp
mov
jle
sahf
ljmp
into
fidivrs
rclb
cli
push
das
cmp
test
pop
aaa
fldl
js
aad
jmp
vmovaps
cli
pop
mov
stc
dec
mov
cmp
in
push
aas
std
jns
test
jmp
push
loop
mov
repz
jecxz
gs
aad
mov
xor
stc
dec
sub
push
inc
sbb
scas
or
andl
lret
dec
mov
fcmovbe
leave
lret
lret
clc
popf
mov
fsubs
xor
shll
push
fsubrs
mov
stos
das
jmp
xor
or
mov
add
mov
popf
sub
repnz
shl
xor
inc
stc
outsl
inc
push
and
movsl
xchg
movsl
loop
and
icebp
stos
inc
test
adc
icebp
repnz
add
mov
mov
icebp
loop
out
push
int
xlat
imul
clc
adc
arpl
dec
or
or
insb
inc
and
ss
push
aam
jl
nop
fldt
divb
dec
icebp
aad
mov
scas
in
add
pop
mov
insl
jmp
and
xor
jg
jmp
mov
test
fs
cld
fchs
or
mov
xchg
addr16
int3
shrb
ror
push
fsubs
push
rcll
push
add
mov
mov
mov
jb
and
mov
aaa
frstor
mov
xor
sbb
in
mov
shlb
jle
stos
mov
lret
xchg
sub
arpl
mov
cs
jl
mov
ret
fcoms
incb
jmp
sahf
xchg
push
xchg
out
adc
push
sti
jns
pushf
xor
fwait
je
js
out
js
aas
ss
outsb
fsubp
cmpsl
mov
push
dec
outsb
imul
xchg
jb
xchg
andl
ror
popa
jecxz
mov
pop
out
mov
adc
cmp
lock
cmp
jle
xchg
addr16
mov
and
sub
rclb
insl
push
pop
mov
stos
jmp
and
std
push
shlb
iret
cs
sub
out
loop
stc
add
adcb
inc
in
pop
add
dec
jp
clc
push
dec
adc
mov
mov
or
cmp
jnp
dec
ds
cmpl
lods
xchg
data16
jg
dec
out
mov
lret
sbb
testb
push
es
insl
xor
xchg
jo
rcr
xchg
mov
xchg
xchg
jge
int3
das
cmp
lea
mov
out
pop
into
and
push
std
psubw
inc
aam
jo
pop
loopne
sbb
imul
xchg
add
add
or
or
lret
mov
and
mov
pop
ret
push
sub
jge
inc
dec
bswap
outsb
push
dec
sti
dec
push
xor
dec
mov
stc
lock
sahf
pusha
das
aas
mov
fisttpl
imull
mov
sahf
inc
add
jecxz
jle
mov
inc
push
xor
or
pop
sub
mov
nop
push
icebp
lcall
clc
add
sbb
cmpsb
sub
out
push
imul
xlat
dec
xor
lcall
xor
jecxz
aas
xlat
adc
jbe
xchg
mov
and
inc
out
pop
jg
shlb
cltd
mov
push
sub
cmp
push
shrb
imul
jno
insl
adc
bound
dec
xorl
into
push
mov
adcb
lcall
xor
mov
cs
in
aaa
jmp
mov
cli
xchg
mov
stos
sahf
cmp
in
sbb
js
ret
jge
scas
in
and
loope
push
jne
inc
push
cli
pop
repz
inc
jge
dec
sbb
popa
sbb
jo
xchg
aaa
xlat
stos
cltd
mov
add
sub
ljmp
int3
subb
into
push
aas
cmc
inc
nop
or
mov
mov
iret
mov
roll
or
mov
out
pop
jne
daa
and
mov
pusha
adc
sub
ja
rclb
rcrb
or
push
dec
cmp
movsb
daa
aad
dec
push
outsl
xor
fsubs
hlt
ss
in
insl
push
mov
and
push
or
or
xor
mov
test
sbbl
pop
ljmp
mov
mov
push
pop
rcrl
add
cmp
pop
ja
add
inc
pop
lock
jns
cltd
lock
fwait
jnp
mov
mov
push
pop
dec
or
jle
sub
lods
sbb
pop
xor
jnp
inc
outsb
je
loopne
insl
js
inc
int3
add
push
rclb
and
shll
mov
ret
xor
pop
dec
mov
fcompl
push
push
test
jp
push
int
out
push
cmp
jmp
adc
pop
add
mov
imul
cmp
popa
sub
jmp
and
data16
and
xor
inc
add
xchg
arpl
mov
out
or
jg
movsb
and
sbb
jno
push
mov
mov
mov
pop
stc
adc
sarl
jno
pushl
pop
fiadds
vpsubusb
lcall
sub
out
sahf
xchg
das
mov
popa
dec
add
mov
cmpsb
xor
xor
pushf
mul
jle
jmp
cmp
mov
sarb
adc
pop
outsl
inc
mov
movlps
mov
cmp
adc
and
call
cmp
mov
push
js
mov
loopne
push
adc
xchg
aad
or
dec
stos
xchg
repnz
sti
shll
roll
jnp
stos
cld
ljmp
je
mov
ja
insl
fsubl
xor
lock
mov
std
xor
jle
popf
and
cmp
ret
xchg
stos
and
or
dec
adc
push
movsl
movsl
push
sub
jecxz
cli
adc
stos
jg
andb
pop
vucomiss
jecxz
push
add
stos
aaa
test
pop
mov
jae
repz
and
xor
and
mov
inc
lret
pop
icebp
call
mov
aas
addr16
test
aas
and
into
pop
test
lahf
xor
out
in
push
fsubl
jne
add
movsb
sub
lds
cmc
pop
sbb
jae
xchg
xor
lret
stc
lahf
add
lret
call
pop
sti
cmp
hlt
das
mov
or
in
xchg
mov
daa
inc
daa
dec
xor
test
sub
call
sub
jle
dec
popa
aad
mov
push
adc
out
out
leave
mov
or
push
jge
adc
jne
xchg
shrb
and
out
inc
cmp
fwait
ret
xchg
dec
mov
int
xchg
scas
into
pop
into
sub
insb
or
lock
in
imul
push
jno
mov
cmp
pop
fwait
lahf
iret
push
mov
stc
pop
movsb
sub
mov
in
popf
outsb
es
stc
test
mov
jnp
jg
pop
dec
jp
adc
ss
mov
lret
jbe
adc
int3
ja
pop
pop
sub
aas
or
sbb
add
mov
jbe
cmp
fwait
adc
out
das
push
inc
cmp
test
xor
sbb
outsb
iret
jne
xchg
std
insl
adc
add
jbe
jge
jnp
pop
push
dec
xor
xchg
lods
push
pop
xchg
shrb
cs
jge
mov
scas
pop
pop
pop
stc
mov
repnz
pop
and
in
add
fs
sbb
loope
mov
mov
outsb
jle
and
cwtl
mov
mov
dec
mov
mov
rclb
dec
cmp
notb
mov
xlat
fisttpll
arpl
pop
add
push
dec
jne
out
in
jns
cmp
xor
inc
stc
adcl
pop
mov
es
pop
lcall
cmpsb
lods
inc
xchg
popa
nop
jmp
xor
cwtl
adc
scas
pop
icebp
jbe
cmc
stc
xchg
or
add
mov
cmpsb
adc
insl
ret
push
aaa
and
jge
data16
in
push
cmpsb
jge
cld
fcoml
ja
nop
cmp
xor
dec
jb
xchg
fists
xor
push
adc
jno
xor
xchg
push
aad
sub
dec
sti
scas
pop
pop
pop
mov
test
shrb
or
pop
clc
cmc
push
pop
ret
fdivs
cld
add
jne
mov
or
and
sub
cmp
addr16
leave
rcrb
xorl
mov
pop
xchg
data16
xchg
pop
ja
sbb
xchg
das
lods
jecxz
int
xor
mull
sbb
std
mov
dec
mov
pusha
mov
and
loope
push
jb
loop
mov
jle
push
cmpsb
push
aaa
cmp
decb
out
mov
arpl
das
mov
mov
idivl
lret
jns
aad
push
jecxz
adc
xchg
xchg
pop
fdivrl
fsts
in
push
inc
xchg
out
das
xchg
cmpsl
packuswb
dec
cmc
mov
popf
pusha
xor
das
jne
ljmp
push
outsb
push
ret
adc
out
xor
cmp
xchg
test
mov
out
insl
aaa
mov
test
outsb
push
mov
or
inc
mov
data16
sub
lret
push
jmp
mov
shl
loop
xchg
xlat
imul
fnsave
shlb
insl
mov
mov
jns
addr16
push
pop
push
or
repz
cs
popa
pushf
push
sub
aaa
cmp
lods
stc
sbb
jecxz
xchg
xchg
test
and
in
inc
mov
and
pushf
movsl
mov
jnp
inc
push
adc
adc
cwtl
rolb
aam
enter
dec
cmp
lea
icebp
xor
mov
mov
fcoms
shl
mov
or
jae
in
stos
pop
push
ss
movsb
inc
pop
shl
icebp
sti
outsl
js
inc
cmp
or
dec
add
insl
jge
addr16
mov
or
mov
mov
fisttps
add
scas
or
and
orl
arpl
into
or
add
adc
xlat
add
xchg
push
out
int3
loop
movsb
dec
adc
insl
inc
mov
adc
leave
jmp
add
insl
pop
sti
dec
jno
insb
popf
xor
sub
scas
stc
rorl
ja
mov
xchg
dec
iret
xor
push
push
dec
inc
push
dec
fdivrl
sbb
dec
cmpsl
clc
jle
xchg
sti
mov
movsb
xchg
inc
mov
inc
hlt
cltd
xor
aas
add
xor
imul
and
push
aaa
cli
cmp
jne
pop
adc
leave
mov
into
iret
popa
or
dec
or
std
pop
push
lods
and
mov
adc
push
xchg
pop
int
and
mov
cmc
and
xchg
sahf
insl
sub
loopne
or
scas
test
rorb
push
cmpsl
stos
fs
ljmp
xor
and
adc
add
mov
fbld
dec
out
test
mov
sub
jmp
daa
dec
xlat
aas
iret
push
data16
inc
sub
rcll
cs
test
sbb
pop
enter
pop
mov
jbe
hlt
cmp
lret
fcomp
ret
fcom
inc
stos
mov
dec
add
sub
mov
adc
test
xlat
sbb
xor
stos
pop
imul
loopne
addb
mov
lret
adc
ret
and
repnz
dec
lahf
jp
mov
push
dec
test
jecxz
inc
in
pop
les
fidivrs
pushl
or
mov
push
clc
xchg
es
fidivrl
sbb
lret
addr16
out
cmp
dec
and
sub
in
stos
idivb
dec
or
sahf
jecxz
aaa
jecxz
pusha
mov
push
sti
fdivr
hlt
mov
dec
push
xor
mov
mov
sbb
cs
cmp
fwait
sti
clc
lcall
ret
adc
pop
fs
dec
xor
mov
xchg
sarb
push
das
lock
pop
push
into
jae
mov
movsb
sbb
cmp
sbbl
into
pusha
add
shl
jge
sub
push
or
pop
xor
or
pop
sub
push
mov
and
scas
or
mov
push
lret
lahf
mov
mov
in
shrl
sub
cmp
add
sbb
popa
mov
shll
int
sbb
lcall
sbb
cmp
dec
pop
int
mov
mov
shrb
pop
push
add
mov
cmp
or
mov
and
clc
insl
cmp
pop
int
push
nop
lods
or
jno
sbb
mov
cmp
cmpsl
mov
push
sbb
leave
mov
fwait
out
out
sub
cltd
jno
loopne
inc
add
and
sbb
inc
test
lods
xchg
xchg
mov
fsubp
jecxz
add
cmp
dec
mov
sbb
idivl
sub
enter
mov
sbb
xchg
xchg
stc
std
inc
fs
dec
jg
inc
adc
das
push
loopne
pushf
js
shl
add
xchg
cmp
fcoml
dec
push
and
mov
mov
pop
xchg
sub
mov
notl
movsb
lods
push
sti
mov
mov
pop
dec
popf
add
mov
ljmp
add
inc
js
fistpl
gs
dec
jb
xchg
ror
sahf
mov
dec
dec
push
xchg
jp
pop
aad
push
lods
jnp
aam
shr
aad
mov
popf
push
pop
stos
sbb
lock
sub
ret
mov
in
push
cmp
test
js
pop
xchg
or
jns
imul
pop
das
xor
mov
cmpsb
add
mov
cmp
and
call
adc
jecxz
aam
pop
cmpsl
sub
mov
orb
aaa
pop
stos
ja
std
jb
push
pop
inc
movsb
pop
push
mov
dec
pop
ljmp
sbb
xor
push
sbb
stos
push
and
divb
jnp
sbb
imul
shlb
dec
ficompl
pop
roll
xchg
xor
fcmovbe
stc
sub
adc
mov
sub
adc
xchg
mov
xchg
push
repz
nop
xor
and
xor
fwait
sub
pushf
cmpsl
flds
mov
fsubrs
and
pop
call
shlb
sbb
fwait
xor
popa
aad
mov
mov
dec
fcoms
sbb
and
push
cvtps2pd
call
test
cmp
dec
ret
cmp
jmp
mov
dec
pop
mov
cmp
pop
adc
aaa
cmp
repz
push
mov
fcmovne
jg
sub
or
cwtl
cltd
lock
xor
mov
daa
iret
jae
orb
push
or
cld
inc
dec
leave
xchg
push
pop
add
and
rol
xchg
lods
sbb
loop
sti
mulb
std
xchg
jno
sti
add
sti
push
adc
inc
mov
or
bnd
or
jmp
push
jp
and
push
sbb
xchg
sub
test
lock
fsubrs
dec
inc
imulb
pop
inc
dec
inc
adc
pop
cmp
dec
imul
ja
xchg
scas
mov
fldcw
lods
popa
shll
mov
push
imul
iret
ljmp
mov
pop
xchg
outsl
ret
jbe
fsubrs
rorb
outsb
adc
cwtl
lcall
xchg
outsl
lods
lods
push
and
push
mov
daa
pop
mov
lock
xor
adc
mov
cmc
in
jmp
adc
shll
movsl
jbe
cld
cmpsl
add
mov
ja
add
cmovl
stos
jbe
sarl
cmp
lods
shl
or
sbb
inc
or
add
call
xchg
out
jno
pusha
arpl
test
in
ret
jae
out
push
xchg
stos
mov
add
jmp
icebp
mov
insb
inc
fdivrs
cwtl
add
inc
fwait
adc
andl
jmp
inc
and
test
pop
out
xchg
repnz
loopne
les
call
aam
std
pop
xchg
xchg
fsubrl
cltd
xchg
push
sbb
cmp
sbb
cld
test
lea
inc
fs
icebp
lret
ljmp
and
inc
ficomps
test
xchg
cmp
lcall
jne
xchg
in
neg
mov
lahf
push
mov
jle
mov
fildll
adc
and
lret
mov
daa
cmpl
rolb
fstl
xor
fwait
imul
mov
sbb
daa
adc
jmp
ret
scas
cmc
cltd
arpl
in
xchg
or
cs
rorl
add
jg,pn
shrl
inc
lods
stos
push
sti
fwait
sub
mov
dec
push
lahf
fwait
mov
xchg
pop
adc
hlt
fs
test
iretw
out
mov
fsts
lods
ss
pop
xor
stos
or
mull
mov
push
enter
cmp
fld1
out
cli
or
or
das
pop
in
push
cmp
clc
mov
repz
test
insb
mov
movsb
daa
out
push
sti
ljmp
ss
dec
mov
inc
sub
aam
je
xchg
inc
inc
mov
sbb
add
xchg
push
mov
inc
inc
daa
aas
lcall
shl
dec
imul
imul
test
xor
mov
stos
inc
nop
ficoms
dec
lahf
shrb
daa
roll
dec
push
insl
xor
movsl
mov
insl
fsubs
push
sub
push
cmp
clc
fwait
and
shlb
adc
mov
jb
gs
mov
lods
loop
sbb
xor
and
jb
lock
aas
push
cmp
jge
inc
rep
testl
test
add
aas
outsl
test
loopne
aam
insb
push
adc
jns
ljmp
xor
jns
xor
dec
ja
push
dec
xor
imul
jmp
sub
pop
sub
clc
push
addr16
insb
jecxz
mov
pusha
mov
sub
pop
mov
mov
jle
aaa
pushf
hlt
pop
and
popf
dec
sub
adc
int
xchg
cmp
jmp
mov
push
cwtl
jp
inc
ret
or
adc
cwtl
imul
iret
and
cmc
roll
shr
loope
cmp
das
mov
adc
and
outsl
xchg
adc
xchg
jle
cmp
jp
and
repz
adc
adc
fsubrs
outsb
mov
cmp
cli
pop
xchg
push
aam
adc
stos
notl
lcall
into
mov
test
and
add
xchg
hlt
mov
ss
xor
dec
fs
xchg
popa
in
das
mov
cs
inc
pop
sub
pop
fs
sar
or
lods
insb
stc
shrb
add
mov
popa
jecxz
jae
jo
and
push
mov
lret
mov
not
xor
loop
cs
xor
xchg
lahf
pop
fcmovu
les
adc
dec
adc
testb
pop
dec
push
bound
imul
push
jne
jnp
stos
aam
int
pop
cmpl
pushf
call
mul
daa
pop
movsb
cmp
cmp
mov
xchg
push
arpl
and
fs
das
push
add
push
jne
add
mov
push
adc
sub
mov
xor
jmp
pop
popa
ret
jne
lds
outsl
push
les
push
inc
mov
inc
sti
out
mov
xchg
test
stos
and
xchg
sbbb
push
roll
jne
xor
insb
lret
push
rcl
cs
jp
cmp
stos
stos
dec
inc
cs
ds
cmp
shlb
jecxz
push
pop
adc
movsb
cmp
pop
lahf
pop
jnp
xchg
loopne
lods
dec
jg
fnstenv
adc
jns
and
inc
dec
lock
scas
decb
jle
mov
mov
inc
je
mov
out
cmp
pop
std
cs
pusha
fxch
xor
pop
cmp
dec
cmp
mov
and
out
push
and
pop
arpl
xchg
ret
ss
mov
insb
pop
lcall
test
add
xchg
xor
push
popf
pop
ror
push
rolb
sarl
pop
nop
leave
mov
pop
hlt
mov
popa
pop
mov
adc
insb
insb
lds
pop
fsubs
xchg
fstps
jecxz
cmpsl
fiaddl
xchg
jne
outsb
jae
lea
mov
in
lcall
xor
push
jns
jno
xor
flds
popa
add
adc
cs
ror
mov
pop
aam
pop
mov
xchg
xchg
pop
push
cmp
aas
lock
into
pusha
push
inc
movsb
inc
dec
jnp
lds
mov
lea
xorps
add
inc
loopne
aas
and
push
adcb
adc
push
push
xchg
sub
shrb
rcrl
xor
std
mov
cmp
push
cmp
lea
outsb
ret
xchg
xchg
and
fsubs
ja
and
inc
mov
rcrb
fwait
push
pop
ja
push
lods
stos
shrb
mov
movsl
or
movb
ljmp
icebp
mov
mov
push
and
mov
faddp
loop
ljmp
enter
fmull
cmpl
test
xor
faddp
dec
fcomi
stos
mov
inc
dec
scas
in
pusha
dec
and
mov
mov
and
mov
cltd
repnz
fdivrp
cmp
add
dec
dec
pop
mov
mov
daa
add
in
dec
mov
dec
mov
popa
aas
add
ds
outsb
popa
adc
fwait
ss
loop
push
xor
jnp
inc
lahf
dec
sarl
jns
pop
daa
outsb
in
lret
outsl
rcll
cmpsl
jecxz
pop
rcrl
test
mov
push
out
pop
xchg
popf
dec
in
add
xchg
pushf
jmp
xchg
sbb
movl
loope
pop
movsl
and
stos
addr16
dec
hlt
ds
fcoml
add
sub
ds
into
lahf
adc
ja
insb
out
mov
xlat
sarb
dec
add
leave
out
add
shl
rcll
fisubrs
scas
sub
push
subl
push
jns
mov
popa
mov
shrb
push
into
ds
mov
subl
ja
inc
cmp
cmp
mov
cmp
jmp
addr16
push
xchg
inc
or
mov
aad
xchg
lret
cmp
loop
jmp
jle
addl
or
xor
push
or
add
scas
mov
dec
out
and
aaa
imul
dec
mov
andl
js
lods
mov
mov
or
push
dec
xchg
mov
cmp
sbb
mov
aaa
mulb
sub
push
imul
ljmp
push
sbb
lcall
push
aad
xor
jbe
mov
insl
cmp
rolb
in
mov
js
pop
hlt
push
fisubrs
popa
ss
pop
and
mov
xchg
jmp
imul
pop
ja
out
pop
inc
fdivrs
sub
xor
mov
stos
clc
repz
pop
add
xchg
inc
push
mov
cmp
out
mov
xchg
or
push
push
fidivrs
push
add
inc
cmpl
dec
out
aas
call
data16
mov
popa
cli
pop
xor
or
ret
mov
pop
insl
rorb
adc
test
fwait
inc
leave
jmp
lcall
add
mov
xchg
cmpsb
fmuls
mov
cli
bound
xacquire
cmp
mov
pusha
cmp
and
cli
cwtl
adc
das
dec
push
sarl
fldl2t
mov
outsb
aam
jno
iret
outsb
jno
iret
xor
mov
or
ja
adc
addb
jp
ja
mov
xlat
mov
push
push
sub
lea
fildll
xchg
ret
pop
jmp
pop
inc
or
pop
scas
test
add
cmp
rclb
sahf
sub
cmp
call
jae
aas
push
fwait
ss
xor
and
outsw
aaa
and
imul
mov
jmp
dec
flds
jae
bound
jae
out
test
orb
jle
xor
repz
pop
adc
aaa
push
data16
xor
and
jne
std
sub
adc
or
negl
call
loope
adc
fcoml
jle
jns
jae
push
cmp
notb
dec
dec
mov
xchg
in
hlt
mov
ss
into
outsb
xchg
push
adc
jae
daa
mov
push
sbb
iret
jbe
test
imulb
xor
push
sbb
inc
popa
adc
xor
ficoms
add
xchg
jo
mov
shl
outsb
inc
pop
cli
push
xchg
jge
adc
fcmovne
adc
pop
push
mov
xchg
ljmp
cs
negl
inc
pop
cmc
mov
addl
inc
sbb
subl
test
xor
dec
ficoms
lcallw
icebp
aam
jae
add
lea
push
xchg
jns
les
cltd
imul
das
pop
jo
test
add
inc
mov
shrl
sub
xchg
aad
sbb
imul
fcomps
icebp
out
cmp
dec
jns
pop
lock
add
push
jl
sub
mov
clc
ret
shll
loopne
stos
int
cmpsb
inc
pop
cmpsl
inc
push
lock
jp
jb
test
sub
fsubr
pop
fiadds
push
mov
xor
sub
jecxz
daa
out
daa
daa
adc
jmp
xor
dec
daa
sti
fcompl
jbe
dec
cmp
cmp
xchg
pop
mov
cmp
cmpsl
jo
jo
push
cmpsb
jp
call
out
and
xor
cmp
and
cmc
cmp
aas
daa
stc
aad
stc
push
push
lahf
mov
xchg
pop
aam
das
call
call
cmp
loopne
rcrl
int3
mov
out
cmp
fldl
lret
adc
cmp
pop
sub
out
push
fisubl
jno
cwtl
movsl
call
dec
js
cs
pusha
jmp
mov
mov
and
es
data16
and
lahf
xchg
les
mov
dec
cmpb
mov
lods
loop
fdivl
xor
int
ss
loope
aas
iret
adc
ljmp
pop
je
loope
lahf
adc
dec
or
jno
mov
gs
lods
xchg
sub
aam
xchg
loop
mov
inc
push
hlt
sub
jge
in
cmp
push
lret
mov
outsl
add
aaa
add
sub
lret
sarl
mov
cmpsl
int
add
and
jne
aas
es
add
add
xchg
mov
cs
lcall
je
mov
test
js
dec
test
loop
push
mov
ljmp
shl
mov
enter
adc
xchg
addr16
inc
mov
adc
cmp
mov
cmp
iret
into
cli
testb
mov
popf
push
push
arpl
cmp
shlb
cmp
out
call
push
sub
call
fst
arpl
dec
mov
cmp
xchg
push
call
jmp
jnp
js
mov
xor
mov
dec
scas
push
cmp
push
fwait
xor
or
stos
push
insb
jp
sbb
mov
in
add
pusha
aad
rolb
fists
dec
sbb
push
addr16
in
add
dec
nop
mov
pop
mov
ja
int
popf
pop
dec
aad
add
mov
dec
mov
adcl
pop
incl
ljmp
icebp
push
neg
mov
pop
inc
xchg
imul
jp
mov
mov
dec
int
ds
gs
xchg
cmp
movsl
loop
fildll
gs
in
push
das
data16
pop
outsb
xor
cmp
xor
jle
in
mov
xlat
shrb
and
pop
imul
pushf
cmp
push
pusha
and
fwait
pop
lahf
popf
inc
push
enter
jmp
sub
shlb
jns
popa
fs
push
mov
pusha
mov
in
dec
fucomip
fiaddl
or
mov
out
hlt
aas
lcall
lahf
clc
jecxz
mov
insb
aaa
add
pop
shll
mov
mov
dec
popa
cmpsl
mov
jl
xchg
decb
push
xor
jbe
fnstcw
test
mov
mov
into
adc
cld
xchg
ds
iret
sub
incl
stos
sub
lret
testb
stos
push
xor
mov
mulb
mov
in
cli
mov
dec
cmc
jg
mov
xor
xlat
int
je
leave
xchg
mov
in
mov
ret
stos
ss
inc
stos
ljmp
jo
xor
repnz
loop
cmp
jp
jo
out
jmp
out
dec
xor
pushf
fildl
mov
add
cs
in
jbe
push
or
lcall
orb
add
daa
and
cwtl
sbb
cmpl
mov
mov
shlb
sub
sub
into
fwait
push
ret
divb
xchg
pop
or
adc
sbb
dec
rcl
mov
or
js
imulb
xor
sub
les
shlb
cmp
jmp
ljmp
adc
mov
fimuls
xor
lods
leave
mov
jno
jmp
add
mov
hlt
or
sbb
xchg
es
repnz
addr16
std
insb
outsb
push
mov
xor
sahf
out
clc
mov
or
and
ss
push
leave
shl
clc
out
mov
inc
repz
jno
mov
jle
data16
imul
int
fstl
mov
cmp
mov
cld
out
cli
jle
arpl
xor
mov
xchg
iret
aas
mov
mov
shrb
add
or
pop
test
andl
mov
push
push
scas
cltd
mov
sti
mov
out
jb
adc
pop
sub
imul
jge
mov
out
repz
scas
shll
in
sti
pop
cmp
jno
mov
lret
jge
imul
xchg
decl
or
mov
xor
jb
insl
xchg
or
insl
and
or
jmp
pop
out
ret
scas
roll
pusha
jmp
or
int
sar
lret
push
rolb
jle
add
hlt
fsubs
mov
mov
mov
enter
ret
inc
aas
cmc
mov
cmovs
je
ror
mov
push
out
repnz
imul
jbe
outsl
xchg
pslld
js
xchg
fmull
mov
hlt
ret
lods
scas
icebp
sarl
jmp
in
dec
adc
les
add
movsl
adc
cmp
xor
sbbb
jl
incl
mov
mov
add
sub
sbb
sub
push
mov
out
fdivs
mov
xchg
rcrb
cmpsb
repz
rorb
sbb
sbb
push
loopne
xor
out
dec
xor
mov
and
add
adc
dec
cmp
notb
sbb
mov
daa
sub
in
or
dec
ret
in
dec
and
fsubrp
and
sbb
sub
mov
insb
jecxz
outsb
fwait
pop
mov
jae
int3
xchg
nop
ss
xor
inc
dec
mov
mov
jo
sbb
adc
out
dec
xor
add
lods
inc
ss
je
and
dec
add
mov
pop
or
or
ret
mov
imul
nop
mov
cmp
pop
dec
outsb
iret
push
pop
idivl
push
ficomps
adc
das
sub
mov
das
mov
repnz
test
mov
std
cmc
test
mov
ja
shll
xor
fmuls
xor
cltd
mov
in
data16
dec
div
pop
repnz
out
aaa
jne
frstor
xchg
outsl
pop
out
je
rcrl
fsubl
push
clc
lret
push
jp
sub
cmpsl
fcmovnu
icebp
add
jp
outsb
jns
pop
lea
pusha
adc
inc
mov
mov
fistl
or
jmp
sbb
out
or
test
cwtl
addr16
iret
fistl
nop
or
inc
pushf
xor
dec
push
inc
das
mov
and
pop
pop
icebp
cs
sbb
mov
mov
popa
sbb
out
outsb
sbb
push
ss
push
addr16
cmpsl
xor
sub
pop
in
adc
mov
inc
fisubrs
pop
mov
fstl
rol
xchg
xchg
repnz
test
fsts
mov
cld
shll
out
in
mov
xchg
or
jge
jns
je
leave
mov
lock
add
lods
pop
iret
mov
in
mov
push
xchg
ja
cmp
les
xchg
dec
mov
scas
inc
adc
push
dec
jl
popa
jae
or
fs
jno
ret
jecxz
mov
cmpsb
mov
ret
fldenv
xor
lret
sub
dec
outsb
jmp
xchg
les
pushf
and
hlt
and
addr16
nop
jbe
fldl
xchg
pop
bswap
push
xor
call
pop
mov
dec
rorb
ret
push
or
add
ret
pop
xor
jb
jl
mov
scas
jecxz
inc
adc
rorb
dec
pop
insl
dec
pop
push
cmp
daa
xor
push
jnp
mov
fcmovnu
fidivs
push
cmpsl
jb
pusha
adc
xor
push
xlat
push
jno
repz
pop
data16
test
and
js
ja
loopne
inc
addr16
in
xchg
adc
bound
xchg
push
dec
ljmp
xor
add
call
sub
inc
enter
push
mov
jp
mov
enter
fcoml
fwait
xchg
mov
ret
jg
cmp
lock
jecxz
push
jb
test
add
cli
imul
stos
imul
mov
xchg
daa
mov
mov
push
jp
mov
negl
rclb
push
inc
pop
in
ret
mov
repz
lret
inc
popa
adc
push
lds
sub
div
movb
adc
mov
mov
loop,pt
nop
pushf
mov
out
push
mov
mov
push
adc
mov
cmp
adc
xchg
test
sub
jl
ds
cmp
sub
outsb
xor
mov
and
movsb
dec
sub
dec
mov
pop
cmp
aad
ret
daa
dec
dec
cmp
push
xchg
push
test
cmp
jno
dec
mov
loope
push
mov
cmpl
and
pop
xorl
pop
lret
ds
cmp
jne
jno
popf
setae
repz
rclb
inc
pop
cmpsl
pop
stc
ficompl
aad
mov
jp
lds
lock
push
sub
push
xchg
repnz
rolb
jbe
roll
int3
out
ja
es
out
pop
mov
loopne
push
pop
repz
push
add
push
stc
add
das
cmc
inc
push
fs
stc
jmp
inc
loopne
jecxz
js
movsb
mov
push
mov
jmp
ss
sarl
xchg
sub
jne
lods
sahf
adc
sti
in
in
xlat
or
adc
inc
adc
jbe
je
lahf
test
les
push
pusha
dec
mov
pop
inc
add
xor
fsubs
dec
sbb
rolb
mov
fisubrl
sbb
cmp
xchg
ljmp
pop
dec
call
adc
out
daa
adc
scas
lcall
dec
adc
ljmp
nop
ds
push
pop
aaa
gs
cmp
cli
ljmp
mov
adc
shl
out
jp
fdivs
add
loope
fidivrs
mov
lret
xchg
cli
push
repnz
push
adc
inc
addr16
enter
dec
fmulp
add
mov
inc
sbb
out
dec
lock
pop
sub
or
mov
test
push
jmp
subl
mov
in
jp
aam
outsl
mov
cmp
and
jmp
les
stos
adc
das
inc
int3
fucomp
out
mov
notb
mov
imul
out
sbb
fbstp
std
adc
dec
ret
pop
inc
mov
mov
cs
mov
pop
mov
mull
inc
push
sbb
cmp
sbb
push
pop
insb
cmp
or
jp
mov
cmp
and
inc
es
insb
popa
jge
in
pop
outsl
scas
pop
enter
scas
movsl
pop
inc
xlat
xchg
stos
sbb
pop
dec
repz
test
fmull
push
mov
imul
imul
push
dec
cmp
jg
sbbl
imul
rcrl
lds
rcrb
mov
arpl
xchg
and
mov
push
push
sahf
cld
xchg
mov
hlt
shlb
xor
sub
mov
inc
push
out
fldl
cmp
adc
in
insl
lcall
lcall
adc
jbe
movntps
or
imull
push
scas
jae
dec
scas
push
notl
dec
insb
test
ret
xor
stc
cs
cli
sub
popa
shrb
pop
imul
cmp
mov
sbb
adc
lods
xor
mov
and
push
cltd
jecxz
adc
ds
mov
aas
ret
inc
roll
or
int3
or
add
sbb
sub
hlt
repnz
insb
sbb
pop
ss
inc
fisttps
cmpsl
push
imul
mov
mov
call
icebp
ss
sbb
mov
push
pop
jmp
test
xor
lret
push
loope
sub
xor
lock
jb
call
data16
and
cmp
dec
leave
adc
mov
js
adc
nop
push
push
stos
adc
lahf
out
cmp
adc
xor
sub
shll
addr16
inc
sub
mov
lock
test
sahf
insb
inc
jl
or
lea
inc
fcmove
sub
push
or
lock
pop
incl
movsl
mov
or
push
pop
pop
jno
repnz
pop
ret
pop
or
mov
scas
xchg
cltd
mov
and
adc
ja
add
pop
jno
aam
pop
jmp
jnp
pop
push
es
xor
jo
mov
lea
lods
xor
ret
push
xchg
inc
scas
xor
stos
cs
xchg
cld
sarb
jle
pop
call
push
cmp
bswap
out
mov
lods
out
bound
adc
in
or
test
or
loop
je
addr16
inc
push
push
imulb
insl
dec
std
loop
sbb
mov
stos
mov
jbe
jp
das
stos
imul
std
pusha
stos
out
or
xor
sti
xor
cmp
jmp
dec
cmc
mov
inc
adc
mov
push
popa
sti
mov
out
push
out
pop
adc
adc
dec
imul
dec
pop
imul
pushf
xchg
dec
or
cmpsb
cmpl
xor
in
mov
scas
in
fmulp
inc
inc
idivl
adc
lahf
cmp
xlat
cmpsl
jmp
inc
or
addb
mov
dec
cmp
mov
jp
jne
shrl
inc
push
outsl
orl
movups
in
fnstenv
mov
jle
jb
or
arpl
negl
sub
imul
push
xchg
dec
sub
ljmp
out
mov
pop
xchg
xchg
test
dec
mov
jmp
xor
pop
outsl
stos
dec
inc
jg
rcrb
aad
ret
ds
jl
cmp
out
aaa
mov
hlt
push
mov
test
and
ds
push
push
std
and
add
out
mov
mov
rorl
andb
jmp
pop
call
bound
outsb
mov
mov
sti
mov
xor
dec
lret
push
clc
sbb
jmp
cmp
dec
dec
push
bound
xor
pop
xlat
inc
sub
sti
insb
ret
sti
mov
pop
imul
jp
cmp
inc
mov
jle
nop
in
pusha
test
sub
adc
push
incb
fidivrl
aad
clc
mov
push
push
clc
mov
mov
mov
mov
ljmp
pop
fnstsw
shll
lcall
xor
xor
inc
insb
shr
testb
into
into
push
push
in
hlt
test
dec
ds
pop
pop
mov
push
cmp
pop
jle
sarl
ficoml
or
loop
push
xchg
sbb
jbe
aad
and
testb
ret
test
dec
stc
jns
and
pop
mov
mov
inc
repz
mov
mov
mov
jno
push
jmp
inc
ret
stc
cmp
aas
xor
pop
and
cmpsb
pop
pop
imul
hlt
inc
push
inc
inc
mov
shlb
jecxz
xor
ja
cmp
lea
push
dec
dec
inc
inc
mov
ljmp
cmpsl
push
fisttpl
out
sahf
cwtl
aas
dec
aas
adc
mov
fwait
push
mov
enter
jae
pusha
sahf
add
enter
loop
shll
inc
mov
mov
addr16
add
sbb
xchg
das
loop
cmp
pushf
leave
push
les
rorb
aas
lahf
inc
sub
pop
jp
rcr
add
push
fwait
sub
mov
xchg
jo
fwait
in
inc
push
js
inc
dec
test
xchg
idivb
fisubs
mov
jmp
cwtl
sbb
pop
repnz
xor
jg
xor
js
mov
cltd
jecxz
rorb
jns
repnz
inc
add
lods
test
pop
incl
shll
add
dec
addb
aaa
mov
xchg
jns
mov
call
inc
je
ds
xchg
xchg
imul
mov
daa
mov
shr
pushw
movsb
jp
je
mov
hlt
dec
push
divb
aam
repnz
adc
cmp
mov
adc
movsb
sub
sbb
idivb
idiv
dec
shlb
cli
adc
lahf
xchg
arpl
ret
sti
out
imul
fidivrl
nop
lcall
jbe
leave
mov
idivl
nop
lret
dec
in
xorb
repz
mov
scas
mov
push
sbb
int
cmpsl
fistl
mov
push
cmpsb
xor
xchg
iret
loop
inc
mov
mov
sbb
out
mov
dec
into
push
sbb
lds
cli
xor
push
or
pop
sbb
jle
adc
repz
es
cli
xchg
jae
xchg
ja
add
jle
add
adc
mov
fidivrs
fisttpll
jmpw
mov
and
lods
fiaddl
nop
mov
lahf
sub
push
shr
mov
inc
in
into
aas
insb
xor
sub
inc
xchg
adc
out
pop
rcrl
and
push
addr16
ja
mov
jp
sti
lods
jecxz
iret
mov
ficoml
int
addl
pop
inc
pop
jbe
or
push
jp
sarb
lcall
xor
dec
xor
call
popf
ffreep
cmp
xor
lods
rorb
xchg
mov
stos
fstp
jne
or
lahf
in
pop
fistpll
mov
and
and
mov
pusha
psllq
jle
sub
cs
negl
out
dec
iret
psrlq
in
leave
dec
rorl
jp
mov
out
dec
into
jae
repz
pop
mov
int
xor
into
push
push
stos
clc
adc
stc
icebp
add
rcr
gs
mov
jecxz
pop
insl
lcall
test
mov
add
movsb
push
or
int3
ss
xor
insl
pop
or
pop
inc
mov
mov
xchg
mov
imul
mov
lock
pop
in
and
ret
adc
mov
fidivrl
cmp
fistpl
and
jae
mov
shr
fbld
mov
sub
jo
sub
and
xorl
pop
das
cltd
mov
std
mov
popa
cmp
fimull
pusha
cmpsl
sub
or
adc
mov
cltd
dec
cmp
jg
outsb
inc
lcall
adc
adc
adc
mov
stos
xorb
out
and
cli
je
sar
hlt
cmc
sub
ss
fcmovbe
mov
das
push
pop
fsubrl
fst
lret
sub
mov
dec
sub
inc
mov
xchg
jo
mov
int3
push
add
imul
aas
in
out
xor
nop
add
cli
inc
mov
mov
insw
dec
xchg
push
das
es
loopne
in
addl
inc
arpl
fdivl
push
adc
push
push
outsl
push
fadds
mov
cmpsl
test
dec
mov
enter
lea
pop
dec
imul
aad
cmp
xlat
mov
imul
loope
pop
mov
test
add
push
and
dec
das
icebp
repz
stc
xchg
mov
push
rorl
test
seto
mov
hlt
add
or
orb
or
pop
sbb
pop
icebp
inc
sahf
or
and
inc
loope
xchg
push
daa
dec
scas
mov
loopne
fwait
lock
lods
push
lods
outsl
cmpsb
ja
sbb
imul
fbstp
rcrl
inc
jnp
repz
pop
ret
mov
push
push
incl
and
insl
ret
divl
sbb
in
lcall
jo
mov
mov
ror
les
shl
jg
sahf
xor
scas
subl
enter
adc
xor
pop
mov
enter
rolb
sub
sbb
or
ss
ret
mov
xchg
sub
outsl
lret
add
sub
pop
lret
das
test
les
ret
clc
hlt
sar
std
lcall
test
xor
mov
inc
sti
insb
cmp
pop
adc
stos
inc
repnz
xchg
jp
insl
push
aam
dec
rorl
and
nop
or
nop
ds
or
shlb
xor
mov
push
neg
mov
lods
iret
or
and
pusha
xchg
aad
enter
cmpsb
ss
lcall
int
cmpsl
ret
xchg
mov
xorps
mov
in
dec
lcall
arpl
imul
js
ljmp
jne
aam
pop
adc
mov
mov
arpl
cmpsb
inc
stos
sub
subps
stc
dec
jnp
add
sarl
orb
xchg
adc
jo
loopne
scas
or
aas
adc
outsb
nop
push
pop
push
sahf
pusha
out
pop
scas
jge
fs
xlat
roll
iret
movsw
pop
inc
dec
ds
js
jecxz
push
insl
and
or
popl
ss
jnp
mov
add
scas
push
xchg
sub
in
test
lret
iret
pop
fisubl
mov
mov
mov
ss
sub
dec
mov
mov
mov
ret
add
sub
sub
jne
fs
dec
pop
cmc
ljmp
fisttps
int3
and
pop
addr16
mov
sahf
jg
inc
testl
imul
pop
mov
sbb
in
xlat
in
rcll
add
enter
jo
loop
add
test
pop
outsb
iret
xor
xor
lock
popa
scas
ds
xchg
movsl
std
xchg
lret
and
add
dec
enter
mov
pop
or
push
icebp
andnps
jnp
insb
pusha
fidivl
daa
or
idivl
out
ds
lea
mov
mov
cwtl
lret
cmp
repz
and
dec
addr16
rcrl
sub
adc
aam
gs
xor
jge
cmp
dec
xchg
es
mov
arpl
sahf
das
mov
ja
daa
test
roll
adc
shl
in
inc
sbb
push
inc
adcl
pushf
or
or
comiss
pop
cli
lock
and
out
aam
mov
aas
sub
test
fs
dec
dec
ljmp
push
push
mov
gs
sub
adc
mov
cmp
aaa
xchg
jno
sub
sub
and
xor
inc
dec
and
scas
gs
ljmp
mov
sbb
dec
loop
les
clc
add
divl
pop
mov
push
xchg
daa
add
push
insl
or
vpsubusw
ffreep
inc
or
sbb
ljmp
push
sub
push
mov
push
call
ljmp
cmp
dec
jp
or
jae
push
loop
outsb
lock
adc
incl
rcrl
xor
and
cld
jns
mov
mov
in
sbb
data16
cwtl
ficoms
int3
rolb
imul
pop
jmp
testl
mov
fstps
out
jae
mov
push
xchg
jnp
jbe
stos
mov
lds
adc
add
inc
mov
rorl
je
cld
add
rcrl
cmc
imul
mov
mov
cmp
mov
lea
fcoml
pop
dec
rolb
das
stos
hlt
xor
sbb
hlt
movsl
jns
sti
xchg
inc
cmp
js
mov
aaa
icebp
ret
in
shl
mov
push
cmp
scas
pop
adc
inc
push
cwtl
sbb
out
mov
sub
dec
popf
jg
fcmovnb
cld
pop
mov
pop
ds
pop
ja
mov
mov
cmp
iret
dec
cmpsb
inc
push
in
mov
jne
adc
mov
xchg
orl
daa
lods
sbb
imul
mov
push
push
mov
push
and
pusha
cmp
fistl
cmp
loop
in
arpl
adc
push
sub
mov
mov
int
imul
rcl
push
fwait
cli
ret
aaa
lods
xor
cmp
mov
fisubrl
pusha
and
rorl
fucompp
push
movsl
mov
les
mul
cwtl
scas
rolb
pop
xchg
pop
shrl
sub
xor
hlt
rorb
fidivrs
mov
sub
movsb
pop
test
lret
push
cwtl
popf
imul
push
dec
fwait
cli
leave
out
sub
dec
cs
jg
xor
test
add
mov
mov
inc
lods
adc
mov
cmc
aas
mov
and
and
in
mov
or
xchg
hlt
dec
inc
push
push
insb
lods
inc
and
fcmovbe
push
jle
jb
jge
ret
data16
jns
and
push
adc
inc
pusha
cmp
or
adc
xchg
fadds
xor
es
pushf
icebp
mov
pop
imul
xor
ss
test
das
ljmp
repz
mov
es
jne
xchg
mov
inc
cwtl
push
shr
adc
loop
sbb
movsb
dec
mov
jbe
adc
or
pop
lds
lea
pushf
in
rcrl
push
imul
dec
enter
cli
mov
jmp
pop
sub
daa
push
fmuls
mov
clc
dec
mov
gs
fwait
in
xor
orl
push
imul
pop
loope
dec
loop
pop
iret
pop
sub
fsubl
stc
inc
cmp
mov
test
jnp
jle
int
adc
fnstenv
sub
movsb
int3
inc
dec
mov
push
pop
add
xchg
out
jae
test
mov
or
sbb
in
scas
test
stc
in
ds
negb
cmp
mov
lods
out
fldl
das
lds
lret
mov
pop
or
sbb
dec
xor
inc
data16
dec
repz
repz
sbb
outsl
push
pop
add
xchg
dec
mov
ds
stos
adc
lahf
add
mov
inc
fnstcw
xor
jl
insl
push
loope
mov
rorl
ja
sub
addr16
outsb
in
bound
xor
push
ret
popa
push
and
mov
rorl
inc
cmpsb
iret
call
cmpsl
xchg
js
sbb
fistpll
lock
pop
movsl
sub
fdivl
jecxz
lcall
lahf
pop
stos
ss
fidivs
jp
adc
push
pop
xor
aaa
in
lcall
push
aas
push
adc
xchg
stos
and
xchg
inc
jg
mov
rorb
lds
test
lahf
xchg
mov
mov
push
cmp
inc
xchg
mov
inc
jnp
inc
enter
fmull
fimuls
in
outsb
fldcw
je
in
cmp
je
jne
aam
sbb
incb
rcll
add
jg
stos
mov
cmpsb
fs
sarl
inc
addr16
dec
into
cs
std
inc
in
push
adc
addr16
out
xchg
shlb
lds
pop
push
push
addr16
movsb
mov
jo
sbb
mov
mov
pop
out
sbb
jle
add
dec
pop
mull
inc
cmp
ss
iret
or
shlb
sub
shr
ds
orl
repnz
in
pushf
repz
in
mov
int
stos
cmp
pop
out
out
push
lret
mov
adc
je
xchg
out
push
cmp
or
xor
ret
add
pop
jbe
mov
inc
rcrb
or
cmp
ret
mov
pop
mov
jg
loopne
inc
jns
out
push
mov
testl
add
sbb
add
icebp
aad
rorb
sbb
aas
mov
dec
and
stc
cmp
mov
sbb
adc
push
test
mov
add
mov
ljmp
mov
ss
lret
fldt
pop
repz
testb
jbe
lret
in
leave
nop
sbb
mov
mov
sbb
cmp
pop
jbe
xlat
bnd
mov
insl
rcr
jmp
xlat
mov
pop
test
inc
sti
jb
pop
repz
push
mov
call
lods
sbb
pop
jne
push
and
std
or
add
mov
leave
leave
into
pop
ljmp
movl
xor
repz
lock
arpl
inc
vpsadbw
and
das
fidivs
cmp
lds
in
sub
xor
push
insb
jmp
mov
dec
pop
aaa
pop
imul
ja
cli
enter
imul
mov
out
in
inc
pop
repnz
sub
and
icebp
outsl
decl
pop
fildl
lret
inc
insl
call
mov
mov
or
push
jne
jp
mov
pop
mov
cli
inc
outsl
outsl
inc
jmp
scas
daa
jle
cs
sub
inc
in
lahf
adc
mov
stos
ret
dec
xchg
out
arpl
out
inc
jns
out
dec
cli
int
out
jbe
fisubrs
dec
imul
adc
cmc
rorl
xchg
lcall
fcmovbe
ljmp
inc
loope
xor
imul
pop
shll
xor
inc
jo
sbbl
and
jae
cmp
mov
mov
nop
push
shll
out
xchg
in
stos
jo
jecxz
and
pushf
sub
inc
mov
xchg
xor
push
movsl
nop
loop
jae
push
lret
aas
icebp
in
pushl
aaa
jecxz
mov
and
mov
mov
loop
pop
mov
jecxz
adc
push
test
pop
addl
jae
and
outsl
stos
dec
fcmovnu
cltd
bound
jae
out
push
inc
mov
aas
add
jb
loop
cmc
inc
addr16
ljmp
aam
stc
inc
hlt
pop
imul
movsl
cmp
pop
xchg
mov
dec
lcall
shrl
cmp
adc
icebp
mov
loopne
lods
or
mov
sub
mov
outsb
mov
je
lcall
add
push
pushl
pop
cmp
jns
jmp
popa
dec
ss
bound
push
cmp
mov
aaa
scas
rolb
test
adcb
xchg
hlt
sub
adc
movaps
jns
mov
xchg
cwtl
xchg
mov
iret
jne
xchg
outsb
nop
fwait
mov
inc
loope
sbb
sub
xor
xchg
adc
mov
icebp
sbb
and
lea
cmc
ficoms
sahf
cmp
test
aam
inc
cmp
fcom
and
fidivrl
and
bound
outsb
xchg
test
aaa
cmp
push
in
mov
out
inc
shrb
test
push
pop
pop
scas
jno
mov
outsb
pop
push
and
mov
daa
sahf
daa
cmpsl
lcall
sub
dec
decb
push
fsubp
mov
lcall
dec
jo
shll
pop
mov
shll
xchg
mov
cmp
pop
or
sbb
xor
sbb
call
rol
xor
pop
popf
add
push
cli
std
sbb
fidivl
adc
sub
jle
daa
out
imul
xchg
leave
fdiv
stc
inc
cmp
shlb
in
ss
pusha
mov
ret
dec
scas
jbe
in
add
xchg
mov
xor
cld
jecxz
ficomps
es
insb
scas
lods
dec
scas
sar
in
jnp
in
or
mov
and
push
inc
jnp
rorl
imul
mov
xchg
imul
mov
jns
push
jbe
decl
xchg
push
pop
inc
jb
ss
push
fidivrs
call
mov
adcb
mov
jmp
sub
sub
mov
pop
fdivrp
cmpsb
push
test
aam
pop
xchg
xor
jbe
mov
xchg
fs
jno
neg
jae
addb
out
imul
stc
fisubs
adc
imul
les
in
mov
mov
or
sub
adc
rcrl
inc
jp
adc
dec
push
cmp
fisttps
or
int
push
push
inc
push
mov
push
fdivl
sar
repnz
mov
insb
les
xchg
outsb
jns
xchg
adc
cmp
int3
call
aam
mov
inc
mov
imul
pop
stc
lcall
mov
jbe
xor
xchg
lea
loopne
shr
lret
sbbl
mov
fstps
cmp
and
out
jle
push
sub
lcall
shll
xorl
rcl
push
enter
cwtl
xor
leave
jb
hlt
dec
inc
xchg
cli
aam
int3
test
std
hlt
xchg
int3
inc
xchg
pop
inc
pop
lcall
mov
sub
sbb
jg
mov
push
fnsetpm(287
pop
mov
mov
fmulp
icebp
push
sbb
jecxz
lds
or
cmpsl
dec
inc
in
push
sbb
dec
xor
xor
repz
pusha
out
jno
mov
stc
fs
add
adc
inc
jl
add
mov
or
push
sbb
inc
and
dec
scas
pusha
add
fists
test
ror
mov
out
insb
aad
mov
inc
outsl
lds
stos
pop
or
gs
fidivl
jle
and
dec
jg
adc
outsb
adc
jns
mov
push
dec
lret
imul
ja
mov
sbb
rcrl
mov
daa
outsl
pop
push
inc
popf
pop
jno
icebp
setp
sti
stos
insl
enter
lcall
aaa
jns
pop
lcall
pop
cmp
jns
ret
data16
leave
xor
ja
repnz
popf
dec
mov
xchg
add
in
movsl
lahf
outsl
enter
aaa
mov
pop
adc
mov
lods
decb
cs
mov
lods
xor
mov
add
int3
mov
mov
mov
pusha
pusha
aad
jnp
xchg
data16
test
aad
xchg
not
sti
incl
leave
mov
ja
mov
inc
xchg
sbb
inc
mov
in
clc
xor
ror
les
imul
or
out
orl
mov
ret
cmp
outsl
dec
dec
pop
push
iret
pusha
mov
dec
push
pop
jb
pop
jno
stos
movsl
lcall
dec
mov
or
adc
mov
mov
ja
shlb
es
std
mov
cmp
cli
scas
daa
push
mov
lods
lea
ret
lahf
test
and
into
cltd
popf
jg
push
arpl
in
lret
mov
push
mov
ljmp
jp
loopne
add
inc
lock
sub
jmp
jns
sti
scas
leave
inc
jne
cmpsb
cmp
xlat
rorl
rcrb
stc
out
das
aaa
adc
stc
add
ret
pushf
hlt
and
dec
scas
in
ret
lcall
xchg
aad
repz
ret
sti
sub
pop
jb,pt
pop
divl
or
loopne
dec
gs
push
outsb
adc
iret
cmp
push
iret
pop
movl
jb
aaa
cmp
sub
aas
fisttpl
xchg
test
mov
mov
stos
cwtl
add
xchg
jle
dec
xchg
mov
lock
jns
ffree
hlt
push
mov
lret
jbe
push
sbb
test
outsl
aam
scas
push
or
xchg
adc
fidivs
dec
pmullw
dec
cltd
in
sub
lret
cmpsb
xor
xor
pop
addr16
je
lahf
jge
push
dec
xor
fidivl
dec
loope
push
xchg
insb
hlt
mov
imulb
in
or
addr16
add
out
arpl
mov
imul
jbe
jmp
mov
lret
bound
faddl
mov
mov
lds
mov
adc
mov
push
dec
pop
lock
lcall
out
nop
int3
into
movsb
or
stc
pop
or
imul
push
cmpsl
data16
cmpsl
sar
cmpsb
bound
dec
fnsave
inc
dec
cwtl
insb
enter
test
sbb
popa
out
lcall
sub
mov
std
xorb
inc
lea
push
inc
pop
faddl
fsubrl
jmp
rorl
push
add
call
dec
jecxz
push
hlt
fmul
mov
jb
jnp
ret
ds
jecxz
in
repnz
repnz
sti
mov
xor
mov
popf
lock
imul
mov
fisubs
pop
dec
add
jne
decb
mov
repnz
ret
hlt
mov
lahf
daa
mov
pop
inc
das
cmpsl
push
mov
mov
inc
repz
je
in
sahf
outsb
pop
pop
aad
rcll
or
loope
fwait
push
aaa
mov
popa
sub
sub
push
xorl
into
adc
or
scas
jl
push
lods
xor
mov
and
xchg
call
jnp
jge
pop
fstps
mov
sub
mov
jnp
aad
das
dec
dec
xrelease
sbb
jno
fidivs
push
out
repnz
popa
mulw
outsl
and
jl
popa
outsl
jno
movsl
setge
ret
mov
lock
das
aam
sbbb
add
xchg
pop
scas
in
mov
leave
aas
inc
imul
ss
and
fwait
and
mov
data16
cmp
dec
xor
push
mov
dec
inc
and
adc
mov
inc
ds
mov
outsl
cmp
push
cwtl
test
adc
into
decl
pop
xor
xchg
bound
iret
out
popf
pop
xchg
xchg
stos
leave
add
jb
fsts
orb
outsl
cmp
jbe
movsl
rcr
xchg
cmc
out
iret
pop
lods
ljmp
fstps
scas
mov
out
jbe
dec
add
and
sbb
outsl
sub
mov
loope
or
fdivrl
fsubrp
and
imulb
push
cwtl
xorb
inc
mov
stos
push
lahf
xchg
xchg
mov
loopne
dec
xor
pop
shll
sti
xchg
add
or
xor
cs
lds
ret
xchg
out
popa
pop
xlat
int
and
push
pop
or
pop
pop
mov
push
mov
lods
dec
shrb
and
push
fpatan
sahf
ret
outsb
sub
faddl
jle
sbb
lds
xchg
mov
and
ss
and
sbb
outsb
idivb
into
dec
shr
mov
dec
cmp
fwait
mov
sahf
cmp
fdivrs
push
ret
dec
mov
pop
in
push
imul
mov
shll
pusha
hlt
add
pop
sub
aaa
leave
push
pop
xor
push
fs
xchg
test
sub
pop
mov
adcb
sbb
xor
les
addr16
orb
xor
jmp
push
out
push
iret
sbb
xchg
pop
sahf
sbb
sbb
mov
ja
int
push
mov
mov
lods
mov
adc
popf
cmpsl
js
insb
pop
adc
push
dec
add
xchg
imul
mov
fbstp
pop
xor
adc
insb
sti
mov
fstps
push
mov
mov
test
cmpsl
nop
movsb
cs
mov
adc
inc
inc
hlt
jno
xchg
cltd
dec
aam
pop
js
test
mov
and
mov
lret
xchg
movsb
sub
ljmp
imul
pop
jbe
call
dec
aad
lret
aad
sub
pop
cmp
pop
lock
in
in
rcl
or
nop
aad
bound
sbb
xchg
lcall
out
and
in
sti
pop
jnp
inc
cmp
xor
das
vpaddsb
add
lahf
cmpl
mov
adc
xor
add
aas
mov
push
mov
xor
xor
mov
dec
ret
push
cmc
sbb
repz
outsb
test
dec
call
cld
jecxz
cli
pop
mov
jle
mov
iret
movsl
push
add
icebp
push
in
sbb
dec
xchg
popf
addr16
jbe
inc
and
sub
icebp
mov
test
jo
in
cmp
sbb
mov
inc
aas
mov
fwait
sar
icebp
xchg
in
xchg
xchg
adc
iret
add
inc
divb
testl
fsubs
push
call
ret
pop
int
insb
xchg
daa
scas
les
rorb
in
decb
sbb
push
es
inc
clc
pop
mov
jns
orl
stos
lock
add
jns
inc
cwtl
or
or
sub
outsb
cld
stc
icebp
imul
pop
cltd
jbe
testb
jae
les
bound
fstpl
inc
add
push
and
fwait
das
dec
pusha
pop
push
inc
je
sbb
jmp
adc
pop
mov
insb
je
loope
out
jae
mov
and
daa
pop
or
push
and
in
push
rcrb
popf
or
aam
jge
xor
lds
xor
outsb
jg
scas
inc
in
sub
add
pop
sub
pop
les
jp
or
sar
in
lds
inc
cmp
push
rcr
iret
test
in
xchg
rorl
pop
mov
js
ds
repz
cmpsl
sub
mov
push
js
sub
jge,pt
lret
cld
mov
cmpsl
cmp
stc
into
cmpsl
xor
lock
dec
and
lea
icebp
hlt
lret
xchg
mov
pop
or
inc
push
insb
mov
xor
aaa
xchg
imul
pop
push
popa
lods
jg
adc
mov
roll
mov
mov
fiadds
cltd
pop
push
push
or
mov
push
jns
fcompl
mov
xchg
sti
cmp
push
or
fs
cmc
lcall
pop
out
xor
sahf
pop
mov
xor
push
pop
ret
loopne
pop
lret
xor
xchg
movsl
sub
arpl
insb
mov
jge
mov
push
fdivl
mov
push
xor
jnp
std
repz
add
outsl
mov
or
lahf
rcrb
bnd
push
ret
cld
cld
rorb
mov
dec
dec
in
adc
dec
mov
inc
pop
jnp
movsl
fyl2xp1
inc
insb
xor
add
cwtl
pcmpgtb
xchg
jge
mov
push
repnz
call
jns
lcall
sbb
pop
pop
add
movsl
aam
ja
fldl
push
gs
cmp
shl
mov
push
jae
inc
pop
or
pop
fwait
jbe
xchg
js
loop
bound
stc
lcall
and
gs
mov
fidivrs
lcall
and
sbb
scas
pop
pop
test
and
mov
adc
test
and
sbb
push
jecxz
roll
sahf
popl
xlat
inc
aad
movsl
cmp
insl
jmp
test
rolb
xor
xor
mov
mov
mov
rorl
jo
inc
mov
scas
bound
ret
insb
inc
jecxz
pop
jecxz
pop
aaa
loop
dec
shrb
int3
mov
hlt
cmp
or
mov
faddl
test
imul
sbbl
inc
push
je
orl
andl
sbbl
js
sub
stos
ljmp
jg
add
shr
mov
into
lods
add
sub
sarl
cmp
inc
lcall
in
cmp
mov
daa
sub
pusha
out
mov
lahf
and
cwtl
insl
aaa
int
cmc
enter
cmpsb
std
enter
mov
xor
aaa
test
mov
nop
push
xchg
outsb
mov
push
mov
sub
jb
mov
pushl
mov
cli
aaa
cltd
bnd
cmpsl
daa
push
fisubrs
lds
or
out
out
iret
lods
insl
int
fsubrs
rcl
cmp
push
add
and
iret
push
inc
mov
dec
xchg
int3
xor
inc
pop
mov
dec
sti
xlat
enter
rcr
xlat
roll
mov
ffreep
dec
and
inc
das
out
cmp
mov
and
pop
add
mov
cmp
jbe
mov
sub
ret
sahf
ss
push
mov
les
jp
jbe
call
movb
adc
lret
negb
jbe
inc
sbb
lods
jmp
push
sbb
mov
mov
pop
mov
adc
and
int3
sarl
xor
sub
icebp
adc
data16
push
add
rorb
imul
mov
insl
outsb
rcl
insl
in
stc
sub
pop
dec
push
out
popa
xor
fldenv
sbb
imul
mov
das
push
movsl
cmp
xchg
out
sbb
leave
sbb
jno
lahf
rcrl
mov
xchg
addr16
mov
stc
or
or
cmpsl
ljmp
rcll
into
addl
stos
dec
fldenv
mov
aaa
ljmp
negb
pand
xor
jae
sbb
sub
xorl
xor
out
jmp
je
and
mov
push
das
les
fsubl
stos
push
xchg
aas
and
loope
hlt
pop
loope
push
test
clc
outsb
sub
mov
cmp
sub
cmp
repnz
mov
clc
repnz
pop
cltd
jmp
mov
test
nop
add
mov
mov
inc
add
pusha
enter
in
std
add
cs
ja
adc
xchg
xor
and
pop
ds
dec
hlt
mov
jae
xlat
push
mov
loopne
fs
xor
stc
mov
enter
pop
std
mov
adc
sti
mov
imul
xor
xchg
xor
addb
pop
xchg
and
inc
icebp
sub
push
arpl
testb
xchg
sub
icebp
fdivrs
cmp
pop
outsl
pop
test
dec
lods
add
dec
gs
mov
aas
xchg
repz
std
lret
adc
movsl
or
movl
xor
shl
stos
jp
call
inc
adc
dec
dec
mov
mov
push
lods
sbbl
gs
pushl
or
sub
shlb
ja
push
das
mov
and
or
push
out
out
leave
add
leave
sahf
adc
mov
cvtps2pd
pushl
and
sub
push
jns
push
jbe
inc
and
stos
adc
dec
lcall
or
scas
pop
pop
cwtl
jnp
mov
push
das
out
enter
lret
fists
push
into
das
aaa
cmp
stos
pusha
std
pop
or
sbb
jnp
mov
sti
mov
je
push
jl
pop
pusha
sbb
adc
movsl
inc
hlt
and
gs
inc
loope
cli
push
mov
mov
int
test
xchg
mov
pop
daa
adc
ficomps
mov
lds
push
xlat
sub
pop
mov
shll
shlb
inc
push
xchg
sbb
push
pop
xchg
sarl
movsl
sbbb
ret
dec
ljmp
inc
daa
mov
jae
sarb
add
imul
mov
or
pop
dec
out
inc
je
cmpb
lock
leave
scas
cmp
lock
or
into
xor
idiv
mov
cmp
loop
mov
and
push
das
cmpsb
mov
notb
out
mov
xchg
jne
jo
ret
stos
or
mov
mov
lds
xchg
push
lret
fbstp
in
and
loop
push
pop
loopne
das
push
sub
sbb
push
xchg
xchg
ja
sub
push
jmp
mov
cmp
arpl
mov
arpl
cs
sub
cmp
addb
mov
and
aam
mov
cmp
xchg
test
mov
js
inc
fldcw
or
and
mov
out
add
iret
mov
cmpsl
push
push
jp
test
jb
jae
pop
dec
mov
and
mov
push
dec
mov
jg
out
or
mov
addr16
jmp
lahf
jle
add
scas
mov
push
ficoml
shr
rcrl
scas
nop
or
aad
jp
push
int
and
movsl
scas
push
dec
sarb
mov
icebp
out
adc
loopne
jbe
sub
scas
adc
push
xor
push
mov
and
push
mov
adc
es
mov
out
dec
xchg
outsb
ds
call
inc
cmp
add
lret
adc
mov
outsl
in
sub
push
fcom
cwtl
xor
leave
jl
frstor
cmc
mov
fisubs
and
add
movb
xchg
shll
sbb
int3
jl
in
jo
hlt
hlt
arpl
popf
lods
lock
cli
add
subl
sub
adc
jnp
lahf
mov
daa
jmp
lods
xchg
jmp
popa
leave
mov
mov
pop
fldcw
push
mov
cltd
xor
shrb
push
fcomip
filds
imul
mov
in
mov
cmp
test
clc
repnz
xchg
mov
jecxz
rcll
or
mov
rcrl
mov
add
cmc
and
in
das
jle
fisubrs
scas
outsl
xlat
jp
daa
ljmp
hlt
imul
and
and
les
leave
iret
imul
aaa
movsl
jmp
sbb
push
int
inc
pop
mov
inc
mov
test
leave
cmp
repz
imul
pusha
inc
inc
mov
or
out
ljmp
push
cli
xchg
sahf
cltd
jp
decl
push
add
rorl
cmpsb
xchg
aas
pop
xor
das
inc
or
stc
cltd
rorl
jae
adc
mov
int3
xor
cmpsl
es
incb
mov
popa
or
inc
or
xchg
jae
jge
pop
cmp
jne
nop
pop
sub
clc
or
cmpb
sub
jbe
shrb
jnp
stos
sub
fisttpll
stc
and
enter
jp
xor
stos
call
mov
jns
nop
mov
aaa
aaa
test
or
aaa
mov
adc
gs
pusha
add
cmpsb
inc
ss
sarb
inc
pop
pop
and
pop
jb
shll
test
sbb
add
xor
das
repz
mov
cmp
fdivr
rcrl
lods
pop
dec
pushf
std
sub
adcl
push
mov
or
add
xlat
loopne
loop
dec
addr16
cmp
mov
fcomi
push
dec
mov
daa
inc
aam
add
sbb
faddl
mov
push
add
outsl
cmp
insb
ss
mov
xlat
push
out
add
cmpsb
mov
xor
jnp
pop
in
daa
incl
jecxz
jnp
outsl
push
jbe
xchg
mov
mov
test
xor
test
and
mov
dec
pop
cltd
fdivs
cli
jb
stc
xchg
adc
das
jmp
mov
movsb
add
lds
sub
fdiv
mov
jecxz
mov
ret
cmpsl
cltd
rolb
in
cmp
hlt
push
repnz
lock
and
dec
daa
repnz
and
dec
fists
xor
and
ja
mov
mov
cld
sub
sub
dec
lret
insb
pop
inc
int
leave
and
js
xchg
or
adc
add
imul
int3
mov
adc
ds
lds
ficoms
xor
xchg
adc
fsubl
inc
inc
imul
cmp
mov
inc
sbb
xor
lods
shr
mov
adc
xchg
xor
xchg
in
push
add
sub
lcall
pop
jmp
jns
cwtl
mov
pop
pop
fidivl
push
aam
add
push
test
fiadds
jno
adc
test
and
and
mov
jle
push
mov
shrl
mov
dec
dec
mov
out
addb
aaa
fwait
lock
movsb
dec
loope
lcall
movsl
insb
or
pushw
pop
cli
inc
std
sbb
das
ret
out
mov
int
loopne
ljmp
aaa
push
xchg
out
movsl
out
cmp
or
push
inc
pop
mov
inc
cmp
inc
clc
nop
stos
and
cmp
fisttps
sbb
inc
stos
and
rcl
jl
mov
inc
int
xor
push
sub
xor
fisttpl
out
iret
mov
jne
xchg
and
jae
dec
hlt
cbtw
fimuls
stos
fwait
cmp
fwait
mov
jmp
repnz
pop
and
pop
jmp
mov
jb
xchg
into
xchg
xchg
sbb
inc
xor
mov
jno
pusha
stos
jae
push
in
pop
mov
xlat
jge
stos
pop
iret
sub
pop
adc
cmp
stos
cmp
pop
les
arpl
xor
or
int
pop
dec
aaa
inc
cli
mov
mov
dec
mov
sarb
mov
sbb
push
pop
fs
pop
popf
mov
adc
push
jecxz
xchg
push
jp
popa
stos
stos
mov
push
pop
out
sbb
bnd
inc
xchg
mov
xchg
nop
xchg
push
aaa
or
mulb
rcl
xchg
push
fadd
lahf
sub
stos
fisttps
sub
out
sbbl
adc
jb
pop
ja
mov
mov
sbb
pop
gs
lds
movsb
sbb
xchg
cs
dec
jmp
xor
inc
pop
mov
jge
push
in
jmp
jg
mov
rcl
adc
shrb
js
add
add
jnp
outsb
in
data16
add
xchg
daa
xchg
orl
out
jo
xor
fmuls
or
or
fimuls
test
sub
mov
popf
lods
jecxz
sbb
inc
or
cmp
add
add
fs
cmpsb
push
aad
sahf
test
adc
push
jge
lahf
orl
sbb
mov
xchg
das
imul
push
ds
dec
inc
xchg
mov
pop
xchg
jne
aas
aas
fdivl
sub
or
cs
xchg
mov
xor
sub
xchg
pop
insl
cli
and
movsb
push
pop
cmp
jbe
cmp
imul
aam
stc
push
loope
movsbl
lret
mov
jg
cmp
cmpsw
xchg
ds
rcl
sarl
or
cmovb
mov
outsl
jmp
push
pop
pop
mov
pop
sbb
stos
cmp
mov
adc
mov
mov
xor
aas
lcall
pop
arpl
lock
repz
repz
ljmp
movsl
or
clc
jb
negl
or
repnz
push
pusha
sub
or
adc
mov
cltd
sbb
into
xchg
ljmp
mov
mov
divl
sbb
iret
leave
xor
repz
movsl
test
sbb
int
in
push
mov
mov
xchg
popf
shrl
push
xor
jns
movsl
push
sbb
adc
mov
xchg
outsb
loope
outsb
and
test
xor
mov
or
lods
aaa
sub
adcb
mov
mov
lcall
test
push
popf
mov
add
and
inc
mov
ja
pop
test
mov
scas
jae
aaa
clc
and
jmp
add
and
mov
je
out
xor
loop
inc
push
int
xor
jmp
sbb
add
cmp
or
mov
div
imul
cmp
jecxz
inc
aaa
insb
sub
sbb
lods
mov
rol
je
cmpsb
push
rcr
nop
cmp
sub
jle
add
shr
es
stc
lahf
les
fidivrs
fldl
cs
sbb
inc
mov
test
cs
dec
addb
into
test
ljmp
call
xlat
ss
pop
aad
xchg
nop
daa
jmp
xchg
jl
add
jo
xlat
jge
imul
movsb
stos
xchg
fstps
lcall
aaa
ret
inc
pop
mov
repnz
repnz
rorl
dec
testl
pop
mov
mov
mov
mov
adc
lods
sti
fadd
incb
addr16
dec
mov
movsl
xchg
sahf
test
mov
sub
repnz
clc
or
xor
scas
inc
in
aam
mov
pop
sbb
jecxz
xor
mov
mov
xlat
cltd
mov
lods
push
movl
jmp
pop
jno
jb
push
cltd
cmp
xchg
lret
scas
roll
daa
out
cmp
push
in
pop
das
mov
jno
inc
inc
movsl
mov
push
loope
test
enter
mov
iret
dec
fwait
xor
mov
orl
inc
jecxz
in
mov
pop
lret
sbb
shlb
es
lret
loope
js
mov
push
push
ret
jno
cmpl
mov
jg
sbb
push
cmp
pop
dec
clc
in
push
clc
cmp
cmc
jne
repnz
and
icebp
cmp
cmp
fsubl
rol
and
clc
ret
pop
mov
cmp
lods
aam
es
sbbb
insl
mov
int3
adc
xchg
dec
xlat
add
adc
ja
cmpsl
pop
aas
lock
aaa
btr
test
mov
inc
cmp
pop
mov
mov
repz
daa
outsl
push
push
jne
clc
jbe
out
jp
mov
iret
cs
mov
or
fmul
popa
jl
and
mov
jmp
sub
lcall
jnp
js
cli
pop
dec
js
cmc
lds
xchg
js
push
inc
mov
iret
push
cmpsl
sbb
test
decb
jb
pop
push
mov
xchg
jl
addb
repnz
flds
insl
or
cmpsl
push
enter
pop
shlb
xchg
or
mov
lock
test
es
sbbb
leave
mov
xor
add
cmp
movsl
scas
mov
jmp
lahf
popa
movsb
dec
call
psubq
lret
dec
shlb
imul
jecxz
test
jmp
in
test
add
in
out
sbb
push
mov
cmp
dec
arpl
jmp
movsl
adc
jge
out
push
stos
and
outsb
insl
mov
insl
sub
ljmp
jno
mov
sahf
mov
movsb
dec
into
and
sarl
cs
icebp
dec
xor
sub
sbb
xor
mov
xchg
pop
push
mov
out
notb
xchg
sbb
movsb
negl
cmp
xor
iret
sub
sub
push
loop
insb
jb
sub
fwait
fs
fbld
aam
sti
test
add
outsb
cld
movsl
ja
sarl
dec
lock
sub
push
lret
stos
fsubrs
imull
stc
mov
dec
jb
pop
jmp
mov
mov
jmp
or
lods
mov
mov
xlat
insl
cmp
dec
or
add
xor
mov
mov
push
and
push
ljmp
sub
push
pop
jnp
addr16
or
icebp
adc
dec
cwtl
pushf
pop
push
xchg
das
or
shll
add
adc
xchg
fimull
lret
leave
fidivrs
add
push
enter
add
out
xor
xor
nop
mov
ljmp
lods
addr16
movsb
fwait
jl
jge
cmp
leave
insb
push
icebp
xor
inc
jl
push
mov
cmc
mov
sub
cmp
sbb
mov
mov
xchg
inc
je
insl
sub
ror
and
mov
std
mov
stos
rolb
divl
call
mov
or
jae
sbbl
cmp
inc
test
lods
fs
mov
cmpsl
mov
inc
and
test
inc
call
push
fisubs
stos
jmp
mov
push
sub
push
out
pop
sbb
push
ss
iret
cmpsl
jne
inc
push
test
divl
pop
mov
leave
imul
lahf
addr16
or
imul
xchg
mov
out
out
pop
imul
aaa
sarb
rorb
cmp
pop
imul
out
pop
mov
or
js
into
pop
sahf
icebp
or
pop
and
fisubl
icebp
mov
das
or
push
repnz
pop
cmp
add
fdivrl
inc
rclb
in
stos
or
xlat
loop
test
movsl
rolb
or
mov
add
daa
outsb
cmc
push
lret
ja
jbe,pt
ret
lret
push
xchg
movsb
pop
xchg
mov
dec
mov
int3
test
ss
pop
lock
inc
cmc
jge
aam
enter
aad
adc
cmp
fiadds
add
push
insb
mov
dec
jmp
xor
shll
cmc
out
cmp
mov
inc
cmpsb
out
jmp
pop
scas
fldz
push
mov
jnp
out
roll
std
xchg
je
pop
adc
loope
mov
in
xchg
jno
mov
inc
sbb
cwtl
int3
cs
cltd
sbb
out
mov
xchg
call
stc
cmp
pop
mov
call
popf
sub
push
cmpsb
sbb
jle
rcrl
shlb
sbb
sub
in
inc
stos
push
push
and
xor
push
insl
rorl
jns
insb
loopne
push
xchg
lret
sahf
jbe
not
popf
and
pop
lock
push
mov
push
and
push
call
fstpl
stos
dec
clc
fwait
xchg
mov
fsubrs
and
mov
jp
inc
pusha
push
inc
out
ss
or
push
test
sub
xchg
outsb
imul
mov
adc
adc
sub
push
stos
stc
data16
add
or
lock
mov
dec
inc
pop
jge
lcall
and
or
mov
lcall
inc
pop
movsl
mov
mov
and
mov
mov
sub
pop
dec
xchg
sub
mov
and
mov
rcll
and
mov
mov
lcall
outsl
stos
roll
std
mov
cmp
test
cmp
push
and
cmc
xchg
sbbb
stos
xlat
cmp
loopne
loop
sbb
repz
in
das
shr
in
roll
mov
or
pop
outsb
mov
aam
icebp
rorb
mov
cmp
xor
movsl
sbb
cld
lcall
xlat
or
mov
in
pop
jbe
outsb
fmull
jmp
mov
mov
sub
imulb
sub
mov
sbb
sbbb
arpl
andb
adcb
in
int
inc
add
jno
out
dec
xor
shlb
xor
and
or
dec
aam
jg
pop
sub
mov
jg
pusha
push
int3
inc
stos
add
xchg
int3
mov
mov
cmpsb
mov
lea
cmc
ljmp
dec
out
cmp
lods
or
mov
loope
lcall
pop
mov
cmp
inc
xchg
add
imul
and
mov
adc
or
xchg
fstps
repnz
cli
jno
movsb
lcall
fisubs
pusha
lock
add
lcall
repnz
pop
mov
xchg
mov
cwtl
lret
mov
cwtl
pop
cmp
pop
mov
loopne
jle
daa
imulb
jno
sarl
aas
mov
cmc
mov
jbe
popa
sub
mov
cmp
sbb
jmp
test
rorb
data16
pop
xor
shrb
inc
mov
mov
cli
cmp
cmp
dec
add
pop
cli
sub
and
idivb
pop
pop
loopne
imul
or
rolb
dec
xchg
rorb
jle
pop
xchg
push
push
out
insb
shrb
in
jmp
jmp
out
mov
inc
xchg
ds
cli
scas
sahf
rcrl
loope
in
push
loope
insl
jp
rcrb
add
mov
fimuls
dec
jo
mov
lock
outsl
mov
jb
outsl
test
pop
mov
jp
popa
std
outsb
xor
jb
xchg
aaa
popf
icebp
xor
cmp
push
sarb
loopne
mov
push
das
adc
mov
pushf
stos
sbb
xchg
inc
mov
stos
test
adc
inc
add
movsl
push
pop
cwtl
js
jno
out
fucomip
push
rcrb
out
out
rorb
xor
push
shl
sahf
mov
aaa
divb
cmpsb
loop
pop
es
inc
push
jno
jmp
cmp
xor
push
mov
loopne
jns
dec
and
cmpsl
cltd
dec
dec
fdivs
nop
dec
inc
shlb
sub
pop
aaa
xchg
not
push
movsl
loope
xor
xlat
or
in
push
sahf
or
outsl
mov
pop
mov
ljmp
xchg
pop
cmp
xchg
aad
enter
pop
lret
popf
stos
cltd
push
pop
test
xchg
add
sub
add
loopne
aaa
test
lahf
cmp
out
pop
das
mov
xchg
paddusb
in
les
xor
pop
ror
scas
push
sar
lods
lods
push
je
push
mov
popa
add
shlb
mov
jp
daa
out
cmc
inc
shll
jns
push
bound
lods
dec
push
js
repz
in
or
cli
cmp
addl
fisttpll
rcrb
stos
xor
push
loope
xor
in
mov
push
shll
aaa
mov
cmp
inc
xor
jnp
pop
dec
ror
mov
outsl
cmp
icebp
hlt
sbb
clc
push
add
popf
shll
sub
cmpsl
out
loope
daa
sbb
int
cld
or
jmp
out
into
mov
imul
fucomip
pop
jmp
test
dec
cltd
mov
cs
sti
mov
fimull
rclb
loope
and
mov
mov
inc
lods
xchg
mov
ret
pop
dec
cmc
push
push
vpackssdw
mov
test
stos
add
inc
outsb
das
cmp
add
cmp
dec
mov
sbb
dec
sbb
aas
pop
fildll
xor
insb
pop
push
jns
mov
test
addb
sub
pop
lea
test
imul
std
mov
cli
int
jge
stc
inc
adc
out
mov
out
inc
xor
push
cmpsl
loopne
cmp
or
push
jp
shl
inc
mov
pop
js
cmpsl
xchg
pop
inc
jnp
repz
movsb
sub
fbld
lods
ret
lret
push
pop
mov
arpl
jmp
or
lcall
lds
dec
dec
xchg
fisttpll
fldt
ss
data16
aad
add
data16
sub
adc
ja
testb
push
xchg
fs
cwtl
into
dec
fimull
int
mov
jle
fidivrl
test
dec
cmpl
cmc
out
imul
shl
jnp
push
imul
lock
leave
mov
scas
cltd
notl
outsl
out
movsl
and
bnd
neg
mov
mov
xchg
test
jo
cmp
cmpsl
pusha
xchg
test
dec
xor
dec
into
xor
fsubrl
sub
addr16
jmp
mov
push
jae
out
fs
inc
dec
push
mov
scas
and
mov
out
jmp
call
jne
ss
das
imul
add
mov
jmp
lea
out
mov
or
and
jecxz
pop
mov
mov
xor
and
mov
sbb
cs
xchg
jo
rcl
sub
in
and
mov
sbb
enter
add
cmp
int3
ds
mov
sbb
add
sub
aad
mov
inc
push
inc
and
or
cli
sub
lods
mov
daa
repnz
jns
jns
pushf
addr16
loop
addr16
std
lcall
mov
sub
mov
fcomps
jmp
stc
std
aas
pop
mov
push
dec
mov
mov
icebp
loop
mov
test
push
add
outsb
packsswb
mov
sbb
xchg
je
xor
shrb
sbbb
xor
pop
ss
pop
xor
das
xor
dec
jns
aaa
loope
daa
cmpsb
mov
aaa
cmpsb
leave
dec
ja
mov
dec
loope
bound
push
xor
in
add
jne
xchg
xchg
cmpsb
sub
sbb
in
loop
jge
bound
push
inc
add
dec
dec
mov
mov
pop
mov
push
jp
das
popl
inc
mov
out
and
jnp
fwait
xchg
dec
sarb
inc
test
jne
inc
test
jns
push
jge
sbb
xchg
test
pop
outsb
xchg
leave
dec
push
das
dec
mov
mov
stos
scas
ret
shlb
ret
dec
jae
cmp
outsb
or
mov
int3
cs
rolb
loop
dec
dec
dec
testb
xor
cs
xchg
adc
mov
daa
in
repnz
dec
std
icebp
sbb
pop
mov
xchg
std
repnz
inc
cmp
xchg
outsb
mov
dec
sbb
mov
push
imull
cltd
push
jmp
cltd
xchg
sub
xlat
into
xchg
aas
jb
dec
add
ret
mov
jne
notl
dec
shll
dec
jmp
sub
scas
lds
sbb
pand
mov
loopne
push
cmc
bound
jb
ret
mov
movl
mov
mov
test
das
cmp
lods
adc
push
ss
inc
sbb
int
test
xchg
pop
mov
imul
add
push
and
sbb
push
or
jae
sub
loopne
inc
popl
aad
inc
jge
pop
mov
int3
dec
call
cmc
cmp
inc
mov
movsb
arpl
bound
xchg
mov
in
add
in
test
in
test
in
test
in
test
in
test
fsubs
mov
sbb
leave
xchg
cmp
fsts
cmp
fsts
cmp
cmp
cmp
fadds
cmp
fadds
cmp
fsubs
cmp
fdivrs
icebp
cmp
sub
movsl
lods
aam
sub
mov
adc
pusha
out
dec
xor
cmpsb
data16
xchg
shrl
pop
mov
popa
cmp
cmp
clc
out
push
imul
ret
dec
dec
lock
jb
shlb
addr16
lahf
mov
inc
ror
out
out
outsl
fsubs
test
pop
mov
jle
out
or
notl
imul
fisttps
out
fwait
dec
ljmp
mov
fmuls
pop
ds
div
sbb
add
jge
mov
pop
imull
ret
cmp
loope
fbstp
aas
push
dec
icebp
mov
push
mov
daa
lock
xor
mov
or
aaa
pop
and
mov
and
out
aas
push
call
ficoms
mov
loopne
int
sub
imul
push
push
mov
aad
and
pop
lcall
outsl
ss
aam
stos
xchg
sbb
aam
fwait
std
imull
sub
mov
sub
loop
ljmp
insl
mov
dec
inc
mov
dec
sub
daa
dec
pop
mov
pop
mov
cmp
test
mov
imul
and
mov
and
xor
pop
icebp
test
dec
loopne
imul
fisttps
xchg
push
add
outsb
jl
or
hlt
icebp
mov
xchg
popa
filds
dec
or
mov
sete
and
cmpsb
cmp
rcll
jge
xor
xlat
ljmp
rcrl
jne
adc
test
jb
add
arpl
les
sti
jmp
or
xchg
fldt
jo
inc
or
out
jle
push
dec
jo
mov
dec
xchg
in
pop
jo
jnp
push
jns
inc
daa
pop
lods
pusha
lods
data16
or
jns
cmpsl
int3
jmp
jle
lea
scas
push
in
lods
jp
clc
mov
dec
and
pop
xchg
mov
xor
xchg
xchg
xchg
js
push
gs
push
dec
popf
sub
or
inc
mov
ret
jg
outsl
mov
mov
test
mov
insb
inc
ret
test
cmp
mov
dec
je
xchg
idivb
mov
sbb
add
movl
pop
cltd
out
bswap
pop
xchg
ss
cmp
xchg
test
jae
sub
sahf
outsb
push
lods
push
xlat
push
fdivrs
fs
adc
fisubrs
lods
outsb
mov
out
hlt
jo
pop
xor
cmp
push
and
pusha
movsb
nop
mov
mov
sub
mov
ret
jae
mov
out
pop
dec
adc
sbb
push
xor
mov
repz
push
inc
nop
orl
mov
out
pusha
outsl
jle
push
fldl
scas
repnz
gs
push
into
and
push
gs
out
push
sub
es
or
insb
dec
or
xchg
dec
adc
lahf
jae
xor
jg
pop
dec
out
insl
notl
mov
inc
test
inc
or
dec
push
mov
lods
cmp
fsubrs
loope
push
vmovapd
sti
and
dec
aad
or
in
fs
test
jecxz
jp
daa
pop
jbe
push
cmp
sar
inc
pop
sti
mov
cmpsb
cld
dec
inc
pop
jae
sub
repz
jg
sahf
cmp
mov
push
mov
and
das
xor
mov
jb
mov
popl
std
jle
out
add
mov
iret
shlb
or
sub
mov
rcrl
adc
dec
mov
mov
jecxz
out
mov
into
jle
aas
xor
mov
push
imul
fsubrs
inc
pop
sbb
pop
push
imul
mov
out
sbb
dec
mov
mov
dec
pushf
inc
push
mov
jmp
lcall
cltd
incb
adc
push
outsl
push
push
or
pop
add
arpl
xchg
cmp
adc
icebp
push
xchg
dec
mov
mov
mov
sbb
jp
ss
stos
popf
ja
cs
insb
pop
adc
or
mov
pop
sahf
nop
mov
stos
das
jns
mov
inc
lret
push
cmpsb
sub
mov
push
movsl
or
cmpsb
jo
stc
jp
add
insb
in
sub
ljmp
xchg
mov
cmpsb
mov
aaa
xchg
divl
rcrb
jmp
rorb
rcrb
lods
xchg
pushl
jbe
in
les
jne
push
leave
push
cmp
pop
push
insb
xor
stos
mov
psubusb
cli
cmc
lds
das
adc
inc
xchg
dec
xor
test
sub
mov
push
jne
dec
jg
mov
cld
mov
mov
data16
mov
inc
popa
test
adcb
push
ret
and
outsl
xchg
nop
or
xchg
pop
aas
imul
mov
lret
cwtl
inc
or
dec
and
mov
lods
subb
cmp
dec
cmc
repz
insl
out
push
add
xor
ret
cld
popa
test
lds
clc
pop
ja
stos
jp
and
pop
mov
mov
lock
mov
mov
cmp
jno
testb
divb
adc
xor
js
dec
sub
inc
lods
iret
push
jmp
cmc
mov
fimull
iret
rolw
ret
xor
jmp
mov
cmp
push
xchg
mov
mov
and
inc
mov
movsb
aad
push
jbe
movsl
pop
cmc
imul
mov
gs
cmpsl
iret
inc
inc
cmpsl
lahf
mov
cs
nop
sub
popf
mov
fldcw
roll
outsb
mov
pop
xchg
cmp
fmuls
push
xor
add
in
xor
cld
lcall
sbb
cmp
jle
pop
pop
push
imul
notb
lock
or
int
sti
stos
cmp
insb
xorb
sub
mov
stos
cmp
mov
imul
fcmovnu
mov
test
mov
sbb
add
xchg
mov
mov
mov
pop
ret
mov
xchg
das
inc
add
xlat
sub
cmc
push
sub
jecxz
in
jb
outsl
pop
loope
fs
pop
sbb
xchg
xchg
fcoms
add
in
adc
pop
jo
adc
ljmp
rol
ljmp
enter
lahf
inc
fwait
and
int3
add
xchg
in
jl
das
lret
dec
xchg
push
push
mov
cmp
hlt
popa
rol
pop
dec
aaa
add
push
out
std
test
movsb
mov
int
pop
out
jmp
jnp
popf
mov
or
push
pop
rcrb
sub
cmp
stc
and
jmp
cmp
mov
cmp
push
insb
jns
fwait
xchg
addr16
je
jp
inc
outsl
pushf
xor
push
adc
into
es
mov
push
data16
pop
jle
pop
daa
sub
and
cmp
cmpsl
push
inc
dec
lea
iret
cwtl
and
adc
mov
andl
sbb
sbb
rcl
xor
mov
mov
push
adc
sub
xchg
cli
aad
push
mov
mov
jb
mov
push
mov
xchg
mov
push
rcll
jge
or
sbb
sub
loopne
fistpll
jbe
add
push
inc
and
xlat
and
scas
int
loopne
cmp
daa
sahf
loope
movsl
outsb
sti
arpl
ret
popa
adc
sub
dec
insl
sti
xor
and
js
mov
mov
in
jb
out
lahf
add
jmp
inc
xor
or
mov
lahf
adcb
mov
std
scas
enter
and
cmpsb
out
ljmp
out
inc
mov
call
cmc
sbb
push
cltd
jge
sbb
xchg
jnp
insl
fists
push
hlt
xor
xchg
mov
mov
xchg
sub
mov
sti
mov
imul
data16
mov
iret
adc
fldcw
sbb
popf
push
stos
test
lock
clc
loop
jb
cmp
mov
pop
cld
out
pop
dec
mov
out
jo
mov
mov
or
sahf
cwtl
addb
sti
xchg
inc
test
hlt
mov
leave
mov
bound
sarl
inc
push
pusha
aaa
adc
dec
ret
scas
call
aaa
ss
fsubrl
sub
repz
shrl
repnz
arpl
cmp
mov
mov
adc
jp
add
movsb
movsb
lods
imul
mov
rol
stos
ror
sbb
inc
test
lods
mov
pop
loopne
mov
pop
mov
mov
fcoms
inc
in
jmp
test
and
mov
push
cmp
and
sub
mov
fdivl
shlb
xchg
and
inc
loope
mov
push
enter
xor
sbb
sti
lds
popf
inc
jbe
mov
or
repz
add
mov
push
cltd
retw
dec
pop
cmc
mov
ss
out
push
pop
xor
pop
xchg
sarl
repnz
aas
ret
mov
divl
or
jl
dec
repnz
inc
repnz
cmp
inc
loope
dec
fidivrl
fwait
sarb
mov
pop
cmp
inc
cs
lcall
imul
into
imul
xor
xor
das
cld
idivl
sti
sub
add
inc
xlat
jecxz
mov
pop
rcr
lret
sub
in
ljmp
inc
pop
mov
inc
aad
add
sbb
mov
jns
push
push
clc
adc
ss
test
inc
and
cmc
sbb
jb
jo
imul
mulb
cmp
xchg
xchg
cmp
fistl
sbb
pop
stos
andl
insl
mov
ja
int
push
jecxz
cmp
adc
cwtl
and
cmp
lods
out
sahf
aad
cwtl
or
add
push
rcr
adc
sub
cmp
push
jno
pop
and
incl
iret
fdecstp
fildll
pop
repnz
pop
and
mov
lcallw
ss
pop
mov
inc
mov
aaa
xor
out
gs
and
ficoms
jb
jecxz
pushw
mov
and
jle
sub
cmc
xchg
inc
sub
arpl
dec
gs
add
dec
mov
test
fisubs
cmc
and
out
aam
cmc
pop
and
inc
fld
loop
mov
aad
inc
and
push
dec
aam
sbb
pop
pop
xor
lods
xchg
bnd
lock
into
iret
sub
test
or
jecxz
fstps
pop
pop
xchg
les
dec
pop
lods
dec
cltd
sub
shll
enter
and
lods
sub
xor
dec
inc
jne
cmp
xor
rcrb
popl
xchg
das
or
push
notb
aaa
pop
js
cmp
outsl
aam
lea
xchg
push
rcrl
out
or
jns
in
aam
outsb
mov
inc
pop
mov
xchg
repz
jl
mov
in
out
jo
push
inc
ret
scas
std
adc
cli
jmp
jbe
push
imull
cmp
enter
inc
mov
iret
adc
jl
jae
xor
das
cmp
add
pop
add
mov
leave
ljmp
and
xchg
ss
fnstcw
les
mov
xor
and
divb
stos
jno
insl
fmull
pusha
push
sbb
daa
jne
jb
mov
addr16
fsubrp
xor
jg
pop
out
out
fcmovnb
mov
cmpsl
pop
gs
insl
stc
iret
and
inc
das
adc
mov
idiv
dec
mov
outsb
inc
push
movsl
push
add
inc
dec
dec
cmc
movsl
addb
cli
fsubrp
jns
xor
fcomi
cmp
es
xchg
or
adc
push
jns
inc
ret
mov
shlb
test
int
push
push
adc
cmp
arpl
sbb
ja
fs
rcrl
mov
repnz
outsl
test
xor
push
cmp
ffreep
or
xor
push
pop
les
jnp
pop
mov
mov
imulb
mov
dec
xchg
pushf
sub
push
and
and
jo
cmp
sub
adc
sbb
stc
and
test
rorb
repz
adc
dec
cmc
fstpl
into
or
shll
and
xlat
add
pop
cmp
mov
and
loop
pop
fimull
push
and
adc
decb
jo
sbb
iret
std
aam
loop
fdivl
pop
jbe
xor
jns
or
gs
xorb
mov
add
mov
lea
cmp
jo
lea
or
enter
cmp
dec
das
inc
and
inc
cmp
xor
xchg
imul
mov
aas
ffreep
and
mov
test
stos
fxch
gs
addr16
mov
push
cmpsb
scas
fucomi
in
push
jg
rcll
fdivl
pop
push
or
jmp
pusha
int3
shll
dec
xor
and
mov
lods
ret
pop
push
es
dec
mov
loope
pushf
xchg
fsincos
cli
and
ds
sub
pop
mull
fdivr
pop
aaa
add
fldt
or
or
xchg
loop
push
jbe
sti
add
cld
jns
scas
ret
pop
loope
mov
into
fstl
add
fcomp
nop
popf
and
xchg
std
xchg
add
loop
mov
fwait
imulb
pop
leave
pop
rcrl
clc
iret
mov
mov
add
out
jnp
repz
lea
clc
shlb
dec
adc
mov
outsb
insb
andl
inc
sub
lods
adc
mov
inc
sub
das
test
jns
iret
sbb
iret
push
push
xor
inc
ss
aaa
xchg
subb
fwait
rcl
ja
push
divl
lcall
fiaddl
jle
dec
cmpsb
pop
incl
cmc
icebp
aam
push
sub
mov
cmp
popa
mov
out
addr16
add
ss
repz
mov
mov
mov
push
push
std
or
leave
mov
incl
mov
xor
push
adc
fcomps
pop
movq
adc
outsb
dec
nop
repz
mov
ljmp
adc
in
stos
xor
in
and
push
push
scas
repnz
stc
or
sub
cwtl
loope
mov
leave
fsubrl
push
jmp
lea
jmp
movsb
lock
mov
or
mov
adc
mov
jmp
js
or
cli
push
adc
sub
mov
mov
xor
xlat
or
cli
inc
inc
jns
push
and
and
push
push
xor
imul
inc
adc
fsts
enter
fsubs
mov
mov
fsub
mov
jno
dec
cmpsb
ja
push
lret
xchg
scas
cmp
add
mov
mov
fwait
sub
or
test
jns
mov
lahf
lahf
jnp
inc
punpckhwd
pushf
inc
das
iret
dec
test
pusha
outsl
fisttpl
lret
test
xchg
mov
pop
mov
movsl
daa
nop
pop
adc
cli
sbb
into
push
inc
out
dec
dec
and
test
xor
cmp
loop
fdivrl
scas
cmp
sbb
dec
pop
ss
xlat
push
jo
pop
out
clc
out
pop
dec
mov
aad
ret
stos
aam
aas
jnp
outsl
int
inc
fsubrs
xor
xchg
aaa
pop
xchg
mov
mov
cmp
xchg
or
mov
inc
jg
mov
es
sub
out
in
mov
aas
test
xor
push
xchg
scas
pop
out
adc
test
mov
or
inc
icebp
repz
outsb
push
incb
dec
out
mov
xchg
popa
dec
push
cli
pop
int
mov
sub
or
sbb
stc
cld
xor
xchg
dec
push
pop
mov
sbbl
stc
scas
fistps
out
repz
mov
iretw
pop
in
or
sub
icebp
mov
mov
dec
int
inc
iret
mov
jp
adc
cmp
in
or
push
push
pop
fdivrs
sub
or
repz
jnp
out
fbld
lock
insb
int
mov
lahf
or
imulb
fldln2
pop
int
sbb
stc
and
cmp
dec
popa
or
bound
mov
jae
and
movsl
popf
test
xor
xor
pusha
jae
jno
addr16
inc
shrl
push
jmp
cmp
outsl
sahf
xlat
roll
and
aas
xlat
loope
out
push
xchg
sbb
xchg
sub
mov
lods
scas
sub
sarb
test
and
pop
push
or
ds
pop
jmp
sahf
sub
mov
repz
clc
push
jmp
out
into
inc
jp
lds
pop
xchg
mov
mov
loopne
enter
jp
jno
mov
jo
nop
lcall
shrl
repz
cmp
add
mov
cmp
data16
mov
js
pusha
rcl
add
cmpsb
movsb
adc
adc
repz
and
xchg
push
push
mov
test
lret
cmp
dec
cli
cmp
mov
inc
aaa
into
jae
pusha
daa
into
mov
dec
pop
add
jmp
mov
cmp
pop
or
and
lret
loop
popa
adc
fbstp
fildll
or
mov
mov
push
push
push
popa
or
in
outsl
mov
pop
mov
out
fwait
mov
xchg
fwait
arpl
cmp
xor
mov
fs
rol
std
mov
lcall
inc
cmp
sub
dec
jge
cmc
ret
mov
mull
push
cmc
add
add
dec
mov
or
cs
outsb
rcrb
das
sub
push
aaa
pusha
and
daa
popa
mov
or
jecxz
and
push
jle
pop
clc
out
ret
int3
mov
inc
sub
outsb
dec
mov
cli
lds
lock
inc
push
repz
pop
mov
add
jg
out
out
mov
arpl
adc
add
mov
jp
xchg
and
lret
pop
in
push
je
jnp
dec
add
jmp
mov
jne
ljmpw
fcoml
outsb
decl
cli
cmc
insl
mov
imul
dec
dec
aam
adc
mov
jp
push
push
cltd
test
sub
pop
iret
stos
cmp
add
xor
rcrb
ja
loop
xchg
in
mov
sub
sbb
or
stc
je
cmp
outsl
push
test
scas
ljmp
jns
push
fsub
xorl
test
jo
dec
cmpsb
sahf
lret
pop
in
out
xchg
out
ror
mov
adc
sbb
cmovs
inc
adc
adc
push
cwtl
or
in
jno
adc
dec
mov
mov
insl
mov
dec
int
mov
pop
dec
lret
mov
jns
or
cmc
mov
int3
adc
cli
scas
sarb
imul
push
test
or
inc
das
pop
xor
sahf
js
mov
push
rcrl
xor
or
rcl
jge
jbe
mov
mov
mov
mov
ret
jmp
cld
xor
cmp
clc
fisubs
divl
bound
add
add
shrb
mov
xchg
nop
sub
loopne
inc
dec
sub
stc
sarb
xchg
add
mov
mov
add
ljmp
mov
xchg
or
rorb
xchg
xor
imul
out
jae
rcrb
repnz
addr16
adc
adc
sub
sbb
xchg
ret
adc
test
mov
mov
call
test
fcoms
mov
mov
inc
push
cmovp
fstp
pop
dec
xorl
mov
into
aaa
xorb
xchg
cld
jecxz
jmp
fidivl
xor
fstpt
mov
aaa
enter
out
inc
inc
xor
test
jnp
popaw
ret
xchg
aam
sbbl
call
jge
scas
pop
push
push
and
sbb
and
aad
mov
mov
xor
xor
lods
adc
xor
xorb
out
mov
and
cmc
movsl
cmpsl
xchg
je
lods
jae
mov
xchg
lds
stc
je
rol
out
rolb
mov
push
jle
lds
inc
imul
lods
imul
jnp
xor
call
mov
adcl
xchg
mov
in
sub
out
stos
push
push
stos
xchg
inc
dec
sub
mov
jle
dec
cmp
xchg
push
mov
push
push
adc
aaa
clc
cli
out
clc
test
pop
dec
dec
popa
mov
aaa
xor
dec
xor
data16
or
mov
les
adc
pushf
inc
inc
es
fdivrs
movsb
repz
mov
jmp
cs
ret
pop
dec
xor
or
pop
movsl
jno
add
inc
dec
adc
std
xchg
pusha
in
pinsrw
xchg
add
clc
sahf
cmpsl
ljmp
mov
stos
test
int
or
outsl
imull
data16
xchg
jp
dec
xor
lret
cmpsb
arpl
stc
fsubrl
push
out
icebp
icebp
imul
dec
mov
mov
arpl
adc
mov
dec
cmp
cmc
add
mov
aam
pop
rclb
jge
iret
mov
lds
push
lcall
mov
je
sti
mov
out
xor
out
fcoms
xchg
in
adc
loop
test
out
lcall
insl
jle
jo
pop
sub
mov
iret
jo
arpl
ss
mov
add
sbb
call
inc
push
jne
les
scas
mov
and
je
cli
iret
ds
mov
inc
add
xchg
or
shll
shll
stos
adc
or
and
inc
clc
xor
stos
jae
imul
mov
test
mov
sub
cld
stos
ret
inc
xchg
test
sbb
sbb
dec
dec
mov
sbbb
jge
pop
shr
xor
xchg
out
sahf
mov
fucomip
dec
dec
pop
sub
xchg
in
xchg
ja
dec
pop
iret
stos
dec
in
fdiv
sbb
cmc
sub
inc
sub
fs
push
fidivrs
dec
loope
sub
add
cmp
or
xor
sub
add
sub
clc
mov
push
rorl
pop
flds
ss
shr
je
loope
je
lods
xchg
pop
mov
dec
push
pushf
xor
call
cld
cmp
out
call
imul
stos
int
inc
in
push
mov
das
inc
pop
jne
sbb
jmp
int
add
xchg
jle
sub
aad
jecxz
sahf
pop
into
test
add
cmp
jge
cmc
mov
test
scas
jne
idiv
pop
clc
xchg
push
addr16
mov
es
leave
mov
pop
cld
int
or
mov
adc
notb
insl
out
pop
call
mov
pop
jecxz
add
stos
dec
mov
lods
inc
outsl
fwait
sbb
push
mov
pop
jno
rolb
popa
inc
insl
xor
insl
lock
pop
xor
ja
mov
jae
scas
ss
fisubs
sahf
daa
mov
repnz
jo
cmp
cmp
mov
cmp
sbb
bound
adc
mov
fstpt
xor
mov
xchg
dec
adc
jecxz
jno
inc
test
pop
stc
cli
mov
pop
ja
inc
jmp
int3
mov
jp
mov
mov
mov
xchg
ss
addr16
push
or
and
aad
test
lods
xchg
or
les
in
mov
test
or
adcb
icebp
sbb
cmp
aam
xor
loope
add
int
sub
xchg
mov
arpl
xor
pop
loope
pop
xchg
jl
incb
sbb
cli
push
push
hlt
adc
inc
stos
mov
scas
ljmp
jl
out
stc
jb
sub
das
fisttps
add
add
cmp
sahf
aad
cmpsb
pop
leave
cmp
lods
inc
hlt
cmp
pop
push
dec
mov
xchg
pushf
out
out
sahf
jge
dec
jbe
pop
cmc
fstpt
mov
inc
sbb
mov
stos
and
and
mov
mov
inc
cltd
shrb
and
mov
xor
push
inc
dec
xor
popa
push
lret
pop
xchg
xchg
mov
ljmp
dec
cmc
adc
mov
mov
and
rcr
mov
dec
mov
push
or
and
mov
adc
adc
ds
inc
push
pop
insl
sbb
mov
jmp
jmp
push
cmp
and
cs
in
ret
out
pop
dec
sti
xor
fcmovnb
scas
icebp
idivl
cmp
push
and
stc
lcall
repz
pop
data16
cmp
movsl
nop
fisubs
and
out
pop
sub
jbe
mov
ret
cmpsl
dec
ljmp
icebp
xor
and
std
or
ljmp
inc
fcmovnu
mov
mov
jecxz
sbb
jmp
das
cmp
cmp
pusha
mov
cmp
pop
fsts
mov
jo
and
push
roll
andl
adc
xor
in
add
xchg
bnd
ror
inc
aaa
xchg
not
xchg
ja
mov
xor
or
adc
push
les
adc
push
push
push
xor
fsubr
push
lds
rcrl
std
add
into
aam
imul
jle
jmp
das
xchg
out
inc
test
ss
jae
dec
or
mov
insl
in
out
or
hlt
pop
and
xsha256
cmpsb
shlb
pop
and
adc
test
cli
insb
sbb
je
jb
jg
cwtl
mov
imul
inc
je
xor
sub
out
or
into
lods
ja
xchg
test
imul
adc
xor
in
js,pt
dec
mov
shrb
rcrl
sbb
mov
fisttpl
js
stc
add
jno
fmulp
mov
scas
ja
push
ljmp
inc
mov
insl
or
outsl
je
xchg
push
push
ds
and
fwait
jl
shrl
mov
loopne
xor
push
or
outsl
into
icebp
jle
out
inc
jmp
inc
dec
add
cmp
dec
repnz
outsl
mov
sub
adc
in
movsl
push
clc
sub
movsb
jnp
cwtl
push
stos
daa
push
lret
mov
pop
lcall
push
sub
sub
rcl
popa
sbb
sub
pusha
stos
xlat
int3
mov
shl
mov
faddl
xor
lahf
es
in
lods
and
dec
dec
out
ret
mov
sbb
sub
fstpl
inc
icebp
lahf
es
jge
icebp
imul
cmp
cwtl
xchg
popa
pushf
mov
stc
cwtl
pop
cld
dec
into
and
loopne
xlat
pop
mov
ljmp
into
jle
lcall
movsl
ljmp
adc
adc
repz
xchg
not
jmp
push
cmp
dec
sbb
push
sub
popa
and
je
dec
xchg
sti
cmp
cmp
push
jp
inc
mov
mov
in
cld
pop
repz
jns
lcall
mov
xor
xor
fimull
xor
pop
adc
xchg
lods
xor
jmp
les
sbb
adc
daa
mov
push
xor
pop
push
add
add
cmp
scas
xor
sbb
aad
mov
cmp
aas
iret
xlat
leave
fisubs
inc
es
push
mov
mov
dec
shrb
test
pop
jge
aas
inc
fs
scas
cmp
repz
xchg
int
xor
outsb
cmp
test
loop
fisttpl
insl
sub
sub
add
aam
fisubs
dec
aad
push
adc
jmp
pop
cltd
dec
sbb
mov
mov
fcmovnu
call
jo
inc
pop
ljmp
push
cmp
aas
push
inc
ds
out
fwait
and
or
roll
jmp
rcr
cmc
xor
stos
mov
cmpsb
sub
popa
cmp
jae
lds
mov
jo
sar
mov
or
dec
insb
xlat
int
add
push
in
leave
sbb
mov
cs
dec
cmp
adc
fbstp
pop
das
mov
movsb
call
into
data16
or
inc
inc
insb
pop
adc
adc
cmc
xor
mov
negl
les
pop
push
cs
push
xchg
dec
sbb
push
dec
cmc
mov
imull
cmpsl
dec
lods
int
iret
mov
sub
mov
lret
jbe
addr16
repz
xor
inc
jnp
sti
enter
outsl
mov
inc
mov
in
sub
lret
cltd
mov
jecxz
dec
cld
cmp
cltd
fsubrl
mov
or
pop
mov
test
loope
add
das
andb
hlt
inc
mov
mov
xchg
pop
orl
movsb
dec
das
xchg
sbb
enter
jge
lahf
xchg
scas
movsl
test
push
mov
mov
dec
in
movsl
iret
pop
psrld
in
aas
jno
cmp
xor
popf
sti
dec
aas
nop
cli
xchg
xor
lods
lods
cltd
data16
stos
jb
icebp
int3
push
imull
or
cltd
rorb
cmp
mov
aaa
ficoms
sbb
mov
ds
jl
mov
les
sub
hlt
negb
imul
and
push
pop
push
fsubl
repnz
mov
pusha
sub
adc
fwait
sbb
xchg
mov
cmp
and
cmp
call
cmp
xor
mov
insl
and
push
dec
or
outsl
mov
adcb
push
les
in
mov
jp
jno
clc
sarb
xchg
push
loope
out
int
shl
jge
ret
popf
add
lods
lret
and
js
sub
xlat
lcall
jle
ss
pop
daa
hlt
pop
cmp
stos
outsb
inc
jecxz
push
stos
pop
cs
pop
call
int
push
xor
jle
jmp
push
dec
fwait
sbb
into
jb
cmpsl
lcall
adc
ss
mov
std
inc
sti
int3
mov
je
push
dec
push
xor
dec
jl
adc
into
cmpsl
rorl
lea
hlt
sub
push
xchg
inc
stos
aam
aad
stos
pslld
fcomps
adc
mov
add
push
lcall
shl
das
sub
push
push
push
xchg
sbb
dec
push
pop
sub
sbb
dec
inc
out
clc
dec
fidivs
incl
scas
out
inc
rolb
fs
add
or
mull
lahf
std
sub
rep
mov
and
pop
xchg
push
js
mov
testb
aam
fwait
ljmp
or
mov
mov
pop
mov
and
cltd
imul
jmp
jnp
xchg
sti
lahf
or
stos
inc
lcall
push
xchg
negb
xor
adc
xor
xchg
jg
pop
adc
pop
shll
fldl2t
adcb
mov
in
xor
repnz
rolb
int
mov
dec
sahf
ja
cmp
mov
jle
movsl
or
fistpl
rcll
push
pop
push
add
mov
mov
outsb
js
nop
push
xchg
lret
jb
rorl
jg
icebp
or
aam
mov
jb
push
scas
out
push
lds
cli
cs
cltd
mul
je
mov
cltd
jp
mov
loope
cmpsb
or
add
jne
out
cmp
imul
mov
mov
cmp
repz
or
popf
aad
sbb
and
mov
xchg
icebp
xor
pop
lret
jae
push
das
cltd
mov
decb
pop
sarb
call
daa
pop
aaa
mov
dec
pop
gs
push
sbb
sbb
rclb
test
dec
cmpsl
in
jns
jge
pop
mov
mov
add
movb
xor
inc
fcompl
test
mov
fadds
jmp
push
sbb
push
aaa
cmpl
cmpsl
mov
inc
test
cmc
or
adcb
xchg
and
outsb
leave
clc
xchg
adc
outsb
lds
cmc
scas
and
data16
stos
scas
jmp
push
int3
bound
jbe
sub
push
cmp
and
xor
jecxz
pop
and
mov
int
mov
cs
shll
in
jne
stos
push
push
mov
mov
je
shrb
mull
bound
adcb
jno
sahf
sub
push
icebp
aas
int3
mov
pop
fwait
jo
jbe
ja
repz
cmp
out
or
sub
xor
das
push
jge
xor
arpl
cmpsl
mov
inc
mov
icebp
leave
addr16
test
sbbb
mov
fbstp
stc
loop
inc
cmp
clc
mov
ret
clc
loopne
jge
push
insl
xchg
fldt
mov
fst
daa
ss
popf
repz
stc
aam
cs
mov
mov
push
inc
es
jmp
xor
mov
ljmp
mov
push
insb
sbb
mov
mov
int
ss
mov
mov
dec
enter
bound
xor
cltd
cs
xchg
movsl
and
or
je
push
imul
shlb
inc
clc
xor
or
or
dec
aas
mov
jmp
pop
lods
jmp
xchg
inc
sub
rcl
mov
add
sub
push
jle
add
cmpb
jmp
addr16
inc
pop
xchg
js
not
pop
ja
add
std
mov
mov
imul
cmp
jle
inc
cmpsl
adc
shll
mov
pushl
pop
dec
sti
sahf
xor
or
jno
scas
loop
lock
sti
and
into
jae
imul
cmp
es
mov
cmpsl
outsb
jno
sahf
pop
outsb
jmp
push
inc
rclb
enter
cmp
shlb
mov
nop
test
pop
rcrb
push
xor
cwtl
adc
jns
mov
xor
cmp
cmp
sahf
lods
out
mov
mov
xor
fstps
jo
in
dec
xor
add
inc
stos
push
mov
fistpl
jae
inc
cmpsb
shlb
dec
test
adc
push
inc
add
jl
pop
sbb
jge
mov
lods
insb
inc
ds
and
mov
lcall
lock
stos
arpl
stos
ror
mov
addr16
cmpb
ss
xor
repnz
leave
xor
pop
loopne
jnp
sub
mov
aaa
and
jnp
pop
push
fistps
xor
or
add
xchg
mov
pop
popa
mov
adc
sbb
jmp
mov
icebp
imul
or
fwait
mov
je
and
out
mov
negl
scas
shr
adc
loopne
inc
xchg
cwtl
push
loopne
push
jmp
loopne
and
add
in
fisubl
test
push
mov
jmp
std
shr
sbbb
daa
add
sbb
pop
or
jecxz
xchg
jo,pt
push
push
sti
xchg
std
mov
xor
push
inc
in
push
jle
lret
or
push
jmp
add
jge
push
or
shll
dec
jns
inc
jmp
pop
icebp
sbb
cmc
rorb
sub
jp
js
pop
lret
loope
or
pop
cs
ds
test
add
mov
mov
idivl
pop
div
ljmp
mov
mov
mov
aas
push
adc
sub
mov
jg
mov
or
out
mov
repz
hlt
push
nop
pop
std
push
adc
shll
jmp
fcoms
and
mov
stos
mov
gs
jno
inc
jnp
inc
pop
and
or
add
xchg
mov
jg
mov
jp
aas
adc
push
cmp
sahf
sub
mov
cmp
jns
pop
xor
fdivs
mov
outsl
cs
mov
clc
dec
mov
js
gs
add
and
xchg
std
out
cs
mov
cmp
iret
mov
xor
xor
dec
shrl
cmp
scas
xchg
shll
pop
push
sbb
push
ljmp
jecxz
test
fs
sub
sub
jb
cmpsl
jae
shl
nop
dec
sti
insb
push
pop
mov
pop
ljmp
xchg
xor
mov
ja
rcrl
inc
imul
test
mov
sahf
inc
sbb
leave
xor
pop
ret
mov
test
ds
dec
cmp
jmp
aad
add
xchg
fs
mov
and
add
push
cwtl
pushf
iret
sbb
sub
int
imul
adcl
pop
jle
cld
cmp
stc
outsb
mov
stos
lret
pop
lret
mov
mov
hlt
aaa
and
out
test
adc
sub
notl
lods
in
cmp
daa
shlb
mov
jno
push
icebp
cmp
jae
lcall
xchg
xchg
sub
ret
lcall
dec
out
push
and
xlat
test
bound
stos
shll
jo
pop
mov
scas
xchg
fisubs
ret
xor
lcall
das
mov
sub
pop
leave
cld
inc
push
fwait
lods
xor
mov
lods
jo
or
imul
repz
inc
or
mov
xchg
stos
adc
pop
cmpsl
insl
jo
and
insb
nop
cmc
and
pop
mov
cmp
and
push
inc
and
and
iret
sub
add
dec
and
pusha
adc
jmp
mov
dec
pop
or
ror
or
adc
jbe
cmp
inc
dec
testl
jl
fcoms
imul
popa
pop
push
ja
mov
or
lahf
mov
leave
fimull
aaa
outsl
jne
jmp
das
fcoms
iret
cmp
pusha
dec
or
in
adc
mov
les
es
outsl
xchg
mov
mov
sub
push
shrl
icebp
mov
xor
or
pushf
xor
or
jae
push
mov
lcall
dec
rclb
xchg
inc
add
aam
lret
cwtl
fstl
mov
mov
adc
push
push
cld
aas
popl
push
sub
or
icebp
lcall
aas
clc
stos
fucomi
inc
mov
push
enter
jp
mov
lea
adc
outsb
adc
and
cmpsl
insb
mov
jecxz
xchg
in
sbb
out
xchg
mov
daa
push
mov
rorl
iret
sbb
inc
push
ja
std
and
add
cwtl
jg
in
sahf
and
mov
cmp
jg
mov
rcrb
adc
lahf
inc
or
mov
push
add
push
jb
adc
cwtl
int
data16
push
aad
sbb
fists
shrb
add
adc
cmp
es
aas
sahf
test
pop
arpl
ss
push
dec
jnp
jo
push
or
xchg
gs
push
sti
mov
movsb
and
cmp
cwtl
fiadds
or
push
dec
repnz
addr16
cmp
cltd
loop
fiaddl
mov
push
cmp
mov
jmp
sbb
mov
movsb
aad
repnz
lods
cmp
mov
fistps
enter
int
xchg
push
xor
pop
loopne
jno
cmp
movsb
scas
pop
test
dec
add
sbb
push
mov
jp
jmp
lcall
clc
daa
cmp
cwtl
shlb
ja
popa
je
cmp
mov
add
push
push
jno
in
test
push
xor
ja
cmp
gs
xlat
hlt
fincstp
dec
add
es
xchg
ljmp
fdivp
adc
stc
mov
xchg
cs
out
gs
xchg
mov
sub
aam
scas
and
mov
imul
and
cwtl
dec
cltd
out
test
iret
aas
scas
cltd
sahf
mov
lods
push
dec
in
cld
push
scas
jae
jmp
in
stos
sub
jbe
or
mov
jl
mov
lock
xor
push
repz
imul
or
shll
cs
xor
sarb
pop
adc
bound
icebp
xchg
mov
cwtl
and
and
mov
mov
mov
push
scas
icebp
mov
movsb
jmp
aas
sub
js
xor
popf
ljmp
xor
jmp
inc
shlb
aaa
in
lds
jbe
and
movsb
imulb
mov
in
dec
xchg
mov
sub
jle
ret
fdivp
aad
cmp
mov
dec
cmpsb
aam
inc
dec
mov
cmp
cmp
sub
xchg
pop
jbe
push
scas
jmp
or
lahf
xor
lea
cmp
mov
or
and
inc
inc
mov
stos
fdivrs
scas
or
inc
or
mov
stc
outsb
pop
repnz
jno
or
je
sub
sub
clc
mov
ss
add
lock
into
push
lcall
sbb
mov
movsb
pop
ds
in
mov
mov
in
fisubl
sub
add
pop
dec
nop
inc
in
pop
dec
pusha
notl
idiv
data16
push
xlat
add
loop
xor
or
mov
out
mov
cmp
inc
mov
cmp
roll
or
in
imul
mov
das
jns
neg
sub
lock
dec
mov
inc
push
push
and
jns
into
aam
hlt
mov
sbb
lock
int
push
das
fbstp
mov
imul
in
sub
insl
pop
push
cltd
cmp
push
cmp
dec
push
jge
sub
mov
rcll
cmpl
xor
cmp
jmp
out
js
mov
pop
loop
mov
lcall
xor
push
shl
lahf
cmp
in
sub
xchg
dec
out
mov
movsb
lods
decl
imul
jle
sbb
mov
jbe
cmc
or
mov
aaa
xchg
decb
cli
repnz
sti
addr16
push
rcr
ss
xchg
mov
or
xorb
push
daa
loop
aas
lods
int
sub
push
fldt
sbb
inc
cmp
or
test
dec
mov
es
fs
data16
cwtl
out
push
scas
mov
cmp
addl
test
inc
mov
in
jne
lret
pop
xchg
out
out
ljmp
cs
aaa
sbb
push
push
cmc
rcrl
subl
or
cld
mov
js
push
lds
inc
and
sbb
pop
jbe
pop
pop
jbe
mov
fwait
mov
aad
dec
cmp
das
jmp
cmovno
int
mov
call
les
bound
cmpsl
daa
scas
movsb
xchg
fptan
mov
nop
or
jo
and
mov
test
cmp
xor
push
mov
insb
sbb
xchg
movl
pop
jb
sub
xchg
leave
test
mov
insb
push
lock
cwtl
sub
repnz
pop
cmp
out
xchg
rcll
pop
in
inc
xor
into
cmp
jnp
movsb
aas
popa
daa
mov
push
dec
arpl
pushf
pop
lcall
rcl
pop
jecxz
push
add
into
xchg
sbb
xorl
inc
jp
and
test
fdivrs
test
jno
andl
imul
push
and
lret
cmp
xlat
das
xchg
mov
pop
push
mov
and
mov
dec
movsb
dec
cld
sub
es
cmc
std
add
ljmp
pushf
cmp
popf
pop
repnz
pop
xlat
mov
sti
pop
sub
mov
jnp
insb
out
sub
jb
or
sub
dec
pop
and
add
lods
loop
cli
enter
stos
out
pop
notl
xor
sub
int
cmp
push
insl
sahf
cmp
fwait
cld
int
jmp
out
ljmp
jae
sahf
mov
sti
jle
sbb
lret
out
lahf
inc
das
inc
xlat
jae
insl
lods
sub
loop
xchg
sub
xlat
mov
push
fcmovu
xchg
jmp
and
icebp
ret
nop
mov
inc
mov
test
jno
in
stos
inc
movsb
loopne
loope
movsl
test
mov
push
push
ljmp
ljmp
mov
mov
dec
pop
add
cmp
or
push
clc
outsl
push
int3
sub
popf
xor
inc
fisubrl
incl
out
inc
std
mov
xchg
call
gs
push
jae
mov
sbb
pushf
test
loopne
dec
xor
outsb
bound
repnz
rcll
xlat
inc
out
fucomi
stos
je
lahf
add
inc
xchg
push
seto
jno
or
adc
mov
or
outsb
lea
xor
aaa
mov
sub
lds
jno
dec
xor
and
subl
mov
inc
in
lods
dec
lds
cltd
dec
insl
shll
test
mov
loopne
push
xchg
call
inc
cltd
jo
test
scas
ret
xabort
and
cwtl
dec
rcrl
and
je
stos
jp
and
lret
mov
stos
and
bndstx
sub
sahf
jo
push
lock
jno
lahf
fxch
stos
fwait
sbb
cmc
jecxz
fiadds
sbb
xlat
pop
movsl
sub
cmpb
jae
icebp
pop
add
insl
aad
fdiv
and
jnp
mov
xor
lds
fsub
cmp
lea
jno
jecxz
pop
sar
adc
xor
aam
mov
adc
cs
jne
stc
data16
pop
sub
mov
enter
adc
jle
sti
adc
jns
movsl
incb
aas
aaa
cs
gs
mov
repnz
out
mov
xchg
mov
stos
inc
adc
inc
xor
int
jae
in
mov
push
shrl
sub
imul
add
push
jle
ror
lods
out
pop
push
mov
sub
mov
cli
ret
adc
jecxz
or
jmp
data16
push
jge
jns
xchg
or
repz
daa
xchg
jns
add
lods
out
subl
pop
adc
cmp
mov
cmp
repz
outsl
inc
dec
push
push
and
loopne
xor
test
pop
cltd
fdivr
cmp
aad
movsl
mov
gs
arpl
or
inc
insl
mov
xor
push
and
inc
pop
aad
and
mov
lods
int
stc
or
pop
nop
insl
mov
dec
mov
mov
jle
mov
sub
sarb
sbb
cmc
pop
adc
sbb
sub
xor
jmp
push
push
dec
jnp
fcompl
mov
hlt
repnz
lcall
enter
xlat
pop
cmp
rol
sub
lods
imul
addr16
jo
cmp
enter
fdivr
mov
and
adc
gs
sbb
dec
fwait
xchg
out
pop
test
repnz
mov
pop
scas
pop
daa
xlat
mov
sub
cs
xor
loop
shlb
push
mov
cmpl
ss
sbb
jb
xorb
pop
mov
cmp
mov
aas
xor
imul
xchg
in
fcomps
pop
fdiv
aas
leave
mov
dec
push
popl
sarb
or
int
popa
cmp
mov
daa
outsb
insb
cmp
rolb
fstps
mov
jge
ljmp
paddd
mov
pop
call
mov
loop
sub
add
out
sbb
or
adc
cmp
or
push
adc
add
pop
cli
xchg
icebp
pop
pop
jnp
imul
fcomp
lods
in
add
aaa
addl
daa
lds
and
xor
mov
test
mov
dec
in
push
and
ret
mov
push
add
sarb
inc
pop
or
xchg
pop
test
mov
cmp
mov
or
dec
jne
push
dec
ds
push
mov
mov
test
fsts
sbb
mov
ret
subb
and
sbb
jbe
jnp
mov
orb
jbe
movsl
sti
cmp
bnd
mov
popa
push
cld
jle
cmc
pop
jo
dec
icebp
sbb
fildl
test
mov
cmp
ja
in
ficoml
xor
imull
sub
add
stos
aam
xor
aas
xor
xchg
dec
jo
test
inc
aad
ds
adc
fbld
scas
sbb
out
fisttps
mov
dec
mov
sbb
xlat
dec
je
es
pcmpeqw
cmpsl
outsl
cmp
in
cwtl
orl
test
sti
cli
roll
repz
dec
cmp
pop
sbb
int
roll
add
je
cmp
pop
sbb
gs
scas
cmp
dec
or
xchg
adc
inc
test
jae
pop
sbb
cwtl
cmc
adc
mov
lea
pop
lret
test
push
add
adcl
sub
cmp
xor
repnz
subl
fwait
imul
or
xchg
in
and
or
jnp
out
xor
mov
adc
das
fisubs
stos
mov
jmp
xchg
inc
push
mov
mov
xor
jp
call
sbb
mov
test
inc
out
pop
mov
pop
xchg
mov
mov
pop
sbb
push
lcall
xchg
and
mov
push
dec
inc
jnp
cmc
mov
daa
arpl
cmp
rcrb
xchg
mov
leave
fldl
roll
ret
out
and
insb
xchg
push
jbe
dec
pop
cmc
or
cmp
xchg
scas
xor
sahf
sub
clc
and
fs
jnp
or
xchg
lcall
lcall
scas
cli
or
dec
call
pop
fnstsw
cld
jne
imul
mov
sbb
inc
push
mov
icebp
scas
dec
mov
xor
cmp
decl
pop
push
test
pop
add
js
outsl
mov
adc
and
inc
sti
pop
cwtl
or
lds
je
adcb
mov
mov
sub
xchg
push
inc
out
mov
fucomip
push
sub
adc
adc
pop
mov
xchg
lahf
and
inc
dec
ds
popa
psubb
dec
xchg
mov
lret
ret
cmp
test
push
mov
clc
xchg
idiv
xor
mov
cli
or
mov
jecxz
jae
and
jg
xlat
fstpl
movsl
loope
inc
int
das
repz
sbb
jbe
add
xor
or
mov
lret
xchg
push
mov
aaa
dec
mov
mov
test
ja
dec
js
arpl
jg
int3
mov
mov
pop
sub
adc
push
push
and
rcrb
add
fnstenv
in
test
push
xchg
lds
int
add
leave
inc
and
jne
mov
cmp
ret
cmp
pop
ret
or
mov
les
loope
das
dec
xchg
jmp
in
repnz
lahf
shr
fnsave
fimuls
mov
adc
push
mov
cmp
out
js
test
cld
pop
std
pop
lretw
ds
push
mov
push
addr16
sbb
adcb
jne
repnz
sbb
and
jmp
adc
ljmp
sarl
pop
arpl
pop
dec
ret
sbb
pop
shrl
cmp
cli
cltd
rcrb
mov
inc
mov
cwtl
mov
adc
mov
mov
or
cmp
mov
and
inc
loop
mov
ret
mov
mov
push
pop
les
into
loop
inc
sbb
xor
sbbb
xor
pop
or
mov
xlat
fcomps
out
cltd
sub
mov
fbstp
jne
rorl
dec
je
fdivrl
loope
sbb
das
mov
or
ljmp
sub
jecxz
test
cmp
adc
cmp
mov
test
add
test
mov
movsb
pop
and
ds
push
daa
mov
insb
add
sbb
sub
loop
lcall
vorpd
cmp
sahf
subb
ret
jne
mov
mov
add
outsl
or
scas
pop
mov
cmp
xor
sub
addr16
cmp
shrb
int
std
push
push
mov
mov
icebp
jbe
inc
inc
addr16
xchg
icebp
add
aaa
pushl
push
and
cmp
ficoms
sarb
push
push
or
pop
ss
push
ret
mov
cltd
outsb
in
rorl
scas
aam
sub
mov
push
fldcw
lds
jnp
fstpt
shll
add
lret
lcall
rcl
test
ret
mov
outsb
mov
pushl
mov
mov
imul
jnp
cli
int3
mov
pop
popf
int
addb
push
into
xlat
adc
and
and
iret
add
loope
mov
jns
imul
std
inc
pop
je
pop
push
push
inc
or
pop
int
cld
pop
sub
xchg
jbe
jne
imul
and
dec
out
or
mov
jbe
xchg
xchg
dec
mov
mov
jne
stos
out
add
test
mov
and
fs
jo
cmp
adc
xchg
shl
or
cltd
cld
test
add
in
jnp
scas
xchg
add
adc
push
scas
fstp
clc
mov
cwtl
push
pop
and
mov
adc
mov
cmp
mov
arpl
aaa
into
jge
jbe
leave
mov
sbb
add
cmp
sbb
pop
push
mov
or
imul
data16
lret
fsubrp
ljmp
ljmp
adc
enter
test
pop
js
int
mov
fdivrl
ja
push
aam
cmovge
xchg
pop
jne
insl
stos
icebp
add
movsl
out
decl
pop
jg
xchg
nop
aad
sbb
sbb
enter
and
pop
pop
mov
push
clc
jne
mov
bound
or
adc
jg
in
add
push
lods
mov
pop
lock
and
push
add
mov
ss
test
push
std
clc
adc
insl
pop
vpsrlq
cli
add
and
jp,pn
push
mov
adc
sub
push
dec
mov
xor
xlat
add
push
ss
daa
pop
mov
adc
outsb
sub
les
dec
pop
lcall
mov
pop
adc
movsb
push
fld1
xor
sub
movsb
jbe
dec
js
adc
fildl
push
in
pop
insb
rcll
cmp
aad
lahf
adc
xor
ficoml
mov
or
sub
mov
push
mov
inc
mov
lods
in
mov
push
dec
pop
pop
loope
sub
fildll
jg
push
jae
xor
sub
repnz
lcall
movsl
in
out
sub
push
sbb
lods
sbbl
movb
push
lret
dec
sub
mov
lea
mov
push
sbb
dec
fwait
mov
lret
cmpsl
push
jmp
test
dec
mov
js
push
xchg
std
lret
cwtl
mov
dec
xchg
jle
and
jmp
mov
mov
inc
imul
push
fnstcw
mov
push
add
xchg
jns
adc
jle
mov
nop
rclb
xchg
push
mov
shll
add
ss
adc
jne
push
mov
repz
pop
pop
xor
cmpl
adc
cs
bound
push
ljmp
clc
sahf
adc
dec
and
jmp
lods
inc
ds
jns
js
out
aad
arpl
icebp
sbb
cmp
sbb
cmp
xor
test
pop
adc
inc
pop
pop
aas
popa
xor
out
pop
push
clc
out
jno
jecxz
outsb
xchg
pop
movsb
sbb
push
std
lahf
xchg
repnz
sarl
cmp
and
iret
cmc
out
repnz
adc
out
je
and
mov
cmp
mov
push
cmp
call
and
fnsave
js
jge
into
push
mov
xorl
and
std
adc
pop
mov
pop
dec
mov
hlt
lahf
sbb
dec
lds
outsl
mov
movsl
cwtl
cmpb
fidivrl
jno
pop
mov
push
xlat
push
and
xor
sub
mov
rolb
jb
dec
or
iret
cmp
or
je
add
and
shll
add
out
arpl
mov
lea
jnp
mov
cmpsl
and
cs
or
movsb
xor
mov
test
sbb
add
push
and
shlb
insb
std
aam
into
xor
outsl
xor
mov
mov
cmp
inc
dec
xor
mov
loop
outsb
xchg
adc
loope
inc
pushf
dec
sub
add
add
lods
sahf
std
rol
movsl
ror
out
icebp
shrb
mov
out
or
sub
popa
push
pop
inc
xchg
sysret
pop
fs
sub
xchg
xchg
lcall
inc
ret
xor
sarb
mov
add
sar
test
stc
add
adc
cmp
cmpsl
mov
pop
std
cmpsl
scas
icebp
or
mov
call
jb
repz
lret
cmc
mov
xor
fisttpl
dec
stos
lahf
pop
lret
mov
jecxz
pusha
push
mov
sub
xchg
bound
jno
sbb
out
xor
inc
rclb
inc
and
cmp
jne
sbbl
sbb
lock
loopne
decl
test
shll
mov
test
mov
xchg
pop
mov
call
cmpsl
rorb
pop
dec
insb
xorb
jmp
movsl
je
outsb
pushf
lods
mov
xchg
sbb
cmp
aad
fistpll
sub
jmp
leave
adc
js
imul
popa
ja
popa
pop
add
dec
cmp
cld
sbb
mov
push
loop
and
mov
inc
repnz
push
pop
nop
scas
cwtl
scas
sahf
sbb
or
jae
es
pop
outsb
je
pop
mov
xchg
sahf
lea
xor
cmp
mov
lods
dec
gs
cmp
push
push
ja,pt
mov
push
push
mov
or
pop
std
dec
aas
cmp
push
test
jne
mov
js
stos
scas
sub
stos
dec
or
dec
andb
mov
mov
lret
ficompl
mov
push
sub
bound
cli
push
pop
shll
jge
nop
sti
jnp
andb
scas
jae
in
ds
test
ja
test
or
hlt
inc
imul
sub
jns
sbb
insl
addl
aaa
repnz
mov
enter
scas
les
xor
xor
pop
daa
sarl
push
scas
jmp
add
rorl
stc
ret
push
push
sub
mov
adcl
movsb
das
sub
adc
pop
xchg
push
mov
testl
movsb
dec
repz
std
sub
mov
shlb
shlb
pop
hlt
adc
and
outsl
pop
sub
adc
xchg
fucom
rcrb
lea
push
mov
push
fcmovnbe
clc
push
gs
dec
ret
cmpsb
out
push
mov
jnp
sub
test
add
mov
movsb
sbb
push
lds
or
push
fwait
xchg
or
push
jmp
aas
andb
mov
cmpsb
arpl
stos
rcll
imul
cli
aam
into
je
lock
repnz
mov
scas
pop
std
jbe
mov
test
popa
dec
xchg
jnp
jp
outsb
mov
shrb
lock
jmp
lret
push
and
dec
nop
out
mul
into
sub
mov
xor
imul
or
addr16
icebp
dec
lcall
les
cmp
inc
push
push
scas
into
jg
in
cmp
rclb
mov
sub
icebp
lret
xor
ret
rorb
mov
and
fdivr
stc
inc
or
cld
dec
pop
push
scas
sbb
inc
sbb
aad
ljmp
lcall
popf
mull
decb
mov
shrb
lret
mov
lods
pop
adc
fdivr
mov
fcmovne
pop
lcall
mov
cmp
sub
mov
loop
or
inc
pop
ljmp
aas
cwtl
inc
xchg
jl
sti
push
out
xor
jae
push
and
xchg
push
mov
ja
leave
push
inc
cmp
mov
xchg
mov
cmc
push
lods
fsubr
push
xchg
mov
mov
add
fs
sbb
popf
pop
gs
cltd
cwtl
cmp
imul
std
bound
mov
popa
in
push
and
out
mov
sbb
push
rorl
popf
dec
repnz
and
sub
push
fistl
les
sub
xchg
jl
popa
cs
pop
xchg
mov
cmp
jo
js
xor
dec
mov
mov
xchg
push
inc
mov
loopne
or
add
inc
movsb
jle
sub
aam
test
pop
xor
jge
xor
jns
pop
enter
leave
daa
out
aas
push
icebp
push
lock
mov
push
sub
sarl
pop
cmpsl
popf
call
pop
mull
lahf
xchg
scas
insb
xlat
and
lret
mov
mov
push
ljmp
dec
in
sub
push
add
movntps
test
daa
pop
mov
dec
mov
mov
pop
and
jnp
fmull
das
add
ss
rcr
aam
jno
bound
icebp
testl
pop
cmpsb
in
fs
mov
ljmp
push
sub
addr16
and
or
mov
jmp
pop
imul
jl
cmc
inc
movsb
ds
cmp
int
push
pusha
idivl
dec
lock
and
and
lcall
pushf
ss
lret
loopne
adc
and
outsl
mov
pop
cmc
movsl
and
jle
dec
ret
les
and
cltd
push
call
or
lea
clc
inc
and
in
and
mov
daa
dec
pop
push
mov
cwtl
negl
lock
xorl
loope
sbb
cmp
lahf
nop
inc
jmp
xor
dec
ret
out
mov
pop
fmull
out
pop
nop
xchg
int3
cmpsl
or
test
cmpb
sarb
fldt
xorb
xchg
in
outsl
leave
inc
ljmp
mov
fldt
cmpsl
shll
mov
mov
inc
pop
cs
push
xor
daa
mov
out
push
push
pop
mov
adc
xor
or
xchg
repz
nop
int3
dec
jl
iret
cmp
and
or
xchg
sub
or
jg
aaa
int3
hlt
or
inc
dec
mov
notb
scas
inc
fcmovnu
stos
add
inc
push
das
pop
fsts
mov
dec
xor
cmc
repz
outsl
sub
and
xchg
cs
gs
cs
imul
or
hlt
push
int3
cmpsb
outsb
xor
mov
enter
push
ljmp
js
shlb
out
xchg
dec
adc
js
test
inc
dec
sub
cltd
jg
push
add
aas
mov
xchg
pop
in
inc
outsl
xchg
sahf
jae
push
cmp
cmp
pop
dec
fnsave
adc
jno
mov
dec
dec
push
sub
dec
xchg
jne
push
int
pusha
cli
and
stos
in
ret
inc
roll
xchg
add
adc
pushf
clc
xlat
imulb
ret
xor
scas
call
leave
adc
push
in
inc
mov
push
outsl
and
inc
daa
sub
xchg
aaa
and
adc
rcrl
xor
das
mov
movsb
addb
mov
mov
jb
sub
sbb
out
xor
in
pop
push
sub
popw
es
mov
lret
dec
fwait
or
jge
push
out
fcmovb
enter
aaa
jg
lret
ljmp
sysenter
pop
test
sub
jne
xchg
inc
pop
jae
mov
mov
add
inc
dec
mov
insl
jl
ja
dec
cmp
mov
ss
imul
lea
add
push
ret
sbb
hlt
add
mov
mov
xchg
and
and
das
push
pop
lods
aaa
jmp
fadds
lret
cmp
es
lcall
pop
sbb
add
fldt
test
and
cli
rcrb
xchg
je
insl
xor
dec
das
push
outsl
stos
cmpxchg
mov
cmp
xor
mov
int
inc
push
mov
sbb
dec
imul
adc
jne
scas
imul
mov
pop
jno
pop
gs
push
mov
and
fs
bound
push
and
rcrl
je
hlt
and
jne
cmp
scas
jo
icebp
push
push
cmc
mulb
and
pop
xchg
push
or
scas
lret
sub
outsb
cmp
loope
add
daa
or
inc
jb
insl
or
addr16
cli
into
sbb
dec
ja
jbe
leave
imul
mov
dec
push
imul
cmp
sub
cmp
rorb
bound
xchg
popa
shlb
pushf
xchg
jg
cmp
pop
cltd
dec
aad
data16
push
je
jnp
xor
mov
mov
outsl
ret
lret
mov
pop
sub
sub
add
ds
xchg
and
lret
das
imul
mov
sarb
cmp
das
dec
lret
mov
shrb
push
xlat
push
imul
ja
jecxz
jecxz
mov
dec
addr16
mov
and
outsl
xor
cmp
lds
adc
jmp
cli
inc
int3
bound
pop
xchg
cmp
cmpsl
and
add
cmp
test
adcb
push
outsl
movl
add
push
outsl
aaa
leave
test
xchg
cmp
mov
adc
scas
sbbl
or
lock
loope
loope
jl
outsl
insb
or
dec
sbb
pushf
and
xor
ljmp
fists
sbb
outsl
dec
cmp
push
jp
stos
out
xor
mov
in
add
cwtl
pop
mov
mov
jmp
imul
sarl
jecxz
ret
mov
adc
std
push
das
or
inc
das
xchg
jae
lcall
inc
repnz
mov
push
test
jge
jnp
mov
outsb
outsb
xchg
mov
mov
in
xchg
lret
jb
sbb
mov
ret
mov
mov
cli
lock
loopne
fcomi
xor
test
cmp
enter
xor
adc
dec
adc
pop
and
inc
cli
inc
outsb
pop
cmp
outsb
sub
adc
adc
cmp
mov
insb
or
sbb
inc
outsb
add
pop
test
push
xchg
xchg
mov
sbb
pop
cmp
mov
pavgw
jmp
fs
or
mov
push
cmp
stc
mov
int
pop
nop
sbb
adcb
push
sub
mov
subl
pop
cmpsl
es
xchg
scas
dec
fidivl
pop
mov
std
int3
fimull
sar
int
pop
pushf
cmpsl
lahf
inc
jl
mov
loope
test
pop
pop
sbb
cmp
pop
fadds
mulb
cli
nop
out
inc
xor
mov
leave
roll
jnp
insb
cmpsb
or
xchg
arpl
pop
jae
sbb
sub
adc
xor
mov
jmp
sub
rorl
add
gs
mov
inc
inc
xor
dec
jbe
mov
test
fadds
andb
popa
les
adc
cmpsl
inc
add
push
inc
int
stos
push
push
cmp
std
int3
lret
data16
xor
ljmp
es
int
movsb
fs
dec
pop
mov
popa
push
cmp
rclb
cmp
jno
jg
in
int
mov
push
cltd
jno
push
dec
outsb
sub
js
jne
gs
jb
shrl
push
and
mov
outsb
xor
cmp
fdivrs
lcall
int3
cmp
lods
les
pop
sbb
leave
jns
cmp
mov
rcr
dec
dec
cwtl
or
dec
sub
packssdw
sbb
outsl
and
lods
lret
stos
xor
iret
adc
mov
mov
cmp
and
xor
sarl
cmp
outsb
std
aaa
xchg
call
jne
sbb
scas
ret
mov
je
mov
or
into
xchg
int
adc
lds
or
aam
inc
inc
fbld
dec
dec
popa
cmp
int3
push
inc
rcrb
das
fcmovne
icebp
and
sahf
xchg
ret
and
aam
out
iret
adc
mov
out
inc
sahf
mov
adc
rclb
sarl
iret
insb
mov
xchg
aas
mov
lods
jnp
lcall
ja
sub
test
xchg
aam
addr16
mov
test
into
push
pop
sub
test
enter
call
dec
lods
inc
cmpsl
xchg
add
mov
fs
lcall
xchg
stos
inc
iret
stc
pop
dec
cmp
cmpsb
and
aam
xor
repnz
int
aam
mov
mov
mov
mov
pop
push
aas
fisttpll
jnp
shrl
mov
rolb
mov
test
aam
push
adc
call
xlat
shll
fs
push
lods
pop
cld
push
mov
loopne
and
and
imul
ret
dec
mov
adc
jbe
aas
mov
adc
fwait
mov
sbb
das
frstor
jmp
pusha
pop
fmul
mov
cmc
sub
lods
mov
cs
cmp
dec
cmp
loopne
daa
repnz
inc
lcall
xchg
data16
xchg
pop
movups
enter
dec
arpl
add
mov
lcall
jnp
adc
pop
jno
inc
leave
lret
xchg
sahf
fmul
dec
out
cltd
xor
repz
mov
loopne
mov
nop
mov
or
add
xor
adc
out
sbb
stos
imul
out
cmp
cmp
and
fnstenv
xor
xchg
push
leave
popw
and
nop
mov
push
cmp
mov
cs
push
das
cwtl
xchg
sbb
leave
cmp
adc
push
inc
push
rcrb
xchg
popf
out
das
pop
loop
mov
mov
inc
mov
xchg
pop
into
aas
jb
xor
mov
loopne
xchg
ret
xchg
and
adc
xor
push
sbb
jno
push
push
push
insl
pop
out
mov
xor
movsb
push
xchg
or
xchg
xor
and
xor
aas
cmp
lret
mov
and
dec
pusha
iret
sub
add
ja
xor
cmp
inc
xchg
cmp
xchg
pop
ret
subb
dec
jmp
pop
js
xor
jecxz
gs
lds
mulb
push
mov
cmc
sbb
movsl
push
out
mov
dec
push
leave
insb
fldcw
aas
mull
shll
cmp
or
inc
mov
add
outsl
sub
pop
mov
dec
int
hlt
mov
enter
adc
and
cmpsl
fiaddl
and
push
mov
dec
inc
rorb
inc
xor
arpl
sub
int
jg
lret
shrl
loope
mov
adc
ljmp
ljmp
jnp
pop
and
jbe
xchg
cmp
inc
sub
lret
mov
addl
and
inc
add
ret
push
sub
inc
int
jnp
push
add
pop
fiadds
pusha
or
push
push
subl
add
loop
add
imul
sub
or
ja
pop
inc
xor
test
lret
divb
or
rcrl
xchg
jnp
int3
daa
xlat
push
push
sbb
jle
inc
aaa
dec
addr16
btr
aaa
mov
jnp
jmp
jbe
inc
icebp
xchg
pop
pop
ret
faddl
out
mov
mov
insb
repnz
aam
adc
imul
ds
jge
pop
loopne
push
cld
adc
and
adc
std
or
data16
push
leave
inc
loopne
pop
dec
dec
pop
mov
xor
push
rcl
hlt
ss
jge
pop
mov
je
mov
adc
lock
pop
imul
je
xchg
push
loopne
sub
ret
addb
in
stos
mov
out
and
pop
imul
push
mov
inc
insb
aas
pop
fisubrl
fcoml
addr16
pushf
sbb
or
bound
lods
sub
es
mov
inc
iret
mov
jmp
and
jbe
aas
ficompl
jmp
adc
add
pop
sti
jno
or
xchg
push
repz
iret
rcrl
pushf
and
pop
mov
sbb
push
add
lret
mov
ja
push
jmp
mov
sbb
push
adc
rcr
push
cmp
mov
xchg
sub
enter
mov
ds
sti
xor
or
xchg
xchg
dec
cmpsl
mov
xchg
mov
xchg
jp
and
aam
aaa
call
or
leave
inc
xchg
mov
mov
mov
sbbl
mov
orl
cmp
sub
or
add
xor
sub
jmp
stc
xchg
fsubr
pop
sub
add
push
xor
clc
add
sbb
xlat
lret
nop
adc
leave
cmp
push
mov
and
ret
adc
and
add
popf
mov
cmp
xchg
pop
cld
jecxz
data16
sti
adc
repz
pop
push
icebp
inc
push
out
mov
pusha
jno
inc
jmp
rclb
or
fistl
pop
popa
mov
or
push
pop
or
fs
mov
scas
xor
sti
leave
rol
cmpsb
iret
int3
pop
xor
xchg
mov
imul
hlt
pop
mov
adc
push
in
push
inc
inc
jns
xorl
mov
jmp
xchg
sub
ljmp
hlt
jecxz
orl
mov
pop
scas
xchg
pop
jmp
adc
jl
lret
cmp
rorb
and
xor
xor
push
repz
cmpsl
enter
pop
sub
push
movsl
ja
clc
xor
mov
out
push
xchg
jb
pop
push
leave
xor
ficomps
jl
inc
cmp
fmulp
aas
divb
mov
mov
out
sbb
adc
and
lcall
add
sub
inc
xor
sub
pop
aam
mov
add
popf
in
rcrl
imul
std
vpshld
adc
out
xlat
dec
in
std
pushf
xlat
loope
mov
xor
roll
out
jl
or
notb
add
and
lock
sbbb
mov
add
outsl
fcoml
andl
and
lods
xchg
xchg
pop
scas
dec
mov
and
stos
lcall
pop
mov
repz
es
sub
xor
outsb
dec
loop
inc
lods
mov
push
jb
inc
out
adc
push
mov
shll
gs
lcall
shl
and
mov
adc
jge
mov
push
lods
cltd
push
imul
adc
dec
cld
aas
std
push
cmc
xchg
rorb
std
mov
in
loope
out
dec
stos
cmp
or
ljmp
pop
xlat
push
dec
jno
loopne
xor
add
outsl
push
ja
xor
or
leave
push
inc
iret
fcmovu
add
iret
push
mov
repz
fisubs
insl
dec
jns
push
ds
iret
xchg
pop
jno
mov
stc
mov
arpl
pop
push
inc
ja
pusha
std
ret
shrb
das
or
dec
mov
js
out
stos
ja
mov
pop
scas
mov
cltd
mov
jmp
lahf
mov
add
idivl
cwtl
jbe
push
inc
add
jb
adc
imul
xlat
dec
inc
fxtract
fnstenv
inc
xchg
jecxz
subl
xchg
or
add
icebp
adc
mov
enter
mov
mov
int
and
ljmp
mov
imul
cmp
notb
jmp
or
call
jb
xchg
jae
cltd
and
mov
push
jge
sahf
sbb
pop
push
cmpsl
ds
sub
dec
cmp
jno
ret
push
dec
jp
jno
fwait
push
jmp
ret
imul
in
sbb
lock
lods
ret
xchg
mov
or
mov
push
movsl
mov
mov
loop
push
popf
sub
push
and
ret
sbb
pop
inc
clc
int3
ret
negb
test
adc
and
insl
jmp
mov
stos
mov
cs
pop
add
sahf
mov
cs
addr16
data16
push
jle
or
movsb
push
aas
cmpsl
movsb
or
inc
adc
cmp
jecxz
icebp
mov
inc
xor
push
mov
popf
in
adc
or
lret
adc
or
shrb
cltd
nop
shl
mov
out
enter
cmp
jnp
mov
roll
ljmp
pusha
rclb
push
mov
push
or
in
push
pop
pop
fisubs
testb
mov
push
mov
cli
cmp
je
inc
popf
ss
xchg
fidivs
dec
pop
push
cmc
movsl
inc
mov
sbb
push
mov
cmp
sub
out
xchg
call
ja
stos
cld
add
int
clc
movsb
fsubr
push
cmc
in
in
stos
dec
test
add
xchg
inc
test
adc
and
aad
cmp
pop
rep
ret
cmp
xchg
sbb
call
push
aad
dec
scas
hlt
in
push
fcompl
test
mov
mov
dec
das
jmp
in
add
lods
in
mov
lret
out
pslld
mov
mov
mov
jb
shl
adc
adc
ljmp
iret
jbe
or
int3
inc
inc
sub
arpl
add
das
pushf
pusha
mov
mov
imull
jecxz
dec
or
jg
dec
test
out
mov
mov
insb
arpl
arpl
imul
pop
jge
pop
cs
mov
xchg
mov
loop
xor
add
popf
in
pop
outsb
push
xor
mov
aas
fmull
dec
nop
mov
inc
inc
aam
test
les
xor
and
adc
insl
add
mov
jle
pop
rcpps
xchg
cmp
mov
pop
pop
loope
dec
or
rcrb
hlt
or
cli
adc
cmpsb
sbb
int
jno
es
and
ret
jnp
data16
sbb
xchg
sbb
lret
and
dec
lods
cmp
icebp
stos
pop
mov
insl
xchg
mov
push
lcall
mov
pushf
int3
fnstenv
into
iret
inc
leave
cltd
cmpsb
loopne
rcrl
cmpsl
cs
insb
aas
xor
iret
xchg
dec
xchg
mov
xor
ret
or
push
adcb
test
cmp
sbb
mov
jnp
adc
popf
std
cmp
sub
mov
push
and
loop
sub
nop
and
out
sbb
pop
clc
test
mov
or
sbb
leave
enter
dec
add
int
mov
aad
mov
xor
mov
jno
push
pusha
mov
dec
shrl
xor
inc
test
popf
mov
sbb
jne
repz
dec
out
pop
jl
fstps
sub
iret
push
adc
cmp
xorb
cmp
test
mulb
or
or
cmp
add
rclb
inc
rclb
lock
mov
sbb
pop
sbbl
in
ja
mov
dec
add
cmp
sbb
push
sub
addr16
mov
mov
dec
dec
ret
ljmp
movsb
lahf
inc
or
mov
imul
loopne
ret
dec
add
mov
xchg
mov
jo
cmpsb
rol
test
xchg
mov
fwait
adc
and
inc
in
push
cli
imul
and
mov
sub
fisubrs
js
ljmp
cmp
push
fs
je
fs
xlat
inc
loope
lods
xor
inc
push
pop
xchg
sahf
sub
cmp
sbb
fwait
dec
push
incl
lcall
cmpsb
adc
and
push
xor
test
inc
pop
xchg
jns
xchg
xor
hlt
ljmp
pop
xchg
mov
out
jl
subl
aas
push
sbb
stc
popa
mov
mov
lds
mov
xchg
lcall
add
xchg
xor
jne
insl
in
insb
clc
scas
pop
testb
adc
ret
subb
jp
in
movsl
rorb
cmp
bound
push
ja
xor
gs
inc
mov
leave
je
dec
adc
jnp
stos
pop
adc
scas
sbb
jno
repnz
iret
push
cmpsl
push
xor
or
dec
xor
xor
rcll
scas
cld
xor
and
rcl
mov
add
in
jne
cmp
jge
shlb
incb
cmp
jb
xor
andb
cmp
jb
pusha
mov
js
outsl
push
sbb
dec
loopne
aaa
lcall
mov
xchg
inc
fisttpll
out
dec
cmp
or
mov
xchg
daa
push
stos
xor
ljmp
jecxz
cmc
jae
xor
adcl
ja
pop
imul
xchg
in
mov
mov
xor
xchg
out
dec
adc
subl
jmp
push
xchg
clc
loop
nop
jno
ret
daa
mov
inc
ljmp
xchg
dec
loop
pop
loopne
or
mov
jo
inc
adc
dec
cwtl
cmp
loopne
xchg
shlb
xchg
xor
adc
pusha
sbb
enter
add
leave
mov
sub
lds
divl
add
shrb
mov
movsl
push
push
lock
iret
movsb
scas
mov
push
add
mov
pop
mov
aas
imul
push
dec
jo
addl
popf
mov
lret
adc
repz
adc
fadds
out
cmp
push
xorl
test
mov
add
loopne
divb
or
mov
pusha
dec
mov
lods
in
popa
cmp
mov
out
mov
lea
fbstp
pushf
dec
xor
aam
mov
bound
insb
loopne
aad
push
jae
in
mov
test
gs
sub
aam
es
pop
test
call
aam
sahf
out
mov
lcall
inc
xchg
imul
and
lret
push
sub
test
pop
mov
test
or
or
fwait
mov
pop
in
pop
pop
cmp
cmp
jle
jo
push
enter
push
call
pop
mov
bts
xchg
outsl
lret
xchg
lret
dec
pop
jo
cltd
jmp
out
aad
or
push
mov
adc
aaa
pop
mov
mov
dec
fidivs
mov
jno
sub
mov
mov
mov
xchg
repnz
out
fadds
sub
sahf
movsb
and
add
mov
sub
mov
mov
xchg
or
mov
mov
jns
jno
mov
push
sbb
cmp
sub
xchg
mov
js
xchg
jnp
push
inc
aas
arpl
mov
pop
sub
dec
je
mov
xchg
lret
xchg
insl
or
adc
add
adc
push
push
sub
pop
push
fcoms
lea
xor
pop
pop
mov
push
sti
mov
adc
cli
icebp
aam
jge
adc
sahf
cs
into
xchg
aaa
pop
in
loopne
sti
jmp
mov
cmp
rep
adc
pushf
scas
xchg
testl
aaa
jg
and
dec
shlb
push
cmp
mov
iret
sub
dec
jne
addr16
pop
jo
cmp
jae
xor
iret
push
das
fists
and
in
in
mov
in
mov
pop
cwtl
push
push
lea
imul
sub
xor
add
lods
fimull
jp
mov
shl
addb
push
sbb
xor
popa
lret
pushf
outsl
aas
arpl
cmpsl
pop
arpl
mov
cmc
das
sbb
mov
popf
dec
lret
dec
sbb
mov
push
movsb
cmc
jbe
push
mov
pop
movsb
push
fwait
std
fidivl
pop
out
in
pop
dec
pop
pop
jg
xchg
lea
ss
xor
scas
inc
call
xorl
jp,pt
lds
ljmp
scas
sbb
mov
mov
insl
lock
jns
jg
fstps
ja
pop
sub
jae
popa
mov
lfs
sti
aas
lea
dec
insl
jg
rcrl
xor
sub
sub
pop
ja
mov
or
and
xchg
fbld
pop
dec
pop
inc
add
icebp
fdivs
mov
mov
sub
cmp
push
sahf
sbb
push
jb
mov
mov
fbstp
cmp
mov
stos
addr16
gs
scas
fcomps
jbe
push
cs
lods
cmpsb
xchg
stos
es
jae
dec
push
leave
and
jecxz
mov
pop
fs
cmpsl
cmpsl
int
sti
sbb
sub
sbb
xchg
pop
lret
bound
dec
pop
adc
fmulp
jo
cmp
icebp
or
mov
and
pop
mov
sbb
mov
xor
fbld
add
jmp
outsb
test
pop
nop
inc
mov
and
dec
lea
mov
stos
dec
or
test
cmp
dec
sub
add
xchg
daa
mov
jp
push
shlb
lea
lds
lcall
jns
std
xchg
sub
out
cmp
mov
mov
jmp
ret
lcall
cmp
add
imul
push
mov
inc
cmp
fistl
sahf
mov
mov
jno
sub
push
jle
mov
lods
xchg
mov
stc
popf
pop
imul
in
cmp
nop
ljmp
mov
insl
js
jo
in
cmp
enter
mov
push
cmc
das
cmp
mov
add
gs
jmp
into
gs
insl
cmpsb
rorb
push
cmp
stc
sbb
mov
and
mov
xor
dec
push
or
push
lret
adc
cli
lods
xor
ds
pop
cmp
out
xorb
stc
dec
cmpsb
pop
fisubs
pop
enter
negb
jno
push
stos
mov
pop
push
push
jbe
es
nop
cmpsb
lcall
int
or
shll
lahf
jp
lock
mov
mov
lods
sbb
mov
in
jmp
lret
test
mov
fs
pop
inc
mov
out
test
movsb
movsb
mov
adc
jl
push
cmpsb
subb
sub
stos
dec
xor
xor
mov
xchg
or
jno
sbb
push
cmp
cmp
scas
cmp
aaa
mov
add
in
das
sbbb
fsubrl
inc
movaps
sub
sbb
cmp
icebp
dec
cmp
push
leave
ss
leave
push
insl
dec
fs
hlt
adc
push
pop
enter
mov
cmp
jnp
inc
add
dec
cltd
sbb
inc
dec
scas
test
mov
sar
push
leave
dec
cmpsb
popa
mov
scas
mov
sub
mov
cmc
fwait
out
mov
lahf
push
outsl
loop
cmc
mov
mov
jmp
cmp
pushf
hlt
lcall
push
mov
lods
fwait
jne
xchg
ret
mov
pop
fwait
out
imul
scas
mov
js
jl
jnp
les
lcall
inc
cwtl
jo
pushf
lret
mov
cltd
test
fwait
inc
call
js
inc
mov
dec
push
lea
icebp
dec
jge
ret
xor
jae
xor
inc
inc
fcmovb
cmpb
imul
mov
lcall
push
mov
mov
into
dec
mov
outsl
and
mov
ja
mov
jecxz
add
mov
sub
movsl
cmp
pop
outsb
nop
call
inc
stc
js
popa
imul
fxch
clc
fiaddl
fimull
sahf
fidivrs
or
mov
adc
mov
cmp
and
iret
dec
insl
popf
mov
outsb
aam
jbe
xchg
mov
addr16
xchg
lret
stos
hlt
mov
nop
inc
rorl
sti
dec
lds
or
jmp
and
pop
or
inc
ja
and
xchg
sti
push
cmp
jne
lret
aam
les
enter
push
xchg
and
out
xchg
out
fisttpl
and
xor
xor
je
jae
stos
insb
imul
pop
shlb
outsb
sbb
in
stc
scas
outsb
fisttps
cmovge
jbe
cmpsb
cltd
pop
js
and
hlt
ret
jne
mov
mov
sub
or
leave
enter
loope
jno
sbb
cmovae
mov
mov
hlt
out
mov
add
jne
pop
adc
sub
push
inc
cld
iret
dec
std
or
or
push
dec
fcomi
lahf
movsl
jae
roll
and
jne
add
pop
out
ljmp
sub
sub
jg
mov
bound
popa
incb
sti
in
ljmp
das
in
mov
arpl
inc
pusha
sbb
insb
cmp
inc
imul
and
gs
push
movsb
pop
ljmp
jbe
mov
xor
sbb
dec
inc
pushf
xor
jmp
in
outsb
es
jecxz
pop
sub
and
xchg
adc
fs
and
iret
test
fnsave
sysret
imul
cmpsb
sub
rolb
fwait
mov
xchg
lock
xor
rorb
cmp
outsb
arpl
xchg
or
push
jp
mov
fs
mov
push
inc
dec
lahf
int3
popa
xor
xchg
pop
out
push
mov
sub
jb
sbbb
add
pop
leave
sahf
jp
xor
sub
pop
push
inc
sarl
jecxz
dec
and
testb
and
mov
dec
inc
jmp
bound
ret
insb
cmc
mov
addr16
cmp
movb
xor
xchg
repz
cmp
xor
sar
mov
lods
int3
xor
or
popf
stos
or
mov
mov
ja
pop
jnp
and
pop
and
jbe
sub
call
adc
fnsave
pop
mov
xor
jae
cmp
xchg
hlt
psubq
mov
cld
call
popf
sbb
sub
dec
lods
mov
add
cmc
leave
push
imul
adc
jecxz
and
shlb
push
xlat
orb
mov
fsubl
pop
or
in
setb
inc
clc
std
xor
gs
sbb
dec
mov
icebp
xor
dec
movsl
fists
mov
aam
jbe
mov
xchg
dec
sub
punpckldq
addr16
jo
jmp
rcr
push
jp
shrb
push
call
or
popf
push
sti
pop
test
cmp
or
add
repz
pushl
sub
les
cld
daa
pop
jecxz
js
inc
jno
sti
mov
jle
xchg
ret
sbbb
sub
aad
cmpsb
push
movsl
sbb
les
mov
jmp
add
mov
stos
adc
fstl
mov
dec
sti
jle
mov
push
cmp
push
lret
insb
pop
mov
fnsave
mov
pop
or
push
push
test
inc
jb
jno
dec
mov
sahf
cs
pop
add
mov
jno
add
inc
mov
incb
mov
lea
inc
outsb
pop
inc
imul
clc
xlat
xor
add
sub
inc
bound
outsb
dec
xchg
test
add
out
add
daa
mov
insb
scas
fldt
and
sub
stos
cltd
test
cmp
xchg
aaa
mov
psrlw
stos
imul
sub
in
sub
mov
jo
and
popf
dec
nop
fimuls
int
mov
inc
subb
push
push
imul
add
arpl
sub
pop
ret
ret
notl
test
lea
xchg
or
lcall
push
dec
cmc
fsubrs
cs
mov
cltd
scas
add
dec
mov
mov
xor
jmp
sbb
sub
shrl
ss
in
push
pop
pop
mulb
pop
outsl
lds
push
mov
pushf
and
sub
es
add
ja
push
cmp
popa
stos
cs
pop
ja
out
int
out
adc
jae
pushf
cmp
mov
sbbl
and
mov
adc
outsl
enter
outsl
int
in
add
mov
pop
cmp
or
icebp
push
mov
ret
xchg
dec
cmc
xor
inc
adc
in
push
mov
and
addr16
xchg
lds
out
push
xor
bound
fdivrs
dec
push
ljmp
push
adc
stos
test
mov
es
jnp
test
and
fldl
xor
leave
mov
add
or
push
out
popa
dec
cli
add
into
pop
mov
sub
mov
jecxz
loopne
lods
jbe
adc
subb
mov
out
lcall
push
mov
cmp
adc
mov
outsb
sub
or
jo
push
xor
mov
push
and
xor
push
mov
push
sub
xor
jnp
ss
add
cmc
popfw
push
stc
dec
popf
pop
in
js
xor
inc
insb
push
jg
inc
cltd
jmp
mov
outsl
neg
cmpsb
cmp
shrl
xor
fs
push
popa
adc
pop
idivl
pop
loope
fcmovnu
sbb
fs
sbbb
mov
enter
movsl
bswap
lcall
mov
push
sbb
lcall
ja
jbe
dec
out
out
rcrl
push
and
lcall
bound
ss
add
cmp
cld
or
ja
hlt
test
cs
pop
xchg
xor
sub
mov
xor
jle
fbld
mov
push
cwtl
addr16
jmp
imul
cmc
ja
push
pop
mov
mov
jae
dec
ljmp
sub
in
sarb
lods
mov
sub
addr16
negl
xor
mov
dec
inc
pusha
shl
sub
addr16
cmp
stos
fbstp
inc
in
sub
and
iret
or
xor
fcompl
je
add
fs
sub
sbb
insb
test
and
push
repnz
pop
or
daa
shrl
orl
dec
mov
clc
fdivrp
aam
sahf
push
or
inc
push
add
ja
scas
mov
lret
popa
fildl
in
mov
adc
push
mov
sub
push
mov
cs
mov
lcall
fadds
nop
loopne
decl
das
outsl
mov
jno
xor
dec
sti
or
js
stos
sysret
pop
aas
jmp
pop
mov
mov
sbb
or
jb
call
jg
push
in
jecxz
sbb
adc
xchg
addb
fisttpl
xor
sahf
loop
adc
inc
hlt
adc
fnsave
xorl
scas
gs
or
add
jmp
mull
fisubl
cmpsl
cmp
pop
jge
js
adc
mov
fldt
ljmp
out
int
es
mov
cmp
das
push
xor
loope
out
cmp
std
ret
pop
cmc
loop
cld
xor
movsb
fmull
add
lods
sahf
push
fwait
and
int
push
mov
cmp
ds
sti
xchg
leave
loope
mov
fcompl
xor
in
inc
push
cmc
pushf
mov
insl
jmp
fcomps
xor
lea
and
add
js
fisubrs
and
push
bound
movsl
ret
int
out
push
mulb
inc
and
mov
lea
mov
xlat
dec
div
and
sbb
stos
in
or
mov
mov
jns
pop
and
fcoml
aam
and
inc
bound
sub
mov
out
jge
imul
faddl
xchg
jns
dec
add
aam
ljmp
xchg
arpl
jge
scas
out
mov
imul
jge
lcall
rcrl
xchg
test
xchg
mov
sbb
dec
dec
mov
jno
pop
hlt
mov
push
jno
in
scas
cmc
mov
fsubl
mov
nop
aaa
or
adc
push
dec
and
test
push
dec
mov
js
inc
jle
cmp
and
push
pusha
stos
ja
inc
shll
mov
xchg
mov
xor
jmp
insl
pop
mov
test
repz
aaa
adc
jns
inc
icebp
inc
ret
push
and
push
jb
jae
pop
add
into
loop
adc
hlt
addr16
shlb
xlat
jb
aaa
inc
stos
mov
iret
adc
ss
xor
xchg
mov
bnd
data16
sub
and
fsubs
int
push
adc
or
mov
inc
stc
cld
ljmp
and
fwait
mov
dec
add
dec
lcall
mov
fisubs
add
sub
fwait
cmp
mull
aam
into
jecxz
mov
xchg
lcall
mov
xor
jmp
push
xor
into
repz
shll
rcrl
test
pop
lret
xchg
in
xlat
ror
stos
lea
test
jne
sti
mov
push
loope
xor
cld
shrl
out
in
lcall
sbb
das
sub
imul
xor
stos
inc
or
ja
sub
repnz
sti
out
mov
dec
adc
xor
testl
js
adc
add
flds
add
dec
shlb
in
and
jmp
sbb
inc
imul
fdivrl
mov
lcall
out
xor
jo
mov
and
into
bswap
test
jp
and
int
in
ja
fdivrl
mov
loopne
ds
mov
inc
fcomip
dec
mov
mov
stos
iret
adc
dec
in
fs
cld
ret
fnstcw
cmpl
outsl
mov
pop
aas
lahf
negb
pushf
es
push
aaa
int3
cmp
cmc
cmc
xchg
jnp
lds
mov
mov
xor
icebp
imul
cmp
popa
fildl
sbb
xchg
push
cmp
fldenv
pop
enter
inc
repnz
inc
int
pop
lret
sub
xchg
sub
push
adc
mov
arpl
xchg
jmp
cmp
popa
xchg
das
out
cmpsb
stos
into
mov
pop
mov
mov
popf
inc
sti
xlat
mov
lock
xchg
mov
call
addl
iret
or
jnp
jae
dec
sub
mov
outsb
fsubl
rorl
pop
and
and
ret
pop
xchg
cmp
xorl
jbe
push
int
leave
and
jbe
stc
sti
loope
rclb
jmp
xlat
or
mov
push
idivl
inc
xchg
popa
rclb
je
stos
sarl
cs
stos
int
add
orb
iret
mov
xchg
pushf
movsl
push
inc
and
jg
jecxz
faddl
aas
sbb
mov
jp
cltd
cmpsb
mov
int3
jbe
push
adc
idivl
pop
fsubp
cs
xor
and
aam
mov
push
and
mov
cmp
das
aad
xor
popa
add
dec
loop
fcmovb
stos
and
stos
stos
mov
mov
out
mov
imul
mov
pop
call
push
aam
mov
sar
xor
das
fstpl
adc
cmp
cmpsb
and
push
xor
loop
fisubrl
jg
and
jle
hlt
cmp
mov
cmp
cmp
ljmp
push
inc
test
jbe
push
or
or
cmp
test
fnstenv
jp
xor
lcall
adc
outsl
mov
push
push
inc
outsb
lahf
cmpsb
adc
lahf
mov
cltd
imul
outsl
insl
cmpsl
ficoms
mov
out
adcl
out
repz
imul
mov
jnp
or
cs
mov
out
mov
lcall
sbb
inc
xor
push
mov
js
dec
add
jg
cmp
sub
adc
jg
jmp
inc
mov
pop
dec
iret
call
jae
adc
push
mov
scas
cmc
jno
cmp
mov
jne
cmpsb
js
inc
enter
cmp
aas
adc
dec
xor
in
pop
or
mov
xchg
push
lret
pop
cmp
fdiv
push
mov
packuswb
inc
xor
push
lcall
js
test
aaa
mov
xchg
fcmove
pushf
add
and
mov
aaa
arpl
repnz
lret
xchg
jmp
loope
pop
lret
push
into
incb
cmp
push
sub
inc
inc
andl
rcrb
jmp
into
sub
ljmp
dec
cmp
push
cli
inc
pop
imul
sbb
push
enter
mov
sub
rolb
fdivp
insl
jb
add
adcb
clc
xor
hlt
dec
in
or
shlb
jns
and
dec
lds
in
arpl
adc
icebp
pop
aaa
iret
mov
popa
cmp
stos
roll
clc
push
shrl
sub
pop
xchg
xor
std
stos
test
shr
mov
jl
int3
cmp
lock
and
sti
pop
data16
stc
mov
lret
ss
xor
fwait
lcall
adc
outsb
mov
mov
dec
ret
loop
pop
imul
push
mov
push
in
mov
sub
inc
pop
lock
aaa
cwtl
and
outsb
scas
icebp
inc
lcall
fildl
addr16
dec
sub
mov
inc
mov
pop
nop
in
mov
mull
jp
icebp
leave
sub
xchg
jb
test
sarb
in
pop
mov
and
mov
and
fsubrs
push
sbb
lret
jne
xchg
sbb
and
sti
add
xchg
mov
jnp
cltd
dec
jp
dec
jl
dec
inc
lret
lret
push
adc
out
push
ja
push
push
adc
mov
adc
xlat
pop
and
cmp
pop
push
mov
dec
dec
pusha
pop
cmpsb
cmp
popf
push
mov
cmp
xlat
icebp
mov
push
imul
lods
popa
xor
jns
mov
idiv
lcall
mov
cmpsb
inc
inc
jae
cmpsl
mov
inc
dec
popl
ss
xchg
cmpsb
arpl
cmp
std
or
jns
add
flds
inc
ds
aad
gs
ljmp
hlt
mov
sbb
pop
ficomps
ds
andb
jg
pop
es
sbb
rolb
leave
cmp
cmp
cld
dec
mov
push
xchg
and
adc
mov
enter
dec
push
and
cs
mov
xor
mov
shrb
fldcw
pop
xor
or
xchg
jp
mov
mov
cmp
dec
and
mov
and
or
popa
in
inc
add
push
adcb
push
mov
xchg
sarl
cs
xor
adc
stos
cmc
jbe
scas
aaa
bound
xor
je
sub
dec
pop
rol
fildl
movsb
and
mov
lea
sti
cmc
mov
decl
sub
mov
add
loope
mov
arpl
push
cmp
push
decb
cmc
mov
inc
iret
xor
and
pop
decb
sti
sub
repnz
stc
mov
popl
sti
inc
push
mov
test
lea
sbb
lahf
fwait
or
mov
arpl
mov
ret
cs
xchg
shlb
sti
cltd
add
shlb
rcrl
nop
push
sbb
cmc
push
add
mov
xor
cwtl
mov
pop
fs
push
into
sbb
sbb
scas
and
outsb
sub
push
pop
fcmovnb
cs
sub
repnz
mov
and
mov
mov
test
mov
cmpb
fld
jo
adc
pusha
xchg
cmp
mov
in
movsl
xchg
adc
sbb
nop
pop
cld
push
mov
lret
sub
stos
cmp
aaa
int
ja
add
pop
lods
test
fnsave
cmp
rorl
out
sti
out
push
inc
outsl
jge
imul
shlb
mul
ljmp
xor
jns
fadds
mov
pop
pusha
sub
push
ds
loopne
sbb
mov
mov
fwait
lahf
jo
addr16
std
xchg
lds
arpl
jecxz
bt
and
cmp
pop
insl
sar
push
push
pop
out
and
decl
loopne
push
xlat
pop
ret
mov
lcall
mov
sub
das
xor
leave
mov
pop
push
fcmove
sub
mov
push
mov
dec
fdivs
addr16
call
sbb
push
ficomps
jmp
std
mov
enter
mov
stos
push
daa
scas
cmpsl
xchg
cltd
push
push
aam
mov
mov
loop
nop
mov
dec
ja
mov
jns
sbb
push
sub
mov
das
negl
cmpsb
sub
clc
mov
inc
pop
mov
lods
inc
pop
push
negl
jbe
stos
scas
dec
and
shrl
out
pop
cmp
imul
out
mov
sub
add
fisttpl
add
inc
outsl
push
jnp
mov
or
xchg
push
push
push
adc
negl
dec
stc
mov
popf
clc
nop
in
mov
cwtl
ficoml
ss
outsb
fsubs
aam
in
lea
dec
mov
cwtl
adc
clc
and
pop
mov
inc
out
stos
ds
nop
icebp
jns
pop
mov
mov
push
cmpsl
shll
cmc
or
out
cs
gs
add
mov
xchg
jno
xchg
int
push
ret
ds
jne
outsb
xchg
pop
shlb
mov
mov
push
mov
jmp
repz
jo
xchg
ljmp
push
aaa
insl
and
pop
popa
push
insb
mov
sahf
push
cs
jp
mov
pushf
xor
pop
in
add
xor
stos
icebp
xor
cmp
mov
or
mov
cmp
mov
mov
cmp
fildll
loope
dec
clc
in
add
cmp
dec
sub
pop
icebp
addb
ds
push
ss
xchg
push
int
mov
rolb
and
jae
shrl
mov
jecxz
pop
pop
adc
ds
add
test
add
or
cmp
sub
repnz
out
dec
test
mov
jbe
fwait
rolb
not
mov
dec
add
mov
and
mov
repnz
push
push
pop
mov
stos
sbb
xchg
xchg
add
jl
gs
xor
or
mov
mov
jae
pusha
fmuls
cmp
pop
aam
push
or
mov
fcomps
pop
cmpsl
dec
inc
and
sahf
ds
push
repz
leave
stc
ja
mov
push
nop
outsb
cmc
pop
stc
mov
inc
pop
pop
jae
push
cmp
cmp
sbb
insl
dec
ret
pop
mov
outsl
pop
ret
cltd
cmp
push
jp
int3
cmp
call
cmpsb
mov
loop
stos
mov
testb
inc
mov
fistps
jl
mov
les
subl
repnz
jmp
divb
imul
xchg
sub
jbe
cmp
fadds
popa
push
cs
jns
pop
xor
out
jge
movsb
xchg
pop
sub
movsb
adc
stos
mov
adc
mov
adc
fsub
jae
jo
ret
daa
push
dec
das
out
lret
sub
rorb
movsl
jg
xchg
pop
mov
pop
sti
push
mov
pop
das
push
mov
pop
fcmovb
lock
cmc
in
cmp
lods
pop
icebp
jecxz
fcmovnu
dec
adc
imul
cmc
out
add
pop
aad
fadd
cs
dec
mov
fcmove
or
push
mov
or
mov
adc
fwait
out
rorb
jnp
and
in
mov
subl
pop
aas
sahf
sub
and
test
cli
scas
icebp
sub
xchg
icebp
and
imul
outsb
xchg
imulb
pop
adc
ficoms
push
mov
les
jbe
pop
stos
sub
aas
mov
push
rcll
jmp
test
xchg
jle
or
adc
cmp
outsb
sahf
mov
loop
or
inc
jmp
dec
ss
jae
divl
or
orb
pop
stc
shll
cld
shrl
xor
loopne
add
insb
ficoms
lods
xchg
sbb
imul
shrl
in
cmp
mov
cmp
insl
mov
push
mov
xor
repnz
mov
and
add
cmp
stos
jbe
xor
mov
xchg
inc
push
mov
int
in
push
cmp
mov
cltd
loopne
cmpsb
pop
sbb
cwtl
shlb
push
mov
add
lods
sub
test
adc
inc
xchg
jmp
into
xlat
xor
movsl
mov
sbb
or
aaa
in
jb
cmp
push
mov
push
cwtl
xchg
mov
adc
stos
inc
movsb
mov
mov
rorb
or
in
test
jle
cmp
and
inc
test
sti
push
popf
test
lods
imul
jo
cmp
nop
mov
mov
test
cmc
cmp
shlw
pop
pop
pop
jno
lret
jle
push
insb
int3
daa
inc
cmp
in
mov
sbb
mov
idivl
push
test
lock
xchg
pop
hlt
xlat
hlt
xchg
shrl
cld
jae
mov
mov
jne
dec
sbb
out
sub
leave
push
aaa
insb
fsts
clc
add
add
loopne
inc
sbb
pop
adc
mov
in
push
scas
add
mov
fabs
cmc
jp
mov
lret
lret
dec
push
pop
in
bound
xchg
jle
lds
or
xchg
xlat
lahf
ret
out
cmp
sbb
popl
dec
cmpl
xchg
ds
dec
in
adc
push
sub
out
loop
in
xor
std
mov
mov
shl
bound
push
pop
iret
leave
push
cmpsb
or
flds
sti
push
dec
adc
cmp
jo
leave
dec
int
sub
repnz
cwtl
mov
mov
ret
adcl
cwtl
popa
push
pop
out
inc
push
inc
mov
hlt
add
mov
ret
mov
shlb
and
fisubl
lock
lock
std
jecxz
dec
dec
xchg
mov
and
aad
cmpsl
xor
push
push
xrelease
sbb
adc
lahf
jno
mov
movsb
flds
adc
loopne
je
aaa
pop
or
je
push
inc
aad
aaa
add
scas
stos
and
xor
sbb
mov
cmp
iret
in
test
lret
inc
mov
sub
hlt
ds
pop
pop
dec
addr16
call
jbe
enter
jbe
cmp
xchg
adc
inc
adc
fcoms
adc
xchg
mov
aas
fisttps
popa
clc
sub
stos
in
jbe
cmp
xor
cmp
shll
je
and
insl
jno
retw
js
aaa
sbb
cmp
sahf
cmp
sub
repz
call
out
sbb
mov
lds
sub
jae
xor
leave
stos
inc
pop
and
jae
xor
clc
jno
vaddsd
mov
jge
sub
mov
fcmovnu
mov
mov
test
cmpsb
or
es
fimuls
hlt
ljmp
cmpsb
out
mov
sbb
imul
iret
mov
sub
fisubs
cwtl
icebp
ds
cmpsl
jmp
inc
fs
add
insb
neg
cmpsb
test
lcall
and
into
xor
sub
aaa
sbb
mov
or
imul
and
xlat
sbb
test
fcmovnb
int3
dec
enter
xchg
pop
loope
std
hlt
mov
test
repz
arpl
mov
mov
pop
and
adc
sbb
je
or
jae
out
movsb
movsb
push
and
lds
cmp
std
clc
sahf
inc
push
jne
jnp
pop
mov
sub
insb
push
xchg
out
pop
mov
pop
dec
pusha
rcrl
push
lods
loopne
aad
icebp
arpl
pop
lret
out
cwtl
cmp
jnp
adc
aaa
mov
mov
shlb
push
jo
popf
int
out
aas
loop
out
xchg
fcoms
shl
ret
ljmp
test
cmp
push
push
stos
or
inc
pop
aaa
sbb
clc
rcr
mov
shll
leave
push
enter
fsubrs
stos
pop
mov
mov
add
xchg
out
sub
and
sub
jecxz
scas
mov
in
jbe
subb
test
ja
repnz
cld
jnp
push
inc
aad
rcrl
mov
mov
adc
js
pop
shlb
jmp
pushf
push
jp
push
push
gs
cmpsb
subb
pop
lret
jnp
dec
pop
lret
or
movsb
mov
and
iret
pushw
icebp
call
mov
pop
jb
adc
inc
ds
add
push
push
pushf
xchg
loope
fwait
and
sbb
loope
cmpsb
pop
pop
jg
mov
lahf
daa
pop
int
int
pop
andl
movsl
lret
in
icebp
xor
pop
fldcw
clc
cld
sub
sub
lcall
iret
inc
sahf
mov
test
insb
xor
xchg
mov
mov
imul
aas
fs
lds
jo
inc
lcall
sub
stos
packssdw
out
gs
xchg
mov
mov
out
pop
inc
test
stos
cltd
add
cli
adc
add
data16
test
test
inc
mov
rclb
sti
lcall
sahf
push
repnz
int3
add
or
iret
insl
add
enter
or
jl
aaa
js
or
shl
pop
bound
sbb
adc
sub
cmp
outsl
rorb
adc
mov
ss
fsubl
iret
pop
int
test
fnstsw
sub
mov
mov
in
call
push
loop
and
adc
add
icebp
jno
sbb
orb
negb
push
jnp
inc
jb
jecxz
int
jae
sti
pop
mov
push
inc
dec
fsts
sub
and
aam
ror
sub
or
lcall
cmp
pop
or
shl
insl
sub
sub
lcall
mov
mov
or
inc
in
dec
cmc
xor
cwtl
lret
and
sub
mov
cmpsb
outsl
mov
sub
push
xchg
dec
jb
aam
xor
fisubrl
xchg
mov
mov
push
loope
push
inc
push
dec
dec
insl
sub
push
cmp
and
or
lock
imul
dec
push
in
inc
jg
add
pop
mov
pop
paddq
aas
adc
aaa
notl
iret
mov
and
sub
push
and
mulb
jp
push
into
nop
imul
ss
xchg
mov
lea
movsl
std
fdivs
aas
sarl
das
gs
imul
mov
scas
fimull
xor
jno
pushf
insl
scas
fsubrl
xlat
pop
dec
jle
dec
lods
adc
ljmp
mov
out
int
out
sar
cltd
jnp
iret
dec
jnp
add
fildll
decb
fdivl
xor
rorb
jmp
sbb
jno
idivl
insl
into
fcoml
rorl
xchg
in
mov
inc
mov
cmpb
enter
push
adcl
xor
in
test
add
or
push
ja
push
dec
dec
jmp
pop
xor
sbbb
ja
pop
inc
pop
gs
push
xchg
rcrb
push
jge
dec
sahf
lds
sub
jmp
push
push
inc
sbb
adc
enter
or
arpl
xchg
dec
iret
loop
lahf
jae
jae
push
shl
in
cmp
and
push
ja
pop
icebp
jns
pop
aas
imul
or
add
jb
repz
xchg
ss
dec
out
mov
into
lods
jnp
ja
pusha
in
gs
cld
sub
movsb
jns
icebp
add
pushf
cmp
shlb
pop
insb
stc
loopne
lea
mov
or
cmp
inc
xor
iret
shll
insl
cld
mov
das
rcll
xor
xor
icebp
dec
adc
decl
sub
push
sub
mov
lock
scas
rolb
mov
sti
push
in
mov
das
sti
jecxz
pop
xor
push
rdseed
cs
mov
xor
mov
in
sub
lock
push
icebp
mov
fildl
sbb
xor
hlt
or
iret
addb
out
sub
sar
jno
cltd
cwtl
out
sbb
add
mov
rclb
pop
mov
mov
mov
xor
std
mov
hlt
mov
loope
inc
jmp
dec
outsl
dec
aas
bound
pop
roll
popa
fs
push
shlb
push
ret
pushf
sti
add
subl
shlb
jecxz
ds
int
cmpsl
or
inc
sbb
sub
loopne
and
out
jno
aad
mov
mov
inc
icebp
stos
mov
push
fsubrs
sub
jp
fisttpl
push
insl
jp
test
test
lods
loopne
ss
popa
imul
lods
cmc
ror
mov
push
pop
or
pop
push
js
test
stos
out
push
sub
bound
or
sub
shll
fldt
fmuls
out
sub
cwtl
outsb
daa
repz
cmp
xchg
adc
mov
mov
xlat
jne
or
add
inc
insb
mov
insb
mov
dec
nopl
and
jnp
xchg
dec
das
cwtl
or
xchg
sub
push
jge
and
movsl
cmp
mov
outsb
sub
sbb
cmp
out
popf
ljmp
ss
das
push
addr16
jo
addb
xlat
dec
inc
fwait
mov
xchg
jecxz
and
add
out
cmp
and
hlt
ffreep
iret
push
mov
mov
and
cmpsl
ja
inc
cmp
leave
fnstsw
fcomps
xchg
cmp
dec
arpl
xlat
ret
in
or
cltd
hlt
jg
mov
int
sub
xlat
mov
mov
inc
aam
mov
jl
mov
mov
fcmovnbe
dec
nop
lahf
int
lahf
mov
outsl
mov
sub
pop
xchg
popf
popf
aas
ret
inc
dec
pop
js
jg
adc
test
stc
pop
inc
pop
cli
xchg
maxps
sbb
push
sbb
pop
rcll
out
ret
fs
movsb
ljmp
lret
push
pop
push
aaa
lret
in
mov
in
add
test
repz
lock
cmp
lcall
xor
movsl
fadds
mov
jbe
lret
push
push
loope
movlps
gs
hlt
imul
dec
mov
jmp
mov
pop
ljmp
pop
fucom
das
shufps
sub
das
xchg
mov
jmp
xchg
data16
out
fisubs
les
mov
sbb
popl
mov
out
cmc
imul
arpl
mov
xchg
cmp
icebp
xlat
jecxz
push
scas
popf
sub
loope
aad
aam
xor
stos
or
pushf
xor
jmp
push
aas
sarb
ljmp
or
sarb
mov
inc
xor
popf
lods
xchg
lds
imul
sbb
pop
mov
cmp
lcall
push
cli
sub
fldenv
iret
addr16
sbb
cmp
mov
cs
jno
push
scas
repnz
pop
push
aaa
pop
fs
mov
jae
xchg
xchg
push
repz
mov
xchg
xchg
xchg
ss
mov
rcrb
mov
jbe
flds
jge
mov
jae
add
hlt
pop
jbe
mov
call
ljmp
pop
sub
mov
pop
xor
mov
ror
fstl
xchg
aam
int3
jle
push
xchg
fwait
mov
outsl
aaa
dec
xchg
imul
stos
inc
lahf
dec
jle
add
pop
or
jo
xchg
ss
nop
dec
fistps
pop
insl
lock
push
mov
and
test
mov
sub
lcall
cmpsl
inc
and
stc
and
dec
lahf
sbb
inc
push
xor
mov
leave
push
imul
mov
cli
push
jge
dec
gs
call
cmp
scas
aad
adc
jp
push
push
sub
ret
sub
xor
ljmp
xchg
inc
xchg
fbld
aad
xor
jbe
stc
cmp
shl
gs
xor
xchg
adc
ret
das
jbe
test
in
cwtl
int
inc
in
dec
xchg
jo
std
inc
push
inc
scas
sub
sti
insl
std
push
push
jbe
int3
cmpb
xchg
cmp
xchg
ret
pushf
jb
sub
int3
arpl
pop
mov
add
leave
adc
fildll
out
mov
inc
push
outsl
and
daa
add
lods
stos
fldenv
ds
imul
jmp
jne
adc
out
sub
cwtl
sub
inc
cmp
xorl
loope
nop
jl
push
flds
push
push
mov
ret
sub
imulb
es
add
xchg
dec
ret
lret
aam
fucomp
mov
add
xchg
mov
loop
hlt
add
jge
add
mov
dec
mov
outsb
es
pop
add
xchg
xor
mov
cltd
inc
xor
jmp
mov
subl
mov
mov
jb
xchg
mov
inc
dec
push
in
mov
call
push
mov
dec
cmp
andb
leave
fwait
jge
adc
outsl
inc
push
aaa
jg
and
in
inc
lock
pop
sarb
notl
cmp
idivl
cwtl
xor
cmp
or
add
add
fldcw
jg
mov
and
add
out
mov
adc
push
sbb
pop
in
test
xchg
loopne
es
insl
add
fcomi
notl
or
ret
pushl
imul
out
xchg
shll
mov
ss
ss
cmp
cli
ud0
pop
sbb
ljmp
sub
and
leave
sbb
js
sar
and
jl
addr16
push
adc
mov
das
aaa
lock
inc
mov
mov
loop
aaa
mov
xchg
mov
adc
mull
mov
lahf
pop
push
sub
pop
mov
push
xor
sbb
xorl
adc
repnz
je
sbb
pop
dec
cld
mov
repz
xor
fisttpl
mov
or
inc
push
out
lahf
fwait
mov
pop
mov
cmc
inc
pop
xchg
push
xor
ret
imul
mov
inc
in
jns
sbb
or
in
lret
addl
pop
enter
cmp
out
sub
adc
mov
adc
addr16
or
xor
pop
xchg
mov
xor
xor
xor
mov
rcrl
jl
jp
ret
mov
sub
insb
jge
push
push
mull
xchg
pushf
sbb
mov
mov
push
xor
mov
push
xor
icebp
outsl
inc
dec
adc
xor
xchg
cmc
mov
loopne
das
repz
push
lea
or
clc
jge
xchg
daa
sbb
fdiv
xchg
adc
int3
icebp
inc
mov
rorl
mov
or
adc
sti
sub
add
mov
jnp
and
xchg
test
clc
pop
dec
adc
cltd
xorl
sub
fwait
push
jbe
push
ret
ficomps
in
scas
cmpsl
dec
shr
in
sbb
int3
cs
iret
imul
or
adc
cs
divl
pop
push
adc
das
pop
and
xor
lock
mov
mov
add
in
xor
xor
push
minps
shlb
scas
xor
cmp
dec
cmpsl
sbb
xorb
inc
testl
lret
pop
jne
stos
sahf
add
mov
ja
jbe
lcall
xchg
jnp
cmp
xor
cmp
push
cmp
xor
sub
daa
ss
push
ljmp
int
xchg
ljmp
xchg
arpl
lds
imul
outsl
inc
outsl
test
jbe
js
cmp
int3
inc
lods
stos
adcl
sub
movl
call
xlat
or
les
loop
cmpb
add
mov
outsl
rorl
movsb
mov
xchg
adc
and
clc
lret
jg
insl
sbb
and
push
mov
imul
fists
pop
pop
push
in
loopne
outsb
xchg
loope
xchg
or
jl
xchg
add
or
mov
inc
fldenv
dec
sbb
in
adc
sbb
push
js
cmp
inc
cmpb
jbe
push
lret
mov
cld
call
pop
sbb
aas
push
daa
les
xchg
les
sbb
and
dec
mov
add
icebp
out
jb
ljmp
dec
daa
adc
mov
movsl
fsubs
cmp
sbb
in
cmpsb
aad
aas
idiv
stos
imul
or
sti
or
roll
jae
icebp
imul
mov
xchg
clc
inc
dec
daa
out
mov
and
jnp
lods
imul
adcb
scas
gs
shll
in
icebp
les
ljmp
mov
js
hlt
push
mov
sub
fsubs
sub
insb
inc
cltd
mov
xor
pop
mov
cmp
add
add
cmc
arpl
movsl
pop
cs
insb
xor
or
movb
out
mov
or
movsb
xor
mov
mov
sbb
ret
add
lds
movsb
arpl
loop
jecxz
inc
push
xchg
inc
dec
arpl
fimuls
mov
daa
cld
ljmp
cmpsb
aas
cwtl
jbe
push
or
ja
jno
divb
shl
mov
in
add
mov
dec
sub
cmpsb
pop
and
push
popa
test
loop
inc
sub
inc
pop
ja
int
cmp
or
jae
jl
inc
bound
cmpsl
push
jp
xchg
js
push
dec
mov
clc
bound
data16
mov
mov
testb
outsl
shll
sahf
je
fwait
dec
jmp
xchg
mov
fnstenv
sub
shl
fs
jbe
ljmp
test
filds
xchg
rorb
inc
xor
sbb
pop
xlat
dec
ljmp
rcll
shrl
push
mov
add
int
flds
iret
xor
test
add
xor
cltd
add
fldt
bound
cltd
std
pusha
fbstp
imul
sub
xorb
xchg
or
xchg
xor
and
imul
test
shrb
mov
fnstsw
fwait
test
pushl
rcll
mov
mov
in
in
sahf
mov
ds
daa
jmp
pop
jecxz
out
inc
and
xchg
sub
int3
stc
aas
mov
add
ret
and
je
xor
or
sarl
call
fcomi
xchg
mov
sahf
jae
mov
mov
insl
xchg
pop
pop
sbb
ret
dec
mov
pop
push
pcmpgtb
jge
insl
jecxz
sbb
enter
int3
add
fbstp
dec
mov
popa
sbb
movsl
andl
adc
dec
leave
repz
adc
sarl
jp,pn
push
nop
clc
or
ja
adc
push
mov
mov
test
rorb
insb
fisttpl
cmp
bnd
xor
add
inc
cltd
aam
jo
addr16
inc
fidivrl
mov
xchg
adc
aas
adcb
rolb
jg
sub
jecxz
aaa
loopne
addr16
xchg
sahf
mov
inc
xchg
xchg
mov
sti
mov
mov
xor
adc
mov
pop
sahf
dec
xlat
js
and
jp
inc
sti
leave
push
mov
mov
movsb
repnz
adc
mov
cld
shll
xchg
jo
mov
fdivrl
cwtl
xchg
lret
jg
mov
gs
lcall
push
fs
jo
fdivr
stc
stc
and
in
adc
push
ljmp
add
mov
sbb
sti
pop
adc
arpl
push
iret
aaa
jp
cmc
fs
aas
ret
mov
inc
mov
jge
ret
shl
aaa
jns
addr16
cmc
dec
lret
push
scas
push
repz
dec
mov
pop
push
sbb
mov
out
jo
xor
mov
adc
inc
mov
repz
fnsave
jp
repz
xchg
ds
mov
mov
add
je
loopne
ja
cs
lea
jnp
push
js
into
xchg
xchg
pop
push
or
mov
lret
repz
ds
addr16
lcall
jmp
bound
cmpl
daa
stc
mov
cwtl
dec
fsubrs
cltd
scas
xor
xchg
imull
jne
dec
cmp
mov
ret
mov
inc
bound
mov
repz
mov
fistps
jecxz
adc
add
cld
leave
in
inc
sub
fsubrs
push
push
pop
cmp
out
iret
clc
mov
inc
adc
jmp
rol
or
pop
mov
lock
jne
and
call
incb
push
call
push
xchg
ret
enter
adc
add
negl
xorb
or
cmpb
sub
ret
test
fmuls
mov
mov
cmp
xor
jle
jno
nop
or
shrb
mov
xlat
int
sbbb
ret
xchg
mov
pop
push
xchg
pop
out
fimuls
jbe
mov
push
out
js
mov
lock
jnp
imul
repz
aaa
jne
lods
pop
outsl
mov
lret
fsubrp
jecxz
or
stos
leave
inc
mov
clc
popl
ret
xchg
fcoml
lods
cmp
ja
mov
push
push
test
leave
mov
repz
inc
dec
insl
fimuls
xorl
in
pop
pushf
xchg
daa
aaa
or
xor
sub
add
stos
push
fwait
cld
push
test
push
xor
out
sahf
aaa
stos
fidivl
fbstp
lock
cmpxchg
fwait
mov
cmpsl
cmc
mov
js
adc
push
dec
mov
incl
in
xchg
jbe
outsl
xchg
addr16
inc
test
out
lcall
jl
sti
push
pop
scas
out
aam
pop
cmp
shll
inc
lods
cltd
sub
imul
pop
addr16
ret
movsl
adc
shrb
cmp
addr16
les
sbb
add
mov
jnp
ja
sub
jge,pt
sub
popa
pop
idiv
notl
add
movsb
or
and
pop
sub
push
lods
mov
cs
push
mov
ret
movsl
aam
pusha
cmpsl
or
jnp
sub
cmpsb
arpl
mov
out
xlat
lret
fcomi
pop
adc
xorl
iret
jae
cs
dec
test
or
int
stos
shrb
out
add
push
and
push
dec
xor
mov
mov
int3
mov
lret
call
loope
aaa
rcrl
jns
adc
jle
scas
jbe
movsb
adc
popa
add
push
es
test
test
jmp
clc
adc
mov
outsb
or
das
pop
add
lret
enter
dec
fbstp
inc
and
jp
push
add
or
xchg
adc
mov
rorb
ds
xchg
push
xabort
sub
mov
cmovae
lcall
push
lods
repz
xor
fisubrs
rcl
pushl
shrb
cmc
cwtl
inc
jmp
fnstenv
into
repz
ss
mov
btr
xchg
adc
movsb
mov
divb
call
jae
mov
jbe
sub
rcrb
cmc
xor
psubsb
test
insl
push
push
xor
jmp
ja
leave
mov
cmp
mov
and
addb
je
push
and
sub
inc
adc
ret
loopne
stc
cmpsl
add
mov
add
das
std
dec
jl,pt
repnz
cmp
into
jmp
cmpsl
int
ror
shll
stos
mov
add
out
arpl
adc
idivb
lods
xchg
addb
cwtl
pop
sbb
repnz
iret
cmp
jge
lcall
jbe
push
fcmovnbe
sub
cmc
xchg
push
jecxz
jb
and
mov
mov
mov
imul
push
xchg
nop
mov
mov
jp
lea
dec
xor
add
pop
enter
int
imul
mov
out
inc
xchg
mov
mov
dec
pop
cld
pop
xchg
cli
inc
sub
xlat
push
insb
push
push
inc
jge
pop
sub
stc
enter
shrl
cmp
mov
movsl
arpl
test
pop
popf
push
sbb
ds
mov
sarb
push
mov
mov
jnp
sti
out
cltd
nop
mov
add
push
das
aaa
mov
fistl
push
mov
in
pop
mov
pop
lahf
mov
lcall
inc
adc
push
lock
inc
mov
mov
out
imull
js
and
scas
enter
ss
pop
push
aad
stos
mov
mov
cmp
dec
dec
push
pop
loope
dec
dec
lods
pop
lds
js
stos
mov
fisubs
imull
sub
inc
mov
add
and
aaa
push
insb
ljmp
out
in
fnstsw
movsl
fldcw
jl
ljmp
mov
loopne
push
daa
mov
stos
push
fs
scas
or
daa
cmc
cmp
fldpi
or
stos
sbb
lcall
int
in
arpl
and
xchg
mov
cmp
dec
inc
xchg
repz
mov
in
insb
xchg
sbb
gs
lods
sub
push
add
push
sub
je
dec
mov
mov
push
xor
dec
inc
inc
push
add
out
push
mov
imul
cmpsb
mov
jmp
clc
dec
imul
outsl
leave
sahf
in
add
cmp
or
or
repnz
pop
and
subb
push
addb
arpl
in
sahf
jo
and
addr16
fldenv
nop
or
xchg
add
sarl
or
outsl
sub
clc
ret
arpl
call
xchg
pop
sbb
add
addr16
mov
in
lea
adc
jbe
or
xchg
pop
inc
fdivs
xchg
add
fiaddl
jbe
daa
push
xor
and
ss
adc
pop
mov
daa
out
stos
sub
fistl
out
int3
xlat
push
pop
call
push
push
pop
int3
lret
rcl
and
mov
addr16
rcrb
xor
adc
mov
test
int3
icebp
dec
popf
mov
pop
xchg
in
out
dec
xchg
in
and
out
and
icebp
repz
xor
mov
mov
jbe
push
scas
cld
rcrl
mull
add
bound
add
gs
push
shrl
std
aam
cmc
mov
inc
fmul
pop
push
xor
loop
push
repz
lock
scas
push
fmull
idiv
mov
shll
imul
shlb
jle
gs
adc
xchg
imull
push
dec
ror
mull
ljmp
idivb
insl
cwtl
xchg
or
or
iret
xor
fs
aas
xor
repnz
sub
addr16
mov
imul
sub
dec
out
jno
push
inc
inc
std
scas
lock
loopne
add
lea
insl
xor
xor
std
mov
test
cmc
aaa
jae
adc
adc
shll
fmulp
cmp
out
inc
push
ret
dec
bound
push
inc
cli
mov
push
cmp
pop
dec
outsb
imul
xchg
adc
aaa
xchg
je
aaa
popa
push
shr
push
add
push
stos
test
lcall
insl
sbb
inc
insl
adc
mov
cld
push
pop
adc
cmc
ror
mov
rorb
push
push
dec
add
adc
mov
cli
aad
add
mov
fdivr
dec
out
test
fwait
jg
inc
sub
dec
insb
pop
stc
dec
dec
in
pop
sbb
bound
aaa
cmpsb
pop
stc
and
out
cmp
push
cmp
sahf
leave
jne
repz
or
adc
sbb
mov
mov
push
inc
call
inc
gs
jo
movsl
sub
push
xlat
lods
and
mov
cmp
sbb
ficompl
inc
pop
lahf
shr
cld
pop
push
lock
jecxz
imul
push
or
mov
or
cmpsl
jecxz
lds
imul
xchg
inc
addr16
inc
test
loope
pop
dec
lcall
idivb
push
xchg
mov
les
int3
inc
sbb
das
ret
addr16
stos
leave
cmpsl
outsl
loopne
daa
cmp
mov
mov
and
aas
ds
es
aas
and
imul
popf
daa
leave
mov
mov
mov
and
popf
mov
push
cmpsb
sbb
lock
push
daa
enter
rcll
arpl
and
ret
lock
hlt
pop
pop
arpl
push
mov
push
ror
inc
lods
scas
pop
lock
mov
int3
popa
xor
push
push
lcall
pop
jp
outsb
lds
imul
dec
mov
mov
add
pop
add
cmpsl
push
add
inc
dec
push
not
and
xchg
aaa
test
mov
aas
sub
int3
je
mov
in
adc
cmc
es
insl
xchg
repnz
cmpb
ffreep
or
int3
in
sub
out
sub
sub
inc
pop
mov
or
mov
rcrb
or
push
jg
xor
and
xor
fiadds
gs
ret
sbb
in
sub
push
dec
in
sbb
pop
ficomps
jecxz
cs
cmc
lret
mov
fwait
js
lea
push
int
or
xor
xchg
ljmp
and
divb
ds
lcall
scas
decb
push
jmp
nop
xchg
adc
int
or
mov
rolb
repnz
mov
mov
dec
jmp
push
sbb
jecxz
mov
jmp
jb
cwtl
inc
inc
push
ret
sbb
and
out
mov
mov
mov
push
iret
inc
daa
scas
xor
or
pop
cli
leave
add
pop
mov
xchg
scas
cmp
jno
shl
mov
fwait
int
fstpt
or
jns
inc
push
addr16
jge
xchg
loope
out
mov
pop
and
cmpsb
xor
sbb
lret
arpl
orb
enter
out
mov
sahf
push
cmpsb
xchg
cli
jno
fstpt
cs
cli
push
fisttpll
cmp
clc
fbld
cmp
adc
push
xor
pop
aas
out
int
rorl
xor
movsb
fnstcw
imul
pop
sahf
test
lcall
fisttpl
mov
sahf
outsb
xor
lcall
mov
push
cmp
aam
out
iret
cltd
and
out
or
push
lret
jecxz
mov
arpl
adc
in
push
mov
daa
loop
mov
cmpsb
fimull
push
sub
xchg
lret
push
inc
xor
fnsave
mov
push
and
das
ret
and
xor
rorl
dec
pop
int3
sar
pop
mov
faddp
imul
jl
mov
jno
ror
rclb
aam
sub
mov
mov
ret
mul
ljmp
imul
cmp
arpl
fwait
notb
pop
dec
pop
pop
jae
cld
inc
sahf
mov
adc
add
dec
sub
ret
inc
or
fistpl
cmp
lahf
pop
dec
lock
nop
ret
and
in
scas
or
sub
pop
movsb
loopne
add
push
lret
subb
dec
je
push
jnp
in
aam
cltd
fcoms
xchg
arpl
cmp
sbb
scas
mov
jnp
push
fwait
popf
inc
int3
mov
clc
and
pop
or
and
inc
lret
mov
mov
rolb
xchg
add
push
decl
in
popf
lods
aas
das
add
stc
jle
aas
lods
xor
jns
mov
loop
inc
push
imul
push
push
bound
mov
lods
jne
adc
stos
inc
rcrb
stos
loop
or
pop
fbld
stc
jbe
mov
cmp
adc
dec
jl
inc
pop
cltd
insl
jmp
inc
ret
pop
adc
cld
arpl
jge
mov
stc
inc
sbb
mov
imul
adc
test
sub
das
out
cmc
mov
scas
xor
repnz
xor
addl
push
sti
ja
test
clc
into
lock
sbb
repnz
clc
int3
cltd
pop
adc
out
repnz
imul
push
repnz
mov
faddp
ja
lret
addr16
dec
push
sahf
inc
icebp
fistps
jle
nop
cmp
xchg
and
idiv
mov
call
cld
pop
jecxz
xchg
and
hlt
mov
cmp
dec
cmp
dec
dec
jl
dec
loopne
push
cwtl
push
ja
pop
lea
jle
mov
and
stc
xlat
mov
daa
mov
mov
ja
add
sub
xchg
fcmove
inc
mov
addr16
sahf
imul
push
sbb
shrb
int3
push
push
mov
adc
mov
xor
xor
jle
out
xor
lret
cmp
mov
lcall
mov
sti
ljmp
cmpsl
ror
and
xor
add
mov
dec
add
mov
xchg
mov
cmp
scas
or
adc
dec
mov
cli
insb
sbb
les
add
outsl
and
mov
and
and
lret
pop
int3
inc
cli
out
mov
or
push
imul
mov
push
mov
cmc
push
mov
ret
outsb
push
scas
xor
sub
mull
fwait
insb
inc
mov
punpckhbw
dec
lret
sarl
inc
sahf
mul
inc
xchg
push
ja
sub
int3
dec
push
and
xchg
clc
into
add
ficomps
jle
js
scas
and
or
pop
mov
in
sbb
imull
mov
ljmp
rorb
aaa
mov
hlt
lcall
push
or
pop
inc
mov
xor
cmpsb
in
mov
lcall
popa
divb
ss
js
and
rorb
mov
loopne
adc
ret
inc
fcomps
jge
jmp
fdivr
test
sbbl
into
aad
cmpsl
dec
cwtl
testb
push
fdivrs
test
and
sbb
cmc
sbb
fimull
ret
mov
cmpsb
push
jns
jns
xor
insl
arpl
cmp
filds
cwtl
or
jecxz
sub
cmc
mov
clc
subl
xchg
ret
push
nop
rcrl
xchg
fistps
jp
mov
std
jecxz
ror
sbb
jae
mov
pop
lea
daa
sbb
mov
out
lcallw
jecxz
and
js
jp
fiaddl
jmp
nop
addr16
iret
xor
jae
mov
rolb
lods
fisubrl
pop
pop
imul
imul
xor
jns
test
push
sbbb
iret
ret
mov
xchg
insl
and
fdivs
test
pop
shlb
adc
cmc
out
add
xchg
cmpl
icebp
jp
ja
adc
mov
in
icebp
jecxz
dec
pop
js
inc
je
adc
push
pop
inc
and
cs
lahf
fwait
cld
shll
repz
mov
fwait
xchg
dec
outsl
jne
pop
mov
lcall
imul
xlat
pop
push
cmp
sarl
cmovno
sbb
sub
and
gs
aas
push
data16
jecxz
jno
fucomi
lods
cmp
xchg
lds
gs
cmc
pop
mov
bnd
fnstcw
push
inc
stos
fsubl
lds
lahf
insl
inc
jecxz
inc
push
stos
or
push
cltd
add
das
add
fdivrp
divl
inc
icebp
lock
mov
pop
sub
addl
pop
push
movsb
aam
and
nop
cmp
cmp
in
inc
in
out
lcall
xchg
mov
add
cltd
in
xor
imul
fisubs
out
and
xor
add
jge
or
sahf
mov
mov
sub
outsl
dec
cmpsl
and
and
xor
enter
mov
add
pop
add
aaa
int
or
aaa
dec
imul
test
icebp
ss
xorb
sub
lcall
push
in
pop
cmpsb
cmp
enter
mov
pop
mov
mov
idivb
mov
ljmp
mov
adcl
mov
cmp
loop
xor
xchg
movsb
mov
mov
fisubrl
lock
mov
jmp
jle
lods
pop
push
push
stc
das
xor
mov
clc
inc
push
idivb
fsubr
sahf
arpl
dec
mov
rcrl
xor
cmp
ficoms
lret
sbb
idivb
and
enter
jecxz
pop
add
lahf
sbb
ret
jbe
lret
xchg
popl
push
xchg
pusha
imul
xchg
lods
jp
fwait
xchg
pop
cltd
mov
jbe
add
mov
xchg
leave
gs
int
xchg
pop
jmp
inc
mov
push
add
sub
and
aam
jmp
push
jo
adc
xchg
sbb
testb
int3
mov
dec
push
clc
pop
movsb
mull
pop
push
jno
rcll
push
pop
push
aam
pop
inc
aad
mov
gs
sub
aaa
sbb
loopne
out
xor
nop
sahf
xchg
aaa
xchg
movsb
ss
test
mov
mov
or
lret
fisttpl
inc
out
pop
mov
stos
clc
sub
cs
insl
ljmp
mov
xor
cli
xchg
fwait
mov
sti
xchg
out
out
test
or
sub
fidivrs
xchg
sub
mov
mov
in
or
shlb
xchg
cmp
push
out
mov
adc
inc
push
or
ja
mov
sbb
test
clc
mov
jb
fnstsw
fisubrl
inc
sbb
stos
addr16
je
xor
loop
inc
clc
fidivl
mov
mov
bound
inc
push
loope
push
jecxz
adc
imul
dec
popa
popf
add
sbb
push
push
cmp
xchg
push
in
mov
das
inc
cmp
push
popf
push
cmp
jmp
dec
mov
xchg
push
fbstp
xor
and
sub
lcall
cmc
or
adc
xor
loopne
mov
mov
pop
jo
mov
jp
fwait
sbb
ja
mov
loopne
sbb
pop
push
add
fsubrs
xchg
mov
mov
and
inc
lods
and
add
js
mov
movsl
jge
imul
or
sub
jmp
mov
outsl
fldt
cmp
cwtl
cmp
cmp
add
aas
cmp
mov
xchg
sbb
js
inc
ja
pop
in
insl
adc
push
bound
mov
lret
push
pop
fstenv
pop
div
adc
outsb
popf
inc
cmpsl
cmp
cld
std
mov
sbb
shrl
adc
add
xchg
ss
stos
push
shlb
or
cli
and
push
pop
lods
push
or
and
mov
xor
xor
dec
aad
push
xor
inc
std
or
mov
dec
jbe
pop
daa
inc
xor
add
ret
rorb
out
scas
xchg
push
sub
cmp
pop
xor
ds
in
mov
daa
ss
inc
repz
jno
cmpsl
inc
cmp
cmp
sub
cmp
jecxz
subps
ja
push
jle
dec
aaa
push
adc
mov
shll
dec
mov
mov
popfw
negl
aaa
mov
add
pop
xchg
pop
cmpsl
imul
push
push
out
mov
data16
sbb
xor
or
and
testl
repz
adc
into
xchg
insl
ss
out
out
jecxz
lea
pop
mov
int
push
cmpsl
inc
lret
dec
jb
mov
test
sub
sub
loop
jbe
sbb
jg
arpl
cmpsl
jne
out
out
mov
adc
fnstenv
sbb
sub
sbbb
cmp
inc
push
adc
in
popf
enter
ja
mov
fstl
loop
divb
mov
cmp
scas
mov
pop
enter
cs
les
push
push
sbbb
fwait
hlt
cmpsb
rcll
jnp
or
fucomi
outsb
dec
jae
mov
ja
dec
inc
mov
sbb
movsb
data16
pop
mov
mov
in
mov
int
leave
test
adc
sarl
les
sub
push
jp
sub
insb
repz
outsb
or
inc
mov
or
ja
lods
lcall
and
inc
pop
push
xor
imul
stc
cmc
out
xchg
clc
adc
lods
jl
pop
push
push
mov
imul
mov
push
cmpsb
xor
insl
and
sbb
scas
testb
cmc
cmp
or
xchg
lret
hlt
inc
mov
out
jo
mov
por
insl
cli
jno,pt
ret
jle
xchg
mull
and
jb
test
ds
sub
adc
pop
subl
addr16
jg
bound
ret
pop
sub
das
in
inc
js
jo
pop
jae
xchg
insb
sbb
mov
rcl
push
sbb
stos
mov
loope
add
cmp
jno
mov
pop
cmp
pop
ja
push
push
sub
fidivl
inc
aad
jmp
or
xchg
xchg
jb
mov
sub
enter
push
push
and
xchg
inc
cld
adc
push
inc
jae
adcl
or
push
push
pop
sub
xor
outsl
xchg
aas
arpl
int3
cmc
sahf
cmp
iret
pop
pop
nop
popf
mov
cwtl
add
cwtl
ja
pop
xor
ss
mov
stos
jae
arpl
sub
sbb
mov
sahf
jns
or
xchg
dec
jae
xlat
seta
rol
dec
fwait
jp
and
xor
dec
enter
xor
int
ss
mov
mov
dec
aaa
je
push
or
jne
insl
cmp
jg
fcom
xchg
imul
jmp
not
cld
aaa
mov
xchg
addl
pop
fwait
dec
inc
pop
mov
xor
and
pop
push
and
sbb
out
or
lods
push
cltd
lret
inc
orl
or
jne
or
cmp
and
pop
mov
cmpsl
testl
fistpl
xor
rcrb
add
aaa
or
xor
fiadds
lea
xor
iret
das
pop
fidivrs
orb
add
jl
mov
int
and
sbb
pop
fbld
outsl
mov
sahf
cmpsl
mov
mov
push
cli
cmp
jp
shrl
or
mov
push
cs
icebp
pop
out
leave
leave
std
pop
adc
dec
lock
test
push
hlt
out
mov
mov
leave
and
testb
push
lret
sub
xor
cmc
sti
jne
loop
test
add
jbe
cli
xor
push
jmp
clc
add
imul
mov
pop
shlb
and
dec
adc
xor
stos
cmpsb
cmp
jno
sub
mov
push
test
mov
mov
int3
leave
imul
orl
pop
xor
iret
lods
or
popf
or
ret
add
add
fiaddl
lahf
mov
scas
mov
mov
xlat
push
pop
mov
imul
leave
push
jbe
push
xchg
fidivl
lea
mov
xor
adcb
xor
adc
int
fs
sbb
dec
iret
sub
or
dec
jg
add
cld
fcoms
sub
mov
push
mov
loope
xor
push
out
cmp
int3
mov
shr
mov
mov
std
stos
mov
test
and
dec
hlt
and
out
sarl
push
popa
fmuls
testb
and
fwait
mov
stos
push
push
xor
ja
ljmp
dec
inc
je
and
lods
xchg
lret
ljmp
test
xchg
and
cmpsl
outsb
push
sahf
mov
jne
push
push
adc
or
orl
xor
insl
aas
push
adc
mov
xchg
sti
push
stos
sarl
cmpsb
into
cs
cmp
imul
test
pop
pop
out
push
out
adc
and
add
cltd
movsl
std
push
imul
sahf
xchg
xchg
and
push
shrl
mov
mov
lahf
ja
ja
xor
iret
lods
repnz
lea
mov
jns
in
mov
subb
cld
jns
or
xchg
mov
ljmp
test
xor
xchg
fdivl
adc
cltd
push
mov
les
sub
in
sbb
xchg
dec
push
cmpsb
pop
mov
popf
lock
scas
pusha
out
repnz
dec
xchg
and
jle
clc
stos
das
pop
push
push
nop
sar
bound
out
int3
scas
or
fs
add
hlt
scas
test
xor
pop
xchg
imul
xlat
jae
or
push
pusha
add
int
mov
inc
adc
insb
jle
pop
outsb
decb
jbe
adc
iret
fiadds
arpl
adc
mov
jnp
scas
clc
adc
sbbl
stos
push
sub
mov
inc
movsb
add
dec
mov
ret
xor
add
fmuls
ret
add
popf
jp
ss
and
sahf
push
push
add
push
or
inc
dec
pop
sbb
insl
lret
cmp
sub
push
fisubrs
cmp
jmp
js
push
sub
or
cli
out
in
aaa
cmc
lea
xchg
imul
pop
adc
and
mov
cld
inc
add
jno
daa
orl
and
mov
test
sub
mov
idivb
ss
jnp
out
add
int
lcall
pop
push
fdiv
loope
add
jnp
mov
fsub
cli
xchg
xchg
cmp
sbb
sbb
xor
ret
cmp
dec
insl
jne
and
sub
sbb
xor
pop
lgs
cmp
imul
jae
mov
cwtl
mov
or
pop
jl
aam
dec
pop
xor
mov
push
jl
loop
stc
or
test
movsl
mov
dec
andl
sub
sbb
jne
insl
xchg
inc
xor
inc
into
aaa
mov
jl
lret
loopne
sbb
or
dec
mov
dec
fbld
mov
mov
test
dec
mov
sti
jg
cmc
mov
outsl
mov
nop
mov
pop
testl
xchg
sbb
mov
mov
mov
sbb
outsb
mov
mov
stos
inc
imul
push
mov
mov
psllq
jecxz
cwtl
mov
dec
sub
pop
push
push
mov
push
cmc
push
imul
jno
subb
xlat
movsl
je
push
mov
pop
inc
mov
dec
ljmp
push
dec
jmp
iret
sub
inc
and
cltd
call
leave
enter
mov
xor
imul
mov
sub
mov
mov
xchg
mov
dec
cmpsl
andb
fstp
arpl
adc
lods
sub
cwtl
or
inc
rcrl
in
mov
xchg
push
jae
mov
xlat
addr16
jmp
divl
lods
out
negb
out
push
pop
ds
out
push
pop
or
xor
mov
mov
test
inc
mov
scas
xor
push
dec
dec
add
push
cmc
mov
mov
iret
adc
and
inc
push
jp
jecxz
and
sti
fmuls
es
pop
push
mov
cmp
inc
daa
jecxz
shrb
cmp
adc
add
test
adc
push
xor
mov
lods
jne
cs
push
enter
cmpsl
cmc
ret
xor
xchg
dec
iret
jns
in
add
push
les
pop
outsb
sub
aam
repz
jae
ss
jbe
jne
movsb
cmp
test
push
aaa
mov
lods
daa
add
stos
scas
shl
add
xchg
mov
pushf
cli
inc
mov
loopne
jmp
loopne
jge
cs
cwtl
fisttpl
cmpsl
or
rclb
hlt
lret
ja
sub
test
mov
xlat
sbb
pop
callw
jp
std
inc
lock
and
ljmp
mov
sbb
popf
sbb
add
add
ss
push
in
dec
xchg
dec
mov
xchg
cmc
aaa
mov
pop
push
mov
insb
xor
xchg
fyl2xp1
fisubrs
mov
inc
sub
xor
scas
xchg
leave
adc
pusha
cltd
adc
push
scas
mov
and
pop
cs
push
cmp
outsb
sub
cmpsb
mov
sub
dec
in
inc
mov
test
xorl
sbb
in
add
push
shlb
and
pop
mov
xor
out
jle
mov
fstl
jmp
sti
cmpsb
pop
in
or
sub
clc
mov
cmp
jp
pop
aas
loopne
pop
nop
jne
test
das
call
clc
test
imul
lahf
cltd
leave
lret
mov
stos
sbb
sbb
sbb
pop
out
jmp
cli
xchg
cmp
aas
jne
ja
push
imul
push
push
outsb
xchg
pop
dec
xor
pop
xchg
push
cmc
mov
adc
sub
mov
out
mov
xor
jmp
aas
pop
mov
stos
xor
dec
fwait
ret
inc
push
lcall
in
push
in
arpl
fs
adc
push
test
cmpsl
ljmp
push
cmp
push
push
adc
mov
dec
jp
testl
mov
jecxz
push
mov
pop
jmp
pop
jbe
mov
lea
cmp
notl
add
mov
sub
leave
insl
sub
adc
call
addr16
out
xor
adc
dec
adc
ja
mov
repz
cltd
mov
in
mov
cmp
stos
hlt
xlat
mov
xchg
sbb
mov
outsb
pop
ss
add
inc
xor
xchg
mov
cmp
mov
shrl
push
mov
mov
call
mov
jge
cli
cmp
sti
mov
ja
jmp
and
push
mov
aas
dec
sub
jg
push
dec
jge
and
lea
push
int3
jno
fidivl
cs
sbb
pushf
std
xchg
aad
sti
add
pop
sbb
xor
sub
dec
fsubrp
repz
hlt
add
xor
sti
push
rolb
subl
pop
js
mov
push
sub
outsb
and
mov
push
iret
jbe
into
fistl
scas
or
ljmp
jne
push
sbb
jbe
or
adc
xor
push
sbb
adc
and
lea
decl
xor
fdivs
clc
fdiv
dec
cli
push
std
or
cltd
rcll
xchg
fistl
xlat
popa
push
enter
push
inc
pop
hlt
test
hlt
lret
scas
aad
push
fisubl
sub
sbb
mov
addr16
inc
sub
mov
stos
and
invd
ljmp
scas
and
mov
push
out
cmpsl
cmp
inc
cmp
push
jge
mov
decb
pop
imul
mov
stos
xchg
xchg
add
cmp
test
sbb
mov
push
sbb
mov
mov
mov
pop
out
add
out
test
and
push
fdecstp
icebp
insl
or
sbb
and
xlat
mov
ud1
subb
out
jnp
fisubrl
pop
sub
mov
scas
or
push
addr16
addr16
sbb
imul
or
or
dec
mov
aad
out
mov
xchg
pop
add
push
enter
adc
or
loop
loope
lahf
je
sub
sub
fwait
xor
shl
xchg
rol
out
mov
repnz
pop
push
jmp
lret
lea
stc
add
out
cmp
inc
inc
imull
orb
lahf
fistps
inc
clc
pop
mov
inc
lock
movsl
dec
mov
inc
jo
pop
xor
pop
cwtl
dec
fcompl
in
adc
or
jle
mov
cmp
mov
mov
jnp
mov
outsl
iret
xchg
xor
inc
mov
jb
rcll
xor
ljmp
popa
movsb
mov
std
lods
mov
mov
adcl
cmpsl
shrl
jnp
cmovb
pop
push
repz
jo
xor
jp
jo
mov
fs
sarl
xlat
dec
out
and
mov
scas
xchg
lcall
or
sbbl
or
pushf
adc
js
adc
sub
mov
inc
call
lock
adc
cltd
push
add
into
daa
cmc
and
xchg
sub
mov
out
dec
or
xchg
scas
mov
or
mov
xchg
inc
notb
das
fsts
dec
push
inc
xor
jg
sbb
arpl
pop
jmp
lock
test
scas
inc
mov
gs
mov
lret
scas
jne
mov
scas
ja
sub
outsb
mov
leave
jp
iret
in
jl
cmpsb
xchg
sub
cmpsl
sub
mov
push
jns
pop
outsb
jmp
outsl
stc
pop
inc
push
sub
enter
scas
sub
mov
jp
loope,pt
ret
shrl
or
push
xorb
add
sub
aaa
mulb
call
sarb
js
inc
xchg
adc
lret
sub
add
inc
xchg
imul
jecxz
fidivrs
xor
rcl
subb
out
xchg
jno
movsl
dec
mov
xchg
or
sub
mov
cmp
imul
add
mov
stos
scas
dec
xor
mov
js
fistpl
jnp
add
scas
addl
pop
jne
add
loope
cltd
mov
insl
gs
jno
pop
pusha
jp
or
mov
or
mov
gs
mov
pop
push
clc
lcall
cmp
into
sub
push
push
cltd
jne
jecxz
pop
and
ret
jb
inc
jmp
and
lret
xchg
cld
into
fcomps
cmp
xchg
out
jo
mov
xor
sub
mov
dec
or
xchg
mov
scas
jmp
sub
add
dec
or
subb
lods
scas
outsl
nop
js
xlat
adc
aad
shlb
adc
jp
fistpll
pop
xlat
xchg
sbb
and
testl
notl
rolb
shrb
enter
aas
shrl
sbb
iret
or
pop
mov
sbb
mov
mov
jnp
insl
inc
jg
stc
aas
out
push
or
pop
mov
std
push
aas
sbb
and
in
push
xchg
adc
cmp
pop
inc
pand
push
mov
dec
dec
xor
and
lret
loop
dec
mov
lret
and
out
mov
dec
add
cmpl
inc
inc
xchg
jg
or
daa
jae
jecxz
lcall
jmp
lahf
xor
dec
std
pop
jb
add
subb
je
xchg
push
mov
dec
adc
ja
insb
cmp
nop
mov
and
mov
test
push
mov
repz
inc
and
xchg
test
sub
jl
scas
mov
shll
icebp
mov
iret
sub
lret
mov
outsb
inc
outsl
push
in
iret
push
push
xor
pop
pop
hlt
push
add
add
pop
pop
in
out
adc
mov
outsb
std
out
cmc
or
push
dec
jns
int
sbb
mov
xor
sub
out
sarb
popf
enter
cmp
leave
in
sub
add
mov
cwtl
push
ljmp
daa
mov
mov
das
test
mov
mov
push
test
je
insl
or
and
mov
addr16
lret
addr16
cs
push
lret
outsl
js
pop
ja
cmc
dec
or
sub
nop
repz
rolb
dec
test
push
adc
js
ja
mov
and
cmp
ror
push
ret
pusha
push
in
aam
scas
into
or
jno
push
in
pop
xor
push
inc
xchg
jb
lret
outsb
adc
jmp
dec
push
push
mov
std
mov
pop
and
mov
out
outsb
dec
mov
pop
lahf
pop
mov
int3
push
fdivrp
lcall
rcll
ja
stc
pop
mov
cs
les
mov
xchg
iret
mov
or
pop
inc
jp
xor
test
jne
ja
jb
int
in
sarl
adc
incl
inc
adc
adc
xchg
cs
inc
xor
orl
icebp
clc
jl
cmp
mov
je
xchg
std
dec
push
push
mov
das
mov
push
jle
mov
jnp
mov
das
stc
and
mov
lea
cmp
push
jl
push
aaa
pop
inc
or
psrlq
dec
loop
mov
sub
js
sub
jbe
and
mov
mov
cld
idivl
test
adc
pushf
pop
dec
pop
push
jbe
movsl
test
jmp
dec
inc
fidivl
cltd
dec
aas
ret
decb
stos
push
call
jno
adc
mov
jp
cmp
and
into
jle
add
lods
jle
in
push
or
dec
mov
cmp
addr16
push
gs
sbb
xor
mov
sbb
mov
jmp
jmp
int3
test
dec
xor
aaa
xor
and
sub
movsb
cmpsb
cmp
iret
cld
fidivl
ss
pusha
or
fidivl
testb
loope
mov
imulb
call
inc
cltd
mov
dec
shrb
add
out
xchg
cmp
pop
in
add
xor
aas
add
scas
outsl
mov
sbb
mov
sub
ds
imulb
cli
pop
out
data16
imul
adc
cmp
mov
cs
cmp
fmull
test
movl
aad
jmp
aaa
sbb
inc
push
fxtract
cmpb
jg
aam
lahf
addr16
xchg
adc
clc
push
mov
je
aaa
hlt
push
add
sbb
punpckhbw
ss
dec
add
xor
cs
test
shrb
inc
pushf
out
lret
xlat
dec
lods
test
xor
loope
jbe
mov
inc
jno
mov
xor
lock
mov
test
xor
mov
test
test
shrl
loope
push
adc
add
jecxz
mov
push
ja
xor
imulb
inc
daa
ret
push
sbb
cmp
sub
fbstp
push
outsb
mov
sbb
fwait
mov
sbb
push
xor
data16
dec
or
xor
hlt
rorb
call
fs
ds
mov
push
lods
push
outsl
scas
jns
out
ljmp
jne
dec
and
notb
pop
xchg
and
cmpsb
and
daa
cmp
cs
lods
xor
imul
jns
dec
stc
movsb
xchg
ja
and
xor
inc
cmp
out
mov
adc
pop
lcall
xchg
dec
add
mov
or
push
dec
push
mov
dec
dec
sbb
push
adc
push
stos
je
jbe
aaa
ss
dec
mov
or
lock
dec
out
addr16
mov
cli
pop
jg
mov
aaa
data16
imul
xor
xchg
popa
int
rcll
aaa
test
push
pop
and
sub
addr16
pop
sub
pop
out
call
jge,pn
inc
sub
imul
popa
movsb
xchg
hlt
push
xor
add
imull
mov
inc
es
fs
adc
addl
in
push
popa
lods
xchg
push
add
push
cmp
imul
inc
pop
mov
inc
xor
sub
sti
pop
jl
or
pop
sbb
shrb
popa
mov
les
and
xor
push
mov
push
mov
ss
or
inc
adc
int
xchg
fbstp
mov
inc
push
mov
test
push
sub
inc
ret
push
inc
aad
aaa
and
dec
inc
test
push
push
sbb
cmc
call
aad
loope
jg
xorb
ja
inc
dec
mov
sbb
psrlw
sbb
aam
das
cmp
test
sbb
cmpl
mov
mov
arpl
ret
imul
test
sub
mov
test
mov
or
cwtl
rolb
int3
dec
outsb
hlt
adc
pop
mov
das
push
rdtsc
addr16
push
pop
xchg
ror
cmp
sub
xlat
dec
in
dec
fwait
inc
xor
mov
sbbb
out
adc
sbbl
mov
cld
mov
dec
aas
and
or
jmp
mov
mov
and
add
inc
and
shrl
sub
sub
or
lcall
cmp
test
add
pop
cmp
pop
insb
outsb
inc
enter
jb
mov
xchg
call
inc
pop
mov
insb
sub
outsl
sub
xor
add
movsl
fs
pop
repnz
push
je
subl
and
mov
adc
scas
push
jecxz
dec
insl
mov
push
sbb
das
xor
inc
mov
cmpsb
or
cmpsb
mov
pop
cs
and
mov
sub
mov
or
int
lcall
cltd
lret
sub
pop
dec
out
sbb
xlat
insb
daa
jecxz
inc
sahf
mov
mov
mov
lea
das
test
pop
sub
mov
cs
ja
ss
mov
inc
adc
jno
pop
mov
sbb
in
mov
test
xchg
adc
mov
jno
xor
mov
pop
or
adc
pop
pop
sar
cmc
subb
shrb
or
cmc
or
xor
inc
and
dec
add
add
dec
outsb
bound
push
sbb
xor
sub
mov
inc
ja
sub
push
xor
sahf
mov
push
sub
add
ret
loopne
insb
jecxz
pop
out
testl
std
adc
xor
pop
lret
das
push
mov
iret
push
js
ror
aas
out
cmp
lret
sub
mov
xor
insl
testb
call
push
sub
icebp
jne
sbb
in
jne
inc
out
mov
jmpw
std
scas
xchg
jge
push
push
test
fists
jae
out
fldt
stos
imul
jecxz
or
cmp
sbb
pushf
mov
xchg
mov
push
push
es
shl
fldenv
or
mov
es
jae
push
or
adc
lock
and
fcmovnb
js
in
inc
int3
ljmp
addr16
xchg
ja
jg
sub
hlt
dec
loopne
cmc
xchg
divb
call
fildll
inc
lret
inc
ret
xor
jmp
loopne
jb
cwtl
push
in
mov
xor
jg
sub
jb
or
rclb
out
cmp
jb
adc
mov
stos
daa
pop
dec
pop
insb
test
sub
fisubrs
or
push
sti
js
pop
cmp
ds
jmp
dec
ret
arpl
mov
outsl
rolb
inc
pop
stos
jno
mov
sbb
fildll
xchg
inc
sub
and
and
sti
add
inc
xchg
test
fistps
movsb
jecxz
lahf
sarl
sti
add
cs
cwtl
pop
adc
into
add
cmp
gs
cmp
push
fsubrs
jl
add
leave
leave
push
in
jno
stos
mov
sub
dec
add
pcmpeqw
icebp
in
xchg
xchg
mov
fidivrs
cltd
xchg
imul
jbe
jg
add
jbe
push
mov
sbb
cmp
cmp
loopne
cmpsb
das
push
test
mov
repz
out
lods
std
pop
sub
inc
mov
ficompl
adc
js
or
mov
push
and
jb
in
lods
push
fstpt
insl
cld
inc
and
dec
rclb
addr16
xor
out
mov
aam
cmp
loopne
dec
cmpsb
xor
in
lods
pop
xchg
loopne
xor
leave
or
stc
iret
arpl
jno
push
cmpb
cmpsb
cwtl
xor
mov
hlt
mul
cmp
outsb
jae
lods
and
jle
xchg
std
int
leave
and
mov
or
imul
xor
or
sti
sbb
inc
and
in
inc
lods
sbb
dec
movsb
sub
out
daa
enterw
dec
dec
cmp
out
sub
aaa
adc
shlb
jle
mov
sti
fdiv
xchg
dec
out
movsb
pop
add
roll
jns
and
mov
push
pop
push
xor
sbb
mov
or
sti
cmp
lock
mov
lret
iret
mov
xor
jne
mov
inc
fwait
xchg
sarb
push
and
ljmp
xor
add
movsb
int
add
jp
pop
scas
call
dec
insl
push
xor
mov
mov
movsb
into
and
mov
sbb
es
dec
imul
push
js
adc
push
xor
pop
pop
insb
call
fldt
div
stc
push
scas
lahf
hlt
jp
pop
outsb
push
popf
fists
dec
cld
mov
push
insb
or
imul
mov
dec
testb
or
add
dec
inc
xor
or
std
inc
dec
aad
loop
jae
aam
in
in
jo
aaa
push
push
cmp
cli
pop
push
out
shrb
inc
mov
sahf
stc
pop
xchg
inc
mov
push
stos
ljmp
jmp
mov
or
fmull
push
in
daa
jmp
and
lcall
push
ds
pop
enter
fsubl
roll
sub
mov
int
cmp
stos
or
pop
outsl
jb
inc
inc
add
xor
ljmp
clc
mov
rcr
or
subl
jb
divb
push
push
lret
push
lcall
inc
xchg
mov
mov
out
cwtl
sbb
cs
dec
arpl
lret
clc
bound
dec
jbe
dec
push
fcompl
dec
gs
mov
jne
or
ss
or
sbb
lock
leave
ja
xchg
scas
int3
mov
dec
les
sub
inc
sbb
push
das
mov
test
in
or
shr
fdivr
ljmp
jmp
rcrb
and
jbe
stos
fisubl
daa
ss
inc
sub
xchg
inc
sbb
mov
stos
dec
mov
and
out
scas
mov
inc
lock
notl
scas
adc
cmp
loope
mov
imull
in
dec
lea
int
daa
int
rorb
xchg
fidivl
les
jmp
adc
add
cmp
in
xor
pop
mov
in
imul
xchg
jb
cmp
mov
push
mov
test
ljmp
out
iret
leave
sahf
or
rorl
xor
inc
mov
sub
sbb
lret
pop
pushf
push
and
repz
scas
rorb
jge
mov
ljmp
or
push
jne
sarl
dec
cmp
or
int
sub
cmp
dec
jnp
mov
enter
sbb
jp
add
and
push
fisubl
outsb
pop
loope
push
ret
sub
ret
divl
mov
adc
lods
sub
outsb
push
pop
lcall
dec
rcl
xchg
xlat
je
sbb
loope
imul
push
ds
je
out
sbb
icebp
adc
scas
call
mov
jmp
dec
inc
cmp
add
cmp
ljmp
pop
inc
jmp
fcmovnu
cmp
push
hlt
sbb
xchg
cs
and
fldl
repz
in
lret
sub
sub
call
movsl
xchg
repnz
rcr
push
push
mov
cmovae
jmp
cmc
ret
xorb
xchg
mov
pop
rcll
shll
setbe
loope
outsl
fiadds
jnp
cs
rcrl
and
inc
pop
push
mov
out
test
out
add
dec
cmc
and
mov
mov
or
or
sbb
sub
les
pop
sub
enter
insl
mov
shlb
out
adc
lret
ljmp
fidivrs
subb
loop
and
js
inc
loope
adc
js
cmpsl
lods
stc
popa
popf
cld
xchg
pusha
das
test
ljmp
dec
sub
hlt
hlt
mov
pop
out
rcr
and
mov
mov
pop
push
lods
pusha
inc
outsl
icebp
pop
push
ja
les
or
sub
fstps
pop
jnp
repz
pusha
pusha
inc
push
inc
mov
mov
sbb
mov
nop
push
lar
lods
or
mov
mov
push
hlt
pop
cwtl
or
ret
cmp
mov
mov
popa
rcrb
mov
inc
adc
mov
mov
in
cwtl
add
out
daa
xchg
sub
int
sarb
and
clc
sbb
imul
je
xchg
sub
stos
rolb
call
or
cld
add
or
adc
dec
sbb
and
push
ljmp
mov
das
mov
rorb
push
outsl
mov
addr16
sub
outsb
subl
lea
lods
in
lahf
dec
leave
out
outsb
nop
cwtl
pop
fldl
lahf
push
jno
jl
mov
sub
and
xor
xchg
hlt
lods
das
imul
lds
sbb
or
sbb
mov
in
into
inc
insl
in
scas
bnd
in
cli
sub
jb
int
cmc
inc
std
or
repnz
pop
inc
jl
hlt
pop
sub
cmp
ja
loop
or
mov
out
lods
push
fisubl
pop
sub
xchg
xchg
out
mov
and
sbb
movsb
insb
adc
iret
sub
push
adc
ret
rcrb
pop
mov
cmpb
xlat
xchg
insl
repz
jp
mov
mov
sub
dec
push
fnstcw
or
dec
push
jge
dec
cli
mov
and
andb
movsb
mov
pop
divl
or
and
insl
xchg
cmp
pop
sub
ret
push
int
cmp
cmc
popa
lcall
push
sbb
lcall
ret
lods
popf
in
or
shl
lahf
sbb
xchg
fimull
push
xor
sub
pop
xchg
xchg
adc
ret
xchg
pop
imul
xchg
pop
test
fbstp
loopne
mov
xchg
stc
loopne
inc
push
jae
cmc
mov
loopne
imull
add
push
mov
in
fsub
aaa
jmp
xor
sahf
mov
aas
inc
insb
ljmp
xchg
lods
stc
pop
incl
jne
mov
ja
mov
mov
out
mov
add
xchg
repnz
cs
iret
sbb
sub
dec
sub
pop
pop
xor
mov
rclb
lods
push
nop
and
pop
pusha
insl
fmuls
dec
js
ljmp
cli
jp
inc
sbb
dec
push
sub
imul
popf
add
out
jge
xor
stos
sub
call
in
sub
pusha
sbb
js
dec
test
mov
cmp
and
pop
ret
pop
adc
xor
iret
cltd
in
xchg
mov
add
sub
iret
sahf
sbb
jbe
test
or
push
push
dec
jecxz
stc
sti
and
jecxz
cli
mov
ret
outsl
mov
mov
jp
outsl
dec
jmp
sub
xchg
sub
jmp
push
test
xchg
out
jo
dec
adc
lret
insb
cmp
das
lahf
scas
out
mov
dec
and
lahf
adc
dec
lret
push
xor
lahf
jae
testl
lret
mov
orl
lea
push
aam
outsb
mov
dec
lock
mov
lods
arpl
mov
in
cmp
int3
or
out
mov
fwait
pop
dec
das
cltd
rolw
push
push
mov
mov
faddp
cmp
or
jmp
lods
pop
imul
push
pushaw
xchg
outsb
xchg
neg
mov
out
push
stc
pop
pop
or
scas
mov
or
mov
test
mov
mov
xor
loopne
xlat
enter
push
mov
les
lods
jle
roll
dec
jo
cmp
mov
imul
pop
enter
data16
dec
and
je
xor
lret
jo
sub
push
jb
push
lret
xor
xor
pop
mov
mov
mov
xchg
xor
nop
push
inc
arpl
and
xor
pop
xchg
push
jecxz
xor
pop
mov
sub
push
jb
stos
lock
in
xor
imul
dec
push
and
push
test
push
dec
push
cltd
sti
int3
mov
jo
daa
test
inc
pop
call
pop
test
mov
jnp
jp
sub
inc
sti
cmp
dec
out
ljmp
mov
leave
bound
dec
imul
push
push
add
or
repz
mov
stc
and
or
jbe
jl
ljmp
xor
and
pop
and
xchg
inc
pop
lock
daa
das
jp
push
les
movsl
stc
hlt
pop
insl
ret
loope
cltd
jle
rol
cmp
pop
xor
leave
loope
es
aad
xchg
xchg
sarl
lods
filds
das
jle
mov
addl
dec
ficomps
fmuls
pop
push
xlat
jmp
adc
fstp
bound
xchg
imul
dec
sbb
push
pop
xor
xchg
push
adc
dec
add
lods
jg
lea
stos
ljmp
mov
bound
jae
dec
or
lret
sbb
ljmp
push
cmp
loope
adcb
mov
js
xlat
movsb
ds
popa
aaa
push
cmc
or
xor
movl
or
pop
xor
mov
adc
into
das
shr
dec
in
aad
push
pop
nop
out
jle
test
mov
aaa
movsl
mov
fists
push
movsl
jnp
lahf
sbb
popa
rcll
imul
push
and
into
pop
pinsrw
dec
pop
mov
pop
xchg
jns
mov
mov
dec
fs
loope
sbb
mov
sub
aad
dec
jo
pop
dec
xlat
lds
jb
in
pop
and
push
inc
nop
je
pop
xchg
imul
bound
fldt
xor
scas
in
jb
imull
nop
loop
cmp
jae
cmp
outsb
movsl
mov
pushf
sub
mov
mov
imul
inc
jbe
pop
or
push
adc
inc
pop
dec
or
inc
mov
imul
mov
repz
cmp
scas
or
loopne
insb
out
push
push
push
sub
ficomps
mov
repz
mov
add
mov
divl
mov
xchg
lods
repnz
call
cmp
push
add
mov
pop
mov
inc
adcb
push
xor
std
and
xor
and
push
fwait
imul
mov
int
nop
mov
fwait
dec
xchg
mov
daa
and
push
rclb
lahf
idiv
mov
cmc
movsl
leave
xchg
daa
adc
and
stos
lods
and
xchg
push
fildl
pop
xchg
mov
ja
data16
outsb
inc
scas
adc
cmp
add
int3
push
adc
mov
dec
dec
aad
fs
cmpsb
mov
xchg
ja
into
daa
sarb
es
jmp
cmp
ret
pop
sti
mov
cmpsb
jno
lcall
push
in
xchg
outsb
sub
scas
loop
loope
imul
xchg
fnstsw
lcall
push
movsl
jno
push
sub
jns
xlat
divb
mov
aaa
and
inc
or
inc
scas
jne
int
sub
mov
sbb
adc
jecxz
dec
mov
lds
sahf
lods
fstpt
cmp
adc
adc
cmc
mov
pop
fsubr
cmp
sub
ret
jbe
mov
adc
aaa
out
mov
dec
sti
repz
outsb
pop
loope
pop
sbb
icebp
mov
outsb
or
out
mov
pop
xchg
mov
push
out
mov
mov
sub
js
test
test
dec
pop
xor
sti
ljmp
aaa
inc
mull
mov
push
dec
leave
add
lods
jno
lea
outsb
addr16
nop
cmc
int
ljmp
dec
mov
icebp
mov
push
or
mov
fiaddl
inc
or
pop
movhps
push
sub
xchg
in
mov
xchg
jnp
xchg
mov
outsb
mov
sub
pusha
lods
call
push
dec
sub
fildll
scas
pop
lods
subb
mov
jecxz
jmp
mov
xchg
inc
aam
mov
jge
mov
nop
or
cmp
sub
lahf
sub
lds
adc
arpl
iret
and
outsb
add
out
sub
sarb
ja
push
sub
add
push
sub
xlat
dec
popa
or
inc
mov
rcpps
mov
pushaw
sbb
scas
push
scas
rcrl
repnz
dec
jb
loope
xchg
pop
sub
popa
inc
addr16
inc
clc
sub
enter
loopne
xchg
ret
ss
pop
shl
in
pop
mov
rcrb
enter
dec
inc
pop
and
cmp
lret
std
rclb
sbb
pop
icebp
and
mov
daa
xor
adc
popf
adc
mov
jns
mov
sbb
in
arpl
jno
jg
and
fistps
mov
adc
and
iret
push
ds
inc
xor
mov
dec
roll
xchg
adc
in
nop
movsl
aam
dec
lock
loope
nop
dec
or
cmp
push
dec
scas
nop
out
in
adc
in
hlt
mov
add
clc
mov
push
rcl
inc
xchg
sub
lret
cmp
outsb
cmpsb
popf
cmc
clc
mov
push
imul
add
xor
out
inc
cli
scas
fiadds
mov
xchg
push
stos
ficomps
stos
jmp
aad
loop
xor
aaa
and
repnz
push
xor
jmp
test
cmpsl
push
xor
inc
sbb
xor
stc
sub
fwait
mov
cli
mov
add
shrl
jp
sahf
mov
ror
gs
xor
test
mov
xor
ljmp
in
dec
dec
aaa
shr
lods
add
dec
add
out
jnp
jmp
mov
inc
pushf
icebp
mov
ja
adc
and
push
mov
sbb
inc
adc
pop
fisubl
xchg
add
daa
inc
movsl
inc
mov
cs
add
or
and
and
mov
push
adc
and
out
jmp
or
cltd
pop
iret
pop
out
mov
sub
xchg
adc
rclb
pop
jecxz
sbb
cmp
lods
in
test
loopne
jg
loop
push
sbb
push
jbe
jle
call
add
inc
mov
cmp
pop
js
push
lock
cmp
or
cs
popf
xlat
mov
push
xchg
test
and
xor
mov
jmp
imul
nop
adc
iret
lods
insb
pusha
jae
cmp
push
jnp
and
outsb
inc
lock
push
push
fwait
test
loop
xor
inc
inc
inc
enter
push
xlat
fisubrl
mov
outsl
mov
and
jno
xchg
imul
sarb
int
mov
xorb
jmp
xchg
aas
cmp
lahf
clc
aam
and
adc
int
and
aaa
pop
mov
cmp
idivb
xchg
ret
push
or
mov
jb
or
cmp
xor
cmc
jmp
inc
push
lret
inc
lock
mov
popa
mov
mov
fimull
jp
movsl
cltd
mov
sbb
lods
repz
jnp
lahf
push
jbe
lock
mov
stc
xchg
cmp
mov
lcall
rcl
add
sub
fs
outsl
push
xor
cmc
mov
and
sahf
cli
fwait
mov
fisttpll
cwtl
std
xor
xchg
or
shl
inc
dec
or
movsl
fld
and
dec
inc
sub
subb
push
iret
mov
test
fs
pop
aas
push
mov
xchg
xor
sbb
xor
cmp
or
mov
jns
movsl
hlt
jmp
and
mov
popa
push
xchg
rclb
fldenv
xchg
jns
imul
xchg
mov
sbb
cmp
pop
lods
int
shlb
mov
shl
addr16
notb
punpcklwd
arpl
dec
icebp
dec
mov
ljmp
or
shll
rolb
inc
test
add
rcl
daa
mov
bound
mov
xor
lret
add
dec
mov
ljmp
sub
push
lods
cmp
push
jge
push
xor
pop
aaa
sub
mov
in
mov
cmc
jnp
and
push
pop
mov
stos
dec
daa
dec
nop
test
pop
popa
pop
repnz
cmc
pop
scas
dec
jne
shrl
pop
aas
fidivs
inc
sub
ret
test
mov
dec
mov
mov
cwtl
sub
sub
aam
shlb
sub
icebp
mov
add
push
inc
js
imul
sub
bnd
lcall
gs
jo
lock
cmp
pop
mov
imul
rcll
bound
out
aaa
or
adc
sbb
mov
test
jge
call
jne
pusha
lods
cmp
call
cmp
mov
dec
pop
shrb
push
repz
das
xchg
xchg
int
xor
mov
jbe
add
mov
jo
add
cmp
sti
sahf
inc
pop
stos
aas
iret
mov
aaa
insl
mov
cli
mov
popl
iret
mov
ljmp
movsb
stc
shrl
in
jmp
and
jge
imul
dec
fwait
dec
inc
enter
ljmp
repnz
dec
jno
pushf
jl
jae
inc
or
xchg
xchg
aas
sub
dec
nop
xlat
sarl
loop
cwtl
cmp
sar
push
push
aad
out
dec
pop
ret
adc
incl
mov
outsb
rol
repnz
and
mov
push
xchg
negb
jno
rcrl
or
dec
adc
mov
pop
fyl2xp1
daa
push
leave
movsb
xchg
push
divl
xor
les
dec
popa
shll
std
fs
sti
mov
xor
js
rcll
add
mov
ljmp
mov
pop
icebp
stos
pop
pop
pop
aam
and
dec
inc
mov
jmp
dec
in
aas
jbe
and
cmp
out
pop
shlb
jmp
push
sahf
xchg
filds
xchg
cmp
inc
or
push
pop
stos
inc
or
iret
iret
ret
loope
cltd
dec
or
das
loope
sbb
dec
call
in
push
arpl
dec
insb
pop
pop
pop
mov
xchg
xor
mov
mov
cmp
and
fisubl
imul
in
cmp
test
jb
jb
arpl
enter
or
fisubs
insl
jb
adc
cwtl
in
rcl
fwait
mov
pusha
inc
xlat
gs
jno
iret
push
dec
repnz
ljmp
insl
cmp
clc
fisubrl
and
adc
dec
mov
jno
faddl
in
mov
inc
pop
sub
sub
and
out
jns
in
mov
sub
jl
jg
outsl
push
subl
add
sbb
iret
push
lret
test
pop
push
mov
cltd
int3
cmp
jae
cmpsb
and
pop
xchg
push
xchg
pusha
icebp
and
enter
inc
ret
jbe
sbb
test
dec
les
and
shrl
jnp
jge
das
mov
addl
sbb
ficoml
cmp
jns
jle
loopne
daa
jg
imul
xchg
sbb
stc
rcrb
fsubrs
jbe
or
enter
rcrl
aam
or
cwtl
mov
xchg
test
cs
mov
pop
mov
mov
push
add
cmp
jmp
xchg
outsb
adc
int
popa
call
jns
je
inc
xchg
push
pop
sahf
cld
xor
iret
daa
mov
repz
xlat
jecxz
jecxz
dec
jns
enter
mov
stc
cmp
inc
pop
and
aas
stos
adc
stc
fsub
jp
and
and
imul
inc
scas
or
or
pop
lcall
daa
call
jmp
mov
xchg
das
aam
aam
adc
fcompl
insb
jmp
or
cmpb
imul
jno
out
test
push
jae
arpl
clc
inc
pop
shll
xor
leave
out
repz
and
scas
stc
cmpsl
stos
xor
xchg
fwait
or
mov
cmp
mov
dec
es
cmp
cwtl
adc
mov
push
or
in
mulb
sti
fisttpl
or
dec
push
add
sti
repz
mov
rcl
or
sbbl
xchg
enter
lock
sub
dec
jge
or
lcall
push
fwait
adc
inc
clc
push
mov
jne
mov
jae
sbb
das
jns
push
repz
mov
add
les
mov
shl
aam
cmp
jae
aad
cmpsl
push
mov
mov
hlt
mov
pop
mov
fisubl
adc
dec
and
into
jo
ss
adc
shll
mov
xchg
fstp
sub
dec
and
push
dec
in
dec
or
ret
push
mov
sar
push
inc
and
cmp
ss
sbb
mov
in
jg
popf
sub
inc
inc
xlat
xchg
jo
lret
inc
scas
and
mov
sub
test
addr16
pop
or
repz
ja
or
xor
mov
or
ja
cmpsb
shlb
lret
xchg
pop
jae
mov
mov
dec
inc
add
jne
jmp
scas
hlt
cmp
xor
inc
xor
sarb
push
loop
lock
dec
fwait
mov
adc
inc
lock
dec
and
jno
mov
rorl
rclb
leave
cs
push
and
inc
fidivrl
push
movsb
pop
sub
pusha
dec
idivl
jle
push
lahf
jns
push
cmp
imul
into
pop
pop
in
test
dec
inc
test
xchg
into
jnp
aas
imul
imul
outsb
imul
lds
sbb
push
out
cmc
pop
push
add
std
xor
gs
push
insl
jnp
sarl
mov
mov
cmp
iret
cs
fmul
lock
mov
and
add
inc
std
pop
ja
push
add
addl
rcrb
loope,pn
dec
dec
mov
sub
aam
test
aam
jecxz
div
or
out
dec
adc
shlb
mov
rclb
add
xchg
fldt
jnp
add
leave
and
pop
cmp
into
sub
popf
call
dec
inc
sbb
insl
movsb
lcall
jno
out
or
aas
pop
imul
cld
je
push
pop
jl
inc
add
sbb
loopne
inc
add
call
jo
ss
movb
icebp
adc
dec
loop
adc
jbe
fwait
mov
inc
aas
fs
lds
cwtl
aas
notb
lret
push
pop
push
fisubrl
into
pop
test
aas
xchg
sbb
or
lds
out
pop
loop
mov
aas
sub
push
mov
pop
mov
dec
push
loope
cmp
cmp
lods
cmpsl
call
loop
xor
loope
fimull
aas
xchg
je
ds
ja
dec
mov
lcall
pop
dec
jmp
shrb
xchg
outsb
test
inc
add
rcrl
cmp
repnz
rorb
jmp
popa
xchg
fdivrs
mov
or
inc
jecxz
cmp
aam
es
dec
mov
cli
push
cmpsb
sub
movsl
and
aaa
popa
jge
mov
addr16
mov
jno
mov
lock
dec
or
push
lahf
rcrb
scas
xor
aad
or
xchg
dec
pusha
inc
add
pusha
mov
repz
jbe
inc
add
cli
test
in
ss
xchg
into
pop
push
dec
imul
mov
movlps
lcall
sub
jns
pop
data16
sahf
cltd
lcall
mov
push
add
das
movsb
xchg
xchg
insl
mov
divl
lds
xor
mov
loopne
inc
in
push
fdivl
fwait
in
add
push
aas
add
out
adc
rcll
insl
adc
mov
push
mov
mov
mov
inc
mov
xchg
div
loop
xchg
int
roll
addr16
ljmp
cmp
ja
mov
lods
mov
shlb
inc
mov
into
sti
std
cmp
lea
stos
push
jnp
mov
daa
std
sar
js
in
roll
jno
dec
mov
incl
cs
push
filds
or
jnp
jle
mov
in
fadds
scas
push
in
aaa
scas
cmc
mov
and
fiadds
jl
ret
mov
pop
and
sahf
push
push
notl
fprem1
jns
lds
cmp
and
mov
adc
xchg
cmp
clc
push
leave
ljmp
into
mov
stos
adc
cli
mov
dec
sbb
outsl
es
or
icebp
sbb
lds
and
sar
das
pusha
stos
aad
xor
je
fwait
movlps
pop
clc
call
mov
add
add
xchg
popa
loope
dec
faddl
imul
push
icebp
out
xlat
shr
in
lea
and
sub
xchg
inc
jnp
in
scas
ror
adc
lret
mov
sti
sub
cli
xor
ret
and
or
jg
sahf
mov
cli
adc
imul
dec
jae
adc
aaa
mov
aaa
mov
movmskps
inc
jmp
adc
movsl
rcrl
cltd
inc
or
outsb
and
test
mov
jmp
stos
jle
mov
mov
mov
sti
sahf
mov
mov
mov
jno
fwait
xchg
sbb
push
dec
test
pop
adc
cmp
repz
xor
rcl
iret
push
int
jmp
iret
popf
in
pop
mov
mov
je
std
in
push
mov
push
into
lcall
mov
and
dec
outsb
in
repz
scas
mov
or
stos
xor
add
jb
out
sub
adc
mov
dec
cmp
leave
dec
add
xor
xchg
xchg
adcl
and
fldt
sbb
stos
inc
sub
lods
jl
mov
mov
xchg
fstpl
and
jae
enter
into
mov
push
inc
inc
fnstenv
mov
inc
mov
pop
adc
xchg
and
dec
cs
imul
sub
ret
or
xchg
sbb
dec
push
test
arpl
xchg
fdivr
data16
mov
test
add
xchg
push
imul
or
in
push
fildl
or
dec
add
lods
sub
repnz
inc
xor
mov
fwait
fwait
pop
mov
adc
jge
mov
outsl
or
jb
xor
push
fdivrs
or
pop
cmp
jno
cmp
movaps
test
mulb
stos
push
pop
iret
in
test
xchg
scas
sbb
push
push
scas
inc
in
push
out
ret
cmpb
dec
mov
jmp
sti
rcrl
jp
shlb
clc
es
xchg
xor
and
mov
inc
es
lret
mov
scas
adc
jmp
and
or
dec
sub
jge
inc
mov
xor
push
xchg
mov
stos
push
add
fwait
pop
mov
xchg
jnp
and
arpl
mov
imul
jecxz
pop
ficompl
inc
cmpl
cmp
adc
incb
push
xorl
aam
mov
sub
push
jb
sub
addl
xchg
out
ret
arpl
jge
inc
fdivrp
aaa
inc
clc
mov
xchg
es
or
push
insl
shlb
jns
cmp
sbb
and
dec
cmp
or
inc
sub
jg
mov
lds
cmp
outsl
push
dec
cmp
insl
rorb
xor
pop
cmpsl
test
push
das
ljmp
or
fwait
mov
inc
je
stc
ja
dec
mov
or
pop
and
push
cmp
test
inc
xchg
in
sahf
sarb
imul
fisubl
push
les
repz
sub
jns
movb
loopne
repz
push
push
mov
mov
ret
lcall
jo
mov
and
lcall
lods
jle
repz
lret
ror
sub
fwait
idivb
lret
aaa
jg
scas
iret
adc
mov
loopne
scas
cmp
in
or
les
mov
or
mov
cmp
lcall
cmpsl
shll
js
push
stc
xchg
notb
js
les
or
adc
repz
xor
fistpl
std
xchg
push
js
cwtl
mov
push
imul
fcoml
push
imul
cmp
negl
push
xorl
sbb
out
mov
mov
lret
das
rclb
sub
clc
mov
cmp
lcall
push
arpl
dec
movb
out
inc
or
scas
adc
aas
dec
out
mov
fs
shll
inc
push
inc
sub
ret
xchg
add
in
cltd
inc
and
mov
dec
mov
test
sub
fcmovbe
sub
xchg
mov
in
jl
dec
dec
loop
mov
push
jo
fdivrs
fsubrl
andl
pop
pushf
fimull
mov
out
mov
pop
cmpsb
stos
dec
mov
icebp
les
mov
xchg
push
cwtl
mov
pop
ret
inc
inc
in
mov
roll
or
push
out
scas
inc
pop
into
xor
and
mov
ds
or
dec
pop
jg
push
lcall
xchg
ds
pop
aam
sbb
sub
xchg
ret
ds
fmuls
xchg
js
mov
push
sub
push
fldt
or
pop
shlb
cmp
aaa
adc
stos
loopne
jg
mov
out
or
cmp
xchg
and
shll
pop
mov
adc
scas
cli
stos
push
out
sub
xchg
mov
add
inc
int3
cmp
pop
sub
cli
pusha
mov
sbb
push
idivb
mov
mov
inc
mov
pop
push
xchg
mov
xchg
sbb
jno
lret
clc
arpl
push
adc
leave
mov
push
dec
ja
ss
ja
sub
in
fwait
mov
daa
repnz
pop
cmp
imul
insl
aaa
push
subb
fsubl
cmp
out
jne
cmp
movsb
add
test
out
push
mov
jle
fs
jnp
pusha
inc
and
fneni(8087
jmp
out
fdivr
or
aaa
mov
in
sub
adc
xchg
rcrl
dec
jnp
and
push
push
and
push
es
dec
hlt
mov
inc
pop
sub
add
lcall
dec
inc
and
aaa
lods
xor
stos
je
push
les
push
fwait
arpl
enter
pop
mov
add
lock
sti
adc
imul
stc
jp
sbb
sbb
test
pop
cmp
xchg
pop
mov
aaa
mov
ror
std
jp
outsb
add
loopne
sbb
incl
out
xor
xor
bound
jo
push
xor
outsl
adcl
mov
cltd
inc
xor
mov
cmp
shll
xor
ret
jge
push
mov
cmp
sub
out
jmp
xor
xor
hlt
inc
sub
xchg
popf
push
out
cmp
push
sub
nop
loop
repnz
sub
dec
mov
adc
add
hlt
pop
insb
xchg
les
stc
lcall
xor
je
add
stos
add
or
pop
cmp
mov
push
mov
stos
aam
xorl
test
or
fsubrl
push
das
cmpsb
push
rorb
lds
adc
push
idiv
dec
stos
enter
je
daa
sti
iret
imul
stos
sub
popl
cwtl
in
sub
daa
mov
dec
adc
ret
push
push
push
movl
mov
pop
xor
shll
iret
sub
rol
ret
ss
adc
das
cmp
rorb
mov
mov
fdivrl
mov
sahf
fs
mov
inc
ret
adc
adc
and
mov
fwait
rorb
aam
stos
movsl
aaa
and
cmp
test
add
out
lds
xor
addr16
push
call
pop
xchg
aad
xchg
testb
cmpsb
add
icebp
inc
sbb
sbbb
jns
loop
out
mov
ficoms
lret
popf
or
push
ja
cmp
xchg
fldcw
cmp
dec
clc
and
jb
cmp
hlt
lret
or
aad
push
dec
fldl
icebp
mov
mov
jmp
inc
icebp
ss
mov
les
sbb
xor
pop
inc
xchg
aam
cmp
sub
jae
shrb
mov
into
mov
jl
shl
jmp
mov
fistpl
pop
mov
pop
testb
and
mov
mov
fwait
adc
cmc
push
adc
arpl
push
adc
jecxz
add
and
mov
and
cmp
pop
daa
cmpsb
stos
fdivr
call
add
in
ret
jo
mov
xchg
mov
test
std
scas
jbe
lea
push
cwtl
idivl
and
xor
scas
shrb
adc
xchg
mov
jp
pusha
mov
pop
mov
lods
adcb
pop
in
out
leave
cs
int
stc
and
insb
adc
inc
cltd
mov
rorb
aam
mov
add
or
sub
xchg
mov
and
iret
xchg
xchg
xchg
inc
test
inc
sbb
fbld
sub
leave
fists
das
xchg
sti
lcall
pushf
stos
pop
mov
pop
pop
adc
xor
hlt
aad
mov
sub
clc
mov
jle
imul
sbb
jae
and
pop
dec
repnz
lock
pop
sarl
jae
sub
es
push
dec
mov
pop
mov
lea
inc
push
pop
push
xchg
mov
fwait
nop
lret
push
lods
mov
cwtl
sahf
dec
roll
xchg
inc
jmp
mov
out
rorl
adc
dec
or
inc
and
inc
pusha
insl
in
add
stos
push
sbb
outsb
add
sub
out
add
inc
in
adc
jl
notb
push
cmp
and
add
shrl
icebp
xchg
push
loope
rcr
push
dec
rorb
mov
bound
pop
lods
cmpsb
xor
or
lds
inc
mov
and
cmpsb
lret
ljmp
call
jae
inc
notl
out
mov
cmp
cmp
lret
fmuls
imul
add
scas
loope
xor
mov
mov
push
jmp
rcrb
lods
mov
aaa
in
jo
pop
jae
jae
ret
push
popf
imul
mov
cli
dec
out
scas
cli
mov
lods
dec
xor
mov
rolb
adc
push
xor
mov
cmpsb
out
inc
ss
faddl
push
adcl
aas
mov
dec
in
fsincos
aaa
imul
mov
push
and
ret
mov
mov
sbb
mov
adc
add
lds
out
dec
imul
mov
fcmovne
imul
mov
adc
lcall
pop
out
add
cld
js
insl
jge
clc
pop
je
jae
pop
subl
xchg
mov
ret
jge
add
inc
jmp
cld
sbb
rclb
fcoms
inc
fiadds
dec
bound
pushf
cmp
sbb
daa
hlt
xor
xor
nop
push
xor
mov
and
cmp
sbb
push
lret
shll
pop
ret
fndisi(8087
js
pop
loope
pop
das
gs
scas
mov
pop
xlat
add
sub
in
mov
sarl
xchg
cwtl
imul
shll
pop
xchg
xlat
jno
aaa
cmp
fs
mov
mov
lock
cmp
stos
fldl
in
dec
xchg
sub
jns
jo
popf
rcr
push
inc
push
mov
cli
sbb
scas
lcallw
jns
pop
fisubrs
out
imul
cltd
jg
insb
or
sbb
xlat
sub
mov
dec
repz
mov
hlt
inc
loope
fdiv
xlat
cmpsl
xorb
hlt
pop
xor
jp
lods
js
in
jno
and
pop
mov
scas
cmp
icebp
cmp
mov
inc
mov
xor
sahf
dec
lcall
mov
xlat
lock
pop
pop
ret
xchg
std
xorl
into
xor
mov
fwait
or
stc
push
or
jns
test
inc
mov
fnsave
push
sub
xchg
out
repz
pop
cmp
into
ss
test
adc
out
in
push
jno
xchg
in
and
nop
jmp
xchg
int
xlat
push
and
jmp
imul
imul
inc
jbe
mov
sub
js
jo
movsb
mov
pushf
pop
pop
lahf
xor
aas
xchg
push
adc
push
push
movsw
push
jg
xchg
icebp
mov
mov
and
rorb
or
lods
or
adc
loopne
jae
jnp
jnp
lods
jnp
and
mov
mov
cmpsl
mov
adc
push
jae
cld
add
mov
jbe
and
push
test
xor
xor
and
jle
sub
ds
sbb
in
das
in
mov
stos
shrb
subl
sub
daa
push
jge
pop
ret
fucomp
in
mov
rorb
test
push
adc
pop
jp
cs
iret
cmp
call
mov
addr16
xor
call
and
roll
adc
sbb
lods
and
std
cmp
inc
repz
pop
iret
loopne
popf
repz
ret
xchg
mov
xor
icebp
das
and
xorb
mov
inc
xchg
shrb
pop
data16
cmp
pop
std
ret
add
push
pop
mov
pop
push
sbb
xchg
fnstsw
loope
cmc
popa
aad
out
sub
movsl
popf
ds
or
xchg
imul
xor
sahf
or
mov
mov
ret
fidivrs
pop
sub
ret
gs
xchg
mov
cmc
outsl
push
ret
push
sbb
shll
adc
imul
fbstp
bswap
pop
ds
push
mov
inc
xchg
dec
jns,pn
outsb
push
cmc
iret
push
mov
stos
iret
mov
xor
sbb
repnz
lods
add
fst
mov
inc
jne
jbe
dec
mov
push
scas
in
enter
mov
mov
js
nop
in
daa
dec
mov
sub
ss
cmp
stos
mov
mov
movsb
lds
int3
es
out
iret
lods
rclb
push
in
xchg
xor
jmp
leave
ljmp
xor
xchg
dec
lret
mov
dec
pusha
int
leave
adcl
xchg
rdmsr
lods
xchg
in
clc
dec
pushf
mov
fwait
and
dec
sbbb
mov
mov
outsb
jne
aam
fidivs
or
popa
fs
mov
clc
xor
scas
cmc
fsubrl
xchg
mov
pop
xchg
ss
and
mov
dec
data16
cmp
rorl
pop
xor
cs
push
mov
aad
test
mov
jp
jae
mov
roll
ss
daa
out
xlat
dec
mov
mov
lock
bswap
or
jl
out
or
adc
lods
xchg
mov
xor
in
das
and
mov
das
push
pop
fs
mov
push
pop
stos
cld
cmp
lods
je
cmc
mov
js
sbb
bound
mov
cmp
cltd
add
xchg
and
call
xor
test
out
mov
popa
xor
out
mov
push
sti
jno
jmp
pop
mov
push
sbb
cli
jl
dec
icebp
js
pop
dec
jp
lds
dec
cmp
xchg
sbb
lods
push
mov
fimull
shr
bound
push
rcr
out
in
in
push
xlat
sbb
xor
negb
mov
into
lcall
push
sub
das
cmp
inc
loop
cmpsl
sbb
lcall
pop
rorl
int
add
pop
mov
repz
sahf
xchg
inc
cmpsb
scas
xchg
insb
mov
pop
or
dec
pop
js
hlt
adc
fucomi
inc
pushf
jno
xchg
jecxz
sbb
pop
js
inc
in
jae
jo
fwait
in
adc
cli
or
mov
inc
mov
mov
lea
jnp
add
dec
andb
inc
pop
fcompl
push
mov
loope
xor
in
pop
leave
out
cmova
pop
sahf
cli
cmc
outsb
fbstp
mov
sbb
mov
sbb
insb
mov
and
nop
pop
dec
repnz
test
push
rcr
insl
mov
cmp
mov
out
fwait
cld
inc
jae
stc
sbb
in
imulb
clc
mov
pop
inc
insl
ret
sti
sub
out
cli
das
lods
mov
jmp
push
xor
jne
xchg
mov
xor
hlt
pop
mov
cmp
or
mov
cmp
sbb
sub
adc
add
shl
lret
sub
xor
sub
or
cltd
dec
mull
jbe
addr16
subb
shlb
pop
push
mov
sarb
sub
ret
xchg
incb
jno
add
in
fistpll
cli
mov
stc
ds
pop
test
inc
scas
daa
enter
xor
iret
mov
mov
rclb
xor
vpaddd
mov
frstor
popf
icebp
pusha
dec
subl
aas
jge
stos
out
sbb
rol
jecxz
pop
fdivs
push
lahf
push
test
pop
sbb
loope
cmp
dec
mov
sub
js
stos
mov
pop
push
rclb
sbb
xlat
jnp
or
mov
cmpsb
dec
outsl
icebp
lret
mov
adc
loopne
pop
lret
mov
mov
mov
nop
lret
loop
mov
and
fs
and
sahf
iret
stos
sbb
push
mov
ljmp
inc
adc
jno
xorl
lea
lea
div
xor
xchg
xor
mov
enter
out
mov
add
push
push
ret
imul
js
add
call
mov
rcrl
push
ret
mov
dec
lcall
pop
pushf
xor
in
xor
add
das
testl
push
hlt
push
stos
cli
icebp
pop
dec
clc
mov
push
push
add
lahf
jbe
lret
fstl
add
outsl
inc
cwtl
jg
or
test
fcomip
sbb
sub
fs
test
sahf
ds
scas
and
pop
ss
mov
in
jb
xchg
xor
cs
data16
dec
inc
inc
sub
cmc
into
push
inc
lret
mov
shlb
cmc
call
dec
jp
cmpsl
xchg
ret
js
movsl
add
mov
inc
in
mov
outsl
push
sub
mov
bound
out
xor
sub
imul
push
mov
inc
cwtl
in
movsl
mov
dec
mov
xor
fcomps
fstpt
add
ja
fwait
arpl
cmp
adc
notl
sbb
or
dec
es
test
insb
sbb
mov
jns
lea
dec
or
into
int
xor
fs
mov
sbb
pop
ret
ret
sub
imul
or
fdivrl
push
stos
rolb
ret
mov
mov
into
or
xor
push
notb
push
adc
mov
pop
sbb
addr16
ss
mov
ret
mov
inc
add
data16
fs
add
sahf
cmp
add
es
adc
or
or
cwtl
sbb
fwait
rorl
das
ljmp
cmc
jae
divb
jno
lods
aad
pop
cmp
repz
mov
sbb
add
scas
es
xchg
fiaddl
mov
and
push
shll
rcll
cltd
clc
lods
jo
mov
dec
mov
mov
inc
repz
cmpsw
jbe
inc
fisttpll
fwait
repz
jo
ja
aaa
lods
xor
cmp
dec
rcl
enter
jae
fnstsw
cmc
pushl
mov
sub
xchg
jnp
dec
sbb
push
aaa
xlat
das
xlat
xor
dec
xchg
out
hlt
push
cli
notb
lret
push
pop
dec
mov
inc
dec
mov
or
pushl
int
sub
add
push
subb
mov
rol
fs
mull
faddl
xchg
dec
inc
cmc
addr16
sub
nop
and
mov
repz
and
in
aaa
ljmp
xor
xor
pop
mov
and
fistps
jmp
cmp
ds
xchg
cltd
inc
fstl
lahf
loop
sub
stos
shl
xchg
addr16
adc
icebp
cli
dec
and
inc
inc
sti
lcall
pushf
pop
push
fcomi
or
jge
cmp
lock
stc
cmpsl
arpl
cmp
aaa
das
push
in
xchg
imull
test
inc
xchg
pop
inc
out
leave
jge
fwait
mov
cli
jp
call
ljmp
into
fs
push
movl
mov
fisubrs
jge
xor
daa
mov
adc
cwtl
and
push
out
cmpsb
sbb
inc
sbb
mov
push
pop
dec
fwait
aas
lret
js
pop
ss
adc
push
cmp
push
dec
fidivrs
fmulp
or
jl
pusha
outsl
aaa
jns
sbb
push
jl
insb
cmp
mov
jno
jecxz
pushl
aas
insb
xchg
push
aas
add
sbb
mov
inc
inc
popa
pop
aam
adcl
cmp
dec
stos
test
nop
add
add
jmp
or
jns
pop
lea
scas
mov
push
mov
ficoml
in
fadd
push
push
test
sbb
fucom
or
insb
lcall
xchg
scas
scas
loop
call
inc
jne
jmp
pop
dec
cmc
jbe
xlat
mov
mov
mov
sbb
call
out
adc
jecxz
popa
and
inc
dec
roll
cltd
and
dec
lret
adc
mov
xor
aaa
lock
lret
mov
sbb
clc
add
dec
push
lahf
test
inc
cmpsl
lret
jecxz
cmpsb
cmc
ja
lcall
cmpb
mov
movsl
cs
cmp
testb
stc
pop
jbe
push
or
sbb
fwait
jl
fldcw
outsb
push
mov
xchg
adc
pop
in
mov
loope
test
movl
or
in
jb
pop
in
or
mov
jecxz
or
daa
mov
mov
xchg
or
lret
push
fdivrl
cmp
nop
subl
stc
fsubs
repz
dec
shll
push
cmp
jnp
xchg
dec
aad
lret
std
pop
stos
sub
sbb
sbbb
and
fists
push
dec
xor
cmp
mov
mov
aad
insl
jl
dec
dec
push
adc
pop
xchg
nop
xlat
call
adc
aaa
mov
adc
dec
xchg
rcrl
roll
repz
call
fisubrl
pop
cmovs
dec
and
pusha
add
push
mov
imul
insl
lret
jg
xchg
loopne
push
add
imul
aas
shll
int
sbb
shlb
repnz
dec
push
sub
and
scas
mov
mov
shrl
adc
fistps
adc
or
cmp
test
test
mov
call
push
hlt
xor
sbb
mov
in
fstpt
cmc
sti
xchg
jg
dec
push
mov
add
test
int3
mov
mov
sub
cmp
sub
xchg
rorl
inc
fistps
push
fcom
sarl
or
xchg
adc
cmc
cmp
inc
lds
jnp
xchg
ficomps
push
add
outsl
sub
dec
adc
jb
sar
repnz
mov
adc
or
mov
in
rclb
lods
scas
aam
shll
gs
pop
sub
popa
pop
mov
pushf
xchg
jne
pop
inc
dec
mov
mov
jg
adc
inc
daa
inc
fimull
mov
xor
ja
sbb
mov
je
adc
outsb
inc
pop
ljmp
into
adc
or
imul
js
stos
mov
sub
mov
add
cwtl
les
leave
dec
push
jge
addr16
fimull
xchg
mov
mov
dec
pusha
sahf
outsb
mov
int
cmp
xchg
mov
fnstsw
ret
addb
or
cltd
repz
std
or
xchg
ret
dec
cmp
addr16
push
repnz
into
jmp
or
jl
inc
sbb
pushf
movl
sub
cmp
je
add
das
xor
adcl
popl
dec
int3
xchg
push
mov
imul
imul
pop
je
out
leave
jo
pop
cmpsl
mov
in
fimuls
in
outsb
adc
notb
insl
inc
push
movsl
int
push
mov
stos
je
push
adc
test
xchg
jp
cmp
call
int
hlt
jbe
cltd
or
xor
mov
test
cwtl
test
scas
stos
inc
cmp
fdivrs
sbb
mov
shrl
or
in
mov
adcb
push
cmp
mov
in
ret
aam
push
fildll
mov
dec
fwait
cmc
out
data16
inc
popa
xor
pusha
pop
mov
cmp
mov
push
add
jg
insb
bound
cmp
stos
test
jecxz
pop
xor
or
mul
fcoms
sub
js
xchg
enter
cmpsl
rcrl
dec
push
cmc
fdivrl
cmpsb
dec
dec
repz
pusha
push
xchg
jnp
daa
sub
fs
jno
icebp
repz
lahf
mov
aaa
enter
lcallw
int
mov
mov
push
daa
xor
das
mov
jmp
rol
mov
mov
aam
fbld
mov
and
sub
push
js
inc
dec
cmp
cs
lea
jecxz
push
or
repz
stos
xor
faddl
stos
imul
add
insl
mov
test
pushf
add
aas
inc
jmp
pop
cmpsb
add
or
movsl
inc
jmp
and
sbb
js
outsb
xchg
ret
fldl
dec
jne
cmpsl
sub
jge
pop
pop
push
cmc
in
jp
cmp
xor
mov
daa
fiadds
mov
cmp
adc
mov
cld
aas
push
icebp
add
pop
std
push
fidivl
push
mov
cmp
push
push
inc
shll
mov
loop
cmpsl
iret
xor
push
lcall
stos
subb
xorb
fmul
daa
test
sbb
or
mov
loop
jne
ret
mov
and
jnp
xchg
inc
pop
cmp
dec
mov
call
testb
xor
inc
repz
insb
mov
movsb
aaa
mov
aad
adc
lcall
mov
push
nop
ljmp
fcompl
inc
outsb
pop
aas
mov
out
jecxz
adc
jnp
fsts
push
ud0
outsl
clc
xor
xor
jb
repz
loopne
push
xor
fisubrl
repnz
clc
mov
scas
dec
aad
jg,pn
ss
cmp
xor
push
js
pop
outsb
aam
ror
mov
inc
xlat
xchg
aad
push
movsl
fwait
add
jl
inc
pop
loop
xchg
push
adc
cmp
mov
rclb
add
pop
push
add
jnp
mov
ficompl
inc
inc
mov
mov
fcmovnu
into
ja
push
js
or
imul
movsb
fidivs
mov
mov
cvtpi2ps
xor
jecxz
std
add
xlat
dec
aad
es
jbe
jp
and
push
aas
dec
stc
in
fstps
shrl
push
push
dec
leave
adc
in
or
roll
outsl
shll
call
je
xlat
data16
or
cltd
daa
cmp
adc
insl
pop
int3
xchg
jmp
cli
pop
mov
inc
mov
pop
add
mov
jo
cmp
or
mov
popa
add
lea
jns
and
lcall
js
mov
xchg
roll
icebp
push
fwait
test
int
mov
test
sub
push
ficoms
imul
addl
les
dec
cmpsl
das
mov
inc
test
sti
push
fildll
sub
xor
adc
imul
mov
ljmp
jnp
notb
inc
adc
add
imul
imull
scas
mov
les
lds
roll
mov
mov
ljmp
sub
or
push
in
fidivl
push
cld
cltd
loopne
clc
pop
movb
sti
lret
mov
subl
push
out
es
xor
adc
sarl
inc
xchg
sub
js
not
jp
push
adc
inc
and
pop
movsb
inc
xlat
repnz
daa
lods
cmp
in
lret
mov
out
pushf
shlb
add
mov
cmp
cltd
iret
push
shrb
mov
mov
ds
out
test
mov
mov
inc
and
mov
pusha
test
std
imul
inc
jp
cmp
outsl
arpl
push
aad
es
cmpsl
mov
sarl
mov
test
addb
pop
out
sub
stc
mov
sub
and
add
mov
inc
ss
inc
out
std
clc
mov
xor
mov
sub
in
pop
outsb
insb
out
stc
push
js
push
dec
popa
aaa
mov
or
or
inc
imul
movsb
aaa
mov
mov
xor
enter
std
mov
adc
ja
xor
fsubrl
adc
mov
mov
ret
mov
ds
mov
cltd
imul
push
loopne
stos
aas
mov
mov
jns
mov
pop
lcall
lock
stc
test
cmpl
add
in
ss
push
sti
adc
dec
sbb
mov
cmc
clc
or
imull
fcoml
sbb
addr16
fldl
pushf
mov
aad
add
rcrl
insl
fs
push
dec
sbb
pop
push
clc
xchg
test
inc
fcmove
mov
test
sbb
out
imul
outsb
ljmp
pop
pop
or
mov
dec
hlt
pop
mov
inc
mov
ljmp
xor
inc
mov
daa
lock
adc
add
pop
and
mov
cli
mov
jbe
stos
iret
adc
enter
mov
push
faddl
adc
sub
xchg
push
dec
ret
mov
inc
fidivrl
daa
hlt
inc
shlb
jb
push
insl
mov
ud0
add
arpl
cwtl
jo
scas
cmp
push
add
xor
jecxz
insl
pop
mov
iret
rcrl
push
mov
cmpb
outsb
bnd
mov
nop
xor
xor
pusha
lods
pop
cwtl
push
icebp
sub
sar
push
stc
sbb
popf
dec
add
pop
lahf
and
pop
mov
enter
inc
xchg
pushf
fstpt
int
into
decl
xlat
inc
popa
sbb
stos
jae
mov
ja
sarb
iret
aas
mov
mov
andl
lods
mov
inc
jge
into
cmp
outsb
lock
pop
dec
add
test
or
xor
cltd
pop
adc
nop
mov
popa
aas
ja
in
pop
stos
xchg
dec
mov
lds
aad
adc
mov
repnz
rcl
lret
fmull
or
scas
inc
sbb
lods
jmp
or
loopne
sbb
adc
subb
daa
fmuls
jg
mov
xorb
js
imul
mov
xor
je
xor
jno
aaa
jno
sbb
cmpsl
add
adc
mov
daa
frstor
loop
xchg
lods
pop
add
scas
popa
mov
mov
mov
ss
loopne
dec
aas
lea
insl
inc
mov
push
sarb
add
add
push
stos
cltd
inc
test
pop
inc
jbe
lret
pop
mov
out
in
insl
hlt
xor
mov
popf
xor
std
js
aas
push
mov
fnstcw
dec
add
fbld
or
add
mov
shrl
adc
add
call
sub
loopne
ret
sub
sarl
movsl
das
lcall
cmp
insb
mov
call
sbb
push
adc
mov
mov
in
adc
stos
mov
lcall
inc
outsb
xor
pop
das
out
lcall
pop
mov
fnsave
mov
filds
adc
pop
dec
in
pushf
xchg
jno
sub
add
popf
xlat
repz
pmullw
repz
xchg
cmpsl
out
or
scas
sub
push
xor
cmp
push
lds
xchg
movsl
jle
mov
add
dec
movq
fstp
roll
insb
add
sbb
repz
pop
iret
aas
mov
sbb
dec
and
jo
xor
xchg
addl
pop
add
push
pop
int
out
sub
hlt
sub
idivb
mov
daa
dec
lahf
imul
xor
imull
out
adc
es
stos
mov
cmp
lret
or
fs
mov
cli
mov
lret
pop
push
dec
inc
icebp
cmp
in
scas
adc
and
and
mov
stos
mov
testl
jecxz
jp
dec
rcll
jbe
pop
ss
out
xor
loope
mov
push
and
rcll
rcr
pop
inc
push
out
sbb
loope
mov
pop
sub
jb
xchg
fsubrp
shll
sbb
xchg
push
sub
sbb
inc
adc
dec
cmp
pop
jle
push
cmpsl
int
jmp
scas
rcr
cs
mov
xchg
adc
push
mov
and
sbb
mov
ret
adc
sti
ret
and
cltd
inc
aam
pop
pop
jns
xchg
repz
addr16
mov
aaa
mov
scas
hlt
and
ret
test
ja
and
fldl2e
and
test
sbb
insl
xor
pop
jae
jecxz
outsb
icebp
lock
fwait
rorb
pop
imul
dec
ret
lods
jmp
rsm
shll
mov
outsl
out
mov
ja
xchg
cmp
into
xchg
outsb
dec
inc
clc
outsb
cmp
push
mov
inc
sub
vmovd
lods
into
fst
adc
pop
std
jns
cltd
push
adc
jb
sti
sbb
add
adc
inc
shll
ret
xchg
pop
mov
ret
xor
leave
lock
inc
or
inc
sbb
mov
xor
push
insl
lcall
xor
outsl
call
dec
sub
hlt
mov
sti
xchg
ljmp
lret
mov
rclb
cmpsb
popa
iret
roll
out
shll
loope
mov
adc
and
enter
lcall
js
sarb
stos
gs
outsl
dec
inc
inc
pop
rcr
dec
dec
stc
sbb
jbe
cmp
rcrl
push
into
cmp
mov
imul
inc
dec
push
mull
jecxz
jno
jb
int3
xor
popa
into
jo
pop
hlt
ja
or
into
mov
shrl
enter
js
push
adc
shl
rcrl
and
iret
popa
stos
lahf
mov
ss
and
pop
leave
cmp
or
cmpsl
sub
fisttpl
int
fidivrs
and
lcall
xlat
ss
inc
aas
popa
fs
pop
cmpsb
loope
mov
rclb
xchg
dec
mov
lock
jno
pinsrw
js
fldz
rcrb
push
cld
xor
lcall
popf
push
test
call
cmp
insl
mov
rcr
pop
cmc
cmp
inc
or
mov
into
dec
fcoms
push
imull
jmp
xor
adc
outsb
cmc
or
inc
cmp
mov
and
inc
mov
aam
and
out
mov
hlt
and
mov
cmc
xchg
popf
in
or
aad
jge
mov
mov
mov
lcall
lods
push
loopne
fxtract
sahf
adc
shll
lcall
out
dec
mov
scas
mov
xor
ss
push
mov
xor
fiaddl
lods
sbb
cwtl
adc
nop
sub
xchg
cwtl
mov
fsub
insb
mov
sbb
setnp
push
xchg
mov
popf
rcl
pop
mov
push
mov
mov
mov
jae
sub
repz
out
mov
shl
adc
jge
call
daa
mov
out
inc
repnz
jl
mov
ret
add
out
cmp
das
addr16
jb
pop
jno
stc
mov
jbe
mov
inc
add
xor
jg
sbbl
lret
dec
mov
lcall
enter
inc
outsl
dec
lahf
cmp
add
xor
cmp
dec
inc
mov
mov
lret
inc
or
js
xor
sbb
jb
popa
cmp
movsl
lds
cmp
mov
and
lret
imul
jae
gs
loopne
out
cld
mov
test
es
sbb
push
jne
xor
enter
inc
jo
call
nop
push
dec
add
pop
nop
loope
add
cmpsl
pop
pop
sub
hlt
add
jnp
dec
mov
inc
xor
sub
or
cli
dec
dec
sbb
inc
mov
jnp
ret
int3
lahf
dec
push
outsl
cld
inc
mov
push
jae
iret
sbb
mov
pop
js
mov
sbb
rorl
loopne
or
dec
sbb
lods
push
xchg
out
iret
mov
sub
dec
inc
mul
pop
mov
sti
lret
outsl
push
pop
lcall
push
adc
das
push
loopne
adc
push
icebp
idivl
sbbl
lea
inc
iret
adc
outsb
xor
adc
divb
pop
add
sub
outsl
jmp
and
push
cmp
inc
ljmp
sbb
outsb
das
inc
dec
or
cmpsl
ret
jle
jae
or
and
pop
mov
jnp
inc
in
inc
popf
pushf
push
add
adc
repz
insb
subps
mov
mov
gs
push
add
pop
mov
push
mov
lea
insb
jnp
mov
test
test
pushf
stos
push
add
rdmsr
jns
rcrl
push
inc
fcoms
fidivs
lea
aam
insl
out
push
in
in
dec
daa
cs
or
pusha
cmp
adc
or
rorl
add
sub
fs
push
lods
data16
mov
xchg
sbb
shl
xor
cmpsl
adc
popa
das
int
add
scas
or
jb
popa
fistpl
xor
aas
adc
fcom
add
ficoml
lahf
pop
inc
cmp
jne
pusha
or
sub
dec
inc
aas
mov
mov
push
fists
add
and
fisubrl
jecxz
repz
mov
mov
pop
sub
dec
jbe
div
push
cmp
push
data16
xchg
jl
inc
xor
or
xchg
mov
stos
fwait
outsb
xor
ret
lahf
lods
or
push
ja
and
mov
lods
pop
addr16
xor
incl
ret
jecxz
in
pusha
push
inc
cmp
and
stos
jg
cmp
sub
into
nop
mov
pusha
enter
hlt
scas
mov
xchg
fwait
lods
xor
dec
xlat
fbstp
sti
fdivp
cmp
int3
sbb
fsubrp
mov
and
add
push
int
int
cld
aam
dec
rcrb
xor
arpl
outsb
jl
jmp
mov
add
rorl
test
testb
mov
icebp
jo
push
lret
xchg
std
bound
cli
repz
xor
movsb
outsl
pop
push
mov
cli
jge
add
xor
ror
xor
inc
popa
pop
fsub
pop
cli
gs
xchg
sbb
or
cmpsb
cmpb
mov
mov
sbb
mov
mov
xor
sbb
fucomi
leave
movb
inc
inc
dec
hlt
push
xchg
mov
xor
add
loop
xor
pop
pop
fstl
shr
sbb
inc
mov
sub
xchg
inc
aaa
rorl
je
in
pop
pop
push
add
stc
pop
dec
xchg
mov
les
push
xchg
xor
pusha
adc
fldl
jno
dec
in
aas
dec
das
rcrl
push
dec
or
mov
mov
aad
sub
xor
mov
das
adc
fildll
inc
rolb
dec
je
stos
jg
test
dec
test
ja
cmp
les
and
push
lcall
sarb
lea
stc
mov
cmp
test
xchg
mov
inc
dec
cmc
xchg
sub
sar
dec
notb
cmp
popl
add
cmp
lret
pop
sub
lret
ds
jne
lret
outsb
popf
fptan
mov
pop
addr16
push
pushf
loop
cmp
pop
mov
inc
push
sub
pop
imul
int
sti
add
cmpsb
mov
les
or
pusha
sbb
testl
inc
and
mov
sbb
je
xchg
cmp
imul
mov
inc
mov
dec
pop
push
stc
pop
sub
inc
into
or
mov
push
into
or
ja
aaa
cmp
push
out
push
mov
fsubrl
mov
mov
es
adc
pop
xlat
mov
shlb
mov
test
cmpsb
cmp
shl
mov
sub
mov
dec
dec
push
push
scas
insl
cld
ljmp
std
fmuls
inc
sbb
adc
add
cmc
jmp
xchg
inc
mov
xor
daa
jp
imul
ret
cmp
xchg
jae
popa
pop
outsb
pop
mov
movsb
fs
adc
cmp
xor
pop
in
adcb
repz
jo
fwait
mov
jp
pop
dec
push
cmpsb
popl
add
jp
push
push
loop
mov
inc
dec
push
push
cmc
mov
mov
lahf
mov
lret
mov
cmp
stos
jbe
add
xchg
cmp
sub
ss
jo
lret
jns
inc
cmpsl
movsl
mov
push
lcall
cmp
xlat
mov
cmp
push
lods
and
push
mov
loopne
divl
popf
cwtl
addr16
in
sahf
push
loop
pop
sbb
cmpsl
dec
mov
or
pop
cs
jecxz
test
daa
mov
scas
mov
loope
mov
jns
dec
ljmp
inc
enter
out
mov
push
xchg
jbe
sahf
lret
add
pusha
flds
out
xor
cmpsb
loopne
lds
mov
repz
dec
jmp
xor
push
add
cmp
cmp
hlt
sbb
jp,pn
fcmovnb
sbb
out
and
mov
leave
lcall
clc
mov
cmp
sbb
outsl
jno
xor
jae
pushf
popf
mov
daa
pop
leave
div
out
sahf
jb
xchg
ds
jae
push
sarb
pop
scas
stc
push
idiv
xchg
dec
inc
rorb
sahf
or
xchg
push
loope
daa
jp
mov
push
fistpl
xor
mov
jb
jp
bound
popa
loope
dec
fcmovnb
pop
fisubrl
imul
sub
dec
xor
and
or
addb
jns
dec
icebp
flds
xlat
mov
in
ljmp
push
int
dec
xchg
fnstsw
dec
pop
sub
fnstsw
jmp
mov
mov
pop
sti
mov
cmc
out
rorl
sbb
jl
mov
inc
mov
mov
out
clc
sub
mov
mov
jnp
shll
mov
push
inc
mov
imul
mov
xor
push
and
push
imul
aas
pop
data16
subl
scas
inc
arpl
lock
cmpsb
push
aas
xor
adc
lock
cmp
das
or
out
addl
dec
push
and
imul
je
xor
jecxz
push
dec
mov
dec
test
out
ret
dec
outsb
aam
in
pop
ret
sub
imul
test
dec
pop
aam
inc
rolb
or
repz
jl
fiadds
into
pop
xlat
push
cmc
cmp
es
clc
adc
mov
inc
sbb
shrb
lods
ss
push
or
push
cmpl
sub
out
fldenv
movsb
loope
push
sub
sbb
cs
push
sahf
push
add
andb
cmp
inc
and
out
xchg
mov
cmp
jp
jo
out
lea
es
jnp
adc
pop
jmp
or
push
mov
pusha
pop
iret
pushf
add
jne
xlat
daa
stos
aas
lods
or
jmp
rcll
imul
hlt
sbb
test
mov
fistps
das
adc
inc
sub
sahf
enter
std
daa
shrb
mov
stos
push
pop
jecxz
or
pop
adc
pop
cltd
or
idivl
jb
mov
or
cwtl
mov
rclb
xor
inc
out
aam
jg
insl
lcall
scas
add
cmp
push
fidivrs
loopw
jae
dec
push
ret
sbb
sub
std
sbb
cmp
cli
cwtl
lcall
pusha
imul
cmp
leave
test
mov
lret
jmp
sub
push
ds
pushf
sub
push
push
insb
mov
outsl
pop
cmpsb
cmp
inc
jbe
repz
or
daa
or
or
mov
insl
in
cmpsb
pusha
in
ret
pop
test
mov
out
mov
dec
sub
ret
sub
fs
int3
dec
lret
xchg
outsb
out
leave
pop
jno
cwtl
scas
jmp
in
pop
insb
shrl
xchg
dec
fiadds
ljmp
inc
je
add
mov
stos
dec
mov
test
lret
outsb
incl
mov
lods
test
into
adc
outsb
maskmovq
testl
pusha
aas
aam
dec
cmpsb
or
ja
dec
popf
imul
and
xor
inc
mov
and
enter
cmp
push
mov
xchg
xlat
pusha
lock
popa
inc
mov
mov
das
mov
stc
or
fsubrs
mov
xor
hlt
dec
cwtl
stos
fdivr
jb
pusha
pop
mov
out
jle
mov
mov
xchg
push
xor
mov
mov
mov
test
sti
xor
inc
das
fcos
dec
data16
ret
lock
xchg
mov
push
push
orl
push
in
scas
cmp
xchg
add
push
dec
aaa
xor
ljmp
cmp
mov
repnz
arpl
aam
aaa
dec
sti
dec
icebp
cltd
xchg
push
cmc
xchg
aad
in
mov
inc
xor
lods
sub
scas
cmp
xchg
dec
stc
cld
sub
cmpsl
shrb
cmpsb
mov
mov
out
data16
jle
adc
jnp
and
jbe
insb
inc
cmp
fnstcw
outsb
in
addb
sub
cs
jl
inc
pop
cmpsb
pop
insl
imul
popa
insb
sub
pop
mov
xor
ljmp
shll
cli
fdivrs
test
scas
dec
rolb
xchg
sub
insb
fstpt
cmc
scas
xor
int3
sub
push
jl
loope
pop
popw
jmp
or
scas
shll
push
out
movsb
outsb
or
mov
push
leave
or
xchg
jo
mov
mov
xlat
adc
dec
push
mov
xchg
fsubrs
pop
jo
pop
testb
shrl
add
add
cmp
jno
in
call
inc
cli
lret
and
movsb
push
bound
mov
pop
jg
ror
dec
jnp
outsb
test
out
hlt
ljmpw
inc
das
test
push
pop
mov
and
push
shlb
or
lods
rolb
sti
cwtl
cwtl
stc
xchg
inc
fwait
cmp
push
sub
cmp
test
fs
inc
adc
hlt
repnz
fiadds
pop
jg
push
pop
enter
push
icebp
mov
aaa
xor
dec
xor
mov
inc
repz
fisttpl
pop
arpl
out
insl
sub
loop
test
icebp
xor
into
inc
mov
jmp
push
add
jnp
js
xor
aaa
in
lcall
into
sub
adc
xchg
mov
je
mov
shrb
push
pop
cmp
arpl
inc
test
movsb
adc
lods
pop
stc
mov
aas
shrl
lea
fs
scas
adc
les
icebp
jno
push
cmp
loopne
lret
adc
in
pop
adc
out
sub
xor
stos
daa
mov
push
mov
mov
test
fwait
ds
push
dec
mov
pushf
mov
jmp
nop
out
mov
sub
sbb
fcom
call
xlat
adc
jle
push
shl
or
out
out
xchg
pop
adc
scas
xchg
sub
jmp
mov
bound
adc
add
stc
push
cmpsl
ds
loopne
push
cmp
dec
mov
cmp
fnstsw
mov
pop
negl
addr16
pop
mov
push
stc
mov
icebp
not
cmpl
lret
or
push
dec
mov
test
xorl
lcall
nop
xchg
add
mov
xchg
adc
push
pop
mov
dec
subl
jle
mov
jmp
adc
or
mov
enter
mov
pop
pmaxsw
jo
sub
xor
pop
dec
dec
outsl
ret
cmc
mov
add
stc
jno
lcall
sub
adc
dec
aas
mov
rcrl
imul
sbb
mov
roll
pop
pop
push
popf
pushf
fsin
pop
repz
and
lock
fdivrl
dec
lock
popf
mov
push
lea
fdivrl
imul
xor
imul
mov
adc
outsl
or
cmp
idivb
out
enter
fstpt
and
call
in
shl
aad
loope
std
sub
pop
dec
cwtl
push
sub
xorl
loope
push
sub
imul
repz
mov
aaa
or
cmp
add
inc
mov
ret
cmp
js
pop
int3
nop
arpl
popf
insb
jg
dec
xchg
test
mov
mov
lret
cmp
sbb
cli
inc
mov
cmp
jbe
fcompl
and
jle
jns
mov
xchg
sbb
fwait
in
rol
cmp
lahf
mov
clc
xchg
insb
ret
into
shlb
xor
ds
or
mov
cwtl
mov
push
das
shlb
std
pop
lahf
add
lock
pop
cmpsl
int3
fdivrl
pop
add
jmp
xor
push
xchg
ljmp
cmp
add
lock
je
mov
dec
cmp
cmpsb
mov
call
push
das
imul
dec
inc
mov
adc
stos
mov
insb
outsb
pusha
mov
test
insb
dec
jge
out
sbb
xlat
das
addr16
mov
or
sbb
pop
test
ret
fidivrl
fwait
lock
scas
jl
into
mov
test
push
or
movsb
mov
cmp
inc
cmp
fst
test
cmp
mov
inc
cmp
sub
aaa
das
cmp
inc
mov
notl
stos
fistpll
push
rorb
mov
push
pusha
adc
mov
or
mov
mov
push
xor
inc
sbb
dec
xor
push
inc
sub
in
cmpsb
outsb
pop
and
xchg
mov
addr16
ljmp
out
xchg
iret
ss
hlt
xchg
or
pop
mov
cmp
sbb
pusha
aad
inc
push
xor
out
int
iret
push
mov
jns
cmc
mov
out
cmp
or
imul
sub
and
fwait
push
cmpb
imul
out
cmpsb
or
adc
lods
out
mov
xchg
int3
xor
arpl
imul
jmp
xor
mov
pop
sbb
or
pop
or
roll
push
dec
hlt
xchg
jp
adc
mov
scas
push
aaa
push
divb
jns
mov
mov
xchg
daa
mov
nop
mov
in
pop
cmpsl
test
xchg
dec
ljmp
testb
cmpsb
adc
jle
add
dec
pusha
aas
push
outsl
pop
cltd
adc
mov
test
rol
mov
xchg
pop
ja
jecxz,pn
jbe
les
cltd
test
shlb
xor
xchg
xchg
outsl
jg
mov
hlt
sub
fistpll
push
fwait
repnz
or
outsl
mov
push
in
gs
sbb
btr
mov
decb
add
mov
aad
lock
cli
cmp
je
leave
adc
in
xor
mov
adc
int
fcomp
mov
push
cmpb
in
out
fwait
jnp
mov
jns
shlb
sub
shll
fistpll
jno
lods
cmpb
orb
push
lret
jo
xchg
imul
daa
cmp
stc
loope
pop
lcall
out
add
push
int3
stc
cmpsl
lods
data16
ljmp
pop
adc
ror
pop
xor
pop
and
pusha
mov
ljmp
out
add
push
gs
push
fsubr
lock
push
adc
stos
push
test
sub
adc
pushf
jmp
add
icebp
dec
or
and
leave
mov
mov
rol
xchg
push
fwait
sub
push
mov
ljmp
repnz
fcmovnb
pop
jo
subb
repnz
call
repz
scas
mov
mov
mov
adc
stc
cmp
insl
or
fldenv
aad
test
addl
push
cmp
xchg
insl
push
and
push
lcall
lods
mov
ljmp
stos
dec
cli
dec
lea
jmp
cld
outsl
cld
or
lock
std
push
pop
lahf
xor
inc
gs
fldl
jbe
pop
out
call
jno
jmp
adc
dec
pop
das
lds
dec
arpl
xchg
out
cmc
pop
mov
das
aam
cli
les
jl
xor
lret
aam
inc
mov
test
fisubrl
pop
iret
cmc
push
aas
shll
push
xchg
jl
push
das
jge
mov
lds
dec
jo
rcll
cmp
xchg
or
mov
inc
sti
out
dec
mov
pop
std
icebp
clc
mov
or
fmul
aad
push
in
pushl
push
push
lahf
mov
adc
or
and
dec
push
loope
das
mov
jecxz
jmp
sbb
inc
lods
mov
inc
jl
mov
and
mov
pop
adc
cmc
adc
test
jo
rcr
movsl
repnz
push
dec
xchg
fistpll
adc
dec
adc
das
addb
fwait
and
dec
pop
pop
lret
pop
icebp
pop
jmp
ljmp
sub
lock
lock
popa
int
xchg
adc
jo
aam
cmpsb
popa
pop
push
mov
sub
sarb
in
pop
fdivs
mov
in
test
ret
loope
mov
aam
jp
pop
push
cmp
sub
jg
push
xchg
xchg
xchg
and
push
sbb
imul
out
je
lock
inc
nop
adc
sti
sbb
jmp
pop
pushfw
inc
push
cltd
xor
mov
stos
bndstx
stos
test
push
lock
inc
mov
rcrl
jae
dec
fimull
pop
cmp
shrb
popf
shlb
cmp
xor
lea
movsb
dec
es
ljmp
test
mov
fldenv
inc
out
fidivrl
sarb
push
fisubl
push
or
dec
mov
daa
psrlq
add
pop
inc
xchg
and
pop
test
cmc
outsb
inc
or
mov
cmpsb
push
lock
mov
imul
sub
mov
ret
daa
push
mov
mov
add
call
int
cmc
outsb
xor
dec
outsb
and
xor
mov
rcrl
jp
jb
mov
daa
mov
dec
pop
movsl
adc
out
cmp
test
sbb
push
data16
arpl
aam
mov
push
mov
xor
insb
imul
push
sub
sti
jb
jecxz
mov
mov
repnz
mov
jb
lds
xchg
jnp
mov
stos
lahf
mov
cld
mov
in
aaa
xchg
les
imul
enter
insl
push
mov
fwait
push
or
jecxz
loopne
out
cltd
fldenv
sub
repnz
or
fyl2x
xor
mov
dec
stos
je
call
xchg
xchg
and
das
inc
dec
mov
test
enter
lcall
bound
in
pop
stc
in
sbb
mov
daa
mov
out
mov
push
or
addb
dec
cmp
lret
sub
subl
ret
ret
mov
push
aas
jb
xchg
bnd
or
xor
and
mov
movsb
dec
fwait
icebp
aam
adc
ljmp
xor
imul
lods
and
divb
imul
lock
add
cli
xlat
jge,pt
ljmp
xor
imul
stos
mov
lahf
addl
roll
push
and
aad
iret
add
shll
jno
dec
xchg
jb
clc
jle
push
jns
adc
fimull
mov
into
inc
popa
mov
sub
stos
sbb
lahf
adc
jae
add
sub
fs
push
push
xor
pop
fsubl
mov
xor
jmp
fs
dec
sahf
sub
fmul
cli
popf
push
dec
aas
jl
mov
aam
icebp
or
xor
xor
adc
or
dec
vmovaps
fstpt
jnp
imull
mov
shlb
in
jmp
jne
inc
shll
pop
pop
cs
js
adc
rcll
mov
or
and
xor
mov
lcall
pop
adc
cld
xor
dec
dec
fwait
jns
push
cmpsl
push
inc
cld
dec
adc
insl
sarl
pop
pushf
fcmovne
xchg
cmp
or
xchg
jp
sub
scas
dec
stc
xor
or
add
and
imul
xchg
jle
mov
fldt
loop
ds
pop
test
pop
shr
xchg
xor
das
inc
stos
adc
sub
or
jp
or
mov
pop
scas
sub
aaa
loope
pop
cmp
xlat
addr16
sbb
jl
xchg
pop
in
shrb
test
push
xor
push
and
and
jmp
lret
es
and
push
pop
mov
movb
call
xor
push
stc
adcl
aam
movsb
mov
push
mov
mov
and
int
pmullw
ss
mov
mov
outsb
lcall
and
popa
arpl
jb
pop
fadds
mov
lret
push
inc
sub
add
cmp
cmc
stos
adc
cmpsb
pop
jo
sbb
inc
sahf
dec
mov
mov
insb
pop
shlb
imul
aam
lret
dec
jne
ror
mov
int3
into
lock
cmp
dec
ja
test
jnp
out
push
iret
xchg
call
insb
fisubrs
or
add
dec
pop
push
bound
mov
rcll
stc
or
cmc
push
dec
and
mov
mov
cmp
leave
icebp
jg
sbb
cwtl
dec
clc
and
cmp
adc
adc
xchg
outsb
ja
add
inc
pop
lcall
mov
int3
push
repnz
bound
pop
mov
or
in
mov
xor
jo
jns
inc
xor
stos
dec
jae
imul
jae
jnp
popl
lret
or
cmp
cwtl
lea
cmp
inc
pop
mov
jg
pop
adc
mov
pop
mov
lcall
xlat
sub
test
pop
lahf
fs
inc
jne
inc
mov
sti
mov
or
xor
call
std
add
jns
jno
mov
sub
aas
push
and
adc
pop
pop
imul
loope
adc
sub
pop
mov
pop
xchg
ret
out
sbb
fmulp
clc
je
mov
sahf
mov
push
sub
mov
mov
push
pushl
sbb
sbb
fidivrs
sub
addl
stc
mov
cwtl
xchg
fwait
and
dec
jmp
fdiv
enter
shlb
push
cmp
pop
sub
xchg
pop
je
andl
daa
mov
and
call
push
or
mov
in
jmp
int3
pop
ljmp
push
ss
lods
imul
in
xchg
je
inc
sub
and
lea
shrb
faddl
into
fxch
icebp
daa
mov
xlat
mov
fldenv
inc
and
or
or
dec
adc
shl
adc
adc
test
lock
subb
mov
and
mull
pop
and
lds
rclb
out
xor
mov
adc
inc
lea
pop
ds
add
sbb
or
dec
xor
xchg
fdivl
pop
pop
push
aaa
or
fwait
mov
leave
push
rcrb
movsb
xor
push
sub
jne
jle
xchg
repnz
inc
xor
lea
lods
and
int
push
dec
sub
cmpsb
fs
xor
sti
enter
dec
fnstsw
cmp
icebp
cmpsb
cmp
xor
push
mov
mov
and
xchg
sub
mov
jno
in
fsubs
cmpsl
sbb
inc
pushf
loopne
add
mov
push
xchg
leave
mov
jbe
mov
lret
fwait
shl
push
insb
mov
dec
lcall
mov
aas
aam
movsl
add
jno
iret
test
movsl
aas
fadd
repz
jb
xchg
aad
push
repz
add
ss
test
cltd
or
push
cld
jmp
cmp
jp
lret
mov
push
xlat
push
ja
adc
sub
push
int3
dec
test
push
mov
push
out
repz
mov
push
push
arpl
sub
inc
xor
bound
cmp
xlat
pop
push
xchg
leave
xchg
adc
or
jl
cmp
neg
dec
jb
fs
cmp
fiadds
pop
cmp
or
inc
push
cmp
pushf
or
add
add
js
movsb
cmp
xlat
repnz
sbb
paddb
out
adc
or
xchg
sub
xor
outsb
cmp
push
push
clc
xchg
mov
out
mov
dec
dec
mov
add
cli
cmpsl
fs
push
stc
inc
fdivrs
stos
cmp
popf
mov
and
jae
mov
aaa
pop
in
mov
outsl
fistl
pusha
pop
or
xchg
mov
xchg
mov
or
push
jns
push
jnp
int3
sub
mov
dec
cmp
lods
inc
mov
fcmovnbe
pop
lahf
imull
dec
loop
stos
xor
iret
push
aas
xchg
xchg
add
push
push
lds
or
and
sbb
sub
dec
fsubrl
xorl
pop
sub
and
dec
out
popf
sti
mov
mov
sbb
xor
add
jns,pn
int
push
hlt
inc
sbb
out
jl
loopne
push
pop
leave
push
cwtl
pop
jge
jge
sub
or
mov
icebp
jne
adc
xor
jb
xor
cld
add
xchg
mov
scas
jp
cmp
loope
stos
xlat
xor
int
mov
cmp
pop
xor
mov
enter
inc
xlat
rorb
jo
push
sbb
cmp
sbb
cwtl
cs
jle
dec
cld
iret
xor
daa
fidivs
movsb
jl
xor
loope
cmp
shr
push
mov
test
stos
jecxz
lcall
nop
pop
jns
movsb
and
jbe
aas
clc
adc
mov
and
inc
addr16
ja
mov
mov
and
test
xchg
pushf
add
shll
adc
and
popa
test
test
icebp
fcoml
or
roll
adc
xlat
or
dec
xchg
int
lds
scas
push
int
aaa
lock
fs
outsl
es
push
add
or
or
lods
cwtl
insb
or
roll
cwtl
addr16
sub
aam
lock
scas
adc
jecxz
sbb
ds
imul
mulb
mov
shrl
mov
je
insb
fisttps
mov
xchg
insb
idivb
nop
dec
ss
loopne
fwait
jmp
jne
mov
lcall
mov
xlat
jge
lret
clc
movsb
ret
and
add
dec
data16
jle
stos
jbe
leave
lea
dec
negl
add
cli
and
mov
int
subb
inc
into
negl
mov
bound
insb
push
fwait
insb
push
shrb
mov
cmpb
xchg
test
adc
sub
out
push
xor
test
notl
stos
shlb
push
xlat
mov
outsb
cwtl
dec
add
cmc
mov
ss
push
jbe
sbb
mov
cs
mov
or
pop
xchg
xor
inc
psubusb
jg
loopne
arpl
dec
ss
cmp
pop
into
jne
lods
add
cwtl
cwtl
int3
adc
idivl
leave
mov
push
cmp
mov
jecxz
and
add
sbb
leave
ljmp
popa
mov
out
scas
int3
imul
bound
jne
hlt
and
add
ss
jne
sub
pushf
sbb
xchg
cmp
push
pusha
movsb
and
mov
ds
lcall
jne
inc
jnp
xchg
in
cmp
imul
dec
loope
adc
aaa
lcall
mov
inc
cmc
xor
mov
dec
insl
repnz
test
sub
test
jg
dec
lock
push
add
shrl
or
cmp
sarl
pop
inc
icebp
mov
push
xor
shll
add
add
jno
ja
gs
leave
push
iret
jo
cmpsb
inc
jb
jmp
xlat
icebp
outsb
jp
in
and
pop
mov
repz
std
fidivrl
dec
mov
sbb
icebp
imul
sub
and
jp
push
push
dec
mov
ds
mov
jl
dec
ret
test
in
mov
xchg
stc
mov
rclb
inc
or
lds
inc
rorb
mov
or
insl
movsl
mov
fdivrs
lock
std
lahf
lcall
push
out
arpl
xchg
and
popa
arpl
jo
mov
jle
sti
cmc
outsb
daa
dec
push
dec
movsl
aad
add
lcall
dec
ds
imul
push
mov
outsl
mov
jne
in
adc
mov
mov
repz
pop
cs
in
push
test
iret
inc
inc
mov
lcall
pop
add
pushf
mov
pop
repz
pop
mov
and
add
adc
push
mov
push
xor
mov
sahf
sub
lahf
push
ficoms
dec
fidivs
fdivrp
lret
mov
sub
ja
cmc
push
sub
test
dec
xchg
dec
lea
xchg
cmpsb
sub
cmp
ds
add
cmp
xor
cwtl
in
ljmp
out
pop
rcrl
and
fimuls
shlb
lods
pusha
iret
adc
stc
ljmp
mov
pushf
adc
dec
in
fs
clc
jg
xor
sbbl
enter
repnz
and
mov
cmpsb
mov
fwait
mov
fwait
das
sub
pop
xchg
dec
movsl
mov
mov
out
lcall
pop
test
dec
stos
push
dec
adc
xchg
testl
fmull
repnz
ljmp
xor
lods
and
adc
sub
shr
inc
xor
add
and
mov
xchg
xor
aas
sahf
jp
int
in
int3
cmp
sub
mov
push
je
hlt
fcoms
add
cmpsb
jb
lahf
lds
ss
mov
mov
ljmp
jecxz
mov
adc
jae
mov
les
bound
call
outsb
or
out
mov
adc
fs
sub
scas
xchg
or
mov
cwtl
inc
inc
pop
sub
in
pop
mov
xchg
inc
mov
pop
cmpsl
sub
mov
jnp
lret
sbb
repz
push
pop
iret
sub
decl
lcall
dec
cmpsb
inc
enter
cmpb
xlat
xchg
sub
icebp
inc
out
xchg
cmp
daa
xor
push
xchg
imul
xchg
cmovs
add
lds
icebp
push
aaa
xchg
sbb
shlb
rcll
iret
mov
scas
push
mov
loopne
or
sub
int
loopne
pushf
jns
cmp
cmp
hlt
fildl
pop
pop
mov
mov
cmp
mov
push
dec
push
aas
cld
mov
lock
inc
popf
test
out
mov
mov
jbe
or
dec
repnz
pop
cwtl
cmc
fs
jae
xor
push
pop
push
leave
pop
outsl
cmp
adc
shl
in
add
stos
ret
in
mov
test
sarb
sbb
pop
cmpsl
loopne
imul
ret
xchg
push
in
aad
mov
das
xorb
dec
mov
mov
sub
fwait
dec
sbb
jnp,pt
sub
in
insl
xchg
mov
cltd
stos
scas
and
test
pop
inc
dec
cmp
movsl
push
scas
xchg
addr16
aad
inc
mov
stos
arpl
dec
jmp
push
mov
out
xor
cmpsb
sub
xchg
imul
xchg
lock
pop
ss
ja
enter
xlat
push
push
hlt
xor
insl
cli
sbb
push
pop
push
addr16
sar
push
add
and
lret
inc
xchg
pop
jno
adc
cmp
data16
xchg
fiadds
jbe
outsb
and
push
fnstcw
add
aam
adc
je
adc
cmp
mov
mov
movsl
cld
push
push
out
xchg
andl
test
cmp
out
or
mov
add
mov
fldl
sbb
loopne
push
sbb
inc
shll
idiv
pusha
xor
call
ja
xchg
aaa
arpl
roll
jae
addr16
xor
mov
sub
fildll
stos
add
cmpsl
inc
mov
push
inc
dec
jmp
addr16
cmc
xchg
iret
pusha
sub
imul
imul
into
scas
sahf
repz
dec
jne
lock
jo
pop
out
jmp
in
in
dec
adc
std
cli
mov
addr16
mov
cmp
xor
outsb
pop
jo
mov
outsb
ljmp
outsl
and
mov
cld
inc
jmp
stos
fwait
dec
jne
pop
add
xor
addr16
clc
and
pop
jecxz
cltd
cli
lret
mov
mov
jb
jae
fidivl
push
xchg
add
iret
xor
dec
sahf
ret
imul
sbb
cltd
and
out
sbb
daa
inc
mov
push
ss
les
mov
push
push
shr
jne
dec
inc
movsb
xor
mov
push
push
push
aaa
jge
push
xor
cmpsb
fwait
mov
xchg
xor
inc
jns
inc
add
xchg
mov
push
or
ficomps
std
nop
push
cmp
in
jb
sahf
dec
jg
dec
imul
cmpsl
cltd
jb
mov
daa
jmp
cmp
inc
xor
cwtl
adc
out
sub
add
mov
arpl
sarl
xor
bnd
xor
cli
jne
add
cmp
jnp
or
or
sub
mov
filds
insl
sbb
loopne
loopne
rcr
aaa
dec
add
mov
sbb
dec
push
push
icebp
dec
dec
out
inc
push
cmp
and
mov
icebp
imul
jge
outsb
repnz
fistpl
repz
push
jl
and
push
xchg
xor
repnz
pop
or
mov
loopne
lods
or
dec
inc
mov
lcall
mov
push
ja
and
jae
jle
mul
xchg
cld
ds
push
aas
je
sub
outsl
push
inc
leave
xchg
dec
jle
jae
stos
ja
sub
es
xchg
testl
xchg
jl
imul
cli
loopne
inc
sarb
scas
fwait
sbb
xchg
fimuls
fwait
repz
pop
out
imul
xlat
gs
pushf
movsl
cmpsl
mov
push
stos
and
inc
push
or
mov
rorl
dec
sbb
xchg
lea
inc
stos
add
dec
ss
rcrl
rol
push
hlt
gs
call
add
mov
lcall
loop
xchg
dec
and
test
test
cmpsl
inc
clc
lcall
loope
movsl
daa
jb
in
jbe
movl
pop
fnstsw
push
icebp
or
jnp
dec
mov
sbb
into
int
jnp
ljmp
push
arpl
into
loope
jns
mov
adc
pop
leave
stos
mov
adc
mov
jg
sahf
add
js
dec
out
aaa
incl
xchg
das
jae
push
cs
mov
out
lods
pop
ss
jne
and
push
pusha
sbb
loop
xchg
std
push
add
sti
pop
mov
add
mov
xchg
jae
jmp
dec
add
cmp
bound
add
jle
pop
pop
fxch
mov
dec
sbb
mov
imul
mov
xchg
or
test
sub
jmp
cmp
leave
fsub
cmp
push
es
stc
in
add
mov
call
push
lret
jl
mov
test
jp
fists
sub
gs
loopne
and
add
or
and
adc
dec
inc
test
cs
sar
aam
nop
arpl
and
dec
stc
mov
popa
xor
out
dec
sahf
into
sub
jo
jl
inc
shlb
cmp
add
mov
lea
dec
fsubrs
mov
sub
lret
and
push
lods
imul
sbb
popf
jae
jae
leave
or
ljmp
mov
and
or
addb
and
push
jmp
xchg
mov
lahf
jp
repz
pop
cmp
mov
xlat
adc
clc
cwtl
pop
fildl
mov
call
inc
mov
movsb
pop
xor
flds
in
popf
call
push
iret
int
xchg
and
mov
mov
cmc
popl
dec
in
int
xlat
jle
add
push
std
les
adcl
mov
dec
jb
pop
jnp
push
insb
mov
sarl
cmc
dec
or
sub
div
lret
push
loope
inc
lret
nop
jae
aam
sbb
jne
andb
inc
test
mov
ja
scas
aaa
add
filds
push
mov
enter
lds
aam
lahf
mov
sar
lds
jg
cwtl
in
dec
sub
aaa
mov
xchg
pop
fisttps
faddl
out
ret
xor
or
cmp
xchg
sbb
rclb
cltd
sarl
lods
inc
mov
hlt
adc
aam
cli
popa
inc
xor
rcrb
adc
sbb
cs
shrb
mov
jbe
or
or
mov
jbe
mov
sub
rcrl
mov
sarb
or
stos
push
or
mov
push
mov
pop
inc
jne
outsb
xor
sub
lret
cli
dec
push
outsl
loopne
out
mov
loope
cs
pop
jae
and
dec
stc
movsb
or
push
cmpsb
pusha
pusha
movsl
das
aas
lods
in
cs
jle
xchg
pop
lods
icebp
add
roll
imul
inc
cvtpi2ps
pop
call
loop
dec
lods
icebp
xchg
jns
repz
ja
scas
push
xchg
pop
addr16
xchg
fstpt
ret
jmp
lret
jbe
push
lahf
mov
mov
call
imul
lods
mov
pusha
xor
xchg
xlat
dec
repz
pushf
inc
lods
imul
ret
out
mov
dec
dec
aaa
sub
push
sti
or
repnz
push
add
inc
daa
subl
sub
ja
test
adc
and
lock
fidivrs
outsb
mov
test
fsubrl
pop
sub
iret
inc
jmp
mov
insb
pop
mov
aad
fcomip
push
push
fdivs
inc
scas
push
in
jl
nop
pop
out
jl
mov
call
mov
addr16
and
out
sub
cmc
or
shl
sub
xchg
addr16
jo
sub
aas
pop
mov
insb
stc
lds
push
sub
mov
out
xor
dec
push
insb
test
movsl
js
jo
test
pop
xchg
push
mov
rcll
insb
ret
mov
sub
xchg
movsl
sbb
pop
mov
repnz
dec
into
clc
mov
sub
fs
xor
mov
lcall
push
pop
cmp
push
and
daa
mov
mov
cmpl
push
dec
ljmp
dec
jmp
popf
cmp
and
dec
add
out
stos
sub
imul
mov
push
and
gs
mov
and
hlt
xchg
dec
lcall
pop
dec
std
mov
ficomps
xchg
aaa
aas
jb
dec
inc
clc
jp
cltd
filds
stc
ljmp
daa
jmp
xchg
popf
addr16
jmp
mov
in
sbb
loopne
sub
insl
loopne
lds
test
add
mov
mov
in
jno
lock
jecxz
cmp
add
ret
dec
cmp
je
fwait
jno
xchg
mov
cmpsb
dec
out
jns
out
fadd
sub
addr16
mov
pop
outsl
mov
sub
out
test
dec
shll
imul
xchg
inc
and
daa
jo
push
es
or
sarl
shll
xor
xchg
pop
jge
dec
jae
pop
imul
lock
xchg
js
add
fistps
lods
mov
test
fisttps
test
dec
insb
mov
outsl
daa
pop
ds
push
push
lret
xchg
pop
scas
pop
ja
test
data16
xchg
ja
mov
xor
out
pusha
mov
jle
pop
shlb
out
lods
mov
or
push
cmp
xor
mov
movsb
jno
mov
cmp
imul
mov
cmc
mov
stos
dec
loop
jl
outsb
or
mul
fpatan
mov
cwtl
dec
pushf
dec
out
mov
outsb
notl
ja
cmc
dec
outsb
ss
push
add
xlat
and
sub
push
in
shrb
rcr
outsb
inc
das
icebp
ret
push
imul
dec
pusha
jb
sarb
dec
mov
mov
fldl
lods
out
out
outsb
mov
bound
pop
adc
xchg
xorb
lods
roll
pop
mov
stos
mov
pushf
call
xorl
mov
xchg
mov
test
adc
jle
push
cmp
xchg
aad
ljmp
je
and
jne
xchg
pusha
pop
aaa
add
sbb
inc
sub
cmpsl
pop
pop
push
fwait
cltd
cltd
inc
outsb
jp
pop
sub
ret
mov
aaa
out
pop
push
call
divl
mov
sbb
int3
lcall
icebp
clc
jb
pop
sub
mov
lock
push
jae
mov
push
int
inc
int
lret
sub
scas
lret
in
test
cmp
clc
xchg
mov
pop
fucom
in
loope
outsl
xor
cmp
dec
psrad
xchg
adc
rcrl
or
add
rclb
jno
mov
mov
ljmp
ficoml
pushf
aas
imul
sbb
inc
inc
ret
js
shld
js
sti
les
ljmp
repnz
pop
dec
mov
negl
jb
stos
mov
pop
es
out
jae
inc
adc
les
jle
repnz
jmp
out
fwait
call
ret
movsb
in
sbb
xchg
dec
leave
scas
push
fidivrs
mov
ljmp
inc
mov
stc
loop
push
ror
mov
inc
cmp
in
sub
inc
cmpsl
out
jmp
adc
push
ds
push
test
pop
rdpmc
dec
ret
mov
ds
xor
xchg
lods
and
or
ja
mov
sub
jbe
adc
addr16
scas
push
icebp
mov
add
ja
gs
xor
test
jl
cmp
push
iret
add
das
xchg
jg
cli
sub
xor
daa
hlt
decb
fildll
pop
and
inc
pop
adc
int
dec
fwait
jb
aad
dec
aaa
pop
mov
pop
mov
rcll
cmp
sub
pushf
or
jo
sub
mov
mov
aad
pop
adc
nop
sbb
fistps
in
ficoml
and
and
pop
dec
jns
sub
mov
clc
arpl
mov
fidivrs
popf
daa
pop
jp
push
or
adc
or
and
sub
std
shlb
sbb
sbb
pushl
add
add
push
cmp
jb
sub
xchg
sahf
push
pop
mov
jp
and
pop
jle
andl
lret
sub
loop
jae
mov
shlb
addr16
fstpl
fnstsw
xchg
adc
mov
jmp
scas
sarl
test
inc
add
lods
dec
and
xchg
inc
adc
mov
loopne
jg
sub
rcrb
inc
outsl
ret
cmpsb
aad
les
ljmp
push
or
cltd
jbe
lcall
sub
dec
fldl
jo
cmpsl
pushf
or
ljmp
fcompl
xor
inc
lahf
idiv
push
fildl
ljmp
clc
mov
stc
lcall
or
outsl
adc
pop
sub
dec
or
aaa
mov
lods
add
xchg
or
mov
nop
das
or
cmp
in
rclb
ja
mov
jmp
xor
xchg
pop
out
jnp
inc
lcall
scas
inc
mov
push
icebp
push
pop
push
sub
adc
movsb
cmc
adc
push
mov
jl
cwtl
clc
mov
and
mov
fiadds
push
sub
mov
or
std
dec
sub
inc
loop
ror
bound
and
subl
fadds
xchg
hlt
sbb
jge
scas
push
push
je
or
dec
aaa
mov
iret
inc
sub
cli
sub
fisubrs
push
icebp
popa
xlat
mov
orl
test
adc
mov
neg
sahf
sub
inc
arpl
xor
stos
add
loop
mov
and
fidivrs
mov
test
std
int
rcl
imul
vpshld
push
push
push
repz
lcall
dec
sub
cltd
daa
std
inc
xchg
or
inc
imul
lret
inc
je
sahf
push
cli
lcall
sbb
lods
and
or
out
cmp
inc
out
dec
sub
in
xchg
inc
mov
dec
sti
or
adc
xchg
mov
xchg
xchg
shrl
mov
das
mov
xor
int3
adc
mov
inc
xlat
cli
mov
jg
es
cmp
dec
adc
mov
inc
pop
call
push
and
jae
push
sbb
cmc
popa
jae
jmp
mov
sub
out
xlat
push
stos
cmc
mov
push
scas
repz
push
push
das
addl
pop
outsb
inc
cmc
js
pop
in
shrl
cmp
lods
inc
push
adc
ss
mov
mov
std
js
inc
inc
mov
mov
sub
xchg
xchg
scas
cmp
imul
out
cld
cli
xor
mov
mov
jmp
add
jecxz
push
adc
fdiv
or
fisubl
jbe
cld
outsb
push
je
adc
inc
cmp
addr16
jmp
fists
and
mov
and
out
push
push
add
dec
xor
add
xchg
and
pusha
pushf
out
scas
mov
mov
repnz
lcall
xor
push
out
je
cltd
aas
jmp
add
out
jbe
jne
ret
in
fbld
or
xchg
xor
pop
dec
aam
inc
in
cmp
int3
mov
negl
xchg
xchg
rcll
dec
idiv
daa
cmp
fisttpl
addr16
push
push
mov
data16
into
das
cmc
ret
dec
ds
mov
cmp
add
inc
jmp
mov
xchg
dec
cmp
aaa
ja
dec
movsl
cmc
xor
mov
inc
dec
inc
ss
cmc
xchg
sub
sbbl
mov
push
mov
and
mov
sub
das
dec
push
inc
dec
or
push
pop
data16
shrl
jg
push
idivb
jbe
test
sub
mov
cmp
sarl
dec
cmpsl
sbb
xor
cmp
xorl
mov
mov
sbb
xchg
repz
xor
push
out
xorb
cmp
call
push
lret
pushf
xchg
pop
xlat
cmp
mov
ret
test
and
sub
cli
sbb
in
sub
ret
sub
xchg
ret
mov
or
xchg
push
push
adc
push
sbb
sahf
icebp
mov
lret
jp
mov
mov
out
jmp
xlat
pop
jns
shll
pop
into
imul
sbb
fcoms
push
mov
inc
dec
je
cmp
jmp
pop
mov
xor
or
or
sub
add
ret
loopne
xchg
dec
fldenv
push
mov
or
mov
mov
cmp
stos
popa
mov
dec
addr16
outsb
pop
fwait
cmp
push
aaa
pop
test
inc
je
sub
scas
sti
adcb
xchg
xor
das
xchg
loopne
int3
stos
and
ss
push
cmpsb
mov
out
pop
outsl
cld
mov
aas
sbb
cmp
scas
pop
popa
stos
sub
jb
cli
or
mov
test
push
jle
rcl
pop
cmpsl
add
cmp
test
and
in
aaa
pop
scas
mov
in
push
jmp
mov
push
stc
ljmp
mov
add
lock
inc
inc
xor
inc
aas
push
out
outsl
fisubl
mov
lea
xorb
fdivrp
jb
sub
cwtl
adcb
push
mov
shlb
cmp
shll
hlt
jge
cltd
add
ds
pop
mov
dec
sbb
int
and
and
fsts
cmp
loop
inc
int3
dec
call
aam
add
add
fadd
dec
mov
dec
jp
arpl
mov
jecxz
repz
sub
addr16
cwtl
cld
mov
inc
popf
xor
xchg
inc
cwtl
xor
cwtd
mov
outsl
pop
icebp
xchg
cmp
dec
push
or
es
sub
pop
push
lock
push
not
pop
pushf
lock
pop
test
setge
pop
jbe
xor
imul
popf
arpl
cmp
cmp
fidivrl
add
adc
imul
aaa
mov
pop
pop
add
push
pop
mov
push
pop
adc
fprem1
js
das
xchg
cwtl
xor
repz
mov
push
daa
xor
mov
aaa
inc
and
pop
mov
cmc
subl
ss
jbe
xchg
daa
push
jl
inc
ret
test
aad
popa
testl
xchg
cltd
ja
cmp
test
insb
push
hlt
lahf
mov
cmpsb
cmpsl
es
or
cmc
pop
leave
sti
inc
repz
into
pop
or
in
lods
mov
cwtl
enter
loope
mov
mov
fisubs
rorl
inc
stos
enter
or
mov
cmpsl
adc
cltd
cmpsb
pushf
testl
xlat
push
packuswb
or
out
inc
push
fwait
inc
loopne
push
pop
push
loopne
dec
inc
sub
sbb
jmp
xchg
mov
inc
adc
sahf
mov
sub
rclb
inc
jp
notb
xchg
aam
mov
stc
push
lret
insb
push
inc
out
cmp
cmp
push
push
jmp
cmp
mov
jecxz
dec
jmp
mov
adc
fnstsw
mov
cs
xlat
bound
decb
nop
mov
cli
bnd
xor
add
nop
dec
imul
aaa
sbb
dec
and
cmp
mov
mov
xchg
dec
scas
jae
test
push
cwtl
out
fadds
and
mov
add
dec
dec
mov
lcall
and
repnz
xchg
loope
jnp
dec
cmp
sahf
cwtl
movsb
jl
out
cmc
sub
adc
imul
adc
jp
repz
insb
das
mov
iret
pop
xchg
pop
sbb
test
int
cmp
insb
daa
sbb
xchg
mov
pop
roll
test
addb
mov
push
pop
rolb
jmp
icebp
pop
test
adc
dec
in
je
loope
jnp
xor
test
lds
pop
je
jmp
jbe
jo
nop
fistpl
idiv
out
mov
push
push
mov
mov
stos
iret
jno
fwait
mov
adc
xchg
in
add
adc
or
into
mov
sbb
shlb
mov
xchg
jge
push
lods
clc
fidivl
jp
cmp
ja
pop
enter
cs
mov
xchg
out
imul
or
dec
fwait
out
insl
push
push
xlat
addr16
jo
int3
cmpsl
fidivs
xor
mov
fidivs
incl
mov
aad
adc
sub
sub
dec
imull
push
shrb
out
push
sub
push
fdivl
lock
outsl
stc
cmc
push
cmp
out
push
ds
mov
sbb
mov
arpl
pop
adc
mov
dec
pushf
sub
mov
dec
sarl
add
dec
cwtl
xor
mov
xor
out
enter
push
ja
push
xchg
mov
pop
push
adc
adc
bound
mov
sarl
add
scas
into
push
test
lret
jl
stos
adc
pop
mov
mov
lea
and
xchg
dec
fs
push
sub
add
ja
lods
in
data16
addr16
fidivl
ret
je
push
and
pusha
fs
xchg
sbb
iret
pop
cld
push
xor
and
sbb
jl
xlat
dec
jns
loope
or
mov
add
or
jle
aam
sbb
jo
sub
in
dec
cmp
fcoms
push
in
lcall
pop
inc
pop
orb
jecxz
iret
sub
imul
pop
testl
push
insb
cmp
loopne
jns
sti
enter
sbb
incb
lcall
jp
dec
dec
cmc
shlb
mov
stc
rcrl
jno
lahf
adc
jo
push
dec
out
ficoml
clc
jp
negb
call
les
sbb
fiaddl
push
cmp
jmp
xchg
jmp
clc
stos
adcb
imul
sbb
cld
cwtl
insl
test
hlt
add
pop
repz
sub
adc
scas
in
add
imul
cli
jg
stos
xor
stc
daa
gs
test
inc
inc
push
mov
out
out
xchg
dec
and
mov
cli
clc
cltd
dec
jnp
mov
movups
adc
sub
lret
jns
inc
jnp
jl
shll
sarb
jb
mov
xor
jmp
ds
out
mov
in
adc
adc
push
sub
mov
fldt
addl
sub
aad
inc
dec
mov
or
stos
mov
adc
pop
addr16
dec
adcl
shrb
pop
aaa
into
in
daa
out
iret
inc
repz
xor
adc
divl
test
das
cmpsl
inc
test
in
pop
xor
mov
push
push
in
loope
pop
or
inc
ss
mov
xchg
cmpsl
fmull
divl
adc
push
pop
pop
hlt
pop
enter
cmp
sub
mov
ljmp
mov
lods
lahf
mov
mov
dec
insb
out
ds
es
movsb
add
mov
xor
xlat
and
popa
mov
aas
push
pusha
push
jo
and
sahf
pop
rorl
and
push
or
out
push
or
outsb
loopne
ret
xor
mov
lret
iret
xor
fistps
push
and
cmp
clc
flds
aas
repz
and
cmp
mov
sahf
lea
lahf
xor
repnz
rorb
not
lds
insb
mov
inc
mov
outsb
mov
xchg
pop
fwait
std
dec
ds
dec
jle
sub
sbb
cs
adc
add
mov
mov
mov
pop
sub
icebp
mov
inc
cmp
and
xchg
jp
cmp
cmc
imul
andb
mov
mov
dec
scas
movsb
xchg
push
test
lock
mov
adc
or
lock
lods
jecxz
mov
into
jno
adc
aaa
dec
mov
leave
cwtl
xchg
jno
lea
sbb
sub
dec
les
or
add
push
xor
inc
mov
inc
and
and
ljmp
xchg
jo
leave
mov
sbb
cmp
pusha
bound
cld
das
cltd
mov
pop
je
push
mov
fdivrs
bound
sub
mov
push
mov
jmp
lock
dec
xor
pop
pop
rorb
adc
repnz
cs
adc
outsl
cmp
cmpsl
std
inc
daa
loop
outsl
xor
shrb
insl
mov
push
cmc
ret
mov
sub
gs
rorl
arpl
push
out
shrb
je
data16
lahf
mov
nop
cmp
cwtl
sbb
inc
mov
or
cmp
cmpsb
mov
inc
js
into
jns
push
movsl
jbe
or
and
xlat
scas
rcr
dec
lods
mov
das
sub
imul
sub
daa
sub
ss
push
xlat
adc
aaa
mov
jbe
xchg
mov
lret
rcll
adc
cmpsl
mov
push
cmp
jp
mov
das
jecxz
iret
xchg
sahf
cs
fstpl
mov
inc
push
and
cwtl
cmp
xchg
push
mov
lock
mov
pop
lods
lock
call
shlb
push
or
loop
cltd
push
aad
sub
push
lret
shll
mov
pushf
in
orb
test
icebp
in
daa
or
cwtl
push
sub
or
movsb
or
pop
cli
cltd
je
sbb
xchg
loop,pt
push
scas
call
or
or
mov
out
cmp
das
sub
shl
mov
push
andl
mov
repnz
jno
imul
in
addr16
cmp
or
mov
ljmp
popa
scas
iret
dec
add
mov
imul
xchg
cli
xchg
or
lock
repnz
notb
pop
or
jnp
gs
shlb
push
mov
call
pop
mov
test
cmp
mov
adc
shrb
outsl
cvtps2pi
xor
adc
aaa
dec
sub
mov
pop
ss
in
or
pop
adc
jno
sub
in
lods
js
xor
into
lret
popf
xchg
insl
cmp
scas
pop
jge
outsb
adc
shrl
pop
jns
lods
mov
mov
or
sbb
movsl
pop
mov
push
sub
sti
sbb
movsb
ljmp
repnz
stc
xchg
adc
aas
sbb
xchg
xor
jbe
loope
or
call
in
ljmp
mov
das
push
and
push
rcrl
sub
sbb
jbe
aas
fmull
fs
loop
jmp
imul
xchg
aaa
sub
call
push
out
icebp
movsb
mov
dec
repnz
or
popf
dec
mov
stc
push
aaa
push
mov
or
adc
data16
lea
popf
mov
dec
push
cs
xchg
mov
icebp
pop
repz
addr16
or
dec
mov
out
inc
mov
test
mov
enter
jle
mov
pop
sahf
cs
adc
xchg
jbe
test
ljmp
xchg
stos
daa
cmp
mov
icebp
mov
dec
add
outsl
lea
int3
mov
aaa
jo
daa
adc
repz
xor
gs
dec
adc
or
inc
dec
adc
mov
push
xchg
sti
push
scas
out
aaa
mov
push
mov
stos
sub
jae
imul
mov
push
fcoms
aaa
out
push
mov
jne
lret
paddw
mov
insl
mov
mov
jne
into
iret
cmp
mov
xor
iret
push
push
and
ss
popa
shll
cs
dec
dec
push
mov
das
xchg
das
cmp
icebp
in
out
xchg
pop
push
pop
mov
out
push
push
mov
dec
add
outsl
data16
in
clc
repnz
xor
les
inc
adc
or
inc
and
jae
mov
push
adcb
jbe
push
mov
stos
sub
jb
imul
mov
push
fcoms
aaa
out
push
jp
jne
lret
psubd
jnp
insl
mov
jl
jne
into
iret
cmp
jl
xor
iret
push
push
out
xchg
pop
sbb
popa
shll
cs
dec
dec
push
xchg
xor
push
xlat
repnz
dec
icebp
out
out
xchg
pop
push
sub
out
insb
push
mov
dec
add
outsl
outsl
cmp
cli
clc
repnz
xor
into
negb
xor
push
pop
outsb
js
scas
xor
jae
mov
jne
sti
lret
push
xchg
cmp
sbb
add
jno
into
aaa
xor
shrb
lcall
fldenv
dec
fwait
push
jnp
mov
addr16
fldt
cli
mov
iret
xor
loope
sbb
inc
inc
add
ficoml
out
add
pop
daa
adc
mov
lahf
sbb
mov
mov
imul
mov
gs
outsl
xchg
and
push
fdiv
push
notb
mov
jne
icebp
imul
cmp
fstps
pop
rcrl
daa
jno
add
pop
cmpsb
and
iret
mov
pop
or
inc
pusha
push
test
in
push
push
mov
ja
sbb
into
and
outsb
pop
adc
mov
mov
out
xchg
mov
arpl
push
fnstcw
imul
sub
dec
xchg
jbe
aaa
pop
mov
enter
mov
lods
ss
xor
sbb
dec
mov
sub
sbb
cs
dec
dec
jno
repnz
aas
push
mov
push
xchg
ffreep
lret
in
mov
lock
cmpsb
xor
loopne
mov
or
hlt
dec
iret
bswap
ss
loope
aaa
pop
mov
lods
daa
aaa
push
adcl
mov
sub
jne
mov
insl
push
mov
pop
inc
pop
in
arpl
push
mov
push
rcr
aas
mov
push
lcall
jns
cmc
mov
cli
stos
daa
iret
addr16
addr16
push
sub
cwtl
sub
mov
and
iret
rorl
adc
xor
stos
or
dec
dec
stc
inc
pop
push
dec
mov
inc
xor
hlt
aaa
out
into
xchg
cmp
add
mov
pop
xchg
add
lea
outsb
adc
xchg
icebp
jno
mov
push
jae
and
addr16
mov
nop
dec
pop
sbb
xchg
dec
xor
jns
pop
jae
push
adc
xor
rep
mov
jae
jne
fstps
fcompl
jns
push
stc
fimull
out
adc
push
push
mov
inc
mov
mov
dec
mov
mov
lret
mov
mov
inc
repz
push
aam
scas
stc
pop
stos
dec
pop
ret
xchg
fdivrp
mov
xchg
js
mov
pop
mov
cmp
mov
xor
lock
dec
add
out
pop
pop
ss
mov
pop
pop
shlb
jns
mov
jne
sub
rclb
mov
xor
scas
mov
push
fdivrs
cld
mov
mov
xchg
out
outsb
mov
xor
mov
ljmp
sub
cld
mov
or
sub
scas
push
and
sarl
and
adc
icebp
lds
adc
add
jne
in
fists
mov
repnz
and
pusha
pop
daa
add
in
jecxz
jo
sbb
mov
sarb
ja
ja
clc
enter
mov
mov
outsl
sbbl
data16
lcall
inc
push
add
sti
sub
aad
or
test
push
adc
scas
dec
and
mov
lock
sub
movsb
push
dec
add
mov
xchg
iret
testl
jns
dec
dec
sub
jmp
loop
imull
cmp
mov
mul
fisttpll
xchg
fisubrl
and
test
and
ret
or
add
fildll
dec
pop
dec
mov
and
add
add
adc
cmp
cltd
sbb
lcall
dec
xlat
cmp
mov
aam
rcr
ljmp
loope
lock
ret
loopne
adc
and
xchg
add
aam
inc
mov
imul
fisttpll
ds
into
inc
cmpsl
enter
xchg
jle
add
imul
jbe
push
lock
jle
neg
fisubrs
push
sub
push
ficompl
dec
inc
xchg
or
push
sub
incb
or
push
pop
out
pusha
xor
cmp
in
rcrb
sub
test
das
pop
jecxz
cs
xchg
pop
xor
loope
cmpsl
mov
decl
adc
sti
mov
mov
cmp
jb
rorb
das
test
out
aam
pop
xor
jg
or
stos
push
dec
sarl
mov
mov
push
mov
mov
inc
push
and
xchg
out
lahf
cmpsl
pop
lds
adc
cmpsl
test
idiv
sahf
dec
push
sbb
subb
sub
lock
cmp
test
test
js
ret
mov
and
mov
pop
xchg
fistpl
jecxz
out
out
fsin
lret
ret
enter
clc
mov
ret
out
rclb
mov
hlt
fldl
cmp
xchg
faddp
sub
cmp
inc
push
scas
xor
scas
add
das
test
sbb
test
xor
pop
pop
mov
jae
pop
dec
cli
inc
pop
out
cld
xchg
pop
cwtl
call
mov
int3
xlat
inc
lods
into
xor
lods
mov
sub
jg
add
mov
ja
or
and
icebp
lret
push
mov
mov
inc
jmp
and
pusha
fmul
cmp
lret
cmp
sub
push
ja
mov
stos
mov
and
scas
arpl
je
daa
dec
movl
cltd
lret
ljmp
iret
cmp
fcoms
scas
popf
sub
pop
jg
pop
fisubrs
aas
sbb
sub
lahf
jae
sti
mov
pop
sbb
popa
push
fildl
mov
cltd
and
mov
dec
adc
sub
dec
mov
inc
test
xchg
lods
fwait
and
rolb
stc
adc
sub
andb
inc
or
dec
aas
or
dec
jns
adc
mov
mov
std
xchg
jno
mov
jno
daa
xchg
ret
dec
icebp
xchg
xchg
and
push
jns
fbstp
push
and
lahf
fucom
insb
jns
push
inc
aaa
xor
xchg
mov
and
sub
inc
dec
std
xlat
fsubrl
sub
mov
and
xlat
mul
rcrl
mov
add
mov
jecxz
push
mov
push
xchg
sahf
mov
orl
or
xlat
std
fwait
scas
insl
sbb
add
pop
out
sub
push
adc
jae
sbb
pusha
pop
xchg
adc
xchg
inc
jnp
and
or
xor
fcomp
pusha
lret
cli
out
push
push
outsb
pop
fldenv
xor
ror
push
or
lcall
sub
int
jno
and
lret
bound
mov
lcall
push
pop
int
cmp
add
scas
dec
outsl
mov
aas
push
dec
test
loope
jg
sbbl
push
scas
adc
js
push
mov
and
lods
mov
jns
cltd
push
xchg
fstps
leave
lock
movsb
or
stos
repz
and
leave
test
mov
outsb
xchg
loopne
addr16
xor
push
jns
lods
dec
inc
xchg
loope
mov
xchg
lret
aad
or
sar
sbb
bound
and
dec
adc
mov
subl
repz
inc
lcall
aad
inc
xchg
push
pop
outsb
nop
cmc
sub
pop
out
push
adc
fldcw
and
lea
push
mov
rcrb
xor
and
inc
shlb
adc
sbb
push
pop
add
push
arpl
movsl
test
adc
lea
aas
rorl
push
xchg
and
jge
pop
imul
fbstp
pop
imul
and
mov
mov
bound
out
xchg
sub
js
pusha
rolb
std
pop
in
sti
lahf
bound
fidivl
or
inc
sub
sar
inc
sub
fidivrl
ret
xchg
outsb
insl
jnp,pn
insl
push
std
scas
fs
cmp
rcll
xchg
xor
or
cld
mov
xchg
aaa
mov
or
cltd
push
add
mov
pop
sti
xchg
mov
dec
and
dec
mov
pop
mov
xchg
into
sbb
stc
stos
and
jo
out
inc
popa
xor
aaa
and
scas
mov
mov
xor
in
insb
lock
adc
lds
aaa
jmp
inc
les
pop
repz
jae
sub
push
ss
andb
in
push
fcomps
add
aaa
jge
xchg
scas
adc
data16
push
cs
aaa
fildll
ja
pop
ss
inc
je
pop
pop
mov
loopne
out
dec
in
sbb
loope
xchg
icebp
outsb
daa
insb
lret
mov
lods
mov
lret
mov
inc
sbb
into
test
mov
pop
and
fdivr
xlat
pushl
xor
shl
movl
cmpsl
xchg
sti
scas
xchg
and
xchg
call
mov
pusha
sub
insl
push
dec
mov
xor
xorl
mov
test
mov
pop
inc
nop
jnp
in
in
pop
jns
mov
sti
dec
iret
fsub
outsb
test
in
call
lds
mov
pop
sub
xchg
cmp
mov
cmpsl
sarb
adc
push
inc
sti
pop
sub
add
mov
jge
dec
pop
sti
cmp
std
sub
daa
mov
jecxz
lfs
int
inc
push
ret
adc
sahf
lds
dec
pop
adc
insl
repz
sub
popf
push
lock
lcall
mov
inc
es
push
jecxz
xor
cwtl
mov
xor
in
or
dec
nop
add
mov
popf
adc
int
pop
mov
sahf
cmp
imul
xor
or
flds
xchg
dec
movsb
and
mov
inc
mov
and
or
js
lods
or
mov
iret
repnz
out
and
cld
jmp
dec
adcl
pop
or
ret
sub
mov
jl
jae
pop
data16
mov
loopne
push
pop
roll
push
xor
les
mov
outsb
and
cli
rclb
cmp
cmp
fnstcw
shr
arpl
xchg
mov
das
xor
dec
imul
mov
pop
cmp
pop
fs
push
icebp
cs
adc
sbb
add
inc
sbb
push
mov
xor
sub
fldl
jbe
mov
inc
jo
add
push
push
rcr
insb
mov
ror
adc
xchg
fistpll
and
sub
lea
or
push
cmp
and
mov
loope
hlt
inc
fnstcw
pusha
out
repz
xchg
push
push
pusha
xor
xchg
mov
push
stos
insb
fwait
mov
pop
aad
movsl
ffree
inc
lret
push
in
enter
fstps
jmp
sbbb
pop
mov
add
xor
mov
sub
cmpsb
cmc
scas
add
mov
loopne
sub
fmull
pop
data16
mov
test
mov
lret
push
shrl
ret
loopne
cmpl
jo
push
push
xchg
pop
pop
fnsave
test
or
push
lds
mov
repz
loopne
sahf
jg
mov
pop
shl
call
fidivs
push
int
xchg
pop
pop
ret
mov
mov
dec
or
popf
test
xor
add
sbb
je
xchg
jg
xchg
das
sbb
add
adcb
fwait
push
jmp
pop
xlat
and
jmp
pop
xor
xchg
sar
xchg
or
adc
pop
sub
out
push
lahf
add
cli
cwtl
ret
cs
rcr
fcomip
mov
cmp
dec
xor
sbb
out
and
sub
loop
or
gs
fwait
cmc
hlt
insb
cmpsl
mov
shll
pop
sbb
push
or
nop
lods
sti
push
or
mov
stc
xchg
adc
std
sub
out
push
add
push
and
pop
fisttps
and
sbb
add
aaa
lret
lock
cmovp
xchg
lcall
adc
pushf
out
inc
add
push
ja
sbb
dec
dec
imul
sbb
mov
xchg
ljmp
das
gs
push
ret
mov
pop
test
pop
outsl
xor
shrl
repz
ret
and
xor
inc
rorb
add
idivl
lods
orb
addr16
lahf
add
incl
dec
cmp
sub
jnp
andl
xor
xorb
cli
jbe
iret
sbb
adc
arpl
imul
cld
js
jp
call
out
xchg
hlt
inc
mov
rorl
push
daa
and
or
dec
aad
mov
jb
jmp
mov
mov
lahf
out
andb
adc
outsl
shlb
xor
daa
mov
push
in
dec
test
clc
and
cs
xor
scas
imul
into
mov
add
or
push
or
cmp
jg
popa
push
and
lock
arpl
xor
icebp
mov
inc
jne
push
cmc
fisubs
test
mov
push
ret
pop
ret
pushf
dec
pop
repnz
dec
push
lods
mov
fldcw
push
mov
push
stc
test
inc
mov
inc
pop
xor
sbb
daa
or
lods
push
pushf
mov
scas
aas
in
jno
jae
push
inc
loop
push
adc
mov
mov
andb
pop
add
push
jne
stos
daa
aaa
punpcklwd
out
adc
fs
imul
imul
push
clc
xor
pop
pop
cltd
test
imul
xor
xor
pop
cmp
sub
aam
aaa
std
jge
shlb
mov
lods
inc
xchg
inc
lds
mov
mov
jg
cmp
shl
sub
ja
in
inc
adc
and
adc
cvttps2pi
movb
mov
into
or
push
push
mov
cli
outsl
js
daa
xor
cmpsb
insb
movsb
stos
leave
test
mov
fists
mov
loope
jb
xchg
cmpsb
out
add
mov
fwait
cmpsl
fst
insb
push
ret
fldcw
sub
lds
repz
cmp
fmuls
lret
aas
les
dec
mov
mov
out
xchg
aad
inc
inc
dec
push
cld
mov
or
add
cmc
mov
adc
xor
js
inc
mov
lcall
xchg
in
inc
xchg
xor
cmpsl
hlt
testl
ret
inc
dec
iret
das
lret
movsl
mov
and
and
mov
shlb
pop
xchg
pusha
stos
hlt
out
pop
lcall
cwtl
sbbl
and
xor
bswap
inc
pop
fnsave
adc
cli
divl
mov
cmp
dec
or
xchg
xchg
fucomi
dec
push
xor
loop
stos
jg
aas
cmp
sahf
mov
jle
cmpsw
xor
dec
xchg
and
fdivl
and
das
xchg
inc
cmp
adcl
cmp
loopne
adc
jp
lret
popf
pop
daa
jecxz
jl
xor
add
jl
pop
ss
lods
inc
mov
or
inc
cmpsb
popf
cmp
fstpt
addr16
jle
call
sub
xchg
sub
dec
or
imul
push
push
out
or
lock
int
lahf
dec
mov
mov
mov
rcll
mov
or
sub
mov
mov
fsubl
scas
loop
ja
xchg
repz
aam
cmp
sbb
add
mov
jmp
pop
mov
xchg
inc
inc
inc
adc
sub
dec
test
rcl
ficoms
xor
and
das
loopne
xchg
push
ljmp
lret
enter
imul
iret
sub
ja
jp
cmp
push
xor
and
lods
fst
xchg
mov
xor
cli
push
xchg
xor
jns
jmp
jg
cs
cmc
es
cmpsl
push
int3
stos
pop
js
sbb
repz
divl
or
jg
mov
jnp
scas
xchg
movb
loopne
mov
push
inc
imul
push
out
jbe
fucomp
dec
jae
inc
sub
ja
cmpsl
jmp
sub
lods
mov
aaa
jl
jo
aam
sahf
mov
add
sahf
negl
push
rcl
in
mov
cld
test
mov
push
inc
lods
dec
test
xor
xor
cmpsb
jbe
fs
xor
lcall
aaa
insb
clts
push
aas
adcl
jno
and
xchg
or
lds
test
xchg
adc
ja
ss
cmpsb
jbe
sbb
ja
outsl
lock
jns
jmp
aas
push
mov
cltd
mov
cmp
lods
lods
sub
iret
mov
pop
mov
mov
push
inc
pop
std
je
stc
xor
add
or
sarl
movsl
inc
movsl
jg
push
xor
aaa
pop
jge
test
adc
cltd
cmp
scas
ficoml
insb
icebp
loope
imulb
js
adc
sub
inc
pop
add
out
sub
and
popa
femms
mov
adc
xchg
xchg
out
mov
sub
stc
and
jmp
mov
popf
daa
cld
aam
andl
stc
xlat
xchg
test
xorl
jmp
xchg
xchg
in
sub
dec
popa
test
mov
rorb
cmp
dec
pop
inc
clc
scas
das
cwtl
aaa
das
adc
adc
sub
mov
call
cs
shl
adc
mov
iret
jp
push
push
push
xor
adc
pop
pusha
ret
push
mov
icebp
lods
sti
cltd
dec
jno
arpl
xor
test
mov
add
imul
inc
sti
and
daa
sbb
fidivrl
xrstors
arpl
adc
dec
jns
stc
fidivrl
push
mov
movsb
dec
jns
and
rorl
loopne
and
shlb
daa
and
mov
pop
mov
or
inc
mov
cmc
xor
xor
movsb
dec
sahf
stos
sub
shl
mov
mov
push
jl
cmpsb
and
push
scas
or
mov
movsl
insl
dec
xchg
and
adc
pop
jecxz
vmptrld
push
pop
stos
fistpl
add
ljmp
iret
jp
inc
cli
sbb
loope
dec
dec
mov
push
arpl
in
data16
inc
mov
decl
sub
cmpsl
jge
idivl
aas
lds
xchg
je
and
xchg
sbb
sub
repnz
leave
sub
sub
dec
fucom
popa
xor
pop
jbe
dec
add
sar
dec
xchg
sbb
mov
push
lcall
pop
js
lahf
xrelease
shlb
jno
repz
mov
movsb
stc
ja
xchg
dec
aaa
sbb
sbb
inc
sub
xchg
decb
jmp
test
mov
mov
xor
adc
jae
add
jbe
cmp
cmpsb
lcall
jg
push
cmp
or
daa
mov
mov
xchg
pop
adc
sub
add
scas
xchg
int3
cmpb
inc
rolb
inc
pushfw
jae
mov
lods
xlat
cmp
repz
xchg
sar
sub
mov
dec
cltd
mov
mov
push
dec
sub
and
push
inc
fnsetpm(287
daa
xlat
cs
sub
push
jp
loopne
mov
mov
sbb
mov
std
repz
cmp
stos
inc
push
xchg
push
jl
mov
nop
jecxz
xor
mov
pop
jne
lea
lea
loope
mov
rol
sbb
loope
ljmp
jnp
pop
sar
bound
dec
adc
dec
ret
inc
imul
ret
cmp
push
das
dec
dec
push
inc
sub
fisubs
lahf
ss
and
mov
add
das
punpckhdq
push
adc
into
scas
sub
mov
mov
insl
jmp
sub
adc
dec
push
cmp
fsubrs
mov
dec
punpckhwd
jb
cli
xchg
inc
jmp
aas
into
mov
daa
repz
dec
out
mov
lcall
mov
sub
pop
pop
mov
popf
push
outsl
jmp
dec
imul
cmp
cld
repz
imul
inc
js
mov
scas
inc
scas
mov
mov
or
out
jle
jle
das
pop
pop
jae
lods
sbb
mov
out
push
pop
mov
clc
shl
jae
pop
and
mov
ret
xchg
je
ljmp
xor
lret
push
push
cmp
push
pop
sbbl
pop
mov
or
cmpsl
das
imul
push
fwait
lret
fwait
into
pop
arpl
addr16
lcall
push
repz
repnz
aaa
adc
arpl
dec
inc
popl
mov
fistpl
mov
mov
adc
cmp
sub
or
ja
adc
repz
fisttps
pop
mov
cmp
imul
jecxz
ja
mov
xchg
out
xchg
sbb
mov
sahf
mov
das
popa
push
subb
icebp
pop
mull
push
add
daa
call
mov
mov
sbb
arpl
pop
mov
push
repz
pop
sbb
adcl
sar
lahf
popl
je
mov
push
stos
ss
fwait
adc
int
cmp
xchg
pop
orl
or
mov
jno
xor
ret
jmp
and
es
ljmp
ds
push
inc
std
mov
lret
jb
hlt
or
add
aad
sub
ja
outsb
daa
xchg
outsl
lret
mov
push
loope
fstpt
xlat
mov
out
pop
popa
mov
aad
imull
jmp
inc
push
and
lods
and
and
add
jp
out
aad
push
jne
fnsave
push
fcompl
jmp
lds
push
test
cmp
insb
sub
cwtl
push
out
arpl
bound
mov
mov
mov
and
xchg
imul
inc
fucomp
and
adc
xor
push
pop
sub
icebp
xchg
sub
cld
aad
arpl
cs
stos
dec
jp
mov
pop
mov
mov
mov
sub
jnp
push
andl
repz
popa
xchg
mov
icebp
push
inc
int
fs
les
push
pop
aaa
and
imul
sbb
int3
imul
inc
popf
imul
jae
loop
fnstsw
aaa
pop
adc
cmp
divl
ds
push
mov
push
and
sub
dec
and
push
fadds
out
xlat
jge
iret
mov
rorl
sti
ret
data16
movsb
shrb
imul
push
mov
cmp
outsb
cs
cmp
sti
dec
xchg
shlb
xchg
test
xor
ja
push
inc
xlat
adc
xchg
mov
xor
icebp
clc
fcoms
idiv
leave
or
jp
jns
mov
arpl
jecxz
sub
mov
push
sub
jns
pop
imul
jg
cmp
lcall
icebp
xorb
sub
aad
xchg
push
and
enter
mov
xor
push
lea
xor
data16
iret
dec
je
push
scas
cmp
rep
fisubl
negb
out
mov
dec
pusha
repnz
insl
lods
push
or
ljmp
push
rclb
repz
mov
inc
aaa
xchg
aaa
jne
aam
rcll
cmpsb
insb
inc
push
addb
mov
jae
pusha
mov
addr16
mov
jno
icebp
clc
or
stc
sub
jle
ret
imul
aaa
jne
pushf
jnp
daa
or
cmp
ret
xacquire
ljmp
orps
or
cli
pop
xchg
repnz
dec
jl
iret
fiaddl
pop
out
sbb
xchg
sbb
jle
jno
mov
scas
dec
repz
inc
pop
pop
in
adc
mov
dec
mov
cmc
mov
inc
xchg
mov
lcall
mov
lcall
lret
dec
sub
add
lahf
hlt
rcrb
mov
movsl
jo,pt
push
mov
pop
popa
ret
cmp
jns
testb
divl
mov
lods
xor
adc
ret
lret
mov
ljmp
rcr
insl
xor
push
leave
cmp
mov
or
sbb
daa
xor
imul
and
mov
lea
pop
fwait
push
xor
dec
test
sbb
inc
imul
inc
mov
pusha
cmpsl
shlb
xor
into
ret
imul
push
jb
es
aaa
pop
and
cmpsl
or
outsl
lcall
ljmp
xlat
cmp
jno
into
in
imul
daa
out
xchg
sahf
xchg
sub
adc
imul
repz
sub
shl
or
seto
loop
imul
or
es
testl
sti
repnz
out
sti
test
xor
lds
bound
or
lret
xchg
dec
out
pop
mov
mov
jo
aaa
add
push
clc
mov
or
push
out
decl
inc
movsl
and
push
ret
mov
cld
mov
push
out
jae
jbe
sbbl
mov
je
lock
adcl
mov
not
lret
xchg
vpcomb
in
inc
aam
mov
pusha
arpl
imul
mov
dec
add
sub
push
dec
pop
mov
xchg
push
cmp
jecxz
popf
push
imul
jno
xor
rcrb
or
xchg
dec
add
cmp
imul
mov
pop
push
push
xchg
int
xor
xor
outsb
iret
lret
mov
cmc
rcrb
call
adc
mov
push
or
jnp
aad
or
outsb
cmp
loope
js
enter
mov
sbb
fiadds
testl
inc
inc
inc
fwait
inc
jns
lahf
inc
mov
mov
xchg
push
mov
jg
sub
mov
pop
rcrb
mov
rolb
mov
imul
xlat
fisubrl
inc
iret
pop
push
repz
adc
outsb
xchg
adc
outsb
int
jmp
or
vmwrite
or
or
mov
popf
rcll
movsl
mov
repz
pop
jg
mov
subl
xchg
pop
shlb
push
enter
enter
and
outsl
adc
outsl
imul
stos
push
sbb
mov
lods
sub
call
scas
sub
stos
xor
stos
stos
cmp
out
mov
pop
add
adc
rcll
not
pop
jp
xlat
pop
mov
fists
pop
mov
scas
inc
mov
subb
sub
adc
das
pusha
outsb
imull
jb
mov
cs
cmp
xor
aaa
arpl
call
pop
pop
pop
or
sbb
bound
and
loope
dec
cmc
sub
pusha
cmpsb
notl
stos
mull
lds
jno
jmp
jne
push
pop
jns
data16
testb
decb
decb
and
push
pop
outsb
data16
scas
jns
repnz
mov
imulb
cltd
dec
push
aas
int
mov
lret
mov
pop
ja
fiaddl
jnp
and
jg
push
rcrb
jno
pop
dec
lds
aaa
sbb
push
jbe
ud2
jbe
movd
xchg
mov
neg
int
push
xor
xchg
mov
push
fdivl
mov
mov
pop
mov
sub
lcall
stos
jmp
jge
fstps
test
sub
sti
into
and
cwtl
in
pop
jae
cwtl
fimull
movsb
cmpsl
mov
dec
int
pop
divl
push
pop
xor
iret
aaa
nop/reserved
test
repnz
xor
add
or
rorb
inc
inc
mov
incl
data16
mov
mov
inc
push
dec
mov
add
divl
stos
pop
cmp
jg
cli
movl
adc
mov
jl
push
enter
jecxz
adc
sti
rorb
xchg
sub
roll
or
add
or
and
cmpsl
shrb
cltd
jne
jnp
xchg
pushf
inc
loope,pt
pop
mov
aad
cmp
push
lret
mov
orl
sbb
pop
clc
push
sbb
jg
xchg
push
jmp
adc
ljmp
mov
call
mov
jne
and
out
xor
stos
add
xchg
sub
test
mov
xor
popf
addr16
ret
dec
or
ja
add
ds
pop
inc
sti
push
lcall
or
inc
int3
in
push
sbb
pop
jge
mov
lret
add
cmp
cli
jecxz
leave
loop
mov
gs
popa
push
xlat
arpl
test
loopne
xchg
inc
mov
es
adc
jbe
sbb
subl
xchg
dec
aaa
repz
xchg
pop
xchg
push
sbbl
pop
das
mov
xor
xor
out
je
in
hlt
xor
inc
lret
sub
add
fisubl
fists
int
cmpsb
jecxz
push
dec
fs
jp
in
add
mov
or
xor
into
xchg
xor
pop
jne
cmp
in
std
mov
test
or
dec
dec
sti
aad
xor
pop
lcall
dec
cmpsb
rcrb
mov
cwtl
imul
stos
inc
daa
mov
mov
pop
mov
adc
mov
lahf
stc
mov
arpl
mov
jmp
dec
pop
xor
lea
arpl
aas
loop
mov
loop
ds
enter
pop
mov
lea
stc
addr16
hlt
jle
jne
ret
mov
or
mov
dec
xor
adc
dec
jae
mov
mov
inc
imul
add
mov
jno
ret
mov
mov
mov
mov
jmp
das
loope
lcall
sti
in
jns
pop
ljmp
gs
inc
ficomps
fsubrp
scas
ss
dec
pop
jecxz
js
aaa
cli
scas
andb
mov
out
loope
sub
and
clc
inc
pop
pop
sbb
push
mov
lret
push
jp
mov
sti
das
cs
mov
stc
incb
pop
dec
pop
dec
mov
pop
ret
mov
cmpb
pop
or
and
mov
xchg
xlat
sub
test
xlat
call
fisttpl
std
das
and
les
sub
or
gs
and
inc
sbb
xor
and
cs
imul
loop
pop
mov
dec
das
jl
lret
cmp
and
jo
cmp
mov
push
mov
push
adc
shrl
leave
sub
cmc
cld
jg
xchg
xchg
dec
stos
test
or
movsl
mov
fsubl
nop
test
adc
push
or
mov
push
scas
in
insl
outsb
in
orb
fsubr
push
cld
push
je
jns
and
test
xchg
add
cmp
fsubrp
push
fldt
imul
lahf
dec
sbb
outsb
or
cmp
pop
loope
adc
inc
dec
hlt
in
lods
clc
pop
lds
adc
push
das
xor
mov
adc
sahf
or
inc
jbe
push
adc
divb
dec
push
xchg
sarb
aaa
sub
and
div
inc
push
pusha
shlb
aaa
sti
mov
xor
xchg
repnz
sub
dec
sub
jnp
divl
cmp
jg
daa
pushf
and
test
fwait
stc
stos
in
cmp
lcall
pusha
mov
or
je
mov
pop
dec
ja
fistpl
loope
clc
and
jo
lods
mov
push
shll
sub
jp
je
or
push
mov
push
out
jns
scas
xchg
and
and
adc
imul
push
adc
xor
lock
mov
jno
in
rclb
cli
add
test
nop
int
mov
xor
inc
and
fs
scas
mov
pop
cwtl
jl
dec
movsl
popf
int3
lret
loop
adc
in
divb
fisubrs
inc
pop
pop
pop
pusha
fwait
or
cli
or
jle
in
or
mov
sub
mov
pop
jmp
xor
test
negb
js
je
mov
cltd
rol
rorb
mov
scas
sbb
or
dec
mov
add
pushf
bound
jle
mov
jmp
aam
pop
push
mov
mov
mov
shll
cwtl
mov
outsl
iret
repz
cmp
mov
dec
push
sbb
mov
sub
jle
push
xlat
aaa
dec
shlb
dec
or
movsl
enter
scas
pop
rcl
xor
mov
rorl
imul
das
xor
wbinvd
aaa
ja
iret
imull
dec
sbb
stos
jp
pop
jnp
push
outsl
sti
inc
arpl
jns
xchg
rcll
insl
rorl
inc
fwait
shll
cmp
ret
lea
pop
pusha
push
sahf
dec
xor
push
mov
jmp
pop
pop
cld
push
movsl
add
sub
jne
dec
sbb
inc
repnz
cltd
pusha
xchg
or
shl
xchg
aas
sbb
pop
jb
sahf
inc
jmp
cmp
push
pushf
fiaddl
add
aaa
sub
push
push
cs
insb
sbb
orb
push
in
add
mov
aaa
pop
jmp
mov
jb
mov
inc
cwtl
roll
xchg
cmp
les
jbe
rcrl
sub
jle
icebp
dec
dec
mov
sarb
fwait
xchg
call
sbb
fisubrl
pop
adc
xor
push
aaa
push
in
out
lea
mov
cld
xchg
cltd
inc
pop
xchg
stc
push
fldenv
movsb
pop
in
xchg
sub
lret
push
imul
inc
shll
sub
mov
push
nop
out
mov
xchg
pusha
pop
pop
mov
iret
jne
pop
adc
mov
ja
hlt
cs
fstps
lret
cli
lods
push
xor
icebp
idivb
push
das
cmp
aaa
xor
dec
arpl
mov
add
imul
movsl
pop
insb
mov
mov
adcb
ljmp
xlat
lret
xor
lretw
cld
ljmp
out
js
in
mov
mov
leave
sbb
push
dec
test
iret
movsb
fbld
jmp
mov
mov
dec
fnstcw
icebp
inc
cltd
mov
shll
out
push
js
aas
jecxz
push
lret
mov
jbe
and
in
mov
mov
ss
or
into
inc
xor
out
cwtl
sub
mov
test
mov
scas
and
repnz
lods
outsl
push
nop
pop
or
js
pop
iret
xor
dec
pop
rcrb
sbb
fs
inc
push
or
push
cmp
xor
ja
jnp
imul
addr16
pop
lock
jns
sub
fstps
push
jmp
decl
xor
add
fildl
jnp
int
bnd
repnz
repnz
mov
test
jo
mov
pop
enter
insl
shrb
cmp
shlb
xor
jo
add
std
pop
cmpsb
jl
lods
int
push
in
aaa
inc
loopne
call
push
jge
xor
or
mov
and
sub
adc
hlt
push
inc
out
cmp
dec
shrb
lea
xchg
jnp
pop
sub
or
std
pop
fld
sub
sub
shll
push
in
rcrl
adc
fwait
xchg
inc
popa
call
je
xchg
ret
pop
stos
out
out
lcall
fcomi
movsl
in
jae
mov
jmp
fadds
into
and
add
xor
lock
mov
mov
add
cmpsl
xchg
jno
jnp
inc
sub
sub
push
sub
test
xchg
sti
ja
out
iret
fimuls
loopne
lahf
mov
xor
pop
pop
leave
out
repnz
mov
push
rorl
cmp
xor
imul
xor
mov
imul
scas
mov
in
sub
fildl
jbe
jg
push
pop
stc
sub
sub
xchg
lahf
stos
fistl
inc
jle
fistpll
jmp
in
mov
inc
sub
inc
andl
ljmp
xor
adcl
push
push
xor
enter
aam
data16
xchg
jecxz
adc
insl
push
mov
fsubrs
repnz
mov
push
cmp
cmpsl
pop
or
pop
and
push
mov
pushf
mov
sub
push
xor
xlat
jno
cli
inc
aaa
jne
pop
aam
push
fisubrl
jl
popf
inc
adc
jg
adc
les
push
cmc
inc
xorb
cltd
or
stc
xorl
repnz
out
inc
jae
pushf
lock
adc
push
sbb
cs
inc
movsl
in
scas
aaa
mov
out
mov
jne
repz
sub
aas
inc
or
fisttpl
sub
add
lods
mov
adc
mov
hlt
xchg
inc
dec
cmp
icebp
sbb
jge
into
testb
or
mov
jecxz
enter
sbb
lcall
cmp
adc
pop
es
js
add
sti
mov
xor
roll
pop
inc
je
test
cs
push
stos
dec
mov
clc
xchg
mov
mov
outsb
jmp
in
inc
jg
in
mov
xor
test
rcrb
mov
fldt
out
fldcw
push
test
loope
pop
jmp
pop
iret
add
push
inc
xchg
or
add
fwait
rorb
jno
lds
mov
iret
fnstcw
cld
aas
stos
jecxz
pop
adc
pop
ficomps
outsb
sub
lds
dec
cmp
bound
cltd
cmp
jae
roll
lock
iret
inc
or
cltd
js
out
sub
loopne
mov
xchg
xor
mov
test
into
outsl
ss
pop
faddl
xchg
adc
std
fdivl
add
fadds
mov
xchg
into
in
xchg
sbb
jns
push
fcmovbe
cli
imul
push
push
and
mov
jno
ret
pop
cmp
push
js
shl
pop
mov
cmp
cmp
sbb
subl
jmp
push
aaa
lret
out
mov
dec
pop
sbb
stc
divl
lods
adc
xchg
jae
shr
and
add
stc
fistpll
xchg
push
jle
lahf
adc
lds
dec
lret
shrb
mov
and
rorb
add
pop
inc
insl
ja
xchg
mov
mov
ja
sbb
mov
icebp
sbb
push
mov
aaa
mov
mull
fdivrs
das
ret
mov
repz
push
mov
pop
dec
add
mov
mov
hlt
cwtl
orb
jo
add
repnz
mov
shl
fisubrs
inc
mov
push
adc
or
xor
jmp
shll
mov
popa
add
testb
and
hlt
insb
shll
jp
add
xlat
inc
cmp
and
mov
or
cltd
pushf
add
stos
pop
push
xor
sbb
testl
mov
and
call
jmp
xor
jmp
adc
stos
sbb
jne
cs
out
dec
jne
sbb
lods
dec
or
insl
push
or
pusha
outsl
pop
xor
xor
cmp
icebp
mov
xor
out
pop
adc
sbb
mov
mov
dec
mov
xor
mov
loope
leave
aas
shr
stc
inc
scas
cmp
int3
imul
sbb
mov
jmp
pusha
inc
push
clc
addr16
cli
or
ficoms
jl
movsl
pop
ss
cmp
xchg
stos
sarl
add
pop
rolb
pop
rolb
and
fdivrs
repz
iret
orl
or
loopne
and
mov
divb
stos
icebp
fiadds
xchg
repz
jne
sub
js
loope
mov
add
mov
inc
jo
xor
das
das
arpl
pop
arpl
xor
movl
push
mov
push
and
xchg
mov
or
call
mov
xor
xchg
jo
mov
stc
dec
sub
jmp
cmp
xor
fstl
mov
xor
daa
xor
push
fistpl
dec
inc
jno
xchg
sbb
push
xchg
and
hlt
jle
mov
add
arpl
pop
sbb
sbb
push
cli
and
jl
cltd
js
lea
lods
jmp
repnz
scas
popf
pushf
arpl
insl
aam
in
xor
fs
inc
mov
test
inc
push
cmpsb
mov
jecxz
lret
xchg
rcrb
fidivl
xor
mov
lret
xor
pop
jae
mov
jmp
mov
mov
icebp
and
mov
out
shlb
push
cs
lods
mov
outsb
jae
sbb
or
les
clc
out
stos
mov
imull
loopne
xor
mov
and
mov
cmc
pusha
fnstsw
movsb
cmp
aaa
jp
push
outsl
enter
and
or
lock
stos
enter
pop
xchg
add
adc
outsb
xchg
test
inc
and
lods
fsubrs
jns
fldcw
loope
sti
mov
push
mov
sbb
jg
aas
push
pop
dec
test
fdivrl
aam
gs
stc
cwtl
sub
jp
cltd
into
mov
add
pop
clc
add
aaa
stos
cmp
rorl
or
lds
xchg
jo
jmp
shll
xchg
jae
testl
or
sbb
rcr
cld
jmp
xchg
loopne
lods
inc
pop
or
es
out
xchg
sahf
fnstenv
mov
imul
outsb
jl
or
sub
arpl
dec
and
cmc
dec
mov
jge
sbb
xor
mov
cmp
fmul
call
pop
add
loope
add
mov
fs
jg
sahf
lock
mov
mov
or
mov
imul
in
xor
mov
adc
mov
scas
inc
xor
es
add
xor
pop
int3
out
push
iret
add
mov
pop
cmp
cmp
sti
jo
popf
je
cmp
lds
dec
push
and
scas
mov
mov
fidivrl
inc
mov
xchg
imul
aam
loop
and
insl
cltd
inc
loopne
xchg
imul
jne
or
or
call
call
or
xor
pusha
xchg
push
js
xor
xor
pop
xchg
pop
lahf
add
ret
scas
lea
ffreep
inc
sbb
sahf
cs
sub
test
cmp
mov
lea
notb
cli
roll
fnstcw
xchg
call
inc
push
int3
sub
cmpb
outsl
test
dec
ja
icebp
cmp
test
pop
imul
lret
cmp
or
rorl
xchg
mov
jns
iret
xor
or
in
pop
insl
rcrb
dec
adc
mov
and
xchg
fwait
dec
js
ret
jmp
rclb
cmp
dec
test
and
adc
push
sbb
pop
popf
fmul
mov
fmul
aaa
lock
adc
lcall
cli
mov
rorl
sub
sti
imulb
popa
pop
fistpl
jge
cmpsb
sub
out
sub
push
je
mov
jne
push
popf
sub
idivl
divl
inc
arpl
fs
call
cmp
dec
subb
xchg
lds
xchg
fwait
or
or
pop
ret
mov
xor
jp
out
add
push
int
les
sub
adc
xlat
scas
call
insb
inc
cmp
and
jg
jb
lcall
cmp
mov
xchg
insb
jo
dec
sub
or
dec
cmp
pop
sbb
inc
jp
popf
aaa
lds
sub
push
loop
pop
push
clc
jo
mov
imul
rorb
arpl
lock
stos
dec
in
push
cmp
jg
xchg
sub
cmp
adc
into
mov
mov
xchg
xor
add
mov
seto
xor
sbb
ds
push
add
cmp
inc
inc
inc
mov
xor
dec
out
repnz
xchg
ja
shlb
sti
push
lret
or
lea
pop
pop
jg
mov
xor
cs
push
mov
or
adc
inc
push
movsb
and
insb
enter
cmpsl
leave
inc
jecxz
divb
aaa
xlat
mov
out
mov
push
xchg
jmp
and
out
pushf
jge
adc
jb
pop
inc
ffreep
or
or
and
jne
loopne
push
shr
adc
mov
adc
out
jne
mov
iret
andb
out
mov
xor
sbb
outsl
push
or
mov
xchg
mov
addl
repnz
ljmp
out
lcall
lea
out
inc
cmp
mov
sub
inc
nop
aas
loope
scas
pop
sbb
adc
and
cli
ljmp
cs
pop
and
sub
cmpsl
nop
cs
cltd
imul
fcmovnu
nop
arpl
fwait
ljmp
loop
jb
sub
xchg
mov
push
ror
mov
shlb
push
inc
in
jo
je
push
sbbl
jecxz
fists
fs
pop
dec
sbb
lods
sub
mov
rorl
push
cltd
xor
call
jne
inc
pop
loop
sbb
push
loop
or
pusha
bound
cmp
and
inc
sahf
fcoms
shr
insl
sub
sbbl
and
dec
inc
mov
push
ja
test
sahf
xchg
cmc
loope
stos
xor
jns
bound
nop
testl
imul
fimull
fcoml
mov
ror
push
jae
outsl
xchg
mov
sbbb
je
cmc
fcomi
sti
fmull
filds
or
inc
and
add
in
adc
sub
cmp
or
fisubl
mov
ret
jb
push
mov
lods
cmpsb
jmp
out
mov
jns
push
sbb
cmpsl
cmpsl
clc
mov
bswap
mov
iret
jp
cs
mov
inc
push
insl
bound
outsb
hlt
add
dec
mov
je
inc
lods
out
ljmp
es
push
push
mov
lret
stc
shll
adc
cwtl
mov
roll
xchg
fisubs
aad
icebp
mov
xchg
ss
scas
lcall
pop
test
roll
addr16
lcall
test
mov
dec
mov
lds
mov
mov
out
sahf
jne
push
scas
iret
fdivp
icebp
cmp
insb
in
addps
xchg
dec
out
mov
xchg
outsl
mov
inc
inc
lods
negl
pop
xchg
lock
sub
out
push
loope
loope
clc
aas
cmpsl
stos
xor
cs
push
dec
rcrb
mov
sub
cmp
mov
repz
mov
data16
pop
sbb
dec
xchg
mov
aam
jl
push
inc
mov
addl
inc
mov
jne
std
xor
lret
aam
arpl
out
jecxz
push
lods
push
shl
pop
jmp
mov
cmp
lret
mov
aaa
das
ret
mov
xor
test
mov
pusha
sbb
lock
fldenv
pop
scas
cmp
rorl
arpl
mov
cmpsb
fcoms
inc
jae
push
jb
dec
aam
in
pop
mov
cwtl
jns
jne
ds
adc
xor
jb
mov
sub
pop
mov
add
int
dec
push
pop
mov
sub
scas
jg
push
adc
faddp
pop
daa
add
push
xchg
in
xor
imul
jno
daa
imul
and
ss
out
push
jmp
xor
hlt
inc
mov
mov
sub
add
outsb
xor
ret
movsb
or
jg
push
push
mov
push
push
shrd
stos
or
inc
cmp
sub
pop
xor
cmp
das
jle
sub
ss
fsubrp
fisttpll
jnp
sub
xchg
jne
int3
pop
in
test
or
and
inc
lods
mov
inc
push
fwait
xchg
mov
aad
add
fwait
out
fyl2x
push
lahf
fcmove
in
dec
sbb
dec
push
jnp
aaa
mov
push
and
mov
mov
fimull
xchg
jns
repz
add
sbb
xor
out
test
cli
xlat
out
mov
aaa
gs
aas
cmc
shl
dec
cmc
outsb
adc
jae
xchg
sbbb
lcall
rcrb
pop
lcall
fimuls
jb
xchg
xchg
int
divl
leave
jge
clc
pop
xor
xor
loop
fldcw
jbe
std
adc
fwait
mov
daa
repz
sub
das
dec
daa
imul
maxps
out
imul
add
and
testw
push
stc
fnsave
jmp
lcall
and
pop
inc
push
sarl
repnz
cmpsb
mov
fistpl
lea
xchg
mov
inc
inc
std
inc
outsl
xor
adc
mov
out
mov
inc
out
lea
cmpb
mov
outsl
pop
cmpsl
mov
mov
add
dec
scas
lret
sub
rcll
das
sarl
and
aad
add
ja
jno
fs
cwtl
movlps
cmc
or
rcr
push
add
push
aaa
mov
out
dec
adc
jb
mov
dec
lods
cmp
fwait
push
push
inc
push
mov
lret
imul
imul
aam
fildl
sarl
or
jae
out
sub
sbb
mov
mov
mov
mov
mov
imul
cmp
sbb
pop
jge
js
enter
cltd
jmp
sti
cmc
lods
push
xchg
or
addl
mov
fs
pop
arpl
adc
fwait
cmp
shl
cwtl
pop
adc
dec
add
lds
in
orl
insl
mov
andl
ret
mov
ds
nop
sti
popf
lock
leave
xchg
fcoml
xor
mov
mov
mov
icebp
mov
jp
shrl
dec
lret
scas
pusha
fwait
push
lods
stos
cmp
lds
xorl
jne
xor
cmp
xchg
arpl
ret
xchg
lret
or
pop
popa
push
pop
xlat
sbb
mov
testl
cmp
imul
cmp
aaa
sarl
pop
push
adc
sub
cwtl
sub
imull
inc
jne
hlt
xor
les
jl
add
test
aaa
les
sti
sbb
cmp
stos
mov
push
hlt
mov
cs
ret
push
stos
sub
es
stos
sbb
xchg
roll
adc
test
push
pop
es
pop
pop
sub
jle
outsl
mov
lcall
cmp
xor
pushf
stos
mov
xchg
imul
repnz
adc
mov
pushf
test
cs
movsl
mov
mov
fstpt
sub
ds
cwtl
test
push
adc
jl
fstp
out
xchg
inc
jnp
outsb
jae
cld
out
inc
js
outsb
mov
stos
mov
mov
dec
imul
sbb
dec
and
mov
mov
or
xor
call
dec
je
int
add
jmp
insl
jo
jl
cmp
adc
int3
scas
xor
lahf
mov
sub
cmp
insl
loope
out
push
int3
mov
out
add
lret
mov
jae
ret
out
ret
js
ss
mov
pxor
frstor
pop
push
into
lcall
aaa
add
imul
xchg
push
lahf
pop
jmp
add
pop
je
mov
mov
inc
mov
push
jb
push
aad
jne
std
and
adc
jb
sbbb
mov
sti
cmpsl
mov
lods
mov
gs
push
add
iret
fsubrl
dec
xor
enter
cmp
insl
aas
sub
out
cmp
mov
or
pop
fbstp
sub
in
popa
pop
mov
jle
or
push
rcrb
add
addr16
xor
xor
test
cmpsb
inc
cmc
dec
dec
xorl
pop
icebp
dec
aad
call
dec
sub
and
sub
clc
xchg
and
js
xchg
jae
sbb
out
stos
xchg
add
ficompl
sbb
mov
or
jmp
jp
adc
mov
xchg
ss
xor
push
in
out
cmpsl
jne
sbb
addr16
in
fcomps
movsb
lods
xchg
daa
mov
jne
push
mov
lods
sbb
mov
iret
sub
aaa
pop
inc
cltd
and
dec
in
pop
add
imul
lcall
int
inc
xor
mov
test
xor
lea
scas
xor
cli
xor
movsl
inc
jmp
int3
enter
fisubrs
imul
sub
int3
ret
js
cmp
pop
popf
arpl
mov
lods
cmp
mov
sub
adc
repz
test
ljmp
mov
das
shrl
cld
jo
roll
adc
out
in
loope
jmp
sbb
and
nop
sub
cmp
inc
and
mov
sub
imul
xchg
and
xor
ljmp
es
cmp
fs
push
push
cmpsl
pusha
add
jns
push
dec
lods
cmp
lcall
xchg
mov
inc
shll
push
jbe
mov
or
ds
dec
repz
jb
decb
jns
ret
sahf
push
pop
lret
adc
mov
xchg
mov
cmp
push
pop
mov
push
xchg
faddp
jae
sarl
pop
int
dec
scas
gs
mov
aaa
iret
mov
cmp
cmc
stos
push
jle
test
cmp
mov
sbb
inc
outsb
xor
loopne
daa
cmp
lcall
jae
jne
fstpl
mov
sahf
dec
push
dec
add
mov
pop
sbb
je
xchg
divb
aaa
clc
aaa
cltd
sub
arpl
loop
cmp
mov
cwtl
sub
repnz
or
push
aam
xor
ficoml
int
outsb
mov
jmp
jb
imul
movsb
inc
jo
je
shlb
fimuls
fidivs
pusha
adc
jo
pop
stos
jne
lods
mov
jle,pt
sbb
mov
push
icebp
and
movsl
stc
addr16
jae
lret
sbb
jo
sub
fwait
ss
push
dec
inc
adc
imull
pop
push
lahf
cmc
inc
in
sub
and
call
cltd
clc
mov
into
pop
addr16
jae,pt
add
and
sahf
fsubrl
movsb
cwtl
xchg
mov
cmp
adc
add
mov
mov
mov
sub
jbe
jo
and
xchg
push
or
popa
movsb
neg
out
dec
movsb
adc
fdivr
push
ljmp
dec
mov
pop
imul
das
mov
movsl
add
ret
mov
fidivs
pop
ja
andl
fcoml
test
les
mov
sbb
fsubr
das
enter
ret
xor
sbb
jp
clc
lods
mov
add
pop
std
sub
ja
fisubl
fbld
or
addr16
jo
shr
in
ret
mov
mov
aad
pop
aaa
mov
sbb
mov
cmp
adc
pushl
adc
fistps
jmp
sub
cmp
repnz
mov
dec
fldt
pop
ror
imul
add
mov
pop
scas
test
inc
and
xchg
mov
jnp
dec
cli
sbb
mov
shl
jle
sbb
and
inc
frstor
mov
nop
repz
sti
andl
xor
lock
inc
add
test
lea
inc
mov
adc
shrl
inc
scas
scas
add
mov
pop
daa
sub
je
inc
jnp
jbe
cli
mov
cs
mov
addr16
ret
pushf
pushf
dec
shrb
into
into
jle
or
sbb
shlb
rcrb
aas
mov
xor
lods
mov
push
je
fwait
pop
icebp
popf
pop
adc
sub
xchg
xchg
lds
mov
enter
into
orl
push
mov
xchg
and
xor
icebp
inc
stos
enter
out
add
xor
fidivl
in
jle
mov
mov
idivl
pop
jmp
cli
push
pop
test
lock
ds
loopne
movsl
in
push
outsb
inc
fdivl
add
hlt
popa
mov
mov
mov
pop
outsl
xor
adc
mov
inc
and
push
dec
cs
testb
sti
out
push
cmc
jns
test
cwtl
icebp
xchg
ret
mov
in
dec
jne
cmp
out
pop
and
dec
mov
cmp
push
ret
pop
scas
dec
push
push
sbb
sar
or
lret
fistpll
push
ds
fstps
mov
mov
aas
add
mov
sbb
enter
sub
clc
lock
outsb
mov
mov
xor
xchg
mov
rcrb
in
cmpsb
mov
addr16
and
sbb
cmc
push
idivb
or
adc
push
mov
xchg
jbe
dec
mov
nop
inc
mov
hlt
pop
jg
clc
push
jl
sbb
aas
lods
int
mov
int3
mov
adc
sar
sar
mull
jp
stos
push
imul
out
ja
mov
test
lcall
inc
fistl
sahf
scas
lods
add
mov
imul
call
jmp
mull
mov
inc
inc
dec
fdivrp
inc
test
ret
pop
push
sub
negl
cmp
enter
xchg
xor
mov
rolb
ss
fisttps
add
push
inc
rcrl
ja
or
xlat
lods
cmp
jns
iret
sbb
adc
fimuls
mov
sub
and
mov
xor
imul
jge,pn
lcall
sbb
push
cmc
cmp
pop
pusha
je
scas
rorb
mov
jle
fmuls
test
mov
push
movsb
insl
and
ret
ja
fsubs
loopne
neg
repnz
jecxz
into
sbb
inc
xor
cmpsb
nopl
xor
sub
jno
andl
daa
fldt
sub
jbe
jo
inc
and
and
iret
adc
jns
dec
fisubrs
pushf
add
adc
cmp
jg
xor
movsl
inc
popa
mov
movsl
imul
add
repnz
cmp
xchg
pop
jmp
int
xor
bound
sbb
sub
addr16
not
adc
mov
and
es
inc
xchg
jne
push
push
mov
push
mov
and
pop
ret
pop
fwait
cli
insb
repnz
enter
arpl
mov
dec
js
push
enter
sub
stos
jle
add
jb
cmpsl
std
cs
repz
jb
out
mov
dec
enter
xchg
pusha
movsb
push
out
mov
int
mov
das
sub
sub
or
mov
das
sub
ss
xlat
incb
imul
std
clc
insl
inc
xlat
imul
pop
cs
or
orb
push
adc
or
or
push
sbb
cmp
mov
cltd
jo
les
sbb
cmpsl
sahf
xchg
daa
add
inc
jp
xchg
pop
pop
aad
push
pop
sub
into
das
jl
dec
outsb
dec
shrb
fmull
and
fistpll
jmp
pop
pop
rcrb
jl
loopne
hlt
lock
adc
js
push
adcb
sub
insb
jecxz
xchg
test
xacquire
mov
inc
and
jo
inc
sub
and
lcall
or
aas
add
clc
pop
insb
xchg
das
adc
xchg
scas
push
mov
and
xor
in
mov
addr16
lret
xchg
imul
xlat
dec
mov
out
mov
dec
pop
jg
daa
outsl
push
mov
cmp
fucompp
iret
sarl
pop
cmp
mov
outsl
and
mov
test
popf
fstpt
pop
mov
push
roll
ja
out
mov
add
ja
es
je
adc
sbb
mov
push
sti
outsb
jl
fsubs
sub
and
mov
jae
pusha
jmp
push
mov
psrlw
pop
pop
out
ljmp
add
fdiv
adc
and
fcoml
xchg
push
dec
pushf
inc
scas
and
leave
xchg
inc
pusha
sbb
shr
testl
fwait
lds
jl
push
mov
inc
bound
popa
shlb
leave
rcrb
add
lcall
push
push
and
pop
push
sti
push
inc
pop
xchg
dec
xlat
sbb
cmp
jmp
shl
test
shr
dec
ds
imul
sti
js
loop
mov
iret
mov
xlat
xlat
stos
sti
aaa
push
push
inc
jecxz
mov
repz
sub
push
into
mov
pop
mov
outsb
adc
xlat
out
in
add
stos
sub
lds
lcall
add
pop
dec
rcll
iret
inc
or
push
andl
out
inc
sahf
testl
push
mov
xchg
xchg
rclb
fdiv
ss
mov
pop
arpl
daa
lret
and
gs
stos
sub
cmc
push
jne
ljmp
js
push
mov
out
cmp
dec
pusha
loope
xor
ss
lcall
mov
les
adc
gs
push
or
loop
cmp
jo
cmp
lret
insb
mov
add
ficompl
xlat
jmp
popa
js
push
loop
xor
stos
fbstp
jmp
insl
inc
popf
or
in
out
push
shll
push
cmp
imul
push
push
or
push
xor
ljmp
push
bound
sub
mov
or
pop
jae
mov
sub
mov
popf
iret
mov
pop
add
leave
outsl
or
mov
mov
push
hlt
or
or
shr
js
idivb
jnp
daa
scas
je
jge
lret
into
mov
out
xchg
mov
inc
cmp
fwait
sbb
push
fsubrl
pop
je
cmp
es
dec
hlt
jne
enter
xor
jp
out
out
jb
test
push
mov
sbb
jmp
inc
outsb
sbb
push
stc
out
add
jb
jge
cmc
sahf
mov
add
push
ljmp
stc
cmp
hlt
dec
inc
sti
shr
xchg
or
loopne
inc
pop
lcall
fwait
cmovae
outsl
add
int3
cmp
xchg
xchg
dec
adc
filds
iret
jle
cmp
lret
mov
mov
push
sbb
jns
jg
mov
sbb
dec
cmpb
jae
sbb
out
mov
call
mov
lods
jno
ljmp
aad
lods
rorb
mov
mov
adc
lret
adc
sub
push
jbe
or
push
mov
adc
cmp
xor
push
adc
push
mov
pop
lock
xor
dec
jo
out
dec
xchg
ss
jnp
jl
xor
jne
aam
icebp
movsl
jae
aaa
adc
xchg
pop
aas
push
test
sub
shl
popa
cmp
in
shrl
mov
mov
daa
or
xor
mov
imul
add
shrl
dec
xchg
roll
mov
or
mov
jae
mov
xor
add
out
das
lea
sbb
lret
mov
push
push
xor
add
xchg
out
and
xchg
mov
mov
test
imul
inc
push
dec
sub
icebp
push
mov
pop
jo
daa
hlt
into
cmp
movsb
leave
mov
mov
jno
test
inc
pop
dec
cmp
jge,pt
cmp
in
leave
mov
pop
xchg
in
mov
cmp
add
jnp
mov
sub
mov
repnz
xor
cs
and
adc
cmp
lds
push
pop
dec
inc
jl
inc
test
pop
lcall
repnz
lcall
adc
lods
iret
cmp
inc
lret
mov
and
mov
ljmp
iret
rcr
out
pop
mov
push
iret
xchg
adcl
xchg
shl
inc
ret
dec
insl
xor
or
and
xchg
insb
adc
push
pop
cmp
push
and
xchg
mov
aam
pop
jmp
out
int
cwtl
xor
jb
subb
pushf
lea
xor
ss
mov
in
fs
xor
adc
mov
xlat
mov
xchg
fwait
fwait
loopne,pt
mov
repnz
push
out
xchg
jo
cwtl
in
jle
cmp
fwait
daa
cmc
lahf
adc
sbb
xor
cmp
cmp
inc
add
adc
mov
lods
movsl
fcoms
inc
daa
das
pop
inc
pop
add
xor
sub
cmp
inc
cmp
out
inc
cmpb
or
in
jecxz
test
cs
xchg
cwtl
push
jp
fiadds
lods
nop
std
jns
jae
ss
daa
push
cmp
pop
jge
push
shlb
xchg
pop
repnz
push
or
fadds
in
mov
pop
push
scas
push
mov
ljmp
sub
cmp
and
nop
stos
aas
and
fcompl
and
pop
ret
push
mov
rolb
xchg
dec
shll
orl
xor
fiadds
or
aas
popf
ljmp
push
sub
sub
in
iret
sub
xchg
fsubs
or
jb
push
mov
call
ds
sub
leave
fs
cmc
cwtl
xor
mov
ficoms
push
cmpsl
in
scas
xchg
aaa
adc
sub
fistpl
repnz
movsl
stos
fwait
jp
iret
xchg
jns
iret
pop
inc
adc
aaa
popl
pop
mov
push
or
test
subl
cmp
or
ficoms
jb
mov
inc
test
cli
cmp
or
xor
in
adcb
popa
adc
add
sbb
call
xor
jno
cmc
mov
nop
dec
dec
data16
cli
bound
dec
pop
jne
stc
jmp
dec
xor
mov
rcrb
mov
test
imul
sub
fimuls
push
or
inc
xor
adc
stc
xlat
mov
insb
jns
addr16
cs
dec
dec
das
mov
addb
cmpsl
aad
push
das
cmc
xlat
mov
outsl
add
cmp
pop
jmp
fimuls
lods
shll
push
mov
pop
outsl
popa
push
jnp
rorl
loop
mov
push
sbb
sbb
xchg
rorb
scas
cmp
xchg
jo
movsl
inc
or
ljmp
dec
ljmp
insl
push
or
into
fdivs
cmc
or
lds
pop
dec
inc
lcall
cwtl
cmp
xor
or
scas
fisttps
es
push
mov
cmp
mov
push
push
cmp
fwait
cs
mov
in
insl
pop
inc
push
flds
insb
aas
jae
imulb
test
leave
mov
sub
xchg
push
notb
sbb
xchg
repnz
xor
jge
or
mov
add
mov
sbb
mov
fidivs
lret
inc
jne
sahf
fistps
ret
popa
pop
sbb
or
lock
and
sahf
lds
pop
mov
mov
aas
dec
mov
push
sub
ret
cmp
inc
lea
into
sub
adc
push
xor
iret
cwtl
mov
mov
negl
cwtl
cmp
dec
loopne
rcl
out
xchg
mov
cmp
popa
shl
sbb
mov
inc
pop
or
test
or
cmp
push
int
adcl
lcall
jl
push
xchg
pop
decb
pop
xor
notl
push
mov
xchg
notl
xchg
in
loope
xchg
test
xor
xchg
scas
dec
xchg
into
test
mov
jne
mov
scas
sbb
outsl
jmp
dec
mov
mov
mov
lds
ret
pushf
cs
jns
outsl
in
jne
cmp
call
repz
iret
es
scas
push
es
fucom
dec
ret
push
pop
sbb
inc
ds
adc
and
stos
cmc
insl
jbe
in
fldcw
mov
lret
cmp
jne
in
inc
cmp
adc
add
sbb
cmp
jp
popf
adc
aas
push
xchg
add
adc
pop
ss
or
lret
lcall
fdivrp
sbb
jmp
jg
call
imul
fidivl
cmpsl
jp
lock
or
scas
inc
rclb
in
lret
stos
inc
adc
mov
insb
in
jmp
or
popf
sub
std
mov
pushf
mov
clc
dec
int
jne
fs
lock
jae
mov
jno
andb
cmp
hlt
adc
mov
jae
mov
sub
bound
in
es
in
push
pop
jle
aam
pop
popf
rorl
mov
lods
nop
test
sub
cmpsl
scas
shr
or
insl
cmpsb
and
mov
mov
mov
popa
dec
sarl
shr
add
fadd
lock
ja,pn
bound
out
loop
repnz
xor
iret
das
push
cmp
jb
sarb
sub
pop
jp
sub
fldcw
leave
pop
sbb
lea
ja
inc
or
dec
dec
pop
ret
push
mov
inc
pop
mov
lcall
jle
mov
xchg
cmp
lahf
push
movsb
lss
cmp
mov
cli
and
lcall
lea
cs
scas
lds
daa
push
push
inc
push
lcall
and
cmp
icebp
adc
sbb
xchg
ds
pusha
mov
sub
push
push
ficoms
das
push
push
mov
test
out
imul
xchg
sub
sbb
in
cmpsl
add
lcall
adc
dec
fsincos
stc
lea
shll
xchg
push
pop
adc
sub
andb
inc
pop
sub
popl
ds
lret
ss
push
nop
fcmovu
mov
or
mov
clc
xlat
das
imul
xlat
dec
jge
jecxz
xchg
sahf
xchg
adc
sbb
cli
adc
dec
sub
and
sbb
xchg
mov
jne
sbb
dec
sub
sbb
mov
aaa
adc
pop
sub
mov
mov
fcmovnbe
dec
sub
sbb
mov
sub
jno
stos
adc
and
aaa
ficompl
cmp
jb
rcll
fbstp
lods
cs
and
or
dec
das
push
scas
test
jmp
je
xlat
sub
pushl
pop
jmp
push
cmp
cmp
pop
or
dec
jb
clc
add
xor
movsl
mov
daa
fsubs
jg
loopne
mov
cmc
call
push
xchg
pop
mov
fsubl
push
xlat
push
into
rolb
push
or
sub
xor
inc
or
sub
into
mov
lock
lahf
push
or
in
out
or
push
inc
cmp
xchg
push
leave
je
aaa
xor
push
shlb
cli
ds
xor
and
push
fs
pop
jecxz
sub
dec
and
pop
adc
mov
mov
stos
add
filds
ret
inc
jns
sbb
pushf
push
mov
fdivrs
adc
or
fdivs
xchg
push
pusha
ja
mov
jne
inc
test
fwait
and
sbb
inc
sbb
mov
mov
insb
mov
test
or
dec
and
jecxz
pop
dec
jecxz
mov
xchg
sub
cmp
xchg
enter
repz
jp
icebp
xchg
pusha
dec
arpl
cmpsl
jp
pop
and
or
jmp
cmp
and
cwtl
xor
adc
jecxz
pop
push
sub
sti
mov
xchg
pop
insb
sub
lds
sub
je
andb
popa
sub
mov
adc
cmp
or
pop
jb
movsl
out
jo
nop
sub
inc
mov
jecxz
push
imul
xorl
ret
and
out
stos
push
add
add
jae
in
xlat
leave
out
pop
sub
in
or
fnstenv
xchg
adc
add
daa
pusha
adc
push
cmpsl
mov
add
pop
imulb
mov
outsl
sub
movsl
jae
mov
xchg
xchg
insb
mov
cltd
scas
push
ror
daa
xchg
inc
mov
push
add
mov
cli
xor
jnp
dec
add
xchg
mov
scas
mov
mov
sub
decl
adc
fnstcw
mov
repnz
xchg
mov
mov
cmc
mov
or
shrb
mov
out
mov
push
inc
jg
sub
daa
push
jmp
sub
stos
jbe
sbb
or
jge
xor
insb
test
inc
inc
push
mov
pop
sarl
xor
xor
sub
push
scas
jno
gs
fcmovbe
cmpsb
pop
mov
xor
in
or
cltd
jno
mov
and
xchg
xchg
xor
pop
and
xor
dec
push
push
cld
dec
shl
out
cs
adc
or
add
or
scas
xchg
daa
out
dec
gs
repz
lea
cltd
mov
in
fwait
mov
cmp
out
out
fcomi
push
out
push
sbb
mov
lock
fxam
test
ds
icebp
dec
push
add
mov
scas
gs
notb
mov
mov
mov
gs
mov
cs
inc
mov
dec
push
insl
fcmovnb
mov
and
dec
jp
rorb
lret
dec
repnz
xor
sbb
push
dec
xor
repnz
mov
pop
cmp
pop
dec
or
lret
mov
dec
test
cmp
pop
imul
data16
loop
ds
lods
les
ds
insl
mov
adc
mov
jne
fisttpl
imul
shrl
in
ret
sub
dec
lock
dec
cmp
mov
fbld
sub
mov
repz
jbe
decb
sbb
insb
loope
jae
andl
xorl
das
adc
movsb
mov
das
mov
push
outsb
mov
sbb
xor
push
popa
sbb
sbbl
into
push
ds
idivb
dec
mov
pop
and
ljmp
enter
xor
je
add
popa
pop
add
lea
test
jecxz
mov
xchg
or
pusha
scas
cmpsl
loop
inc
jge
mov
push
ja
enter
cmp
data16
cvtdq2ps
notb
push
scas
in
cmp
mov
cmp
test
xor
add
and
xchg
dec
lock
in
xchg
lret
test
rcrl
and
sub
ljmp
insb
sbbb
shl
loop
push
inc
pop
andl
mov
mov
cld
icebp
cmp
movsb
xlat
mov
rcll
mov
xor
bound
sub
outsl
mov
push
cmp
and
xor
cmpsl
test
ret
fnstenv
xor
testb
xor
andl
out
pop
push
lret
jbe
sub
in
rcrl
xor
int3
clc
fstps
sti
add
fldcw
test
aaa
jne
pop
test
xchg
push
mov
adc
in
jg
mov
loopne
push
gs
pop
cmp
dec
cmp
sbb
daa
mov
inc
mov
xchg
jbe
pop
jnp
inc
outsb
pusha
jle
cld
leave
nop
mov
sahf
xor
aam
sbb
insl
jp
pop
andps
jns
dec
push
pop
lds
mov
stc
cwtl
lcall
lret
or
pop
in
jecxz
push
push
insl
ret
jns
add
jle
loope
adc
cli
cmp
scas
test
sbb
pop
call
fildll
cmp
xchg
xchg
pop
jge
loopne
push
subl
popa
aaa
push
cmpsl
ds
push
adc
sbb
inc
and
adc
nop
xor
rcl
pop
addr16
test
inc
lods
inc
clc
cltd
pop
mov
mov
dec
fistl
push
pusha
mov
jmp
cmpsl
mov
insl
hlt
lea
insb
adc
scas
mov
pop
dec
dec
pop
bnd
pusha
lret
es
jnp
sub
scas
mov
mov
add
in
push
fiaddl
in
adc
jns
std
inc
mov
pop
imul
pop
mov
insl
add
mov
and
arpl
adc
mov
xor
dec
cmpb
cld
pop
mov
or
mov
jl
or
push
add
ljmp
cmp
add
push
dec
outsb
pop
cmp
mov
jb
stc
pop
in
jle
scas
add
out
pop
pop
out
mov
daa
and
and
test
scas
pop
arpl
pop
lea
jb
test
test
mov
shl
add
fidivrs
in
mov
and
pop
cwtl
out
jb
adc
jecxz
sub
push
lret
pop
cmp
pop
rorb
les
lcall
in
xor
xchg
aad
inc
shl
test
out
in
push
outsb
sti
mov
adc
fdiv
imul
mov
add
lds
ljmp
xchg
das
ret
les
xor
mov
scas
mov
lods
xor
xorl
fwait
call
je
ret
pushw
out
adc
aaa
jmp
icebp
mov
insb
icebp
iret
test
push
into
aam
or
push
out
cmp
inc
nop
incb
mov
cs
fildl
push
out
inc
cmc
adc
mov
pusha
test
push
orb
fstl
push
jle
cmp
out
scas
mov
mov
xchg
insl
mov
daa
outsb
jp
subb
ss
dec
push
mov
jmp
in
push
cmp
sarl
sbb
stos
jae
aam
daa
into
dec
icebp
daa
lds
xor
shl
cs
ds
data16
nop
cmpsb
cmc
cli
cmpb
flds
xor
aad
cmc
imul
inc
movsb
repnz
test
lods
aam
dec
mov
lret
jo
xchg
les
mov
in
in
dec
jp
push
inc
popa
fidivl
packssdw
push
cmp
pop
addr16
enter
mov
rcr
test
and
jg
mov
pop
inc
call
sub
or
bound
push
lds
into
in
mov
leave
pusha
aam
dec
addr16
sbb
xchg
enter
into
ds
jno
cli
les
dec
sbb
fisttpl
mov
pop
in
dec
imul
idivl
ljmp
push
inc
or
enter
pop
mov
addl
out
addr16
cs
or
push
cmpsl
or
stc
dec
pop
mov
jmp
sub
scas
dec
lock
add
jl
fdivs
dec
sar
sbb
cmp
add
cltd
fsubl
inc
int3
push
pop
or
push
mov
gs
mov
inc
xchg
mov
xor
repnz
das
movsb
sub
xor
cmp
push
and
cs
in
outsb
rcll
data16
ret
mov
negl
jl
leave
fistl
pop
xchg
insl
imul
lcall
aas
and
jbe
bnd
xor
shll
adc
cmp
add
mov
push
jb
mov
clc
and
pop
push
sub
addr16
xor
xor
mov
sahf
mov
xchg
mov
xlat
xor
mov
sub
pop
rclb
daa
xchg
test
out
iret
lds
mov
roll
mov
cmpsb
mov
and
std
or
fcos
sbb
pop
cld
adc
pop
mov
sub
dec
cmc
mov
mov
pop
mov
dec
ret
mov
popf
movsb
jg
inc
in
shrb
addb
test
sbb
inc
dec
in
inc
mov
adc
push
xor
and
xor
fisubs
stos
jb
leave
mov
jae
iret
mov
inc
roll
xor
mov
mov
cmp
mov
mov
sub
mov
mov
dec
add
je
and
xchg
nop
lds
or
hlt
sbb
pop
push
pop
mov
mov
sub
jbe
outsl
jns
sbb
jecxz
push
iret
jecxz
scas
xor
sbb
dec
or
lahf
fs
or
rcll
mov
jae
mov
fs
dec
outsl
aaa
test
push
orl
inc
jne
fwait
test
xchg
cs
jb
add
out
stos
lcall
aas
xor
jno
nop
jmp
mov
movsl
push
pop
insl
dec
cmp
cwtl
or
cmpsl
out
jle
lahf
xchg
xchg
push
aas
jae
dec
cmp
sbb
jne
sub
pop
mov
cmp
mov
lcall
mov
ds
pop
or
pop
ja
imull
movsl
and
cmp
aas
push
mov
and
push
mov
cmp
adc
aam
stos
mov
mov
jb
shr
cs
dec
cmpsb
sbb
ds
movsl
sub
inc
repnz
rcrb
sbb
sahf
cmp
mulb
xor
and
pusha
xlat
pop
and
jbe
adc
bound
icebp
sbb
dec
inc
jl
cli
mov
int
movsb
incb
jp
mov
std
or
sbb
lahf
ret
daa
fsts
outsb
arpl
pop
pop
into
scas
lahf
int3
test
mov
jb
pop
shl
out
mov
mov
xchg
out
pop
mov
xor
popa
aaa
cmpsl
icebp
imul
pop
mov
cs
adc
jne
iret
adc
pop
sbb
imul
ret
in
frndint
shrl
or
aam
sub
push
adc
nop
data16
xchg
aaa
repz
shll
sti
movsb
mov
sub
sbb
enter
rolb
push
test
hlt
jb
pop
jmp
dec
pop
into
xchg
push
das
pop
outsl
xchg
push
pushf
div
rorb
and
add
pop
sub
sar
negb
jp
int
dec
pop
into
mov
xchg
and
or
shll
mov
push
add
movl
cmp
xchg
daa
or
fimuls
jns
sbbl
pop
cmp
xchg
clc
cmp
jne
sub
rcr
enter
push
inc
mov
notb
popa
cli
mov
imul
add
insl
jmp
inc
cltd
cmp
mov
das
dec
adc
test
dec
mov
fwait
out
imul
jns
and
and
sub
insl
into
xchg
lods
ja
push
sbb
idivb
sbb
adc
sbb
sub
pop
cmp
imul
sbb
lock
pop
mov
in
jo
jmp
pushl
or
fsubrl
jns
push
in
addr16
mov
mov
adc
push
clc
in
dec
mov
pop
cmp
sbb
addr16
imul
inc
dec
in
es
pop
mov
xchg
push
repnz
ds
fistpll
fisttpll
lock
ss
rcl
inc
xor
pop
jnp
mov
dec
jecxz
xchg
dec
fdivrl
dec
push
mov
mov
and
or
lds
movsl
xchg
adc
push
xor
or
mov
inc
dec
push
fnstenv
jmp
mov
dec
adc
sarb
adc
aad
add
ss
dec
incb
and
mov
mov
lret
lea
int
pop
sahf
andb
xchg
sbb
cmp
push
cmpsl
sub
aas
mull
testl
inc
push
lock
mov
stos
lcall
lods
ftst
jnp
popa
cmp
xchg
fsts
addr16
push
ljmp
push
insb
dec
leave
setno
jl
mov
mov
scas
jle
stos
push
xor
xor
add
adc
cmpsl
push
jecxz
push
icebp
jge
xor
pop
loopne
mov
out
test
sbb
mov
scas
lds
and
aas
ds
mov
lret
cli
out
repnz
lahf
push
jbe
gs
vminss
lcall
icebp
rorl
in
iret
test
jbe
lds
and
out
ss
pop
iret
inc
mov
cmp
push
mul
subb
lahf
orb
les
mov
adc
fwait
stc
jl
xor
arpl
cltd
xchg
imul
and
ss
sbb
cmp
push
pop
add
popa
clc
data16
fwait
pop
outsl
movsb
adc
out
imul
aaa
ja
fists
cltd
shlb
leave
jne
and
cmp
bound
idivb
das
lods
cmc
into
push
pusha
pop
dec
pushf
cli
fmul
icebp
pop
adc
mov
out
push
fisubrl
imul
jnp
adc
fildl
sbb
imul
dec
adc
mov
gs
mov
insb
pop
xor
mov
scas
jno
mov
mov
inc
adc
inc
push
xlat
xchg
xor
roll
fs
or
pop
idiv
jo
mov
lds
movsb
sti
test
roll
push
or
adc
insl
ds
dec
negb
icebp
testb
or
cmp
add
mov
dec
adcb
sub
fisttps
pop
xchg
add
jmp
sub
dec
add
add
dec
dec
cmp
outsb
lcall
lret
mov
shl
in
xchg
test
pop
cmp
fdivrs
push
fsubrl
outsl
insl
icebp
fildll
pop
in
aaa
pop
or
call
sub
aaa
aad
jno
push
mov
mov
inc
jnp
mov
push
xlat
dec
adc
std
rol
pop
adc
pop
cs
ljmp
mov
aaa
mov
inc
shrb
cmp
cmp
imul
mov
fwait
add
dec
pop
cmp
fiaddl
fldcw
out
mov
ja
lock
dec
or
loopne
imul
addr16
orb
add
jo
loopne
jl
fidivrl
lods
mov
inc
cmp
leave
in
lea
int
mov
jb
fdivr
sbb
sti
dec
adc
pop
cltd
test
ror
imul
test
pusha
iret
mov
dec
stc
es
adc
add
or
fsub
pop
nop
and
cmpsl
pop
sarb
stos
notl
push
push
inc
lahf
mov
pop
imul
add
push
sub
pop
mov
xor
and
mov
inc
xor
mov
xchg
xchg
push
ds
aaa
es
lods
sub
shrl
pop
jl
jp
shrb
jg
add
shl
lea
push
and
or
or
xor
sub
ss
xchg
iret
dec
int
pop
and
in
mov
cmpsl
xor
jg
pop
xchg
mov
insl
cmp
jmp
insb
adc
xchg
jle
mov
mov
mov
push
add
push
add
ds
or
mov
insl
xor
imul
sub
push
sub
scas
add
inc
adc
mov
jb
fisubs
gs
sub
jb
sub
pop
cli
cld
arpl
xor
popa
sub
cmc
repz
push
test
ja
fmull
jo
fisttpll
sbb
fists
adc
mov
or
cmp
mov
rcr
sub
cmc
push
adc
push
push
dec
cli
mov
jp
ljmp
push
xchg
fstpl
inc
hlt
jmp
or
lahf
bound
out
lea
xlat
scas
nop
jecxz
loope
xor
inc
or
add
pushf
lcall
lret
inc
sub
dec
mov
mov
stos
push
sbb
lahf
pusha
mov
and
out
aad
je
shr
out
and
test
fadds
outsl
test
outsb
jp
jp
ljmp
sbb
mov
stos
mov
cs
enter
repz
popa
jg
jno
das
in
mov
mov
pop
lahf
push
push
aaa
inc
loope
xor
and
test
xor
jp
ficomps
jns
sub
jno
inc
fiadds
cmp
fldenv
adc
sbb
pop
jecxz
sub
pop
data16
test
adc
jl
sbb
rcrb
stc
in
aam
repz
addr16
push
stos
jno
call
lds
cmpsb
add
jmp
loop
subb
out
sbb
inc
push
sti
movsl
add
or
sub
in
ret
clc
cmpsl
mov
aas
ljmp
mov
pop
aam
push
inc
arpl
mov
inc
cmp
adc
pop
cmc
and
mov
mov
add
sub
stc
negl
cmc
call
int
jno
add
insl
jbe
rclb
and
std
outsb
add
sub
jg
pop
repz
mov
call
enter
inc
insl
mov
stc
dec
rorb
push
int
stos
and
or
mov
testl
push
call
lds
inc
sbb
es
dec
gs
leave
jbe
pushl
insb
lahf
testl
lcall
in
push
pop
dec
pop
mov
xchg
pusha
and
lahf
iret
aaa
mov
cmp
mov
pop
popf
dec
lds
aaa
repz
dec
mov
pop
aaa
dec
out
mov
mov
lret
fdivrs
js
xlat
mov
jle
ret
dec
pusha
xchg
pop
loopne
loope
stos
scas
testb
xchg
push
enter
ret
scas
das
jg
cmc
mov
insl
rolb
mov
leave
mov
sarl
int3
xorl
fmuls
aas
aas
pop
jb
dec
push
icebp
push
arpl
jno
xchg
jbe
jmp
ss
pop
push
or
pop
xor
mov
xchg
dec
cli
push
push
mov
mov
push
mov
scas
outsl
stc
subb
in
icebp
mov
aaa
clc
xchg
bound
xchg
dec
das
jmp
in
aaa
fucom
mov
in
and
sbb
call
inc
jp
jae
mov
mov
mov
mov
cmp
mov
das
ja
shlb
pop
sahf
stos
dec
jl
rcrb
sub
xchg
testb
and
push
mov
scas
and
push
pusha
pop
shr
or
and
cmp
mov
xor
xor
jg
jb
outsl
std
cwtl
lret
in
jl
xchg
js
inc
out
lods
push
loope
imul
mov
dec
mov
enter
and
out
rcl
xor
cltd
imul
dec
cmp
push
loop
das
outsb
and
push
in
gs
xchg
aad
movsl
imul
imul
cld
rcl
scas
icebp
hlt
cwtl
push
cmp
sbb
cld
mov
xchg
jb
inc
lcall
aas
fnstcw
mov
out
mov
lret
aad
ss
pop
mov
xchg
sti
mov
push
xchg
xor
clc
mov
into
cmp
inc
inc
imul
push
pop
lret
adc
test
in
xor
sbb
jns
sub
xor
ljmp
les
mov
pop
outsl
fsubl
out
push
push
or
pop
push
push
and
dec
add
add
les
adc
mov
mov
pop
in
or
push
ret
mov
sub
adcb
push
sub
enter
icebp
cmp
mov
jecxz
dec
jbe
lods
jo
jg
jnp
xor
pop
mov
jb
scas
push
fwait
xor
cmp
insb
scas
outsb
mov
mov
js
sub
inc
ljmp
sar
lret
mov
push
sbb
in
cmp
ja
out
xchg
cmp
pop
aas
repz
test
test
pop
iret
shl
imul
sahf
push
outsl
inc
xchg
andb
xchg
das
mov
stos
or
mov
xor
bound
pop
shll
notl
sbb
loopw
lahf
ret
out
adc
jo
mul
cs
mov
push
addr16
js
pop
imul
icebp
arpl
mov
xchg
lret
push
mov
mov
lds
pop
fnstsw
xor
push
xchg
pop
mov
mov
xchg
cmp
sub
jno
repnz
roll
and
inc
dec
and
mov
pop
popl
leave
shl
xlat
mov
mov
and
rcll
lds
popa
mov
and
xchg
and
outsl
push
inc
add
iret
loopne
jo
mov
stos
out
rep
xchg
addr16
adc
inc
sahf
dec
add
insl
dec
call
sti
cmp
subb
xchg
in
mov
lods
cs
outsl
adc
adc
movsl
add
scas
or
push
in
enter
imul
push
scas
adc
dec
outsb
das
clc
mov
ljmp
adc
pop
push
scas
cmpsb
pop
inc
adc
dec
add
iret
jmp
fildl
add
xor
cmc
pop
cmp
les
add
push
prefetch
mov
cmc
ljmp
loopne
adc
lods
out
hlt
pop
jp
mov
pop
add
fsubl
sbb
ret
std
mov
mov
adc
and
mov
adc
test
and
ret
adc
imull
fistpll
adc
rcrb
testb
lcall
dec
or
insb
xor
outsl
lahf
or
insb
fimuls
test
ficoml
movsl
inc
lea
sar
push
js
xchg
or
jno
stos
out
popf
nop
inc
and
mov
xor
xor
pop
push
sub
outsb
subb
ftst
shl
loop
test
imul
dec
mov
dec
dec
call
stos
pop
dec
ljmp
and
dec
mov
movsb
inc
ret
mov
inc
xchg
pop
std
leave
data16
dec
push
rcrl
js
lret
add
cmp
push
cmpsl
fistpll
aas
icebp
out
mov
or
push
popf
movntps
push
jno
cwtl
daa
cmp
out
jns
out
push
mov
sub
jmp
or
adcb
inc
push
adc
mov
dec
data16
adc
fmuls
inc
dec
cmpsb
sub
and
scas
lcall
push
sub
sti
dec
sbb
push
icebp
repz
jnp
cmp
aaa
add
movsl
cmpsl
and
insb
movsl
jb
data16
mov
dec
cltd
xor
fwait
jecxz
out
cmp
cmp
mov
adc
out
orl
roll
mov
fidivs
fsubs
lret
in
sbb
lahf
mov
out
sub
cmp
sbb
xchg
negl
aam
push
loop
inc
test
sub
jg
fmuls
sarl
cmp
mov
and
pop
and
fldt
xor
inc
repnz
arpl
dec
lods
fildl
lock
leave
int
stos
xor
dec
insb
pop
xor
adc
in
jmp
repnz
loopne
jmp
fisubs
scas
btr
push
into
addr16
test
jecxz
mov
cltd
adcb
mov
clc
and
xchg
mov
decl
popf
ljmp
add
mov
clc
fsubrl
popf
push
sbb
incl
insl
and
ds
out
jecxz
push
sub
or
test
push
xor
das
jmp
cmpsb
mov
push
dec
mull
clc
call
je
pop
cmp
push
xor
dec
jb
mov
sbb
push
pop
movsl
adc
push
sbb
push
in
xor
dec
push
push
fidivs
cmpsl
daa
imul
adc
jo
shl
push
pop
inc
sub
icebp
xor
inc
jo
push
and
jg
jecxz
sub
in
shl
cmpsl
int3
dec
psrad
pop
inc
ljmp
jmp
inc
lcall
xorl
xchg
pusha
icebp
ja
imul
aad
cmpsl
cli
inc
and
dec
mov
popf
in
jle
cmpsb
fldt
outsl
mov
push
mov
mov
inc
and
push
xchg
jmp
mov
pushf
stos
mov
les
das
dec
test
icebp
aas
int3
mov
cwtl
sbb
out
cs
cmp
xor
inc
pop
cmpb
push
mov
fists
jae
leave
les
push
xor
in
jbe
in
fdivl
insl
or
mov
and
and
fildll
jmp
in
in
push
imulb
cmp
dec
gs
mov
add
sub
xchg
push
mov
xlat
aam
scas
iret
insl
inc
test
xor
dec
test
push
jbe
cli
aas
add
pop
sub
add
mov
add
pusha
out
and
idiv
mov
pop
out
mov
jl
sbbb
rcrb
add
bound
xor
mov
inc
add
or
pop
icebp
cmc
mov
cmp
rolb
push
outsb
cs
add
das
push
out
dec
arpl
dec
xchg
pop
cmp
push
pop
mov
sbb
das
fldenv
cmp
dec
aam
inc
imul
in
roll
imul
pop
sbb
dec
aas
add
aas
mov
adc
les
dec
pusha
shll
lcall
into
push
add
pop
adc
in
xchg
dec
sbb
les
jmp
pop
stc
leave
sub
mov
sub
sub
shrl
and
aaa
jns
dec
sub
gs
neg
das
mov
loopne
arpl
fnstenv
imul
testb
rcl
loope
push
pop
fldenv
mov
es
rcrb
fldcw
aaa
add
jle
out
xchg
mov
and
in
js
in
lret
jecxz
lahf
lret
cmp
xor
mov
jmp
das
jmp
jmp
mov
fistl
and
inc
rcl
push
jb
pop
mov
movsl
hlt
popa
hlt
ret
fwait
xor
sub
das
mov
in
xchg
jmp
div
sub
and
dec
add
dec
std
mov
adc
fsubs
sub
inc
add
sbb
push
mov
and
scas
out
leave
xor
test
mov
xchg
pop
pusha
imul
dec
mov
subb
xchg
icebp
jg
imul
imul
lods
cmp
fcmove
adc
dec
lea
jb
imull
mov
or
mov
jecxz
push
aaa
fnstenv
adc
add
adc
xor
sti
in
mov
imulb
inc
into
aad
sbb
shlb
xchg
lds
enter
push
lock
push
xchg
loop
ljmp
xchg
scas
rclb
cltd
mov
push
aaa
cmpsl
ja
or
loop
jmp
scas
xor
jo
inc
jae
pop
loope
ret
ss
sbb
or
cli
xchg
inc
fwait
mov
bound
push
inc
jae
je
ljmp
imul
inc
xor
sub
pusha
pusha
mov
xlat
or
aas
js
ss
lods
mulps
dec
dec
push
divl
nop
push
repz
lcall
das
jne
lea
incl
jne
lea
imul
pop
mov
std
push
scas
sub
ss
mov
call
movsl
shll
dec
adc
xor
ss
add
lahf
adc
push
lods
incl
fwait
xchg
jmp
das
rorb
fisttpl
mov
jne
xchg
ja
notb
mov
jno
adc
jne
cmp
and
cmp
fiadds
cmc
aaa
push
sub
adc
cmpsl
clc
inc
push
cmp
in
add
aaa
cltd
ret
sub
push
jne
leave
xor
dec
sub
cmc
aas
dec
in
movsb
inc
lods
lock
lahf
jb
ss
fdivs
push
xlat
addl
mov
repnz
out
adc
pop
jae
das
shr
in
aam
pop
inc
mov
inc
push
xor
pusha
push
mov
sub
pop
out
outsl
int
pusha
push
mov
mov
push
xchg
cltd
in
jns
mov
mov
or
data16
dec
mov
sub
push
mov
pop
inc
rcrl
adc
mov
scas
mov
data16
adc
jge
rcll
ja
pop
push
scas
jmp
sbb
mov
aam
fists
ret
sbb
xor
fcoms
test
push
jbe
lret
inc
repnz
mov
in
xchg
jmp
xchg
ret
xorb
sbb
sbb
push
aaa
or
push
push
xor
mov
adc
stc
jbe
mov
or
lahf
decl
xlat
inc
cmp
jmp
movsl
into
adc
jnp
out
in
adc
fs
jecxz
sbb
jno
pmaxub
pop
cmc
and
or
mov
movb
dec
mov
cltd
sahf
lds
lea
sub
mov
fisttpl
sahf
aas
sahf
xchg
jmp
lcall
dec
scas
sti
stos
add
fstpl
pop
or
inc
stos
test
cmp
xchg
int
jp
test
or
lcall
inc
das
ror
negb
mov
cwtl
rcll
aas
stc
shll
mov
aad
pop
aaa
dec
jno
or
dec
sub
inc
stos
cmc
xchg
call
jmp
repz
ja
shll
sbb
test
xchg
cld
outsb
inc
push
clc
inc
movsl
mov
negb
icebp
or
push
out
jmp
repz
sub
dec
outsl
xor
sti
mov
mov
imul
loopne
push
mov
clc
sahf
pop
and
in
testb
insl
repz
mov
mov
adc
aaa
mov
out
cwtl
fistpll
push
jns
sub
add
push
jbe
xchg
sarl
pusha
aaa
jnp
inc
call
push
pop
sub
pop
test
push
int3
iret
adc
fisttpll
popa
add
adc
cld
and
shlb
xor
jno
cmp
inc
adc
pop
or
ss
mov
xchg
fwait
sub
imul
addr16
cmp
adc
pop
xor
add
imul
add
add
pop
int3
gs
xor
repz
cmpsb
cmp
sub
push
mov
and
and
sbb
imull
mov
push
rcl
jne
rol
lock
inc
cmc
dec
test
imul
cmp
outsl
mov
add
dec
xor
movsl
fld
mov
cli
and
scas
stos
popf
loop
clc
lahf
adc
mov
mov
cs
outsb
adc
outsb
cmp
sarl
sbb
sub
dec
cmp
orb
aas
cmpsl
cmp
fsubrp
jmp
rorl
mov
jnp
and
shll
pop
addr16
iret
outsb
xchg
dec
pop
jbe
mov
mov
mov
mov
mov
ds
cmc
push
aaa
mov
mov
movaps
jle
dec
cmp
push
mov
xor
mov
leave
das
imul
jg
jmp
lcall
ror
lods
jo
pop
jo
or
jo
push
sbbl
mov
mov
push
sbb
cltd
xor
inc
pop
xor
ficomps
outsb
fs
cmp
lcall
ja
add
mov
mov
jo
mov
pop
jle
pusha
xchg
jns
jb
and
xchg
cmpsb
shlb
mov
inc
fiadds
nop
jne
in
test
adc
out
cmp
mov
mov
mov
jle
xor
push
fcomps
jg
xchg
xchg
jns
iret
push
fidivl
iret
jmp
loop
cld
and
xor
mov
jp
push
call
xor
insl
fwait
add
mov
fwait
ror
jmp
sub
mov
sub
stos
pop
push
test
pusha
sbb
mov
pushl
pop
mov
or
adc
roll
lahf
sbb
mov
xchg
aas
jnp
decl
pushf
xchg
cmp
jns
addr16
jmp
in
pop
shr
iret
aaa
jecxz
shll
int3
mov
sahf
addr16
ss
lret
cmp
rol
shlb
mov
loop
fcomi
pop
fdivrs
pop
xchg
push
push
das
fbld
inc
dec
inc
jp
dec
lea
scas
lea
pop
fidivs
inc
popa
push
mov
xchg
addr16
lds
inc
mov
ja
xor
inc
das
cmp
cmpsb
bound
mov
dec
inc
hlt
cmpsl
sbb
sbb
jb,pn
inc
int3
lea
xor
cmpsl
int
fldt
rclb
mov
lret
pop
pop
push
mov
fidivs
adc
xchg
pop
lods
cmp
lret
cmc
inc
ljmp
lret
ss
push
inc
repz
stos
out
push
mov
imul
js
mov
push
push
icebp
mov
inc
in
push
shr
stc
aaa
fiaddl
adc
push
pop
fisubs
insb
aad
inc
stos
pusha
and
es
mov
mov
pop
and
pop
pop
push
out
shlb
mov
fsubrl
sbbl
lahf
aad
les
jns
iret
mov
jb
push
int
roll
lahf
mov
stos
push
arpl
jnp
in
adc
jne
aad
or
loope
mov
cmc
adc
sub
xchg
loop
sub
sub
testl
push
mov
xchg
imul
push
ret
inc
loop
aaa
pusha
rorl
sub
mov
dec
js
out
or
shlb
xor
mov
pop
or
jo
push
icebp
mov
std
imul
sub
hlt
icebp
sub
or
dec
cld
imul
lahf
sub
paddusw
insl
stos
pop
pop
pusha
negb
or
pop
gs
test
mov
pushf
repz
mov
aad
cmp
rorb
fwait
adc
mov
mov
dec
jbe
mov
test
rol
loop
xchg
sub
sbb
cmp
sub
bound
insl
lahf
scas
rolb
aad
mov
insb
fcomps
mov
lea
jne
push
scas
fscale
test
adc
mov
push
mov
repnz
cli
mov
repnz
jb
bndstx
xchg
adc
or
arpl
sahf
adc
push
out
mov
sti
les
std
push
or
fwait
les
push
sub
dec
sub
stos
rorb
cmp
sbb
mov
mov
cmp
decl
clc
jns
pop
add
jno
fmuls
lods
data16
stos
ss
inc
and
popf
out
mov
fidivl
xor
sbb
push
sahf
je
dec
dec
dec
push
inc
sbb
inc
dec
add
mov
add
jno
call
nop
out
pusha
mov
js,pn
ljmp
icebp
sbb
inc
sbb
push
into
in
xor
and
lea
sbb
add
add
cmp
out
in
test
cltd
pop
addr16
lea
cmc
fwait
and
pop
nop
mov
daa
adc
sbb
ret
aad
in
dec
dec
xchg
jge
push
mov
cmp
scas
rorl
daa
std
subb
inc
dec
cmp
aad
adc
je
pusha
fisubs
jb
repz
jne
inc
cmp
das
dec
or
insl
fwait
mov
inc
call
ss
jne
into
cmp
shrb
loopne
jb
or
xor
das
inc
sbbl
dec
mov
push
dec
mov
mov
or
gs
cmp
loopne
dec
out
or
test
in
sbb
ljmp
mov
mov
imul
sbb
imul
test
dec
jl
xchg
xchg
into
jns
insl
inc
push
mov
dec
dec
mov
insb
xchg
cmc
stos
es
cli
dec
xchg
and
cmp
xor
pop
cmp
adc
dec
xchg
aad
dec
pop
pop
fldt
jbe
lret
pop
jmp
loope
add
push
dec
ljmp
mov
sub
push
imulb
dec
fnstsw
mov
mov
cmp
stos
imul
adc
jmp
sbb
das
mov
loopne
lods
or
scas
into
imul
shlb
imul
push
adc
jbe
test
jae
push
push
dec
stos
out
or
dec
mov
ss
popa
add
out
ljmp
xor
std
push
test
loope
xor
sbb
mov
push
inc
popa
shlb
add
inc
into
mov
decl
cmc
ds
mov
dec
testl
sub
ss
pushl
mov
xor
mov
sub
pop
xor
xor
xor
ret
movsb
xor
lahf
into
aaa
dec
or
leave
jne
imul
enter
std
cmpsb
lret
dec
pop
mov
jle
ja
sub
jb
stc
aam
sub
mov
sbb
stos
and
cmp
mov
fimull
jns
mov
out
sbb
cmc
pmaxub
test
sub
lret
dec
and
xor
xchg
jno
inc
or
ljmp
sbb
daa
mov
repz
clc
and
dec
rcrb
std
sbb
xchg
testb
movsl
pushf
sbb
stos
cs
test
inc
inc
xchg
test
test
push
mov
repz
pop
xchg
in
and
mov
daa
sub
pop
push
and
adc
mov
movsb
mov
xor
test
or
sbb
xor
push
jne
fs
gs
sbb
jle
xchg
outsl
hlt
add
or
add
ss
imul
cmp
icebp
mov
jo
or
mov
pop
in
xchg
cmp
mov
fwait
or
add
ds
dec
cmpsl
push
into
dec
mov
mov
shll
mov
fldt
sbb
push
push
out
mov
mov
add
mov
insl
out
push
mov
jp
xchg
adc
rcrl
push
sub
pop
sub
ror
idivl
sbb
jg
into
jmp
leave
int
jg
xlat
loope
xchg
rol
lahf
clc
inc
push
icebp
rcl
inc
clc
sti
mov
pop
lds
mov
push
daa
test
jne
push
add
test
mov
mov
mov
xchg
adc
sbb
and
jg
jo
insl
das
fiadds
aam
xor
fdivrl
or
in
dec
pop
ret
or
ss
imul
lods
pop
inc
shrb
dec
jb
sbb
lods
idivl
not
ret
fists
sbb
fcoml
adc
cltd
popa
mov
sbb
xor
test
pop
jns
inc
mov
jp
sarl
out
gs
push
push
mov
cmp
cmp
cwtl
adc
icebp
xchg
gs
mov
or
mov
dec
fidivs
jne
mov
sub
fistps
enter
test
sub
jb,pn
iret
ds
fadd
adc
cwtl
jecxz
and
push
push
mov
mov
repz
jp
hlt
mov
dec
ljmp
ss
pop
ss
adc
leave
push
jae
divb
push
sub
add
lds
into
clc
lock
mov
cmc
std
nop
cmpsb
das
cltd
xlat
aaa
or
push
fucomp
mov
enter
pop
scas
mov
andl
or
inc
dec
fwait
xchg
sbb
xchg
outsl
mov
push
js
popa
push
shlb
shlb
scas
jmp
cs
ss
adc
pop
out
dec
daa
and
test
jns
jno
lahf
test
std
addr16
dec
and
cmpsl
xchg
cmpsl
sbb
shll
mov
fistps
cltd
ljmp
ret
or
xor
lret
fistpll
adcl
pop
push
ds
insb
ljmp
mov
xchg
sub
iret
jl
jge
cmpsl
cmp
sbb
cmp
xor
sbb
pushf
cli
ja
xchg
aad
jp
jge
and
lods
fiadds
add
shlb
push
std
push
push
shll
cwtl
mov
jo
mov
pop
out
sbb
push
cmc
add
aad
cmpl
fisubrs
or
add
test
mov
xchg
adc
lahf
nop
cmp
mov
jae
or
sub
xchg
cmp
inc
xchg
add
ret
push
sbb
mov
inc
xchg
out
cmp
lods
add
orl
imul
nop
jp
ds
in
pop
aaa
dec
loope
push
jae
cmp
mov
stc
lds
cmp
cmpsl
fistpl
sbb
sub
mov
das
push
mov
mov
int
inc
jnp
pop
cs
push
mov
aam
rcrb
dec
mov
and
lret
pop
aam
pushf
cmc
adc
pop
sarb
pop
lret
mov
dec
subl
mov
lret
mov
mov
gs
inc
jne
dec
das
jg
sbb
ret
sub
movsl
std
dec
or
fimull
xchg
aas
jge
aad
addl
mov
std
jmp
adc
stos
test
pop
dec
test
imul
mov
les
cmp
pop
jmp
adc
stc
xor
push
cld
shrl
and
push
cmc
mov
xor
xchg
xchg
in
cwtl
adc
jb
push
add
insb
or
mov
insl
and
dec
and
test
add
imul
mov
cmp
mov
test
idivl
adc
push
mov
dec
pop
inc
mov
pop
push
je
lret
icebp
repnz
sarb
xchg
and
push
movsb
enter
add
std
out
ljmp
adc
out
dec
dec
xorb
ds
xchg
jbe
fcom
repz
mov
int
add
pop
sub
stc
inc
sub
inc
mov
jecxz
in
jl
push
dec
incl
cmp
addr16
ja
push
pop
mov
nop
xlat
add
pushf
and
ficoms
sti
test
add
int
push
lcall
jmp
or
lahf
xchg
jle
push
fwait
mull
sbb
sub
mov
inc
mov
mov
imul
mov
mov
or
test
push
int3
aad
dec
rcrl
mov
push
add
adc
shll
pop
lahf
jns
lods
sbb
mov
add
popf
lods
xor
cmp
mov
mov
jno
bound
mov
adc
cmp
cmp
push
sub
fists
loopne
mov
scas
add
into
mov
movsb
out
test
cmpb
mov
shlb
mov
cmp
mov
jnp
jmp
or
in
jecxz
inc
and
test
pop
jb
repz
stos
pop
ret
xor
xchg
sbb
inc
in
mov
push
out
data16
inc
sbb
orl
fisubs
dec
data16
imul
cmp
pushf
adc
pop
jns
ret
sub
inc
pop
xchg
pusha
or
xchg
push
sub
pop
xchg
dec
dec
popf
push
adc
cli
aam
mov
mov
xchg
rorb
mov
and
push
scas
pop
dec
mov
lock
push
xor
sub
insl
xchg
jge
dec
pop
xor
daa
fwait
or
add
int
mov
push
and
inc
pusha
pop
ds
xor
imul
mov
push
movsb
and
adc
ljmp
jecxz
mov
pop
xchg
pop
mov
jge
mov
xchg
cmp
adc
es
adc
mov
add
cld
lcall
inc
scas
scas
aad
push
ljmp
xor
cmc
bound
inc
push
dec
int
in
push
adc
sub
loop
ss
fsubrl
xor
jl
jo
adc
rcr
jl
dec
mov
mov
push
repz
mov
aam
and
add
push
insb
push
inc
aas
mov
mov
daa
stc
iret
imul
iret
push
aaa
xchg
outsl
mov
inc
cmp
xor
aaa
xor
xlat
jecxz
sbb
lahf
mov
dec
stos
int
fstpl
mov
sub
pop
mov
bound
cwtl
std
bound
xchg
xchg
cmp
cltd
dec
mov
repnz
sti
xchg
xchg
dec
jmp
jno
dec
jecxz
sbb
xor
jge
pop
ljmp
jnp
lea
and
outsl
cmp
pop
pop
cmp
mov
push
ret
jbe
dec
pushf
cmp
shlb
lods
dec
lods
pop
pop
push
repnz
jb
addr16
in
sub
or
or
jg
mov
jb
pop
cmp
jo
adc
mov
sahf
jp
mov
lea
inc
fidivrs
lcall
push
rcrb
push
mov
jno
lds
pop
clc
ret
push
jo
lcall
xchg
dec
inc
scas
setns
mov
cmp
filds
aaa
push
idivl
sub
sbb
mov
das
js
sub
cmc
sub
push
sub
push
shl
in
call
nop
das
sbb
xchg
mov
ss
push
out
cmp
scas
in
mov
or
lds
push
sahf
push
cmp
rcrl
xlat
pop
out
inc
shlb
ret
push
je
fisttpl
adc
loope
mov
xor
stc
fisubl
loope
push
adc
ret
adc
repz
cmp
and
int3
jns
insb
push
inc
xor
mov
mov
pop
pop
mul
mov
inc
imul
out
clc
and
pop
gs
sub
fldcw
outsl
sti
lock
xchg
mov
xchg
xor
lds
push
call
mov
xchg
xchg
dec
pusha
xor
or
pop
adc
xchg
mov
cltd
push
pop
add
jne
xchg
pop
ja
sub
xor
mov
lret
sarb
rol
insl
or
inc
mov
sub
inc
or
sbb
inc
shll
cmp
inc
jmp
xchg
sbb
dec
sub
clc
das
lret
xor
add
dec
ret
inc
imul
push
pop
mov
ds
out
xor
addr16
insl
mov
add
fcoms
pop
push
mov
imul
sti
sbb
leave
mull
sbb
mov
nop
sti
test
sbb
movsb
in
rcrl
and
ret
xor
insl
push
xor
fucom
ret
cmpsl
xor
jo
fwait
mov
xchg
pop
push
xor
jbe
ret
mov
cmpb
les
pushf
push
xorl
xchg
mov
ret
inc
inc
cltd
subl
and
fidivl
clc
js
pop
out
xor
sbb
mov
movsb
sub
jl
loopne
subb
jae
sub
enter
js
sub
mov
lds
add
shrb
rcrb
aaa
cmc
addr16
and
leave
inc
sub
pop
jns
push
popa
test
out
mov
aaa
stos
stos
ja
and
push
imul
xor
aas
jecxz
ja
push
sarb
aaa
movsb
mov
dec
xor
push
mov
dec
ja
rcr
xor
pop
fildl
in
jb
imul
lock
je
inc
or
or
ret
je
fcoms
xchg
xor
jae
mov
or
outsl
mov
mov
mov
push
add
jmp
arpl
dec
dec
jnp
jp
mov
mov
cli
jnp
jp
rolb
mov
inc
fdivrs
cmc
gs
cmc
mov
mov
xchg
dec
mov
mov
sub
enter
iret
mov
fisttpl
sbb
mov
cmp
cmp
push
into
ss
xor
bound
inc
push
addl
sbb
cmp
mov
pop
push
xchg
mov
mov
add
and
mov
push
add
cmp
inc
sar
daa
or
dec
test
mov
loope
lock
fwait
popf
add
mul
pop
inc
jmp
lahf
cmc
and
lods
pop
jnp
pop
pop
jns
ja
xchg
psllw
pinsrw
das
sub
jge
pop
push
or
lea
mov
scas
dec
movsl
out
mov
push
sub
cmp
push
jae
xchg
adc
adc
stc
shl
xchg
xchg
mov
insb
cld
int
sahf
pop
adc
gs
mov
xchg
fdivrs
and
fldl2t
roll
mov
cs
sbb
and
cmp
imul
fdivr
dec
dec
repz
cmpsb
or
mov
jg
or
and
adc
sub
cmp
xchg
into
jnp
cmpsb
in
movsb
cmc
aam
lret
lock
cs
cmpb
test
lock
jmp
add
negl
movsb
shl
adc
cmpsb
movsl
test
inc
dec
sub
arpl
mov
and
mov
add
rolb
push
or
push
push
cmpsl
sbb
int
ja
pushf
adc
fs
jne
in
daa
jnp
pop
jmp
mov
mov
test
shll
sbb
mov
cli
sbb
push
icebp
and
loop
cmc
lock
xchg
pop
test
bound
outsb
imul
xor
mov
cmc
movsl
call
jb
les
jnp
push
nop
jl
es
lcall
inc
xchg
dec
addl
leave
mov
inc
nop
push
adc
outsb
std
jmp
sti
insl
sbb
mov
dec
mov
and
xchg
notl
int3
pushf
or
or
les
inc
xor
push
adc
adc
in
je
push
cmc
test
pop
sbb
scas
addr16
and
or
mov
in
mov
or
fxch
push
push
mov
fadds
in
dec
adc
mov
and
and
out
aad
in
in
inc
xchg
jecxz
in
stc
mov
lock
ljmp
je
push
int
cmp
and
mov
fnstsw
addr16
and
xor
cmp
sbb
cmp
in
jecxz
pop
push
into
fidivrs
fdivrl
lahf
mov
mov
cmpsl
insl
jb
mov
sub
popf
mov
inc
and
xor
cwtl
jbe
lret
jb
cmp
ljmp
dec
push
xor
mov
xor
push
enter
mov
call
sub
mov
das
mov
mov
push
dec
inc
in
repz
cmp
inc
in
or
xchg
or
ss
je
mov
sub
scas
and
inc
ret
dec
cmc
add
pop
jmp
mov
aas
daa
movsl
jno
mov
sub
sbb
xchg
sub
fldcw
arpl
sub
jae
jbe
outsl
jmp
fucom
call
and
sub
ss
test
dec
sbb
and
cmc
addl
fcmovnbe
shrb
xlat
adc
mov
leave
lcall
inc
adc
or
negl
or
cmp
push
neg
jbe
sub
cmp
mov
fisttpl
mov
mov
and
ja
hlt
ljmp
std
pop
mov
or
loope
ja
sahf
cld
or
jp
sahf
pop
clc
push
insb
fprem
sub
jecxz
loope
test
mov
pop
dec
xlat
add
daa
sti
jle
mov
aam
xorl
lea
mov
mov
cmpsl
shrl
jns
lock
mov
cmp
fwait
loopne
sub
test
push
mov
notb
or
cmp
mov
or
xchg
pop
out
jne
add
imul
cs
aas
arpl
jmp
push
pop
insb
push
adc
xor
fdivl
clc
cmp
or
pop
or
mov
mov
sbb
push
in
lcall
movsb
ret
cmp
movl
inc
in
repz
jns
mov
lcall
mov
inc
gs
adc
push
add
sti
dec
out
mov
add
test
push
aas
jg
xchg
cmp
das
stos
xchg
inc
pop
addr16
cmp
push
addr16
add
aam
das
loope
lret
push
mov
jmp
stos
mov
jns
jl
lock
mov
mov
lods
jnp
mov
xchg
push
mov
jb
cmp
sub
in
movsl
mov
mov
loope
and
call
movsb
and
push
cbtw
pop
lods
mov
push
dec
daa
loop
and
mov
push
aad
mov
jp
repnz
lcall
jno
test
roll
push
loopne
loop
xchg
jb
sarl
rcr
mov
iret
fstpl
test
daa
movsb
jns
lahf
and
mov
aad
scas
aam
enter
xor
in
popa
mov
fistpl
fwait
lret
rorl
ljmp
xchg
xor
xlat
inc
adc
inc
or
fcoms
xchg
pop
out
imul
cltd
or
iret
sbb
das
test
addl
stos
daa
ret
ficomps
xchg
fs
stc
pop
cmp
jbe
mov
push
jge
rcrl
mov
push
movb
data16
test
inc
inc
xchg
lea
sbb
jo
cmp
inc
js
nop
out
mov
add
loope
push
lahf
decb
or
jl
sbb
and
add
pop
mov
mov
push
xchg
adc
push
jp
xor
ja
sbb
stos
push
iret
clc
mov
jbe
cmpsl
push
sahf
aaa
xchg
sub
lahf
push
bound
cltd
ja
or
pushl
cmp
je
lret
repnz
ret
std
cltd
dec
cs
iret
es
jae
push
in
pop
adc
mov
push
fcoml
cltd
mov
pusha
stos
sbb
clc
cltd
jne
lods
jnp
adc
cmpsl
pushf
pop
jecxz
cmc
xchg
jecxz
das
repnz
dec
cmp
rol
ss
pushf
pop
inc
push
sub
clc
mov
loop
pop
and
into
aas
lahf
cmpsl
adc
repz
dec
mov
push
lcall
decl
js
fcomps
lds
test
dec
add
ret
sub
cwtl
dec
adc
shrb
jae
jne
lock
adc
clc
jbe
sti
pop
mov
add
sub
xor
mov
push
add
push
xor
mov
jecxz
push
sbb
xchg
ljmp
mov
dec
adc
lods
sbb
inc
pop
jnp
push
cld
scas
test
dec
fidivl
cmp
dec
sub
mov
stc
mov
js
stc
jg
push
daa
fcoms
bound
outsl
pop
adc
xchg
fcmovnb
pop
sub
jg
out
fsubs
es
insl
call
jb
icebp
scas
fdivs
bound
loope
sbb
sbb
lret
mov
cmovl
adc
jae
in
pop
int
pusha
mov
je
es
lods
mov
repnz
loope
andb
push
mov
and
scas
clc
dec
lret
xchg
xor
and
addr16
push
push
jae
outsl
sbb
repnz
push
jecxz
push
rolb
dec
fistps
stc
loop
mov
subl
cld
imul
lea
repz
cmc
cmp
lcall
sub
addl
pop
add
mov
cli
cli
jne
out
adc
out
mov
push
mov
stc
xor
das
loope
inc
sbb
jbe
adc
movsb
outsl
dec
pop
mov
lret
nop
cli
inc
or
aad
test
lret
xchg
xchg
mov
lahf
sbb
sti
pop
push
pop
sarl
pop
scas
outsb
and
arpl
rcr
pop
jns
push
sbb
sbb
bound
add
sub
in
sub
sbb
jbe
aas
jge
xor
in
insl
ret
dec
dec
popf
fwait
ret
cltd
xor
mov
pop
sub
pop
mov
dec
inc
push
or
jge
push
sbb
mov
sub
jbe
inc
ds
movsb
jne
pop
push
fcoml
cli
cmp
jg
adc
nop
inc
cltd
fisttpll
inc
sub
jp
mov
adc
sbb
pop
push
dec
imulb
mov
cmp
sbb
mov
sub
movsl
adc
cmp
jns
stos
cmp
push
xlat
sahf
jb
stos
adc
stos
pop
push
rcr
sub
jbe
pop
sbb
mov
daa
or
push
imul
stos
mov
jg
sbb
pushf
add
test
loope
add
loopne
testb
fistps
pop
mov
cmp
fmuls
or
bound
cli
leave
adc
pop
push
push
or
jb
and
push
adc
pop
jo
adcl
shll
sbb
adc
ds
iret
push
cli
scas
jp
stc
loop
add
sti
mov
cmp
pop
pop
in
adc
addr16
pop
outsb
pop
push
cmp
and
cltd
adc
ja
xchg
or
jl
repnz
jns
adc
je
add
ret
jle
cltd
sti
scas
fidivrl
xor
xchg
pop
addr16
sti
pop
mov
mov
ljmp
push
jns
push
pop
leave
je
and
lds
xchg
nop
push
stos
mov
pop
loop
jns
jge
ja
movsl
out
lret
adc
push
cltd
bound
jbe
call
fs
or
stos
mov
data16
xchg
pop
dec
mov
aam
arpl
mov
sbb
loopne
push
daa
fistl
add
and
lret
jnp
test
jb
das
out
ret
mov
add
push
lret
sti
fisubl
sub
sbbb
push
jp
or
sub
pop
mov
outsb
lock
lea
rcll
dec
pop
cmp
lret
xor
jne
jg
xchg
pop
iret
cmp
or
dec
out
inc
xchg
outsl
mov
jns
cmp
mov
or
cld
push
das
jecxz
dec
add
pop
adc
jg
cltd
inc
adc
pusha
scas
jmp
dec
repnz
bound
in
int3
xor
jge
or
adc
pop
test
lods
pop
adcb
enter
mov
cltd
xlat
xchg
mov
dec
xchg
jns
jmp
jo
iret
test
add
lret
imul
pop
and
mov
xor
rcrb
and
push
fisttpl
cmp
int3
add
mov
inc
scas
pop
into
scas
push
sbb
roll
outsb
cmp
jp
and
inc
out
push
xor
xchg
pusha
cwtl
push
in
test
in
aam
sbbb
sub
jno
cmp
icebp
int3
jp
or
in
mov
outsb
pop
addl
test
fsubs
xchg
add
loopne
push
xor
adc
xchg
jne
mov
lock
jp
fbld
mov
push
je
mov
sbb
cmp
aad
ljmp
fsubs
pop
xchg
das
lock
mov
jnp
loopne
adc
xchg
add
jle
push
jb
jbe
int
jle
sti
xchg
or
lods
loope
or
ja
pop
sbb
mov
add
lea
mov
push
clc
xchg
push
cwtl
aam
imul
pushw
out
sub
push
jbe
icebp
jns
sbb
jle
inc
ret
addr16
pop
loop
adc
mov
xlat
pop
fdivl
js
xor
pop
cld
aas
jnp
stos
fists
sbb
mov
xchg
cld
xchg
paddd
mov
outsl
pop
pop
sti
push
adcb
cltd
xchg
in
cmp
pop
jae
pop
sub
inc
out
mov
sub
mov
fs
mov
out
mov
loope
pop
xchg
pop
call
or
or
ret
push
sbb
scas
mov
ja
test
in
pop
sbb
minps
loopne
pop
or
scas
fisubl
ret
mov
ljmp
mov
lock
popf
mov
std
aas
cmpsb
into
lock
aaa
cmp
jl
sub
inc
mov
fists
mov
fisubs
jp
sarb
push
mov
lahf
dec
fidivrs
and
in
in
iret
rclb
sub
idivb
cltd
dec
xor
cmp
mov
push
pop
push
lret
adc
scas
mov
jmp
or
frstor
mov
cwtl
push
add
repz
ss
push
std
movsl
pop
sbb
outsl
push
sub
xchg
dec
mov
jbe
push
das
xchg
jnp
push
nop
push
push
icebp
ja
adc
push
pop
push
and
lcall
add
jge
and
adc
xchg
stos
pop
adc
push
inc
add
jbe
clc
lods
popa
mov
xchg
xchg
and
jp
shll
hlt
cld
push
sub
rcrl
or
sbb
lret
sti
fxam
mov
sbb
mov
repnz
fmul
shrb
cmpsb
cli
mov
stos
ss
pop
mov
inc
adc
pop
push
sbb
jge
rcl
xchg
lret
adc
fidivrs
pop
inc
xchg
adc
in
pop
hlt
cmp
mov
scas
lcall
mov
imul
sbb
mov
add
dec
js
jge
sbb
lcall
stos
ss
adc
xorl
into
dec
cld
mov
jmp
or
test
notb
inc
sbb
or
ds
imul
popa
pop
adc
jns
ljmp
mov
inc
das
call
sarl
imul
addr16
mov
xor
xor
push
mov
scas
adc
ljmp
jnp
scas
fists
sbb
jmp
jbe
and
ret
or
mov
cmp
fidivrl
push
aam
mov
push
add
iret
or
sub
addr16
icebp
jne
std
repz
aad
xorb
addr16
xor
jbe
sbb
lcall
dec
lds
je
mov
cmp
dec
jmp
clc
bound
mov
sub
out
ss
inc
shrl
adc
lcall
addr16
xchg
in
lock
push
jno
and
or
loop
imul
das
pusha
imul
adc
adc
xchg
mov
adc
mov
roll
mov
pop
mov
mov
or
neg
lret
js
es
notl
xor
xlat
mov
dec
sub
loopne
add
popf
fisubrl
bound
adc
fisttpll
aaa
inc
cmpsl
mov
iret
xor
lret
push
mov
sub
mov
ss
pop
xor
add
aaa
out
enter
pop
sbb
cmp
mov
jp
sbb
lcall
mull
push
jecxz
out
sbb
mov
jae
insl
sub
enter
test
ds
jb
cmp
jbe
sbb
pop
xor
pop
mov
push
out
pop
adc
sbb
sbb
mov
xor
xor
ljmp
out
cmp
out
mov
daa
and
pop
cli
inc
jl
mov
sub
jg
push
repz
cmpl
pushf
jb
out
mov
inc
dec
pop
sbb
jnp
jb
data16
and
xor
data16
loop
sbb
mov
push
add
xor
jp
loop
xchg
add
xchg
add
jle
cmp
push
mov
jae
lahf
and
mov
sub
popa
pop
jle
sbb
inc
mov
aam
xchg
inc
cs
fcomps
xor
int
stc
add
imul
addr16
cmp
rcrb
lea
xchg
mov
movsl
xchg
xchg
cltd
out
inc
inc
arpl
out
addr16
test
int
mov
add
pop
test
jle
in
in
add
cmpsl
sbb
into
stos
mov
js
loop
inc
mov
push
xchg
ljmp
adc
jg
mov
sub
jne
cmp
scas
bound
sarb
fldcw
pop
push
jl
jecxz
inc
test
sub
in
loop
aas
or
add
loop
jns
jne
push
xor
pop
pop
lods
jge
xor
lea
push
stos
sbb
mov
xchg
int
mov
push
xchg
push
adc
push
lahf
pop
pop
jg
sbb
imul
or
xor
stos
xor
mov
ret
mov
or
xor
pop
push
in
inc
gs
subb
jecxz
sbb
push
adcb
imul
lds
and
mov
adc
xchg
sarb
stos
sub
cli
gs
sarb
inc
push
test
xchg
aam
xor
or
enter
repnz
jae
sbb
or
dec
out
cmc
insl
push
ja
icebp
ds
mov
mov
leave
mov
adc
cli
push
imul
mov
sbb
mov
add
pop
fbstp
sub
push
xchg
mov
dec
xchg
mov
in
push
cli
add
sbb
jbe
daa
add
jbe
mov
push
add
mov
es
push
push
ret
pop
dec
es
ja
jne
lahf
push
add
mov
cmp
jns
xchg
or
pusha
sahf
into
adc
mov
mov
sbb
je
dec
xchg
int3
insl
nop
xchg
jle
cld
mov
push
stos
aam
test
fisubrs
mov
sahf
xor
sub
xchg
jns
dec
outsl
add
lcall
jle
add
out
scas
cmp
xor
pop
sbb
loop
rcrb
repz
idivl
out
push
jo,pt
lret
outsb
fmuls
xchg
sbb
out
fidivrl
pop
jecxz
insb
adc
loope
pop
stos
xchg
pusha
push
and
push
stos
pushf
jge
add
jp
xchg
sti
pusha
movsl
leave
lcall
add
int3
mov
cmp
jne
and
xor
jle
mov
jp
loope
pop
push
js
pop
sbb
ss
lret
sbb
addr16
cli
push
push
loop
mov
fldenv
ss
sbbb
mov
jns
and
adc
fwait
jl
sub
jo
sub
jnp
test
add
jae
cmp
mov
lcall
call
mov
aas
add
mov
mov
in
ficoml
subb
pop
popf
enter
lods
cltd
dec
xchg
daa
sbb
out
adc
insl
jne
inc
cmp
arpl
mov
ds
xor
out
push
push
xor
or
xchg
stos
jne
cli
dec
cmc
xlat
pop
dec
cmp
imul
push
pop
mov
js
cmp
pop
outsl
xchg
shlb
xchg
sub
add
test
aaa
loop
fcomps
mov
shr
jp
stos
aas
arpl
sahf
daa
stc
pop
rcll
dec
inc
jb
push
adc
pop
dec
mov
dec
xchg
in
xor
jmp
pop
sub
add
inc
xchg
xchg
mov
rclb
ffree
push
cmc
lret
jns
ss
stos
outsl
jmp
push
cmpsl
push
imul
xchg
jmp
scas
dec
and
cmp
les
sbb
xchg
pushf
test
jbe
pop
mov
enter
test
jmp
jmp
mov
jo
xchg
shl
in
mov
pop
cmp
lret
int
pop
mov
dec
cmc
mov
add
das
insl
sbb
mov
js
in
xchg
fidivl
test
push
sbb
mov
and
jbe
pop
jnp
add
testl
dec
out
jmp
add
pop
xchg
mov
mov
ja
inc
inc
mov
add
xchg
stos
adc
mov
jg
jbe
ds
sub
daa
pop
sbb
lret
sbb
jl
int
sub
sti
mov
pop
adc
xchg
mov
gs
fdivr
inc
sub
imul
loope
ljmp
pop
test
mov
inc
and
xchg
lcall
sub
mov
scas
dec
mov
addr16
leave
mov
mov
add
jbe
enter
adc
xchg
sbb
clc
or
outsb
pop
pop
push
sub
pushf
rorb
cmp
sbb
sub
and
lock
dec
fcompl
addl
xchg
inc
push
mov
xor
scas
push
cli
js
push
xchg
pop
scas
xchg
jb
push
mov
mov
lock
fcomps
outsl
leave
adc
outsl
jbe
add
nop
mov
fidivs
pmaddwd
push
xor
pop
jg
xor
stc
setg
add
in
stos
sub
xor
mov
sbb
mov
outsl
and
jl
imul
aas
mov
jb
mov
lcall
mov
pop
pop
roll
mov
xorl
pushf
adc
jns
fidivs
adc
test
repz
aas
mov
cmp
jbe
sarb
fildll
mov
inc
in
add
jge
sbb
hlt
lcall
divb
inc
aas
xchg
bound
lret
fcoms
addr16
repz
fwait
pmaxub
xchg
fdivl
outsl
aam
xor
sub
sarl
cli
dec
sarl
and
jo
xor
out
jns
mov
movsl
cld
cwtl
xchg
icebp
inc
push
mov
mov
je
xor
xchg
add
pop
push
mov
mov
xor
repnz
adc
aas
xor
push
xor
addr16
push
idivl
pop
int3
mov
adc
xor
mov
aaa
xchg
cld
fld
pop
sub
out
jbe
fsubr
sub
lods
enter
test
push
fwait
test
pop
or
mov
inc
add
sbb
lods
dec
out
bound
aad
pop
jg
cli
inc
add
cmp
mov
lret
fdivs
in
adc
mov
mov
jns
push
mov
movsb
stos
ja
pushf
mov
jg
out
leave
into
dec
out
or
push
popa
pop
nop
push
mov
mov
xchg
nop
test
sub
lds
enter
pop
xchg
xchg
dec
xor
mov
add
mov
jmp
mov
addb
ret
ret
jge
mov
cmp
and
cmpb
xchg
insl
pop
jnp
jmp
mov
and
jmp
cmp
mov
mov
adc
arpl
cli
mov
scas
mov
dec
enter
jecxz
cli
or
jge
sahf
xchg
ds
mov
or
dec
scas
add
mov
scas
pop
mov
pop
dec
lds
mov
in
fwait
or
nop
mov
sub
push
addr16
cli
call
push
mov
aam
movsb
dec
fwait
pop
in
sub
or
add
xchg
xor
ficoml
test
push
and
push
loope
xchg
popf
lock
les
add
jno
mov
xchg
cmpsb
iret
int
lods
jae
mov
fisttps
mov
fidivl
jbe
lahf
push
dec
popa
jae
orl
je
popa
test
in
xor
add
leave
push
sti
xchg
outsb
jno
dec
insb
adc
pop
scas
cmpsl
sub
cmovge
clc
idivb
outsl
jg
push
clc
scas
mov
push
fldenv
lret
gs
loopne
icebp
and
dec
mov
pop
cli
push
inc
repnz
adc
call
mov
test
cwtl
pop
out
fldcw
push
cmp
aad
and
cmc
cmp
jp
or
push
mov
aas
mov
int3
dec
mov
cmp
mov
jns
push
pop
ds
hlt
outsl
clc
daa
int
ret
js
aam
and
imul
mov
lret
out
dec
mov
pop
sbb
cld
jnp
xor
xor
mov
jmp
mov
inc
mov
adc
sub
mul
outsb
andl
add
fsubrs
cmp
sbb
sarb
jb
pop
mov
pop
mov
loopne
mov
fisttps
or
dec
mov
stos
stos
test
adc
and
adc
lods
dec
cli
xchg
dec
push
xor
sbb
xchg
lahf
es
ja
mov
int3
fcmovne
and
inc
ds
mov
sub
push
push
lods
enter
mov
xor
pop
xor
sbb
loope
addr16
pop
das
mov
dec
daa
mov
ss
push
rol
clc
jns
pop
shl
xor
ret
es
loopne
ja
push
jnp
xor
lahf
mov
ja
cs
jp
test
xchg
and
and
out
sbb
sub
das
sbb
sub
mov
iret
addr16
int
fsts
repz
xchg
add
xor
inc
dec
mov
outsl
pop
inc
xchg
fwait
bswap
adc
jg
mov
outsl
cmp
push
bnd
outsl
push
cmpsl
xchg
ljmp
or
add
cmp
fnsave
sbb
push
adc
jno
mov
dec
mov
mov
dec
xor
inc
lods
jg
sbb
ds
clc
in
outsl
mov
sub
pushf
hlt
cmp
out
aam
sbb
jl
das
and
rorl
dec
leave
iret
jp
lock
in
mov
es
rcrl
xlat
push
in
push
sbb
push
loop
fistl
lods
imul
out
out
lret
das
fxch
lahf
pop
mov
ja
adc
pop
mov
jnp
jle
mov
test
inc
sti
repz
loop
push
dec
arpl
outsl
je
inc
inc
adc
pop
xchg
int3
push
mov
xchg
ret
adc
jno
leave
adc
shr
mov
addr16
cs
jb
aam
scas
or
push
cltd
add
shr
outsl
sub
les
adc
pushl
mov
dec
xlat
or
inc
in
iret
shll
test
stos
dec
fldl
jle
push
dec
adc
pop
clc
pusha
pop
lahf
in
xchg
adc
jb
cwtl
sub
sbb
ficoms
push
pop
sub
pop
adc
pop
or
ss
sbb
cmp
daa
lock
mov
mov
and
lds
insb
daa
insl
in
ret
call
call
inc
sbb
mov
aas
shl
cmp
push
dec
pushf
int
stc
ja
dec
test
cmp
mov
gs
aam
call
loopne
inc
and
jbe
adc
jo
push
pop
out
fisubrl
daa
outsb
fidivrl
cmp
iret
lock
imul
push
lods
ret
rcll
inc
adc
punpckhwd
and
xor
hlt
dec
ja
mov
fildll
pusha
jge
repnz
pop
xlat
xor
pop
out
ret
or
dec
test
push
jo
mov
mov
mov
pop
adc
xorl
mov
bound
xchg
jmp
ret
js
xor
test
cs
lahf
cmp
sbb
aam
dec
cmp
add
pop
push
cmp
or
xchg
mov
xor
clts
ss
lret
ja
lock
dec
leave
mov
out
and
push
push
mov
dec
adc
inc
lods
pushf
pop
iret
sarb
lods
orb
es
mov
inc
subb
jmp
icebp
mov
aaa
call
xchg
lret
mov
cmp
lret
les
mov
cmp
fwait
stos
imul
outsb
cmp
mov
mov
push
inc
aaa
sbb
sub
push
out
xlat
push
movq
push
pop
ljmp
into
adc
xlat
shlb
jno
xchg
mov
pop
aad
mov
push
ljmp
mov
mov
cmpsb
push
xor
xchg
cmc
cld
xchg
xchg
lock
or
mov
es
push
cmp
mov
decb
cmp
inc
aad
std
add
test
mov
jb
cltd
adc
pop
mov
cmp
dec
imul
push
lock
in
pop
std
shll
int
aaa
mov
lahf
mov
lret
mov
jo
mov
das
mov
mov
jl
fdivrl
xor
pop
push
test
insl
pop
mov
fcoms
sub
xor
push
jle
mov
jl
call
test
fcomip
cwtl
lock
cmp
mull
fisubrl
movsb
add
aas
pusha
or
inc
shl
push
addl
push
out
pop
and
add
negb
jbe
adc
xchg
fildl
lret
mov
in
adc
mov
xchg
push
sahf
xor
inc
sbb
lds
into
clc
shrl
jbe
seto
dec
clc
lahf
dec
fisubrl
xor
bound
out
jecxz
ljmp
xchg
jg
pop
test
mov
add
mov
das
xor
outsb
sbbb
scas
adc
in
rcl
cltd
sub
mov
scas
jns
je
inc
cwtl
or
pop
dec
mov
in
push
mov
jg
fwait
insb
xchg
jecxz
mov
imul
lds
push
xor
xor
mov
mov
and
xchg
cmp
popa
ja
sbb
insb
pop
push
sbb
mov
pop
inc
sbb
stos
test
jp
frstor
and
push
imul
or
arpl
jb
pop
mov
pop
mov
out
mov
mov
jo
pop
jbe
xor
outsb
movsl
pop
or
fimull
jns
test
mov
and
inc
arpl
popa
or
jns
add
pop
dec
aad
and
dec
imul
fcomip
lods
jns
test
inc
inc
mov
imul
hlt
cmp
xchg
dec
adc
insl
movsb
push
add
add
fldenv
aaa
repz
sub
pop
rcl
frstor
sub
icebp
add
nop
enter
icebp
sub
inc
push
add
hlt
gs
pusha
push
adc
mov
jmp
sti
fwait
push
xor
rcrb
addr16
adc
jnp
out
sub
rolb
sbb
pop
jp
pop
pop
ja
imul
lret
fsubs
dec
jo
ja
test
out
inc
xor
mov
mov
pop
es
pop
mov
out
pop
mov
dec
fcomps
in
push
in
push
int
push
mov
punpcklbw
pop
push
std
jb
push
lcall
jo
jb
mov
insb
shl
inc
sbb
leave
add
mov
fsubs
popf
mov
xor
jg
rclb
jno
mov
fsubrl
jbe
mov
dec
adc
sub
lods
cwtl
shrb
aad
and
outsb
add
iret
mov
or
pop
adc
mov
inc
sbb
stos
mov
js
adc
xchg
ficomps
mov
cmp
addr16
push
inc
xlat
bswap
out
test
adc
pop
iret
inc
insl
add
dec
lods
pop
mov
push
leave
xchg
jns
pop
inc
icebp
jae
dec
adc
daa
ret
into
dec
pop
imul
jl
push
repz
mov
std
rcrl
lock
xor
xlat
ret
sub
push
xor
jb
push
xor
ret
cmp
popf
cs
mov
sub
pusha
stc
lret
pop
mov
lret
imul
mov
sub
jb
insl
sbb
and
repnz
xor
shll
lcall
popa
mov
add
popa
mov
in
sahf
mov
pop
loope
add
popa
sub
rclb
repnz
lcall
jo
push
je
or
pop
fstl
push
and
mov
xor
fisttpl
ret
cmp
inc
fnstcw
mov
movsb
jno
ficoml
xchg
pop
icebp
xchg
jbe
mov
jnp
lcall
sub
jne
lahf
or
ljmp
adc
nop
shll
mov
push
pop
pop
sbb
out
add
jmp
paddsb
in
bnd
stc
shlb
jmp
mov
lea
xor
jno
aas
or
inc
addr16
jne
push
fcomi
cmp
repnz
jae
pop
jg
xchg
movsl
cmp
jb
imul
or
mov
stos
jg
outsl
idiv
dec
es
bound
xor
popa
mov
mov
pop
xlat
aad
leave
in
jg
mov
sub
lahf
aaa
imul
push
bound
cmp
mov
add
notl
mov
dec
insb
daa
xlat
mov
test
jae
outsl
pop
std
fstps
jbe
cmp
inc
jns
lahf
mov
shll
stos
inc
es
imul
repnz
dec
cmc
pop
mov
ror
jno
sbb
stos
jbe
xor
inc
push
js
sub
shll
xchg
int3
cli
arpl
xor
xchg
ret
cmp
adc
fimull
jmp
shlb
cwtl
stc
cld
pusha
jle
pop
into
mov
or
es
insl
pop
adc
fbld
mov
pop
lret
mov
jle
aaa
nop
push
mov
pop
fdivs
inc
andl
cmp
mov
icebp
dec
adc
outsb
imul
or
stc
pop
stos
lea
dec
inc
shl
es
and
sbb
popf
scas
push
sahf
mov
inc
push
sahf
out
sub
lret
dec
out
push
cs
dec
xchg
cs
or
sbbb
pop
gs
leave
mov
adc
scas
test
pop
mov
stos
cmpsb
adc
pusha
push
insb
mov
dec
test
inc
ljmp
sbb
seto
inc
pusha
sbb
cs
mov
rcl
fst
add
jno
jmp
mov
or
rorb
out
push
fadd
dec
jae
mov
push
dec
push
inc
cmp
scas
outsl
shrl
sbb
shrb
mov
adc
mov
jo
call
jp
nop
and
mov
jmp
push
aam
jecxz
fwait
or
add
lahf
fnstcw
pop
inc
aad
clc
sub
push
inc
bound
popa
push
int3
and
sub
mov
scas
aaa
js
jo
or
shlb
sub
sti
add
sbb
out
les
jg
call
xchg
add
dec
ret
xor
inc
mov
jne
xor
or
das
mov
xor
stc
outsl
xchg
add
sbbl
lods
inc
push
or
andb
jecxz
inc
dec
adc
stos
adc
scas
in
mov
out
or
mov
mov
fwait
mov
cmp
xor
aad
mov
in
rorb
popa
sub
ret
and
sub
in
push
jecxz
mov
iret
lret
inc
fiadds
mov
cmp
or
push
push
jb
sub
enter
addb
outsl
dec
imul
iret
ss
jecxz
outsl
imul
push
icebp
push
repz
cli
push
or
data16
add
mov
push
lcall
addr16
insl
lret
lahf
cmp
stc
gs
ret
pop
mov
out
xchg
push
stos
scas
add
mov
adc
fstpt
push
sub
sbb
pop
cmp
sbb
jno
popa
dec
push
repz
decb
das
int
sub
daa
popf
xchg
xchg
jbe
mov
insl
jae
cmpsb
sarl
outsb
jo
arpl
cmp
mov
lahf
sarl
into
aas
lods
mov
mov
pop
iret
pop
mov
adc
xor
movb
aas
lds
and
xor
clc
cli
mov
mov
and
or
pop
ret
outsb
mov
inc
es
xor
mov
cmp
fstpl
mul
mov
movl
stc
xor
test
orl
sub
and
add
cmp
ds
cmp
popa
add
mov
jo
jb
cmpsl
movsb
frstor
in
adcl
out
outsb
pop
cmp
pop
xor
cld
imul
jo
xchg
push
ss
push
adc
jnp
insb
ffree
dec
data16
jbe
xor
push
mov
movsb
and
rorl
lea
pop
call
lock
mov
sub
stos
pop
pop
sti
push
into
sbb
adc
movl
cmp
mov
pop
sub
mov
push
push
cmpsl
repz
xchg
add
std
cli
inc
insb
out
pop
mov
sbb
add
int3
fistpl
or
jle
sbb
stos
xor
addr16
insl
sub
jg
in
inc
aas
ffreep
xor
mov
xor
adc
push
jle
fadds
out
add
ljmp
in
and
xchg
mov
cmp
test
sbb
aaa
mov
sti
stc
clc
iret
mov
and
stos
ss
sub
lods
adc
and
inc
cmp
push
xor
add
icebp
mov
test
adc
out
and
xor
jmp
dec
mov
ror
push
and
movb
mov
jg
call
icebp
loopne
push
cs
insl
lret
xchg
das
add
mov
ljmp
xchg
dec
lret
loopne
adc
fildll
movsb
jmp
push
rcll
aam
dec
jne
enter
pusha
stos
in
notl
cmp
daa
or
mov
jnp
test
loopne
andb
neg
and
stos
sbb
push
icebp
bound
ds
nop
dec
iret
gs
inc
mov
inc
lcall
lods
enter
rclb
or
mov
into
repnz
incb
push
mov
or
aam
xchg
ss
cwtl
ret
pop
fmul
call
and
out
pusha
pop
pushf
cmp
pop
push
push
cmp
gs
adc
inc
das
push
out
jge
mov
mov
rorb
outsl
insl
push
mov
and
and
mov
inc
pop
stc
add
popa
sub
cmp
lret
inc
or
xchg
in
push
adc
jne
sbb
loop
sub
xor
ret
xchg
lea
sti
or
fistl
sbb
movsl
call
sahf
push
inc
insl
lods
pop
enter
xor
outsb
je
mov
cmp
xchg
mov
pop
shl
mov
push
and
adc
cld
jae
push
mov
cmp
lret
mov
icebp
xchg
je
sub
push
fistpl
dec
mov
mov
xchg
das
ret
fisubrl
cmp
mov
inc
cmp
mov
cli
and
lcall
xchg
std
inc
lock
jmp
add
mov
cmpl
inc
ficompl
lods
loopne
enter
dec
lods
gs
shrl
and
pop
fists
adc
jp
out
add
dec
push
aas
cmp
sar
test
jge
out
outsb
ja
sarl
push
and
sub
lock
cltd
mov
dec
push
mov
aaa
dec
lret
testb
mov
jb
add
sahf
js
inc
pop
gs
hlt
xor
mov
mov
fists
rdtsc
sbb
idivl
or
jmp
pop
cmp
fstpt
mov
aam
data16
sbb
sbb
sub
jmp
sub
sarb
xchg
das
lcall
push
imul
rcll
loop
adc
push
out
aas
jge
mov
inc
push
es
repnz
cmp
pop
in
cwtl
sahf
cltd
in
push
jae
nop
fs
mov
cmp
insb
out
mov
jge
rorl
sbb
mov
sbb
pusha
mov
dec
sar
push
xchg
add
dec
dec
dec
add
dec
sub
mov
xchg
inc
jnp
pop
ret
scas
in
or
test
mov
fdivl
dec
imul
cmp
jne
sub
icebp
mov
xor
add
sbbl
fs
sti
dec
add
mov
lds
cltd
js
dec
add
and
pop
add
mov
fwait
mov
fistpl
in
fsubs
sub
stos
incl
inc
cmpsl
into
mov
lods
mov
arpl
dec
inc
xchg
xchg
xchg
dec
pop
daa
or
push
ret
mov
ds
sti
adc
cli
xchg
jo
or
fs
or
mov
mov
mov
sub
insb
enterw
sub
inc
xor
cmp
lcall
jg
jge
sub
add
or
pop
inc
mov
mov
test
scas
or
push
push
push
hlt
dec
movsl
mov
daa
imul
mov
mov
mov
inc
in
jb
or
sbb
or
in
cltd
sub
ss
outsl
in
or
daa
jne
push
cmp
in
enter
in
ss
sbb
fsubs
pop
enter
adc
mov
adc
cmpsl
jge
inc
jmp
inc
fisubs
in
out
pop
clc
xor
stc
leave
and
mov
cmp
cmpsl
inc
jl
scas
adc
sub
mov
jne
mov
les
sti
xchg
rcr
jo
rolb
cwtl
mov
lds
into
sub
inc
and
cmp
xor
pop
dec
xchg
push
repnz
xchg
lods
inc
std
pop
pushf
pop
xlat
aam
inc
rorl
jne
insb
jae
xlat
mov
enter
in
hlt
sbb
xor
rcll
int3
addr16
and
jno
lods
and
out
ja
mov
fadd
js
iret
les
fwait
icebp
scas
enter
popf
xor
xchg
xor
cmp
mov
pop
xlat
inc
pop
dec
out
jmp
in
andl
cmc
int
lret
xchg
mov
sbb
imul
dec
aam
push
punpcklwd
pushf
rcrb
fistps
push
mov
adc
cltd
mov
test
jmp
add
icebp
movsb
ja
in
int
xchg
repz
ds
lds
imul
movsl
imul
push
or
mov
es
in
sbb
xchg
sbb
adc
aad
or
and
nop
mov
adc
test
jmp
jl
lods
loope
sub
fwait
shrl
dec
pop
xlat
add
mov
adc
sbb
pop
lds
in
shll
push
cmp
xchg
sahf
xlat
mov
repz
pop
and
negl
sbb
add
mov
xor
push
cwtl
push
daa
add
aas
sub
jge
pop
xor
add
in
addr16
mov
inc
sub
scas
in
and
inc
daa
arpl
aam
push
xchg
imul
jne
in
popf
nop
fsub
out
jns
shl
in
daa
push
push
add
out
push
dec
adc
popa
shrl
mov
lds
sahf
adc
gs
jmp
es
sub
xor
out
or
fbstp
data16
pop
out
sbb
popf
icebp
fcomps
xor
fwait
test
sub
mov
insl
sbb
mov
dec
out
iret
mov
jle
repnz
xor
cwtl
out
shrb
hlt
mov
ss
imul
fsubr
mov
scas
mov
dec
lea
lret
mov
cld
pop
xchg
sub
pop
add
sbb
mov
xor
push
push
jb
and
jmp
mov
mov
xchg
adc
xchg
lods
cmc
subl
lret
call
push
xor
push
fsubs
std
jnp
cwtl
inc
push
xchg
repnz
fldcw
mov
lock
mov
test
jo
into
cmp
shlb
js
inc
xlat
cmp
or
dec
dec
cmp
cmc
push
dec
lret
inc
dec
inc
stos
and
ds
cmp
push
aaa
and
or
jp
cmpsl
pop
dec
fwait
or
and
or
mov
stos
inc
in
sub
pop
adc
mov
inc
mov
loopne
or
hlt
xor
in
cs
scas
add
xor
gs
outsb
je
fidivs
xchg
xor
push
adc
movsl
push
loopne
out
fstps
mov
cmp
pop
loop
adc
test
push
push
es
sub
stc
jle
adc
push
je
loopne
mov
mov
fildll
leave
fcoms
jl
mov
dec
mov
push
cmc
xchg
xor
arpl
jl
loope
jecxz
fwait
mov
shl
push
icebp
mov
inc
sub
mov
mov
cmpsb
sub
and
bound
push
stos
mov
pop
pop
mov
adc
cmpsl
xor
push
mov
mov
inc
rcr
dec
push
adc
testl
lcall
insb
rol
call
dec
sbb
ficompl
mov
and
mov
das
mov
push
mov
mov
mov
insl
mov
cltd
mov
fimull
dec
push
mov
push
repz
pop
insl
out
fsubs
into
in
out
testb
xor
xchg
jbe
add
jge
or
orl
dec
shll
push
and
popf
pop
sub
push
push
lahf
add
in
pop
sbb
fwait
jne
movsl
xor
ljmp
sarl
xchg
clc
and
or
test
jnp
mov
push
loope
pop
dec
add
and
outsb
out
addr16
adc
leave
jns
mov
imul
cmp
sub
pop
jmp
popa
mov
sub
cli
sti
sbb
mov
stos
not
lea
jno
jo
incb
push
leave
dec
in
mov
pop
bound
sarl
xor
mov
ret
nop
sbb
rolb
sbb
ror
out
iret
adc
sub
xchg
mov
push
negb
aam
and
mov
gs
gs
push
daa
cmp
in
leave
out
fisttpll
xchg
arpl
js
push
inc
lret
pop
sahf
mov
mov
pop
sub
inc
aad
lcall
jae
mov
fadd
ffree
in
and
stos
imulb
pop
outsb
cmpsb
xor
jle
mov
js
cmpsl
std
pusha
sar
ljmp
stos
movsl
sub
dec
mov
outsl
ss
sarl
lcall
cmp
inc
mov
rorl
ds
dec
or
mul
fisubrs
imul
je
cmp
xor
add
cmp
je
pop
popf
adc
inc
rcl
leave
push
testl
lahf
popa
inc
mov
shlb
pop
adc
pop
sbb
cmp
ret
push
push
push
xor
xchg
daa
ret
cmp
rclb
pop
jo
rcrl
dec
xchg
repz
push
insb
in
push
add
lds
push
imul
mov
pushf
mov
jl
mov
leave
dec
scas
xor
arpl
lcall
scas
cli
scas
clc
xor
sub
and
xchg
sub
rorb
fneni(8087
fisubrl
scas
sbb
outsl
roll
stos
outsb
and
insb
sbb
mov
aam
iret
popa
hlt
add
inc
cli
mov
mov
add
icebp
jae
out
dec
iret
rcrb
xchg
dec
das
imul
cmp
xchg
jp
add
lods
cmp
divl
sbb
ljmp
ror
xor
pop
adc
ljmp
out
mov
in
cmp
test
data16
inc
dec
fisttpl
scas
xor
das
lahf
fwait
int
int
sub
jbe
jg
stos
cmc
mov
mov
xchg
outsb
inc
scas
imul
push
nop
or
rcll
mov
lret
xchg
ret
dec
cmp
ds
idivl
and
aad
jno
cmp
arpl
ret
inc
mov
xchg
or
xor
dec
add
pop
or
pop
arpl
ja
stos
imul
sahf
shrl
or
xor
or
pop
lret
into
or
ret
jle
cmpsl
sbb
adc
inc
and
pop
divb
pop
roll
push
push
sub
cwtl
iret
inc
lahf
aaa
insb
lret
pushf
and
mov
jl
fbld
or
jg
aad
and
xchg
pop
mul
adc
fwait
add
decl
ja
xchg
xlat
fisttpl
mov
fidivs
push
cmc
pop
cld
sub
mov
cli
adc
mov
push
lods
sub
add
clc
push
dec
jne
adc
orb
aaa
out
push
sub
dec
rorb
add
loope
xchg
rcrb
dec
dec
out
sahf
pushf
xor
mov
mov
jno
enter
loopne
mov
jb
jp
scas
out
jae
ds
mov
xchg
push
dec
out
outsl
leave
fildll
inc
test
ret
ja
xchg
scas
or
add
inc
mov
jns
stc
iret
jnp
and
pop
outsl
mov
xchg
mov
outsb
repz
ret
lea
inc
stos
xor
pop
xchg
xchg
data16
mov
or
mov
sub
sbb
xchg
les
mov
rcrb
clc
add
lcall
gs
and
ret
aas
es
mov
in
jnp
in
cmp
cli
mov
arpl
mov
repz
xor
outsb
mov
xor
cmp
sbb
cmc
cmp
jno
ror
mov
imul
mov
mov
sub
lcall
icebp
dec
pop
or
push
and
add
jb
fldl
dec
test
loopne
sbb
shr
jbe
ja
push
push
lret
fldl2e
mov
fs
pop
pop
pop
dec
inc
and
shll
arpl
les
das
cwtl
push
jno
mov
inc
and
mov
dec
aaa
test
punpckhwd
sub
sub
roll
xchg
mov
aad
fimull
sub
icebp
jmp
mov
not
movsb
js
pop
negb
xchg
or
lret
jo
hlt
stos
jo
rcll
inc
repz
sub
and
fimull
insl
jge
aas
and
repz
mov
fmulp
mov
bound
daa
pop
arpl
mov
dec
sahf
sub
cmc
mov
add
aas
arpl
frstor
sbb
dec
repnz
mov
cmc
out
fimull
pop
imul
shlb
dec
xor
addl
inc
xchg
fdivrl
push
mov
jns
es
call
pop
ficoml
or
sub
cmp
inc
mov
and
xchg
movhps
cli
cltd
out
neg
push
das
addr16
ss
fcoms
inc
and
stos
push
mov
aaa
in
aas
divl
xor
loope
push
xchg
or
sub
fidivs
orb
rcll
fbstp
mov
pop
adc
or
sbb
outsl
push
icebp
mov
mov
imul
inc
loope
ret
inc
fs
sbb
add
fsubrl
inc
add
mov
cld
cwtl
out
dec
sarl
sbbb
ret
pop
out
or
cmp
shll
mov
arpl
mov
jmp
xchg
jns
xor
stos
and
mov
dec
xor
and
in
fidivs
ret
adc
out
mov
cmpsl
into
das
sub
mov
fstpl
test
fmulp
sbb
push
or
mov
cs
bnd
sub
sbbb
mov
lret
sub
call
fucomip
cmp
out
subl
add
lds
repz
addr16
and
jae
lcall
mov
inc
nop
and
lret
mov
sti
mov
add
push
or
dec
sub
push
fidivrs
add
inc
mov
push
loopne
fbld
icebp
xchg
mov
aaa
xchg
inc
insb
adc
jns
xlat
adc
inc
mov
ret
fcmovnbe
test
dec
adc
test
or
call
jp
mov
push
mov
ss
xchg
test
lock
das
jno
cld
jg
outsb
imul
ja
sbb
adc
push
push
sbb
cmp
jb
lds
int3
mov
push
jns
lret
push
ficompl
push
pop
push
ja
push
push
or
pop
dec
popf
rcll
test
inc
cmp
pop
cmp
lcall
dec
cmpsl
mov
rcr
inc
mov
iret
or
fucomip
mov
sbb
in
cmc
pushf
pop
push
int3
filds
scas
sbb
add
in
sub
fwait
stos
jns
lahf
mov
add
lock
cmc
ret
decb
outsb
adc
cmp
push
mov
lods
fadd
mov
and
xchg
iret
cmp
addr16
dec
and
push
and
aam
cs
je
dec
aad
iret
mov
or
int3
adc
or
fwait
mov
mov
sbb
mov
xchg
dec
sbb
lods
mov
push
into
jno
and
jae
js
lods
movsl
fcmove
xor
lods
ret
shlb
stos
xchg
xchg
in
cmp
mov
sarl
notl
icebp
and
in
repnz
jecxz
enter
outsl
inc
add
cmp
mov
xor
flds
jnp
lods
inc
nop
or
push
out
por
add
shl
pop
mov
mov
mov
lahf
das
lock
into
add
push
jae
dec
mov
push
xchg
or
sbb
jo
or
add
imul
mov
clc
cwtl
adc
inc
mov
sub
xchg
addr16
xchg
mov
sub
pop
popa
outsb
cmp
test
mov
adc
outsb
dec
cmpsl
mov
and
sub
mov
cwtl
adcl
in
mov
stos
push
pop
rorb
sub
mov
paddusb
push
jmp
adc
popf
xlat
roll
lea
insb
or
ficomps
or
cmp
add
aam
aad
sub
sahf
ficomps
mov
push
orb
inc
mov
mov
aas
jl
movmskps
sub
sub
mov
sub
in
cwtl
dec
lahf
fsub
dec
ja
cli
fisubl
std
jp
mov
scas
xchg
aas
icebp
pop
cmp
xor
mov
mov
cmp
xor
shl
xor
ret
fstpl
sub
or
mov
out
xchg
pop
jbe
cld
aad
mov
mov
scas
sbbb
dec
movsl
mov
lea
imul
jg
hlt
std
push
stos
ss
stos
push
mov
dec
lahf
testl
mov
addb
mov
bts
mov
shl
inc
out
repnz
cmpsl
dec
rcrb
rol
sub
jmp
mov
insb
cmp
sub
outsl
insb
adc
clc
pop
sub
cli
popa
xlat
movsb
xchg
add
call
int
push
xor
fnstcw
ds
jo
ret
push
sbb
lcall
bound
repnz
cs
in
out
fildll
das
jecxz
mov
mov
cmp
ret
rclb
lcall
cmpb
inc
mov
aas
imul
lds
jno
fldt
add
sbb
push
cmp
in
push
mov
data16
les
jnp
push
movsb
sarl
sbb
aaa
ja
and
and
adc
jo
fdivrp
fistl
mov
sbb
int3
push
sub
lahf
test
popf
jecxz
or
mov
push
ss
aaa
roll
aas
repz
sti
push
adc
mov
fisubrs
dec
push
mov
sbb
scas
andl
and
sub
or
out
aaa
rep
adc
je
push
fistpl
or
mov
out
add
stos
inc
dec
aas
xor
jle
pop
pop
add
aaa
push
popa
inc
and
scas
sbb
lods
inc
push
sub
xchg
lahf
imul
ret
adc
cmp
movsb
mov
jmp
mov
dec
test
mov
leave
imul
aaa
loope
es
cld
inc
mov
enter
xchg
and
ret
rcll
ljmp
mov
int
mov
divb
je
sub
pushl
cmp
xchg
je
repnz
inc
jnp
aas
loopne
cmpsl
mov
adc
inc
lods
dec
mov
cmp
ljmp
loop
fcoml
adc
add
daa
lods
xchg
mov
sti
pop
and
out
push
inc
and
push
and
xchg
push
sub
xor
jns
cmp
adc
ss
inc
mov
orl
mov
hlt
xor
adc
cmp
call
addr16
leave
push
cltd
adc
xchg
stos
emms
cmc
or
xchg
outsl
mov
shlb
mov
cmp
lahf
incl
sub
lcall
imul
cmc
jno
into
lret
leave
xor
and
hlt
lods
leave
out
sti
sarb
pop
push
sub
jecxz
fsubl
mov
push
pop
in
daa
fimuls
mov
add
lds
cmpsb
mov
cmp
xchg
hlt
dec
fmull
js
jp
cs
and
imul
jg
dec
and
pop
pop
push
cld
push
or
xor
sub
aaa
mov
mov
into
xchg
mov
cmc
cld
repz
movb
jne
pop
cltd
jae
sahf
jno
scas
and
out
pop
adc
xor
mov
daa
addr16
xchg
inc
daa
mov
adc
frstor
data16
mov
cld
mov
hlt
pop
adc
sub
mov
mov
in
cmc
cli
push
ja
jecxz
stc
mov
ret
jb
dec
pop
jne
push
mov
jae
mov
dec
pop
out
out
ret
loop
inc
mov
jmp
xor
aad
or
hlt
mov
push
dec
jmp
popa
scas
mov
shrl
xchg
andl
sbb
rcr
and
push
aas
push
xor
popf
ss
add
add
outsl
push
fadd
sbb
pop
cmp
dec
xor
pop
xor
insb
or
iret
cwtl
jp
add
pop
cmc
lock
into
lret
jnp
rorl
rcrl
mov
cwtl
das
add
fwait
addr16
movl
out
cmc
cmp
pop
mov
push
lods
movsl
aaa
jbe
push
push
push
stc
mov
inc
jo
cmpsb
iret
sub
jge
scas
sub
out
roll
jmp
into
dec
push
lock
adc
lods
xchg
pop
aam
sub
pop
add
popa
ficoms
ljmp
add
push
rclb
sbb
xchg
out
push
lock
movsb
mov
jge
and
ret
pop
xchg
mov
rorb
movsb
sub
dec
daa
in
add
xchg
lods
daa
fnstsw
ss
cmp
das
xlat
out
push
aaa
push
rcl
push
in
test
adc
lock
add
inc
in
dec
pop
test
jl
mov
out
jp
mov
pop
sub
pop
mov
jbe
lret
dec
push
mov
inc
xchg
outsb
adc
aas
int
lea
hlt
leave
sbb
jmp
addb
sub
mov
cmpsb
mov
mov
sub
mov
jno
incb
mov
dec
and
add
push
cmp
out
out
mov
popf
fwait
pop
fsubrl
mov
push
add
cwtl
cwtl
pop
sbb
adc
adc
or
mov
mov
pop
pop
xchg
jno
pop
js
shll
mov
andb
fistpl
jno
cmp
js
daa
mov
adc
arpl
mov
add
mov
aam
pop
out
call
add
cs
add
stos
pop
mov
in
movsl
adc
adc
add
leave
push
outsb
pop
out
push
sarl
mov
inc
cmp
sub
cs
add
xor
fcoml
leave
popf
mov
and
sbb
out
imul
or
xchg
sbb
loope
jle
pop
in
xchg
movsl
xor
sub
out
popf
or
popa
movsb
push
rcrl
rorl
xor
popa
jecxz
xchg
xchg
pop
mov
inc
mov
jl
sahf
push
fisubl
test
pop
sahf
and
mov
sbb
das
pop
xor
mov
ds
sub
hlt
shlb
inc
es
test
loop
ljmp
je,pt
cld
jae
push
mov
xorb
mov
cltd
pop
aad
cmpsl
test
rorl
rol
test
je
adc
ret
out
inc
push
fistl
pop
shll
mov
mov
and
push
aaa
sub
cmc
out
xor
call
mov
test
cmp
stos
repnz
and
pop
pop
data16
imull
inc
scas
pop
xchg
aad
lods
dec
stc
jg
or
adc
mov
aaa
js
xor
jb
std
mov
pop
push
loop
xchg
clc
mov
mov
cmp
inc
test
push
and
shll
sub
mov
push
repnz
loopne
xor
scas
cltd
ja
mov
daa
dec
ret
daa
mov
xor
mov
sbb
mulps
scas
xor
and
pop
add
adcl
pop
aaa
orl
arpl
push
or
hlt
clc
flds
imul
sbb
test
aad
xchg
test
cs
or
inc
fwait
pushf
sbb
sbb
nop
cld
lahf
mov
cmpsb
mov
in
repnz
mov
or
int3
xor
imul
notl
jno
mov
mov
push
hlt
dec
int
sub
popf
jmp
testl
enter
mov
jne
pop
int
xor
leave
loopne,pt
shll
aaa
test
dec
ret
cltd
mov
rorl
mov
movsb
or
add
and
aaa
mov
cmp
cmp
adc
push
xchg
and
lds
mov
outsb
in
mov
repnz
or
dec
adc
pop
push
test
pop
fcompl
imul
mov
ret
or
xor
in
and
daa
pop
dec
aad
sub
test
pop
out
inc
mov
or
jo
add
mov
and
xor
sub
xor
aas
mov
push
imul
rcl
dec
mov
cmp
add
lods
xor
pop
xor
xor
xlat
dec
cwtl
and
mov
dec
jne
fistpll
mov
sub
xchg
inc
cmc
jmp
jp
jne
or
and
and
jmp
jge
aaa
fldcw
pop
shr
xor
std
mov
sub
push
jecxz
fwait
mov
inc
xchg
subb
sahf
pushf
shll
xor
cltd
cmp
aas
or
cmp
push
fisttpl
mov
mov
sub
cmp
cltd
cld
xchg
addr16
shlb
and
and
jne
out
es
sbbl
pop
push
mov
pop
icebp
idivl
jmp
rorl
js
rorl
pop
pop
lahf
fxtract
mov
rcrl
out
xchg
adc
mov
cltd
ss
gs
std
insl
xchg
or
inc
addr16
fsubrp
hlt
pop
rcrb
dec
jo
lods
fbstp
outsl
mov
sub
mov
lods
lret
cltd
cld
dec
hlt
cmp
sub
bound
mov
mov
pop
add
hlt
into
aaa
and
xor
mov
test
xor
adc
iret
push
mov
mov
sbb
movsl
and
and
lea
or
push
repnz
dec
in
dec
je
shll
cmc
and
inc
sub
out
out
imul
imul
ret
scas
cmp
sbb
lds
mov
sarl
mov
test
in
subl
imul
jae
dec
sti
popf
gs
cli
in
fisttpll
pop
mov
cmp
inc
jb
xchg
cwtl
arpl
aad
popa
idivl
or
test
and
adc
and
mov
repnz
loopne
mov
cmp
jecxz
push
pop
ret
daa
adc
cmpsl
mov
repz
ds
pusha
shlb
mov
scas
fisttpll
mov
xor
mov
mov
mov
ret
pop
pop
aaa
cmp
cmp
js
dec
out
cmpsl
in
mulps
int
fistpll
pop
movsb
push
cli
push
test
sub
cmp
push
fsubrp
cli
popa
mov
inc
xor
push
mov
xchg
inc
sub
jne
repnz
sub
stos
mov
stos
jl
mov
mov
mov
xchg
xor
xlat
movsb
test
push
sub
cmc
inc
cwtl
jb
iret
jge
mov
psubq
sti
mull
push
jp
push
xor
repz
push
pop
fdivl
cmovl
dec
push
outsl
inc
cld
stc
cwtl
ljmp
mov
outsb
orl
dec
sub
pop
lcall
cmp
pusha
push
scas
cli
pusha
cltd
inc
mov
and
jae
aad
out
mov
movsb
aam
and
or
aaa
repz
cltd
xlat
imul
mov
xor
and
dec
push
sbb
mulb
mov
lea
cmpb
orl
sub
and
cmp
orb
fmull
das
daa
sub
pop
sbb
mov
imulb
repnz
es
stos
xchg
notb
cli
add
sub
xchg
sarb
or
movsl
push
mov
xor
lcall
rorb
adc
test
adc
xchg
loope
call
jno
repnz
rcrb
push
nop
jle
xchg
or
outsl
push
sub
or
out
lock
pop
add
pop
sub
add
mov
out
pop
mov
push
mov
push
push
rolb
sub
mov
cmovns
neg
cmp
push
bound
rcrb
sub
add
aad
popa
fadd
jbe,pn
sbb
rorb
jnp
cmp
imul
pop
inc
push
into
or
or
mov
enter
push
jge
stc
fwait
shl
shl
clc
addr16
lcall
es
pop
cmp
rorl
pop
shlb
push
fstl
not
loop
inc
fsubrs
test
jge
push
enter
add
sub
adc
stos
cmp
cmc
lret
dec
shll
sti
push
mov
adc
and
push
push
cltd
dec
lea
pop
js
xchg
das
jbe
mov
sbb
xchg
aas
xchg
cmp
nop
sub
sbb
push
popa
test
jle
int3
cmp
data16
xor
out
xchg
lret
xchg
jb
xchg
jg
sub
sub
sub
aaa
jle
aaa
adc
mov
cmpsl
enter
lahf
cli
loop
cmp
dec
dec
into
stos
jge
dec
inc
xchg
outsl
aaa
mov
or
jnp
dec
add
icebp
fmuls
sbb
mov
and
div
sarl
scas
cmc
adc
dec
movsb
les
sub
ret
push
cld
mov
imul
cld
ret
mov
dec
pop
xor
cld
lahf
jns
xor
fnsave
adc
xchg
in
jne
dec
mov
cmp
outsl
je
pop
sahf
outsb
cmp
addr16
cmpsb
mov
scas
cmpsb
ret
cmp
outsb
mov
inc
test
fidivrl
inc
or
test
into
enter
xlat
mov
push
repnz
mov
add
push
pop
ficoms
insl
test
push
or
rcll
frstor
mov
push
mov
ret
pop
loope
xorb
xor
ficoml
loope
xor
subb
xor
push
inc
int3
mov
xor
iret
push
call
fldt
inc
sbb
addr16
mov
xor
iret
lcall
or
push
movsb
invd
sub
test
ret
outsb
mov
dec
out
adc
fdivrs
sub
out
ss
ret
dec
mov
sub
adc
jbe
bound
adc
lea
rcll
insl
jecxz
movsb
jle
fildll
in
or
cs
mov
push
das
and
xchg
push
in
or
mov
add
xchg
cmc
inc
addr16
and
ret
xor
popa
leave
into
sti
push
mov
add
push
mov
lret
pop
test
sbb
jnp
lods
imul
aaa
mov
push
loope,pt
popf
cmp
lods
push
scas
icebp
inc
inc
std
or
inc
cmp
xor
sysenter
mov
mov
sub
push
xor
addr16
mov
ret
mov
sbb
inc
jge
jns
enter
scas
das
psubusb
lret
and
ret
psrlw
dec
mov
cmc
jmp
mov
cld
mov
xor
dec
outsb
sbb
xchg
mov
pusha
mov
dec
push
mov
or
pop
xor
and
cmp
mov
loope
jno
in
mov
loope
punpckhbw
add
sub
cmpsl
and
outsl
call
mov
js
stos
shlb
in
aad
ret
loop
and
ret
jo
fbstp
daa
dec
xchg
rorb
pop
jmp
lahf
and
nop
push
inc
test
fisubs
popf
js
aad
xchg
sbb
sarl
cmc
mov
xor
sub
xor
outsl
xchg
xchg
fisubrs
insl
mov
push
xchg
mov
pop
dec
inc
imul
fisubrl
ja
lret
add
xchg
clc
outsb
rol
sub
push
js
sbb
mov
and
aaa
add
push
xor
mov
imul
idivb
sbb
xchg
addr16
adc
pop
jae
or
inc
push
iret
add
xor
call
jo
sbb
mov
loopne
push
push
ret
inc
scas
push
in
add
out
add
stos
jecxz
push
add
or
dec
add
in
and
fstpt
push
xor
mov
pop
cmp
neg
add
loope
mov
incb
mov
dec
mov
pop
push
lcall
add
xchg
pop
cmp
fwait
dec
push
mov
inc
iret
bound
cmpsl
mov
sahf
fnsave
mov
out
xor
sub
adc
add
ret
xorl
or
jmp
fwait
add
cmpsb
add
insl
sarl
adc
fidivrs
clc
loopne
cli
cs
popf
cmp
dec
pop
cli
movsb
mov
push
shlb
iret
push
xor
lret
leave
lahf
outsb
xchg
and
lock
jge
das
and
sarl
pop
push
addr16
jl
or
mov
cmp
mov
outsb
cmp
scas
mov
call
rorb
dec
lret
nop
cmp
or
xor
push
or
mov
pop
pop
imul
mov
addr16
mov
xor
push
add
mov
pop
mov
fnstcw
cmp
std
aaa
inc
push
sahf
push
fstpt
imul
dec
push
or
mov
pop
rorb
icebp
sbb
mov
and
rorb
dec
jp
jmp
adc
sbb
stos
push
pop
xchg
in
rol
shlb
arpl
jp
insl
jno
movsb
scas
mov
imul
out
int
lcall
push
ja
hlt
rcr
mov
clc
lds
rcl
shlb
pop
pop
outsl
xchg
clc
dec
xchg
push
jae
enter
pop
adc
mov
inc
mulb
fldcw
jne
jbe
inc
push
divb
xor
cmpsl
adc
repz
sbb
nop
aas
std
sub
add
add
cld
das
xchg
pop
sbb
or
mov
and
lds
inc
in
jns
popa
scas
dec
push
aaa
fs
push
mov
inc
insl
std
mov
and
call
fldt
mov
and
call
repz
leave
popa
and
cmpsl
mov
jp
arpl
lds
jmp
add
sbb
pushl
sub
sbb
cmp
stos
nop
inc
scas
lret
insl
repz
push
subl
aas
xor
cmp
mov
jno
xor
mov
stos
int
call
add
frstor
in
adc
ret
fldt
ret
call
cmp
pop
push
adc
push
std
and
push
outsl
jb
ficompl
pop
push
cmp
sti
or
imul
imul
sbb
testl
imul
cmp
lret
test
and
loop
mov
jne
lock
repnz
lods
adc
jae
pop
pop
pop
cmpsb
repnz
icebp
xor
adc
mov
lods
and
push
imul
movb
sbb
jne
imul
lcall
or
push
or
sbb
sbb
js
outsl
or
dec
xchg
push
cmc
push
mov
adc
je
adc
outsb
sahf
sub
mov
xor
mov
popf
inc
cmpsl
lods
outsb
push
mov
or
ja
idivb
outsb
fimuls
jg
pop
or
mov
pop
mov
cli
or
test
imul
mov
inc
push
or
add
shl
popa
inc
xchg
push
add
lret
lahf
out
mov
push
loope,pt
jmp
mov
mov
incb
sub
pop
aaa
xchg
push
faddl
inc
into
pop
mov
pop
push
inc
in
jo
push
cltd
cs
mov
adc
test
sub
testl
or
into
jecxz
xchg
fwait
xor
sub
mov
cltd
pop
or
rcr
mov
lcall
inc
inc
scas
or
pop
das
sub
add
jno
add
xchg
mov
das
mulps
sbb
mov
sbb
jo
pop
clc
inc
addr16
mov
ds
sbb
aaa
jmp
or
rclb
jecxz
aas
cmp
dec
jmp
test
aas
mov
outsb
test
daa
nop
mov
cmp
and
sub
dec
mov
push
js
xor
push
jg
mov
cmp
aad
mov
daa
mov
int
adc
icebp
filds
sbb
gs
adc
mov
outsb
negl
frstor
hlt
rolb
rcrl
aam
cltd
xchg
sbb
les
stos
inc
je
std
imul
popa
pop
push
cli
les
popa
sahf
inc
jbe
jecxz
mov
rorl
sahf
jbe
jae
cltd
fwait
insb
pop
scas
idiv
mov
adc
rorl
cli
inc
inc
xor
aas
push
mov
xchg
mov
inc
sub
inc
xchg
jnp
data16
mov
pop
dec
sbb
mov
inc
imull
enter
xor
sub
and
pop
movsl
stc
xchg
fstpt
jle
fldt
mov
mov
dec
loope
js
ds
loop
testb
adc
xchg
inc
mov
xlat
inc
xor
pop
push
arpl
mov
mov
fs
popf
subb
jp
sti
cltd
fwait
mov
fnstenv
inc
sub
sti
movl
fistl
mov
out
mov
test
aas
mov
iret
and
sub
or
mov
push
adc
inc
inc
jns
inc
add
nop
add
mov
out
jl
rcr
cmc
in
sbb
adc
xchg
push
in
jg
cli
pop
imul
push
jmp
add
xchg
imul
xlat
pop
push
mov
jg
add
dec
pop
lcall
jecxz
sub
ss
cltd
getsec
sub
jns
stc
fstps
jg
adc
jbe
lahf
les
pop
lods
jl
sti
pop
jbe
bound
es
imulb
cmp
lret
imul
adc
pop
dec
repz
jno
addr16
adc
xchg
cmc
sub
addr16
jbe
inc
sti
xor
aaa
dec
ret
mov
sub
cli
adcl
mov
cs
ja
imul
mov
inc
mov
shrb
cmp
xlat
sbb
dec
xor
imul
jg
mov
call
nop
xchg
lea
inc
pop
adc
shll
xchg
cwtl
or
scas
jns
dec
pop
dec
sub
dec
mov
adc
stos
push
and
ss
lea
inc
xor
out
jae
mov
jmp
pop
cwtl
jmp
cmpsb
jno
mov
pushf
push
push
ja
jmp
mov
shlb
into
xchg
xchg
aaa
stos
adc
adc
xchg
pusha
jno
dec
inc
pop
fwait
dec
out
jmp
stos
mov
mov
js
in
stos
incb
ds
mov
xchg
jl
test
pop
mov
push
das
imul
lods
cmpsb
in
enter
push
xor
vpsrlw
in
cmp
pop
imul
mov
push
cli
sub
out
pop
push
mov
out
xchg
jle
or
push
cmpsl
dec
cmp
adc
rcrb
in
inc
pop
push
leave
mov
mov
sbb
mov
dec
sub
or
bound
xchg
lcall
pop
cmp
mov
pusha
cmp
pop
xor
lret
fsub
add
xchg
sbb
addl
outsb
rcll
insb
add
sub
mov
cmpsb
jb
inc
dec
pop
push
and
into
lret
push
pusha
jge
addr16
push
imul
ret
push
xchg
aam
fcmovnbe
in
xchg
test
mov
dec
enter
sub
or
cmp
lret
add
popf
mov
ret
cmp
hlt
bound
or
sbb
scas
xor
cmpsl
daa
or
outsb
out
jbe
mov
movsl
pop
sub
int
pop
xor
faddp
push
xlat
xchg
jae
popfw
and
rcll
iret
add
pop
std
sarl
cs
ljmp
not
pop
xor
aaa
mov
mov
pop
inc
adc
movsl
xchg
sub
adc
ds
ror
sub
movsl
aam
xor
hlt
push
cmp
push
xor
insb
inc
cmp
inc
mov
jge
jb
push
xchg
mov
pop
xchg
lea
fidivrl
out
lds
mov
push
loopne
xor
push
clc
cmp
imul
add
xchg
pop
inc
xsaves
je
lods
mov
out
dec
or
mov
push
fyl2x
jae
push
sub
adc
push
das
dec
aaa
pop
dec
test
jbe
sub
cmp
pop
push
scas
loope
int
fst
sbb
icebp
popa
jg
adc
sbb
rcll
scas
fstl
sbb
xor
jp
lea
aaa
pop
idiv
mov
testl
cmp
push
lahf
pop
call
cmp
jle
lds
pusha
aas
mov
and
xchg
aaa
clc
mov
fadds
xchg
jno
out
outsb
xchg
aas
mov
enter
outsl
es
mov
push
stos
mov
das
push
ja
in
fmull
adc
mov
pop
imul
in
sbbl
push
mov
push
adc
pop
xor
lahf
insl
mov
mov
lods
cld
xchg
jno
es
pop
pop
cli
outsl
mov
mov
add
xchg
fisttps
jge
xchg
pop
neg
sbb
or
test
jg
int
scas
out
jg
lret
test
test
mov
sbb
mov
mov
jns
imul
outsl
xchg
lcall
pop
and
dec
frstor
aaa
mov
lahf
mov
outsl
push
ljmp
xor
mov
scas
shlb
dec
and
add
das
mov
mov
mov
test
push
sbb
xchg
mov
inc
xchg
cmp
mov
push
sub
loope
cmp
push
stc
xor
pop
dec
into
sub
or
out
dec
movsl
clc
add
adc
loope
dec
mov
add
cltd
jp
test
data16
inc
add
icebp
cmp
stc
outsb
mov
das
icebp
repz
orl
mov
popf
je
cmc
inc
xchg
mov
inc
cmpb
push
add
mov
filds
les
shll
xchg
jg
fisttpll
ds
xchg
pop
and
xor
into
mov
xor
jecxz
enter
or
pop
pop
mov
mov
idivb
dec
xor
inc
rcll
push
xor
cs
and
sbb
loope
dec
jmp
repz
pop
push
inc
pop
outsb
arpl
jp
or
stos
adc
add
and
fistps
and
push
and
rcl
mov
mov
mull
into
cmp
out
lds
mov
lret
sarb
idivb
pop
pop
cmp
lea
aad
and
mov
in
sub
aad
inc
into
xor
fcmovne
pop
pop
out
lcall
sbb
popf
xor
xlat
lods
jbe
pop
adc
xor
mov
mov
aas
lcall
inc
push
adc
call
mov
aaa
jo
jp
sahf
adc
xchg
in
stos
in
adc
mov
icebp
sub
jbe
mov
pop
mov
icebp
add
adc
sbb
cmp
shlb
data16
arpl
mov
mov
std
dec
sub
imul
xor
out
push
mov
loop
cmp
std
or
sbb
js
jns
notl
mov
cli
xchg
xchg
adc
shrl
stos
pop
ret
add
aaa
test
mov
cmc
sub
pop
iret
pop
cmp
xchg
pop
and
inc
insl
arpl
inc
dec
icebp
mov
adc
jmp
xchg
mov
adc
cli
lods
or
xchg
pop
add
push
cmp
push
inc
jle
idiv
mov
xlat
pop
jns
push
fdivrl
jae
out
inc
lea
or
jb
dec
jns
outsl
sbb
or
andl
aad
xor
pop
scas
test
fistl
pop
stos
ret
popf
insb
inc
pop
daa
stos
std
jmp
sbb
mov
xchg
inc
mov
in
push
je
pop
mov
sbb
inc
pop
and
cmp
dec
mov
lods
roll
in
js
icebp
adc
out
cld
cmpb
sub
insl
lods
xchg
insb
adc
notl
aad
lret
jbe
mov
sti
jle
xchg
adc
adc
popa
mov
xchg
push
fnstsw
in
sti
popa
cmp
mov
and
jnp
dec
mov
fstpt
mov
test
add
stc
mov
cwtl
jbe
mov
fwait
and
xor
jmp
mov
mov
adc
loope
ds
data16
ds
dec
jg
xchg
rcrb
stos
pop
out
cltd
mov
imul
out
ds
cmp
cwtl
pop
test
inc
out
mov
ss
outsb
inc
or
outsb
or
push
mov
pop
ds
popf
clc
gs
add
ret
aad
push
ja
push
daa
add
pop
xchg
xor
in
ljmp
adc
sub
mov
push
cmc
ret
aad
cmp
pushf
imull
fstpl
scas
cli
or
scas
fmull
insl
sahf
in
aad
lahf
push
daa
rcr
pop
inc
cmpl
sub
and
inc
add
iret
rcll
jbe
loop
sub
iret
push
pop
das
das
js
cmpl
cmp
fdivrl
popf
pusha
cli
mov
jne,pn
lods
inc
arpl
std
inc
sti
or
fucomi
push
lds
or
js
or
adc
subl
inc
mov
fsubr
loop
cmp
sub
in
in
cmp
dec
and
and
xchg
stos
sub
mov
cmp
pop
sarl
rol
outsb
bound
dec
sbbb
test
subb
lahf
cmp
add
xor
repnz
mov
in
sub
aaa
out
outsl
in
mov
rcl
cmp
mov
push
rorl
test
push
push
movsl
sub
lret
das
movsl
cmpsb
mov
shll
inc
movsb
push
and
add
add
jno
popa
inc
jns
xor
inc
mov
pop
sbb
in
sahf
mov
lcall
ljmp
add
pop
out
popa
mov
into
or
add
ljmp
test
mov
int
fstpl
test
in
fs
adc
into
xor
xor
and
pushf
cmp
les
aaa
xchg
sbbl
pop
ret
pop
fsubrs
addr16
das
pop
or
inc
pop
nop
xchg
or
cmpsl
int
push
or
xor
or
sbb
es
hlt
imull
andl
call
mov
push
and
int
pop
data16
mov
push
push
int3
pop
mov
bound
add
push
sub
xor
xor
or
pop
adcb
shlb
xor
cmp
rorb
adc
or
adc
leave
jo
mov
cmp
pop
or
and
push
mov
mov
js
cwtl
data16
inc
and
icebp
cs
pop
repz
aad
in
or
sbb
shl
fldcw
mov
xchg
adc
or
inc
sahf
mov
les
arpl
push
jae
mov
andps
dec
fdivl
jbe
arpl
xchg
cmc
mov
outsb
lods
inc
fwait
pop
mov
repnz
ret
call
insb
fs
lret
and
out
inc
rorl
sbb
cmp
mov
aaa
cmp
rcrl
stc
int
repnz
push
mov
lods
sbb
pop
push
psllw
sub
jmp
sar
fs
out
enter
adc
inc
std
pusha
ja
mov
imul
sti
aaa
dec
xchg
adc
out
outsl
mov
addr16
pop
loopne
rcrb
fistpl
cli
icebp
cs
pop
adc
lods
mov
xlat
push
lods
mov
popf
insl
into
cld
jmp
scas
out
jle
xlat
xchg
jmp
or
daa
jo
pop
xchg
movsl
notl
outsb
daa
ret
cs
pop
push
divb
sbb
stc
fistps
push
push
loope
inc
pop
xchg
adc
mov
inc
and
jecxz
jp
imul
cmpsb
arpl
sbb
in
repz
xchg
loope
lahf
mov
cmp
xorb
xchg
fnstcw
and
ret
jo
add
sbbb
xchg
stc
xlat
out
cmp
shrb
pusha
dec
adc
int
push
flds
into
mov
popf
ret
mov
cmc
orb
sbbl
bnd
cmc
or
add
pop
jo
gs
and
mov
push
gs
cltd
sahf
test
repz
shr
jge
stos
and
xorl
sbb
mov
pop
imul
fsts
adc
mov
pop
rcl
ds
scas
data16
imul
pop
dec
sti
fsubs
add
jle
sbb
jo
xchg
push
scas
mov
lds
xchg
out
inc
stos
dec
ss
sub
pop
mov
cmp
push
pushf
gs
xchg
jbe
add
mov
add
jp
lock
rorl
xor
outsl
mov
inc
imul
pop
popf
lock
push
test
dec
dec
push
in
xor
pop
inc
cltd
push
mov
addr16
xchg
mov
mov
ficoms
fwait
inc
ss
push
into
xchg
push
sub
cwtl
push
add
push
ja
or
mov
dec
jle
ss
mov
xchg
aad
repz
or
cmpsl
fwait
xlat
jo
or
xor
or
push
mov
aaa
filds
call
sahf
mov
out
sbb
fsubrl
or
or
and
push
in
inc
cwtl
icebp
and
pop
ja
data16
fidivs
mov
xor
push
mov
jecxz
sti
ja
cmp
ret
in
xchg
std
das
mov
mov
fadds
call
dec
mov
adcb
daa
add
icebp
ret
scas
mov
insl
xor
pop
jmp
outsl
int3
ss
aaa
push
insb
ret
mov
mov
push
and
jmp
or
jns
pop
insb
mov
pop
callw
push
push
mov
sbb
mov
lcall
mov
insl
stc
adc
ja
push
push
scas
dec
pop
dec
aas
xlat
int
repz
pop
cmpsl
xlat
dec
hlt
xchg
pop
neg
fcoml
stos
in
smsw
xor
or
push
inc
loopne
pop
mov
scas
cld
cmp
jne
cmp
mov
xchg
loopne
inc
ss
xchg
jo
add
mov
add
ljmp
scas
push
insb
inc
xor
sub
cmp
cmc
push
adc
push
ljmp
adc
imul
xor
xchg
or
push
mov
in
jbe
fistl
pusha
add
pop
loop
cmovo
scas
das
lcall
dec
imul
cmc
or
dec
jbe
neg
das
aaa
mov
xchg
pop
sbb
cmp
xchg
pushf
test
mov
icebp
rclb
dec
movsl
stc
shrb
xor
loopne
inc
into
inc
cmp
insl
lcall
cs
rdmsr
jl
mov
aaa
leave
cmp
mov
push
mov
jl
repz
repnz
dec
or
lahf
or
mov
rcr
xchg
push
shll
sub
sub
cmp
jb
shlw
scas
push
mov
sub
cmp
sub
testb
pusha
ret
fcoms
inc
sbb
adc
push
xor
iret
pop
pop
icebp
stos
jmp
ljmp
mov
dec
mov
sub
pop
mov
mov
cmp
loopne
or
js
or
xchg
and
push
push
mov
data16
aaa
xlat
xor
pop
stos
ret
mov
mov
cmp
inc
mov
mov
xor
ja
add
sbb
xor
bound
sbb
mov
cmp
push
ret
pop
mov
pop
stos
xor
inc
ja
imul
lahf
xor
mov
lea
insl
jmp
or
jmp
movsl
lock
sbb
jecxz
sbb
popf
and
jp
cmp
dec
jnp
sub
sti
rorb
mov
sbb
pop
ss
scas
movsb
pop
fwait
je
lods
aad
pusha
lods
movsl
jno
aad
cmp
xor
fwait
dec
pop
test
lret
dec
add
mov
mov
imul
mulb
push
stos
nop
xchg
and
adc
lock
xchg
std
add
xor
shrl
daa
mov
jecxz
lods
dec
and
aas
dec
sar
sbb
das
cs
jno
push
cmp
inc
aas
mov
xor
int3
add
cltd
or
pop
lock
jo
test
push
inc
in
push
pusha
xchg
and
mov
out
cmp
cmp
push
cmp
adc
test
push
jne
leave
sub
fdivp
mov
out
sub
mov
aad
push
and
mov
int3
out
push
or
into
iret
push
test
fcoml
lock
das
popa
jne
sbb
sub
test
daa
xor
xchg
out
cmpb
es
mov
mov
fnstenv
cmp
aaa
enter
mov
and
iret
adc
subl
or
das
inc
add
push
bound
and
imul
inc
or
popa
mov
je
fcoms
popa
sbb
cmp
cmp
outsb
std
xor
into
inc
out
nop
cmp
cmp
jnp
pop
or
inc
icebp
mov
inc
jbe
dec
adc
or
xchg
jmp
sbb
cmp
or
or
rcl
cs
insb
push
push
mov
dec
mov
xor
push
fisttps
xlat
sub
add
loope
xchg
ficoms
lcall
jecxz
or
gs
inc
sbb
es
fsub
jge
jbe
mov
and
shlb
cmpsb
mov
mov
mov
rcrl
mov
jo
ds
cwtl
pop
lods
pop
lret
xlat
dec
jecxz
dec
mov
sbb
into
jmp
cmp
std
lea
jae
pop
das
gs
int3
mov
adc
and
lds
jne
stc
jo
repnz
jb
inc
dec
cmc
mov
nop
or
daa
cmp
icebp
dec
adc
or
mov
or
sahf
inc
cmp
mov
aaa
add
xchg
and
mov
and
int3
rorl
mov
cmc
scas
mov
inc
dec
pop
jge
mov
sbb
nop
xor
imul
jmp
sti
sahf
loope
push
ret
and
inc
pop
pop
pop
mov
inc
mov
aaa
or
xchg
inc
loope
cwtl
jo
mov
dec
mov
mov
repnz
sub
out
cmp
andl
fldcw
je
dec
jno
sbb
das
fnstsw
inc
adc
in
or
jnp
inc
mov
add
rcrl
adcb
aam
dec
pop
insl
stos
inc
push
push
imul
or
jge
mov
lea
and
push
push
push
divl
push
loope
insb
mov
popf
int3
cmp
pop
outsb
adc
push
in
pop
and
ret
arpl
std
loopne
dec
lds
cmpsb
pop
hlt
sbb
cltd
pop
loop
outsb
lods
fidivrl
sub
mov
add
icebp
fmul
and
int
sbb
sub
push
fmuls
rcr
sub
mov
pushf
push
jp
mov
nop
cmp
adc
js
pop
sub
hlt
fsts
cmp
aad
inc
btr
pop
dec
pop
pop
ljmp
jle
pop
push
mov
imul
andb
inc
lahf
cltd
dec
pop
fistpll
aad
cmc
ss
imul
fidivs
sub
jle
xchg
push
jg
outsl
jl
shrl
stos
les
jg
push
dec
push
add
roll
inc
add
xchg
out
or
pop
and
dec
mov
imul
das
jmp
mulb
mov
xchg
repnz
jne
add
aam
xchg
push
es
jnp
cmp
add
rcrl
and
frstor
xorl
cmpsb
add
arpl
and
lret
lret
lahf
insl
in
fisttps
loop
test
rcr
arpl
push
bound
jge
aaa
stos
gs
push
xchg
rcrl
mov
sbb
jle
clc
mov
mov
scas
stos
ss
or
jge
xchg
loope
xchg
rclb
int
jge
outsl
dec
jge
xchg
or
cmpxchg
int
sub
leave
jno
aam
push
inc
mov
sbb
dec
pusha
sti
inc
int
jmp
std
rcr
shlb
pop
cmpsb
loop
push
cmp
fcmovnb
push
mov
cmpsb
ljmp
push
sbb
push
ficoms
mov
xchg
push
aas
cmp
xor
dec
outsl
out
mov
cmp
mov
in
clc
xor
inc
stc
int
mov
or
cmpsb
mov
pushf
mov
xor
pop
jmp
sti
icebp
repnz
xchg
xor
jle
rep
inc
and
sbb
sbb
loop
xchg
jl
lret
mov
fwait
xchg
loopne
mov
les
sbb
xor
rcll
cli
lret
lock
je
jo
lea
inc
inc
leave
or
mov
je
bound
stos
fldl
dec
into
mov
leave
or
pop
pop
leave
mov
popa
sub
outsb
inc
push
sub
outsb
pop
pop
scas
clc
pusha
add
sub
adcb
push
scas
movl
jge
int
and
pop
pop
fcomi
jg
sub
cmpsl
cmp
loopne
xor
mov
inc
out
dec
jl
sbb
in
push
ds
das
and
lods
ljmp
pop
cwtl
outsb
test
inc
push
xchg
xor
ljmp
xor
and
fdivrs
je
int
pop
ss
ja
jb
xchg
icebp
fidivs
das
stc
test
enter
dec
mov
lahf
repz
and
lock
push
pop
mov
inc
inc
insl
clc
cltd
lahf
ficomps
push
loop
jl
imul
fcoml
fistl
fisttpll
lea
mov
loopne
inc
push
push
mov
mov
andl
xchg
insb
arpl
mov
or
mov
sub
aaa
movsl
cmpsl
mov
push
push
in
add
push
add
sub
int
adc
cmp
rcr
sbb
sbb
ljmp
jecxz
mov
jle
sub
sahf
ficoms
mov
in
xor
mov
sarb
jnp
loop
scas
stc
fs
lret
ja
int3
dec
pop
inc
stos
inc
mov
add
xchg
stos
outsb
jle
repnz
loope
sbb
jp
sub
lret
or
out
insb
push
push
jbe
pop
mov
stos
jecxz
in
sub
inc
js
lock
pop
icebp
aad
mov
mov
add
push
test
adc
sbb
fnsave
imul
add
cltd
push
je
and
xor
das
cwtl
ja
mov
repnz
jmp
adc
mov
lods
call
xor
ja
dec
out
sbb
jecxz
mov
cmp
inc
fistpl
pop
or
scas
add
xor
xlat
test
lods
cltd
dec
ds
mov
das
push
push
pop
xchg
jbe
addr16
xor
pop
or
aas
into
pop
and
inc
iret
cmp
int3
or
bound
push
add
inc
mov
dec
test
call
fnstcw
xor
cltd
nop
jne
jns
pop
fdivr
mov
cld
aad
jae
cmp
addr16
pop
fcoms
sbb
fimuls
jns
mov
addr16
leave
arpl
lahf
mov
int3
dec
into
cmp
testb
lcall
push
fsubl
clc
or
and
xchg
in
xrelease
jno
mov
loope
inc
cmp
int3
int3
push
rcrb
or
mov
mov
xchg
in
out
aas
mov
cmc
pop
in
lods
lea
mov
cli
mov
and
push
xchg
xlat
jb
imul
adc
in
mov
outsb
mov
in
sbb
imul
mov
inc
mov
ficomps
leave
or
icebp
pop
jmp
push
xchg
mov
xor
pop
mov
dec
out
filds
adc
repz
jnp
mov
push
aaa
cmp
ss
push
cwtl
cmp
mov
clc
aam
pop
adc
cli
mov
mov
or
scas
fsubrl
cmc
ds
and
test
test
mov
ret
pusha
lahf
mov
pushf
dec
xchg
lcall
cmpsb
orb
stos
xor
sbb
mov
mov
rorl
sub
lcall
add
push
aaa
xchg
int
sub
or
mulb
add
repz
aaa
inc
outsl
leave
jbe
mov
push
ret
add
jp
icebp
mov
or
inc
aam
insl
pop
std
xor
jne
or
or
cmp
mov
mov
adc
jmp
mov
mov
mov
test
sub
loop
fisubrl
jp
int3
call
mov
push
push
jno
repz
in
cld
dec
test
pop
jne
cmc
shlb
xchg
enter
xchg
xor
leave
push
es
and
inc
sarl
pop
mov
sbb
ja
mov
addr16
fisttpll
sub
cmc
lret
ret
sub
bound
xor
pop
xchg
xor
pop
hlt
or
xchg
xor
stos
pop
dec
aaa
lahf
jg
cmp
andl
stos
dec
jno
add
pushf
movl
mov
icebp
enter
out
rolb
das
mov
std
add
mov
jl
mov
aam
ret
fmul
dec
lods
sub
call
mov
cmp
jnp
popa
daa
int
xor
adc
dec
xorl
setle
dec
sbb
push
jle
jo
add
or
sub
daa
stos
negl
into
stos
fisttps
popf
lret
stos
adc
dec
call
push
adc
xchg
imul
adc
mov
aaa
scas
roll
test
icebp
insl
jbe
sub
lods
mov
xchg
das
cli
xor
pop
inc
add
or
pop
jo
inc
sbb
xchg
push
cmp
sub
mov
test
out
or
roll
xor
out
sub
in
insl
loopne
mov
pop
mov
sub
cs
ja
gs
xor
es
or
xchg
test
mov
test
or
into
jns
and
adc
insl
sbb
pushl
cmp
lods
dec
fisubs
enter
xchg
push
pcmpeqb
test
lods
popa
pushf
dec
inc
daa
sub
pop
jp
cmpsb
inc
fcmove
sub
sub
repnz
fdivl
push
daa
mov
xchg
andb
cltd
inc
shll
rcll
roll
sbb
mov
push
test
dec
daa
lds
or
xchg
adc
mov
dec
cmp
cmc
and
scas
pop
fdivs
jge
inc
push
mov
cmpsl
push
cmp
add
pop
adc
cmpsb
cmp
or
xor
rorl
pusha
lcall
nop
lahf
sbb
jb
popa
lds
dec
scas
add
outsl
adc
mov
lds
out
pop
xor
call
cli
in
je
sbb
sub
rcll
pop
lret
xchg
ljmp
out
xchg
fwait
mov
arpl
stos
add
outsl
mov
inc
notl
loop
push
fcomi
loope
rclb
divl
cmp
loope
push
mov
enter
int
test
push
dec
loopne
loop
push
lret
aam
cmpsl
ror
xor
add
fldt
lods
add
ret
int
js
test
mov
cmp
inc
iret
adc
stos
dec
cmpsb
xchg
lea
repnz
sarl
ret
imul
push
mov
pop
ret
jns
push
mov
pop
pop
adc
and
repnz
pusha
xchg
std
push
bnd
loope
push
xchg
push
pop
decb
stos
fs
adc
xchg
inc
push
sbb
or
daa
cmp
lods
sub
jno
stc
stos
push
jp
add
test
enter
pop
insl
adc
sti
ja
repnz
pusha
outsb
std
jne
and
xor
loop
negl
xlat
in
dec
add
loopne
pop
sub
mov
push
mov
lods
out
and
xchg
pop
shl
jbe
sbb
insl
decb
test
xchg
ret
or
adc
and
push
push
lods
xrelease
ret
or
mov
inc
std
push
bnd
mull
in
adc
arpl
lods
ret
or
cmc
xor
scas
or
stos
xor
loop
shl
dec
push
ja
lret
sbb
mov
test
je
pop
push
lods
and
sub
push
mov
adc
sbb
mov
lods
lahf
adc
cmp
fwait
jno
or
iret
stos
loopne
sub
decl
pop
decb
test
out
mov
adc
cli
insl
sub
ljmp
aad
daa
pop
hlt
push
dec
or
pop
xchg
ja
jmp
out
jb
cmc
outsl
jbe
insl
or
in
lods
and
fdivp
cmp
mov
sarl
push
nop
pusha
imul
jo
daa
xchg
push
push
dec
jmp
fsubs
cld
cmp
lock
cmp
enter
pop
mov
outsb
clc
and
shl
mov
les
dec
test
pop
cmp
call
jno
inc
stos
push
mov
repnz
mov
and
inc
xor
pushf
adc
xchg
mov
mov
jp
and
aas
pmulhuw
fnsave
icebp
xor
repz
pop
jo
lods
or
adc
or
cwtl
std
mov
pop
sub
out
dec
mov
cld
and
test
pop
xor
ljmp
jmp
nop
mov
inc
cmc
out
rolb
adc
cmp
sbb
daa
pop
test
jae
mov
js
add
xor
loopew
loope
sub
popa
divl
push
js
xchg
sahf
jl
lcall
mov
dec
push
loop
enter
clc
pop
aas
push
out
lahf
repz
and
aaa
in
stos
stc
cwtl
cltd
cmp
cmp
mov
leave
mov
paddusw
inc
cli
mov
jmp
in
push
and
popf
stc
mov
outsb
xor
or
jmp
sub
sahf
xor
and
popa
dec
faddl
mov
int
in
jmp
imul
sbb
pop
jp
jnp
int3
xchg
pop
imul
daa
xlat
ds
test
cmp
fbstp
sub
test
push
xchg
jns
sahf
fistpl
add
popf
mov
mov
mov
das
test
cmp
mov
jnp
es
or
enter
int
popa
call
mov
push
loop
fcmove
icebp
loop
dec
sub
daa
inc
cmpsb
jg
xchg
hlt
push
shrl
daa
jne
scas
mov
xchg
push
cmp
lcall
bound
push
js
or
mov
jae
push
shr
push
or
add
push
popf
roll
and
xchg
push
sbb
cld
inc
sub
mov
les
int
lock
int
jg
imul
cmp
and
xchg
pop
dec
sarl
clc
cmp
fwait
dec
leave
push
outsl
imul
dec
mov
aas
mov
adc
push
insl
not
mov
dec
adcb
aad
mov
add
test
push
arpl
cmpsl
icebp
int
or
sub
ds
xchg
bound
sub
mov
loope
icebp
fcmovnb
xor
and
pop
pop
or
fs
stos
pop
dec
mov
adc
lahf
out
shll
ljmp
push
scas
inc
cwtl
cld
cmp
clc
movsl
in
cmp
call
sarb
jp
stc
and
iret
inc
fdivrl
test
jb
jns
in
scas
inc
mov
int
xlat
cmpsl
out
cltd
dec
or
ror
dec
shlb
cmp
adc
in
mov
pop
fst
cmp
lods
sbb
out
ret
ja
scas
ret
cmp
daa
and
ss
jae
dec
inc
xchg
cli
pop
mov
iret
cmc
dec
mov
adc
or
shl
orl
cltd
shll
pop
or
sbb
xor
jecxz
or
out
dec
push
mov
adc
ret
jnp
sahf
add
daa
lds
dec
cltd
xchg
stos
fidivl
out
aaa
xchg
rol
jecxz
sar
and
add
inc
cmc
icebp
xchg
test
push
dec
jnp
mov
mov
test
pusha
out
lret
xor
repnz
push
pop
jg
pop
mov
lods
xor
aas
pushf
inc
sub
scas
push
sbb
icebp
and
insl
inc
lret
inc
mov
insl
stos
lret
mov
rcrl
xor
imul
dec
sub
push
pop
aaa
push
cmp
jns
mov
rclb
repz
lret
dec
xor
cmp
mov
or
xchg
xchg
bound
push
dec
int
dec
shlb
xchg
lods
dec
and
add
imul
cld
int3
and
rorb
push
out
or
sbb
pop
sub
or
sub
insb
and
xor
pop
pop
negl
in
mov
lea
dec
cmpsl
mov
insl
fisttps
clc
addr16
imul
sarl
mov
or
mov
cmp
jmp
lods
fisttpl
dec
push
shrb
dec
in
rclb
cmp
push
ds
lret
lret
mov
in
loopne
ds
ret
and
add
sub
xlat
jb
les
lret
aad
pop
push
xchg
jmp
pop
dec
xchg
test
adc
push
rolb
xchg
add
enter
fwait
ret
mov
insb
mov
lds
or
inc
pop
loope
jmp
jbe
imul
mov
cmp
dec
repz
je
fnsave
dec
jns
gs
mov
loop
sti
inc
cmp
pop
in
ficoms
push
cmp
adc
push
lret
push
jp
push
imul
shl
arpl
jo
adc
divl
ja
dec
cmp
test
lret
mov
decl
in
rorl
lods
popa
xor
clc
jae
out
leave
push
imul
cli
pop
daa
pusha
addr16
add
mov
dec
cmc
shrb
cltd
pusha
pop
repnz
aaa
inc
xchg
mov
lret
scas
mov
jecxz
cmp
mov
sbb
xchg
mov
insl
js
mov
adc
cmpsl
fcmovb
dec
repnz
xchg
imul
icebp
imul
ucomiss
mov
sbb
fcompl
and
push
sbb
mov
xorl
pop
les
adc
inc
out
cmp
cmp
mov
sub
js
add
dec
frstor
stos
lahf
daa
outsb
ss
jp
icebp
sahf
ss
test
or
stc
push
push
cmp
sbb
ret
lcall
daa
mov
lods
stc
pop
arpl
pop
inc
cmp
inc
pop
xchg
pop
push
add
imul
imul
mov
push
inc
dec
ja
or
dec
mov
mov
mov
jbe
push
push
nop
mov
inc
std
mov
mov
xadd
das
push
dec
imul
inc
mov
pop
adc
mov
xor
add
or
stos
cmp
subb
int3
push
lods
sub
ljmp
or
sar
fisubrs
mov
mov
add
cmp
adc
mov
in
outsb
daa
add
outsl
hlt
mov
push
std
fiadds
push
roll
fidivs
xchg
not
cmpsl
inc
and
fdivs
mov
xlat
or
das
insl
cmc
lret
mov
lcall
inc
pop
insb
adc
lods
pop
xor
insb
out
ds
popa
push
xchg
insl
adc
sub
imul
lock
jno
pop
out
daa
xor
push
ja
aad
jmp
cmp
jecxz
lret
je,pt
daa
jbe
daa
sub
jg
xchg
dec
in
daa
xlat
xor
mov
lds
cwtl
shl
and
js
icebp
lock
mov
xor
mov
outsl
mov
cs
rol
packssdw
sub
pop
ss
inc
push
pusha
jns
xchg
xor
jnp
ficoml
aaa
into
lcall
push
pushf
sub
push
xchg
bound
in
push
fsubr
es
push
dec
sub
xor
rcl
cmp
jle
cli
dec
lea
jmp
fisubrl
ret
push
sahf
or
aaa
lret
lahf
xor
sar
mov
out
push
push
cmpl
push
add
xchg
aaa
jns
dec
pop
mov
cltd
aaa
movsl
and
sub
xlat
xchg
pop
sahf
dec
mov
and
xlat
icebp
xchg
dec
int3
pop
adcb
push
fisttps
sub
and
adc
jnp
aad
inc
inc
aam
clc
pushf
sub
loope
inc
mov
push
push
sarb
fisubrs
sbb
cmp
sbb
push
mov
mov
sub
pusha
aaa
or
fists
addr16
pop
packssdw
cli
js
add
xor
or
dec
cmp
cmp
test
imul
inc
out
xor
mov
int3
mov
pop
fbld
outsb
lidtl
mov
int3
or
dec
dec
icebp
test
rorb
pop
je
clc
jg
mov
std
dec
cmp
dec
iret
pop
mov
fnstsw
push
mov
adc
inc
shlb
dec
notl
push
and
loopne
pop
sbb
daa
push
sub
pop
sbb
lds
push
mov
add
cmp
lret
lcall
shrb
cmp
les
stos
push
add
dec
pop
fcmovnb
aaa
jb
loope
test
std
sub
jp
lds
test
insl
jmp
lret
ret
or
mov
call
xchg
cli
jns
and
stos
dec
testl
lds
dec
push
sub
mov
ja
imul
mov
jbe
clc
adc
out
imul
push
sbb
mov
imul
mov
pushf
inc
dec
mov
addr16
push
in
or
mov
cltd
xor
xchg
sub
lret
mov
adc
pop
xor
fidivrl
enter
mov
or
and
and
pop
popf
inc
js
mov
pop
lcall
cmp
mov
and
fcomps
adc
mov
test
orl
aas
daa
and
dec
push
mov
push
cmpsb
push
pusha
int3
scas
cli
jnp
or
cmp
inc
lret
push
jg
push
push
lret
pop
pop
mov
notb
xor
push
in
inc
nop
rcrb
pop
push
mov
cmp
adcl
loopne
xchg
sub
pop
call
nop
adc
and
iret
adc
push
jmp
call
cmp
mov
cmp
jge
inc
sub
lahf
mov
pop
add
inc
xchg
push
mov
push
or
insl
or
push
pop
push
mov
mov
or
call
xchg
cmp
xlat
mov
insl
in
jl
jno
jle
sbb
mov
sbb
scas
into
sbb
inc
fistpl
test
scas
cmp
jecxz
js
fists
push
dec
mov
sub
jns
stos
push
out
jno
es
lret
repz
into
inc
push
add
fwait
xchg
push
sub
xchg
sbb
mov
sbb
sbb
stos
mov
ss
inc
loope
jmp
and
outsl
sub
test
push
mov
xlat
sbb
aam
jb
and
clc
stos
rol
jp
hlt
int3
cmp
pop
rolb
push
repnz
mov
outsb
clc
push
mov
push
popf
adc
test
mov
stos
or
ss
xchg
sub
das
fcmovne
mov
jle
pushf
adc
sbb
cmp
push
orl
fisttpl
test
sub
jp
iret
movsl
inc
xchg
lods
loopne
mov
lods
sub
push
jp
mov
xchg
jmp
out
decb
test
xchg
ret
sub
push
dec
stos
sub
fsubs
sbb
xchg
mov
daa
sbb
lods
sub
push
enter
mov
call
pop
loop
push
les
cli
fsubrs
cmc
bound
lea
test
stc
fsts
cmp
mov
cmpsb
sbb
mov
dec
stos
cmp
xor
imul
ss
ja
lret
push
mov
adc
cmpsl
cmp
mov
cmpsb
testb
push
stc
cmp
push
fs
dec
fld
ja
les
pop
insb
aad
movsb
in
sbbl
repnz
nop
sti
xor
repz
out
xor
push
sti
adc
fcoms
in
sbb
mull
mov
or
mov
cmp
iret
mov
pop
psubq
ret
das
push
shll
pushl
pushf
pop
lods
jno
xchg
clc
pushf
insb
test
or
insl
push
or
sarl
call
mov
insb
cltd
mov
movsl
mov
cmp
cmp
popl
icebp
mov
mov
ljmp
ret
fcmovne
xor
loopne
xor
enter
icebp
lods
mov
xor
dec
jne
sahf
mov
btr
inc
iret
mov
inc
mov
lods
xor
dec
ret
gs
xor
enter
pop
insl
adc
xor
cmp
mov
dec
sub
dec
idivl
addr16
mov
pop
push
dec
rcrl
cmp
or
cmpsl
mov
mov
lret
xchg
shrl
dec
les
bound
out
add
mov
cmpsb
imul
hlt
push
stc
fwait
mov
cmp
dec
imulb
mov
dec
push
into
cld
in
fwait
sbbl
and
cmp
jae
test
pop
mov
fisubrl
fldl2e
ss
ret
inc
imul
aaa
pushw
loop
and
or
ss
int
rcl
repnz
sub
psubw
test
leave
aaa
test
repz
sub
mov
push
mov
xchg
xlat
ret
mov
hlt
xchg
inc
push
jae
and
bound
cmc
push
mov
push
mov
xor
pop
xor
shll
inc
dec
mov
add
repz
lret
mov
sub
repnz
test
mov
stos
mov
mov
test
sbb
fwait
andl
or
dec
jmp
imul
mov
adc
rcrb
std
sub
mov
mov
mov
add
mov
dec
add
mov
fbld
testl
mov
out
pushf
add
clc
fidivrl
test
inc
jns
pop
into
imul
cli
mov
rorl
mov
fdiv
xchg
or
shrb
push
add
inc
ljmp
inc
xor
and
movb
outsl
push
clc
ss
jge
in
movsb
test
pop
arpl
push
jp,pt
push
mul
aad
xor
lock
dec
mov
push
jbe
fs
ss
jns
xchg
lods
fwait
or
ret
mov
adc
mov
pop
out
nop
push
xor
loopne
xor
enter
icebp
test
push
xchg
call
mov
and
ja
jnp
ret
test
stos
push
and
aas
sahf
jb
adc
mov
or
pop
mov
aad
pop
cltd
loopne
jge
xchg
cwtl
xchg
ja
call
pop
xor
cmp
fisubrl
les
push
cmp
ss
dec
adc
fcoml
xor
dec
add
jae
mov
fstpt
mov
js
cmp
test
push
stc
and
sub
fdivp
sub
mov
jl
shlb
xor
pop
push
sahf
adc
rorl
mov
fs
adcb
lret
jb
arpl
fistpl
sub
pop
mov
adc
inc
add
sahf
sbb
inc
adc
ss
adc
test
mov
dec
xchg
rolb
imul
ss
sbb
sbb
sub
scas
test
test
and
or
imul
in
mov
sub
inc
add
movsl
xor
out
into
scas
dec
push
popa
rcll
iret
inc
inc
daa
pop
mov
test
test
mov
jle
or
pop
scas
loopne
popf
inc
insl
or
call
jge
mov
cmp
mov
jle
adc
mov
pop
scas
push
or
movsb
sub
push
iret
pop
pusha
gs
inc
stos
adc
stos
pop
popa
test
shr
imul
xor
and
bound
ret
std
aaa
scas
cwtl
pop
mov
adc
and
lods
in
fwait
leave
add
shlb
mov
outsb
sub
sub
das
mov
cltd
aaa
aas
cmp
fs
or
mov
daa
xchg
mov
arpl
dec
push
mov
les
imul
push
or
and
scas
xor
cltd
or
dec
or
ss
jl
cs
jnp
ret
outsb
sub
or
mov
jle
dec
into
inc
xor
popf
outsb
ss
jno
xlat
push
mov
fidivrs
jge
fisubrl
xor
test
xchg
push
insl
es
push
mov
xlat
xor
sbb
outsl
cs
mov
ret
mov
add
cmc
sarb
addl
fwait
aaa
in
mov
mov
js
add
faddl
loop
ss
jae
mov
xchg
adcb
add
std
cmc
mov
mov
rorb
xor
lds
lret
mov
bound
push
hlt
push
pop
test
mov
or
arpl
mov
mov
push
repz
xchg
xchg
mov
gs
mov
xor
loop
and
cmp
adc
mov
loope
fdivrl
add
jge
subb
fisubrs
cmp
inc
inc
dec
out
mov
adc
mov
mov
push
inc
mov
cmpsb
lock
adc
cs
jmp
shlb
lods
test
xchg
aad
cmp
mov
repnz
mov
push
ds
rcrb
dec
iret
push
mov
pop
scas
outsb
mov
cld
stc
add
lahf
fsubp
int
inc
arpl
lods
bound
jmp
outsl
cwtl
ds
aaa
imul
arpl
cmpsl
and
dec
sub
mov
inc
aam
inc
daa
xor
add
imul
cltd
or
test
xor
sbb
sub
es
out
cld
mov
insl
or
mov
jbe
jecxz
scas
sbb
mov
cltd
daa
sbb
lea
push
mov
iret
lods
push
add
jno
inc
fcoml
add
or
sahf
xchg
xor
out
xor
fildl
pop
jns
pusha
push
or
or
xchg
gs
test
push
mov
shr
hlt
and
sub
cltd
insb
fcmovnb
subl
push
mov
cmpsb
push
adc
dec
xchg
sub
ret
cld
aas
sbb
ret
mov
adc
mov
sahf
pop
repnz
test
xchg
andl
test
sbb
add
addl
mov
push
sbb
add
imul
stc
inc
pop
stos
and
movsl
daa
jge
xchg
adc
jg
in
mov
jle
push
int3
mov
or
push
cmp
lds
jno
lcall
fdivrl
dec
mov
hlt
or
push
pop
popf
jle
pop
int3
mov
pop
lds
xor
lock
into
cmp
cmp
adc
add
mov
mov
rorb
sub
or
movl
clc
and
or
fcmovnu
js
ret
xor
jmp
push
cmp
stos
sbb
nop
fstl
add
or
stos
jl
aaa
clc
jle
rolb
pop
fwait
stos
inc
pushf
cmp
lahf
js
ret
aam
xchg
add
test
fsubr
loopne
cmovb
or
into
mov
mov
or
in
or
ret
jbe
les
fdiv
imul
push
out
jae
jp
mov
mov
xor
and
push
xchg
xchg
stc
or
js
mov
js
lret
imul
add
jle
add
mov
add
add
xchg
pushf
fwait
cmp
cltd
jl
jbe
jp
add
aaa
sbb
dec
fnstcw
lret
ds
cwtl
sbb
add
jl
mov
int3
mov
pop
scas
movsb
add
inc
icebp
add
js
rclb
fwait
dec
xor
mov
cmp
add
push
jbe
jle
add
mov
pop
scas
repz
js
ja
stos
inc
les
ja
cmp
ss
mov
jne
repnz
idivl
xor
push
repz
jno
push
pop
into
insb
icebp
xchg
xlat
cltd
std
push
ljmp
repnz
xor
inc
aas
lods
cmp
cltd
cmp
xchg
mov
mov
repz
int3
push
xchg
fildl
or
inc
rclb
scas
sbbb
dec
inc
outsl
shlb
negl
mov
xor
push
mov
pop
scas
aas
sti
mov
jno
adc
je
aaa
push
jae
stos
xchg
stos
test
or
dec
add
push
xor
sbb
imul
adc
scas
cmp
mov
jge
xchg
sarl
mov
sti
idivl
xor
push
pushf
nop
sarb
xlat
or
push
ljmp
repnz
daa
clc
mull
xor
lret
mov
out
adc
mov
cmp
mov
cmc
push
lods
lds
icebp
cld
mov
out
int
jbe
lret
int3
sub
icebp
xchg
xlat
and
stc
jno
pop
stc
cli
aam
adc
jnp
adc
mov
push
xor
stc
mov
mov
dec
mov
inc
aam
test
or
into
dec
dec
push
iret
insl
icebp
stos
pop
adc
out
lret
in
adc
jg
fdivr
popf
mov
cmp
test
mov
nop
jle
test
jae
pop
scas
and
sahf
stos
and
adc
adc
jnp
jno
adc
mov
cmc
test
mov
mov
or
jbe
lret
pop
jno
cmc
aad
sarb
cmc
push
add
cmc
repnz
testl
sub
mov
push
push
adc
mov
loop
dec
adc
clc
jae
mov
outsb
adc
out
xor
push
push
lret
xchg
xor
icebp
hlt
idivl
daa
test
sub
int3
sub
shlb
divb
adc
repnz
jno
push
mov
push
ret
out
movsl
pusha
sar
mov
out
push
mov
xchg
repnz
arpl
mov
cltd
push
mov
roll
adc
jns
mov
ds
cli
mov
sub
mov
mov
mov
inc
mov
jmp
mov
cltd
repnz
cmp
mov
mov
xor
imul
lahf
cmpsb
scas
andl
pop
psubw
movsl
stos
loop
lret
fsts
inc
xor
push
adc
dec
jno
sbb
pop
int3
lea
insb
mov
clc
mov
push
pop
test
ljmp
out
xor
push
adc
outsb
outsl
jbe
in
sub
jns
xor
lods
sub
jo
push
stos
push
bound
aam
imul
push
and
inc
das
push
scas
cmpsb
xchg
dec
movsl
cs
xor
movb
ljmp
mov
stos
or
andb
pusha
dec
std
jne
imul
insl
and
lret
shrb
sub
insb
std
shlb
in
rcrb
fisttps
mov
pop
out
mov
adc
rcl
lret
push
adc
clc
aaa
push
fdivs
or
mov
mov
addr16
push
jbe
inc
sar
cltd
pop
stos
and
icebp
repnz
out
imul
daa
mov
or
jae
push
xchg
push
mov
mov
mov
jge
xlat
push
pop
mov
int3
adc
daa
sub
jae
lods
add
xor
test
or
mov
sub
das
loope
les
rcl
nop
push
outsl
xlat
push
sti
and
push
out
jae
adc
cltd
pop
mov
lods
push
or
inc
ret
test
pop
lods
push
pop
movnti
inc
fbstp
and
mov
outsl
adc
ds
fimull
frstor
gs
fisubrl
lods
popl
leave
inc
or
sub
mov
ja
call
sbb
js
xor
aaa
jp
jmp
push
movl
mov
cmp
lcall
lret
push
and
adc
aad
pop
jg
mov
pop
xchg
lods
movl
xchg
xchg
ja
jmp
out
decl
test
and
cmp
xor
sahf
pop
mov
pop
insl
lods
repz
data16
push
lds
add
lock
jbe
aad
mov
test
sbb
cmp
dec
cmpsb
mov
cs
ljmp
test
or
stos
cwtl
mov
pop
mov
shlb
insl
or
shlb
xor
frstor
int3
scas
push
pop
je
cmp
and
ja
call
sbb
inc
xor
cmp
dec
jns
fisubrs
mov
mov
pop
rcrl
stc
icebp
mov
sbb
push
subb
inc
lods
sub
sbb
fneni(8087
dec
jae
movsl
jmp
leave
adc
inc
shl
es
call
mov
out
mov
fwait
stos
stc
stos
add
sub
test
mov
lahf
divb
jl
xchg
dec
mov
push
adcl
fistpll
mov
push
cld
pop
jp
mov
xor
mov
mov
jmp
push
pusha
mov
sarl
aad
inc
mov
sub
insb
popf
sarb
cmp
sti
ret
lods
sub
pop
and
xor
or
stos
into
inc
fwait
subl
push
pop
pop
adc
dec
js
cmp
push
mov
loope
push
add
inc
test
and
mov
insb
jno
int
loopne
into
mov
jecxz
sbb
xor
mov
ja
cmp
sarb
int3
pop
lock
lea
pop
cmp
cmp
mov
pusha
repnz
aaa
mov
mov
xchg
stos
jns
and
or
mov
fcompl
rcrb
xchg
lret
aam
xor
dec
sub
lea
mov
and
mov
push
dec
and
add
icebp
popa
test
jge
out
jb
lahf
imul
test
outsb
fsubrl
movsl
sub
cmpsl
sub
inc
cmp
cmpsl
mov
sbb
out
aaa
fnstcw
mov
sub
andb
out
mov
int
add
cmp
xchg
lcall
xchg
jge
add
popa
mov
or
out
pop
fadd
bound
jae
pop
sbb
in
sbb
ss
cwtl
push
daa
lods
pop
insb
aaa
lcall
mov
xchg
jne
push
sbb
xorl
xor
cmp
shl
push
sbb
push
or
in
mov
push
jmp
daa
mov
mov
push
dec
sbb
ljmp
sub
movsb
addr16
xor
cltd
sbb
incb
pop
push
pop
adcb
pop
scas
sub
pushf
inc
jns
mov
xor
inc
jl
pop
jp
shll
cli
aaa
rcrl
sarb
stos
inc
bound
sarb
fdivrl
daa
mov
sti
jae
add
mov
jnp
push
jmp
jle
in
mov
pop
scas
enter
xchg
out
ret
sbb
scas
lock
push
data16
dec
in
lea
fwait
mov
cmp
adc
xchg
dec
mov
jl
inc
jnp
fs
mov
mov
pop
cmp
mov
mov
mov
sbb
and
out
mov
in
scas
es
inc
mov
sahf
loope
xor
cs
into
sbb
add
negb
or
popa
loope
pop
or
ljmp
pop
or
bound
lret
adc
mov
push
jmp
cmc
adc
push
icebp
js
popf
fcmovne
data16
or
push
dec
and
ss
jns
inc
cwtl
jns
insl
add
int3
mov
pop
scas
inc
jecxz
inc
outsl
fistps
dec
sub
or
pop
cli
aaa
rclb
rcr
push
cmp
add
insl
out
js
or
jns
xchg
fists
adc
cli
aaa
cli
push
cmp
xchg
pop
leave
fstpt
add
stc
cli
dec
pop
inc
ds
cmp
cmp
pop
ret
in
rcrb
lret
daa
xchg
jns
insl
push
jns
push
jmp
jle
fmulp
mov
pop
scas
push
mov
push
cmp
jne
insl
jbe
push
shll
xor
and
in
push
jbe
jbe
push
inc
popf
jecxz
cmp
pusha
pop
push
out
jae
push
adc
mov
je
test
sbb
cld
cs
push
iret
hlt
push
dec
testb
sbb
fistl
fnstenv
push
jb
lret
push
adc
loope
nop
dec
es
lods
loop
aad
xor
icebp
sahf
push
movsb
sbb
xor
popf
aam
mov
adc
push
insb
pop
fimull
dec
adc
mov
outsl
lock
push
hlt
sbb
stc
push
jle
jo
subb
es
push
sbb
outsb
notb
dec
jb
icebp
lahf
inc
xor
jbe
cmp
popa
xchg
into
js
dec
loop
inc
aas
or
dec
fs
dec
dec
mov
pop
dec
mov
xor
repnz
pop
push
imul
push
jl
push
test
repz
mov
dec
inc
jo
lea
mov
and
mov
push
cmc
mov
decb
sub
repz
xchg
mov
xchg
ss
dec
jle
mov
add
das
pop
outsl
or
push
and
jbe
dec
mov
inc
jmp
iret
mov
repnz
dec
fsubs
mov
int3
mov
jo
iret
loope
in
adc
aas
sub
dec
or
inc
xor
aas
jge
adc
ficoms
rcll
xchg
add
push
pop
or
dec
stos
adc
dec
mov
jmp
mov
push
dec
xor
mov
dec
flds
adc
add
mov
hlt
movsb
pop
inc
int
inc
leave
icebp
das
fsubrs
popf
and
pop
inc
push
outsb
das
rcll
add
sub
pop
dec
negb
seta
and
cmpsb
jae
into
dec
jno
xlat
out
jns
fistps
mov
pop
mov
cmpsb
addr16
inc
inc
mov
mov
pop
icebp
dec
dec
cmp
popf
jmp
cmp
mov
inc
dec
xor
mov
adcl
out
daa
cmp
data16
pop
in
and
aaa
scas
xchg
outsb
pop
ret
sub
out
mov
test
out
sub
daa
dec
jns
push
dec
jo
ds
inc
test
cs
int3
arpl
ss
iret
xor
imul
jle
ja
inc
xor
sub
mov
jg
xor
mov
insl
out
gs
aaa
rorl
shlb
dec
xor
mov
xchg
fistpll
xor
hlt
push
inc
cmc
push
mov
sbb
sbb
mov
inc
or
xlat
push
leave
cmc
arpl
jmp
or
or
stos
das
fbstp
sbb
sub
xchg
icebp
cmp
call
jp
push
inc
or
lret
xchg
bound
test
aas
rolb
push
stc
jnp
cmpl
push
clc
or
cmpsl
inc
and
or
and
jnp
jo
outsl
dec
fwait
insl
push
sbb
mov
aam
push
test
and
mov
or
adc
mov
insb
aaa
mov
lods
insl
pop
outsb
icebp
ficompl
lods
and
xchg
outsb
add
xchg
dec
movsl
jnp
xor
insb
scas
dec
jl
sub
sub
int
adc
mov
sahf
sub
mov
es
mov
and
push
sbb
loop
cmpsl
sahf
sbb
data16
add
ds
mov
ds
and
cmp
or
mov
lcall
ret
sub
adc
jae
jo
jb
scas
pop
es
insb
aaa
cmp
mov
lods
insl
addr16
xor
int
add
push
imul
mov
icebp
mov
addr16
inc
test
push
repz
jo
push
popa
bswap
add
adc
push
divb
jmp
mov
push
lcall
call
fldt
popa
push
insb
aaa
adc
pop
lods
sahf
lods
shll
and
test
pop
repnz
icebp
xor
add
and
dec
xor
pop
int
jle
scas
xor
std
dec
fnstsw
daa
leave
pop
mov
sbb
es
testb
lods
push
mov
xchg
pop
ds
xor
sahf
fbld
sbb
inc
daa
aad
sbb
loope
out
xor
adc
xor
adc
push
xor
mov
aas
pop
inc
out
ret
out
adc
push
xor
mov
pop
cs
scas
pop
and
insl
push
insb
sahf
ds
push
sub
mov
inc
push
shrl
aaa
mov
cltd
test
vcvtss2sd
inc
test
mov
jbe
movsl
lcall
xchg
lds
enter
fisttps
dec
fs
pop
aaa
pushf
and
scas
and
pop
dec
iret
inc
add
aaa
stos
lahf
scas
inc
sbb
inc
jmp
adc
mov
mov
mov
and
jmp
cmpsb
mov
andb
inc
inc
out
daa
xor
ffreep
adc
push
stos
fucomp
xlat
xor
xor
cmpsb
gs
sbb
addb
inc
pop
pop
push
enter
jns
outsl
sbb
xchg
push
testb
push
in
out
addr16
sahf
add
fists
das
cmp
push
lahf
movsl
mov
and
and
push
sub
jp
inc
icebp
push
je
rcl
rclb
pop
in
adc
mov
add
and
mov
or
out
mov
je
out
mov
test
cmpsb
or
fadds
xchg
mov
add
addr16
add
mov
lods
inc
das
xchg
cld
dec
mov
daa
pop
cmp
rol
out
popa
mov
aas
add
push
stos
mov
or
mov
aad
dec
aam
in
leave
in
into
sarb
iret
mov
xor
bound
pop
inc
inc
dec
dec
xor
mov
data16
lahf
mov
jns
inc
loopne
dec
cmpsl
mov
mov
pminub
add
mov
sbb
mov
stc
js
nop
addr16
int
cli
adc
popl
int
and
fwait
push
xchg
or
inc
cmc
dec
inc
sarl
stc
das
outsb
add
fistpl
mov
loop
pop
cmpsb
mov
leave
dec
cmpsl
mov
xlat
out
mov
rorl
dec
pusha
lea
js
and
lret
mov
inc
clc
and
adc
ficompl
push
shll
ja
pop
out
push
pop
sub
clc
jecxz
divb
loopne
mov
orb
inc
xor
test
movsl
movsl
xchg
out
out
pop
pop
inc
xor
jecxz
sti
sub
or
adc
pop
jno
lods
lahf
push
data16
dec
inc
insb
dec
bound
push
mov
adc
int3
mov
inc
push
jns
dec
std
test
pusha
imul
test
movsb
loopne
mov
xchg
movb
stos
push
jmp
rorb
add
xchg
mov
jo
imul
aam
inc
inc
add
std
add
roll
fmull
fcomps
aas
test
mov
lods
xor
mov
push
dec
outsb
into
cmc
pop
iret
jo
and
mov
iret
sbb
cmp
pop
dec
cmp
push
arpl
arpl
lcall
inc
cmp
sahf
adc
cmp
push
test
push
xor
xor
mov
push
dec
outsb
into
cmc
sbb
xchg
sbb
mov
into
std
mov
cmp
dec
inc
cmp
movsb
xchg
push
push
xor
xor
and
adc
cli
imul
inc
xchg
addl
subb
vcvtss2sd
mov
jno
gs
repz
lret
push
or
dec
lgs
pop
mov
mov
test
lds
call
xlat
xor
aam
pop
push
xlat
cmp
clc
jnp
cmp
adc
sub
push
jnp
divl
outsb
int3
repnz
daa
iret
testl
ficoml
add
pusha
jle
lock
movsb
xlat
jg
in
ss
dec
xchg
lcall
mov
aaa
push
or
aaa
psubsw
shl
inc
cmp
jae
cmp
data16
int
jle
into
lret
mov
jnp
mov
sub
loope
notl
stos
push
cli
jno
lret
jb
mov
repnz
pushl
push
aas
cli
aaa
mov
cmp
cmp
sub
mov
cli
sbb
ljmp
je
mov
push
js
pop
es
jae
aas
adc
mov
popa
xor
xor
adc
push
dec
int3
mov
lret
daa
or
js
xor
fists
imul
push
adc
shrb
stos
inc
adc
insl
popf
pop
jl
stos
pop
jle
lret
mov
pop
scas
cmpsl
leave
pushf
inc
aam
test
cmp
dec
mul
push
jp
pop
or
ja
xor
fbld
imul
lret
pushf
imul
sub
pop
xlat
push
push
ljmp
repnz
daa
cld
mov
ret
je
dec
adc
push
or
xchg
das
fcmovnb
cs
icebp
je
jge
int3
push
out
jae
cmp
push
cmp
testl
pop
addr16
lock
sub
push
push
push
xor
and
cmpsl
sti
push
sarl
sbb
ret
xchg
scas
fisubrs
mov
push
stos
jns
inc
mov
xor
cmp
xlat
pop
xor
icebp
pop
shlb
arpl
pusha
test
jae
insb
lods
mov
fdiv
imul
into
inc
lods
fisttpl
jno
jmp
xchg
stc
xor
ret
stc
iret
push
clc
movsb
fdiv
in
out
jl
mov
jle
ret
lret
aad
xlat
into
movsb
cld
add
int3
mov
adc
jge
inc
mov
fwait
jns
adc
mov
stos
push
xchg
inc
xor
cmp
fnstcw
fs
daa
ret
idivl
jle
mov
loop
inc
icebp
pop
jmp
repz
sbb
hlt
in
pop
or
loope
rcl
lret
mov
mov
stos
mov
push
inc
shl
mov
dec
inc
lret
and
pop
lret
inc
lret
fsts
push
pop
adc
mov
ret
pusha
out
cmp
jae
aaa
adc
xchg
cmp
sar
fcmovu
push
pop
stc
xchg
jnp
dec
mov
jle
hlt
jp
out
sub
lret
jmp
inc
inc
inc
add
adc
icebp
mov
into
xchg
cmc
add
mov
jl
pop
dec
loope
clc
mov
neg
push
pop
negb
jne
pop
jmp
xlat
loopne
push
ljmp
out
fisttpll
sahf
pop
xor
xor
addps
push
stc
push
push
inc
add
in
insl
or
mov
xor
pop
or
or
ret
popf
inc
mov
jl
mov
neg
pop
adc
lcall
mov
push
xlat
cltd
mov
jno
mov
repnz
test
cltd
fisttpl
fidivl
lret
popf
outsl
push
mov
movsl
arpl
pop
xor
sub
fiadds
fldcw
out
fwait
push
sbb
dec
push
add
sbb
repnz
jno
cmc
sbb
rcrb
icebp
push
xlat
insb
mov
jno
inc
mov
adc
pop
fcom
ss
mov
pop
icebp
mov
mov
xor
mov
mov
imul
dec
insl
fisttps
int3
sbb
pop
mov
adc
inc
shl
outsb
push
inc
mov
shlb
cli
aaa
pusha
xor
shrb
mov
push
cmp
mov
pop
insl
push
jmp
sbb
call
sbb
jbe
je
inc
xor
icebp
and
jp
ljmp
push
ffreep
or
xchg
mov
adc
or
or
shlb
icebp
push
xlat
std
mov
jno
mov
repnz
lock
push
dec
hlt
pop
sbb
aaa
cmp
sarb
dec
out
mov
in
add
test
pop
dec
sbb
cwtl
add
inc
cmp
insl
xor
mov
push
fidivs
lea
aad
push
push
adc
aam
sub
pop
sbb
pusha
inc
xor
jae
das
adc
mov
stos
inc
fisttpl
popa
bound
sbb
jp
sbb
push
mov
fidivl
push
aam
aaa
sti
mov
xchg
dec
mov
mov
or
adc
out
dec
sub
jl
pop
sub
hlt
insb
mov
in
push
cmp
push
jl
inc
push
jle
mov
mov
mov
scas
and
sahf
ds
sub
into
fdiv
add
das
xor
cmp
mov
push
jl
mov
lret
mov
pushf
inc
xchg
test
outsb
out
add
fdivrl
jbe
test
fcmovne
push
je,pt
dec
enter
das
out
mov
dec
and
push
xor
cltd
dec
rcr
icebp
dec
xlat
mov
jno
ret
mov
icebp
daa
mov
icebp
mov
push
cwtl
ljmp
cli
pop
ret
shl
push
pop
fiadds
cmp
jnp
insb
add
push
xchg
mov
pop
push
push
out
jae
sub
mov
mov
test
icebp
dec
jno
mov
aad
mov
or
ficoml
ljmp
sti
clc
xor
xor
stos
cmpsb
inc
or
adc
sub
cmp
pop
xor
popa
mov
push
aaa
insl
or
mov
mov
mov
mov
lods
sbb
inc
ret
dec
cmp
cmpsl
mov
cmpsb
push
les
sarl
sti
cmp
cmp
stos
cltd
cmp
fildll
jno
fidivl
enter
xor
pushf
xchg
or
in
mov
cmp
pop
sbb
pop
jno
call
or
push
popa
aas
mov
rcrb
and
sub
and
dec
cli
fidivrs
push
mov
cmp
std
lds
stc
and
cmp
repnz
cmp
ret
sub
push
cli
cmp
push
pushf
ret
jmp
stos
xchg
and
js
dec
mov
mov
add
push
sub
cmpsl
popa
jle
jl
pop
outsb
xchg
jg
scas
sbb
imul
aad
sub
clc
fwait
jns
pop
pusha
xchg
lods
fistpl
xlat
outsl
in
insb
in
shrb
aaa
xor
imulb
mov
in
stos
inc
jne
test
lret
push
cmpb
dec
cld
add
or
sbb
bound
push
xor
idivl
mov
cmpsb
out
lods
mov
fsubr
outsl
sub
shrl
sub
insb
mov
pop
sub
shrb
repnz
hlt
lods
add
int
cmc
pop
jmp
imul
xor
stc
or
xor
rep
sub
add
inc
out
mov
cs
sub
xchg
xchg
cli
cmp
sbb
ss
mov
fidivs
dec
inc
test
out
jne
pop
pop
mov
pop
mov
jg
lret
test
cmpsl
or
inc
xorl
dec
scas
push
test
pop
mov
lods
mov
mov
lret
pop
loopne
xor
enter
push
and
adc
das
clc
nop
repnz
rcl
lret
stos
pop
sbb
sub
adc
repnz
pusha
xchg
movsl
bound
sbb
js
cmp
pop
imul
popa
mov
leave
fstps
je
sbb
mov
add
inc
dec
in
or
mov
lea
xchg
cmp
lahf
mov
add
adc
arpl
lret
mov
cmp
or
mov
lea
pop
mov
aas
xor
iret
loop
inc
fdivl
sti
push
sub
pop
jmp
outsb
popa
mov
popa
fistl
dec
inc
cmp
cmp
lods
pop
adc
lret
ja
cmp
and
sub
push
cmc
add
int
ret
xor
inc
outsb
dec
pop
xor
jecxz
js
notl
cmp
hlt
in
js
scas
cmc
jne
dec
cmp
push
jle
iret
stos
cmpsb
fs
inc
out
add
pushf
lods
inc
daa
inc
leave
sahf
inc
push
outsl
lock
xchg
icebp
mov
pop
pop
outsb
jp
inc
loopne
or
cmpsl
pop
sbb
push
pop
adc
data16
idiv
xor
cs
ds
mov
mov
fcomps
or
mov
fs
loop
cmp
jmp
ljmp
jecxz
xchg
repz
push
push
jne
mov
pop
call
xchg
adc
shrb
mov
hlt
mulb
movsb
popa
mov
loopne
out
sbb
pushf
outsb
inc
icebp
in
arpl
mov
lret
sub
xchg
aam
pop
aam
pop
cmp
mov
push
adc
lds
cld
jg
lret
xchg
clc
add
mov
psubusb
add
xor
adc
push
movsb
aaa
inc
testl
aas
inc
outsl
inc
hlt
aam
divb
daa
fldl
arpl
fistl
stos
or
outsb
out
repz
lcall
imul
fwait
inc
aas
xchg
outsb
cld
xor
sbb
add
mov
jns
stc
inc
mov
test
addr16
jp
mov
mov
jno
cmp
cmp
inc
arpl
lock
adc
push
fidivrl
mov
push
xchg
mov
idivb
ret
or
repnz
cmc
mov
pop
lret
hlt
les
jb
into
cmpsl
xchg
pop
aaa
lea
push
pop
sti
xor
pop
sbb
inc
pop
aaa
test
pop
push
pop
lock
pop
out
pop
repz
fsub
mov
shlb
push
xor
xlat
into
mov
divb
shlb
ret
cmc
push
movsb
mov
jmp
jno
sbb
cmp
repnz
ss
xor
scas
jno
mov
cli
jecxz
test
lret
ret
out
xor
cmp
mov
jl
popa
push
adc
loope
jb
xchg
arpl
sub
jae
imul
iret
jb
mov
pop
adc
fidivrl
daa
stc
push
push
mov
mov
dec
push
pop
stos
or
mov
xlat
mov
loop
mov
icebp
pop
inc
dec
call
cmp
cmp
bnd
stc
movups
add
inc
lret
push
cmp
shrl
scas
icebp
in
cmp
rorb
rol
andl
mov
lcall
mov
sti
jbe
imul
xchg
pop
cmp
push
inc
xor
sti
cmp
jmp
lods
stc
repz
in
xor
and
inc
xchg
cwtl
dec
dec
bound
ljmp
adc
mov
sar
ss
out
pop
pushl
pop
dec
ss
inc
dec
mov
jb
out
icebp
loopne
imul
stos
and
in
cmp
shll
in
js
or
mov
lret
mov
addr16
fisttpl
outsb
dec
fsubr
test
xor
inc
notb
movsl
push
pop
aas
push
xor
rcr
scas
add
fdiv
pusha
add
js
add
not
addl
jmp
jmp
lcall
mov
inc
push
cmp
xchg
push
xor
inc
dec
cmp
xor
aas
inc
xor
cli
cmovne
mov
jne
fwait
push
shl
sbb
in
add
and
xchg
loop
mov
adc
std
mov
cmp
cmpsl
test
mov
stos
test
pop
xor
xchg
les
xorb
enter
or
loop
dec
into
mov
aas
cmp
mov
out
pusha
pop
out
and
fistpll
nop
arpl
jbe
cli
out
cmp
and
xchg
pushl
push
mov
fisubrl
push
xchg
cs
add
jbe
pop
test
lahf
icebp
mov
xor
xor
inc
rcr
test
addl
pop
jnp
cmp
push
xchg
roll
std
and
out
outsl
aaa
xchg
jecxz
mov
das
ja
outsb
adc
cmp
icebp
in
add
loope
gs
sub
xlat
xchg
xchg
push
rcr
xor
or
inc
mov
ret
mov
pusha
sbb
dec
int3
push
dec
adc
push
outsl
jecxz
mov
pop
mov
xor
sub
scas
hlt
fdivrl
xlat
int3
cmpsb
cmp
push
bound
and
into
dec
sbb
and
shl
xchg
cld
dec
cmpsl
psubusb
ss
ss
into
rcrl
inc
insl
hlt
mov
incl
mov
mov
push
push
je
and
sahf
shll
jp
push
mov
and
mov
adc
cmp
inc
jb
push
xchg
jmp
addr16
cmp
jne
es
fwait
aad
pop
sub
fidivs
and
mov
xor
stos
stos
xchg
pop
mov
xchg
lock
push
fdivrl
fsts
mov
jmp
sub
out
out
int3
pop
inc
mov
in
rcll
jns
xor
imul
add
out
sahf
inc
xor
xor
sti
mov
adc
shrl
inc
enter
lock
push
push
iret
jae
push
pop
cmpsl
lds
loope
loopne
stos
shrl
inc
shl
popf
inc
lods
es
add
shrb
clc
dec
outsl
mov
mov
flds
mov
cmp
inc
jnp
push
and
push
adc
stos
hlt
pop
insl
xor
adc
push
lahf
inc
shrl
inc
lods
push
hlt
dec
xor
das
adc
imul
cmp
push
aaa
add
sbb
aaa
xor
mov
pop
dec
cmp
das
out
inc
add
ret
mov
rcrl
xchg
movsb
lock
gs
insb
outsl
inc
nop
inc
lcall
xor
cmpsl
shrb
inc
jnp
sub
and
cmp
sub
outsl
mov
pushf
dec
add
or
pop
mov
push
testl
xor
xor
mov
fwait
inc
jnp
icebp
xor
cmp
ljmp
cmp
pop
icebp
or
mov
sub
push
or
test
add
inc
inc
add
rcrl
sub
iret
icebp
inc
in
lcall
lock
stos
jne
test
das
stos
inc
pop
sbb
lds
lea
int3
addr16
inc
xor
xor
cli
lret
sahf
jns
fwait
mov
cld
mov
mov
adc
jb
rcll
out
cld
imul
xchg
inc
scas
stos
pop
pushf
insb
rclb
rcll
nop
jg
bound
rclb
int3
xor
push
add
aaa
fwait
call
xor
in
into
stos
jno
mov
pop
in
hlt
insl
inc
dec
outsl
jecxz
mov
lea
out
popf
mov
mov
push
out
fwait
inc
sbb
xor
sub
divl
cmp
subl
sbb
scas
scas
arpl
jno
mov
add
fscale
push
sbb
mov
mov
dec
jns
pop
mov
mov
xchg
mov
enter
mov
ret
leave
mov
push
lea
mov
jns
fcoml
and
out
mov
int3
rclb
addr16
xor
sti
mov
push
loop
mov
dec
loope
dec
jmp
rcll
dec
push
xlat
cmp
sbb
test
lea
mov
mov
scas
into
stos
int3
sbb
stc
xor
mov
inc
dec
adc
fwait
scas
cmp
in
cld
arpl
stc
xor
dec
aas
xchg
outsb
insb
or
cwtl
testl
xor
loop
dec
sbb
imul
fmuls
mov
fwait
rclb
and
xor
mov
mov
fdivl
mov
mov
andl
notb
cmp
iret
or
mov
int3
push
in
jmp
or
ret
outsl
je
stc
add
fistpl
jne
inc
lahf
and
xchg
push
mov
pop
mov
out
and
sub
mov
xchg
pop
add
rcll
icebp
mov
cs
mov
adc
mov
insl
mov
in
mov
push
pop
aas
push
adc
or
add
dec
lret
push
lods
aaa
jmp
mov
mov
stos
daa
pop
ret
dec
push
out
cmp
divb
pop
push
dec
mov
je
rorb
mull
mov
mov
mov
fidivrl
or
dec
xchg
and
push
shlb
shrl
adc
repnz
add
dec
leave
push
repz
mov
mov
daa
aad
addr16
sbb
dec
lret
push
xchg
in
icebp
scas
mul
push
dec
out
cli
inc
aad
into
inc
out
testl
sub
outsb
and
inc
or
pop
dec
push
dec
jo
jmp
daa
js
lods
jg
or
sub
inc
pop
test
dec
jbe
inc
push
data16
xchg
pop
lahf
aam
popf
lock
lock
cmp
sti
push
xchg
xchg
sub
push
outsb
aam
xchg
stos
repz
pop
cmc
cmc
or
cltd
jae
fidivs
or
gs
push
addr16
loopne
out
mov
ss
sbb
bswap
push
sub
push
test
test
aas
mov
mov
mov
xchg
insb
mov
ret
les
pop
nop
out
mov
cmp
or
shr
pop
pushf
jg
xchg
add
icebp
pop
sub
pop
aaa
aad
test
icebp
jns
pop
out
and
push
mov
xor
int
adc
icebp
pop
imul
mov
test
outsb
cmp
arpl
stc
mov
int
mov
inc
xchg
mov
clc
xchg
xor
xorl
push
cmp
lret
or
add
xchg
jmp
lret
ret
pop
es
push
sbb
xchg
xor
cmp
jge
cs
pop
mov
inc
movsl
push
sbb
imul
inc
fmul
jo
cwtl
xchg
stos
cmp
jb
cs
mov
cmp
int3
es
mov
push
loopne
mov
in
mov
sub
fists
jnp
jbe
sub
les
mov
dec
mov
das
test
sub
mov
and
jbe
dec
mov
stc
xor
jno
cltd
rol
push
xchg
fisttps
outsb
repnz
popf
pop
push
aaa
int
or
shl
push
add
inc
mov
dec
mov
sub
or
pop
dec
mov
popa
inc
sarl
out
outsb
sub
dec
mov
pusha
incl
ret
ss
je
jbe
mov
mov
push
push
ret
shll
mov
shll
dec
out
stos
fimull
sti
cmpsl
sub
iret
fiadds
das
dec
push
ds
sub
mov
sbb
xor
sbb
popf
pop
out
inc
mov
inc
jne
or
mov
or
jmp
pop
call
aad
imul
lret
test
out
lods
test
sysexit
dec
test
ja
mov
push
pop
in
mov
xor
ret
mov
in
inc
repnz
mov
out
icebp
decl
fldl
push
pop
daa
cmpsb
mov
mov
rol
xlat
dec
cmp
dec
lods
fists
int
aaa
imul
lods
push
mov
aas
xor
imul
sub
dec
inc
lds
xor
lret
hlt
call
cmp
push
gs
fistps
fsts
sub
hlt
roll
or
dec
sbb
lretw
ret
iret
sarb
or
or
loop
pop
xor
push
mov
inc
imul
lret
out
or
shlb
pop
jecxz
jecxz
dec
lret
pop
jo
sti
das
sub
test
mov
lds
jmp
pop
enter
clc
fsubrl
xchg
out
pop
leave
aaa
dec
and
push
adc
mov
ret
std
lret
iret
ret
enter
mov
cmp
cmp
sub
inc
sti
ss
pop
jl
stos
xchg
mov
pop
jae
insl
test
cmp
adc
add
cmp
jo
or
xchg
dec
mov
xchg
dec
sbb
jge
mov
movsb
test
mov
loop
xor
add
push
push
inc
mov
popf
push
shlb
jl
scas
jle
sub
push
push
cmp
int
pop
xlat
sub
leave
pop
sbb
loopne
ret
int
fldt
jae
imul
inc
and
scas
inc
cmc
jo
push
rcrl
and
fistpll
push
aam
loop
outsl
test
bound
stos
mov
mov
mov
fs
cmc
icebp
ds
or
jg
sub
iret
fwait
dec
icebp
fildl
sbb
fimuls
inc
push
bnd
addr16
ficompl
dec
mov
or
xchg
pop
aas
adc
mov
mov
data16
inc
idivb
jbe
sub
inc
mov
jo
jae
ljmp
push
xchg
cmp
jne
cmc
mov
test
adc
movsb
mov
xor
jmp
xor
jp
sbb
and
lds
xor
test
gs
in
ret
sbb
mov
roll
xchg
cmp
mov
jnp
inc
dec
fnstcw
inc
xor
push
push
dec
iret
aad
in
jbe
repz
or
les
inc
out
in
pushf
shr
adc
sarl
jae
mov
shrl
call
inc
adc
push
add
jno
cltd
lea
cmovno
jmp
dec
stc
mov
and
loop
jmp
dec
mov
bound
push
cmp
loop
hlt
fildll
ljmp
mov
and
or
push
scas
lds
inc
dec
scas
mov
add
jl
hlt
dec
push
pushf
sub
std
jecxz
xchg
pop
cmpsb
or
addl
pop
call
jle
scas
stos
insl
lret
repz
ret
xchg
jno
xor
add
mov
ljmp
pusha
add
test
cmp
mov
pop
scas
add
shl
mov
pop
jb
dec
test
pop
or
mov
icebp
testb
lret
xchg
stos
cmc
pop
dec
mov
jae
popl
sub
dec
icebp
and
pusha
ret
sub
cmc
xchg
sbb
ljmp
aaa
cmpsl
mov
mov
mov
push
movaps
lods
loopne
stc
add
jmp
cli
aaa
adc
or
sbb
add
mov
arpl
stos
or
out
mov
pop
mov
icebp
lcall
or
push
push
jns
rcr
daa
or
imul
outsl
mov
lds
push
ljmp
mov
cs
adc
add
mov
mov
dec
sbb
jae
mov
negb
add
mov
out
jne
in
loope
mov
mov
in
mov
sub
mov
pop
dec
std
dec
addr16
ja
cld
sub
imul
adc
pop
sbb
rcrb
mov
les
or
cmp
iret
xlat
xchg
pop
or
push
fisubrs
data16
insl
lods
mov
test
dec
mov
daa
inc
lods
lahf
inc
pop
out
or
shlb
push
into
push
jcxz
cmpsb
sbb
xlat
loope
or
cs
ss
xchg
test
dec
movsb
or
inc
out
jae
sub
pop
into
or
ficomps
dec
mov
mov
inc
cmpsl
sub
daa
ja
into
lret
out
out
out
es
inc
int3
dec
dec
add
orb
insb
sub
aad
es
mov
jge
mov
mov
test
xchg
jg
add
mov
mov
add
dec
iret
out
ss
inc
xchg
ja
mov
and
xchg
repz
lcall
into
bound
mov
pusha
add
lds
clc
sub
mov
enter
dec
in
cs
xor
pop
ja
mov
rorl
and
mov
inc
mov
pusha
push
mov
cltd
mov
iret
jbe
test
dec
dec
adc
stos
sahf
dec
sub
mov
inc
pop
or
jbe
imul
mov
divl
mov
in
cmp
std
shll
or
lods
pop
outsb
or
mov
punpckhwd
gs
jne
fidivs
call
fmul
mov
adc
nop
cmp
cmpsl
and
jg
cmp
repz
scas
adcl
pop
inc
imul
aaa
dec
and
or
ja
insb
cmp
jbe
push
jle
mov
sub
mov
push
vmovddup
cmp
cmc
mov
pop
dec
mov
cmpsb
ret
xlat
das
or
jle
sub
sub
sub
outsl
mov
lds
aaa
cmp
jbe
push
mov
cltd
dec
enter
xor
jg
push
add
dec
adc
add
jg
aas
mov
out
fstpt
dec
int3
ja
movsl
imul
das
add
fsubrl
pop
repz
cltd
cwtl
add
mov
in
imul
test
repnz
mov
shrb
mov
insb
cmc
loop
jb
inc
push
sbbb
dec
aas
imul
cmp
push
aaa
cmp
mov
jmp
xchg
out
mov
push
sub
pop
daa
gs
rcll
push
and
jno
mov
adc
aaa
out
cmpsb
outsb
icebp
inc
mov
xor
or
ss
imul
loope
dec
aas
add
dec
push
outsb
or
mov
sub
repnz
lock
imul
sarb
cld
rep
cs
inc
jae
jmp
lcall
or
sub
add
movsl
out
test
fiaddl
lds
cmp
sarl
outsl
in
cmp
push
or
sbbb
lods
dec
rorb
leave
rol
xor
push
scas
adc
mul
mov
shr
push
pusha
sarb
sub
jnp
add
cmp
cmp
rcll
xor
xchg
cmp
sub
mov
jl
popf
dec
fidivrs
outsl
cmp
dec
mov
push
ja
adc
clc
dec
dec
adc
out
mov
das
ret
mov
inc
mov
loope
push
sub
adc
mov
ret
sbb
test
sti
data16
mov
push
mov
fcmovu
sbb
lods
in
or
in
les
cmpsl
and
xor
cmp
call
xchg
ficoml
mov
aaa
lret
ret
imul
jg
pop
adc
xlat
es
sbbl
adc
sub
hlt
call
fwait
xchg
dec
movsl
neg
lods
xor
push
push
mov
aaa
movsb
fsub
jge
push
xor
pop
sub
ljmp
cmpsl
lock
sti
test
push
pop
cmp
lret
cmp
mov
cmpsl
dec
mov
shll
idivb
sub
push
aaa
fildll
mov
movsl
xor
xchg
insl
movsl
sarb
mov
jno
movsl
rcrb
push
int
cmp
xlat
ljmp
push
decl
lahf
out
mov
jmp
xchg
xor
out
push
pop
cmp
xchg
fcmovnbe
imul
inc
cmp
iret
sbb
ds
das
mov
mov
aaa
xor
xchg
sub
stos
jno
pop
mov
jo
test
negb
cmpsb
pop
movsl
mov
xor
ss
cmp
int3
inc
iret
repnz
imul
outsb
das
inc
and
jae
cmpsl
ds
fwait
xor
pop
and
mov
sub
cmp
ficomps
notb
pop
xor
bound
pop
imul
xchg
test
pop
jnp
das
popa
xchg
testb
mov
js
pop
push
fldt
dec
imul
dec
push
ljmp
iret
clc
mov
rcll
nop
iret
inc
cmp
mov
ror
hlt
ffree
aaa
dec
inc
adc
popa
rcpps
cli
and
notl
out
sbb
out
lahf
and
adc
xchg
popl
adc
nop
iret
movb
push
aas
jecxz
aaa
sub
jge
mov
shlb
cmc
cmp
out
aam
add
mov
cmp
cs
mov
dec
cli
fisubrl
add
aaa
jle
mov
sbb
mov
mov
cmp
and
idivb
jb
push
add
xchg
adc
mov
scas
in
imulb
dec
fcoml
pushl
shll
leave
push
xchg
aaa
and
rorb
ljmp
imul
jo
and
movsl
jp
negb
push
push
fbstp
mov
dec
xor
aaa
mov
jnp
stos
rorb
or
xchg
mov
mov
sbb
shrb
inc
xlat
mov
imul
adc
mov
dec
inc
add
pop
inc
mov
push
cmp
mov
inc
std
mov
ror
andl
and
out
xor
xor
call
out
outsb
pop
or
push
test
mov
das
mov
mov
dec
xchg
std
aaa
dec
mov
or
hlt
in
js
out
lods
subb
inc
fs
mov
dec
sbb
adcl
add
push
stc
aad
xor
cwtl
pop
mov
push
sbb
paddusw
ds
mov
dec
jmp
mov
mov
mov
notb
pop
and
ljmp
aas
sbb
jbe
mov
ljmp
mov
push
and
xlat
and
xlat
mov
push
cmp
xor
outsl
inc
inc
ds
pop
repz
outsb
movsb
pop
ret
jbe
imul
shrl
aad
inc
mov
pop
popf
mov
cmp
rcl
mov
inc
lahf
dec
iret
divb
xor
aaa
mov
ljmp
ss
lret
les
mov
adc
fsubs
mov
sub
xchg
dec
adc
fisttpl
imul
out
mov
shrl
mov
sub
xchg
mov
ljmp
pop
or
mov
pop
imul
mov
dec
in
mov
lret
sbb
xor
sub
and
jb
mov
int3
mov
imul
insb
cli
jno
adc
push
inc
dec
jb
mov
lret
lcall
adc
movsl
jmp
push
push
cmp
scas
imull
fsubs
or
imul
sub
scas
imul
dec
call
lret
cmc
gs
xor
fldt
jecxz
mov
jmp
dec
mov
addr16
mov
mull
roll
ja
sbb
mov
sub
jmp
push
leave
int
sub
xor
mull
rorb
test
andb
les
push
sbb
xchg
loop
xchg
icebp
int
movsl
inc
and
push
or
inc
cli
jp
imul
or
cld
dec
cmpsl
push
out
out
mov
mov
cld
cmp
add
imul
xrelease
adc
or
imul
cmc
adc
xchg
jmp
mov
push
sub
pop
dec
aam
or
xor
push
lock
xchg
xor
aaa
fs
sbb
mov
call
rorl
icebp
inc
push
dec
std
repz
outsb
out
pop
xchg
or
jmp
out
mov
out
mov
out
push
pop
repnz
dec
int3
sub
mov
jbe
inc
jns
and
nop
jno
mov
cltd
xchg
in
shlb
out
bound
inc
lret
data16
dec
test
and
out
dec
pop
cmp
aas
lcall
out
div
add
push
pop
orb
in
ss
sti
dec
scas
jae
popl
lahf
mov
ja
or
sti
fwait
aaa
enter
adc
mov
or
and
mov
jle
mov
leave
or
cmp
rcrl
inc
mov
ja
or
and
mov
jno
lcall
mov
jns
shl
mov
fcomps
jae
xor
orb
aad
out
enter
sub
add
fistpl
lret
shlb
push
xchg
leave
fnstcw
mov
notb
out
cmp
pushl
jae
jl
mov
push
out
dec
xchg
insl
cwtl
xchg
call
mov
add
or
sub
add
mov
adc
or
and
pop
xor
inc
loop
xchg
cwtl
cwtl
negb
cmp
je
test
push
xchg
jmp
inc
es
sub
inc
test
sarb
mov
mov
push
lret
clc
mov
lret
iret
mov
clc
imul
or
mov
out
mov
lock
adc
dec
push
pop
arpl
jae
lret
dec
sub
sbb
arpl
fsubs
bound
mov
xor
inc
gs
xchg
cmp
jp
in
idivb
sbb
imul
xor
add
or
insl
add
fmull
popa
and
xchg
jbe
push
mov
bound
sub
xlat
hlt
xlat
push
orb
aad
in
ror
mov
ja
and
gs
dec
xsha1
cmpsb
leave
out
mov
dec
adc
add
cwtl
xor
inc
fs
push
ficoms
out
lods
mov
xchg
stos
cmp
mov
xchg
leave
test
out
stos
lods
mov
xlat
xchg
xchg
leave
fs
dec
fisubrl
xchg
leave
mov
dec
mov
jb
mov
stos
sub
mov
mov
repnz
lcall
lods
push
outsb
loopne
push
mov
push
dec
int3
test
inc
lods
xchg
pushf
mov
dec
xchg
test
inc
lods
dec
inc
outsb
les
pop
jbe
adc
jge
imul
cmp
test
or
mov
outsl
movsb
ljmp
lahf
push
sub
iret
push
js
mov
popf
mov
mov
imul
or
cmpsl
jae
pop
scas
std
jae
dec
jmp
mov
add
push
xor
push
insl
mov
into
stos
add
inc
mov
daa
adc
enter
iret
jg
sbb
adc
xchg
inc
push
xor
sbbb
mov
test
inc
sub
and
jge
cltd
pop
sub
xchg
mov
rclb
inc
inc
jns
dec
sub
rcl
jns
sahf
repz
add
es
jp
pop
lret
scas
into
addl
daa
js
pop
cmp
xchg
lock
or
dec
out
sbb
inc
icebp
aad
in
repnz
cltd
mov
jae
ljmp
pop
lods
cmp
das
popa
xchg
fndisi(8087
pusha
pop
popa
sub
fistps
sub
out
sbb
xchg
push
movsl
fstpt
add
js
test
xor
sahf
push
cmpsl
adc
ja
lds
cs
stos
jge
movb
xlat
mov
lods
insl
mov
adc
or
mov
pop
mov
cmp
popf
loope
dec
jle
inc
or
paddd
gs
xor
sub
rclb
lds
mov
xlat
mov
dec
fildl
loope
mov
xor
stos
cmp
and
and
sub
mov
out
pusha
int3
sbb
subl
nop
or
mov
sbb
add
add
sub
fisubrl
xchg
addr16
sub
addr16
sub
addr16
pop
jnp
jge
pop
cltd
out
stc
iret
ja
mov
int3
mov
test
decl
outsb
xchg
movsl
out
mov
pushl
paddusb
jle
js
nop
lds
sub
cmp
pop
aas
adc
sub
sbb
loop
push
dec
jno
adc
ret
mov
xchg
jge
push
mov
and
cmp
sub
lcall
jecxz
cmp
loopne
sti
out
dec
sub
cli
xor
and
sbb
sub
and
imull
pop
sub
dec
xchg
rclb
insb
nop
pop
cmp
inc
out
repz
sahf
hlt
mov
pavgw
aaa
xchg
mov
loopne
sub
rcll
clc
or
mov
daa
cmp
or
stos
jge
xchg
mov
dec
sti
push
xchg
test
inc
lret
mov
pop
lret
cmpsl
popa
mov
into
jp
leave
inc
leave
addr16
imulb
jmp
add
lret
out
insl
rorb
std
popf
cmp
insl
xchg
sbb
jno
data16
xchg
pop
ss
repz
mov
dec
mov
cmpsb
mov
sub
push
inc
mov
test
push
ja
movl
xor
pop
loope
imul
pusha
outsl
xor
push
test
int
xchg
mov
xchg
push
pop
test
push
or
pop
sub
jae
js
sub
sub
enter
mov
out
test
mov
cmpsl
dec
xchg
ja
jmp
shll
sarl
xchg
sbb
js
dec
sub
sub
lcall
sub
sbb
mov
inc
insb
pop
loope
ds
push
aaa
sub
mov
jnp
aad
sbb
rcl
cltd
jg
mov
cltd
push
xor
xchg
fstl
pop
je
xchg
movsb
inc
dec
xchg
mov
dec
test
fwait
push
cwtl
cli
gs
adc
insb
pop
aas
jge
scas
int
add
lret
in
lahf
pusha
ss
outsl
and
stc
push
mov
mov
loope
mov
mov
mov
sahf
insl
sbb
sbb
push
jg
xor
mov
scas
mov
scas
xor
es
xchg
push
adc
jne
add
shlb
into
push
mov
mov
jae
adc
in
std
cmpsl
add
jae
aaa
outsl
xor
mov
xor
fistps
cwtl
je
fildll
sti
or
repz
dec
lret
dec
dec
sub
sti
mov
cmp
outsb
jns
out
xchg
repz
ljmp
cwtl
daa
gs
mov
into
inc
xchg
push
repnz
sub
jb
dec
xor
pop
push
std
cmc
inc
fdivp
out
insl
pop
iret
dec
pop
or
mov
sub
scas
movsl
rcll
scas
cmc
inc
pop
push
pop
out
jp
cmp
cmp
repnz
popf
inc
pop
dec
int
inc
aaa
and
rorl
gs
push
jae
negl
pop
dec
adc
mov
or
imul
in
dec
enter
push
sub
cmp
cmp
shll
outsl
loope
push
shl
push
scas
gs
cltd
testl
pop
in
dec
mov
scas
cmp
neg
mov
roll
imul
loop
add
jbe
sub
dec
push
repz
arpl
or
jecxz
std
shll
sub
rcrb
sub
xchg
mov
repnz
in
outsb
out
pop
jp
pop
imul
rol
inc
dec
cmc
dec
mov
dec
lods
mov
push
xchg
shlb
idivl
jbe
sub
dec
push
repz
pop
pop
out
orl
xchg
jmp
out
pop
pop
xchg
or
mov
sub
mov
rclb
iret
push
sub
and
cmp
aaa
dec
leave
test
dec
sub
sahf
scas
push
rol
jns
repnz
rcll
imul
iret
mov
xchg
dec
inc
divl
push
adc
divl
jbe
xor
repz
outsb
xchg
adc
in
iret
jbe
xchg
repz
outsb
pop
pop
out
push
jae
in
mov
dec
jb
mulps
jbe
imul
jmp
iret
push
sub
pop
mov
cltd
inc
cmovns
repz
push
pop
sbb
adc
xchg
cmp
inc
fisttps
repz
outsb
mov
or
jbe
and
repz
out
or
icebp
push
xlat
iret
push
pop
imul
arpl
cmp
pop
stc
jg
jmp
jbe
adc
lcall
sbb
rcl
dec
shr
mov
repz
scas
jns
ljmp
sarl
inc
icebp
pop
mov
cmp
outsb
jno
jmp
mov
xor
sub
imull
and
sahf
push
xor
mov
sub
cmpsl
addr16
repz
outsb
lcall
or
mov
push
imul
jmp
fistpl
or
xchg
jbe
imul
dec
loope
push
fsubs
sti
scas
scas
gs
mov
mov
shrl
imul
mov
cmpsb
mov
mov
mov
rcll
imul
iret
ss
xor
sbb
mov
inc
mov
imul
pop
repnz
sti
aaa
or
or
mov
das
imul
outsl
mov
leave
cmp
fmull
push
dec
sub
adc
cmp
inc
daa
dec
rorl
dec
sbb
mov
imul
sub
mov
jbe
sub
rorb
sub
outsl
mov
leave
cmp
stc
push
mov
punpckhwd
xchg
rorl
mov
lret
mov
rcrl
jno
ljmp
lahf
push
mov
testl
ret
imul
sbb
or
push
push
repz
jp
packssdw
pop
arpl
ds
xlat
push
scas
push
rol
jno
out
xchg
roll
imul
add
icebp
inc
addr16
adc
mulps
jbe
imul
rol
push
in
outsb
pop
ss
lret
mov
cmp
outsb
insl
inc
fisttps
repz
outsb
xchg
or
pop
mov
roll
xchg
imull
imul
cmp
cmp
sarl
imul
dec
dec
jbe
push
scas
gs
testl
insb
aad
or
push
hlt
sub
adc
sub
xor
cmp
aaa
push
jmp
sub
cmpsb
scas
pop
rcl
testl
inc
in
jae
inc
sbb
rol
outsb
jns
out
dec
mov
cmpsl
pop
xor
rorl
dec
imul
pop
decb
lahf
mov
stos
mov
mov
sarl
sub
sub
sub
outsl
mov
leave
aaa
dec
in
lretw
pop
push
or
mov
sub
scas
test
cmc
dec
out
mov
push
push
jbe
push
scas
add
sub
mov
jle
xor
cmpsb
dec
push
not
mov
sar
push
rcrb
divl
jp
sub
rcr
push
imul
notl
adc
or
dec
sub
sahf
xchg
outsb
sub
or
jbe
imul
mov
iret
push
div
push
sub
inc
mov
popf
cmp
lds
xchg
push
jl
xor
shll
dec
xor
pop
cmp
test
imul
loopne
and
mov
push
adc
idivl
lcall
repz
sbb
pop
test
rcrl
adc
iret
inc
mov
ja
sub
inc
iret
dec
xor
pop
adc
sbb
stc
sarl
sub
aaa
imul
outsl
fadds
or
push
outsb
out
pop
jbe
pop
cmpsb
jbe
imul
ffree
push
sti
out
push
sub
outsl
mov
mov
roll
in
test
jbe
push
scas
xor
idivl
ss
loopne
xlat
adc
ja
cli
or
push
sub
rcll
add
iret
pop
imul
push
sub
pop
mov
adc
mov
ret
mov
xchg
pop
enter
mov
inc
aam
rcl
sub
orl
xchg
dec
lods
jge
xchg
mulb
es
dec
jbe
fsub
je
xchg
ss
fstpt
jecxz
jbe
cmp
cs
push
sub
xchg
int3
pop
pop
rolb
jbe,pn
loop
jge
mov
xchg
sbb
das
cmp
addr16
mov
lret
ja
stos
loope
add
jnp
div
dec
repz
xlat
xchg
or
mov
xlat
imul
test
pop
outsb
ja
lods
out
mov
dec
push
jg
ret
dec
mov
mov
push
dec
push
das
jno
cmc
inc
lods
push
out
adc
sub
outsl
mov
push
fists
incl
jns
jns
gs
mov
xchg
das
jmp
adc
dec
lds
mov
sbb
sub
rcl
clc
add
pop
test
dec
pusha
mov
pop
xor
mov
jo
pop
lret
lods
xor
aaa
or
outsl
jl
int
dec
dec
mov
fisttps
das
add
std
jno
push
sub
dec
push
stos
push
mov
push
aaa
push
mov
pop
push
scas
mov
mov
xchg
lods
loopne
sahf
cmc
mov
ja
insl
xchg
es
mov
inc
mov
scas
mov
ss
inc
sbb
and
cmpsl
aad
sti
or
sti
jbe
jbe
jp
daa
pop
imul
fbld
dec
push
sub
adc
mov
jbe
cs
jp
inc
sub
jp
aaa
pop
rcrl
sbb
lods
loopne
hlt
out
jmp
adc
cmpsl
and
xlat
pop
nop
pop
sub
pushw
adc
push
inc
fnstenv
pop
dec
jmp
out
or
push
sbb
push
mov
aad
lcall
enter
stos
aaa
inc
mov
pop
push
mov
push
jle
pop
jno
adc
ror
xchg
xor
push
push
ja
and
inc
xchg
mov
shlb
out
scas
imul
scas
inc
cwtl
mov
pop
popl
mov
jle
aaa
xorb
fdivl
sti
cmpsb
push
iret
mov
dec
lods
repz
xor
sbb
sahf
clc
mov
add
out
xchg
pusha
inc
in
incl
inc
dec
xor
das
fcomps
xor
mov
pusha
outsb
sub
jb
sbb
fwait
mov
or
dec
push
pop
adc
outsb
sub
push
sarb
dec
jge
data16
popf
adc
stos
cwtl
adc
pop
pop
jae
lock
das
fisttpl
sub
adc
jle
sahf
inc
icebp
inc
adc
orl
std
iret
mov
negb
dec
push
jmp
iret
mov
and
jg,pn
shlb
mov
lods
fcoms
test
loope
add
mov
add
test
scas
int
daa
and
mov
mov
testb
aad
fildll
es
out
inc
repz
fildl
ja
adc
outsl
mov
iret
adc
inc
addl
pop
sub
push
ja
test
fcomi
ss
loop
push
into
inc
push
inc
aad
jno
xchg
adc
lods
out
jg
fnstsw
test
push
mov
addr16
push
int
adc
mov
jo
gs
ljmp
xchg
dec
imul
pop
fsts
pop
sti
push
mov
push
cmpsl
das
test
jb
daa
fsubrs
dec
shr
pop
jae
daa
insl
into
dec
push
pop
lret
cltd
repnz
pop
push
dec
aas
call
mov
xor
dec
pop
jnp
into
adcl
rclb
push
out
mov
mov
aaa
clc
loop
push
or
fistpl
dec
imul
pop
into
push
lea
outsb
ss
sub
dec
or
jle
lahf
lea
push
xor
mov
push
mov
add
xor
int
lea
push
xchg
repnz
pop
cmc
push
sub
cwtl
push
loop
shr
cmc
jmp
ss
cld
ds
daa
lock
xor
dec
outsb
push
mov
mov
jns
add
inc
imul
fwait
xor
negb
test
mov
mov
push
mov
lahf
stc
xchg
stos
add
nop
jbe
mov
ja
add
insl
repnz
ficoml
clc
out
inc
push
add
nop
ds
clc
jp
inc
mov
push
pop
gs
subl
insb
pop
out
mov
int3
imul
int
cs
lahf
cs
cmpsl
cs
mov
sub
lea
lods
cmpsl
test
scas
test
test
testb
or
lahf
out
jle
xchg
pop
pop
xchg
jno
test
xchg
inc
aaa
dec
mov
add
addr16
rol
ja
loope
xchg
lds
dec
adc
mov
and
dec
xor
xlat
dec
inc
scas
out
push
dec
div
pusha
lea
ss
in
add
dec
xchg
lds
dec
vpackssdw
lds
loope
xchg
pop
outsb
leave
push
inc
test
in
out
jb
ror
jbe
or
int
aaa
or
out
out
incb
xlat
mov
xchg
pop
add
jmp
jnp
jl
das
outsb
mov
dec
scas
xlat
insb
jne
ljmp
punpckhwd
sbb
test
fimuls
sbbb
daa
lret
sub
movsb
mov
push
inc
cli
in
jge
test
std
int
scas
imul
mov
xchg
testb
in
jp
xor
into
jbe
js
jmp
cs
sub
jmp
not
mov
rorl
rorl
adc
das
rcl
aaa
out
fnstcw
loop
inc
and
mov
pop
imul
fs
dec
jmp
xor
out
je
cmp
cmpl
jmp
jle
and
mov
test
xor
xchg
adc
push
lods
xor
mov
inc
push
int3
mov
push
divb
fldcw
cld
stc
subl
insl
cmp
xchg
gs
repnz
ffreep
xchg
dec
or
mov
jg
sti
mov
nop
or
test
pop
bound
fadds
pop
leave
stc
jo
add
test
into
jnp
sbb
mov
popf
dec
pop
inc
dec
xor
sbb
mov
lea
jbe
or
ljmp
jmp
gs
xchg
jnp
xor
jae
push
ret
hlt
pop
xchg
in
mov
fsts
stc
jno
sub
iret
enter
dec
aad
pop
xor
pop
popa
xchg
mov
divb
cmp
lock
or
jl
pop
cmp
test
out
mov
xor
mov
push
xchg
fdivl
fnstenv
mov
jnp
test
sbb
fnstcw
pop
fdivrs
cmp
fsubs
jg
leave
out
shl
ss
sbb
inc
mov
jmp
fnstcw
movsl
arpl
add
in
add
leave
mov
adc
adc
inc
testb
js
mov
xchg
sub
mov
cmp
mov
jo
add
negl
fisubrl
es
fsts
lret
js
icebp
loopne
pop
fdivs
pop
push
fidivrl
pop
push
in
mov
mov
ret
in
add
arpl
cmc
fs
or
sbb
cmpb
rcrl
ljmp
test
mov
data16
out
incb
lea
xor
popf
pop
fs
pop
pushf
test
and
test
push
dec
js
testl
cwtl
jnp
subb
gs
and
mov
les
push
int
fwait
xchg
out
test
cld
test
out
test
insl
cmp
int
dec
insb
fucomp
pop
mov
out
test
in
test
out
test
xchg
cmp
jle
cmc
xchg
jle
cmc
mov
jle
test
sub
cmp
mov
push
mov
in
gs
aas
jne
add
xchg
cmp
xchg
and
imul
dec
or
mov
sub
jecxz
dec
push
in
test
insl
mov
fdiv
cmp
add
cmp
fdivs
cmp
fcoms
aad
gs
fdivs
cmc
fadds
cmp
mov
xor
lds
inc
rcl
ss
fxam
fiadds
loop
inc
jne
add
inc
xchg
loope
inc
movsl
loope
inc
mov
inc
inc
vandnpd
loope
inc
in
jne
cmc
loope
inc
add
loop
inc
and
pop
lds
popa
in
fs
les
lds
add
aad
gs
in
jne
cmc
fiadds
inc
adc
fidivs
pop
pushf
add
insl
mov
and
xchg
and
xchg
push
xchg
and
xchg
and
xchg
and
xchg
movsl
xchg
mov
xor
mov
push
push
je
fs
adc
test
push
movsl
mov
push
mov
inc
push
lds
adc
mov
adc
mov
xchg
xor
stos
sub
insb
pop
adc
insl
sub
sti
in
test
out
les
xchg
inc
jnp
in
or
insl
cs
int3
jge
std
int3
lea
or
int
sub
add
insl
push
adc
inc
or
lea
xor
popf
sbb
sbb
sbb
sbb
movsb
subl
in
jne
gs
xchg
movsl
xchg
adc
inc
and
adcl
fs
test
xchg
and
xchg
push
xchg
and
xchg
and
xchg
and
xchg
movsl
int
sti
cli
shrb
push
mov
divl
pop
cwtl
cwtl
add
cmpsb
test
and
test
and
test
and
dec
out
cmc
adc
inc
aad
cmp
out
loopew
inc
ja
pop
inc
xchg
daa
lods
gs
out
gs
out
out
mulb
out
push
lods
out
push
mov
data16
ss
loop
cmpb
dec
test
gs
test
in
test
in
test
out
test
out
test
fldcw
xchg
fisubs
out
ja
neg
xchg
fists
inc
test
mov
aaa
mov
pop
inc
xlat
das
push
out
addr16
aas
ja
pop
outsl
xchg
and
xchg
and
xchg
adc
lds
arpl
dec
pop
cmp
rcrl
lret
arpl
movsb
xor
mov
jne
fbld
sub
mull
sub
aaa
jno
mov
test
inc
in
push
incl
mov
fwait
pop
ds
pop
inc
test
pop
dec
test
pop
subb
pop
xchg
test
dec
movsl
out
add
out
or
out
cmp
pop
mov
lds
sub
jg
jno
cmp
pop
jne
ds
adc
out
pop
inc
sbb
inc
mov
pop
xchg
or
mov
fnstsw
sub
mov
adc
inc
je
adc
fadds
stos
pop
dec
test
pop
push
test
pop
pop
test
pop
data16
pop
jp
sub
out
push
test
dec
mov
xor
lahf
js
andb
xlat
adc
out
jbe
sbb
jle
sub
out
mov
gs
lret
out
shlb
out
out
movsl
out
push
data16
push
mov
shr
leavew
out
cs
out
or
ja
sbb
xchg
xor
dec
ret
lds
lret
lds
rol
jne
fcmovnb
jge
out
mov
fadds
cmp
fsts
aaa
sub
shrl
push
int
xor
out
in
add
in
test
in
test
cmpsl
test
out
test
out
test
ret
out
test
loop
mov
or
lahf
out
test
jnp
or
bound
imul
movsb
dec
sub
jecxz
test
hlt
mov
push
fbstp
push
pop
mov
and
jae
adc
je,pt
adc
jnp
pop
push
xorl
xchg
mov
push
stos
mov
push
shll
push
jecxz
outsl
adc
inc
ja
and
cmp
push
mov
jle
xor
or
aas
xchg
pop
inc
xchg
ficomps
inc
fisubs
inc
mov
fidivs
jg
and
xchg
and
outsb
repnz
sub
push
mov
xchg
sub
add
arpl
xlat
fs
jns
cmp
pop
cmp
cmc
push
jle
cmc
imul
cmc
cltd
jle
idivb
jle
neg
jb
pop
out
inc
pop
leave
bound
adc
xchg
movsb
inc
sub
out
lea
sti
movsb
popf
sub
or
or
adc
inc
sbb
inc
xor
dec
ret
lds
iret
mov
fadds
ret
fmuls
lret
fsubs
sub
pop
mov
gs
out
leave
xchg
push
aas
add
inc
ss
pop
cmc
js
testl
imulb
jnp
or
push
xor
adc
repnz
fldenv
sbbl
sub
push
mov
and
inc
jmp
add
int3
shl
pop
std
inc
outsl
jne
pop
mov
xchg
ja
inc
pop
fcompl
dec
xchg
ret
hlt
in
jmp
mov
mov
xchg
xchg
and
xchg
and
xchg
and
js
sbb
jecxz
xor
subps
imul
inc
subb
clc
les
add
insb
jl
pop
pop
mov
das
scas
rclb
mov
loope
or
mov
les
icebp
jnp
cmpsb
inc
add
or
jge
adc
jp
sbb
loope
inc
sub
pop
xor
adc
adc
xchg
es
jb
xor
idivb
ss
push
xorb
test
or
xchg
xchg
pop
xchg
rorb
cmp
and
fstl
js
pop
sub
xchg
xor
push
in
xchg
pop
inc
js
negl
jg
or
sahf
push
jb
clc
lods
add
ret
push
out
testl
pop
xchg
ss
xchg
std
insl
loope
mov
test
lret
xor
andb
stos
dec
pop
mov
data16
subl
cwtl
lahf
or
ret
and
call
dec
dec
ss
leave
lock
es
pusha
out
mov
leave
hlt
fstpt
jno
dec
mov
jmp
fistpll
dec
push
ljmp
cltd
cmpsl
jo
dec
sub
je
sbb
sub
aam
je
lcall
xor
push
stos
cmp
mov
cwtl
test
setge
push
sub
or
fadd
mov
pusha
int
leave
fiaddl
or
mov
sub
test
inc
inc
shl
jp
cli
loope
inc
inc
mov
es
add
arpl
addb
aad
test
xor
into
setb
mov
repnz
pop
cmp
push
gs
out
movsl
push
dec
mov
xchg
int3
and
mov
jb
fidivrl
and
fstp
insl
cmp
fadds
cmp
fsubs
test
add
inc
push
clc
fdivs
test
and
enter
xor
test
push
imul
hlt
mov
inc
js
jmp
or
cmp
mov
test
xor
test
inc
leave
jbe
jmp
out
dec
mov
push
daa
ret
cmc
arpl
popa
adc
mov
mov
lahf
lods
xor
enter
jno
stos
ss
popa
lcall
and
test
insb
jno
push
aam
dec
pusha
lock
pop
rol
imul
das
cmpsl
sub
scas
sti
retw
scas
js
or
and
mov
mov
sti
movsl
inc
sub
out
dec
pusha
hlt
fcomps
cmc
lahf
push
out
cmp
loop
mov
push
and
push
jno
rclb
mov
pop
dec
out
gs
outsb
gs
jbe
sbb
jle
or
pop
cmp
arpl
cmpsb
mov
insl
jle
out
jne
test
loope
inc
out
xchg
stos
add
arpl
xor
fstpl
stos
add
jecxz
ss
les
sti
nop
jbe
or
jg
mov
jp
into
rol
jns
fistpll
inc
and
shr
data16
xor
out
ds
das
out
xchg
stos
sbb
xchg
add
inc
mov
sub
inc
lahf
test
adc
pop
xchg
mov
ret
out
or
fisubrl
cmpsb
add
out
js
pushf
repnz
or
dec
ffree
out
out
das
jo
mov
xchg
jbe
loop
out
inc
loop
je
movsl
cld
mov
neg
jno
pop
hlt
mov
push
push
or
pushfw
test
push
test
rcr
out
into
cs
fidivl
gs
cmp
cmpsl
push
lahf
sbb
fldcw
xchg
addr16
outsb
and
loopne
fimull
sbb
dec
and
int3
es
pop
out
sub
add
xchg
jmp
lcall
inc
mov
jl
xchg
enter
mulb
jle
test
xor
cli
test
fbstp
popa
adc
lahf
jb
push
cmpsl
andb
insl
pop
inc
ss
sahf
jmp
fidivl
mov
fadds
rcr
iret
xor
push
lcall
sbb
sarb
sarb
or
cli
sub
popf
dec
push
das
adc
jae
loop
test
add
add
xor
stos
daa
pop
push
mov
cs
mov
test
sbb
daa
jne
insl
mov
adc
aad
pop
mov
jo
rcl
cmp
add
add
or
cwtl
xor
ficoms
inc
xchg
and
insl
lcall
inc
out
jae
dec
xor
outsl
dec
lret
movsl
addr16
jle
out
imul
fcomip
js
fnstcw
cmp
dec
jnp
sbb
pusha
add
imul
adc
stos
dec
pop
xchg
mov
js
mov
or
in
cs
fldt
adc
pop
cmp
add
mov
jae
push
stos
lock
out
xor
nop
push
pop
add
pop
mov
mov
in
mov
mov
adc
cmp
mov
fmuls
scas
jle
sub
call
mov
dec
fucomi
aas
fsts
jo
xchg
xchg
in
push
clc
adc
in
pop
sbb
addb
int
push
mov
add
pop
cmpsl
jmp
mov
push
fldenv
push
aaa
rorl
jno
loopne
popa
enter
cmp
jecxz
flds
jecxz
mov
sbb
stos
jge
scas
in
mov
push
and
inc
fsubl
lock
subb
shrb
inc
insb
inc
outsb
xchg
sub
scas
mov
inc
call
and
xchg
hlt
push
out
sti
gs
aam
call
fidivrs
pop
xchg
and
ret
stos
ss
or
das
std
std
cwtl
arpl
or
jecxz
jl
enter
popf
out
pop
push
mov
sub
mov
pop
jecxz
mov
or
xchg
add
xchg
stos
ljmp
xchg
and
lret
push
push
push
mov
mov
ret
sbb
js
add
sub
inc
std
pop
out
gs
test
push
fwait
mov
mov
xchg
sub
adc
xor
mov
or
or
test
je
jae
call
add
out
test
out
test
out
test
lret
cli
cmc
mov
cmpl
xchg
jae
jmp
test
jnp
ret
push
out
dec
sub
lahf
dec
or
mov
inc
and
mov
dec
pop
fcomp
push
mov
daa
cmp
push
fimuls
aaa
push
int
cmp
test
cmpsl
push
sub
in
mov
fstpt
out
cmpsl
sbb
fcoml
pop
xchg
adc
aam
cmp
pop
movsl
mov
ja
std
inc
cmc
inc
and
inc
mov
fldenv
xchg
mov
imul
mov
xor
add
cmc
xchg
or
xor
popl
xor
inc
lods
xchg
out
test
testl
pop
jbe
push
mov
jecxz
mov
mov
and
xchg
and
fwait
xchg
and
stos
int3
adc
pusha
adc
addr16
outsl
loope
cld
cld
add
out
test
lahf
dec
idivl
fistps
mov
loop
mov
push
cmp
imul
jne
repnz
xchg
gs
cs
dec
lahf
ja
pop
xchg
cmp
xchg
cmp
shrl
fcmovnu
stos
jge
repnz
mov
sbb
mov
adc
push
jecxz
jae
mov
mov
jno
or
xorl
inc
rolb
dec
xchg
dec
cmpsl
dec
jae
add
test
fldt
int3
add
mov
add
xchg
stos
cld
and
stos
sub
shrb
push
xchg
dec
jmp
arpl
in
bound
aam
stos
and
repz
mov
jmp
cltd
mov
loope
lods
dec
adc
mov
sbb
sbb
pop
push
cltd
pop
leave
sub
mov
addb
fisubrl
dec
mov
mov
mov
fdivrs
cmp
das
dec
and
add
sub
bound
data16
sub
push
repnz
data16
icebp
pop
data16
les
call
fnsave
lahf
test
das
xor
pop
mov
inc
mov
jno
adc
fstpl
pop
xor
push
aad
inc
movl
xchg
lds
pop
add
insl
dec
sarl
jnp
mov
loope
je
dec
arpl
adc
sarl
sti
in
negl
stc
lock
icebp
cltd
in
mov
xor
imul
bound
lret
jl
add
pop
xchg
repz
sub
and
mov
test
leave
fcmovnbe
xchg
addr16
pop
jae
and
ss
add
jae
sbb
jnp
nop
mov
cli
es
push
sub
sub
add
ljmp
imul
xchg
daa
btsl
and
sahf
outsb
pop
jae
xchg
popa
inc
out
outsl
or
cld
pop
insb
pop
cmp
flds
inc
fwait
sahf
repz
ret
inc
lret
pop
stc
repnz
cli
lds
pop
pop
out
lahf
add
je
cmp
pop
jno
push
popf
dec
mov
mov
mov
push
mov
icebp
cmp
imul
jnp
not
xorl
shll
sbb
inc
dec
enter
inc
pop
adc
pop
pop
dec
and
fwait
loope
fisubrs
and
sbbl
adc
push
out
push
popa
pop
fstl
jle
xor
jbe
lock
stos
or
pop
fsubs
mov
sub
in
popf
xor
dec
jns
xor
and
xchg
shlb
into
add
fsts
sbb
lds
fsubrl
std
and
or
jno
xor
xor
fsubs
jmp
jg
sti
xlat
mov
cmc
fnstcw
repnz
cmpsl
sub
adc
out
xchg
gs
fidivrs
sbb
jp
pusha
push
jp
gs
testb
dec
pop
mov
xor
fidivs
inc
loope
mov
aaa
dec
shll
hlt
mov
pop
fidivrl
push
mov
xchg
stc
fisttpl
xchg
adc
sub
mov
or
cmp
adc
cmp
mov
xchg
inc
and
scas
inc
inc
and
scas
pop
outsb
testb
arpl
lods
inc
gs
leave
xchg
cli
clc
lods
push
mov
cmpsl
ret
mov
sub
ja
mov
cltd
sbb
loope
lcall
shlb
cmp
sub
mov
pop
ljmp
inc
repz
jmp
jmp
xor
sbb
jmp
mov
push
jge
hlt
jnp
fldt
outsb
cmp
cmp
adc
jno
insl
jp
out
pop
xor
jb
lock
nop
pop
push
pop
xor
jecxz
cmp
negl
pop
xchg
mov
dec
gs
clc
mov
xchg
sub
adc
xlat
es
cmpsl
out
popa
xor
pop
popa
lahf
jmp
xor
test
jae
add
mov
mov
lods
adc
cmp
inc
in
or
push
sub
pop
les
mov
aad
mov
xchg
pop
xchg
or
jl
pop
subl
test
pop
aam
daa
pop
outsb
xchg
pop
pause
insl
out
jg
push
adc
mov
out
js
imul
mov
test
jge
sbb
sub
test
dec
outsb
sbb
xor
push
sbb
or
inc
and
fcoms
mov
lea
or
cmp
mov
jecxz
pop
push
inc
faddl
scas
ss
lds
fdivrl
and
mov
adc
fildll
adc
lock
xor
fiaddl
enter
push
mov
xchg
sub
mov
fs
in
or
daa
addr16
in
or
or
faddl
mov
lock
or
push
add
fmulp
xchg
les
cmpsl
sub
iret
mov
sbb
outsl
add
shll
pop
iret
jge
cltd
pcmpgtb
adcl
mov
push
shrl
jge
mov
aam
mov
mov
xchg
out
jge
xchg
iret
daa
inc
inc
add
fstpt
jmp
xor
mov
jg
test
inc
pop
sub
and
mov
aad
push
jnp
pop
xchg
test
add
inc
mov
jecxz
imul
or
sbb
jle
or
add
ficoms
clc
push
jle
daa
pop
test
mov
insl
movsb
hlt
ret
jne
sbb
mov
fdiv
ss
cld
movb
xacquire
mov
and
mov
or
jb
xorl
scas
test
or
mov
ja
add
lods
hlt
sub
out
loope
jl
jmp
popf
push
stos
mov
and
jle
cmc
sub
cmc
xor
xchg
movsb
dec
sub
mov
xor
cmp
outsb
lods
and
cmpsb
lahf
outsl
test
fcmovne
push
adcl
or
int3
rcrb
call
cwtl
sub
adc
mov
push
pop
loope
pop
std
les
xlat
cmp
faddp
push
sub
out
or
in
subb
ljmp
sub
inc
rorb
jecxz
pop
arpl
and
push
es
push
xor
int3
outsb
sub
cmp
push
mov
imul
sbb
sub
mov
xchg
cmp
jnp
sbb
ror
cmp
pop
aad
pop
xor
arpl
out
sbb
cmp
mov
cmpsl
jbe
inc
xor
pop
psubsw
xor
pop
adc
xor
cmp
lods
pop
push
inc
ficoms
dec
sub
int
lcall
and
xor
fdivp
loop
dec
nop
sub
dec
sbb
nop
sbb
sub
aas
in
jl
xor
push
stos
push
popa
fs
lods
in
push
pop
rorl
xchg
jno
sbb
lea
ret
pop
pop
or
jo
xor
or
push
sub
cmp
fwait
ret
xorb
out
sub
push
hlt
pop
push
pop
stos
sbb
dec
push
leave
cmp
scas
je
fnstenv
ret
jno
in
dec
xchg
pop
adc
pop
test
pop
push
rcrb
movsb
rcrl
cwtl
adc
lea
and
je
inc
mov
int
push
mov
in
in
jmp
push
aam
push
or
fisubrs
stos
or
les
add
fnstcw
lahf
mov
pop
inc
daa
inc
jge
repz
movsl
fldt
lods
aam
mov
or
pop
dec
lahf
jg
imul
leave
bound
inc
stos
add
mov
push
xor
in
xchg
adc
test
pop
fdivs
or
cltd
xor
repnz
movsb
ss
test
push
sbb
mov
lds
push
sub
imul
jno
xor
pushf
add
mov
imul
mov
addr16
iret
push
cmp
leave
bound
into
mov
das
shll
and
xor
inc
pop
pop
sub
and
inc
sub
xor
push
pushf
cmp
mov
cmp
push
xchg
dec
sub
cmp
jecxz
fsts
adc
cltd
into
mov
les
pop
mov
data16
insl
test
fsubrl
mov
out
stos
icebp
xor
aad
xchg
cmpsb
aaa
movb
cwtl
loop
shr
adc
daa
sub
int
xor
mov
bnd
xchg
out
sbb
or
sbb
andl
fists
mov
push
outsl
das
xchg
or
fadd
test
data16
dec
pop
push
ret
adc
jbe
adc
mov
pmulhrw
or
aas
lds
push
inc
dec
outsb
outsl
inc
inc
clc
xchg
mov
xor
push
inc
add
out
push
push
stos
pop
scas
gs
cmp
push
dec
xchg
xchg
push
jo
jno
cmp
mov
sbb
shll
dec
xchg
xchg
sarb
cmp
xor
test
mov
sarl
dec
and
aas
cmpsl
sti
test
mov
jae
inc
clc
dec
jmp
push
aam
iret
gs
add
xlat
inc
aas
fistpll
in
cmp
shl
loopne
mov
inc
xchg
inc
adc
push
xor
add
mov
insb
jp
xchg
xchg
dec
outsb
adc
ret
sub
enter
loope
pop
xorb
mov
out
mov
stos
mov
push
dec
mov
dec
sarl
or
sbb
popf
or
jo
xchg
scas
mov
out
pop
pop
imul
pop
out
jl
or
scas
sbb
fists
insl
sub
add
dec
push
cmpsl
pop
cld
push
adcl
cmpsb
adc
pop
out
mov
les
or
cmp
aas
ja
orb
xor
mov
push
and
ret
daa
mov
sbbb
fdivrl
inc
mov
mov
insl
inc
push
mov
push
cli
pop
fptan
xlat
jns
icebp
add
es
xlat
negl
int3
test
aam
popa
fdivp
scas
and
or
pop
jno
jg
in
pop
lds
cmpsb
and
in
adcl
imul
popw
mov
fistpll
mov
lret
and
lret
mov
jge
ffree
ficoms
push
lret
or
icebp
insl
int
xor
xchg
mov
pop
scas
or
je
push
and
fisubrs
jno
or
sub
or
xchg
cmpsb
push
icebp
push
aas
ljmp
orb
mov
xor
sub
jns
cmc
gs
ljmp
mov
test
aaa
mov
mov
or
mov
lods
mov
pop
xchg
mov
gs
frstor
out
clc
push
movsl
sub
push
cmc
xor
call
mov
shll
xchg
jnp
push
fildll
je
inc
push
xchg
inc
clc
fstps
std
jecxz
sub
adc
or
sub
push
ret
push
ljmp
pop
sub
jle
in
dec
sub
mov
cmp
mov
xor
clc
into
test
dec
ret
pop
mov
adc
jmp
and
fdivrl
inc
push
and
in
inc
jge
mov
sarb
lock
pop
call
mov
xor
ficompl
adc
cmpsl
clc
pushf
cld
jne
inc
test
add
sti
sti
xchg
out
lock
dec
push
ja
add
add
add
lahf
cmp
or
lcall
dec
call
add
mov
pop
shrl
and
fisttps
movsb
lods
out
arpl
call
xor
repnz
test
inc
cli
inc
push
pop
push
arpl
pop
stos
test
mov
or
add
lahf
adc
jmp
mov
lahf
pop
cmp
mov
mov
das
iret
fsub
bound
sbb
mov
les
jg
loope
out
push
cmc
jbe
adc
je
imul
dec
push
push
sub
inc
mov
int3
lock
lahf
inc
pop
pushf
sar
adc
add
mov
adc
cmpsb
inc
leave
push
mov
sbbb
dec
in
cmp
mov
add
jbe
cli
mov
cs
fadd
stos
or
cmp
mov
cmp
aaa
test
negb
test
sti
arpl
in
incb
call
sub
push
fdivs
sbb
mov
pop
in
cli
xchg
int3
adc
aam
ljmp
adc
je
or
jl
sub
adc
test
xchg
push
aad
fidivrs
mov
mov
push
jae
xor
shll
ret
pop
loop
and
ja,pt
shlb
ja
mull
scas
pop
pop
cmp
in
lock
or
loopne
ss
push
inc
insl
and
lcall
cld
inc
push
jno
fld
int
arpl
inc
loope
push
aas
paddw
inc
repz
dec
dec
clc
ljmp
push
cld
repnz
inc
fcoml
dec
push
xor
dec
sbb
lahf
das
mov
inc
pusha
jo
fcmovb
loop
jmp
and
jmp
popa
jmp
arpl
or
iret
cltd
push
xlat
loope
test
dec
jnp
shll
pop
sbb
enter
push
sbb
clc
mov
arpl
pop
xor
jle
shlb
shl
adc
sub
inc
popa
mov
cmp
jne
orl
imul
and
subb
jne
icebp
pop
inc
inc
mov
out
push
loop
ljmp
xlat
lock
jg
mov
leave
or
jecxz
cli
pop
mov
lahf
ret
cli
cmpsl
inc
scas
test
cmpsb
pop
lcall
mov
xchg
shrl
popa
inc
xchg
loope
pop
dec
pop
addr16
xchg
iret
repz
aas
sub
js
shll
pop
stos
fiaddl
stos
adc
add
or
dec
inc
pop
inc
push
push
jo
stos
popa
std
test
xor
fabs
imul
aaa
test
lret
jmp
sub
mov
stos
lret
out
or
jg
xor
je
ss
or
dec
mov
pop
xchg
fldenv
out
sbbl
jle
xchg
sbb
mov
nop
xchg
pop
ffreep
test
push
dec
xchg
jns
dec
lods
idivb
mov
pop
clc
dec
leave
mov
sbb
into
pushf
aad
cmp
call
jmp
jno
mov
decb
movsl
inc
jmp
mov
lds
out
adc
xchg
push
fisttps
sbb
fdivrp
push
imul
push
pop
sbb
cmpw
pop
popa
js
testb
fcmovu
or
add
jg
add
inc
xor
xor
push
pop
sub
scas
adc
cmpsl
mov
out
push
ds
xchg
mov
gs
push
mov
inc
fsub
and
sahf
loope
icebp
in
adc
test
shrb
dec
divl
lret
dec
imul
movl
push
mov
or
mov
mov
dec
sahf
outsl
push
adc
sbb
and
arpl
cmp
push
sub
icebp
das
xchg
xor
lcall
mov
int
lahf
xor
iret
out
inc
lods
xchg
rolb
andl
xchg
ret
inc
lret
and
sbb
cmp
ja
adc
rcll
jae
movsb
dec
or
cmp
fsubs
loope
pop
sbb
jae
cmp
enter
rclb
imul
pop
stos
sbb
inc
adc
icebp
dec
mov
sbb
lock
stc
push
or
dec
rorb
mov
imul
sarw
pop
mov
nop
pop
pop
add
jbe
inc
cmp
inc
jl
sbb
les
adc
mov
pop
sub
dec
imul
movsl
xchg
ret
push
xchg
fcmovb
inc
fsubr
stc
ljmp
roll
int
shl
jo
or
fisubl
lea
mov
mov
xchg
je
ds
inc
mov
addr16
pop
mov
adc
scas
mov
andb
int
jb
dec
cltd
jno
imul
sub
ljmp
ljmp
jae
movsl
dec
ret
mov
lea
or
imul
and
in
add
fadds
ja
and
inc
pop
fadd
addr16
dec
xchg
and
jecxz
dec
bound
mov
adc
mov
enter
and
xchg
inc
ljmp
into
and
rcr
mov
sub
idivl
in
fs
sbb
adc
cmp
adc
inc
and
sbbb
addl
cmpsb
pop
pop
cs
pop
cmp
fs
pop
xlat
iret
sub
xchg
fwait
je
jmp
push
loope
inc
lret
or
sbb
bound
aam
pop
and
dec
cmp
insl
pop
es
data16
add
stos
popa
jp
adc
mov
ret
sub
test
outsb
push
rcll
sub
xchg
out
cs
add
cmp
push
xchg
enter
sbb
cmpl
ds
cmpsl
push
pop
cmp
adcb
les
jmp
pop
js
push
movsb
lods
leave
outsb
sub
sub
push
gs
bswap
loope
fisubrs
sub
rcll
add
leave
jg
and
and
repnz
pop
push
insb
ljmp
andl
outsl
inc
movsl
dec
or
dec
shr
mov
das
cmp
push
fwait
pop
xor
jmp
das
arpl
in
jae
push
rcl
dec
aam
xchg
out
or
cmp
ljmp
nop
arpl
in
jbe
movsb
ss
jb
or
jb
stc
jmp
sub
addb
and
pmaxsw
data16
and
stos
std
into
xor
test
mov
test
sbb
in
fwait
sbb
xchg
push
fs
mov
or
mov
cmp
in
mov
mov
push
loop
mov
or
jb
imul
jmp
rcrb
inc
add
inc
js
idiv
and
clc
int
xchg
ss
int3
cld
pop
pop
clc
int
fimuls
repnz
dec
push
push
out
icebp
pop
call
rclb
iret
lea
imul
pop
out
sbb
cmp
add
gs
ss
cmp
xorb
popa
push
sarb
jle
xor
sub
add
xchg
int
fmulp
lcall
add
push
scas
lcall
movsb
mov
cld
cmp
ret
mov
mov
xchg
cmp
shl
insl
jne
sbb
aam
xchg
in
das
jp
push
inc
lea
mov
xchg
into
mov
jmp
cmpsl
mov
mov
mov
cmc
pop
inc
jmp
fcompl
lahf
sub
xchg
mov
or
xchg
test
ds
xchg
adc
dec
cmpsb
scas
xchg
adc
lods
push
sahf
cs
mov
movsl
cmc
imul
push
out
pushf
lods
clc
cld
out
inc
dec
test
push
sarb
adc
gs
lahf
cmc
iret
mov
inc
and
xchg
lret
cmp
sbb
or
sbb
sarl
and
xor
pop
mov
adc
mov
jg
push
outsb
pop
cwtl
adc
cmp
std
iret
adc
clc
xlat
test
cwtl
pop
sbb
xchg
js
dec
push
xor
pop
xor
or
push
fld
popa
loope
ljmp
jnp
cmp
pop
mov
sub
into
test
jbe
repnz
insl
cmovbe
jns
mov
nop
jge
mov
sbb
mov
data16
mov
jno
cltd
testl
dec
shll
imul
inc
adc
aaa
mov
dec
sub
loopne
jbe
xor
jge
mov
out
and
xchg
sub
inc
loope
push
pop
mov
dec
xchg
mov
sbb
jmp
ja
mov
sbb
pop
inc
lock
in
jge
jb
in
imul
addb
mov
push
push
cwtl
pop
fwait
out
gs
bound
repz
shl
xchg
xlat
icebp
jns
cmp
jo
and
cmpsb
xor
sub
in
xchg
xlat
mov
push
dec
clc
ret
lret
mov
adc
sarl
hlt
lds
and
loopne
jno
inc
adc
dec
scas
enter
shrl
add
sub
jne
xor
movsb
mov
jo
fistps
js
mull
adc
inc
jp
dec
in
sbb
push
and
or
popa
or
adc
mov
add
loop
dec
nop
pop
gs
or
add
mov
sbb
aas
inc
mov
xchg
jmp
jmp
into
hlt
pop
ficomps
jmp
add
xor
arpl
mov
shlb
mov
test
not
xor
cmpsb
imul
sbb
jmp
mov
or
call
push
mov
outsl
xor
in
inc
push
mov
lahf
addr16
es
mov
arpl
add
push
sub
fwait
pop
lods
inc
jmp
pusha
xchg
fsubs
pop
lret
jge
outsl
addr16
and
xor
js
push
or
push
imul
je
pusha
xor
or
jno
mov
cmc
xor
jb
popa
or
sbb
mov
les
les
lods
jle
xor
icebp
fdivs
aam
cmp
outsb
dec
clc
add
lock
sbb
push
cmpb
jmp
cmp
daa
xor
mov
sub
sbb
ljmp
push
jmp
xchg
movsl
xchg
and
roll
xchg
sbbl
addr16
scas
xchg
dec
cmp
jecxz
movsb
mov
push
mov
imul
mov
outsl
test
repz
sub
orl
mov
mov
nop
add
outsl
loope
pop
cli
int3
test
dec
out
cmp
ja
xchg
out
repz
leave
push
jp
movsl
cmp
in
sbb
cmp
repz
leave
or
xchg
stc
lds
dec
xchg
scas
stos
lret
pop
mov
gs
pushf
stos
jg
daa
push
arpl
incl
mov
sbb
mov
fdivs
jl
add
lcall
inc
mov
lret
ja
iret
sbbl
push
mov
cld
or
test
mov
gs
inc
jecxz
hlt
out
push
dec
mov
mov
xchg
ss
xorb
fisttpl
es
jg
lods
sbb
cmpsb
lret
xlat
xchg
stos
pop
mov
arpl
fmulp
vcvtsi2sdl
out
lds
push
fwait
adc
mov
imul
ds
mov
jmp
ja
icebp
adc
dec
fimuls
mov
xchg
ret
cmp
jns
enter
out
jl
out
lods
adc
cmp
and
adc
outsb
mov
inc
in
cmp
or
scas
jle
out
cmp
fcomp
jnp
jmp
cmp
xor
inc
jae
sub
shr
fisubl
dec
insb
inc
jmp
fwait
ja
xor
jb
loope
outsb
movsb
lods
lahf
jbe
repnz
mov
xchg
jo
mov
dec
and
lds
ss
movsl
inc
sub
test
push
test
loop
and
mov
xor
mov
mov
jae
dec
pusha
out
aad
into
xorl
ret
mov
push
dec
xchg
lret
sbb
inc
or
xchg
inc
into
cwtl
mov
out
dec
jno
stos
push
cmp
pushl
gs
lea
push
fnstcw
cs
mov
xchg
pop
add
orl
loopne
mov
mov
aaa
xlat
arpl
in
out
jo
inc
pop
imull
repnz
inc
dec
hlt
scas
lods
push
pusha
mov
sbb
call
scas
popf
das
movsl
adc
xchg
xor
xchg
aad
les
aad
push
adc
sub
jne
inc
mov
shl
jmp
sahf
push
pop
dec
test
push
push
inc
mov
arpl
out
dec
and
jge
fcompl
add
dec
ljmp
mov
mov
popf
mov
pop
hlt
adc
mov
jno
call
in
sbb
clc
xchg
jo
xor
sub
scas
andl
sahf
sbb
sbb
incl
lds
pushf
pop
hlt
mov
movsl
jl
pop
shlb
shll
out
fcoms
sub
lds
sub
xchg
and
cmp
xchg
mov
sbb
data16
aam
scas
leave
popf
sub
in
pusha
and
lret
dec
sub
mov
xor
in
inc
lods
int
dec
lret
into
and
test
in
mov
xchg
mov
sub
xchg
jl
jnp
fwait
out
add
test
xchg
out
adc
mov
test
xchg
hlt
sub
not
jle
neg
jle
ljmp
push
fincstp
jb
clc
jmp
into
loop
xchg
insl
or
cmp
in
out
fsubrl
and
pop
sarl
jecxz
outsb
xchg
sbb
scas
jecxz
or
jmp
add
jp
jp
add
and
cltd
cli
sub
and
das
inc
cmpsb
andl
adc
mov
test
in
bound
cli
aaa
xchg
dec
and
frstor
adc
jge
xchg
pop
test
fld
ret
jne
adc
mov
pop
inc
mov
mov
xchg
icebp
sub
stc
push
push
out
add
adc
lret
daa
adc
mov
pop
into
jmp
lahf
repz
xorl
movsl
push
fwait
jno
call
pop
loope
push
push
decl
loope
ss
cmp
scas
popa
mov
or
fimuls
push
push
cmp
stos
sbbl
dec
push
cld
inc
mov
lcall
outsl
jmp
aam
push
add
out
mov
stos
mov
lods
out
xchg
iret
daa
out
ja
mov
mov
pusha
jmp
mov
xchg
xchg
push
je
xor
ret
iret
jbe
or
sub
mov
pop
lahf
lret
ret
fstpt
loope
inc
cli
mov
push
jne
filds
xchg
fidivrs
flds
stos
andl
xchg
je
clc
ret
push
mov
cmc
xchg
push
xor
cmpsl
push
mov
jp
sub
movl
or
jle
or
repnz
adc
jbe
gs
lds
loopne
or
mov
push
inc
mov
mov
loope
add
outsl
mov
fsubs
sbb
xchg
cmp
inc
iret
push
inc
dec
std
out
add
pop
out
cmp
popa
incb
xor
jo
std
cmp
pop
fstps
jne
cmc
sahf
jle
test
dec
dec
addr16
mov
imul
inc
xlat
push
mov
pop
popl
loop
incb
and
cmovns
ret
insl
cltd
xor
dec
ljmp
pop
insb
push
cmpsl
pop
mov
adc
mov
pop
inc
and
fnsave
test
mov
repz
jg
push
pop
rorb
or
cmp
mov
out
ret
ljmp
xor
inc
fstpl
mov
add
push
or
imul
pop
int
mov
inc
rcl
imul
cmpsl
std
aas
jmp
push
and
dec
sti
bound
and
adc
shl
aad
ffreep
jne
push
loopne
jb
pop
loopne
dec
pop
or
cmp
sub
cmpsl
aad
test
pop
pop
sbb
xchg
jge
mov
cmp
out
cli
cmp
aad
cmp
add
fcmovbe
xlat
pop
stos
out
repnz
push
lock
jno
sti
jecxz
or
sarl
ss
pop
or
add
jmp
xchg
test
mov
clc
bound
movsl
rcrl
shr
jno
cmp
cmpsb
aad
xchg
sti
arpl
mov
and
xor
jp
mov
ss
popa
mov
sbb
mov
pop
sub
mov
push
and
fs
mov
and
lea
mov
cmc
sub
lods
jmp
pop
leave
hlt
faddl
adc
cmpsb
imul
mov
std
mov
adc
test
mov
mov
mov
and
mov
adc
pusha
mov
xchg
icebp
mov
xchg
cmp
xchg
dec
jp
adc
jge
adc
imul
xchg
repnz
jno
mul
jle
lock
shll
jl
dec
orl
cmc
test
shll
popa
sbb
sbb
cmp
imul
inc
mov
rcrb
cmpsl
testb
in
xchg
movsl
sbb
outsl
pop
add
lock
sub
mov
sbb
nop
bound
aam
push
cs
add
fsubrl
int3
pop
push
inc
xlat
mov
ret
addr16
out
pop
push
in
shlb
jmp
sbb
cld
sbb
daa
repz
or
dec
stos
stos
repz
push
and
arpl
ljmp
loopne
push
jbe
cli
arpl
daa
insl
test
xor
int3
test
mov
or
and
into
xor
rcr
and
adc
or
not
cli
rol
jmp
loope
mov
and
lret
inc
fisttpl
aaa
and
insb
sbb
add
adc
push
loope
into
sbb
cmp
and
dec
movsl
call
mov
pop
adc
mov
sbb
imul
addr16
mov
cmp
or
xchg
xchg
cmp
cmp
xor
and
dec
int
push
int3
mov
mov
jp
fbld
push
sub
cmpsl
jecxz
jp
jp
loop
mov
mov
inc
mov
dec
sbb
adc
xor
adc
jo
mov
mov
xchg
test
pop
orl
xchg
jb
pop
test
and
js
cmpsb
test
xor
fimull
mov
pop
add
and
popf
orb
aaa
mov
movsl
dec
cmpsl
out
in
scas
mov
pop
adc
roll
cmpsb
fmulp
ljmp
leave
mov
aas
iret
mov
or
mov
xor
hlt
ret
dec
aaa
roll
push
insl
xchg
fildl
ja
or
iret
mov
sbb
push
fnstenv
bound
negl
xchg
xchg
pop
jmp
jnp
sub
and
dec
adc
negb
jp
push
cltd
leave
inc
push
cmpsb
mov
pop
and
dec
jl
xchg
aam
cwtl
sbbl
imul
repz
mov
in
lods
mul
sahf
adc
xchg
jmp
mov
dec
call
pushf
jns
push
pop
adc
cmp
test
mov
cwtl
hlt
push
inc
jmp
loop
mov
and
or
insb
jl
out
out
aas
jb
add
outsb
std
lret
adc
inc
xor
pop
ds
imul
filds
out
rcrl
clc
ret
pop
sbb
dec
in
xchg
imul
pop
in
push
mov
add
aaa
test
pop
aas
fnstsw
adcl
imul
sbb
dec
pop
push
fsubs
test
pop
mov
aam
mov
inc
push
dec
les
repz
xorl
aaa
pop
ja
lret
add
adc
add
outsl
data16
mov
aas
pushf
loope
dec
sbb
lret
call
cmp
inc
sub
add
push
imul
dec
xchg
and
push
roll
call
mov
gs
inc
mov
imul
inc
stos
cmp
push
mov
iret
mov
dec
out
cmp
fucomip
int
and
add
insb
add
push
pop
test
gs
daa
lea
xor
lahf
lds
stos
jg
jecxz
out
out
out
cmc
mov
mov
push
mov
or
dec
jns
mov
adc
out
or
icebp
cmp
clc
pusha
daa
mov
insl
cmove
xchg
int3
aas
or
mov
fcmovbe
adc
add
ret
xorb
and
cmpsb
ds
cwtl
fucomi
lahf
jp
lfs
lahf
lret
pop
adc
int
add
jns
cmpsb
or
dec
sub
add
fld
push
add
mov
sbb
push
mov
decl
das
sbb
js
insl
ret
aam
jg
imul
je
fnop
cmp
sbb
les
pusha
dec
push
inc
out
shlb
push
pop
mov
loope
jecxz
pushf
into
cmpsb
mov
jnp
fcmovnu
inc
jnp
rcr
mov
bound
lea
add
mov
sbb
lods
mov
lret
jle
cmpsl
test
icebp
jmp
or
mov
pop
in
cli
or
cwtl
stos
lods
mov
jg
cmpsl
dec
dec
clc
mov
mov
jbe
jp
cltd
popf
sbb
test
and
cltd
les
dec
aam
push
jb
scas
pop
and
mov
xor
fistl
jge
pop
out
jne
dec
popfw
xchg
ja
pushf
jecxz
inc
add
cwtl
adc
push
stc
fidivrs
or
push
inc
mov
mov
adc
pop
lods
cltd
cs
pop
cmp
and
dec
into
pop
mov
aam
mov
repz
jo
sub
jge
push
fsubrs
xlat
test
push
shrl
cmpsb
test
xchg
mov
fs
push
mov
lods
xchg
mov
mov
push
or
add
or
dec
cmpsl
jmp
iret
add
test
or
rdpmc
mov
pop
sbb
mulb
imul
lret
clc
flds
inc
scas
iret
jne
fwait
push
jnp
mov
sbb
xchg
rcrl
stos
lds
mov
ret
gs
test
jge
or
mov
cmp
fs
sub
mov
or
sub
ss
jge
adc
lods
mov
mov
push
mov
mov
push
mov
cmp
cs
pop
cs
gs
lods
mov
dec
adc
scas
mov
mov
xchg
out
test
dec
or
pop
lret
push
jp
test
jo
dec
sbb
xor
sub
push
mov
sbb
ja
hlt
mov
stos
dec
ret
idivb
xchg
xchg
scas
sub
fcmovne
adcb
icebp
adc
xor
jbe
and
add
pop
or
pop
and
outsb
packssdw
aaa
sti
sbb
dec
jl
mov
dec
mov
int3
in
aas
sbbl
lock
arpl
pop
popl
add
nop
pop
fs
js
sahf
inc
aam
add
repz
inc
push
outsb
cmpsb
jle
test
xor
stc
dec
push
cmpsb
jmp
frstor
mov
or
loope
inc
sbb
stos
mov
filds
aam
bound
cmp
or
and
insb
lea
mov
xchg
xchg
or
pop
data16
inc
cmp
cltd
andl
test
or
iret
pop
aad
or
xlat
arpl
inc
or
mov
xor
aas
mov
sbb
daa
add
xchg
fldl
push
fisubs
std
mov
aaa
adc
push
test
popf
test
test
lahf
dec
pop
repnz
push
in
fsts
into
mov
pop
ja
or
cmp
lods
dec
inc
sbb
cltd
stos
and
xchg
sbb
push
jno
adc
loop
pop
and
adc
lret
jg
shll
lahf
scas
dec
loopne
mov
roll
inc
es
mov
out
dec
jae
outsl
outsl
cmp
adc
fs
imul
pop
mov
inc
mov
rcrl
push
xorb
sarb
push
inc
adc
addr16
das
movsl
xchg
sub
ret
arpl
aad
mov
insb
dec
lods
int
jae
mov
inc
hlt
jns
pop
add
cmp
in
push
mov
mov
mov
decl
leave
fwait
lods
dec
flds
aas
inc
ljmp
addr16
jno
or
addr16
xorl
dec
sub
pop
dec
pop
sub
mov
popf
lahf
adcl
ds
add
pop
cmpsl
cwtl
repnz
clc
dec
sub
enter
jb
cmp
int
jbe
mov
xchg
xchg
repz
mov
pop
fstpt
fstps
mov
push
insb
dec
cs
xchg
aad
push
lock
daa
sub
adc
subb
xor
sub
dec
jbe
mov
cmp
or
rclb
jecxz
mov
mov
pop
bound
or
call
fisubrs
pop
out
dec
mov
push
dec
mov
jge
in
dec
push
call
inc
subb
and
jae
cmp
into
pop
cmp
push
fidivs
add
std
push
clc
ss
pop
rcrb
sbb
clc
pop
push
dec
cld
pop
in
add
inc
out
adc
aas
xor
cld
in
mov
cmpsl
mov
mov
lcall
jbe
or
adc
clc
out
scas
inc
sbb
mov
xor
adc
out
inc
sub
sbb
lods
adc
aaa
mov
inc
sub
xchg
lret
daa
sbb
ud0
or
add
shll
rcll
push
rcll
mov
insl
dec
adc
clc
add
inc
loopne
ja
sbb
nop
popa
ret
into
bound
add
movsb
push
test
adc
jbe
cli
or
inc
cwtl
test
sti
sub
popf
and
fadds
cltd
cmp
jb
and
into
sahf
es
dec
cmp
jb
stc
test
out
jae
jb
and
ljmp
arpl
pop
addr16
pop
notl
cmpsb
pop
xor
movsl
popw
pop
dec
arpl
in
lds
cmp
dec
sbb
lods
fimuls
test
outsb
and
ds
jno
mov
pop
cli
xlat
outsl
movsl
lock
aaa
cltd
mov
push
or
sub
insl
pop
adc
pop
les
mov
adc
xchg
inc
dec
das
enter
lcall
insb
dec
aam
push
push
pusha
movsl
mov
jb
push
lock
mov
xor
loope
stos
or
inc
adc
dec
cmp
neg
mov
adc
xor
and
adc
cmpsl
dec
sahf
scas
cld
mov
or
sahf
push
cs
out
fcoml
xchg
fstps
mov
pop
outsb
adc
adc
test
adc
ja
lea
mov
or
pop
dec
adc
push
arpl
mulb
popf
dec
fimuls
xor
push
dec
adc
insl
push
fisubrl
rcll
loop
jbe
es
lret
jecxz
idivb
adc
mov
mov
imul
mov
and
fucomp
xchg
pop
jle
push
out
dec
inc
mov
mov
lds
mov
dec
fcoms
jb
mov
or
lds
xchg
jno
lahf
mov
mov
or
loope
stos
jns
pop
xchg
or
and
pushf
cwtl
or
xlat
inc
xchg
fistpll
adc
jecxz
and
lret
adc
stos
inc
or
pop
or
sub
mov
mov
sub
movsb
pop
imul
loopne
testl
lret
mov
icebp
mov
push
inc
or
inc
dec
dec
mov
dec
pop
jb
mov
cmp
or
xor
inc
jno
arpl
lea
cmc
jmp
inc
ss
adc
inc
aad
jl
push
cltd
dec
repz
test
xor
xchg
xchg
stos
push
pop
arpl
ds
out
les
mov
fists
xchg
ret
xor
cmpsb
arpl
pop
sub
inc
movsl
out
push
lret
xchg
or
ret
sub
mov
in
divl
call
adcb
cmpsl
lods
sub
sbb
dec
and
jae
sbb
and
sub
fs
lds
das
adc
popa
imul
arpl
aam
cs
loopne
jle
xchg
rcl
ds
inc
xchg
out
push
vmwrite
push
mov
stos
loopne
or
aad
lret
aad
mov
jmp
fstps
sti
inc
lea
jp
lods
pop
into
arpl
sub
call
inc
jne
ficompl
pop
sbb
mov
das
test
frstor
lret
popaw
jp
mov
mov
aaa
xchg
jecxz
arpl
jae
jnp
mov
xchg
cmpsb
or
push
adc
fs
shr
je
gs
push
das
rcll
jbe
add
mov
out
cmp
xchg
lods
pop
xchg
fucomi
daa
rcl
loopne
arpl
cld
es
js
lods
fcmovnb
mov
pop
andl
aad
test
rol
jne
inc
mov
xchg
push
popa
std
cmp
ljmp
fsts
mov
rolb
xchg
and
testl
or
pop
insb
ja
cli
or
push
jbe
xchg
movsb
xor
mov
shlb
lahf
out
std
mov
sub
aad
mov
push
sbb
scas
mov
adc
jae
push
push
xor
push
xor
out
push
inc
cwtl
mov
lret
enter
jge
sub
push
inc
jge
mov
daa
pop
sbb
lahf
addr16
cs
mov
jns
mov
xor
cwtl
xor
loope
inc
adc
notb
jl
adc
cmpsb
xchg
aad
aam
es
xchg
lock
movsl
ffree
push
jp
pop
insl
mov
je
or
add
xchg
xchg
or
push
mov
cmpsl
rcrb
dec
das
cmp
fwait
sub
ljmp
lock
call
or
imul
mov
cltd
push
adc
xor
movsb
test
int
orl
xor
or
bound
cwtl
xlat
adc
adc
mov
gs
stc
test
daa
adcb
sbb
sbb
test
lods
or
cli
push
cld
insl
int3
pop
inc
add
test
popa
sbb
data16
add
ret
imul
rclb
in
sub
pop
or
stos
push
jmp
out
sub
cmpsl
push
roll
jmp
loopne
dec
jle
imul
mov
pusha
test
sbb
jle
or
push
and
fsubl
test
pop
mov
mov
lret
mov
stc
fnstsw
faddl
test
inc
push
out
mov
jnp
push
adc
pushf
push
out
push
fnsave
stc
sbb
push
lds
jp
cmpsb
pushf
int
outsb
fsubr
lds
hlt
dec
jge
cmp
das
dec
outsb
xchg
sub
or
jbe
mov
add
or
inc
and
sub
in
mov
repnz
or
or
test
sub
dec
adcb
call
sti
mov
ss
xor
sub
out
movsb
jo
test
jmp
or
jg
mov
jne
subb
shll
dec
add
out
sub
lret
je
add
mov
lahf
outsl
aam
sti
cltd
rol
and
in
mov
stc
in
adc
ds
in
cmpsb
loope
fdivrl
xchg
pop
decl
lods
in
push
pop
nop
inc
in
add
fmuls
xlat
jnp
sub
cmp
filds
addl
and
jp
add
cmpsb
js
cli
call
in
cmp
and
jecxz
dec
lret
bound
stc
cmpsl
jae
cmp
fsubl
in
fcoml
dec
shll
enter
stos
fwait
mov
xchg
add
in
sbb
mov
sub
testl
adc
ret
and
ret
jne
sub
sub
dec
rorb
lods
jnp
mov
aas
fs
push
addr16
clc
pop
push
and
imul
mov
out
jg
fstpt
cmp
xchg
mov
movsb
pop
add
movsb
jl
testl
test
mov
add
test
jae
cmc
xchg
insb
mov
das
sarb
pop
and
loope
mov
xchg
mov
aas
movsl
sub
orl
cwtl
addr16
dec
leave
mov
sbb
mov
mov
jge
movsl
lret
ret
lea
sahf
lcall
pushf
mov
pop
andl
stc
push
pop
pop
clc
in
outsl
and
add
cmp
clc
inc
call
loope
sub
push
xchg
loopne
jle
nop
lods
pop
inc
inc
inc
vlddqu
mov
cmp
xor
xchg
jbe
add
and
sub
fisubrs
mov
jae
icebp
or
jp
mov
je
mov
pop
pop
jecxz,pn
sahf
iret
cld
loop
or
sub
add
dec
mov
iret
mov
or
in
fstpt
push
aad
cmpsb
mov
pop
ret
mul
clc
out
and
insb
add
xchg
cmp
add
cld
and
jbe
jmp
iret
adc
sarb
dec
aaa
int3
js
pop
and
mov
xlat
fimuls
jmp
or
inc
pop
inc
shlb
sub
int
or
xchg
inc
incb
and
dec
sub
stos
mov
or
int3
mov
scas
inc
pop
test
cld
hlt
into
cmp
out
loop
jo
decl
or
fdivs
mov
scas
cmp
or
adc
notl
sub
push
lods
cmc
scas
sbb
int3
int3
mov
push
not
xchg
stos
jecxz
out
sbb
push
inc
mov
ffree
movhps
mov
lret
insl
push
and
inc
dec
aam
pop
mov
rcl
out
xchg
sbb
jnp
dec
push
out
popa
inc
sub
enter
mov
xchg
aas
lds
das
lods
mov
mov
dec
and
gs
cli
out
push
cld
out
clc
mov
and
popf
cltd
movsl
mov
mov
iret
cld
jo
add
gs
in
xchg
mov
adc
jp
test
call
dec
inc
xchg
popf
mov
dec
pop
ljmp
shlb
push
cwtl
repnz
mov
test
mov
push
inc
dec
sbb
repnz
adc
lret
xchg
push
pop
dec
loope
stc
mov
xor
cmp
clc
jg
pop
xor
push
cmp
jns
dec
iret
outsb
pop
out
xchg
xchg
pop
lods
in
push
movsl
ret
lret
xchg
adc
shll
nop
testb
add
or
rorl
mov
cmp
int
sub
in
imul
xor
adc
sbb
movsl
pop
testl
mov
or
mov
add
mov
dec
mov
popa
mov
pop
jp
mov
mov
popa
fwait
nop
cli
cmc
or
xor
mov
or
test
out
mov
dec
mov
or
daa
les
mov
sahf
orl
and
lods
mov
lds
sub
mov
add
fdivs
xor
mov
daa
into
enter
xchg
pop
sub
xchg
inc
xchg
or
stos
arpl
sub
shlb
add
dec
repz
shr
dec
pop
dec
pop
jbe
jmp
repnz
ficoml
mov
and
call
cmpsl
lods
gs
or
sbb
and
cli
mov
std
mov
push
cmpsb
ror
push
addr16
jno
mov
lds
xor
jbe
testb
ja
je
dec
mov
out
add
in
stos
repz
call
sbb
bound
shl
jecxz
insl
sub
mov
and
xor
int
idivl
addb
loope
push
xchg
and
xchg
push
sub
clc
inc
jle
out
dec
jo
into
popa
pop
loop
loop
pop
pop
aaa
jno
xor
fcmovnbe
jno
and
push
push
dec
cli
gs
push
cwtl
hlt
daa
das
andb
xchg
inc
inc
pop
push
in
fdivrs
and
rcrl
push
adc
sbb
or
cmpsl
mov
dec
iret
stc
or
int
insb
or
xchg
mov
ljmp
ja,pn
xchg
mov
dec
xchg
jecxz
mov
add
jmp
sbb
stos
pop
dec
add
add
adc
sub
pop
inc
xor
mov
fldl
sbb
in
jb
mov
mov
add
fs
mov
inc
sub
in
jb
addr16
dec
movsl
jnp
fstpt
inc
stos
sbb
pop
xchg
or
mov
cmp
je
daa
arpl
cltd
inc
and
lahf
pcmpeqd
out
lahf
cmpsl
dec
mov
jnp
cli
dec
mov
xchg
int
rorl
gs
mov
and
cmp
clc
add
and
xor
mul
icebp
cmp
mov
cmp
cmp
or
cmpsb
pop
je
jae
xchg
enter
out
jl
and
scas
jecxz
mov
mov
xor
jmp
scas
push
pop
nop
xlat
cmc
dec
mov
test
out
sub
mov
and
adc
ret
dec
mov
jae
sub
push
xchg
das
pop
xor
jns
dec
mov
lea
imul
pop
jae
jmp
push
xchg
sub
inc
jl
adc
leave
xchg
mov
daa
addb
leave
cld
icebp
inc
lods
movb
iret
mov
mov
pop
jecxz
xor
pop
mov
cmpsl
lret
or
xchg
sbb
pinsrw
push
mul
lea
shr
lahf
mov
xor
int
mov
and
jb
movsb
fs
xchg
xor
sbb
pop
out
push
lahf
daa
in
jbe
leave
xlat
mov
ss
inc
jne
je
mov
das
xor
repz
iret
aam
or
stos
inc
push
and
sti
lds
roll
pushf
cmp
cmp
arpl
mov
rolb
and
sbb
fnsave
cmp
leave
test
pop
movsb
repz
mov
out
arpl
ljmp
fstpt
pmuludq
jbe
imul
loope
xor
fldcw
lds
adc
idivl
aad
mov
push
addr16
inc
add
iret
jecxz
sub
mov
sub
mov
mov
inc
clc
mov
and
sub
lret
pop
mov
ja
out
dec
sbb
pop
dec
or
xchg
sbb
pop
sbb
das
cmp
adc
rcrb
vpaddq
add
and
aad
inc
mov
mov
cmp
mov
out
imul
inc
pop
pop
sti
fisubs
cmp
int
fnsave
and
fs
or
push
popa
xor
and
aad
xchg
outsb
js
sbb
pop
jns
adc
leave
lods
nop
in
cmc
sub
mov
pop
iret
cmp
pop
push
push
out
jae
sbb
jbe
ss
lret
aam
insb
push
in
fstpt
shl
in
aad
pop
mov
xchg
or
dec
stos
rorb
leave
pop
je
jnp
dec
clc
and
loope
or
inc
mov
fidivrl
dec
outsb
ret
sbb
out
sbb
push
push
cltd
xchg
mov
mov
add
mov
xchg
ja
repnz
mov
scas
fsubs
cli
sbb
pusha
adc
mov
out
sbb
cld
or
outsb
test
dec
add
fstpl
shlb
pop
sahf
inc
add
and
rorl
je
inc
dec
mov
add
pshufw
stos
dec
xchg
out
push
sbb
jmp
lret
sti
sbbb
nop
aam
push
scas
or
pop
movsb
jp
xchg
mov
ja
cmp
mov
xchg
cltd
cltd
cmp
inc
scas
add
jnp
push
push
inc
xchg
adcb
test
xchg
loop
je
cmp
addr16
xchg
xor
push
sub
das
mov
xchg
test
mov
out
push
decb
stc
arpl
jbe
jbe
pop
sub
iret
je
shl
inc
leave
and
sub
cli
pusha
movb
mov
pop
and
or
push
inc
cmc
ja
hlt
adcb
int
push
insb
sub
sub
inc
int3
mov
andl
outsl
sub
movsb
push
or
sbb
add
pop
lds
or
push
mov
les
lds
sbb
cmpsl
sbb
mov
aam
mov
mov
push
stos
ja
jne
idiv
iret
and
pop
push
mov
not
lahf
arpl
inc
lahf
and
and
mov
sub
hlt
lds
and
int3
sti
sub
mov
jmp
push
cmp
adc
sbb
aaa
fxch
fstpl
xor
ret
fucomp
xor
cmpsb
or
adcl
popa
jmp
jbe
fidivrs
movsb
fisttpll
push
aam
shrl
inc
movsl
add
xchg
cmp
ss
aas
sbb
leave
inc
or
fldenv
add
cli
sub
dec
call
adc
loope
movsl
mov
mov
push
xchg
dec
mov
repz
in
ljmp
ficomps
dec
inc
fisubrl
xlat
mov
jns
icebp
leave
aam
jno
std
xchg
lds
xorl
sbb
enter
dec
aas
jl
fistl
and
cmpb
sub
mov
test
jns
sub
pop
push
fdivl
add
xor
out
in
xchg
pop
in
xchg
cmpsl
out
icebp
loope
mov
test
out
out
adc
xchg
daa
jg
outsb
lahf
jns
lcall
mov
cmp
adc
rcrl
push
stos
orb
into
and
cwtl
loope
add
push
pop
das
xor
mov
xchg
out
int3
ja
fiaddl
xchg
push
loope
xchg
ret
sbb
cmp
jmp
push
xchg
sub
push
pop
clc
js
mov
jecxz
dec
test
sarl
or
mov
data16
xlat
lcall
cli
jne
or
mov
pushf
jg
lcall
mov
push
xchg
jg
cmp
jmp
mov
hlt
out
push
fdivs
dec
jge
sbb
out
dec
stos
cmpsl
mov
dec
lret
jb
or
es
js
cmp
adc
xchg
sbb
xlat
test
mov
mov
cltd
dec
push
sbb
xchg
mov
aas
dec
or
dec
jb
popa
xchg
adc
and
mov
sub
jae
out
cmc
sbb
pushf
sahf
sub
mov
sub
mov
enter
out
js
out
std
aas
mov
sbb
jno
mov
xchg
test
dec
adc
nop
pop
orl
movsl
mov
or
and
add
leave
out
jg
mov
repz
jno
sti
jle
push
or
popa
lds
inc
repz
aam
hlt
pop
xchg
fdivp
stos
cli
mov
out
fsts
pop
inc
sbb
shr
mov
push
gs
lret
pop
jp
push
pushf
mov
xchg
scas
pop
orb
push
imul
lea
mov
addr16
pop
push
mov
pushf
xor
cmp
dec
repz
or
loop
scas
iret
or
mov
pop
sti
test
dec
mov
jmp
cld
xchg
or
fwait
aas
cmp
and
fstl
daa
xchg
sbb
pop
add
addb
mov
stc
movsb
movsl
jmp
in
lds
add
in
rorb
jo
or
int3
pop
pop
inc
add
test
or
call
lret
sub
adc
fucomip
jmp
sub
repnz
and
pop
andl
pop
loope
arpl
int
dec
adc
mov
imul
ds
cmpsl
and
orb
int
iret
orl
jge
lods
icebp
lods
sub
movsb
rcll
js
outsl
sbb
scas
ficompl
dec
pop
scas
stos
imul
cltd
sahf
mov
xchg
xor
aad
bound
pop
fimull
gs
and
pop
sub
movsl
or
lret
dec
fs
aad
adc
cli
mov
popa
mov
cmp
dec
clc
icebp
scas
dec
das
inc
mov
rclb
cmc
push
mov
mov
out
ficoml
cmpsl
loopne
out
and
lahf
in
sub
repnz
pop
shl
pop
pusha
and
shrl
xor
ja
or
mov
test
cs
or
pop
xor
sub
push
pop
cmp
pop
sub
lods
movsb
ss
mov
jg
fs
add
sub
lods
insl
dec
jmp
ffree
sub
push
push
enter
addr16
rorl
imul
cs
repnz
out
inc
cli
dec
pusha
inc
add
inc
or
psubsw
jns
pop
xchg
lea
mov
mov
xchg
dec
pop
add
jo
out
pop
xchg
int3
stc
cmp
push
mov
push
js
pop
stc
dec
pop
adc
or
push
jne
scas
pop
lds
mov
imul
jbe
lock
pop
push
orl
lret
test
mov
stos
pop
jno
pop
or
sahf
test
push
mov
jno
push
jecxz
ficompl
test
dec
jle
push
or
mov
sbbl
jg
lds
inc
shl
cld
push
insb
pop
lods
jae
mov
mov
sub
pop
gs
lahf
xchg
mov
jg
pop
sbb
loope
loop
push
dec
push
jmp
mov
and
push
xchg
shrl
mov
pop
test
and
jne
mov
dec
popf
sub
or
das
popa
orb
pop
pop
mov
sbb
inc
ret
mov
adc
int3
xchg
lea
or
lret
scas
das
inc
das
movsb
push
aas
xchg
lds
dec
imul
xchg
and
xchg
and
jae
mov
test
adc
test
mov
xchg
mov
pop
dec
pop
jo
add
ds
inc
jnp
mov
inc
sub
push
xlat
mov
pop
jbe
sarl
lret
mov
imul
dec
cmpsl
scas
andb
stos
loope
mov
popf
test
ljmp
or
pop
out
jge
pop
push
arpl
aad
push
or
xor
jmp
pusha
pop
pop
into
pop
insb
pop
addl
lret
cmp
mov
or
leave
sub
lds
sub
jmp
mov
jl
add
cltd
xor
mov
lds
mov
pop
pop
addb
sub
inc
nop
push
push
clc
out
jmp
adc
xchg
mov
mov
movsl
and
mov
repnz
enter
sahf
lret
push
hlt
mov
pushf
sub
lods
not
push
outsb
dec
arpl
sbb
sub
push
lret
jno
cli
xor
lock
lahf
mov
and
pop
pop
test
ret
jo
or
xchg
sti
jbe
lods
mov
fs
int3
jnp
pop
dec
lods
test
mov
leave
cltd
mov
int
sub
lods
xchg
daa
insb
int3
fstpl
outsl
push
fmulp
daa
or
jbe
adc
mov
fwait
or
inc
aas
adc
les
dec
mov
flds
inc
sub
cmpb
xchg
pushf
pop
mov
jae
push
call
aad
jae
inc
and
pop
or
mov
je
or
xor
subl
push
ret
mov
ds
addr16
pusha
mov
arpl
pop
lea
rorb
sub
das
movsl
mov
cs
popl
or
inc
sub
pop
roll
push
mov
and
sub
adc
sub
sahf
ficoml
or
aam
dec
out
lahf
and
push
sbb
cmpsl
jge
ss
sub
jne
ja
gs
mov
or
add
ljmp
gs
mov
leave
mov
pop
movsl
test
mov
sti
sahf
fnstsw
mov
mov
daa
sbb
movsl
push
pop
dec
xchg
sub
and
jne
cmc
push
das
mov
mov
cmc
or
mov
nop
inc
xchg
and
fcom
mov
mov
cli
shl
or
vpacksswb
icebp
sbbl
shr
sub
inc
arpl
out
inc
addl
sbb
push
sbb
push
arpl
pop
in
push
js
in
xchg
ret
cmp
es
mov
xchg
dec
xor
dec
stos
adc
jge
dec
sti
int
insb
pop
pop
je
jnp
push
test
int3
leave
xchg
bound
jmp
cmpsb
addr16
mov
dec
mov
int
je
insb
inc
clc
lret
repz
add
adc
mov
andb
jg
push
les
out
mov
pop
xor
in
fsubl
repz
test
xchg
arpl
xor
enter
xchg
sahf
adc
xchg
setle
push
mov
sub
lods
imul
push
sub
clc
jbe
or
xorb
insl
fcoml
adc
and
sub
xchg
shrl
push
xor
enter
iret
data16
lods
push
imul
dec
pop
push
jmp
add
aad
pop
rorb
lods
scas
jle
fs
mov
lods
sarl
add
jno
push
cmpsl
pop
mov
cmp
and
adc
dec
mov
mov
jne
add
lock
cmp
mov
shll
enter
pop
shl
and
push
dec
pusha
fcmovb
fisttpl
pop
inc
sti
push
je
orl
nop
shlb
inc
jmp
outsb
mov
std
ja
push
lcall
push
adc
subl
mov
jno
repz
push
movsl
or
mov
push
jbe
cld
xlat
addr16
jge
lds
mov
jg
adc
movsb
outsl
or
das
in
les
jmp
outsl
daa
dec
in
inc
dec
lock
dec
push
sub
jae
mov
pop
sti
dec
mov
or
or
or
cmc
scas
add
and
jb
loope
push
mov
pop
iret
pop
mov
dec
fnsave
inc
std
ret
xchg
daa
adc
divb
aad
jo
ret
ds
out
mov
jg
jne
add
inc
sub
stc
mov
scas
mov
jo
fistps
fldt
jmp
inc
sub
adc
mov
pop
pusha
test
movsb
out
mov
inc
add
mov
sahf
out
push
ret
stos
leave
mov
andl
xor
cmc
out
fcomps
lcall
decb
out
aad
insl
pop
adc
sbb
push
ja
adc
fmulp
pusha
xor
data16
ja
out
jnp
test
mov
mov
das
mov
dec
pop
add
addr16
inc
and
inc
sub
xor
pop
pop
aad
cmp
loope
fsubrl
jns
xor
das
xchg
and
pop
push
repz
mov
mov
mov
pop
add
js
push
cmp
ror
imul
jne
jnp
pop
or
imul
aaa
movsl
out
push
icebp
movsbl
push
mov
adc
cmp
mov
dec
adc
inc
ja
cwtl
cld
scas
mov
sti
dec
ret
divl
xor
push
mov
mov
shll
push
add
cs
and
mov
orl
adc
addr16
jnp
pop
add
hlt
sbb
rcll
xor
addl
mov
and
popa
lahf
loopw
out
inc
adc
mov
add
push
or
in
popa
mulb
test
xchg
cmp
jnp
pop
xchg
loopne
mov
xor
aas
pop
outsl
repz
dec
xor
lret
adcl
push
cli
push
push
cmp
lock
mov
adc
or
push
movsl
jb
cltd
aam
dec
adcb
shlb
pop
ror
leave
pop
out
mov
flds
adc
mov
adc
mov
cld
dec
ret
addr16
cmp
inc
jbe
cli
jp
push
or
sbb
inc
hlt
loope
add
ss
push
mov
dec
mov
or
es
jmp
or
mov
aaa
fs
insl
add
or
cmp
neg
pop
xchg
mov
or
sbb
movsb
dec
mov
cmpsl
std
and
cmp
into
fwait
hlt
or
sbb
nop
cld
pop
fimull
jae
cmp
sbb
mov
jnp
pop
xor
or
mov
jp
outsb
xchg
sbb
mov
sbb
or
lods
add
or
test
dec
nop
or
into
pop
and
daa
or
cmpsb
in
mov
mov
ja
leave
sbb
js
jns
push
xorl
cld
lcall
divl
inc
pop
div
not
js
std
in
leave
inc
or
push
xchg
cmp
iret
and
sbb
dec
in
mov
in
cld
or
inc
cmpsb
sti
scas
push
mov
cld
pop
mov
mov
in
hlt
addr16
sbb
xchg
mov
jnp
cmp
mov
and
dec
fsubrl
out
cmpsl
lods
or
cmp
mov
sbb
or
shr
mov
aas
dec
xchg
xchg
rcrl
push
sbb
std
or
adc
dec
roll
stc
inc
mov
out
dec
fwait
pop
push
inc
sbb
xor
mov
mov
mov
or
jb
cwtl
scas
test
jno
test
inc
sub
ret
loop
sbb
cmpsl
lret
dec
std
iret
out
cmp
mov
mov
cwtl
and
xchg
mov
lods
mov
inc
xchg
dec
and
in
cmp
out
pop
rcr
add
xor
xchg
mov
adc
xchg
adcl
mov
mov
pusha
sub
sahf
xchg
inc
popa
jmp
test
xchg
aad
jae
fwait
dec
fldl
jns
push
or
and
scas
mov
popf
sub
jbe
test
andl
push
add
ds
bound
inc
or
pop
xor
mov
lahf
pushf
fwait
int
cmp
mov
addl
dec
out
repz
and
and
sti
bound
dec
hlt
cmpsl
mov
div
sti
jne
arpl
sbb
loop
fstps
aam
daa
ljmp
or
addr16
call
loope
jecxz
jmp
sub
and
lcall
out
ss
insl
jge
test
divl
lahf
cmp
hlt
cld
jns
out
sbb
out
cmc
ja
cmpsl
testl
or
jg
test
xor
cs
aas
ja
sub
sub
cmp
movsb
add
scas
pop
inc
cmp
in
or
cltd
aaa
jns
test
pop
push
add
xor
cwtl
xchg
lock
test
ss
mov
adc
sub
mov
push
scas
int3
js
jle
stc
pop
testl
jne
movsl
test
jecxz
mov
or
das
xchg
movsb
outsb
mov
fidivrs
pop
xchg
sub
fdivr
das
jp
imul
into
push
movlps
push
stos
loopne
add
mov
mov
pushl
inc
neg
gs
push
ss
mov
pop
lock
jbe
jecxz
pop
roll
sarb
je
insl
or
pop
fcomps
inc
dec
mov
sti
ljmp
or
out
mov
ret
rolb
xlat
iret
call
addr16
sub
jecxz
mov
popa
jl
xchg
and
dec
movsb
sub
jbe
popf
adc
aad
outsb
pop
cmpsb
lock
xor
in
mov
out
ficoml
lret
push
into
lock
sbb
or
push
fildl
mov
clc
mov
mov
hlt
scas
jg
mov
ret
dec
inc
sbb
fldpi
sub
rep
or
mov
es
out
ds
outsl
xlat
mov
sbb
mov
ficompl
mov
jae
ljmp
popa
out
sub
mov
repnz
push
xor
jmp
pop
or
inc
or
call
lds
daa
in
shlb
or
inc
daa
mov
xor
lods
cmp
rolb
or
mov
cltd
inc
and
imul
mov
mov
out
out
mov
xchg
mov
mov
arpl
out
jl
pusha
xchg
ret
xchg
mov
mov
jb
int
stos
out
addr16
mov
mov
pop
cltd
mov
int
mov
inc
jae
out
inc
cmp
mov
push
jp
stos
pusha
stos
or
sub
and
shll
out
movsb
scas
pop
sbb
ficoms
into
js
ret
in
sbb
nop
mov
pop
arpl
lds
and
insb
shrb
xchg
xchg
sti
clc
shll
stos
adc
sbb
stos
imul
mov
out
adc
call
in
inc
movsl
sub
jbe
clc
loope
test
lret
test
sub
cmp
pop
cmp
sahf
fdivs
cmp
cmpsl
inc
out
xchg
aam
sahf
cmpsl
test
mov
inc
out
lahf
inc
jmp
mov
and
imul
xor
or
cmp
dec
lds
mov
nop
lret
sti
and
pop
into
cmpsl
jnp
and
xlat
adc
push
push
ret
add
insl
xor
jmp
sub
inc
data16
scas
sub
or
ja
loop
js
inc
out
scas
xchg
adc
sub
mov
jo
insb
pop
add
call
fwait
adc
lcall
lods
inc
or
inc
and
cmp
mov
push
mov
inc
cwtl
push
cs
cli
pop
xchg
in
daa
jo
outsl
shlb
mov
loope
mov
mov
rcll
cltd
mov
lods
out
and
pop
mov
pop
divb
jae
int3
cmp
repz
dec
int
ljmp
mov
dec
xor
movsb
push
mov
add
movsb
imul
lret
sti
aam
std
sarb
or
cmp
xor
xor
adc
sbb
lahf
mov
fistl
jmp
pop
inc
fndisi(8087
imul
xor
cmp
mov
xor
xor
sti
repz
and
adc
inc
mov
mov
pop
stc
xchg
test
mov
ja
shlb
mov
jo
push
cmp
out
pop
xlat
mov
lret
fstps
inc
sbb
shl
je
add
jns
insl
nop
adc
adc
shrl
jno
imul
mov
repz
fbstp
ljmp
mov
push
adcl
adc
sbb
cmp
sub
je
stos
jecxz
call
cmp
sbb
jno
fnsetpm(287
or
jns
push
les
xchg
sbb
push
mov
sti
mov
push
inc
adc
fldcw
mov
inc
push
lret
lds
dec
fwait
dec
test
mov
loop
bound
fstps
jmp
loopne
xchg
xchg
and
sub
mov
pop
sti
in
loope
jno
cltd
xor
fcomps
divb
mov
xor
fwait
dec
push
xchg
jae
fdivs
and
insl
inc
fidivrs
push
mov
xlat
add
adc
add
dec
pop
or
adc
mov
aam
shll
xchg
in
sqrtps
incb
loopne
dec
lock
jecxz
pop
add
push
add
jb
sldt
add
add
pusha
or
je
call
pop
add
cmpb
jne
popa
jmp
fldt
cmp
add
pop
and
xor
mov
add
cmp
jne
movzwl
add
mov
add
cmp
je
sub
jmp
mov
mov
add
mov
add
jmp
mov
mov
push
push
call
call
pop
sub
mov
sub
mov
movb
popa
jmp
insb
sbb
adc
test
pusha
xor
mov
shr
je
pop
cs
or
sbb
adc
test
pusha
xor
mov
shr
je
pop
cs
or
sbb
adc
test
pusha
xor
mov
shr
je
pop
cs
or
sbb
and
jl
sub
mov
mov
inc
mov
inc
mov
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
jae
xor
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
je
push
sub
mov
pop
mov
inc
mov
jmp
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
sub
mov
jne
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
push
mov
sub
rep
pop
jmp
dec
shl
mov
inc
mov
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
cmp
jae
cmp
jb
inc
push
mov
sub
rep
pop
jmp
cmp
ja
add
push
mov
sub
rep
pop
jmp
mov
inc
xor
shr
je
adc
mov
push
mov
sub
rep
pop
mov
jmp
sub
mov
popa
ret
jmp
jmp
add
cmp
inc
scas
cmp
inc
mov
sbb
add
test
shl
fsubrl
js
cwtd
nop
pop
icebp
add
mov
and
call
ficomps
sub
and
jne
jae
jb
jo
fs
je
xchg
fisttpl
jmp
jl
xchg
sbb
inc
cmp
loopne
push
and
push
add
stos
out
or
hlt
sbb
ja
and
sarl
cmp
cld
mov
sbb
pusha
call
in
or
decl
mov
sub
mov
xor
sub
test
or
jb
sbb
mov
sbb
inc
and
jne,pt
add
call
lcall
or
xchg
aad
jmp
inc
push
mov
subl
fsubr
add
ljmp
dec
fmuls
fmuls
inc
mov
or
xor
or
andl
popa
adc
loope
fsubl
ror
ret
inc
sbbl
cmp
aaa
orb
or
test
or
rol
mov
inc
mov
cmpl
lea
fdivs
or
pop
mov
js
rcrb
jbe
or
dec
inc
inc
shll
mov
inc
cmp
jb
mov
sub
popa
jle
mov
and
xchg
stos
mov
add
sbb
ja
clc
or
jl
adc
pop
cmpsb
dec
rcrb
push
xor
aas
add
xor
or
mov
adc
add
mov
test
cmpsb
frstor
mov
push
lea
push
push
mov
xor
and
xor
jne
mov
int3
ret
sub
xor
loopne
sarl
add
jmp
ret
roll
add
push
pop
or
mov
fsubr
and
cmp
mov
add
xor
adc
movb
test
clc
bound
mov
popf
or
je
bound
lret
push
call
movsl
imul
mov
and
xor
add
mov
sbb
mov
out
add
xor
pop
je
test
fstpt
mov
shlb
adc
cmpb
jne
and
shr
and
cmp
mov
jg
mov
fadds
test
leave
je
mov
xor
push
ret
sub
int3
rclb
pop
mov
jnp
cltd
arpl
add
jne
adc
ret
cmpb
and
xor
add
push
popa
or
adc
pop
shrb
aaa
jmp
and
inc
pushf
jge
cmpl
cld
add
lea
jg
clc
test
lock
push
hlt
push
adc
gs
lock
shl
add
in
sub
fisttpl
sti
lock
xor
ja
jmp
and
cli
or
ficomps
mov
adc
push
test
or
outsl
and
or
pop
lock
hlt
in
cwtl
add
jbe
movsl
xor
cmp
push
cld
jb
loopne
fistpll
es
sbb
sbb
adc
sarl
cmova
jne
mov
mov
cmp
mov
push
jo
jle
mov
jmp
or
and
mov
ret
cmp
mov
icebp
adc
ljmp
dec
shlb
lret
xor
addr16
rcrb
movups
mov
cmp
inc
sbb
adc
dec
in
or
gs
push
xor
test
add
out
lock
sub
sub
push
or
divl
dec
adc
repz
popf
or
ror
or
mov
push
or
and
cmp
call
andb
repnz
shlb
or
sub
bswap
nop
add
data16
add
xor
mov
or
xor
cmp
xchg
mov
aas
jmp
inc
test
push
jmp
push
mov
and
adc
adc
sub
mov
aad
and
mov
adc
and
fadds
pop
addr16
aaa
lea
loop
andb
or
aaa
xchg
ret
mov
jne
jle
add
fmul
xchg
xor
push
jmp
pop
les
lock
cwtl
or
and
add
pusha
xlat
out
movsb
inc
js
nop
mov
mov
ljmp
les
mov
sub
inc
push
les
sub
cmpl
bound
aam
les
ss
jmp
cmpsb
popa
xchg
mov
lds
popf
add
jmp
pop
pop
ljmp
fs
icebp
les
mov
ljmp
lods
mov
cmpsb
mov
loopne
rcll
dec
pop
inc
sar
shl
repz
das
mov
adc
or
push
and
push
gs
push
addr16
dec
clc
nop
out
sub
lods
imul
pop
pop
push
daa
stc
dec
stos
mov
adc
mov
push
sti
dec
nop
push
pop
scas
and
aad
pop
push
push
push
addb
sub
mov
sbb
imul
lock
repnz
ja
iret
rcrl
pop
and
enter
sub
mov
jg
adc
or
jl
add
cmp
pusha
gs
add
add
in
add
sbb
cmovge
mov
xor
mov
js
xchg
rolb
out
push
or
imul
xor
testb
cli
xor
cmp
stos
adc
repnz
jecxz
inc
cli
cltd
mov
xchg
or
or
jl
inc
xchg
andb
pop
sbb
or
pop
cmp
int
or
ret
mov
add
daa
lcall
mov
add
mov
pusha
sbb
cli
mov
sbb
mov
push
fidivl
sub
lcall
sbb
cwtl
xchg
aam
shrl
mov
insb
mov
mov
inc
sbb
xor
add
repnz
pop
std
cmp
add
adc
shll
popa
int
adc
jns
sbb
xor
pop
sbb
pop
clc
clc
int
jmp
dec
xor
sub
lahf
mov
pusha
add
sub
test
add
mov
movsb
out
aam
jns
jnp
jae
arpl
aas
rorl
add
adc
insl
arpl
loope
clc
les
push
add
stc
jnp
aam
testb
filds
add
adc
dec
mov
std
adc
xchg
roll
xchg
push
jge
and
xor
fwait
mov
inc
int3
sub
out
cmp
stos
xchg
fstpt
mov
roll
shll
scas
sar
in
rclb
push
lea
push
pop
lock
pop
mov
cwtl
lds
andb
pushf
mov
int
sbbb
loope
and
inc
fldt
xchg
adc
pusha
test
inc
sbb
push
push
inc
lret
mov
dec
sub
lock
imul
pop
les
mov
xor
sbb
imul
sbb
dec
cmpsl
mov
nop
cmp
stc
add
mov
dec
inc
mov
or
shlb
pop
inc
sub
or
adc
push
fsub
add
sahf
out
adc
mov
pop
icebp
push
or
xor
mov
push
and
push
xchg
mov
push
idiv
push
inc
adc
repnz
sbb
xchg
sbb
lock
ss
jb
sbb
iret
call
test
aad
int
and
nop
jbe
xchg
push
pop
das
test
or
xor
mov
mov
push
or
inc
cmp
push
jnp
xchg
mov
pop
aam
mov
fldt
shrb
test
add
jl
and
mov
fprem1
adc
adc
push
push
pusha
add
dec
xlat
cmp
xchg
cli
xchg
dec
mov
ror
cmc
ret
push
lock
mov
daa
popf
cltd
clc
adc
xchg
inc
je
add
push
into
dec
add
fimuls
in
pop
dec
les
pushl
xchg
jnp
in
bound
orb
cli
or
loope
inc
cmp
push
pop
xchg
clts
je
testl
sbb
bound
xor
xchg
push
jb
pop
xchg
pushf
sub
push
jo
enter
jnp
incb
adcl
adc
and
mov
mov
add
xor
pop
sahf
adc
mov
or
mov
add
push
push
nop
rcrl
xor
cltd
xchg
ss
sub
adc
cmc
push
or
sub
or
add
repnz
cmp
jl
push
add
negl
repz
enter
xchg
lcall
or
push
loope
pop
push
jmp
addl
roll
nop
clc
and
cltd
push
adc
movsl
lods
dec
pop
aas
ret
loopne
or
dec
mov
sbbb
enter
and
inc
dec
ss
xchg
pop
mov
adc
add
test
sbb
lock
fisubs
fwait
pop
push
dec
testl
fistl
inc
out
jnp
js
lods
xor
or
sub
pop
inc
jge
cmpsl
adc
pop
arpl
pop
cwtl
sbb
std
pushf
inc
push
popl
mov
push
in
mov
pushf
test
sub
pop
rcll
and
std
push
jno
test
pop
jo
rorb
xchg
ficompl
xorb
scas
mov
sbb
mov
dec
je
int3
call
int3
sub
sub
xor
mov
sub
xor
push
sbb
or
fwait
and
rcll
cltd
int
adcb
shl
jge
xchg
popa
pop
test
pop
add
nop
nop
enter
fsubs
mov
mov
into
mov
push
mov
repz
call
jb
aam
ja
dec
inc
sub
and
hlt
jo
test
mov
loopne
pop
rclb
sbb
push
sbb
push
leave
fadds
lods
sbb
xchg
out
lock
pop
xchg
inc
add
dec
xchg
int3
rcrb
je
push
mov
scas
pop
push
inc
test
dec
lea
pushf
out
fs
mov
in
add
pop
and
fadd
sub
sbb
aas
add
shlb
jne
test
js
sbb
inc
lock
inc
mov
fdivrl
pop
sbb
cltd
add
xchg
dec
xor
pop
push
cs
inc
inc
lods
sahf
out
movswl
cmp
test
push
lea
roll
lock
cmp
adc
jge
cs
int3
or
or
inc
or
sub
int3
sbb
sub
add
and
sbb
sbb
lcall
add
adc
mov
and
mov
jecxz
jnp
add
jle
jg
jo
sub
and
mov
aaa
shl
stos
and
lods
pushf
rcrl
push
in
xchg
fwait
xchg
or
push
sub
cmp
into
cmp
and
test
add
inc
push
cmp
call
add
pusha
rcrb
jle
nop
enter
or
xchg
hlt
adc
mov
daa
call
enter
or
icebp
dec
push
xchg
mov
scas
cmp
ret
repnz
rorb
xchg
and
pop
test
sub
leave
js
xchg
sub
jnp
jo
add
pop
mov
add
push
rol
push
cmp
pop
pop
rorb
add
lret
test
lcall
pop
adc
imul
mov
ss
mov
push
stos
rorl
hlt
and
inc
fdiv
popf
iret
insl
add
arpl
divl
cld
or
stos
jmp
sbb
add
mov
xor
adc
sub
and
or
sbb
movsl
call
loopne
add
shrb
jnp
add
pop
or
adc
dec
lea
push
or
sub
xor
cld
andb
mov
mov
xchg
test
or
lock
xchg
sahf
lds
sbb
repz
test
cwtl
push
cmp
xor
mov
sbb
fistl
xchg
dec
add
stc
inc
aaa
fnstcw
add
pushf
in
les
lock
pop
test
add
jb
mov
cmp
test
call
add
mov
push
sub
mov
push
mov
dec
lods
dec
test
inc
repz
mov
test
xchg
and
inc
inc
mov
or
lcall
out
jge
inc
dec
call
pop
adc
mov
leave
and
cltd
inc
sbb
cltd
scas
in
pushf
inc
mov
lods
xchg
shll
mov
mov
pop
jb
adc
mov
inc
popf
subl
aad
pusha
cwtl
stos
ffreep
popa
fwait
dec
jp
lea
xlat
mov
mov
or
test
jne
add
lods
dec
cwtl
xchg
pop
inc
push
mov
test
fildl
xchg
test
cmp
cmp
mov
and
dec
sbb
sbb
cmpsl
add
mov
test
adc
lea
add
sub
push
bound
test
push
sbb
cmp
inc
adc
jo
mov
or
pop
pop
push
pop
and
leave
test
pushf
nop
fs
xor
sbb
daa
dec
and
or
and
nop
mov
dec
fcomps
mov
cmp
out
sub
xor
adc
jmp
inc
or
mov
repnz
push
rorb
test
lret
pushf
hlt
popa
sti
pusha
push
cli
test
or
and
iret
inc
xlat
add
pop
sbb
mov
int3
cltd
or
xchg
cmpsb
adc
dec
les
cmp
jo
add
inc
jo
xchg
dec
jnp
adc
setne
lret
jbe
and
nop
mov
xor
andb
jnp
dec
and
shlb
div
push
cld
mov
rcrb
clc
sahf
add
int
inc
arpl
xorb
mov
inc
idiv
add
in
pop
cmp
adc
rcrb
add
push
mov
add
sub
add
clc
xor
xchg
sbb
add
into
add
inc
daa
and
jns
in
add
sbbl
psrld
movsb
test
clc
jle
add
fsubs
aad
inc
and
lock
cmp
and
addl
add
fwait
scas
ja
insl
mov
add
cmp
mov
in
test
fildl
dec
mov
addb
lods
pop
jecxz
inc
test
rolb
inc
add
arpl
add
pop
or
pushf
sbb
jle
imul
adcl
xlat
mov
popa
cwtl
cmp
or
xchg
std
sub
push
roll
and
jns,pt
pop
mov
xor
add
add
xchg
out
add
adc
pop
mov
mov
lods
or
inc
mov
sub
sbb
inc
pop
jle
xor
aad
dec
add
push
scas
rolb
cwtl
add
cmpl
sbb
sbbb
sti
xor
sar
cld
jmp
std
jnp
sbb
in
mov
sbb
adc
add
push
pop
and
cld
add
xchg
fwait
sbb
mov
bound
adc
iret
sbb
fsubrs
mov
cmp
stos
xor
lahf
ret
imul
insl
adc
sahf
int3
add
add
aam
dec
mov
andb
mov
ja
sub
add
cmovns
dec
xchg
mov
and
outsl
add
shlb
mov
xchg
or
cld
xor
add
mov
pushf
add
mov
jbe
sbb
jnp
or
test
pop
unpcklps
out
add
pop
movsl
push
jae
mov
rorb
push
call
add
cmp
sub
adc
mov
fs
aas
iret
mov
add
rorb
and
shlb
out
mov
cmp
roll
daa
std
pop
in
jbe
cmpsb
sbb
int3
mov
orl
adc
pop
lahf
push
dec
xlat
push
rol
xor
add
xchg
pop
lods
or
xchg
fnstenv
xor
mov
nop
and
rclb
and
ret
push
push
adc
adc
mov
mov
adc
repz
xchg
mov
pop
cmp
mov
test
add
leave
in
sub
jmp
add
pop
cwtl
mov
pop
add
or
xlat
add
fs
adc
shr
or
sbb
and
lock
or
les
push
rorb
add
fcoml
jl
and
stos
mov
xchg
sarl
sub
cwtl
pop
xchg
inc
lock
or
test
ss
xchg
mov
add
xor
rcll
popf
test
xchg
lods
sti
xchg
mov
mov
pop
test
add
or
jl
pop
dec
cli
addl
mov
push
pop
mov
and
dec
add
insb
addr16
cmc
pop
add
cmp
pushf
out
gs
mov
jge
adc
add
js
pushf
test
cli
adcb
push
scas
cs
mov
or
int
add
inc
pop
mov
lcall
loopne
cmpsb
mov
int3
aam
test
jne
inc
ja
cmp
test
or
or
jne
adc
pushf
loopne
insl
mov
inc
pushf
mov
sbb
pop
jno
std
jns
xchg
icebp
out
test
adcb
xchg
xorb
inc
call
inc
jbe
push
fidivl
ja
mulb
adc
xor
dec
call
ja
inc
push
jge
add
adc
inc
stc
scas
push
cmpsb
sbb
imul
add
ficomps
movsb
jo
adc
imul
out
mov
sbb
repnz
xchg
inc
mov
jbe
imul
mov
stc
jecxz
jge
add
inc
insb
js
mov
fcoml
jle
push
xor
push
icebp
or
cmpsb
jmp
insb
push
add
out
mov
xor
adc
call
imull
mov
add
pop
jecxz
std
xlat
jmp
cmpb
add
cmpsb
inc
mov
and
inc
test
pop
pop
fisubs
loopne
mov
push
jge
mov
adc
ss
xchg
fcompl
in
imul
cmpsb
add
add
jg
mov
adc
jae
movsb
cmp
fcmovnu
add
sti
fwait
shrb
jl
cld
mov
popf
pop
mov
cmpsl
inc
adc
movsb
in
inc
cltd
mov
mov
pusha
or
int
fbld
aas
add
sub
push
or
pop
xchg
push
jns
adc
fdivrl
mov
or
jmp
jo
imul
xchg
cmc
std
dec
test
xchg
test
insl
ret
nop
sarb
add
mov
in
fwait
mov
add
rcrb
jbe
xchg
shll
add
inc
or
sub
stos
cmp
and
in
mov
test
and
out
jno
push
mov
mov
test
cmp
and
jl
add
adc
push
xchg
or
fcoml
xchg
shrl
jl
mov
add
fbld
dec
lock
data16
dec
imul
mov
loope
xor
sub
and
scas
adc
mov
xor
adc
and
loopne
jbe
icebp
out
mov
mov
add
out
pushw
inc
add
push
lahf
pop
pop
pusha
jge,pt
sbb
scas
arpl
fmuls
or
fucomip
es
clc
cwtd
or
dec
in
movsl
xchg
pop
push
or
inc
cmp
cmp
cltd
int3
xor
jg
mov
and
ja
test
clc
jno
mov
or
sub
call
add
or
pop
les
pop
mov
or
and
cmpsl
sbb
dec
inc
ret
adc
cmp
out
pop
sbb
mov
pop
cltd
mov
adc
pusha
sbb
jge
mov
jno
sbb
or
and
xchg
cwtl
jecxz
xchg
or
roll
fs
xchg
adc
lock
or
add
and
das
dec
loopne
xchg
pxor
xlat
in
insl
add
mov
xor
lcall
lahf
mov
xchg
mov
movsl
push
mov
into
mov
addb
pusha
mov
int
pop
enter
ret
hlt
pop
and
dec
jl
nop
enter
stos
lea
in
add
nop
shrb
mov
ret
fs
mov
sbb
xlat
enter
pop
pop
adc
xor
mov
jne
sub
and
adc
das
and
fnstenv
arpl
ljmp
or
out
call
or
scas
enter
lret
add
and
sbb
cmp
add
jnp
shll
dec
pop
pop
sbb
xor
and
jbe
mov
xor
andb
roll
int3
sub
mov
push
cmpsl
shrb
movsb
arpl
and
adc
or
pushf
je
mov
cmpsb
push
jb
loopne
inc
and
add
push
add
jp
enter
jg
xchg
mov
outsl
adc
popa
addr16
pusha
pop
and
and
add
incb
dec
sub
cltd
cli
mov
inc
xor
xchg
jl
push
cmp
cmpsb
pop
es
sbb
mov
stos
pop
fs
sbb
stos
aam
mov
aam
push
mov
inc
fs
je
stos
pushf
cmp
sub
ds
insb
addb
sbb
adc
sti
inc
les
adc
pop
roll
or
cwtl
add
xchg
or
mov
insl
add
stc
loopne
shrb
lret
mov
pop
sbb
cmp
xorb
jl
push
mov
pop
lods
enter
je
add
dec
test
and
cmpl
mov
ret
faddl
mov
xor
xorb
add
add
loope
inc
int3
pop
cmpsb
push
push
and
out
les
mov
ror
adc
pop
xlat
loope
adc
push
lea
in
xor
sub
shl
bnd
lods
or
insb
popf
cmpsl
add
xchg
hlt
outsb
jl
and
push
add
js
std
jb
repnz
in
mov
out
push
sbb
sbbl
pop
mov
cmp
lcall
sahf
cltd
outsl
bound
dec
cmp
ret
fwait
test
adc
jno
xchg
jl
dec
pop
cwtl
cmc
pop
jae
jae
push
and
mov
flds
jo
mov
mov
ret
or
and
jl
js
xchg
test
cmovle
out
stc
add
or
repz
stos
mov
pop
push
adc
pop
out
inc
das
xlat
add
sub
add
sti
popf
test
add
shlb
mov
mov
int3
ret
push
pusha
push
insl
pop
lcall
sub
sbb
xchg
add
push
ja
fsubrs
mov
fsts
adc
andl
xchg
movsb
add
push
and
jb
sub
xchg
fadd
rolb
add
mov
lcall
imul
and
pop
rolb
mov
cmpsb
jmp
call
sti
jge
outsl
sbb
cmpsl
jl
mov
xchg
pop
repnz
ret
mov
dec
cmp
mov
test
lds
pop
icebp
jl
pop
xchg
test
cld
clc
sub
roll
rolb
xchg
stos
loope
into
adc
lcall
xor
cmp
xchg
je
cltd
cmp
fisttpl
inc
lock
pop
cs
cmp
scas
sti
cmp
movsb
and
or
in
sub
into
stc
sbb
jbe
jo
rol
pop
mov
adc
jmp
dec
xchg
pusha
pop
loopne
mov
pop
test
and
mov
or
pop
in
imul
inc
gs
mov
call
adc
jp
pop
add
mov
insb
sbb
sbb
nop
jle
subb
popf
loope
sub
pop
xlat
nop
xchg
add
and
mov
add
out
fcmovu
pop
dec
push
lcall
mov
add
jb
pushf
loopne
xchg
fcoml
mov
pop
outsl
and
jnp
shrb
add
scas
es
pop
mov
jmp
popf
bound
adc
jle
push
inc
pop
in
movsb
inc
xorb
cli
sub
loopne
dec
sub
add
push
int
imul
pusha
or
add
mov
inc
mov
adcl
add
roll
sbb
ljmp
pop
adcb
inc
mov
add
cs
pop
adc
xchg
addr16
dec
mov
or
test
test
lret
sub
add
xchg
idivb
inc
clc
test
sbbb
pushf
mov
stc
adc
jp
sub
cmpsl
and
adc
sbbb
add
xchg
movsl
inc
inc
shll
movsl
inc
les
inc
pop
gs
aad
xchg
lods
xorb
pop
inc
je
shr
mov
dec
push
aaa
and
cmpsl
pop
int
push
les
adc
pop
sub
xchg
pop
adc
lock
and
dec
orb
push
in
out
mov
push
add
out
adc
pop
rorb
push
cmpb
enter
repz
rol
lcall
inc
lahf
cmp
dec
push
xlat
add
loope
push
enter
ror
fucomi
jae
sbbb
jge
dec
cltd
push
cmp
and
or
add
xchg
pop
mov
sbb
jbe
mov
bound
cltd
call
hlt
pop
js
jl
push
push
test
xchg
lock
mov
pop
mov
sub
inc
out
jbe
or
cmp
rorb
and
sarb
or
add
inc
jae
pop
mov
loope
xor
or
inc
ss
ret
nop
push
mov
mov
gs
in
pusha
andl
aad
sub
stos
pop
add
leave
pop
pusha
and
pop
out
jo
mov
add
jle
cwtl
cmp
lahf
loopne
add
in
push
inc
dec
lock
daa
pop
std
pop
pusha
adc
andb
xor
add
jl
sbb
push
cwtl
test
aam
xor
popa
push
fiaddl
mov
mov
pushf
idiv
inc
nop
xchg
inc
or
push
xchg
fs
lock
jle
sub
jl
inc
leave
filds
cmp
inc
sub
clc
pop
or
mov
pushf
and
inc
xchg
in
add
mov
xchg
sub
fsubrl
mov
sbb
push
mov
mov
das
call
inc
cltd
loopne
ja
or
cltd
cmp
add
xchg
lea
add
adc
push
adc
jo
loop
repnz
aas
aam
fwait
cs
fs
add
xor
dec
cltd
inc
cs
fs
jl
mov
xchg
cwtl
adc
inc
and
movsb
push
adc
mov
cwtl
or
mov
subb
es
or
pop
fwait
mov
repnz
sub
push
push
add
mov
leave
hlt
jb
adc
sbb
insb
lahf
loope
add
add
stc
xchg
or
inc
out
and
xorb
adc
xchg
aaa
adc
add
sti
es
aad
out
sbb
inc
sbb
sub
adc
cmc
push
call
add
aaa
cmc
xor
cmpsb
pop
lret
in
mov
repnz
inc
gs
popf
add
mov
mov
inc
xor
jmp
push
xchg
push
pop
adc
and
add
mov
jge
fcmovu
sub
push
cmpsl
loop
sbb
push
movsl
js
inc
pusha
xor
pop
adc
xchg
adc
xor
mov
enter
sbb
sub
fwait
add
test
pop
fisubl
inc
add
dec
or
push
cmpsl
loopne
imul
cmp
sub
lods
or
gs
add
cwtl
cltd
xor
and
inc
pop
inc
enter
xchg
dec
in
movsl
lahf
test
mov
lcall
pop
fmuls
ror
mov
add
pop
mov
bound
packsswb
cltd
and
in
pusha
fldt
mov
and
aam
push
xchg
mov
je
inc
js
jle
cmpsl
jns
cmpl
mov
into
add
ret
ror
ja
je
dec
mov
inc
or
jbe
les
mov
lea
and
repz
popf
mov
in
cwtl
scas
sub
pushf
test
mov
add
imul
dec
int3
and
cmp
cs
mov
add
xchg
lds
les
fmull
int
jbe
add
adc
popf
or
mov
ret
fs
pmuludq
or
mov
mov
sbb
cmp
dec
mov
rcll
repnz
xchg
lods
adc
roll
hlt
popf
or
popf
inc
adc
xchg
cs
push
test
inc
push
mov
pusha
loopne
fstps
in
sub
in
call
movsb
lock
add
loope
fwait
pop
mov
popf
test
cs
out
dec
ret
xor
mov
outsb
xchg
mov
stos
pop
shlb
sbb
dec
jl
fdivp
jns
add
jl
ja
add
inc
pusha
fwait
pop
inc
mov
enter
or
enter
pop
xchg
cmp
stc
pop
nop
mov
push
sub
pop
jmp
and
out
int3
loop
sbb
or
int3
push
sbb
jnp
mov
inc
sbb
or
repz
orl
cwtl
add
std
push
cmpsb
out
movsb
add
add
aad
clc
int3
adc
out
add
sub
adc
sbbb
cmp
dec
xchg
sbb
sub
sbb
inc
aam
fs
push
mov
jmp
inc
pop
and
and
add
cs
orl
loopne
std
xchg
adc
or
sbb
pusha
insl
and
inc
icebp
add
in
hlt
ljmp
push
pusha
fldenv
sbb
add
xchg
out
xor
pop
inc
fbstp
xor
inc
lock
xchg
xchg
sub
or
shl
and
sub
sarb
icebp
js
aam
aam
movsb
loopne
dec
mov
arpl
inc
pop
inc
add
ja
lea
xchg
push
int3
pop
push
in
es
nop
inc
xchg
push
std
adc
jle
in
inc
push
xchg
add
sub
nop
or
enter
adc
loopne
inc
aaa
je
mov
mov
int
jae
dec
repnz
sub
inc
mov
xchg
cmp
mov
inc
or
ss
pop
dec
arpl
leave
jle
das
jl
imul
cwtl
dec
test
iret
mov
sbb
mov
or
xlat
and
lcall
mov
pusha
inc
adc
xor
les
add
cmpsl
jmp
inc
and
push
xchg
sub
or
inc
sub
pop
cmp
jns
inc
mov
lods
or
cmp
aam
xchg
std
sub
inc
gs
jbe
mov
popf
mov
in
or
in
push
inc
cmp
mov
jg
insl
sarl
sub
and
add
nop
in
push
aam
inc
dec
loop
xlat
inc
adc
add
dec
mov
rolb
fisttps
mov
cmp
add
scas
loopne
sti
pop
jl
or
sub
mov
hlt
cmp
jns
jo
adc
fildl
aad
inc
push
mov
clc
mov
dec
loope
pop
popf
and
xor
xchg
cmpsl
rcr
lcall
aas
add
daa
cmpsl
imul
pop
pop
jl
lret
add
and
or
repz
test
lret
inc
xor
orb
test
int3
js
push
or
jl
icebp
je
enter
mov
dec
push
stos
dec
pop
xor
popf
les
add
xor
sbb
xchg
sarb
mov
mov
pop
or
cmp
repz
sub
push
dec
lds
inc
je
repnz
pushf
mov
lea
clc
dec
sbb
lods
cmp
cmpsl
addb
add
test
sub
mov
arpl
add
enter
inc
xlat
sub
xor
add
cld
cmp
shrb
pop
push
lea
call
hlt
adc
lock
add
or
pop
fstl
cwtl
sub
add
mov
xor
or
sbb
fwait
test
add
sbb
add
iret
out
inc
fwait
jne
rolb
cld
dec
andb
sub
jo
sbbl
mov
daa
je
imul
fsubs
mov
sub
xchg
xor
add
popf
imul
imul
rorb
and
add
stos
jnp
mov
and
std
outsb
and
jge
fidivs
mov
movsl
nop
push
mov
or
sbb
mov
xchg
cwtl
stc
xchg
jge
adc
and
rorl
rclb
or
adc
sub
xor
push
mov
cmp
gs
or
xlat
in
mov
adc
push
aad
mov
mov
call
loope
hlt
mov
push
mov
clc
add
lods
mov
repnz
clts
pop
leave
orl
mov
sub
sbb
sbbb
sbb
pop
add
pop
xchg
clc
xchg
mov
mov
pushf
hlt
and
daa
shlb
inc
mov
push
or
outsb
sub
mov
adc
and
pusha
fwait
add
pop
arpl
sub
xorb
mov
push
in
loop
rcrb
adc
sti
sbbb
scas
sub
lods
inc
pusha
dec
pop
test
add
sub
add
add
outsb
shrb
je
lods
mov
and
repz
andb
push
sbb
jbe
add
or
jl
xchg
dec
test
add
pusha
cld
adc
out
lea
pop
adc
ljmp
test
in
xchg
sahf
cltd
adc
enter
xchg
xor
mov
rol
loop
mov
jo
lcall
mov
sub
out
add
subb
push
jo
or
push
repz
sub
sbb
cmp
das
cmc
mov
pop
loope
shl
inc
lock
lods
add
jo
mov
adc
pushf
ret
push
rorb
shlb
add
lock
push
mov
or
fdiv
jae
jl
orl
add
dec
js
jns
addr16
faddl
jmp
jno
inc
dec
rolb
js
lcall
mov
add
jb
push
mov
add
fldt
dec
adc
sub
mov
nop
dec
add
add
jne
cmpsl
sarb
mov
enter
and
daa
clc
sub
test
jnp
push
out
imulb
pushf
pop
fsubl
std
sarl
mov
and
lods
xorb
mov
cli
pop
lods
add
xchg
xchg
outsl
mov
add
sahf
mull
xor
xchg
inc
dec
sbb
enter
inc
jge
daa
call
adc
lds
push
cmpsb
mov
rclb
mov
push
mov
add
out
jl
dec
out
sbb
repz
das
std
sub
mov
les
out
stos
push
jle
rorb
xchg
add
jmp
sub
popf
mov
sub
sbb
sub
daa
iret
mov
ret
add
add
ret
mov
repnz
xor
outsl
sbb
jno
mov
cld
add
and
fnsave
clc
jmp
test
adc
xor
in
pusha
xorb
mov
mov
xchg
sbb
add
add
les
mov
in
pusha
jmp
shl
popf
test
inc
lea
inc
xchg
add
fldl
mov
pop
push
icebp
lahf
out
and
test
inc
daa
xor
in
test
icebp
pop
inc
jmp
push
pusha
frstor
negb
scas
mov
inc
add
mov
xchg
adc
jl
xchg
shlb
add
leave
nop
das
or
mov
fwait
mov
pushf
xchg
dec
mov
insb
adc
and
mov
sub
mov
pop
sub
adc
or
dec
addb
and
adc
repnz
pusha
add
inc
xchg
lahf
scas
out
or
mov
ret
dec
mov
fbstp
sbb
fdivrs
inc
cmp
popa
push
cmp
cmp
jp
sub
or
movsb
sub
add
sti
adc
jle
mov
js
jne
movsl
sahf
stos
and
add
lods
dec
fsts
mov
shll
ja
push
mov
dec
add
jg
xorb
mov
out
nop
add
push
cmpsb
ja
lea
enter
mov
hlt
dec
mov
hlt
xor
xor
push
cmp
pushf
mov
jg
cmp
jns
in
iret
cmp
xor
imul
and
fimull
mov
or
daa
add
sub
pop
push
sbb
sub
push
lock
cwtl
std
pop
fidivs
rorl
push
sbb
shlb
shlb
enter
dec
lock
sbb
add
or
je
or
pop
push
lock
cmc
cmp
add
repz
push
add
lcall
mov
cwtl
xorb
add
lods
rolb
and
daa
xchg
mov
xchg
cld
add
xor
jbe
mov
adc
mov
adc
jae
inc
rcll
pusha
dec
push
inc
repz
incb
in
ss
in
or
cmp
and
fldenv
mov
cltd
ret
mov
das
int
shrl
movsb
divl
loopne
add
and
add
add
mov
jb
mov
sbb
mov
movsl
cmp
or
ret
das
mov
loope
mov
rcrl
insb
and
ret
push
mov
js
xor
fcoml
shlb
or
imul
popf
and
outsl
add
out
mov
push
pushf
pop
into
jecxz
out
push
and
out
push
jp
push
addb
adcl
jl
pop
in
jno
test
sub
cmpsb
sub
or
inc
xchg
pop
test
sub
pusha
movq
or
sub
sbb
mov
and
jle
loopne
shr
push
lds
mov
and
dec
pop
inc
lcall
sbbb
repz
add
andb
fs
add
adc
mov
dec
jb
js
inc
imul
mov
cmp
lods
push
lock
push
adc
jb
fcomps
push
addb
sub
push
aad
pop
ret
adc
mov
mov
mov
sarl
dec
xchg
fs
mov
mov
xor
push
rclb
movsb
dec
leave
sub
and
arpl
sbb
and
sbb
dec
xchg
lds
inc
and
sbb
imul
rolb
iret
or
add
sbb
mov
xor
pop
adc
lock
xor
mov
inc
and
popf
int3
les
mov
test
loopne
inc
bound
inc
add
adc
adc
in
cmp
pop
orb
adc
and
fsubl
les
sub
add
sub
mov
sbb
adc
add
cmpsl
cmp
mov
mov
adc
fcoms
fdiv
int3
add
adcb
or
xchg
mov
and
push
mov
inc
add
sub
add
cmpsb
out
xor
popw
cltd
pusha
sbb
mov
jmp
adc
or
test
lock
push
stc
or
or
mov
adc
adc
int3
sub
loopne
sbb
push
and
gs
sarl
sbb
pop
dec
cmp
fwait
xchg
dec
add
test
jge
aas
add
shl
sbb
push
out
push
add
cmp
imul
in
mov
cmp
pusha
push
nop
jo
pushf
clc
cmp
pop
or
dec
sbb
fwait
sbb
out
mov
das
jo
fstpl
and
in
cmpsb
imul
inc
push
pusha
push
dec
jnp
je
xchg
cmp
lock
cltd
xchg
jno
push
add
rcrl
pop
mov
cmc
inc
adc
and
xchg
out
popa
xchg
enter
and
cltd
sub
dec
jp
sbb
test
std
pop
and
mov
mov
jne
pop
dec
inc
and
dec
int
iret
call
js
rorb
add
sub
mov
add
adc
and
fsubl
cmpb
stc
fisttps
fisubl
dec
and
fsubrs
push
xor
stos
fwait
sbb
testb
xchg
adc
mov
icebp
nop
sub
push
enter
enter
or
xor
fidivrs
ret
xchg
add
in
mov
push
fldl
test
add
mov
mov
cwtl
xchg
mov
or
and
sbb
loop
sbb
subb
inc
scas
shr
sub
aad
js
je
popa
mov
popf
nop
xchg
add
sar
xchg
or
repz
adc
cwtl
and
add
mov
cmp
sti
xchg
and
mov
mov
dec
dec
int3
pusha
add
flds
rcll
gs
dec
inc
dec
mov
adc
dec
jl
mov
lret
sbb
adc
cmpsl
pusha
data16
add
or
fbld
in
adc
dec
add
push
mov
fnop
xchg
fistps
push
sbb
outsl
add
dec
push
sub
xchg
add
xchg
sub
jp
cmp
mov
push
and
scas
loopne
jns
mov
or
sbb
stc
add
and
dec
insl
or
sub
andb
inc
mov
jp
fs
add
sub
mov
ja
stos
dec
add
sub
add
jge
xor
mov
add
out
push
jns
xchg
andb
or
mov
testb
mov
std
lret
cwtl
cmp
and
or
aaa
sbb
mov
fmulp
idivb
add
sbb
je
negl
mov
mov
daa
or
mov
xchg
fists
inc
add
ret
movsl
mov
jae
loopne
push
pop
clc
sub
mov
std
push
sarl
mov
jns
adc
mov
pop
mov
inc
cmp
hlt
add
inc
mov
loopne
jmp
sbb
push
xchg
or
dec
push
and
pushf
sbb
adc
out
add
int
lods
pop
sbb
mov
mov
add
lahf
push
sub
push
dec
sbb
sahf
mov
cmp
les
pusha
jnp
cmp
add
in
sub
clc
daa
mov
sub
push
cld
test
mov
int3
lcall
pop
imul
mov
hlt
stos
test
dec
cs
sbb
add
fadd
push
push
mov
rcrb
rcl
dec
sub
cld
add
and
adc
jl
add
cmpl
pop
push
add
das
cmpsl
inc
adc
je
add
scas
aam
pop
fs
mov
outsb
add
in
dec
sbb
mov
test
cmpsb
lods
cmp
in
mov
add
andl
aas
push
mov
add
xor
dec
pmuludq
fdivrs
push
scas
xchg
dec
push
addr16
adc
adc
mov
popa
jbe
hlt
movsb
add
hlt
xor
loopne
inc
mov
adc
or
adc
dec
lret
mov
adcb
and
repz
inc
dec
sbbb
sbb
cmp
sub
push
sbbb
jo
es
push
add
adc
and
push
int3
stos
or
setae
adc
cmpsb
cltd
fadd
xchg
roll
enter
jle
dec
mov
add
data16
hlt
dec
iret
inc
fsubrs
es
xchg
repnz
popf
mov
jmp
std
pop
push
mov
sub
sahf
xchg
jmp
ja
xchg
mov
pop
mov
dec
mov
mov
mov
push
sbb
xor
and
adcb
loopne
jg
mov
aas
inc
add
in
shlb
popf
mov
or
push
out
sahf
addb
jl
add
jle
mov
mov
and
jo
int
insb
daa
test
rorb
adc
nopl
pop
add
pushf
push
dec
int
mov
dec
jbe
sub
sbb
xchg
jo
gs
push
cmp
movsb
add
add
jmp
punpcklbw
adc
add
push
popf
les
pop
mov
mov
pop
xchg
sub
sbb
pop
je
mov
pop
cmpsb
frstor
jg
pop
or
xchg
adc
cltd
push
pop
inc
bound
dec
lea
xchg
int
loopne
push
adc
lcall
push
fs
xchg
cwtl
xchg
adc
mov
js
or
je
test
pop
fwait
hlt
pop
cmp
call
popf
lds
into
fs
nop
or
loope
pop
fwait
mull
insl
jg
push
inc
sbb
test
cwtl
mov
lcall
test
lods
sub
sbb
mov
dec
gs
addl
add
lahf
popf
mov
mov
adc
add
sbb
jge
data16
scas
sbb
loop
shlb
adc
mov
or
mov
add
xor
ret
scas
jmp
or
add
aas
je
dec
or
add
fs
flds
das
mov
stos
jmp
jnp
jno
lock
int3
test
std
mov
pop
call
mov
sahf
jl
call
push
mov
sub
bound
and
adc
or
or
imul
or
adc
arpl
call
popa
or
enter
sub
or
inc
in
adc
fwait
sub
push
add
sbb
mov
mov
in
push
int3
fincstp
sbb
mov
rorl
and
into
xor
cltd
bound
cmp
or
xchg
jmp
or
sbb
arpl
sub
or
adc
sbb
or
out
bound
bound
inc
and
je
add
cmp
xlat
sub
cwtl
incb
orb
rcl
ja
sbb
or
inc
add
arpl
mov
sub
mov
pop
jns
repnz
mov
xchg
outsb
sbb
inc
xchg
pop
or
pusha
sbb
inc
les
fsts
negl
int
and
leave
les
cltd
add
xchg
rcr
lea
fs
les
mov
sub
lcall
dec
add
lret
subb
or
and
adc
loop
sbb
les
nop
pop
add
in
iret
xorb
and
sbb
ljmp
mov
add
cltd
outsb
data16
or
xorl
pop
les
fnstsw
add
add
inc
add
clc
add
in
push
sub
cmpl
movsb
push
sbb
mov
mov
adc
dec
inc
xchg
mov
int
ss
aam
dec
and
jge
sbb
or
sbb
dec
sub
adc
sbb
dec
les
cmp
push
je
inc
les
pop
cmpsb
or
lcall
sub
sub
dec
fildl
mull
or
inc
test
add
xchg
and
popa
xchg
les
inc
call
push
add
leave
mov
pusha
push
adc
clc
xchg
and
sbb
lcall
mov
mov
mov
ljmp
jmp
inc
insl
sub
cmp
fwait
xor
sqrtps
pop
pop
dec
mov
inc
out
loopne
ja
push
and
xor
dec
je
push
xor
mov
lahf
add
xchg
je
or
mov
add
sub
xchg
mov
add
jnp
jo
jmp
sti
add
gs
imul
jb
cmp
int
sahf
push
gs
jge
sbb
xchg
ss
loopne
sbbl
xchg
and
pop
or
pusha
das
pop
mov
insb
cld
dec
add
out
jl
js
sbb
add
rorb
lds
shll
cmp
jo
xchg
jbe
add
xor
dec
ljmp
pop
mov
sbb
push
insl
jae
das
add
cmp
ljmp
lcall
mov
pop
dec
repnz
test
nop
sbb
std
jno
out
loope
and
jo
das
lock
add
insl
pusha
repnz
jl
inc
ds
push
add
pop
cld
or
jp
mov
sbb
dec
push
pusha
add
adc
data16
les
popf
mov
push
and
sti
cmp
cltd
sbb
test
and
mov
cmpsl
add
ljmp
mov
pop
inc
aam
jae
orl
popf
enter
add
mov
sub
push
or
mov
jge
adc
mov
loope
sbb
pusha
test
xor
xor
aaa
inc
aas
testl
push
dec
jmp
dec
push
mov
xor
xchg
and
insl
inc
call
fs
sti
adc
xor
push
jg
nop
loopne
shlb
and
cmp
stc
xor
adc
add
sbb
inc
loope
stos
neg
inc
daa
negb
jne
sbbb
fdivrl
jnp
cmc
mov
jle
dec
xchg
add
loope
loop
cmp
push
pushf
pusha
add
movsb
dec
adc
jmp
adc
xchg
fcmovu
iret
cli
aam
pop
add
sub
icebp
cmp
add
push
push
adc
dec
mov
pop
aam
cltd
inc
cwtl
mov
fsts
mov
insl
lcall
jb
loop
add
cltd
lock
bound
add
xchg
pop
js
fs
inc
lods
adc
stos
sub
push
clc
inc
add
xorb
or
cmp
push
sbb
sub
mov
ret
nop
adc
sbb
loop
adc
jl
dec
push
shlb
dec
es
sub
or
dec
sbb
and
insb
mov
mov
and
dec
adc
mov
xchg
inc
mov
jb
inc
pop
xor
adc
enter
dec
lds
ss
cmp
cmp
sbb
sub
cmovns
imul
jle
and
sub
push
xchg
xchg
and
mov
add
or
mov
push
sub
xchg
xorb
repz
adc
or
cwtl
mov
add
lods
rclb
cltd
enter
jl
jl
inc
or
or
xchg
push
mov
shll
xor
add
cmpsl
add
ja
add
lods
mov
or
mov
jo
sub
cmp
sar
push
dec
repnz
data16
imul
repz
movb
xchg
faddl
pop
sbb
inc
sarb
push
popf
jmp
xchg
push
xor
aam
jecxz
jnp,pn
push
inc
sub
cs
xchg
paddsw
mov
push
popa
xor
add
xlat
sub
adc
jp
in
mov
sub
push
mov
addr16
push
cmp
inc
js
push
loop
bnd
mov
push
push
out
cs
cmpsl
push
out
fwait
loopne
ret
adc
xchg
nop
test
mov
je
inc
mov
dec
ds
mov
jle
jne
cmp
jbe
aam
jns
pop
addb
mov
shrd
shlb
inc
mov
loop
add
shl
mov
outsb
add
mov
cmpsl
inc
scas
add
fnsetpm(287
xchg
pandn
hlt
and
mov
jnp
mov
cmp
stc
imul
pop
je
add
mov
or
or
xor
sbb
insb
dec
cmp
sbb
xchg
adc
js
dec
cltd
add
adc
scas
mov
lcall
dec
sub
les
push
pushf
ret
jb
pop
add
mov
loop
inc
fcompl
loop
add
rcll
push
xchg
lds
fs
sub
hlt
out
fbld
loope
aas
sbb
flds
jp
int3
mov
mov
js
mov
push
mov
les
cmp
pushf
sub
mov
dec
loopne
lods
test
divb
push
bound
je
mov
or
push
out
cld
aas
stos
sbb
lock
fldenv
push
outsl
dec
mov
sarb
adc
cmp
repz
ret
out
mov
sub
leave
hlt
lock
adc
fistl
and
jp
or
fsts
cmc
faddl
outsl
pop
cmp
xchg
adc
dec
cmpl
and
popl
sub
sub
mov
or
adc
fildll
sub
jp
dec
stos
add
cs
lahf
adc
inc
es
mov
adc
xchg
leave
rorb
imul
adc
adcb
cmp
in
ljmp
cltd
xor
dec
add
xchg
mov
push
fs
js
mov
mov
jb
add
test
arpl
cwtl
pusha
addr16
inc
push
xor
push
sub
xor
mov
push
stos
sbb
shl
adc
ficomps
xchg
loopne,pt
inc
push
ljmp
and
inc
sarb
xorb
mov
push
pop
rcrb
lahf
jmp
xor
and
or
rorb
mov
inc
test
lcall
or
jg
jo
in
mov
cmp
imulb
and
out
int3
fs
sub
inc
mov
add
test
scas
int
cmp
jmp
adc
mov
lods
add
aas
iret
lcall
push
sub
or
jb
out
mov
adc
or
fs
sub
add
cmp
and
jl
es
clc
sub
jns
inc
nop
rcrb
push
sbb
mov
mov
jl
xor
lret
inc
sbb
fwait
add
fistps
dec
jl
add
mov
mov
mov
sbb
and
in
ja
inc
jo
cmc
adc
rolb
aad
in
push
inc
and
movb
aas
icebp
cltd
in
sbb
subb
ret
movsl
pmuludq
and
push
xor
xchg
fstl
shrb
and
loope
cld
add
nop
loopne
hlt
dec
push
loopne
dec
cmp
pushf
adc
add
cmp
pushf
stos
stc
mov
xchg
inc
cmp
inc
in
xchg
pusha
jmp
arpl
mov
repz
jg
add
test
mov
push
es
add
jmp
jae
sub
dec
loopne
loopne
inc
cmp
pop
dec
inc
int3
nop
les
add
imul
push
shr
push
add
mov
add
stc
stos
pushf
cmp
lahf
adcb
aas
icebp
push
ds
call
mov
adc
xchg
repnz
pop
xor
enter
dec
jmp
mov
dec
inc
add
mov
setp
cmpl
sub
iret
mov
inc
insl
xor
mov
cld
sbb
movb
cmpsl
in
movsl
cmp
dec
cli
adc
je
xor
sti
or
push
lcall
add
dec
pop
and
cltd
mov
or
call
js
add
jp
frstor
je
pop
ficoms
daa
fldl
or
jb
das
sbb
or
xchg
add
sbb
adcl
pop
jg
sub
jnp
in
cmp
xchg
push
es
xchg
sub
and
loopne
or
sbb
inc
dec
jb
hlt
push
test
and
mov
bound
adc
sti
sub
je
sarb
and
add
sbb
lock
lock
rcrb
or
pop
sbb
pop
test
jae
cmpsl
jl
add
sbb
ja
orb
sbb
dec
jl
dec
add
push
movsb
adc
movsb
cwtl
or
fnsave
mov
repz
aam
sub
mov
rcll
or
enter
push
mov
fs
lahf
loope
jns
idivl
pusha
cltd
daa
nop
xchg
jno
or
add
dec
jmp
movsb
or
nop
and
cwtl
out
sbb
pop
shll
inc
or
cmc
dec
call
jl
jp
aaa
sahf
mov
add
push
jg
mov
push
push
sub
loopne
sbb
clc
movsl
cmp
push
fs
cmp
or
hlt
in
xorb
movl
dec
jnp
outsl
xor
sbb
or
js
add
mov
cltd
and
mov
imul
adc
mov
dec
int
stc
popf
popa
movsb
dec
sub
xor
lock
dec
and
jo
mov
mov
adc
dec
cmp
xchg
sub
mov
add
mov
repnz
mov
shrb
sbb
sbb
cwtl
mov
scas
daa
cmp
jne
inc
push
jb
adc
movsb
mov
xor
lods
and
loopne
add
xor
fwait
or
pushf
push
mov
lods
cwtl
add
jne
jecxz
hlt
dec
test
add
int3
xchg
loope
popf
out
push
ficoml
jge
test
mov
inc
sub
or
adc
outsl
popf
jmp
or
dec
ss
push
dec
arpl
adc
add
jp
addb
clc
icebp
cwtl
jmp
je
sbb
xchg
fdivrl
into
and
ret
inc
aas
call
pop
test
mov
in
gs
cmp
in
popf
dec
push
shlb
add
sbb
mov
int3
fs
xor
dec
jp,pt
or
xchg
test
mov
pop
dec
cmp
insb
sbb
loopne
in
jl
insb
jnp
pop
cmpsb
add
in
rcr
sbb
push
int
jne
call
mov
lret
or
jge
dec
jo
je
pop
outsl
sub
daa
sub
arpl
or
sub
and
test
fs
inc
push
push
andb
push
mov
sahf
clc
pop
cltd
mov
stc
sbb
push
and
aam
xchg
add
sub
icebp
movsl
sarl
xor
incb
push
dec
mov
aam
pop
mov
in
int
jae
call
fadds
jo
int3
xchg
mov
or
mov
daa
mov
pop
add
sti
xchg
les
mov
ljmp
push
loope
and
data16
and
push
movsl
nop
lcall
les
pop
mov
and
cmpsl
adc
jl
sub
or
frstor
inc
jo
cmpsb
call
rorl
loope
cmpb
dec
cmp
hlt
push
dec
push
push
aad
popf
jmp
pop
or
inc
sarb
add
daa
adc
xchg
test
les
dec
pop
add
mov
cmp
enter
jae
push
pop
js
aas
test
pop
fwait
add
or
dec
inc
inc
inc
xchg
fisttps
call
sbb
out
mov
cld
je
cld
sub
xchg
add
sub
xchg
ficoms
jl
add
xchg
or
xor
push
jp
push
shrb
inc
sbb
mov
and
js
xchg
push
cwtl
imul
cmp
add
loopne
xchg
stos
adc
sarb
repz
in
mov
icebp
or
add
insl
pushw
mov
rcll
mov
inc
pusha
stos
fists
dec
mov
in
push
test
pop
leave
xchg
ret
enter
adcb
rclb
xor
repnz
nop
lcall
xchg
scas
push
cmp
sbb
xor
mov
jnp
enter
xlat
push
mov
sbb
push
add
pop
pop
ljmp
add
push
inc
filds
mov
jo
iret
rorb
add
cld
add
pop
subb
fcoml
pop
fdivs
pusha
push
nop
cwtl
jmp
or
jl
icebp
bound
rcrb
in
add
add
or
mov
out
lea
sbb
sub
stc
jne
mov
and
xchg
add
mov
popf
clc
cmp
add
and
pop
call
ljmp
adc
cmp
or
leave
mov
mov
sbb
clc
jo
or
dec
push
shrb
mov
inc
xchg
stc
bound
cld
sbb
nop
movsb
add
or
and
cli
push
rorb
pop
mov
mov
cmpsb
and
mov
lret
sbb
mov
jle
cmp
sbb
or
xor
movhps
les
xor
je
js
jp
js
enter
movsl
jmp
mov
inc
repz
jl
pop
in
xchg
lahf
dec
adc
fs
aas
movsl
loop
data16
push
mov
and
sysret
and
jg
add
mov
in
idiv
popf
cli
push
cmp
add
dec
mov
xchg
pop
test
xchg
adc
mov
dec
mov
push
fstl
insb
adc
cmpb
mov
add
xor
mov
jl
adc
out
aam
jae
fidivs
cmp
test
push
sub
cmpsb
jl
fiaddl
add
cmp
cld
popf
nop
dec
and
in
mov
add
push
xor
or
out
inc
adc
inc
add
jl
in
fidivrl
sti
lret
or
les
pop
in
sar
adc
mov
out
cmp
add
jl
fstps
jp
mov
outsl
cwtl
add
aam
fstpt
sub
rclb
push
mov
add
call
cwtl
rolb
adc
jnp
aas
jo
sbb
mov
cmp
mov
rolb
sbb
jo
mov
and
ss
pop
dec
push
ljmp
leave
mov
adc
add
push
stc
sub
cli
testb
lock
popa
or
sub
dec
push
push
ljmp
ret
stos
scas
and
jne
add
into
or
hlt
add
js
cwtl
push
push
inc
pop
xor
add
add
fadds
mov
loopne
adc
cld
dec
jb
mov
int3
mov
adc
fstl
mov
dec
adcb
mov
insl
dec
push
or
push
mov
outsb
mov
and
adc
or
dec
cmp
inc
add
in
sub
pop
ret
and
adc
mov
insl
les
mov
sahf
ds
cwtl
pusha
push
mov
mov
jge
ds
cmp
sahf
mov
dec
xor
jecxz
mov
subb
or
inc
xchg
movsl
rorb
add
dec
inc
mov
add
xor
adc
inc
push
push
ss
fadds
add
gs
sub
stc
repz
pop
pusha
lods
mov
mov
cmp
pusha
sub
adc
add
inc
cmp
xchg
push
add
icebp
rolb
mov
mov
push
push
inc
test
or
into
and
test
je
pusha
nop
push
ss
sub
mov
inc
or
ret
lock
jnp
into
lock
ret
fcoms
sti
sbb
enter
pop
scas
xchg
xor
sub
inc
or
or
cmp
push
ljmp
je
push
add
std
dec
ja
cld
cmp
adc
jbe
loopne
push
or
or
daa
and
call
mov
test
push
js
cld
inc
in
jo
mov
add
icebp
nop
popf
std
and
je
adc
lahf
xchg
or
xchg
adc
sub
sti
push
jp
pop
pop
jl
or
push
je
iret
lret
or
xor
and
sti
inc
push
in
insb
hlt
adc
call
test
shlb
dec
ja
cmp
and
lods
sub
outsl
hlt
jne
xchg
in
bound
fadd
jl
mov
fs
int3
xchg
lock
mov
jle
rolb
and
jmp
and
sbb
mov
cwtl
mov
das
xor
add
in
push
xor
jnp
rclb
clc
cmpsb
or
std
popf
add
xlat
jl
dec
cs
inc
pushf
cmp
pop
pop
or
iret
sbb
fcompl
jmp
hlt
pushf
jl
pushf
loop
cmpl
pop
adc
dec
sbb
nop
jl
rorb
add
mov
or
test
xchg
and
pop
ja
fcoms
and
loopne
push
and
push
daa
and
imul
fadds
adc
mov
push
loope
test
dec
mov
jne
fs
xchg
hlt
mov
jle
inc
mov
mov
jnp
add
pmullw
xor
pop
adc
pusha
rorb
xchg
xor
or
add
rolb
shll
mov
mov
clc
adc
jg
pusha
and
rcrb
call
sti
or
mov
pop
sub
pop
or
nop
rorb
movhlps
daa
xor
sub
dec
adc
out
pop
shlb
in
int3
lret
movsl
push
in
leave
mov
and
push
in
adc
jl
xlat
inc
push
push
mov
or
push
es
push
sub
dec
or
movb
mov
adc
add
add
es
or
pop
dec
pushf
sub
mov
shrl
mov
pop
dec
mov
andb
flds
jnp
and
push
lahf
lock
in
out
sub
pop
add
jl
enter
ret
and
and
mov
inc
xchg
sub
fildl
jne
xorb
adc
scas
iret
ret
and
jo
hlt
dec
mov
rolb
movsl
add
aam
jp
cmc
sub
test
bound
ljmp
add
add
aam
and
sub
add
pop
mov
push
stos
push
add
in
adc
mov
pop
inc
jp
inc
push
sbb
dec
cld
add
or
xchg
mov
or
jge
mov
jnp
cmp
cmp
rclb
pop
sbb
and
push
in
ljmp
lahf
ss
sub
xor
hlt
out
inc
mov
push
lock
std
loope
mov
mov
data16
pop
inc
or
jae
jp
push
sbb
outsl
cmp
xchg
xchg
shl
stos
sub
insb
sbb
jle
or
js
popa
loopne
outsb
in
aaa
add
ret
test
subb
xchg
flds
xor
dec
push
neg
adc
fidivrl
aam
xchg
sbb
pop
mov
leave
sbb
sub
and
dec
inc
loope
and
cmpsb
inc
add
ljmp
xchg
cwtl
loopne
rclb
test
fsubl
mov
addr16
clc
in
cmpsl
adc
pusha
insb
push
push
testb
mov
cwtl
cwtl
out
cwtl
add
sahf
shl
insl
mov
push
ja
add
lret
je
cld
pusha
call
fdivl
add
sti
leave
ds
outsb
subl
xchg
or
push
add
jae
in
add
insb
add
xchg
std
dec
adc
clc
adc
pop
cmp
test
lea
xor
add
and
jg
or
icebp
add
fprem
out
xchg
mov
rcrb
jns
test
imul
dec
or
fcoml
adc
or
test
jnp
push
clc
inc
fimull
pop
cmp
xor
les
dec
test
sbb
pushf
xor
rcrb
movsb
cmp
loope
pop
lods
xor
iret
sub
or
dec
rcll
mov
imul
inc
pop
insb
xchg
adc
push
pushf
mov
add
xor
xchg
idivl
add
fdivl
xchg
bound
nop
jnp
ja
add
xchg
push
in
add
rcll
jle
inc
inc
or
adc
out
xchg
rorl
repz
pop
call
sbb
lret
adc
in
sub
push
sub
cmp
lcall
push
xor
and
pop
sub
mov
lds
adc
or
or
xor
out
jne
cmp
mov
add
dec
lret
call
adc
sbbl
pop
add
loope
dec
inc
mov
or
jle
shrl
aad
or
add
popa
dec
xlat
xor
push
inc
test
imulb
mov
sub
in
mov
data16
dec
lock
dec
inc
faddl
push
xchg
pushf
in
sub
pop
add
cmp
aam
and
gs
xorb
xlat
mov
hlt
subb
sub
sub
mov
lock
or
in
mov
jo
jl
add
outsb
hlt
adc
dec
adc
arpl
iret
xchg
loopne
icebp
flds
cmpsb
xor
lods
sub
ljmp
push
mov
xchg
push
shlb
sub
pushf
repnz
shlb
xor
jl
or
adc
cwtl
pop
jne
sub
clc
test
data16
adc
push
pop
lock
push
iret
xor
cmp
or
dec
push
popa
inc
mov
aas
enter
das
sbb
push
sub
mov
shrb
hlt
add
sub
jae
jl
mov
jl
or
loop
fsubs
dec
test
or
or
shll
push
xchg
jl
add
jo
push
pop
xor
sbb
test
nop
add
sub
hlt
xor
aas
mov
rcll
ds
pushf
sub
cmpsb
pusha
or
add
xchg
push
push
popf
mov
xchg
popl
cld
and
pop
test
or
jne
sub
adc
enter
rcl
lcall
or
mov
adc
cmp
and
add
inc
add
adc
push
add
ror
repnz
inc
dec
sarb
mov
sub
aam
call
inc
js
ja
flds
lds
call
imul
nop
jo
packssdw
stc
mov
inc
and
js
ja
test
into
pusha
pop
add
shl
sub
shlb
or
xor
add
inc
sbb
add
popf
mov
jo
sub
mov
mov
js
inc
jle
in
jnp
cmp
xchg
mov
mov
cltd
in
cmp
or
jl
cwtl
xor
inc
mov
mov
xchg
loopne
push
cmp
popf
idivb
ss
mov
adcb
movsb
pop
mov
insb
cltd
or
xor
mov
mov
popf
and
bound
sbb
add
xor
mov
sub
enter
or
xor
mov
inc
mov
add
sbb
or
jo
xor
add
mov
sbb
cmp
push
mov
rcrl
add
mov
iret
les
or
xor
sbb
into
mov
add
add
mull
jecxz
aaa
mov
ja
lds
and
push
add
cmp
pop
sarb
ret
pop
sub
add
push
jne
fsubrl
cmp
test
int
ret
push
mov
dec
dec
ror
adc
inc
or
imul
bound
add
dec
xor
pop
icebp
pop
adc
mov
shrl
or
daa
jg
pop
pop
sub
cmpsb
or
cmc
arpl
in
xor
pop
jbe
adc
push
xchg
mov
mov
cmp
imul
or
cld
pop
pop
gs
pop
pop
fs
adcb
loop
mov
or
cmpsb
add
cmp
loope
fmuls
test
cli
dec
dec
push
jle
jo
push
xor
jp
add
shr
mov
movsb
cmpsb
pop
rcrl
cmp
fxch
mov
adc
xchg
sub
fldcw
pop
inc
push
mov
adcb
push
push
scas
push
xadd
pop
push
and
pop
ret
add
adc
movsl
or
pop
sub
push
mov
xor
mov
push
xor
xchg
sbb
pop
mov
bound
aas
in
mov
or
add
ds
iret
movsb
push
les
mov
cmp
nop
jl
fistl
jo
add
lahf
popa
lock
dec
pop
mov
add
shl
imul
mov
or
ret
rolb
cmp
sbb
inc
shl
or
pusha
pop
scas
jl
jmp
sti
or
jae
adc
dec
sub
push
jae
and
es
adc
in
and
aas
mov
sbb
add
xchg
adc
push
add
pop
mov
ljmp
push
add
or
punpcklbw
mov
arpl
mov
push
ret
andb
inc
outsb
clc
fistpl
add
inc
pop
add
pop
push
pusha
add
adc
ss
jge
push
sub
sbb
daa
cmp
insl
mov
ljmp
call
push
push
cld
mov
add
adc
testb
push
pop
imul
xchg
add
cmp
mov
aaa
rorb
adcb
scas
cmp
in
push
mov
movsl
mull
mov
imul
and
cmpsb
dec
shrb
dec
ss
in
testb
imul
mov
pop
jp
lods
jns
outsb
mov
call
push
movsl
push
test
cwtl
adc
orb
sub
sbbl
push
sbb
fadds
loop
inc
cwtl
and
out
insb
add
jl
dec
xor
add
filds
idivl
repnz
mov
rclb
push
mulb
xchg
adc
push
sub
xor
sbb
ret
push
adc
shlb
mov
roll
ljmp
enter
fcoml
sbb
fstpl
rcrl
add
ljmp
out
lcall
cmp
jmp
jecxz
insb
or
fldl2e
icebp
jge
push
jl
mov
or
sbb
ljmp
rcrl
sub
inc
mov
sub
into
pop
orl
mov
mov
jmp
sub
push
add
jno
push
adc
or
xor
mov
mov
cs
jle
hlt
fildl
pop
sub
mov
shll
xchg
frstor
or
sti
mov
add
enter
and
mov
cwtl
or
and
rcr
cwtl
movsb
push
push
or
push
bound
xchg
mov
mov
xchg
add
shl
int3
add
sbb
or
testb
push
and
iret
mov
mov
add
in
add
int
sub
add
dec
and
call
sub
add
mov
out
sbb
push
jg
std
std
sub
pushf
jmp
in
sub
cmpsb
mov
pop
sbb
and
jmp
sub
push
dec
pop
inc
cmp
push
and
orl
into
sub
ret
add
loop
inc
nop
jno
pop
pop
es
lret
rclb
das
xchg
pop
add
jno
adc
add
inc
stos
add
pop
push
pushl
add
xchg
into
push
jmp
mul
cwtl
push
sub
mov
clc
push
add
sub
sub
std
pop
mov
lock
jmp
mov
sbb
fdivs
mov
dec
repnz
adc
adc
pop
aaa
and
mov
stos
push
mov
inc
popa
je
mov
test
or
aam
popf
xchg
ret
push
push
inc
sub
cld
sbb
lods
mov
inc
dec
loope
add
xor
aad
pop
es
adc
out
mov
dec
roll
xor
sbb
pop
jmp
push
bound
cli
out
cmpsb
scas
dec
xchg
fadds
pop
push
rcrb
jno
orl
in
push
call
clc
call
test
insb
add
push
inc
push
adc
mov
mov
sbb
sub
sub
pop
test
jmp
add
aaa
adc
sbb
cmp
push
jne
ja
incl
in
in
ja
out
xor
aas
shrl
xchg
or
jb
pop
or
add
iret
jmp
push
pop
pop
shl
sar
sbb
loope
ret
dec
lcall
mov
cmc
ljmp
ja
adc
sub
pop
inc
rolb
push
mov
das
add
incl
add
and
or
xchg
sbb
test
jo
popf
or
subl
push
pop
pop
insl
jno
sbb
or
push
sahf
xchg
push
js
movsb
pop
dec
and
mov
jnp
fisttps
out
in
pop
ds
xchg
les
inc
mov
movsl
mov
pop
and
sbb
or
or
xor
cmp
push
mov
jnp
inc
or
xor
jb
xor
jmp
inc
insl
and
jne
add
repz
pop
sbb
pusha
jmp
and
mov
pop
je
and
dec
mov
and
or
mulb
pop
add
xor
push
cmpsb
sbb
cmpsl
aaa
inc
ret
pop
outsl
adc
fcmovbe
mov
xchg
push
mov
xor
pop
push
sbb
add
pop
push
mov
push
fisubs
cmp
xor
xor
add
out
xor
incl
ret
pop
pushf
arpl
push
jmp
lods
xor
mov
push
inc
mov
stos
cwtl
add
orl
inc
notb
mov
xchg
dec
out
dec
ret
dec
or
mov
pop
faddl
push
pop
xor
lock
rclb
push
sbb
jmp
mov
add
pop
ds
leave
mov
mov
ret
mov
adc
aas
mov
int3
daa
sub
test
jmp
shl
outsb
into
or
adc
push
and
insb
xor
or
out
or
flds
cmp
cld
sub
pop
nop
aam
mov
and
aas
inc
andl
push
sub
es
mov
dec
inc
mov
das
bound
push
adc
fisttps
or
add
dec
orb
nop
xor
aam
sbb
jecxz
nop
insb
or
sub
push
mov
jp
push
inc
das
sub
ret
or
fldenv
enter
push
xchg
dec
fs
mov
dec
mov
pusha
xlat
push
mov
es
push
repnz
mov
push
pop
fsubrs
hlt
cmpb
push
mov
out
or
or
xchg
aad
or
jmp
add
mov
sub
lds
gs
add
cltd
jne
test
pop
sbb
pop
jmp
push
test
fcoms
pop
mov
jmp
shrl
cs
and
mov
mov
sbb
popf
add
mov
shlb
pop
and
push
dec
mov
or
add
jl
sub
dec
mov
xor
es
dec
add
mov
out
jmp
stos
inc
rolb
adc
int3
cmp
push
mov
jl
sub
xor
scas
mov
mov
add
cmpsb
push
adc
pusha
cld
or
rorl
iret
or
inc
es
bound
xchg
xchg
inc
add
fadds
call
fs
test
add
push
loopne
int3
pop
push
movsl
aad
dec
push
testl
dec
subl
or
add
jmp
and
xchg
push
int3
stos
push
inc
pop
adc
pop
or
or
push
jg
and
clc
js
and
push
or
sbb
cmp
add
or
or
inc
incb
or
push
stc
sbb
push
jmp
sbb
cs
or
fwait
jbe
adcl
push
xorl
in
cwtl
push
cmc
cld
xor
fucomi
aaa
add
ljmp
xchg
pop
pop
movsb
cmp
cmp
rolb
cld
add
loope
lods
sbb
repz
lock
xchg
dec
inc
ficoms
xor
subl
add
push
add
push
sub
hlt
ret
jmp
mul
jnp
imul
sub
jmp
pop
jecxz
or
adc
movsb
or
arpl
jnp
xchg
loopne
fs
or
dec
sub
sti
cmpl
and
pop
pop
dec
enter
in
sub
dec
dec
je
in
cli
or
and
stc
test
xor
mov
dec
fnstcw
rol
inc
xor
jmp
sbb
push
lret
outsl
add
gs
adc
lock
adc
add
jge
subl
in
push
cmpl
clc
dec
jp
sub
out
fldenv
add
and
pop
rolb
sub
in
les
push
mov
or
adc
pop
in
sub
add
adc
jp
or
ds
das
sbb
mov
fsubl
clc
mov
pop
pushaw
test
roll
add
push
push
push
or
cmpb
xor
mov
test
in
add
push
data16
push
xorb
push
push
mov
aam
mov
lret
sbb
mov
outsb
pop
pop
nop
ja
push
sbb
addb
andl
mov
fisubrl
stos
dec
push
xor
push
movsb
pop
in
or
pop
add
outsb
mov
mov
pop
inc
aad
adc
jb
pop
dec
pop
pop
push
cmp
and
and
int
adc
pop
pop
shr
cwtl
stc
and
insb
sub
popf
push
fistpl
pop
out
sti
sub
mov
sbbb
adc
cmp
inc
pop
pop
inc
gs
sbb
jne
cmc
pop
rcrb
pop
js
cld
or
and
cmpsl
cwtl
or
pop
xchg
fs
pop
pop
test
xor
inc
sbb
xchg
filds
pusha
mov
dec
incl
gs
mov
cli
mov
mov
addb
imul
adc
test
ret
xor
pop
push
jl
movsb
pop
jmp
push
push
out
cmp
pop
lret
add
pop
pop
mov
sub
loope
shr
in
cmpsb
push
mov
inc
cli
jnp
movsb
fistpl
test
sub
rclb
cmpsl
and
shlb
imul
pop
xchg
adc
fdivrs
push
fistpl
sub
jo
adc
jecxz,pn
push
and
inc
js
push
push
add
pusha
adc
out
sbb
cmc
sub
insl
lgdtl
pop
push
push
js
jmp
sub
push
pop
mov
and
sub
pop
xor
pop
mov
popa
ret
out
mov
xor
addr16
add
not
xor
imul
xor
mov
sti
or
pop
xchg
scas
mov
push
add
sub
inc
xlat
loop
clc
sbb
add
nop
push
inc
out
add
mov
add
pop
sahf
pop
push
ret
int3
nop
jmp
out
andl
cmp
or
push
ficomps
xor
add
daa
pop
inc
addb
jmp
lcall
fstps
scas
sbb
leave
pop
or
insb
dec
gs
push
mov
add
scas
xchg
inc
iret
sub
mov
lods
test
negb
adc
mov
and
pop
outsb
mov
pop
icebp
cmpsl
movsl
sub
out
xchg
adc
cmp
sbb
jmp
roll
loopne
out
or
mov
mov
sahf
mov
or
push
inc
pop
inc
jmp
xlat
push
ss
adc
sub
pop
xor
cmp
jge
mov
nop
cmp
inc
aaa
ret
je
dec
pop
jbe
mov
pop
add
stc
icebp
and
push
mov
sbb
lret
aad
gs
in
lock
xchg
sub
cmp
or
es
mov
jmp
cmpsb
xor
dec
sub
mov
jmp
or
test
mov
xor
or
js
rcrl
lret
pop
adc
mov
jno
call
stos
xor
imul
sti
rcll
pushf
lret
sub
dec
sub
jecxz
ljmp
test
aam
pusha
xchg
idivl
xor
adc
out
jns
xor
cmp
or
popl
or
sbb
test
js
cmc
push
incb
gs
sub
arpl
call
mov
jbe
cmp
xchg
jg
xchg
push
ret
fwait
add
inc
dec
push
and
das
jl
fistpl
and
add
sbb
add
mov
gs
xor
jmp
sub
icebp
mov
sarl
xor
shlb
adc
dec
mov
pop
push
orb
push
test
es
addl
andb
cmp
sub
in
or
xchg
push
or
mov
dec
xor
jmp
push
add
jmp
aad
es
or
or
lcall
add
enter
shl
xor
je
shlb
jmp
in
add
push
dec
shrb
aam
add
push
mov
loop
sbb
repnz
rcrb
inc
ret
and
test
jb
fcoms
inc
add
out
std
sub
hlt
repz
xor
ret
sub
ret
ficoms
mov
adc
push
fsubrs
jge
pushf
sub
shrb
add
popa
and
jle
nopl
out
cmc
sahf
inc
sub
add
dec
daa
add
cld
inc
repnz
jmp
pop
shl
sbb
cltd
ljmp
xor
push
pushaw
leave
push
inc
push
andb
cmp
lret
dec
or
or
or
pop
jbe
mov
add
add
out
push
add
ljmp
addb
jne
aas
insb
lret
or
mov
inc
andl
cmp
test
xchg
loopne
push
mov
inc
push
mov
push
sbb
ja
xor
inc
rorl
jo
mov
sub
movsl
rorb
mov
inc
lods
sti
mov
mov
fwait
jmp
and
mov
lret
sahf
ja
cmpb
or
mov
icebp
add
sbb
jmp
out
inc
ja
add
ret
pop
adc
pop
sarb
add
rorb
jbe
enter
mov
inc
dec
in
leave
mov
rorb
pop
pop
nop
in
add
push
push
hlt
or
aaa
mov
pusha
inc
cmpsl
jo
adc
lea
leave
sub
in
add
jp
and
pop
shll
jno
add
test
in
dec
and
inc
lods
sub
arpl
adcb
pop
leave
sbb
cmovs
leave
pop
push
aad
push
popa
out
and
add
lret
sar
test
push
mov
sub
ljmp
sbb
pop
mov
sub
mull
push
mov
jmp
cmp
jl
pop
pushf
push
inc
dec
not
sub
out
add
sbb
roll
test
add
xchg
mov
sbb
cli
pop
xor
and
or
pop
dec
adcl
pop
mov
loopne
mov
push
sub
push
add
add
int3
popa
repz
pop
into
ljmp
pop
jb
std
jo
jnp
cli
pop
repnz
xor
mov
dec
sub
lret
or
loope
lods
es
adc
sub
pop
push
inc
jmp
fwait
sbbl
inc
nop
insb
adc
push
es
incl
pop
ret
adcb
jp
sbb
andl
add
scas
repnz
cmp
add
shr
arpl
ret
dec
shlb
shl
test
lret
pop
aaa
ret
mov
sbb
add
jge
sub
sbb
push
in
and
pop
dec
mov
adc
ja
icebp
add
in
pop
sub
out
or
inc
nop
mov
xor
rclb
and
or
clc
cwtl
xchg
adc
add
inc
mov
inc
cwtl
and
fs
sbb
jo
add
pop
pop
js
jne
fs
movsl
orb
xchg
push
enter
and
sbb
popa
and
shl
nop
push
mov
loopne
push
adc
jbe
mov
das
test
out
cmpsl
xor
cmp
inc
js
add
add
je
clc
sub
pop
enter
inc
fisttpl
add
lds
push
es
jnp
push
in
or
nop
pop
popa
sub
adc
popa
fcmove
xchg
and
aad
or
mov
add
aad
inc
movsl
adc
subb
call
ss
or
fcoms
cmc
and
inc
sub
mov
imul
and
push
push
sub
pop
ret
cwtl
xor
cs
pop
mov
pusha
or
rorl
ficompl
xor
xlat
ror
sub
pop
addb
movsb
pushf
xchg
cli
push
mov
mov
sub
sub
push
ds
test
cmp
xlat
aam
adc
push
arpl
sub
adc
dec
push
and
and
mov
fldl
stos
mov
dec
pop
sbb
jbe
jns
gs
cmpb
ljmp
adc
mov
sub
mov
inc
add
mov
ror
testb
std
cltd
jg
call
lret
push
popa
or
push
mov
movswl
xor
dec
pop
add
pop
jl
es
adc
mov
dec
stos
out
popf
mov
xor
push
or
insb
mov
dec
mov
dec
or
loopne
shlb
jmp
lds
mov
lds
pusha
adc
ss
xlat
test
or
pop
mov
and
adc
push
inc
adc
mov
xor
outsl
push
mov
pop
enter
sub
pop
in
xor
pop
lcall
insl
jmp
pusha
mov
pop
pop
xchg
mov
push
fmull
subb
repz
inc
pop
dec
push
mov
mov
jmp
mov
jl
out
xchg
push
and
cmp
mov
adc
or
js
stos
bound
jg
sub
sub
inc
jae
or
push
shrl
lock
rcll
add
lods
push
shl
inc
sahf
lret
addb
and
add
push
jmp
pop
pop
mov
rorb
nop
pusha
mov
fnsetpm(287
dec
push
popf
popa
adc
xor
pop
xor
pop
mov
jo
test
sarb
das
add
xorb
test
arpl
add
mov
mov
xchg
push
mov
dec
sub
jecxz
adc
jnp
or
fsts
bnd
std
lret
mov
or
dec
pop
push
ljmp
jmp
pop
push
and
pop
fadds
add
addr16
mov
sub
and
stos
inc
lcall
sti
int
fmull
les
push
jbe
pusha
inc
jmp
int
mov
leave
nop
inc
and
lret
push
jmp
push
fmul
mov
push
in
or
xchg
xor
mov
inc
gs
mov
xadd
pop
push
or
xor
or
or
pusha
add
dec
add
jo
jle
loope
sub
outsb
pushf
loopne
je
dec
test
es
pop
cmovno
add
add
popa
jns
dec
pop
clc
inc
pop
divb
popa
push
jmp
and
adc
xchg
sub
ret
femms
push
mov
mull
iret
push
sub
adc
add
bound
shl
shr
add
pop
fstpl
mov
mov
addr16
rol
aam
mov
mov
xor
leave
mov
rcll
test
fldlg2
movsb
or
jmp
addr16
xor
push
scas
mov
mov
mov
add
add
and
add
add
aam
jo
ret
mov
pop
and
pop
or
sub
bswap
and
add
scas
xchg
or
sbb
adc
addr16
jle
push
jmp
push
nop
dec
int3
es
push
push
push
adc
add
lock
or
cmp
sahf
pusha
or
addb
adc
push
xor
xorl
fwait
cmp
neg
shl
add
fstpt
in
add
loop
in
add
loope
jle
or
les
cmp
jmp
int
cmp
push
pminsw
outsb
ret
mov
les
test
filds
push
mov
shr
push
sub
dec
inc
test
add
add
aad
int
sbb
push
or
pop
pop
mov
or
mov
ret
pop
jmp
inc
inc
push
mov
jl
cmp
cvtdq2ps
testl
sub
dec
xor
test
rcl
rcl
gs
aas
inc
outsl
mov
sub
fisubl
add
cmp
mov
cmpb
es
xor
jmp
lret
jmp
cmp
test
rcrb
imul
xor
clc
jmp
repnz
lahf
inc
mov
sbb
dec
or
pop
jle
pop
pop
insl
pop
into
ror
push
push
scas
sbb
mov
dec
mov
adc
ja
pushf
mov
js
add
or
icebp
movsb
dec
pop
xorl
shll
xorb
fxch
push
cvtdq2ps
jno
lea
mov
push
std
sbb
pop
fs
xor
rcl
xchg
pop
cld
mov
lcall
mov
xchg
sub
rclb
xor
sbb
shll
mov
sub
test
add
sbb
xchg
fdivrs
dec
and
jl
cwtl
aam
pop
push
mov
mov
push
mov
push
push
push
mov
add
mov
pop
add
and
pause
adc
shll
mov
dec
add
outsb
jns
jo
mov
dec
or
inc
and
sbb
and
mov
aas
mov
push
rolb
mull
in
test
push
test
mov
inc
cmpsl
popa
mov
mov
fldt
popa
es
call
dec
sar
sub
fwait
sub
push
mov
xchg
daa
adc
push
pop
aas
pop
or
movsl
mov
add
rolb
test
mov
daa
enter
sbb
add
push
call
push
mov
loopne
in
pop
cwtl
xor
pop
or
push
jmp
cmc
sub
mov
cwtl
and
jo
sbb
push
imul
sti
add
xor
jb
and
es
sbb
or
adc
jno
dec
mov
or
jle
test
jmp
push
rol
jecxz
imul
into
inc
addr16
push
in
xorb
inc
add
repnz
ss
or
jo
rcll
into
mov
or
xor
xchg
dec
mov
mov
es
fnstenv
push
imul
inc
fisttps
mov
std
dec
or
out
push
sbb
gs
shl
into
cld
out
add
int
fadd
jg
xor
push
stos
adc
insb
add
and
test
xchg
lock
push
lds
jg
pop
jmp
push
mov
idiv
sub
in
mov
pop
ret
out
sbb
add
jmp
call
push
mov
loop
sub
outsl
test
xchg
stos
popf
test
mov
mov
fwait
lret
das
inc
shrb
xor
fstpt
pop
test
movl
mov
lret
aas
lret
xor
jo
movsb
ds
xor
push
fstpl
add
push
stos
les
pop
pop
cld
and
lods
jmp
orl
add
stc
pop
push
dec
fwait
and
les
xlat
rol
push
mov
or
push
mov
xor
push
loop
jl
and
mov
or
aas
std
shrb
push
or
cmp
xor
pop
mov
or
mov
or
inc
adc
jbe
push
push
dec
and
xlat
pop
or
mov
lods
pusha
jae
lret
and
add
into
icebp
fdivrs
lcall
das
movsl
jnp
cmpsl
adc
cmp
mov
push
lock
dec
pop
ljmp
lret
jmp
or
xor
jmp
add
xor
add
and
jae
loopne
cmp
push
and
push
not
add
lcall
imul
ds
xor
fstps
mov
mov
push
cli
dec
jecxz
add
in
arpl
cmc
dec
fdivrs
clc
in
or
fucomi
push
cmp
loopne
mov
mov
xchg
pop
add
rorl
fstps
push
sub
push
pop
push
stc
mov
ljmp
enter
mov
dec
add
sbb
ss
fsubs
push
imul
sub
lock
mov
rcrb
js
push
xor
neg
add
out
add
xor
lds
or
pusha
mov
mov
xchg
mov
jmp
sub
xor
stc
pop
and
cmpsb
or
or
outsb
push
mov
and
xchg
dec
inc
neg
add
push
or
pop
push
int
jb
cmp
mov
mov
movsb
jg
jg
and
loop
aas
xor
ret
lock
es
cmpsb
add
dec
xchg
pop
rcl
mov
cli
icebp
cs
mov
and
pop
jno
add
lods
daa
or
fidivl
jmp
loop
fucom
jmp
jle
mov
loopne
pop
jmp
jnp
and
inc
ss
orl
add
mov
pusha
sbb
dec
jmp
pop
dec
add
inc
xor
inc
loop
dec
xor
or
push
jg
jnp
out
mov
fs
inc
stos
hlt
dec
push
add
jmp
dec
scas
lds
jmp
sbb
cmpsb
cltd
push
test
sbb
ljmp
jbe
add
fcmovnb
jmp
inc
cwtl
or
xchg
sbb
lahf
push
add
or
push
push
pop
or
stc
pop
inc
movsl
and
push
sub
xchg
not
int3
xor
notb
lret
adcl
lds
rorb
rol
adc
push
xlat
inc
push
nop
outsl
or
cmpsl
jmp
inc
int3
das
inc
push
lret
or
add
or
jmp
sahf
pop
jno
xor
loopne
jb
add
addb
aaa
mov
ljmp
in
sbb
pop
lds
call
in
test
inc
out
ljmp
roll
jmp
sub
sub
inc
xor
fisubl
shll
fwait
inc
add
mov
insl
sbb
js
pop
push
mov
and
ja
shlb
mov
dec
int3
int
out
cmpsb
cmp
dec
xor
add
ret
icebp
jp,pn
popf
loopne
jmp
push
aaa
cmp
and
add
movsl
push
adc
dec
sbb
xor
pushf
in
push
clc
sub
adc
push
inc
mov
cmp
shll
inc
xchg
lcall
dec
adc
lods
add
out
mov
nop
sbb
sub
sub
xor
ja
sub
xchg
adc
in
sbb
mov
jle
and
cmp
inc
sbb
xchg
das
jmp
mov
and
cmp
xchg
test
test
flds
lock
push
dec
dec
jmp
mov
xor
mov
mov
iret
cmc
jge
js
rolb
push
add
fwait
das
push
push
xchg
sub
cmp
and
adc
push
or
fistl
jmp
jno
or
in
out
int3
cmp
pop
dec
daa
sbbb
rep
or
push
adc
or
pop
lret
andl
jmp
mov
stos
mov
push
add
jmp
std
addb
mov
inc
lret
pop
enter
call
shrb
in
mov
iret
lea
std
test
fidivrl
sbb
add
mov
add
loope
repz
sub
shr
and
stc
push
sub
fnstenv
popa
push
inc
mov
sbb
iret
insl
mov
dec
jae
jmp
cmp
lret
icebp
mov
sbb
dec
xchg
popfw
push
fistl
push
cmc
cs
popl
out
scas
gs
mov
cltd
sub
mov
lret
int
imul
hlt
cmpb
pusha
cmp
add
add
sarb
xor
in
add
decb
jno
sbb
negb
fsubr
mov
jns
loop
adc
mov
aaa
aas
cmp
int3
inc
add
insl
or
shrl
mov
push
pop
push
rcrl
or
pop
inc
mov
cwtl
dec
cmp
xor
and
push
push
jno
push
inc
mov
lock
das
pop
out
and
inc
mov
and
inc
shrl
adc
pop
and
pop
mov
dec
incb
pop
adc
mov
sub
inc
xor
and
add
lret
ljmp
add
add
jmp
scas
xchg
mov
add
and
sub
adc
mov
cmp
dec
ficomps
cmpsl
inc
in
inc
in
movsl
dec
repnz
lret
pop
mov
fsubs
nop
or
or
popf
popl
xchg
inc
adc
repnz
jecxz
enter
mov
test
pusha
dec
push
cmpsb
dec
push
ds
mov
call
pop
xor
les
adc
sbb
jmp
stos
xchg
and
mov
push
mov
mov
xor
roll
arpl
and
sahf
cmp
sbb
xor
push
fs
add
mov
xorl
fmul
xor
or
cli
xchg
pop
pop
add
push
popa
push
incb
fdivr
inc
xor
punpckhdq
jbe
push
pop
das
and
movsl
sbb
mov
lcall
aaa
in
push
jb
sub
xchg
dec
sahf
xchg
mov
cmp
mov
pusha
pop
adc
push
popa
out
call
pusha
mov
add
mov
push
pop
sbb
rolb
sub
xor
roll
push
aas
xor
add
jmp
rorb
mov
sub
inc
and
pop
cs
sub
xor
pop
push
pusha
popa
cmp
add
xor
addr16
push
mov
outsb
push
sub
cmp
mov
sub
add
mov
pop
add
or
jae
sub
dec
test
jle
repnz
jl
out
xorb
push
sbb
fstpl
minps
cmpsl
push
jae
test
adc
into
inc
clc
inc
or
outsl
sub
mov
xor
jecxz
ja
scas
xor
cli
cmp
jmp
or
xor
sub
lds
call
out
add
mov
add
cmc
add
jge
sub
push
add
cmp
and
lods
add
adc
ftst
xchg
call
je
js
mov
push
sbb
push
dec
jne
add
repz
pop
sub
sbb
addl
push
xor
adc
div
ret
dec
sub
xchg
mov
testb
fiaddl
mov
out
sbb
sbbl
test
mov
orl
test
loopne
mov
loop
jb
daa
movsl
push
andb
movl
dec
mov
mov
inc
sub
cmp
jmp
ret
out
mov
sub
mov
dec
out
push
pop
cmp
fbstp
mov
sbb
out
aam
jg
push
repz
jmp
jl
pop
aaa
int
cld
test
sbb
inc
cmc
xchg
pop
cmp
adc
lods
xchg
lahf
sbbb
orb
push
pop
push
mov
in
dec
xlat
pop
pusha
ds
jmp
sub
push
cmp
fistps
scas
inc
xor
call
insb
mov
scas
inc
fmulp
cmp
pop
fld
shrb
sub
pop
sub
jl
or
addr16
and
mov
xchg
push
shl
cmpsb
lods
mov
xor
sub
dec
push
mull
sub
ja
jne
jnp
cs
jecxz
or
mov
out
or
lock
repnz
sbb
pop
xchg
pusha
and
jle
or
dec
add
pop
or
out
jb
mov
cwtl
adc
in
mov
pop
push
xchg
add
sbb
or
or
dec
cltd
dec
dec
push
add
add
add
or
sbb
in
out
or
loope
cwtl
add
hlt
xor
stc
repnz
pop
mov
fiadds
push
and
pop
enter
mov
add
test
shr
xor
push
jbe
inc
cmc
pop
ret
push
sub
cmp
pop
xor
fldcw
add
adc
fisttpll
sbb
lcall
mov
adc
inc
add
mov
in
orb
shl
imul
adc
addr16
pop
shl
sub
aam
imul
adc
jo
push
lahf
roll
into
jne
push
mov
push
mov
outsb
and
sbb
hlt
pop
shl
xchg
test
into
or
inc
jecxz
imul
int
imul
pop
dec
xlat
sti
loope
ret
jge
push
jnp
mov
push
lcall
mov
mov
in
movsb
jle
add
mov
sbb
nop
or
add
add
sub
push
sub
lcall
scas
fidivl
dec
xor
mov
dec
jnp
add
jmp
or
pop
jp
out
in
icebp
push
andl
clc
pop
mov
sbb
mov
adc
or
xor
int
nop
or
sub
ja
push
mov
push
adc
cmp
push
push
sub
jo
test
mov
cltd
leave
in
pop
add
sbb
jge
dec
xor
call
divl
in
mov
sarl
imul
xor
inc
aam
dec
fisubl
push
int3
push
mov
mov
sub
daa
add
ljmp
lcall
or
test
cli
ja
mov
sbb
xor
jae
mov
add
ret
jle
ret
and
adc
inc
repnz
loop
inc
mov
adc
fisubrl
inc
xor
insl
add
pop
imul
add
dec
sub
inc
inc
sub
test
cmpb
push
mov
rorb
pop
icebp
test
scas
push
data16
shlb
in
or
hlt
gs
lea
mov
arpl
test
fwait
shl
ret
ljmp
pop
test
mov
dec
inc
ret
pop
sub
jg
dec
lds
pop
dec
shlb
and
fmul
pushf
dec
and
or
mov
and
pop
jle
push
rorl
jecxz
daa
xchg
cmpsb
nop
shl
movsl
adc
bound
or
mov
fimuls
pop
or
push
inc
xchg
lret
stos
in
push
mov
jne
popa
push
icebp
leave
pop
and
jmp
pop
ss
mov
lods
and
mov
mov
dec
jp
sahf
dec
adc
test
pushf
add
pop
mov
dec
lea
pop
pop
cmpsb
loope
stc
mov
xor
outsl
daa
clc
push
dec
stos
or
pop
xchg
sti
lock
cmp
pusha
cli
xor
mov
imul
push
jns
jbe
cmpsb
push
cs
mov
push
rclb
cld
jo
in
mov
or
pop
add
adc
pop
or
mov
dec
pushl
and
iret
add
imul
pop
push
dec
in
or
popa
shl
inc
dec
sub
movsb
and
jmp
xor
pop
jo
movsl
push
push
jmp
jmp
pop
sub
out
mov
dec
add
pop
arpl
jecxz
shll
inc
add
ds
pop
dec
add
nop
push
cld
imul
cmp
pop
rorl
jnp
pusha
test
add
filds
mov
jno
dec
je
jmp
test
loope
or
leave
fadds
cs
ret
int3
je
dec
inc
push
jb
inc
cwtl
adcb
data16
add
les
and
orb
jle
and
cwtl
movsb
mov
es
out
shr
cwtl
mov
xchg
push
out
arpl
out
pop
xor
cmpl
add
xchg
mov
mov
popa
outsb
faddl
add
rcll
pop
rclb
sub
or
mov
lock
xchg
xor
lock
xor
mov
sub
or
and
loop
sbb
jmp
adc
imul
fs
xchg
pop
mov
xchg
int
js
dec
cwtl
xchg
popf
inc
adc
add
sar
dec
xor
mov
or
hlt
popf
jecxz
fisubl
push
mov
add
xchg
add
or
push
xor
xlat
pop
add
pop
and
rol
dec
jmp
dec
icebp
xchg
mov
std
jp
or
pop
je
orb
inc
es
stos
mov
movsl
ret
or
sbb
imul
shrb
xor
mov
in
mov
push
mov
pop
lods
cltd
daa
cwtl
shrl
inc
scas
dec
mul
fidivs
out
sbb
das
jmp
divb
dec
inc
movl
and
inc
or
dec
jmp
pop
not
inc
sbbl
cmpsb
adc
add
add
cmpl
add
subb
je
pop
cmp
pushl
pop
pop
xor
xchg
dec
fildl
pop
shrb
sbb
fldl
jl
add
dec
lds
and
push
push
xchg
mov
out
dec
or
in
mov
or
fistps
jb
jno
mov
dec
lock
pop
aaa
add
sbb
adc
adc
dec
sub
scas
push
sub
aad
sub
or
or
pop
mov
test
sbb
xor
shl
repnz
daa
push
xor
ljmp
cmc
pop
in
mov
movsb
pop
ret
inc
mov
cmp
push
and
lret
mov
imul
dec
fucomp
popa
out
mov
xchg
jmp
stc
jg
rclb
shl
xor
outsb
push
jg
jl
hlt
push
add
sub
sub
sbb
or
data16
fdivrl
jp
mul
sub
sarl
mov
loopne
sub
add
int3
sub
xchg
add
mov
pop
nop
mov
jle,pn
es
lret
pushf
cltd
xchg
sub
outsl
and
subb
lds
lds
daa
in
mov
lret
aam
jb
adc
push
mov
inc
fimuls
sbb
pop
shr
incb
dec
sti
popf
stos
or
cld
std
sub
push
inc
adc
test
add
daa
xchg
ja
push
femms
push
push
call
sub
mov
nop
cli
pop
jl
inc
dec
xor
dec
loop
or
inc
add
pop
push
fldcw
adcb
dec
dec
fldenv
xchg
adcl
push
in
cmp
into
fisttps
sbb
test
push
xchg
cmp
lock
popa
add
pushf
push
gs
filds
and
jns
ret
sub
iret
movsb
add
mov
popf
or
and
mov
mov
std
data16
mull
test
jns
cmc
add
xor
mov
fidivrl
jmp
xchg
int
imul
adcb
push
push
mov
dec
add
ret
mov
mov
jmp
pop
dec
enter
sbb
push
bound
into
scas
nop
in
inc
sub
jb
inc
mov
push
test
movsb
enter
roll
sub
pop
sub
nop
adc
adc
popa
push
jb
imul
sbb
sbb
pop
inc
and
push
jmp
xchg
test
insl
fdivr
add
ja
mov
sub
scas
or
cmp
bound
pop
jmp
loope
and
jle
sub
jb
stos
xor
add
and
bound
or
loopne
cmp
jl
sbb
xlat
sbb
add
sarl
pop
outsb
sub
rorl
fwait
jmp
push
mov
push
push
mov
lret
mov
stc
cmp
fs
das
cltd
mov
and
push
mov
pusha
dec
pop
pop
and
outsl
or
jle
push
inc
inc
mov
test
pop
add
xlat
idivb
sbb
add
push
pop
mov
popf
aad
push
jl
test
xchg
shl
shr
nop
nop
add
and
push
mov
or
daa
aam
pusha
mov
inc
xor
sub
push
add
jmp
xchg
and
lcall
xchg
and
into
and
sbb
mov
push
sub
or
sbb
mov
pop
subb
gs
pop
aas
xor
ficompl
jne
shr
mov
xor
and
cmp
ja
dec
and
xchg
adc
loopne
inc
clc
ds
mov
insb
in
fdivl
test
icebp
subl
xor
shrb
mov
sbbl
mov
imul
loop
or
add
xor
dec
or
jecxz
dec
xchg
pop
jge
add
pop
pop
pop
jmp
aas
adc
cmp
sbb
mov
jnp
and
repz
jge
int
or
cmp
jmp
out
pop
lcall
rcll
fsubs
pop
insl
dec
jns
dec
loopne
dec
mov
xor
lret
push
push
rcr
xor
sub
movsb
lret
add
pop
add
jl
and
mov
inc
mov
mov
inc
jg
push
push
dec
push
fmull
or
popa
add
jl
sub
xor
push
rolb
and
sbb
inc
mov
pop
or
int
clc
outsl
nop
pop
jmp
xor
xchg
pusha
movsl
int
or
dec
call
scas
loope
inc
sahf
mov
out
jns
sahf
addb
movsb
fstl
xor
push
dec
jle
push
lods
orl
movsl
add
jle
xor
ficoms
fsubrs
bound
les
or
pop
sbb
sbb
rcl
addr16
or
loopne
fucomp
push
test
test
add
jl
rcrl
dec
adc
pop
add
lds
fiaddl
adc
xor
scas
pop
fdivrl
mov
in
or
subl
cmc
jo
or
push
mov
fs
mov
dec
add
fs
add
fnstsw
pop
and
call
add
push
arpl
rcl
add
cltd
adc
leave
adc
or
push
pop
movsb
insl
dec
test
loopne
xlat
inc
pop
xor
pop
jno
mov
jmp
hlt
ret
push
inc
les
gs
and
push
in
push
lret
adc
add
loop
ret
inc
or
sbb
add
add
std
pop
shr
jmp
test
mov
in
add
inc
ds
and
idivb
and
dec
or
fimuls
add
call
cwtl
xchg
and
out
loope
insb
xor
pop
sub
push
mov
push
mov
adc
xchg
or
in
mov
popf
xchg
pop
leave
or
in
lcall
dec
add
pop
push
mov
sub
cltd
out
sbb
inc
fidivrl
sub
sub
in
push
sub
fmuls
pop
call
xor
pop
sub
push
in
aam
mov
cs
stos
arpl
inc
ret
test
pop
lds
mov
mov
jbe
push
dec
in
adc
and
out
jecxz
adc
ret
int3
rol
push
jl
cmp
xor
xchg
pusha
ja
jg
loope
cli
mov
dec
cmpl
clc
scas
mov
or
cli
pop
inc
mov
dec
cmp
jecxz
push
mov
pushf
jle
pop
add
mov
ret
push
dec
pop
es
or
xor
es
sub
pop
push
out
add
aaa
incl
sbb
mov
xchg
pop
inc
cltd
pop
xchg
dec
xor
das
and
sti
push
xchg
mov
push
mov
rclb
add
push
cmc
and
pop
xor
cmp
dec
xchg
rolb
jmp
cs
icebp
and
jmp
rcr
pmovmskb
push
mov
xchg
add
adc
mov
push
decb
push
push
je
imul
in
shlb
push
mov
das
or
xchg
xor
and
pusha
sub
inc
loope
add
mov
mov
xchg
adc
mov
imul
push
xadd
cld
inc
lea
adc
lock
sbb
inc
sbb
data16
shrl
cmp
mov
adc
out
xor
inc
adc
das
xchg
subb
add
in
push
push
sub
int
sub
lods
add
jbe
out
and
jbe
out
mov
push
cltd
mov
daa
mov
jmp
jae
xor
pop
pop
sbb
jb
xlat
add
cmp
sub
mov
jmp
pop
or
inc
fcoml
pop
jecxz
nop
cli
jo
mov
add
repz
std
jmp
dec
push
jb
sub
xor
loop
in
and
add
lret
mov
xor
addb
inc
sub
popf
cmp
mov
pop
push
ljmp
jmp
movsb
scas
or
inc
pop
mov
add
dec
mov
pop
mov
or
orl
or
rcll
pop
cmp
and
out
inc
fstl
lcall
dec
scas
dec
stos
mov
pop
and
lea
pusha
mov
mov
shl
sub
int3
test
xor
xor
add
ret
inc
lods
jo
insb
mov
adc
jmp
aas
fs
xor
jbe
dec
mov
xor
mov
in
dec
ret
imulb
in
lds
mov
pop
popl
mov
in
push
add
mov
push
ret
mov
xchg
inc
arpl
repnz
pop
sub
or
ljmp
test
insb
mov
push
pop
push
push
lock
cmp
adc
pop
mov
push
outsb
adc
sbb
and
add
xchg
repnz
fsts
insb
mov
jmp
out
jp
shl
add
mov
leave
gs
faddl
das
jns
jmp
sub
dec
inc
push
imul
and
cld
jb
ss
pop
pop
push
nop
sbb
incl
cmp
pop
fdiv
and
adc
out
push
sub
jmp
sub
or
sub
adc
or
fistpl
or
lahf
cmpsl
push
dec
ljmp
push
xor
lods
add
and
fwait
mov
fsubr
dec
test
sbb
or
xchg
sub
mov
dec
xchg
ret
push
sub
mov
xor
rcr
add
add
add
and
push
lret
jmp
icebp
lods
mov
decl
jmp
push
jg
dec
adc
jns
js
add
sti
loop
stos
sarl
pop
jbe
dec
les
and
jle
pop
adc
mov
rolb
cmp
sub
inc
sub
jmp
xor
pop
mov
cwtl
dec
xchg
mov
pop
in
inc
sub
movsl
cmp
daa
neg
pop
pusha
jns
mov
fdivs
mov
xor
repnz
sub
or
pop
mov
shr
jno
cmp
adc
mov
les
stos
xchg
add
mov
mov
or
test
js
roll
in
dec
out
jg
push
mov
imul
outsb
das
mov
dec
jp
xchg
inc
jns
daa
jg
call
push
rcrb
add
in
jne
add
aad
aaa
push
xchg
clc
push
and
rcrl
fidivrs
mov
insb
lods
test
call
shrl
outsl
or
lea
push
in
aad
mov
and
cmpsb
or
jno
rol
sbb
clc
mov
mov
jmp
out
push
ret
aad
ficompl
aas
adc
jecxz
iret
sub
fstp
add
jmp
arpl
imul
sub
push
pop
jg
addl
sub
cmp
jb
and
mov
pop
hlt
ret
or
sub
addr16
push
push
mov
mulb
jg
daa
xor
mov
xchg
jmp
pop
inc
out
or
aaa
or
push
cmp
orb
bound
add
outsb
adc
dec
divl
add
insb
pusha
pop
popf
sub
lret
xchg
ret
jno
adc
lods
jecxz
or
or
insl
mov
push
jmp
out
leave
push
pop
pop
xchg
dec
inc
mov
loopne
push
pop
sub
jp
pop
in
jno
jmp
or
rep
hlt
and
xchg
subl
jnp
imul
ret
movsb
or
adc
pusha
lock
cmpsb
xor
ds
dec
dec
mov
pop
js
dec
mov
sub
mov
jmp
mov
and
cmp
je
mov
adc
mov
add
jecxz
mov
dec
stc
sub
lock
insl
roll
cmpl
inc
cmp
xchg
pusha
and
pop
mov
outsl
dec
inc
xchg
addb
or
or
add
xor
pop
aaa
adc
mov
ret
sahf
dec
mov
and
push
xor
dec
shl
outsb
sbb
pop
cmp
and
fsubs
or
mov
and
pop
inc
sarb
add
enter
adc
or
push
rolb
data16
xchg
loop
mov
xchg
and
sub
pop
jmp
movsb
ss
push
mov
std
movsl
mov
dec
outsb
pop
inc
sub
mov
loope
adc
pusha
xchg
and
das
cwtl
inc
add
iret
add
ja
int3
jg
mov
pop
cld
roll
sbb
sti
inc
cmp
lret
loop
in
daa
xor
insb
push
add
inc
xor
pop
addl
sbb
or
adc
adc
jecxz
xor
stos
and
enter
test
shl
jg
dec
jmp
push
inc
sub
or
dec
pop
ret
mov
pop
shlb
xor
dec
or
or
add
xchg
mov
in
pop
push
cld
push
in
or
push
mov
jmp
push
pop
mov
sbb
out
jecxz
pop
add
add
push
mov
or
mov
bound
stos
outsl
push
add
and
ljmp
daa
pop
pop
sbb
stc
mov
or
loop
int3
pop
fstl
jmp
mov
les
sahf
mov
xlat
and
dec
sbb
push
mov
cmp
add
sbb
jmp
add
mov
pop
jmp
mov
xor
aad
stos
and
push
mov
test
dec
adcb
dec
es
sbb
lods
sub
jp
push
mov
mov
cmpsl
fiaddl
aaa
dec
and
sbb
jecxz
mov
sahf
inc
push
add
ret
mov
cmp
pop
test
mov
movsl
js
psrlw
insl
sbb
sub
fistpll
inc
xor
add
jle
xor
jg
dec
xlat
xchg
mov
loope
xor
push
repnz
mov
mov
dec
scas
xor
push
mov
rolb
pop
imul
xchg
or
sub
pop
cmp
add
push
cmpsl
jbe
jecxz
and
mov
sbb
mov
ret
fistpl
sbb
hlt
data16
out
out
out
mov
mov
xor
or
int
add
lahf
mov
dec
jmp
cmpsl
push
cs
jo
pop
pop
inc
pop
lds
incb
jb
xchg
jge
xchg
inc
ss
jno
lret
add
daa
adc
addb
adc
lods
jne
or
pop
jmp
push
dec
xchg
not
or
sub
push
mov
vmovsldup
jno
push
cld
jnp
das
lret
nop
mov
lds
push
mov
push
stc
int3
fsubrs
cmp
mov
xor
cs
push
in
push
andb
fdivrl
int3
icebp
int
ret
lock
fcmovbe
subb
pop
mov
adc
push
test
test
daa
out
setno
and
testb
pop
cmp
into
shl
sti
cmpsl
or
ljmp
inc
xor
pop
pop
mov
adc
aas
dec
pop
popf
jb
add
add
push
punpckhbw
or
pushf
add
leave
or
out
or
jmp
add
mov
cmp
xchg
add
pushf
mov
push
inc
and
popa
daa
mull
out
inc
sbb
test
out
xorl
add
leave
pinsrw
adc
dec
pushf
int
dec
movsl
dec
cmpsb
jmp
or
insl
sub
or
cmp
jmp
popa
inc
mov
insl
mov
and
repz
cmp
in
inc
cmp
pop
inc
sbb
ss
push
push
xlat
xchg
cmp
bound
addr16
sbb
lret
xor
mov
andb
fbstp
clc
inc
call
imul
jno
das
mov
xlat
out
xchg
mov
das
mov
inc
pop
push
jno
pop
cli
and
out
dec
and
dec
outsb
xchg
cli
add
sbb
pop
aas
push
push
push
adc
xor
pop
testb
and
mov
jbe
pop
push
jg
add
inc
mov
shrb
pop
loopne
pop
push
test
clc
jmp
cld
scas
adc
mov
and
sbb
mov
mov
bsf
pop
mov
adc
dec
jmp
add
or
sub
cs
add
int
sbb
mov
pop
orb
jae
sahf
call
jbe
rorl
das
add
and
hlt
pushf
mov
hlt
cld
mov
xorl
jp
test
dec
dec
mov
lahf
mov
mov
in
cs
movsl
or
push
jne
jbe
cmp
scas
pop
out
and
fstpt
cli
rcrb
test
or
stc
add
rcrl
dec
les
pop
add
outsb
cltd
xor
sub
jmp
push
mov
in
cmp
das
in
sub
sub
sub
pop
adc
add
xchg
mov
clc
out
in
ljmp
and
addb
xchg
testl
aas
inc
fadds
and
mov
and
mov
push
in
popa
lds
call
adc
mov
ret
sbb
mov
jmp
dec
inc
enter
xchg
mov
jle
add
filds
pop
rol
dec
aam
xchg
add
push
push
push
push
xchg
xor
mov
jle
push
adc
ficoml
and
lret
sub
push
jmp
dec
outsb
ss
out
mov
shrb
add
scas
fldl
adcb
mov
push
push
sar
sbb
mov
shrl
fnstcw
pop
loope
add
mov
out
mov
or
or
xchg
nop
or
shll
sub
sbb
or
js
pop
mov
fiadds
add
add
sub
adc
filds
insb
sub
aas
int3
hlt
pop
xchg
int3
rcll
insl
adc
sub
inc
xchg
push
jmp
adc
or
cltd
popa
loopne
lods
xchg
and
shr
mov
sub
xchg
inc
push
pushf
sub
xchg
fldenv
push
mov
pop
out
sbb
mov
sarl
inc
mov
xchg
xchg
popa
mov
xor
dec
inc
xor
or
and
into
or
lahf
add
add
and
push
js
repz
pushf
xor
jg
movsl
lcall
test
push
shll
push
add
pushf
pop
push
push
jmp
dec
sub
daa
movsb
popa
jmp
icebp
push
mov
setb
loopne
push
test
pop
aam
push
fdivs
pop
cltd
mov
inc
fisubrl
xchg
imul
push
and
mov
pop
sbb
aaa
ds
cld
xchg
xchg
mov
xchg
adc
rcll
aaa
adc
jle
test
jmp
pop
lret
enter
shlb
jne
inc
out
jmp
xchg
into
xchg
inc
shl
adc
pusha
jb
lret
fistpll
mov
xor
scas
and
push
mov
pop
in
dec
add
push
inc
mov
or
push
into
loop
mov
cmp
fimuls
add
push
repz
scas
xor
cmp
sahf
push
daa
rcll
and
vmwrite
mov
cs
xor
xor
or
sarb
push
ret
les
push
pop
adc
sub
in
mov
xchg
mov
push
mov
nop
es
into
iret
dec
ret
xor
and
push
addr16
inc
mov
je
pop
js
add
imul
mov
mov
push
cmp
xchg
jns
jmp
jmp
call
sub
cmpsl
add
imul
sbb
mov
dec
sub
pop
movl
or
sbb
fidivrl
test
cli
inc
adc
sbb
fisttpl
jae
sbb
shll
push
inc
pop
adc
dec
aas
cwtl
imul
lahf
mov
add
jb
popf
paddq
mov
push
fidivl
or
ja
mov
cmpb
in
and
and
mov
lods
inc
mov
ja
sti
les
push
push
mov
js
mov
dec
jecxz
pushl
ficompl
sarb
int
and
xchg
push
xchg
mov
or
lea
cmpsb
mulb
jle
inc
xchg
jbe
daa
js
repnz
data16
popa
setp
dec
fisubrl
mov
push
sbb
rorl
je
add
xor
mov
jbe
jmp
les
or
insb
xchg
dec
cmp
jo
data16
mov
test
and
add
jmp
mov
cmp
inc
out
xor
add
sbb
sub
arpl
sahf
and
shll
repnz
sub
xchg
sbb
jmp
fwait
jmp
call
sub
out
sbb
or
in
adc
in
invd
pop
sub
and
adc
pusha
clc
sub
ret
inc
mov
and
imul
shl
adc
jns
adc
pop
adc
hlt
or
jmp
push
sub
lret
inc
stos
jmp
ja
pop
dec
cmp
or
pop
sahf
cmp
push
mov
sub
inc
mov
sbb
pop
es
cmpb
mov
cmpsl
xchg
out
das
push
push
pop
mov
jo
cld
push
xchg
mov
push
push
or
add
outsb
daa
mov
loopne
sub
arpl
in
jnp
iret
mov
faddl
mov
mov
jnp
mov
or
mov
sarb
push
mov
add
outsl
clc
cmp
loop
push
pop
inc
sbb
jle
jg
cmpl
out
push
pop
addb
push
frstor
fwait
inc
sub
dec
rol
aam
lock
sarl
outsl
adcb
and
push
loopne
fiadds
xchg
push
push
add
mov
sbb
imul
cmp
out
push
dec
mov
fmuls
dec
sub
cld
push
cmp
sbb
mov
mov
rcrb
pop
xchg
dec
cmp
xor
pop
bnd
jmp
mov
data16
and
jmp
and
scas
xor
or
push
out
test
inc
imul
icebp
adc
inc
pop
xor
dec
shlb
gs
or
xorb
bound
lods
dec
loope
test
or
inc
pop
cmp
dec
push
loop
pop
call
int3
test
cmpsb
mov
pushf
xchg
lahf
loopne
xor
mov
test
mov
daa
ret
data16
cmp
push
xor
push
add
mov
jmp
xlat
dec
pop
adc
xor
inc
pop
loop
pop
adc
cmp
pop
divb
mov
pop
bound
les
rol
pop
test
push
add
aam
xor
mov
outsl
or
jmp
fcomp
ljmp
dec
dec
pop
movsl
dec
sbb
push
add
xor
into
push
icebp
xchg
push
mov
lock
pop
xchg
gs
ret
jbe
mov
xchg
dec
pop
mov
xchg
cld
push
test
jmp
ret
add
cmp
cmp
pusha
push
push
mov
loop
ficoml
xchg
lds
mov
popf
out
mov
stc
sub
popa
sar
sub
pop
jb
dec
jae
and
pop
stos
jge
lea
adc
sub
push
jmp
sbb
or
inc
mov
add
movsl
dec
sub
icebp
aad
pop
lea
push
add
cld
loope
shll
inc
xor
cmp
decb
loopne
cmp
xchg
or
add
imul
cld
pop
pusha
aaa
add
rorb
not
sub
shl
mov
push
or
jle
idivl
out
aas
add
push
jmp
in
cmp
xchg
or
call
imull
inc
sti
sarl
pop
and
lods
dec
adc
cmp
xchg
sbb
fbld
sar
xchg
push
cmp
xor
gs
imul
push
test
repnz
xor
int
in
mov
imul
dec
jnp
fnsave
or
cmp
je
cld
das
clc
icebp
or
or
adc
sbb
mov
stos
js
pop
in
jo
xor
sub
sbb
dec
jg
fsubl
lods
xchg
lea
push
stos
push
mov
adc
xchg
add
pop
sbb
jmp
or
push
and
xor
pop
xchg
cmp
adc
sub
xchg
lcall
mov
mov
xchg
push
jmp
mov
mov
push
mov
add
ret
add
sub
cs
add
pinsrw
rclb
mov
or
shlb
sbbb
popf
xchg
push
add
mov
mov
sub
adc
mov
push
push
mov
pop
aas
pop
lock
or
push
push
loopne
inc
shll
add
fstl
mov
cmpb
or
pop
push
loop
xor
push
imul
dec
jmp
jle
mov
js
sub
xchg
lret
or
iret
ljmp
dec
push
shlb
inc
shr
or
xor
sbb
sbb
fwait
pop
and
pop
testb
popa
test
lret
push
jne
push
scas
jmp
imul
sub
jge
xchg
sub
adcb
xchg
push
and
dec
mov
popa
andb
jns
inc
add
add
es
insl
cld
or
xor
rcrb
in
pop
sub
and
push
scas
sub
pop
aas
cs
jmp
inc
pop
hlt
shlb
push
push
jmp
repnz
add
or
mov
orb
xor
inc
add
ds
push
adc
pop
ja
push
and
cmp
pop
jge
pop
ret
adc
push
shll
subb
jb
add
pop
std
add
mov
add
loop
ja
inc
inc
mov
ficompl
push
jmp
sarb
or
sub
in
or
test
or
pop
and
sub
jb
outsl
mov
cmp
pusha
mov
push
push
pop
inc
repz
out
xchg
push
add
lcall
add
xchg
fs
sub
pop
shl
out
popa
jmp
add
inc
jle
stos
xchg
out
pop
add
add
sub
in
into
pusha
lret
jmp
xor
notl
pop
xchg
pop
sub
mov
inc
mov
into
inc
lock
add
push
add
dec
jb
stos
sub
adc
cmc
loope
fsubp
aam
pop
dec
mov
jp
imul
or
aaa
mov
push
stc
fcmovne
push
add
jmp
inc
lds
and
mov
jmp
mov
lods
push
xor
xor
mov
dec
cmp
cli
mov
sub
xchg
jno
popa
sub
int3
ret
scas
das
jmp
icebp
sti
rcll
test
sub
cltd
lock
std
mov
jl
in
sub
and
mov
test
and
roll
dec
push
decl
pop
aas
leave
push
pop
stc
repnz
js
add
ljmp
lea
aas
ds
inc
insl
fwait
movsl
jle
fs
pop
pop
fsubrl
mov
mov
shll
lds
adc
add
push
push
popa
dec
cwtl
pop
push
mov
clc
les
add
cmp
pop
mov
loopne
add
mov
imul
dec
sti
add
adc
mov
test
dec
push
add
jge
lahf
dec
push
cmp
mov
lret
roll
push
insl
add
cltd
idivb
sub
call
and
jle
adc
adc
sub
jg
ret
or
mov
inc
les
cld
push
ret
push
mov
cld
lcall
js
add
cmp
add
push
fstl
daa
jmp
js
das
sub
pop
adc
inc
jecxz
mov
sbb
outsl
xchg
lcall
xor
inc
xchg
int
or
lds
test
int3
enter
mov
in
int3
subb
and
dec
pop
mov
adc
pusha
dec
jb
push
sub
ja
into
or
repnz
jmp
scas
lar
xchg
out
pop
inc
push
mov
push
fwait
xor
icebp
lods
or
in
mov
sbb
jp
dec
mov
adc
jno
leave
add
je
ja
cmpsb
sub
es
xchg
adc
xor
in
int
mov
add
xchg
cld
ljmp
mov
sbb
xor
mov
sub
adc
mov
or
jl
mov
add
inc
or
or
adc
cld
push
push
inc
jno
pop
dec
mov
cli
jne
jge
popa
leave
fcmovbe
sub
jb
or
ret
ffreep
push
push
cmp
jmp
je
push
stc
jge
jg
aad
aas
imul
or
dec
cmp
add
in
repnz
push
hlt
xor
call
push
jae
and
enter
xchg
movsl
lahf
fldln2
mov
push
cmp
imul
and
or
pop
outsl
test
aas
mov
cld
in
jmp
and
inc
aas
test
pop
push
pop
inc
push
mov
mov
rcrl
mov
adc
in
or
or
ret
add
nop
outsl
insb
mov
imul
clc
sub
and
and
cwtl
xorl
jns
pop
adc
repnz
or
repnz
add
dec
loopne
insb
adc
and
jns
xor
push
fbld
inc
fadd
add
jg
sbb
and
jle
add
dec
and
sbb
cld
xor
dec
lret
nop
cmp
jmp
ds
mov
imul
inc
or
popa
ljmp
sbb
push
or
pop
jmp
push
mov
jmp
int3
push
pop
add
mov
les
fildl
or
sub
add
fiaddl
sarl
adc
shlb
push
adc
mov
nop
mov
pop
push
pop
xlat
shlb
bound
ror
and
pusha
dec
or
sbb
pop
xchg
xchg
or
jg
pop
ds
dec
mov
rolb
mov
notl
icebp
push
mov
add
push
jbe
adc
mov
sbb
jle
xor
add
pop
adc
fbld
inc
popa
arpl
test
or
inc
dec
rorl
neg
test
mov
pop
fisttpll
daa
push
add
xorl
or
or
mov
das
sub
cmp
dec
inc
and
outsl
pop
cmp
cli
push
gs
lock
add
jo
inc
ret
es
add
cltd
jmp
mov
inc
idivb
dec
cmp
sbb
jecxz
stos
jmp
test
cmpsb
sbb
xchg
cmp
loopne
dec
push
sub
pop
add
cltd
shl
cmpb
addr16
aam
enter
pop
and
cmp
sub
push
lds
cmp
sub
popa
push
inc
maskmovq
mull
xor
cmp
cmp
inc
dec
mov
jmp
ss
and
enter
add
aam
push
push
mov
rdtsc
cli
pop
insb
lahf
jmp
push
dec
mov
repnz
add
push
subb
push
jmp
mov
xor
outsl
and
push
addr16
sub
jbe
or
sbb
dec
cmp
loopne
or
xchg
imul
enter
std
imulb
fistpl
xor
clc
mov
inc
or
cmpl
lock
and
sub
xchg
fsubr
mov
push
shrl
roll
sub
and
push
pop
bound
insb
xlat
lahf
shrl
shll
into
xchg
push
loope
mov
push
cld
and
imul
dec
shrb
js
hlt
mov
jb
adc
mov
imul
ficoms
cmp
and
lcall
aaa
push
rolb
jo
mov
mov
and
lret
in
push
dec
sbb
add
or
jmp
shlb
xor
in
ds
xor
lret
adc
or
dec
mov
pop
add
cmp
outsb
rolb
push
add
jmp
pushl
mov
loopne
mov
in
mov
push
pop
cmc
sub
int
orb
ror
pop
or
and
ja
mov
inc
or
roll
sub
pop
xlat
int3
mov
mov
and
add
faddl
or
and
xchg
sub
mov
pop
push
int3
push
xchg
inc
push
pop
daa
pop
add
mov
fnsave
sbb
pop
lahf
mov
adcl
dec
pop
cld
cmp
aaa
imul
or
mov
or
test
jge
and
push
jmp
push
in
dec
nop
and
and
cmc
scas
nop
mov
je
mov
mov
sub
call
mov
cwtl
cmpsl
push
pop
push
push
out
jne
dec
int3
arpl
mov
jmp
adc
add
add
push
aad
inc
xor
arpl
mov
scas
inc
mov
push
or
adc
int
mov
cmp
push
sbb
call
shll
cli
popf
hlt
or
jmp
stc
inc
pop
xchg
or
aaa
adc
sub
cmp
test
cmpb
dec
push
mov
mov
int
inc
les
roll
adc
bound
add
mov
jo
mov
jmp
sbb
int3
insl
adc
mov
aad
lock
jp
mov
pop
mov
cli
xor
popf
je
in
stos
mov
pop
jmp
test
xlat
add
cmp
jle
xor
shll
ret
lret
movsb
dec
es
js
cs
sbbl
or
mov
xchg
jae
jmp
stos
or
repnz
sbb
and
nop
mov
push
push
cltd
cmp
stos
pop
lods
adc
in
jle
xchg
fstpl
rcrb
fisubrs
inc
mov
xor
push
push
test
jp
mov
xor
jno
daa
rcl
inc
adc
pusha
jecxz
or
xorb
clc
orl
addb
jmp
pop
xlat
orl
pop
sub
cmp
and
mov
mov
pushf
pop
or
adc
push
pop
ds
cmp
int3
push
pop
adc
and
pop
push
repz
clc
mov
mov
loop
add
push
inc
outsb
orb
push
xor
push
mov
in
call
cli
int3
push
sbb
shr
jbe
jnp
rorb
and
xor
aaa
and
jbe
mov
insl
fcompl
outsl
mov
adc
popf
inc
mov
sbb
inc
pop
push
sbb
adc
sub
pop
mov
jle
pop
cwtl
mov
adc
mov
push
ljmp
sub
daa
sbb
ja
pop
dec
xor
ds
or
dec
jmp
cmp
int3
push
add
inc
dec
adcl
jbe
xor
and
xor
push
push
xchg
cld
xor
and
movsl
pop
adc
pop
inc
and
sti
mov
rolb
pop
push
push
hlt
adc
inc
pop
popf
inc
cmp
dec
add
imul
sbb
jmp
jp
sbb
test
aaa
jge
shl
xor
popa
inc
jmp
xor
inc
pop
rcrb
dec
mov
outsl
subb
push
or
mov
fldcw
in
data16
xor
mov
js
popa
or
cs
dec
jne
jne
out
jmp
mov
out
pop
pop
cmc
das
push
push
lock
dec
xchg
in
nop
aam
or
das
mov
xor
mov
jb
cltd
jbe
lods
sub
jmp
jo
push
mov
and
enter
pop
loope
sub
dec
cmc
test
or
clc
out
pop
inc
xchg
movsb
jo
pop
test
and
sahf
or
je
jmp
mov
inc
dec
add
jno
daa
addr16
aam
sahf
mov
lahf
outsb
or
or
jno
popa
jmp
sub
or
xorl
cs
rclb
and
imul
or
adc
push
les
clc
sti
int3
cltd
jmp
push
call
pop
cs
cmp
xor
pop
add
mov
cmp
je
push
pop
xor
lret
lret
pop
insb
and
dec
mov
push
sti
jb
jge
ficomps
ljmp
les
call
data16
fists
sub
cmpsb
or
in
in
testb
cmpb
mov
decb
int3
push
mov
mov
cmp
mov
shll
add
jns
fbstp
adc
xchg
test
fwait
or
dec
dec
add
push
icebp
leave
lret
push
fisttpll
sub
xchg
push
in
or
adcb
jo
stos
mov
fcmovu
xchg
push
mov
decl
mov
nop
jno
pop
dec
pop
cmp
adc
and
and
add
outsb
adc
rcr
incl
shlb
inc
jne
dec
or
fisubrl
adc
test
out
push
mov
mov
push
push
jle
lods
outsb
add
int3
subb
repz
movsl
pop
cmovns
cwtl
xor
shll
test
adc
in
push
outsl
mov
lds
movsb
sar
gs
psubw
pop
push
xchg
push
popa
mov
arpl
inc
xor
test
pop
pusha
ds
insb
test
jmp
insb
call
pop
aam
inc
sub
jns,pt
jle
lea
mov
jo
in
xor
jns
mov
sbb
xor
push
sbb
or
mov
movaps
pop
mov
pop
jb
adc
vmread
and
adc
adc
icebp
dec
aam
sti
movb
sub
push
mov
in
nop
hlt
pop
shr
add
insl
add
inc
xchg
sub
pushf
ret
cmp
insb
or
rolb
push
mov
sarb
aas
loop
adc
std
add
dec
data16
pop
and
or
adc
inc
call
push
adc
inc
cmp
test
push
not
inc
add
cmpb
add
notb
push
js
mov
xchg
push
add
rcrl
lock
hlt
int3
movsl
shlb
out
nop
ja
cwtl
add
adc
adc
xor
pop
loopne
jmp
movsb
push
add
rorl
and
add
subb
adc
or
add
push
je
sub
cmp
lret
mov
inc
outsb
mov
pop
rorl
cmp
xlat
orb
pop
sub
mov
add
stc
inc
pop
lret
push
sbb
aam
in
outsb
xchg
mov
testb
jnp
add
xor
jmp
mov
mov
sti
adc
scas
push
dec
daa
xor
pop
fwait
outsl
movsb
out
jns
mov
and
push
or
cmpsl
popf
add
push
mov
or
lock
pop
lret
in
jl
inc
push
adc
pop
xor
fs
sub
add
lahf
push
imul
mov
jl
push
jmp
sub
loopne
pop
clc
popa
mov
and
cld
lahf
jno
test
and
adcb
sub
add
pop
clc
imul
fbld
push
xchg
inc
push
iret
inc
mov
ret
add
pop
loop
dec
mov
int
and
fs
mov
xchg
rorb
lds
xchg
and
push
loope
push
push
push
adc
test
arpl
pop
xchg
bound
std
lds
and
push
hlt
clc
lock
dec
std
mov
sub
xchg
inc
icebp
les
sub
mov
add
dec
push
repnz
mov
pop
cs
dec
xor
jns
sub
aam
js
loopne
inc
pop
ja
sbb
add
jmp
pop
fst
aam
or
or
in
stos
pusha
int
orb
and
test
jg
jle
cmp
stc
shr
fucomp
or
jnp
cmp
ret
ret
dec
ds
push
pop
xchg
adc
lahf
mov
mov
bound
xor
out
clc
adc
es
xor
out
or
bound
sbb
daa
mov
loope
das
test
scas
fwait
pop
dec
jmp
and
add
das
xor
je
fidivs
jl
addr16
aas
and
sub
in
cmpsl
pop
jl
rcr
and
addr16
pusha
add
inc
mov
fs
and
pop
sub
push
mul
mov
dec
pop
cmpsl
popa
dec
movsb
shlb
lret
cmp
in
pop
fstps
jg
jo
das
mov
dec
push
mov
pop
int3
cmc
cs
jb
pop
in
sub
mov
and
xor
jl
leave
aad
imul
mov
dec
das
and
mov
or
repz
sbb
jnp
dec
or
jbe
inc
add
movaps
mov
test
xor
aas
adc
outsl
pop
add
out
adc
mov
xlat
cmp
cmp
cmp
sub
or
adc
and
add
add
jne
or
stos
and
inc
sbbb
push
adc
sub
pop
repz
jne
cld
push
and
dec
fs
inc
bound
add
mov
jne
fdivrl
and
dec
xchg
jnp
sbb
jl
add
push
sbb
or
negl
dec
filds
ss
dec
xchg
emms
jmp
or
js
shlb
idivb
popf
out
popf
stc
mov
shll
fsubrs
push
xorps
jo
add
repnz
fiaddl
ja
add
jmp
and
xor
push
xor
stc
pusha
push
loopne
out
scas
push
and
push
nop
adc
xchg
enter
ret
push
pop
dec
divb
cmp
xor
adc
fiadds
jne
add
sbbl
mov
jno
xor
ret
jg
es
pop
push
mov
or
arpl
xchg
popa
mov
int3
dec
hlt
adc
xor
xor
outsl
loope
test
popa
not
inc
push
xor
and
push
dec
loop
faddl
jae
and
bound
popa
xchg
jb
ja
xor
push
pop
sub
roll
push
dec
push
std
sub
aas
cmp
mov
lock
pop
pop
inc
sub
add
mov
dec
sarb
mov
xor
negb
push
push
pusha
dec
jae
sub
lret
xchg
pinsrw
fldl
out
xorl
add
addr16
fimuls
mov
pop
or
int
pop
frndint
lock
repnz
pop
add
loopne
es
das
je
mul
add
mov
sub
push
loopne
add
test
mov
cmpsb
dec
leave
jbe
sub
push
xchg
sbb
push
into
movb
cltd
xchg
jle
add
jbe
jns
ljmp
dec
xor
andb
es
cmp
sub
add
pop
hlt
ret
iret
xor
stos
pusha
push
push
clc
jmp
fidivrs
mov
popa
pop
jmp
test
jg
xchg
or
dec
pop
sub
pop
lahf
pop
in
cmp
pop
je
jmp
push
or
or
jl
shl
xchg
push
mov
enter
ror
outsb
xchg
pop
jle
add
add
jp
scas
add
enter
or
xchg
or
movsb
and
xor
sub
sbb
shll
sub
jge
outsl
mov
cltd
jns
mov
or
inc
xchg
insb
fwait
and
add
pusha
stc
add
loope
ret
cli
jl
shlb
imul
xor
cmp
lock
sub
or
push
jle
pop
imul
adc
jecxz
mov
fidivl
cmc
shll
lret
cmp
pop
pop
cmpl
stos
into
xor
pusha
jp
out
xchg
sub
bound
sub
hlt
scas
add
push
add
jmp
cs
xchg
bound
or
clc
popa
mov
scas
inc
pop
or
in
das
jle
mov
jecxz
sbb
dec
rcll
adc
mov
push
sti
sub
sbb
aad
pop
adc
sub
push
bound
movsb
sbb
call
mov
loop
pop
pop
movsb
mov
shrb
mov
pop
sub
mov
cmp
js
mov
pop
clc
dec
mov
jge
movsl
jmp
outsl
jmp
sbb
fisttpll
push
je
push
test
icebp
adc
sub
mov
into
les
pop
arpl
dec
mov
jmp
lods
pop
cmpsb
arpl
fisttps
sbb
and
dec
sbb
adc
xor
xor
jge
jmp
cli
pushf
push
addl
pop
test
or
cmp
ret
jle
add
imul
cs
mov
jp
addr16
jmp
push
in
popa
add
xchg
jb
dec
mov
out
adc
push
enter
pop
jg
mov
adc
mov
shlb
pop
loope
and
and
std
pop
xchg
shrl
cld
add
in
push
dec
mov
add
in
aad
inc
sub
xchg
pop
push
push
sub
shl
jp
xor
clc
cmp
mov
pop
mov
stc
outsb
loopne
sub
pop
pop
out
jne
clc
dec
jmp
cmp
sub
or
inc
inc
pop
ds
ds
ret
lret
std
mov
add
ret
adc
negb
jo
xor
daa
pop
in
add
pop
neg
or
syscall
jmp
jb
fisubrl
or
scas
sub
inc
push
push
js
sub
test
add
jbe
or
xor
mov
js
mov
pop
jmp
call
lods
or
add
mov
cli
data16
fistps
pop
adc
adc
xor
push
pusha
jp
adc
jne
sbb
sub
ret
cmp
aam
dec
adc
out
inc
shrb
test
in
leave
roll
mov
sub
adc
add
xchg
jmp
dec
aam
mov
add
lcall
jmp
pop
out
inc
dec
inc
pop
ret
jno
dec
frstor
xor
sub
imul
leave
or
sub
cmp
sub
ja
xchg
pop
pop
ret
push
leave
lahf
jo
pop
or
xor
mov
mov
dec
mov
sub
and
push
or
push
jmp
lods
pop
dec
in
andb
xor
pop
or
shl
push
in
mov
cmp
add
in
push
gs
sub
out
inc
out
or
pop
pop
adc
loop
and
mov
fisubrs
fidivs
jmp
push
sbb
pop
test
mov
test
dec
iret
imul
hlt
jns
push
das
add
xchg
mov
mov
clc
dec
imulb
repnz
les
pop
insb
dec
xor
pusha
xchg
pop
sbb
lret
clc
mov
adc
dec
jne
decb
pop
shr
les
int
xor
sub
ds
ljmp
adc
pop
xchg
out
in
clc
jle
push
mov
pop
mov
shl
push
rolb
add
mov
pop
lahf
jae
in
mov
adcb
js
es
xchg
jbe
add
mov
and
lahf
aas
cmc
popf
xor
in
insb
pop
inc
mov
scas
pop
test
sbb
into
cmpsb
pop
in
psrad
push
stos
mov
stos
fwait
stos
inc
jne
jmp
lock
dec
mov
in
add
push
cmp
add
mov
pop
push
jmp
xchg
popa
test
jmp
jb
adc
ss
adc
ljmp
nop
xor
cmp
enter
mov
sub
or
aas
xchg
inc
fsubr
inc
popf
inc
add
ja
jno
das
pop
mov
jmp
dec
add
das
subb
dec
fists
adc
or
loope
sub
popa
add
adc
gs
fbstp
add
js
outsb
cmp
lret
jl
add
stos
ja
push
sub
mov
adc
out
rclb
and
rolb
pusha
push
push
pushw
mov
int3
repnz
lret
fdiv
testb
push
mov
jmp
fidivs
inc
pop
shlb
lret
in
jl
daa
sahf
sbb
rorb
ss
cmp
push
mov
jmp
in
mull
push
mov
push
mov
jmp
mov
inc
pop
loopne
jmp
pop
popf
in
lea
dec
xor
push
hlt
cltd
dec
cld
fst
sub
dec
xor
inc
add
stc
dec
shrb
push
mov
mov
loope
std
mov
cmp
fdivs
lahf
fsts
enter
dec
js,pn
push
out
and
jmp
cmc
jbe
test
or
push
icebp
add
ljmp
push
lret
inc
aam
jnp
xor
push
dec
rolb
lods
lock
arpl
out
push
and
or
adc
mov
mov
loopne
push
push
xor
fisttps
insb
jmp
pop
add
movsb
and
pop
in
cwtl
in
mov
imull
push
imul
nop
xor
out
cmp
dec
or
pop
addb
sbb
push
add
jmp
ret
ljmp
stos
adc
sti
fadd
xor
or
pop
daa
push
sub
cmp
push
test
outsl
lahf
dec
push
cmp
pop
lret
add
inc
jmp
in
mov
out
sub
pop
mov
mov
and
jmp
repnz
pop
daa
jg
mov
out
pop
outsb
adc
shl
xor
xor
movsb
push
push
jmp
adc
push
ret
xchg
shll
nop
fsubl
mov
xor
mov
push
sub
lds
int3
or
call
adc
outsb
fs
jge
sarb
dec
shrb
add
pop
push
add
jge
lcall
xchg
jle
dec
jl
add
add
mov
mov
and
cmp
add
cmp
leave
iret
ljmp
lahf
mov
sub
cld
pop
mov
cltd
sub
mov
dec
jp
dec
in
xchg
sarl
roll
std
add
pop
push
sbb
push
mov
js
or
ss
jmp
add
mov
push
xchg
movsb
cmp
add
ljmp
jg
repz
hlt
out
add
xchg
adc
adc
sub
push
fwait
rolb
inc
push
mov
add
dec
jmp
or
pop
aam
decl
icebp
loope
insl
sbb
jnp
movsl
test
push
cmp
add
sub
push
imul
sbb
adc
lret
pop
addr16
or
out
jae
or
mov
xchg
fimuls
aad
inc
pop
rolb
sbb
and
pop
imul
psraw
inc
or
and
dec
cmp
mov
sub
sub
adc
add
or
daa
fistps
or
inc
push
sub
pop
decb
mov
mov
push
jb
in
pop
mov
jmp
jae
dec
pop
inc
adc
adc
push
idivb
pop
aaa
xchg
daa
imul
dec
xchg
mov
data16
out
popa
push
jmp
cmpsb
faddl
mov
aam
and
add
cmp
cmp
aas
into
mov
les
cmp
xchg
pusha
push
inc
mov
pop
mov
out
ss
js
xor
pusha
js
push
dec
pop
call
cmp
clc
repz
mov
push
pop
rclb
push
loopne
mov
out
lret
cs
pop
cmp
inc
or
jmp
in
mov
in
lock
inc
sub
aam
push
mov
or
dec
fildl
es
in
scas
ret
sbb
xor
cs
aas
jmp
dec
cmovp
jno
pusha
jbe
jne
mov
xchg
inc
ret
xchg
mov
out
in
mov
mov
mov
sub
nop
push
out
mov
lahf
in
or
in
daa
arpl
lds
adc
push
inc
sti
adc
mov
xor
or
cmpsl
loopne
movsb
andb
mov
jg
push
mov
mov
push
pop
mov
dec
jbe
shrb
test
jae
xchg
fdivl
mov
xchg
addl
push
push
pop
pop
push
xchg
das
xchg
push
push
and
adc
loop
test
cmp
jne,pn
inc
add
insb
xchg
jmp
mov
inc
mov
fimull
nop
pop
les
stos
lret
mov
lret
pop
push
cs
scas
mov
jns
add
andl
xchg
mov
pop
xchg
roll
dec
jns
jge
jle
adc
sub
jae
into
mov
mov
xchg
adc
pusha
dec
add
xor
pop
dec
sub
push
jmp
lcall
in
int
adc
push
add
mov
les
dec
push
cmc
cmc
sub
mov
adc
mov
cmp
add
nop
sub
xor
leave
stos
mov
adc
push
add
jl
xor
jnp
ljmp
add
cmp
mov
mov
test
jle
movsl
inc
push
xor
cmp
pop
xchg
jle
in
sarb
lods
sti
dec
inc
sub
pop
dec
add
mov
mov
xor
sarl
fs
pop
sub
dec
add
lret
fs
and
xchg
shr
nop
pusha
mov
les
mov
jl
sbb
xor
aas
in
sub
movsl
adc
and
ret
test
aas
not
scas
push
inc
add
add
add
bound
hlt
push
adc
cs
mov
incb
push
loopne
or
dec
or
push
movb
mov
out
cmp
jl
loope
int
ss
in
roll
dec
lock
lods
adc
add
sub
pop
in
imul
test
ret
arpl
in
push
push
push
pop
xor
cmp
cmp
imul
jmp
lods
push
add
sub
pop
in
adc
add
les
mov
jmp
jp
mov
inc
mov
loop
jo
inc
dec
es
jo
mov
pop
xor
jbe
call
push
dec
mov
inc
cli
jmp
mov
sub
cmp
clc
bound
dec
jo
lea
je
pusha
sbb
mov
sub
mov
repz
or
inc
or
push
pop
mov
adcb
cmc
iret
xchg
add
movsb
cltd
adc
sbb
mov
pop
imul
mov
pop
add
iret
dec
xlat
xor
dec
pop
and
adc
add
icebp
icebp
shrl
repz
out
sub
insl
or
xor
shll
pop
je
pop
cmp
mov
dec
shr
cmp
das
add
xor
ljmp
or
mov
pop
dec
push
loope
cmpsb
sahf
sbb
pop
pushw
inc
lods
scas
mov
or
dec
mov
clc
retw
pop
fldt
lock
jmp
mov
insl
inc
xor
mov
xchg
jae
xchg
pop
clc
xchg
mov
sahf
dec
and
pop
pop
adc
pop
xor
inc
xor
sub
int
push
adc
in
and
dec
pop
or
add
in
jnp
lret
xor
push
inc
scas
xchg
xchg
add
cmp
andb
mov
adc
push
add
fcompl
loope
push
push
add
stos
dec
dec
jmp
add
arpl
push
push
lret
not
or
inc
mov
xchg
hlt
push
ficoms
jmp
adc
pop
push
jo
dec
outsl
sub
out
or
adc
pop
xor
iret
push
mov
push
out
mov
call
fidivrs
sub
adc
out
les
cmc
mov
in
push
stc
sbb
aaa
mov
div
into
pop
and
mov
inc
nop
cmp
or
repnz
loop
outsl
sbb
mov
dec
pop
lds
orl
pop
out
jo
and
add
sub
mov
push
pop
popf
mov
repnz
push
aad
add
iret
dec
inc
mov
bound
dec
out
sbb
sbb
push
push
or
or
pop
jg
rclb
outsb
mov
add
inc
push
mov
push
jb
sbb
pusha
or
inc
and
dec
or
imul
pop
push
lock
std
stos
imul
sub
mov
or
xor
dec
mov
xor
xor
mov
add
push
shr
xor
dec
fwait
xchg
rorl
push
ja
xchg
mov
jno
inc
roll
decl
in
mov
push
dec
push
push
adc
add
xor
sub
mov
lret
add
imull
inc
add
stos
cmp
mov
add
sbb
std
push
mov
inc
addl
pop
das
cmpsb
ret
and
add
outsb
ret
aas
rclb
clc
inc
pop
xor
sub
xchg
clc
pop
push
push
or
mov
and
pop
push
loopne
in
adc
add
adc
and
xor
lret
or
jne
sbb
jmp
imull
inc
ds
fnstcw
cmp
stc
insl
dec
adc
aas
add
adc
aaa
push
orb
sub
sbb
or
adc
and
scas
pusha
xchg
jle
cmpsl
rcrb
rclb
xend
adc
dec
stc
lea
inc
add
add
sarl
mov
test
pop
in
lea
pop
subb
or
flds
or
inc
bound
sbb
xor
push
ljmp
dec
jbe
push
cmp
cmp
add
lret
mov
imul
cmpsb
cmp
mov
and
pop
add
inc
inc
shl
add
cmp
test
das
mov
jo
jbe
adc
or
lods
rcll
push
lcall
incl
jp
mov
sub
and
or
pop
mov
ja
sarb
adc
sub
inc
popa
shrl
or
xchg
jnp
mov
sti
cmp
lahf
imul
gs
scas
jns
cmp
sub
scas
pusha
xor
dec
xchg
dec
inc
jbe
or
gs
aaa
int
loope
nop
ljmp
cli
lock
push
fnstsw
and
leave
pop
lret
dec
jne
lea
xor
push
dec
cmp
in
nop
ret
sbb
jl
daa
inc
or
mov
movsl
adc
xchg
test
or
stos
push
leave
mov
sahf
leave
mov
shrb
add
inc
adc
idivl
cmp
mov
clc
mul
insl
jnp
dec
das
in
add
andl
adc
cmpsl
rclb
negl
cmpsb
out
nop
push
xchg
ljmp
adc
movsb
dec
push
test
pop
push
mul
push
fists
fisttps
icebp
cmp
aad
lods
sti
jle
pop
add
out
imul
pop
push
push
push
push
dec
jmp
push
gs
cmp
push
adcb
sub
stos
shll
and
aad
push
insl
jp
cmpsb
mov
xlat
out
test
lods
cmpl
cs
bound
push
das
cmpsl
mov
cld
test
cmpb
clc
jg
adc
mov
jge
pop
xor
push
mov
inc
outsl
cli
ljmp
sub
or
pop
sub
jmp
jnp
add
bswap
or
enter
jmp
loop
jns
adc
in
aad
nop
adc
or
ss
enter
leave
mov
loop
fidivl
mov
mov
pusha
aas
in
data16
es
cli
mov
xchg
inc
pop
sub
fadds
test
cmp
dec
sbb
scas
inc
lds
mov
jmp
xorb
jge
roll
add
dec
jnp
or
pop
sbb
jl
xchg
push
icebp
pop
loope
aas
daa
mov
sahf
nop
lods
or
stos
or
icebp
aad
enter
xchg
and
leave
jecxz
mov
jge
sbb
sub
add
push
jl
int
addr16
pusha
cmc
inc
sub
pop
pop
cld
inc
pop
dec
popf
loop
push
push
jmp
adcb
inc
push
adc
enter
imul
cmp
dec
sbb
mov
mov
call
idivb
mov
mov
mov
pop
wbinvd
and
sbb
xor
pusha
pop
push
cmpsl
clc
inc
pusha
out
dec
mov
dec
or
pop
imul
clc
add
sub
icebp
adc
xor
ret
mov
add
xor
cli
adc
lret
stos
add
scas
push
xchg
shl
std
imull
or
orb
pop
mov
fs
fldcw
inc
int
pop
xor
popa
xchg
imul
inc
rolb
dec
pop
hlt
ror
mov
sub
xor
add
outsl
add
dec
add
arpl
flds
pop
push
mov
mov
imul
in
into
dec
aam
inc
mov
jle
mov
das
outsl
rcl
sbb
push
cmp
xchg
mov
inc
mov
ds
push
shrl
pop
and
sti
fdivrl
push
jmp
call
loop
add
xchg
out
jae
push
loope
push
bound
or
loop
pop
test
ljmp
jmp
rol
adc
adc
das
or
pop
pushf
ret
shrl
xchg
jmp
mov
xor
out
test
outsb
jmp
dec
dec
out
add
sbb
rol
mov
adc
add
cmp
or
inc
mov
jo
sarb
dec
add
sbb
xchg
push
pop
cli
dec
faddl
mov
sub
adcl
adc
pop
pop
pop
mov
inc
bound
push
imul
adc
xor
add
push
jge
cs
mov
jl
inc
and
add
add
sub
jle
das
sub
ljmp
dec
cld
loop
sub
pop
imul
filds
mov
adcl
sbbl
mov
sti
call
xchg
sub
stc
andb
sbb
sbb
mov
cmp
mov
cmpl
add
repz
test
sbb
cmpl
scas
int3
andb
incb
dec
into
inc
xor
dec
push
push
out
adcb
dec
mov
lds
cld
cmpsb
cmp
xor
pushw
jmp
sub
pminsw
es
push
dec
aad
decb
dec
dec
add
insl
xor
repnz
jne
xor
jmp
or
mov
and
add
fstpl
xor
fcomps
cmp
xlat
pop
sub
dec
xor
jb
or
stos
cmp
loope
imul
mov
mov
jl
sbb
push
loopne
out
add
clc
pushf
dec
aaa
call
pop
adc
cmp
jmp
rcr
shl
je
sub
int3
bound
pop
lret
add
out
fstp
push
or
jmp
dec
add
or
lcall
pop
pusha
das
mov
sbb
and
jne
loopne
sub
dec
push
mov
jmp
push
lret
inc
inc
int
jae
pop
xchg
or
xlat
jmp
add
aas
pop
dec
mov
cwtl
addl
adc
aaa
popa
mov
cmp
shl
and
fisttps
mov
inc
cmp
pop
xchg
push
enter
mov
sub
pusha
mov
push
lahf
popa
mov
cwtl
faddl
sub
pusha
dec
stc
adc
enter
inc
test
cli
dec
repnz
or
inc
dec
mov
cmp
lds
jmp
mov
cld
jmp
xor
xlat
dec
aas
add
mov
das
add
jmp
loopne
in
push
movsl
push
inc
dec
movsl
mov
roll
in
inc
addl
and
xchg
mov
add
out
ljmp
push
outsl
repnz
xor
sub
xlat
pop
and
inc
mov
pop
daa
inc
faddl
lret
cmpsl
lea
in
xchg
dec
push
in
jmp
iret
push
call
in
add
inc
lret
sysret
not
andb
enter
or
inc
or
lds
and
add
xchg
pop
cmpsb
mov
pop
jmp
or
testb
xor
addr16
sahf
shl
jne
dec
fbld
dec
xorb
in
mov
push
lods
scas
and
sub
lods
sub
pop
repz
in
push
xchg
jns
lds
cmovnp
pop
in
jge
mov
aam
sub
xchg
test
js
push
mov
mov
sub
sahf
mov
mov
sbb
mov
es
sub
outsl
mov
out
shr
add
push
push
jmp
push
mov
scas
insb
nop
mov
or
mov
xor
mov
cmp
pusha
mov
mov
or
js
xor
es
sub
xor
add
add
pop
rolb
lods
ficoml
fcoms
notb
push
xchg
jl
and
add
outsb
insb
stos
push
lcall
shl
popl
mov
sub
cli
jmp
scas
inc
lret
xor
lds
mov
stos
and
jle
xor
inc
mov
bound
ja
scas
jecxz
xchg
scas
sub
sub
adcb
xor
out
shlb
pusha
or
ss
call
adc
inc
or
aam
std
lock
movsb
jmp
gs
out
mov
and
in
push
or
sti
jg
mov
std
cmpb
rorl
fisubl
in
aaa
ja
mov
sbb
xor
jmp
dec
out
rolb
into
outsl
push
cmp
inc
sub
lahf
sub
sub
or
insb
enter
xor
cmp
push
ficoml
mov
add
es
push
cld
popf
pop
push
not
out
repz
lods
arpl
movsl
movsl
leave
jnp
add
nop
in
mov
es
push
pop
out
add
arpl
inc
inc
pop
hlt
mov
dec
add
add
adc
pop
jl
adc
call
aad
fmull
jmp
push
add
lcall
add
ret
in
mov
repnz
push
clc
mov
test
jno
cmp
sbb
inc
cmp
in
movsl
or
pop
sub
sub
sub
incl
sub
mov
adc
xchg
jl
cmp
sbb
sbb
cmp
ret
jmp
or
sub
push
mov
sbb
or
ret
popa
and
xchg
cs
addr16
imul
je
add
pop
cltd
imul
push
sub
xor
inc
dec
popa
push
push
jnp
lret
mov
push
dec
in
or
fdivs
sbb
test
bound
mov
adc
fdivrl
shlb
shr
or
push
sub
mov
inc
jnp
xchg
xchg
lods
test
pop
addl
rorb
mov
stos
inc
sub
inc
jge
lods
loop
adc
inc
lods
roll
add
lods
iret
jb
dec
aad
and
push
ret
push
push
jne
xchg
stos
add
clc
push
add
sbb
pop
mov
andb
xlat
outsb
jp
imul
push
push
cmc
push
inc
sbb
pop
fnstenv
in
jmp
rclb
test
or
pop
and
mov
or
adc
add
sub
inc
leave
or
pop
clc
push
idivl
pop
and
fs
cld
push
out
ds
mov
mov
mov
icebp
pop
pop
inc
sbb
jmp
out
pop
cmp
or
inc
push
pop
jmp
and
jo
jmp
and
sub
push
out
inc
mov
push
bswap
adc
or
arpl
enter
sbbb
shlb
mov
and
icebp
pop
push
insl
cmc
mov
or
pop
ja
rcrb
cltd
dec
jae
nop
push
mov
adc
mov
loop
inc
inc
imul
and
imul
pop
pop
neg
cwtl
or
paddw
jno
mov
pop
xor
dec
cld
dec
mov
lds
mov
xor
les
xor
pop
add
mov
cmp
cmc
xor
sahf
test
inc
ficompl
jmp
rcrl
and
sbb
lds
out
sub
sub
add
into
sub
mov
pushl
add
mov
pop
jno
or
push
std
mov
mov
adc
data16
pusha
and
divl
mov
pop
or
iret
pop
pop
inc
or
jmp
sub
les
iret
pop
jo
shr
adc
enter
int3
jae
mov
test
mov
and
mov
dec
or
push
push
xchg
in
add
outsb
loop
sti
cmpb
inc
iret
imul
xchg
pop
cmp
sbb
jecxz
xchg
clc
daa
loop
or
jg
add
add
dec
add
or
inc
rorl
jnp
je
or
cmp
subb
xchg
mov
jmp
cli
push
frstor
jns
ret
aas
sbb
stos
cmp
xchg
call
out
sti
leave
fmull
je
ret
pop
sub
sub
mull
or
sti
out
xchg
out
loopne
push
mov
mov
rorb
or
xor
push
cli
sbb
fsub
push
mov
or
jmp
jmp
xchg
cs
xor
bound
icebp
div
lock
dec
jae
js
pand
adc
cmp
out
and
leave
addr16
xor
jo
push
sahf
jbe
push
sarb
lods
ret
jns
mov
mov
lahf
pusha
adcl
nop
cwtl
pop
in
aaa
jbe
dec
pusha
in
arpl
push
adc
rorb
mov
add
jo
mov
mov
roll
jg
dec
xchg
and
iret
adc
mov
addr16
push
ss
adc
adc
jmp
bound
lock
shll
ljmp
enter
xor
push
mov
mov
pop
mov
or
pop
das
and
xor
jmp
mov
cmpb
ret
lock
add
or
out
mov
aad
xchg
js
sub
push
jmp
pop
pop
mov
pop
inc
loopne
dec
sbb
jno
inc
sub
add
jle
push
mov
stos
cmpb
jo
push
dec
and
addr16
cmp
scas
icebp
das
out
mov
mov
cltd
aam
das
js
add
inc
inc
jo
dec
pop
daa
mov
inc
xor
pushf
jp
pop
cmc
xor
mov
sub
mov
je
inc
roll
cmp
jne
adc
add
jmp
add
loope
mov
or
lods
and
lods
mov
push
and
xchg
test
testl
pop
xchg
int
add
aas
add
out
adc
cld
or
insb
lahf
or
sti
hlt
push
pop
jmp
call
jp
lcall
push
pop
pop
mov
fistpll
mov
flds
dec
or
push
xchg
js
ss
stos
add
jmp
mov
inc
push
pop
pop
popa
shrl
lock
jp
and
cmp
adc
dec
jne
mov
inc
fistpl
jge
sbb
test
sub
dec
dec
dec
mov
out
xchg
mov
imul
test
stc
pop
stos
sbb
lahf
loop
jne
out
fldcw
xchg
mov
push
pop
out
and
inc
push
push
data16
sbb
push
test
aas
mov
or
jae
mov
sub
lcall
fmul
ret
pop
dec
lods
std
fstl
dec
jge
clc
or
fcomps
shr
scas
inc
ljmp
lods
arpl
push
inc
cld
mov
cmp
into
movsl
idivl
adc
and
mov
lock
das
add
mov
sub
aaa
nop
sub
jecxz
ljmp
push
lret
xor
subb
lahf
pop
mov
or
mov
push
push
pop
pop
testl
rorl
add
adc
stc
mov
rcrb
js
jmp
jmp
mov
sub
xchg
cmpsl
shll
add
push
xor
fstpl
push
jle
jmp
push
pop
dec
adc
repnz
cmp
sub
fs
sbb
dec
xor
frstor
jle
adc
cmp
in
les
cmp
std
fstps
int
xor
scas
int
sub
push
dec
and
jl
sbb
sub
nop
mov
adc
dec
sub
dec
not
inc
add
loopne
divb
dec
xor
and
rclb
addb
mov
adc
jo
mov
add
push
pop
jmp
rcr
popa
sub
adc
xrelease
lahf
repz
cli
fnsave
int3
add
pop
hlt
in
add
jp
or
dec
sub
lds
loop
ljmp
or
adc
jmp
aas
cld
pop
ja
sbbb
jbe
daa
jns
dec
xchg
sub
pop
addl
lods
jne
fdivrl
pop
push
jno
dec
insb
das
cs
dec
lds
gs
sbb
or
push
sub
push
xor
jnp
lahf
outsl
sub
adc
stos
pop
aad
cmp
pop
push
sahf
mov
jmp
andb
xor
dec
and
add
lods
add
jns
popf
mov
clc
mov
push
mov
or
xor
sbb
xor
ret
icebp
mov
mov
int
fadd
jno
adc
add
add
push
push
add
sbb
jle
jge
stos
ret
or
imul
rolb
push
add
push
enter
pop
insl
int3
pop
movsl
push
jle
ficompl
pop
popf
mov
movl
mov
arpl
ret
and
cmp
lods
add
xchg
push
lcall
or
push
cwtl
push
clc
test
lods
push
inc
aad
jmp
push
push
pop
xor
aas
lock
pop
outsl
sub
cmpb
pop
popf
mov
pusha
fxch
add
adc
neg
inc
add
or
test
enter
push
jl
repnz
dec
add
scas
and
fsub
fstps
out
jnp
mov
adc
cmp
cld
and
sarb
pop
xchg
inc
cld
repz
or
mov
cmc
loope
jnp
adc
mov
cwtl
arpl
sahf
dec
adc
add
pop
and
pop
ret
shrl
jecxz
and
or
mov
sub
cmp
lret
test
int3
fisubs
push
dec
push
gs
and
insl
sub
xor
movb
sub
inc
mov
sti
mov
push
push
dec
lods
aad
scas
push
push
pop
movsb
sub
pop
arpl
aad
sarb
loop
lret
add
ret
cmp
jno
dec
dec
or
jno
popa
jg
ljmp
or
adc
mov
adc
adc
out
insl
outsb
mov
cs
and
pop
adcl
icebp
rcl
js
add
int
sbb
fcoms
add
sti
es
pop
cltd
pop
pop
push
jmp
or
xor
adcb
mov
orb
popf
mov
jmp
mov
sub
pop
inc
add
lods
test
daa
negb
jmp
shll
jp
popf
adc
ficoml
or
fbld
add
pusha
fwait
xor
mov
ficoms
testb
fsubl
sub
push
fdivl
push
mov
sbb
add
mov
add
enter
mov
mov
or
add
ljmp
mov
fwait
xchg
pop
outsb
pop
pusha
push
mov
in
pop
cmc
jno
loopne
jno
movsl
fstl
pop
sub
jge
jnp
xor
jle
dec
dec
movsl
out
mov
or
mov
fists
cmp
push
fstpl
push
or
ss
mov
push
and
sbb
add
mov
or
adc
mov
enter
xchg
and
outsl
sub
push
sub
int
inc
mov
rclb
cmp
sub
jns
filds
push
dec
pop
stos
add
mov
popf
in
and
clc
cmpsl
dec
lahf
dec
add
push
push
xchg
push
cmp
xchg
dec
jnp
mov
pop
adc
pop
pop
sbb
cltd
and
xchg
ljmp
mov
pop
xor
mov
xchg
stos
and
pop
inc
push
dec
es
loop
leave
or
roll
add
add
push
mov
daa
push
xchg
jno
mov
jbe
pop
push
sub
mov
fs
loop
sub
and
mov
js
das
in
daa
push
dec
xchg
daa
jo
dec
out
inc
loop
sbb
mov
inc
les
jbe
pusha
sub
js
or
je
add
stc
inc
pop
lret
cmp
mov
pop
movsl
push
sub
cmp
and
cmc
inc
imul
add
mov
mov
or
clc
jno
dec
pop
or
adc
xorl
sbb
add
loop
add
add
or
or
in
push
add
add
jl
pop
mov
xchg
test
sbb
dec
pusha
idivl
add
insl
jp
cwtl
out
das
test
xchg
xor
adc
cmpb
hlt
cmp
push
and
sub
lret
and
leave
push
or
inc
push
xchg
pop
mov
insb
mov
xor
dec
shrb
pop
xchg
jle
fs
xchg
mov
loop
dec
cmp
jl
repnz
push
loopne
aad
xor
fimull
dec
mov
loope
int
cmp
add
jge
and
inc
or
pop
adc
out
mov
cmp
dec
add
test
inc
push
test
mov
push
mov
dec
mov
xor
aaa
cmovle
push
pop
adc
repnz
clc
xlat
rcr
and
or
dec
mov
and
insb
push
fdivrl
sbb
jmp
mov
adc
scas
fsubrs
movsb
in
lods
dec
adc
jmp
roll
mov
lea
mov
add
repz
in
subb
jne
mov
dec
ret
mov
xor
loope
xchg
mov
lahf
mov
sbb
mov
mov
inc
xor
insl
xor
add
jmp
out
push
cld
and
mov
sub
jl
cmp
or
add
sub
outsl
sarb
ds
add
adc
mov
imulb
adc
jbe
into
test
clc
in
add
outsb
xchg
ficoms
or
inc
fiaddl
jp
and
movsl
ud1
jo
inc
add
scas
sub
div
lock
xor
dec
pop
mov
mov
xchg
pop
scas
cmp
inc
daa
insb
mov
xchg
mov
push
iret
in
sbb
and
mov
insl
out
jg
ret
movsl
dec
xor
aaa
sub
jmp
push
push
add
shlb
lahf
and
dec
jns
fimuls
scas
and
icebp
adcl
inc
xchg
adc
add
jmp
xor
dec
ret
aad
sub
cwtl
and
cmp
inc
jo
out
neg
pusha
leave
cmp
push
inc
and
sahf
pop
pop
je
add
and
pop
push
add
adc
add
out
inc
test
js
jg
popf
ret
or
cmpb
mov
inc
imul
mov
pop
push
jmp
outsb
test
ss
adc
jecxz
jmp
mov
icebp
std
sub
mov
mov
icebp
lahf
dec
push
push
shlb
insl
leave
dec
push
out
adc
nop
push
adc
push
xor
push
mov
out
push
in
mov
sar
pop
jmp
cmp
mov
xchg
shr
js
or
bound
sbb
or
mov
xor
sub
mov
das
incb
test
movsl
push
mov
add
pusha
add
push
scas
push
xorb
mov
stos
adc
stc
fidivrs
jle
je
pushf
cs
mov
xchg
and
or
mov
xor
fst
sub
nop
fiaddl
push
push
pop
add
fistl
add
push
push
mov
xchg
lds
cli
jno
push
push
xor
push
cli
add
imul
cmp
mov
or
cwtl
call
add
mov
neg
or
and
adc
push
and
add
and
jmp
dec
mov
test
scas
sar
outsb
and
repnz
fisttpll
stos
add
les
sub
pop
push
ret
dec
pop
pop
test
xor
cwtl
xchg
sub
jno
or
mov
or
pop
mov
ds
push
ds
mov
cwtl
fldt
push
mov
sub
push
pop
sub
inc
push
jae
jg
enter
add
out
add
addb
pop
adc
scas
clc
popf
dec
in
add
sub
aas
xchg
in
or
repz
jne
xchg
push
roll
adc
or
inc
js
mov
jnp
push
movsb
out
inc
cmp
push
ja
cltd
jne
fcomp
xchg
or
mov
repnz
loop
pop
pop
push
subl
sub
mov
inc
push
ror
mov
and
loopne
and
rol
or
mov
sub
dec
pop
adc
jmp
ret
jmp
inc
ret
das
pop
mov
and
mov
jl
insl
das
jmp
adcb
dec
sbb
in
pushf
push
and
or
and
fildl
push
les
subb
sbb
dec
imul
jg
xor
lock
mov
mov
and
and
lahf
inc
jnp
lods
dec
lods
hlt
sub
or
sub
or
pop
jmp
jge
ja
fsubs
andb
sbb
ret
adc
xchg
xor
out
sbb
in
int3
sub
add
icebp
je
nop
rolb
outsb
and
adc
les
fcmovbe
clc
std
aas
rcrl
add
add
jmp
add
dec
je
bound
xchg
repz
insb
iret
and
adc
pop
jne
push
sbb
push
mov
aas
add
in
nop
dec
add
neg
shr
imul
xor
pop
out
nop
pop
cmp
pop
pminub
fcoml
lret
aam
mov
jp
imul
or
and
test
jp
pop
jne
mov
popf
cmp
fstp
dec
sub
add
aaa
mov
sub
cmp
in
xor
mov
push
and
pop
scas
mov
xchg
leave
jg
mov
mov
mov
popf
jb
pop
jae
sbb
pusha
das
dec
adc
dec
add
mov
mov
popa
pop
jp
call
inc
pop
add
les
push
in
or
cli
pop
jb
or
jmp
or
es
inc
or
out
fidivrl
movl
dec
outsl
adc
inc
jmp
das
dec
mov
ss
hlt
jge
fidivrl
inc
push
or
cmp
sub
or
jmp
push
cmp
xchg
icebp
das
jecxz
pop
rclb
add
jmp
repz
xchg
jp
cld
test
sbb
cltd
adc
mov
inc
push
or
sub
mov
cmp
jp
int
cltd
lahf
sub
inc
fs
or
mov
pushf
mov
push
fldenv
and
adcl
std
inc
or
test
ja
push
pusha
inc
rcrl
repnz
xlat
ret
sti
xor
fmulp
pop
inc
jmp
cwtl
sub
mov
jecxz
jmp
mov
push
add
pop
daa
jmp
jns
inc
das
add
loopne
and
lock
mov
pop
roll
xor
add
fucomp
jle
es
popa
and
push
fstps
adc
das
jle
lods
add
es
cltd
pop
add
pop
ja
imul
aam
add
lahf
movsl
movsb
pop
push
mov
jl
pop
and
push
pop
gs
mov
pop
mov
push
bound
xor
jo
or
loopne
mov
or
pop
data16
jge
mov
jge
lea
or
sub
dec
sub
xchg
pop
add
pop
dec
mov
sbb
push
pop
mov
adc
mov
cmp
sub
mov
popa
or
mov
pop
pop
cmp
int
nop
fs
adc
ds
das
nop
mov
test
out
out
in
js
cmp
dec
js
xchg
repnz
adc
jge
lods
bound
sub
mov
addr16
xchg
ret
jb
add
dec
xchg
lock
or
mov
mov
cli
or
ljmp
push
xchg
xor
mov
dec
les
and
imull
or
push
andl
pop
lcall
pop
pop
xchg
sub
jge
popf
cwtl
sbb
shll
jnp
push
add
in
sbb
mull
fidivs
es
pop
ljmp
mov
inc
insl
stc
xor
cs
push
ljmp
inc
aaa
or
dec
pop
mov
jne
xor
into
add
mov
adc
inc
mov
fsubrs
dec
repnz
add
xor
ret
mov
push
adc
or
fs
in
cli
les
orb
stos
xchg
and
push
les
jecxz
cmp
repnz
pop
js
in
sahf
adc
cmc
push
mov
cmp
ret
fildll
add
lods
adc
mov
push
jmp
push
sub
fs
add
pop
shlb
mov
and
daa
lea
cmc
test
or
jae
div
addb
sub
sub
outsb
or
xchg
xchg
arpl
subb
jns
ljmp
mov
cwtl
scas
xor
jg
push
mov
pop
roll
cmpsb
and
aaa
inc
mov
divl
sub
aas
jo
cld
lahf
or
icebp
add
neg
or
push
push
dec
ret
pop
jle
sub
inc
pop
ficoml
xlat
adc
les
pop
iret
popf
pop
adc
mov
popa
lret
jmp
push
push
mov
sub
fcomip
push
ds
test
iret
mov
jle
add
lret
cld
ret
push
loope
pop
das
mov
xchg
jb
mov
sbb
cmc
add
push
les
cmp
sub
imul
push
push
and
inc
subb
xchg
iret
pop
and
jb
or
call
jmp
xchg
fdivl
push
cmpsl
cmpb
lods
fistpll
sahf
add
and
push
and
and
lock
cmp
nop
sub
mov
pop
hlt
test
push
cli
test
movsl
scas
filds
pop
call
stc
jl
cmc
das
cmp
dec
loope
adc
lds
mov
cmpb
rclb
jnp
inc
mov
sti
jo
pop
pop
out
cmp
neg
aam
clc
jb
js
add
sub
or
pop
pop
pop
inc
ljmp
and
xchg
dec
out
jle
hlt
push
mov
dec
mov
xchg
mov
inc
push
imul
push
scas
and
push
frstor
daa
das
xchg
in
dec
repnz
lds
andb
orl
dec
sub
jne
lahf
nop
xor
pop
outsb
test
popa
push
imul
pop
jmp
inc
push
sbb
aaa
inc
sub
dec
scas
ud2
push
mov
and
and
and
pop
dec
push
and
add
add
cmp
push
adcb
pop
repz
xchg
and
cs
push
mov
sub
roll
xchg
rcrb
jl
das
subl
lods
sbb
jmp
pop
cmc
inc
arpl
jns
mov
pop
ja
je
sub
pop
mov
repz
cmp
ss
out
push
aas
adc
adc
pop
sub
push
mov
push
inc
test
add
xor
pop
push
ljmp
mov
popa
mov
loopne
jp
jmp
push
add
sub
stos
sbb
jmp
xor
sbb
xchg
mov
ret
lock
xchg
fsubl
mov
xchg
jecxz
lods
xchg
pushf
imul
add
cltd
inc
std
jle,pn
pop
cmc
stos
sub
sub
push
add
adc
or
out
or
in
mov
dec
add
adc
data16
rorl
push
jnp
and
frstor
or
add
jmp
sub
mov
add
push
pop
or
ja
push
add
pop
push
push
adc
push
push
cmp
test
jp
mov
push
mov
or
mov
pop
leave
mov
cltd
push
jecxz
add
add
loope,pn
sbb
push
sub
cmp
les
mov
hlt
pushf
dec
inc
sbb
or
adc
in
push
inc
mov
or
gs
add
xor
xchg
and
aad
loope
rorb
cld
sbb
or
and
je
lret
popl
jmp
sub
mov
inc
mov
shlb
imul
and
adc
shll
sub
mov
adc
mov
rorb
push
dec
mov
test
cmp
mov
bound
or
testb
cmp
sysexit
dec
pop
xor
add
inc
push
push
int
lock
fsubp
ret
dec
pop
push
lds
lds
xchg
ret
xchg
dec
mov
sub
nop
or
xor
insl
js
bswap
cmp
pop
scas
test
add
mov
pusha
sub
rcl
insl
subb
pop
xor
aaa
std
inc
or
adc
and
dec
lods
pop
sbb
stos
mov
movsl
inc
shll
and
insl
hlt
mov
test
jb
in
sub
arpl
jmp
jno
dec
pop
cmp
lret
cmp
or
leave
in
sub
xor
aas
adc
jp
adc
jno
into
inc
int3
ret
aas
lahf
inc
cmpsb
aad
pop
mov
mov
xchg
inc
pop
dec
jp
out
js
call
ss
dec
mov
popa
jl
shrl
xor
push
sahf
push
loop
pop
add
sbbl
or
fiaddl
rcll
jmp
outsl
daa
add
idiv
fidivrl
push
ret
pop
out
jmp
sub
das
rcll
hlt
inc
mov
push
add
xlat
xor
fs
push
out
mov
inc
outsl
cld
add
popf
js
mov
mov
dec
daa
insl
inc
rcl
paddsb
loope
repz
adc
jmp
inc
push
mov
cmp
dec
jne
push
jmp
cmpsb
daa
push
push
rol
stos
mov
jae
inc
cmp
add
cmc
rorl
add
sub
dec
mov
xlat
and
bound
or
jmp
js
aad
daa
insb
push
push
pop
cld
push
shrb
aas
sbb
add
xchg
lock
lock
mov
rcrb
les
add
xor
or
pop
push
cltd
inc
jns
add
test
jmp
in
das
pop
ljmp
dec
sub
add
mov
ljmp
imul
push
sbb
adc
rcl
cmp
sub
subl
ret
add
push
mov
std
test
ret
add
scas
loope
jmp
sub
push
pop
mov
jecxz
sbbb
jmp
xchg
pop
lret
loope
test
pop
ret
push
adc
add
sub
cmpsb
add
push
cmp
imul
pop
xor
std
data16
or
xor
popf
in
push
pop
mov
mov
sub
sub
sub
adc
inc
daa
mov
push
jecxz
xlat
dec
sbb
lds
arpl
inc
mov
loop
or
push
seta
add
mov
std
adcb
imul
bound
dec
xor
test
xchg
lock
js
mov
flds
jbe
dec
rol
outsl
xor
cltd
inc
sub
xchg
jecxz
fdivl
or
sbb
jge
add
push
or
inc
and
push
dec
ret
xchg
inc
mov
in
jmp
sub
jg
test
adc
das
pop
rclb
pushf
add
jl
sub
jmp
push
pop
sub
aam
dec
cmp
outsb
mov
and
mov
jmp
sbb
xor
and
inc
hlt
or
hlt
mov
les
imul
movsl
xor
std
cmc
nop
xchg
sbb
sbb
or
add
aam
ja
fnstenv
add
push
leave
inc
cmp
pusha
jp
or
pop
jmp
push
nop
jmp
dec
dec
test
adcl
fwait
daa
inc
jp
out
ja
dec
or
jnp
adcb
es
mov
orb
jmp
pop
mov
add
pop
jmp
mov
les
cmp
adc
mov
fs
or
add
lret
or
add
adc
push
in
inc
sahf
lcall
and
jmp
and
mov
sub
out
mull
popa
jmp
sub
mov
pop
mov
sub
aam
test
pop
lock
and
add
push
mov
sub
orl
and
in
into
or
rcll
inc
fildll
pop
and
mov
fildl
das
div
cmp
decl
movsb
add
xchg
icebp
jnp
int
sub
lock
xor
or
mov
mov
add
jb
mov
push
add
jge
sbb
jmp
push
sbbb
mov
or
push
mov
or
bound
sbb
fldt
pop
fs
xchg
ljmp
mov
fadds
cmp
aas
dec
add
dec
or
call
negb
add
imul
mov
in
push
xchg
ljmp
orb
outsl
inc
jmp
add
icebp
sti
clc
in
mov
jl
jne
sbb
push
dec
mov
inc
fs
outsb
xchg
or
repnz
dec
shrl
cwtl
movsb
pop
mov
or
stos
pusha
mov
or
adc
pop
add
mov
loope
push
or
adc
and
add
out
ret
sarl
push
int3
ror
push
ja
inc
ror
neg
jmp
xchg
shlb
mov
mov
jg
dec
rcrl
sbb
or
pusha
lret
xlat
in
sbb
testb
cmp
xlat
push
mov
lds
movsl
xor
xchg
or
ja
xchg
inc
add
loop
pop
sahf
or
adc
add
outsb
pop
and
and
xor
das
stos
jb
cwtl
scas
or
or
fidivs
stc
mov
imul
and
adc
mov
and
sbbb
mov
jmp
fcmove
add
ret
loope
repz
jno
xorl
push
push
clc
jge
insl
std
inc
sbb
sub
nop
inc
xchg
and
insl
pusha
cmp
adcb
fbstp
sti
pop
pop
sti
mov
jns
decb
add
adc
outsb
sbb
and
clts
loop
jmp
cmc
aad
jne
mov
ja
int3
mov
sti
andl
jno
xor
jecxz
pop
mov
int3
fildl
out
dec
je
js
adc
mov
dec
mov
mov
dec
jg
arpl
lret
fdivrl
dec
sub
or
lods
or
loop
pop
stc
mov
pop
jmp
movsl
ja
in
pmullw
leave
xlat
xchg
or
mov
mov
adcb
add
pop
push
push
sub
pop
fwait
dec
lods
mov
push
out
xorb
jo
xchg
jl
arpl
daa
inc
add
dec
ret
mov
insb
mul
or
or
pop
lahf
fisttps
mov
xor
xchg
add
and
or
mov
pop
add
repnz
dec
out
movsb
mov
or
and
push
pop
rcrw
cmp
dec
repz
fldcw
or
outsb
out
testb
mov
fldenv
jae
adc
ret
push
lret
adc
scas
int
xor
out
andl
pusha
sarb
lahf
add
lods
sub
push
repnz
xchg
addb
call
stc
in
adc
loopne
push
inc
ja
push
movswl
push
xor
incl
fildl
jmp
mov
mov
xchg
sub
cmp
mov
dec
sub
or
lret
pop
push
jns
and
pop
inc
pushf
cmp
adc
rcll
cli
or
adc
inc
pop
out
and
dec
lmsw
push
add
dec
mov
bound
mov
imul
sub
or
mov
int
pop
lock
repnz
fidivrs
jbe
dec
outsb
mov
les
imul
mov
xor
mov
loope
sar
insl
push
hlt
idivb
pop
icebp
out
dec
or
inc
das
xor
testl
inc
jno
cmp
inc
test
sti
fnstcw
iret
in
cmp
sub
ljmp
inc
push
dec
jo
popl
add
mov
pusha
icebp
inc
and
lds
aaa
add
ljmp
lea
cmp
add
dec
sbb
mov
aam
dec
shl
aad
or
aam
hlt
jbe
notb
xchg
mov
sbb
mov
jae
mov
push
pop
push
add
ljmp
sub
in
les
sahf
dec
xor
in
sub
ljmp
rcll
cmp
loop
inc
push
jge
dec
add
test
test
adc
ret
insl
fcompl
nop
xchg
jmp
pop
xchg
add
sub
sti
xchg
push
icebp
hlt
xchg
jmp
fs
add
or
loope
jp
add
int3
or
push
jmp
inc
xchg
pop
cmc
pop
pusha
rorb
or
adc
xchg
subl
nop
sbb
sbb
loope
mov
jmp
mov
xchg
push
aad
jmp
push
dec
pop
clc
mov
push
push
cmp
jmp
add
xor
fldl
push
push
cmc
inc
es
push
mov
add
call
rol
pop
push
imul
leave
stc
mov
ds
movsl
adc
sub
adcb
push
add
adc
inc
leave
shl
jmp
das
sub
mov
in
and
add
rorb
mov
shrb
cwtl
shr
cmpsb
and
cmp
gs
mov
dec
dec
cs
fwait
jns
dec
and
inc
repnz
push
jmp
pop
ret
xchg
xor
loop
jge
sbb
sbb
mov
add
adc
rcrl
pushf
add
pop
and
cmp
neg
and
loop
fistl
add
lret
pop
or
es
add
xor
cmp
out
dec
and
add
xor
in
jmp
fsubl
pop
add
pusha
push
inc
or
pop
es
int3
jno
clc
mov
jl
cwtl
mov
add
push
jmp
repz
xchg
or
fstps
loop
or
adc
push
cwtl
dec
push
test
xchg
mov
and
pop
push
lods
scas
ret
push
push
inc
test
adc
in
sbb
faddl
add
out
popa
and
add
pop
pop
inc
lea
int
sub
movsl
rolb
pop
sub
loop
mov
lea
or
sbb
adcb
sbb
inc
pop
mov
adc
inc
cld
mov
stos
mov
add
push
out
push
movsb
stos
imul
jg
inc
sbb
or
push
lea
sbb
mov
push
repnz
xor
inc
imul
inc
out
add
popa
in
push
sub
test
data16
mov
mov
sub
mov
cmp
and
pusha
shrl
mov
adc
icebp
push
and
inc
cmp
dec
fs
cmp
add
adc
cltd
ljmp
loope
rcrb
mov
xor
push
xor
out
or
or
int3
mov
roll
sarb
and
sbb
mov
pop
lret
dec
sbb
fnstsw
out
push
jp
pop
inc
std
jmp
or
xchg
push
jne
gs
pop
subb
outsb
testl
jmp
lcall
mov
adc
ja
test
jl
add
jmp
shrl
xchg
mov
loopne
or
pop
insl
sub
push
add
sub
in
movsb
jmp
pop
dec
add
enter
subl
lret
cwtl
mov
lods
or
std
pop
add
pop
sub
xor
je
sbb
xor
pop
add
and
mov
ljmp
jecxz
push
push
mov
jp
sbb
in
adc
inc
mov
jb
es
add
inc
cmpsl
scas
movsb
jo
rorb
movsl
xlat
and
mov
lret
xchg
cwtl
add
stos
les
testb
sbb
jmp
dec
or
and
fsubr
fdivrl
lret
incb
sbb
inc
daa
pop
mov
cmc
outsl
test
adc
dec
daa
mov
or
in
pop
movsl
sbb
pusha
pop
pop
imul
sub
adc
add
push
call
out
or
cmc
sub
or
ja
pop
mov
push
daa
lock
push
xchg
arpl
pusha
sbb
dec
xchg
stc
mov
and
push
dec
pop
and
dec
sub
jg
add
movsb
sub
mov
add
dec
data16
push
pop
sub
mov
cltd
dec
jbe
mov
adc
inc
dec
pushf
mov
xor
xor
sarb
adc
push
push
push
mov
inc
adc
pop
add
pop
pop
push
push
inc
mov
pop
xlat
push
mov
jle
jl
pop
cmp
test
fadd
inc
adc
or
outsl
push
ss
or
push
add
dec
imull
loope
hlt
shll
js
cmpb
jmp
pop
and
inc
sub
hlt
mov
movsl
add
inc
jmp
cmp
sbb
and
insl
stc
insl
out
movsl
adc
push
cs
out
subl
mov
std
movsb
inc
push
fmuls
aam
sarl
loop
or
or
test
sti
daa
and
mov
or
adc
lds
pop
insb
daa
push
data16
and
addr16
pop
jne
cmp
lods
mov
cli
test
test
or
mov
in
inc
movsb
xchg
sub
push
push
lock
out
pop
adc
and
cld
sbbl
shrl
mov
clc
lods
sub
inc
loopne
aam
xchg
xchg
pusha
cmpsl
inc
out
push
mov
or
dec
lret
lods
jl
repz
mov
inc
and
or
icebp
outsl
mov
and
xor
in
sbb
push
mov
out
add
lcall
push
inc
and
in
jbe
jecxz
ja
cli
adc
mov
pop
add
ss
subb
sti
popa
inc
add
sbbl
sbb
lret
push
xor
xchg
adcl
pop
popf
pop
push
xchg
mov
mov
pop
push
push
hlt
add
movsl
mov
xchg
jg
rcrl
push
xchg
not
rorb
test
inc
mov
leave
add
push
lds
inc
out
sbb
popf
repz
rorl
lahf
pushf
ret
mov
mov
sub
icebp
or
fyl2x
mov
cmp
loop
ret
fbld
pop
outsb
clc
out
in
sub
insl
sbb
jg
rolb
in
add
aam
mov
jno
mov
push
and
pop
pop
mov
sbb
dec
xor
ror
and
cli
inc
sti
jmp
sbbb
sti
add
inc
jmp
leave
inc
aaa
add
call
stos
mov
adc
sti
inc
pop
pop
adc
pop
dec
fimuls
out
jnp
or
ja
sub
adc
lock
sbb
sub
inc
mov
sub
adc
std
cwtl
test
fstps
sub
jnp
adc
xchg
add
inc
push
push
mov
mov
loope
xchg
shr
js
jle
pop
mov
or
push
mov
loopne
into
or
jmp
notb
sbb
push
das
call
fsubs
jns
mov
sbb
sti
pusha
js
or
pop
xchg
inc
jmp
sahf
push
xchg
cmp
pop
addw
in
jge
jp
pop
mov
rcrl
ret
jnp
ret
or
lret
stos
in
mov
mov
ljmp
xor
fiadds
mov
mov
out
in
das
push
pop
movsb
inc
shl
mov
iret
or
or
cli
add
pop
negl
bound
stc
add
sbb
add
xchg
or
sub
fadds
mov
push
aad
push
mov
call
adc
add
push
fsubrl
rcr
es
push
mov
jb
lret
pop
popf
rorl
cwtl
xchg
addl
push
pusha
repnz
push
xchg
sub
xchg
push
sub
push
mov
mov
dec
xchg
dec
jae
jmp
insb
add
cmp
mov
jmp
pop
pop
das
mov
jmp
mov
pop
and
jnp
sub
jbe
push
jmp
pop
pusha
jecxz
in
jl
and
inc
dec
push
jg
jp
imul
stos
and
sub
mov
or
and
pop
shrl
push
or
xchg
cmc
mov
cmpsl
or
pop
loop
ja
cmp
mov
aas
mov
out
mov
stos
dec
stc
and
sti
adc
imul
out
sub
clc
jmp
insl
pop
mov
or
sbb
fsubrl
mov
mov
insb
xchg
mov
data16
dec
imul
add
dec
and
pop
std
in
xchg
adc
push
push
mov
inc
adc
cmc
pop
pop
sbb
in
jns
in
bound
and
pop
cmp
jae
dec
data16
pop
cmp
mov
mov
adc
lret
adcb
shl
push
pop
and
rcrl
es
ror
arpl
add
icebp
mov
repz
or
int3
fdivs
popf
mov
sub
adc
dec
push
or
inc
sbbl
popf
js
add
sbb
outsl
or
inc
add
and
js
mov
cmp
jp
add
adc
mov
sbb
popa
pop
xchg
fsubp
mov
push
inc
or
push
arpl
test
or
push
lcall
gs
mov
jmp
mov
mov
mov
adc
xchg
incb
scas
imul
or
inc
add
sub
enter
xor
repnz
and
shlb
adc
repnz
mov
das
lock
addb
or
mov
shlb
daa
push
fstpt
into
mov
shlb
inc
into
mov
mov
sar
icebp
inc
scas
mov
jmp
add
loopne
nop
mov
sub
jl
mov
out
adc
adc
pop
sahf
leave
ds
adcb
ja
jle
call
pop
imul
pop
mov
xchg
int3
pop
mov
add
dec
and
or
push
adc
mov
int3
daa
adc
aas
mov
push
cmp
dec
cwtl
movsl
pop
and
pop
cmp
pop
mov
sbbl
or
das
mov
or
xchg
paddsb
shll
call
push
sbb
push
stc
in
mov
enter
aaa
dec
mov
jmp
gs
nop
ss
bound
in
push
sub
mov
mov
xchg
add
mov
outsl
xorb
sub
cli
pop
mov
lock
and
jmp
inc
or
mov
mov
test
jmp
aas
push
enter
pop
push
clc
cli
add
jmp
push
push
inc
cmp
sbbl
in
xchg
test
push
mov
jecxz
insb
jmp
push
mov
subb
xchg
push
or
into
or
pop
negb
out
lahf
pop
mov
pop
sub
push
lahf
clc
cmc
or
pop
add
enter
or
xchg
jmp
sbb
cmc
or
jae
jno
mov
jmp
out
pusha
xor
das
aas
inc
iret
jo
sub
or
sub
pushf
bound
loop
clc
sub
inc
mov
test
jg
pusha
sbbb
ja
jo
loope
outsl
jb
add
xchg
and
adc
into
inc
sub
and
and
lods
shl
inc
fstpl
sbb
cmp
orl
xchg
iret
push
icebp
jbe
rclb
or
and
ficoml
test
push
push
xorb
es
jle
mov
filds
cli
ja
add
insb
incb
jg
adc
jne
daa
mov
pop
mov
mov
movsl
xchg
repnz
mov
pop
sub
and
jl
testb
mov
jne
pop
push
hlt
or
xchg
stc
dec
sbb
pop
aam
bound
shr
or
arpl
pop
lahf
nop
sbb
push
sbb
pop
add
aaa
add
and
xor
sub
daa
pop
pusha
sub
int
ds
mov
mov
rcl
sbbl
bound
add
inc
inc
fbld
xchg
andb
jmp
adcb
push
in
sbb
idivb
sub
ficomps
jnp
or
test
or
add
ja
mov
mov
and
daa
outsb
fsubrs
or
cmp
rorb
js
in
testb
add
mov
push
or
adc
push
testl
pop
int3
mov
xor
adc
add
testl
test
xor
push
ljmp
pop
push
jle
pop
push
mov
or
add
loopne
fisubl
repnz
pop
pop
cmp
push
enter
hlt
aaa
jb
outsl
xor
shrl
jge
mov
jmp
cs
rclb
mov
insb
aad
mov
orb
cmp
push
mov
bound
and
and
movsb
xchg
int3
jmp
push
and
or
syscall
mov
loope
jb
inc
in
xor
jmp
push
adc
iret
fwait
lods
shlb
cmp
adc
add
mov
lret
enter
pusha
mov
out
ja
enter
iret
mov
stos
ret
adc
jb
mov
and
push
jmp
insb
out
pop
mov
mov
cwtl
popf
push
sbb
pop
dec
inc
mov
or
sbb
push
enter
das
scas
mov
dec
stos
push
add
inc
fimuls
test
jge
or
add
adc
andb
shrb
pop
cwtl
popa
call
xchg
nop
scas
push
cmp
fs
jge
mov
xor
mov
sub
push
stos
aam
add
jmp
mov
and
in
pushl
rclb
xchg
and
mov
push
outsl
insl
mov
shlb
cmp
sarl
dec
xor
pushf
or
repz
inc
or
stc
push
pop
xchg
add
inc
xor
in
mov
dec
jne
add
mov
mov
sbb
xchg
out
pminsw
add
aad
daa
or
hlt
add
lock
xchg
and
or
jno
andl
xchg
inc
dec
or
gs
mov
mov
push
adc
outsb
outsl
ror
ret
in
ret
mov
int3
enter
pop
dec
addb
not
scas
mov
pop
jmp
lods
fists
jge
pop
stc
pop
in
sarl
pusha
sbb
xlat
lret
bnd
pop
inc
in
xchg
or
dec
sbbb
push
test
cli
andl
sbb
loope
adc
or
not
dec
inc
shr
add
aad
inc
dec
loopne
loopne
pop
mov
add
idiv
mov
push
daa
push
subw
jle
iret
stc
xor
xorl
mov
ljmp
jo
clc
mov
lahf
xor
mov
pop
lds
mov
dec
xor
clc
rcrl
fsts
cmp
and
sub
repnz
addb
pop
xchg
xor
jbe
jb
or
dec
daa
enter
mov
or
popa
notl
out
add
out
test
test
xchg
cmp
or
jmp
push
mov
imul
imulb
add
jmp
xchg
out
xchg
mov
es
push
lock
xchg
fcomps
icebp
xchg
push
pop
pop
nop
inc
dec
push
rcl
loop
lret
and
xor
mov
imul
pop
add
test
jmp
and
add
mov
dec
xor
inc
ljmp
push
add
int
inc
or
push
ljmp
loope
out
push
jmp
inc
fistl
shl
cmp
stc
int3
in
les
int3
je
sub
test
jmp
push
fidivl
pop
dec
xor
dec
add
roll
add
or
not
and
popa
add
xor
rorb
add
jmp
lock
adc
xchg
inc
jnp
out
das
dec
mov
and
pop
test
inc
or
clc
pop
lret
push
sub
out
movsl
es
sbbb
mov
sbb
lea
xor
movl
add
dec
inc
xor
mov
push
add
mov
ja
mov
adc
push
mov
jns
inc
out
les
shlb
or
aad
iret
popf
fcoml
ret
pop
push
shrb
inc
test
push
sbb
int
cwtl
pusha
xchg
lcall
mov
test
test
sub
cmp
xchg
inc
in
sub
insl
sarb
add
push
mov
fsubp
fdivl
inc
or
in
cld
sbb
sub
clc
clc
pop
dec
mov
stos
inc
dec
test
std
les
ja
and
loopne
xchg
cmp
incb
jno
xchg
or
sti
mov
lcall
in
xlat
sbb
dec
daa
out
pop
pop
lods
pusha
fbstp
push
jmp
xor
out
inc
out
jg
adc
sbb
jl
jmp
mov
stc
add
push
add
xchg
rorl
sbb
mov
out
pop
daa
xor
and
inc
mov
test
subb
xchg
add
out
in
and
fldenv
pop
add
rol
adc
push
mov
cld
xchg
jb
dec
icebp
stc
out
xchg
jns
loop
mov
mov
add
xchg
or
out
or
cmp
or
and
sbb
ret
jmp
out
push
or
lock
lds
loop
dec
xor
subl
mov
cmp
push
add
jmp
mov
scas
push
repnz
stc
loopne
jnp
dec
push
clc
jae
sub
jl
add
and
adc
push
mov
push
push
xchg
fsubrs
lahf
lahf
or
fucomip
popf
test
daa
movsb
clc
sub
adc
gs
xchg
and
sbb
dec
cmc
test
adc
dec
inc
addr16
mov
movsb
adc
int3
decl
sub
icebp
adc
push
in
and
cmc
das
jne
out
popa
shl
jo
sub
and
clc
pop
aaa
xchg
jg
add
mov
test
pop
stc
lock
adc
movsb
dec
aad
stc
jmp
fwait
mov
dec
loop
push
sub
xor
pop
jmp
movsl
xor
add
std
movsl
test
or
fisttpl
dec
dec
pushf
jbe
xor
mov
out
pop
mov
sub
std
jmp
lea
jno
jmp
xor
cmp
mov
test
loope
sub
scas
lods
fdivrs
pop
leave
add
dec
pop
inc
pop
loop
mov
out
cmp
add
add
popa
inc
scas
mov
jp
push
lahf
add
adc
int
or
cmp
add
repz
sbb
mov
scas
daa
and
inc
jecxz
jp
aaa
push
or
pop
push
sbb
dec
aaa
in
incl
in
and
lcall
push
push
fidivs
int
or
adc
or
xor
femms
mov
xchg
inc
inc
dec
push
loop
add
pop
movsb
jge
add
xor
add
cwtl
jne
imul
hlt
movsb
xchg
jmp
push
sub
fsubrs
mov
sub
pushf
outsb
xor
dec
in
das
xor
mov
fimuls
or
mov
pop
or
aaa
mov
add
dec
pop
imul
add
sub
add
aas
adc
jne
jl
not
jmp
adc
sbb
hlt
jge
push
add
iret
pop
pop
repz
sbb
mov
push
jno
stc
add
cli
adc
xor
sub
mov
jmp
notb
sti
mov
push
jns
dec
pop
xor
ret
or
jle
sti
repnz
and
js
pop
jb
adc
adc
movsl
decb
pop
inc
in
push
fdivr
les
xchg
aaa
sbb
cmp
in
arpl
xchg
sbb
mov
lods
loop
pop
gs
cmpsl
pop
inc
jp
mov
adc
cwtl
sub
add
inc
mov
xorl
or
jl
lgdtl
or
pop
pop
lods
push
jno
sub
cmp
adc
jae
or
pop
inc
dec
loopne
jmp
sub
outsb
and
dec
push
or
mul
leave
fwait
ret
pop
pop
cmp
stc
scas
imul
inc
sub
out
fstpl
pop
cmpsl
mov
in
fnstsw
xor
nop
sub
add
push
xor
pop
aaa
xor
in
and
xchg
out
shr
push
push
sub
cmp
add
aad
int
in
xlat
add
jmp
clc
jl
into
or
es
adc
add
call
fs
lock
jecxz
mov
push
lret
push
je
or
jo
mov
xor
idivb
adc
jecxz
out
shr
adc
lcall
and
dec
add
xor
lahf
lock
sti
cmp
push
out
rolb
push
dec
dec
mov
adc
add
mov
fiadds
cltd
lds
mov
xor
mov
movsl
inc
inc
push
mov
hlt
lret
pop
pop
inc
dec
movsb
inc
std
iret
pop
negb
ljmp
inc
fwait
pop
jmp
jecxz
not
outsl
pminsw
rcl
push
lret
and
mov
push
leave
bound
dec
sub
mov
subb
rcl
andb
pop
ror
xor
mov
out
repz
and
out
mov
shl
loop
add
and
mov
sub
cmc
add
addb
scas
xor
cmp
idiv
or
je
cmp
out
aad
mov
jle
subb
fwait
std
iret
jmp
push
clc
sub
loope
lds
and
push
rep
popa
cmp
out
or
sub
mov
cmp
add
add
sbbl
add
pusha
sbb
or
popa
rcrl
sub
adc
or
gs
or
sub
xchg
cmp
push
lds
sub
andb
pop
in
popa
stos
xchg
or
ret
pop
js
dec
pop
add
xchg
add
cld
clc
jb
add
sbb
pop
mov
add
cmp
push
mov
es
aas
addb
js
jo
push
jecxz
dec
mov
or
cmp
scas
shlb
push
push
ret
push
jbe
dec
imul
mov
out
dec
or
pop
inc
les
loop
xor
dec
or
pop
inc
inc
sbb
repnz
add
ljmp
pop
inc
jle
sub
xlat
xchg
or
or
mov
or
clc
push
inc
mov
cmp
adc
sub
pop
pop
sub
les
jmp
cld
xchg
push
mov
mov
mov
pop
dec
mov
daa
iret
add
cmc
bnd
enter
dec
cwtl
inc
sub
sub
push
or
dec
adc
pop
mov
inc
mov
sbb
repnz
or
test
push
inc
test
in
and
stos
push
lahf
jno
xchg
cltd
clc
or
cmp
pop
xchg
hlt
mov
pop
xor
jmp
ret
mov
xor
push
sar
pop
sarb
add
inc
xor
add
in
mov
pop
lock
xor
adc
call
out
jo
or
dec
jge
push
mov
mov
or
movsl
sub
pop
and
or
cmpsl
std
fadds
push
add
neg
js
add
xorb
inc
lret
pop
push
sbb
jae
and
inc
sahf
loop
add
pop
subb
and
lret
push
or
or
aas
and
and
add
or
pop
push
pop
sbb
pop
mov
xchg
mov
mov
loopne
xor
inc
sbb
push
jmp
mov
dec
sti
ret
push
repz
push
sub
int3
clc
cmpsl
inc
jo
ljmp
xchg
add
mull
lds
loop
pop
xchg
rcll
jmp
or
and
mov
out
push
add
add
mov
mov
xor
mov
ret
or
or
xor
jmp
lret
add
add
add
add
fmull
test
and
in
push
and
and
and
xor
int3
push
or
add
sbb
lret
jno
int
sub
sub
rol
adc
xchg
push
push
fwait
or
xor
xor
xor
push
pushf
out
add
inc
adc
insl
mov
lods
mov
mov
or
gs
push
adc
stos
js
ljmp
dec
inc
mov
les
and
push
in
cmp
mov
jecxz
mov
or
xchg
testb
inc
scas
pop
lds
add
adc
jge
push
insb
sub
jae
push
ret
fcompl
gs
inc
leave
adc
mov
movsb
add
sbb
pop
icebp
sbb
fmulp
stc
adc
mov
popa
jecxz
or
roll
sub
dec
iret
popa
sub
and
ljmp
iret
and
sbb
push
inc
shrb
and
or
adc
mov
add
add
inc
add
add
in
mov
xchg
push
sub
pusha
ror
rcl
sbb
inc
repz
jecxz
cltd
stc
sbb
mov
inc
loopne
inc
test
add
mov
lods
jl
mov
repnz
es
clc
pop
icebp
stos
in
lret
ret
mov
or
std
adc
leave
mov
test
cmpsl
notl
sub
adc
adc
cvtpi2ps
mov
jbe
xor
call
lock
lods
adcb
jo
fcoms
sbb
xor
adc
add
add
add
and
push
jg
addr16
cli
adc
cld
call
sub
mov
sbb
subb
jne
jmp
mov
call
leave
jne
daa
mov
fiadds
dec
lock
orb
dec
xor
sub
add
xchg
xchg
fdivl
xor
xlat
mov
push
or
call
roll
push
jmp
inc
sub
push
jo
fidivs
icebp
add
jmp
push
pop
stos
nop
mov
xor
mov
inc
xchg
mov
insb
out
mov
mov
outsb
jmp
movsl
lea
cwtl
or
jecxz
pop
mov
jl
xor
sbb
adc
adc
push
mov
adc
dec
mov
mov
int
push
jp
or
in
and
lea
ret
xchg
adc
enter
mov
mov
pusha
data16
adc
jne
mov
test
out
aas
out
enter
push
xchg
das
mov
decb
push
adcb
cmpl
and
repnz
dec
xchg
pusha
mov
dec
adc
adc
orb
icebp
cmp
push
cld
lahf
and
push
or
cmp
roll
inc
mov
and
push
ds
ss
cmp
adc
int3
pop
mov
fsts
enter
push
fsubl
pop
cld
cld
stc
push
sub
pop
xor
call
iret
add
test
mov
shrb
jno
inc
sbb
jmp
imul
adc
mov
push
mov
in
hlt
test
cwtl
jb
dec
ss
cmp
jmp
not
push
mov
sbb
repnz
aad
mov
in
pusha
negb
mov
out
pop
jne
fildll
nop
ret
idivl
nop
or
mov
mov
adc
pop
shrl
ja
mov
adc
idivl
into
clc
jbe
xor
cmp
test
xchg
lret
in
xlat
shr
xor
sub
sub
inc
xchg
push
add
mov
add
stos
movsb
push
adc
mov
scas
jge
sub
jo
pop
idivb
jo
loop
push
or
jmp
cmp
aaa
ja
stos
xor
dec
sbb
xchg
mov
mov
inc
inc
cmpsl
and
mov
out
mov
push
mov
sub
jmp
ljmp
mov
jns
xchg
xor
pop
mov
mov
sbb
sti
incl
pop
xor
push
xor
and
popf
lret
cmp
xchg
jp
mov
test
enter
lods
cmp
les
add
sti
les
insl
sub
loope
stos
outsb
loope
ja
and
jns
das
mov
sbb
scas
push
es
xor
add
mov
jecxz
roll
sub
jb
or
popa
push
jns
sbbb
mov
out
sbb
lret
pop
out
fists
je
fwait
xchg
pushf
mov
inc
sarl
imul
adcb
add
dec
sub
rclb
inc
call
xchg
add
lret
xchg
add
push
xchg
jb
mov
or
add
outsl
add
xchg
pop
enter
daa
pushf
dec
cwtl
leave
stos
xor
push
clc
jns
pusha
jb
xor
pop
mov
xchg
push
xchg
in
xor
flds
int
cmp
or
jmp
and
or
sub
icebp
pop
cmpb
cmp
pop
mov
xlat
in
pushf
add
rol
inc
gs
test
outsl
mov
std
jmp
outsb
daa
or
mov
push
mov
mull
mov
push
mov
or
test
mov
movsb
mov
rcrl
and
lock
jecxz
xchg
iret
add
neg
xor
rorl
adc
shlb
fdivl
sub
or
stos
pop
fstl
fistps
mov
das
jne
inc
aad
and
das
and
add
sub
aad
xlat
and
cmp
add
sbb
popf
arpl
out
dec
in
jge
push
insb
and
pop
cs
push
enter
cmp
jmp
out
gs
pop
mov
daa
inc
add
jnp
xchg
xlat
and
test
incb
jmp
movsb
pop
jg
test
sahf
sbb
dec
inc
mov
add
add
mov
and
sub
push
icebp
or
sets
loop
mov
lcall
std
sub
aam
dec
sahf
js
sahf
cltd
push
push
fucomip
adc
cltd
dec
sub
sub
adc
push
jmp
jge
and
jecxz
insl
loopne
jne
out
adc
fists
push
add
aas
test
jmp
movsb
mov
loopne
sbb
cmp
add
jmp
sahf
push
mov
fbstp
movsb
and
jl
cmpsl
cmp
pusha
inc
jg
push
dec
jmp
inc
jl
sub
sub
inc
imul
fldl
pop
clc
subb
jo
xor
xor
push
push
rorl
mov
push
jp
xchg
and
cld
xchg
ljmp
or
rorb
mov
xor
adc
ljmp
jmp
lds
cmp
rclb
mov
xchg
push
das
mov
push
sub
xchg
call
les
lods
adc
inc
cmp
and
jb
out
or
jae
or
fidivs
out
jg
fldt
pop
cmc
arpl
add
iret
outsb
push
stos
fildll
pop
jmp
cwtl
aaa
das
inc
loope
stos
and
sbb
movsl
repnz
dec
test
jne
jmp
fidivs
add
mov
xchg
pop
mov
ret
test
add
xorb
loope
add
dec
mov
dec
and
jmp
test
repz
inc
inc
xchg
clc
pop
pop
cltd
leave
aad
cwtl
push
push
jmp
xchg
jno
push
jmp
mov
jmp
push
add
or
inc
cmp
or
sub
fcomps
call
xor
sbb
add
adcl
push
sarl
leave
add
aaa
test
jg
mov
inc
cs
dec
or
cld
xchg
repz
popa
jmp
pop
mov
pop
inc
idivb
shrl
xchg
stos
add
jmp
mov
add
push
mov
pop
sub
andb
pop
pop
pusha
mov
cmp
cmp
lahf
push
push
popa
or
addr16
jp
jbe
pop
sub
jmp
out
and
or
adc
cmc
pop
adc
pop
jmp
jne
clc
loopne
outsb
pop
pop
cmp
jmp
pushf
shrb
ljmp
and
cmp
pop
or
inc
in
loop
test
and
add
xchg
and
add
lock
add
cmp
jle
repnz
cmp
lods
call
jo
mov
fs
sahf
sub
add
mov
push
add
insb
dec
cmpsb
jns
adc
mov
pushf
js
popf
jp
jle
mov
js
imul
pop
int3
pusha
adc
push
or
push
pop
cmp
or
lahf
add
call
sbb
pop
mov
xchg
fwait
mov
push
mov
neg
cmc
pop
mov
enter
inc
push
mov
fisubrs
and
sub
and
sub
lret
arpl
das
outsl
dec
testb
pop
movsb
movsl
lcall
decl
fsubrs
fstpl
sbb
lock
imul
test
mov
push
push
or
int3
jmp
aad
mov
mov
pop
push
cmp
enter
orl
fiadds
cli
stc
xchg
pop
jecxz
sub
push
sbb
inc
xchg
aad
or
xlat
xor
mov
lret
cmp
add
repnz
ret
adc
ljmp
fldenv
mov
addl
jmp
loop
add
xor
adc
out
xor
int
loope,pt
fmull
or
out
adc
or
cmp
test
repnz
sub
aas
in
sahf
pusha
add
jbe
cmc
addl
leave
stc
or
imul
iret
and
aad
movl
lret
jno
or
xchg
inc
cmpsb
or
fst
in
pop
add
jp
adc
ret
xor
test
pop
push
jmp
pushf
mov
cld
stc
jns
ds
fistl
sti
movsl
lcall
cmp
add
or
bound
je
pop
ret
lret
jo
bnd
mov
subb
push
sbb
lret
or
js
push
push
adc
ds
int3
test
lods
pop
or
jg
push
jmp
shr
xor
inc
or
and
adc
pop
lods
hlt
inc
or
les
jmp
subl
adc
inc
fsubs
pushf
and
movb
and
imul
or
inc
popa
ja
outsl
test
add
mov
mov
inc
or
repz
cltd
aas
pop
js
xchg
iret
or
fldenv
js
xor
pop
lds
adc
adc
sarb
cmp
and
cli
rclb
mov
add
xchg
pop
pop
sub
jl
pop
icebp
pop
dec
add
sarl
dec
cmp
push
dec
and
je
js
xchg
test
pop
mov
mov
jbe
push
inc
shll
out
pop
fucomip
pop
mov
lahf
dec
add
add
mov
test
fisttpl
stos
push
lock
nop
lcall
stos
jge
jo
mov
pop
mov
scas
leave
pop
jb
popa
dec
cmp
xor
call
in
inc
addl
notb
aad
xchg
daa
mov
imul
pop
fwait
sub
jne
add
push
xor
in
push
mov
bound
aas
xchg
inc
mov
test
adc
insl
jmp
inc
xor
sarb
inc
arpl
and
and
cs
jbe
test
xor
push
in
push
xor
add
xchg
cmp
cli
lds
leave
dec
sbbb
or
sub
xor
inc
fimuls
push
jmp
jmp
loope
je
xor
pop
add
jnp
dec
out
ja
pusha
sbb
adc
rorl
ss
or
leave
add
pop
fimuls
pop
mov
dec
mov
imul
mov
test
adc
lock
ret
rcll
push
push
jmp
mov
rolb
std
xor
mov
push
gs
adc
cltd
and
scas
xlat
mov
pop
jmp
mov
push
in
repz
add
imul
inc
adc
jns
testb
lock
add
inc
xor
push
inc
nop
push
or
in
cmp
in
and
jmp
shrl
mov
and
lods
aaa
sbb
stc
inc
mov
adc
addr16
mov
sbb
lret
shlb
test
rcr
or
aam
add
pop
repnz
sarb
xchg
push
push
or
or
adc
and
adc
add
and
jmp
stos
add
repnz
xor
dec
or
jns
pusha
push
push
push
mov
inc
mov
icebp
adc
add
pop
imul
xchg
pop
xor
das
jmp
or
xchg
stos
xor
rcrl
pop
xchg
push
push
pop
pop
mov
imul
popa
std
adcb
sub
mov
dec
pop
jmp
pop
cmp
std
and
in
into
pop
cmp
jo
add
ja
pop
aaa
arpl
or
idiv
fcomps
in
popa
jg
inc
or
pop
scas
ss
sbb
or
inc
xor
fsubrl
add
inc
enter
pop
aad
jae
inc
stos
loopne
testb
xchg
add
dec
in
outsb
mov
add
mov
decb
cld
pusha
aam
pusha
xchg
outsl
pop
das
xchg
in
sub
jnp
sahf
push
sub
push
mov
mov
lea
and
dec
push
insl
fistl
imul
add
xor
out
push
and
dec
push
test
lods
xor
mov
cmpsb
sub
in
adc
sub
push
call
cmp
dec
stos
lret
aas
push
inc
and
repz
adc
jl
imul
js
aam
dec
dec
dec
or
push
pusha
jo
arpl
cmc
xor
sub
push
or
inc
mov
jmp
icebp
jmp
pop
imul
decb
leave
push
shl
pushf
aam
lret
lea
fsubrp
add
sbbl
xor
int
daa
out
adc
mov
jno
data16
jmp
jmp
and
push
cld
or
adc
fnsave
neg
add
xor
dec
adc
push
or
jmp
xlat
movsb
xchg
inc
scas
jl
mov
out
lret
pop
push
fsts
addr16
sub
pop
and
xchg
push
jne
sbb
pop
xor
mov
ja
jb
or
cmp
push
inc
loope
loopne
jbe
xchg
xchg
int3
or
inc
mov
push
adc
bsr
and
and
int3
adc
push
pop
fwait
and
pusha
dec
movsl
jbe
call
xlat
insb
aas
pop
shl
adcb
inc
aam
push
push
and
mov
loopne
pop
popf
ret
je
repnz
ja
xchg
mov
hlt
jne
mov
and
add
push
adc
orb
out
xchg
mov
push
or
xchg
or
or
jmp
aam
daa
sti
push
aaa
mov
fld
cmp
daa
jne
jge
and
aad
jl
dec
fmull
leave
push
xlat
in
and
out
mov
scas
into
repz
scas
mov
inc
adc
ds
sub
adc
or
dec
cmp
xchg
push
mov
mov
aaa
or
mov
jl
lods
lret
aas
lods
shll
addb
jnp
adc
out
dec
ja
or
mov
test
lock
loope
jmp
outsb
pop
add
add
cmp
lea
xor
rcrl
stos
sub
pusha
sahf
in
lea
js
sub
or
lahf
push
xor
mov
loope
or
push
adc
mov
or
adc
push
add
daa
js,pt
sub
imul
pop
in
adc
loop
mov
scas
repnz
ja
dec
fwait
push
jecxz
fnstenv
test
lds
test
or
cmc
add
jmp
psrlq
pop
shlb
jge
dec
adc
dec
jne
xor
dec
loopne
jno
jb
push
jne,pt
or
push
addb
mov
sub
sub
je
clc
pop
in
enter
addb
push
mov
shl
clc
ljmp
xchg
pop
dec
or
jns
add
mov
popf
mov
jne
add
push
cwtl
or
fwait
jmp
jno
movb
arpl
mov
jmp
mov
sub
leave
and
jae
mov
sub
xor
sub
add
hlt
push
pop
dec
pusha
leave
push
push
add
not
or
cmpsl
push
push
mov
or
push
fisttpl
inc
xchg
adc
sbb
lret
add
jno
in
sbb
cmp
adcb
pop
out
xor
pop
and
movsl
shrl
jo
loope
sti
decl
push
je
std
in
dec
or
adc
pop
lcall
cwtl
lods
nop
add
divl
aam
data16
push
add
push
fcoms
pop
call
out
pop
mov
jp
lods
pop
popa
movl
in
mov
xchg
js
rcll
or
int3
loope
sub
pop
lret
xorps
xchg
mov
daa
jle
sub
and
arpl
shl
mov
ss
pusha
scas
punpckhbw
mov
pop
push
scas
add
in
in
jmp
into
xchg
mov
aaa
inc
push
mov
sub
cmp
or
ret
hlt
sub
pop
xor
cli
xor
add
mov
sub
mov
sbb
jnp
sarb
or
sarb
ret
push
jmp
pop
out
fnstsw
inc
std
pop
mov
xchg
sbb
inc
push
dec
jp
xchg
clc
jmp
jp
jl
mov
das
add
out
mov
or
leave
push
adc
rcrb
jecxz
rcrl
dec
and
push
pop
jmp
and
pop
jne
lock
mov
and
jmp
ret
cltd
pop
rorb
dec
addb
neg
loopne
test
sub
push
or
sub
dec
int3
dec
add
into
cld
mov
sub
inc
mov
push
xchg
add
rcrb
jno
repz
pop
mov
loopne
jge
jl
xor
call
add
add
mov
pusha
sub
or
add
jns
pop
pusha
nop
dec
ret
mov
fbld
cmp
sti
idiv
inc
adc
stos
mov
add
pop
xor
jp
fucom
in
inc
sti
jb
repnz
jmp
add
push
int
add
jbe
pop
sub
sbb
jmp
data16
out
nop
dec
jb
lods
call
sub
cmp
jecxz
ljmp
sarb
test
xchg
xchg
cmc
jne
pop
shll
insl
sub
pushf
sub
cmp
inc
or
movsb
pop
mov
jl
or
xchg
mov
pop
aam
sbb
fsubs
stc
adc
sbb
imul
mov
mov
add
push
or
mov
insl
popa
das
pop
or
iret
bound
imul
dec
mov
fldcw
sbb
sub
jo
clc
arpl
mov
push
fisttpll
sub
lret
add
push
xor
iret
jp
cmp
xchg
xchg
xlat
or
les
lock
imul
sarb
add
test
adc
cmovne
dec
jno
add
jmp
cmpl
cld
sub
enter
jp
xor
js
sbb
loop
push
adc
popa
in
push
mov
fs
jg
pop
add
popa
inc
sbb
jmp
nop
dec
pop
xchg
rorl
outsb
pop
mov
sbb
push
push
push
cmp
lods
mov
movsb
jl
dec
dec
imul
dec
in
scas
aam
bound
or
pop
pop
mov
mov
or
rolb
and
cmp
js
out
sub
pop
dec
out
aas
xor
in
insl
adc
mov
lods
sbb
push
mov
stos
dec
es
jns
sub
adc
scas
fstps
sub
sub
inc
jg
push
pop
or
inc
lock
jg
or
mov
sbb
pop
push
or
jmp
or
mov
test
dec
add
inc
in
push
mov
jmp
enter
mov
aam
arpl
dec
fiaddl
fildl
cmp
and
repz
shr
or
pop
push
cmp
xorb
jl
call
push
ffreep
push
addb
imul
daa
sbb
inc
pop
mov
dec
or
aad
loopne
repz
rcll
outsb
pusha
mov
fsubs
cwtl
test
sbb
jle
andl
mov
add
xor
xchg
sub
fisubl
iret
push
add
das
or
push
mov
out
dec
pop
aam
mov
jmp
adc
or
shl
push
mov
test
mov
mov
lea
pusha
jg
cli
inc
pop
outsb
jl
dec
aaa
pop
mov
int
sbb
or
subb
fwait
pusha
clc
ljmp
inc
mov
inc
jl
rcrb
push
pop
jmp
push
sti
adc
test
out
adc
sub
filds
mov
std
adc
inc
sub
sbb
inc
push
sub
push
data16
or
inc
mov
popa
sub
and
fcmovnbe
mov
call
jmp
fs
jb
push
mov
adc
mov
cmpsb
movsl
sbb
imul
dec
xor
mov
adc
push
or
or
adc
dec
mov
ret
dec
sub
stos
lock
or
add
pop
inc
push
out
sub
stc
and
lret
mov
test
jmp
jno
mov
or
push
or
xor
and
cmp
sub
cli
sub
and
pop
mov
xor
push
sub
xchg
bound
sub
add
js
out
fwait
out
mov
xchg
in
negb
adc
dec
mov
mov
inc
imull
cmp
popf
cmp
fsubrp
adc
fnsave
dec
xchg
push
jl
push
inc
popa
sbb
mov
pop
mov
or
inc
xor
add
xchg
sbb
sub
loop
and
jmp
test
sbb
jle
adcb
inc
fsubrp
sub
push
mov
sub
mov
andb
notl
inc
das
push
or
xchg
xlat
sbb
jp
add
and
call
dec
mov
shll
mov
fsubl
iret
or
or
outsb
push
mov
mov
inc
dec
mov
and
cli
add
fists
mov
pop
sub
add
jmp
jae
pushf
or
mov
lret
loope
in
push
movsl
mov
add
adc
xchg
test
inc
sbb
mov
cmc
xchg
adc
sbb
pop
mov
rcrl
lods
and
mov
mov
sbb
jl
bound
dec
les
call
sub
adc
or
pop
xchg
mov
jge
rolb
add
mov
jbe
shr
push
mov
in
pop
xchg
lods
mov
les
dec
fisubl
ds
and
xorb
xor
jmp
pop
nop
sbb
sub
push
add
je
push
js
addb
add
js
xor
clc
or
fmull
ret
pop
pop
scas
jl
sbb
or
ret
dec
sbbl
fadds
push
cli
dec
mov
or
inc
fsubp
dec
lock
movsb
mov
stc
fwait
inc
stos
push
jle
jmp
mov
insb
push
mov
iret
push
pushf
and
pop
xor
mov
xchg
pop
jo
cmp
sub
data16
icebp
mov
idivl
pop
loopne
add
incl
adc
add
loope
ret
push
jl
arpl
add
lds
xor
das
dec
daa
xor
sbb
sbb
daa
pop
add
inc
iret
inc
cmpsl
add
incb
mov
stos
mov
ret
mov
outsb
jecxz
cltd
cmpsb
aaa
sub
or
call
shl
imul
fildll
or
and
dec
pop
mov
in
std
imul
xchg
loop
cmp
rorb
jnp
in
mov
mov
xor
std
xor
adc
jno
lods
rcrl
and
add
pop
adc
lcall
xor
fwait
mov
push
fisubl
pop
aad
clc
xor
or
cli
push
mov
adc
frstor
jmp
mov
sub
jnp
adc
leave
inc
push
sub
dec
dec
pop
sub
sbb
lret
xor
int
add
mov
test
int3
cmp
or
test
sti
add
fidivl
sub
hlt
pop
push
push
adc
jmp
pop
out
push
cmpl
test
fldenv
add
add
mov
xor
pop
sbb
push
pop
pop
jl
hlt
dec
xlat
fcomps
bound
pop
dec
call
ja
fsub
fld
mov
mov
insl
add
push
add
jmp
mov
pop
stos
sub
mov
dec
call
ss
mov
pop
popa
ret
dec
data16
xchg
sub
lret
test
and
pop
pop
mov
mov
pushf
ret
xor
or
data16
mull
mov
mov
mov
ror
inc
jmp
add
dec
sahf
xchg
dec
jne
mov
mov
add
sub
stc
pop
hlt
cmpsb
lock
sub
in
or
out
and
dec
inc
std
inc
mov
stos
pop
sbb
sahf
mov
fsubr
and
and
mov
xchg
dec
shll
lahf
insl
in
rcrb
sbb
int
push
pusha
or
sbb
fldenv
lods
push
mov
pop
push
cmp
sub
lahf
es
sbb
test
movb
pop
mov
pop
xor
pop
add
sahf
or
dec
notl
lahf
lds
neg
adc
scas
add
mov
jns,pn
orl
mov
sub
xchg
push
jmp
in
fcomi
jg
mov
push
sub
mov
dec
adc
sub
ret
and
in
xor
ds
pop
push
int3
ret
jmp
subb
xor
enter
mov
push
loope
outsb
nop
imul
push
mov
add
mov
add
adc
and
xchg
sub
and
ret
push
and
test
movsb
mov
jp
jb
cmp
test
pusha
push
movb
push
inc
adc
out
add
mov
shrl
ljmp
push
clc
xor
repz
pusha
in
sahf
push
jmp
lock
mulb
xchg
push
int
sub
cld
mov
push
push
outsl
stc
sub
jecxz
mov
enter
out
shl
xchg
daa
icebp
push
sub
sub
pop
mov
mov
lods
and
es
mov
pop
push
add
imul
aam
jmp
mov
pop
fsubr
xchg
xchg
scas
mov
shrb
mov
clc
push
sub
mov
outsl
dec
pop
ljmp
movsb
sub
add
daa
sbb
jmp
jbe
mov
aad
fwait
jnp
dec
xor
icebp
jmp
int3
ret
sub
decb
cmpsl
aad
and
jo
add
movb
and
jle
loopne
mov
adc
mov
xor
in
sarb
mov
push
dec
cmpb
dec
cmp
mov
push
insl
sbb
stos
ret
adc
sbb
jb
pop
push
fcmovbe
jg
mov
lods
mov
pop
shl
sub
xor
frstor
cmp
inc
daa
push
jo
mov
mov
aas
add
pop
xchg
les
lods
daa
dec
dec
dec
push
mov
cmp
sub
mov
mov
test
push
loope
sub
push
pop
cld
int3
lods
pusha
in
lret
inc
lahf
repz
vaddpd
cmp
jo
inc
ret
add
enter
arpl
ret
push
mov
and
test
rorl
in
fcmovnu
scas
xorb
cmpb
pop
mov
mov
das
sub
fwait
xor
es
dec
shl
inc
movsb
jmp
adc
push
stos
mov
bound
fldl
decl
mov
adcb
ja
cwtl
and
lods
dec
mov
jnp
ja
dec
push
push
sahf
xchg
xchg
jo
cwtl
aaa
xor
lahf
rorl
add
pop
mov
xor
or
adc
or
jmp
dec
mov
insb
add
push
pop
mov
mov
xchg
xchg
out
fisubrs
test
pusha
mov
popl
sti
dec
imul
sbb
aam
les
or
dec
mov
and
adc
and
push
add
call
mov
xchg
xor
jg
inc
sbb
lds
add
test
push
das
xchg
adc
mov
repnz
clc
outsb
adcb
xor
in
jge
lods
cltd
add
sbb
dec
mov
add
sub
mov
lret
addb
and
adc
jg
mov
aaa
cld
out
pusha
gs
mov
push
aaa
shr
pop
adc
jecxz
popf
movsb
xchg
idiv
int
and
mov
jp
add
mov
pusha
dec
bound
cli
inc
mov
ljmp
jle
pop
or
dec
dec
pop
jmp
xchg
push
lret
nop
cwtl
pop
xor
in
negl
dec
and
imul
jl
lods
add
into
gs
arpl
push
push
pop
dec
popa
inc
jmp
jmp
and
stos
or
pop
ljmp
lcall
push
gs
xor
clc
pop
lods
insb
fisubs
dec
mov
ret
jno
pop
pop
adc
mov
push
pusha
dec
jecxz
adc
xchg
pusha
sub
sub
or
lock
out
mov
in
jnp
inc
jmp
dec
outsl
lahf
mov
jmp
jg
push
mov
adc
into
dec
ret
dec
out
mov
testl
js
pop
nop
ret
push
push
xor
adc
or
or
repnz
cmp
mov
or
sub
jmp
jno
push
mov
aad
sti
jno
aas
fwait
sub
pop
xchg
inc
and
jbe
es
jg
mov
jmp
scas
daa
push
xchg
arpl
mov
sub
not
jnp
lock
push
mov
movl
fwait
les
lahf
xor
pop
pop
icebp
sub
cwtl
mov
xor
repz
enter
ret
cltd
enter
cmovp
lahf
or
jb
aaa
scas
and
or
cmp
sub
push
lret
rclb
rclb
dec
out
pop
xchg
push
clc
cmp
pop
inc
add
adc
or
pop
mov
xor
lds
cmp
sbb
cmp
fdivl
stos
mov
stos
or
lock
movsb
pop
lahf
in
in
popl
pop
mov
jmp
sahf
mov
and
into
dec
lods
call
add
popa
xchg
xor
sub
mov
push
cmp
sbb
pop
fisttpll
addl
js
add
sahf
xor
mov
xchg
push
jmp
test
bound
pop
adc
xchg
ljmp
jg
scas
and
mov
pop
pop
stc
fisubrl
mov
std
or
inc
mov
add
jnp
sub
inc
je
add
xor
inc
inc
mov
or
push
sub
leave
jns
cmp
testb
addr16
ja
add
popa
insl
sub
pop
insb
xchg
jne
add
sarb
jmp
fmul
xchg
and
sbb
or
lods
daa
push
rclb
push
jmp
insl
pop
loopne
pop
popa
mov
dec
stc
pop
push
lds
lods
push
jg
cmpsb
int
xor
pop
push
pop
xchg
inc
push
rclb
not
adcl
dec
das
in
dec
xchg
jg
sbb
pop
push
jb
stc
jo
jne
das
or
js
and
pop
int3
push
ljmp
mov
fsubl
in
dec
out
sub
mov
test
nop
dec
sbbb
lock
xor
mov
daa
pushf
out
pop
sahf
jg
dec
or
shll
jmp
popa
add
inc
outsb
inc
neg
inc
xor
xlat
adc
mov
pop
jge
bt
adc
clc
scas
roll
out
cwtl
and
adc
or
jl
lea
or
sbb
cmp
arpl
or
daa
jae
and
jmp
jno
xlat
negl
enter
pop
stos
inc
neg
jnp
sbb
jmp
dec
inc
orb
stos
or
test
jmp
inc
scas
push
sub
out
sahf
jg
dec
cmp
inc
jle
sbb
std
sub
scas
subb
hlt
pop
bound
mov
je
cld
mov
push
mov
sub
ficomps
out
push
test
or
movsb
or
cmp
sbb
pop
outsb
jmp
idivb
insb
rcl
and
dec
jmp
inc
aam
and
das
fbstp
enter
mov
pop
or
test
fwait
pop
scas
xchg
cld
xorl
add
gs
insb
stos
mov
es
int
cli
or
mov
add
int3
es
push
add
fnstcw
pop
movsb
cmp
orb
jge
xor
pop
add
lcall
inc
cmc
sub
loop
sub
mov
fwait
push
pop
and
dec
xchg
rclb
jl
push
rorl
xor
mov
rcr
mov
std
data16
push
jmp
add
fldenv
push
std
inc
and
stc
clc
add
xchg
and
addr16
mov
int3
xchg
jmp
xchg
stc
add
jmp
adc
jg
mov
mov
icebp
push
cli
push
sub
notl
pop
mov
jmp
fists
mov
adc
call
push
inc
popf
ret
or
int3
or
sub
push
dec
data16
add
not
outsl
call
push
pop
in
fucompp
xchg
sbb
jnp
movsb
call
jmp
or
jo
push
mov
and
xlat
push
push
dec
pop
adc
repnz
mov
xor
adc
iret
stos
add
addr16
jno
aam
adc
nop
sbb
or
mov
dec
dec
adc
inc
or
or
shl
je,pn
push
cs
and
pop
out
arpl
push
inc
sub
or
push
push
inc
les
aad
mov
out
cmp
das
push
cmp
in
or
xchg
movsl
dec
adc
imul
adc
pop
movsb
add
adc
pop
inc
push
ds
add
or
and
mov
push
pop
pop
daa
jmp
pop
inc
pop
xchg
out
fcomps
jmp
lods
out
rcrb
push
pop
lret
push
bound
js
sub
clc
stos
push
xchg
xchg
push
push
jne
push
das
or
iret
shlb
pusha
in
pop
jnp
daa
ss
inc
cmp
xchg
mov
push
xorl
cmpsb
hlt
xchg
test
xchg
sahf
stos
sbb
jo
sub
xchg
dec
add
inc
add
jmp
push
mov
in
jne
mov
mov
xor
scas
cmpsl
mov
gs
shr
push
shrl
adc
add
popf
jo
loop
cmpl
jl
inc
daa
mov
aaa
aam
add
nop
enter
andl
fldt
subb
mov
dec
sbb
pop
add
jo
xchg
rcrb
ds
pushf
mov
das
cmc
push
ret
sbb
outsl
sbb
inc
lcall
lods
xchg
cs
push
movsl
xchg
imul
mov
mov
push
jmp
cld
popa
inc
aad
add
jle
mov
fs
sub
test
loopne
pop
push
out
add
mov
pop
shr
adc
inc
sub
ret
jmp
add
sub
inc
ss
jns
fsubrs
sub
loope
sub
xor
mov
decl
xchg
and
stos
or
loope
sub
jl
xor
mov
add
jmp
push
mov
in
sub
inc
sbb
fs
ret
inc
dec
sub
adc
xor
and
mov
idiv
outsb
cltd
inc
jmp
subb
jne
loop
sarl
pop
lea
fildll
inc
in
das
mov
cld
ds
pop
mov
dec
jmp
stos
fs
movsb
xor
mov
mov
fimull
das
sub
call
mov
rorb
jmp
lds
mov
ret
out
add
cmp
or
mov
jnp
add
mov
or
out
pop
cmc
cld
out
mov
push
adc
push
jmp
repnz
adc
sbb
xchg
xchg
pop
iret
add
mov
xor
ficoms
add
jne
jmp
pop
sarl
mov
push
pop
or
cwtl
xchg
and
pop
pop
jg
inc
xor
inc
or
leave
pop
call
mov
jmp
push
mov
xchg
rolb
je
inc
repz
or
pop
shl
scas
add
into
popf
xchg
sbb
jle
jo
push
jno
mov
orb
mov
bound
sub
or
or
jge
loope
pop
or
mov
pop
push
xchg
and
mov
xchg
xchg
dec
pop
popf
add
out
outsl
stc
ret
jge
cmp
xchg
xlat
cmp
cmp
loope
sub
popf
lds
call
enter
subb
jo
cmp
arpl
lods
out
int3
pop
xor
popf
add
push
pop
push
loopne
push
mov
rolb
mov
inc
and
sub
push
sub
sbb
inc
das
fidivrs
fs
mov
xor
cs
cmp
mov
cwtl
clc
in
daa
ds
push
add
sarl
add
xlat
add
pop
fists
xchg
rorl
mov
sub
ret
sbb
sbb
add
push
and
push
mov
and
inc
cmp
mov
inc
xor
adc
lods
rcrb
adc
or
mov
cmc
repnz
lods
xor
push
lock
inc
cmc
inc
mov
popa
fs
aad
fcmovnb
jmp
add
or
or
ss
or
push
shll
jg
inc
scas
hlt
and
iret
loopne
lcall
mov
add
leave
push
int3
and
lret
loop
sub
add
xchg
int
pop
rcll
rcr
popa
inc
jmp
test
repz
enter
adc
or
lea
icebp
test
scas
mov
loope
lods
mull
push
scas
dec
sbb
xor
fstps
aam
inc
loop
add
sbb
push
ja
mov
mov
roll
dec
ljmp
cmp
mov
adc
ja
jne
or
or
hlt
andb
stos
and
adc
inc
test
shrl
push
pop
inc
sbb
pushf
or
dec
and
dec
jmp
pop
dec
or
out
movl
pop
ljmp
jne
sbb
clc
iret
inc
iret
dec
mov
sub
inc
mov
nop
sbb
sub
shl
or
dec
clc
movsb
mov
sbb
xchg
sub
and
ja
add
imul
or
sbb
dec
das
add
inc
jmp
xor
lods
pop
je
push
sub
dec
sahf
test
cwtl
jne
push
or
pop
mov
lock
or
enter
mov
jle
add
js
outsl
pop
or
push
pop
adc
dec
push
pop
lcall
push
push
jmp
movsb
testb
sub
xorb
or
dec
scas
pop
jmp
sar
jge
or
ja
out
sbb
es
pop
pusha
push
sbb
pop
lods
das
add
repnz
adc
mov
push
inc
adc
add
dec
or
cmp
jnp
aaa
outsl
inc
rorb
and
push
push
or
sub
scas
imul
idivl
mov
pop
push
mov
aaa
mov
add
sub
nop
pop
and
insl
adc
inc
test
pusha
out
movsb
cltd
mov
mov
in
cmp
int3
adc
push
std
sbb
aam
mov
filds
roll
nop
inc
add
push
push
sbbl
mov
sbb
mov
lret
mov
inc
or
ret
dec
pushf
add
lds
stc
mov
shl
decb
sub
dec
and
mov
cmp
imul
or
icebp
insb
jnp
mul
shll
cld
out
cmpb
popl
lock
mov
and
push
rclb
xor
sub
adc
loope
pop
cmp
dec
testl
out
jae
push
repnz
lret
pop
mov
shll
inc
add
jg
push
mov
or
add
shl
pushf
jmp
pop
jle
xchg
jl
adc
xchg
jge
jecxz
jle
test
jl
leave
xor
fs
sub
sub
push
or
inc
pop
outsl
adc
inc
sub
sbb
repnz
test
add
jmp
xchg
pop
cmp
xor
bnd
jl
inc
lds
sub
xchg
mov
sbb
jmp
xor
adc
popf
push
shrb
pop
jl
pop
mov
sar
dec
sub
aas
scas
repz
add
push
and
stos
mov
inc
cmp
movsl
mov
cmp
dec
jae
and
dec
jnp
dec
jo
sub
xlat
adcb
dec
and
cmp
sub
jns
or
mov
loopne
mov
or
mov
pop
jg
sti
dec
das
lret
pusha
jno
pop
out
push
jb
dec
call
sub
pop
sbb
mov
popa
xchg
dec
inc
or
xlat
andb
cli
sbb
mov
in
outsb
xchg
mov
inc
inc
mulb
incl
movsb
stos
inc
sarl
lods
dec
dec
dec
xor
xchg
pusha
or
stos
sbbl
repnz
pusha
repnz
push
es
mov
ret
mov
mov
fstps
in
bound
sbb
addr16
lock
rcll
jmp
fiadds
or
mov
add
push
xor
pop
sub
inc
pop
jg
mov
jmp
ds
call
dec
mov
pop
test
push
int3
jl
mov
dec
inc
adc
adc
and
inc
out
push
jno
mov
or
and
stos
sub
in
cmpsb
test
adcb
fsubrp
push
popf
mov
pop
lret
jmp
cs
repz
jnp
or
nop
cmovs
xchg
js
cmpsb
int
xchg
pop
jmp
sub
mov
mov
xchg
clc
sbb
out
imul
sbb
iret
push
pop
shlb
mov
sbb
stos
fdivrp
dec
out
sub
shlb
gs
sub
pop
push
pop
and
mov
pop
ficoms
push
sub
adc
pushl
pop
mov
shlb
das
adc
js
pop
jge
sub
div
dec
inc
mov
ret
sbb
ja
xchg
das
push
mov
ret
idivl
insb
movsb
add
insb
and
jo
jl
sbb
out
aad
pop
jmp
shll
sti
add
hlt
mov
ret
out
pop
jmp
inc
cld
cmp
aaa
pop
ret
call
jp
sbb
out
jp
jl
adc
scas
xchg
xor
shll
add
sub
stos
mov
inc
sub
sub
jge
fwait
push
jmp
icebp
jno
sub
jle
lods
jmp
sub
push
pop
shlb
sbb
add
jbe
adc
mov
rcrb
add
and
pop
test
in
dec
push
add
xchg
addl
mov
and
jb
iret
sarl
lret
cld
sbb
repnz
ss
int3
cmc
aas
outsl
les
mov
push
xchg
add
rcl
adc
push
icebp
lods
adc
push
pop
sbb
xchg
pop
push
push
das
push
cltd
push
jmp
je
lret
xor
adc
sbb
rorl
pop
out
add
scas
and
shr
int3
sub
and
dec
in
movsb
or
pop
cmp
aad
dec
orb
repnz
imul
jno
lods
fstpt
jmp
mov
cmp
movsl
loope
and
int
lods
pop
dec
cmpsl
inc
sbb
sub
out
mov
xor
ret
cmc
xor
lods
cmpb
pop
sbb
cmp
cmp
call
or
xchg
xor
ds
scas
mov
and
mov
dec
andl
xchg
lods
add
daa
xchg
rorl
mov
adc
cmpsb
add
pop
push
aaa
pop
dec
push
push
jbe
and
ds
pop
xchg
push
xor
jecxz
or
xchg
add
sub
jmp
and
inc
pop
shrb
jmp
fimull
xchg
inc
push
jmp
jmp
test
dec
mov
sub
push
lea
dec
mov
mov
out
adc
jl
xor
cmp
call
jge
inc
mov
and
outsb
out
lret
push
or
xor
repnz
cmp
sbb
es
ret
xor
fs
mov
pop
inc
inc
add
sbb
outsl
orb
jnp
cmp
push
adc
mov
adc
jns
in
push
aas
jbe
aas
in
lahf
mov
sub
js
cmc
lods
sbb
pop
and
outsl
cmp
mov
or
sub
adc
sub
adc
ja
testl
divb
pop
push
call
repnz
repz
lds
adc
and
or
jno
movsl
ja
loopne,pt
sub
and
sbb
pushf
sbb
pop
aaa
cmp
scas
push
add
mov
sub
pop
push
mov
lods
xor
jmp
addl
dec
mov
mov
orl
clc
lahf
mov
stos
mov
fnsave
xchg
das
push
mov
dec
cmpsb
sbb
outsb
add
add
inc
ss
popa
push
inc
ds
stos
or
inc
aad
mov
jbe
int
je
cmp
inc
mov
cmpsl
lcall
mov
shrb
sbb
dec
push
daa
pop
xor
pandn
xor
and
rcrb
mov
cmp
jmp
in
pop
ja
mov
push
int3
dec
inc
fcomps
outsl
arpl
daa
scas
sarl
dec
push
subb
pop
xor
push
jmp
pop
stos
jne
and
loop
xchg
sub
push
add
imul
insb
adc
dec
cwtl
cmp
dec
push
ss
pop
adc
xchg
es
inc
push
xchg
iret
popf
movsl
imul
or
add
cs
xchg
cmc
dec
test
pusha
push
mov
pop
mov
sub
in
out
push
push
push
ret
test
push
pop
pop
sbb
or
cmp
imul
shlb
pop
aas
xor
lahf
cmpsl
push
int3
or
imul
add
les
out
mov
jmp
push
jb
inc
xchg
mov
shlb
add
pop
sbb
sarl
add
jp
pushf
push
jmp
fucomi
ds
es
repz
sub
add
pop
sbb
sarb
push
test
pop
add
aas
inc
mov
cmp
mov
sub
cmp
jno
arpl
push
icebp
add
ds
outsl
sahf
add
add
adc
sbbl
jne
push
push
xor
cs
imul
gs
lods
test
xor
jecxz
popa
rolb
push
or
lods
adc
add
mov
pop
mov
or
aad
in
orl
mov
push
das
mov
sbb
dec
cwtl
cwtl
scas
jp
add
mov
sbb
lret
test
adcb
and
shlb
pop
arpl
sub
lea
sub
pop
mov
mov
mov
popf
push
das
jnp
nop
imul
pop
lds
pop
jle
js
lods
pop
push
dec
rcl
or
jg
js
or
sub
pop
repz
adc
xchg
sbb
movl
lret
mov
lahf
jmp
xor
sub
pop
mov
rorb
push
cmp
pusha
and
stc
mov
xor
pop
dec
dec
mov
call
int
loopne
xchg
test
or
adc
std
mov
cli
mov
mov
mov
lods
imul
jle
add
jb
adc
dec
mov
test
mov
jg
stc
in
push
xor
add
sub
add
dec
mov
mov
cmp
mov
cltd
adc
inc
jmp
pop
lcall
inc
sar
ds
icebp
mov
push
mov
mov
adc
add
sbb
addl
psubsw
xor
dec
fmull
mov
pusha
or
add
lret
jge
dec
push
dec
lret
push
das
shl
or
push
cwtl
jmp
jmp
sbb
cmp
sarl
dec
cmp
dec
mov
push
out
jns
daa
ret
pop
fldcw
cld
push
xlat
xor
dec
mov
lods
imul
aaa
add
cs
jp
insb
xchg
jmp
out
lret
stos
dec
jae
cs
push
mov
loopne
adcb
xorb
daa
dec
cld
ss
lret
sbb
mov
adc
stos
pushf
hlt
neg
adc
push
xchg
mov
ljmp
dec
and
clc
or
repz
stos
in
pop
xchg
lcall
pusha
mov
cld
jne
jns
or
and
push
mov
add
xor
addb
add
or
sub
jmp
adc
orl
pop
add
ds
das
pop
fsubrl
or
push
aas
jmp
loope
sub
and
pop
sbb
aam
shr
add
cmp
jmp
lret
lock
mov
jae
out
sub
data16
push
add
pop
add
sub
push
adcl
jle
hlt
push
lods
and
popa
sub
es
push
cltd
movsl
scas
loopne
mov
in
pop
sub
sub
andb
adc
pop
jno
dec
negb
add
sub
add
sti
cmp
mov
orl
mov
jae
stos
push
inc
or
push
cmp
int3
pop
sub
add
mov
sub
jge
xor
pop
sub
test
push
loop
push
jmp
adc
clc
imul
sbb
xchg
and
clc
add
or
or
inc
dec
pop
jbe
cmp
ds
loope
loopne
cmpsb
adc
add
mov
dec
mov
add
ja
ja
or
or
push
adc
jbe
mov
addb
sbb
dec
dec
pop
push
cmp
mov
inc
or
shlb
imul
sub
andps
push
loop
cmp
fs
repnz
or
sub
sbb
xor
pop
neg
xchg
push
xchg
stos
add
mov
dec
lods
cmp
and
push
test
adc
adc
sbb
scas
mov
out
mov
lahf
inc
mov
mov
mov
mov
nop
push
add
leave
pop
stos
pop
and
mul
jmp
mov
shlb
cmc
inc
jg
insl
mov
movsl
cld
imul
xor
cmp
outsb
or
xor
cmp
jge
pop
sbb
push
call
push
jge
mov
mov
lock
jae
jl
leave
mov
sub
pop
push
pop
repz
dec
sub
jge
or
je
cld
add
popa
stos
xchg
sbb
jmp
add
mov
or
iret
lds
mov
dec
in
out
imul
adc
sbb
lret
repnz
bnd
or
jae
fwait
or
nop
jno
mov
and
xor
inc
sub
rcll
pop
imul
cmpsb
int
sar
shlb
sbb
sbb
inc
add
or
push
push
dec
scas
lods
cmp
loopne
push
popa
cmpsl
mov
adc
mov
aas
add
and
or
sti
xchg
test
scas
push
xor
hlt
or
add
jne
out
inc
adc
stos
inc
jmp
dec
push
rcrl
push
imul
lret
mov
call
pop
push
frstor
pop
lods
leave
sub
lret
mov
add
push
loopne
clc
or
push
xor
add
fisubs
xchg
sbb
add
mov
lds
jecxz
jmp
or
lret
push
xchg
mov
fcmove
push
je
je
jp
push
pop
loop
mov
hlt
pop
icebp
sub
jg
dec
ljmp
pop
ja
adc
rorl
scas
push
add
sbb
out
shrl
pushf
lcall
sbb
add
sub
daa
mov
sbb
adc
adc
push
adc
xor
out
push
jp
int
mov
sahf
pop
enter
mov
orb
push
xor
jmp
sub
adc
inc
sub
pop
roll
stc
orl
adc
sub
inc
in
imul
aad
int
xlat
adc
adc
mov
dec
and
pop
mov
fadds
jmp
jge
ja
push
jmp
iret
daa
cmovs
xor
cmc
dec
aad
pop
or
inc
push
pop
mov
pop
pop
arpl
in
clc
gs
xor
pop
adc
mov
push
std
xor
mov
jo
mov
lahf
outsb
push
loope
sub
stos
lods
daa
push
xchg
std
popf
into
xchg
mov
jmp
push
mov
clc
pop
shlb
scas
sub
addr16
push
inc
rolb
inc
shl
add
aas
lret
and
rcl
shr
in
cmp
jno
in
cmp
shufps
sbb
addl
loope
js
in
mov
xchg
and
or
xchg
pusha
mul
popa
lahf
push
sbb
loope
mov
mov
mov
push
fmul
jg
mov
dec
xor
les
cmp
xchg
or
clc
jns
call
push
ror
fs
push
std
dec
mov
in
xchg
dec
sahf
pop
xchg
sub
testl
mov
mov
movsb
jmp
repz
inc
hlt
push
mov
mov
inc
dec
add
neg
ljmp
sub
rcl
and
jbe
imul
mov
mov
dec
fstp
dec
cltd
scas
jmp
push
mov
insl
loopne
nop
fwait
notl
in
imull
or
out
xchg
cmc
pop
test
jmp
cmp
movsl
sti
adc
jmp
xor
cltd
lahf
adc
test
and
pusha
mov
mov
or
push
loope
sbb
mov
and
xchg
mov
and
and
mov
das
pop
sub
test
scas
mov
xor
adc
mov
jns
add
mov
add
scas
sub
adc
push
cmp
xchg
dec
mov
or
pop
std
dec
sub
imul
das
gs
xchg
pop
add
xor
jp
jge
pop
add
int3
xchg
aam
jnp
icebp
in
dec
mov
cli
clc
orb
add
cmpb
lods
pop
dec
rcll
das
sti
and
out
lea
mov
xchg
clc
dec
mov
push
pop
cmp
and
xchg
add
cmpb
jno
inc
xchg
pop
jns
popa
or
xor
imul
or
pusha
inc
sti
pop
sbb
std
mov
out
ljmp
lret
loopne
es
fstl
inc
push
mov
orb
adc
sarb
adc
repnz
lock
rorb
aam
or
out
mov
js
mov
xor
jg
and
rcl
dec
add
mov
mov
sub
add
pusha
mov
ficoml
cld
data16
mov
or
sbb
test
push
xchg
mov
lea
mov
sub
adc
bound
jle
sub
bound
adc
inc
xor
xor
js
in
call
mov
fcomi
mov
test
or
daa
xchg
jno
push
mov
adc
xchg
jecxz
push
cwtl
call
add
mov
rcrb
dec
adc
sub
hlt
ret
sub
sub
mov
sub
sbb
sahf
repnz
mov
dec
test
fstl
aas
add
xchg
mov
pop
push
fcmovbe
or
xchg
xor
mov
and
pop
vorps
push
mov
incb
dec
stos
and
jnp
mov
cmp
jl
jmp
push
or
addb
sub
inc
shrl
fdivrs
dec
mov
or
add
and
jl
add
cmp
or
mov
leave
mov
clc
sahf
inc
sbb
and
cmp
lock
jb
add
mov
jle
xchg
scas
out
pop
loopne
iret
shl
ljmp
pop
jg
and
mov
sbb
add
data16
mov
punpckhdq
shrl
sub
xchg
or
repnz
cmp
pop
xor
loopne
push
adc
vcvtps2dq
jl
das
sub
scas
aas
cli
out
jg
mov
out
adc
xchg
push
movsl
jmp
mov
mov
push
loopne
scas
mov
clc
xor
dec
or
jno
lds
in
jle
fmul
sbb
jl
lahf
jno
movsb
inc
xor
mov
lea
add
push
shr
xchg
ret
ret
jbe
in
xor
ficomps
add
lods
sub
add
and
and
sub
call
leave
and
and
pop
adc
outsb
inc
mov
js
or
clc
pushf
idivb
jns
bound
pop
fdiv
mov
add
outsb
inc
pop
inc
pop
loope
cmp
ja
xchg
into
jecxz
add
pop
sub
sti
or
mov
mov
xorb
jmp
and
mov
push
pop
xchg
sub
es
push
sbb
ret
punpckhwd
dec
jno
movsl
push
xor
or
xor
loope
stos
fs
cmpsl
daa
cmp
addr16
ja
neg
add
imul
pop
jne
aam
test
pop
jmp
mov
or
daa
repnz
popf
jo
push
push
add
shlb
jb
and
add
outsl
lret
lods
stos
nop
add
push
rcll
sbb
mov
lret
xor
lds
gs
ret
insb
or
adc
pop
and
push
cs
movsb
jecxz
vpshuflw
pop
jnp
dec
sub
enter
daa
cli
mov
ret
cmc
rorl
adc
jmp
repnz
cmp
mov
lret
orb
xlat
loopne
sbbb
ss
imul
andl
mov
and
adc
pop
pop
std
out
call
sbb
roll
frstor
dec
jmp
aas
psraw
lret
movsb
add
jl
out
ret
aam
push
sahf
adc
mov
jl
push
sub
cmp
add
faddl
sub
xor
jmp
add
test
enter
in
out
mov
jl
and
stc
sub
fldenv
cmp
add
shll
xlat
imul
jp
add
inc
jnp
push
push
xchg
push
orb
mov
push
push
in
dec
jae
test
ljmp
lock
daa
add
and
neg
xchg
jne
push
shll
mov
lods
add
mov
addb
or
dec
rcll
ja
hlt
or
pop
push
ds
push
or
loopne
stos
xadd
and
lock
mov
push
das
scas
inc
test
std
negb
lahf
jo
bound
repz
popa
sub
lret
popa
imul
lret
loop
jo
mov
lods
imul
and
add
push
mov
mov
dec
and
lahf
mov
add
push
push
inc
cmp
jge
add
fmull
push
push
xchg
push
add
sub
jp
jae
movsl
fisttpll
push
push
sub
ja
mov
hlt
cmp
dec
jmp
sbb
push
pop
pop
sub
dec
mov
mov
jnp
addb
movsb
insb
mov
push
sbb
mov
cmp
inc
xlat
pusha
sbb
pushf
popf
inc
jg
jge
or
iret
mov
aam
mov
negl
add
pop
jge
popa
add
jno
add
std
addr16
sub
push
sbb
loopne
cs
cmpb
push
imul
push
dec
xor
inc
xor
inc
std
push
jmp
mov
xor
lods
jp
xor
scas
adc
xor
test
test
shll
sahf
add
jo
and
testl
shrb
inc
adc
push
call
inc
loope
lock
bound
pop
pop
sbb
mov
movsl
mov
jmp
aaa
push
inc
frndint
push
inc
popf
mov
xor
or
stc
aaa
cmpsb
lods
push
jb
fs
pop
clc
pop
gs
xor
and
jmp
adc
es
cmc
mov
insb
xor
lret
aaa
cmp
inc
adcb
jne
dec
pop
xchg
pop
xlat
add
push
sub
cmp
dec
pusha
testl
rcrl
inc
push
mov
fistps
inc
xchg
sbb
ljmp
pop
lods
add
xor
mov
adc
sbb
out
aas
mov
test
xchg
out
adc
lock
test
push
test
jnp
pop
mov
paddw
sbb
push
pop
lock
das
jae
push
loope
nop
jge
pusha
inc
jge
pop
clc
pop
adc
repnz
pop
xchg
jb
pop
ret
add
or
mov
andb
std
sbb
jp
mov
or
sbb
sbbb
push
sub
sti
or
idivb
adc
leave
jge
mov
ret
pop
push
mov
pop
or
loop
into
arpl
add
adcl
dec
out
mov
pop
fwait
setne
push
lahf
add
sti
jae
add
cmp
ja
and
sub
jno
inc
addb
mov
sub
dec
pavgb
and
arpl
cmp
and
rcrl
and
in
jnp
mov
cmc
push
push
pop
dec
andb
xor
pop
or
icebp
pop
xor
cmp
pop
ds
out
mov
notl
mov
add
inc
jns
cmp
cmp
outsb
cmp
xor
push
bound
jnp
cmpsl
or
jno
inc
jmp
add
repnz
cmpsl
popa
pop
sub
sub
lcall
add
add
in
pop
popf
lds
outsb
shr
popl
pop
sub
sbb
jmp
das
sbb
dec
inc
jns
mov
out
test
mov
mov
jne
test
add
call
mov
clc
jo
sub
cwtl
loope
cmp
jb
or
sub
push
add
rclb
mov
mov
sbb
or
inc
sub
push
cld
inc
sbbb
pop
mov
xchg
ljmp
mov
pop
jb
push
pop
or
in
add
xor
in
mov
push
negl
mov
xlat
cwtl
sub
pop
popf
inc
ds
mov
mov
dec
repz
mov
jmp
hlt
push
or
jno
ss
or
repz
push
jmp
loop
shrl
xchg
add
pop
and
cmc
xor
pop
cld
js
push
lcall
xor
jmp
test
pop
out
daa
out
push
push
mov
mov
jge
mov
jg
cmp
enter
push
mov
repz
sbb
push
icebp
xor
sbbl
pop
inc
dec
jle
ja
lods
xor
push
jp
and
push
add
or
mov
push
and
mov
inc
xchg
mov
imul
lods
mov
leave
inc
fistpl
addb
mov
sub
jmp
and
adc
ret
stc
push
inc
lret
push
add
ja
sbb
mov
pop
pop
push
xchg
loope
xor
testl
push
xlat
shl
jmp
mov
push
inc
mov
dec
clc
pop
add
inc
adc
xchg
fcmovnbe
dec
imulb
insl
adcl
lods
gs
movsb
fmull
loopne
lds
fs
aas
decl
cwtl
fmull
pop
not
xor
ja
xchg
pop
xor
leave
lock
and
ja
dec
sub
pop
scas
lret
fidivrl
mov
xor
mov
jmp
dec
in
push
ljmp
jbe
jl
lret
push
sub
and
xchg
mul
pop
mov
sarl
je
add
das
dec
pusha
jno
sbb
mov
orb
pop
mov
adc
inc
je
leave
xor
pop
repnz
adc
enter
push
push
pop
dec
addr16
adc
imul
dec
shr
int3
repnz
and
daa
add
or
sar
xchg
out
cmp
shr
rcll
sub
push
cltd
in
dec
das
cli
and
pop
xor
imul
mov
out
sub
loope
aaa
and
mov
add
scas
gs
popf
inc
inc
mov
sbb
imul
or
inc
mov
in
arpl
jno
pop
cmpsl
test
filds
or
sub
pop
or
les
push
adc
lds
inc
jmp
and
fnstenv
sbb
repnz
popa
stos
lcall
clc
push
xchg
dec
cmp
jmp
or
cld
dec
lock
dec
pop
mov
lods
sti
leave
xchg
push
outsb
iret
or
cmp
out
mov
sbb
push
es
ret
mov
push
les
aam
mov
xsha1
cmpsb
mov
dec
loopne
mov
in
add
and
sti
out
push
in
mov
hlt
cmp
pop
ffreep
inc
adc
mov
mov
jae
pushf
nop
mov
xchg
jbe
jo
pop
pop
in
jns
push
dec
xor
fsubrs
jmp
push
push
push
lock
sub
cs
adc
leave
push
imull
int
inc
loop
ret
sbb
mov
gs
pop
mov
enter
jp
subb
inc
inc
or
cltd
push
cmp
shrb
jb
daa
xor
xor
mov
stos
rolb
push
sub
aas
jo
stos
add
push
push
popf
push
cmp
inc
sub
cmp
adc
add
sbb
fimull
divps
clc
mov
xor
pop
xchg
jmp
dec
jmp
sub
sub
pop
test
outsl
pop
xchg
add
push
add
or
pop
mov
je
jne
jmp
adc
xchg
inc
movsl
enter
mov
addr16
mov
or
mov
dec
lea
xor
jne
push
in
aas
sbb
dec
adc
mov
mov
pop
aad
add
cmpsl
or
jl
cmp
pop
cmp
out
shlb
dec
int
repnz
into
push
xor
lock
das
insb
or
pop
jmp
inc
aam
mov
es
jne
test
adc
movsb
and
icebp
push
add
add
xor
stos
or
data16
std
and
mov
and
mov
rcrl
mov
inc
inc
cmp
add
ja
jbe
aaa
orl
cwtl
dec
jns
adc
lahf
les
pop
fildl
ficomps
pusha
jnp
xor
das
mov
ljmp
imulb
push
fstpl
leave
pop
push
jnp
or
and
jg
xor
and
imul
push
ret
lcall
jl
into
mov
cs
rorb
pop
and
mov
out
mov
add
jmp
jle
test
dec
popf
mov
inc
xchg
pop
cmpb
xchg
ljmp
sti
jno
test
or
mov
xor
hlt
gs
ljmp
ds
push
inc
pop
or
push
jmp
or
lret
jns
addl
and
add
test
mov
call
mov
ret
sub
mov
jmp
fwait
dec
xchg
jnp
movsl
jl
shrb
push
xor
fucomip
cmpsb
outsl
adc
jb
jmp
jo
lahf
push
call
lea
sti
popa
gs
hlt
aam
mov
mov
jmp
ja
pop
add
insl
jecxz
stc
lcall
push
daa
push
hlt
and
sub
aaa
xchg
dec
inc
mov
push
or
jge
mov
xorb
inc
cli
jmp
push
and
jbe
je
or
aad
mov
mov
inc
jmp
sbb
or
je
push
cmp
push
stc
sti
mov
add
adc
ret
xchg
mov
daa
pop
outsb
loop
ds
inc
xor
mov
js
std
mov
push
out
adc
js
out
add
sbb
fimuls
pop
gs
loopne
sub
jmp
popf
mov
xor
mov
add
cmpb
cmp
roll
inc
add
ret
xchg
pop
mov
ret
and
leave
pop
add
mulb
xor
pop
inc
out
pop
mov
push
mov
pop
outsl
pop
xchg
sbb
pusha
push
lret
cmpsl
sub
dec
xchg
loopne
das
stc
sbb
ljmp
imul
in
push
popf
dec
mov
lods
sbb
pop
push
daa
loopne
jmp
mov
popa
pop
dec
ret
push
mulb
repz
xor
sbb
in
test
jno
xor
sbb
out
fsubr
dec
gs
xchg
insb
mov
std
and
jmp
xorl
sahf
cmp
pop
mov
and
call
push
pop
push
mov
js
adc
cmc
pusha
out
push
ljmp
shlb
sub
pop
xor
sub
xchg
adc
cmp
pop
and
popa
insl
add
push
push
sub
loopne
cmp
inc
into
dec
fs
add
cli
inc
inc
mov
xlat
mov
add
jg
cmp
ljmp
or
push
int3
mov
and
sub
lret
das
jp
fnsave
pusha
mov
xor
cltd
insl
adc
or
pop
push
push
dec
test
imul
adc
pop
nop
and
mull
rcll
pop
sub
xchg
push
or
push
dec
adc
lds
jnp
sub
add
pop
icebp
mov
rcrl
sbb
fsubrl
inc
or
test
scas
lods
push
inc
cli
lahf
adc
mov
daa
push
push
jmp
mov
outsl
mov
add
pop
movsl
aam
inc
lds
insb
hlt
mov
mov
loope
mov
pop
dec
loope
lea
cmp
orl
xor
cli
push
push
push
jmp
rcl
sti
stos
mov
incb
ljmp
jmp
subl
pop
mov
push
add
imull
xor
and
mulb
jne
pop
add
subl
mov
push
dec
lods
mov
jmp
xchg
add
push
loopne
mov
jl
xor
mov
ljmp
les
jno
push
push
mov
dec
fcoml
mov
push
das
push
pop
push
jb
cmp
sahf
lods
adc
ja
add
dec
mov
or
jmp
mov
mov
xorb
nop
test
out
mov
popf
pop
xchg
sti
mov
cs
adc
push
nop
mov
xchg
mov
xchg
repz
andl
adc
cmp
sub
cmc
push
andnps
cmp
dec
sub
pop
repnz
into
mov
pop
push
xchg
aaa
xchg
pop
or
jae
or
and
mov
dec
jnp
xchg
xor
jae
or
arpl
xchg
mov
mov
pop
mov
dec
jbe
test
ljmp
sbbb
mov
push
mov
push
es
ja
cmc
add
ss
imul
adcb
paddb
scas
loope
xchg
jb
xor
cltd
add
mov
cld
mov
test
in
fstpl
cvtps2pi
sbb
jmp
js
and
jbe
xchg
inc
push
cltd
out
jl
adc
inc
push
popa
jmp
mov
addr16
lret
cmp
and
lods
or
cwtl
dec
pop
dec
push
in
cwtl
pop
add
out
dec
hlt
mov
fiadds
pushf
je
xor
cld
and
lret
je
in
adc
lea
inc
fcoml
or
inc
pop
cld
lods
rcrb
jo
mov
mov
mov
outsl
add
js
sbb
shr
insl
ds
icebp
mov
adc
cld
shlb
test
push
mov
cmp
nop
out
stc
push
andb
pop
popf
ds
sub
lds
push
or
imulb
adc
mov
pop
aas
orb
jmp
dec
mov
jae
jo
mov
aad
int
xchg
inc
push
adc
pop
incl
andb
xor
pop
pop
push
imul
arpl
add
jp
cld
mov
sbb
sahf
mov
cmpsb
pop
daa
and
push
mov
jne
aaa
fwait
sbb
jno
sbb
pushf
inc
or
ds
das
repnz
jb
pop
adc
add
cltd
add
jmp
icebp
ret
test
arpl
pop
mov
inc
subl
lds
dec
mov
jmp
loop
xlat
lock
daa
pop
pop
test
xchg
sub
xor
mov
mov
daa
leave
dec
ret
icebp
and
jmp
mov
outsl
test
and
cmp
sub
dec
jmp
rcrl
adc
lea
and
pop
add
mov
clc
adc
mov
add
jb
and
stos
add
dec
adc
into
mov
cwtl
add
xor
hlt
inc
dec
rol
movl
jne
and
adc
mov
movsb
out
mov
ss
hlt
push
jns
js
add
popf
mov
pop
popf
cld
mov
dec
dec
xchg
push
push
sbb
push
movsl
push
sub
sub
jp
pop
push
repnz
pusha
jmp
stos
cld
mov
mov
loope
add
ret
mov
popa
mov
jge
mov
sub
xchg
imul
xchg
or
jno
jbe
xchg
mov
adc
mov
mov
push
add
push
pop
push
push
pop
aam
call
xchg
jle
and
pop
aas
les
sub
and
mov
xchg
sbb
jne
xor
jmp
in
sar
sti
mov
pop
iret
push
jno
ret
mov
xchg
jne
jmp
push
mov
inc
es
add
fistpll
int
inc
icebp
sub
nop
pop
mov
pop
popf
cmp
push
loopne
outsl
pop
sahf
pop
sub
lret
cwtl
andb
jg
fs
mov
and
xchg
rclb
rol
push
test
xlat
ljmp
ds
stos
test
shr
sub
and
ljmp
lock
and
js
cmp
pop
call
fistpll
dec
jp
jle
ds
add
pop
call
enter
mov
jmp
push
aaa
repz
test
dec
adc
bound
xor
inc
rcll
sub
xor
cmp
mov
adcb
arpl
cmc
and
sub
cmp
sub
mov
fsubl
inc
add
push
imul
mov
aam
pop
sub
test
cmp
cli
pop
shrl
pop
sub
or
out
jnp
push
fcomps
push
cmpsl
addb
lret
outsl
mov
stos
or
xchg
push
or
push
es
cwtl
add
add
jecxz
push
mov
cmp
mov
cmp
ljmp
sub
neg
add
or
or
pushw
inc
popf
inc
and
pop
icebp
icebp
out
outsb
popl
repz
test
jo
outsl
lret
dec
sub
jne
ja
mov
xchg
incl
add
neg
sub
sub
inc
pop
and
xchg
add
pop
push
add
dec
adc
mov
loopne
sub
cwtl
xor
cmc
sti
std
loope
or
pop
test
mov
sub
and
ss
cwtl
es
lds
sbb
mov
sbb
pop
pop
fidivs
shlb
rol
jmp
rcrl
idivl
adc
inc
sub
xchg
jae
cmc
jb
dec
pop
jmp
jge
sub
and
adc
sub
lds
test
testb
imul
and
arpl
or
ret
or
ja
mov
mov
inc
lock
add
adc
cmp
fs
cmp
pop
lahf
or
push
rsm
or
jo
xchg
add
mov
add
jmp
pop
out
hlt
and
mov
dec
adc
into
mov
stos
mov
jg
xor
sub
jnp
sahf
push
pop
fcmove
rcrl
or
inc
sbb
mov
sub
pop
dec
pop
jnp
not
out
add
mov
std
shrb
or
or
ljmp
dec
cld
loop
jo
adc
shr
push
in
cmp
jno
push
push
cs
push
and
xchg
mov
mov
icebp
mov
sahf
xchg
stos
int
inc
push
js
xor
outsl
dec
xor
cli
ret
shlb
and
adc
and
nop
push
inc
cmp
out
sbb
mov
pop
stc
loopne
lods
test
cld
adcb
sbb
pop
ljmp
xor
mov
sub
jl
pop
xchg
loopne
sub
fsts
dec
xor
or
mov
push
mov
out
jno
push
pop
or
fs
inc
xchg
sbbl
cmc
mov
roll
push
sti
and
sbb
cld
add
or
daa
xchg
push
ffreep
dec
test
jp
inc
out
jno
sub
je
inc
pop
dec
cwtl
and
mov
add
inc
adc
add
xor
dec
addl
mov
cmpsl
add
adc
xchg
outsb
mov
cmp
add
push
fdivp
outsl
add
adc
mov
daa
xor
lret
jmp
loopne
pusha
dec
pop
sbb
cld
icebp
cmpsb
iret
add
pop
das
pushf
xor
dec
push
int3
sub
ljmp
pusha
dec
push
sbb
or
pop
add
xchg
jbe
and
push
jmp
cmp
aam
mov
js
popf
repz
mov
dec
cmp
mov
jmp
mov
dec
das
popf
and
daa
int
lea
jb
clc
jmp
shr
adcb
xor
inc
dec
mov
pop
pushl
sbb
mov
and
shll
push
lret
or
pop
scas
sbb
sbb
sbb
daa
aam
cli
inc
jne
jbe
pop
jmp
ljmp
xchg
cmpb
aaa
dec
pop
add
faddl
subb
add
aam
sahf
stc
mov
pop
push
sbb
clc
lret
xchg
cmpsb
mov
sub
inc
push
mov
adc
sbb
adc
andb
out
push
inc
mov
jmp
mov
add
jmp
imul
cwtl
and
mov
fwait
sub
cwtl
pop
pop
mov
ficoml
push
sub
rolb
push
pop
inc
adc
pop
mov
sbb
lret
inc
ffree
mov
mov
mov
inc
push
sub
xor
push
loop
aam
das
sub
fistps
dec
push
bound
into
std
xchg
push
sub
pusha
daa
mov
aam
es
das
push
push
mov
push
mov
lock
cmp
pop
adc
xlat
push
mov
jo
adc
dec
das
fbstp
test
add
mov
dec
test
jae
sbb
popf
aaa
or
push
sub
pushf
cmp
test
sbb
mov
xchg
or
dec
xchg
out
ljmp
push
dec
sbb
or
sub
pop
or
push
cmpl
dec
add
lcall
adc
inc
repnz
push
cld
mov
pop
jmp
and
or
or
add
movsl
add
stos
sub
int
adc
sbb
mov
and
xor
mov
jl
das
jle
rolb
daa
adc
jbe
shrl
push
imul
jae
lahf
and
in
mov
mov
inc
cmp
mov
mov
pop
lret
pushf
fidivl
add
or
jne
xor
mov
mov
jne
adc
cmp
dec
xor
stc
and
inc
loopne
push
aaa
xor
outsb
mov
shlb
and
imul
nop
test
push
mov
and
cmp
xchg
lcall
mov
sub
clc
je
mov
xor
dec
or
inc
jo
and
inc
int3
inc
xchg
xor
mov
pop
mov
pop
inc
add
in
mov
mov
fstl
add
repnz
jae
cld
dec
addl
sbb
dec
jp
mov
gs
fstl
jmp
sub
adc
loope
pop
and
dec
out
push
and
scas
mov
cmp
ficoml
xchg
fsubr
imul
aad
push
scas
jne
pop
push
cmp
fistps
shlb
pop
nop
mov
inc
loopne
push
adc
out
call
movsl
mov
inc
xchg
es
adc
jecxz
xchg
sbb
or
inc
ret
inc
hlt
jl
shlb
das
movsl
aad
or
adc
push
lds
adc
jmp
and
add
push
mov
jne
mov
out
lret
sub
pushf
leave
push
mov
push
pop
push
pop
or
mov
lods
add
lahf
xchg
push
pop
mov
cwtl
loopne
or
jle
mov
jmp
pop
nop
adc
sahf
inc
sbb
repz
and
xor
or
shrb
cmp
jmp
inc
loopne
mov
rol
mov
pop
test
int3
les
ret
jne
movl
repnz
mov
pop
bound
aam
lods
xlat
ljmp
imul
iret
push
cmp
jmp
push
add
lretw
push
stc
rorb
push
xor
cmp
fcomps
sbb
mov
dec
pop
mov
dec
push
pop
lahf
jns
jb
xor
jbe
dec
add
sbb
gs
dec
jne
xlat
push
mov
add
or
cld
push
sub
add
pop
dec
movsl
inc
pop
mov
push
lret
fdivrs
adc
mov
dec
les
clc
inc
scas
jo
xchg
loope
pop
pop
sti
and
xor
push
out
add
push
pop
jg
int
add
fmuls
jmp
jge
mov
bound
mov
imul
fucom
jp
stos
aam
cs
xor
aas
fisttpll
enter
test
dec
hlt
push
mov
adc
orl
mov
adc
test
pop
pop
push
push
mov
inc
inc
rorb
and
scas
cmp
pop
cwtl
push
sbb
jle
out
inc
or
mov
inc
jbe
outsl
pop
add
stos
aas
bound
push
sub
aam
add
inc
and
and
pop
xchg
adc
sti
push
or
cmp
pop
pop
cld
sub
jmp
mov
adc
loope
test
push
push
push
nop
push
push
loope
mov
fldt
imul
inc
fwait
jno
or
xchg
shrb
test
test
xchg
sub
out
and
or
jo
push
sub
xlat
scas
out
mov
jge
jmp
push
mov
loope
mov
mov
cli
jno
cmpsl
pop
sub
hlt
xchg
dec
cmc
adc
jbe
sub
pushf
push
push
inc
jmp
ret
pop
or
and
daa
pop
jl
outsl
mov
idivl
stos
lods
add
jmp
mov
ret
adc
push
jb
or
fmuls
jmp
lods
push
pop
and
add
lcall
jo
xchg
mov
push
stc
test
xchg
pushl
pushl
pop
orb
or
in
sub
loopne
jg
js
cvtdq2ps
dec
inc
add
roll
sub
iret
adc
pusha
push
mov
adc
mov
fimull
inc
pop
inc
leave
sub
aad
add
push
hlt
cmpsb
mov
adc
pop
push
lods
add
in
sbb
mov
xchg
mov
xchg
add
jp
add
and
add
add
loop
adc
and
daa
xchg
sarl
mov
and
and
sti
lahf
divl
bound
xchg
push
add
lcall
leave
cmp
add
fldenv
jb
in
ret
cpuid
push
sbb
clc
aas
push
fidivrl
add
sub
fdivrl
popf
mov
js
pop
xchg
mov
pop
mov
push
cli
ss
pop
add
aad
pushl
add
mov
les
in
adc
mov
pop
inc
dec
lock
mov
mov
or
mov
add
fdivs
js
jmp
lock
add
lock
pop
ja
xchg
aam
xor
xchg
in
ljmp
jae
sti
mov
test
out
push
mov
repz
pop
cmc
inc
movsb
lods
in
mov
dec
xlat
ds
aas
daa
sub
jmp
push
push
inc
cli
and
call
mov
xchg
rolb
push
pop
jae
push
jmp
les
adcb
add
ret
or
flds
pop
cmp
sub
pusha
fisubs
sbb
lds
iret
outsb
adc
adc
call
pop
xor
pop
jmp
cmc
shlb
jo
lret
push
out
add
call
ret
inc
roll
pop
ds
add
and
ljmp
dec
ds
xor
and
gs
add
into
push
sahf
test
add
fnstsw
xor
pop
pop
mov
imul
sub
xlat
dec
pop
xchg
sbb
rol
insl
adc
cmpsb
insb
lods
pop
les
and
xor
add
push
dec
mov
repz
cmp
and
lret
push
mov
sub
aad
lcall
pop
xor
jno
cli
addb
mov
or
and
or
cli
popf
mov
jg
outsb
xchg
or
xchg
lcall
add
adc
adc
jae
call
shll
daa
xor
add
sbb
adc
pop
push
or
jnp
jmp
insb
inc
xchg
jle
into
push
icebp
inc
xchg
outsl
add
push
push
jge
cmp
sub
cltd
add
mov
lcall
fiadds
push
daa
adc
adc
jmp
push
cmpsl
pop
jp
mov
out
add
aaa
mov
add
in
jo
adc
icebp
dec
jmp
inc
and
pop
pushf
jb
push
dec
mov
test
aam
ljmp
inc
xor
inc
sub
and
or
add
aam
mov
loopne
jne
ret
mov
mov
orl
xor
roll
out
pop
or
pop
dec
js
jmp
jg
mov
pop
and
mov
jmp
gs
jmp
xchg
mov
cmc
xchg
xor
aas
clc
out
ret
push
mov
cmp
les
subb
jbe
and
jmp
push
iret
push
repnz
pusha
das
jg
testl
push
in
inc
mov
sub
fnsave
xor
mov
pop
jo
pop
jg
test
and
jns
sbb
decl
pop
sarl
jecxz
pusha
xor
cmp
test
xchg
dec
adc
enter
and
addl
sub
push
cmp
je
in
into
lds
xchg
pop
jmp
loopne
mov
mov
lock
pop
inc
dec
xchg
xor
mov
and
sub
mov
leave
or
inc
pop
push
jo
orb
dec
dec
push
test
or
addr16
lods
jnp
or
mov
std
push
cmc
rcrl
jmp
addb
loope
push
test
add
jmp
mov
sub
orb
xchg
jae
leave
je
jbe
pop
add
lock
into
xchg
insb
jb
adc
xor
or
and
mov
add
sub
dec
mov
jmp
add
ljmp
jg
pusha
or
or
and
jmp
addr16
aam
cmp
outsl
mov
jmp
mov
sar
sub
or
sbb
rorl
pushw
jb
push
nop
aad
and
loop
roll
pop
pop
cld
jmp
mov
mov
mov
cmp
insb
dec
inc
daa
fdivl
add
cs
mull
gs
gs
sbb
outsb
movsb
add
pop
daa
sbb
out
iret
pop
jle
outsb
push
mov
mov
aam
movsl
je
and
addl
add
mov
out
xor
out
add
clc
and
add
or
xor
loop
push
push
mov
dec
mov
sub
sub
or
add
jbe
dec
push
stos
adc
into
add
jno
add
push
add
and
cmp
xchg
jmp
stc
cli
sub
dec
xchg
data16
add
loope
lcall
push
mov
dec
stc
sbb
pop
movsb
push
fistpll
jnp
hlt
xor
jp
inc
mov
mov
mov
push
adc
neg
nop
jb
dec
ljmp
push
xor
jg
loope
adc
xchg
dec
add
lock
addr16
ja
sub
fld
imul
aam
pop
iret
mov
jle
or
cmp
ja
arpl
pop
pop
inc
scas
push
jmp
and
sbb
jo
sbb
dec
popw
sbb
out
xor
sahf
cld
ror
mov
inc
mov
or
in
or
pop
push
test
mov
clc
pop
out
push
scas
iret
inc
pop
mov
adc
add
mov
jne
xchg
dec
loope
pop
fiaddl
mov
and
sub
or
pop
scas
out
push
sbb
popf
sti
xchg
pop
mov
xchg
pop
jbe
iret
movsb
mov
in
jecxz
jns
icebp
xor
js
nop
push
adc
cmpl
jecxz
cs
or
movsb
fnstenv
imul
mov
sub
stos
xorb
sub
jg
xchg
in
add
or
lret
movsb
add
and
dec
inc
lods
ret
xlat
mov
nop
lahf
pop
cmp
push
adc
imul
fildl
out
repz
jmp
out
sbb
out
daa
sub
jno
add
cmp
popa
adc
adc
dec
sub
add
jae
shll
jmp
imul
in
xor
test
mov
test
ss
push
cmp
dec
cmp
push
jmp
mov
cs
es
dec
fildll
in
pop
add
jmp
or
inc
jge
rclb
stos
das
je
push
add
or
push
xor
aam
pop
push
ds
lahf
mov
rorb
mov
push
negb
flds
dec
pop
jmp
pop
scas
in
pusha
out
nop
repz
dec
cmp
or
ljmp
mov
shlb
pop
sub
add
adc
in
shr
add
leave
or
push
lret
dec
subl
daa
mov
jne
mov
daa
cmp
cs
push
cs
fstl
pop
filds
push
jmp
addl
test
or
mov
fs
pop
or
pop
jae
mov
repz
pop
imulb
push
jmp
sub
insl
or
add
decl
sub
mov
outsl
jne
insl
mov
push
xchg
movsl
mov
jns
cmp
add
jmp
lds
pusha
aaa
sti
push
jmp
mov
lds
xchg
sti
in
mov
cmp
in
add
scas
pop
add
xor
jg
mov
xor
ret
outsl
push
push
sbb
mov
ljmp
mov
sub
rep
and
fwait
out
adc
leave
push
and
js
gs
jmp
dec
jmp
mov
xor
push
mov
das
sbb
dec
movsl
xlat
adc
jmp
push
add
or
aam
dec
dec
dec
out
in
push
fisubrl
cltd
dec
in
add
jno
int3
fcoml
mov
aam
test
mov
sti
xchg
les
ja
subb
das
mov
hlt
jnp
mov
sub
inc
xor
shll
xchg
adc
je
jg
dec
push
xor
dec
fisubs
jmp
ds
das
mov
mov
je
nop
dec
jmp
loop
push
mov
xor
add
sub
mov
push
movsl
cmpsb
cs
movsl
adc
loopne
or
add
push
jmp
dec
fs
repnz
paddsw
xchg
sti
fst
out
jp
inc
popf
addb
mov
adc
adc
js
subl
adc
outsb
sbb
shll
add
into
pop
xor
sbb
jp
loop
or
push
dec
lret
sahf
in
lods
rcr
lcall
xor
xchg
ret
ds
jecxz
outsl
mov
jmp
jmp
imul
scas
mov
push
lret
out
pop
dec
jle
adc
lea
jl
pop
or
andb
push
repz
add
adc
leave
inc
pusha
inc
out
push
and
aaa
xor
scas
adc
incl
out
outsb
xchg
lea
aas
add
daa
pop
inc
test
cmp
add
add
adc
lds
mov
into
dec
icebp
or
push
mov
lock
xchg
push
jmp
ficompl
dec
nop
fldenv
daa
xchg
push
call
xchg
out
sub
add
or
xor
add
or
push
loop
dec
jns
fcoml
fwait
sbb
mov
xlat
xorl
push
dec
add
outsb
and
fmull
aas
cli
pop
int3
mov
ret
xchg
inc
rclb
inc
and
push
lods
loope
inc
loopne
xchg
lahf
inc
cltd
xlat
das
mov
xlat
push
sahf
lahf
push
loope
pop
test
cmpsl
inc
loop
push
sub
leave
cmc
jbe
jb
bound
cmp
jg
outsb
scas
jno
imul
and
cmp
inc
cmpsl
enter
and
sub
cmpsb
sub
in
dec
adc
sbb
es
add
gs
adc
popf
xchg
std
jmp
adc
lret
les
or
add
sbb
andl
push
jb
jg
add
push
mov
pop
xor
fldl
sarb
add
inc
mov
push
mov
lea
test
daa
add
mov
jmp
add
and
add
push
push
sbb
pop
shr
call
mov
xchg
xor
ret
mov
stos
and
popa
pushf
jg
outsb
fmull
dec
cmpsl
shlb
daa
mov
sub
dec
stos
lcall
xchg
ds
test
dec
push
adc
insb
sbb
inc
int
push
sbb
push
pop
pusha
inc
lock
and
xor
stos
add
mov
loopne
flds
xor
xchg
dec
lcall
loope
inc
fucom
scas
cwtl
jmp
sbb
sbb
test
push
push
fsub
pop
jmp
or
aas
in
cmpsb
mov
pushf
sahf
push
cld
std
push
adc
and
shll
adc
popa
dec
addl
push
jno
lock
dec
inc
pusha
pop
ud0
adc
jmp
or
mov
fadds
xor
std
push
dec
mov
insb
out
mov
mov
popf
adc
sub
adc
dec
in
fstpt
inc
cmc
nop
jmp
movsl
inc
in
outsl
sub
push
xchg
jl
lahf
mov
std
lret
or
adc
and
fbld
jns
loop
push
sarb
daa
lods
pop
push
mov
cmp
mov
adc
cmp
cmpsb
mov
push
bound
sbb
inc
jmp
or
push
or
pop
stc
popa
add
xchg
push
mov
jmp
jg
push
insl
fwait
sbb
loopne
mov
loop
mov
enter
gs
or
jg
pop
adc
int
lock
sub
repnz
stos
mov
cltd
pop
mov
add
fs
stc
jmp
push
mov
imul
push
and
rolb
jle
cmp
xor
jge
xor
jp
sub
pop
xchg
out
cwtl
cmovno
repnz
shlb
pushw
and
fadds
and
or
faddl
aaa
cld
inc
pop
adc
imull
jmp
push
pop
sub
adc
movsb
and
mov
int
xchg
and
loope
imul
pop
fistl
imul
push
mov
xor
pusha
dec
divb
outsb
sub
ljmp
pop
lods
and
adc
xchg
pop
xchg
mov
mov
lss
or
adc
loopne
imul
xor
mov
aas
push
adc
xor
add
mov
or
mov
push
xchg
xchg
rorl
or
mov
add
das
jo
jg
inc
stos
and
sbb
or
adcb
ret
pop
inc
fs
cmp
sahf
subb
ds
jbe
loope
dec
popa
addl
jae
xchg
data16
ljmp
pop
ret
mov
mov
mov
lock
mov
pop
ja
sub
fs
rorl
adc
push
test
dec
mov
jmp
int
pusha
mov
sub
fcomip
push
mov
cmp
push
es
pop
add
or
fsts
or
xchg
daa
mov
lret
ret
adc
into
jle
sbb
andb
bound
add
or
rcrb
arpl
pop
pop
xor
lcall
test
popa
fdivrl
icebp
inc
in
iret
test
leave
jge
sub
je
icebp
mov
orb
inc
sbb
and
imul
fwait
push
pop
push
add
or
add
push
sarb
add
rclb
stos
push
mov
out
adc
xchg
add
je
ret
mov
and
xor
sub
shr
bound
lds
mov
imul
movsb
sub
mov
mov
mov
mov
jne
sarb
pop
mov
mov
daa
pop
push
in
dec
pop
dec
outsb
in
mov
in
repnz
cmp
inc
inc
push
sub
in
test
push
dec
push
dec
out
add
cmp
push
adc
jl
pop
test
adc
add
ja
nop
add
pop
pop
push
push
push
mov
sub
mov
add
push
mov
ds
push
push
sbb
cwtl
mov
sub
pop
lahf
sbb
push
xor
mov
dec
pusha
add
cs
mov
dec
mov
mov
mov
in
jns
popa
dec
stc
xchg
arpl
or
out
das
out
or
pop
push
in
cmp
jecxz
dec
movsb
dec
sub
push
ljmp
mov
xchg
or
test
out
sub
mov
mov
jp
and
pop
lahf
loop
jbe
stos
jae
sub
lock
pop
adc
pop
les
or
mov
xchg
push
xor
sarb
jmp
sbb
sti
mulb
dec
stos
or
ret
mov
xchg
jbe
sub
das
mov
sub
mov
or
loop
int
lret
push
mov
mov
and
pop
sahf
mov
or
iret
call
mov
push
loope
jns
int
int3
inc
stos
xor
push
pop
push
dec
cmp
ret
dec
dec
in
sub
and
rorb
int
and
pusha
jbe
jns
sbb
cld
loop
ja
test
enter
xchg
ret
daa
pop
cmp
loop
or
push
jnp
aas
mov
jge
mov
or
inc
and
in
xlat
and
add
dec
mov
push
add
jmp
cmp
inc
fists
lods
das
pop
scas
js
inc
pop
in
cs
pop
scas
sub
and
orb
add
push
dec
push
ljmp
pop
add
lock
mov
jne
push
inc
movsb
mov
sbb
adc
xchg
ss
or
mov
add
sub
jmp
test
shrb
sub
pop
imul
je
jmp
push
divl
mov
cmp
shr
add
sub
in
in
jbe
and
add
pop
jb
subb
jl
flds
loopne
mov
jmp
mov
fwait
jns
rolb
push
jmp
xor
sbb
push
andl
or
je
or
or
add
sbb
fnstsw
mov
nop
and
push
lahf
adc
dec
jo
sub
fisttps
daa
push
lds
orb
or
frstor
xor
lods
mov
mov
ret
inc
dec
adc
or
sahf
xchg
push
lds
push
mov
pop
data16
shlb
dec
jmp
dec
mov
mov
scas
adc
cwtl
cmc
outsl
shlb
add
jmp
dec
sub
imul
insl
cld
and
scas
jecxz
sub
and
outsl
pop
dec
xor
inc
out
or
sub
fdivrp
sub
mov
ljmp
add
add
test
add
in
in
not
shr
cmp
cmp
pop
sub
dec
add
cltd
shlb
sub
movsb
in
or
adc
jnp
xchg
cmp
subl
jge
rorl
int3
daa
popf
pop
mov
or
push
mov
adcb
dec
push
pop
adc
jge
lcall
pop
js
xchg
bnd
dec
imul
sar
inc
mov
sbb
incl
loopne
cmpsb
and
addr16
mov
test
or
cmp
push
test
add
lods
sbb
jg
sub
and
add
sbb
sbb
stos
pop
jae
in
adc
sbb
pop
addl
or
sbb
and
xor
pop
xchg
notl
shr
push
mov
sub
pusha
fsubrs
cwtl
adc
or
js
fs
mov
repnz
sti
pop
dec
or
push
rclb
adc
std
adc
jecxz
lahf
ds
arpl
outsl
push
pop
js
idivl
sbb
adc
adc
jle
outsl
adc
out
shrb
xchg
je
ljmp
cmc
ret
in
or
mov
sbb
cmp
add
mov
or
sub
pop
fildll
in
adc
pop
movmskps
test
sub
fstp
fcompl
jmp
imul
loop
jecxz
add
push
mov
pop
pusha
test
clc
or
pop
ds
sub
test
sti
jle
mov
idivb
pop
pmovmskb
mov
jmp
xchg
dec
mov
xor
ss
cmc
mov
push
addl
xor
pop
sbb
pop
movsl
inc
in
mov
aas
repz
push
in
cmp
cmp
sub
repz
or
adc
pop
and
addb
je
xor
mov
xchg
ljmp
sub
pop
pop
nop
xor
cmp
push
jecxz
hlt
mov
add
loopne
jno
add
das
jmp
pop
push
ret
jmp
mov
out
push
jl
jo
or
dec
lret
adc
push
sub
push
imul
or
into
jg
pop
out
sub
loope
test
mov
push
stos
cs
push
ja
fidivrl
dec
outsb
cmp
int
add
inc
push
or
lret
mov
jmp
lret
dec
cmp
xor
adc
add
add
xchg
lds
push
mov
mov
lea
pop
mov
or
mov
add
sub
js
ja
xchg
add
incb
mov
lock
not
pop
push
mov
inc
cmp
push
xor
mov
rolb
xor
xor
cld
push
dec
add
gs
and
xchg
loopne
and
jle
push
lock
mov
jge
jne
sub
ljmp
lods
pop
push
jb
in
arpl
add
inc
data16
jb
inc
fiaddl
or
fsts
enter
mov
pusha
push
push
push
sub
sub
arpl
cmc
xor
mov
dec
out
pop
in
dec
inc
cmp
sub
xchg
cmpsl
sbb
mov
mov
stos
mov
adc
mov
pop
add
sub
sub
es
xchg
pop
mov
lcall
arpl
popf
push
push
jbe
pop
repnz
lret
movsl
or
sub
imul
push
mov
mov
rorb
aaa
push
or
xor
mov
test
test
cmp
adc
repz
sub
mov
mov
insb
mov
cmp
orl
fstpt
push
xor
inc
xchg
adc
into
push
add
in
stc
xor
pop
ret
fucomip
jl
and
mov
in
out
or
xor
xor
test
add
add
and
push
mov
add
ficomps
ret
add
insb
xchg
inc
dec
pop
cmp
nop
imul
ret
cmp
lods
dec
lods
pop
mov
pop
popf
dec
das
sbb
pop
mov
clc
mov
inc
push
push
aam
repnz
mov
mov
sub
add
neg
scas
clc
cli
xchg
xchg
sbb
daa
mulb
lcall
enter
inc
movsb
sub
sub
push
push
ret
adc
mov
mov
rcll
and
mov
shlb
sbb
insl
sub
int
xor
mov
enter
lods
add
mov
mov
mov
or
leave
fadds
jae
cmc
insl
cmp
add
push
add
sbb
push
adc
cwtl
pop
or
inc
mov
pop
dec
repnz
add
sbb
mov
pop
xor
adc
push
cmp
add
cmc
pop
push
dec
rcrl
xchg
shrb
jp
sub
outsl
xlat
in
push
clc
mov
or
xlat
pop
jo
xlat
xorb
cmc
sbbb
or
and
add
dec
popa
shl
xchg
push
mov
pop
outsl
hlt
mov
movsb
in
loopne
mov
push
dec
pop
xor
xchg
push
rorl
cmp
sub
inc
sbbl
mov
cmpsb
adc
pop
and
mov
not
popf
lock
in
mov
pop
mov
sbb
add
or
push
leave
push
imul
shlb
outsb
xchg
add
adc
pop
mov
mov
filds
aad
jmp
inc
add
and
cmpsl
pop
add
cmp
mov
or
pop
icebp
push
pop
xchg
dec
mov
pop
add
dec
jmp
add
sub
out
pop
out
rcll
jmp
cmpsl
lods
sarb
cmp
ljmp
mov
push
or
subl
addr16
mov
clc
jecxz
pusha
dec
int
and
cs
or
mull
fs
shlb
cmp
nop
dec
scas
outsb
cmp
cmp
call
arpl
xchg
ds
inc
out
lahf
push
loope
movsl
jmp
mov
jmp
int3
pop
mov
push
push
pop
cwtl
sub
jnp,pn
pop
ljmp
inc
mov
inc
lret
sub
xlat
icebp
aaa
and
orb
nop
sub
mov
cmp
or
mov
neg
decb
add
shll
pop
clc
cmc
out
lock
lahf
testb
push
movsl
stc
movsl
jmp
imul
xor
addb
ret
test
push
or
pop
xor
sbb
call
adc
sub
sub
orl
daa
dec
push
jl
or
jno
call
ja
add
adc
mov
jmp
cmc
fldl
sub
aaa
aad
xchg
bound
mov
fcomip
in
stos
sbb
stc
outsl
hlt
adc
add
xor
iret
adc
add
xchg
jl
negb
inc
xor
or
mov
adc
fucomi
inc
push
or
add
push
lods
jo
lret
xor
push
push
or
sbb
dec
jne
add
mov
push
lret
push
inc
push
movsl
or
push
mov
mov
inc
in
xor
bound
xor
pop
inc
rolb
mov
int3
jmp
or
punpckhwd
aad
or
and
lea
cmpsb
mov
jo
ljmp
mov
mov
push
dec
loope
jge
and
test
pop
push
jge
loop
jo
adc
jle
or
add
sub
int
and
xor
push
xorb
jne
cld
shll
sub
insb
pop
push
inc
jmp
dec
dec
xor
jmp
iret
mov
das
jge
out
jb
mull
outsb
dec
pop
in
fbld
hlt
popf
adc
xor
decb
cmp
shl
pop
add
out
or
fisubl
pop
adc
je
add
xor
jne
arpl
scas
mov
mov
jmp
fcmovbe
pop
in
jmp
scas
icebp
out
fwait
or
and
nop
pop
or
sbb
aam
icebp
pop
or
sub
add
cmp
add
inc
dec
push
dec
sub
add
scas
test
cs
mov
mov
mov
decb
add
add
or
fstl
rorl
sub
xchg
repz
push
divb
loopne
or
mov
mov
push
cmpsb
leave
jg
cmp
inc
js
mov
lret
bound
sub
aas
loop
dec
jmp
cltd
sub
sbb
mov
adc
xor
dec
in
xchg
inc
push
xor
fs
jae
cmp
mov
popa
pushw
cmp
mov
add
jmp
loope
add
addr16
or
inc
inc
add
enter
push
pop
outsl
push
cmp
sbbb
movsb
sbb
mov
adc
cmp
sub
das
fidivs
or
mov
cmp
push
daa
cld
shlb
xchg
or
mov
pop
jne
lret
or
cmc
mov
or
pop
cltd
add
incl
fists
and
jmp
sbb
mov
nop
inc
addb
aad
mov
cmp
pusha
sbb
pop
mov
cwtl
out
mov
dec
add
mov
pop
lahf
jo
dec
adc
dec
add
fsub
adc
stos
loop
test
push
shlb
add
mov
jp
cmp
push
sbb
ds
notb
pusha
pop
pop
add
pop
mov
xchg
aam
call
adc
out
jge
pop
and
mov
jbe
cli
and
jbe
xor
cltd
mov
orb
xor
push
and
jns
lahf
inc
std
das
fsubl
ret
negl
cmp
push
mov
mov
push
sbb
pop
add
mov
insb
lods
or
or
outsb
dec
and
push
jbe
sub
pop
out
pushf
cmpsl
and
rolb
dec
je
daa
inc
cmpl
int
shll
adc
jbe
pop
push
dec
subl
cltd
push
data16
push
or
fisttpl
adc
add
je
and
push
jmp
lods
add
bound
pop
xor
mov
lods
addb
or
push
mov
jae
cmpb
maxps
idivb
push
push
or
jge
les
pusha
mov
fsubl
decl
pop
xor
loope
filds
adc
out
sbb
testl
iret
cmp
xchg
jbe
test
or
pop
mov
sarl
stos
push
jmp
sbb
loop
jmp
mov
outsb
push
push
xchg
cwtl
aad
push
ja
add
std
es
or
ljmp
mov
shrb
imul
enter
dec
nop
sub
adc
ret
xchg
add
pushf
or
sbb
stc
cwtl
cmpb
cmc
pop
rcrb
pop
idivl
aad
fsubrs
mov
dec
dec
mov
in
cmpsb
adc
and
ss
cmpsb
mov
cwtl
add
out
sub
cmp
ss
sbb
xor
dec
notl
adc
repnz
dec
loope
decb
dec
scas
sub
pop
mov
cmp
mov
pop
movsl
mov
int
int3
cmp
jmp
adcl
push
js
xchg
pop
xchg
push
dec
jge
jmp
mull
inc
cmpsl
push
mov
neg
add
int
add
push
xor
mov
stos
mov
xchg
ljmp
aas
pop
push
lds
mov
sub
xchg
fistpll
popa
jmp
and
movsl
inc
inc
jg
xchg
adc
dec
fsubrs
mov
test
sbb
xchg
imul
mov
cmp
shrl
or
add
inc
add
cmp
sub
and
pop
insb
xor
sub
cli
lret
movsb
cmp
adc
rcrl
inc
pop
jl
jnp
imul
adc
or
xchg
loope
or
mov
ficoml
outsb
hlt
aad
das
or
pop
jmp
cmp
jne
loop
hlt
mov
ret
mov
jno
or
dec
sbb
pusha
jo
pop
pop
and
jb
push
push
xchg
enter
push
lock
sub
sub
popl
not
push
pop
mov
add
adc
mov
push
cs
and
mov
sub
pop
sub
adc
xchg
adc
lahf
ret
or
mov
push
jb
bound
int
cmp
push
push
jne
push
mov
pop
les
add
sbb
xorb
je
inc
icebp
cmc
xor
lret
mov
loopne
not
xor
xor
leave
jmp
addb
addr16
imul
scas
cltd
scas
out
mov
sbb
test
xchg
xchg
xlat
add
push
add
cld
shr
pop
inc
les
dec
shr
iret
adc
arpl
push
shrl
ja
dec
push
popa
cwtl
aaa
xor
sbb
xchg
cmpsl
call
fistps
mov
and
imul
int3
xor
pop
loope
jno
and
xlat
add
nop
aam
cmp
xchg
call
nop
inc
sbb
into
xor
imul
xor
test
fdivl
mov
adc
and
mov
insb
cli
test
and
repz
and
pop
lea
pop
stc
mov
repnz
je
test
mov
push
movsl
enter
sbb
push
jmp
add
add
pushw
cld
insb
adc
cmp
jge
adc
mov
sbb
or
ret
push
dec
inc
mov
out
pop
pop
mov
sub
cs
dec
xor
dec
adc
and
repz
dec
icebp
loopne
mov
pop
mov
mov
adc
pop
arpl
das
cmp
sbb
loopne
add
dec
push
cltd
pop
pop
leave
std
xchg
pop
test
fwait
lcall
jne
push
sub
dec
and
fistpll
inc
inc
enter
sbb
jl
jmp
add
cmp
rorl
in
fiaddl
clc
in
rorb
negl
inc
data16
inc
pcmpeqd
mov
mov
outsl
clc
lods
lods
test
inc
dec
shlb
push
cmpb
mov
lahf
xchg
stc
incl
bound
xor
pop
or
daa
jg
push
push
xchg
lret
sub
mov
cs
add
jmp
inc
push
daa
pop
sub
mov
ja
aad
mov
subb
mov
das
push
cmp
popf
push
in
and
jbe
rcll
pop
cmp
mov
rcrl
loopne
pop
stc
xor
push
ljmp
aaa
inc
movsb
dec
add
sbb
fidivrl
sti
loop
mov
out
cmpb
xchg
push
xor
or
scas
push
add
xor
cmp
sbb
pop
aas
cmp
repnz
adc
bound
pop
push
ss
xchg
add
stos
stc
movsb
mov
loopne
push
pushf
outsl
sub
push
xchg
js
sarl
cs
cwtl
sub
sbb
mov
or
push
inc
sub
ret
lret
bound
push
or
in
and
inc
ljmp
push
add
ds
mov
stc
dec
mov
loop
pusha
movsl
cmp
movsl
pop
jb
jl
mov
inc
clc
jne
add
lods
pop
test
inc
mov
sbb
out
iret
push
int3
mov
sarb
jbe
mov
inc
mov
test
mov
or
imul
jae
mov
cmc
mov
cmp
test
pop
cli
sub
push
mov
jmp
bound
lds
push
add
aaa
shr
push
inc
popf
cmc
adc
loop
ja
push
cmp
adc
xor
mov
rcrb
loopne
sub
dec
add
xchg
jmp
loope
ret
pop
mov
lahf
sbb
hlt
out
test
or
add
pop
and
jg
outsb
jp
movsl
push
dec
int
add
nop
repnz
mov
fidivl
in
dec
sbb
cs
dec
xchg
dec
cmpsb
jbe
pop
pop
daa
je
xchg
shrb
loop
in
popa
mov
in
mov
dec
aaa
std
cmp
and
push
test
pop
ret
xor
push
ds
roll
loop
sub
jle
and
or
outsl
push
icebp
shrl
scas
roll
into
dec
aad
jno
shlw
push
ds
push
bound
lds
cmp
sbb
sub
imul
sbb
lds
jmp
orb
pusha
fcmovne
out
cmp
iret
jne
cmp
mov
push
cmp
push
jl
push
inc
xchg
pop
pshufw
jmp
hlt
xchg
sbb
outsb
and
repz
jnp
mov
inc
xor
cmp
ret
movsl
xchg
push
cmp
adc
adcb
outsl
xchg
push
imul
push
mov
jle
sarb
aas
and
or
cmp
sub
or
add
push
pop
call
sbb
jne
dec
and
mov
mov
pop
in
inc
ret
and
pop
hlt
cld
into
fcoml
arpl
ret
out
sbb
notl
xchg
and
xchg
aam
pop
test
sbb
dec
push
test
dec
mov
sbb
les
pop
mov
mov
xchg
mov
iret
push
xchg
movsl
and
pop
stc
rolb
or
jo
dec
lods
lods
lret
adc
xor
adc
inc
pop
jo
mov
push
add
pushf
adc
mov
add
pop
sbb
dec
lret
jae
scas
pop
or
xor
out
aad
or
imul
dec
sbb
lahf
or
xchg
outsl
dec
cmp
mov
test
xchg
dec
mov
test
test
cmp
gs
jnp
icebp
adc
push
xchg
loopne
filds
daa
fisttps
adcl
push
jmp
lret
fs
js
cs
pushf
outsl
push
test
popa
in
repnz
inc
shr
inc
jnp
adc
jp
inc
xor
push
out
bsr
pop
push
in
pop
xor
push
lds
cmp
jge
mov
jmp
mov
push
mov
out
nop
js
pop
dec
stc
xor
mov
dec
sub
pop
scas
js
mov
inc
rorb
jno
jle
std
es
push
mov
and
in
jp
adc
jae
loopne
push
mov
daa
jmp
jns
adc
cmp
push
xchg
inc
mov
negl
or
fdivrl
imull
dec
test
bound
jl
and
call
test
lret
in
sbb
lock
sub
jp
jmp
sbb
dec
and
lret
repnz
pop
xchg
imul
ret
cmc
push
lods
fimull
mov
cmc
out
push
and
xor
sbb
or
out
mov
pop
adc
pop
sub
data16
lahf
or
cmp
xor
push
cmp
es
mov
test
repnz
mov
out
dec
xchg
shl
loop
adc
mov
in
add
jne
adc
sub
mov
aas
add
imul
jnp
add
mov
cmp
jp
cmp
imul
sbb
shl
mov
enter
xchg
leave
push
cwtl
xlat
clc
pop
fnsave
arpl
sti
test
les
rorb
rcr
add
jns
repnz
shrb
test
xor
mov
shrb
fstpt
cmp
in
inc
shrb
push
push
pop
rcrl
cs
sbb
push
push
push
push
add
jo
inc
pop
push
mov
mov
jmp
subl
rcrl
and
push
mov
cmp
into
rorb
push
push
jge
mov
shl
addb
mov
cmp
fs
dec
test
sub
mov
call
xchg
xchg
sti
push
mov
add
bnd
push
mov
add
test
adc
jge
out
into
xor
iret
sub
and
jmp
adc
sbb
push
scas
fimuls
pop
adc
sti
xor
jmp
cmpb
in
pop
xor
mov
fucomp
and
lods
adc
aaa
in
adc
stos
add
mov
int
mov
mov
aad
inc
cmp
mov
or
movsb
sub
adc
and
mov
lcall
cwtl
add
cli
add
push
repnz
lret
insb
lods
xor
xchg
push
stos
sbb
fwait
inc
push
test
sub
dec
les
dec
adc
mov
jo
mov
add
jbe
mov
and
adc
lahf
add
pop
push
imul
or
push
out
adc
mov
jl
pop
fsub
jmp
ror
push
xor
gs
test
or
bound
xor
pop
push
sahf
jmp
dec
push
in
jle
mov
comiss
dec
lahf
or
or
adc
sbb
add
push
adc
or
and
sub
jb
pushf
xchg
add
fwait
mov
dec
jmp
scas
or
hlt
mov
mov
cwtl
mov
xor
aad
shl
aas
loope
sbb
rolb
push
jmp
scas
sub
and
dec
push
insb
xchg
pop
jmp
mov
mov
out
lret
inc
and
pop
xor
sub
fisubrl
testl
pop
push
in
shlb
mov
clc
and
aam
aam
nop
xchg
popa
sub
mov
shrb
cld
xchg
imul
fld
mov
les
shrl
or
add
icebp
dec
add
fsubs
lahf
cld
cli
cltd
pop
push
add
bound
and
in
lock
pop
std
gs
or
mov
xor
fdivr
and
dec
and
popa
imul
mov
lock
pop
lahf
or
repnz
xor
mov
sahf
sbb
or
inc
lret
out
add
add
mov
mov
sub
dec
add
fmull
pop
jbe
lods
pusha
imul
pop
lret
out
add
test
sub
shlb
inc
movsb
loopne
sub
jmp
psubusw
icebp
push
jmp
popf
adc
in
nop
dec
arpl
add
fsubrs
outsb
dec
aaa
sub
xchg
pop
dec
lods
notl
pop
mov
push
and
mov
mov
xlat
push
mov
adc
adc
inc
sub
or
push
cltd
fsts
imul
jg
inc
jae
and
mov
popa
jg
mov
test
adc
movsb
aaa
cwtl
loopne
mov
push
pop
pop
addb
dec
fldt
pushf
arpl
mov
pop
mov
xor
xchg
sub
jmp
xchg
pop
xlat
clc
inc
pop
les
sub
push
inc
subl
sbb
ja
adcb
test
pop
clc
ret
cmp
es
add
adc
stos
mov
rcll
imul
and
cmp
mov
sbb
mov
mov
pop
cmp
jle
mov
daa
lods
and
cmp
add
out
icebp
push
pop
and
pop
int3
and
ret
or
insb
cli
gs
and
dec
rcrl
jle
jb
or
push
dec
rcll
adc
ja
lea
mov
lods
repz
pop
xchg
not
leave
or
jne
addr16
add
aas
cmp
or
push
dec
fwait
sbb
imul
add
adc
dec
test
or
repz
push
stos
icebp
out
popf
inc
popf
mov
add
or
jmp
dec
or
nop
add
icebp
dec
jae
mov
mov
filds
testb
xchg
add
lahf
subb
mov
in
faddl
dec
pusha
imul
scas
add
icebp
sti
and
arpl
dec
lods
pop
push
scas
call
mov
add
jmp
xor
in
xchg
xchg
orb
sti
inc
adcl
clc
cld
pop
mov
mov
xor
cmpsb
adc
dec
and
push
mov
mov
sbb
add
hlt
adc
or
inc
hlt
push
push
xchg
jbe
sbbb
push
dec
jle
and
jnp
stc
lock
out
add
adc
pop
push
int3
lods
movsl
adc
dec
loopne
push
adc
fmulp
dec
cmpsl
sti
fmulp
and
inc
xchg
add
in
imul
mov
cmp
pop
js
mov
xor
pop
test
or
pop
bound
out
lret
shl
ret
shrb
sti
out
cmp
or
adc
push
pop
xor
xchg
sub
pusha
adc
mov
insl
pop
sbb
adc
mov
push
daa
jmp
push
rolb
imul
add
clc
loop
sub
pop
repnz
lret
lock
mov
stc
and
push
pop
push
sub
rcrl
push
sub
shr
or
sub
jge
pusha
shrl
mov
mov
out
push
cmc
or
aad
data16
xor
das
mov
insb
cmp
mov
shr
inc
sub
out
mov
xor
and
adc
jp
xchg
pop
and
cmp
cmp
cmp
jno
mov
iret
lods
pop
dec
inc
pop
testl
add
mov
addl
sahf
subb
push
in
mov
inc
int3
add
data16
daa
fiadds
xchg
fstl
push
or
and
cwtl
test
push
les
adc
aas
mov
jmp
push
cmp
or
push
mov
pop
xorb
lret
cmpsb
mov
sbb
divb
xchg
jne
mov
aas
stos
out
xchg
jb
push
add
adc
mov
orb
or
ja
dec
or
sub
pop
cmpsl
shlb
iret
mov
xchg
pop
push
subl
xor
scas
pop
push
or
push
nop
or
adc
add
pop
js
mov
js
pop
cmpsb
adc
push
stc
mov
jmp
mov
nop
cmp
rolb
nop
sbb
shlb
loop
shl
inc
fs
jmp
movsb
mov
cld
and
or
sub
lcall
pop
sub
sbb
xchg
not
xor
jo
and
data16
xchg
cmp
fwait
mov
int
mov
lea
add
shl
jge
jne
daa
and
jl
xorb
nop
roll
mov
ret
mov
or
ror
repz
inc
ret
test
or
or
subl
jecxz
loop
jl
ret
or
ss
arpl
loope
push
push
push
addr16
and
mov
add
subb
and
repz
pusha
push
jnp
pop
lcall
and
mov
or
call
add
leave
mov
sahf
push
cmp
mov
xor
dec
sti
rclb
sub
loopne
pop
std
jns
push
jo
mov
xchg
pusha
data16
out
add
mov
insb
xchg
lods
bound
xor
pusha
mov
or
jmp
sarl
addb
shlb
jno
or
filds
add
sub
cmpsb
cmpsb
cmpps
adc
jle
adc
std
add
subl
rcrl
mov
loop
shlb
inc
cmpl
xchg
imul
and
pop
fidivrs
addb
jg
fwait
jmp
dec
pop
xor
ljmp
jnp
icebp
jmp
lods
ljmp
inc
imul
iret
jb
xchg
cld
or
lds
fs
leave
pop
cmc
adc
add
iret
push
adc
jmp
mov
xor
cmp
outsl
push
mov
insb
mov
adc
out
xlat
xlat
jo
sub
dec
rorb
dec
mov
loopne
pop
jmp
jbe
ret
inc
and
sub
cmp
xor
cmp
mov
hlt
arpl
pushf
scas
pop
mov
push
dec
cli
rorb
lods
sub
imul
inc
jg
rcrb
call
stos
and
or
imul
lods
jl
iret
push
inc
add
pop
inc
scas
nop
pusha
iret
jne
jmp
mov
push
and
fldcw
fs
dec
dec
repnz
add
push
push
in
pop
lret
adc
dec
and
mov
mov
mov
enter
rol
adc
fadds
inc
inc
test
test
push
cld
lds
adc
scas
push
jo
push
iret
jmp
js
jmp
imul
inc
popl
dec
jb
orb
popa
popf
ret
mov
xor
xor
push
popf
dec
cmp
sbb
xchg
add
push
sub
xchg
sbb
jo
daa
push
iret
jl
das
dec
jo
rcll
andnps
xor
cli
xlat
fnstcw
mov
or
das
mov
jnp
xchg
xchg
fistps
ss
fidivl
jp
sbb
mov
mov
inc
jo
xchg
jl
pop
stc
cmp
xorl
pusha
cmp
fildl
inc
popf
push
mov
pop
dec
aad
mov
rclb
test
cli
add
xor
jnp
add
js
es
sarb
add
jmp
jae
pop
and
cmpb
add
int
xchg
ja
jp
push
mov
xlat
push
mov
jb
xchg
and
pop
push
jmp
stc
testb
and
mov
add
popf
pop
jo
mov
add
inc
jmp
call
cmpsl
mov
mov
leave
iret
mov
mov
push
sahf
xor
aam
pusha
inc
inc
loope
gs
pop
mov
jg
rclb
je
out
iret
and
pop
sti
mov
adc
mov
nop
cmp
aaa
cmpl
ljmpw
stos
mov
push
lods
sbb
insb
mov
pop
jmp
push
stos
push
vmovdqa
leave
mov
bound
mov
sub
mov
add
xor
jbe
inc
shll
or
les
les
les
xor
adc
or
pop
arpl
jnp
and
lret
lds
arpl
clc
rol
jg
push
mov
xchg
xchg
push
or
pop
aam
jne
push
out
push
jmp
std
mov
jmp
int
jl
pop
add
xchg
sub
icebp
cmp
mov
adc
cwtl
mov
sub
je
ljmp
jmp
mov
cmc
inc
fimuls
stc
push
inc
fwait
idiv
and
add
and
jmp
outsb
or
icebp
movsl
dec
mov
pop
or
and
push
mov
lods
or
pop
pusha
test
cmp
add
jge
rcrb
push
and
outsl
xchg
push
mov
enter
mov
daa
jmp
test
hlt
std
lret
dec
mov
mov
sub
mov
cmp
insl
mov
mov
out
xor
aas
push
and
xchg
test
ret
addr16
mov
xor
cmpsb
or
testl
pushf
push
imul
inc
orb
adc
pop
jo
popf
xlat
push
push
pop
loop
daa
xor
ret
orb
fs
pop
push
stc
add
roll
mov
lret
adc
mov
adc
fiadds
xor
push
lret
or
leave
notl
lret
adc
and
push
cmp
inc
ljmp
fs
fs
push
xor
add
xor
js
idivb
mov
insl
inc
pop
or
or
pop
notl
cld
add
or
sub
sbb
sub
add
sub
add
pop
and
add
jo
mov
clc
and
mov
in
scas
out
add
aaa
sbb
in
cmp
pop
sub
shr
pop
add
leave
lods
push
ss
add
mov
pop
or
mov
cmp
dec
mov
or
mov
sti
sub
pop
in
lahf
dec
in
jnp
push
add
imul
pusha
cs
dec
push
add
aad
loopne
lock
fiaddl
sbb
mov
rcll
inc
lds
es
orb
sbb
int3
or
mov
or
ficomps
adc
mov
add
and
pop
cmp
andl
xchg
pop
xchg
stc
jnp
push
add
xor
imul
mov
cwtl
push
mov
or
aad
mov
mov
aam
pop
mov
adc
scas
sub
inc
dec
pop
mov
ljmp
frstor
adc
loop
push
adc
mov
xor
stos
xchg
pop
inc
addl
add
sbb
jmp
repz
aam
jg
mov
xor
aaa
mov
xor
xchg
and
adc
dec
jmp
and
push
push
jmp
mov
jae
dec
add
pop
test
xor
lahf
push
cmovae
cmpl
jecxz
std
out
neg
add
sbb
lahf
aaa
push
or
xchg
push
cmp
jne
lock
sub
add
push
outsb
popa
pusha
rorb
and
xor
mov
fistpl
mov
pop
shl
add
add
sub
push
call
mov
cmp
pop
push
dec
outsb
jbe
mov
int
loop
sub
adc
movsb
sbb
lcall
aam
cs
pop
call
lock
and
sarl
cmp
mov
sbb
add
xor
aam
shl
xchg
mov
lret
push
test
shl
das
xchg
dec
and
sbb
jns
mov
sub
pop
rcrb
mov
cmpsb
lahf
adc
dec
dec
jle
or
push
xor
pop
adc
pop
xor
and
out
or
test
jl
outsl
xor
jbe
fldenv
and
dec
outsl
rclb
in
add
repz
sub
fdiv
fistl
pop
add
and
addr16
push
clc
mov
subb
cmp
dec
cwtl
movsb
dec
inc
mov
repz
adc
shl
aaa
nop
loop
and
and
jbe
xor
jmp
jmp
push
mov
xchg
add
sub
lret
sbb
std
sub
aas
ja
push
dec
sbbl
lock
or
xor
pop
cmp
insb
in
jge
jg
js
shll
xor
rclb
sub
sub
push
scas
jno
jmp
mov
and
push
decb
das
jmp
push
pop
push
inc
idivb
enter
mov
mov
or
stc
push
mov
pop
jne
loopne
push
jmp
pop
xlat
out
or
data16
rorb
test
lods
inc
mov
or
jecxz
addl
pop
idivl
daa
inc
and
push
mov
mov
cmp
cmc
lcall
xor
ja
push
rcll
add
mov
mov
xor
repnz
mov
sti
push
xchg
or
inc
cld
cmpsb
and
pop
push
cwtl
mov
das
cli
cwtl
mov
cmp
push
movsl
sbb
mov
add
mov
push
push
adc
sbb
jmp
out
add
out
das
jmp
sbb
and
stc
cwtl
push
cmc
mov
insb
sub
imul
outsl
lock
lahf
push
mov
push
push
arpl
mov
dec
pop
nop
xchg
mov
movsl
cmp
jmp
jnp
incl
push
gs
add
fstpl
ljmp
jmp
dec
and
jmp
mov
pop
mul
iret
push
jno
pop
push
cld
xor
adc
push
rolb
mov
dec
jl
pop
das
push
add
push
add
jmp
pop
lock
add
out
cmp
dec
std
test
or
adc
fildll
jmp
mov
fcom
xchg
dec
lock
mov
sub
pop
jmp
shl
cltd
inc
xor
push
int
enter
sub
jmp
sbb
daa
out
add
call
fiaddl
insb
cmp
push
dec
je
dec
lahf
cmp
add
mov
jle
lock
cwtl
cmpsl
jl
loop
ljmp
repz
xchg
gs
or
fs
shlb
xchg
std
mov
je
jae
dec
loopne
jecxz
adcb
push
jmp
sub
ja
leave
stc
jge
stos
loope
push
icebp
xor
or
aaa
repz
fwait
cmpsb
cmp
ret
das
call
jo
sbb
push
add
push
filds
push
cmp
jmp
or
sub
je
push
std
hlt
dec
adc
fmuls
pusha
rcrl
jge
jg
xchg
and
mov
push
std
add
idivl
dec
adc
loop
stos
call
sbb
ret
sub
clc
and
sbb
das
imul
inc
add
inc
or
int3
adc
stc
pop
mov
insb
push
xchg
addr16
add
daa
sub
test
inc
loopne
adc
mov
mov
add
pushl
inc
decl
lret
push
adc
sub
out
jmp
fstpl
pop
imulb
xchg
int3
in
mov
pop
lcall
aas
mulb
loopne
mov
mov
inc
inc
pushf
push
and
cmp
roll
push
mov
adc
cmp
pop
sti
sub
ficoms
movsb
das
pop
fnsave
jno
fs
inc
repz
xchg
push
loope
inc
imul
push
push
cld
sahf
daa
enter
test
or
sub
rolb
and
xchg
ret
xor
loopne
cs
andb
inc
push
add
push
jo
js
jne
pushf
imul
jmp
jae
dec
add
test
pop
add
jmp
pop
pop
mov
sub
mov
dec
stc
sbb
sti
gs
cli
icebp
sarb
xor
push
pop
jmp
hlt
push
cmp
loopne
pop
add
sub
push
inc
std
push
enter
pop
adc
jmp
or
push
xchg
push
pop
leave
mov
mov
pusha
cmp
les
decl
dec
add
lcall
or
cmp
leave
lds
jmp
sub
add
push
gs
xchg
les
stos
loop
sarb
sub
sub
scas
lret
mov
pop
jne
shl
dec
mov
push
fisubl
loope
xchg
push
aas
push
ljmp
jmp
mov
das
mov
jbe
inc
outsb
mov
adc
xchg
mov
add
jle
scas
cmp
and
scas
in
mov
mov
dec
sub
xor
iret
lds
adc
out
decl
shl
inc
fs
stc
mov
cs
dec
enter
in
insl
add
pop
push
pop
test
or
push
scas
adc
stc
sldt
jmp
jne
push
push
jmp
fcomps
jp
and
add
cmp
enter
adc
dec
add
pop
adc
fdivrl
pushw
jmp
enter
imull
or
enter
jl
insl
cmp
mov
cld
imul
sbb
adc
push
andl
inc
adc
jmp
mov
ret
pop
outsl
out
adc
inc
dec
add
outsl
int3
int
inc
inc
cs
or
mov
lret
pop
adc
or
pop
inc
fcoml
stos
adcb
ja
lds
lcall
icebp
jl
das
or
pop
mov
dec
testl
sbb
and
and
xchg
add
orl
cs
lcall
xchg
mov
mov
repnz
mov
mov
mov
add
jmp
jecxz
insl
xor
or
mov
mov
push
daa
mov
pop
dec
orb
fdivl
mov
mov
sbb
imul
push
in
jmp
cli
std
sbb
cmp
add
pop
push
xor
xor
ja
mov
sbb
sbbb
addr16
mov
push
jb,pn
incl
mov
push
cmp
dec
jnp
loop
cli
pop
ljmp
dec
sub
or
cmp
push
neg
sub
mov
adc
add
sbb
pop
add
pop
test
xor
popa
jmp
xchg
inc
xchg
dec
test
ljmp
mov
subb
es
cmpsl
mov
mov
mov
and
pop
pusha
sbb
jae
push
cmc
inc
sbb
fs
nop
jecxz
xchg
ret
imul
push
int
lret
inc
bound
add
lds
std
movsl
add
not
mov
add
push
jmp
aaa
dec
mov
mov
push
push
hlt
sub
or
jmp
adc
aam
shl
mov
in
mov
inc
adc
jae
adcb
ja
lods
cli
inc
add
inc
nop
outsb
pop
ds
ja
hlt
jnp
pop
push
sub
adc
pop
mov
cmp
shlb
adc
mov
xchg
jp
pop
xor
sub
or
xchg
sbb
ffreep
lret
ss
mov
sbb
add
or
sub
or
or
shll
xor
dec
adc
insl
shrb
inc
jne
sub
insb
popf
jns
mov
mov
arpl
mov
sub
pusha
push
mov
mov
lods
incb
out
jl
ds
call
dec
push
pop
ret
jo
pop
sbb
mov
dec
cs
icebp
or
xchg
cmp
jge
cmc
dec
adc
xor
ror
jp
aam
mov
in
and
iret
or
fstpt
clc
cs
add
shr
inc
cwtl
rclb
divb
jmp
rolb
mov
mov
inc
rclb
add
pusha
fnstenv
lret
add
sbb
mov
lea
or
adc
push
mov
lods
cmp
jle
or
pop
lahf
in
jmp
push
mov
mov
jmp
and
pop
mov
ds
mov
hlt
and
adc
stc
cli
add
stc
jl
jb
sub
hlt
dec
adc
ss
pop
addb
xchg
push
sub
push
sub
pusha
adc
fimuls
jp
lret
mov
inc
rorb
jo
ret
and
xchg
fistps
mov
or
ja
adc
fildll
and
daa
outsb
loopne
out
push
or
sbb
mov
and
gs
push
jmp
mov
push
inc
xchg
xlat
dec
sub
clc
adc
fidivs
test
popf
sbb
shlb
mov
leave
ret
push
push
das
add
pop
dec
mov
add
jbe
mov
hlt
inc
pop
lcall
pop
adc
pop
ret
mov
rclb
lods
mov
jne
jg
shl
sbb
nop
push
inc
rcrb
mov
push
xchg
jns
lods
jl
repnz
inc
hlt
dec
cltd
pop
test
hlt
mov
popa
mov
mov
ret
push
mov
je
add
ret
jecxz
lret
xchg
pop
push
test
push
push
ds
lahf
sahf
xchg
out
adc
ljmp
mov
rcrb
dec
sub
imul
and
and
jmp
iret
repz
jne
pop
adc
jg
cmp
or
imul
dec
pusha
movsl
aad
orb
pop
mov
fwait
icebp
lahf
and
dec
mov
pop
nop
and
push
das
cs
fnstcw
aam
add
stc
jmp
in
add
sti
cld
or
loop
pop
or
rclb
arpl
mov
add
adc
in
mov
test
push
and
aaa
filds
add
cmp
xchg
dec
push
dec
jb
lahf
subb
xor
mov
cmp
fcomps
js
nopl
jge
xor
lcall
push
sbb
mov
cld
sarl
cmp
jns
push
loopne
repnz
outsb
dec
xor
shrl
jmp
fcoml
pop
inc
sbb
inc
not
jae
adc
add
or
push
adcb
cmp
mov
scas
lods
jb
jle
add
add
dec
dec
fadds
ret
push
jo
and
das
xchg
testl
cmp
pop
adc
out
push
and
mov
or
pop
pop
sub
stos
lret
jmp
cwtl
inc
shrb
cld
sbb
out
add
sbb
lock
and
jmp
mov
xor
loope
dec
sahf
push
inc
push
ret
roll
imul
aad
add
mov
sub
dec
mov
sub
cmpb
lock
cmp
loop
inc
xlat
xor
cmp
mov
adc
xchg
js
and
sti
out
call
in
mov
mov
cmp
push
add
and
push
adcb
into
cwtl
andb
add
das
or
and
push
scas
sub
push
jecxz
jns
inc
xchg
test
fwait
and
add
or
cmp
loop
mov
data16
arpl
inc
leave
push
cmp
mov
in
shrb
pop
hlt
nop
jge
lods
arpl
pop
push
xchg
sbb
push
shrb
dec
fwait
or
jo
mov
cli
pop
add
add
mov
pop
inc
pop
push
shlb
or
sbb
nop
fildl
cld
test
test
aam
inc
and
adc
cld
sub
xor
xor
das
sbb
push
inc
filds
mov
add
pop
jmp
pop
into
mov
inc
mov
inc
mov
dec
mov
mov
add
xchg
and
ljmp
jmp
fbstp
scas
adc
push
push
push
ljmp
mov
shl
add
sbb
lock
scas
popf
adc
loope
cmp
xchg
xlat
xor
xlat
ret
push
pop
pop
pop
push
mov
enter
sub
inc
mull
sub
rclb
xchg
test
mov
mov
mov
xlat
pop
jne
fst
pop
loop
mov
cmp
inc
subb
jl
push
dec
movsb
loopne
mov
call
add
aas
les
hlt
adc
jns
push
gs
arpl
scas
adc
and
js
mov
jnp
adc
pop
push
pop
cmc
js
fcmovnb
fnstenv
push
mov
insb
add
xlat
jg
xor
lret
add
mov
repnz
cmp
adc
rcl
out
lds
or
scas
fs
ja
pop
xor
xor
sub
mov
add
add
fnstenv
jl
mov
push
in
jno
xchg
dec
push
sbb
scas
aad
dec
inc
pop
and
ret
out
jmp
loope
data16
xchg
and
in
and
out
data16
pop
push
inc
push
sub
dec
dec
mov
or
jge
addr16
loope
aaa
sub
xchg
adc
ljmp
push
test
pop
jmp
notl
push
lret
push
sub
js
call
push
xchg
pop
pop
dec
add
or
push
fisttps
push
pop
sbb
adc
push
push
inc
stos
or
pop
pop
or
jnp
mov
sub
inc
clc
es
jnp
push
push
pop
testl
add
push
shl
and
incb
mov
push
push
mov
loop
cmp
call
das
fadd
stc
and
shlb
cmp
xor
push
nop
int3
jp
pop
push
mov
pop
add
xor
aam
xchg
xorb
mov
in
cmc
pop
loopne
xchg
in
je
mov
fisubs
mov
add
test
mov
add
subl
jmp
pop
ljmp
ret
lock
lods
push
mov
test
inc
jmp
xchg
pop
jo
xor
push
inc
out
cmp
jge
mov
out
cmpsb
inc
sub
push
jle
das
pop
sarl
or
clc
das
fisttpll
xor
push
sbb
fstpl
ret
adc
dec
adc
out
sub
jp
push
shlb
inc
and
pop
or
ficoms
subb
jne
rorb
ja
sub
or
adc
push
and
dec
or
mov
push
xchg
les
cmc
add
loopne
sub
add
cmp
adc
fmuls
sbb
pop
adc
adc
inc
es
dec
adc
add
mov
rol
ss
shr
imul
int3
and
rcrb
xor
clc
cwtl
and
out
or
aas
sti
loope
icebp
xor
fstl
outsb
push
cmp
pop
shl
and
mov
es
imul
popf
andb
cmpsb
fnstsw
daa
loopne
aam
outsl
addb
pop
int3
cmp
mov
or
jmp
jge
out
ljmp
cli
sbb
mov
pop
stc
popa
sub
fnclex
add
call
mov
pop
adc
jmp
add
mov
adc
or
rol
test
add
sub
or
pop
sub
sti
push
add
pop
mov
shr
das
jmp
ret
ja
jne
or
pop
fiadds
test
sbb
or
in
pop
aaa
pop
xchg
clc
or
mov
xor
push
mov
cmp
outsl
adc
jmp
notl
adc
push
addr16
das
or
jo
cmp
fdivrs
push
inc
xchg
jg
xor
sub
lcall
jmp
push
pushf
or
mov
or
lock
push
inc
loopne
adcl
sub
add
mov
sub
cmpl
jl
divl
jne
push
pop
aas
pop
jmp
outsl
cmp
fs
stos
jne
mov
test
pop
lds
lea
mov
xor
call
rorb
sub
mov
imul
pop
cmpb
loopne
cmpsl
roll
dec
mov
shlb
jmp
cwtl
jo
rorl
push
cmp
mov
jmp
xor
sbb
shrl
push
addb
pop
mov
jo
ljmp
pop
rolb
ret
ljmp
inc
lea
cmpsb
daa
dec
xor
mov
jno
ret
add
inc
test
pop
repnz
lret
or
stos
push
or
imul
jge
mov
add
push
xchg
add
sarl
test
sbb
mov
sub
jle
testb
sti
and
or
lret
jmp
out
xlat
or
add
mov
pop
movd
cmp
adc
iret
pop
cld
mov
sbb
cmp
inc
je
pop
and
jmp
xor
repz
test
jge
mov
pop
mov
outsl
add
mov
jmp
jne
lahf
xchg
daa
daa
jp
sbb
mov
mov
daa
ds
insb
cmp
in
das
mov
decl
mov
add
or
xor
test
loopne
dec
roll
jmp
xor
pop
adc
adc
push
push
ds
in
ret
xchg
dec
pusha
ljmp
push
in
cmp
lret
cli
cli
or
mov
mov
xchg
sti
add
cmp
add
dec
dec
hlt
cmpsl
jmp
out
xor
add
xchg
mov
jge
adc
pop
add
adc
xchg
cmp
lret
sub
pusha
add
pop
das
test
mov
orb
pop
push
bts
mov
mov
add
pop
ja
lods
xorl
adc
ja
stos
dec
dec
sbb
mov
push
jmp
and
cmpsb
insl
es
or
push
mov
push
js
ss
sbb
out
ret
inc
aad
aad
or
mov
in
mov
xchg
insl
cmp
movsb
add
mov
push
pop
shl
stos
mov
or
les
push
repnz
pushf
lahf
push
icebp
dec
inc
gs
jg
js
lcall
pop
inc
mov
iret
sbb
xorb
sbb
or
inc
movsb
or
push
push
pop
stos
sbb
dec
push
cmp
fucomi
popf
dec
repnz
das
fsubrl
addr16
fistps
test
xor
adc
mov
jb
mov
sub
notl
mov
xchg
pop
ljmp
push
push
mov
dec
decb
and
cmc
add
push
ret
daa
sarl
or
push
add
clc
mull
adc
lea
call
inc
cli
testb
xor
mov
pop
loopne
adc
jne
icebp
aam
or
cld
ret
repz
hlt
sbb
push
jmp
mov
test
jmp
push
inc
jb
dec
in
or
inc
and
iret
jecxz
out
lock
shr
xor
je
xor
mov
lret
or
aad
pop
sbb
test
jns
fsubrp
jbe
cmp
mov
stc
pop
aam
add
dec
popf
dec
push
add
clc
pop
push
fisttpll
add
sub
pop
adc
mov
or
xor
and
pop
fcom
cmp
xor
adc
mov
inc
mov
xor
imul
out
roll
jmp
jg
sub
test
sub
call
add
dec
xor
repnz
or
add
jge
aad
sub
hlt
orb
mov
add
inc
pushf
dec
idiv
shlb
sub
or
adc
lea
fs
int3
pop
adc
xor
aaa
jbe
jmp
int
and
fistps
hlt
jno
push
push
add
repz
xchg
shl
jmp
jl
mov
push
push
pushf
test
in
mov
or
rorl
jno
icebp
jg
sbb
lret
shlb
mov
add
out
xchg
jge
js
fisubs
push
arpl
mov
mov
stos
lret
aad
cmpsl
push
shr
mov
aaa
or
enter
sbbb
dec
mov
adcb
lods
sbb
or
inc
add
jmp
arpl
std
adc
rol
lds
sub
push
cmpb
xor
out
sub
xchg
lret
push
mov
jo
stos
cmc
jns
mov
cmp
xor
push
or
std
testb
or
mov
inc
or
std
xlat
in
data16
adc
imul
aas
add
popa
jb
add
ss
insb
aas
lods
hlt
out
ret
sbbl
or
pushf
pop
pop
ljmp
push
inc
sbb
shr
xor
cmpsb
jge
jmp
and
mov
xor
repz
jecxz
das
or
inc
add
mov
and
pop
inc
push
mov
mov
jmp
or
mov
jno
jmp
movsb
add
icebp
pop
lea
mov
movsl
xor
mov
xchg
mov
push
icebp
out
inc
push
pop
xchg
jle
jp
mov
push
jl
test
lcall
push
mov
sbb
leave
mov
jecxz
decb
and
mov
imul
jl
or
ds
dec
repz
cltd
xor
pop
aas
cmp
push
stos
and
inc
ret
xchg
and
hlt
push
jp
faddl
fsubs
out
adc
or
push
jmp
fistl
add
or
xchg
push
mov
pushf
mov
int
or
ja
dec
dec
pop
push
push
and
fisubrl
scas
push
pop
inc
enter
add
pop
cmp
fs
sub
add
sub
popa
mov
sub
pop
mov
sub
inc
mov
add
pop
jmp
pop
add
push
jns
add
inc
xor
lret
jmp
in
mov
in
jl
dec
sbb
xor
stc
clc
movsl
or
pop
sbb
push
add
fs
or
pop
mov
testb
test
cli
rcrb
jo
pop
sar
aaa
pop
imul
or
push
add
outsb
jecxz
pop
inc
fnstsw
clts
mov
sub
add
es
sub
sbb
push
mov
adc
sub
dec
into
jmp
movl
movsl
ljmp
repnz
inc
or
dec
pop
stos
fmull
ds
les
imul
outsb
mov
add
pusha
not
push
cli
push
xchg
mov
shll
jmp
jns
pop
popa
sbb
push
cmp
jbe
add
lods
mov
outsl
sub
or
add
mov
mov
ljmp
jg
pop
mov
ret
loope
push
mov
lcall
inc
addb
cmp
sti
xchg
sbb
dec
xlat
out
mov
daa
dec
arpl
or
push
xchg
adc
pushl
idiv
cwtl
cli
pop
jnp
mov
repz
push
and
inc
clc
sub
int3
push
or
inc
or
or
mov
push
push
jmp
ja
mov
cmp
cmp
cltd
repnz
shlb
jno
add
bound
jmp
popa
or
leave
mov
adc
sub
rolb
dec
test
add
push
sub
push
dec
pop
neg
jg
add
test
ja
mov
inc
ret
fildl
xor
rorb
lds
sbb
xor
lea
or
and
add
adc
adc
daa
int3
cwtl
pop
pop
dec
lret
push
je
add
sbb
jle
push
add
jg
jl,pn
add
jo
sbb
mov
mov
xlat
mov
push
adc
cli
jo
pop
ja
pop
aad
lods
testb
jmp
ret
add
inc
icebp
adc
or
ljmp
outsb
orl
lds
mov
fcoms
and
xchg
out
mov
leave
mov
ja
ret
push
and
mov
jns
pop
pop
sub
ja
push
cli
adc
adc
dec
add
cmpsl
push
lea
jmp
push
add
in
jo
and
add
stos
pop
add
inc
clc
loope
flds
mov
adc
lods
mov
into
aad
mov
inc
shl
mov
into
or
add
loopne
mov
cmpb
test
push
or
pop
dec
add
icebp
add
lcall
pop
or
icebp
push
dec
sub
or
inc
jl
pop
test
sub
adc
xchg
aas
mov
dec
add
leave
add
cmp
and
jnp
cli
roll
inc
lret
sub
xor
rorb
push
add
cmpsl
push
jno
xor
stc
stos
inc
clc
imul
cs
cmp
shrl
jmp
jbe
aad
test
mov
and
sub
leave
pop
pop
sbb
aaa
or
pushf
data16
mov
pop
movsb
push
push
adc
nop
push
or
mov
xor
test
or
gs
mov
test
inc
pop
inc
cltd
sub
lea
and
cmpsl
sub
push
cmp
in
jge
ja
mov
sub
addr16
jne
sub
loopnew
jl
xchg
lcall
or
lock
adc
jmp
add
filds
xchg
sbb
in
push
dec
pop
push
add
jle
add
lret
jecxz
out
idivb
sbb
inc
negl
lahf
push
sbb
push
out
imul
add
pop
xchg
xor
dec
adc
adc
sub
es
cmc
push
fxch
adc
in
push
add
inc
dec
das
orl
dec
mov
into
dec
or
xchg
or
xorb
mov
mov
scas
push
push
mov
jl
adc
push
sbb
adc
mov
lock
dec
lahf
push
mov
fstl
or
xor
jbe
cwtl
sbb
mov
fldt
fcmovnb
idiv
ds
xchg
adc
or
ret
add
jmp
repnz
push
pop
mov
decl
add
pushf
js
dec
fdivs
pop
add
sub
dec
push
add
dec
shl
rolb
test
mov
push
inc
loopne
subb
insl
leave
sbb
xor
sbb
add
daa
mov
or
shlb
mov
cmp
xchg
icebp
repnz
pop
cli
icebp
and
imul
cmp
or
pop
ret
sbb
int
add
das
or
or
leave
pop
aad
pop
and
in
inc
xor
out
dec
cli
push
adc
jp
daa
add
stos
jecxz
lds
pop
mov
imul
pop
pop
push
mov
mov
add
add
lods
popf
fisubrl
cli
addr16
hlt
or
test
xchg
jae
xor
das
int3
outsl
pop
inc
inc
cmp
jle
xor
dec
add
push
and
pop
xchg
sarb
hlt
incb
push
cmc
add
inc
repz
inc
add
adc
and
mov
jnp
cwtl
lret
or
sbb
loop
ds
sub
or
sbb
or
xor
ja
mov
push
cld
mov
adc
sbb
adc
int
subb
mov
bnd
xchg
inc
xchg
inc
adc
inc
jmp
cmovs
aas
pop
and
fcoms
mov
mov
lods
jl
jns
add
mov
testl
adc
stos
dec
jmp
or
pop
inc
into
popa
add
adc
cltd
fisttpl
jne
inc
mov
and
loopne
aad
fstl
xlat
cltd
test
es
icebp
jno
je
mov
mov
add
pop
inc
mov
pushf
sarl
les
fs
ret
or
dec
ljmp
icebp
hlt
xchg
cmp
or
outsb
sub
and
xchg
aam
imul
or
inc
mov
xor
add
je
pop
push
shll
mov
cmp
inc
mov
in
or
inc
or
cmp
or
or
push
mov
fdivrs
cmc
jl
dec
or
xor
jle
aas
loop
adc
jle
nop
add
dec
push
xor
or
xor
add
aas
dec
dec
inc
cltd
vmovsd
sbb
movsl
add
or
sub
int3
imul
inc
jno
das
pop
into
jmpw
or
pop
cmpsl
fcoml
add
adc
ret
adc
pop
inc
aad
cmp
in
add
icebp
sti
xorb
or
xor
pop
jmp
or
push
ss
outsb
inc
outsl
pop
add
out
xor
push
cmpsl
pop
test
icebp
dec
and
sub
std
mov
es
pop
fsubs
and
mov
scas
sub
cs
pop
call
sbb
push
jns
idivl
nop
lds
out
rorl
dec
push
adc
add
mov
mov
add
xchg
ret
adc
mov
push
rcll
lcall
mov
push
mov
gs
and
jl
not
add
xor
inc
jmp
fiaddl
sub
mov
add
or
int3
inc
sti
adc
or
dec
cmp
negb
mov
xor
sbb
sub
pop
nop
push
mov
xchg
cwtl
sbb
pop
pop
sti
dec
ficomps
mov
dec
add
adc
ljmp
cmp
inc
clc
test
inc
xor
mov
mov
jns
push
add
mov
add
sub
loop
insb
mov
stos
dec
popf
xlat
sbb
pop
push
popf
sbb
add
lcall
jmp
mov
cmp
notl
imul
lods
pop
bound
or
mov
xchg
in
mov
lock
bswap
inc
mov
sbb
adc
push
push
stos
add
or
fs
mov
jne
mov
lods
imul
jmp
push
add
call
push
ret
xor
popa
cmc
adc
mov
mov
and
xchg
dec
cmpsb
mov
pop
mov
mov
or
sub
ret
cmpb
js
cs
sub
inc
and
rolb
hlt
lcall
jmp
cwtl
sbb
outsl
add
in
push
idivb
pop
cmp
shlb
pop
dec
inc
adc
xchg
lret
inc
icebp
jnp
mov
mov
add
push
pop
sub
xchg
mov
jmp
popf
nop
add
jmp
push
cwtl
out
inc
insl
dec
fists
shld
mov
lods
xchg
dec
pusha
fcmovbe
pop
mov
jno
ret
sarb
push
rcrb
sbb
andb
mov
cltd
dec
fbstp
add
out
loop
pop
testl
movsb
adc
jae
imul
cmp
pop
mov
leave
add
mov
ja
lret
fstl
pusha
negb
ja
cmp
sub
xor
or
push
cmpb
jno
out
and
fistpll
adc
jns
jle
and
jecxz
mov
jns
xchg
ja
scas
or
iret
imull
cmp
push
iret
dec
push
movsl
xor
xchg
jnp
add
add
sti
push
dec
xchg
cmc
push
loop
cli
jbe
xchg
dec
or
mov
daa
jmp
mov
sub
int3
repnz
or
imul
inc
pop
xor
call
lods
rcrb
lahf
ljmp
sub
inc
inc
mov
test
push
pop
mov
mov
push
add
push
pop
sub
push
mov
dec
ds
lret
out
mov
adc
xlat
pop
pop
daa
pop
cs
cs
repnz
push
sub
in
and
cmp
xchg
fwait
and
push
hlt
stc
pop
and
or
ret
fbld
sub
mov
lret
lock
jge
aaa
cmovae
arpl
pop
mov
sub
push
ret
or
lret
lods
popf
jl
addb
add
adc
adc
dec
adc
add
xor
and
leave
jnp
jne
adc
mov
daa
or
push
xor
cmpsl
les
fdivr
andb
pop
sbb
ljmp
cmp
pop
cmp
and
sbb
arpl
clc
pop
push
aas
data16
aas
lea
dec
jns
fmuls
mov
jmp
sbb
notb
mov
mov
sub
pop
adc
or
stos
mov
sbb
inc
mov
mov
mov
icebp
push
push
sbb
and
aad
fadd
pop
push
sub
stos
add
sub
inc
fmulp
punpckldq
aam
pop
add
aas
arpl
shl
lret
hlt
mov
or
lods
fstps
cwtl
add
iret
add
or
mov
andl
adc
call
pop
repnz
fs
xchg
mov
push
sbb
adc
in
jo
or
inc
call
pop
mov
inc
jns
adc
aam
psllw
imul
in
test
ljmp
adc
xor
bound
sbb
or
inc
pop
cmc
pop
outsl
mov
and
mov
sub
ds
xchg
fisubl
jb
mov
and
sarb
sub
jmp
xchg
shl
push
mov
mov
lret
mov
mov
mov
add
or
repz
jno
sbb
outsb
sub
movl
pop
scas
bound
stc
jno
lret
stos
imul
jb
push
jle
in
xchg
xor
add
hlt
pusha
pop
or
cmp
sub
aas
or
sbb
push
in
sub
sub
mov
pop
adc
std
call
jge
xchg
dec
insb
push
add
cmp
adc
cmp
stos
add
popa
shlb
mov
fnsave
jae
sub
cmp
das
jo
or
push
pop
out
lods
xchg
mov
hlt
mov
sub
xor
addb
scas
je
pushf
jae
push
jns
addr16
loop
add
cmc
xorl
dec
in
nop
cmp
stos
in
fstp
inc
lods
outsl
xor
loop
pop
loop
pop
inc
inc
pusha
lret
xchg
xchg
push
sbb
pusha
out
jge
pxor
cld
add
aas
adc
scas
inc
lock
rcl
pop
cli
out
sub
pop
sub
pop
lahf
and
and
imul
mov
sub
adc
dec
pop
mov
aad
add
inc
test
orb
or
ret
jg
xlat
dec
or
or
iret
add
mov
dec
inc
lock
mov
icebp
pop
in
mov
adc
aaa
negl
mov
mov
push
scas
pop
mov
jle
mov
ljmp
jge
dec
dec
movl
dec
icebp
xor
mov
mov
cmp
cli
pop
mov
rorl
add
popa
jo
daa
jmp
sbb
dec
pop
push
cmp
loope
or
out
pusha
sub
sub
imul
mov
xchg
adc
scas
dec
lds
push
sub
mov
mov
sub
pop
push
aas
mov
scas
push
rcll
mov
mov
test
loop
lock
call
push
bound
incl
cmp
movups
jb
addb
add
push
sub
sub
mull
cmp
out
aad
addr16
cld
xchg
mov
sub
dec
mov
test
daa
push
push
out
test
inc
cltd
mov
repz
sub
push
popa
mov
or
xorps
aas
ja
cmpsb
add
xor
xchg
lret
or
test
and
add
iret
dec
push
adc
adc
and
or
call
inc
lods
pop
ja
inc
lods
clc
add
push
daa
mov
ds
push
pop
mov
fsubl
or
fadd
inc
test
cmpsl
mov
fisubl
push
jl
lcall
out
push
test
xor
subl
add
pop
jmp
ret
mov
rcl
ret
mov
xchg
push
pop
jnp
adc
xchg
div
sub
add
std
xchg
pop
xchg
repnz
mov
sbb
or
mov
jg
or
xor
jmp
loop
or
stos
sub
add
adcb
push
mov
js
mov
loope
movsl
or
rol
lock
neg
mov
loop
lret
sbb
mov
inc
in
dec
adc
shll
dec
call
adc
scas
xor
add
jle
mov
mov
add
xor
pop
add
push
int
call
add
mov
or
fisubrs
inc
inc
push
ret
and
jl
and
mov
inc
shr
out
dec
dec
std
pop
imull
mov
jmp
sub
push
push
pop
xchg
call
add
nop
sub
mov
mov
imul
mov
xor
dec
adc
addb
aas
jmp
xchg
add
ss
mov
mov
and
out
lds
out
jne
or
pop
movhps
scas
dec
or
xchg
pusha
mov
and
mov
xor
jo
sbb
xchg
mov
pop
add
mov
adc
fld
push
push
pusha
jo
nop
inc
lahf
add
xchg
and
int3
sub
and
xchg
jg
shl
push
push
es
aaa
push
pop
cmp
pop
sub
xchg
pop
jno
stc
loopne
imulb
sar
lea
gs
sub
xchg
fdivs
psubsb
or
jb
or
loope
push
jmp
cmpsl
mov
pop
idivb
sahf
movsl
subb
or
dec
add
or
daa
in
in
ds
mov
mov
pop
psrld
sbb
in
bound
daa
out
xchg
notl
xor
push
je
ljmp
loopne
inc
pop
bound
pop
cld
mov
pop
sub
cmp
cmp
je
loopne
xchg
call
pop
dec
fs
mov
cmpsl
dec
pop
scas
pushf
mov
xor
hlt
pusha
mov
popa
pop
or
push
xor
push
out
negl
push
push
call
rclb
sbb
push
in
mov
aas
aas
fisubs
inc
aam
jne
or
pop
ss
adc
shl
push
sub
sbb
sub
mov
mov
inc
pusha
cmp
sbb
repz
loop
andb
enter
adc
sub
mov
rclb
jmp
pop
aaa
xchg
cld
cld
and
out
insb
adcl
inc
pop
push
in
mov
and
sbbl
mov
les
add
mov
add
dec
inc
jmp
pop
mov
push
xor
mov
xacquire
dec
mov
or
add
mov
jno
push
dec
inc
stos
out
test
imul
out
inc
mov
test
out
jmp
cli
cmp
or
pusha
cmp
add
adc
dec
pop
mov
or
jmp
pop
add
xor
pop
add
add
push
mov
jmp
xchg
das
jle
movsb
mov
stos
xchg
or
out
xlat
mov
jmp
xor
inc
push
xor
add
cmc
sti
dec
jmp
cmc
and
aaa
and
idivl
mov
sub
mov
mov
sub
filds
dec
or
and
jnp
daa
subb
jmp
pop
movsl
call
jp
lods
rclb
es
stc
pop
decb
push
add
ss
mov
sbb
push
jmp
jb
into
and
pop
es
dec
leave
lahf
iret
movsb
jbe
sbb
ror
lock
pushf
add
and
insl
push
js
jmpw
sbb
out
push
daa
push
dec
mov
jbe
jmp
mov
pop
pop
jl
jb
inc
cmp
or
dec
rorl
mov
rclb
xchg
xchg
dec
mov
or
pusha
pop
mov
xchg
sbb
dec
adc
mov
rol
and
sub
cmp
mov
or
mov
mov
scas
insl
sar
or
cmp
adc
enter
or
jmp
scas
jnp
jge
je
mov
adc
jbe
les
pop
pop
sub
aam
jmp
sbb
mov
push
loope
and
and
xor
fldenv
xor
or
ljmp
ljmp
cs
xorb
repnz
jmp
lods
iret
shr
sbb
xlat
ret
cmpsb
mov
insl
xchg
sbb
sub
js
xchg
xchg
cmp
std
cmp
inc
cmp
mov
testl
mov
jmp
movsb
insb
cmovno
cs
daa
pop
test
sub
xor
add
add
add
xchg
cmc
mov
mov
cmp
js
popf
pop
incb
cmpsl
in
daa
add
leave
or
jmp
out
push
int
or
push
fs
cmc
negb
daa
not
cmc
or
add
call
jl
inc
xchg
js
popf
mov
roll
cs
add
or
mov
adc
aaa
scas
cmp
xchg
cmp
mov
xchg
pop
arpl
and
and
dec
mov
std
sub
in
jl
push
push
add
sub
data16
pop
jmp
jp
out
mov
rolb
jle
rcll
loopne
cmp
sbb
add
push
ds
fisttps
fcoml
in
pop
sbb
dec
push
ret
and
cmc
push
ds
rcrb
lods
mov
mov
sti
add
pop
mov
or
fs
icebp
pusha
jg
pop
cmpsb
mov
or
or
fbld
cltd
in
push
inc
sub
loope
loop
push
push
out
fcomps
jmp
out
fsubrs
dec
or
inc
cmc
mov
cs
sbb
add
push
jbe
mov
dec
adc
add
jnp
daa
pop
cwtl
std
jmp
mov
jle
pop
and
jmp
test
xchg
dec
and
or
mov
cli
pop
mov
outsb
sbb
aam
add
xor
pop
mov
xorb
movsl
pop
add
pop
sub
pop
pop
mov
aam
fcmovne
fcos
inc
sti
xchg
xchg
mov
add
dec
mov
mov
in
in
shll
inc
outsb
mov
outsb
adc
push
xchg
lds
jle
push
xchg
lock
dec
dec
push
call
in
in
in
ds
push
aaa
jo
scas
sbbb
push
fdivr
ret
pop
inc
imul
mov
push
repz
scas
or
pop
enter
xchg
roll
xchg
sbb
sbb
scas
std
mov
jge
pushf
or
and
in
test
mov
mov
clc
aas
dec
cmp
pop
jle
ss
add
and
dec
fdiv
cli
aas
outsl
jns
xor
sahf
rcr
mov
test
xchg
pop
int3
test
out
and
shll
xor
sub
js
mov
sbb
lret
jne
lds
les
std
ficoml
pop
divps
push
js
add
push
pop
mov
push
jecxz
fisubrl
sbb
jge
push
cmc
xchg
add
pop
dec
jmp
inc
ret
inc
mov
dec
mov
and
aam
mov
pop
int
inc
out
aas
cs
xor
pop
jmp
cmp
xchg
scas
pushf
rcl
sahf
mov
popf
add
lods
add
movsl
mov
enter
lcall
mov
call
fwait
inc
and
add
push
mov
mov
adc
mov
jp
inc
in
jg
adc
or
or
push
sub
push
pop
das
xchg
popa
lret
mov
das
mov
add
into
mov
xlat
push
mov
and
cwtl
cmpsb
pushf
data16
test
xlat
insl
cmp
push
mov
push
or
push
mov
stos
mov
add
or
pusha
cmc
iret
mov
pop
daa
and
test
daa
jno
das
std
adc
push
roll
inc
in
xor
sbb
shrb
or
push
mov
aad
out
nop
pop
add
fstpl
jmp
in
std
fistpl
out
dec
ljmp
cmpsl
cmp
inc
in
pop
and
daa
lcall
out
lahf
loopne
mov
mov
cld
push
push
and
pop
dec
inc
scas
out
push
adcl
sbb
dec
or
test
jnp
mov
mov
cli
shrl
loope
iret
nop
xchg
leave
jp
inc
add
fs
xchg
mov
in
adc
jp
scas
push
adc
aaa
mov
push
or
in
out
lock
push
scas
or
movb
push
push
leave
test
mov
dec
je
inc
imul
lds
gs
stos
test
dec
repnz
push
pop
cwtl
adc
sti
jg
aas
loope
ret
add
popl
ret
sub
xor
pop
mov
sub
jl
xchg
clc
mov
push
aas
jmp
add
in
es
mov
mov
mov
test
sub
popf
sahf
sbb
jmp
pusha
pop
push
pop
out
cmpsb
test
jae
hlt
push
push
sub
or
sbb
jmp
cmp
test
sbb
lret
loopne
repz
loope
or
dec
rcrb
lcall
mov
shll
shl
roll
rclb
jmp
fldcw
fcomp
sti
jns
push
add
adc
jmp
push
inc
pop
jp
in
ret
mov
jmp
lahf
pop
xchg
lods
dec
mov
cs
sbbl
add
and
pop
jne
add
mov
mov
push
or
jmp
mov
scas
es
aad
or
pop
movb
pop
sub
rcll
add
jae
adc
ret
test
loope
push
jmp
xchg
cmp
adc
cltd
pop
mov
lds
sub
or
push
mov
jmp
add
add
add
mov
or
mov
popf
dec
mov
pop
mov
push
jmp
movsb
pop
scas
sub
and
call
ljmp
popa
scas
and
cli
sbb
mov
iret
sarb
mov
fdivrs
dec
inc
xor
mov
loope
jg
je
pop
push
lea
das
sbb
hlt
fwait
imul
xor
pop
and
out
and
or
xchg
push
push
lahf
data16
xlat
and
jo
xchg
mov
int3
std
fwait
adc
inc
pop
cli
push
and
sub
push
sti
mov
push
je
xor
mov
out
pusha
aad
loopne
leave
jae
cmp
mov
xchg
dec
in
mov
adcl
dec
dec
add
in
or
cli
jbe
loop
xchg
or
sbb
mov
mov
test
sub
and
pop
pop
pusha
rolb
add
xor
jmp
hlt
cs
test
jmp
pusha
push
sub
mov
fadds
pop
jg
sbb
or
daa
xchg
outsb
mov
dec
lea
and
jne
icebp
push
jmp
pop
fnstcw
inc
mov
xchg
mov
add
mov
mov
pop
jmp
or
pop
or
pop
push
mov
sbb
mov
insl
xor
dec
loopne
mov
pop
cwtl
imul
add
inc
dec
push
mov
jmp
or
pop
mov
movsb
out
es
xchg
jmp
leave
add
rorl
and
jmp
push
pusha
pop
aam
xor
jl
inc
xor
dec
sub
iret
sbb
clc
shrl
js
inc
and
repz
pop
inc
clc
jae
clc
cmc
lidtl
stos
xchg
inc
xchg
test
add
pop
mov
std
mov
mov
inc
idivb
out
sub
pop
jne
xor
mov
in
cs
jmp
jb
inc
adc
aad
repnz
rolb
pop
mov
mov
mov
in
mov
rcll
xchg
pusha
cmp
loopne
arpl
stc
pop
xchg
stos
shll
cli
mov
inc
add
aas
ljmp
pop
scas
jbe
xlat
mov
imulb
pop
ljmp
or
xor
sub
sbb
jbe
xchg
std
inc
or
adc
loopne
aas
push
mov
das
in
in
adc
cmc
inc
fisubs
mov
scas
ret
mov
jmp
jle
or
xchg
in
add
rolb
outsl
and
dec
dec
out
adc
ljmp
daa
push
in
lock
pop
mov
mov
adc
subl
stos
and
jge
or
xor
js
pop
clc
out
add
sbb
imul
cmp
cmpb
xor
adc
adc
add
add
push
clc
hlt
leave
pop
cmc
jae
leave
loopne
mov
movsl
mov
jno
mov
push
repz
testl
cli
or
negb
fildl
sub
negl
orl
add
mov
lcall
movsl
out
movsl
cmc
cld
add
enter
pushf
pop
xchg
inc
loopne
ljmp
dec
mov
int
adc
cs
clc
shl
jmp
rcl
popf
int3
sub
mov
dec
gs
mov
pop
movsb
gs
jae
push
xor
xchg
outsl
loopne
sub
inc
repz
jmp
subb
fs
or
fists
jecxz
pop
into
dec
dec
mov
and
push
ds
sbb
testb
fnstenv
adc
jg
rol
bound
sbb
xor
xlat
ds
inc
dec
pusha
xlat
notb
push
movsb
out
aas
enter
adc
out
xor
or
sub
mov
dec
sbb
adc
push
ja
incl
mov
dec
fnstsw
add
and
adc
dec
je
or
pop
in
pop
push
add
mov
add
push
add
loop
cmp
scas
dec
ret
and
adc
adc
add
les
mov
xchg
aas
inc
mov
out
rcll
hlt
das
add
add
push
jmp
mull
and
mov
xchg
dec
jp
mov
sbb
shrb
add
xchg
rolb
jne
movq
xchg
es
out
in
push
outsl
pop
and
mov
add
hlt
xchg
dec
mov
das
jl
jbe
push
outsb
jb
pop
add
pop
incb
int
ljmp
push
int
mov
cmpb
mov
xlat
inc
popa
imul
mov
sub
jb
jl
shll
xchg
pop
js
push
aaa
loopne
in
xlat
and
aam
ds
push
das
jnp
pop
cmc
rolb
incb
arpl
cli
pop
inc
sbb
and
xor
and
adc
clc
into
or
andb
jns
adc
adc
pusha
imul
push
inc
movsb
add
test
pop
jmp
test
xor
or
bound
xor
push
popa
lods
stc
cmp
jb
jle
fsub
ficomps
clc
lret
hlt
lock
sub
add
subl
add
sbb
dec
push
push
icebp
pop
xchg
jo
push
push
cmp
aam
add
sub
push
push
mov
rorb
pop
cli
pop
adc
sbb
rol
jg
daa
and
push
in
cltd
mov
in
loope
jp
insl
xorb
lcall
pop
inc
xor
cs
popa
call
lahf
pop
pop
add
mov
push
mov
call
ret
jecxz
adc
loope
mov
adc
sti
int3
dec
xor
jnp
push
xor
dec
xor
add
insb
push
daa
mov
jl
vinsertf32x4
add
pop
pop
xchg
gs
int3
inc
push
xchg
and
push
xor
sbb
loopne
or
dec
pop
mov
cmc
adc
adc
or
mov
add
pop
bound
jl
push
adc
shll
push
adc
sub
mov
push
cmp
daa
pop
push
xchg
aad
xor
add
sahf
pop
insl
pop
sub
ds
es
add
repz
and
dec
cmp
xor
mov
lret
add
cltd
iret
sti
das
inc
imul
and
mov
inc
out
jns
std
push
jg
push
jmp
jge,pn
movsb
ret
mov
sbb
ss
pop
sbb
sbb
dec
inc
or
inc
sahf
imul
adc
ja
sub
pop
mov
add
ret
out
imul
and
dec
lret
push
out
push
cmpb
rorl
push
cmc
loop
aad
sub
jmp
lahf
inc
push
push
bound
popf
push
xchg
or
pop
lret
add
inc
jbe
sub
mov
int
pop
scas
add
pop
aas
lret
jns
mov
xor
inc
pop
pop
hlt
push
push
je
cld
inc
and
push
andb
sbb
mov
ljmp
and
daa
aad
sti
mov
push
ja
adc
pop
es
xchg
mov
rcrb
pop
cwtl
bound
adc
inc
dec
in
movsb
loope
cmp
adc
mov
test
rclb
or
jnp
mov
ret
pop
das
ja
pusha
test
dec
shr
add
fistpl
pop
cmpsl
jbe
xor
push
push
pushf
test
push
push
nop
pop
inc
push
pop
cmp
mov
and
jl
mov
mov
roll
inc
xchg
sub
cli
jg
xor
sub
pop
jl
adc
sar
cwtl
aad
cmp
push
in
cmp
nop
pop
test
mull
and
cwtl
sbb
enter
cmp
aam
imul
pop
or
xchg
ss
or
test
pop
repnz
rdmsr
dec
push
stos
in
sti
cmp
mov
cltd
in
pop
jp
inc
push
clc
push
scas
mov
mov
imul
dec
pop
xor
scas
test
adc
shlb
sub
xor
push
push
mov
jecxz
mov
lds
and
push
maskmovq
testl
pop
jmp
add
mov
lods
sahf
nop
xchg
add
xlat
call
dec
dec
das
ljmp
jp
sub
lods
enter
ficoml
mov
and
cli
insl
fsubrs
std
test
add
or
dec
inc
test
ljmp
sbb
pop
cmp
pop
or
jg
bnd
enter
insb
repz
jns
or
cmpl
and
mov
stc
dec
xor
add
addb
dec
add
add
js
xor
push
lahf
arpl
fstl
loopne
or
cmp
and
add
les
fadds
dec
push
cmp
dec
and
bound
call
and
push
enter
xor
mov
xor
mov
and
and
roll
cmp
mov
dec
dec
mov
xor
jmp
leave
sub
call
cltd
test
add
popl
add
add
add
push
or
cmpb
pop
mov
or
cs
sub
repnz
mov
mov
dec
adc
push
sub
les
mov
and
xchg
jo
cmpb
dec
jl
dec
xor
and
add
add
pop
push
sbb
mov
rclb
sbb
mov
in
fstl
fprem
or
subb
aas
sbb
mov
cld
add
cwtl
add
cmp
inc
cmp
shlb
xchg
inc
divl
add
dec
or
xchg
cwtl
bound
xor
push
dec
xchg
stos
and
cmp
push
subl
push
sbb
or
orl
test
hlt
fcomp
ljmp
adc
pop
int3
mov
lcall
sub
orl
xchg
and
xchg
and
and
xor
lea
aam
sahf
push
sar
and
and
sbb
cwtl
sub
or
and
xor
inc
lret
mov
clc
adc
xchg
sbbb
pop
jmpw
push
jb
and
enter
dec
stc
mov
loopne
rorb
xchg
cmp
orb
pop
adc
push
pop
mov
mov
loope
imul
sub
jmp
out
pop
and
mov
in
lret
push
cmp
jg
in
push
je
mov
int
pop
push
in
stos
lret
addl
sbb
or
pop
stos
arpl
or
popf
stos
push
adc
adc
xor
cwtl
out
push
xor
addr16
mov
in
test
cmp
mov
mov
adcb
bound
dec
shr
jmp
push
inc
mov
pop
adc
and
mov
or
std
inc
ja
xlat
mov
inc
idivb
pop
push
test
xor
xor
mov
repz
mov
or
jmp
add
sub
sub
in
add
push
push
xchg
add
add
jno
add
jmp
cmp
and
mov
jo
mov
jnp
jle
ja
gs
pop
popa
jmp
or
mov
imul
sahf
jle
mov
or
rcll
sbbb
movsb
cmp
scas
sub
cmp
shr
addr16
je
loopne
jbe
push
sub
pop
xchg
pusha
mov
nop
rorl
cmp
enter
scas
xchg
sbb
xchg
jo
iret
lock
pop
pop
shl
xor
xor
out
call
daa
and
popf
add
adc
ret
int3
cmp
sarb
push
push
rcrb
push
inc
ficomps
outsb
sub
fadd
add
out
jno
inc
xchg
std
add
notb
decl
les
mov
add
pop
inc
je
aam
stos
les
subl
push
cmp
pop
lcall
xor
and
push
cltd
out
cmp
or
imulb
jmp
out
jbe
daa
testl
sub
or
add
rorl
pop
js
shrb
in
sbb
and
push
xlat
es
cmp
add
int3
push
jo
scas
adc
das
rcr
lds
repnz
movsb
stos
lahf
ret
jne
lcall
cmp
cmp
jp
or
leave
neg
fst
or
std
loop
out
clc
sub
in
push
mov
push
add
lods
add
fstl
push
rcrl
or
or
sub
outsl
xchg
sbb
mov
push
push
mov
xor
dec
mov
jmp
cmp
adc
roll
mov
sbb
add
sub
xor
add
add
bound
dec
popl
adc
stos
sub
out
je
and
das
push
xchg
pop
or
xor
int3
sbb
or
fidivs
pop
lds
add
dec
jp
mov
mov
push
out
mov
jmp
stc
cs
in
xor
imulb
out
cs
pop
mov
sub
and
imul
dec
push
iret
push
enter
mov
stos
or
addb
jle
int
movsl
pop
sbb
pop
mov
mov
out
push
push
add
or
incb
cmpsl
adc
sub
pop
push
movzwl
xchg
lock
or
jl
mov
cli
pop
or
pop
sub
pop
adc
dec
mov
add
jge
mov
in
mov
or
shlb
add
fbstp
xor
sub
insl
jg
movsb
inc
push
ret
add
fisttpl
das
xor
gs
push
mov
in
in
and
fnstsw
jmp
push
rcrb
and
push
jne
fbld
out
je
rol
sahf
lea
cmp
add
out
roll
push
jb
cwtl
test
xor
clc
sbb
push
loope
pop
mov
sub
jl
iret
stos
xor
mov
push
add
xor
add
add
sub
inc
xorb
xchg
iret
add
cs
sar
data16
or
add
and
shll
loope
mov
push
cwtl
sub
les
mov
stos
mov
outsl
add
pop
jns
pusha
pop
pop
cld
add
nop
dec
pop
out
movl
or
pusha
sub
imul
out
pop
mov
les
dec
cmp
push
mov
pop
stos
cmpsb
sub
cmp
into
rorb
jmp
repz
cld
push
or
aad
add
mov
push
push
xor
pop
leave
ret
aad
mov
inc
sub
sub
xchg
inc
cmpsl
repz
sar
lcall
pop
nop
pop
dec
push
inc
and
sub
xchg
add
dec
adc
xor
insl
mov
xor
and
jp
enter
ret
or
jecxz
adc
outsb
jmp
pop
clc
lret
push
testb
jmp
mov
lahf
add
or
orb
xor
rolb
rolb
jmp
ret
mov
daa
fidivrl
dec
adc
divb
push
adc
les
mov
xor
or
jne
rolb
outsl
mov
test
cld
cmp
mov
add
iret
push
sub
push
push
pop
jmp
inc
stc
xor
bound
sbb
popa
add
push
or
test
or
lea
mov
cmp
inc
push
hlt
push
das
fstpl
dec
fsubrl
dec
test
lods
inc
lods
lds
and
push
sbb
jg
mov
cmp
add
sub
adcl
fidivrs
test
push
inc
ss
ficoms
add
dec
jmp
push
rclb
adc
mov
pop
and
or
daa
push
out
out
or
xor
pop
mov
push
pop
jmp
insb
es
ds
pop
jne
rcll
push
sbbb
mov
jae
push
mov
sti
pop
push
clc
mov
add
adc
mov
push
push
push
jo
and
icebp
incl
xchg
aad
ficoml
sub
das
cmpsb
push
pop
je
sub
jmp
sub
push
fmuls
mov
jg
aaa
adc
stos
movsb
add
inc
testb
push
add
mov
cmp
jmp
push
outsl
in
adc
setg
in
mov
and
mov
cld
add
sub
dec
and
pop
addr16
loop
test
inc
jg
add
je
jmp
pop
mov
xlat
or
jne
mov
test
adc
pop
dec
jg
sti
push
sub
rep
jl
or
add
aam
pop
inc
mov
mov
push
in
sub
inc
sti
nop
mov
cmpl
jns
add
add
data16
or
sbb
push
mov
andb
push
sub
aas
xchg
bound
fsts
cld
mov
push
sbb
cs
mov
push
mov
and
js
call
push
inc
dec
or
pop
ljmp
or
adc
jne
inc
add
movswl
jmp
mov
mov
cmpsb
shlb
fisttpl
add
iret
or
aam
inc
addr16
loopne
adc
jns
loope,pt
pop
icebp
push
fnop
out
jmp
jo
out
pop
add
sub
ret
aam
inc
push
lods
pop
add
sub
xor
out
add
add
lock
add
or
adcl
mov
xor
bound
pop
add
pop
sti
inc
pop
push
push
jmp
popa
push
into
pop
ljmp
xchg
mov
lods
es
jae
or
push
push
push
jmp
mulb
push
mov
rcrb
mov
loope
fimuls
add
enter
movsb
fldl
outsb
lret
les
test
push
ret
fildll
sub
aad
ret
imul
and
xor
movsl
jne
js
jmp
mov
xor
sbbl
leave
neg
jecxz
clc
rolb
cmc
adc
pop
and
dec
push
mov
insl
xor
pop
cmp
incb
mov
or
cmp
cmpsl
ret
ds
push
out
pop
rclb
pushl
add
pushf
fcmove
cld
outsb
mov
insl
mov
xlat
pop
mov
in
mov
sahf
mov
fwait
js
dec
pop
decb
dec
call
dec
sub
orb
dec
mov
lock
das
roll
push
and
sub
sub
sbbb
andb
add
cmpsl
pop
add
xor
mov
and
sub
mov
ljmp
adc
jmp
mov
mov
adc
jecxz
int3
ret
pushf
dec
mov
je
dec
push
int3
enter
imul
jmp
popa
jbe
jo
add
adc
jp
add
movaps
pusha
dec
mov
push
add
pop
mov
cmp
or
pop
shrl
sbb
or
mov
lds
inc
xor
push
sbb
mov
lods
pop
sub
out
cmp
push
pop
cs
call
add
out
lds
pushf
loop
shrb
jmp
inc
pop
sub
sbb
dec
or
dec
fldl
or
inc
add
xchg
inc
iret
aad
nop
jle
gs
add
jb
mov
add
pop
or
in
lret
or
dec
loope
in
xchg
and
mov
jns
push
pop
push
repz
jmp
dec
xchg
cwtl
hlt
and
hlt
jb
sub
lock
xchg
cs
outsb
daa
rclb
cmpl
gs
push
pop
or
cmp
shl
insb
cld
clc
sub
and
xor
adc
sbb
add
mov
sub
leave
xlat
sti
jle
leave
push
call
pop
pop
xor
sub
pop
or
cmp
jbe
or
mov
push
rclb
and
fldl
xor
int3
sub
data16
pop
cmp
adc
mov
mov
js
les
ficomps
cwtl
mov
xchg
scas
daa
pop
sbb
and
sbb
cmp
pop
dec
sbb
push
pop
jo
es
mov
sub
sahf
jns
pmaxsw
mov
xor
daa
jmp
sub
add
in
enter
pop
adc
cmc
data16
repnz
or
pop
pop
or
ja
dec
leave
jl
orl
jno
ret
and
sbb
inc
subl
push
jmp
ljmp
add
or
rcrb
push
fsubs
sub
jno
jb
push
loope
out
fcom
xor
fcmovnb
jecxz
inc
pop
cs
cltd
and
dec
inc
xor
mov
lret
pop
xor
addl
sub
jbe
mov
fs
push
rorl
adc
sub
adcb
dec
jb
inc
test
mov
xor
inc
dec
xor
adc
push
sarb
push
outsb
call
mov
fisubrs
xchg
dec
loopne
jne
push
insb
xchg
or
cs
xor
or
xor
sbb
push
cmp
add
lret
lret
mov
es
inc
xor
daa
add
decl
aad
xor
jmp
shr
sub
sbb
pop
sbb
sbb
cli
adc
out
pop
mov
or
movsb
jmp
dec
sbbb
fnstcw
loop
sub
jle
sub
pop
inc
stos
inc
jno
jmp
xor
inc
test
scas
sub
imul
mov
loope
cmp
negl
xorb
jns
or
cmp
jmp
xor
pop
fsts
cmc
pop
mov
mov
in
jns
mov
cwtl
push
inc
sub
daa
addr16
ljmp
sti
fs
lods
aaa
pop
cmc
mov
sub
dec
dec
add
icebp
mov
ret
pop
lods
in
dec
xor
je
sbb
sahf
sub
inc
or
pop
xor
test
incl
push
cli
lret
pop
lcall
push
lret
sbb
xchg
cltd
cmp
movsl
movsl
fnstsw
cmpsl
popa
inc
addl
push
sub
cmp
xchg
cmp
pop
add
test
or
sbb
pop
adc
fxch
xor
int
stos
inc
pop
push
xor
dec
jnp
rcr
jbe
dec
imul
push
pop
mov
into
and
into
iret
inc
addl
inc
push
scas
cmp
dec
aad
xor
xchg
loop
imul
jne
jbe
pop
add
leave
pop
std
dec
sbb
sbb
xor
mov
push
js
sub
das
and
mov
lret
je
movsl
push
imul
and
sti
cmp
mov
push
push
jne
and
jmp
sbb
jnp
daa
fldl
adc
les
add
ret
jae
mov
sub
lret
pop
cmp
jmp
pop
push
mov
scas
and
sbb
sbb
and
mov
xlat
pop
push
jmp
xchg
mov
push
sbb
push
push
inc
dec
xchg
jb
jl
mov
xchg
adc
or
rcrl
xchg
push
test
mov
push
add
xor
popa
lret
mov
lret
mov
xchg
adc
mov
out
pop
bound
jbe
push
dec
pop
lea
xchg
inc
out
lcall
ret
lods
sub
dec
cli
mov
fwait
inc
fwait
pop
inc
les
ret
inc
xor
in
sbb
fsubl
mov
cmp
cli
lret
pop
push
shll
add
cld
jg
loop
popf
stc
mov
mov
enter
arpl
addr16
inc
push
adc
into
sub
dec
xor
add
lods
xor
push
insb
cwtl
push
sbb
jecxz
lret
rcl
gs
in
pop
sbb
sbb
lret
ret
cs
cmp
fst
cld
rol
push
push
cmp
pop
mov
mov
daa
pop
adc
insb
cltd
rcrb
and
push
sbb
mov
push
popf
cmpsl
shr
ret
mov
cmp
movsl
mov
push
mov
add
inc
mov
int
jo
inc
sahf
int
push
mov
pop
mov
inc
in
add
mov
push
orl
push
adc
cmp
in
adc
icebp
ljmp
mov
push
jmp
std
push
aam
jmp
adc
loop
adcb
shr
es
mov
adc
int
in
jmp
sub
bound
shr
sub
xor
xor
stos
xchg
mov
mov
sub
stos
jp
mov
sub
rolb
pop
jmp
call
push
mov
jmp
mov
jg
stos
xchg
adc
call
mov
jle
push
mov
xchg
sbb
pop
orb
cltd
add
popa
push
sub
mov
jl
scas
or
pop
inc
test
in
jmp
sub
jmp
in
test
fwait
mov
add
add
add
jmp
cmp
pop
andb
rorl
pop
xchg
push
sub
ja
sbb
mov
mov
flds
push
jmp
jle
fsubrs
dec
cmp
or
cmp
andb
cmp
mull
imul
ss
fmull
std
xchg
shl
mov
add
sub
sub
subb
clc
jb
add
fstp
in
and
push
xor
xor
ljmp
mov
jnp
stc
shrl
sbb
add
mov
mov
add
dec
sarl
scas
rclb
xor
xor
mov
in
in
scas
in
push
xchg
sbb
movsl
mov
or
pop
xchg
nop
pop
jmp
sub
push
inc
jno
jg
mov
orb
icebp
mov
add
xor
cmp
sub
fwait
add
gs
jmp
daa
jne
sbb
push
lea
push
jl
popa
lock
sub
mov
pop
mov
subb
sub
push
cvtps2pd
add
out
push
popf
pop
dec
lea
jne
adc
pop
or
ja
pop
jmp
stos
sub
jmp
and
jmp
push
lcall
push
push
lds
orb
loopne
push
mov
or
sub
fcmovb
mov
mov
xor
mov
int3
test
or
fcmovnbe
and
add
pop
mov
jmp
imul
mov
daa
dec
xchg
pop
popa
into
adc
repnz
not
and
daa
sub
jmp
inc
cmc
outsl
mov
mov
or
xchg
pop
or
pop
jl
add
inc
dec
add
adc
sub
das
jo
js
cmp
push
subb
push
dec
mov
aad
std
xor
xchg
xchg
inc
xor
inc
jo
xor
cwtl
push
push
pop
mov
sub
dec
jl
popa
es
adc
mov
and
dec
filds
and
jno
add
pop
test
fnstcw
xchg
add
push
mov
add
adc
les
mov
mov
ja
mov
dec
test
adc
dec
rolb
sbbb
mov
ja
pop
xchg
add
sbb
shll
mov
mov
mov
inc
lret
jbe
xor
xchg
mov
dec
push
call
push
icebp
add
std
out
add
and
cmp
cli
je
ret
sub
fcoms
or
and
ja
mov
pop
pop
inc
add
jge
repnz
lret
negl
jne
pop
or
add
mov
rorl
add
jmp
bound
lods
mov
inc
add
loopne
add
mov
nop
ljmp
mov
div
fnstcw
mov
and
add
pop
jmp
inc
push
repnz
add
push
or
add
xchg
add
jo
iret
jne
mov
add
pop
call
inc
or
jmp
and
pop
aad
lar
data16
jo
push
mov
loope
out
cmp
push
inc
pop
inc
mov
mov
lret
xor
loope
ret
xchg
jns
out
orl
jmp
out
push
sub
add
out
mov
scas
rorl
leave
sahf
clc
adc
sub
enter
add
jmp
loopne
loope
add
call
sti
sarl
in
in
adc
push
or
adc
ljmp
and
fldcw
ljmp
jmp
jns
push
push
mov
je
jmp
scas
mov
js
or
daa
fsubl
pop
jmp
inc
dec
and
clts
neg
jmp
cltd
or
lods
and
lods
adc
cmp
sub
adc
cmp
or
and
push
jbe
leave
add
push
mov
cmc
test
clc
sub
incl
push
lret
and
dec
dec
mov
jle
xor
lock
add
clc
dec
sbb
push
and
or
jnp
push
xchg
mov
std
push
dec
sub
add
xor
ficomps
clc
loopne
xchg
pop
xchg
xor
sub
jmp
pop
xor
pop
cmp
sbb
push
add
push
inc
pop
pop
push
mov
inc
loop
or
nop
xchg
jmp
push
hlt
cli
andl
call
fucomp
pushf
dec
mov
push
xor
pop
sub
and
add
sbb
mov
pop
lret
dec
sub
push
inc
jmp
les
dec
sub
add
movsl
or
ror
ret
and
ljmp
and
push
fists
jmp
das
pop
hlt
or
mov
loopne
add
mov
es
outsl
pop
push
mov
out
push
ds
adc
sub
jle
loopne
cld
dec
mov
mov
out
ds
repnz
movb
dec
lods
int
push
mov
add
rol
mov
rcl
loope
mov
sbb
and
aam
add
cmp
add
push
mov
repnz
ficoms
mov
sti
repnz
jmp
loope
xor
xchg
push
pop
or
cmc
add
add
icebp
jno
lret
jmp
fisubrs
dec
lahf
pop
sbb
sahf
push
pop
inc
push
or
mov
pop
loopne
sarl
sub
js
movsb
mov
jmp
shlb
push
jmp
adc
fldenv
mov
lcall
incl
dec
adc
cltd
adc
add
pop
add
scas
sbbl
adc
dec
popa
es
test
xchg
bound
inc
fiadds
rorb
repz
mov
pop
lret
push
or
pusha
push
pop
inc
adc
in
into
fdivl
cs
xor
jg
pop
cmpsl
jge
mov
mov
pop
jns
mov
jle
rcrl
test
dec
fnsave
rcrb
xchg
pop
or
mov
sub
mov
in
adc
mov
loopne
xor
insl
mov
inc
xor
mov
pop
loopne
ret
inc
jne
not
jmp
lds
andl
cmp
xchg
add
mov
dec
enter
pop
or
pop
xchg
adc
and
push
idiv
xchg
adc
outsb
bound
dec
std
and
mulb
das
addl
add
add
fiaddl
xor
outsl
add
sub
and
sahf
lds
scas
data16
cli
ficompl
push
js
adcl
push
push
jmp
xor
sub
loop
pop
mov
mov
bound
daa
add
sarl
add
cli
repz
sbb
test
not
pusha
dec
and
adc
fidivl
popa
push
sub
dec
insl
nop
adc
xor
out
sbb
jb
mov
lock
mov
jmp
mov
xchg
lods
or
push
mov
fwait
or
cmp
or
jmp
fstl
push
cmc
cld
jbe
fimuls
and
cwtl
adc
outsl
mov
loop
cmp
inc
inc
loopne
pop
popf
ds
lock
enter
dec
mov
mov
addb
lret
leave
add
iret
imul
add
sub
add
push
xor
mov
xor
push
jge
jg
inc
jmp
mov
cld
xor
sub
movl
inc
stc
push
push
repnz
insl
inc
dec
pop
add
cmp
inc
out
or
ffreep
data16
rol
ret
jl
cmpsl
add
addr16
scas
push
mov
push
jg
mov
pop
and
mov
mov
xchg
jmp
xchg
jg
stos
mov
jmp
mov
pop
imul
cmpsb
pop
push
mov
mov
xchg
es
icebp
pop
inc
sub
push
daa
pop
sbb
mul
pop
push
clc
cmp
add
aam
pop
pop
add
xchg
jl
std
lahf
sub
cmc
scas
fiadds
xchg
in
adc
and
sahf
adc
bound
push
insb
rcll
pavgb
jmp
out
mov
push
push
je
xchg
aam
jmp
aaa
adc
es
or
out
punpckhbw
ljmp
jp
add
ret
and
in
push
mov
lahf
jg
andl
movsb
dec
rorb
jmp
dec
ljmp
xchg
xchg
or
pusha
movsl
test
and
jmp
dec
lret
out
adc
ss
adc
sbb
xlat
daa
pop
push
push
stos
cmc
jl
imul
fsubrp
dec
push
subb
jle
lds
sub
adc
mov
ja
cld
push
pop
in
jle
ja
test
mov
es
negl
insl
mov
mov
pop
fs
loopne
inc
or
xchg
jne
xor
inc
and
stos
push
movsb
xor
mov
ljmp
add
pop
sbb
loope
cmpb
or
repnz
pop
dec
out
jl
jmp
ds
mov
push
inc
sbb
mov
xchg
jbe
fstp
jmp
test
add
pop
and
jmp
stc
jo
aad
mov
pop
push
jmp
lahf
jno
lods
jns
lock
inc
add
dec
bound
js
gs
subl
mov
mov
inc
addr16
mov
movsl
sar
xchg
push
sub
test
jnp
aam
mov
testb
sahf
mov
push
xchg
add
xchg
dec
inc
adc
mov
lret
lcall
pop
fst
sub
push
je
adc
pop
pusha
dec
jmp
neg
lds
sbb
xchg
loopne
jmp
and
adc
adc
inc
scas
std
add
dec
scas
inc
fnsave
mov
imul
mov
pop
mov
scas
dec
jmp
scas
xor
call
stos
cmpsb
ss
xchg
add
cmp
cmpb
sub
mov
xchg
dec
or
fwait
pop
adcl
adc
add
loop
rcr
inc
mov
emms
lock
push
sub
shlb
cmpsb
dec
mov
xlat
in
repnz
sub
aad
dec
inc
nop
sub
adc
mov
pop
mov
idivl
jns
push
scas
jo
dec
add
pop
loope
call
pop
xchg
addb
push
add
sub
jmp
mov
enter
insb
js
pop
adc
jle
xchg
push
test
add
loop
sbb
adc
stos
psubb
cmpsl
adc
sub
inc
pop
into
pop
and
lods
inc
test
mov
dec
stos
or
pop
test
adcl
js
sbb
data16
movzbl
mov
or
sub
iret
jecxz
loope
push
mov
cmc
ret
in
cmc
add
dec
push
jle
test
push
jp
icebp
pop
ds
or
pop
push
xchg
lods
pop
mov
out
cmp
repz
cltd
mov
mov
push
mov
inc
mov
pop
out
push
adc
dec
or
adc
or
add
pop
push
idivl
repz
adc
mov
mov
iret
sbb
popa
movsb
adc
das
fstl
repz
adc
pop
popa
cmp
iret
pop
leave
in
pusha
fwait
mov
jl
mov
enter
cmp
adc
jmp
mov
sub
xor
push
or
jge
cmp
out
pop
in
jge
jmp
xchg
inc
push
int3
dec
aaa
or
inc
add
inc
mov
pop
andl
rcll
xor
sbb
cmpsb
sub
push
push
add
daa
mov
loope
sbb
add
push
addl
andb
add
mov
push
lret
push
aaa
es
add
dec
or
pusha
adc
push
cld
mov
adc
mov
dec
repz
mov
mov
stc
mov
fistl
fs
cli
movl
sub
xor
dec
or
push
dec
or
jb
je
ds
cmpb
mov
mov
sbb
mov
dec
popf
jne
dec
pop
lahf
test
orb
cld
das
popf
mov
xchg
gs
daa
and
rorl
or
push
test
add
xor
cmp
mov
js
bound
jmp
aad
jb
add
ret
or
and
std
mov
out
nop
push
pop
dec
outsb
pop
mov
and
pop
sub
sti
xchg
stos
or
lret
in
pusha
aad
popf
fs
sbb
and
inc
dec
add
pop
neg
pusha
add
cmp
and
into
les
lds
pop
xchg
inc
ffree
sbb
push
sub
dec
stos
sar
jmp
pop
xor
shr
clc
push
loope
std
adc
popf
negb
mov
shl
dec
clc
push
adc
pop
ljmp
push
dec
push
insl
push
sub
test
cmp
push
subl
popf
adc
or
subb
adc
cmp
xor
loop
pop
push
filds
push
dec
lea
dec
jmp
aad
mov
out
mov
pop
outsb
scas
sbb
rcrl
daa
xlat
lds
loope
ret
push
sbb
jo
ret
sub
aam
dec
neg
imul
mov
dec
xchg
or
jmp
push
xor
add
addb
adc
dec
out
inc
test
adc
add
mov
push
add
cmp
fsubr
andps
xlat
mov
add
mov
xchg
adc
and
scas
fs
stos
rcll
sub
fidivl
dec
dec
sub
in
sbb
pop
add
jb
adc
add
rclb
jnp
stos
lahf
shr
loope
jnp
cmp
movhps
mov
sar
jb
pop
jl
dec
addl
fnstcw
scas
add
out
xor
jne
dec
cs
icebp
jno
dec
in
add
pusha
jmp
pop
fdivs
imul
ss
lock
outsb
mov
inc
fistl
subb
mov
cmp
dec
sub
out
ret
sti
mov
or
ds
aas
adc
push
dec
mov
sub
popa
mov
pop
and
adc
mov
decl
aam
or
daa
push
dec
and
push
mov
into
aas
into
je
jmp
sbb
out
aam
cmp
les
sub
icebp
dec
aas
pop
ss
fnstenv
cmp
movsb
mov
push
in
mov
mov
fnsave
mov
fdivrs
shr
pop
fisttpll
hlt
bound
mov
mov
or
cmpsl
int
pushf
mov
outsb
pushf
or
pop
lret
push
ret
pop
adc
test
sub
sbb
das
loope
jl
cmp
mov
cmp
lret
iret
pusha
sub
inc
jbe
or
imulb
ljmp
cmp
jb
xor
mov
out
shrl
mov
test
add
mov
push
sbb
adc
repz
mov
sbb
pop
pop
decl
leave
in
push
pop
mov
iret
lods
out
loop
jge
or
jecxz
xor
dec
daa
push
mov
jmp
fstl
out
push
push
pop
add
add
std
xor
icebp
pop
pop
add
cmp
sub
or
out
sub
outsb
add
popf
fdivs
jge
addb
jl
add
cmp
je
loopne
sub
and
or
mov
xlat
push
pop
xchg
dec
xor
or
push
jo
ja
or
xchg
mov
fdivrl
push
pop
mov
add
cs
sub
jmp
xchg
cmpsb
lock
sub
int3
les
xchg
add
in
sub
add
lret
cmp
call
in
sbb
les
sbb
xchg
mov
adc
loope
orl
test
in
pop
mov
movsb
pop
lds
and
inc
scas
or
mov
subb
push
das
es
loope
int3
call
dec
aam
cmp
cmpl
xlat
add
fiaddl
xor
dec
inc
das
jmp
ret
dec
daa
xor
cmp
cmc
push
sub
mov
punpckhdq
dec
cmp
in
pop
jg
stc
mov
adc
in
push
pop
test
mov
sub
push
std
imul
ret
dec
pop
outsb
bound
or
pop
adc
aas
das
sti
imul
ret
movsl
push
imul
xor
lret
ljmp
sahf
mov
ret
mov
rcl
data16
stc
fldenv
pop
lods
xor
ja
pop
cmpsl
xlat
int3
mov
std
add
xor
add
jmp
jne
repnz
jnp
jb
cmp
lret
jmp
test
loop
push
sbb
mov
in
push
push
push
and
out
xchg
popa
jo
push
mull
push
cli
shlb
jp
ljmp
das
and
movsb
or
pop
push
push
jns
call
mov
sub
xor
add
fs
hlt
xchg
das
loopne
pop
pop
ret
and
fcomp
or
jb
xor
jg
sarl
or
xchg
dec
lret
xchg
shl
sub
inc
sbb
sub
add
and
push
jns
cmpsl
push
js
xlat
sbb
mov
adc
add
or
mov
daa
cmpsb
fisubrl
loop
les
add
pop
or
lahf
fsubs
push
sahf
sbb
and
pop
jo
jmp
xor
pop
xor
or
sbb
sbb
mov
adc
cs
jmp
fsubr
lock
mov
mov
das
jmp
mov
in
and
xor
popa
xchg
pop
repz
adc
mov
sti
sub
pop
test
pop
test
xorb
lock
add
cmpsb
out
popa
scas
sub
les
daa
fimull
imul
icebp
cmp
lcall
dec
orl
jnp
enter
cmpb
jp
pop
or
xlat
push
xor
test
inc
pop
xor
dec
mov
xchg
adc
faddl
subl
or
pop
mov
add
clc
sub
test
push
mov
test
mov
mov
fisttpll
pop
in
lahf
xor
lds
mov
ljmp
popf
sub
mov
mov
cwtl
in
xor
pop
adc
fldl
mov
inc
add
pop
push
loopne
jle
adc
je
pop
out
cmp
js
sbb
pop
push
out
addr16
insb
or
in
pop
jae
or
outsl
xchg
jo
in
dec
aaa
pop
adc
add
data16
arpl
insb
inc
das
pusha
ud2
inc
std
adc
or
mov
adc
lods
mov
pop
jl
aaa
add
testb
cmp
lods
mov
pop
mov
jno
mov
cmp
jo
mov
fsubs
mov
sub
xchg
adc
movl
or
imul
mov
sub
inc
or
fisubl
icebp
es
out
and
add
imul
sbb
adc
addb
mov
leave
loopne
add
push
push
xchg
addl
das
lock
cmp
jg
lcall
push
fiaddl
ljmp
lret
loope
std
sub
jmp
jge
pop
sub
lds
xchg
movsb
ja
sbb
fcoml
sub
lret
sub
jnp
pop
sub
push
test
das
js
ret
cwtl
movsb
jbe
sub
aam
fcomp
pop
fiaddl
pop
mov
mov
push
pusha
lahf
loop
xchg
das
mov
aas
addr16
mov
daa
pop
add
es
jmp
jnp
cs
sub
ja
test
outsb
fwait
das
jmp
jne
hlt
xchg
sahf
imul
dec
inc
cmp
push
mov
inc
jmp
mov
cmp
aam
xchg
hlt
stos
mov
adc
icebp
or
xchg
jb
iret
ret
mov
icebp
dec
add
jmp
stc
stos
mov
or
ret
dec
mov
mov
dec
add
icebp
inc
imul
sub
jecxz
out
mov
sub
fwait
rorl
pop
pop
fisubs
jle
test
in
push
push
mov
insb
mov
pop
imul
into
shlb
pop
ret
ljmp
jmp
lahf
pop
push
rorl
push
inc
out
push
xchg
push
mov
sub
mov
sub
jns
and
jge
or
loope
leave
insl
add
add
sub
ds
shll
or
push
dec
add
add
mov
or
mov
xchg
dec
clc
mov
cmp
sub
add
std
mov
pop
push
or
daa
push
aas
aad
pop
xchg
ja
jno
std
pusha
or
pop
in
push
dec
mov
pop
lds
lret
mov
dec
in
push
ret
lods
push
push
mov
jmp
in
push
push
or
test
jb
pop
pop
in
pop
sbb
jg
pop
push
sub
mov
aam
out
ret
fsubl
inc
pop
xchg
push
or
fcomps
ret
or
xor
pop
or
add
mov
jecxz
popa
jle
sub
jg
es
adc
imul
jmp
cld
mov
cmp
push
xlat
xchg
add
xor
adc
popa
insb
ss
fs
jns
in
cmp
int3
xor
cltd
lods
add
cmp
lret
jmp
add
cmp
or
add
push
mov
pushf
mov
mov
mov
rclb
adc
adc
cld
mov
rcrl
in
inc
adc
and
add
or
test
xchg
icebp
fs
rolb
cmpsb
dec
incb
aaa
cmp
orl
cmp
jne
cmp
inc
outsl
das
sub
lds
xor
pop
adc
incb
fucomip
arpl
lods
xchg
jle
add
cmp
xor
sub
adc
imul
test
dec
out
xchg
stos
ss
repz
sub
loope
in
daa
push
pop
pop
in
or
add
sub
aaa
ja
pop
fstpl
adc
push
and
lods
pop
sub
mov
sbb
jne
mov
xor
imul
push
test
pusha
mov
inc
enter
cmp
enter
dec
repz
adc
add
mov
ret
push
or
push
mov
movsl
fists
push
mov
or
pusha
adc
push
int3
pop
mov
daa
repnz
push
cmc
pop
mov
pop
jb
pop
adc
rcrb
jbe
mov
fstps
cmp
push
adc
dec
popf
arpl
adc
add
inc
leave
adc
pop
push
sbb
iret
es
sbb
pop
mov
push
or
add
pop
push
adc
leave
jno
mov
lds
call
inc
daa
or
xchg
add
fbstp
xor
insb
push
pop
mov
cmp
xor
xor
mov
xchg
push
popa
push
xor
jl
push
leave
sub
test
dec
mov
pop
dec
push
pop
pop
jno
dec
rolb
pop
xor
cmp
or
addr16
shll
dec
repz
clc
stc
push
mov
mov
lret
cli
adc
pop
ret
aaa
and
pop
cmp
ljmp
jo
cmp
pop
dec
ficompl
jmp
push
bound
push
sti
or
adc
cmpb
sbb
adc
add
or
fs
repz
cltd
or
push
dec
or
cwtl
and
dec
ret
push
jmp
scas
out
sub
cmpl
inc
push
sbb
cld
sub
sub
jmp
test
ret
idivb
loop
insb
mov
xchg
pop
mov
inc
xor
sub
sti
arpl
dec
and
inc
add
dec
sub
out
fwait
sbb
loope
jl
bound
loop
inc
das
jmp
or
inc
push
rorl
sbb
das
sar
adc
test
fisttpll
jae
popa
push
rorl
or
fwait
arpl
mov
or
xor
push
out
in
sbb
jmp
lock
push
and
adc
lret
fwait
idivl
outsb
es
popf
jae
into
stos
lods
test
mov
stc
jl
fs
fnstcw
or
loopne
adc
mov
lahf
and
adc
sub
xor
xlat
xor
nop
loopne
cmp
adc
inc
inc
popf
mov
add
cmp
and
xlat
ss
fsubl
lea
mov
push
shlb
jno
mov
adc
fnsave
pop
dec
sti
jnp
dec
inc
andl
movsl
mov
cmp
loope
test
loope
mov
mov
push
push
xchg
xor
ret
in
ja
sti
or
and
lea
and
icebp
adc
aaa
rcll
int3
cmp
add
test
push
mov
jbe
or
adc
jmp
push
sbb
dec
pop
mov
xor
aas
movsl
push
fnstsw
aad
mov
mov
and
or
xchg
jmp
push
pushf
stos
cmp
std
pop
adcb
mov
bound
jle
and
sub
push
mov
cmp
dec
stos
popa
pop
sub
dec
pop
push
pop
cld
mov
bound
sarb
scas
or
push
push
add
nop
call
xor
mov
inc
push
dec
mov
lcall
cmp
lahf
sti
imul
jge
dec
es
cmp
push
mov
out
cwtl
div
in
xchg
shr
or
out
add
jle
mov
dec
test
lods
dec
add
mov
shlb
or
sub
addl
pop
dec
stos
sub
into
sahf
inc
mov
es
xor
push
add
sarb
dec
push
push
gs
mov
or
sbb
psubsw
icebp
add
push
cmp
cwtl
mov
mov
sub
pop
call
inc
push
imul
cmp
sbb
imul
ja
xlat
sub
cmp
dec
in
fistpl
in
sub
les
or
xor
aam
xchg
leave
bound
or
dec
add
pop
push
xor
push
ss
pop
mov
push
add
and
dec
data16
scas
sub
sub
xchg
into
dec
data16
xchg
push
cmp
sub
mov
cmp
jmp
lds
push
add
mov
sbb
gs
fnstenv
xchg
rolb
mov
pop
sub
daa
jmp
pushf
add
jge
sbb
cwtl
cmp
aad
in
cmc
add
sub
and
fidivs
push
or
in
cmpsl
mov
mov
out
jecxz
add
cli
mov
xor
jmp
mov
adc
aam
jge
lret
inc
jns
and
add
pop
add
xchg
dec
jecxz
lock
test
or
jno
xorb
xor
out
or
dec
lahf
jns
mov
mov
pop
negb
jo
sti
jge
xchg
pushf
or
pop
aaa
lock
jp
mov
js
dec
push
stc
add
insl
cs
jmp
rcll
add
rcr
xor
sti
push
or
loope
cmp
addr16
mov
in
mov
in
data16
mov
ret
sbb
shrb
sub
add
push
or
inc
imul
sbb
sbb
ret
jno
or
jl
loope
into
movsb
mov
or
jg
cmp
or
inc
cs
mov
pushf
sub
and
cmp
cmpl
shll
or
insb
bound
fsubl
and
out
add
mov
inc
cmp
rorl
mov
neg
inc
jmp
shrb
jns
jmp
dec
inc
mov
sub
call
adc
push
mov
aad
xchg
and
push
or
es
inc
jp
inc
pop
xchg
dec
pusha
punpckhwd
rcr
sub
push
mov
pop
outsl
mov
push
mov
lahf
in
nop
mov
daa
push
push
addr16
add
cmp
cmp
mov
enter
sub
scas
push
xor
out
adc
dec
pusha
mov
iret
loop
insb
xchg
jmp
jnp
ret
inc
or
xchg
stc
popa
leave
lcall
and
and
dec
xchg
adc
aas
lds
addr16
mov
int
adc
insl
ret
cmp
add
pop
add
pop
inc
shr
or
push
shrl
inc
xchg
movsb
add
cld
mov
mov
add
dec
rcl
mov
pop
pushf
into
sub
mov
outsl
jmp
adc
push
jno
mov
or
shr
dec
imul
mull
es
and
movsb
xchg
ja
insl
sbb
loope
ljmp
mov
pop
or
inc
jo
mov
xor
into
xchg
nop
or
inc
fwait
add
hlt
xor
sbb
lret
or
or
jmp
inc
cmpsl
or
std
das
not
daa
icebp
add
cmpsl
mov
les
ret
pop
dec
fdivrs
sub
or
pop
jns
dec
or
pop
mov
test
mov
adc
lea
push
dec
cmpsb
mov
xchg
pushf
dec
dec
add
adc
or
sub
loope
push
or
cs
bound
push
hlt
or
cmovle
mov
inc
lret
cli
dec
push
andl
xor
negl
scas
xchg
gs
int3
shrb
bound
loope
or
hlt
sbb
icebp
push
or
fs
sub
add
cmc
adc
and
incb
and
jmp
mov
push
fdivs
or
imul
sti
jg
jnp
in
daa
jmp
push
rcrb
add
pop
and
mov
addr16
mov
mov
sub
pop
out
adc
or
push
inc
std
lret
das
andl
and
adc
jmp
outsb
repz
sarb
sub
and
lret
cld
dec
sti
and
mov
bound
or
and
adc
push
popf
jae
mov
frstor
bound
sti
addr16
icebp
out
push
sbb
or
fucomp
repnz
mov
sarl
out
cmp
pop
loopne
cwtl
jbe
hlt
adc
jmp
mov
sbbl
cs
out
ret
ds
cli
loope
outsl
loope
adc
sti
test
dec
push
les
xor
xor
stos
sub
dec
dec
sub
dec
pop
mov
push
or
std
loopne
sbbb
mov
xor
popa
out
cwtl
fidivrs
mov
hlt
scas
bound
xchg
mov
dec
lea
es
xor
cmp
xor
mov
pop
dec
int3
clc
sub
xor
inc
dec
into
insb
pop
daa
ja
push
mov
add
cwtl
inc
and
cwtl
sbb
push
mov
xor
dec
pop
addl
cmp
push
push
pop
sti
out
xchg
mov
cmp
jns
lds
cmp
dec
mov
adcl
inc
add
mov
jmp
fcomps
sbb
push
testb
movsl
hlt
js
xchg
pusha
pop
inc
nop
daa
jge
aad
or
jo
add
shl
cmp
jmp
in
sub
push
dec
dec
imul
push
cltd
push
bound
sbb
add
outsl
arpl
cld
dec
scas
into
mov
push
mov
loopne
mov
xorl
mov
sti
outsb
lock
dec
push
adc
xor
pop
adc
fwait
adc
xchg
push
mov
jp
inc
dec
add
inc
fistl
sub
add
sub
jle
dec
and
sti
nop
mov
adc
add
rcrb
sub
dec
gs
dec
cmc
fdivrl
fsts
ficoml
mov
dec
das
or
fsubr
cld
outsl
mov
pop
notl
aas
ss
pop
mov
or
sub
into
cld
adc
mov
sbbb
dec
inc
notl
jl
dec
cmp
mov
out
and
jb
push
ja
sub
cltd
inc
inc
mov
sbb
mov
sbb
mov
xchg
stos
mov
inc
movsb
lods
dec
mov
dec
loopne
pop
lds
arpl
jecxz
mov
and
hlt
mov
movb
xchg
cmp
add
add
pop
push
int
cmpsl
jmp
jg
push
sbb
add
inc
sbb
and
es
leave
pop
pop
lock
inc
pop
mov
sub
ss
popa
iret
jp
mov
mov
pop
fsubr
ret
pop
push
test
mov
nop
inc
shrb
mov
add
xor
pop
pop
pop
pop
popf
js
dec
xchg
and
testb
or
jecxz
add
inc
dec
lret
push
loopne
je
jecxz
arpl
sbb
pop
xchg
sbb
repnz
mov
rclb
fcoml
out
xor
jae
jo
test
jmp
jecxz
leave
jno
pop
push
and
xchg
and
shr
pop
out
inc
push
cmp
aaa
out
fcmovnbe
inc
mov
clc
jnp
mov
push
push
push
inc
adc
ret
cwtl
int
or
jb
jae
push
and
loop
mov
and
fsubl
mov
add
stos
lock
mov
jmp
push
mov
call
xor
push
jmp
pop
inc
mov
adc
nop
mov
cmp
pop
sub
mov
out
int
jnp
sub
or
pop
daa
xchg
cmp
lret
mov
dec
fs
lods
xor
lock
and
adc
rsqrtps
cmc
push
adc
bound
test
repnz
js
mov
add
fmull
pop
jle
shrb
and
subl
mov
repz
lds
ror
pop
pop
xor
push
cs
adcb
xchg
loop
and
mov
adc
lods
imulb
pop
call
xchg
mov
pusha
rcr
cmp
daa
inc
jmp
add
xor
xchg
arpl
and
nop
insb
insb
and
add
scas
sbb
iret
repz
sub
cli
xchg
dec
repnz
lods
mov
test
out
nop
sub
or
inc
fs
cli
mov
adc
dec
sub
pop
enter
jge
xor
pop
push
aam
push
stc
pop
aam
mov
cmp
movsl
pusha
addr16
inc
ficoms
repnz
pop
rcll
lods
out
pop
xchg
scas
std
cmpsl
push
pop
je
mov
out
pop
test
call
xor
aaa
and
sub
inc
add
push
std
das
sub
bound
leave
repnz
mov
daa
xchg
jmp
xchg
loopne
ficompl
repnz
jmp
xchg
daa
jp
push
mov
idivb
js
stos
mov
ja
popf
sbb
insb
mov
fidivrs
aas
add
cmp
sarl
lods
or
ret
arpl
pop
jmp
push
pop
push
cli
jo
mov
out
push
std
sub
cmp
push
repnz
jl
lret
in
jo
nop
mov
sbb
mov
imul
not
mov
sub
sub
push
push
and
out
add
rolb
das
aas
add
shr
shr
aad
mov
jmp
pop
scas
in
pusha
stos
adc
sarb
insl
shlb
xchg
and
insb
fs
adc
push
test
sbb
pop
sti
mov
pop
pop
leave
or
jmp
cwtl
pop
add
jg
push
jb
adc
add
push
dec
rorl
dec
ss
das
in
pop
jl
nop
shll
imull
lcall
push
lret
sbb
gs
dec
jmp
add
int
and
add
inc
je
mov
mov
cmp
push
add
adc
imul
movsb
cld
loope
aas
and
push
mov
fildll
insl
pop
mov
add
and
mov
std
shl
jmp
pop
mov
je
pop
repnz
outsl
js
pop
add
mov
push
sub
xchg
ss
or
mov
push
pop
xlat
mov
loope
jo
cmp
add
adc
or
filds
mov
andl
xor
xor
mov
add
inc
loopne
and
cltd
add
inc
xor
pop
aad
stc
cmc
or
add
mov
xor
adc
add
cmpsb
cmp
push
jnp
add
mov
and
pop
mov
pop
push
push
scas
mov
sbb
ja
mov
test
and
fidivl
loope
sub
push
lahf
ret
push
or
fsubrp
push
mov
xchg
pop
push
call
push
pop
sbb
insb
mov
iret
xor
enter
cld
push
push
xor
adc
pop
jmp
pop
lock
pop
mov
push
in
add
add
les
or
cmp
paddw
arpl
mov
lods
and
jae
pop
fisttpl
fwait
push
adc
not
and
nop
in
and
cmpsl
add
fcomps
into
xadd
mov
mov
inc
or
or
imul
fwait
jno
lods
dec
push
mov
mov
pusha
ret
pushf
std
sub
les
mov
es
test
mov
scas
daa
aad
or
jmp
fs
pcmpeqd
add
scas
or
jg
cmp
mov
dec
push
hlt
dec
ret
imull
push
add
inc
pop
add
cmc
pop
dec
push
inc
fnstsw
in
sub
outsl
xchg
scas
lret
adc
jg
mov
inc
nop
insb
push
pop
dec
pop
mov
leave
pop
pusha
rcrb
fstps
add
mov
lods
pop
jg
push
rorl
loopne
stc
ds
lret
pop
adc
pusha
mov
cmp
daa
jnp
inc
loopne
sub
inc
idiv
pop
pop
into
or
push
jbe
dec
or
sbb
and
ljmp
ja
sub
adc
mov
movsl
pop
add
mov
flds
mov
add
adc
jl
mov
jmp
mov
add
push
aas
in
ficomps
cmc
mov
pop
aad
int3
mov
insb
lock
lods
fldt
jp
xor
jne
mov
lods
imul
aad
xchg
and
cmp
dec
icebp
andb
sbb
sub
push
mov
add
neg
xor
or
pop
add
movsl
dec
xchg
data16
and
movsl
push
mov
es
and
rcrb
jne
je
imulb
inc
add
inc
and
or
lods
push
hlt
cli
hlt
out
sub
rcll
or
inc
aam
mov
push
xor
add
and
mov
test
mov
in
mov
cld
and
rcll
mov
in
or
hlt
hlt
push
xchg
xor
popf
call
jae
or
dec
dec
mov
push
or
stc
fucomip
aas
or
pop
xchg
cmp
shrb
xchg
push
xchg
xchg
icebp
jle
scas
gs
pop
adc
pop
mov
sub
inc
or
roll
mov
pop
push
idivb
test
inc
je
stc
sti
inc
add
sub
test
cs
dec
and
mov
and
jle
mov
mov
xchg
cmp
in
or
push
sbb
xchg
sarb
stos
out
jp
pop
nop
inc
neg
inc
fxam
and
mov
outsb
and
nop
rclb
push
icebp
push
pop
push
loop
pushf
loope
stos
int3
xlat
js
xor
jnp
dec
cld
sub
scas
inc
add
inc
xchg
add
push
test
mov
jle
jb
and
sbb
cmpsl
xor
xlat
or
aas
jl
add
or
dec
pop
jmp
sub
mov
xor
decb
ret
out
jecxz
sub
pop
rclb
add
or
jmp
mov
xchg
add
scas
repz
xchg
mov
pusha
xlat
cmpb
fisubrs
inc
subl
mov
cli
mov
and
jp
mov
mov
sbb
xchg
mov
xchg
ret
fwait
jmp
add
push
and
adc
cmp
jmp
mov
ffree
pop
xchg
ret
cmp
sbb
mov
push
jmp
lods
adc
imul
test
ss
xor
das
or
es
dec
push
ljmp
xchg
adc
imul
push
sbb
cmp
enter
repnz
dec
xlat
xchg
pop
cmp
addr16
in
das
adc
setp
daa
adc
icebp
popf
lods
jle
out
mov
mov
mov
mov
sbb
add
inc
add
inc
push
pop
pop
pushf
xchg
rcrb
in
add
xor
dec
rorb
push
add
push
and
jne
int3
dec
stos
add
push
jmp
sub
shlb
pop
jle
aaa
adcl
mov
inc
or
mov
test
sbb
jle
adc
adc
loopne
jecxz
mov
aas
imul
scas
aaa
xchg
mov
es
pop
fwait
adc
sarb
sub
mov
lret
hlt
dec
movsb
les
stos
lods
cmpsl
test
mov
popa
negl
loop
fs
sub
mov
pop
jmp
or
fsubs
fdivrl
or
add
push
pop
dec
push
dec
and
inc
mov
push
dec
mov
mov
add
pop
xor
and
test
add
and
pusha
add
adc
adc
das
mov
or
gs
cld
and
mov
int3
stos
xor
sbb
sub
shll
inc
adc
mov
or
push
push
jge
adc
pop
iret
jno
inc
and
push
pop
pop
xchg
nop
mov
jp
pop
sbb
cs
or
mov
icebp
loope
nop
sub
pop
cmp
mov
or
push
jo
jle
movsb
mov
mov
leave
jne
sarl
mov
push
pop
push
imul
cmp
xlat
sbb
dec
lahf
pusha
enter
jmp
not
or
daa
jmp
in
push
jne
dec
push
sub
jecxz
aas
addr16
in
daa
rolb
cli
sbb
fs
mov
adc
inc
out
jle
in
xchg
in
sahf
sub
push
push
shl
sbb
outsl
cld
inc
mov
add
dec
sub
mov
jb
xor
add
and
jne
and
repnz
push
arpl
xor
aad
jmp
xor
dec
int
add
aaa
add
xor
jl
cmp
lock
xchg
clc
adc
mov
dec
mov
or
pop
jo
nop
push
aas
cmp
pop
jmp
roll
repnz
sarb
fbld
dec
movsb
mov
sub
sub
std
lods
sub
push
xchg
push
xor
repz
xchg
push
ss
divl
mov
push
mov
ljmp
imul
mov
pusha
negl
cmp
sbb
mov
bnd
mov
mov
mov
sbb
ds
xor
push
jae
cmp
mov
jl
mov
mov
push
jg
push
mov
or
stos
daa
jbe
ret
jg
inc
mov
popa
push
push
cmp
pop
inc
popf
into
data16
and
addl
jmp
bound
test
and
icebp
sub
iret
add
in
jge
ret
jmp
xchg
xchg
cmc
lods
or
push
dec
rol
push
mov
test
inc
xchg
mov
std
push
wbinvd
push
jmp
ret
and
and
hlt
mov
and
push
xor
pop
mov
pop
sub
mov
add
lret
inc
bound
jbe
cltd
mov
adc
or
or
xchg
push
lds
cwtl
fidivrs
xor
jmp
shlb
scas
and
cmpb
and
xor
loope
das
ret
xor
repz
xor
mov
stos
pop
ss
pusha
pop
je
bound
nop
test
dec
aam
sbb
mov
jmp
cmc
xchg
pop
and
jo
sub
mov
lock
mov
hlt
sbb
shl
push
inc
pop
in
lock
xchg
adc
cmpsb
and
test
mov
push
adc
add
sbb
lret
mov
les
mov
in
pop
pushf
ljmp
out
push
pop
and
xchg
js
sbb
ret
cmp
aam
stos
add
daa
jo
push
mov
pop
jmp
cmc
pop
xor
adc
jns
and
fistpll
pop
sub
enter
xchg
dec
cmpsb
xchg
rol
or
inc
pop
test
leave
push
cltd
jmp
push
adc
and
cmpxchg
push
cmp
mov
inc
inc
sbb
mov
push
add
out
dec
call
pop
adc
pop
dec
das
or
ret
push
add
pop
add
loope
inc
leave
fstl
test
in
inc
lcall
stc
imul
icebp
and
add
lret
popf
jl
push
dec
xchg
jmp
xor
xchg
jne
mov
xor
sbb
lahf
or
and
rorl
mov
cmc
mov
repnz
push
xlat
sbb
dec
or
pop
pop
jmp
lret
fldl
inc
jmp
add
mov
dec
shll
scas
mov
test
cli
in
das
jecxz
and
xor
adc
bound
sbb
or
out
into
adc
andb
mov
cmc
int3
outsl
es
cwtl
xchg
pop
subb
lds
jge
out
sub
repz
xor
push
gs
push
dec
add
pop
jmp
test
add
fistl
or
and
jmp
pushf
ja
dec
cld
add
sub
pop
in
jmp
and
das
scas
sub
sub
fcoms
dec
movsl
loop
inc
push
adc
pop
or
inc
cs
aaa
sbb
add
dec
push
das
sete
pop
in
or
lock
andb
les
push
lds
clc
sti
mov
mov
or
inc
notl
mov
cmova
push
adc
fimull
jmp
jmp
jo
xchg
xchg
jne
xchg
stc
and
cmp
incl
xor
shlb
ljmp
roll
mov
enter
ficomps
or
mov
add
stc
stc
bound
add
inc
sbb
inc
leave
sub
adc
ja
shlb
add
adc
dec
dec
stos
xchg
sub
lahf
test
add
push
idiv
out
fsubl
xchg
add
sub
xchg
das
incl
popa
sub
clc
cmpb
or
adc
daa
pop
pop
shrl
mov
mov
sub
lcall
push
dec
nop
int3
popf
ret
lds
movsl
mov
pop
repz
lcall
xchg
imul
pop
push
gs
sahf
mov
addb
orb
pop
fs
sbb
pop
stos
inc
rolb
ja
sub
ficoms
jmp
sub
pop
mov
insb
xlat
mov
pop
insl
or
subl
ret
and
clc
dec
lods
jno
add
add
inc
inc
mov
js
mov
cwtl
dec
xchg
bnd
pop
inc
rcrb
mov
or
fsubp
jecxz
pop
cmp
aam
ja
sbbb
enter
xor
dec
mov
adc
adc
add
push
adc
pusha
mov
jmp
mov
push
cmp
in
jmp
sahf
js
loope
dec
jmp
lods
inc
loopne
rorb
ja
mov
pop
fnstsw
dec
jns
mov
pushf
push
dec
jmp
out
bnd
mov
mov
adc
das
push
lret
mov
sarb
outsb
nop
pop
sbb
xchg
sub
xor
das
jmp
daa
inc
push
dec
sub
scas
mov
jmp
mov
add
hlt
imull
scas
loop
add
int
data16
jo
jle
and
pop
jle
inc
sub
sbb
shr
mov
loope
jg
popa
dec
mov
js
das
lods
fistpl
in
and
and
jmp
or
test
data16
in
int
pop
pop
push
mov
int3
mov
jecxz
pop
ret
xchg
ja
icebp
aam
or
in
push
nop
testl
popf
dec
jmp
sub
addl
test
jo
sbb
loop
stc
mov
ffreep
cmp
lea
popa
push
push
pop
bound
pop
fldl
jns
pop
dec
sub
adc
mov
add
sub
sahf
or
adc
stc
and
icebp
add
pop
test
dec
mov
lcall
push
push
mov
jmp
add
sub
aad
insl
subl
aaa
mov
xlat
jnp
cmp
sub
pop
pop
cmp
jbe
fidivrs
js
add
mov
jmp
pop
mov
jmp
in
out
push
popf
push
mov
jno
bound
insb
dec
movsb
sarl
dec
mov
push
mov
add
aad
cmp
inc
sarb
and
js
leave
pop
pop
push
inc
mov
sub
dec
scas
xchg
xlat
cwtl
mov
lods
mov
sbb
xor
mov
inc
loopne
cmp
mov
add
push
repz
add
lret
ret
incb
pop
sub
push
sbbb
jg
adc
fadds
movsb
mov
and
push
aas
sbb
jmp
jmp
xchg
add
fsubs
or
mov
cs
cmp
mov
add
or
adc
in
add
std
mov
inc
sub
gs
std
rol
lods
lods
fmuls
lods
push
jle
aaa
stos
cwtl
adc
pop
sub
sbb
hlt
lret
out
sub
inc
or
or
shrb
cli
mov
and
or
or
insl
sarb
jmp
aas
loop
ljmp
cmp
jl
sti
and
push
add
pop
jmp
cmpsl
add
ss
sbb
jmp
add
jge
das
nop
testb
inc
xorl
jmp
bnd
jmp
clc
pusha
jg
decb
into
mov
mov
add
sub
push
clc
jmp
xchg
add
pop
je
xor
sub
add
xchg
jl
push
cltd
and
lods
jb
cld
shl
mov
cwtl
xchg
push
mov
add
xor
das
outsb
jmp
lods
fmuls
movsb
or
loope
add
push
inc
outsl
outsb
mov
movsl
rolb
movsb
jmp
fstpl
xchg
andl
leave
movsl
push
stos
push
jne
or
test
dec
mov
inc
mov
adc
pusha
add
dec
sbbl
repnz
add
push
fnstsw
add
negl
push
jmp
pop
clc
lds
cli
jmp
movhps
mov
jne
js
xchg
cli
jmp
sub
push
xor
aaa
mov
inc
sub
sub
in
into
or
outsl
pushf
dec
fldl
push
cmp
cmc
idivl
shlb
mov
adc
arpl
repz
shrb
pop
stos
aam
xchg
loope
into
mov
or
sbb
cmp
mov
add
clc
inc
and
jle
push
pushf
js
push
test
leave
pop
loope
pop
sub
xor
cmp
mov
or
bnd
aam
loopne
sub
mov
fdivs
xchg
outsl
pop
inc
pop
fstl
cmpsb
imul
dec
push
or
xor
in
into
movsb
pop
and
and
add
mov
rorb
popl
movhps
cld
mov
pushf
mov
pop
jnp
sub
mov
push
xchg
push
ret
pop
pop
gs
add
popa
aas
fucomp
add
pushf
data16
sbb
fs
dec
and
xchg
add
pusha
in
test
mov
fstpt
xorb
add
dec
and
dec
mov
lea
popf
xchg
fiaddl
shll
adc
insb
mov
jb
rorb
mov
fsubl
or
jno
pusha
dec
push
mov
nop
sub
pushf
scas
repnz
add
bound
inc
andb
push
add
je
or
enter
lods
jg
lods
dec
push
call
xchg
adc
rorl
add
test
pop
push
out
out
dec
mov
adc
cmp
push
xchg
mov
imul
shlb
sub
aas
fdivs
sbb
sbb
adc
inc
jne
jb
mov
popa
aad
cs
adc
push
inc
repnz
pop
xor
pop
sbb
mov
jmp
dec
push
mov
sub
hlt
cmp
iret
out
js
pushf
push
add
sub
loope
test
add
nop
cs
insb
aaa
add
pop
shr
sbb
lds
sti
dec
mov
push
jmp
push
sahf
int
push
xor
add
cmp
ljmp
mov
sub
mov
push
pop
xorl
sub
mov
imul
jmp
mov
cltd
mov
fidivrl
seta
dec
cltd
push
cld
outsb
mov
xchg
mov
adc
jno
inc
into
push
cltd
xchg
push
jge
std
and
xchg
mov
xor
jnp
pusha
pusha
or
push
cmp
jg
nop
orl
or
add
jbe
or
insb
mov
scas
xor
je
cmp
jmp
inc
fsts
cli
add
push
adc
aad
dec
and
xchg
test
les
mov
fucomi
subb
test
fs
pop
push
and
adc
mov
mov
lds
or
mov
add
xor
in
in
xchg
adc
or
sub
repz
add
jb
jmp
push
add
push
jb
adc
sub
jns
add
pop
cli
rclb
icebp
orb
mov
dec
sub
jo
lahf
mov
pop
ja
or
in
rorb
pop
pusha
jp
fsubrl
shr
add
mov
add
xor
add
cs
rorb
xor
ja
iret
jmp
xlat
and
add
fsubl
fs
xchg
lods
out
bound
shr
cmp
incb
adc
dec
sahf
cmp
xlat
mov
nop
sbb
jmp
xchg
xor
movsl
jp
jb
test
pop
test
movsb
cmpb
or
and
sub
or
xchg
mov
jmp
dec
lret
orb
or
aaa
mov
push
push
mov
bound
fidivrs
mov
add
je
mov
popa
in
cmp
adc
sub
add
sub
inc
rolb
inc
cmp
sbb
sub
dec
repz
push
push
push
jo
sub
mov
sub
push
jg
jmp
mov
inc
mov
push
mov
loopne
push
push
mov
lahf
xor
fsubrs
pop
xor
rorb
shl
push
pop
jns
clc
scas
mov
push
adc
lea
sub
cld
jb
out
inc
loope
mov
xchg
xlat
imul
pop
pop
in
ret
movsb
testl
sub
or
inc
cld
mov
or
repnz
push
enter
inc
leave
insb
popa
adc
xor
sub
push
push
add
sub
pusha
jmp
jns
scas
inc
out
adc
es
jecxz
sti
shr
mov
addb
or
push
jmp
rcr
push
add
pop
psraw
add
icebp
imul
das
pop
adc
scas
jl
jmp
xchg
xlat
cmp
sub
cmp
mov
mov
divl
mov
add
rorb
mov
add
or
push
adc
and
jbe
push
mov
cmpsb
mov
jg
into
inc
adc
divl
xchg
jmp
fnstsw
push
pop
xor
cld
nop
push
push
push
jmp
je
mov
mov
dec
xchg
push
flds
mov
fistps
das
xor
cmp
inc
rolb
add
pop
imul
dec
push
mov
or
es
adc
outsl
mov
std
cmc
out
pop
das
popa
mov
bound
add
ret
xor
out
inc
dec
sbb
xchg
push
scas
imul
xor
add
ficompl
lcall
sbb
in
out
or
pop
jmp
or
mov
jecxz
sbb
push
fidivs
push
sub
and
xor
adc
and
add
scas
sub
pop
and
mov
push
push
lret
jp
cmp
xchg
or
cmovle
jmp
jmp
and
inc
dec
imul
in
mov
inc
mov
pop
add
loop
lret
int3
dec
jmp
jns
push
xor
sti
mov
xchg
lods
dec
xchg
add
or
sti
fcomps
sub
dec
leave
dec
sub
or
pusha
inc
xor
jmp
lods
addr16
pop
sbb
dec
pop
sti
popf
leave
std
jl
pop
js
mov
mov
add
leave
sbb
loop
add
lcall
add
and
pop
pop
mov
pop
into
inc
sbb
test
repz
push
add
test
or
add
mov
stos
sbbl
ret
cli
cmpsl
das
adc
sub
jbe
sbbb
jae
loopne
jo
sub
imul
xchg
adc
repnz
mov
adc
dec
jle
mov
into
pop
mov
pop
sbb
out
enter
aas
push
cmp
notb
int
movsb
xor
ds
stos
das
mov
lods
leave
cmpsl
test
add
sti
add
add
dec
jmp
addl
insb
ljmp
test
movsb
mov
cmp
movsb
jae
test
cli
or
sbb
mov
jmp
clc
sub
scas
dec
jp
fadds
pop
jmp
nop
pop
or
andb
inc
in
mov
cmp
lret
xor
in
sub
popa
mov
adc
fsubr
pushf
cs
cli
repnz
inc
jne
or
jmp
mov
cmp
jle
adc
aas
test
dec
ret
clc
mov
push
xor
push
sti
fcom
pop
clc
add
sub
push
jge
or
jmp
jmp
push
push
push
and
sbb
clc
cmp
lods
push
push
out
icebp
jnp
stos
gs
pop
lret
aaa
push
mov
mov
pop
sub
pop
es
lods
and
cli
add
pop
pop
aam
mov
loop
mov
pop
pusha
push
movsb
push
adc
pop
sub
jmp
fs
cwtl
and
nop
scas
push
or
mov
dec
dec
lods
in
pop
dec
out
dec
mov
mov
sub
push
or
movsb
pop
sub
jge
test
dec
int3
xchg
in
test
jns
add
arpl
sub
insb
dec
inc
mov
dec
add
stos
pop
pop
cltd
shlb
pusha
fcomp
push
jp
or
add
fldt
push
or
sbb
into
add
push
and
cmp
daa
xor
xchg
adc
jo
or
scas
flds
fcom
push
leave
daa
sbb
popf
dec
rcrb
jg
fwait
movsl
pop
imul
push
dec
or
outsb
aad
push
jmp
jmp
lods
jno
or
pop
adcl
mov
es
in
jge
push
mov
pop
jmp
and
push
mov
mov
pop
xlat
lret
fstps
jmp
cmpb
or
subl
sbb
dec
aad
aam
or
and
mov
xchg
push
push
dec
push
add
in
mov
sbb
mov
fwait
bnd
loopne
push
sub
js
jl
dec
loop
mov
inc
xchg
lea
adc
popa
mov
in
and
out
sub
mov
dec
orl
add
cmp
shll
loop
movsl
ljmp
insl
add
jg
cmp
mov
clc
push
mov
fcomps
pop
hlt
scas
jb
imul
add
mov
dec
sub
or
sub
or
cli
rorl
add
or
loop
push
add
js
cmp
xor
stos
jmp
cli
push
mulb
bound
lock
jmp
jecxz
and
fiaddl
gs
lcall
sub
shlb
enter
mov
out
aam
dec
in
in
pop
dec
sub
cmpsl
jmp
test
fsubrs
lret
inc
mov
push
xor
outsl
xor
adc
jmp
movsb
cmp
pop
xor
pop
add
xor
dec
and
imul
hlt
lret
adc
jnp
sbb
int
inc
cmpsb
or
flds
stos
xchg
out
sub
popf
push
int
jb
push
push
sub
repz
jmp
pop
jo
xchg
std
pop
int
pop
add
shr
add
push
mov
jmp
xchg
or
sub
outsb
inc
in
std
jmp
cmp
imull
int3
clc
in
std
cmp
sub
inc
test
cmp
xchg
jo
aam
lods
and
sar
cmp
xchg
push
push
daa
mov
jo
cmp
ror
test
inc
out
in
cmp
mov
adc
jmp
popf
scas
xchg
mov
cmp
testl
xor
pop
add
push
enter
inc
jle
popf
orb
sub
dec
out
sub
xlat
leave
pop
sti
into
ret
jmp
cmpsl
sbb
and
push
mov
pop
jae
jmp
jb
cwtl
or
and
cltd
inc
add
loope
sahf
and
and
pop
imul
mov
push
or
mull
ja
cld
xchg
clc
dec
push
dec
ret
add
mov
add
in
enter
xchg
inc
adc
lea
jle
mov
add
or
lds
inc
or
jo
push
push
push
loop
sti
add
and
lods
iret
aas
icebp
lret
ud2
bound
pop
pop
push
mov
push
test
pop
pop
lock
or
out
pop
mov
hlt
push
or
int
dec
xchg
xchg
add
leave
xor
dec
and
rcrb
jno
jmp
sub
dec
stc
mov
test
pop
jl
popf
pop
shr
test
sbb
push
push
imulb
adc
add
push
inc
push
fimuls
dec
lret
arpl
fs
cld
cmp
mov
add
pop
bound
or
jno
or
sbb
stos
das
sti
cmp
scas
xor
jmp
int
inc
test
inc
dec
cld
jnp
cmp
mov
jle
xor
jo
xchg
push
repnz
popa
out
add
pop
scas
lahf
pop
adc
mov
js
push
jmp
xchg
enter
out
movsl
dec
jle
cwtl
mov
ljmp
out
cwtl
and
sbb
sub
or
xor
adc
notl
stc
loop
aas
je
das
cli
je
xchg
and
test
jo
mov
adc
out
jg
jno
or
fnstenv
push
cmpsl
insl
cmp
dec
call
pop
orb
call
sti
pop
js
add
shll
adc
pop
rorb
hlt
push
lcall
mov
sub
push
movsl
ja
fwait
add
mov
add
stc
ljmp
push
rcll
inc
push
ficomps
sarl
or
ljmp
inc
aad
and
or
and
lods
push
loop
or
mov
clc
and
pop
cli
lahf
mov
lahf
mov
ja
jle
lret
call
das
jl
hlt
shrb
pop
enter
mov
push
repnz
xchg
push
stos
mov
push
outsl
jno
push
mov
jmp
mov
cmp
adc
inc
cmp
call
lock
mov
jge
xchg
je
sahf
mov
pop
mov
adc
jg
jp
leave
inc
pop
nop
loopne
mov
insb
xor
adc
loop
sub
cmp
stos
pop
mov
ljmp
loope
hlt
leave
in
movsb
fsubs
xorw
stos
lret
movzwl
push
add
cmc
sarl
push
bound
push
idivb
insl
dec
ss
cmp
sbb
mov
sub
add
mov
or
mov
mov
adc
dec
jnp
in
lds
lret
add
js
dec
fnstcw
jl
pusha
out
call
adc
js
std
imull
add
fidivl
pop
or
push
mov
push
ja
mov
push
and
aam
dec
in
dec
in
bnd
dec
stos
pop
add
call
jp
gs
pop
lea
mov
out
cs
scas
sbb
sub
pop
push
enter
insl
hlt
mov
xor
movsl
fcomp
sub
jmp
test
sar
repnz
inc
bound
xor
mov
call
into
sbb
dec
mov
cmp
xchg
inc
les
ja
pop
das
mov
mov
imulb
pop
push
sbb
pop
shl
push
xchg
popf
fdivrs
adc
gs
jbe
bound
pop
mov
xchg
or
aad
inc
xor
pop
sub
dec
jb
nop
dec
or
push
mov
xorl
push
int
test
movsb
call
sbb
inc
lcall
lret
jge
es
jp
xor
sarl
fstl
mov
jmp
mov
push
mov
mov
cmpsb
test
cwtl
and
lea
aas
add
shll
xlat
push
jo
inc
mov
xchg
push
or
test
into
fisubrs
mov
loop
loop
and
mov
pusha
neg
add
js
fldcw
fcomps
test
shlb
imulb
pop
or
adc
popa
and
dec
aas
add
and
pop
and
mov
je
pop
push
cmpsl
lahf
out
and
dec
das
pop
adc
and
mov
shr
add
sub
es
cmp
or
mov
dec
push
pusha
xchg
leave
dec
push
pop
cld
xchg
into
out
mov
jp
jp
adc
scas
mov
add
jmp
sti
mov
sahf
pop
ja
sbb
fs
and
adc
and
pop
push
fidivrl
and
fdivrs
testb
ds
sub
repnz
mov
push
pop
sub
jmp
ds
sub
aam
mov
push
dec
repnz
inc
jbe
mov
xchg
xchg
jp
xchg
cwtl
ret
and
rcl
clc
dec
std
or
ja
jle
add
mov
pop
add
jmp
xchg
leave
addr16
xlat
jg
adc
lods
sub
call
jne
cmp
jmp
not
mov
push
cs
add
jns
xor
insb
jb
sub
mov
adc
and
stc
rclb
cld
xor
or
add
and
inc
jmp
stos
jmp
xlat
sarl
jmp
fidivs
dec
repnz
into
fcoml
mov
adc
ss
fidivrs
push
mov
int
pop
xchg
popf
repz
stos
or
ret
or
in
sbb
lds
mov
jns
jae
push
or
push
jno
or
push
call
push
je
add
dec
mov
jo
xchg
ffree
lock
pop
push
pop
pop
mov
orb
add
push
lock
inc
mov
mov
adc
mov
std
fstpt
or
ja
outsb
scas
xchg
ljmp
push
fidivrs
dec
push
cli
or
push
sub
sti
inc
icebp
rorb
andb
loop
pop
dec
pop
sbbb
pop
enter
push
or
mov
mov
pop
cmp
sbb
cmc
orl
jmp
ficompl
push
aaa
aam
lods
fiaddl
mov
add
fldl
xor
dec
add
xor
mov
shlb
in
mov
xchg
out
or
dec
je
filds
cmp
scas
lcall
popa
push
pusha
adc
adc
cli
cwtl
ss
pop
jg
sub
sub
mov
mov
int
addr16
gs
mov
sbb
movsb
push
scas
adc
sahf
loop
fldl
add
shrl
jo
xchg
jge
add
in
or
push
adc
push
dec
adc
and
cmc
lock
ds
stos
hlt
add
dec
pop
add
inc
popf
insb
push
incb
inc
push
push
jb
adc
mov
push
push
pop
loopne
fnstcw
mov
push
lret
add
sub
dec
sub
out
mov
jb
jecxz
int3
pop
sbbb
xchg
mov
mov
insl
fisubrl
inc
mov
iret
add
dec
adc
lret
cmp
mov
add
add
ret
mov
lds
pop
mov
push
bound
and
scas
ss
inc
xor
ret
jae
push
outsb
jmp
mov
les
jle
pop
push
sub
pop
add
mov
sub
shrb
add
aam
jle
stos
pop
xlat
add
pop
sub
daa
cltd
push
cmc
sbb
xor
inc
ljmp
mov
push
xchg
jmp
pop
out
push
jmp
sub
jmp
icebp
or
push
aas
mov
add
or
and
jae
mov
loop
fcmovnu
dec
mov
sub
repz
cmp
inc
add
push
fsubr
lock
pushf
addb
push
sahf
out
push
imul
adcb
sub
adc
loop
mov
mov
add
dec
push
push
fidivrl
ret
push
adc
rcrb
cwtl
jge
insb
sarb
inc
jmp
push
xor
push
cmp
bound
test
mov
or
or
pop
mov
lods
lock
or
movsb
cmp
imul
jb
adc
dec
push
push
mov
ljmp
int
nop
imul
adc
mov
pop
cmc
inc
std
and
dec
adcb
adc
aad
sahf
xchg
jo
dec
repnz
leave
dec
adc
add
add
add
iret
or
dec
xlat
ja
ljmp
popa
sarl
adc
or
xor
or
push
pop
or
pop
inc
jmp
cmpb
stos
hlt
insb
inc
call
shlb
rorb
jns
pop
mov
dec
and
nop
in
mov
sbb
lret
mov
jp
mov
sti
dec
push
pop
stos
adc
repz
dec
pop
stos
gs
add
orl
leave
add
mov
fs
inc
mov
shll
fisubrs
xchg
or
dec
imul
dec
lahf
cmp
out
sbb
xchg
nop
xor
loop
mov
push
and
in
roll
push
lret
movsl
inc
sbb
push
push
dec
pop
dec
sub
insl
add
xlat
loop
jge
lahf
inc
negb
mov
cmc
sbb
or
or
cmp
or
mov
jmp
lahf
test
dec
adc
test
bound
mov
mov
or
aad
mov
loope
jbe
add
sub
push
sub
subl
or
push
mov
xchg
popl
sbb
sub
jmp
cmp
mov
or
or
mov
rcr
mov
sub
add
shr
pop
roll
pushf
adc
pop
sub
stc
add
jmp
stos
out
xchg
ljmp
das
and
shlb
add
push
adc
andb
sbb
mov
repz
ljmp
insl
mov
roll
das
jmp
in
push
lods
mov
push
bound
adcb
mov
or
add
push
xor
push
add
add
lods
jo
jecxz
clc
int3
xchg
pop
repnz
add
dec
pop
dec
jmp
into
sub
int
jg
sub
mov
movsb
je
push
push
daa
mov
subb
jns
fnsave
daa
dec
pusha
lahf
xchg
test
lds
inc
jmp
dec
out
mov
in
enter
add
ret
sub
and
mov
and
push
cmpsl
movsl
adc
cmpsb
adc
sub
mov
and
jle
add
loopne
jmp
push
popf
pusha
push
jmp
les
ret
cwtl
or
in
push
push
pop
mov
adc
dec
mov
in
ss
sbb
call
or
xchg
or
add
je
in
jmp
ret
pop
das
push
addl
jnp
hlt
xor
repz
add
imul
xchg
jo
cld
push
push
mov
jo
daa
and
dec
popf
incb
popa
push
mov
xchg
jl
inc
icebp
jne
lods
cmp
sbb
inc
add
pop
pop
push
xchg
pop
popf
fdivrl
mov
fdivs
jmp
add
out
popa
adc
dec
dec
xchg
outsb
jl
pop
pop
lods
dec
pop
movsb
js
mov
mov
mov
mov
mov
das
fisttps
or
imul
dec
call
lret
das
jmp
stc
adc
xor
daa
jl
mov
add
and
cli
in
scas
test
rcrl
sub
aam
push
lret
mov
ret
pop
pop
popf
push
mov
ljmp
adc
hlt
jmp
aad
pop
mov
ja
insb
pop
push
jbe
call
push
loope
sbb
mov
sti
dec
mov
repz
sbb
add
push
mov
adc
in
orl
cwtl
pop
mov
stc
arpl
sbb
cmc
sbb
orb
outsb
dec
push
fmuls
mov
and
and
outsb
pop
fbstp
pop
add
mov
out
pop
push
jmp
rclb
clc
mov
add
adc
lahf
mov
xchg
nop
ret
xor
inc
ret
pusha
xchg
test
jb
icebp
scas
loope
cli
jg
sahf
jne
or
push
dec
xchg
sub
clc
jo
inc
bound
ret
add
add
mov
mov
pop
out
add
inc
jb
pop
das
and
daa
imul
jns
mov
or
movsb
and
push
pop
sarb
xchg
insb
addb
fs
pop
xor
fsub
outsb
inc
testb
xchg
jl
pop
fists
inc
push
or
jno
adc
mov
adc
cli
adc
pop
sub
jne
pop
push
push
inc
daa
push
sbb
xchg
movb
push
cmc
sub
adc
add
mov
mov
orb
inc
ljmp
mov
inc
pop
or
aam
leave
out
je
sahf
mov
pop
mov
shl
push
ret
mov
incb
popf
mov
mov
xchg
inc
push
shl
pop
dec
push
pop
inc
jmp
mov
sub
pop
fldcw
out
fiadds
jbe
mov
xor
shlb
jg
nop
aad
jg
add
scas
out
sub
jle
out
mov
in
mov
and
dec
dec
add
std
ds
xchg
mov
cs
es
mov
mov
movsb
shll
push
int
aam
jo
add
dec
pop
add
push
dec
inc
mov
shlb
push
sbbl
or
mov
and
iret
jno
imul
neg
xchg
add
xchg
insb
call
pop
pop
dec
adc
sub
dec
push
or
push
add
jb
jnp
test
fs
or
dec
mov
in
add
pop
mov
mov
push
xor
fsubrl
push
pop
cld
adc
mov
push
dec
xchg
dec
xchg
pusha
mov
sub
adc
pop
jbe
mov
push
push
gs
mov
outsl
repz
or
sub
call
decl
jbe
pop
loop
roll
mov
sbb
icebp
out
hlt
jne
inc
pop
or
stc
jg
add
jmp
dec
daa
mov
movsl
mov
xchg
inc
popf
inc
sub
pusha
cmp
pop
data16
pop
jecxz
add
fwait
push
xchg
fdivrs
cmp
add
pop
mov
add
pushf
xor
test
ret
inc
mov
inc
scas
adc
aaa
adc
mov
add
or
jmp
mov
jne
pushf
add
jno
repnz
arpl
inc
xchg
pop
xchg
jae
add
adc
xor
push
pop
sbb
pop
jae
adc
inc
or
jp
lock
add
and
cwtl
loopne
mov
das
inc
xchg
inc
jo
aad
out
imul
xchg
push
in
xorb
pop
cmp
data16
rdtsc
ljmp
mov
in
jae
xchg
incl
push
inc
movsl
pop
scas
xchg
in
and
pop
bound
pop
dec
jb
jae
addr16
pop
mov
mov
gs
add
lret
jmp
xor
lock
out
add
pop
je
mov
jle
cmp
push
pop
add
adc
sbb
jo
and
mov
inc
mov
mov
jns
cmpsl
sbb
pop
adc
icebp
push
mov
push
adc
adc
sub
sub
sub
or
je
adc
mov
insb
sub
push
jmp
push
mov
dec
add
mov
xor
lret
lock
adc
pop
daa
mov
outsb
add
jmp
mov
xchg
cmp
dec
stc
dec
pop
push
lret
add
js
aaa
and
mov
mov
jno
das
mov
or
arpl
sub
ds
adc
shll
js
and
incb
negb
mov
ja
xchg
jl
or
out
dec
loop
push
test
repnz
mov
int3
stos
mov
xor
lods
push
icebp
nop
call
call
add
jmp
xor
stos
clc
mov
mov
pop
ror
adc
push
cmp
sbb
mov
je
inc
mov
and
pop
fidivs
inc
push
mov
jecxz
dec
movsb
cmp
pop
sub
and
add
pop
jmp
rcr
rclb
sub
movsl
sub
in
lret
adc
or
jmp
push
ds
pop
jb
push
adc
and
pop
mov
cld
test
dec
mov
mov
xchg
adc
pushw
xchg
les
into
aam
out
cmpl
cmc
dec
mov
in
add
sub
mov
leave
cmpsl
sub
imul
fmul
or
jp
push
sub
ret
lds
in
cs
pop
or
dec
jmp
repz
js
cltd
pop
push
push
mov
movsl
testb
test
call
or
cs
shr
nop
aas
lods
add
jb
xchg
and
inc
aaa
mov
loope
cmpl
dec
push
adc
rolb
aad
jno
pusha
into
lea
mov
mov
mov
jmp
scas
shr
repz
dec
mov
into
lds
in
dec
push
add
into
fcom
or
xor
std
mov
mov
jge
sahf
and
ret
jo
jg
les
or
push
adc
or
mov
xchg
or
data16
dec
sbb
cld
test
scas
push
insl
pop
lods
or
mov
test
xchg
sarb
inc
xor
lahf
sarl
mov
pusha
sub
mov
roll
sbb
clc
jecxz
pushf
push
js
lcall
bound
rolb
jmp
push
and
pop
in
scas
adc
int3
mov
sbb
mov
xor
or
xchg
add
add
cli
lret
pop
repnz
push
mov
sub
mov
daa
adc
inc
add
sub
sti
mov
ret
adc
jle
pop
mov
std
mov
stos
mov
out
std
out
add
flds
xor
test
xor
addl
or
pop
mov
add
ds
aas
movsb
fwait
jg
mov
das
fcomps
cmp
jmp
sub
push
cli
jg
clc
shrl
leave
jmp
pop
xchg
add
pusha
or
mov
adc
jmp
adc
pop
inc
mov
imul
jns
dec
xor
sarl
pop
mov
push
cmp
add
pop
jmp
xchg
in
push
adc
repz
mov
or
jns
inc
inc
iret
or
and
xor
mov
jns
insb
je
pop
push
mov
xchg
sub
xor
adcl
shll
push
mov
ret
in
stos
push
dec
mov
cmp
dec
scas
lret
fistpl
and
pop
pop
bsr
ds
and
jne
fwait
aad
mov
sbb
sahf
fucom
xchg
or
add
and
iret
leave
rolb
mov
jg
ret
dec
pop
stos
xchg
pop
adc
add
xlat
outsb
inc
ret
loop
cmp
cli
dec
mov
ret
xchg
fstpt
add
cmpsl
addr16
adc
out
fadds
dec
pop
adc
mov
adc
xor
pop
add
add
pop
arpl
inc
pop
dec
in
out
add
mov
shrl
sti
sub
add
pop
pop
push
imul
test
jmp
nop
out
mov
fbstp
mov
jmp
insb
pop
and
shrb
out
mov
rorb
cs
xor
xchg
or
xlat
mov
cmc
add
inc
jno
sbb
xor
jle
lods
jmp
fimuls
jbe
mov
dec
or
dec
pop
add
ja
xor
in
movq
repnz
arpl
sbb
imul
pop
sbb
sub
mov
inc
fs
sbb
sub
sub
mov
or
popa
xor
pushf
jmp
mov
in
sub
cs
add
mov
pop
lods
ja
imul
jo
adc
xor
jp
pop
xchg
movl
push
pop
sarl
and
movsb
add
ret
ja
movl
sub
fcoml
or
adc
pop
shl
sarb
mov
and
das
sub
test
mov
xor
sbb
and
nop
add
cmpl
push
mov
adc
faddl
loope
cmp
das
sub
shll
xchg
out
roll
inc
add
iret
jle
cmp
aam
pop
mov
scas
fdivs
ja
out
pop
xchg
inc
imul
xchg
fnstsw
add
popf
mov
pop
xor
cmp
dec
enter
add
inc
sub
out
sub
add
pop
shr
add
jmp
aaa
inc
jmp
xchg
call
sbb
mov
clc
ss
ficomps
xor
fprem
push
pop
pop
in
mov
xchg
pop
sub
xchg
clc
pop
add
fisubrs
loop
dec
jmp
in
aas
sub
or
fistl
imul
testl
cmp
xchg
hlt
test
mov
push
xchg
ficomps
addb
mov
in
mov
lahf
dec
pop
jmp
pop
add
jmp
jns
insb
and
lahf
mov
andl
push
and
jp
pushf
loopne
stc
push
sub
add
sar
mov
cmp
out
inc
cli
inc
subb
push
ret
jmp
divl
inc
mov
jns
add
mov
sub
sar
jmp
push
or
add
dec
mov
add
dec
sbb
mov
mov
cmpsl
aad
push
mov
pop
jmp
mov
push
mov
sub
loopne
clc
icebp
bound
pop
cmp
lret
add
arpl
mov
and
mov
scas
stos
std
inc
xchg
jae
ds
leave
or
xor
aaa
or
push
ja
adc
testb
mov
and
and
rclb
or
hlt
or
pop
sub
sub
add
pop
lds
stos
repnz
cmp
push
roll
jmp
rcrb
fidivs
cmp
iret
adc
or
movsb
or
arpl
int
lods
and
or
push
iret
adc
sbb
pop
mov
pop
push
cld
add
mov
das
stos
lahf
dec
loopne
mov
dec
not
mov
subb
add
sub
dec
sbb
adc
arpl
xchg
mov
cmpsl
outsl
fdivl
mov
enter
adc
pop
pop
gs
dec
jne
cmp
cmc
dec
cmpl
jle
sub
repz
xor
std
inc
sub
js
addb
ds
cmpl
jmp
rorb
jns
push
xchg
mov
fiadds
lods
push
adc
test
add
fdivrl
and
sbb
mov
jmp
test
lahf
xchg
mov
adc
xchg
pmaxub
push
std
xchg
add
cmpsl
rclb
pop
jns
xchg
mov
icebp
popa
push
push
and
mov
pop
and
push
pop
pop
addb
or
jmp
or
roll
rcrb
sbb
pop
jecxz
sub
sbb
neg
push
shr
loopne
out
dec
jmp
scas
cs
push
mov
int3
push
bound
dec
xchg
std
dec
inc
sub
aaa
jmp
fstps
ret
nop
and
push
sub
add
sub
stc
mov
or
mov
movsl
xlat
into
scas
imulb
jno
push
mov
inc
cmp
leave
fcmovb
int
ds
fstl
mov
jge
std
cmp
dec
sub
jae
fwait
xchg
popf
xor
mov
test
push
jnp
and
lods
or
and
ret
sar
jg
jecxz
ds
out
fbstp
adc
loop
xor
or
pop
je
test
inc
les
dec
mov
xlat
fstpl
sbb
add
loop
and
xchg
outsb
mov
jno
inc
push
sub
pop
mov
mov
pop
pop
push
sub
mov
fs
rclb
jge
lock
jp
je
insb
dec
jnp
js
add
outsl
jmp
xchg
mov
dec
call
adc
daa
pop
push
test
in
push
scas
or
jno
popa
mov
pop
shrb
lcall
mov
fs
adc
push
dec
mov
into
rolb
loopne
jnp
push
dec
pop
and
nop
cmpsb
add
push
fnsave
clc
push
ret
or
test
add
insb
xchg
andb
pop
les
pop
mov
mov
call
mov
adc
lods
xchg
add
imul
mov
cmp
das
push
bound
xor
scas
adc
pop
dec
test
cmp
pushf
rolb
sub
pop
push
push
movsl
cli
cmp
push
inc
and
repnz
lahf
dec
xchg
jl
daa
insl
lcall
int
pop
xchg
dec
pop
std
fwait
icebp
jmp
mov
pop
fadds
fidivrl
inc
or
shr
push
pushf
test
mov
inc
jmp
jb
pusha
cmp
jae
dec
popf
jp
mov
and
cmp
inc
or
mov
inc
cmp
adc
rcrb
lods
or
loope
ficoms
pop
pop
rorl
dec
or
xor
pop
inc
out
or
or
or
dec
in
xor
rcll
js
add
bound
pop
sub
inc
mov
dec
lods
sub
mov
pop
add
pop
mov
add
mov
das
scas
mov
scas
mov
shl
lahf
ret
add
xchg
sub
sub
in
jb
mov
adc
cmp
and
add
ret
adc
shr
int
int3
and
iret
aaa
add
in
jle
mov
jmp
and
es
mov
das
xorb
ljmp
and
inc
pop
cmc
pop
testl
sbb
lahf
push
sbb
and
ljmp
push
test
adcb
je
pop
shl
mov
in
jns
xor
and
outsb
fcmovbe
push
pop
xor
nop
adc
dec
lock
mov
daa
aam
aaa
dec
jo
adc
jmp
repnz
jg
push
xor
adc
fwait
leave
push
pusha
xchg
call
cmp
lock
je
and
lods
jg
xor
icebp
push
xchg
cs
or
incb
mov
mov
not
sub
lret
mov
mov
shl
orb
pop
jns
roll
repz
loope
clc
xchg
lahf
cmp
and
sub
and
add
dec
lods
mov
incb
orb
mov
cwtl
cs
sahf
add
mov
bound
fadd
jg
add
insl
clc
test
xchg
pop
daa
sbb
or
mov
sub
aad
mov
mov
sbb
scas
fmull
add
push
push
jmp
mov
fmull
stos
loope
iret
loope
lds
lret
lahf
xor
sbb
mov
sbb
hlt
sub
testl
jmp
scas
dec
je
rorb
xchg
dec
xchg
and
pop
mov
xlat
pop
and
arpl
sbb
push
int3
sub
in
fstps
push
or
sub
call
je
add
ficompl
push
hlt
test
in
int3
lods
jmp
jl
nop
lods
dec
push
xchg
jg
mov
jmp
pop
sub
loop
add
mov
cmpsl
shl
and
mov
mov
jno
xchg
cmpsb
sbb
out
add
pop
int3
negl
push
nop
jb
shr
out
insb
cwtl
jno
mov
and
adc
lock
mov
mov
add
mov
daa
popf
dec
shll
mov
in
add
daa
outsl
cmp
repnz
cmpsb
mov
xor
jns
push
outsl
stos
out
bswap
loop
push
cmp
loop
xchg
mov
neg
inc
mov
pop
mov
in
xor
pop
xchg
jmp
fisttps
ljmp
mov
mov
lds
pushf
mov
clc
push
jp
and
adc
addb
in
mulb
out
addb
add
jne
pop
jbe
sbb
push
filds
xor
or
sbb
pop
push
dec
cmpsl
call
add
lock
cmpb
lods
jb
sub
inc
cli
mov
clc
jmp
adc
dec
fs
movsl
push
sti
test
mov
movsb
daa
mov
mov
hlt
xchg
cwtl
pop
mov
cmc
sub
pusha
pop
push
dec
ds
adc
adc
dec
dec
pop
sub
pop
sarb
cmp
lods
cmpl
or
and
jmp
pop
popa
fwait
jo
bound
xlat
jg
outsl
scas
shrl
cld
jb
rcrl
fadds
nop
jae
inc
cltd
cmpsb
or
int
pop
push
arpl
mov
loopne
ret
adc
add
or
cmp
pop
imul
hlt
out
jg
ss
or
mov
call
xor
fwait
test
xor
insl
add
mov
inc
pop
fnstenv
adc
lahf
mov
pop
xor
pop
pop
adc
cmc
mov
mov
mov
aad
cs
cli
sub
xlat
push
pop
std
test
stos
add
pusha
xchg
inc
xor
ds
add
mov
pop
or
fiaddl
xor
lcall
dec
xchg
ret
es
cs
inc
test
xor
pushl
psubsw
mov
push
push
cs
lcall
push
push
push
lahf
and
or
scas
aam
or
pop
xchg
ret
and
push
cwtl
scas
mulb
pop
xchg
mov
cmpsl
or
jne
cs
inc
rorb
sarl
dec
aam
dec
pop
push
cli
shr
push
inc
fwait
add
pop
int
add
add
add
jg
out
ljmp
push
sub
push
je
add
push
cmp
pop
insb
mov
xor
stos
jl
jmp
pop
das
pop
ret
jmp
pop
rcll
outsl
test
fsubr
sahf
mov
lock
add
in
leave
repnz
loope
cld
gs
bound
push
add
decb
or
and
push
pusha
and
lret
bound
jns
add
push
iret
ret
in
shl
cmp
ljmp
sub
sbb
movsl
mov
das
jo
js
sbb
mov
inc
faddl
sub
push
mov
sbb
lahf
lds
mov
push
dec
sbb
out
pop
add
insl
or
pop
push
mov
jns
imul
std
mov
sub
add
adc
or
sbb
rorb
add
mov
jle
lret
add
lock
daa
and
mov
mov
addl
adc
jecxz
push
and
jmp
mov
sub
shrl
pop
jo
jb
adc
lcall
adc
inc
out
into
pop
das
mov
sub
dec
jno
ja
push
or
xorl
movsl
xor
mov
and
xor
mov
ds
mov
sub
jmp
mov
fcomps
inc
fwait
subb
add
add
jge
xorb
push
mov
jb
mov
dec
inc
and
sbb
lock
pop
sub
sub
add
pushf
sub
sbb
out
mov
cmp
int3
and
pop
jmp
ds
ds
mul
xor
outsl
mov
add
xchg
push
in
push
cld
pop
mov
jmp
jecxz
out
sbb
not
push
mov
fisubrl
lret
bound
mov
scas
pop
adc
mov
xchg
fstl
push
inc
ret
rorl
pop
das
mov
ror
and
lahf
push
mov
fmull
rclb
bound
lahf
push
mov
cmpsb
lcall
rolb
or
imul
add
fucomip
subb
xor
push
in
xchg
ja
jne
and
pop
les
mov
fbstp
lock
push
inc
cmp
xor
cs
cmp
inc
pushf
push
lret
or
dec
lea
add
aad
mov
out
jp
cmp
movsl
mov
int3
inc
cmpsl
test
js
inc
pop
adc
stos
and
fmull
and
mov
jge
xchg
mov
notl
roll
dec
mov
test
mov
or
clc
jbe
popl
mov
int3
cwtl
fs
xchg
pop
out
sbb
clc
mov
pop
call
lahf
add
or
shlb
sub
ss
mov
inc
inc
or
xchg
pop
pushf
imul
fimuls
mov
add
jbe,pn
add
push
add
mov
xlat
jo
pusha
jmp
cmc
ret
add
push
sbb
imul
or
jle
pop
aas
or
push
mov
sbb
pop
outsl
pop
xchg
loopne
jb
cmp
sub
push
sbb
stc
lds
xchg
jb
in
fbstp
adc
or
push
mov
mov
mov
int
xchg
xor
stos
es
xor
mov
addl
add
pushf
lea
popa
roll
mov
dec
negb
rclb
dec
cmpb
sbb
fldenv
iret
mov
shr
movsw
cmp
xchg
into
mov
sub
cs
xchg
xor
adc
sbb
dec
adc
add
adc
vsubss
sarb
popl
inc
or
push
or
sub
aam
mov
jge
rolb
or
clc
pop
add
sub
ret
pop
dec
mov
inc
sbb
pop
jle
jl
sub
xchg
adc
lods
pop
pop
xor
cs
jl
add
lock
iret
adc
ljmp
bnd
add
inc
xor
cwtl
shll
in
adc
mov
loope
cmc
push
insl
mov
fsubl
lods
outsb
jns
add
stos
call
add
pop
and
pop
push
and
int
fidivrl
cmp
movsb
cwtl
bound
cmc
or
rorb
xchg
jne
xchg
lock
or
lods
add
xlat
lret
xchg
addr16
sbb
and
pop
push
cmp
cltd
lea
lock
adc
pop
mov
jecxz
mov
lea
lods
dec
adc
add
int3
and
cmp
out
sbb
or
scas
rol
xor
test
addl
enter
movsb
sahf
lods
int
or
inc
push
mov
mov
aas
sub
rolb
fwait
sbb
jecxz
push
push
pop
ret
fdivrs
sub
cwtl
lret
and
rcrb
adcl
movsb
jl
adc
mov
mov
pushf
mov
mov
add
adc
por
push
ja
nop
sbb
pusha
cmp
add
jg
inc
shlb
and
rclw
jb
push
add
cmp
repz
mov
mov
add
popf
push
fldt
imul
jge
add
lcall
aad
add
mov
cltd
xor
sti
adc
in
or
sbb
sbb
repz
and
icebp
das
movl
inc
das
or
popf
xorl
xchg
adc
leave
inc
and
inc
ror
dec
sbb
loop
mov
aam
sbb
mov
inc
ret
nop
scas
dec
mov
add
pmullw
xor
rcrb
push
cwtl
test
add
and
xorb
sbb
adc
xchg
push
insb
push
sub
add
add
subl
lock
push
cmpsb
pop
add
iret
xchg
pop
dec
jecxz
dec
add
sarl
push
clc
ljmp
mov
push
inc
mov
pusha
add
nop
sbb
notl
add
sub
leave
add
pop
push
push
in
int3
pop
push
sbb
aaa
rol
mov
mov
clc
dec
add
out
adc
or
dec
mov
mov
add
xchg
fstpt
and
dec
scas
sti
sub
adc
fdivr
rorb
arpl
lds
loope,pt
outsl
adc
out
nop
pusha
jne
push
in
push
jle
and
shrl
push
loop
or
enter
lret
push
int3
xchg
cmpsb
call
outsl
mov
mov
aas
rcrb
sub
les
dec
or
cli
add
loopne
and
xor
fcomp
add
push
jo
mov
rcll
xor
sub
addl
sbb
add
stc
ja
cmp
cmp
rcll
rcll
sarb
mov
add
mov
push
cmp
pop
cwtl
inc
shlb
add
fadds
rorb
call
dec
sub
sub
sub
fidivl
fstp
cmpb
jo
jne
mov
testl
xor
jg
add
data16
xor
call
add
sti
and
aad
xchg
orl
cwtl
xchg
out
add
in
addb
clc
adc
mov
xchg
arpl
sahf
or
jno
pusha
cmp
into
cmp
xor
inc
das
mov
cmpsl
sti
xorb
psubusb
fcmove
sbb
pop
pop
add
mov
out
add
mov
shl
xor
xchg
rorl
inc
int
loopne
rcl
rcl
mov
dec
push
stos
cmp
xor
mov
arpl
pcmpgtd
into
adc
out
loop
fwait
mov
or
push
nop
mov
xchg
jo
pop
fcompl
add
and
lods
shrb
jg
dec
add
cmp
jns
xor
andps
cmp
inc
and
imul
andl
add
jno
mov
push
mov
popl
pop
pop
jp
divl
jne
sbb
shr
add
pop
pop
jb
aas
pop
sahf
xchg
pop
shlb
add
imul
add
pop
mov
aas
push
or
adc
cwtl
pop
xor
add
rcrl
pop
enter
pop
mov
push
mov
ret
gs
sub
call
adc
and
ja
popa
arpl
add
std
ret
ss
xchg
pop
lret
les
add
or
mov
xchg
into
sti
jl
dec
mov
adc
pop
hlt
or
sbb
mov
xor
fistpl
rclb
repz
hlt
insl
mov
cld
sahf
shlb
add
addl
scas
jp
pop
test
popa
subb
sub
sbb
sarb
mov
ud2
call
pushf
sbb
and
ret
sub
lahf
nop
fwait
aaa
pop
push
sub
lea
push
loopne
lret
add
fxch
xchg
arpl
push
pop
loop
adc
push
xchg
mov
aaa
stos
xchg
dec
pop
adc
and
and
test
mov
rorl
hlt
push
adc
loopne
pop
jg
add
pusha
xchg
pop
push
jo
lret
xor
sbb
dec
mov
sbb
test
pop
dec
and
jmp
in
leave
cltd
or
adcb
xor
add
or
pop
mov
mov
es
add
jo
dec
loope
push
dec
sub
bound
xchg
add
gs
inc
in
push
pop
adc
test
mov
dec
or
pop
aaa
adc
dec
addb
xor
push
cmp
add
push
jmp
ret
fnsave
in
and
sbb
mov
fnstsw
add
je
sahf
pop
fs
adc
sbbl
push
fwait
sub
out
add
stos
dec
mov
daa
leave
rolb
data16
sahf
pop
add
cwtl
testb
icebp
or
or
ror
daa
add
mov
cmp
in
push
sahf
cmc
inc
push
cltd
out
pop
mov
sub
cmp
jg
add
xchg
dec
or
pop
fcmovb
bound
stc
or
jp
adcl
sbb
sub
jo
jle
push
hlt
adc
les
add
jecxz
stos
add
scas
dec
je
inc
mov
lahf
sbb
das
cwtl
jge
pop
cmp
adc
fstpl
or
cwtl
xchg
mov
xor
push
icebp
add
push
inc
pusha
inc
mov
jecxz
lcall
add
popf
pop
sbb
fldt
arpl
sub
pop
xchg
pop
pushf
adcb
sub
gs
adc
mov
mov
call
gs
push
sbb
push
mov
mov
add
rcrl
fcomp
lret
cmpsl
push
add
xchg
addr16
shll
lret
cmp
adc
iret
jp
inc
cmp
adc
orb
sbb
imul
loop
cmpsl
insb
dec
or
out
mov
and
xor
adc
adc
sbb
fsubrp
fsub
add
repz
add
das
ss
add
stc
in
mov
mov
addl
lahf
lock
mov
inc
mov
jne
adc
or
out
add
mov
add
xchg
cmp
push
cmpsb
dec
fcoms
jg
jae
push
add
shrb
fnstcw
jle
call
stos
inc
pusha
clc
add
sub
add
push
movsl
lock
fidivl
outsl
dec
mov
pop
testl
loopne
adcb
jg
xor
out
adc
movsb
aam
add
mov
add
or
pop
ss
stc
mov
mov
jmp
into
imul
popf
andb
add
pushf
mov
shrb
popf
in
sbbb
or
nop
sub
add
imul
jbe
add
mov
or
ficompl
jg
subb
cmp
adc
lods
cmp
inc
pop
shll
and
repz
xchg
xor
fdivs
stos
rolb
scas
inc
scas
ret
mov
jp
pop
jecxz
cmpsl
fcmovnb
or
inc
add
popf
pop
stos
add
pop
cld
inc
add
cli
outsl
cmp
sbb
jne
pushf
pop
in
shll
push
aas
hlt
jo
jp
add
and
orb
dec
subl
sub
push
inc
push
pop
or
xlat
stos
dec
loope
mov
or
js
lret
inc
jnp
xchg
or
std
inc
push
push
loopne
movl
sbb
cwtl
push
in
pop
dec
sub
mov
jl
xchg
es
gs
push
daa
lret
mov
sbbb
sbb
rcll
xor
xchg
pop
pop
jne
add
and
pusha
scas
jg
out
push
mov
dec
add
js
adc
pop
es
dec
pop
inc
test
in
lods
fisttpll
dec
mov
inc
xchg
or
mov
inc
test
pop
mov
insl
sub
add
das
shlb
xlat
mov
add
fcmovne
sub
xlat
mov
push
xor
cmp
add
pop
pop
mov
out
push
add
xor
push
mov
or
jae
rcrl
andb
jl
sahf
sub
scas
sbb
add
cmc
add
stc
xchg
sahf
clc
icebp
add
cmp
push
in
mov
mov
das
or
aas
fsubl
jbe
mov
mov
jg
dec
xor
push
mov
fistpl
adc
xchg
pop
cmp
jo
loopne
outsb
insb
hlt
inc
push
jle
xchg
xor
es
cwtl
fldl
ror
xor
mov
adc
cmp
xor
pop
leave
aas
lret
jge
xchg
mov
xchg
push
aad
pop
and
pop
std
aam
loope
and
fsubp
cmpl
inc
shll
xor
addr16
cmpb
orb
and
mov
sbb
mov
orb
es
cmp
and
out
inc
ret
into
push
lds
loope
xchg
mov
ja
add
pop
xor
nop
psubq
sahf
add
push
dec
mov
add
and
gs
jnp
mov
pop
add
mov
fwait
test
add
ret
push
sbb
movsl
es
daa
pop
sub
out
push
jns
xchg
adc
aam
mov
sub
dec
insb
out
xchg
mov
cwtl
das
jo
rdtsc
iret
mov
mov
add
cmp
sub
fdivr
ret
adc
rolb
sti
sbbl
sub
pusha
aam
outsl
pusha
adc
lcall
fistpll
addb
and
fnstenv
add
adcb
inc
ret
dec
cmp
inc
pop
mov
add
mov
push
and
or
xlat
or
addb
add
lret
pop
inc
fbld
subb
sub
xlat
jns
pop
rolb
into
stos
inc
sbb
popa
fisubrl
out
aas
xchg
or
inc
lahf
pop
mov
and
mov
and
adc
imul
or
mov
mov
repnz
es
pop
push
mov
in
xchg
push
xchg
rclb
xchg
shll
add
mov
icebp
xchg
adc
hlt
adc
jns
sahf
xor
std
decb
out
sbb
xor
clc
push
add
and
out
and
cwtl
xorb
add
adc
xchg
sub
add
inc
mov
fadds
stc
insb
xlat
and
sbb
xchg
imul
scas
push
add
and
sub
enter
out
xchg
jmp
mov
inc
popa
stos
pusha
or
add
mov
jg
das
mov
fwait
addr16
jl
mov
pop
and
push
orb
in
xor
aas
xlat
cld
pop
scas
push
mov
add
hlt
loopne
jp
mov
les
cmp
out
or
outsl
inc
push
xchg
add
gs
into
mov
and
aad
cmp
xchg
repz
push
enter
pop
outsb
call
mov
add
mov
dec
adc
insl
add
or
adc
inc
add
fiaddl
loope
pop
xchg
cmp
call
push
sti
or
add
push
movzwl
pop
pop
sub
jae
pop
push
dec
sub
mov
pushl
cmpb
push
pop
mov
loope
cmp
stos
sets
adc
ret
out
add
jle
rcrb
loopne
pop
xor
dec
add
mov
or
nop
inc
adc
rorb
cmp
xor
xchg
mov
ret
adc
test
sbb
cltd
cmp
stc
add
dec
mov
mov
and
add
out
add
pop
test
inc
add
add
sbb
pusha
jecxz
mov
xor
pop
iret
lret
cmp
imul
mov
cmp
inc
nop
inc
orb
and
imul
adc
and
lcall
push
adc
dec
insb
pop
and
rolb
inc
cmc
iret
mov
dec
test
adc
cmp
or
adc
or
nop
pop
sbb
dec
sub
js
aam
jp
sbb
inc
jno
cmpsb
push
push
cmp
and
arpl
out
jge
or
call
push
add
mov
push
mov
adc
and
cwtl
fxch
push
or
pop
ss
ljmp
mov
push
jp
or
imul
adc
mov
mov
sbb
adcl
jae
cmp
pop
xchg
adc
dec
mov
xchg
test
xor
add
dec
enter
loopne
sub
pop
addr16
popf
addl
jg
or
dec
cmp
sarb
adc
and
das
inc
testl
aad
sub
ds
mov
sbb
add
fs
mov
fwait
push
pushf
or
cmpsb
xchg
inc
add
mov
ficomps
lea
jmp
xchg
jmp
and
mov
dec
xor
dec
int3
cld
stos
das
mov
pop
add
jp
add
add
jne
shrb
add
mov
arpl
ds
add
ret
mov
add
jb
sbb
cmpl
std
js
dec
and
test
push
add
add
jbe
mov
sti
cmp
dec
sbb
outsl
subb
arpl
jecxz
lock
and
xor
push
and
mov
mov
testb
and
bnd
jl
add
or
sbb
jge
mov
movhps
jmp
jns
add
pop
cs
lock
inc
adc
jb
or
rcrl
out
adcl
cmp
sbb
outsb
inc
sub
js
push
mov
movsb
in
adc
in
mov
dec
arpl
jl
lds
add
shlb
in
repz
sbb
or
gs
dec
loop
pop
int
pop
dec
cltd
sub
addr16
arpl
mov
mov
xor
pop
adc
movsb
pop
dec
inc
sbb
and
cmp
mov
sub
mov
xchg
enter
cmp
pop
je
and
pop
lods
sbb
pop
lret
std
jge
cwtl
aas
movsl
in
sbb
push
inc
in
sti
xlat
push
ljmp
mov
or
jmp
add
cltd
ret
jecxz
xor
std
aaa
push
sub
mov
lret
sahf
mov
rorl
adc
mov
mov
cmp
cltd
sar
sbb
dec
dec
clc
dec
mov
pop
inc
movsl
dec
dec
and
rolb
mov
sbb
cwtl
ljmp
cwtl
inc
int
nop
inc
and
subb
das
andb
and
dec
mov
loopne
andb
xchg
xchg
adc
jnp
or
or
sbb
mov
adc
test
add
pusha
push
data16
sub
hlt
inc
les
lcall
inc
enter
pop
add
and
ret
lea
clc
iret
test
stos
pushf
shlb
inc
pop
or
or
add
ret
add
sub
cmpsl
or
enter
inc
js
scas
pushf
mov
aas
dec
mov
xchg
mov
push
add
mov
adc
lcall
push
clc
mov
mov
in
pop
sub
cmpsl
les
jns
fcomps
mov
in
inc
sarb
sbb
adcb
shll
adc
aam
cmc
add
push
or
into
stos
inc
stos
dec
sub
adc
dec
enter
jle
xor
and
mov
jg
inc
hlt
das
popa
pop
mov
sbb
mov
nop
pushf
and
xor
call
stos
in
xchg
repnz
xor
and
or
or
aaa
sbb
dec
push
cmp
jmp
push
clc
inc
push
mov
add
and
add
sub
pop
hlt
and
cs
inc
leave
pusha
inc
filds
movsb
imul
lods
sbb
xchg
inc
ss
adc
jl
adc
and
cmp
orb
jge
xor
pop
cmc
mov
and
decb
jo
and
clc
rcrb
xchg
pop
jo
add
int3
and
testb
lret
movsb
lock
cwtl
sti
xchg
insb
xor
mov
add
lods
add
sbb
adc
xchg
xor
or
call
or
sbb
cltd
loopne
adc
adc
mov
call
sbb
cmp
push
or
cmpsl
popf
sbb
and
mov
add
gs
into
xchg
xor
and
jmp
adc
sbb
mov
pop
mov
loopne
cmp
mov
cmpsb
mov
fidivs
inc
sbb
cmp
and
mov
add
adc
xchg
shrl
pop
pop
lods
dec
stc
inc
inc
hlt
mov
push
ret
mov
push
popa
ss
cld
mov
fcompl
incl
dec
test
sbb
out
cmp
xor
pop
and
and
sbb
out
pop
pop
stos
les
jne
out
or
enter
pop
popf
adc
lret
cld
test
lock
or
sub
in
or
or
mov
or
ja
testl
add
lea
bound
fwait
dec
jmp
mov
dec
arpl
add
pop
mov
inc
adc
mov
aaa
mov
leave
push
stos
jmp
mov
mov
inc
lods
fstpl
adc
jge
add
js
dec
loopne
add
bnd
inc
stos
mov
fcomi
adc
adc
sbb
xor
add
xchg
xor
lahf
push
js
sbb
cmp
sbb
mov
and
int3
cmp
cltd
add
jnp
aam
mov
push
fistpll
xor
cmp
dec
inc
aam
stos
push
test
out
js
fcmovbe
adc
mov
cmp
push
arpl
in
pusha
dec
and
mov
and
es
sbb
cld
xchg
pop
hlt
aad
nop
ret
inc
sbb
and
sbb
xor
mov
shrb
mov
or
adc
inc
and
add
mov
rolb
movsb
cmpb
iret
rolb
add
jl
lret
dec
add
mov
addl
fmuls
test
cs
add
clc
mov
xor
inc
cmpsb
cltd
out
insb
subb
mov
push
xor
call
adc
inc
xor
or
mov
repnz
mov
inc
mov
add
mov
or
test
fldt
lret
mov
jo
dec
pop
dec
inc
fmull
push
inc
sub
mov
orl
daa
js
std
mov
addl
outsl
add
fcomps
pop
dec
lods
inc
add
inc
mov
dec
stos
sahf
adc
clc
inc
inc
test
lds
pop
and
loopne
sub
sbb
stc
pop
dec
ja
ror
push
testl
cmp
movsb
test
mov
mov
lock
or
xchg
rcl
jne
es
sbb
cmpsl
mov
out
cmpsb
mov
ljmp
adc
movsb
xchg
insb
sub
sbbb
dec
leave
sarb
enter
bound
mov
or
adc
loopne
push
loopne
fcompl
add
xchg
inc
fisttps
jg
stos
sbb
je
mov
xor
loop
adc
roll
je
pop
cmp
mov
sahf
xor
out
add
addr16
sbbb
rcl
mov
clc
out
sub
nop
sub
pop
shlb
add
push
cli
sbb
pusha
lcall
pop
aam
jge
dec
arpl
dec
mov
pop
inc
mov
mov
lea
push
xor
xor
sub
aas
jo
fstl
jmp
add
pop
ss
in
push
lock
fiadds
add
adc
and
ds
lret
inc
dec
sbb
adc
cmp
test
stc
and
imul
jae
push
mov
mov
inc
stos
fmuls
test
decl
fcmovu
movl
je
sbb
add
or
test
aaa
add
scas
movsl
lcall
dec
cltd
xor
mov
in
inc
fwait
std
jo
and
dec
add
ds
fsubl
xor
popf
mov
push
addb
fwait
cld
add
inc
mov
jmp
mov
je
cmc
mov
pop
aaa
add
add
mov
xchg
mov
leave
imull
insb
inc
cmpb
mov
add
daa
fxch
mov
cwtl
sti
movl
pusha
push
leave
dec
mov
mov
cli
pop
mov
mov
or
mov
xor
and
mov
fisttpll
or
cmp
in
addb
fmulp
popf
in
fmull
add
std
cmc
addb
mov
mov
xchg
xchg
pusha
mulb
jb
cmp
add
lods
lods
cmc
fsubs
enter
rolb
adc
or
repz
fadds
push
fisttpl
push
mov
cmp
sbbl
jl
inc
inc
les
fsubrl
je
cmp
push
cmp
lods
sbb
mov
sahf
mov
fsubrl
subl
push
cmp
sub
lds
aam
rolb
ja
xor
pop
roll
fbld
dec
add
jnp
or
insl
push
in
pop
shrl
enter
dec
ficomps
gs
or
out
scas
or
inc
cmpsb
mov
pop
inc
pop
loopne
out
call
cmp
loopne
test
hlt
xlat
push
dec
xor
test
fisttpl
dec
cmp
addl
pushl
mov
repnz
int3
test
sbbb
and
test
cmpsl
aas
test
push
ds
ret
pusha
mov
movups
add
push
sbb
sti
fcmovne
adc
movsb
sar
push
inc
stos
xor
jo
cmpsl
out
icebp
pop
repz
orl
sub
hlt
and
pop
dec
xor
sarb
shrl
mov
js
stos
add
dec
test
addb
add
push
loopne
push
js
add
dec
or
push
nop
adc
inc
mov
sub
add
icebp
cmp
xor
sub
push
xchg
push
xor
mov
rclb
scas
cmpsb
pop
and
xor
addb
inc
mov
add
cmp
shll
sub
push
repz
mov
js
or
xor
in
xor
or
sbbb
and
sar
inc
adc
ficoms
jmp
lcall
es
test
xor
mov
inc
add
add
loopne
cmp
mov
outsb
andb
or
es
mov
pusha
jno
add
insl
and
mov
andb
addl
cmpsb
or
push
mov
sub
mov
inc
pop
mov
cmp
test
arpl
pop
pop
mov
cmp
or
xorb
sbb
mov
and
jns
xor
xchg
pop
sbb
pop
pop
movsl
inc
mov
movsb
and
jecxz
sar
xor
pop
out
xlat
dec
inc
mov
es
mov
cmp
xorb
arpl
dec
fmull
icebp
lcall
out
xor
or
xchg
sbb
dec
adc
jmp
inc
test
jmp
loop
scas
dec
xchg
sbb
cmpl
xor
sub
orl
cmp
mov
sub
popl
es
mov
icebp
and
fs
xor
sbb
sub
pop
test
or
cmp
cmp
jge
fldl
mov
inc
mov
pop
mov
cmpsb
push
and
int
inc
and
pushf
cld
mov
inc
sbb
nop
jle
push
aam
dec
lahf
adc
xor
rolb
mov
pop
and
and
and
or
sbb
mov
aam
loop
popa
mov
enter
gs
mov
int3
outsb
mov
shlb
push
movsl
or
imul
or
mul
sbb
test
ret
inc
test
pusha
or
pop
out
or
adc
ret
movsb
icebp
adc
lahf
fwait
nop
ds
adc
sarb
movsb
dec
inc
std
add
fwait
or
add
jmp
cs
xor
aaa
add
inc
cwtl
daa
mov
pop
xchg
pop
sub
add
andl
xchg
imul
pop
xchg
sar
mov
adc
add
and
mov
jne
sub
xor
test
js
fldenv
push
shr
js
sbb
cmpsb
movsl
sbb
shll
cmpsb
jle
into
and
sbb
mov
inc
jecxz
loopne
sub
or
data16
jge
push
or
mov
test
ret
int3
and
cld
cmp
lods
inc
cld
outsb
dec
add
fistpll
add
aam
pusha
mov
sub
and
jo
mov
lods
xor
fnstcw
sub
stc
ret
stc
in
sbb
fiadds
loopne
inc
pusha
pop
adc
xor
cwtl
lock
push
push
mov
pop
pop
clc
jns
sub
add
push
sub
push
mov
fidivrl
dec
mov
mov
dec
and
out
into
orb
xor
push
mov
mov
pop
jg
adc
push
add
dec
mov
mov
xor
sub
fmull
scas
xor
stos
mov
jl
add
inc
scas
mov
add
sub
in
cmp
and
push
push
xor
pop
or
jl
loopne
jo
or
mov
push
shlb
xchg
and
sub
xchg
add
adcl
add
aas
mov
sub
or
aaa
les
or
pop
and
cli
dec
or
or
enter
adc
adc
iret
mov
jb
mov
or
loope
mov
push
or
sub
fsubrl
loopne
cmp
adc
dec
inc
xchg
aaa
and
inc
xor
cmp
cmp
xchg
das
xor
movsb
dec
jns
lret
push
jae
loopne
cld
popf
shrl
mov
cs
dec
movsl
or
or
clc
test
jl
mov
push
fs
or
decl
sub
out
shlb
lods
gs
cltd
add
test
sbbl
push
mov
push
outsl
sub
jl
add
mov
xor
cmpsb
add
and
scas
sbbb
add
pop
rcrb
sub
add
test
lcall
roll
out
add
lcall
xchg
mov
pop
xor
out
sub
push
add
mov
dec
sub
dec
jge
fisubs
inc
sbb
mov
sbb
add
lods
icebp
aam
push
mov
pop
cld
cmp
push
fdivl
add
std
push
and
jae
aas
mov
dec
movsl
cs
cmp
test
dec
xor
add
push
or
cmp
cmp
add
cld
mov
sub
sub
jne
setno
out
loopne
and
loope
add
imul
ret
fadds
adc
in
hlt
and
lret
inc
cmpsl
pop
push
pop
shrl
sub
sbb
add
ret
add
ljmp
cmp
pop
daa
nop
ljmp
xchg
sbb
add
decb
cmpl
ret
add
inc
dec
or
sub
mov
xchg
xor
jae
nop
fsubrs
push
aam
or
sub
pop
add
mov
cs
sahf
fsub
loop
xchg
out
adc
leave
xlat
lods
cmp
orb
pop
mov
xchg
sbb
dec
add
xor
in
lret
lcall
mov
cmp
or
xchg
push
add
sbb
add
ss
xchg
sub
xchg
mov
es
js
jne
hlt
lldt
xor
sub
add
fsubl
pop
movsb
jbe
into
add
push
dec
addr16
mov
lock
loope
adc
pop
add
pushf
xor
push
or
jbe
lods
leave
popf
add
jl
shlb
adcb
adc
out
dec
add
pop
jg
push
dec
mov
jno
out
cwtl
mov
xchg
cs
mov
out
and
xor
mov
cwtl
add
xchg
orb
add
ret
inc
sub
int
mov
arpl
ret
jle
xchg
pusha
mov
sub
mov
sti
lock
fsubr
mov
push
add
imul
pop
sbb
les
add
inc
addl
push
xor
add
repz
or
out
hlt
adc
cmpb
add
jl
inc
or
imul
pop
dec
rolw
inc
insl
inc
mov
add
push
or
inc
jge
mov
xchg
pop
pop
addr16
jns
pop
cwtl
ds
mov
adc
push
and
outsb
sbb
adc
mull
add
lret
cwtl
hlt
xchg
into
in
cs
sbb
add
or
add
repnz
add
popl
inc
sbb
fnsave
sbb
sarl
pusha
scas
outsb
pushf
imul
mov
push
jmp
cmp
push
add
outsl
cmp
adc
cmp
out
pop
xchg
roll
cmp
push
add
in
adc
and
sub
push
lods
mov
sbb
insl
jns
hlt
jecxz
stc
adc
jg
repz
std
lods
sarl
nop
add
sub
and
push
mov
adc
jg
test
or
fwait
xchg
pusha
out
cwtl
jo
insl
and
dec
cltd
icebp
push
test
xchg
cmp
bound
inc
sub
jnp
jmp
nop
mov
sub
lock
mov
add
in
ss
pop
pusha
sbb
jl
xorb
mov
xlat
loope
stos
lock
add
dec
dec
push
adc
dec
add
pushf
and
lds
mov
lahf
mov
mov
subl
sub
mov
push
rorb
mov
mov
mov
pusha
push
cmp
jo
andl
orb
pusha
test
cmp
xchg
lock
sbbb
mov
pop
loop
jge
andb
mov
add
push
add
dec
push
scas
push
sub
shlb
sbb
push
fmuls
add
pop
enter
pop
fwait
mov
sarb
fsub
pop
add
xchg
sub
add
add
cmpsl
in
rorl
pop
mov
jo
dec
push
push
adc
ror
cmp
pop
mov
lret
fldl
xor
mov
cmp
cmp
mov
sub
inc
xchg
mov
or
cwtl
push
mov
xor
test
stc
fs
cs
and
sarb
pop
and
arpl
add
sbb
scas
push
cmp
add
pop
lods
cmpsb
or
or
sub
xchg
and
data16
dec
adc
sbb
cli
add
mov
iret
add
roll
pop
lahf
and
cmp
sbb
and
jno
fs
inc
fisubl
adc
add
jg
add
xor
mov
or
sarb
movsb
incb
mov
cli
cmp
stos
in
dec
popf
add
jnp
xchg
inc
xchg
and
add
dec
loopne
xor
add
out
adc
notl
add
int3
arpl
xchg
mov
fldcw
mov
es
xor
ds
sbb
mov
xchg
mov
lds
xorb
cld
clc
lock
lods
test
sub
push
add
fcomip
scas
or
dec
add
in
add
pop
std
loopne
xor
add
jp
mov
in
pop
test
adc
mov
rorb
jns
lods
push
push
leave
dec
mov
pop
js
pop
or
adc
fmull
dec
jbe
add
jle
incl
jmp
sub
nop
dec
xor
pop
cmp
idivl
add
shl
xchg
imul
loop
inc
movsb
cmp
and
rcrb
jno
pusha
mov
jp
dec
add
dec
out
imul
sub
and
cmp
mov
rcrb
push
mov
jo
push
pop
push
scas
js
cs
add
jo
jmp
add
inc
pushf
inc
daa
std
xor
xchg
sub
lock
or
push
adc
push
sahf
xor
mov
cmpl
push
add
xor
fwait
and
dec
inc
lock
xor
mov
inc
cmpl
push
lds
xor
inc
sbb
pop
push
ret
fistpll
fwait
cmp
out
sub
mov
je
pop
je
sub
nop
sbb
push
mov
or
rcrl
scas
je
push
adc
popl
jecxz
nop
push
je
push
gs
inc
add
test
sbb
fdivrs
clc
cmpl
push
add
push
insl
inc
jmp
cmpsb
pop
pop
adc
xor
xchg
xor
es
adc
mov
adc
adc
push
fadds
sub
mov
push
xor
push
shll
sbb
add
mov
les
xchg
mov
scas
test
xorl
lock
mov
std
ljmp
out
sub
xchg
push
add
xor
pusha
rclb
add
sbb
std
cmp
rolb
xor
or
nop
mov
aaa
outsl
std
inc
xchg
sub
aas
pop
nop
jo
inc
lea
cld
orl
nop
or
ds
add
lods
outsl
pop
subb
inc
pop
inc
test
inc
cmc
cmp
add
movsb
movsb
nop
dec
or
sub
xchg
push
mov
push
cmp
aam
xor
dec
sbbb
add
pop
out
mov
xchg
lock
pop
push
call
fwait
das
cwtl
xor
lea
jl
stc
inc
leave
pop
pop
fcompl
jbe
sub
inc
test
cmp
xchg
cwtl
icebp
ss
mov
je
nop
fsubr
mov
mov
and
or
imul
push
in
nop
push
xor
cs
and
adc
xor
cmp
and
call
or
cmp
adcb
xor
cmp
mov
adcb
dec
push
adc
dec
cmpsb
sub
loopne
pop
sbb
mov
xchg
jns
fwait
mov
inc
xchg
sbb
sub
dec
push
lret
sbb
adc
int3
dec
push
add
sbb
mov
mov
hlt
sbb
lret
add
loopne
xor
icebp
sbb
cmp
add
fwait
lret
dec
pop
iret
test
mov
lea
xchg
cwtl
js
or
mov
into
sbbb
mov
cmp
popl
xchg
cli
mov
xchg
push
push
iretw
outsb
xchg
mov
pushf
js
or
add
mov
xchg
push
mov
cmp
aaa
pushf
ror
pop
insb
adc
push
mov
xor
pusha
push
mov
pusha
sbb
mov
adc
lret
lea
mov
insl
in
push
dec
popf
push
loopne
cmp
and
je
push
xchg
enter
rclb
mov
mov
jle
stos
or
call
sub
jb
bound
and
fsubl
and
jle
add
mov
dec
int3
test
enter
cmp
dec
push
mov
push
les
adc
movb
lret
nop
fdivl
out
sbb
loopne
xchg
adc
orb
sbb
hlt
and
add
popl
sbb
les
push
or
rcll
pop
jmp
push
pop
xor
test
mov
xlat
jl
push
and
test
rcll
adc
hlt
xchg
mov
push
lahf
cmpb
inc
and
enter
cli
xchg
lret
fidivs
lock
lcall
mov
sahf
sub
jle
or
addb
addb
mov
jno
xchg
sub
sbb
aam
sub
or
popa
loopne
mov
dec
push
daa
sub
cs
call
js
add
enter
cwtl
or
fwait
jo
addr16
xchg
mov
pop
cmp
sub
lods
jecxz
jo
add
mov
js
cwtl
inc
add
push
or
fidivl
xor
sub
jbe
push
sub
ss
jl
xor
mov
mov
stos
inc
adc
js
add
cld
lods
adc
mov
and
int3
or
insl
mov
loopne
mov
dec
stos
mov
mov
push
push
bound
roll
sbb
push
sub
les
jl
xor
and
jnp
ljmp
xor
mov
xor
inc
out
es
pop
xchg
lods
xchg
addb
adc
addr16
xor
pushf
icebp
cmp
sub
jmp
sub
sbb
ja
mov
mov
add
into
inc
mov
xchg
add
cmpsb
std
pop
xor
xchg
test
popa
mov
sbb
inc
outsb
inc
or
adc
and
ret
add
sub
cwtl
mov
xor
add
and
popa
mov
sbb
cmp
lahf
xchg
sarl
fs
leave
sub
mov
mov
sbb
mov
aad
pusha
xor
sub
shll
and
loope
cmp
hlt
xor
adc
sbbl
cmpsb
test
stos
test
or
aaa
enter
lea
rcl
andl
aaa
inc
cmpsl
cmp
test
mov
aam
inc
or
cmpsl
stos
and
and
xchg
push
and
in
cmp
and
mov
jg
push
push
jo
dec
push
mov
dec
in
movsl
add
xor
insl
add
pop
pop
mov
mov
mov
jo
mov
cwtl
clc
out
add
sbb
movsl
data16
bound
mov
mov
add
lcall
fwait
jae
xor
insb
add
fcmovne
test
pop
call
loopne
mov
mov
test
pavgb
gs
xor
je
rorb
out
test
cs
or
stc
pop
rcr
out
daa
sahf
adc
lret
mov
insl
inc
add
add
ret
mov
pop
mov
push
repz
scas
inc
inc
addr16
aam
jmp
test
adcb
xchg
cmp
cmpsb
call
or
and
add
sbb
out
inc
pop
pop
sti
and
pusha
test
add
mov
add
test
push
sbb
nop
loop
add
push
mov
mov
pushf
mov
mov
cld
xchg
add
out
js
sbb
loope
mov
or
call
xor
and
add
aaa
mov
sub
xchg
call
es
sbb
stos
push
cmp
subl
roll
in
pusha
mov
fldl
cmp
dec
add
addr16
and
in
out
jo
and
incl
inc
movsb
je
add
rolb
add
jle
push
jl
pop
in
mov
add
xor
and
in
xor
daa
pop
flds
xchg
in
mov
dec
ds
and
add
je
pop
jb
xchg
add
push
add
loopne
popf
mov
push
scas
test
add
cmpsl
std
out
xchg
mov
loop
xchg
inc
add
mov
mov
sub
cmp
ljmp
nop
add
lods
dec
imul
adc
push
sub
jae
adcb
add
dec
sub
jg
sub
adc
and
add
dec
pop
test
ret
xor
outsb
mov
nop
jo
aam
add
popl
xchg
pop
fsincos
fcmovne
loopne
mov
outsb
cmpsb
shr
inc
push
prefetchw
dec
rclb
cmpsl
pop
incl
dec
inc
or
movsb
push
add
and
mov
subb
pushf
add
outsl
pop
inc
cwtl
add
sbb
push
in
mov
sbb
xor
in
std
pop
push
fcmovbe
mov
or
jl
stos
inc
mov
movsb
scas
rorl
mov
in
adcb
sbb
mov
lret
shll
jae
mov
add
outsl
scas
loopne
add
enter
call
sub
aam
mov
and
inc
arpl
clc
add
sbb
mov
dec
mov
fistpl
mov
ret
push
sub
cmp
je
pop
rcl
cmp
mov
inc
adc
adc
test
xchg
add
lret
jl
mov
mov
xor
cli
test
add
call
aad
jmp
ficoml
push
inc
add
mov
and
les
inc
test
sbb
or
mov
in
lea
xor
push
pop
int
mov
fdivrl
dec
cmpsb
mov
insl
repz
pop
push
sub
sbbb
adc
dec
mov
cmp
cmp
mov
mov
rorl
inc
data16
push
or
cmp
jmp
sbb
pcmpgtd
outsb
inc
pushf
push
sbbb
pop
jle
test
cs
rorl
or
adc
mov
adc
xchg
add
stos
cmp
mov
fmull
jmp
push
test
and
mov
xchg
dec
add
xchg
out
call
inc
addr16
add
stos
sub
cs
and
pop
icebp
in
adcb
jo
add
insl
sub
xor
call
out
add
adcl
cmp
sbb
ret
cli
cwtl
mov
adc
sbbb
add
mov
mov
call
push
jle
repnz
add
or
icebp
sbb
pop
inc
loop,pn
add
adc
int3
lds
jns
addb
adc
or
test
push
packuswb
jnp
xor
jo
pop
movb
outsb
mov
mov
in
pushf
adc
cmpsb
sub
mov
popl
jecxz
and
inc
xor
ljmp
mov
sbb
sbbb
fwait
pop
lahf
push
aad
hlt
add
cmp
lods
cmp
push
or
push
xor
aas
mov
xor
fstl
xorb
fcompl
adc
movsl
cmp
sub
or
adcb
add
pop
push
jg
inc
or
dec
jecxz
imul
or
ljmp
mov
popl
jmp
sbb
dec
adc
stc
outsl
ljmp
dec
stos
sub
mov
mov
lock
fimuls
insb
jle
push
add
cmpsb
and
movsb
add
js
ret
cwtl
or
and
add
insl
or
out
fidivrl
cwtl
push
xor
xchg
add
loopne
sbb
jno
mov
pusha
cmpsb
mov
jle
add
mov
fdivrs
or
rol
and
or
xor
sarb
popa
movsb
sbb
add
movsb
loop
cltd
repnz
sub
add
xor
xor
roll
sbb
add
pop
add
push
enter
pop
movsb
push
cmpsl
inc
dec
and
add
movsb
fisubl
add
add
inc
loope
repnz
enter
xchg
pop
and
or
andb
bound
jnp
pop
mov
mov
leave
sti
lock
inc
xor
cmc
add
bswap
adc
add
push
lock
sub
inc
js
push
outsb
inc
ds
add
enter
loopne
aaa
jbe
sub
cmc
cmp
mov
mov
js
push
es
or
jecxz
push
sub
test
inc
push
xchg
jbe
sbb
xor
cmpsl
repz
shll
roll
or
adc
fmuls
push
inc
fwait
scas
mov
cmc
and
or
jbe
and
or
andb
xor
enter
arpl
insl
xor
cmpsb
sub
jle
addl
dec
repz
sarl
pop
pusha
sbb
js
sub
int3
hlt
add
imulb
fisubrs
adc
aad
or
or
call
mov
mov
add
mov
lods
add
add
cmpsl
mov
ret
dec
or
mov
sub
sbb
mov
add
jmp
inc
aas
idivl
mov
int
and
dec
sub
test
not
add
inc
pop
sbb
daa
cwtl
inc
in
nop
les
or
lock
outsb
and
add
dec
mov
sarl
push
pop
sbb
sarb
gs
sbb
pusha
iret
mov
add
js
mov
iret
mov
and
bound
repnz
cwtl
cmc
insl
xchg
test
push
data16
in
mov
into
jp
inc
inc
pop
adc
jnp
sar
mov
pusha
or
xor
incl
insb
cmp
lret
inc
push
mov
leave
adc
push
ret
cltd
ja
jnp
mov
add
std
cmp
fdivrs
into
sub
and
fcomip
cmp
xchg
ja
loope
lock
dec
fsubl
and
repz
in
orb
insl
data16
add
or
or
and
andb
lods
js
jge
adc
inc
hlt
inc
mov
and
dec
and
cmpsb
push
inc
cwtl
andb
adc
pop
add
sub
lret
and
orl
sbb
call
loop
adc
and
jle
or
cmp
push
sub
lret
nop
shrb
loop
mov
scas
andl
xor
pop
mov
push
pop
push
movsb
popf
inc
cmp
mov
dec
cmpl
inc
ja
mov
insb
xchg
cwtl
js
loopne
sub
xchg
cmpsb
xor
xor
or
jb
in
add
leave
dec
inc
fwait
push
fs
mov
push
movl
outsb
mov
sub
cmpsl
and
shr
xor
mov
sbb
jae
mov
pop
ljmp
and
push
rol
test
test
adc
xchg
inc
cmp
and
test
or
sbb
and
fbstp
and
or
stc
sarb
shll
xor
and
sbb
sbb
fwait
inc
mov
icebp
jo
imul
loop
or
andl
pop
dec
xlat
jl
pop
popa
movsb
inc
add
loopne
mov
mov
insb
dec
rcr
pop
push
iret
lret
shlb
mov
int3
xor
test
push
sbb
lds
rol
sti
in
bound
adc
mov
or
adc
into
aam
add
push
jae
test
and
ja
pusha
xor
sub
pop
leave
stc
and
fiadds
jl
inc
inc
lcall
aam
add
xchg
add
and
dec
sbb
push
mov
ljmp
mov
lretw
or
popa
nop
pop
dec
out
add
lock
mov
jecxz
mov
test
jo
hlt
push
inc
or
push
fisubl
add
and
out
or
adc
sbb
push
mov
shlb
and
dec
nop
cmp
test
test
and
mov
into
enter
and
out
mov
call
push
jl
pop
inc
pop
dec
inc
or
rcrb
jge
add
pop
scas
nop
test
andb
cmpsb
mov
push
inc
lock
lods
test
into
xor
std
cwtl
pushf
push
mov
mov
xorb
pop
out
rolb
clc
rolb
or
pop
push
pop
cmp
cmp
and
xchg
push
sub
push
cmpb
inc
xchg
xchg
pcmpeqb
mov
stos
cmp
int3
popf
jle
das
std
repnz
lods
and
sbb
jae
cmpb
inc
cmpsl
int3
pop
pusha
mov
push
sbb
mov
mov
xor
xor
inc
push
and
pop
push
movsb
mov
mov
inc
fmuls
xor
and
adc
mov
andb
loope
rclb
addb
mov
or
sbb
push
dec
lret
xchg
aad
andl
outsb
scas
inc
int3
ret
js
and
adc
test
push
test
ror
adc
pop
or
or
loopne
cmpsl
xchg
mov
fnstsw
or
nop
insb
in
pushf
pop
mov
cmp
xor
xchg
mov
test
and
push
add
inc
adc
pop
or
inc
frstpm(287
shrb
push
adc
insl
push
and
pusha
rcrl
cmpsl
push
sar
or
lock
inc
insl
dec
mov
adc
mov
sarb
inc
inc
mov
rolb
add
into
out
lods
call
das
xor
mov
add
jns
or
mov
pop
add
out
push
insb
xor
adc
fstpt
mov
es
test
xor
mov
jno
rcrl
bound
cwtl
push
xor
es
jle
mov
or
lods
shrl
add
pop
or
ss
repnz
pop
add
nop
adcb
cmp
jo
sbb
xor
inc
es
mov
sbb
inc
cmp
test
jmp
sbb
sbb
pop
fldlg2
add
xchg
orl
add
mov
mov
sbb
and
in
sub
clc
cmpsb
dec
add
ja
test
add
pop
add
or
mov
push
test
inc
in
sahf
pop
in
add
sbb
cmp
adc
int3
and
or
add
enter
sub
xor
jo
insb
add
pop
push
insb
insb
inc
stc
and
adc
dec
xchg
fdiv
shll
sbb
lcall
xor
test
mov
cmp
jp
add
cmp
cmc
mov
test
mov
sbb
loope
push
gs
daa
adc
sbb
cltd
mov
int3
loope
and
adc
add
adc
add
cmpsb
dec
int
jl
je
sbb
aad
cli
sbb
hlt
add
rcrl
enter
jo
xor
xchg
push
ficoml
sbb
loope
push
cld
inc
es
xchg
pop
sbb
adc
jb
dec
out
inc
push
mov
sbb
and
push
imul
sbb
lea
add
xchg
xor
in
nop
jbe
hlt
inc
push
nop
rcll
inc
es
push
inc
sbb
push
adc
xorb
add
pop
bound
and
pushf
push
pusha
jl
inc
sbb
and
sub
mov
cmp
and
add
jecxz
sbb
loopne
dec
or
push
leave
lds
cmp
ja
mov
pop
lock
pop
cmp
test
xor
popa
out
push
xchg
adc
in
mov
dec
dec
xor
pushf
mov
adc
shlb
mov
inc
orb
mov
push
ja
add
inc
dec
fcmovnu
call
das
pop
jo
fistpl
data16
jge
add
fbld
xlat
addl
outsb
inc
dec
inc
push
push
popf
lods
push
mov
adc
mov
cmc
add
sbb
cbtw
push
adcb
sbb
pop
negb
adc
out
and
faddl
push
sub
sbb
pop
jbe
mov
pop
cmc
dec
mov
sbb
rcrb
cmpsl
pop
pusha
sub
add
pop
add
mov
mov
xor
jno
icebp
sub
lock
test
mov
inc
mov
and
adc
enter
push
insb
mov
divl
mov
shlb
push
and
fistl
hlt
jecxz
mov
mov
in
nop
pop
cmp
test
mov
push
rorb
or
lods
cmpsb
nop
cmp
stos
pop
add
or
inc
pop
in
and
pop
xor
in
insb
lock
jmp
or
dec
adc
jge
pop
popf
bound
dec
cmp
pop
xlat
lcall
xor
jge
or
cmp
mov
xor
inc
xor
xor
xor
mov
inc
add
xchg
add
aas
lods
cmpsl
mov
pop
sbb
lcall
fs
outsb
lock
add
push
pop
nop
pause
dec
es
inc
cmp
add
jns
inc
adc
flds
and
push
mov
push
lcall
test
or
cmp
add
das
and
out
hlt
adc
sub
mov
xlat
shll
repnz
inc
sub
xor
arpl
add
mov
cmpsl
push
and
fisubl
out
ror
clc
addb
pop
pop
cmp
dec
pop
sbb
mov
test
out
inc
push
push
lret
jbe
getsec
mov
cmc
xor
jo
sbb
icebp
aad
adc
rcl
test
adc
in
fmuls
dec
mov
jno
xchg
or
xorb
je
jbe
add
lret
pop
incl
mov
adc
or
jmp
add
xlat
xor
testl
push
push
or
enter
data16
lcall
jns
sbb
xchg
dec
inc
mov
inc
in
cmp
ljmp
in
cwtl
outsb
and
and
popf
mov
xor
sub
sbb
inc
and
xor
add
cwtl
mov
lock
push
sbb
cltd
inc
adc
addb
shlb
inc
pop
jb
out
jo
xchg
xchg
add
scas
jmp
lock
xor
into
add
mov
and
push
push
es
scas
xchg
or
mull
jg
icebp
js
shll
clc
xchg
xchg
lea
shll
in
adc
sub
pop
aas
inc
ret
call
les
sbb
push
stos
mov
pop
in
pop
xchg
jecxz
lret
fsubs
test
inc
fcomi
js
insb
xchg
fs
adc
leave
sub
fcmovnu
daa
mov
and
inc
int3
les
inc
or
xorl
adc
mov
cs
lods
stos
cmp
clc
arpl
push
stos
rolb
popa
repnz
xchg
adc
ret
adc
enter
jno
cmpsl
mov
mov
push
cmp
jle
mov
cltd
adc
add
add
sbb
pop
ret
test
mov
and
inc
push
ret
xchg
mov
push
fwait
pop
sub
or
add
aad
xchg
in
mov
orb
lcall
test
cmp
add
mov
mov
add
jmp
adc
dec
addb
push
enter
mov
add
repz
sbbl
mov
inc
sbb
test
add
add
imul
cmp
and
or
add
aad
adc
jmp
mov
xchg
icebp
sar
cltd
xor
cld
mov
mov
add
push
mov
xchg
cltd
xor
pop
ffree
std
or
mov
or
fiaddl
cmp
xchg
loope
inc
je
push
push
xchg
aam
jg
test
lea
xor
pop
lods
and
mov
mov
aad
pusha
sbb
cmp
cmp
adc
inc
push
ret
mov
int
xchg
sarl
jo
aas
mov
test
les
insl
cmpsb
std
add
pushf
sbb
adc
movsl
cmp
pusha
lds
mov
shrl
aaa
adc
adc
gs
push
and
ret
enter
inc
sbb
xorl
rclb
xor
sub
pop
and
rorb
adc
mov
lret
insb
movsb
add
xlat
pusha
pop
dec
sbb
lcall
sbb
ret
and
inc
push
ret
pop
adc
or
aaa
pop
inc
and
pop
pop
insb
repnz
and
push
in
xchg
into
or
or
int3
lods
xor
add
outsb
sub
repnz
adc
pop
data16
add
sbb
sub
sti
cmp
xor
test
inc
sub
or
popf
imul
adc
xor
stc
in
pop
popa
enter
call
push
jbe
fidivl
push
xor
mov
push
add
mov
mov
jmp
sbb
and
xchg
sarl
and
and
or
xor
pop
push
mov
add
in
add
sub
sbb
xor
testb
and
jns
scas
mov
or
push
into
bound
push
ret
pop
or
and
lret
sbb
mov
es
pop
add
rcll
aas
add
stc
mov
push
or
pop
cmp
xor
popa
cli
xor
mov
or
ljmp
cmp
push
sub
xor
cmc
shrl
cmp
cli
pop
mov
cmp
push
lea
xor
and
pop
ret
and
inc
push
add
mov
add
out
call
stos
shl
lcall
xchg
cmp
or
push
inc
and
push
cmp
push
push
imul
push
or
dec
add
in
add
inc
and
jecxz
push
adc
mov
lahf
sub
jecxz
and
or
push
xchg
and
inc
push
ret
lods
add
imul
mov
sbb
fistpll
dec
mov
in
das
outsl
aam
adc
push
and
sbb
mov
or
pop
add
scas
aas
repz
mov
or
test
jae
out
or
xorl
or
mov
or
pop
sti
pop
add
popf
lods
gs
stc
shl
stc
or
lock
inc
push
xor
sub
fistpl
sub
mov
sub
sbb
movl
scas
mov
fdivrs
fdivrs
in
jns
adc
jge
es
subl
add
inc
add
ljmp
jb
repz
cld
clc
adc
mov
inc
sahf
sub
push
nop
cmp
inc
testl
sbb
push
in
leave
add
jno
sbb
jl
ds
or
sub
nop
jge
adc
pop
mov
xchg
add
imul
test
loope
hlt
mov
and
daa
xor
pop
dec
imul
and
shlb
cli
mov
and
pop
ret
inc
mov
inc
adc
inc
add
xchg
adc
push
cmp
add
sub
xor
ret
ljmp
popa
adc
xchg
xchg
sbb
push
mov
fldt
sub
sbb
mov
imul
add
fdivs
pop
jno
sub
push
rcl
mov
pop
jge
push
nop
les
xchg
faddl
mov
pop
jae
stos
std
inc
sbb
adc
and
inc
add
cltd
mov
mov
push
cwtl
mov
jg
sti
jl
adc
jge
fsts
or
sets
add
xor
and
and
in
pusha
jno
pushf
sbb
pop
lods
aas
dec
pusha
dec
adc
inc
push
popa
mov
cmp
fcmove
and
dec
add
arpl
stos
pop
push
jns
sbb
adc
jnp
mov
pop
push
dec
clc
ror
push
lret
xor
jmp
jo
movl
push
jmp
fstl
imul
add
outsb
dec
add
lret
pop
iret
imul
decl
clc
clc
mov
inc
inc
rcrl
adc
stos
push
add
pop
rorl
mov
xchg
xlat
mov
adc
xchg
lds
or
add
stc
inc
xchg
mov
push
and
popw
out
adc
jmp
call
add
mov
les
add
test
dec
int
movswl
pop
jo
stc
test
rorl
lcall
push
or
mov
jmp
push
inc
push
les
arpl
sub
add
cmc
mov
jge
and
jbe
lahf
or
push
push
pop
nop
sbb
test
int
stc
leave
jbe
data16
sub
mov
add
sbb
xchg
sahf
xchg
add
and
aas
or
sbbl
es
lock
mov
push
jb
ror
and
popf
ds
inc
mov
xor
call
orb
fadd
push
add
push
jle
scas
xorl
inc
and
mov
mov
sub
sbb
mov
lcall
neg
add
adc
mov
addb
sbb
lea
sub
mov
lods
fnstcw
in
fs
add
fcoml
ja
sbb
jge
mov
push
incl
mov
inc
popl
fsubrl
push
cld
movsb
fmul
loope
imul
loopne
out
fistpll
test
cmpb
inc
test
call
mov
inc
mov
flds
and
pop
xor
mov
fsubrp
fimull
xor
aad
jmp
cmp
pusha
imul
in
sbb
nop
or
mov
xchg
insb
push
push
inc
loope
adc
push
push
hlt
lock
insb
pop
push
mov
dec
into
bound
add
out
jp
mov
in
sub
inc
outsl
dec
out
jle
adc
dec
mov
mov
inc
pusha
sub
aad
jmp
push
pop
popa
push
jns
add
xchg
test
aad
inc
mov
in
push
adc
gs
sub
lods
mov
add
jbe
lods
mov
sbb
pop
dec
and
cmp
add
jecxz
test
mov
dec
or
xor
in
pusha
fistpl
add
lcall
addb
std
and
ret
cs
rcrl
adc
jae
popa
sub
jecxz
inc
adc
call
jbe
sbb
imul
daa
stc
mov
mov
push
pop
popa
jmp
iret
scas
dec
add
push
mov
outsb
pop
jp
enter
dec
xchg
sub
int3
dec
rclb
cmp
shrb
mov
jmp
insl
add
cmpsb
xor
in
mov
mov
clc
or
cli
add
movsl
push
movsb
add
adc
stc
stos
xorb
pop
xor
sub
dec
xchg
pop
popa
sbbb
lea
xor
inc
dec
sub
inc
or
jmp
rclb
and
rcll
pop
mov
xor
adc
lahf
movsl
pop
iret
adc
jb
inc
xchg
std
sub
dec
or
sbb
dec
js
sbb
cmp
sbb
pop
cmpsl
jae
jno
sub
push
es
push
es
sbb
shrb
mov
jecxz
les
adc
cld
fldl
loope
pop
or
pusha
dec
mov
popa
xchg
in
pusha
lock
push
int
jg
test
nop
test
sahf
cwtl
mov
out
push
inc
add
sbb
sub
push
pusha
mov
popa
push
jmp
push
xor
adc
mov
inc
mov
xchg
inc
pop
leave
ret
xor
leave
sub
arpl
or
pop
daa
adc
add
fcomi
ret
add
jno
into
sbb
leave
in
mov
mov
popa
sbb
enter
add
and
out
filds
sub
lods
and
in
leave
and
dec
push
rolb
adc
push
popa
push
sbb
inc
add
fldt
mov
or
push
dec
push
andb
mov
add
xchg
sub
push
loope
adc
xor
inc
or
es
sbb
and
xor
mov
xchg
adc
insl
mov
mull
out
push
or
ret
fwait
data16
xchg
sbb
or
cmp
xchg
sbb
push
movl
dec
test
adc
add
inc
mov
rorb
clc
rorb
mov
fcmovnbe
push
add
fmuls
inc
lds
xchg
ret
shlb
andl
mov
or
addl
xchg
adc
jge
add
adc
pop
xor
inc
lock
adc
popf
outsb
cmp
sbb
xchg
rcrl
and
les
cmp
pop
sbb
cmp
mov
push
and
orb
ret
jne
push
pop
xor
inc
rolb
or
aas
pop
or
add
adcl
pop
loop
arpl
mov
push
cs
sti
insb
or
mov
subb
pop
nop
into
daa
leave
cs
lock
jmp
adc
nop
ljmp
hlt
xchg
outsb
inc
mov
push
or
andl
andl
add
sbb
mov
dec
add
sub
mov
dec
orl
sbb
jmp
sbb
hlt
push
adc
push
mov
ja
in
pop
popa
xchg
pop
lods
xchg
jge
sbb
sbb
mov
test
inc
mov
dec
add
mov
xchg
call
or
loopne
push
jne
hlt
lret
int
loopne
mov
xchg
mov
or
mov
sub
cmp
and
enter
mov
xor
xchg
mov
sub
add
pop
jecxz
ljmp
inc
mov
mov
inc
dec
lea
mov
mov
mov
xchg
push
and
jb
xor
sub
imulb
dec
sub
dec
shll
iret
push
or
inc
popa
pop
add
add
arpl
negb
enter
faddl
and
xacquire
outsb
les
mov
xchg
jmp
cmc
dec
and
cmp
or
or
push
ror
lods
sub
clc
cmp
and
and
mov
sub
pusha
add
sbb
sbb
cmp
push
push
cld
gs
pusha
push
divb
mov
in
xchg
sti
add
pusha
nop
jp
xor
femms
push
xor
add
sub
arpl
pop
jbe
dec
fwait
add
push
mov
add
mov
shrb
iret
cld
or
vunpcklpd
cmp
shlb
sbb
lcall
inc
scas
jo
icebp
imul
or
orb
sbb
cltd
fs
jmp
xor
add
call
add
in
insl
push
subl
adc
xchg
loope
test
sbb
fnstenv
pop
jno
dec
mov
add
xor
sub
xor
sub
sub
push
cmp
xor
dec
push
rcll
add
adc
mov
ret
mov
pop
add
sbb
mov
enter
pop
sub
push
push
jno
xor
movswl
jmp
out
sub
xchg
dec
jno
ds
popf
mov
lea
rcl
ss
mov
sub
inc
jmp
popf
sbb
rol
cmc
pop
pop
xlat
add
jg
lret
mov
sub
fdivs
inc
lret
add
mov
jecxz
pusha
addl
and
outsl
add
decb
mov
jp
out
imul
xchg
inc
int3
cmp
jecxz
and
jmp
or
xor
loope
add
addb
pusha
mov
push
jge
xchg
cmp
inc
js
gs
imul
data16
popa
or
clc
cmp
gs
arpl
je
xlat
lahf
mov
sbb
jmp
adc
ds
mov
xor
imul
es
addr16
inc
jae
fcoml
popa
jge
jge
jnp
aaa
or
sub
xorb
push
push
cmp
fldpi
js
inc
inc
xchg
fs
sbb
jnp
jns
or
call
sub
inc
inc
push
rcr
cmpsb
lahf
fistpll
inc
add
dec
dec
pcmpgtb
dec
push
push
sbb
aas
jb
rcrl
bswap
repz
sub
mov
mov
adc
push
dec
sbb
je
js
add
dec
rcll
add
aaa
mov
rorb
shlb
inc
and
push
loop
sbb
dec
add
mulps
inc
inc
and
sbb
xor
ds
and
sbb
sbb
sbb
and
sbb
and
lds
enter
sbb
adc
sbb
adc
mov
jne
add
mov
and
xchg
sbb
testl
ret
popf
int3
pop
lea
mov
push
pusha
xor
inc
ret
aam
mov
sub
push
and
dec
pop
icebp
sub
and
push
and
push
inc
pop
and
pop
and
sub
cli
or
inc
int
flds
xor
xchg
and
and
adc
adc
sbb
sbb
xchg
inc
sub
in
cmp
pop
das
mov
mov
add
and
xchg
sbb
int3
add
lea
add
mov
lcall
sbb
aad
push
or
into
pop
add
mov
popa
call
sar
add
mov
sub
mov
pop
jnp
inc
lea
adc
pop
call
adc
nop
mov
sub
and
aaa
pop
adc
pop
out
mov
add
push
movswl
pop
mov
sub
pop
mov
pop
jge
add
pop
sub
outsb
add
dec
cmpsb
lahf
add
stc
mov
adc
push
mov
jb
dec
jecxz
sbb
inc
jle
sbb
push
dec
push
movsw
mov
jle
xlat
sbb
aam
mov
xor
das
das
push
mov
mov
push
movsb
daa
dec
or
leave
gs
add
xor
aaa
cmp
bound
cmp
sarb
sbb
scas
dec
and
pop
push
or
cmpsl
dec
pop
jge
repz
in
inc
pop
into
or
mov
mov
rorb
or
cltd
push
xor
mov
and
mov
sbb
or
cmpsb
in
paddd
and
sbb
shrb
mov
mov
je
and
frstor
incb
or
loopne
scas
or
out
adc
jnp
cmc
xor
and
and
fisttps
mov
pop
jbe
xor
in
and
jecxz
mov
push
push
inc
in
fistpl
je
or
sahf
test
dec
fidivrl
mov
movsb
inc
orb
sbb
cmp
or
dec
fadds
ret
push
xor
xor
jno
and
mov
cmpsb
cld
add
das
sub
mov
cmp
cmp
test
fnstenv
mov
push
gs
and
cmpsl
divb
and
add
mov
mov
bound
mov
ss
add
sbb
or
lahf
inc
and
sbb
cli
and
cltd
bound
push
jnp
pop
add
rcll
and
dec
cmp
outsl
js
popf
jge
in
in
sbb
fstpl
sub
inc
bound
add
add
in
andb
enter
lock
or
pop
iret
loope
lock
and
sbb
cltd
cmp
verr
or
jmp
call
or
mov
adc
inc
hlt
jecxz
scas
jne
mov
xorb
jecxz
cld
dec
add
ljmp
or
mov
sbb
adc
subl
mov
add
shld
popf
mov
ja
pop
push
or
or
mov
sbb
mov
or
jno
and
cmp
dec
push
jl
inc
push
pusha
mov
xchg
mov
mulb
fldenv
mov
sub
test
add
int
insl
test
ds
and
xchg
fiaddl
les
mov
dec
jnp
add
jae
push
mov
insl
inc
push
aam
pop
les
xor
xchg
addb
add
add
push
adc
mov
and
xor
loop
and
out
add
mov
lods
in
add
adc
fmull
fcompl
inc
loop
xor
pop
or
and
add
sahf
mulb
dec
sarb
fbld
dec
xchg
popf
je
or
or
or
cwtl
in
push
mov
or
and
cmpsl
jge
fldl
inc
mov
mov
shll
inc
jnp
ret
dec
movsb
mov
mov
and
add
or
mov
pop
shl
lock
and
dec
mov
sarb
add
xchg
mov
add
scas
sbbl
mov
inc
idivb
mov
adc
sbb
or
sbb
out
adc
add
stos
aam
xchg
push
lahf
or
sahf
push
adc
bound
sbb
and
psubw
sub
add
push
out
ret
js
xchg
out
cmp
cwtl
add
les
xor
adc
in
inc
fprem1
cmpsl
lret
sub
push
push
mov
popa
or
jno
dec
add
and
or
dec
xorb
das
push
sahf
and
adc
fmull
mov
mov
adc
dec
pop
sbb
mov
adc
and
cmp
out
je
xchg
cmp
adc
jecxz,pt
mov
sbb
insb
add
bound
mov
mov
jecxz
dec
pop
and
or
mov
xor
add
mov
lods
imul
xchg
and
dec
xchg
pop
pop
mov
loopne
je
cmp
and
dec
push
push
shrb
sub
and
inc
add
xchg
sub
and
pop
lret
and
in
and
sbb
mov
or
outsl
cmc
jp
jl
jno
push
adc
jo
sub
cmp
add
mov
and
sbb
adc
lods
adcl
in
push
insl
jl
mov
jne
iret
or
xchg
dec
sbb
lock
jecxz
rcrb
and
imul
nop
mov
pop
lods
stc
dec
rorb
rolb
push
add
and
or
and
cmpsl
push
sbb
dec
xchg
in
add
and
out
and
or
sub
push
mov
cmp
orb
xor
in
inc
adc
and
inc
js
imul
and
or
xchg
pop
jno
adc
mov
mov
xchg
int
dec
clc
and
push
repnz
and
cli
add
mov
jecxz
mov
iret
stos
jmp
inc
inc
std
xor
jo
inc
nop
push
nop
adc
add
mov
inc
sub
xor
mov
cld
adc
push
mov
hlt
jbe
cld
in
mov
pop
xchg
repnz
into
mov
xchg
sub
subb
imul
mov
sbb
push
adc
push
jp
shl
add
js
lods
fdivrp
inc
rcll
test
sbb
adc
mov
lahf
adc
movsb
stc
mov
aam
and
inc
pusha
sbb
jno
cld
or
in
or
ret
inc
movsb
rcr
andb
add
jbe
add
aaa
fs
cld
mov
push
mov
ret
lock
test
dec
pop
push
sbb
cmp
imul
fistpl
inc
lock
xchg
dec
cmpsl
inc
addb
xchg
add
jl
xor
or
sub
jle
xlat
sbb
ret
iret
inc
sub
inc
xchg
push
push
sar
push
out
cmpsb
pop
flds
mov
xor
xchg
sbb
xchg
rorb
push
dec
loopne
inc
lcall
mov
sbb
adc
les
mov
sbb
add
sub
lods
mov
loopne
inc
shlb
adc
pop
fwait
lock
fld
test
ljmp
fstpl
mov
pop
mov
imul
enter
mov
or
add
adc
lock
fld
pop
mov
push
xor
and
scas
cmp
loope
in
inc
ds
roll
adc
mov
popa
sbb
aad
out
popa
insb
ret
cmpsl
jl
lock
pop
jno
pusha
pop
xor
xor
cmp
xchg
jno
cmp
xchg
adc
inc
dec
test
sub
fmul
and
cmp
aaa
hlt
or
stc
inc
push
cld
loope
mov
cs
movsl
jmp
sub
inc
ret
clc
mov
add
sbbl
add
leave
add
pusha
shlb
outsb
add
add
mov
mov
add
mov
sbb
jp
mov
mov
adc
mov
add
in
scas
outsb
sub
jns
jge
add
inc
inc
push
inc
sbb
add
addr16
nop
out
sbb
fcompl
cmpl
mov
data16
pop
ret
mov
icebp
dec
add
add
inc
pop
ljmp
xchg
pusha
xlat
js
stos
out
jb
adc
dec
fiaddl
mov
fistpll
out
popa
outsl
inc
add
mov
test
jge
fldt
popf
add
xlat
pop
call
add
inc
imul
mov
push
jl
pusha
ljmp
ljmp
xchg
shr
fildll
rclb
adc
outsl
dec
jp
sub
loopne
popa
or
xor
jp
cmp
outsb
in
add
test
mov
xchg
out
add
pop
xchg
shlb
shr
jle
add
cs
adc
add
pop
nopl
mov
pop
xchg
sub
rcr
cltd
mov
add
in
movsb
imul
push
ljmp
push
pop
mov
mov
cmp
mov
hlt
shll
mov
cld
dec
jl
jecxz
inc
xchg
nop
pop
xchg
loope
sub
add
and
pusha
sbb
shrb
adc
in
add
shrb
jl
dec
jne
xor
add
push
pop
sbb
add
ja
mov
add
mov
xorb
push
int
mov
testb
mov
cmp
dec
cmpb
add
adc
cli
adc
insl
nop
mov
loop
and
inc
popf
scas
mov
add
pop
pop
je
inc
aam
jle
or
testl
mov
sub
add
mov
mov
push
mov
add
pop
adc
or
in
loopne
mov
fucomi
pop
or
and
out
test
aam
xlat
test
mov
mov
ja
fwait
xor
out
add
mov
pop
xor
push
adc
and
sti
or
imul
jge
add
jbe
jle
lea
mov
cld
sbb
cmp
dec
aam
orb
enter
pop
cmc
add
xlat
or
fcmove
xchg
or
adc
jb
call
movsb
inc
push
pop
xchg
mov
popf
daa
pusha
lahf
push
fiadds
sbbb
sub
cmp
xchg
jmp
jne
xor
mov
sti
sbb
pop
xchg
and
add
jo
pop
sub
jbe
add
fldcw
jp
test
arpl
sub
jb
cmp
sbb
mov
dec
mov
fsubr
sysret
les
fwait
ljmp
addr16
adc
mov
jne
xchg
xor
jecxz
fcmovnu
popa
imul
xor
ficoms
fstps
ja
sarb
into
sbb
lods
inc
inc
jno
jns
or
mov
add
dec
sarl
lret
add
jne
jbe
mov
dec
jle
adc
mov
into
ret
orb
mov
xchg
mov
xchg
int
repz
std
and
pop
add
xchg
rolb
repz
xor
push
push
mov
shlb
and
mov
shrb
add
mov
neg
add
test
cmp
aad
jg
mov
push
pop
cmpsl
add
add
xor
lock
dec
rorb
es
mull
mov
inc
lret
es
mov
cmp
pop
dec
ret
pusha
jecxz
mov
in
cmp
push
imul
or
sub
xor
js
mov
push
repnz
lds
sbb
xchg
push
loopne
dec
lock
repz
imul
lds
add
repnz
movsb
xchg
lods
xor
or
xchg
ja
mov
pushf
add
movsb
dec
adc
inc
repnz
repz
andb
andl
mov
daa
packsswb
pop
jno
fisttpl
in
cmpsb
sub
inc
je
mov
xor
aad
sbb
mov
imul
jne
or
pop
insb
rorl
setb
sbb
push
movsl
pusha
add
adc
outsb
add
lods
dec
mov
out
insl
or
push
movsl
les
pop
pop
lret
jo
and
fnstcw
xor
dec
and
add
mov
movsb
add
sub
js
repnz
ret
add
mov
xchg
scas
jb
add
dec
or
add
mov
pop
bound
push
je
cmp
ret
xlat
lea
loop
and
jbe
in
in
and
lret
out
aaa
jb
sbb
dec
xor
add
lret
dec
push
lret
mov
or
add
sub
aas
adc
sub
lock
cld
add
push
pop
stos
popf
push
ljmp
inc
ror
add
cmpsl
les
and
add
or
mov
sbb
dec
and
cmp
scas
add
dec
mov
xor
xor
fcoml
test
jns
icebp
mov
lods
enter
sti
aaa
sbb
add
push
out
sbb
and
add
adc
mov
data16
add
sub
pusha
sub
fisttpll
adc
pop
pop
mov
sub
xor
jl
or
popf
and
dec
iret
or
lods
sbb
push
xor
fiaddl
jb
push
inc
movsl
xor
add
adc
outsl
scas
mov
movaps
sbb
add
push
add
pusha
or
push
into
aad
test
push
fs
add
lahf
cli
and
orl
leave
mov
mov
test
repz
int
adc
mov
xlat
push
cmpsb
xor
mov
loope
test
inc
adc
push
shrb
sarb
add
xchg
sub
pop
or
add
cs
mov
call
addr16
stc
loopne
add
lea
movsl
push
cwtl
add
dec
clc
popa
rcll
mov
lcall
inc
rcr
data16
hlt
and
or
adc
incl
cmp
fst
enter
aas
or
mov
push
and
shll
adc
xor
jb
and
dec
dec
or
add
or
add
sbb
jle
frstor
aam
mov
fwait
add
mov
pusha
clc
mov
int
push
adc
movl
xor
adc
fidivrl
add
out
adc
addl
jp
aam
andl
les
movsl
fistpll
cmp
add
je
and
cmp
xchg
mov
fsubrl
enter
mov
or
mov
push
pop
jns
shl
xor
cmc
push
pop
test
jno
aam
sub
out
int
mov
jg
push
pop
ds
xchg
hlt
adc
add
ficomps
out
lret
fdivl
sldt
push
or
push
mov
lds
cmp
add
inc
dec
fsubrl
add
callw
sbbb
add
sub
pop
nop
orb
rolb
es
cld
mov
js
test
lock
adc
lock
jne
and
push
dec
jb
xchg
enter
cmp
and
adc
inc
adc
rcrl
call
adc
lods
dec
sbb
push
inc
lret
add
add
xchg
addr16
push
pusha
mov
andb
out
sbb
jno
dec
inc
fistl
fldcw
jge
adc
and
sbb
jbe
inc
mov
roll
push
decl
add
sbb
mov
mov
repnz
sbb
mov
jo
pop
movsb
jg
fnstcw
and
lcall
jnp
push
loope
xor
dec
xor
fildl
pusha
xchg
mov
cmpsl
cld
gs
adc
xchg
rorl
addl
pop
dec
push
mov
add
push
sti
adc
add
cmp
cmp
insb
sti
les
fimuls
dec
xor
cmp
imul
add
jmp
adc
xor
add
lcall
hlt
add
shlb
inc
test
je
nop
in
xor
push
cmp
mov
loope
mov
mov
in
mov
and
adc
cmp
sub
and
cmp
and
test
add
ss
or
add
fmuls
xor
aaa
xor
pop
xor
int
sub
subb
pop
testl
cld
insb
aaa
add
mov
mov
mov
inc
push
rorb
xor
cmp
or
rol
loop
test
xor
fistps
sbb
orb
mov
lods
xor
add
mov
cmp
sahf
cmpsl
int3
subb
ja
add
adcl
outsl
cltd
decl
and
in
add
inc
xor
pxor
leave
ret
mov
xchg
std
xor
mov
pop
popf
add
mov
jp
lret
add
test
negl
add
or
jl
push
push
imull
loope
xchg
test
cwtl
sub
bound
push
mov
jne
mov
adc
add
shlb
aam
les
cmp
sar
inc
xchg
jnp
add
add
cwtl
dec
and
daa
add
outsl
mov
addl
and
jp
cmpsb
subl
jecxz
add
aad
mov
sbb
pop
adc
hlt
add
arpl
cmp
in
sarl
nop
add
xchg
xchg
add
adc
mov
add
stos
pop
scas
push
aaa
add
outsl
popf
jecxz
aas
cwtl
add
shlb
int3
cmpb
jge
mov
movsl
pop
and
fcmovb
cmp
cmp
sub
adc
popa
loop
loope
sahf
mov
add
add
aad
inc
pop
ljmp
adcb
notl
pusha
and
mov
inc
clc
pop
add
insl
jb
inc
xor
push
jae
or
xor
dec
scas
js
rcll
stos
rol
test
adc
add
mov
push
icebp
xchg
aam
mov
js
cli
add
movsb
sub
cs
std
inc
aad
add
sbb
ja
mov
lods
push
add
rclb
pop
je
xor
push
les
cmp
add
mov
inc
add
lcall
push
inc
xchg
add
cmp
dec
add
bndldx
jnp
or
ds
add
mov
gs
out
pop
pop
push
and
testb
fxch
inc
dec
fs
sarb
xlat
pop
inc
movl
xor
fwait
jmp
mov
xor
pop
ficompl
pusha
adc
popa
dec
sbb
add
sub
push
cmp
add
xorl
repz
fs
push
mov
cmpsb
pusha
mov
lret
jecxz
andb
in
mov
aad
jno
fs
sbbl
mov
add
jge
sub
inc
add
inc
adcb
add
cld
in
rorl
fidivrl
push
and
loopne
cwtl
xor
stc
je
lods
int3
out
add
mov
jnp
lcall
push
sub
stos
and
add
mov
cwtl
test
push
popa
ret
out
xchg
push
cwtl
and
mov
or
jbe
adc
mov
call
aaa
rdmsr
es
xor
xchg
jmp
push
movsb
in
mov
xchg
shlb
daa
repnz
and
ja
xchg
cmpsb
rolb
or
jl
pop
clc
dec
pop
pop
stos
cmp
dec
imul
sub
inc
leave
mov
ffreep
push
pop
xchg
add
stc
pop
adc
push
sub
or
add
out
andb
leave
icebp
aam
loop
dec
sbb
inc
sahf
xchg
mov
push
sub
adc
loopne
add
add
movsl
pop
pop
in
and
daa
sti
loopne
add
add
pop
inc
outsb
cltd
mov
add
in
mov
dec
adc
cmpxchg
inc
adc
cwtl
sbb
add
lcall
add
dec
adc
cmp
adc
mov
test
xchg
fsubs
addl
mov
mov
leave
jle
pop
inc
or
js
cs
loope
lods
xor
fiadds
mov
jae
push
sbb
shlb
add
iret
js
cltd
add
adc
scas
movsb
arpl
and
dec
and
pop
pop
fisttpl
iret
in
adc
jp
out
cmp
shll
loope
lcall
cli
push
add
sbb
add
sahf
arpl
test
into
shlb
shlb
add
scas
loopne
add
ss
hlt
jns
rorl
xor
pop
test
cltd
add
or
jge
add
push
mov
outsl
inc
cwtl
sbb
xor
lods
or
je
push
lds
bound
mov
test
or
pop
nop
cwtl
lock
add
and
xor
daa
divl
ret
inc
cmp
and
shll
adc
scas
cmp
lds
shl
add
ja
inc
and
aaa
xchg
sub
push
clc
fnsave
cmp
add
aam
rorb
add
adc
push
mov
loopne
jno
add
mov
mov
pop
stc
pop
and
imul
add
cmp
ret
sti
mov
or
inc
test
and
add
pop
pop
cmp
movsl
adc
add
and
inc
add
jg
xor
sahf
add
dec
mov
loop
loopne
shll
jge
andb
xchg
mul
mov
mov
add
fisubrl
leave
cmpsb
add
out
add
xor
dec
sbb
add
xor
mov
xchg
andl
pushf
xor
ja
dec
cmpxchg
sbb
mov
cmp
jp
mov
ljmp
lods
xchg
das
jmp
inc
add
hlt
lret
rolb
lods
int3
pop
inc
add
lret
add
lahf
add
sub
pop
bound
dec
inc
add
ds
popl
imul
cmp
sub
and
addb
js
out
enter
jb
add
jl
mov
xchg
add
or
push
mov
mov
or
shrl
jns
lods
jo
imul
adc
lcall
sbb
inc
inc
popf
or
je
mov
mov
add
adc
jne
or
outsl
add
mov
notb
es
nop
je
fstpt
push
pop
bound
pslld
gs
dec
sti
add
pusha
add
or
scas
pop
subb
in
push
fwait
add
or
inc
xor
test
sbb
or
xchg
inc
xchg
cmp
sarb
into
add
mov
add
pop
cs
or
inc
call
adc
mov
or
cmpsb
add
add
mov
fnstcw
ljmp
cmp
dec
pusha
add
mov
out
inc
inc
subb
popf
sti
jae
push
xchg
rolb
inc
rolb
inc
and
and
inc
xor
add
repz
or
cmp
jns
in
dec
lds
iret
orb
leave
scas
pop
xchg
or
adc
dec
dec
xor
jno
inc
add
int
daa
test
or
push
btc
add
pop
or
dec
pop
mov
mov
mov
sti
or
jecxz
cmpsb
push
mov
and
fldenv
pop
in
lods
insl
lock
mov
sbb
ljmp
dec
push
loope
lret
dec
int
andb
push
addb
pop
sub
hlt
cmp
inc
xlat
aam
sahf
push
add
cmp
nop
stos
jecxz
mov
addr16
jle
cmp
repz
mov
add
sbb
test
cs
jbe
negl
mov
add
lret
and
adc
sub
adc
fisubs
inc
mov
repz
bound
sar
out
pop
xchg
add
or
stos
push
mov
mov
pop
orb
add
lcall
rcr
xorb
push
aaa
hlt
idiv
nop
pushf
sahf
lret
rolb
dec
pop
jno
mov
cmpsl
lea
test
cmp
int3
sti
adc
push
adc
dec
push
jle
jae
add
lret
add
mov
inc
mov
ds
push
sbb
adc
outsl
inc
bound
adc
sbbb
std
fimull
sub
mov
pop
cltd
inc
imul
xor
mov
sub
cmpsb
int
sbb
scas
jns
pop
scas
orb
jl
push
mov
mov
lock
rcrb
pop
adc
out
fcmovu
mov
sarl
jle
adc
xchg
mov
sbb
les
adc
rep
push
rcrb
dec
dec
mov
add
imul
nop
cwtl
add
pop
incb
and
sarb
mov
add
pop
pop
xchg
iret
lcall
pop
rolb
insb
lods
add
push
push
cmpl
and
cmc
dec
cmpsl
nop
add
xchg
lcall
add
jns
or
sbb
lods
xorb
add
jns
sbbb
outsl
adc
loop
xchg
mov
out
cmp
mov
in
repnz
push
sbb
or
aaa
add
incb
add
lods
dec
sbb
lret
ficoml
xor
mov
or
adc
adc
jl
or
bound
jl
and
and
jno
cwtl
inc
mov
nop
dec
test
je
loop
cmp
daa
cmpsb
pop
pushf
push
icebp
or
shlb
inc
mov
aad
test
mov
icebp
ret
and
mov
sbb
dec
testb
mov
ret
dec
mov
lahf
inc
lock
adc
out
and
add
pop
mov
mov
cwtl
lret
push
dec
loop
add
in
cmp
inc
and
add
mov
data16
push
es
jnp
adc
leave
xchg
jmp
cli
xor
jle
adc
ret
mov
shrb
xchg
add
scas
mov
ret
testb
xor
or
dec
or
fcomps
gs
add
mov
pop
jmp
sbbl
jle
rcrb
pop
test
inc
sub
push
scas
push
push
adc
testb
or
cmp
arpl
fisubrs
test
jo
cmovno
bound
std
fcomi
pusha
pop
add
int
sub
inc
test
nop
mov
gs
pop
mov
scas
sub
jbe
cmp
dec
sbb
loopne
aad
jmp
rorl
adc
xchg
test
fst
add
adc
add
insb
mov
in
loopne
hlt
add
push
and
inc
pusha
jmp
add
adc
popf
hlt
xor
sub
jmp
arpl
adc
dec
push
xor
ret
xor
lods
inc
and
fnsave
loope
test
pop
sbb
clc
frndint
das
pop
mov
rcrb
outsb
mov
xlat
lea
iret
sbb
cli
xor
jg
cmp
push
or
out
push
inc
fldcw
add
dec
or
sub
in
outsl
lret
test
jns
xor
push
xor
and
mov
sub
fucom
popf
add
lahf
fbstp
mov
sub
sbb
adc
push
into
pop
fwait
cmp
aas
outsl
add
shr
popf
and
inc
cmpsl
mov
jmp
add
push
inc
in
jge
add
add
ljmp
xchg
xor
and
push
jle
add
bound
add
dec
xchg
push
push
add
xlat
fdivs
cld
lods
xchg
cli
lret
ret
mov
and
stos
mov
add
scas
and
add
mov
fstpt
add
lret
add
jns
sub
adc
sbb
cmp
out
ss
addl
or
adc
jne
sub
pop
mov
xchg
inc
orb
add
jbe
jl
xchg
cmp
add
fstpt
in
es
lcall
cltd
jo
add
add
int
sbb
rolb
in
nop
insl
ret
popl
aad
sti
xchg
mov
push
mov
xchg
mov
lock
lods
mov
add
cmp
dec
inc
pop
add
in
pop
jl
add
inc
dec
sar
add
xchg
out
inc
xor
mov
cmp
ljmp
sub
shrb
ret
push
mov
push
pop
mov
add
sarl
mov
add
fwait
les
and
adc
mov
add
adc
add
lcall
mov
mov
jno
inc
dec
faddl
dec
xchg
leave
or
ds
jb
movsb
fidivrs
cmpsb
cwtl
adc
aad
jmp
repz
cmp
stc
loope
mov
idiv
loop
push
push
mov
and
mov
mov
add
in
out
leave
roll
xchg
mov
rorb
inc
add
cmp
imul
ficoms
test
push
fsub
enter
jnp
lea
inc
and
add
push
push
lock
pop
pop
ret
jbe
jg
jo
out
mulb
inc
mov
fwait
sbb
push
fisttps
pop
pop
mov
or
or
rclb
and
cwtl
jmp
leave
xorl
fsubl
mov
aam
xor
push
add
adc
pop
add
pop
cmpsb
rol
lcall
outsl
lret
bound
sahf
mov
int
sub
jecxz
mov
ss
mov
or
inc
or
adc
mov
outsl
out
mov
jecxz
loop
and
adc
pop
inc
add
jmp
add
cmp
xchg
sbb
push
sbb
jns
inc
sbb
in
xchg
in
add
cli
or
orl
loopne
pop
adc
add
shll
mov
add
test
xchg
add
mov
and
sub
add
sbb
sbb
incl
aas
and
arpl
adcb
and
std
push
add
clc
mov
add
dec
xchg
sub
xor
pop
pop
nop
mov
dec
jns
test
mov
jne
push
lock
into
fcmove
cmpl
and
and
mov
mov
hlt
inc
sub
in
fldt
daa
lret
ret
sbb
jne
pusha
in
mov
push
xor
push
ss
addb
xchg
jne
xchg
jo
and
in
mov
push
add
push
push
test
add
mov
add
stc
shll
jo
enter
add
sub
xchg
adc
fmul
mov
outsw
pop
add
pusha
pop
xchg
xchg
cmpsl
rorb
lea
gs
arpl
in
inc
sbb
pushf
lret
data16
mov
sbb
movsl
in
test
mov
roll
sarb
nop
enter
js
add
testb
or
add
sub
jne
cmp
lods
cmp
out
lds
movsl
insl
xor
cmp
leave
xchg
push
stos
xor
or
jmp
icebp
inc
push
jb
jp
add
aam
xor
adc
rolb
mov
xlat
out
add
nop
pop
push
push
cmp
or
sbb
inc
lods
add
lret
dec
fcoms
stos
dec
in
or
adcb
rcrl
sbb
add
outsl
cltd
xchg
and
test
push
pop
adc
jp
repnz
or
push
xor
shrl
shl
pop
mov
incb
int
adc
roll
add
test
jo
jbe
pop
cvtpi2ps
mov
imul
inc
push
out
mov
push
mov
xor
sbb
dec
add
fldl2t
inc
out
sbb
pop
mov
and
push
pop
pop
gs
xor
je
rorl
add
ret
in
add
cwtl
cld
add
xor
test
push
cmc
call
mov
xor
cmp
push
lock
add
scas
push
mov
ret
loop
addb
mov
sbb
data16
jno
pop
sbb
push
loop
cmpsb
jb
add
dec
cwtl
ljmp
and
incb
mov
add
dec
jnp
jle
fistl
jg
mov
and
pop
push
test
or
and
pop
and
mov
sbb
pop
add
mov
imul
add
mov
out
dec
ljmp
xor
dec
inc
inc
pusha
add
inc
inc
dec
push
in
das
loope
add
fsubr
lcall
aaa
add
and
call
jno
xor
jns
clc
push
jno
dec
xchg
cmpxchg
jecxz
sub
nop
test
fsts
sub
into
sbb
loopne
sub
adc
cmp
sub
arpl
add
mov
jl
inc
mov
aam
sbb
xor
jnp
mov
mov
or
lea
jb
out
sub
int
rorb
ret
jge
pop
shl
rcrl
insb
out
test
add
push
or
sti
xor
mov
mov
pop
js
mov
and
pop
add
ljmp
xor
es
popa
adc
add
mov
movsb
xor
add
adcl
clc
and
add
mov
xor
dec
dec
xor
mov
test
je
ss
jmp
inc
test
sbb
insb
add
popf
int
xor
add
int3
bound
add
hlt
ret
cmpsl
scas
sub
clc
add
cmp
xchg
add
outsb
xor
inc
push
mov
loop
imul
lahf
call
inc
pop
push
xchg
repnz
add
ret
push
mov
shll
shl
dec
mov
sbb
lds
and
jl
add
sbb
and
xchg
mov
dec
push
mov
mov
stos
push
cli
jecxz
fisubl
icebp
mov
cmp
or
mov
mov
shlb
or
popa
push
jo
js
cmp
pop
push
push
add
dec
push
sbb
ja
mov
lea
mov
lret
add
lock
ficoml
outsb
mov
fildl
cltd
ds
adc
and
inc
mov
dec
dec
into
add
pop
addr16
jae
jne
adc
xor
pop
arpl
sub
mov
sub
mov
push
push
mov
push
and
out
add
xor
fsub
add
iret
jle
mov
pop
test
adc
inc
pusha
push
sub
icebp
cmp
aam
sbb
mov
repnz
jb
in
add
int
out
cmp
lds
aas
mov
insb
mov
add
std
sarl
nop
out
pop
mov
test
gs
cmp
xchg
sti
leave
daa
xchg
lcall
jl
xchg
shrl
mov
enter
cwtl
or
cmp
inc
or
lods
daa
and
or
ds
cmpb
push
loop
pusha
sbb
cwtl
pop
xchg
in
pop
clc
inc
add
and
loopne
add
ror
out
sbb
inc
adc
adc
add
xchg
inc
and
push
loop
mov
mov
add
addr16
nop
sbb
pop
cmpsl
popaw
mov
mov
in
pop
add
add
adc
movsl
addr16
jbe
add
xchg
xor
adc
add
stc
ret
lret
cmp
add
sbb
cmp
bound
adc
enter
sub
and
xchg
push
test
scas
out
jae
xor
clc
or
ficoml
orb
in
or
push
pop
insl
or
jb
jae
lahf
and
sbb
ret
cmp
mov
pop
add
sub
rolb
iret
dec
lods
pop
xor
enter
add
mov
test
addr16
push
loope
sub
mov
pop
mov
pop
dec
mov
lret
movsb
sbb
jo
or
sbb
mov
mov
pop
fcomp
xchg
adc
lods
pop
jne
or
sbb
adc
cs
test
pop
mull
lock
nop
subb
sub
loopne
into
jns
adc
cmp
test
ret
mov
and
push
add
mov
aas
in
inc
or
add
cld
and
test
fwait
aam
in
sarl
inc
cld
stos
push
das
pop
adc
jecxz
fcompl
add
les
cmpsl
add
mov
inc
movsl
and
xor
jg
sbb
lock
mulps
xor
daa
xchg
das
sbb
stos
adc
lds
add
ror
int3
ret
add
insb
xchg
in
ds
xchg
cmp
xor
movsb
push
xchg
imul
shll
cmp
xor
mov
jo
sbb
lret
roll
cmp
mov
mov
nop
mov
sub
add
je
sahf
add
or
mov
call
xor
out
add
mul
push
mov
cwtl
lods
push
adc
or
insb
sbb
mov
xorb
push
lcall
jg
pusha
ss
insb
repnz
cmp
inc
pusha
shr
fs
icebp
js
xchg
cmp
gs
mov
sbb
inc
add
or
cmp
orb
adc
mov
lret
test
lods
add
gs
xchg
push
mov
mov
outsb
xor
jle
loopne
jo
fucomp
cli
sub
xor
rcrb
push
loopne
add
push
or
jns
cld
add
inc
fisttps
popf
insb
outsl
addb
int
fisubrl
add
inc
and
add
mov
add
sub
fisubl
jno
or
jl
enter
and
pop
jle
dec
xor
fiadds
add
sbb
xchg
mov
and
add
add
pop
mov
push
mov
push
add
loopne
lret
dec
ds
inc
add
pop
js
roll
jp
repnz
fs
in
or
jns
daa
add
sbb
sahf
in
shlb
sbb
inc
iret
xchg
lret
mov
add
xchg
adc
jecxz
add
xchg
push
iret
loope
je
add
enter
and
aas
sub
faddl
icebp
push
roll
mov
dec
add
out
add
dec
sub
adc
scas
insb
or
inc
xor
sarb
pop
icebp
add
xor
sub
gs
aam
pop
shl
cmp
push
stos
add
sub
enter
mov
pop
popl
clc
test
jns
add
jbe
insb
cwtl
xchg
fdiv
inc
mov
sbb
cmp
push
out
out
ljmp
shll
das
ret
clc
lret
stos
pop
or
xsavec
cmp
cmpsb
add
push
mov
les
dec
mul
or
test
mov
loope
aam
sub
les
es
sbb
dec
xor
xchg
mov
jge
fcom
out
and
neg
push
popf
or
dec
cli
xchg
pop
roll
mov
mov
or
jo
add
add
int
mov
fs
sti
icebp
or
loope
jg
mov
mov
cwtl
addl
push
mov
dec
roll
dec
rolb
mov
or
call
je
pushf
loop
inc
notl
jge
nop
add
push
iret
cmp
add
mov
std
mov
sbb
xchg
scas
mov
verr
cmp
cvtdq2ps
hlt
in
mov
test
push
sbb
rcrb
popa
push
mov
iret
cmp
movups
mov
sbb
pop
jnp
mov
dec
xor
out
ja
push
add
add
mov
mov
dec
add
pop
xchg
fcompl
leave
loop
xlat
sbb
int3
rolb
test
cmp
out
fistpll
xchg
pop
faddp
cltd
cmp
ds
addb
add
xorl
into
or
fucomp
add
subb
sbb
sub
orb
add
dec
cmp
mov
or
dec
push
mov
jae
jno
or
add
ja
sahf
daa
shrl
add
push
lea
jl
add
movsb
pop
jbe,pt
fstps
mov
jb
add
mov
outsb
cmpsb
push
xchg
jbe
mov
lret
pop
add
fcoms
pop
clc
and
add
in
shlb
sub
add
add
ss
lds
pop
mov
sbb
add
adc
mov
ror
inc
call
lea
push
arpl
aas
addl
out
mov
push
mov
jmp
add
mov
push
add
lods
add
ficoms
adc
xchg
mov
sahf
mov
and
bnd
push
push
aas
test
cs
sbb
ljmp
sbb
pop
stc
push
adc
aaa
insl
jg
add
in
xor
insb
add
je
push
pop
adc
in
add
or
mov
push
xchg
jbe
shrb
xlat
popf
jo
push
mov
in
mov
icebp
test
decl
add
pop
sub
mov
cmp
ds
mov
dec
dec
outsb
push
cwtl
imul
out
mov
shlb
test
adc
fs
push
dec
test
cmp
or
lahf
pusha
mov
and
pop
mov
shlb
repnz
cmp
xchg
jns
jno
les
mov
iret
in
lea
mov
push
ss
addb
push
cmpb
or
add
xlat
push
hlt
add
cmp
not
or
cld
dec
movsl
jl
xchg
lahf
jmp
add
lret
add
lds
mov
pop
insb
sbb
pop
insb
es
dec
add
cmp
add
nop
cmp
rolb
fists
mov
add
fimuls
sub
sbbb
insb
add
cmpsb
cmp
push
addl
xor
je
jmp
jl
fdivr
xor
arpl
ret
sub
cmpb
into
lock
and
jns
mov
dec
mov
pop
imul
lahf
jae
jmp
sub
mov
mov
cwtl
mov
dec
cmp
addl
ss
dec
or
or
jmp
call
add
jge
mov
add
test
or
inc
adc
clc
add
adc
mov
test
sub
ja
fucomi
sahf
add
inc
in
jns
in
flds
or
mov
add
frstor
add
mov
xchg
push
mov
clc
jae
jo
dec
mov
or
enter
adc
mov
movsb
dec
mov
cltd
add
ja
hlt
add
std
xchg
aaa
and
or
js
lock
add
pushl
icebp
leave
add
cmp
push
int3
lock
call
add
popa
loopne
clc
pop
inc
pop
repz
jae
sarb
cwtl
adc
add
mov
xor
lahf
or
mov
push
dec
sbb
add
sub
add
cld
fcoms
aad
add
stc
lock
pop
mov
fdivrl
mov
inc
add
imul
lcall
or
imul
pushf
add
out
sti
addr16
mov
loopne
in
test
stos
loope
popa
jo
add
or
sbb
xchg
mov
dec
pop
js
add
mov
add
lods
in
out
inc
test
or
popa
adc
aas
xchg
xchg
add
pop
jbe
cmpsb
xor
sbb
mov
incb
nop
decl
test
clc
fistpll
xlat
add
lahf
push
inc
pusha
jae
inc
push
and
scas
push
leave
or
ret
loopne
and
in
pop
cmp
cmpsl
add
rolb
cmpl
and
cmp
lock
lods
pop
mov
adc
incl
rorl
call
dec
out
add
pop
test
loop
subl
sub
dec
adc
jnp
add
addr16
dec
js
loopne
dec
xchg
clc
push
fcmovne
or
sbb
jno
push
pop
dec
push
jnp
or
inc
mov
add
dec
pusha
outsl
sub
sub
add
mov
into
sbb
fidivl
cmc
rclb
pop
xchg
add
sub
push
in
push
clc
xchg
cli
mov
popa
mov
sbb
xchg
popf
adc
inc
xor
mov
out
add
les
lock
cmpsb
mov
lds
nop
imul
inc
dec
cmp
je
jae
add
sbbl
add
inc
adc
movsb
sbb
mov
sbb
inc
repnz
daa
cmp
aas
xor
or
add
je
jle
xchg
add
mov
add
call
or
inc
test
sub
pop
into
push
mov
sti
pusha
je
lret
sub
sbb
adc
dec
lock
cmp
add
mov
in
cmpsl
add
jg
mov
add
scas
test
addl
cmp
mov
sbb
mov
out
push
push
sahf
aad
add
popa
pop
int
cwtl
dec
dec
push
cmovbe
xchg
std
ss
mov
dec
hlt
pmullw
and
cmp
scas
iret
imul
pop
inc
sbb
les
add
jae
jne
mov
aaa
jl
jnp
pushf
add
adc
jmp
sbb
std
mov
mov
lea
mov
mov
enter
repnz
scas
movsl
mov
add
pop
mov
jo
adc
fisttpll
mov
dec
push
orb
add
pop
xor
hlt
xor
add
fisubs
aam
test
xor
add
dec
push
sbb
dec
repnz
push
and
jns
or
jbe
je
inc
and
lods
sbb
cli
dec
dec
xchg
movsb
adc
cmp
push
or
repz
pop
mov
and
add
jp
in
dec
pop
mov
and
and
cmp
inc
push
inc
add
and
sbb
hlt
pop
dec
or
test
jge
cmp
fbstp
cwtl
adc
popl
shl
mov
rorl
xor
cmpsb
out
mov
add
clc
jp
mov
xchg
jle
ljmp
lea
nop
sub
jne
add
sbb
fnstsw
inc
fisubrs
push
pusha
mulb
les
inc
pop
subb
push
xor
test
and
jo
add
xor
dec
lahf
push
push
incl
xor
nop
mov
cwtl
es
push
in
push
scas
add
push
rorb
push
shlb
scas
adc
dec
push
xor
xor
add
cmp
mov
cmp
push
push
xor
xorb
imul
push
add
mov
mov
test
lock
lahf
rolb
add
pop
pop
pushf
mov
ret
mov
sbb
mov
mov
flds
xchg
sahf
pop
inc
sbb
icebp
mov
fldl
push
mov
stc
adc
into
ja
cmovo
adc
jmp
std
pop
mov
or
jne
nop
pop
inc
cwtl
add
stos
mov
add
push
sbb
out
in
aaa
mov
jo
sub
pop
aas
jbe
add
in
inc
loopne
sub
mov
insb
add
lcall
cmp
dec
push
loop
dec
pop
int
shrb
mov
xchg
fcmove
sub
pusha
iret
addb
das
sbb
mov
or
cmpsb
mov
jno
clc
movsb
sbb
fsubrp
or
push
adc
in
adc
mov
test
rcr
jmp
out
pop
insl
mov
add
aad
flds
mov
pop
push
xor
mov
test
xchg
jge
add
add
sti
pushf
lds
add
out
incb
ret
or
sti
lret
addl
dec
mov
or
pop
add
aad
fsubl
nop
xchg
add
mov
and
pop
fs
addb
test
aaa
mov
add
imul
xchg
cmp
push
pop
push
jecxz,pt
inc
add
pop
sub
mov
insb
push
add
sti
push
xor
test
clc
push
pop
mov
pusha
pop
push
cmpsb
fisubrs
add
and
fisttpll
sub
ss
add
xor
out
dec
cmpsb
js
push
imul
sti
add
xchg
push
and
mov
cmpsb
in
xor
out
sub
test
xor
jbe
add
or
mov
add
cmp
push
push
jae
or
pop
xchg
add
adc
mov
mov
or
and
nop
xlat
aas
push
push
mov
inc
pusha
xchg
stos
add
cmp
add
fildl
push
jl
mov
push
movsb
jno
inc
out
sbb
test
sbb
add
test
loope
cmpsb
add
test
jecxz
cs
xchg
insb
adc
sub
jl
and
adc
out
jl
pop
inc
addr16
jge
cld
mov
dec
jb
sbb
in
mov
aaa
and
ficoms
cmp
mov
pop
dec
pusha
mov
adc
mov
dec
sbbb
ror
jecxz
aas
arpl
orb
imul
rcrb
das
sbb
jns
test
lahf
shlb
cmc
js
pop
stos
jge
add
test
ds
sbb
pop
outsl
dec
sub
xor
cmc
lret
push
add
mov
aam
sbb
nop
add
mov
int3
cmp
sbb
arpl
loop
ficoml
push
and
sbb
mov
lret
lds
and
outsl
and
enter
add
jl
cmovae
jno
in
sbb
in
sbb
xor
jmp
mov
xor
add
push
sbb
xchg
ficoml
mov
out
xchg
setge
fldt
outsb
fidivs
xor
call
jg
sbb
daa
iret
dec
push
incb
sub
andb
add
shl
pop
mov
or
add
or
push
sbb
pop
pop
scas
push
sbb
shlb
sbbb
sub
and
sub
xchg
loopne
add
in
fldcw
add
jo
aaa
sbb
pop
add
ficoms
or
and
sbb
sbb
add
jg
sub
xchg
add
sbb
scas
add
notb
mov
and
addr16
addb
mov
shl
sbb
popa
inc
mov
xorl
mov
dec
popf
adc
les
cli
or
inc
xchg
jo
clc
outsl
in
cmp
clc
adc
sbb
icebp
sub
xchg
mov
or
xchg
imul
inc
push
mov
adc
sbb
lea
rorl
fadds
aad
cmpb
push
mov
lock
or
popa
out
test
repnz
aas
and
movsl
movsl
insl
in
call
add
add
cli
push
sub
add
cld
adc
inc
out
stos
add
lock
and
enter
add
cwtl
cmp
cmpsb
scas
cmp
adc
imul
fdivrl
les
pop
sub
or
push
and
xchg
lret
pop
mov
or
fs
mov
add
or
stc
pop
inc
in
xchg
aas
rcrl
push
cmpb
es
loopne
or
add
xor
adc
call
xor
stos
mov
add
ret
mov
lock
popa
sbb
jb
shl
adc
pop
lahf
add
xor
orb
lret
add
sbb
push
mov
cwtl
sarb
mov
adc
mov
jg
int3
adcb
shlb
lea
hlt
jns
inc
xchg
add
enter
in
mov
in
stos
add
pop
test
adcb
push
inc
inc
mov
xchg
in
adc
jae
popf
leave
movsb
add
pusha
and
sub
and
cmp
leave
movl
xor
and
jg
int3
jmp
stos
pop
jle
add
addr16
or
outsb
out
xchg
icebp
adc
call
js
and
inc
mov
inc
or
sub
jno
or
out
mov
add
inc
jns
xchg
addb
sub
ficompl
lret
stos
call
pop
inc
repnz
iret
add
xor
pushf
bound
dec
rolb
xchg
insb
mov
jnp
sbb
jae
iret
test
cmp
ds
call
jno
shr
adc
pop
add
dec
mov
loopne
mov
cmp
xor
icebp
mov
lods
and
stos
dec
ljmp
xchg
mov
lods
jns
in
jae
fwait
push
fmull
push
add
sbb
outsb
xchg
lods
sub
out
push
add
aas
lcall
out
int3
call
push
mov
xchg
sbb
imul
int
ret
fcmovnbe
xchg
std
cmp
inc
add
test
xchg
dec
jle
pop
mov
mov
fwait
cld
pop
add
mov
iret
ret
mov
or
add
jbe
xor
adc
inc
stos
add
ret
xchg
add
cli
mov
pop
xchg
or
mov
cmpsb
nop
ret
mov
mov
add
mov
jnp
xchg
pop
jge
incl
sbb
pop
paddsw
out
loopne
sbb
add
xorl
icebp
add
push
test
sbb
iret
xor
add
sbb
ljmp
mov
add
push
cld
xor
inc
dec
jecxz
mov
xor
cwtl
push
or
push
icebp
dec
mov
clc
es
mov
cmp
xor
loope
verr
mov
hlt
pop
pop
repz
rcrl
out
mov
mov
and
add
icebp
std
cmp
test
xchg
sbb
mov
popa
adc
xchg
sub
enter
inc
add
aas
negl
or
mov
fcmovbe
clc
aas
jp
add
sbb
lods
mov
mov
pop
xor
dec
popf
and
out
dec
or
sbb
push
jge
add
and
scas
cmovno
testl
int3
shl
jo
ret
or
mov
clc
add
mov
cltd
push
das
mov
cmpsl
pop
inc
incb
dec
cmp
xchg
stos
sti
mov
mov
or
int3
push
in
into
loop
add
neg
ss
mov
pop
push
gs
inc
push
mov
pop
add
loopne
jnp
push
add
cmp
fwait
add
fldenv
xchg
ret
int3
rcr
adc
add
lea
ret
pop
and
mov
cmp
mov
xchg
adc
add
add
stos
or
add
mov
and
cltd
mov
faddl
sbb
or
mov
rcrb
rclb
test
push
adc
shlb
icebp
aad
ret
lds
sbb
hlt
pop
ret
add
mov
add
repz
leave
loope
push
aam
faddl
sub
push
mov
push
add
push
dec
test
std
add
push
movsb
pop
insl
daa
cmpsl
sbb
and
shrb
loope
adc
sub
ss
add
or
xchg
subb
ja
add
add
out
insl
mov
int3
frstor
jmp
cld
notb
mov
ficomps
cld
sub
pusha
mov
xor
mov
add
xor
or
mov
xor
cmp
pusha
fldenv
xchg
andb
push
or
dec
insl
rolb
or
xchg
pop
sub
mov
push
loopne
add
dec
mov
xorb
sub
sbb
add
add
stos
aaa
push
mov
jnp
jo
add
inc
inc
loop
pop
cmp
add
cmp
andl
inc
out
add
test
xlat
xor
movsl
mov
addb
inc
inc
popa
add
mov
nop
daa
inc
hlt
xor
lock
push
mov
stos
add
aaa
mov
stc
insb
mov
subb
pop
mov
or
cmpxchg
mov
or
xor
out
pop
in
jns
in
jne
sub
test
push
std
jl
mov
addr16
add
std
sbbb
mov
punpcklbw
fs
pop
data16
and
or
push
add
jle
rolb
push
inc
shrb
xchg
sub
in
lahf
xchg
mov
jl
inc
xchg
mov
fimull
push
js
pop
jl
push
mov
xor
popa
jle
shl
daa
xchg
loopne
fisttpl
add
jae
push
jnp
mov
mov
pop
cmp
in
cmp
xor
sub
sub
pop
mov
test
out
je
test
cld
int3
add
push
or
in
daa
push
and
mov
loopne
scas
pop
das
xchg
insb
add
mov
add
cld
or
aas
xchg
add
add
test
fisttpl
cmp
aaa
xchg
pop
add
push
mov
popa
cmp
adc
enter
leave
jo
shrb
dec
sbb
push
dec
cmp
dec
push
ds
sub
into
add
sbb
orl
ja
dec
sbb
lcall
sub
cmp
test
fsubl
and
pop
xor
nop
sub
sub
add
je
add
sub
aam
rolb
mov
fimull
add
out
cs
ret
loopne
adcb
xchg
inc
mov
inc
shrb
in
push
dec
dec
or
mov
xchg
sti
je
loop
addl
adc
adc
fcoml
dec
push
jo
mov
pop
add
movsl
inc
lock
jge
mov
add
lret
lcall
pop
aam
jmp
sub
pop
dec
or
mov
mov
popf
daa
xchg
imul
push
and
sbb
cs
test
rolb
mov
mov
je
xchg
das
pop
push
in
cmp
lret
or
sti
ret
cmp
pop
lock
ds
add
and
xor
mov
inc
push
mov
pop
sarb
mov
xchg
mov
hlt
jg
inc
js
test
mov
add
fiadds
lahf
push
cltd
push
fsts
cmp
mov
movl
push
ss
or
nop
addb
xchg
cwtl
loop
ret
imul
push
movsb
nopl
push
in
sub
add
in
or
mov
cmp
mov
pop
ds
sbb
enter
pop
and
adc
jmp
or
push
cmp
iret
add
shlb
sub
std
popa
popf
add
lahf
ja
xchg
sub
add
add
test
sub
or
inc
dec
jecxz
mov
dec
aad
test
cmpsl
popa
scas
jo
lods
xor
jl
add
lcall
test
in
and
lods
adc
in
fldenv
fsubp
jae
mov
or
add
inc
xor
cmp
cmpsb
add
aad
fistl
jecxz
jge
or
mov
rol
xorl
and
pop
push
sbb
int
fdivs
repz
cmp
xchg
pop
ss
push
adc
push
mov
jb
mov
sbb
cmp
jle
xchg
add
adc
mov
mov
rcr
or
or
mov
sahf
popa
int
hlt
add
je
shlb
shrb
push
js
push
xor
jo
scas
jo
lock
sub
jb
mov
pop
add
lock
push
push
mov
shr
and
das
jp
mov
pop
inc
add
pop
nop
clc
scas
jmp
jb
add
adc
sarb
loop
pop
inc
xor
addr16
pusha
sbb
add
bound
je
inc
or
cmp
mov
xchg
and
es
mov
lds
push
xlat
mov
dec
addb
call
xor
push
sub
mov
cmp
cwtl
ja
or
loopne
push
jg
add
mov
pop
xor
mov
and
mov
addl
cmc
sbb
out
fidivs
push
add
int
sbb
ss
inc
jg
push
cmp
and
inc
push
xchg
add
lret
mov
xor
ficomps
stos
stc
call
imul
inc
push
mov
and
add
pop
sub
and
mov
mov
mov
or
fistpll
repz
sbb
out
fisubrl
inc
out
sbb
xor
inc
dec
pop
pop
or
pusha
jmp
mov
mov
test
jp
pushf
out
fcoms
add
pop
xor
test
sbb
mov
stos
add
xor
add
and
push
push
rclb
jae
xlat
sub
in
js
mov
mov
lret
cli
dec
push
andl
test
mov
sbb
sbb
add
mov
cli
dec
sahf
add
or
test
mov
adc
adc
push
std
push
sbb
enter
sub
sub
js
gs
test
or
iret
data16
add
inc
push
cmp
cmp
xorb
fidivrl
es
add
mov
xor
je
scas
gs
test
jl
adc
repnz
shlb
pop
adc
xchg
ret
xchg
repz
bound
jmp
or
mov
pop
push
add
sub
add
xor
mov
mov
xor
sbb
inc
add
cld
mov
rolb
nop
sbb
loopne
xlat
or
push
xor
shrb
test
add
inc
or
jb
inc
rcr
mov
push
xor
maxps
mov
push
daa
rcl
xlat
mov
mov
call
inc
mov
out
hlt
add
fadds
cli
lret
pop
shlb
push
add
dec
cmc
jb
adc
or
inc
push
in
mov
fs
mov
xchg
in
inc
pop
inc
pop
in
pushf
add
jl
cmp
cmpsb
adc
adc
pop
jno
in
xorb
push
push
push
pop
mov
jl
enter
subb
arpl
jl
mov
xlat
xchg
xor
sub
add
push
adc
xor
fwait
shll
cltd
addb
invd
mov
mov
dec
loop
jne
push
leave
add
ror
nop
add
jp
pop
cmp
xchg
sub
xlat
pop
lahf
shll
cwtl
cmp
pushf
addr16
or
mov
cmp
mov
pop
xchg
mov
mov
add
loop
cmpb
jnp
lock
test
ds
add
or
lea
es
or
xlat
sar
nop
sbb
xchg
add
mov
adc
add
ficoms
aad
gs
std
push
jp
add
out
pop
mov
and
ret
fldlg2
add
jo
add
js
dec
pushf
adc
ret
mov
imul
loopne
rol
jne
mov
sub
add
inc
in
or
adcl
test
les
add
jmp
mov
push
push
in
and
inc
sbb
push
add
arpl
loop
lods
loop
dec
inc
add
aam
and
out
es
add
imul
lods
lcall
cmp
cmc
and
nop
add
pop
inc
fnstenv
es
stos
pushf
cmpb
dec
jecxz
mov
mov
jle
shlb
jbe
add
test
add
decb
ljmp
stos
xor
test
and
sub
ljmp
and
sbb
roll
xor
mov
and
or
or
adc
in
sbb
push
mov
nop
aad
mov
pop
mov
jge
or
lods
into
shlb
and
pop
rolb
cld
push
mov
sbb
inc
xlat
and
mov
pop
ja
jle
cli
subb
ljmp
lds
fldenv
jp
adc
enter
mov
test
mov
negb
mov
addr16
xor
loop
pusha
insb
in
cwtl
testl
mov
lock
fcoml
les
jbe
jae
adc
pop
orb
fs
es
jl
push
ret
jp
aam
loope
rolb
ljmp
lock
rolb
test
mov
dec
adc
arpl
add
push
jmp
nop
mov
out
add
or
les
int3
loope
dec
and
pusha
sub
int
aaa
xor
xor
push
mov
adc
add
movsl
cmp
add
cwtl
inc
pop
and
mov
clc
jp
add
scas
push
adcl
xor
test
js
sarb
or
mov
inc
test
mov
adc
xrelease
jae
imul
xor
repnz
je
fstps
add
and
pop
xorb
roll
test
lods
stos
mov
scas
cmp
loopne
js
xchg
jne
std
loopne
mov
repnz
lods
in
push
fstl
lcall
gs
push
or
cltd
cwtl
scas
andb
and
std
add
fdivr
xor
movsb
add
xchg
fimull
je
sbb
scas
daa
jbe
enter
jge
ret
dec
js
jnp
nop
cld
int
jns
mov
sub
das
inc
pop
in
dec
or
cwtl
push
pop
rclb
mov
inc
mov
jbe
push
push
hlt
in
jl
lods
dec
shl
lret
movsl
rcll
push
mov
outsb
je
das
pusha
add
adc
stos
daa
mov
or
dec
fnstcw
xor
fsubs
ja
jp
add
mov
in
lock
and
mov
cmp
push
pop
jno
inc
mov
popf
test
mov
outsl
jle
ja
and
mov
add
push
mov
test
aad
in
testb
dec
imul
xchg
cmp
aas
into
data16
cmpsb
sub
add
push
mov
inc
mov
or
js
add
jmp
fcoms
das
pop
xchg
pop
adc
and
sbb
loopne
int
adc
divl
jmp
or
mov
arpl
ds
lock
nop
add
jl
add
jae
add
push
cmp
xor
add
mov
out
ljmp
dec
push
cmp
mov
add
sub
insl
pop
push
scas
mov
add
rorl
ds
xchg
or
test
mov
js
add
adc
pop
mov
xor
cmp
lahf
aam
push
loope
in
add
notb
sbb
cmpsb
add
inc
dec
pop
in
mov
pop
add
push
or
lods
xor
int3
lret
xor
sahf
mov
mov
add
mov
call
jmp
stos
mov
add
lcall
add
or
or
adc
mov
jns
stos
push
lret
xchg
out
rorb
xor
cwtl
call
pushf
test
into
add
mov
jp
jl
pop
add
into
push
lret
fs
jb
pop
add
cmp
adc
ficoms
cmc
push
jle
push
mul
add
sahf
mov
pop
jp
add
stc
ret
pop
mov
loopne
lcall
and
or
aad
cmp
sbb
pop
pop
jle
inc
mov
fadd
push
add
out
dec
cld
xchg
pop
cmp
mov
mov
addr16
iret
push
add
imul
pop
mov
jg
add
inc
idivl
fnsave
lods
cmp
add
jno
mov
add
sbb
shlb
sbb
pop
push
test
cmp
adcb
push
add
jle
iret
stc
clc
dec
inc
test
pop
pop
dec
cmp
and
xchg
les
loopne
mov
push
cli
clc
and
mov
aad
dec
les
add
mov
in
sbb
sbbb
mov
int3
xor
lock
rolb
sbb
and
movl
mov
fadds
testb
and
psrlw
daa
pop
mov
adc
sarb
dec
movsb
pop
stos
add
mov
mov
in
dec
add
cmc
int
sti
loopne
lret
daa
ffreep
cmp
jne
sbb
or
in
dec
testb
adc
lret
lods
cmp
dec
adc
ja
nop
ds
mov
sub
add
stos
mov
clc
push
adc
push
mov
cmp
xchg
or
sbb
jns
pop
test
orb
dec
fildl
add
rcr
rorb
xor
mov
mov
mov
rcrl
cmpsl
fstpl
lret
push
inc
xor
pop
dec
dec
add
pop
cld
stos
xor
xor
out
jns
nop
scas
and
loopne
addl
dec
pop
subl
fsts
cmp
add
call
ds
or
in
pusha
adc
es
bswap
ret
pop
pop
jmp
jecxz
mov
mov
repz
ret
pop
sarb
mov
pop
pushf
pushf
repnz
cs
aam
add
pop
adc
daa
add
xchg
jmp
sub
add
repnz
mov
inc
dec
mov
dec
pop
add
call
icebp
dec
mov
jae
in
and
jnp
push
xchg
add
sarl
inc
pop
push
xchg
add
push
inc
scas
cs
data16
jbe
mov
xor
push
ss
fs
mov
push
mov
clc
sbb
add
sahf
in
sub
dec
mov
adc
jmp
pushf
xor
pushl
aaa
out
aad
xchg
stos
xchg
dec
fs
adc
add
in
add
sahf
push
aaa
sbb
xchg
add
in
push
mov
test
sbb
sub
inc
push
jle
mov
push
adc
cmpsl
mov
mov
jns
sub
mov
cmp
xor
sbb
sub
add
xor
pop
jb
in
movsb
xor
mov
adc
cld
mov
add
outsb
mov
push
jg
aas
lcall
inc
dec
out
inc
adc
xchg
cmp
sbb
mov
dec
jg
and
nop
add
shrl
xchg
and
jb
add
pop
faddl
and
cmpsl
xor
imul
inc
ud1
cmpsb
jns
or
rcll
add
cli
xor
jmp
push
shll
or
pusha
mov
xlat
pushf
int3
jne
dec
or
push
sbb
loopne
mov
xchg
or
icebp
mov
sub
push
push
sub
rcrb
cmp
aam
sub
sbb
test
jle
shrb
push
call
jbe
call
insb
stos
hlt
inc
jne
push
test
in
push
lret
sbb
or
popf
xchg
push
pop
or
mov
inc
mov
pop
add
bound
loope
das
gs
or
adcb
ret
fstpl
inc
xor
push
pop
add
adc
loope
mov
dec
loop
add
mov
rcrl
adc
adc
xor
jnp
lret
js
add
clc
mov
sarb
nop
adc
push
pop
mov
cmp
cmp
cmpb
out
popa
ljmp
push
mov
add
mov
inc
add
mov
push
mov
out
adc
push
push
sahf
lods
add
dec
das
mov
and
inc
add
jle
sbb
push
lds
mov
rcl
lret
mov
ss
add
xchg
mov
jp
cmp
shrl
mov
and
loopne
sbb
mov
push
dec
pusha
mov
mov
ljmp
popf
mov
ret
lea
cltd
cmp
push
mov
loopne
mov
add
xor
nop
fistpll
pop
icebp
and
test
lock
mov
pop
and
or
mov
lldt
dec
pusha
test
sarl
adc
cmc
push
push
sub
sub
mov
jnp
xlat
mov
nop
ret
xchg
jge
inc
or
mov
xchg
pusha
je
cs
std
fdivs
add
aam
mov
imul
add
loope
add
lcall
out
xchg
sbb
mov
cmp
ss
add
mov
dec
push
xchg
aad
in
andb
and
andb
mov
add
scas
lods
dec
mov
and
out
push
shl
clc
or
frstor
test
adc
clc
add
movsb
xorl
mov
arpl
and
or
cmp
imul
bound
aaa
mov
xlat
add
dec
pop
inc
sbb
mov
sub
dec
xchg
in
mov
int3
adc
sti
jb
add
mov
add
mov
jns
lcall
sbb
jo
add
pop
mov
mov
add
dec
into
pop
mov
jp
pop
and
sub
jno
add
outsl
add
aam
sub
rorb
insb
mov
stc
add
pop
xchg
shrl
imul
pop
shll
into
add
and
bound
test
jo
cmp
cmpl
add
pop
push
push
sbb
add
js
or
inc
dec
cmpl
push
adc
mov
push
adc
jbe
pop
enter
mov
adc
outsb
cld
hlt
leave
lahf
cmpb
out
js
xchg
scas
and
sub
je
mov
ret
sahf
jecxz
ja
clc
fsubrs
or
sbb
dec
pop
inc
add
cmc
bound
mov
xor
sub
into
mov
pop
adc
or
push
sbb
xor
rolb
cmp
cmp
lret
pushf
leave
xor
push
call
xchg
inc
add
in
sub
mov
loop
add
inc
cmp
je
add
mov
inc
out
ds
int
or
jl
adc
out
mov
pop
adc
nop
mov
dec
clc
ret
push
insb
ficoms
jo
stos
in
nop
add
pop
lret
loopne
rcrb
lret
lods
xchg
in
cmpsl
adc
in
movsb
sbbb
jmp
pop
or
or
out
add
mov
scas
xchg
add
pop
adc
xor
cmpb
test
imul
dec
add
ret
nop
or
scas
mov
cmp
hlt
and
push
bound
add
cwtl
cltd
push
cmp
xorl
or
gs
sahf
leave
leavew
mov
bound
add
jge
jnp
fimull
mov
inc
mov
adc
adc
xlat
and
xchg
ljmp
je
loopne
or
jg
lods
or
xlat
ljmp
imul
icebp
add
xchg
pop
add
movsl
into
movb
clc
aaa
add
cmc
cs
les
stos
mov
mov
roll
add
and
cwtl
int
push
mov
movsb
cld
in
lock
or
in
outsl
pushf
les
fsubl
mov
mov
push
insb
pop
enter
ret
lret
mov
add
pop
xchg
dec
fisttpll
cmp
push
in
leave
lods
addb
jns
aas
cs
rolb
aaa
stc
jno
sahf
add
jl
mov
xchg
std
add
pop
add
pushf
or
push
xchg
call
out
mov
dec
jns
nop
push
pop
lds
xor
sbb
pop
add
aad
sub
sub
shll
push
rorl
xchg
fadds
jmp
rcrb
jecxz
cmc
lea
add
into
dec
pop
sbb
daa
sbb
std
sarb
and
add
pop
in
push
xor
clc
mov
dec
cmp
scas
push
popl
pop
pop
add
pop
xchg
repnz
xchg
jmp
aas
xchg
divb
adc
sbb
cmp
add
mov
aam
decb
hlt
je
add
push
lret
lock
nop
push
or
gs
addb
sub
dec
cmp
ret
jo
jl
data16
es
adc
jb
add
adc
scas
std
lds
dec
cltd
sub
pop
mov
adc
add
das
sub
xlat
test
xchg
stos
jnp
mov
xor
ffreep
add
pop
enter
xorb
pop
and
addr16
xchg
xor
jns
imul
test
scas
cmp
out
adc
movsl
lcall
push
add
leave
pop
jp
test
inc
jle
mov
std
subb
push
add
out
std
lret
repnz
ret
cmpsb
sbb
movsb
push
push
xchg
mov
sub
fsts
adc
pop
inc
daa
adcl
les
mov
test
add
xchg
in
cmp
add
inc
jg
fucomp
xor
jl,pn
aad
sbb
ret
sbb
testb
add
and
in
fmul
and
jae
add
mov
push
fistps
sub
mov
and
add
pop
dec
popa
push
or
loop
jne
in
add
xor
inc
jbe
popf
add
mov
mov
xor
nop
test
pop
add
shrl
or
ret
xchg
rcrb
out
add
stc
sub
jno
push
mov
mov
adc
cld
dec
ja
lahf
mov
adc
fiadds
shrb
pop
arpl
sub
rorb
shlb
add
dec
test
push
or
out
add
add
mov
xor
mov
pop
std
fiadds
or
pusha
push
add
lahf
daa
div
aas
addl
sub
add
add
push
iret
leave
pop
lods
insl
dec
movsl
or
lock
call
popf
jge
stc
lret
sbb
iret
add
dec
push
nop
jp
sub
rclb
pushf
ret
and
ljmp
jns
pusha
hlt
or
sub
mov
cmpsl
xchg
add
insl
push
push
dec
sub
divl
enter
test
jnp
iret
orb
pop
pop
pushf
sub
orl
sbb
push
lods
push
negb
scas
int3
mov
jb
mov
add
xor
scas
add
in
sub
aam
shrb
add
out
lds
mov
add
or
or
mov
xchg
ds
add
mov
inc
sub
bound
pcmpeqb
xor
mov
clc
fsubr
add
and
jmp
mov
gs
mov
sti
and
jne
inc
adcl
pop
out
mov
cmp
xchg
pop
and
add
es
add
inc
mov
or
or
dec
les
add
xor
loopne
dec
das
push
jae
jmp
push
jl
add
fsubr
int
sahf
movsb
adcb
fnstcw
lret
cmc
shll
loopne
sbb
cmpsb
mov
push
loopne
cltd
test
jp
arpl
mov
fadd
xchg
xor
xor
push
test
adc
mov
sbbb
pop
divpd
and
add
pop
cmp
xor
lock
cmp
daa
fmul
and
cld
cmc
lock
push
ds
add
mov
add
fadds
pop
faddl
pop
pop
mov
dec
std
scas
je
lcall
cmp
shll
pushf
sbb
scas
pop
outsl
dec
push
inc
mov
addr16
sbb
xor
add
test
mov
loopne
gs
in
aam
int3
es
js
add
icebp
test
add
hlt
cwtl
inc
dec
bound
pusha
add
sbb
or
mov
outsb
jbe
fmuls
mov
pop
bswap
xlat
subb
mov
popa
add
cli
jno
add
ja
cmp
pop
push
clc
es
les
add
ret
int3
sar
add
or
shl
jecxz
add
inc
aas
lock
jb
movsl
pop
retw
xchg
sahf
xchg
cmp
xorb
push
or
adc
xlat
adc
jle
or
mov
sbb
pushf
sub
lock
sub
stos
push
jecxz
nop
push
ret
mov
pop
mov
pop
std
mov
cmp
dec
sbb
add
sbb
adc
lcall
ss
lret
cltd
testb
dec
or
jo
pop
imul
cli
mov
sub
movsl
add
xchg
add
jae
out
add
xor
repnz
add
dec
sbb
leave
fs
add
mov
pop
loopne
add
mov
inc
and
out
add
mov
lahf
sub
sbb
adc
xchg
xor
dec
call
stc
and
testb
push
push
arpl
add
pop
popa
cmpb
and
xchg
xchg
add
dec
ret
mov
push
loop
jo
add
in
pop
jle
addr16
add
xor
aaa
add
shlb
mov
mov
or
nop
rolb
add
mov
shll
mov
xchg
aam
jne
into
jg
loope
mov
lods
add
or
orl
fs
and
jmp
sub
aam
push
push
jne
add
pop
push
aaa
add
cmp
push
adc
std
and
jae
in
inc
push
xor
mov
push
rcrb
add
rcr
ret
je
lock
dec
aam
mov
lods
or
add
cmp
inc
adc
push
add
jecxz
cmp
jbe
add
call
test
xlat
adcb
scas
mov
ret
push
push
and
clc
sbb
sarl
gs
cld
sbb
ljmp
xchg
add
cli
repz
in
dec
xor
push
mov
xor
bound
cmp
fldt
rorb
test
out
jmp
or
xchg
inc
add
inc
jg
cmp
pop
jb
push
in
add
adc
or
shlb
enter
gs
add
add
out
rorb
inc
cmp
and
fwait
xchg
jecxz
add
xor
inc
fcmovnbe
and
and
cld
jg
sub
iret
add
test
loopne
xlat
ljmp
outsb
mov
cmp
loope
xor
div
into
dec
pop
or
movsl
lcall
adc
in
push
sbb
in
movsb
sbb
je
inc
jnp
dec
inc
cltd
sub
aaa
aam
adcl
out
jb
add
sbb
pop
mov
sub
shl
sbb
lahf
sbb
jmp
jb
mov
pop
mov
jmp
add
lods
inc
and
xor
inc
and
lret
sbb
psrld
cmc
dec
dec
push
sbb
adc
mov
aad
nop
sahf
and
and
xchg
cltd
sbb
jecxz
add
inc
cmp
jns
pop
add
add
sbb
dec
les
les
pop
in
mov
adc
test
and
adc
add
hlt
leave
shlb
sarb
mov
add
es
iret
imul
xchg
pop
adc
add
jno
xchg
xor
loopne
add
stos
mov
repnz
mov
add
std
xor
and
push
jo
insl
add
dec
ja
rcrb
or
inc
pop
mov
test
fs
in
push
fbstp
mov
inc
sub
dec
dec
popf
xor
jo
cmpb
add
sahf
cmp
cmp
add
cmp
jb
imul
xor
xor
add
inc
push
or
mov
jecxz
ljmp
inc
mov
test
dec
ficompl
aam
mov
dec
push
adc
push
aas
xor
add
inc
push
add
cmp
push
js
out
xor
psubq
insb
jbe
outsb
pop
dec
out
cmpb
jne
add
shl
repnz
adc
mov
subb
add
jecxz
test
adc
into
mov
and
xchg
pop
inc
mov
ss
adc
or
or
cs
lahf
fisubrs
add
cmp
pop
fcoms
nop
hlt
cmp
xchg
or
nop
jbe
icebp
shll
push
std
scas
push
add
push
sbb
mov
stos
add
and
outsb
mov
shl
inc
adcb
loopne
mov
mov
add
mov
sub
xlat
adc
ret
add
add
inc
or
dec
out
push
pop
into
test
add
add
call
cwtl
cmpsl
xor
sub
int3
popa
xor
jmp
les
mov
xchg
mov
ret
add
inc
jnp
andb
test
inc
std
xchg
das
cld
xor
arpl
push
in
sbb
add
sbb
insb
push
dec
push
and
adc
call
gs
daa
jg
xchg
add
sbb
enter
sbbl
scas
add
xchg
mov
add
clc
divb
cld
adc
jmp
gs
mov
jl
mov
test
ds
fxch
inc
dec
je
jmp
add
lgs
mov
add
repz
add
mov
xchg
add
incb
fstps
ss
jo
sti
ljmp
add
pop
sarb
dec
push
out
and
mov
jp
jmp
mov
jbe
fwait
add
push
cmp
out
push
mov
jle
int
add
les
dec
mov
ljmp
pushf
xchg
add
mov
call
adc
out
mov
stc
add
pusha
xchg
dec
jl
pop
movsb
add
lds
popa
cwtl
xchg
nop
inc
jecxz
jb
loopne
cld
jns
add
add
or
scas
dec
sbb
es
mov
jo
sub
das
aas
fldt
dec
cmpb
add
and
lahf
es
pop
xchg
and
add
in
xlat
inc
iret
sub
push
je
andb
pop
cwtl
pop
add
sbb
les
add
jae
js
add
into
dec
cmp
pop
xchg
lea
adc
cmp
adc
xchg
pop
add
jp
push
sbbl
fs
pop
mov
lret
jbe
mov
add
test
inc
aas
xor
add
outsl
or
out
adc
mov
sub
sbb
jbe
sarb
and
push
pop
mov
roll
faddl
add
xor
mov
pop
in
and
mov
fcoml
adc
pusha
lret
jg
movb
push
sub
int3
add
iret
add
loope
mov
cmpsb
mov
adc
add
and
ljmp
rep
cltd
repnz
add
push
sub
add
nop
sbb
jle
push
pop
leave
pop
fcoms
faddl
jno
push
mov
push
add
xchg
stos
inc
sti
dec
nop
sub
scas
hlt
neg
popa
and
jp
push
add
add
in
js
push
jns
xchg
aad
xor
repnz
xchg
push
cmc
cmpsb
fwait
push
cmp
and
mov
jge
xor
add
mov
shll
orl
fwait
jmp
or
pop
xor
sub
push
aaa
cmp
ja
mov
lcallw
sub
add
inc
gs
ja
outsb
cmp
pop
repnz
add
xchg
arpl
or
xchg
enter
int3
pop
and
jp
push
fs
nop
js
in
add
cs
orb
xlat
arpl
and
mov
gs
loopne
iret
sub
loopne
jmp
ja
sbb
lock
mov
mov
push
jnp
xchg
pop
and
push
leave
mov
enter
popa
and
aaa
std
mov
push
test
or
mov
cmp
xor
cli
int3
icebp
inc
lahf
and
xchg
dec
dec
lret
into
ret
xor
gs
idiv
aas
add
pop
pop
xchg
mov
mov
fstpt
sub
pop
aad
jge
scas
movsb
cld
enter
push
sahf
stos
mov
and
adc
dec
rcrb
loope
sbb
cmp
ret
dec
je
cmp
cmp
dec
fistpl
sub
xor
mov
sbbb
aas
push
shrb
add
pusha
cmovae
pop
into
sub
or
inc
sbb
sbb
adc
out
subb
lds
cs
push
and
and
test
lcall
mov
add
popf
outsb
js
mov
push
or
mov
pop
jbe
xor
out
xor
sub
push
call
cmc
test
scas
test
dec
ss
add
sbb
rcrl
xchg
sub
mov
mov
or
pop
adc
arpl
push
jne
mov
pop
mov
mov
cmp
xchg
and
dec
mov
pop
add
add
push
xor
push
cmp
das
outsl
jbe
outsb
or
cmp
int3
add
stos
cmp
inc
es
popf
mov
pushf
or
rcr
push
adc
mov
dec
mov
pop
int
cmp
fadds
mov
or
push
outsb
fucomi
xor
cmpsl
add
icebp
push
adc
cli
xchg
cmp
cwtl
lret
addr16
sbb
xchg
xor
inc
xlat
es
in
outsb
sub
lea
or
daa
comiss
shl
sub
xchg
cltd
push
sub
jnp
and
data16
clc
sbb
mov
std
pusha
hlt
ret
aaa
ljmp
sbb
add
das
pop
cmp
in
add
repnz
outsl
push
lds
xchg
mov
cmp
xchg
loop
dec
dec
mov
jmp
icebp
in
loope
adc
xorb
nop
pop
add
push
mov
sub
pusha
inc
test
add
popa
mov
mov
fnstsw
lret
push
lahf
incb
jmp
insl
push
fcoms
mov
loope
and
outsb
cli
and
add
sti
lock
mov
cmpsl
cmp
xor
into
lahf
test
aas
fldenv
in
or
out
pop
gs
shr
fiadds
push
test
mov
sti
adc
adc
add
test
mov
pop
or
into
cmpb
in
sub
sub
mov
or
cmp
addl
ficoml
push
sbb
rol
lret
or
dec
add
dec
mov
popf
xchg
ljmp
xor
fldt
rcll
push
pop
and
adc
clc
in
inc
or
lock
test
and
incl
xchg
not
lret
and
pop
add
ret
pop
jmp
xchg
je
inc
pop
mov
aad
imul
add
xchg
push
mov
mov
mov
add
hlt
jge
mov
mov
jg
or
xor
jbe
mov
adc
or
outsb
push
or
test
add
inc
insl
out
pop
dec
ret
je
add
adc
adcb
rcll
and
das
or
add
sub
push
pcmpeqw
inc
mov
adc
sbb
je
add
xor
addb
add
and
pushf
les
mov
xor
jb
bound
std
and
mov
push
dec
inc
push
xor
aas
ljmp
sbb
repz
jnp
int3
rol
pop
into
lods
pop
sbb
cmp
lahf
xchg
push
push
jo
fldln2
push
lcall
push
stos
test
out
mov
outsl
rcrb
add
dec
inc
sbbb
lret
sbb
scas
test
mov
das
and
ss
push
adc
xlat
sbb
xor
std
mov
xchg
inc
mov
jne
add
add
inc
je
mov
in
ja
pushf
add
inc
rcll
xchg
cmp
aas
std
addb
jle
add
std
jo
pop
ja
daa
add
mov
out
add
loop
dec
xchg
test
or
imul
xor
loope
call
cmp
xor
mov
adc
sbb
shlb
adc
push
dec
ds
push
fsubr
adcl
test
mov
notb
andb
push
lret
jl
add
clc
add
inc
int
mov
add
cmp
push
xor
insb
lods
aad
fwait
orl
add
lcall
dec
dec
push
xchg
icebp
cli
add
testb
xor
inc
in
shll
xchg
xchg
fwait
cmp
mov
out
andb
add
leave
jg
sbb
jno
in
ret
add
mov
push
and
daa
push
incl
mov
shrb
lcall
mov
dec
jp
data16
jno
push
xor
xchg
mov
jg
jl
sbb
push
stc
add
daa
mov
sbb
pushf
adc
push
jae
fisubs
fbld
aas
dec
roll
mov
je
push
add
sub
pop
cmp
inc
xor
sub
mov
stos
fdivr
add
pop
add
mov
mov
or
and
sarl
jb
xor
or
lods
ja
mov
daa
cmp
in
xor
ljmp
push
roll
dec
test
in
ret
je
jno
pushf
add
popa
pop
xor
iret
inc
fisttpll
addr16
xor
ja
xchg
sti
int
orl
sbb
jge
insb
fistpl
clc
sbbl
data16
mov
and
cltd
aad
add
push
movsl
shlb
sbb
pop
mov
xor
dec
cwtl
sub
gs
sub
cld
push
rclb
dec
and
sbb
pop
add
pop
mov
popa
sub
add
push
add
bound
mov
inc
stos
ds
dec
pusha
mov
lret
incb
stos
fisttpll
lock
je
pop
pusha
js
inc
mov
mov
xchg
aaa
xor
cwtl
jns,pt
pop
xor
xchg
fildll
out
pop
jae
mov
adc
cmpsl
loope
xor
fdivrl
push
push
push
mov
mov
jnp
mov
das
jne
loopne
xor
in
sub
pop
xor
lea
push
jg
pop
dec
fs
add
lock
dec
rclb
into
sbb
add
fcompl
sbb
xor
jbe
pcmpgtd
insl
icebp
sarb
stc
mov
jge
and
aam
pop
clc
mov
cmp
xlat
push
adc
fsubs
jne
push
test
loopne
ds
dec
push
leave
aam
add
jne
out
add
sbb
insb
cwtl
cmovo
cmp
add
lea
pusha
mov
cwtl
jb
fmul
roll
mov
cwtl
mov
push
int
aas
out
pxor
pop
and
dec
pop
rclb
call
push
or
and
addr16
cmp
or
dec
std
nop
enter
rorl
fwait
pop
cmp
mov
inc
xor
cmpb
fsubr
push
inc
movsb
dec
fcoms
sti
pop
inc
in
jle
ret
push
mov
xor
xor
popf
ret
nop
pop
jle
int3
or
and
xor
cmpsl
adc
mov
sbb
mov
push
adc
int3
mov
mov
ret
add
mov
sbb
sbb
add
xchg
pushf
fcoml
rolb
pusha
jb
pop
and
faddp
je
push
add
push
enter
cmp
arpl
cwtl
mov
xor
std
push
outsb
mov
lds
xchg
cwtl
addb
sbb
nop
jae
mov
cwtl
je
xchg
or
and
loopne
test
mov
cwtl
adc
jo
push
pop
or
loopne
hlt
ljmp
and
and
insb
sbb
jnp
jle
push
into
sub
adc
jae
mov
sbb
movsb
adc
pusha
jl
add
pop
mov
subb
insl
and
fcmovne
popf
xor
jo
dec
das
jl
ret
aaa
mov
rolb
push
adc
adc
data16
lock
shlb
loopne
mov
subl
add
xchg
add
mov
repz
in
and
lods
or
into
stc
lock
jmp
movsb
int3
jl
add
mov
in
add
sahf
inc
mov
cwtl
mov
jno
add
movsl
pop
push
shlb
push
adc
or
rcrl
cwtl
add
ret
inc
rcl
pop
mov
mov
sbb
mov
add
fs
sub
jecxz
add
shrl
jne
inc
push
cmp
jns
shll
sbb
mov
rcrl
inc
ja
cmp
and
test
arpl
jle
dec
out
add
jb
lock
cltd
add
retw
sub
addb
mov
icebp
es
dec
fnstsw
rorl
insb
jns
cmp
fs
or
and
addr16
lret
jge
mov
xor
popf
mov
adc
xor
add
xor
enter
mov
or
addb
inc
xchg
cmp
enter
rolb
nop
and
pushf
dec
pop
nop
clc
jge
add
add
adc
and
push
shlb
add
add
and
les
test
push
cmp
or
dec
mov
divl
add
jae
cmpsb
mov
or
pop
sarb
mov
cmp
jmp
jge
inc
xlat
jecxz
pop
jno
jb
mov
push
dec
add
push
test
lock
mov
aam
xchg
cmp
cmp
jo
sub
pusha
sbb
add
or
pop
add
out
ficoml
les
pusha
ffree
xor
pop
arpl
or
inc
add
imul
sbb
mov
sbb
lods
mov
mov
data16
xlat
mov
and
dec
dec
les
adc
into
mov
pop
iret
xchg
add
mov
inc
dec
push
cmp
cltd
push
dec
push
addb
inc
shlb
jmp
std
xchg
jl
add
test
lgs
add
fs
subb
pushf
movsl
jae
sub
and
add
pop
aam
xor
mov
jo
and
jbe
add
imul
push
cli
fs
imul
out
xor
mov
add
mov
and
pop
hlt
sub
popa
fldcw
cmp
xor
lahf
hlt
pop
dec
nop
sub
dec
push
xchg
mov
rolb
es
in
inc
adc
cmc
cltd
pusha
mov
pop
icebp
out
inc
dec
int
and
push
push
mov
adc
repz
push
inc
mov
adc
mov
sub
mov
loopne
je
xchg
add
js
clc
dec
or
movsb
enter
mov
pusha
stc
mov
add
enter
std
imul
shrb
pushf
scas
mov
movsb
xor
in
cmp
test
add
add
or
mov
in
repnz
sar
and
cwtl
sbb
adc
add
jnp
or
add
add
mov
push
cmp
aam
jne
mov
sbb
mov
sub
adc
or
leave
add
mov
outsb
and
mov
xlat
mov
and
cwtl
mov
mov
adc
iret
stos
cltd
rcr
sbb
push
sbb
aaa
jge
add
dec
add
subb
les
es
cmp
mov
mov
add
daa
push
jnp
and
xor
or
in
add
lock
push
inc
lea
nop
popf
sub
mov
lret
mov
and
shll
and
sbb
adc
push
inc
in
add
sahf
and
inc
xor
xor
cmp
sbb
add
add
or
pop
lds
jl
inc
jg
jecxz
nop
jno
fs
add
sbb
repnz
mov
xchg
fs
mov
fsubrl
mov
xchg
jmp
jl
mov
adc
cmp
cwtl
xor
pop
push
adc
add
add
dec
filds
mov
rcll
in
popa
push
and
int
cmpsb
push
push
mov
mov
lret
add
mov
rcll
ds
or
lds
aaa
mov
dec
add
imul
imul
add
xchg
fcom
cwtl
adc
add
scas
cmpsl
and
sbb
dec
fscale
jb
add
jmp
out
imul
insb
pushf
inc
sub
ret
stos
push
or
inc
inc
pusha
ja
inc
cs
ss
pusha
dec
stos
or
pop
xchg
or
mulb
loopne
nop
pusha
jg
dec
and
dec
movsb
cwtl
jmp
pop
mov
mov
mov
add
repz
pop
xor
cmpb
aas
repz
loop
adc
aam
add
popa
es
xchg
inc
mov
jae
and
add
shr
sbb
mov
adc
aaa
dec
add
icebp
jnp
dec
dec
pop
nop
faddl
in
xor
int
insl
ss
or
stos
aam
mov
insb
adc
out
mov
paddsw
pushf
jp
push
test
add
outsb
fld1
aam
dec
mov
mov
mov
pusha
int3
and
shlb
call
push
pop
jle
pusha
mov
adc
xchg
and
lds
dec
add
or
aaa
add
cmp
add
shl
cwtl
gs
sbb
popf
sbb
outsl
push
test
cmp
or
sub
mov
cmc
dec
arpl
pop
jb
rolb
rcrb
mov
inc
xlat
add
rclb
and
sbb
les
push
fisubrs
nop
test
mov
sbb
push
out
push
sbb
add
outsl
dec
cltd
das
jns
add
sub
pushw
xor
mov
and
mov
out
aas
xor
add
and
int
add
push
add
test
call
jb
repnz
mov
and
push
push
and
add
and
xchg
pusha
sbb
xchg
jo
hlt
loop
loop
xor
sbb
test
sbb
and
sbbl
enter
add
mov
xorl
mov
push
mov
mov
mov
xor
jl
mov
jnp
push
out
insb
ret
and
mov
xor
in
pop
push
movsb
push
sub
aas
inc
push
pushf
mov
add
imul
push
fdiv
mov
cmc
inc
mov
push
loope
fsubrs
mov
jns
jl
clc
or
enter
pop
and
sub
mov
and
mov
out
inc
pop
lock
in
mov
or
aam
pop
add
mov
jb
and
je
push
addr16
add
clc
xchg
lock
fs
or
ljmp
fwait
nop
pop
add
imul
jno
pop
or
add
adc
aas
imulb
aad
daa
sar
inc
ds
sbb
dec
cmp
sbb
test
pop
les
mov
mov
cmpsb
cs
in
xor
push
aam
cltd
mov
imul
fimuls
cmp
andb
sub
xchg
inc
pslld
dec
adc
aam
call
lahf
in
push
nop
inc
rcrb
push
inc
push
mov
adc
enter
cwtl
pop
sahf
not
shlb
push
jb
sub
sub
push
inc
jl
in
dec
mov
mov
adc
inc
add
in
mov
xchg
add
int
xchg
pop
mov
loopne
cli
xor
add
or
outsb
clc
aam
pop
jae
pushf
xchg
inc
xorb
push
outsb
icebp
imul
icebp
adc
cwtl
pushf
mov
sub
aaa
mov
sbb
dec
mov
int
pop
scas
jb
xchg
out
or
cmp
loop
add
dec
add
jmp
pop
cmpsl
mov
pop
cmp
mov
sub
data16
out
popf
add
jne
xchg
mov
pop
lds
fstl
push
test
add
mov
imul
add
les
jl
ljmp
pop
jmp
mov
jge
in
mov
adc
mov
mov
inc
or
inc
push
shl
jns
sbb
incl
rcrl
mov
lods
jo
sbb
and
jno
shll
rorl
cmpsl
mov
or
cmp
or
adc
mov
ror
test
jmp
out
xchg
adc
cs
push
sub
sbb
sub
arpl
add
aad
cmp
inc
movsb
add
pusha
nop
pop
xor
add
fidivl
lock
fistl
xor
sub
js
lock
orl
ss
cmp
and
cmpsb
mov
sbb
mulb
repnz
sub
pop
add
or
out
pop
and
inc
mov
mov
push
push
and
shrb
pop
and
cltd
jmp
xchg
dec
addb
aaa
shl
ret
add
fists
mov
push
jmp
test
jb
in
fmull
nop
pusha
add
mov
pop
pop
push
mov
rcr
pop
rolb
push
test
insb
mov
xor
lea
mov
ljmp
xchg
push
aad
push
and
add
sahf
add
dec
inc
mov
cmp
roll
arpl
mov
stos
mov
les
hlt
mov
pusha
test
inc
dec
add
in
rcll
jle
add
dec
mov
aam
jb
cmp
jno
jb
fadd
pusha
ja
data16
fchs
cmpb
sub
cmpsl
jae
divl
mov
push
dec
add
xchg
test
pop
pop
leave
mov
cmp
adc
je
push
das
imul
xchg
jl
int3
test
enter
mull
fwait
aam
add
sub
push
outsl
mov
fst
adc
std
mov
nop
adc
ss
jp
ret
add
movsbl
xor
mov
fmull
mov
jmp
mov
jo
or
test
push
adc
mov
nop
or
mov
pusha
xor
mov
or
cmpsb
nop
add
data16
jo
hlt
inc
pop
dec
or
sbb
push
adc
xchg
fwait
imul
sbb
cwtl
and
mov
or
dec
fsub
mov
cmp
pop
ds
push
ja
loop
push
xor
push
pop
bound
push
aas
mov
leave
mov
loopne
xchg
lahf
add
sub
push
cmp
cltd
test
out
out
daa
and
adc
cmovle
dec
inc
mov
mov
push
jmp
pusha
fs
popf
hlt
data16
pop
imul
cwtl
clc
add
dec
lcall
icebp
cmp
mov
inc
out
mov
pop
add
into
fldt
shll
add
fsts
or
pop
sbb
fdivl
adc
push
adc
adcl
jbe
sub
cmpl
jae
enter
add
das
sub
scas
add
mov
cltd
lret
nop
adc
pop
sbb
out
packsswb
mov
cmp
loop
add
icebp
out
jle
enter
rcrb
inc
lahf
loope
push
sbb
cmp
dec
out
rcrb
dec
add
mov
adc
icebp
lahf
pop
cltd
cmp
lret
out
or
pushf
add
shlb
test
les
in
jo
mov
pop
cmpsl
mov
xchg
push
addr16
add
mov
mov
xlat
repnz
inc
rol
fs
jb
je
add
nop
int3
or
xor
mov
rclb
into
rolb
clc
shlb
xchg
cmp
sbbb
sahf
clc
xchg
sarl
shlb
add
aam
push
or
mov
sar
cmp
mov
jle
cld
dec
das
sbb
jl
lea
jge
lock
add
lcall
cs
orl
inc
mov
call
loop
repnz
xor
dec
ror
ds
sub
cwtl
fcomps
test
adc
push
xor
xorb
aam
jb
mov
push
dec
adc
pop
adc
aam
push
add
adc
pop
subl
jbe
fsubl
in
and
or
adc
stc
cltd
sub
das
sbb
xchg
test
jnp
lock
mov
cmp
test
pop
ds
or
jmp
mov
push
popa
stc
inc
movsb
out
xor
xchg
arpl
aad
sbb
adc
rolb
cmp
mov
and
pushf
test
inc
push
cli
cmp
daa
test
idivl
dec
cmp
jne
lods
adc
add
data16
add
or
push
xchg
dec
and
cmp
aam
or
or
das
in
jl
rclb
pusha
add
dec
neg
push
mov
add
mov
sub
repz
push
pop
aas
popf
push
lahf
mov
loope
lret
shlb
adc
mov
pushf
xchg
jae
leave
adc
push
dec
and
pusha
dec
add
adc
out
and
bound
adc
push
test
mov
cmp
flds
icebp
or
dec
cwtl
cmpsl
xorb
repz
cmp
and
outsb
inc
sbb
fs
cmp
lret
hlt
enter
shll
imul
leave
jb
in
sub
jb
jns
pop
sub
sbb
sub
stos
and
je
mov
cwtl
xchg
in
inc
imul
sbb
clc
enter
add
insb
imul
lahf
adc
outsl
jl
rcl
mov
jp
daa
nop
pop
dec
add
rorl
mov
sbb
pop
in
dec
and
push
leave
dec
dec
jb
inc
mov
popf
fwait
pushf
pushf
loop
pop
xor
pusha
sbbb
jp
jno
sbb
cmpsb
mov
sub
mov
push
test
shlb
inc
jge
inc
adc
sub
je
out
dec
dec
rcr
arpl
pop
loopne
dec
cmp
sbb
in
lock
and
cltd
push
inc
imul
push
push
into
jb
and
mov
push
inc
pop
add
pop
roll
mov
fisubrs
orl
lret
mov
inc
pop
dec
mov
pop
mov
dec
loop
repnz
xor
loopne
adcb
adc
lods
mov
adc
mov
in
cs
ret
pop
out
adc
mov
es
mov
outsb
adc
test
ret
fildl
sub
pop
add
push
ror
cwtl
gs
imul
pop
leave
and
jmp
mov
ja
repz
fiaddl
sub
es
lcall
nop
sub
test
or
add
pop
mov
xlat
out
jmp
divb
pop
sarl
sub
jns
int
loop
std
mov
inc
scas
out
jp
push
add
loopne
das
xor
std
push
xor
nop
pop
inc
lret
inc
push
add
insb
call
test
push
lods
cmpb
jl
enter
fistps
mov
and
add
mov
mov
pop
cli
or
scas
test
cmp
add
dec
cmp
xchg
loopne
jg
lahf
insb
pop
mov
add
arpl
fisttpll
aaa
add
dec
outsb
repz
add
mov
jnp
aad
pusha
mov
push
push
cwtl
ljmp
jbe
movntps
xor
mov
xor
xchg
cmp
aam
add
out
push
lahf
add
xor
push
out
pop
rcrb
loopne
icebp
cmp
aaa
jo
add
mov
xchg
jmp
mov
stos
lock
notb
adc
add
adc
push
cs
je
cld
adc
fcomi
jge
dec
jne
mov
and
incl
insb
test
cli
insl
int
add
inc
xor
jno
sub
add
or
enter
sub
push
or
add
adc
push
jo
add
inc
mov
in
pushf
add
fs
loope
iret
xor
add
jle
stos
leave
rol
icebp
test
mov
push
xor
pop
in
mov
mov
pop
jecxz
je
xchg
add
sub
stc
inc
xchg
inc
pop
das
pusha
adc
es
cmpsl
popa
add
mov
inc
mov
shlb
adc
push
loop
repz
stos
fisubrs
add
mov
std
inc
inc
testb
push
shrb
scas
bound
inc
mov
pusha
roll
and
sar
loop
mov
ljmp
dec
add
mov
jle
add
or
les
inc
add
aas
xchg
and
jne
inc
in
push
add
dec
aam
out
mov
xchg
loopne
pop
test
add
test
push
shrl
lods
xchg
add
mov
sbb
mov
out
dec
sub
mov
or
fcom
add
scas
out
add
roll
mov
int
loopne
sbb
add
and
add
jl
cld
jmp
pop
push
jp
adc
or
xchg
lahf
in
ds
sti
cmp
push
mov
pusha
and
ja
bound
cmp
push
shll
out
add
mov
fcoml
shlb
aaa
inc
clc
shrb
enter
mov
ds
fcomp
add
mov
add
pop
lret
mov
int3
add
data16
cmpsl
loope
stos
negb
sub
out
outsb
daa
xchg
pop
ret
jcxz
inc
cli
out
push
outsl
dec
fistpl
cltd
push
xchg
jno
jle
add
inc
popa
aad
rcll
or
or
mov
mov
mov
mov
cmp
ficoml
sbb
adc
xchg
aas
inc
xor
and
stc
lcall
inc
and
sub
adc
xor
loopne
add
add
scas
js
lahf
rorl
add
gs
insb
loopne
cmp
clc
add
mov
add
mov
add
insl
pop
add
mov
cmp
and
ja
xchg
xchg
rolb
sbb
add
pop
cmp
hlt
ljmp
int3
fstps
xor
mov
and
filds
add
mov
sub
push
add
insb
imulb
add
xchg
xor
inc
out
mov
or
ljmp
xor
xchg
shrl
repnz
movb
xor
ja
inc
out
nop
pop
add
inc
xchg
mov
push
sub
mov
push
sub
test
or
lock
lds
jno
add
or
gs
mov
inc
subb
sbb
and
test
daa
lock
add
out
cmp
arpl
cmp
js
mov
add
pushf
rorl
jp
roll
pop
je
icebp
push
jg
pop
ror
and
add
std
lds
pusha
dec
in
rol
mulb
add
rol
jge
xor
les
adc
mov
xchg
or
sbb
nop
cld
sub
pop
cld
subb
ficoms
call
xchg
cmpsb
adc
mov
or
pop
sbb
shlb
les
aaa
xor
cld
out
das
add
rcll
mov
aad
in
sub
test
mov
add
dec
sbb
repnz
add
add
lds
push
les
dec
loope
inc
test
jne
add
out
xor
sarb
es
and
fidivs
add
sbb
mov
cmc
and
add
jge
jne
imul
leave
shl
cmc
adc
lret
div
or
and
pop
cmc
daa
dec
fldcw
and
pop
or
xorl
fs
add
mov
lret
xor
cltd
fcmovnu
jbe
inc
xor
push
popl
add
cmp
loopne
mov
inc
pop
inc
mov
movsb
enter
hlt
jecxz
add
repnz
and
outsl
inc
push
sub
or
push
stc
sbb
and
mov
and
jg
jmp
add
cmovno
sti
rorb
add
mov
xor
jo
cld
pop
sti
pusha
mov
inc
push
push
pop
mov
in
addr16
add
and
mov
add
jnp
call
inc
cmp
mov
test
add
push
arpl
inc
movsb
xchg
js
add
in
mov
xchg
mull
and
add
cwtl
movsb
add
inc
push
add
cmp
mov
add
jmp
pop
mov
shrb
mov
jb
add
leave
jp
rcrb
sbb
adc
jnp
xor
outsb
sub
cmp
jg
xor
clc
inc
lret
and
pusha
icebp
orb
fdivrs
xor
jno
jo
andb
int3
and
daa
cld
xchg
pusha
nop
pusha
mov
pop
mov
lret
adc
inc
loopne
add
xor
jge
sarb
movsl
add
in
out
cmove
pusha
inc
roll
or
rclb
push
sbb
scas
cmp
das
jbe
lret
push
test
rcrb
add
pop
in
cld
xchg
mov
sub
mov
es
jg
shll
inc
jmp
mov
add
loopne
inc
stc
xor
xchg
jmp
int3
jecxz
ret
sub
cmc
ja
dec
in
rol
mov
xor
adc
and
into
cmp
and
test
movsl
icebp
add
aam
and
rorl
jno
pop
adc
add
cmp
les
js
inc
jge
pop
mov
stos
shrb
xor
mov
adc
pop
je
stos
jp
mov
das
push
fadds
adc
push
ret
sbb
pop
sub
subb
add
in
bound
push
xchg
call
out
in
push
pop
add
mov
gs
insb
out
and
call
fstpl
adc
cmc
jno
and
jg
push
insb
aam
shr
aaa
out
cmp
cmp
dec
dec
inc
cwtl
stc
add
cmp
ljmp
xchg
dec
test
xor
orb
cs
add
push
shrb
fsubl
in
dec
jb
add
icebp
hlt
xchg
add
add
scas
jp
push
aam
adcl
mov
mov
push
add
ds
dec
je
add
shr
shrb
sbb
jnp
push
mov
jge
aaa
pop
dec
inc
jl
xchg
lcall
add
sub
xlat
add
jl
jns
sti
adc
mov
pop
cmp
sbb
mov
dec
xor
and
pop
cmp
leave
pop
mov
add
adc
inc
mov
add
cmp
ficoms
out
sub
fnsave
inc
lahf
xor
mov
inc
xor
ret
ljmp
dec
daa
in
inc
pusha
sbb
rcrl
imul
jecxz
adc
add
or
add
das
outsb
out
jne
cmp
xchg
je
and
cs
inc
adc
add
push
mov
testb
imul
adc
mov
pop
pop
add
sbb
lods
mov
jle
das
sbb
std
jp
add
pusha
sub
movsl
loop
or
pop
and
sar
xchg
addb
xchg
lods
mov
lock
push
aad
jo
and
mov
pop
sub
mov
jl
and
jnp
add
or
outsb
or
shlb
xchg
push
add
test
cmp
mov
cmp
push
test
adc
loope
clc
mov
enter
dec
push
movsl
or
push
mov
adc
add
pop
cmp
leave
jl
fptan
sahf
add
movsb
jg
add
xchg
arpl
push
pop
push
cwtl
xchg
push
cmp
jo
xchg
jmp
js
or
add
push
and
ja
add
repz
sub
fcmovbe
jae
adc
js
add
push
loopne
insb
add
xchg
icebp
movsl
push
insl
out
push
cwtl
jg
add
and
cs
fwait
arpl
nop
pop
lahf
or
popf
or
hlt
cwtl
pop
je
ss
das
push
mov
pop
movsb
push
and
mov
fistpll
add
push
ja
cmp
jecxz
adc
fildll
shlb
movsl
add
pop
pop
adc
cmpsl
cmp
xchg
xor
adc
subb
push
mov
inc
sub
mov
test
or
dec
and
push
pop
subl
cmp
add
in
jmp
push
scas
xchg
das
or
hlt
mov
and
jg
add
out
bound
scas
fdivs
addr16
or
cs
cmp
test
aas
mov
repz
lds
into
fcmovu
pop
cmpb
mov
aad
mov
cmp
pop
cwtl
ror
gs
jmp
repnz
fcoml
out
pop
das
scas
cld
outsl
add
cltd
inc
push
jmp
movsl
repz
lock
lods
inc
and
xor
aam
xchg
add
mov
cmc
inc
cmpsb
into
lcall
cmp
pushf
or
fs
jbe
stc
push
jns
sbb
add
insb
dec
adcb
pushf
mov
sarb
je
xor
or
imul
dec
push
push
fwait
cld
add
stos
cmp
adc
pop
mov
test
sub
mov
movsb
add
mov
xor
adc
add
adc
and
mov
add
or
xchg
les
xor
orb
in
adc
sub
int3
enter
in
repnz
test
mov
sub
push
sbb
mov
xor
or
iret
inc
adc
mov
nop
xor
adc
mov
jns
leave
push
in
or
adc
outsb
or
cmpsl
and
shrb
or
jne
bound
sub
mov
imul
rcll
stc
cmc
in
jp
xor
int
jae
pop
insb
in
push
test
add
cld
sbb
aad
inc
cmpsb
adc
bound
cwtl
dec
int
sbb
in
and
push
fistl
mov
push
enter
shlb
test
rclb
add
lock
lods
inc
cli
dec
add
cmpb
pop
cmpsb
sub
fsub
mov
stc
call
ljmp
test
cmp
std
mov
xorl
dec
or
int3
pop
dec
lds
mov
push
adc
incl
xchg
call
xchg
xor
lock
push
insl
xorb
aas
int3
xchg
push
cmp
mov
ret
mov
pop
imul
mov
adc
and
add
lds
pop
cltd
cwtl
lcall
pop
or
sbbb
pop
clc
add
ja
int
rcrb
imul
pop
add
test
mov
add
jae
dec
fdecstp
stos
ffreep
test
adc
add
add
dec
or
add
xor
pop
imul
mov
movsb
dec
add
leave
jl
xchg
cwtl
loopne
jmp
dec
cmp
cmp
jge
lret
xor
incl
push
rcl
cld
and
cmp
js
sbb
dec
or
jns
add
jns
jg
mov
mov
add
jo
popf
inc
inc
add
xor
mov
mov
xchg
jmp
sub
imul
xor
je
mov
push
sbb
dec
push
popf
in
add
test
mov
pop
dec
insb
mov
add
xor
jns
movsb
cvttps2pi
add
xchg
dec
push
pushf
and
aas
inc
nop
xlat
xor
or
cwtl
pop
mov
lods
pop
add
mov
cmpsb
icebp
aad
cltd
add
xchg
xchg
add
mov
mov
push
es
pop
aaa
je
aad
shll
movsb
pop
pusha
adc
jnp
fdivrs
or
or
mov
cli
push
test
dec
int
imul
fs
xor
adc
test
add
out
lret
jl
jecxz
mov
xor
dec
sti
jae
hlt
iret
sahf
xchg
les
shll
imul
cmp
jne
xor
faddl
sbbb
out
sub
xchg
addr16
dec
mov
add
aam
in
xchg
jmp
lock
mov
add
sbb
inc
cmp
and
mov
inc
das
add
lds
mov
dec
movsb
push
add
mov
jmp
int
outsl
rolb
fistpll
movsl
pop
ror
push
sub
mov
inc
xor
jae
xchg
adc
jmp
jmp
mov
sub
and
add
aad
test
in
insb
add
test
scas
push
sti
std
lahf
mov
xor
and
adc
xchg
mov
xor
and
sub
or
out
nop
add
flds
rep
jle
xchg
mov
adc
sbb
mov
mov
add
andb
call
repz
scas
fildl
push
in
ret
sbb
shlb
iret
xor
sub
fxch
es
sub
das
fbstp
sbb
xchg
pop
add
cmp
push
push
gs
fcomi
cwtl
std
add
add
xor
jae
or
pop
dec
aas
cld
or
cltd
enter
or
frstor
mov
sbb
inc
add
add
je
push
shld
xchg
inc
decl
xchg
add
add
aad
sti
pop
movsl
lods
je
inc
in
cmc
test
push
and
jbe
fadds
pop
add
int3
lods
jge
rcrb
jno
pop
dec
icebp
faddl
outsl
aam
or
lock
add
in
pushf
inc
mov
adc
int3
pop
les
dec
lods
lret
jns
movsl
pop
jbe
sarb
insl
mov
out
push
pop
int3
add
mov
outsl
mov
jb
scas
scas
andb
sbbb
hlt
stos
pop
gs
sbb
or
shrl
and
jbe
adc
inc
fsubs
xor
dec
ja
dec
orb
mov
inc
lret
dec
pop
sti
mov
mov
inc
leave
cmp
push
mov
test
cmp
sbb
pop
or
push
repnz
pop
push
and
cmp
sub
loope
lret
pop
jmp
leave
pop
add
or
add
lea
lret
or
pop
dec
and
add
sahf
insl
into
stc
orb
pop
gs
enter
jns
cwtl
addb
mov
lea
lods
mov
addb
lret
lods
mulb
inc
add
in
movsb
xchg
add
fwait
icebp
das
mul
in
add
cmc
mov
push
movsb
aam
mov
aam
cmp
mov
add
ds
out
in
lods
pushf
add
sub
pop
add
xor
mov
or
xchg
hlt
xor
test
test
bound
adc
leave
sub
stos
imul
add
int
xchg
mov
icebp
xor
inc
jecxz
mov
push
das
dec
add
fdivrl
mov
pusha
fs
jg
gs
inc
jl
in
add
or
push
cmp
xor
outsl
into
mov
mov
fiaddl
outsb
cmpsb
push
iret
insl
lretw
int
sub
movsl
pop
ja
sarb
popa
push
aad
cmp
int
jp
into
push
insl
and
cwtl
ret
and
pop
lret
das
add
je
lock
mov
movsl
arpl
mov
das
fcmovne
pop
xor
push
subb
pushf
add
mov
cwtl
sarb
sub
test
add
or
icebp
adc
arpl
or
adc
xor
add
xchg
bound
popf
push
and
lret
dec
adc
sub
and
and
sub
sub
add
inc
popa
cmp
in
sbb
mov
add
jle
add
fwait
inc
iretw
xor
daa
sub
mov
cmpsl
sub
call
xor
cmp
pop
xchg
ficoms
ror
daa
inc
and
add
jg
fistps
mov
mov
xchg
add
xchg
sbb
out
pushf
fwait
mov
sbb
fistl
pusha
lds
popf
xchg
add
xor
lcall
dec
mov
call
mov
stos
repz
nop
fisttpll
add
outsb
ret
mov
xor
xchg
mov
add
mov
mov
add
lds
jb
xor
loop
xor
add
es
stos
jbe
mov
add
stc
add
addr16
filds
push
addl
in
pop
arpl
fdiv
enter
pop
ds
repz
pop
push
into
push
cmp
push
add
ja
sub
xchg
pusha
mov
add
or
shll
iret
jne
aaa
sub
jae
mov
push
cmp
jg
pop
clc
popf
addr16
add
jmp
mull
add
adc
xor
cmp
add
inc
add
cli
push
stc
add
divb
jl
aam
in
das
add
repz
outsb
rorl
add
incl
or
jp
fldenv
add
je
imul
mov
shll
jl
aaa
add
jl
jns
jno
add
cmpsl
in
sub
add
xor
stc
sarl
loope
cld
mov
xchg
repz
add
aad
aam
add
xlat
testl
popa
push
int3
aaa
add
push
aam
mov
fcomi
pop
les
jne
add
fcompl
nop
mov
sub
add
jae
adc
add
push
stos
xlat
and
dec
and
stos
add
xchg
xor
sbb
cs
aad
fidivs
sub
add
mov
add
mov
pop
add
enter
inc
mov
jb
xchg
mov
int
movsl
sub
pop
inc
dec
add
ljmp
sbb
xor
dec
mov
mov
aas
lods
bound
es
add
scas
int
mov
sbb
add
mov
add
pop
mov
xlat
pop
shlb
xchg
dec
push
or
sub
xchg
in
lods
rclb
xchg
jl
loope
aas
pop
orb
add
adc
cmc
lds
int
mov
and
pop
push
test
fists
lods
dec
adcb
sub
mov
inc
js
xchg
cmp
add
es
insl
pushf
sbbb
lods
sub
push
cmp
imul
cmc
fldt
adc
push
push
or
ljmp
outsb
iret
repnz
push
or
cmp
fcompl
add
lds
add
push
xor
shrb
adc
xchg
add
loope
mov
out
idivb
add
dec
fwait
or
jl
push
sbb
add
imul
pop
xchg
fidivl
cmp
jmp
and
mov
popa
mov
xor
add
adc
cmp
addl
js
and
sbb
stos
inc
test
add
pop
scas
xor
popf
mov
and
mov
mov
add
mov
out
push
add
pop
mov
aas
add
clc
std
adc
lock
loop
out
pop
dec
jo
xor
rorl
xchg
int3
repz
shl
dec
bound
mov
fmuls
test
xchg
cwtl
inc
loopne
stos
push
jmp
lock
mov
aam
test
push
add
cwtl
stos
filds
aas
lds
stc
cmp
jle
xchg
adc
jb
cld
xchg
xchg
jns,pt
or
aaa
scas
and
inc
pop
enter
stc
aam
rorb
push
jae
add
js,pt
add
sbb
jns
mov
popa
xor
lods
mov
push
jno
mov
aaa
jle
mov
and
mov
jecxz
rolb
add
sub
jno
test
push
lahf
inc
rcrl
push
or
stc
ljmp
add
cmpsb
add
mov
xor
stc
nop
mov
jbe
rclb
mov
movsl
inc
add
lahf
ds
push
fistpl
mov
and
jnp
into
fmuls
sbb
xchg
out
add
out
sbb
mov
addr16
pop
cmpsb
push
fcoml
jo
adc
push
mov
and
and
ja
add
cwtl
lret
cmpsb
in
sub
pushf
jmp
inc
adc
test
push
sahf
setae
push
sbb
aaa
sbbl
sti
jge
inc
add
or
add
mov
sar
mov
popw
cmc
lret
adc
cmp
pusha
arpl
jbe
sub
fsubr
int3
add
jle
xchg
sti
mov
add
outsb
rorl
fadds
add
movsl
mov
idiv
test
adc
pop
xchg
pop
mov
adc
lret
lock
add
orl
ja
add
movsb
mov
arpl
pusha
sarb
sbb
adc
cmp
mov
push
add
xor
fiaddl
testb
cs
jno
loopne
out
pop
sub
fdivs
and
dec
movsb
popf
push
fs
mov
mov
add
dec
sub
cmp
clc
in
inc
dec
add
js
popf
shlb
sbb
cmpsb
xchg
jnp
xor
add
xchg
push
dec
dec
add
je
jge
cmp
cld
pop
in
mov
sbb
pop
or
stos
out
cltd
adc
add
mov
rcll
scas
sahf
inc
add
xor
popa
int3
test
flds
mov
rcll
cmp
inc
inc
or
jle
lret
or
mov
mov
aas
add
xchg
sub
mov
lock
pop
repz
hlt
inc
in
inc
outsb
mull
sahf
and
add
sbb
xlat
xchg
sub
call
add
orb
hlt
bound
add
add
and
ljmp
push
outsb
aad
pop
fstpt
mov
rcl
in
fiaddl
jae
xchg
jg
loopne
loopne
test
push
mov
mov
test
outsb
mov
flds
sahf
fsubp
mov
add
xor
push
sbb
add
dec
data16
adc
shrb
inc
scas
add
xchg
push
fs
clc
cmp
sub
ljmp
add
movsl
sub
lret
jae
pop
mov
jge
add
jne
andl
pop
add
and
adc
dec
push
add
inc
arpl
fsubr
xchg
mov
xchg
mov
rcl
mov
add
lock
pop
mov
mov
pop
shll
inc
xlat
mov
jecxz
sbb
mov
and
lcall
out
nop
cmc
fmuls
popf
rorb
inc
pop
add
add
dec
push
ds
sbb
ret
ret
sub
das
sbb
pop
pop
and
lret
scas
out
js
push
lea
xchg
or
addb
jo
dec
jae
pop
imul
cmp
mov
push
pop
outsb
pop
adc
int
pop
fnstcw
mov
rcrb
fptan
mov
stos
sub
dec
bound
add
mov
push
lods
push
xchg
mulb
rcrb
leave
ret
pop
add
sbb
movsl
push
jg
js
jns
adc
and
mov
add
dec
cmp
xor
stos
xchg
fisttpl
add
rcrb
scas
add
and
mov
push
cld
add
mov
in
cmp
sub
fmuls
pop
outsb
add
movsb
push
or
sahf
addr16
cmp
rolb
push
add
add
pop
and
mov
leave
fnstenv
pop
jo
mov
dec
jo
jecxz
add
adc
pop
mulb
sarl
add
and
pushf
loopne
adc
scas
punpcklbw
inc
pusha
out
popa
push
add
dec
jecxz
pminsw
jbe
add
nop
movl
add
pop
je
movsb
popa
sbb
xlat
or
enter
out
insl
or
xchg
mov
cmc
pop
add
jb
sub
movsb
jl
jmp
jg
cli
add
add
int
pop
xchg
inc
add
jp
cmp
adc
rcrl
inc
adc
or
out
aaa
cmp
add
mov
fbld
movb
xchg
loope
lods
dec
and
add
js
cmpb
jo
popf
mov
lods
or
in
pop
add
repz
fidivs
xor
pusha
xor
push
inc
cmc
and
add
movsb
subb
int
xchg
rclb
add
dec
jbe
and
or
es
out
add
jecxz
dec
xor
dec
loop
in
cmp
lods
call
aas
aaa
sbb
add
mov
sbb
imul
mov
cmp
and
adc
cmp
xchg
cmp
lods
adc
pushf
out
bound
popa
or
and
inc
orb
leave
lret
mov
sub
ret
imul
add
adc
popf
lcall
push
iret
adc
cmp
repnz
cmp
lods
push
enter
pusha
xor
jl
lret
adcb
fcompl
test
dec
xor
dec
adc
addb
and
add
in
loop
outsl
fsts
add
jno
xchg
xchg
pop
mov
mov
aas
add
push
jns
out
stos
or
add
testl
aad
jne
or
adc
or
push
cli
adc
hlt
int3
into
dec
mov
push
loop
cmp
fdivs
js
lods
orb
repz
inc
add
jmp
dec
mov
call
xchg
add
imul
lret
add
roll
mov
sbb
ss
cli
stos
cld
in
pop
jl
cmp
jo
icebp
clc
add
xchg
mov
arpl
pop
push
out
push
jo
lock
andl
mov
add
sub
sbb
jp,pt
add
mov
call
xchg
aad
sub
filds
add
add
dec
cltd
lret
jb
add
push
sar
test
rcl
imul
in
mov
andl
xlat
lock
je
or
jg
add
inc
fwait
cmp
cmpb
or
imul
add
mov
je
push
scas
push
popa
inc
push
scas
inc
sarl
test
mov
sti
mov
jle
and
cmp
adc
or
int3
mov
and
and
add
push
lea
ffreep
aam
mov
add
andb
aas
fwait
cs
out
jle
add
mov
ret
mov
xchg
rclb
repnz
stc
xor
add
lock
or
or
mov
add
mov
and
out
insb
outsl
mov
pusha
ds
jo
arpl
fidivl
aaa
imul
daa
insb
add
inc
je
in
or
mov
add
jb
push
adc
mov
lret
outsl
and
dec
jae
das
or
jl
mov
xor
jnp
aaa
and
nop
mov
stos
adc
or
ss
jo
out
scas
pop
jmp
adc
rorb
add
rcll
nop
mov
adcb
push
roll
ss
jp
adc
loopne
jae
push
mov
push
add
es
dec
adcl
add
lret
push
mov
aaa
pop
inc
sub
or
cmp
sub
pushf
fwait
inc
dec
xchg
jo
fldl
cmp
insb
jnp
out
aas
icebp
pop
add
js
and
nop
sbb
sbbl
mov
xor
jg
adc
bound
and
incl
dec
rclb
out
mov
ja
call
adc
cmp
idiv
mov
pop
pusha
sbb
add
push
sarl
movsb
add
adc
outsb
les
add
mov
push
imul
add
ret
pushf
test
add
or
enter
xor
xor
inc
lods
fnstsw
mov
push
lock
add
xor
sti
lcall
adc
stos
xor
dec
outsb
rolb
loope
inc
jmp
pusha
addb
fisubl
aas
jmp
sub
cmp
mov
repz
popf
add
scas
shrl
dec
add
mov
or
shll
cmp
pop
lret
push
adc
scas
mov
or
add
adc
inc
ret
and
imul
mov
js
addr16
or
cmp
inc
mov
mov
sbb
mov
ja
lock
movsl
es
push
pop
cmpsl
je
das
sbb
push
adc
add
out
pop
add
or
jmp
mov
cli
in
and
mov
jp
add
sbb
pop
add
movsb
scas
cmp
repnz
shlb
push
pusha
rclb
sbb
and
add
pushf
push
cmp
sub
mov
push
xor
add
out
and
sbb
jae
adc
arpl
push
sbb
add
cld
inc
cwtl
add
and
add
sub
push
aas
pop
popf
xor
add
jle
cli
add
xchg
icebp
in
push
lret
jb
cmp
xor
xchg
in
pop
jmp
add
mov
inc
add
in
stc
inc
add
daa
push
cmp
inc
pusha
xchg
cmpsb
les
in
lcall
mov
out
stos
mov
mov
or
mov
mov
pop
sti
cmpb
push
into
push
lods
adc
lods
or
fdivs
dec
jp
adc
or
sbb
aaa
jbe
fcoms
jae
aas
cmp
inc
dec
mov
scas
or
sbb
or
adc
in
xchg
xchg
add
stc
mov
adc
mov
cwtl
pushf
mov
jbe
mov
sub
dec
xor
imul
push
cltd
mov
rcll
enter
or
cmp
add
out
mov
fstl
insl
je
ret
loopne
pop
jne
inc
hlt
xlat
aam
adc
jg
and
jbe
out
inc
in
add
jp
sahf
fstps
add
sbb
jl
pop
insl
or
test
or
sar
ss
add
sbb
adc
pop
andb
xchg
sbb
mov
add
loope
and
fnstcw
lods
or
xor
mov
push
cwtl
cmp
add
cmp
adc
insl
daa
fnop
jp
fwait
cmpsl
jge
add
mov
std
pusha
push
add
xor
xor
inc
fildll
lea
add
pop
ret
push
add
inc
clc
popa
sub
out
cld
ret
jle
cs
mov
fildll
vcvtpd2psy
pushf
push
test
lea
pop
push
and
jmp
mov
mov
pop
outsl
xor
jmp
mov
stos
lahf
test
out
cmpsl
pop
in
or
cwtl
add
loopne
rolb
popf
push
mov
test
addb
lret
fildl
sti
mov
lods
xor
sahf
dec
das
ret
add
cld
movsl
jecxz
pop
js
loopne
fnstenv
mov
push
test
fcoms
stos
data16
pop
lret
push
lcall
int
xchg
mov
fs
mov
mov
fs
cmp
test
dec
mov
push
jmp
adc
popf
ds
fnsave
pop
aam
mov
jo
rorl
test
push
test
dec
adc
inc
adc
xor
push
mov
cmpsb
add
xchg
pop
in
dec
push
loop
shr
std
lret
sbb
xchg
push
xchg
loopne
pop
leave
insl
in
add
xchg
add
dec
cmp
add
aaa
pop
push
pop
and
add
inc
rclb
and
addl
jns
aad
add
cmpsb
lods
push
das
dec
in
inc
mov
iret
pop
pushf
popa
popl
adc
mov
add
cmp
repnz
jns
or
pop
std
cmp
sub
push
mov
add
xor
loopne
mov
lea
aas
insl
popa
subl
in
pop
pushf
push
aam
xor
hlt
nopl
or
inc
xchg
pop
add
nop
pop
data16
push
dec
decb
ficompl
rcll
cwtl
stos
push
lea
pop
add
ret
arpl
xchg
xlat
aas
push
xchg
or
outsl
insl
and
add
mov
imul
mov
incb
push
inc
cmp
rcl
cwtl
xchg
ljmp
and
inc
cmc
pusha
add
notb
insl
dec
add
test
pop
enter
stos
iret
cli
clc
ljmp
jp
loope
xor
insb
jb
inc
cs
ja
addl
sub
outsl
sbb
push
add
cld
adc
aad
bound
test
mov
pop
add
sub
adc
dec
stc
inc
test
cli
je
repz
add
dec
pop
retw
shlb
mov
scas
cld
add
std
cmpsb
jg
xchg
loope
mov
add
or
pop
fimuls
pushf
loope
mov
lret
inc
push
call
add
xchg
adc
or
stos
repz
xchg
cs
add
jp
imul
mov
inc
dec
fbld
lods
andb
jne
add
sbb
into
inc
mov
add
inc
or
mov
outsb
sbb
loop
and
into
repnz
pop
sbb
sbb
dec
pinsrw
sbb
sbb
and
into
cwtl
pusha
xorb
data16
mov
cltd
test
mov
mov
pop
cli
add
and
movsl
pop
push
push
and
loopne
sti
add
pop
jecxz
cltd
incb
cmp
sahf
ljmp
shll
ja
std
imul
fsubs
sbb
adcl
or
std
mov
or
insb
add
mov
push
shufps
rolb
xchg
clc
adc
call
pop
cmpsl
add
push
jmp
les
loopne
lcall
mov
adc
aam
inc
cmc
fiadds
cmp
push
arpl
add
mov
mov
ja
cmp
jb
jne
insl
aas
pop
sbb
sti
cmp
mov
add
cmp
adc
or
xchg
loopne
loopne
mov
mov
or
dec
je
jecxz
icebp
filds
add
lcall
push
pop
test
mov
mov
loop
es
lret
fs
mov
rolb
xorl
mov
lret
rcr
pop
mov
pop
pop
jno
rcrl
fcomps
faddl
scas
out
mov
or
push
dec
bound
movsb
out
lds
mov
mov
pop
iret
int
add
or
int3
dec
mov
dec
pop
push
mov
push
push
adc
lahf
sbbb
jbe
dec
pop
sbb
mov
add
add
stc
inc
sub
and
cli
sbb
add
or
add
rorb
inc
movl
pop
int3
rolb
imull
jmp
int
add
mov
fiadds
add
insl
xor
and
cmp
subb
gs
add
outsb
push
cmp
add
repnz
add
push
and
xchg
fimuls
push
lock
xchg
scas
and
xor
sbb
xor
ret
xchg
adc
jle
add
out
imul
aam
popl
or
or
adc
outsl
add
and
stc
lods
mov
jp
jne
scas
rcll
or
mov
pusha
and
add
adcb
cmp
adc
xchg
or
xchg
ror
mov
jns
bound
fwait
popa
cld
xor
jg
out
repz
popa
xor
loope
push
jae
add
push
lock
fistps
jno
test
dec
in
add
mov
scas
imul
adc
or
iret
add
mov
inc
add
rcl
into
push
mov
mov
out
pop
ja
add
add
xor
inc
lar
mov
add
sub
xchg
mov
push
je
inc
and
xchg
cmp
fmull
push
inc
test
adc
xchg
mov
xor
jo
shrl
sti
pop
popf
adc
add
mov
inc
fidivl
pop
jg
mov
add
sub
mov
iret
addb
rol
dec
movsb
add
inc
dec
aam
sub
pop
add
mov
ret
sbb
adc
lods
rol
mov
xor
addb
and
mov
testb
push
add
xchg
fucomip
mov
or
mov
xchg
sub
push
or
loopne
dec
xchg
lods
cmp
push
call
and
das
inc
add
cld
mov
push
mov
or
adc
pusha
je
mov
jbe
ret
xchg
imul
sbb
push
sub
adc
into
pusha
ret
daa
jmp
inc
fwait
sub
adc
add
lds
adc
clc
add
sbb
jbe
adc
shrb
mov
ret
jge
fwait
inc
add
inc
popa
push
pop
shlb
aas
ja
add
adc
into
roll
pop
ja
subl
cmpb
inc
mov
add
sub
in
sbb
dec
add
les
js
inc
sbb
mov
sub
in
imul
add
or
aaa
in
or
lods
xor
sbb
subl
test
or
test
or
cmp
cmp
jbe
xchg
push
jle
enter
push
call
loopne
lret
scas
lods
mov
or
sub
ret
clc
dec
push
dec
adc
jno
adc
icebp
cmp
pop
push
inc
andb
push
adc
cmp
or
adc
call
popa
or
cmp
and
adc
test
mov
or
insb
and
lret
pop
lcall
out
dec
test
adc
push
push
out
ja
cs
dec
sub
pop
mov
inc
and
pusha
and
and
xor
orb
and
loopne
xchg
stos
pop
insb
rcr
adc
dec
adc
mov
adc
pushf
jmp
pop
push
dec
stos
cmp
and
cmp
dec
add
scas
testb
inc
dec
imul
fs
mov
add
in
lea
push
xor
sub
popl
test
bound
lods
xchg
or
vsubps
xchg
mov
add
aas
inc
mov
nopl
inc
hlt
cmp
add
mov
cltd
es
outsb
cmpsb
add
clc
sti
mov
dec
mov
xor
or
cltd
inc
shll
movsl
push
shlb
sub
notl
add
das
inc
cmp
dec
push
cmpsb
adc
lock
xchg
addb
aas
xchg
pusha
aas
sbb
lods
add
push
sbb
mov
add
cmp
outsb
add
nop
inc
in
dec
ds
or
sbb
roll
push
xor
addb
cwtl
nop
push
dec
xor
pop
mov
xchg
out
dec
jae
add
scas
dec
sbb
punpcklbw
inc
cld
inc
int3
push
sub
push
jo
add
sti
xchg
sub
add
data16
adc
clc
push
hlt
sahf
xor
sbb
js
pop
repnz
maskmovq
mull
bound
in
imul
mov
sbb
mov
jb
bound
push
out
mov
or
popf
mov
add
pusha
dec
call
sbbl
add
dec
mov
and
push
cmp
sub
mov
js
add
insb
je
add
mov
or
cmp
inc
and
fwait
sbb
jbe
jmp
jnp
add
sbbl
jae
xor
xchg
test
cmpsb
sub
mov
sbb
mov
dec
popl
inc
cld
lret
dec
aaa
xor
mov
jnp
add
in
dec
and
dec
std
xor
or
adc
mov
adc
xchg
cmp
jl
sbb
je
leave
adc
pop
mov
aas
sbb
scas
push
add
les
adc
pop
shll
cmp
insb
cmp
inc
mov
dec
jns
pop
divl
mov
cmp
and
pop
lods
mov
and
sub
pop
aaa
shll
shrl
adc
dec
test
data16
mov
add
mov
and
jno
sbb
adc
or
mov
andb
jo
jg
mov
mov
xor
push
xor
lds
dec
sbb
cmp
adc
adc
dec
iret
and
lcall
mov
insl
es
sub
clc
add
cli
hlt
sub
sbb
push
or
out
mov
sub
adc
inc
in
out
rolb
adc
addl
mov
ss
aad
or
sahf
cltd
pop
mov
add
int
scas
add
sub
pop
sbb
push
faddl
dec
idiv
in
inc
sbb
adc
insl
mov
inc
inc
adc
fsubrl
popf
cmc
iret
add
pop
or
gs
subl
xchg
ljmp
loopne
enter
lahf
dec
lahf
aam
xchg
pushf
push
mov
push
out
mov
outsb
xor
or
pop
int
add
mov
xchg
nop
and
cltd
aas
sahf
adc
icebp
mov
or
push
popa
dec
cmp
pop
jbe
sbb
aam
xchg
insb
inc
adc
lock
jl
faddl
sbb
test
fs
movsb
inc
cs
push
pushf
xchg
es
je
mov
jge
mov
push
pop
hlt
test
cwtl
shrb
movb
fisttpl
cwtl
pop
pop
clc
aam
rcrl
cmp
addl
aas
xor
pop
outsb
add
pop
das
mov
or
inc
jae
adc
subb
or
sbb
or
in
out
lahf
scas
and
or
out
cltd
push
push
pushf
addb
inc
shl
test
or
lods
scas
js
test
das
lds
ret
ja
pop
mov
cmp
adc
xor
fcomps
adc
cmp
notb
ret
xchg
xor
push
dec
add
add
push
lods
push
sub
adc
rolb
xor
lock
shlb
push
adc
push
pushf
pop
mov
ds
fadds
in
mov
cltd
outsl
push
xor
mov
dec
mov
dec
sbb
cmc
add
test
cmp
mov
push
push
mov
cld
push
out
jp
adc
pop
mov
mov
mov
mov
nop
xor
test
inc
adc
lods
cmp
pop
push
inc
cltd
dec
lods
rorb
in
sub
popa
mov
sub
mov
push
out
adc
xchg
pop
jo
lock
stos
mov
add
or
adc
dec
cmpb
xchg
addb
inc
xor
inc
cltd
cld
add
js,pt
cmp
lock
dec
adc
add
cmp
xchg
dec
pop
lds
sarl
mov
shr
jg
push
and
push
pop
xor
xor
rolb
insl
jnp
xor
inc
int3
pop
test
test
mov
adc
jae
adc
fwait
push
add
clc
push
sub
adc
sub
mov
mov
pop
xchg
cmp
sbb
fimuls
int3
mov
rclb
xchg
sub
sbbb
repz
dec
es
gs
faddl
divb
dec
test
add
sarl
add
push
adc
and
push
cmp
fildl
adc
test
inc
scas
adc
insb
add
inc
sub
repnz
aaa
xchg
js
addb
adc
mov
outsl
cmp
stc
mov
dec
mov
lcall
shrb
sub
fdivrp
cmp
add
mov
rorl
fs
or
shrb
ljmp
loopne
adc
xchg
hlt
pop
sbb
push
cmp
enter
negb
adc
or
xchg
sub
es
add
pop
lods
in
test
xor
adc
fsubrs
jns
shlb
xor
roll
sub
push
in
pusha
ret
add
fstpt
aaa
popf
adc
adc
popa
mov
jmp
mov
icebp
xor
mov
rolb
pop
mov
jo,pt
jg
pop
test
mov
pop
mov
jb
push
lds
add
inc
push
mov
adc
movsb
lock
mov
xor
jg
add
in
fsubrs
push
cmpsb
test
adc
test
ds
mov
xchg
sub
dec
push
popf
pop
sub
faddl
mov
shl
sub
pop
mov
clc
inc
lret
ss
sbb
add
jo
pushf
sbb
cmpsb
jo
out
jb
addl
ss
das
jo
push
jo
cmp
test
jo
ret
push
or
inc
mov
jnp
pop
cltd
cmp
and
movsb
cwtl
pop
xchg
iret
rorb
jl
or
push
sbb
adc
test
mov
pop
mov
pop
fs
subb
jne
mov
xchg
shll
insl
nop
cmp
mov
sbb
sub
xchg
inc
xchg
dec
pop
jae
mov
mov
add
inc
negl
mov
adc
and
push
lock
mov
or
add
lods
sbb
pushl
mov
xor
fadds
xor
pop
jo
int3
add
lahf
loope
inc
add
jb
jnp
jbe
pushf
in
ret
dec
leave
mov
cwtl
push
mov
xor
cmp
ljmp
lcall
or
inc
and
jb
pop
imul
fsts
inc
lods
popa
xchg
mov
fs
cmp
xchg
nop
es
xchg
add
mov
inc
jne
movb
rclb
inc
jnp
adc
cmp
and
jl
adc
les
cmp
add
pop
jbe
sub
leave
push
add
and
stos
xor
sub
das
std
add
adc
mov
shrl
push
add
mov
push
push
in
mov
adc
rcrb
and
insl
add
out
push
xor
add
enter
pop
imul
jne
orb
icebp
inc
add
push
fldcw
int
dec
imul
aaa
cld
push
sbb
and
or
xchg
add
push
repnz
sbb
add
mov
pop
in
sbb
dec
xor
xor
orl
xchg
fsubl
out
rolb
test
xor
repz
rcl
js
sub
sbb
mov
or
lret
add
and
sbb
shrb
dec
xchg
mov
jnp
das
push
xorb
pusha
dec
inc
mov
jecxz
dec
and
lcall
andb
sbb
fs
mov
xchg
add
push
lret
xchg
testb
das
fdivrl
xchg
arpl
add
mov
pop
outsl
mov
and
add
push
sbb
fmull
cwtl
mov
or
pop
add
fnsave
inc
mov
adc
aam
add
jnp
or
push
adc
cmp
and
sub
dec
inc
stos
ljmp
ds
xlat
sbb
int
cmp
sbbb
lahf
add
dec
dec
add
xchg
in
xor
cmp
cmpb
sbb
dec
dec
clc
sbb
call
add
mov
xlat
and
addr16
lods
inc
sub
loope
repz
add
ljmp
movsb
popa
sub
or
fcmovnu
and
enter
add
ffreep
inc
xor
adc
cmp
or
ret
push
sub
movsb
fsqrt
adc
les
sbb
sub
lock
xor
push
jge
or
sbb
ret
rorl
rcll
mov
call
dec
lret
pop
in
imulb
stos
jae
aas
add
mov
std
push
add
push
lock
xchg
add
jnp
fildll
int
enter
inc
push
push
dec
sub
xchg
dec
dec
push
pop
inc
add
push
fadd
jns
bound
sbb
clc
aaa
mov
mov
leave
and
iret
into
jnp
notl
push
pusha
popaw
sbb
and
in
xlat
or
loop
cli
addb
mov
cs
push
leave
cltd
ret
and
fdivrs
add
adc
test
mov
cmpsl
dec
cwtl
rcrb
addr16
sub
xor
rorb
test
pop
loope
cmp
shll
dec
lret
push
cwtl
adc
add
jne
popl
xor
add
push
cmp
jno
add
inc
mov
jp
leave
mov
or
js
push
and
adc
jg
rorb
in
inc
addb
sub
xor
mov
mov
push
mov
sub
sbb
push
lock
inc
stos
add
leave
in
xor
inc
mov
shrb
sbb
push
int
jnp
or
xchg
shr
xor
jp
popa
lret
rorl
jne
enter
add
sar
cmp
or
loopne
sub
add
push
jne
aam
es
sbb
inc
jp
inc
inc
add
shl
pusha
mov
inc
cmp
and
pop
push
dec
adc
outsl
cmp
adc
sti
rclb
pop
or
lods
sbb
pop
cld
aad
loope
out
jbe
add
cld
push
xor
or
pusha
orb
mov
jne
aad
lcall
sub
sahf
adc
cld
jb
adcl
js
mov
gs
int3
xchg
push
pop
repnz
out
jg
fcomip
mov
aam
test
inc
and
pop
scas
add
xlat
inc
aam
sub
inc
call
mov
les
sti
adcl
adc
inc
mov
add
inc
je
adc
pop
ja
add
xchg
mov
push
sub
and
inc
xor
inc
adc
adc
cmp
xor
in
popa
rolb
jecxz
and
imul
jle
add
test
ret
pop
cs
sbbb
mov
and
add
movsl
inc
jmp
push
adc
add
mov
pop
call
push
or
mov
cmpsl
call
mov
imul
sahf
xchg
xor
addb
mov
pop
cmp
filds
and
add
stos
add
mov
les
rcl
xchg
rcll
add
push
add
add
mov
fnsave
add
rolb
push
jge
in
pop
scas
pusha
add
mov
inc
xor
mov
xor
into
push
bound
xor
sbb
inc
loopne
add
mov
insl
add
fcmovne
addl
dec
cmp
je
inc
push
xor
inc
test
inc
iret
xor
popa
push
jnp
mov
mov
and
clc
lret
cld
lahf
mov
push
cmp
mov
xchg
push
imul
add
mov
push
and
fstpl
cmp
pop
sub
inc
mov
pop
subb
pop
xor
out
or
and
cltd
mov
mov
push
inc
dec
adc
clc
cmp
fldt
movsb
push
sbb
es
fistpl
fs
stos
mov
or
sub
sbb
push
orb
into
neg
pop
xchg
test
ds
mov
stos
pop
inc
inc
mov
xchg
aas
push
loopne
add
into
and
mov
push
push
dec
dec
inc
test
sbb
fsubrs
stos
shrl
imulb
add
test
dec
cltd
add
mov
mov
cmp
ds
and
add
and
jne
push
fdivl
xchg
or
cmp
clc
in
scas
mov
test
daa
xlat
add
sbb
inc
pop
mov
add
leave
xchg
push
or
adc
pop
aas
push
add
repz
or
inc
xor
and
cld
add
ja
andb
decl
mov
jmp
xor
frstor
sar
addr16
pushf
xorb
out
or
mov
add
lahf
push
xor
loopne
cli
or
dec
mov
ljmp
xor
pop
es
adc
lahf
add
nop
add
icebp
in
xchg
lods
dec
inc
mov
movb
push
push
dec
mov
lret
pop
ds
or
add
leave
mov
mov
stos
loope
ret
sbb
test
add
adc
fcomp
aam
orl
and
inc
sub
fstpt
mov
lret
scas
push
fs
add
dec
mov
pop
sub
dec
add
jns
cmp
mov
mov
rcrl
and
pop
cmp
dec
add
notb
shrb
xchg
mov
out
inc
or
shll
arpl
push
adc
add
xor
cmpsl
push
dec
je
push
int
pusha
jb
add
femms
fiaddl
mov
test
fcoms
and
pop
or
pop
in
add
dec
push
mov
sbb
ss
js
inc
push
rcrl
mov
je
jmp
ret
xchg
lds
push
sub
xor
xor
insl
pop
push
fmuls
mov
mov
inc
xchg
cmp
ret
push
xor
push
loopne
pop
loope
sahf
dec
add
jae
out
xchg
mov
mov
stos
out
lods
sbb
shrb
in
pop
mov
lods
cld
fiaddl
jno
push
lods
mov
xchg
mov
push
in
addr16
rcll
add
pop
and
leave
lcall
mov
rcrb
outsl
aas
scas
add
test
adc
xchg
adc
cmc
push
mov
ss
xor
mov
xchg
dec
clc
aaa
es
xor
sar
xor
xchg
or
fsubl
les
in
pop
das
fisubrs
push
fldl
imul
movl
push
loope
fs
add
jnp
and
push
sbb
add
out
mov
ja
inc
sbb
xor
popa
or
fildl
jno
xorb
mov
insb
lods
push
mov
add
push
push
xor
or
xlat
push
mov
sahf
cmp
lret
or
push
pusha
mov
lods
fldpi
sbb
add
fwait
cmp
push
mov
xlat
or
lahf
push
movq
push
outsb
pop
xor
and
or
addl
dec
or
mov
sub
push
sbb
push
dec
fnstcw
adc
dec
cmp
cmp
and
popa
mov
or
sti
mov
push
dec
xor
in
sub
inc
insb
fsqrt
add
xchg
mov
mov
jns
js
pop
xchg
mov
jbe
inc
inc
movsl
push
popa
inc
sub
push
mov
testb
dec
push
mov
ret
filds
adc
or
xlat
xchg
adc
aaa
pop
pusha
lea
xchg
pop
xor
mov
iret
sub
div
add
mov
jb
xor
lret
jns,pt
pushf
cld
inc
bound
or
repnz
adc
mov
mov
add
int
dec
into
inc
dec
aad
rolb
or
push
pop
sbb
cld
add
cmpsl
push
movaps
adc
popa
nop
add
and
enter
call
cmp
push
pop
inc
push
push
jbe
mov
sahf
pop
jmp
fxch
decl
in
bound
xor
rorb
add
push
je
sarb
clc
mov
imul
jae
and
add
pop
mov
xchg
js
sub
mov
jne
inc
movsb
sbb
test
cmp
add
aam
add
gs
inc
mov
icebp
xor
les
push
push
and
mov
loope
mov
add
xlat
sbb
not
inc
push
or
fiaddl
movsb
pop
push
jb
int3
cltd
or
mov
sbb
add
in
or
insb
cmp
pop
add
push
push
jae
mov
dec
ret
and
adc
data16
adc
cmp
lock
cmpl
add
mov
repnz
cmp
add
mov
int3
push
les
movsl
add
pop
icebp
xchg
dec
sbb
xchg
or
pop
insb
adc
or
inc
arpl
sub
mov
lret
int3
fisttpl
adc
inc
add
leave
xlat
andb
and
sbb
ljmp
lods
sub
and
rolb
clc
dec
inc
cltd
adc
fbstp
dec
sahf
inc
cld
jp
mov
nop
push
sahf
adc
inc
adc
les
pushf
sti
scas
jae
add
and
cltd
mov
and
inc
mov
xor
aaa
sbb
test
mov
int3
jbe
cmpsb
push
daa
mov
loopne
sbb
add
test
cmp
enter
adc
shlb
inc
mov
cmp
lds
sub
or
popa
lea
mov
xchg
sub
xor
add
dec
pop
fisttps
out
movsb
and
ljmp
js
sbb
ss
and
ds
or
inc
add
sbb
add
jnp
cwtl
repz
and
push
cwtl
or
dec
lds
push
call
std
out
mov
aas
das
add
mov
into
inc
lods
adc
dec
clc
add
cld
add
sub
or
sub
cmp
push
or
and
outsl
cwtl
ljmp
addr16
xorl
cmp
add
mov
mov
push
rcr
pop
jnp
ret
ss
xchg
cmp
movsl
rcr
push
cltd
cwtl
test
cmpsl
push
in
push
dec
inc
inc
adc
mov
movsl
lods
and
dec
adc
push
mov
inc
push
pusha
in
outsl
jb
add
xlat
loop
inc
push
pop
scas
mov
xor
adc
xor
arpl
mov
xor
addr16
lahf
call
push
lcall
notl
mov
mov
cmc
fcomps
cld
sbb
mov
add
iret
repnz
cmp
jo
sbb
movsb
pop
and
movups
jle
add
sub
imul
cwtl
mov
dec
xchg
test
push
rclb
aas
pop
mov
test
mull
sub
and
fs
sbb
sbb
fidivrl
movsb
sub
or
pushf
jbe
dec
mov
and
jp
loopne
dec
push
jb
mov
js
dec
xchg
cmpsl
cmp
fiadds
movsb
test
sbb
adc
or
pop
sbb
or
js
push
inc
stos
aaa
sub
add
xor
inc
mov
jp
xor
dec
pusha
mov
lret
inc
cltd
dec
daa
out
addr16
andb
push
cmp
and
mov
lret
test
mov
fsubrl
movsb
and
pop
pushf
mov
xor
out
dec
clc
add
out
in
adc
sahf
js
sti
add
rcll
xchg
add
add
aad
dec
imul
jns
pop
in
adc
sub
test
shrb
mov
das
pushf
adc
lret
shl
sub
lock
sbb
rcr
pop
xor
inc
xor
push
add
int3
std
loopne
inc
fmull
iret
sbb
idivb
mov
fsub
repnz
xor
int
les
and
sub
adcl
pusha
pusha
xchg
in
push
mov
push
inc
inc
add
mov
ret
dec
call
push
lods
mov
cmp
cmp
test
test
mov
xchg
sti
cmp
jp
std
dec
push
add
mov
in
xchg
enter
ljmp
dec
popf
sbb
sbbb
mov
hlt
dec
push
insb
pop
std
sbb
inc
leave
mov
data16
ja
push
dec
movsb
pop
jge
call
sub
pop
in
pop
out
cmpsl
xor
test
nop
push
movsl
inc
imul
int
xchg
repnz
xor
cmc
add
xor
lods
jns
adc
test
xor
xor
addr16
jl
ret
push
mov
cwtl
enter
scas
or
lret
inc
inc
bound
loop
xor
add
or
aam
loopne
gs
jmp
add
xchg
scas
sub
testb
jns
cwtl
pop
xchg
push
and
push
fldl
insb
sub
sub
dec
push
adc
jo
enter
and
add
xor
movsl
xchg
add
xchg
cwtl
loopne
sbb
sahf
cmp
xchg
inc
loope
sti
ss
sub
xor
dec
pop
and
and
std
rcrb
fists
push
cld
addr16
dec
cmpsb
xorb
pop
ret
and
mov
cmp
movsb
pop
in
enter
out
add
negb
and
mov
aad
das
inc
add
enter
fcomp
icebp
add
subl
cld
adc
mov
mov
add
shr
pop
rcr
xor
cltd
fidivrs
cmp
and
mov
jns
fs
push
adc
gs
add
movsb
mov
pop
xchg
cmp
and
ljmp
xchg
insl
sbb
or
bound
add
or
inc
jg
aas
push
pop
mov
stc
mov
xor
mulps
xchg
shlb
xorb
add
pop
add
push
add
mov
pop
inc
xor
push
xchg
loopne
mov
je
lret
mov
xor
ds
pop
dec
stc
or
in
dec
fistl
mov
dec
xor
repz
dec
or
sub
mov
add
and
jo
pop
mov
inc
lret
scas
aaa
insb
lcall
and
add
and
lods
jno
shll
xlat
aaa
fisubs
add
mov
repnz
add
fmul
xlat
sbb
mov
imul
sub
jmp
arpl
dec
mov
shll
subl
dec
fsubrl
adc
add
pop
sbb
fildl
lock
mov
aaa
loopne
mov
mov
lds
add
dec
mov
xor
scas
sub
dec
mov
pop
or
xor
popf
push
cwtl
add
lock
cmp
and
lock
jle
jno
and
in
add
sub
xchg
arpl
adc
cmp
adc
xor
add
nop
imul
mov
add
and
popa
inc
jae
adc
dec
inc
mov
xor
cld
mov
movsl
imul
popl
data16
dec
add
fisubrl
jno
aaa
movsb
sub
int
addl
int3
add
push
dec
xor
xor
inc
lods
cli
xor
int3
inc
mov
or
xor
fucomi
testl
lods
movsb
sub
and
pop
mov
lea
pop
jo
xchg
sbb
decl
jecxz
xor
inc
push
ret
xor
stc
cwtl
sub
add
fs
fs
jae
xor
adc
and
add
or
clc
ss
shlb
pop
inc
loope
lcall
xor
add
mov
icebp
int3
push
or
das
push
pop
popf
mov
out
inc
mov
cmp
or
mov
add
pushf
rcll
sub
testl
in
or
lock
lret
in
lock
or
test
les
or
mov
add
fidivl
cmc
fiadds
outsb
xchg
rclb
pusha
iret
add
das
mov
inc
and
push
cmc
repnz
dec
popl
std
enter
jnp
leave
and
int3
pusha
pop
insl
sub
xchg
mov
loop
xor
in
ret
mov
cmpsl
dec
movsb
add
adc
and
pop
gs
push
mov
aam
fcomps
xor
in
nop
xchg
push
test
nop
gs
xor
adc
pop
sarb
lahf
andb
push
adc
movsl
xchg
js
test
ds
mov
jmp
jmp
je
clc
loopne
shrb
jae
and
push
lahf
in
rolb
push
fildl
in
sbbb
mov
inc
into
inc
cmp
das
es
inc
xor
loopne
jmp
sbbl
cmp
or
sti
sbb
mov
xchg
push
std
inc
sub
in
popf
test
test
movsl
sbb
inc
inc
aas
push
insb
jp
imul
movsl
dec
dec
pop
sbb
inc
xor
popf
nop
mov
mov
adc
scas
push
scas
jno
xchg
jo
sbb
js
cmp
push
cmp
inc
lods
lcall
jno
adc
jp
pop
cmp
lock
mov
clc
pusha
sub
dec
adc
or
pop
adc
fsubs
int3
mov
cmp
pop
pusha
xor
inc
add
mov
imul
clc
call
mov
xor
pop
xor
jge
cmpsl
sarb
orl
xor
les
and
cmp
mov
add
popa
inc
inc
pop
dec
push
idiv
das
xor
pushf
ror
or
sub
pop
and
hlt
sub
int3
adc
loope
xor
iret
or
cmp
pop
filds
mov
ret
cmp
dec
js
stc
fdivs
daa
add
jge
repz
daa
iret
add
in
pusha
test
or
in
push
cmp
fnstsw
add
icebp
jmp
mov
jbe
add
push
nop
out
xchg
cmp
add
mov
cmp
arpl
pop
fcmovnu
lods
shlb
push
dec
add
inc
jnp
inc
aam
mov
or
addl
jle
mov
xorb
loopne
cli
sbb
mov
add
cmp
sub
cld
or
adc
sti
add
inc
cltd
repz
push
jnp
mov
mov
jne
pop
fsubrs
dec
insb
in
pop
push
sub
mov
mov
push
inc
adc
imul
ror
cltd
cmpsb
das
sarb
sbb
mov
mov
test
sbb
or
insb
sub
add
dec
cltd
mov
mov
fnstsw
mov
xchg
ret
mov
out
dec
loope
hlt
divb
and
or
add
jbe
imul
xor
sub
fstpt
inc
dec
push
dec
cmp
and
pop
rorb
ret
cmc
js
adc
data16
loope
push
or
mov
xchg
pop
adc
cli
dec
cmp
and
cmp
jno
roll
js
loop
cmp
and
add
add
or
add
in
add
aad
in
xor
scas
mov
fs
or
add
fs
sub
fisubrl
std
cmp
xor
das
mov
add
mulb
loopne
ficompl
scas
dec
call
mov
inc
jecxz
dec
dec
rcl
xor
xchg
push
cmpb
and
xor
movsb
mov
and
add
or
pop
cld
sub
push
jne
dec
dec
mov
clc
fnstcw
mov
adc
and
add
push
xor
std
test
pop
sbb
loopne
push
lret
repnz
addb
or
pshufw
movsl
dec
adc
push
mov
decl
or
pop
xchg
dec
xchg
in
movsb
nop
mov
dec
dec
js
pop
cmp
jo
add
or
xchg
xor
inc
pop
jge
mov
addr16
add
xor
cmpsl
xchg
les
cmp
push
andl
test
cs
adc
dec
bnd
cmp
or
mov
test
pusha
gs
mov
and
add
in
jge
push
sti
mov
push
inc
xchg
in
inc
sub
scas
xor
add
xor
bound
jne
cwtl
or
call
stc
dec
scas
sub
ficoml
inc
std
jp
add
dec
inc
in
mov
xchg
jge
faddl
movsl
pop
mov
lods
enter
inc
addr16
xor
jge
adc
xor
out
mov
sub
jl
push
xchg
pop
mov
incl
pushf
sbb
inc
pop
push
dec
push
loop
add
inc
loope
or
and
and
xor
xchg
aaa
xchg
daa
dec
ja
xchg
das
fcoms
xor
cmp
and
add
movsl
lods
icebp
in
add
faddl
push
add
dec
outsb
jns
aaa
or
sbb
mov
add
mov
inc
pushf
pop
inc
or
test
dec
mov
jb
clc
inc
subl
ja
test
incl
jns
add
sbb
andl
stc
push
inc
sub
into
push
cmp
xchg
nop
lods
xor
inc
les
xorb
dec
xchg
add
pop
movsl
push
lret
test
ficoml
shrb
mov
add
jbe
push
popa
ret
pop
xchg
mov
loope
xor
lret
dec
test
sbb
das
nop
adc
testb
leave
mov
adc
lahf
and
fcompl
mov
push
ficompl
lcall
test
or
mov
sub
mov
add
jnp
cmp
movsl
sarl
and
dec
mov
rorl
jo
sub
outsb
loope
aas
add
sbb
rolw
xor
aas
inc
in
and
lds
mov
call
leave
adcl
fstl
pop
jmp
cmp
sbb
and
and
faddl
pushf
add
and
mov
inc
sbb
adc
enter
jno
mov
pushf
adc
test
add
adc
adc
fwait
lgs
les
mov
orb
cmp
xor
dec
icebp
sbb
pushf
push
ret
mov
or
or
stc
lock
push
add
inc
mov
mov
cmp
and
or
add
or
add
iret
pushf
and
adc
lea
or
mov
adc
pusha
cmp
lds
xchg
inc
sbb
xor
dec
inc
ret
cmc
scas
adc
les
fidivrl
pop
jle
sbbb
icebp
mov
jne
inc
pusha
outsl
roll
pop
pop
push
add
xor
mov
mov
fs
dec
adc
bound
mov
push
cmp
iret
add
and
mov
andb
aaa
rcr
aad
fldenv
fwait
pop
sbb
mov
lahf
stos
enter
add
cmp
mov
inc
xor
clc
add
push
push
pop
fmull
and
pusha
dec
inc
shlb
cmpsl
add
dec
lods
ss
push
push
incb
stc
inc
jp
cmc
dec
adc
out
in
fldenv
mov
bnd
loope
mov
add
rcll
add
jae
push
jg
xlat
sbb
fndisi(8087
push
ss
xor
loopne
cmpsl
in
ljmp
cmp
dec
nop
pop
rorl
into
sub
add
add
pop
adc
add
fdiv
outsb
inc
pop
mov
repnz
add
ss
mov
cmp
lcall
and
mov
in
push
or
adcl
adc
stos
pop
es
lahf
fidivl
add
push
pop
sbb
xchg
call
mov
inc
xchg
add
loope
lods
ret
mov
scas
jl
leave
fistps
inc
mov
cltd
jge
xor
jno
sbb
cmp
xchg
add
add
lods
pop
pop
and
jge
push
xorl
xlat
add
cwtl
pop
dec
xchg
ror
xchg
je
ljmp
adc
mov
adc
jge
xchg
leave
push
out
cli
loopne
popa
xchg
push
jmp
aad
add
jmp
push
and
lods
and
shlb
int3
lret
mov
xor
xor
cmp
in
int
into
mov
sub
inc
in
loop
pop
sbb
lods
call
xor
inc
and
fstpl
pop
jo
sbb
jle
or
pop
and
test
loopne
movsb
mov
lds
mov
shlb
add
xchg
data16
int
xchg
shll
fs
mov
dec
adc
in
mov
cmp
pop
out
add
push
inc
push
lods
dec
and
sbb
xchg
in
je
cmp
shr
aam
cld
in
xor
repz
js
cmp
clc
jge
pushf
jbe
wbinvd
jne
adc
add
adc
lods
pushf
mov
in
add
scas
xchg
idivb
cmp
push
and
or
mov
and
xlat
testl
movsl
repnz
repnz
and
cmpsb
repz
mov
rclb
and
outsb
je
ljmp
sbb
xor
je
mov
push
int3
xor
aaa
fcomps
mov
ja
test
call
push
addl
das
dec
sub
pusha
roll
pop
sub
sbb
inc
andl
lea
mov
cwtl
sbb
dec
mov
les
aaa
and
nop
in
or
sbb
lock
jae
and
add
dec
test
loop
mov
imul
dec
mov
int3
jnp
xchg
mov
adc
sbb
stos
cs
ret
loope
pop
push
xor
js
jne
aam
cmp
xor
sub
test
mov
in
or
xchg
dec
and
or
mov
out
pop
lahf
xchg
xchg
loopne
out
jns
test
insl
fs
icebp
cld
lret
add
push
lcall
mov
xorb
cld
mov
inc
shrd
out
mov
rcl
iret
mov
jmp
gs
fsubs
fmull
cmp
fdiv
int3
jo
xchg
add
es
jle
fcmovne
xor
inc
adc
mov
add
adc
push
cmp
inc
fstpl
cmp
lock
cld
sub
movsb
or
mov
jg
int3
mov
cmp
ss
dec
imul
push
fsubr
test
or
test
add
test
mov
dec
add
pop
cmpsb
push
inc
mov
jo
mov
shl
mov
jns
sbb
add
adc
das
call
aad
lcall
das
cmp
and
or
sub
mov
jo
outsb
inc
adc
int3
push
xor
sub
xor
mov
jno
jle
sub
add
insb
mov
or
xchg
lods
out
lock
shll
cs
lock
insl
add
xor
mov
push
jle
addb
push
movsl
dec
cmp
add
push
jmp
call
add
add
mov
rol
push
mov
add
iret
pop
lcall
xor
rolb
pop
adcl
stos
int3
fisubl
jl
hlt
fisttpl
mov
xor
add
sub
cmp
xor
repz
adc
sbb
add
jbe
push
mov
ficompl
mov
xchg
mov
call
adc
add
popf
hlt
ljmp
push
add
sarb
pop
test
mov
or
cli
add
inc
sub
stos
stos
cmpsb
xchg
adc
int3
jae
fsubl
in
lock
leave
fxch
repnz
fwait
dec
xorb
popa
cmpsl
adc
xlat
int3
sub
xchg
mov
sahf
ret
rolb
mov
xor
add
cmp
mov
mov
adc
addl
mov
fcomps
jecxz
fiadds
mov
sub
mov
adc
addr16
xchg
dec
pop
inc
decl
jmp
aas
and
dec
sbb
fdivs
fcmovnu
sbbb
push
pop
sahf
pop
xchg
into
rclb
and
add
cmpsl
pop
xor
add
addr16
scas
mov
nop
adc
stos
aam
inc
sbb
dec
icebp
push
insb
popa
outsb
add
sarl
push
ret
nop
mov
addb
addr16
jnp
and
stc
ja
lds
and
push
ror
adc
and
xor
adc
add
fs
pusha
add
cltd
and
in
add
loope
adc
sub
ret
popa
mov
mov
pop
mov
push
jge
sbb
in
pop
aaa
inc
mov
cmpsl
fs
pop
xor
push
xor
jo
js
ljmp
inc
xchg
and
xor
xor
xor
mov
movsl
jg
cmc
mov
push
push
mov
movsb
dec
fnstenv
insb
pushf
dec
push
clc
jg
daa
xorl
jp
push
cmp
andb
es
and
mov
dec
imul
iret
xchg
inc
add
cmp
sub
cld
mov
inc
loope
out
cmp
dec
sbb
inc
xor
sbb
jp
mov
arpl
ss
or
pop
cmpb
out
jl
jecxz
sub
xchg
fisubl
mov
and
int
xchg
test
cmp
pop
ret
sub
pop
ds
pusha
loope
pop
sbb
inc
and
lods
push
ds
push
dec
xchg
enter
lret
ror
add
jge
cld
into
cmp
fwait
clc
sbb
cld
les
jp
scas
daa
int3
enter
mov
nop
pushf
popf
xchg
pop
stos
add
sub
cmp
adc
xchg
sahf
sarl
fwait
and
mov
jnp
sar
pop
xchg
lock
and
adc
sub
and
test
or
fsubrl
pusha
repz
rolb
add
mov
into
popf
test
pushf
sub
push
fnstcw
or
in
push
add
cmp
imul
and
cmp
js
xchg
pushf
xor
dec
inc
ficoms
mov
push
loop
xor
cmc
into
xor
outsl
test
fisubrs
out
outsb
mov
sbbl
add
ja
push
add
popa
xor
js
sub
lahf
lods
add
jl
xchg
js
cmp
sarb
add
ja
dec
mov
nop
icebp
sbb
aam
clc
loopne
loop
mov
xor
xor
pop
jne
or
js
add
cmpsb
repnz
in
lret
nop
mov
jns
bound
xor
aaa
incl
clc
push
xchg
add
outsl
in
sbb
dec
dec
aad
xchg
push
jecxz
pusha
popf
jmp
aam
adc
insl
enter
rorb
mov
rcll
push
push
rolb
mov
test
cli
adc
cwtl
adc
sbb
fnstcw
loopne
push
xor
ret
shlb
add
aad
sub
add
arpl
add
ja
aas
int3
or
adc
jp
jge
cmc
pop
aad
sub
jecxz
push
mov
xchg
sbb
out
adc
add
or
fucom
mov
loope
sbb
cmp
leave
fs
pop
dec
mov
adc
push
sub
push
mov
xor
push
hlt
mov
movsl
adc
roll
sub
or
es
adc
xchg
rcrl
and
call
inc
jno
jns
adcb
sar
mull
out
sti
and
mov
int
test
push
mov
mov
mov
xchg
add
fucomp
in
lock
xor
and
cmp
mov
or
and
and
pop
pusha
ja
shlb
pusha
mov
jo
mov
and
ds
out
or
popf
or
rcl
lcall
jb
add
pop
push
hlt
pusha
rolb
mov
repnz
lock
movl
ds
push
pusha
cmpsl
jo
mov
mov
stc
fdiv
ret
add
cli
rorb
aaa
iret
or
xlat
mov
sub
cmp
inc
invd
jnp
sbb
jecxz
push
rorl
insl
pop
add
bound
or
and
mov
jae
in
pop
add
sbb
cs
mov
mov
aas
pusha
mov
and
ds
sub
xor
jge
not
ljmp
sub
add
incb
mov
add
popf
test
fs
and
xchg
mov
cmc
add
clc
mov
jns
add
pushf
or
ss
add
cld
dec
pushl
mov
rolb
jl
sbb
or
lds
fsubr
adcb
rol
inc
add
enter
cwtl
jo
or
inc
push
addr16
xor
outsb
ds
mov
in
push
and
ds
fwait
jecxz
lcall
or
lds
xor
sbb
movq
push
sub
inc
repz
xor
orb
sbb
or
movb
xchg
add
dec
jns
js
jb
or
mov
popl
dec
push
mov
data16
cmp
push
mov
or
push
xchg
lods
insb
inc
bound
test
dec
sbb
xchg
shrl
clc
sub
add
shl
jmp
insb
and
add
jecxz
mov
shlb
enter
les
das
jo
mov
leavew
xchg
mov
arpl
or
mov
jb
cmp
push
dec
int3
adc
add
mov
mov
mov
mov
sbb
sub
cltd
mov
mov
mov
pop
lods
xor
push
and
adc
pop
push
mov
mov
jle,pt
popa
add
sbb
xchg
pop
adc
das
mov
gs
push
cmp
fdivl
pop
stc
dec
or
and
icebp
outsb
mov
lret
test
sub
sbb
aam
pop
stos
dec
jge
or
or
enter
pusha
push
clc
mov
mov
stc
add
clc
jmp
hlt
push
push
addb
js
cmp
test
iret
sub
orb
sarb
sahf
jg
pop
cmp
arpl
xchg
cmp
xorb
inc
out
stos
in
subb
ds
leave
mov
or
cmp
and
or
out
shlb
je
lds
dec
aad
test
jmp
xchg
push
cs
loope
cli
pop
push
movsb
sbb
jecxz
insl
sarb
pop
popf
lds
mov
je
dec
add
pop
add
adc
cmp
xchg
test
or
pop
inc
lret
jmp
in
test
sbb
and
dec
cmp
popa
inc
cs
loopne
loopne
lock
xor
add
jp
dec
fs
es
sub
pop
call
popa
dec
insb
and
mov
mov
adc
add
fs
mov
fstl
or
in
int
adc
fdivrs
sbb
outsb
pop
inc
mov
test
push
xchg
fcoms
cli
jmp
shlb
stc
xor
out
xor
jmp
add
nop
pop
mov
add
mov
fwait
outsl
dec
cld
jg
push
jmp
push
mov
lock
inc
pop
orb
and
pushf
sbb
mov
mov
sahf
pop
ficoms
adc
xchg
test
or
inc
pop
js
or
mov
jno
mov
hlt
daa
add
je
cld
mov
cwtl
cmp
and
add
xor
push
xor
adc
sub
test
out
mov
add
test
adc
mov
lahf
add
into
adc
aam
dec
mov
mov
inc
mov
and
and
xchg
lds
adc
cmc
scas
and
xchg
mov
xor
insl
pop
adcb
dec
inc
in
pop
ds
xor
add
push
gs
xor
faddl
mov
cmp
aam
pop
mov
xchg
pop
and
je
xchg
in
add
es
sbb
or
lea
pop
dec
adc
push
icebp
add
mov
sbb
jo
loopne
push
xchg
dec
into
in
inc
add
bound
pop
add
aaa
rorb
leave
xorb
in
add
pushf
mov
dec
loop,pt
mov
cmpsb
into
push
int3
gs
mov
cmp
mov
pop
sbb
pusha
push
or
adc
mov
dec
int
mov
ret
adc
or
sub
mov
and
xchg
and
inc
adc
or
in
enter
enter
sub
imul
add
inc
fdivs
mov
pop
pop
add
fsubr
mov
test
mov
jo
aaa
into
dec
add
rorl
add
test
sbb
and
push
jns
fldl
data16
scas
adc
es
inc
or
dec
in
mov
inc
test
push
inc
aam
jl
shlb
fidivl
aaa
add
mov
sub
push
lcall
or
sbb
loop
out
lods
adc
sbb
cmp
ret
sub
add
xlat
or
mov
add
and
ljmp
les
out
stc
pusha
setns
ficomps
jg
lahf
add
inc
pusha
mov
push
sub
lea
rcr
ret
and
push
xor
stc
xchg
add
and
xchg
pushf
sub
je
leave
add
mov
test
pusha
enter
dec
in
add
xor
push
gs
pop
push
call
pop
imul
test
mov
push
push
push
adc
repnz
dec
pop
jbe
scas
lcall
loop
inc
adc
cmp
or
sti
andb
out
repz
jno
add
or
add
andl
adc
or
add
or
cld
and
xchg
cmp
roll
or
push
movb
cs
fadds
pop
xchg
mov
sbb
jae,pt
sbb
cltd
mov
adc
nop
adc
and
add
jb
out
mov
sbb
addr16
orl
inc
enter
xchg
aam
cli
sbb
je
push
jbe
add
xchg
mov
pop
test
jp
inc
enter
xorl
mov
mov
jmp
add
add
inc
fsubp
pushf
sub
mov
inc
outsb
and
lock
mov
mov
nop
push
mov
push
int3
ds
xchg
adc
pop
or
fadds
and
xchg
filds
xchg
push
mul
lret
and
cld
in
xor
pop
shll
mov
xor
pop
and
popa
cmp
cmp
stos
pushf
call
mov
pusha
popf
inc
cmp
aam
call
and
push
cmp
or
in
xchg
jne
add
paddd
shll
je
stc
add
test
and
or
xor
cmp
adc
mov
inc
fdivl
dec
les
andl
add
out
imul
aam
rcr
sbb
cld
add
and
xor
mov
xor
mov
and
xor
xlat
add
ss
out
or
fwait
mov
cmp
jbe
mov
pop
xlat
mov
pop
aam
xchg
test
mov
and
xchg
nop
push
in
movsl
inc
loopne
rcrb
and
ror
mov
pop
int3
add
shll
cmpsb
mov
add
jle
nop
or
dec
mov
aad
repz
mov
mov
sbb
pop
xor
stos
push
add
mov
mov
leave
jo
addl
sahf
sarb
pop
inc
sub
es
mov
add
xchg
sahf
inc
mov
add
push
roll
jmp
mov
clc
and
pop
jb
add
sub
push
rolb
cld
aaa
aad
loope
xor
sbb
dec
mov
clc
in
add
aam
xchg
cmp
dec
or
push
or
push
add
sub
lret
ret
pop
xchg
mov
push
or
mov
fmul
adc
sarl
nop
xchg
test
fsubr
mov
dec
mov
xor
or
and
mov
clc
xor
imul
push
adc
in
jno
pop
out
pop
adcb
pop
ss
xor
push
or
mov
and
push
pop
mov
rorb
ds
mov
and
or
mov
or
xchg
popf
add
icebp
mov
dec
dec
das
inc
and
add
xor
or
les
and
pop
pop
dec
mov
jmp
mov
daa
mov
cltd
jge
add
xchg
xchg
cmp
mov
mov
xor
add
sbb
mov
push
add
je
jl
or
jmp
mov
add
loop
repz
add
faddp
lahf
or
and
add
xor
cltd
and
sarb
je
fiaddl
mov
popa
cld
enter
loopne
or
rcll
mov
add
clc
arpl
and
xchg
push
sbb
add
adc
das
lret
pop
mov
xlat
push
and
fstpl
sbb
out
xchg
fwait
popa
repz
xor
test
das
je
mov
add
lods
xchg
dec
loope
or
stos
popf
jnp
inc
xor
int3
mov
rolb
cmc
fisttpll
gs
add
mov
push
or
in
push
inc
add
jbe
insl
fsub
xchg
sub
cmp
mov
test
test
inc
push
add
sbb
outsl
mov
pusha
and
lock
and
cmp
xor
negb
out
loopne
pop
sub
cmp
test
push
loop
hlt
scas
clc
cltd
rorb
je
out
mov
leave
sbb
lea
stc
repnz
clc
jmp
pop
lock
cwtl
and
add
aad
outsl
fmuls
sbb
decl
pop
push
rdtsc
lea
inc
jmp
xchg
push
mov
add
lret
cli
fwait
sbb
pop
or
push
imulb
sahf
sti
mov
mov
ret
or
pop
xor
sbb
adc
hlt
mov
inc
sub
sbb
dec
add
adc
lods
cmpsb
push
mov
test
mov
subl
and
or
or
or
add
pop
push
or
invd
mov
sbb
add
push
cmpl
cmp
or
aas
out
jp
mov
sub
push
data16
movl
sti
adc
lock
and
cmpsl
push
push
jb
and
adc
add
mov
adc
inc
js
jmp
pop
ja
add
adc
xchg
in
push
adc
popa
xor
pop
shlb
mov
out
cmc
hlt
xchg
and
repz
mov
or
pop
sbb
pop
add
xor
int
inc
mov
push
pusha
push
jae
movaps
jne
rcrl
mov
loope
sub
push
mov
ljmp
mov
adc
and
test
adc
loop
xor
push
js
push
jmp
adc
lahf
dec
add
pop
pop
pop
add
icebp
jmp
popf
jno
das
mov
int3
add
add
aaa
add
mov
out
or
mov
adc
es
inc
adc
inc
inc
pop
add
cmp
mov
add
pop
scas
std
push
sub
push
call
push
test
clc
xchg
and
mov
loopne
jmp
cmp
sti
cmc
adc
jbe
dec
nop
mov
leave
ja
sahf
daa
jne
mov
repnz
and
call
mov
add
loop
mov
out
lcall
mov
arpl
sub
mov
mov
test
adcl
adc
fmuls
pop
into
xor
dec
pop
ss
mov
pop
inc
ja
mov
and
insb
int
pand
pushl
sbb
push
pop
mov
popf
inc
cmovbe
dec
lea
adc
cmpb
cmp
jae
jbe
sbb
sbb
scas
subb
and
jecxz
and
sbb
add
test
pusha
in
sbb
or
push
rcl
push
iret
inc
xchg
mov
mov
inc
mov
mov
sub
sbb
pop
movsb
inc
das
mov
stos
into
add
pop
push
stc
pop
pop
inc
adc
sub
push
add
push
mov
les
cmp
js
enter
pop
lret
jmp
rclb
loope
mov
test
add
adc
cmp
cmc
sbb
cmp
mov
add
sbb
lds
shrb
mov
adc
stc
notb
mov
mov
jg
int
cltd
shrb
ja
jo,pn
in
sbb
xchg
mov
pop
mov
mov
dec
mov
adc
rolb
in
push
jae
pop
lods
and
xchg
orb
inc
jmp
or
cmpsl
sub
xorb
sub
xor
sub
flds
lcall
add
sub
inc
mov
aas
lds
adc
mov
inc
sbb
cmp
pushf
and
jo
jne
xor
mov
xor
mov
adc
cmp
jecxz
in
bnd
aas
mov
jb
adc
pusha
call
outsl
stc
das
rcrl
fwait
or
pop
and
and
pushf
push
test
jne
mov
mov
addr16
pop
imul
cld
pop
mov
dec
sub
clts
xor
xor
add
icebp
loopne
ret
or
popf
call
dec
xor
dec
rcrl
out
dec
ss
and
sbbl
fldt
push
dec
jmp
sti
ret
sub
pop
push
push
jo
loope
mov
std
xor
stc
add
mov
sbb
jle
jmp
je
push
mov
clc
cmp
inc
sbb
ja
and
sub
adc
sahf
rorb
mov
mov
or
cwtl
into
adc
add
mov
outsb
scas
sbb
jg
nop
dec
and
or
jp
and
add
stos
idiv
mov
mov
in
shr
aaa
iret
inc
clc
movsl
dec
lods
add
mov
pop
test
or
sub
or
inc
pushf
lock
xor
mov
and
xchg
xchg
outsl
lcall
sbb
mov
mov
test
mov
xchg
sub
sbb
or
fdivrl
add
movb
insl
adc
jge
loopne
cmpb
xor
dec
jecxz
jne
cmpsb
jo
movaps
jno
or
or
add
inc
or
mov
in
jg
add
push
xor
lret
xor
adc
sub
inc
fmull
add
add
in
add
lahf
add
xchg
fnsave
jmp
pop
xchg
movsb
jo
mov
jmp
aam
mov
pop
repnz
int
jns
mov
not
adc
xchg
mov
mov
loop
out
lcall
jge
test
sti
jg
sub
xor
pop
xor
insb
adc
sbb
adc
adc
mov
popa
fstps
testb
rorl
subl
ret
in
jo
imull
inc
stos
out
push
or
in
gs
pop
jno
je
sbb
xor
jo
pusha
cwtl
sbb
adc
in
inc
mov
aam
add
push
xchg
or
lods
and
bound
sub
or
imul
push
inc
add
jge
and
inc
outsl
in
outsb
or
mov
mov
nop
inc
add
fcoms
cmp
jle
add
stos
insb
fisubs
jmp
add
rcll
pop
outsl
cmc
push
xor
insl
loopne
xor
mov
movsl
xchg
jne
push
dec
push
xchg
clc
jae
enter
mov
bound
incb
xor
int3
call
aam
xor
mov
mov
inc
aas
daa
fisubrl
lret
in
test
roll
xor
clc
and
inc
insl
and
inc
cmp
xchg
add
jmp
pop
clc
nop
pusha
mov
add
mov
sbb
xchg
mov
add
push
push
add
xor
or
pusha
popa
or
mov
std
es
push
or
and
hlt
mov
sub
sbb
in
popa
lods
popa
push
cltd
mov
xor
sub
jo
push
xchg
movb
pop
or
ret
jns
or
push
add
mov
jno
add
xor
popa
loopne
mov
push
push
mov
mov
loop
rorb
xchg
mov
add
lret
add
nop
sub
push
nop
push
and
pop
pop
or
sub
mov
inc
sbb
push
push
fsubrl
add
sbb
xor
pop
add
data16
cwtl
pop
cmp
cmp
mov
jge
xor
xchg
sbbl
inc
lea
push
test
jecxz
out
xchg
or
leave
adc
dec
push
jle
sbb
mov
mov
add
cmp
xchg
xor
add
imul
fildl
inc
cmp
and
aas
aam
sub
scas
fmull
xchg
inc
in
dec
loopne
adc
xchg
enter
out
mov
xor
add
mov
out
push
aaa
push
pop
fs
xor
cmpb
arpl
mov
dec
hlt
sub
rcrl
xor
xchg
push
in
lret
xor
push
adc
mov
xchg
aaa
or
dec
jl,pn
mov
movsb
ficomps
pushl
add
scas
add
dec
repz
xor
repz
fldcw
jbe
mov
xor
inc
out
mov
std
loopne
add
pop
push
leave
jmp
sub
subl
insl
clc
pop
mov
jbe
adc
test
mov
shr
test
xlat
ljmp
adc
in
sbbl
inc
sbb
in
inc
xchg
jae
movsl
out
lock
xchg
adcb
and
cwtl
nop
ljmp
sbb
push
inc
xchg
dec
sub
add
or
movl
mov
cmp
push
sbb
push
rolb
cli
and
nop
das
cld
sbb
movaps
repz
sub
pop
repnz
cmc
imul
dec
add
cli
sub
or
mov
scas
mov
sahf
add
mov
xchg
fldcw
and
xor
inc
cmp
mov
or
test
pop
andb
jno
std
testb
mov
sub
inc
pusha
cmp
cmpsl
movsb
inc
adc
fsubp
inc
and
pop
stos
lock
mov
dec
mov
cmpsb
repz
test
or
dec
inc
test
add
and
rol
dec
jo
xchg
mov
jge
lret
rcl
and
das
and
mov
sbb
clc
pushf
cs
inc
movzwl
aas
insl
or
mov
pop
sbb
mov
rcll
in
imul
cmp
outsb
mov
insl
out
mov
add
dec
repnz
sub
in
stos
adc
push
andb
roll
lods
mov
movsl
mov
dec
les
lcall
jg
rclw
sbb
call
orb
jnp
sub
sub
cwtl
or
stos
add
sub
and
jl
push
adcl
add
jle
mov
adc
pop
cli
mov
sbb
jo
sbb
test
sub
push
adc
flds
js
dec
pushf
push
call
and
arpl
mov
outsl
sbbl
lcall
je
dec
rcrl
add
add
daa
or
cmpb
out
inc
sub
mov
jno
push
std
clc
sbb
add
inc
cld
add
sbb
sub
xorb
ja
popf
test
stos
mov
fstl
xorb
add
rorb
aam
dec
mov
add
jmp
dec
jns
mov
popf
pop
sbb
cltd
insb
roll
push
xor
sti
pusha
jmp
jmp
test
jns
je
or
inc
pushf
and
call
and
aam
sub
dec
adc
lock
mov
or
mov
cmpsb
jns
mov
lds
adc
dec
and
add
and
and
test
sarb
lock
jle
cmp
pop
addb
cwtl
in
inc
push
stos
inc
push
jo
push
cmp
lea
pop
pop
test
mov
add
shlb
cs
shlb
test
push
shlb
cmc
add
das
cmp
dec
enter
push
mov
mov
cmpsl
add
loop
dec
jo
in
pop
xchg
jmp
cwtl
adc
mov
cltd
enter
imul
test
adc
imul
adc
je
jbe
pop
add
push
sub
push
pusha
inc
fldenv
jns
fisttpll
push
sbb
pop
popa
add
add
pop
inc
lods
mov
les
xor
test
dec
hlt
cli
dec
push
add
adc
mov
in
or
loopne
fadds
int3
xor
or
adc
add
lea
stos
and
pop
ja
jno
cwtl
sub
fdivl
adc
cmp
dec
js
pushl
mul
jbe
int3
popf
test
outsb
mov
dec
sub
in
fidivl
es
fdivrp
or
iret
into
cmp
mov
or
pop
sub
pop
ficoms
or
add
adc
popa
pop
stos
iret
jne
imul
icebp
outsb
xlat
cld
sub
jbe
xchg
repnz
push
fldl
mov
mov
inc
fwait
add
mov
pop
add
jp
mov
adc
enterw
les
mov
fmuls
fldl
scas
sub
outsb
cmp
cmp
add
dec
xor
sub
cmp
fidivrl
loope
sub
sub
mov
dec
xchg
movsb
mov
fwait
mov
dec
cmp
jb
mov
jne
jg
idivl
adc
mov
addl
xchg
loop
jp
or
lock
gs
mov
sbb
stc
cmp
push
pop
adc
xor
or
test
dec
xor
ljmp
push
xchg
xor
jge
jbe,pn
mov
addl
xor
fs
or
jb
aaa
or
test
and
sub
aas
fwait
add
insl
jl
daa
scas
sub
dec
pusha
test
scas
mov
idivl
mov
xchg
mov
mov
call
imul
xor
ja
lods
fisubs
push
jecxz
jb
insb
jge
add
mov
testl
in
or
enter
rcl
test
cmc
dec
pop
fcoms
or
push
addl
fldt
mov
inc
jmp
dec
in
aaa
push
mov
in
flds
push
and
jb
mov
push
sub
sbb
xor
dec
setge
xor
andb
dec
jns
sbb
bound
fidivl
or
dec
mov
stc
verr
hlt
pop
xor
out
fadds
cmp
dec
ss
sti
out
mov
imul
xor
aad
cmpsl
pop
stc
dec
xor
pushf
shll
or
ficoms
pusha
je
push
adc
inc
imul
adc
rcrb
out
pop
mov
xchg
cmp
push
and
or
inc
add
dec
fxch
cmpsl
push
xchg
ret
sbb
inc
insb
mov
pop
popa
js
daa
mov
push
addr16
les
adc
push
jecxz
and
push
dec
popf
jge
je
sbbb
push
lock
xchg
adc
xchg
rcl
movsl
incl
add
fs
xor
dec
sbbb
jbe
sub
push
adc
push
add
mov
add
add
xlat
lcall
insl
sbb
jne
jnp
sub
sub
imul
or
adc
sbb
sub
mov
push
adc
sub
test
sarl
mov
loop
lock
mov
add
andb
loopne
adc
dec
sahf
pop
in
aam
or
ljmp
add
sub
mov
call
or
ret
xor
sbb
lret
out
sub
add
into
xchg
outsl
rolb
cmp
dec
xchg
aas
pop
fsts
fstl
push
mov
add
inc
pop
xchg
ja
fists
add
adc
push
fisubrs
inc
push
bound
fldcw
nop
push
pop
pop
arpl
sahf
test
test
insl
mov
mov
mov
sbb
push
test
daa
cmp
sbb
jno
and
sub
mov
dec
fs
adcl
add
sub
in
mov
add
sub
mov
add
sti
pop
pop
nop
xor
sbb
fcompl
lods
mov
push
adc
rcrl
sub
mov
mov
add
pop
adc
decb
sbbb
sahf
cmp
xor
out
pusha
push
mov
bound
and
sti
push
xorb
push
push
data16
sbb
in
mov
je
stos
pop
add
cmpsl
mov
jae
jb
sub
jo
push
adc
lret
jl
fiaddl
cmp
mov
jo
xchg
lret
sub
sub
xor
dec
push
mov
sub
popf
les
aas
sbb
lahf
xorl
stos
push
add
mov
jecxz
push
sub
daa
pop
sbb
or
aad
pop
rorl
mov
fcmovne
mov
add
add
dec
push
or
or
mov
cld
lret
mov
push
adc
test
cld
stc
adc
lods
pop
dec
mov
xchg
les
int
fwait
fs
xor
jl
aam
and
add
cld
fsubrs
inc
sub
shrb
push
mov
daa
lea
xor
xlat
or
or
inc
hlt
prefetchw
mov
add
iret
pop
popa
and
lods
fs
adc
ds
sub
mov
movsl
mov
add
mov
sub
js
and
aaa
das
cmc
dec
mov
mov
fsts
and
pop
xor
cmpsl
and
sub
daa
push
pop
lret
jb
cmpsb
jmp
inc
sub
push
cmp
jae
mov
sbb
mov
sub
into
enter
cmp
push
subb
fistl
in
addr16
jecxz
add
pop
add
rol
clc
add
insb
adc
in
vmwrite
xor
je
mov
inc
jge
and
jle
add
pop
lret
or
or
popf
xchg
ss
das
lea
into
repnz
cmp
or
mov
icebp
movsb
sbb
or
adc
sub
pop
sub
and
add
or
ds
adc
shl
dec
lcall
daa
arpl
fdivrs
loopne
sbb
mov
and
mov
add
stos
fisubs
xor
mov
aam
mov
pop
stc
outsb
and
jbe
rcrb
inc
adc
pop
push
sbbb
mov
mov
push
ret
test
loopne
pushfw
add
adc
daa
pop
in
jb
test
fbstp
pop
es
aaa
jns
xor
imul
addr16
int
out
loopne
xchg
push
add
mov
mov
jmp
mov
xchg
rorl
test
and
add
clc
push
outsl
inc
pusha
pop
cmc
data16
cs
or
sub
pop
inc
sbb
outsl
or
sub
hlt
ds
and
hlt
les
orb
ja
addr16
sbb
mov
fsubs
popa
nop
or
or
data16
xchg
lods
outsb
ror
test
fs
mov
add
adc
insl
int3
nop
imul
sbb
mov
enter
lods
test
out
xchg
insb
push
aas
mov
xchg
pop
sahf
pop
lret
lcall
and
push
push
mov
inc
dec
and
lock
fisubs
les
and
cli
add
pop
imul
add
cmp
inc
icebp
push
cld
or
xchg
or
add
dec
mov
aam
sbb
sti
ds
mov
insl
cld
mov
dec
out
fidivrs
inc
mov
pop
pop
imul
sbb
rcl
cmpsl
mov
xchg
lret
cs
jo
out
or
jge
sbb
arpl
decl
daa
daa
shl
xor
popf
add
jmp
xor
test
std
push
mov
mov
mov
xchg
dec
sub
popf
mov
cld
add
repnz
dec
add
sbb
and
imul
adc
vpshld
aas
cmpl
push
push
add
pushf
xor
movsb
movsl
adc
call
shll
fmul
mov
loop
dec
fld
test
fdivrs
or
mov
xor
cwtl
add
test
jmp
jl
cltd
inc
jmp
adc
mov
pop
sbb
xchg
dec
cmp
aaa
loopne
shlb
adc
adc
dec
and
test
adc
add
pusha
mov
cmp
jno
cltd
fs
inc
pop
inc
lret
orl
push
out
pusha
inc
sub
adc
nop
enter
fistl
ljmp
rcll
arpl
repnz
imul
jmp
std
pop
add
mov
jo
clc
sub
jo
lret
jecxz
mov
out
dec
adc
lds
pop
cmp
mov
xor
mov
mov
shll
pop
xor
fldl
lea
add
dec
lock
fwait
xchg
cmpb
fdivrs
sbb
and
sbb
test
es
pusha
and
add
popa
push
mov
inc
pop
repnz
xchg
nop
add
sbb
fs
pushf
cvtps2pi
jo
xchg
movswl
cmp
xor
mov
mov
popf
adc
data16
or
jns
add
dec
add
jge
sahf
mov
jae
addb
xor
pop
popa
inc
leave
in
add
jae
js
test
pop
int
adcl
lea
sar
sbb
aas
bound
add
sbb
outsl
test
mov
adc
repnz
cmp
add
fsubs
adc
imul
add
xchg
hlt
jg
sbb
pop
push
enter
push
pop
jbe
cld
push
sub
pop
mov
lret
in
or
mov
cmp
dec
fneni(8087
icebp
mov
popf
mov
jbe
pop
add
sbb
loop
hlt
xor
mov
sbb
sub
je
sbb
addb
fldl
popf
sahf
imul
cmp
mov
push
mov
xchg
adc
pop
in
je
pushf
cmp
das
imul
sbb
add
mov
sub
mov
mov
lds
mov
adc
adcb
sub
pop
and
push
mov
jge
xorb
pop
shl
lahf
dec
es
pop
pop
rolb
adc
cwtl
mov
jno
sub
push
lds
into
push
mov
or
pop
lahf
xor
or
lock
mov
mov
jnp
fwait
ljmp
shll
roll
pop
inc
out
jmp
stc
test
adc
sub
add
cwtl
jo
clc
sti
shl
sbb
int3
add
push
dec
shlb
mov
xlat
mov
hlt
in
mov
mov
outsb
mov
add
call
jae
xor
lds
jne
push
xor
xor
cld
xor
movl
xor
or
mov
adc
lock
lods
push
loope
inc
xor
mov
or
test
xor
cmpsb
mov
cmp
data16
jnp
cmpsb
popa
loopne
lcall
stos
fstpl
mov
mov
popa
add
and
add
adc
sarb
pop
add
add
adc
shrb
dec
lret
add
mov
sub
mov
sarb
xchg
cmpsl
adc
scas
test
adc
push
rolb
xor
ljmp
mov
cs
jge
int3
mov
pop
das
fildl
sbb
add
xor
cs
mov
pusha
cld
add
mov
out
inc
fwait
mov
andb
mov
inc
add
fsubp
mov
popa
clc
dec
mov
nop
daa
rorl
dec
iret
fnstcw
xor
adc
add
icebp
sub
sbb
dec
dec
mov
inc
cmp
int3
sub
adc
test
jne
imul
sbb
or
sub
sub
cmc
add
and
mov
popa
cwtl
push
pop
or
rorb
dec
mulb
pop
jo
push
mov
iret
repnz
rcll
inc
mov
dec
subb
jno
add
fisttpll
pop
jne
lods
movsl
fs
add
inc
ficompl
push
js
xorb
js
mov
aaa
or
xor
adc
add
test
mov
xchg
xchg
inc
jmp
xor
lock
test
dec
push
xor
mov
pop
lods
mov
and
push
xor
shll
push
xlat
fcompl
jnp
jb
sbb
bsr
mov
add
dec
inc
jmp
pop
add
int
jle
movb
pop
and
sub
inc
mov
xchg
and
movsl
dec
pop
xor
add
mov
jno
push
dec
mov
jnp
push
adc
popf
mov
loop
xor
test
sub
mov
cmpsl
xchg
sbb
in
aas
call
cld
dec
or
jb
cmpsb
mov
dec
js
add
fs
arpl
dec
pop
fcomps
rorl
sahf
hlt
dec
addb
and
mov
add
xor
add
sub
xchg
mov
and
adc
sbb
add
outsb
test
popa
sbb
adc
cmp
push
jl
out
movsb
add
pop
sbb
test
mov
inc
add
sub
push
mov
mov
adc
movsl
fwait
and
dec
adc
fisttpll
or
popa
les
pop
xchg
sbb
adc
rol
ds
adc
push
int3
sub
lea
add
adc
and
push
push
lods
ret
pusha
mov
dec
jl
add
jmp
pop
add
sub
jne
testb
arpl
lcall
sti
xchg
sbb
inc
mov
xlat
add
repz
dec
mov
or
xchg
push
mov
fmull
push
lret
mov
imul
inc
dec
push
cmpl
cmp
out
lock
push
and
inc
dec
add
adc
insl
out
xchg
mov
and
lds
lret
add
iret
je
add
cld
or
jnp
xchg
in
psubd
sbb
inc
push
pop
push
add
mov
adc
mov
ds
scas
andb
or
lock
pop
leave
add
shll
or
mov
pop
aaa
adc
add
sahf
pop
test
add
mov
shll
xor
ljmp
mov
movsl
inc
adcl
inc
or
insl
add
pusha
add
mov
mov
scas
add
in
dec
test
imul
les
decl
dec
dec
push
roll
fidivs
inc
mov
stos
or
pop
aam
inc
add
mov
fdivrl
pop
sbb
mov
into
jo
ficompl
add
das
add
mov
and
pop
loop
cli
xor
out
aaa
jo
adc
syscall
add
ja
jae
add
fstpt
sbb
sub
xor
cltd
push
add
fsubl
jmp
addr16
jb
cld
jge
test
addb
mov
push
in
fcoml
sbb
outsb
inc
std
test
cmpl
sub
lahf
sub
jge
push
js
push
rolb
pop
roll
sub
cwtl
ja
pop
inc
andb
sti
pop
in
mov
adc
test
loop
cmpsl
fwait
pop
mov
lret
xor
mov
in
andb
add
shrb
sub
inc
repz
mov
jb
or
pushf
sbb
and
ret
cwtl
cmp
inc
pop
add
outsl
mov
pop
aas
mov
ret
int
xor
in
or
aam
or
push
out
inc
ret
pop
enter
mov
scas
push
hlt
add
rorl
or
data16
inc
mov
add
sub
sub
sti
jg
das
add
cli
ja
push
pop
inc
xchg
shlb
push
insl
out
or
push
js
jmp
dec
pop
fadd
cmp
jns
shld
xor
hlt
and
rclb
xorb
stos
mov
cs
ja
pop
rcr
pop
movsb
add
stos
iret
sub
jp
adc
lods
inc
sti
lea
mov
add
test
mov
jne
imul
add
cltd
in
xchg
mov
adc
dec
shr
ret
push
outsl
stc
nop
inc
jge
mov
mov
in
xchg
pop
sbb
jno
xor
mov
jl
adc
sub
xor
cwtl
arpl
js
xchg
dec
add
jge
pop
add
stos
xlat
pop
xor
and
xorb
xchg
push
sbb
mov
jnp
sub
arpl
xor
and
testl
jp
test
loop
push
in
lret
mov
sub
cmovs
test
popa
or
xlat
insb
sub
stc
jge
scas
imul
sbb
jg
cltd
aaa
jno
ds
pop
nop
cmpl
push
xor
cmp
jne
in
mov
and
stos
add
push
out
dec
pop
cmp
xchg
shrb
cmp
inc
and
mov
inc
xor
dec
and
outsb
dec
dec
icebp
adc
or
cmp
push
sbb
add
xchg
mov
lds
adc
cmpsl
xor
aaa
fnstcw
add
lea
aas
nop
xchg
xor
data16
pop
loopne
andl
in
rolb
mov
xchg
mov
cmp
sub
add
insl
dec
filds
movsb
sbbl
push
add
push
repnz
add
xor
inc
insl
int
aad
sbb
fcmove
sub
dec
xor
sti
mov
mov
lock
loopne
mov
nop
mov
mov
fiadds
xor
mov
add
xor
dec
filds
mov
mov
and
inc
andb
lods
jb
clc
inc
add
bound
imul
sbb
jne
shlb
inc
lods
dec
dec
mov
mov
lds
jge
rolb
in
sbb
add
xor
mov
add
jmp
movl
xorl
lock
sti
rorb
jnp
or
cltd
add
jb
in
push
cs
mov
pop
pop
cld
sbb
add
pop
mov
add
mov
jmp
add
cmp
int3
push
dec
add
push
test
add
mov
lock
mov
cmp
pop
imul
add
xor
add
fisubrs
push
or
loop
scas
sbbb
jne
xor
adc
jl
or
aam
sub
sti
xor
adcl
or
movsb
add
rcrb
inc
push
mov
iret
xorb
int
add
cmp
jl
jle
xor
sbb
sub
cld
fs
nop
xchg
add
mov
sub
xor
or
jmp
add
lds
repnz
fdivrl
add
mov
cmp
bts
push
push
push
add
fcoml
mov
leave
incb
adc
cmp
cs
sub
sbb
xchg
and
fists
popl
inc
or
push
xchg
sahf
inc
add
xchg
xchg
out
out
jnp
push
imul
imul
mov
jae
fidivrs
add
inc
and
add
and
mov
clc
and
imul
or
sbb
and
add
inc
cmp
scas
jnp
orl
xlat
jns
arpl
dec
sbb
popf
bound
outsb
mov
and
cmpsb
xchg
arpl
push
add
xchg
pop
imul
pop
pop
divb
dec
push
mov
ficoml
and
mov
or
add
js
testl
push
imul
mov
add
sub
add
insl
outsb
xor
cmovp
add
cmpsb
sub
cwtl
add
fwait
sbb
mov
out
in
test
loopne
add
in
add
or
ror
sbb
lret
and
xor
roll
lahf
mov
aas
loope
cwtl
fcompl
add
mov
xor
pop
pop
cmpb
push
aas
leave
out
or
xchg
add
dec
testb
cmpl
movups
xchg
inc
adc
ds
test
xchg
pop
es
inc
dec
push
push
arpl
sub
lret
inc
pop
mov
pop
add
enter
insb
pop
add
and
repz
scas
popa
addb
mul
add
add
sahf
inc
lods
or
jg
inc
insb
loop
dec
cmp
pop
sub
adc
pop
add
call
add
sbb
leave
mov
movsb
xor
cmpsl
test
js
pusha
movsl
adc
dec
add
dec
sub
aad
fucomp
pusha
mov
pop
jmp
adc
sbb
cmpsb
or
cli
pushf
imul
adc
cltd
lcall
leave
add
add
cmpsl
enter
add
inc
adc
js
sbbl
mov
mov
mov
outsl
rorl
and
mov
movsl
cmpsb
imul
shlb
adc
mov
leave
xor
out
or
mov
add
and
or
xchg
or
inc
cmp
inc
pop
fldl
mov
xor
cmpsb
lret
add
push
mov
les
lret
xorl
enter
inc
jecxz
sbb
int
and
push
rcrb
push
scas
add
fmull
mov
sub
hlt
cmc
rclb
mull
inc
out
pop
rcrb
rcll
and
imul
stos
and
push
das
hlt
call
and
std
xchg
push
dec
loope
cmp
sub
xchg
pusha
xchg
push
in
jns
addb
fs
push
push
popl
cmc
add
rcrl
loopne
or
cmpsb
daa
call
sub
sub
or
sbb
xorl
sarb
aad
pop
outsl
out
add
mov
ret
aaa
inc
cmp
mov
push
push
add
sbb
jmp
pop
push
pop
test
mov
cld
out
sbb
jo
es
sub
mov
dec
inc
push
mov
dec
arpl
lcall
inc
fidivrs
mov
xchg
mov
add
lahf
dec
cmp
outsb
out
xchg
xor
repz
les
iret
rcrb
mov
fstp
cmpb
add
icebp
mull
ja
or
xchg
outsl
in
lcall
repnz
and
mov
sub
push
jecxz
and
mov
outsl
mov
push
dec
scas
push
xor
sub
or
pop
in
mov
fldcw
insb
mov
pop
push
adc
loope
inc
or
jle
daa
sbb
mov
sub
jne
fstpt
xchg
loopne
mov
or
inc
mov
add
inc
inc
popl
pushl
xor
aas
loopne
ds
xchg
fisttpll
into
pop
psubsb
cmp
jbe
adc
and
dec
pop
fistpll
loopne
aas
dec
inc
dec
sti
jo
sbb
and
add
sub
mov
sbb
sub
pop
nop
xor
add
cmp
sarb
mov
mov
sbb
mov
jb
xchg
or
popa
dec
cld
jge
dec
pusha
mov
call
pop
add
mov
mov
or
jb
pop
popa
outsl
outsb
dec
pop
movsb
sub
mov
imul
sbb
jmp
loopne
dec
pop
daa
mov
jg
scas
rclb
or
adc
pusha
mov
test
pop
adc
or
mov
test
shr
xchg
mov
and
xchg
or
xchg
sbb
jo
lahf
push
xchg
jne
fbstp
lds
jo
pop
push
jno
fstps
push
push
add
add
shl
notl
mov
or
xor
or
sbbl
mov
fcoms
push
in
jae
mov
jecxz
add
fidivs
shl
inc
cld
out
out
add
xchg
xchg
jae
push
push
cmp
pop
adc
stc
xor
mov
lock
or
push
repz
outsl
add
mov
cltd
lcall
dec
inc
int3
ja
ret
sbb
data16
sub
movzwl
fisttps
add
clc
cli
fsubl
mov
int3
jo
add
push
add
xchg
push
stos
inc
mov
mov
xor
or
daa
sarb
inc
push
add
dec
inc
lret
or
dec
adc
rol
push
loopne
jl
add
push
ss
xor
xor
sub
bound
lret
icebp
pop
inc
sbb
arpl
dec
xchg
movnti
sbb
push
pop
cmp
js
test
add
cmp
inc
das
scas
mov
sub
xor
add
mov
icebp
sbb
pop
add
sub
add
mov
leave
ljmp
mov
mov
es
sbb
orb
sbb
outsb
sbb
loope
pop
loope
adc
jnp
fwait
lret
loope
movsl
sbb
mov
lahf
or
or
or
dec
pop
pop
sub
mov
shrl
or
add
mov
add
or
or
inc
push
sbb
add
adc
insb
fwait
dec
data16
cltd
xor
sbb
aad
push
xor
gs
adc
sub
pusha
sub
or
adc
leave
or
rcll
and
adc
lods
dec
sbb
and
push
cmp
mov
call
pop
sbb
xchg
or
cld
sbb
inc
and
ret
clc
sub
testl
push
inc
push
lcall
shrl
movsl
movl
xchg
or
scas
xchg
push
cmp
les
int
sbb
hlt
mov
fsts
mov
ret
xor
test
xor
push
mov
addl
loop
cli
jne
jge
or
roll
enter
sbb
add
pusha
xor
dec
or
dec
push
xor
inc
push
inc
inc
outsl
pop
inc
sub
fimuls
mov
movd
pop
fadds
sub
pop
dec
cmp
loope
mov
flds
test
js
mov
scas
shr
jmp
imul
mov
pop
fld
sbb
add
xor
lds
fcoms
adcl
ret
mov
push
or
imul
inc
cmp
dec
and
add
out
and
jo
adc
and
mov
xchg
inc
push
orb
mov
mov
xchg
jb
mov
dec
sub
test
adc
je
stos
loopne
push
and
cmpsb
cmp
pop
add
adc
mov
shll
inc
adc
mov
sbb
dec
scas
clc
icebp
addl
add
push
and
lods
sti
or
fsubr
addb
iret
rorb
jns
push
and
add
enter
inc
cmp
mov
dec
outsb
add
add
inc
inc
push
pop
shrb
mov
mov
push
movsb
add
xor
pop
or
sub
flds
insl
mov
and
add
xor
mov
roll
sbb
sub
mov
xchg
add
jns
mov
aas
push
add
pop
fs
xor
fstps
lock
pop
cmp
push
call
lea
clc
xor
or
adc
inc
xor
pop
cwtl
inc
je
fists
clc
sahf
xor
mov
in
and
movb
aam
xor
mov
int
jmp
cltd
sbb
jns
rolb
jno
outsb
scas
mov
cmp
sub
cmp
add
xchg
add
lods
imul
jne
mov
clc
adc
scas
incb
test
aaa
ret
mov
nop
test
stos
ret
add
jmp
mov
or
mov
js
testb
xor
sbb
les
sarb
sub
mov
sub
and
mov
cwtl
in
add
add
push
scas
mov
sub
sub
sub
dec
add
shll
in
dec
shrb
push
mov
or
and
jg
pop
add
je
popa
lods
ror
je
scas
aad
sub
sub
sbb
jge
aaa
hlt
jnp
xor
lock
mov
xor
pop
jae
stos
dec
stc
shlb
fdivrs
icebp
dec
push
jge
test
inc
rcrl
jno
aas
loope
push
mov
pusha
inc
and
fcomi
adc
adc
xorb
mov
and
push
and
and
dec
call
cli
jmp
lret
jo
sbb
cwtl
dec
sbb
or
loopne
in
cmp
into
push
dec
pop
add
dec
sbb
je
mov
test
or
and
or
mov
loop
add
sub
xor
adc
insb
fadds
adc
lret
xchg
sbb
shrb
and
and
fsubrl
pop
and
jo
pop
jno
push
adc
pushl
cmc
rolb
bsf
sbb
jle
lret
mov
lock
mov
add
mov
addr16
push
in
ja
lds
xor
mov
out
adc
lods
jge
aas
xorb
cli
das
push
add
lods
mov
jmp
and
mov
rolb
and
xor
mov
orb
outsb
pop
inc
mov
inc
test
push
or
add
mov
inc
bound
les
jmp
jge
add
sub
inc
jp
fucomip
or
xor
loopne
xor
add
push
mov
add
aaa
scas
mov
and
xor
add
dec
adc
insl
push
add
aas
cmp
dec
xor
fistl
in
test
sbb
fcmovu
leave
shlb
jg
dec
sub
bswap
lahf
jmp
lock
add
add
pop
xor
fisttps
lcall
aam
or
add
fdivrs
cmp
scas
push
cwtl
push
outsb
push
and
out
inc
test
add
jecxz
add
sbb
inc
pushf
adc
fcoml
inc
subb
movsl
test
pushf
es
jo
inc
sbb
mov
aam
aaa
gs
pop
mov
clc
lea
cwtl
cltd
int3
sbb
or
in
cmp
push
dec
push
push
cwtl
and
mov
add
pop
lods
test
mov
fiadds
jne
mov
dec
add
test
inc
push
cmp
and
xor
aam
cmp
mov
gs
push
andb
popl
jecxz
test
fwait
dec
sub
push
lods
dec
jp
loopne
jge
add
lods
test
loopne
push
enter
shrl
cld
and
add
inc
les
xchg
mov
mov
xor
and
cmp
pop
test
std
popl
xorl
ja
call
fidivrl
cltd
add
dec
ja
xchg
add
add
add
lcall
int3
inc
mov
loopne
adcb
lods
jb
add
dec
mov
repnz
xchg
fildl
scas
cli
clc
cmp
into
adc
es
add
xchg
test
jp
outsb
mov
fidivs
sbb
inc
insb
cwtl
std
and
xchg
lock
jle
xor
test
inc
icebp
pop
push
and
cmpsb
sub
jo
ja
outsb
jb
jns
movsb
test
into
dec
add
std
jp
dec
dec
faddl
sub
xchg
and
inc
cmp
mov
shll
mov
dec
push
sub
mov
add
dec
mov
inc
pusha
ss
add
dec
fmuls
sbb
popf
mov
addb
add
jmp
cs
add
sti
add
dec
adc
sbb
jbe
xor
cmc
pop
jl
dec
push
push
fisttpl
adc
push
jecxz
ds
adc
pop
sbb
sti
aaa
aam
fisttpll
mov
and
add
mov
movsl
pop
rclb
movsb
jl
add
insl
add
sub
in
xchg
mov
sbb
jbe
pushf
mov
mov
adc
addb
out
je
jb
add
inc
mov
jns
hlt
adc
mov
inc
js
sbb
inc
jbe
fucomi
fsubl
icebp
xor
xor
icebp
add
jg
lods
insb
sub
in
loop
rcrl
jg
out
mov
inc
mov
mov
mov
lcall
push
push
mov
and
add
and
addr16
pop
aaa
es
jge
push
push
and
scas
mov
or
leave
xlat
xchg
xorb
lods
aam
fsubp
fisttpl
add
pop
fsubrl
pusha
pop
les
xorb
sub
aam
and
jge
pop
cmpsb
add
cmpb
popa
out
hlt
std
jg
mov
mov
jo
push
mov
sbb
mov
jg
jp
jno
out
mov
xor
inc
js
mov
hlt
or
pop
and
mov
sub
ljmp
popa
xor
clc
add
sub
and
fsubrl
dec
xchg
sbb
loop
cmc
mov
or
fisttpl
das
mov
lods
sub
push
mov
lods
or
enter
push
mov
ret
dec
add
int
add
fs
cmpsb
pop
repz
dec
mov
fdivs
jo
mov
sti
jnp
mov
or
mov
mov
andb
lds
ja,pt
push
add
and
sub
movsb
jno
fdivl
shll
test
mov
cmc
js
add
inc
lds
pop
or
test
pop
in
adc
adc
stos
shlb
subb
ss
adc
neg
mov
lods
mov
jne
call
jge
xchg
into
add
cmp
and
push
fcompl
out
dec
push
or
cld
std
cmp
add
andb
jae
sub
dec
in
icebp
xor
sbb
mov
sbb
and
sbb
add
mov
mov
aaa
push
scas
mov
mov
scas
fnsave
jmp
dec
js
pop
and
addr16
and
aad
mov
fsubr
fnstcw
dec
dec
add
push
cmc
jmp
xor
cwtl
in
roll
add
pop
mov
mov
fiaddl
xor
inc
lods
bound
and
into
and
pop
adc
pop
adc
add
rclb
inc
add
movsb
push
inc
cmp
xorb
leave
loope
xchg
cld
add
imul
mov
adc
jo
add
dec
xor
scas
aad
pusha
dec
and
inc
push
cli
and
push
sub
and
mov
into
sbb
ret
dec
cs
fsin
out
push
ret
lods
dec
mov
call
mov
insb
pusha
inc
mov
cmpsl
push
inc
nop
arpl
jo
lock
add
popa
icebp
jbe
jo
loope
addr16
dec
inc
and
push
cld
jns
sbb
cwtl
adc
jp
aaa
mov
jl
mov
sbb
divb
mov
add
dec
gs
jl
in
xchg
jl
addr16
incb
mov
scas
loop,pn
dec
dec
add
in
adcb
mov
pop
outsl
scas
cmpsl
add
int3
ljmp
jg
adc
mov
xchg
lods
lock
add
mov
loop
xor
push
cs
enter
pop
loopne
sub
and
ss
inc
ror
inc
fmull
inc
sub
pop
out
popf
add
ret
jne
fwait
mov
inc
add
cmp
int3
sub
pop
inc
mov
popa
mov
add
sbb
mov
push
mov
enter
dec
add
cmpsl
lods
xchg
pop
rclb
dec
lret
push
enter
aam
inc
pusha
jns
pop
pinsrw
mov
sbb
sub
into
movsl
pop
je
xchg
add
jbe
or
dec
arpl
xor
add
mov
int
sahf
insl
xor
cmp
inc
hlt
push
lea
jbe
adc
call
fiaddl
lds
or
fcomps
sub
out
or
or
jns
or
sub
cmpsb
xor
cmp
push
and
add
xchg
push
push
test
xchg
xor
inc
ror
mov
or
cmp
mov
jbe
sbb
aad
jns
sarb
and
and
fldenv
jo
scas
lods
sbb
pop
ss
divb
add
and
cmp
mov
xchg
xchg
cld
adc
and
xor
ja
in
dec
add
mov
and
sahf
fs
inc
cmp
lock
call
dec
push
adc
cmp
inc
daa
shrl
test
bnd
addr16
icebp
xchg
mov
dec
pushf
add
xchg
cli
fidivl
scas
das
inc
mov
xchg
push
in
mov
add
inc
add
aas
fidivs
pop
rcr
or
xor
mov
push
sbbb
pop
adc
inc
inc
int
xor
or
cs
in
clc
sbb
xor
push
iret
dec
shr
xor
mov
adc
push
and
cmp
and
in
xor
ret
mov
cmpsl
cmp
loopne
cmp
mov
mov
mov
mov
cli
and
push
dec
ljmp
adc
push
and
inc
mov
mov
cmp
push
leave
mov
paddusb
add
fimuls
orb
cmp
mov
mov
test
sbb
call
mov
push
sub
in
pusha
sahf
sbb
fisttpll
scas
sub
dec
mov
ljmp
add
mov
lret
aam
jp
in
js
hlt
push
mov
inc
outsb
add
outsl
les
rorb
out
mov
add
lods
aam
inc
daa
mov
sub
inc
sbbw
in
ret
nop
in
in
pop
iret
dec
cmp
test
inc
add
mov
adc
inc
fcoms
and
cwtl
add
es
mov
test
inc
shrb
add
shl
sti
sub
les
cmp
add
inc
leave
dec
add
sub
lcall
xchg
call
mov
sub
or
mov
and
push
es
pop
pop
mov
xor
repnz
xor
ja
sbb
xchg
dec
les
xor
xor
add
adc
cmp
imul
pop
add
jbe
fdivs
or
fnstcw
cmp
jmp
insl
push
pusha
mov
adc
and
inc
in
or
in
xorl
mov
cmp
jl
mov
push
cs
mov
repz
xor
dec
pop
in
sti
push
aad
push
mov
or
mov
add
and
les
add
add
fwait
lods
mov
mov
es
clc
xchg
add
lock
sbb
xchg
or
scas
aad
sub
dec
cmp
ja
dec
je
aam
mov
pop
popl
cwtl
fsub
lahf
pop
test
mov
pop
pop
pop
jl
inc
scas
les
std
inc
lods
inc
and
add
enter
jg
xlat
jge
or
shrl
pop
inc
orb
cmp
lret
shlb
dec
ret
lods
sbb
rcl
cwtl
mov
mov
enter
scas
hlt
stc
xchg
pushf
jl
pop
adc
inc
mov
stos
popa
mov
jp
add
les
pop
seto
adc
sar
push
add
lds
dec
nop
or
sarl
xchg
jns
and
xchg
cmp
dec
mov
inc
test
inc
ss
lods
add
xchg
leave
lcall
ss
or
lea
test
xchg
mov
test
sti
jbe
mov
int3
mov
js
fs
enter
add
movsl
add
pushf
shlb
push
repnz
pop
mov
je
clc
sahf
pop
jne
push
int3
mov
test
dec
dec
add
pop
mov
sbb
inc
sahf
scas
jns
imul
pusha
mov
shrb
cmp
mov
les
sbb
and
sbb
scas
pop
add
mov
pop
xchg
aad
jecxz
sarb
enter
xchg
mov
mov
ror
xorb
fxch
mov
subb
push
add
add
imul
dec
sbb
aas
mov
lods
das
in
or
dec
sub
xor
inc
dec
sbb
jo
movsl
xor
pusha
jns
loop
push
dec
xchg
add
dec
mov
lahf
dec
ss
inc
sbb
ja
jbe
sti
xchg
inc
pop
movsl
inc
xlat
mov
shl
les
xor
jp
dec
lcall
movsl
push
inc
adc
daa
inc
and
push
cmpb
or
sub
and
cmp
sbb
icebp
cmp
xlat
stos
cmp
jo
pop
cmp
jne
outsl
icebp
jbe
jnp
out
cmpsl
xchg
inc
fbstp
test
push
or
or
or
es
test
xchg
xchg
mov
xchg
fidivs
dec
in
sub
sub
mov
orb
sub
lods
add
inc
mov
jecxz
fldenv
xchg
mov
call
shrl
aaa
mov
mov
xorb
dec
dec
dec
cwtl
psubsb
mov
xchg
andl
sub
fmuls
mov
or
enter
adc
mov
cmp
icebp
in
aas
sbb
imul
mov
add
das
push
sbb
and
jns
aaa
cmp
into
mov
adc
nop
jp
sbb
dec
adc
es
fcmovne
andb
push
rcll
push
rorl
mov
cli
aam
dec
mov
xor
and
xorb
in
mov
or
xchg
xor
inc
jae
cwtl
faddl
stos
or
xlat
movhps
inc
mov
addl
cmpsl
or
orb
lret
push
adc
xor
sub
arpl
sbb
add
push
es
int
aam
das
or
loopne
push
les
clc
mov
jl
addb
dec
lock
dec
mov
adc
lods
jne
outsl
ja
in
dec
xchg
mov
mov
xor
nop
jl
adc
inc
cmp
imul
xor
ss
pop
test
xor
cld
roll
mov
mov
mov
shlb
inc
mov
pop
push
jge
pushf
jl
push
add
call
pop
inc
add
cmpsb
sbb
mov
nop
lods
les
jmp
mov
pushf
jns
sbb
mov
dec
jle
adcl
mov
outsb
inc
jae
mov
sbb
repz
cld
or
test
mov
mov
cmp
sbb
mov
jl
mov
push
mov
xor
ljmp
xchg
push
lds
enter
or
xor
sti
lahf
lods
mov
cmc
inc
jae
jno
lock
movsl
add
in
push
dec
dec
xor
rclb
pop
lret
loopne
outsb
mov
lods
sub
scas
mov
and
jg
cmp
xor
jge
pop
das
and
inc
sbb
add
sub
mov
or
scas
xchg
adcb
sar
stos
leave
inc
add
call
popa
push
sbb
xor
int
dec
xor
xchg
rclb
add
enter
mov
xor
and
insl
sub
lret
sti
dec
push
sarl
sub
adc
les
pusha
movsl
push
xchg
mov
jecxz
push
data16
sti
fadd
test
inc
les
sahf
fs
rorl
clc
enter
fcompl
add
lahf
jle
push
andl
test
insb
or
or
add
test
jnp
out
push
jae
sahf
pop
dec
faddl
sbb
imul
cmpsb
sub
xchg
int3
movsl
pop
loopne
aas
sbbb
nop
test
out
sarb
andl
enter
popa
adc
movsb
pop
mov
sbb
adc
or
pop
add
test
insl
sbb
or
dec
push
pop
lretw
mov
mov
and
lea
mov
mov
inc
pop
mov
insl
mov
test
daa
in
in
pusha
xchg
mov
mov
dec
dec
dec
fmull
lods
out
mov
add
mov
in
xchg
dec
jl
scas
mov
mov
mov
lods
mov
pop
or
or
cmp
into
dec
jl
add
push
out
mov
loopne
xchg
test
mov
int3
adc
cmc
jl
or
jle
in
test
jb
and
fidivs
jl
fisttpl
add
iret
mov
xorb
orl
int3
add
movsl
mov
mov
jbe
sub
mov
xchg
test
mov
sub
mov
jns
add
jecxz
movsl
add
push
bound
push
sbbb
jl
add
pop
jnp
mov
add
add
mov
test
xor
pop
add
aad
pushf
mov
xchg
adc
adcl
mov
bound
or
push
or
cld
add
dec
xchg
sahf
dec
xor
xchg
test
add
and
pop
rcrb
xor
mov
dec
nopl
inc
std
xor
inc
cwtl
and
and
stos
or
mov
pop
daa
stc
mov
sahf
adc
sahf
sub
repnz
or
mov
adc
mov
or
call
and
push
mov
dec
inc
pop
in
and
xor
and
cmp
dec
mov
test
inc
add
xlat
add
addr16
int3
add
shll
jbe
pop
add
cmp
lods
test
or
cmp
add
movsl
sbb
xchg
in
test
jp
in
iret
pop
cmp
in
out
xorb
xchg
mov
es
rolb
pop
add
mov
sub
adc
stos
pop
mov
cmp
ja
jbe
in
aam
les
pusha
test
inc
and
xchg
les
add
stos
repz
in
pop
les
jl
mov
sub
pusha
adc
xchg
into
pop
and
fadd
and
mov
sub
call
inc
incb
xchg
dec
dec
sahf
add
minps
mov
xor
icebp
in
sbb
movsl
pop
mov
loopne
xor
xchg
jge
lods
jnp
outsl
aam
cwtl
adc
inc
jns
imul
and
stos
xor
movsl
cwtl
adc
mov
jl
cmp
stos
das
mov
add
xchg
sarb
ss
sub
mov
or
jns
jl
sbb
push
add
mov
sub
bound
cmp
mov
add
lods
mov
xor
and
test
clc
aaa
pop
cmovle
out
and
or
mov
mov
shrb
xor
leave
lret
cmp
push
xchg
jmp
xchg
and
orl
inc
stos
pusha
shl
cmp
cld
mov
icebp
sbb
scas
inc
mov
mov
je
mov
jno
movl
fadds
mov
cmp
lea
stc
adc
es
sbb
sub
add
mov
jns
mov
cmpl
das
movl
int3
pop
sti
sbb
cld
adc
es
movsl
aam
out
arpl
xchg
cmp
fdivl
pop
add
shr
int
pop
inc
and
in
jae
cmp
add
mov
xor
sub
and
inc
sbb
repnz
sub
xchg
inc
pop
in
pusha
dec
andl
loopne
cmp
cmp
out
je
add
fwait
call
sti
xchg
dec
je
in
sbb
sub
sub
fsub
mov
pop
adc
das
add
xchg
mov
cmp
fsubrl
add
movsl
cmp
pop
adc
and
pop
inc
mov
or
add
hlt
fwait
in
mov
mov
xchg
faddl
cltd
movl
lcall
inc
dec
cmp
mov
or
jbe
jbe
push
push
inc
add
sbb
or
and
test
dec
lods
loope
jb
adc
xchg
jl
pop
outsb
and
bound
leave
xor
add
adc
push
xchg
adc
cmp
mov
or
and
and
pop
out
cmp
mov
jo
and
in
inc
mov
loope
inc
movsl
xor
jns
sbb
push
movsb
clc
pop
adc
das
mov
subb
and
xor
aam
inc
jo
cwtl
sub
and
jns
pop
pop
fs
sub
add
jp
fsubs
in
jno
fs
mov
out
jl
or
xchg
pop
add
jae
lock
lods
and
add
xchg
in
lock
dec
movsl
mov
repnz
xor
shrl
mov
sbb
jbe
repz
mov
fmuls
jbe
xchg
test
sub
adc
xor
xor
sahf
sbb
sub
es
int3
rcrl
sbb
xor
mov
subb
push
or
or
and
mov
in
mov
subb
out
in
and
or
and
dec
add
movsb
das
jbe
sbb
ds
outsb
rcrl
push
clc
data16
mov
cli
aam
push
xchg
inc
cld
das
hlt
jl
xor
pop
sbb
sbb
lds
dec
btr
mov
loope
dec
dec
inc
dec
pusha
divl
add
cmpsb
adc
lcall
cmp
add
insb
adc
loope
cmpsl
xor
stos
pop
je
pusha
call
jb
pop
push
mov
dec
sti
push
adc
mov
mov
xor
aam
je
mov
jl
adc
push
mov
lret
enter
fiadds
add
test
xchg
lcall
js
rolb
cmp
nop
add
in
xchg
out
mov
adc
add
push
mov
or
mov
cli
xor
adc
mov
add
out
sub
sbb
jle
std
sub
inc
and
lahf
aaa
and
jo
cmc
es
add
mov
push
adc
jae
push
pop
mov
iret
mov
mov
mov
push
xchg
inc
sub
xchg
jne
dec
faddl
adc
and
inc
mov
inc
dec
push
enter
push
cwtl
ret
mov
adc
add
cmp
lret
hlt
popf
loopne
add
inc
jbe
sbb
popa
in
fcoml
stos
mov
jbe
mov
dec
mov
or
nop
clc
sbb
scas
test
jo
dec
add
cmc
clc
cmp
push
cltd
mov
dec
dec
xor
enter
add
popf
jae
adc
xor
movsb
xchg
and
shl
pop
inc
aaa
cmp
cmpb
into
inc
shl
mov
mov
jle
rorl
test
out
pop
jbe
lret
xchg
enter
ret
or
jnp
mov
push
lahf
and
mov
jo
adc
ja
jl
mov
xchg
lods
scas
enter
add
sbb
lret
int
sbb
lods
pop
inc
nop
cmp
dec
bound
xchg
stc
lods
or
push
mov
cmpsb
xor
add
push
in
mov
je
pop
dec
jg
add
lcall
adc
daa
lea
mov
outsl
in
pop
and
sbb
dec
add
push
sub
addl
call
push
add
lcall
call
xchg
adc
jle
loopne
jbe
push
in
sub
cmpsb
dec
sub
shr
popf
inc
cmp
sbb
xlat
add
stos
iret
out
loope
mov
sub
das
int3
and
add
mov
adc
and
out
and
daa
sbb
pop
lods
les
hlt
jnp
add
lds
cmp
testb
dec
cmp
push
loopne
push
sbb
mov
pop
data16
orb
lods
loop
and
pushf
cwtl
fcompl
pop
in
add
jge
imul
push
or
add
xchg
push
xor
adc
mov
push
pusha
sbb
adc
pop
mov
pusha
dec
stos
and
cwtl
mov
mov
ljmp
mov
je
andl
sbb
dec
pop
add
mov
pop
or
inc
sbb
icebp
pop
mov
cmp
into
hlt
test
shl
cwtl
stos
out
add
sbb
into
inc
mov
shrb
cltd
cmpsl
mov
sbbb
inc
sbb
or
push
jns
sbb
arpl
rolb
loopne
add
mov
imul
sbb
nop
dec
cmpsl
sub
pushf
iret
dec
inc
pop
fwait
in
push
pop
lods
les
or
mov
or
mov
xchg
loop
lods
mov
popf
dec
js
in
xchg
sub
das
roll
dec
mov
sahf
inc
lret
in
inc
call
or
sbb
inc
dec
xor
shrb
cmpsb
cmp
ret
orl
icebp
sub
xchg
inc
test
sbb
cmc
xchg
xor
fisubs
je
loope
adc
and
or
mov
push
and
cmp
orb
movsl
jp
repnz
int
faddp
int3
add
loope
and
mov
pop
mov
in
push
xor
into
ds
add
lea
or
xor
inc
iret
jne
icebp
loopne
add
das
movsl
mov
sbb
inc
mov
cli
loopne
xchg
lea
fstpt
enter
mov
mov
insb
sbb
add
adc
rorb
je
add
addb
lea
dec
jbe
aaa
inc
roll
dec
mov
lock
in
nop
mov
add
push
ja
je
sahf
lods
pop
or
adc
or
loop
rorb
sub
jne
cwtl
inc
sub
push
out
pop
test
enter
mov
jmp
rolb
cmpb
mov
and
jmp
push
pop
mov
roll
mov
add
add
in
add
in
adc
cld
lahf
add
repz
ss
mov
lods
jle
adc
in
pushf
stos
adc
clc
shlb
ljmp
gs
xor
aas
aaa
jp
inc
adc
jns
mov
add
sahf
dec
loop
mov
data16
mov
and
enter
mov
movsb
mov
xchg
in
dec
loopne
mov
fldenv
test
faddl
jmp
push
mov
pushf
inc
mov
andb
stos
or
sbb
mov
xchg
sub
push
inc
or
inc
sub
add
mov
stos
int3
movsl
inc
add
mov
test
sub
and
mov
cmp
sti
sub
sub
push
sub
add
test
lcall
mov
lock
out
je
xchg
xor
nop
cmp
pop
loop
push
adc
loop
andb
popf
push
and
pusha
data16
in
fs
pusha
jnp
mov
add
scas
push
test
cld
push
into
and
cmp
or
lods
or
lock
sub
push
jbe
test
arpl
push
push
mov
add
test
nop
loope
mov
lea
push
cmp
cmp
aam
lret
or
add
sub
and
movsl
in
push
inc
or
imul
sub
mov
add
mov
leave
adcl
test
sub
cmpsl
nop
dec
add
jl
sub
xchg
inc
shlb
inc
adc
cwtl
cmpl
out
mov
xchg
ret
or
js
pop
xchg
pcmpgtd
jo
roll
in
bound
or
test
loope
insl
xor
inc
and
sbb
add
aaa
es
pop
ss
dec
or
loopne
inc
movsl
inc
push
incb
add
arpl
and
and
and
call
rolb
mov
add
sub
add
stc
cmp
es
sahf
hlt
cmp
in
add
dec
js
jns
inc
jo
add
in
popa
clc
or
sbb
cld
lock
add
xor
push
xchg
mov
jb
pop
mov
dec
sbb
and
mov
pop
push
roll
mov
inc
fiaddl
push
ja
mov
enter
push
jbe
std
movsl
or
stos
push
icebp
movsb
adcl
adc
mov
rcrl
xchg
inc
dec
test
mov
pop
aam
sub
jno
add
dec
leave
inc
imul
adc
in
movsb
mov
stos
cmc
pop
fst
dec
xor
pushf
or
mov
xor
aas
jnp
pop
xchg
cmp
pop
cs
in
testb
mov
jb
xor
bound
jmp
sub
test
out
add
arpl
and
xchg
inc
movsb
cld
lods
inc
dec
jne
add
bsf
cltd
jo
mov
fdivrs
pusha
jl
mov
inc
or
mov
xor
pop
shll
daa
test
adcb
mov
or
in
ret
adc
dec
test
cmp
mov
mov
ret
in
mov
enter
scas
lock
inc
adc
adc
into
out
xorl
cwtl
frstor
sub
xchg
xlat
rol
in
xchg
stos
dec
push
inc
push
in
cmpsb
jbe
inc
or
lcall
dec
xchg
bound
dec
mov
sbb
stc
fnstenv
adc
cwtl
mov
fs
popa
inc
test
aam
cmp
mov
mov
jo
sub
inc
cli
mov
stos
add
shll
cmp
in
int3
add
mov
mov
cmp
stc
dec
jl
mov
lods
xchg
std
or
xor
add
flds
add
push
nop
jl
das
insl
call
std
cmp
add
cmp
cwtl
loopne
lea
add
stos
xchg
mov
nop
cld
pusha
sub
leave
shll
pop
aam
stos
xor
lock
test
dec
faddl
hlt
mov
cwtl
in
jle
dec
jge
pop
dec
jg
jl
adc
push
cwtl
pusha
stos
jl
jg
cmc
jne
xchg
sbb
push
test
cmp
adc
mov
faddl
stc
test
lods
push
cmp
xchg
in
jo
xor
pop
loop
shrb
xchg
cltd
hlt
lods
sub
add
mov
fstl
pop
outsl
hlt
nop
ret
push
add
cmp
movsl
jg
scas
rcl
sub
dec
xchg
pop
in
sbb
aad
add
imul
in
adc
jno
cmp
inc
insb
leave
sbb
out
add
adc
mov
mov
push
or
and
inc
cltd
sub
sbb
decb
test
mov
pop
adc
xchg
mov
jb
cltd
adc
shl
sub
pop
mov
rorl
xchg
cwtl
mov
aad
loopne
fistpl
cmpsb
adc
add
inc
shrb
mov
xor
aam
push
xchg
outsb
or
test
icebp
add
xor
popf
inc
adc
insl
or
push
lock
fwait
pusha
jno
sbb
ja
les
cmpl
jnp
hlt
add
mov
cmp
test
mov
lcall
into
outsl
cwtl
or
test
jge
jno
add
mov
sub
lods
xorb
in
cmc
xor
or
mov
mov
shrl
test
lahf
adcl
xchg
sub
lods
icebp
daa
or
nop
popa
aas
addr16
gs
mov
sahf
sti
mov
mov
push
test
mov
stc
mov
sbb
jge
mov
aaa
cwtl
add
fstl
jle
mov
or
mov
loope
out
test
loopne
dec
mov
mov
das
dec
dec
call
fsts
mov
xchg
in
popf
dec
xchg
add
inc
xor
push
add
call
add
cmp
pusha
outsb
mov
pop
leave
push
loopne
inc
sbb
sbb
scas
xor
dec
adc
cmp
loopne
into
mov
roll
mov
arpl
xor
rcrl
lock
push
inc
adc
xor
rcrl
sub
fstps
mov
jns
sub
jp
sbbl
mov
and
mov
xlat
rolb
aam
sbb
jg
xor
hlt
enter
orb
push
add
lahf
push
cmp
mov
add
xchg
loope
push
jmp
inc
xchg
sbb
inc
dec
ja
xchg
sub
sahf
leave
ret
inc
xchg
loope
adc
popf
jo
pusha
test
add
pop
jne
popa
push
test
sbb
inc
add
inc
and
inc
and
mov
scas
int
popa
sbb
lods
into
repz
and
sub
inc
and
outsl
mov
sub
pop
aam
inc
cmp
aas
lods
loope
test
push
syscall
rcl
enter
xor
cmovnp
ds
inc
add
dec
cmp
jle
sub
push
mov
pop
je
fdiv
mov
leave
testb
add
repz
int
jp
pushf
enter
rorb
stc
add
lcall
add
pop
dec
push
mov
fwait
lahf
inc
sbb
cmp
add
jbe
jge
mov
out
or
mov
les
jecxz
ret
scas
das
cmp
sbb
test
and
and
test
or
mov
cmp
mov
inc
add
pop
test
push
ja
cmp
into
pop
mov
rorb
inc
cmp
stos
cltd
jg
push
js
icebp
addb
das
sub
sbb
sub
push
stc
out
pusha
adc
outsl
mov
xor
cli
arpl
or
mov
inc
shrl
clc
aad
mov
les
jle
mov
add
xor
jbe
loope
movsb
or
inc
sti
push
sub
das
inc
rcll
mov
mov
stos
fs
cld
push
dec
nop
dec
loopne
daa
xchg
data16
divl
popf
ret
pop
ds
add
cmp
inc
imul
lds
mov
mov
mov
adc
subl
push
in
inc
enter
jge
mov
push
and
cmpsl
inc
pop
xchg
dec
cmpsl
mov
mov
rolb
inc
popa
sub
imull
out
lret
das
hlt
and
data16
mov
or
lods
mov
mov
shlb
or
test
sbb
mov
loop
add
add
push
sahf
pop
add
shll
out
daa
adc
xchg
mov
xor
scas
xchg
adc
dec
mov
test
in
dec
sti
shl
lea
sbb
cwtl
sbb
shld
lods
imul
test
jbe
add
sarb
mov
and
repz
imul
das
and
sarb
int
adc
or
aam
or
in
xor
add
ss
sbb
repz
push
adc
add
cs
push
out
in
xlat
add
mov
inc
out
adc
sbb
mov
sbb
add
addr16
repnz
aaa
les
mov
scas
xor
dec
adc
mov
pop
testb
jecxz
in
mov
pop
aam
fstpl
cmp
aad
xchg
jp
inc
and
inc
in
or
xchg
cmpsl
mov
dec
cmc
sbb
test
or
out
hlt
or
daa
push
cli
push
mov
push
roll
dec
imul
jl
loopne
dec
out
mov
shll
pusha
jle
mov
mov
out
mov
in
add
or
cmp
mov
push
push
adc
mov
cmpsl
add
or
sub
sub
lods
scas
out
add
popf
push
push
es
mov
lcall
leave
mov
mov
imul
add
adc
stc
call
xor
xor
pop
les
sbb
imul
jns
mov
scas
mov
dec
fs
and
fwait
xchg
in
mov
pop
push
or
push
cmp
icebp
rclb
lock
loopne
xor
xchg
mov
sbbb
mov
std
add
dec
inc
fstpt
nop
inc
cmp
pushf
mov
lock
cltd
adc
sub
sub
clc
mov
xchg
test
adc
cmpsl
cmp
les
lret
pop
xchg
and
xchg
mov
xorb
push
clc
rcrl
lock
in
iret
jecxz
mov
adc
push
fucom
ja
xchg
xchg
imul
add
arpl
add
inc
dec
dec
loope
or
sbb
ds
rolb
add
fcmovu
dec
sub
push
iret
pop
arpl
add
imul
je
imul
mov
and
jge
and
adc
mov
je
xchg
mov
xor
cwtl
stos
pop
push
stc
es
add
insl
sbb
add
int
add
lret
movsb
clc
add
data16
fsubl
pop
mov
mov
sub
nop
inc
dec
mov
inc
and
dec
mov
mov
add
and
iret
shll
cmp
fadds
fsubrs
rcl
pop
and
mov
push
shll
int
jg
xchg
mov
mov
jns
sbb
sahf
loopne
push
pushf
pop
add
add
push
inc
pop
subb
and
mov
es
dec
sarb
rol
pop
inc
mov
add
mov
pop
xchg
pusha
jl
jp
mov
and
sub
jg
shlb
loop
add
ret
sbb
clc
add
shrl
int3
or
das
repz
adc
call
divb
ret
psubsw
sbb
and
icebp
push
xchg
mov
nop
dec
jae
jbe
add
push
mov
mov
in
out
cmc
mov
add
test
sbb
imul
and
xor
fnsave
loopne
xor
inc
inc
ds
or
jmp
mov
xor
sbb
int3
xor
int3
pop
mulb
add
popf
mov
flds
sahf
xchg
mov
sub
mov
mov
je
push
add
hlt
adcl
je
lock
cmp
cs
mov
add
pop
mov
mov
clc
cmp
or
aam
scas
rorb
and
pusha
pusha
add
aad
dec
cmp
add
movsb
or
lods
in
pusha
out
cmp
hlt
xchg
fsts
mov
mov
pop
cmp
js
mov
mov
popa
sbb
add
fstl
xor
xchg
inc
cwtl
sarb
lods
sbb
add
cmpsb
pop
sub
mov
dec
xor
daa
cltd
shr
fstps
dec
push
mov
das
fwait
addb
in
or
leave
pop
rclb
add
pushf
call
cmp
xor
jbe
xchg
jecxz
inc
adc
call
xor
or
in
add
insb
xlat
cmp
pop
bswap
popa
ds
clc
xchg
cmp
adc
faddl
test
jg
in
and
loopne
lahf
daa
adc
fcoms
add
aam
add
cmp
lods
cmc
stos
mov
pop
inc
and
je
aad
add
int
imul
or
jnp
push
jg
sbb
add
inc
dec
adc
fdivrl
test
add
into
std
repz
mov
in
dec
sub
lods
roll
mov
add
mov
es
cli
jo
jmp
xor
dec
add
jae
sbb
std
popa
dec
sbb
mov
enter
fsub
mov
enter
sbb
adc
jg
add
cmp
dec
cld
mov
adc
add
pop
testl
inc
fstl
popf
in
adc
mov
aam
or
xlat
rcrl
lea
dec
mov
pop
mov
int
vpxor
add
cmp
jecxz
or
or
dec
add
in
push
push
sbb
or
inc
push
ss
cmp
dec
xor
mov
inc
xor
inc
iret
movsl
sub
lods
jae
jo
rolb
sbb
fsub
ljmp
sub
or
mov
jl
fdivl
add
stos
insb
je
jbe
dec
push
sub
pushf
add
leave
test
cmp
je
add
les
inc
sub
and
mov
sbb
out
mov
adc
mov
xchg
cmp
sahf
xchg
and
inc
pop
les
das
xor
inc
add
mov
subl
mov
hlt
or
fmuls
mov
cld
add
lret
inc
loopne
jns
add
jecxz
or
and
xchg
fildll
add
xchg
cs
loope
jns
insb
mov
fisubrl
or
mov
repz
adc
lods
or
test
mov
shlb
cwtl
adc
mov
fcoms
lock
cmpsb
cmc
or
mov
jge
add
gs
adc
add
lods
lods
loopne
hlt
push
or
popa
es
cmp
push
xor
imul
insb
adc
adc
mov
add
sbb
stos
mov
mov
inc
mov
sbb
test
pop
mov
and
andl
add
int
pop
jmp
subb
dec
subl
es
mov
lahf
jo
xchg
clc
mov
cmp
pop
popf
pusha
dec
in
and
xchg
movsb
das
xchg
and
sar
test
test
sbb
push
ljmp
mov
mov
jns
pop
jnp
add
mov
loopne
mov
cld
mov
adc
popl
pop
addr16
add
rclb
aas
add
inc
test
dec
loopne
jl
ss
pop
mov
lods
mov
xchg
xorb
mov
and
faddl
nop
dec
fldcw
adc
in
sub
add
bound
ljmp
adc
mov
add
adc
aad
add
fldcw
mov
add
lods
addb
inc
enter
out
cmp
pusha
mov
xor
push
cld
dec
sbb
addr16
sar
lods
inc
mov
adc
les
sbb
das
cmp
xchg
or
jbe
dec
xchg
pop
adc
jo
xchg
or
jp
je
push
add
pop
loope
insb
sbb
dec
mov
loop
sub
pop
cmp
into
enter
jecxz
cmp
in
and
scas
push
pop
inc
inc
add
xchg
out
pop
mov
das
into
xor
sahf
rclb
dec
adc
xorl
mov
loop
mov
scas
adc
jns
sub
add
call
xchg
add
xor
and
das
mov
test
test
lds
push
mov
lret
fbstp
jl
sbb
ds
outsb
sbb
lods
jge
popf
cltd
dec
mov
leave
cwtl
mov
adc
sbb
pop
add
icebp
aas
dec
ss
cmc
adc
fbld
xlat
dec
dec
popa
test
inc
mov
cmp
mov
pop
inc
cmp
add
push
pushf
repz
cmc
int3
sbb
mov
cmpsb
mov
loopne
mov
out
xchg
imul
push
adc
or
xor
sbb
mov
xchg
dec
adc
pop
mov
ror
sarb
cltd
popl
fidivrl
decl
and
jb
push
pop
in
and
pop
sbb
and
pop
cwtl
jne
pop
enter
push
lods
imul
call
loopne
sub
sbb
dec
inc
vmptrst
stos
xchg
sub
fbstp
mov
mov
rcl
mov
pop
cltd
daa
inc
xor
les
stos
xor
mov
add
xchg
sbb
jbe
dec
fnstcw
xchg
xchg
xor
lahf
popa
pop
cmc
sub
push
add
pop
lcall
push
mov
outsl
ret
xchg
push
inc
cmp
cli
outsb
cld
adc
and
fs
in
jl
push
jno
ja
and
aaa
daa
push
dec
loopne
jbe
or
nop
and
outsb
inc
repz
push
pusha
jno
push
hlt
out
inc
inc
cmp
hlt
xchg
in
sbb
inc
sti
inc
inc
dec
std
inc
call
int
mov
int3
nop
test
mov
leave
mov
jl
cmp
inc
scas
xchg
fcomp
sub
pop
pop
or
mov
dec
jmp
cmp
js
pop
aas
sbb
sub
cmp
jl
mov
add
roll
insl
nop
inc
nop
pusha
aam
push
cmp
pusha
mov
dec
int3
in
out
dec
xchg
sub
aaa
push
out
or
add
dec
mov
fildl
push
popa
pop
fyl2x
pop
jno
cmp
sub
orb
test
js
dec
add
cwtl
xor
or
scas
andl
xchg
gs
test
fwait
pop
addb
inc
mov
lods
lahf
dec
call
jl
mov
lcall
sbb
add
pop
in
cmpsl
sar
test
cs
pop
inc
add
and
sbbb
jo
jo
add
xchg
jl
shlb
pop
incl
and
add
ficoms
cmc
adc
incb
ljmp
jle
jmp
aas
fidivs
sbb
ds
fsubrs
push
test
and
test
fimull
jl
or
fdivrs
mov
dec
out
add
aam
cld
or
mov
test
adc
insl
hlt
in
test
out
adc
or
cwtl
hlt
test
inc
data16
mov
dec
adc
xor
into
mov
sbb
adc
add
pusha
adc
ret
stos
sub
mov
imul
xor
mov
inc
cmp
cwtl
inc
ret
mov
inc
mov
push
add
addl
pop
push
sbbb
bound
sbb
orb
pop
mov
fs
inc
cmp
lret
lahf
add
inc
mov
mov
mov
dec
daa
mov
cmp
cmp
and
lock
xchg
mov
push
adc
fptan
jp
and
clc
and
aas
cmp
pop
into
fs
sbb
in
cwtl
shll
push
in
push
in
adc
jmp
and
test
cmpsb
or
pop
insb
dec
repz
cmp
dec
sub
inc
leave
rcl
inc
adc
lods
cld
and
stos
mov
pushf
and
mov
aam
mov
cmp
xchg
in
mov
aaa
pop
andl
or
mov
int3
enter
push
add
jp
insb
xchg
popf
dec
pop
in
pop
repnz
popa
int
mov
pop
jns
loope
lcall
pop
test
push
jmp
inc
outsb
iret
mov
mov
and
add
sbb
jo
outsl
mov
ds
mov
call
aas
dec
mov
push
xchg
loop
pushf
cmc
jbe
fs
sbb
cwtl
insb
cld
sbb
mov
movsb
movsl
fistpl
sarb
jl
add
stos
mov
cltd
pusha
jns
sbb
jle
adc
jle
mov
rclb
jp
inc
xchg
pop
and
pop
fs
ficomps
add
rolb
add
sbb
test
adc
in
out
sub
out
sbb
es
xchg
in
rcrl
sbb
mov
mov
pop
dec
in
or
test
cltd
add
mov
in
sbbb
pop
jo
mov
or
popf
adc
aad
call
outsb
fstps
outsb
and
repnz
add
and
jae
clc
scas
add
xchg
cli
mov
dec
mov
mov
inc
adc
shrb
add
fdivp
jl
xchg
stc
out
loop
or
stos
ss
mov
cmp
sti
push
lods
or
pop
or
int3
mov
enter
pop
add
jnp
push
dec
mov
ret
aas
or
or
push
daa
pusha
push
iret
dec
add
or
je
in
pusha
out
jae
add
stos
fsts
je
jle
push
and
loopne
mov
mov
test
lahf
push
sub
cld
mov
mov
add
gs
add
ud0
add
sbb
sahf
loope
mov
sti
mov
jmp
mulb
test
and
mov
jb
lds
xchg
fmull
add
pop
dec
bound
pop
or
mov
add
popf
mov
push
pusha
xor
pop
popa
jmp
mov
add
mov
stos
dec
jo
inc
notb
sbb
mov
pop
loop
pop
ljmp
mov
push
cmc
in
clc
insb
add
dec
loopne
or
aaa
mov
pushf
pop
vandps
dec
repz
cmp
mov
and
jmp
xchg
lock
jmp
pop
mov
lods
test
scas
mov
xchg
psubb
mov
jg
rorl
cmp
sbb
jnp
push
orb
jno
leave
add
sbb
jmp
sub
and
mov
inc
xchg
push
sub
jge
add
imul
test
mov
xchg
pop
fcoml
imul
add
add
shlb
or
push
lcall
cmpsb
out
sbb
mov
lods
pop
pusha
or
test
das
int3
mov
inc
movd
cld
hlt
jmp
mov
mov
adc
inc
out
push
shl
cmp
add
dec
add
pop
sub
jne
aaa
jmp
ss
fs
pop
sbb
sub
and
sbb
adc
push
daa
sbb
mov
pusha
mov
push
ret
mov
inc
loopne
add
aaa
out
mov
out
mov
dec
and
or
scas
les
sub
cmp
imul
popa
mov
add
dec
xchg
movsl
push
xchg
aam
fiadds
sub
aas
mov
aam
sub
adc
and
adcl
in
mov
xorb
xchg
test
subb
push
in
pop
add
dec
sbb
mov
lea
push
cmp
sub
xor
adc
pop
and
sbbb
dec
arpl
loop
jg
jl
inc
sub
cmpl
mov
sub
and
sub
std
fs
add
push
mov
jb
mov
cmp
stc
mov
jnp
test
mov
add
ret
push
push
pusha
lods
jno
mov
or
test
jnp
cmp
enter
push
adc
pop
inc
sbb
xchg
jl
xor
inc
mov
push
jo
gs
jb
and
push
sarl
out
dec
or
leave
mov
push
pushf
add
lods
jmp
push
cwtl
faddl
das
call
xchg
outsb
adc
xor
int
rolb
mov
xchg
lea
adc
test
or
or
or
inc
sub
addb
nop
or
and
push
push
inc
and
ss
dec
xor
sbb
aas
mov
daa
dec
xchg
pop
mov
mov
add
jle
jle
ljmp
js
push
pop
pop
push
xor
call
push
pop
stos
das
add
out
jecxz
sub
xor
mov
mov
incb
inc
pop
add
loope
mov
pop
add
lds
faddl
sbb
cmp
popf
popf
loope
lret
xchg
leave
sbb
or
inc
jle
enter
mov
push
lock
fbstp
lock
shlb
add
dec
adc
add
dec
es
lds
sbb
imul
pop
daa
fcoms
adc
test
sub
sti
lods
popf
add
pop
scas
jbe
repnz
adc
test
push
mov
dec
pop
pop
jmp
pusha
add
mov
mov
out
cmp
shll
cmp
fildll
rcrl
mov
mov
lods
rolb
jb
xchg
pop
xor
nop
bnd
lahf
xlat
pop
rorl
mov
jo
and
in
add
mov
and
mov
stos
mov
pop
rorl
push
out
loopne
popa
adc
xor
fwait
mov
rclb
add
and
and
or
mov
ficoms
add
loopne
push
rorl
xlat
call
pop
in
and
pop
lds
rolb
testl
mov
jg
push
or
pmulhw
pop
mov
jae
xor
cli
lods
cmp
add
and
in
test
pusha
pop
adc
nop
pop
and
stos
addb
scas
adc
jg
nop
test
mov
nop
imul
out
add
daa
jb
sbb
mov
popa
push
repz
add
rorb
sub
mov
push
icebp
pop
and
push
push
mov
adc
in
cmp
push
pop
lahf
pop
dec
das
add
call
cltd
xor
dec
shl
mov
add
xlat
jg,pt
add
imul
cmp
jae
adc
clc
sbb
outsl
and
testb
add
mov
shrb
cwtl
clc
and
add
push
push
pop
pop
push
clc
push
xchg
je
add
adc
xchg
and
push
add
push
xchg
add
sti
mov
test
push
icebp
mov
adc
out
outsb
add
mov
fadds
push
and
jge
push
or
pop
sub
mov
mov
pop
jne
dec
jno
mov
or
sbb
repz
jne
add
inc
repnz
inc
mov
fs
xchg
push
pushl
and
pop
jle
mov
ret
test
idiv
hlt
ljmp
or
pop
push
stc
movsl
test
mov
add
xchg
and
sbb
pop
add
cli
xchg
fmull
or
jno
fs
sbb
mov
push
rolb
inc
inc
addl
dec
ret
pop
repnz
test
lret
stc
shll
pop
pop
data16
xchg
mov
jmp
aaa
roll
pop
jl
mov
inc
add
jne
push
lock
repz
sarb
gs
aad
cmp
jge
xor
mul
adc
add
enter
test
shlb
repnz
cmp
mov
adc
adc
mov
mov
arpl
cmc
dec
imul
in
nop
push
sbb
rolb
xor
cltd
outsb
inc
adc
add
inc
adcl
mov
xor
or
test
je
clc
sbb
dec
and
scas
ljmp
pop
ret
mov
xchg
mull
pop
andl
xor
dec
fisttpll
xor
mov
sub
outsb
es
add
test
cmpsb
jbe
stc
nop
clc
iret
xchg
pusha
xor
out
mov
push
in
daa
popf
faddl
add
pop
jg
cmp
sarl
jecxz
lgdtl
cld
jne
shlb
clc
xor
adc
subb
insb
or
mov
push
inc
and
xor
test
or
push
sub
add
outsb
shlb
sbb
mov
add
push
mov
add
repz
xlat
pop
cmpsb
cld
add
mov
jmp
inc
jb
push
cltd
fwait
imul
mov
inc
test
add
xlat
dec
mov
inc
xorl
stc
push
das
ret
add
jnp
jmp
pop
mov
add
sbb
and
add
decb
push
sub
jno
sbb
mov
xor
inc
add
or
lea
mov
dec
or
mov
add
lods
ficoml
popa
jmp
jecxz
stos
push
or
mov
aaa
jmp
mov
and
inc
mov
sbb
add
inc
jno
xchg
pop
push
cmpb
lret
add
cmc
shlb
cmp
xchg
arpl
mov
add
lea
nop
adc
sbb
out
pop
mov
sarb
jg
aad
inc
pop
pop
pushaw
add
pop
push
sbb
or
pop
xor
adc
or
addb
fnsave
add
push
cmp
mov
repz
push
mov
add
dec
xor
xchg
popa
subl
lret
nop
dec
jns
das
aad
mov
cld
dec
mov
xor
hlt
inc
sub
aad
mov
and
pop
sub
repnz
push
jno
add
dec
jmp
mov
dec
insb
enter
push
jnp
sbb
mov
dec
pop
or
leave
pop
test
and
cmpsb
cmp
inc
in
scas
pushf
mov
jns
je
mov
mov
inc
mov
repz
lock
leave
push
cmp
fdivrp
push
aad
mov
fstps
sub
sti
or
xchg
sbb
jmp
and
mov
sbb
push
mov
mov
lahf
cmp
out
or
add
mov
stc
insl
out
mov
sbb
call
subl
mov
test
dec
mov
inc
cmp
jmp
adc
pop
add
inc
sbb
popf
add
loopne
popa
enter
xor
fstpt
dec
rcrb
ficoml
cli
int
movsb
xor
lahf
cmp
inc
ljmp
jecxz
lock
push
pusha
test
inc
add
push
mov
faddl
insl
ficompl
in
jmp
mov
cmp
cmp
insb
add
arpl
jnp
gs
adc
pop
or
or
and
ret
movzwl
inc
push
jl
dec
orb
and
xchg
stos
mulb
pushf
mov
dec
shr
add
add
mov
movsb
data16
jo
sbb
xorl
data16
or
negl
add
insb
and
in
pusha
mov
adc
fwait
or
sbb
data16
add
repnz
or
xor
xor
or
sbb
mov
mov
mov
int3
pop
pop
adc
xchg
sub
lret
push
add
jge
jno
push
nop
leave
adc
jae
add
mov
addb
loop
dec
iret
push
dec
mov
sahf
outsb
mov
mov
in
sbb
repz
jo
xchg
or
sub
ljmp
adc
or
test
mov
add
jmp
mov
mov
push
andl
movsb
scas
neg
mov
jo
fmuls
jl
aas
cmp
cmp
add
add
dec
pop
add
add
xchg
and
fwait
int3
mov
inc
push
lcall
mov
scas
and
add
cmp
dec
xchg
or
fidivrs
xor
aad
rcl
cmpsb
sub
fs
fs
mov
enter
jbe
in
push
cld
mov
leave
push
pop
mov
jle
cmp
pop
jne
mov
jae
or
not
lret
pop
fisttpl
test
inc
or
js
add
xor
inc
jae
mov
adc
out
mov
inc
clc
rorb
pusha
fcomp
sub
addl
cmp
dec
push
fisttps
int
jbe
loopne
and
xor
sub
or
call
lret
and
test
add
push
jecxz
lahf
stos
cltd
push
adc
ret
lods
into
lods
out
jae
mov
fcomi
fsubr
rcrb
or
out
mov
in
out
pusha
mov
lea
je
xchg
lahf
mov
sbb
test
mov
add
cltd
gs
jo
push
mov
mov
pop
cld
imul
lds
les
les
cmp
sub
std
and
popa
loopne
mov
clc
mov
mov
mov
dec
rcr
pushf
clc
sbb
and
fsubl
sar
xchg
cld
jae
push
push
push
push
lcall
mov
sub
xchg
sub
jo
subl
mov
shll
push
jno
xchg
subl
mov
push
andl
dec
mov
clc
jae
sub
push
add
call
cmp
stos
sub
inc
cwtl
adc
push
call
mov
mov
xchg
test
shlb
iret
add
inc
inc
sub
dec
icebp
cli
outsl
lock
stc
mov
fisubl
jge
mov
rcrl
test
xlat
inc
dec
pusha
daa
dec
sbb
aam
cmpsl
push
adc
and
mov
punpcklbw
outsl
gs
pop
out
out
testb
mov
enter
mov
xor
jno
push
dec
push
lods
mov
or
mov
or
popf
pop
scas
imul
or
repnz
sarb
jge
movsl
mov
bound
sub
pop
or
sbb
repnz
nop
fucomi
subb
mov
cli
mov
dec
push
mov
insl
xchg
ret
inc
mov
inc
negb
cmp
adc
sub
das
and
push
push
outsb
sub
dec
mov
setns
aaa
jge
popa
or
mov
pop
lret
mov
jl
xchg
xchg
xor
out
subb
nop
add
push
cli
popa
sbb
inc
push
lcall
loop
add
out
pop
cwtl
adc
jle
jl
xor
pop
sub
gs
rcr
or
jbe
and
and
das
jmp
pop
fistl
pop
mov
pop
popf
mov
mov
imul
adc
jmp
fsincos
fiaddl
test
movsl
add
ficoms
rol
rolb
push
fstpl
lret
pushf
mov
adc
mov
ror
or
mov
mov
dec
enter
and
cmp
enter
in
sub
loope
dec
out
pusha
jno
mov
test
jno
notl
mov
sbb
loop
push
dec
popf
adc
xor
mov
mov
pop
xor
push
loop
sbbl
pop
pop
xor
mov
sub
jno
add
and
add
lock
cmp
adc
les
inc
das
and
ret
iret
iret
into
pop
gs
daa
push
fbstp
and
loop
popf
nop
pop
xor
jo
and
add
pusha
add
push
icebp
xchg
add
jns
popf
inc
mov
mov
test
adcb
out
leave
add
test
and
movsl
imul
test
test
and
sbb
lea
popf
daa
flds
gs
and
into
in
shlb
cmp
jle
repz
rolb
dec
arpl
mov
jecxz
pop
adc
outsl
addb
ja
add
cli
shlb
mov
or
test
mov
mov
xor
mov
pop
or
les
mov
mov
ljmp
rol
inc
pop
sub
sub
or
sub
popf
mov
xchg
je
jle
jmp
jb
mov
loopne
or
clc
or
pushf
clc
and
cmp
in
xor
add
xchg
xchg
call
int
jns
xchg
cld
scas
into
fsub
sub
jl
in
xchg
out
mov
push
or
mov
pusha
sti
popa
sub
lea
and
pop
inc
sub
adc
out
fldenv
and
out
mov
mov
jp
sbb
adc
inc
pushf
sbb
jne
in
dec
clc
aad
or
jmp
in
cmpsb
jge
sbbl
addb
mov
pop
xor
pop
popf
adc
inc
cmp
movsb
lock
cld
pop
ljmp
add
popa
and
add
push
out
add
pop
xor
mov
mov
or
dec
mov
jno
sub
ljmp
push
jnp
add
xchg
xchg
inc
pop
call
or
and
jne
mov
jb
js
xorl
adc
xchg
adc
sbb
hlt
xor
orb
sbb
add
mov
ret
xor
loopne
add
lea
pop
gs
incb
and
pop
sub
push
cmc
mov
rcrl
insl
cmp
je
addr16
nop
pop
jno
fisttps
push
sub
mov
gs
repnz
stc
data16
mov
scas
add
sub
fistps
jnp
hlt
sub
jmp
mov
adc
sub
and
add
rorl
jmp
mov
or
pop
inc
cmpsb
in
jmp
call
arpl
lahf
xchg
outsl
pop
bound
clc
push
jb
push
cltd
or
xchg
xor
mov
in
and
mov
das
push
jae
fwait
mov
push
out
popf
adc
or
push
repz
jg
sbb
dec
xchg
jns
mov
inc
xchg
lods
bound
jge
add
pop
cli
pop
shll
loop
xchg
xlat
fs
movb
xor
mov
dec
pusha
and
movsb
sbb
mov
mov
cmp
dec
cmc
jmp
xorb
sub
shrl
and
sub
mul
dec
pushf
lea
or
and
pop
push
push
imul
movsl
pop
lret
inc
popa
xor
loopne
dec
cmpsb
xor
xchg
pop
mov
addb
pop
aas
and
xchg
mov
dec
scas
sub
das
push
jb
adc
mov
xchg
pop
shll
mov
sub
add
mov
lea
add
fildl
or
sbbl
push
jbe
test
inc
push
divb
mov
data16
add
cmpb
fs
push
push
pusha
push
and
mov
jmp
add
and
pop
xor
adc
and
push
and
aad
hlt
lret
jle
or
xor
not
mov
lret
out
movsb
imul
dec
pop
and
iret
cmp
xchg
loopne
popf
push
sti
cmp
push
fisubrl
and
into
js
les
mov
shll
sbb
imul
sbb
cld
dec
add
pop
mov
add
dec
cwtd
cmp
xor
mov
popa
je
pop
bound
dec
shrb
std
les
or
sub
xor
inc
sub
jp
add
enter
test
or
leave
add
and
and
outsl
pop
mov
pop
push
xlat
xchg
push
dec
dec
xchg
sbb
imul
jg
fnstsw
fwait
jae
je
adc
and
push
movsl
sar
push
cmc
xchg
int
or
push
in
cmp
pop
in
mov
rorl
xor
inc
rolb
jo
aad
test
xor
sub
rcrl
std
xchg
cld
into
pop
xchg
or
pushw
mov
scas
dec
stc
push
xchg
xchg
fs
stc
mov
scas
or
xchg
jl
shlb
icebp
mov
in
adc
xor
xchg
and
jbe
ret
or
bound
or
loopne
sbb
popf
adc
dec
pop
iret
testl
mov
or
pop
lds
aas
sub
mov
in
nop
sbb
lcall
cld
dec
lock
sbb
inc
in
xor
or
in
out
mov
adc
xchg
addb
jge
in
add
js
cli
inc
sub
mov
rorl
inc
fs
pop
or
or
outsb
stos
add
fidivl
pop
movsb
pusha
std
or
mov
js
and
mov
test
ds
lods
xor
jmp
loop
add
mov
dec
jmp
sbb
scas
lret
mov
clc
push
dec
clc
int
adcb
loop
sub
scas
push
insb
sub
dec
mov
nop
lods
lret
loope
lock
dec
xchg
sbbb
mov
adc
add
xor
add
movsb
insb
imul
or
push
iret
xchg
push
gs
mov
mov
mov
or
xor
add
dec
out
sbb
imull
jecxz
push
push
mov
jg
xchg
das
loope
sbb
dec
lods
lds
mov
add
aaa
pusha
movsl
push
push
mov
dec
fcoms
add
add
pop
sbb
testb
jno
movsl
adc
out
jecxz
add
int
in
sarl
add
push
sub
pop
pop
push
push
loopne
icebp
mov
or
adc
sahf
and
aaa
adc
push
fadds
adcb
and
sub
add
outsb
xchg
push
pop
sbb
idivl
mov
cmp
push
mov
pop
lret
imull
jns
cmpsb
xor
cmpsl
cmpsl
xor
cmpb
push
mov
je
jp
mov
popa
data16
add
mov
das
sub
int3
sub
dec
ds
sbb
cmpsb
je
pop
enter
pop
daa
mov
and
inc
mov
or
test
fiaddl
mov
call
stos
pop
mov
in
push
pop
jmp
das
push
push
ja
pop
or
pop
aaa
loope
enter
inc
sub
sub
push
and
xchg
add
in
mov
mov
jmp
mov
pop
cmpsb
and
js
push
aaa
mov
jp
sub
xorb
stos
mov
push
cwtl
xchg
and
lock
or
inc
xchg
sub
test
pusha
jbe
adc
and
popa
cmp
cli
icebp
dec
sbb
and
push
clc
mov
out
ret
add
in
mov
popf
es
inc
jnp
or
adc
shrb
cltd
jl
add
cld
iret
cmpsl
inc
je
inc
or
popa
cmc
mov
and
jmp
pop
leave
dec
loope
adc
enter
mov
xor
sub
aas
xor
rcrl
addr16
pop
mov
cmp
mov
lret
cli
jno
fcomip
mov
jo
push
push
dec
shlb
pop
sub
mov
xor
mov
lea
pop
dec
inc
adc
sub
movsl
mov
call
mov
adc
lahf
inc
jo
lahf
aam
adc
push
pop
repz
mov
add
sbb
dec
in
or
sbb
and
cmpl
xchg
xor
rclb
divb
xchg
lock
mov
dec
into
mov
or
mov
push
ret
cltd
xor
mov
sbb
daa
mov
mov
add
sub
cmp
sbb
inc
ret
sbb
mov
adc
or
mov
jns
and
out
xor
jo
loop
mov
cmpb
out
popl
adc
pop
mov
mov
int
mov
add
xor
add
stos
mov
mov
push
pop
add
add
sbb
dec
data16
cmpsl
addl
cs
cld
cmc
mov
xchg
jmp
movsb
and
add
imul
aad
push
pop
mov
sub
add
ficompl
loope
inc
jno
popa
cmp
and
imul
out
loopne
les
or
inc
int
in
jecxz
add
inc
movsl
sub
mov
or
lcall
pusha
xchg
mov
and
shlb
lock
jae
das
and
inc
out
sarb
add
cmp
incl
mov
incl
xchg
int
push
mov
jae
mov
xchg
loopne
xlat
in
add
nop
pusha
imul
pop
popf
fsubp
and
les
loopne
mov
jnp
test
pop
push
cmp
pop
add
pop
mov
movl
or
xorb
lds
sub
pusha
das
push
pop
ret
test
sti
loop
add
ret
mov
shll
inc
jns
mov
dec
push
inc
mov
fcoms
leave
shll
je
fdivrl
pop
mov
in
call
add
add
bound
mov
mov
xor
push
jp
mov
mov
mov
dec
jnp
cwtl
pop
xchg
dec
jns
add
fistl
add
xorb
test
fsubrl
sbb
or
jns
mov
popf
dec
fcomps
pusha
jp
sbb
loope
sbb
xor
sub
cltd
ret
daa
pop
pop
fwait
leave
int
inc
pop
and
add
aaa
jnp
fcmovnb
inc
add
lea
fadd
call
mov
in
mov
lods
add
jp
inc
mov
inc
cmpsb
dec
mov
xor
mov
xchg
sbb
pop
xrelease
add
push
mov
sbb
hlt
add
aad
je
xor
ss
dec
rcll
mov
inc
push
xor
push
cld
jae
push
int
cs
loopne
jno
add
push
notl
sbb
jo
jl
dec
popf
inc
gs
cmp
inc
sbb
lods
inc
xor
add
lcall
ret
pop
xor
imul
push
cmp
popa
test
dec
dec
leave
sbb
test
mov
sbb
pop
dec
pop
mov
xchg
adc
jo
mov
fldcw
pop
sti
push
or
adc
in
ficoms
out
push
repz
adc
push
popa
mov
xor
inc
sub
cmp
push
movsl
shlb
imul
xchg
lcall
jbe
popa
adc
mov
shl
xchg
call
jge
push
sbb
cld
adc
dec
or
pop
pop
jnp
pop
sbb
xor
mov
pusha
mov
arpl
pusha
cmp
int
sub
shll
aas
mov
xor
sub
mulb
mov
das
mov
stc
xorb
cmc
inc
push
xor
test
cmpsb
and
mov
mov
add
cli
or
lea
les
and
icebp
fdivr
xor
mov
push
xchg
xor
or
cmp
test
sbb
pop
mov
pusha
int
add
fcmovnbe
cmp
inc
and
fsubrp
faddl
sti
mov
jb
rorl
ljmp
pop
movsl
and
xor
jp
add
dec
mov
pop
pusha
rcrb
cwtl
inc
adc
mov
xchg
jg
mov
in
mov
pusha
fs
cmc
sub
jmp
lahf
mov
jnp
popf
or
pop
mov
jg
mov
pusha
fstps
loop
push
mov
pop
xor
cld
out
mov
subb
pop
mov
and
stos
negb
dec
cmp
pop
add
scas
dec
fmul
dec
fcomps
nop
popf
nop
insl
mov
inc
or
add
mov
stc
add
or
mov
push
jno
xchg
push
repz
rolb
cmp
xor
shll
mov
push
push
mov
and
std
add
jecxz
xchg
mov
add
mov
sbb
jp
and
and
stos
sub
xor
jns
and
in
leave
dec
xor
sbb
repz
cmc
add
and
adc
pop
std
loope
mov
nop
adc
imul
imul
call
movsl
mov
mov
mov
cwtl
inc
add
jae
dec
nop
je
aam
adc
xor
xchg
fadds
push
xchg
rolb
test
add
mov
fwait
imul
adc
xor
xchg
push
bound
sub
pop
mov
add
int3
adc
stc
dec
ss
or
cli
or
rcll
pop
out
xor
mov
cli
pop
add
test
adcb
mov
mov
pop
pop
call
shll
jmp
add
mov
and
push
adc
repnz
or
fsts
lea
push
movsb
addl
bound
cmp
xor
mov
push
sub
ljmp
into
add
addr16
add
std
imul
sbb
into
mov
jo
adc
fistps
mov
push
fstps
mov
pop
jle
mov
addb
lea
push
mov
repnz
or
daa
clc
daa
xchg
sbb
or
scas
xor
add
fistpl
push
mov
mov
lds
mov
iret
dec
adc
in
sti
cltd
inc
sbb
shll
adc
popf
insl
loope
das
mov
xlat
sbb
test
xchg
add
in
aas
or
cmp
sar
cmpsb
mov
push
push
fdivrs
add
aas
pop
mov
push
fcoms
mov
popa
sub
jno
imull
dec
mov
lods
fsubs
adc
sbb
in
jecxz
adc
rcrl
or
out
in
stc
inc
push
sbb
ja
imul
rcll
lea
add
jo
mov
dec
leave
add
inc
out
cli
mov
mov
data16
mov
and
jbe
xor
or
sbb
jmp
dec
mov
mov
int3
pop
jmp
fcomps
insb
add
mov
sbb
sub
inc
stc
or
jne
sub
sub
push
fiaddl
shlb
jge
call
lcall
rolb
ljmp
arpl
std
sub
xchg
and
mov
sbb
testl
shlb
adc
rcrl
jo
pop
sbb
push
cmp
cmpsl
sti
addr16
fs
add
add
ljmp
shrl
lods
add
imul
mov
mov
push
pop
mov
loopne
mov
inc
adc
add
iret
mov
insl
clc
dec
loop
pop
sbb
mov
xor
call
sbb
sub
ss
lds
std
add
pop
int3
jns
mov
xchg
pushf
push
pop
mov
loope
xor
jb
insl
fisubrl
shrb
inc
add
rclb
cmc
pop
sub
cli
aad
call
loope
insb
pop
in
push
push
mov
sub
push
push
mov
push
push
icebp
sbb
enter
loop
std
add
push
idivb
loopne
sub
add
outsl
adc
out
outsl
mov
addl
popa
xchg
jb
sbb
call
das
sub
aam
idivb
dec
sti
or
daa
sbb
and
mov
sbbl
xor
subl
lods
adc
daa
loope
mov
clc
fcoml
insl
adc
mov
sbb
sahf
imul
pop
jecxz
iret
jp
icebp
xor
sub
outsb
jns
in
lret
or
sarb
js
and
xor
dec
push
sbb
jo
repnz
pshufw
mov
mov
or
ss
inc
push
sbb
push
movsl
out
nop
jb
add
mov
lods
push
jno
add
cmp
hlt
inc
add
sar
xor
push
pop
pop
cmp
aam
movsl
pop
aas
orb
rcrb
icebp
stos
fcmovne
mov
jae
mov
cmp
fisubrl
rcl
das
mov
xor
sub
jns
les
test
inc
jmp
je
add
ret
push
mov
and
pop
cmc
inc
jl
cmp
pusha
push
arpl
es
inc
push
jo
into
fidivrl
mov
fcmovne
add
ds
nop
or
adc
push
cmp
dec
popa
out
sub
orb
mov
mov
test
test
pop
js
jno
xchg
mov
mov
das
add
cld
repz
push
pop
jmp
enter
sub
dec
mov
into
pop
xor
sarl
cli
in
adc
in
repnz
jno
mov
mov
stc
pop
out
sub
mov
mov
lock
std
es
icebp
sahf
sub
sbb
push
adc
jmp
les
stc
orb
dec
or
movsl
dec
and
xchg
imul
cmp
mov
mov
mov
xlat
in
cmp
or
sbbl
testb
dec
and
stc
xlat
inc
fwait
cmpsb
inc
push
push
add
pop
pop
push
outsl
push
lods
sub
pop
adc
add
cli
sete
adc
imul
sbb
jecxz
les
cvtdq2ps
sub
pop
push
mov
and
nop
test
mov
cmpl
fst
xor
out
sub
push
cmp
sub
or
gs
loop
dec
xor
mov
andb
dec
xor
sub
das
fisubrl
ljmp
sbb
adc
add
cwtl
mov
mov
mov
xchg
loope
int3
pop
push
or
mov
dec
mov
cmp
pop
ss
and
pop
dec
xorb
mov
add
dec
fmull
push
mov
andb
xchg
sbb
mov
push
sbb
popf
cwtl
pop
gs
add
lods
and
jg
inc
roll
lret
bound
xchg
gs
sub
je
outsb
stos
and
sub
std
add
sbb
push
hlt
pushf
loop
repz
pop
and
clc
lret
or
rolb
mov
xchg
sbb
cmp
in
cmp
aaa
dec
and
test
mov
mov
mov
pop
push
cmp
add
mov
add
or
aas
add
pop
loop
jle
cmp
mov
fsub
mov
mov
pop
aaa
ret
xor
pop
push
shr
imul
dec
data16
adc
fwait
dec
cld
fstpl
jp
mov
push
lods
cmp
int3
lret
inc
pop
mov
pop
movsb
mov
mov
adcb
add
cmc
aad
incl
sbb
dec
pop
pop
mov
pop
jge
mov
popf
push
add
push
pusha
sub
lea
push
push
pop
dec
les
lret
ljmp
add
roll
xchg
mov
pop
and
push
cmc
adc
sub
dec
imul
push
sbb
inc
in
mov
pop
rorb
aad
dec
pop
jnp
cmpsl
xor
jno
pop
call
enter
mov
fdivrl
pop
andb
stos
lds
jns
jmp
xchg
jmp
sbb
cmp
shll
pop
push
push
pop
popf
bound
pop
in
xchg
inc
sub
and
out
dec
repz
dec
mov
xchg
cmpsb
jnp
pushf
jno
add
sbb
dec
cld
xchg
imul
pop
lahf
sarb
cwtl
mov
add
mov
rolb
inc
sub
jg
or
push
push
clc
mov
pop
nop
sti
mov
add
mov
pusha
js
adc
and
in
sbb
shll
cmp
aaa
xor
add
inc
push
adc
push
push
mov
lcall
sbb
mov
sbb
mov
scas
mov
jns
inc
leave
mov
and
jecxz
cmpsl
movsb
adc
fistl
mov
or
insl
mov
jb
cmp
das
test
mov
divb
stos
add
outsl
ss
bound
lds
push
int3
dec
dec
add
loop
push
fsubrl
sbb
cld
pop
inc
and
fiadds
jnp
sbbl
sbb
mov
popa
add
and
daa
jmp
mov
sub
push
and
mov
xor
outsl
rorb
imul
aaa
xor
inc
push
cld
arpl
aaa
sub
xor
pop
sbb
movsb
pop
popf
sbb
sbb
push
popa
or
jo
adc
inc
add
bnd
or
xchg
dec
cmp
dec
sub
mov
adcb
sub
ret
cmpb
test
lods
xlat
mov
add
mov
inc
jo
pop
xor
jae
mov
pop
mov
stc
sub
xchg
pusha
mov
popa
push
adc
or
mov
nop
cmp
push
stc
das
in
mov
leave
pop
mov
testl
addl
and
jno
xor
outsb
insl
dec
ds
adc
pusha
pop
mov
mov
sbb
sti
outsl
clc
dec
les
and
pop
pop
add
dec
aas
inc
pusha
nop
add
icebp
mov
out
sbb
pop
sub
sub
dec
inc
shlb
ror
stos
sub
xor
sub
mov
lds
push
addb
cld
test
pop
sub
mov
jmp
adc
xor
inc
mov
jmp
adc
dec
cmpsb
es
flds
mov
popa
sub
cmp
pop
sub
add
out
rcll
mov
and
cmp
lret
lods
lret
adc
inc
lret
mov
jp
movsb
mov
mov
and
test
mov
and
xchg
dec
out
shr
orl
movzwl
sub
fwait
call
into
jo
mov
add
popa
adc
mov
lret
jno
xchg
stc
cmc
lds
out
test
push
jecxz
jge
cmp
loope
sub
in
xchg
mov
es
nop
and
pusha
push
fdivrl
aas
orl
mov
push
add
mov
pop
in
adc
out
sbb
jb
es
rcl
mov
sbb
and
insb
cwtl
lret
add
push
xchg
pushf
add
test
adc
adc
daa
cmc
ret
imulb
loope
fiadds
popa
cmc
push
pusha
xchg
clc
xchg
xchg
fisubrl
push
jb
xor
pusha
mov
cvtdq2ps
call
push
outsb
arpl
popa
das
sub
fisubs
scas
into
sbb
add
dec
shlb
adc
mov
jle
fsubl
adc
pop
mov
fildl
mov
xlat
adc
push
call
sbb
rorb
xor
mov
and
aam
popa
popf
cmc
or
mov
dec
scas
dec
dec
mov
mov
out
ret
aas
cmpsl
mov
dec
fmuls
push
dec
mov
call
lds
imul
cwtl
add
pop
mov
mov
xorb
xlat
lea
addl
and
mov
fcompl
mov
clc
dec
popa
int
inc
inc
mov
int3
xor
adc
xlat
add
jp
and
jns
xchg
mov
add
arpl
fstpl
push
pop
scas
push
mov
cmp
cli
xor
rcll
outsl
jb
sbb
mov
pop
push
lret
adc
scas
fs
sub
pop
or
out
and
call
subb
insl
pop
popa
lds
and
test
or
sarb
int
ss
pop
pop
inc
inc
add
stc
mov
dec
mov
jo
mov
push
add
loop
sahf
pusha
mov
imul
sbb
hlt
es
arpl
add
in
dec
xlat
std
aad
pushf
push
sub
push
cmc
sti
mov
ss
mov
mov
add
mov
or
cmpsl
inc
mov
fs
out
frstor
add
jecxz
jne
sub
loopne
sarb
fnstcw
cmp
add
popf
add
sbb
jmp
shl
dec
adc
add
fistl
shll
pop
je
mov
add
lods
ss
lods
cs
xlat
pushf
into
inc
imul
test
cwtl
push
inc
xor
popa
sub
outsb
add
push
or
adc
call
sbb
addb
mov
adc
lret
pop
jno
movsl
aaa
call
xor
call
pop
scas
inc
and
cmp
mov
test
inc
test
xchg
cmp
adc
hlt
and
sbb
ret
in
mov
divb
aas
dec
clc
int3
inc
mov
rorb
or
dec
add
push
stos
daa
mov
ja
mov
frstor
lds
movlhps
fildl
jae
sbb
fsubs
xchg
lcall
lahf
and
dec
popa
push
std
out
fidivs
int
sti
andb
pop
and
sbb
mov
out
or
push
add
adc
out
mov
jl
add
hlt
je
es
inc
test
add
clc
arpl
inc
pop
movb
sub
in
add
sub
je
cs
out
jle
jle
pusha
mov
jns
lds
sub
pop
sub
mov
sub
dec
lahf
mov
adc
mov
test
jbe
dec
inc
int3
dec
addl
xor
cmp
xchg
cmp
in
in
clc
in
std
push
xchg
mov
out
fmull
jo
ss
sahf
mov
lock
push
add
shl
popa
das
jb
cli
pop
push
imul
aas
add
jns
xchg
in
into
add
dec
xor
mov
sub
rorb
cmpsb
xorb
xchg
fnstsw
into
jge
mov
jg
jnp
add
pop
mov
in
loope
sbb
sbb
and
movb
sti
xchg
add
push
push
inc
add
rcrb
xchg
xorb
jmp
pop
mov
mov
jge
xor
pusha
mov
mov
jnp
push
pop
add
inc
into
out
mov
nop
jns
or
pop
and
jle
in
stos
xlat
ror
add
jno
fisttpll
enter
jo
or
mov
mov
data16
xchg
ds
mov
lret
jns
jp
sub
mov
scas
push
add
sbb
das
pop
add
cmp
jmp
mov
arpl
or
lret
dec
push
adc
jp
addr16
imul
test
pop
mov
xlat
jge
in
popf
inc
jmp
adc
adc
or
jno
add
pusha
out
cmpsl
cmp
push
sbb
mov
dec
sti
cwtl
jl
add
stos
add
mov
jns
cmp
pop
insb
mov
inc
fdivrl
mov
xchg
jo
mov
inc
adc
test
mov
and
mov
insl
xchg
mov
lds
in
dec
ds
dec
fldcw
orb
xchg
add
rol
or
adc
loop
mov
jle
xchg
mov
and
add
push
pop
mov
dec
mov
insl
mov
sarl
je
add
lods
adc
adc
adc
aaa
jge
or
cwtl
push
lret
add
jp
nop
cltd
cmp
cs
sbb
push
push
mov
push
push
stos
rcrb
mov
iret
sti
sarl
jmp
stos
or
dec
aam
aam
mov
loopne
cmp
add
sbb
rorl
jle
mov
mov
and
fwait
jmp
xchg
push
or
movsl
sub
push
push
loop
xchg
clc
loope
add
mov
sub
inc
jnp
testb
mov
or
inc
dec
pop
cmpsl
lds
mov
add
add
xor
cmpsb
xchg
mov
mov
mov
aad
add
mov
pop
add
ret
or
sub
push
adc
fbld
movsl
addr16
test
sbb
fcomps
shll
lahf
in
adc
or
mov
in
jl
roll
ljmp
testb
sub
add
or
mov
mov
mov
add
loop
shlb
xchg
stos
add
jl
test
push
add
xor
std
mov
mov
es
jp
inc
adc
dec
sub
jmp
test
jno
mov
flds
cs
lea
mov
test
gs
test
add
ds
and
push
xor
add
or
add
add
gs
or
scas
jp
add
push
sbb
decb
jmp
xor
fnsave
nop
loope
pop
add
stos
ljmp
or
jae
push
leave
shrl
invd
adc
adc
sarb
mov
dec
movsl
cs
xchg
outsl
mov
cs
pop
out
fst
cmp
and
mov
mov
js
xor
lret
in
add
xor
mov
jns
inc
js
cld
jmp
or
jo
popf
stc
stos
dec
fcoml
mov
shl
cmc
push
scas
add
pop
sub
sub
je
nop
in
sub
pop
popa
pop
cld
sub
test
sbb
sub
cmpsb
xor
add
and
sbbl
lahf
mov
cmpsl
aam
xor
hlt
pop
pop
mov
xor
push
dec
orb
pandn
les
add
in
out
into
pushf
adc
add
lock
push
mov
daa
jmp
and
shrb
xchg
pushf
mov
add
fwait
jno
adc
sahf
popa
sub
xor
cwtl
or
or
mov
push
imul
mov
add
push
outsl
adc
push
push
jae
adc
jecxz
add
pop
ja
xchg
cltd
dec
and
enter
adc
lret
xor
cs
repz
inc
jecxz
push
test
dec
sub
fldl
adc
lds
mov
and
fdivl
negl
mov
add
or
les
movsb
je
popf
sub
or
pop
pop
je
push
push
mov
push
pop
pop
int3
mov
das
out
sbb
fcmovnbe
xor
dec
fldl
jbe
push
and
mov
add
sub
icebp
jne
cltd
pop
and
pop
push
test
ljmp
flds
popf
add
out
repnz
xor
movsl
test
sbb
jns
and
dec
mov
sbb
push
inc
jg
xchg
inc
shll
bound
inc
add
push
popf
sbb
icebp
mov
mov
pop
mov
jl
cs
loope
sbb
movsl
pop
cmp
imul
mov
push
outsb
sti
add
arpl
rcrb
daa
stc
xor
mov
enter
fsubrp
fcoml
das
push
push
cwtl
dec
es
aas
pop
mov
mov
mov
sub
adc
pop
pop
bound
and
xor
add
enter
mov
xchg
decb
andb
xchg
add
jns
and
xchg
mov
call
xchg
pop
adc
pop
dec
and
cltd
mov
pop
popa
addl
subb
sub
pop
sbb
mov
out
outsb
mov
push
mov
adc
dec
popa
mov
nop
xor
push
mov
pop
test
jg
inc
nop
out
out
sub
out
pmaxub
fadds
adc
adcb
jl
jecxz
xchg
and
jne
sub
jb
les
xchg
mov
ja
jmp
orb
ljmp
pusha
pop
insl
sbb
mov
mov
call
dec
xchg
daa
dec
add
lret
insl
cld
inc
mov
pop
negl
movl
cmpsb
adc
inc
jmp
and
mov
push
lea
stos
mov
jno
test
ret
dec
loope
add
cmc
or
ret
or
addl
push
pushf
or
mov
push
mov
fsubr
rolb
ficomps
jmp
in
jb
cmpsl
les
das
loope
xor
push
popf
dec
sub
insl
mov
mov
add
push
mov
add
shl
aas
js
andb
popf
arpl
inc
sub
stos
push
mov
ret
or
pop
movsl
pop
pop
xor
ljmp
mov
mov
mov
cmp
loop
and
or
popf
sub
xor
inc
xor
into
fdivl
sbbb
add
punpckldq
mov
pop
pop
daa
jbe
lret
push
sbb
rclb
fcmove
repnz
sti
rol
push
xchg
cmp
cwtl
sarl
icebp
repz
movsb
adc
in
jo
test
sti
sahf
fisubs
cmp
pop
das
stc
push
mov
add
add
cmc
add
movsl
cmp
push
push
dec
arpl
push
or
sub
inc
fucomip
fwait
add
addr16
or
push
cmpsl
add
pop
das
lret
stc
inc
movsb
mov
jge
stos
mov
scas
cltd
inc
pop
stos
popa
or
outsb
clc
sarb
icebp
or
lahf
jnp
and
dec
fstpl
rorb
push
out
mov
jno
add
cmpsl
xorb
adc
in
push
xchg
dec
std
cli
daa
mov
cs
push
xchg
daa
dec
stc
inc
mov
pop
mov
loopne
cwtl
out
adc
sub
pusha
sub
lret
inc
add
aaa
cmpsl
popa
add
push
je
push
rol
mov
add
xchg
cmp
push
repnz
dec
sbb
repnz
add
cli
imul
jno
aas
orb
int
push
add
cmp
add
into
cltd
or
add
jne
pop
push
lcall
les
pop
nop
sub
mov
shrb
rcr
mov
das
pop
cmp
mov
xlat
mov
arpl
enter
enter
add
lds
dec
daa
jge
std
pop
inc
add
das
or
ret
cmp
insl
adc
pop
inc
pushf
or
pusha
lds
sbbb
adc
dec
nop
mov
add
mov
into
jno
add
bound
mov
mov
in
inc
add
pop
mov
and
xchg
add
movsb
sub
mov
lcall
and
dec
add
xor
fildl
ret
cmp
cmpl
loop
dec
mov
fimull
xchg
jae
push
dec
les
lcall
and
xor
clc
shll
mov
popf
mov
outsl
cs
push
nop
cmp
fs
stc
pop
je
inc
out
adc
mov
mov
dec
test
adcb
lock
jnp
cld
pop
mov
push
fistl
das
add
fldcw
ja
adc
mov
sub
sahf
and
daa
gs
pop
stc
out
pusha
jb
pop
insb
stos
jnp
dec
sub
mov
sbb
and
je
pop
repz
out
popa
in
push
jnp
in
neg
mov
test
popa
scas
out
je
lahf
jmp
fildl
andl
addps
push
je
jno
xor
btc
inc
and
or
pop
xchg
rorl
hlt
mov
push
dec
int
mov
push
xor
xchg
adc
ficomps
pusha
roll
les
leave
mov
ds
dec
mov
or
mov
fists
dec
sti
cltd
enter
pop
jne
popf
xor
adc
inc
rcr
add
pop
push
push
in
jo
loope
rcr
xor
mov
jecxz
cmc
mov
fs
xchg
mov
stos
bound
sub
add
jle
lret
jecxz
shrl
lods
mov
dec
dec
ret
pop
sbb
sarl
jle
leave
sbb
adc
sbb
jnp
enter
cmp
lret
mov
jo
inc
jno
pop
pop
mov
add
mov
test
ljmp
inc
scas
push
or
add
cmp
mov
cld
fadd
xchg
xor
mov
pop
popf
adc
push
int3
adc
aam
cmpsb
jb
mov
xchg
or
arpl
in
and
mov
pop
rorl
idivl
mov
pop
mov
sbb
and
std
adc
out
dec
lcall
into
push
mov
or
jl
or
sar
jo
outsb
pop
int3
fisttps
imul
orb
inc
andb
add
ret
mov
mov
repnz
mov
add
je
mov
dec
xor
mov
jbe
jmp
outsl
pop
fiadds
or
mov
mov
sbb
push
hlt
out
jo
cltd
roll
imul
int
inc
into
int
sub
pop
rorb
lret
sub
pusha
xchg
rcrb
fnstcw
add
xor
scas
ficoml
test
dec
test
xchg
mov
fldt
pop
mov
cmp
aam
lea
mov
das
sub
jge
add
aam
adc
lea
inc
insl
pop
mov
pusha
call
cmp
loop
lock
jns
adc
and
hlt
lss
fbstp
iret
push
jmp
mov
dec
not
dec
ja
pop
dec
or
add
popa
pusha
cmp
daa
les
fisubl
lock
add
or
add
or
clc
add
pop
pop
and
push
stc
jo
sub
mov
jmp
push
mov
add
or
inc
push
add
mov
mov
cmp
repz
and
fsubrl
addr16
jnp
dec
out
adc
lods
pop
dec
nop
into
mov
and
adc
push
mov
rcrb
pop
aam
and
jbe
fcoml
aam
and
stc
cld
enter
sub
mov
sub
adc
dec
jb
lea
test
mov
pop
mov
pop
call
movsl
filds
sbb
inc
das
daa
dec
cltd
rcl
mov
xlat
mov
incl
cmp
jg
fisubrl
dec
aas
mov
out
and
xchg
mov
sub
ljmp
testb
pop
arpl
fimull
pop
and
in
inc
inc
add
inc
xchg
xchg
mov
je
imul
inc
jmp
xchg
xchg
xor
ds
enter
das
push
push
push
ret
sbb
call
jmp
sbb
cmp
and
imul
xor
xlat
pop
cs
jbe
mov
les
mov
js
rorb
insb
pop
xchg
cmpb
loopne
push
xchg
bound
filds
dec
sbb
mov
testb
mov
mov
shr
into
rorb
mov
add
mov
push
jmp
pop
adc
or
jne
ret
loopne
dec
sub
add
jp
in
sbb
mov
ficoml
dec
imul
rclb
add
sti
iret
inc
ds
pop
stos
sub
mov
pop
sub
xchg
shr
mov
in
mov
and
pop
sarb
inc
imul
shl
mov
jbe
adc
insb
mov
cmp
mov
add
xor
push
aad
stc
add
adc
add
insl
cmp
jno
or
and
jg
sub
mov
in
sbb
subb
aas
mov
popa
sub
rcr
mov
mov
pop
cmp
add
es
jle
in
fdivs
mov
jns
lds
scas
fistpl
mov
and
jecxz
add
orl
dec
push
mov
outsb
loopne
pop
sbb
push
cmc
cmpsb
dec
push
add
mov
movsl
rcrl
cmp
push
dec
jmp
inc
std
insl
test
fisttpl
mov
xor
mov
xchg
mov
xchg
sbb
icebp
push
fisubs
add
inc
xlat
mov
daa
std
icebp
es
push
addr16
leave
orb
adc
clc
add
mov
xchg
jnp
out
lahf
rol
or
add
dec
sbb
call
lods
inc
mov
fwait
lock
popa
dec
fdiv
mov
sbb
xor
add
push
mov
inc
pop
test
mov
adcb
test
in
xchg
imul
inc
je
jmp
fbstp
xchg
cltd
icebp
stc
imul
int
dec
call
in
or
pusha
mov
mov
test
sbb
iret
adc
and
dec
add
mov
pop
sarl
ret
push
fadds
xchg
push
pusha
mov
ds
jle
in
in
leave
xchg
imul
and
loop
popf
xchg
fstl
aas
mov
xchg
inc
push
mov
das
aad
in
pop
inc
push
sub
and
call
int3
jbe
pop
ljmp
je
inc
add
pop
sbb
scas
sarb
pop
in
gs
sub
xchg
cmp
stc
jo
frstor
outsl
push
add
push
jge
or
push
shrl
outsb
in
mov
cmpsb
pop
sbb
sub
mov
pop
jo
sub
stos
cmc
sbb
dec
int3
daa
shlb
and
pusha
les
push
pop
popa
in
cmc
call
inc
aas
mov
mov
pop
test
out
sbb
jne
push
and
clc
into
sub
sub
mov
push
into
loope
sbb
adc
mov
loope
stc
xor
pusha
mov
push
mov
mov
pop
movsl
insl
mov
fists
popa
sub
sub
call
pop
cmpsl
inc
ljmp
or
and
push
popa
adc
pop
shlb
mov
daa
or
mov
adc
dec
add
sub
dec
add
mov
pop
mov
filds
mov
add
and
notl
fisubrl
dec
jmp
popa
pop
nop
subl
push
iret
out
mov
cwtl
insb
popa
xchg
ds
cmp
jbe
test
das
movsl
push
das
xor
mov
push
sar
rorb
xchg
addr16
jmp
lret
lods
jnp
or
call
sub
outsb
rclb
mov
icebp
add
jle
sub
or
push
add
data16
shr
add
push
xchg
repz
aaa
in
xchg
shlb
rcll
or
insl
das
cmc
mov
cld
cmp
jmp
mov
sbb
mov
rcl
push
lea
clc
inc
mov
gs
add
ss
rcrl
xor
add
mov
xor
cmp
mov
lea
nop
sub
cmc
mov
sub
loopne
outsl
lret
in
mov
outsb
pushf
and
add
fs
test
dec
mov
stc
mov
jnp
mov
and
loopne
cwtl
arpl
add
cmp
popf
adc
sub
inc
or
cmp
out
jo
sub
push
adc
sbb
push
cwtl
jbe
lea
fnstenv
jl
mov
xor
or
rclb
mov
test
mov
cmc
jo
mov
cmp
sub
mov
cmp
ss
sub
loope
push
cmpsl
and
and
popf
cs
xchg
ret
mov
cmpl
shlb
sbbb
push
inc
inc
fidivrl
mov
nop
nop
fcmovnbe
pop
xchg
ret
out
sbb
xor
and
js
xchg
rolb
fld
mov
push
mov
xor
mov
push
arpl
adc
fldenv
or
or
ja
inc
sbb
jle
div
cmp
push
or
cmpsl
popf
stos
out
mov
adc
das
mov
add
in
jne
mov
lods
dec
dec
sahf
mov
les
sti
daa
and
pop
aad
pop
out
scas
xchg
mov
out
jg
sarl
mov
pop
jne
jnp
fcoms
pop
pop
sbb
adc
dec
jg
leave
xor
loope
cmp
xor
roll
push
daa
jmp
out
movsl
pop
xchg
dec
icebp
adc
shll
aas
mov
pop
cli
and
scas
fst
cs
cwtl
adc
xchg
mov
lock
add
jge
call
mov
pop
pop
xchg
lea
idivl
sub
mov
sar
sub
xor
jmp
cs
dec
daa
jle
mov
xchg
insb
xor
int3
mov
cmpsb
loope
shlb
ficompl
pop
mov
xlat
out
repnz
or
adc
fnstcw
aam
test
fisttpl
rclb
fimull
lock
xor
aam
push
roll
sbb
andb
adc
add
pop
fildll
jbe
test
outsb
xchg
adc
sub
xchg
or
bound
push
out
xor
sub
repnz
pop
push
shlb
stc
ljmp
sub
ss
sub
mov
push
call
mov
cli
xchg
je
and
pusha
xor
popa
mov
mov
ret
sbb
lret
dec
and
orl
dec
mov
sbb
push
add
push
xlat
mov
in
add
out
sbb
fdivp
jg
mov
pop
mov
mov
sub
mov
movsb
fwait
mov
call
std
push
pusha
xchg
or
dec
rcl
push
cmp
dec
pop
add
popl
add
pop
mov
pop
sub
sbb
jge
ret
test
add
mov
adc
or
add
inc
addr16
fstpl
test
jbe
sbb
icebp
popa
out
popf
popa
popa
adc
jmp
out
lahf
in
pop
js
pminsw
push
inc
popf
or
mov
fcmovu
rcr
lods
cmp
mov
jb
je
pop
shlb
mov
or
mov
sub
xchg
insb
sub
insb
dec
and
inc
mov
scas
jns
cltd
add
nop
fcmovbe
sbb
mov
jne
mov
and
and
cmp
loop
xchg
mov
aad
jle
aad
push
add
lret
insl
add
cmp
lcall
cmp
mov
add
ja
fadds
in
mov
add
mov
cmp
xlat
mov
lods
bound
mov
mov
xor
sbb
mov
inc
stos
dec
xor
insl
call
popf
sti
push
movsl
ret
mov
fs
mov
inc
out
sahf
pop
dec
add
jo
dec
push
addr16
and
jmp
adc
mov
fwait
inc
and
add
push
cli
fcoml
leave
sbb
popa
out
outsb
test
inc
xor
xor
call
ja
mov
xor
adc
out
adc
cmpsb
xor
sbb
fucom
push
xchg
testl
push
inc
cmpsl
fnsave
xlat
add
add
or
mov
and
push
mov
pop
xchg
popf
in
jo
jns
outsl
cwtl
pop
mov
cwtl
jp
jnp
scas
xor
aad
adc
adc
mov
stc
mov
mov
test
inc
lods
std
xchg
repz
sub
das
push
xor
jnp
push
xchg
jbe
imul
mov
je
imul
push
ss
xchg
push
xchg
push
xchg
fcomp
int
lret
push
add
adc
xchg
adcl
adc
stos
xchg
jmp
inc
fsubrl
popf
cmp
pop
cmp
test
shll
cli
cmp
adc
mov
xor
adc
loope
pop
add
adc
pop
mov
cmp
test
dec
sub
add
in
cmp
fsts
sbb
cli
adc
out
mov
dec
enter
das
out
aas
mov
cwtl
mov
in
stos
in
jbe
inc
pop
add
dec
negb
xorb
xlat
test
pop
pusha
mov
fdivs
and
jl
cli
add
lret
push
xor
pop
sti
pusha
shrb
inc
sub
dec
add
add
jle
imul
test
sbb
mov
std
in
cmp
sbb
leave
add
inc
iret
fsubrs
add
rcl
incl
std
leave
aam
fistpll
mov
es
adc
xorl
add
divl
add
jb
dec
cmpsb
push
add
ret
mov
xor
outsl
jo
jg
mov
push
lock
lods
enter
add
sub
mov
push
addb
xchg
hlt
insl
out
repz
mov
out
mov
xor
sbb
or
xor
repz
pop
movsl
jl
mov
add
add
bnd
inc
jne
push
arpl
adc
mov
sub
pop
cld
test
xchg
push
cwtl
lret
mov
loope
int3
mov
push
shr
adc
js
or
repnz
xlat
mov
sub
mov
jne
cmpsb
adcl
push
movsl
nop
jnp
popf
cmpb
shll
stos
add
mov
fimuls
adc
jmp
adc
rcrb
mov
dec
aam
sub
mov
cmp
movsl
les
lcall
cs
mov
sbb
int3
cli
or
test
push
and
je
lret
rclb
mov
mov
add
xchg
pop
mov
jmp
addb
rcrl
and
lods
sbb
adc
popf
shrb
int3
jecxz
fsubr
sbb
and
add
mov
jbe
sbb
aaa
daa
inc
test
pop
mov
outsb
call
xchg
jmp
jecxz
enter
shll
ret
cmc
sbb
jno
lds
pop
outsb
imul
xchg
jo
outsb
push
arpl
sbb
push
inc
fcoms
jno
mov
shr
add
in
cmp
data16
add
jns
add
jecxz
xor
adc
imul
jg
sbb
xchg
sbb
xchg
mov
push
fwait
pop
or
and
mov
imul
test
lcall
neg
orb
sbb
in
jecxz
in
mov
das
jne
mov
push
add
nop
xor
sbb
inc
sub
sub
jp
fistpl
sahf
fnsave
and
ljmp
and
and
dec
dec
pop
xrelease
clc
stc
mov
lret
xchg
jae
push
mov
dec
xorb
icebp
push
mov
push
mov
ret
xchg
add
sti
sahf
mov
sub
and
add
sub
push
mov
add
mov
mov
push
ret
ljmp
mov
cmp
inc
push
in
jno
mov
jne
lcall
movsl
ret
lret
sti
pop
jbe
inc
lea
outsb
cs
cli
push
and
roll
cmpsl
mov
pop
stc
das
adc
les
push
add
pop
adc
scas
in
xchg
mov
adc
fidivl
add
add
cmp
gs
pop
dec
rcll
addl
fimuls
pop
xchg
mov
fldcw
mov
adc
add
add
dec
popa
sub
and
in
daa
pop
xchg
or
mov
and
icebp
adc
ja
add
test
add
mov
popf
cli
mov
int
clc
mov
or
add
out
syscall
fistpl
jb
loop
mov
push
mov
jns
add
sbb
sbb
mov
stos
insl
adc
pop
outsl
lcall
and
andl
mov
inc
shlb
mov
repz
jge
push
movsb
clc
sub
outsb
syscall
lret
cmp
or
rol
in
fsts
inc
lds
sub
int
add
push
popf
test
pop
cmp
add
add
rol
mov
ss
adc
gs
sti
das
jp
add
xor
xchg
pop
sub
mov
roll
lock
outsl
adc
mov
mov
add
lret
adc
dec
test
loope
and
adc
cs
mov
jno
cmp
add
pusha
push
lea
or
xor
mov
mov
repz
std
sbb
imul
lds
stos
and
loope
movsl
rorl
mov
jecxz
test
add
adc
mov
push
add
rcll
mov
mov
fidivrs
bnd
adc
and
lods
psllq
loopne
sbb
add
daa
sub
inc
cmp
xor
dec
paddsw
das
sub
test
je
xchg
or
out
outsl
or
sti
ficoms
sarl
outsl
testb
loope
fwait
push
jle
sti
or
test
sbb
sbb
gs
lea
sbb
pop
pop
int
loopne
pop
or
repnz
push
lret
dec
lret
add
push
icebp
ja
nop
in
call
jg
ja
xor
lods
lock
stc
inc
and
lds
fwait
in
pop
js
lret
add
sub
dec
jmp
or
pop
jge
icebp
inc
inc
movsl
shll
popa
and
jle
loope
popf
add
sub
mov
cli
or
inc
test
mov
or
xchg
inc
bound
push
add
inc
add
jge
in
mov
jae
mov
pop
mov
dec
out
and
xchg
jmp
sub
leave
lahf
testb
repz
mov
lock
push
push
push
xor
or
xchg
push
loope
add
mov
push
push
push
popf
icebp
std
insl
or
mov
das
sti
icebp
aaa
sahf
mov
xlat
leave
pop
push
sub
or
fs
and
pop
xchg
loope
sub
jo
cld
fisttpl
add
iret
add
add
inc
mov
rcll
daa
rep
add
add
in
mov
cwtl
mov
int
rcll
jno
movsl
sbb
xor
out
mov
dec
xor
sub
sbb
and
mov
push
pop
or
pop
jae
and
add
sbb
or
pushf
push
int
les
enter
xchg
insl
jae
sbb
jns
out
sub
mov
and
push
bound
loope
add
mov
cs
or
lret
add
fisubrl
mov
xor
int
outsl
lea
add
aam
ret
enter
pop
pusha
es
push
ljmp
jmp
stos
jnp
push
mov
dec
cld
push
push
into
push
xor
jmp
cwtl
cmpsl
sbb
fdiv
mov
jno
mov
cmpsb
mov
out
xor
stos
repz
add
call
icebp
cmp
cmp
sbb
add
sar
push
sub
add
or
jnp
xchg
add
repz
and
xor
clc
ficoms
push
mov
or
sub
mov
pop
cld
stos
cmpsb
push
mov
adc
sub
adc
test
xchg
mov
xchg
add
imul
add
jbe
dec
jns
cmp
xor
add
dec
xchg
pushf
push
es
or
out
mov
stos
dec
subl
lmsw
fldenv
xchg
outsb
jmp
add
mov
cmpsb
adc
fstpt
mov
and
push
das
mov
loope
jnp
pop
sbb
push
add
jae
xchg
ss
fbstp
les
adc
mov
fidivrs
repnz
push
adc
mov
mov
repz
inc
mov
pop
fsubr
repz
scas
dec
cld
enter
ficomps
pop
stc
mov
outsl
sahf
or
lock
dec
js
mov
add
lea
lods
jno
dec
xor
jecxz
xlat
out
add
test
cmp
jmp
popf
aaa
icebp
add
mov
adc
adc
hlt
sbb
add
fcomi
sbb
or
mov
mov
testb
and
xchg
xchg
sub
pop
test
loop
cmc
insb
addb
sbb
pop
inc
mov
test
gs
and
jne
ds
pop
sbb
idivl
pop
and
add
inc
iret
mov
stos
add
outsb
jge
add
orb
int
or
xchg
mov
scas
adc
ja
loopne
or
cs
pusha
mov
xor
add
sbb
cltd
add
bound
pop
nop
mov
or
or
inc
dec
sbb
add
add
repz
stc
js
dec
pop
fwait
pushf
sarb
outsl
shr
push
mov
mov
lds
inc
sbb
lcall
lock
bound
sbb
pop
jo
mov
add
bound
repz
fadd
loop
mov
push
outsl
outsl
icebp
sbb
daa
jg
add
mov
icebp
mov
sbb
and
jnp
sub
lds
bound
add
pushf
xchg
jmp
or
in
push
shlb
hlt
push
or
stos
notl
add
inc
popa
popf
cmc
add
sub
adc
clc
adc
pushf
xchg
sti
add
pop
mov
pushf
add
les
pushf
icebp
sbbl
push
adc
test
inc
js
mov
pushf
and
lea
outsb
and
mov
add
ja
outsb
push
shl
sub
addl
pop
and
aaa
jnp
push
add
xrelease
and
dec
shl
cli
lock
xor
adc
and
popa
aam
jle
mov
add
pushl
sub
inc
inc
add
pop
cmpsl
push
mov
pop
ds
out
fnstsw
mov
lock
xchg
fistps
stos
shl
dec
daa
js
and
or
add
aas
add
sarb
pop
es
mov
dec
sub
mov
jno
and
push
loopne
dec
jl
and
ret
test
add
pop
push
das
jle
mov
sbb
pusha
fstl
xchg
lret
pop
mov
jbe
test
andb
and
push
scas
pusha
sub
adc
jge
xchg
sbb
insb
xlat
and
loopne
inc
sub
adc
jmp
hlt
jne
and
push
mov
pop
das
inc
xor
adc
jae
daa
add
xchg
mov
pop
cmp
cwtl
add
ljmp
and
push
mov
daa
xor
sub
mov
in
adc
bound
xchg
cmc
dec
push
clc
das
pop
or
sbb
imul
sbb
sbb
mov
sysenter
call
dec
dec
in
popa
cld
sbb
mov
xor
pop
mov
add
push
insb
sarl
movsl
addr16
push
pop
sbb
push
cmp
movsl
cmp
ror
push
sub
popf
ljmp
mov
pop
add
cltd
pusha
js
loopne
shrd
sbb
divb
or
add
sbb
jns
push
and
pushf
jl
xor
out
das
int3
adc
xchg
push
pop
pop
or
clc
mov
and
sbb
sub
mov
mov
out
cwtl
pusha
pop
js
sbb
or
pop
pusha
xor
pop
mov
dec
imulb
mov
loop
fildl
das
popf
mov
sbb
cmpsb
arpl
incb
out
jno
es
jns
pop
int
inc
daa
add
jno
adc
mov
jne
and
pop
cmpsl
lods
xor
repz
fs
aaa
xlat
add
sahf
jns
bnd
lcall
add
xor
inc
jecxz
add
rdtsc
mov
fmuls
mov
fldcw
outsb
push
add
xchg
adc
and
add
mov
add
ljmp
jnp
ds
add
cwtl
lods
or
mov
test
sub
jl
inc
stos
shl
es
xor
es
jle
loope
or
insl
and
add
mov
ds
add
xor
mov
jp
rcrl
fwait
push
cmp
in
xchg
adc
lds
add
push
xor
jno
mov
das
adc
mov
jbe
cmp
push
addl
test
push
or
movb
mov
cwtl
cmc
jg
pop
out
mov
sub
add
dec
imul
pop
add
rol
mov
cwtl
std
or
insl
shlb
add
cltd
fst
rcll
out
pop
out
cmp
or
test
stc
xor
sub
cmp
jge
cmc
std
imul
sti
das
xchg
push
je
loope
push
push
in
mov
mov
add
and
add
cmp
sub
arpl
pop
xchg
dec
inc
rcrb
sbb
out
mov
shrb
cmp
cmp
xchg
xor
pop
cmpsb
adc
cs
dec
pop
xor
add
in
push
dec
mov
pushf
call
cmp
addb
dec
aad
fprem1
in
add
ret
sti
rolb
sub
in
stos
dec
cmc
in
add
shll
mov
sbbb
inc
or
pop
dec
mov
mov
insb
adc
daa
roll
nop
movsl
add
mov
add
adc
fstps
loop
sub
cmp
sbb
add
into
test
dec
fsubs
adc
jge
mov
mov
jmp
jge
or
mov
loopne
in
call
jmp
das
mov
xchg
gs
pop
sub
add
xchg
mov
loop
in
das
sub
cmpb
sub
call
cmp
test
jmp
sub
test
das
adc
push
cmc
push
cmpsl
cmp
aad
xlat
mulb
adc
and
stc
js
imul
mov
cs
pop
dec
movsl
imul
es
js
jae
push
enter
push
pop
pop
mov
sub
and
lods
jns
cmp
imul
mov
jecxz
mov
enter
lods
ficomps
cmp
mov
adc
cwtl
xchg
mov
jmp
or
cmp
das
and
and
aas
int3
mov
xchg
test
out
js
out
add
mov
and
incl
xchg
jns
ficoms
leave
push
xchg
xchg
daa
and
daa
add
in
packssdw
addr16
das
in
faddp
pusha
adc
pop
incb
mov
pop
jge
fcoml
pop
aam
inc
sbb
arpl
cmp
loopne
test
cmc
cmpsb
outsb
dec
neg
push
sub
daa
sub
push
cli
insb
ret
aam
mov
adc
in
adc
sub
xchg
inc
mov
push
add
std
dec
jno
jp
adc
or
jns
inc
pop
inc
xchg
je
fmull
xchg
shr
jg
xor
fwait
cmpsb
xor
in
or
popf
xchg
gs
jne
pop
xchg
jg
out
jg
scas
cmp
and
adc
clc
xor
in
ja
mov
xchg
loopne
mov
mov
and
fwait
jmp
je
adc
mov
jmp
into
scas
mov
push
jmp
sbb
fs
push
cmpsb
cli
push
imul
aaa
mov
mov
add
insb
andb
or
cltd
sbbl
movsl
pop
mov
js
adc
imul
mov
test
pop
or
mov
movsl
push
daa
movsb
popa
jbe
dec
data16
add
sbb
test
scas
or
loop
out
jg
dec
out
les
inc
pop
xor
shl
jb
or
outsb
jp
push
sub
test
in
out
adcl
push
cmpl
into
jnp
cmp
outsl
int3
or
mov
cmpsb
adc
loop
daa
leave
out
je
inc
sub
test
addl
mov
dec
daa
mov
lea
push
fnstcw
inc
sub
sub
cmp
or
adc
in
mov
inc
push
push
add
out
adc
das
lods
sbb
lock
push
jo
pop
pop
sub
pop
nop
rclb
push
test
add
mov
push
test
push
add
repz
js
xor
sbb
ljmp
je
mov
xchg
int3
mov
xchg
jbe
jle
mov
cmpb
mov
jecxz
negb
fldl
cmc
sbb
mov
mov
push
imul
jl
mov
sub
and
dec
pop
inc
faddl
add
mov
clc
pop
out
sbb
in
inc
orb
adc
negb
sbb
mov
adc
adc
add
sub
inc
jl
add
addr16
scas
pop
jle
outsb
add
or
pop
das
arpl
lock
mov
sti
out
jo
popf
mov
push
in
adc
adc
ret
and
popa
jns
mov
scas
stc
push
loope
roll
or
inc
bound
or
add
xchg
loope
adc
mov
sbb
fucomi
mov
sub
sbb
fidivl
push
sub
push
fldenv
add
in
add
mov
fsts
push
mov
ss
adc
and
adc
cld
jmp
dec
and
test
enter
fadd
push
lret
je
mov
jmp
shld
pop
frndint
jle
pusha
call
popf
subb
push
add
pop
ja
in
in
fdivrl
sbb
inc
and
ret
loopne
adc
adc
mov
and
pop
popf
std
cmp
shlb
xor
scas
mov
inc
in
sub
jae
jb
cmp
inc
pop
rorb
pop
xor
es
sub
repnz
xchg
jns
add
adc
repz
jg
dec
push
imul
mov
and
and
lods
dec
xchg
imul
add
mov
add
popa
mov
mov
jbe
push
pop
and
loope
js
mov
hlt
mov
sub
lret
dec
or
es
aam
fiadds
rol
xchg
mov
popf
sbb
cli
jnp
add
mov
shlb
dec
fdivs
jno
dec
pop
stc
pop
ficompl
mov
nop
fisubrl
mov
xchg
mov
in
add
mov
adc
jmp
cmpsb
mull
push
test
pop
xchg
fstpl
add
sbb
bound
cli
shll
mov
xor
pusha
repz
and
push
push
movsb
int
mov
inc
pop
ljmp
js
nop
in
in
and
push
fnsave
xchg
divl
sub
push
and
sahf
dec
jo
insb
adc
dec
call
movzbl
or
ret
cltd
nop
fsub
fnstenv
ja
int3
push
in
push
movsb
push
sahf
mov
fidivs
lea
imul
xor
jg
shlb
aaa
dec
sub
pushf
mov
pop
inc
popf
jge
add
sarb
push
add
leave
pop
sbbb
testb
cmp
sub
mul
das
testb
mov
xor
je
dec
and
ja
cli
sbb
adc
lcall
xchg
push
push
xor
sbb
mov
pusha
je
out
dec
cmp
fadd
gs
add
adc
fisubrs
orb
aaa
sub
xlat
jle
scas
push
mov
mov
and
or
rorl
testl
add
pop
popf
aaa
orb
mov
cmc
and
imul
test
fcoms
ffree
sub
add
iret
cmpsl
fwait
scas
shl
inc
cmc
out
or
loope
push
enter
jbe
lcall
sub
inc
movsl
and
push
daa
push
jg
bound
mov
or
sbb
scas
je
lods
cld
mov
mov
inc
outsb
es
sbb
xor
push
pop
push
lods
jo
pop
int
in
pop
popf
andl
shrb
es
jae
sbb
shrb
je
dec
adc
loop
jmp
or
dec
add
dec
or
ret
cmpl
cmpb
or
frstor
fwait
jnp
mov
inc
pushf
mov
and
out
jo
nop
mov
jno
fistpl
sbb
cld
sub
or
outsl
bound
test
sub
test
out
cmp
dec
aam
add
or
std
ss
xchg
xor
fbstp
xchg
inc
xchg
jmp
mov
or
js
sbb
adcb
cmp
ja
rcrb
pop
filds
mov
es
sub
popa
out
insl
mov
jp
add
in
and
adc
das
push
mov
out
mull
pop
mov
sub
mov
pusha
cld
mov
out
mov
dec
cld
sbb
adc
lcall
ja
cwtl
subl
push
push
in
scas
and
and
mov
cli
mov
pop
repnz
in
std
mov
xchg
lret
sub
sbbb
int3
lock
push
and
and
movsl
in
mov
sbb
xor
cmp
mov
xor
mulb
xchg
and
data16
xchg
and
add
loopne
addb
push
stc
jecxz
or
iret
or
push
xchg
or
test
lret
xlat
or
mov
push
mov
test
out
sbb
xor
jle
cmp
add
jle
out
push
push
mov
shrb
inc
lret
add
inc
mov
sub
test
sti
test
adc
negb
int3
ret
push
cmpsb
cwtl
mov
loope
mov
push
xchg
sub
mov
sub
pop
cmp
insl
xchg
inc
in
pop
repnz
repnz
mov
addb
xchg
adc
xlat
icebp
popa
daa
jne
xchg
push
in
out
jnp
mov
push
mov
dec
iret
jmp
pop
or
dec
jnp
mov
add
mov
iret
or
popf
jne
nop
dec
das
and
xor
add
push
int3
mov
imul
pop
scas
repz
sub
out
and
mov
mov
or
addr16
jbe
testl
push
mov
pop
or
mov
sti
leave
int3
aad
cmp
out
roll
mov
jg
adc
add
jo
fisubl
enter
push
mov
pop
cmp
inc
inc
popa
jmp
fnsave
pusha
push
mov
push
mov
test
mov
lea
test
add
das
push
lods
call
xor
mov
pusha
xchg
imul
das
jo
cltd
add
mov
cmp
mov
gs
rorb
lea
dec
push
data16
test
cmp
jmp
es
loopne
sub
call
xchg
mov
adc
inc
daa
pop
inc
xchg
add
xchg
popa
and
push
add
xor
xor
shr
hlt
jmp
inc
clc
cmpl
xchg
xchg
sub
cwtl
pop
add
pushf
push
in
mov
sub
mulb
sbb
in
cltd
incl
pusha
adc
push
pushf
int3
int3
push
add
fnsave
add
jecxz
nop
pop
jae
mov
std
cmc
add
jno
mov
mov
push
out
repz
jle
das
mov
ret
pop
sub
dec
test
addb
or
lret
out
rcrl
pop
outsb
out
fidivrs
jge
es
sub
mov
sub
jle
xchg
andb
sbb
addb
pop
rcrb
and
das
mov
xor
sub
sub
lret
cltd
mov
fs
xor
add
sub
dec
into
push
or
mov
ds
xor
out
icebp
mov
ds
cmp
xor
movsl
add
adc
cwtl
or
movsl
cwtl
and
xor
jo
add
cmp
cltd
push
dec
jbe
mov
adc
pushf
and
shrb
add
insb
jp
push
pusha
mov
xor
fcoms
ljmp
out
or
dec
xchg
add
mov
cmp
lcall
and
and
std
dec
xor
jnp
ss
into
add
out
add
mov
outsb
and
xor
dec
add
mov
movsb
dec
add
pop
int3
mov
sbb
bnd
mov
mov
cmpsl
sarb
and
adc
imul
pop
add
or
call
pop
movsl
dec
mov
mov
mov
sub
mov
xor
leave
mov
cwtl
adc
sub
leave
ss
fsts
sub
aam
pop
lret
lock
jne
xchg
in
das
pop
cs
xchg
push
add
sub
ret
adcb
cs
dec
outsl
int3
clc
andb
stos
je
stc
xorb
pop
xchg
push
lret
lahf
push
fwait
call
and
ret
stos
xor
or
or
ja
xchg
push
cwtl
roll
dec
lret
test
inc
in
repz
xchg
xor
mov
sub
fwait
dec
outsl
mov
js
push
cwtl
pop
sub
mov
and
pushf
ss
out
mov
cmp
setb
std
or
xor
lds
pusha
push
xchg
movsb
aad
out
sbbl
imul
adc
adc
mov
xchg
popa
jb
mov
and
fs
lret
mov
add
imul
push
push
loopne
rclb
push
and
mov
jp
pop
and
or
andnps
add
add
in
pop
add
out
cmp
nop
int3
ltr
sbb
add
out
and
stos
jmp
dec
push
sbb
add
stc
sbb
push
mov
inc
add
stos
sbb
or
dec
pop
cmp
inc
iret
push
xor
adc
stos
bound
fxch
dec
push
rolb
mov
lock
xor
jp
or
sbb
pop
inc
inc
loop
mov
cmp
jecxz
jg
xchg
icebp
or
repnz
add
xchg
inc
push
popf
stc
cmc
loop
sbb
mov
fldl2e
pop
inc
or
mov
insl
or
stc
cmp
sbb
cmp
add
call
and
in
outsl
adc
fistpl
sbb
add
mov
rorb
ret
sub
leave
add
and
jns
mov
jno
sbb
push
pop
cs
cmp
add
and
lcall
and
adc
add
das
sub
fbstp
xchg
testb
mov
jecxz
add
or
ret
add
lods
lea
and
pushf
add
adc
mov
rcr
rolb
add
xor
popf
sbb
addb
lcall
mov
stos
xchg
pop
mov
mov
jle
inc
dec
sti
add
aas
sbb
xchg
mov
mov
popa
jle
adc
add
call
mov
and
or
pop
testl
xorb
jmp
es
jbe
enter
jp
xor
cmp
push
cwtl
outsl
inc
scas
popf
mov
mov
inc
xchg
add
mov
cmpsb
fmuls
cmp
sub
out
mov
push
enter
rol
test
mov
mov
inc
add
fcmovb
dec
push
mov
sub
adc
push
inc
out
sub
mov
cld
loop
jle
cmp
aaa
pusha
xor
mov
ljmp
and
push
mov
add
movsb
or
xor
xlat
inc
and
push
add
lods
es
and
sub
xchg
pusha
pushf
mov
stos
add
dec
sub
add
and
mov
dec
mov
cld
sub
enter
jecxz
shrl
inc
add
cmp
jo
fists
aad
test
or
imul
hlt
mov
jp
or
pusha
and
xor
push
and
add
jno
push
in
loopne
sub
xor
sahf
add
dec
sbb
decl
mov
xchg
push
xchg
arpl
scas
out
cmp
cmp
and
and
das
nop
cli
add
enter
adc
cli
adc
jg
cmp
loopne
mov
adc
or
gs
call
push
insb
test
add
sbb
push
roll
and
lds
add
popf
repnz
add
jg
subl
mov
mov
sbbb
loope
inc
lcall
lret
test
sbb
mov
and
add
xchg
mov
and
mov
mov
cmpb
xchg
imul
add
cmc
dec
jnp
dec
or
je
and
and
or
roll
clc
sbb
cmpsb
jecxz
cmp
fdivrl
sahf
mov
push
add
push
xor
xchg
sub
inc
sub
mov
sbb
sarb
daa
mov
push
or
cld
and
xchg
inc
and
loopne
fnstcw
es
popa
test
loopne
mov
push
cmp
add
test
nop
cmp
pushf
lahf
dec
rorb
inc
scas
es
sarb
mov
mov
and
sbb
jecxz
mov
aaa
adc
jle
add
subl
xchg
add
daa
cltd
pop
arpl
xchg
lahf
call
stos
push
or
repnz
movsb
sbb
inc
cmpsb
mov
icebp
mov
bound
pushf
or
pusha
adc
mov
loopne
adc
add
sbb
cs
inc
addb
mov
mov
cmp
mov
into
inc
and
inc
add
push
mov
shrb
push
jp
cmp
jns
sub
push
cs
repz
add
sbb
adc
push
mov
xchg
jbe
mov
mov
xchg
jmp
out
adc
out
dec
enter
es
loopne
and
fs
mov
popa
insb
add
pushf
jne
push
add
popf
fucomp
cltd
jns
dec
xor
add
leave
repz
add
add
aas
imul
ret
xor
leave
int3
cmp
test
inc
pop
cmp
mov
pushf
repz
insl
add
in
push
arpl
add
xchg
dec
mov
lds
add
andb
std
adc
cmp
ror
or
mov
sub
sbb
setno
pslld
loop
aas
mov
jl
push
sbb
sub
in
enter
cwtl
cmpsb
sti
les
addl
pusha
scas
aas
sbb
in
pmaxsw
pusha
ja
sbb
add
loopne
mov
mov
es
lds
mov
adc
and
add
xlat
mov
xor
add
push
addb
loopne
add
mov
pop
mov
bound
loopne
mov
fs
scas
shll
cmpsb
add
dec
pop
sub
add
scas
icebp
xchg
mov
push
add
mov
and
jp
and
mov
pop
imul
repnz
nop
rdtsc
into
sbb
mov
incl
ds
andl
cmpsb
mov
in
ja
mov
dec
leave
in
add
loope
popa
mov
stos
int
repz
scas
pop
paddusw
mov
sub
mov
clc
add
movsl
mov
or
stos
push
outsb
ljmp
lock
push
mov
add
scas
inc
lahf
les
lds
es
daa
cs
push
push
cwtl
xchg
dec
in
in
pop
mov
mov
lret
test
inc
inc
push
jbe
mov
dec
cmpsb
inc
mov
and
add
cmp
lock
push
and
and
pop
xor
pusha
or
xchg
pop
xchg
sub
sar
inc
mov
jns
push
mov
xchg
mov
push
orb
xor
stos
and
mov
out
aaa
nop
aam
sti
scas
cs
sahf
stc
fidivs
les
jo
lahf
repnz
push
enter
in
mov
mov
jmp
sub
ret
xor
mov
adcb
push
mov
iret
xor
dec
mov
pusha
mov
loop
add
jecxz
sahf
into
cmpsl
test
in
cmp
push
sbb
jo
mov
sub
outsl
lods
fsts
lds
pop
xchg
add
push
insb
sub
push
std
fnstsw
lods
add
in
js
pop
test
pusha
and
sbb
add
fst
push
mov
hlt
sbb
add
cwtl
add
fnstcw
ret
and
shl
add
push
xor
cmp
arpl
stos
clc
inc
cmpsl
jg
inc
jp
mov
nop
cmp
sahf
add
lret
sbb
pop
add
mov
es
aas
dec
mov
inc
pop
push
dec
adc
add
xchg
lret
sbb
mov
mov
roll
and
out
cmp
dec
lcall
int3
pop
mov
in
out
ffreep
and
rorb
int3
xchg
adc
xor
and
sbb
add
pop
jmp
adc
or
and
push
je
add
sbb
add
xlat
mov
jmp
mov
clc
add
dec
mov
cmp
push
aas
aad
repz
add
xor
ficompl
cmpl
aam
arpl
pop
mov
cwtl
push
dec
add
repz
idiv
shlb
int3
xlat
jb
cli
inc
inc
sti
mov
std
mov
push
enter
adc
cmp
add
and
out
dec
xchg
sub
mov
and
fldl
outsb
cmp
or
add
int3
pop
stos
sbb
adc
mov
mov
sub
data16
outsl
cld
jno
out
clc
xor
push
pop
jmp
add
inc
es
pop
loopne
inc
scas
popf
adc
jmp
int3
xor
sbb
aas
vunpckhps
inc
nop
stc
add
ja
add
out
lea
insb
and
mov
jae
add
push
inc
lock
out
repnz
or
maskmovq
ret
and
les
mov
adc
jle
and
call
sbb
dec
loope
add
pop
adc
pop
movsl
push
rorb
add
pop
les
add
aas
pop
pop
xlat
stos
add
lock
mov
and
enter
add
jno
mov
add
mov
out
gs
mov
or
lock
fbld
xorb
mov
jmp
les
or
subb
rep
test
shll
bound
mov
add
add
jle
mov
sbb
icebp
or
mov
xchg
dec
push
call
imul
pushf
add
xchg
xor
aad
ja
frstor
or
notl
enter
popf
out
sbbb
mov
add
insl
sub
test
stos
cmpsb
dec
lahf
add
jbe
mov
push
les
fcoms
sub
add
mov
mov
das
sbb
xchg
cmpsl
mov
adc
add
and
lds
mov
fucomip
add
sub
testb
cld
pop
jecxz
inc
mov
lret
dec
orb
loop
lock
les
pop
scas
pop
add
sbb
lret
sbbb
lods
add
ds
mov
into
insl
aam
mov
mov
jb
enter
mov
or
add
sub
loop
add
fldt
mov
dec
in
test
dec
xor
or
push
mov
jg
push
or
sarb
mov
clc
push
sbbb
test
rol
orb
dec
add
push
inc
adc
push
mov
lret
add
sub
dec
std
enter
stc
dec
sbb
lahf
add
cmpsl
repz
mov
pusha
loop
mov
jbe
or
adc
cmp
sbb
jg
xor
fdivl
dec
inc
or
lea
push
mov
add
loopne
loope
mov
loop
flds
add
cmc
int3
dec
add
or
cld
adc
mov
add
test
push
or
add
sub
and
add
mov
mov
icebp
dec
outsb
cld
adc
enter
fdivr
add
iret
into
shr
jge
jg
cmp
lret
mov
cmpsb
add
jns
shr
xor
daa
add
mov
jne
ret
add
xchg
mov
or
jb
inc
out
pop
mov
or
dec
add
aad
repz
jp
inc
arpl
cld
divb
and
inc
hlt
push
mov
inc
pusha
and
add
jge
inc
mov
in
add
and
adc
fsub
sbb
rol
add
ljmp
xchg
stos
jl
movsl
imul
dec
mov
mov
in
repz
sbb
loop
adc
mov
add
lock
cmpsb
jecxz
repnz
xor
cmpsl
adc
jne
cmp
sub
jmp
loopne
movsl
xor
add
out
fcmovnb
xorb
test
addl
or
loopne
adc
sub
xor
clc
mov
or
movsb
nop
aas
pop
rolb
fisubrl
scas
std
in
mov
or
cli
int3
cs
adcl
fdiv
in
inc
lds
add
icebp
push
and
adc
adcb
leave
rolb
inc
xchg
pop
mov
popf
flds
insb
testl
sub
xor
dec
dec
lock
pop
push
mov
jae
lret
cmp
push
jmp
js
repz
add
scas
sub
imull
mov
add
mov
in
push
sub
add
and
dec
push
xor
mov
jnp
add
sbb
incl
add
fs
and
jle
loopne
les
sbb
outsl
je
in
jmp
loopne
out
and
jge
call
rcr
callw
jo
mov
cmp
cwtl
fsubr
add
cmpsl
test
push
adc
rcrl
subb
jmp
ljmp
cwtl
pop
loope
cmp
jbe
xchg
xchg
rcrb
jo
out
and
add
loopne
pusha
adc
and
add
fistpl
insb
popa
aaa
add
add
in
or
mov
pop
inc
add
jge
mov
ja
cmp
push
mov
xor
add
cmc
adc
pusha
add
cmp
add
int3
les
push
add
loopne
in
pop
fiadds
fwait
call
imul
sbb
add
xor
aam
push
es
subb
and
pop
test
and
data16
cmp
dec
add
test
punpckhbw
push
popa
jmp
add
dec
lods
xchg
sbb
add
mov
dec
adc
mov
inc
jle
sbb
not
xchg
scas
je
add
sbb
addr16
stos
aaa
lahf
fadds
imul
cmp
mov
test
dec
sbb
rcll
pusha
pop
jo
cmp
inc
push
fists
mov
inc
add
mov
in
dec
mov
dec
sub
cld
lret
cmp
in
add
or
ljmp
pop
enter
jne
popf
pushf
add
add
jbe
inc
add
jo
roll
push
adc
outsb
adc
test
cwtl
inc
rorb
aaa
sub
ja
dec
or
jae
ret
std
insb
lock
pop
into
hlt
add
out
sub
adc
jl
pusha
in
xor
jmp
fcmovne
push
incl
aas
out
dec
xchg
xchg
add
aam
hlt
and
add
std
fs
cwtl
inc
xchg
xor
ffreep
imul
bound
sub
movb
mov
push
mov
add
insl
cwtl
cltd
cmc
sub
and
dec
lret
sub
mov
aas
inc
mov
or
ss
shlb
or
jmp
popw
cmp
inc
es
pop
cmp
les
jae
clc
add
dec
ljmp
xchg
add
or
sub
pop
add
pop
dec
loop
pushf
mov
push
lods
cmp
pusha
adc
clc
pop
adc
or
loopne
xor
pop
add
adc
mov
mov
sub
loopne
add
lds
or
xor
movsl
add
xor
pop
addr16
add
outsb
lds
cli
pop
cmp
xchg
sbbb
cmp
dec
jb
sbb
xor
add
cmp
movsb
xchg
inc
add
inc
mov
cmpsb
mov
movsb
mov
sbb
add
shl
push
scas
out
test
xchg
jno
mov
inc
repnz
add
mov
xor
inc
das
in
sbb
cld
mov
lods
aad
in
into
xchg
fwait
daa
sbb
mov
jne
pop
mov
push
ret
mov
push
inc
pop
in
test
xchg
sub
cmpsl
jmp
and
add
push
lds
inc
loopne
in
jle
xor
jp
pop
in
in
add
push
mov
or
sbb
clc
dec
and
fsubrs
aas
cmp
pop
sbb
sub
mov
js
outsb
and
fdivl
imul
cmp
cmpsl
ds
dec
cmp
xor
inc
add
lods
ja
add
jnp
mov
adc
push
add
sub
clc
inc
outsl
jp
pusha
sbb
mov
cmc
mov
add
add
imul
jo
pop
xor
xchg
or
cwtl
dec
or
lret
roll
loopne
fscale
adc
popf
push
cli
push
sbb
or
stos
dec
loope
add
add
inc
outsl
sub
sti
clc
loopne
pop
js
jmp
adc
add
mov
shll
sete
jmp
mov
ret
hlt
xor
inc
daa
inc
addb
mov
adc
inc
and
lds
dec
imul
inc
popa
jb
outsb
and
push
sbb
push
test
cli
sbb
repnz
cmp
nop
mov
leave
dec
jmp
mov
stc
add
ljmp
sti
mov
jbe
sbb
xchg
lods
add
jg
in
loope
not
das
xchg
push
jo
faddl
add
dec
push
add
cmp
sar
out
mov
mov
add
add
rclb
out
insb
jnp
mov
xchg
mov
mov
mov
outsb
mov
cmp
pop
cmpsb
ret
flds
lahf
jb
faddl
or
in
xchg
mov
shlb
addr16
lock
in
ret
lahf
dec
pop
lock
addl
pushf
mov
out
add
inc
inc
jb
add
loopne
test
stc
jbe
data16
or
and
inc
jmp
pop
out
mov
mov
pop
out
push
add
fdivl
inc
fsts
jp
add
and
nop
popf
insb
in
subb
mov
aas
pop
sbb
inc
mov
cmp
cmp
decl
push
push
cmp
mov
sub
ja
addr16
call
adc
cmp
outsl
and
push
mulb
push
fstps
fcoml
out
sub
or
push
lahf
clc
sarb
add
push
fiadds
dec
insl
sub
mov
test
cmp
call
mov
sbb
repnz
test
jl
shll
lahf
or
in
xor
test
in
inc
jge
add
push
mov
repz
int3
or
and
adc
nop
xor
out
adc
and
jb
push
in
xor
xor
adc
mov
mov
cmp
or
mov
rolb
mov
inc
pusha
add
xor
lods
adc
cmp
cmp
inc
rclb
enter
xchg
cmp
adc
mov
mov
pusha
sub
adc
cmp
ja
or
and
xor
or
movsl
cmpsb
pop
pop
xchg
gs
push
xor
testl
dec
adcl
ja
loopne
lock
dec
inc
cltd
cld
outsl
add
jmp
in
or
mov
and
pusha
xor
mov
iret
pop
mov
jns
add
and
out
mov
sub
cmp
xor
into
add
in
add
pop
jg
dec
adc
xor
dec
addb
gs
scas
out
cmp
and
das
xlat
or
sub
inc
xchg
push
push
xor
out
or
jle
xor
iret
push
add
inc
test
popa
sbb
jne
and
or
movsl
pushf
insb
sub
sbb
daa
call
mov
repz
xor
cmp
jno
loopne
idiv
push
dec
lret
push
lods
sbb
sbb
inc
shlb
cld
test
out
loopne
es
dec
jo
out
loopne
les
adc
pop
js
cmp
jmp
and
movsb
je
adc
stc
and
and
cmp
test
push
rolb
xor
aad
mov
or
xor
adc
sub
rclb
xor
or
inc
fcompl
jle
lret
mov
cld
sahf
inc
adc
insl
add
iret
aad
inc
outsl
sub
add
std
sbb
adc
push
xchg
lea
and
sahf
pop
push
dec
sbb
mov
ja
jecxz
orb
sub
dec
addb
cmp
jo
inc
inc
femms
push
pusha
stos
mov
pop
rcll
dec
in
xor
out
add
sbb
inc
xor
or
and
adc
inc
cli
stos
or
aaa
aad
sbb
xor
xor
add
addl
adc
add
lds
int3
mov
ja
pusha
pop
and
popf
stos
pop
add
mov
addr16
inc
arpl
scas
fsubrp
cmp
cmp
popf
iret
hlt
add
adc
movsl
inc
pop
pop
pop
sbb
jecxz
mov
mov
and
add
mov
jl
add
out
popaw
cmp
inc
xor
mov
inc
fbstp
ljmp
inc
adc
pop
jl
enter
inc
or
add
push
hlt
xlat
or
jb
mov
lahf
lds
adc
dec
shl
sbb
xlat
mov
sub
subb
flds
xor
jno
push
pushf
shr
mov
sub
jmp
mov
push
sub
mov
fldenv
and
jge
stos
add
aaa
dec
xchg
ds
mov
xor
ficoms
mov
xchg
xor
in
lock
int
cmp
stos
rol
pop
outsb
pop
int3
xor
cmpsl
xor
mov
insb
outsb
mov
push
fwait
inc
push
xorl
xor
adc
movb
lds
adc
add
pop
prefetch
fld
and
ljmp
and
sbb
ds
popf
add
cld
xchg
or
int3
pop
mov
and
xor
add
push
std
push
or
pop
int3
fstpl
ret
pushf
mov
shrb
jno
add
fnstsw
hlt
adc
xchg
fidivrs
into
mov
jbe
pop
call
ja
or
mov
arpl
and
rol
and
mov
js
mov
pop
pop
test
sbb
roll
mov
in
test
sub
xor
les
lcall
push
xor
adc
mov
and
jle
fsubrl
test
mov
lods
adc
sub
ss
out
pop
mov
enter
shlb
ret
push
enter
cmpsl
fcompl
add
push
and
xchg
lock
xchg
and
and
mov
loopne
xchg
mov
das
mov
add
or
cmp
mov
enter
add
and
xor
pop
adc
outsl
pusha
pop
adc
in
aas
adc
dec
push
fmuls
cmp
xorb
xor
sub
adc
ja
adc
inc
jge
dec
or
fdivs
mov
cmpsl
mov
sub
adc
push
dec
xchg
mov
insl
add
lods
sbbl
ljmp
test
sbb
fs
adc
add
add
stc
test
bswap
bound
add
cmp
call
adc
adc
je
xor
dec
push
mov
pop
movsl
mov
add
xchg
add
mov
mov
jg
ja
fs
jnp
test
lock
xchg
mov
js
add
mov
jne
fs
cmp
stos
cmpb
in
mov
cmc
add
sahf
adc
aam
jns
add
mov
add
ja
daa
int3
js
pop
inc
mov
mov
jo
lods
hlt
and
adcb
leave
shr
loope
lea
or
test
and
jno
add
int3
adc
jge
add
loopne
fiaddl
rcrb
cmove
loopne
pop
mov
flds
shlb
lahf
and
iret
add
sbb
shrl
repz
dec
cmc
js
add
adcb
arpl
xchg
movl
or
add
mov
fs
dec
sbb
outsl
out
addb
mov
add
sbbl
xchg
in
gs
pop
add
cwtl
push
out
mov
sahf
push
pop
cs
xchg
push
add
js
push
pop
sbb
aam
adc
mov
outsb
aam
cld
lret
movsb
cmc
dec
rcl
mov
rcrb
inc
addr16
mov
mov
mov
push
test
xchg
lock
fistps
scas
imul
dec
and
xchg
lahf
daa
out
std
pop
ds
push
and
lock
inc
pop
cmp
lret
inc
cmpb
lcall
popl
insb
nop
xchg
icebp
andl
mov
add
cld
mov
lret
sub
nop
ja
push
movsl
flds
xor
pop
cmpsl
pusha
mov
sti
add
mull
jae
fwait
aad
and
sbb
insb
addr16
cmpsl
pop
xchg
cmc
inc
cs
cmp
cmpsb
xor
pusha
pop
inc
fildl
pop
jp
je
rolb
xorl
in
daa
add
sub
pop
add
xor
inc
jo
push
cs
bound
stc
push
popf
mov
scas
jecxz
xchg
imul
popa
sbb
sbb
xor
jge
sub
push
lcall
push
xchg
loopne
mov
add
fistpll
add
nop
push
and
cmp
or
adc
add
sub
add
arpl
push
or
cmp
add
sbb
add
fadd
or
xchg
imul
cmpsl
movsl
xor
cmc
pop
iret
call
fbld
mov
push
pop
mov
dec
mov
andb
das
stos
add
outsb
mov
sbb
sbb
mov
add
xchg
and
cmp
xor
add
jno
das
push
aad
mov
add
and
cli
sbbb
stos
add
sub
add
xor
mov
inc
mov
call
pop
xlat
aas
imul
mov
sarl
sub
lcall
cld
xchg
adc
pusha
pop
add
jne
pop
jns
bound
push
inc
enter
jb
add
add
aam
push
popf
in
jo
mov
test
rol
inc
cmpsl
insl
filds
dec
shlb
loopne
imul
and
cmp
mov
in
cli
jg
outsb
inc
aad
test
add
and
clc
sbb
sbb
test
sub
jp
in
das
jp
add
xor
and
sub
xchg
repz
add
and
jl
cmpsb
dec
mov
addr16
add
popa
xor
xorl
and
ja
mov
imul
mov
push
lds
jns
xor
rorl
ljmp
cmpb
idivl
bound
or
cvtdq2ps
in
loopne
popl
mov
adc
ds
mov
xchg
scas
ljmp
lahf
push
xchg
int3
inc
add
ficomps
xlat
mov
call
push
or
xor
push
mov
andb
sbb
mov
pop
loope
add
leave
aas
call
mov
jnp
cmp
pop
xchg
dec
add
test
adc
jg
add
mov
cmp
cwtl
mov
insl
sbb
mov
jae
iret
mov
pop
cmp
in
cs
addb
xchg
xchg
out
dec
je,pt
dec
sub
fwait
test
add
ljmp
pop
insb
and
pop
adc
cwtl
nop
add
jo
cld
mov
pop
jecxz
imul
xchg
rol
popf
leave
es
lea
adc
jo
push
testl
xor
push
or
enter
sbb
add
ja
shl
or
mov
pop
mov
inc
fmuls
add
pop
and
dec
push
aam
or
jmp
add
xor
mov
outsl
mov
or
push
cmp
fadds
and
push
and
add
and
in
gs
test
sub
aad
mov
mov
je
dec
mov
or
ret
cmovs
and
sbb
addr16
cmp
ljmp
jne
lret
andb
push
pusha
add
rolb
mov
lret
sub
sbb
sub
or
xchg
sbb
dec
daa
xlat
cmpsb
addb
inc
mov
jle
mov
loopne
aaa
and
cmp
push
jge
add
aam
lret
cmp
out
orb
adc
pushf
mov
test
xchg
sarb
nop
sub
loopne
xchg
and
sub
and
int3
mov
into
mov
pop
in
fadd
sbb
add
aam
inc
pop
jns
pop
mov
adc
iret
dec
add
inc
out
xlat
hlt
inc
adc
mov
push
pop
lcall
adc
nop
jl
jl
add
cmpsb
and
repnz
aam
adc
adc
pusha
or
add
rcll
popa
rcrl
scas
ss
cmp
xchg
add
inc
or
push
lret
adc
lcall
mov
faddl
dec
imul
jg
add
mov
fs
hlt
inc
lea
dec
aad
push
ffreep
inc
sub
sub
pop
cli
out
dec
sbb
pop
add
pop
fistpll
jmp
add
js
das
movsb
adc
pop
xor
cmpb
mov
jnp
fsts
addr16
repz
push
add
pop
sub
add
jno
adc
adc
add
aam
std
add
scas
xchg
xchg
mov
and
pop
gs
jle
adc
lods
ret
cmp
es
xor
aas
hlt
xlat
add
mov
mov
js
nop
cld
sub
adcl
jmp
outsb
add
dec
in
jnp
xor
push
imulb
cld
pop
mov
fisubs
jg
icebp
mov
xor
push
cmpsb
fwait
jno
add
movsb
insl
pop
xchg
jnp
jno
add
cmpsb
inc
shl
sub
push
sbb
sbb
jge
push
cmp
sbbl
add
out
xchg
inc
cmp
xorb
cs
lods
jle
adc
rol
int3
inc
mov
and
pop
add
push
push
adc
lret
sbb
in
and
das
loop
and
jle
aad
pusha
cwtl
dec
sbb
fwait
or
jecxz
lret
sub
pop
jmp
scas
mov
adc
popa
jo
adc
mov
icebp
daa
add
inc
jmp
xchg
imul
xchg
data16
ret
mov
xor
pop
aaa
cmpb
or
inc
fldcw
out
es
sbb
xchg
add
push
inc
ret
and
popa
daa
add
sub
mov
aam
aad
setbe
loopne
pushf
sub
fiadds
lds
ja
xchg
sbb
hlt
jns
and
test
ds
rcl
sub
add
or
jl
push
scas
test
cld
add
pop
shl
lods
lock
add
mov
cmp
push
mov
push
or
pop
push
ss
mov
sub
push
daa
stc
cwtl
jnp
sbb
dec
pop
pop
mov
jns
in
shr
jmp
add
pop
and
outsb
mov
mov
sbb
pop
cmp
arpl
loopne
xlat
add
cmpsl
sub
lcall
orb
jecxz
add
push
scas
push
jl
clc
fwait
inc
out
sub
mov
out
mov
cmp
roll
push
outsb
adc
xor
and
testb
lcall
or
dec
xchg
fs
pop
sub
add
test
popf
jge
add
adc
repnz
dec
imul
cmp
jo
xor
dec
or
and
stos
inc
mov
jle
push
pop
movsl
and
dec
mov
imul
mov
inc
ds
jne
jge
scas
sbb
fcoms
fiadds
jl
lea
stos
adc
fsubl
push
loopne
out
lcall
fadds
dec
insl
mov
cmp
gs
inc
mov
aam
jns,pt
cmp
nop
push
iret
and
add
push
cmpsb
cwtl
loop
sub
add
js
sahf
add
push
mov
lods
mov
and
add
dec
pop
mov
cmpsl
ret
in
or
bound
cmpb
lret
jbe
pop
ljmp
dec
xchg
add
or
and
mov
in
push
add
andl
mov
out
jle
or
dec
push
add
es
add
arpl
mov
push
jbe
adc
loopne
xchg
adc
and
dec
cmpsb
xchg
pusha
insl
scas
add
jno
xchg
aam
shlb
xchg
adc
pop
in
and
cmpsl
ljmp
outsb
dec
add
xchg
push
arpl
popf
aas
pop
ret
inc
decb
jge
mov
cmp
sbb
mov
add
fstpt
add
stos
pop
addb
mov
push
xchg
cmp
adc
pop
movsl
imul
jp
jnp
in
mov
add
sub
mov
add
xchg
jp
imul
hlt
js
pop
sbb
dec
xchg
frstor
pop
mov
and
in
push
fwait
mov
shlb
scas
mov
int3
adc
ss
rcll
insb
add
in
or
adc
xor
add
scas
push
js
loope
add
adc
pop
imul
push
mov
mov
or
rorb
inc
rcl
loop
fiaddl
xchg
jle
in
jecxz
fidivrs
sbb
pop
sarb
outsl
in
and
cltd
jg
add
or
pushf
sbb
sub
dec
pop
push
out
pop
or
stos
pop
repz
add
xor
jns
jle
inc
cli
or
mov
cmpsb
add
xchg
push
movl
dec
scas
loopne
ss
push
jp
pop
lret
adc
in
pop
and
add
sub
ret
int3
clc
fmulp
add
pop
outsl
ret
test
inc
mov
add
fdivl
add
add
mov
cmp
add
mov
xor
imul
out
dec
add
pop
jae
xchg
stos
push
std
bound
mov
add
push
ss
and
test
sub
push
dec
rcl
add
lcall
data16
sbb
int
dec
and
out
pop
aad
and
jge
inc
pop
sub
xor
add
push
mov
outsb
mov
dec
jnp
add
fisubrl
in
dec
shrb
jecxz
imul
mov
cmp
nop
test
sub
pop
mov
sub
and
cs
mov
lcall
mov
xor
and
add
loop
mov
rol
and
pop
fdivs
add
faddl
push
test
push
inc
mov
es
mov
adcb
and
push
jmp
xor
lods
mov
xlat
or
lds
xchg
add
jno
outsl
and
out
inc
add
inc
push
xchg
cmpsl
push
mov
lcall
jo
jne
mov
pop
in
xor
stos
ljmp
inc
cld
lret
mov
out
testb
inc
inc
sbbb
add
pop
mov
je
cmp
and
addr16
add
sahf
jne
stos
xor
rcr
sub
push
cwtl
adc
sysret
cmc
and
mov
sbb
and
lahf
je
jb
iret
xchg
in
lods
loop
sub
xchg
aaa
insb
push
inc
sbb
and
rorl
adc
push
stos
lcall
cmp
mov
cli
cltd
or
add
and
lods
js
add
pushw
int
sahf
lock
pop
push
xchg
mov
or
hlt
xchg
push
shlb
jg
out
mov
xchg
add
jecxz
call
jns
add
les
ficompl
es
or
add
inc
imul
jge
add
mov
add
add
sub
and
nop
push
cmpsb
lods
push
stc
js
jns
cwtl
punpcklwd
sub
inc
jae
mov
sbb
ds
fdivp
and
cmc
faddl
aad
add
fistl
pop
or
clc
sub
adc
push
push
mov
add
jle
stos
add
cld
ds
inc
fisubs
test
add
mov
leave
add
addr16
adc
shrb
add
xchg
mov
loopne
sub
mov
xchg
cmp
repz
stos
mov
or
pop
call
repnz
inc
addb
shrb
add
pop
xor
popf
imul
nop
dec
out
dec
stos
movsb
add
into
mov
inc
push
add
pop
inc
stos
aaa
rcll
mov
add
cli
inc
shlb
add
cmp
repz
mov
adc
mov
push
sbb
mov
test
mov
add
lods
testl
or
aaa
outsb
mov
push
add
imul
and
loopne
jns
out
out
mov
into
jo
ret
adc
pop
js
add
shrl
int
cwtl
push
inc
sbb
movsl
dec
mov
andb
dec
dec
sub
xchg
mov
mov
add
test
loop
sbb
push
loopne
repz
jl
cmpsl
dec
inc
xor
xor
movups
gs
shll
or
sub
add
and
sbb
add
imull
cli
mov
out
xor
fwait
inc
das
shrb
mov
rclb
jo
and
add
inc
out
xor
cltd
jecxz
call
mov
sub
jb
das
sahf
push
mov
and
sub
jp
sbb
add
mov
mov
sbb
push
test
mov
enter
mov
das
popf
fstpt
fists
cmp
mov
int3
loop
xchg
orb
sbb
jle
add
sbb
out
lahf
mov
adc
mov
mov
cmp
add
mov
lock
js
mov
jge
add
divl
cmpsb
jecxz
or
inc
mov
xchg
or
inc
or
rclb
insb
add
sti
iret
jecxz
lret
or
fld1
test
add
adc
pop
jecxz
dec
xchg
pop
je
xor
dec
mov
sub
jmp
and
cld
mov
nop
mov
loop
add
aas
popf
loope
xchg
xchg
in
pusha
cmp
sarb
jno
les
mov
cwtl
or
dec
popf
rcr
adc
cmp
out
xorl
push
dec
aas
mov
icebp
xchg
xor
xchg
rcrb
adc
les
add
jbe
rsm
push
or
rclb
push
mov
das
add
mov
inc
add
fs
cmp
and
add
enter
addb
xlat
add
sar
pop
dec
mov
mov
cs
and
es
add
add
dec
jp
mov
sub
or
test
das
add
ret
cmc
push
cwtl
xchg
add
pusha
pop
mov
jp
mov
lret
add
ss
rcrl
insb
ljmp
call
xor
or
and
jp
add
fimuls
test
jo,pt
xchg
inc
push
data16
into
call
es
clc
pusha
push
shrb
aas
out
imul
jmp
xchg
and
push
cmpsb
adc
cmp
mov
add
sbb
cmp
loopne
mov
add
inc
loopne
icebp
adc
add
jnp
and
mov
pop
ljmp
in
jg
xchg
lds
push
subb
mov
add
roll
cld
test
add
sbb
das
ja
push
sbbl
inc
leave
scas
jg
fwait
pop
lods
inc
fcoml
xorb
mov
mov
jns
xor
lcall
mov
add
in
cmp
push
test
cmpsl
mov
add
sub
cs
add
stos
aas
or
inc
inc
push
movsb
add
popa
xchg
dec
mov
sbb
push
inc
mov
xor
mov
sahf
and
pop
ret
add
lea
sub
arpl
mov
cmp
dec
add
out
cmp
mov
sahf
mov
movb
xlat
rolb
jns
xchg
mov
cmp
jnp
or
mov
push
cmp
push
sbb
add
push
and
lcall
sarb
adc
sbb
cmpsb
lret
fwait
mov
add
loopne
xchg
rclb
add
pop
xchg
mov
cmc
dec
stos
add
adc
add
xchg
mov
fsubrs
mov
xor
adc
pop
mov
pop
gs
cmp
add
fiaddl
aaa
aam
mov
clc
sarb
mov
push
lcall
add
pop
stos
rcrl
and
lret
ljmp
jmp
dec
mov
push
fsubrs
adc
add
pop
cmp
cltd
ds
add
test
mov
ds
dec
add
imul
rcrl
inc
cmpsl
lds
push
xorl
shlb
sbbb
jbe
bound
cs
insl
cmp
ret
add
push
jp
fs
jmp
add
lahf
shlb
movsl
cmpsb
repnz
les
inc
scas
push
cmc
sub
data16
in
pop
mov
mov
shrb
loop
in
mov
jnp
sub
cmp
mov
nop
dec
push
mov
pop
int
imul
pop
cmp
mov
adc
out
mov
lcall
add
ret
jge
mov
mov
push
loop
loopne
inc
inc
xor
sub
fxch
inc
divb
out
movsl
lock
filds
rcl
and
bound
jl
or
imul
add
jnp
scas
ret
mov
jo
inc
in
into
push
test
incl
imul
addr16
pop
mov
and
fld
pushl
test
rorb
inc
jle
add
cld
xchg
int
mov
push
jl
mov
lret
pop
pop
int
rcll
cwtl
ja
adc
xchg
shrd
je
inc
add
dec
call
jno
notl
sub
loope
mov
rolb
ss
dec
sbb
movsb
push
mov
sti
add
sub
dec
pop
xlat
mov
test
pop
dec
stos
cwtl
mov
lar
divb
jae
adc
inc
cwtl
addr16
sti
fiaddl
imul
dec
pusha
fsubl
xor
cltd
test
loope
add
insl
test
mov
add
inc
jp
jae
rolb
test
mov
add
aam
lods
pop
es
jg
add
xchg
xor
push
jecxz
lret
scas
mov
fadds
sbb
jne
mov
mov
lea
loope
pop
add
pushf
mov
shrl
rcrb
or
sbb
popf
lods
add
pop
movl
int3
and
sbbb
cwtl
mov
push
add
int
ss
xor
push
imul
add
mov
insl
add
sbb
addr16
add
or
add
daa
test
cwtl
lds
lods
adc
cli
loopne
adc
mov
or
mov
insb
or
add
xor
xlat
jp
inc
loopne
and
in
mov
or
push
repnz
out
push
add
lds
inc
cmpsb
sbb
imul
push
loope
mov
rorb
xchg
js
les
push
daa
pop
inc
fmull
dec
push
mov
dec
aam
mov
mov
inc
xchg
sar
push
xchg
adc
mov
mov
add
test
sbb
inc
add
lea
test
add
cmp
xchg
sbb
mov
push
jecxz
push
push
push
sub
in
pusha
pop
mov
lahf
into
adc
xchg
xor
and
icebp
jae
add
mov
fsubl
pushf
arpl
dec
mov
shl
daa
add
add
push
aam
add
lea
cltd
add
dec
sbb
cmp
arpl
push
mov
cwtl
lock
mov
add
sub
sub
ss
mov
outsl
movsl
nop
add
popf
and
jge
in
cmp
or
jne
jbe
sbb
or
andb
or
in
add
cmpeqps
das
pop
sub
pushf
mov
cmp
push
push
rorl
ror
loop
push
mov
mov
pop
add
jno
sbb
sahf
in
das
pop
and
imul
stos
mov
pop
add
sub
lock
decb
imul
movups
stc
push
jp
dec
and
mov
jne
test
in
dec
add
and
shr
int
fists
cmp
arpl
pusha
and
sub
lds
aam
in
jne
cmp
sbb
adc
lret
xchg
aas
testb
lods
jecxz
daa
pop
enter
jg
add
cmp
sub
push
xlat
mov
in
ret
jae
cwtl
loope
mov
fildll
inc
mov
into
push
jmp
rolb
add
cmp
mov
dec
pop
xchg
jmp
nop
sbb
xchg
xor
xchg
std
test
sbbl
aam
and
leave
int3
mov
mov
xlat
movb
inc
push
jnp
pop
inc
inc
add
fwait
shr
std
aad
add
lret
popa
push
insb
xor
add
xlat
pop
dec
outsl
out
test
mov
lods
cmc
movsb
xchg
fdivs
or
dec
test
xor
cwtl
popf
xor
repnz
inc
add
adc
mov
andb
inc
add
pop
cmp
mov
pop
in
jg
dec
mov
sbb
cmp
shl
in
mov
shlb
mov
add
imul
push
add
rorb
inc
out
clc
or
fs
add
cmp
ret
out
into
inc
rolb
or
cmp
xchg
pop
or
and
xor
xchg
je
add
aaa
xchg
add
inc
mov
sbb
pop
fstpt
arpl
sub
sbb
loopne
xchg
push
jns
add
add
jb
insl
imul
aad
or
ja
inc
xchg
pusha
add
nop
in
pop
mov
or
mov
push
gs
rcll
nop
mov
add
and
mov
fmull
pop
jb
lock
shll
jmp
in
cli
jecxz
js
movb
xor
mov
adc
repnz
sub
add
sbb
push
in
cli
jge
lea
mov
fsts
add
pop
push
mov
xchg
lds
add
cmp
lods
sarl
sbb
push
jle
orl
dec
inc
adc
add
nop
cmp
out
cmovg
and
add
ljmp
xor
add
mov
add
std
sub
repz
add
aad
lds
test
je
cs
cmp
ss
rdtsc
shll
testl
shlb
jl
icebp
jp
inc
movsl
xor
mov
push
add
sbb
in
cmpsl
add
out
mov
scas
pop
pop
mov
push
lods
xor
aas
sahf
sbb
push
movsl
add
mov
or
add
test
pop
add
movb
lods
jo
xor
lret
add
push
popa
call
loopne
xchg
out
cmc
and
rol
outsl
cmp
jg
mov
sti
mov
call
cli
sbb
and
imul
push
loopne
repnz
fsubrl
mov
dec
push
sub
sbbb
cmpsb
add
inc
lret
repz
add
lods
dec
sbb
shlb
fwait
add
ss
dec
mov
add
lret
outsb
push
dec
jo
add
fistpll
add
or
les
leave
insb
push
push
stos
cwtl
jns
cmc
sbb
jmp
arpl
and
test
andb
fiadds
bound
test
sbb
aad
insl
xor
or
pop
scas
mov
cld
cltd
push
inc
cmp
xor
cmp
test
in
pop
or
add
mov
add
sbb
repz
pop
cmp
roll
subl
push
adc
scas
xchg
dec
push
fsqrt
pop
mov
mov
mov
inc
mov
add
push
cmp
jbe
add
push
movb
leave
or
fwait
xorl
mov
lock
add
and
mov
add
xchg
popf
mov
dec
gs
ja
mov
filds
mov
imul
xlat
aas
test
mov
push
adc
sarb
faddl
aas
lods
out
pop
push
or
cmc
enter
dec
enter
add
lock
jmp
mov
add
std
test
mov
jl
inc
ds
push
lret
popa
and
js
orb
ret
xor
cmp
test
pop
out
mov
add
sar
push
mov
xor
add
push
pop
lods
jp
add
call
pop
mov
sub
pop
and
add
aas
inc
sti
jmp
cs
pop
test
pop
inc
inc
rclb
int3
inc
cs
shlb
mov
push
mov
mov
xchg
adc
jo
mov
pop
nop
add
sbb
shll
loope
loope
in
inc
pop
add
cmp
mov
jb
sub
fiaddl
jle
jp
add
mov
lock
push
out
dec
add
pop
mov
push
xor
cmp
xchg
inc
add
cmpsl
adc
test
add
dec
ret
cmp
pop
or
and
adc
jbe
ret
mov
insl
adc
cmp
ljmp
dec
jns
adcb
cmp
or
aaa
xor
das
lods
loop
orb
sbb
xor
dec
cmpsl
loopne
xor
mov
pusha
sub
bound
adc
mov
or
or
add
mov
jo
pop
lods
arpl
xchg
sub
call
in
add
mov
dec
pushf
mov
adcb
cmp
xor
push
incb
pop
adc
cmp
mov
xchg
scas
cltd
pop
lds
push
mov
daa
cwtl
xchg
sub
inc
rolb
pop
add
aas
push
adcl
xchg
neg
cld
incb
xchg
out
or
fildl
mov
push
add
sahf
inc
push
push
aaa
push
rcll
das
in
dec
dec
push
out
test
rclb
xchg
add
lods
aam
mov
pushf
and
into
sub
mov
stos
inc
shr
dec
add
cwtl
mov
add
push
jge
mov
add
into
adc
dec
in
hlt
sub
es
cmpsl
mov
movsl
cmp
andb
mov
cmp
or
xlat
push
xchg
call
cmp
xor
mov
push
adc
and
mov
and
xor
adcl
pusha
inc
cmc
jae
add
pop
push
out
jg
cs
jle
inc
adc
pop
pusha
sbb
test
mov
les
psubsb
stos
cmpsl
shll
and
add
xchg
add
repnz
imul
and
mov
rorl
lahf
or
mov
inc
or
add
sar
mov
push
mov
mov
add
pop
push
into
jb
pop
add
ds
or
add
jg
in
std
cwtl
mov
mov
fdivrs
and
dec
cmp
push
xchg
jnp
fdivl
push
scas
sub
insb
add
inc
add
fisttps
xor
fsubl
dec
cli
dec
add
jae
fmull
shll
pop
push
and
dec
add
xchg
jmp
mov
stos
push
icebp
pop
add
sti
jecxz
insb
or
jb
addr16
sub
add
jno
cmp
jmp
xor
pop
mov
movsl
rcrb
data16
cltd
xchg
cmp
push
sbb
cli
fiadds
or
jae
add
dec
or
fdivl
add
lea
push
movsl
mov
add
test
mov
mov
mov
loop
aad
push
add
pop
add
je
cmpsl
clc
mov
int
push
xchg
cmp
add
adc
jp
das
rolb
jg
pop
mov
add
fldt
mov
mov
jge
out
in
fdivs
cmp
cmp
mov
out
scas
push
ss
push
cmp
orb
mov
or
in
add
mov
ret
add
cmp
add
mov
popf
mov
inc
sar
je
mov
in
repz
jmp
xor
negb
dec
and
arpl
lret
fsubl
jne
insl
js
push
xchg
mov
dec
xor
add
cltd
mov
mov
dec
sbb
and
lock
add
js
mov
pop
bound
in
inc
cmpsl
fdivs
lds
add
jl
cltd
cmp
popf
and
inc
push
jmp
stos
push
iret
jg
hlt
add
or
or
xor
add
mov
inc
cwtl
pop
xchg
add
jns
ret
or
data16
add
popl
or
divb
xor
inc
add
cmpsb
popa
divl
in
leave
rcll
mov
fsts
into
clc
pop
in
ja
or
faddl
or
add
jne
add
in
mov
push
push
cmp
mov
jne
add
pushf
lods
add
pop
fisttpl
je
add
call
and
add
inc
popf
xchg
xchg
cmc
xchg
add
jmp
jge
adc
lock
aam
add
lcall
fwait
aaa
add
sbb
pop
sahf
inc
add
mov
pop
pop
pusha
cmpsb
leave
fcoms
lods
hlt
xor
in
out
pop
add
outsl
push
inc
mov
in
pop
jge
imul
xor
out
repz
cmp
and
gs
add
outsb
into
inc
mov
mov
cwtl
pop
int3
jle
dec
int
inc
sarl
cld
insl
clc
sti
add
leave
dec
push
add
ret
push
inc
fmulp
dec
xor
push
movsl
mov
ret
mov
cmp
stos
add
jbe
mov
inc
enter
pop
and
cs
hlt
mov
roll
sti
push
dec
add
add
inc
cmpsb
testl
inc
push
cmp
cmpsl
hlt
add
aas
arpl
or
divl
ret
subl
cmp
mov
fildll
jne
bound
add
cmp
outsl
pop
test
sub
add
cmpl
adc
jle
add
and
mov
mov
pop
jb
pushf
arpl
add
mov
dec
and
cmp
addr16
sub
pop
scas
add
inc
push
pop
mov
sub
mov
mov
inc
gs
pop
vpmulhw
mov
jo
aas
idivb
insb
jae
ds
mov
mov
pop
add
lret
fwait
push
jno
jbe
adc
lahf
sub
cmpb
je
shrl
jmp
cmpsl
pop
sbb
mov
add
loop
test
fistpl
stc
fs
add
lret
sbb
add
lahf
test
add
push
jl
fwait
shl
inc
stc
jnp
pop
out
outsl
dec
sbb
and
pushf
ja
out
pop
dec
mov
loop
jo
in
jns
fadds
push
les
inc
adc
or
in
mov
pusha
cmp
mov
add
pop
sub
testb
mov
mov
adc
rolb
stc
sbb
cltd
cmpsb
dec
add
bound
jne
sar
je
add
adc
lea
jl
jge
sub
insl
xchg
adc
dec
cmp
push
push
fwait
push
push
mov
jmp
cli
pop
bound
cmp
imul
mov
jno
push
dec
loopne
inc
cli
mov
push
pop
je
mov
pop
clc
add
sbb
sub
fwait
jecxz
jge
loope
mov
mov
mov
ret
out
jns
hlt
cwtl
cmp
add
insl
sbb
cmp
jns
rolb
rcrb
xchg
test
cld
punpckhwd
add
test
es
dec
jl
lcall
shlb
jp
jg
or
out
aaa
call
push
pop
xor
cld
dec
es
add
and
add
mov
scas
add
gs
mov
mov
xchg
inc
cltd
dec
cmp
cmpsb
es
or
or
ficomps
add
mov
cmp
inc
aam
imul
add
jae
add
sti
test
mov
scas
add
add
push
xchg
movsb
add
out
enter
sbb
pop
add
sub
sbb
add
or
inc
notl
push
dec
add
add
call
inc
inc
aas
sti
movsl
fdivr
cmpl
add
push
ss
repz
mov
pop
loope
xchg
add
fimuls
popa
movl
lea
in
rcrb
shrl
cmp
inc
scas
push
rclb
loopne
inc
add
jbe
mov
xchg
mov
ja
add
xchg
mov
add
adc
pop
and
out
int
push
dec
shlb
into
test
push
dec
xor
enter
push
sar
outsl
xchg
sbb
dec
in
in
xor
negl
or
loopne
cmp
cli
addl
add
sahf
cs
cmpb
mov
hlt
dec
pop
dec
outsb
add
sbb
add
ss
out
jno
pop
mov
push
scas
out
push
fildl
sub
mov
aaa
xchg
add
mov
mov
popl
movsb
push
das
pop
mov
test
popf
xchg
fwait
add
loopne
ljmp
and
add
cld
nop
dec
adc
enter
xchg
ret
dec
fdivrs
mov
popa
pop
stos
and
or
add
adc
lret
pop
mov
mov
add
xchg
int
adc
aam
out
imul
push
pop
add
push
jecxz
sub
dec
movsl
xor
cmp
rcl
mov
push
or
int
jbe
int
and
dec
out
pop
shlb
sub
dec
rorb
add
lods
xchg
ljmp
mov
mov
fsubrl
xor
xchg
fisubrs
inc
mov
or
fistl
sub
and
enter
sti
out
daa
cmpsl
push
inc
xchg
andb
orl
shlb
xchg
roll
mov
lock
and
jne
addb
push
or
jo
or
ficoml
cmp
in
adc
fstpl
and
les
cmpb
inc
sbb
mov
inc
les
xchg
insb
add
push
adc
pop
cmp
addr16
cmp
xor
les
mov
jl
xchg
je
jns
add
pushf
and
mov
cmp
sbb
and
pusha
vmwrite
ljmp
ljmp
sbb
test
cmpsb
push
jno
push
not
mov
es
loop
mov
out
out
mov
enter
adc
mov
xor
cld
add
add
movsb
jb
movd
lods
push
lcall
cmp
sbb
shll
aas
in
dec
ret
iret
add
outsb
mov
es
sub
jo
pop
push
shll
add
in
cld
inc
fcoml
jno
adc
negl
test
add
pop
shlb
leave
mov
add
add
and
jg
cmp
inc
xchg
sbb
sub
jb
inc
mov
add
test
pushf
and
sub
xchg
add
add
cwtl
adc
adc
mov
sub
xor
mov
add
movl
dec
or
add
sbb
cmp
popf
xorb
mov
imul
jno
add
orb
and
andb
mov
imul
cs
mov
imul
test
mov
into
and
pushf
mov
jb
xchg
xchg
add
mov
jbe
movb
cmp
jb
ljmp
jae
sub
dec
lds
mov
fldenv
xor
xor
xorb
int3
add
mov
daa
sub
push
add
aam
lea
aad
push
mov
stos
xorb
loope
int
pop
call
rcrb
xchg
push
xlat
and
ret
mov
cmp
arpl
mov
outsl
fidivl
jmp
lea
lret
into
lahf
mov
xchg
mov
add
int3
ret
push
xchg
clc
and
or
verr
adc
or
or
fsqrt
mov
mov
hlt
pop
mov
jne
sahf
mov
dec
and
icebp
outsl
pop
mov
adc
faddl
testl
mov
test
sub
in
or
cltd
leave
nop
lret
out
or
enter
add
pop
mov
ret
add
les
and
and
lods
xchg
mov
rep
adc
movsl
inc
push
xor
adc
gs
ror
xchg
add
sahf
imul
iret
push
xchg
andl
sbb
add
cmpsb
shl
shl
inc
adc
add
adc
xchg
sti
mov
add
cwtl
and
aas
dec
pop
test
or
add
dec
je
inc
aad
add
mov
out
jle
add
pop
fists
lcall
aas
mov
add
inc
and
add
xlat
dec
mov
pop
dec
add
aad
pop
cmp
push
xchg
ja
add
xchg
inc
jae
add
jns
js
mov
push
push
popa
mov
mov
add
add
loop
movsb
repnz
pop
xchg
mov
jl
push
xchg
les
jecxz,pn
cwtl
clc
fwait
orb
or
lea
ror
lock
int3
mov
sub
lods
in
or
aaa
insb
in
mulb
fucom
add
sub
and
jmp
gs
push
xchg
dec
or
and
push
sub
in
fs
hlt
jne
cwtl
inc
dec
iret
and
mov
test
lds
push
shr
jp
inc
sbb
imul
nop/reserved
stos
int3
jmp
xor
cmc
push
xchg
ret
scas
insl
loop
rcll
sbb
int3
adc
shrb
aad
push
lret
jmp
icebp
sub
mov
insb
mov
cwtl
movsb
xor
jmp
into
sub
push
cmpsb
add
cmc
or
pop
ret
xchg
cmp
stos
mov
and
je
loop
fisttpll
jae
sub
inc
and
ljmp
push
jecxz
nop
cltd
pop
fcompl
pusha
xchg
lret
inc
xchg
add
fcoms
subb
adc
dec
and
add
call
fsub
sar
adc
cmpsb
inc
shlb
mov
inc
and
sbb
into
test
add
or
mov
dec
int3
jge
jo
addb
nop
mov
mov
fdivrl
mov
sub
xor
enter
add
adc
inc
sbb
sarl
xlat
or
insb
loope
lods
ficoml
xchg
sub
inc
cli
pop
aam
xor
dec
cmpl
xor
lds
sub
add
js
add
fisttps
repz
bound
mov
and
cmovle
push
cwtl
add
sub
xlat
add
mov
lea
sahf
mov
clc
push
arpl
or
xchg
inc
xchg
push
xor
mov
enter
or
add
lahf
ret
pusha
or
or
mov
test
out
add
gs
cmp
push
inc
push
and
icebp
pusha
xor
fwait
add
pop
inc
mov
mov
loope
adc
test
in
pop
mov
cmpsl
add
int3
mov
push
jle
shr
or
int3
add
add
daa
sbb
pusha
xchg
add
scas
out
sbb
repz
mov
add
arpl
add
adc
inc
out
jle
and
dec
pushf
cmp
movsb
imul
out
das
adc
cmp
mov
dec
pop
adc
mul
or
mov
iret
adc
lcall
dec
and
addl
inc
outsb
fadd
mov
or
lret
inc
cld
add
sub
or
addr16
sbb
add
fucomp
dec
sub
or
sub
add
xchg
sub
hlt
fimull
xchg
cmpsl
inc
call
dec
jae
add
out
scas
cmp
xchg
sbb
fiadds
mov
or
sti
push
lock
inc
jne
dec
add
inc
and
xor
mov
pusha
xor
mov
push
enter
add
inc
pop
mov
insb
add
push
pop
cltd
incb
inc
sbb
mov
xlat
pop
inc
loopne
push
mov
sub
test
jg
push
mov
sub
pop
hlt
sbb
sbb
fsubrl
sbb
mov
inc
mov
jbe
pusha
cwtl
mov
ss
loopne
mov
daa
shll
push
aad
pop
out
pop
pop
in
add
mov
dec
or
jmp
push
mov
imul
sti
add
add
mov
clc
cmpsl
mov
mov
insb
std
stos
mov
add
push
jecxz
add
mov
std
xlat
int3
push
xchg
mov
mov
aaa
test
imul
loopne
sub
sbb
cmpsb
jl
adcb
xchg
out
cli
imul
add
lock
addr16
in
jo
dec
add
pusha
test
push
dec
pop
add
or
and
adc
add
arpl
adc
add
sbb
cmpsb
inc
adcb
sti
ror
and
push
xchg
cwtl
movsb
ret
xor
loope
mov
mov
std
mov
xchg
add
out
pop
xor
movb
push
addr16
and
repnz
jl
jbe
add
or
sub
addb
cmp
or
nop
lock
jae
push
jl
adcl
lcall
mov
out
jo
ljmp
jl
mov
add
mov
popf
insl
add
xchg
or
call
pushf
push
push
dec
scas
xchg
fadds
mov
add
shll
out
sub
les
cmp
xchg
sub
pop
add
jns
dec
dec
cmpb
lods
add
jle
xchg
mov
push
mov
std
mov
inc
pop
add
dec
lret
xor
cltd
mov
and
inc
inc
inc
enter
addb
add
xchg
push
int
mov
lcall
fs
push
sarl
repnz
cli
popa
push
insb
daa
out
cmp
or
enter
mov
or
roll
pop
pop
add
pop
imul
add
cwtl
add
fildll
jl
mov
call
nop
lcall
idivb
mov
sub
sbb
lods
sti
dec
nop
insb
inc
repz
decl
mov
inc
int3
cmp
sarl
out
pop
daa
mov
ret
popa
ja
xchg
fnstsw
mov
mov
mov
add
daa
ret
cmp
dec
sbb
xor
enter
movhps
add
cs
sub
add
mov
mov
inc
les
add
rcr
mov
aas
add
push
or
in
scas
mov
mov
add
in
out
add
sub
out
inc
mov
add
cmp
out
mov
push
pusha
ret
popl
jl
inc
adc
add
sbb
dec
pop
mov
or
cmp
repz
push
xor
call
push
adc
out
lods
push
cmp
jo
add
dec
pusha
and
adcb
call
sub
dec
add
rcr
inc
mov
in
xchg
out
adc
ds
sbbl
fcmovnb
nop
push
lock
dec
and
mov
pusha
jo
mov
imul
inc
xchg
pop
in
jg
jo
out
add
jo,pt
cmpsl
xor
ficoms
inc
add
movsl
push
xchg
add
cmp
dec
leave
jne
add
or
adcb
pop
pop
inc
lcall
adc
shrb
pop
fadds
inc
aas
ds
lock
mov
dec
xor
dec
add
lcall
xchg
inc
fimull
pop
mov
stos
pop
lods
mov
sub
add
fbstp
insb
jo
roll
add
mov
add
rcrb
add
addl
adc
xchg
mov
adc
into
lock
jb
repnz
movsl
xor
inc
scas
dec
fisttpl
and
xor
inc
mov
xchg
add
fwait
cwtl
pusha
aaa
push
pop
add
sbb
xor
outsb
sbb
push
add
inc
jg
mov
cmp
pusha
rol
push
push
je
imul
pop
jns
pop
push
dec
nop
cwtl
daa
xor
dec
jg
ds
add
dec
add
xchg
setge
leave
inc
loopne
adc
inc
and
fsts
pop
in
loop
push
scas
leave
xchg
add
xor
mov
cmpsl
and
out
in
push
outsl
out
lret
add
shl
movsl
lods
lock
inc
enter
mov
fildl
scas
pop
loop
mov
fnstenv
outsb
js
or
cmp
pop
jno
imul
mov
stc
add
mov
mov
ficomps
movsl
sti
add
xor
jecxz
pop
push
insl
mov
inc
jmp
cld
stc
imul
stos
insb
pop
push
or
jb
xor
dec
xor
ret
mov
inc
orl
pop
out
add
pop
js
xchg
repz
test
mov
fimull
dec
mov
in
sbb
sub
outsl
xlat
pop
fwait
into
stos
jo
push
cmpsb
addr16
pop
mov
jo
add
fidivrs
xorb
or
bound
cli
or
sub
cmp
flds
push
mov
dec
add
dec
mov
aas
loop
push
push
cmc
mov
ds
mul
add
loopne
xchg
and
cmp
ret
mov
add
scas
mov
inc
push
shrb
insb
add
push
add
sub
jno
scas
adc
cmp
int
pop
add
or
ljmp
les
and
xchg
outsb
and
psraw
and
int3
xchg
mov
pop
add
fidivl
push
jl
imul
push
mov
xchg
in
jp
std
add
test
and
push
mov
shlb
or
pop
xor
cmp
jmp
scas
rolb
and
jg
or
cmpsl
test
test
or
mov
in
push
and
mov
adcb
test
pop
push
lods
jo
cmp
and
call
sub
ja
push
stc
and
fidivs
inc
das
add
addr16
in
lock
mov
ljmp
rorl
sub
jb
pop
add
int3
cmp
pop
pop
lods
ds
and
add
loopne
adcl
scas
pop
pop
mov
and
rolb
add
sbb
or
xchg
test
xor
cmpsl
add
stos
adc
sbb
hlt
clc
aaa
test
push
push
icebp
xchg
mov
dec
add
into
mov
xchg
jns
shrb
jge
ljmp
dec
test
aas
sbb
lcall
cltd
dec
ds
in
and
xor
sbb
ljmp
xchg
adc
adc
iret
and
add
mov
ret
add
icebp
les
jo
enter
fstpl
mov
lret
lea
clc
mov
jge
in
add
test
add
pop
faddl
push
xor
mov
cmpsb
dec
movsb
adc
adc
add
jmp
add
sbb
popa
roll
pop
jns
xchg
pusha
inc
xor
xchg
mov
jo
scas
loop
or
cmpsl
outsb
nop
sbb
xchg
add
mov
out
mov
icebp
scas
jb
dec
cwtl
fidivl
loope
add
inc
mov
js
lods
jle
out
push
mov
push
xchg
popf
hlt
and
arpl
repz
sbb
sbb
fstps
pusha
cmp
adc
adc
jno
add
push
fmulp
incl
adc
fildl
jae
adc
adc
adc
or
sbb
cmp
add
lds
repnz
add
in
pop
orl
or
int3
clc
push
test
xor
icebp
add
lods
xchg
sub
inc
loope
in
ret
popf
movsl
pushf
mov
pop
ss
pusha
loopne
imul
cmpl
rolb
and
or
rorb
push
add
mov
sub
mov
push
js
add
mov
lret
add
fidivl
imul
push
stc
lret
clc
sbb
pop
pop
arpl
add
cmp
add
mov
dec
stos
jmp
mov
mov
inc
nop
adc
add
shll
sarl
sarb
mov
inc
add
ds
sbb
inc
xor
pop
add
mov
push
cli
mov
aas
mov
dec
inc
cmc
add
mov
add
imul
fcos
push
int3
clc
gs
mov
ret
iret
rol
mov
add
sbb
mov
or
add
popf
add
sbb
add
mov
into
and
sub
mov
ret
inc
add
or
adc
push
clc
add
cli
bnd
daa
sub
pop
lret
jl
inc
add
shrb
inc
or
lods
push
stos
xor
insl
lock
xchg
push
sub
aam
fcompl
add
loope
in
and
xor
aam
rcll
ljmp
dec
mov
or
xor
js
jge
pop
lods
rcrl
cmp
jp
int
inc
push
xor
testl
je
dec
movsl
xchg
pop
mov
pop
loope
add
inc
gs
add
shl
pop
inc
xlat
push
add
dec
outsl
cmp
add
insl
adc
add
iret
mov
add
adc
lods
pop
jbe
test
xchg
push
sub
sbb
and
mov
testl
or
roll
mov
scas
iret
dec
int
add
insl
aas
inc
cmpsl
mov
loop
add
xchg
lcall
iret
add
sbb
push
mov
mov
jecxz
sub
xor
pop
adc
inc
test
fiadds
loop
xchg
in
pop
and
sar
push
lods
mov
add
into
stos
sub
pop
ljmp
pop
cld
int3
add
mov
std
faddl
cmp
cmp
iret
xlat
shlb
jle
daa
cmc
lret
add
and
xchg
mov
or
sbb
dec
dec
mov
faddl
fdivr
adc
xchg
mov
nop
push
stos
xor
add
cmp
lea
ljmp
or
dec
addr16
add
add
xchg
lods
pop
repnz
lods
sbb
pop
lahf
and
popf
add
push
add
insl
call
nop
or
incl
loopne
dec
sbb
mov
dec
lret
or
imul
jecxz
add
mov
js
inc
dec
mov
mov
add
ja
dec
ret
lock
push
fidivrl
cs
jmp
dec
and
std
mov
test
inc
stos
pop
jnp
sub
loopne
pop
push
add
push
shrl
test
cmp
and
dec
jg
add
mov
inc
out
jbe,pn
inc
sarb
dec
sub
pushf
pop
stc
popa
dec
add
xchg
sarb
add
inc
outsb
test
adc
movsl
sbb
add
in
add
push
xchg
inc
mov
or
cmp
add
repnz
dec
cli
mov
push
out
insl
sbb
in
mov
sub
pop
add
data16
push
jg
stos
aad
jo
movb
mov
pop
stos
add
jne
inc
add
jmp
mov
pop
xchg
cmp
into
popa
add
test
lock
nop
mov
pop
enter
xor
fldl
jmp
fisttpl
loop
xchg
mov
sbb
add
pushf
addl
adc
mov
sub
sahf
cltd
or
add
loope
xchg
sub
mov
push
xchg
add
mov
xorl
inc
jecxz
repz
push
shrl
pusha
inc
xor
mov
and
pop
mov
xchg
scas
adc
dec
add
fdivrp
mov
aaa
push
mov
ss
add
popf
mov
dec
out
arpl
mov
pusha
add
ret
add
jbe
pop
inc
rolb
fcompl
push
outsl
add
add
and
mov
mov
pop
inc
outsb
jo
iret
loopne
clc
mov
add
mov
push
fcoms
rcrb
imul
shrb
adc
add
push
sti
out
push
add
mov
je
shrb
hlt
aad
add
leave
ja
or
das
loopew
mov
mov
xchg
sar
nop
orb
and
pop
add
cmpsl
inc
pop
push
ja
jle
or
fcmovnu
lods
shl
sbb
insb
xor
add
push
scas
iret
fistpl
idivl
add
inc
cmp
xchg
dec
out
add
test
fadds
adc
ds
pop
mov
mov
cmp
mov
lcall
add
sbb
adc
mov
mov
lds
or
sbbl
int3
jnp
scas
in
xor
or
fwait
inc
push
pop
cmpsb
fsubl
xchg
sti
sub
push
push
push
test
inc
jns
add
and
les
mov
pop
out
testb
loopne
add
inc
popa
shl
aam
je
arpl
pop
xor
cmp
stos
into
or
addl
push
mov
xchg
je
lods
sub
pop
lock
xacquire
pop
das
lds
xor
stos
lea
inc
push
jmp
add
or
xor
les
in
lret
lds
nop
repz
or
inc
xchg
pusha
jb
andb
jae
add
mov
push
or
push
stos
mov
or
stos
dec
cli
xor
lret
mov
add
dec
adc
push
roll
xchg
add
out
sub
sub
cmp
js
lock
sbb
and
sbb
ljmp
or
popa
mov
pop
fisubrl
adc
aaa
push
lcall
test
arpl
aam
loope
leave
test
out
loop
adc
outsb
push
mov
or
mull
imul
mov
movsl
add
mov
mov
jp
add
int
dec
add
adc
lcall
push
sub
inc
in
xor
xchg
lods
into
testb
test
in
add
and
mov
scas
loop
pop
add
push
cs
cld
add
shlb
mov
sub
repz
loop
dec
mov
leave
jns
push
fcomps
pop
aas
adcb
mov
pop
mov
das
cmp
sbb
les
push
les
jl
rclb
lcall
mov
xchg
push
sub
out
jae
mov
pusha
push
fnstenv
sbb
js
push
int
mov
or
lods
or
jno
nop
xchg
fcmovne
xchg
bound
mov
inc
pop
addb
sbb
push
jns
call
add
cmp
out
push
jle
sarl
lret
mov
pop
stos
jo
and
test
add
mov
lock
sbb
add
leave
psubusb
out
in
add
xchg
ja
sbb
fists
cmp
inc
repz
dec
jno
add
enter
jbe
roll
cltd
in
subb
outsl
fcompl
xor
sbb
jb
adc
jle
inc
jecxz
or
and
sti
out
cld
aad
add
std
imul
jno
jg
push
push
or
add
roll
out
and
xor
stc
push
std
cmp
dec
mov
jp
add
pop
leave
ljmp
sbb
add
inc
repz
inc
nop
add
add
rcl
or
pop
push
lcall
add
push
sub
sbb
inc
dec
scas
add
jecxz
inc
mov
jne
add
lret
xchg
jb
add
rcr
gs
add
mov
inc
stc
sub
xchg
or
inc
inc
adc
cmpb
jmp
and
jp
add
insb
add
shrb
adc
and
add
roll
mov
push
scas
inc
cmc
mov
dec
lret
mov
mov
test
jl
nopl
push
aaa
jnp
mov
incl
and
iret
aad
pop
xor
insb
mov
push
pop
pusha
cld
sub
cmp
out
movsl
int3
mov
cmp
add
lcall
xchg
mov
roll
push
sbb
inc
sbb
lods
in
js
add
add
insl
mov
lods
out
or
or
test
cltd
pushf
pop
add
fs
shll
mov
clc
out
jecxz
add
scas
adc
int3
add
or
into
sub
mov
and
sbb
rcll
and
and
push
lcall
daa
xchg
out
inc
add
dec
cli
mov
stos
lea
mov
push
stos
movsl
push
pusha
inc
stc
inc
jle
icebp
shrl
add
xchg
mov
arpl
insl
sbb
fidivs
les
xchg
add
add
mov
dec
mov
repnz
pusha
jmp
cmp
inc
sub
mov
add
fsubrl
or
xor
scas
jno
mov
ret
add
addr16
mov
jns
mov
mov
pushf
jbe
mov
in
sub
add
sbb
add
cmovg
scas
shlb
in
xchg
stos
add
scas
mov
jecxz
fs
add
mov
mov
jg
cltd
mov
ret
push
cmpsb
adc
mov
in
adc
pushf
cmp
adc
scas
add
pop
cmpb
fmuls
movsl
out
movsb
cmp
dec
sbbb
aas
jnp
in
rolb
rorl
sbb
clc
das
push
test
mov
add
mov
cmp
jl
push
jae
add
pop
mov
dec
movsb
xor
push
fwait
insl
in
mov
icebp
pop
add
in
cmpsl
xchg
sti
mov
mov
and
mov
xchg
xchg
aam
ret
sahf
cltd
test
add
adc
js
sbb
pcmpgtd
mov
add
cmp
inc
mov
popf
add
nop
mov
mov
inc
js
std
mov
ret
inc
fs
xor
inc
lea
scas
fdivrl
mov
sub
xchg
mov
arpl
add
je
ret
sub
fs
pop
xor
cmp
xchg
loop
pusha
sbb
out
add
and
les
or
adc
push
xchg
add
adc
push
push
test
add
mov
pop
lret
insl
xchg
jg
cmp
add
jl
decl
or
jg
inc
sbb
pop
xor
movhps
and
xor
add
movsl
hlt
sbb
dec
add
outsl
or
adcl
pop
fcomps
es
inc
rcll
mov
mov
mov
dec
scas
in
insb
mov
mov
add
xchg
mov
sahf
inc
and
std
cltd
push
les
cmp
cltd
push
repz
add
fmull
or
into
mov
mov
std
lds
adc
mov
and
jbe
xchg
or
jle
das
in
add
sub
mov
add
enter
int3
das
push
xor
xchg
cmp
lods
jae
jnp
inc
pushf
popf
add
mov
mov
cmp
insl
add
mov
repz
push
pop
inc
adc
and
fcoml
jle
xorb
ret
mov
add
push
pusha
mov
fdivr
mov
add
arpl
mov
hlt
add
adcb
xor
ljmp
sub
ret
fs
sbb
imul
mov
inc
sbb
cmp
add
loope
push
scas
sbb
in
add
cltd
test
std
mov
pop
add
in
outsl
aad
jne
or
push
add
iret
in
movsb
adc
inc
pop
stc
rcrb
popa
xor
xor
mov
adc
and
or
sbb
enter
mov
xor
negb
aas
adc
lfs
adc
inc
and
fstpt
add
call
add
dec
xchg
or
clc
adc
sub
add
pop
jp
fisubl
lret
xchg
clc
aas
adc
add
cmc
lods
daa
mov
jle
add
xchg
outsb
pop
cmp
sbb
pusha
incb
or
sbb
shl
sbb
pop
pop
add
movl
mov
or
cmp
mov
mov
pushf
rolb
shlb
hlt
jge
xchg
add
dec
les
add
cmp
adc
mov
sbb
mov
and
pop
stos
rcll
shll
mov
add
cmp
or
pop
fwait
add
add
cs
pop
ror
movsb
ret
xlat
mov
ds
add
inc
add
in
add
insb
ret
aam
pop
rclb
inc
dec
lahf
sbb
or
push
addl
popf
add
pop
popa
or
unpckhps
cltd
pusha
mov
test
add
addr16
ds
fistpl
dec
scas
test
push
fwait
cmp
das
pop
sbb
out
sbb
pop
dec
cmp
flds
nop
shrb
xor
or
xchg
xchg
mov
ljmp
push
inc
mov
faddl
call
or
jmp
push
jno
add
push
add
pop
pusha
add
lcall
mov
xor
dec
lods
cwtl
add
lea
into
xchg
adc
loopne
in
mov
jge
mov
add
xchg
inc
das
aas
adc
cmp
or
je
push
mov
push
roll
lahf
sub
inc
shll
push
cwtl
shlb
xor
pop
mov
repz
imul
in
jo
bound
sbb
push
sbb
clc
inc
sbb
push
add
shl
adc
pop
fnsave
call
scas
ja
xor
add
or
push
call
iret
pop
and
dec
add
in
jae
into
jo
sbb
dec
jbe
xor
in
adcb
icebp
add
jnp
mov
xchg
aad
cmp
test
jl
scas
mov
pop
mov
pusha
icebp
int
cmpb
daa
addb
mov
outsb
ficomps
mov
test
push
sbb
jae
pop
scas
xor
out
sbbl
or
inc
lock
mov
gs
inc
divl
cmc
add
arpl
movsl
in
jmp
mov
push
or
xchg
rorl
push
pop
jns
insl
andl
inc
loopne
movsb
ja
mov
orl
push
rorb
cmpsl
and
xor
jbe
pop
adc
and
clc
inc
insb
add
test
inc
and
push
dec
sub
mov
pusha
nop
mov
sbb
and
fnstsw
mov
adc
movsb
add
push
lret
pop
dec
mov
leave
inc
sbbb
rcrl
mov
and
inc
mov
and
bound
js
lcall
dec
or
add
loope
xchg
mov
lods
ss
call
or
cmpsb
dec
idivb
sub
mov
dec
pop
inc
incb
movsl
mov
and
push
dec
inc
mov
push
pop
repz
cmc
in
or
inc
nop
xor
jge
rcrb
push
sub
dec
cwtl
pop
add
std
pop
cltd
inc
jl
and
bound
add
shlb
lea
jo
mov
or
push
add
scas
scas
mov
inc
cwtl
sti
movsl
es
add
inc
dec
je
outsl
shl
addb
push
out
fnstcw
or
push
fisubrs
or
repnz
sbb
lret
adc
fsub
pop
mov
mov
sbb
bnd
xchg
rolb
sub
push
js
bound
sub
mov
or
lods
add
lea
inc
insl
push
mov
cmp
cmp
lock
sbb
cmp
aas
les
cmpsb
mov
adc
dec
mov
mov
ret
inc
icebp
stos
xchg
sub
push
add
or
xchg
loope
sbb
jns
and
jp
add
push
aaa
loopne
into
inc
mov
pop
es
cld
test
sbbb
pop
hlt
iret
movsb
inc
jns
pop
out
je
into
flds
inc
test
mull
lret
mov
push
enter
aaa
adc
test
cwtl
xor
adc
icebp
push
push
or
xor
ljmp
pushf
add
dec
dec
aaa
iret
test
xchg
ret
add
imul
cmp
mov
int
and
fscale
add
mov
mov
or
sub
roll
into
and
jns
push
add
cmp
mov
pop
hlt
mov
mov
jl
add
pop
rclb
add
fisttpl
push
inc
dec
add
xchg
outsb
fnstenv
add
cmp
dec
mov
in
pop
mov
loopne
int
sbb
push
scas
and
and
xchg
repz
adc
test
sahf
sub
add
jl,pt
cltd
push
aaa
fmull
add
lods
aad
test
dec
or
cmc
fldt
hlt
inc
adc
add
adc
mov
jbe
or
test
ret
in
dec
imul
push
push
sub
xchg
pop
inc
stc
inc
orb
push
lcall
incl
dec
mov
inc
or
shlb
push
out
fisubrs
imul
xchg
sbb
lods
push
push
clc
sbb
idiv
inc
or
mov
aaa
jae
stos
repz
add
sti
xchg
xor
sarb
or
adc
add
sub
in
aaa
loope
shll
shrb
add
jge
ret
std
xchg
js
cmpb
das
and
sbb
push
enter
loope
imul
sbbl
inc
mov
pop
adc
mov
xor
add
push
sbb
add
cmc
je
add
jle
movsl
sbbb
aad
vpsubb
test
push
call
push
push
jmp
mov
das
add
clc
sti
sbb
mov
mov
adc
shlb
aad
and
roll
mov
lock
std
shrl
sub
mov
push
outsl
push
inc
sub
pop
push
aaa
jno
add
pop
xchg
sbb
insl
sub
mov
inc
aaa
push
sarb
or
xor
fcoml
sbb
test
fwait
stc
ja
lock
vmwrite
and
popa
sub
adc
pop
or
add
cs
lcall
fucomip
mov
mov
xchg
push
test
and
divb
mov
cmp
mov
mov
jge
inc
imul
jl
inc
adcl
xor
cmp
add
clc
fucomi
fcom
loopne
sahf
dec
daa
rcrl
and
jmp
inc
out
and
jp
add
or
mov
mov
ret
adc
nop
enter
jbe
orl
pusha
in
and
pop
sub
and
sbb
sub
mov
sbbb
ja
adc
jle
mov
into
xchg
aas
movsb
xchg
mov
sbb
test
mov
jo
cli
add
sbb
xchg
lea
jbe
xchg
cmp
sbb
pop
xchg
sbb
hlt
arpl
sbb
add
negb
repz
sbbb
cmp
dec
push
stmxcsr
push
in
sbb
push
pop
and
inc
rolb
dec
jle
add
sbb
jno
pop
shl
jne
sbb
leave
sub
add
es
int3
or
adc
je
add
add
pop
push
aaa
sbb
and
xchg
add
xchg
pusha
xor
push
out
dec
mov
jne
add
in
pop
and
andl
xchg
sbb
test
movsl
hlt
mov
into
cwtl
pusha
stos
xchg
xor
js
push
xchg
adcb
into
pusha
je
mov
jns
nop
sbb
xchg
jl
pop
test
push
mov
lock
pop
or
pop
dec
nop
ret
mov
inc
lcall
enter
cmp
call
int
mov
filds
or
push
xor
jp
sbb
imul
pop
mov
pop
sbb
out
mov
pusha
and
sub
adc
mov
xchg
cmp
hlt
pop
rorb
fwait
xchg
notl
or
adc
in
clc
rorb
mov
and
and
mov
js
lret
and
rolb
lahf
in
loopne
dec
test
adc
repz
dec
cmp
xchg
mov
mov
xchg
inc
sbb
jmp
inc
mov
xchg
jp
js
dec
and
aad
jg
vaddpd
lods
pop
and
fmuls
popa
mov
les
inc
and
inc
sub
and
dec
cltd
adc
cmpsb
fs
fbstp
jbe
out
adc
mov
stos
sbb
aas
stc
fwait
push
dec
inc
xchg
sahf
or
clc
andb
rolb
sbb
ss
lea
and
add
movsb
mov
sbb
mov
add
sbb
hlt
mov
add
dec
add
pusha
cmp
xchg
adc
add
lea
xchg
subb
mov
test
add
sbb
gs
xchg
xor
adc
pop
arpl
rcrl
xorl
mov
mov
or
push
insl
pop
adc
test
push
sub
mov
jae
lods
xchg
lock
or
fnstcw
cli
add
adcb
sbb
mov
cmp
xor
mov
jae
rolb
fsubl
fwait
pop
ret
out
pop
add
sub
or
nop
testl
and
mov
mov
mov
incb
fisttpl
jbe
aaa
or
add
shrl
daa
add
add
inc
popa
push
addl
add
mov
aam
nop
loopne
pop
dec
jmp
sar
loopne
inc
pop
addl
lahf
mov
fildl
jecxz
mov
in
mov
in
xchg
sub
add
lock
add
jle
xchg
leave
sbb
data16
daa
sti
gs
push
and
add
adc
cltd
add
scas
pop
xor
aaa
add
rcrb
ja
out
ficomps
adc
xor
in
sahf
mov
cmp
fstpt
mov
xchg
mov
ljmp
jns
adc
loopne
mov
inc
add
mov
out
imul
pop
jecxz
push
jbe
xchg
aas
outsl
jp
jne
cmp
adc
mov
into
add
and
push
mov
cmp
inc
call
add
sbb
push
dec
xchg
pop
cmp
dec
mov
lret
mov
and
inc
xchg
inc
mov
add
sti
clc
sbb
or
jmp
xor
rorb
sub
xchg
pop
add
ja
roll
das
xor
fildll
mov
in
fmull
add
cmc
icebp
test
pushf
adc
stc
ret
jo
gs
dec
xor
fwait
nop
pop
add
rolb
sub
jno
loop
adc
mov
incl
lods
cmp
stc
cmp
dec
and
js
icebp
xor
popa
insl
lds
insb
leave
shl
jne
adc
push
ret
ret
cmp
shrb
pop
ss
loop
int3
sbb
add
sub
add
pushf
xchg
addps
gs
aam
adc
sbb
or
dec
lock
hlt
jmp
test
pop
inc
sub
or
js
nop
xchg
adc
dec
lret
push
cmp
add
pop
clc
scas
je
add
hlt
lea
dec
andl
pop
sbb
xchg
in
nop
jnp
lods
test
push
sub
inc
xlat
arpl
insl
push
xchg
ljmp
jmp
fisubl
std
sbb
push
pop
hlt
cwtl
cmpsb
inc
popf
mov
add
jae
fiadds
and
dec
jno
sbb
mov
push
push
push
stos
outsb
xchg
test
push
jae
mov
arpl
push
mov
inc
pushf
mov
add
mov
add
lahf
adc
xor
clc
mov
and
js
sub
loope
add
fldt
inc
add
das
mov
add
xchg
push
aam
sub
push
xchg
dec
mov
add
adc
test
mov
orb
pushl
add
adc
jb
or
lret
mov
orb
inc
xor
es
sub
cmp
pop
int3
cld
dec
add
rcl
je
lea
xchg
xchg
add
push
xor
jmp
adc
push
pop
xchg
push
out
inc
dec
mov
popl
cmp
cmpsb
daa
loope
pop
push
add
push
cwtl
sahf
adc
xor
dec
aam
add
daa
repz
add
and
xor
movsb
cmp
mov
xchg
out
add
push
sub
gs
jle
add
sub
hlt
in
add
lea
add
inc
addr16
shlb
les
jb
or
add
push
push
jne
je
or
inc
mov
fdiv
xchg
and
call
test
aad
cmp
jle
inc
dec
je
pop
fnstsw
pusha
negl
mov
add
mov
lods
add
jns
and
loopne
ljmp
loopne
and
sarb
dec
dec
sub
lret
add
cwtl
adc
enter
or
cmpb
push
je
adc
rolb
icebp
and
pop
add
add
mov
shlb
jmp
and
mov
jne
add
or
cld
pop
xchg
mov
ficoms
mov
sahf
and
lds
add
ucomiss
adc
sbb
and
movsb
sbb
mov
mov
add
loopne
jne
mov
jmp
mov
rolb
aam
in
push
insb
add
mov
inc
sbb
sub
push
add
mov
popa
add
lret
xchg
cmp
inc
add
icebp
movsb
cmp
lahf
add
xor
jae
scas
mov
cwtl
inc
imul
rcrb
xor
push
add
dec
loopne
fldt
adc
mov
insb
cmpsb
pop
add
and
fs
and
aad
imul
add
cs
insb
or
sbbb
loope
add
jmp
jge
push
mov
ret
imul
mov
xchg
fstps
sub
loope
adc
cli
add
fldl
mov
out
and
repnz
mov
std
mov
pop
add
stc
sbb
add
iret
sub
faddl
jecxz
pop
or
sahf
xor
aad
dec
cld
mov
lret
pop
xor
add
add
adc
xor
cltd
sub
add
and
fwait
xchg
and
cmp
xorb
jno
ret
ss
push
adc
inc
cmc
movq
xchg
sub
mov
das
out
jno
add
lods
mov
lea
popf
add
call
sbb
push
je
xor
out
in
sbb
fs
add
push
dec
outsl
add
add
cmp
dec
jne
add
les
ret
movsl
xor
popf
pushf
xchg
cmp
nop
sub
test
xor
or
sub
in
scas
outsl
add
bound
jae
cmp
je
mov
lods
paddsw
in
mov
sar
mov
cmpsl
add
scas
cmp
cmp
call
shlb
roll
loopne
cmp
test
out
or
mov
outsb
shr
add
imul
mov
add
sbb
and
sub
sub
out
and
cmp
inc
add
pop
add
movq
int3
mov
sub
add
pop
repnz
add
sbb
add
loop
or
push
push
add
das
fmul
iret
sbb
add
sahf
pop
jle
cmpb
push
adcb
imul
popa
pop
jp
imul
jb
mov
adc
jge
movb
mov
ss
outsl
pop
push
xchg
mov
add
jb
jp
aam
mov
test
fwait
jo
pop
rol
dec
das
addl
data16
mov
in
mov
add
das
imul
mov
mov
cs
xchg
add
ljmp
add
dec
mov
cli
xor
push
es
les
repz
ret
inc
imul
and
add
cmp
cwtl
mov
add
pop
cli
mov
lds
dec
add
mov
xchg
movsb
add
push
mov
les
or
ljmp
pop
mov
jmp
int3
ret
and
jno
cmp
out
int
int3
leave
imul
aam
xchg
loop
dec
pop
mov
nop
adc
sub
add
xchg
mov
mov
in
lods
add
add
loop
fsubl
xor
cmpsl
stc
iret
pop
cs
aas
call
scas
data16
orl
jge
les
add
imul
lds
testl
pop
call
add
into
and
incl
xor
xlat
mov
test
push
adc
add
mov
jg
pop
in
imul
iret
push
add
data16
jnp
aas
xor
cmp
ljmp
pushf
test
daa
pop
or
lcall
in
pop
adc
lods
lahf
pop
pusha
repnz
add
ja
call
dec
pop
loope
shlb
push
shrb
int
sarl
in
push
repnz
enter
xorb
insl
sbb
fcompl
fwait
jno
clc
pop
int
inc
shlb
xchg
adc
add
jnp
jl
dec
loopne
ljmp
inc
incb
adc
jmp
pop
in
test
ss
xlat
outsb
out
cmp
mov
inc
xchg
add
adcl
jle
les
aad
mov
sub
ret
push
mov
pop
sbb
fimull
or
dec
and
mov
pop
aam
jge
mov
mov
push
call
psubusw
sub
xchg
cmp
dec
xor
cmp
rcrb
or
mul
cld
cltd
add
mov
fs
jb
dec
dec
sahf
add
adc
sbb
rcll
mov
dec
add
cmpb
in
mov
add
leave
dec
pop
cmp
cmp
mov
xlat
xchg
jns
xchg
das
jge
enter
or
pop
mov
insb
jmp
mov
sub
push
in
movsl
push
inc
fsincos
dec
cmc
add
jle
xchg
sub
cld
sarb
out
imul
sbb
repnz
into
dec
add
shrb
push
cmpsb
dec
add
jns
xchg
fildll
xchg
imul
popa
stos
xlat
xchg
rep
shrb
add
clc
das
data16
add
sbb
add
shrl
jo
add
in
fisttpll
jmp
sbb
aad
or
jecxz
in
out
or
cmp
xchg
lahf
push
jmp
ret
sub
add
pop
xchg
dec
jp
ret
decl
push
add
cmp
lods
add
adc
and
sub
adcb
shlb
dec
mov
inc
pop
int
push
add
inc
push
inc
movsb
cld
popl
fmull
push
fnstsw
xor
in
iret
outsb
shll
pop
bound
fsubrs
mov
imul
dec
sarl
pop
fwait
dec
pop
add
ret
mov
inc
add
mov
mov
outsl
and
enter
add
jo
lea
faddl
adc
in
sarl
testb
cmpb
adc
adc
jo
aam
sbb
pop
inc
dec
push
pop
lods
xchg
add
pop
xor
add
rol
fnstcw
into
xchg
push
unpckhps
xor
add
cwtl
jg
fs
dec
adc
adcl
ss
push
sbb
scas
dec
das
fcomip
mov
clc
outsl
cmp
mov
add
pop
add
hlt
jp
scas
inc
sbb
sub
sbb
add
lods
xor
in
cld
leave
or
lret
mov
enter
jg
mov
subl
push
xor
lock
pop
shll
push
sbb
mov
inc
pushf
pop
mov
repnz
and
jnp
add
movsl
dec
and
jb
pop
sub
out
push
add
pop
adcb
js
cld
inc
add
mov
push
ds
add
add
testb
mov
ret
cli
add
dec
ret
xchg
mov
fbld
push
mov
add
mov
pop
hlt
pop
addb
dec
sbbl
add
dec
adc
cli
cld
pop
jp
add
jmp
add
aam
pop
push
loop
iret
adc
pop
pushf
xchg
push
jle
add
cli
scas
sbb
or
jl
xor
dec
pop
cmp
add
push
xchg
or
outsl
or
lea
fs
hlt
mov
gs
mov
xor
mov
add
or
adc
pop
push
out
dec
xor
pushf
add
in
stos
add
cmp
iret
nop
push
add
adc
add
push
iret
shll
or
push
xchg
add
test
push
and
clc
add
add
add
es
cmp
mov
pop
nop
inc
add
mov
push
jecxz
loope
add
xor
gs
aam
add
orl
lock
and
js
sti
mov
vmwrite
sub
leave
jp
jmp
pop
pop
xor
pop
mov
add
mov
cmp
mov
std
push
nop
add
xor
je
inc
decl
sub
ljmp
adc
addb
xor
jg
loopne
pop
dec
jno
add
daa
icebp
push
mov
test
push
inc
push
jecxz
addl
mov
dec
lahf
aam
xchg
ret
scas
scas
jbe
add
mov
add
push
enter
cmp
addr16
aam
call
mov
bound
mov
add
stc
mov
cmp
jbe
mov
pop
fnclex
and
je
adc
jl
popf
mov
loopne
push
mov
jb
ss
adc
mov
aam
fs
jo
cltd
cwtl
ljmp
xchg
and
mov
dec
test
mov
add
ror
mov
dec
and
jl
es
add
push
lds
fs
nop
call
bound
add
pop
jne
inc
mov
mov
mov
add
repz
loope
and
mov
icebp
jno
lock
stos
add
ret
inc
push
sbb
daa
push
add
pop
xor
sub
call
loopne
add
push
mov
adcl
inc
cmp
mov
sbb
repnz
add
cmp
imul
loope
mov
dec
ficoml
xchg
je
add
pop
stos
les
add
movsb
inc
bnd
arpl
lea
or
sbb
pop
sbb
jo
pop
in
shlb
add
cmp
icebp
test
mov
mov
jmp
adc
in
shll
or
sbb
cltd
mov
stos
xor
hlt
sbbb
addl
xchg
cs
and
and
mov
sahf
sbbl
lods
outsb
sub
sahf
int3
in
pop
sbb
mov
ds
add
and
mov
push
dec
sbb
jge
add
fisubs
pop
add
xchg
cli
inc
and
stos
test
add
pop
push
sahf
mov
sbb
dec
ja
push
adc
sar
movb
les
xchg
mov
inc
nop
rorb
sub
mov
mov
push
add
jbe
jae
mov
int
test
dec
dec
inc
or
lds
call
cmp
mov
inc
pop
ja
aad
push
ficompl
add
pop
cmp
outsb
js
jge
mov
sub
add
or
clc
inc
loope
pop
cmpsb
mov
xchg
xor
push
pushf
xlat
add
add
jl
inc
pop
cli
ss
dec
dec
inc
scas
add
or
nop
int3
mov
add
arpl
setle
aad
add
add
in
roll
lods
and
xchg
mov
cmp
mov
add
xchg
fnsave
test
jg
xchg
in
cltd
xchg
stc
nop
and
push
adc
mov
jb
add
divps
mov
sahf
in
push
jmp
bound
out
filds
je
jns
ja
add
sbb
xor
jb
sub
mov
cmp
movsl
mov
in
pop
clc
push
testb
dec
mov
out
nop
add
loope
ja
dec
ret
push
fcmovnu
jg
push
adc
add
cmpsb
sub
dec
mov
add
pusha
daa
add
jge
and
and
pop
add
dec
adc
push
aam
pop
hlt
add
push
sti
nop
enter
push
push
not
add
out
jne
lcall
fs
movsl
jp
inc
insl
or
mov
cs
add
xchg
sub
lods
jns
pusha
mov
xchg
xchg
orb
push
add
cmc
or
mov
ret
stos
cld
add
push
popa
pop
loop
xchg
pop
push
fstps
mov
xchg
mov
clc
pop
popf
sbb
dec
add
push
in
sahf
sbb
add
xchg
into
enter
pop
xchg
xchg
mov
mov
nop
cwtl
sbb
mov
jns
and
icebp
inc
les
rcrl
and
mov
pop
sbb
test
jp
add
push
cmpl
jnp
roll
insl
je
or
sbb
cmp
or
jns
add
push
mov
fiaddl
adc
fistl
ret
in
jnp
or
xchg
mov
enter
mov
cmc
jns
and
dec
test
outsl
pop
cwtl
jno
rol
pop
loope
js
clc
sbb
pop
add
mov
ljmp
mov
jb
sahf
inc
jbe
add
mov
cli
dec
push
out
adc
add
ficomps
dec
insl
andl
int3
push
ret
mov
push
mov
divl
fisubl
mov
pop
sbb
fwait
repz
mov
popa
add
cmpl
mov
ljmp
pop
add
popf
lods
rorl
addr16
add
mov
sbb
fldcw
popf
and
add
daa
in
push
mov
es
dec
adc
cld
mov
push
add
mov
pop
sbb
ss
sbb
repz
inc
push
mov
sahf
rcrb
add
pop
in
sbb
dec
xchg
pop
icebp
mov
jle
or
pop
cld
add
shl
data16
sbb
push
pop
dec
std
ret
stos
add
incl
xchg
jl
sarb
fsubrl
push
mov
es
mov
sub
jae
add
adc
pop
mov
insb
push
testl
add
mov
mov
lahf
cmc
mulps
jge
and
add
lods
ror
imul
xor
xchg
mov
es
sub
pop
mov
add
mov
and
dec
xchg
sub
push
jmp
sub
cld
push
pop
mov
nop
xchg
imul
js
adc
in
cwtl
movsb
cli
stos
clc
lea
test
pop
mov
fmuls
or
jne
insl
push
pop
inc
lcall
mov
adc
sub
mov
loop
mov
inc
test
add
mov
out
pop
call
add
lods
fisubrs
mov
clc
cmp
dec
dec
imul
lahf
notb
cmpb
mov
imul
insb
cmp
xor
fdivrl
or
or
or
push
ret
lock
enter
pop
mov
jnp
sbb
add
lods
call
mov
mov
and
add
frstor
and
cltd
add
pop
push
sub
ss
sbb
mov
dec
arpl
insl
sbb
push
stc
scas
add
out
scas
xor
xor
xchg
xlat
add
out
xor
add
lds
inc
sub
enter
mov
jb
out
pop
add
jg
aam
lock
mov
dec
mov
push
sbb
fidivl
add
stos
iret
push
inc
push
cltd
ljmp
pop
jl
cmc
cmp
jmp
and
cmc
sub
add
lea
add
sub
cld
pusha
aad
add
movsb
incb
adc
add
hlt
or
add
cmp
xchg
jmp
push
cmc
jns
inc
repz
mull
mov
jbe
add
inc
add
faddl
dec
adc
ss
mov
mov
stc
add
or
pusha
and
jo
add
test
das
push
pop
dec
fldl
jl
test
in
lahf
enter
orb
js
rcrl
mov
sbb
dec
call
inc
or
add
bound
stos
add
dec
outsl
add
out
cmp
repz
inc
adc
cli
cld
nop
add
mov
daa
sti
ljmp
xchg
in
dec
inc
or
test
add
xchg
push
push
or
pop
xchg
lods
outsl
dec
adc
ror
stc
add
testl
and
sub
add
inc
mov
outsb
add
imul
shl
aaa
mov
pop
cli
push
out
aam
rcrl
lcall
ds
pop
cltd
pop
inc
mov
dec
clc
jge
sub
inc
jecxz
ss
sar
sbb
add
mov
mov
cwtl
lods
pop
xor
add
xorb
add
mov
jae
add
dec
mov
stc
inc
pop
int
and
or
lcall
aaa
dec
pop
daa
pop
fadd
pop
xchg
es
pop
sbb
push
int3
push
mov
call
inc
jbe
xor
aam
js
add
enter
add
add
test
rcll
adc
add
pop
test
pop
es
inc
cmp
add
testl
jb
pop
sarb
inc
jmp
out
xor
xchg
xorb
outsb
push
nop
dec
add
jmp
dec
in
jns
dec
fcoml
popf
rol
lock
mov
inc
xchg
pop
into
jns
jmp
aad
call
jb
add
aas
push
add
notl
ret
xchg
lock
push
cmc
lahf
xchg
add
xchg
dec
pop
lock
scas
add
xlat
mov
rcrl
jg
xchg
es
push
sbb
sti
pop
jnp
pusha
and
cwtl
iret
pop
xchg
stc
xchg
jbe
mov
push
scas
jg
gs
jp
mov
push
data16
ficoms
test
aam
fimull
rcll
dec
out
lods
adcb
cmpsb
add
out
fdivrp
push
rcrb
jne
add
loopne
jl
cmp
adcl
add
std
aam
mov
outsb
sbb
and
mov
inc
mov
jge
lock
dec
add
pusha
or
adc
xlat
jecxz
pop
adc
add
jg
and
stos
fwait
xor
pop
xchg
sub
add
jle
mov
fstp
add
pop
loope
dec
or
jo
pop
ljmp
mov
cld
sbb
les
mov
daa
fdivl
sub
mov
add
stos
xor
mov
jae
imul
xor
jmp
clc
inc
dec
stos
pop
mov
add
xchg
add
push
popa
and
out
pop
and
adc
fildl
dec
cwtl
xor
jae
fs
pop
add
je
jge
ret
dec
test
xchg
ror
add
inc
add
dec
es
add
setns
mov
dec
inc
cmc
add
push
add
add
ss
xlat
addl
bound
mov
roll
pop
dec
mov
adc
inc
add
mov
outsb
cmp
fildl
or
pop
aam
iret
add
push
pusha
div
dec
imul
pop
push
xor
scas
leave
inc
add
int
mov
inc
sub
xor
mov
add
shll
add
test
js
jecxz
and
lcall
add
fwait
cli
mov
rorl
inc
add
jmp
add
or
jb
addr16
add
aad
jl
stc
inc
scas
or
sub
in
popf
call
push
nop
add
xchg
scas
sbb
lret
cmp
mov
or
add
xor
adc
and
dec
add
lea
dec
mov
orb
add
out
sbb
add
mov
mov
stos
add
int3
stos
xchg
add
cmp
jg
xor
lods
or
xorl
sarb
xor
lock
dec
adc
mov
out
add
pusha
push
mov
add
push
or
fdivl
rorl
rcrb
je
jge
push
push
loop
and
stc
js
sbb
push
mov
pop
jl
mov
xlat
imul
xchg
push
cwtl
adc
fs
fwait
pusha
pop
cmp
repnz
int
sbb
mov
mov
dec
jmp
push
mov
fcos
mov
add
mov
or
lcall
add
cmp
test
and
or
std
aas
adc
cli
pop
outsb
rcrb
js
add
int
movsb
pop
ljmp
adc
add
and
outsb
subb
in
fwait
je
add
popf
int3
adc
xor
mov
xor
je
lods
in
lcall
das
jbe
jle
into
jge
stc
dec
les
orb
out
mov
call
adc
cwtl
or
loop
sub
and
push
xor
push
addr16
and
push
sub
mov
sahf
movsl
add
mov
mov
add
or
mov
add
ja
les
bound
addr16
and
fidivs
or
dec
movsb
test
je
sbb
jnp,pt
mov
xchg
pusha
adc
movsb
movsl
or
mov
pop
pusha
pushf
ret
cli
xchg
cmp
push
add
and
sahf
jno
rolb
in
std
xchg
or
mov
cmp
mov
insl
push
sti
push
fadds
cli
add
scas
jne
dec
imul
mov
sbb
jmp
mov
repnz
xchg
lret
or
push
es
or
out
je
pop
test
movb
jnp
push
lcall
rcrb
sub
das
jnp
xor
lods
shrl
nop
adc
pusha
inc
and
cltd
je
or
push
adc
rcrb
ja
sub
sub
add
insl
sub
shrb
xor
lock
inc
add
mov
xchg
and
push
and
lcall
cli
inc
clc
pop
mov
sbb
mov
add
push
inc
and
xchg
lcall
in
js
add
adc
mov
scas
out
add
ret
mov
fs
dec
dec
add
inc
adc
mov
add
mov
push
std
pop
add
add
mov
cld
sbb
mov
cli
into
or
lret
push
adc
mov
add
xchg
inc
jnp
inc
or
or
cwtl
add
xor
mov
out
or
leave
xor
notb
add
mov
jns
sbb
add
out
in
xchg
psubsb
andl
dec
enter
addb
add
and
jne
mov
push
decb
and
movb
dec
xor
jmp
adc
test
mov
or
aam
jbe
sbb
add
cwtl
das
add
xor
mov
inc
dec
push
push
rcl
adc
add
test
and
add
addps
xor
ds
cmp
inc
pop
xchg
mov
outsb
jge
add
stos
ds
add
add
and
or
movsl
pop
rclb
dec
lahf
mov
push
ret
sbb
scas
fnsave
push
add
fidivrs
js
xchg
mov
fs
pop
adc
pop
shlb
lahf
popl
cmc
std
testb
fbld
add
add
subb
scas
add
cmpsb
fdivrp
je
aas
mov
dec
and
mov
sub
sub
and
jl
dec
add
in
dec
push
andb
push
ja
or
dec
testl
call
cld
mov
mov
enter
adcb
rclb
add
xchg
fadds
sub
or
jp
rcrb
jns
xor
push
cwtl
out
cmpsb
mull
and
sbb
sub
lcall
mov
mov
pushf
add
sar
popf
jmp
inc
or
push
out
add
xorl
pop
push
or
dec
mov
test
sarl
test
insl
add
cltd
in
sub
adc
inc
ret
dec
aaa
ds
insw
xor
and
sbb
mov
dec
les
sahf
jecxz
sbb
subl
jo
lock
add
dec
lods
sti
fnsave
pop
ljmp
push
cmp
and
pop
mov
add
lcall
in
xor
cmpsb
in
shrl
loopne
mov
xor
fistl
or
sahf
adc
jmp
les
xor
jbe
adc
stos
add
and
mov
inc
sbb
add
mov
mov
stos
adc
lahf
add
pop
xchg
fiadds
iret
sub
test
sub
lea
add
std
add
xchg
or
dec
sub
mov
push
push
jl
inc
pop
call
lret
push
push
inc
testb
mov
rclb
data16
or
popa
mov
sbb
xor
ja,pt
jae
xchg
fsubrs
int
xchg
or
fnsave
push
add
popf
add
cmc
or
fbstp
add
or
jl
and
inc
jae
rcrb
fisttpll
adc
jne
sub
arpl
jno
cmp
inc
sbbb
pop
cmp
cmp
adc
mov
push
xor
jb
xchg
add
in
pushf
mov
adc
mov
mov
pusha
push
addb
or
pop
add
and
adc
and
or
jb
cmpsb
add
and
add
pop
xorb
and
mov
call
cwtl
out
jno
inc
cmp
rcrl
es
sub
ds
outsl
mov
movsb
sub
int
add
add
xchg
popa
push
outsl
ficoms
sbbl
imul
inc
add
adc
call
inc
movsl
test
shrb
jne
sbb
rcl
or
ja
add
fsubp
sbb
jbe
pop
mov
das
std
ja
inc
cmc
push
movsl
clc
mov
add
sbb
call
cli
sbb
or
dec
pop
push
sti
dec
pop
push
mov
inc
add
das
in
movsl
insl
popl
insb
mov
stos
mov
xchg
adc
in
stc
jb
stos
loope
sbbb
mov
std
shrb
pop
jmp
icebp
aas
loop
and
add
inc
out
dec
xor
jnp
addr16
andb
iret
add
pop
jmp
dec
add
fwait
push
jne
add
cmp
lret
add
ss
aam
mov
test
in
add
jp
addb
mov
lock
pushf
mov
test
sbb
ljmp
mov
jns
push
add
pusha
mov
add
js
cmp
push
xlat
gs
xorb
add
add
cmp
adc
pop
push
add
shr
xchg
mov
shll
cld
or
repnz
jmp
mov
inc
add
addr16
jge
shrb
pop
pslld
add
pop
add
loop
test
pop
push
sbb
divl
aas
sub
cmp
nop
add
pop
adc
push
jno
mov
dec
cmp
push
jl
int3
xchg
pop
in
xlat
xor
and
cmpsb
push
pop
sahf
test
sub
decl
lea
cmp
inc
jb
test
lock
or
and
mov
test
dec
mov
add
or
loope
add
in
xchg
xor
ds
sbb
cmp
pop
inc
mov
sbb
push
aas
xchg
daa
adc
cmp
popl
or
inc
pushf
shlb
add
mov
adc
fstpt
jmp
stos
push
cmpsb
test
lcall
sar
sar
add
into
cwtl
cmpsl
inc
lods
adc
jo
cld
ffree
jle
add
jp
cmp
pop
push
inc
xor
jecxz
icebp
jnp
out
call
in
iret
and
add
dec
jmp
test
andb
inc
mov
mov
xchg
stos
iret
int
add
sbb
fdivl
addr16
xor
xor
test
out
jns
push
movsl
mov
pop
lds
dec
lret
push
leave
cmp
repz
pusha
or
xchg
aam
adc
add
dec
add
das
push
shlb
and
sub
lock
cmpsl
mov
pop
cmp
mov
sub
adc
es
enter
sahf
ljmp
add
sbb
jmp
cmc
aad
adc
inc
int
add
push
das
aaa
sbbl
xor
mov
inc
cltd
mov
test
cmp
test
add
mov
addb
or
pushf
add
add
mov
in
out
add
xchg
push
cmp
insl
repz
loope
inc
mov
ja
push
enter
neg
pop
jle
shll
movsb
add
mov
sbb
add
mov
sub
in
std
sbb
and
repz
lcall
inc
sbb
sub
clc
lahf
sub
jae
push
push
loop
cmp
xor
push
out
das
add
fld
and
or
mov
add
and
clc
jb
add
shl
ds
add
pop
enter
xchg
mov
je
repz
repnz
sbb
pop
push
adc
adcb
sub
jnp
jo
inc
ret
fucompp
test
jno
inc
popl
push
and
pop
add
xor
push
movl
ljmp
xor
mov
addr16
pop
ss
rol
add
lahf
and
mov
sbbl
jecxz
outsb
add
mov
push
out
jns
add
adc
add
sub
iret
loop
ljmp
test
leave
dec
push
inc
add
pop
mov
jnp
mov
push
dec
outsb
out
and
out
pop
js
mov
lods
sti
push
cmp
testl
adc
inc
jge
or
and
mov
jb
add
sub
inc
outsl
movhps
fucomi
icebp
add
and
sub
pop
add
or
mov
push
add
mov
int3
or
push
adc
test
adc
add
imul
insb
mov
repnz
repnz
arpl
outsl
push
add
and
cmp
pop
mov
rcrl
adc
add
jecxz
movsl
dec
imulb
lret
push
je
dec
mov
add
xor
out
xor
sarb
add
rorb
add
into
fucom
add
push
je
adc
ret
shlb
and
xchg
imul
cltd
shl
add
mov
cmp
je
add
popf
cmp
pop
aam
mov
mov
sub
stos
add
arpl
push
cmp
loop
out
mov
imul
fdivl
in
dec
sbb
popf
rcrb
faddl
jecxz
call
addb
inc
push
mov
hlt
fbstp
add
out
in
mov
enter
arpl
xchg
cli
aam
push
push
mov
lock
mov
add
add
mov
cmp
addb
in
std
sarb
add
sbb
lods
mov
out
int
mov
add
rol
les
inc
lahf
stos
pop
xor
xor
imul
subl
mov
sbb
mov
pop
inc
sti
je
clc
rolb
bound
add
pusha
mov
fwait
shrb
push
mov
mov
in
or
cmp
fs
test
ljmp
inc
sub
aaa
cltd
add
in
or
cld
cwtl
in
add
jne
std
xchg
add
cmp
lret
pop
out
and
inc
shrl
add
add
add
mov
adc
jo
add
pop
mov
push
dec
lahf
addl
xchg
push
shl
sub
pusha
mov
push
std
cmp
xor
out
mov
pop
out
inc
dec
mov
add
and
xor
call
add
shlb
repz
jns
shll
inc
dec
dec
lcall
sub
add
rorl
rorl
add
ja
fcmovnbe
dec
or
pop
jecxz
rorl
jae
icebp
push
mov
add
adc
sub
lds
dec
int
addb
call
fildl
cmpsl
in
pop
das
jne
std
jb
add
dec
pop
fs
mov
pop
icebp
sti
add
push
add
out
aad
mov
xchg
pop
bound
push
inc
and
popa
mov
push
adc
loopne
data16
bound
push
xor
sub
outsb
dec
incb
jg
mov
sarl
push
push
pop
sbb
mov
movsb
mov
popa
mov
aas
incb
js
pop
outsb
cmp
divb
cmpsl
add
xchg
aaa
jbe
pop
pop
mulb
pop
cmp
xchg
and
inc
add
push
pop
in
jns
dec
cs
adc
pop
inc
out
fldt
movsl
add
imull
jno
fsubr
xchg
pop
cmp
cltd
fs
add
ret
inc
adc
pusha
add
out
xorl
testl
scas
aaa
fidivrl
jo
xor
and
clc
mov
cmpsl
pop
xor
rcr
lea
push
add
add
or
jbe
insl
jne
mov
mov
ja
and
push
scas
in
pop
and
subb
or
mov
cmp
mov
sbb
xchg
add
insb
ds
stc
add
cmp
dec
inc
or
mov
add
sbbb
push
adc
add
xor
push
push
sbb
cwtl
stos
jecxz
test
xor
xchg
test
pop
add
fs
das
and
push
cmp
cmp
xchg
repnz
xchg
addr16
jl
mov
xor
add
jae
lahf
add
push
dec
fbld
cmpb
or
cmp
movsb
push
sbb
dec
add
pop
in
mov
inc
jne
in
jnp
inc
add
fwait
dec
ret
mov
or
or
pusha
nop
add
cs
mov
fidivrs
add
mov
adc
repz
jle
js
add
gs
dec
insb
xlat
push
add
sub
add
inc
test
pop
lea
sub
loope
add
push
out
xchg
fldl
inc
adc
and
loop
xor
push
sub
push
dec
jle
out
push
pop
insl
clc
inc
adc
popfw
in
jne
int3
sbb
repz
int
add
out
pop
inc
cmp
mov
movsl
lock
jl
lret
cli
out
and
jecxz
testl
sti
pop
pop
rorb
add
add
pop
inc
sbb
mov
cmp
mov
mov
iret
add
cmp
pop
icebp
bound
sub
ret
cli
hlt
jno
clc
fcomps
sti
adcb
lret
add
sbb
movsb
add
push
in
adc
js
and
cli
add
or
xchg
mov
add
and
cwtl
enter
sub
add
ds
or
js
push
ja
lcall
sub
sbb
jb
in
jmp
jnp
test
in
push
push
scas
pop
aam
mov
pop
aas
dec
mov
inc
sbb
fidivl
add
mov
in
xlat
leave
cmp
outsl
loop
cld
dec
add
dec
shl
dec
jns
rcrb
sub
jnp
hlt
add
jmp
mov
out
shlb
cli
sbb
test
addr16
movsb
lcall
scas
mov
add
ss
or
pusha
xchg
and
mov
pop
loopne
dec
inc
add
popa
negb
rcr
dec
inc
and
mov
push
out
add
cmpsl
push
js
andl
xchg
pusha
fwait
stos
fldcw
add
adc
mov
push
dec
mov
add
mov
hlt
inc
lods
adc
in
adc
add
cwtl
clc
insl
jp
add
les
sbb
mov
add
mov
call
rorl
stos
or
or
add
fistpll
mov
cwtl
gs
pop
es
mov
testb
lret
jo
pop
jle
cmp
push
imul
in
addb
adc
sbb
shll
jle
cmp
in
sahf
ljmp
jp
jl
aaa
pop
mov
roll
mov
sbb
add
adc
imul
xor
lahf
mov
or
mov
cmp
icebp
pop
and
dec
outsb
aam
jmp
stos
lret
jg
add
mov
cmp
data16
sub
and
mov
adc
add
jne
jns
bound
and
cmp
pop
fsubs
das
mov
dec
jmp
jno
inc
pop
pop
pop
fcoml
mov
pop
scas
inc
jno
add
mov
je
pop
add
int
mov
push
popf
add
das
shll
adc
sub
adc
pop
mov
or
rolb
dec
pop
add
repnz
int3
mov
add
dec
cmp
inc
das
lret
ret
mov
and
andb
out
add
mov
jecxz
nop
js
mov
test
sub
daa
repnz
cli
aas
mov
jae
sti
mov
sbb
repnz
fldt
and
roll
pop
xor
out
cmc
ja
and
sub
xor
or
clc
addr16
sbb
scas
push
sbb
mov
sbb
add
aam
fmul
addr16
jmp
scas
lea
push
insb
ds
es
jl
pop
dec
shll
jno
in
cwtl
mov
xor
into
repnz
nop
xor
andb
pop
fimull
xchg
bound
and
inc
es
or
xchg
adc
dec
adc
inc
sub
stc
mov
sbb
lods
in
dec
sub
cmp
mov
ljmp
outsl
inc
lret
xchg
cmpsl
add
sub
inc
adc
mul
add
add
or
xchg
sub
sarb
add
pop
shl
jle
cmp
or
scas
shll
inc
inc
leave
mov
repz
push
lods
add
imul
mov
or
sbb
lret
or
push
lock
inc
fadds
inc
add
dec
push
add
je
test
add
adc
lods
cs
push
sbb
dec
add
into
test
icebp
insb
sbb
mov
add
mov
pop
rcl
push
dec
aam
pop
pop
push
jp
push
mov
mov
sbb
rcrb
push
mov
xchg
push
dec
lods
add
inc
das
mov
xlat
fnstcw
add
mov
or
jnp
add
mov
outsb
dec
inc
push
mov
dec
add
adc
int3
push
or
cmp
scas
js
call
stos
pop
jp
adc
add
push
adcb
call
inc
xchg
addl
popf
cld
cmp
psubw
rcrb
mov
xchg
popa
aaa
ljmp
add
sahf
pop
les
jb
subb
int3
cmp
lds
jbe
add
adc
out
add
push
add
shlb
add
sbb
iret
add
in
adc
add
cmpl
dec
icebp
add
mov
idivb
js
add
cmpsl
adc
enter
add
pop
mulb
fcmovnbe
mov
pushf
dec
xchg
push
add
sbb
rcrb
int
add
mov
js
leave
add
cs
fsubrs
test
pop
adc
movsb
mov
add
stc
cmp
es
xor
lar
je
push
shll
mov
jb
clc
mov
jmp
enter
es
inc
arpl
nop
je
xchg
ret
movsb
xchg
stos
push
mov
test
add
inc
jo,pn
data16
imul
aad
inc
mov
mov
out
sbb
idivb
je
pop
lret
push
popf
push
rclb
cmp
sbb
outsb
lock
add
jo
loopne
dec
pop
xchg
ret
dec
lods
rcr
cltd
xchg
jno
iret
hlt
cmc
adc
adc
cmp
mov
das
les
mov
stos
adc
fstpl
pop
add
and
mov
js
and
test
xor
sbb
rcrb
inc
adc
gs
and
dec
adc
arpl
jp
jl
add
pusha
add
nop
lret
pop
cmpsl
sub
mov
sarw
xlat
add
dec
sub
sub
and
xchg
mov
sub
push
psrlw
pop
test
cld
xor
mov
sub
or
mov
xchg
pop
sbb
mov
insb
pushf
add
sbb
insl
push
mov
daa
mov
xor
mov
nop
les
call
add
clc
cmc
cmp
scas
faddl
fidivs
jae
dec
shlb
sbb
dec
pop
adc
push
je
jg
add
pop
and
cmp
movl
movsb
ljmp
add
pushf
xor
aam
add
loop
faddl
std
inc
js
and
sbb
dec
sbb
test
add
arpl
pop
ja
setge
inc
ret
sbb
imul
scas
jmp
add
addb
pop
fsubl
pop
cmpsl
ljmp
int3
mov
fstps
add
or
pushf
hlt
out
jne
push
jmp
loopne
xor
fsubl
add
das
hlt
or
cs
cmp
add
sbb
ja
sahf
sbbb
outsb
inc
sti
add
insl
pop
call
inc
popf
inc
les
lea
push
mov
clc
sbb
mov
call
xchg
sarb
adc
inc
mov
sub
roll
lcall
sub
or
sbb
inc
mov
outsl
add
stos
lods
test
cmp
push
lods
add
add
push
lods
add
sbb
add
jge
fists
stos
inc
fiaddl
push
aam
and
push
or
je
add
imul
jl
push
dec
movsb
push
jmp
jne
jle
add
fdivrs
aam
incb
ret
inc
jne
sarb
in
fwait
bnd
out
mov
cli
stos
movsl
add
fstl
mov
out
xor
add
jnp
xchg
cmpsl
adc
push
popa
or
in
and
loopne
leave
inc
push
add
dec
xchg
in
pop
rolb
adc
adc
mov
and
insb
loope
jno
fstps
fnsave
mov
loopne
push
movsl
jp
or
xchg
test
rorb
add
mov
call
mov
mov
cmp
arpl
dec
push
into
xor
insl
xchg
and
cltd
fldl
push
or
add
sbb
and
out
mov
jnp
push
xlat
sub
add
aad
pop
test
shrb
pusha
adc
sbb
mov
leave
in
loopne
int3
push
fistps
pop
std
push
ds
push
xchg
adc
jo
cltd
or
add
sub
hlt
cmp
pop
jg
enter
jne
push
add
push
shrl
add
sahf
pop
adc
nop
add
cltd
xchg
jg
rcll
add
pop
enter
jmp
sbb
ja
call
lahf
xor
push
int3
add
pop
int3
mov
pop
dec
movd
pop
mov
inc
add
sbb
mov
sub
cmp
fnsave
and
in
cld
lock
inc
jbe
arpl
movsl
sbb
push
sub
and
popa
push
rolb
xlat
incb
ja
lds
add
mov
pop
cwtl
adc
xchg
push
dec
or
pushf
sub
pop
je
mov
xor
orb
mov
pop
scas
pop
ss
adc
push
adc
sbb
jae
mov
add
dec
cmp
adc
add
add
mov
icebp
mov
call
xchg
lods
pop
scas
cmp
add
or
sbb
sbb
into
pop
sti
rolb
and
arpl
pop
mov
in
cmp
incl
cmp
cmpsb
enter
popa
aas
dec
dec
rorl
add
movsb
mov
outsb
pop
in
xor
inc
int3
mov
mov
lcall
add
dec
stos
lret
call
cmpsb
xor
andb
icebp
mov
pusha
lcall
test
shll
adc
sbb
push
arpl
aaa
ljmp
jmp
fdivl
mov
jno
xor
imul
jnp
xor
push
sbb
and
xor
adc
inc
pop
push
shrl
js
dec
mov
xchg
mov
dec
shrb
mov
movsb
add
push
fldl
sub
pop
dec
addr16
lods
scas
mov
sub
movl
jmp
cmpb
nop
pop
add
sbb
jae
jmp
add
rolb
xchg
subb
sbb
and
lods
mov
sbb
jecxz
push
jg
push
add
fwait
xadd
cmpsb
aam
pop
add
xlat
jb
add
loopne
pop
add
ret
xchg
stos
adc
xchg
imul
jno
je
jae
add
add
or
hlt
addb
push
or
mov
pop
mov
jecxz
sar
dec
push
fisubrs
mov
adc
jmp
push
jb
or
pusha
mov
push
add
xchg
imul
shll
test
jno
in
push
std
push
andl
cli
popa
xchg
cmp
pop
xor
add
scas
les
sbb
ss
movsb
sub
jg
addl
enter
add
stc
outsl
lahf
add
mov
outsb
fisttps
mov
push
dec
popa
sahf
js
mov
mov
lret
lds
xor
daa
test
rorb
sub
and
jne
push
dec
fcoms
aas
addr16
mov
notb
pop
gs
lods
push
leave
ljmp
into
dec
dec
rorb
push
fwait
leave
and
shl
movsl
pop
sub
jle
stos
add
loopne
xchg
fidivrs
mov
push
mov
add
scas
cmovo
out
add
ds
shrb
mov
in
add
push
jne
rol
in
sbb
dec
out
testl
inc
aas
mov
add
cld
or
mov
test
or
scas
inc
test
into
fiaddl
les
push
popl
jl
or
mov
jl
sbb
repnz
mov
xchg
and
pop
add
lock
pop
sbb
sbb
jb
xor
out
push
fwait
loopne
add
das
cwtl
mov
lret
sbb
addr16
js
add
inc
jmp
jl
xchg
xor
cwtl
mov
imul
mov
ret
loopne
sbb
inc
cmp
js
jns
popa
sbb
mov
add
mov
xor
sbbl
jg
mov
inc
mov
mov
loopne
xchg
adc
add
cmpsb
cmp
dec
int3
addr16
js
orb
cmp
add
flds
lret
add
mov
jl
ljmp
pop
ret
jb
inc
inc
fwait
push
add
sbb
mov
addr16
sub
mov
pop
and
sbb
and
add
dec
mov
cmp
aam
ja
and
and
mov
jne
mov
xor
movsl
cmp
cmp
or
jl
out
and
pop
add
in
das
subb
test
mov
sbb
les
enter
add
je
mov
push
lret
xchg
pop
adc
sub
xchg
outsb
addl
add
popf
push
dec
cmpsl
mov
sbb
mov
hlt
cwtl
or
dec
add
aad
sbb
sbb
or
dec
or
pop
mov
idivb
fisubrl
and
add
mov
jno
add
sahf
dec
cmp
idivb
orl
lea
add
imul
sbb
mov
shl
mov
dec
or
add
push
loope
pop
xor
movsl
les
xchg
outsl
push
inc
enter
mov
sbb
mov
idivl
dec
push
fldl
inc
mov
push
inc
hlt
pop
push
xchg
lcall
inc
mov
sahf
pop
push
adc
call
jmp
scas
mov
sar
push
add
dec
xor
or
fucomip
insb
add
jmp
mov
dec
add
addl
out
lea
and
fnstsw
sub
xor
testb
or
dec
dec
icebp
dec
xor
sub
mov
jge
jp
inc
push
xchg
and
andb
xor
or
mov
rcl
outsb
mov
stos
cli
jbe
add
pop
ret
aam
inc
push
inc
add
pop
push
aad
repz
sub
lods
mov
mov
dec
mov
movsl
outsl
xchg
nop
adc
arpl
mov
mov
mov
mov
fcomps
repnz
lcall
nop
cmp
movsb
sarb
testb
mov
or
xchg
mov
sbb
scas
push
jmp
xchg
pop
icebp
push
gs
nop
and
pop
rol
push
fldenv
inc
xor
inc
or
addb
sbb
jno
sbb
pop
jmpw
sub
sub
pop
mov
jmp
gs
lock
xor
and
jbe
test
aam
or
add
xor
adc
mov
jmp
add
push
push
lods
adc
andb
notb
inc
jmp
sub
pop
popa
dec
in
cwtl
push
add
sub
clc
inc
push
inc
mov
dec
and
xor
lret
push
pushf
cmp
ret
push
adc
push
fwait
inc
sub
lcall
scas
pop
sbb
sub
repz
pushf
adcl
add
mov
jl
push
push
ja
cmpsb
push
xchg
or
inc
inc
and
mov
jl
and
jbe
enter
and
and
jle
push
packsswb
imul
inc
add
push
dec
jmp
and
and
add
fisubs
push
aad
adc
int3
add
std
and
out
in
vmread
inc
and
fmull
dec
aaa
mov
xchg
add
aad
adc
repnz
and
jo
mov
bound
imulb
jmp
push
sub
shlb
fimull
stos
and
mov
loope
or
aam
stc
movsl
subl
pop
or
subl
cmp
std
pop
mov
enter
inc
or
pop
nop
in
inc
mov
repnz
out
or
dec
push
adc
out
sarb
psraw
xchg
xor
movsb
or
add
adc
mov
aas
add
in
pop
hlt
sbb
push
lcall
sbb
iret
js
test
add
popa
and
xor
adc
nop
mov
add
inc
push
mov
ret
jg
sahf
jge
push
mov
dec
cwtl
sbb
push
xchg
inc
and
es
addr16
cmp
mov
xor
push
add
int
out
cltd
ja
mov
or
mov
mov
push
stc
fadds
add
sub
adc
inc
je
lds
repz
into
xor
xor
dec
ret
mov
and
mov
shr
dec
js
shl
enter
and
aam
fwait
inc
push
clc
inc
add
cmc
js
int
adc
jbe
inc
pop
test
xchg
xchg
mov
ffree
push
loop
es
hlt
cmp
mov
and
lods
and
xchg
jmp
add
imul
ljmp
xor
adc
mov
and
aas
inc
fcoml
adc
mov
je
push
enter
fdivrs
sbb
mov
shl
dec
add
mov
add
lods
sahf
mov
add
or
sarb
or
mov
and
dec
mov
fiadds
rcll
test
lret
or
sbb
mov
loop
add
cmpsb
sub
inc
lcall
cmp
out
cmpsb
add
rorl
pushf
nop
cmp
add
int3
inc
std
pop
xor
or
dec
insl
xor
add
repnz
push
mov
popf
jge
repz
sbb
and
je
cmp
add
cmp
and
add
jl
cmc
push
or
inc
int3
mov
jnp
pop
insl
or
add
jmp
sbb
fsubrs
cld
push
mov
cmc
pop
rcrb
clc
mov
into
loope
mov
mov
mov
push
push
pop
in
nop
push
fwait
pop
loopne
leave
arpl
lret
push
addl
cmp
rclb
adc
repnz
insl
pop
pop
ss
xchg
addl
add
mov
std
nop
testl
add
dec
add
push
and
pop
push
sub
push
int
hlt
dec
push
mov
in
sahf
sbbb
in
add
jnp
mov
mov
add
sbb
pushf
pop
add
add
out
xchg
mov
xchg
sub
add
stos
add
pusha
into
mov
cmpsb
lcall
xchg
idiv
add
ljmp
test
sbb
add
pushf
out
icebp
mov
add
ret
cmp
icebp
pop
fs
pusha
or
or
push
jmp
mov
test
fcom
push
or
or
add
fs
adc
fcoml
faddp
aaa
mov
addr16
add
pop
iret
clc
xor
adc
push
dec
test
sub
fadd
adc
iret
shrb
jns
inc
jle
add
mov
testb
push
inc
pop
dec
add
scas
xchg
addb
jno
push
aaa
das
add
xchg
inc
cmp
inc
hlt
push
divb
and
sti
mov
icebp
lahf
stos
sbb
js,pt
xchg
setbe
add
scas
loop
xor
xchg
or
test
sti
lret
dec
mov
sbb
aad
rol
pusha
scas
sub
pop
adc
jl
or
lock
cmpsl
jmp
icebp
dec
aad
hlt
add
loopne
cmp
pop
adc
sub
fcmovb
inc
std
ret
push
repnz
add
out
mov
scas
sbb
sub
fstp
pop
clc
dec
repnz
and
iret
lods
mov
ljmp
fildll
xchg
pop
test
pop
cwtl
adc
testl
add
mov
testb
sbb
loope
adc
loop
and
and
aaa
adc
stc
jnp
xchg
push
sub
push
adc
jns
test
sub
jb
sbb
add
xchg
jle
xchg
in
fiaddl
sarb
sub
cmpb
jp
sti
pusha
divl
js
jns
push
aas
test
add
lock
lods
add
pmuludq
mov
mov
insb
inc
rorb
loope
daa
imul
fstl
jae
fwait
repnz
add
mov
and
add
mov
lret
rorl
je
add
dec
inc
xor
cmp
pop
scas
mov
out
mov
add
sub
add
jo
movsb
leave
mov
lahf
push
imul
push
or
jp
into
inc
mov
push
pop
jge
icebp
or
arpl
cmp
jne
mov
sub
loopne
out
add
adc
sub
mov
mov
aam
lret
faddl
pop
push
sbb
popf
inc
add
pop
testb
rorb
add
jo
subl
jp
dec
add
add
loopne
pop
jo
add
jno
adcb
in
popa
leave
stc
add
xor
nop
add
dec
sbb
inc
add
call
add
inc
pop
adc
addl
fcmove
in
cmc
sahf
pop
cmp
mov
add
xchg
or
jo
add
aaa
push
xor
sbb
jg
add
cli
jge
lods
inc
movl
and
roll
scas
in
inc
sar
insb
add
loope
dec
add
in
lcall
mov
adc
test
jbe
imul
sbb
pop
mov
inc
fildl
daa
push
out
shrb
stos
sbb
adc
lret
pop
add
bound
insl
decl
test
je
add
jp
push
aaa
xchg
aas
add
and
mov
xchg
add
push
lock
push
test
iret
sbb
cwtl
sub
mov
push
sahf
add
fmull
add
jmp
mov
dec
push
sbbb
loope
shrb
jnp
add
aad
cld
repz
popf
test
stc
pop
xor
sbb
add
fdivs
das
repz
add
or
jge
test
mov
loope
push
add
jb
cmp
pop
or
dec
mov
aas
jmp
pop
add
jbe
inc
bswap
out
cwtl
mov
shlb
cmp
mov
test
jnp
add
xchg
sbbb
mov
mov
mov
cmp
add
ja
inc
sub
fstl
xor
and
sub
add
std
es
fwait
popf
add
mov
inc
cmp
sbb
dec
xchg
xlat
sahf
sbb
insb
mov
cmp
fwait
adc
gs
mov
or
push
inc
add
jns
or
call
les
xor
pop
inc
mov
xchg
inc
ret
mov
mov
into
cmpsl
cltd
inc
or
scas
or
pusha
outsb
and
push
jg
scas
add
cmp
lock
test
adc
cmp
add
add
xor
outsl
pop
dec
mov
add
lods
jae
inc
or
cmp
add
adc
flds
mov
test
sub
sbb
add
fmuls
jae
sub
add
jge
insl
or
or
inc
icebp
icebp
call
mov
fs
add
rcrb
mov
mov
lock
fidivl
or
repnz
shlb
pop
sub
sti
cmp
pop
imul
shll
jnp
push
out
imul
jmp
dec
xor
fnstenv
add
dec
add
insl
ds
push
cmp
aas
incb
xchg
movsl
xchg
mov
or
int
mov
push
cmpsb
fidivrl
ja
notb
stc
nop
subl
xor
or
adc
xchg
gs
leave
adc
mov
jp
add
add
loopne
lret
adc
sbb
je
add
testb
sti
xchg
pop
mov
cmp
cmpb
fildl
adc
int
leave
and
cld
add
pop
std
inc
mov
fstp
fwait
cmpb
lods
lcall
pop
adc
lds
jecxz
sbb
cmp
adc
dec
dec
and
mov
rolb
shlb
nop
sbb
pcmpeqb
aas
fidivs
and
mov
cmp
sbb
inc
ja
pushf
loopne
mov
add
and
and
lea
dec
subl
fs
mov
sarl
add
jmp
lock
aam
push
insb
jg
sub
add
insl
inc
fiaddl
cwtl
jo
adc
sub
dec
lods
inc
pop
scas
push
aam
xchg
adc
mov
pop
add
and
inc
or
add
mov
add
rorl
add
or
shrl
fisubl
subb
in
ja
sahf
add
xchg
sbb
add
pop
sub
xor
pop
pop
test
aam
xchg
xchg
add
scas
pusha
adc
push
inc
sub
pop
pop
and
mov
out
push
cwtl
mov
out
andl
push
stos
mov
sbb
test
or
icebp
lods
add
filds
pushf
and
stos
out
add
mov
or
ja
loopne
mov
aad
dec
inc
add
sarb
sbb
enter
ret
push
test
int
fisttpl
and
cmpsb
pop
jl
js
dec
shlb
pop
mov
stc
cmp
aad
sbbb
lret
jmp
pusha
roll
sbb
and
push
cs
stos
and
jl
dec
mov
add
sbbb
cmp
xchg
push
int
sbb
pop
aas
mov
loope
ja
stc
push
jne,pt
pop
sub
pop
dec
add
mov
add
loope
jne,pt
addb
aas
mov
testb
out
out
dec
adc
mov
pop
imul
arpl
mov
aad
and
dec
sbb
xor
rcrb
sti
shr
lock
clc
mov
mov
inc
in
mov
add
cmpsb
mov
nop
add
inc
outsl
cmp
repz
push
fdivl
xor
mov
sub
leave
call
icebp
repnz
add
aaa
add
stos
enter
roll
xor
into
push
mov
jl
pop
ljmp
and
add
enter
dec
add
xor
adc
rcrl
lcall
nop
jg
cli
xlat
testb
xchg
mov
lret
add
xchg
inc
push
mov
outsl
add
adc
xchg
push
xor
loope
inc
pop
cmpsb
inc
ljmp
xchg
sub
lahf
jle
add
xchg
inc
pop
pop
addr16
push
push
push
sbb
stos
adc
pop
add
loop
mov
das
sbb
or
fimull
fwait
mov
pop
int
addb
xorb
call
xchg
add
popl
jae
rcrl
cmp
rolb
mov
adc
inc
out
jl
rcrb
addl
test
push
mov
cmp
mov
les
cmpsl
dec
mov
add
dec
dec
add
aas
xchg
rclb
adc
rcll
js
cmp
mov
ret
dec
fiaddl
jno
rorb
add
ret
xor
add
je
arpl
lods
pop
cmp
cwtl
pushf
xor
xor
jne
inc
lret
in
dec
cltd
data16
jecxz
add
sahf
xorl
out
mov
enter
and
cli
pop
pop
cmpsl
mov
int
lds
add
test
add
dec
xchg
std
mov
fidivrl
fs
ret
or
mov
xor
pop
cs
or
sub
cmc
cmp
adc
xorl
push
mov
test
sub
nop
mov
jb
cmp
cs
jo
cmp
fiaddl
fnsave
mov
xchg
mov
loopne
push
add
scas
push
pop
hlt
arpl
or
mov
hlt
xor
mov
addr16
in
add
fmuls
mov
jae
add
jp
lods
xor
push
aaa
pop
mov
movsb
mov
xchg
and
cmp
sub
mov
out
adc
xchg
outsl
pop
rorb
dec
inc
inc
add
repnz
mov
lock
gs
xor
adc
lldt
out
add
ja
add
mov
sub
inc
dec
sub
jge
xor
aaa
addl
cmp
mov
add
lret
std
enter
pushf
or
movsl
fisubl
mov
cmp
pop
push
out
add
inc
push
cmc
imul
adcb
push
add
mov
and
popl
xor
add
ja
xor
movsl
aad
add
cmp
fstl
call
adc
lds
add
push
aaa
add
push
scas
rorl
push
cli
sub
xchg
jge
sub
push
jo
in
xor
add
add
fs
cmp
push
add
test
icebp
xor
scas
repnz
add
push
call
pop
imul
jmp
into
or
jae
sub
add
xchg
xor
jo
sahf
addb
xor
gs
add
fistps
pop
movsl
sbb
cwtl
sbb
pusha
push
sbb
add
fs
loope
movsb
mov
out
xchg
add
and
int
nop
mov
out
dec
inc
mov
sub
sbb
por
and
adc
sbb
cmp
add
loope
sbb
mov
adc
ret
ror
pop
dec
add
xor
lahf
adc
xchg
add
xor
pusha
addl
int
repz
pop
mov
add
jge
sub
push
das
add
add
aad
int3
xchg
fdivrs
cmpsb
into
pop
cs
mov
add
add
lahf
inc
int
hlt
mov
push
cltd
add
jmp
pop
out
cmp
add
ljmp
push
filds
jmp
int3
nop
cmp
add
lret
mov
pop
dec
add
pop
lcall
inc
and
mov
xor
jp
dec
mov
push
adcb
pop
and
xor
das
cmpsb
pop
out
dec
add
cld
add
ret
jb
jnp
or
movb
pop
adc
mov
add
das
aam
xchg
add
adc
insl
jno
jp
push
and
cmp
pusha
lret
dec
lods
mov
imul
pop
push
jb
fstl
pop
aam
add
xchg
add
jecxz
addb
push
stos
add
fiaddl
jle
pop
enter
sub
and
sbb
test
shrl
push
pop
rorl
cs
add
lods
mov
jno
loop
cmpsb
sbb
test
add
ljmp
add
loope
lea
lahf
xchg
loop
test
add
xor
lret
or
outsl
insb
mov
pop
add
xchg
sub
scas
inc
aas
pop
xor
lcall
add
mov
in
imul
arpl
enter
xchg
rorb
dec
pop
in
dec
aad
sbb
sub
scas
cld
xchg
add
pushf
pop
push
js
xor
mov
xor
mov
jp
cmp
cld
sub
movsl
insb
into
cmpsl
dec
add
inc
repnz
xchg
jmp
or
icebp
jecxz
add
xor
mov
sub
lock
or
mov
or
mov
add
outsb
push
mov
xchg
sbb
sbb
imul
mov
fdivs
lahf
fstpt
cwtl
inc
jb
adc
mov
xchg
xchg
add
fs
std
mov
add
lret
inc
inc
sbb
jge
das
adc
add
inc
test
add
subb
pusha
push
shll
adc
jns
jbe
sbb
fildll
sar
arpl
mov
cmp
cmpsb
aam
cmc
add
into
je
dec
or
push
adc
add
inc
sbb
imul
loopne
mov
xchg
cmp
sub
fadds
jle,pn
add
xchg
mul
mov
repnz
mov
in
pop
cmc
or
fdivs
adc
ljmp
inc
add
and
or
arpl
hlt
cwtl
gs
roll
cltd
jne
sti
ss
aaa
push
mov
rolb
int
sub
fdivrl
inc
iret
sub
call
mov
enter
mov
jmp
add
cld
xchg
push
scas
lock
mov
daa
cmp
filds
pop
in
popf
lock
sbb
outsl
sbbl
jle
dec
pop
cmc
lahf
fsubrl
pop
jl
jae
xor
adc
ja
test
inc
or
mov
inc
mov
or
mov
dec
scas
dec
jnp
and
sub
pop
fistps
sbb
add
rcrb
js
or
sub
cmpsl
mov
daa
add
push
jo
scas
pop
inc
and
repnz
fcmove
dec
data16
sbb
ret
out
test
sbb
add
mov
testb
mov
mov
and
xor
add
aas
xlat
xor
cwtl
add
jp
cmp
arpl
addl
adc
mov
in
aas
adc
icebp
xchg
dec
add
fildll
sub
add
pushf
arpl
pop
add
dec
mov
js
add
pop
je
dec
aaa
fmuls
sahf
out
sbb
loope
aam
nop
pop
fdivp
pop
add
pop
mov
in
lcall
add
imul
pop
push
dec
adc
jle
mov
add
stos
lods
inc
mov
test
add
lcall
out
jmp
out
adc
push
jb
jl
pushf
sarb
fdivs
stos
push
cwtl
push
cmp
add
bnd
add
call
xor
inc
add
and
add
jnp
js
add
xorb
and
arpl
sub
mov
mov
psubusw
sub
cwtl
mov
jle
push
lahf
add
dec
add
cmpsl
cmpsb
cmpb
or
pop
hlt
in
clc
pop
jecxz
jo
sbb
aas
sbb
and
mulb
add
add
and
rdtsc
lahf
pusha
loop
in
imul
xlat
outsb
inc
and
and
out
cmp
movsl
mov
dec
mov
add
mov
adc
mov
hlt
in
add
mov
ret
cltd
xchg
sbb
in
mov
jno
add
adc
inc
add
lods
test
add
call
fildl
inc
push
mov
repnz
dec
sbb
mov
mov
out
mulb
sub
out
aaa
inc
or
xchg
add
fs
jg
add
stos
lret
push
dec
xchg
rolb
adc
in
rcrl
mov
sbb
ss
add
mov
rorb
rcr
pop
pop
add
addb
rorl
inc
xorb
pminub
dec
dec
adc
sub
fmull
pop
and
push
lock
ljmp
dec
jo
xor
sbb
cmc
jnp
or
lds
daa
push
ror
clc
push
lock
cmpsb
cmp
mov
lcall
cmp
pop
pop
inc
add
stos
outsb
xchg
jmp
jle
jbe
rolb
jecxz
push
or
pop
fcmovnb
add
mov
mull
and
and
or
pop
lcall
addb
mov
out
mov
add
inc
js
mov
in
mov
sbb
notl
divl
jle
lock
fnstsw
negb
add
dec
cli
jbe
repz
pop
fbstp
mov
inc
shl
lcall
and
sbb
adc
data16
fisttps
and
jmp
inc
xor
and
mov
sbb
push
rcrb
ret
mov
fnstsw
and
sarb
push
ror
lret
mov
sbb
fnsave
lahf
hlt
leave
inc
dec
ja
and
jmp
jg
rorb
pop
call
jo
jmp
mov
pop
ljmp
xchg
divl
cmp
pop
inc
call
nop
rolb
mov
cmpsb
add
inc
adc
paddb
ljmp
push
popf
inc
add
mov
mov
sbb
stc
push
lea
repnz
jecxz
scas
in
lds
test
pop
jl
adc
dec
mov
mov
sub
cmp
push
scas
ret
rclb
stc
fs
add
pop
push
ljmp
cmp
adc
pop
imul
pusha
sub
mov
pop
pop
sti
cmp
mov
pop
dec
pop
sub
rcrl
aas
jmp
push
jbe
xlat
dec
xchg
mov
add
in
or
out
roll
fdivrl
jge
push
jnp
mov
pusha
ljmp
push
add
pushf
mov
sti
cmp
adc
add
test
push
pop
dec
jle,pn
jg
adc
xor
adc
xchg
jne
aam
mov
pusha
ds
mov
fisttps
rcrb
fwait
in
push
hlt
les
icebp
divb
loopne
push
dec
add
iret
mov
cli
pop
push
push
mov
out
or
sbb
cmpsl
shrl
syscall
pop
pusha
inc
ss
mov
mov
xor
daa
fistpl
mov
incb
add
lahf
in
inc
mov
mov
aas
cld
outsl
leave
and
mov
add
pop
push
and
dec
cmp
add
in
mov
pop
inc
hlt
xor
mov
or
lea
xor
add
add
xor
orb
and
jbe
mov
add
push
ljmp
add
adc
out
shl
test
shlb
pop
mov
sbb
jbe
popf
cld
pop
add
adc
and
cmp
add
test
orb
or
fcom
push
notb
out
clc
mov
cmp
lea
cmp
and
pop
add
mov
add
inc
ds
and
jb
mov
shlb
fldl
jecxz
add
aas
inc
lods
add
push
push
pop
in
pushw
int3
push
es
orb
pop
fimuls
add
or
icebp
leave
jecxz
rcrb
fnstenv
out
mov
test
lahf
adc
sbb
push
nop
xor
adc
add
or
jge
dec
in
adc
dec
dec
mov
je
minps
jg
pusha
scas
lods
popa
pop
add
fistps
rorb
add
pop
sub
dec
ret
add
data16
xchg
pushf
cltd
add
dec
fists
add
mov
push
ds
lcall
mov
inc
sub
sarl
add
in
lret
in
add
xor
jmp
push
out
cmp
mov
mov
in
adc
adc
rclb
inc
add
sbb
xchg
fnstcw
xchg
add
je
cmp
push
popf
cmpsb
jns
mov
lods
lahf
cli
sbb
imul
outsb
sub
jae
loopne
loopne
cwtl
cmp
cmp
xchg
mov
lock
sbb
test
sahf
mov
nop
inc
repz
or
pushf
mov
das
sbb
and
dec
jge
add
stc
stos
xlat
js
mov
dec
xor
add
fwait
push
stc
xor
push
je
packuswb
push
cltd
add
cmp
or
stos
lea
add
sub
cmp
call
sub
pop
pop
fwait
mov
repz
in
xor
pop
in
xlat
xorb
or
push
pop
aad
loopne
mov
mov
add
jo
sahf
add
repz
aam
in
pop
mov
adc
and
add
sub
out
add
and
mov
dec
push
sub
xchg
cmpsl
mov
xchg
pop
push
cmp
movsl
mov
adc
pusha
ljmp
inc
xchg
add
cmp
dec
scas
adc
inc
pop
mov
add
sahf
icebp
pop
add
mov
push
cmpsl
inc
jecxz
dec
or
int
cmpsb
add
pop
das
dec
xlat
enter
add
andl
add
ljmp
inc
das
push
sub
mov
std
sub
ret
insl
jb
jg
add
lret
add
adcb
add
sbb
push
xor
add
inc
lret
leave
sbb
testl
adc
gs
cld
mov
inc
jecxz
jg
xchg
in
repnz
jmp
pop
rcll
inc
rcr
pop
add
pop
pop
sbb
push
pop
sbbl
fs
andl
jb
ret
rcrb
inc
lret
movsb
push
add
out
movsl
popf
lock
daa
and
fsubrl
adcb
adc
jno
xor
jb
add
pop
out
add
sub
add
pop
xor
mov
adc
cltd
adc
ja
test
and
mov
pop
mov
xlat
pop
cmp
insl
xchg
lock
int
fwait
lds
inc
jl
in
pop
push
and
sub
xchg
fs
add
dec
loopne
lea
add
add
call
and
lock
push
dec
cld
aaa
xor
fwait
mov
inc
sarb
adc
out
and
sub
fsubrs
leave
pop
repz
xchg
orl
cltd
shlb
pusha
and
xor
adcb
inc
mov
mov
or
mov
push
jae
add
mov
es
loopne
inc
out
cwtl
or
lds
fidivl
lahf
push
add
loop
aaa
outsl
adc
sti
lods
inc
mov
outsb
add
sub
mulb
aaa
loopne
sbb
push
clc
rolb
add
out
add
ljmp
lcall
xchg
in
rorb
ss
dec
mov
gs
sti
ja
add
cmc
loope
add
pop
xor
pop
enter
cli
mov
cmpsb
mov
int3
jge
adcl
mov
hlt
jbe
jmp
add
push
adc
fisubl
movsl
addb
clc
cld
bound
in
push
mov
pop
das
pop
std
aam
add
flds
dec
and
cli
adc
add
push
mov
bound
pop
movsl
mov
pop
icebp
popf
sbb
mov
or
fidivrl
fildll
xchg
pop
negl
pop
pusha
scas
popf
femms
les
pop
roll
add
add
xor
add
mov
cs
push
call
mov
add
xor
jo
in
xor
pushf
dec
pop
add
mov
xor
in
imul
xchg
sarb
or
cltd
cmp
sub
jnp
pop
inc
sub
inc
xorb
idiv
ss
dec
sbb
and
lret
inc
ret
xchg
jns
sbb
push
lods
mov
mov
xor
loop
xorl
cmpsb
gs
add
testb
sub
xchg
cmp
add
movsl
dec
sub
fwait
addr16
push
adc
pop
mov
sub
sbb
negb
pusha
lahf
mov
pop
enter
mov
jo
push
notl
sub
jno
sbb
inc
add
movsb
incl
pop
pop
push
add
add
sbb
sub
add
jns
push
lds
mov
add
fmuls
rcrl
mov
in
test
cwtl
adcl
add
in
push
out
add
cld
adc
popa
push
pusha
dec
cwtl
push
cmpl
push
sub
cmp
pop
mov
add
scas
shrb
add
ss
int
add
sub
cmp
fldl
and
add
insb
add
dec
shll
add
jmp
mov
adc
jmp
fstpl
jge
jnp
dec
cmpsb
inc
lds
sub
sbb
jns
popa
jo
hlt
add
nop
inc
es
pshufw
mov
lock
adc
mov
adc
push
cmpsl
or
leave
scas
orb
out
cmpxchg
dec
and
ret
add
xchg
push
or
xchg
pushf
xor
sbb
dec
xor
testl
or
clc
sbb
xchg
insl
pusha
xor
jmp
popa
lock
lret
and
pop
scas
jecxz
add
or
in
add
sbb
inc
pushf
mov
imul
xchg
xchg
mov
add
jae
jl
mov
jno
add
push
cmp
inc
test
dec
push
lds
mov
mov
push
dec
iret
aas
add
xor
mov
mov
repz
data16
outsl
fdivrl
add
in
inc
scas
mov
shlb
add
mov
and
fildl
pop
mov
lret
xchg
jae
icebp
cmp
sbb
not
xchg
mov
add
pop
mov
pop
adc
in
rcrl
and
add
ljmp
xlat
push
mov
dec
xor
gs
adcb
lock
cmp
add
mov
jne
add
in
mov
add
je
iret
dec
inc
shlb
add
sub
psllq
fists
test
or
loop
cmp
hlt
or
test
push
pop
adc
in
jl
and
push
lret
mov
lock
pop
pusha
mov
icebp
call
pop
or
fs
cs
mov
insl
push
push
and
adc
inc
push
inc
popf
rolb
pop
stc
mov
add
xlat
enter
int
dec
inc
ret
push
insb
add
cmp
mov
ds
subb
sub
cwtl
jno
add
lret
inc
subb
movsl
insb
nop
jns
jmp
in
sub
adc
addr16
ljmp
add
xchg
jb
and
popl
int3
dec
inc
stos
lcall
dec
popf
cli
aam
xorl
push
insb
lods
xchg
mov
xchg
xor
mov
in
sbb
mov
add
adc
out
or
mov
sbbb
rcrb
daa
add
fsts
gs
lea
pop
clc
inc
jb
pop
mov
adc
add
imul
mov
popf
add
pop
adc
dec
fwait
add
sbb
jg
int
loopne
xchg
in
push
mov
fstps
or
cmp
je
add
loopne
and
add
sbb
lock
add
outsl
sub
mov
cmpsl
bound
jbe
and
test
sub
in
cli
fcoms
dec
mov
lcall
bnd
mov
add
movsl
push
scas
jmp
jbe
add
pop
in
outsl
adc
std
imul
pop
adc
add
xchg
pushf
or
mov
movl
fld1
bound
add
lahf
rolb
pop
pop
mov
push
sahf
push
add
stc
aam
andb
add
inc
push
jle
out
mov
pushf
shl
adc
cmc
add
sub
pushl
sub
add
mov
out
xchg
shrl
ret
in
clc
add
push
cmc
xchg
mov
in
outsl
cmp
add
test
insb
outsl
push
dec
pop
mov
push
in
add
sbb
jg
xchg
fs
popf
dec
out
ds
popa
subb
das
push
xor
out
pop
add
mov
ret
dec
push
sbb
imul
or
cmp
rcrl
shrb
test
dec
sub
mov
mov
shrl
add
daa
xor
roll
jb
mov
add
sbb
mov
pop
icebp
mov
mov
aam
add
inc
popf
push
ds
insl
add
dec
push
aas
push
push
enter
mov
lret
lcall
lcall
xchg
dec
in
fbld
ljmp
sbb
sahf
sbb
add
xchg
inc
shr
ret
add
lret
fs
stos
sbb
addl
xor
stos
mov
dec
mov
push
pop
xor
push
loopne
fmull
xor
cmp
add
xlat
mov
push
jp
push
cmp
add
push
scas
clc
lock
ljmp
and
or
and
pusha
adcb
je
dec
ljmp
sub
lods
and
pop
je
adc
pop
in
pushf
sbbb
inc
scas
dec
int
ja
incb
lock
addl
test
add
rorl
add
add
dec
xchg
sarb
es
fmuls
outsl
xchg
adc
push
cmpsb
aad
ljmp
xchg
or
enter
outsb
ja
mov
insl
scas
add
pusha
in
leave
cmpb
sbb
out
jle
adc
pusha
incl
sbb
cmp
adc
push
stc
add
inc
xchg
int
test
pop
repnz
dec
mov
add
fs
pop
and
xlat
ss
repz
add
pop
add
mov
sub
push
mov
add
sub
xchg
mov
and
lea
push
jnp
push
lret
enter
popf
mov
fwait
add
ret
jae
insl
out
repz
js
movsb
dec
leave
mov
mov
xchg
add
pop
inc
addb
sbb
mul
inc
or
mov
pop
and
pop
es
inc
dec
add
out
adc
xor
and
lret
rcrb
jmp
jl
in
sarl
push
mov
popf
jbe
fisubrl
mov
scas
mov
add
jp
jle
loop
mov
pushf
cmpsb
inc
inc
std
or
and
dec
push
mov
jns
mov
repz
addr16
inc
dec
add
sbb
add
je
cmp
sub
cmp
or
ljmp
insl
adc
add
mov
xchg
stos
dec
mov
mov
pushf
mov
outsl
hlt
adcb
in
js
push
ret
mov
test
nop
ss
fnstcw
fldl
sbb
jp
jmp
andb
enter
roll
push
cs
pop
inc
in
add
pop
add
sbb
imul
sbb
jge
xchg
out
jnp
int
lock
inc
cmp
add
add
xor
out
jns
dec
lcall
in
dec
mov
xchg
test
sub
xchg
lahf
cwtl
or
jo
addr16
pop
push
jnp
dec
or
aaa
enter
add
and
mov
rolb
lret
mov
push
test
mov
add
jge
repz
cmpsl
loopne
add
mov
pop
add
cmp
test
xchg
in
add
ds
add
loopne
lahf
add
or
dec
in
jl
fldenv
mov
add
and
aad
shrb
das
pop
mov
add
mov
rolb
inc
pop
fdivrl
sar
push
jae
mov
and
bound
or
add
mulb
add
les
jg
jp
xor
and
bound
sbb
sahf
in
adc
and
lcall
es
pop
std
outsb
push
pusha
or
cmp
jae
mov
outsl
cs
pop
push
mov
mov
das
ss
xchg
add
inc
out
lods
gs
add
imul
mov
and
push
add
jp
xor
mov
daa
lret
fsubr
sub
dec
xchg
and
jle
pusha
int
icebp
xchg
gs
pop
mov
jmp
mov
add
jmp
sub
xor
xor
movq
mov
sbb
or
lods
data16
mov
ljmp
xor
push
out
push
fnstcw
xchg
inc
mov
push
pop
ja
sub
adc
xchg
push
cmp
xchg
into
sarl
mov
dec
push
add
add
push
pusha
inc
push
adcb
mov
sub
push
add
add
dec
xor
adc
and
clc
divl
lcall
cmp
xchg
loope
mov
divl
add
add
add
mov
test
xorb
jnp
add
out
sar
push
sub
cmp
push
xor
movsl
inc
dec
sub
ret
dec
xchg
fidivrl
loopne
cmc
add
mov
add
push
adc
mov
xlat
unpckhps
mov
lea
push
mov
adc
push
sbb
fsubs
xchg
adc
mov
pop
add
and
xor
add
fs
xchg
rolb
jp
shll
or
push
add
fbld
jge
pushf
cmp
popa
flds
push
or
jno
sub
pop
mov
cmpsl
or
mov
inc
ret
add
mov
cmpsb
addl
outsl
jcxz
pop
pop
cltd
stc
push
mov
mov
pop
repz
sbbb
jg
sub
jecxz
add
loop
imul
jns
mov
mov
leave
add
cmp
or
movsb
inc
call
and
jge
add
and
insl
mov
movsb
add
loopne
aaa
xchg
push
cmpsl
and
xlat
sub
add
mov
subb
iret
incb
data16
imul
test
push
push
dec
inc
or
mov
and
fistps
jno
rcpps
or
xchg
pusha
call
test
jp
xchg
add
mov
dec
test
addb
gs
xor
fists
test
and
add
ljmp
stc
int
xlat
jb
pop
add
movsl
and
daa
mov
gs
xlat
add
pop
adc
jmp
xor
loopne
insl
sbb
and
in
stos
mov
sbb
imul
lahf
lock
sbb
add
mov
jns
add
call
jae
xor
xchg
out
test
inc
push
rcrb
int
mov
push
inc
add
add
jnp
adc
cmovnp
leave
ljmp
add
or
inc
mov
fisttps
push
aas
fidivrs
testb
insb
fwait
out
sub
add
fisubrs
mov
enter
in
adc
push
icebp
pop
sub
xor
push
dec
testb
in
add
mov
fiadds
jne
add
loop
pop
add
xor
push
xchg
mov
stc
stos
add
fs
fildll
xchg
call
lea
add
stos
test
jg
mov
inc
add
pop
add
add
mov
fmuls
or
test
stos
aam
ret
mov
rolb
inc
add
push
inc
mov
aaa
testl
cli
dec
shlb
add
lds
testl
lods
xchg
mov
adc
jae
or
and
out
decb
scas
sbb
add
loopne
lahf
push
dec
lret
sub
add
call
mov
push
or
and
pop
jns
mov
push
inc
and
cmc
subb
lea
adc
in
outsl
stc
lret
pop
jp
out
insl
mov
shrb
mov
outsl
push
lock
imul
insl
loop
or
enter
add
push
or
sbb
fiadds
insb
push
cmpsl
mov
add
adc
arpl
out
inc
add
into
add
sbb
pop
pop
ret
push
in
rolb
mov
addb
and
pushf
lahf
dec
imul
ljmp
fwait
add
clc
lcall
les
jl
dec
shrb
xor
repz
mov
dec
jmp
pop
fwait
stos
mov
sbb
sub
cmpsl
flds
push
std
pop
loopne
shrl
add
sub
adc
cmc
push
pop
inc
orl
rcll
jnp
or
loope
push
jbe
cwtl
jmp
push
mov
popa
mov
ficompl
rcll
pop
movb
orb
ret
xchg
mov
loop
push
test
xchg
adc
stos
inc
in
push
adc
idivb
iret
mov
insb
sbb
in
xchg
loopne
ret
aaa
dec
out
adc
jp
shufps
popf
or
out
or
loopne
add
and
hlt
stc
andl
jecxz
aam
jae
jp
fnstenv
cmp
inc
sub
dec
mov
mov
sbb
popa
js
sub
adc
pop
dec
loop
xchg
addl
push
or
imul
cmpb
je
cwtl
add
fnstsw
dec
add
clc
pop
sub
xchg
push
cmp
xchg
cmpsb
xchg
ret
loopne
jmp
sti
pop
add
test
stc
jne
and
pusha
aas
jb
add
mov
stos
push
fs
shrb
test
add
int3
out
xchg
jbe
or
enter
aaa
xor
adc
ret
add
inc
sbb
jmp
lret
push
popa
and
movsb
aaa
mov
ljmp
sbb
fildll
or
es
adc
imul
push
lods
out
rcrb
loope
or
testb
pop
cmpl
outsl
ret
add
dec
loopne
fisttpl
and
sub
push
dec
sbb
repz
nop
add
pop
ljmp
xchg
push
mov
shll
jle
out
xchg
aam
js
mov
push
push
add
xor
scas
xchg
fsts
sbb
add
or
mov
jle
xor
js
xor
es
cmpb
mov
sub
lds
pop
pusha
shlb
pop
mov
jae
xor
sub
pop
fimuls
cmp
and
push
frstor
sahf
add
mov
sub
in
cltd
dec
js
xor
xchg
dec
or
outsb
or
movsb
fsubrs
sbb
mov
add
mov
push
and
hlt
push
pop
dec
adc
int
pushf
add
mov
jo
mov
sahf
add
data16
fildll
pop
inc
push
rcrl
cld
lods
xor
xor
popf
call
mov
data16
rcl
or
or
push
sbb
dec
insl
enter
shrd
push
add
jl
fisttps
adc
push
loopne,pt
sbb
cmp
sub
rorb
pop
stc
jmp
pop
xchg
adc
cmpsb
lcall
sarl
test
add
cmp
inc
mov
je
sbb
test
fcompp
xchg
add
call
mov
dec
out
fstl
inc
fiadds
out
adc
repnz
lahf
mov
push
out
inc
lret
push
in
pop
rorb
add
repz
add
in
push
loopne
push
sbb
inc
sub
sub
adc
test
nop
idivl
aad
mov
jg
push
lahf
jge
pop
pop
mov
fs
ss
xor
std
add
mov
movb
cmpsl
cwtl
xchg
cmp
mov
and
scas
iret
jnp
andb
testl
sbb
adc
mov
cltd
inc
dec
ljmp
iret
pop
inc
xor
rcr
popf
mov
test
or
xor
jno
sahf
in
sbb
adc
jne
and
sub
mov
pop
add
jae
orb
add
lock
repnz
pusha
pop
test
shll
and
shrl
lds
clc
sub
mov
jno
add
arpl
ret
test
enter
pop
jns
flds
adc
pop
dec
mov
xlat
mov
cld
sahf
add
push
xor
xchg
andb
shlb
das
cmp
mov
jbe
sbb
inc
adc
and
push
sarb
add
push
stc
adc
out
cmc
or
push
cmp
lret
adc
sbb
xchg
leave
cwtl
addb
push
pop
add
sub
jmp
nop
dec
aam
adcb
mov
in
out
add
sbb
daa
jo
pop
rorl
adc
push
or
sbb
inc
jle
outsb
clc
dec
ret
out
add
add
enter
loop
mov
inc
mov
test
jbe
inc
fwait
out
rcr
add
out
das
mov
adc
mov
pushf
cmp
push
sub
or
add
pusha
lods
adc
jo
xchg
out
out
pop
add
lods
outsb
push
and
pop
rcll
in
sub
stos
push
sbb
inc
fs
insl
and
mov
mov
shrb
jnp
add
ret
mov
rorl
add
dec
test
pushf
pop
mov
ja
lods
push
neg
ss
or
mov
push
push
addr16
sbb
cmp
sub
mov
add
jno
test
cmpsl
or
addr16
and
mov
xlat
sbb
mov
jnp
enter
mov
push
add
shl
or
push
sub
xchg
jle
repz
insl
es
add
xchg
pushf
and
xchg
or
dec
cmp
lret
inc
out
and
push
jns
or
sub
inc
and
jbe
jecxz
jmp
jo
les
in
dec
xor
icebp
add
push
sbb
dec
fs
sub
and
test
mov
or
nop
sub
test
adc
pop
cmp
mov
add
and
fwait
add
lret
mov
in
xchg
loopne
divl
cmp
dec
mov
int3
test
imul
mov
add
roll
jno
adc
shlb
add
aam
out
addl
pop
stos
test
jno
hlt
loope
stos
ret
lret
jmp
xor
cld
xchg
sahf
test
rep
stos
jo
nop
add
jns
ss
inc
imul
push
adc
xchg
filds
fwait
cld
test
lods
or
lcall
mov
add
cld
mov
lock
add
mov
nop
cmp
daa
inc
mov
mov
mov
imul
mov
addl
shrl
mov
add
rorl
cmpsb
add
in
sahf
lret
leave
addb
push
dec
cmp
stos
or
sbb
push
push
test
lret
mov
add
push
test
add
mov
pusha
aam
cmpsl
push
pop
sbb
mov
mov
imul
pop
mov
add
mov
movsb
bound
test
jbe
mov
or
cmc
jle
fdivs
movsb
subb
adc
out
mov
push
add
jbe
bt
dec
add
push
in
adc
nop
stc
add
mov
jecxz
push
add
xorl
pop
mov
inc
orl
cmp
xor
mov
sub
jp
pop
jo
xchg
imul
test
or
pop
fstl
add
inc
push
xchg
sahf
add
jne
push
add
iret
jg
aam
fs
testb
shl
add
adc
dec
cbtw
faddl
lods
lea
icebp
mov
sub
iret
adc
jecxz
mov
sbb
loope
xor
lds
cwtl
push
jo
add
hlt
mov
or
xchg
movss
cli
inc
or
mov
jbe
daa
mov
xor
mov
movsl
mov
xor
sub
cmp
pop
add
mov
loop
jle
inc
add
mov
imulb
cmp
popa
add
adc
push
sbbb
fildl
pop
cmp
fmul
imul
leave
lahf
push
psraw
ror
add
dec
jmp
insb
add
push
sub
add
jae
mov
les
scas
mov
clc
sti
jp
sbb
or
jbe
sbb
adc
iret
inc
fwait
outsl
add
add
push
loopne
cmp
addr16
std
daa
stc
sub
andb
push
lods
notb
add
add
fwait
cmp
mov
jp
mov
lods
loop
sub
cli
enter
push
cmp
daa
stos
test
cmpsl
pop
jl
ret
dec
add
mov
pop
add
repz
int
mov
add
testl
lock
clc
inc
add
in
in
insb
pop
ficompl
mov
jnp
in
mov
xchg
orb
aad
out
add
or
cmpsl
dec
imul
hlt
jo
xchg
add
fidivrl
aas
dec
mov
inc
add
mov
rcl
xchg
add
adc
data16
jbe
fdivl
xor
add
icebp
mulb
xor
mov
or
mov
arpl
sbb
adc
push
inc
arpl
aam
test
sub
pop
xor
sahf
jne
add
jge
mov
cmp
add
sub
or
int3
fnclex
in
xchg
pop
mov
fsubl
out
push
lods
scas
stc
or
or
repnz
xchg
enter
out
jecxz
popa
jmp
pop
add
int3
mov
jae
cwtl
dec
pop
xor
in
testl
pop
out
lea
inc
adc
std
add
xlat
mov
push
sbb
adc
sbbb
sbb
mov
mov
adc
out
pop
int3
adc
add
cmp
fildl
mov
pushl
mov
dec
imul
pop
adc
subb
in
out
pop
and
js
mov
cwtl
and
loope
xorb
addb
xchg
dec
and
xlat
sub
movsl
in
stos
dec
cmp
pop
jle
mov
es
dec
mov
mov
push
add
sub
jb
es
rcl
insl
incl
ljmp
lcall
pop
or
shll
add
ljmp
test
notl
add
pusha
cwtl
cmp
stos
enter
xchg
insb
sub
lds
pop
insl
mov
shlb
in
add
es
call
adc
enter
fidivs
add
mov
das
jp
hlt
cwtl
or
lret
inc
int3
fsubl
imul
sbbl
out
and
in
add
mov
cmpsl
lock
jne
fs
or
sub
lods
in
dec
mov
adc
inc
jo
mov
pusha
or
sbb
push
pop
add
cmp
jge
xorl
and
xchg
add
rcll
out
loope
jb
enter
adc
fsubr
in
mov
sbb
pop
pusha
xor
and
jnp
jg
call
fnsave
js
dec
jge
mov
xor
bound
notl
sub
adc
pop
xor
add
cmp
insb
add
xor
cs
sbb
repz
orb
add
pusha
and
push
test
add
loope
and
or
add
lds
mov
mov
insl
or
adc
fucom
pop
rcr
mov
andb
rorl
pop
shll
clc
xorb
push
cmc
sbbb
adc
inc
cmp
mov
add
lret
sbb
lret
rorb
add
bound
or
adc
inc
sbb
outsb
inc
inc
call
sbbb
add
nop
cmp
sub
mov
rclb
stos
call
mov
rorl
jmp
mov
adc
daa
shrl
ja
shll
dec
xchg
jl
in
ret
sbb
fildl
xchg
in
testl
popf
repz
jo
jno
mov
les
lahf
iret
insb
or
loopne
stos
rcl
and
rcrb
push
xor
xor
push
cmc
cld
cltd
rorb
jmp
push
add
xor
push
cmp
aaa
pop
aaa
mov
and
inc
fnsave
js
fisubs
pushl
inc
mov
mov
mov
movsl
fdivs
cmp
cmp
pop
ret
mov
add
jge
add
mov
xchg
shlb
push
mov
add
scas
mov
aas
testb
lods
jne
popa
mov
jae
and
movzbl
and
sbb
ret
jg
mov
add
add
xchg
mov
sub
cli
jb
call
repz
adc
cmp
inc
jnp,pn
jl
push
pop
add
imul
sub
sub
mov
xor
ret
push
cmp
cmpsb
or
cld
dec
dec
add
mov
leave
adc
and
xchg
inc
jl
gs
pusha
jle
jmp
in
pop
aam
push
loopne,pt
hlt
out
add
sbb
cmp
add
cli
mov
dec
pusha
mov
ja
sbbl
fiaddl
outsb
dec
push
sbbl
adc
cmpsl
mov
scas
push
sarl
mov
xchg
pop
ficoml
adc
push
in
mov
dec
pop
jmp
pop
adc
dec
ss
add
in
ficoms
mov
or
inc
jno
add
fcompl
push
add
jp
mov
add
or
dec
inc
cmp
or
inc
hlt
and
in
enter
and
sti
mov
aas
add
rep
mov
out
imul
add
mov
add
jo
mov
in
add
inc
push
pop
xchg
rorb
cmpsl
lcall
jnp
mov
jecxz
add
sbb
add
sub
dec
cmp
ret
fiadds
mov
lea
cmp
fiaddl
stos
inc
jnp
jo
lods
add
sbb
in
jecxz
lcall
imul
xchg
add
dec
outsb
test
pop
imul
pushl
test
dec
sbb
push
mov
push
jl
pushf
sbb
sub
cmpsb
add
add
cmpl
inc
xchg
jne
notl
mov
adc
out
dec
or
jnp
jg
inc
add
in
mov
movsb
mov
xor
leave
add
xchg
ret
xor
aad
sub
daa
lea
ja
sbb
dec
mov
push
out
mov
jle
push
xchg
mov
test
sbb
sbb
dec
mov
out
aad
mov
jle
add
xor
xchg
fisubs
push
add
push
cmp
mov
sub
iret
push
imul
add
xchg
loope
add
jg
lret
aam
jp
add
lcall
push
or
add
lock
jp
add
xchg
pminsw
pusha
jo
cmpsb
punpckhwd
inc
das
enter
daa
jl
cmp
jnp
sub
imul
in
ret
and
jns
add
push
nop
shrb
add
sti
cmp
xor
and
sbb
add
mov
rclb
mov
enter
inc
lahf
aaa
jne
push
jo
add
cmp
mov
jmp
and
mov
mov
mov
outsl
in
insb
es
push
push
fnsave
pop
add
icebp
or
aas
cmc
add
out
push
xor
insb
mov
inc
push
sbb
adc
and
add
add
pushf
cwtl
movsw
mov
stos
out
out
ja
add
adcb
cmp
mov
bound
sub
pushf
add
test
das
xchg
pop
cmpb
sbb
lret
orb
sbbl
dec
lcall
jae
xchg
js
cmp
ss
inc
mov
test
cmp
pop
jae
add
out
mov
adc
dec
inc
lea
subl
gs
add
mov
inc
cltd
rorl
mull
ret
lret
adc
jno
int3
add
fldt
add
pusha
or
jl
mov
ds
test
jne
add
cmp
je
addr16
push
lea
daa
pop
jl
cmp
hlt
out
imul
xchg
testl
iret
test
cmp
add
or
jl
add
clc
jae
loop
mov
xchg
inc
push
into
and
xchg
mov
out
rolb
es
jno
in
lds
cmp
mov
negb
cltd
outsb
xchg
push
imul
xor
inc
mov
push
stos
inc
imul
add
xorb
push
mov
mov
add
out
call
sub
inc
mov
jnp
cmp
add
push
dec
fwait
inc
repnz
add
mov
rolb
xchg
shll
dec
fildl
xchg
stos
aas
das
dec
pop
clc
add
mov
shrl
pop
cmp
add
push
add
or
stos
add
pop
mov
add
push
mov
jecxz
fstpt
stos
in
or
xor
hlt
push
iret
mov
xor
pop
shlb
push
setnp
out
adc
pop
aad
xchg
add
add
jecxz
test
mov
sti
scas
or
adcb
out
and
inc
std
add
dec
pushf
sbb
cmpl
add
push
jecxz
rcpps
loopne
sbb
add
lcall
xchg
pop
je
mov
mov
adc
mov
xchg
sub
aas
or
mov
adcb
sub
lret
adc
jae
clc
lock
jg
sub
outsb
add
add
cwtl
mov
inc
orb
wrmsr
sbb
rolb
xchg
dec
dec
outsl
nop
imul
add
movsl
sbb
sbb
addr16
mov
push
stos
add
mov
or
or
rcrb
jne
cmp
popf
xchg
outsb
mov
mov
dec
mov
dec
mov
test
push
add
push
cwtl
out
jne
or
xchg
jns
pusha
dec
xchg
mov
xchg
dec
mov
xchg
xor
lods
jmp
pop
hlt
imull
inc
add
add
dec
add
inc
in
add
int
insb
pop
jnp
dec
add
cld
orb
data16
test
pop
lock
repnz
mov
mov
push
inc
addb
lods
add
std
stos
add
popf
mov
add
push
lock
stc
add
or
cmp
and
rcrb
fs
xorb
sub
push
cmp
dec
packuswb
add
sarb
loope
add
add
pop
jns
loop
pop
les
dec
add
in
jmp
ficompl
add
fdivl
xor
add
das
push
and
and
add
movsb
sarb
xor
arpl
add
pop
into
xorb
sbb
jmp
ja
out
mov
loope
cmpsl
add
loopne
je
cmp
test
popa
pop
rcr
xor
into
fs
xchg
loop
pop
push
inc
testl
adc
sub
pop
ljmp
sub
xchg
dec
push
in
lds
pushf
mov
sti
mov
sub
push
js
lcall
or
add
out
and
hlt
add
mov
xor
call
cmp
jl
std
add
inc
inc
dec
mov
cmp
sbb
stc
test
loope
jo
repz
xor
add
xchg
push
in
lds
test
ljmp
mov
out
mov
call
sbb
stos
xor
or
shr
or
pop
xchg
loop
dec
jae
pop
add
cmpl
testb
adc
lahf
repnz
dec
mov
icebp
insl
das
dec
pop
mov
push
dec
sbbb
lret
cmp
out
xchg
pop
adc
xchg
sbb
arpl
adc
push
fadd
push
rcrb
jo
cli
mov
pop
pop
sbbl
xchg
cmc
pushf
push
outsl
inc
and
fiaddl
xor
mov
push
ds
push
fwait
cwtl
add
test
dec
pushf
nop
push
jbe
or
notl
mov
push
xor
sbb
adc
jge
shrb
fldcw
sub
iret
xor
js
jns
inc
xchg
add
call
mov
lds
add
cmp
stc
xlat
xchg
nopl
adc
add
test
sub
mov
jbe
cmp
or
stc
sub
adc
das
add
dec
fisubrs
push
pop
adc
sbb
jg
sbb
stos
loope
pusha
xor
movsb
push
out
lret
lcall
arpl
out
cwtl
sub
lock
or
inc
test
add
xor
fwait
jge
in
jl
lock
jmp
je
add
repnz
adc
test
std
and
jae
ljmp
add
jp
rorb
mov
add
push
subb
mov
jnp
aaa
mov
add
adc
jb
xor
inc
adc
add
fwait
or
pop
leave
pusha
pop
aas
pop
cmpl
call
cwtl
int
les
jo
inc
jl
jge
mov
mov
or
insb
sti
xchg
push
int
pause
loopne
test
mov
insl
mov
pop
shlb
ds
popf
arpl
orl
cmp
mov
add
dec
xlat
inc
scas
insb
fcomps
stc
test
xchg
aam
aas
movsl
add
roll
out
clc
insl
adc
sbb
repnz
fcompl
push
sbb
dec
fadds
ljmp
divb
jecxz
add
into
jmp
out
test
sub
ds
sbbb
lea
pop
aaa
sbb
outsl
or
xchg
cmp
xor
shr
mov
xchg
lea
mov
jnp
sbb
test
xchg
push
cmp
outsl
lods
adc
aam
lret
jnp
nop
lcall
push
add
into
cwtl
outsb
push
lret
jno
add
shrb
add
push
push
fwait
add
adc
repnz
and
enter
test
scas
push
dec
jae
add
cmp
test
mov
add
pop
or
sbb
dec
pop
add
lret
int
xchg
pop
add
pop
cmpsl
mov
and
inc
stos
js
push
push
add
ret
cmp
cmp
add
cmpsl
inc
add
scas
popl
je
add
push
addr16
pushf
add
imul
pop
out
aam
push
lods
outsb
pop
rcrl
push
xor
sahf
jp
add
popa
in
aam
jb
dec
fs
outsb
rolb
pop
jae
inc
fbstp
push
imul
addb
inc
pushf
add
sbb
dec
repnz
cmp
push
es
pop
or
lods
popf
jne
adc
mov
sbb
mov
add
testb
shl
inc
mov
mov
sbb
push
inc
enter
jg
fmull
fldcw
mov
pop
das
pop
ret
idivl
loopne
mov
int3
jge
add
stc
fsubrl
cld
push
idivl
fistpl
enter
lea
incl
add
jecxz
lods
add
in
add
jbe
add
arpl
fadds
ljmp
stos
test
pop
jo
jns
add
lds
imul
xor
inc
push
add
sahf
add
in
imul
aam
sbbb
daa
jne
testl
pop
mov
mov
push
mov
dec
push
inc
es
and
lahf
adc
movsl
inc
xchg
push
xchg
sti
sbb
xor
and
lahf
push
add
fcmovb
testb
mov
dec
xor
sub
andl
and
cmp
add
xchg
sbb
test
xchg
mov
xchg
nop
and
sbbl
mov
lret
xchg
dec
nop
popf
add
xor
dec
inc
imul
inc
repz
cmp
clc
ljmp
cmovno
data16
cld
ret
mov
add
mov
aas
mov
push
push
or
std
add
mov
je
xor
add
ljmp
inc
push
jnp
cli
xchg
add
dec
pop
fisttps
lods
pop
add
stc
cwtl
pop
fisttpl
or
cmp
add
inc
and
mov
push
stc
cmc
daa
outsb
adc
lahf
movsb
clc
fadds
in
fadd
or
mov
mov
or
add
pop
inc
mov
sub
add
out
ds
cld
xor
mov
rcrl
xchg
and
inc
add
popf
repz
add
fdivs
push
imul
in
iret
scas
or
adc
cmp
add
rolb
sub
cmpsb
lea
pop
cmp
add
adc
mov
imul
push
fnstcw
jnp
dec
push
mov
fs
cmpb
iret
insl
cs
jo
jo
and
sub
fcompl
inc
dec
add
or
in
cmp
add
movsl
int3
pop
dec
insb
pop
add
cli
mov
push
jle
jp
dec
add
fists
dec
imul
test
fwait
outsl
out
jl
out
sahf
ss
mov
rorl
lcall
fimull
add
add
or
test
cmp
stos
loop
cli
mov
lea
jle
mov
mov
mov
int
lock
stc
aam
jne
test
jns
and
push
loopne
jg
adc
mov
lods
pop
pop
rolb
lcall
addr16
enter
pop
hlt
dec
push
aas
psubsw
fisubs
js
mov
mov
jge
jle
add
adc
cmpsb
or
stc
cmova
sti
add
xchg
test
outsb
add
pop
or
inc
decb
push
imul
pop
je
add
test
clc
outsl
adc
pushf
add
add
icebp
in
pusha
pop
push
push
add
neg
movb
xchg
adc
add
js
inc
repnz
popf
push
lahf
add
iret
cmp
fisubs
call
fsubl
das
repz
in
pop
daa
es
int3
cmpsl
sbb
movb
cwtl
xchg
add
add
push
push
leave
push
or
pop
dec
dec
in
jecxz
popf
das
loop
loopne
outsb
icebp
xor
add
xchg
cmp
push
aaa
inc
sbb
lds
in
sti
std
icebp
add
mov
mov
into
or
adcb
dec
scas
push
mov
daa
or
cmp
stc
push
sbb
gs
inc
sti
add
pop
repz
xorb
cmp
rclb
push
ljmp
repz
adc
inc
or
ret
test
outsl
stos
lods
cli
loopne
jle
add
or
mov
add
out
sub
aam
fucomip
cltd
add
mov
xchg
inc
xchg
add
and
adc
adc
mov
iret
mov
ret
pop
inc
inc
fcom
int
add
xchg
ror
dec
jecxz
shlb
jg
or
push
movb
pop
ret
add
and
inc
test
enter
jnp
stc
push
popa
fildl
rclb
imul
sbb
mov
xor
inc
test
inc
sbb
push
push
add
ret
push
jae
fidivrs
pop
lahf
add
dec
mov
add
dec
mov
mov
mov
sub
and
cmp
mov
cmc
add
in
hlt
pushf
mov
pop
add
lahf
jno
es
sub
cmp
cmpsl
add
mov
lret
insl
add
test
lcall
add
xlat
and
add
lret
or
arpl
rol
mov
pop
xor
jbe
inc
loopne
adc
repnz
sahf
into
mov
jb
jge
add
xor
add
cmp
push
scas
sbbb
dec
pop
push
les
test
in
test
out
jno
aam
add
mov
enter
and
lcall
add
xor
mov
cmp
mov
leave
add
pop
cmp
scas
add
popf
in
outsl
push
nop
adc
leave
popa
or
inc
push
add
inc
xlat
iret
rcll
cmp
xchg
push
ret
xor
leave
mov
pop
dec
pop
jecxz
fdivrl
cmp
add
xchg
jne
push
inc
rclb
xor
lret
push
or
cmpsb
xlat
mov
cwtl
daa
xor
addl
clc
add
mov
out
sahf
add
mov
pop
add
je
out
sarl
mov
add
lcall
enter
ja
jo
pop
xor
mov
repz
or
cmpsl
scas
mov
sahf
add
imul
aad
push
in
add
or
sub
dec
push
add
js
dec
pop
and
jne
test
dec
xor
cmpsl
dec
xorl
sbb
ret
push
fnstsw
or
and
js
mov
es
or
mov
in
int
cmp
adc
push
dec
loopne
nop
call
mov
mov
les
push
and
in
aas
shlb
shll
or
mov
scas
pop
notl
js
clc
push
add
outsb
scas
sbbl
test
and
addb
out
inc
sbb
std
lret
shll
lds
mov
push
push
adc
rorb
int3
dec
mov
outsl
jae
sub
idiv
adc
fs
sbb
pop
add
sti
pop
xor
sbb
mov
insb
push
xchg
push
pop
ss
jecxz
jb
add
mov
adc
mov
cmp
daa
cmp
adc
ljmp
call
or
rolb
xchg
and
mov
xchg
andb
pop
add
mov
xchg
pop
cmp
jmp
sbb
add
xchg
adc
adc
add
mov
andl
andl
mov
aaa
add
pop
and
cmp
je
sub
add
adc
rcr
push
loop
sub
mov
add
xlat
cmc
add
pushf
add
mov
dec
push
add
xchg
mov
test
sarb
sbb
shrb
movsl
dec
push
aaa
mov
jmp
inc
xchg
or
mov
ja
loopne
addr16
pop
roll
lret
repnz
xchg
mov
lock
jg
push
xchg
push
orb
pushl
pusha
mov
cmpb
int
mov
outsl
repnz
pushf
fs
out
mov
add
frstor
ret
ss
add
cmp
or
sbb
xor
out
test
push
xchg
maskmovq
idivl
ss
rorb
ljmp
sti
dec
insb
xchg
add
outsl
push
sub
jbe
jecxz
lret
cpuid
int
daa
push
add
cltd
mov
add
ja
ds
mov
xor
inc
sub
and
or
jne
inc
rolb
cmp
push
out
das
cmpb
and
test
add
xlat
jno
pop
add
std
adcb
sbb
sbb
repz
xchg
std
lock
xor
loope
lcall
push
dec
pop
sbb
addr16
add
loop
mov
push
verr
call
xchg
pop
jg
jp
fcmovbe
lahf
mov
je
rcl
mov
ret
pop
cmp
cmp
std
adc
mov
pop
rolb
scas
xchg
sbb
xchg
enter
dec
dec
or
sub
push
xor
rolb
mov
xchg
bound
int3
lods
enter
and
add
mov
add
int
test
mov
jo
mov
js
pop
pop
sbb
mov
mov
movsb
das
add
xor
xchg
je
add
xchg
test
and
dec
jbe
cmp
and
mov
adc
or
outsb
lret
sub
jl
add
aas
lds
mov
gs
pop
xchg
sub
pusha
pop
leave
movsb
call
inc
jo
add
int3
icebp
cmp
cmp
mov
iret
push
lods
xchg
pusha
jnp
cmp
mov
jl
cmpsb
out
push
mov
mov
sbb
inc
lock
or
sub
jecxz
nop
lods
ud2
lds
aaa
je
inc
rol
out
xor
ror
call
mov
enter
push
stc
sbb
dec
cli
xor
dec
pop
cmp
push
pop
ja
pop
xor
es
pop
xchg
into
addr16
and
sbb
pop
adc
fisubs
add
insb
test
mov
xchg
stos
jle
inc
cltd
add
test
cld
or
lock
add
mov
mov
ret
jl
lock
mov
or
out
mov
cmp
arpl
lret
loope
dec
icebp
add
or
mov
add
push
lcall
cmpsl
insb
cmpb
add
scas
mov
dec
pop
mov
xchg
adcb
into
scas
cmp
subb
fdivs
add
sbb
addl
nop
stos
add
ss
sbb
sbb
xor
mov
add
movl
dec
mov
into
ret
pop
mov
add
dec
add
movsl
jle
add
dec
and
lds
psubsw
ret
sub
jecxz
push
pop
add
cwtl
incb
icebp
xchg
jno
faddl
xchg
cltd
fnsave
pop
sub
jl
add
cmp
inc
cmp
cs
push
addr16
pop
inc
arpl
add
repnz
mov
cmp
stc
or
jo
arpl
or
add
lock
loopne
fwait
push
add
push
push
mov
xchg
orb
jne
push
mov
pop
add
hlt
in
add
scas
sbb
add
xchg
arpl
in
aas
mov
inc
pop
loope
test
push
sbb
cmpsb
into
sbb
ljmp
movsb
xchg
mov
cmp
fcmovbe
jbe
xchg
lock
add
lcall
push
int3
mov
xchg
pop
add
fisttpl
mov
jo
cmp
add
fmul
xchg
dec
popa
rol
add
xchg
outsb
rorb
shll
xchg
imul
addb
push
pop
and
int3
sbb
pop
adc
adcb
in
jae
add
sub
cmp
xchg
in
pop
or
push
mov
nop
xorb
and
add
and
fstpl
dec
notb
sti
adc
into
std
loopne
and
pop
push
inc
push
popf
in
inc
add
mov
test
cltd
cmc
mov
fldenv
nop
jg
jnp
push
in
add
xor
mov
loop
add
jb
dec
xor
sarl
loopne
add
jp
fwait
xchg
nop
jl
enter
repz
maxps
js
jle
add
mov
sarb
jo
pop
push
cmp
pop
adc
sbb
aad
out
jnp
pop
and
sub
aad
xor
and
sbb
mov
nop
inc
in
test
out
in
jnp
cld
andb
cli
jl
out
outsl
loopne
push
mov
divl
int
adc
and
add
int3
pop
jb
mov
andl
push
xchg
iret
xlat
popf
jno
cld
shlb
dec
cs
mov
and
cmp
js
push
dec
ret
das
or
imul
pop
ss
pop
xlat
out
inc
mov
cmp
adc
push
out
jmp
shlb
pop
xor
fnstenv
jp
mov
aas
mov
lahf
jae
jmp
movsb
rcll
scas
pop
sbb
out
addr16
lds
adc
add
loop
xor
les
inc
mov
add
mov
ss
mov
arpl
dec
sbbl
add
leave
in
gs
sbb
add
dec
out
sbb
add
cmp
inc
rol
sbb
fisttpl
jbe
add
leave
add
push
cli
rcrb
idivb
and
pusha
jns
cld
cs
je
lret
push
or
sub
test
add
idivb
inc
mov
add
pop
push
ds
fiadds
orb
mov
jg
loopne
out
mov
ljmp
mov
pop
roll
daa
call
aam
mov
imul
dec
hlt
ja
es
sbb
scas
loopne
add
xchg
stos
dec
test
sub
cld
jbe
cwtl
cmc
add
push
pop
pusha
and
test
addr16
loope
push
imul
add
hlt
add
adc
push
adc
scas
stc
lods
inc
outsb
add
mov
hlt
jl
pusha
pop
push
push
fnstcw
pop
sbb
mov
fmulp
add
inc
dec
xchg
int3
sbbb
pushl
les
shrl
out
cld
out
ljmp
jo
dec
addr16
push
fs
cmp
push
xchg
sub
xchg
add
dec
jecxz
arpl
inc
and
add
aas
pop
addr16
add
cs
add
rcll
lds
xchg
add
cmp
or
cmc
inc
movsl
sbbb
add
add
mov
pop
jnp
cmc
add
or
cmp
mov
jg
push
inc
lods
push
inc
mov
test
test
adc
cmp
dec
pusha
mov
xlat
ds
scas
adcb
lret
pop
push
call
push
out
in
jo
pusha
popf
add
lcall
jno
into
ljmp
xor
movl
or
cld
enter
fdivl
pusha
outsl
dec
dec
fs
add
xor
outsb
ret
sub
and
or
adc
iret
jmp
push
fldl
ljmp
insb
add
push
addr16
add
fucomi
sbb
iret
popf
sti
dec
ljmp
out
cmp
mov
out
inc
xlat
outsl
mov
in
sub
jns
subl
lock
add
and
add
pusha
lds
add
cwtl
mov
ret
sbb
scas
test
das
dec
pop
hlt
and
sbb
shr
or
dec
hlt
repnz
mov
outsl
and
fcomp
adcl
add
mov
ja
add
jbe
add
insb
xchg
cwtl
jp
into
pop
add
lock
loopne
cli
add
arpl
and
pop
popa
push
insb
inc
ud1
loope
add
add
push
jg
mov
addr16
or
ss
ret
add
xchg
jg
pop
sbb
fldl
jp
xchg
xchg
or
mov
add
stos
mov
and
les
add
dec
addb
or
fldl
jmp
xchg
cmp
movsb
pop
roll
dec
into
mov
mov
push
fistpll
add
and
xchg
jp
sub
stos
xor
sbb
mov
mov
mov
push
int3
mov
add
add
jb
sub
mov
sub
addr16
add
fcompl
mov
loopne
scas
add
dec
xlat
mov
dec
or
push
lock
aaa
ret
mov
int
add
ss
push
add
push
bnd
mov
cmp
xor
jp
push
jbe
popf
les
pop
enter
adc
enter
jns
lret
xor
dec
sbb
push
adc
fwait
int
mov
adc
push
cwtl
add
push
imul
cwtl
xlat
add
js
leave
add
std
push
cmc
xchg
jp
jge
js
lcall
push
jmp
push
mov
js
pop
int3
add
cmp
js
pop
dec
add
adc
sbb
bndldx
dec
add
cmp
mov
add
dec
xorb
mov
lcall
jle
add
mov
mov
and
lret
pushf
test
hlt
xor
imull
or
pop
das
and
cmpsl
cmp
and
adc
inc
inc
push
pusha
and
stos
les
mov
add
pop
lock
add
movsl
stc
dec
or
xchg
sub
add
stos
jl
sti
sub
push
xchg
into
xor
add
hlt
push
insb
out
dec
clc
rorl
lret
jge
xor
mov
hlt
jb
cmp
or
add
jo
push
inc
dec
push
stc
add
ret
fdivrp
add
insl
inc
pop
sbb
movsl
push
mov
push
faddl
cmpsl
and
pop
enter
mov
in
rcrb
hlt
push
and
dec
add
addr16
pop
cmpsl
inc
xor
gs
jp
inc
add
pushf
xor
addb
push
not
dec
fsubl
adc
std
xchg
jnp
adc
sbb
enter
jg
sbb
or
les
mov
stc
add
in
in
call
xchg
add
fisubrl
aam
movsb
mov
dec
shll
mov
insb
xchg
repnz
add
filds
or
or
jmp
cmp
andl
out
add
imul
roll
and
add
vcmppd
push
xorl
test
fldl
add
fistps
pop
jns
add
ficomps
mov
push
push
pop
xchg
and
lcall
pop
jmp
iret
adc
fdivs
lods
lea
enter
mov
pusha
incl
and
pop
push
lret
add
or
cmp
push
add
mov
xor
add
loopne,pt
pusha
fldt
mov
cmp
jne
pop
or
pop
sub
cmp
nop
push
movsb
movsl
jb
hlt
out
add
imulb
add
xor
sub
andl
jbe
mov
xor
in
adc
filds
mov
stos
sbb
into
sub
or
in
or
dec
mov
push
sbb
dec
add
jle
add
dec
push
add
popf
add
roll
mov
jge
jns
inc
fneni(8087
dec
hlt
sbbl
push
out
cmpl
push
mov
add
fst
jb
add
push
fldcw
cmp
adc
mov
jle
js
clc
jl
sub
mov
xchg
xor
mov
or
mov
dec
leave
cmp
divb
push
lods
add
push
adc
in
in
and
add
pop
data16
adc
push
roll
roll
ret
shll
dec
scas
xchg
pop
add
xchg
jb
push
negl
add
adc
or
out
fmull
scas
movl
hlt
push
add
jge
rorb
aaa
add
inc
test
or
test
daa
mov
mov
xchg
out
pusha
xchg
inc
mov
add
les
xorl
or
orb
adc
and
pop
cmc
mov
and
movsb
add
rorl
mov
mov
cmp
xchg
inc
xor
mov
clc
add
push
pushf
mov
add
in
jb
sbb
shlb
push
sub
jmp
and
add
sbb
sar
fiaddl
outsl
xchg
jmp
gs
xor
dec
mov
sub
outsl
inc
add
or
mov
std
addb
xor
add
aam
mov
add
mov
test
notb
pop
outsl
dec
xchg
pusha
pop
mov
adc
mov
hlt
call
cli
adc
push
dec
adc
dec
push
aam
cmp
or
loop
shlb
enter
cmp
lods
or
sbb
inc
pop
jbe
sbb
add
fnstcw
movsl
or
add
sbb
mov
hlt
or
scas
or
mov
xor
aam
add
adc
mov
sbb
jle
xor
js
add
dec
pop
cmpsb
xchg
repnz
fidivl
test
addb
js
insb
xorl
testl
push
scas
push
mov
jle
xor
mov
pop
add
add
cmp
dec
test
cmc
cmp
cwtl
test
insb
in
sbb
sbb
mov
loope
pop
sub
sub
in
mov
push
sub
jmp
sub
in
add
xor
rcll
movsl
scas
pop
popl
xlat
lret
adcl
mov
add
loop
outsb
add
daa
popa
flds
mov
inc
dec
imul
je
pop
movsb
inc
mov
cmp
inc
adc
cmp
cmp
pusha
dec
fdivl
and
push
pop
pushf
dec
mov
and
cs
add
add
add
nop
mov
lahf
add
bound
gs
mov
pop
cmp
out
dec
outsb
cmpl
xor
cmp
jg
mov
or
and
jl
push
inc
push
rolb
aad
cmp
aam
xor
mov
pop
cmc
lret
mov
dec
jno
hlt
xor
sub
pop
pop
scas
push
pop
mov
xor
mov
mov
ret
mov
xchg
sahf
mov
inc
cmp
sub
sub
sub
add
movsb
push
ret
mov
imul
in
dec
pop
insb
sub
jl
xor
xor
addr16
add
add
into
mov
or
jo
pop
test
pop
mov
cmp
or
or
add
scas
mov
nop
add
mov
fistpl
aas
sbb
push
js
or
lea
sub
add
mov
adc
inc
add
cltd
stos
popf
lods
sarb
mov
ljmp
loope
lahf
add
jae
add
sub
add
movsl
imul
add
imul
fdiv
push
out
xor
loopne
adc
insb
mov
loop
rclb
add
mov
adc
bound
je
iret
inc
loopne
add
mov
mov
xchg
xor
leave
sbb
movsl
or
into
and
adc
and
inc
int
add
js
add
cmp
sti
das
add
mov
ret
push
imul
add
in
adc
mov
popa
lcall
addr16
mov
cmp
aas
add
jg
insb
movsb
mov
enter
inc
add
add
mov
add
sbb
movsb
aas
outsl
push
inc
int3
or
or
orb
ret
shrl
aas
jmp
in
leave
jae
mov
aam
iret
popf
xchg
xor
mov
sub
in
cltd
clc
or
js
adc
imul
push
add
jne
add
pop
subb
sub
je
mov
and
rolb
push
aam
pop
out
shll
xor
and
imul
outsb
inc
clc
push
sub
scas
cmp
out
fdivrl
add
xlat
in
push
shlb
in
sub
lcall
movb
pop
addr16
mov
xor
loopne
sub
push
cmp
jmp
mov
pop
lds
in
je
add
cmp
dec
pop
rolb
add
cltd
in
jae
popf
mov
adc
jmp
add
adc
test
sbb
dec
add
add
scas
and
adc
mov
xor
mov
fidivs
cmpsb
sub
add
hlt
jns
add
dec
in
loop
cld
cs
push
add
sti
push
adc
test
inc
mov
das
mov
adc
les
push
addr16
je
jmp
mov
ret
push
or
sub
and
std
lock
stos
cmp
mov
out
arpl
ss
leave
pop
fbld
stc
jne
adc
loopne
cmpsl
shrb
pop
lret
rcrb
xor
or
jae
dec
fcoms
inc
in
xchg
in
pop
jb
adc
mov
shrl
cmp
cmpl
pop
subb
xor
popa
add
je
push
ljmp
jne
out
out
pop
mov
adcl
pop
cmp
jge
add
ds
jae
xor
mov
and
je
jo
pop
jg
vpunpckhdq
xchg
mov
jge
push
jns
cltd
arpl
jbe
inc
subb
repnz
push
fiaddl
scas
ret
or
add
fs
mov
add
out
jecxz
shl
jle
cmp
jb
cli
out
imul
lock
cmp
mov
xor
inc
push
add
sub
xor
test
lock
fimuls
pop
mov
jo
ljmp
sahf
clc
cmp
loope
add
add
inc
lcall
sub
pop
jo
push
add
bound
testl
inc
push
adc
xchg
divb
cmpsb
nop
mov
inc
push
pop
cld
fwait
xor
or
push
fs
pop
bsf
pop
mov
inc
jl
movl
mov
pop
xchg
mov
pop
cli
aad
fdivl
or
and
mov
and
jns
add
decb
mov
add
and
lcall
cmp
xor
push
sbb
inc
testl
push
push
push
nop
push
add
mov
push
iret
test
inc
xchg
std
cmpsb
sub
sub
jg
scas
lods
xorb
xor
nop
iret
pmulhuw
mov
cmpsl
mov
add
mov
inc
xchg
and
cmp
xchg
or
cmp
add
scas
mov
mov
xchg
pop
call
pop
iret
out
mov
xor
mov
pop
js
cmp
inc
push
test
nop
in
or
lods
cmp
cli
jg
jb
or
add
lods
and
sahf
and
in
pusha
dec
out
or
and
aam
add
adc
mov
in
pop
sub
push
add
or
xor
push
add
mov
xor
add
xchg
push
mov
pop
ljmp
jnp
stos
test
mov
add
cmp
aaa
pminub
cmp
lods
ja
cld
pushf
inc
test
mov
test
js
test
and
ret
cmp
loop
xchg
mov
cmpsl
fwait
mov
and
push
fsubrs
add
leave
add
int3
inc
add
pop
lock
ljmp
xchg
stc
push
and
cmc
push
cli
mov
push
mov
out
popf
and
fidivrs
jnp
sbb
fcoms
add
xchg
adc
psraw
shlb
test
int
dec
bound
ret
sbb
push
add
add
mov
and
mov
xor
pop
jmp
sbb
data16
mov
popa
pop
cmp
lods
pop
jle
cltd
add
mov
xor
add
mov
pop
icebp
and
jg
add
mov
push
pop
mov
add
push
icebp
xor
add
jp
cld
mov
add
hlt
int3
xchg
lret
pop
add
mov
push
adc
xchg
fs
arpl
int
inc
js
ret
cmp
inc
adc
push
sub
mov
iret
insb
mov
pop
pop
cmp
mov
pusha
cmpsb
sahf
add
pop
gs
add
sub
or
add
divb
fcmovnbe
loopne
lret
inc
add
int
inc
loope
sbb
pop
ljmp
jl
pusha
into
test
shlb
adc
lret
into
push
mov
jo
cmp
lahf
cld
cmp
push
repnz
mov
fildl
lret
jb
sti
push
test
ficompl
and
lods
icebp
xlat
sahf
or
test
pop
cs
adc
sub
addb
in
adc
movsl
and
add
pop
cmc
xchg
or
cwtl
add
push
xor
sub
pop
cmp
sbb
rorb
mov
test
outsl
push
pop
leave
cmpsl
sbb
clc
or
add
lds
lcall
jne
mov
inc
pop
loopne
mov
and
stos
push
add
inc
push
insb
lahf
dec
popf
enter
outsl
mov
shlb
bound
add
fs
adc
cmp
add
aas
xchg
mov
xor
or
and
or
nop
into
adc
pop
rcrb
outsl
add
jo
sub
mov
pop
push
pop
sbb
arpl
or
sahf
push
addl
fiadds
or
icebp
pop
addr16
add
jl
push
shr
add
dec
sub
sahf
dec
aas
sbbb
scas
sbb
add
pop
push
cmp
xchg
cli
pop
push
cmpsl
jecxz
mov
cmp
stc
or
pop
leave
dec
sarb
inc
push
dec
jns
pop
jmp
faddl
adcb
pop
add
push
in
cmp
in
add
fcomps
sbb
jb
mov
std
mov
rclb
or
hlt
sbb
cli
push
mov
mov
add
mul
sub
xchg
push
sub
rol
push
xchg
add
dec
int
jmp
popa
jne
push
dec
daa
jae
mov
scas
dec
lcall
and
cwtl
aas
inc
add
push
fistpl
and
mov
rcrl
add
jno
sbb
mov
add
lret
out
movsb
pop
aas
cli
nop
sub
push
clc
add
sub
add
setnp
cmp
shr
arpl
xchg
sbb
xchg
insb
sbb
sub
xchg
fstl
mov
sub
add
cmp
and
je
pusha
push
cmp
add
lret
aad
mov
and
int3
or
loopne
dec
loop
pop
fld
incb
movsb
stos
fwait
ljmp
inc
out
sub
shlb
in
pop
mov
push
push
and
bound
movsb
nop
je
xor
mov
mov
add
inc
xchg
xor
add
cli
or
fdiv
mov
mov
movsb
mov
hlt
pop
add
in
aaa
cs
dec
jg
shlb
xor
sarb
rolb
push
dec
pop
adcb
mov
jnp
testl
mov
sbbl
mov
add
test
imul
inc
fldenv
pop
dec
add
jne
mov
mov
add
push
adc
add
fstps
movsl
xchg
inc
add
jne
and
rorb
fstl
pop
mov
shrb
nop
jp
inc
bndldx
sarb
inc
incb
inc
sti
in
out
push
test
fisttpll
ficoms
into
dec
aad
push
out
adc
inc
push
psrlq
les
cmpsb
mov
add
std
inc
stos
sbb
push
xor
addb
add
xchg
dec
ss
rolb
pushf
repz
push
add
call
icebp
shl
or
lea
hlt
add
mov
hlt
jbe
into
jne
sbb
insb
mov
idivb
in
aas
add
fistl
mov
xor
jo
pop
les
stos
pop
imull
pop
das
mov
and
mov
loopne
dec
sub
add
xor
and
imul
and
mov
call
pop
addb
and
movb
push
add
loopne,pn
sub
add
add
dec
push
jmp
incl
lea
pop
nop
jo
lods
xor
inc
jl
xchg
cmp
incb
sub
pop
push
sub
lret
rolb
les
pop
repnz
push
add
repz
test
aaa
mov
cwtl
fninit
pop
push
lret
inc
enter
cmp
mov
clc
push
add
jge
jne
inc
jns
daa
push
adc
add
push
rolb
add
ffreep
and
jo
sbb
fwait
stc
mov
add
sub
popf
mov
sbb
rcll
lods
call
add
ret
inc
sub
xchg
cmp
or
jmp
aam
push
mov
arpl
xorb
idivl
lods
inc
mov
mov
add
xchg
dec
fcoml
add
test
add
int
adc
add
lret
cmp
add
adc
mov
pop
int3
fwait
cli
add
lahf
add
cmp
scas
or
jo
jmp
imul
sbb
push
mov
add
fst
jmp
xor
add
xor
roll
enter
insb
arpl
add
aad
xor
ds
add
jge
enter
cmp
pop
sbbb
push
add
sub
add
call
add
in
jecxz
inc
sar
or
in
cmp
adc
addr16
inc
adcl
push
in
ja
pop
mov
pusha
das
sbb
cmp
jne
add
dec
scas
cltd
cmpsb
sub
js
in
aas
xchg
and
lock
add
dec
mov
stc
mull
cmc
jo
data16
cs
sbb
popa
icebp
in
cmpb
pop
mov
dec
loopne
adc
dec
dec
and
mov
add
mov
roll
add
add
pop
shlb
mov
add
cltd
cmp
cmp
loope
in
or
adc
test
cmp
or
push
aad
pop
outsb
lahf
pop
in
sarb
add
push
ja
hlt
sahf
pop
int3
aas
or
adc
pop
pop
mull
push
mov
add
add
cmc
lea
inc
loope
pop
or
cmpsb
sbb
cltd
xor
lret
add
pop
sbb
xor
jmp
pop
add
std
pop
dec
add
test
cmp
lods
lods
and
add
mov
cld
add
test
jo
loopne
add
fldcw
outsb
sti
roll
mov
dec
cmp
shlb
dec
int3
and
icebp
repnz
stc
out
mov
daa
push
stos
aad
jo
pmaxsw
scas
add
xor
xor
add
xchg
push
in
sbb
push
mov
xchg
add
xlat
aas
xchg
add
popf
dec
lds
mov
xor
push
mov
addb
mov
in
sbb
ret
inc
cld
int
add
aam
stos
shlb
in
add
cli
cs
fdivl
aaa
add
and
adc
add
ret
aas
push
cmp
fnstsw
imull
in
outsb
add
test
movsl
sbb
cmpsl
jns
xchg
ret
add
add
cltd
or
out
xchg
outsb
xchg
insb
andl
pop
inc
into
mov
dec
addb
jl
lret
mov
out
fistpll
add
jnp
push
add
mov
stos
mov
sti
pop
cmc
sub
dec
sub
ljmp
test
les
jle
dec
dec
mov
xlat
cmp
mov
inc
ds
jb
pop
sbb
test
mov
push
in
mull
push
xchg
and
add
sahf
push
pop
test
add
out
or
mov
add
add
adc
add
out
lcall
jg
mov
jnp
add
xor
lahf
iret
sar
cmc
xchg
push
scas
lcall
cwtl
fucom
xor
cli
add
cmp
and
mov
xor
add
je
cwtl
add
or
data16
mov
out
or
das
dec
jo
push
cmp
dec
add
test
sbb
std
jp
add
leave
movsb
cli
clc
mov
gs
jb
xchg
xchg
jecxz
add
fsubl
add
adcb
rcll
jbe
out
pop
mov
int3
aaa
outsb
sbb
outsl
clc
mov
mov
cli
jmp
aas
xchg
les
rcll
fwait
push
xchg
sbb
inc
popa
fsub
xchg
add
jp
push
rcrb
add
cld
xchg
push
pop
js
jno
sub
push
sub
or
add
push
inc
and
mov
add
fs
mov
inc
jne
mov
push
adc
xor
mov
push
out
das
into
repz
sahf
add
cltd
aam
add
xor
cld
scas
ret
push
jbe
clc
out
pop
mov
cmp
call
data16
mov
gs
in
push
add
push
or
dec
pop
lret
add
scas
shll
mov
push
xchg
mov
in
add
jmp
inc
mov
push
outsb
insl
out
mov
loope
aas
jns
andb
sbb
sbb
sti
mov
divl
add
das
mov
push
testb
mov
fcomps
fxch
add
add
loopne
add
jg
out
das
lea
add
lock
and
call
test
mul
add
push
mov
inc
lea
jp
cmp
xchg
add
out
pop
or
nop
mov
pushf
sub
inc
inc
sub
das
lret
and
pusha
mov
add
cmp
imul
pushl
lcall
push
pop
cmp
add
and
test
test
mov
xor
add
push
pop
sbb
pusha
cmp
cltd
js
mov
add
nop
loopne
loopne
pop
inc
addb
cmp
pusha
sbb
outsb
inc
filds
movb
cmp
addr16
inc
mov
push
dec
pop
into
pushf
nop
adc
and
xor
js
jnp
mov
lahf
add
les
adc
add
add
push
sub
push
adc
inc
addb
lcall
cmp
sbb
lahf
dec
mov
xlat
ja
fsubrs
lds
pop
push
mov
dec
cmp
out
rcrb
inc
pop
push
nop
pop
sbb
dec
sarl
fldl
sbb
lahf
or
push
addr16
cmp
adc
xor
lea
out
sbb
and
je
and
pop
pop
add
jbe
shlb
cmp
scas
add
pop
pop
out
or
sub
xlat
inc
scas
jge
shr
addb
sub
nop
mov
enter
jl
sub
enter
mov
fists
pop
sbb
xchg
xor
in
out
insl
clc
add
or
sub
adc
adc
xchg
jmp
sub
ret
sbb
shrb
jno
clc
add
mov
loope
adc
sti
cmp
data16
mov
popa
sub
lds
pop
pop
add
sbb
popf
mov
sbb
pop
add
aam
push
push
out
mov
or
test
enter
pop
sahf
les
add
xchg
mov
add
cmc
pop
jg
jae
ret
rolb
add
adcb
icebp
iret
pop
add
pop
mov
add
mov
sarb
inc
pushf
rcll
lahf
add
repz
dec
or
add
adc
or
es
mov
pop
pop
scas
addr16
add
sbbb
and
outsb
sbb
add
imul
push
cmp
shlb
push
rorb
lock
incl
sahf
int3
mov
jae
xchg
sub
add
cltd
inc
add
mov
pop
jle
sbb
sbb
cmpsb
gs
out
push
inc
leave
subl
aas
lret
orb
and
pop
iret
add
add
jae
sub
add
or
stos
aad
push
leave
fsub
xchg
fninit
nop
call
mov
mov
repz
inc
arpl
clc
ja
enter
add
mov
xor
jb
lock
add
in
call
test
or
aam
dec
cld
jmp
add
add
cli
and
sub
iret
fsubrs
lods
mov
outsl
adc
cmp
mov
xor
imull
in
sbb
sbb
pusha
cli
add
jp
icebp
subb
and
call
push
pop
push
or
test
add
daa
outsb
adc
pop
sbb
add
seta
or
mov
sbb
push
adc
fcoms
xchg
pop
or
sbb
xchg
daa
or
inc
jg
mov
rolb
jne
rcr
add
and
outsl
and
pop
xorl
call
inc
mov
jo
mov
xchg
mov
xchg
bound
nop
pusha
sub
add
pusha
mov
in
outsb
add
sub
cmc
loopne
pop
and
into
jo
add
jle
xchg
or
sti
inc
lcall
adc
sbb
movsl
outsb
imul
xchg
mov
mov
jp
push
std
repnz
mov
add
ss
and
xor
pop
ja
data16
cwtl
and
cmp
lods
add
mov
add
jo
add
cmp
add
xchg
hlt
mov
ror
push
out
add
mov
adc
push
mov
jnp
add
dec
add
lahf
outsl
adc
lret
lock
adc
cmp
mov
lahf
push
stos
cmpsl
iret
fwait
lret
fildl
inc
or
adc
fisttpll
cmp
push
mov
mov
mov
popa
add
mov
ja
mov
ret
outsl
cli
pop
int3
add
adc
das
shll
or
cltd
and
push
xchg
inc
pop
jbe
lret
xchg
loopne
loopne
or
xchg
xor
dec
pop
add
mov
gs
test
insb
jno
mov
aad
pop
sbb
jbe
pop
call
test
arpl
repz
mov
mov
outsb
push
fnsave
inc
mov
adc
sbb
inc
push
cmp
add
lea
int3
int
in
ljmp
or
jnp
pop
cmp
pop
addb
mov
add
iret
pop
ljmp
adc
cwtl
sub
js
sbb
cltd
mov
mov
and
cwtl
push
jp
or
pushf
sbb
xchg
jb
mov
shlb
jmp
xor
add
pop
sbbb
and
adc
inc
lret
xchg
gs
addr16
mov
xchg
mov
shll
mov
sub
push
sbb
mov
dec
sarl
jmp
cmp
add
adc
lea
in
add
xorl
arpl
add
notb
add
out
push
fidivs
mov
fwait
ljmp
add
inc
push
xor
jle
sbb
adc
xor
popf
sbb
mov
ret
xchg
sub
jae
push
sub
sbb
mov
inc
sti
sub
in
fwait
cli
sub
shrl
xchg
and
sub
arpl
js
mov
inc
sbb
test
test
push
add
cmp
cmp
lret
jno
pop
push
xor
fcompl
testb
es
sbb
sub
jmp
add
out
ret
in
pop
mov
rorb
xchg
fs
or
rcrb
mov
iret
and
xor
xchg
stc
inc
ret
xor
test
cmp
and
sti
lahf
cmp
cmp
scas
cmp
int
sub
sti
ds
adc
cmp
sub
ss
and
xor
dec
adc
mov
adc
int3
adc
add
fdivrs
add
loopne
mov
pop
jecxz
adc
subb
push
shlb
stos
dec
sbb
add
shll
out
aam
lcall
sarb
in
movsb
mov
call
pop
cmp
jnp
add
subb
clc
jmp
jnp
test
cmp
xor
loopne
loop
cmp
add
lahf
clc
push
mov
leave
sti
mov
jle
sub
ds
pop
add
fiadds
mov
scas
xorl
pop
cmc
and
jle
add
mov
or
je
fstps
scas
add
mov
add
movsb
mov
addr16
aaa
dec
pop
sarb
cmp
stos
popf
lahf
out
pop
dec
aas
or
and
mov
fisubrl
in
add
dec
fdivl
filds
inc
push
adc
mov
and
dec
cmp
shrb
add
cmp
in
test
mov
pop
and
notl
enter
mov
or
pusha
cltd
jl
clc
mov
add
orl
sbb
or
pop
lock
dec
jne
sub
pop
aam
ficoml
hlt
cmp
cmpsb
sub
or
xchg
sub
adc
inc
sub
push
mov
cli
dec
aas
outsb
test
add
sub
mov
add
out
xor
pop
in
hlt
data16
mov
out
push
xor
fstl
add
add
add
pop
cmp
sub
mov
sti
xchg
loope
leave
test
outsl
lods
xor
shll
add
cld
inc
faddp
incb
sbb
cmp
adc
or
aad
mov
sub
push
rolb
sub
xchg
or
stos
push
xchg
xor
add
enter
add
mov
push
jo
cmpsb
add
push
add
mov
pop
pop
subb
and
scas
pop
cmp
sbbb
movb
push
xchg
add
pop
and
imul
push
roll
sar
hlt
ljmp
mov
xchg
call
test
mov
xor
add
xor
sbb
add
andb
jl
add
arpl
sub
in
mov
pop
pop
repnz
fisubs
adc
repz
hlt
adc
popa
sti
add
xchg
and
loopne
inc
push
add
lods
std
xchg
mov
addr16
or
mov
fadds
pop
xchg
insb
stos
je,pt
push
andb
add
fsubr
add
cmp
xchg
add
fldcw
add
push
std
push
es
xchg
jae
stos
arpl
mov
sbb
pop
cmpsb
add
stos
fadds
das
jmp
mov
add
in
cmpsl
add
sbb
mov
movsb
sbb
or
mov
ret
mov
or
enter
and
sti
add
inc
in
cmp
or
mov
sarb
enter
ljmp
leave
fcmovu
imul
ud1
push
and
cwtl
test
test
cmpsb
outsl
xorb
adcl
mov
mov
jecxz
ja
icebp
or
push
es
mov
mov
and
jo
xchg
loopne
stc
outsb
sbb
add
test
in
das
jp
in
add
wrmsr
cmc
add
or
jge
pop
popa
int
push
imul
gs
adc
shll
dec
je
and
xor
add
in
mov
dec
jns
add
dec
adc
mov
stos
xchg
push
xor
push
pusha
mov
outsb
fs
add
jno
stos
ror
fsubrl
repnz
flds
ds
add
sbb
es
mov
jle
add
outsb
movsl
and
pusha
mov
andb
ret
push
dec
icebp
cld
add
add
cmp
xor
adc
and
repnz
adcb
mov
cmp
mov
lcall
outsb
add
and
popa
add
xchg
pusha
in
adc
iret
pusha
bound
jp,pt
cwtl
out
add
lods
shll
fwait
sahf
or
jg
andb
add
scas
sbbb
fwait
testb
jecxz
and
mov
pop
fmull
add
pop
mov
pop
add
stc
sbbb
movsb
loop
jg
push
dec
pop
mov
cmpsl
pop
add
sti
sub
loopne
popa
pop
leave
mov
js
repnz
and
data16
inc
dec
sti
inc
dec
mov
xchg
add
jbe
test
add
dec
loop
inc
and
and
cmp
jnp
shll
icebp
js
lock
xor
cwtl
adc
add
les
pop
dec
jbe
pop
pop
dec
pop
jo
or
js
add
rclb
and
lcall
movsb
out
add
insb
popa
rcrl
iret
xor
inc
fmuls
adc
aad
rorl
jl
sbbb
push
stc
ret
mov
add
inc
sub
add
aam
leave
or
outsl
mov
dec
rcrb
mov
in
jo
pop
or
test
sbbb
mov
test
adc
fwait
add
xchg
xor
cmp
psrlq
jbe
addl
adc
inc
pop
ljmp
nop
lock
and
sub
add
lahf
jecxz
add
insb
out
mov
idivb
cld
add
push
or
add
push
cwtl
pop
test
nop
or
cmpsl
mov
cmpsb
ja
lock
add
icebp
andb
xchg
adc
popl
xchg
pop
pop
cmpsb
dec
push
and
mov
loopne
hlt
arpl
push
cmp
pushf
push
dec
test
pop
pop
ss
cmc
xor
mov
add
subl
jecxz
mov
addl
scas
ds
mov
orb
pop
add
loop
dec
out
stos
add
cli
mov
sbb
pop
add
sbb
and
mov
sbb
cs
dec
xor
lods
call
and
in
xchg
out
dec
xlat
mov
fildl
pop
pop
push
sti
dec
cmp
iret
add
mov
or
push
gs
adc
stc
add
inc
jae
adc
cmc
add
push
addr16
mov
mov
add
mov
mov
add
and
addr16
mov
into
faddl
aad
cmpsl
loop
pop
add
dec
arpl
or
jae
sbb
xor
push
mov
ds
xor
mov
add
fbstp
sub
sbb
mov
cmp
mov
or
add
push
test
pop
inc
sarb
push
xor
add
push
sub
dec
xchg
vphaddbd
jle
cmp
sarl
lcall
jg
popl
cs
call
out
mov
bound
in
js
and
add
push
jmp
mov
out
sbb
cmp
xor
lret
fcmovb
fnstenv
and
xor
faddl
xor
add
add
scas
jb
jl
sbb
dec
in
cmpb
lds
add
push
aaa
test
aam
sahf
lock
lret
xchg
psllw
pop
aas
pusha
sbb
ds
jae
xchg
pop
cmp
or
fcmovnu
pop
test
or
arpl
mov
mov
dec
adc
loop
inc
add
ja
ljmp
and
mov
add
jb
push
inc
loope
cwtl
xchg
jbe
cmp
insb
lcall
pop
cmpsl
mov
jp
addl
pop
out
adc
mov
fs
sub
sbb
adc
icebp
dec
call
addb
sahf
addr16
and
pop
sub
inc
xor
sarb
call
scas
mov
rcrb
add
cld
add
mov
bound
cmpsl
add
push
cwtl
addr16
add
rclb
lahf
rcll
add
mov
pushf
into
or
aam
aad
cmpb
ljmp
pop
and
add
push
and
add
jbe
mov
push
fimuls
push
cmp
dec
mov
imul
in
push
out
push
xchg
hlt
int
out
es
and
addb
cld
adc
push
pusha
cmpsl
lcall
add
lds
cmp
shr
add
push
pop
push
sub
push
mov
inc
jbe
cltd
ret
scas
stos
xor
add
adc
xor
cmp
jecxz
addr16
in
ret
movsb
into
std
movsb
lock
fcoml
aas
pop
call
push
lret
outsl
insl
jbe
cltd
cmp
pop
repz
mov
mov
push
stc
out
add
xor
cltd
add
or
sub
push
movsl
xchg
add
negl
movsb
and
push
dec
sahf
in
ss
adc
add
cmc
push
daa
lods
xor
cmpsl
mov
nop
jecxz
add
popa
xchg
ret
sbb
shll
xor
into
add
lods
popf
nop
fmull
add
lea
shrb
test
pop
mov
add
cmp
add
test
mov
cs
push
add
jae
mov
push
add
push
mov
aas
bound
mov
push
loop
fmull
clc
dec
test
pop
enter
ret
or
shrb
push
rolb
xchg
sbb
fldl
sub
cld
es
pop
addr16
xchg
and
jl
adc
mov
mov
aad
aaa
pop
fildl
mov
repz
cmp
sbb
pop
dec
mov
pop
cmp
add
and
dec
mov
cmc
jl
roll
ret
and
or
sub
outsb
push
xchg
xlat
adc
cmp
jnp
lods
and
xchg
dec
mov
mov
mov
jne
test
out
in
cmp
dec
outsl
int3
push
sbb
jg
jmp
pop
cmc
dec
imul
sub
add
nop
inc
aaa
sub
call
pop
push
or
inc
testb
cmpb
xchg
dec
pcmpgtw
int
arpl
sarb
enter
xchg
mov
sbb
mov
das
fwait
push
add
xor
mov
andl
add
fwait
aam
mov
stc
andl
mov
movsl
cmp
xchg
cmpsl
jge
mov
push
fwait
not
rorb
and
bound
add
mov
das
ret
xchg
int3
jnp
add
mov
add
sahf
jg
out
sbbb
imul
sbb
subl
or
add
cmp
mov
or
or
not
mov
add
rorl
pop
out
lock
pop
or
jecxz
repz
scas
icebp
and
cmp
xchg
inc
pop
popa
cmp
dec
lea
jmp
mov
daa
repnz
sub
cmp
nop
adc
jae
add
push
fdivs
rcrb
repz
mov
stos
dec
sub
add
sahf
push
cmpsb
sbbb
fdivl
xlat
dec
pop
loope
and
cmovbe
ja
push
sbb
jl
jae
nop
movsb
add
bound
dec
cmp
lret
add
pop
inc
mov
inc
jae
adc
and
inc
sbb
sub
loope
mov
or
mov
dec
subb
or
mov
xchg
lea
jno
sub
pushl
pop
insl
xchg
loopne
inc
testb
divl
aaa
xor
and
inc
fsubrs
data16
out
mov
pop
gs
arpl
aad
cli
imul
pop
pop
add
inc
add
add
mov
sbb
pop
repz
lds
pusha
add
dec
inc
ja
sub
pop
das
mov
mov
insb
pop
push
dec
movsb
int
xchg
mov
inc
cld
xchg
mov
ds
inc
sbb
ret
addl
inc
shlb
movsb
jbe
cmp
and
sbb
sbbb
jo
loopne
divl
add
push
add
pop
cs
mov
pop
xchg
outsl
add
mov
enter
int3
push
jl
xchg
and
adc
mov
xchg
or
inc
and
rclb
js
and
adc
stos
or
adc
jo
pop
mov
ss
mov
ds
jge
mov
mov
add
dec
fwait
les
push
or
test
mov
shrb
mov
pop
pop
xlat
aaa
adc
shr
push
setb
xorb
sub
add
out
xor
mov
pop
mov
or
add
aas
mov
mov
sub
lods
loope
adc
mov
add
sbb
sbb
jbe
add
imul
cmp
sbb
je
jl
adcb
cli
cmp
sbb
fidivl
dec
decb
dec
mov
je
ja
sub
mov
rolb
sbb
inc
call
or
and
inc
pop
mov
fstps
insl
addr16
and
inc
dec
add
and
out
mov
sbb
add
lds
imul
js
hlt
shr
xor
mov
cli
nop
push
dec
lock
aad
jge
sbb
xchg
add
divl
add
lahf
nop
jbe
add
je
mov
xchg
das
sub
scas
sti
xchg
sbb
add
pop
lcall
scas
sti
xchg
pop
outsb
push
xchg
subb
mov
pushf
dec
adc
arpl
sbb
xchg
pop
xchg
sahf
sti
xchg
pop
mov
inc
mov
popf
and
sub
xchg
insb
sbb
imul
add
mov
xchg
ljmp
mov
or
push
mov
or
pop
cltd
sbb
int
mov
jns
adc
sbb
xchg
stos
add
lret
fidivrs
pop
inc
inc
fadd
lods
pushf
jge
sbb
cmp
push
in
and
imul
pop
mov
add
mov
dec
push
jo
sbb
fisttpl
mov
lods
inc
inc
jl
cmp
pushf
add
lret
xor
mov
sub
sub
or
ret
pop
xchg
std
inc
jne
cmp
lret
push
nop
add
or
jle
aas
push
xchg
addb
orb
pop
popa
adc
pushf
mov
addb
or
push
out
push
jge
add
push
rolb
or
inc
lret
add
lock
lret
pop
inc
sahf
pop
subb
mov
aaa
xchg
scas
cmpb
sub
imul
and
dec
adc
push
insb
pop
inc
adc
in
jecxz
and
add
in
mov
idivb
inc
fs
xchg
mov
add
and
and
mov
mov
pop
test
and
std
adc
pop
inc
add
pop
inc
mov
add
adc
add
and
ljmp
hlt
rolb
fucomi
cld
addl
jb
cmpsl
in
mov
fbstp
push
scas
stos
in
lock
stos
add
pop
testl
and
mov
loopne
push
add
cs
ret
sub
add
loopne
popa
jl
lock
or
pop
jne
shll
push
lcall
sbb
ret
cmpsb
mov
test
jp
rclb
in
and
fwait
xchg
cs
xchg
mov
scas
mov
add
movsl
loop
out
push
jle
shrb
pop
popa
jge
lahf
sbb
add
outsl
sub
repz
push
xchg
je
add
insl
inc
fildl
insb
pushf
pop
push
cwtl
add
push
and
enter
loope
mov
dec
push
sbb
mov
add
add
jecxz
lock
or
inc
xor
std
pop
test
clc
ret
adc
outsb
jns
jno
cmpsb
add
sarl
pop
pop
pop
in
ja
mov
xchg
cld
fisttps
ret
or
faddp
lret
add
sub
enter
shrb
orb
mov
jg
div
add
xor
and
dec
mov
arpl
and
mov
inc
cmpsl
test
pop
dec
clc
pop
add
mov
inc
je
or
notl
mov
add
clc
adcl
and
test
mov
out
cmp
cli
sbb
stc
fdiv
pop
and
mov
adc
jp
add
lock
lods
jns
out
pop
push
jge
pop
inc
testb
fiadds
je
scas
addb
adc
push
xchg
mov
icebp
xor
jp
add
mov
test
mov
andb
mov
cli
sub
xchg
jmp
imul
sbb
rolb
push
or
inc
sub
mov
xchg
icebp
stos
cmp
popl
jmp
push
popf
test
or
sbb
scas
sbb
into
fdivrs
movq
movsb
mov
jne
mov
add
dec
mov
pop
loop
mov
mov
lock
push
cltd
test
sbb
jne
fisubrs
or
add
jp
lret
scas
add
inc
pop
xchg
cmp
movsl
add
jmp
pop
adc
shl
push
cmp
push
lods
inc
pop
rol
and
mov
mov
push
add
test
out
mov
fcompl
xchg
rclb
clc
add
xchg
mov
outsl
add
bound
add
js
aaa
and
fdivrl
mov
sbb
nop
ret
call
sbb
enter
add
pop
jb
rcrb
ret
pushf
xchg
int3
xlat
fs
add
dec
decl
cs
jp
lcall
cmpsb
inc
sbb
mov
cltd
les
mov
pop
push
hlt
inc
xor
push
push
sbb
rclb
xchg
ja
sahf
and
dec
or
dec
lret
adc
pop
mov
inc
jae
test
rcrl
adc
addr16
cmp
rolb
sbb
out
loope
cmp
xor
mov
push
roll
in
in
pusha
xchg
bound
ljmp
push
ja
hlt
out
mov
dec
insl
scas
adc
sbbl
mov
mov
enter
pop
sahf
cmp
inc
xchg
pusha
sbb
dec
add
cmp
adc
adc
or
stos
ret
or
add
mov
loope
mov
lahf
add
jo
rclb
pop
dec
mov
addr16
in
adc
jmp
push
jo
and
mov
adc
sti
fnstenv
addb
popf
mov
fisttpl
iret
add
push
in
jge
cwtl
mov
pushf
add
pop
fwait
jbe
in
clc
push
loop
push
roll
ret
or
xchg
sbb
in
enter
add
in
xchg
adc
clc
sbb
push
add
insb
cwtl
lahf
and
xor
mov
movsb
pop
sub
movsl
add
js
test
jno
push
xor
fwait
mov
fdivl
mov
out
xor
cmp
lods
pusha
dec
es
add
les
adc
cmp
movsl
ljmp
pushf
gs
add
les
add
aam
mov
sub
jecxz
es
jns
orb
add
pop
mov
xor
sub
pusha
lea
xor
mov
mov
pop
xlat
filds
lods
and
add
xlat
push
mov
inc
dec
fiaddl
ja
add
loope
jo
incb
sub
hlt
xor
mov
stos
loopne
adc
lret
loope
add
inc
cld
xchg
inc
mov
inc
add
and
sahf
jns
dec
jl
push
add
cld
loop
pop
iret
add
add
ja
mov
insl
sbb
add
fcoml
sti
mov
sbb
out
xchg
mov
or
pop
pop
ja
add
daa
gs
push
adc
shll
sub
cmp
pushf
add
cli
or
or
enter
data16
loopne
fadds
xchg
ret
add
inc
xor
repnz
or
sub
add
adc
xorb
inc
insl
jb
loopne
js
sub
pop
cmp
xchg
adc
mov
mov
sbb
push
ss
loopne
in
imulb
orb
xchg
pop
xchg
lock
out
mov
sub
pop
cmp
pop
rcrl
test
or
add
mov
push
jo
push
fsts
cmp
lret
iret
adc
add
dec
test
popa
fs
add
push
jo
push
pop
jo
sbb
xor
pop
sbb
cmp
and
pusha
ja
mov
test
pop
or
mov
or
sub
sbb
mov
or
add
mov
dec
mov
das
xchg
sbb
imul
xor
mov
pop
out
fs
xor
mov
sbb
mov
inc
andl
das
push
xchg
and
sbb
xor
mov
stos
aas
clc
xchg
add
xor
orb
dec
adc
sbb
pop
int
sbb
loop
lock
jb
and
adc
lcall
mov
and
push
dec
jmp
cmp
nop
mov
cli
inc
push
cld
inc
add
mov
inc
add
addr16
dec
cwtl
lock
add
mov
aad
pop
mov
in
and
sti
xor
dec
lock
clc
mov
nop
add
pop
mov
and
or
inc
pop
and
add
pop
xchg
clc
dec
push
add
inc
js
stos
repnz
sub
mov
mov
xor
sbb
mov
xchg
or
rcrb
scas
or
loopne
je
dec
add
push
dec
adc
repz
into
nop
add
rcrb
xchg
adcl
sahf
aas
call
xchg
into
lods
sub
jns
fisttpl
cmc
lcall
in
cmpsb
cmp
cli
add
xchg
sahf
push
popf
mov
imul
xchg
lret
je
icebp
insb
add
jg
adc
pop
adc
cmp
rol
clc
icebp
inc
fildl
pop
push
xchg
xorl
loop
push
clc
add
lock
mov
cs
sub
sbb
add
jge
shll
icebp
xchg
jb
loopne
add
aaa
jecxz
cmp
push
add
xor
sarb
mov
andb
push
push
adc
push
loopne
or
loopne
lret
in
fidivl
fstpt
adc
jl
jp
inc
lods
xlat
add
inc
or
sbb
push
roll
xor
scas
pop
cmp
pop
mov
jg
add
int
jmp
cld
mov
add
mov
jge
std
mov
add
stos
leave
push
add
push
adc
xchg
insl
add
pop
jl
ss
or
add
xchg
xor
push
jnp
add
inc
popf
fimuls
mov
cmpsl
or
inc
sarb
jne
add
hlt
inc
jo
das
add
or
loop
add
cmp
imul
inc
mov
cmp
mov
add
sub
ds
addr16
add
mov
xor
add
pop
push
xlat
std
mov
es
in
adc
mov
test
cmp
add
repnz
pushf
js
or
jl
popa
dec
and
add
fistpl
aas
add
std
mov
pop
sbb
push
lock
fisttpll
push
cmp
push
addr16
cmp
pop
daa
cli
loopne
adc
add
dec
imulb
ljmp
mov
test
ud1
lahf
adc
jno
push
repnz
add
scas
clc
push
imul
push
push
push
and
je
add
sub
test
and
sti
add
pop
cmp
jb
mov
insl
push
inc
add
mov
mov
jno
cmpsb
pop
movsl
int
dec
adc
xor
mov
cltd
aas
popa
lods
xor
adc
jecxz
dec
mov
dec
imul
cmp
mov
movsb
out
mov
leave
mov
andb
mov
rcr
dec
sub
add
shr
je
addb
sbb
jp
and
repnz
push
call
movsb
or
xor
jmp
jns
jp
jo
add
mov
int
fsubrp
pop
insl
faddl
push
out
push
push
xlat
orl
jb
and
or
sub
cmc
mov
ja
add
popf
inc
aas
gs
add
into
pop
mov
cmovp
ljmp
cmpsl
add
scas
mov
cmp
mov
dec
loope
lahf
mov
xor
push
sbb
loopne
mov
and
dec
mov
mov
inc
xchg
cltd
lods
dec
xchg
mov
push
pop
add
dec
sbb
out
dec
xor
and
cmc
out
outsb
cmp
addl
sub
mov
cli
add
xchg
mov
or
pop
push
rolb
jo
rsqrtps
outsl
lods
sbb
sbb
xor
jb
push
fwait
xor
adcb
loope
push
pop
add
les
jp
sub
xorb
cmpsb
push
pusha
mov
fildl
inc
jmp
rorl
dec
sub
lock
jp
add
popa
mov
jp
jge
pop
add
movsl
push
or
push
sti
or
test
xor
mov
js
js
hlt
adc
cld
sahf
call
loopne
fwait
insl
and
or
inc
in
dec
dec
or
aad
cmc
adc
and
mov
mov
loopne
bound
mov
clc
outsb
and
fstpl
add
xor
mov
ror
and
xchg
push
add
in
faddl
mov
inc
lock
pop
pop
sbbb
or
adc
aad
mov
dec
sbb
jae
or
add
movsl
ss
add
hlt
sahf
mov
leave
insl
and
nop
ror
lea
sub
pop
test
ds
pop
add
into
pop
push
ret
mov
lret
aas
pushf
and
cli
out
addr16
mov
mov
push
xchg
ss
mov
sub
dec
and
fwait
dec
cmp
sub
je
inc
mov
cs
xor
xor
and
xchg
cld
mov
movsb
mov
xchg
and
xchg
mov
fs
hlt
ja
jo
dec
nop
cld
add
lock
cmp
test
push
mov
enter
aas
sbb
and
mov
ss
push
jno
aad
sbbb
add
cltd
cmp
int3
add
ds
cmp
int
or
neg
or
mov
cmp
out
mov
enter
add
adc
outsl
add
test
adc
movsb
adc
shll
loope
and
push
add
lock
dec
xor
sbb
push
push
out
add
test
add
in
jbe
fmuls
add
xchg
mov
add
fldl
fisubrs
lcall
aas
dec
shlb
jg
cmp
stos
icebp
xchg
sbbb
xchg
inc
popf
lock
pop
stos
xor
fnstcw
sti
xchg
repnz
shrb
add
cwtl
int3
mov
popa
push
xor
dec
mov
daa
cld
pop
add
jmp
js
insl
leave
add
jp
bound
mov
and
test
mov
outsl
int3
cli
aad
fs
mov
xchg
jmp
daa
xchg
popa
adc
push
or
or
add
adcl
out
hlt
mov
stc
xchg
lret
xchg
cld
out
cmp
add
inc
lods
icebp
mov
jo
add
jge
cmc
add
lods
aas
addr16
add
push
xor
add
jle
jae
fucomi
add
jl
adc
or
in
sbb
dec
pop
add
cwtl
and
das
sub
inc
sarb
add
jae
push
add
out
inc
xor
lret
xlat
xchg
rclb
clc
lods
sub
std
sub
add
roll
inc
sub
pop
pop
aad
mov
add
int3
inc
ret
inc
loopne
sub
jnp
add
in
clc
jmp
fnsave
mov
mov
inc
popf
cmp
and
push
inc
adc
push
adc
js
cld
aam
addr16
ss
outsb
pop
je
adcb
std
mov
pop
add
ret
and
or
xor
and
and
mov
nop
mov
add
push
out
adc
rolb
dec
in
je
cmp
scas
or
rolb
xchg
inc
add
pop
out
xchg
repz
loope
mov
adc
sti
jmp
and
mov
jle
cwtl
pop
or
int
dec
jo
cmp
test
add
or
loop
add
mov
xor
push
sub
movsl
or
add
movsl
add
lret
fcom
stos
testb
pop
int3
jg
insb
sbb
mov
add
dec
inc
cmp
push
pop
bound
das
jo
xor
xor
pop
push
pop
fstps
mov
mull
add
fsubl
dec
out
push
subl
popf
scas
adc
xor
mov
popa
inc
or
addb
xor
iret
fisttpll
cmp
mov
dec
add
jb
iret
lods
add
push
sahf
mov
sbb
cwtl
les
xchg
shll
or
adc
add
insl
stc
jle
outsl
lret
out
divl
idivb
lcall
lods
out
add
ret
imul
cltd
or
imul
clc
add
jb
push
outsb
mov
add
popf
in
test
sbb
loope
xor
adc
pusha
dec
sub
pop
inc
scas
aaa
push
int
xor
push
mov
mov
add
xor
xorl
addr16
push
aam
inc
leave
imul
jno
sbb
lahf
push
fimuls
out
and
pop
add
cmpsb
dec
mov
sbb
das
add
jle
add
je
and
test
add
out
inc
adc
dec
stos
cmp
scas
add
pop
pop
push
add
xor
add
xchg
fwait
mov
pop
or
test
add
sub
shll
inc
xor
sti
and
pusha
add
cmpsb
lret
push
add
dec
into
push
cmp
mov
mov
nop
pop
jmp
pop
test
lock
push
or
jne
cmp
lods
add
mov
mov
xchg
cwtl
loopne
jp
fistpll
mov
add
xor
add
jecxz
add
push
fidivrl
bound
add
sbb
push
dec
adc
add
push
xchg
int3
clc
pop
and
clc
out
mov
fs
orb
sub
mov
xor
add
outsl
rcrb
jo
push
cvtps2pd
movsb
inc
js
xchg
test
xor
cmp
clc
sbb
add
outsb
dec
inc
lret
gs
shrl
inc
hlt
mov
aas
pushf
fdivs
xor
add
cmp
fists
mov
add
test
or
ss
sub
push
jg
adc
out
add
inc
inc
dec
jno
std
add
scas
sub
sbb
out
xor
xchg
add
inc
icebp
popa
inc
clc
add
imull
mov
insl
sbb
add
rcrb
addr16
cmp
cmc
mov
in
add
subl
test
and
icebp
push
inc
or
sbb
ds
sub
mov
add
mov
mov
movsb
xorb
popf
sub
out
addb
fs
push
xor
popa
insb
xchg
fistpll
repz
adc
push
fisubrl
add
addr16
cmpsl
mov
pop
dec
faddl
mov
sub
roll
aas
or
call
call
adc
inc
aam
dec
adc
mov
aaa
xor
add
or
insb
add
inc
sbb
add
sub
add
jne
sub
sub
add
ds
push
out
sub
shlb
jecxz
adc
pop
cmp
insl
xorb
add
mov
fldt
and
and
leave
cmp
hlt
fisttps
cwtl
sbb
aaa
jne
shrl
out
pop
pop
ja
pop
jg
aaa
in
and
mov
mov
xor
sbb
rorl
leave
enter
data16
imul
daa
inc
add
mov
xchg
mov
cmpb
inc
pop
rorl
cmpsb
shrb
cvtps2pd
in
mov
inc
repz
add
shrb
add
fmuls
dec
sub
mov
inc
movsb
adc
pop
sub
repnz
flds
push
add
andl
dec
pop
add
add
lock
loop
mov
xor
fs
add
sbb
adc
jecxz
add
inc
pop
add
pushf
int
lcall
mov
jns
mov
scas
ljmp
ret
lret
fistl
and
je
pushf
jne
adc
mov
sub
add
in
psrlw
mov
in
test
xorl
or
mov
sbb
call
fdivr
pop
jmp
xor
dec
mov
pop
or
shll
inc
out
add
addr16
push
xchg
xchg
fs
or
loop
fldl
adc
data16
aas
xor
std
ss
and
sti
cltd
pop
pop
and
leave
inc
ret
jecxz
inc
sbb
loope
test
jg
fcomps
add
in
popa
in
clc
add
mov
inc
or
push
scas
mov
pop
add
dec
test
in
loop
fwait
mov
mov
rorl
add
popf
dec
jmp
dec
enter
rcr
ljmp
and
fistps
fdivrs
mov
stc
setle
mov
das
mov
sbb
mov
add
pop
cs
jns
jo
pop
iret
jb
mov
inc
dec
mull
add
sbb
fisubrs
add
scas
add
adc
popf
jmp
sahf
test
xchg
rdtsc
jnp
adc
je
xchg
movsl
cmp
mov
into
mov
push
jmp
outsb
sbb
test
mov
ret
inc
push
add
outsb
cmp
add
adc
sahf
sbb
cs
lret
adc
aas
lcall
rolb
sub
sbb
jg
cmp
dec
push
add
rcrb
outsl
cmp
inc
fs
add
xchg
add
mov
mov
xlat
call
cs
js
inc
popf
cwtl
add
outsb
orl
rcr
mov
test
data16
jl
outsb
dec
xor
nop
cmp
pop
inc
cmpsl
xor
cwtl
push
cld
lock
out
aad
fstpl
mov
test
scas
push
add
or
rclb
xchg
les
push
push
sti
out
inc
negl
dec
cmp
hlt
into
add
jecxz
lret
or
dec
pusha
fs
and
and
data16
ljmp
lds
xor
mov
mov
xor
enter
negl
call
popl
sub
mov
jmp
sbb
xchg
pop
stos
shl
add
xor
inc
jno
adcb
bnd
add
addr16
or
mov
xchg
xlat
test
inc
cli
add
mov
lret
in
mov
repz
push
inc
pop
rorb
test
dec
mov
call
sbbb
clc
scas
loop
or
fcoms
dec
mov
push
iret
xchg
mov
pop
xchg
outsb
daa
negb
test
add
cld
stc
or
iret
arpl
xor
dec
movb
rcrl
and
xor
cld
jae
iret
mov
ds
xchg
sub
sahf
arpl
mov
clc
inc
fs
xor
shl
push
jp
add
rcrb
dec
popa
dec
sub
pusha
loopne
dec
lock
addb
xor
fistpl
and
push
jl
int
xchg
inc
insl
push
in
or
insb
mov
loope
add
or
mov
arpl
ret
add
jne,pn
add
or
xor
sti
movsb
add
push
xor
pop
leave
and
cmp
and
out
push
fs
add
xchg
cli
insl
lahf
add
sbb
mov
and
and
sti
push
insb
jno
mov
repnz
push
add
cmpsl
js
cmp
mov
xor
dec
pop
std
mov
push
jnp
sbbb
xchg
or
dec
ret
mov
add
loop
xor
and
and
add
testl
addb
jecxz
rolb
icebp
pusha
outsb
sub
cmp
repnz
lock
mov
and
imul
add
ret
ljmp
pusha
jno
insb
xchg
pop
lret
cld
loopne
pop
adc
push
cmp
mov
pop
test
add
and
and
and
rcll
lcall
and
mov
stc
inc
shrb
xchg
test
mov
cmc
or
inc
and
inc
cmpsl
mov
adc
inc
mov
test
mov
and
adc
mov
jb
cmpsl
fiadds
out
pushf
in
adc
stos
out
add
orb
pop
rolb
cmpsl
mov
rcrb
add
cmp
cmp
cmpb
or
mov
jge
add
add
pop
aad
testb
lahf
push
push
xchg
cmc
sbb
pop
enter
setnp
out
pop
stos
rcrb
mov
loopne
fucom
rcrb
stos
les
call
inc
fldl
xor
cwtl
add
pop
lea
nop
sub
push
scas
mov
mov
mov
ss
sarb
add
xchg
ja
cld
jne
add
xchg
adc
shll
cmp
inc
sbb
enter
push
add
loopne
cld
inc
add
pop
out
popf
pop
clc
stos
insl
jnp
pop
lcall
mov
mov
icebp
sbb
jl
sub
sub
pop
popf
insb
cmp
inc
clc
sbb
mov
bound
lret
jae
out
pop
sbb
movsb
xchg
les
jle
sub
andb
sti
sub
test
mov
cs
sbb
sub
btc
cmp
mov
lret
xor
lcall
mov
into
xor
and
mov
add
pusha
mov
scas
xorl
and
aaa
xor
cmp
enter
adc
add
cltd
lret
inc
push
add
adc
fisubl
add
push
cmp
xor
push
xchg
pop
repnz
inc
mov
mov
out
movsl
pop
or
testb
cli
jnp
lcall
cld
mov
inc
lea
adc
lods
jl
sub
inc
mov
fnsave
pop
add
jo
and
pop
fs
pushf
cmpsl
mov
or
cmpsb
clc
popa
icebp
repz
out
push
adc
jge
lret
jo
cmc
sbb
test
lahf
and
sub
and
sbb
xchg
inc
add
orb
add
ljmp
xor
out
mov
test
xchg
and
in
setge
or
pusha
fadds
jmp
pop
inc
int
xchg
mov
loopne
inc
jnp
add
and
and
or
cmp
xchg
popf
jge
pop
hlt
stos
add
push
addr16
les
call
loopne
imul
sbb
pushf
add
call
or
fists
insb
or
inc
add
xchg
lds
dec
mov
fdivs
jl
add
jge
pop
movsb
sarb
adcl
mov
int
into
ret
dec
lret
mov
add
adc
mov
mov
pop
lahf
fstl
loopne
pop
add
sub
rol
jbe
and
das
xor
or
add
push
push
testl
mov
hlt
ds
add
and
aas
cld
ljmp
ficoms
dec
iret
rolb
stc
incl
adc
cmp
add
and
inc
pop
lea
pop
sbb
inc
mov
xlat
add
cltd
add
pop
pop
addr16
add
sbb
clc
adc
mov
pop
inc
pushf
mull
jo
loop
rcrl
xorb
in
add
mov
scas
mov
aam
std
xorl
jae
add
cltd
int
repnz
call
data16
push
xchg
ljmp
or
add
sbbb
add
test
xchg
sbb
dec
aad
in
ljmp
add
push
movsb
mov
sbbb
test
call
lods
xor
cmp
out
push
cmpb
xor
sar
add
push
cmpsl
es
mov
add
sbbl
add
push
test
and
inc
add
xor
pusha
add
loopne
inc
test
pop
out
test
or
xchg
add
cmp
es
out
jb
loop
xchg
out
xchg
mov
mov
xor
sub
add
cwtl
shr
add
add
jmp
inc
add
xor
xchg
iret
ret
mov
lods
in
xor
ljmp
je
pop
add
daa
mov
push
in
add
iret
in
arpl
sbb
pop
shl
jnp
add
stos
mov
mov
push
imul
dec
mov
xlat
add
cmp
ret
std
fsubs
push
xchg
xchg
movb
lds
idivl
jmp
cmp
add
sbb
adc
push
push
shlb
and
loopne
pop
cmc
add
insb
frstor
sbb
adc
je
add
push
es
in
add
mov
dec
int3
inc
cmpsl
mov
mov
inc
dec
cltd
inc
mov
and
jl
ljmp
in
or
mov
cmc
nop
pushf
mov
insb
add
and
push
sub
inc
fcoms
jno
movaps
sub
pushf
enter
imul
filds
gs
push
add
out
mov
and
dec
jb
test
fidivrs
add
pop
loopne
add
xor
js
movsb
xchg
mov
sub
adc
jecxz
push
add
add
jo
push
hlt
popf
cli
lea
add
jl
popa
mov
lock
je
add
ret
mov
add
loopne
loopne
outsb
pop
fadds
cs
mov
mov
in
aam
jo
add
sbb
xchg
ficoml
movsl
cmp
in
inc
dec
lea
jge
add
sbb
xchg
dec
into
xchg
ljmp
js
push
lret
inc
ret
sahf
cmc
xorb
mov
mov
and
jo
pop
or
push
jne
daa
out
add
aam
xchg
in
pop
loopne
add
loop
mov
jno
inc
popa
inc
lret
add
mov
mov
adc
ficompl
inc
iret
enter
jge
lods
test
cmp
adc
ljmp
and
out
inc
jmp
sbbb
inc
cmpsb
sahf
or
out
sar
mov
pop
out
incl
sbb
cmove
loop
lret
lahf
mov
outsl
inc
out
stos
addl
pop
pop
cmp
mov
sub
or
int
cmp
cmpb
and
mov
sub
inc
pop
add
xor
add
add
je
xchg
add
push
subb
test
test
das
add
loope
in
jecxz
add
mov
inc
fwait
mov
call
pop
stos
ja
dec
pop
mov
dec
add
stos
shlb
rolb
mov
ret
pop
mov
adc
lret
addr16
jle
mov
stos
sub
or
sub
xor
out
ja
push
imul
and
xchg
test
enter
mov
xor
cld
adc
mov
mov
outsb
insb
aaa
add
cmp
clc
stos
dec
int3
and
xchg
mov
dec
jge
cmp
fildl
stos
mov
int3
orl
mov
cwtl
pop
daa
cmp
push
xchg
mov
lret
cli
add
xchg
cmp
shrb
lods
push
sbb
sbb
adc
jmp
xchg
or
out
int3
dec
jl
lock
rorl
or
test
movl
sbb
xchg
sub
int3
xchg
ret
add
test
mov
or
push
enter
xchg
dec
push
or
addr16
and
mov
add
jmp
loopne
sti
mov
cmp
aas
pop
mov
mov
add
dec
out
mov
mov
mov
add
stc
adc
sbb
movsb
jns
repnz
mov
popl
jmp
pop
inc
mov
outsb
add
pusha
lret
pop
add
fdivs
lds
inc
pop
bound
popa
and
mov
pusha
add
ficomps
cmp
push
adc
adc
mov
pushf
xchg
mov
mov
out
rorl
scas
pop
xor
test
loope
add
lea
repnz
iret
add
sub
sub
bsf
cmp
cltd
cmp
sub
loopne
mov
sbbb
js
mov
lea
dec
lds
ret
addr16
pop
test
js
add
sti
and
sub
push
addr16
test
lret
fiaddl
inc
out
nop
push
cmpb
sbb
sar
in
and
js
pop
stos
mov
push
ds
hlt
add
test
insb
outsb
add
loopne
lahf
push
adc
fsubl
shlb
sub
popa
stc
popf
ret
push
dec
jl
adc
add
mov
add
add
cld
mov
cmc
xor
cmp
not
jne
mov
pop
dec
xchg
loopne
dec
mov
xor
pop
js
lock
mull
jl
lods
fdivl
pop
fcoml
fbld
inc
add
scas
mov
dec
jns
fisubrs
nop
jle
add
push
inc
dec
lock
nop
dec
add
pushf
in
add
hlt
pusha
fucomip
jbe
add
enter
mov
push
mov
add
or
cmp
cmp
in
sub
pop
int
sbb
jnp
sarb
or
dec
mov
jno
loope
or
enter
les
shl
adc
pop
or
mov
cs
mov
lret
aas
xor
inc
cmpsb
mov
and
pop
xchg
lock
stc
pop
jb
or
popa
call
dec
add
std
arpl
cmpsl
rcrb
push
in
xchg
xor
out
outsl
into
jmp
rcrb
cld
cmp
push
jno
fst
adc
hlt
iret
add
fsubs
xor
cwtl
add
shrl
imul
sub
mov
mov
xorl
xchg
in
mov
mov
pop
dec
lds
outsb
mov
mov
push
mov
push
daa
push
xchg
rcl
test
aas
add
sub
xchg
sbb
dec
stos
mov
cltd
mov
sti
out
sbb
fidivrs
loopne
ds
mov
add
mov
fsubrs
andl
js
dec
fildl
nop
test
mov
mov
ljmp
cmp
lock
or
ret
mov
dec
add
int
icebp
ret
pusha
sbb
add
ror
ret
popf
stc
aam
adc
nop
sub
into
inc
ljmp
dec
mov
add
add
push
mov
sbb
and
mov
testl
sub
loope
je
cmp
ret
adcl
in
or
jge
das
or
loop
adc
sbb
js
sarl
or
lcall
xchg
leave
movsb
arpl
adc
adc
bound
inc
add
shl
adc
fldl
add
or
and
adc
mov
or
lock
push
adc
push
jns
notb
or
add
sarl
dec
mov
cmp
sub
sub
and
dec
add
fdivrs
add
xlat
xor
loopne
xchg
jge
pop
int3
add
es
push
ret
xor
aaa
mov
or
mov
cmp
loop
add
push
fcoms
outsb
add
dec
popf
mov
or
cmp
sarb
xchg
lea
insb
add
cli
iret
sub
push
cltd
add
bound
add
mov
inc
test
cmc
add
aam
cmp
xchg
imul
or
cltd
leave
cmp
jp
add
adc
adc
xchg
fcompl
loop
push
stc
mov
repnz
add
movl
popa
testb
add
lcall
add
rcrl
dec
scas
pop
jg
push
les
mov
cwtl
jmp
add
in
sub
aam
cmpsb
jne
mov
and
out
cld
mov
clc
shlb
add
adc
jecxz
mov
sub
mov
daa
mov
add
out
or
and
pusha
repz
jp
scas
xchg
iret
ljmp
mov
or
xchg
loop
fisttpl
sub
sbb
push
xor
les
ret
or
cmp
sbb
push
pop
inc
mov
push
add
adc
insl
test
mov
mov
pop
sub
scas
add
xchg
mov
pop
lds
cmc
xor
xchg
pop
js
cmp
ljmp
mov
and
orb
fs
xchg
mov
cmc
cld
aaa
sub
cmp
add
xor
cmp
mov
push
jmp
add
push
add
dec
stos
loopne
pushf
sbb
repz
sub
fwait
es
lahf
cmp
les
add
sbb
shlb
and
add
add
xor
ds
jl
dec
jbe
nop
mov
fistpl
add
ret
dec
push
lods
cmp
dec
mov
mov
cmp
xchg
pop
dec
rol
add
and
insb
shlb
das
iret
loopne
cmp
es
adc
and
add
xchg
xor
sbb
add
rcl
mov
or
sub
outsb
arpl
cmp
dec
insb
add
mov
call
pop
gs
aad
outsb
jl
mov
mov
dec
add
and
rcrb
dec
lahf
xchg
push
jmp
mov
addr16
mov
sbb
sti
add
push
les
inc
dec
push
rcr
mov
dec
dec
mov
leave
add
je
adc
iret
lahf
int3
jle
add
and
dec
aam
jo
loop
add
and
sbb
mov
adc
mov
mov
roll
and
shlb
jp
fs
mov
cmp
add
cltd
js
setbe
dec
lret
pusha
sbb
and
inc
rcll
aas
les
fcomps
add
xlat
test
jge
fs
loop
push
in
push
loopne
push
cmp
pop
mov
push
xchg
out
adc
cmpsb
push
sub
ret
add
rorb
hlt
add
fnsave
or
popf
aas
add
cmc
mov
cs
int3
loopne
inc
scas
jns
mov
sbb
nop
mov
or
testb
add
pop
ds
mov
adc
rcl
bound
mov
lds
stos
jo
cs
outsb
jb
mov
das
add
cltd
rolb
add
orl
in
add
add
jg
push
sbb
pop
lea
cmp
jcxz
test
dec
lea
push
call
and
add
sub
xchg
add
xchg
mov
or
lods
div
jno
mov
pop
in
cmp
or
sub
dec
add
add
ret
xor
pop
adc
jmp
add
ja
jmp
je
mov
jl
push
add
scas
sub
pushf
push
dec
cmp
cli
pusha
dec
aad
sbb
les
sbb
add
add
or
aad
cld
push
lds
and
imul
cmp
sbb
push
addb
or
fstpt
clc
xchg
movsb
in
jle
pop
inc
sahf
pusha
fistpll
daa
mov
add
inc
push
or
xchg
rcrl
add
add
repz
jae
cmp
push
mov
movl
xchg
pop
add
aam
and
add
or
add
xor
imul
fbld
js
subb
mov
mov
sbb
push
lds
xchg
or
lcall
in
loopne
ds
inc
mov
mov
scas
into
sbb
outsl
lods
add
sub
insb
fwait
push
add
adc
stos
add
pop
mov
adc
xchg
pushf
bound
sbb
xor
dec
push
int
out
jecxz
mov
dec
cltd
lods
roll
lods
xchg
jge
lods
pop
aaa
jb
sbb
iret
movsl
inc
mov
add
cmp
addl
sarb
add
jno
pop
push
and
sarb
mov
push
add
xchg
lret
hlt
out
pop
call
sbb
sub
or
shlb
je
ja
mov
push
fdivrs
bound
inc
mov
sbb
and
cwtl
test
add
cmc
repz
sbb
or
jo
jle
fwait
push
mov
mov
xor
inc
psubq
mov
jno
icebp
ret
loopne
cli
add
dec
mov
imul
sbb
xchg
cmpsl
jecxz
mov
pop
cs
add
xchg
sub
pop
cmp
add
inc
push
mov
adc
sbb
lahf
jecxz
or
push
inc
int3
ss
sbb
push
push
imul
cwtl
push
js
add
inc
pop
jp
idivl
addb
sub
sbb
lea
test
add
pop
fwait
mov
test
cmpsl
xchg
mov
jo
or
fdivrs
add
mov
push
adc
orl
gs
loopne
iret
sbb
lds
movsl
mov
in
lcall
cmpsb
dec
adc
pop
pop
add
jne
inc
jns
add
and
xchg
add
lahf
cmp
notl
add
mov
jno
pop
mov
roll
and
aas
pop
mov
clc
cmp
aam
sub
inc
jmp
test
fisubl
int3
and
inc
movsb
pop
xchg
movsl
push
lods
sbb
fsubrl
add
mov
mov
pop
add
es
xor
dec
add
xor
push
xlat
fnstcw
jge
add
dec
pop
push
sbb
mov
mov
add
adc
push
fldl
mov
nop
pop
mov
push
sbb
add
jns
add
lcall
sbb
sub
fchs
cmc
pop
add
mov
sbb
adc
inc
xchg
add
cmp
and
divl
lcall
dec
addr16
xchg
jg
pop
imul
scas
add
andl
mov
mov
test
and
out
add
mov
mov
jb
repnz
cs
inc
js
je
test
cmc
jl
add
cmp
cmp
shll
add
jae
add
ljmp
repz
mov
pop
mov
xor
daa
xchg
outsl
add
xor
inc
test
add
pop
fsubp
insb
cmp
inc
mov
mov
push
add
jecxz
das
aaa
cmp
xor
sub
repz
out
popf
dec
cmpsl
sbb
testl
cmpsb
dec
sbb
movsb
loopne
jle
xchg
aad
popa
lea
bound
stc
add
test
popf
xor
sbb
sub
cmp
sarl
add
ret
pop
lods
push
imul
mov
jno
and
ja
xor
daa
and
dec
add
jmp
inc
add
xor
loope
pop
adc
setbe
pop
outsl
inc
stos
xchg
add
push
dec
scas
les
repnz
scas
xchg
add
pop
roll
or
push
or
pop
js
loop
roll
dec
pop
icebp
add
xor
xor
gs
mov
enter
in
cmp
pop
fisttpl
mov
jb
popa
jo
xchg
sbb
add
pop
fcmovne
dec
movsb
adc
loopne
pop
add
sub
cli
cmp
xor
inc
adc
mov
int
out
das
ror
push
je
mov
xchg
out
pop
lahf
jle
add
cld
xchg
scas
push
mov
mov
adc
sbb
lock
mov
mov
mov
or
inc
xlat
adc
fucomip
or
loopne
orb
jmp
adc
les
hlt
add
push
clc
les
sub
sarl
sahf
data16
mov
mull
inc
ficomps
pusha
stc
cs
jmp
inc
fsubr
filds
inc
add
sarb
fildl
nop
add
jp
fcoms
aam
fwait
movsl
or
add
pop
cmc
mov
mov
xchg
add
sub
das
pop
loope
mul
pop
bound
stos
sbbb
add
in
cli
add
subb
int
add
mov
xchg
add
push
popf
push
push
sub
sti
add
loopne
outsb
push
bound
xchg
aam
xor
sub
sub
xor
jle
jg
or
bound
jns
add
ffreep
cmp
sbb
lods
stos
popl
and
les
xchg
sarb
push
push
shrb
js
stos
and
pop
and
jle
inc
cmp
loopne
add
lcall
mov
add
scas
jno
sti
sarb
out
lock
or
pop
mov
cld
in
andb
add
arpl
ds
inc
inc
add
les
mov
ljmp
dec
pusha
dec
add
testb
mov
and
or
inc
inc
cmp
add
jne
subb
sub
test
sahf
lret
sbb
inc
flds
lds
xchg
icebp
cli
enter
jle
cld
nop
sbb
jecxz
aam
adc
xorb
adc
ljmp
mov
jg
dec
jle
je
mov
mov
xorl
sbb
and
aas
js
pop
clc
je
mov
sub
arpl
mov
dec
pop
push
lcall
push
sub
and
insl
and
sbb
xchg
xchg
pop
cmp
mov
outsb
add
push
or
add
sar
fs
pusha
push
xor
ret
clc
stc
out
jbe
inc
jo
add
jae
repz
movsb
mov
xor
add
fmul
or
adc
xor
or
add
call
mov
cmp
aaa
dec
hlt
repz
add
sub
mov
call
cs
cld
loop
and
mov
mov
sub
cwtl
add
sbb
add
mov
insb
push
enter
addr16
fcoml
mov
sahf
push
pop
negb
and
mov
out
pop
sarb
mov
sbbb
mov
mov
and
ds
and
cmp
cmp
aas
dec
add
push
outsl
bound
cli
pop
lar
add
in
arpl
pop
sbb
cwtl
mov
and
push
mov
pop
add
add
push
or
pusha
mov
pop
inc
mov
gs
cmpsl
mov
mov
or
xor
adc
or
jle
insb
jl,pn
dec
cmp
sub
add
mov
or
cwtl
push
adc
or
test
mov
mov
imul
xor
clc
push
adc
add
scas
and
dec
in
mul
rcrb
imul
jae
sti
xor
add
lahf
adc
dec
add
mov
outsl
mov
addr16
ljmp
aaa
push
sahf
inc
pusha
adc
add
stc
mov
out
imul
icebp
or
xchg
leave
pop
ja
sbb
cmp
les
inc
push
xor
sbb
or
test
pop
inc
faddl
jae
pop
ret
cmpsl
shlb
stc
pop
dec
push
pusha
call
out
xchg
outsl
cld
stos
add
std
leave
ret
fsubrl
flds
mov
jmp
push
mov
popa
shlb
pop
popf
test
mov
push
paddusb
mov
enter
lcall
cmp
and
mov
fwait
add
in
filds
addr16
cmp
jl
daa
je
push
sbb
and
jnp
addr16
sub
lret
pushf
andb
add
call
mov
inc
lcall
and
cld
pop
add
xlat
jecxz
jl
adc
xor
mov
add
dec
pop
add
test
pushf
add
cli
cwtl
lock
push
adc
pop
in
sarl
or
dec
fs
mov
pop
aad
add
and
in
into
mov
sub
inc
adc
in
pop
rolb
loope
push
iret
cmpsl
fisttpll
push
push
push
jmp
mov
ror
cmpsl
jae
add
sbb
push
test
mov
lret
lods
ret
inc
cmp
push
popa
add
add
inc
hlt
inc
movsl
scas
outsl
pop
jg
add
inc
pop
rcll
cmovs
and
mov
out
lock
out
pop
arpl
sub
xchg
xchg
rcll
and
or
sbb
sbb
cmpsb
movsl
mov
pop
adcb
sbb
xchg
add
cmp
ljmp
cmp
int3
jmp
call
xor
inc
clc
leave
sti
add
mov
lahf
sub
rolb
adc
jge
jg
sti
pop
and
mov
faddl
rclb
popa
sahf
in
inc
pop
add
into
clc
add
pop
ret
xlat
cmc
inc
call
mov
cmpb
cmp
pop
mov
testl
push
mov
in
enter
pop
sahf
xor
out
sub
push
in
pop
mov
aam
leave
loopne
add
cmc
sub
add
xor
xor
pushf
scas
add
sti
inc
pop
inc
mov
or
jb
cmc
add
fimull
jo
pop
sbb
and
out
loope
xchg
faddl
or
add
insb
xor
add
sahf
ja
fimull
jp
das
jle
push
lock
jo
sub
pop
lahf
icebp
das
addr16
pop
push
jg
xor
xchg
rclb
subl
mov
sbb
xchg
nop
jp
jl
sbb
sub
sbb
test
pop
xor
or
pop
lret
xor
pop
insl
imull
mov
fildl
bound
sahf
jbe
inc
sbb
pop
cmpsl
xchg
and
dec
out
xbegin
jae
pop
xchg
add
push
lods
xor
stos
pop
xorb
bound
adc
call
pop
ret
shrb
push
rcrb
mov
add
jge
adc
sbb
adc
ret
xchg
add
fcompl
mov
cld
pop
stc
lds
xchg
aad
jmp
mul
add
insl
mov
fstl
mov
mov
into
add
loope
hlt
ss
xchg
dec
or
xchg
inc
mov
sub
into
mov
aas
adc
arpl
pop
add
mov
out
inc
push
icebp
decb
arpl
push
push
mov
inc
pop
adc
bound
or
inc
test
mov
push
xor
push
cli
pop
lahf
xchg
sbb
pop
sub
mov
add
out
push
xor
jns
dec
xor
xchg
nop
mov
jmp
pop
and
sbb
pusha
cmpb
js
add
cmp
sahf
mov
dec
push
push
subl
mov
xor
cmp
add
push
dec
push
out
push
xchg
jns
add
das
daa
push
lods
mov
add
cmp
mov
call
sahf
xor
js
insb
adc
mov
mov
mov
ret
mov
lret
inc
add
clc
ljmp
aas
add
and
and
push
data16
sbb
pop
xchg
sub
xor
add
hlt
sahf
and
or
jbe
or
xor
xchg
jle
pop
add
fstpt
insl
mov
or
faddl
lock
fwait
cld
fistpl
xchg
subb
or
xor
cmpl
das
and
gs
inc
push
rcrb
fbld
sarl
add
cmp
sbb
leave
sub
push
sbb
jno
ss
loope,pt
push
lock
test
mov
scas
inc
adcb
movsl
addb
sub
test
call
enter
faddl
add
or
add
lock
add
out
call
jle
mov
lahf
sahf
mov
push
xorb
in
and
mov
gs
movsb
rcrl
adcb
shl
in
add
mov
cmp
lods
je
add
pop
add
les
and
add
mov
mov
add
cmp
mov
pop
cmp
mov
adcl
add
adc
sbb
push
clc
xor
sti
leave
stos
mov
inc
or
add
sbb
add
xor
add
dec
ljmp
cmp
popa
clc
mov
test
sbb
outsl
sbb
cli
push
mov
xor
dec
mov
push
xor
add
and
add
inc
cmp
popf
add
push
out
jle
lock
add
dec
jmp
lock
xor
insl
push
inc
mov
and
mov
xor
lock
aad
cli
mov
pusha
loopne
out
add
lock
lods
push
add
cmpb
add
outsb
lahf
pushf
pop
out
add
lret
es
add
xchg
dec
cmpb
inc
cmp
subb
mov
push
push
sbb
fiadds
test
push
add
pop
adc
mov
pushf
nop
jg
push
and
inc
fidivl
sbb
rolb
add
adc
add
test
rorb
lret
jo
sub
mov
iret
push
jp
lahf
cwtl
or
jo
js
or
mov
push
sbb
adc
jp
mov
inc
jg
fwait
mov
into
cmpsb
mov
aaa
lahf
inc
mov
cmpl
add
hlt
insl
aad
mov
test
psubsw
mov
cld
dec
add
pop
lret
inc
lock
add
xor
sub
xor
orl
jnp,pt
inc
mov
xchg
dec
mov
test
and
sub
pop
fsubs
push
mov
flds
jl
ficompl
add
insb
sbb
add
mov
or
int3
ret
adc
pop
jb
std
mov
aaa
push
mov
add
pop
lcall
data16
mov
pop
mov
iret
dec
add
fimuls
add
push
les
rorl
popf
repz
add
adc
fiadds
pop
andb
popf
jmp
idiv
cmp
mov
pusha
movsl
aam
ja
and
pop
lods
jno
hlt
push
les
sub
fsub
adc
jl
not
stos
pop
pop
and
sahf
inc
mov
push
add
or
sub
sbb
jp
repz
fildl
adc
mov
inc
push
lock
rclb
jae
or
cmp
jne
add
xlat
mov
popf
add
sub
rclb
xor
cmp
add
jle
jno
add
push
jns
add
out
mov
cltd
sub
shl
cmovns
inc
sbb
sbb
movsl
jecxz
add
fisubl
pop
pop
pushf
or
push
subb
inc
push
add
and
dec
dec
sub
mov
popa
test
adc
push
in
and
cli
dec
add
dec
mov
jle
push
ret
cmp
repz
mov
jne
pop
lods
jecxz
cmp
jecxz
call
push
add
in
sub
add
xchg
push
mov
std
add
out
mov
int3
pop
lock
xor
xchg
js
filds
je
sbb
or
pop
add
jmp
outsl
add
aad
add
inc
popa
xchg
inc
inc
pusha
loopne
mov
xchg
daa
pop
xchg
jmp
fs
push
and
pusha
fistps
mov
mov
icebp
in
push
iret
jno
and
ja
sarb
or
mov
imul
rcll
inc
and
mov
or
push
loopne
xchg
js
xor
aas
cmpl
jo
adc
xor
cs
mov
jecxz
mov
mov
sbb
xor
mov
push
loopne
pop
mov
sahf
loopne
add
lea
sub
loop
add
jno
xchg
lods
sbb
daa
push
mov
mov
add
ljmp
arpl
nop
cmp
mov
push
mov
push
movsb
subb
and
ja
loop
ret
roll
lcall
pop
jmp
shl
push
pusha
test
xchg
dec
mov
pop
cmp
pop
jmp
adcb
testb
pop
add
add
jmp
push
pushf
and
ret
frstor
int
lds
jge
push
lret
pop
inc
hlt
jmp
cs
mov
cmp
orb
cmp
je
sarb
aaa
fisubrs
or
push
shl
push
sbb
jns
loop
cld
js
sarb
add
idivb
pusha
inc
add
adc
std
inc
dec
nop
lret
xor
mov
fistps
fcompl
mov
rorb
add
xchg
push
ret
mov
add
inc
shlb
jl
xchg
adc
cltd
pushf
test
adc
mov
cli
xchg
adc
add
insl
lods
xor
call
xchg
das
outsl
sti
inc
cmc
push
fcomp
add
xor
mov
sub
xchg
out
xchg
xlat
sbb
sti
push
inc
fwait
repnz
bound
mov
mov
or
mov
push
pop
std
out
ja
out
popa
rcrb
jae
stc
xchg
dec
movsb
stc
add
add
mov
pushf
ja
and
xchg
loop
or
out
cmpb
lret
push
sbb
push
push
pop
in
int3
cmp
xlat
orb
into
mov
add
repnz
fcmovbe
jns
push
add
adc
push
push
call
mov
sbbb
loope
xor
sub
or
aam
arpl
adc
data16
adc
xor
add
js
test
enter
xchg
icebp
push
sub
cltd
out
mov
add
inc
mov
add
and
inc
push
in
mov
xor
pop
std
repnz
sbb
leave
mov
shll
xchg
sub
lods
call
hlt
cli
lock
jl
pop
mov
xchg
pop
add
scas
insb
add
sbbb
add
xor
or
push
jl
and
andb
into
jae
add
pop
jecxz
add
add
push
mov
sahf
test
inc
add
and
mov
push
and
mov
cwtl
add
push
stc
push
fcomps
cmpsl
gs
movsb
add
add
mov
lcall
push
test
add
or
add
sti
jbe
jle
jl
add
and
movlps
inc
add
push
add
inc
mov
incb
pop
in
adc
dec
ja
les
add
adc
sub
jl
sbb
scas
mov
pop
dec
bound
aas
loopne
and
add
or
push
push
repz
iret
inc
jl
and
mov
stos
addb
test
mov
xchg
leave
and
or
filds
cmpl
out
fsubs
daa
into
rol
scas
add
sub
add
add
xor
push
test
ds
insb
out
add
mov
push
pop
rorw
or
jo
pop
pusha
imul
js
jmp
mov
xchg
notl
lret
add
aad
fwait
rcrb
adcb
out
mov
adc
lock
maskmovq
divl
lahf
add
push
shrl
lods
add
mov
loopne
mov
jne
outsl
dec
inc
pop
shll
icebp
js
push
shlb
push
xchg
add
sub
add
add
outsb
cmp
insb
add
jbe
test
add
fs
mov
xchg
addl
ret
ffree
push
das
add
mov
jnp
outsl
cmp
ret
test
xchg
into
add
lahf
inc
cld
and
push
add
iret
test
add
in
daa
mov
dec
test
cmpsl
add
insb
push
repnz
mov
cmp
sahf
popf
push
push
sarl
add
pop
in
or
sub
loop
xor
stos
subb
pushf
add
dec
mov
orb
cmp
lcall
cmp
cli
fldt
mov
aam
add
cs
jmp
xor
aaa
xor
test
mov
lcall
imul
lahf
mov
xor
add
mov
stos
out
movsb
insl
imul
das
sbb
inc
xor
loope
mov
adcb
mov
sub
loope
or
mov
sti
imul
mov
in
mov
test
xor
jl
sbb
bnd
icebp
lds
ss
dec
jo
dec
xchg
inc
push
insb
bound
addr16
stos
stc
push
add
push
xchg
or
xor
jo
sbb
inc
lahf
orb
xchg
dec
add
dec
sub
movsl
or
adc
push
push
push
pusha
xchg
sub
sti
xor
inc
and
or
cmpsb
mov
outsb
sbb
adc
mov
ret
xchg
cmpsb
ljmp
std
mov
stos
repnz
xlat
pop
aaa
inc
pop
adc
xor
in
add
push
mov
xchg
or
dec
xorb
fcmovb
or
dec
mov
stos
sti
int3
sbb
cmpb
daa
in
pusha
cmpsb
mov
add
and
or
call
nop
ds
jle
and
xor
cmp
jns
push
dec
push
xchg
jnp
fdivrl
mov
sti
xchg
lods
xchg
outsb
shrd
leave
sub
into
add
jge
sbb
or
cmp
xchg
sbb
aas
pop
loop
jg
adc
in
and
rcll
push
outsl
repnz
loope
xchg
adc
xchg
rorb
mov
sub
shll
call
lods
xorb
jnp
hlt
jns
push
cmp
in
xchg
push
inc
cmp
cmp
add
pop
jbe
pusha
push
dec
xchg
stos
mov
add
push
aaa
cld
hlt
add
add
outsb
sti
test
out
adc
lea
inc
sub
dec
adc
add
mov
jp
lahf
add
repnz
sbb
jmp
and
mov
arpl
flds
jecxz
rorl
or
filds
and
cwtl
and
ja
out
cwtl
jge
cmpsb
pop
mov
cmpb
xor
pop
fadds
cmc
or
fs
aad
sbb
mov
mov
mov
sub
sbb
stos
jmp
loop
repz
addb
cmp
jg
xchg
pusha
sbbb
sub
cmp
shll
out
fcoms
rolb
lock
inc
pop
outsl
pop
jg
lret
mov
imul
mov
cmpps
stc
pop
sarb
iret
inc
imull
xchg
xor
adc
popa
ljmp
ja
cmpsb
in
sbb
cmp
adcl
add
dec
pop
orl
cmpsb
jp
outsb
dec
cmp
int3
xchg
in
jbe
shlb
outsb
out
inc
mov
lock
xchg
add
cmpsb
xchg
sarl
orb
cmp
lcall
inc
mov
les
inc
je
jbe,pt
cmpsb
sbb
add
xchg
pop
add
pop
jp
add
repz
inc
data16
insl
adc
into
cmp
jecxz
adc
cmp
cmpb
adc
dec
rcl
lods
add
add
pushf
jae
mov
inc
call
and
ja
xorl
out
fisubrl
adc
pop
xor
imul
add
sbb
pop
shrb
add
insl
inc
dec
cmp
mov
mov
xchg
lods
mov
sbb
loop
pop
or
mov
sub
test
test
add
fwait
lret
mov
fcomps
adc
add
sub
ret
xor
add
dec
jl
out
dec
das
xlat
mov
bound
rorb
rolb
add
shl
mov
sub
test
xor
jmp
lds
pop
add
cmpsl
fnstcw
loopne
out
rolb
les
sub
outsb
movsb
mull
dec
mov
mov
adc
adc
add
adc
loopne
movsl
jns
add
sar
mov
sti
or
aam
cltd
add
stos
fucomip
dec
outsb
aaa
add
sarl
mov
ds
imul
sti
add
movsb
dec
mov
adc
mov
xchg
nop
cmp
dec
jo
add
dec
stos
or
mov
or
add
pop
xchg
test
mov
sarb
test
mov
dec
hlt
jb
push
or
stos
out
push
daa
sub
add
pop
fcomps
add
mov
test
clc
and
xchg
xor
sbb
push
cmp
or
out
mov
xchg
lock
add
aas
ret
mov
in
mul
in
lds
leave
sbb
pop
mov
add
or
cmp
dec
ljmp
rcrb
andb
add
std
mov
push
xor
lock
and
ja
jmp
adc
xchg
fs
push
sub
les
mov
shll
dec
scas
lret
adcl
add
jns
xchg
movsl
sub
jo
ds
pop
mov
outsl
xchg
cmp
shlb
pop
push
scas
cmp
leave
pop
xlat
test
dec
loopne
push
sahf
and
movsb
sub
js
jae
pavgb
inc
adc
mov
call
pop
xchg
dec
adc
add
dec
add
outsb
adc
xchg
adc
add
mov
cld
stos
popa
xlat
add
mov
mov
jge
add
movsb
es
xor
fbstp
lock
jae
add
ljmp
jp
mov
add
imul
sub
add
aas
aaa
pop
insb
cmp
add
mov
add
gs
arpl
cmp
out
sub
into
mov
sbbb
dec
aas
adc
and
mov
repnz
addr16
std
mov
jnp
adc
jp
mov
test
add
xor
or
cmp
mov
aad
insl
add
dec
pop
add
add
jnp
mov
lcall
stos
sbbb
pop
lret
sbb
sbb
sqrtps
test
jne
mov
pushl
xor
dec
push
addb
inc
pop
sbb
ret
jmp
leave
add
sub
mov
push
lock
fdivr
add
sub
xchg
xlat
push
fldl
push
and
sbb
inc
inc
aas
loopne
stos
or
inc
out
sub
lahf
les
mov
imul
pushf
lret
cltd
ficompl
in
dec
xchg
cwtl
add
lds
cmpsl
push
sarb
dec
lock
jns
mov
jl
push
sahf
aaa
or
inc
jmp
sbb
out
cmp
xchg
push
sete
movsl
rclb
stc
mov
or
je
lea
lcall
jg
call
aam
cwtl
cmpsl
inc
test
fwait
lods
adc
push
mov
push
push
das
xor
add
out
inc
fsub
add
lret
and
or
push
push
sub
xchg
xor
lods
xchg
jl
add
mov
xor
inc
add
loop
repnz
js
rcl
mov
sbb
cmp
push
dec
int3
aam
loopne
daa
in
jae
xor
cli
pop
xor
inc
mov
cmpsb
add
jno
mov
addl
add
iret
jp
push
je
outsb
ds
or
adc
daa
aam
cmp
test
pop
mov
mov
jmp
es
in
jb
push
out
subl
in
or
xor
mov
sub
jne
sub
xor
pop
dec
xchg
pop
adc
gs
sub
mov
cmpsl
das
adc
ljmp
xor
ds
adc
jns
jmp
jecxz
inc
add
insl
inc
lods
rorl
test
mov
or
push
mov
xchg
and
add
push
mov
test
dec
rcr
jne
mov
xor
inc
pop
andps
test
jecxz
decl
mov
xchg
add
fadds
andb
sbb
xchg
out
jg
mov
inc
jne
cli
add
mov
sub
fistpll
scas
mov
out
repz
xchg
sbb
and
lahf
add
mov
push
mov
lret
and
pop
jbe
sbb
scas
add
repnz
bound
mov
mov
imul
pop
mov
gs
bnd
mov
es
add
cmp
add
or
mov
out
pop
adc
shlb
mov
outsl
mov
addr16
pop
dec
mov
jecxz
outsl
or
inc
xchg
popa
mov
add
push
aad
sahf
adc
jnp
pop
call
jb
push
ss
add
fnstcw
xchg
dec
push
or
inc
add
iret
add
pop
fisttps
test
add
xchg
adc
je
sbb
or
js
add
inc
mov
mov
adc
mov
inc
mov
shrb
xor
push
or
lods
imul
dec
jg
ficomps
mov
int
dec
cwtl
loop
loope
xchg
int3
xor
push
mov
xchg
orl
in
test
cwtl
lock
jmp
pop
and
je
dec
lods
jle
xchg
aad
jmp
into
test
rorl
loopne
cmp
ds
mov
dec
repz
clc
or
clc
pop
loope
out
xor
xchg
push
push
add
dec
icebp
cmp
push
sbb
rorb
push
push
in
add
push
dec
dec
jge
inc
or
jmp
xorl
out
mov
cmc
sbb
sbb
inc
nop
xor
in
ja
pop
fadds
loop
and
shrb
mov
lret
cmp
pushf
jns
jo
loopne
or
xchg
testb
xor
mov
lcall
arpl
mov
pusha
dec
jnp
fiadds
repz
popf
clc
in
cmp
inc
in
movsb
or
lods
and
inc
lods
inc
loopne
add
lahf
or
ret
mov
dec
dec
xor
cmpsl
push
testl
push
out
xor
cmp
test
mov
in
cmpsb
jp
inc
or
lea
pusha
shlb
dec
sahf
loop
add
push
cmp
add
rorl
insb
loope
cwtl
or
lods
xchg
clc
push
lret
add
add
popa
mov
pop
mov
maskmovq
and
push
std
sbb
and
subb
dec
xchg
or
and
mov
mov
add
add
aaa
rcll
int3
jmp
dec
sub
loop
add
int3
push
mov
enter
push
jno
push
add
fsincos
fcoms
lods
cmp
std
mov
insl
repnz
movl
negl
add
inc
push
and
std
clc
push
add
addl
lds
adc
add
jb
sbb
loope
cli
add
mov
add
inc
fadd
add
enter
xchg
xchg
icebp
out
ret
repz
fstpl
add
adc
push
test
pop
rclb
ja,pn
int3
pop
dec
jbe
pop
and
stos
add
push
in
lahf
out
call
mov
test
subl
adc
adc
bound
push
jns
adcb
and
aam
stos
cli
and
pusha
dec
adc
pmuludq
mov
cs
inc
fcomip
and
out
mov
jp
pop
jnp
fadds
sarl
lock
mov
out
cmpsb
add
inc
or
mov
sahf
sub
fldl
mov
aam
sbb
push
fsts
add
lea
xor
stc
add
pop
sbb
ret
add
push
adc
mov
mov
mov
fnclex
nop
push
or
add
js
outsl
scas
test
add
pop
out
sub
sub
add
mov
cmpsl
mov
sahf
push
or
push
dec
mov
add
in
xchg
push
sub
insl
pop
mov
mov
and
push
jge
add
out
fwait
scas
or
pop
xlat
add
in
call
pop
adc
push
mov
sbb
cmp
cmp
pop
ss
jecxz
mov
test
js
xchg
cmc
repz
add
or
cmp
into
mov
sbb
bound
cmpsl
cld
sbb
mov
inc
icebp
in
or
pop
mov
call
add
lahf
xchg
stc
mov
add
dec
shrl
imul
inc
adc
test
add
mov
mov
xchg
jno
cmp
add
inc
add
addr16
mov
pop
xor
inc
push
sbb
lods
loop
jb
cld
adc
sbb
imull
pop
dec
and
push
sub
arpl
mov
add
lods
gs
jns
add
notl
mov
adc
ljmp
jno
mov
add
cli
sbbb
add
dec
cmp
jb
or
cmp
xor
pop
dec
mov
mov
rorb
jno
add
mov
int3
daa
add
fidivs
push
or
andl
out
lahf
mov
decl
xor
fs
mov
xlat
mov
leave
add
push
nop
add
into
clc
adcb
sbb
sbb
push
xor
add
mov
dec
jmp
pushl
std
sarb
scas
bound
add
sti
movsb
xor
outsl
rcr
xchg
clc
inc
mov
jge
imul
ds
loop
fcompl
shll
add
mov
cmp
dec
cmc
adc
pop
or
clc
mov
and
mov
or
xor
cli
shlb
lcall
mov
popa
add
arpl
subl
insb
and
sbb
mov
xchg
jle
add
rclb
sub
sbb
int
sbb
mov
dec
dec
push
sub
xchg
and
mov
xchg
in
out
xchg
xor
add
jg
cltd
sbb
aas
pop
sub
or
push
push
lods
daa
ret
and
xor
cwtl
cld
add
inc
cmpsb
adc
add
jmp
add
mov
push
add
xchg
add
add
xor
adc
scas
and
push
popf
shrb
out
and
pop
push
add
mov
pop
loop
add
out
adc
cli
out
dec
dec
push
orb
arpl
cmp
mov
movl
sbb
xchg
aas
push
or
mov
mov
mov
rorb
outsb
dec
cmp
fstpl
xchg
dec
xor
mov
stos
add
mov
orb
adc
push
add
cltd
outsb
js
fdivs
ss
jg
add
ret
scas
adc
call
sub
cmpsb
or
mov
adc
hlt
add
repnz
rolb
roll
arpl
movsl
jmp
lds
xorl
cmpb
pop
rorb
push
out
insl
or
inc
je
sahf
mov
in
sub
dec
sarl
add
les
out
enter
ret
lcall
rcll
nop
and
add
loop
jle
mov
loope
adc
mov
mov
xor
aaa
jbe
push
sub
hlt
jnp
or
loopne
and
insb
pop
enter
or
push
sbb
add
adc
pop
mov
test
add
lea
jg
in
inc
dec
mov
add
ret
outsb
jbe
rcl
and
ret
pop
adc
clc
data16
adc
test
scas
inc
pushf
cmpsl
mov
push
loopne
jns
lods
push
imul
clc
insb
adc
insl
mov
in
add
aas
jp
bswap
cmp
ja
cli
jg
add
jl
push
cld
enter
nop
add
pop
lods
push
fcomps
mov
push
inc
cmp
imul
aas
jbe
add
mov
sub
sbb
jne
ja
jno
add
ret
sub
stos
movsl
add
das
sub
clc
test
inc
xchg
loope
push
xor
in
pop
mov
lret
inc
and
fs
scas
or
shrl
enter
add
sub
jae
add
movsb
pop
sub
push
clc
xchg
les
jle
punpcklwd
jne
cmpb
out
add
lods
rorl
push
sbb
rolb
cld
lahf
xchg
stos
pop
enter
paddd
pop
loop
cli
fwait
lods
aam
cmp
flds
sub
pop
push
in
movsb
xor
arpl
enter
pop
dec
test
inc
cmpsl
mov
out
jmp
add
mov
sub
mov
xchg
cmp
cmp
orb
or
sub
cwtl
xchg
std
mov
jae
or
je
lret
add
and
pop
mov
cmpl
out
std
add
imul
mov
push
xchg
sub
fwait
loopne
fists
and
aaa
pop
iret
stos
test
add
mov
xor
jb
fistpl
fistpll
add
dec
push
add
std
js
adc
xorb
out
stc
je
outsb
add
sbb
lods
add
jo
or
lcall
sbbl
or
addl
hlt
mov
rclb
dec
in
rcr
and
pusha
pop
nop
shll
add
xor
sbb
clc
mov
inc
add
lock
cmp
pop
adc
sbb
or
lds
addl
divb
test
subb
in
mov
pop
aas
xor
dec
les
push
jl
jge
aaa
rcr
sbb
push
test
int
xorb
ret
inc
adc
hlt
cmp
mov
fs
pop
mov
mov
out
lods
js
test
cmp
mov
fists
and
add
out
mov
jge
xchg
hlt
sahf
push
sbb
pop
xorb
add
lahf
mov
push
add
mov
or
addl
and
jecxz
in
push
add
mov
add
xor
jmp
adc
sub
pop
rcl
lcall
fsubp
xchg
pop
adc
mov
sub
cli
ret
and
xchg
push
je
in
add
dec
or
xor
add
std
pop
popf
fidivs
cmpb
mov
xor
sub
pop
add
imul
addb
je
sub
dec
add
call
fs
mov
into
mov
femms
inc
xchg
lock
add
push
cs
or
push
test
nop
out
loope
dec
shufps
or
add
icebp
xchg
test
xor
mov
fwait
xchg
jb
sbb
add
mov
clc
pavgw
iret
shlb
imul
cmp
add
sbb
jns
add
je
push
std
mov
repnz
sbb
pop
add
mov
cmpb
push
fsub
aad
add
fisubs
pusha
sarb
lds
sbb
fs
repnz
sub
sbb
cltd
lahf
cmpb
push
repz
aaa
test
enter
lock
repnz
jns
cmp
and
lret
xor
rclb
dec
adc
push
mov
stc
sub
jbe
xchg
les
push
pop
jl
add
add
dec
lret
sbbb
into
es
lea
nop
adc
ret
scas
jae
int
add
add
fidivrl
push
aas
repz
mov
idiv
dec
rorb
scas
pop
rolb
or
subb
bound
rcrb
repz
xchg
or
inc
sahf
push
jl
imul
test
jecxz
sbb
add
stos
push
pop
inc
les
pusha
in
outsb
sub
xchg
xor
fdivl
dec
push
add
shrl
rdmsr
pop
and
cwtl
cli
mov
add
cmp
mov
punpcklwd
lahf
mov
push
sub
sahf
sbb
hlt
jae
imul
aaa
cmp
sti
add
jl
cmc
test
or
add
pop
xor
adc
stos
lods
dec
cld
and
cmp
jae
test
dec
cmp
pop
xchg
mov
hlt
add
fisubl
les
call
in
inc
push
xchg
out
loopne
mov
or
enter
cmpsb
xor
out
pop
mov
add
stos
sbb
cmc
or
jge
insl
add
pop
dec
out
xchg
add
pop
mov
add
inc
adcl
add
or
adc
psubsb
add
test
mov
rcll
push
mov
sbb
scas
adc
inc
das
add
mov
cmpsb
cmp
cmp
pop
scas
pop
sbb
push
and
notl
stos
push
push
xchg
sbb
test
divb
scas
or
mov
add
push
ss
jns
ret
jle
daa
test
fmull
add
or
cmpsb
adc
pop
jg
inc
sub
mov
aas
test
pop
das
inc
movsb
dec
pop
mov
insl
div
cltd
or
jle
sbb
mov
xor
aas
jecxz
test
fcoml
aam
fcomps
test
in
es
inc
add
fiadds
or
xchg
jge
xchg
cmp
and
das
inc
sbb
jb
movsb
mov
pop
repz
loopne
add
aaa
mov
nop
mov
sbb
bswap
cmpsl
dec
mov
add
imul
jecxz
pop
cmp
pop
lods
adc
mov
pop
jle
pop
mov
add
xchg
daa
pop
mov
add
shl
nop
lock
adcb
mov
andb
int
cs
add
cmovno
push
and
repnz
loopw
data16
dec
fmuls
mov
sub
mov
or
mov
add
mov
in
sbb
pusha
mov
pop
fdivl
lea
nop
pop
jbe
pusha
xchg
aas
add
push
adc
pop
mov
jno
das
movb
fsubl
add
or
or
push
jno
test
cs
out
mov
in
iret
stos
invd
loop
mov
addr16
sti
push
cmpsb
dec
sub
add
jge
adc
inc
sbb
pop
pop
jne
or
jnp
call
jno
mov
je
add
cli
iret
insl
add
or
pop
popf
pusha
cs
push
dec
add
fbld
add
outsl
add
pop
pushf
cmp
cmpb
fimull
daa
add
ss
ffree
mov
subb
mov
push
add
and
pop
inc
mov
subb
add
ds
add
sahf
mov
and
xlat
aaa
add
cmp
push
in
movb
repnz
mov
or
pop
aaa
jle
dec
cmp
add
data16
add
jl
inc
add
out
dec
in
ljmp
add
mov
movsl
pop
push
movb
or
mov
and
pop
cmp
fcmovnb
scas
lds
push
mov
test
jae
xor
xor
add
cmp
dec
pop
fcmovnu
add
into
pop
pusha
pushf
pushl
add
lahf
mov
mov
fisttpl
mov
push
imul
mov
cwtl
push
inc
jnp
inc
jp
ds
or
in
jnp
or
xchg
add
and
jl,pt
je
pushf
push
or
inc
fcoms
add
xor
fildll
add
mov
in
add
mov
mov
jne
push
jno
cli
and
lock
add
or
add
adc
inc
xchg
imul
sub
add
inc
ljmp
lcall
out
lea
cmp
cwtl
mov
dec
add
mov
shlb
add
sbb
add
adc
sbb
push
jecxz
inc
push
fdivrl
cmp
jmp
or
mov
pushf
inc
stc
adc
xchg
pop
sbb
fdiv
sbb
repz
aas
xor
fiaddl
shlb
dec
xor
aam
pop
push
xchg
xchg
nop
inc
or
mov
xchg
subb
xchg
pop
add
xlat
xchg
xor
adc
pop
cmc
or
adc
fmull
nop
push
es
cmp
pop
sbb
add
push
dec
fiadds
mov
dec
xor
sub
repnz
add
add
adc
cmp
push
cmpsl
sbb
jo
inc
and
add
lret
fcmovbe
pop
fadds
add
mov
push
roll
das
mov
in
add
sarl
lock
cwtl
leave
dec
mov
adc
push
cld
dec
movsb
jle
inc
xor
addr16
sbb
loopne
push
jo
xor
xchg
int3
cmp
jp
shlb
push
sbb
push
sub
inc
cmp
pop
in
mov
xchg
subb
xchg
sbb
pop
sub
cmp
add
sbb
adc
lea
add
test
cwtl
iret
pop
loope
jecxz
sbb
add
mov
cltd
jg
add
data16
mov
mov
pop
mul
test
loope
inc
inc
sbb
int3
pop
pop
sahf
add
sub
pusha
clc
mov
outsb
rorb
mov
adc
sarb
add
gs
add
push
or
decl
ljmp
mov
addl
into
daa
inc
rorb
inc
test
cmp
rcrb
fwait
xchg
stc
mov
jae
add
cmpsl
ja
or
pusha
addl
dec
insb
rclb
aad
xor
movsl
pop
xor
cmpsb
fs
sbb
stc
dec
jge
dec
lahf
push
imul
push
mov
add
das
in
mov
pusha
mov
pop
jnp
add
test
cli
shl
add
mov
pushf
pop
jns
push
outsl
add
add
cmc
dec
stos
pusha
lock
popa
inc
dec
scas
shll
sub
stos
fsubp
popf
or
inc
dec
lahf
xor
mov
test
xchg
cmpsb
scas
xor
push
mov
int3
lea
add
add
sahf
test
mov
enter
pop
mov
and
xchg
stos
mov
mov
mov
mov
jp
div
cmp
data16
push
cmp
xchg
loop
jl
arpl
les
pop
nopl
cld
insb
add
cltd
jge
add
and
sti
addb
push
test
sahf
or
add
xchg
das
rcrb
imul
dec
rclb
push
sbb
mov
repnz
fnstenv
pusha
add
in
scas
push
cli
or
sbb
mov
add
subl
mov
xor
cld
cmp
out
push
jp
ret
mov
add
cmp
ss
bnd
ret
cmp
pop
xchg
hlt
add
mov
jmp
add
jb
jne
mov
add
dec
loopne
jne
add
dec
push
iret
pop
testb
add
jo
jb
jmp
fimuls
dec
out
add
sub
adc
das
sub
push
and
int
jo
push
jnp
clc
add
aam
mov
mov
jnp
pop
and
test
leave
sub
lods
add
icebp
int3
test
ja
shrb
fmull
or
xor
add
xor
mov
add
lret
loope
xchg
rorb
movsl
push
adc
fistps
mov
mov
adc
filds
ljmp
add
and
movsb
enter
enter
inc
mov
outsl
ret
insl
pop
aaa
lea
int
cmpsb
dec
ficoms
add
jbe
ljmp
test
add
js
subb
pop
add
cmp
cmc
sbb
add
lretw
mov
mov
mov
pop
jae
add
lock
sub
add
neg
mov
mov
add
test
dec
mov
shrb
inc
mov
mov
fmull
pushf
arpl
outsw
and
out
dec
add
mov
xchg
dec
addr16
xchg
aas
add
push
push
add
xchg
add
pop
adc
jmp
push
dec
leave
pop
rol
xchg
std
gs
test
div
xorb
sub
rclb
repz
add
lds
repnz
mov
stos
outsb
cmp
xor
add
mov
in
adc
push
or
cmpsb
add
mov
dec
inc
or
add
pusha
push
and
mov
adc
mov
stc
mov
out
fsts
or
mov
adc
arpl
lock
js
loop
mulb
and
add
arpl
adc
push
sti
add
fwait
and
add
mov
cmpsl
aas
movsb
mov
xor
sub
add
outsl
add
pop
xchg
lea
shlb
inc
pusha
add
cmp
sub
add
mov
hlt
jnp
add
call
mov
or
insl
push
aad
jge
add
sbb
hlt
xlat
sti
jo
pop
push
adc
xor
add
lods
fcmove
dec
in
or
add
mov
es
sbb
adc
lahf
adcb
push
pop
dec
sub
lock
cmp
add
adc
imul
jmp
pop
je
add
inc
mov
mov
cmpb
out
mov
cmp
add
dec
lock
mov
sub
nop
inc
gs
sbbl
cld
dec
popa
int3
jne
adc
lods
pop
pop
push
adc
add
sbb
cwtl
xchg
cmpps
and
push
add
lret
scas
mov
jmp
shll
xchg
clc
arpl
jnp
cmp
sbbb
jmp
xlat
andb
ja
mov
mov
push
in
shr
pop
or
std
or
mov
or
into
sbbb
cmp
cmp
cmpsl
sarl
mov
roll
xor
pop
push
clc
ret
pop
aas
pop
int
xor
ds
add
out
push
loopne
add
jp
jb
and
sti
xor
xchg
add
fldcw
and
push
repz
jno
sbb
icebp
add
or
lds
inc
andb
add
movsl
out
stos
in
add
lea
cld
mov
add
int
jno
mov
dec
lods
imul
xlat
xchg
test
mov
dec
cli
inc
jmp
fldt
mov
rorb
mov
invd
cmpl
inc
testb
add
lret
add
daa
jnp
mov
xchg
cmp
add
dec
arpl
in
inc
xchg
mov
push
push
js
jnp
mov
arpl
pop
inc
scas
and
cwtl
push
jno
jp
sbb
fists
ljmp
inc
xor
scas
mov
cwtl
sub
idivl
bound
les
xor
inc
push
lds
xchg
and
aaa
add
fldenv
add
cmp
cmp
loopne
adc
xor
scas
sti
test
cld
add
sarb
sbb
loope
mov
push
xchg
mov
or
add
pop
mov
jp
int3
jl
ret
arpl
paddd
lods
mov
add
add
jo
sub
mov
mov
add
inc
mov
lldt
xor
call
dec
push
jo
push
sbb
mov
pop
addr16
push
popf
inc
sbb
inc
and
cmp
add
and
pop
inc
or
xor
add
mov
jge
cwtl
lahf
imul
add
xchg
push
mov
add
or
scas
sub
cmpsl
add
sub
and
pop
icebp
sub
add
mov
movsb
ret
stos
xchg
adc
sub
pusha
add
pop
cmove
lahf
jae
add
cmp
mov
nop
or
adc
loopne
jecxz
xchg
fisubl
push
sub
lods
mov
test
pop
mov
stos
cmp
fnstenv
jo
adc
jbe
or
lret
outsb
int
sub
inc
into
jp
loopne
sbb
out
cmc
inc
mov
xchg
inc
mov
cmp
add
dec
aad
sbb
insl
sub
jbe
add
mov
adc
inc
add
gs
add
fisttps
mov
call
add
and
dec
aad
jl
aaa
xor
ss
add
pushf
rorb
decb
enter
xor
cmp
lret
xchg
int3
bound
loopne
inc
in
sbb
cmpsb
ja
sarb
test
and
ficoml
aad
add
loopne
and
mov
pushl
out
into
mov
jle
dec
movsb
adc
pop
out
add
call
lds
inc
rcrl
cmp
call
aad
jns
mov
mov
dec
iret
jno
add
add
push
ds
dec
mov
popf
xchg
orb
test
mov
add
xchg
cmp
nop
jae
sub
cmp
loope
lahf
nop
and
cmpsl
xor
cmp
insl
cmp
adc
pop
fs
mov
mov
into
push
or
cld
in
mov
xchg
fs
fmuls
add
ljmp
aam
jg
lahf
out
fldenv
xor
es
add
jle
push
mov
mov
shl
adc
or
leave
pop
scas
rolb
scas
cs
dec
mov
xor
mov
pop
sarb
out
inc
jecxz
push
aam
jle
fadd
lods
pop
movsl
add
or
adc
out
push
cltd
cmpsb
lock
push
mov
sahf
dec
xchg
mov
inc
movsl
adc
dec
add
adc
push
fidivrs
in
inc
mov
pop
aam
sahf
pop
xlat
cmpsl
sub
xor
add
cmp
pop
or
jnp
stos
fildl
mov
scas
mov
shl
pop
adc
addl
add
jno
sbb
cmpl
jns
and
sbb
or
mov
push
push
addb
rclb
jecxz
mov
xorps
pushf
inc
mov
ret
push
xor
pushf
pusha
incl
mov
dec
lret
loope
out
xchg
std
in
push
pop
jns
lahf
scas
inc
cmp
js
xlat
mov
testl
or
scas
push
movsl
clc
daa
and
jl
call
lds
pop
clc
mov
inc
out
or
inc
cmp
shrb
add
mov
enter
add
rcrl
sbb
adc
dec
lock
add
or
cld
outsl
test
stos
rcl
sahf
ja
mov
push
repnz
add
push
in
cmpsl
mov
loope
or
add
inc
jae
push
xor
push
or
sbb
in
and
dec
dec
rcl
subb
std
mov
sub
sub
filds
mov
lock
dec
out
push
stos
add
loope
loopne
add
xchg
mov
lods
loopne
popl
add
or
stc
call
adc
jns
mov
jno
pop
adc
enter
cli
adc
mov
call
cmp
sub
mov
mov
dec
xor
cmovns
pop
rorb
mov
scas
daa
and
int3
jmp
add
and
insb
pop
cmp
or
in
fldl
gs
popf
ljmp
int
mov
pusha
inc
leave
pop
sahf
pop
add
jg
pop
rorb
adcb
stc
jne
movsl
add
add
outsl
movsb
add
loopne
hlt
je
pop
fwait
push
push
jne
aad
mov
xor
add
shl
push
push
jge
jmp
cs
add
dec
pop
sbb
xor
xorl
mov
jmp
pop
shlb
pop
cmpb
out
push
pop
es
dec
dec
call
jo
jl
cmp
mov
insl
inc
mov
popf
xor
sbb
fisubl
sahf
les
fadds
daa
jns
ljmp
xchg
push
push
sarb
sbb
sub
push
push
gs
mov
add
inc
das
cmpsb
mov
xchg
jnp
add
and
clc
cmp
jne
jp
and
movb
cld
mov
dec
add
adc
ja
test
les
scas
outsl
cmpsb
jnp
inc
pop
sbbb
aad
test
sti
lret
xchg
pop
fs
orb
fmul
mov
iret
sbb
dec
lods
les
cs
cld
rorb
push
add
sbb
jno
shl
mov
jae
add
cld
add
pop
sub
mov
mov
sub
outsb
and
add
adc
mov
addb
lods
jle
and
and
pusha
add
sbb
rorb
in
add
jnp
cld
push
add
stos
lret
shll
jp
sbbb
xor
sbb
cld
in
add
lods
mov
and
addr16
push
mov
cmpsl
and
std
pop
pop
mov
mov
fwait
loope
xor
es
mov
shrb
jae
xchg
sahf
outsl
push
sbb
shrl
add
test
adc
sub
add
pop
addr16
push
daa
data16
push
add
mov
movb
andl
mov
fwait
mov
and
cli
push
stos
or
xchg
test
push
scas
mov
pop
dec
fstps
sub
sbb
faddl
insb
add
jnp
cmp
pusha
lret
fwait
adc
rorl
add
mov
add
mov
leave
pop
arpl
adc
cmp
jns
push
xor
adc
lods
ficompl
sets
cmp
fistl
fsubl
decb
pop
dec
fsubs
aaa
pushl
push
ffreep
cmp
sub
insb
xchg
dec
and
fstl
adc
dec
lods
jg
iret
and
cmpsb
inc
jmp
adc
int
or
hlt
mov
add
sub
adc
xchg
pop
data16
mov
addr16
cld
std
inc
add
scas
data16
call
fsubrl
push
mov
idivl
inc
sbb
mov
jae
inc
or
push
push
dec
and
test
pop
push
btc
inc
mov
add
icebp
sub
rcl
add
test
lods
mov
fmul
sub
mov
mov
idiv
dec
add
sbb
add
jge
test
xchg
filds
cs
shlb
cli
out
icebp
lds
adc
loope
pusha
mov
add
inc
lcall
xchg
pop
add
loopne
mov
lods
ds
jp
xchg
ja
data16
xor
push
movsb
jno
add
sub
jmp
sbb
jb
and
cmpb
sbb
stos
inc
add
leave
jp
lock
mov
pusha
shr
add
or
sub
push
orb
add
movsb
dec
in
stc
out
rol
add
outsb
pop
pop
lods
popf
pop
adcl
add
mov
pop
subb
mov
sub
xor
fstps
adc
rolb
sar
jp
aad
mov
jmp
mov
sub
add
fbstp
push
addr16
lcall
jb
sbb
xor
addr16
add
leave
pop
sub
push
js
mov
popl
pop
mov
mov
rorl
cli
mov
xlat
add
fsubr
adc
lret
inc
cmp
in
into
dec
cmp
mov
fldenv
xchg
xchg
imul
les
fsubs
sbb
test
mov
jae
or
lahf
daa
shld
xchg
or
inc
mov
jb
jge
mov
or
aam
dec
or
and
rorb
push
pop
nop
pusha
lahf
xchg
int
es
sbb
ds
les
jne
mov
or
or
test
clc
lret
adc
add
notl
dec
pop
inc
repz
inc
and
mov
sahf
outsl
fidivl
mov
cmp
inc
pop
adc
jg
push
cwtl
gs
jae
lahf
add
sbb
rorb
xchg
add
sbb
loope
movsb
arpl
popf
negb
pop
and
clc
or
aaa
fwait
in
scas
add
cld
and
lahf
push
cmp
push
test
jp
add
push
ss
loope
ljmp
and
add
mov
js
dec
mov
jp
mov
pop
icebp
orb
adcb
cmp
add
inc
aaa
dec
add
dec
jle,pn
sbb
aam
pop
cmpsl
inc
sub
lahf
jecxz
push
jae
add
movsl
push
idivl
and
pop
and
in
sub
jno
clc
sub
jmp
js
int
adc
test
orb
nop
sarb
add
aaa
push
cmp
repnz
cmp
insl
inc
ss
xchg
test
xchg
cmp
add
stc
sbb
lods
call
add
ljmp
mov
jle
xorb
jne
clc
lods
fnstcw
pop
ret
adc
mov
add
inc
push
mov
dec
add
inc
call
fwait
repnz
sbb
inc
ret
and
add
lock
jl
je
mov
movsb
add
inc
loope
hlt
mov
fld
dec
iret
jb
push
testl
xor
push
or
lods
jne
out
aaa
inc
pushf
add
jbe
push
push
or
push
inc
divl
cmp
push
ret
fwait
andb
cmp
xchg
xchg
xorb
addb
in
arpl
es
adcl
ret
leave
or
dec
fwait
jl
pop
add
push
icebp
push
push
dec
repnz
push
mov
add
adc
ret
dec
cmp
test
shlb
cmp
xchg
add
dec
mov
sbb
int
push
pushf
push
fcoml
fwait
mov
lea
jns
sub
lret
out
push
inc
in
add
daa
push
mov
inc
dec
mov
cmp
incb
sbb
add
pop
fwait
popf
dec
aad
scas
add
xchg
bound
xor
mov
sbb
mov
adc
add
jg
pop
pop
std
aam
add
test
push
mov
pop
leave
jo
mov
or
and
rolb
mov
cmp
aaa
add
or
movsb
std
ja
add
ret
inc
cmp
cmp
jo
pop
dec
testb
jle
adc
pop
lret
mov
mov
push
cld
pop
add
add
iret
push
dec
mov
jae
sti
add
inc
push
ret
mov
popa
cltd
jb
add
sbb
mov
pop
lret
xchg
or
outsl
rorb
insb
xchg
inc
push
add
and
xor
lcall
pop
cmpsl
add
cmp
add
les
out
mov
cli
je
fldcw
add
add
jbe
fstl
push
jo
push
mov
push
xor
fyl2x
pusha
ljmp
test
xchg
add
xorl
fdivr
dec
lods
hlt
shlb
aas
xchg
dec
sahf
mov
xor
hlt
lds
in
add
in
popa
movsl
push
into
fwait
hlt
inc
cmp
nop
and
sbb
and
push
enter
push
lahf
pop
imul
pop
cmc
insl
sub
jne
add
mov
or
fldl
push
add
inc
mov
sbb
xor
mov
mov
add
pusha
xor
add
sub
test
aas
test
loopne
push
sbb
mov
mov
outsl
test
pop
cmpsb
add
xchg
test
cmp
cmp
pop
add
xchg
sbb
sub
jne
test
or
dec
jnp
addl
cmp
add
imul
or
push
sbb
xchg
fadds
decl
add
cmc
insb
dec
mov
inc
dec
cld
mov
rolb
fisttpl
or
push
out
aam
xchg
xor
jno
sub
out
pusha
add
addr16
pop
pop
add
xchg
aad
enter
or
cmp
cmpsl
pop
and
mov
stc
movsw
jnp
dec
add
push
mov
cmp
fcomps
data16
and
ds
les
paddb
mov
mov
lcall
pop
jns
ret
stc
loope
lahf
xchg
add
push
vpshaw
ds
jbe
es
bound
into
jmp
mov
add
in
scas
rorb
sbb
xchg
adc
lea
add
pop
pop
addb
cmc
fsubl
out
adc
xor
cmp
es
popa
stos
add
xor
push
sub
add
inc
test
arpl
lds
out
bound
mov
add
jmp
jb
push
aad
jb
adc
popa
xor
dec
test
and
sbb
xchg
mov
pop
push
jge
cwtl
popa
or
inc
in
fdivr
es
cmp
xchg
add
mov
xor
pop
xchg
xlat
sbb
verw
dec
mov
add
lds
sbb
push
fs
mov
xchg
out
inc
push
add
inc
or
js
inc
setae
outsl
lock
fs
popf
in
push
push
xor
push
push
mov
mov
or
and
push
pop
in
sub
pop
mov
sti
int
hlt
nop
xor
mov
add
add
or
mov
xor
sub
mov
jmp
add
movsl
lea
insb
mov
xor
add
mov
push
adc
call
dec
xchg
add
in
push
push
jne
add
push
mov
and
cmp
dec
icebp
sub
add
insl
pop
sahf
or
inc
in
test
test
mov
sub
jbe
mov
inc
stos
add
outsb
leave
add
sub
or
dec
fisttpll
enter
adc
mov
and
test
xchg
push
inc
add
fisubrs
scas
aam
shlb
adc
xor
xchg
or
js
mov
and
sub
pop
pop
xchg
mov
mov
push
add
push
cwtl
rorb
aas
lcall
cmp
push
add
add
xor
ss
add
mov
push
dec
es
loopne
add
test
add
adc
iret
jp
cwtl
cmp
stc
push
popa
aas
push
lret
adc
mov
or
cmpsl
and
or
push
inc
mov
lcall
cmp
mov
clc
int3
push
nop
sub
rcr
push
add
xchg
out
xchg
inc
int
cmp
test
lret
sbb
movsl
sub
ja
ds
incl
inc
adc
aaa
adc
out
cmpsb
fdivs
aad
jne
pop
and
cmp
iret
sub
mov
call
cmp
add
push
scas
cmp
ret
lret
addb
mov
mov
mov
push
dec
push
and
lea
repnz
aas
inc
adc
and
jp
add
cmpsb
xchg
rolb
mov
push
and
xchg
add
jb
lea
sub
cmp
les
jno
fwait
outsl
push
rol
cwtl
push
dec
cltd
mov
mov
dec
popa
jg
mov
or
inc
add
shl
mov
std
cmp
cmp
scas
pop
adc
jle
cli
dec
popa
clc
ss
sbb
rcrl
push
sub
xchg
add
pusha
mov
pop
in
mov
test
cmc
inc
inc
fwait
stc
dec
out
fdivl
bswap
loop
mov
add
pop
push
push
pop
or
sub
sub
adc
push
jg
jp
cmpsb
in
ljmp
xor
adc
and
mov
sub
push
and
cltd
jb
add
mov
mov
jmp
inc
popa
fsub
pop
les
add
jle
inc
add
dec
lret
pop
int
fsubrs
cld
cmp
sub
xchg
test
loop
jnp
xor
adc
push
add
mov
add
dec
mov
mov
push
lcall
add
lahf
ljmp
sbbl
or
add
mov
sbb
add
sub
rcr
cmp
add
aad
cmpsb
and
aas
cmp
add
call
xor
or
int
push
std
scas
jno
xlat
jb
xor
push
or
ds
adcb
test
jp
add
inc
sahf
int3
scas
mov
cwtl
add
adc
jge
testb
add
push
mov
stos
sub
aaa
push
and
sbb
das
push
add
iret
jns
xchg
add
dec
or
testl
lods
sub
mov
dec
insb
ds
jg
add
and
xor
jl
add
adc
cmp
jecxz
dec
mov
xlat
add
mov
mov
gs
cmp
into
add
lret
pop
add
mov
repnz
add
cmp
and
cmpsb
scas
call
loopne
add
mov
loope
xor
in
add
repnz
mov
icebp
es
outsb
aad
scas
add
loopne
aaa
inc
mov
shl
inc
lcall
sbb
insl
xor
sarl
gs
test
sahf
out
ja
push
lock
imul
adc
loopne
out
add
xchg
jmp
jp
mov
add
or
or
add
inc
movsb
mov
mov
shrb
mov
imul
and
loope
jle
sbb
cs
jne
xchg
pusha
cmc
mov
outsb
or
test
add
or
pop
ret
andb
and
and
push
pop
mov
sub
adc
rorb
test
sbb
in
sub
sbb
std
iret
add
inc
subb
xchg
xchg
inc
add
icebp
sbb
jg
add
dec
jno
jo
iret
add
sub
pop
jge
jb
xor
push
add
pushf
mov
call
loop
mov
mov
sarl
sub
add
mov
rcrb
outsl
aad
call
inc
ljmp
jns
shl
das
add
xchg
mov
cmp
popf
add
insb
insl
fldt
testb
stc
std
xor
or
decb
jae
nop
or
add
insl
shlb
sbb
pop
int3
add
push
loope
pop
dec
in
lds
adc
push
movb
sbb
sub
push
mov
out
sub
mov
in
mov
ret
gs
dec
jge
daa
leave
ljmp
lret
jbe
mov
xor
lret
fs
push
stos
das
daa
sbb
jecxz
in
movsb
add
inc
test
aas
lahf
add
adc
add
xor
mov
jp
ds
hlt
pop
push
add
fmull
jecxz
push
inc
cwtl
dec
stos
fildl
push
xchg
mov
icebp
and
leave
jmp
call
shl
add
cmpsl
mov
jle
sbb
and
popf
push
cli
js
inc
lret
addr16
call
rclb
bound
mov
add
jo
mov
ds
fadds
enter
pop
add
mov
repz
add
into
iret
add
xchg
jp
dec
lods
sub
xchg
dec
cmp
insb
jae
addr16
add
push
add
outsb
pop
cltd
cli
sub
aad
xchg
jg
cmp
and
jbe
mov
jnp
jmp
mov
xchg
repz
cli
leave
popf
pop
lds
sbb
pop
lfs
cmp
jbe
movsl
add
inc
cli
add
pop
push
clc
rorb
mov
cmp
jo
sub
add
dec
out
and
cwtl
lds
es
add
scas
push
pop
xchg
mov
push
mov
int
add
pop
fisttps
push
lahf
mov
add
fldl
nop
js
call
cmp
add
or
jmp
addr16
int
push
in
out
ljmp
jae
sahf
mov
cmp
pop
add
lock
pop
lahf
or
dec
popf
and
ret
cmpl
sbb
pop
dec
fistpl
push
cwtl
outsl
mov
mov
cld
mov
push
push
push
sbb
outsl
xor
xor
call
mov
jnp
ret
les
mov
call
mov
test
mov
adc
add
adc
jmp
and
sbb
add
lahf
add
pop
and
loope
push
cmp
scas
cmp
sub
popa
cmpsl
add
aam
push
out
dec
fwait
in
add
pop
lock
mov
lcall
lret
cmc
pusha
cmp
xor
xchg
dec
add
xchg
stos
sub
lods
test
ror
mov
ret
insl
outsb
in
mov
ror
in
cmc
xchg
push
leave
pop
in
int
jge
adc
push
add
and
aaa
add
aad
lcall
xor
pushf
push
cmc
add
mov
scas
cmpb
sub
mov
lea
sub
je
add
pop
pop
ds
add
ljmp
icebp
inc
je
scas
sub
pop
repz
movsl
lods
jae
mov
dec
out
daa
inc
dec
mov
stos
pop
lcall
pusha
lods
cli
inc
loopne
repz
aam
and
lea
sbb
in
or
cmpb
add
jnp
xorb
or
push
mov
fsubrs
jle
out
sbb
fcomi
push
adc
daa
repnz
pop
data16
mov
iret
sub
cmpb
shr
int3
repz
mov
mov
lea
gs
cs
mov
loop
cmp
add
lock
xchg
or
jno
icebp
loope
add
stc
pop
inc
idivl
xchg
outsl
push
rolb
inc
xchg
fs
or
push
xchg
lods
and
stos
lret
mov
pop
leave
push
cmp
jmp
test
lds
pop
aam
cld
jecxz
xor
ds
push
rcrb
mov
add
orl
mov
pop
mov
xor
and
pop
add
push
pop
inc
in
fstpl
or
inc
int
test
mov
mov
xor
mov
mov
jp,pn
mov
xor
or
ja
iret
and
or
jno
inc
test
test
fsubrs
outsb
std
cli
repz
adc
loop
add
andb
sti
arpl
add
mov
adc
stos
xor
xchg
mov
mov
fidivrl
movsb
pop
sbb
xchg
xor
lret
inc
add
push
add
ficomps
xchg
xchg
loop
out
lret
mov
fs
pop
call
popf
mov
fisubrs
ja
dec
enter
pop
push
add
inc
jl
jle
push
into
cmpsl
mov
mov
add
dec
sbb
enter
mov
ja
lods
xchg
or
dec
jmp
test
fstps
dec
adc
cld
enter
inc
inc
mov
test
cmc
cs
and
push
add
push
or
testb
out
mov
andb
enter
push
insb
add
add
cltd
and
leave
pop
jo
out
or
aam
add
add
lahf
sti
add
inc
inc
arpl
adc
push
shrb
out
xchg
mov
cmp
mov
xor
or
dec
mov
cmpsl
add
dec
or
pop
sub
xchg
test
adc
mov
bound
mov
repnz
mov
dec
sub
popf
cltd
adc
fistpll
dec
xchg
icebp
fiadds
out
push
sub
inc
push
jp
ffreep
or
lahf
aam
add
out
jmp
es
mov
shlb
cmp
dec
repz
cmp
dec
add
stc
adc
mov
add
fnstcw
orl
out
aam
and
and
jne
mov
stos
mov
shlb
or
add
xchg
mov
xchg
lret
or
daa
into
dec
out
mov
or
loopne
jge
fiadds
aad
shrb
and
sub
adc
add
in
loopne
add
fdivr
inc
std
mov
shlb
les
movsb
lea
mov
pop
inc
or
inc
adc
add
int
add
in
jmp
cmp
lahf
gs
int3
push
pusha
fstl
out
or
push
rclb
mov
fiadds
pop
arpl
enter
pop
add
xchg
outsl
ret
jo
lods
add
sbbb
xchg
pop
les
js
sti
jb
loop,pn
in
stc
mov
cwtl
pushf
sub
fistps
lcall
inc
jle
outsb
cmc
add
and
das
ret
sub
pop
mov
insl
and
inc
adc
iret
sub
push
stos
lock
jb
mov
test
pop
out
rolb
adc
add
ret
cmp
mov
add
shrl
add
cwtl
lcall
cltd
inc
jno
adc
pop
inc
add
xor
mov
hlt
addr16
test
dec
push
xchg
fdivr
and
gs
popa
in
inc
cs
mov
sub
add
adc
pop
sub
jp
or
loope
sarb
cmpsl
nop
mov
mov
sub
adc
imul
dec
dec
and
lods
and
push
mov
add
pusha
mov
mov
les
mov
and
cmp
sub
add
movsl
into
mov
xchg
es
adc
aam
xchg
dec
add
subb
dec
int3
cmpb
xor
out
lret
js
add
test
aad
repnz
or
add
sarl
add
jle
sub
inc
cmp
push
das
jmp
push
push
add
pop
xchg
mov
and
add
pusha
sub
imul
js
mov
popa
fldenv
inc
jo
mov
movsb
jl
sub
push
inc
hlt
ja
jns
jae
je
add
dec
decl
pop
mov
push
sti
lret
popl
pop
add
in
push
es
jnp
add
sub
xorb
push
add
pop
mov
add
inc
adc
xor
inc
cwtl
adc
push
pop
cmp
scas
mov
fisubrs
pop
scas
movsb
dec
fsubl
cmp
out
jae
add
add
jo
xchg
mov
sbb
xorl
sahf
loopne
cwtl
or
jne
add
add
or
add
mov
nop
mov
xchg
out
xor
sti
outsl
adc
add
and
sbb
pop
fwait
sahf
loopne
jg
add
lret
pop
cmp
and
data16
enter
adc
push
lahf
pusha
xor
rclb
add
mov
shr
add
aas
fdivrp
popa
aad
inc
clc
je
cmp
fsubr
ret
sub
pushf
rcrb
sbb
dec
adcb
out
in
sbb
test
hlt
pop
orb
or
inc
ret
andl
inc
mov
xor
nop
lret
or
add
mov
out
cwtl
xor
aad
lods
test
add
js
jns
pop
push
arpl
pop
inc
dec
fnstcw
jle
pusha
add
addr16
push
dec
sarb
or
xor
in
sarb
sti
cmp
jl
adc
sub
xchg
sub
add
in
adc
int3
mov
sub
adc
cltd
fbld
or
mov
aaa
pop
push
push
adc
sub
mov
pop
and
mov
jg
mov
cs
sub
adc
test
add
outsb
movsl
dec
jmp
pop
iret
cmp
orb
add
xchg
cld
or
ret
jle
add
and
pop
adc
aas
inc
xchg
xor
sbb
add
cmp
cmp
cmp
mov
rclb
cld
push
adc
add
gs
mov
je
sub
pop
jno
shrb
outsl
jae
mov
imul
lods
adcb
pop
adc
scas
push
outsl
test
push
sub
stos
in
add
add
dec
test
add
addr16
and
jl
mov
ja
add
push
pusha
fdivs
seta
aam
inc
in
rorb
test
mov
add
jae
insb
jp
pop
add
fcmovnu
push
fs
pop
stos
sbb
push
adc
lret
push
adc
sub
in
sbb
add
push
outsb
sti
fucom
adc
loope
inc
in
mov
add
jle
push
xor
bound
jl
mov
xchg
push
in
inc
sbb
test
ljmp
cmp
push
sub
jle
movsb
inc
mov
xorl
mov
lock
dec
jae
add
push
or
js
jg
test
push
shlb
in
in
add
mov
out
dec
pushl
xchg
add
insl
jl
xor
pop
aaa
or
push
jns
cli
mov
movsb
out
ljmp
mov
mov
cmp
push
add
ds
mov
call
lahf
flds
xchg
test
mov
add
repz
jae
sbb
add
dec
sub
add
inc
pop
ds
and
lods
sbb
orb
and
cltd
das
popf
sbb
clc
loopne
inc
outsl
ljmp
sub
add
out
mov
ss
or
add
mov
pop
movsl
nop
cmp
inc
xchg
nop
sahf
adc
mov
les
mov
dec
fcomps
rcll
sbb
or
jg
add
loop
or
outsb
xor
and
adc
lods
inc
dec
add
cwtl
test
jae
mov
mov
fadds
ret
test
inc
sbb
sub
nop
fmuls
loopne
cmp
and
mov
movsl
jo
mov
lock
ret
aas
push
mov
fistl
movsb
addb
xchg
sbb
out
testl
jecxz
cwtl
dec
mov
out
es
ljmp
movsb
gs
ret
cmp
inc
shrb
dec
jno
sub
mov
in
mov
in
scas
cmpsl
jnp
pop
cli
idivl
add
inc
sub
lret
mov
lods
das
pop
xor
cmpsb
pop
subb
mov
pusha
cmp
movsl
or
jle
mov
or
inc
pop
xor
lock
daa
repnz
in
insl
mov
sbb
das
aas
lahf
pop
sbb
arpl
mov
or
adc
inc
mov
insb
pop
push
adc
gs
repnz
in
jp
leave
push
lock
in
popf
mov
fs
lods
arpl
mov
dec
pop
in
add
daa
mov
cmp
cmp
add
fs
repnz
add
or
mov
add
cld
sub
jmp
adc
cmc
lea
pop
ficomps
jno
aam
gs
sub
ror
or
sbb
inc
and
mov
jp
sbb
push
jmp
pop
verr
inc
inc
mov
push
fisttpl
pop
shlb
fnstenv
fs
mov
adc
inc
jp
add
dec
adc
inc
jns
hlt
pop
pop
add
psubd
mov
push
roll
movsb
cmp
mov
lahf
sbbb
inc
or
icebp
inc
or
sub
out
xchg
pop
and
lds
hlt
ret
jp
fmull
cmpsl
mov
fiadds
dec
jmp
fistpl
inc
clc
decb
inc
adc
scas
leave
stos
sub
in
bound
and
pop
add
jle
arpl
dec
rolb
iret
fwait
mov
lock
sbb
cmp
xchg
and
push
sub
add
jl
jg
mov
call
test
lods
dec
nop
addb
mov
jnp
sarb
daa
pop
and
out
dec
jno
cmp
cmp
loopne
movb
cmpb
in
and
add
scas
or
xchg
sub
ljmp
or
push
fcompl
int3
lods
jge
pop
in
rcrb
out
push
mov
mov
xor
sub
mov
cmp
clc
movsb
mov
iret
leave
dec
and
addl
cmp
add
add
add
push
jbe
xchg
nop
adc
adc
inc
adc
dec
mov
pop
test
add
mov
cltd
enter
mov
and
lods
clc
add
pushf
out
jbe
outsb
call
xchg
adc
loop
sti
or
stos
test
or
scas
cli
add
ss
fisttpll
out
dec
add
adc
mov
push
arpl
cmp
gs
add
das
cmpsl
or
mov
xor
jae
and
adc
add
mov
in
cld
shrb
cmc
or
sub
outsb
loop
push
call
sub
inc
loopne
repz
inc
lock
jg
xor
loope
sub
mov
movsl
inc
popa
test
lock
in
or
aas
dec
inc
cld
push
mov
mov
ja
jb
sbb
cmp
xchg
sahf
xchg
sbbb
arpl
fisttps
add
cmpsb
insl
add
iret
inc
push
stc
loopne
push
arpl
jecxz
pusha
sbb
lods
outsb
sub
icebp
dec
mov
add
and
jae
addl
movsl
sub
repnz
sbb
add
mov
add
xlat
imul
in
add
bound
ss
lods
inc
add
stc
pop
mov
dec
and
pop
lahf
xor
stos
dec
dec
sub
push
push
mov
add
ds
adc
xor
jne
fldl
ljmp
inc
add
cmc
inc
leave
shrl
add
enter
adc
std
inc
add
pop
add
fstpl
dec
dec
or
cs
add
popf
das
in
shr
jp
lock
fldcw
pop
add
es
loopne
mulb
arpl
adc
loope,pn
nop
jns
xor
xchg
icebp
cmpsl
and
dec
iret
jne
jp
lret
sub
xor
sub
jb
dec
and
dec
push
enter
and
jge
add
xor
add
mov
test
add
aam
xchg
pop
roll
out
jnp
push
dec
ss
push
xor
stos
or
loop
icebp
scas
movsl
xchg
leave
cltd
add
lods
sbb
mov
add
cmp
out
sub
sub
ja
pop
test
into
add
insl
call
mov
sbb
push
js
lods
add
bound
cvttps2pi
iret
into
cmp
mov
fstpt
sub
mov
lret
loope
xchg
rcll
cli
add
mov
mov
int3
push
sub
repnz
out
mov
pop
sahf
shl
dec
inc
arpl
rclb
pause
ret
movsl
xor
adc
push
jecxz
in
lret
lds
call
popf
scas
mov
fsubrl
pop
sahf
in
nop
inc
clc
call
mov
xchg
aad
sub
cwtl
xor
mov
hlt
push
addr16
nop
shll
faddl
sti
mov
push
push
add
cmp
xor
add
jg
xor
push
popa
add
jns
test
rclb
test
loopne
jnp
ret
add
pop
mov
push
dec
outsb
mov
imul
jl
sarb
add
aas
push
pop
adc
outsl
xor
add
hlt
and
ja
mulb
dec
fldt
and
add
sbb
inc
call
push
call
jno
cmp
aad
dec
pop
inc
nop
xor
jae
push
cmp
or
sbb
in
add
and
iret
repz
imul
xchg
shlb
jp
add
sbb
call
inc
fisttpl
or
fucompp
add
dec
add
inc
jae
adc
and
cmp
fwait
in
add
jb
iret
pushf
ds
pop
ret
xor
pop
int
and
push
dec
adc
fimuls
jae
add
adcb
add
and
repz
aam
mov
repnz
add
out
emms
inc
loopne
mov
lds
dec
inc
cwtl
push
mov
call
xlat
enter
pop
leave
dec
xor
enter
repz
jno
fimuls
xor
mov
test
out
push
mov
sbbl
lock
mov
aas
add
add
cmc
scas
mov
mov
and
lea
push
sti
mov
test
mov
loop
xchg
adc
mov
in
xchg
jnp
push
sbb
pavgw
mov
pop
jp
ds
hlt
xchg
push
sub
shlb
cwtl
loope
mov
aam
int
cmp
xlat
orl
mov
lcall
adc
adc
dec
mov
adc
pop
mov
push
sbb
rcr
mov
jnp
add
out
iret
pop
mov
or
mov
sub
movsb
xor
push
xor
clc
inc
enter
add
rolb
sub
sub
adcl
mov
leave
mov
lcall
cld
gs
inc
cmp
mov
xchg
mov
inc
cmp
clc
sub
add
icebp
inc
cmpsl
in
mov
orb
lret
cli
sub
repnz
mov
sbb
enter
add
xchg
mov
out
lea
jp
xchg
add
or
add
xor
sbb
mov
arpl
cmp
loop
daa
mov
jo
xor
add
int
and
add
mov
mov
add
je
jge
loope
push
add
lods
fnstenv
xlat
adc
add
mov
add
lock
imul
add
popa
jmp
ljmpw
inc
sbb
mov
inc
dec
add
sbb
lret
push
les
jns
fimull
aas
add
xor
xchg
sbb
pop
lret
andb
mov
daa
clc
sub
add
scas
inc
inc
xor
pop
adc
push
or
add
stc
sahf
ret
out
rclb
mov
std
inc
sbb
fs
roll
sub
mov
rcrb
add
repnz
nop
pop
add
inc
push
test
xchg
call
lcall
xchg
fnstenv
pusha
leave
lock
enter
add
mov
test
dec
and
add
mov
xchg
test
sysret
test
mov
sub
mov
in
or
or
inc
popl
cmc
adc
out
add
lods
mov
pop
push
aam
roll
jecxz
pop
test
push
imul
incl
call
pop
and
xor
xchg
mov
inc
pushf
push
add
sub
add
pop
lret
sub
addr16
sub
push
sub
popl
sahf
shll
mov
add
adc
add
jns
dec
lret
push
adc
shlb
and
jnp
add
xlat
sub
pop
sbb
xchg
bound
roll
incb
pop
pushf
mov
aam
inc
ss
icebp
push
sti
mov
add
pop
push
mov
sbb
inc
std
nop
sbb
nop
mov
int
add
fs
mov
xchg
push
int3
push
std
inc
cwtl
sbb
aas
add
xor
insl
ds
pop
mov
lea
out
xchg
cwtl
rolb
dec
loop
pop
or
and
fsts
in
push
mov
add
ss
gs
sbb
int3
add
test
int
mov
dec
add
std
cmpsb
xor
in
or
add
les
add
mov
sbb
loop
and
test
add
test
pusha
xchg
mov
jl
cltd
or
cmp
cli
add
inc
adc
shll
dec
subl
and
push
cld
ja
or
stc
and
scas
mov
popf
test
negl
add
movsl
or
mov
cmp
clc
adc
add
jp
xor
mov
add
loope
or
pop
repnz
pop
add
lock
imul
xlat
add
adc
dec
add
insl
leave
inc
add
mov
mov
inc
xchg
addb
imul
push
jmp
cs
ja
cmp
sbb
cmp
pop
cld
and
out
mov
arpl
inc
xor
ss
mov
scas
add
dec
push
cmp
bound
lea
mov
and
mov
add
dec
scas
add
add
mov
cmp
add
in
rol
test
test
addr16
orb
dec
cmc
add
inc
std
in
roll
insb
leave
xlat
sub
jae
add
in
lods
mov
add
mov
cmpsl
pop
inc
pop
outsl
sub
adc
jns
sub
lret
and
fucomi
sbb
pop
repnz
test
add
jle
push
jge
add
mov
rcr
xchg
in
aaa
or
add
mov
setg
add
and
rolb
add
test
inc
adc
xchg
inc
and
xor
add
cmp
arpl
jb
pop
pop
push
add
int3
popa
and
and
add
scas
adc
lea
dec
addr16
fsubrs
lret
insl
add
pop
lods
fidivl
out
in
adc
mov
jl
fwait
mov
xor
mov
out
iret
cld
lock
sbb
bound
imul
hlt
sbb
or
jnp
call
or
adc
push
mov
sub
push
pop
stos
les
jb
mov
daa
ficoms
dec
shl
hlt
mov
leave
lock
push
push
loop
dec
push
pusha
add
lea
rorb
sub
arpl
cli
stos
add
jg
push
fs
cmp
inc
mov
add
dec
clc
cmp
or
add
imul
ds
ja
hlt
mov
xchg
repz
inc
ja
pop
shr
shrb
add
cmpsl
push
out
aam
arpl
cwtl
cwtl
enter
pop
out
add
ljmp
add
jbe
call
sbb
push
insl
mov
jno,pt
add
sbb
inc
stos
inc
xchg
xor
std
add
dec
movsb
test
adc
sbb
xchg
fmuls
push
sbb
or
mov
and
ds
xchg
das
pop
rcr
cmp
add
push
add
push
pop
adc
stc
daa
jno
and
add
mov
push
inc
xchg
mov
mov
sub
fistpl
jno
loopne
jmp
enter
add
xor
lods
out
inc
add
push
xchg
cmpsl
mov
or
mov
outsb
mov
mov
fadds
cmpl
dec
inc
daa
mov
mulb
out
lods
cwtl
add
xor
add
add
cmp
std
sub
cmpsl
push
nop
dec
xor
push
push
les
fdivrs
and
pushf
pusha
scas
xor
add
mov
fwait
clc
inc
add
enter
nop
flds
je
pop
sub
add
cmc
fwait
aad
imul
rorb
dec
bound
and
push
pop
xor
and
cmp
add
or
push
in
add
popa
mov
or
add
push
lea
push
mov
enter
in
int3
xorb
xchg
add
fsubs
add
jo
dec
add
push
or
or
rorl
mov
add
repz
gs
push
rcrl
movsb
fs
mov
sub
add
negb
lcall
stos
fbstp
cltd
add
dec
push
insb
pop
scas
js
add
xchg
fldenv
test
stc
subb
daa
mov
add
push
bound
pop
lods
outsb
lret
shll
mov
mov
push
cs
scas
mov
mov
jl
dec
xor
push
add
inc
inc
repz
and
ret
loopne
pop
add
inc
cmp
sbb
fcoml
xor
pusha
idiv
adc
enter
mov
mov
mov
inc
xchg
or
fs
push
jnp
mov
mov
mov
fsubr
sub
fisttps
jp
movsb
enter
add
jle
xor
ds
enter
inc
rcl
add
lods
in
add
dec
and
sbb
pop
or
push
sbb
and
jne
xor
stos
sbb
sbb
outsl
loopne
jo
fptan
imul
cmp
pop
sbb
xchg
hlt
sub
xor
pop
jae
adcb
ucomiss
jb
and
add
xor
sub
ud1
adc
andb
push
or
cmp
jbe
or
adc
mov
add
repnz
add
lds
xchg
cmp
inc
and
mov
sbb
adc
nop
push
and
or
mov
add
les
aas
pusha
inc
fnsave
push
sub
sbb
loope
jno
icebp
stos
mov
jo
dec
loop
push
dec
cmp
inc
push
mov
adc
adc
adc
leave
sub
jno
adc
test
jns
test
in
cli
inc
fists
jp
and
fdiv
xchg
repz
int
add
jmp
inc
gs
add
cmp
mov
je
mov
pop
push
test
jle
inc
or
adc
pop
incb
push
imulb
jne
xchg
enter
inc
add
scas
cld
mov
add
movl
fsubrl
xchg
pop
out
cmp
sub
lahf
aam
dec
adc
movsb
pop
jmp
pmulhuw
sbb
enter
popa
mov
pusha
stos
hlt
sbbl
inc
cwtl
int3
in
pushf
idiv
or
call
fnsave
add
mov
xor
ds
xor
push
xchg
push
pop
loope
push
shrb
push
lods
dec
mov
mov
mov
pop
lea
mov
mov
call
pushf
lahf
sbb
nop
xchg
popf
xlat
addr16
push
add
xchg
mov
fcom
int
push
iret
jp
push
pop
mov
push
sub
scas
loop
popa
sar
stc
add
fwait
daa
xchg
aam
faddl
jae
push
sbb
ljmp
and
cmp
pusha
fwait
xchg
adcl
es
aad
pop
sbb
mov
dec
cmpsb
arpl
or
scas
hlt
or
dec
dec
jo
push
sub
add
fidivrl
and
pop
pusha
cmc
dec
rcll
mov
hlt
mov
xorb
xor
repnz
movb
push
ret
mov
mov
dec
add
mov
out
jmp
mov
mov
inc
lods
mov
push
pusha
cmc
fwait
or
push
push
lahf
mov
mov
mov
inc
mov
lea
cmpsb
hlt
jecxz
lods
inc
adc
add
mov
push
gs
into
dec
or
shll
subb
sbb
add
mov
push
cmp
adc
jge
jo
das
push
mov
lcall
mov
mov
cmp
sbb
test
insb
data16
add
scas
push
push
cmp
pop
add
outsl
xchg
test
arpl
jo
xor
pusha
sbb
push
int
mov
int3
popa
loope
xor
xor
ret
mov
das
stc
mov
push
mov
mov
int
mov
cltd
ss
pop
cmp
and
js
subl
subb
mov
jg
xchg
sbb
xor
js,pt
pusha
push
std
pop
push
mov
add
or
test
push
mov
fmuls
rcr
das
and
into
sbb
push
inc
stos
dec
add
outsb
mov
addr16
ret
mov
arpl
popf
imul
movsl
push
push
cmpl
cmp
pop
insb
push
pop
pushf
lcall
push
and
mov
inc
add
adc
mov
push
in
mov
sti
jb
jno
add
int
out
sbb
jne
dec
rclb
fldl
xchg
pusha
nop
enter
add
aaa
add
add
push
xlat
fstpl
add
push
outsb
lcall
aaa
and
push
or
xchg
out
cwtl
add
sub
mov
lock
adc
lret
add
andb
int3
cs
sub
fwait
jo
xor
xchg
stc
js
int3
mov
fwait
or
push
aam
cmp
inc
int3
ja
sbbl
dec
add
fcomp
mov
mov
dec
adc
aaa
push
icebp
movsb
adc
sbb
sbb
xchg
xor
call
jbe
mov
and
and
addb
pop
in
cmp
scas
imul
add
popa
in
adc
enter
and
fcoms
popf
xchg
xor
loopne
xor
and
dec
daa
mov
jbe
repnz
clc
mov
shrb
js
lods
xchg
cmp
lret
clc
add
out
mov
jo
pop
fxch
mov
sub
popa
mov
inc
lock
sbb
push
subb
daa
jno
push
pusha
mov
cmp
out
gs
cmp
pop
outsl
insb
imul
jno
pop
insl
jl
dec
and
dec
add
cli
mov
sbb
push
dec
mov
scas
push
add
out
and
mov
cmp
mov
mov
jo
bound
inc
into
cmp
pushf
add
js
cltd
xchg
jl
out
test
int3
mov
or
pop
jne
stos
add
mov
enter
add
jg
jmp
mov
push
mov
lret
or
iret
lret
call
pop
mov
adc
xchg
add
xchg
fdivp
ds
insl
add
inc
shrb
mov
fs
mov
incb
mov
cmp
inc
add
push
sbb
cmp
push
and
out
pop
mov
pop
faddl
sti
add
jns
adcb
mov
test
sub
cmpsl
mov
shll
add
fildl
push
sbb
repz
notl
push
in
mov
pop
add
imul
mov
mov
jb
mov
stc
jnp
pop
pushf
pop
cmp
aad
in
add
sub
fiaddl
mov
or
out
aam
mov
test
int3
sub
fadds
and
lcall
cmp
outsl
stos
test
mov
xor
add
pop
roll
outsb
das
test
add
in
xchg
push
clc
pop
push
sub
nop
add
in
cltd
dec
rolb
ja
pop
outsl
xchg
push
mov
nop
fwait
sub
ss
and
cltd
jo
push
jbe
out
hlt
loopne
and
and
insb
xlat
into
add
lods
xchg
lea
dec
adc
push
xor
loopne
out
or
jmp
loopne
call
add
xor
inc
add
fdivrl
lea
andb
fadds
shrb
jo
sub
mov
add
mov
mov
sub
aas
cmp
jmp
jge
lds
add
jnp
push
add
mov
mov
add
shrb
cmp
push
push
call
add
shl
dec
cmp
add
sbb
add
icebp
fucom
out
inc
and
xchg
insl
xlat
xchg
andps
loopne
cmp
mov
cmp
out
ljmp
mov
jb
add
push
xchg
add
movsb
push
outsl
add
lods
mov
out
subb
jge
push
les
xchg
xor
pop
js
adc
push
jns
enter
sbbb
push
in
iret
jge
adc
add
jnp
mov
jne
mov
ss
mov
rolb
add
into
test
push
in
sub
dec
lcall
jo
cwtl
sub
stc
add
mov
add
nop
add
add
mov
xor
dec
cmp
push
add
push
subb
push
add
rcrl
jg
adc
jmp
lock
pop
addl
xchg
add
stos
negb
add
xor
sbb
cli
add
into
push
icebp
or
outsb
ss
pushf
iret
orb
fwait
and
mov
sbb
addb
sti
mov
jne
sahf
lahf
add
ret
add
and
push
loope
add
popa
in
cmova
fiaddl
and
inc
sbb
add
xchg
add
rcrl
out
add
fistps
add
addr16
add
xchg
sub
pop
add
adc
sub
pushf
sub
js
push
cmp
outsb
pop
mov
push
add
xor
xor
rcrl
or
add
mov
sbb
les
cmp
cli
mov
ds
gs
cmpsl
mov
fmulp
cld
add
xchg
test
add
ss
lds
push
movsl
shrl
or
xchg
add
sub
sub
add
orl
mov
pop
push
push
je
ret
add
in
mov
insl
adcb
add
mov
or
ret
jmp
jae
cmp
or
sbb
adc
inc
sbb
push
test
enter
jo
mov
je
adc
and
mov
sbb
jbe
sub
sub
shrl
fsubrs
inc
and
lods
add
scas
int3
push
sub
das
mov
imul
iret
xchg
add
dec
push
pushf
push
cmp
repnz
add
enter
mov
dec
add
stos
add
mov
inc
xchg
lret
sbb
push
pop
frstor
adc
jle
inc
cmpsl
ret
fcmovnbe
andl
inc
outsl
pusha
jno
inc
add
aad
in
ss
and
loopne
sbbb
jo
lea
in
in
and
pusha
adc
pop
and
jae
pushf
enter
inc
movsb
add
or
movsl
inc
out
cli
sarb
test
pop
sub
lock
add
push
ljmp
inc
pusha
sub
inc
add
das
imul
cwtl
xchg
add
fidivrl
add
call
cmp
ja
push
cmp
inc
adc
test
bound
cmp
imul
out
scas
iret
cmp
adc
mov
in
add
sub
loopne
stos
xchg
add
pusha
mov
cwtl
aas
cmp
iret
cld
add
cmp
xchg
adc
mov
cli
stc
xchg
jbe
int3
adc
outsl
lds
mov
add
adc
or
and
add
cmp
outsb
mov
lcall
out
mov
inc
jo
or
cld
dec
jne
inc
aas
mov
leave
cmpsl
xchg
pop
inc
pop
mov
add
sbb
and
in
fstpl
cld
sub
into
inc
jo
cmpsl
add
daa
clc
imul
push
mov
xchg
xor
add
push
lret
lea
add
mov
or
frstor
xor
jge
mov
inc
push
jbe
repz
cmpsb
jnp,pn
sub
ret
mov
lahf
mov
or
cmc
sbb
fucomp
jge
jp
pop
mov
mov
add
dec
dec
adc
jo
xchg
mov
dec
add
xor
xor
push
push
test
add
nop
and
cs
stos
inc
popf
or
rcl
rcll
in
int3
sldt
inc
sub
mov
iret
loop
xorb
rclb
jbe
add
add
orb
mov
jb
aas
fcomps
clc
cwtl
add
or
sbbb
pop
imul
inc
pop
jl
push
add
inc
movsl
das
aas
cmp
xchg
lahf
xchg
int3
pop
mov
test
jge
subb
neg
add
cmp
je
lds
repnz
subl
add
push
pop
daa
add
push
push
xor
mov
push
add
cmpsl
or
cwtl
rorb
imul
push
jne
clc
mov
or
test
add
aas
adc
je
mov
ja
std
cmpsb
popf
fists
shrb
in
mov
outsl
mov
fstpt
push
outsb
xchg
ja
ljmp
inc
js
fimuls
add
mov
lds
js
or
insb
add
push
rcll
addr16
aam
and
mov
mov
lock
fisttpl
shl
or
inc
rolb
add
fcoms
mov
jnp
or
fsubl
orl
rclb
aas
inc
cwtl
pop
mov
leave
in
push
es
inc
fcomps
jb
add
subl
add
lret
sub
jae
pop
mov
add
call
push
movsb
and
out
add
mov
pop
sub
jge
mov
daa
les
sbb
mov
add
xchg
lock
sti
int3
sbb
mov
js
push
cmp
jl
adc
inc
insb
in
sub
scas
sub
outsl
adc
ljmp
cld
cmp
and
add
loopne
hlt
clc
cwtl
and
xchg
add
push
pop
sbb
in
mov
mov
xchg
and
lcall
xchg
cmp
or
sbb
sub
add
sub
xchg
faddl
cmpsb
xor
clc
add
sbb
insl
ror
nop
add
inc
rorl
in
add
int
fcoml
mov
rcr
xor
cmp
add
cld
push
js
icebp
inc
pop
lods
mov
pushl
cmp
fs
out
or
fucomp
pop
test
mov
loop
imul
add
std
sub
lret
pop
push
mov
shlb
das
adcl
cmc
cltd
imul
icebp
mov
inc
adc
jne
sbb
mov
pop
iret
xacquire
sti
add
cmp
jl
add
adc
inc
call
cmpsl
lods
aam
adc
xor
pop
and
imul
enter
fbld
mov
xor
inc
pop
gs
add
test
inc
push
pusha
cmp
fidivs
ret
lcall
cmp
out
add
in
xor
xchg
or
bound
push
mov
mov
add
or
lcall
add
imul
add
mov
inc
fcompl
add
adc
jge
bound
ds
jp
outsb
add
pop
arpl
int3
nop
dec
xor
in
mov
add
sub
pop
xlat
cli
jae
ljmp
push
test
dec
das
add
inc
sub
daa
push
mov
cwtl
subl
shll
xlat
mov
inc
dec
shlb
mov
push
fnstcw
rep
inc
int3
clc
iret
add
xor
loopne
jnp
xchg
add
mov
mov
add
mov
add
inc
pop
inc
mov
mov
shrl
jg
add
clc
lahf
jge
cltd
setne
call
pop
dec
daa
bsr
out
xchg
loope
leave
inc
out
add
incb
cwtl
aam
mov
andl
lods
push
jns
out
add
fistpll
xchg
mov
push
jecxz
pop
jne
add
in
push
and
jmp
dec
cmc
jle
jp
add
test
arpl
dec
mov
xchg
dec
pop
cmp
loope
jp
int
xor
pop
sbbb
pop
pop
sbb
add
xlat
push
push
sbb
cld
test
into
mov
test
ss
cmpsl
mov
and
mov
popa
push
stos
sub
ds
add
loopne
cmp
repz
add
xor
push
jmp
lret
jo
dec
lds
movl
roll
sbb
dec
jle
lret
jnp
dec
jg
cmp
xchg
xlat
xchg
sti
sbb
add
test
jne
add
bndstx
stos
aam
jo
xor
mov
jae
cmp
dec
push
sbb
pop
cld
add
mov
std
ljmp
and
xchg
and
push
or
inc
mov
mov
add
or
or
ret
pop
ret
dec
movsl
push
adc
cs
aas
sbb
mov
pop
cmp
mov
jb
sbb
push
arpl
pushf
rclb
insb
pop
add
inc
jecxz
dec
test
pusha
sarl
je
les
mov
aam
add
jp
jge
mov
xor
aam
or
scas
addl
adc
mov
mov
adc
push
jle
pcmpgtb
fcoml
add
mov
pop
andb
and
sbb
sbb
loopne
inc
icebp
test
sti
push
xor
xorb
xchg
mov
out
pop
jg
iret
in
adc
jbe
subb
lods
ret
pop
bound
or
and
mov
mov
jb
inc
repz
xchg
mov
popa
js
es
jmp
add
loope
sbb
movsb
in
add
movsl
das
int3
jle
add
test
mov
and
sub
imul
movsb
xor
sbb
inc
or
adc
adc
lcallw
repz
pop
sub
add
pop
mov
pop
cs
roll
xor
jb
ljmp
pop
repnz
in
popa
popa
pop
loopne
out
imul
je
lret
pusha
add
mov
adc
add
in
lret
pop
mov
es
and
or
sarb
loope
push
fistpll
jg
or
dec
and
jle
add
mov
xor
call
loop
jecxz
in
add
mov
pop
adcb
movb
js
push
push
dec
add
jns
inc
jle
test
mov
aad
dec
add
sub
xor
dec
jbe
into
adc
push
addl
lret
rorb
lahf
sub
les
ret
xor
lds
jge
pop
insl
rcrb
rorb
and
mov
add
aam
outsb
push
das
add
repnz
adc
pop
sbb
stc
fs
call
int
sbbb
jo
in
xchg
add
inc
clc
outsb
roll
dec
cmp
adc
orb
cltd
sbb
push
out
dec
mov
xlat
xor
add
sub
mov
jle
outsb
pop
ret
xchg
cli
pop
pop
lods
jbe
std
test
insb
sub
jmp
pop
lret
ret
clc
mov
andl
dec
hlt
decb
repz
out
push
dec
dec
add
lsl
in
jo
clc
lret
add
lea
jp
sub
add
sbb
mov
cmpsb
lahf
lods
sahf
adc
call
push
data16
cmpb
lods
xor
add
push
in
jne
and
out
das
add
mov
xor
in
cmp
add
out
fidivrs
rolb
in
fisubl
fcoml
add
jle
lret
add
insb
fidivrl
mov
cmpb
xlat
mov
and
push
out
xor
sbbb
xor
cmp
cli
pop
dec
mov
add
bnd
cmp
jg
or
rolb
sbb
pop
add
test
sub
jns
insl
jecxz
clc
mov
add
cli
push
pop
stc
add
mov
and
call
pop
es
aam
xor
add
pop
ficoml
jp
add
das
xor
add
mov
out
xor
lock
mov
in
lock
add
repnz
loopne
lret
or
add
scas
outsb
mov
adc
or
add
mov
add
pop
pushf
xor
jg
ja
mov
push
sbbl
vmovhps
xchg
clc
jne
xlat
sub
push
mov
leave
es
xchg
ficoml
add
mov
jae
cmp
ret
or
push
pop
add
cs
jo
cmp
out
jb
in
mov
xchg
popa
cmc
cli
cmpsl
inc
add
out
adc
adc
mov
out
sub
pop
ret
mov
add
push
add
rolb
pusha
iret
lock
fists
push
add
lock
sub
iret
and
idivl
add
add
push
inc
ret
add
in
sbb
insl
fucomip
add
and
add
shl
enter
ljmp
mov
ds
popf
push
or
sub
xchg
pop
or
outsl
je
add
sub
mov
ja
jmp
push
mov
add
sub
aas
out
inc
outsl
sahf
sbb
cmp
add
cwtl
ffreep
in
and
add
fcomps
push
cmp
lock
jbe
sbb
jns
or
mov
xor
adc
pop
flds
dec
call
xchg
testb
lcall
test
mov
outsb
jmp
stc
mov
mov
xor
aaa
xchg
inc
sbb
jle
rcr
ret
or
imul
sbb
adc
add
xchg
test
loop
jo
jne
mov
adc
xchg
jl
lcall
inc
adc
add
fcmovbe
add
inc
mov
mov
add
repz
mov
lods
dec
xchg
fsubs
pop
adc
lret
ret
jmp
test
stc
arpl
or
js
pusha
jne
jns
fsubrl
sahf
das
fstps
addr16
lock
idivl
rcrb
loope
in
xchg
add
icebp
add
hlt
sbb
add
pop
iret
lods
fisubs
or
pusha
adc
add
push
fdiv
out
ret
test
out
cmp
xchg
mov
dec
add
push
and
mov
add
or
sbb
mov
inc
push
jg
dec
fisttpl
xchg
stc
jp
sbb
scas
enter
cld
xchg
jb
add
inc
mov
mov
flds
add
add
push
add
out
sub
add
add
inc
mov
jns
jnp
pusha
loopne
sbb
add
cmp
or
push
mov
sbb
sub
cmp
jbe
mov
dec
es
add
js
lret
and
cwtl
adc
fsubrl
and
cs
les
repnz
scas
lds
push
test
jb
out
dec
shrl
pop
and
pushf
into
xor
sbb
lods
add
ficomps
mov
nop
sub
xchg
dec
shr
dec
addb
sbbb
xchg
fbld
add
jp
int
fwait
sbb
in
adc
icebp
pop
jne
out
sub
cmp
add
cmp
dec
ret
adcb
add
push
sbb
xor
push
add
mov
fiadds
repz
loop
test
aad
imul
je
shrl
arpl
dec
aas
mov
mov
add
mov
sbb
sub
arpl
sbb
ret
jecxz
dec
lret
dec
adc
lgdtl
faddl
les
and
dec
cmp
cmp
imul
das
jecxz
mov
xchg
xchg
mov
ret
and
out
orl
lret
rclb
fiaddl
or
mov
add
sahf
dec
or
loop
out
es
xchg
repnz
cmp
cwtl
xor
sti
out
add
and
push
or
add
jmp
sub
pop
pop
call
int
int3
roll
pop
lret
push
stos
fcmovu
das
ret
add
bound
adc
sarl
lahf
push
jns
push
imul
mov
adc
add
and
pop
fwait
daa
inc
inc
pusha
cmp
add
lcall
mov
xchg
xchg
or
std
loope,pn
loopne
jnp
ja
jns
nop
mov
add
rolb
bound
or
jbe
jno
enter
sahf
sti
pop
xchg
aaa
enter
ret
call
movb
adc
fnsave
movsl
jno
fistps
rcrl
testl
xchg
in
pop
icebp
add
xchg
mov
adc
rorb
adc
jl
add
aaa
pop
mov
iret
scas
cmpsl
xor
in
add
xchg
std
jnp
lahf
aas
addb
add
add
mov
sbb
cmp
jge
cmp
add
sbb
xchg
dec
imul
add
mov
insl
mov
pop
add
aas
ror
add
jb
mov
xchg
inc
add
subb
inc
inc
and
sub
mov
ss
push
shlb
push
outsb
dec
sbb
cli
push
mov
cmp
or
ret
rclb
scas
xchg
icebp
clc
add
bnd
rcl
xor
or
pushf
add
enter
xor
inc
es
dec
mov
add
and
cltd
and
add
cli
mov
faddl
sub
and
push
loop
and
cmp
xor
mov
pop
jbe
ds
dec
lds
jl
adc
cmp
inc
or
orb
add
fldl
fbstp
add
rorl
pop
nop
aaa
add
xchg
adc
mov
pushf
mov
cmc
dec
sbb
jne
xor
cmp
adc
enter
fcoms
popf
sbb
repnz
in
mov
cmp
ljmp
mov
cli
xchg
jns
add
cmovg
fiadds
add
into
cmc
pop
lods
xor
je
fs
subb
sbb
or
jno
add
fidivrs
loop
add
loopne
mov
daa
ja
shr
pop
pop
add
mov
push
push
fwait
mov
cltd
jo
arpl
aas
mov
inc
and
dec
pop
add
das
loope
pop
lahf
adc
or
push
test
adc
sahf
pop
pushf
nop
jp
js
mov
pop
out
push
cmpsl
cmp
ret
and
pushf
and
push
push
sti
push
or
je
mov
jecxz
or
push
pushf
xchg
mov
sub
aas
ficomps
mov
int3
int
or
in
cmpw
add
imul
adc
mov
ret
dec
lods
shl
sub
fdivrl
cmp
or
sub
mov
pop
ljmp
jae
sar
int3
xlat
xor
ljmp
aam
push
pop
jnp
jge
inc
mov
pop
fs
iret
adc
fsubrl
call
xchg
aad
add
mov
bnd
add
mov
stc
mov
sbb
ret
lock
imul
sub
into
xchg
pusha
cmp
add
test
mov
cmpsb
pop
pop
cwtl
verw
ss
push
jge
add
iret
xor
jle
testb
xchg
push
in
cmp
jle
mov
add
mov
pop
xlat
mov
add
or
iret
add
cmpsl
pop
fwait
ret
rolb
add
or
fadds
pop
add
jg
dec
dec
add
mov
mov
mov
and
enter
int3
add
orb
dec
mov
xchg
enter
ss
and
pop
xchg
dec
dec
xor
jb
sbb
xor
shlb
mov
data16
sahf
subl
movsb
mov
dec
not
push
test
or
xchg
add
pusha
xchg
adc
enter
aaa
mov
jne
jo
ficoml
add
rorl
jae
rclb
add
cmpl
add
push
js
add
sub
cld
nop
ret
add
loope
daa
gs
add
xchg
sbb
xchg
cli
je
add
insl
mov
mov
jmp
ret
hlt
inc
add
aas
lds
test
leave
pop
fwait
lahf
xchg
cli
ja
daa
scas
mov
xor
loop
sbb
inc
into
mov
adc
mov
xlat
nop
add
push
add
cmp
xor
test
xor
leave
jno
sub
mov
mov
int3
insl
rcrl
jne
andl
add
add
lock
push
mov
cld
lods
xlat
inc
rorl
lea
in
into
aam
add
push
jle
xor
and
or
add
leave
sbb
outsl
jo
data16
xchg
and
mov
test
jb
mov
xchg
sub
add
xor
lahf
mov
sbb
fsts
cld
mov
pusha
clc
out
xchg
push
je
callw
cmc
popa
stos
xchg
lahf
inc
ds
add
sti
mov
ds
dec
push
iret
daa
test
paddd
inc
mov
pop
add
ja
aam
fildl
mov
or
out
add
pop
inc
cmc
sub
push
stos
jle
leave
add
cmp
lcall
roll
jnp
pusha
mov
pop
add
mov
faddl
add
push
sahf
or
sarl
mov
por
cmp
test
ret
cmp
jns
cmpsb
negb
dec
ret
fadds
cmp
add
nop
ljmp
call
xor
jb
fs
mov
rcrl
cmp
cmp
aas
adc
ret
sbb
add
lea
mov
es
aas
jno
add
push
jmp
sub
js
movsb
add
pop
call
pushf
shrb
add
cwtl
shlb
cmpsl
pushf
adc
pop
adc
cmp
ret
aad
jo
aaa
lock
int3
push
arpl
arpl
pop
sahf
xchg
dec
add
dec
cli
sbb
pop
sub
cmp
call
jb
add
jo
or
movsb
hlt
mov
pushf
cmp
push
dec
push
jno
inc
add
pusha
mov
jl
add
fiadds
mov
push
add
fstl
cmp
cmpb
ret
add
aas
loope
cmp
hlt
add
sbb
lea
or
xor
mov
rorl
andb
popa
add
jg
rcll
add
push
pusha
mov
aaa
mov
mull
add
ds
mov
addl
push
or
roll
add
dec
mov
or
add
clc
imul
mov
push
insl
orb
add
sahf
pop
out
cwtl
sbb
inc
mov
and
rorl
cmp
into
cltd
je
mov
fs
cld
inc
cld
dec
add
inc
stos
rorb
leave
push
cmp
jmp
movsb
or
jecxz
fidivrl
or
lock
cmpsl
add
ror
add
cli
add
ret
out
xchg
clc
inc
mov
andb
and
fistpll
pusha
fnstsw
sbb
sbb
imul
jmp
sbb
add
or
and
mov
sbb
add
lahf
sbb
lods
icebp
gs
xchg
shl
aad
addb
fsubl
pop
pop
pop
cmpsw
adc
in
mov
test
mov
jp
clc
cltd
out
fnsave
lods
cmp
rorl
rcrl
out
in
jmp
xor
cwtl
loope
inc
add
push
out
adc
dec
in
cmp
andb
add
pop
or
jl
aaa
inc
jns
xor
fstps
lret
pop
xlat
dec
xchg
cmpsl
sub
cwtl
mov
jo
arpl
dec
testl
sub
or
or
les
clc
sub
add
xchg
push
mov
movsb
add
mov
idivl
loop
jge
pop
sbb
mov
xorl
lods
push
les
xlat
pop
xor
rcll
adc
lcall
xchg
shlb
inc
mov
out
jb
test
enter
or
movsb
js
jns
add
xor
add
cmc
repz
ficomps
jp
test
push
dec
lods
hlt
out
jge
add
fwait
icebp
mov
lret
pop
popa
nop
imul
push
xchg
push
mov
les
cmpb
add
or
mov
or
je
cmp
add
cmpsl
or
stos
movsl
sbb
sub
add
push
or
dec
and
sub
lahf
xor
ss
cmp
mov
or
sub
mov
add
mov
ja
jnp
jo
add
push
popf
ljmp
or
out
and
add
rorb
add
cltd
pop
cmpsb
jge
push
add
jns
mov
adc
test
push
shlb
jns
loopne
setg
or
jl
pusha
xor
pusha
push
insb
add
unpcklps
inc
in
pusha
xorl
addr16
enter
xchg
add
aam
jno
mov
clc
jle
leave
in
inc
mov
add
les
dec
xor
cmp
in
lea
add
xchg
js
stos
es
dec
pop
push
jmp
mov
add
outsl
cmp
xor
jle
xchg
xor
sahf
dec
bnd
nop
cwtl
adc
pusha
or
cmpsl
xchg
adc
sbb
mov
inc
push
pushf
mov
jno
add
ret
add
lea
adcl
ret
push
pop
add
dec
imul
push
inc
pusha
sbb
inc
add
dec
sbb
push
mov
mov
push
jbe
cmp
dec
test
std
js
inc
xchg
mov
add
stc
push
dec
cmp
add
xchg
fildll
pop
push
xor
repz
xorb
mov
dec
cwtl
push
jge
add
test
add
push
dec
fs
mov
lods
sti
pop
push
mov
jg
and
cmp
mov
cmpsl
pop
lock
xchg
cmp
lahf
add
inc
mov
imul
cmp
cmpsl
and
sbb
mov
push
xorb
jle
xchg
in
jg
iret
xlat
es
add
xor
je
pop
fiadds
test
adc
push
sbb
push
cltd
das
addr16
adc
call
dec
mov
sub
pusha
subb
arpl
jo
inc
pusha
loopne
testb
and
push
add
loopne
cwtl
or
enter
in
ret
adc
jne
leave
xor
add
addl
xor
pop
inc
sub
mov
jne
inc
xor
or
pushf
paddb
add
outsb
jne
add
repnz
xchg
mov
add
push
xchg
inc
jo
mov
pop
cld
inc
mov
jl
or
adc
sub
and
add
mov
xchg
in
pop
mov
add
shlb
mov
add
cmp
dec
xor
xchg
pop
daa
push
notl
lds
or
and
push
xchg
and
sub
cmc
repnz
add
adc
jo
add
push
std
dec
push
das
stos
hlt
test
hlt
push
cs
add
pop
xlat
xor
adc
adc
add
insl
push
add
fucom
jge
adcb
pop
subb
test
pop
rcrb
shll
jmp
add
mov
adc
pop
in
loopne
mov
inc
jo
pop
repz
dec
mov
add
mov
adc
push
add
jl
negb
addb
add
mov
jno
add
stos
ret
sub
pushf
add
iret
mov
fcompl
jo
pop
or
add
lret
rolb
popa
hlt
pusha
movsl
dec
add
inc
bound
pop
fstpt
sti
xor
cli
xchg
jno
add
push
icebp
clc
xchg
cwtl
ret
nop
pop
dec
into
and
jle
sbb
xor
xchg
xchg
imul
adc
fmull
or
sbb
cmp
inc
adcb
jp
mov
lcall
fwait
push
xchg
adc
pop
or
xchg
subb
in
iret
or
add
or
inc
adc
inc
lods
mov
xchg
xor
test
jb
scas
push
enter
add
lods
addb
lea
pushf
add
sti
mov
in
sub
or
sub
pop
xor
push
xchg
add
jb
pop
cmp
xor
inc
popa
and
and
ljmp
insl
jmp
add
cmp
test
add
sub
aas
in
jnp
scas
jl
add
in
add
cmp
test
test
cmpsb
insb
out
mov
inc
add
mov
jge
xor
shlb
and
sbb
add
bound
ljmp
add
push
add
loope
iret
sbb
adc
pop
mov
stos
outsb
cwtl
call
decb
ljmp
jnp
inc
xor
adc
les
pop
add
dec
push
fwait
or
icebp
add
shrb
adc
in
add
jmp
cmpsl
add
pop
enter
cli
xchg
xor
fisubl
add
jbe
mov
loop
pop
or
mov
dec
jne
mov
insb
testb
nop
push
push
cmp
xchg
cmp
inc
fldl
jg
mov
ds
mov
lds
dec
jno
adc
sbb
scas
aam
add
xor
add
std
mov
xchg
andb
mov
xlat
or
dec
call
out
aam
sub
outsl
ja
into
cmp
sbb
inc
repz
or
testl
push
in
lds
test
xchg
add
jo
sarl
fsts
pop
xlat
mov
cmp
dec
sbb
jg
pushf
or
mov
je
shll
adc
xor
jb
add
jg
mov
mov
sbb
ficoml
xor
mov
dec
xor
mov
test
cmp
dec
jg
aas
outsb
ret
mov
repnz
insl
mov
idivl
dec
add
loopne
pop
jns
add
movsb
pop
push
fbstp
mov
int3
rolb
adc
in
xor
jmp
mov
pop
sti
push
mov
jp
movsb
add
testl
push
call
gs
sub
jp
xchg
jmp
add
mov
into
arpl
mov
inc
add
dec
push
ret
mov
mov
jo
loop
adc
push
dec
xor
jp
jg
cmpsl
fdivs
mov
or
xchg
inc
frstor
add
jae
and
mov
stos
add
cmc
jbe
pop
mov
add
rcrb
lock
cltd
sub
in
xor
sub
inc
out
jle
push
fidivrs
int
cmp
lods
and
cmp
xlat
and
in
add
mov
popf
ss
shll
aas
insl
push
add
cmpsb
fs
push
lods
mull
add
sub
add
push
pusha
dec
mov
mov
push
mov
jl
add
loope
out
pop
add
jo
mov
sub
cmp
cmp
orl
aad
xor
push
add
sbb
xchg
or
add
inc
andl
fs
add
xor
lock
push
jecxz
int3
add
jnp
mov
cmp
fwait
cltd
aam
cmp
mov
mov
push
loop
nop
cmp
cmpsb
bound
pop
repnz
test
adc
and
ss
out
ds
data16
push
xor
js
hlt
call
cwtl
push
rol
test
dec
arpl
inc
popa
add
movsl
es
lcall
push
fidivs
add
mov
std
xchg
push
jne
add
nop
push
pop
or
xor
jo
rcrb
lahf
es
jbe
jle
rcll
shll
mov
mov
sbb
jge
out
cmpb
popf
imul
mov
add
or
rolb
repnz
jae
sub
and
xchg
add
std
lea
xor
popl
or
xor
out
aad
or
add
jmp
fcmovb
inc
mov
add
mov
xor
dec
stos
sbb
out
push
add
aas
mull
inc
fcomp
sub
xor
push
inc
pop
cmpsb
and
add
dec
mull
mov
xor
loope
jno
xor
add
cld
shll
add
cmc
cli
pop
add
lret
mov
adc
add
add
filds
cwtl
add
ja
pop
jge
repz
xchg
or
enter
sbb
add
cmc
pop
mov
lret
cmp
mov
push
mov
sti
mov
pop
xor
sub
push
das
xorb
mov
pop
xor
push
xchg
nop
xchg
repz
insl
fwait
adcb
add
aam
test
int
aaa
inc
sahf
add
jle
mov
sbb
mov
add
jmp
repnz
test
sub
mov
es
add
aaa
test
add
jae
xchg
insl
cmp
pop
leave
jnp
shlb
es
pop
in
adcb
or
add
xchg
scas
push
cli
push
loopne
mov
out
add
insb
pop
repnz
ja
add
adc
jmp
lea
xchg
cmp
test
add
or
xor
push
loopne
add
in
in
push
lea
dec
pop
push
jno
mov
push
pop
shrb
mov
arpl
jb
jo
roll
lds
dec
aam
daa
imul
xor
adc
enter
push
rorb
add
add
fs
loopne
cmp
or
cmp
mov
jbe,pn
fiaddl
xlat
cmp
pop
and
movb
and
xchg
js
xchg
and
add
aad
push
or
cld
cmp
fmull
inc
rolb
add
or
add
sub
add
daa
push
jne
inc
jbe
rcrl
rcr
mov
cwtl
mov
test
pop
nop
sbbb
mov
lret
dec
in
rolb
mov
test
xchg
mov
and
cmc
inc
or
add
dec
or
add
adc
insb
and
js
xor
mov
pop
sbb
out
jmp
xor
das
jle
push
pop
push
fcomps
dec
pop
mov
mov
sbb
rcr
sbbb
pop
cmp
jmp
and
inc
shlb
xor
xchg
inc
popf
rcrb
sub
add
loopne
enter
jecxz
xor
aam
wbinvd
push
insl
addr16
add
push
cmp
push
mov
fdecstp
mov
sub
or
out
pusha
add
stos
dec
aam
je
movb
pop
push
pop
lret
ljmp
add
mov
cmp
shll
fnstcw
pop
nop
int
pop
cmpb
pop
push
adc
ja
and
pop
add
mov
dec
add
lods
mov
loop
add
jbe
ds
push
outsb
xchg
sub
cmp
popa
inc
lea
cmp
mov
xchg
push
mov
inc
mov
aaa
mulb
cmpsl
es
lock
leave
sub
cmp
pop
cwtl
mov
cmp
push
sbb
adc
in
orb
mov
loopne
test
ret
movsl
sbb
xchg
cli
pop
dec
shlb
sbb
add
push
add
test
cmp
dec
pop
or
lods
fldt
stos
mov
inc
and
jl
mov
push
jecxz
repnz
lret
roll
jmp
iret
inc
insb
add
pop
mov
push
lods
dec
paddd
push
cwtl
enter
pop
mov
bound
push
ror
roll
mov
sub
clc
sub
rcrb
add
lods
add
and
jmp
add
mov
lahf
orb
mov
dec
movsb
adc
sbb
aas
lea
gs
mov
mov
xchg
push
jnp
enter
pusha
rcl
aad
loop
add
js
daa
mov
sub
mov
mov
addr16
into
hlt
rclb
xsaveopt
push
popl
mov
jne
add
gs
pop
xlat
pop
cmpsl
mov
cmc
push
jo
cmp
out
add
push
pop
jb
nop
adc
dec
add
addl
add
lds
in
inc
shrb
imul
fisttpl
pop
push
push
or
push
add
xlat
dec
mov
jne
lock
add
test
movsl
xorb
mov
out
push
mov
sbb
xchg
rorl
add
push
stc
xor
adc
cltd
inc
leave
mov
mov
xor
mov
push
enter
inc
mov
xor
repnz
out
sbb
adc
xchg
add
sbb
sti
out
add
mov
rorb
push
cmpsl
lds
adc
fdivp
mov
sbbb
cmp
and
es
push
dec
xchg
add
jge
lea
test
pop
pop
pop
dec
jmp
add
sbb
loope
std
out
pop
add
movsb
faddp
in
xor
sarb
pop
and
add
lret
addl
push
or
enter
sub
add
stos
sub
pushf
add
push
out
repz
dec
add
pop
mov
repnz
rcrb
xor
or
sub
xor
repnz
test
inc
lock
daa
data16
hlt
xor
loopne
xchg
push
add
inc
addb
push
fadd
nop
mov
add
call
mov
add
shl
cmp
mov
pop
add
jmp
dec
or
add
movsb
cmpsl
fstpt
sub
pop
push
repz
cmp
xchg
jo
cld
jbe
add
test
xor
ds
cmpsl
pop
add
jle
in
pusha
dec
push
jne
and
cwtl
xchg
jg
cmp
pop
aad
and
aaa
ja
sub
cltd
dec
je
add
sbb
mov
add
ret
daa
roll
jl
push
addb
xor
sbb
cltd
push
sbb
fsubr
loope
iret
in
pop
psubd
dec
cmpsl
mov
inc
xor
inc
addb
outsb
inc
push
sti
mov
add
fwait
out
dec
push
push
call
in
inc
cmp
jmp
or
addb
or
adc
sbb
lds
jmp
pop
inc
push
int3
mov
add
mov
push
pop
mov
ljmp
int3
out
cmpb
push
add
dec
cmp
out
shlb
inc
xor
sarl
or
and
add
mov
xor
xor
jb
shll
and
rcrb
xor
sbb
outsl
test
daa
fiadds
cltd
loope
int3
mov
popa
rclb
add
fstps
stc
cli
out
sbb
ljmp
cltd
fcmovbe
xchg
cmpsl
shr
mov
add
mov
dec
aaa
sahf
pop
fcoms
sbb
mov
push
and
rcl
jne
out
mov
push
adc
movsl
sub
rcrl
adc
add
rorb
test
and
mov
push
mov
in
add
inc
lret
fabs
xchg
emms
mov
pop
mov
mov
add
and
cmp
fcmovb
clc
mov
adc
add
jg
push
incl
pop
xlat
xchg
pop
add
fsubrl
inc
sub
pop
jl
test
mov
add
test
hlt
add
pop
jno
mov
push
push
ss
xchg
add
mov
outsb
pop
fwait
orps
popa
bswap
sub
dec
push
imul
outsb
dec
call
roll
pusha
fsubs
ror
pop
or
mov
es
add
jp
pusha
aas
mov
faddl
aam
loope
pop
out
and
fldenv
dec
clc
call
popa
cs
add
add
pushf
xchg
inc
add
dec
cmpsl
mov
lret
daa
add
cld
icebp
orb
in
rolb
inc
daa
fwait
or
out
shrb
push
cmp
xlat
or
js
jnp
cmpsb
add
sub
add
dec
dec
add
mov
push
pusha
xor
mov
xchg
cmp
dec
lods
push
and
ds
or
inc
cld
mov
clc
adc
dec
pop
jecxz
loope
test
add
xor
into
add
ror
stos
sub
add
cwtl
mov
jno
xchg
pop
insl
sti
jnp
push
add
xlat
sbb
jp
sub
or
cmp
test
add
ljmp
push
mov
ret
push
orl
add
movsb
add
out
pop
inc
push
into
std
fcmovne
das
lea
imul
pop
dec
pop
pusha
enter
aas
mov
hlt
lret
out
dec
dec
xor
fistps
lds
push
in
jmp
lret
push
mov
incl
shlb
inc
lret
clc
sub
mov
pushf
pusha
nop
shr
cmp
scas
sbb
std
flds
es
psubsb
rcrb
and
sbb
in
aad
xor
pusha
push
addb
xchg
xchg
and
in
pop
bound
lahf
push
add
shlb
rcrl
ljmp
test
inc
add
sub
dec
loopne
mov
movsb
jne
sub
js
andl
push
xchg
sbbb
or
shrl
out
add
stos
push
mov
add
push
push
jae
sbb
js
sbb
xchg
inc
leave
xchg
lds
fdivrl
lods
outsl
add
fwait
aas
jne
in
xlat
add
add
mov
cmpsb
mov
pop
notl
and
addb
iret
clc
add
leave
and
sub
or
cwtl
mov
pusha
nop
dec
sub
pushf
mov
adcl
add
push
push
mov
fiadds
add
sub
add
mov
insb
bnd
add
pop
sbb
into
sbb
inc
ss
xor
cmpsl
mov
mov
fiadds
into
sub
aas
mov
or
cmp
ljmp
mov
adc
add
loop
adc
out
bnd
dec
das
mov
add
addr16
mov
jp
dec
sbb
mov
add
iret
sub
xor
mov
mov
jmp
mov
cwtl
mov
outsb
xor
rcrl
imul
je
fs
add
xor
movsb
and
sbb
and
sbb
push
ret
mov
cmp
faddp
jae
jge
push
fldenv
fmull
push
lds
inc
jge
add
dec
add
lods
stos
pop
cmp
ret
add
and
sub
mov
dec
add
iret
xor
push
mov
jg
or
mov
push
aam
add
jne
daa
adc
mov
adc
aas
add
pusha
adc
add
das
repnz
cmp
repz
subb
out
loopne
add
cmp
pop
ds
jg
ss
insl
imul
or
scas
movsl
bound
xor
jmp
add
das
jne
mov
imul
outsb
push
add
in
insb
dec
dec
sbb
rolb
sahf
call
pusha
xchg
icebp
mov
aas
cmp
clc
cwtl
cmp
adc
mov
or
push
cltd
lahf
jb
pop
inc
mov
out
fwait
outsb
in
jmp
pop
and
jae
add
xor
jl
pop
adc
push
lods
in
mov
fcomps
xor
jge
and
or
cld
mov
pop
add
lock
dec
or
cld
push
mov
mov
mov
pop
and
pop
push
xchg
les
xchg
mov
out
sub
add
fwait
inc
xchg
jp
add
xchg
roll
lcall
fdivs
jbe
xlat
rcr
add
xchg
pop
sub
clc
xor
push
pop
test
stc
mov
and
xchg
in
in
add
push
lods
in
inc
ds
and
lds
push
mov
add
sbb
rolb
roll
jmp
xlat
in
movb
add
mov
outsb
lods
pushf
pusha
cmp
xorl
std
dec
nopl
inc
stc
insl
mov
mov
and
push
clc
sub
cmp
push
jl
inc
pop
mov
fwait
push
add
sarl
jae
cld
dec
int3
add
mov
pop
add
push
add
out
push
imulb
add
call
rcrl
xchg
dec
or
add
push
sbb
in
cmp
test
push
cmp
and
cmpl
popf
cwtl
test
jnp
cs
dec
jno
aad
rolb
sub
add
push
and
add
ret
gs
add
mov
and
scas
push
xor
mov
fiadds
repnz
loopne
mov
or
add
jne
cmp
addl
add
outsl
dec
arpl
mov
pop
sahf
adc
inc
es
rcl
jns
jo
pop
sub
lock
imul
sub
insl
add
mov
cmp
xor
add
stos
sub
add
mov
test
fnsave
lahf
push
je
dec
mov
or
scas
sti
and
xor
push
imul
fadds
xor
into
mov
test
imul
outsb
cmpsl
adc
xchg
int
push
out
add
sbb
call
mov
fadds
fstps
and
gs
jp
lret
aas
xor
movsb
add
adc
in
pop
push
scas
sub
shrl
adc
push
adc
ljmp
add
add
in
cmp
sbb
xabort
leave
push
jns
add
cmp
push
pusha
ficoml
imul
cmp
add
sahf
or
mov
cli
mov
pusha
add
mov
cmp
fwait
pop
popa
rcrb
or
sub
dec
push
push
add
js
push
fmul
add
push
jnp
and
sbb
lods
rclb
or
jbe
addr16
bound
shlb
mov
jno
jbe
add
ret
jnp
mov
stc
imul
fcmovbe
and
and
adc
nop
or
andb
daa
test
sbb
mov
add
stc
sub
rcl
adc
nop
push
sbb
mov
mov
cld
mov
xor
popa
imulb
out
mov
or
cmpsl
sbbb
and
pusha
mov
mov
dec
inc
push
in
xchg
xor
cmp
scas
xor
xchg
sbbb
jge
leave
sbb
dec
divl
or
hlt
push
inc
adc
xlat
jmp
add
jge
out
sbb
aas
lret
jb
jecxz
mov
pop
movsb
sub
or
mov
ret
fnsave
pop
dec
push
fwait
ljmp
bound
popf
cs
jae
add
cltd
insl
aam
fsubrp
sbb
pop
jle
packsswb
int3
mov
cmp
rolb
push
cmpsb
repnz
out
add
push
jmp
stc
sbb
add
jmp
xchg
aam
push
ss
scas
pop
cmp
orb
dec
mov
add
dec
dec
jbe
jns
mov
add
aam
push
lcall
push
mul
mov
cmpb
inc
mov
out
mov
xchg
mov
enter
xor
push
testb
adc
pusha
jo
pop
cwtl
outsl
ficompl
add
adc
mov
loope
push
dec
shrl
jmp
xlat
cmpsl
fdivrs
inc
mov
mov
ja
mov
jne
push
xchg
xchg
scas
rsm
or
or
jmp
sbbb
xchg
push
jge
adc
out
pop
andb
add
jge
mov
shl
ds
or
add
xchg
or
test
sti
cmp
or
and
push
add
fcompl
add
dec
dec
add
cmpsl
pop
add
add
sarb
mov
mov
div
add
cmp
out
mov
lods
rolb
and
add
movb
in
aam
sbb
add
jle
mov
add
loope
shr
dec
pop
sbb
jae
pop
arpl
sahf
out
adc
inc
xchg
fs
rorl
lret
in
xchg
mov
lock
add
lds
xorl
data16
les
xor
add
insb
mov
add
push
aad
insl
dec
repnz
xor
movb
and
lahf
in
pop
ret
jne
push
cmpsb
pop
add
vpcmpeqb
adc
mov
add
and
loopne
call
mov
js
outsb
xor
mov
pop
je
cmpsb
stos
sbb
push
add
push
mov
add
mov
flds
xchg
hlt
jle
add
faddp
pusha
mov
adc
dec
addb
call
shlb
pop
jge
or
outsl
dec
or
xor
xor
icebp
sbb
fisttpl
fiaddl
sub
or
pop
push
jle
pop
sbb
sub
xor
sbb
push
jnp
or
push
int
cmp
push
call
push
xor
add
xchg
ret
pop
loopne
mov
lret
push
lods
fstpt
and
dec
lahf
jnp
mov
sub
sub
fcoms
lock
and
xchg
add
sub
cld
add
pop
mov
data16
sub
sub
pop
push
lock
outsl
mov
pop
leave
popf
xlat
inc
mov
push
add
mov
test
in
test
jne
movsl
mov
and
sbb
xchg
add
sub
add
or
sbb
movsl
repz
jmp
fstl
add
lcall
add
pop
lea
jae
add
xor
test
mov
ss
xchg
jle
rclb
push
fnstcw
in
add
icebp
xchg
add
test
jle
call
push
div
movsb
pop
gs
push
cmovae
jae
push
mov
shrb
pop
ljmp
inc
mov
ror
mov
add
jbe
pop
and
or
aad
add
sti
adc
add
sbb
pusha
loope
or
inc
fdivrs
dec
and
lods
fidivl
jle
dec
cmp
outsl
add
shrb
movsl
jl
fsubl
push
cld
sbb
add
mov
lock
add
sub
push
inc
cmpb
jle
dec
lcall
inc
cmp
rcrl
scas
test
sbb
andb
mov
cmpb
or
aas
xchg
repnz
test
push
xchg
inc
in
adc
test
jl
imul
daa
xchg
sub
orb
inc
loopne
iret
xor
repnz
call
stos
imul
jbe
push
sbb
add
icebp
push
insl
scas
push
push
mov
sub
mov
and
pusha
inc
and
and
jbe
mov
ljmp
inc
or
and
and
pop
es
push
cmp
push
sahf
pop
mov
inc
lea
or
rcrl
cmp
imul
test
dec
inc
loopne
inc
into
and
scas
dec
dec
ja
sub
add
jl
cmp
subl
fists
dec
ret
outsb
jno
lahf
mov
add
out
jno
jb
stc
pop
roll
clc
cmp
jmp
cmp
pop
cmpb
mov
mov
adc
repnz
ret
cmp
addb
xor
add
dec
into
aam
push
add
addb
add
stc
scas
les
and
push
add
pop
cmp
jg
shr
xor
sahf
sub
add
dec
inc
push
mov
stc
aaa
add
into
subl
clc
adc
dec
xor
and
push
push
shlb
fiaddl
arpl
adc
rorb
lahf
pop
jb
call
and
test
shl
in
stc
mov
loope
inc
cmp
add
popa
mov
out
push
adc
and
sbbb
jle
movsb
imul
pop
push
add
test
or
push
insl
fimull
rolb
inc
or
and
xchg
jo
jecxz
int3
pop
jb
ljmp
das
xor
loopne
add
imul
push
inc
adc
xlat
fdiv
pop
add
cmpsl
jp
add
notl
jns
inc
push
fsub
jno
test
cmp
shr
test
xor
adc
sub
test
shl
push
adc
jne
xor
sbb
pop
gs
fimuls
adc
lret
sbb
adc
loopne
loop
add
mov
testl
jl
dec
ja
out
xchg
sub
sub
pop
cmovb
and
add
sbb
cmp
jae
lahf
add
mov
mov
add
jmp
add
movsl
add
add
add
mov
hlt
push
aam
sub
jp
jno
jmp
mov
shl
or
inc
jl,pn
add
sbb
rolb
outsb
mov
into
add
lea
cmc
add
sbb
pushf
fcmovbe
adc
in
clc
jbe
jg
xchg
add
push
loop
sbb
or
mov
jg
in
mov
lret
test
mov
mov
inc
and
nop
mov
xchg
clc
gs
lods
scas
aaa
lea
pop
fsubr
xchg
loopne
sbb
rcrb
inc
pop
bound
xchg
xor
in
mov
iret
rcrb
jle
out
loopne
xchg
mov
xor
and
add
push
jmp
test
jg
pusha
push
sbb
push
cmpsl
inc
cmp
in
add
cmp
data16
add
xchg
mov
jo
push
popa
mov
stc
andl
pop
incl
sti
adc
ja
add
lds
add
test
adc
dec
mov
movsb
mov
cmpsl
adc
or
mov
pop
arpl
shlb
mov
push
or
dec
pop
std
jp
leave
loopne
cs
stos
mov
jle
and
fwait
sbb
adcb
jmp
roll
push
sbb
mov
test
xlat
cmp
int3
nop
movsl
sbb
cs
imul
jne
leave
flds
hlt
sbbl
idivb
mov
fiaddl
pop
sub
std
call
sbb
push
jae
jno
inc
mov
xor
and
jmp
addb
lods
mov
or
xor
add
notb
cmc
mov
outsl
lock
sbb
xor
leave
cld
mov
add
lcall
add
daa
push
pop
in
pop
loope
xorb
popf
add
or
test
rol
js
ja
push
js
mov
loopne
dec
stos
je
add
cs
cmp
jae
jge
mov
mov
adc
repnz
cmp
ljmp
and
lret
out
mov
mov
movsl
imul
mov
cmp
sub
push
mov
insl
es
mov
jns,pt
jno
add
mov
adc
inc
clc
pop
add
mov
imulb
add
mov
dec
das
or
add
or
jmp
cmp
or
fldl
add
lods
push
enter
or
ds
das
hlt
mov
pop
pop
pop
mov
aam
pop
lret
jg
add
popf
andb
ret
imul
ficompl
add
xor
cmpsl
sbbl
add
jmp
add
lods
cmp
add
es
lcall
ret
loop
add
aad
push
out
in
mov
push
xchg
add
icebp
outsl
cltd
push
xchg
xchg
pop
rclb
and
xchg
cmp
scas
add
shl
loope
add
mov
xchg
add
push
jo
jp
add
iret
cmp
fsubr
scas
add
add
mov
xchg
rcrb
mov
add
lds
inc
dec
cld
jno
arpl
inc
incl
jns
das
mov
add
dec
es
ljmp
xchg
xchg
jecxz
addb
scas
outsb
lret
jle
das
pushl
pop
cmc
mov
sub
pop
add
rcrb
scas
rorb
cld
or
or
and
sbb
sub
iret
add
xor
rcll
arpl
sbb
pusha
cwtl
jnp
mov
pop
add
sbb
sub
mov
or
jmp
rcll
inc
add
push
fcmovne
in
cwtl
out
xor
mov
or
addb
xchg
mov
add
pop
fidivrl
lahf
add
dec
bnd
cmp
dec
add
lods
mov
push
add
push
adc
mov
andb
add
arpl
in
outsl
enter
pusha
adc
inc
sbb
daa
je
popf
sbb
lea
add
cmp
je
sarl
mov
add
sub
add
lahf
push
aad
in
xchg
into
inc
and
mov
dec
imul
xor
push
pop
aaa
sbb
ss
push
mov
jns
lret
subb
mov
mov
add
inc
xchg
mov
mov
movsl
shrb
mov
add
xlat
pop
nop
sbb
push
or
cmpsl
pop
push
xor
mov
dec
cmp
mov
or
add
push
add
daa
loopne
rep
ret
jno
and
out
cltd
add
xor
add
orb
mov
xor
nop
push
mov
jne
into
dec
or
mov
jmp
and
cmpsb
mov
in
mov
add
add
scas
nop
push
add
ja
push
pandn
mov
arpl
inc
add
or
add
cmp
out
and
testl
xchg
sub
dec
fdivs
mov
rclb
mov
or
cltd
into
flds
je
mov
push
add
xor
fisttpl
mov
jne
ror
push
mov
sahf
adc
hlt
fsub
jbe
push
clc
dec
mov
rolb
inc
mov
xchg
xchg
sbb
mov
add
es
jg
in
aad
push
pop
sbb
insb
mov
mov
test
pop
pop
aaa
lret
mov
insl
popf
push
fcoms
xlat
add
ss
jle
in
ja
aad
push
sahf
mov
loope
xor
add
lea
and
roll
xchg
pop
jno
lock
add
xor
cmp
add
aam
aad
nop
enter
dec
movsb
inc
cli
or
push
xchg
adc
mov
add
mov
ds
call
bswap
xor
pop
cs
mov
mov
test
push
and
sbb
cmp
sub
ficoml
test
xchg
pop
inc
jb
sbb
popf
mov
xor
out
jno
scas
bound
sub
paddq
out
add
sub
add
fs
push
or
mov
xchg
push
js
xlat
fwait
mov
fucom
ss
testl
push
cmp
aas
and
ja
mov
mov
xchg
add
or
stos
jecxz
aas
clc
adc
lahf
push
mov
inc
jne
xorb
adc
ret
ds
push
ror
scas
and
mov
mov
and
push
mov
lods
inc
es
push
sar
mov
pop
lahf
mov
rclb
cli
or
xor
lret
add
gs
or
scas
push
push
add
and
loope
xor
jae
cs
jns
aam
cli
dec
adc
mov
jnp
xchg
fdivrs
mov
das
std
sti
dec
lret
push
dec
add
loope
dec
cmp
cmc
adc
and
jo
xor
or
cli
add
adc
fists
insl
mov
lods
ds
sub
xchg
push
sbb
push
sti
xorl
cs
push
sbb
xor
dec
fiadds
movsl
loop
mov
add
add
mov
xlat
inc
adc
cmp
sub
scas
mov
test
inc
adc
in
je
loopne
add
lret
jne
sbb
out
sub
sti
in
pop
add
sub
in
loopne
fidivrs
jne
cmp
test
sahf
inc
add
pop
xchg
ret
fwait
or
xor
inc
push
mov
add
add
push
frstor
jge
mov
in
add
out
mov
cmp
loop
mov
mov
mov
int3
push
sub
fs
stos
pusha
push
shrb
loop
cmc
out
dec
dec
push
in
adc
push
les
push
leave
mov
adc
push
ret
add
int3
enter
and
cmpsb
or
adc
rorb
addr16
cld
subl
xor
scas
clc
sar
dec
out
push
ljmp
mov
add
jmp
shlb
xor
mov
call
jmp
data16
cli
add
mov
addr16
sbb
and
pop
stc
insl
add
inc
sbb
inc
lret
push
xor
sbb
push
lods
int3
add
sub
or
jl
xor
add
mov
or
mov
pop
pop
dec
mov
adc
push
mov
dec
mov
xor
imul
pop
add
loop
dec
inc
jmp
pop
aad
shrl
lea
sbb
sbb
mov
les
repz
sub
inc
dec
inc
ja
jne
mov
roll
pop
or
inc
cmp
dec
cmp
adc
fdivl
daa
xlat
xchg
rolb
xchg
and
jns
inc
movsb
mov
xor
lods
aad
rolb
xchg
inc
and
imul
lea
mov
xor
xor
fld
push
popf
and
and
sahf
sub
and
add
inc
xor
nop
inc
jae
add
or
sbb
push
outsb
push
push
dec
fbstp
jae
dec
mov
lahf
leave
pusha
dec
rolb
movsb
stc
fsubrs
fs
xchg
idivb
nop
cmpl
adc
dec
push
ficoml
add
push
lods
jmp
push
repz
inc
add
xor
outsb
add
loop
subb
daa
lock
subl
cli
cmp
xchg
xchg
push
mov
jne
sub
xchg
in
add
dec
push
cmpsb
icebp
push
aas
jle
and
or
cmp
xor
add
push
add
mov
mov
fidivrs
repnz
das
imulb
sbb
orb
sahf
and
sti
add
mov
nop
add
push
inc
inc
sub
fldl
out
sub
cli
jg
mov
cmp
pusha
pop
lods
fptan
pop
add
add
dec
jns
add
and
cmp
add
lret
push
push
add
into
idivb
jge
jo
push
lods
mov
js
add
out
pop
and
in
add
xchg
rclb
jp
repz
stc
mov
add
and
dec
sub
xchg
gs
push
lret
fstp
jg
mov
xor
push
in
inc
or
lret
hlt
add
cmp
imul
lods
ret
add
addl
shlb
add
mov
mov
add
sub
test
xor
jnp
cli
cmpsl
push
es
aas
mov
outsl
add
shll
orb
dec
pop
lret
push
sbb
or
mov
out
mov
mull
jnp
and
in
or
and
movsb
add
jo
and
icebp
and
adc
pop
mov
jge
and
inc
jno
sbb
mov
daa
lahf
add
push
imul
popa
adc
push
mov
add
jo
imul
mov
add
pop
inc
push
and
loopne
dec
adc
add
lock
rclb
mov
and
jo
adc
popf
add
xchg
dec
lock
nop
pop
or
or
mov
sub
jle
add
aas
xchg
std
dec
mov
sbb
sbb
out
sbbl
inc
xchg
dec
addb
rcrb
xor
nop
flds
push
xor
subb
jge
sti
xchg
lret
lock
inc
push
or
jne
add
nop
and
out
jbe
add
lds
je
pop
sub
hlt
shrb
xchg
jns
xor
jge
sahf
pop
mov
mov
gs
jns
add
sub
add
push
pop
jbe
icebp
ja
stc
push
in
sbb
jb
xchg
fdivs
cmp
adc
mov
pop
mov
mov
sub
adc
out
imul
cmp
push
pop
roll
mov
xchg
pop
pop
cmc
pushf
mov
jo
repz
push
ret
aam
add
pop
sub
mov
aad
jge
push
cmpsb
sbb
xchg
loope
loopne
mov
push
fsubs
cmpb
fiadds
xchg
pusha
pop
jmp
je
cwtl
call
outsb
mov
mov
push
dec
or
add
xor
sbb
add
popf
xchg
sbb
add
pop
fidivl
push
iret
add
test
push
pusha
and
roll
jne
repnz
out
mov
in
icebp
ret
dec
mov
cltd
mov
testl
enter
call
add
gs
add
cmpb
xor
jecxz
imul
add
pop
pop
js
pop
into
shll
js
add
enter
out
je
std
mov
add
insb
js
popa
pop
push
mov
cmp
ljmp
or
shll
add
sbb
add
xchg
in
inc
into
push
mov
jp
inc
mov
lahf
add
jmp
mov
jb
add
in
and
roll
test
dec
sub
aaa
jb
pop
fsubrl
push
inc
lock
mov
jecxz
add
xlat
jg
mov
ljmp
sbb
mov
mov
call
pop
cmp
out
push
pop
add
sub
push
add
cmpsl
jmp
shlb
sbb
shl
mov
and
lock
push
xchg
aad
and
push
cmp
hlt
sbb
imul
add
out
insl
or
add
ret
lods
xor
xor
push
pop
cmp
pushf
push
popf
mov
inc
movsb
or
jno
add
repnz
push
fdivrl
mov
jns
ret
add
repnz
add
pop
cmpsb
fsubl
sbb
pop
addl
sub
imul
pop
mov
aaa
out
add
cmc
jecxz
test
nop
dec
add
cmp
add
ljmp
push
pop
mov
push
sub
jge
dec
iret
jbe
add
fwait
push
inc
fldl
jg
add
adc
mov
popl
mov
mov
pop
add
add
dec
stos
inc
and
push
sub
call
imul
addr16
lock
fwait
incl
push
cmp
pop
mov
xorb
push
pop
sbb
xchg
lods
mov
xor
mov
popa
pop
cmp
je
das
mov
add
shll
sub
movsb
add
and
mov
sbb
add
adc
movsb
sub
adc
jae
testl
inc
lea
movsb
xor
adc
shll
pop
push
xor
push
les
loop
jg
stos
cwtl
arpl
aas
mov
adc
add
add
add
and
clc
leave
cltd
xor
out
sbb
imul
add
pop
pop
bound
cli
mov
push
sub
addb
ret
pop
aad
adcl
sub
and
jp
cmp
ljmp
test
and
jbe
test
out
rorl
cmpsl
xor
fsubl
mov
jb
in
jp
shr
xor
push
scas
xchg
push
aam
mov
sbb
das
rorb
mov
or
add
mov
nop
subl
in
jo
jg
ss
pop
sahf
ja
mov
xor
cmpsl
mov
jg
sbb
dec
lret
mov
fs
cmp
scas
mov
cmc
je
add
adc
mov
inc
add
and
mov
mov
inc
aaa
or
mov
leave
xor
sar
fnstcw
add
in
stos
bound
pop
fiadds
adc
cwtl
add
negl
fisubl
pop
add
cmp
in
test
cmp
out
xor
lock
nop
je
dec
jno
jp
aam
pop
push
rorb
pop
push
aas
mov
and
nop
sub
mov
mov
add
add
jo
xor
xchg
add
jge
jae
mov
dec
sti
inc
fisttps
xor
and
imul
movsl
outsb
orb
sbb
repnz
add
adc
sub
mov
mov
aam
mov
adc
inc
shlb
pop
or
clc
cli
test
pop
xor
jno
inc
shl
push
xchg
add
enter
cmpb
popf
loopne
mov
fld
dec
ljmp
jne
inc
pop
rcrb
xorl
roll
mov
out
call
test
mov
xchg
inc
sbb
cmpb
inc
mov
jno
fcoms
mov
sarl
movsl
and
roll
popa
mov
or
and
sbb
repz
es
mov
mov
popf
pop
lahf
xorl
mov
js
mov
les
out
push
pop
lock
xchg
push
mov
cmp
cmp
xchg
jmp
cltd
inc
sbb
pop
ret
data16
out
addb
scas
or
hlt
pop
add
bswap
out
sub
lds
in
fadds
int
or
and
cld
add
and
aad
adc
jg
xchg
xor
popa
sbb
xchg
std
arpl
cmc
cmpsl
pop
jno
push
xchg
mov
lods
mov
cmp
add
or
testl
jb
sub
jbe
cmpsl
mov
call
add
cld
mov
sbb
aaa
jo
jno
xchg
pop
test
push
mov
mov
pop
cmpsl
sub
add
pusha
cmp
push
add
leave
add
into
sbbb
lcall
inc
mul
sbb
dec
iret
or
inc
add
xchg
call
mov
xlat
sahf
dec
jmp
aam
mov
xchg
add
push
lock
fiaddl
popf
call
adc
add
inc
cmc
sbb
in
add
adc
inc
cli
lds
insb
mov
jns
push
roll
fstpl
into
dec
add
jae
lahf
push
push
jbe
pop
and
orl
add
mov
testl
dec
aam
add
movl
flds
ret
ljmp
inc
stos
add
sbb
xor
jo
add
or
xor
xchg
arpl
cmp
or
add
pop
imul
stc
stos
adc
cwtl
je
mov
add
or
movsl
fnstcw
sti
in
les
subb
add
mov
cmp
cmp
pop
add
fcomi
jae
rorl
sbb
cmp
jae
mov
xchg
mov
adc
ljmp
js
mov
jecxz
aad
mov
lret
add
inc
ret
or
andl
cmp
popa
loope
cwtl
shlb
inc
sahf
xor
sub
mov
sbb
add
sbb
mov
add
add
in
test
addb
jo
pop
enter
loope
mov
or
push
add
dec
xor
add
dec
and
movsb
jnp
iret
mov
cli
mov
scas
mov
sbbb
orl
lahf
jmp
sbb
gs
and
dec
cmp
or
ss
dec
cmp
lcall
cmp
xor
mov
aam
push
fidivrl
add
icebp
inc
pop
lea
add
xor
mov
adc
stc
xchg
lcall
push
test
out
push
popl
push
jg
cmc
into
shrb
mov
inc
jle
clc
arpl
sbb
insl
fs
nop
or
lcall
add
mov
add
loope
shlb
inc
xor
dec
mov
rclb
xor
and
xchg
lcall
add
je
int3
loopne
call
mov
push
outsb
push
xor
sub
or
inc
sbb
sub
mov
in
sbb
mov
add
sti
cwtl
adc
pusha
mov
repnz
jl
stos
xchg
sbb
loopne
lret
lds
popf
mov
jecxz
xor
out
xchg
jge
add
adc
in
xor
xor
or
mov
push
rcll
mov
dec
cmpsb
mov
inc
sbb
sub
pop
cltd
xor
in
xchg
in
xchg
add
dec
test
add
sbb
js
loop
pusha
mov
mov
popf
add
out
dec
arpl
movsl
push
iret
loop
shl
pop
stc
or
inc
outsb
lret
out
mov
push
rorl
add
int3
in
push
add
bound
mov
in
enter
pop
push
inc
inc
shl
orb
push
test
mov
dec
add
mov
mov
xchg
jb
jno
cli
mov
jecxz
or
add
pop
jp
sbb
int3
jl
enter
add
mov
cmpsb
jno
test
add
mov
movsl
add
mov
cmp
or
sub
pop
mov
dec
add
fsubrl
jg
out
mov
mov
sbb
inc
orb
add
pushf
cltd
mov
add
rcll
scas
sub
shlb
loop
jo
mov
inc
idiv
pop
add
jns
xchg
inc
stc
jle
sub
addl
push
jo
mull
ss
out
push
mov
jne
mov
loope
rclb
pusha
ret
out
mov
xchg
add
test
hlt
add
cmpsb
cmpsl
scas
dec
ret
inc
add
xchg
push
jnp
int3
push
xchg
or
jb
or
dec
bound
sub
flds
loope
fadds
mov
int3
popf
cmp
xchg
cld
push
fs
mov
imul
push
je
sbb
adc
mov
add
dec
outsb
pushf
mov
or
cmc
add
cmp
and
xor
and
lods
pusha
leave
pop
addr16
in
loopne
pushf
push
shr
adc
push
dec
sbb
mov
jne,pt
outsl
ljmp
shlb
jno
inc
pop
sbb
and
loope
lahf
add
testl
call
cltd
std
sbb
and
fcmovne
adc
cmp
in
into
pushf
jg
mov
cmp
and
add
jl,pt
inc
shr
mov
loope
popa
inc
mov
mov
cld
insl
and
sub
xor
add
xchg
cli
xorb
test
sub
inc
call
cmc
pop
movsb
andb
push
dec
lea
mov
pop
jo
sbb
push
sbb
pop
add
mov
je
or
add
rorb
inc
jbe
or
hlt
dec
jl
add
push
sbb
cmp
push
jecxz
sub
clc
add
push
mov
cmp
pusha
dec
jmp
test
add
insl
pushf
cwtl
jo
mov
popa
test
fidivrs
mov
adc
test
inc
xor
or
leave
xchg
pusha
ljmp
std
in
stc
pop
xchg
js
pop
mov
pop
xchg
test
movsb
push
dec
xchg
mov
xor
or
mov
push
mov
add
test
hlt
movsb
mov
sti
pusha
outsb
jnp
rcrl
jo
inc
xor
fdiv
jns
and
shlb
clc
adc
fldcw
out
enter
pop
add
loopne
adc
push
dec
inc
mov
pop
dec
sbb
push
add
jl
mov
mov
stos
in
fs
sbbl
les
or
mov
and
add
mov
icebp
shlb
dec
add
and
sbb
out
xor
add
cmpsl
es
in
xchg
add
mov
mov
imul
imul
test
jmp
comiss
ret
loopne
data16
faddl
in
aad
push
mov
aam
inc
andl
adcb
pusha
push
add
and
add
mov
and
sub
xchg
lods
and
sbb
inc
pop
push
inc
add
out
xchg
dec
dec
fs
int3
adc
jae
pop
sbb
into
or
nop
mov
sub
outsb
sub
cmovb
std
test
addl
sub
add
data16
lret
pop
xchg
xchg
push
push
add
sub
jmp
jmp
imul
push
cld
adc
imul
dec
push
inc
outsl
fimull
stos
dec
mov
xchg
xor
cmpb
jg
js
sbb
hlt
lret
push
pop
mov
insb
inc
ja
mov
mov
loope
mov
pushf
lret
sbb
push
int3
xor
shrb
adc
xor
outsb
add
scas
or
in
es
fmull
mov
loopne
int3
xchg
pop
adc
jecxz
inc
nop
roll
xor
add
and
push
sub
mov
dec
call
mov
stos
rcrl
repnz
lods
pop
xorb
shl
loop
jl
test
leave
adc
mov
les
inc
inc
lods
mov
add
mov
lds
sub
cmp
idiv
add
loope
incl
dec
add
push
stos
rcl
push
cmp
es
adc
add
adc
push
inc
popa
xlat
lea
mov
outsb
enter
adc
sarb
dec
dec
mov
std
mov
add
jne
jecxz
xor
cld
jnp
push
add
fdivrs
pop
inc
jp
add
or
push
gs
mov
flds
cmp
inc
and
mov
shlb
adc
ret
mov
aaa
jl
pop
out
and
clc
jl
push
add
incl
fwait
mov
and
xchg
cmp
mov
int
lahf
cltd
cmpl
cli
cmp
ljmp
dec
fprem
jg
sub
sbb
mov
pop
scas
and
push
jge
daa
jns
clc
inc
xchg
add
xchg
and
in
inc
mov
aaa
pop
adc
loope
xchg
int
inc
lret
push
mov
hlt
sub
roll
nop
insb
and
xor
dec
pop
call
leave
or
mov
outsl
jae
cmpsb
add
xchg
ds
shlb
inc
aad
mov
mov
and
cmpsl
jns
sbb
int3
mov
pop
je
mov
in
inc
adc
inc
lock
xchg
popa
popa
dec
adc
or
cmp
sub
cmp
pop
jae
pop
loopne
outsl
sbb
pusha
adc
add
int3
inc
adc
xchg
xchg
push
jl
cmpsl
push
mov
fs
imul
cltd
cmp
jmp
xor
jmp
sbb
add
push
inc
jecxz
cmp
and
loopne
cltd
cmpl
or
mov
outsb
sub
leave
sub
in
ret
inc
pop
in
sbb
rcr
das
sub
lcall
push
es
popf
push
dec
and
ror
add
ret
inc
movsb
dec
enter
mov
aas
jne
push
jg
sub
shll
push
imul
sarb
sbb
push
lds
roll
xchg
or
dec
xlat
lds
test
pop
sub
xchg
shlb
sbb
sbb
int3
or
fwait
lods
or
pop
sbb
add
addl
or
sti
outsb
popa
cltd
dec
mov
loopne
insl
scas
mov
outsl
cltd
xchg
jmp
mov
popf
call
mov
lods
add
mov
mov
xchg
data16
inc
fs
in
sbb
pushf
push
pop
push
adc
and
and
pop
mov
inc
adc
cmp
jae
sub
lods
add
lea
pop
insb
xorl
adc
adc
les
rcr
xor
and
setl
adc
out
enter
add
test
loopne
stos
and
lock
and
inc
add
stos
lcall
xor
imul
ljmp
popa
ja
add
aam
mov
or
fcomp
and
and
jmp
das
or
leave
and
mov
and
and
in
ret
ljmp
popf
rcl
gs
pop
add
mov
ret
sbb
pop
cmpsb
test
data16
adc
leave
dec
inc
add
sbb
add
lods
mov
and
mov
jle
inc
mov
and
add
fistpll
mov
push
xorl
retw
dec
insb
push
and
push
sub
add
ss
orl
jle
test
sbb
xchg
mov
dec
dec
pusha
push
js
jmp
dec
in
sbb
push
fs
dec
or
and
push
ljmp
xchg
dec
dec
push
or
pop
enter
mov
out
lods
dec
jl
sub
pusha
push
cmp
and
cld
in
out
xor
push
mov
lock
in
xor
ret
fists
mov
lock
or
push
sub
je
testb
in
popa
into
mov
adc
pop
bound
lods
push
pusha
mov
sti
mov
xor
rclb
add
jb
mov
mov
addr16
or
cmp
cmp
pop
push
mov
callw
jne
and
inc
dec
mov
outsl
dec
add
rcl
loope
mov
add
push
inc
fnstcw
roll
xchg
ret
and
or
xor
add
jne
gs
cmp
dec
loopne
cmc
adc
inc
dec
lea
xor
cmp
out
and
sub
cmc
xchg
push
fnstsw
es
add
cld
inc
leave
push
sahf
mov
jmp
notl
fnstsw
add
sbb
insl
popa
add
pusha
daa
mov
cmp
lcall
jge
add
mov
fildll
lahf
js
mov
inc
push
hlt
inc
push
cmc
movsb
fmull
mov
add
mov
push
inc
lds
ss
shrb
fcoml
fldenv
jnp
loop
jge
add
add
cmpb
loopne
xorb
xor
cmc
pop
movswl
cmp
lock
mov
xchg
sub
mov
xor
mov
push
jecxz,pn
sbb
rclw
or
inc
lcall
add
in
push
dec
dec
cmp
or
sti
mov
dec
add
movsl
dec
jmp
fs
enter
xor
jp
data16
cmpb
pop
mov
push
pusha
adc
sbb
mov
xchg
xor
add
sbb
pushf
dec
scas
nop
clc
xchg
lret
add
push
aaa
or
out
call
lock
sbb
add
enter
les
call
lds
cmp
pop
mov
hlt
adc
pop
or
test
xlat
or
movsb
ret
sub
pop
inc
clc
inc
push
and
adc
or
int3
mov
pop
sbbb
fmull
das
mov
add
add
inc
xchg
test
decb
data16
mov
cltd
les
movsb
mov
cs
inc
sar
and
lahf
pusha
das
ret
roll
xor
adc
push
mov
in
add
pusha
adc
inc
xchg
test
jmp
adc
push
inc
push
or
pop
push
lea
and
mov
ljmp
lock
inc
imul
mov
add
fiaddl
out
sub
adc
popf
xor
rorb
sbb
inc
mov
dec
fimuls
jb
add
fucomi
push
or
and
fs
xchg
gs
rcrb
sub
test
in
xorl
lret
into
jmp
jo
sub
scas
push
push
mov
push
cmp
mov
add
pop
and
xor
shll
repnz
insb
imul
adc
in
aad
roll
dec
dec
push
and
xorl
rclb
out
mov
ret
mov
daa
test
inc
pop
cmp
les
push
push
ljmp
xor
cs
dec
xchg
in
sub
jo
mov
add
rclb
mov
cmc
test
push
sbb
lea
add
shll
adc
jmp
mov
inc
or
and
std
inc
add
nop
xor
in
push
inc
jl
sbb
dec
sub
test
push
add
adc
insb
out
hlt
cltd
loope
lret
in
dec
lods
ficoml
lahf
push
push
inc
mov
ljmp
jecxz
push
faddl
sti
repz
jne
notl
call
shlb
mov
lret
imul
push
sub
ret
pop
jae
rolb
je
add
jb
push
push
movsl
cmpsb
adc
dec
xor
adc
inc
pop
sbb
sarb
ret
add
addb
add
mov
xor
inc
mov
or
add
xchg
int3
sbb
pmaxsw
mov
adc
in
add
out
push
psllq
pop
daa
ret
lea
fisttpll
add
je
imul
stos
dec
inc
adc
popa
add
test
aad
scas
push
imull
jno
leave
and
and
jl
jns
stos
out
lods
dec
push
jae
int3
int
mov
mov
mulps
inc
or
dec
mov
les
cmpsl
call
mov
inc
in
hlt
add
jnp
pop
mov
es
gs
add
test
xor
in
scas
pop
mov
xlat
mov
adc
xor
pop
sbb
lds
out
test
add
leave
mov
lods
mov
mov
cmp
pop
psubb
push
cmp
inc
add
jl
dec
in
add
mov
push
repnz
inc
jo
mov
and
xchg
xchg
int
pop
rorl
and
inc
sbb
add
imul
sbb
mov
and
jo
add
mov
push
mov
cs
inc
jmp
cmpsl
adc
adc
nop
cmp
inc
mov
lret
adc
push
int3
aam
mov
hlt
cmpsl
mov
mov
in
movsl
jae
leave
clc
adc
filds
aas
outsl
inc
add
popf
and
pop
xchg
jmp
jmp
jmp
xchg
add
lods
sbb
inc
pop
enter
mov
and
mov
inc
pushf
xchg
mov
clc
adc
or
inc
inc
mov
out
dec
flds
push
fmuls
and
dec
fdivrl
ljmp
sub
int
adc
pop
rcr
fcomps
inc
cltd
mov
lahf
cld
inc
cmp
sub
sub
je
mov
call
or
aad
js
andb
cmpsl
sbb
and
inc
lahf
add
mov
cmp
xchg
sbb
or
pop
aam
push
scas
aad
enter
in
dec
add
jbe
sbb
mov
mov
pop
call
mov
sub
pusha
dec
sbb
lcall
pop
dec
mov
shll
push
ja
bt
jmp
mov
ljmp
out
cmp
les
outsb
mov
cmp
test
xchg
aam
negl
add
cwtl
inc
sbb
xchg
or
dec
xorb
mov
loopne
movb
lock
insl
addr16
scas
and
ret
xor
hlt
mov
cmp
pop
sub
xchg
cmp
sbb
add
cld
jmp
or
push
xchg
ret
lcall
pusha
sbb
ljmp
push
fsubs
aaa
into
jbe
mov
push
or
sbb
inc
repnz
pop
sbb
pop
fucomi
ja
test
jmp
popa
xchg
hlt
inc
decb
cli
ret
add
daa
jbe
fildl
cmp
add
shll
pop
nop
fldt
sbb
loopne
sbb
jmp
daa
ret
leave
sbb
js
cld
addb
inc
fidivrl
jp
pusha
add
outsl
in
sbb
mov
fs
repz
mov
lds
movsb
sub
lds
cmp
fdivs
cmp
add
les
and
cld
xor
mov
daa
and
push
nop
in
sub
xchg
sbb
in
mov
loopne
cli
add
cmp
dec
test
sub
repz
adc
cmp
jge
ret
jmp
inc
xchg
imul
inc
movsl
mov
in
xor
or
out
cmp
ror
mov
pop
mov
inc
js
adc
mov
adc
movsl
fsts
sub
adc
add
mov
shr
mov
push
loopne
push
xchg
icebp
mov
or
stos
fwait
pop
fs
xor
add
inc
adc
cwtl
test
dec
or
fptan
aam
cmp
adc
or
pusha
pop
adc
mov
xchg
fsubrs
and
mov
inc
lret
sahf
mov
test
xchg
aad
gs
push
mov
inc
mov
and
sbb
call
cwtl
je
dec
cld
xchg
dec
dec
mov
adc
and
in
insl
jg
fdivr
mov
inc
or
add
mov
mov
adc
shll
inc
call
push
add
and
call
xchg
dec
inc
scas
int3
cmp
push
jl
ret
adc
add
xchg
je
mov
mov
iret
jb
inc
andl
add
fdivrl
mov
cmp
cmp
inc
mov
mov
pop
push
nop
add
xchg
test
lds
sub
cmpsl
fmull
pop
push
inc
divb
sub
sti
std
cmp
and
xchg
roll
add
daa
mov
xor
fiaddl
add
lret
orb
inc
xchg
shr
cmc
push
pusha
bound
inc
mov
lds
xchg
daa
push
adc
je
add
jo
stos
xchg
insl
jge
dec
cltd
mov
in
inc
inc
aam
out
push
cltd
call
dec
cmp
test
pop
loopne
xor
sbb
cmp
ljmp
dec
test
jg
add
and
or
sbb
ffreep
out
pop
cmc
dec
mov
adc
xor
mov
call
out
add
mov
xchg
movsb
in
inc
xchg
inc
mov
add
clc
fwait
mov
leave
mov
fmull
or
pop
sti
pop
and
adc
lcall
inc
rcrl
pop
inc
jb
and
int3
pop
test
and
mov
sbb
sub
popa
test
or
mov
repz
xchg
sbb
nop
dec
les
jne
js
loop
popf
and
xchg
inc
sbb
cli
pop
mov
out
mov
pusha
popa
xchg
xor
loopne
cmp
sub
push
clc
push
adc
gs
out
shl
cmp
enter
xchg
sbb
cwtl
iret
into
addb
addr16
add
cmp
mov
sbb
mov
scas
xor
mov
fcomip
push
dec
fsubrp
in
xchg
push
inc
daa
into
sbb
mov
adc
aas
push
imul
addl
cmpsl
dec
add
mov
jecxz
or
shrb
dec
in
pop
pushf
dec
sub
div
mov
mov
jmp
adc
mov
mov
je
jae
or
ret
xchg
outsb
or
xchg
cmc
sbb
cli
inc
es
sub
add
inc
adc
cwtl
add
xor
inc
insl
sub
pusha
bound
adc
xor
test
xchg
add
xor
sbb
loop
inc
mov
out
cmpsl
data16
add
subb
mov
mov
test
mov
and
in
enter
inc
and
shl
lock
xchg
dec
add
sbb
aas
jmp
and
rcl
adc
popf
inc
idivl
jns
fmuls
stos
push
insb
mov
shr
pop
add
sarb
scas
in
pop
mov
xor
aas
mov
adc
xor
xor
call
sarl
add
fld
lcall
adcb
dec
imul
test
push
outsb
add
aaa
push
movsl
jle
sbb
rorb
jb
cs
fldenv
lods
mov
add
jmp
dec
lea
cs
and
xchg
jno
adc
les
pop
pop
in
add
add
lods
pop
in
adcb
xor
or
xchg
adc
je
add
popf
push
cmp
cltd
filds
lds
subb
or
test
push
int
sahf
js
loope
enter
stos
cmp
jo
add
cltd
add
inc
mov
push
or
and
xlat
incb
icebp
pop
jp
dec
lods
cld
add
movsl
push
jmp
mov
add
jl
jge
dec
test
push
add
pushf
les
daa
sbb
mov
jmp
mov
mov
addr16
mov
jb
or
mov
jmp
xorb
loop
jle
inc
divl
sbb
lcall
movsb
inc
pusha
std
rol
int3
inc
sti
adc
add
iret
gs
cmp
sub
sbb
popa
out
cwtl
pusha
jo
movsl
dec
add
mov
sub
lcall
push
cmp
shll
loop
pop
data16
cwtl
jl
add
orb
mov
and
xchg
push
mov
jp
fsubr
daa
sub
inc
sbb
insl
pop
clc
cmc
jo
xchg
add
dec
inc
decb
sub
add
stos
dec
inc
ja
mov
sbbb
xchg
mov
sbb
push
and
pop
inc
cwtl
adc
cli
xchg
cmc
inc
andl
dec
popa
and
test
pop
andb
sti
cmp
cmpsl
loop
dec
aas
les
lock
add
xorl
mov
add
loope
imul
int3
xchg
sub
daa
adc
sbb
or
cmp
push
test
push
or
test
xchg
and
cmp
dec
lret
lods
out
insb
xor
sbb
scas
or
test
sub
rcrb
add
cs
fdivrp
jae
push
aas
sahf
into
add
adc
sbb
pop
add
fs
popf
mov
or
cs
push
xorb
inc
cmp
xchg
add
push
aaa
testb
nop
jns
pushf
leave
orl
xchg
cmp
jp
jp
pop
fistl
add
insl
pop
sahf
aam
clc
fwait
push
mov
inc
mov
nop
lock
pop
pop
out
sub
xor
inc
xor
popa
ret
dec
daa
inc
pop
sbb
pushf
lds
ljmp
icebp
jl
add
jecxz
push
pop
mov
test
dec
and
hlt
xor
and
jmp
or
mov
leave
xor
fmuls
sbb
push
inc
mov
mov
out
sub
nop
daa
sub
data16
push
dec
fldl
jmp
xchg
mov
xor
imul
pop
mov
call
mov
dec
stos
and
jge
adc
jecxz
sbb
cmp
sarb
lahf
fstps
add
popf
and
enter
daa
cwtl
ja
nop
gs
add
mov
out
dec
and
or
ret
cmp
sub
xchg
mov
xchg
fdivrl
ret
sbbb
jmp
dec
inc
das
mov
sahf
push
out
pushf
sahf
sub
pushf
inc
sbb
xor
aam
pusha
pushf
fcoms
iret
daa
mov
xchg
mov
ror
cmp
addb
pop
mov
add
das
sbb
sub
popf
adc
aam
or
adc
xchg
add
lahf
shll
mov
adc
adc
addb
enter
add
sbb
fdivrp
out
and
push
push
inc
lcall
sarb
cmp
leave
mov
sub
push
sub
jge
add
xchg
pop
loop
or
imul
pop
sahf
rcrl
les
add
daa
push
xor
adc
adc
cmovs
bound
inc
adc
ret
and
add
sbb
in
add
or
adc
popf
xchg
nop
adcb
mov
js
cld
aaa
call
or
call
add
call
roll
mov
dec
shl
adc
add
and
aas
jb
push
shl
negl
nop
int3
xlat
mov
adc
dec
adc
outsb
mov
fsubrs
sbb
push
je
cmp
cli
mov
popa
or
pop
cs
imul
sar
nop
jmp
lods
inc
sub
xor
lea
mov
sti
mov
inc
pusha
add
mov
pushf
lods
pop
push
add
xchg
sbb
adc
mov
inc
fcomps
adc
fisttps
xor
sub
divl
jnp
add
fnsetpm(287
les
jne
push
inc
sarl
mov
jb
xchg
jo
mov
sbb
push
out
test
mov
pop
sbb
stos
aam
jle
popf
adc
pusha
xor
clc
push
lret
pop
fdivs
inc
pusha
dec
adc
sbb
push
jmp
pop
loop
add
outsb
aaa
push
adc
lods
xchg
mov
pop
mov
mov
mov
adc
dec
pusha
adc
and
and
add
mov
add
pop
call
sbb
popa
out
cli
cmpsl
mov
hlt
dec
sbb
out
lret
sbb
mov
loopne
sub
imul
add
dec
jns
cmpsb
out
pop
lds
xlat
ds
dec
dec
xchg
push
and
aaa
clc
xor
cwtl
adc
jno
mov
leave
das
js
push
sub
lahf
xchg
int3
clc
das
add
cmp
out
pop
scas
add
sub
push
js
add
jo
dec
dec
xchg
les
mov
xchg
jo
ds
cmp
dec
cmp
cmp
mov
inc
or
xchg
sub
push
sub
push
call
inc
add
and
sub
inc
int3
sahf
xor
jmp
popa
subl
das
loop
in
add
cmp
movsb
pop
pusha
xor
and
mov
push
aas
loop
jmp
dec
cwtl
loopne
or
and
push
xchg
stc
mov
sub
ret
cwtl
loopne
loopne
sbb
stc
movsb
shl
inc
rcll
xchg
je
out
rclb
callw
stc
and
dec
scas
and
mov
and
mov
dec
and
data16
lods
imul
rcll
pop
inc
sbb
mov
inc
adc
push
adc
andb
jg
and
scas
in
lock
aad
sbb
lds
test
or
cwtl
pop
lcall
mov
push
les
arpl
xchg
inc
push
pop
pop
pushf
cwtl
out
cmp
es
sbb
jp
add
stc
leave
loopne
sbb
adc
dec
mov
clc
mov
dec
jne
cmpl
push
add
inc
data16
dec
mov
pop
aaa
leave
int3
rcll
sbbl
xchg
pusha
popf
leave
cmp
sub
pusha
pop
and
movsl
jns
jb
out
add
push
lods
dec
and
outsb
jo
insl
dec
flds
in
sbb
in
jbe
mov
lret
test
popa
dec
adcb
movsb
jmp
in
add
mov
cmpsl
add
rclb
movsb
dec
daa
inc
mov
adc
xorb
cwtl
nop
pop
xchg
mov
jl
mov
pop
push
add
mov
sahf
or
or
sti
imul
mov
cltd
or
push
jb
xchg
cwtl
mov
cmp
xchg
lock
popf
shrb
sahf
addr16
test
push
push
jne
add
out
sub
push
repz
cld
faddl
test
popf
and
pop
leave
test
andb
std
fisttps
inc
dec
stos
mov
push
sahf
aam
or
ret
xchg
loopne
mov
leave
cmpsb
cmp
insl
push
test
mov
mov
nop
rcrl
repz
out
les
add
jle
push
out
mov
push
arpl
and
addr16
mov
pop
adc
push
pop
add
inc
test
add
hlt
and
jo
lods
mov
mov
loopne
scas
add
cmpb
inc
inc
add
stos
mov
inc
lock
add
ret
in
xchg
xchg
insl
fs
cmpsl
fmuls
sub
popa
je
test
out
mov
test
or
out
dec
loopne
or
and
cmp
add
push
push
insb
jnp
lahf
sbb
popf
cmp
pusha
mov
adc
mov
push
xor
lcall
rol
fs
pop
add
ret
mov
ret
xor
jne
shr
add
pop
aam
sbb
imulb
scas
lds
xchg
cwtl
mov
mov
sbb
and
add
arpl
fistps
sbb
and
add
mov
les
pop
out
pushf
test
dec
mov
mov
sbb
pushf
jecxz
add
hlt
and
sub
pusha
sahf
xchg
rcrl
dec
daa
cld
nop
dec
push
out
dec
pop
daa
aas
inc
add
pusha
inc
pop
lods
cmp
adc
sub
int
pop
dec
mov
sub
mov
rolw
repz
mov
sbb
add
jge,pt
sub
pop
mov
outsb
xchg
mov
cmc
inc
sub
nop
add
movsb
push
xlat
or
jmp
mov
into
jb
cmpsb
add
mov
shlb
clc
in
jle
in
cmp
or
fmull
popa
cmp
xor
faddl
icebp
pusha
jp
xor
std
scas
push
adc
add
repnz
and
or
dec
jns
inc
lcall
cld
push
jg
dec
dec
decb
inc
cmc
repnz
jo
cwtl
or
push
adc
mov
movsb
scas
loopne
adc
aad
test
hlt
mov
pop
mov
adcl
scas
pop
push
dec
out
andb
sub
add
mov
inc
subb
xor
cmc
add
fisubrl
pop
xor
xchg
jno
add
push
inc
lods
gs
push
push
in
adc
repz
dec
lahf
fisttps
ret
mov
inc
inc
fstps
ret
dec
and
add
sti
pop
loopne
push
jecxz
shlb
dec
jbe
sbb
aad
cmp
adc
movb
dec
mov
push
sub
insb
or
cmp
test
sbb
mov
adc
and
sbbb
jno
push
mov
cld
jb
add
stos
cltd
push
js
adcb
push
fs
enter
out
xchg
mov
adc
fadds
aam
fst
aaa
dec
lahf
sbb
aam
push
add
mov
movsb
fucomip
cmpsl
adc
mov
pop
and
fs
add
ret
fs
or
roll
dec
aad
adc
jmp
cli
sbb
add
aad
aaa
push
cmc
mov
andl
int3
loopne
add
pop
inc
xchg
push
sahf
mov
leave
adc
mov
xor
out
jbe
clc
subb
in
rcrb
fstpt
add
cli
sbb
xor
sbb
mov
pop
adc
push
and
dec
mov
push
xchg
call
or
add
dec
mov
jmp
jno
cld
and
test
xor
scas
cmp
adc
mov
and
cs
or
add
data16
adcb
aad
add
or
push
test
mov
inc
add
addr16
repnz
cmp
cmp
and
fisubs
lcall
dec
inc
inc
imul
add
ja
test
jnp
nop
pop
or
adc
push
lds
or
sti
cltd
cmp
mov
insb
add
nop
mov
fwait
mov
scas
sbb
test
pop
addl
inc
lock
adc
adc
add
push
and
aas
imul
sub
imull
bound
nop
sbb
push
add
ss
enter
pop
rcr
gs
bound
lret
into
sub
and
push
dec
mov
and
add
mov
add
adc
push
cmp
jae
add
negl
cltd
mov
dec
fadds
fimull
or
stos
push
outsb
inc
sub
xchg
pop
jge
cmp
mov
pushf
sbb
and
jge
stos
push
bound
gs
push
sub
das
inc
xchg
adcb
pushf
leave
jp
push
test
cld
or
push
mov
les
push
dec
lods
inc
and
movsl
jae
jo
enter
pusha
daa
inc
dec
sub
inc
fcmovnbe
test
roll
pop
push
in
xor
daa
or
mov
lret
arpl
rcl
mov
xor
push
sbb
mov
add
out
inc
adc
popa
push
test
add
rorb
pusha
cmp
xor
ret
inc
add
lahf
add
rclb
enter
and
int
mull
daa
mov
adc
out
popl
addr16
scas
or
xchg
jno
sbbl
dec
cmpsl
add
lret
sub
int
add
mov
cltd
test
cwtl
hlt
inc
mov
aam
cwtl
inc
out
add
jecxz
mov
pop
cltd
sahf
xor
lcall
adc
iret
stc
push
repnz
stc
and
xor
stos
loopne
wrmsr
loopne
and
fcompl
sarl
sbb
or
call
daa
jb
jnp
add
shlb
les
add
inc
or
cmp
mov
inc
nop
cwtl
sbb
add
std
add
sub
popf
mov
mov
push
mov
mov
stos
add
idivl
xchg
fadd
ficoml
xlat
pop
jno
pop
filds
xor
in
pop
cld
sti
loopne
inc
add
aam
es
adc
cwtl
add
mov
push
xchg
mov
adc
outsl
enter
out
js
push
push
repnz
adcb
stos
push
jl
sub
test
fcomp
call
or
inc
pusha
jle
inc
cmp
aad
sub
lock
add
mov
cmp
and
loopne
ja
add
aaa
popl
test
push
push
pop
jl
cmc
xor
or
pop
jp
aam
mov
call
adc
rolb
add
fistpll
push
cmp
cmpb
out
push
push
add
fs
clc
xlat
mov
bound
xor
adc
aam
cmp
jo
cmp
test
call
shll
js
ret
bound
lret
jge
leave
pop
rcrb
les
popf
sbb
inc
pop
sbb
adc
cmp
xchg
sbb
insl
push
sbb
mov
lret
int
push
sub
jno
in
mov
inc
paddb
add
jg
mov
mov
bound
cwtl
test
icebp
adc
dec
lahf
enter
and
mov
jp
add
pop
fs
cs
loopne
lock
cwtl
movsl
inc
mov
rcrb
or
sub
dec
add
mov
gs
enter
mov
add
movsb
mov
loope
lcall
mov
les
jns
jmp
flds
dec
lods
cmovne
and
push
test
jbe
adc
xor
movsb
test
and
lock
cld
add
leave
lds
pusha
scas
jmp
mov
hlt
loopne
add
or
fsts
push
push
fdivl
inc
sbb
adc
add
scas
pop
repz
dec
xor
mov
fsts
add
or
fnsave
cmp
mov
sub
mov
add
add
fdivrl
adc
lock
dec
cmp
out
mov
lahf
jmp
push
dec
loopne
adc
mov
addr16
adc
xor
sahf
push
inc
xchg
xor
adcb
insl
mov
xor
pop
jle
negl
add
xchg
int3
add
insb
loope
ret
jmp
sub
mov
and
adc
pop
pushf
ja
sub
aad
cmp
jns
dec
inc
shrl
push
outsb
xor
mov
insl
pop
test
repnz
enter
mov
cmp
pusha
sbb
sbb
nop
push
mov
hlt
shr
mov
and
dec
adcl
nop
scas
add
test
repz
sbb
and
xchg
lds
jmp
nop
push
mov
shl
loopne
jge
push
jl
mov
jmp
add
xchg
or
test
mov
sbb
pusha
jns
or
sbb
sbb
stos
outsb
rolb
mov
das
and
rolb
int
sub
dec
cmpsb
mov
xor
js
and
pop
or
mov
push
mov
inc
mov
push
inc
dec
add
aas
add
add
inc
add
dec
sbbl
mov
adc
push
cs
cmp
sbbb
xor
jg
dec
pusha
and
and
lret
push
add
test
push
aam
adc
push
sbb
in
daa
mov
and
fbld
nop
sub
dec
in
cs
repz
hlt
std
icebp
or
pop
pop
dec
sbb
push
jmp
add
cmc
pop
xchg
or
enter
pop
js
mov
add
lret
xchg
int3
add
xor
sbb
ror
sub
test
pop
fdivrs
pop
dec
popf
movsb
mov
sete
adc
nop
add
dec
pop
or
les
scas
cli
mov
popf
cld
in
jp
add
and
add
scas
inc
outsb
jo
stos
xorb
aad
test
jae
pop
inc
cmp
inc
imulb
xchg
or
add
test
addr16
mov
mov
sub
call
push
adc
jecxz
mov
mov
and
stc
jg
insb
mov
and
or
mov
sub
das
jle
cmp
sbbb
add
xor
inc
testb
jnp
jge,pn
xor
pop
mov
lret
push
and
iret
push
loope
inc
or
and
jle
adc
add
aas
rcrb
push
fidivl
ss
add
outsl
rol
cli
dec
sub
test
addb
loopne
add
lret
fnstsw
in
mov
test
das
loop
repnz
dec
fdivrs
push
sub
cmpsl
mov
dec
pop
sahf
dec
and
pop
mov
jo
xor
das
xchg
inc
add
mov
push
cwtl
xor
enter
cli
sbb
mov
rclb
and
push
jge
mov
dec
push
cmp
xchg
jecxz
mov
pop
mov
stos
add
or
out
add
sub
call
inc
sub
cmp
adc
cmpsb
pusha
pop
dec
mov
fiaddl
outsl
or
pop
lahf
mov
and
pop
popf
fadds
lock
cwtl
sbb
dec
jl
enter
pop
fidivrl
push
mov
fists
sahf
mov
add
daa
es
iret
add
add
sub
lret
xchg
xchg
into
add
adc
mov
fisttps
and
xor
inc
or
repnz
dec
add
jno
cmpsb
add
mov
jmp
mov
jbe
out
add
or
rcl
lods
cwtl
push
into
outsl
enter
stc
jbe
pusha
insb
push
sarb
out
inc
dec
and
pusha
cmpsl
xchg
hlt
icebp
add
xchg
shrl
dec
mov
cli
or
inc
jmp
add
scas
dec
cwtl
jg
xchg
jnp
repnz
jb
lahf
pusha
out
add
int3
dec
add
xchg
pusha
adc
js
mov
adc
or
cmp
out
aam
push
xchg
xchg
pop
aad
add
pusha
test
into
fldl
mov
aad
mov
fdivrs
push
cmp
gs
je
lahf
xorb
je
mov
or
sahf
sub
mov
add
orb
pop
pop
popa
and
cmp
add
push
add
pop
mov
sbb
xchg
jecxz
pop
nop
xchg
je
pop
add
loope
aas
and
xor
or
push
flds
cli
pusha
das
loopne
add
out
pop
jo
cmp
mov
in
xorb
inc
loopne
mov
pop
loop
nop
cwtl
dec
imul
ss
lods
add
mov
adc
mov
fistpl
icebp
and
jmp
cwtl
ret
add
push
push
neg
movsl
mov
sbb
jne
bswap
repnz
and
pushaw
inc
enter
mov
xor
ffreep
add
mov
mov
push
add
and
js
les
lcall
pusha
cbtw
cmp
add
inc
inc
pop
mov
mov
mov
jecxz
dec
subl
jo
fs
rcr
mov
jne
jl
push
popl
imul
adc
sbb
insl
mov
cmp
xchg
add
lock
pop
and
test
leave
rcr
lret
or
inc
mov
adc
scas
cmp
sbb
sub
mov
call
arpl
xchg
pushf
movsl
push
and
jnp
sbb
mov
or
add
hlt
mov
and
nop
sbb
push
js
inc
jo
aaa
fs
inc
test
sub
add
insb
jp
divl
pop
mov
cmp
in
dec
cmp
roll
mov
cmpb
nop
pop
call
adc
inc
dec
sub
sbb
test
test
jecxz
sub
nop
mov
call
lds
les
cmp
popf
pop
std
nop
jae
add
add
popa
xchg
mov
xor
data16
test
jae
and
push
fisttpl
lcall
add
or
pushf
call
cwtl
mov
popa
aaa
and
inc
je
data16
pusha
or
orb
dec
push
mov
push
mov
adc
and
add
dec
shll
scas
pop
lods
sahf
popa
test
pushf
jecxz
dec
enter
sub
stc
and
pop
mov
mov
inc
adc
fwait
cmp
push
add
movsl
jge
jmp
and
jb
sub
sub
inc
les
decb
roll
xchg
popa
xor
icebp
lahf
jbe
add
inc
jno
mov
add
mov
or
popf
pop
mov
xchg
xor
jle
aam
int3
add
cmp
das
or
daa
pop
loop
pinsrw
add
dec
dec
out
add
mov
rcll
sbb
fmull
stos
popa
add
testb
out
xchg
orb
push
add
pop
mov
mov
jl
mov
nop
sbb
add
jl
sub
add
rol
lock
mov
cmpxchg
je
scas
nop
ss
dec
loopne
leave
test
xchg
orl
mov
mov
mov
mov
lahf
cmp
adc
ss
sbb
jge
mov
shr
xchg
jbe
push
mov
cltd
jmp
gs
ficompl
jo
add
insl
jge
sub
add
shl
cmpsb
jns
les
dec
mov
inc
ds
add
cli
xor
push
ret
lahf
fwait
js
enter
xor
adc
sub
movsb
data16
aaa
inc
int3
xor
pusha
add
in
add
push
jmp
js
add
mov
int
xor
out
inc
adc
sub
xor
add
outsl
insl
lret
xchg
and
mov
fs
and
xchg
fstps
ja
push
lock
das
mov
jmp
gs
mov
adc
sbb
adc
jo
scas
add
add
pop
popa
lock
rcl
inc
dec
push
in
ret
adc
pop
or
cwtl
pop
xor
cmp
pop
mov
out
nop
test
push
cld
sub
add
fadds
movsb
pop
in
imul
dec
andb
add
je
ret
jg
xlat
add
jp
sbb
pop
jl
popf
cmp
lahf
xchg
inc
sbb
xor
es
outsb
popf
mov
aad
cld
cmp
cmpb
into
and
mov
adcb
daa
add
mov
lahf
pop
inc
repnz
inc
in
sbb
enter
aam
pop
inc
shll
add
xor
pop
xlat
inc
jg
imul
push
mov
or
inc
mov
xchg
dec
pop
mov
add
and
mov
int3
insb
scas
add
call
inc
loop
cmpsb
or
enter
push
mov
mov
mov
sub
and
mov
sbb
jp
mov
data16
mov
xor
lds
adc
xor
cmp
jmp
fdivr
add
xor
adc
xchg
pop
clc
adc
and
inc
cmp
nop
jns
dec
mov
cld
cmpsb
mov
hlt
enter
add
push
pop
sti
js
mov
fwait
sbb
add
imull
pop
push
inc
addr16
push
jecxz
dec
aam
push
sbb
rclb
les
and
clc
mov
add
xchg
mov
adc
shlb
out
mov
lcall
cmp
je
dec
cmpsb
jo
or
adc
adc
cld
popa
movsb
sub
in
inc
xchg
cmp
add
xor
mov
add
jae
daa
and
inc
mov
lahf
cld
cmp
sbb
cmp
jmp
shlb
sub
in
push
mov
xor
cwtl
inc
mov
jno
mov
add
and
test
dec
enter
push
out
orb
and
and
xchg
and
pop
pusha
int3
outsb
lahf
mov
hlt
xchg
add
adc
dec
dec
jl
mulb
clc
hlt
adc
and
mov
into
add
int3
mov
dec
movsl
xchg
mov
loope
in
xor
fistps
aaa
jbe
mov
fs
lretw
pop
cld
mov
jae
subb
enter
scas
mov
sahf
int
inc
int3
fdivs
mov
sub
hlt
and
lods
rolb
stos
fildl
ret
push
call
jae
or
jecxz
dec
clc
xchg
inc
insb
xchg
enter
pop
popf
mov
push
pop
shl
andl
and
dec
cwtl
inc
rcrb
xchg
dec
mov
test
ljmp
addb
stos
into
and
inc
dec
lock
orb
ror
push
in
xchg
mov
inc
pop
arpl
stos
lea
mov
adc
aaa
mov
rorl
sbb
lods
pop
sbbb
stc
and
mov
sbbb
xchg
loop
add
xchg
mov
je
str
pushf
xor
ficomps
cmpsb
push
fadd
or
cmp
cli
lret
or
adc
push
pushf
rol
das
xchg
or
leave
and
orb
dec
inc
cwtl
xchg
sbbb
adc
add
mov
scas
and
call
stc
jne
add
jbe
cltd
sub
out
cmp
and
shrb
add
pop
clc
pop
repnz
insb
add
lcall
bound
loopne
push
pop
pop
mov
outsb
xchg
add
mov
xchg
mov
mov
dec
test
or
sbb
sbb
call
test
test
movsb
jo
jns
push
js
mov
mov
mov
outsb
jne
inc
ljmp
or
adc
call
add
xor
mov
push
add
mov
push
fwait
sbb
add
cmpsl
mov
add
jae
movsb
repnz
add
xor
call
ja
inc
lcall
mov
popf
out
mov
xchg
out
inc
lcall
test
dec
repz
push
cld
push
push
lock
add
fcos
sbb
rolb
outsl
or
adc
and
mov
inc
das
icebp
rol
adc
xchg
or
leave
test
xor
clc
xchg
sub
xor
lea
and
lret
ret
sbbl
pop
clc
xor
dec
sbb
push
mov
and
pop
scas
sbb
orb
add
jbe
leave
jne
in
pop
out
aam
cld
movsl
das
or
in
testb
push
sbb
arpl
and
or
push
sbb
fdivrs
or
mov
adc
add
orl
sbb
mov
push
add
shll
sbb
add
test
jno
fmul
xchg
jo
scas
sbb
adc
in
xchg
scas
dec
add
clc
xchg
cmp
cli
add
sti
push
mov
push
adc
pop
inc
dec
pop
scas
mov
and
pop
call
xor
push
js
add
push
je
jl
sub
shlb
mov
testl
movsl
arpl
les
mov
test
out
sbb
push
leave
stos
loop
jmp
movl
in
sahf
add
sbb
xor
popf
or
and
negb
sbb
pop
dec
hlt
popa
mov
add
test
dec
loope
jp
sub
and
pop
push
or
inc
pop
rclb
in
rcrb
rcl
inc
mov
femms
sti
add
xchg
sahf
adcb
adc
jecxz
hlt
dec
adcb
sub
lret
cmc
imul
pop
jae
add
iret
sub
ret
cs
outsl
lahf
mov
mov
xchg
pop
mov
rorl
push
cs
cmpsb
and
in
pop
adc
mov
pop
loop
add
xor
inc
adc
add
je
jg
int
outsl
pusha
shlb
add
jne
mov
and
add
imul
lods
ds
jmp
enter
adc
aam
jl
js
mov
xor
sbb
idivb
mov
push
adc
add
inc
jns
jne
mov
pushl
add
shlb
dec
mov
lcall
or
push
clc
test
test
cli
imul
loope
sub
roll
push
aaa
in
jo
inc
adc
jnp
stc
cwtl
add
addr16
inc
fistpll
mov
adc
jmp
fs
sbb
xchg
pusha
cmpsl
dec
pop
mov
in
inc
les
and
lahf
add
popa
mov
fcmovu
dec
insl
enter
mov
lahf
out
sub
mov
shll
push
cwtl
enter
xchg
cmp
jnp
adcb
les
in
enter
add
aas
mov
popa
test
xchg
push
data16
jp
psubsb
adc
dec
xchg
nop
sbb
mov
popf
push
pop
cmp
outsb
push
push
xorb
ja
and
test
mov
stc
pop
push
mov
pop
mov
inc
mov
shll
xchg
mov
push
int
hlt
mov
cwtl
fdivl
repnz
mov
add
ja
pcmpgtw
jb
lock
lods
fistps
jecxz
cvtpi2ps
les
jne
fdivs
add
mov
mov
cld
int
mov
or
inc
inc
dec
mov
cmpl
adc
into
add
popa
inc
or
pushf
js
shrb
enter
nop
into
sub
push
test
jne
not
add
add
shrb
enter
and
and
sbb
mov
rclb
lock
gs
mov
sub
clc
sub
mov
movsb
pop
sub
das
fs
add
lock
bnd
add
leave
test
or
add
adc
cmp
jno
fdivrl
mov
add
lock
leave
stos
cld
movsb
add
mov
mov
pop
adc
or
xor
imul
lock
add
nop
sbb
fstpt
inc
test
xorb
int
xchg
sub
add
xchg
pop
popa
pop
adc
mov
test
ficoml
dec
adc
or
add
xchg
out
aas
jns
xor
jne
cmp
sub
lock
inc
push
jmp
test
mov
mov
shlb
outsl
fidivl
fdivs
jo
inc
add
pop
fdivr
mov
in
mov
test
add
adc
cltd
xor
cmp
inc
das
popf
push
add
nop
jmp
popf
nop
pusha
jae
add
xor
xchg
jo
sbbl
add
xchg
pop
mov
mov
add
or
jno
xchg
enter
scas
lahf
and
into
xchg
lock
add
push
xchg
insb
addb
dec
adc
xchg
xchg
int
pop
cwtl
lock
hlt
sbb
stos
sar
nop
iret
loopne
or
mov
aas
xchg
ror
test
je
jno
fadds
mov
mov
sub
add
repz
pop
sbb
xchg
sbb
cmpsl
pop
and
sbb
arpl
and
lods
cwtl
fs
add
mov
xchg
jo
and
pushf
or
adc
adc
in
adc
add
cmp
ret
cs
cwtl
cwtl
inc
lahf
pop
add
pop
lock
adc
inc
leave
and
adc
lcall
jle
push
dec
shr
jge
cld
popf
movsb
cmpb
or
pop
mov
jno
add
sbb
jne
add
xchg
ret
sahf
sbb
nop
xchg
scas
add
addr16
ja
pop
in
xor
push
push
sbb
sub
sbb
add
add
dec
add
cltd
inc
xchg
testb
gs
cmpsl
lods
fimuls
rclb
outsb
add
add
loopne
subb
pop
dec
imul
xchg
cmp
add
nop
popa
loopne
sub
and
gs
les
out
sub
jp
xchg
enter
popl
add
dec
outsb
rcrl
lahf
fsts
inc
in
nop
ret
adc
mov
add
aam
pushf
int
dec
adc
xchg
mov
push
scas
int3
insb
shrb
ret
xchg
sbb
dec
xchg
shrb
add
sahf
clc
adc
jl
loopne
add
and
in
mov
adc
jp
insb
mov
cmp
jl
andb
inc
leave
in
lock
fs
xlat
mov
inc
mov
stos
hlt
hlt
inc
xchg
adc
push
and
out
xchg
add
lods
add
push
or
imul
ret
sub
std
add
mov
adc
sbb
pop
cld
inc
xchg
sarb
pop
add
jae
xchg
and
in
sti
sbb
mov
push
cmp
mov
inc
push
test
push
mov
fwait
mov
lds
mov
mov
sarb
xchg
pop
loope
subb
push
popf
stos
inc
pop
in
inc
and
jle
jno
add
dec
clc
mov
adc
jl
and
xchg
roll
dec
sahf
popa
les
fs
fs
mov
fmull
rorb
mov
and
pop
aaa
add
pop
icebp
dec
popf
repnz
clc
xchg
inc
cwtl
or
outsb
cmp
lret
adc
sub
adc
push
add
xchg
push
dec
mov
xor
stc
or
stos
xor
sub
test
call
cmp
cs
paddq
mov
mov
js
dec
dec
and
lds
pop
pop
adc
xchg
xchg
push
addl
fwait
sbb
data16
add
mov
jne
aas
xchg
dec
push
test
int3
push
pop
xchg
mov
sub
pop
pusha
add
in
dec
sarb
or
add
in
inc
sub
add
push
jp
xchg
mov
sub
lahf
mov
popa
pop
pusha
and
and
sub
std
frstor
mov
lods
inc
andb
inc
jb
pop
fstpl
aam
addb
pop
stc
stos
mov
aad
jp
fwait
pop
das
das
or
mov
add
pop
mov
inc
nop
sub
sbb
mov
fs
mov
and
addr16
shlb
imul
push
shlb
jnp
dec
cmpsb
mov
push
mov
stos
sbb
rorb
mov
add
xorb
lret
push
insb
aam
inc
and
mov
test
add
in
inc
hlt
fmull
mov
inc
sbb
cmpsl
scas
fsub
fs
xor
std
inc
jno
mov
imul
lods
add
mov
fisttps
cltd
inc
scas
jl
jnp
sahf
xchg
pop
lock
sbb
fnstenv
ret
add
mov
pushf
pop
andb
jno
fimull
sbb
jo
es
fs
icebp
jno
jnp
mov
daa
cmp
pushf
or
mov
test
test
cmp
inc
jl
lock
push
je
addr16
jle
gs
add
les
mov
lock
punpckldq
nop
adc
sbb
fildl
stos
cs
sbb
cld
add
push
cmpsl
aad
shl
in
add
add
mov
push
cmp
add
cmpl
ljmp
cltd
xor
add
sub
mov
push
orl
push
dec
outsb
add
add
jne
jmp
sbb
push
mov
dec
test
mov
inc
fcomip
xor
mov
hlt
pusha
aad
inc
cmpsb
das
addl
aad
cmp
dec
movsl
add
pop
sbb
jmp
push
aas
and
popf
adc
fbld
sbb
mov
dec
cwtl
mov
sub
rclb
pop
xchg
clc
je
inc
scas
cld
scas
test
push
add
add
sub
aam
dec
add
ret
fmul
sysret
sti
jns,pn
mov
add
and
mov
sbb
pop
fbstp
pop
push
add
or
push
mov
adc
and
repz
lahf
and
pop
mov
sub
mov
arpl
sub
ret
add
pusha
mov
inc
dec
lods
mov
add
or
aas
call
jns
mov
lds
push
stos
jecxz
sarb
shrb
mov
cmp
bound
icebp
scas
lods
mov
or
fwait
mov
repz
mov
sbb
adc
add
mov
ret
add
ds
dec
aaa
jg
and
andb
std
shrb
xor
inc
push
mov
sti
repnz
and
nop
mov
ficoms
sbb
add
imul
cmp
test
jle
mov
xor
add
bound
test
xlat
aad
pushf
and
out
mov
mov
jecxz
int3
in
cmp
mov
dec
xor
punpckhdq
adcb
iret
adc
dec
and
add
cmpsl
jno
stc
xchg
fsts
int3
mov
lea
xor
pop
pop
dec
ds
das
inc
pushf
push
out
and
mov
fbld
icebp
or
enter
pop
inc
add
jecxz
rorl
xor
imul
lods
cmpb
scas
rclb
add
ja
fbstp
jne
mov
adc
repz
and
and
jl
xorb
sbb
add
clc
sbb
adc
iret
cmpsl
scas
ja
ficoms
out
or
or
sahf
aas
lret
les
mov
andb
test
andb
inc
push
jge
cwtl
xor
ret
jp
add
push
std
cmp
in
pop
ss
adc
aad
mov
xor
in
xor
inc
adc
ljmp
shr
adcb
dec
cmp
in
and
js
and
aas
mov
sbb
jecxz
sub
bound
repnz
mov
mov
jg
or
test
and
mov
outsl
filds
sub
jecxz
pop
mov
adc
mov
es
xchg
out
loope
mov
add
cmpsb
pop
test
out
stos
f2xm1
or
pop
inc
pusha
or
cmp
sbb
addl
std
inc
lcall
stos
ss
xorb
pop
sbbb
add
scas
adc
testl
add
dec
loope
push
enter
add
or
aam
mov
add
into
pop
cwtl
mov
and
nop
fidivrs
mov
inc
insb
popl
rcll
fists
cltd
xor
fcoms
leave
testl
xchg
fcmovu
addl
test
enter
jge
jg
fisubs
adc
add
int
mov
cltd
inc
jne
mov
imul
add
jmp
in
mov
insb
push
add
std
negl
sbb
add
stos
test
test
xchg
inc
dec
icebp
hlt
mov
add
jge
mov
cmp
in
mov
sahf
jo
jbe
mov
dec
jne
into
mov
adc
incb
adc
or
call
popa
outsl
add
xchg
add
sbb
lcall
test
sub
and
fdivrl
mov
sbb
in
push
rorb
inc
inc
jns
cmpsl
push
and
jne
subl
fildl
mov
mov
cltd
inc
outsb
flds
stos
xchg
mov
adc
fidivrs
jge
lods
mov
or
mov
fwait
sbb
mov
jg
ja
pop
aam
and
sbb
add
add
arpl
lods
pop
sbb
ljmp
cmp
mov
mov
xchg
mov
or
inc
hlt
cmp
imulb
lock
mov
xchg
adc
and
outsb
mov
add
bound
loopne
cltd
xor
inc
ret
arpl
insb
shrb
add
loop
sbb
jmp
or
movsb
mov
bound
and
sub
dec
gs
mov
loop
insl
cwtl
jae
push
lea
jg
adc
aam
jo
and
inc
push
mov
xchg
int
add
js
loop
outsl
sti
xor
leave
in
roll
mov
mov
lods
inc
stc
lods
les
push
das
jno
xor
cmpb
add
push
outsb
xchg
pop
into
in
rcll
and
mov
sbbl
into
lock
sbb
ljmp
lods
sbb
add
inc
jecxz
mov
fcompl
mov
jp
jle
add
adc
dec
outsl
outsb
enter
lret
pop
inc
clc
test
arpl
dec
test
dec
loopne
xor
stos
jno
xchg
movsb
add
ss
adc
add
rorb
lds
shl
loopne
add
negb
lret
lods
fbld
popa
pop
loope
aam
adc
push
cltd
inc
ffreep
adc
mov
jg
xchg
mov
rorb
push
sbb
jle
sbb
fsubrs
add
in
movl
ret
imul
fistpl
and
adc
mov
inc
loopne
and
lods
adc
int3
and
jbe
inc
xor
fstpt
jne
mov
and
js
ret
popa
adc
add
dec
add
mov
stc
pop
add
daa
pop
mov
and
sub
and
fadds
inc
mov
pop
bound
pushf
cli
xor
inc
into
cmpsb
jae
outsl
fildl
fcoml
xor
or
inc
into
daa
mov
push
and
add
inc
inc
sub
daa
or
mov
cmpsl
aas
inc
out
xorb
mov
xchg
fiadds
fsubl
pusha
sbb
mov
aaa
mov
push
adc
xor
int
pop
pop
fucom
fwait
es
imul
rorb
jl
ljmp
add
pop
es
cwtl
xchg
or
subps
fadds
sbb
in
hlt
leave
add
xchg
lods
jnp
push
call
mov
mov
pop
mov
sbb
loope
flds
and
aam
push
push
mov
mov
jne
mov
stos
or
pop
xchg
xchg
jne
and
cmp
in
cli
add
jmp
je
fwait
cwtl
mov
push
and
and
stos
ljmp
insl
sbb
test
ja
xchg
arpl
into
add
jae
adc
cld
leave
or
add
dec
daa
inc
rorb
fmull
ficoml
and
and
mov
mov
loopne
stos
xor
sub
adc
mov
das
add
sub
out
enter
add
aad
add
sub
add
xchg
les
mov
adc
push
push
mov
jg
imul
mov
out
push
rolb
adc
pushl
and
xchg
cwtl
cwtl
ljmp
jnp
or
inc
jbe
scas
and
sub
cwtl
adc
shrb
loopne
adc
rorl
in
and
push
les
ss
bound
std
out
dec
loop
add
mov
jo
adc
add
bound
insb
mov
dec
or
fisttpll
icebp
pop
in
lods
sbb
sub
sbbb
pop
jb
mov
fstps
lods
sarb
adc
pop
cmc
and
inc
push
test
jae
ljmp
rol
xchg
sti
inc
sbb
sub
cmp
xor
inc
sbb
push
stc
and
add
hlt
jo
jbe
add
pop
jns
and
out
add
sub
add
or
loop
adc
sub
pusha
adc
aam
or
sub
pop
xchg
in
add
xchg
add
pop
push
cmc
jmp
push
lret
add
ror
in
mov
push
jecxz
xchg
movsb
lret
add
subb
stos
adc
nop
mov
outsb
add
mov
mov
jbe
call
lods
mov
mov
and
in
add
add
or
jo
out
pushf
add
cmp
xchg
sbb
fs
cmp
adc
adc
jbe
add
dec
jnp
adc
scas
cmc
in
imul
jge
cmpsl
pop
leave
cmp
daa
imul
xchg
xchg
arpl
dec
pop
out
dec
push
cli
xor
addb
xor
or
add
icebp
add
shr
jl
or
and
hlt
test
lret
hlt
jbe
cld
push
popl
sub
jl
js
push
lret
movsl
ret
maxps
jl
xchg
pop
gs
roll
stos
mov
adc
add
or
ljmp
arpl
popf
xor
add
fwait
adc
js
rorb
add
sbb
arpl
or
aaa
out
jae
add
lret
mov
add
rorl
ljmp
push
enter
jp
and
sbb
add
pop
into
nop
test
xor
jne
add
movsl
insb
xor
ss
add
adcl
insl
mov
cmp
pop
mov
lcall
or
cmovbe
push
add
push
mov
xchg
cmp
adc
sti
fistps
aas
sbb
sbb
incb
cltd
pop
lahf
and
mull
mov
dec
shlb
dec
cli
js
jns
xchg
add
ja
xorb
push
repnz
mov
ds
ss
fadds
jbe
mov
addr16
das
scas
or
adc
add
add
sbb
cmpsl
clc
roll
aad
jle
sbb
inc
cmp
mov
int
lea
sbb
or
and
sbbb
loopne
jne
cmp
dec
dec
adcb
dec
loopne
in
test
sbb
std
add
stos
popf
jge
sbb
in
test
mov
xchg
aas
hlt
push
out
or
add
inc
lods
inc
dec
nop
push
adc
sarb
rolb
fildl
or
jbe
mov
loope
aaa
mov
lock
push
repnz
push
stos
push
mov
jl,pn
add
jl
mov
imul
mov
mov
dec
push
or
cld
mov
test
nop
lret
xor
mov
sub
enter
and
test
or
mov
xchg
mov
add
xor
pop
dec
push
test
adc
pop
xor
scas
add
clc
push
popa
inc
inc
nop
jge
mov
mov
add
mov
in
cld
add
xor
xchg
pop
sbb
push
pop
or
mov
mov
adc
fwait
pop
and
add
out
push
rorl
inc
mov
inc
lds
cmpsb
enter
cwtl
mov
shlb
add
inc
adc
into
push
sti
lahf
and
jno
xchg
add
cmpsl
add
and
idivl
xchg
jmp
add
lahf
dec
in
in
out
test
js
arpl
cwtl
and
mov
jno
sub
add
gs
aam
jp
pop
push
ss
and
xlat
inc
sbb
xor
dec
inc
aas
jge
test
adc
addr16
add
les
jp
mov
test
lds
aam
mov
inc
inc
push
loope
xchg
scas
push
ljmp
sub
mov
mov
ja
xor
nop
outsl
add
and
hlt
insl
sbb
sbb
sub
jecxz
sbb
add
mov
dec
mov
rorb
out
nop
add
lahf
add
subl
shll
clc
orl
or
stc
add
jp
lcall
pop
push
or
add
lods
push
cmp
xor
jle
addl
bound
outsb
pop
sbb
enter
adc
dec
ss
or
add
fadds
add
xchg
lds
lret
dec
push
sub
add
int
push
add
inc
jmp
add
inc
popa
lock
jge
xor
subb
jo
add
inc
xchg
cmp
stc
add
xchg
xchg
mov
jg,pn
addl
pop
pop
add
or
jns
add
push
jb
cmpb
cmp
cmp
mov
adc
fldl
movsb
push
pop
xchg
or
xor
add
and
mov
cld
shrl
mov
xchg
cmp
mov
gs
inc
loopne
std
add
hlt
daa
xchg
flds
adc
dec
mov
mov
test
aad
cmpsl
in
pusha
xchg
adc
ljmp
inc
jmp
sarb
add
xchg
add
xchg
lahf
scas
add
or
add
jle
mov
leave
jno
add
push
lret
outsl
xchg
pop
add
dec
push
add
nop
fmulp
nop
mov
inc
push
jae
add
or
adc
cmc
pop
cmpb
mov
shll
fcomp
lea
pop
fidivs
clc
pop
stos
add
jecxz
jmp
je
pop
adc
aad
inc
xor
add
lock
in
cwtl
add
inc
lahf
adc
cmp
addb
mov
inc
leave
dec
aad
jo
fistpl
lea
nop
lods
das
dec
outsl
test
aas
add
mov
pop
imul
shll
orl
out
mov
cmp
jae
fwait
add
push
loope
je
add
popa
in
push
pop
xchg
or
pusha
in
dec
sbb
jno
nop
pop
add
or
mov
add
inc
int3
add
dec
xchg
scas
sub
add
test
cli
xor
addb
cmc
ret
into
ss
dec
cmp
xor
pop
test
aad
mov
mov
arpl
cmp
mov
std
notb
adc
mov
xor
iret
pop
stos
arpl
je
add
aas
xor
mov
and
mov
add
adc
and
ljmp
shrb
clc
out
repnz
ja
dec
push
cmpsb
sbbb
popa
xchg
sub
hlt
cmp
and
jb
das
pusha
mov
xlat
cld
xchg
sbb
pop
pop
aad
cmp
cmp
ficompl
hlt
add
lods
lcall
test
add
repz
adc
lahf
add
mov
sbb
cld
ss
jg
shl
sbb
in
adc
dec
mov
loope
bound
and
pop
add
faddp
outsb
test
pop
push
aad
shrb
cmp
lods
xchg
out
inc
add
mov
mov
ljmp
jnp
out
jl
add
adc
loopne
loop
add
mov
ss
add
xchg
xor
or
add
inc
gs
stc
movsl
sub
xor
jl
add
mov
aas
shlb
stc
mov
out
jnp
arpl
imul
lods
add
mov
add
sub
mov
fdivrl
in
push
pusha
movsb
outsl
and
and
or
mov
add
scas
pop
pop
std
inc
xchg
jne
add
jns
cmpsb
sub
push
add
jle
sahf
mov
cmpsb
push
push
cmpb
out
or
mov
and
loope
inc
imul
sbb
out
outsb
adcb
adc
int
or
mov
pop
mov
sub
int
dec
bound
add
xchg
mov
repz
cmc
adc
mov
add
ljmp
add
sub
mov
gs
add
mov
add
test
sub
add
scas
rcrb
add
in
mov
add
mov
mov
jge
add
mov
out
adc
shrl
pop
cli
scas
add
add
add
nop
push
add
pop
frstor
add
lcall
mov
push
in
pop
or
stos
cmp
testl
orb
decb
inc
add
pop
and
enter
cmp
mov
jmp
jecxz
mov
jle
adc
add
inc
inc
cmp
push
adc
add
imul
js
data16
rcll
jbe
jb,pt
mov
nop
arpl
icebp
and
inc
dec
xchg
sar
cmp
xchg
inc
mov
add
jp
cmp
add
shlb
in
and
push
pop
add
adc
loopne
pop
add
mov
add
dec
or
sbb
xor
mov
scas
cs
pop
shl
sti
dec
aas
add
mov
xor
rcrb
sbb
pop
push
or
aad
out
lret
ret
into
inc
push
or
add
mov
dec
add
stos
jb
ja
lret
pop
sbb
and
lret
push
loope
push
jg
push
fbstp
out
les
pop
xor
sarb
nop
mov
push
inc
adc
femms
add
adc
mov
or
pusha
xchg
sbb
and
mov
push
add
push
fidivl
loop
es
jl
xor
pop
jo
add
pusha
xchg
dec
adc
ja
add
shl
xchg
cmp
popf
push
rcrb
in
jge
push
cltd
pop
mov
mov
jg
imul
add
sti
dec
mov
dec
out
mov
sub
mov
mov
mov
and
cld
mov
lret
mov
sub
push
subb
in
sub
cld
and
adc
and
jo
mov
add
xor
push
jnp
movl
rolb
mov
inc
pop
and
mov
cmp
add
mov
leave
test
bound
rorl
les
mov
insl
pop
mov
xor
stc
lods
sub
mov
and
and
add
add
dec
xor
adc
pop
js
sbb
mov
stos
incb
mov
jnp
in
outsb
testb
sbb
add
add
or
inc
cmp
dec
jnp
dec
jae
shll
add
xchg
inc
jl
xchg
sub
push
sub
and
idivl
pop
sbb
jp
pop
lods
sahf
add
inc
insb
mov
push
aas
mov
or
sti
jbe
add
enter
push
add
setns
xchg
dec
loop
sbb
pop
pusha
add
test
inc
in
mov
xchg
test
mov
add
in
and
inc
add
js
cli
lds
add
push
add
dec
int3
add
ja
fs
mov
push
jle
xchg
iret
sahf
das
inc
mov
pop
fiaddl
mov
adc
out
add
clc
test
push
js
andl
cmp
add
push
cwtl
mov
hlt
inc
cmpsb
xchg
adc
add
sbb
insb
lcall
jo
jecxz
mov
pop
xchg
push
test
sbb
loope
imul
stos
jns
xchg
lods
jb
cmp
sti
adc
pop
fistl
fmuls
xorb
icebp
inc
pushf
add
inc
std
ret
rdtsc
add
push
sub
add
loop
data16
cmp
mov
lret
xor
movsb
fcoms
or
sbb
sub
mov
push
push
jne
testl
add
inc
jle
xchg
sarb
inc
loop
add
add
add
mov
or
ds
sub
cmpsl
ficoml
inc
add
push
addl
or
pop
xchg
xor
call
xchg
in
push
cmp
aas
lret
push
shll
mov
pop
mov
dec
or
lds
sbb
jno
outsl
or
in
daa
shll
add
mov
and
and
stos
push
or
add
bound
mov
shll
repnz
adc
add
stc
push
aaa
mov
ret
adc
add
cwtl
mov
in
pop
mov
paddb
shrb
pop
cmp
inc
orb
mov
cwtl
push
xchg
add
std
adc
add
adc
sub
popl
inc
sbb
pop
push
aam
sub
add
int
add
mov
fdivrl
cmp
xor
pop
xorl
inc
mov
pop
lahf
adc
adc
jp
int3
shl
add
mov
ficoms
mov
cmp
add
pop
icebp
xor
out
add
fistpll
mov
call
inc
movsb
mov
add
aas
shl
clc
jecxz
push
call
xor
gs
add
fwait
add
push
push
jecxz
xchg
jp
sbb
xchg
pusha
aaa
lods
je
or
dec
xor
add
xor
cmpsl
fdivrs
enter
push
inc
mov
fcoml
jne
cmp
in
shrb
inc
inc
cld
sbb
lret
pop
push
nop
add
je
lcall
mov
shlb
fstl
flds
inc
sbb
push
pop
jno
add
fs
mov
rorb
sub
pop
jae
js
add
xchg
fisubrl
sub
sbb
addb
shrb
dec
xchg
add
hlt
test
add
popl
daa
pop
jbe
cmp
test
sar
cli
mov
jb
jl
rcrl
jecxz
aaa
dec
add
sub
subl
xor
inc
lcall
mov
add
inc
ss
mov
sbb
adc
stc
add
repnz
push
push
popf
dec
bound
mov
push
ret
roll
xor
gs
mov
scas
mov
dec
add
das
mov
pop
addl
lret
jb
cmp
dec
inc
lock
xchg
dec
nop
rcll
mov
add
and
add
jo
inc
and
ljmp
mov
or
andb
aaa
jmp
add
imul
jo
and
add
adc
jmp
cld
lock
jnp
jb
mov
mov
dec
rolb
add
or
js
inc
xlat
sbb
add
cmc
cmpsb
clc
add
lahf
add
jle
sub
push
fidivs
insb
push
mov
cmc
cld
aaa
shll
and
daa
adc
sbb
das
jge
adc
mov
ficoml
mov
aad
cmp
in
cld
imul
frstor
in
and
add
inc
shrl
jbe
clc
and
mov
dec
add
adc
xor
adc
jnp
or
insb
xor
inc
stos
fsubrl
sbb
push
and
cmp
dec
call
fildl
jmp
mov
pop
pop
lret
mov
orl
cmp
jg
outsl
dec
cwtl
jmp
jge
push
mov
cmc
ljmp
data16
add
out
dec
vmovlps
xchg
test
shrb
or
inc
ljmp
add
dec
push
add
les
std
add
pop
mov
into
leave
xchg
faddl
add
ja
shlb
orb
mov
mov
jp
add
pop
pop
iret
push
lods
sbb
in
add
jae
mov
cwtl
or
iret
imul
data16
mov
fwait
clc
adc
dec
push
xchg
mov
cmovnp
mov
inc
adc
stos
mov
jnp
mov
xchg
xor
les
popa
in
and
mov
or
xchg
xor
cli
pop
sahf
cwtl
push
inc
test
add
xchg
xchg
fstpl
jmp
outsl
movl
mov
mov
out
lret
xor
sbb
pop
mov
lock
jne
clc
out
add
or
xor
add
push
jb
mov
pusha
daa
test
sbb
dec
add
inc
dec
dec
lds
aaa
mov
mov
shrl
cmp
ret
adc
jg
fsubrs
aas
add
and
dec
xor
fisubrs
push
fiaddl
jle
decb
add
pop
sub
or
adc
adc
xor
sti
cmp
jp
jbe
in
push
jecxz
jnp
pushl
orb
lods
and
sub
xchg
push
add
inc
rcll
push
jmp
data16
mov
jno
add
jp
sub
dec
adc
mov
jne
sbb
jb
cmp
pop
add
xor
rcr
inc
push
add
xchg
pop
cli
mov
push
bound
and
sub
push
jle
rol
jg
dec
jno
inc
add
sahf
imul
cld
mov
push
sbb
add
cwtl
lock
popf
add
js
in
int3
adc
stos
pop
test
cmp
pop
add
mov
jle
stos
cwtl
stc
push
push
sbb
popl
ret
mov
dec
jg
add
cwtl
jb
jmp
fbstp
sbb
int3
xor
and
and
inc
inc
inc
cmp
xor
and
jne
add
mov
adc
sbb
fs
cs
imul
add
fdivl
loop
mov
add
dec
mov
cmp
frstor
pop
ror
stos
mov
adc
stos
popa
cmp
sbb
popf
xchg
addb
or
xchg
push
inc
xchg
cmc
mov
scas
and
das
mov
movsl
lods
out
mov
mov
int
imul
jnp
and
add
idiv
push
cmp
jge
and
cmp
es
xor
or
dec
xor
add
mov
xor
and
adc
xchg
mov
add
push
and
cmc
mov
jns
add
xor
pop
or
and
aam
cmpsl
cmp
pop
jne
sbb
cwtl
add
or
in
adc
mov
stos
add
test
incb
aam
out
or
and
fadd
sbb
cmp
add
mov
sub
in
scas
xchg
mov
sub
sahf
imul
push
and
mov
test
dec
jns
and
push
adc
add
adc
push
mov
fisubrs
aas
popf
mov
sahf
add
fildll
or
xlat
cltd
pop
and
adc
in
add
das
fwait
xor
cli
add
xchg
mov
test
add
pop
scas
loopne
dec
repnz
add
scas
and
mov
mov
add
add
int3
inc
inc
and
es
add
hlt
call
fsubl
sub
scas
int
push
push
cmc
add
cmpsb
or
cmp
aad
pop
icebp
aam
and
or
push
add
mov
xor
aad
add
aaa
and
movsl
in
call
add
xor
fistl
pop
adc
js
cs
xor
subl
repnz
or
and
inc
outsl
adc
and
or
push
stos
test
add
sbb
add
add
mov
mov
ficoml
mov
movsl
arpl
hlt
and
cmc
lock
out
enter
lods
inc
sub
sbb
add
push
add
mov
les
xor
dec
mov
mov
ds
dec
popa
adc
icebp
addr16
cltd
add
mov
dec
add
pop
insl
arpl
aad
add
orl
out
cmc
adc
shll
mov
pusha
add
rcrl
lret
xchg
xor
add
loopne
push
mov
jmp
leave
dec
push
mov
dec
mov
stos
daa
pop
repnz
and
add
in
cwtl
ret
xchg
fidivl
mov
insl
pop
inc
adc
xor
add
cmpsb
dec
adc
ret
ljmp
repnz
je
xchg
cmp
jne
push
dec
cmpl
ret
or
jge
cmpxchg
incl
call
xor
cmp
add
ror
add
push
xchg
push
add
jae
fsubrl
push
clc
shrb
inc
xor
pop
dec
xor
loope
pop
fs
fld
cmpsl
pop
cmp
dec
add
sub
jmp
pop
daa
adc
mov
jge
loopne
xor
add
sahf
sub
mov
mov
ljmp
add
xchg
jmp
hlt
ja
add
and
mov
and
sahf
jne
sub
push
out
jl
aas
insb
std
inc
xor
enter
sub
loopne
add
repz
insl
lock
notl
xor
fnstenv
push
push
sbb
mov
scas
jo
lods
lock
mov
push
ss
pop
repz
iret
jmp
jo
add
mov
add
shrb
add
les
repz
dec
icebp
fisubrs
push
test
inc
rcrb
xor
cmp
movsl
sub
push
ljmp
mov
inc
pop
add
std
bound
mov
sbb
pop
sahf
ds
sbb
es
enter
out
mov
dec
mov
lret
popa
sbb
dec
dec
mov
leave
or
stos
fwait
sbb
orb
cmp
js
add
mov
stos
test
mov
cmp
add
lahf
frstor
sahf
cli
lretw
push
push
sbb
xor
xchg
stc
js
add
bound
dec
sbb
clc
fucomip
loopne
add
or
add
aas
sub
dec
rolb
pusha
dec
les
dec
xchg
inc
jae
add
xchg
rclb
lock
mov
dec
add
repnz
inc
cli
clc
jae
mov
inc
jmp
pushf
mov
or
popa
mov
push
push
in
int3
mov
add
mov
sbb
add
adc
push
lods
and
inc
sti
add
out
add
push
add
dec
cld
adc
cmpsl
adcb
ficoms
sub
push
mov
das
les
mov
cmp
jmp
daa
jnp
sysret
loope
addl
ret
pop
cwtl
pop
lret
push
aaa
and
dec
mov
xchg
popf
mov
dec
jle
pop
cmp
data16
xchg
mov
pmaxsw
jmp
mov
ss
lahf
cmp
cli
push
fcomps
add
sbb
adc
dec
sub
push
mov
orb
mov
sahf
add
or
push
loope
inc
aad
les
add
rcl
callw
addl
xor
ret
sub
lock
add
pushf
mov
stc
mov
fcmovu
sbb
mov
mov
mov
shlb
add
repz
test
jo
fmul
add
rorb
add
or
loopne
add
pop
fcomps
pusha
leave
sbb
js
addl
mov
outsl
add
dec
jae
add
shlb
fmuls
lds
adc
fidivl
push
mov
xor
stos
subb
sbb
mov
orb
or
add
icebp
daa
sub
add
bound
in
and
ljmp
adc
shrl
pop
add
sbb
pop
mov
js
push
cmc
int
test
sbb
loope
imul
jmp
or
fisttpl
cmp
cmp
adc
pop
xor
mov
and
push
filds
test
out
rorb
mov
xor
je
add
lock
sub
popa
addr16
push
jecxz
or
lret
pop
xorb
aaa
pop
nop
and
and
mov
xlat
jmp
fldenv
hlt
shlb
sub
adc
xor
and
push
call
xor
mov
cmc
add
mov
es
dec
addb
push
and
fists
push
xor
out
adc
add
lret
and
add
mov
jp
pop
in
insl
inc
pop
outsb
jae
cwtl
lock
sub
adc
int3
test
in
pusha
clc
dec
add
bound
mov
add
mov
or
adc
adc
aas
mov
pusha
mov
cmpsb
shlb
mov
add
dec
aad
outsb
mov
jb
testl
les
leave
mov
add
cmpsl
sbb
mov
and
jno
idivl
push
pushl
jecxz
xlat
jge
xor
sub
inc
jb
insb
out
ljmp
cmp
and
jl
xor
xchg
dec
cmpsb
loop
pop
pop
xchg
mov
jb
pop
loope
xchg
cmp
popf
addb
push
add
sub
std
pusha
shl
gs
into
add
mov
test
mov
data16
mov
xchg
pusha
cmp
add
mov
sub
jecxz
cmp
adc
fucomp
pop
les
add
pop
adc
popf
add
fdiv
pop
adc
jge
mov
cs
mov
lock
add
xor
cmp
xorb
repz
xchg
test
and
push
shrb
xchg
fsubrs
cwtl
data16
sbb
clc
add
js
or
pop
push
inc
sbb
out
xor
sbbl
lcall
pop
cmpb
je
pusha
xor
andl
inc
jno
fsubs
mov
add
add
mov
pusha
loope
or
add
in
cmc
imull
jo,pn
add
lea
inc
mov
pop
cmp
rorb
mov
mov
movnti
and
loopne
stos
mov
push
lcall
add
out
cwtl
into
call
cmp
mov
sbb
sbb
ss
or
add
cmp
sub
lea
mov
mov
and
dec
mov
pop
je
in
dec
xchg
sahf
icebp
add
dec
push
ja
or
sub
test
cltd
dec
or
js
ss
mov
adc
enter
push
inc
pop
jge
or
movsl
aad
scas
add
add
stos
in
xchg
add
fnstenv
or
xor
fdivrl
out
lods
jno
add
push
push
ficompl
lock
mov
push
shll
notl
jg
mov
push
push
add
out
iret
add
imul
add
stos
xor
add
sbb
inc
or
paddusw
fbstp
cs
mov
mull
mov
in
xor
fbld
fisttpl
stos
addl
jns
imul
loop
add
std
fldcw
inc
adc
pfrsqrt
mov
sbb
add
push
outsb
cs
cmpsb
inc
cli
hlt
cmp
movb
add
dec
mov
and
add
subb
xor
movsb
mov
sti
add
lahf
inc
dec
add
add
xchg
mov
dec
fiadds
imul
icebp
add
out
das
and
rolb
push
xor
insl
add
movsb
push
push
int3
xor
shrb
xorl
mov
aam
andl
lahf
push
add
cmp
mov
add
pop
xchg
in
jnp
and
pop
or
xor
shlb
push
sub
sub
mov
cmpsb
and
xor
xchg
int3
jp
stos
fdivs
in
add
push
les
inc
dec
pop
mov
mov
cs
lods
pusha
sbb
fmull
orb
mov
lret
add
jne
inc
mov
sarl
jb
inc
out
pop
add
shlb
push
pop
call
mov
shr
jecxz
push
jle
xchg
sbb
lods
addb
aas
lcall
sbb
pop
pop
mov
adc
lods
dec
sbb
loope
into
push
loopne
xchg
outsb
and
push
lds
or
pop
jo
add
sub
call
je
scas
sbb
rcrl
xor
push
jo
sbb
ret
inc
cmp
or
and
add
xchg
xor
pop
sbb
add
adc
inc
in
fldcw
stc
add
jge
shlb
int3
ljmp
adc
mov
js
jo
mov
jecxz
clc
stc
cmp
stc
sbb
inc
dec
mov
inc
out
xchg
adc
arpl
pop
push
adc
dec
xor
mov
sbb
sahf
sbb
add
dec
mov
mov
dec
jns
fs
push
jmp
push
push
or
cmp
inc
or
pop
jne
jb
jno
leave
addr16
lds
mov
adc
fcmovb
and
pop
sbb
pop
push
lds
add
repnz
lret
bswap
aaa
loope
sbb
fdivrp
rcll
push
sub
into
mov
add
movsl
add
mov
outsl
pop
mov
outsb
xchg
mov
pusha
jb
push
fisttpl
cmp
pop
outsb
shl
mov
push
jp
sbbl
mov
mov
popa
mov
mov
adc
adc
mov
lods
or
or
xchg
loopne
jecxz
or
fldl
clc
fs
sarl
fcoml
les
cmp
ds
jecxz
add
push
inc
mov
add
xchg
sub
sbb
and
cmp
aas
sub
outsb
insb
je
scas
sbb
imul
dec
mov
jnp
or
ja
add
stos
fmuls
sarl
or
add
xor
cmpsb
mov
das
int
xor
pop
mov
ljmp
sbb
push
jb
or
inc
mov
pop
pop
loop
adc
push
loopne
push
rcl
push
mov
sub
xor
call
xlat
rep
lods
ljmp
scas
mov
add
dec
push
shr
das
xor
add
dec
enter
sub
addl
jns
add
mov
jmp
mov
xchg
repnz
xorb
std
or
cmpl
mov
push
insl
lock
dec
mov
addb
jae
lahf
rcrl
dec
add
sub
mov
ss
add
leave
loope
sbb
mov
movsl
fldt
daa
ds
mov
sbb
jmp
pop
push
lea
fadds
pop
or
jne
shrb
adc
ss
and
push
bound
cs
cmc
out
inc
fwait
add
repnz
pop
xor
loope
cmp
jb
cltd
and
jmp
repnz
cmp
in
xor
movl
jg
adc
ds
mov
pop
lcall
pop
push
xor
mov
lods
cmp
nop
dec
lock
iret
xchg
dec
daa
sub
xor
xlat
loop
outsl
lock
enter
dec
cmp
dec
call
in
add
mov
sub
dec
in
addr16
mov
dec
pop
stos
and
pusha
push
add
mov
les
daa
push
cmp
lcall
push
dec
dec
int
adc
mov
inc
scas
xor
lods
pop
and
ss
out
pop
xor
adc
or
fdivs
cmpl
push
mov
add
das
adc
inc
add
xor
cmpsl
dec
dec
inc
mov
loopne
add
into
sub
repnz
lods
enter
jno
sbb
rcrb
enter
add
or
xor
sub
rolb
push
mov
mov
sahf
inc
cmp
sbb
xchg
jge
xchg
sub
add
out
imul
xor
push
mov
push
adcb
dec
lret
add
outsb
call
pop
fwait
or
in
inc
out
fistps
push
inc
fst
pop
mov
push
fisubl
ljmp
add
cwtl
xchg
dec
and
mov
shlb
pop
add
jb
mov
aaa
and
add
mov
sti
js
or
sub
popa
and
or
pop
xor
roll
je
pop
aas
push
xorb
rcrb
adc
sbb
clc
and
inc
repz
lret
dec
and
xchg
aaa
iret
and
inc
sbb
adcl
movsl
add
dec
insl
or
mov
sub
sub
aad
add
sub
push
popf
imul
sub
push
adc
mov
outsb
and
inc
lods
clc
sbb
xor
mov
push
jne
cmpb
stos
das
xchg
stos
xor
mov
insb
inc
nop
and
bound
ret
inc
repz
fstpl
mov
addb
dec
add
imul
cmp
jp
and
enter
lock
fsubrp
mov
push
add
orl
or
and
aam
mov
dec
mov
jecxz
xor
pop
ss
inc
insl
addl
or
or
mov
lahf
adc
push
sub
mov
dec
dec
in
loopne
add
pop
scas
ja
push
or
gs
popa
pop
lods
mov
in
lahf
jne
in
xor
sbb
sub
push
nop
in
xchg
push
sub
jmp
imul
mov
je
sbbb
scas
sbb
mov
jle
dec
cmp
ret
faddl
xor
push
fmulp
int3
shlb
mov
sub
push
jg
out
add
popf
jmp
ja
push
add
stos
scas
jbe
pop
push
fiaddl
pushf
pop
dec
add
sbb
inc
sub
adc
sbb
xor
test
jo
iret
add
hlt
push
inc
xchg
push
mov
mov
sub
arpl
dec
dec
fcoml
movb
add
or
xchg
jl
add
pop
cmc
sub
xchg
popa
jns
add
lods
inc
in
add
jle
enter
or
add
mov
mov
fwait
inc
xor
add
ds
inc
xor
or
add
cmpsl
test
lods
mov
sbb
flds
jno
aas
adc
inc
dec
sbb
mov
or
cmp
push
pop
mov
adc
imul
or
loop
addr16
push
add
ljmp
add
cmp
jo
sub
rclb
mov
sub
shll
add
sub
into
dec
inc
icebp
add
inc
xor
dec
fsubp
cmpb
sti
or
xlat
jl
jp
shr
loope
nop
add
jae
mov
sti
mov
stc
sub
roll
aas
lods
ja
jnp
xlat
ret
cmp
jno
adc
iret
dec
repnz
cltd
add
adc
sub
mov
rcll
add
testb
sbb
addl
sub
add
add
dec
sub
jl
add
outsb
in
clc
aam
add
jp
hlt
es
add
daa
sub
cltd
adc
lods
add
dec
mov
outsb
add
sbb
pop
sub
leave
xchg
icebp
adc
push
pop
or
inc
xlat
aas
cmc
xor
insb
jbe
mov
add
aas
std
adc
movsl
clc
sbb
adcb
push
sub
mov
out
pop
sbb
inc
sbb
shl
loopne
jl
or
popl
sbb
shlb
add
lods
cwtl
fdivl
mov
adc
xorb
into
push
in
popf
dec
mov
xchg
mov
cmpsl
jb
add
inc
mov
jle
and
shlb
repz
aad
dec
adc
adc
add
jae
inc
adc
jae
jg
add
jnp
fwait
pop
lods
ret
mov
scas
outsl
dec
stos
jl
mov
sbb
add
push
mov
fisttpll
data16
repnz
pusha
and
xorl
cwtl
mov
pop
push
iret
arpl
mov
cmp
hlt
add
pop
in
cmp
je
dec
mov
dec
aaa
jbe
out
loop
cmp
lods
cli
cmp
jecxz
add
fld
mov
fisttps
loope
xor
rclb
into
add
push
ret
xchg
dec
cmp
movb
testb
push
scas
shll
add
sub
xchg
out
inc
add
jle
sti
jbe
test
dec
in
add
aad
adc
cmp
inc
mov
mov
and
add
push
dec
add
cltd
dec
add
mov
mov
cmp
aaa
test
sub
es
stos
cmp
xorb
jmp
and
adc
andps
leave
inc
mov
mov
ret
mov
jmp
mov
pushf
mov
add
inc
test
dec
jns
pop
mov
fstps
js
inc
nop
roll
adc
rolb
cmp
mov
xchg
and
dec
add
adc
sub
sbb
test
jmp
stos
mov
icebp
cmp
mov
lds
mov
nop
outsl
add
pop
or
fildl
adc
mov
testl
add
and
pusha
add
inc
outsb
flds
mov
sub
js
orb
mov
jbe
insb
out
mov
mov
pusha
pop
mov
inc
sub
loopne
enter
test
mov
xor
adc
add
leave
repnz
push
les
stc
jp
sbb
lret
cld
in
cwtl
and
shl
mov
add
pop
mov
push
mov
or
add
inc
movsb
rolb
lds
pop
cli
push
add
xchg
lret
mov
jmp
push
inc
rolb
add
sarb
ss
add
mov
mov
pop
les
jns
out
xchg
insl
mov
add
mov
pushf
cmp
js
cld
cs
add
push
jbe
jmp
inc
enter
cmp
cmpsb
push
lods
movsl
outsl
pop
cmpsl
jmp
jnp
sbb
sbbl
xor
popa
inc
test
and
cld
clc
shlb
mov
movups
ljmp
jmp
or
inc
push
ds
mov
jne
mov
loope
or
xchg
dec
jo
imul
outsl
pop
insb
inc
repz
sbb
cmpl
mov
mov
push
faddp
cmp
out
sub
daa
push
mov
jle
das
inc
mov
add
push
pusha
add
insl
add
mov
sbb
or
adc
ds
ljmp
lea
inc
bound
test
mov
cwtl
fimull
fiadds
icebp
mov
fcomp
xchg
enter
sbb
dec
add
lea
hlt
add
lcall
lahf
push
stos
cmp
add
into
stos
icebp
add
sub
movsl
cli
xor
pusha
data16
out
pop
test
mov
ds
stos
add
mov
mov
inc
mov
inc
mov
dec
jmp
sub
pop
add
or
add
pop
add
shr
addb
adc
mov
pop
daa
sub
sbb
lret
mov
sbb
dec
add
fcmovb
and
sub
pop
push
push
mov
pop
and
jne
push
xchg
add
test
das
cmc
loopne
aad
dec
movsb
add
xchg
aas
cmovl
cmp
xor
push
mov
std
xchg
addr16
mov
iret
add
sahf
mov
add
dec
sub
add
jge
sub
push
jns
ljmp
add
lea
dec
add
jle
popa
pop
fidivs
push
mov
inc
xchg
ret
pop
cmp
cmpsb
mov
call
jo
sbb
mov
fdivl
adc
add
js
shlb
jl
adc
pop
inc
seta
mov
push
hlt
add
jo
ret
test
push
push
cld
push
sub
and
fsubp
push
stos
cmpsb
pusha
pop
fmuls
stos
jns
cmp
shr
hlt
daa
adc
jmp
pop
sbb
ret
pop
push
add
cltd
daa
xchg
pop
out
lods
or
cmpxchg
lock
movsb
mov
in
jl
mov
adc
popl
jne
fidivs
fmull
call
into
sub
cmp
mov
out
mov
rorb
add
pop
rol
popa
in
mov
call
shll
push
lret
xchg
push
push
sbb
add
mov
add
dec
pop
and
gs
sbb
insl
movsl
rcrb
sbb
mov
lods
sbb
test
inc
mov
imul
sub
dec
mov
lods
je
enter
mov
push
jo
mov
jns
and
pusha
pusha
imul
xchg
arpl
add
dec
fstp
add
gs
push
mov
es
mov
jp
jno
push
dec
sbb
xchg
jbe
stos
gs
dec
add
or
mov
pushf
out
cmp
adcb
dec
stos
xor
xor
std
addb
sbb
or
addr16
ja
stos
cmp
je
mov
jbe
inc
push
inc
cmpsl
lret
push
imul
xchg
jge
add
and
in
test
imul
jl
push
dec
dec
stos
test
lret
cwtl
sbb
cmp
and
test
push
sbb
cmp
jne
pop
sbb
or
cwtl
adcb
pushf
push
cmp
fs
out
push
cmpsl
fildll
pop
adc
sarl
stc
xchg
push
popf
mov
mov
xor
rcrb
mov
mov
sbb
pusha
cmp
or
jo
cli
add
add
imul
mov
fs
sbb
shl
xchg
xor
push
out
lcall
fldcw
hlt
sbb
mov
pop
je
pusha
and
nop
add
adc
scas
dec
movsl
jns
add
fcompl
pop
enter
test
andl
push
int
int3
stc
add
xor
les
fwait
jbe
loope
scas
add
ss
leave
subl
shll
aaa
lock
call
mov
add
stos
in
movsl
punpcklbw
jno
mov
add
repnz
xor
sbb
inc
xor
add
loop
iret
daa
xchg
lock
sbb
push
mov
cmp
push
jo
add
fcmovnu
rclb
subb
or
cmpsl
mov
into
xor
dec
test
dec
jo
jg
popf
int3
adc
adc
ljmp
je
or
and
loop
movsl
add
or
and
add
xorl
push
roll
adc
sub
mov
inc
lea
adc
orb
pop
sbb
mov
xorb
nop
sarb
ja
xchg
pop
cmp
or
mov
aad
lock
and
cld
add
add
jno
xchg
inc
xor
dec
into
lahf
pop
sbb
mov
add
pop
jmp
cltd
or
cwtl
adc
cmp
cmp
orb
stc
push
ret
dec
jo
cmp
add
fcompl
aam
int
xchg
mov
mov
and
jle
in
inc
mov
in
std
pop
add
and
add
loope
add
push
jge
sbb
inc
ret
leave
rorb
push
ficomps
xor
add
or
mov
inc
mov
xor
sar
pop
add
cmp
or
pop
fisubrs
and
xchg
sub
mov
push
orl
and
dec
xchg
fsubr
int
cmp
ja
fadds
or
mov
imul
or
sub
insb
stc
out
divl
add
sbb
test
roll
cmp
add
aad
adc
sub
pop
add
cmpsl
mov
sbb
xor
aaa
add
in
clc
add
mov
js
mov
leave
daa
je
call
or
or
mov
push
lods
adc
fiadds
push
push
lds
outsb
mov
push
daa
or
sub
or
lcall
stos
inc
mov
inc
lcall
out
add
add
and
add
xchg
or
imul
js
and
inc
enter
incl
ficoml
push
test
and
jecxz
aam
or
and
inc
loop
push
aas
dec
test
insl
mov
test
or
in
add
add
cmpsb
outsb
adc
aaa
clc
inc
mov
dec
aad
fldl
cmpl
pusha
and
add
out
add
dec
repnz
cli
mov
jg
push
fists
add
jge
push
add
es
xchg
cwtl
sub
dec
jbe
jae
cmpl
cmp
cmp
neg
inc
test
push
dec
add
shrb
cmp
shrb
rcrb
addl
xchg
fcompl
inc
xchg
add
loope
sbb
loop
sub
mov
or
sub
push
inc
fstl
adc
ret
mov
mov
clc
mov
in
mov
adc
jmp
adc
adc
lret
in
mov
mov
or
mov
dec
fiaddl
jbe
popa
add
xchg
add
inc
popf
xchg
or
lret
shl
ljmp
out
idivb
and
movb
mov
btr
lahf
jno
push
push
add
adc
add
mov
cli
xchg
inc
ficomps
cmp
add
cmpsb
sarb
xchg
jmp
push
mov
mov
insb
cmp
xchg
jbe
icebp
add
xlat
mov
cld
add
stos
cmp
repnz
add
arpl
mov
push
rol
int3
xorb
insb
dec
sbb
mov
ror
xchg
cmp
add
add
push
leave
jno
mov
and
cwtl
adc
jnp
push
test
mov
jns
cmp
push
idivl
inc
or
ds
inc
negl
push
xchg
jbe
add
pop
in
add
lods
xor
sub
ficompl
mov
rolb
lock
test
addr16
jae
add
sbb
int3
add
cmp
add
mov
pop
cli
cmpsb
lods
xchg
mov
add
jne
sarb
sbb
call
sbb
dec
push
insb
add
sub
mov
cld
stc
and
cmc
add
jno
jl
movsb
sub
pop
subb
cmp
rclb
add
xchg
cmp
ja
sbb
cmpsb
lcall
lods
add
ljmp
add
push
and
sti
and
test
mov
lcall
dec
cmpl
pop
stc
ds
xchg
xor
add
xchg
xor
add
sti
outsl
sub
addr16
pop
sbb
fidivrl
or
fsubl
add
add
sub
lahf
js
idiv
gs
das
lock
add
scas
xor
add
cld
sbb
jmp
xchg
sub
sbb
adc
out
cmovb
jle
pop
push
add
jge
add
fsubrl
mov
pop
movsl
fisttpl
cmp
mov
xlat
push
xor
rcrb
adcl
hlt
inc
sbb
test
cmp
in
add
out
cmp
arpl
orl
mov
dec
mov
add
add
sub
push
jle
dec
mov
or
lcall
nop
mov
cmp
fnstenv
mov
and
sbb
fldt
add
or
cmp
setbe
or
mov
loopne
stc
jno
into
btr
jp
inc
mov
dec
add
lahf
sub
rclb
mov
out
cld
cli
outsb
inc
and
jo
fiaddl
std
lea
lret
inc
lods
cmp
outsb
gs
cld
adc
loop
inc
cmpsb
sbb
jge
dec
xor
pop
fs
loope
add
mov
xor
fdivrp
cs
jmp
add
shlb
mov
wbinvd
pop
popf
adc
shl
stos
aaa
clc
call
fmull
adc
ss
add
lret
push
push
pop
add
repz
pop
dec
dec
jo
add
sub
sub
inc
aam
mov
fucomp
nop
dec
and
lahf
add
xchg
movsl
fadd
add
xor
ret
mov
je
iret
pop
push
mov
mov
bound
je
cmp
add
pop
sub
stc
mov
add
les
inc
xchg
push
sbb
cmp
pop
loop
sub
add
lret
or
clc
sub
push
push
xor
hlt
push
cwtl
dec
rcrl
add
mov
iret
jl
push
pop
call
rcrb
add
in
xorl
scas
mov
sti
jmp
test
adc
cmc
jg
add
xchg
or
sbb
popa
xor
add
mov
cwtl
mov
aad
push
int3
in
fldl
adc
mov
cmp
sbb
rol
mov
pop
push
pop
stos
push
das
add
sub
or
out
ljmp
dec
fidivrs
mov
inc
int
add
pusha
adc
out
sti
add
fisubl
orl
rcrl
cld
subb
fdivrl
lock
adcb
xchg
lea
scas
arpl
cmpl
call
jno
imul
lea
adc
icebp
add
aas
call
clc
cmc
sarl
pop
xorb
add
ret
mov
xchg
push
jo
out
gs
xor
pop
outsl
cli
addl
push
cltd
jno
jo
fiadds
cmp
les
xchg
pop
add
lret
xor
aaa
add
das
nop
nop
add
push
fstps
pop
cmp
add
into
cli
test
jecxz
nop
mov
mov
pusha
js
out
mov
jne
insb
data16
sub
inc
decl
test
cmpsl
pop
pusha
inc
cmc
adc
add
ret
jbe
inc
insb
add
scas
sub
aas
ret
arpl
pop
and
jecxz
dec
xchg
mov
dec
jnp
cmp
in
into
jo
add
push
dec
mov
jmp
sub
inc
cmc
mov
lea
or
pusha
mov
push
mov
jp
adc
add
into
pop
pop
pop
adc
call
jmp
and
or
jne
mov
adc
cmp
add
pop
outsl
repnz
nop
add
or
lds
insb
mov
mov
lods
sbb
cli
gs
add
arpl
sub
enter
lock
popa
ret
out
rclb
pop
inc
adc
in
xchg
mov
mov
xor
jecxz
adc
mov
les
data16
shlb
mov
xchg
sbb
jne
imul
fisttpll
dec
add
sbb
js
sbb
das
subb
lds
lahf
jle
cmp
out
fs
and
jns
into
mov
add
xchg
dec
mov
je
jp
mov
add
jae
movsb
add
and
lea
sbb
les
mov
pop
pop
fldl
popl
mov
dec
int3
add
or
mov
mov
lahf
and
in
add
mov
gs
aas
inc
adc
mov
repnz
lahf
sbbl
adc
sbb
das
int
test
ret
add
dec
fcoms
cmc
addl
add
dec
testl
xchg
loopne
imul
mov
inc
test
ret
repz
add
mov
cmp
push
sbbb
xchg
test
push
cmp
addb
les
add
rcrl
xorb
jo
and
sub
dec
rorb
insl
data16
out
mov
jne
jl
aam
inc
cli
push
mov
std
push
mov
fiadds
push
mov
add
leave
xor
test
mov
jmp
sbb
mov
fisttpll
bound
inc
adc
push
pusha
outsb
into
push
mov
out
jno
cltd
and
lods
imul
imul
add
mov
mov
xchg
add
jns
loop
lcall
adc
xchg
les
adc
sub
test
inc
repnz
lahf
scas
lds
lock
shll
std
ja
add
sub
cmpsb
sub
pop
dec
sbb
mov
add
cwtl
push
or
jb
clc
jbe
sbbb
add
into
lcall
outsl
push
mov
fldl
cmp
inc
mov
lock
lods
call
mov
popa
cmpsb
mov
mov
sti
hlt
add
ja
pop
sbb
pop
xchg
lods
in
push
fwait
enter
inc
leave
push
push
adc
sbb
into
ret
rcr
add
mov
outsb
dec
cmp
add
xchg
scas
mov
add
mov
pop
testl
sub
push
push
push
xchg
fdivrl
orb
call
pop
sbb
popa
pop
shrb
add
je
cmc
xlat
jmp
add
jmp
bound
push
lcall
imul
sub
add
dec
sbb
stos
sub
outsl
add
out
fists
add
inc
aad
pop
ss
mov
add
aas
cmp
add
jmp
jl
xchg
popa
jg
jne
lods
xchg
cmp
idivb
in
fmull
pop
add
icebp
scas
int3
cmp
bound
add
jne
call
and
addb
add
shr
lret
jp
testb
incb
jnp
lods
or
sarl
fstps
push
pop
in
inc
jle
adc
mov
subb
mov
cltd
popf
cmp
xor
and
xor
push
add
repnz
and
outsl
rorb
stc
push
push
add
sub
pop
mov
loopne
insl
ret
xchg
mov
dec
mov
and
into
es
hlt
add
adc
cmpsb
jb
add
xor
nop
fmuls
popf
inc
xchg
das
fisttpll
add
add
and
mov
insl
jge
imul
sbb
test
sbb
push
xchg
jno
add
and
clc
jl
repnz
add
in
mov
adc
cli
sbb
imul
aas
loope
in
sub
insl
add
arpl
pop
xor
insb
mov
jp
adc
pop
xchg
xor
jle
stos
pop
add
and
inc
adc
daa
dec
cmp
inc
xchg
js
adc
adc
out
out
inc
lock
in
movsb
and
adc
add
xchg
inc
js
xorl
enter
cltd
mov
mov
mov
das
add
orl
xorb
into
int
add
fwait
daa
aad
cmp
mov
add
fidivl
aam
or
jmp
mov
sub
stos
inc
fildll
add
leave
sub
jb
movsb
mov
jle
jne
adcb
inc
in
andl
or
test
add
push
pop
pop
xchg
dec
negl
cmp
xchg
inc
add
mov
out
bound
andb
jp
je
add
movsl
and
and
pop
fstl
mov
cs
daa
mov
shlb
or
les
mov
movsb
popa
pop
adc
and
out
setl
or
mov
sub
mov
dec
loop
lock
or
pop
adcb
faddl
mov
add
imul
jmp
adc
cld
pop
movb
clc
push
js
mov
mov
add
test
add
inc
iret
inc
xchg
and
cli
aam
pop
add
enter
mov
fdivs
push
jmp
or
int
lock
movsl
dec
jae
fsubp
add
mov
mov
fcomip
add
out
cmp
popf
push
fstl
lods
in
and
adc
fildl
add
xor
rorb
dec
vpaddsb
add
xor
inc
dec
out
pop
add
in
into
dec
dec
add
shlb
xchg
push
subb
mov
mov
test
out
hlt
add
pop
cmpsl
je
cltd
into
add
dec
fs
test
insl
je
loopne
sbb
add
shl
mov
jecxz
xor
daa
add
outsl
cmpsb
or
mov
insl
lock
or
inc
jns
shlb
or
mov
pop
outsl
mov
inc
xorb
sub
decl
pop
lods
add
out
fiaddl
or
aaa
inc
add
rep
mov
mov
add
adc
pop
mov
mov
test
ja
in
mov
add
lods
add
mov
mov
pushf
mov
cltd
or
fnstenv
and
add
cmp
mov
sbb
mov
sbb
in
lcall
mov
fisubrl
add
mov
lock
loope
aad
sbbb
adc
add
mov
mov
das
cmpsb
rol
testl
sbb
push
add
jo
mov
out
xchg
add
js
add
sub
repnz
add
and
stos
pop
cwtl
shlb
add
dec
sti
popf
xchg
push
out
add
cmp
lcall
outsl
mov
fldcw
mov
add
or
cmpsl
and
aas
mov
rcr
add
rcrl
mov
jecxz
xchg
pop
xchg
mov
add
nop
pop
stos
and
sbb
loopne
and
inc
mov
repz
sbb
xor
shr
in
add
lock
cmp
push
jno
and
addb
dec
jge
add
enter
add
lea
mov
adc
jecxz
insb
adc
dec
js
or
shlb
add
xor
dec
sbb
jbe
in
test
push
insb
add
pop
cmc
ret
add
mov
out
cmp
inc
pusha
dec
hlt
pop
jns
mov
je
jno
inc
je
push
push
loopne
add
cs
div
pop
es
mov
or
cli
sub
inc
mov
add
fwait
jmp
adc
sub
enter
popa
pop
pusha
out
mov
ja
push
sarl
sbb
cmpsb
sub
mov
push
in
loop
push
push
lcall
out
cmp
sbb
push
xchg
filds
xchg
stos
jnp
xlat
pop
je
or
and
mov
gs
add
push
xchg
psadbw
add
jo
xchg
or
les
cld
sub
stc
add
mov
daa
out
adc
repz
add
pusha
jnp
js
test
sbb
jg
add
mov
xor
add
xchg
inc
cs
rclb
mov
nop
xchg
test
add
ficoml
add
mov
mov
add
mov
pop
ret
ss
mov
pop
xchg
jns
or
test
aad
jnp
imul
int
mov
arpl
rol
fnstsw
loopne
add
inc
xchg
xchg
notb
xchg
cmp
and
lock
pusha
lret
decb
fwait
stos
les
add
js
jmp
xchg
and
pop
inc
sbbb
add
add
fstps
out
add
add
test
mov
sbb
test
pop
pop
rorb
es
add
sub
dec
ret
cmp
fstpl
add
add
adc
mov
adc
lret
pop
lahf
add
sub
enter
cmp
insb
or
jmp
nop
add
adc
mov
xchg
xchg
add
pop
push
mov
fadds
add
jecxz
shrl
ljmp
jns
push
adc
sbb
rorb
outsb
jbe
jo
jg
testl
adc
aas
inc
test
cs
insb
iret
add
fcoml
adc
mov
inc
xor
in
loopne
cmp
add
call
jns
aam
push
rolb
punpckhbw
mov
jp
ja
shufps
popf
mov
xorl
sysret
mov
nop
lret
ret
adc
add
rcl
mov
lds
cmp
in
enter
rorl
insb
jae
addb
jbe
sub
mov
mov
jae
fwait
pushf
or
push
mov
mov
cmpsb
inc
lods
and
ficompl
add
lods
in
loop
add
jb
adc
and
sbb
sahf
add
mov
testl
sbb
shlb
pop
in
mov
pusha
lock
cmpsl
icebp
cld
jl
or
mov
and
test
sbb
out
in
ss
ja
sub
mov
loop
add
add
popf
sub
nop
dec
pop
ja
rcrb
add
ss
xchg
pusha
sub
add
inc
popa
push
aam
test
inc
and
sbb
mov
shrl
sub
testb
adc
mov
jbe
lods
fwait
pusha
jle
dec
add
xor
push
test
sti
add
jbe
adc
push
and
fidivrl
add
hlt
jge
xor
fdivrs
div
add
gs
addr16
and
push
sarl
push
mov
pop
es
popf
pop
imul
loopne
sbb
movsb
adc
rolb
cli
aad
scas
pop
xchg
or
jmp
add
lds
pop
add
mov
mov
ret
pop
test
xchg
xor
cmp
addb
sub
fnsave
lock
dec
pusha
add
adc
xchg
frstor
pop
jae
add
movsl
or
in
popf
inc
dec
pop
arpl
in
inc
data16
cltd
outsl
pop
and
hlt
xor
int3
sub
aam
mov
movsb
jbe
lock
ror
push
mov
xor
std
icebp
adc
mov
push
jp
push
test
mov
fs
xor
pop
cmp
ljmp
dec
stc
mov
int3
daa
out
pusha
add
pushf
sbb
dec
xor
or
push
ljmp
jle
sub
inc
add
push
dec
dec
pushf
sbbb
repnz
fsubl
lret
add
push
or
clc
add
add
scas
dec
mov
pop
mov
repz
stc
loope
testb
pop
mov
stos
pop
mov
in
mov
bound
jle
daa
jo
adc
xor
sti
dec
xchg
mov
adc
xlat
int
dec
sarb
lcall
mov
shll
ljmp
in
in
xor
xorb
adc
mov
sbb
loopne
dec
test
xor
orl
movsb
sbb
cmp
mov
xor
arpl
popa
xchg
test
addb
pusha
push
loopne
cmp
imul
lret
cld
add
mov
fisubl
int
add
cmp
and
jge
add
and
test
and
lcall
int3
arpl
dec
roll
xchg
lcall
pop
adc
mov
jnp
movsl
test
sub
and
shr
jae
scas
xchg
leave
cs
push
js
fistl
out
pop
lods
insl
cmp
repz
movb
ja
cmpsb
push
ret
add
sub
lcall
popf
jbe
lret
inc
es
cmp
push
and
daa
ret
shlb
cmp
ret
pushf
add
inc
sub
xchg
insb
add
and
in
popf
pop
jg
and
icebp
cmp
xor
push
bound
mov
add
adc
aaa
sub
mov
imul
scas
outsb
lock
inc
xchg
loopne
add
or
add
xor
es
pop
mov
frstor
idivl
loop
mov
jecxz
je
add
call
and
sub
jns
xchg
nop
or
add
cltd
aas
add
mov
aam
fiaddl
pop
inc
fbld
add
mov
and
test
lcall
xchg
mov
adc
sub
ljmp
cmpb
loopne
add
jae
mov
cmp
into
test
lret
lock
add
lds
add
fdivr
loope
imul
add
sub
cmp
incl
out
repz
push
dec
test
jno
aaa
cmp
incb
xchg
inc
or
mov
cwtl
test
cmp
mov
ljmp
jnp
out
iret
cmpsl
std
aad
jmp
push
push
push
sbb
inc
xchg
mov
or
add
dec
mov
mov
mov
cmp
xor
add
dec
xchg
sbb
mov
xchg
mov
aaa
and
mov
push
shrb
pop
inc
ljmp
add
test
and
std
add
or
sub
mov
popf
jbe
call
or
push
cmp
in
test
out
cltd
xchg
mov
pop
fs
pop
shll
rclb
sub
fsubrl
aas
mov
jbe
push
inc
aas
add
lret
pop
mov
push
xchg
or
sub
cmc
sarb
pusha
or
shr
lock
mov
jmp
cltd
push
cmpsl
dec
addb
mov
fwait
lret
in
or
inc
or
mov
fadds
popf
cmpsl
out
repnz
push
idiv
or
xor
push
addb
rolb
inc
fistpll
dec
clc
icebp
or
adc
or
movl
ror
hlt
pop
add
sub
mov
inc
and
roll
std
mov
aam
outsl
add
test
push
add
add
push
dec
xchg
lods
jo
sbb
pop
xor
popa
sbb
mov
lds
mov
or
mov
add
or
xorb
inc
bound
fwait
aam
xchg
in
xchg
sbb
xlat
out
fsincos
add
scas
inc
mov
add
mov
or
add
jnp
cmp
cmp
movsb
add
inc
call
cld
pop
fst
sbb
mov
mov
sub
cli
add
xchg
sbb
push
add
push
shlb
pop
loopne
and
pop
in
sub
lahf
pop
clc
sbb
repnz
movsl
xchg
and
js
out
or
loop
mov
movsb
add
or
mov
adc
lock
js
xchg
leave
sbb
jnp
fdivp
mov
bound
pop
add
cltd
and
jbe
add
jmp
into
addl
xchg
jbe
std
out
repnz
stc
and
mov
fstl
fwait
jbe
pop
pusha
cmp
jo
cs
jno
adc
cmpsb
hlt
sub
js
insl
pusha
loop
cmp
ja
push
decb
inc
jbe
or
cmp
daa
adc
inc
in
imul
and
imul
add
and
sbb
rcrl
xchg
inc
xor
in
cmpsb
xchg
insb
test
pop
pusha
stc
rolb
or
fcoms
add
lret
xchg
mov
xchg
cmp
cmp
lods
loop
sbb
mov
cmpb
mov
add
jns
addr16
adcb
xor
and
data16
ud2
ljmp
test
pop
xchg
push
pop
inc
dec
jns
mov
add
push
mov
std
mov
adc
push
lea
dec
dec
in
inc
jo
stc
inc
js
add
jl
test
test
sbb
addr16
sub
pop
sarl
and
xchg
dec
ds
add
es
and
out
add
jne
sbb
adc
mov
mov
push
aas
pop
xor
jo
or
inc
inc
pmulhuw
inc
pop
ret
repnz
dec
lret
in
les
add
jo
or
sbb
ret
arpl
popf
mov
std
in
scas
jb
add
push
hlt
lret
sub
cmp
push
mov
nop
inc
xchg
add
cwtl
aas
add
jb
mov
cmc
loopne
mov
into
add
mov
push
push
stos
cwtl
test
imulb
inc
xchg
scas
in
test
inc
insb
jo
cmp
mov
out
push
and
popa
sub
cmp
jbe
xchg
subb
adc
sarb
xor
add
xor
loopne
outsb
test
neg
and
fdivrs
sti
mov
mov
xchg
mov
push
dec
fsubl
xchg
imul
sub
subb
sub
mov
fmuls
movsb
in
loopne
add
adc
mov
push
popa
mov
rcrb
in
mov
iret
test
pop
jno
inc
xchg
pop
sbb
and
mov
jo
pusha
mov
fwait
sbb
leave
ljmp
mov
xchg
or
addl
pop
bound
jp
cmp
sub
lret
jo
ftst
loopne
adc
adc
mov
cmpsl
add
int3
push
fidivrl
and
push
cli
aaa
add
repnz
rolb
ja
mov
add
push
xchg
sbb
outsl
aas
es
cld
lock
out
adc
stos
pop
fimull
mov
and
and
call
sahf
and
stos
add
fisttpl
test
add
outsl
loop
mov
pusha
testl
xchg
jmp
std
add
movsb
fwait
mov
iret
aad
popf
and
aas
movsl
cmp
jmp
pop
xor
add
cmp
xchg
sbb
pusha
jmp
mov
nop
dec
xor
xlat
into
or
xor
f2xm1
outsl
push
inc
xor
add
adc
int3
jge
incb
lret
out
ds
cmp
dec
inc
mov
popa
sub
dec
addr16
xlat
shrb
push
add
cld
mov
jbe
and
pop
sub
push
inc
fstl
aad
hlt
addb
fdivrl
add
gs
mov
push
push
inc
lahf
mov
arpl
sbb
mov
push
dec
das
cmpsb
and
sub
es
repnz
call
sbb
jmp
call
xor
adc
jns
xor
fldenv
pushf
popa
setb
and
add
notb
add
movsl
mov
push
or
aas
sub
cmp
fwait
popf
rorb
mov
sbb
push
sbbl
mov
gs
ds
fistpll
aas
inc
into
push
lods
add
or
inc
lahf
test
cmp
iret
inc
fmuls
mov
dec
adc
cli
dec
sub
insl
mov
fwait
rorb
adc
ds
push
mov
adc
lahf
or
stos
dec
cmp
outsl
sub
ret
inc
lret
and
sahf
cmp
arpl
jne
les
das
fiaddl
int3
add
mov
mov
pop
push
cli
adcb
cmp
lods
fnstsw
in
inc
xor
push
xor
push
mov
sub
mov
add
in
or
scas
and
push
cmc
aam
add
ret
imul
push
iret
rcrl
lret
testl
cmp
dec
rcrb
mov
push
mov
xchg
ja
dec
cmc
movsb
dec
rolb
inc
or
jnp
sbb
add
out
pop
data16
add
arpl
jl
cmc
xor
pop
inc
adcl
adc
or
cld
cmp
das
imul
push
add
shlb
mov
ret
lock
pop
addr16
popa
outsl
push
fildl
or
into
repz
or
inc
sbb
cld
add
fistl
sub
pop
sbb
sbb
shll
ds
or
in
lcall
jecxz
nop/reserved
daa
loopne
jb
adc
sbb
out
dec
cmp
gs
aad
out
dec
loopne
lods
jmp
xchg
std
xchg
inc
hlt
add
andb
aam
stos
jle
jo
pop
loopne
stc
clc
repnz
dec
add
jnp
adc
sbb
ss
mov
loope
mov
aam
xorb
pop
clc
pop
xchg
int3
add
rclb
mov
cmp
push
adc
addl
jl
xchg
movsb
add
shlb
repnz
adcb
in
sbbb
fistpl
add
sub
hlt
mov
cmp
aam
and
in
xor
andb
sbb
and
push
shlb
adc
pop
inc
pusha
cmp
mov
jmp
fwait
push
aaa
loope
jb
sub
ss
push
or
cmp
jo
adcb
or
mov
clc
mov
or
and
sub
inc
lds
inc
ljmp
loop
push
lea
xor
fstpt
inc
push
jg
cmp
jae
add
sub
mov
or
add
or
xchg
cwtl
outsb
adc
ret
loopne
pop
pop
add
bound
in
mov
push
mov
lret
je
shlb
aaa
and
xor
insb
add
push
insl
mov
dec
dec
inc
add
mov
sti
lea
pop
insb
xorb
dec
lods
sti
and
jecxz
idivl
sbb
pop
sub
add
cmp
rolb
push
push
int3
sbb
pop
mov
es
loopne
mov
xchg
jnp
jae
or
sbb
sbb
aas
shl
mov
cmp
xchg
adc
movb
adc
add
and
inc
push
pop
add
push
addr16
dec
fsubrl
pop
add
or
sbb
mov
cmp
dec
jnp
jo
cwtl
pusha
fstl
add
jp
push
sbb
lahf
dec
mov
psrad
mov
in
dec
or
xor
dec
fsubrp
lldt
nop
mov
in
sbb
or
mov
test
pop
xor
gs
mov
mov
pusha
and
setp
in
movsb
xchg
add
inc
sbb
xchg
xor
add
in
push
mov
jne
mov
call
out
sti
in
sbb
push
mov
cmp
clc
jbe
into
push
add
scas
fs
shl
xchg
xor
sub
pop
inc
inc
hlt
mov
add
popf
je
sti
jl
add
jae
out
cs
or
add
mov
adc
loope
or
outsb
nop
sbb
cmp
cmp
add
add
push
or
pop
xchg
fsts
cmp
or
xchg
or
ljmp
imul
lock
pop
in
pusha
sarb
inc
adc
pop
shlb
mov
mov
push
and
add
inc
or
and
sbb
scas
enter
les
clc
rorb
or
loop
outsl
pop
pushf
dec
roll
mov
add
push
jns
mov
cmovb
filds
div
xor
mov
or
add
dec
scas
addr16
add
pushf
sbb
add
or
shrb
add
scas
nop
and
sarb
sbb
sub
fisttpl
shl
pop
xor
out
fdivs
scas
faddl
inc
jae
add
in
out
popa
ficomps
sti
pop
pop
repz
jne
or
iret
cmpsb
int3
add
jg
xchg
add
cwtl
inc
mov
or
xor
js
jp
das
add
ss
sbb
mov
add
mov
jmp
pop
xor
or
pop
loopne
push
pop
mov
and
cmp
add
popa
movsl
jecxz
or
dec
sbb
or
and
xor
push
lea
and
jp
div
sbb
and
stc
fisubrl
gs
imul
lock
inc
fimull
cmovle
add
addb
sub
insl
rcl
imul
or
cmpl
sarl
stc
add
addr16
jmp
cmp
popl
out
das
push
and
cmp
sbb
inc
sbb
mov
in
test
rorl
push
into
and
mov
fdivl
fwait
dec
add
test
add
dec
cmp
jmp
popl
jle
cmpb
push
pop
xor
outsl
mov
inc
pusha
fiaddl
or
mov
add
inc
shl
and
jmp
fwait
mov
dec
aas
inc
subb
test
push
stos
jge
xchg
or
fildl
fistps
pop
repz
and
add
or
adc
int3
push
inc
mov
sahf
scas
add
mov
mov
mov
pusha
pop
cmpb
inc
cmp
out
add
or
and
mov
lret
aaa
cltd
pusha
sbb
add
aaa
inc
jecxz
sti
stc
subb
and
inc
mov
add
mov
push
mov
xchg
sub
sbb
out
ss
imul
add
enter
cmp
adc
aas
sbbl
mov
testl
adc
mov
fwait
js
cmp
pop
leave
iret
add
mov
add
push
mov
arpl
lss
push
popa
cld
jle
repnz
and
js
fs
lret
add
jl,pt
sub
inc
or
lock
mul
add
pop
sub
cmp
fadds
jle
add
outsl
and
xor
inc
pop
pop
movsb
leave
fimull
lds
dec
inc
cmpsl
clc
sbb
test
mov
jne
add
jle
fsubs
repnz
mov
mov
and
pusha
pop
sbb
movsl
shll
into
subb
aam
loop
testl
mov
insb
loopne
shlb
add
movsl
pop
pop
ret
xchg
dec
lock
inc
rcrb
call
mov
test
inc
aaa
xor
daa
stos
sahf
mov
sbb
out
mov
mov
add
xchg
dec
loope
mov
leave
nop
pop
ljmp
pop
jns
shlb
ss
std
xor
inc
sbb
repnz
xchg
rolb
int3
fsubl
in
div
lods
pxor
scas
clc
or
add
sub
add
dec
pushf
orb
repz
dec
push
xor
pop
sbb
add
mov
cmp
adc
adc
sbb
jg
fsubrs
mov
add
lret
and
push
mov
stos
dec
call
pop
lods
adc
lea
or
dec
fmull
add
div
lods
pushl
and
fcmovnb
testb
lret
lcall
jns
cmpsb
sub
fdivl
mov
push
popl
xchg
cmpsb
addr16
faddl
lods
movsl
add
or
or
inc
or
lock
sbb
les
push
in
sub
pusha
pusha
xchg
sbb
xor
add
and
cmp
les
jg
fwait
push
adc
std
insl
jb
add
jmp
repnz
cmp
mov
aad
movsb
or
mov
loopne
cld
or
sti
cltd
lcall
out
fstpl
xchg
mov
cmpsl
and
jge
sbb
inc
xchg
add
pop
idivl
push
xor
xchg
add
sbb
push
cmp
sbb
cwtl
add
out
ds
ret
jmp
ficompl
xor
jmp
mov
jl
aas
loope
inc
nop
stos
test
outsb
pop
mov
mov
push
cli
add
int
shlb
xor
sti
push
imul
add
mov
rorb
push
xchg
sbb
sbb
repnz
xor
shlb
lods
cmp
add
or
jno
add
repnz
hlt
loopne
add
pop
xor
xchg
cmpb
mov
stc
dec
pop
into
dec
mov
dec
jecxz
je
add
out
addr16
push
mov
adc
add
sub
je
sbb
into
call
int
dec
inc
push
data16
in
xchg
mov
push
fwait
pop
lods
add
test
sarl
push
into
pop
jne
notl
mov
mov
and
mov
push
stc
cmp
xor
orb
jbe
ret
repnz
loopne
icebp
pop
xchg
inc
addr16
add
dec
mov
test
out
jne
add
inc
sbb
iret
cmp
addb
outsb
cmc
ljmp
push
mov
cmp
or
jnp
cld
pop
pop
fstp
pusha
loopne
xor
pop
jge
and
mov
pop
jmp
jecxz
add
loop
testl
mov
imul
add
out
jle
orb
mov
gs
loope
sbb
add
jns
shr
nop
add
in
jg
xchg
sub
jmp
add
std
addr16
dec
call
divl
pop
int3
sbb
mov
add
xchg
adc
nop
add
movsl
out
cli
jns
roll
out
add
or
sti
lock
xor
mov
xchg
mov
fsubl
loopne
mov
ds
adc
rcr
adc
out
sbb
sub
add
sbb
fists
cwtl
or
xchg
push
pop
xor
shlb
push
jmp
rclb
ret
shr
cli
lret
arpl
js
xor
sbb
push
in
sbb
nop
inc
xchg
or
sbb
mov
push
std
or
in
dec
xchg
dec
arpl
or
mov
sub
push
hlt
pop
push
pushf
js
pop
repnz
and
jp
out
test
out
rorb
in
jp
repz
sub
ss
inc
push
adc
add
clc
nop
movsl
lea
outsl
push
adc
insb
mov
and
filds
imul
jge
in
add
push
jns
mov
loopne
push
repnz
lret
and
mov
push
add
shl
mov
add
mov
addb
addb
aaa
adc
pop
loopne
mov
cmc
xchg
push
xlat
nop
mov
dec
sub
sub
add
xorb
jg
jo
add
mov
push
push
mov
outsl
jns
lahf
movsb
add
out
adc
lds
sbb
xchg
push
jno
inc
add
and
outsl
pop
mov
aas
push
xorl
pop
adc
dec
push
add
ds
adcl
fcomps
inc
lahf
fcomps
sbb
inc
add
and
popa
imul
jg
int3
lret
roll
repnz
jns
out
test
stos
cmp
daa
aaa
add
or
cmp
fmul
loopne
xchg
sub
fdivrl
push
rorl
jb
push
arpl
xlat
sti
sub
cmp
rol
jmp
add
xor
ss
push
mov
bound
mov
add
cltd
inc
and
sbbb
xchg
dec
jno
pop
xor
jne
adc
in
sub
in
mov
lds
jl
add
jp
mov
popa
cmpsb
pop
ret
jnp
xor
sar
add
inc
mov
sub
ja
push
cltd
mov
cmpsl
js
xchg
xlat
add
add
adc
inc
bound
jnp
data16
hlt
or
movsl
in
cmpsl
fs
fnstenv
mov
adc
sub
add
std
mov
lahf
or
hlt
sbb
and
mov
sub
cltd
icebp
add
or
xchg
roll
or
jae
add
adc
jle
add
out
push
add
cmp
ret
mov
jmp
sbb
fwait
jbe
repnz
sub
imul
dec
push
call
or
int3
fidivrl
adc
push
shlb
jb
add
inc
int3
sub
pop
or
adc
pop
mov
je
test
cmpl
pusha
test
sarl
in
sbb
inc
adc
jg
mov
test
into
add
pop
scas
cmc
add
nop
cmpsb
xor
mov
insb
push
rclb
push
cwtl
jmp
loop
mov
or
xor
andl
pop
ja
js
lods
sti
or
aam
xlat
cltd
adc
ds
mov
add
mov
cld
idivl
mov
adc
add
andb
push
add
shrb
add
in
pop
jb
rcrb
aad
add
pushf
inc
addl
sbb
cwtl
pop
pop
rcrl
mov
jns
movsl
addb
lahf
clc
pop
sbb
cmpb
in
sarb
xchg
add
adc
adc
inc
les
sub
roll
sbb
in
cltd
decl
push
inc
outsl
add
mov
dec
out
sub
lahf
lret
mov
sub
in
jg
mov
out
hlt
dec
mov
jnp
add
adc
ficompl
mov
cld
lret
pcmpeqw
mov
mov
testl
xchg
or
not
mov
push
stos
int
pop
ja
pop
add
add
popl
movb
mov
or
pop
mov
mov
fnstenv
add
iret
push
bound
xor
push
adc
sub
add
cmp
sbb
xchg
mov
in
add
jmp
je
mov
add
jae
call
inc
adc
mov
add
cmp
out
mov
xor
insl
scas
add
push
xor
pop
popa
adcl
add
inc
or
jno
xchg
mov
pop
pop
push
and
hlt
pushf
cld
pusha
add
pop
adc
test
cwtl
xchg
adc
mov
inc
dec
test
out
imul
add
mov
mov
xchg
inc
xchg
push
adc
test
inc
pushf
or
in
in
sub
add
push
and
add
fisubrl
add
cwtl
fdivp
int3
testb
jecxz
out
aam
enter
pop
or
cwtl
call
add
lods
into
inc
sbb
int
add
and
inc
cli
loopne
or
add
add
push
mov
add
xor
mov
dec
add
cmp
mov
loope
repnz
idiv
les
dec
pop
mov
or
add
ss
add
insb
and
loop
sbb
movsb
in
ret
sarb
xchg
pushf
mov
out
mov
mov
push
add
mov
add
hlt
outsl
mov
jmp
add
sub
add
jge
xchg
aas
stc
mov
dec
jb
aam
ret
lcall
rcrl
xor
or
popa
lock
push
xchg
add
push
inc
mov
sbb
pop
out
data16
pop
or
cmpsb
pop
add
mov
sub
pop
lret
js
sub
xor
lods
add
repz
adc
cs
add
pop
popf
adc
cld
or
inc
push
jle
rolb
jge
lcall
pusha
cmp
inc
mov
cmp
sarb
add
icebp
je,pt
sub
xchg
adcb
xor
add
push
push
xorb
dec
jmp
add
pop
les
fsubrl
inc
cmp
xor
sub
in
adc
rclb
add
imul
imul
mov
lods
pop
cld
mov
test
ds
cmpsb
out
inc
push
lock
add
subl
les
pop
sbb
out
hlt
fcompl
add
cmpsb
sbb
jae
fldl
rcrb
push
xchg
insl
fildl
int3
jnp
cmp
inc
loope
pop
add
push
add
inc
popa
clc
mov
stc
shl
cmp
fmuls
fldcw
test
rorb
inc
push
or
jmp
mov
dec
push
cmp
dec
js
loope
in
mov
sbb
adc
rcr
xor
mov
cmp
adc
fistps
mov
pop
add
ljmp
pop
pop
aas
les
add
jns
in
jp
jg
add
mov
and
incb
or
insl
pop
in
sbbl
insl
subb
lahf
mov
andb
mov
xor
popf
in
sar
add
inc
in
mov
bnd
push
popa
xchg
and
ds
imul
les
dec
add
mov
push
add
push
or
roll
xchg
push
loopne
xor
and
xor
and
pop
pushf
push
adc
pop
addr16
insl
and
jmp
mov
addr16
data16
dec
imul
mov
add
push
stos
jo
mov
push
cmp
mov
mov
xor
test
clc
stos
push
cmp
jmp
sub
out
fcmovb
std
mov
fsubrs
fisubs
inc
outsl
mulb
in
hlt
lock
inc
js
mov
mov
lcall
fiadds
ss
mov
sahf
add
xchg
add
xor
push
push
add
shll
pop
outsb
dec
lret
pop
mov
add
iret
fdivrl
pop
mov
push
add
aad
fsubr
add
sahf
push
jl
sub
scas
shrl
pop
data16
sbb
add
pop
outsb
or
jl
jp
sahf
push
stos
jecxz
xchg
aaa
ss
add
xchg
mov
mov
fnstcw
test
mov
xor
or
loopne
add
sub
shlb
lcall
jne
add
rcll
mov
mov
fadds
jmp
add
or
add
inc
add
pop
les
add
pop
sbb
fcmovnb
sahf
mov
dec
cmp
add
pop
jne
imul
mov
add
sti
orps
dec
jo
xchg
xchg
cwtl
mov
adc
cltd
lods
sbb
mov
daa
dec
sbb
subl
int3
lret
add
push
add
mov
daa
out
push
mov
ret
js
sbb
out
sub
sbb
pop
and
or
cmc
add
inc
mov
fdivr
loopne
daa
rorl
mov
and
cwtl
jno
movsl
mov
xor
push
pop
imul
fists
fiadds
pop
jle
mov
shll
iret
pop
outsl
lock
in
mov
adc
std
sbb
jae
add
mov
movl
xor
inc
add
xchg
dec
sarl
push
rolb
dec
shll
add
jp
cltd
mov
push
mov
mov
movsb
and
fnstsw
aas
pmaddwd
outsl
xchg
out
imul
enter
dec
mov
cmp
cmpb
sbbb
aaa
cli
xchg
clc
mov
cwtl
add
and
je
mov
pusha
or
dec
cwtl
fs
add
cmpl
jo
mov
movsb
jg
shlb
cwtl
add
gs
xchg
cmp
inc
mov
xchg
add
mov
jo
incb
dec
ja
bound
push
mov
dec
jge
dec
pop
jne
pop
fbld
lods
punpcklbw
push
in
pushf
jae
inc
xadd
pop
inc
mov
add
lret
nop
jmp
ja
jg
sub
jle
clc
cmp
pop
add
arpl
sbbl
fs
add
in
sbb
movsb
setge
mov
mov
sahf
adc
pop
or
jmp
and
xchg
add
adc
jp
dec
xlat
add
enter
mov
xor
insb
fstps
and
outsb
imul
mov
xchg
js
sub
stos
enter
mov
and
stc
jne
out
imul
dec
dec
pusha
adc
imull
cmp
loope
test
out
mov
or
js
add
push
in
andl
mov
adc
aam
inc
pop
shrb
arpl
mov
pop
pop
xchg
in
imul
jecxz
arpl
ss
scas
lods
sbb
mov
inc
xchg
shl
add
jb
outsb
sbb
add
out
sbb
hlt
and
add
sub
and
pop
int
adc
xor
cmp
inc
inc
add
mov
sbb
push
ret
add
test
add
add
add
std
or
mov
ficoml
lret
cli
jne
xor
out
cltd
mov
pusha
arpl
add
cmp
add
add
aam
enter
cmp
movsl
add
iret
cltd
mov
and
out
mov
ret
xchg
and
ljmp
stc
add
push
push
add
dec
dec
ret
add
push
cs
popl
or
cmp
mov
cmp
sub
dec
add
fdiv
adc
insb
mov
fwait
add
push
arpl
push
fdivrl
and
int3
add
movsb
xor
icebp
add
loop
pop
and
add
fisttpl
inc
jmp
icebp
sbb
pop
clc
lcall
loop
and
nop
pop
xor
ds
dec
sti
enter
jge
jnp
outsb
xchg
pop
mov
and
sbb
jne
adc
inc
xchg
or
push
adc
or
repnz
ja
add
cmp
add
cli
adc
dec
inc
nop
mov
push
call
xchg
out
push
outsb
xlat
out
inc
pop
sbb
repz
rorb
dec
and
addb
aad
sub
pop
ret
inc
sti
push
add
dec
adc
sub
and
jae
lods
lcall
repnz
and
adc
lcall
int3
cmp
add
into
flds
pop
lods
pop
or
out
or
mov
inc
sub
stos
sbb
mov
xor
mov
mov
cmpsb
cmc
adc
test
mov
xorb
push
jne
add
ret
movsl
scas
sub
add
fnclex
int3
mov
fnstenv
xor
pop
pop
test
mov
mov
and
add
cld
bound
mov
xor
push
or
imul
cwtl
dec
insl
add
stc
pusha
jmp
jle
out
jo
and
add
iret
jne
or
add
push
push
lock
xchg
add
sub
dec
push
sbb
sub
iret
cmp
add
jb
test
inc
pusha
lret
jno
add
inc
sbbl
push
ror
cld
scas
mov
mov
adc
in
mov
add
aad
stos
movsl
inc
lock
and
test
repz
cmp
movsb
pop
pop
fisubrl
add
ja
int
mov
cmp
xor
xor
add
sti
adcl
pop
and
inc
pop
inc
or
push
sbb
add
cmpsl
inc
shlb
pop
cmpsb
jae
add
aam
mov
cld
cmp
xor
mov
cmpl
push
popw
jmp
inc
dec
fildl
cwtl
lods
pop
clc
lret
add
lret
pop
dec
xor
add
arpl
mov
lds
push
cmp
mov
mov
pop
test
das
adc
cmp
in
and
es
shll
andl
aaa
add
dec
add
push
leave
push
mov
jp
ret
cmpsb
cmp
lods
add
cmpsb
mov
xchg
int
xor
les
mov
scas
add
push
cmp
add
jmp
lock
out
sbb
push
in
xor
add
imul
in
and
add
test
mov
lcall
add
ss
add
or
add
jp
or
in
mov
dec
xchg
add
std
daa
or
add
and
mov
nop
push
cwtl
out
les
clts
xor
stc
cwtl
jo
aad
push
add
rcrl
add
mov
fadd
mov
sbb
stos
add
out
mov
pop
cmpb
add
mov
jl
out
into
mov
push
mov
cmpb
mov
cmp
cmp
fcos
in
enter
dec
sbb
repnz
xchg
stos
or
adc
xchg
out
in
sub
cwtl
or
or
in
push
push
xor
lea
pop
imul
add
dec
les
sbb
lods
repnz
pop
sahf
or
dec
sbb
inc
jo
scas
mov
mov
shll
insl
add
rcl
enter
add
mov
xor
inc
inc
sti
dec
mov
mov
shr
or
add
aas
movsb
add
pop
dec
loop
mov
lret
insb
or
adc
in
rcl
jo
dec
xor
dec
testb
sub
cwtl
sti
out
sbb
insb
lds
add
mov
in
mov
femms
cli
int
add
outsl
rcrl
jmp
rolb
cwtl
and
arpl
mov
clc
movsb
push
scas
inc
data16
mov
sub
sahf
inc
xchg
into
adc
pusha
add
iret
dec
cwtl
int
hlt
add
cli
pop
rclb
jecxz
jo
jle
aas
sub
or
push
cld
xor
push
sti
sub
in
jge
add
xchg
mov
sub
xchg
test
fsubl
loopne
xchg
add
leave
repz
add
add
adcb
adcb
hlt
popa
jp
add
mov
add
sbb
push
imul
gs
sub
adc
sbb
pop
out
addr16
add
or
gs
xor
adc
or
pop
flds
js
push
fidivl
or
daa
fmuls
dec
sbb
mov
mov
dec
loopne
pop
int3
lea
aad
lock
in
outsl
sbb
inc
xchg
std
mov
inc
jl
sub
pop
pop
push
cmp
rorb
jne
clc
mov
popf
sbb
loopne
ljmp
adc
jne
es
in
cmp
or
mov
add
subl
push
dec
push
add
mov
sub
add
stc
fcomp
pop
mov
ret
aam
mov
add
std
rcl
add
fnstcw
subb
push
ret
inc
adc
imul
pop
or
jo
and
test
fiadds
pop
add
loopne
mov
imul
icebp
push
call
js
nop
or
or
rol
cmpsb
sarl
add
cmpl
sbb
cmp
mov
clc
pushf
int3
or
aad
scas
adc
lret
pop
pop
mov
ljmp
testb
xorb
jae
add
js
add
cs
vunpcklpd
pop
mov
push
add
xchg
dec
rclb
rcrb
xchg
add
pop
xlat
cwtl
call
add
mov
mov
fwait
pop
insb
hlt
mov
add
fucom
movsb
push
push
mov
sbb
mov
jecxz
xor
pusha
sar
push
pop
fs
inc
pop
inc
pop
pop
sarl
lret
punpckldq
movsb
xor
inc
adc
adc
popa
add
mov
push
sub
in
mov
pop
push
dec
xor
sub
push
push
fsubl
ret
or
cs
inc
mov
aad
cli
cmpsl
subl
pop
add
fsubrl
mov
cmp
and
mov
aam
xlat
add
cmpsb
shl
in
scas
pop
or
mov
call
pop
add
mov
cli
out
je
cld
idivl
out
add
bound
out
aam
jg
daa
mov
fninit
add
cltd
sub
repz
dec
add
subl
cmpsl
cmp
gs
cltd
loopne
sub
inc
xorb
andnps
cli
test
out
jle
mov
add
call
in
xor
xchg
push
cmp
sub
inc
orb
insb
jle
or
daa
xchg
xchg
shll
mov
pop
sbb
movsb
shlb
into
pop
nop
dec
add
adc
shl
add
in
inc
mov
insl
or
add
aas
psrlw
inc
hlt
xor
out
int
mov
xor
xchg
jo
ret
add
movsl
or
int
add
shlb
adc
movsb
in
adc
fiaddl
cmp
pop
lea
jo
ds
popl
test
sbb
leave
xlat
or
cs
xchg
or
sbb
dec
or
sbb
mov
xor
push
jl
mov
test
mov
sbb
add
ds
and
rol
std
addr16
movb
ficoml
mov
ror
adc
mov
adc
xchg
js
cmp
or
pop
test
pop
push
stc
add
inc
in
mov
mov
lods
sub
adc
jae
add
outsb
inc
xor
xchg
gs
push
pop
push
add
fistl
nop
negb
in
jecxz
mov
push
sbb
dec
pop
in
inc
mov
in
iret
add
cmpsl
mov
adc
lock
add
test
test
pop
fldenv
addb
xchg
sbb
loop
mov
cmovp
mov
nop
mov
cs
xor
jg
jle
test
push
mov
fildl
fisubrs
sub
and
and
lret
push
movsl
hlt
pop
xchg
adc
cmp
stos
add
mov
incl
pop
fstpt
sub
repnz
clc
xchg
add
sub
push
push
lods
divl
add
daa
jg
gs
adc
inc
mov
sbb
lds
loope
cmc
or
and
nop
add
adc
mov
jo
pusha
cmpsb
ss
xchg
int
fimull
hlt
hlt
mov
fcmovnb
sbb
add
sub
test
rorl
cmp
mov
push
mov
xor
pusha
fildl
flds
jl
inc
test
scas
xchg
and
shrb
or
xchg
in
dec
xor
or
push
clc
les
mov
lock
jmp
or
insb
sub
sahf
jecxz
mov
psrlq
fdivr
dec
lods
fiaddl
mov
ret
mov
lea
repnz
sub
pop
adc
movsl
add
lock
fistpl
or
dec
andl
addr16
push
gs
fwait
jo
pop
ss
cwtl
sbb
ret
sub
out
xor
pop
add
ficoms
fistps
xchg
ret
in
push
cmp
pop
mov
xchg
xlat
and
jle
movl
je
add
or
mov
mov
aas
add
adc
in
aad
xchg
call
orl
addb
push
imul
out
lock
loope
sbbb
imul
adc
cmp
or
mov
and
pusha
and
ljmp
mov
adc
filds
mov
mov
leave
test
add
adc
scas
sbb
mov
cmp
mov
js
jp
lret
cmp
or
push
nop
mov
inc
add
insb
pop
fidivs
mov
add
xor
aam
lods
enter
es
mov
adc
mov
mov
popl
dec
mov
push
nop
out
rclb
jbe
sub
push
push
and
mov
movsl
adc
popa
dec
add
lahf
xchg
rolb
dec
dec
pop
fwait
in
or
out
int
shll
or
pop
and
pop
loope
ljmp
inc
pop
and
sbb
sbb
and
stc
or
mov
scas
loope
add
mov
mov
add
sbb
sbb
push
sbb
scas
add
cs
mov
stos
jnp
out
or
outsl
lahf
sbb
jno
mov
sub
mov
sbb
add
ds
enter
mov
stos
sub
insb
andb
xchg
movsl
xor
iret
add
xlat
mov
pop
mov
push
cmp
lock
popa
lret
and
in
lea
cli
push
sbb
adcl
sub
mov
jmp
pop
pop
xor
scas
nop
in
push
fistpl
aam
popl
and
pop
xorb
add
sbb
mov
stc
sub
sbb
push
cltd
in
adc
xor
jae
aaa
ds
dec
add
cmpsl
fldt
imul
add
push
mov
in
add
pop
ret
sbb
pop
sahf
add
std
fdivrs
inc
jp
mov
shlb
xor
pop
xchg
ljmp
pop
add
inc
cmp
or
out
add
cmp
xchg
rcrb
lock
clc
push
loop
or
xorb
imul
push
dec
add
sub
aad
div
sbbl
xor
fildl
cmp
jns
inc
testl
in
cmc
add
mov
add
test
jno
add
mov
test
mov
test
xchg
lods
add
mov
dec
add
bound
repz
je
sub
out
inc
sub
pop
dec
cmc
push
pop
ret
or
jmp
inc
dec
icebp
cmp
xlat
and
mov
incb
mov
shlb
add
pop
lock
and
push
addb
adc
adc
and
and
add
push
pop
pop
out
cli
outsl
add
xor
rorb
jbe
add
inc
add
pop
cmpsb
inc
jae
xchg
rorl
mov
out
ret
push
movsb
addr16
mov
add
mov
int3
push
jno
mov
pop
js
aam
add
pop
jmp
pushf
call
add
mov
cwtl
mov
fistpll
test
jge
add
scas
fwait
loop
shl
xorl
inc
fnstsw
inc
lock
data16
pusha
sbb
arpl
cwtl
xor
loopne
add
test
testb
insb
js
lret
lock
inc
aas
pop
mov
add
cmc
in
cmp
mov
or
jb
jno
loope
arpl
je
insb
add
xor
and
addr16
loopne
cmovne
add
cmp
cmp
iret
outsb
add
popf
rolb
or
xor
sti
cmp
fistpll
scas
add
fs
sbb
jae
push
sub
pop
mov
faddl
xchg
or
mov
rcll
iret
addr16
add
pop
js
aas
out
cmp
pop
popa
rcll
push
or
fwait
or
cmpb
sub
loopne
fdivrl
cmc
pop
add
pop
mov
pushf
jmp
mov
add
cmpsl
xchg
loopne
std
inc
je
adc
test
xlat
lret
ss
test
sbb
and
hlt
in
mov
push
in
test
pop
push
lock
mov
xor
cmp
sti
ficomps
fwait
icebp
jno
mov
sbb
xor
mov
dec
add
mov
mov
inc
pop
fisttps
jae
adc
push
addb
mov
lock
mov
add
popa
mov
add
jno
mov
mov
lock
testb
jbe
in
add
pop
arpl
add
mov
repnz
add
scas
sbb
mov
inc
aaa
hlt
and
out
cld
fxch
jns
nop
imul
mov
mov
push
pusha
push
aad
clc
sub
xor
add
cli
daa
pusha
cmpsb
add
xchg
xchg
xlat
repz
sbb
gs
std
jle
mov
movsb
rorl
xchg
mov
push
inc
add
mov
add
scas
fdiv
popa
mov
add
subb
fcomps
jmp
sbb
add
cld
insb
into
shlb
rcll
dec
add
sbbl
mov
jmp
add
add
mov
cli
mov
add
cltd
inc
addb
sbb
pop
movsb
cmpsl
mov
add
xor
imul
jg
add
or
pop
lods
fnstsw
sub
push
add
add
push
jle
cmp
test
xchg
dec
mov
inc
push
xchg
jno
pushf
out
loope
shll
add
mov
xor
lods
xlat
fcmovu
and
loopne
push
aaa
cmc
ja
loope
inc
pop
cs
xchg
fwait
int
lret
add
and
pop
loope
les
js
mov
int
fdivr
and
sbb
scas
insb
jae
cs
mov
arpl
test
mov
or
sbb
rcrl
push
add
inc
leave
addl
aam
pop
mov
mov
ds
lds
lahf
jl
or
jno
lret
cmp
imul
jb
inc
add
or
pop
pop
and
div
popa
aad
js
movsb
and
pop
cmp
imul
add
pop
dec
add
pop
pushf
lods
cmp
sbb
mov
into
xor
loop
push
jno
lds
js
rcrb
mov
push
clc
jo
js
mov
mov
jge
mov
or
and
xchg
push
xor
cmp
mov
and
ficoml
dec
or
or
out
mov
test
sahf
xchg
add
lods
scas
adcl
fcompl
ljmp
push
sub
outsb
aas
sahf
or
jge
fadds
lock
add
mov
fnsave
dec
mov
xchg
xchg
stc
stc
push
and
aam
jns
out
out
sbbl
repz
dec
loop
leave
call
arpl
sub
cwtl
xlat
add
movl
pop
jg
leave
add
adc
es
fs
add
adc
mov
xor
int
clc
ret
add
mov
mov
mov
xchg
lcall
pop
inc
or
pop
idivl
add
pop
les
add
pop
stos
mov
add
stos
push
and
pop
add
jo
insl
pusha
lods
pop
out
add
xchg
pop
lahf
sbb
dec
pop
push
fidivs
push
push
xchg
xor
pop
add
mov
pushf
aas
pop
pop
adc
mov
sub
xor
shlb
mov
pushf
sub
xorl
fildl
popf
mov
add
pop
or
mov
or
out
mov
cmc
jae
ficoms
add
or
sub
call
add
shrb
in
bound
add
js
insl
ret
iret
pop
mov
jecxz
lahf
mov
popf
push
ret
dec
bnd
push
leave
push
cs
jb
ss
je
fwait
out
gs
or
test
sub
enter
std
aaa
sub
aad
out
add
movsl
xchg
fisubs
popa
test
pop
hlt
outsl
or
mov
idivb
cwtl
inc
add
out
xchg
ret
movd
or
aaa
pop
subb
popl
hlt
arpl
add
add
jo
stos
mov
adc
pop
ja
sarl
mov
add
jle
in
dec
jnp
inc
lret
add
fwait
or
or
add
aaa
iret
inc
cmpsl
ret
add
inc
xor
cmp
add
inc
cmp
popf
int3
jle
cli
or
mov
inc
cmp
dec
std
jmp
dec
sbb
loop
add
mov
ret
add
push
adc
icebp
fdivrs
mov
cli
and
stos
hlt
imul
adc
rorl
or
mov
and
in
pushf
test
ficoms
jge
dec
pop
fdivrl
add
test
mov
or
aam
hlt
out
mov
dec
rcrl
das
add
icebp
push
mov
sub
lret
fdivs
mov
add
popf
cld
out
in
dec
testl
test
xor
mov
dec
aas
ror
pop
xchg
sub
inc
add
inc
sbb
adc
filds
jnp
dec
mov
pusha
mov
dec
mov
mov
fcoml
aas
in
push
add
mov
repz
ljmp
imul
push
mov
cmp
call
addb
sbb
add
les
pop
in
pop
bsr
jbe
aad
rolb
mov
add
into
jmp
dec
orb
add
loope
movsb
out
add
add
pop
pop
out
cmp
incl
ljmp
add
leave
or
or
loope
imul
cmp
and
in
mov
addb
imul
or
sbb
xor
loopne
mov
cwtl
ljmp
insl
push
inc
imul
add
sbb
xor
add
ror
ss
outsb
pop
adc
jnp
es
cwtl
lahf
push
test
xor
loopne
sub
cmp
and
pop
rclb
lods
shrl
push
test
test
aas
xchg
xor
out
jno
lock
test
ljmp
push
mov
out
dec
pop
lea
dec
cmp
cmp
add
sbb
pop
subb
out
add
fcompl
add
mov
imul
cwtl
addr16
les
clc
or
lods
inc
inc
add
sbbb
scas
imul
adc
das
inc
mov
cwtl
aam
mov
push
jecxz
adc
and
out
or
add
shr
fiadds
sub
xlat
movsl
add
mov
std
adc
push
add
sub
fcmovb
fbld
out
and
add
push
add
addr16
add
dec
fwait
and
add
mov
hlt
movsb
mov
mov
cmpsl
fists
add
dec
mov
inc
adc
hlt
addl
sub
out
bound
add
push
insl
in
pushf
data16
hlt
add
out
imul
lret
rcr
test
out
movb
cs
pop
sbb
jo
fldl
inc
pop
cltd
or
icebp
popa
divl
sbb
xchg
inc
add
jae,pn
jle
jl
push
xchg
pop
mov
sarb
scas
xchg
add
pop
adc
jb
cmp
xor
int3
add
cmp
add
jns
lldt
pop
cmc
or
and
or
cs
mov
push
pop
pushf
incl
ret
pop
push
mov
in
pop
sbb
pop
adc
push
sbb
dec
jge
pop
mov
scas
mov
into
push
add
rclb
mov
jg
cmp
pop
sbb
enter
xchg
inc
andl
test
push
insb
lods
add
js
push
mov
xor
sub
rcrb
js
aad
xlat
rcr
lods
pop
cltd
fdivrs
pop
add
adc
add
mov
jb
cmp
xchg
pop
sahf
add
subb
mov
dec
jle,pt
add
dec
popa
cwtl
add
inc
sub
xchg
xor
xchg
adc
gs
push
pusha
rorb
shlb
mov
repz
pop
inc
ds
pop
out
push
xor
push
mul
push
mov
fdivrl
add
out
leave
mov
in
add
int3
mov
adc
jl
adc
rcr
sub
out
ret
lcall
mov
mov
cmp
xchg
ds
and
jb
cltd
push
andb
sbb
push
add
insl
ja
out
rcrb
mov
mov
movsl
xor
sub
lret
bnd
mov
cmp
jae
gs
xor
imul
add
dec
adc
lds
dec
repnz
cld
stc
or
adc
arpl
pop
add
push
popa
sbb
or
xor
inc
inc
mov
fldcw
lret
test
rcrb
xchg
add
and
dec
jnp
dec
nop
sbb
mov
adc
pop
push
xlat
repz
or
xchg
and
mov
mov
shrb
ret
scas
int
pusha
add
out
loope
sub
sbb
fdivrs
adc
cmpsb
pop
scas
dec
div
ja
adc
mov
mov
pusha
inc
je
popa
xlat
inc
mov
rolb
mov
xchg
mov
add
dec
push
xchg
loopne
add
aam
jl
ljmp
lcall
add
xchg
adc
notl
popl
xor
push
xchg
nop
in
add
mov
add
add
jnp
popa
dec
push
fldl
out
dec
insl
in
dec
in
push
enter
pop
xlat
add
in
movsl
mov
xchg
add
cmpsl
fdiv
add
jp
mov
in
jbe
pop
repnz
rolb
xchg
lahf
idivb
adc
or
jb
add
call
cmp
jnp
mov
scas
mov
add
xchg
dec
jl
adc
adc
mov
adc
mov
out
inc
xchg
xor
clc
mov
jne
in
mov
add
in
jb
or
arpl
rcrl
repz
adc
or
in
jae
aam
mov
xchg
sub
adcl
enter
mov
mov
jb
fs
mov
lods
push
rol
clc
dec
add
xchg
mov
sub
fs
aam
call
pop
lods
clc
mov
emms
or
inc
adc
or
cmp
or
mov
cmp
test
inc
pushf
push
xchg
jle
stc
fwait
sbb
mov
cmpsl
jnp
sti
fwait
xchg
pop
jnp
add
ss
mov
movsb
repz
lock
pop
mov
ss
mov
add
nop
xchg
add
inc
arpl
jmp
mov
inc
clc
mov
cmc
fldl
sbb
fldt
stos
orb
add
push
loope
rol
repz
pop
and
add
jmp
rorb
clc
add
mov
js
add
or
test
mov
sub
xor
add
sbb
inc
ds
sub
cmp
in
sub
cs
mov
ret
push
cmpsb
sarb
cmp
lea
adc
cmpsl
subb
lods
push
cmp
test
jno
call
shlb
in
add
jbe
pop
cmp
jnp
cmp
dec
add
sbb
mov
imul
xchg
stc
mov
pusha
repnz
mov
pop
out
xchg
ljmp
xchg
xchg
xchg
add
out
inc
rcll
dec
fdivr
mov
add
add
ljmp
fcmovbe
sub
rcrb
inc
add
in
movsb
out
sbb
add
sub
hlt
xchg
add
repz
sbbl
xor
push
pop
rolb
xor
mov
and
push
push
icebp
mov
test
pop
pop
adc
cltd
dec
out
pushf
icebp
jecxz
sbb
insl
xchg
clc
mov
xor
clc
fdivrl
mov
pop
jo
pop
xchg
push
mov
jp
popa
or
and
shlb
add
add
add
cmpsl
inc
orb
cli
cld
sub
pop
push
xchg
outsb
fs
jns
cmp
adc
ficoml
and
jmp
in
pop
rolb
and
in
push
popf
xor
add
pop
sbbb
fptan
mov
jl
jne
adc
mov
jp
pushf
scas
and
jecxz
mov
pop
mov
adc
mov
punpckldq
and
mov
dec
in
enter
sbb
sbb
add
dec
mov
adc
jl
push
mov
xor
xor
add
popf
decb
mov
ds
add
xor
rcrb
hlt
lahf
jl
or
jns
sub
push
loopne
ljmp
xor
pop
push
js
pop
inc
les
mov
jnp
jmp
cmpsb
inc
int3
ljmp
jae
or
in
and
das
dec
les
mov
es
or
pop
push
mov
mov
cmp
inc
insb
add
sbb
or
add
xchg
sub
sti
xchg
add
imul
mov
int
or
pop
xor
add
sub
mov
fwait
sbb
ss
mov
dec
and
rcrb
mov
in
int3
or
cli
jle
test
add
les
add
outsl
mov
and
mov
mov
add
fnstsw
inc
cwtl
rolb
and
sbb
lods
sub
pop
pop
shlb
icebp
jg
add
sub
push
insb
inc
xor
orl
dec
jp
scas
js
mov
test
push
sbb
pop
aas
ret
add
sub
xchg
push
xor
xlat
lock
popf
in
fmull
sbb
push
test
xchg
hlt
dec
sbb
lock
out
pop
mov
in
xor
jp
dec
sub
pop
test
push
cs
dec
les
test
je
fwait
xorb
push
mov
loope
or
cli
out
dec
xor
loopne
movsl
xchg
and
push
pusha
adc
outsl
nop
je
popa
fcompl
and
mov
add
xor
push
fnsave
add
mov
adc
ss
dec
sub
sub
or
mov
std
mov
push
lahf
cltd
xor
push
enter
movsb
push
bound
in
pop
out
push
pop
shrb
dec
in
mov
xor
and
push
sub
pop
adc
xchg
popa
stos
pushf
ljmp
add
jae
mov
das
in
xchg
test
aad
pop
mov
jne
gs
enter
adc
push
test
testb
clc
xchg
rcrl
and
mov
icebp
into
bound
loop
xor
aad
mov
mov
add
cltd
and
scas
in
out
out
mov
lock
les
lret
jno
pusha
dec
add
xchg
add
inc
xchg
imul
sbb
jno
add
mov
lods
add
adc
imul
push
add
dec
leave
push
xchg
pop
add
or
mov
sub
orb
jnp
leave
out
mov
xchg
data16
lds
mov
sub
xchg
jge
and
mov
dec
cmpl
mov
dec
add
popa
int3
and
cltd
call
pushf
mov
add
imul
jmp
mov
cmp
andb
fdivl
cli
add
jecxz
out
xchg
loopne
sub
loope
std
push
push
fiaddl
xchg
push
insb
jecxz
stos
pop
and
xchg
jo
out
sarb
pop
ja
cmp
xor
pop
add
testl
in
test
pop
or
ret
sub
mov
jbe
add
in
je
popf
adc
adcb
inc
mov
and
loope
add
fisttpll
and
ror
pusha
mov
add
jo
pushl
sahf
sti
sbb
mov
aas
add
ljmp
push
pop
scas
push
xor
das
add
mov
inc
pop
pop
hlt
daa
pop
xchg
loopne
pop
or
fsubrp
mov
les
into
out
adc
sbb
ss
ljmp
pop
jno
add
jb
fildll
xchg
dec
mov
dec
jp
movsb
xor
pop
mov
jo
bnd
add
xchg
adc
or
ret
add
lods
cmp
cmpsb
add
insb
dec
lock
add
and
add
rcrb
rcrl
add
les
arpl
cmp
add
push
and
mov
loopne
push
imul
cltd
out
sahf
cld
add
and
add
jle
ljmp
mov
sbb
add
out
pop
in
cld
xor
data16
and
and
or
add
lds
add
sub
iret
add
fcom
rorl
push
pop
jo
add
je
stos
and
jb
mov
stc
add
sub
inc
jl
xchg
mov
cld
or
dec
inc
rolb
jns
add
dec
insb
push
dec
add
jmp
push
insl
call
scas
test
pop
add
pop
clc
adc
fsubl
adc
dec
push
movsl
mov
mov
mov
add
mov
int3
mov
in
fldlg2
pop
insl
xchg
inc
add
xchg
xor
push
pushf
xchg
testb
and
adc
add
pop
stc
iret
pop
filds
xor
mov
je
ja
sbb
movsb
xchg
sbb
add
ret
inc
repz
jbe
rolb
xor
jmp
mov
lods
jns
jl
jno
add
mov
enter
pop
jecxz
int3
and
iret
and
push
mov
mov
xchg
cld
add
inc
jl
setb
in
popa
pop
sbb
xor
add
cmpsb
mov
xor
push
ja
push
cmpsl
stc
inc
fistps
sarb
push
add
inc
mov
icebp
mov
add
jb
fstl
mov
ret
cmp
mov
pusha
outsb
mov
fcom
testl
test
dec
popa
sbb
aad
mov
mov
fsubs
push
cmp
loope
add
xorb
sbb
xchg
sets
jecxz
sub
dec
sbb
pop
xor
ret
mov
cmpsl
test
mov
add
mov
jl
add
lds
add
sbb
dec
int
jne
add
out
rolb
xchg
mov
ljmp
gs
push
cmp
cmp
or
and
neg
add
lods
lea
jae
add
or
sbb
sti
xchg
add
sub
and
sahf
jbe
or
into
push
rcrb
enter
add
movsl
shlb
jl
or
mov
cld
xor
and
mov
and
jo
adc
mov
adc
or
bnd
shll
and
pop
mov
fisttpll
or
insb
add
sahf
int3
ret
pushf
mov
jne
int3
and
mov
mov
outsl
test
add
mov
mov
push
mov
fucom
mov
movsb
add
cmp
lds
or
mov
inc
pop
lock
pop
pop
lahf
icebp
xchg
pop
repnz
adc
mov
orl
cmp
push
add
push
or
lock
in
add
cmp
push
sarb
add
loop
arpl
or
dec
pop
test
sarb
iret
sub
std
das
pop
pop
loopne
mov
dec
insl
add
push
mov
add
int3
and
add
pop
push
outsb
or
test
rcr
pop
out
add
sub
jmp
insl
shlb
adc
push
and
lahf
push
and
adc
pop
add
js
inc
test
push
jnp
in
cltd
cmp
push
out
test
cmp
or
add
test
add
dec
dec
out
mov
add
push
ss
dec
add
outsb
or
mov
jb
out
out
sbbl
in
add
lods
popf
push
shll
clc
xor
adc
int
sbb
ret
pop
imul
mov
movb
iret
jo
lods
rcr
jle
into
rcl
lcall
notb
cmp
mov
add
or
pusha
fs
xchg
adc
out
enter
jg
add
lods
pop
popf
push
mov
cwtl
inc
lock
pop
sahf
jae
inc
outsl
clc
dec
pushf
in
rolb
movsl
push
out
lahf
add
ds
icebp
dec
ljmp
hlt
loopne
rolb
add
xchg
push
ret
xor
mov
cltd
push
dec
arpl
mov
pop
fs
pop
pop
xlat
cmp
or
add
adc
and
lds
mov
add
add
fiadds
int3
pop
nop
ljmp
cmp
fldenv
or
push
daa
push
aaa
mov
add
sbb
std
mov
push
hlt
pusha
ds
adc
notb
ljmp
stos
aam
push
loop
add
stos
mov
int
cmp
add
adc
add
adc
test
add
adc
into
xor
rorb
add
pop
gs
adc
cld
add
lds
or
add
and
pop
jnp
inc
add
dec
sbb
lea
jle
add
or
addr16
add
ret
in
fstps
or
push
dec
inc
jo
add
mov
inc
outsb
xlat
dec
mov
outsl
popf
xchg
xchg
or
clc
adc
xor
jne
out
mov
lds
das
xor
daa
aas
xorb
jbe
es
stos
jp
and
bnd
add
std
add
cmp
fldt
imul
sbb
insb
push
push
pop
xchg
inc
dec
xor
lock
pop
jg
and
jmp
dec
cmp
outsb
je
cmp
orb
jne
pop
aaa
add
loope
add
mov
faddl
or
inc
pop
push
jb
add
add
adc
cmc
add
xchg
data16
scas
in
in
lds
int
mov
popf
push
das
cmp
adc
inc
out
int
test
pop
sbb
cmc
sbb
and
and
test
roll
cmp
push
mov
mov
xchg
mov
dec
xchg
mov
or
fimull
add
sub
jbe
or
jo
out
fadd
push
ret
pop
cmp
stos
xchg
add
pop
cmpsb
pusha
sbb
es
bound
jle
or
loope
inc
pusha
adc
lods
inc
or
fwait
dec
add
int3
or
out
call
lock
mov
mov
add
adc
dec
repnz
ret
lock
xchg
adc
lret
inc
sub
adc
pop
and
leave
sbb
dec
int3
push
inc
add
imul
inc
pop
fadds
and
xchg
je
jns
out
push
xchg
in
pcmpeqd
pop
cli
mov
out
hlt
ja
add
imul
ss
push
add
cmp
sbb
rclb
and
or
cwtl
add
inc
xor
addl
push
pop
push
rorl
adc
sub
add
mov
add
iret
outsb
in
add
aad
test
dec
hlt
mov
cwtl
mov
pop
jbe
xor
fbld
mov
pushf
mov
fildl
sahf
arpl
lret
stc
add
test
xor
push
fwait
cmp
jne
sbb
rorb
ror
pop
inc
fadds
jo
mov
inc
stc
add
out
int3
or
mov
in
nop
mov
inc
xchg
add
jae
movb
xchg
dec
jmp
add
mov
lahf
pop
leave
add
lcall
add
mov
mov
pushf
lea
stos
xlat
add
aas
push
cmp
daa
jmp
outsl
add
mov
sbb
push
and
outsl
lock
addl
xor
and
add
sbb
sbb
repnz
ss
inc
in
adc
xchg
pop
inc
loopne
and
cmpsb
in
pushf
arpl
outsb
jle
movsl
roll
iret
inc
dec
dec
icebp
push
mov
mov
rclb
pop
xchg
out
or
sbb
arpl
rorb
lret
sub
lock
cmp
pop
pop
cli
das
sti
cmp
cmpb
mov
and
bound
pop
incb
ja
push
shll
lods
mov
out
movsb
mov
mov
loopne
jp
jecxz
hlt
pop
jge
add
cli
xlat
lock
btrl
ljmp
adc
aaa
mov
cmc
loope
mov
pop
add
mov
inc
sub
xor
aas
fwait
sub
pop
xchg
gs
sub
jne
sub
xor
jns
push
jg
hlt
add
adc
out
add
loopne
cmp
andb
insl
add
lret
leave
shrb
xchg
push
and
subb
dec
sbb
in
pushf
aaa
dec
pusha
mov
mov
or
xor
add
adc
das
sbb
rol
sub
psubsw
cmpl
add
inc
xchg
in
ficoms
jle
add
repnz
push
stc
jno
bound
and
mov
das
outsb
pand
dec
xchg
ljmp
cmp
add
dec
mov
icebp
push
mov
adc
push
mov
out
mov
add
lret
pop
ret
mov
in
sahf
iret
jge
bound
in
push
je
nop
rolb
add
jns
mov
inc
sbb
lahf
mov
out
pop
adc
add
sbb
dec
pushf
xor
ss
xlat
xchg
testl
in
and
mov
cmp
andb
cmp
cmp
add
lods
add
cmp
insb
jp
sub
fadd
xchg
je
roll
push
mov
movsb
imul
repnz
pop
add
ds
mov
lea
cmpsb
xlat
add
xchg
aam
lret
mov
mov
or
ljmp
push
popf
add
jne
cmpsb
xchg
push
lods
add
mov
in
xchg
jmp
divl
loop
dec
or
ret
sbb
inc
stos
popa
cmp
xor
cmc
or
imul
dec
push
mov
outsb
lcall
cltd
pusha
push
incb
addr16
mov
imul
negb
popa
add
outsl
jno
inc
scas
mov
pusha
outsb
daa
insl
fnsave
inc
dec
cmp
jl
jno
arpl
fadds
mov
lcall
jb
sbb
dec
cmp
push
pop
shll
out
jno
jns
push
aas
pop
mov
mov
jno
mov
loope
call
and
xchg
sbbb
sbb
jle
rcll
cmpsb
sub
mov
sbb
xchg
les
or
add
aad
xorb
mov
pusha
mov
test
das
ds
aam
add
mov
add
cmp
lds
inc
loope
cmp
dec
xor
icebp
sbb
inc
mov
mov
mov
add
sahf
fsubrp
xor
mov
pushf
adc
enter
push
mov
and
xchg
js
cmpsl
mov
lds
je
add
mov
shlb
in
aad
hlt
adc
jne
add
divb
lahf
add
stc
shrb
aaa
outsb
sub
adc
xchg
adc
add
or
sbb
cld
shrl
aas
mov
iret
inc
sub
push
fcmovne
test
daa
hlt
add
out
fnsave
mov
pop
jo
add
push
inc
dec
in
xchg
mov
jo
dec
jge
testb
test
loope
xchg
sbb
mov
xor
push
pushf
lock
add
sbb
pusha
jnp
repnz
xchg
add
pop
push
lock
sahf
loopne
in
mov
add
inc
insl
pop
or
add
xchg
int
push
lock
cmp
or
add
dec
arpl
insl
and
loop
mov
mov
mov
inc
lret
arpl
ret
mov
addr16
mov
cli
clc
add
pop
or
pushf
loope
mov
in
push
jns
or
add
inc
fsubrs
mov
stos
aad
out
movsl
mov
and
lret
and
rsqrtps
and
adc
mov
icebp
xchg
cmp
xor
xor
and
pop
loopne
and
jl
aam
dec
cmp
push
mov
ret
popa
mov
sub
idivb
sbb
pop
adc
jmp
pop
add
out
pusha
pop
repz
dec
and
out
pop
shll
mov
add
rcr
movsl
push
mov
add
add
add
insl
mov
fiaddl
xchg
and
add
mov
rclb
test
inc
sub
and
sbb
push
add
rorl
ja
mov
xchg
push
pop
nop
xchg
je
jns
cs
inc
add
pop
adc
pop
repnz
add
push
mov
cmp
sub
add
add
and
adc
pop
pusha
and
add
mov
ja
repz
das
enter
xor
loop
out
jae
sub
sbb
push
push
test
sbb
mov
mov
xchg
cld
das
repnz
or
shrb
cmp
orb
jne
in
push
pop
ljmp
subl
mov
mov
add
out
rorl
nop
cmp
cmp
add
add
cli
sarb
push
sbb
jl
mov
std
add
cmpsb
out
xor
adc
addr16
aas
test
jne
pop
and
mov
mov
add
test
cmp
mov
sbbl
sbb
push
js
incb
pusha
jle
pop
cld
xchg
add
outsl
ja
pop
scas
adcl
add
fwait
jecxz
nop
inc
dec
in
mov
adc
out
xchg
adcl
in
pop
scas
cmp
fsubr
lret
test
cmp
sub
cli
sti
pop
adc
jns
mov
jbe
pop
mov
add
lods
and
add
add
es
adc
cwtl
add
add
test
jae
jnp
mov
inc
dec
sbb
jp
inc
outsb
xor
push
inc
stos
fwait
or
and
mov
int
into
loopne
cld
movsl
xchg
add
mov
pop
push
add
jbe
xor
or
add
xor
or
mov
insb
fsubs
push
xchg
loope
cmpsl
add
or
ds
adc
sbb
pop
and
add
movsb
jb
cmp
cmpb
scas
popa
icebp
leave
add
xor
out
pop
inc
fs
clc
mov
add
daa
add
jb
movl
dec
leave
in
xchg
inc
pop
loope
pop
fdivrl
in
pop
shr
out
pusha
jecxz,pn
sbb
mov
mov
in
mov
jle
nop
sub
add
xchg
lcall
add
xor
mov
push
in
push
mov
jae
jp
std
jge
rcrb
xorps
aas
mov
rol
dec
xchg
sub
mov
in
push
mov
clc
and
cmp
mov
mov
pop
mov
sbb
xchg
ret
jecxz
jl
xor
enter
add
js
out
push
add
ret
add
subb
jmp
jl
in
jecxz
cmpb
add
dec
mov
xchg
bswap
shrl
loope
out
movsl
add
cmp
ret
jbe
mov
movsb
or
lret
sbb
dec
sbb
fiaddl
mov
mov
repz
cli
add
or
in
ja
add
or
pop
enter
jnp
add
cli
xchg
mov
xor
pushf
fdivrl
add
iret
push
enter
add
adc
push
xlat
out
cmpsb
add
mov
popa
std
add
lahf
fldenv
sbb
test
cmc
push
in
cmp
test
imul
push
shlb
js
sbbb
daa
or
in
ret
sbb
jbe
adc
orb
jno
and
mov
pop
sarb
add
inc
insl
inc
lcall
stc
loopne
xor
enter
inc
icebp
int3
fisttps
push
push
add
mov
mov
inc
sahf
test
xchg
add
jl
cmp
cmc
mov
add
je
push
sbb
sub
pusha
or
leave
jmp
lahf
xchg
cmpb
pop
out
dec
je
shll
dec
roll
insb
pop
sbb
mov
xlat
imul
add
stos
imul
push
inc
jae
inc
int3
xor
pop
push
js
cmp
mov
add
iret
sub
add
in
std
outsl
add
iret
out
jbe
sub
add
cmpsl
subl
arpl
add
sub
imul
mov
jb
dec
pop
arpl
add
adc
rcll
mov
lret
dec
aas
mov
add
push
icebp
pop
xchg
sub
xor
xchg
mov
lock
jmp
and
inc
aas
ljmp
lcall
mov
inc
add
rorb
push
mov
and
popf
add
repnz
mov
popa
jp
sub
sub
imul
data16
rorb
cmp
cld
std
add
push
cltd
adcl
mov
addb
mov
sbb
sub
arpl
pop
xor
inc
or
loopne
movsl
cmpsl
packssdw
nop
enter
ret
stos
add
cmpsl
pop
movsl
sub
ljmp
fcom
or
cmp
shl
ja
add
cmpsl
popf
movntq
out
imul
dec
leave
and
ss
clc
mov
lods
cmp
jge
push
inc
mov
lock
shll
jmp
orb
nop
add
popf
ds
dec
add
or
js
daa
mov
push
fucomp
inc
mov
test
repz
call
xchg
jecxz
or
inc
inc
inc
test
add
dec
xchg
adcb
dec
mov
add
roll
arpl
insl
push
xor
je
adc
sub
add
xchg
adc
jb
inc
mov
cld
data16
mov
imul
inc
cmp
sub
sub
mov
mov
mov
stc
add
xchg
movsl
inc
adc
es
call
add
mov
int3
aas
push
add
xor
mov
fstpt
add
test
and
inc
jbe
inc
addl
sarb
add
stc
xchg
adc
add
and
add
mov
cwtl
add
les
jne
ds
push
subl
addr16
inc
popa
lock
jg
xchg
mov
sub
mov
outsb
cmp
mov
lret
xor
pop
loopne
xchg
fwait
es
negb
imul
push
cli
dec
sahf
gs
add
stos
inc
in
cmp
xor
out
inc
sub
add
rol
cmp
shl
addb
test
jmp
sub
add
lret
or
push
add
fwait
cwtl
ret
inc
cmc
add
fsub
cmpsb
mov
loop
push
mov
sarl
lret
addb
sub
add
sbb
lcall
mov
and
test
loope
andl
mov
into
or
cli
repz
mov
cmpb
push
cwtl
cmp
imulb
sbb
addr16
sbbb
add
fcmovnbe
adc
cld
cmpsl
add
mov
mov
add
outsb
jl
cs
mov
pushf
xchg
pop
add
rorb
in
data16
inc
cmpb
es
jg
mov
push
lret
icebp
les
fdivrl
or
out
cvtdq2ps
cmpsb
push
add
dec
push
or
cmp
jl
adc
in
add
cmp
mov
or
pop
test
and
adc
cmp
adc
pop
mov
in
cs
xchg
fnstsw
cmpb
fs
mov
mov
or
mov
dec
mov
aas
leave
bound
add
nop
push
add
cmpsl
ret
sbb
mov
jno
ds
xchg
testl
ret
pop
push
push
mov
mov
stc
mov
pcmpgtd
jg
or
sbb
out
daa
scas
int
loopne
and
out
jae
cs
xor
dec
cltd
sub
stc
adcl
into
shll
ret
fistps
loopne
or
jnp
add
out
sbb
xorl
ficompl
out
dec
inc
loope
cltd
mov
cmc
add
push
mov
outsb
data16
add
punpckldq
cs
sbb
xor
popf
inc
test
int3
add
testb
adc
or
add
pop
stc
movsl
nop
flds
scas
sbb
pop
test
stos
rcll
addr16
pshufw
push
inc
neg
or
test
and
mov
mov
stos
add
popf
cmpsl
pusha
add
jp
sbb
imul
add
adc
into
cmp
jl
cs
sub
shll
fs
and
repz
not
cld
jno
lcall
and
or
repnz
add
jno
add
cmp
ja
sub
bound
mov
add
jnp
les
out
and
push
and
iret
enter
mov
xchg
stos
mov
mov
cmp
dec
add
push
xor
cltd
push
or
cmp
jecxz
add
int
out
ret
add
mov
adc
xor
aas
int3
sub
insb
adc
dec
cltd
push
lds
xor
adc
sbb
mov
lret
xor
xor
xor
pop
add
sahf
out
pop
je
sbb
adc
xchg
jg
lods
and
insb
jo
add
dec
daa
and
mov
add
or
pop
orl
repz
add
or
out
aas
inc
add
int
int3
std
movsb
add
repz
cwtl
mov
add
mov
pop
add
pusha
cli
xor
adc
jo
adc
jge
ret
pop
pop
mov
mov
add
push
pop
dec
and
cld
adc
pop
push
aam
fs
sub
push
add
fdivs
ss
sub
dec
add
iret
mov
add
adc
xchg
adc
lret
pop
call
and
mov
push
or
add
ret
ss
insb
jg
add
adc
xor
into
mov
add
xor
sbb
inc
add
pushf
dec
repnz
sub
inc
pop
xchg
add
push
push
jbe
xchg
ljmp
aaa
pusha
add
mov
xchg
adc
divb
mov
in
xchg
fadd
and
scas
xchg
and
pop
or
aas
or
jle
jo
add
jns
cld
clc
or
jg
mov
and
movsl
add
inc
mov
add
cmp
leave
test
rcl
add
outsl
add
stos
mov
addr16
leave
sub
push
sbb
push
dec
testb
ss
hlt
hlt
adc
xor
mov
add
pusha
adc
repz
repz
add
mov
out
cmp
adc
push
sarb
test
leave
pop
or
lret
xor
inc
and
xchg
je
jmp
push
divb
iret
ds
mov
push
or
add
sub
sub
pop
and
mov
push
lahf
mov
out
test
test
xor
sbb
inc
fxam
pushf
filds
cli
xor
add
inc
and
sbb
inc
pop
adc
nop
fildl
insb
jnp
jl
js
je
enter
mov
sbb
pop
inc
out
mov
inc
push
push
xor
add
xchg
loop
inc
inc
inc
aam
stos
add
ds
icebp
mov
cld
test
lea
fdivrs
out
jbe
adc
or
test
loopne
jmp
jb
add
push
or
jns
mov
lods
lds
sbb
cltd
xchg
or
mov
rolb
pop
inc
sbb
imulb
mov
push
nop
imul
xorps
push
add
jb,pt
add
stc
sysexit
sbb
or
aas
xor
repnz
scas
add
pop
test
mov
pop
lods
sarl
sbb
cmp
mov
add
repz
icebp
mov
test
cwtl
adc
inc
xor
sbb
out
pop
sbb
aaa
jne
mov
push
add
sbb
out
and
pop
fdivl
mov
enter
imul
add
mov
pop
aad
out
clc
ror
or
loopne
mov
cmp
lods
add
dec
loop
jle
xchg
add
rcrb
mov
cmp
fsubl
daa
xor
fs
jno
sbb
add
mov
pop
mov
orb
jo
gs
hlt
mov
add
dec
fmull
movsb
stos
cmp
add
in
pusha
je
cld
mov
jns
orb
xchg
or
sub
nop
add
mov
mov
js
jle
mov
add
call
leave
add
repz
cmp
icebp
xor
movsb
add
adc
add
jo
jecxz
js
sub
pusha
push
or
sub
pop
in
mov
cmp
mov
add
add
dec
call
push
sbb
test
nop
jecxz
cwtl
mov
pop
xor
xor
lods
out
push
loop
pop
stos
push
sbb
xor
dec
movsl
adc
test
pop
mov
mov
mov
mov
and
add
adc
mov
inc
data16
add
cmp
add
fldl
rcll
pop
push
dec
adc
xor
mov
stc
adc
pop
or
mov
hlt
icebp
and
dec
xchg
push
mov
icebp
lock
das
add
and
fadds
pop
insb
adc
leave
out
add
sbb
das
movsb
pop
incl
loopne
fcompl
daa
and
push
push
andl
rolb
mov
jbe
lret
test
fnstenv
inc
and
cmp
fildl
sbbl
mov
mov
xchg
pop
fists
gs
dec
add
sarb
inc
jb
add
inc
add
add
wrmsr
es
xor
lds
dec
pop
gs
or
jo
out
pop
call
or
ja
push
out
xchg
adc
aam
cmpsb
rcrb
flds
sub
cmc
sbb
push
mov
test
cmp
aas
sub
xchg
add
testl
aas
sahf
mov
mov
pop
adc
mul
in
lock
mov
pop
dec
xlat
pop
nop
mov
fs
shlb
or
in
lods
and
in
sbb
mov
cld
inc
add
mov
ja
cmp
test
xor
mov
xor
mov
or
lret
adc
dec
add
loopne
xor
loopne
add
mov
add
dec
iret
inc
cmp
jbe
mov
out
clc
aaa
and
add
and
xchg
jbe
push
pop
xchg
adcb
add
iret
and
mov
push
dec
sub
add
cwtl
pop
jnp
test
std
stos
movsb
jne
out
call
inc
xchg
imul
pop
pop
ret
mov
out
nop
add
dec
sbb
mov
jae
adc
and
cmp
jg
add
movsb
sub
add
mov
pop
jo
and
jae
loopne
stos
push
xor
mov
dec
xchg
sbb
dec
mov
movsl
ss
lods
adc
and
arpl
aaa
push
mov
add
jecxz
add
pusha
push
inc
test
add
and
add
cmp
mov
pop
addb
pop
add
add
nop
lea
test
adc
dec
adcl
call
dec
out
pop
jg
sbb
sbb
pop
sub
cmp
mov
sahf
cmc
mov
ja
adc
loope
rorb
loopne
pop
mov
xchg
push
add
into
insl
daa
scas
cmp
add
in
fwait
les
cmpb
sti
sbb
push
mov
movsl
pusha
fsubl
inc
adc
jbe
fcmovnbe
popf
dec
add
xor
fadds
dec
shll
push
testb
add
out
fstps
hlt
add
gs
mov
pop
mov
test
add
inc
call
dec
mov
in
jg
addl
sbb
sub
cmpsb
lea
mov
push
jge
sahf
into
loopne
ret
xchg
jge
add
dec
rcrb
dec
movsb
push
inc
push
dec
or
push
xorb
sti
push
mov
mov
jp
popa
sti
sub
loop
mov
fisubs
add
in
mov
add
cli
xor
pop
int
sarl
add
popf
pushf
mov
or
subl
ljmp
rclb
les
out
call
add
pop
fsubrl
iret
rcrb
add
lret
xor
lret
sub
stos
adc
popa
xor
mov
outsl
xor
fcmovnu
fildll
repz
or
or
insb
loopne
lock
add
std
push
adc
add
sbb
add
shrl
call
mov
movsl
rolb
mov
adc
pusha
jmp
sarl
jle
lds
dec
js
add
mov
pop
add
cmp
out
add
push
pop
mov
packsswb
fildl
rcll
aaa
mov
cs
or
mov
push
cmp
jo
fxch
mov
add
dec
mov
int
loopne
movsb
xchg
mov
mov
pop
add
fs
lahf
cmp
ret
lods
aad
lods
mov
hlt
add
cmp
cmpsl
mov
icebp
fildl
or
push
cmp
push
pusha
mov
fnstsw
lret
sub
into
add
xchg
mov
and
sbb
into
pop
jmp
xor
jmp
or
out
inc
mov
scas
xchg
ret
in
les
addl
sahf
jae
orb
adc
rol
lret
add
aaa
pop
aas
fst
push
add
mov
push
add
pop
imul
nop
shl
mov
fwait
loopne,pt
jne
push
add
cwtl
or
loop
es
add
sub
push
out
icebp
cmc
fs
add
mov
stc
or
faddl
fistpl
shlb
add
sub
lods
xchg
aaa
jle
cs
popf
mov
cmc
in
xlat
sbb
test
xor
pop
add
lods
jo
cmp
movl
frstor
dec
add
dec
jg
lods
push
enter
add
outsb
popf
xchg
add
ss
bnd
jmp
cmp
fdivs
cmp
popf
add
imul
rcrl
test
jns
add
push
push
jge
icebp
xor
sbb
hlt
xor
nop
neg
cmp
add
push
mov
sahf
fcompl
xor
add
jns
sub
in
add
pop
cs
fidivs
pop
xchg
js
pop
sub
inc
cmp
push
add
mov
cld
jge
add
cmp
stos
add
mov
flds
loopne
popf
repz
shrb
jo
xorb
addb
push
mov
test
adc
dec
int3
fldenv
pop
lock
add
mov
js
add
push
mov
orb
mov
xor
mov
inc
sbb
push
loopne
jno
in
subb
sub
adc
es
add
inc
enter
mov
sbb
add
add
je
sti
xor
xchg
mov
mov
scas
or
test
xchg
into
sbb
pop
aam
mov
or
and
xchg
or
loop
repz
out
mov
cmp
cmp
cs
xchg
shlb
mov
add
jg
cwtl
repz
push
add
mov
sar
cmc
add
add
jl
pop
movl
out
and
sub
jmp
add
and
push
jno
jo
xchg
out
dec
dec
clc
push
add
xor
or
icebp
cmp
push
test
xlat
push
dec
dec
mov
xchg
jp
enter
mov
ret
pop
out
rolb
xor
add
out
pop
popf
ja
mov
add
repnz
sti
adc
push
test
push
and
mov
data16
sub
and
in
add
sahf
sti
aaa
ret
push
outsl
mov
dec
cmp
pusha
imul
jmp
xor
sub
les
inc
ret
in
jno
and
cmpsl
repnz
rcl
leave
inc
out
push
arpl
data16
adc
es
mov
fiaddl
mov
mov
cmp
mov
jo
fdivs
les
out
and
lret
in
test
or
loopne
cmp
out
mov
out
push
add
hlt
lcall
pop
xchg
jbe
in
add
and
add
bound
rorb
aas
xchg
hlt
add
cmp
ds
les
idivb
cmpl
mov
sbb
loop
jae
mov
dec
lret
test
clc
add
adc
push
cmp
adc
outsl
jl
mov
popa
aaa
out
sbb
mov
ljmp
push
push
scas
mov
arpl
pusha
or
mov
andb
aad
sbb
int3
mov
jns
and
rcrb
add
mov
jbe
popa
add
mov
cmp
mov
or
hlt
das
pushf
movl
jo
cmp
push
int3
xor
add
adc
inc
adc
movl
cmp
mov
or
pop
xchg
mov
sub
shlb
xor
mov
jo
xchg
cld
mov
ror
jmp
das
pop
bndstx
add
shlb
cmp
andb
enter
pop
add
and
cmp
aaa
out
pusha
aad
jno
inc
lods
jl
sahf
sbb
fcompl
sar
mov
inc
ret
loopne
rcll
add
sbb
repnz
ret
bound
sub
aaa
cmpb
adc
aas
jle
repnz
inc
imul
dec
pop
mov
test
loop
dec
inc
jl
jmp
popf
mov
mov
push
xor
std
cmc
add
lea
bound
outsl
or
or
adc
fisttpl
jp
add
sub
incl
ret
and
jge
divb
movsb
cmp
int3
shl
add
shlb
xchg
push
stos
cmpb
cs
repz
sbb
or
insb
pusha
adc
aad
mov
mov
mov
inc
jbe
mov
push
adc
std
inc
ficompl
pop
js
cmp
or
and
scas
cmp
ljmp
jge
movsb
mov
sti
add
jbe
sub
xor
arpl
imul
mov
and
imul
mov
mov
gs
pop
pop
movb
jle
roll
inc
and
rclb
sti
jno
xor
adc
scas
enter
ret
loope
cmpsl
call
dec
mov
cli
adc
pop
ficomps
mov
jae
jnp
inc
bound
dec
pop
cmpsl
popf
fs
lea
orl
mov
gs
or
test
xor
pusha
pusha
mov
jnp
push
push
aas
mov
bound
xchg
sbb
push
pop
pop
pop
pusha
mov
into
and
add
js
adc
adc
add
push
add
es
jg
test
sub
les
add
xor
push
enter
sbb
mov
and
subb
ja
nop
roll
mov
nop
lcall
ds
mov
xchg
adcb
imul
in
pop
add
jno
sbb
or
leave
xor
loopne
lret
dec
hlt
stos
push
sub
call
lret
jg
nop
xchg
sub
sub
sbb
sbb
cld
adc
pop
mov
jbe
dec
xchg
jle
scas
sub
cli
cltd
add
push
repnz
loopne
add
neg
inc
cmp
iret
add
mov
sub
dec
bound
mulb
pop
test
lcall
add
sub
jp
loop
dec
xchg
leave
mov
xchg
adc
add
fcompl
out
sub
mov
out
arpl
add
mov
ds
xchg
inc
aam
jecxz
and
jle
pop
add
inc
aaa
roll
fdivs
add
lds
mov
cmp
pop
pop
add
pop
jl
je
shl
pop
xchg
mov
inc
and
call
jo
sbb
loopne
es
add
and
sbb
jle
add
ret
xor
cmc
jecxz
push
pop
add
mov
add
cmp
and
test
dec
cs
sub
pop
clc
jl
add
dec
outsl
sbb
into
shrl
xchg
cwtl
pop
jmp
loopne
add
mov
dec
cmp
inc
mov
inc
rcrb
call
lock
add
xchg
or
pop
repnz
pop
movsb
mov
add
mov
in
mov
int
jnp
dec
jne
dec
popf
mov
fmull
and
inc
lcall
into
add
inc
add
inc
sub
je
sbb
mov
mov
xor
and
outsb
stos
adc
xor
jl
test
jecxz
add
sub
sbbb
sbb
xor
shlb
pop
sbb
mov
lock
jbe
or
add
or
out
jp
and
push
cmp
mov
fdivrs
test
cmp
push
cli
mov
pop
insl
or
cld
sahf
pop
add
push
xor
lods
rclb
repnz
jns
rcrb
pop
adc
dec
add
sub
adc
rol
int3
dec
add
dec
pop
aas
je
lcall
jle
pop
out
and
add
addr16
jle
xor
mov
and
in
outsb
xchg
adc
js
add
call
icebp
add
loop
mov
or
fstpl
in
out
ficoml
add
xchg
sti
and
adc
sub
outsl
mov
mov
add
pop
lcall
push
out
add
inc
std
movsb
add
push
adc
nop
mov
or
or
add
sub
enter
testl
adcl
and
xor
loop
push
sbb
cli
push
add
mov
sub
cmp
xchg
shll
add
int
or
xchg
pop
push
aaa
mov
cld
rclb
push
iret
int3
add
in
dec
jp
jo
test
add
pop
add
add
add
out
push
inc
rcr
stos
mov
jmp
sub
jge
xlat
mov
inc
cmp
icebp
cmp
inc
add
sub
add
mov
or
push
daa
adc
cmc
add
mov
add
dec
jae
loope
adc
insb
jno
add
pop
shll
add
adc
add
push
push
add
fwait
xchg
popl
iret
dec
and
xchg
ljmp
scas
and
mov
mov
jbe
aad
mov
lret
dec
or
dec
mov
add
gs
pusha
jbe
and
ljmp
add
roll
mov
add
repz
and
pop
stos
movl
aam
pop
xchg
add
jb
mov
lods
dec
add
ljmp
add
in
lret
jge
lock
inc
das
dec
push
test
dec
mov
jecxz
push
push
add
pop
sahf
jb
add
mov
jle
dec
icebp
cmpsl
xchg
push
pop
stos
shrl
jb
add
sub
xor
sarb
aaa
push
mov
imul
rorl
pop
mov
jae
out
jno
add
loope
dec
mov
out
cmp
jae
push
sahf
mov
or
pushf
fadds
lods
and
xor
stc
pop
add
mov
shrl
imul
movsl
xor
subl
enter
sbb
imul
jmp
jp
pop
sub
adc
xor
jo
cli
add
jp
movnti
imul
add
sti
jne
mov
clc
out
pop
cmpsl
bnd
pop
bound
xor
add
xlat
mov
jo
mov
ljmp
push
dec
pop
dec
or
mov
pusha
loop
adc
pop
not
je
add
push
sbb
rolb
push
fbld
dec
stos
in
xchg
add
pop
xor
push
lods
xchg
repnz
outsl
stos
dec
leave
pop
add
or
sbb
xchg
sub
lock
adc
push
ret
ss
lock
sbb
add
jp
jmp
sbb
or
mov
adc
clc
sahf
xchg
add
or
push
adc
mov
add
dec
aam
add
cmp
cs
addl
inc
add
add
mov
rolb
stc
dec
movl
jne
flds
call
out
insb
das
add
fwait
jno
cmc
sbb
add
sub
jo
pop
outsb
jb,pn
std
mov
ret
dec
mov
xor
and
data16
fdivr
test
xor
fdiv
adc
sbb
or
push
add
push
sub
sub
cmpsb
addb
out
mov
add
mov
xor
lods
pop
in
jno
repnz
xchg
outsb
mov
or
shlb
sbb
or
jmp
add
inc
loopne
mov
pop
scas
mov
mov
in
jb
cli
stc
sbb
or
cmp
inc
or
js
and
cmp
fcmovb
mov
push
addr16
push
fwait
int3
icebp
clc
cmc
aas
ja
pop
lock
mov
daa
sub
fdiv
jmp
aaa
pop
jle
push
lds
jo
loopne
and
push
shr
cltd
add
fdivrs
mov
loope
push
xchg
adc
mov
shrb
adc
je
in
lods
mov
adc
stc
iret
add
divl
es
sbb
jp
lahf
loop
jno
fdivrl
add
inc
or
or
xlat
jecxz
push
add
fsubr
jnp
lock
add
jb
sbb
dec
incl
mov
dec
or
add
jmp
inc
int3
adc
or
pop
mov
mov
mov
popf
test
das
adc
mov
frstor
fistpl
mov
or
fmull
add
cwtl
jne
insl
ret
inc
inc
cmp
jmp
imul
mov
pop
into
push
push
inc
pop
xlat
or
mov
bswap
mov
jp
and
adc
xchg
jbe
push
das
popa
movsl
cwtl
inc
test
aam
aas
test
adc
mov
or
sbb
push
shlb
bound
adc
lahf
add
loope
push
jo
cmp
xlat
adc
add
mov
lret
iret
test
or
dec
cmpsb
add
cwtl
ljmp
shlb
enter
sahf
aam
sbb
lock
into
mov
push
mov
fbld
mov
and
sub
in
adc
je
es
out
jno
sub
xchg
inc
ret
add
popf
rcrb
push
out
das
add
sub
lds
pop
sub
ds
adc
cmp
inc
aaa
jl
adc
out
and
or
mov
or
imul
fs
movsb
xor
and
adc
loop
jp
cmc
xorb
in
cmp
cmp
add
andl
sbb
in
sub
jno
add
dec
xor
inc
sahf
push
add
setno
mov
pop
mov
dec
push
fadds
mov
push
mov
add
inc
mov
inc
add
push
pusha
push
cmp
sbbb
cmp
pop
xor
mov
fwait
jp
jmp
add
jge
sub
shl
fwait
xchg
ds
aas
loope
lods
idivb
std
dec
pop
jns
imul
cmp
or
lds
ljmp
push
lock
adc
out
adcb
push
xchg
out
cmpsl
test
das
mov
mov
mov
loop
ljmp
push
shr
test
sbb
cmpsl
cmp
adc
cltd
sti
inc
ja
jae
jno
inc
or
adc
sub
push
or
js
mov
sub
test
add
push
adc
inc
mov
out
fidivl
sbb
insl
inc
mov
xchg
mulb
addb
xchg
pop
adc
test
scas
dec
call
mov
or
add
jo
fmuls
movups
mov
lock
push
adc
test
jbe
fimuls
insb
pop
test
adc
mov
and
js
mull
adc
push
mov
and
xchg
or
enter
jecxz
sbb
inc
sti
mov
jae
adc
xor
adc
inc
loopne
dec
and
jno
jp
fs
adc
nop
adc
imul
and
inc
lret
or
in
adc
fs
cmc
dec
fwait
call
xchg
and
xor
adc
push
push
rclb
push
call
and
test
pop
push
nop
popa
ss
dec
cmp
fs
adc
dec
in
mov
jo
adc
or
inc
cmpb
xor
lcall
push
shl
dec
sbb
jnp
js
icebp
mov
je
dec
pop
mov
inc
xlat
mov
loopne
scas
sbb
sbb
and
cld
pop
iret
insb
or
pop
inc
push
outsl
sbb
push
pop
add
test
cmp
aas
dec
mov
in
dec
inc
mov
rcr
xchg
ret
or
fnstsw
leave
inc
insl
mov
loop
sbb
std
sbb
inc
push
sbb
jl
mov
sub
fmul
cli
sbb
ljmp
sbb
mov
clc
cmp
push
fisubl
ds
js
jp
test
push
cmp
sub
out
or
adc
rolb
sbb
rcrb
xor
sub
jns
test
inc
out
out
or
ror
sbb
adc
inc
xchg
jbe
nop
cmpsb
cld
push
and
jmp
ss
and
shll
popf
sbb
xor
sbb
rcrb
adc
cld
mov
xor
push
push
jmp
imul
add
int3
adc
js
sbb
adc
ds
sbb
mov
cmp
stos
aam
push
dec
loop
lcall
outsb
xlat
and
add
adc
mov
mov
cs
fists
test
je
test
cmc
push
rorb
rcl
sub
or
mov
inc
xchg
les
or
js
loopne
xchg
push
and
and
ret
cmp
xor
std
repnz
and
cmp
fdiv
cmpsb
movsl
xchg
adcb
adc
push
xor
cmp
bound
dec
and
push
fs
and
sarb
paddsb
les
cmp
rol
shl
stc
nop
nop
add
jo
xchg
jae
adc
adc
sub
pushf
inc
pop
jl
test
push
sbb
cmpsb
and
inc
andb
xor
or
fsub
jmp
and
or
js
ds
xor
aam
andb
sbb
fcompl
xor
adc
xor
les
xor
sbb
mov
and
pusha
shrb
aad
bound
add
inc
aam
add
repnz
adc
js
push
sub
clc
mov
add
add
insb
inc
mov
push
or
imul
sbb
in
xor
ljmp
mov
push
aaa
inc
in
imul
iret
and
cmp
push
xlat
test
push
enter
jb
rorb
arpl
stos
icebp
dec
icebp
lods
loope
loope
icebp
dec
loopne
jo
sbb
jecxz
sub
or
mov
push
jo
sbb
mov
adc
mov
cmovno
or
addl
xor
push
sub
aaa
sbb
enter
jo
push
cli
push
mov
sbb
jo
adc
dec
je
and
xchg
stc
inc
test
push
or
insb
push
push
jo
mov
xor
lods
cmp
nop
lds
adc
or
inc
and
mov
stc
aaa
loopne
mov
repnz
xor
pop
pop
jne
bnd
sub
imul
add
test
pop
je
sub
push
loope
add
repz
inc
cmp
and
dec
dec
or
cmp
popa
je
clc
sub
loopne
jecxz
sti
adc
sbb
jno
add
outsb
and
cmp
loopne
dec
pop
add
xchg
mov
sub
push
inc
bound
lods
mov
or
mov
sarb
nop
repz
xchg
pop
shl
push
cmpb
loopne
xchg
jo
add
xchg
arpl
cmp
jg
push
mov
push
and
popa
rcr
testb
and
dec
addr16
inc
add
xchg
in
cmpsb
inc
xchg
stc
add
and
pusha
mov
pop
push
cmp
cmp
jp
mov
mov
adc
xorb
sbb
dec
xchg
mov
add
daa
add
sbb
icebp
out
add
rcll
jbe
add
cmp
pop
pusha
lret
pop
and
add
das
aad
xchg
mov
or
addb
mov
push
xor
mov
fldt
hlt
jns
sahf
push
and
stos
or
add
out
push
das
addb
movl
mov
outsl
das
add
push
jmp
xor
jo
add
mov
data16
ret
pop
jb
lahf
add
dec
jle
cltd
jg
inc
mov
clc
jp
loopne
push
ret
mov
mov
aaa
cmp
lods
btr
push
xlat
ds
fadds
mov
push
xchg
add
jecxz
pop
jge
call
pop
mov
jl
xchg
ret
sbb
and
push
or
sti
ds
movlps
push
cli
fmuls
pop
jmp
sbb
cmp
push
cmpl
lods
sbb
call
jns
mov
not
push
popa
int3
lcall
pop
or
cld
cmp
jle
add
pop
scas
popf
mov
pop
add
lods
shld
js
loopne
sub
mov
cld
into
add
jp
sub
sti
jae
out
sub
repnz
andb
xor
fistpll
pop
mov
into
mov
imul
mov
orb
int3
fimuls
xchg
push
pop
or
dec
sbbb
cmp
push
add
cmpsb
pop
loopne
ja
and
insl
mov
adc
sbb
sahf
orb
fcoms
fstpt
icebp
xchg
cmpsb
or
xchg
sbb
inc
mov
add
sti
push
push
in
fcmovnb
add
bound
outsl
out
sbb
leave
pop
push
add
dec
pop
mov
ror
mov
sbb
sub
add
add
and
xchg
xchg
ds
rcr
mov
adc
inc
add
add
or
push
push
lds
push
add
adc
pop
sbb
std
xchg
js
ss
ljmp
pushf
add
in
mov
cli
add
in
inc
pop
push
xor
lea
dec
push
xchg
lock
std
fnstcw
pop
clc
adc
jge
mov
and
sti
xchg
cmp
clc
pop
cwtl
cmpl
jb
fcoms
and
or
icebp
movsl
push
add
sbb
pop
xor
add
imul
xor
dec
add
lock
mov
xchg
jmp
inc
fcomps
and
inc
mov
cmp
pop
add
fcompl
pop
shlb
out
and
movsb
xor
or
mov
xchg
rclb
sbb
lock
pcmpgtw
push
pusha
or
xor
jbe
sub
push
xor
sub
idiv
sub
sbb
mov
sub
mov
cmpsl
mov
cmp
dec
mov
stos
jne
aas
dec
cltd
leave
inc
mov
add
and
call
xor
add
hlt
sbb
mov
loopne
bound
idiv
hlt
sbb
mov
sti
stos
arpl
xor
and
pop
jp
mov
lahf
dec
loopne
mov
sub
and
movb
or
add
mov
add
mov
jge
add
xor
aaa
and
cs
adc
sbb
sbb
add
ret
push
out
xchg
push
iret
cld
ret
pop
cmp
mov
pusha
pop
add
mov
aas
arpl
dec
fistl
xchg
adc
cmp
sbbb
sbb
mov
clc
addl
je
add
cmp
fiadds
add
repz
mov
dec
loopne
jns
xchg
lea
ja
xor
mov
movsb
insl
xchg
shlb
js
mov
jne
mov
addr16
sub
xor
shrb
insl
xor
es
sti
das
and
lea
lods
ret
add
jb
scas
ds
dec
cmp
add
cmpsl
outsb
add
es
mov
stos
mov
adc
mov
fists
dec
std
xchg
subb
sbb
pop
jno
scas
pop
push
mull
in
int
add
test
xchg
add
jg
jl
incb
dec
mov
xchg
daa
lret
pushf
add
push
repz
add
inc
xchg
mov
or
int3
fildl
mov
jge
outsl
add
add
lods
and
sarb
je
or
sub
push
dec
pop
inc
hlt
pusha
dec
push
push
mov
dec
sbb
sub
mov
movsl
inc
or
pop
js
mov
sbb
or
test
aam
mov
push
rorb
xchg
movb
call
nop
jl
fbld
mov
sub
and
xchg
cmp
test
scas
or
add
test
inc
mov
bound
rclb
lock
jb
lods
adc
lahf
inc
mov
push
mov
sub
and
aaa
xor
lods
mov
or
add
xchg
cmc
xor
push
rclb
inc
out
in
and
sbb
pop
sub
inc
aam
adc
adc
sub
pop
jbe
pop
push
mov
jns
test
push
push
mov
test
adc
pop
test
out
and
mov
and
jo
dec
push
hlt
pop
pop
js,pt
add
push
xchg
add
and
aad
adc
sti
fstpt
rclb
pop
sub
or
push
dec
sub
add
enter
mov
inc
leave
push
add
sub
sub
rorl
or
or
repnz
and
jmp
loope
cmp
mov
das
xchg
xchg
cwtl
jmp
daa
imul
rorl
xor
lock
mov
push
rorl
xchg
mov
nop
mov
pop
sti
test
stos
fnstsw
add
or
add
xor
call
lock
sub
xchg
loope,pn
lock
or
out
in
add
clc
xor
test
xchg
subl
sub
icebp
sbb
add
or
push
xchg
rorl
add
xor
add
jle
imul
push
dec
popf
call
mov
jne
insl
adc
rolb
arpl
scas
test
cmpsl
mov
subl
out
jnp
add
push
popa
xchg
mov
jo
arpl
cmp
roll
stc
stos
sbb
jnp
enter
xor
lahf
mov
sbb
fs
sub
pop
fnsave
aaa
and
and
xor
add
call
add
inc
ret
mov
pop
add
lods
mov
aaa
scas
call
pusha
xorl
dec
xor
mov
adc
repz
cmpb
shlb
pusha
cmc
xor
or
add
push
in
mov
stos
sar
ret
test
mov
rolb
xchg
cld
mov
test
xchg
and
sub
mov
pop
add
pop
push
lret
pop
andb
cmp
sahf
lahf
subb
or
test
add
jnp
xchg
mov
jo
xchg
pop
mov
jl
rcrb
nop
sbb
fimuls
mov
add
mov
test
jge
push
adcb
push
mov
or
loop
and
cmp
cltd
aad
add
cmp
sbb
imul
add
es
xor
mov
cltd
hlt
cltd
data16
shrl
xor
mov
pusha
xor
and
adc
rcrl
xchg
loop
leave
mov
lds
xor
les
adc
push
adc
lea
aas
push
ret
sub
arpl
iret
or
scas
adc
add
and
das
or
xor
lock
or
xchg
lock
sti
mov
fstpt
cmp
loope
adc
add
mov
add
sub
add
sahf
dec
int
mov
and
outsb
mov
sbb
loope
sbb
into
push
sub
js
in
das
sub
sbb
lahf
sub
xchg
fsubrs
xchg
xor
cmp
fwait
jg
xor
jmp
loop
inc
mov
xlat
add
imul
add
xchg
aaa
sub
inc
sub
hlt
add
movsl
shlb
arpl
inc
mov
push
and
or
mov
enter
xor
rorl
or
and
xor
inc
mov
dec
in
push
add
bound
hlt
sub
loopne
fildl
or
jno
mov
movsb
shll
test
pop
sarb
pop
inc
dec
xor
das
pop
cmp
cmc
mov
sbb
mulb
hlt
nop
jge
data16
sbb
pop
stos
test
in
push
insb
sbb
aas
lock
bnd
mov
push
add
adc
xlat
jae
pop
js
push
cmp
push
fs
in
jae
push
je
push
inc
cmc
sbb
jmp
mov
xchg
inc
push
xchg
add
mov
dec
call
push
jne
add
xor
sbb
or
mov
loopne
in
rolb
pop
pusha
aad
cmc
addb
or
cmp
ret
inc
dec
std
mov
lods
lret
inc
push
cmp
rcrl
push
sbb
push
jnp
cwtl
pusha
roll
dec
jb
cwtl
lock
add
in
cmp
cmp
mov
cmp
push
shlb
add
into
enter
std
sbb
mov
dec
sub
rclb
ret
sub
je
pusha
leave
lahf
xchg
xchg
popf
je
nop
or
cmp
inc
shlb
rcrb
push
adc
sbb
js
sbb
sbb
popa
sbb
pop
mov
cltd
in
mov
rclb
call
mov
rclb
adc
js
add
adc
nop
cmc
je
pusha
add
pop
xor
jmp
xor
add
arpl
inc
cmp
and
loope
xchg
sbb
add
pop
mov
js
inc
lock
mov
lods
dec
xorl
inc
pop
adc
mov
sbb
cli
pop
popl
and
mov
test
sahf
cmp
pop
inc
push
push
jl
incb
test
sbb
fidivs
add
push
mov
or
into
jno
popf
xor
xor
or
cmp
and
aad
dec
sbbb
inc
xchg
push
cmp
inc
sbb
pusha
sbbl
inc
test
clc
pop
and
fldl
subl
cwtl
lock
stos
popa
popf
inc
xor
bound
aad
insb
pusha
fwait
jno
inc
loop
inc
shll
xchg
cmp
inc
lret
xchg
rolb
xorb
jmp
jmp
add
mov
dec
dec
cmp
clc
jl
lds
inc
jl
and
dec
jbe
xchg
adc
rolb
push
dec
inc
pusha
fdivrs
xor
rclb
pop
cmp
cwtl
pop
popa
cmp
sbb
fs
adc
xor
jle
ljmp
js
dec
pop
xor
punpcklbw
xor
fwait
loope
test
xor
jo
xor
jmp
aad
insb
pusha
stc
adc
sub
sbb
inc
xor
stos
xchg
punpcklbw
into
fiadds
sti
cmp
std
es
mov
movsl
in
fstl
pusha
ficompl
dec
mov
loopne,pn
cmp
leave
xor
xor
pop
cmp
sbb
fdivs
pop
adc
pusha
dec
adc
pop
jl
mov
clc
repz
inc
xor
lods
aam
shlb
outsl
call
pusha
loopne
xchg
sarb
iret
xor
inc
push
xor
inc
popf
iret
insb
push
jecxz
mov
jge
shl
aam
adc
pop
dec
add
add
dec
dec
cmp
jp
jle
add
aad
addr16
imul
shl
das
xchg
cmp
push
shlb
push
sahf
stc
cltd
faddl
mov
mov
lock
je
cmc
mov
mov
xor
inc
xchg
xor
pusha
sarl
es
cmp
ret
push
fstpt
jp
xor
xor
rcrb
add
and
inc
mov
fstl
pusha
ret
mov
sub
pop
push
clc
aaa
push
and
pusha
lock
aaa
inc
dec
popa
fsts
pop
sbb
pop
and
out
xor
xor
push
pop
je
and
ds
xor
pusha
add
dec
or
jbe
pop
jmp
lock
pusha
add
mov
pop
dec
js
adc
aam
rolb
adc
jmp
inc
inc
and
shlb
jl
pusha
lock
fs
fstl
lock
push
push
aam
shll
adc
cs
aam
jl
adc
lock
mulb
popa
cmp
pop
popa
fsts
lahf
xor
add
or
orb
imul
daa
add
jecxz
jmp
mov
pop
push
sarb
orl
fistl
pop
popa
pop
mov
xor
ss
insb
mov
add
rcrb
std
cmp
mov
mov
xchg
cmp
sbb
jmp
mov
stos
adc
add
mov
pusha
addb
cmp
or
inc
nop
ret
cmp
fsubr
bound
or
bound
jl
and
pop
loope
xor
cmp
push
push
push
add
test
stc
das
adc
mov
popa
cmc
inc
addr16
rorl
pop
pop
iret
test
jno
int
adc
mov
cmc
adc
mov
dec
imul
idiv
and
lods
jb
xor
pop
fldl
jecxz
repz
jno
pop
mov
loope
pushf
loope
sub
popf
push
inc
movsb
enter
add
stos
test
lock
dec
pop
pusha
push
imul
pop
pusha
popa
mov
cwtl
sbb
cmpsl
cwtl
and
xor
and
adc
jle
enter
mov
in
mov
pusha
inc
add
sbb
xchg
sti
pop
aam
jl
or
loopne
or
clc
push
adc
rolb
inc
push
dec
dec
shrb
ss
stc
in
andb
cmp
cltd
subl
insl
shll
scas
and
mov
les
lret
pusha
lock
push
push
xor
bound
jns
inc
push
pop
inc
popa
into
outsb
in
jb
cmp
movsl
dec
push
test
popa
pop
pusha
add
loop
adc
add
pop
dec
push
cmp
cltd
push
lods
xor
pop
pusha
push
ss
fsts
pusha
sbb
mov
add
imul
pop
dec
push
and
aaa
loopne
leave
xchg
cmp
adc
movl
imul
aaa
push
add
push
mov
in
sbb
lret
push
xor
mov
xor
aaa
stos
out
xor
into
insb
pusha
jp
pop
push
mov
inc
int
cmpl
bound
cmp
mov
sub
fmuls
std
push
icebp
mov
iret
rclb
inc
jno
and
aaa
sarb
repnz
lret
pusha
lock
out
jl
mov
push
or
and
test
cmp
jae
cmp
pusha
jg
xor
js
daa
ror
lock
adc
pusha
push
sbb
push
popa
mov
mov
popf
scas
pusha
add
pop
loopne
jge
mov
clc
mov
xor
pop
pusha
push
subb
mov
dec
cmp
aad
mov
sbb
cli
adc
xor
adc
lock
jno
sbb
sub
jl
sbb
add
sahf
cmpsl
pop
fstl
clc
xor
adc
loopne
lret
imul
inc
test
outsl
dec
loope
dec
aam
out
mov
popl
mov
dec
jb
fsubs
jecxz
xor
fldt
and
and
outsl
push
pop
loope
nop
mov
pusha
xchg
cmp
sahf
out
cmp
addl
xor
repnz
mov
lods
xor
and
jne
xchg
cmp
cmpsl
dec
nopl
jl
loopne
fwait
xlat
inc
lods
addb
xchg
mov
xchg
xchg
clc
scas
adc
mov
inc
or
call
std
test
in
cmp
adc
cmp
xor
mov
dec
pusha
push
sub
nop
jl
sbb
mov
dec
mov
and
mov
pop
dec
rcr
and
jle
sbb
push
xchg
popl
nop
and
scas
xor
jmp
out
pop
xor
adc
jecxz
mov
mov
add
inc
pop
sub
pusha
ror
pop
mov
jb
popl
adc
xchg
icebp
js
in
mov
xor
stc
jg
pushf
ficoml
movlps
add
jg
mov
adc
inc
sbb
jae
or
xchg
popa
mov
loopne
push
lret
or
mov
cmp
sar
aad
mov
xchg
mov
popf
ret
imul
adc
push
cmpl
es
repnz
xchg
outsb
movsb
rclb
ret
syscall
mov
sbb
sbb
lahf
rcl
subl
push
out
cmp
or
js
push
outsl
sbb
fcos
mov
mov
xchg
in
or
icebp
pusha
popa
clc
notb
adc
push
ljmp
mov
testb
fs
loopne
sti
mov
inc
dec
pop
add
inc
nop
and
fsub
cmp
clc
cmp
xor
jl
sbb
mov
rclb
sub
insb
sbb
jle
sahf
popa
jnp
jg
push
jecxz
arpl
and
jge
ret
add
js
mov
sub
dec
sbb
pop
popf
cmp
lods
mov
xchg
aaa
inc
mov
sbbl
adc
dec
pop
jae
mov
into
xchg
fwait
dec
ds
or
xor
sbb
insb
mov
fildl
or
jl
jle
jnp
inc
rcrb
cmp
pusha
sbb
clc
lock
xor
push
xor
mov
xchg
pop
inc
inc
roll
mov
adc
ret
jl
add
inc
dec
and
cmp
xor
cmp
pop
add
dec
mov
adc
fcmovnu
or
xchg
mov
clc
dec
push
sub
jp
adc
lock
mov
and
push
test
mov
clc
scas
shlb
mov
and
fneni(8087
stos
sub
xchg
icebp
fidivrl
in
in
popa
cmp
mov
pop
lret
pop
add
lret
adc
aad
pop
and
stc
inc
or
mov
inc
mov
lea
inc
jl
mov
add
adc
adc
xor
inc
or
xor
fs
arpl
cmp
or
add
xchg
cs
sbb
leave
repnz
push
rol
arpl
cmp
jbe
popa
bound
out
aam
subl
call
pusha
imul
or
clc
xchg
push
pop
outsl
popa
arpl
insl
push
xchg
popa
push
add
sbb
lahf
fwait
jnp
rcrb
push
add
loop
lea
movsb
jl
adc
mov
sarb
gs
orl
sub
js
jae
fsubrs
inc
cmpsl
loopne
mov
arpl
loope
mov
rorl
push
adc
shl
jnp
sub
ret
lret
loop
and
mov
roll
andb
cmp
andl
dec
in
push
lcall
fcoml
push
jl
movsl
popf
imul
sti
movsl
adc
jae
cmpsl
pusha
rcll
xor
rorb
rorb
adc
jae
and
inc
and
clc
insl
enter
pusha
loopne
pop
std
jl
fdivrs
push
popl
adc
mov
and
lcall
mov
iret
mov
xor
jp
push
fwait
cmpb
add
cmp
lcall
jnp
sbb
ljmp
js
sub
add
mov
jnp
dec
jo
dec
loopne
enter
pusha
out
loop
cmc
mov
ljmp
outsb
lahf
add
idivl
adc
jmp
popf
dec
es
test
adc
ja
adc
lock
cmp
adc
popl
idivb
dec
insb
adc
popl
mov
adc
add
mov
mov
push
adc
cmp
mov
and
ficoml
mov
cmp
dec
arpl
push
repz
fldlg2
jo
dec
dec
pop
add
test
jl
sub
ret
sbb
punpcklbw
xrelease
setle
ljmp
pop
xor
sub
loop
xor
inc
movsl
stos
inc
push
shll
mov
fcoms
dec
popl
movsb
nop
dec
mov
subb
scas
popf
subb
pushf
stos
xchg
mov
and
xchg
inc
test
rorl
mov
lret
pusha
mov
outsl
stos
inc
dec
rcll
mov
fadd
pushf
and
push
sub
shl
add
xchg
popl
jno
push
loopne
loop
adc
mov
dec
inc
dec
insb
pusha
sub
adc
xchg
lret
mov
inc
xor
icebp
data16
roll
rolb
dec
lock
xor
and
test
ljmp
mov
sub
jmp
push
mov
jnp
mov
jg
ffree
fs
xchg
dec
lock
popf
and
xchg
adc
lods
pusha
mov
mov
stc
mov
popa
dec
mov
push
dec
insb
pusha
ljmp
dec
sti
scas
mov
fstps
mov
mov
into
adc
mov
push
imul
dec
cmc
push
mov
inc
popa
dec
push
test
sbb
pop
push
xor
sub
dec
mov
in
xlat
hlt
mov
cmp
cwtl
add
and
cmpb
jo
add
inc
xchg
xor
jo
inc
cmp
out
pop
inc
loope
push
icebp
jp
xor
push
popf
xor
roll
addl
xor
push
xor
xchg
pop
add
xor
jge,pt
lock
inc
pop
jb
mov
adc
outsb
imul
shrb
push
ja
cli
add
lods
sbb
sub
sbb
pop
mov
repnz
mov
je
adc
pop
loopne
push
stos
jae
mov
pop
sbb
and
jge
cmpsb
lock
and
aas
add
mov
sbb
shrl
push
sbb
dec
mov
repnz
lods
mov
cmp
push
mov
adc
mov
xchg
xchg
aaa
pop
sbb
mov
sbb
pop
mov
stos
jbe
adc
xor
xor
jge
push
in
adc
lock
repnz
mov
or
xchg
xchg
sahf
icebp
and
xor
aaa
or
xor
inc
das
fdivrp
ljmp
fistl
shrb
add
and
sub
xchg
add
in
cmpl
fiadds
lret
mov
iret
ljmp
jg
cltd
xchg
inc
and
pop
xchg
push
xor
mov
in
xchg
mov
loop
dec
adc
mov
std
xor
popf
test
sti
mov
add
add
shlb
pusha
cmp
out
push
dec
push
mov
cmp
ret
pop
pop
dec
mov
sub
rolb
pusha
jae
mov
xchg
lods
stc
add
add
sarb
in
int3
das
sub
cmp
xchg
inc
add
adc
lds
in
es
add
lock
xchg
add
dec
push
ret
sbb
outsl
cmp
xor
dec
cmpsb
test
jmp
inc
lods
cmp
ror
cmc
push
cmp
adc
mov
mov
jae
sbb
iret
add
outsb
mov
sub
sub
pop
fists
pusha
mov
mov
add
or
ret
and
push
jmp
mov
xor
bound
cmp
popf
mov
test
sbb
ss
imul
lahf
nop
pop
adc
inc
popf
shrl
adc
mov
data16
xor
cmp
xor
lea
sub
lahf
fimuls
iret
leave
push
push
sbb
or
inc
fistpl
out
sarb
pop
lock
sub
dec
faddl
mov
add
or
mov
add
inc
lds
lahf
aaa
stos
or
insb
mov
sub
pop
in
cmp
into
add
add
and
add
and
hlt
pushf
push
rcrb
sub
sbb
add
into
jne
push
inc
movsl
ja
pop
and
add
rcll
add
aam
fmull
fisubl
lods
outsb
xor
gs
and
adc
sub
mov
rcrl
xor
add
jmp
jb
cmp
aas
xor
push
adc
les
pop
mov
mov
fisubl
nop
push
into
insl
mov
cmp
add
andb
mov
fldenv
fildl
xor
adc
mov
or
and
add
sahf
addb
mov
mov
cli
mov
je
add
cmp
add
mov
add
cmp
out
inc
jne
add
orb
mov
lahf
add
mov
add
addb
add
push
iret
push
inc
push
es
testb
ja
in
mov
orl
mov
push
mov
aad
xor
add
std
mov
add
nop
xabort
xor
push
pop
xchg
cmp
ds
sbb
mov
in
scas
pop
mov
xchg
shrl
and
shlb
hlt
pop
orb
into
mov
xlat
jnp
addr16
add
add
mov
mov
xchg
pop
mov
subb
stc
add
popa
mov
jp
into
es
sbb
jl
push
push
lock
dec
pusha
add
fucom
in
aad
jne
inc
dec
aaa
into
push
cmpsl
pop
in
and
xlat
pop
inc
mov
rcl
sub
lock
mov
or
mov
and
xor
add
or
adc
lret
aaa
mov
mov
xchg
mov
clc
sub
add
out
push
aas
or
jmp
jae
int
adc
clc
pop
mov
test
xchg
shlb
outsb
mov
adc
mov
je
flds
push
enter
mov
incl
sub
popa
and
cmpsb
mov
scas
sub
call
test
ficomps
jo
xchg
fistl
adc
add
sahf
lsl
pop
ret
jo
push
jge
pusha
insl
push
sub
mov
add
lock
push
jnp
icebp
add
jbe
std
sbbl
add
stc
rcrb
andl
add
mov
add
popa
into
lock
add
xchg
push
test
jg
pusha
add
cmp
jo
add
ficompl
push
add
dec
in
add
xor
jg
xorb
push
push
lods
ror
pusha
scas
push
sbb
and
jns
pop
sbb
nop
xchg
lar
movsb
shrb
ret
arpl
insb
test
fucomip
add
data16
push
sub
adc
fstl
test
push
jne
mov
cmc
roll
cltd
jnp
mov
mov
add
icebp
adc
ret
mov
test
cmp
adcl
aaa
jo
std
xchg
pop
sarb
int
ret
jno
add
js
fstpt
icebp
sbb
push
mov
push
jmp
loope
ret
pop
aas
adc
testl
and
add
cld
mov
orl
sbb
cmpsb
loope
aad
push
xor
pop
das
mov
adc
jns
push
xchg
mov
call
add
mul
dec
add
imul
sbb
add
shlb
inc
outsl
movsl
js
add
inc
cmp
in
add
ljmp
loopne
enter
jecxz
syscall
add
pop
pop
in
lods
xlat
jg
add
lock
lahf
addr16
das
cli
cmc
adc
jp
std
mov
xchg
jge
lods
xchg
je
cmp
push
pusha
decl
aam
adc
push
push
xchg
lock
insl
jnp
add
sub
mov
dec
loop
dec
push
add
maxps
push
cs
pop
xor
adc
sbb
xor
sub
cmp
cmp
cmpsl
pusha
addl
aam
movsb
sbb
mov
aas
mov
inc
mov
js
adc
pop
or
test
add
mov
adc
pop
adc
clc
add
inc
jne
dec
pop
enter
stos
inc
je
jecxz
pop
cwtl
mov
cltd
dec
add
pushf
mov
jl
add
jge
dec
add
sub
hlt
add
xor
xchg
and
cmp
mov
mov
add
sbb
inc
jno
jo
rolb
add
mov
pusha
std
push
inc
lret
test
pop
aam
or
add
in
push
js
clc
pop
add
shll
inc
aaa
adc
popf
scas
jp
std
es
dec
inc
cmp
mov
inc
sbb
test
repnz
inc
pop
int3
xlat
loopne
movsl
adc
add
sub
decb
pminsw
testb
stc
pop
pop
sahf
insl
int
mov
lds
jmp
aaa
add
rcl
push
mov
xchg
test
push
adc
add
shlb
adc
das
cmp
add
in
cmpsl
pop
testb
inc
cwtl
and
rcrb
lock
outsb
jo
call
add
stos
xor
cmp
add
outsb
xchg
adc
std
lods
les
and
sbb
repnz
sahf
pop
movsl
jnp
xchg
cld
xor
pop
lret
pop
mov
or
add
inc
xor
sbb
popa
push
inc
dec
adc
loope
lret
add
mov
fwait
pop
pop
push
dec
subb
pop
xor
fidivs
sub
enter
repnz
add
mov
xchg
ds
dec
ja
jno
push
test
add
fdivs
rorl
cmc
hlt
push
sub
out
lods
ret
inc
arpl
jl
arpl
pop
jns
inc
or
add
and
cmpsb
inc
les
pop
fs
rcl
mov
xchg
add
mov
cmpsl
aaa
lods
adc
inc
or
jo
mov
dec
mov
push
dec
add
mov
or
test
sub
and
fcmovbe
add
jmp
add
std
arpl
mov
mov
xor
xadd
pushf
mov
lea
test
push
pop
push
jmp
and
add
sub
aad
ljmp
cltd
push
repnz
and
inc
mov
adc
mov
arpl
lea
daa
xchg
shll
enter
jae
icebp
push
and
out
pusha
inc
bound
cmc
mov
xchg
sub
adc
pop
loop
mov
loopne
and
push
pop
add
mov
xor
sub
insb
aad
cmp
lret
sbbb
add
out
mov
lcall
mov
or
stc
cmp
sub
inc
add
xor
mov
les
add
bound
inc
add
js
lcall
jg
add
stos
ljmpw
popf
inc
pop
cmpsl
repnz
add
insb
int3
movsl
loopne
or
test
add
mov
sbb
inc
add
sub
fcompl
lahf
movsb
cmp
dec
mov
jg
inc
loope
out
sub
cmp
add
mov
fdivr
and
cli
adc
add
mov
add
std
add
push
fbstp
pop
add
mov
cmp
fcoms
pop
and
sub
fildl
imul
add
jo
add
adcb
and
mov
push
add
insb
xchg
inc
add
inc
push
shl
pop
sub
cmp
out
push
mov
inc
subb
pop
out
cs
imul
aad
lock
adc
pop
or
icebp
iret
mov
dec
divl
incb
cmc
xor
jo
and
dec
insl
inc
arpl
jp
jge
add
jbe
out
pop
faddp
cwtl
hlt
add
std
out
stc
push
sub
cltd
and
stos
mov
pop
fldl
rcrl
enter
aas
pop
mov
add
pop
inc
mov
shlb
mov
mov
fsubs
add
dec
jnp
repz
movsl
fld
scas
mov
xbegin
mov
enter
add
jno
sub
popa
orb
mov
loope
mov
xchg
testl
and
sub
addb
cmc
in
inc
pushf
and
nop
stos
add
cld
jno
out
dec
dec
xor
pop
xchg
jle
lock
pushf
xchg
or
nop
ljmp
xor
rclb
xor
cmpsl
imul
xchg
cmp
loopne
jle
add
pop
hlt
dec
adc
and
sbb
in
pop
aas
add
jns
clc
outsb
repz
jo
push
enter
mov
sahf
or
add
rcrb
sub
mov
add
mov
lods
xor
nop
adc
lret
sbb
jle
add
push
push
movsl
mov
ja
dec
or
outsl
dec
icebp
add
pop
iret
out
add
ret
cmp
loop
sarb
arpl
pop
je
push
scas
rcl
jecxz
mov
push
aam
movsl
test
lods
pop
ds
mov
sbb
sbb
addl
in
nop
xchg
psrlq
andb
insb
cmovs
sbb
shl
jae
add
and
stc
shlb
or
mov
lahf
cs
xorl
fisubrl
sub
shlb
jbe
push
inc
add
out
adc
dec
std
pop
add
mov
lods
ror
add
repz
push
cmpps
and
popa
pop
shr
popa
pop
pusha
shll
mov
test
clc
shrl
jmp
xlat
dec
jle
mov
sub
cmp
fisubl
mov
test
les
adc
fildll
aad
jb
gs
add
jmp
push
fildl
mov
aas
or
cmp
adc
icebp
fstl
and
add
lea
addr16
xchg
mov
aas
mov
lods
dec
call
flds
aas
sbb
jmp
xor
fbstp
jnp
pop
in
icebp
dec
add
pushf
out
mov
rolb
lods
mov
jnp
ret
lea
pop
in
inc
sbb
lahf
sti
sbb
sub
xor
mov
xor
push
or
cmp
adc
mov
shll
pop
rorl
mov
popa
lret
push
decl
fisttpl
icebp
sbb
mov
fimuls
into
jecxz
add
test
xor
test
movsb
popf
rcr
mov
enter
stos
pop
in
repnz
bound
xor
shrl
stos
and
dec
sbb
add
sub
aaa
inc
lock
in
loopne
gs
das
stc
pop
es
leave
lock
or
push
xchg
sbb
shlb
sub
pop
sbb
loop
sbb
pop
fs
test
mull
push
ljmp
pop
ja
pop
pop
xchg
shlb
repz
xchg
add
mov
imul
bswap
aaa
fmulp
loope
add
iret
sahf
scas
mov
push
orl
es
cwtl
nop
imul
loopne
dec
lahf
xchg
add
in
add
aad
incl
mov
inc
mov
add
fidivl
and
cmpsb
shlb
inc
jge
jae
dec
adc
stos
ja
sarb
push
popa
pusha
sbb
cmp
cwtl
clc
cmp
test
imul
cmp
nop
and
mov
inc
add
std
into
fcmovne
je
out
lds
inc
dec
push
outsb
or
jle
push
add
push
xchg
dec
pop
add
imul
in
jp
dec
add
in
push
subb
add
xchg
mov
sub
loopne
aas
and
sbb
lea
cmp
cmp
add
or
mov
leave
push
push
inc
or
mov
cmpb
adc
fiaddl
jo
scas
sahf
das
cli
inc
popa
stos
into
icebp
in
mov
or
mov
shll
pushf
push
les
xchg
push
insl
lock
mov
mov
stos
rorb
and
hlt
xor
jle
add
data16
lcall
inc
mov
push
or
add
int
popf
scas
or
dec
aaa
push
pop
test
fildl
xchg
fs
imul
pop
out
adc
jo
jg
sub
add
inc
adc
push
nop
or
in
cmp
loopne
setae
data16
divl
outsl
jno
shrb
aad
push
sahf
cmp
xchg
subb
add
cmpl
outsb
leave
and
inc
mov
clc
mov
int
mov
push
andb
andb
cmp
add
xchg
sbb
insb
xchg
dec
add
sbb
cmp
pop
xchg
add
xor
mov
test
sbbb
pop
xchg
sub
and
iret
rcrl
jno
testb
xor
es
add
addb
into
in
test
add
inc
sub
mov
int3
and
jg
ja
push
xchg
daa
sbb
test
add
mov
icebp
mov
fwait
sbbb
les
in
imul
pop
add
mov
mov
jbe
push
call
in
cltd
add
or
push
sbb
hlt
mov
popf
add
and
push
inc
loope
sbb
and
push
pop
das
sbb
pop
sbb
popf
shll
js
add
pop
push
pusha
adc
jp
push
add
stos
jo
push
mov
and
dec
sub
test
xchg
lret
mov
cmp
add
sub
and
fstl
repnz
jb
loopne
add
andl
test
add
and
fwait
push
subl
sbb
or
movsl
or
inc
pop
add
jae
inc
or
cmp
cmpsl
add
and
mov
xchg
add
fstl
cwtl
add
mov
mov
pop
inc
arpl
pop
test
clc
out
jge
jecxz
jg
pop
adc
mov
gs
roll
adc
in
das
int
add
divl
mov
icebp
jnp
mov
jmp
loop
mov
repnz
pop
and
jae
or
and
fs
lcall
cwtl
popf
xlat
mov
sub
pushf
mov
add
lea
cltd
adc
dec
sbb
adc
enter
mov
mov
stc
mov
clc
inc
push
push
arpl
pop
je
add
mov
mov
jne
jecxz
stos
jp
incb
shl
sub
jo
testb
jnp
add
lret
fisubrl
inc
sarl
roll
clc
jmp
stc
sub
loope
loopne
add
sbbl
mov
fwait
add
iret
cmpsb
fld
add
xor
add
mov
mov
or
mov
sbbb
in
push
jnp
sti
push
mov
int
lret
cmp
add
popf
and
sbb
ret
jle
fistps
nop
adc
popa
or
cli
adcb
cld
js
mov
cli
adc
ficomps
inc
in
cs
outsb
and
sub
add
mov
inc
mov
cmp
add
fst
and
sahf
add
call
push
cs
stc
sbb
mov
fldcw
in
movsl
lcall
int3
jmp
add
cli
mov
mov
mov
xchg
pop
and
xchg
pushf
es
ret
std
jle
inc
push
or
pop
loop
and
hlt
in
sub
lods
scas
sbb
and
mov
cwtl
mov
std
jmp
int
iret
nop
gs
int3
pop
xor
iret
insb
adc
push
cwtl
pop
xchg
popa
xchg
fisubl
mov
addb
mov
pop
dec
adc
sbb
out
add
stos
add
jge
pop
loop
add
arpl
mov
daa
cmp
mov
and
dec
or
mov
pop
lcall
add
div
pop
jmp
scas
dec
in
push
add
add
sbb
jg
rorl
dec
push
sbb
mov
inc
das
andb
int
dec
fbld
jge
add
lods
imul
nop
pop
aam
cld
dec
cmp
test
add
std
nop
test
iret
lea
dec
repz
pop
cli
pop
test
dec
jns
add
popf
call
mov
pop
pop
inc
out
ljmp
sbbb
push
sub
dec
enter
int3
and
pop
xor
push
add
movsl
mov
push
add
aas
inc
ret
movsb
aam
cmp
les
or
pusha
leave
loop
in
jmp
mov
adc
pop
sbb
movsl
fsubrl
cmpsb
or
and
lret
jle
sti
sbb
push
jmp
nop
mov
les
pop
inc
insb
add
mov
and
or
dec
int
sub
adc
jmp
sub
hlt
cmp
jle
add
aas
icebp
inc
orps
cmp
jecxz
test
nop
add
mov
test
xchg
out
add
mov
frstor
push
or
pop
sbbb
int3
addr16
das
xlat
sbb
mov
lods
mov
aam
dec
add
lcall
pop
aad
mov
cmpsb
shlb
mov
enter
add
mov
sub
rol
mov
pushf
test
rorl
rolb
into
lock
xor
inc
add
xchg
fldenv
ljmp
push
adcl
pop
cmp
dec
jo
add
test
out
lcall
xor
add
enter
push
add
mov
lcall
cmovo
inc
enter
add
add
jbe
loop
inc
adc
inc
mov
ljmp
loope
jno
mov
or
push
ror
xor
mov
leave
add
pop
dec
insb
call
dec
insl
aam
pusha
dec
xchg
cmpsb
pop
add
in
insb
or
int3
cmpsb
add
movsb
pop
cmc
leave
mov
dec
add
xchg
test
or
xor
xchg
or
push
lret
jo
add
mov
sbb
jl
icebp
or
loop
shrb
pop
add
or
cmp
rolb
in
cwtl
dec
add
jmp
gs
xor
in
test
xor
push
test
cld
cmpsl
icebp
ret
sbb
scas
addr16
sub
mov
cmpsl
setle
cli
cmp
fcom
add
sub
adc
mov
sbb
jmp
enter
mov
add
inc
loope
jl
push
mov
sbb
inc
add
jo
sahf
fs
mov
push
sbb
stos
cmp
in
in
sbb
ds
add
js
jbe
mov
stc
movsb
add
ljmp
add
jns
pop
lods
xchg
enter
push
adc
push
imulb
lret
mov
std
mov
add
test
hlt
cmp
adc
mov
mov
insl
int3
jle
add
sbb
rolb
sub
xchg
and
in
mov
ret
iret
std
mov
xchg
aam
flds
xor
push
xchg
push
add
inc
mov
push
mov
pop
cs
ja
add
jne
loopne
std
pusha
add
sahf
jg
xchg
pop
or
fsts
stos
into
out
lahf
add
lcall
add
iret
popf
ret
std
call
stc
je
int3
add
and
mov
call
adc
pop
or
inc
sarb
sub
fiadds
in
sahf
jmp
fldenv
sbb
mov
insl
or
and
xor
movb
pop
adc
mov
repz
sub
movsl
jae
out
pop
jns
add
pop
ret
in
lret
cmpsl
mov
ret
jp
xchg
mov
fwait
dec
and
mov
cmpsb
icebp
subb
add
shl
dec
lahf
xor
xor
jmp
int
push
jnp
add
repnz
cli
outsl
sub
shll
add
push
push
mov
js
add
jno
pop
pop
les
bswap
aas
pusha
jb
mov
sbb
add
scas
mov
rcrl
or
fimull
ficompl
loopne
mov
mov
and
and
daa
add
push
cmp
add
xchg
xchg
lods
fstpt
add
int3
ljmp
loopne
add
xchg
insl
jg
roll
jle
xor
scas
inc
out
loopne
ret
outsl
lcall
out
aaa
add
stc
jmp
cmp
cmp
repnz
xor
shlb
inc
or
xchg
loope
cmp
int
sub
mov
lahf
in
mov
scas
ds
dec
mov
call
cmpsb
in
add
loope
and
xchg
add
sbb
mov
pop
dec
mov
sbb
or
int
and
add
in
pop
xchg
cmp
pop
mov
aad
cmp
enter
lods
fwait
inc
and
xor
add
popa
dec
cmp
xor
sbb
hlt
sbb
pop
push
popf
rcrb
iret
jl
jo
mov
or
pushf
mov
push
mov
in
pop
push
enter
xchg
cmpsl
scas
mov
rcrb
outsb
xchg
push
cltd
cli
cmp
aas
mov
add
lret
in
jge
jo
add
aam
mov
idivl
adc
clc
add
mov
out
jo
inc
pop
or
add
cltd
cs
adc
scas
inc
sbb
or
test
pop
out
xor
add
inc
xlat
rolb
adc
push
xorl
imul
sub
lods
iret
call
ret
std
into
pop
add
jne
loop
pusha
push
mov
jb
cmp
popf
daa
xchg
adc
pop
daa
add
mov
jbe
xor
es
mov
lea
xchg
sbb
mov
mov
cs
mov
add
outsl
mov
cmp
jl
movsb
and
push
cld
sbb
pop
sbbb
roll
aaa
lahf
add
jmp
cmpsb
add
stos
aad
and
sarl
sar
or
cmp
adc
fists
idivb
add
cmp
add
xchg
popf
inc
stos
cwtl
adc
sbb
adc
fs
cmp
cmp
inc
addb
dec
add
rcll
pop
or
scas
xorb
test
aaa
cld
loope
pop
push
pop
das
pop
roll
pop
mov
shll
jno
jg
je
movsb
or
xchg
int
mov
push
shl
cld
xchg
test
cmp
lods
loopne
test
or
pop
xchg
dec
leave
jns
jo
lock
loope
ja
mov
int
xorb
sti
add
popa
add
jb
xchg
cmp
in
pop
pop
add
adc
es
add
xchg
mov
ljmp
cltd
push
fcoms
jle
add
pop
xchg
add
inc
add
pop
push
lret
or
pop
jle
add
and
ljmp
hlt
enter
add
aas
jbe
in
dec
into
cmp
or
int3
cmp
pop
jecxz
or
inc
aas
out
call
addl
stos
lahf
sub
add
and
cmp
ret
les
inc
ret
mov
jae
pop
pushf
inc
negb
pop
icebp
ds
add
adcl
fwait
xchg
subb
out
push
jge
and
xor
mov
fidivrl
testb
ljmp
int3
cmp
add
shrb
inc
out
popl
sub
jae
cs
mov
and
rorl
pop
int3
cmp
mov
pop
add
mov
jp
add
mov
stc
loop
push
add
mov
movsl
and
adc
mov
push
add
lret
dec
cmp
dec
inc
sub
adc
or
stos
dec
scas
jae
mov
addl
dec
repnz
xor
es
mov
fnsave
nop
add
push
adc
stos
arpl
test
je
mov
js
jp
sub
ss
shll
pop
leave
lock
in
cmpl
push
xlat
ss
icebp
add
mov
inc
setl
gs
rolb
push
mov
fimull
sbb
cmpsl
add
enter
sbb
pop
push
adc
aad
add
rcrb
int3
adc
jg
add
and
xchg
add
add
adc
cmp
xchg
xchg
aam
loopne
add
cmpsb
adc
jecxz
mov
mov
add
lods
fs
xchg
add
imul
mov
xorb
fsts
xchg
iret
add
xchg
push
roll
sahf
xor
inc
jb
scas
cmc
lods
iret
push
xchg
icebp
arpl
ficoml
sub
jo
add
xchg
sarl
jl
mov
ss
push
mov
pop
add
and
cmp
add
add
mov
imul
scas
adc
insl
and
push
pushf
hlt
fildll
adc
pusha
shl
mov
pop
aaa
cmp
mov
lock
pop
mov
sbb
inc
repz
sub
inc
in
lcall
sbb
dec
xor
pop
sub
jne
sub
inc
xor
les
pop
mov
loopne
imul
xor
fiaddl
jae
mov
add
cwtl
xor
push
xchg
add
push
and
rcrb
jge
inc
or
mov
jp
sub
cwtl
jl
xor
movsl
enter
add
ds
es
xor
fnstsw
movsl
test
rorb
into
pop
in
jae
loop
xchg
pop
aam
pusha
adc
dec
add
cltd
jge
sub
dec
movsb
add
jmp
mov
out
adc
xchg
dec
lahf
rol
aad
sub
jno
add
sbb
in
cmovp
pop
dec
add
push
nop
cmp
sub
mov
rcrb
arpl
dec
loopne
add
leave
aas
std
pusha
fs
add
in
mov
add
mov
ret
pop
addr16
cltd
lret
adc
jb
das
sti
add
fsts
daa
cmp
aaa
cld
add
push
xchg
or
aaa
nop
inc
pop
es
int
mov
shlb
aam
inc
add
mov
adc
mov
xor
rol
fwait
inc
inc
add
testl
dec
jge
cs
outsl
xchg
dec
xchg
out
scas
hlt
mov
push
lret
add
add
adc
add
sbbb
std
lds
fwait
mov
test
mov
inc
dec
lret
push
fwait
imul
js
mov
lods
sbb
jle
lock
ficoms
cmpsl
add
daa
cmp
and
xchg
and
sahf
pop
fisttpl
loope
pop
pop
jl
add
add
add
je
cld
sti
pusha
pusha
jge
addb
rcrl
push
push
insl
cmpsb
add
pop
push
fsubrl
xchg
stos
mov
sbb
outsl
add
and
btrl
enter
dec
cld
add
mov
mov
fsubrs
jle
xor
mov
jmp
push
xor
repz
jle
add
pop
push
inc
push
mov
pop
xchg
jnp
adc
and
pop
xor
pop
subb
mov
stc
inc
sbb
insl
adc
aad
jg
pop
out
sub
bound
add
popa
jmp
leave
push
mov
and
xchg
lds
add
inc
mov
mov
cmp
bound
fbld
sbb
add
shrb
adc
add
jle
add
fistpll
js
sbb
jno
push
adc
lahf
addb
lods
test
aad
inc
ljmp
in
or
ss
sub
fwait
push
cmp
add
pop
andb
sbb
cmp
sahf
aam
out
jae
sbb
adc
adc
xor
mov
sub
into
jo
mov
pushf
repz
dec
fdivs
add
std
add
push
jns
testb
gs
ljmp
mov
call
sub
fldt
and
dec
cmp
xchg
push
mov
pusha
imul
aad
mov
paddusw
pop
loopne
jp
push
push
loop
jno
test
push
mov
inc
mov
clc
pop
je
out
push
mov
clc
add
outsb
add
add
xchg
xchg
enter
sub
andb
popa
mov
inc
adc
sbb
loopne
orl
mov
into
cmova
nop
sbb
popa
sbb
xor
mov
lret
push
movsl
cmpl
shlb
add
fwait
pusha
inc
add
or
out
pop
ror
je
add
sarb
dec
push
les
nop
add
push
push
nop
fwait
adc
lds
nop
and
mov
orb
xor
mov
sbb
pop
jne
adc
out
jns
lea
mov
loopne
jb
add
rclb
mov
mov
xchg
popl
and
lcall
push
inc
lock
inc
or
jecxz
dec
adc
add
mov
xor
add
mov
rolb
aas
fisubrl
jbe
inc
cmp
adc
sbb
mov
mull
ret
xchg
mov
inc
cld
cmp
add
dec
lods
push
mov
ret
sub
cmp
jp
add
xchg
in
add
sub
and
imul
repnz
add
cmp
lret
add
or
add
jae
jl
mov
add
addr16
mov
emms
divl
mov
adc
mov
mov
dec
pop
or
add
adc
test
clc
les
jb
je
data16
add
popa
leave
aad
jno
call
add
in
out
mov
push
insl
sub
sbb
data16
mov
inc
sub
hlt
fadd
in
in
adc
cwtl
cmpsl
jae
jo
out
movsl
aas
pop
sarb
dec
jle
cmp
lea
pop
jecxz
mov
scas
cmp
add
lds
inc
add
mov
dec
cs
mov
repnz
add
adcb
and
xchg
les
cmp
fldt
in
popl
or
clc
fldenv
rorl
xchg
inc
out
outsb
add
cmpb
fcmovb
sub
clc
add
sbb
push
or
inc
mov
hlt
push
and
les
xchg
add
sub
mov
ja
cmp
popa
xchg
add
mov
mov
cli
cltd
add
loope
lahf
mov
adc
add
add
cld
lcall
dec
inc
fcoms
add
enter
jl
or
add
call
add
sbb
add
sahf
or
dec
adc
cs
push
pushf
cmpsl
mov
mov
jp
cmp
jnp
add
clc
cli
pop
icebp
sbb
xchg
push
sbb
sti
xchg
xlat
lock
and
out
dec
add
jp
pop
add
mov
ja
pop
test
ljmp
aaa
pop
fwait
movsb
dec
jb
jge
xlat
pusha
ret
sbb
and
jne
addr16
pop
call
push
out
sbb
mov
loope
sub
and
push
jle
int
nop
imul
add
mov
je
rol
rorb
movsl
popa
aam
add
sbb
sbb
ljmp
andb
lcall
jle
out
inc
jb
or
sub
popf
lods
push
dec
js
popa
add
pop
mov
fwait
jo
add
pushf
call
adc
pop
in
pop
mov
test
push
pop
xor
mov
outsb
jno
ss
mov
cmp
mov
pop
pop
xchg
adc
insl
cmp
fwait
cs
mov
pusha
daa
mov
add
sub
shld
bound
dec
and
push
mov
cli
add
xor
aad
fxch
aas
dec
insb
push
cmp
shll
mov
loopne
test
dec
cmp
ret
gs
jl
dec
mov
ds
push
fs
xorb
andb
push
push
mov
lods
cmpsl
or
sub
push
scas
out
cmp
add
add
jg
ja
sbb
mov
repz
insb
sub
inc
addr16
andb
fildl
hlt
sbb
stos
insl
sub
ret
scas
mov
les
add
shlb
inc
lsl
rorb
out
dec
int
adc
dec
add
jo
jbe
je
insl
add
cltd
push
sbb
mov
or
stos
ret
mov
mov
xor
loop
mov
adc
xchg
cmp
push
pop
mov
aaa
add
jo
popf
cmp
sub
callw
add
in
stos
sub
js
fstp
in
in
add
mov
cs
test
jb
inc
mulb
int
cmp
aaa
adc
jb
pushf
mov
cmp
idivb
add
pop
push
ljmp
push
repz
add
call
cmpb
jne
repnz
add
and
mov
ss
jno
cltd
lea
cmpl
pop
cmp
sub
add
inc
ja
mov
sub
pusha
cmp
dec
xchg
sbb
inc
mov
cltd
jne
adc
add
mov
shl
ror
mov
or
or
or
mov
cmp
loopne
mov
sub
stc
daa
fs
and
pop
xor
add
pop
xor
mov
sub
mov
or
lods
scas
mov
add
lds
xor
clc
xor
and
mov
xchg
or
dec
mov
fisttpll
cmp
mov
push
cmc
sbb
and
pop
xchg
les
mov
or
sbb
add
jb
push
adc
lahf
jge
clc
cmpsb
add
sub
add
mov
push
insb
jns
dec
mov
adc
adc
and
xor
mov
dec
cmp
add
in
add
bound
outsl
pop
fwait
clc
outsb
xor
nop
add
add
mov
sbb
sbb
cmp
xchg
jge
mov
or
mov
push
mov
xchg
loopne
mov
jne
mov
mov
push
mov
inc
ja
mov
ja
lock
fcomp
and
mov
les
adc
cld
ds
mov
aam
sbb
sub
andl
ror
add
in
jb
out
jbe
push
add
pop
and
sbb
call
ds
xchg
mov
add
lds
mov
sbb
clc
or
shrb
sti
scas
jp
inc
clc
cmp
movsl
push
test
xor
and
mov
data16
orb
mov
test
adc
cmp
sub
inc
lea
dec
xor
rcll
dec
inc
xchg
pop
adc
jno
in
add
or
dec
je
lock
sbb
add
dec
and
or
jno
mov
loope
cmp
jecxz
inc
cltd
insl
push
mov
test
lcall
mov
lret
les
movsl
loop
test
inc
mov
pop
cmp
jo
popa
add
pop
shlb
cmp
jbe
xchg
push
sarb
cmp
push
cmp
push
add
push
adc
mov
int3
in
divb
adc
sub
or
scas
mulb
and
into
test
test
jb
xchg
xor
cmp
or
out
scas
jno
ds
push
addb
es
test
cmp
xor
and
lret
add
das
testl
jecxz
jns
fdivl
fmuls
ret
es
movsb
or
or
stc
jne
cmpsb
pop
repnz
sbb
push
dec
leave
je,pn
filds
pop
sahf
fwait
shl
jecxz
js
adc
cmp
fs
sub
cmp
js
loopne
in
ret
adcl
add
lods
loopne
mov
cmp
add
cltd
xchg
pop
or
add
push
shr
dec
mov
add
xor
push
aam
push
add
mov
shlb
aaa
mov
dec
mov
push
push
pop
push
inc
fldl
jmp
js
aas
clc
xchg
sbb
scas
lods
inc
xchg
pop
ljmp
xor
mov
and
shll
std
push
pop
jns
cmpl
imul
imull
mov
mov
ds
mov
mov
sbb
push
inc
arpl
cmp
or
sbb
xchg
add
sub
out
insb
filds
and
pop
dec
int3
cmpsl
pop
or
and
sbb
shlb
neg
mov
or
jb
clc
test
sub
inc
mov
add
testl
imul
inc
push
inc
les
and
popf
jae
add
mov
xchg
std
fwait
mov
cmp
sbb
push
jne
sbb
sbb
movsl
dec
xor
pusha
stos
cmp
jbe
xchg
add
fcos
movzbl
loopne
cwtl
mov
aas
rcll
add
lods
push
and
or
add
dec
insb
addb
lret
aaa
dec
sub
mov
or
add
jl
cwtl
and
js
push
sbb
shlb
add
sub
mov
or
out
pop
add
push
loopne
lea
mov
inc
cmp
fucomp
pushf
adc
subb
jmp
rcrb
sub
in
pushf
jecxz
or
cmp
sahf
push
adc
dec
add
sub
std
fiaddl
rorb
enter
imul
and
int
iret
mov
imul
adc
mov
int3
pop
andb
sbb
call
adc
psubb
mov
and
add
adc
mov
test
outsb
xlat
xchg
dec
addr16
cwtl
mov
jae
add
repz
sahf
adc
aaa
push
xchg
int3
sti
js
ret
mov
cmp
in
hlt
fisubl
jp
add
or
into
xchg
pushf
rcl
sbb
or
pop
add
jl
xchg
sbb
jo
cmp
mov
inc
xor
iret
xor
pop
adc
lea
xor
add
pop
js
fists
test
cli
xor
mov
mov
jmp
mov
es
xchg
movsb
inc
scas
out
cmpsb
mov
xor
add
add
unpcklps
jb
sub
mov
xchg
inc
and
pusha
push
add
pop
pusha
test
or
test
es
int3
xchg
mov
xchg
cmp
out
pusha
or
pop
in
or
sub
push
nop
add
lods
push
cmp
js
and
pop
hlt
sti
lds
or
add
lea
add
jge
add
cmpsb
loopne
or
roll
dec
loopne
mov
xlat
and
pop
inc
xchg
lods
and
inc
call
mov
cli
add
mov
mov
repnz
cltd
mov
sarb
and
adcl
xor
jne
mov
mov
push
dec
in
int3
test
inc
ret
push
fcoml
shlb
ret
pusha
or
jmp
int
xchg
or
sbb
xchg
nop
std
sbb
nop
movsb
mov
mov
dec
add
sbb
push
xor
testb
add
sbb
and
xchg
cld
pop
loope
sbb
jecxz
or
nop
icebp
enter
xor
sbb
and
nop
mov
xor
or
adc
mov
jne
shrl
movb
cmp
ja
insb
mov
scas
in
test
push
jbe
mov
cld
add
jo
cmp
sbbb
lods
lret
cmp
movsl
enter
sti
es
aam
add
adc
add
fidivrs
mov
int3
icebp
sbb
sarb
andl
add
cmp
push
fmuls
jg
fsts
out
js
pop
dec
cltd
jecxz
mov
sub
or
push
mov
mov
inc
cld
ss
and
lea
cmp
fldt
push
sbb
pop
mov
mov
sbbl
push
rol
mov
pusha
add
xor
dec
inc
add
xchg
dec
mov
cltd
dec
cmp
push
ja
cs
jp
cmp
add
or
movsb
adc
add
cmp
cmp
add
daa
xor
out
imul
pop
lret
jmp
fildl
outsb
in
xorb
inc
adc
test
loop
mov
inc
push
scas
adc
cld
les
inc
int
pop
pushf
dec
add
push
addb
shlb
inc
pop
add
test
jo
mov
es
cmp
mov
cmp
dec
loopne
xor
js
add
popa
add
or
and
imul
movsl
adc
aas
mov
add
xor
xchg
or
push
or
jge
xchg
popf
mov
setl
sarl
je
push
xorb
or
push
lods
scas
pusha
cwtl
pop
mov
or
mov
popa
xor
cs
push
push
shl
mov
add
pop
fcoms
add
fs
jns
push
add
jmp
sbb
ja
ds
fisubs
mov
lret
pop
invlpg
stos
add
and
pop
add
cmc
pop
add
popf
push
mov
loopne
sub
pusha
out
xor
rcrl
adc
test
xor
int3
int3
add
xchg
jp
push
test
push
xor
orb
dec
js
scas
cmp
or
js
inc
ds
pop
pop
mov
dec
or
mov
mov
cmp
add
cmp
add
movsl
in
cmp
movsl
cld
jo
pop
cld
mov
enter
hlt
inc
push
sub
loop
push
adcb
aam
sub
fstps
call
enter
dec
into
adc
iret
mov
xor
adc
faddl
push
mov
add
jo
sbb
nop
cld
jno
xor
mov
in
xchg
inc
or
push
push
fmull
sbb
cmp
fmuls
popa
cmp
xchg
test
pushf
adc
add
scas
and
test
xlat
add
pop
imul
add
mov
icebp
rcll
rolb
in
sbb
and
or
xchg
mov
daa
nop
or
push
loopne
scas
cltd
dec
add
and
xor
loope
mov
jno
mov
outsb
andl
imul
repnz
sub
js
adc
pop
adc
pushf
or
add
aad
mov
inc
add
aaa
negb
xchg
cmpb
push
add
aaa
addr16
adc
bound
imul
xchg
pop
lret
out
gs
icebp
add
mov
ret
mov
movsl
fadds
mov
push
add
inc
test
outsl
repnz
sub
add
lea
push
ret
icebp
sbb
push
sti
add
pop
pop
shl
shlb
jle
int3
lock
and
inc
and
dec
and
add
jo
movsl
dec
aam
add
mov
add
shr
jp
stc
xor
cvtps2pi
shlb
outsb
pop
xchg
mov
and
cmc
out
add
loope
adc
fistps
jbe
decb
mov
nop
and
cmp
push
loop
rcrb
out
or
mov
stos
push
mov
lds
inc
and
cmp
xor
push
pop
jns
push
jmp
add
das
mov
add
mov
and
mov
xadd
sahf
cwtl
inc
sub
and
imul
inc
push
sub
inc
adc
int
dec
add
mov
push
rol
mov
mov
dec
push
rorb
xor
push
mov
jmp
inc
xchg
sub
pop
sbb
push
jl
and
popf
rcrb
cs
pusha
adc
cmc
and
stos
xor
movl
lods
push
xor
in
xchg
add
push
xor
dec
or
jb
nop
add
fucompp
shl
add
sub
popa
add
jge
add
xchg
loopne
add
inc
sub
in
dec
loopne
iret
js
shrl
loope
push
int3
mov
add
xor
inc
or
mov
add
xor
add
jge
mov
pop
add
xor
jns
test
xchg
cmp
cmpsl
push
int3
fiaddl
scas
push
xchg
mov
add
popa
imulb
add
xor
fcompl
jne
add
sbb
mov
lea
cmp
test
sbb
cmpsb
outsb
sbb
cmp
cmp
mov
jnp
add
in
dec
les
imul
fidivrs
ss
mov
pop
ret
add
push
xchg
cmp
add
lret
mov
pop
addl
mov
mov
mov
jnp
push
and
btr
faddl
rolb
mov
and
loopne
cwtl
mov
cmpsb
add
jmp
jge
cmp
sbb
cld
add
bnd
nop
cmp
int
js
jne
lods
or
add
mov
lds
imul
sti
cs
and
clc
push
add
sub
fldl
dec
push
mov
sbb
flds
in
dec
xor
mov
cli
xor
cmp
pop
pop
mov
jle
mov
add
fdivl
loop
in
dec
or
sbb
add
mov
xor
mov
int
sbb
std
add
ljmp
add
popf
scas
jg
or
jge
sbb
aad
xlat
add
test
and
out
sbb
sub
add
rorb
loop
sbb
out
mov
add
outsl
es
je
mov
mov
and
cmpsb
pop
add
decb
xor
ret
add
movsb
imul
xchg
xchg
int3
or
incl
jecxz
cmp
ret
jg
pop
xor
and
shlb
dec
movb
notb
add
rcr
jl
add
outsl
scas
cld
nop
inc
push
xor
mov
out
add
mov
dec
xorb
inc
add
add
or
push
notb
pop
push
sbb
mov
xchg
add
xchg
push
inc
xor
jnp
adc
in
or
lods
add
out
pop
push
add
lea
and
je
jecxz
pop
inc
inc
notl
stc
add
test
ljmp
add
dec
xor
mov
or
sti
xor
add
filds
lcall
xchg
cmpsb
add
dec
jp
lret
dec
rorb
frstor
mov
dec
cmp
icebp
pxor
xchg
pushf
and
data16
sbb
fisubs
add
xor
lock
mov
out
add
negb
int
daa
add
lods
mov
cmpl
jo
pop
mov
add
pop
pop
out
sub
insb
mov
into
roll
dec
mov
fisttps
mov
xchg
add
lds
clc
or
enter
out
pusha
int3
mov
sbb
in
loop
dec
jl
or
clc
and
add
mov
mov
int
add
mov
out
xor
in
push
push
sub
or
aam
cwtl
repnz
or
or
add
lock
ret
push
push
scas
dec
cmpsb
cmp
orb
mov
add
scas
add
arpl
int3
pop
xor
js
je
mov
add
subb
sbb
and
jnp
roll
jecxz
cmp
shlb
scas
adc
incb
xor
cmp
flds
imul
adc
sub
hlt
inc
dec
add
or
or
cli
cmp
movsb
jne
xchg
mov
aaa
lock
psubw
dec
pusha
or
sbb
clc
xchg
jb
push
add
into
xchg
add
cmp
and
lds
jns
sbb
add
sub
add
loopne
add
sbb
mov
rcrb
mov
adcb
add
sub
or
lock
add
push
cwtl
leave
pop
add
pop
mov
call
push
sbb
shl
mov
add
adc
js
mov
adc
pusha
imul
pop
lcall
xor
jp
stos
or
pop
add
jnp
add
add
daa
subl
adc
lcall
xor
dec
add
add
or
aad
pop
xlat
sub
inc
ret
xchg
xor
daa
int3
or
ficompl
mov
cmp
subl
adc
or
dec
fsubrl
ret
and
ja
iret
add
and
xor
add
mov
inc
add
stos
jg
mov
push
cmpsb
arpl
add
push
mov
add
in
je
sub
xchg
add
rcll
pop
add
jb
in
mov
adc
daa
add
fsubs
andb
add
mov
rcrl
call
or
incl
scas
cmpb
mov
push
add
add
roll
jbe
insb
xorb
adc
out
add
dec
pop
and
mov
push
push
or
jb
sbb
sti
ds
sub
mov
pushf
xchg
xor
and
jb
adc
add
or
sub
pop
cmpsb
enter
popf
lock
scas
imul
lea
ret
or
lods
add
adc
incb
add
jns
jne
hlt
prefetchw
jp
daa
jmp
jb
push
jbe
xor
dec
pop
push
xchg
idivl
push
orb
insl
add
fwait
jnp
repnz
add
jns
lea
xor
pop
mov
ljmp
popa
test
cs
lock
jno
add
std
mov
add
mov
and
sahf
outsl
ret
mov
loope
pop
mov
fidivrs
add
cmpsl
je
js
dec
dec
add
cmp
lahf
push
sbb
add
jl
jae
into
bound
adc
cmp
cmp
stc
add
sbb
jmp
stos
mov
cmp
xor
je
mov
cmp
xor
in
dec
sub
cmpsl
mov
push
scas
pop
and
je
cmp
testb
and
mov
clc
or
mov
or
inc
and
sti
test
popf
jb
cmp
add
test
or
dec
push
rcr
movsb
sti
and
mov
mov
cwtl
addl
and
scas
arpl
ds
xor
pushf
cmp
add
gs
jle
jo
mov
pop
push
into
and
mov
lea
hlt
movl
push
sub
jg
add
testl
add
xchg
popa
lds
dec
rcrl
test
adc
ja
pop
pop
cmpsl
in
in
mov
add
and
push
mov
stc
mul
dec
adc
insl
lea
fstpl
adc
aam
adc
jle
cmp
xchg
arpl
adc
test
add
lahf
pop
xor
xadd
pop
mov
fwait
mov
or
add
pop
mov
rclb
push
dec
push
ja
and
xchg
cmc
mov
mov
add
loopne
add
rcr
addr16
fidivrs
add
es
jns
stos
add
movsb
je
add
jecxz
aaa
out
js
les
popf
cltd
int3
pop
div
jg
mov
xor
add
add
adc
mov
jle
push
roll
add
mov
enter
call
inc
dec
mov
cmp
mov
push
aaa
jo
or
cmpsl
inc
add
mov
pusha
popf
pusha
dec
js
lods
add
sub
or
xchg
aas
arpl
mov
ja
push
daa
fistps
mov
int
add
aad
scas
lsl
mov
jne
add
adc
cmp
sub
into
es
push
lock
cmpps
add
xchg
in
sbb
rol
lods
jne
xor
dec
js
imul
stos
sahf
push
add
in
aam
mov
leave
cmp
add
test
movsb
cmp
mov
lcall
out
pop
popa
push
lea
sarb
sub
dec
mov
add
movsl
pushf
leave
fstpt
sbb
addb
enter
add
adc
ret
add
sbb
jo
sub
push
leave
stc
shlb
xor
insb
mov
lahf
cs
int3
mov
mov
ja
cmpb
nop
xchg
xchg
mov
movsb
sbb
xchg
mov
or
dec
bound
roll
jle
jno
push
loope
in
sbb
xchg
lcall
add
sub
sub
xchg
ficomps
pop
in
or
mov
fldl
ret
xor
adc
aas
xor
jmp
adc
jbe
movb
lds
sti
cmp
jb
ret
mov
push
push
push
mov
lret
pop
ret
data16
js
pushf
mov
pop
shlb
add
sbb
mov
mov
cli
leave
dec
add
scas
js
enter
divb
pop
xor
pop
daa
outsb
cmp
push
les
adc
and
push
stc
inc
cld
sub
sbbb
add
das
or
sub
ficoms
iret
push
add
aam
inc
add
loope
ficoml
into
sahf
mov
mov
addr16
add
mov
add
xor
scas
lods
add
push
lock
test
push
add
cmp
sbbl
inc
mov
cmpsl
out
add
xor
pop
adc
mov
inc
das
nop
movsl
jb
add
pushl
pop
inc
enter
push
pushf
cmp
dec
movl
xchg
xor
addr16
add
mov
cmp
inc
sbb
add
mov
outsb
notb
jnp
cmp
mov
rorl
mov
pop
fsubrs
es
shl
movb
mov
add
cld
add
add
rcrb
test
mov
bts
add
test
pop
add
stos
xchg
test
or
add
inc
shrb
fildl
sub
clc
out
adc
daa
es
adc
and
aaa
mov
sbb
mov
out
sbb
pop
add
xor
in
sarl
stos
cmp
inc
pop
cltd
out
pop
inc
repnz
and
add
xchg
push
pop
push
fidivrl
pop
aas
stc
icebp
jl
lret
and
ljmp
inc
or
mov
mov
and
pop
jns
leave
shl
cmp
ljmp
or
dec
add
xchg
test
dec
loopne
add
mov
inc
or
js
ja
aaa
xor
sub
or
scas
movsb
divb
push
inc
cmp
mov
mov
push
mov
xchg
enter
fdiv
inc
pop
cli
popa
cs
pop
push
jne
lods
movl
dec
xchg
cld
mov
and
addl
int3
clc
sub
jae
sarl
sbb
jg
shlb
cmpsl
xor
testl
fiaddl
jbe
out
sub
decl
jmp
and
dec
in
pusha
push
push
add
ret
xor
roll
push
push
ret
xchg
cmp
or
xchg
nop
nop
lods
fwait
add
ret
in
add
rol
addl
into
jg
verw
popf
pop
adc
or
cmpb
lods
add
lods
outsb
push
add
pusha
jae
adc
push
enter
inc
rolb
add
call
mov
push
sub
jnp
sub
mov
inc
mov
out
loope
loopne
add
sbb
xor
jne
test
dec
adc
fs
cmp
gs
adc
sub
loope
movb
fs
aaa
xor
arpl
enter
mov
adc
mov
lock
mov
sub
add
push
and
jnp
call
push
mov
xchg
jle
mov
jmp
fstp
jb
push
adc
rorl
in
dec
lock
fcom
push
add
push
pop
inc
cwtl
loopne
mov
cmpsl
imul
cmp
inc
mov
push
inc
ret
mov
mov
mov
push
push
pop
add
pop
cmp
int
test
mov
lea
lds
jbe
fldt
jmp
arpl
hlt
out
js
pusha
fwait
cwtl
and
mov
iret
cmp
sub
mov
mov
add
cli
pop
and
adcl
add
push
push
imul
sbb
sub
jns
adc
nop
sbb
adc
and
ficompl
mov
pop
sub
cmpsb
cmp
rclb
leave
imul
or
adc
add
jg
add
mov
imul
and
jecxz
or
andl
lea
pop
xor
fsubp
push
jbe
inc
andb
adc
dec
out
in
add
and
push
xor
out
lea
nop
jg
ds
mov
sbbb
cld
out
add
jmp
ret
cli
aas
loopne
pop
adc
pmuludq
sbb
scas
push
in
pop
popa
mov
add
push
jbe
add
sub
xchg
pop
or
mov
pop
mov
pushf
jns
pushf
sub
es
adc
inc
daa
add
add
out
das
xchg
loopne
xchg
outsl
lret
adc
rorl
pusha
rolb
and
std
dec
xchg
shrb
mov
pop
push
popf
mov
cmp
addr16
inc
test
pop
scas
mov
xor
ficomps
ljmp
jns
fmull
out
nop
stc
enter
mov
andb
es
rorb
andl
or
and
or
push
add
loopne
lcall
xor
je
add
xchg
ds
ja
dec
pop
add
dec
clc
mov
add
ffree
cs
pop
push
push
jecxz
mov
leave
icebp
mov
cmp
push
filds
daa
xor
lock
sub
add
xchg
add
sbb
pushf
iret
icebp
cmp
lea
mov
lds
fcoms
je
add
int
aad
es
out
push
push
lret
mov
xor
adc
lea
rcll
xchg
fcoml
dec
push
fists
pusha
add
lods
cmpl
cwtl
sbb
fcomps
mov
add
dec
cmovs
mov
repz
lds
pop
lods
in
loopne
in
aad
test
push
pop
jbe
dec
rorb
xchg
rolb
adc
ret
out
subb
or
add
dec
shll
pusha
les
call
sub
hlt
xor
icebp
push
mov
add
pop
add
add
jp
int3
or
rcrl
rorl
sub
mov
mov
adc
add
adcl
xchg
xchg
pop
and
or
mov
in
ds
test
mov
push
jnp
jae
cld
cmp
push
test
dec
dec
mov
xchg
and
add
popa
daa
jmp
call
mov
fs
shlb
jmp
sub
adc
sbb
inc
add
add
mov
cmp
add
inc
and
cmp
push
orb
fnstenv
sbb
mov
or
int
sbb
cmp
call
sub
cmc
sbb
add
sahf
aad
dec
mov
adc
dec
dec
add
mov
xchg
jp
add
cmpsb
and
pop
pusha
cmp
or
aas
add
sbb
lcall
into
call
lret
repnz
das
dec
inc
sbb
fidivl
sahf
cmp
add
cli
jne
insl
push
and
insb
mov
add
cmp
mov
out
xchg
imul
shl
ljmp
leave
nop
in
jle
hlt
or
push
dec
aaa
pop
and
adc
dec
hlt
sbb
dec
stos
inc
inc
fwait
sbb
cmp
dec
sbb
add
cs
mov
popf
test
lods
push
or
cmp
jge
inc
add
lods
jmp
inc
sbb
add
push
xlat
mov
fildl
xorl
mov
push
mov
lds
loop
std
push
popa
in
cmp
ret
add
shll
dec
sbb
pop
orl
jae
fsubrs
cli
sbb
ja
roll
in
jge
xor
aam
test
sbb
adc
jno
sub
test
sub
insl
mov
jl
push
jl
jecxz
rolb
mov
add
out
je
push
imul
jae
add
dec
jmp
insb
fisttpl
and
andl
jb
insb
fstpt
add
cwtl
repz
add
inc
and
pusha
add
xchg
xor
mov
lds
repz
mov
subb
insl
popa
mov
fdivrp
add
movsb
clc
sub
dec
sahf
jecxz
xor
pop
and
ss
shlb
cmp
repz
add
inc
sbb
in
mov
cld
mov
push
clc
pop
or
nop
cmp
xchg
add
repz
and
bound
mov
jbe
enter
je
mov
cli
loopne
push
movsb
fbld
outsb
add
pop
mull
stos
shll
cmp
cld
mov
sub
add
xchg
je
sahf
bound
and
call
push
cld
sbb
xchg
lret
jns
add
mov
jo
les
sbb
add
outsb
pop
addl
jg
or
ret
jnp
test
ds
or
sub
add
pop
adc
cmp
cmpb
xlat
scas
dec
add
pop
pop
mov
jb
shr
out
sub
stos
adc
mov
ja
or
cmp
sahf
aam
sub
mov
popa
fwait
cmpb
loopne
inc
repz
fs
sub
add
jae
xchg
mov
sbb
hlt
add
in
add
cmp
add
aam
cmp
or
int3
pop
inc
lock
sbb
imul
lret
xchg
pop
pop
add
int
mov
iret
stc
add
movsl
cmp
cli
jp
pop
cmp
cmp
dec
add
xchg
xor
add
mov
imul
dec
mov
add
push
sbb
add
rcrl
add
test
pop
ja
inc
mov
imul
lret
ljmp
adc
jge
lret
mov
mov
jge
sti
nop
inc
inc
cwtl
jo
add
subb
xor
lahf
dec
or
fadds
stc
pusha
gs
lar
xchg
movsl
push
push
push
mov
daa
outsb
popa
cltd
in
int
int3
pop
sub
add
add
std
addr16
fsubs
dec
jmp
repnz
scas
or
pop
cmp
xor
dec
adc
jg
jmp
ret
das
sub
add
xchg
jnp
popf
dec
fistps
movsl
sti
adcl
sbb
add
pop
dec
jnp
xorb
fldl
sub
push
pop
std
ret
mov
aas
push
test
pop
enter
cld
cmp
pusha
adc
jo
test
inc
ror
cwtl
sub
add
aaa
and
mov
bswap
repz
je
ret
add
out
adc
cltd
jne
sub
sub
pop
mov
xor
mov
lahf
mov
sbb
or
sbb
mov
xor
enter
arpl
ljmp
jns
call
fsubrl
mov
movsb
stc
and
nop
add
pop
int
adc
fdivs
add
fs
pop
daa
nop
test
add
pop
notl
scas
pushf
add
xlat
mov
add
incb
int3
sub
rorl
jge
mov
mov
add
sub
add
cmpsl
es
cld
jl
inc
jmp
loopne
mov
add
inc
and
dec
mov
lea
cmp
les
inc
jno
pop
push
dec
fnstsw
xor
add
xlat
out
mov
data16
add
mov
sbbl
push
pusha
sti
jbe
repz
pop
add
loop
ja
sbbl
scas
add
add
xchg
nop
ret
pop
jge
add
inc
jecxz
enter
add
cmp
clc
add
pop
mov
pusha
jp
pop
add
out
lods
push
pop
imul
fwait
pusha
cmpsl
push
mov
inc
es
stc
data16
sbbb
int3
pop
or
add
add
push
lret
in
ds
jl
cmpsl
xchg
mov
push
xor
mov
push
xchg
jb
pusha
add
add
imul
push
dec
add
sahf
ljmp
push
js
mov
addl
adc
or
in
sahf
add
out
xorb
jl
add
lods
lret
push
test
ja
pop
fisttps
roll
and
push
mov
dec
pusha
data16
lea
jo
pop
push
out
ds
sbb
stc
in
push
mov
add
and
jp
pop
mov
and
jbe
add
fidivs
add
pop
aas
imulb
mov
lock
aad
test
pop
in
sbb
lds
pop
dec
fcoms
arpl
xor
mov
call
enter
jo
arpl
push
inc
clc
inc
inc
jbe
js
add
pop
dec
repz
fisttpll
adc
xchg
out
mov
mov
add
xor
jnp
rolb
adc
add
adc
andb
pop
sub
mov
jecxz
mov
rorb
movsb
outsl
aaa
sbb
je
cli
addb
sbbb
pop
andb
adc
add
push
sarb
loopne
inc
pop
test
out
ret
icebp
sub
clc
push
arpl
out
pop
pop
aas
or
lock
mov
add
adc
cmpsb
xchg
sti
inc
cmp
push
add
add
dec
bound
aam
mov
into
jne
pop
inc
push
lahf
or
add
mov
push
test
add
sub
cs
adc
popf
add
or
outsl
push
add
idivb
inc
inc
push
imul
push
push
mov
add
mov
or
push
jne
mov
loopne
cmp
cmp
rcrb
hlt
and
push
cmp
dec
inc
stc
fincstp
cld
pop
mov
mov
mov
cmp
push
lds
xor
xor
movsb
sub
add
push
test
scas
inc
jmp
aaa
test
insb
add
sbb
aas
cli
push
add
nop
sti
rcl
add
sub
add
ljmp
add
xor
xor
or
ret
jge
ss
push
mov
insl
jge
add
ds
sbb
push
dec
add
cmp
push
dec
hlt
jl
or
dec
lods
jl
into
sub
movsl
and
mov
cmp
aad
inc
cmc
jne
or
cmp
neg
mov
leave
xor
iret
enterw
xor
shrl
xor
popa
jae
add
shlb
lret
mov
sbb
test
lods
shll
pop
add
pop
in
xor
mov
out
add
and
mov
add
mov
mov
sub
insl
mov
out
add
add
mov
shlb
rolb
add
pushf
cld
push
leave
loopne
andb
sti
lock
flds
and
cmpsl
lock
inc
xchg
push
ret
faddl
add
movsb
pushl
out
cmpsb
les
push
rolb
mov
jns
adc
lcall
add
pop
hlt
lds
mov
std
roll
xorl
fisttps
sbb
pop
add
ret
ja
ffree
add
push
sti
adc
inc
add
add
xor
stos
dec
jle
add
icebp
ljmp
xchg
out
or
and
sub
in
movb
xchg
mov
dec
ret
outsb
xor
roll
lcall
mov
clc
rcrl
out
xorb
mov
xchg
pop
inc
lret
shll
roll
enter
or
roll
pop
mov
je
scas
aad
addl
adc
mov
mov
shl
fwait
clc
sarb
fsubrs
pusha
cwtl
add
ss
adc
scas
push
mov
mov
jo
aas
lcall
cltd
cs
pop
rolb
dec
hlt
adc
add
ret
popa
add
add
call
push
mov
ret
incb
sub
in
xorb
add
adc
add
or
add
add
jbe
inc
ja
cltd
adc
mov
clc
push
jo
lahf
gs
js
and
xor
sbbl
add
das
lret
loopne
divb
pusha
sub
mov
pop
fidivrs
adc
mov
flds
add
hlt
fcomi
sbb
add
sbb
icebp
add
or
push
jo
addb
popa
adc
iret
jnp
pusha
jb
cmpsl
rcrl
sub
add
dec
aam
fsubr
test
fstpt
pop
xor
leave
xchg
dec
push
sub
inc
loopne
mov
rcr
lock
test
rcrl
in
pop
mov
lret
ds
mov
mov
sti
shlb
add
shrb
adc
cwtl
loopne
shl
add
adc
clc
adc
test
mov
add
sub
adc
push
xor
or
shlb
mov
jmp
into
and
push
mov
sbb
mov
push
icebp
or
add
xor
je
frstor
movsl
xchg
cmc
out
daa
ss
add
pop
xlat
sub
add
xchg
std
fucom
add
outsl
pop
xor
cmpb
sti
jb
sub
pop
or
icebp
rcrl
rorl
cmp
lods
inc
push
or
leave
add
mov
add
push
xchg
xor
push
loope
or
ret
pop
jg
mov
sub
aam
xor
xchg
inc
imul
loope
pop
popa
ror
sub
out
pop
testb
mov
movl
mov
pop
jbe,pt
sbb
lock
test
setg
add
mov
int3
add
lods
or
enter
inc
cld
lret
add
jae
pop
imul
sarl
push
aam
pop
xlat
test
addl
dec
add
addl
xchg
mov
or
and
push
or
jp
mov
jmp
add
dec
or
arpl
fsubs
inc
mov
or
aam
ja
dec
lret
pop
sub
mov
dec
adc
sbb
lret
js
push
clc
ja
incl
jbe
cmp
or
xor
xchg
dec
jmp
xorl
mull
push
jl
fisttpl
mov
add
xor
enter
pop
add
rcrl
xchg
jl
adc
adc
mov
push
pop
sub
movsl
cwtl
or
divl
cmpsl
sar
outsb
add
outsl
inc
jo
or
pusha
xchg
mov
sbb
and
add
mov
bound
lea
inc
lds
es
xor
push
jmp
shrb
nop
test
pop
or
push
clc
cs
jb
mov
loope
iret
lds
repz
pop
pop
or
fisttps
add
xorb
fnstsw
add
aas
jne
cltd
sub
mov
test
pop
jbe
push
enter
xchg
sbb
mov
imul
sbb
andl
lret
mov
sahf
push
cmp
add
mov
mov
add
mov
jp
in
in
pop
push
cmp
jne
jnp
xor
leave
movsl
hlt
adc
out
adcb
std
cwtl
adc
loop
int3
cmp
aam
push
cmp
and
add
lods
adc
pop
test
inc
adc
ja
pop
out
inc
iret
sub
xchg
or
sbb
ret
add
fldenv
loop
addr16
es
adc
dec
sbb
pop
pop
mov
jl
test
sbb
add
mov
mov
dec
jl
test
cli
add
out
and
jl
or
push
push
popa
add
push
icebp
insl
and
leave
nop
add
enter
add
mov
cmp
dec
adc
dec
mov
dec
mov
jno
mov
cmp
pop
mov
orb
xchg
lret
ficomps
nop
test
jno
add
jl
push
add
test
and
cwtl
jg
push
lret
sqrtps
test
mov
sbb
test
add
adc
orl
lds
mov
xchg
adc
je
jbe
call
jnp
mov
add
pop
inc
push
shrl
or
jb
add
push
stc
jnp
xor
jno
mov
jo
loop
adcl
pop
or
add
test
adc
fisubl
ss
test
and
pop
jbe
jne
push
or
rcrb
sbb
sub
jbe
jmp
jne
xchg
test
xor
adc
xor
pop
inc
movsb
adc
adc
adc
movsb
aad
adc
mov
loop
sarl
inc
xor
and
nop
ret
les
push
jbe
sub
das
pop
mov
jg
and
nop
jp
xor
movsb
lods
lea
push
loopne
js
sbbb
mov
or
push
and
xchg
iret
pop
add
pop
lret
mov
dec
add
shlb
add
mov
or
mull
test
jno
stc
es
sarb
push
mov
sar
je
in
mov
jns
push
push
mov
adc
scas
jl
add
jbe
pop
jns
fistps
xor
or
and
or
add
out
push
jmp
clc
flds
test
mov
adc
mov
es
xchg
pop
fwait
xchg
xchg
cmp
mov
xchg
ret
rclb
outsb
mov
cmp
arpl
jns
ret
ror
mov
clc
loop
push
nop
mov
sbb
pop
int3
mov
cmc
jmp
jge
dec
xchg
jo
sub
aad
or
stos
mov
xchg
aam
adc
mov
pop
push
sbb
pop
cmp
sbb
push
xor
pop
add
push
cltd
jecxz
das
xchg
mov
dec
or
rcrb
push
sbb
add
xchg
jp
js
inc
out
add
test
sbb
or
aaa
adc
pop
stos
lahf
and
or
add
call
outsb
pop
and
mov
jb
mov
jl
add
add
adc
mov
sub
pusha
sub
add
xchg
pop
fs
outsl
push
popa
inc
push
mov
pop
pop
shl
xor
add
inc
mov
test
jecxz
cmp
scas
out
xorl
ja
or
insb
mov
repnz
pusha
adc
jl
xchg
shlb
add
mov
test
les
push
rorl
mov
cmp
add
add
mov
adc
or
arpl
add
push
adc
and
inc
gs
jae
inc
inc
fldl
ficompl
cwtl
xchg
lret
int
pop
fsub
popa
add
ret
ds
hlt
outsb
xchg
pop
push
ljmp
pop
sbb
cld
jno
insl
fsubrs
je
enter
call
and
cmp
fwait
inc
sub
xlat
cwtl
sbb
mov
inc
adc
faddl
lidtl
add
and
or
or
in
cltd
cmp
js
sub
push
cmp
pop
inc
fcoml
les
test
sub
sub
jo
add
and
orb
js
dec
sub
or
adc
fildll
pushf
or
pop
inc
cmp
shl
loopne
fs
cmpsb
adcb
mov
cmp
add
arpl
ds
imull
mov
or
lahf
add
jne
fadds
or
pop
adc
add
pusha
decb
sbb
sbb
les
cmpb
push
sbb
leave
les
add
dec
xor
mov
hlt
repz
mov
lahf
mov
xorl
adc
imul
lods
rcrb
cmp
js
adc
ret
mov
mov
sarl
push
in
pushf
xor
xor
or
or
add
mov
lds
mov
gs
xchg
or
add
incb
jg
or
rcll
out
inc
out
in
test
push
mov
sub
add
push
mov
pop
pop
push
or
push
fadds
add
jnp
pop
loopne
dec
push
aam
pop
mov
add
xor
jg
fcoml
jge
sbbb
and
sub
sub
adcb
loope
loopne
add
lods
mov
cmpsb
or
or
pop
add
jne
add
and
sub
pop
push
inc
in
pop
xchg
pop
mov
aaa
dec
ja
adc
aas
fcoms
cmp
pop
inc
loopne
cmpsl
inc
nop
faddl
sub
jl
testl
xor
lock
stos
ljmp
and
adc
or
and
cli
dec
sbb
dec
lods
fs
sub
xor
rol
sub
test
inc
add
popa
ror
ss
jl
mov
inc
pop
in
aaa
cld
je
xor
stos
xor
pop
data16
pop
jl
lods
div
push
mov
dec
hlt
mov
notl
add
loopne
int3
bound
add
cld
adc
dec
push
xor
call
mov
scas
notb
push
push
dec
add
ljmp
jae
add
jae
out
imul
les
inc
int3
pop
cmc
incl
pop
fcoml
jle
sbb
cwtl
adc
movl
or
inc
push
test
aad
adc
in
push
sti
negl
adc
das
loope
andb
mov
cwtl
xchg
inc
stc
lods
sbb
in
cli
cmp
and
iret
cmp
cmp
mov
and
sbb
enter
icebp
xor
add
xchg
xor
movsl
stc
xchg
add
idivl
int3
and
mov
stc
or
push
hlt
imul
or
xchg
lret
add
fmul
jb
and
or
std
pusha
nop
ds
in
pop
add
sbb
adc
sbb
and
dec
loopne
ss
int3
adc
jp
mov
enter
jno
adc
sar
pop
ljmp
imul
cld
or
push
sub
or
repz
enter
les
sub
sbb
xor
mov
cwtl
pop
add
add
aam
jl
aad
shlb
call
xlat
rolb
cmp
fwait
inc
add
dec
adc
loop
shll
mov
movsb
mov
incl
les
adc
inc
pop
mov
aam
mov
sub
and
jbe
add
enter
movsl
add
push
std
jo
hlt
pusha
xlat
add
rorb
sbb
and
jnp
xor
icebp
pop
je
xchg
loopne
xchg
jle
cmp
pop
mov
push
jmp
xorb
and
mov
pop
js
les
ja
gs
add
fiaddl
dec
cmp
xor
outsb
mov
lds
ja
icebp
call
add
addr16
push
mov
pop
lock
adc
jae
das
and
add
and
je
mov
and
jl
adc
mov
inc
mov
lret
push
jno
call
adc
dec
jmp
int3
sarb
test
aas
or
mov
mov
mov
add
jnp
jns
ja
or
outsl
adc
lock
xchg
mov
pushl
add
pop
cs
inc
mov
sbb
add
xor
cmpsb
cmp
pusha
sbb
mov
pop
sbb
mov
enter
mov
jbe
mov
inc
repnz
mov
adc
shrl
xor
push
das
mov
jb
mov
push
movsb
aaa
nop
and
pusha
shrl
andl
ja
nop
movsb
iret
mov
xchg
lret
adc
leave
sub
insb
pop
rep
lock
popa
cmp
sub
push
or
in
sahf
cmpsl
cwtl
insb
testl
sub
add
mov
xchg
sub
xchg
and
xchg
sarb
inc
sub
enter
or
loope
add
cmp
hlt
jge
xchg
mov
or
xchg
pop
aas
pop
pop
xchg
xchg
pop
movsb
push
add
push
jo
in
add
loop
lea
jb
loope
insb
js
jmp
or
or
add
sbb
fisubl
cmpsl
pop
push
push
and
add
lds
es
sub
push
cmc
lods
inc
push
push
rclb
int3
add
add
add
and
add
add
cli
adc
int3
nop
mov
sbb
das
add
insl
and
add
sbbb
push
add
cmpsb
loop
out
sub
cmp
inc
ja
mov
jle
or
or
sbb
xchg
insl
jno
lahf
cmp
dec
jns
fs
xor
mov
xor
push
inc
push
subl
aam
jle
aad
or
jmp
add
dec
es
add
push
push
jno
aam
enter
sub
xor
jne
cmp
pop
xchg
pop
push
jle
cmp
stos
jmp
imul
in
bound
scas
lds
push
mov
fdivl
cmp
push
aas
xchg
jo
arpl
push
test
into
in
lret
sub
dec
push
cwtl
pop
ljmp
xor
dec
mov
fisttpll
xlat
inc
push
adc
mov
popf
inc
popl
and
xor
sahf
scas
mov
adc
pop
jne
push
bound
add
lret
push
addb
jns
jae
and
sub
mov
ret
mov
jae
cwtl
pop
and
add
and
jb
pop
jle
lods
sbb
mov
test
sbb
xchg
cld
sbb
pop
inc
cwtl
lods
int3
bswap
add
push
cmpl
popa
or
addb
cmpsb
fmuls
xor
push
out
leave
add
push
push
sbb
add
lds
call
movsb
add
in
cmp
shr
adc
mov
add
sarl
cmp
dec
adc
popf
mov
lea
xchg
xor
lock
sbb
push
fistpl
add
xchg
ss
fs
cli
fiaddl
mov
or
push
js
add
or
sub
add
scas
andb
out
ljmp
mov
or
in
push
adc
ljmp
push
and
mov
jge
sbb
xchg
pushf
outsb
pop
aaa
cmpsb
jmp
gs
pop
ret
enter
adc
and
scas
sbb
xor
stos
adc
dec
std
aaa
dec
mov
push
jl
call
push
sahf
and
mov
add
add
add
and
outsl
out
sbb
adcb
add
and
jge
pop
push
in
and
mov
add
insl
and
in
and
push
pusha
das
fstps
mov
sbb
sbb
pop
mov
pushf
inc
sbb
and
fwait
jne
adc
pushf
sbb
mov
stos
ret
pop
add
out
or
jne
mov
mov
jbe
mov
cmp
cltd
pushf
in
or
add
push
or
sti
imul
lods
pop
adc
daa
add
jbe
jge
pushf
nop
jo
and
dec
test
inc
ret
push
dec
cli
pop
shlb
add
adc
jl
ret
push
cmp
push
fadds
fucomip
add
fiadds
and
inc
test
out
les
mov
scas
xchg
out
test
arpl
aas
push
sub
addr16
mov
mov
lcall
scas
sbb
sub
add
divl
and
xor
jmp
push
sbb
lret
js
jge
call
mov
mov
stos
add
mov
add
sbb
je
add
and
mov
pusha
cmpl
outsl
mov
inc
ds
push
dec
dec
pop
cs
lock
scas
pushf
mulb
sub
or
push
adc
cs
test
xor
pop
aas
inc
or
pop
add
movsl
mov
lods
add
sbb
mov
nop
data16
insb
xor
sbb
out
sbb
adc
dec
cmpb
add
imul
lods
xor
and
lock
lret
outsb
js
jmp
add
scas
test
or
call
dec
es
cmp
stc
addl
or
cmp
dec
dec
inc
jg
fidivrl
mov
stc
ljmp
add
cli
pop
mov
mov
imul
inc
js
add
sbb
jnp
or
mov
mov
xor
stos
pop
sub
pop
xor
cmc
fsubs
ret
movsl
or
hlt
push
add
push
dec
call
add
or
dec
dec
cld
and
mov
fldl
aad
pop
call
loopne
mov
xchg
cli
sbb
nop
mov
cmp
shl
inc
sub
sub
inc
test
add
sub
push
stc
mov
jne
adc
mov
in
stos
out
pop
loop
inc
movsl
mov
jmp
call
lcall
jae
lea
fcoml
jmp
dec
or
fs
dec
jb
add
dec
jo
pop
pop
or
mov
or
sub
lds
jnp
mov
imul
daa
scas
insb
sbb
sbb
je
and
mov
leave
iret
test
cld
mov
call
add
pop
pop
push
add
rclb
ja
sbb
pop
pop
notl
testb
adc
in
xor
and
cli
iret
add
lret
pusha
or
pop
pop
xchg
pop
lods
adc
lret
mov
push
adc
jbe
int
cmp
pop
sub
mov
icebp
sbb
jne
and
add
mov
scas
pop
mov
imul
and
call
mov
push
jne
sahf
mov
es
inc
sbb
cltd
mov
inc
jp
add
ret
xorl
cmc
adc
pop
jmp
ss
mov
mov
mov
adcb
add
loop
add
xchg
int3
imul
cld
mov
add
sbb
sub
xchg
xchg
add
mov
mov
lds
mov
mov
ret
iret
add
sbb
mov
jno
pop
psubsb
add
cmc
xchg
or
clc
sbb
cmp
clc
jb
add
add
adc
xorb
and
call
inc
adc
xor
movsb
in
jns
add
or
int
mov
xor
in
fildl
repz
out
jno
adc
or
dec
jle
cld
ret
xchg
mov
inc
std
add
adc
int3
add
jns
adc
rolb
cmp
mov
sbb
or
or
or
mov
out
or
mov
sbb
in
imul
lea
pop
mov
mov
adc
pushf
mov
jl
or
mov
mov
xor
add
es
pop
sbb
cmc
mulb
push
cmpl
loopne
xchg
pusha
fs
or
mov
pop
pusha
pushf
popa
sbb
scas
mov
inc
sbb
movsb
loopne
inc
pop
shr
lahf
inc
add
addr16
enter
jno
cld
adc
mov
and
sub
hlt
nop
cmp
int3
in
les
popw
jnp
xchg
add
imul
or
fimuls
xorl
xchg
pop
mov
xchg
dec
or
sbb
add
daa
into
repnz
or
enter
sub
mov
push
sbbb
out
dec
dec
daa
test
lret
fadds
xchg
into
mov
or
mov
and
das
pop
add
mov
movsb
mov
adc
pop
or
or
add
cmp
out
cmp
xorl
ja
add
outsl
imul
add
xchg
and
mov
int3
mov
test
out
lods
rolb
pusha
addl
lret
xchg
and
cmp
popf
sbb
add
push
cltd
adc
mov
mov
push
or
dec
pushf
mov
mov
jle
aaa
in
xchg
sub
sub
and
mov
mov
insl
mov
inc
sub
pop
popa
add
pop
pop
mov
adcl
add
ss
nop
dec
add
dec
aam
sbb
sub
adc
dec
jl
pusha
scas
mov
add
popa
cmp
into
dec
leave
int
mov
es
mov
mov
or
insb
jg
es
sub
shl
aad
dec
inc
mov
jns
push
add
fprem1
sahf
shlb
pusha
adc
mov
ficoms
mov
inc
or
cltd
sub
adc
cmovnp
andb
xor
push
dec
push
sti
sub
test
lock
cmp
enter
test
xchg
dec
push
test
mov
daa
pusha
mov
cwtl
mov
sbb
inc
sahf
repz
xchg
je
push
jg
rcr
sbb
in
adc
xchg
inc
xor
xchg
sub
add
and
jbe
xchg
iret
push
subb
js
test
xchg
arpl
dec
xorb
cmc
cli
sbb
cmp
adc
inc
popf
mov
and
out
mov
sub
dec
daa
add
pop
inc
xor
cmp
mov
icebp
xorl
lret
xor
repnz
mov
add
jmp
add
or
push
sbbb
mov
ror
lds
sub
test
inc
aam
ret
sbb
imul
and
loop
mov
lods
sbbl
sub
int3
and
fiadds
mov
adc
and
subb
dec
push
shlb
add
jb
es
push
pop
mov
mov
add
xchg
and
jns
add
gs
push
cwtl
mov
addl
sbb
jno
push
or
rorl
fidivrs
mov
mov
inc
test
jp
loope
cmp
in
test
mov
lods
fldl
popa
imul
mov
add
push
jp
sbb
or
mov
rcll
mov
add
xor
fbstp
sbb
adc
aam
cmc
jo
pusha
rcrb
loopne
sub
pop
xor
sub
add
inc
pop
ss
loope
loop
dec
lds
mov
loope
loope
xchg
jb
xchg
sub
sar
sub
dec
pop
xor
jb
adc
imul
mov
jl
scas
xchg
das
add
mov
pop
sbb
in
mov
sbb
aaa
adcl
xor
xlat
faddl
clc
sub
inc
loopne
adc
cld
mov
mov
gs
inc
ja
mov
daa
mov
mov
jbe
inc
lcall
gs
add
xlat
xchg
movsb
sub
stc
in
xchg
jo
mov
add
lods
mulb
ja
adc
add
push
fs
popf
adc
or
xor
add
adc
imul
gs
aad
add
and
je
xchg
adc
mov
mov
mov
rcl
cltd
das
pop
adc
adc
push
add
adc
cmp
addl
or
popf
adc
sub
test
sub
or
inc
push
push
mov
imul
pop
loopne
es
rol
rcrl
lds
ja
xchg
jns
mov
mov
enter
lods
mov
dec
mov
fs
ss
add
mov
icebp
nop
and
xchg
mov
sub
add
leave
pop
and
movsb
and
add
inc
add
push
sbb
add
cmpsl
scas
sub
in
lret
add
xchg
sbb
push
rorb
hlt
sahf
inc
or
cmp
loopne
in
std
and
hlt
sbb
jl
add
clc
mov
outsl
cmp
and
enter
roll
mov
daa
fs
sub
lods
mov
inc
jns
push
add
flds
adc
mov
ret
loope
in
and
mov
or
cli
das
sbb
orb
mov
sbb
sbb
and
adc
or
ja
push
jno
lods
sahf
add
std
pushf
ret
xor
and
enter
lea
xchg
xchg
mov
add
and
mov
sahf
andl
fsubrl
fwait
setp
and
mov
rorb
cli
push
sub
lea
sbb
cltd
cmp
jno
aad
icebp
incl
lock
jge
cmp
mov
xor
jne
ja
ret
and
add
movsl
icebp
cs
cmp
test
enter
mov
sub
adc
scas
mov
orb
imul
sub
mov
and
lds
addr16
sarl
nop
lds
and
subb
add
and
int3
xor
scas
in
cmp
or
pop
pop
push
mov
push
nop
or
or
les
addl
adc
pop
mov
ret
and
lret
addb
adc
jnp
mov
and
out
bound
ljmp
mov
aas
adc
inc
sbb
dec
inc
mov
inc
aaa
js
arpl
sbbb
push
mov
sub
fsubl
ficomps
xchg
push
and
sub
hlt
sbb
lret
das
fwait
or
cmp
addb
rep
sub
in
lock
and
jle
hlt
gs
push
addr16
ljmp
pop
xor
aaa
jl
adc
movsb
lock
inc
std
and
imul
dec
call
and
clc
outsb
js
out
add
mov
enter
xor
sbb
dec
mov
stc
icebp
or
call
rcrl
loop
mov
lods
js
or
adc
inc
les
add
and
push
ljmp
mov
pop
pusha
inc
mov
loope
or
push
cmp
add
add
lods
fwait
pop
popa
pop
pusha
dec
popf
std
fstps
fdivl
enter
fistps
inc
leave
push
pop
rolb
xchg
ret
push
aas
push
dec
or
sbb
inc
clc
mov
add
int3
mov
cmp
pop
out
mov
and
test
xchg
sarl
ss
sub
inc
add
push
or
add
or
stc
xchg
pushf
and
and
insb
inc
push
fs
stos
movsb
loopne
mov
pop
shlb
jo
add
mov
loopne
mov
or
pusha
jl
add
testb
cltd
lods
push
imul
pusha
mov
add
popa
mov
jecxz
aad
push
add
xchg
in
sbb
push
inc
jne
sbb
sahf
daa
orb
mov
fnstenv
xor
mov
cs
push
cld
or
or
out
loop
cld
mov
mov
mov
bound
lea
mov
or
xchg
pop
or
movsl
outsl
xchg
sub
jne
xor
sbbl
mov
push
sbb
adc
push
jb
adc
or
inc
arpl
clc
das
pop
add
push
insb
or
add
sub
cmpsb
loope
std
mov
xor
aam
subl
inc
in
andb
push
add
outsl
or
cmp
scas
test
pop
add
scas
int
jnp
sbb
imul
cmp
jo
ret
cmp
push
nop
lock
sub
in
sar
jns
add
enter
sbb
subl
addl
mov
cli
sbb
dec
andl
mov
sbb
sub
mov
cmc
add
es
sub
pop
add
sahf
inc
in
inc
add
sbb
or
jae
add
or
dec
scas
or
add
test
hlt
testl
adc
mov
addr16
data16
pop
push
and
leave
aaa
stos
mov
lea
in
aam
sub
mov
cmp
out
inc
addl
push
dec
xor
mov
cmp
pop
add
xlat
sub
andb
mov
pop
lea
and
addr16
jno
in
add
pop
stos
add
sbb
and
sub
add
mov
in
popa
push
lret
pop
xor
or
cmpb
add
ja
jmp
sbb
adc
les
inc
mov
xor
insl
xchg
sti
push
stos
cs
in
cmp
addl
and
repnz
inc
lcall
add
pop
push
add
leave
mov
sbb
adc
rcrb
cmpsl
xchg
repz
dec
sahf
sub
das
sub
mov
xchg
fmuls
cs
sbb
xlat
rcll
shlb
sbb
xor
sbb
xchg
outsb
sti
add
repz
mov
clc
xchg
push
mov
cmpsb
and
xor
sub
fildll
pop
dec
add
pop
fcoml
xchg
add
in
xchg
pop
call
dec
pop
xor
outsl
repnz
add
mov
add
mov
pop
xchg
mov
hlt
jmp
jle
pop
dec
stc
test
jb
pop
or
sahf
push
int3
das
add
pusha
xlat
es
or
adc
jecxz
or
hlt
loope
cld
jle
cmc
xor
sub
imul
push
xchg
push
mov
stos
and
je
inc
ljmp
xor
sub
ret
and
add
movsb
add
adc
push
mov
add
out
cwtl
cld
das
add
mov
pop
add
mov
jns
and
dec
adc
in
push
ret
add
insl
dec
aam
xchg
mov
adc
mov
add
mov
inc
popa
test
mov
leave
dec
mov
mov
scas
add
jns
lcall
rolb
add
cmpl
add
push
lock
sti
icebp
stos
inc
sbb
int
std
jbe
push
sbb
fwait
jmp
gs
sbb
xor
out
nop
dec
stc
push
dec
inc
mov
bound
sti
mov
add
jge
mov
hlt
push
lret
add
into
mov
push
cli
or
add
or
pusha
outsl
dec
xlat
insb
mov
add
inc
iret
mov
add
movb
push
xlat
imul
mov
adc
adc
push
or
cltd
in
cmp
aam
in
shll
mov
adc
fidivrs
jecxz
ret
iret
addr16
pop
shrb
sbb
sbb
pop
mov
rcr
and
cmpsb
sbb
stc
jns
cmp
mov
xchg
je
ret
in
nop
popa
sbbb
sbb
mov
aam
add
mov
dec
xor
jbe
push
gs
jle
jns
stc
aaa
mov
jecxz
xlat
lods
popa
and
das
and
rorl
popl
rcr
and
adcb
popa
jmp
mov
cmpsl
popf
mov
ljmp
lds
jno
xor
xchg
arpl
scas
xchg
add
mov
mov
test
mov
push
sbb
add
add
fmul
mov
loopne
and
std
es
xor
lret
outsl
add
mov
test
mov
gs
add
in
or
in
stos
out
sar
jmp
pop
push
test
loopne
gs
add
outsl
mov
add
xor
adc
pusha
and
adc
add
out
pop
fs
ret
and
pop
aaa
cld
scas
xchg
push
dec
push
sub
call
test
and
adc
sti
inc
js
shlb
and
cmpl
test
dec
or
jb
shll
popa
lock
aam
adc
stos
push
test
in
xor
xor
pusha
mov
or
dec
mov
pop
mov
shrb
inc
pusha
out
sbb
mov
add
andl
jle
push
adc
enter
cwtl
loopne
inc
rcrl
xor
dec
and
lds
add
loop
mov
stos
int
lea
mov
lods
or
insb
mov
push
add
into
testb
adc
or
lods
or
test
das
add
jno
or
in
aam
in
pop
stos
lret
pop
jecxz
cmp
or
sbb
add
and
ljmp
cltd
jnp
cwtl
or
ficompl
rclb
add
xor
or
mov
add
test
data16
test
push
cmp
jecxz
aas
cmp
push
fwait
xor
mov
or
je
js
mov
loopne
inc
jb
sbb
mov
dec
hlt
iret
hlt
movsb
test
mov
inc
lods
sbb
xchg
pusha
xor
adc
mov
xchg
js
iret
xor
sarb
push
pop
mov
leave
popf
inc
xchg
lcall
push
and
and
fs
or
leave
and
push
push
sbb
push
lods
push
cmp
mov
mov
enter
pop
inc
test
int3
inc
mov
pusha
mov
pop
cs
pop
push
cld
push
loopne
or
sub
dec
vmread
push
jnp
nop
sbb
repnz
add
lods
fs
cwtl
adc
pop
mov
dec
sti
mov
jg
mov
push
lret
shll
pop
jo
out
nop
lock
add
inc
sub
sub
js
mov
in
pop
push
cmp
into
repz
test
add
mov
sahf
pop
sub
mov
xor
insb
test
loopne
clc
pop
mov
fsubp
je
jle
call
lret
push
add
loope
cmpsl
xor
sub
aaa
dec
sbb
mov
test
add
outsl
ror
mov
out
mov
jecxz
pop
stos
sbb
push
mov
push
jmp
pop
jle
push
xchg
std
test
push
add
adc
cs
jbe
push
sub
push
push
adc
mov
add
sub
stos
repnz
mov
ljmp
jns
pusha
push
addr16
test
mov
clc
add
scas
sarb
add
mov
sbb
jl
stos
add
inc
mov
pusha
rcl
cwtl
popa
test
scas
cmc
jo
cmp
add
push
cmpl
aam
fldl
stos
adc
lds
lcall
das
insb
jp
data16
add
adc
sbb
xor
inc
insb
int
jmp
add
movsb
clc
jno
xlat
or
orl
jg
cmp
pop
clc
push
imul
aad
sahf
jo
mov
pop
and
sti
or
add
dec
jl
leave
cmp
loopne
sub
aaa
jae
push
out
add
mov
arpl
fwait
adc
or
mov
dec
inc
movsb
data16
or
xchg
adc
out
mov
test
mov
xor
sarl
nop
je
mov
jge
jecxz
lods
pusha
jne
out
mov
dec
stc
clc
shl
adc
inc
add
aam
push
insb
xor
inc
fdiv
sbb
pop
cltd
sbb
andl
das
mov
xor
xor
mov
popa
xchg
xchg
popf
cli
enter
mov
testb
stos
add
bound
mov
sbb
xchg
add
sbb
push
movsb
push
cmpsb
cld
dec
or
add
add
add
loopne
add
aaa
in
dec
sub
xchg
and
or
outsl
je
cwtl
insl
out
push
add
cmpsl
loopne
add
jns
test
cmp
cli
mov
int3
sbb
sbb
adc
lds
sbb
inc
out
pusha
aaa
pop
cmp
ljmp
shlb
xlat
add
loopne
daa
jp
inc
ficoml
cmpsb
bound
and
mov
adc
jns
mov
push
cwtl
push
test
sti
insb
frstor
jo
xchg
addr16
mov
sbb
jl
ja
and
xorb
in
clc
add
inc
sub
add
dec
jnp
pop
hlt
cmp
adc
jnp
in
adc
jecxz
das
adc
dec
fistpll
rol
jne
lock
and
test
dec
mov
sbb
dec
or
mov
adc
cmpsb
faddl
stos
cli
addl
sub
mov
cmpsl
repnz
adc
notb
fmull
jns
in
call
mov
pop
or
pop
xchg
shlb
sahf
or
jg
dec
jecxz
adc
push
add
mov
adc
dec
mov
adc
inc
pop
push
call
sti
mov
adc
das
jmp
and
inc
add
lret
int
xchg
test
roll
fcoms
xchg
in
sbb
sub
fnstcw
out
add
mov
enter
iret
shl
loopne
int
cs
push
inc
and
pop
ds
sbb
aad
cmp
movsb
in
xor
mov
xor
xchg
nop
and
cmpsb
flds
mov
pop
in
iret
push
in
sub
and
add
xchg
inc
ret
jb
xchg
sbb
aam
test
les
in
xchg
xor
cmc
gs
cmp
fs
pop
lods
ficompl
pusha
sub
outsl
add
mov
addps
dec
xchg
jbe
jae
mov
sahf
shlb
cmp
push
stc
pop
add
adc
push
dec
addl
cltd
jnp
test
aas
lock
insb
cwtl
adc
mov
icebp
xor
jecxz
rorl
movsb
lahf
sub
fists
xor
pop
int
xorl
mov
stc
subl
push
jb
xor
mov
movsb
and
push
xor
pop
inc
and
clc
es
sub
pop
add
add
out
pop
pop
adc
push
xchg
or
push
inc
xchg
mov
add
mov
aam
add
mov
xchg
sbb
mov
add
pop
jecxz
or
mov
bswap
dec
rcl
add
xor
aaa
dec
sbb
aam
movsl
lods
cmp
leave
call
ljmp
xchg
mov
adcl
pop
shlb
inc
sti
push
pop
cs
or
popf
cmpsl
xchg
fildll
xchg
jecxz
add
pop
loope
dec
out
add
je
push
in
add
mov
in
inc
xor
push
cs
addb
dec
mov
aam
push
cli
add
xor
ret
mov
mov
adc
loopne
mov
cmc
lock
add
inc
out
jg
or
les
insb
add
lea
push
add
repnz
sbb
add
int
fwait
xchg
in
ret
sbb
jnp
rorb
cs
pop
rolb
or
add
push
mov
push
cmp
xchg
xor
xchg
dec
cmc
fcomi
sbb
mov
xchg
loope
cmp
negb
jl
or
inc
nop
aaa
imul
and
movsl
or
pushf
aas
in
daa
adc
dec
add
push
xchg
adc
push
lret
movb
loopne
push
jo
cli
leave
popa
lds
push
nop
pop
inc
sbb
xor
pusha
call
dec
dec
aaa
pushf
mov
pop
ja
cwtl
sbbb
mov
js
mov
int
bound
lret
and
and
repz
or
cwtl
mov
mov
ficompl
jo
movsb
or
or
xor
adc
dec
inc
adc
inc
and
and
loopne
dec
adc
push
decb
or
cmpsl
adc
std
add
sbbb
leave
imulb
pop
daa
addl
cmpsl
pop
imul
aas
mov
xchg
sub
push
rolb
dec
mov
nop
leave
adc
push
add
iret
lahf
jle
fsubrs
cld
sub
daa
shl
jg
sub
xchg
xchg
pushf
sub
push
add
ret
pushf
push
push
lock
jno
add
add
push
imul
stos
enter
adc
call
push
mov
add
or
lods
imul
mov
sub
movsb
rolb
shll
push
in
add
push
or
mov
mov
mov
cwtl
pusha
or
fildll
sbb
cwtl
addr16
xor
pop
enter
pop
xchg
mov
stc
ret
xor
in
notb
mov
je
loop
mov
adcb
test
add
sub
enter
or
sbbl
adc
inc
mov
jl
lahf
mov
add
fcomps
add
jbe
and
jl
call
les
or
adc
test
sub
test
or
fstps
and
sbb
dec
mov
das
mov
addr16
lds
xor
or
adc
in
sub
arpl
out
lea
hlt
jo
or
push
pop
push
loopne
jmp
adc
dec
movsl
rorl
add
mov
loopne
nop
hlt
mov
rcr
aas
icebp
add
hlt
sbbb
xor
add
and
xor
sbb
mov
xchg
xchg
das
or
cmp
cmp
insb
orb
test
and
das
in
orb
stc
jo
push
data16
pop
enter
mov
push
pop
dec
mov
sahf
push
mov
or
lods
adc
jecxz
enter
dec
int3
sahf
adc
xchg
mov
in
xchg
cltd
rorb
addr16
divb
es
and
xor
or
nop
inc
jg
loop
cwtl
mov
cmpsb
jbe
xchg
or
add
cmpsl
ljmp
pushf
xorb
rorb
jo
or
out
int3
sbb
adc
mov
cmc
jge
and
adc
nop
sub
add
popa
cli
aam
in
push
lret
addl
xorb
push
xchg
cmp
add
dec
frstor
jo
add
mov
sub
enter
jne
add
mov
or
in
push
push
jo
imul
dec
stos
das
iret
shrb
cmp
sbb
and
sbb
sahf
inc
aam
add
inc
shl
add
mov
daa
add
mov
mov
adc
lahf
add
les
push
push
xchg
gs
cmp
daa
add
call
sbb
pop
inc
and
fisubrl
xchg
scas
sarl
sub
mov
and
or
sub
mov
xchg
shrl
xor
sahf
inc
dec
xchg
push
add
es
mov
adc
jo
cltd
mov
cwtl
mov
sub
iret
xchg
adc
imul
xor
add
push
pop
mov
out
sbb
and
inc
xor
sahf
push
mov
faddl
mov
add
xor
push
jae
in
test
jge
push
xor
data16
in
std
mov
das
into
pusha
js
cmp
lret
mov
or
add
movsb
enter
dec
loop
add
mov
and
adc
xchg
adc
iret
jbe
ja
add
xchg
in
mov
inc
sbb
out
and
adc
in
scas
xor
stos
push
pop
jb
scas
ja
popf
xchg
add
push
jp
xchg
add
fisubl
add
repz
stos
or
lock
and
jns
dec
cmp
and
clc
mov
cwtl
and
inc
cwtl
push
xor
xor
inc
jmp
inc
cwtl
add
out
mov
movsl
das
cmp
inc
fisubs
addb
fsubrl
out
jo
cltd
jno
nop
add
cmp
xor
push
adc
das
xchg
adc
pop
jecxz
lods
cmpsl
push
add
pop
incl
mov
xor
jl
pop
jmp
and
fwait
pushf
mov
adcb
into
dec
xor
fadds
add
sub
fwait
call
sti
push
rcl
dec
cmp
push
dec
aad
xor
and
mov
test
cmp
add
inc
inc
adc
test
mov
out
add
bound
imul
in
fsubs
sbb
jge
cli
inc
add
jb
mov
int3
add
addr16
imul
adc
movsb
insb
add
and
sbb
addl
cmp
or
cmp
jl
mov
inc
add
push
lret
daa
ds
xchg
add
push
jg
xor
in
inc
les
lret
daa
ljmp
jae
test
sub
or
adc
rolb
push
xor
add
ljmp
jns
jnp
pop
jo
dec
loopne
jecxz
addr16
out
fwait
or
add
mov
or
jle
dec
in
add
or
clc
andnps
je
lahf
inc
test
jmp
daa
imull
data16
lcall
rcl
add
and
cmpsl
xor
add
jo
popl
sbb
cmp
aam
icebp
sub
pop
cmpsl
mov
rorl
lds
add
sub
nop
mov
sbb
mov
dec
sbb
xor
inc
mov
xor
inc
push
add
aas
mov
loop
in
or
rorb
insb
les
mov
ljmp
repz
dec
add
leave
es
add
sahf
or
mov
mov
and
dec
test
das
call
pop
dec
cmp
sbb
sbb
jge
push
inc
sbb
nop
mov
imul
out
or
cmc
or
lret
rclb
jp
dec
test
lods
in
dec
pop
xchg
lret
inc
test
inc
aam
cmpsb
loopne
addr16
stc
jg
in
add
mov
xor
inc
shr
add
cld
mov
aam
ficompl
xor
addl
mov
adcb
call
pop
jo
add
test
jnp
in
and
iret
loop
icebp
out
jbe
out
cmc
sbb
lods
cmp
and
sbb
fnsave
sbb
add
adc
out
lahf
aaa
aam
jae
andb
xor
add
and
and
adcl
pusha
cmp
add
insl
sti
add
stc
cmp
test
inc
mov
mov
pop
out
hlt
mov
lods
enter
add
xchg
lds
add
outsb
cmp
addl
ss
pop
stc
das
sbb
nop
mov
repz
js
or
mov
add
movsb
add
lds
int
rcr
sahf
push
ret
outsb
dec
loopne
or
sbb
push
and
int3
fwait
lret
outsb
sbb
dec
lahf
sbb
in
lcall
mov
shl
sbbb
test
and
ljmp
incl
inc
add
imul
inc
aam
jecxz
setno
push
and
lret
adc
shll
icebp
add
mov
mov
push
add
sbb
xor
inc
ret
pop
jne
sub
xchg
out
addb
nop
out
cmpl
and
cmpsb
rorb
sub
aaa
out
jge
mov
jbe
mov
jnp
inc
or
es
dec
pop
sub
xorb
push
out
dec
lea
adc
out
cmp
cwtl
add
stos
enter
in
test
les
adcb
push
jg
bound
jbe
or
fwait
movaps
xor
mov
cmp
mov
pop
call
test
sar
in
xchg
and
pop
pop
out
pop
mov
andb
pop
fmul
jne
adc
stos
clc
rclb
jo
or
sbb
out
jb
add
pop
imul
adc
jno
add
decl
or
mov
call
fsts
inc
out
xor
mov
sti
enter
sbb
sar
sub
lahf
enter
add
and
js
inc
imul
add
addr16
jo
xlat
sbb
mov
jmp
loopne
sbb
cmp
movsl
and
enter
sbb
mov
ret
int3
cmp
popa
xchg
cmp
inc
lock
xchg
push
out
lods
inc
ret
and
xchg
fwait
cmp
and
andb
bound
nop
adc
jae
pop
stos
daa
xor
add
and
cmpsb
test
enter
add
mov
sub
mov
loopne
dec
popf
inc
cmp
lea
sub
scas
adc
sbb
mov
test
mov
int3
mov
bound
ret
adc
xor
mov
test
jg
or
and
subl
fs
xchg
mov
cltd
add
ss
or
repnz
xchg
in
or
adcb
mov
push
adc
mov
xchg
add
xor
mov
mov
mov
cmovnp
xor
int3
jo
shl
mov
sbb
addb
aam
mov
sub
rcrl
jns
or
xlat
mov
add
in
sub
test
mov
mov
add
mov
jo
sti
iret
dec
mov
testb
push
aas
xchg
inc
add
scas
test
gs
add
jo
aas
mov
pusha
bound
xchg
cmp
mov
jae
cli
shr
or
push
in
cmpsl
add
ss
stos
xchg
sbb
cli
or
sub
and
and
loopne
and
pop
inc
jl
sub
and
xchg
sub
sub
clc
jle
aam
push
fistpl
mov
je
jbe
ljmp
adc
sbb
scas
push
cmp
add
out
push
push
sub
dec
add
and
pushf
lods
inc
lcall
sub
jae
add
and
mov
dec
popa
pop
sbb
and
mov
sbb
adc
fstl
outsb
or
cmp
mov
inc
dec
mov
pushf
ret
inc
addr16
fsubrl
fbld
out
jb
insb
adc
add
mov
ret
cmp
mov
jns
add
push
adc
pop
push
dec
push
xlat
adc
or
fwait
loopne
jae
pop
enter
loope
loope
orl
push
push
pop
movsl
or
inc
push
aam
xor
push
mov
adc
dec
add
ficoms
shlb
cmpb
test
cmpsb
ror
out
pushf
adc
dec
pop
cmp
pop
xor
and
pop
inc
sbb
sti
lret
and
add
gs
push
mov
popf
adc
jo
les
add
mov
in
dec
ja
mov
aaa
rolb
xlat
push
mov
les
push
repnz
xchg
std
dec
cwtl
ja
rolb
add
lods
cmpb
lret
mov
xor
or
add
adc
jecxz
mov
clc
mov
bound
add
std
clc
pop
or
cmpsb
scas
mov
sbb
jo
jl
and
push
pop
adc
mov
or
aam
nop
adc
adc
push
roll
test
movsb
sbb
call
jmp
add
divb
mov
push
or
adc
push
les
and
push
xchg
adc
pop
jae
add
rclb
inc
rcrl
sbb
inc
pop
xor
rcr
shl
in
add
push
insb
enter
addb
daa
out
cwtl
sbb
in
lret
jmp
pop
cmp
fcmovne
outsb
shlb
xor
mov
adcb
andl
adc
xor
clc
xchg
adc
lret
lds
xchg
jecxz
lods
push
scas
dec
cmpsl
stos
mov
lds
in
adc
sub
push
jle
xor
mov
pop
scas
jge
push
jmp
or
shlb
cmc
pop
mov
cs
aam
mov
je
loope
push
fbld
mov
dec
adc
test
fs
out
push
dec
sbb
movsb
add
pop
daa
jns
adc
xchg
movsb
xchg
sbb
adc
test
inc
add
sub
movsb
sub
dec
add
cwtl
push
add
mov
hlt
movsb
dec
mov
add
sub
or
adc
rclb
ljmp
je
data16
fsubs
inc
xchg
adc
les
and
shlb
push
in
test
add
dec
in
add
inc
sbb
dec
jae
add
stos
xchg
jns
lret
xchg
xor
rorb
mov
outsl
sbb
ss
rorl
or
add
jmp
or
mov
daa
loopne
or
test
pusha
mov
mov
inc
mov
sbb
fs
loopne
outsb
sbb
leave
and
cmp
in
fisttpll
pop
lret
inc
xchg
mov
adc
iret
mov
shrd
insb
mov
push
pop
adc
popa
lods
in
movsb
in
sub
cmp
jg
push
mov
fnsave
add
ljmp
add
pop
jl
push
and
loopne
sub
ret
lret
xorb
stos
and
inc
imul
push
or
lahf
pop
into
enter
pop
xchg
jae
xchg
xchg
add
mov
bound
sahf
xor
xor
loopne
movsb
pusha
adc
cmpsl
cmpsb
mov
sub
mov
ljmp
les
mov
and
dec
inc
insb
push
or
add
jnp
jecxz
loop
sub
dec
iret
mov
push
inc
fs
pusha
pop
rorl
mov
pop
psllq
xlat
lock
repnz
xchg
imul
das
mov
addl
and
dec
sbb
adc
lds
int3
sub
dec
stc
cmpsb
inc
jnp
subb
jge
add
xchg
test
adc
iret
dec
dec
xor
or
lods
or
mov
in
pavgw
icebp
mov
cli
test
pop
negl
adcl
dec
aas
pop
jns
add
pushf
sub
mov
add
sub
jl
or
lock
nop
enter
sbbl
cmp
or
push
pop
xchg
xchg
movsl
cmp
add
inc
and
and
lahf
dec
sub
xor
fcomps
outsl
fiadds
cmpsl
mov
and
pop
pop
jl
sub
adc
iret
sub
add
mov
and
adc
add
hlt
clc
sub
lret
popa
cltd
mov
stc
adc
add
rorl
out
mov
imul
add
adc
movsb
cld
dec
and
or
or
or
and
xchg
and
dec
add
push
enter
je
or
int3
fbstp
enter
icebp
xor
addr16
cmp
lahf
lods
mov
add
adc
mov
pushf
and
add
in
pop
and
sub
push
nop
add
cli
les
ret
idiv
movsb
xor
sbb
pushf
add
xchg
test
rclb
inc
and
lcall
inc
mov
inc
jecxz
jo
adc
xchg
dec
int3
repz
jg
cld
xor
push
add
or
fistpl
ss
mull
mov
fcomp
lahf
pop
loopne
add
xor
mov
lret
add
push
imul
mov
addb
icebp
cwtl
add
in
mov
add
bound
or
sbbb
xor
inc
jmp
fiaddl
pop
mov
cltd
dec
jecxz
out
push
popf
jne
mov
int
mov
mov
sbb
sahf
inc
mov
and
rolb
pop
cwtl
jo
repz
cmp
mov
add
cld
insb
cmp
add
into
pop
daa
push
fsts
es
bound
sub
and
iret
push
cwtl
out
xor
sub
out
and
dec
out
sbb
lret
adc
les
test
enter
xor
les
mov
jnp
cmp
mov
cmp
sub
cmpsl
and
test
stos
cmp
add
adc
mov
and
sti
les
sbb
adc
mov
cmpb
test
inc
dec
in
add
out
sahf
sub
leave
cmp
jg
xor
mov
sub
jecxz
movsl
incb
cwtl
das
dec
jp
sbb
adc
jb
mov
mov
aaa
mov
pop
pop
mov
test
xchg
int3
xorb
pop
jge
adc
cmp
sbb
gs
sti
and
and
cs
or
cmp
enter
inc
fbstp
lock
sbb
and
cmpsb
aam
into
pop
push
mov
dec
leave
or
xor
in
cmp
rorl
xor
adc
out
in
cwtl
inc
arpl
cmp
movb
andb
addb
int3
and
mov
add
rol
adc
mov
in
or
std
pop
xor
and
mov
adc
sti
test
mov
pushf
inc
or
fstpt
and
lret
outsb
add
lahf
dec
mov
sbb
xorps
inc
enter
lock
out
push
out
adc
in
sqrtps
mov
mov
or
pop
cwtl
outsb
jno
mov
push
add
mov
pcmpeqw
test
mov
popf
xchg
add
or
sub
fiadds
push
xorl
fs
sahf
das
stos
sbb
hlt
movsb
addb
les
push
mov
sub
adc
add
push
jl
pop
mov
int
add
popf
sbb
xchg
add
in
fildl
ret
mov
ds
aad
sub
add
xchg
lret
imul
xchg
xor
cs
je
pop
sbb
nop
push
cmc
pushf
dec
adc
mov
and
addr16
pop
sbb
pop
cmpb
push
ret
lret
das
enter
stos
cmpsl
adc
push
dec
or
or
dec
and
sbb
in
lods
push
addb
jmp
add
fcomp
das
int3
andl
dec
sbb
leave
shrb
out
mov
or
lock
add
push
push
jg
push
hlt
ljmp
dec
jmp
and
pop
push
shll
add
shll
lret
push
adc
cmovs
add
or
xchg
sub
dec
aas
mov
pop
add
sbb
enter
jle
push
and
daa
addr16
enter
push
xchg
test
mov
rolb
xor
mov
in
rorb
and
lock
mov
lods
and
fsubs
insl
adc
in
xchg
in
sbb
pusha
jmp
leave
int3
das
fs
dec
cwtl
js
cli
sub
push
and
add
xchg
mov
add
mov
shrb
or
add
ljmp
cmp
xor
loopne
frstor
mov
xor
cwtl
push
dec
pop
pop
pop
shll
shlb
cmpsl
shrb
adc
sbb
jecxz
icebp
xor
add
or
jbe
loope
or
aam
or
cwtl
add
cmpsb
adc
push
and
cmp
das
loop
aam
add
pop
daa
mov
mov
shll
mov
mov
push
int
inc
dec
sti
pop
and
xor
inc
loope
mov
call
ds
inc
xor
push
pusha
in
mov
je
add
sbb
in
fisubl
sbb
dec
push
adc
mov
jno
jmp
sar
loop
sbb
sarb
and
push
jle
cmpsb
lock
mov
add
push
fstps
add
mov
pushf
loopne
sti
aam
mov
xor
or
adc
call
dec
mov
testl
lock
or
hlt
cmp
repnz
push
sbb
pop
or
sbb
and
movsl
mov
sub
in
xor
dec
or
mov
push
jl
loopne
fwait
ds
xor
scas
pop
or
stos
add
mov
sub
int
loopne
into
daa
unpckhps
add
mov
mov
andb
mov
inc
add
xchg
loopne
xchg
add
lods
fadds
loopne
adc
xchg
enter
mov
lret
mov
mov
add
popa
xchg
add
add
out
xchg
sbb
dec
test
xor
aas
lahf
sub
dec
add
sti
push
jecxz
lret
addl
mov
or
add
push
dec
dec
add
arpl
sbb
lea
pop
mov
cli
add
jmp
inc
pop
dec
pushf
mov
test
in
sub
lds
cmp
pop
xorl
enter
lcall
fwait
sbb
add
inc
punpckhwd
fnstcw
dec
cmpsb
mov
dec
and
dec
rcrb
pop
ljmp
push
insb
outsl
rcr
mov
iret
mov
pop
divl
andl
push
pushf
sub
sahf
xorl
subb
popa
cmp
and
lea
cld
adc
jecxz
mov
adc
and
mov
add
rcrb
push
cmpb
adc
mov
jns
inc
out
out
add
push
bound
adc
fwait
je
cwtl
test
out
cmp
xor
lods
out
add
aas
pusha
cmpsb
xorb
cmp
xchg
sub
mov
adc
inc
pop
and
mov
ret
xlat
jmp
into
outsb
push
lods
jg
in
andb
fstpl
int3
orl
aam
scas
and
scas
add
and
gs
xchg
sbb
mov
shlb
pmaxub
add
mov
negb
xor
sub
outsl
add
jle
xchg
dec
adc
mov
aam
out
push
mov
mov
out
stos
xchg
test
data16
addl
mov
or
push
rcll
in
shll
mov
popa
or
add
in
cld
mov
push
subl
mov
fs
cwtl
xchg
cwtl
rolb
bound
stos
lds
add
lcall
add
xchg
adc
cmpsb
sbb
push
int
push
sbb
sbb
and
add
iret
add
xor
adc
push
xor
cmp
pusha
pop
or
subl
add
iret
inc
addb
in
sub
xchg
inc
inc
cmpsl
movsb
scas
mov
jae
out
xchg
add
jbe
xorb
inc
xor
add
mov
es
rcrb
dec
lods
and
xchg
adc
fnop
aad
dec
pop
jge
add
adc
inc
fsubs
repnz
xor
enter
and
leave
xor
mov
andl
add
outsb
sbb
cmpsb
xchg
add
pop
or
mov
mov
or
cmp
or
inc
adc
inc
and
test
adc
cmp
push
add
mov
jecxz
in
and
or
sbb
mov
icebp
xchg
cwtl
pop
ret
dec
push
cmp
out
shlb
adc
push
es
adc
add
push
push
fiaddl
xchg
fldt
push
test
test
addl
add
ljmp
mov
dec
push
mov
inc
add
mov
fsubrs
mov
xor
or
mov
xor
inc
js
cld
add
xchg
sub
daa
push
cmovns
sbb
add
adc
mov
inc
mov
sti
and
cld
addl
mov
mov
popa
cld
add
in
pop
cmp
inc
mov
enter
xor
bound
jo
adc
addb
cmpsb
ret
shll
mov
add
js
cmp
pop
repnz
cmpl
cmpsl
sub
out
repz
dec
loopne
xchg
sub
sbb
add
mov
dec
or
shlb
inc
push
pop
mov
imul
pop
push
push
dec
inc
jbe
sbb
loopne
pop
jae
add
sbb
pushf
pop
lret
mov
add
cwtl
dec
addl
repnz
sub
jae
add
jecxz,pt
xor
add
xlat
inc
xchg
jg
and
push
loope
idivb
cmp
xchg
rcll
pop
dec
inc
sti
adc
push
pop
cmp
add
shlb
mov
data16
sub
cs
lahf
inc
push
cmp
inc
sbb
nop
adc
inc
jae
das
xchg
nop
inc
inc
jle
add
les
out
scas
test
pop
imulb
pop
adc
mov
mull
je
inc
repz
xchg
push
sbb
mov
xchg
mov
gs
adc
aaa
cmpl
dec
wbinvd
nop
call
adc
sahf
ss
jno
add
jle
dec
cmp
pop
int3
and
sbb
adcb
into
jp
push
adc
enter
stos
jecxz
jno
push
inc
or
jg
into
out
add
repnz
arpl
and
pop
add
movsl
out
sbb
scas
cmpb
push
into
clc
or
mov
add
cltd
pop
aaa
imul
mov
or
and
jg
addb
pop
add
idivb
sbb
fildll
adcb
in
or
mov
movsb
push
pushf
jg
int3
mov
push
cmp
push
cmc
call
push
jo
dec
mov
pop
inc
adc
mov
adc
popa
test
jne
push
movsb
hlt
sti
loopne
or
cld
cs
push
jnp
xlat
mov
push
add
cltd
dec
sbb
scas
call
and
cmpsb
xchg
mov
add
out
pop
add
mov
fs
andl
addl
lret
adc
sbb
mov
push
push
push
push
xchg
fdivs
add
push
in
je
out
mov
cmp
sbb
cs
sbb
mov
loop
adc
arpl
subb
shlb
clc
jno
add
bound
jb
cmpsl
xchg
ret
jnp
insl
out
mov
mov
pop
in
pop
mov
aas
imul
pop
test
popf
pop
rolb
jmp
dec
and
adc
rol
mov
orl
cmp
mov
jl
push
add
mov
insl
aaa
andb
imulb
addb
enter
or
jle
and
or
stos
add
cwtl
cmc
and
mov
pusha
sbbb
jno
shl
insb
into
pop
sbb
imul
jae
incl
mov
push
rclb
cmp
mov
xor
and
xchg
orb
dec
imul
add
clc
fldenv
test
inc
add
addr16
je
sbb
xchg
lods
xchg
jo
jno
push
inc
adcb
push
in
xchg
and
mov
xorb
adc
sbb
add
sbb
and
stos
pushf
sbb
and
lock
sti
add
repnz
pop
rcll
test
push
xlat
jnp
fimuls
lret
adc
or
mov
popf
pop
push
inc
xor
pop
jp
gs
add
cmp
mov
in
add
jnp
je
and
lock
add
ret
mov
add
rcrl
les
sub
and
cmpb
hlt
pop
add
jmp
mov
arpl
push
jmp
int3
sbb
sub
and
or
mov
lahf
outsl
xor
es
xor
cli
popa
add
jmp
add
xor
orl
std
das
adc
mov
ror
cmp
add
or
pop
push
lcall
ficompl
push
ret
shlb
loop
clc
and
test
pop
push
cmp
or
xchg
js
aas
sub
loopne
cmp
es
rol
or
ret
mov
mov
add
arpl
notl
addb
scas
add
jecxz
cmp
imul
in
or
es
push
gs
inc
addr16
add
ja
mov
sbb
mov
or
ret
flds
and
jae
pop
sarb
cmp
push
or
ja
mov
and
subb
movsb
or
add
push
test
enter
enter
imul
xchg
out
push
add
mov
lock
add
hlt
loopne
mov
jae
inc
fldt
lock
cmp
fisttpll
rorb
sbb
jmp
jmp
ret
lds
add
mov
scas
fwait
add
push
xor
sub
and
sbb
sbb
aas
nop
hlt
and
insl
nop
add
pop
lds
jb
sbb
pop
sub
dec
xor
cmp
add
shlb
cmp
ja
subb
fcmovbe
pop
ret
mulb
pop
inc
add
or
sbb
sub
mov
inc
push
fldt
outsb
jnp
push
adc
sub
sub
jnp
pop
add
fstpt
sahf
add
rcll
stos
shr
and
ljmp
mov
inc
add
xor
sub
sbbl
and
cmpsb
pushf
dec
adc
add
rol
jge
leave
jne
cvtpi2ps
xchg
flds
mov
test
shrl
dec
xor
insb
fidivrl
andb
fs
inc
jae
pop
mov
aam
test
cmp
dec
jnp
leave
andb
jmp
mov
sbb
mov
ds
test
jmp
or
add
je
rol
push
xor
setle
mov
pusha
testb
pushf
push
add
xchg
mov
iret
gs
jbe
pop
loopne
sbb
addr16
push
in
imul
scas
cmp
test
push
cmpsb
cwtl
or
or
jmp
jmp
adc
sbb
daa
pop
pop
xorl
mov
jo
add
push
stos
and
and
sbb
add
jecxz
daa
adc
in
cmpsb
xor
add
sti
fwait
dec
sub
imul
and
pop
lds
pop
lret
das
sbb
icebp
cs
sub
add
jne
ja
sbb
test
addr16
clc
and
pop
ljmp
ret
pusha
fmuls
fwait
cld
outsl
add
stos
inc
mov
add
psubusb
jne
mov
stc
xor
fisttpl
pop
imul
mov
loopne
sub
andb
das
fildll
lds
fistl
and
sbb
jo
or
pusha
sub
add
or
les
cmp
cmpsb
add
cmc
pop
clc
add
sbb
xor
mov
cmp
aaa
aas
dec
in
aad
imul
rorb
je
xchg
jnp
jmp
call
fisttpll
jnp
cmpsb
mov
or
fsubs
fcmovne
pusha
mov
nop
ret
cmp
lret
lahf
mov
ss
or
add
push
sbb
test
sub
subl
pop
adc
rclb
decb
loopne
or
les
aad
sub
fldt
sbb
inc
push
mov
add
enter
xchg
and
dec
shlb
aas
push
or
rcr
xchg
xor
add
push
in
mov
cmp
xlat
scas
and
sub
sti
xchg
fidivrl
pop
iret
push
and
xchg
js
adc
add
fsts
jecxz
in
ret
rorb
dec
mov
std
mov
xor
addr16
fistl
fs
pop
mov
inc
add
mov
mov
cwtl
aas
add
mov
mov
nop
add
dec
push
mov
jno
xchg
jnp
add
negb
or
jg
movl
loopne
ret
rol
dec
inc
xchg
sub
addb
sbb
cltd
jo
lahf
in
jb
xchg
push
push
lods
cmp
out
or
add
addr16
sbb
lcall
jae
add
cwtl
xor
negb
or
push
lods
lret
add
or
aaa
bound
je
xchg
add
sbb
jno
add
jnp
ja
pusha
push
add
pmaxub
ret
cmp
sub
push
cmp
xchg
cmpsb
in
mov
push
addl
jecxz
and
and
sub
scas
mov
sbb
repnz
sbb
insb
addl
pop
jle
mov
loop
mov
fldt
add
iret
jle
je
lods
shrb
out
sahf
pop
dec
in
cmc
inc
loope
xor
aam
cmpsb
test
rclb
inc
mov
mov
incb
popf
das
and
pop
mov
subb
hlt
add
push
cwtl
push
jmp
pavgb
push
cwtl
or
test
mov
ds
rcrl
or
mov
jo
mov
mov
push
sub
jmp
push
sub
add
mov
jmp
or
cltd
or
lods
sbb
js
and
stos
push
xchg
adc
cld
xor
dec
jb
mov
gs
mov
sbb
add
scas
ret
push
movsb
testb
push
pushl
test
jge
add
arpl
mov
hlt
cwtl
sti
adc
xor
cld
ffreep
xor
popl
sbb
into
test
pusha
inc
sbb
xchg
insb
add
pushf
jb
arpl
adc
mov
jg
add
and
add
popa
scas
and
jo
rorb
add
repnz
sub
es
lahf
mov
sbb
xor
jle
mov
mov
pop
fsubrp
adc
addl
in
pop
aad
sub
add
jmp
mov
faddl
adc
jnp
aaa
fidivl
sbb
mul
and
sbb
and
rcrb
jno
mov
mov
sbb
loop
fcomps
sarl
ja
stos
sub
imul
xchg
inc
push
fiadds
sub
pcmpgtb
mov
dec
in
dec
sub
shll
ja
jle
fsubl
rolb
ffree
or
pop
dec
jl
jmp
and
mov
or
and
adc
pop
dec
or
xor
xchg
add
mov
divl
test
xlat
inc
test
loope
adc
push
jb
fmul
sub
add
fdivrl
es
inc
inc
loopne
scas
dec
adc
adc
jnp
add
ficomps
mov
dec
sub
or
xchg
insl
push
mov
arpl
adc
es
insb
and
and
test
push
rol
mov
ds
test
ja
clc
testl
test
push
xor
loop
adc
xlat
add
cli
cltd
mov
ljmp
push
xor
pop
sarb
test
xchg
dec
or
inc
fs
pushf
and
sub
andb
sub
add
sub
sbb
aas
insb
mov
inc
mov
subb
cmp
adc
or
push
jae
add
bswap
rolb
rorl
push
pop
cs
shrb
xor
mov
addr16
mov
add
nop
in
add
testb
or
jl
cmpsb
or
or
cmpsl
sti
pop
sbb
adc
aad
lock
sub
dec
sbb
cmp
icebp
pop
arpl
mov
and
push
or
fwait
scas
mov
mov
pop
out
sub
inc
rcrl
mov
pop
lret
add
push
cmp
dec
daa
add
aas
movsb
dec
call
sub
push
test
stos
pop
out
mov
add
movsb
pushf
push
jmp
dec
sub
imul
dec
push
push
dec
adc
test
sub
mov
roll
out
loopne
or
outsl
pushf
call
bound
daa
jno
pop
add
fisttpll
adc
lret
out
jae
shlb
je
add
push
mov
push
jl
adc
hlt
pop
push
gs
sbb
mov
sahf
sub
add
test
dec
mov
gs
stos
jmp
test
cmp
dec
dec
pusha
jns
call
lcall
mov
lahf
mov
pop
mov
arpl
sbb
jge
add
in
fucom
push
lods
dec
jnp
adc
addr16
rcl
mov
ja
adc
lahf
aaa
adc
xor
cmp
icebp
xlat
and
add
pop
or
test
stc
xor
cmc
fiadds
push
mov
jo
cli
cltd
fsubrl
or
ds
nop
and
adc
push
mov
cwtl
mov
adc
sub
ljmp
or
dec
or
add
add
enter
mov
dec
and
pop
and
test
cld
mov
xchg
push
mov
dec
pop
xchg
enter
sbbl
mov
push
ret
jg
and
inc
or
add
mov
push
cmp
loopne
add
stc
dec
imul
cmp
ret
push
mov
rcll
pop
dec
or
or
push
pushf
lods
in
js
fisubl
leave
and
inc
sbb
sub
adc
add
push
add
and
addr16
pop
mov
adc
lock
mov
or
int
and
mov
lock
push
xor
or
add
adc
and
adc
mov
mov
cld
lret
in
adc
push
sbb
xor
push
and
pop
pop
js
add
sub
ret
cltd
pshufw
lcall
pushf
mov
mov
adc
movsb
pop
add
and
test
and
mov
jecxz
in
nop
loopne
jnp
sahf
or
dec
and
pxor
and
and
inc
leave
pushf
cmp
add
scas
cmp
jo
out
int
rcrl
ds
xchg
shrl
sub
or
rcll
cmp
and
out
adc
filds
movsl
push
fdivl
push
push
punpcklbw
cmp
addl
sbb
fstps
rcl
rorb
mov
sub
inc
or
sbb
loopne
push
mov
test
xor
mov
pop
add
sub
mov
add
mov
imul
add
pop
cs
mov
pop
popf
test
add
push
fxch
add
mov
dec
pop
jno
mov
or
jo
sub
or
sub
and
jecxz
sbb
add
inc
cmpsl
xchg
js
call
enter
mulb
push
xchg
and
mov
mov
sti
dec
orl
aam
push
and
enter
leave
loop
in
cli
and
call
out
jle
push
rolb
loopne
lret
mov
sbb
rcrb
push
test
add
icebp
push
outsl
mull
stos
addr16
xor
fcomi
xor
hlt
push
add
mov
jno
mov
adc
cmc
xor
inc
sti
mov
pop
scas
dec
cmp
adc
pop
mov
mov
jo
mov
jne
iret
bound
mov
jg
add
dec
xchg
dec
sbb
inc
sbb
dec
mov
add
and
sub
insb
push
sbb
jne
cmp
scas
jo
cmp
fisttpll
xchg
pop
or
xchg
xchg
inc
out
adc
lret
cmc
iret
add
mov
xchg
sub
ja
mov
je
in
popa
mov
and
sub
or
pop
sub
xchg
or
ds
push
cmp
xchg
rcrb
pop
add
lret
or
push
pop
push
xchg
sub
dec
sub
mov
mov
je
xor
shlb
jl
stos
out
nop
test
xchg
add
mov
lods
adc
or
add
outsl
mov
add
inc
push
xchg
rorb
adc
sbb
loope
in
push
stos
add
pop
add
aad
sub
jge
and
mov
lahf
out
rcll
push
xor
and
enter
movsb
push
divb
addl
jno
jne
sub
rol
iret
jle
add
pop
scas
dec
add
pop
fcoms
pop
sbb
xor
leave
aaa
fstps
fmul
icebp
add
jge
out
pop
nop
nop
sbb
mov
inc
pop
hlt
pop
lods
mov
cmp
outsb
xor
and
push
std
rclb
lds
dec
and
pusha
or
gs
xchg
add
adc
sarb
add
add
push
test
jge
and
add
shll
hlt
and
wrmsr
testb
mov
sti
das
push
enter
sub
jne
or
mov
cltd
mov
or
pop
jge
sbb
cmpsl
and
xor
dec
add
add
ret
mov
cmpsb
ljmp
lahf
loope
mov
inc
mov
faddl
and
lret
sub
cli
add
popa
addb
inc
mov
mov
in
dec
xchg
ret
mov
testl
aad
adc
inc
cli
lock
pop
inc
mov
or
rcl
push
ret
jns
xchg
iret
pop
add
setp
pop
and
mov
xchg
shll
add
movl
mov
ds
lods
pop
cmp
and
test
lds
dec
add
mov
out
pop
sbb
cld
clc
fisubs
notl
pop
add
add
addr16
and
xchg
add
popf
pop
dec
int
mov
movsb
sbb
cmp
xor
or
cmp
sbb
adc
push
mov
rclb
in
ljmp
inc
push
orb
push
push
adc
sbb
pop
lods
pop
pop
or
inc
and
xlat
jns
bound
adc
xchg
loopne
test
mov
je
or
repz
add
cwtl
xor
pop
jle
aad
js
dec
xor
cmpb
shr
icebp
add
adc
in
push
mov
and
lea
add
xchg
and
ja
stos
add
aaa
dec
cmpsb
adc
adc
mov
into
pusha
or
enter
ret
shrb
shrl
js
bound
cvttps2pi
addl
pop
xchg
lcall
add
and
pop
add
ffree
mov
divb
add
sbbb
into
nop
inc
ret
add
subl
jo
and
adc
push
leave
pop
sbb
cmp
jns
add
dec
ss
aad
cld
out
add
dec
jno
pop
mov
sub
and
jno
stc
add
sti
pop
notl
mov
push
repnz
test
jmp
test
data16
mov
cmovo
cmp
sub
push
add
sbb
dec
pop
inc
fidivrl
add
xchg
add
cmp
xchg
mov
mov
in
rclb
into
test
mov
in
fldl2e
repnz
push
or
mov
adc
aad
fiadds
and
adc
add
aad
mov
xor
add
jp
adc
pop
loop
sbb
inc
les
iret
test
mov
mov
gs
xchg
test
movsb
sti
add
roll
adc
faddp
movsb
test
test
mov
in
lods
out
pop
call
mov
mov
orb
test
add
les
pop
sub
stos
in
add
jmp
mov
and
mov
lea
and
lahf
pushf
mov
test
ljmp
fistpl
dec
int
int3
cmp
mov
out
mov
mov
jbe
jl
jg
mov
inc
loopne
les
push
fisttpl
fnstcw
mov
cwtl
or
addb
divb
add
push
xor
pop
rolb
jbe
incl
jecxz
fistpl
adc
pushf
sbb
fisttpll
pop
lret
adcb
inc
add
adc
jo
data16
sbb
sbb
add
adc
movsb
or
xchg
aam
add
adc
ss
or
push
aam
add
repnz
ror
addb
lods
frstor
les
or
jne
repnz
out
cmp
sbb
aas
push
icebp
add
push
movsl
out
test
movups
fs
pop
inc
fadds
add
jno
sub
xor
je
sub
jmp
push
sti
jno
lea
add
shll
andb
add
or
hlt
push
das
or
imul
jge
fwait
jo
fldln2
or
xchg
mov
fldl
inc
mov
int3
sub
adc
sbb
rcll
fsubrs
pop
dec
xchg
and
and
adc
andb
iret
mov
shlb
clc
cld
push
imul
sbb
ret
add
mov
enter
push
sbb
push
xchg
adc
adcb
mov
cmp
les
sbbb
sub
insl
adc
xor
add
rcrl
xor
test
or
icebp
xchg
sub
es
imul
je
add
aas
test
ds
push
enter
add
add
cld
mov
mov
push
push
data16
mov
js
adc
pusha
push
pop
mov
std
mulb
or
test
cld
adcb
mov
popa
imul
mov
nop
adc
insl
mov
shlb
adcb
mov
adc
push
xchg
ret
add
pop
inc
adc
sub
or
add
scas
jns
or
adc
shll
jne
xor
mov
rcr
mov
pop
cltd
mov
mov
push
in
mov
clc
add
or
sub
cwtl
cmp
add
inc
pop
ret
loope
or
xor
das
movsl
orl
cltd
subb
or
mov
repnz
mov
inc
fcomp
add
push
jb
or
in
or
push
dec
jl
add
or
add
pmaxub
fucomp
xchg
dec
testl
xchg
dec
pop
adc
and
add
and
dec
fisttpl
jp
cltd
call
jo
and
sub
test
aad
xor
into
xchg
in
icebp
es
sysenter
cld
out
push
push
xor
sbb
pop
mov
ljmpw
faddl
shrl
lock
push
xor
loop,pn
or
adc
sbb
stc
leave
adc
add
dec
and
cmp
rcpps
arpl
pop
sbb
xchg
shrb
or
cld
out
add
mov
or
cwtl
add
inc
inc
and
stos
xor
loopne
faddl
pusha
and
and
mov
xor
inc
mov
add
or
jl
mov
cmp
mov
bound
or
lds
sub
mov
adcb
arpl
and
mov
push
pop
sub
dec
into
add
fldcw
jecxz
lods
push
fidivrs
cld
add
add
inc
repnz
fs
xor
add
test
scas
add
xchg
cmp
iret
sbb
and
mov
loop
pop
or
mov
xorl
test
or
mov
in
out
mov
ljmp
imul
mov
xchg
sbb
test
xlat
adc
lock
cld
sub
mov
lahf
or
pop
iret
nop
movsb
subl
mov
xor
dec
and
adcb
lret
pop
cmp
jb
dec
cmp
addr16
xchg
movsb
adc
and
inc
adc
flds
js
mov
cld
inc
and
and
shll
mov
ret
mov
sub
sbb
repnz
mov
xchg
sbb
adc
xchg
lret
add
mov
movsb
enter
adc
loope
sti
mov
mov
andb
sti
icebp
popa
hlt
jg
add
mov
sub
jl
mov
adc
imul
xor
das
jne
notl
adc
sbb
sbb
jge
sbb
xchg
mov
add
shll
enter
fimuls
jb
fstpt
inc
insb
inc
mov
pop
stc
push
jo
mov
loopne
icebp
and
iret
inc
and
or
add
dec
jb
xor
sub
cmp
pusha
push
test
pop
xor
call
mov
shrl
or
cmp
add
incb
pop
add
pop
ret
das
repnz
sub
jae
jecxz
adc
jge
add
jp
mov
adc
orl
add
enter
jne
mov
inc
xor
sub
fs
mov
js
adc
adcl
into
out
mov
add
cmp
and
je
mov
pop
cwtl
jl
push
dec
xor
mov
add
pop
xorb
fnsave
mov
loopne
fld
xor
inc
inc
add
fptan
pop
sub
mov
ret
jno
mov
aas
jmp
mov
or
cltd
into
add
popf
data16
repz
push
push
add
pop
out
lods
add
xchg
and
jge
sti
loopne
popa
cmp
inc
add
stos
pop
sbb
jecxz
adc
add
mov
mov
es
movsb
or
ficoms
push
sub
into
outsb
pushf
mov
pop
dec
xchg
ret
mov
cmp
lcall
pop
std
jns
xor
movl
daa
xor
in
add
xor
mov
add
repz
sbb
pop
xor
inc
cmpsl
data16
dec
adc
pop
incl
insb
inc
imul
aad
pusha
xor
pop
rolb
xchg
sbb
aas
xchg
in
roll
add
pop
in
aam
rcrb
notb
xchg
push
push
add
xchg
sar
andl
push
push
icebp
rcrb
add
xchg
flds
mov
add
jae
mov
and
movsb
mov
sbb
nop
cmp
cli
insb
ret
jo
or
sub
mov
test
sub
insb
push
popa
incl
pop
lea
push
jnp
jp
jnp
add
scas
and
lods
add
cmp
les
imul
mov
xchg
js
repz
cld
andl
std
bound
jb
add
cwtl
mov
cli
mov
lret
pushf
adc
and
mov
xor
jo
xchg
test
dec
out
fiaddl
leave
fdivrs
push
pop
cmp
mov
add
arpl
test
ret
adc
cs
or
adc
mov
add
mov
adc
mov
jnp
mov
adc
inc
cmp
jecxz
mov
or
add
pusha
mov
xchg
cld
das
test
and
xchg
sub
mov
loopne
in
jg
jno
and
cmp
test
out
cmp
mov
mov
fiaddl
lds
sbb
add
out
add
dec
arpl
adc
lods
sub
and
jle
add
scas
jns
mov
adc
mov
xchg
sbb
mov
bound
ror
cmovge
lahf
loopne
out
es
push
aaa
cs
cmp
push
or
push
call
jne
pop
mov
and
stc
mov
je
popf
mov
orl
in
add
xorb
sbb
mov
pop
les
mov
sub
push
inc
insb
adc
cmc
popf
xchg
sub
and
adc
adc
or
rcll
and
in
pop
add
xchg
xor
repnz
add
sub
mov
lds
mov
cmp
and
and
pop
ret
jl
or
pushf
pop
shl
mov
add
pop
cld
adc
int
stos
lahf
push
dec
mov
in
inc
sbb
pop
pusha
test
fdivrl
xchg
xchg
or
push
cmp
push
iret
jle
xor
xchg
sub
movsl
mov
out
inc
xor
sbb
xor
cld
sub
sbb
out
adc
dec
mov
daa
testb
bound
pop
mov
mov
clc
and
sub
andb
xchg
adc
push
cld
clc
sub
pushf
xchg
frstor
lock
adc
out
mov
in
inc
lods
sub
pop
inc
cwtl
dec
mov
mov
ficompl
data16
shlb
pop
arpl
adc
call
insl
cmc
enter
adc
pop
sbb
cld
bound
test
mov
fcmovne
rcr
mov
or
in
sub
push
pop
rcll
inc
xor
mov
mulb
pop
mov
mov
repz
add
pop
inc
xor
cmpl
lods
push
fcmovnu
mov
mov
cmpsb
pop
push
lret
xchg
mov
and
adc
enter
scas
jno
ljmp
sahf
or
pop
repnz
andl
cmp
mov
pop
add
jns
jmp
outsl
push
sahf
movsb
inc
stc
std
or
dec
xchg
xor
movsl
in
jb
sub
dec
hlt
ret
add
lcall
xor
mov
cld
inc
popa
and
and
push
lds
ds
mov
rorb
mov
push
cmp
scas
sub
aam
cmc
xchg
ret
loopne
and
test
or
or
aam
sbb
adc
lods
ret
push
or
mov
dec
cmp
inc
inc
sub
xor
mov
pop
sahf
hlt
jl
cmp
inc
add
test
jne
and
rcll
add
or
or
js
or
sbb
pusha
adc
mov
jp
cld
pcmpgtw
sub
shrb
jg
or
xchg
lock
scas
mov
add
cmp
int
pop
cld
xor
dec
icebp
faddl
pop
and
cmc
and
adc
mov
in
pop
sbb
sbb
sahf
pop
add
shl
flds
cmp
pop
sub
and
std
adc
daa
push
xchg
and
push
or
aad
xchg
cld
loop
dec
and
js
movsl
in
push
mov
cli
mov
ljmp
lods
add
js
movsb
addb
xor
dec
mov
add
icebp
inc
stc
cli
push
add
out
xor
xchg
add
clc
jo
pop
xchg
sbb
cld
mov
adc
pop
cmp
add
mov
xchg
dec
mov
mov
movl
or
add
fildll
inc
jo
adc
jge
add
int
xchg
enter
mov
adc
std
inc
imul
popf
jle
dec
loope
xor
rcrl
js
addl
cltd
stos
lcall
bound
test
adc
mov
mov
repnz
movsb
cmp
ret
and
adc
imul
nop
shr
sbb
sub
dec
lock
fdivrs
nop
shr
sahf
mov
mov
lock
and
rorb
and
ds
sahf
fnsave
and
into
jno
ficoms
and
dec
or
movsb
add
mov
cmp
cmp
rorb
iret
jl
add
pop
or
mov
pop
mov
int3
xorb
add
in
imul
sub
addl
or
pop
adc
nop
add
insl
stos
fdivrl
sub
add
popa
mov
add
and
cmp
xchg
pop
push
mov
inc
xor
mov
xchg
and
lds
xor
mov
add
add
je
pop
mov
mov
and
fldt
push
nop
xchg
mov
mov
shll
lahf
jne
sbb
fmull
mov
add
rorb
call
je
push
sub
sub
add
std
lcall
dec
add
push
jo
shlb
mov
xchg
icebp
and
cwtl
fucomp
call
jmp
xor
add
xor
add
and
pop
fcompl
or
and
jo
add
cmp
lcall
adc
add
lods
addb
pop
dec
or
shll
sub
popa
scas
mov
sbb
pop
inc
add
sub
lcall
les
jo
sub
ficoml
jno
jp
or
ja
add
lret
sub
ljmp
xchg
pop
in
out
divps
add
mov
adc
mov
bound
xchg
adc
test
shlb
sub
jmp
mov
sub
dec
popf
add
fs
loop
add
mov
mov
sbb
and
lods
pop
cld
enter
data16
mov
fiadds
mov
insb
mov
add
xchg
cmp
andl
mov
mov
or
cli
dec
jo
sub
jl
std
sub
inc
jle
mov
int3
adc
out
mov
xorb
pop
test
popf
cmpsb
fidivrl
inc
hlt
and
push
mov
inc
add
inc
shrb
or
insb
test
mov
je
cmp
testl
leave
sbbl
data16
hlt
gs
xchg
loop
into
mov
repnz
sub
scas
jns
or
add
push
outsb
fmuls
jnp
into
cmp
stc
pusha
sti
cmc
add
mov
pop
and
push
mov
push
add
stos
repnz
testl
and
add
sti
or
or
roll
mov
adc
xchg
mov
or
mov
sub
pusha
in
xchg
adc
call
xchg
xchg
sbb
sub
adc
enter
xor
pop
jbe
js
xchg
std
sub
clc
xor
mov
push
fs
fmuls
rorb
pushf
sub
adc
pop
lods
inc
jl
mov
and
sub
pop
jmp
mov
jge
jae
xor
pusha
and
jo
outsl
xchg
add
movsb
notb
dec
adc
movsb
inc
lock
add
fcoml
ja
push
pop
mov
jae
add
pop
cmp
fimull
or
imul
pushf
in
js
arpl
xlat
imul
lods
xorb
push
xchg
adc
shll
or
adc
aaa
pop
pop
inc
movsl
and
inc
mov
in
xor
sub
push
or
add
add
sub
outsl
fiadds
insb
jl
sbb
cld
sub
pop
or
faddl
cmpsw
ja
aam
enter
add
xlat
mov
add
movb
cmp
lea
or
in
jge
push
dec
inc
xchg
addr16
or
stc
mov
or
leave
mov
lods
cs
or
cwtl
add
les
enter
mov
xchg
ja
jae
pop
into
or
xor
out
dec
test
nop
push
int3
orb
out
pop
dec
jne
pusha
inc
test
inc
sub
pop
es
or
sub
test
inc
xor
push
or
pop
js
js
fmuls
add
cmpsl
pop
mov
and
xchg
sti
or
shl
xor
xor
loope
les
push
sbb
xchg
in
loopne
mov
mov
xor
pop
sub
jne
xchg
loopne
xchg
sbb
push
sub
outsb
xor
call
or
fstpl
mov
sub
xchg
ret
dec
and
lock
or
adc
xlat
add
nop
bswap
lea
xchg
push
lahf
adc
jl
pop
repnz
mov
sbb
jmp
xchg
lock
mov
jne
dec
lcall
add
cs
mov
daa
fildl
jg
and
rolb
int3
das
testl
subl
jb
mov
mov
dec
andl
pop
insb
cmp
icebp
fsubl
loopne
pop
stos
sub
xchg
jecxz
inc
or
xchg
jl
pop
lock
leavew
stos
and
sub
mov
cmpsb
sbb
pop
insb
pop
xchg
hlt
pop
push
add
push
mov
sub
pushf
pop
loopne
push
cmpsl
imul
mov
gs
add
call
sbb
adc
cs
adc
jmp
sarl
sub
adc
imul
mov
xchg
lcall
push
mov
pop
push
decb
pop
rol
add
or
into
out
inc
out
or
andb
call
push
test
call
lcall
mov
add
push
mov
inc
aad
jg
mov
xor
lcall
sub
mov
int3
jnp
mov
add
in
adc
sub
xchg
andb
push
add
ret
arpl
ret
insl
rolb
sbb
mov
pop
add
xor
insl
pusha
and
pop
mov
pushf
lods
cwtl
xor
cli
fcompl
sbb
add
cmc
xchg
cltd
push
test
mov
imul
bound
lcall
insb
not
and
cwtl
xor
stos
xchg
sub
lahf
xchg
mov
xchg
cmp
lock
add
xor
mov
adc
mov
mov
int
add
or
sbb
cmp
or
xchg
xor
ret
hlt
pop
adc
add
dec
pop
jge
loopne
add
jbe
out
adc
mov
mov
cmp
fdiv
mov
lret
enter
add
repnz
pop
fs
shll
leave
imul
cmpsl
cmp
fs
add
inc
xchg
and
xchg
lods
push
test
xchg
roll
xor
adc
push
icebp
in
daa
adc
or
cwtl
add
xor
add
movsb
mov
or
es
pop
jb
add
pop
arpl
loopne
add
lcall
sbb
sbbb
loopne
inc
ss
pop
add
aaa
adc
sar
mov
sahf
ret
jae
xchg
loop
cmpsl
sbb
cmp
xor
pop
sbb
mov
mov
sub
daa
rol
add
ljmp
sbb
outsl
jbe
add
xor
jns
sbb
or
cmp
into
xchg
mov
fs
dec
out
or
mov
pop
jmp
je
idivb
push
mov
adc
sbbb
dec
pop
xchg
add
movsl
outsl
aam
bound
loop
clc
call
adc
xchg
mov
andb
push
cs
outsl
and
stc
xor
adc
and
mov
decl
jns
fs
xor
xchg
hlt
clc
xchg
push
icebp
test
psubb
mov
lahf
stos
xor
lret
bnd
insb
sub
or
jnp
ja
push
imul
rcll
mov
out
push
inc
xchg
rolb
mov
dec
cwtl
jp
lret
or
andl
mov
cwtl
add
jnp
cmp
clc
xor
mov
xchg
adc
or
insb
inc
les
mov
jns
push
add
in
pushf
sti
out
adc
lea
adc
and
jae
jbe
and
pop
sar
jb
push
jl
add
adc
leave
mov
mov
dec
or
test
or
loopne
push
or
lret
jno
leave
outsl
in
sbbb
sbb
sbbb
mov
inc
pop
and
add
fimull
add
imul
ja
jae
xor
cmpsb
adc
cli
adc
or
pop
mov
add
std
shrl
jge
add
rorl
lgs
daa
mov
clc
xor
dec
lahf
jbe
jnp
add
test
inc
jne
add
scas
ja
sub
mov
add
mov
icebp
daa
adc
inc
xor
data16
icebp
lret
fsub
ljmp
dec
mov
fcoms
gs
add
test
add
fidivs
stc
adc
jg
clc
xor
cmp
popa
add
mov
jecxz
cmp
jmp
or
add
mov
cmc
xchg
negl
and
xor
out
xor
xor
add
aam
mov
sub
in
rolb
dec
inc
adc
and
addr16
testl
lods
inc
test
ffree
out
imul
or
jbe
xchg
or
loopne
test
sub
sub
mov
add
es
mov
xchg
add
mov
sarl
fadd
mov
push
imul
xor
dec
jp
add
cmc
xchg
cmp
push
aam
mov
jb
add
cmp
aas
add
mov
ss
enter
neg
ds
icebp
clc
test
push
mov
dec
adcb
repnz
addb
and
popf
pop
xlat
jnp
and
nop
shll
pop
es
add
push
pushf
add
popa
or
sub
hlt
cmpsl
arpl
scas
sbbl
xor
xchg
dec
pop
adc
xchg
push
cmpsl
mov
inc
sbb
xchg
push
pushf
add
mov
mov
pop
sbb
fstps
mov
lret
or
jno
mov
mov
add
cmp
dec
mov
shr
jmp
pusha
mov
mov
test
or
nop
push
pop
or
dec
mov
ret
or
add
int3
in
and
popf
adcl
testl
in
add
scas
and
sbb
mov
add
shrb
lds
sub
mov
mov
loope
cmp
or
mov
mov
test
insb
daa
mov
js
add
mov
inc
mov
mov
fsubl
movsb
sbb
pop
pop
dec
pusha
dec
push
xor
mov
mov
clc
or
sbb
dec
cmc
pop
sub
cld
push
adc
inc
push
mov
mov
sti
or
scas
add
das
fisubs
lea
push
out
sbb
xchg
sbb
pop
sub
push
pushl
push
lock
add
xor
dec
paddsw
or
sub
and
aam
das
fwait
cmc
rol
pushf
xchg
lret
push
xchg
pop
fcoms
mov
shll
jp
push
lea
or
sbb
inc
rolb
mov
mov
js
es
arpl
xor
mov
adc
fs
dec
mov
inc
mov
std
popl
repnz
pop
lods
push
in
mov
lea
adc
fwait
in
pop
inc
clc
ret
adc
pop
xchg
cmp
mov
aam
mov
pushf
clc
out
add
mov
in
jmp
or
and
mov
add
imul
hlt
mov
cwtl
int3
data16
add
test
push
mov
lods
dec
in
jnp
or
test
int3
mov
adcb
into
jp
mov
sbb
inc
add
pop
push
mov
loop
add
test
cmp
adc
inc
cwtl
xchg
das
fcmovnb
inc
dec
inc
or
enter
or
push
cmp
les
xchg
jnp
add
pop
out
xchg
nop
pop
nop
sbb
cld
xchg
add
lds
lock
decb
sub
sbbb
and
add
icebp
jl
inc
cmp
inc
mov
gs
icebp
mov
sbb
adc
pushf
sbb
lret
sub
rol
adc
push
data16
mov
inc
or
test
xor
sbb
mov
cmp
push
sub
jnp
js
add
sbb
inc
pop
and
scas
sub
sub
adc
add
mov
fstpl
data16
fcmovbe
cmpsl
jp
xchg
fs
adc
sarb
leave
test
pop
lea
lret
push
js
popf
sbb
xchg
push
rcl
cmpsl
cmp
jmp
loope
add
add
add
pop
add
pop
imul
add
sbb
mov
jns
jg
xor
jns
pop
pusha
add
stos
add
add
add
ljmp
pop
mov
xor
daa
and
loopne
pop
push
popl
int3
test
push
sub
mov
or
dec
loopne
popf
fs
push
stos
dec
cmp
lods
shlb
pusha
nop
sub
lret
loopne
sub
test
fsubrl
or
fisubrs
leave
pop
or
std
imul
ds
loopne
sbb
add
int3
jl
adc
in
ficomps
mov
mov
cmp
inc
add
adc
sti
adc
mov
adc
testl
add
mov
dec
add
xchg
into
pusha
dec
lret
jl
lock
add
scas
push
mov
adc
rcrl
inc
rolb
rclb
mov
jae
add
repz
add
inc
xor
inc
getsec
inc
pop
test
xorb
loope
add
pop
cmp
and
adc
ret
sbbb
pusha
mov
rcr
mov
xchg
int3
adc
xorl
es
jns
scas
and
clc
leave
and
rclb
fsubl
pop
or
in
adc
sbbl
daa
cmp
sbb
lea
mov
repnz
push
js
add
xlat
adc
inc
inc
int
jg
out
jl
push
movsl
fadd
mov
jns
pop
jns
sub
adcb
sub
and
in
push
cmp
mov
adc
xchg
and
add
dec
pop
popa
add
mov
sub
add
xor
movsb
mov
jnp
sub
aam
inc
lahf
sub
mov
in
xchg
gs
ret
jbe
scas
adc
rcll
repnz
fs
jo
jae
test
xor
nop
fs
pop
cli
add
mov
jo
divb
sub
xor
jns
inc
rolb
pop
out
mov
or
nop
pop
scas
enter
int3
cltd
sbb
ss
pushf
xor
mov
cld
xchg
pushf
stos
hlt
add
sahf
test
popf
mov
mov
mov
ljmp
add
xchg
or
out
push
into
cld
inc
imul
sbb
arpl
jo
sahf
add
mov
pushf
fs
add
scas
push
add
add
ja
sahf
ds
mov
loop
dec
pop
int
mov
scas
sub
xchg
hlt
nop
and
fstps
rorb
jg
pop
inc
sub
adc
pop
add
lret
lods
adc
mov
jecxz
jle
add
mov
mov
negb
lds
pop
out
push
jl
xchg
bound
add
or
adc
clc
orb
repnz
mov
fnstenv
adc
cmpsb
rolb
ds
lcall
add
dec
rolb
sbb
fmuls
stos
imul
leave
lret
sub
je
jge
aad
jo
daa
icebp
mov
sbb
cmp
mov
sbb
out
rcrl
inc
sub
and
add
cs
sbb
and
arpl
lea
enter
adc
cmc
mov
leave
fsubrl
pop
sub
cli
stos
and
into
pop
jp
cltd
fcmovbe
inc
push
push
sub
sti
and
add
add
mov
mov
cmp
lea
mov
add
pop
and
popl
dec
mov
cld
xor
add
loopne
sub
inc
add
adc
sub
mov
sbb
xchg
mov
pusha
and
loopne,pn
or
test
push
xchg
cmp
dec
jno
bswap
cmp
jp
pop
xor
xchg
or
icebp
loopne
test
mov
aaa
rcrb
xor
xchg
push
push
cmc
push
push
sub
fwait
mov
dec
add
sbb
push
repnz
lods
inc
out
xor
imulb
ljmp
lods
std
enter
fistpl
mov
ret
insl
fnstcw
imul
or
mov
jge
fcomps
data16
ljmp
cs
incb
push
stos
ret
or
les
add
push
cli
fsubrl
adc
mov
mov
insl
add
out
ds
cmovo
lret
xchg
push
mov
adc
icebp
and
aam
lock
daa
rcrl
adc
pop
sub
orb
and
clc
mov
inc
adc
fisubs
mov
into
lea
xchg
pusha
add
mov
dec
pop
or
pop
add
mov
adc
hlt
and
push
loope
add
add
mov
mov
dec
xchg
js
add
loop
add
inc
loop
je
xchg
jo
and
cwtl
fs
and
lods
add
mov
add
test
mov
pop
daa
inc
clc
clc
push
loopne
lock
push
lods
loope
jb
inc
rdtsc
scas
test
add
call
arpl
rolb
sbb
push
and
dec
std
mov
add
xor
fiadds
cs
jns
stc
push
dec
adc
cmp
insl
ljmp
test
iret
pushf
sbbb
mov
les
fsts
adc
sub
lldt
xchg
fisttps
push
fmull
adcb
and
out
pushf
sbbb
and
push
jp
and
or
push
or
inc
mov
mov
inc
or
xor
push
dec
mov
push
ja
lods
adc
xor
adc
inc
add
sahf
mov
sysexit
inc
adc
lock
add
sub
int3
xchg
ret
in
jo
das
add
or
add
jge
mov
pop
fdivl
lahf
test
add
mov
cmp
shll
xchg
test
call
bswap
cmp
push
lea
or
add
mov
jo
sbb
addb
call
push
cld
lea
inc
add
lds
fcoml
pop
sub
and
and
cmp
sub
or
mov
ja
sbb
push
xchg
or
push
sub
test
and
out
pop
add
sub
push
aam
adc
movsb
mov
clc
mov
mov
or
push
and
adc
or
notl
enter
data16
test
movsb
sbb
mov
clc
in
mov
pushf
ud0
pop
or
push
and
inc
addr16
jns
xlat
ja
jl
es
mov
add
aam
xlat
nop
loopne
pop
daa
dec
and
mov
or
xor
rolb
push
mov
adc
shl
test
lods
pop
add
push
push
lret
dec
jbe
or
mov
aas
add
dec
or
or
sub
nop
add
adc
pusha
andb
pop
mov
in
or
aaa
in
adcl
xor
jp
sub
xchg
shll
xchg
inc
std
sbb
fisttps
lods
add
movsb
stos
push
loopne
arpl
sbb
push
iret
jbe
mov
js
mov
and
andw
lea
dec
pop
lds
xor
adc
mov
xchg
add
push
mov
pop
pop
adcb
test
popl
mov
inc
sbb
pop
filds
das
clc
xorb
adc
mov
dec
mov
jo
cmp
mov
call
shl
or
or
loop
fldenv
xlat
loop
add
sub
push
push
loop
je
add
inc
fadds
aaa
and
push
bound
mov
xchg
rclb
repz
cld
and
adcb
jo
jg
pop
xor
stos
loopne
add
xchg
sub
xchg
ljmp
and
add
mov
rcll
push
orb
sub
subb
std
pop
xchg
mov
mov
jle
int
sar
arpl
xchg
mov
lods
repnz
adc
add
add
lds
jl
cmc
add
nop
nop
pop
pop
pop
jl
xlat
xchg
push
outsb
pop
cwtl
bound
add
lods
testl
sbb
sti
jno
jl
inc
jns
mov
lea
add
lret
sbb
cmp
mov
fsubs
call
sbb
dec
add
fdivrs
ret
adc
or
adc
jl
arpl
out
xor
inc
jo
jno
or
sub
xchg
jbe
or
cmpsb
js
add
in
nop
pop
repz
orb
cmp
dec
xor
fcoms
inc
incb
lret
std
cld
inc
mov
mov
mov
test
jb
jle
pop
sti
scas
rcll
cmpsl
jo
and
pop
loope
cmp
and
mov
dec
inc
push
cmp
pop
jo
jmp
in
jle
add
adc
repnz
inc
dec
flds
or
imul
popa
inc
mov
cmp
adcb
and
std
xlat
add
xchg
add
enter
movb
push
sbb
sbb
sarb
pop
mov
mov
jl
or
cmc
jp
add
out
pop
and
jb
jge
scas
test
sbb
ljmp
in
ret
rdpmc
push
dec
or
out
mov
and
push
sub
xor
add
or
movsl
in
mov
aaa
flds
push
fcmovb
or
xchg
shl
sbb
fs
and
in
add
cmp
cmpsb
pusha
ret
add
or
fs
add
mov
or
mov
scas
repnz
mov
xor
cltd
outsl
jge
add
xchg
in
imul
clc
scas
jo
pop
pop
iret
pusha
repnz
push
testb
jbe
add
in
mov
lods
add
popa
test
cmp
cmp
into
push
cmp
inc
xchg
mov
test
aas
jns
push
cld
in
fs
add
mov
or
into
cmpsl
mov
js
ret
add
sub
mov
push
jb
xchg
mov
jbe
add
lret
gs
adc
enter
dec
and
decb
cmp
insl
hlt
push
cli
push
adc
sbb
xor
sahf
rcll
inc
fwait
jae
add
xchg
daa
xchg
cmp
mov
add
mov
in
or
dec
fs
adc
adc
mov
mov
mov
insl
adc
repz
add
ds
xchg
jge
movsl
add
lods
and
ret
add
mov
mov
clc
fidivrs
jge
mov
addr16
inc
xor
add
cli
ds
leave
sub
pop
xchg
dec
int
mov
in
xor
int3
xchg
dec
cmp
stos
movd
and
dec
cmp
and
movl
popa
push
pop
cld
jo
add
jmp
cmp
push
fldl
hlt
lahf
fs
sbb
ljmp
stos
imul
outsb
out
pusha
xor
or
pop
in
adc
cltd
pop
addb
fists
je
sahf
gs
mov
pop
mov
pop
sub
nop
add
or
dec
push
adcb
mov
add
popa
outsb
mov
lock
lods
pop
add
mov
fcompl
out
gs
into
cld
lret
add
cmp
lock
scas
ljmp
std
push
mov
add
mov
push
adc
cmp
add
scas
dec
and
in
add
clc
sub
ljmp
add
popa
movsl
add
mov
sbb
xor
push
outsb
adc
lods
pop
fs
fwait
adcl
mov
add
and
cmpsb
dec
std
lock
jno
ret
push
scas
lret
shr
insl
dec
add
in
jp
rcrb
sub
sbb
scas
andl
insl
addb
jae
push
inc
imul
xor
sbb
cld
add
in
sub
fbstp
xchg
sbbb
movsb
in
rorl
add
fs
cwtl
loope
nop
push
and
sbb
dec
jno
aad
pop
xor
stc
out
pop
out
mov
adc
mov
push
rorb
xchg
cmpsb
cwtl
add
repnz
mov
mov
aaa
add
lcall
clc
pop
popl
test
rcl
jmp
xchg
jle
movsb
ffree
pusha
aad
xor
jg
add
cmpsl
fisubrl
jmp
aad
lods
sbbb
rorb
jne
stos
pop
mov
idivl
add
add
add
jo
or
fidivrs
out
hlt
lds
pop
mov
orb
and
repz
ljmp
rcl
mov
lcall
add
test
sbb
and
js
dec
cmp
fiaddl
cs
jmp
mov
sub
or
add
xchg
jl
fwait
pop
fdivr
pop
add
and
cmpsl
dec
cld
sub
stos
daa
roll
add
adc
and
xchg
add
cmpsl
loopne
jge
clc
dec
push
imul
and
mov
test
jbe
add
mov
insb
pop
notl
adc
and
add
xor
movb
cmp
repnz
pop
fldenv
aas
leave
cmpsb
push
out
jp
add
ret
jmp
xchg
cmp
adcb
add
jb,pt
add
add
sbb
inc
pop
add
popf
adc
push
mov
add
std
mov
hlt
divl
and
sbb
scas
inc
ror
std
cmp
sti
pop
movsb
jge
fwait
cwtl
rcrl
jne
sahf
or
ficoms
mov
inc
push
or
sub
bound
xor
js
or
pop
sub
jne
sbb
push
adcb
pop
shlb
sub
lds
mov
sub
ja
cmp
sub
inc
cmp
or
stc
add
lods
test
cmp
mov
mov
inc
xor
add
jnp
sub
cmp
mov
add
mov
dec
push
cmc
push
and
nop
add
lret
mov
icebp
xchg
test
mov
add
fwait
mov
or
xchg
xchg
dec
and
ljmp
mov
mov
lea
add
inc
adc
int3
push
cmpsl
add
xchg
mov
sahf
mov
or
pop
pop
into
push
or
push
lea
inc
notl
cli
sbb
add
repnz
insb
mov
inc
in
cmp
cmp
std
sub
xchg
push
outsb
pop
incb
sbb
jg
jo
lods
xorb
inc
popa
arpl
add
mov
inc
sarl
cld
pop
add
mov
add
nop
int3
rolb
mov
mov
ss
add
add
jle
pop
add
int
in
xchg
aam
mov
mov
shrl
add
jno
and
xchg
push
loopne
xchg
jbe
push
pushl
addl
push
enter
mov
jmp
sbb
add
es
imul
cmp
scas
push
add
inc
mov
aaa
sub
cmp
data16
packuswb
sub
mov
gs
add
in
lret
dec
stos
pop
mov
cmc
rclb
mov
in
jmp
icebp
add
push
push
dec
ja
add
loop
xchg
xor
add
cld
out
pop
cli
shl
add
ljmp
and
jae
orb
pop
jmp
add
and
mov
ret
aam
inc
add
push
add
dec
jb
sti
jae
jno
rcrl
dec
aaa
push
leave
mov
jns
inc
and
fstps
mov
xchg
je
je
or
in
adc
xchg
cmp
add
into
ss
in
cwtl
aaa
adcb
sbb
add
aad
add
pop
insb
lret
fisttps
and
in
subl
dec
in
or
int
inc
out
push
push
and
push
cwtl
addb
sbbb
inc
pop
mov
faddl
sbb
leave
lock
sub
push
dec
add
jl
adc
lcall
in
addr16
int
mov
add
rep
sub
cmp
push
cmp
pop
cld
and
sarb
scas
push
pop
popf
loopne
test
adc
outsl
xchg
mov
dec
add
loopne
and
add
out
mov
xor
cmp
cmp
lea
ret
shlb
repz
loope
add
and
push
pop
xor
or
jle
adc
pop
loopne
push
cmpb
sbb
push
xor
scas
cmp
adc
mov
adc
inc
mov
aam
pop
mov
dec
mov
pop
subl
pusha
push
mov
adc
andl
dec
sbb
xor
mov
dec
push
arpl
pop
add
inc
in
push
aaa
pushf
in
ss
loopne
and
jle
adcb
jns
dec
mov
sub
mov
add
movsb
mul
std
xorl
iret
mov
in
sub
jne
fwait
je
pop
cmp
les
scas
mov
cmp
add
jmp
xor
test
add
loopne
sbb
lea
add
push
xchg
and
inc
mov
sti
aam
dec
sbbb
notb
cmp
rcll
add
in
cld
add
mov
or
fdivr
leave
daa
movsb
fildl
add
orl
cmp
add
mov
out
jge
mov
jne
inc
cmp
inc
push
icebp
inc
into
sub
push
inc
add
and
and
push
fmull
mov
or
and
and
test
test
jo
and
cli
out
add
push
into
imul
adc
sub
icebp
shl
popf
add
das
ja
push
in
add
xchg
inc
in
aas
fstps
push
add
lret
jnp
mov
add
sub
adc
add
test
lock
shlb
sti
dec
xchg
rcrl
adc
mov
fwait
add
mov
stos
int3
add
push
cmpsl
jbe
mov
aaa
xchg
or
jl
insb
add
pop
lcall
mov
and
cmp
rolb
aaa
push
jns
adc
cld
repz
add
jp
or
dec
add
inc
stc
mov
cwtl
jb
lds
sub
mov
hlt
inc
add
gs
call
xchg
aad
add
xor
and
cmp
add
aaa
sub
fscale
add
in
fstpl
cmp
sbb
mov
add
and
push
or
add
movsb
cmp
pop
add
inc
sbb
mov
int
mov
lret
ret
sbb
imulb
dec
pop
push
add
jbe
sbb
add
lcall
bound
cli
adc
pop
ljmp
lea
leave
aaa
rcrl
pop
mov
lcall
and
cmp
mov
cmp
addr16
add
xchg
adc
xchg
add
clc
cmc
push
icebp
out
test
push
andb
fistl
mov
push
int3
pop
pop
clc
insb
add
int
ss
add
add
mov
push
addr16
or
fsubr
aad
add
lds
enter
jp
lret
fadds
mov
in
cmp
or
inc
cmp
push
test
pop
orl
inc
lods
push
aad
cmp
dec
mov
punpcklbw
loop
clc
xchg
jns
push
push
cmpsb
xor
jl
dec
mov
adcb
pop
clc
and
fistpll
xor
nop
add
shlb
notl
push
nop
loopne
mov
add
lret
outsb
pop
sbbb
pusha
push
adc
fisubs
mov
xor
fsubr
push
sbb
push
jle
lahf
std
addl
jp
aad
mov
jmp
clc
enter
in
dec
mov
shlb
int3
adc
jmp
jg
push
call
mov
outsl
adc
xor
or
sbb
arpl
testb
dec
xor
xor
cmpl
lock
icebp
loopne
dec
mov
add
xor
sti
sbb
lods
jg
mov
add
cmp
roll
add
xor
mov
sbb
add
and
movl
inc
add
aad
or
pop
add
add
in
mov
mov
ljmp
add
cmp
push
stos
jb
add
push
mov
int
stc
cmp
inc
adc
sub
dec
mov
lock
nop
jl
pusha
add
mov
and
pop
pop
add
adc
xor
add
inc
mulb
xlat
fildll
int3
sbb
cmp
xchg
xchg
add
mov
jl
out
pop
add
xor
inc
add
jno
out
ljmp
sarl
ds
xchg
push
je
sub
lahf
push
stos
sar
mov
lock
inc
mov
add
cmp
push
cmp
mov
insl
or
push
push
sub
sbb
hlt
adc
outsl
pusha
repz
push
or
inc
mov
jl
and
pop
push
or
in
lods
scas
int3
rclb
or
popf
sbb
ret
cmp
pop
and
insl
add
call
adc
jmp
xchg
test
xchg
adc
mov
pop
push
lea
loopne
iret
clc
pusha
xchg
add
inc
hlt
int
jecxz
mov
jns
push
sbb
mov
jo
pop
mov
xchg
cltd
icebp
inc
jge
add
pop
out
xor
arpl
lock
sbb
rorl
push
insb
pop
add
loope
dec
aad
or
sahf
sar
add
jns
push
add
xor
add
jne
mov
push
add
mov
add
ja
ret
scas
cmc
add
pop
test
pop
ds
fcmovnb
hlt
push
cmc
add
insl
push
aaa
push
sarb
push
xor
sbb
js
fwait
add
sub
pop
shll
rcrb
xlat
pop
iret
negb
and
dec
fcoml
jl
sbb
inc
adc
sbb
js
aad
scas
inc
mov
push
lock
cmp
mov
xor
fwait
sub
pushf
mov
inc
mov
push
push
aaa
in
xor
cmp
mov
add
mov
xor
or
add
jns
push
dec
cld
insb
sbb
inc
xchg
popf
adc
adc
sub
clc
aas
sbb
insl
sub
jl
pop
lret
dec
lret
and
shll
push
dec
adc
add
sub
lret
leave
fldz
pop
xor
mov
sti
push
movsb
pop
sbb
cmpsl
pop
out
adc
add
and
adc
fwait
add
in
mov
sti
pop
fiadds
lea
jmp
jp
sbb
add
or
jmp
rolb
loope
mov
pop
loop
flds
or
jo
pop
decb
int3
or
cmp
testb
rorb
mov
sub
lahf
adcl
insl
add
fidivl
and
dec
xorb
xchg
mov
jecxz
ret
sub
frstor
call
dec
add
xchg
rcll
fistl
stos
lock
mov
jne
imul
xchg
ss
fadd
sbb
add
popf
js
lods
pop
stos
add
jnp
push
mov
dec
dec
adc
sahf
inc
and
cltd
sub
add
jbe
mov
cmp
jmp
adc
cmc
lock
jb
ljmp
call
clc
pop
jp
ljmp
in
ret
sarb
in
push
mov
pop
das
pusha
sub
lds
xchg
add
cwtl
mov
adcl
push
pusha
in
pop
push
lahf
jo
and
stos
adc
ret
leave
sbb
and
sub
pop
pusha
popa
nop
pop
add
xor
ret
and
clc
subb
lds
xchg
add
ja
xchg
jae
cmp
pop
sub
es
nop
xchg
shrl
xlat
and
jl
cmp
cmpsl
cs
jns
jg
sbb
jp
fwait
outsb
add
xchg
fsub
cli
gs
pop
mov
and
and
add
xchg
inc
jl
sbb
add
fidivrl
in
xor
clc
jb
add
lods
push
xchg
add
aad
scas
pop
pop
pusha
verw
cmpsb
dec
test
nop
cltd
jno
fwait
mov
cmpsl
jb
or
push
cmpsb
cmp
sub
movsl
add
shll
shlb
dec
iret
addb
add
clc
cli
lcall
mov
nop
pop
dec
pop
mov
mov
rcl
inc
adc
shlb
adc
jg
add
insl
pop
in
xor
inc
cmp
enter
stos
cld
add
hlt
xor
adc
cmc
cmp
fisubrl
neg
mov
add
mov
xor
pusha
cmp
jl
or
pop
pop
add
test
iret
aas
add
dec
repnz
add
decb
es
push
inc
or
inc
mov
cmp
xchg
cmp
mov
arpl
sbb
pop
xchg
inc
add
fbstp
add
loopne
or
jne
push
repnz
inc
cs
movsb
jmp
inc
add
in
les
mov
add
pop
arpl
push
add
add
xchg
or
pop
mov
sub
dec
add
aam
add
lods
pop
sbb
in
add
inc
add
mov
cmp
lret
loopne
iret
mov
mov
pop
sahf
cmpsb
add
sub
jle
add
test
mov
add
or
and
in
and
divb
xchg
mov
cmp
dec
popf
xor
fiadds
addl
sbb
ds
fdivrl
out
add
lret
cld
mov
rolb
cmc
adc
test
insb
sbb
bound
add
jno
mov
pop
outsl
add
cwtl
scas
cmp
out
out
pusha
call
adc
sbb
cmpsl
dec
sahf
dec
in
in
push
nop
push
les
loopne
add
pusha
or
insb
je
pmulhuw
push
and
cld
cmp
push
mov
jg
sbb
add
orb
jo
mov
add
das
fistps
clc
xor
add
dec
ret
mov
scas
mov
jmp
mov
lds
jg
cmp
jp
sub
and
ds
cmp
dec
xchg
mov
push
mov
cmp
jl
cmc
push
es
mov
xchg
inc
ficoml
test
ret
dec
ret
xchg
fiadds
div
xbegin
mov
and
js
mov
push
add
push
xor
push
add
sti
shl
add
push
fsubs
xchg
je
repnz
inc
out
call
push
subb
jmp
ret
clc
mov
cs
push
adcb
out
add
and
push
push
xchg
pop
add
sbb
bound
repz
sbb
popf
xor
imul
jae
pop
push
add
ljmp
add
fstpt
add
popl
pop
addr16
mov
add
roll
mov
inc
inc
fsubl
mov
lods
add
fists
cs
dec
add
rcll
push
mov
add
xchg
jne
lret
add
mov
mov
enter
pop
popl
popf
mov
pop
sbb
inc
clc
sbb
xchg
cmpb
imulb
dec
int3
in
pop
mov
jl
sbb
rolb
xor
jecxz
pop
jbe
push
jmp
or
insb
mov
mov
adc
push
cwtl
or
test
aaa
fnstcw
pop
outsb
sub
cmpl
add
pushf
dec
int3
mov
sbb
ret
xor
and
add
push
mov
add
shll
pop
add
and
enter
adc
notl
xor
aam
aad
pop
jg
test
xor
flds
xor
clc
jmp
xor
xchg
jnp
fiadds
mov
subb
les
in
add
adc
mov
xchg
sbb
xlat
aaa
sbb
test
lahf
sbb
lods
lds
test
mov
cmp
aaa
jg
xor
push
add
call
xchg
mov
movsb
fsubs
fistpl
sbb
stc
push
adc
lods
jg
xlat
outsb
shlb
and
seto
pop
xorb
xchg
add
shlb
add
loop
test
loope
faddl
in
popw
jp
push
push
enter
pop
mov
loopne
inc
mov
insb
std
jnp
sbb
mov
mov
jo
and
and
sahf
adc
cmp
mov
push
sub
jns
and
add
add
sarl
add
jnp
ror
fldlg2
ss
push
test
lds
sub
push
add
cmp
mov
ret
stos
sub
pusha
push
fcoms
cmc
sbb
inc
add
jecxz
xchg
ljmp
cmp
or
jmp
fdivs
add
push
lret
out
xchg
mov
jno
aas
stos
fs
dec
shl
mov
adc
add
fcomps
add
mov
daa
lret
pop
or
loopne
pop
sbb
pop
add
mov
testb
dec
inc
mov
les
jns
repnz
add
fiadds
jmp
inc
clc
adc
ljmp
lcall
add
clc
mov
add
jp
dec
jmp
xor
jno
mov
mov
sbb
enter
pop
mov
sub
call
in
cwtl
lahf
mov
add
movsb
xor
mov
shll
js
addr16
jecxz
add
cmp
subb
xor
push
sub
jp
aas
jne
test
int3
add
adc
jecxz
hlt
add
lcall
test
outsb
add
xchg
mov
icebp
jle
add
push
sbb
jae
xor
jo
das
popf
adc
push
shl
daa
mov
add
repnz
push
lcall
out
aad
jae
pop
neg
mov
fwait
add
or
mov
shrb
push
out
inc
pop
add
or
add
inc
mov
push
call
push
rcr
or
clc
test
add
push
pusha
aas
dec
pop
pusha
sub
mov
je
out
cwtl
add
and
pop
cmp
aas
shrl
les
xor
mov
cltd
add
lahf
push
fdivr
pop
add
xchg
mov
pop
stos
cmp
add
mov
das
add
push
mov
jbe
pushf
jg
add
inc
xor
or
subl
push
enter
mov
pop
mov
add
loopne
jnp
cmp
enter
xorl
dec
outsl
mov
sbbl
jl
or
mov
adc
sbb
icebp
dec
cmp
jmp
lahf
mov
push
add
fisttpll
jp
sbb
add
xchg
mov
fnstenv
idiv
and
add
jns
rcll
add
dec
jne
fidivrl
pop
popf
mov
arpl
inc
lret
push
test
out
jne
add
das
out
push
sub
inc
les
add
mov
jno
shll
add
in
outsb
dec
inc
jecxz
fdiv
ret
lds
add
cmovs
cld
out
adc
cwtl
xchg
lods
fnstenv
jecxz
aas
ss
test
push
inc
adc
add
jl
jo
hlt
xchg
add
lret
fs
ret
and
aad
les
sub
insl
into
cmp
imul
sub
ds
loop
fisttpl
dec
add
push
push
fwait
bound
fiaddl
adc
jle
rolb
dec
add
lds
dec
aaa
shlb
mov
test
iret
sbb
inc
sahf
mov
dec
add
je
jp
daa
and
xchg
cmp
rolb
cld
mov
mov
test
test
in
mov
xchg
add
add
test
loopne
add
rcl
arpl
sub
add
pop
ja
jb
pop
mov
and
movsl
inc
in
add
insb
lea
xchg
xchg
ret
push
jbe
xchg
mov
fildl
mov
pusha
cs
nop
dec
add
popf
inc
jne
mov
repnz
lcall
in
mov
xor
int3
fsubr
jnp
add
aas
push
inc
pop
outsl
fcmovb
ret
mov
xor
arpl
sub
test
add
divb
push
mov
mov
push
push
jl
fisubl
add
in
test
jge
and
lahf
push
filds
push
xchg
lcall
inc
add
xor
test
mov
push
out
rorl
shlb
out
adc
pop
in
xlat
mov
roll
and
cmp
addl
dec
jbe
call
cs
mov
sbb
cmp
out
aam
add
clc
mov
insl
cli
dec
loope
xlat
sti
inc
lock
gs
mov
and
sarb
pop
stos
dec
add
je
repnz
enter
inc
fistpll
cmp
inc
mov
xor
repz
jmp
loope
sub
mov
pusha
add
sub
cmp
xchg
sti
adc
mov
pusha
jmp
fcomi
and
or
push
fdivr
and
cmp
and
sarl
jae
cmp
pop
lods
lea
movsb
add
lahf
sbb
mov
xor
test
xor
jmp
shlb
add
jmp
ja
rolb
inc
mov
ret
add
hlt
push
sahf
jge
mov
sarb
jp
sbb
or
add
push
add
icebp
rolb
xchg
mov
pop
iret
push
add
mov
sbb
ja
cmp
rcr
or
add
cltd
add
shr
add
aam
adc
push
pop
pop
gs
xchg
lock
in
mov
add
dec
sub
sub
cmp
xchg
xor
and
sbb
sub
and
push
xchg
sti
push
in
sub
inc
add
ja
add
jmp
mov
mov
push
std
ds
fdivr
add
pop
push
rolb
inc
popf
fst
dec
sub
call
mov
push
cmpl
xor
loopne
test
cwtl
mull
jo
adc
dec
sub
xchg
or
mov
jg
cmpsb
aas
ret
pop
mov
add
aam
lock
shr
xchg
add
ljmp
daa
jbe
enter
push
add
xor
lods
cmp
pop
ja
add
int3
xchg
fwait
test
out
fiaddl
sub
cltd
dec
pusha
mov
xor
xchg
pop
outsl
mov
add
sbb
scas
icebp
cmpsb
shll
sub
pushf
mov
subb
mov
xchg
call
mov
dec
push
jmp
sbb
clc
add
loopne
and
jo
jmp
addb
and
sbb
mov
jbe
sub
or
add
lods
shrb
xchg
mov
clc
loop
add
jp
insl
pop
mov
pop
cmp
shlb
dec
dec
add
pushf
cmp
or
jo
pop
sub
push
add
addr16
xchg
mov
cmp
and
adc
add
mov
pop
push
sti
add
sub
push
shll
and
idivl
dec
stc
mov
ret
out
cmp
sub
cld
test
and
mov
inc
sbb
add
mov
leave
cmpsb
pop
cmpb
cli
push
and
cmp
xchg
loopne
and
sbb
add
ds
add
lcall
lods
xor
mov
sar
xchg
push
in
dec
jne
out
cld
and
add
xchg
adc
add
add
mov
daa
inc
or
pop
nop
xchg
fwait
pop
in
jmp
movsl
mov
sub
sub
cmpsl
jnp
loope
sbbl
adc
hlt
stc
movsl
inc
fstpl
push
cmp
inc
mov
add
mov
rcrl
sub
sahf
dec
add
into
jno
push
or
cs
lahf
cmp
ret
jmp
scas
cld
xchg
add
gs
lcall
popf
aad
mov
push
push
clc
js
mov
push
xchg
and
clc
xchg
loopne
mov
lret
lea
inc
fnstsw
int3
out
cmp
mov
dec
insl
mov
push
adc
dec
shrb
into
ret
je
add
jge
fwait
add
pusha
sub
out
xchg
stos
in
nop
mov
xor
imul
addr16
xchg
mov
mov
sti
jo
and
fmull
add
movsb
xor
adc
or
jb
mov
adc
cmp
sub
mov
xchg
sahf
inc
fadd
in
or
popa
ret
mov
setae
xchg
addb
dec
mov
in
xor
subb
aad
sub
inc
out
sbb
loop
les
mov
jle
add
gs
lods
in
fsubs
inc
sbb
mov
sarb
sub
or
ret
add
add
push
jge
test
inc
or
jnp
inc
jg
stos
push
sbb
lcall
es
test
mov
sub
out
xchg
bnd
add
mov
sbb
adcb
or
into
dec
push
pop
mov
in
add
fisttpl
add
es
cltd
dec
and
jl
les
and
push
cld
push
add
clc
add
xor
fcompl
xor
popa
lods
add
mov
mov
mov
add
dec
fsubr
jbe
sbb
in
js
enter
add
jmp
add
xor
cmp
jo
sbb
jle
inc
sbb
inc
sti
stos
daa
hlt
inc
jb
add
pop
fisubrl
cmp
sub
pop
clc
fnstenv
jge
add
mov
push
fildll
loopne
jmp
inc
lret
add
add
xor
push
cmp
addl
in
mov
xor
or
incl
jge
sbb
jmp
push
js
add
cmpsl
xchg
lods
xchg
mov
add
sbb
and
dec
in
call
sbb
cs
inc
orl
pushf
ds
addr16
jmp
xor
cmp
or
add
outsb
scas
test
add
add
leave
inc
add
pushf
lds
and
or
mov
dec
out
ret
add
lods
push
aam
sub
or
sbb
rolb
cwtl
sub
inc
sar
cmp
dec
xor
add
dec
lret
outsl
adc
mov
push
addb
dec
jb
mov
sarl
pop
cltd
pop
mov
add
mov
push
or
out
sub
movsb
push
sub
pop
lock
pop
or
mov
and
add
xor
pop
add
dec
or
orl
xor
loop
flds
inc
jb
add
or
popf
dec
fs
jns
ds
sbb
cli
lods
add
mov
sub
repnz
cmp
dec
or
aas
cmp
adc
shlb
add
sbb
pop
add
scas
mov
pop
xchg
push
fidivrs
outsb
push
xor
cmpsb
or
pushf
jle
shlb
sub
push
fsub
jg
mov
call
pop
idivb
add
jmp
insb
sbb
popa
mov
sbb
adc
ret
pop
xor
jne
or
mov
dec
or
mov
dec
lods
insb
jbe
jne
add
clc
hlt
and
fnstcw
mov
mov
arpl
pop
sbb
cmp
add
in
sub
xchg
je
fwait
ret
sahf
pop
dec
jp
sbb
lahf
scas
cmpb
mov
andb
orl
mov
xchg
lock
mov
pop
add
inc
xchg
add
pop
jecxz
test
movsl
ja
leave
fmuls
cmp
jg
mov
test
jne
jns
dec
ljmp
addr16
xchg
mov
fs
mov
data16
js
xor
push
insb
dec
loope
sar
in
add
cld
incb
jle
adcb
or
adc
fimuls
add
outsl
lds
fistl
pushf
jnp
add
bound
xchg
mov
push
pusha
clc
arpl
pushl
lret
inc
scas
lods
pop
cmpsb
sbb
cmp
fstpl
jbe
dec
mov
inc
mov
in
ljmp
jmp
ficoms
das
jecxz
xchg
cmc
lods
fadds
inc
psubsw
mov
lcall
mov
mov
or
add
jmp
cmp
add
fisttps
addl
fabs
add
mov
stos
es
fs
add
sub
cmpsb
add
sub
add
sub
inc
mov
out
dec
sbb
test
shll
add
sub
imul
aaa
add
dec
and
mov
pop
mov
insl
lods
xchg
loop
sbb
cmpsb
add
pmaxsw
xchg
cld
dec
add
pusha
xor
dec
fmul
sbb
add
loope
roll
std
push
sub
mov
fidivrl
lock
and
mov
mov
scas
repnz
adcl
cmpb
add
or
lods
dec
jecxz
jle
sbb
gs
mov
xor
mov
outsb
fcomps
fimuls
aad
repnz
ds
inc
js
std
xchg
insl
mov
or
enter
sbb
sbb
aas
lahf
fildll
sub
mov
and
xchg
add
xchg
jbe
push
mov
and
in
add
test
in
add
sbb
int
inc
loope,pn
or
lcall
jp
loopne
arpl
imull
mov
push
movsl
in
push
or
cs
inc
xlat
pop
xor
fbld
and
in
out
sbb
inc
and
fadds
xchg
dec
loop
sahf
cmpb
fdivs
ds
ret
xor
hlt
jne
test
popa
cli
mov
std
add
aas
pop
ret
test
add
jle
push
gs
mov
addb
mov
xchg
fisttpll
pop
mov
leave
mov
dec
push
mov
popf
repnz
or
cmpb
pop
mov
movsb
pop
negb
rdtsc
iret
add
xchg
push
and
scas
pusha
dec
subb
xchg
jb
push
in
clc
cmp
inc
mov
or
cmp
fs
mov
arpl
daa
loop
add
insb
jecxz
mov
popa
addl
or
fwait
mov
and
add
cmp
xchg
addl
in
adc
int3
jge
mov
mov
clc
cwtl
movsl
or
imul
cmpb
cmpb
cmp
sub
lods
loopne
add
insl
mov
jmp
pusha
push
pop
and
test
int3
push
push
pop
aam
aam
add
stos
loop
movsb
pop
push
sbb
sbb
mov
out
int
add
popf
xchg
pop
mov
jae
popa
and
mov
nop
clc
pop
loop
cld
mov
cli
dec
mov
daa
jl
cmp
push
jbe
or
test
jmp
push
inc
addl
mov
gs
or
cmp
pop
loopne
data16
add
in
insb
mov
es
jge
mov
add
dec
mov
cmp
movsb
je
lds
in
fisttpll
lock
stc
pop
adc
notl
sbb
sbb
jae
fs
and
out
cmp
or
mov
jns
add
cmp
xchg
repz
dec
aad
inc
push
loopne
repnz
inc
in
cmp
inc
add
sub
inc
inc
pop
mov
dec
and
out
xchg
and
sub
push
adcb
jae
test
data16
lahf
sub
nop
and
ss
and
jbe
aaa
out
add
mov
pop
push
sub
lock
add
cmc
outsb
int3
pop
add
pop
dec
dec
mov
shl
or
add
cwtl
jae
loop
mov
es
or
push
iret
add
in
call
or
add
cwtl
dec
movsl
data16
insb
nop
sub
fwait
xor
movsb
and
and
sbb
cmpsl
inc
fcompl
jae
push
xor
loop
hlt
or
in
sub
in
jae
or
loop
roll
xor
rorb
lock
dec
inc
push
cld
cwtl
lret
jnp
add
pop
es
add
movsl
lds
ss
xchg
repnz
xor
pop
in
add
add
pop
lret
pop
or
xor
insb
aam
add
pop
mov
mov
cmp
adc
into
push
and
sti
adc
std
push
push
add
jb
enter
fincstp
mov
dec
xchg
out
add
pop
mov
fcmovbe
lds
inc
pusha
add
jecxz
fisttpl
mov
sub
or
inc
lds
jbe
add
fidivl
bound
add
jmp
push
movsb
nop
lret
xchg
add
and
ror
xchg
sub
jg
xor
sbb
or
mov
add
sbb
push
into
sahf
xchg
shrb
in
dec
adc
adc
cli
or
icebp
sbbb
add
ja
scas
ds
mov
adc
add
push
lcall
lods
mov
int3
jge
mov
xor
add
js
xor
in
sub
loope
loopne
cmpsl
loopne
daa
sub
cltd
jo
jae
insb
ds
and
add
adc
dec
sub
or
mov
sarb
ds
mov
xor
nop
sahf
dec
add
and
add
push
xchg
pop
sbb
ret
add
pop
cltd
or
inc
ja
popa
pushf
pop
add
sbb
dec
add
pushf
xor
inc
aam
cmp
jl
mov
add
xchg
fdivs
in
test
jbe
xor
sbbb
ret
lods
inc
add
cmpsb
dec
mov
pop
loopne
mov
rolb
sub
ljmp
xor
sbb
add
xor
pusha
adc
gs
pop
add
mov
ds
sbb
pop
js
add
push
sbb
add
lods
push
sarb
test
rolb
addr16
pop
inc
mov
stos
jl
sub
cld
int3
add
add
cmp
cmpb
call
sbb
testl
popa
repnz
and
in
clc
leave
pop
into
add
xchg
scas
push
fwait
sub
shlb
push
pop
subb
and
test
cld
test
enter
clc
add
or
pop
stos
fmull
add
mov
xchg
xor
add
mov
and
add
notb
xchg
imul
inc
cmp
adc
les
add
test
push
jnp
mov
daa
dec
pop
sbb
repz
in
enter
jg
cli
mov
add
jae
out
pop
adc
cmp
push
sti
mov
mov
in
mov
loope
stos
lea
mov
or
push
mov
pop
and
inc
add
push
sbb
mov
add
mov
mov
rcll
leave
loop
add
in
sbb
add
scas
inc
out
mov
pop
add
add
call
and
sti
xorb
adc
in
sar
xlat
and
outsl
mov
cwtl
sbb
lahf
lcall
out
cmp
test
adc
or
jecxz
sub
loope
mov
mov
ljmp
or
sbb
push
sbb
lahf
lds
and
testl
cmp
fsubrl
aaa
es
push
push
add
loop
mov
hlt
mov
dec
out
loope
mov
incb
shrb
add
leave
mov
scas
ljmp
inc
xchg
add
add
enter
out
stos
lret
test
aad
imull
jg
mov
cmpsl
fstpl
push
jmp
loopne
inc
inc
je
add
fdiv
out
mov
lahf
jge
adc
roll
fnstenv
nop
add
add
lahf
jmp
and
sbb
or
testb
icebp
bound
cmp
in
sbb
jp
pop
pop
jl
lcall
add
stc
pop
xlat
mov
rcll
scas
jecxz
and
shrb
sub
in
out
movsl
bound
mov
incb
fisubrl
or
push
stos
add
xlat
fdivrl
out
pop
das
cmp
nop
js
clc
sbb
faddp
adc
push
and
mov
mov
sbb
call
lds
and
inc
add
scas
in
jnp
ja,pt
xor
dec
dec
addb
leave
or
and
or
out
stos
cmp
pop
xchg
ja
lcall
scas
adc
add
and
loop
xlat
adc
add
pop
popa
cmc
loope
jg
stc
leave
or
pop
popa
orb
mov
mov
mov
inc
mov
call
rclb
jle
or
mov
clc
addb
inc
xor
mov
es
sub
push
sub
test
jns
and
xor
mov
mov
aas
jnp
mov
or
ja
sbb
add
mov
mov
sbb
xor
addb
inc
xchg
inc
mov
and
mov
gs
inc
stos
xorl
addb
in
test
nopl
in
in
test
test
mov
add
in
ljmp
sbb
leave
adc
mov
sub
dec
das
stc
or
cmpsl
mov
mov
daa
push
out
xor
jo
add
cmpsb
and
xchg
int
add
adc
in
in
stos
cmc
add
mov
add
dec
lea
ja
dec
add
lods
test
in
jmp
jno
sub
cmp
lock
andb
int
cmp
ja
add
mov
mov
loopne
push
push
and
xor
inc
add
ror
and
repz
mov
push
cwtl
push
das
add
dec
adcb
sti
xor
push
nop
xor
popf
andb
aaa
andb
ss
mov
and
sbb
lock
jo
sbb
add
cmp
push
inc
fdivrs
lret
cltd
inc
mov
jge
xchg
pop
lcall
inc
push
jp
pop
or
outsb
decb
or
pop
add
pop
mov
sbb
mov
iret
repnz
push
js
cmc
sbb
adc
push
push
sbb
adc
and
psubusw
into
es
push
add
jp
loop
call
add
mov
loopne
inc
xor
fidivs
cmp
or
mov
clc
pop
outsb
shlb
sbb
ret
adc
adc
ds
cwtl
fwait
jns
add
mov
negb
js
fldcw
cmp
jb
xor
cli
sbb
cltd
push
insl
or
sbb
cld
jge
add
mov
or
repz
fwait
or
and
cmpsb
push
jle
out
push
add
jp
push
or
lcall
ljmp
jp
loopne
aas
xchg
jns
ja
or
and
add
sbb
cmpsb
jl
adc
add
mov
daa
cwtl
sti
imul
in
arpl
out
add
jmp
push
add
or
jb
dec
xor
pop
stos
dec
sub
xor
mov
es
pop
movsb
stc
fwait
int3
add
mov
daa
xchg
xor
popa
lcall
push
xor
push
aaa
jmp
shr
inc
nop
add
jbe
je
push
add
push
clc
and
int3
mov
jg
mov
std
push
test
jl
add
je
adc
jecxz
out
hlt
dec
inc
and
jp
dec
jnp
push
cmp
adc
xorb
push
adc
sub
mov
jmp
addr16
or
ret
or
mov
aas
mov
add
cwtl
scas
mov
sub
nop
and
add
shrb
enter
add
outsl
and
fsubp
fdivrl
push
add
stos
adc
roll
inc
add
push
mov
xchg
add
andl
add
xor
sti
adc
pushf
test
sub
mov
add
scas
add
pushf
add
dec
push
out
ret
inc
cmp
jne
adc
rcrl
test
xchg
out
pop
out
xor
out
insb
lock
add
push
cmp
daa
inc
mov
test
int
inc
lahf
ja
fisttps
leave
and
sub
or
and
vphaddwd
lea
mov
test
pop
mov
call
cltd
outsb
jmp
or
add
xlat
dec
xchg
xchg
repz
sub
adc
fsubrs
aaa
adcb
jecxz
or
lea
and
inc
das
int3
cs
sbb
jnp
inc
mov
dec
and
jno
push
xor
clc
inc
pop
mov
pop
fs
rorb
cltd
push
test
jp
jle
movb
jecxz
mov
fldt
adc
cmpsb
dec
xor
and
sub
jne
jno
sbb
mov
leave
loopne
jmp
mov
adc
add
aas
pop
push
icebp
lock
sub
pop
mov
adc
in
jno
rcr
mov
push
sub
pusha
mov
lret
xchg
leave
in
jns
sgdtl
mull
icebp
lret
sbb
nop
dec
add
add
fisttpl
pop
outsl
sbb
bound
outsb
xor
cli
add
jl
clc
jge
xor
or
or
aas
das
mov
push
in
cmp
fs
ret
adc
cmp
aad
loopne
hlt
dec
cmpsl
jl
cmp
sbb
jecxz
dec
add
xlat
jle
xchg
add
sbb
mov
lds
das
add
sbb
adc
mov
hlt
xchg
scas
adc
or
sub
test
add
lret
test
inc
pusha
ror
mov
movsl
xor
fcom
fwait
scas
insb
leave
out
mov
xchg
push
loopne
xchg
or
movsl
xor
sub
add
xchg
pusha
push
cld
add
std
xor
xlat
mov
push
int3
cmp
inc
jmp
or
xor
sbbb
sub
dec
test
gs
xor
adc
and
loopne
push
mov
push
rolb
ljmp
das
xorl
push
push
xchg
in
sbbb
iret
add
aam
add
sub
cli
sbb
mov
add
xchg
out
insb
add
push
in
or
mov
add
test
xor
add
mov
inc
in
roll
call
add
imul
xor
cmp
pop
sub
dec
mov
add
mov
or
add
cmp
out
or
fdivrp
cmp
push
mov
mov
cld
loop
cwtl
andb
xor
xor
inc
adc
and
mov
outsl
xor
mov
mov
sub
cmpsb
mov
subb
adc
test
shrb
sar
pusha
mov
sbb
sbb
mov
pop
mov
leave
imul
jae
shlb
pop
rclb
clc
sbb
or
lock
adc
add
push
nop
inc
xchg
cltd
mov
add
cmp
dec
cmp
sub
cmp
sub
and
inc
add
idiv
repz
cmp
enter
push
fcmovu
ret
lock
and
push
loop
std
sbb
and
in
add
lods
mov
lock
or
pusha
cmc
push
test
sti
add
and
rorb
cmp
lahf
icebp
inc
movsb
mov
xchg
add
cmp
int
mov
push
jle
outsb
inc
mov
shlb
mov
andb
or
push
lahf
ret
addr16
mov
sbb
pop
notl
fnstsw
int
mov
rorb
sbb
sbb
inc
fnsave
xor
out
shll
push
loope
or
add
and
icebp
xchg
inc
and
ljmp
mov
push
insl
sahf
xor
push
add
or
cmpsb
fmuls
push
add
jmp
les
or
mov
cmpsb
test
cwtl
loopne
test
mov
js
rcrl
xor
cmp
pop
xlat
inc
xchg
add
inc
pop
mov
xor
adc
inc
pop
sub
fs
test
sub
in
or
lea
push
in
fadd
push
mov
iret
add
and
hlt
jnp
sbb
mov
std
inc
and
addb
or
xchg
pop
xchg
xor
jae
push
cld
lock
lods
shl
sbb
add
pop
add
out
cmpsl
in
and
mov
je
aam
push
add
cmpsl
add
push
xor
jbe
dec
rolb
push
or
mov
jl
cmp
out
loopne
xor
rorb
sbb
int
push
pushf
shrl
push
add
pop
cld
mov
jl
je
push
or
or
loope
and
cld
mov
adc
push
xor
cwtl
fs
sbb
pop
das
jp
gs
js
lock
inc
push
les
cs
mov
or
stc
push
jmp
sub
and
sbb
xchg
sbb
mov
sbb
fxch
or
scas
loope
enter
mov
inc
sub
stos
call
orb
out
loopne
dec
fs
push
mov
movsl
enter
xor
mov
sub
sub
lds
shlb
enter
je
cwtl
mov
xor
add
gs
test
cli
add
insl
and
add
cltd
addr16
test
inc
enter
jl
rcl
push
lock
sbb
in
data16
jo
leave
dec
mov
mov
fdivs
loopne
adc
pop
add
popa
jl
lea
or
ret
out
pop
jmp
xor
rclb
push
push
and
inc
sub
mov
xor
sbb
adc
xorl
fisubrs
xor
cmpl
dec
add
cltd
xadd
fwait
ret
out
aaa
xchg
int3
and
stc
inc
popa
mov
cmp
fdivs
imul
sbb
outsl
ret
or
enter
je
arpl
lds
inc
xor
ret
jno
and
pop
repz
ljmp
mov
inc
mov
and
add
arpl
push
dec
test
mov
xchg
mov
cwtl
je
inc
sub
jecxz
dec
push
stos
pop
xchg
test
add
inc
rolb
or
pop
stos
mov
lock
and
cmp
fwait
test
sbb
mov
clc
hlt
icebp
mov
or
sti
add
inc
cmp
mov
outsb
sbb
inc
xor
push
ret
cwtl
jno
popa
movsb
lock
icebp
inc
rolb
pusha
and
sti
jge
pop
push
outsb
cmpsb
pop
rcll
or
sub
aaa
pop
sub
cs
pop
add
mov
adc
and
rorb
pop
sar
popf
add
sub
mov
mov
xor
and
enter
add
rcll
cli
loop
cmp
mov
pusha
xchg
mov
add
test
cli
add
mov
cs
jmp
inc
lret
or
xor
test
pop
xorb
push
movsb
in
and
roll
popf
dec
lock
stos
or
xchg
xchg
add
aaa
rolb
and
and
gs
cmp
into
fildl
xor
add
sbb
or
pop
inc
mov
sbb
jo
jp
imul
jne
scas
jmp
mov
or
arpl
out
clc
or
dec
and
sub
cwtl
fsubr
shrb
xchg
xchg
dec
sbb
dec
push
ds
lcall
andb
lds
push
dec
shll
loopne
inc
add
call
shl
add
fdivs
add
cmp
mov
mov
pushf
out
mov
xorl
ret
add
adc
out
cltd
push
mov
in
divb
inc
mov
cmp
addr16
sub
cmp
jno
or
je
cmp
repnz
push
call
les
hlt
mov
jnp
push
push
add
pop
mov
neg
cmp
dec
dec
cld
add
xchg
dec
sub
push
sbb
jno
lret
test
imul
add
push
movsl
mov
rcrb
iret
in
push
or
mov
aad
and
ljmp
or
jns
adc
lahf
rcll
add
flds
cld
push
call
jecxz
add
cmpsl
data16
add
inc
mov
sahf
add
fiadds
int3
fucomi
add
push
ret
fisttps
dec
and
rolb
jns
dec
push
testl
mov
jne
add
test
out
add
push
out
test
pusha
dec
cwtl
pushf
xchg
ds
sahf
cld
adc
mov
xchg
add
push
pop
out
add
aad
mov
or
cs
lods
jl
mov
adcb
leave
and
add
pop
fstps
mov
enter
mov
sbb
jecxz
lahf
xor
add
push
adcb
in
adc
fbstp
or
movsl
inc
sar
sbb
mov
test
and
pushf
in
shrb
cmpsb
outsl
cmp
add
add
sub
popf
sub
fsubl
mov
sarb
jo,pt
add
add
mov
xor
push
xchg
push
sub
jo
and
es
pop
sub
dec
and
fsubl
cmp
sub
out
push
jbe
jne
inc
mov
mov
mov
add
add
xor
pop
adcb
adc
outsl
and
fcompl
dec
repnz
inc
loop
testb
popa
or
fmull
out
cmp
mov
jae
mov
or
ror
ja
add
pop
daa
arpl
stos
cmpsb
mov
add
mov
fildl
jo
jmp
xchg
mov
mov
push
mov
addl
or
fwait
jecxz
in
lcall
daa
mov
pop
gs
adc
into
fsubrl
add
xor
sub
cmpsb
pop
fsubl
add
imul
aas
incl
and
movsl
add
test
mov
jecxz
add
les
jb
xchg
test
mov
cmpsb
add
out
fsubrs
inc
sub
int
add
sbbb
stos
sbb
sub
stos
movsb
add
imul
in
push
pop
adc
pop
idivb
aas
push
cld
pushf
addb
shr
jns
push
std
inc
mov
xor
pop
pop
sbb
jp
sbbb
mov
jns
icebp
jle
jne
lods
xor
add
cmpb
lret
push
jecxz
inc
ret
add
popa
adc
sbb
lods
mov
inc
xchg
mov
in
xchg
shll
jmp
outsb
cld
add
insb
xor
push
mov
mov
pop
call
clc
outsw
add
mov
orl
test
or
clc
add
sarb
enter
push
pop
lret
add
dec
lahf
jns
loop
add
add
pop
loope
insl
jno
movl
mov
pusha
cmp
clc
adc
movsl
xor
ljmp
pop
out
loope
insl
les
inc
add
pusha
or
push
sub
pop
xor
sub
fld
daa
pushf
enter
jmp
rol
out
stc
sbb
cmc
cmp
add
mov
and
or
and
mov
sub
out
add
ja
xchg
add
loope
aam
adc
in
daa
jns
xor
aaa
sarl
into
hlt
add
sbb
sbbb
xor
in
jbe
out
mov
jno
add
fnstcw
jge
add
jge
cmp
stc
mov
scas
xor
xchg
add
inc
push
test
mov
xor
daa
and
loop
push
pop
lock
fiadds
sbb
fimull
xor
insb
push
mov
add
mov
sub
mov
or
push
jo
shl
add
mov
xor
lahf
sub
sbb
pop
int
mov
adc
mov
add
xchg
mov
mov
in
mov
je
jg
nop
add
shll
cmp
or
add
dec
mov
cmp
test
aaa
push
addb
inc
icebp
jae
cmp
clc
shrl
jecxz
xor
repnz
dec
mov
loopne
adc
and
cwtl
sub
or
popw
lldt
rcr
out
sub
pop
sub
xorb
daa
or
push
sub
cwtl
pusha
movsl
xlat
cmc
and
test
cli
out
mov
shrb
mov
in
cwtl
daa
es
inc
xchg
adc
repnz
add
mov
inc
xorb
rorl
lods
add
cmp
adc
add
adc
and
add
or
sahf
adc
xor
mov
and
orl
pusha
outsb
sbb
insb
mov
rol
stc
dec
addl
outsb
add
stos
fcmovnbe
fisttps
jne
and
les
js
xor
dec
test
mov
dec
aam
ds
and
xor
cmp
inc
cmc
cmp
test
adcb
jno
xor
sub
rolb
cli
or
fs
cld
add
dec
mov
and
leave
cmp
push
or
pop
out
aaa
push
push
insl
cmp
and
cltd
cmp
adc
add
out
sbb
sbb
pushf
xor
add
push
outsl
adc
xchg
cmp
jno
and
test
pop
enter
out
cmp
adc
imul
inc
in
xchg
add
pop
and
mov
stos
movaps
mov
out
pop
add
icebp
or
cmp
nop
dec
add
push
dec
bound
add
call
jg
add
cmp
add
pop
ret
mov
push
shr
add
add
in
shl
pusha
pop
add
aad
in
add
mov
inc
push
enter
adc
cltd
inc
cmp
mov
adc
lods
in
pop
icebp
push
insb
push
cltd
shlb
mov
insl
fnstenv
pop
add
sub
out
sahf
popa
jecxz
out
sub
fcmovnb
rolb
add
dec
test
adc
add
lea
mov
add
jno
sahf
lret
dec
shr
add
lock
pop
mov
shlb
pop
sub
mov
sbb
in
sbb
cmp
int3
and
mov
lock
add
xchg
jmp
jo
repz
push
jo
cwtl
in
addb
push
shrl
jnp
out
mov
add
pusha
stos
gs
mov
inc
xchg
push
sub
cltd
add
test
ja
dec
sahf
psadbw
shlb
cld
pop
add
mov
add
jg
xchg
jne
movsb
add
xor
stos
mov
mov
cmpsl
add
pushf
lcall
mov
pop
loopne
outsb
pop
add
loope
scas
jp
stos
lldt
inc
push
jno
and
mov
leave
in
scas
andb
lods
or
mov
mov
mov
jo
pop
cs
add
or
cltd
mov
loope
aad
cmpsl
adc
cld
xor
in
mov
iret
ljmp
cmp
lock
lds
pop
inc
xchg
and
add
cwtl
mov
push
icebp
das
sbb
fidivrl
out
add
mov
filds
push
in
fisttpll
mov
dec
and
cmp
sub
jno
fldl
mov
add
and
pop
xchg
add
mov
stc
dec
inc
lahf
js
shrb
and
add
lcall
mov
outsl
test
lock
cmp
cmpb
insl
ss
das
push
rolb
fisubl
sahf
xchg
inc
imul
sbb
inc
icebp
adc
sub
out
mov
arpl
lahf
mov
dec
sahf
mov
in
or
inc
cwtl
in
adc
out
or
es
ret
push
aad
sbb
and
add
dec
xchg
iret
add
xchg
pop
pop
sbb
ja
xorb
push
add
das
inc
lea
jbe
add
dec
push
std
push
movsb
sub
xchg
and
test
test
cmp
mov
sbbb
mov
mov
cltd
pusha
mov
jae
icebp
mov
mov
adc
add
sub
add
ljmp
inc
xchg
lods
sub
je
pop
add
mov
loopne
movsb
inc
int3
out
mov
cwtl
add
ljmp
and
mov
in
sub
insb
inc
lods
push
rclb
movsb
lret
inc
xor
pop
fldl
xlat
inc
adc
inc
test
jecxz
lret
mov
mov
iret
add
and
and
mov
adc
enter
stc
sbb
push
cmp
inc
mov
xchg
outsb
pusha
dec
and
rcrb
sbb
gs
add
push
adc
push
mov
ss
sbb
enter
add
movsb
lock
lea
cwtl
dec
loopne
add
sbb
pusha
push
mov
xorb
push
mov
pusha
test
aam
out
jg
stos
pop
int3
stos
mov
in
insl
ds
add
xor
jmp
inc
mov
jl
aad
pop
fisubs
shrl
aaa
ljmp
aad
or
sub
daa
mov
stos
xchg
mov
test
sbb
add
jb
in
push
dec
and
add
mov
cltd
test
sar
mov
mov
add
inc
pop
insl
adc
xor
fwait
push
push
jbe
adc
ret
std
and
adc
pop
out
int
dec
cmc
rolb
aaa
push
and
xor
insb
imul
repnz
xor
mov
jne
in
test
pop
sbb
iret
sbbb
add
nop
mov
addb
shll
mov
sbb
addr16
popf
xchg
lret
ljmp
xor
subb
imul
mov
or
loopne
mov
pop
ss
popa
mov
adc
adc
pop
enter
shr
cwtl
xchg
test
pop
mov
loope
loopne
mov
lcall
mov
add
lahf
dec
enter
mov
or
or
aas
mov
test
add
mov
ret
sub
xor
jbe
add
sti
hlt
xchg
sbb
xchg
add
neg
jne
ret
sbb
cmp
mov
sub
jl
fwait
xor
es
xor
mov
aad
lods
into
loop
jecxz
das
adc
sbb
sbb
loope
add
push
cmp
pop
cmp
bnd
inc
mov
rolb
jmp
in
mov
test
mov
lea
test
repz
push
inc
mov
adc
xor
loope
xchg
ds
int
jnp
add
das
xchg
jge
dec
lods
sub
out
call
and
inc
sahf
jb
pop
outsb
popl
aas
adc
into
in
lods
push
inc
imul
dec
pop
in
rcr
fisubrs
lret
dec
add
and
pop
and
stc
ficoml
mov
adc
cmp
loope
sub
pusha
add
or
jo
add
cmp
out
stc
add
mov
adc
or
test
ret
pop
int
shl
popl
add
leave
push
cli
out
xchg
and
pushf
rorb
addb
adc
nop
test
push
push
pushl
gs
rcrb
pusha
mov
iret
push
mov
scas
shlb
sub
xchg
fimuls
lcall
shll
insb
rolb
jne
adc
push
cwtl
mov
aad
into
addl
jno
loopne
sub
lret
stos
jp
mov
push
cli
and
int3
mov
arpl
pop
das
insl
out
aam
popf
in
stos
xor
mov
mov
adc
rorl
subl
fnstsw
xchg
add
dec
fisttpl
pushf
mov
add
cmpsb
mov
sbb
or
in
mov
push
jne
cwtl
ret
adc
add
leave
dec
sbb
mov
popa
test
lret
ficompl
out
cmp
add
add
jo
aad
loopne
mov
orl
in
xorl
xor
cli
sub
inc
jl
sbb
lcall
inc
xchg
sbb
xor
or
pop
testb
push
std
add
mov
mov
js
xchg
mov
dec
pop
dec
in
push
and
push
inc
sbb
ror
inc
adc
pop
jnp
and
add
pop
sarl
jbe
lahf
ljmp
inc
call
inc
fs
in
insl
add
xchg
sarl
imul
out
xor
xchg
push
sbb
mov
lcall
sbb
orl
cli
push
xchg
test
xchg
lea
in
movsl
xor
std
add
xlat
xchg
sub
mov
cmpsb
push
add
pushf
fdivrl
cwtl
test
sbb
push
aas
dec
mov
in
sub
inc
jbe
cmp
mov
les
jge
jle
add
push
arpl
jl
or
add
push
inc
call
add
mov
dec
xor
out
lds
scas
shlb
inc
add
xchg
movsb
push
insb
mov
cmovp
in
imul
sub
add
lret
mov
jge
pcmpeqd
loopne
out
ret
sbb
cmpsb
dec
cmp
leave
or
add
inc
pop
rolb
mov
enter
pusha
lret
pop
sbb
mov
cmp
cmpsl
add
inc
push
bound
sbb
cltd
inc
mov
add
loopne
fldenv
dec
and
mov
cwtl
dec
scas
add
imul
mov
cmp
xor
xor
nop
or
inc
js
jp
xchg
ret
mov
cli
add
iret
mov
sub
shl
test
jne
lock
fstpt
mov
hlt
pop
mov
ret
filds
inc
xor
xchg
cld
addr16
mov
aam
call
cmp
rorl
pop
add
pop
imulb
mov
inc
outsl
scas
aad
xchg
fstl
cmp
andl
pushf
test
cmp
cmp
push
add
dec
je
jg
pop
sub
inc
fstps
sahf
call
sub
inc
add
xchg
jnp
pop
xor
cmp
xor
iret
sahf
push
add
xor
push
mov
push
sbb
adc
int
lds
ja
je
mov
lret
add
pop
adc
xor
mov
inc
add
rcll
jae
dec
pop
mulb
mov
jo
add
add
loope
adc
xchg
dec
sub
add
lea
add
sbb
gs
push
insb
lcall
jmp
adc
pusha
xor
add
imul
subb
cmc
push
add
getsec
sub
dec
xchg
insb
add
fwait
dec
clc
xchg
ds
sub
in
sbb
nop
inc
cwtl
shlb
in
mull
jo
inc
xchg
cmp
lret
sbb
fwait
hlt
out
xchg
mov
sbb
das
pop
mov
mov
sbb
enter
negl
xchg
rol
into
add
leave
out
nop
insb
add
cs
dec
add
mov
push
push
inc
dec
add
mov
fisubrs
sbb
les
out
filds
js
mov
sbb
cltd
out
lods
mov
fnstsw
idivb
enter
int3
lods
mov
mov
jnp
rorl
cmp
ljmp
cmp
clc
and
push
pop
lea
arpl
cmp
push
mov
ja
inc
dec
sub
add
aad
pop
cmp
mov
push
add
clc
sub
dec
sbb
push
ficoms
fs
ret
outsb
fucomip
aaa
add
cld
stos
push
xor
pop
test
add
into
jne
call
fsubl
cmp
pop
loope
jne
aam
sbb
rcrb
cwtl
mov
les
icebp
out
or
rcr
add
cmc
xchg
inc
add
adc
pop
xchg
or
add
cmpsb
loopne
lret
mov
push
hlt
inc
adc
add
loopne
imul
out
pusha
fsubs
jge
sbb
push
inc
xor
add
mov
adc
stos
dec
shr
sbb
push
adc
pushf
outsl
pop
cmp
lock
and
inc
inc
rclb
jge
nop
dec
add
mov
mov
inc
xor
add
scas
push
sub
adc
insb
pop
mov
imul
xchg
sub
je
fidivrl
mov
outsb
incb
shl
and
pop
fwait
and
jge
arpl
movups
or
sbb
mov
and
mov
adc
or
mov
pop
mov
add
inc
sbb
push
xor
nop
mov
arpl
fwait
mov
les
add
lret
jle
pop
ret
imul
adc
add
dec
adcb
lods
pop
in
and
decl
mov
jne
add
or
jge
push
jl
add
pop
pop
popw
cs
xchg
fbld
mov
fnsave
pop
pop
daa
pusha
add
add
mov
insl
add
jg
and
jns
pop
add
mov
fwait
ss
push
rcrl
fildl
fstpl
sbb
add
outsb
push
dec
pop
loopne
push
pop
fidivrs
je
inc
or
pop
add
add
add
adc
fmuls
pop
mov
cld
jmp
inc
sub
sbb
into
insl
sahf
dec
inc
and
adc
adc
xchg
cwtl
jg
or
lods
call
sbb
adc
and
pop
sahf
add
add
jmp
push
jne
sbb
rolb
and
js
jge
add
adc
add
jle
sub
mov
mov
pop
mov
add
add
mov
out
jmp
mov
leave
insl
jge
sbb
add
inc
cmpsb
movsb
add
jp
and
lret
xor
jle
cld
getsec
icebp
sbb
rcrb
fcomi
addb
test
fimull
test
cwtl
je
mov
in
or
pushf
adc
repz
ja
or
stos
push
lret
mov
addr16
jo
cwtl
aam
cwtl
and
test
lea
mov
xchg
add
push
test
addl
sub
push
std
add
arpl
das
in
and
pop
lret
notl
lcall
or
lret
xchg
pop
int
push
push
add
sbb
cmpsb
das
std
hlt
lock
jg
push
mov
cmc
dec
fisttpl
mov
test
rol
inc
clc
mov
adc
out
scas
pop
xchg
shrb
out
in
jo
call
test
or
add
inc
pop
lock
pop
mov
lahf
das
fmulp
jg
push
xlat
xchg
adc
jo
arpl
mov
push
mov
movsl
jae
test
data16
dec
inc
pop
or
movsb
push
dec
sub
lret
inc
aam
mul
add
mov
ret
adc
aad
fwait
repnz
ja
ljmp
sbb
cmpsl
aam
sbb
mov
inc
jp
add
jg
inc
cmp
in
lahf
add
inc
mov
xchg
pushf
mov
dec
int
pop
mov
loope
insl
and
lds
cmp
sbb
adc
cmp
add
test
aas
lahf
in
or
mov
dec
push
mov
inc
andl
ja
call
shrl
xchg
ljmp
insb
pop
std
xor
out
mov
mov
pop
fs
leave
push
add
ss
xchg
rorb
add
sub
fstp
cmp
cmovge
xor
rol
sbb
stos
add
mov
cmp
hlt
dec
inc
jae
add
leave
mov
jle
mov
add
lcall
mov
and
push
inc
sbbl
push
dec
add
xchg
imul
call
mov
sbb
shlb
mov
sti
sbb
into
rcrb
inc
inc
add
pop
nop
pop
lgs
mov
lret
scas
and
sbb
in
pop
mov
mov
std
out
testl
dec
inc
xchg
ss
iret
lods
jns
jo
add
pushf
call
sbb
inc
add
aas
and
add
jae
imul
popf
pop
add
mov
push
in
xchg
hlt
add
xchg
xor
inc
icebp
fwait
outsl
pop
scas
sti
nop
test
insb
push
sbb
dec
push
add
mov
add
dec
cld
jns
jne
add
add
fadds
test
xchg
xchg
popf
shl
add
enter
mov
push
sbb
imul
mov
nop
dec
mov
test
shlb
xchg
iret
std
add
outsb
jp
ljmp
mov
icebp
nop
xchg
add
xorl
js
or
xchg
xorb
dec
add
push
test
repnz
pavgb
sbb
push
add
cwtl
add
js
imul
insb
pop
adc
sbb
dec
subl
imul
repz
ja
std
lret
jb
sub
ret
xchg
jg
add
movsb
loope
dec
or
jg
add
loop
mov
add
xor
jle
push
sub
movsb
add
lret
mov
add
mov
push
je
add
ja
test
push
mov
iret
sahf
add
mov
add
sbb
mov
incb
out
loop
loopne
mov
add
scas
rcl
enter
pop
shld
mov
adc
and
add
out
fstpt
add
pop
sbb
and
add
int3
cmp
add
jbe
add
fidivrs
pop
dec
inc
dec
sub
add
sbb
aas
sbb
add
data16
leave
out
lret
pop
add
ds
ja
pop
insb
push
sbb
testb
inc
pop
movsl
cli
aam
jne
add
or
jne
xor
inc
mov
sub
mov
sub
rcl
mov
or
xor
mov
sub
and
es
mov
iret
das
testl
jbe
adc
dec
add
add
xchg
test
pop
cmp
mov
int
es
and
xlat
dec
cmp
pop
mov
cmp
jp
xor
add
dec
shrb
or
mov
sbb
outsb
xchg
pop
stos
pop
movsb
mov
jo
inc
and
out
loope
sbb
dec
and
cmp
add
sbb
sbb
aaa
mov
inc
lret
mov
jns
xchg
push
jnp
sub
call
imul
test
cltd
sub
pop
nop
movsl
iret
and
es
jno
cmc
or
xchg
andb
lods
jge
pop
push
xchg
mov
clc
inc
jne
leave
push
xor
in
imul
stos
hlt
loop
fdiv
orb
int
add
mov
iret
xchg
orl
mov
dec
cmp
or
push
jne
cltd
add
pop
cmp
jl
popf
out
mov
sbb
fwait
cmp
or
shlb
sbb
and
push
bound
pushf
popf
cwtl
mov
cli
xchg
sbb
and
sbb
jno
or
mov
add
ja
add
in
cmpsl
push
push
push
cmp
mov
fsts
xor
repz
mov
insb
cld
jnp
xchg
dec
inc
mov
jp
and
mov
in
mov
loope
mov
or
lods
xchg
sahf
cmp
test
pop
notl
out
xlat
sahf
add
sub
inc
ficoms
adc
or
div
dec
mov
out
jo
lds
arpl
and
or
lods
pcmpeqd
sub
dec
sbb
adc
enter
insb
add
jp
xchg
mov
in
loope
adc
sub
sub
push
mov
mov
inc
and
sbbl
xor
lds
lock
orb
add
dec
and
in
ss
fimuls
lret
xor
push
cmp
fwait
add
xchg
daa
xlat
add
sub
adc
or
aam
cli
or
inc
sub
shl
mulb
jbe
out
int
cmpb
ret
setl
jmp
int3
xchg
into
add
sub
cmp
mov
daa
movsb
xchg
mov
icebp
aad
enter
fisubrs
popl
mov
call
lock
js
sbb
jl
push
fwait
xchg
cmpsl
jae
sub
sub
shll
outsb
loop
fisttps
fs
dec
ret
or
shll
or
inc
xor
inc
or
push
loopne
fldl
pop
loopne
lods
mov
daa
js
out
cltd
xchg
mov
insl
outsb
popf
imul
ja
lidtl
hlt
daa
mov
add
lret
jge
and
pusha
stc
sub
insb
inc
jp
cli
xor
add
add
repz
jmp
faddl
lods
mov
js
add
pop
ljmp
pop
ja
push
or
cmp
xor
lock
xor
pop
dec
cmpsl
add
aas
push
sarl
clc
call
xor
mov
rorb
jno
add
data16
nop
aam
jge
int
roll
es
clc
dec
push
mov
cmpsl
fstl
arpl
in
mov
mov
sub
jns
mov
xchg
insl
pop
inc
inc
nop
test
xchg
dec
sbb
add
pop
repnz
ficoml
pop
rcrl
pusha
xchg
nop
mov
add
out
mov
or
test
add
adc
and
push
xor
dec
loop
sbb
xchg
jl
sub
inc
add
jo
clc
or
pop
jge
das
cmpsl
sub
xor
add
jbe
lret
cld
outsl
add
fcomp
xchg
mov
fmull
add
xchg
fisttpll
shlb
add
loop
jge
add
and
dec
and
cld
aad
add
out
sahf
nop
ret
ret
jp
cmp
aas
and
cmp
add
add
sub
jp
clc
add
bound
movsl
sbb
test
sub
mov
lods
jmp
pop
mov
lret
xchg
or
sub
lret
in
push
rclb
xor
cmp
dec
or
pop
jo
xor
jb
shlb
es
aad
pop
jnp
xor
adcb
push
push
lods
fisubs
add
add
addl
in
fsubrp
jmp
xchg
enter
xor
daa
mov
adc
and
dec
loopne
xorl
xchg
es
and
hlt
sbbb
lea
dec
sbb
mov
fiaddl
sub
adc
add
pop
add
add
stos
leave
daa
lret
loop
pop
xor
xor
pop
mov
bound
push
sbb
mov
push
mov
in
and
je,pn
aaa
into
add
inc
mov
sub
cmp
xchg
push
xor
scas
out
cltd
pusha
outsb
mov
lahf
add
leave
inc
arpl
jae
outsl
xchg
pop
ljmp
out
rolb
xchg
mov
in
sarb
jle
fidivs
xchg
jo
rolb
rolb
or
dec
xchg
test
mov
orl
add
aas
mov
mov
add
jb
mov
inc
cmp
lcall
data16
sub
test
lods
nop
inc
jns
mov
lods
testl
pop
movsl
pop
pop
enter
inc
fildl
iret
xorl
sub
push
or
add
orb
pushf
mov
push
sub
fdivrl
outsl
adc
aad
nop
test
pop
mov
kandb
add
pop
push
sub
test
repz
mov
das
icebp
mov
add
adc
jnp
clc
push
inc
xchg
wrmsr
and
pop
loopne
sbb
push
pop
pusha
cld
xor
into
or
jl
or
ret
jp
aam
notl
adcl
xor
les
sbb
push
add
fldl
xor
outsb
mov
lock
mov
dec
dec
sub
add
xor
pop
push
push
dec
aaa
out
or
mov
pop
cmp
fldl
stc
test
sets
pop
hlt
lds
shll
add
enter
cli
lahf
int
subl
dec
jl
jg
push
sub
add
popf
das
test
test
pop
xor
mov
imul
andb
ret
sbb
aas
ret
add
pop
add
iret
mov
mov
push
push
adc
test
xor
daa
or
adc
or
lods
inc
and
jbe
leave
js
les
stos
cltd
les
lods
push
mov
les
setge
fsubrl
sar
or
jge
add
flds
add
fst
shl
jl
dec
xor
icebp
lahf
pop
cli
add
cmp
nop
add
in
jl
jbe
mov
test
cmc
ret
repnz
jp
pop
add
cmp
sub
jae
jge
mov
xchg
test
adc
lret
enter
add
pop
add
inc
mov
mov
dec
fisttpll
lcall
dec
inc
pop
pusha
call
roll
cltd
rcll
add
add
mov
sbb
lret
stos
or
movsb
orb
push
das
jns
sbb
push
clc
xor
add
loopne
aaa
or
mull
push
jmp
in
add
lahf
jno
int3
enter
xchg
pop
push
pusha
add
cli
xchg
cmpsl
pop
adc
out
in
xor
data16
push
and
xor
pop
and
daa
sarb
add
jle
xchg
enter
gs
mov
sbbb
test
pushf
inc
sub
gs
pop
add
jge
loopne
mov
pop
xchg
mov
mov
inc
jp
push
pop
outsl
pop
test
pop
enter
adc
out
jmp
and
add
movsl
jae
es
std
cmpb
xor
add
into
jle
fisubs
and
sbb
and
call
cmp
adc
or
fs
jbe
and
jl
add
shl
xchg
hlt
mov
and
add
jb
nop
pusha
call
dec
dec
pusha
lock
add
mov
es
mov
clc
popf
or
push
ss
add
sbb
pop
nop
push
cwtl
jbe
push
push
or
lret
inc
lds
jmp
jo
stos
imul
mov
fstpt
pop
adc
cmp
push
and
sub
inc
cld
das
xchg
add
xchg
addr16
ret
fbld
dec
lea
fsubrl
xchg
into
add
cmpsb
sub
mov
inc
pop
repz
mov
cwtl
out
out
in
dec
inc
xor
aam
mov
add
mov
rolb
in
push
or
cld
push
xor
add
xchg
xchg
lret
neg
inc
andb
push
add
lods
adc
fiadds
mov
nop
jb
shll
jecxz
adc
pop
outsb
test
in
mov
fcomps
xchg
jno
test
sahf
ret
lahf
enter
dec
add
imul
mov
add
pop
ret
repnz
stos
cmovge
jne
sbbb
popa
mov
add
push
mov
adc
lcall
in
dec
adc
xchg
add
xor
or
jb
and
ljmp
pop
scas
in
cmp
popf
rcll
cld
push
les
xor
cmp
dec
sub
fwait
mov
jecxz
fcoml
data16
out
jl
mov
mov
xchg
xchg
les
mov
sub
call
stos
cmp
xchg
dec
jae
add
push
pushf
mov
ret
pminub
dec
pusha
enter
repnz
mov
cld
adc
pop
inc
in
aam
add
mov
xchg
pop
fisubl
aam
adc
ss
mov
xor
jnp
outsb
shll
add
es
leave
pop
jns
pushf
adcl
inc
jl
in
push
rclb
and
pop
fwait
pop
xor
mov
inc
jmp
call
add
mov
dec
call
pop
ja
add
mov
ret
xchg
pop
xchg
cld
xchg
push
cmpsl
mov
add
test
push
dec
sbb
push
mov
stos
add
mov
call
movl
in
shlb
mov
and
push
add
jne
jns
jg
push
out
in
lret
cmp
sub
sub
xor
adc
aad
sbb
lods
lea
mov
adcb
or
sbb
ret
popa
dec
add
or
push
add
imul
push
xor
lods
leave
jno
dec
add
hlt
lahf
or
inc
pop
hlt
inc
and
push
das
fwait
cmp
sahf
or
loope
mov
jge
sbb
push
rcll
add
fldl
mov
cwtl
subl
les
sbb
repnz
or
mov
adc
cs
jo
mov
je
testb
shrb
inc
sub
or
orl
popa
xchg
nop
lods
jmp
ljmp
jg
cmp
outsl
pop
loopne
dec
sbb
outsl
cmpsl
push
mov
mov
sub
loope
push
cwtl
dec
dec
push
rcll
or
std
xor
orb
add
adcb
pop
js
add
fwait
xchg
testl
fwait
xor
dec
cmp
lods
pop
jae
sub
and
lds
cmpsl
inc
movsb
and
mov
and
mov
pop
xchg
mov
mov
mov
jne
arpl
cmp
imul
pop
adc
jnp
adc
add
push
xchg
outsl
int
push
mov
and
jno
ja
imul
inc
add
fildl
enter
jb
je
adc
add
pop
fsubr
loopne
movsb
mov
sbb
sub
stos
sbb
cmp
push
call
daa
sbb
pushf
add
je
icebp
rclb
push
add
sub
les
pusha
out
and
xor
add
in
dec
rol
out
stos
shrb
lods
lds
pop
push
aad
das
lret
inc
jnp
add
lret
je
std
mov
cwtl
pop
in
pop
cmpl
jae
mov
xor
xor
mov
push
cwtl
sbb
lds
mov
or
xchg
xorb
test
lods
adc
pop
cltd
rclb
mov
rorb
cld
push
popf
int
jno
xlat
test
pop
stos
mov
scas
in
and
add
adc
add
out
sub
pusha
dec
lods
fcmovnbe
jae
fisttpll
adc
mov
or
fbstp
test
cmp
sbbl
add
xor
adc
daa
mov
addb
and
dec
mov
test
xchg
mov
aam
iret
test
jl
ss
jp
add
mov
shll
mov
mov
das
jno
inc
sub
cmpl
xor
sbb
xor
call
xor
cmp
add
into
rclb
es
in
inc
cmp
pusha
pop
sbb
or
pop
add
cmpsl
insl
fimuls
xor
fcomi
dec
inc
add
hlt
lea
mov
dec
jbe
std
sub
lods
mov
or
cmpsl
inc
mov
out
push
pop
faddl
add
mov
fldl
xchg
push
pop
cltd
orb
in
mov
pop
lods
and
nop
scas
shrl
rol
xchg
add
outsl
call
ret
mov
nop
sbb
jmp
fmuls
rcrb
sub
sub
ret
popf
jo
xor
fstpl
aam
and
xor
adc
popf
cmp
mov
dec
call
jge
add
jo
data16
cwtl
pushf
add
dec
rcr
ljmp
int3
push
out
orb
inc
clc
je
enter
sahf
mov
fucom
inc
jl
or
jmp
in
push
mov
add
mov
pusha
adc
dec
js
shlb
std
in
jg
xchg
sbb
shlb
add
cmpsb
dec
int
mov
dec
jo
pusha
andl
push
rclb
ja
fldl
lds
lcall
and
nop
add
icebp
leave
pop
sub
lds
adc
or
mov
daa
jmp
adc
pop
and
mov
fcomp
jne
in
sub
xor
jp
clc
and
add
mov
mov
iret
add
fwait
dec
xchg
addb
sub
in
leave
out
mov
inc
loope
jp
into
pop
sbb
xchg
mov
or
test
inc
adc
lock
or
mov
add
push
mov
add
cwtl
mov
repnz
aam
aad
addb
test
xchg
push
and
leave
cwtl
andl
push
je
or
sub
dec
es
mov
inc
es
add
dec
mov
mov
lods
dec
add
and
jne
fs
add
movsb
js
add
sbb
push
cs
inc
xor
ja
lahf
cmc
cli
cmp
sub
rolb
xchg
out
sub
xlat
inc
jp
js
jo
imul
pushf
insb
lea
lret
cmp
sahf
mov
sbbb
pop
and
pop
iret
fstpt
pop
and
stos
pop
or
pop
jae
xchg
push
mov
push
push
and
aam
and
pop
pop
clc
push
mov
inc
xor
clc
flds
loope
adc
out
mov
inc
adc
jne
or
std
lcall
jecxz
inc
sub
and
dec
js
jg
or
shlb
std
and
pop
xor
rcll
jge
popf
test
adc
dec
jl
xchg
xchg
stos
scas
clc
xchg
push
std
and
add
out
jno
inc
cs
sub
lcall
imul
lds
mov
inc
sub
data16
xchg
jbe
mov
and
pop
les
test
int
dec
dec
jl
loope
cs
pop
sub
fwait
inc
add
lret
xor
cld
loope
aad
call
and
xor
pop
or
lock
shrl
subb
dec
mov
loope
add
inc
push
push
add
out
movsb
mov
mov
mov
mov
out
inc
add
inc
push
mov
push
add
sbb
sti
les
and
pop
add
xchg
pop
jecxz
mov
nop
iret
inc
push
and
dec
and
sub
xchg
adc
jmp
pushl
sbb
or
jg
lea
mov
mov
adc
sbb
mov
popf
and
ret
in
lea
sbb
aam
xchg
xorb
popa
xor
test
aam
fmull
pop
sbb
fbld
faddl
or
cmp
movsb
subl
das
xor
mov
add
pop
mov
xchg
or
pusha
xor
movsb
ja
or
stos
les
adc
mov
pop
int
stc
leave
aam
popa
mov
fucomi
sbb
leave
or
inc
int3
bsf
adc
pop
insl
in
xor
fiaddl
xor
stc
fmull
lret
loope
leave
and
inc
push
xor
fcoms
xchg
adc
adc
sarb
aas
pop
or
pop
mov
sbb
outsl
or
adc
cmp
or
and
push
dec
fbstp
and
push
rclb
and
adc
inc
xor
pop
lahf
inc
lods
xchg
and
push
sarl
push
dec
daa
jae
pusha
mov
sbb
push
shll
stos
movsb
mov
std
shld
pop
rclb
jle
adc
mov
push
and
jo
add
outsb
ljmp
adc
pop
push
movsb
pusha
sbb
adc
movsl
mov
jmp
lds
sbb
dec
inc
or
nop
fdivl
adc
and
sub
and
jbe
add
add
stos
or
xchg
imul
jge
xor
test
cmpl
jp
out
nop
es
cld
add
lea
std
lret
fidivrs
aam
dec
out
and
push
cmp
subb
imul
add
shlb
mov
xchg
push
ja
loopne
mov
push
bound
sub
sub
push
inc
sub
add
add
les
xor
jge
pop
push
add
inc
rolb
pop
test
cmpsb
mov
or
push
and
mov
xor
add
sub
mov
jb
add
mov
fnstsw
xor
add
pushf
lods
cmpsb
mov
xlat
push
add
or
push
add
fidivrs
add
pusha
out
stos
dec
out
cmp
adc
shrb
add
sbb
jbe
cld
push
dec
fs
add
clc
inc
iret
loopne
dec
pop
mov
jge
push
cwtl
lret
add
test
jecxz
xchg
or
dec
jb
dec
jo
iret
in
nop
test
outsl
sbb
sti
into
pop
cmp
sub
xchg
ds
jno
mov
dec
mov
daa
inc
xchg
mov
mov
lock
jnp
shl
mov
mov
pop
or
stos
faddp
mov
fwait
inc
cmp
xor
repnz
lds
sub
in
fdivr
popa
adc
mov
dec
in
call
push
xchg
mov
xchg
or
xor
lea
jns
and
sub
jle
stos
push
add
sbb
push
inc
into
sbb
sbb
adcb
sub
xor
jo
add
bound
mov
pushf
pop
xor
and
clc
dec
add
test
jbe
sub
dec
pop
add
mov
dec
cmp
cmc
jg
mov
add
test
shrl
jge
adc
int3
inc
inc
aaa
lds
and
pusha
pop
inc
lods
outsb
push
xor
sbb
invlpg
inc
lock
add
es
ss
inc
or
push
pop
dec
mov
add
sbb
inc
fstpt
push
lahf
ds
and
popa
dec
rclb
sub
cwtl
icebp
dec
add
cmc
subb
nop
testl
notb
xchg
dec
test
in
cmp
sub
xor
cmpb
sbb
lret
jmp
mov
nop
add
add
in
pop
add
movsb
nop
push
mov
add
sbb
sub
loopne
lahf
xor
add
jno
dec
pop
jmp
or
in
repz
mov
and
push
xor
das
rclb
dec
xor
jae
add
or
mov
hlt
divl
or
jge
enter
add
addl
xor
idivl
pop
lock
shl
add
inc
aad
mov
xorl
pop
jb
add
das
and
add
xchg
add
sbb
shlb
add
mov
pop
call
in
rcrl
jb
pop
mov
cmpl
xchg
test
pop
loop
pop
cmp
jl
inc
pop
icebp
xor
sub
stos
adc
mov
xor
pop
pop
outsl
sbb
jl
cwtl
and
mov
or
add
rorl
lods
ljmp
add
xor
xchg
or
add
jo
popa
and
pushf
dec
or
prefetch
test
hlt
pop
int3
insb
dec
sahf
xorb
add
cmp
add
mov
repz
in
sbb
pop
add
sbb
pop
cmp
shrl
adc
lods
pop
xor
push
mov
rolb
inc
loope
or
andb
notl
scas
adc
add
mov
lock
xchg
xorb
xor
lock
mov
sub
cmp
ret
flds
dec
inc
hlt
inc
mov
imul
add
ret
push
lcall
push
push
fimull
xchg
xor
inc
jle
add
nop
sbb
popf
addb
mov
inc
mov
add
adcl
mov
mull
testb
add
aam
jno
fcomip
insb
movsb
cld
add
test
jp
lret
ficompl
shlb
cwtl
inc
prefetchwt1
sub
add
jnp
cmp
push
enter
push
inc
adcb
or
dec
shlb
dec
add
and
jo
rcrb
pop
pop
aad
int
pop
cmp
push
loope
insb
adc
cmp
mov
inc
sbb
rorl
aaa
jne
add
push
dec
mov
cmp
orb
test
cs
jns
dec
mov
adc
ljmp
in
into
sub
xchg
adc
shll
adc
mov
loopne
cmpsb
insl
pop
movsb
movl
push
repnz
pusha
adcb
test
add
lock
stos
pop
je
mov
aad
xor
out
or
xchg
or
mov
lds
mov
add
andb
mov
not
rcrb
add
hlt
xchg
insb
arpl
adc
xchg
fadds
sub
into
cs
and
je
or
push
mov
cmp
xchg
or
sbb
pop
ret
lock
loope
jg
xor
mov
xor
movb
ret
adc
or
fmul
add
shrb
mov
and
add
ljmp
sub
push
std
adc
add
out
xor
xor
insb
lock
sti
mov
pop
sbbb
and
cltd
mov
add
cltd
dec
loop
mov
nop
call
neg
dec
js
nop
dec
test
xor
int3
or
fistl
xchg
rorl
mov
jae
test
adc
imul
rcrl
push
lcall
lret
pusha
loop
bound
pushf
lods
rclb
sub
cmp
lea
lods
add
clc
in
lcall
cmp
dec
lock
adc
addr16
inc
int
ja
pop
add
test
mov
pop
les
mov
cli
test
inc
arpl
fildl
and
xor
pop
dec
inc
or
pop
lea
filds
push
lret
fisubs
movsb
cwtl
xchg
add
aaa
inc
and
movlps
pop
add
xchg
and
rolb
xchg
outsb
shrb
inc
inc
ss
stos
fisubrs
insb
push
add
int
cwtl
mov
jl
pop
push
add
jmp
cmpsl
sbb
add
das
inc
xor
arpl
fists
enter
rolb
or
add
adc
push
pop
ret
or
andb
and
or
jecxz
js
add
into
push
xor
rorl
push
xchg
cmpb
lret
mov
ljmp
pop
dec
pusha
and
and
int
add
les
mov
cmp
inc
enter
mov
add
push
divb
bswap
jae
pop
xor
mov
push
adc
loop
xor
add
inc
addr16
jo
cmp
incl
and
mov
int3
inc
add
add
movsl
or
pop
and
lea
sbb
jnp
jecxz
sub
sub
or
lret
inc
and
leave
inc
cmc
inc
pop
popa
lods
sbb
sbb
add
jl
loopne
rorb
int3
or
sub
clc
notl
shrl
andb
dec
cmp
add
mov
mov
ror
inc
pop
push
or
inc
xchg
or
or
outsl
jg
jne
lcall
xor
add
pandn
sbb
and
scas
cmpsb
fs
cmp
hlt
insl
mov
add
inc
xor
xor
dec
in
clc
lea
xchg
clc
cwtl
inc
jne
adc
cmpb
sub
addl
cltd
fidivs
icebp
add
fstl
dec
test
push
orb
xor
sahf
stos
xchg
add
shll
test
fwait
xchg
jne
loope
jle
gs
add
jp
lea
inc
cwtl
cld
jecxz
inc
mov
outsl
dec
push
pushf
popa
mov
xor
adc
sub
pop
sarb
xor
add
mov
inc
repnz
xchg
push
je
adc
cmc
leave
call
nop
outsl
ja
add
mov
or
shlb
add
pop
mov
add
das
jp
inc
or
pop
cmc
mov
xor
push
divb
cmp
jnp
cmp
xor
dec
insb
out
lock
add
lcall
jmp
lea
sbb
mov
cmp
adc
adc
inc
mov
daa
xor
add
cmp
mov
and
jae
or
cli
int3
add
movsb
fnsave
add
fsts
pusha
cmp
cltd
and
call
mov
iret
or
jo
push
mov
xor
add
test
int3
sbb
push
adc
push
lock
out
pusha
or
add
xor
push
add
xor
inc
mov
test
push
mov
call
gs
push
xchg
xchg
and
cmp
mov
push
add
testb
add
mov
add
xchg
xchg
lea
pop
dec
adc
cmpsl
pop
cmp
add
cmc
sub
xchg
jnp
add
or
sbb
or
or
add
das
jecxz
pop
inc
iret
or
push
pusha
je
push
cmp
out
hlt
add
mov
bound
notb
jge
adc
add
cwtl
and
sti
add
mov
sub
mov
jmp
mov
add
jo
inc
pop
je
rcll
adc
push
push
push
idivl
adc
nop
and
sbb
aam
sub
cmp
in
pop
mov
mov
add
sub
lods
mov
and
div
and
cmpsb
nop
adc
cmp
add
je
mov
mov
add
and
jno
in
pop
icebp
inc
add
add
cmp
popf
push
xchg
adc
and
in
push
jne
call
xchg
das
scas
pop
xchg
mov
js
lock
add
or
or
inc
sahf
xor
sbbb
push
jg
test
xor
pop
push
sar
pop
jmp
add
sbb
cmp
divb
mov
sub
and
add
fiaddl
push
mov
les
or
xor
jbe
int3
mov
jae
jp
shl
jle
add
jl
push
cmp
dec
cwtl
mov
xor
inc
add
xchg
outsl
pusha
roll
addr16
or
push
sahf
das
xor
mov
push
mov
push
mov
popa
add
dec
jb
inc
cmp
sbb
jge
ret
cmpsl
adc
and
add
dec
mov
and
imul
aaa
sub
call
add
scas
jne
pusha
and
xor
or
pop
movl
sbb
ret
or
and
out
adc
add
loop
and
or
rcrb
add
daa
shrl
inc
mov
das
jg
in
setnp
push
loope
mov
sbb
sbb
add
out
adc
or
dec
ds
adc
mov
or
test
mov
add
loop
pop
jp
in
stos
lea
cmp
and
cmove
add
jge
dec
les
sti
add
adc
stc
lock
mov
andb
test
inc
pop
mov
jmp
dec
jo
es
mov
mov
imul
pop
add
test
mov
mov
sti
rcr
inc
cmpsb
out
cmp
mov
loop
mov
or
add
out
popl
or
jo
fadds
test
xor
jo
adc
and
add
pop
push
mov
add
pushf
sbb
hlt
jae
iret
loope
inc
sbb
popf
lods
int
adc
cs
test
mov
incl
js
pop
shrb
sbb
and
cwtl
dec
cmp
dec
jb
add
sub
fidivs
lods
and
sbb
xlat
xchg
dec
fsts
xchg
push
pop
add
cmpsl
shrl
and
cwtl
rcr
movb
add
push
cmpsb
clc
popf
enter
aas
outsl
ret
lahf
ja
mov
mov
fs
add
outsl
mov
cmp
push
pop
pop
adc
shrl
adc
mov
aas
and
add
pushf
add
pop
sub
subb
dec
push
fsubrs
cwtl
mov
jp
xor
sub
or
cmovnp
mov
bound
sbbb
popf
sub
cmpb
jns
mov
jb
aas
push
scas
rcl
js
mov
cmp
inc
add
xlat
stos
and
ret
dec
arpl
jp
popl
mov
lock
dec
test
mov
sbb
pushf
xor
mov
jno
shl
xchg
test
mov
push
push
pop
dec
cmp
pusha
addl
fisttpll
pop
and
leave
into
mov
cmp
rolb
sbb
xchg
pop
test
out
jno
pop
sub
call
je
bound
pop
xchg
test
xchg
xchg
bound
adc
mov
push
mov
or
repnz
lds
cmp
dec
sahf
test
push
add
clc
loop
jp
xor
cmp
inc
cmp
push
aas
jb
jo
stos
or
add
lahf
adc
cmp
sbbb
and
lret
sub
dec
pusha
dec
or
or
loop
cbtw
or
push
add
mov
pop
int3
or
jns
out
inc
mov
movsb
dec
jl
fucompp
xchg
push
popf
mov
mov
mov
add
data16
dec
mov
inc
cmp
sbb
cmp
push
lods
push
adc
adc
ret
inc
cmc
aam
mov
cmp
xor
add
inc
mov
xor
push
dec
add
mov
ficompl
fcoml
push
loopne
js
push
dec
orl
fidivl
xchg
adc
mov
inc
test
adc
jge
push
add
xchg
aas
inc
out
cwtl
add
fsubrl
cmp
jb
mov
sub
dec
push
movsb
adc
std
add
inc
xor
pop
mov
mov
dec
cmpsb
test
xor
loop
pop
push
add
fnstenv
sub
xor
arpl
push
inc
cmpb
or
dec
lods
insl
movsl
adcb
or
add
rcrb
mov
add
int3
xor
aad
or
mov
outsl
add
xchg
lea
push
jo
in
icebp
enter
add
outsl
xchg
aas
lea
cli
setb
inc
xor
add
mov
push
and
dec
sub
in
jbe
add
xchg
subb
cmp
test
out
adc
enter
push
xchg
mov
test
movsl
cwtl
out
cmp
rcl
rolb
and
push
jecxz
mov
dec
jp
adc
bswap
loopne
mov
cli
add
out
sarb
call
std
movups
pop
imul
inc
push
add
pop
sbb
mov
into
add
fwait
dec
scas
lahf
inc
and
and
ret
loop
add
pop
xchg
inc
test
cmp
and
and
add
xchg
pop
add
add
adc
popa
out
insb
adc
mov
mov
or
lods
dec
lcall
jmp
pushf
xchg
sub
mov
push
push
and
stos
daa
jne
jmp
inc
cmp
add
dec
dec
push
add
nop
add
std
mov
arpl
js
jl
xchg
mov
movsb
add
add
jecxz
into
add
mov
cmp
push
pushf
push
dec
lock
inc
hlt
add
adc
xor
clc
adc
in
xchg
int3
rclb
mov
cwtl
orl
ds
xchg
jl
pop
dec
add
stos
nop
clc
sbb
das
add
add
pusha
mov
inc
dec
add
jo
mov
inc
sub
ja
gs
pop
popa
and
sarl
mov
insl
mov
loopne
pushf
push
bound
and
or
jle
push
mov
lods
imul
mov
jmp
sbb
jns
lea
lods
loopne
decw
or
pop
mov
xor
adc
andb
pushf
and
movl
test
mov
int
add
clc
outsb
fnstenv
fs
pop
mov
jp
mov
adc
xor
testb
add
push
mov
cld
pop
pop
add
shrl
mov
stos
dec
cmpb
or
call
and
and
xchg
mov
cmpb
add
push
adc
mov
cld
mov
cmpsl
out
mov
in
movsl
adc
shrb
cs
jp
jecxz
daa
fadds
out
jns
xchg
xchg
loop
es
cmc
lea
jp
adc
scas
sbb
jg
xor
push
mov
push
mov
test
popf
aaa
mov
in
xor
loopne
add
in
add
jb
cmp
mov
cmp
andb
test
jo
add
mov
int3
loope
lea
or
sub
add
sbb
and
lret
pop
mov
movsl
mov
sub
sbb
or
dec
push
push
gs
rclb
jecxz
and
test
adc
mov
je
adc
xchg
cmc
cmpb
nop
inc
or
mov
dec
rorb
pop
xlat
push
das
shll
push
dec
push
sub
jl
stos
pop
mov
jo
mov
shll
cli
adc
or
daa
sbb
in
imul
lahf
popl
xchg
les
dec
fiaddl
adc
pop
adc
popf
ror
dec
imul
mov
mov
mov
push
cmp
jge
insb
popa
mov
fisttpll
jl
into
movsb
xchg
dec
inc
add
xchg
mov
loope
lods
out
xor
inc
add
ret
imul
dec
int
add
push
loopne
lret
or
test
push
xchg
iret
in
lock
mov
loopne
add
sbb
mov
xor
les
mov
int3
std
mov
icebp
add
aad
adc
mov
aam
cmp
push
stos
jb
inc
sahf
jnp
iret
add
fisttps
subl
insl
sbb
push
and
pop
xchg
repz
sahf
nop
xchg
pushf
xchg
call
add
lea
mov
stos
fucom
and
adc
aas
sub
insb
dec
mov
out
outsb
popa
movsl
push
add
pop
push
adc
int
jg
mov
jle
enter
int3
sub
sbb
lds
xchg
stos
cmpsb
fiadds
ss
add
pop
les
insb
popa
je
cmpsb
and
xor
pop
loopne
aas
mov
jl
inc
enter
pop
test
jns
arpl
stos
adc
xor
and
lock
inc
mov
cmovo
iret
cli
js
dec
and
clc
cwtl
dec
mov
cmpsb
cwtl
or
xchg
popf
enter
mov
ljmp
dec
roll
rclb
mov
fs
cmp
or
and
shl
test
ret
dec
jno
add
mov
mov
jle
fdivl
mov
pushf
outsl
mov
add
out
adc
cmp
out
add
fdivrs
add
movsb
fdivrs
mov
or
das
push
ds
add
push
hlt
sbb
mov
mov
in
mov
mov
leave
test
loopne
lock
and
smsw
mov
pop
nop
jp
pusha
xor
pop
cld
xor
popa
hlt
mov
scas
push
sub
jl
push
sbb
les
or
ret
call
orl
dec
mov
push
push
test
mov
or
std
movsb
inc
cmp
inc
subb
out
jae
fidivs
or
jb
push
mov
ds
xor
mov
pop
xorl
cwtl
ja
xor
in
xchg
cmp
or
scas
dec
int3
add
sarl
subb
adc
sahf
fs
sbb
cmp
jmp
and
js
xchg
aad
test
adc
mov
push
mov
cmp
or
popf
scas
inc
inc
dec
sbb
xlat
jns
push
mov
ds
add
jnp
fdivrs
xor
add
pushf
cld
sbb
addr16
or
and
out
ja
add
jle
sub
rolb
shlb
pushf
mov
add
les
add
cmp
test
in
jo
mov
jbe
rorb
cmpsb
add
mov
add
dec
hlt
cs
dec
sub
faddl
dec
fsubrp
and
test
xchg
mov
inc
and
mov
mov
add
add
jno
xchg
and
sub
test
add
nop
mov
aam
push
cmc
add
or
into
lret
ret
pop
loope
pop
mov
adc
fsubs
jno
adc
inc
fcoml
or
cmp
jl
rorb
jnp
mov
shrl
clc
sarl
je
inc
cld
xor
cmc
xchg
push
add
sub
decl
jge
and
hlt
jecxz
cltd
cmp
loop
add
mov
sub
enter
jmp
pop
cmpsl
inc
mov
sbb
into
mov
iret
add
int3
fistpll
cs
push
mov
dec
and
nop
mov
hlt
insl
jg
cltd
mov
add
mov
sbb
jp
and
leave
les
rclb
jno
hlt
pusha
shrb
add
or
stos
push
push
add
mov
mov
outsl
xchg
pushf
mov
xor
mov
mov
or
inc
sub
inc
sub
jmp
and
sbb
cwtl
test
or
mov
pusha
fisttpll
lods
roll
pop
sar
add
xchg
push
ds
inc
in
cmp
cli
xchg
add
mov
insb
lahf
fdiv
clc
adc
adc
and
push
jmp
mov
sbbb
mov
xor
sahf
loopne
xor
inc
inc
mov
cmp
mov
call
sub
add
mov
sub
sbb
add
add
insl
jl
xchg
das
inc
adc
mov
mov
frstor
jno
fisttpl
movsb
dec
ds
xchg
test
fadd
xor
and
pusha
fiadds
pop
dec
add
xor
sub
subl
daa
xorb
cmp
roll
rol
sbb
imulb
inc
aad
xchg
sub
fldl
sbb
mov
iret
ja
add
mov
leave
sbb
lcall
inc
cmp
mov
or
sbb
or
xor
mov
sbb
add
push
loope
scas
insb
mov
mov
stos
xchg
pop
addr16
shr
rolb
mov
je
add
ds
vdivps
sub
pop
jp
inc
add
rcll
punpckhwd
xor
movb
leave
icebp
scas
add
ss
adc
cmpsl
hlt
pop
xor
xor
shrb
loopne
pop
das
xchg
fstps
in
daa
push
adc
mov
lods
mov
icebp
test
outsb
shl
jnp
sahf
out
inc
push
mov
mov
mov
add
clc
add
jmp
mov
pop
fsubrl
adc
test
in
or
dec
sbb
insb
test
cmp
cmp
pop
pop
adc
test
add
sbb
mov
cld
clc
add
xchg
js
push
push
push
jecxz
shrl
mov
push
sbb
cmp
mov
pop
and
sub
sub
cmp
dec
cld
pop
xlat
hlt
mov
test
bound
or
in
add
push
dec
or
pop
or
inc
inc
or
or
das
and
push
std
pop
add
adc
cmp
add
sbb
jns
fisttpl
sub
mov
cmp
movsl
ret
sub
clc
add
pop
cwtl
or
cmpsl
jnp
mov
add
push
mov
jbe
sbb
mov
or
add
in
test
pop
add
sbb
mov
push
lret
and
xor
cmpsb
roll
fstp
xchg
fldt
popa
test
adc
add
or
ret
cmovo
inc
push
call
mov
inc
dec
sbb
push
cltd
adc
add
mov
fadds
jge
test
mov
out
push
mov
test
dec
inc
adc
data16
es
rolb
mov
loopne
insb
pop
mov
lret
cmp
and
dec
inc
and
dec
arpl
fstps
subl
adc
xchg
push
sub
xchg
stc
fadds
lock
hlt
mov
icebp
in
adcb
or
scas
pushf
loop
add
xor
push
scas
push
in
or
imul
test
repz
popf
cmp
out
lea
inc
stos
jp
jns
addb
aam
sub
cmpsl
jl
scas
or
jo
xchg
push
adc
xchg
sub
mov
and
in
xchg
xchg
or
jecxz
pusha
inc
push
stos
or
cmp
clc
and
call
mov
cwtl
add
popa
add
pop
xor
inc
pop
xor
inc
fcomps
mov
xchg
adcb
or
inc
dec
rorb
push
xor
nop
dec
fldl
mov
icebp
arpl
add
cltd
dec
int
wbinvd
dec
cld
xor
inc
xchg
scas
xchg
xor
jg
xor
and
inc
adc
out
in
lret
add
add
ret
out
lea
mov
sbb
adc
xchg
ds
xor
or
nop
jl
pop
imul
out
shlb
cmpl
dec
les
push
push
icebp
push
fcomps
test
pop
in
xor
add
popa
add
and
xchg
xor
mov
pop
push
in
arpl
xchg
mov
int
and
and
lea
pop
push
incl
or
xchg
dec
dec
pop
fsub
mov
add
shll
sub
and
scas
xchg
xor
rol
jmp
int
jge
pop
push
ja
sbb
ja
rcll
xlat
cmovo
aam
sub
fmull
xchg
pop
popa
add
mov
or
pop
rcl
lock
call
xchg
pop
fstpt
lea
cltd
insb
or
xchg
adc
out
push
xchg
or
shrl
fsubs
or
ret
xor
andb
pop
push
pop
add
popf
jns
aas
or
inc
add
push
test
pop
and
jb
and
movsl
pop
cmp
hlt
daa
sbb
call
push
pop
mov
arpl
aam
call
cmc
shlb
pop
test
push
fsubrs
aas
ss
stos
mov
out
jge
add
call
nop
mov
xor
jo
push
pusha
and
in
faddl
lahf
add
pop
jns
insb
hlt
or
imul
fs
cmp
or
xchg
ror
sub
dec
sarl
jmp
xchg
add
shrl
jl
les
xchg
xor
sub
add
add
imul
ret
dec
cmp
stos
adc
leave
rolb
pop
xchg
push
dec
sbb
sub
cld
cmp
stos
xchg
sub
ja
lock
xchg
or
test
add
iret
or
rolb
xlat
pushw
or
inc
sub
xchg
add
jp
add
mov
jnp
or
in
arpl
loopne
xorl
stos
or
jne
mov
mov
jnp
jp
add
add
cmc
xlat
dec
and
or
push
adc
xor
cmpsl
xchg
ret
fs
or
test
sbb
scas
fcomip
outsb
add
imul
nop
sub
sbb
test
adc
cmp
push
push
dec
mov
xchg
out
mov
pop
mov
mov
shrb
pop
push
pop
les
mov
xor
xor
into
add
repnz
sub
inc
lea
scas
mov
in
dec
push
rclb
add
push
and
add
xor
xchg
cmp
cli
or
push
orps
xor
pop
rcrb
stos
add
pop
dec
loope
add
lods
sub
insb
les
add
fnclex
adc
dec
test
mov
add
or
add
adc
and
ja
test
in
add
jp
das
and
movsb
sbb
xor
fs
inc
rcrb
xor
addr16
pop
dec
fwait
inc
mov
cmpl
push
cmpb
mov
imul
mov
test
sarb
dec
mov
xchg
dec
loop
mov
sbb
pusha
xchg
sbb
or
cmp
cmp
sbbl
loopne
loop
inc
sub
dec
sbb
sub
loopne
cmpsb
add
add
dec
mov
sub
fidivs
pop
mov
push
mov
dec
adc
mov
aaa
push
xchg
ss
xor
or
jcxz
pop
and
mov
btr
xor
add
add
sbb
dec
insl
push
push
loope
or
dec
mov
push
lret
xlat
enter
lods
mov
mov
shll
int3
dec
add
in
addb
push
dec
add
push
dec
add
dec
