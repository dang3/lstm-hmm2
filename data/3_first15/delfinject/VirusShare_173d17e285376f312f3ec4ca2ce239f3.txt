sbb
add
sahf
ret
pop
dec
dec
nop
scas
les
mov
xchg
jae
cli
or
mov
sub
cmp
xchg
push
lret
ror
and
add
mov
fstps
xchg
and
stos
std
sbb
mov
addr16
in
xor
ja
xchg
pop
pop
dec
hlt
test
inc
hlt
je
mov
jbe
xor
lret
sub
sahf
leave
mov
scas
jne
mov
fisttps
pop
inc
sub
sub
scas
popa
pop
mov
xor
fwait
xchg
int3
sbb
daa
rolb
mov
sub
mov
inc
out
inc
mov
add
fcmovne
aas
add
adcb
cmp
pop
lret
mov
fwait
loop
mov
in
sti
jbe
mov
add
es
sbb
adc
movl
lock
xchg
jns
xchg
or
add
inc
mov
subb
or
shlb
inc
xchg
cmp
pushf
mov
inc
xor
fidivrl
xchg
sbb
outsb
cmp
sbbl
lea
inc
mov
jl
hlt
in
dec
icebp
and
xchg
outsl
xchg
ss
stos
push
out
and
mov
cmp
sub
xchg
pushf
mov
rorb
pop
sbb
lods
push
jne
ret
push
push
fidivl
add
mov
jnp
enter
dec
ret
lcall
mov
or
dec
cld
gs
movsl
bound
add
push
andl
mov
mov
and
ja
in
loop
dec
lock
sbb
or
stc
das
pushf
xor
pushw
mov
ret
push
cmc
sub
notb
out
ds
fistps
or
shrb
mov
cli
push
sbb
cltd
outsb
insl
arpl
cmp
and
push
sub
movsl
add
lret
xor
inc
iret
mov
lahf
fsubrs
or
fimull
push
das
fdivl
scas
xlat
mov
push
das
inc
cmpsb
hlt
xorb
mov
dec
sahf
iret
insb
sub
icebp
in
cmp
pop
pop
mov
xor
inc
call
movsl
sbb
scas
inc
mov
push
mov
xchg
popa
cmpsb
xchg
mov
sarl
sbb
cs
or
popa
cwtl
and
fldenv
and
xor
sbb
stos
arpl
mov
xchg
lods
adc
pop
orb
inc
pusha
or
push
sbb
cwtl
pop
addb
pop
arpl
jno
inc
clc
dec
mov
xchg
arpl
lods
add
sbb
adc
jge
daa
mov
xchg
fwait
mov
dec
mov
int3
xchg
and
xor
aam
sub
sbb
pop
daa
xor
mov
dec
jecxz
cld
into
fcmovnb
mov
push
xor
insb
mov
clc
dec
loopne
push
into
leave
in
in
sbb
mov
arpl
repnz
xchg
jmp
int
movsb
lods
popa
and
mov
sbb
push
jg
mov
test
cmc
mov
pop
lea
rorl
adc
pop
pusha
xchg
bound
insl
inc
sub
mov
adc
lret
cmp
push
dec
ds
aad
icebp
scas
xlat
and
and
push
jb
ss
popf
add
dec
and
popf
roll
subl
push
mov
outsb
shl
and
jp
push
dec
jmp
inc
movl
into
cmp
xor
rolb
rep
or
or
push
insb
aas
jae
iret
xor
jae
imul
lea
rcr
cmp
push
les
shll
sbb
jmp
mov
popw
test
outsb
ljmp
fld
sbb
adc
hlt
icebp
pop
or
pop
mov
icebp
or
lret
push
popa
cmp
lea
adc
pop
mov
cltd
pop
cmp
dec
dec
cli
jne
inc
jo
int3
subb
pop
mov
stos
cmp
out
test
xchg
xorps
mov
inc
or
das
pop
mov
add
and
sti
stc
insl
add
adc
dec
nop
xchg
pop
pop
push
inc
sbb
dec
fdivl
mov
push
add
lds
aam
jmp
pop
inc
ret
imul
mov
dec
repnz
call
fdivs
bound
jb
adc
sub
negb
imul
stos
imul
bound
dec
sub
test
in
pop
scas
xor
jb
insl
mov
orl
dec
test
xor
mov
out
xchg
xchg
sub
xor
mov
inc
dec
insl
imul
push
dec
nop
inc
push
jle
test
push
xor
in
adc
shl
xchg
int
test
mov
lods
ds
cli
cmp
in
out
push
jo
lods
mov
aam
pushf
add
inc
lods
sbb
stc
adc
lods
iret
pop
sub
rcrl
int3
sarl
call
fidivl
repz
and
sub
mov
xorb
movsb
dec
sub
loope
pop
add
into
inc
fld
movsl
pop
mov
cmp
lret
lods
out
in
mov
lcall
movb
iret
jbe
push
xchg
call
mov
and
dec
push
adc
mov
pop
xor
int
or
push
mov
adc
stc
fidivrs
imul
pop
loop
lock
dec
mov
fmull
sub
sub
js
fnstsw
sbb
sbb
xor
in
fidivrl
jmp
shlb
sub
jge
pop
sub
loopne
and
mov
mov
rol
outsb
mov
ds
mov
out
sbb
dec
jg
pop
sarb
in
and
jg
hlt
lods
dec
mov
fbstp
push
dec
mov
add
mov
lss
pop
aas
out
cs
sub
aad
push
mov
lahf
out
xchg
and
mov
and
cwtl
scas
mov
scas
dec
cmc
les
xor
cmp
lea
mov
add
pop
adc
cwtl
loop
sbb
ss
jo
rcrb
pop
inc
dec
push
push
cli
jecxz
mov
mov
out
lcall
in
lahf
insb
cmp
in
xchg
mov
pop
pop
fistpll
mov
out
jp
scas
xchg
lcall
outsl
mov
mov
repnz
sbb
cmp
stc
sub
sub
shrb
in
movsb
jl
ret
rcrb
fisttps
inc
or
mov
aaa
push
jo
lock
fsts
mov
sahf
dec
pop
sub
add
sbb
lcall
divb
mov
scas
sub
out
sbb
push
stc
sbb
test
mov
push
and
movsl
sbb
cmp
shlb
inc
fdivrs
jno
jae
jo
sbb
or
mov
dec
int
sbb
or
cmp
jecxz
lods
inc
insb
mov
adc
cmp
fsubl
fsubrp
outsb
call
dec
fldln2
loope
mov
cli
sbb
jle
in
xor
dec
jle
ljmp
cmp
lods
dec
jl
jl
mov
and
jmp
das
test
shrl
xor
inc
jb
stos
leave
lock
inc
icebp
aaa
lods
mov
jl
insb
int
xor
pop
jnp
xor
jl
mov
les
test
js
cmp
push
push
and
push
jp
sarl
sub
xchg
add
cmp
div
dec
scas
ret
in
cmp
std
rol
les
stc
add
adcb
jp
pop
les
push
les
mov
les
iret
mov
ret
mov
inc
fldt
rorl
movsb
add
sbb
mov
lcall
inc
lret
stos
push
movsl
xchg
xchg
rcrl
das
aam
int
push
push
aaa
fbld
lods
lcall
std
rcll
lock
pop
push
stc
es
ret
xchg
mov
push
adc
dec
inc
insl
mov
arpl
jp
mov
rorb
push
ljmp
lret
int
xchg
es
pop
pop
ficomps
cli
push
js
in
mov
sbb
mov
fs
cli
pushf
cmp
mov
jno
xor
movsb
test
adc
sub
mov
mov
push
add
mov
add
aam
cmp
xchg
rol
into
pop
and
pop
cmp
jge
lea
shll
jne
imul
push
mov
and
xor
pop
ja
pop
data16
adc
sarb
mov
aad
adc
test
mov
sub
cltd
movups
lods
outsb
mov
pushf
aas
mov
dec
pop
outsb
aam
cmp
loopne
cs
lods
ret
or
pxor
jmp
mov
into
popa
sarb
ljmp
add
cwtl
test
mov
cmp
xchg
push
enter
stos
xchg
jo
pop
sti
adc
push
scas
add
push
aaa
ficompl
mov
stos
jb
dec
push
notb
ja
ror
mov
and
mov
int3
data16
sbb
dec
or
cmp
cmp
outsb
repz
cmc
loop
fwait
imul
test
mov
or
xchg
push
and
sbb
mov
pop
push
fdivrl
push
and
ret
dec
xchg
adc
not
ret
popa
hlt
mov
ja
push
pop
inc
push
in
xor
xor
inc
insb
push
push
out
xchg
xor
sahf
mov
inc
clc
cwtl
pop
lea
inc
loop
sub
jbe
int3
test
pushf
pop
or
aas
je
out
clc
leave
push
mov
mov
lods
shll
mov
push
mov
fildll
and
fwait
bound
add
or
imul
xchg
les
testl
aad
into
dec
adc
pusha
jae
push
aas
fstpl
sahf
xor
adc
int
out
call
or
rcrl
add
fistpl
mov
test
or
pop
lods
push
xchg
aad
loope
fimuls
invd
aaa
mov
insl
jle
jo
pusha
or
pushf
lea
xor
inc
loopne
mov
adc
pop
popf
mov
test
popf
call
sbb
notb
xchg
mov
sub
lods
mov
and
bound
imul
stos
cltd
sti
jno
negb
dec
cmpb
xlat
xor
sbb
mov
sub
jnp
mov
fidivrl
clc
mov
aas
mov
xchg
sbb
push
cmp
in
call
fmull
rclb
push
fisubl
jne
mov
inc
lock
jno
lcall
jmp
mov
cmc
inc
mov
int3
jge
inc
mov
in
pop
mov
mov
iret
sub
and
shl
addb
dec
mov
popf
insl
pop
dec
jne
cmp
pop
lret
or
cmp
ja
jns
out
out
or
dec
pop
fwait
stos
xchg
pop
ljmp
outsl
dec
gs
daa
iret
pop
xchg
sbbb
fcompl
pop
adc
mov
lds
inc
ds
ret
loopne
mov
push
xchg
data16
push
gs
loope
loope
xor
pop
sti
mov
pop
js
mov
idivb
ljmp
xchg
cmc
call
cmpsl
imul
inc
enter
push
mov
xor
cmp
fcompl
frstor
or
dec
out
mov
arpl
fwait
pop
add
pop
cli
dec
repz
das
inc
lods
std
and
mov
xlat
cltd
or
cs
xchg
sub
inc
pop
cmpsl
pop
lret
inc
bound
mov
sbb
fistpl
imul
outsl
jbe
jmp
mov
es
inc
fldt
or
aas
lret
or
add
sbb
in
mov
adc
aas
mov
adc
jl
sbb
or
mov
cltd
or
js
jo
cld
movsb
test
lret
mov
fiadds
fnstsw
clc
push
lods
mov
lods
xchg
pop
adc
dec
and
push
push
cmp
in
cltd
mov
loope
int
xlat
push
mov
jbe
pop
xor
movb
mov
push
test
or
test
fisttpll
cwtl
sub
loope
xor
cmp
pop
jl
incb
ja
insb
cmpsb
mov
lea
jbe
and
fadds
lds
stos
imul
lret
cmpsb
jbe
mov
ficomps
xor
insl
lods
hlt
cmp
lock
lahf
fwait
push
inc
cmp
sub
dec
push
dec
lods
mov
dec
mov
flds
mov
mov
inc
insb
xor
sbb
xchg
dec
cmpsl
or
test
in
pushf
adc
test
or
clc
inc
hlt
push
cmp
jp
stc
in
xchg
repnz
cmp
ret
mov
lret
clc
les
jge
inc
scas
xor
fwait
push
call
lret
jmp
sbb
dec
fiadds
sub
jp
popa
pop
xchg
jl
ja
jbe
mov
in
imul
pop
cltd
addr16
enter
xor
rorl
out
pop
mov
in
jp
add
lods
push
jo
jle
sub
add
sub
or
xor
stos
fisubrl
das
adc
pop
fldenv
imul
shlb
dec
mov
cmp
loope
push
loop
in
fdivp
loopne
sub
inc
xchg
lods
mull
xchg
lcall
jg
test
ret
adc
fldenv
inc
xor
fdivrl
and
test
out
es
and
push
jnp
sarb
xchg
xchg
icebp
into
dec
jne
test
xchg
or
popf
xlat
adcb
xchg
flds
lea
fstps
loop
ror
rcr
out
mov
inc
mov
fiaddl
and
test
ja
mov
pop
mov
je
xchg
outsb
test
out
dec
sbb
jns
int3
enter
out
out
adc
jne
nop
jb
lods
or
mov
outsb
xlat
xor
and
sub
pushl
out
cmp
std
das
mov
jle
inc
mov
mov
les
xor
cmp
xchg
xchg
cmp
sub
xor
sub
aas
lods
mov
pop
notb
leave
shr
cltd
leave
dec
cmpsb
out
leave
ret
push
mov
mov
outsl
lret
sub
in
xchg
andb
in
enter
dec
jnp
insl
ds
imul
cld
cs
loope
hlt
or
pop
pop
cmpsl
add
mov
and
xchg
sub
mov
mov
js
cwtl
imul
cmpsb
arpl
loop
faddl
add
push
xor
cmc
pushf
dec
lret
jp
inc
mov
add
sub
outsb
xchg
sub
test
leave
jg
loopne
lcall
cmp
out
popf
lea
in
bound
lcall
push
jecxz
dec
cli
lock
mov
xchg
out
jae
jns
sub
cli
add
pushf
jg
cmc
pop
lea
rcll
andl
mov
pmaddwd
cmc
push
mov
mov
popf
aaa
add
pop
mov
sbb
test
push
dec
outsb
mov
loopne
fistpl
fs
pop
pushl
dec
mov
stos
out
outsl
jl
in
lret
cs
loope
cmp
fcompl
sar
push
sahf
inc
cmc
dec
jo
add
js
pop
pop
fs
stos
shl
outsl
and
hlt
clc
inc
outsl
pop
hlt
xor
mov
stc
cmp
mov
xchg
pop
mov
mov
and
bound
outsl
inc
jg
fldt
fs
add
pop
xchg
pop
push
cmp
adc
cmpsb
pop
lods
pop
fcmovne
mov
or
mov
xchg
dec
mov
loop
adc
inc
push
inc
xlat
scas
mov
sub
rep
jecxz
xor
mov
cwtl
mov
lock
rorl
pop
jg
cmpsl
scas
out
push
enter
cwtl
bound
adc
repnz
dec
test
sbb
cli
popa
jp
sbb
out
and
lcall
and
test
je
dec
fwait
gs
pop
jne
imul
cmc
aas
mov
mov
adc
repnz
dec
and
sar
add
popa
mov
lds
mov
pop
xor
lods
inc
daa
mov
movsl
fistpl
cmpsl
inc
adc
pop
push
xor
adc
xchg
fildll
xchg
sub
test
ror
loop
stc
jno
mov
mov
rcl
aad
sbb
jl
pop
mov
jnp
mov
mov
or
repz
push
cs
je
push
lahf
inc
mov
or
mov
add
push
adc
cmp
push
imul
out
icebp
and
out
outsl
mov
adc
or
inc
sub
cmpb
inc
cmp
push
jmp
loope
mov
sbb
mov
jnp
insb
in
ljmp
or
fildl
lcall
and
test
hlt
push
xor
loop
sahf
adc
out
repz
pusha
es
mov
xchg
call
sbb
xor
mov
cmp
repnz
push
push
pop
ja
push
adc
je
loop
push
in
mov
pop
xchg
shll
cmp
popa
pop
push
pop
stos
out
mov
int
push
ja
into
sarb
pop
popa
pop
les
sub
dec
mov
in
fucomi
push
jmp
lods
bswap
lea
into
jbe
push
jno
leave
lds
dec
es
adc
sub
jae
movb
movsl
test
jns
arpl
pop
clc
push
sub
pop
roll
cmp
ljmp
xor
jmp
shll
push
cmp
add
push
lcall
xchg
mov
jecxz
jae
je
xchg
lods
or
push
mov
mov
push
jne
fidivs
dec
sar
dec
or
cwtl
into
mov
jae
jns
cmpsb
sbb
call
stos
dec
js
dec
pop
shr
jmp
jecxz
inc
sub
nop
inc
push
flds
stos
sarl
movsb
push
xchg
or
outsb
pop
inc
test
fisttpll
pop
cmp
mov
insb
mov
mov
sub
ret
xchg
jnp
inc
add
leave
addr16
lahf
cwtl
xor
xchg
or
push
cmc
mov
or
jb
push
outsb
xchg
xchg
aad
roll
xchg
sub
filds
or
and
out
adc
loope
daa
mov
pop
arpl
jl
push
ja
je
iret
insl
mov
sbb
out
or
xor
add
inc
dec
repnz
inc
dec
mov
scas
mull
xchg
mov
or
scas
jo
jge
push
jle
ret
mov
pop
pop
daa
pop
cmp
int
pop
xchg
outsl
fmull
in
cmp
fcompl
in
jo
pop
add
mov
jnp
lds
gs
xor
testb
xchg
inc
mov
cwtl
push
nop
cltd
pop
scas
push
or
fisubrs
lret
inc
mov
andl
pop
and
sbb
call
fwait
push
repz
jle
imul
dec
pushf
mov
idivl
movsb
mov
or
mov
adc
or
mov
push
nop
pop
mov
icebp
xor
testb
pushf
pushf
xchg
xor
push
ja
add
sub
lcall
sub
inc
cmp
in
sbb
fadds
fbstp
ret
mov
lahf
bound
sub
arpl
lock
ret
and
xchg
fmul
fsub
fs
gs
inc
push
idivl
push
lret
cli
add
out
add
push
cmp
inc
mov
xchg
add
jp
movsl
jno
mov
lods
cmp
test
xchg
bound
cs
jmp
inc
xor
and
insl
repz
push
in
pop
movsb
push
pop
xchg
mov
pushf
or
inc
movsl
movsl
pop
mov
inc
mov
imul
lods
pop
inc
inc
xor
add
sub
sub
fistpll
in
push
pop
insb
jp
in
mov
xchg
rcl
leave
dec
pushf
pop
imul
xor
jmp
adc
cmp
pop
cmp
stos
add
and
push
pop
cmp
push
dec
je
jecxz
xor
cld
pop
mov
push
in
sub
push
lcall
adc
imul
cmp
pop
or
pop
imul
imulb
push
xor
scas
movsb
and
ja
push
in
and
mov
push
call
aaa
mov
lods
ss
xchg
add
jecxz
xchg
insl
imul
aas
mov
lcall
aad
inc
dec
daa
xor
cmpsl
push
push
cmpsl
scas
das
jae
add
mov
xchg
push
xchg
outsb
inc
add
cld
out
dec
xor
push
lcall
push
out
xor
mov
sub
lock
push
xor
pushf
data16
ret
jle
and
loope
mov
xchg
and
push
inc
pop
jb
frstor
fs
gs
mov
fcmove
aad
jne
mov
mov
test
mov
xorl
cmp
std
mov
xor
jae
ljmp
add
sbb
pop
or
dec
popa
mov
push
std
push
icebp
dec
sbb
mov
gs
sbb
pop
jb
imul
dec
mov
push
pusha
sbb
sbb
dec
mov
jmp
into
adc
dec
rep
imul
cmp
fcoms
push
and
and
push
into
mov
sub
out
push
push
aaa
xchg
dec
pop
dec
jp
push
fs
js
faddl
push
in
mov
xchg
popf
push
daa
jp
xchg
jne
xchg
gs
inc
inc
and
js
add
pop
pop
sub
imulb
shlb
popf
sub
bswap
cmp
push
xchg
sbb
lret
lcall
adc
jne
imul
je
pop
add
je
pop
push
fwait
jns
insl
insl
call
testb
jnp
hlt
js
adc
rclb
je
cmp
mov
fisttps
xor
aad
xlat
jno
or
lret
pop
xor
fbstp
out
mov
movsl
lgs
pop
xchg
out
mov
and
adc
mov
pop
out
sub
pop
fidivrs
sbb
pushf
and
push
jl
loopne
pushl
pushf
push
xor
jp
push
outsl
add
negb
pop
adc
sti
cmpsl
mov
fstp
sbb
loop
arpl
push
andb
fistps
mov
cmp
scas
push
adc
ret
leave
mov
mov
in
lods
and
imul
mov
and
jne
pop
loop
or
stos
fwait
or
outsb
inc
stos
data16
inc
sbb
aaa
mov
sbb
loope
or
mov
inc
rol
mov
dec
xor
sub
cmp
addr16
mov
fs
in
adc
lods
sbbl
push
in
pop
adc
jb
daa
mov
inc
inc
sub
pop
testb
and
popa
mov
rorl
mov
mov
xor
push
stos
lods
test
push
cmpsl
insl
stos
mov
mov
push
mov
pop
mov
inc
mov
and
xchg
adc
or
sbb
cld
addps
icebp
xchg
add
fiadds
mov
adc
pop
sub
pop
clc
fistps
cld
sub
push
scas
inc
scas
int3
jmp
and
add
mov
sysenter
and
push
cmp
roll
movsb
repz
sbb
or
fdivrl
sbb
cmp
movsl
leave
mov
pop
xor
mov
mov
popa
cmp
mov
inc
jl
sbb
daa
mov
ret
xchg
push
out
imul
mov
push
jmp
jl
negb
mov
shl
mov
adc
cmpsl
outsl
int3
dec
movsb
sahf
jmp
lock
pop
mov
pop
inc
call
ds
inc
sti
enter
outsl
lods
roll
xor
xchg
popa
mov
xor
push
pop
lahf
decb
mov
and
rcrb
mov
popa
das
sbb
ja
push
add
cmp
aam
xchg
add
test
push
subb
test
fldl
imul
popf
xchg
outsl
cmp
push
out
cmp
test
adc
sub
mov
jae
xchg
js
jns
mov
xchg
and
push
imul
jle
add
sub
jge
sbb
push
cmp
xchg
gs
adc
scas
dec
push
ss
orl
sub
enter
and
cmpsb
and
jecxz
aad
test
enter
cmp
aad
sahf
loopne
pop
rcr
sub
cwtl
les
das
pop
mov
push
cmc
sbb
lea
mov
mov
sbb
stos
xor
scas
push
xchg
mov
xchg
jmp
mov
mov
jbe
movsb
push
stos
pop
cltd
mov
imul
mov
adc
sarl
cmp
inc
or
lods
shl
loopne
in
or
push
inc
into
out
xchg
or
cli
cltd
in
adc
popl
loop
inc
dec
push
dec
fmulp
push
test
ret
lret
cmpsl
jp
aas
and
popf
jne
jns
les
xchg
cmc
test
pop
lahf
or
push
clc
ret
sub
or
aad
into
mov
mov
lea
mov
jbe
gs
inc
sbb
mov
mov
push
arpl
cld
dec
xor
or
or
add
push
mulb
mov
stos
dec
fcompp
pcmpeqw
jo
mov
cmc
ds
lds
cmpsb
das
pop
mov
sub
arpl
adc
aas
gs
hlt
cwtl
xchg
test
pop
test
cwtl
repz
or
pop
mov
jbe
sti
hlt
adc
jb
jmp
jp
dec
jmp
imul
add
inc
fnop
cltd
jle
arpl
testb
mov
jge
and
push
pushf
jmp
jo
xchg
mov
cmp
in
sbb
xchg
popa
sahf
ss
out
cmpsl
cld
test
jo
mov
xor
push
sti
je
data16
xor
aas
jns
pusha
cltd
or
add
push
push
fildll
add
shl
adc
rolb
mov
or
pop
test
jp
or
test
mov
js
ficompl
fldl
push
outsb
call
mov
scas
xor
frstor
lds
xor
sbb
and
movsb
adc
into
ss
movzbl
inc
std
sbb
mov
pop
inc
scas
dec
xor
cmpsb
xlat
or
push
push
mov
fs
js
mov
or
sbb
movsl
std
push
inc
cli
or
mov
andb
lods
mov
jbe
ss
loopne
je
mov
lahf
xlat
or
pop
or
mov
jo,pn
ss
movsb
mov
fildll
adc
das
fcmovnb
fistl
push
pop
outsb
ljmp
push
inc
push
fisubl
pop
imul
push
mov
loopne
xor
pop
ret
mov
cmpl
mov
loopne
or
mov
iret
stos
inc
outsw
pusha
out
push
jge
or
pop
cmp
stc
cmp
or
sar
jge
mov
or
pop
fbstp
mov
xor
loop
cmp
je
mov
push
lods
jb,pt
lds
xor
outsb
lret
cltd
arpl
rcll
jmp
add
or
or
push
or
mov
negl
and
and
movsl
inc
cmp
daa
std
mov
mov
add
loop
dec
outsl
jae
pop
dec
push
ja
in
hlt
outsb
sbb
push
mov
rorb
and
inc
mov
insb
push
mov
push
push
inc
ja
sub
and
xchg
add
scas
testb
pop
cmpb
cwtl
jl
xchg
aaa
jne
int
push
mov
std
das
loopne
xor
adc
mov
loop
jb
dec
int3
inc
test
in
loopne
and
cmc
scas
add
mov
xchg
jl
add
fcmovu
dec
xlat
sub
push
fsts
lock
clc
sti
xchg
in
mov
orl
rcr
or
xor
adc
lahf
cltd
clc
jno
in
pop
les
mov
xchg
dec
adc
clc
imul
shll
mov
pusha
pop
sbb
sub
xlat
mov
mov
jns
popf
dec
push
add
xlat
scas
mov
inc
inc
sub
stos
ret
sub
sub
jbe
test
xchg
cmp
mov
aam
incb
popa
jbe
arpl
push
adc
lret
xor
call
mov
jbe
xchg
ret
clc
xor
xchg
jo
arpl
or
lds
dec
nop
lcall
sbb
insl
mov
nop
cmp
mov
jmp
scas
jae
lret
dec
in
jmp
sub
mov
test
stc
lods
lcall
sbb
inc
push
fwait
xchg
jl
lahf
in
loope
xor
ja
jge
mov
adc
sbb
loopne
int3
xor
push
cmp
push
lock
lea
inc
inc
cmpl
push
je
jp
aaa
and
inc
mov
scas
das
xchg
inc
loop
jb
push
mov
or
imul
call
fidivrl
movsb
repnz
or
push
sub
jle
sbb
adc
shrl
loope
ds
ja
scas
ljmp
dec
xchg
cmp
push
dec
lods
push
scas
mov
lea
mov
out
inc
push
jb
push
mov
in
push
fistpl
and
pop
popf
dec
sbb
cli
sbb
nop
ja
mov
jno
dec
lods
stc
jae
push
xchg
inc
and
movsb
adc
adc
jns
fdivrp
push
sub
lret
push
icebp
sbb
push
and
xor
cli
stos
icebp
subl
je
or
mov
push
jne
adc
cmp
inc
in
jp
xchg
cmpsb
imul
cmp
pop
pop
inc
mov
mov
mov
or
test
gs
sbb
inc
mov
fmull
cmp
into
mov
ss
dec
xchg
lret
test
ret
fisttpl
sub
push
sbb
test
lds
lds
fistpll
push
jb
push
pushf
and
pusha
scas
xor
push
lds
loop
sahf
movsb
lea
dec
pop
insl
inc
aaa
imul
sbb
pop
add
inc
jnp
dec
lcall
inc
sbb
lods
cmpsb
sub
xor
jg
sahf
int3
inc
sub
sub
and
fstpt
imul
sub
inc
cltd
push
mov
mov
jnp
xor
cmp
aad
stc
jo
popf
cld
mov
rorb
loope
aam
sub
roll
push
sub
push
and
and
add
fnsave
jae
insb
out
jge
aas
push
pop
add
iret
pop
mov
mov
mov
movsl
pop
int
mov
cltd
mov
push
movsl
shlb
rclb
bound
mov
push
inc
enter
mov
cmp
movsl
roll
jp
sbbl
mov
jmp
pop
xchg
shrb
pop
lret
pop
in
mov
mov
inc
push
lret
scas
xchg
push
test
push
hlt
pop
xchg
add
lret
shl
out
hlt
mov
ljmp
leave
jmp
aam
sub
call
add
test
mov
mov
stos
mov
pop
ljmp
push
xchg
cmpsl
or
shlb
ds
or
push
mov
int
daa
ficompl
pop
mov
ret
jne
push
xchg
adc
repz
cmpsb
aam
pop
out
stos
push
sub
sub
lret
mov
stc
inc
xchg
pusha
xor
and
jnp
test
jae
cmp
mov
xor
sub
pop
mov
xchg
into
jns
out
mov
je
stos
js
in
xchg
fcom
jns
sarb
sub
mov
test
xchg
aaa
adc
xchg
xor
push
sub
add
and
daa
nop
cmp
mov
aad
in
adc
sbb
mov
mov
add
lock
push
fidivrs
pop
mov
mov
dec
cmpsl
mov
sbb
mov
cmc
shl
in
jno
adc
sbb
ds
dec
push
xor
rolb
pop
mov
cmp
testb
in
mov
mov
jae
mov
jle
sbb
mov
into
mov
aam
jmp
push
pop
inc
lahf
cmp
lcall
mov
aam
cmp
xchg
imul
xor
sub
pop
cmp
dec
popa
jbe
push
inc
pop
and
xor
pop
out
hlt
outsl
aam
les
mov
mov
jle
mov
jle
mov
cs
nop
jl
push
lahf
mov
fwait
pop
xor
add
iret
aam
mov
mov
lret
jl
es
inc
ds
lods
out
xor
mov
fimuls
in
adc
sbb
lds
sub
and
add
inc
aad
lret
mov
dec
out
fistps
call
ljmp
arpl
mov
push
or
dec
mov
push
sbb
sti
cmp
clc
orl
jne
hlt
pop
dec
or
cmp
loope
inc
adc
in
icebp
in
xchg
addb
sbb
pop
sub
daa
adc
inc
xor
fs
xchg
inc
fs
xor
mov
xchg
loop
adc
sbb
scas
inc
xchg
fwait
shl
pop
out
shrb
in
dec
mov
js
mov
jne
mov
shr
add
xlat
or
dec
mov
movsl
pop
stos
sahf
imul
and
fsubrs
dec
xchg
lods
shrl
pushaw
jo
call
fpatan
ss
jno
dec
ds
fsubs
popf
enter
sub
sbb
in
pusha
push
scas
and
outsb
das
movsb
push
dec
addr16
or
inc
in
iret
aas
js
daa
aaa
jns
adc
sbbb
lds
mov
fcoml
push
push
jns
jl,pn
push
adc
ret
into
xor
adc
stos
xchg
ljmp
mov
sbb
stos
and
mov
mov
iret
shlb
out
stc
idivl
hlt
adc
jnp
out
insl
es
jno
inc
sarl
pushf
cmp
shlb
mov
mov
add
fs
ret
pop
stc
xchg
loop
xchg
aam
fdivrs
add
jns
ja
mov
pop
nop
lds
or
rclb
shlb
outsl
pop
push
inc
loopne
mov
mov
push
movl
int
mul
out
adc
and
gs
mov
aad
ss
mov
pop
push
jecxz
in
pop
faddp
add
pop
fdivl
insl
push
jp
xchg
adc
loop
or
movsb
shrb
add
loopne
lahf
hlt
inc
mov
push
xlat
cmpl
sub
into
outsl
push
sbb
or
in
xor
sbb
inc
jl
int3
jecxz
fimuls
mov
movsb
subb
mov
add
push
lock
hlt
push
sub
mov
fwait
popf
or
cmp
pop
sarb
dec
pop
mov
shlb
icebp
out
data16
popa
mov
dec
pop
repz
lock
cmpsb
dec
sbb
push
sahf
sbb
out
outsl
xlat
or
ret
hlt
lods
mov
hlt
cmp
fdivrs
out
sar
lret
push
xchg
dec
cltd
mov
mov
xor
fwait
add
pop
addps
pushf
add
or
loopne
cmc
xchg
xor
and
dec
gs
sub
dec
rcrl
or
xchg
dec
jno
pop
sbb
ret
or
mov
adc
scas
mov
lock
fwait
mov
test
xor
cmp
sub
je
pop
loopne
cmpsb
xor
push
stos
loope
in
mov
or
insl
inc
push
push
dec
and
lock
and
stos
sub
ret
movsb
loop
aas
mov
inc
inc
fildl
inc
stos
cltd
push
or
dec
pop
xchg
sub
setg
sti
cmp
mov
xchg
and
out
xchg
je
jl
fldt
sub
cs
xchg
add
rorl
out
pop
inc
mov
loop
and
cmp
push
call
adc
sbb
ret
les
repnz
mov
mov
int
or
push
daa
mov
add
xor
xor
sahf
and
pop
mov
mov
pop
push
pop
dec
sti
mov
and
into
cmpl
jmp
and
lret
call
or
mov
jp
dec
cli
add
push
lcall
mov
inc
inc
push
pop
sbb
xor
push
outsb
pop
jl
iret
jo
cld
int
pushf
leave
sbb
in
leave
xchg
in
push
mov
cmp
adc
jns
push
in
adc
cli
repnz
and
inc
in
dec
mov
mov
push
xlat
into
xorl
imul
xchg
push
sbb
imul
xor
subb
testl
sbb
inc
loope
jbe
cltd
pushf
int
mov
arpl
lock
inc
sbb
in
icebp
and
mov
dec
dec
jns
in
dec
fldt
cmp
xchg
add
add
dec
mov
push
mov
scas
stos
xchg
je
mov
sbb
dec
leave
jg
sbb
aam
rorl
mov
movsb
cmpsl
movsb
fs
hlt
push
dec
xchg
push
mov
lcall
jb
push
in
insb
mov
scas
inc
lea
adc
in
mov
es
fnsave
push
xor
bound
adc
push
cmp
push
cmpsb
stos
push
out
mov
cmp
mov
adcb
mov
fcomps
popf
lahf
cmp
jb
sub
pop
xor
ss
sub
jb
vunpckhpd
jnp
into
and
aam
pop
mov
sbb
push
push
and
fnstcw
es
mov
and
jnp
mov
fiadds
sbbl
add
or
xor
and
sbb
pop
jecxz
mov
mov
pop
mov
popa
fsts
mov
cwtl
movsl
int
loope
insl
mov
stc
int
imul
ja
and
and
lret
cmp
push
mov
mov
cli
pop
stos
into
sub
push
mov
xchg
testl
cmpsl
rcrl
sub
dec
icebp
aam
jmp
shrb
cmpsb
lret
test
mov
fistpl
repnz
ja
jmp
sub
xchg
and
call
xor
xchg
scas
rcrb
mov
cmpsl
leave
xor
out
mov
loopne
testb
scas
rcrb
outsl
mov
orb
inc
push
and
pusha
add
rorb
sbb
inc
sub
mov
or
inc
mov
xor
sub
jns
in
leave
and
imul
ret
or
add
xor
lahf
clc
cwtl
push
andb
mov
fisubl
or
lods
lret
jg
xor
daa
push
aas
xchg
push
out
sbb
or
rol
in
pop
scas
push
ficoml
sbb
mov
or
mov
shl
in
and
scas
jne
jg
pop
outsl
insb
out
int3
mov
dec
mov
mov
mov
pop
cwtl
push
out
adc
dec
mov
pop
push
notb
inc
sub
push
cmp
cmpsb
addr16
cli
jg
insl
inc
arpl
js
push
xor
xchg
push
jl
call
jle
xchg
xor
inc
call
xchg
pop
mov
inc
not
cs
outsl
ret
push
adc
dec
push
ds
jnp
xor
nop
addl
dec
fldenv
add
int
inc
xor
jo
pop
stos
lcall
sbb
adc
xchg
loope
mulb
iret
jmp
dec
daa
imulb
icebp
ret
cmp
mov
int
loope
in
test
pop
sbb
lahf
jmp
popf
cld
pop
xor
mov
cmpsb
sti
leave
in
stc
icebp
sub
pop
in
enter
cmp
mov
iret
sbb
cmpsl
dec
clc
xchg
loopne
flds
adc
andl
mov
mov
xor
cld
xlat
push
mov
lods
cmpsl
xchg
pop
imul
xchg
popa
jge
in
inc
andl
mov
cld
mov
adc
push
pop
movsl
movsl
rol
mov
cmp
dec
out
adc
xchg
out
xchg
jecxz
stos
mov
push
jo
cmp
xchg
repz
xor
rcrl
cli
xchg
pop
inc
insl
adc
lret
js
jge
inc
js
div
sub
pop
shll
aam
aam
pop
xchg
mov
data16
fstps
stos
inc
mov
jae
imul
xor
ljmp
mov
cmp
inc
mov
xor
test
addb
pop
bnd
cmpsb
ds
xchg
ljmp
mov
add
inc
pop
divb
pop
cltd
ss
and
push
or
adc
fstpt
mov
int3
shrb
std
sub
js
xchg
pop
ds
push
cmp
jne
mov
test
call
aas
sti
push
bound
jo
addl
icebp
mov
scas
mov
int
or
das
jae
sbbl
cmp
loop
popf
call
loope
in
loope
gs
and
mov
out
push
andl
aaa
dec
mov
sbb
popa
or
inc
xchg
sub
add
cmp
or
pop
xor
test
mov
mov
lret
shrl
sub
sbb
div
pop
imul
mul
jb
mov
fldcw
push
mov
cmc
xor
fnstcw
addb
repz
push
dec
dec
add
push
mov
inc
scas
lods
in
xchg
adc
js
mov
aad
insb
aas
add
fnstsw
mov
xchg
and
call
xlat
xchg
fisttpll
lds
inc
insb
movsl
fdiv
out
movsl
mov
sbb
test
fcomps
push
iret
pop
xchg
jnp
inc
fwait
adc
mov
es
mov
add
fsubrl
cmc
pop
movsl
mov
push
mov
leave
dec
test
lds
xchg
mov
ret
pop
xor
inc
aas
aam
mov
sub
add
cmp
loop
test
mov
push
movsbl
dec
inc
sbb
in
xor
xor
lock
xlat
sbb
jp
adc
xor
mov
ret
shr
adc
push
mov
mov
gs
cld
jp
cli
fucom
out
mov
das
stos
lods
ffreep
fisubl
rol
dec
xor
xor
and
scas
sub
in
dec
jae
jbe
je
ja
int3
push
aad
mov
pop
or
scas
add
inc
test
iret
dec
lea
jns
xchg
leave
inc
add
inc
sub
movsl
gs
arpl
jno
mov
scas
movsb
xlat
test
add
dec
and
inc
sub
add
ret
pop
cmp
sub
mov
jmp
pop
pop
enter
cmpsl
imul
lret
je
gs
mov
jmp
xor
mov
cmpsb
pop
ret
mov
push
mov
aam
mov
jmp
push
jle
nop
xor
lahf
cwtl
pop
fsubrs
sub
sti
jecxz
xlat
fcoms
imul
mov
scas
outsl
leave
in
adc
jl
lret
push
mov
or
mov
es
pop
push
mov
nop
rol
int3
js
sahf
xchg
sbb
in
cs
popa
sbbl
add
pop
sbb
cld
scas
stc
andl
sbb
and
repz
test
sbb
pusha
xchg
add
mov
inc
scas
xchg
mov
mov
shll
loop
push
jns
xorb
lea
xchg
int
stos
scas
out
mov
sbb
ret
mov
xor
loope
sbb
testl
cltd
xor
sarb
and
hlt
lea
mov
pop
and
push
ret
jl
adc
imul
nop
xor
and
mov
lret
jns
xchg
inc
int
add
lea
mov
aad
dec
dec
lea
ljmp
inc
mov
mov
faddp
push
adc
mov
es
fwait
xor
shrl
add
je
imul
sti
add
sbb
and
dec
add
aad
inc
xor
adc
shll
sbb
les
scas
test
inc
dec
xlat
jge
cs
ja
dec
push
cli
jl
cmp
mov
test
mov
in
adc
inc
sbb
jge
add
add
mov
jbe
sbb
or
mov
dec
jmp
mov
mov
xchg
pop
int3
mov
dec
cmpsl
jb
leave
mov
dec
xlat
jg
ds
or
mov
and
or
lret
mov
and
sub
pop
les
and
scas
stos
mov
mov
sahf
subb
push
scas
movsl
mov
jne
movsl
lcall
sub
fdivrl
rolb
cmc
cld
ds
aad
xor
pusha
jle
cld
lahf
mov
pop
outsl
inc
dec
jno
hlt
inc
dec
arpl
mov
lcall
jecxz
or
mov
add
test
aas
mov
clc
fcompl
outsb
xor
push
jge
push
jmp
and
jl
addr16
or
in
jl
jnp
jle
pushl
jno
xor
rcll
mov
dec
sti
or
mov
lcall
stc
and
sbb
cmp
addr16
jnp
xchg
push
test
push
push
fistpll
dec
cmc
mov
fildl
lret
repnz
or
scas
lahf
dec
xchg
jge,pt
add
jbe
jo
jae
out
adc
in
enter
iret
cmp
and
leave
call
jge
or
imul
xor
mov
cltd
pop
int
es
inc
loopne
sahf
mov
jo
jmp
addr16
push
lods
stc
shlb
pushf
inc
icebp
xor
ret
icebp
jl
idivb
repz
or
lock
mov
jg
fisubrl
xlat
push
mov
sub
inc
out
and
pop
daa
push
pop
insb
ljmp
repz
lods
xor
daa
jo
mov
mov
hlt
and
xchg
cmp
pop
xorl
fs
push
int3
or
xchg
push
insl
leave
jecxz
dec
cmp
push
pop
addr16
sbb
push
mov
stos
adc
mov
push
jg
es
ret
or
dec
sub
clc
mov
clc
jo
fldl
xchg
mov
sbb
jne
xchg
add
test
data16
jbe
xchg
insl
sbb
aaa
loope
pop
pop
shl
arpl
test
push
jne
loop
iret
mov
enter
add
sub
pop
dec
scas
daa
int
inc
cmp
call
inc
rorb
data16
loop
xchg
xchg
xchg
ja
jge
xchg
xor
pop
mov
xor
fsubrs
outsb
jnp
into
xchg
lods
lahf
xchg
add
mov
gs
dec
push
adc
test
add
sti
xlat
lcall
or
jle
cltd
call
pop
test
push
jno
dec
jge
inc
ss
pop
push
sub
aas
jle
dec
mov
or
sbb
sarl
loop
jne
xor
movsl
jnp
leave
dec
ljmp
mov
ss
into
mov
adc
in
fiadds
pop
push
or
loope
addr16
adc
mov
in
stc
ds
pop
dec
or
push
add
add
or
loope
aas
mov
pusha
mov
xlat
sbb
push
push
jbe
pop
movl
fisubs
call
xchg
mov
sub
cmp
inc
pop
js
xchg
inc
jo
xor
call
jle
pop
adc
repnz
sbb
or
sub
mov
orl
addb
push
int3
loop
ja
loope
inc
push
xchg
arpl
dec
test
test
outsl
dec
cmc
adc
sub
dec
inc
cli
mov
sub
mov
mov
in
stos
mov
and
sub
mov
jmp
nop
arpl
and
fcoml
pop
pop
xchg
pushf
pop
in
sbb
ret
sti
jne
cmc
loope
adc
sti
orb
mov
lods
cmp
inc
repnz
cld
repnz
xor
mov
das
lea
jge
lods
pop
enter
cmp
cli
fstps
cld
sub
dec
fisubs
sar
jmp
dec
int3
aaa
in
loope
out
shr
arpl
pop
dec
testl
mov
pop
push
xchg
fstl
jbe
and
xchg
xorl
in
mov
inc
push
dec
adc
pop
dec
mov
mov
sbb
sub
push
pop
push
gs
bound
aas
xor
lcall
out
stc
mov
xchg
cmpsl
push
jbe,pn
cmp
int3
outsl
push
pop
inc
mov
es
xor
mov
mul
lahf
sbb
outsb
xor
jmp
adc
mov
push
pop
ss
push
hlt
cmpxchg
or
pop
dec
cli
mov
stos
ljmp
mov
pop
loopne
pop
xchg
cli
adcl
iret
leave
xor
add
push
pop
fidivrs
clc
cld
add
cmp
jb
mov
mov
pop
mov
mov
mov
inc
mov
push
aaa
lret
inc
sbb
push
lock
subb
pop
cmpl
xchg
jg
jb
cmpsl
fadd
lcall
push
faddp
mov
popf
inc
cltd
mov
sar
cmpsb
mov
cmc
mov
or
and
xor
dec
std
push
into
ret
stos
mov
sahf
xor
cmp
ret
add
cwtl
push
nop
inc
es
and
test
mov
loope
mov
dec
pop
ror
and
dec
xor
sbb
mov
push
sbbb
mov
lret
cmp
cmp
or
mov
dec
ret
pop
mov
in
cmc
pop
jle
lods
jns
aad
clc
cmp
repz
sbb
leave
jbe
inc
add
out
lods
pop
mov
pop
packsswb
pop
je
leave
dec
push
aam
jmp
sub
lea
pop
jle
pop
scas
push
shl
dec
mov
or
test
mov
or
lret
mov
jge
imul
movsb
inc
sbb
adc
inc
imul
inc
mov
add
sbb
loope
dec
fcompl
pop
addr16
imul
ljmp
jp
insl
inc
les
popa
enter
pop
pop
push
in
mov
push
inc
xchg
jle
or
xor
adc
lret
mov
in
or
xor
mov
and
sbb
or
xchg
pop
les
sbb
dec
xchg
inc
sub
cmp
jnp
inc
hlt
sarl
and
enter
pop
dec
cs
and
test
or
scas
and
dec
push
sub
cltd
jb
sbbb
mov
pushf
js
sbb
clc
pop
out
arpl
xor
push
jecxz
out
shrl
mov
mov
jo
jmp
cltd
adc
aad
repnz
test
add
ljmp
fdivrs
adc
enter
xchg
addr16
in
inc
mov
rorl
into
jmp
scas
cmc
lea
jg
xchg
jp
fwait
adc
mov
into
xchg
stos
mov
jg
push
inc
xchg
mov
mov
push
dec
pop
je
sbb
xchg
xlat
imul
push
and
adc
adc
das
pop
popa
ficoml
mov
test
mov
cmpsb
jnp
push
stos
dec
data16
pop
es
mov
add
add
enter
mov
repz
out
sub
call
cmp
ror
cmpsb
push
cli
lds
lock
xchg
sbb
sbb
mov
jns
push
aas
dec
ds
inc
arpl
inc
shlb
dec
pop
cmp
lock
cmp
push
mov
cmp
sbb
loopne
jecxz
mov
mov
arpl
std
std
fwait
jo
mov
scas
push
fcomps
and
mov
xchg
push
adc
add
pop
and
lods
stos
push
push
and
int
add
loop
cwtl
pop
dec
and
or
pop
int3
or
xchg
sub
int3
and
cs
mov
xor
xorl
xor
mov
jl
sbb
fcoms
adc
and
xchg
adc
mov
jle
ret
push
push
xor
jno
mov
shl
pop
mov
cmp
pusha
add
xor
jbe
rcrl
fildl
pop
test
sub
xchg
add
xor
sbb
loope
in
sbb
cmp
sub
inc
movsb
lcall
cmp
push
fdivrs
movsb
scas
or
dec
lds
inc
mov
mov
add
popf
ja
sub
pop
push
mov
das
add
jo
ret
jnp
movsl
ja
daa
sahf
mov
in
pop
jae
push
inc
push
out
loope
mov
in
aas
icebp
inc
test
pop
lea
aad
cmp
lcall
xor
inc
iret
or
pop
lret
fldl
xorl
sub
and
fs
data16
add
xchg
xor
ret
and
adc
jns
js
xchg
push
nop
push
gs
ss
jmp
roll
enter
pop
sub
sub
aaa
mov
push
pop
repnz
roll
or
test
sbb
lds
in
sbb
nop
pop
rorl
and
imul
push
or
stos
and
in
mov
ret
aad
out
flds
push
pusha
push
cmc
sbb
rcr
fiadds
xor
stos
or
mov
or
or
lahf
push
incl
in
fst
mov
rcrl
mov
shl
pmulhuw
add
sub
push
and
add
aaa
les
sbb
dec
mov
push
bound
lods
xor
mov
inc
mov
sub
cs
push
cmp
push
icebp
shlb
sbb
cs
push
sti
leave
out
xlat
cmpsl
subb
mov
inc
inc
test
pop
out
mov
inc
sahf
xor
xor
inc
lea
push
xchg
jnp
mov
sub
lcall
test
mov
rcrl
insb
mov
arpl
pop
andl
and
xor
mov
mov
jb
lods
mov
sub
mov
int3
push
pop
movsb
insb
push
pop
pop
mov
rcll
insl
inc
add
jmp
push
inc
mov
or
push
and
dec
repz
fists
mov
or
sarl
orl
xor
fs
fucomi
fsubrl
lcall
fs
or
mov
outsl
or
insl
lods
cld
jno
fisubrl
std
aam
test
sub
rorl
cltd
and
lock
mov
cld
ja
lock
int
jbe
xchg
add
lret
sbb
cmpsb
inc
repz
inc
push
mov
cli
adc
outsl
out
jo
ljmp
mov
pop
xor
hlt
lods
adc
push
das
mov
imul
xchg
inc
xchg
les
sub
dec
addr16
mov
daa
es
ja
scas
or
pop
inc
inc
out
mov
movsl
cmp
mov
mov
or
enter
movb
sbb
repnz
add
movsl
dec
rorb
rcr
dec
mov
push
test
rcll
ficompl
adc
dec
jne
sub
xchg
lret
les
push
xchg
aad
cmp
mov
push
jle
aam
xor
cmp
jne
pop
xor
jge
cwtl
out
or
insb
in
pop
not
mov
mov
jp
test
mov
jno
mov
andl
add
mov
pop
jmp
lret
xor
and
xlat
or
add
add
xor
dec
or
mov
xchg
mov
test
icebp
and
dec
push
popf
mov
fs
mov
nop
xlat
mov
sti
clc
int3
je
sbbl
scas
cmpsl
dec
test
jno
loop
lcall
sar
push
lock
cmpsl
adc
sbb
stos
inc
pushl
shr
cmpsl
movsl
and
lahf
jle
cmpsl
inc
jle
out
mov
push
fcmovbe
xchg
mov
push
incl
and
dec
cmp
cmc
sub
mov
push
jecxz
icebp
out
push
push
pop
in
fs
xchg
in
les
mov
xchg
andb
jmp
adc
fcoms
jae
jae
xchg
inc
sub
mov
or
cmpsl
into
loope
cmp
adc
in
psraw
fdiv
inc
xchg
mov
scas
pusha
negb
test
xchg
push
out
rcll
imul
push
fadds
adc
mov
pop
outsl
push
sub
cli
sahf
sub
jg
jle
jp
cmpsb
lods
fstl
dec
out
pop
cld
adc
pop
jmp
stos
out
movsl
and
push
mov
ret
push
insb
cmp
lcall
out
xchg
cld
inc
ffreep
popf
cmp
mov
pop
rorb
fimuls
mov
loop
test
xchg
rcr
xchg
sbb
and
cs
mov
push
pop
les
cs
aas
pop
and
into
xchg
jg
pop
cmpsb
mov
mov
mov
cmp
jo
mov
xchg
mov
and
popa
imul
xor
jmp
xchg
imul
mov
add
jmp
fildl
push
lods
dec
and
pop
inc
pop
popf
das
sub
add
sbb
cwtl
rorl
call
mov
mov
ds
jl
mov
js
mov
out
jo
or
movsl
test
mov
leave
fwait
or
enter
movsb
sub
cs
and
cmpsl
pop
inc
pop
xchg
or
push
mov
add
push
cltd
hlt
dec
out
les
dec
mov
mov
jg
rol
jbe
cmc
cs
mov
cmpsl
inc
pop
mov
cmp
mov
arpl
pop
cmp
insl
cmp
jae
sub
adc
jle
ja
add
mov
imul
lcall
fsts
mov
outsl
xchg
mov
cmp
xchg
sub
cmp
lods
movsl
mov
outsb
pop
add
cwtl
fisttpl
pop
sbb
mov
das
sbb
add
mov
xor
xchg
cmp
out
enter
call
iret
and
mov
mov
dec
sahf
test
cli
push
jecxz
popf
sahf
stos
jbe
mov
rclb
pop
adc
sub
clc
scas
mov
in
sbb
sbb
sbb
add
stc
fnsave
xchg
popf
mov
mov
test
push
outsl
je
jmp
sub
dec
add
push
lahf
call
out
xchg
sar
rcrb
loop
lret
outsb
xchg
sub
and
loop
je
lcall
leave
lds
daa
adc
push
pop
push
mov
imul
xor
call
pop
adc
out
enter
test
xchg
loop
dec
fidivrs
fcompl
into
repnz
jl
cmp
dec
in
lcall
addr16
pop
gs
movsl
rclb
xchg
mov
inc
dec
dec
adc
sub
mov
ja
and
sbb
adc
or
sahf
adc
rcrl
jecxz
jle
xor
jne
out
inc
clc
jae
cmp
std
mov
lock
aad
sbb
das
cmc
and
jbe
mov
clc
mov
jne
mov
jno
add
rclb
lret
pop
xor
dec
nop
mov
pusha
cmpsl
outsl
sub
adc
leave
push
push
mov
jmp
mov
sbb
ret
xor
inc
cld
out
fistps
dec
jns
insl
fdivrp
add
imul
or
out
mov
sbb
fs
mov
add
xchg
pop
jmp
mov
data16
sbb
test
das
sti
pop
ja
repnz
push
cmp
shrb
iret
mov
sbb
mov
js
sub
pop
std
pop
xchg
xor
loop
ja
jae
mov
mov
adc
sbb
loop
push
jb
mov
mov
sbb
inc
lret
aad
lahf
adc
jns
cmpsb
loope
js
and
clc
mov
mov
add
ss
ja
lcall
and
iret
adc
push
or
xlat
popf
add
add
cmp
add
cs
out
mov
mov
mov
push
jle
in
lods
inc
out
jle
inc
xor
mov
clc
push
iret
lcall
arpl
out
or
sub
hlt
and
push
mov
inc
push
sarb
fwait
or
mov
inc
mov
mov
lret
xor
mov
andl
test
adcb
rcrb
je
movsb
ds
jg
adc
fisubl
adc
leave
mov
pop
lahf
roll
popa
int
adc
cwtl
seto
aas
jae
scas
push
push
cmp
orl
mov
loopne
add
xchg
ror
inc
dec
sbb
fbstp
ljmp
sbb
mov
outsb
jnp
inc
ljmp
mov
sbb
lock
pop
std
add
jl
das
jno
lods
mov
imul
mov
pop
pop
out
mov
xchg
cs
lahf
in
arpl
mov
data16
stos
pop
popf
sti
aam
adc
xor
testl
notl
mov
rcrb
cld
jns
lahf
ljmp
movsl
out
xor
in
sbb
cli
add
add
adc
sub
in
notl
rcrb
in
ss
repnz
pop
test
nop
or
ja
xlat
hlt
std
lds
loope
lret
mov
out
push
or
insl
sub
cld
aad
incl
and
adc
or
outsl
out
mov
mov
inc
mov
arpl
cmp
fstpt
les
pushf
clc
rcrl
xchg
xor
icebp
sub
rolb
mov
push
insl
out
mov
push
stc
adc
xchg
jb
sbb
lds
dec
fildll
pusha
jo
out
or
dec
pop
cmp
js
adc
inc
std
jg
dec
cmp
or
and
mov
ficompl
mov
ss
cmp
pop
loopne
aam
mov
lods
sbb
xor
subb
aad
pop
mov
dec
sbb
jns
les
call
divl
int
fwait
das
iret
rolb
cmpsl
je
in
fsubrs
lahf
mov
mov
push
lcall
jp
mov
pop
mov
fwait
notb
sub
lea
xor
pop
inc
mov
xchg
mov
cmp
mov
mov
sbb
add
idivl
lret
ret
in
outsl
into
sub
and
pop
xchg
xchg
jle
add
test
inc
mov
push
sub
sub
adc
jmp
pop
les
cmp
cmp
das
cmp
cmpsl
push
xchg
aad
jge
sub
fsts
sbb
pop
push
shrb
jbe
adc
rcrl
dec
sbb
jecxz
out
jmp
push
addb
xchg
xor
jbe
fistl
test
fiaddl
cmp
rcr
cld
inc
in
pop
gs
xchg
movsl
rcrl
jl
cmpsl
or
shlb
cmpsl
and
pop
movsl
int3
pop
push
sub
cmpsl
test
inc
adc
push
arpl
add
jae
jmp
int
xchg
icebp
jp
or
bound
lea
push
lahf
stc
ret
xchg
sbb
leave
jecxz
in
and
mov
lods
cmovno
lods
sub
cmp
or
out
xor
inc
daa
test
cmpsl
roll
pop
sbb
out
adc
test
negb
sbb
cld
mov
mov
adc
aaa
add
jno
das
sahf
xor
daa
stos
add
adc
inc
fwait
mov
addr16
rcl
xor
cmp
sbb
rclb
jbe
xor
push
lock
das
add
pop
xchg
cmp
daa
mov
or
sbb
popf
repz
push
rcrb
mov
xchg
sub
pop
sub
out
aas
pop
insl
push
scas
lods
rcrl
cmc
in
into
shll
sub
lcall
jge
jnp
adc
scas
fwait
popa
sbb
mov
xor
jge
mov
jne
mov
clc
nop
jp
pop
aad
push
icebp
pop
mov
push
sub
adc
inc
insl
add
jno
fwait
loopne
test
dec
and
enter
sti
lahf
loope
daa
out
ja
dec
xor
and
xor
nop
jl
imul
mov
mov
fadd
mov
out
addr16
arpl
out
xor
daa
or
jmp
jbe
seto
push
pop
add
jbe
in
movsl
jp
loopne
js
xor
cmp
push
jmp
dec
or
inc
or
stos
enter
inc
hlt
lods
xchg
rcrb
mov
mov
in
jb
aam
loopne
sbb
pop
rcll
mov
jns
cmpsl
dec
insb
ja
dec
imul
notl
jnp
xchg
jo
mov
lock
rcll
pop
adc
lea
js
stos
sub
movaps
mov
int
pop
jecxz
shll
fisubs
aas
mov
in
lods
ljmp
add
idivb
and
imul
leave
cmp
mov
in
mov
sbb
pushf
shlb
pop
das
pushf
movsl
test
jnp
sub
imul
pusha
pop
mov
push
cmp
dec
fcomps
push
pusha
jp
mov
dec
jl
stos
in
and
push
lods
mov
daa
sub
xchg
inc
int3
nop
xor
and
in
popf
mov
jmp
aaa
mov
pop
and
fisubrl
pop
or
jno
test
xlat
in
xor
dec
sahf
iret
mov
mov
sbb
sub
dec
sub
jb
mov
mov
jno
jnp
leave
and
mov
xchg
mov
cmpsb
sahf
cld
sbb
aas
ret
icebp
int3
roll
dec
cmp
cld
inc
popf
daa
inc
outsl
mov
pushf
mov
jno
fnop
jbe
inc
mov
xchg
or
mov
inc
xchg
mov
cmpsb
sub
xchg
push
movsl
cmp
xchg
adc
push
or
mov
cmp
aam
or
push
adcl
dec
insl
enter
cmp
adcl
data16
jne
adc
or
xchg
inc
test
dec
dec
arpl
out
jge
dec
adc
daa
cmp
test
adc
arpl
adc
mov
scas
iret
lds
cmp
lahf
fildll
and
inc
cmp
push
mov
sbb
inc
xor
xor
jo
lcall
int
lea
adc
sub
push
imull
mov
shrb
and
push
sar
fimull
mov
adc
inc
push
dec
jns
movsb
inc
je
xchg
inc
mov
movsb
xor
stos
xor
imul
adc
in
sub
call
or
dec
mov
fnstenv
xchg
stc
sahf
mov
add
dec
mov
and
not
jno
xchg
adc
push
dec
cli
stos
jmp
xchg
xchg
jne
ficompl
push
in
aad
lret
iret
add
pop
btr
ss
testl
out
je
fxch
cmp
sub
leave
inc
mov
adc
addr16
mov
adc
rcrb
sbb
iret
and
lods
xchg
aam
sub
pop
addr16
adc
jp
add
push
jno
pusha
jb
clc
lds
sbb
xchg
jb
test
fisttpl
push
cmp
test
xchg
mov
add
imull
test
and
mov
lods
pop
add
idivb
cs
mov
enter
leave
sub
sub
in
cmc
mov
mov
bound
inc
push
hlt
jb
fisubs
fmul
ror
pop
push
in
aam
lea
shll
pop
out
sub
fs
or
jo
cwtl
push
cmpb
mov
in
mov
mov
mov
inc
bound
mov
rcll
mov
adc
sub
xor
insb
dec
mov
daa
jbe
dec
mov
repnz
xor
rep
mov
adc
add
aas
and
inc
cmp
and
cmpsl
rorb
xchg
jg
adc
mov
jecxz
inc
sub
shrb
push
mov
in
mov
dec
dec
pop
push
insb
push
arpl
ja
pop
mov
movsl
xchg
int
cwtl
aas
aad
stos
aam
mov
or
cmp
xchg
sub
mov
and
push
push
adc
enter
xor
push
int3
rorl
imul
ss
jmp
push
push
insb
adc
fiadds
ja
jns
pop
test
cltd
mov
test
mov
imul
xchg
jb
and
std
mov
popa
mov
cmpsl
shll
stos
and
popa
push
in
fldenv
cmp
insb
inc
gs
mov
mov
add
test
pop
icebp
lcall
lahf
sbb
sahf
fs
push
hlt
arpl
mov
xor
lea
pop
mov
pop
and
cmp
lea
icebp
xchg
leave
mov
push
in
jecxz
push
mov
cmpsb
mov
mov
dec
cmp
jmp
je
cmp
push
rorb
loop
test
pop
jae
xor
jb
je
sbb
leave
sbb
cmpsb
lock
test
ret
xor
loope
ficoml
mov
sub
mov
xchg
push
movsl
xchg
sub
inc
stc
or
or
sahf
stc
xchg
fistpl
insb
popa
dec
sub
aad
adc
or
out
aaa
inc
ret
or
mov
int3
test
das
sub
cmp
enter
dec
sub
lahf
cmpsl
xor
pop
int
push
rcr
lds
je
or
add
lods
push
pushf
inc
push
jg
sub
sahf
add
popa
and
inc
lahf
fisttpll
cmpsl
stc
mov
lea
push
sub
cmp
aam
jb
mov
sub
decl
clc
cli
js
add
addr16
icebp
sbb
pop
lods
xorl
add
or
arpl
shrl
or
add
xchg
mov
fiaddl
sub
and
or
push
jb
adc
out
push
dec
mov
pop
jnp
das
out
test
push
rcrl
in
add
cld
hlt
outsl
inc
jmp
test
dec
mov
sbb
jg
dec
mov
push
pop
insb
test
xchg
aad
test
sbb
dec
test
mov
jb
mov
lret
imul
hlt
aas
and
xchg
push
or
shrl
push
popf
mull
sub
in
loope
outsb
pop
xlat
xlat
ja
popa
aas
rcrl
mov
jns
out
leave
imul
pusha
xor
pop
cmpsl
lret
in
shlb
jp
pop
cli
shll
out
cmp
and
push
sbb
xor
mov
popf
jb
cmp
mov
ret
movsl
xor
jae
dec
mov
les
ffreep
sahf
mov
in
xchg
push
xor
jae,pn
jge
das
lock
outsl
mov
jns
scas
add
mov
scas
out
pop
into
lss
sbb
xchg
fucomp
imul
inc
pop
test
dec
jo
inc
lods
mov
pop
rcrb
in
shl
shl
lock
adc
sbbl
inc
in
pop
inc
add
aad
sbb
call
test
mov
orl
adc
adc
ret
xchg
jle
sahf
call
jno
inc
nop
into
mov
xor
repnz
xchg
ret
push
cmp
dec
jge
movsl
or
inc
flds
sub
mov
cmc
out
sbb
std
sub
or
psubusb
imul
mov
mov
aaa
daa
out
jno
inc
or
mov
or
es
adc
sti
mov
mov
inc
push
pop
xchg
jno
dec
shlb
xor
jle
xchg
mov
sub
outsb
inc
add
stos
add
push
inc
lahf
lcall
add
jo
xor
mov
aad
push
mov
popf
out
lahf
mov
sbb
loopne
xchg
popa
jae
mov
lods
js
jnp
fnstsw
test
fwait
loop
sarb
mov
mov
sbb
pop
repz
dec
pop
and
sbb
sarb
pop
add
xchg
ja
lock
dec
xchg
adc
xchg
jmp
sbb
push
xor
mov
xor
and
mov
jnp
stos
fdivrl
test
das
lds
xchg
push
es
inc
arpl
pop
jle
sahf
leave
insb
aas
cld
std
jns
mov
cwtl
sbb
nop
xor
mov
outsl
push
fnstsw
and
scas
out
pop
pop
int
stos
push
adc
test
xchg
icebp
outsl
scas
in
cmp
insl
sti
pop
out
dec
push
mov
mov
inc
push
inc
sub
push
cmp
jo
ja
push
or
jmp
mov
jecxz
mov
push
sarl
mov
mov
popf
mov
dec
in
adcl
pop
xorl
enter
out
imul
leave
fdivr
test
out
jmp
mov
xchg
and
sub
jbe
xlat
jge
test
pop
xor
mov
pop
push
out
mov
adc
cmp
sub
pop
mov
inc
aaa
sbb
cmp
lret
xchg
in
pop
int3
jb
lock
dec
loope
sub
pop
pop
fs
test
inc
jno
cmp
mov
jb
xchg
xor
ret
mov
push
sub
popa
jg,pt
popf
inc
xchg
pop
jmp
xorb
dec
mov
in
in
or
jge
pop
jl
inc
in
ds
test
lret
lret
stos
dec
dec
lcall
test
mov
in
in
bnd
rcl
fldl
stos
add
cmp
ljmp
push
sbb
mov
lock
cmp
out
and
clc
mov
xchg
aaa
repz
inc
cmpsl
cs
loopne
add
add
mov
cwtl
sub
cmp
insb
add
xchg
pop
movsb
ja
add
sti
loopne
sub
push
mull
xchg
push
push
sub
jbe
push
loopne
mov
xor
mov
cmpsl
push
popa
in
hlt
cmc
inc
sbb
adc
fiadds
push
push
std
mov
mov
sbb
js
sarl
les
outsl
mov
jg
adc
xor
rclb
orb
pusha
fidivl
loope
or
shrb
push
add
add
and
cmpsl
mov
sbb
push
sbb
adc
cs
sub
inc
xchg
loopne
xor
pop
pusha
mov
or
jg
lahf
or
or
test
in
repnz
push
mov
mov
mov
xor
pop
out
out
dec
inc
push
addr16
pop
push
mov
jo
ljmp
cltd
arpl
cld
push
scas
movsl
add
scas
mov
arpl
out
mov
sbb
sbb
mov
in
mov
lods
inc
lock
add
test
data16
push
pusha
cmpsl
popf
adc
or
jno
mov
rcl
aas
sbb
loope
jb
in
fnstsw
orl
cmc
cmp
cmp
pusha
mov
popf
push
sbb
gs
jmp
test
mov
cmp
push
mov
enter
fstpl
mov
sub
xchg
scas
loop
scas
js
cli
fstpt
out
in
popa
sahf
xchg
subb
subl
sub
jnp
out
andb
adc
jbe
mov
mov
loopne
inc
lock
or
jae
add
cmp
repnz
test
jecxz
mov
inc
gs
bound
lahf
sbb
mov
gs
pop
xchg
ss
lods
dec
mov
xor
lahf
mov
dec
leave
sbb
cmp
ljmp
das
or
cwtl
nop
jnp
inc
or
lock
divl
test
push
das
adc
mov
xchg
add
fidivl
hlt
mov
add
jae
mov
push
cmp
mov
push
in
mov
and
in
mov
rorl
dec
sub
insl
inc
mov
lret
or
repnz
mov
cmpsb
mov
das
aas
jns
repnz
mov
xchg
roll
push
inc
pop
stc
lods
mov
mov
dec
in
call
mov
or
add
cmpsl
cmp
cwtl
and
mov
jno
sub
out
mov
cmp
lret
loope
out
push
dec
pop
pop
fistpll
xchg
xorl
pop
push
inc
movb
std
adc
popf
cmp
insb
pop
jb
repnz
mov
push
xchg
xchg
test
out
cmpb
enter
outsl
jno
push
fisubrl
or
pop
xor
stos
adc
int3
lcall
cmpsb
dec
add
out
sub
fildl
pop
dec
xlat
pushf
lcall
push
jnp
int
dec
loop
xchg
ret
enter
leave
mov
sub
rorb
dec
add
inc
out
fcomip
and
andb
clc
out
pusha
cs
dec
fcmovb
jp
fistps
mov
clc
mov
pop
stos
mov
push
mov
shr
jp
ljmp
ljmp
push
ds
ja
sahf
and
push
or
mov
scas
fistpll
addl
test
add
mov
cld
cmc
adc
leave
inc
inc
and
lahf
popl
out
movsb
cmp
cwtl
movsl
aas
stc
test
push
cmovle
mov
sbb
mov
lahf
or
mov
into
cld
mov
push
ljmp
ja
add
ret
add
ljmp
add
shll
and
enter
or
jge
jns
fs
hlt
mov
adc
fs
jne
or
mov
mov
dec
pushf
xchg
pop
sub
or
dec
mov
xchg
push
push
pop
adc
fistpll
and
cmpsl
aaa
insl
cmp
mov
outsb
ffreep
imul
aad
in
add
int3
scas
mov
dec
inc
scas
sbbl
mov
neg
dec
inc
cs
push
into
aas
mov
mov
sbb
outsb
loope
out
push
push
xchg
pop
loopne
rorb
repnz
and
js
or
scas
mov
scas
call
inc
outsl
stos
jb
or
test
adc
das
int
adc
into
fwait
mov
cltd
jp
aaa
fcmovbe
hlt
mov
and
fnstenv
or
add
jge
cmp
mov
jmp
push
mov
add
jb
in
push
dec
fsubrs
cmp
mov
adc
imul
je
outsb
jne
clc
in
punpckhbw
mov
sbb
pop
pusha
fldl
and
lret
cmp
divl
xchg
shlb
stc
add
add
mov
ret
jg
push
dec
jo
shrl
xchg
sbb
outsl
xlat
dec
mov
stos
xchg
mov
mov
cmp
push
fldcw
sub
inc
mov
in
sub
add
jo
in
repnz
cld
pop
xchg
jbe
dec
adc
jp
lret
test
lcall
lret
add
jo
xchg
inc
jle
lds
or
or
xchg
lods
imulb
fwait
je
pop
fwait
jmp
cmp
jns
aad
push
int3
cmc
outsb
sub
dec
add
leave
lea
adc
shlb
dec
and
xorb
adc
testb
loop
mov
addr16
lock
mov
arpl
xor
movsl
xchg
sub
add
dec
xchg
loop
imul
lret
sub
adc
or
aad
dec
data16
cmp
fcoms
push
mov
xchg
cmp
fiaddl
jno
adc
sub
outsl
cmc
cmp
push
fdivr
xchg
pop
lea
mov
popa
andl
xor
push
xor
push
call
shll
jno
and
testl
aas
and
push
outsl
dec
mov
sub
xchg
mov
push
add
imul
xlat
stc
jne
mov
mov
fisttpl
mov
cld
pop
xchg
mov
fs
xchg
jmp
aad
lock
fs
out
cmp
or
subb
cmp
dec
cmpsl
and
mov
pusha
sahf
inc
fiadds
push
scas
dec
inc
cmc
cwtl
jl
mov
add
add
mov
fwait
pop
mov
push
jge
rcrl
adc
clc
mov
rolb
jns
lds
out
or
jmp
lret
xchg
sbb
inc
out
and
xor
xchg
sbb
push
push
push
js
pop
loopne
arpl
jmp
in
test
sub
cmp
mov
neg
inc
push
lods
push
fdivl
js
das
sub
add
jne
pop
adc
xchg
ja
fadds
mov
inc
pop
dec
scas
fnstsw
rolb
mov
pop
lea
adc
test
inc
lret
jae
inc
xchg
call
lahf
fwait
add
jnp
xor
and
pop
push
pop
sub
push
inc
and
sbbl
and
mov
out
sbb
out
sbb
inc
std
mov
mov
sub
mov
jp
pop
outsb
jbe
cmc
cmp
cli
loope
aam
pop
or
xor
daa
inc
cmp
add
mov
mov
int
pusha
movsb
mov
aas
pop
je
adc
xlat
mov
cmp
push
pop
pop
std
sbb
mov
cld
push
inc
loop
not
dec
adc
and
cmp
add
fldt
xorb
sbb
lock
pop
sbb
ret
pop
sub
mov
bound
insl
outsb
jle
lea
xlat
push
mov
jmp
repz
outsl
sub
push
call
loop
fisubrl
aam
in
js
test
xor
jne
test
lds
xor
scas
ljmp
in
mov
sbb
insl
fistps
pop
jns
and
add
xor
popa
iret
scas
mov
jo
cmp
loopne
jmpw
pop
or
pop
and
xchg
and
cmp
filds
outsl
pop
inc
jo
mov
or
mov
mov
cmp
sbb
in
push
mov
adc
mov
push
leave
sti
sub
pushf
jns
das
sub
adc
jae
mov
xor
sbb
loop
mov
xchg
xor
jecxz
inc
push
leave
pop
or
pop
shl
pop
pop
pop
dec
cmp
push
dec
outsb
outsl
mov
inc
stos
add
test
fimuls
ret
ja
mov
jns
xor
out
push
ljmp
push
sub
mov
mov
test
pop
jl
cmp
fs
inc
mov
into
jo
add
pop
add
xor
pop
fbld
mov
clc
scas
mov
cmc
mov
dec
test
in
jbe
ljmp
push
cmpsl
insl
pop
adc
or
stos
xchg
add
sbbb
fcomp
xor
sbb
xchg
mov
fcomi
repnz
popf
inc
dec
jle
cmpsl
shl
into
ret
cmp
sbb
shll
int3
xchg
int
mov
xchg
push
lds
xor
mov
add
pop
pop
xor
jae
shr
getsec
and
clc
in
aad
jl
loopne
lcall
jmp
mov
push
and
out
pop
int
subl
nop
sbb
cld
movb
add
hlt
loope
jg
cmpb
mov
addr16
sub
pop
ds
or
lret
and
jne
add
outsb
mov
and
xchg
mov
mov
and
ret
adc
rol
mov
pushl
inc
pop
fdivr
outsl
lret
dec
rcl
jge
mov
sbb
dec
or
lcall
cltd
fldcw
lods
jmp
dec
xor
jmp
add
fnstsw
lods
pop
pop
or
orps
push
sub
mov
bound
xlat
or
sbb
gs
lret
shl
and
addr16
push
or
xor
addr16
ds
scas
adc
test
mov
adc
fsubrl
cli
mov
mov
or
push
jp
xor
mov
xchg
jns
daa
pop
mov
add
cmp
lods
stos
pushf
outsb
ljmp
flds
fnsetpm(287
jp
movsl
add
xchg
xchg
sbb
shrb
push
or
lret
jp
push
push
addb
lcall
insb
in
in
jnp
push
and
fnstsw
lds
xor
movsl
add
jo
xchg
add
ljmp
das
scas
lds
dec
call
rorb
push
mov
scas
xchg
in
mov
mov
push
daa
int
push
lds
pop
sbb
lahf
inc
push
dec
aad
nop
mov
pop
out
jp
mov
inc
and
in
lds
push
icebp
rol
rcrb
test
lahf
mov
outsb
lds
popa
sub
outsl
loop
outsl
dec
dec
aas
dec
mov
popa
enter
ja
mov
hlt
insl
cltd
ja
jp
cmp
das
stc
add
divl
int
nop
sbb
push
xchg
scas
xchg
push
xchg
xor
gs
cmp
mov
adcl
jmp
jecxz
sti
dec
mov
pop
jnp
xor
pop
aaa
mov
push
test
xchg
adc
sbb
inc
in
sbb
push
inc
insw
rcl
mov
adc
pop
sub
lods
jecxz
test
mov
mov
pop
inc
lods
push
sub
imul
xchg
rcl
adc
shll
push
pop
in
mov
adc
xchg
jl
test
mov
lods
lahf
inc
jne
push
xor
imul
ss
popa
jne
scas
or
popf
mov
xchg
leave
in
or
js
movsl
imul
pop
push
aad
ja
lods
lods
and
and
jbe
mov
mov
mov
lret
jae
cmp
fisttps
sbb
add
aas
xor
dec
mov
and
pop
mov
inc
mov
movsb
push
add
pushl
iret
test
fisubl
fdivp
mov
mov
xchg
pop
ljmp
mov
cmp
mov
movsb
loop
scas
mov
push
adc
add
scas
aam
popa
xchg
xor
inc
lret
int
ret
or
popa
mov
flds
enter
insl
bound
adc
daa
cmp
dec
mov
fildll
xchg
mov
inc
aaa
popa
dec
aaa
repnz
xor
lds
push
mov
ja
ljmp
jge
sub
cli
cmpsb
sbb
ljmp
push
ja
jnp
adc
or
popa
inc
fdivrs
pop
pushf
adc
sahf
cwtl
int
xchg
lock
xchg
nop
mov
hlt
or
jae
sahf
mov
xchg
sti
sub
xorb
or
or
push
icebp
or
fdivrp
cmp
das
xor
mov
in
addr16
and
ret
insl
pop
divb
pop
aam
xor
or
das
push
call
iret
pop
lret
data16
mov
xor
faddp
ret
or
add
pop
pusha
mov
fsubl
sbb
push
das
xlat
jmp
aaa
add
inc
mov
mov
inc
js
dec
std
push
lcall
shlb
xor
lock
outsl
outsb
adc
subl
xchg
jo
movsl
cmc
push
lahf
cli
push
std
mov
lds
add
inc
into
mov
lcall
test
and
insb
xchg
nop
cmc
jns
enter
daa
sbb
nop
movb
jmp
out
mov
mov
daa
sub
adc
lods
hlt
sub
push
test
out
pop
mov
cmp
mov
mov
fildl
fucomip
rorb
or
inc
pop
arpl
cmp
sti
cld
in
sti
jne
das
pop
add
leave
mov
xor
subb
add
or
mov
push
out
lret
lcall
add
xor
shll
dec
enter
js
das
mov
dec
jns
ds
or
movsl
int
xor
jge
add
mov
sub
hlt
sti
xlat
xor
mov
dec
ljmp
jae
fcoms
out
ljmp
sub
fsubrs
xchg
xchg
pop
xlat
cmp
xor
xchg
enter
and
xchg
sahf
mov
pushf
mov
inc
rorl
shrb
jl
push
hlt
fists
dec
sub
daa
out
lcall
test
and
clc
jns
sub
test
mov
shl
xchg
cs
xlat
adc
aaa
jno
in
aad
jne
icebp
out
push
insl
orl
insl
fldenv
sub
mov
test
push
mov
mov
xchg
mov
leave
xchg
rorb
pop
mov
dec
scas
mov
mov
xchg
or
mov
cmp
xor
subl
dec
aad
pop
iret
ljmp
ds
sbbl
sub
mov
shr
hlt
mov
popl
xlat
insb
dec
ja
in
test
push
inc
xor
sub
jbe
cli
and
pusha
jae
out
stos
lret
mov
fmull
push
pusha
mov
push
loope
popa
mov
fdivl
or
sahf
add
jo,pn
adc
icebp
and
mov
shr
repnz
xchg
stos
or
cld
pop
ret
sub
push
loopne
mov
cmp
xor
push
push
das
sbb
jmp
out
test
jo
jno
daa
lret
loop
das
xchg
mov
mov
adc
push
add
push
sbb
sbb
xchg
stos
fistpll
fnstenv
sbb
cmp
out
mov
test
and
pop
lret
dec
sbb
sub
add
or
inc
mov
mov
mov
inc
clc
enter
out
mov
lds
icebp
sbb
mulb
add
jge
das
xor
cmp
xchg
mov
or
pusha
out
cmp
pop
ja
jp
cmovs
out
push
and
jno
ret
movsl
mov
add
inc
bound
pop
push
mov
insb
es
sbb
cmc
mov
cli
or
add
xchg
iret
jne
enter
lret
js
jle
push
enter
filds
cmp
sub
out
aaa
pop
pop
aad
xor
int3
push
push
cld
fld
dec
fistps
rclb
adc
iret
fwait
aam
mov
inc
test
pop
adc
adc
scas
movntps
stc
sub
out
loopne
jge
arpl
std
xor
xor
loop
cmp
xor
push
dec
jg
pusha
pop
flds
mov
sbb
mov
push
test
in
jg
shl
add
adc
ret
pop
das
inc
fiadds
int3
jmp
mov
inc
push
mov
aam
jmp
pop
add
add
mov
fisubrl
mov
jl
add
icebp
xor
cmp
sub
loop
jo
out
cltd
sbb
ret
cmp
test
cmp
jb
lods
and
jo
js
sbb
mov
xchg
and
push
mov
pop
push
jae
lods
into
pop
sbb
ljmp
dec
fisttps
push
cmpb
lea
test
xchg
mov
rolb
pop
in
jns
and
shrb
sbb
mov
sub
cwtl
inc
in
jg
dec
test
jp
mov
rclb
fbld
scas
test
outsl
xchg
push
repnz
rclb
aam
and
data16
mov
or
aad
fcoml
mov
pushf
enter
sahf
les
push
jae
pusha
gs
gs
call
ljmp
jo
mov
xchg
xor
inc
out
decl
es
mov
sbb
mov
aad
jo
or
enter
inc
lods
ja
addb
jnp
fs
rcrb
ret
in
mov
shrb
fwait
and
shl
ret
idiv
pop
inc
call
jmp
cmp
arpl
cwtl
imul
dec
arpl
pop
subb
imul
cmp
leave
jl
jmp
inc
test
push
push
cs
cld
les
scas
rcrb
dec
lret
push
mov
ds
scas
rorb
call
push
mov
jge
and
sbb
loop
or
xchg
push
fistpl
rorl
pop
pop
xchg
mov
data16
jo
arpl
jge
pushf
lret
pop
repnz
popa
clc
push
call
cmp
scas
push
sbb
js
hlt
inc
scas
and
sub
adc
add
insb
xlat
adc
mov
sub
sbb
and
cltd
scas
mov
ljmp
aam
out
pop
adc
mov
pop
fcomps
mov
cmp
mov
addl
test
subb
sbb
push
mov
mov
insb
stc
adc
sub
test
dec
pop
jbe
add
pop
rcl
push
add
cmpsl
dec
cmp
movsl
adc
sti
mov
jl
cmpsl
fidivrs
push
mov
mov
icebp
jl
cs
movsbl
mov
repz
add
je
push
sahf
mov
aas
in
xor
leave
pop
lock
jmp
mov
mov
sub
fs
inc
push
xor
icebp
jp
cs
xor
test
lret
aas
xor
pop
aaa
pushf
pushf
add
rcrb
ja
and
pop
enter
cli
inc
xor
dec
daa
js
xchg
jg
es
outsb
dec
add
les
bound
sub
icebp
push
mov
mov
mov
dec
movsl
dec
sti
sbb
rol
dec
testl
das
aam
jns
dec
jne
loopne
sarb
mov
or
add
xor
or
jnp
nop
mov
imul
lds
hlt
out
push
mov
sub
inc
inc
outsb
dec
daa
ret
mov
and
pusha
or
and
call
idivb
mov
mov
test
ss
mov
add
shlb
sub
mov
ret
insb
into
pop
xchg
test
xchg
in
rol
mov
fxch
fnstcw
inc
loope
iret
mov
adc
test
ss
cvtpi2ps
data16
fwait
pmovmskb
add
js
push
cmp
sub
xchg
fists
xor
dec
loop
shl
mov
or
push
cld
fldenv
lret
int3
fdivs
pusha
mov
xchg
bound
sub
mov
push
pusha
mov
repnz
int
or
jo
push
xchg
repnz
jmp
mov
popa
jb
jmp
xor
xorl
adc
mov
xchg
dec
roll
add
mov
inc
fcmovbe
mov
int3
bound
lea
int3
inc
in
lcall
push
in
dec
xor
push
nop
in
data16
ss
pop
pop
cwtl
mov
inc
imul
scas
xor
add
push
cmp
jl
call
aas
sti
subb
jbe
sti
in
push
mov
or
adc
rclb
ret
mov
ja
pop
das
shl
sti
mov
mov
movb
sbb
leave
xchg
arpl
popf
je
dec
sahf
scas
or
sbb
and
mov
mov
out
cmpsl
jle
jns
mov
add
sbb
fists
int
jg
pop
mov
dec
push
pop
notb
pop
inc
jnp
and
stc
pop
push
mov
in
mov
and
inc
rorl
insb
aaa
xchg
pop
movsb
jmp
mov
push
mov
cmp
add
push
shlb
lret
xchg
pushf
mov
cmp
jge
enter
fldenv
pop
mov
bound
packsswb
adc
adc
lea
cmp
mov
nop
sub
ret
in
lcall
dec
test
cld
movsl
jae
push
rorb
pop
dec
pusha
aas
aaa
cld
or
push
cmp
into
sbb
push
xchg
mov
mov
fstl
scas
aad
cmpsl
cmp
push
outsb
sbb
orb
dec
and
jae
lods
pop
pushl
sarl
push
popa
lret
mov
lret
xchg
loop
add
popf
loopne
pop
mov
xor
push
dec
push
inc
mov
imul
mov
test
pushf
or
cmp
jmp
sarl
popa
imul
scas
xor
mov
sarb
lods
xor
push
lcall
sbbl
test
in
lock
inc
insb
ljmp
cmpsl
divb
outsb
cmp
jmp
mov
mov
sbb
sbb
push
iret
jle
mov
add
add
mov
lea
test
dec
jp
sbb
xor
mov
imull
insl
popa
lods
push
sub
ret
jne
lret
push
jbe
mov
pop
fiaddl
arpl
pop
cli
push
jle
adcb
iret
xor
loop
xor
icebp
lahf
stos
inc
iret
inc
icebp
sbb
lret
dec
sub
push
jmp
push
push
push
cmpsb
jl
rclb
adc
sub
mov
int
sbb
loop
mov
aam
add
push
fists
repnz
lods
rcll
push
imul
sbb
jmp
xchg
xchg
lret
insl
rcrl
mov
mov
add
fidivs
mov
stos
adcb
lock
cmc
dec
xchg
or
cwtl
push
lds
pop
subl
lret
cld
sub
int
pushf
cmp
popf
cmpsb
lahf
mov
inc
adc
cli
dec
adc
jo
mov
lds
mov
dec
mov
jmp
dec
xchg
sahf
and
int3
andb
test
cmp
push
push
sbbl
inc
xchg
lret
lea
dec
fildl
bound
jb
sub
jnp
std
mov
or
sub
pop
adc
lret
call
xchg
xor
leave
pusha
and
sub
adc
int3
sub
das
jle
dec
test
push
push
aad
in
add
inc
fimull
arpl
test
fstps
addr16
aaa
jmp
cmc
rorl
sub
add
dec
out
addr16
sub
pop
sub
shlb
push
das
inc
pop
scas
rol
out
and
lret
inc
je
ficompl
repz
add
or
jnp
pop
push
stos
repz
mov
popf
add
mov
push
clc
pop
pop
loope
mov
outsb
lea
shll
sahf
nopl
and
test
inc
aad
mov
ljmp
xchg
fistpll
push
adc
lock
inc
out
sbb
dec
cmp
sarl
shrb
les
xchg
inc
sti
popa
and
fnstsw
jecxz
mov
mov
mov
cmp
cli
les
add
repz
xchg
cltd
in
jns
je
lea
push
or
mov
jno
pushf
lods
call
shll
jb
xchg
inc
cld
xchg
sub
sub
xchg
adc
mov
pop
dec
xor
imul
jecxz
mov
js
xor
mov
mov
push
add
mov
pop
repz
jge
mov
test
jns
fcmovu
lock
push
push
cmp
cmp
jl
xchg
mov
fwait
jmp
shlb
in
sbb
jge
imul
sti
mov
and
and
fsubl
lahf
bound
inc
xchg
mov
inc
mov
or
dec
sbb
mov
xchg
dec
fldl
das
or
int3
lods
mov
cmpsl
xlat
and
adcb
dec
xor
in
outsb
scas
push
dec
sub
mov
gs
jmp
sbb
jmp
out
shlb
outsl
mov
jge
test
push
push
xchg
jp
ljmp
mov
push
xchg
push
rorb
add
push
sub
mov
das
stos
hlt
loope
xor
arpl
inc
mov
mov
and
sbb
pop
addb
xlat
pop
or
push
bound
cld
mov
cmp
cmc
gs
sbb
dec
dec
sub
into
out
repz
cwtl
int
or
mov
push
jp
or
fistpll
sub
jne
sub
mov
outsb
rcl
xchg
mov
dec
ss
push
jns
in
dec
ja
jae
lret
adc
or
lcall
dec
movsl
adc
xchg
punpckhdq
cmpb
push
es
mov
nop
aaa
lea
lock
xor
pop
push
xchg
xchg
mov
push
mov
insl
pop
dec
xor
jns
mov
xor
jo
xchg
mov
popa
pop
or
or
lds
cli
xchg
push
lcall
pop
js
or
xor
stc
test
mov
loope
lds
aam
out
loopne
gs
xchg
sahf
mov
push
sub
push
jns
mov
xor
mov
and
mov
jno
insl
lret
lds
aaa
xchg
popf
inc
xor
test
mov
in
pop
sbb
and
xchg
mov
fxam
mov
xchg
fsub
lret
test
sbb
push
loop
inc
inc
mov
or
test
mov
push
dec
mov
shll
ret
dec
xor
into
std
neg
icebp
cmp
imul
sbb
in
cmpsl
dec
pop
sub
jp
push
inc
iret
inc
cmc
jge
pop
dec
jae
jnp
jle
dec
jp
scas
cmp
mov
sti
sub
jns
sbb
sbb
repz
sti
push
lret
stos
adc
xor
push
xor
ds
rorb
in
adc
lahf
adc
dec
xchg
incb
jae
jb
and
jecxz
test
loope
mov
and
adc
hlt
mov
aam
repnz
dec
sub
shrl
movsl
cmpsb
mov
jbe
mov
pop
inc
mov
sbb
fwait
push
pop
loopne
ljmp
sub
pop
mov
jo
inc
test
jns
les
fucomip
push
popf
add
sarl
xchg
and
add
test
jo
cmp
sbb
lods
and
pop
fadd
call
inc
clc
pop
and
fildll
imul
cmpb
icebp
sub
inc
jl
inc
jae
lds
sti
mov
cltd
mov
data16
lea
lds
xor
aam
mov
xchg
cmp
mov
iret
mov
sbb
rcll
inc
nop
sub
sub
je
dec
xchg
jno
inc
push
xor
and
cmp
pop
cmp
pop
es
mov
imul
pop
push
loop
sbb
stc
mov
inc
pop
out
sbb
in
xchg
mov
mov
mov
xchg
adcl
aaa
shlb
sbb
mov
shll
loopne
mov
repz
push
inc
hlt
jne
imul
push
fs
ror
mov
and
sti
shl
lret
mov
xchg
icebp
cmc
mov
pop
jb
cmp
or
jge
push
pop
push
xchg
int
in
test
stos
cmp
lcall
pop
adc
sbbb
push
out
aad
idivl
add
cmp
leave
xchg
jge
sbb
test
jecxz,pt
jo
ja
std
xchg
jbe
jo
clc
mov
jmp
enter
xor
dec
mov
fnstcw
lcall
sub
pop
push
mov
xor
jl
shlb
outsl
aad
mov
subl
fiaddl
outsl
cmpsb
iret
clc
rcrb
fistpll
mov
sub
sahf
rcll
cli
sbb
dec
mov
mov
sub
pop
jmp
stos
sub
insb
or
jne
jg
inc
push
repnz
xor
jnp
bound
stc
inc
or
repnz
ret
or
aam
cmp
xor
out
stc
and
add
push
mov
test
dec
insb
and
orl
adc
push
into
pop
dec
cmp
dec
xlat
lret
gs
jmp
inc
mov
test
sti
andb
cmp
add
ret
adc
cmc
rclb
push
inc
dec
mov
call
push
or
stos
pop
push
mov
scas
aad
popa
dec
xor
jo
hlt
jg
cmp
mov
dec
rolb
es
inc
adc
sbb
push
js
xchg
xor
lret
adc
shrb
loopne
mov
insl
test
fcmovne
cld
dec
arpl
int3
xor
jnp
je
pop
cs
add
shrl
mov
out
incl
sti
and
outsl
rcrb
scas
stos
scas
cwtl
shrb
frstor
sbb
lret
mov
and
inc
mov
int
add
pop
mov
insb
fcompl
popa
lock
int
or
push
add
rcl
loope
dec
push
fsubrs
cwtl
ret
scas
push
or
loope
inc
popa
daa
insl
mov
pusha
fsubrl
ljmp
bound
loopne
lods
popa
cwtl
add
pop
mov
cli
ljmp
incb
sub
pushf
lret
inc
int
mov
xchg
pop
mov
push
fs
sbb
jle
xchg
sbb
xchg
push
add
aad
xchg
lret
xor
jg
or
ss
pop
es
movsl
shll
insb
push
stos
mov
dec
fstps
cmpsl
push
jle
and
jne
push
loope
push
xchg
lea
pop
xchg
jmp
inc
mov
decl
rcll
xchg
enterw
xchg
sbbb
fwait
xchg
dec
mov
mov
cmp
stos
out
aaa
lds
in
dec
outsl
inc
cld
aas
fdivl
adc
jno
push
movsl
cmp
std
nop
insl
filds
out
in
arpl
ljmp
push
pop
add
rcl
xchg
or
shrl
shlb
mov
fsts
cmpsb
pop
nop
pop
int3
jbe
cmpsl
inc
loopne
xor
into
jnp
popf
fmul
mov
mov
in
adc
cmp
frndint
xchg
sbb
adc
xchg
adc
or
xchg
addr16
xchg
loope
ds
inc
push
adc
lods
adc
xchg
add
inc
jne
je
scas
ret
or
pusha
test
adc
jb
and
mov
mov
inc
jle
js
js
push
popa
addr16
sbb
mov
mov
lret
loop
icebp
adc
pushf
pop
xchg
inc
aad
stc
mov
rcr
sti
mov
lods
mov
fdivs
out
cmp
sbb
dec
mov
inc
fisubs
or
pushf
repz
dec
add
in
rol
mov
adc
lea
cmpsb
mov
out
mov
and
push
xchg
loope
inc
or
shrb
sbb
push
pop
mov
testb
stc
add
pop
sahf
dec
sti
and
roll
inc
and
push
testb
cmpsb
fwait
stos
lock
inc
stos
dec
add
dec
ds
aas
xchg
add
aas
js
lret
notb
add
push
adc
data16
pop
lea
jae
clc
std
iret
add
inc
sub
mov
out
fidivl
xchg
push
ljmp
or
repz
pop
jge
into
pop
or
out
mov
or
pop
fldl
dec
add
xchg
lock
hlt
xor
pushf
sub
dec
aad
xor
pop
adc
sub
gs
mov
nop
adc
sub
or
mov
faddl
push
pop
aas
mov
mov
fistps
ret
repnz
dec
les
mov
add
xor
stos
adc
mov
mov
hlt
mov
push
sbb
cmp
push
cmp
xchg
stc
push
movsb
adc
sub
pop
aaa
cmp
mov
dec
shrl
jne
stos
adc
mov
ds
testl
mov
popa
repz
cmp
cmp
sub
add
mov
cvtps2pd
pop
mov
sbb
push
lods
add
mov
jb
pushf
loopne
fisubs
in
mov
pop
hlt
outsl
adc
mov
in
sub
add
ret
xchg
ljmp
cmpsl
aad
fwait
in
rcr
leave
jo
je
enter
fsubp
inc
fsub
pop
sub
imul
ljmp
xor
fwait
popf
jmp
push
aaa
jmp
pop
adc
add
outsb
scas
and
fimuls
mov
mov
dec
sub
jmp
testb
pop
or
in
push
scas
mov
fdivs
mov
imul
fcomip
sub
mov
sub
mov
or
push
inc
push
xor
mov
xchg
push
outsl
loop
mov
push
cli
jb
xor
jae
xchg
inc
sbb
add
add
fisttpll
pop
mov
cltd
out
negl
fsub
les
rcll
push
daa
jge
cli
mov
mov
pop
and
inc
dec
inc
aaa
or
lods
add
jne
icebp
js
inc
lcall
stc
testl
mov
push
push
fbld
xcrypt-ofb
cmpsl
sub
loope
cmc
repnz
inc
jae
and
add
sarl
push
jp
pop
imul
cld
cwtl
cmpsl
and
push
rcll
rcrl
adc
sbb
dec
call
sub
stc
shr
imul
cmp
sbb
and
inc
cmp
lahf
and
xchg
xchg
fdivrl
ja,pn
jns
jno
mov
insb
rclb
outsb
into
subl
stos
add
xchg
pushf
cltd
sbb
cltd
stos
out
in
aaa
sbb
loope
lds
push
push
mov
testb
adc
stos
ss
mov
mov
jl
movsl
je
xor
sbb
mov
dec
scas
lods
out
icebp
pop
cmp
add
inc
xchg
xor
fcoml
and
and
dec
movsb
dec
fwait
cmc
sarl
mov
cmp
outsb
inc
test
icebp
or
mov
dec
shrl
mov
pop
inc
cmpsl
mov
imul
ds
mov
in
iret
insl
js
aaa
inc
add
and
iret
dec
out
jbe
add
dec
dec
pop
xchg
mov
setge
clc
lret
push
push
cmp
fldl
sbb
scas
arpl
cmc
loope
js
inc
add
sub
xor
mov
lcall
mov
fldenv
cli
push
insl
xor
jne
popf
sub
mov
ror
inc
and
cmc
sub
pushf
push
daa
stc
jb
imul
in
clc
rclb
inc
or
or
dec
cmp
xor
mov
dec
dec
jne
push
push
fnsave
scas
push
fldcw
dec
xor
jge
in
out
scas
xor
mov
xor
add
jb
sub
in
in
roll
inc
rclb
call
testb
stos
cs
jp
mov
je
nop
lea
in
int3
test
out
test
pusha
std
and
mov
xor
ficompl
repz
shrb
xchg
push
mov
clc
fwait
mov
cmc
leave
push
scas
sbb
insl
cmpsb
xor
jo
xor
jne
jmp
pop
jl
nop
clc
mov
or
adc
sub
int
cmpsl
hlt
insl
and
or
out
jmp
push
pushf
mov
not
or
movsb
jno
iret
dec
push
aaa
lret
xchg
push
mov
daa
xchg
maxps
das
stc
outsb
and
pop
repz
lret
xchg
dec
je
into
pop
pop
jb
pop
lcall
movsl
or
push
pop
inc
jae
adc
scas
pop
sbb
fsubrl
xor
xchg
push
pop
pop
xor
repz
jns
stc
ret
adc
fwait
and
insl
push
stc
adc
dec
pop
in
push
and
test
pop
outsb
aad
and
sub
aaa
arpl
adc
rcrb
es
adc
jns
lea
lock
aam
cld
lcall
and
push
xchg
inc
add
adc
aam
push
gs
or
mov
or
lret
cwtl
mov
sbb
pop
mov
xor
cmpl
jb
cltd
mov
iret
dec
lock
xchg
jmp
scas
flds
xor
ljmp
jge
xchg
loop
push
fcmovnu
divb
pushf
jp
aas
stos
mov
inc
jl
push
and
cmp
call
xchg
inc
ds
sub
xor
jns
into
dec
add
out
push
xlat
dec
sub
mov
mov
xchg
mov
test
lahf
pop
in
into
or
cmp
and
push
testl
js
pop
or
movsl
cld
pop
imul
hlt
or
inc
lret
cmp
insb
sbbb
xchg
js
sarl
push
jge
jnp
repnz
stc
ret
sahf
push
xchg
stos
rcrb
and
imul
rcll
mov
ljmp
sahf
mov
enter
inc
cmp
in
insb
mov
cmpsb
push
and
mov
fcmovnb
icebp
push
fisubl
add
mov
or
dec
cmp
inc
mov
fiadds
test
call
sti
xor
das
outsb
lcall
add
ljmp
mov
es
std
gs
or
es
pop
decl
xchg
fnstcw
cld
jge
shl
arpl
fadd
test
stos
xchg
icebp
imul
addl
movsl
dec
mov
adcb
sahf
sub
lahf
jge
mov
leave
pop
jg
enter
addl
in
fcmovu
xchg
mov
pop
dec
and
imul
sbb
inc
sbb
and
into
stos
inc
adc
dec
inc
jae
loopne
dec
add
stos
push
stos
mov
mov
clc
je
mov
sahf
add
adc
gs
loop
push
out
pushf
ja
sarl
push
mov
push
lods
sti
xlat
jecxz
sbb
xor
xlat
fs
hlt
sbb
lods
lcall
adc
lods
por
xchg
add
adc
inc
cmc
stos
xor
jp
push
push
jae
mull
shlb
push
iret
cwtl
leave
mov
mulb
and
mov
scas
ret
icebp
adc
pop
inc
movsb
aad
mov
inc
mov
xor
cli
enter
fcoms
inc
js
mov
dec
xchg
cmpsb
pusha
lret
add
push
rorl
push
sarl
roll
test
xchg
fdivp
repnz
xchg
xchg
push
jb
data16
adc
or
inc
ret
sbb
push
in
mov
mov
jnp
mov
mov
aas
mov
inc
mov
inc
rolb
push
and
cld
jge
or
stos
movsl
mov
daa
jb
cmpb
add
adc
jl
xor
cwtl
and
sbb
jno
push
cmp
mov
leave
andl
push
push
or
ret
jmp
les
movb
xlat
repz
dec
outsb
cmpb
push
dec
fimuls
test
pop
ret
mov
es
fcoms
xchg
lcall
pop
adc
push
dec
push
lds
aam
fmull
fs
sub
sub
fnstsw
cmp
sub
fcomi
sarb
mov
cmc
mov
jmp
xor
gs
mov
adc
dec
push
or
fcmovnu
call
cmpsl
fnsave
dec
dec
std
or
sbb
mov
add
cmp
fldl
mov
cmc
mov
dec
mov
fsubrp
pop
adc
cwtl
icebp
or
das
jge
dec
push
scas
adc
sub
and
xchg
rdpmc
lret
sbb
gs
push
flds
xor
cs
or
insl
std
mov
hlt
inc
es
addr16
das
incl
fsubs
pop
mov
mov
and
sub
sar
test
je
xchg
scas
cmpsb
outsl
ljmp
jnp
cmp
cli
in
sbb
stc
ljmp
inc
daa
jno
xchg
mov
inc
pop
aam
jl
scas
testb
mov
and
insl
add
push
push
push
scas
rorl
jae
rcll
enter
adc
push
sub
dec
stos
mov
out
fimuls
mov
mov
out
shlb
lahf
sahf
mov
outsl
fwait
xor
xchg
adc
push
lahf
idivl
mov
xor
xchg
ja
cs
xchg
outsl
jle
sbb
rcrb
stc
pop
mov
jecxz
mov
mov
dec
mov
imul
enter
ret
std
out
inc
test
mov
repnz
ret
jne
cmc
fdivrs
pop
cs
sbb
jbe
movsb
repnz
mov
and
mov
out
in
xchg
jp
lcall
jecxz,pt
xor
xorl
mov
cwtl
js
push
xor
js
push
mov
dec
add
pop
rorl
dec
push
push
adc
cmp
mov
or
push
iret
jae
xchg
lock
and
idiv
lds
add
adc
jb
test
adc
stos
sbb
lret
mov
rorb
mov
push
stc
jb
and
fisttpll
jge
out
test
imul
pop
jmp
test
pop
data16
stc
cmc
ja
jo
sarb
push
jge
out
inc
cmp
js
imul
iret
test
rcl
sbb
jne
call
and
loop
inc
movsl
iret
xchg
mov
adc
add
std
mov
ret
push
or
in
fsub
addr16
cmpsl
push
jo
xchg
and
pop
adc
ror
xor
test
imul
iret
ret
cmpsl
notb
sub
push
xor
dec
jbe
fcmovne
cmc
andb
mov
inc
add
pop
icebp
in
lret
enter
in
push
cwtl
std
mov
sbb
daa
pop
xchg
arpl
call
mov
push
arpl
ret
lods
mov
mov
mov
clc
andl
jmp
mov
dec
push
loope
inc
lds
iret
mov
mov
mov
pop
mov
mov
cmp
idiv
sub
dec
lds
pop
fsubr
clc
adc
or
mov
lret
cltd
cmpsb
mov
sbb
push
movsl
push
mov
loopnew
xor
stc
push
popf
pop
and
stc
mov
or
fsts
jo
in
sub
lahf
rclb
fs
jmp
adc
mov
addr16
rorl
pushf
mov
jle
mov
gs
push
xor
data16
mov
subb
push
hlt
loop
dec
icebp
loopne
and
stos
mov
daa
cmp
dec
cltd
enter
rcrl
test
in
int3
loopne
hlt
int
adc
js
lret
testl
imul
sub
repnz
pop
stc
pushl
shl
xchg
add
into
dec
ss
hlt
add
lds
mov
rclb
pushf
and
mov
cmp
mov
shll
xchg
out
jg
cs
sarl
xchg
mov
pop
into
ss
testl
pushf
push
sbb
mov
test
add
ss
rcr
adc
dec
inc
in
out
test
sub
push
lods
rorb
ljmp
ljmp
mov
rcll
shlb
and
cmpsl
mov
sub
rol
adc
sbb
dec
enter
loopne
pop
jae
sti
out
in
inc
push
and
xchg
testl
das
les
or
push
xchg
cmpsb
pop
filds
jg
sub
push
cmp
pop
lds
dec
pop
gs
sub
adc
mov
mull
mov
fdivr
cmp
sbb
inc
xchg
pop
adc
lds
insb
mov
mov
mov
bound
xor
push
inc
mov
out
mov
pop
mov
sbb
setb
pusha
cwtl
or
icebp
inc
fdivl
loopne
sbb
adc
xlat
bound
push
hlt
out
push
inc
int3
fisubrs
sbb
outsb
mov
adc
scas
adc
daa
cmc
inc
xchg
jg
mov
insb
and
loopne
aad
xor
cmpsb
dec
in
lcall
sbb
cmp
ret
lods
jle
in
pushf
jnp
push
or
adc
in
aam
xchg
jnp
inc
out
mov
lds
push
loopne
push
dec
and
dec
cmp
outsb
push
pop
movl
inc
cmp
int
fcompl
jge
mov
lret
jmp
jl
or
pusha
xor
in
push
cltd
xlat
jo
mov
pop
sub
sahf
cmpsb
dec
in
lret
out
popf
iret
hlt
dec
jnp
jae
add
or
inc
pop
push
cli
inc
lock
cmc
stc
cld
adc
ficoms
imul
out
add
shlb
sahf
add
insb
das
pop
rorl
sarl
stc
xchg
mov
jnp
cmp
loope
dec
xchg
outsl
adc
out
mov
jb
dec
adc
or
in
jp
ret
and
icebp
add
pop
push
vpmovzxbd
dec
cmp
je
jmp
mov
inc
out
jle
push
cmp
jo
mov
ds
mov
pop
xchg
es
test
and
pop
mov
pushf
popa
inc
push
or
sahf
xchg
iret
bswap
and
cmp
dec
fistps
fsub
insb
out
out
hlt
rclb
fistps
push
inc
or
ja
aas
jl
cmp
mov
pop
nop
sub
aaa
fs
or
arpl
dec
jmp
push
jnp
mov
push
inc
adc
in
fwait
idivb
mov
xchg
mov
push
push
lods
xor
pusha
out
inc
cmc
xchg
mull
shlb
icebp
cmp
rclb
test
inc
les
mov
es
xchg
add
jecxz
sbb
push
add
add
ret
cmp
int
adc
negb
scas
and
enter
and
subb
jb
mov
sarb
sbb
lret
cmc
adc
pop
dec
call
cmpsb
insb
in
mov
ss
dec
sub
jg
in
pushl
lea
push
mov
fwait
sahf
xchg
pop
adc
mov
inc
daa
adc
clc
push
pop
mov
sbbb
inc
fs
pop
aaa
and
sahf
and
out
lods
inc
out
nop
add
ficompl
je
sahf
fnstenv
insb
lock
sbbl
xchg
setl
dec
in
add
adc
inc
gs
lret
ja
add
aad
adc
sahf
or
add
add
xor
arpl
xchg
inc
idivb
pop
cld
pop
inc
cmovg
test
or
cltd
pushf
or
or
push
xchg
test
pop
stc
cmpsl
mov
jns
scas
lcall
add
sahf
add
jge
fisubrs
popf
test
push
adcb
in
dec
lods
xchg
mov
sub
icebp
scas
adc
test
jbe
outsb
loopne
pushf
xlat
push
fadds
dec
lretw
dec
jge
in
adc
pop
out
fwait
sbb
arpl
sub
cmp
cmp
orb
sbb
lret
cmpsl
inc
clc
push
or
int3
jno
dec
push
and
psubb
and
lods
dec
and
mov
inc
cmp
pop
fstps
push
std
mov
cmp
in
or
dec
js
add
pmaxsw
pusha
push
and
aaa
adc
cmc
lods
cmp
ljmp
jnp
or
xchg
dec
repnz
mov
pop
mov
fsub
pop
dec
iret
inc
into
push
fs
cmpsl
mov
mov
lea
lods
adc
jnp
popf
mov
bswap
mov
fisubl
adc
or
sbb
iret
fwait
jmp
mov
inc
loope
jno
cmp
mov
or
fdivrs
add
inc
pop
mov
lret
mov
xchg
mov
dec
in
xor
nop
ret
xchg
xchg
iret
into
ja
pop
xor
fdivrs
dec
sbb
sbb
push
std
sub
sti
add
cwtl
fisttps
sbb
test
das
andl
cwtl
mov
jp
sbb
test
fs
lret
cmpsl
call
ljmp
imul
je
push
paddsw
dec
mov
or
jns
cmp
fwait
insb
and
popf
pop
cmpsl
cmpsl
mov
mov
mov
aaa
jnp
andl
bound
in
push
lods
jmp
mov
sub
mov
bound
cmp
test
in
jb
shll
jmp
mov
std
xor
jbe
data16
fs
or
xchg
push
mov
mov
inc
movsb
add
push
mov
pop
popf
std
jmp
lods
into
shrb
cltd
fs
insb
movsl
pusha
mov
cmc
ret
loopne
add
pop
cld
or
sbb
pop
add
lods
xchg
sbb
or
movsb
dec
add
inc
shlb
sahf
dec
test
shll
dec
negl
xchg
lods
push
cwtl
xchg
inc
popf
pop
aad
sbb
loope
xchg
mov
test
inc
out
push
sbb
rorl
negw
jo
iret
dec
cmpsb
ds
inc
mov
jmp
jp
sbb
ja
mov
sub
jno
mov
adc
cli
std
and
xchg
repnz
push
cltd
fs
push
cmc
nop
or
jg
xchg
gs
push
or
adc
out
arpl
lahf
or
adc
pop
sarl
mov
inc
pop
lock
cmp
xor
inc
sub
fcompl
sub
rorb
mov
arpl
sub
jno
rcrb
int3
testl
mov
inc
ficoms
mov
sbb
and
les
sbb
adc
imul
cmp
lea
adcb
and
jmp
movsl
mov
dec
roll
jnp
andb
or
loop
adcb
lock
popf
leave
inc
jnp
call
push
int3
jae
and
inc
dec
jnp
inc
cld
subps
sbb
test
push
xchg
ds
pop
test
push
fcoms
cltd
je
icebp
in
pop
cmp
shll
ret
mov
dec
aas
push
xor
mov
inc
fisubrl
push
jg
or
jle
and
mov
mulb
inc
sbb
cmp
shl
test
mov
repz
loope
mov
rcrb
bswap
sub
lahf
ret
call
push
sti
pop
adc
xor
sbb
mov
mov
jbe
inc
xchg
cmp
add
cli
popf
aaa
repz
test
mov
aam
and
icebp
scas
inc
xorb
arpl
test
aam
shlb
cltd
and
out
movsb
loope
inc
das
pop
push
cltd
mov
clc
cwtl
xchg
rcll
mov
jnp
ss
sub
repnz
add
mov
inc
cmp
andb
cmp
insl
aad
jnp
stos
orl
dec
mov
icebp
cmp
out
sub
stos
ljmp
mov
int
mov
aad
jp
loop
and
mov
mov
dec
idiv
pop
roll
push
add
cmp
or
jno
sub
dec
ljmp
pop
shr
xlat
rcll
inc
test
imul
dec
fwait
roll
das
xchg
sbb
cli
insb
or
sub
scas
sub
mov
cli
insb
push
divl
add
jp
sub
push
stos
cmp
pop
data16
push
jge
data16
daa
iret
xor
add
mov
xchg
pop
clc
insb
xchg
mov
call
ret
arpl
inc
in
movsb
jmp
jo
lds
cmp
mov
cmpsl
mov
push
scas
je
enter
stos
stos
call
jg
loopne
loop
dec
xchg
push
jle
je
push
lahf
jns
push
fiaddl
lea
sbbl
insb
movl
fldenv
jg
loopne
pop
das
lds
lea
jnp
pop
pop
pop
and
je
stos
frstor
jecxz
or
ficoms
aam
mov
pop
cmp
push
mov
mov
jb
add
mov
inc
bound
pop
adc
imul
lods
lea
repnz
mov
jo
clc
mov
sti
mov
adc
fwait
add
pop
and
clc
jmp
push
fistps
shll
mov
adc
or
inc
pusha
lret
push
inc
push
mov
imul
jge
sub
xor
mov
sub
pop
add
dec
xchg
sbbl
hlt
pop
hlt
push
inc
sub
aad
inc
inc
xor
stos
int3
fsub
push
push
ret
mov
stos
sbb
add
jae
test
or
mov
gs
gs
and
cmpsl
out
repnz
push
cmp
lret
and
mov
adc
jae
mov
pop
test
pushf
pop
jne
ret
decl
cli
into
mov
pusha
arpl
dec
repz
sub
xchg
repnz
fimuls
xchg
pop
pushf
push
or
mov
mov
lock
aam
xchg
mov
div
leave
jecxz
pusha
push
outsb
push
mov
and
pop
ds
ret
xor
xchg
fs
mov
shlb
sub
nop
sbb
adc
out
xor
xor
inc
push
pop
mov
push
jecxz
lcall
or
push
and
stos
mov
push
insb
movsb
add
inc
or
hlt
cmp
sbbl
mov
pop
movsl
pop
inc
push
leave
cs
jno
mov
lcall
adc
mov
mov
inc
push
sub
in
push
pushf
cld
and
sub
mov
lret
fwait
fs
push
push
sub
mov
mov
lcall
jbe
mov
repnz
jmp
jae
and
lock
jmp
negb
jo
inc
pop
xor
mov
mov
mov
adc
cmp
cmp
sti
adcl
jp
jae
call
data16
jg
push
in
movsl
iret
xor
loop
mov
popf
insl
pcmpgtw
jns
bound
pop
push
icebp
test
mov
adc
idivb
mov
xchg
mov
iret
sbb
mov
and
pushf
in
fistpl
outsb
push
les
movsb
xorl
int3
ss
repnz
pop
repz
xchg
lret
xchg
add
lcall
sub
mov
test
nop
arpl
scas
loope
push
jo
test
sbbl
lods
push
enter
ret
pop
sub
cmp
jmp
mov
in
push
xor
pushf
adc
xor
scas
pop
mov
loop
int
hlt
add
fstpt
add
shlb
mov
addr16
int
mov
xor
pop
sahf
xchg
lcall
xchg
hlt
sti
jae
notb
inc
adc
sbb
insb
daa
testl
imul
mov
into
gs
jne
dec
bound
xchg
pop
adc
fildl
call
jae
mov
lds
adc
push
mov
or
mov
in
lods
sahf
shlb
std
xlat
and
push
pop
sbb
jecxz
pushl
hlt
and
jo
adc
or
dec
pop
testl
pushf
sbb
inc
jp
ss
mov
outsl
push
dec
out
daa
insl
pop
leave
in
xchg
icebp
push
mov
push
ljmp
mov
ds
js
sbb
imul
testl
or
and
sbb
test
bound
ret
rcll
std
in
nop
in
mov
adc
push
xor
jnp
push
or
sub
add
call
push
decb
popa
xchg
into
or
mov
mov
aaa
sbb
mov
mov
push
pop
bnd
push
leave
rcll
sbb
insb
adc
addr16
rorb
mov
jmp
push
andb
scas
mov
inc
jns
cmc
mov
pop
test
adc
negb
pop
stos
cmc
push
xchg
addr16
push
xor
adc
addb
mov
stos
mov
cmp
cltd
ret
pop
and
arpl
push
std
sbb
ret
lcall
and
aaa
rcl
push
pop
push
fists
mov
xchg
jl
loop
loope
or
push
cmp
mov
stos
and
xchg
loop
adc
lds
iret
add
pushf
fisttpll
cltd
lret
pop
jmp
jmp
repz
or
jnp
popa
sbb
mov
xor
rcrb
fcomps
jmp
mov
jbe
dec
inc
adc
repz
fmuls
jg
int
xor
or
cmc
dec
ja
insl
jbe
idivb
ret
add
lret
pop
jbe
push
adc
dec
xor
stc
mov
dec
pop
clc
cltd
or
and
int3
aas
add
push
stc
fwait
mov
sahf
sub
or
test
daa
loop
es
push
mov
icebp
pop
cli
js
xchg
insb
mov
jne
mov
xchg
jae
ror
add
popf
mov
orl
data16
jecxz
mov
inc
roll
int3
lret
lcall
addb
inc
nop
cld
jae
xor
xor
xchg
push
clc
fmull
lock
ret
and
jg
dec
sbb
or
or
popf
sbb
or
shr
ficoms
fistpl
push
lret
sub
sbb
rcrb
xor
mov
xchg
sti
stos
daa
jno
stos
add
bound
mov
push
xor
lret
aad
cmpsl
pusha
test
insl
dec
lcall
lret
fcomps
ret
dec
mov
pushf
out
iret
hlt
scas
sub
adc
fimull
fimuls
rcrl
fs
fsubs
xchg
sahf
lea
test
out
push
add
ret
push
out
inc
pop
nop
in
mov
adc
push
push
jo
mov
jno
cmpsl
ljmp
sbb
daa
test
aaa
fldcw
pop
mov
mulb
inc
pop
fucomp
leave
movsl
push
jle
sarl
push
or
or
repnz
cmpsl
dec
popa
rclb
stos
mov
cwtl
add
outsl
pop
cmp
cs
add
pusha
jmp
adc
sub
scas
push
jle
ud2
sbb
adc
xchg
mov
sti
jbe
and
add
aaa
loop
lock
or
pop
fstp
in
int
mov
pop
pop
in
sub
or
cli
add
xchg
push
dec
add
xor
cmp
bound
xchg
repnz
pop
push
pushf
lods
jno
xchg
fimuls
test
rorl
cmpb
or
test
inc
jno
dec
xchg
cmp
repz
test
dec
xchg
mov
stos
push
xchg
jnp
incl
fnstcw
sar
dec
cmpsb
hlt
add
pushf
mov
inc
fcmovnb
jne
dec
and
push
loope
ds
inc
jl
negl
push
sub
insl
mov
in
jno
jo
outsb
xchg
mov
shl
bound
ljmp
xchg
xor
mov
push
rorb
rcl
jo
mov
popa
adc
lods
sub
lock
lret
jbe
fidivrs
jne
dec
int3
daa
sub
dec
bswap
adc
push
cmpsb
adc
mov
push
jecxz
loope
mov
shlb
icebp
mov
cmpsl
xor
or
mov
out
and
pop
mov
or
or
movsb
shrb
movb
in
push
sbb
adc
push
hlt
les
frstpm(287
xor
sti
shl
xchg
shl
mov
cmpsl
sbb
imul
cmp
movl
notl
outsb
add
push
push
add
push
sbbl
insl
cmc
add
push
xor
test
jae
cmpsl
in
lods
sub
or
std
jne
les
mov
sbb
fisttpll
pop
mov
cmc
imul
and
outsb
mov
sub
movsl
fisubs
lret
mov
jl
inc
push
mov
stos
in
pop
aam
iret
lds
mov
in
jg
ljmp
or
push
or
sti
fisubl
inc
iret
ljmp
mov
push
ljmp
inc
aam
jae
test
out
and
or
fs
scas
jmp
mov
cltd
decb
es
jns
mov
cltd
push
xorl
sbb
nop
rcr
pop
stc
in
mov
mov
inc
mov
fildl
lods
mov
mov
ds
mov
fistl
fistpll
mov
ja
mov
cmp
sti
xor
cmpl
sbb
adc
and
push
sub
sub
dec
out
xor
loope
call
sbb
inc
cs
arpl
mov
leave
daa
mov
mov
adc
lods
mul
adc
lret
mov
shr
push
cmp
pop
jo
subb
gs
sub
pop
adc
daa
out
sti
pop
aad
xchg
push
vcomiss
mov
cltd
mov
inc
movsb
movsb
cmpsb
jl
or
pushf
popf
aad
mov
xor
mov
dec
hlt
scas
sub
mov
loope
push
xlat
jno
repnz
aaa
arpl
push
lods
hlt
rorl
outsb
sti
push
mov
mov
pop
mov
xchg
or
lock
loope
or
imul
xor
mov
outsb
sbb
sbb
add
ds
xor
subb
push
or
mov
out
inc
pop
and
adcl
sub
sbb
nop
jbe
not
es
in
or
add
sub
jg
lods
mov
sub
mov
sbb
sti
ss
mul
ljmp
fpatan
cmp
out
mov
lods
add
mov
fcoml
repz
outsb
xor
in
sub
cmp
lea
dec
filds
sub
insl
push
xor
in
push
outsl
push
push
inc
pop
lahf
mov
add
push
ds
loopne
add
jge
leave
je
shl
fs
out
testl
test
stc
xchg
test
stc
nop
sbb
leave
ficoms
iret
xchg
or
rcl
push
mov
push
push
mov
loope
movsb
insb
lret
inc
inc
jno
and
jl
lods
xlat
push
push
jb
ljmp
and
xor
lods
jnp
popf
mov
lds
stc
pop
xchg
add
cmpsb
fs
rcr
addl
lock
cmp
push
mov
das
adc
aas
sub
push
mov
cmpb
out
aam
fs
mov
and
sub
sbb
xor
and
xchg
hlt
dec
test
fsubrl
scas
push
std
inc
sbb
lock
jp
call
xorb
mov
out
enter
add
pop
jae
mov
out
lds
pop
es
adc
cwtl
adcb
or
in
in
xchg
push
push
mov
ret
add
jae
mov
jae
nop
push
cmp
fcmovnbe
pop
lret
popa
mull
idiv
or
pop
loopne
mov
ja
jae
stc
mov
xchg
out
xchg
dec
mov
enter
adc
xor
sbb
arpl
es
mov
adcb
push
sahf
icebp
add
add
stos
loop
xchg
xchg
jne
add
cmp
pop
jecxz
cli
or
in
sub
sub
inc
jne
cmc
sub
xlat
jg
dec
out
enter
mov
nop
add
fdivr
lidtl
lret
in
sub
sbb
mov
pop
inc
stos
fcompl
mov
ss
or
jno
out
hlt
test
dec
mov
push
mov
add
or
call
jmp
dec
jecxz
and
es
test
add
cmp
mov
setp
mov
pop
ret
mov
mov
adc
movsl
ss
or
loop
stos
lcall
sbb
lret
push
cs
push
cmpsb
pop
test
or
jmp
xor
jmp
sbb
add
xchg
inc
xlat
sub
or
sbb
lret
popa
jl
arpl
mov
iret
pop
xchg
hlt
int
mov
loope
out
les
shlb
aaa
mov
jge
shlb
cmpsl
xor
or
mov
jmp
pop
cld
loope
xor
inc
das
inc
int3
sahf
movl
mov
inc
das
fidivrl
fldl
sub
movsl
dec
push
stos
lret
into
fstpt
dec
les
in
cmc
dec
dec
jge
movsb
mov
test
sbb
add
std
in
dec
xor
and
ss
sbbl
xor
mov
jge
mov
enter
jmp
mov
fisttpl
cmp
sub
leave
es
popf
inc
pop
xlat
xor
push
fimuls
push
mov
icebp
in
cmp
loop
or
mov
test
pop
es
sub
ror
jo
lret
lock
dec
cld
or
jne
mov
cmpsb
cmp
stos
mov
inc
mov
mov
movsb
mov
or
pop
aaa
out
jecxz
fstp
aad
push
sbbl
push
sbb
std
sti
ss
daa
in
cmpsb
xor
add
repz
jbe
test
sbb
lahf
ret
das
pop
mov
scas
or
lods
clc
sbb
scas
stos
mov
fwait
dec
in
dec
stc
mov
mov
std
add
jl
adc
js
repz
xchg
sbb
push
jp
xchg
adc
adc
cmp
adc
add
movsl
cmp
js
enter
sbb
jmp
dec
sub
adc
sbb
mov
fcomps
xchg
mov
add
sub
psubusb
sbb
rcrl
rcrb
sub
xor
dec
jl
xor
nop
cmp
int3
add
test
cmc
lea
adc
mov
lods
xor
adc
dec
in
pop
dec
nop
mov
sti
mov
icebp
dec
int
lods
prefetchw
pop
popa
mov
cmp
pop
push
jbe
gs
sub
js
mov
cltd
jbe
dec
shll
sub
dec
mov
push
packssdw
lahf
fxch
gs
insl
jnp
mov
inc
xchg
mov
cmpsl
mov
lock
fiaddl
outsl
add
pop
pop
pop
pop
ja
inc
xchg
sahf
loopne
js
lahf
jle
dec
xchg
jg
xchg
or
dec
repnz
lods
loop
jnp
aaa
movl
inc
stc
adc
sti
andb
dec
jecxz
shl
in
mov
adc
test
icebp
in
push
ja
lcall
jne
out
outsl
adc
loope
aaa
ja,pt
ss
fwait
cmp
jmp
xlat
bound
mov
ds
stc
cmp
cmc
lahf
sub
arpl
push
pop
push
cmp
xor
mov
jl
insb
pop
push
or
scas
cmpsl
gs
test
sub
or
cmp
arpl
lcall
in
mov
sub
push
inc
cmp
push
push
mov
into
mov
or
cmp
push
inc
mov
mov
add
ljmp
mov
insb
insb
rorb
sarb
movb
fildl
mov
negb
xor
and
lds
cmpsl
jbe
or
or
adc
xor
or
sbb
mov
push
xchg
fucomp
lcall
je
mov
push
outsl
insl
pop
out
inc
lcall
js
mov
icebp
test
inc
in
xchg
test
je
push
push
mov
xchg
cmp
sub
xor
mov
in
cmp
lea
iret
std
push
mov
mov
jp
mov
in
adc
cli
cli
add
pusha
add
cmp
mov
enter
out
xor
test
movsl
sub
sbbl
mov
adc
enter
and
rcr
sub
mov
popf
pusha
and
jp,pt
xor
mov
js
outsb
ficoml
push
lret
in
pop
movsl
fmull
ror
pop
addr16
push
jae
scas
xchg
and
sahf
insb
arpl
fstl
and
mov
int
jno
icebp
xor
idivb
mov
sbb
sub
pop
loop
cmpsl
mov
jb
add
adc
xor
sbb
xlat
sub
pop
adc
xchg
sbb
sarb
insl
add
xlat
imul
xlat
testb
divb
cmp
push
in
repz
adc
xchg
fsubs
aas
shlb
dec
mov
jle
and
and
cmpsl
push
cwtl
cmpsl
push
mov
inc
cmp
incb
cwtl
sbb
xor
xchg
adc
les
test
lret
in
int
cs
pusha
cmp
test
mov
clc
push
in
ret
adc
xor
xor
mov
sarb
fists
movsb
lret
leave
jg,pt
xchg
or
cmp
sbb
gs
movsl
das
xchg
shr
cmc
adc
pop
push
es
sbb
push
lock
push
shll
mov
lahf
repz
cmc
out
mov
dec
dec
ss
push
push
lock
mov
ja
ja
fwait
mov
push
fdivr
mov
cmpsl
sbb
loope
in
cmp
and
stos
xchg
ret
pop
jnp
cmp
das
or
sti
aam
xchg
add
rorl
mov
xchg
jg
jmp
push
dec
scas
aaa
jbe
cmp
or
or
xor
out
aas
sub
repz
xchg
inc
sbb
mov
daa
cmp
mov
adc
pop
mov
in
push
stos
xor
dec
lahf
lcall
js
nop
iret
cli
out
inc
pop
neg
mov
fiadds
prefetch
je
shll
cmp
xchg
mov
pop
int3
sub
inc
mov
aaa
mov
lret
int3
sahf
xchg
dec
fdivs
dec
lret
xchg
push
loop
mov
push
jne
mov
jg
push
pushf
daa
fimull
push
inc
sub
and
std
out
int
iret
inc
stc
mov
in
daa
shll
pusha
mov
sti
decb
push
aad
sti
sbb
xor
push
xchg
ss
jmp
cltd
mov
and
jle
hlt
dec
lods
or
mov
loop
or
push
enter
mov
jno
adc
sbb
mov
negb
sbb
iret
inc
jmp
sbb
cmp
aad
dec
jecxz
push
push
inc
cs
adc
into
jp
cwtl
fcmovne
sti
dec
and
in
and
adc
inc
mov
sbb
scas
mov
scas
cmpsb
cmp
inc
leave
out
mov
add
and
fldl
inc
aaa
pop
mov
cmpsl
adc
sbb
std
jmp
xchg
mov
stos
out
cmpl
imull
pop
or
sbb
into
cli
pop
fldt
rcll
adc
sub
or
jb
imul
mov
mov
xor
cmpsl
adc
xchg
dec
les
jge
pop
fsubrs
adc
jl
out
sbb
bnd
dec
push
push
call
fstl
sar
ds
enter
push
cli
mov
lahf
and
fimull
in
sbb
stc
in
push
adc
add
sbb
aaa
pop
outsl
je
sahf
movsb
in
mov
scas
jg
stos
fsubl
push
pop
pop
dec
or
sbb
xchg
pushf
pop
dec
jno
jge
push
fidivrs
ds
mov
arpl
add
pusha
jg
mov
dec
fwait
pop
insb
sbb
lret
xlat
add
mov
les
xchg
xchg
mov
aam
cmpl
sub
mov
dec
cmp
cmpsl
cmc
jo
sbb
fs
adc
xor
pusha
or
mov
mov
push
jb
or
dec
dec
fistl
adc
in
lods
jl
inc
jge
mov
xchg
xchg
push
sub
push
scas
jbe
inc
pushl
rclb
dec
adc
or
pop
pop
xchg
sbb
sarb
mov
sub
adc
clc
addb
inc
movsb
inc
dec
ret
pop
negb
jns
pop
rorb
out
inc
ficoms
pop
add
jns
xchg
decb
xchg
adc
ss
int
shll
sbb
or
gs
jge
add
sti
lea
mov
jecxz
push
inc
pop
clc
push
test
xor
ljmp
ret
lret
jmp
cmpl
mov
pop
xrelease
ret
test
arpl
call
rcrl
hlt
sahf
out
movsl
pop
sti
jle
mov
xor
push
scas
sub
into
aaa
sti
divl
jnp
sbb
push
decb
insl
repz
push
out
aad
bound
je
add
std
lahf
and
sub
xchg
cmp
or
aam
mov
push
mov
jnp
xor
es
cmp
xchg
andl
xchg
int
fcmovne
push
xchg
inc
jne
mov
pop
xchg
aaa
and
mov
or
mov
xchg
xor
mov
jns
cmp
leave
mov
xchg
push
sub
imul
adc
mov
fbld
fsubl
and
push
movsl
mov
inc
jb
ljmp
in
ja
sub
and
mov
dec
pop
pop
dec
push
dec
dec
pop
gs
js
push
incb
loopne
xchg
test
stos
sahf
aad
sbb
jp
inc
shlb
add
andb
scas
movsb
xchg
xchg
lods
sbb
pop
je
sub
push
enter
mov
cltd
decl
pop
cmp
es
insb
jge
cs
xchg
in
jle
mov
pop
mov
sbb
mov
daa
dec
out
fstps
dec
or
jns
fwait
andb
clc
imull
mov
rcll
pop
cmp
bound
ret
pop
dec
es
sub
in
add
sbb
push
xor
repz
push
enter
cmpl
xor
dec
pop
mov
mov
xchg
jb
or
fisubs
and
jne
std
pop
pop
cmp
fsubs
push
cmpsb
add
aad
jl
mov
adc
push
ret
jmp
xchg
sti
imul
dec
adc
add
mov
inc
jmp
call
push
fld
adc
pushf
imul
adc
fsubs
sbb
mov
orb
arpl
stos
pop
and
fsubp
repz
out
pop
mov
adc
test
jbe
lret
mov
negl
push
jo
addr16
scas
arpl
mov
add
push
loopne
int
inc
mov
pushf
incb
in
and
stos
inc
adc
arpl
ret
stc
int
and
or
push
pop
push
xchg
les
outsb
cld
add
aaa
xlat
in
adc
nop
fbstp
popa
and
test
es
lods
sti
test
dec
mul
retw
mov
xchg
fwait
mull
jle
cmp
sbb
push
popa
cmp
cmp
ret
into
imulb
clc
loope
xchg
sub
mov
stos
mov
xchg
aaa
rclb
loopne
in
sti
mov
clc
inc
lea
lcall
mov
mov
rolb
mov
ljmp
jmp
mov
jl
dec
jne
mov
jno
fiadds
adc
ja
push
inc
repnz
std
testl
scas
sub
mov
push
ja,pn
mov
je
ljmp
sub
inc
hlt
shrl
js
stc
leave
lahf
repz
in
push
xchg
and
aad
andl
cmp
loope
mov
stos
in
pop
in
sbb
loope
mov
add
test
test
iret
push
pop
jle
in
pusha
lods
ja
sub
gs
cmp
popl
push
std
cmpsb
ss
ret
xor
imul
pop
pop
mov
cmpb
pop
pop
add
or
pop
pop
cwtl
and
pop
cmpsb
lret
addr16
push
xchg
icebp
stc
xor
mov
add
cmp
js
lcall
mov
xor
inc
notb
in
cmp
movsl
subb
jle
fldl
outsl
pop
lock
fists
shrl
xor
jmp
adc
test
inc
sub
xchg
push
iret
or
xor
mov
insb
fucomi
test
movsb
or
notb
push
jae
popl
push
test
add
in
mov
mov
test
jno
jmp
lods
cltd
xchg
jg
push
cmp
mov
popf
repz
add
mov
aad
pop
jne
mov
lea
cltd
jnp
fidivs
mov
or
mov
orb
add
stc
mov
push
sahf
in
and
jne
or
sbb
mov
add
adc
mov
inc
pushf
mov
xor
dec
cltd
xor
sbb
pushf
rcrb
ds
fdivs
sub
pusha
jle
cmp
mov
aaa
stos
ret
mov
nop
cmp
push
fwait
lret
loope
pop
sub
scas
and
push
mov
jns
mov
loop
stos
cwtl
mov
arpl
les
push
or
repnz
notb
cmp
xor
mov
or
add
and
xor
and
out
int
push
sbb
inc
cmp
push
or
lcall
and
xchg
js
out
mull
in
lcall
incb
addb
daa
sub
pop
ja
and
cwtl
scas
dec
mov
in
xor
sbb
xchg
or
into
xor
rorl
jg
out
sbb
pushf
aam
js
sbb
sbb
aam
dec
or
ja
lock
cmp
ror
sub
daa
arpl
imul
cmc
jne
push
inc
jne
js
jno
cmpsl
imul
sbb
movsl
adc
push
sti
dec
mov
icebp
call
dec
pop
aam
adc
fadds
cmp
inc
push
cmpsl
dec
xor
in
sub
cltd
xchg
mov
jge
stos
push
add
sub
ja
push
mov
or
nop
lret
adc
mov
in
sbb
add
nop
mov
sti
cli
ja
pop
pusha
dec
test
push
dec
dec
jo
inc
inc
fsubr
addr16
sbb
shll
mov
sbb
pop
mov
mov
fistpll
or
xchg
loop
shll
lret
mov
cld
pushf
pop
repz
in
dec
lds
add
add
dec
cmp
shlb
jnp
xor
fdivl
fldcw
imul
push
gs
push
adc
aad
mov
shll
and
sub
test
jmp
adc
or
xor
pop
das
cmp
icebp
push
mov
scas
shl
and
orl
adc
add
mov
mov
cmc
loop
xor
mov
jmp
xor
sbb
lods
imul
xlat
loopne
add
daa
mov
pop
das
cvtpi2ps
ret
in
mov
hlt
imull
push
add
lahf
mov
mov
dec
mov
fcmovne
sub
or
xchg
popa
sarb
test
inc
adc
jo
shl
cmp
movsl
pop
aaa
ret
cmp
fistpl
add
and
arpl
inc
movsb
loope
inc
call
and
adc
ds
je
dec
call
jo
imul
xor
add
fldcw
push
add
orb
lods
mov
rcrb
or
and
dec
jle
loopne
lock
cmpsb
push
jnp
push
mov
sbb
push
nop
dec
add
fimuls
adc
imul
rcr
adc
outsb
push
mov
testb
aaa
fwait
push
add
pop
js
filds
mov
pusha
in
xor
cwtl
jo
insb
fmull
push
inc
sbb
mov
pop
or
xor
mov
or
adc
adc
push
push
dec
adc
jno
ss
mov
pop
sbb
xchg
cmpsl
sub
ret
out
lea
repnz
into
pop
les
mov
out
add
std
cmpsl
jb
dec
push
out
insl
dec
mov
inc
sbb
mov
jae
cmp
js
andl
je
mov
dec
mov
or
cmc
sbb
add
xor
mov
clc
xchg
or
popf
add
sbb
mov
xor
out
scas
push
sub
sbb
dec
fcmovb
daa
test
xor
call
sti
mov
cmc
and
cmp
adc
hlt
roll
or
imul
outsl
cltd
ret
mov
lret
loopne
data16
mov
ja
mov
push
cmp
jno
rol
or
push
aam
and
lock
pop
sbb
fildl
and
stc
or
dec
or
ds
sbbl
xchg
mov
adc
out
lds
mov
xchg
inc
rcrl
push
mov
arpl
sahf
sti
clc
addr16
stc
pushf
jp
jae
and
jmp
dec
cmp
jbe
jecxz
leave
mov
dec
xor
mov
lahf
rcll
push
movb
ljmp
pop
dec
ja
aas
out
sti
cmp
rol
pushf
lds
cmpl
stos
fisttps
adc
mov
out
push
sub
std
outsl
jge
cmpb
cltd
adc
subl
in
dec
ljmp
mov
pop
sbbb
lea
xlat
hlt
outsb
adc
icebp
cmp
adc
cmp
xor
ret
arpl
imul
cwtl
jg
insb
mov
mov
mov
clc
cmp
repz
jp
roll
in
jne
mov
jns
aas
adc
call
mov
or
jb
cld
cmp
mov
mov
imul
mov
dec
out
out
scas
ljmp
adc
rorl
pop
dec
in
pop
xor
push
xchg
jo
pop
fs
movsl
mov
jmp
loop
mov
clc
aam
pop
aad
ja
pusha
pop
cwtl
push
mov
bound
loop
jl
cmpb
hlt
out
mov
movsl
mov
daa
addr16
mov
test
dec
lods
fucomip
mov
pushf
jne
adc
mov
ret
fldenv
mov
sarb
adc
inc
ret
inc
scas
imul
cmp
ja
rcrb
sub
fisubs
js
jg
push
out
lods
sub
popf
and
mov
rcll
repz
mov
ret
pop
fidivrl
inc
xor
inc
jb
adc
add
cmp
push
in
dec
in
xor
push
and
inc
loop
mov
cmp
jl
punpckldq
cmp
popf
dec
cmpsb
xchg
std
sub
imul
and
aas
loop
adc
or
rcrl
jo
mov
xor
sub
test
inc
jae
xchg
loop
xchg
adcl
cmp
adc
push
sbb
leave
inc
adc
jns
jl
sub
xlat
insb
ds
dec
stos
cmp
aam
xor
shrb
add
jbe
and
test
mov
jbe
xchg
icebp
fbstp
pop
adcl
lock
xchg
bound
adc
xor
push
ret
or
popf
sub
or
dec
sbb
orl
call
mov
and
fcompl
adc
jmp
in
or
insl
cmp
ret
ret
mov
jae
add
and
add
aaa
adc
jg
xor
leave
mov
cmc
ficomps
mulb
push
lods
push
out
pop
in
push
aam
xor
xchg
and
fwait
pop
xchg
movsl
sarb
add
inc
out
sahf
xchg
push
test
js
inc
fnstenv
gs
fimull
outsl
cld
pop
lret
jno
push
repz
jno
rcrl
pop
xor
vpmacsdd
pop
xchg
add
movl
sbb
jmp
das
xchg
mov
jmp
sub
pop
push
pop
bound
pop
inc
in
ds
movsb
push
cmp
mov
ljmp
gs
fs
ss
jmp
cltd
sub
cwtl
mov
popa
mov
pop
aad
pop
aad
out
add
add
mov
leave
imul
dec
loopne
ror
xor
out
out
jg
xorb
push
jle
push
jne
cwtl
outsl
or
fidivrs
and
hlt
loope
sbb
jg
adc
pop
test
jg
addr16
js
fs
cmp
mov
mov
add
cmp
outsl
and
cltd
inc
dec
fstps
stc
xchg
xchg
fldl
dec
cs
aaa
jge
and
cmp
pop
dec
loop
ss
pop
xor
lahf
pop
into
in
iret
loop
push
jnp
pop
mov
fdivrs
and
jne
cwtl
daa
mov
mov
jae
nop
fnstsw
daa
pop
sti
aam
pushf
or
std
inc
lds
cmc
mov
cli
btc
stc
xchg
les
mov
imulb
add
rolb
or
call
lods
add
enter
push
clc
insl
fidivs
xchg
mov
xor
cmp
jnp
pop
jae
or
sbb
inc
cmp
lea
jg
sub
out
js
rcrl
xor
cmp
lret
jb
add
dec
xor
aas
aad
lods
jb
das
lret
dec
adc
mov
les
fildll
xchg
int3
and
lods
adc
out
mov
lea
cmp
loopne
push
rclb
in
iret
pop
lret
cltd
or
popf
jno
cmp
lcall
or
cmp
bound
aas
pop
lret
cmp
icebp
std
repz
sub
lahf
pop
inc
xlat
inc
lahf
cmpsl
xchg
lods
rclb
out
mov
jb
fucom
pop
addr16
sub
mov
cmp
decb
lods
cmpsb
mov
aas
pop
cwtl
fidivrl
std
or
pusha
outsb
xor
lds
cld
adc
js
jl
ret
jbe
or
out
dec
rorl
lea
repnz
sbb
jle
imul
popa
jg
aaa
insl
mov
jmp
enter
int
nop
lcall
rol
in
or
in
and
add
push
push
scas
mov
cs
jno
xlat
mov
cmp
mov
scas
jo
dec
cmpl
pop
jns
xor
or
cmp
xchg
or
pushf
push
xlat
sahf
add
lahf
or
push
test
add
adc
cmpsl
sub
mov
or
push
les
js
cmp
outsb
cmp
scas
push
scas
push
fadd
loopne
dec
cmpb
popf
lret
enter
sub
push
add
mov
push
lods
jno
inc
mov
scas
sbb
int3
mov
scas
adc
fcoms
je,pn
ljmp
bound
mov
push
mov
ja
add
adc
inc
xor
mov
popf
fwait
jp
lock
fcmovnu
fs
mov
xchg
dec
aam
repnz
mov
mov
mov
enter
mov
sbb
jns
cltd
inc
out
int3
and
js
stos
clc
ljmp
mov
rcrb
mov
mov
lahf
mov
rcl
mov
in
xor
pop
ljmp
jae
ret
add
jo
inc
data16
and
dec
divb
inc
and
sti
push
fldenv
shl
cmp
shl
stos
mov
fcmovnu
jne
fmuls
and
in
jo
add
cmp
sub
push
loop
loop
shrl
lret
clc
mov
xchg
test
fiadds
sbb
cmp
jns
daa
and
iret
test
cltd
enter
mov
sub
popf
xor
pop
ds
fs
inc
jnp
mov
in
mov
pop
mov
outsl
not
sbb
popf
je
orb
xor
jb
popa
lea
mov
insb
dec
mov
subb
pop
clc
mov
sub
in
xchg
in
shlb
mov
pop
fstpl
int3
mov
and
cmc
aam
jae
cs
sbbl
pop
sbbl
jbe
jne
outsb
pop
in
repnz
adcb
into
inc
jns
push
enter
icebp
xchg
push
sbb
xchg
xor
mov
inc
dec
sti
into
fidivs
mov
cli
jb
into
mull
lods
inc
cmp
popf
sub
jns
fisubrs
leave
adc
notl
repnz
in
xor
jns
push
je
mov
push
mov
icebp
sub
testb
jl
mov
iret
jecxz
push
mov
cld
ret
test
pop
pop
cmp
dec
mov
ficompl
ds
shrl
adc
rcr
mov
movsb
xor
gs
pop
mov
outsl
mov
mov
inc
lds
mov
shrl
inc
xlat
xchg
in
mulb
add
movsl
add
ja
int3
sahf
push
sbb
jmp
es
and
cmp
jle
jno
adc
popl
pop
psubusb
cmp
dec
xchg
mov
mov
mov
adc
jo
xor
add
sarl
push
out
movsb
inc
pop
ds
bnd
shlb
addr16
or
iret
mov
mov
out
sti
push
xchg
sub
jle
lock
fucomp
jmp
and
in
cld
push
sbb
arpl
mov
sub
sub
rol
test
aas
xchg
rorb
imul
loop
or
mov
push
lds
lods
cmp
cmp
jne
dec
addb
xchg
cltd
jp
jl
push
cli
cmp
daa
xchg
sbb
jl
stc
hlt
jns
pop
enter
push
inc
cmc
out
xor
pop
or
or
dec
shll
stc
mov
lea
cs
pop
stc
inc
jno
es
fcmovb
bound
in
in
inc
and
push
mov
rorb
lock
mov
jl
mov
push
jl
lods
pop
sti
imul
cmpsl
shlb
in
xchg
push
jbe
sbb
aas
pop
xor
jp
xchg
enter
imull
pop
push
cmpsl
sbb
and
jle
rcll
jp
pop
pusha
cmpsl
insl
adc
xor
xor
cmp
mov
push
notl
xor
mov
sarb
ret
sbb
pop
mov
jno
mov
in
shll
cmc
xchg
add
sbb
mov
push
inc
loopne
xlat
sub
mov
sub
popf
xchg
in
lar
sbb
lcall
daa
insb
sub
ja
enter
repnz
cmpl
loop
roll
inc
imul
or
ss
xor
sar
sub
into
sbb
mov
xchg
lret
adc
adc
cs
mov
in
hlt
push
jle
or
mov
adc
push
push
xor
das
cli
scas
out
cwtl
iret
jnp
scas
std
lods
push
pop
sub
pushf
loope
xchg
in
xchg
xor
out
dec
xorl
cmpsb
loop
aam
push
mov
adc
pop
scas
sub
test
cmp
inc
sarb
lods
outsb
fisubl
push
xchg
mov
and
iret
xchg
xchg
je
push
and
add
sbb
repnz
dec
jl
loope
push
adc
stc
mov
lods
movsl
mov
mov
push
cmc
loop
incb
jle
mov
jp
sub
loopne
xchg
into
or
lods
shll
negl
sub
jge
pop
cmp
jbe
hlt
aaa
add
jo
or
aas
xor
repz
fdivrl
or
out
sti
imul
xlat
dec
push
cmpsl
popf
cli
imul
scas
pop
push
mov
loopne
hlt
not
mov
fsubs
xor
xor
mov
sbb
and
mov
js
xchg
out
cld
and
outsl
test
rolb
inc
push
cld
negl
jg
or
mov
push
mov
pop
sarb
lock
cmp
push
sbb
int3
mov
adc
push
lret
xor
xor
add
out
xor
int3
cmpsb
test
jno
xor
sub
scas
movsl
cmp
scas
leave
push
mov
or
jae
mov
push
xchg
cli
pop
add
rcll
push
jo
pop
mov
mov
lret
shr
jle
add
out
adc
sbb
sti
pop
bnd
clc
orb
out
xchg
fisttpl
mov
imul
ljmp
inc
pushf
arpl
outsb
push
mull
inc
es
mov
in
pop
sbb
stos
push
mov
das
jns
loopne
jne
addr16
lods
inc
fbld
jnp
mov
sub
mov
imul
add
sbbl
mov
ret
pop
mov
stos
adc
or
lret
cmp
in
jne
lds
sub
mov
cmp
adc
fdivs
mov
out
lret
push
into
mov
shlb
jp
ror
sbb
jg
scas
jne
in
cmp
shll
scas
cmp
xor
or
lcall
mov
push
cmovs
stos
xor
or
sti
daa
cltd
jmp
mov
inc
sbb
push
mov
les
test
cmp
inc
fs
aam
xchg
jae
jae
mov
pushf
lods
sub
addr16
or
xor
and
mov
ja
inc
cmp
mov
jb
push
sbb
jge
popf
lret
cli
les
sbbb
into
dec
shll
je
xchg
mov
inc
aad
sub
call
lcall
lea
into
mov
xchg
outsl
push
pop
das
mov
ds
mov
clc
cmc
jecxz
push
mov
dec
xor
mov
stc
int3
jecxz
icebp
bound
daa
add
cltd
or
cmpsb
push
out
pop
loop
lret
jb
in
jp
loope
mov
or
and
xchg
add
pop
cmp
fnclex
xchg
inc
push
scas
lea
or
sbb
mov
cmp
test
repnz
stc
call
mov
movsb
ret
movsb
xor
mov
js
xlat
cmp
xchg
out
gs
jae
mov
shl
gs
xorl
cmp
addr16
subb
or
add
pop
push
push
cs
ss
mov
pop
pop
mull
movl
push
inc
aas
xchg
xchg
push
or
shll
sbb
mov
ret
cmpsl
test
rorl
popa
xor
push
iret
or
lret
or
cmp
inc
mov
out
mov
lds
jp
sti
mov
sbb
imul
xor
add
sub
xor
xchg
cmp
cs
das
cmp
and
pushw
imul
or
stos
mov
je
fstpt
adc
iret
or
addr16
cmp
int
mov
std
shl
and
nop
sbb
pop
push
mov
cmc
push
clc
movl
jns
test
xchg
sarb
lods
psubb
into
sub
out
add
call
pop
push
push
cmp
stc
sahf
scas
fidivs
lret
mov
mov
psubb
nop
jp
lcall
pop
add
imull
mov
lds
cmp
cmpsl
sbb
addr16
add
jo
add
fst
nop
lods
divl
pop
sahf
xor
adc
lods
adc
cwtl
leave
cmpsb
cmp
pop
data16
sbb
cmp
jmp
hlt
mov
test
outsl
adc
dec
jnp
negl
js
mov
out
test
imull
cmp
movsl
daa
aas
call
or
cmp
sbb
rcrb
scas
mov
mov
mov
jecxz
scas
pop
cmp
mov
shrl
enter
mov
xchg
out
lret
sarl
mov
add
mov
xchg
dec
sahf
pop
xor
and
add
imul
cltd
pushf
orl
ja
mov
mov
sbbl
aad
inc
sub
mov
ficomps
and
mov
inc
mov
jp
stos
or
pop
jp
neg
sbb
xlat
decl
mov
xor
and
pop
cmp
orb
mov
or
push
push
icebp
inc
enter
inc
stos
add
test
addr16
push
xchg
cmp
fistl
xchg
sbb
in
sbb
test
lret
dec
mov
sbb
pop
add
fs
out
nop
dec
or
xchg
push
fistpll
mov
lock
sarb
mov
lret
fcompl
inc
or
fdivs
cli
jl
into
std
addr16
dec
dec
push
mov
push
mov
jb
ss
movsb
inc
ret
out
pop
cmp
xor
xor
xor
push
sbb
lods
cli
jbe
xchg
leave
inc
cs
ror
mov
in
sub
fdivrl
lahf
loopne
mov
insb
push
push
test
emms
jge
cs
sub
sbb
xor
das
insl
jbe
sbb
mov
pop
adc
pusha
in
sbb
or
or
sbb
std
inc
or
fldcw
popf
addr16
sub
push
adc
cmp
fmull
orl
add
xchg
sub
adc
pop
xchg
pop
push
sbb
cmp
into
pop
push
loopne
sbb
imul
xchg
jge
inc
pop
in
dec
xor
jecxz
testb
mov
lea
mov
in
adc
add
bound
xchg
and
or
pop
into
xchg
aaa
les
imul
stos
mov
xlat
mov
popa
push
loopne
cmp
jmp
xor
cmp
sub
xchg
repz
clc
xchg
lods
xchg
fnstenv
insb
adcb
arpl
int3
cmp
add
repz
mov
sahf
out
cmp
jne
dec
test
ficompl
es
in
mov
sbb
sbb
pushl
dec
or
pop
push
cwtl
xor
jle
pop
and
or
cs
and
scas
mov
dec
in
les
aaa
outsl
lahf
sub
ss
shrb
pop
hlt
and
jg
sbb
or
call
dec
xchg
lds
loope
shrl
mov
daa
or
data16
pushw
scas
scas
push
clc
cwtl
imul
lock
bound
mov
movsl
ficoml
inc
je
add
cmova
aas
pop
popf
push
out
int
push
fsubrl
ljmp
scas
or
inc
xor
or
loopne
aad
xor
pushl
mov
lahf
xor
adc
xchg
orb
xchg
pop
andl
mov
push
cli
arpl
sub
sub
daa
or
inc
call
jp
add
mov
test
lahf
cmp
jle
cmp
lea
push
mov
aas
fbstp
mov
cmp
xchg
pop
pop
das
jle
test
add
pusha
or
out
xor
cli
rcrb
jle
xor
movl
lret
fwait
pusha
insb
mov
mov
sbb
mov
xor
ds
in
dec
mov
xchg
cmpsb
dec
adc
icebp
fcoms
pusha
lock
cmp
and
sub
ret
inc
enter
scas
mov
lods
push
icebp
cmpsb
jp
les
pop
pop
call
xchg
cmp
fwait
pop
push
add
pop
iret
xchg
add
clc
lahf
mov
inc
std
jno
subl
lods
lahf
mov
or
dec
shlb
pop
out
cmp
clc
mov
imul
ret
sub
push
or
mov
insl
lcall
adc
js
xor
insb
mov
outsl
insl
sub
pop
jmpw
pop
cmp
sbb
jno
mov
push
xchg
loop
scas
repnz
adc
jb
jo
inc
dec
cmp
test
nop
xor
cld
xchg
repz
ds
fdivrs
cltd
repz
and
cs
pop
rcr
inc
pop
adc
xchg
adc
aaa
stc
mov
std
pop
inc
inc
mov
dec
dec
mov
mov
adc
or
jo
pop
sbb
cs
add
mov
into
fsubrl
mov
push
mov
sahf
jle
xchg
ljmp
xor
std
faddl
mov
dec
xchg
lahf
xchg
nop
dec
mov
pop
test
fistl
repz
loope
daa
xor
push
and
std
xor
push
xchg
mov
enter
push
xor
int
enter
aas
scas
movsb
xor
jp
xor
scas
xchg
or
leave
shrb
push
in
mov
dec
test
lds
add
xor
adc
add
dec
repz
stos
jmp
jns
sub
mov
sub
sahf
inc
mov
insl
jnp
push
inc
jno
idivl
sbb
fwait
jo
dec
mov
cmp
xchg
and
sti
push
scas
sbb
sbb
fmuls
mov
icebp
sub
and
inc
mov
push
cmpsl
lods
sub
mov
nop
cmp
xchg
mov
neg
cli
inc
test
gs
fstpl
fwait
and
dec
jle
lods
xor
cmp
ret
adc
out
jns
repz
inc
in
ret
jmp
mov
icebp
int3
insb
pop
outsl
dec
rcl
repz
push
jmp
mov
sub
lahf
pop
adc
into
leave
ss
adc
push
rcr
xor
call
loopne
out
rcr
es
adc
bound
ret
mov
mov
stc
mov
xorl
pop
add
jl
cmpsb
jo
add
xchg
mov
jmp
test
outsb
jge
mov
test
into
pop
mov
sbb
xchg
push
adc
pop
jae
push
lods
push
push
cs
xor
dec
dec
roll
cmp
cmpb
lret
enter
push
testb
pop
jle
dec
cli
out
or
in
jnp
xor
pop
arpl
je
aam
rcrb
fdivs
scas
notb
test
sub
roll
push
pop
adc
stos
cmpsl
mov
je
dec
into
cmp
jno
adc
push
in
cmc
inc
mov
mov
jbe
lock
mov
js
outsl
cmp
stos
inc
pop
fwait
push
movsb
frstor
cmp
loopne
test
sub
add
pop
in
lea
or
rcl
sub
in
xchg
or
xor
xor
arpl
inc
int
stos
inc
lock
xchg
push
in
std
fs
mov
pop
jl
sbb
add
and
nop
cmpl
cwtl
cmp
jb
sbb
enter
adc
daa
movsb
fsubrl
sub
and
into
ja
outsb
mov
popf
xor
insb
lcall
mov
adc
jecxz
dec
or
push
adc
test
sub
cpuid
jle
fwait
jns
cld
in
push
push
inc
push
test
mov
jp
xor
pusha
mulb
push
test
pop
mov
xor
mov
or
subb
shrb
mov
mov
push
push
outsb
js
dec
cli
mov
ja
movsb
push
es
push
lds
sbbb
push
js
insl
repz
jl
stc
inc
pop
sub
iret
sub
push
and
pop
jb
jbe
daa
or
bound
sub
push
popl
adc
ds
lahf
adc
fdivr
and
xchg
insl
nop
lahf
ret
push
in
add
fwait
rcrl
inc
stc
mov
subb
in
sub
jbe
sub
xlat
icebp
inc
pop
xchg
out
pop
dec
xor
iret
xchg
or
sub
mov
daa
xor
or
stc
inc
fs
mov
cmpsl
ret
mov
ret
lret
fistpl
setb
movsl
outsl
pop
xchg
je
loope
scas
enter
pop
cmp
xchg
stos
jo
add
sub
pushf
push
stc
int
adc
inc
dec
and
ja
fs
inc
mov
adc
add
fildl
jo
adc
pop
mov
mov
shr
movsb
mov
test
movsb
push
inc
lods
ret
cmp
sbb
stc
push
ljmp
jg
dec
mov
fdivp
dec
test
arpl
push
out
ja
add
clc
xor
clc
pusha
lods
mov
and
fnstenv
rcr
out
pusha
and
jecxz
adc
popa
cld
je
mov
mov
mov
dec
cmp
out
mov
xor
pop
or
xchg
imul
mov
or
add
push
and
stos
in
cmpsl
push
sbb
cld
add
sub
or
lods
push
out
test
pop
mov
arpl
pop
fcoms
sbb
hlt
jno
mov
sbb
jno
mov
test
fsubrs
push
int3
inc
jbe
mov
sub
mov
cmpsl
fwait
rol
or
stos
movsl
push
xchg
inc
cmp
jns
cltd
sbb
call
in
call
xchg
lods
mov
sbb
scas
sbb
mov
inc
mov
ljmp
xchg
mov
mov
xor
jo
xor
pop
sbb
add
mov
aad
sbb
sub
mov
cmovnp
dec
xlat
out
out
push
mov
out
sbb
xor
jb
mov
fisubrl
inc
push
out
xchg
jmp
out
cmp
or
push
or
stos
jge
sub
and
seta
add
loop
cmp
orl
inc
sub
adc
popa
cmpsb
xchg
push
xor
das
cli
bound
data16
hlt
call
and
xchg
insb
test
jmp
insl
mov
jg
or
inc
inc
int
repz
pushf
outsl
int3
sahf
adc
push
dec
jecxz
mov
js
cmp
arpl
xchg
clc
out
test
sub
push
mov
mov
dec
imul
leave
sti
mov
loope
and
movsl
xor
jnp
inc
cmp
adc
xlat
xchg
cmp
mov
cltd
test
ret
das
lods
imul
adc
or
test
je
push
in
pop
push
icebp
mov
or
hlt
xor
loope
mov
fwait
lret
xchg
jae
dec
leave
and
jno
push
imul
jg
mov
enter
dec
lret
lcall
mov
into
lods
pop
pop
ficomps
aam
imul
fs
mov
mov
xor
stos
xor
out
ret
fdivl
push
stos
iret
insl
ret
cmp
fbld
add
bound
mov
fistps
sbb
adc
ret
push
lret
inc
jl
push
iret
xor
mov
jb
and
mov
aas
cmp
mov
adc
cltd
push
les
inc
pop
aam
or
idivb
jb
sub
cmp
and
pop
push
in
outsb
in
scas
ja
rol
sub
jbe
cmpsb
xchg
mov
ja
inc
filds
sti
das
addr16
and
mov
and
add
mov
andl
cli
nop
bound
mov
and
fdivl
push
sub
jl
insl
test
dec
or
stos
gs
dec
dec
cmp
fs
mull
mov
push
outsb
xchg
inc
call
xchg
iret
pop
and
or
push
inc
lods
cmp
out
into
cmpsb
repnz
sbb
adc
xchg
mov
call
test
in
cmpb
popa
out
int3
test
cltd
fidivs
pop
push
sbb
pop
and
sub
fists
jb
xchg
sbb
fs
sub
pusha
push
mov
js
test
mov
pop
enter
xor
test
adc
lahf
cwtl
mov
arpl
pop
mov
cmc
adc
insb
sbb
call
xchg
lods
shrb
cs
jl
jb
outsb
inc
pop
xchg
xchg
int
inc
insb
addr16
pop
call
outsb
fimull
adc
iret
dec
sti
xchg
adc
es
imul
mov
jl
pusha
jb
fwait
jno
xchg
iret
inc
dec
dec
pop
loop
add
loope
sahf
addb
push
icebp
mov
add
dec
data16
dec
inc
push
jge
mov
mov
cwtl
cmpb
shl
jge
pusha
in
sub
pop
pop
add
mov
pop
sbb
push
dec
inc
xor
cmp
mov
fisubs
not
rcrb
lods
hlt
sbb
xor
lcall
imul
and
in
test
dec
in
mov
ss
push
push
cmp
sub
daa
inc
pop
sbb
rcr
daa
sub
rcrb
inc
add
lods
inc
into
aad
ljmp
pop
jp
sbb
loopne
adc
notb
inc
cli
pop
faddl
sub
jae
lds
mov
push
inc
cmc
icebp
imul
sub
sbb
sub
sahf
movsl
hlt
xchg
lods
pop
sub
dec
cltd
ja
into
out
or
fistpl
fists
mov
sub
sub
jnp
faddp
adc
imul
and
pop
inc
cwtl
pop
pusha
movsl
cmc
mov
fidivrl
pop
xor
bswap
jecxz
jmp
fidivrs
ss
mov
xchg
adc
dec
cmp
mov
push
fsubr
jg
in
cwtl
mov
pop
push
dec
inc
push
adc
insl
lods
jecxz
jg
push
pushf
push
xchg
lock
xchg
mov
add
int3
add
shl
mov
sub
cmp
dec
fwait
and
rcrb
mov
cmp
outsb
enter
pop
xor
arpl
mov
sub
xchg
push
insb
push
imul
dec
int
inc
scas
adc
mov
or
mov
xchg
push
leave
mov
outsl
mov
mov
icebp
xor
sub
fadd
pop
cld
xchg
pusha
aad
jae
mov
xor
repz
or
dec
adc
push
mov
scas
repnz
jecxz
and
arpl
adcl
ret
jb
mov
insl
dec
inc
push
pop
lret
or
adc
push
dec
sbb
ja
sub
cmpsl
gs
fucomip
fwait
icebp
mov
lods
mov
aam
std
mov
ret
push
cmp
mov
inc
call
out
sti
push
push
dec
out
bound
enter
jnp
mov
insb
sub
sub
xchg
ret
rcrb
xor
daa
push
add
xor
inc
test
shlb
push
push
mov
mov
imul
mov
push
sbb
cwtl
jl
add
mov
xor
lea
inc
repnz
push
inc
dec
ret
xor
pop
or
and
in
dec
into
mov
inc
icebp
ljmp
shll
mov
call
pop
xor
leave
cmp
repnz
int3
dec
sbb
xchg
adc
xchg
shrb
jne
ss
inc
sbb
test
lods
shlb
in
cmp
cmp
rcll
in
dec
std
les
scas
mov
push
rcr
enter
ljmp
mov
add
mov
lret
pop
jno
stos
popa
stc
pusha
shrl
jle
or
dec
je
inc
mov
or
pushf
sar
jb
arpl
lods
xor
xchg
jne
push
fildl
pushf
shll
cmpsb
in
ss
sbb
jb
mov
js
clc
fs
mov
xchg
sbb
jge
ret
inc
std
adc
sub
or
ret
outsb
shrl
hlt
mov
rorb
mov
and
icebp
push
mov
shrb
in
or
cltd
or
mov
cwtl
adc
loop
das
and
pop
xchg
int
jle
fidivl
mov
jecxz
int
addb
mov
jb
and
not
cltd
iret
loope
inc
pushf
aad
cmp
rcll
movsl
mov
out
lahf
xlat
mov
outsb
loope
lods
dec
adc
add
mov
mov
cmp
xchg
pop
aad
out
test
and
lret
pop
inc
sub
inc
shl
and
es
mov
pop
rol
mov
sub
cltd
xchg
mov
cli
xor
inc
fistpll
imul
add
sti
jno
and
enter
push
shll
lock
add
cmp
orl
cmp
lret
dec
jno
jne
mov
add
push
test
sti
mov
dec
daa
jl
sbb
movsb
jmp
nop
mov
popf
pop
iret
pop
ja
ds
sbb
ds
das
sti
push
mov
je
xchg
outsl
xor
ljmp
mov
xchg
xlat
les
adc
xchg
mov
aas
movsl
pop
or
arpl
andb
addr16
jne
mov
bnd
fistpll
push
pushf
pop
movsl
inc
call
xchg
add
xor
decb
mov
mov
and
mov
cmp
jo
daa
xor
rcl
mov
mov
std
inc
jnp
mov
stos
lds
cmp
mov
aad
ja
mov
dec
dec
cmp
pop
mov
mov
lcall
int3
shlb
xchg
and
cmp
inc
mov
pop
out
xchg
sub
xchg
sub
adc
enter
xor
xchg
aad
xchg
dec
movsl
icebp
inc
ja
push
les
in
scas
cmp
cmc
xor
adc
imul
xchg
cmp
mov
das
adcb
add
shr
or
mov
inc
js
clc
or
xor
sbb
into
nop
mov
xlat
push
int
repz
and
lods
ficompl
ror
insb
xchg
mov
sbb
scas
mov
mov
cwtl
cmp
jne
jle
pushf
inc
xchg
jge
shl
sub
test
or
dec
xor
data16
mov
mov
adc
push
jae
je
push
nop
cmp
and
cmp
sbb
sbb
pop
xchg
lcall
bnd
add
mov
jge
gs
rcrb
ja
aad
addr16
adc
addr16
or
inc
mov
loop
and
imul
clts
stc
jp
sub
mov
jp
stos
cmpsl
aad
mov
mov
insb
sub
das
sub
push
mov
movsb
mov
das
mov
add
mov
xor
mov
iret
lock
lret
rcll
out
sahf
pop
push
int
es
jl
je
adc
pavgb
jl
mov
push
jo
mov
repz
mov
repz
call
adc
and
jp
hlt
pop
inc
or
test
add
out
aad
jle
outsb
mov
jns
je
addl
ret
mov
and
mov
fsubrs
mov
pop
mov
cwtl
jge
ret
int
add
mov
xchg
out
test
and
inc
insb
mov
fisubs
int
nop
iret
or
pop
cmp
fstpl
sbb
sub
xchg
xor
popa
mov
daa
jg
dec
push
mov
mov
mov
ljmp
jmp
gs
ss
js
aaa
cmp
sti
mov
stos
and
push
mov
es
int
ds
mov
or
jae
testb
leave
or
sahf
xor
lods
ret
xor
lret
fnstenv
addr16
divl
dec
out
dec
and
push
lahf
jae
stos
scas
mov
in
aad
repz
jbe
fcmovb
rol
fmuls
loopne
mov
shrb
sbb
xchg
bound
lea
shll
inc
arpl
rclb
mov
xor
push
fs
in
and
aas
xorl
daa
aad
test
push
mov
cld
and
shl
or
sub
mov
pop
dec
mov
shlb
fsts
subb
mov
add
jb
sarl
and
and
adc
sub
stos
orb
jne
adc
dec
mov
movsl
sub
pushf
in
fwait
lret
into
cld
push
jno
jbe
pop
fsubl
xchg
movsl
loope
movb
orl
push
push
or
test
cmp
pop
pop
push
stos
movsl
test
ficompl
iret
cmpsl
popf
test
adc
mov
ds
imul
sbb
add
sbbl
stc
mov
mov
loope
inc
jle
js
jb
call
mov
shll
jmp
xchg
pusha
add
cmp
or
gs
iret
movsl
inc
cwtl
mov
popa
cwtl
sbb
into
and
arpl
gs
adc
lock
cmp
into
addr16
enter
jl
and
sti
or
pop
pop
mov
and
xchg
xchg
or
loop
and
or
scas
mov
cmpsb
xchg
jae
pop
inc
cli
mov
xchg
fisubs
jmp
mov
xchg
fstpl
in
pop
in
das
movsb
mov
out
dec
lahf
test
shrb
and
inc
or
xchg
xchg
adc
enter
xor
arpl
inc
ret
jae
js
adc
inc
inc
adc
call
cmp
dec
add
leave
test
sti
andl
or
les
leave
and
jne
jnp
bswap
jp
fnstsw
jnp
xchg
inc
mov
xor
fsubl
inc
mov
test
add
scas
mov
ret
add
push
test
mov
stc
inc
and
xchg
pop
iret
adc
lock
jo
out
inc
push
pop
icebp
adc
mov
outsb
adc
mov
test
mov
roll
repz
imul
inc
shlb
ljmp
pop
xchg
cwtl
pushf
mov
inc
mov
and
inc
scas
adc
or
mov
cmpsl
xor
xchg
lds
push
std
les
shrl
outsb
or
adc
inc
jmpw
lock
shr
loope
cs
add
out
nop
sarb
cli
push
inc
jo
inc
jp
pop
int3
push
je
gs
mov
jae
pop
push
sub
sub
mov
ficompl
shr
scas
adc
fadds
pop
jmp
pop
add
lahf
mov
xor
inc
jle
dec
fisttpl
imul
dec
mov
mov
push
jge
mov
hlt
icebp
mov
lcall
es
push
hlt
pop
ljmp
mov
maxps
mov
fstpt
pusha
push
mov
mov
rclb
nop
fsubs
or
sub
xchg
sub
test
pushf
adc
not
int3
pusha
mov
in
mov
loope
je
insl
jp
int
mov
dec
das
aam
lret
ja
nop
pop
filds
data16
js
fildll
mov
aad
cwtl
rcr
xchg
out
sub
rorb
push
aas
sub
lea
sub
push
pop
pusha
push
movsb
in
out
ljmp
gs
jle
insl
or
xor
xchg
iret
pop
outsl
push
jne
loope
push
jae
icebp
cmpsl
imul
aad
mov
pop
mov
fistpl
test
sti
and
negb
clc
sub
push
test
stos
dec
or
fwait
or
movsb
jb
inc
adc
add
rorl
mov
mov
cli
movsb
xor
pop
popf
pushf
ret
pop
push
mov
shll
mov
dec
loope
mov
popa
loope
repz
int3
shl
lds
jns
loope
into
jno
insb
imul
into
je
xchg
push
je
mov
test
test
mov
mov
jmp
dec
push
out
sbb
mov
add
fdivp
sarl
fisttps
scas
sbb
lds
fmull
sub
stos
cli
mov
push
sub
es
jne
push
test
movsb
repnz
mov
movsb
xor
pop
mov
pop
xor
ljmp
mov
hlt
jl
cmpsl
jo
lea
in
sbb
sarl
mov
mov
outsb
mov
pop
mov
adcl
popa
aas
inc
xchg
push
and
xchg
pop
jmp
cmp
pop
mov
imul
rcrb
pusha
cmp
inc
or
adc
pop
mov
pusha
rol
fsubs
outsb
add
lret
pusha
jp
mov
add
push
add
adc
sbb
sti
lds
call
cltd
aad
ljmp
adcb
fistps
js
test
ret
fnstsw
in
xor
aas
mov
nop
mov
lret
adc
loopne
push
cwtl
scas
and
rorb
popa
mov
dec
pop
push
inc
int3
mov
gs
ret
and
sbb
fucom
ja
adc
je
xchg
mov
dec
dec
out
jg
mov
push
mov
dec
sti
xchg
jne
cld
das
dec
pop
jnp
jp
loopne
jo
add
imul
cmp
dec
sbb
xchg
push
dec
hlt
pusha
xor
add
jg
mov
cli
loop
cmp
ds
lret
scas
mov
sbb
mov
aad
lds
mov
repnz
js
nop
imul
ss
push
sub
lods
or
pop
and
addr16
inc
negl
cld
mov
movsb
mov
lcall
mov
adc
adc
xchg
popf
es
xchg
push
jl
es
push
xchg
sbb
or
fwait
sbb
pop
jne
es
add
aad
fsubrp
push
cmpsl
pusha
mov
mov
ds
cmc
addb
scas
sti
mov
or
or
pop
fwait
sub
sbb
insl
outsl
push
jl
dec
fistpl
lea
inc
mov
enter
aam
inc
push
in
mov
lea
xchg
std
mov
fwait
or
adc
sub
in
scas
pop
jae
adc
mov
test
fildll
scas
cmpsb
add
pushf
add
lahf
les
lods
mov
add
mov
sub
sahf
mov
ds
mov
jecxz
jo
push
ret
adc
lods
stc
mov
je
int
in
mov
sbb
les
jns
je
xlat
sub
or
cmpsb
cs
popf
dec
aaa
shrl
je
mov
xchg
pop
mov
ljmpw
inc
pushf
roll
ficoms
add
pop
ja
int3
sub
fldcw
loope
mov
scas
mov
rcrl
inc
test
test
push
dec
mov
mov
out
mov
aad
negb
das
lods
ja
call
ret
push
push
push
div
out
push
decl
push
shr
mov
test
mov
push
jl
sbb
fildll
data16
loop
mov
xchg
out
in
pop
add
mov
hlt
jae
leave
or
test
push
cli
adc
fcoml
fnstcw
jns
push
pop
sti
mov
xchg
or
fsubr
pop
adc
call
dec
xchg
pop
cmp
sbb
ret
mov
inc
xchg
lods
mov
out
aaa
adcb
lea
push
jecxz
fcomps
outsb
stos
negl
ss
push
mov
dec
int
mov
cmp
cltd
mov
pop
mov
pop
xchg
mov
int
pop
loop
inc
dec
mov
fdivr
mov
std
sub
xor
cmp
pop
or
fmulp
push
jmp
jge
sub
call
pop
xchg
fnstcw
rolb
sti
cmp
mov
shlb
insb
sub
outsl
dec
pop
es
sbb
push
push
add
dec
jle
mov
jmp
and
enter
testl
jne
scas
mov
sub
fidivrl
lock
push
out
cmp
lret
or
es
adc
push
ds
inc
push
or
and
inc
pop
cli
mov
repnz
cli
or
jmp
mov
negb
rol
aaa
lcall
pop
sub
int
popf
jl
adc
or
fildll
adc
jp
push
lds
push
push
or
imul
pop
es
xor
lds
adc
call
push
jmp
sti
or
jmp
mov
lea
cmp
inc
andb
push
fwait
mov
and
pop
fstp
loop
cltd
inc
incb
testb
jbe
lea
adc
mov
ja
mov
mov
mov
mov
xor
insb
ja
dec
fsts
sti
stos
ds
adc
out
hlt
jae
add
in
test
or
gs
out
fstps
pop
addr16
mov
push
mov
pop
fists
dec
jae
outsl
cld
sbb
mov
mov
mov
inc
dec
popf
imul
push
cli
push
mov
jl
roll
mov
cmc
pop
sbb
cmp
pop
and
ljmp
cmp
mov
xchg
dec
push
inc
xor
sti
xchg
lcall
fs
imul
push
mull
mov
mov
adc
dec
popa
xor
fsqrt
or
mov
cs
mov
rorb
int3
adc
fnstenv
add
loop
and
pop
mov
lds
stos
testl
imul
int
mov
sbb
ret
lds
push
add
lcall
fcoms
ss
pop
rclb
inc
mov
push
imul
ja
inc
jno
js
mov
mov
pop
outsl
insl
sti
and
repz
js
cs
ljmp
js
xor
lods
inc
xchg
inc
dec
insb
jl
or
aas
jmp
test
pop
adc
in
jge
add
divl
iret
aas
enter
pop
out
jno
sbb
stos
inc
divl
inc
push
xchg
mov
sbb
push
sbb
jge
cmpsl
int
xor
sahf
adc
lret
adc
cmp
cmpsb
mov
lea
jg
ds
cmp
out
popf
aam
pop
int3
es
mov
push
stos
pop
imul
xchg
fnsave
mov
add
fwait
cld
xchg
hlt
mov
dec
andl
aas
xchg
lods
cltd
or
into
ret
xor
hlt
pushf
xlat
in
in
add
ret
mov
outsl
lea
inc
mov
daa
cmpl
sbb
dec
inc
add
mov
in
aaa
inc
lods
and
pop
jbe
fistps
or
push
sahf
ret
jb
xchg
xlat
popf
jnp
es
sarb
insb
stos
ret
mov
les
nop
loopne
inc
std
in
sbb
popa
cltd
cmp
loop
mov
push
jmp
xor
je
mov
xchg
sbb
adc
imul
xchg
jb
imull
movsl
push
popa
dec
outsb
xchg
xchg
int3
jg
xchg
dec
cli
or
jno
mov
test
mov
aam
out
xchg
mov
xor
cmp
mov
repz
fldcw
mov
jl
es
jp
dec
pop
cmp
lods
pop
cli
push
push
sub
mov
push
add
push
mov
pop
movsl
cmp
sub
mov
mov
lods
pushf
xlat
mov
fisttpll
or
push
cli
loop
test
push
hlt
movsl
xor
daa
push
jle
cld
jge
sub
test
mov
sti
ret
std
inc
cmp
xchg
addr16
pop
mov
mov
test
sub
sbb
lahf
mov
sbb
add
into
stos
mov
sarb
ds
dec
rcl
cmc
pop
and
or
dec
mov
or
and
fwait
push
lock
lock
jge
andw
stos
mov
pop
stos
inc
mov
mov
pop
xchg
or
push
mov
jmp
ss
lods
in
adc
cmp
xorl
shrb
ficoml
daa
mov
mov
imul
xchg
lods
test
mov
sub
das
add
lods
sub
test
jl
dec
jge
sub
arpl
ljmp
in
add
add
ficompl
fcomps
or
mov
into
inc
adc
xlat
outsb
fiadds
mov
mov
sbb
push
sbb
sar
movsb
mov
and
sahf
push
and
cmpsb
mov
les
inc
sbb
xor
lcall
mov
stos
fs
hlt
jmp
fs
xchg
sbb
xchg
cwtl
int
mov
and
fisttpll
sub
addr16
adc
cmc
lcall
dec
je
dec
xchg
push
sbb
and
pop
insl
dec
stc
push
sub
mov
cmc
jo
loop
out
rolb
scas
pop
mov
xor
or
dec
test
and
or
gs
sub
fcompl
rcrb
add
xor
icebp
loopne
leave
fs
add
icebp
jg
mov
jg
imul
push
imulb
mov
add
pop
out
leave
mov
stc
cmp
cmpsl
int
xor
daa
sti
mov
xchg
fdivl
push
call
pop
addl
cltd
lods
call
jns
pop
dec
xchg
js
and
js
sarl
jmp
jp
inc
aam
es
into
lods
jl
in
fildll
mov
pop
pop
negl
outsl
loopne
leave
add
clc
mov
dec
dec
sub
aad
mov
stos
test
xor
ds
call
mov
arpl
push
mov
test
xor
sub
into
test
int
aam
ficoml
call
inc
or
imul
lds
nop
stos
or
enter
out
sub
outsl
movsb
mov
xlat
ss
inc
dec
les
aas
dec
stos
sub
lock
adc
int3
fdivs
lret
jge
addb
jecxz
bound
mov
pop
pop
push
add
call
fistpll
cmc
mov
cmpsb
push
fisubrl
xor
aaa
shrb
and
clc
cmpsb
cld
in
mov
inc
adc
ja
add
jbe
mov
push
sbb
into
pop
js
testb
div
pop
sub
xchg
mov
divb
sub
sbb
and
mov
shlb
xchg
inc
into
ss
paddsw
mov
mov
and
loope
loope
cld
jge
outsl
xchg
loop
dec
jnp
outsl
cmpb
jo
popf
lret
nop
xor
shll
js
cmp
pop
mov
notb
lock
or
sbb
pusha
iret
cmp
lods
push
into
mov
aas
loop
push
cs
int
inc
repnz
movsl
sbb
into
adc
in
ret
ja
lahf
and
mov
ljmp
and
xchg
testl
push
pop
adc
dec
sbb
test
jp
xchg
shrb
add
jmp
cmc
add
mov
pop
movsb
cwtl
add
ss
xchg
int
aaa
cmc
shr
and
int
pop
shl
int
pop
push
mov
mov
cmp
mov
in
data16
pop
in
jmp
cli
mov
xchg
or
xor
les
mov
pushf
push
out
lds
push
stc
jo
xchg
pop
and
cwtl
mov
mov
fdivrl
dec
pushf
aad
popf
loope
hlt
stc
mov
or
test
inc
clts
inc
shr
inc
ret
sbb
sbb
mov
cmp
sbb
fsub
or
je
in
sbb
out
loopne
clc
mov
push
cmp
jae
inc
mov
sbb
sub
adc
push
in
mov
popf
mov
xor
mov
mov
jle
fwait
das
imul
inc
cmp
movsb
mov
jl
push
pop
mov
fs
movsb
mov
xchg
call
sub
popf
add
pop
cmp
dec
dec
xor
frstor
sbb
lods
and
mov
outsb
sub
push
pop
add
pop
add
out
cli
jge
cwtl
inc
outsl
fildl
fsubr
or
sub
xchg
push
cmpsb
inc
adcb
sarl
pop
stos
and
push
jns
fcmovbe
rclb
sti
scas
jecxz
pop
repnz
lods
push
adc
rcrl
outsb
and
pop
daa
add
dec
pop
daa
sub
jo
and
jb
dec
call
movsb
mov
movsb
gs
sbb
testl
mov
cmp
mov
nop
mov
loop
mov
lds
sti
repz
add
mov
aad
inc
cmp
mov
scas
enter
and
mov
and
or
mov
fcmovu
sbb
add
pop
sub
leave
xchg
iret
add
notl
mov
fs
ljmp
mov
xchg
jns
jl
call
or
scas
or
ja
add
jb
ret
dec
pop
sti
inc
pop
fidivs
xchg
js
xor
pop
jp
xor
and
lods
andl
orb
adc
scas
pop
sbb
sbb
mov
jae
and
cmp
pop
pop
fdivrs
adc
into
test
call
loop
bound
fsubr
mov
idivb
negl
shll
call
out
fldt
mov
push
imul
jmp
mov
es
push
fs
leave
mov
jecxz
xlat
or
push
aaa
addl
rorb
adc
mov
mov
or
dec
and
pop
pop
fs
fs
cmpsl
mov
into
sub
add
in
push
lcall
push
aad
je
sbb
ljmp
sub
testl
jno
sar
popf
addr16
dec
mov
jecxz
int3
ja
iret
clc
push
sti
cmp
inc
jg
cmc
push
sbb
lahf
imul
inc
pop
mov
lock
mov
popa
rcr
fucomi
out
loop
dec
jb
lret
outsb
push
int
xchg
out
add
dec
lock
inc
or
int3
mov
xor
in
subb
add
aad
xchg
jmp
xor
add
or
insl
insb
mov
or
mov
mov
xchg
pop
push
xchg
or
inc
cmp
xor
dec
ds
xchg
mov
xchg
inc
jno
es
xor
fisttpl
lods
andb
cmp
pop
xor
fdivr
cld
sub
lods
xchg
shl
mov
adc
inc
es
pop
fs
shrb
xor
or
fists
fs
mov
add
jp
jb
movsl
test
jno
pop
shlb
bound
data16
roll
adc
cld
fmull
mov
cltd
ja
add
cli
lret
pop
mov
push
add
fildll
lcall
sub
or
push
pop
cs
gs
loopne
or
add
dec
or
and
popa
fistps
sbb
jg
sub
addr16
push
fwait
xchg
push
xchg
clc
sbb
es
jns
xor
leave
mov
stos
mov
jbe
or
lret
ja
mov
sub
shlb
out
in
lds
in
cld
test
add
jo
dec
push
outsb
flds
pop
mov
dec
inc
in
popa
cmp
cltd
mov
fiaddl
cwtl
cmpsb
aad
shlb
mov
fadd
outsl
sub
mov
inc
jge
scas
mov
push
dec
dec
mov
adc
lret
pop
xor
mov
and
jno
out
sbb
or
and
in
adc
adc
sbb
cld
xchg
int
aam
xchg
xor
cs
or
test
or
and
hlt
adc
inc
pop
out
jo
sbb
andb
inc
and
push
xchg
cld
mov
jle
cmp
adc
cmp
sbb
mov
leave
cltd
pop
pop
sbb
pop
dec
stos
and
pop
xorb
jl
aas
dec
mov
mov
test
push
dec
pop
mov
clc
push
adc
and
xor
imul
and
inc
fnstsw
rorl
addr16
or
xor
add
cmp
pop
add
lods
dec
sarl
add
in
jbe
sbb
jge
hlt
je
out
scas
push
fld
bnd
jmp
cmp
jmp
jno
xchg
int
aas
and
ret
idivl
adc
aad
jbe
fisubl
jecxz
imul
and
mov
push
and
rcl
and
xchg
sub
adc
je
xchg
lods
mov
mov
xchg
rorb
repnz
mov
xor
mov
jae
mov
adc
or
aad
xor
int
inc
dec
inc
cwtl
out
and
cmp
addr16
xor
enter
cmpsb
rcl
sub
or
ljmp
sbbb
or
idiv
adc
test
rol
ret
clc
lods
ficomps
mov
and
pop
cmp
mov
inc
popa
gs
xor
enter
fdivs
jae
lahf
dec
xor
fildl
lds
pushl
cli
xor
arpl
aaa
out
cli
jb
movsb
negl
repz
mov
hlt
jne
lahf
outsb
scas
into
mov
inc
loope
inc
xchg
jmp
jb
pop
cwtl
or
or
cmp
pop
mov
xlat
dec
imul
fs
pop
pop
dec
aad
mov
jns
sbb
pop
xchg
fwait
xlat
cmp
fsubrs
mov
cld
xchg
ret
ja
sub
imul
fisubs
fistpll
pushf
jbe
adc
in
jae
pop
jns
out
jle
loop
inc
andb
cmp
lcall
and
adc
enter
fildl
mov
rclb
jnp
mov
sahf
sub
imul
dec
xor
roll
nop
ret
xchg
into
cltd
les
fdivrl
ret
push
in
mov
mov
hlt
stos
dec
xor
xor
xchg
fdivr
dec
sub
mov
sub
loop
sarl
sbb
popa
jo
adc
aad
and
mov
es
sbb
jb
leave
jle
adc
ss
out
decb
push
fisubrl
movsb
push
pop
ds
loopne
dec
into
add
addb
fsubrs
ror
mov
dec
cmp
ret
xchg
xchg
pop
sub
bound
lods
mov
jne
cwtl
xor
push
push
cmp
add
lea
adc
in
sub
stc
push
add
push
sbb
xor
int3
lea
xor
adc
shlb
in
adc
sar
in
cmp
jle
inc
aaa
xchg
out
xchg
jp
int
adc
jnp
inc
lock
mov
ret
cmpsl
clc
and
daa
js
or
shl
std
push
ja
aas
xor
push
sarb
insb
cmc
jecxz
xlat
and
push
mov
add
aam
std
xchg
sbb
pushf
sbb
xor
insl
add
movsb
inc
and
lock
data16
cwtl
std
std
jl
push
aaa
pop
pop
dec
loopne
mov
lcall
daa
dec
inc
lcall
sbb
les
push
cltd
aaa
stos
lahf
outsl
js
cli
push
stos
xchg
ja
rolb
fistpl
mov
loop
fnsave
ljmp
imul
mov
fstpt
jmp
jg
lret
sahf
in
aam
pop
mov
mov
shl
icebp
aam
sbb
jo
mov
clc
imul
das
popf
js
lret
andl
inc
dec
inc
fdivp
repz
pop
fisttpl
cmp
xor
mov
xor
cmp
insl
adc
ljmp
mov
adc
scas
wbinvd
out
in
les
sbb
loope
addr16
jnp
mov
cmp
push
lahf
insb
nop
outsl
repnz
ffree
pop
cmp
dec
jns
pushf
gs
pop
arpl
leave
lock
cmpsb
test
outsb
into
in
lods
adc
push
stc
inc
or
mov
or
mov
fcmovnbe
dec
pop
jnp
pop
xor
push
mov
mov
rol
shlb
jge
in
in
dec
movsl
loope
jl
outsl
mov
jmp
inc
ljmp
stc
sub
add
ficoms
gs
clc
mov
imul
es
sub
sub
add
mov
push
les
xor
dec
mov
out
dec
pop
pop
sub
mov
addb
push
sar
pusha
or
push
jbe
jg
mov
aad
lcall
pop
stos
push
push
leave
out
cmp
fisttps
push
push
ret
adc
pop
ret
sahf
loopne
lock
fdivr
andl
or
jg
outsb
cmpsl
ja
mov
add
push
or
push
inc
mov
pusha
insl
je
jp
mov
pop
lcall
adc
mov
cmpsl
loopne
out
cwtl
jne
icebp
jmp
leave
pop
pop
lods
mov
adc
push
popa
or
xor
jae
pop
push
mov
dec
shrl
js
pop
and
scas
enter
daa
loope
xchg
out
mov
sbb
or
adc
jae
ljmp
dec
call
jae
arpl
cmpsb
sbb
adc
pop
popf
push
pop
fnsave
push
inc
mov
repnz
xchg
scas
iret
push
inc
mov
out
loope
push
dec
hlt
push
int3
das
scas
and
leave
mov
add
dec
jmp
push
jne
mov
add
icebp
sub
in
xchg
insb
ret
push
lcall
inc
xchg
and
cli
leave
scas
shll
mov
cwtl
cmp
xchg
xchg
sub
in
add
xchg
je
mov
xchg
push
push
nop
push
roll
fwait
movsl
dec
jmp
dec
mov
gs
stos
jb
mov
push
dec
cmc
iret
ds
subl
lcall
outsb
dec
aaa
into
test
inc
inc
stc
into
out
stos
jno
jae
add
cltd
inc
stc
add
enter
sub
out
mov
mov
sub
loope
mov
jl
mov
xor
decl
cmp
sub
lea
int3
popa
xchg
push
cs
cmp
testb
in
inc
out
mov
cwtl
dec
insb
mov
loopne
xchg
imul
jnp
mov
and
or
xchg
or
lods
or
std
arpl
fs
out
push
sbb
lret
out
adc
outsl
orb
push
inc
imul
cli
sub
scas
inc
lcall
shrl
pop
and
and
fs
in
sbb
inc
aas
aam
gs
in
mov
pop
sbb
repnz
cmpsb
or
pop
push
lods
clc
sub
xor
test
or
insl
fistpl
lock
dec
lahf
fdivs
sbb
xchg
scas
ja
std
out
and
stos
pop
loope
lret
sbb
add
inc
adcb
jge
and
jnp
lret
add
jns
cmp
cwtl
repnz
insb
adc
sbb
sbb
inc
shll
sub
pop
lret
nop
outsl
rcrl
push
cmpsb
int
pop
cld
daa
in
adcl
ror
cmpsb
pop
cli
call
aam
xlat
inc
cmpsb
mov
jnp
gs
test
loope
ret
int3
lds
js
imul
xchg
sub
push
jnp
pushf
and
and
and
sub
popl
cmp
iret
icebp
ds
sub
je
xor
aas
jae
pop
out
mov
inc
enter
stos
mov
jb
cmp
ret
negl
movsb
ss
pop
mov
mov
enter
sbb
cmpsl
stc
xchg
add
test
jb
notl
divb
mov
dec
pop
pop
cs
mov
sub
mov
adc
xchg
movsl
push
push
jl
xchg
jns
inc
lret
les
dec
xlat
xor
test
jg
adc
dec
daa
daa
sti
cli
pop
xor
lret
sbb
sub
subb
lcall
arpl
and
sbbb
aam
cmp
addr16
icebp
pusha
in
ss
mov
mov
arpl
pop
test
add
in
inc
pop
and
push
dec
mov
push
add
pop
js
clc
lahf
sub
sub
fs
and
add
add
mov
sbb
inc
cmp
push
and
xor
popw
dec
jbe
out
xor
dec
out
dec
stos
or
shr
cmp
jge
inc
sub
push
pop
cld
inc
mov
mov
or
or
cwtl
sahf
cli
push
test
mov
pusha
or
in
mov
inc
or
xchg
insl
cs
aam
mov
popa
sbb
les
mov
push
std
push
out
push
push
scas
xchg
push
cld
ret
jae
xchg
jle
popa
lret
cmc
notl
mov
xor
adc
cmpsb
rclb
cmp
ss
mov
mov
inc
dec
pop
aas
insl
dec
loopne
cmp
xor
inc
mov
push
shlb
scas
sti
in
lret
leave
mov
xor
cmp
or
xchg
int3
push
iret
dec
shr
clc
push
and
jecxz
xchg
aad
outsb
ja
pop
pushf
loop
fstpt
insb
mov
das
leave
loopne
jb
mov
imul
inc
lods
push
bound
inc
pop
mov
sbb
in
and
scas
jg
stos
insl
es
xor
dec
push
xchg
pop
inc
js
ja
fnstsw
pushl
jno
mov
mov
aad
popa
int3
adc
cs
jle
cmp
clc
lock
pusha
cmp
in
mov
repz
daa
push
sub
jmp
sub
sbb
xchg
sti
jbe
cmpsl
inc
sub
jbe
test
xor
in
fmulp
bound
nop
ret
dec
std
scas
xor
mov
into
and
rorb
in
mov
jmp
add
push
lock
mov
sbb
arpl
jl
mov
jno
xchg
bound
xor
or
fisubs
ja
jbe
or
push
xor
in
jg
lahf
mov
in
les
movsl
outsl
dec
mov
ficomps
mov
xchg
xchg
jbe
mov
jne
jl
stos
mov
xchg
ds
jp
cmp
mov
loopne
pop
jno
dec
cmp
arpl
mov
inc
mov
inc
adc
sahf
mov
cli
shlb
sub
shrl
nop
dec
addr16
test
xor
or
push
and
dec
mov
mov
addr16
das
inc
mov
lods
and
pop
iret
leave
push
add
xor
xor
lods
mov
idivl
mov
dec
mov
in
inc
cmpsb
sbb
aaa
iret
sbb
out
scas
pop
mov
adc
ret
xlat
into
pop
mov
xchg
jae
pop
popa
ret
add
mov
mov
ds
push
test
pusha
lahf
inc
cli
cmp
leave
enter
lcall
stos
ret
sub
pusha
jno
mov
push
test
stos
insl
push
push
xchg
xor
divl
lods
mov
jne
inc
cwtl
dec
call
jmp
test
dec
ret
jne
loope
in
gs
mov
pop
mov
cltd
add
or
test
cltd
leave
stos
mov
mov
mov
dec
lcall
add
mov
sub
mov
or
mov
pop
jmp
pop
pop
adc
cwtl
aad
jl
add
jae
cmp
lods
dec
sub
sub
jl
fwait
pop
jae
call
mov
aad
addb
in
cmpsb
push
jb
mov
mov
mov
add
add
dec
scas
mov
inc
pop
xchg
and
aam
lods
push
sbb
and
fsts
std
gs
add
ljmp
popa
push
fidivl
push
xchg
lock
or
add
int
pop
test
data16
jg,pn
jb
push
icebp
sbb
pusha
mov
ds
jnp
xchg
scas
xchg
xchg
into
hlt
or
daa
mov
jp
scas
hlt
cmc
cmp
lea
xor
out
jnp
lret
pop
push
js
add
out
jns
aad
jmp
sbbl
or
outsb
cmp
pop
loope
push
ja
fsubs
cmp
lret
mov
dec
dec
sahf
xchg
sbb
add
std
loop
lret
xchg
ds
fnstsw
in
into
xchg
add
in
insb
pusha
dec
pop
mov
push
push
add
scas
ljmp
xor
outsb
les
aam
movsb
popa
ret
int3
sahf
push
xor
popa
inc
mov
lods
pushl
push
push
ja
imul
sti
pop
xor
sub
mov
call
mov
adc
arpl
push
ret
fisubs
mov
outsl
xlat
cmp
jno
test
iret
leave
mov
rcrb
js
orb
imul
fs
mull
jl
mov
sbb
jbe
mov
mov
or
test
clc
repnz
xor
shlb
cmp
lods
ficomps
test
mov
aad
std
aaa
gs
stos
pop
jbe
push
sbb
stos
cmpsb
sub
push
ja
inc
mov
mov
ficomps
scas
ds
scas
lods
pop
mov
push
xchg
and
push
es
movnti
jb
lods
xor
dec
loope
out
push
daa
xor
cmp
inc
inc
popf
pop
mov
jns
dec
pop
xchg
add
mov
sub
inc
xor
pop
in
jge
pop
into
pop
cmc
mov
icebp
or
add
es
inc
add
mov
mov
pop
mov
sahf
fcompl
sub
adc
mov
ja
cwtl
pop
js
mov
lret
decl
push
pop
bound
mov
adc
loope
xor
add
dec
sub
mov
and
push
pushf
cs
rclb
sub
sbb
ss
rorl
lret
movsb
sub
sub
dec
sub
adc
and
cmp
mov
and
cmp
xor
stos
push
lods
push
xor
stc
push
lret
in
arpl
xchg
rorl
rcl
js
scas
jle
in
cld
repz
movsl
adc
into
inc
iret
cs
push
fwait
ds
popf
sbb
jle
mov
push
mov
mov
add
jmp
ljmp
sbb
xor
fildll
xchg
movsb
clc
or
xchg
and
inc
mov
xor
cmp
das
xchg
enter
push
arpl
jae
mov
pop
ljmp
dec
call
jb
jmp
dec
call
inc
and
add
jl
rcrb
aaa
mov
xchg
outsb
adc
or
add
cmp
outsl
lret
popa
mov
into
fiadds
adc
inc
dec
repz
jmp
sbb
push
div
icebp
outsl
dec
sahf
repz
shrb
outsl
and
lret
push
outsl
ja
jae
subb
inc
leave
rcrb
or
jle
aam
ret
leave
lea
lods
ret
inc
dec
movsb
stos
test
ljmp
bound
jno
mov
dec
mov
push
xor
xchg
rcrl
push
out
bsf
repnz
jmp
shl
adc
aad
clc
mov
dec
ficomps
xchg
adc
mov
popa
adcb
outsl
scas
cmp
dec
js
cltd
mov
mov
cmp
insb
cmpsb
pop
shr
dec
mov
lahf
testb
out
dec
mov
push
cmp
and
in
fs
jne
stc
and
sub
add
push
cmp
jmp
inc
test
dec
daa
mov
pop
dec
jmp
push
scas
in
xchg
jl
js
push
arpl
dec
cs
or
arpl
fbld
cmp
add
repz
xchg
cmp
adc
mov
dec
mov
xchg
xchg
imul
adc
jns
divl
fwait
push
xor
push
mov
jb
pusha
movsb
xor
cmp
in
daa
insl
iret
in
and
sbb
sub
test
into
mov
dec
in
add
or
jmp
or
jno
fmuls
mov
mov
rcl
push
test
mov
int
scas
int3
rorl
loop
je
xchg
aam
js
pushf
jmp
invd
add
jno
pop
ljmp
pop
mov
and
xchg
bound
cmp
mov
adc
mov
or
aaa
fs
ss
jne
xchg
test
leave
das
sahf
lret
mov
dec
mov
xor
or
test
dec
icebp
cmp
pop
xor
pop
push
je
cli
mov
sbb
or
int
movsb
push
mov
dec
add
ss
fisttpll
popa
push
push
adc
pop
inc
outsb
jnp
out
dec
test
ficomps
mov
imul
xorb
sub
cmp
test
xchg
dec
aaa
or
mov
pop
out
mov
cltd
cltd
cli
jl
movsb
mov
push
xchg
xor
adc
stos
test
cs
xchg
mov
out
lock
bound
push
fiadds
sub
call
daa
lds
sbb
lds
fcomi
ss
sbb
mov
jecxz
aas
and
orb
mov
push
rcrl
jg
xor
arpl
sbb
in
rcrb
sbb
out
jo
hlt
lahf
cmp
cwtl
cmp
pop
mov
popf
mov
dec
jp
data16
mov
pop
unpcklps
jecxz
mov
jo
outsl
pop
xchg
cltd
xlat
es
jle
fsubl
sbb
cmp
xor
nop
mov
jp
lds
cmp
mov
pop
pop
inc
inc
test
ja
sti
mov
icebp
dec
lock
icebp
add
sub
sub
jnp
xor
mov
adc
sahf
inc
mov
lods
cwtl
out
lods
mov
sub
div
das
or
in
jmp
out
xor
mov
push
ja
clc
stos
or
and
jb
rclb
test
mov
sub
notb
scas
bound
xor
mov
inc
xlat
pop
dec
adc
jne
out
jo
lock
mov
ds
and
daa
jbe
xor
repnz
mov
push
cld
ja
decl
int
outsb
jge
into
adc
adc
dec
dec
mov
mov
call
enter
aaa
push
mov
add
in
fistps
sub
movsl
fldenv
xchg
orl
pop
push
lcall
inc
pop
inc
fldenv
mov
nop
clc
and
aam
jbe
mov
sub
sbb
mov
sbb
sub
call
adcl
inc
cmc
test
paddb
mov
inc
adc
or
popa
inc
mov
cmp
pop
add
call
ljmp
jmp
push
and
out
sbb
dec
adc
stos
sbbl
jmp
cli
movl
inc
popa
pop
push
lods
movsb
scas
push
rcr
xchg
jbe
mov
int3
iret
cld
fbstp
lds
hlt
aaa
aad
pop
ret
xchg
xchg
sub
jo
push
inc
jmp
outsb
push
add
push
pop
inc
lcall
xor
mov
xlat
in
mov
ret
sbbb
mov
jl
fwait
or
int3
mov
add
pusha
in
bound
add
push
and
sbb
adc
sti
mov
and
jo
in
mov
add
fisttpll
or
and
jge
xor
and
imul
std
lods
scas
mov
ret
pop
inc
jg
sbb
jns
cmpps
cld
mov
inc
mov
icebp
mov
push
cmpsb
sub
in
call
mov
bound
add
ret
cld
or
mov
mov
push
ds
rcl
movsb
xchg
sub
mov
adc
in
mov
mov
aaa
cmovp
mov
sub
jg
rcr
pop
daa
jae
sahf
add
aaa
and
add
fstl
sbb
adc
mov
nop
in
and
mov
mov
fdivl
ficoms
mov
lds
pop
xchg
inc
pop
mov
mov
dec
sbb
xchg
add
push
bound
enter
sub
pop
icebp
out
cmp
adc
pop
pusha
pusha
stc
into
push
out
pop
js
insl
xor
cs
and
mov
cmp
inc
fistps
jns
insb
loope
loopne
mov
cmc
fcomps
lock
into
fdivs
mov
orl
xchg
insb
sub
stc
xorb
repnz
mov
jg
lock
rcrl
mov
mov
nop
push
les
addb
mov
outsb
stos
fnstcw
xorb
cmpl
mov
or
push
cld
ss
push
ljmp
jb
outsl
sbb
cmpsl
bound
aaa
inc
push
sub
xor
cmp
outsl
test
ljmp
enter
mov
push
pop
cmc
push
xchg
xor
outsl
jae
stos
mov
xchg
mov
pop
loope
fcmovnbe
negb
ret
out
or
pushf
fistps
into
cld
pop
ret
ja
xchg
cmpsb
mov
rorb
sbb
popf
or
les
lods
mov
jno
adc
adc
xchg
mov
call
loope
mov
aaa
dec
xchg
imul
ss
jae
push
and
dec
pop
jo
cmp
push
and
xchg
push
push
lods
pop
stos
dec
xchg
das
mov
sbb
push
adc
pop
inc
sbb
adc
insl
xorb
xchg
inc
and
adc
sbb
or
inc
xchg
cltd
das
jecxz
mov
pusha
lds
mov
pop
add
enter
pop
dec
ret
aas
cmpsl
out
jns
mov
inc
mov
negb
sbb
xor
push
orb
mov
adc
rcl
xchg
push
test
cmp
push
stc
icebp
cmp
mov
cli
dec
shlb
call
dec
scas
dec
push
lahf
repz
mov
in
and
or
fstpt
or
aad
adc
dec
in
sub
movsl
out
loopne
fcompl
test
add
les
ret
int3
roll
outsl
sbb
xor
repz
loop
xchg
pop
push
rclb
hlt
xchg
xchg
dec
es
mov
mov
shl
in
xchg
mov
lret
xchg
push
stos
bound
inc
xor
int3
mov
push
jmp
in
icebp
push
pop
std
mov
in
bound
inc
push
mov
rclb
push
mov
pop
sub
addr16
insb
mov
xchg
das
add
outsl
jg
testl
dec
arpl
pop
ds
leave
lret
insb
cltd
clc
xor
loopne
inc
mov
sbb
and
or
call
out
in
and
sbbb
ljmp
ljmp
ds
mov
or
clc
mov
xchg
fistpll
mov
jl
or
shrl
adc
push
ret
add
lds
sbb
adc
popf
adc
mov
mov
jb
push
or
mov
incl
sub
sarl
adc
mov
xchg
fs
jmp
fs
dec
repnz
sbbl
jbe
mov
push
pop
fidivl
icebp
pusha
out
mov
cmc
sub
mov
jnp
shl
xchg
imul
iret
js
ficompl
xor
int
cmp
dec
imulb
cld
push
repnz
scas
dec
lock
cli
mov
loope
fldl
out
not
dec
dec
sbb
dec
fisttps
mov
xchg
das
sahf
jle
and
rclb
sahf
daa
adc
pop
push
or
mov
push
cmpsl
insl
rcl
js
enter
cmpsb
fimuls
in
arpl
push
jnp
ror
xor
cmp
push
dec
inc
pop
aam
sbb
push
jno
dec
sub
fldenv
pop
ret
and
enter
jo
mov
pop
push
subl
shll
daa
push
loop
lods
shrb
stc
stos
loop
in
dec
sti
add
loop
mov
mov
dec
cmp
inc
shrl
inc
pop
lods
sbb
lods
xchg
mov
or
mov
ds
cs
push
jecxz
sahf
cmp
adc
inc
sub
push
sub
add
test
mov
mov
std
stos
pop
jno
dec
insb
xchg
out
lret
push
imul
fistps
scas
pop
in
jmp
sbbb
out
test
int3
xchg
iret
rcrb
aad
add
push
sbb
jne
cli
stc
or
pop
cld
sbb
fstps
negb
lods
dec
push
push
repnz
adc
lret
ljmp
dec
mov
stos
and
fildll
jo
add
jns
es
lods
ja
pushf
push
pop
imulb
imul
inc
leave
popf
push
xlat
jno
in
sbb
pop
push
pop
push
sbb
xchg
clc
mov
xor
shlb
je
repnz
mov
incl
orb
adc
aam
inc
dec
ret
fildl
sbb
test
pop
mov
and
or
mov
jge
sub
insb
fnsave
nop
daa
mov
push
stos
lahf
lods
test
push
sub
lahf
sub
in
or
pop
mov
mov
jae
or
sbb
cltd
shll
jmp
jp
cmp
adc
js
mov
jae
into
or
syscall
rclb
xor
jp
mov
in
jns
in
sbb
test
pop
lea
ja
and
mov
xor
sbb
push
cmp
jmp
xor
xchg
cs
fbld
imull
scas
lods
inc
mov
shll
mov
cwtl
ljmp
das
jns
jle
loop
repnz
arpl
pop
sub
clc
testb
jno
mov
movsb
cmp
ret
in
jl
and
into
jns
hlt
add
mov
out
xor
inc
adc
sbb
sub
jmp
mov
and
push
mov
mov
subb
dec
mov
pushf
inc
and
mov
dec
lds
out
in
and
call
cmp
rclb
popa
jae
mov
jns
inc
pop
fbld
test
push
lods
fstps
add
enter
xor
and
leave
gs
jb
dec
das
sbb
popa
jnp
out
xor
and
add
shll
out
in
pop
mov
or
xor
lock
jno
das
fneni(8087
popf
sbb
adc
sub
cmp
loop
and
mov
addb
or
jns
shlb
push
es
lret
inc
pop
fwait
aaa
ret
xchg
iret
cld
dec
push
data16
and
mov
enter
sbb
inc
adcb
mov
dec
add
repz
push
sarl
jge
test
aas
or
cmp
sbb
jns
lret
out
pop
jle
outsl
arpl
mov
fwait
dec
hlt
sbb
pop
sbb
out
pop
and
pop
lea
pop
push
popa
mov
inc
and
sbb
gs
cmp
cmp
jge
cwtl
mov
push
outsb
in
sub
out
adcb
jnp
inc
scas
icebp
rol
int
addr16
sub
scas
jno
dec
mov
pop
lret
dec
stc
mov
pop
xchg
push
or
addr16
js
in
icebp
jns
cltd
sub
pop
push
mov
mov
mov
fs
mov
test
ror
clc
xor
add
das
jae
mov
mov
cmp
lea
sbb
sub
xchg
and
sub
sub
jge
pop
in
adc
jae
push
xchg
mov
push
add
xlat
nop
ljmp
insb
loop
bound
out
sbb
and
insl
ret
ret
sub
sti
add
ss
mov
dec
loope
sub
addb
loopne
shlb
das
lcall
cmpb
jbe
mov
add
incl
enter
sbb
call
mov
and
testl
adc
adc
ja
sbb
mov
std
xor
sbb
inc
lods
out
or
cmp
jbe
in
arpl
pop
pop
jle
adc
mov
rcll
mov
gs
xchg
mov
push
jae
lahf
and
stos
jns
stos
add
sbb
pop
outsl
dec
inc
mov
xchg
xor
sbb
mov
ret
std
in
clc
pop
es
subl
lcall
xchg
gs
mov
test
mov
es
aas
pop
mov
sahf
test
mov
inc
adc
arpl
push
jb
adc
and
pop
pop
test
daa
enter
scas
add
push
xor
dec
mov
lods
mov
icebp
adc
scas
xchg
xchg
lds
fstpl
dec
mov
xchg
lret
mov
xor
inc
jle
ds
sbb
jo
sbb
fldl
cmp
sbb
shr
xor
ljmp
loopne
dec
jmp
pop
mov
stc
in
pop
cmp
je
test
hlt
stos
das
in
pop
jae
mov
jnp
adc
jno
std
cmp
lds
xchg
lcall
add
dec
or
mov
cli
incb
shl
xchg
pop
pop
sub
push
inc
inc
add
es
inc
rclb
dec
and
les
dec
aas
push
les
bound
lods
jmp
mov
mov
out
push
adc
enter
ret
adc
and
lods
mov
js
scas
aad
loop
ja
sbb
stos
pusha
jne
fistl
add
imul
push
rcr
scas
mov
pop
fidivs
lea
das
lds
dec
and
cld
sbb
lods
sbb
shrb
test
sub
mov
jg
or
ret
sti
xorl
or
inc
ds
and
into
adc
and
push
add
sbb
imul
sar
fcmovb
loopne
pmullw
cmpsl
mov
imul
mov
repz
es
dec
mov
jo,pt
xor
decb
mov
sbb
cmp
jmp
adc
inc
adc
jmp
pop
or
push
mov
jbe
enter
scas
sub
jne
sbb
inc
dec
cmpsb
bound
mov
popa
ret
jbe
dec
testb
xchg
cmp
aam
cmp
pop
imul
add
outsb
lret
sbb
or
mov
add
pop
je
add
adc
pushf
sbb
xchg
into
lcall
mov
sbb
push
sahf
sub
pop
stos
lret
push
pop
jne
icebp
push
xchg
and
or
adc
and
mov
addb
ss
pop
add
jp
fisubl
sub
jge
cld
leave
sti
cmp
cmpsb
pop
lcall
iret
pop
icebp
movsl
mov
int3
push
lret
imul
cltd
fnstsw
mov
or
xor
jecxz
loope
jmp
mov
adc
ret
xchg
fstpl
cmpsl
xchg
xor
cmp
mov
setge
jmp
pop
sti
les
enter
lods
push
push
cmp
in
ds
xor
mov
jecxz
sti
les
add
in
dec
cmp
push
or
dec
mov
mov
insl
cs
xor
mov
or
add
ret
sti
les
xchg
out
popa
cltd
mov
cld
xlat
scas
lahf
pop
faddl
loope
cmp
shlb
icebp
push
repnz
adc
test
test
xchg
xchg
test
sarl
pop
add
rorb
xor
sbb
xchg
enter
dec
dec
mov
aad
aaa
sub
pop
leave
mov
push
jb
lods
ret
popa
adc
mov
inc
pushf
push
je
sti
cmc
push
fnstcw
sbb
test
aam
notb
and
jbe
add
fldl
mov
adc
into
mov
pop
aas
std
dec
adc
stc
outsb
mov
stc
cmp
pop
fisubrs
repz
add
ret
jbe
or
adc
push
inc
out
or
mov
push
lret
js
rcrl
pop
push
cmc
mov
lret
xlat
xor
decb
out
loope
add
das
rorl
xchg
mov
imul
mov
arpl
mov
shrb
sub
out
loopne
nop
mov
lahf
jne
jbe
sbb
adc
xchg
and
xchg
jmp
and
mov
mov
xchg
mov
or
pushf
int
lods
lds
out
jg
cmc
test
aas
clc
dec
or
ret
bound
fucomp
insb
and
pop
les
je
inc
ss
testb
and
shl
or
fstl
mov
add
sbb
sbb
pop
xor
fists
xchg
xor
adc
or
mov
cmpb
mov
sub
inc
ret
sub
pop
lock
xor
inc
mov
jmp
fsubs
adc
loopne
cltd
out
fcmovnbe
xchg
fs
ljmp
and
repnz
xlat
icebp
les
das
adc
lahf
sub
fnstsw
inc
stos
pop
mov
mov
dec
adc
mov
push
sarl
pop
scas
xchg
loope
stos
rcr
pop
out
cs
popl
data16
in
push
int
pop
scas
pop
push
dec
imul
sub
mov
fbld
dec
mov
sbb
push
xor
xchg
repz
pusha
mov
ss
add
pop
or
push
pop
sbb
outsl
jg
or
adc
shrb
movsb
pop
dec
sub
mov
imul
aaa
lea
push
lret
dec
aam
iret
pop
loopne
int
sbb
push
xchg
xor
pop
repnz
es
or
out
xor
xchg
int3
punpcklwd
adc
fwait
xor
std
jecxz
inc
mov
imul
fnstsw
das
inc
shrb
scas
xchg
inc
je
xchg
jno
push
pop
sbbb
loopne
inc
lock
fdivrs
sbb
movsb
adc
inc
sbb
movsb
pop
enter
lcall
mov
mov
out
arpl
mov
and
ds
adc
jge
jmp
and
push
test
cmc
data16
mov
inc
lock
xor
xchg
shlb
xor
dec
mov
andb
cld
popa
icebp
test
jne
incb
addr16
aaa
cwtl
mov
cmpsb
mov
fimuls
fmuls
daa
out
or
jl
sbb
fwait
sbb
mov
iret
stos
test
add
push
jbe
adcb
movsl
or
jno
mov
xchg
xchg
xor
out
lods
incb
leave
cmp
inc
inc
cmp
arpl
and
mov
in
adc
out
xchg
fstp
and
stos
push
repnz
push
cmp
sahf
sti
dec
mov
aam
mov
les
add
cmp
jecxz
mov
icebp
adc
js
mov
mov
push
cld
call
ja
cmp
je
mov
ds
cmp
ja
cmp
mov
push
pop
enter
in
sbb
pop
sti
inc
cmpsb
aas
xor
pop
add
ljmp
lret
jns
xor
mov
dec
cmp
cmpsb
out
push
lahf
pop
pop
arpl
push
lds
pusha
stos
aas
in
sbb
dec
adc
jge
hlt
int
jecxz
je
sbb
jb
je
jmp
mov
hlt
out
or
jp
leave
lods
mov
sahf
pushf
aas
jmp
jbe
mov
pop
cmp
fs
mov
xchg
push
lahf
movsl
adc
insl
fmull
cmp
dec
es
out
cld
dec
ret
test
movsl
pushf
hlt
arpl
mov
call
sbb
lea
sbb
sub
lods
je
loope
pop
add
mov
add
aam
inc
or
cmc
cmp
in
ja
call
sarl
push
dec
pop
jl
xor
push
lret
mov
jmp
imul
push
leave
int
aam
sbb
enter
xlat
or
adc
outsl
push
sbb
test
clc
sub
mov
xor
jb
ds
jae
ss
mov
push
mov
or
out
add
out
jnp
je
mov
add
sbb
cmpsb
aas
movsb
arpl
pop
mov
ljmp
cmp
lds
adcl
orl
mov
js
push
jle
mov
mov
xorl
scas
cs
out
outsb
jmp
xchg
add
dec
icebp
js
int
and
mov
scas
mov
pop
mov
add
mov
lods
out
jmp
mov
std
clc
rcrb
mov
push
sahf
test
dec
leave
mov
ss
jns
or
orb
sub
jg
jg
dec
sbb
out
mov
inc
push
fidivrs
pop
ret
dec
jg
stos
push
mov
dec
in
pop
adc
sub
imul
xor
push
adc
mov
push
lea
cmp
movsb
push
cvttps2pi
lcall
cld
sbb
adc
sub
push
rorb
lahf
jo
xor
mov
cmpsl
fildl
inc
push
std
dec
dec
and
pop
fisttpll
push
dec
dec
xchg
leave
mov
loop
sub
lods
sti
iret
cmp
clc
insb
clc
lret
xchg
aaa
mov
dec
and
mov
std
loop
mov
cld
lods
mov
jmp
cmp
mov
add
test
int
inc
mov
icebp
aam
xchg
imulb
push
add
jg
pushf
fmul
jb
icebp
jle
es
movsb
mov
into
xchg
leave
cli
mov
popa
cmp
iret
push
sub
cltd
in
in
jl
out
daa
add
imul
sub
iret
call
aaa
push
push
mov
add
push
mov
nop
push
xor
sbb
cwtl
dec
jno
icebp
repnz
xchg
sahf
adc
aad
mov
xchg
mov
pop
out
inc
push
imul
dec
inc
and
outsl
inc
add
dec
pop
lods
data16
push
das
mov
jl
pop
pop
lods
or
mov
jae
repz
stos
jle
mov
repnz
out
in
mov
pop
scas
adc
pop
sub
fstps
lahf
cmpsl
mov
dec
mov
jge
pop
jl
movsb
sub
mov
ds
mov
lock
mov
es
mov
sub
sbb
jno
enter
es
xchg
xchg
cmp
lret
add
dec
or
ret
out
jno
add
into
pop
xchg
or
dec
push
and
scas
pushl
lea
cmpsb
push
inc
mov
lods
fs
int
pop
inc
xchg
inc
sub
add
outsb
lahf
push
in
es
insb
stos
stc
inc
jno
mov
sbb
xchg
and
mov
lds
jno
divl
adc
jle
inc
mov
jg
js
jb
mov
xchg
jp
clc
inc
add
lods
nop
test
mov
mov
xor
stos
ljmp
sti
sub
jnp
int3
or
aam
xchg
jp
lret
xchg
popf
mov
sub
fxch
push
push
into
dec
push
adc
push
cmp
cmp
call
les
inc
dec
mov
mov
fs
mov
loopne
imul
mov
mov
inc
push
js
pop
and
sahf
mov
data16
ljmp
dec
rorl
fisttps
cli
test
jmp
mov
push
mov
inc
mov
fidivrs
cwtl
popa
pop
dec
in
lds
loope
or
outsb
pop
jg
cmp
sahf
adc
mov
jge
int3
in
sbb
cmp
pushf
mov
lea
inc
cmp
mov
or
or
mov
pop
movl
add
insb
imul
dec
outsl
xchg
daa
ds
cld
andb
inc
mov
lret
jb
rcr
je
sbb
mov
mov
inc
mov
jno
mov
sar
xchg
or
movsb
sub
adc
jno
bound
nop
fnstsw
jae
out
int
jle
dec
jp
ret
cld
adc
sahf
mov
inc
mov
mov
jle
push
inc
jno
or
and
shlb
ret
or
jns
shll
popa
lds
jg
adc
dec
adc
ret
xor
xor
das
sub
xchg
cmc
xchg
mov
lret
imul
dec
jle
aad
inc
das
jecxz
pop
pop
xor
insl
or
cmp
loop
mov
mov
xchg
lock
movb
push
movlps
sub
push
push
inc
mov
or
mov
mov
cmc
pop
cmp
pop
les
xor
mov
addb
xor
loop
cld
xor
ret
cltd
push
sub
inc
mov
shrb
dec
in
popa
nop
lds
jle
adc
in
je
test
xchg
xchg
outsl
inc
imul
ret
and
adc
jge
mov
fnstsw
shll
repz
sarb
xor
or
inc
hlt
mov
pop
push
test
scas
adc
or
out
adc
filds
pop
into
icebp
outsb
mov
icebp
out
into
test
add
xchg
dec
inc
dec
ds
mov
adc
leave
outsb
and
data16
stos
adc
aaa
mov
xchg
add
dec
jp
mov
sbb
xor
push
push
sbb
sub
fldenv
and
mov
push
subb
jl
inc
mov
push
mov
orl
dec
or
repnz
or
pop
je
or
cmp
dec
dec
add
ljmp
pop
xor
fiadds
cmpsl
int3
fiadds
cmp
shll
mov
shlb
es
pusha
and
and
dec
push
and
and
cmp
mov
inc
mov
rorb
inc
dec
pop
pusha
out
mov
xchg
jb
and
in
out
sub
pop
xor
add
push
mov
dec
add
cmp
xchg
out
scas
mov
mov
add
jg
or
mov
mov
adc
icebp
adc
xor
enter
xchg
cmp
pop
pop
jne
inc
insb
fwait
pop
sahf
mov
nop
dec
out
outsb
scas
xor
add
jmp
in
shl
pushf
inc
es
mov
idiv
mov
or
nop
adc
sub
add
or
aaa
mov
mov
loop
loope
rep
adc
int
add
imulb
faddl
pop
lods
mov
add
inc
sub
mov
xchg
inc
jmp
mov
repz
jle
lahf
add
mov
push
ds
clc
mov
dec
sub
aam
sub
enter
mov
push
idivb
pop
repz
xchg
repz
jno
add
cmp
nop
test
icebp
test
and
or
sbb
dec
in
inc
or
xchg
lods
jecxz
inc
and
sub
insl
lcall
imul
mov
popf
and
movsl
jg
insb
xchg
mov
add
dec
imul
mov
lcall
add
fldl
fiadds
inc
sbb
xchg
lcall
test
pop
insb
xchg
jge
arpl
in
mov
lods
inc
mov
jb
stos
and
lods
gs
jp
add
mov
mov
dec
gs
js
clc
pop
add
xchg
test
roll
mov
mov
inc
pop
cmp
les
ficoms
dec
test
xchg
cmp
lds
pushf
je
xchg
jnp
xchg
test
shrl
mov
test
and
sti
inc
aaa
cmpsb
push
and
lret
or
mov
or
adc
sti
mov
pop
ds
ret
push
das
xor
rol
mov
push
mov
and
out
add
das
adc
add
mov
or
push
xchg
jbe
int3
pop
fsub
insb
cmp
push
mov
arpl
js
lahf
xor
dec
rolb
mov
imul
mov
or
dec
pop
lea
mov
outsb
repnz
pusha
mov
sbb
mov
cld
fmuls
jno
das
subl
add
inc
out
mov
repnz
dec
sbb
or
add
and
add
sahf
stos
adcb
shrl
mov
jb
sbb
enter
cld
adc
add
mov
mov
and
fdivs
dec
fcoms
mov
mov
push
loope
sub
add
neg
mov
mov
dec
jne
dec
in
cmp
push
std
or
loope
or
gs
or
icebp
std
jp
ljmp
pop
out
call
xchg
lock
pop
lds
scas
jbe
mov
xchg
mov
in
adc
jg
clc
mov
cmpsb
push
in
jp
inc
sub
jecxz
sub
je
imul
sbb
mov
add
aam
xor
xchg
test
das
push
push
aam
mov
mov
orl
rolb
ficoml
ret
mov
cwtl
sbb
push
mov
ds
pop
add
pop
sub
or
mov
fsubs
sub
push
cmp
jns
cmp
pop
mov
test
loop
mov
push
add
cmp
jecxz
push
dec
movsb
sub
pop
xchg
movsb
sbb
mov
cmp
sub
jb
pushf
stos
das
add
jb
mov
jmp
cmp
repnz
add
test
aas
sbb
mov
or
adc
add
cld
scas
outsl
insb
add
dec
lcall
movsb
andb
aaa
fsubr
imul
xchg
int
insb
das
rcrl
jnp,pt
pop
pop
inc
lret
cltd
jmp
ret
inc
leave
in
cmp
sti
clc
int
add
and
dec
fdivrl
negl
inc
mov
popf
iret
lods
jg
rcl
add
test
loop
movsb
lods
fists
jae
and
lret
rcll
stos
jl
loope
out
test
call
jns
stos
loope
jae
into
inc
xchg
xlat
pop
das
faddl
int
pop
mov
in
mov
call
inc
and
out
or
loopne
loopne
cmp
mov
lea
mov
mov
add
cmpsl
fildll
dec
movsl
sbb
lock
in
adc
lods
jmp
pushf
xchg
xchg
cmp
addr16
adc
xor
stc
push
pop
rcrl
and
test
push
mov
inc
push
into
jecxz
dec
icebp
sub
dec
pop
divb
out
test
push
xchg
out
pop
arpl
sbb
push
and
sub
iret
fisubrl
movsl
fdivrs
or
test
cmp
aam
mov
mov
out
das
insl
popf
fldt
lret
xchg
ret
pop
sbb
push
insb
xlat
cmp
or
mov
jp
hlt
sbb
dec
in
lods
ret
push
roll
fwait
ret
mov
and
cld
idivb
in
or
imul
jbe
pushf
jmp
pop
pop
lcall
push
push
in
cmp
adcl
cltd
mov
or
mov
and
bound
xor
mov
dec
aas
jecxz
mov
xor
addr16
lret
js
cmp
fsubrp
mov
dec
enter
bound
push
mov
pop
xor
decb
test
push
fsubl
into
test
cmp
lret
sub
leave
ss
jecxz
cmc
inc
jo
adc
jb
xchg
sub
cmp
push
cmp
push
mov
movsb
dec
bound
pusha
mov
stos
pushf
adc
mov
inc
dec
mov
push
jmp
aaa
xchg
mov
jne
sbb
in
dec
cmpsb
inc
mov
shrl
in
add
ror
lcall
adc
bound
sub
adc
pop
adcl
int
in
mov
xor
xchg
clc
xor
lahf
enter
lea
push
fnstsw
iret
cwtl
hlt
pop
and
mov
sbb
sub
fildl
mov
dec
xchg
lret
dec
mov
xlat
mov
dec
fidivrs
fsubr
add
cltd
sbb
loope
sbb
cltd
mov
mov
jne
and
push
stc
js
cmc
add
in
rorb
loop
pop
nop
add
lock
lea
mov
pop
or
xchg
sub
arpl
jae
jno
xor
or
stc
pushf
mov
cmp
in
into
cmc
jo
push
orb
xor
outsb
xorb
adc
adc
pop
inc
push
in
jge
data16
cmp
sub
mov
cmpsl
test
mov
xchg
frstor
xchg
rolb
or
adc
cld
bnd
loope
dec
xchg
mov
jg
test
js
daa
call
leave
loope
in
push
xchg
sbb
mul
mov
imulb
lret
adc
cs
addr16
push
fldl
rcll
inc
and
adc
dec
mov
repz
push
imulb
cmpsb
je
daa
xor
mov
leave
adc
loop
cmp
pop
jb
xchg
hlt
mov
cmp
popf
pop
sbb
scas
pop
outsl
adc
mov
ljmp
cwtl
pop
in
pop
cmp
out
or
cmp
int
inc
ljmp
ret
xchg
es
push
push
sbbb
ret
inc
adc
or
icebp
adc
test
pushfw
mov
stos
outsb
ds
jnp
popa
push
shr
adc
daa
sub
xor
push
data16
xchg
push
int3
lods
add
clc
mov
and
js
and
mov
sbb
fcompl
push
insl
xchg
xlat
inc
jp
push
lds
sbb
cmc
out
mov
or
mov
rcrl
mov
inc
repz
popf
pop
les
fstps
pop
xor
shlb
push
add
cmp
stos
cs
xchg
aas
lret
inc
jbe
and
lret
test
ja
jl
xor
scas
ja
js
pop
scas
pop
push
lock
loop
lock
jmp
or
repnz
xchg
push
mov
or
mov
add
enter
push
mov
mov
popf
pop
and
jae
cltd
sbb
mov
push
outsb
inc
in
insl
sub
mov
fld
xchg
andb
pop
mov
push
xor
mov
jnp
out
fwait
shl
dec
cmp
xchg
popa
cmp
mov
clc
test
sahf
fwait
inc
sarb
jno
jne
in
loop
push
mov
shll
fldt
pop
lcall
xlat
pop
push
nop
mov
fs
mov
push
sub
sbb
hlt
adc
jne
or
fcompl
fcmovnbe
aam
inc
sub
inc
loope
pop
movsb
scas
adc
insl
mov
sbb
pop
int3
stos
test
loopne
cmp
pop
idivb
push
and
pop
lods
dec
xor
mov
sbb
adc
cs
cmpsl
into
xor
xor
ljmp
add
mov
jmp
xlat
or
int
in
lahf
inc
cmp
jae
stos
inc
jb
icebp
add
nop
scas
sarb
das
in
pop
fldcw
pop
mov
js
test
mov
arpl
out
or
fldt
enter
ret
xchg
jle
add
cmp
xor
in
cmpsb
jno
dec
pop
ja
popf
outsl
in
xor
cmp
mov
cmp
inc
and
sahf
adc
pop
xor
dec
movsl
insl
daa
js
or
fimull
idivl
mov
xor
and
mov
fwait
lret
rcrl
pusha
inc
insl
in
lcall
inc
addr16
stos
aad
pusha
push
add
inc
fildll
mov
lahf
inc
and
push
enter
enter
dec
in
pop
inc
fildll
jle
push
jo
cmpsb
mov
popa
mov
fcompl
xchg
sub
xor
sub
orl
sbb
addr16
or
inc
movsl
inc
jp
add
jbe
mov
inc
pop
xchg
cld
dec
stos
inc
xor
data16
rcrl
and
ret
lcall
push
sbb
out
add
cltd
in
mov
pop
testl
arpl
xor
mov
jle
in
mov
mov
fucom
pop
cltd
sahf
jbe
loop
popf
cmp
sub
mov
sbb
mov
dec
notb
mov
ljmp
orl
sub
fbld
cmpsl
jg
cmp
scas
orl
push
mov
in
inc
mov
fcomps
mov
dec
into
int3
jne
xchg
scas
adc
mov
add
push
loopne
lcall
pop
inc
sbb
push
hlt
int3
inc
cwtl
data16
enter
and
aaa
hlt
push
aam
js
iret
into
fcoms
aaa
xor
pop
sub
jl
das
std
pop
scas
xchg
inc
js
cmp
pop
xchg
cmpsl
mov
jns
aas
and
stos
in
jne
lea
adc
test
fnstenv
xor
hlt
repz
xorl
cmp
cmpsl
int
shl
inc
imul
or
mov
push
aam
dec
inc
out
xchg
pusha
out
xchg
imul
daa
je
inc
mov
negb
mov
push
inc
test
and
push
mov
jle
mov
dec
mov
pop
shl
sub
inc
rcrb
mov
jmp
lret
pop
sub
push
pop
hlt
fsubrl
inc
cmpb
jmp
inc
stc
dec
outsl
xchg
adcb
mov
mov
xchg
sbb
mov
mov
pop
ret
or
mov
inc
add
cmpsb
pop
mov
stos
xor
nop
inc
cmovl
cwtl
mov
cmp
ss
add
pop
pop
icebp
je
cmp
xchg
aaa
xchg
mov
sub
push
mov
push
ds
iret
loope
lahf
scas
mov
add
dec
iret
orl
shrl
sub
mov
int
jo
sub
iret
add
cmpb
cld
daa
mov
adc
jecxz
sub
pushf
jo
stc
add
xchg
insl
cld
push
enter
nop
gs
mov
cmp
sub
hlt
jmp
jmp
cli
les
daa
mov
sbbl
cmp
xor
sub
int3
push
scas
insb
lret
or
fnstenv
std
stos
int3
mov
leave
xor
sahf
sub
scas
dec
cmpsb
stc
jle
rclb
sub
lods
xor
xor
jle
xor
dec
adc
push
jmp
idivb
mov
dec
cmpsb
repz
sahf
outsb
sbb
inc
dec
sbb
pop
fdivp
ficoms
addr16
cmpsb
inc
add
sbb
inc
push
lds
or
rcrb
faddl
cs
xchg
jl
dec
cld
loope
adc
adc
shrb
lcall
fs
pop
and
es
xchg
int
daa
mov
in
sbb
sbb
bound
sub
or
imul
pop
insb
or
cld
sarb
lahf
cmp
push
es
inc
sub
sbb
xchg
xor
negb
or
xlat
nop
and
or
sti
push
cltd
push
add
stos
pop
lds
fcomps
out
mov
xchg
addr16
rclb
in
sbbb
repz
in
lcall
push
js
movsb
mov
in
cltd
and
test
loopne
test
xchg
lods
ret
inc
das
xor
sub
mov
or
incl
aaa
sub
roll
dec
jne
cmpsl
aam
xchg
in
xor
pop
add
shr
arpl
lods
dec
mov
fistps
jp
pop
jb
sub
sub
popf
decb
into
pop
and
mov
pop
std
pop
repz
push
rol
mov
pop
cmc
repz
cltd
test
sti
mov
dec
ss
add
cmpsb
jge
popf
dec
push
xor
popa
mov
bswap
rclb
xchg
js
fidivrl
push
xor
rsm
jl
mov
bound
push
pop
aam
scas
jl
or
mov
sub
ljmp
jg
and
incl
gs
aaa
cs
fisttpl
dec
dec
cmpsb
outsl
mov
jb
sbb
in
iret
sbb
jae
ret
pop
fmull
addr16
insl
mov
call
xor
dec
outsb
adc
test
xchg
inc
xchg
xchg
pop
xchg
bound
inc
popa
fisubl
sbb
sbb
int3
test
jge
or
clc
dec
dec
push
popa
in
xor
mov
or
jge
mov
sbb
push
sbb
mov
xchg
inc
ljmp
sub
insl
pop
cmc
cltd
ljmp
cld
stc
cs
jg
push
dec
aam
push
popf
daa
mov
adc
sbb
xor
imul
mov
loope
dec
pushf
fisubs
inc
mov
ret
pop
jle
in
xchg
jae
and
cmp
clc
cld
and
fsubs
imul
out
hlt
addr16
enter
cmpsl
or
cwtl
inc
jbe
mov
rol
jne
pop
popf
sub
imul
mov
in
into
cmp
mov
int3
and
nop
jecxz
mov
jno
and
rol
ja
push
out
push
int3
push
inc
fisubs
pop
fmuls
add
xchg
add
jae
fxch
sbb
jecxz
add
jmp
test
mov
add
roll
aaa
popa
shll
movsl
jb
pop
rorl
xchg
xor
cmp
and
fcompl
adc
jle
jmp
and
jae
addr16
add
popa
stos
loope
pop
mov
and
add
outsb
push
push
into
mov
nop
xchg
nop
pushl
pop
ror
shll
cltd
stos
pop
cwtl
pop
lods
mov
jge
mov
mov
dec
out
lods
imul
adc
add
mov
daa
ja
imul
popa
mov
inc
mov
push
std
fstpl
ljmp
repnz
xchg
lock
test
xor
ds
pop
xchg
cmp
pmaddwd
dec
sahf
mov
outsl
aas
cld
adc
adc
loopne
lods
mov
test
pop
into
adc
push
in
or
pushl
sti
jl
fldl
cwtl
pop
inc
sub
je
mov
or
pop
pop
sub
ja
loope
jg
add
xchg
inc
pop
pop
iret
jecxz
clc
mov
addr16
or
fldcw
fdivl
xchg
stos
mov
cmpsb
push
popl
pop
fiadds
jmp
adc
sub
inc
push
shrb
sub
sbb
popa
jae
adc
cmpsb
sbb
aas
mov
xchg
mov
push
xchg
outsb
les
and
cmp
or
adc
daa
inc
pop
or
mov
mov
sarb
roll
mov
mov
test
inc
jp
mov
bound
add
xchg
cmp
loop
mov
sub
sub
pop
cmc
adc
push
xchg
mov
mov
cwtl
dec
orl
adc
pusha
dec
inc
dec
cltd
mov
push
add
cmpsb
pop
xor
nop
jno
pusha
leave
cmpsb
sub
cmp
jo
in
orb
dec
and
lods
sub
std
cs
push
stos
lahf
push
inc
xchg
test
cmp
lahf
mov
xor
xor
xorb
cmp
add
jbe
pop
push
in
dec
mov
inc
fsubrs
leave
loop
add
jne
mov
cli
out
outsl
xchg
dec
xor
stos
jmp
mov
call
pop
decb
nop
lea
cmc
stc
jle
rcl
pusha
jl
xlat
stos
inc
xchg
lods
ja
enter
jmp
mov
inc
movsl
loopne
lea
mov
and
scas
add
lret
mov
push
cmpsl
xor
cmpsl
imul
mov
dec
addr16
or
add
outsb
shlb
imul
je
pop
mov
sarb
es
lea
mov
fsubr
pop
add
dec
dec
in
xor
sub
adc
pop
and
cmp
or
cmpsb
mov
movsl
adc
stos
aaa
xchg
das
iret
pop
rclb
es
push
loope
in
mov
es
lret
subl
cs
adc
mov
out
inc
lock
fstpt
jnp
xor
sub
xor
cmp
inc
sahf
gs
out
push
cmp
decl
in
sahf
pushf
pop
pop
add
out
adc
movsl
cli
ror
and
xor
inc
jle
sti
adc
xchg
stos
mov
pushf
jo
xchg
lcall
outsl
fildl
cmp
out
cmc
cmc
rorb
mov
pop
sbb
aad
sbb
dec
fnstenv
imull
cmove
popl
dec
std
popf
mov
or
mov
icebp
mov
in
mov
cwtl
das
dec
daa
fdiv
cmp
sbb
incb
int
jb
cli
iret
psubd
sysenter
pop
sub
dec
push
jp
cmp
xlat
jbe
mov
xor
in
int
cmc
mov
and
mov
out
std
mov
fdivrl
aas
cwtl
cmp
mov
outsl
adc
cmp
iret
jl
xor
icebp
sub
mov
mov
xor
dec
inc
or
imul
shll
shlb
add
mov
lods
jp
repnz
sbb
fisttps
fisubrl
fldenv
push
mov
cmp
cmp
lcall
repnz
push
jecxz
dec
das
arpl
push
jge
sub
icebp
inc
pop
imul
cmpsl
cmp
push
and
rcrl
jg
mov
roll
push
xor
lds
pop
sbb
dec
push
mov
insl
ljmp
sub
int
cmp
popf
cli
push
push
cmp
push
scas
mov
mov
movsl
add
stos
aaa
rclb
sti
into
xor
cmp
xchg
lcall
pop
jle
out
lahf
lock
inc
int3
in
adc
jno
pushf
movsb
outsl
inc
jecxz
insb
mov
sbb
dec
add
lds
stos
into
popa
sahf
out
mov
imul
ljmp
sbb
pusha
mov
mov
ss
ja
lods
dec
cmp
xor
call
or
mov
mov
mov
push
sub
ret
andb
popa
cmpsl
pop
mov
popf
hlt
sub
mov
push
and
and
stc
sarl
pop
mov
ret
aad
mov
inc
sbb
es
sti
mov
notb
mov
pop
xchg
add
pop
mov
xor
adc
js
fnstcw
loopne
loop
mov
psrld
mov
inc
ljmp
mov
fs
stos
jg
add
iret
mov
imul
push
fnstcw
push
mov
bound
mov
xchg
dec
data16
dec
or
push
push
lods
pusha
inc
sbb
gs
imulb
repz
xor
das
ja
idivl
sahf
cmp
pop
cmpsl
or
test
jge
std
rol
adc
xchg
lahf
and
outsl
sbb
cmc
test
adc
lcallw
pusha
lock
fistpll
pop
push
jg
push
aam
push
mov
xchg
xor
mov
pop
std
das
push
inc
sbb
jge
pushf
jecxz
push
inc
ja
jle
scas
cmpsl
or
call
js
cmpsb
sti
nop
into
pop
rcrl
int3
sbb
xchg
pop
push
xor
imul
sahf
lock
pop
hlt
cmpsb
cmp
push
fistpl
hlt
jb
les
popa
das
xor
aas
pop
into
iret
and
mov
sub
loopne
adc
stos
add
mov
icebp
fnstcw
jns
jne
ret
or
dec
lods
pop
sar
aaa
in
jno
mov
add
or
int
movsl
adc
mov
jbe
negl
aaa
add
outsl
xor
fldenv
mov
call
adc
clc
mov
push
add
pop
pop
pop
mov
daa
dec
aaa
jg
testb
mov
pop
dec
fsts
mov
jnp
or
ldmxcsr
pusha
jmp
addl
sbb
scas
mov
int3
sub
mov
jg
cmp
mov
push
dec
ret
insb
xor
push
mov
int
movsb
sbb
mov
int
popl
gs
bound
xchg
mov
mov
jecxz
sub
xchg
push
lahf
push
push
je
add
push
stc
les
and
sub
mov
aad
stos
add
in
or
or
je
sub
xchg
mov
fmul
ret
adc
push
mov
push
dec
sbb
jb
cmp
xchg
and
enter
nop
xor
jb
mov
out
adc
hlt
out
outsb
imul
or
cwtl
lds
xchg
flds
push
incb
dec
lock
outsb
js
mov
aad
int3
mov
add
jae
mov
leave
cmp
sub
add
shll
daa
cltd
xor
sbb
add
mov
sub
enter
xor
out
push
push
mov
sub
mov
hlt
xchg
pop
out
rcll
negb
daa
xor
cmc
mov
das
pop
aas
lahf
mov
scas
sarl
stos
lret
and
mov
sti
mov
aad
pop
and
jg
xchg
sti
insb
inc
push
inc
mov
mov
and
mov
sbb
rclb
fdiv
add
push
pop
or
xchg
call
cmpsb
in
inc
iret
mov
jmp
cli
cmp
es
clc
xor
imull
pop
dec
add
push
cmp
les
add
xchg
cwtl
inc
shrb
pcmpgtw
jg
push
xor
sbb
lret
push
mov
scas
xchg
mov
rcrb
xorl
icebp
pop
fcomps
leave
push
das
sub
cmp
lods
std
mov
dec
mov
mov
sbb
fmull
cmpsl
dec
and
shl
push
jne
add
and
imulb
loopne
xor
sub
pop
xchg
sub
cmp
dec
jae
mov
cltd
sbb
shrb
fs
addb
daa
movsb
xchg
cmp
aam
fwait
inc
movsb
pop
ror
xchg
push
push
aaa
rorb
pop
stc
mov
pop
inc
jbe
fstpt
bsf
jle
inc
pusha
stc
hlt
imul
out
in
xorl
push
inc
divb
mov
jmp
push
and
pop
xchg
cmpsl
adc
repz
add
rcrb
cmp
bound
sub
jnp
daa
inc
sub
xor
call
test
sbb
mov
ret
adc
mov
int
jg
xor
jl
xor
lods
je
lods
inc
imul
loop
jnp
sbbb
ret
sub
inc
cld
push
in
xor
lock
and
push
loopne
addr16
adc
bound
stos
call
inc
in
and
imul
xor
or
shll
dec
xor
add
push
adcb
shll
inc
pop
das
les
push
es
lods
sbb
add
lds
push
xchg
pop
call
roll
cmp
sbb
jnp
mov
xchg
hlt
push
sbb
lods
jg
fstpl
cmp
out
loop
lcall
clc
sub
popf
aaa
sub
fs
dec
pop
sbb
pop
fnsave
xchg
adc
pop
jnp
xchg
fildl
fisttpll
inc
fimull
jg
imul
in
xchg
test
fsub
cwtl
adc
fs
sarb
pop
add
bound
push
mov
jae
out
add
jl
outsb
mov
into
imul
push
or
fsubr
mov
dec
xchg
push
addr16
stc
loope
or
sub
addl
sub
sub
cmp
int3
call
mov
pop
ja
inc
shll
jg
inc
mov
inc
jne
shl
mov
popa
sbb
mov
ds
mov
rolb
push
pop
sarb
mov
cmc
pop
fdecstp
mov
adc
xchg
sbb
mov
repnz
cmpl
mov
popf
mov
scas
icebp
lcall
stos
xchg
mov
xchg
ret
jmp
fwait
xor
xorb
and
lahf
fisubrl
cmpsl
icebp
dec
in
in
insl
aaa
xor
cmp
mov
push
lock
or
shll
jbe
pop
xchg
cmp
pop
cmp
xchg
cmp
fnsetpm(287
pusha
and
jmp
jmp
andl
xorl
sbb
xlat
mov
add
adc
insb
sbb
pushf
jb
ror
cmc
mov
cmp
daa
out
outsl
sbb
scas
push
cmp
or
jl
imul
adc
int3
and
scas
sbb
sub
repz
das
pop
push
and
jne
test
xchg
and
or
lret
xchg
shl
test
repnz
in
in
inc
inc
cmp
lret
lds
in
pop
lcall
push
leave
pop
or
imul
leave
pop
jbe
mov
adc
lods
cmc
pop
call
lcall
repnz
movsb
jmp
mov
movsb
or
enter
pop
xchg
stos
and
pushf
or
loop
fsubrs
push
push
add
adc
mov
mov
sti
xor
or
and
mov
popf
xchg
jmp
mov
xchg
or
xchg
movb
test
in
pop
sub
jns
fsubr
xchg
fiadds
mov
sub
jle
pushf
fdiv
das
adc
pop
repnz
fucomi
data16
sub
lret
cwtl
and
mov
xchg
mov
ja
les
xlat
lahf
mov
mov
pop
cld
lea
jae
sbb
mov
pop
sti
dec
mov
jnp
cmc
fsubr
xchg
fdivrp
je
test
jg
hlt
dec
push
lods
sub
mov
jmp
jle
ret
adc
lods
jne
cmp
hlt
sbb
push
sbb
mov
mov
adc
fwait
cmp
adc
shr
int3
lods
pop
mov
das
fstps
mov
fs
shrb
ficoml
mov
andb
lods
out
call
sub
and
cli
xchg
push
lsl
pushf
mov
push
aad
repnz
enter
les
cs
mov
cmp
inc
xchg
jo
adc
jp
xor
test
xor
push
hlt
sub
dec
aas
fwait
xor
sub
loop
ljmp
ljmp
add
sub
cs
add
xchg
sbb
jae
imul
cwtl
fsubl
sub
aam
xor
xlat
xchg
shll
mov
add
jno
jae
gs
fistpll
jo
mov
rol
das
sahf
loope
insb
stc
ljmp
adc
xor
add
xor
shll
and
adc
bound
mov
cmpsb
cmp
stos
adc
push
jnp
inc
in
ja
div
pop
push
test
push
cmp
pop
das
push
mov
pop
mov
icebp
and
dec
pop
js
sub
stc
mov
inc
cmp
outsl
mov
inc
cmc
mov
and
and
jmp
arpl
les
iret
jle
or
jle
jl
lds
and
test
adcb
mov
dec
or
mov
into
mov
mov
sbb
scas
push
mov
in
dec
xchg
xor
adc
and
add
or
loope
or
push
clc
xchg
sub
std
xor
int
dec
jns
bound
lss
movsl
sti
xchg
jbe
dec
js
nop
and
sbb
leave
call
adc
inc
rorb
int
add
enter
fisttps
inc
cld
ret
and
mov
sub
test
pop
jge
mov
jg
mov
loope
cmp
and
lret
ret
sbbl
daa
les
ljmpw
shlb
lcall
das
sbb
pushw
movsb
movsb
mov
in
sti
push
iret
loopne
xchg
xchg
xchg
cmpsl
fs
sar
mov
lret
leave
jle
and
mov
pop
test
mov
inc
mov
enter
pop
in
push
lods
aas
sbb
sub
or
add
out
mov
call
inc
cwtl
xchg
sub
dec
lock
pop
jmp
xor
test
aas
mov
pop
call
cmp
out
outsb
mov
cmpsl
sub
and
test
xchg
xchg
divb
lods
xchg
aas
cmpsb
mov
sbbl
insb
xor
sub
inc
movsbl
inc
dec
mov
mov
in
imul
add
pop
jmp
pop
imul
fisubl
jg
outsl
push
mov
pop
pushf
repz
mov
xor
add
sahf
mov
gs
movsb
pop
pop
push
mov
mov
leave
xor
loope
cmp
sbb
scas
dec
cmp
adc
xchg
add
lods
adc
and
pop
xlat
mov
mov
andl
or
pop
mov
lcall
sub
xchg
add
sub
jl
test
ljmp
pop
jg
fisttpll
lock
fcmovb
ja
sub
popf
fcmovbe
push
addb
sbb
scas
popa
test
jnp
mov
mov
fcomps
inc
enter
sub
hlt
outsl
test
xchg
shrl
movsl
xchg
decl
rcrl
xor
das
push
mov
sbb
sub
test
jnp
ljmp
dec
cmp
dec
inc
popa
mov
xchg
xor
sub
leave
cmp
test
sbb
cmpsb
mov
mov
push
mov
mov
int3
fcmovbe
lret
popf
and
jge
fidivl
mov
add
jle
mov
imul
test
stc
xchg
inc
cld
mov
movsl
pop
xchg
fsub
fstpt
in
cmp
cmp
sbb
pop
and
outsl
sti
push
jmp
repnz
aas
mov
cltd
sarb
or
scas
stos
ja
inc
xchg
fisttpl
sub
jo
cmp
cwtl
shll
imul
ret
mov
ds
nop
test
int
out
pop
psubsb
add
popa
inc
jo
ret
sahf
test
xor
jnp
imul
cwtl
xchg
das
movsl
cmc
or
sbb
xchg
mov
mov
loopw
mov
adc
imul
push
lods
nop
jg
push
or
lcall
adc
sbb
push
test
push
ret
sub
jg
je
cld
add
arpl
pushf
hlt
scas
sbb
mov
xchg
js
jge
inc
addr16
getsec
fnsave
outsb
imul
xor
jle
sbbl
and
hlt
aaa
lods
push
pop
mov
jl
js
sti
das
or
ret
xchg
icebp
clc
xchg
and
jne
pop
pusha
cmp
test
imul
cltd
ss
outsb
mov
out
or
push
pop
mov
stc
popf
lcall
repz
out
std
sbb
cli
xor
xchg
out
add
cmp
jge
sbb
nop
clc
add
and
mov
stc
jmp
xchg
inc
mov
mov
aaa
xor
stc
jb
stc
loopne
add
mov
cltd
push
stos
enter
repnz
mov
xor
jae
hlt
out
fadd
sbb
icebp
mov
aas
jg
and
or
insb
mov
test
cs
sub
adc
jo
jle
pushl
ror
fbstp
imull
data16
xchg
fimuls
xor
push
cmpsb
fwait
pop
pusha
scas
adc
jp
pop
fstp
mov
sbb
xchg
movsb
sub
cltd
add
jmp
push
test
das
ds
inc
stos
addb
cmc
add
sbb
mov
xlat
jo
out
sub
mov
xchg
dec
adc
dec
addb
imul
adc
mov
enter
movsb
push
jno
pop
fs
test
shrb
rolb
daa
inc
dec
push
repz
imul
push
push
icebp
dec
inc
lods
aad
push
xor
mov
xchg
in
push
call
xchg
or
adc
stos
mov
or
xchg
fistps
mov
add
fcmovnu
jb
xor
cltd
mov
repz
popa
in
test
leave
dec
mov
mov
movsb
movsl
idivl
fistps
lret
or
stc
lret
xor
pop
push
sbb
sbbl
add
mov
adc
adc
push
pop
pop
pop
aad
cmp
cmp
and
lret
fstpl
xor
jns
adc
pop
test
cs
sbb
adc
jp
jp
cli
loopne
mov
adc
test
cltd
add
xchg
idiv
add
pop
jp
faddl
stos
in
punpckhdq
ror
lcall
sub
icebp
cmp
fsubrl
sbb
mov
xor
out
cmp
cmp
cmp
cld
cmp
and
fidivl
fldenv
nop
jne
out
out
fs
xor
int
pop
cmp
fisttpll
jb
mov
sbb
sbb
test
in
pusha
or
cs
xchg
out
jae
mov
jnp
adc
push
scas
mov
loope
mov
test
jns
outsb
movsl
xchg
or
inc
call
pop
cltd
inc
arpl
xor
xor
jnp
pop
mov
insl
jecxz
sbb
push
dec
vmulpd
and
or
add
lret
cld
jmp
lock
mov
and
and
push
mov
xchg
fcompl
out
cld
xor
out
and
dec
cmp
imull
xchg
pop
aad
scas
push
inc
mov
fstpl
and
in
jne
add
xchg
and
cmp
repz
fldcw
pop
xchg
sbbb
movups
in
stos
repz
outsl
data16
xchg
sarb
cmp
lret
adc
sub
push
or
jb
stos
xchg
pusha
jns
or
leave
imul
add
int3
xchg
aad
std
data16
test
jle
and
movsb
jle
add
xchg
push
cmp
or
ret
js
adc
in
das
movl
adc
aas
addr16
fmull
dec
or
cmp
lahf
xchg
sti
mov
int3
mov
dec
xor
push
pop
out
mov
or
push
sub
dec
movsb
es
stc
push
fs
adc
call
insl
dec
jmp
in
scas
and
cli
jmp
or
lcall
inc
and
or
insl
cltd
inc
mov
daa
and
sbb
aas
adcb
insb
xchg
and
leave
loop
mov
xchg
cmc
lea
out
cmp
stos
and
jne
lahf
push
or
inc
mov
not
mov
sbb
imull
divl
sub
popa
test
add
pop
add
add
jb
and
mov
int3
xor
clc
adc
mov
iret
dec
mov
lods
outsl
rcr
xchg
faddp
pop
xchg
test
and
inc
mov
vandpd
popf
mov
loope
mov
les
mov
imul
sub
dec
fcmovb
xlat
jge
repz
shrb
and
fidivl
cmp
cwtl
xlat
mov
int3
xchg
test
jbe
xor
mov
sub
push
sbb
adc
or
add
cmpsb
das
fs
aas
mov
add
jg
jg
fsub
add
or
or
xchg
xchg
es
push
xor
mov
xchg
pop
and
nop
daa
push
mov
fmuls
cmp
arpl
pusha
xchg
ljmp
movsl
mov
mov
xchg
adcb
rcl
adc
inc
mov
adcb
or
popf
mov
and
add
jo
xchg
and
imul
mov
push
scas
shll
sub
jo
dec
mov
outsl
jge
jnp
loope
fsub
mov
or
mov
push
push
addr16
ljmp
mov
add
sar
pop
icebp
enter
inc
dec
dec
push
dec
gs
sbb
leave
stos
dec
sbb
aas
dec
fidivrs
into
jo
movsb
inc
add
jne
cwtl
cmp
cmp
adc
loopne
and
inc
push
mov
xorl
or
dec
cld
loopne
in
dec
fcmovbe
xlat
xchg
clc
or
lods
push
mov
inc
aad
repz
cld
das
mov
dec
stos
push
jns
xor
jno
dec
loope
jmp
fstl
fsts
or
inc
push
sarl
add
push
int
xor
dec
sub
shlb
test
cmp
bound
in
loopne
xorl
xor
xchg
xchg
or
mov
ret
icebp
xor
adc
out
pop
jge
mov
in
iret
sub
xchg
mov
lret
inc
cmp
sbb
dec
push
movsb
mov
lods
insl
out
stos
ret
inc
dec
mov
inc
cmp
test
or
pop
sar
pushf
xor
scas
inc
mov
cmp
xchg
imul
push
dec
stos
rcr
inc
inc
and
sub
adc
cmp
mov
sti
sub
sub
lahf
xlat
cmp
mov
faddl
shrb
outsl
mov
enter
pushf
movsl
fs
mov
cs
mov
sbb
xor
movsl
or
inc
icebp
or
fwait
xchg
xor
push
enter
adc
fnsave
sbb
push
xor
and
mov
cltd
je
push
add
jb
xor
out
mov
or
adc
xor
cs
and
notl
shrl
mov
out
push
xor
jo
nop
lock
inc
push
out
jae
sbb
sbb
scas
data16
fcomps
ficompl
out
mov
adc
mov
imul
in
das
les
pop
cmp
scas
in
std
dec
jnp
add
movsl
sbb
sub
dec
mov
pop
xor
mov
mov
out
ret
ljmp
mov
push
and
pop
jne
mov
xor
aad
cmp
and
push
cld
xor
and
dec
gs
ret
dec
add
and
mov
xor
inc
std
popl
dec
mov
ret
jmp
pop
imul
jmp
test
insl
add
rcl
cmp
adc
mov
sub
repnz
or
adc
decl
xlat
sbbb
aam
mov
js
cmp
aam
pop
loopne
test
pop
arpl
inc
xchg
xchg
imul
jb
sti
xchg
push
iret
or
mov
mov
mov
adc
in
in
mov
aas
xor
push
arpl
nop
adc
outsb
inc
ja
dec
ss
add
pop
shlb
pop
add
mov
adc
decl
inc
push
nop
sub
inc
mov
add
cmp
pop
pop
jae
xlat
push
add
movsl
mov
out
jecxz
pop
inc
mov
mov
jle
push
lea
push
mov
and
xor
imul
insl
or
xchg
xchg
test
sub
popa
mov
out
jbe
dec
popa
mov
rcrl
cld
aas
sbb
ss
lahf
insb
outsb
aad
sti
xchg
scas
cmp
fcomip
mov
add
insl
inc
dec
in
popf
sti
aaa
pop
test
fistpll
test
push
ljmp
cld
cmp
push
stos
pop
pushf
mov
arpl
lds
loopne
addb
repz
idivl
ss
jmp
sbb
negl
rorb
fwait
test
push
cmp
pop
js
cmp
xor
inc
lods
xor
cmp
mov
push
sbb
adc
pop
mov
add
push
lock
out
aam
cmpsb
js
adc
loop
ret
adc
push
sub
enter
xlat
mov
lea
push
int3
mov
je
mov
in
and
movsl
cmp
out
cmp
xchg
rolb
inc
aad
cmp
sbb
sub
outsl
sbb
mov
inc
pop
cmc
push
adc
rorb
inc
sub
cwtl
outsl
add
sub
dec
mov
lret
shlb
mov
mov
imul
xorb
mov
sbb
lret
aad
xchg
cmp
cmp
gs
inc
icebp
push
imul
test
adc
fsin
out
scas
dec
and
ret
pop
loopne
mov
leave
out
bound
bound
push
test
push
data16
lret
notb
jb
hlt
lea
dec
or
es
add
cmp
testl
cmpsl
scas
lock
fmuls
mov
stos
mov
aad
dec
mov
fdivrs
mov
shl
fcmovb
aad
xchg
or
xchg
pop
pop
lret
push
std
rcrl
pop
cmpsb
cmp
adc
xchg
pusha
aas
out
xor
les
cmp
xor
es
movsb
ficompl
sub
xorb
fwait
dec
call
imul
xchg
xchg
jmp
inc
shl
aad
mov
lcall
dec
ja
js
inc
mov
mov
mov
int
xchg
push
dec
mov
xor
ja
push
test
fwait
mov
sbb
mov
fisttps
pop
test
mov
stc
adcb
cltd
mov
xchg
das
pop
js
mov
xor
fdivrs
hlt
dec
cltd
cmp
cli
mov
pop
stc
inc
hlt
out
cmp
adc
lcall
add
push
dec
popf
push
and
xor
jge
push
fs
out
nop
sub
nop
nop
mov
nop
sbb
popa
mov
gs
xchg
jns
mov
jmp
jge
pop
push
add
les
lret
cltd
and
cmc
pop
in
test
push
cmp
js
or
cmp
jmp
push
cli
test
iret
sbb
jnp
out
cmpsb
imul
pop
cmc
cltd
or
and
pop
outsb
ljmp
dec
fdivs
in
jns
cmp
push
jnp
sub
int3
or
mov
cmp
or
mov
adc
adc
lahf
loope
stos
xor
into
sbb
dec
repz
mov
xchg
push
push
and
mov
ret
jo
lds
out
lods
test
out
cmp
adc
sbb
clc
mov
mov
dec
shrl
aam
mov
movd
out
lret
xchg
in
mov
into
lock
out
nop
cmp
aad
stos
cltd
xchg
leave
xchg
push
pop
andl
cld
ds
push
rcll
jnp
aad
ror
andl
pushw
hlt
repnz
and
faddl
orb
std
arpl
mov
jae
sbb
mov
lret
out
mov
dec
pushf
xor
xor
adc
dec
mov
imul
mov
loope
negb
cmpsb
mov
cmp
sbb
insb
jle
pushf
xchg
xchg
inc
add
icebp
mov
mov
xchg
leave
pop
mov
and
in
mov
dec
xchg
mov
jge
popa
lret
sub
mov
sub
nop
add
xlat
jl
out
pop
jb
pop
in
lcall
cmpsb
int3
cmp
xor
mov
add
scas
jae
mov
inc
inc
dec
lret
in
push
mov
mov
push
pop
xchg
outsb
jbe
shrl
or
xchg
insl
lcall
dec
mov
test
add
mov
sub
xor
and
fxch
inc
enter
or
xor
add
movsb
xchg
push
fwait
and
in
movsb
arpl
mov
test
and
jbe
loopne
cmc
sub
pusha
mov
push
mov
fld
pop
imul
add
xchg
int3
inc
mov
sti
pop
es
pop
sbb
xchg
loopne
movsl
enter
jne
xorps
in
xchg
and
dec
jecxz
push
pushf
cmp
repz
cli
push
mov
or
adc
mov
in
add
aaa
mov
les
push
adc
mov
movsb
push
imul
push
inc
push
jnp
leave
inc
sbbb
jg
and
jle
test
addr16
into
xor
sbb
mov
ret
bound
cmp
xor
repnz
ret
jae
sub
loop
jne
and
popa
icebp
pop
jl
sti
inc
fisttpll
fwait
mov
test
rcr
insb
dec
aas
repz
mov
xchg
sub
repz
dec
pushaw
add
clc
sbb
lahf
jge
mov
fwait
test
nop
sbb
pop
arpl
push
adc
jns
in
test
cmp
pop
insb
aad
mov
and
mov
insl
test
shl
lahf
xchg
mov
dec
cmc
push
mov
mov
mov
fucom
jge
sbb
movsl
push
xchg
out
sti
or
and
jns
push
xchg
sahf
faddl
test
imul
jg
js
ss
cmp
jge
xchg
ficompl
mov
not
push
push
mov
cmpsb
shll
in
es
daa
jne
sbb
sub
mov
es
fcmovb
mov
fsts
inc
shr
in
push
push
push
xor
js
mov
and
test
pop
xchg
add
dec
in
fwait
xchg
cmp
mov
jb
testb
testl
fwait
xor
loop
push
cmp
sbb
mov
pop
add
mov
cmc
add
loop
jmp
nop
and
cwtl
cmpl
repnz
inc
gs
jp
jle
xchg
push
xchg
fcomip
xor
ftst
mov
add
mov
ja
cmpb
adc
das
daa
xchg
mov
jle
push
jae
ljmp
push
adc
xchg
lods
ljmp
push
mov
loope
cmp
cmp
mov
pop
pushl
cwtl
cwtl
rep
popa
fsubl
mov
jmp
in
cld
lods
shlb
loope
adc
sbb
insb
leave
pop
dec
cmp
and
sbb
mov
loopne
mov
rcl
es
mov
ret
lcall
fsincos
outsb
mov
fnstenv
mov
jb
inc
and
jle
mov
incb
das
cmp
or
mov
fwait
xchg
sub
or
pop
testl
push
stos
shr
cmp
sbb
add
popa
fucomp
push
adc
insl
stc
or
pushf
mov
leave
repnz
pop
and
es
or
bound
sbb
iret
xchg
fists
sti
rcl
jg
mov
rcll
fsub
pop
and
mov
lods
sbbl
decl
test
mov
dec
xchg
jmp
add
shl
adc
mov
sbb
or
int
pop
push
mov
shlb
outsb
jne
aaa
mov
mov
inc
dec
add
cwtl
xchg
cmpsb
and
xchg
in
fs
in
or
pop
and
stos
in
rolb
dec
icebp
dec
loopne
jmp
test
and
jp
jecxz
out
movsb
ret
jg
rclb
incb
dec
xor
sub
inc
iret
mov
ucomiss
xor
call
int3
jo
cmp
lods
push
inc
shrb
aam
lea
adc
mov
push
dec
out
fsubrl
adc
fabs
fists
lods
ja
sbb
and
pop
push
sub
ss
xchg
cmp
xor
inc
mov
and
dec
lcall
xor
ficomps
xor
int3
sbb
lret
cmp
mov
sbb
out
adc
dec
sbb
mov
mov
cld
outsb
push
mov
add
jp
ja
nop
shrl
inc
bt
or
pushf
mov
jb
inc
push
shl
popf
inc
cmp
jno
dec
sub
lret
nop
loop
push
xor
cmp
mov
pushf
cmpsb
xchg
pushf
inc
pop
sbb
scas
jno
dec
jbe
shrl
cmp
xchg
ss
test
mov
push
pop
and
int3
adcb
dec
lret
std
repz
fcoml
lea
jle
enter
xor
adc
nop
js
cmp
jns
push
aas
push
mov
lea
cmpsl
mov
lods
movq
ljmp
ja
mov
or
bound
mov
aaa
call
jnp
cld
nop
loopne
shrb
xor
xchg
pop
fisttpl
xor
lret
loop
test
mov
mov
push
test
fwait
scas
dec
jg
repnz
adc
jnp
cltd
lock
push
lds
jae
pop
xchg
sarl
xchg
enter
push
addr16
dec
cmp
sub
popa
sbb
jne
lahf
cmp
subb
add
andb
inc
push
inc
cltd
jbe
jp
push
cltd
push
mov
movsb
rcl
xorb
or
fsubrs
xchg
xor
es
int
xchg
jge
mov
cmp
cli
cmp
lret
sar
mov
mov
mov
out
jg
je
push
pop
ret
in
push
sub
es
sub
ss
lret
ret
cmpsl
and
loope
scas
movsw
sti
in
pop
adc
cld
loopne
and
cmp
push
sarl
mov
and
les
in
repnz
aas
mov
std
rcll
xchg
or
add
loopne
inc
test
pop
cltd
nop
cmc
xchg
xor
jns
jno
and
aam
aam
push
gs
or
fisubrs
outsb
aas
push
lods
shll
mov
push
and
sub
hlt
cwtl
lds
ret
inc
cltd
into
shlb
dec
jecxz
lret
inc
fwait
aad
cmp
and
out
lods
lret
push
popa
xor
movsl
lret
lret
enter
and
jo
xor
int
add
aad
jge
or
cld
sub
pop
lds
daa
or
out
aaa
mov
enter
scas
push
icebp
in
push
xor
mov
inc
mov
inc
jnp
jbe
imulb
push
add
lcall
sahf
filds
cmp
xor
gs
lods
repz
adc
lods
jl
dec
mov
aaa
cmp
addr16
je
clc
mov
mov
and
inc
cld
jno
jne
dec
mov
insl
and
mov
cmp
xchg
cld
sbb
jmp
inc
cwtl
repz
add
addb
push
pop
mov
fsubl
movsl
cmpsb
mov
jbe
ficoml
pop
not
outsb
mov
pushf
test
fxch
icebp
cmp
jo
sarb
rcl
jle
nop
jne
in
inc
nop
cmpsb
mov
lcall
cs
fiaddl
movsl
aaa
or
repnz
insb
fwait
push
sbb
sub
movsl
into
cmp
pop
xchg
loop
aad
sar
stc
in
mov
inc
xchg
lcall
shlb
rorl
jmp
pop
int
fstps
dec
and
sub
xor
fnstsw
jp
pop
mov
push
mov
inc
cltd
insl
cmc
push
jl
push
jne
and
fisubrl
out
fnstenv
in
pop
xor
mov
inc
jp
xchg
xor
test
int3
jmp
and
lds
test
insb
jns
add
inc
adc
fimuls
dec
aas
orb
or
rcl
xchg
repz
pushf
jecxz
inc
xor
mov
push
sub
sub
ljmp
mulb
out
push
inc
xchg
popf
movsb
fs
sub
mov
dec
jns
or
cld
jl
das
add
dec
testl
mov
add
jne
fsubrl
sbb
ret
or
out
jno
pushf
jne
mov
fldenv
rep
sbb
pop
dec
aam
imul
inc
mov
loope
xchg
pop
aad
push
in
jg
sbb
stos
arpl
cmpsl
lret
push
dec
lea
sbb
stos
rcr
xchg
out
cmp
ficompl
add
dec
mov
data16
dec
and
xor
aaa
outsl
into
in
fs
adc
sbb
fdivrp
in
or
sbb
aas
xor
fnstenv
adc
call
cmpsb
and
rcrb
or
pusha
cli
mov
mov
mov
movsb
jg
sbb
dec
add
jle
test
bound
cmp
movsb
repz
inc
push
lret
xchg
jmp
cmc
mov
xchg
add
pop
xchg
insb
das
std
ret
mov
xor
bound
je
jge
mov
pop
repnz
imul
movsb
cmp
cld
outsb
aam
mov
prefetcht2
xchg
lea
cmp
sarl
cmpsl
out
mov
insl
pop
mov
and
push
cwtl
imul
clc
sub
mov
or
xchg
outsb
in
call
mov
sbb
jbe
popf
leave
cmp
inc
jmp
jne
pop
inc
push
push
test
cmp
out
adc
xor
out
inc
dec
xchg
mov
xor
sbb
mov
jb
dec
pushf
lock
scas
stos
xchg
test
mov
test
mov
lahf
push
xchg
imul
lret
insl
popa
mov
xchg
xchg
jmp
cli
aas
sub
dec
cltd
cmc
cs
test
sbb
or
sbb
push
pusha
in
pop
mov
pushl
gs
sub
sub
jnp
add
pop
loop
popf
adc
scas
movsb
mov
pop
sbbb
inc
push
push
lods
lds
or
and
mov
mov
outsl
push
push
in
and
popf
mov
xchg
ret
pop
in
dec
jp
or
cmp
les
lods
or
xlat
lods
pop
mov
and
sbb
fistpl
aas
lretw
xor
pop
jp
pop
pop
jg
loope
in
mov
mov
adc
mov
add
mov
divb
inc
inc
dec
mov
shlb
mov
jle
mov
fwait
stc
rorl
mov
push
pop
mov
pop
or
pop
fwait
fwait
push
pusha
inc
cmc
insl
test
imul
mov
cld
leave
ret
scas
imul
int3
scas
inc
add
mov
nop
test
bound
mov
testl
jns
outsb
sbb
dec
mov
lods
arpl
push
mov
inc
jecxz
sbb
and
sarl
dec
xchg
imul
pushf
xchg
scas
and
pop
sub
or
pop
lods
push
mov
jns
neg
sbb
xlat
jmp
sub
mov
dec
scas
testl
dec
mov
mov
and
incb
adc
inc
out
dec
push
sbb
imul
test
mov
adc
mov
sti
shl
sysret
out
push
unpckhps
out
nop
je
xchg
sub
cli
lods
addr16
fiaddl
pop
cmp
in
dec
les
mov
imul
outsb
jge
sbb
dec
stos
popa
xchg
test
jmp
out
push
and
push
test
cld
roll
push
into
mov
jno
dec
xlat
sub
scas
jg
mov
mov
stc
push
add
pop
lret
sub
lcall
inc
inc
jecxz
sbb
mov
test
in
inc
and
call
jmp
out
or
jl
push
add
inc
fdivr
loop
rorl
push
cmp
dec
mov
sbb
mov
inc
jmp
sbbb
stos
test
cmpsb
lds
test
lock
int
push
adc
adc
xor
icebp
and
lret
lea
xor
and
or
xor
fldcw
lock
arpl
push
cmpsl
cmp
int
mov
mov
add
shl
repz
test
sbb
xchg
adc
and
xchg
mov
fdivs
pop
cmpsb
xor
out
push
adc
or
data16
jno
jno
stos
mov
popa
loope
xor
scas
sbb
stc
pop
fisubrs
and
adc
jno
inc
push
lcall
push
xlat
mov
mov
insb
mov
mov
pop
aas
mov
xchg
cmp
roll
repz
lds
pusha
dec
mov
mov
rcrl
and
adc
dec
dec
xlat
or
cltd
mov
xor
pop
and
test
lea
mov
push
add
out
sub
xchg
mov
notb
daa
daa
ficoml
mov
cmp
jno
pop
call
add
dec
push
pop
enter
adcl
icebp
divl
dec
and
mov
jnp
push
jp
ljmp
cmpsb
cmc
nop
jae
push
mov
xlat
imul
pop
mov
jno
add
sub
mov
or
in
lahf
fisubl
js
sub
bndldx
in
and
les
lods
jp
aaa
pop
fidivrs
ret
andl
aaa
push
inc
xchg
cmpsl
pop
outsb
pop
sbb
pop
mov
mov
xlat
insl
ficoml
inc
sbb
push
or
lahf
icebp
inc
pop
icebp
sar
push
lret
out
fucomi
lahf
jne
lea
sub
dec
cmp
rol
pop
adc
and
icebp
lcall
movsl
jmp
mov
xor
imul
data16
arpl
clc
aam
mov
cmp
inc
jg
scas
iret
adc
xchg
dec
xchg
cli
lods
ljmp
jmp
std
push
sbb
cmp
outsb
fstpt
test
out
dec
sbb
push
sub
shlb
lcall
popf
pop
gs
std
xor
jge
cmp
movups
jb
pusha
inc
pop
mov
xchg
data16
cld
jg
pop
add
ret
xlat
add
push
data16
adcl
push
cltd
sbb
push
stos
pop
das
in
lcall
imul
xor
pop
pop
xor
decl
mov
or
lahf
aas
push
add
pop
pushf
add
inc
pop
sbb
dec
test
ret
emms
lret
adc
push
cmpsb
xlat
and
sbb
add
sarl
jmp
and
mov
in
out
pusha
jne
or
call
sbb
addl
bound
sub
in
rolb
fdivl
mov
cmc
push
or
insl
xchg
in
mov
addr16
in
ret
leave
inc
fmuls
test
mov
daa
cmp
and
icebp
mov
sti
rorb
cmp
pop
insb
sbbl
lea
rorl
std
mov
cmp
sub
divl
fldenv
ret
mov
adc
xor
testb
inc
out
add
xchg
imul
sub
lret
xchg
out
or
jle
cmpsl
and
repnz
mov
push
adc
repz
and
dec
cld
push
es
insb
mov
or
xor
pusha
out
mov
and
jae
jne
inc
push
or
mov
rorb
cmc
sub
mov
gs
xchg
pusha
lods
loopne
rcrl
pop
xor
lahf
mov
cmpb
mov
insb
push
aaa
movsl
lcall
mov
pop
add
clc
sbb
dec
mov
cwtl
mov
loope
pop
mov
xchg
stos
mov
outsb
mov
xorb
push
or
jecxz
mov
pop
aad
lods
jne
adc
sbb
call
std
xchg
jle
pop
rcll
mov
inc
sbbb
xor
rcll
lock
inc
jl
lahf
mov
cmp
sbb
mov
sbb
daa
mov
sti
cmp
sbb
lea
and
cmpsl
icebp
mull
pop
mov
iret
xor
sti
sbb
ja
fcmove
repz
aas
mov
push
jge
mov
fidivs
mov
push
out
sbb
pop
cmp
xor
pop
and
xchg
push
push
dec
mov
mov
clc
push
popa
dec
xor
jg
into
and
sub
fwait
into
push
pusha
or
sbb
out
push
or
jno
sbb
add
in
nop
push
mov
outsl
cmp
inc
mov
out
enter
xchg
imulb
mov
sbbl
cmpl
sbb
lods
cmpsl
in
cmpsl
dec
mov
push
sub
push
mov
pop
inc
or
jb
xor
lcall
inc
mov
sub
stos
xchg
sbb
mov
in
ret
les
int3
mov
xchg
jno
xchg
pop
mov
inc
sub
xchg
std
lods
push
fcoml
dec
adc
xchg
and
test
ds
cmovo
mov
je
into
cld
cmp
sub
stos
or
fstps
adc
pusha
mov
inc
jo
dec
adc
sbb
mov
mov
xchg
inc
dec
lcall
cmp
mov
or
data16
pop
ficoml
lea
cmp
movl
insb
lret
popf
mov
leave
jle
push
cld
dec
mov
aaa
sti
aaa
bound
ret
mov
cmpsl
in
pmovmskb
and
xchg
pop
loope
jae
inc
xor
cli
mov
sbb
neg
cmp
insb
pop
pusha
or
lret
mov
popa
mov
add
leave
leave
imul
lret
xor
ss
outsb
popa
cmp
mov
push
sbbb
sbb
xchg
les
fdiv
mov
adc
or
jno
fstpt
push
inc
or
imul
out
xchg
jnp
xor
mov
jno
mov
sbb
and
icebp
clc
adc
jo
lcall
out
lods
ret
int3
js
daa
cld
mov
dec
shll
adc
ret
je
sub
jae
mov
pop
enter
adc
or
or
lret
inc
cli
and
mov
pop
cltd
sub
stos
mov
add
sti
movsl
lcall
leave
ss
and
clc
push
aam
mov
loope
iret
xlat
fisubs
ret
add
clc
and
into
cltd
adc
add
fstpt
test
jnp
loope
shll
daa
sub
or
out
rolb
sbb
xchg
insb
jl
inc
out
call
xor
iret
pushf
rcl
jge
jno
xchg
test
test
inc
mov
pop
mov
pop
fdiv
fidivrl
incl
push
fmuls
in
ffree
cmp
movsb
mov
sbb
imul
inc
call
cmp
ret
sub
mov
out
pop
out
test
test
cmp
imul
push
push
mull
fstps
pushf
xchg
add
lret
push
or
dec
xchg
inc
popf
push
test
fisubrs
out
sbb
pop
jge
inc
scas
jecxz
sbb
add
push
mov
jecxz
mov
shll
mov
cwtl
mov
mov
fmuls
push
xchg
sbb
mov
dec
in
int3
jp
inc
and
mov
xor
sub
inc
sbb
fdiv
jbe
jp
push
xchg
mov
sti
lea
mov
jno
insl
je
mov
icebp
adc
pusha
push
fisttpll
dec
mov
push
sub
xchg
push
in
aaa
clc
jle
ret
arpl
mov
sbb
pop
jo
xlat
lods
push
inc
mov
clc
clc
cmp
dec
sub
mov
xchg
sahf
mov
push
push
mov
jnp
in
push
or
mov
xor
push
ss
iret
rcrl
mov
punpckhbw
dec
sub
mov
nop
jg
cmp
test
mov
fstl
imul
fistps
pop
int
out
insb
xchg
xchg
and
bound
jne
inc
adcb
pop
cmpsb
mov
inc
hlt
sti
mov
pop
and
inc
or
insb
mov
inc
lods
mov
pmulhuw
std
mov
push
or
lock
cmc
imul
mov
fisubrs
push
lret
cwtl
call
sub
mov
pop
pop
fabs
add
sbb
lods
xor
clc
shrl
jge
cmp
dec
addr16
mov
mov
jns
scas
mov
push
daa
dec
imull
nop
sbb
cmp
xchg
push
lock
xor
outsb
or
aaa
sub
jmp
pop
inc
add
xchg
xorb
dec
mov
push
cmp
hlt
imul
popa
movb
xchg
shll
outsb
ljmp
sub
jne
adc
push
cmpsb
add
mov
lods
xchg
in
sbb
jg
pop
je
or
mov
jecxz
jo
pop
lods
enter
pop
pop
pop
shll
pop
scas
adc
inc
pop
addb
aas
cmp
mov
sti
aad
jnp
popa
shrl
lret
push
inc
mov
xchg
jle
push
fisubrs
mov
nop
xor
sub
cs
sbb
divb
or
testl
clc
hlt
or
push
jg
lret
adc
cmpsl
lcall
inc
jl
iret
shlb
add
in
xlat
xlat
fldenv
xchg
adc
imul
cmpsl
in
mov
in
and
rolb
subb
movsl
imul
add
orl
lock
popa
adc
repnz
cmp
icebp
mov
aas
in
cmp
push
inc
xor
inc
out
or
jmp
add
cwtl
inc
xchg
push
push
push
mov
es
testl
enter
loope
xor
sbb
lret
dec
int3
or
das
dec
idivb
cmc
jns
push
or
ja
test
movl
push
push
inc
imul
mov
leave
mov
sbb
js,pn
push
out
jp
xchg
inc
adc
add
mov
mov
xchg
aaa
pop
dec
xor
out
movsl
dec
arpl
xor
stos
addr16
sbb
fistpll
das
and
repnz
adc
xlat
mov
lcall
or
addr16
aad
or
lods
loope
dec
addr16
divl
adc
adc
cwtl
mov
inc
cmp
push
int3
out
stos
dec
loope
or
sbb
popa
mov
jmp
je
jg
ss
lods
xor
mov
call
insl
insb
jo
xchg
jnp
fwait
or
inc
lea
sbb
mov
fiadds
sbb
aad
mov
popf
rclb
dec
pop
adc
adc
pop
int3
das
hlt
lds
cmpsl
mov
inc
arpl
cmp
xchg
mov
and
imul
js
into
sarb
shrl
daa
in
jp
decl
jge
xorl
jno
jae
lea
lock
rcrl
mov
pop
sbb
shlb
pop
adc
cmp
dec
xchg
push
pop
mov
pop
push
subb
in
jg
sbb
fnstenv
push
mov
inc
loop
leave
lock
jl
xchg
rcrb
mov
aad
push
pop
cmpsb
sbb
xor
int3
daa
jbe
fisttpl
sti
sbb
data16
enter
xchg
rcrb
cs
gs
sub
sar
ljmp
xchg
inc
int3
mov
popa
mov
mov
cmpsl
or
mov
cmc
jno
jbe
xor
and
clc
test
dec
sub
cmc
adc
lock
sbb
scas
cmp
or
stos
sub
ss
push
pop
leave
mov
sub
scas
sub
fldcw
ds
push
loop
and
xlat
cld
cmp
daa
cmp
xlat
daa
idiv
adc
loop
push
adc
add
sbb
xchg
dec
inc
sbb
sbb
mov
dec
addr16
cmpsl
fildl
test
dec
scas
repz
stos
push
pushf
stc
sbb
aas
dec
aas
mov
xchg
scas
jl
xchg
lock
mov
repnz
in
dec
sahf
setno
push
sbb
adc
jo
push
enter
add
lea
push
lods
pop
cwtl
xor
push
enter
mov
sbb
repz
lret
inc
sbbl
pop
scas
xlat
rol
sarb
mov
retw
or
mov
push
xchg
xchg
mov
mov
mov
test
push
jbe
leave
jbe
out
xor
lahf
push
mov
ja
and
cmc
push
add
sbb
sub
sbb
cwtl
jbe
shll
and
daa
js
rorl
mov
jle
arpl
outsb
lret
out
test
sub
mov
sarb
inc
sarb
test
mov
mov
lods
pop
push
push
xchg
mov
push
push
xchg
mov
lret
icebp
or
jmp
xchg
or
jbe
test
jg
xchg
and
mov
movsb
pop
es
ja
ljmp
es
lret
pop
jmp
mov
rolb
out
pop
lret
cmp
jbe
adc
ret
adc
sub
sub
mov
mov
call
dec
pop
adc
or
movsb
push
jp
fs
pop
sbb
xchg
movsb
push
sar
scas
clc
xor
xor
scas
ljmp
mov
scas
add
or
xor
lock
inc
mov
mov
dec
out
daa
mov
xchg
dec
mov
mov
stos
mov
xlat
cmp
mov
mov
inc
push
pop
mov
outsl
scas
sbb
sti
call
sub
test
xchg
mov
push
add
call
ja
push
addr16
mov
push
shl
ficoms
in
cli
addr16
push
cmp
clc
hlt
mov
js
xchg
dec
mov
test
negb
into
jle
ret
imul
pop
stos
lcall
dec
scas
lahf
rcr
aad
sbb
cmp
scas
imul
sbb
outsl
push
xor
push
sbb
pop
pop
pop
icebp
adc
add
and
out
adc
pop
mov
out
rorl
xchg
xor
xchg
cmpsl
aam
imul
insb
pusha
and
pop
in
mulb
lret
jg
outsl
sti
xchg
inc
inc
adc
dec
cmp
fldln2
cmpsb
and
mov
jns
sub
aad
xchg
jle
or
insb
aam
data16
mov
lods
lret
jmp
es
mov
movsb
cmpl
pushf
ja
jg
lahf
ret
testl
and
nop
xchg
test
jp
insb
pop
dec
ljmp
adc
jp
mov
loopne
xor
push
mov
hlt
push
jne
sti
and
push
pop
repnz
test
sbb
or
loop
movsl
mov
filds
mov
add
in
cmp
int
jno
loop
add
lock
pop
rorb
mov
jle
ljmp
or
in
mov
insl
fwait
fs
adc
std
arpl
aaa
rcr
mov
or
cmp
fnstsw
aaa
lods
lods
outsb
bound
mov
jecxz
and
rcrb
cli
loopne
mov
push
aam
push
repnz
inc
dec
adc
and
int
les
sub
jmp
xorb
cmpsb
cld
or
daa
sti
iret
jp
sti
out
dec
fwait
loop
xlat
nop
fldt
push
pop
sub
jae
add
daa
imull
fnstcw
into
xorb
in
int
out
xchg
mov
in
repnz
ljmp
mov
popf
jl
ficoml
aas
cmp
sub
mov
sub
cmp
lahf
cmp
sbb
pop
pop
fisubrs
mov
imul
cli
enter
and
push
and
cwtl
push
test
xor
xor
xor
or
mov
test
inc
adc
pop
in
push
into
sar
lds
jmp
sbb
pop
jae
jmp
xor
inc
xchg
mov
pop
or
sbb
mov
pop
ljmp
pop
call
mov
mov
imull
mov
cli
sbb
jmp
mov
in
bnd
mov
xchg
lret
adc
jo
pop
mov
mov
out
push
out
and
cmp
sti
pop
lods
pop
mov
aad
dec
jne
jne
or
and
push
cmp
push
out
sub
jno
ret
cwtl
ret
out
sahf
test
or
push
iret
scas
es
les
iret
and
push
call
xor
int
shlb
jae
insl
jb
xor
jp
mov
sbb
mov
mov
pushw
sbb
mov
call
mov
imul
rol
call
and
or
out
push
push
movzwl
lcall
out
and
cmp
mov
repnz
pop
pop
movsl
mov
xchg
add
shld
arpl
xor
lret
gs
int
push
or
pop
jg
test
movsb
loope
hlt
ret
insl
aaa
jno
in
call
mov
pop
addr16
test
cmp
xor
adc
daa
aas
int
dec
inc
add
negl
cli
adc
sahf
or
pcmpgtd
pop
rolb
inc
sub
mov
mov
mov
aam
ret
shlb
cltd
cli
outsl
pop
cs
or
mov
sub
sbbl
insl
je
jns
ficoml
jo
mov
adc
fidivrl
dec
lods
pop
sbbb
ds
pop
rorb
rcrb
sahf
jmp
cmp
add
iret
cmp
js
lret
out
in
jns
jmp
rorl
lods
sbb
push
insl
inc
xor
stos
rcr
nop
cmp
jne
cmpsb
std
int3
ss
in
mov
and
mov
adc
xor
cmpsl
test
fimuls
in
adc
hlt
js
subb
inc
jne
iret
push
icebp
js
ud1
test
sub
cltd
jnp
scas
lcall
scas
mov
adc
mov
sub
adc
out
pop
or
sub
pop
lds
fcmovbe
out
adc
ss
push
dec
dec
sub
jbe
mov
sbbl
cld
push
sub
push
sbb
xchg
imulb
rorl
test
cli
push
xchg
cmpsl
pop
inc
insb
pop
mov
mov
pop
sbb
adc
xchg
adc
mov
mov
je
jl
repnz
lea
inc
mov
xchg
push
sahf
mov
jmp
mov
test
sbb
sti
jb
mov
cld
out
and
sub
inc
bound
mov
sbb
insl
sub
sub
in
int
aad
movsb
sub
testb
add
xor
mov
addb
pop
inc
in
scas
lds
sbb
lods
jmp
or
emms
pop
mov
fadd
or
jle
test
push
cli
mov
mov
ret
lods
or
orb
std
ret
xabort
ss
mov
mov
push
or
dec
lret
or
dec
loopne
sbb
mov
fadd
jg
pusha
jnp
fisttps
cwtl
or
stos
imull
popa
mov
loop
out
ds
aaa
int3
push
adcl
jmp
mov
fwait
cmpsb
pop
inc
imul
push
aaa
sbb
mov
pop
inc
cmp
fsubrs
mov
addr16
lods
xchg
addr16
mov
mov
sbb
pop
mov
mov
es
sbb
mov
cs
add
xchg
movsl
jecxz
mov
sarb
arpl
mov
push
sbb
int
mov
sub
stos
and
fnstenv
push
or
pop
or
mov
inc
mov
testl
lods
bound
push
add
pop
lds
xor
push
data16
push
push
xchg
inc
das
pop
push
fistps
inc
mov
call
cs
lahf
push
pop
or
inc
jo
rolb
sbb
bound
ret
cmpb
xlat
scas
jg
sub
inc
xor
nop
enter
push
dec
sub
lods
stos
lods
sbb
and
mov
pop
insl
es
aaa
in
mov
mov
insb
aaa
ficoms
imul
mov
fists
xsaves
roll
mov
xor
out
test
bound
adc
mov
mov
add
call
loop
or
adc
pop
rcll
mov
mov
ret
js
fidivrl
cmp
adc
int3
sar
fsubs
loope
mov
or
pop
inc
mov
dec
stc
xor
iret
jmp
mov
inc
repz
mov
mov
shl
divl
insl
add
dec
popa
xchg
enter
rol
pusha
lret
scas
fdiv
fsubr
sti
dec
imul
dec
in
and
fidivrl
push
pop
aas
cs
add
ljmp
and
lret
mov
adc
xlat
roll
and
mov
lcall
inc
cld
push
push
jno
test
rol
pusha
mov
xorb
cmp
fiaddl
jmp
mov
lock
cltd
inc
mov
push
lahf
sarb
sbb
lods
fcomps
xchg
xor
jae
add
cli
jg
ja
sbb
and
stos
fistpll
fcomps
push
fs
xchg
push
jae
cmp
and
lods
dec
lods
ss
pop
fsubp
jmp
sbb
pop
sahf
push
enter
push
lods
dec
jmp
lret
int3
cld
std
iret
inc
add
mov
pop
lret
add
inc
ret
dec
sub
das
mov
xor
xor
fisubs
xchg
pop
mov
jmp
jae
lods
pop
adc
insb
xor
insb
push
xchg
jge
loop
jno
out
lret
pushf
dec
ficoml
adc
jp
sub
fiadds
add
fstpl
stos
cld
ret
dec
test
mov
mov
dec
jnp
fildl
push
mov
fwait
sbb
movsb
inc
shlb
enter
lcall
loope
add
sub
dec
jge
adc
lock
push
pop
ljmp
cmp
jb
addr16
push
hlt
adc
aas
outsb
ljmp
xor
jg
mov
ret
loope
or
sub
inc
fistl
push
sub
cmp
fwait
or
pushf
in
sub
outsl
jp
adc
xchg
sub
push
adcb
icebp
out
push
jns
xor
jl
or
mov
rcrb
out
cmp
arpl
mov
mov
sub
add
xor
rcll
lods
shll
jns
insb
int
insl
jnp
das
xchg
orb
lods
xor
xchg
pop
pop
in
fsts
or
int3
rclb
xor
cmp
test
pop
or
scas
mov
sub
sub
repnz
sbb
ds
icebp
mov
adc
inc
sub
mov
inc
andl
and
mov
push
mov
in
fstpl
adc
push
mov
fwait
sti
stc
test
adc
fsubrs
inc
loope
test
mov
sbb
shrb
xchg
mulb
cwtl
sub
dec
sub
jmp
outsb
cmp
sbb
icebp
fiaddl
adc
imull
inc
jbe
mov
mov
adc
or
jge
popa
aas
and
int
push
fisttpl
dec
sub
movb
hlt
mov
inc
fcompl
in
xchg
fimuls
addb
ret
adc
push
or
pop
js
jle
mov
or
dec
pop
sub
enter
inc
aaa
imul
lret
mov
xchg
and
xor
repz
cwtl
xor
sub
pop
push
xlat
ljmp
jg
xchg
mov
jo
cmp
int3
rcrl
hlt
test
pusha
mov
push
mov
sub
dec
cltd
ret
data16
sahf
cld
jge
sub
inc
in
jp
mov
or
ret
xchg
or
shrl
lods
xchg
lret
jnp
arpl
mov
fists
xorb
imull
jg
repnz
adc
addr16
je
in
inc
aaa
or
inc
add
lods
cmc
mov
dec
sub
jmp
cwtl
icebp
and
sar
dec
jge
ret
mov
dec
xor
pop
mov
or
push
dec
int
lret
out
adc
mov
in
xor
mov
repz
push
int
in
popa
movsl
lea
jp
push
push
lock
inc
xchg
sar
or
fistps
push
pushf
mov
cli
int3
daa
pop
fistl
rorl
pop
pop
rorl
lahf
out
jmp
and
sub
jnp
mov
lret
out
jns
sar
pusha
pop
stc
dec
gs
dec
divl
fildl
inc
fnsave
pop
sahf
insl
push
inc
lods
xor
dec
inc
repz
mov
cmpsb
xor
mov
mov
aaa
jo
mov
xor
or
cmc
insl
insl
push
test
das
repz
push
mov
stc
bnd
mov
add
pop
add
add
icebp
mov
push
in
std
jb
push
cmp
or
push
popf
sub
test
and
mov
sub
inc
call
loope
adc
adc
and
sbb
daa
or
fstp
lcall
lock
xchg
mov
inc
mov
adc
ret
aad
icebp
fidivrl
ljmp
xchg
jno
mov
clc
or
test
das
mov
pushaw
lock
xchg
test
dec
and
adcl
imul
inc
in
pusha
dec
cwtl
in
dec
add
pop
cmpb
mov
xor
push
ret
psubsw
iret
aas
push
decl
mov
mov
cmp
jg
lahf
fwait
jecxz
adc
cmp
jge
mov
adc
es
sbb
int3
sub
repz
leave
out
mov
repz
inc
jnp
fisttps
nop
insl
add
lods
or
jp
pushl
cmp
cmp
sbbb
cli
or
xchg
stc
shl
out
xchg
sub
lea
in
insl
xchg
pop
and
or
fstl
mov
adc
bnd
pop
movsb
sbb
xor
or
mov
loopne
mov
dec
xchg
paddusb
mov
xor
inc
test
xor
and
and
mov
shl
adc
push
mov
jl
bnd
out
sbb
jle
inc
pop
enter
rcr
and
sahf
mov
in
xor
inc
stos
inc
repnz
flds
push
and
dec
repnz
cmpsl
imul
xchg
jge
call
push
dec
testl
add
cs
sub
or
in
pusha
loopne
sahf
xor
test
push
dec
call
sub
subl
int
push
aas
je
in
jo
pusha
stos
ror
mov
aam
sub
mov
fcompl
push
popf
inc
pop
fdivs
pop
insl
xchg
push
fucomip
push
test
sub
out
mov
pop
fmuls
or
xor
inc
stc
cmp
icebp
or
mov
ss
mov
cmp
nop
push
or
stos
cmp
fistl
pop
mov
adc
dec
push
jg
adc
dec
inc
cmpl
popf
es
es
sbb
pop
daa
mov
cmc
mul
daa
mov
sbb
mov
cmpsb
pop
dec
jne
jne
inc
pushaw
pop
xchg
jae
scas
or
mov
jno
mov
dec
test
pop
or
mov
inc
outsb
dec
hlt
sbb
jns
inc
jns
sbb
daa
jno
lcall
xor
rol
xor
aad
sub
sbb
ret
insl
adc
xchg
int3
dec
dec
pop
mov
xchg
pop
fdivl
mov
std
decl
pop
call
xor
int
aad
ret
shl
mov
mov
js
ret
imul
incb
loopne
rorb
stos
sbb
jle
test
jns
sub
movsl
sti
outsl
or
mov
stc
jmp
adc
insl
push
pop
nop
pop
pop
or
jo
cmpsl
and
inc
inc
int
jmp
std
sti
sub
in
xchg
daa
es
pop
pop
dec
pop
pusha
xchg
dec
aaa
lods
imul
xchg
dec
pop
push
mov
jnp
and
dec
xor
adc
lret
jb
inc
std
insb
cmc
jp
xchg
das
daa
xchg
or
testb
in
mov
pop
jnp
xchg
and
loop
xchg
hlt
push
mov
cmpsb
out
lret
aad
ret
flds
ror
fisttps
push
in
mov
push
faddl
cmpsl
inc
add
fadds
push
adc
mov
sbb
inc
cmpsb
sub
idiv
aad
out
lcall
cmp
inc
or
mov
mov
jnp
push
shrb
mov
pop
and
loope
cmp
pop
mov
inc
or
daa
xchg
xor
xlat
sbb
and
push
out
fisubl
dec
out
sub
mov
mov
adc
push
loopne
mov
push
dec
push
mov
inc
sub
pop
inc
xorb
scas
sbbl
nop
push
cwtl
adc
sbb
outsb
pop
mov
xor
int
xchg
int
lahf
jo
fnstsw
fildll
add
sub
bswap
mov
dec
js
xor
mov
jns
lds
jae
mov
adc
sbbb
xor
cltd
sarl
pop
cltd
addl
mov
adc
int3
pop
jne
or
out
test
jbe
cwtl
je
xchg
adc
or
insb
mov
cmp
movb
pop
push
aas
fnstcw
push
xor
in
mov
sub
hlt
add
push
sub
adc
jle
data16
push
aad
fsubr
popa
xor
mov
lods
test
push
pop
hlt
mov
mov
cltd
jns
push
inc
mov
xchg
mov
repnz
test
pop
sub
pop
hlt
rcl
jg
mov
cli
and
jo
fimuls
or
xchg
popa
xchg
aaa
in
loope
dec
and
xor
shrb
xor
jo
inc
cmp
mov
push
xor
mov
out
or
lahf
push
outsb
jbe
movsl
jns
int3
mov
out
jbe
cli
jle
xchg
test
ljmp
in
arpl
sbb
xacquire
call
iret
jg
cmp
ja
push
cmp
jno
int
add
jnp
push
loope
push
sbb
sarl
out
and
inc
pop
in
movb
mov
inc
adc
cmp
in
and
repz
mov
or
repz
mov
or
dec
jl
int
orl
pop
mov
fs
outsb
inc
test
fsub
aaa
rolb
and
mov
jge
mov
lds
push
mov
xchg
pushf
mov
pop
inc
mov
movsl
push
jp
or
sub
ret
pop
aaa
cltd
cs
shll
lock
inc
sbb
mov
pop
and
mov
into
or
in
jl
mov
lahf
xor
addr16
insb
lcall
inc
cmc
sbb
sbb
pop
lea
notb
icebp
mov
mov
stos
adc
icebp
imul
bound
cli
dec
stc
lods
movsl
dec
xchg
stos
lock
push
cltd
sub
pop
lods
lods
xchg
push
das
sbb
add
stc
mov
not
imul
adc
and
and
or
sub
adc
sub
mov
jbe
push
fwait
pop
inc
loopne
popa
test
add
inc
movsl
and
push
in
mov
pop
mov
andl
mov
pop
aam
xor
jecxz
xor
dec
pop
xor
mov
ds
push
mov
add
aad
dec
mov
insl
popa
inc
lret
mov
mov
and
mov
in
xchg
into
repz
pop
and
push
scas
movsl
leave
sub
mov
cmp
arpl
fcmovu
adc
xchg
outsl
mov
add
sbb
divl
dec
and
into
push
mov
ret
dec
cwtl
nop
lret
sub
mov
mov
ret
out
insb
mov
daa
inc
fidivrs
cltd
ja
push
insb
inc
mov
xchg
dec
xor
enter
aad
js
push
faddl
sbb
or
ljmp
and
lret
or
dec
jmp
in
outsl
jecxz
fnsetpm(287
out
cmp
inc
out
es
jbe
sub
js
out
leave
testl
stos
movsb
or
inc
bound
cmp
add
xlat
hlt
mov
fidivl
jmp
pop
test
adcb
xchg
arpl
ret
shr
adc
sub
pop
mov
outsb
stos
sbb
arpl
sbbl
push
dec
lahf
xabort
xchg
pop
ljmp
xchg
gs
push
loopne
orb
mov
nop
or
adc
xor
lds
pop
adc
aam
and
shlb
jns
mov
fidivl
icebp
rcl
mov
inc
imul
inc
lock
inc
es
inc
jbe
jno
dec
and
inc
pop
pushf
ficompl
xchg
xlat
fistps
jb
pop
mov
mov
jmp
test
mov
pop
xchg
fisttpl
dec
push
and
dec
mov
mov
fists
adc
xchg
push
sub
dec
mov
outsl
mov
mov
cmc
fwait
mov
xchg
int3
pop
test
hlt
xchg
enter
mov
inc
out
and
jae
push
stos
jb
fldt
xchg
or
lret
mov
jg
mov
incl
sub
and
or
shrb
push
mov
fmulp
xchg
pushf
mov
repnz
in
stc
mov
mov
xchg
cmpsl
pushf
xor
jnp
or
fsubr
pop
mov
cltd
pop
imul
pop
nop
xchg
mov
cli
pop
cmp
imull
mov
jne
pop
popf
jae
jo
inc
or
lods
js
jp
pop
push
movsb
xchg
inc
mov
inc
ror
pop
inc
jb
clc
loopne
mov
ja
xor
mov
cmc
xor
xchg
flds
mov
lcall
jg
shll
lock
add
inc
sarl
and
xchg
js
push
mov
rclb
jne
and
cmp
loope
mov
cmc
xchg
jb
sbb
mov
xor
aam
int
xor
ljmp
in
jo
pop
xor
es
pop
add
push
jmp
lods
aaa
insb
inc
sarb
das
sbb
mov
cmp
push
push
mov
lret
out
rclb
and
fst
arpl
cld
lods
mov
pop
lret
mov
cmp
sbb
pop
jge
inc
or
lret
or
cltd
dec
and
lods
mov
int
dec
mov
mov
mov
cmpsl
dec
mov
push
or
enter
push
push
es
sbb
leave
fcomp
adc
sub
pop
sub
jno
xchg
dec
pop
or
sub
lahf
sbb
xchg
rol
clc
pop
add
aad
mov
pop
pop
sub
dec
and
mov
cmpsb
jmp
shrb
mov
pop
adc
in
jb
lret
cmp
jno
ds
dec
daa
gs
idivb
jo
push
lcall
cmpsl
pop
lods
mov
pop
fdiv
mov
insb
sbb
inc
scas
xchg
dec
sti
cmp
cwtl
jmp
lahf
sarl
movsl
movb
cli
jge
cmp
lods
rcl
push
mov
sti
inc
sub
sahf
xchg
lcall
add
xchg
jl
cmp
push
ljmp
lcall
notb
jle
dec
push
pop
cmp
std
push
out
mov
adc
jp
jbe
insl
push
inc
pop
push
mov
lret
aam
fucomi
xchg
imul
scas
lahf
pop
dec
mov
divl
sub
xchg
cmpsl
and
mov
movsl
push
xchg
push
xlat
cli
cmp
cmp
repnz
cmp
dec
xor
mov
into
sbb
jp
sub
inc
push
adc
aam
insb
or
cld
sbb
mov
sbb
adc
adc
sbb
xor
push
dec
movsl
scas
cltd
arpl
dec
push
xchg
mov
js
jge
movsb
movsb
xchg
loopne
add
or
xchg
sti
fisubrl
js
fcoml
or
jmp
push
dec
pop
cli
mov
cmpsl
std
and
mov
inc
movsb
or
mov
loopne
cmpsl
pop
xchg
pop
jmp
test
repz
add
cltd
pop
movsl
lock
jae
cli
adc
insb
stos
mov
cltd
jg
mov
lds
adc
in
xchg
sub
mov
mov
daa
adc
cmp
jb
orl
and
dec
inc
mov
xchg
pop
inc
mov
scas
cmpsb
sbb
and
jge
nop
jmp
mov
out
cmpl
mov
bound
popf
enter
data16
dec
test
or
mov
imulb
int3
cmp
sbb
loop
inc
mov
cwtl
dec
scas
int3
scas
sub
sub
sbb
sub
lahf
sbbb
stc
add
ja
xor
push
sbb
loopne
sbb
inc
loop
imul
lods
faddl
sub
hlt
adc
xlat
xchg
bswap
jns
xchg
adc
orb
outsl
xorl
addr16
sub
cmp
hlt
jp
fmul
dec
scas
loop
sar
mov
clc
std
in
xor
mov
xchg
xlat
roll
cltd
lret
popf
lods
ss
cmc
decb
addl
jg
popf
sbb
xchg
jp
push
stc
dec
repz
inc
jno
push
lds
idivl
pop
test
test
pop
xchg
push
cli
xchg
hlt
popf
ret
out
das
fwait
xor
mov
xor
cmp
pop
cmpsl
mov
mov
cwtl
add
adc
fbld
cmpsl
push
cmp
push
into
cmp
loopne
enter
sbb
dec
loope
xor
les
push
imull
push
movsb
je
adc
scas
mov
cmc
aam
in
iret
inc
lret
cmp
aas
sub
mov
mov
lret
sub
mov
pushf
cmc
push
cmp
push
xor
fs
fcoms
cmp
movsb
inc
sub
xchg
push
into
pop
movb
fucomp
int
jl
repnz
add
pop
call
loop
jmp
loope
pop
push
dec
dec
andb
cmpsb
inc
loopne
test
or
sub
cmp
leave
iret
rcrl
cwtl
or
loop
lret
jbe
shlb
insl
mov
pop
adc
push
rcrl
insl
mov
and
jns
jg
loope
lahf
daa
sub
dec
sub
add
inc
test
and
cmpsb
or
les
xor
outsb
push
jno
leave
jmp
clc
ficoms
scas
push
ficoml
mov
inc
ret
jle
imull
lds
scas
mov
mov
mov
jl
mov
xchg
xor
mov
dec
lds
fisttpll
inc
lods
movsb
mov
fwait
fs
mov
imul
ret
int
xor
std
aas
fistps
test
out
scas
jns
xor
mov
mov
mov
mov
mov
pop
dec
push
inc
dec
pusha
scas
pop
and
mov
scas
fadds
es
hlt
sbb
push
sahf
jns
das
xchg
pop
cltd
imul
xor
aam
mov
pop
scas
dec
daa
push
dec
shl
add
nop
in
aam
mov
xor
pop
hlt
in
aad
or
inc
insb
mov
mov
or
ret
enter
jns
add
insl
sarb
popf
add
lret
stos
mov
rorb
add
lret
cmp
xlat
pop
in
sahf
test
mov
mov
ss
repz
xchg
mov
jmp
mov
leave
mov
loope
adcb
adc
jle
movsb
mov
pop
fiaddl
sub
ja
daa
push
lret
inc
sbb
je
scas
and
das
xlat
sahf
fimull
adc
mov
es
jns
adc
popf
pop
les
scas
push
ss
push
mov
mov
jae
repz
or
repz
adc
mov
imul
sarb
push
or
out
ret
test
mov
outsl
dec
test
xchg
jnp
xor
fisttpl
sbb
mov
repz
lea
push
pop
cmp
call
out
push
subl
imul
test
inc
sub
lcall
vpunpcklbw
ficoms
je
push
add
nop
mov
sub
pop
cmp
dec
cmp
dec
out
sub
and
rcrb
jo
pop
test
hlt
std
out
jmp
popf
cmp
mov
test
pop
inc
mov
jns
loope
xor
je
and
in
mov
adc
mov
mov
add
push
test
aad
lea
dec
xchg
inc
xchg
imul
outsb
sahf
push
inc
pop
aad
dec
out
adc
xor
jecxz
mov
pop
testb
inc
std
stos
movsb
pop
xor
cmpsb
jle
xor
icebp
pop
or
pop
jno
mov
fistl
jp
jecxz
dec
call
push
iret
ret
dec
cmp
mov
mov
js
stc
mov
push
out
imul
cmp
adc
add
ja
lods
lods
xchg
dec
xchg
popa
icebp
inc
mov
and
mov
shlb
inc
aaa
jp
jno
push
ficompl
jo
jg
jl
out
repnz
adc
pop
nop
pop
das
push
jns
jae
jle
lds
aas
sub
push
mov
pop
and
inc
es
lret
push
sarl
xchg
ror
int
mov
loopne
test
cwtl
jnp
xor
sbb
fadds
sub
sbb
add
fistl
mov
inc
pusha
fildll
cs
or
and
cmp
mov
add
sbbb
int
hlt
idivl
dec
ljmp
xor
jnp
dec
dec
insl
mov
cli
inc
pop
xchg
repnz
jae
cmp
dec
push
push
out
adc
adc
lods
flds
call
loope
cmp
mov
or
sbb
js
mov
inc
and
pop
shl
stos
sub
push
gs
xchg
stos
xchg
sahf
or
sub
pop
fsubl
jp
pushf
ds
or
lahf
popf
inc
xchg
and
xchg
cmc
push
or
jmp
cld
dec
clc
jmp
sbbl
fsts
adc
mov
sbb
lahf
jmp
cli
push
jge
sub
jl
rol
jns
popa
faddl
mov
mov
outsb
inc
ljmp
cwtl
inc
push
fcoms
or
loop
cmp
push
ja
jb
mov
xorb
push
xchg
icebp
inc
and
mov
lock
rorb
jne
jbe
pop
das
orl
lods
xlat
pop
sbb
test
lcall
lods
test
jne
adcb
or
in
cmp
cltd
push
flds
dec
in
push
xor
rcrb
add
nop
rorb
pusha
inc
je
rorb
aaa
inc
dec
test
dec
nop
pop
loop
fldt
mov
pop
jle
stos
je,pt
inc
pop
cmpsb
and
sti
mov
insl
aam
dec
push
add
cmc
pop
cmp
xchg
jbe
pop
push
xor
enter
outsb
dec
mov
lcall
int3
ljmp
call
and
fsubs
mov
dec
push
dec
jl
cmpsl
mov
shl
fnsave
mov
mov
into
mov
std
and
push
loop
rcll
and
xor
lock
xor
fadds
les
xchg
sahf
dec
out
push
or
xor
out
nop
add
shlb
mov
sbb
sub
sub
sub
pop
ljmp
in
mov
adc
xor
push
xchg
add
mov
sub
pop
push
mov
mov
aaa
outsl
jnp
ss
bound
push
ret
rorb
mov
mov
xchg
cmp
std
mov
clc
lret
mov
cli
inc
push
int3
adc
dec
popa
sub
out
sarl
ljmp
mov
scas
sbb
dec
push
inc
daa
xor
cs
jb
cmp
adc
das
xor
cli
xor
cmp
imul
lcall
inc
pop
inc
and
cs
mov
leave
cmpsb
shrb
mov
mov
cmp
or
push
lods
jno
sbb
mov
insl
mov
andb
int
and
xor
ja
mov
in
inc
cmc
popf
adc
jecxz
xchg
loope,pt
cmpsl
clc
inc
aad
cmp
or
lcall
dec
or
or
and
sti
xchg
fstpl
test
dec
or
adc
dec
and
call
stos
xchg
in
push
ljmp
xor
loopne
fbld
sbb
or
popa
push
adc
jbe
shll
push
push
mov
nop
jmp
loopne
xchg
xchg
cltd
pop
adc
cmc
rclb
sub
mov
shll
push
cmpsl
mov
inc
lahf
aaa
stos
clc
push
pop
movsl
adc
jl
xchg
mov
dec
rol
lea
add
cmp
xchg
add
or
dec
ret
dec
flds
popa
sahf
adc
sub
lods
insl
loopne
pop
mov
push
cltd
jg
sbb
or
mov
rclb
push
testl
inc
out
xlat
out
fld
jo
cwtl
dec
ss
fwait
and
inc
push
push
or
inc
sti
cmp
or
inc
and
fnstcw
xor
je
pop
cmp
add
xor
dec
and
fimuls
mov
dec
jle
aam
lock
fildll
jecxz
add
add
cmc
decb
popf
in
push
adc
push
sahf
pushf
dec
pop
adc
ficoms
xchg
add
and
adc
fwait
lret
call
mov
scas
adc
sub
mov
cmp
out
ds
push
fidivrl
xor
pop
pop
dec
iret
cmc
stc
push
mov
jecxz
fs
jns
rcl
movsl
or
push
fsub
mov
in
lds
idiv
add
shlb
shll
repnz
flds
stc
jmp
adc
stos
jmp
xchg
and
mov
bound
mov
aad
jo
pop
insl
addl
punpcklwd
test
jmp
push
subl
sub
icebp
push
inc
push
and
ret
sub
sbb
mov
movsl
adc
mov
jnp
out
add
cmpsl
bound
popa
mov
stc
inc
imul
bnd
or
lret
add
mov
push
aam
out
push
repz
jl
in
sbb
lock
in
pop
or
push
enter
mov
dec
jbe
push
pop
push
sbb
ds
mov
in
fiadds
dec
fstpt
dec
loopne
cmp
sbb
out
sub
jmp
xchg
xchg
dec
sbb
mov
clc
shrb
sub
mov
hlt
aaa
inc
inc
inc
ss
and
and
push
je
ret
pusha
mov
out
adc
neg
jge
movsl
fidivs
push
fsubp
mov
add
jnp
outsb
push
shlb
xchg
xor
push
xor
jle
lcall
ret
nop
pop
mov
lods
cmp
cmp
mov
xchg
push
sub
nop
popa
mov
mov
scas
and
stos
das
mov
push
dec
adc
cmc
mov
fs
data16
cmp
inc
addr16
std
test
cmovno
daa
jo
aaa
movsl
sbb
xlat
inc
pop
in
cmp
cmpsb
mov
pop
xlat
fsubl
pop
sub
xor
add
fmul
xchg
test
or
int3
idivl
lods
dec
push
inc
xchg
mov
inc
fcmovne
adc
adc
mov
stc
in
adc
lock
hlt
sahf
ror
test
jecxz
and
mov
sbb
sbb
or
or
pop
mov
sbb
mov
test
lcall
bound
add
test
pop
adc
xchg
jo
cmp
push
push
dec
test
movsl
or
clc
ret
fucomp
icebp
xchg
inc
cmpsb
sub
jg
cwtl
pop
add
xor
or
push
xchg
push
cmp
mov
sbb
js
mov
scas
ret
xchg
mov
adc
mov
adc
insl
xor
pusha
dec
cs
sbb
in
mov
rcrb
imul
inc
inc
mov
sar
jne
into
inc
sub
enter
sbb
pop
fistpll
mov
or
lret
jne
pop
add
jae
int
sub
or
ret
mov
fdivs
shl
push
or
insl
add
xor
mov
nop
lock
ficoml
es
nop
gs
dec
xchg
and
int3
ret
lods
jle
xchg
shr
fisttpll
cltd
ret
in
xchg
sarb
or
repnz
mov
mov
sub
fwait
stos
ljmp
inc
aam
cmp
push
push
or
outsb
jbe
lock
pushf
cs
cwtl
push
aad
lods
bound
js
mov
enter
or
shlb
out
mov
jp
push
mov
jl
dec
pop
cli
adc
imull
xchg
xchg
mov
inc
adcb
out
xor
test
out
inc
mov
add
cmpsl
pop
inc
jns
xchg
in
jge
ss
pop
imull
sarl
mov
xor
mov
mov
xor
aad
cmp
mov
mov
cs
pop
ja
pushf
sbb
xor
xchg
push
or
stc
dec
cmp
icebp
fisttpll
push
push
adc
or
addr16
push
mov
xor
loope
test
mov
lea
sarb
mov
mov
xor
mov
mov
push
jmp
mov
sub
fstpt
je
mov
ja
clc
sub
cli
push
jbe
mov
or
dec
and
enter
fcoms
mov
les
pop
or
cmpsb
lods
mov
xlat
sub
and
pop
insb
fcmovnu
and
sbb
iret
mov
xchg
repz
cmpb
adc
daa
stc
lret
je
xchg
mov
lock
or
sbb
adc
cmp
mov
and
js
xor
imul
sub
popf
dec
xor
xor
sbb
in
sbb
pushf
mov
add
je
dec
loope
mov
pop
pop
xlat
xor
lret
sub
rolb
push
aas
test
lea
mov
in
shr
or
fisubrs
lahf
jb
and
std
test
dec
mov
push
push
adc
sbb
arpl
pop
js
xchg
mov
shlb
adc
rol
pop
jno
pop
and
pop
jo
or
fsubrl
xlat
mov
adc
mov
xchg
push
mov
fwait
scas
jp
adc
aaa
push
push
mov
push
movsl
jge
mov
xchg
xor
aam
or
adc
aaa
pop
cmp
lods
mov
add
xchg
mov
mov
jp
frstor
int3
mov
or
icebp
and
push
pop
mov
jo
addr16
orl
xor
xchg
push
and
call
push
sahf
aam
ret
xchg
fs
xor
mov
jmp
ja
pop
xor
ljmp
cmp
inc
or
les
sahf
stc
cmpsb
fcmove
out
push
push
push
shrb
pop
jnp
mov
mov
pop
out
fadds
mov
adc
add
cmp
lcall
sub
pop
sbb
dec
ror
or
in
adc
adc
aaa
xchg
sbb
push
inc
into
jbe
adc
fstpl
test
ds
aas
out
shrb
dec
pop
add
lock
fsubrs
mov
iret
lods
push
test
call
adc
loop
adc
scas
loope
insl
pusha
mov
add
pop
xchg
in
pop
lret
into
ret
fwait
inc
mov
mov
xchg
push
xchg
inc
jmp
out
test
adc
popa
cmp
out
negl
sbb
rolb
inc
xchg
lcall
test
xor
inc
pop
je
jmp
lret
sarl
rclb
or
daa
shlb
fstpt
sahf
enter
movsl
xor
mov
xchg
imul
sbb
shll
sbb
inc
mov
sbb
icebp
pop
or
cwtl
adc
and
adc
or
fstps
je
mov
insl
mov
jp
jo
adc
clc
inc
or
inc
lods
shrb
popf
lock
push
dec
loop
cmp
cltd
jnp
inc
push
push
jbe
lea
and
add
sbb
mov
loope
loop
mov
inc
inc
inc
or
pop
sbb
or
js
in
icebp
mov
sbb
push
dec
push
aaa
es
and
xchg
sub
add
movsl
inc
sbb
popa
cmp
mov
fsubs
jg
clc
addr16
and
sbb
xor
fs
out
jle
jae
sub
jb
ret
xchg
repnz
mov
test
inc
push
loop
popa
dec
je
sub
lret
ret
mov
mov
or
sbb
sti
cmp
jb
jmp
aaa
lods
in
mov
dec
pop
repnz
and
ja
push
mov
push
inc
lcall
xor
pop
movsl
cmpsb
push
rcll
jp
add
push
test
in
leave
pop
xchg
pop
mov
scas
ds
or
mov
lods
ljmp
bound
decl
cmpsb
inc
stc
cmpsb
hlt
or
and
push
loopne
imul
std
js
ds
popf
loopne
inc
orl
dec
mov
mov
pop
and
js
test
fidivl
or
or
testl
icebp
and
or
loopne
mov
sub
test
xchg
and
dec
inc
push
dec
scas
fwait
jmp
or
or
pop
femms
bound
outsl
adc
jo
sbb
into
sub
das
and
movsb
xor
xlat
ljmp
std
dec
insb
pushf
or
nop
addb
xchg
mov
sub
mov
xlat
movsl
arpl
iret
mov
fdivs
data16
pop
call
mov
mov
pop
stos
push
mov
dec
mov
xor
sub
clc
scas
mov
adc
and
mov
xchg
cmp
cmp
dec
in
stos
add
shlb
xlat
mov
mov
jae
push
xchg
mov
into
out
lds
xchg
std
mov
into
cmp
adc
lahf
in
nop
jno
out
mov
shlb
pop
mov
mov
stos
pop
enter
add
jmp
xchg
mov
int
outsb
mov
cmp
jb
stc
mov
ret
rcll
maxps
jmp
nop
sub
cwtl
push
mov
xor
pop
jmp
insb
sub
test
decl
lahf
dec
leave
dec
stos
add
sbb
cmp
in
xchg
orb
jae
ds
jle,pt
ss
cmp
mov
jle
sub
out
rolb
and
xchg
jae
stos
mov
movb
inc
push
out
and
shrb
dec
arpl
adc
mov
jge
mov
jo
mov
daa
pop
push
aad
sbb
lea
mov
dec
push
mov
xor
xchg
push
cmp
dec
xlat
sub
push
jmp
inc
in
test
mov
popf
xor
cmc
push
mov
insb
jae
dec
aam
rclb
ret
movsb
dec
movsb
stos
jae
adc
pop
addr16
xor
ds
sbb
and
aam
xchg
test
or
pop
fnsave
lahf
shl
ret
adc
imul
outsb
xchg
fildll
add
out
je
add
xchg
xchg
push
es
pop
push
push
sbb
push
jp
shrb
fucomip
push
and
xor
dec
jb
push
sbb
xor
in
in
aaa
and
dec
sub
flds
pushl
mov
jae
and
mov
push
ljmp
add
jns
shr
ret
add
mov
fsubrl
in
cmp
mov
je
test
insl
shlb
push
jmp
xchg
icebp
inc
hlt
out
data16
push
stos
xchg
xor
or
loope
and
and
out
sub
inc
test
push
fwait
shll
pusha
xor
mov
push
mov
iret
fwait
add
jge
push
push
push
pop
push
or
cmpl
fsubrs
jno
push
daa
andl
add
cmp
jp
bound
sahf
imulb
mov
test
adc
ljmp
rorb
inc
fcmovb
mov
xor
jmp
repz
and
cltd
lret
pop
sbbl
or
jo
add
les
jne
mov
or
add
or
mov
cwtl
sbb
ja
dec
test
divl
sbb
adc
lret
pop
mov
mov
push
out
icebp
mov
jg
es
jg
stos
clc
sbb
mov
sbb
dec
lods
mov
or
sub
mov
adc
or
or
push
aaa
pop
or
jge
xchg
mov
dec
cmp
jp
dec
pushf
call
push
fcomps
sub
lods
push
into
inc
jp
fucomip
mov
mov
sub
mov
icebp
mov
imul
pop
lret
jecxz
sbb
xor
and
pushw
mov
mov
icebp
cld
jns
dec
das
xor
fwait
pop
lds
ud2
clc
sub
dec
jp
mov
jns
xor
sbb
lods
nop
sbb
rcl
sub
popa
push
cmc
inc
xchg
daa
sub
movsb
dec
pop
aam
scas
mov
xchg
imul
and
adc
jmp
sti
dec
jns
lock
out
push
mov
or
pop
lods
movb
into
int
dec
xlat
sub
or
cmp
lds
xchg
lock
sbb
mov
cmpsl
mov
out
push
and
xchg
fldenv
vmovups
imull
arpl
lahf
fsubrl
inc
cltd
imul
xor
subl
clc
mov
mov
jg
das
adc
sti
mov
arpl
xchg
add
inc
cld
pusha
sbb
add
jno
mov
inc
cs
fs
xchg
pop
aad
mov
push
jb
jle
sub
jmp
ds
or
loop
xlat
fiaddl
add
jnp
xchg
pop
cmp
xor
dec
mov
xchg
jge
push
mov
les
pop
jp
pusha
adc
jle
out
xor
mov
sbb
fildl
int
popa
leave
jae
mov
mov
int3
out
pop
cmpsb
popf
jae
adc
mov
mov
push
out
test
fisubrs
sub
mov
std
mov
movsl
std
adc
jecxz
jbe
cwtl
lods
leave
mov
mov
inc
jg
andl
dec
jl
lock
jbe
icebp
shll
idiv
inc
cmp
cmpsb
mov
popf
testb
xchg
cmp
test
jmp
and
movsl
pop
in
pop
mov
and
and
pop
pop
add
mov
pop
ss
or
cmp
and
xchg
repnz
ret
fs
icebp
dec
stc
rol
push
jp
lcall
jns
mov
push
xor
xchg
cvtps2pi
dec
push
and
pop
jns
test
sbb
push
enter
and
mov
lds
adc
in
mov
dec
sbb
dec
xabort
push
and
lods
in
cmp
xor
cwtl
jb
push
int3
jne
or
jns
shll
mov
jno
sub
push
sbbl
insb
push
pop
jae
xor
pop
dec
rcrl
sbb
xor
or
sbb
jle
ljmp
aaa
pop
mov
mov
lret
imul
pop
mov
sbb
flds
shll
repz
xchg
dec
mov
stc
sarl
add
pop
xchg
stc
fldcw
iret
push
mov
push
test
and
push
dec
in
test
cs
inc
adc
dec
pusha
bound
bound
lcall
divl
jno
test
movsb
popf
lock
sub
mov
js
push
fidivs
iret
loopne
xchg
sub
xchg
xchg
fcomip
jle
leave
out
lret
cld
ret
mov
aas
push
xor
pop
leave
lret
daa
inc
dec
adc
lcall
icebp
and
fistpll
add
out
mov
pop
roll
lods
and
fmull
fs
cld
push
sbb
jno
xor
imul
loope
inc
adc
add
ds
or
dec
in
jecxz
shll
mov
ja
jp
jne
mov
mov
pop
mov
jne
aaa
cltd
test
ss
in
jnp
insl
ret
xor
mov
pop
fildll
jne
and
sbb
xchg
loop
es
jecxz
insl
clc
push
or
pop
arpl
sbb
push
test
jo
mov
add
mov
dec
xchg
icebp
test
aad
mov
inc
cmp
sub
xor
adc
lods
rcr
repz
sarb
mov
gs
mov
dec
inc
lds
mov
cmp
pop
mov
cmp
inc
sub
dec
jle
scas
out
pusha
lcall
data16
enter
xchg
lods
add
ret
sub
es
push
dec
fstpl
mov
mov
xlat
test
fsubl
je
popf
sub
lret
xchg
and
push
add
cmpsl
je
outsb
pusha
mov
popf
stos
testl
mov
stc
ret
dec
sbb
adc
insl
push
pop
fldenv
dec
decb
push
fs
loop
fildl
jl
mov
inc
or
arpl
ljmp
scas
dec
test
xlat
cmp
test
or
arpl
dec
call
push
mov
lahf
je
jns
push
push
inc
push
fadds
fisttps
out
cmp
inc
jge
cmp
popa
sub
push
clc
imul
sbb
inc
dec
and
push
mov
lods
xchg
test
jno
pushf
push
cld
xchg
cmp
dec
out
stos
mov
in
fdivrl
daa
jnp
dec
rcrl
sub
hlt
jp
ljmp
and
add
arpl
in
outsl
cmp
mov
mov
pusha
iret
addr16
inc
ds
push
enter
pushf
xchg
ret
loope
pop
pop
mov
xchg
xchg
data16
imull
imul
sbb
xchg
jg
out
ss
mov
or
xor
inc
icebp
pushf
cmp
int
mov
push
xchg
xchg
mov
inc
imul
shr
das
int3
dec
lock
mov
pop
sub
lea
rcl
sub
pusha
adc
ja
cmp
sub
sbb
shlb
xchg
mov
imul
bound
inc
mov
cmp
or
add
fdivrl
dec
sbb
test
testb
cltd
pop
repz
jb
ffreep
pop
call
sbb
pop
mov
cli
and
es
insl
fwait
cwtl
push
jmp
movsb
outsb
fs
jae
mov
jmp
sar
push
lahf
cmpsl
mov
add
movsl
add
xchg
or
add
dec
dec
xchg
dec
jmp
lret
jl
push
pop
mov
test
or
test
mov
and
xchg
sbb
pop
xor
dec
test
add
jns
lea
stos
mov
data16
cmpsb
popa
xchg
mov
xchg
inc
imul
adc
aaa
nop
lahf
jecxz
aad
aaa
pushl
int3
dec
add
jecxz
or
xchg
sub
insl
clc
ror
sbb
aam
fnstcw
rclb
inc
mov
pop
jnp
add
enter
repnz
rorb
aad
xlat
enter
sub
pop
push
mov
lods
adc
sbb
sti
mov
nop
mov
mov
js
inc
in
pop
outsl
sbb
xchg
lods
push
xor
outsb
inc
in
add
aad
xchg
ror
xor
outsb
inc
add
into
das
das
cmp
repnz
lret
mov
xor
mov
addr16
fstps
fcompl
jecxz
cmpsb
add
jae
cli
and
mov
js
scas
inc
sbb
push
xchg
aad
pop
jmp
jge
add
or
scas
cli
std
inc
xchg
shl
ja
aam
push
sbb
push
or
sub
xor
lods
jecxz
xlat
pop
popf
cmp
inc
dec
data16
sub
in
jns
push
sub
or
mov
fstl
xlat
xchg
icebp
sub
addr16
bound
sbb
test
sub
repz
cmp
insl
and
aam
inc
xchg
aas
test
mov
outsb
into
cli
pop
popf
xchg
and
int
xor
cmpb
or
mov
mov
jnp
rcr
icebp
or
les
nop
outsb
imul
mov
outsl
mov
dec
mov
in
cmp
movsl
orb
hlt
cmp
adc
stos
xchg
xlat
and
adc
les
mov
lahf
sbb
les
lcall
sub
fsubrs
sub
mull
xor
jmp
outsl
out
lds
pop
sbb
mov
scas
inc
leave
popf
mov
pushf
sti
dec
xchg
cmp
scas
std
nop
xchg
mov
enter
clc
push
sarl
inc
xchg
fdivrl
mov
mov
push
and
and
int
cmpl
movsl
pop
bound
push
cltd
xor
jmp
or
and
adc
push
outsb
mov
adc
xchg
sub
jmp
pushf
inc
adc
pop
rclb
mov
push
repz
push
and
push
push
xor
add
and
cld
pop
call
mov
jae
test
stc
and
fwait
sub
pop
add
cmpsb
popa
stos
nopl
add
mov
adc
xor
push
sbb
jmp
stc
jmp
sub
or
test
add
dec
sub
or
in
push
aam
sti
lcall
push
test
jl
mov
cmpsl
ret
movsb
xor
sbb
jl
sbb
orb
dec
mov
rcll
push
inc
les
pop
inc
stos
lods
pop
into
push
jno
sub
call
mov
aam
mov
loop
push
cmpl
loopne
rol
aas
loop
in
iret
jo
flds
outsb
mov
in
cmpsb
pushl
cmp
scas
pushf
ja
repz
add
xor
and
xor
pop
stos
push
negl
rorb
pop
sti
aad
push
scas
fdivl
hlt
sar
push
dec
mov
dec
loope
aaa
inc
not
fucomp
repz
out
xor
push
xchg
mov
mov
test
xchg
fmuls
push
cmp
adc
shlb
mov
sbb
orb
call
aad
xchg
sbb
fisttps
repz
jl
push
pushf
push
or
and
movsb
stos
repnz
stos
movsb
in
pop
mov
repz
xchg
xchg
mov
bound
gs
je
stc
loope
iret
push
data16
add
and
ljmp
or
mov
sbb
xchg
mov
out
insb
fnop
ljmp
push
outsl
lahf
sbb
add
popf
icebp
push
mov
ljmp
pushf
xchg
xor
aad
ret
jbe
fs
mov
push
or
decb
cmp
ss
ud2
jnp
xor
pop
loope
jo
pop
pop
cltd
jns
cmp
dec
std
pop
sub
xchg
ret
or
sbb
addr16
lahf
jge
cmp
sub
jnp
pushf
sbb
mov
or
pop
scas
lahf
push
repnz
fs
mov
bound
mov
mov
in
sbb
lock
jb
popf
xchg
mov
mov
loop
shrl
in
loope
rcrl
pop
dec
les
ret
cmpl
and
mov
adc
test
insl
inc
aas
adcl
imul
jecxz
les
repz
add
sahf
clc
dec
pop
jbe
les
pop
dec
xchg
xchg
push
mov
mov
or
sub
xor
adcl
leave
lea
add
and
dec
jne
mov
xchg
adc
clc
jl
jg
cmp
jge
jg
jae
mov
movsb
xchg
push
adc
mov
inc
pop
cmp
daa
insb
cmp
and
je
sub
dec
xchg
enter
rolb
inc
pop
and
pop
push
fwait
movsb
xchg
cltd
repz
out
xchg
cmp
sub
pop
jg
push
add
pop
ret
sbb
nop
cmp
mov
or
data16
popf
xor
outsb
xchg
push
dec
pop
push
js
bound
shll
int
or
xchg
fwait
jge
arpl
mov
fstpt
cld
cmp
iret
xor
sub
mov
inc
cltd
xchg
mov
push
loop
data16
xchg
fsubs
idiv
xchg
sub
lret
cmc
push
xor
icebp
dec
loop
std
out
pop
imul
pop
sbb
mov
pop
loope
dec
xchg
mov
or
hlt
inc
leave
mov
mov
and
mov
in
int
lods
ljmp
aam
mov
sti
inc
pop
enter
sarb
pop
add
popa
add
leave
out
clc
cmp
jp
lds
mov
rcr
sbbl
lds
stos
cltd
into
test
sbb
adc
push
mov
lods
decb
inc
mov
xor
mov
push
loop
mov
repz
dec
and
fdivrl
lahf
cmc
inc
fbstp
cmp
xchg
jmp
xchg
or
xor
je
dec
jg
stc
fdivrl
imul
pop
pop
sbb
mov
dec
aaa
mov
mov
es
mov
dec
jns
mov
jne
pusha
call
popf
ret
and
out
mov
or
fnsave
push
add
adc
pop
mov
pop
or
pop
xor
stc
cmpsb
sbb
imull
mov
or
js
lcall
adc
sbb
std
pop
faddl
in
mov
rolb
cmp
pop
popf
sbb
ret
jns
icebp
push
xchg
jno
or
call
or
dec
mov
les
cmpb
iret
jnp
inc
adc
jns
sub
cmc
aaa
sbb
jle
mov
outsb
dec
xchg
das
shrl
xchg
sbb
lcall
movsl
ret
cmpsb
lcall
ret
scas
dec
push
nop
sub
lret
imul
shrl
cmp
inc
pusha
dec
das
mov
fisubs
push
loop
pop
xchg
xor
test
or
insb
repnz
push
xchg
lret
lahf
sub
sub
popa
push
xchg
adc
je
mov
fisubrs
cmp
stos
pop
testl
pop
stos
fsubl
sbb
shll
push
outsb
push
mov
or
lea
adc
sbb
jno
es
push
jno
es
sub
mov
push
jae
cs
popl
scas
test
fs
sar
jmp
xchg
mov
push
lret
pop
inc
adc
int3
das
add
cmpsb
adc
mov
inc
repz
sahf
scas
popa
pop
jp
cs
sahf
mov
mov
in
or
push
js
ljmp
mov
sbb
scas
jge
pop
add
in
push
ljmp
fsubrl
cli
inc
mov
pop
mov
cmc
add
push
jg
into
outsb
sbb
mov
stos
popa
jns
sbb
outsb
xor
pop
cmp
and
in
adc
cmp
or
das
pop
daa
pop
xchg
push
pop
mov
adc
mov
mov
aad
dec
leave
jge
pop
dec
cmpsb
mov
es
cmpsl
inc
lods
aas
ljmp
xchg
mov
ja
sar
inc
arpl
call
pop
jmp
call
test
xor
adc
idivb
aam
ret
int3
orl
xor
pop
dec
mov
movsb
sub
outsl
movsl
outsb
in
push
jecxz
in
inc
dec
xchg
xchg
stos
lds
out
mov
std
jmp
stos
push
pop
movsl
adc
lret
lods
cmp
ljmp
and
mov
pop
or
mov
push
or
loopne
pop
faddl
and
icebp
and
xlat
mov
mov
gs
daa
adc
sub
fsubs
jg
stos
sti
dec
cld
mov
out
xchg
cltd
into
adc
retw
stc
cmp
and
in
scas
mov
nop
or
add
inc
jp
and
sub
push
iret
xor
add
push
push
ljmp
fiaddl
mov
es
lahf
sbb
aad
sub
pop
shl
icebp
das
je
mov
stc
mov
adc
push
filds
fstpt
cs
leave
jl
dec
aad
dec
dec
sub
in
ss
sbb
cs
and
mov
sbbl
xor
sbbb
xorb
aas
pop
icebp
js
in
or
jb
aad
xchg
subl
and
ret
ret
jmp
xchg
fisubs
pop
lods
and
daa
fisttps
lahf
hlt
mov
cmpsl
aad
mov
xor
add
sbb
test
cmp
sub
outsb
and
sti
and
ss
mov
mov
mov
pop
pop
cmp
push
sbb
aaa
mov
nop
ret
fidivrs
inc
add
sub
mov
stos
adc
push
sub
push
orb
je
jg
mov
pop
pop
dec
mov
fs
aad
or
sbb
and
or
pop
rorl
inc
fcoml
jns
das
mov
movsl
ja
fisubrs
xor
push
and
bound
ret
cmp
pop
jecxz
cmpsb
cmp
inc
inc
in
adc
pop
pop
ss
les
xchg
dec
jne
jge
fdivr
or
sahf
xchg
mov
dec
test
fistps
pop
ret
ret
mov
sahf
pusha
mov
pushf
mov
sarl
dec
jl
ret
rorb
das
or
popf
mov
pop
sub
pop
fdivrs
dec
sti
pop
or
imul
push
repz
add
lret
and
inc
jmp
sbb
pop
jmp
lock
adc
fnstcw
addb
xchg
insl
add
jmp
ljmp
jp
jp
sub
ljmp
mov
xchg
sub
push
andl
push
xorb
jmp
dec
cmp
mov
mov
and
gs
and
pop
adc
cmp
sbb
es
in
jno
xorl
cmpsl
flds
fidivl
cmpsb
loop
inc
jp
and
fldenv
lea
xor
test
loopne
fwait
push
fwait
shrb
js
sub
imul
popa
sbb
mov
popf
mov
xor
jno
push
push
sbb
mov
pop
outsb
scas
shrl
js
inc
in
gs
icebp
sub
clc
push
arpl
xchg
fs
inc
aad
out
xchg
call
jle
push
daa
arpl
ficoml
xchg
popf
xor
xchg
mov
clc
pushf
stos
out
push
fstpt
pusha
sub
daa
inc
xor
in
mov
jne
lods
jnp
aad
add
rorb
jg
mov
data16
fisttps
mov
mov
in
ret
adc
mov
aad
mov
pop
sbb
push
lods
arpl
dec
mov
shrl
lret
out
mov
popf
scas
ret
lds
icebp
or
clc
and
popa
pop
movsb
xchg
sub
fsubrp
push
cmp
mov
addr16
adc
or
cmp
or
jbe,pt
lahf
add
pop
je
decl
jnp
movl
mov
shl
lea
mov
and
scas
mov
int3
jb
adc
imul
or
repnz
mov
lcall
hlt
xchg
cltd
fstpt
push
rcrb
test
cld
call
out
inc
mov
stos
add
daa
jecxz
or
pop
rorl
shl
cmp
in
push
test
jae
pop
test
jp
loopne
int
je
das
fwait
pop
adcl
mov
rorb
inc
sub
das
insb
add
fwait
pop
xor
add
mov
js
sub
shrl
enter
sti
lods
sarl
aas
push
test
pop
pop
or
adc
cwtl
sbb
scas
mov
push
jns
mov
jno
ja
cmp
jne
cwtl
dec
cwtl
dec
testl
mov
adc
stos
or
scas
into
xchg
xchg
ljmp
ret
aad
imul
jg
cmc
test
lock
adc
dec
sbb
cmp
mov
flds
or
test
jp
and
xor
in
mov
cmpsl
sbb
ds
stos
dec
fnstsw
in
cli
xlat
mov
mov
lcall
daa
sbb
mull
sbb
daa
out
dec
push
mov
dec
inc
or
ss
cmp
add
and
iret
insl
dec
repz
xchg
out
hlt
clc
dec
dec
inc
push
movsl
xor
xor
adc
dec
push
lret
lods
into
sbb
mov
mov
or
ret
mov
es
rolb
adc
jge
adc
jne
mov
sub
ja
sbb
inc
add
mov
in
jp
mov
jns
int3
sbb
cmc
sti
add
loopne
jecxz
or
call
aaa
jge
adc
in
lods
mov
or
push
or
lret
inc
cwtl
xchg
insl
lahf
popf
ljmp
ljmp
mov
mov
push
add
or
mov
lret
inc
mov
lea
xor
aas
es
add
test
pushf
adcl
cli
movsl
enter
dec
fistpl
pop
jmp
sub
pushf
lds
cltd
mov
jmp
rol
lret
mov
push
negb
push
dec
pop
mov
inc
pop
stos
leave
xor
or
lcall
cmc
movsl
fsubs
lods
mov
adc
xchg
push
sub
pop
sub
xchg
cmpsl
dec
popf
add
adc
xor
jge
fdivl
inc
sbb
jl
add
sti
fidivl
test
mov
ds
in
cmp
inc
enter
xchg
add
or
adc
jnp
mov
add
daa
or
mov
pop
fildl
test
or
xlat
mov
lret
fstpl
es
push
adc
clc
js
test
or
call
ss
xchg
adc
cmp
nop
std
data16
adc
push
aaa
sahf
adc
adc
jl
inc
movsb
sub
vprotb
sti
or
into
push
jae
push
aaa
jmp
jae
pushw
lret
fnstsw
test
push
leave
mov
scas
mov
pop
lahf
clc
stc
and
mov
stos
adc
cltd
repnz
lcall
in
mov
xor
andb
inc
std
inc
jl
lds
pop
xor
sbb
test
scas
sub
test
and
mov
dec
gs
lcall
lret
adc
fstl
xchg
mov
rorl
mov
push
mov
in
rclb
cld
fwait
out
jmp
jecxz
and
add
out
jle
scas
push
sbb
insl
push
sub
fst
push
mov
jmp
adc
pop
test
jo
fdiv
ret
add
push
sbb
negb
pop
push
testb
or
push
stos
mov
mov
test
pop
xchg
insb
test
sub
pop
fs
pop
aam
out
fnstenv
pop
and
and
incl
mov
ror
adc
cmp
jne
mov
or
das
dec
stc
loopne
sbb
outsl
int3
ret
ja
in
or
aaa
xchg
and
add
jo
icebp
leave
in
out
dec
push
mov
or
fmull
stos
jae
push
xor
add
mov
out
dec
xchg
outsb
mov
cmpsl
decb
or
insl
mov
arpl
cmp
lods
mov
addl
insl
pop
sbb
mov
stc
insb
sbb
adc
mov
fwait
ds
pop
stc
adc
push
mov
arpl
mov
lods
cwtl
pop
lret
loopne
bound
and
dec
xchg
xchg
mov
sbb
and
lcall
push
data16
loop
movsb
jae
and
cltd
mulb
sbb
inc
leave
jl
lds
mov
mov
test
pop
xlat
xchg
pop
mov
and
lret
jae
and
adc
sbb
xor
push
stc
mov
mov
sub
adc
push
and
push
fisubrl
and
das
nop
or
je
push
jl
adc
mov
and
adc
sbbb
clc
or
pushf
sti
xor
inc
mov
and
shrl
pop
arpl
cs
ljmp
sahf
add
cmpsb
lahf
repnz
dec
fistps
and
xchg
aad
js
sub
je
pop
adcb
inc
sbb
inc
out
jl
push
repz
jle
sub
dec
pop
and
pop
das
imul
jno
mov
sbb
aam
ret
cmc
sub
push
out
repnz
test
outsl
imull
mov
mov
shr
and
sub
aad
mov
xrelease
push
jmp
outsb
jle
rclb
adc
inc
push
lret
aam
cmc
mov
pop
fmull
mov
dec
cmp
int
xchg
loop
notl
adc
cmpsl
movsl
inc
js
dec
jns
mov
fistps
mov
dec
out
dec
add
and
sub
or
dec
je
hlt
jle
jne
pop
mov
sub
cmp
adc
mov
jbe
cmp
les
adc
jbe
push
pop
and
movl
pop
jecxz
pop
sbb
imul
xchg
push
test
rclb
mov
mov
out
xchg
push
insb
or
push
cwtl
fnstenv
push
popa
fdivr
xchg
inc
fsts
jmp
cwtl
dec
fmul
sub
inc
arpl
test
test
adc
imul
into
sbb
jmp
cwtl
lahf
fs
xor
sti
je
mov
jg
or
insb
scas
jge
or
lret
ficoms
hlt
mov
ss
subb
cmp
mov
push
xchg
pop
or
push
mov
adc
out
and
pop
out
push
pushf
js
mov
xchg
inc
pop
dec
mov
xchg
xor
arpl
out
lret
sti
mov
aad
into
add
fsubrl
inc
sub
pushf
out
pop
mov
and
fwait
popf
arpl
push
out
dec
ja
sbb
sub
out
testb
sbb
inc
insl
jge
sbb
outsb
jo
push
mov
mov
pop
addr16
mov
rorb
cmp
mov
mov
jecxz
fmull
inc
adc
cltd
push
or
dec
lods
imul
xchg
ret
fmuls
stos
cwtl
js
pop
sti
inc
in
dec
fildll
xchg
mov
dec
push
and
inc
cld
fdivrp
in
mov
xor
inc
dec
inc
xchg
outsb
dec
hlt
aad
lea
mov
dec
ss
sbb
negl
sbbl
pop
xchg
inc
xor
test
stos
insl
mov
test
into
cwtl
add
xor
inc
cli
std
jbe
add
cmp
mov
sbb
or
aam
aam
xchg
dec
pop
jbe
mov
inc
push
push
outsl
rcll
cmp
adc
insl
test
int3
mov
aas
mov
mov
inc
mov
shll
ret
adcb
push
xor
jg
dec
fwait
xor
cs
int
inc
jp
dec
pop
mov
mov
and
mov
pop
push
sub
jae
sub
add
sub
dec
int
je
sti
mov
pop
lahf
ja
jb
lds
filds
mov
out
dec
loopne
pop
jg
mov
xchg
jg
and
pop
clc
push
mov
and
sbb
out
mov
neg
sbb
mov
movsl
aas
jne
jp
cmpsl
inc
or
xchg
sub
ljmp
movl
cmp
aaa
dec
jmp
data16
bound
sub
stos
aam
mov
mov
repz
test
cwtl
or
mov
mov
add
jb
push
loopne
repz
pop
je
and
sub
xlat
fimuls
lods
push
xchg
xchg
push
imul
mov
mov
fdivp
daa
xchg
leave
jl
xor
lods
mov
lret
aad
sti
cmp
pop
cmp
jle
inc
imull
movsb
mov
jge
fistpl
xor
mov
xor
and
push
sbb
inc
popf
pushf
cli
in
repnz
push
aad
push
pop
jb
or
in
push
push
rcl
stc
test
mov
push
fistl
out
popa
mov
jnp
shlb
jo
cmc
mov
faddl
sub
sahf
push
movsb
in
fstl
cmpsb
pop
xor
int
aaa
inc
push
fbld
jo
addb
pop
push
lock
hlt
cwtl
and
rolb
jg
cmpsb
adc
repz
mov
lret
sbb
jnp
push
push
icebp
cwtl
inc
mov
cmp
stos
cmp
inc
push
sub
gs
xor
push
pop
and
insb
push
cmpsb
rcl
negb
hlt
stos
jo
mov
cwtl
or
or
andl
xor
fs
inc
ljmp
lret
jo
and
test
popf
scas
sbb
lahf
xchg
add
lods
sbb
jmp
repnz
cltd
xor
pop
mov
xchg
mov
pusha
xor
pop
js
add
jg
insl
test
into
aaa
inc
jmp
mov
test
and
outsl
xchg
leave
outsb
adc
mov
aas
inc
mov
dec
mov
lods
lahf
pop
repz
xchg
adc
and
xor
mov
daa
fimull
shrl
inc
sbbl
jp
xchg
pop
or
lock
popa
mov
daa
mov
and
loope
adc
mov
xchg
cmpsb
and
pop
sbb
movsb
or
loopne
jno
pop
xor
ret
fmul
push
or
add
inc
fwait
dec
dec
repnz
ficomps
js
out
pop
xchg
sub
push
jmp
mov
shrl
inc
add
xor
xchg
push
sub
and
mov
scas
inc
fisttps
add
push
lret
jne
jbe
sbb
mov
stos
out
and
adc
jecxz
mov
scas
sbbl
dec
jns
outsb
xchg
int
or
icebp
push
fnstcw
popf
sub
icebp
dec
or
pop
pushf
fcompl
shll
jb
mov
or
clc
cmpb
sub
jmp
fiadds
xchg
or
lahf
adc
fwait
push
dec
cs
pop
jb
pushf
lret
jp
xor
cmc
xchg
dec
jns
test
pop
movsl
push
lcall
cmp
cmp
cmp
sbb
inc
je
cli
adc
mov
imul
out
push
xlat
lahf
cwtl
rcrb
fistps
ja
fs
push
in
jns
and
lods
int
test
scas
shrl
sahf
cltd
divb
hlt
test
fisubs
in
xchg
notb
mov
jnp
push
cmpsl
or
ds
adc
xchg
fstp
mov
int3
push
xchg
loope
fs
daa
ss
insl
push
inc
arpl
je
mov
jbe
pop
adc
or
pop
das
xchg
movsl
jp
and
xor
fdiv
loop
xchg
stos
push
cwtl
aaa
ret
mov
sbb
in
les
and
outsb
mov
int
pop
out
mov
inc
xchg
or
pop
out
or
mov
xchg
adc
int3
mov
cwtl
stos
xor
ljmp
cmp
mov
incb
mov
popa
in
cmp
sub
cmp
mov
enter
data16
sbb
popa
fcomip
hlt
adc
push
shl
inc
jo
mov
mov
jle
mov
dec
cmp
add
cmp
jbe
jecxz
adc
call
nop
pop
leave
xchg
mov
adc
or
sbb
aad
aad
pop
cmp
lret
or
xchg
mov
cltd
dec
pop
pushf
pop
aam
adc
stos
pushf
lret
je
cmp
leave
mov
test
jle
jp
out
outsb
popf
mov
add
xchg
inc
adc
js
in
mov
mov
shll
aad
movsb
push
mov
jp
addr16
jle
shll
dec
mov
stos
stc
add
add
inc
dec
xorl
xchg
push
jo
mov
add
or
or
pop
sbb
inc
aaa
stos
inc
jno
movsl
adc
ja
sarl
jo
sbb
popa
sub
add
mov
mov
mov
pop
or
lods
call
mov
adc
push
sub
arpl
arpl
movsl
cwtl
daa
repz
repz
pop
xchg
inc
push
mov
dec
adc
or
repz
scas
jno
add
xor
mov
cld
cltd
xchg
adc
lahf
pop
push
addr16
inc
fwait
idivb
pop
int3
stos
add
rep
stos
cmpsl
jle
and
xor
xchg
jnp
mov
sub
in
lods
sbb
cmp
sahf
jbe
mov
lods
push
ss
xchg
push
adc
mov
adc
pop
adcl
push
aas
ja
adc
mov
and
rclb
outsb
mov
jae
in
fwait
cmp
scas
test
xchg
repnz
nop
and
sbb
xor
mov
aas
fidivs
clc
cmp
push
adc
aas
arpl
insb
mov
loope
nop
sbb
inc
ret
js
sarb
ljmp
faddp
dec
cli
add
xor
xorb
jge
fs
lret
jnp
sbb
mov
pop
jae
fwait
jge
lds
scas
cwtl
and
mov
mov
sub
mov
fisttpll
adc
cmp
inc
adc
xchg
fst
pop
icebp
adc
daa
inc
dec
lret
in
lahf
push
mov
lods
incb
inc
pop
cmc
stos
movsl
iret
mov
sub
fimuls
daa
mov
add
fdivs
adc
push
cmp
lea
sbb
movsl
mov
lcall
pop
pop
mov
push
adc
std
stos
dec
insl
mov
pop
dec
fcmovu
ja
inc
sub
mov
ja
stos
jne
icebp
es
mov
aas
mov
mov
clc
push
adc
push
pop
push
ret
insb
and
loop
push
rcr
xor
shrl
inc
pop
imul
dec
out
pop
sub
lds
stos
mov
xor
add
jge
jbe
outsl
jns
sahf
fcompl
ftst
jae
xchg
in
jecxz
fdivrl
sub
inc
sti
adc
sti
push
dec
out
stos
xchg
mov
pop
mov
mov
or
fbstp
aad
stos
sbb
bound
lea
dec
push
out
push
jno
pop
out
pop
aad
popf
xor
adc
or
ljmp
jbe
add
arpl
gs
sti
pop
fisubrl
adc
add
lea
sbb
fmulp
test
mov
les
popa
adc
loope
pop
mov
leave
xor
xlat
and
and
pop
les
push
inc
cmpsb
mov
mov
and
xchg
sub
xchg
mov
add
cs
pop
rdmsr
enter
mov
fisttpl
cwtl
cmp
fwait
mov
add
add
jg
sbb
ja
push
ja
mov
cld
mov
fnstcw
push
pop
mov
shrb
xchg
stc
popa
enter
mov
cli
adc
sub
addb
arpl
pop
cmp
imul
jae
pop
xor
mov
fadd
or
ret
mov
iret
cli
or
sub
cwtl
jle
mov
pop
mov
rcr
and
sbb
lret
xlat
pop
lcall
popf
add
pushf
cltd
sbb
xchg
sub
cmp
push
cmpsl
jecxz
sbb
xchg
mov
inc
ficoml
daa
out
jb
scas
pop
push
add
and
xor
sbb
jae
dec
push
push
pushw
sub
int
bound
int3
cmpsb
pop
xor
dec
and
dec
xchg
rolb
call
cmc
and
aam
and
cli
xchg
inc
mov
outsl
cmp
jle
and
mov
inc
ds
sbb
sub
aad
dec
lret
adc
dec
push
pop
mov
popf
in
int
cwtl
divl
mov
push
outsl
pop
in
lds
sbb
pop
cmpl
adc
shl
icebp
fdivrs
outsl
int3
inc
lods
loope
mov
mov
sbb
xchg
sbb
test
test
dec
jp
mov
sub
jnp
outsl
je
loop
iret
mov
sbb
in
jne
inc
stc
add
fcoml
and
popa
push
stc
leave
movsb
sbb
sub
dec
popl
mov
out
dec
cmp
xor
xchg
mov
in
lea
cld
in
pop
and
fisubrs
and
inc
mov
xor
fisubl
bound
pop
push
inc
mov
pop
std
mov
push
adcb
stc
inc
and
fadds
test
and
fnstsw
mov
imul
sub
dec
mov
loop
dec
dec
xchg
xlat
and
push
pop
dec
popf
and
mov
ror
mov
mov
aas
leave
mov
test
test
inc
push
push
mov
sbb
enter
js
jnp
imul
fwait
cwtl
push
inc
mov
fsubrs
roll
xchg
adc
ja
xchg
sti
xor
pop
mov
inc
scas
and
mov
xor
pop
int
sbb
sarb
lahf
mov
push
push
or
in
jne
lret
cmp
pusha
xor
jp
xor
pusha
add
mov
xchg
mov
aad
or
les
es
shrl
bound
imul
mov
icebp
lock
xchg
push
jo
mov
xor
stc
sbb
xlat
jecxz
sbb
popf
pop
jl
or
cmp
mov
add
imul
jns
and
jbe
and
push
mov
and
xchg
lcall
sbb
adc
out
inc
pop
dec
cmp
pop
test
into
aaa
mov
inc
inc
rcrl
dec
or
outsl
sub
cmpsb
inc
jle
sahf
fs
xor
daa
scas
jno
nop
pop
inc
xlat
push
and
fidivs
push
imul
adc
call
mov
xchg
adc
push
dec
and
cmp
xlat
testl
insl
ja
push
lahf
push
jo
lret
push
mov
clc
in
xor
push
cs
xor
jns
ss
cmp
xlat
test
mov
fbld
adc
bound
lret
mov
mov
aam
out
int3
out
inc
jae
and
in
loop
sbb
in
in
fisubrl
adc
mov
ss
sbb
push
icebp
insl
pusha
jno
push
xchg
enter
add
adc
cmp
add
mul
dec
cmp
fimuls
add
popa
jne
fists
fisubrl
and
sbb
out
mov
insb
scas
int
icebp
xor
or
scas
pop
aad
inc
lahf
dec
cmp
jne
add
mov
pop
imull
mov
sbb
pop
xchg
add
dec
add
inc
xor
mov
daa
jno
and
pop
daa
data16
add
fldcw
sub
adc
cmp
adc
add
movsl
jmp
in
push
add
in
int3
sbb
repz
dec
cmp
mov
mov
or
cmp
inc
orl
fcompl
cs
ss
mov
adc
dec
mov
mov
jb
push
mov
xchg
stc
push
inc
jecxz
push
rolb
mov
test
ds
fwait
add
ret
xor
lahf
xor
xchg
ret
aam
popa
insb
pusha
scas
adc
icebp
lcall
push
nop
sub
mov
daa
add
mov
mov
or
sarb
cmpsb
adc
sbb
sbb
data16
je
mov
mov
in
xchg
sub
mov
cli
push
jle
lock
jo
call
push
shlb
lock
jae
push
movsb
out
lcall
iret
mov
xchg
pop
jge
inc
sbb
pop
loop
hlt
out
inc
loop
adc
cli
push
cmp
add
shlb
ret
inc
popf
push
xchg
xchg
test
adc
mov
fidivs
mov
mov
mov
add
call
xlat
jge
push
adc
xchg
mov
sti
insl
pop
loopne
sbb
inc
cmp
jae
loopne
xor
test
mov
or
stos
enter
cmp
into
sbb
add
adc
or
ret
cwtl
ret
sub
or
stos
subb
clc
push
gs
xor
cld
icebp
pop
cmpsb
ds
call
idiv
or
mov
int
add
fnstenv
sbb
cmpsb
xlat
ret
cmp
or
ljmp
iret
mov
adc
shrl
jg
call
and
push
inc
fwait
lret
dec
cli
rorb
pop
sbb
insl
push
into
das
jecxz
push
and
int3
je
pushf
lods
xchg
jmp
jg
fstpl
mov
cmp
push
mov
mov
inc
or
xor
or
inc
imul
jns
repz
addr16
pop
mov
sub
adc
mov
loope
ss
cmp
or
mov
adc
out
icebp
cli
mov
arpl
imul
and
fstpt
or
je
and
sub
jb
jo
stc
mov
push
repz
lret
outsb
mov
or
and
or
shll
jno
and
pop
xchg
sbb
call
scas
cmp
das
sbb
mov
mov
loop
loopne
mov
push
fcoms
sub
jnp
aas
in
icebp
sub
cmp
sub
arpl
add
or
cmpsl
jl
test
stos
fnstenv
ror
cmp
outsb
cmp
das
inc
add
mov
das
pushl
inc
jle
loop
push
inc
ss
lods
mov
sarb
sbb
popf
jecxz
repz
ja
cmpsl
jnp
int3
lea
adc
jle
mov
inc
sbb
jae
fbld
xchg
gs
aam
loope
faddl
lods
and
dec
jb
subl
stos
adc
mov
xor
cmp
pusha
push
hlt
add
in
arpl
clc
add
movsl
pusha
and
xchg
mov
mov
mov
pop
add
jmp
pop
xor
shl
push
xor
fiadds
jge
or
outsb
and
inc
cmc
pop
dec
hlt
add
data16
fs
jmp
push
adc
sbb
das
test
cld
les
mov
mov
jne
xchg
pop
or
lods
add
cmpsl
mov
mov
enter
callw
adc
mov
mov
dec
mov
push
lds
enter
cli
mov
jbe
mov
inc
imul
mov
jmp
imul
mov
adc
lock
inc
push
out
xor
pop
aas
pop
int
mov
dec
pop
in
jnp
xchg
jno
xorl
add
cmp
inc
adc
test
out
das
jno
lcall
lahf
dec
out
ret
add
cmpsl
and
outsb
fwait
fwait
push
xor
and
sahf
ss
cmp
mov
cli
sbb
add
mov
shlb
xchg
enter
mov
mov
testl
jo
ss
lods
mov
bound
data16
leave
sub
pusha
icebp
sbb
add
fnstenv
mov
push
cmpsb
cmp
in
jae
ret
mov
sub
push
leave
aad
inc
push
xor
ljmp
in
push
fstps
aaa
jg
pop
sub
test
inc
sub
inc
fistpll
xchg
push
roll
pop
xchg
and
test
jg
in
adc
xchg
aaa
addr16
dec
rol
dec
cmp
into
out
or
lcall
insb
lods
jecxz
lahf
sub
pop
cld
into
inc
mov
lock
push
push
lahf
push
xor
out
pop
xlat
and
jns
idivb
push
mov
inc
xchg
sub
sbb
and
out
jno
iret
sbb
xor
add
lea
cmp
call
loope
dec
mov
dec
ljmp
cmpsl
pop
stc
push
fbstp
imul
js
mov
cmc
and
push
mov
lds
fldl
mov
cmp
sti
adc
scas
lcall
push
sub
incl
cli
cmp
test
int
loope
or
lret
xor
or
packssdw
push
dec
pop
les
into
imul
jae
stos
xchg
test
call
bound
and
mull
scas
enter
push
int
imul
int
xchg
inc
jno
sub
mov
xor
push
jno
jne
lahf
and
and
popa
xor
outsl
aaa
stc
push
das
push
xchg
jl
or
jl
int
xchg
js
lcall
outsl
mov
jns
mov
or
push
sti
jae
andl
shl
sub
adcl
mov
sub
mov
mov
mov
jbe
bound
xchg
hlt
mov
xor
mov
cs
outsl
dec
xchg
xor
movsb
mov
leave
daa
mov
test
cmp
in
shl
rolb
mov
xor
subl
mov
mov
incl
clc
fcoms
cmp
jp
inc
ds
jns
andl
mov
repz
lret
stos
dec
sbb
mov
pop
mov
xor
ljmp
out
cwtl
das
push
je
and
fidivrs
jmp
ss
push
cmp
or
mov
dec
add
arpl
inc
loopne
imul
subl
sahf
fnstsw
call
subl
adc
data16
mov
jbe
push
adc
cmpsb
fs
push
out
dec
into
dec
jne
imul
push
add
adc
and
mov
or
lret
push
cltd
and
loop
stos
pop
mov
pop
fwait
data16
mov
gs
fistpll
inc
lret
cmpsl
andb
adcb
or
inc
shl
jns
adc
sbb
cmpsb
or
call
ja
jne
insb
aaa
dec
sub
nop
lcall
movsb
lret
jbe
push
dec
in
mov
mov
sub
popa
adcb
repnz
out
lret
pop
ja
mov
into
fidivl
or
pop
sbb
jg
push
mov
mov
orl
sahf
xor
dec
push
and
pusha
pop
sub
push
add
aaa
inc
lret
push
xchg
sbb
aad
jnp
outsl
adc
dec
shlb
lock
aas
mov
mul
stos
jge
inc
mov
hlt
sbb
mov
cmp
mov
mov
mov
daa
dec
int
cmc
lods
xor
jge
jmp
cltd
and
lock
mov
sbb
jb
inc
pop
xor
test
xchg
mov
jbe
xchg
inc
pop
mov
add
jo
ret
fisubrl
repnz
out
idivl
int3
rorl
loope
xrelease
arpl
lahf
cmp
ja
or
or
inc
gs
sbb
inc
mov
lcall
cmpsb
mov
ss
push
jmp
cmp
test
lret
cld
mov
jne
sub
push
push
test
jae
repnz
rorb
jmp
add
jle
xchg
dec
cmp
fsts
stos
pop
mov
dec
ret
stos
or
pushf
fsubp
sti
test
mov
leave
loope
xlat
mov
test
movl
into
je
icebp
mov
push
dec
into
and
or
inc
add
inc
and
cmp
xor
divb
call
les
movsb
les
mov
xlat
nop
out
xchg
pop
sar
cmpsb
mov
sbb
mov
jnp
dec
test
test
cmp
lods
stos
loopne
pop
scas
cmp
clc
adc
cmp
xchg
ja
mov
je
xchg
lahf
inc
stos
sbb
pop
mov
xor
dec
jl
cmp
mov
icebp
enter
xchg
lods
jmp
nop
sti
or
mov
mov
mov
sahf
sahf
mov
fs
mov
ss
sbb
loop
fimuls
mov
mov
stos
push
and
cmp
fiadds
lahf
fldcw
fdivr
cmpsl
loope
out
ljmp
mov
dec
add
cmp
adc
jle
xchg
or
clc
roll
pop
push
stc
push
ficoml
stos
cwtl
push
rcr
loope
test
xchg
mov
sar
popa
lods
dec
mulb
pop
adc
mov
jo
test
clc
movsb
inc
xchg
jmp
pop
je
js
cmp
fimuls
mov
pop
idivl
push
mov
mov
jp
jp
cmp
loope
jg
xchg
shl
pushf
clc
xor
aas
mov
iret
inc
sub
outsb
sub
mov
fcom
xchg
sarl
les
in
cltd
mov
cwtl
xchg
cmc
and
addr16
inc
leave
lret
push
in
push
cmp
test
inc
lods
subl
mov
add
push
inc
add
dec
call
das
jae
rolb
pop
pop
xchg
push
jle
iret
shll
in
add
xchg
test
neg
std
movb
adc
ret
bound
cmp
push
xchg
sti
lret
cltd
adc
and
std
adc
mov
int3
or
push
shll
repnz
js
sub
jg
jp
scas
out
insb
cs
imulb
ja
sarb
sbb
loopne
lret
ljmp
mov
adc
pop
pop
rep
sahf
lock
imul
or
jecxz
cmp
scas
xchg
rclb
popa
gs
cmp
sub
jb
mov
mov
popa
cwtl
out
lods
push
mov
cmc
btc
mov
or
repz
or
fwait
push
loopne
ret
adc
dec
aas
cmp
cmc
daa
into
sarl
add
ljmp
sub
addr16
ficoml
xor
nop
imul
push
jl
jmp
dec
push
inc
mov
dec
sbb
aad
jnp
les
mov
movsb
lods
sti
xor
mov
lahf
mov
cmpl
cld
testb
jne
jg
push
push
ffreep
add
scas
fucomip
mov
and
test
jmp
mov
fstpt
pop
and
jnp
cmp
jb
loop
std
stos
popa
jecxz
jle
or
dec
xchg
mov
lret
imul
hlt
jp
rcl
bound
aam
jmp
sub
push
std
popf
adc
dec
pop
lds
inc
je
and
mov
lods
sbb
fistpll
jb
dec
push
xor
mov
xor
shlb
ror
fsubrs
sub
sar
clc
inc
add
push
cmp
shll
inc
cmp
ds
insl
pop
dec
xor
cs
nop
rcrl
mov
cltd
mov
mov
divb
test
lods
test
lret
mov
push
mov
jge
push
insl
es
sub
jecxz
cmp
sbb
hlt
int
push
jmp
pop
xor
add
add
bound
lret
pusha
mov
js
scas
adc
push
test
mov
and
add
pop
cmp
in
lcall
push
aad
adc
pop
cltd
rclb
aam
ljmp
pop
ret
cld
dec
push
pop
mov
pop
enter
lods
and
cmpsl
notb
sbb
push
mov
jmp
xchg
pop
out
inc
daa
fistpl
cld
cmp
sub
stc
aad
pop
mov
movsl
fdivrl
stos
mov
in
sar
or
fxam
mov
int
cmp
cmpsl
sub
mov
aas
sub
push
push
outsl
or
push
and
popf
cmpsb
pushf
cltd
enter
jae
mov
xrelease
gs
inc
repnz
pop
ret
in
aas
lahf
xchg
popf
pop
test
cmp
iret
jbe
cwtl
arpl
inc
rorl
rcl
aas
insb
lret
inc
mov
cld
inc
lods
popf
mov
xor
adc
ror
in
xchg
xchg
inc
or
lahf
hlt
cltd
lods
shrb
shl
fnsave
test
jnp
adc
repz
add
arpl
sub
push
fsubl
sbb
cmc
adc
outsb
fiadds
mov
je
lahf
jae
into
push
and
push
jge
fiadds
cs
mov
jp
aad
dec
loop
insb
lcall
std
cwtl
jae
stc
adcb
out
cmp
shlb
clc
mov
stos
cmpsb
loop
stos
neg
sub
push
add
ljmp
cmp
iret
adc
push
push
divl
call
int3
and
or
sub
or
xchg
or
jns
pop
and
push
xchg
push
mov
jle
dec
shlb
call
inc
mov
xchg
mov
mov
cmpsl
add
popa
xchg
and
je
stc
cmp
jno
inc
push
and
stc
mov
pop
xor
mov
adc
adc
imul
mov
cmp
push
mov
popa
movsl
negl
shll
xor
stos
stos
adc
sub
mov
je
icebp
jp
cmp
dec
mov
popf
adc
js
je
sub
scas
movsl
fwait
push
sbb
repz
and
xor
cld
add
jmp
add
push
sbb
hlt
cwtl
int3
aam
in
stc
lahf
add
arpl
mov
int3
xchg
loop
dec
adc
int3
ret
lret
sbbb
pop
popf
dec
xchg
add
pop
lods
sbb
dec
outsb
inc
jl
or
inc
adc
adc
hlt
jl
xlat
sub
popf
outsb
insl
xor
and
or
aam
add
cltd
sbb
into
fistpl
lock
pop
decl
stc
mov
pusha
mov
fs
fs
call
dec
test
adc
jb
testl
aaa
mov
pop
push
arpl
inc
push
sbb
add
mov
into
xchg
stos
cmpsl
in
add
stos
pusha
repnz
push
push
cmp
inc
ret
sbb
xchg
mov
sbb
xor
push
je
test
stc
sahf
stc
pushf
sbb
pop
test
fsubs
sub
xchg
nop
addl
xor
jnp
cld
jecxz
pop
arpl
sub
mov
mov
out
mov
lcall
sbb
mov
adc
aas
mov
pop
adc
sahf
movsb
cmp
fbstp
jno
repnz
add
mov
jae
mov
pop
and
scas
add
in
cli
gs
jl
in
scas
pop
repnz
jmp
lret
lret
js
call
push
adc
push
cld
and
imul
popf
popf
mov
in
sub
jb
mov
adc
push
or
mov
insl
or
jns
in
int
ret
adc
push
push
xor
mov
outsb
xchg
or
add
cmp
cmp
mov
push
ss
mov
xor
stc
icebp
clc
adcb
lds
sahf
dec
lcall
sub
and
add
ret
in
loop
mov
mov
fsts
stc
in
pushf
push
push
out
xor
popa
sbb
sbb
cmp
push
pusha
adc
inc
push
mov
in
sbb
popf
xchg
lcall
addl
test
dec
lods
inc
dec
sub
out
and
xchg
pop
or
popa
mov
je
andb
lret
mov
jge,pn
mov
clc
push
cmp
into
jp
pop
mov
imul
jmp
pop
dec
sbb
push
dec
testl
imul
cmp
test
cmp
lods
lret
xchg
ljmp
or
es
mov
in
cmp
lock
xchg
aam
inc
je
aad
mov
cmpb
lea
mov
mov
or
stc
xlat
mov
out
rcrl
mov
mov
in
cltd
test
dec
repz
xchg
dec
inc
popf
add
sahf
mov
fsubs
mov
arpl
mov
pop
and
iret
sbb
or
mul
sbb
mov
fdivrs
jne
fisubs
loop
mov
je
outsl
hlt
test
in
mov
jle
add
test
inc
out
jecxz
jns
in
pop
rclb
mov
into
cmp
repz
ljmp
hlt
mov
sub
stos
add
adc
je
imull
dec
fdivrp
and
push
ja
mov
subl
in
dec
jl
pop
mov
pop
cmp
clc
mov
imul
mov
sar
leave
and
rcll
ja
or
icebp
sbbl
fstps
jnp
sbb
fst
test
leave
mov
sahf
push
sbbl
sahf
stos
into
pop
sbb
mov
sub
shlb
xchg
stc
repnz
into
sub
mov
enter
dec
jae
mov
add
test
adc
jnp
push
xchg
shrb
cmp
inc
lcall
test
into
test
rcll
mov
je
test
rol
movl
movsb
dec
mov
out
push
xor
dec
cmc
dec
gs
inc
mov
sbb
push
mov
pmaxub
jbe
mov
jg
insb
loope
pop
xor
xchg
dec
jbe
inc
push
mov
bound
ror
cltd
adc
sub
sub
push
pop
push
inc
push
mov
add
rcr
insl
sub
xlat
pop
pop
inc
das
mov
iret
call
test
loop
loopne
arpl
cmp
cs
cmp
lods
push
sbb
or
scas
or
das
sbb
icebp
add
pop
mov
js
cmp
loopne
dec
or
xlat
into
cli
js
int
idivl
mov
cwtl
cmpsb
ror
ljmp
push
jnp
in
mov
iret
loopne
out
mov
addl
rolb
gs
ljmp
mov
test
push
negl
push
jnp
mov
invd
fimuls
xchg
das
inc
cmp
jae
adc
test
xchg
lcall
sbb
test
in
loope
cmp
jbe
sbb
mov
push
mov
xor
dec
cmp
xor
or
scas
test
lret
loop
pop
or
dec
jns
push
cmpsb
addr16
jns
mov
pop
rcr
dec
xchg
ret
aad
shl
adc
insl
sbb
dec
dec
ds
xor
into
call
insl
jl
sbbl
in
cld
lret
test
in
in
divl
cmp
and
test
push
mov
mov
scas
aas
lds
lock
fxam
xor
jb
push
das
inc
jno
lret
add
jg
scas
fsub
xchg
pop
push
pusha
test
test
popl
add
int3
push
jp
sub
xor
inc
shlb
xchg
in
cmp
adc
mov
int
ret
int
push
cli
add
ss
adc
adc
test
cltd
xor
jno
xor
adc
movsl
xchg
je
imul
pop
popf
inc
cmp
cmp
test
mov
mov
pop
sti
aaa
or
lods
iret
outsb
shlb
shll
test
dec
insb
test
cmp
cmpb
sbb
mov
jp
rorl
add
in
mov
pushf
mov
xchg
push
arpl
mov
jne
ror
pop
lock
hlt
sub
push
ret
jne
addr16
sbb
xchg
pop
mov
sub
cmp
into
mov
ret
pop
fiadds
lea
xor
push
inc
lock
xchg
gs
inc
sbb
inc
pusha
xchg
pop
dec
cmp
test
insb
cmc
aaa
xorb
fadds
cmpsb
mov
dec
cmpl
push
fbld
xlat
int
repz
add
iret
cli
and
fiadds
add
imul
shrb
gs
repnz
andl
stos
pop
and
cmp
xor
ret
mov
bound
pop
shlb
pop
fistpl
pop
leave
pop
mov
cmp
adc
je
stos
xchg
xchg
in
into
out
cmpsl
sti
lret
adc
stos
jl
in
push
xlat
mov
dec
jge
pop
xor
sub
mov
inc
hlt
pop
ljmp
dec
imul
sub
push
xchg
loop
xor
mov
test
loop
mov
test
push
gs
push
cmpsb
fistpll
cmp
push
push
jmp
lock
std
jbe
lret
adc
add
fwait
cwtl
jnp
imulb
std
pop
mov
xor
shll
push
lods
mov
sub
inc
push
sbb
testl
fnstcw
pop
rol
repnz
pop
pop
sub
mov
pop
imul
jae
dec
jl
cmp
adc
imul
add
push
mov
les
out
gs
mov
push
add
jge
flds
out
mov
push
add
fmuls
sbb
jp
fidivrl
lds
and
popf
pop
sbb
aam
lret
repnz
inc
xchg
xchg
jmp
scas
subl
sub
scas
adc
push
mov
fucomip
jmp
idivl
pop
ljmp
pop
add
je
xlat
adc
xor
lret
loop
or
and
sub
ret
xchg
fmull
push
cld
in
push
stos
mov
sarb
xor
je
repz
hlt
cs
pop
adc
jnp
and
gs
cmp
mov
or
shlb
test
fcoms
xchg
ljmp
inc
fwait
inc
nop
ljmp
dec
enter
or
stos
dec
pop
loope
and
loope
add
inc
inc
pop
cmp
fsub
xchg
xor
push
push
or
bound
je
adc
pushf
mov
cmp
cwtl
push
roll
xchg
xor
xchg
inc
out
les
lret
pop
mov
xor
sub
dec
int
xchg
mov
mov
add
jnp
loope
mov
cwtl
jbe
mov
lahf
jbe
adc
fstps
pusha
mov
cmp
jb
xchg
dec
frstor
cmp
orb
xor
push
sub
pop
es
sbb
xor
inc
popa
cld
clc
jge
push
or
pop
andl
and
leave
jnp
sbb
lret
fadds
and
fistps
push
cld
jecxz,pt
adc
jae
add
call
out
mov
cmp
data16
fs
xor
mov
cmpsl
mov
cmp
lahf
movsl
push
adc
xchg
fadds
jne
sub
addr16
push
icebp
cmp
mov
or
adc
fldl
arpl
cmp
mov
fcomps
mov
sbb
xlat
xchg
mov
pusha
call
push
jne
sub
xchg
dec
and
sub
arpl
leave
out
adc
mov
cwtl
loop
ficomps
shll
cli
test
push
inc
sub
fistps
fs
jecxz
fnstcw
push
jle
fisttpl
stc
inc
inc
sarl
push
jecxz
push
popa
mov
xchg
push
cld
aas
xchg
jmp
outsl
and
and
push
outsb
aam
xor
jp
inc
or
leave
and
cs
dec
push
xor
cmp
sahf
push
mov
dec
ja
and
pop
pop
movsl
push
dec
test
pop
jmp
xor
cltd
mov
and
mov
mov
in
rclb
test
add
cmpsb
cmpb
lods
sbb
adc
daa
cmp
movsb
jle
jge
xor
imul
xchg
int
pop
int3
or
xchg
jns
xor
in
push
cwtl
fmull
inc
jno
bound
pop
fadds
and
mov
xchg
cmp
pcmpgtw
stos
and
cmpsl
pop
and
ret
pop
cltd
push
pop
jge
mov
xchg
aaa
add
and
fwait
or
and
jns
push
in
dec
add
or
stos
ret
add
xor
inc
mov
outsl
into
div
jmp
daa
lods
popf
jmp
add
ds
daa
mov
xor
lea
pop
std
cmpsl
shll
pop
mov
inc
out
inc
push
push
push
dec
pop
mov
push
or
sub
rclb
jns
xor
inc
sbb
mov
dec
or
adc
test
mov
movsb
cmp
xchg
rcrb
lret
outsl
into
rcll
cmc
lds
push
cltd
scas
repnz
sbb
ljmp
push
in
jmp
push
mov
jecxz
fistpl
rcrb
insb
into
adc
or
xor
ds
mov
test
jnp
lods
push
push
pop
int3
fidivrs
inc
scas
jecxz
aaa
sub
inc
xchg
adc
lods
cli
push
sbbb
add
xorl
xchg
iret
push
divb
xchg
xor
in
mov
aas
mov
add
stos
mov
lods
sub
push
jbe
xchg
xchg
mov
jge
in
lcall
adc
cltd
or
out
mov
cmp
mov
nop
cmp
cmp
jp
lcall
xor
and
jno
jecxz
es
push
pusha
pop
add
iret
push
das
stos
iret
dec
mov
or
sbb
mov
in
cmp
aaa
call
add
xchg
pop
xor
enter
js
jle
inc
aad
andl
push
push
insl
cmp
jae
jecxz
scas
in
and
pop
mov
ss
pop
repz
or
dec
pop
or
cs
adcb
test
sbb
int
call
pushf
lea
je
mov
mov
js
or
dec
lods
repz
cmp
imul
test
out
push
ret
test
mov
sbb
xchg
lcall
and
pop
int
divps
push
ficomps
cltd
in
mov
stos
push
inc
in
stos
cmp
mov
cltd
xor
fidivrl
add
xor
ret
mov
and
sbb
cli
ret
in
mov
cmp
sbb
repnz
xor
mov
dec
xchg
pushf
fucomi
sti
xor
or
add
jb
movsl
mov
or
xchg
in
push
jg
add
mov
outsb
aaa
scas
xor
in
mov
push
addr16
sub
popf
lcall
jle
nop
cmp
insb
add
popf
or
popf
push
mov
mov
adc
loope
sti
push
xlat
or
mov
pop
lret
neg
add
mov
cmp
inc
out
push
into
cld
pop
cmp
push
mov
mov
pop
lcall
enter
mov
cli
cmp
cmp
dec
es
mov
jno
movsb
xor
jmp
xchg
in
fildll
xchg
sbb
sub
sub
test
out
or
test
arpl
inc
int3
pop
sub
xchg
mov
push
fadds
in
fidivrl
repnz
fwait
rcrb
loop
cltd
fisubrs
scas
test
repz
adc
xchg
insl
outsl
fstpt
in
jns
mov
loop
test
pop
dec
inc
pusha
mov
test
scas
test
subl
xchg
test
flds
xlat
sub
cmp
in
or
xchg
cmp
xlat
cltd
std
sbb
cmpsl
daa
ja
xor
sub
sub
mov
inc
mov
movsl
xor
pop
cmpsl
iret
xchg
aad
add
push
cs
xchg
test
push
jbe
add
inc
push
or
dec
imul
rclb
add
mov
push
outsb
nop
xchg
sub
outsb
cs
and
cltd
loopne
jmp
das
sbb
dec
test
rep
and
cmp
popa
leave
in
and
cwtl
mov
repnz
repnz
enter
test
mov
add
xor
mov
ljmp
push
sahf
iret
mov
xor
int
xchg
xchg
push
fstpt
fnstsw
les
sbb
int
hlt
push
sbb
cli
mov
cmp
ss
addr16
testl
and
pop
or
xchg
jle
jnp
movsb
mov
sub
jae
push
cmpsb
ret
dec
outsb
pop
pop
push
mov
arpl
out
sub
cmc
rcll
cmpps
outsb
and
jbe
repnz
pop
jo
mov
subl
and
lds
fsubl
mov
mov
pushf
adc
xor
add
ljmp
cmp
push
jns
or
and
jne
add
pop
test
dec
jmp
and
mov
icebp
xchg
jb
scas
pushf
fdivp
xchg
test
arpl
add
fwait
jg
lock
cmc
shl
cs
dec
jg
jl
add
lods
dec
sahf
push
or
xlat
lret
in
in
cmpsb
repnz
pop
xchg
je
sbb
aas
fldt
mov
sbb
in
add
xor
jle
push
test
repz
push
cmp
jno
push
mov
clc
dec
ljmp
leave
xor
imul
pop
inc
add
pushf
rorb
pop
mov
push
xor
repz
mov
les
aad
leave
mov
inc
mov
test
sub
pushl
sub
sub
inc
add
clc
inc
jbe
and
stos
adc
jge
xchg
scas
insl
dec
inc
in
cltd
loop
mov
fnstcw
pusha
loope
daa
push
adc
jno
inc
ss
loopne
fs
test
shrb
and
adc
xchg
out
loopne
es
pop
fwait
sub
cli
sub
repz
mov
movsl
movsl
push
push
insb
mov
add
lret
imul
mov
sbb
mov
call
pop
arpl
xor
inc
mov
mov
dec
fsubr
leave
and
xor
shll
pop
or
outsl
popa
loop
and
loop
jp
xchg
inc
xchg
lock
pusha
sbb
push
mov
mov
pop
mov
clc
sbbl
push
dec
dec
sub
aad
sbbl
cli
stc
sub
inc
or
das
jp
roll
and
imul
outsl
mov
cmp
push
outsb
jo
loop
sub
dec
mov
mov
xor
ds
je
add
dec
pop
imul
hlt
scas
xor
cmpsb
dec
or
sbb
cmp
push
and
icebp
add
ljmp
push
mov
add
jbe
testl
add
jbe
cmp
inc
mov
js
rcrl
test
xchg
bound
xor
arpl
mov
cmpsl
sbb
jne
push
mov
mov
fldenv
mov
pop
xlat
inc
dec
sub
sahf
insl
imul
out
sub
dec
push
mov
cli
iret
cli
dec
xor
mov
xchg
adc
adcl
mov
pop
fstl
sub
mov
or
or
lods
movsl
sbb
dec
in
les
or
push
imul
xchg
popf
add
cmp
in
ljmp
add
add
arpl
inc
sub
lods
mov
xchg
pop
mov
sub
sahf
in
fildl
je
scas
cwtl
fs
xor
jp
into
mov
decl
mov
test
loop
push
mov
mull
xchg
xchg
push
cli
sbb
cltd
push
nop
push
pushf
or
mov
movsb
mov
lcall
cld
popf
mov
stos
xchg
sub
add
loop
cmp
push
pusha
lcall
jns
lret
ja
ss
outsb
aam
out
js
js
add
xchg
sub
mov
in
or
fcmove
jg
sbb
xchg
gs
push
div
sarl
mov
mov
ret
shlb
test
fidivrs
lock
lahf
cld
fisttps
adc
icebp
stos
push
iret
xchg
jnp
add
ret
or
push
mov
imull
adc
shll
aam
shlb
aam
ret
jge
push
or
nop
push
mov
ds
mov
pop
mov
sbb
shr
adc
into
pop
mov
and
hlt
das
push
push
jae
jb
pop
dec
push
testb
lds
outsl
add
fisttpll
inc
add
clc
mov
dec
inc
mov
xor
jns
inc
and
repnz
cmpsl
push
xchg
pop
xchg
cmc
sbb
mov
mov
les
int3
sbb
repnz
add
sbb
scas
cmp
or
or
hlt
jne
and
dec
mov
or
inc
test
outsl
fbld
mov
xchg
lahf
fnstsw
xchg
in
adc
and
pop
pop
loop
adc
int
dec
stc
sbb
cli
test
aad
inc
jg
dec
arpl
pop
xchg
js
xchg
bound
jae
sbb
out
cmp
fidivs
mov
outsb
rcrl
lods
dec
xchg
pop
xchg
outsl
push
cmp
or
push
xchg
mov
leave
or
leave
add
bound
cltd
mov
popf
sub
mov
xlat
dec
clc
movsl
lea
add
adc
dec
movsb
and
jge
jle
adc
jmp
adc
sub
sub
stos
pushf
pop
cmp
sub
insb
cmc
xchg
add
int
test
leave
sbb
jmp
xchg
inc
mov
cmpsb
jns
sub
ja
fsubrs
fistpl
lods
outsb
mov
cmpsl
fcomps
int
push
dec
mov
fwait
pusha
xchg
xor
xor
push
push
jle
mov
dec
xchg
imul
mov
stos
xor
cmpsb
into
xor
js
xchg
sub
icebp
adcl
mov
fildl
mov
jns
fiaddl
pusha
jmp
ret
in
push
and
in
ja
leave
fcoms
sbb
test
ret
es
scas
lret
ret
mov
and
jmp
mov
xchg
push
lock
inc
scas
insb
inc
bswap
fs
mov
lds
xchg
sub
xchg
imul
and
loope
xorl
fdivrp
enter
int3
bound
add
aad
packssdw
push
xchg
pop
xor
loop
mov
push
xchg
cwtl
or
add
sbb
push
sbb
xor
out
jge
in
dec
in
mov
and
negl
sbb
ljmp
lods
jno
mov
add
fidivrl
sub
ret
mov
jmp
lret
add
cltd
jnp
dec
jle
pop
mov
stos
adc
daa
xchg
push
push
cli
jo
lahf
mov
jmp
out
outsl
std
or
push
icebp
hlt
jecxz
lock
sbb
mov
adc
sbb
mov
stos
xchg
in
jg
addb
and
test
icebp
je
cmp
mov
rcr
ljmp
mov
insb
pop
and
scas
xlat
jmp
lret
or
je
out
sub
sbb
add
add
cwtl
pop
and
sti
jl
les
and
jp
mov
jmp
test
mov
add
xor
cmp
loope
mov
out
in
mov
movsb
push
cltd
adc
sub
or
arpl
rorb
mov
pusha
mov
stos
outsl
icebp
jnp
shll
call
ret
cmpsb
inc
push
mov
xchg
jns
sub
and
icebp
pop
or
cmpsb
data16
and
push
adc
inc
sub
fwait
cmp
rolb
inc
sbb
cs
arpl
clc
inc
pusha
push
push
inc
inc
jo
icebp
jmp
pop
jnp
jge
into
ljmp
and
xchg
in
mov
je
lret
xchg
jno
fstl
sbb
push
push
popf
loope
test
ja
or
jbe
adc
lods
lahf
ja
push
jns
add
sub
mov
neg
add
movsl
sarl
xor
leave
aad
sbb
repnz
lret
not
sahf
or
sub
orl
and
dec
mov
cmp
rcrw
pop
rcrb
outsl
loop
sahf
sbb
cld
gs
movsb
mov
test
xchg
inc
xchg
incb
or
jbe
push
and
push
out
ret
call
loope
arpl
repz
jmp
imul
es
mov
lea
dec
test
jo
adc
out
mov
xor
rorb
lahf
inc
push
sahf
cmp
xchg
mov
pusha
cli
cmp
xchg
ficoms
and
repz
mov
sbb
xor
cmp
movl
gs
pop
dec
jg
leave
fisttpll
inc
into
push
mov
mov
xchg
mov
outsl
arpl
jmp
mov
dec
mov
inc
ror
xchg
shl
mov
push
sbb
add
pushf
jg
push
imul
clc
sbb
mov
jg
aam
push
scas
inc
xlat
pop
jge,pt
out
cltd
push
push
daa
testb
and
in
cmp
fidivl
cmp
jg
adc
arpl
add
jmp
xchg
xor
fbld
cmpb
mov
ret
jns
fwait
das
test
repz
lret
sbbl
arpl
movl
aas
push
and
lahf
add
mov
sub
mov
push
dec
fs
jbe
pop
in
imul
xchg
inc
aam
xchg
stos
mov
and
mov
lea
fs
outsb
or
xchg
mov
or
lret
bound
es
add
arpl
js
in
int
xchg
mov
in
add
mov
mov
push
xchg
mov
inc
push
scas
sub
cli
nop
scas
or
pop
sbb
dec
push
std
xchg
sbb
or
leave
mov
cmpsb
sub
popa
add
repz
inc
dec
mov
push
imul
push
out
xchg
mov
jno
scas
nop
les
and
ss
jbe
xchg
adc
xchg
add
shrb
cmp
pop
sub
rorl
fimull
insl
dec
sub
and
mov
movsb
mov
xchg
mov
das
lcall
push
fs
mov
fisubs
icebp
dec
mov
jl
scas
xor
xor
sub
dec
mov
in
aas
rcr
or
push
les
rcll
ret
fldenv
cmpsb
or
cmpsb
gs
aad
mov
sbb
es
inc
xchg
fstpl
daa
fs
pop
xor
push
push
daa
xchg
adc
sti
addr16
jp
xchg
scas
adc
das
test
lock
xor
dec
mov
jb
sbb
jb
in
push
mov
rcrb
sbb
fldenv
xor
sub
mov
push
add
jae
test
cmp
mov
cmp
xor
fistpll
fistps
dec
dec
inc
and
mov
inc
in
or
repnz
aam
int
into
fdivrl
lcall
les
mov
orl
cmp
call
pop
or
add
and
cmc
mov
adc
movsb
loopne
int3
mov
mov
and
mov
inc
int3
fsubl
xchg
insb
stos
push
cmp
jne
cmp
jl
nop
add
scas
pop
adc
ss
mov
pop
xchg
cmpsb
inc
bound
cmpsl
pusha
mov
adc
and
aaa
shl
loopne
bswap
imul
ss
mov
fldenv
mov
push
sub
jge
ja
or
sahf
push
out
dec
xor
pusha
mov
in
ljmp
lahf
ja
push
test
push
out
inc
sub
mov
leave
cmc
jmp
icebp
pusha
and
fninit
mov
jmp
mov
pop
pop
inc
lret
je
sbb
imul
mov
or
and
xchg
lods
and
xor
jmp
jne
jecxz
sub
adc
mov
jl
ror
cmc
std
mov
mov
jmp
nop
lods
iret
cs
loop
jne
and
jle
cmp
xor
dec
push
popa
rcr
sub
bound
sub
fisttpl
frstpm(287
adcl
cmpl
cwtl
fs
or
aas
mov
dec
sub
mov
sbb
inc
aad
jp
push
cmp
push
fsubs
mov
inc
xlat
mov
cmpsl
cmpb
mov
inc
aas
jp
push
sti
adc
jecxz
ret
add
pushf
insl
mov
push
dec
add
ret
stos
mov
cld
push
lcall
in
cmp
jle
cli
xor
imul
sub
hlt
test
hlt
insl
sbb
ljmp
jbe
sbb
push
sarb
xor
pushf
popa
movsl
lret
dec
pop
or
add
and
or
out
aam
pop
pop
cmp
clc
sbb
pusha
inc
inc
in
int3
push
pop
mov
outsl
lcall
test
cmp
mov
or
jle
and
lahf
aaa
xor
mov
jbe
jne
icebp
stos
data16
xor
inc
shlb
push
and
cmpsl
cmp
out
cld
sub
xlat
test
pop
mov
xchg
mov
cmpb
xlat
sti
incl
ss
pop
in
imul
and
outsl
stos
mov
or
fdivl
ss
adc
je
das
outsb
xor
arpl
cmp
aas
xor
and
in
xchg
dec
inc
fldenv
orl
dec
sbb
loopne
idivl
inc
repz
push
add
jle
es
cmp
push
mov
push
or
in
or
jb
inc
std
orb
cs
add
mov
xchg
add
int3
or
cmp
divl
dec
mov
cwtl
leave
dec
fs
or
dec
xchg
mov
push
in
or
jl
lock
xlat
ret
cli
add
cltd
sbb
lock
aad
rcr
adc
add
xor
sub
addr16
jp
movsl
pushf
dec
out
xchg
inc
sub
neg
jp
mov
jb
incb
push
jp
mov
imul
aas
pop
jmp
gs
add
mov
in
jge
push
sbb
dec
rcrb
lock
push
test
shrl
bound
mov
push
pusha
ficompl
jle
insb
mov
popa
stos
js
lcall
cmp
lar
and
dec
push
jo
jecxz
clc
or
mov
mov
xchg
fnstenv
cmp
or
fmuls
or
outsl
in
ffreep
pushf
loop
adc
pop
mov
add
enter
das
xor
dec
stos
xchg
stc
pop
fsts
xor
pop
lret
fistl
aad
mov
cltd
push
and
clc
stos
cltd
mov
fwait
cmp
inc
push
cmpsb
pop
stc
xchg
or
imul
fsubl
mov
dec
insb
jp
mov
jnp
cmp
jg
mov
and
sub
fldenv
mov
leave
mov
add
sub
sbb
mov
adc
pop
ret
xor
xchg
mov
mov
fs
pop
dec
inc
push
mov
or
inc
jno
cmp
fisttpl
adc
iret
or
and
in
mov
sbb
movsl
push
in
inc
mov
je
dec
and
push
push
sahf
mov
scas
push
mov
out
mov
lahf
ret
xor
inc
sbb
pop
loope
push
data16
pop
push
xchg
jg
dec
outsl
repz
outsb
dec
inc
lods
insl
pop
imul
jle
xor
push
push
outsb
sti
push
mov
push
rcrb
mov
cmp
in
and
lahf
xchg
aas
mov
test
sbb
ljmp
dec
inc
dec
enter
adc
fxtract
push
dec
out
and
add
aas
and
rcrb
cltd
mov
fwait
loop
mov
xor
inc
cmpsl
pushf
adc
pushf
xor
and
lret
and
mov
add
pop
shll
rclb
sub
sub
and
andl
mov
sbbb
or
int3
adc
mov
pop
aas
nop
out
rcr
outsb
push
push
jg
fs
jb
push
xchg
or
fstp
hlt
mov
xchg
jbe
push
scas
repnz
test
leave
imulb
sahf
adc
jge
sbb
rcrb
mov
push
mov
call
or
inc
pop
inc
andb
ret
push
xchg
sti
insl
pop
mov
jo
xor
int3
mov
clc
mov
sbb
xor
push
jl
loop
sahf
lahf
repz
cmc
xchg
mov
push
hlt
push
ljmp
pop
fnstenv
mov
into
shll
sbb
loopne
shll
jecxz
movsl
sbb
jbe
push
xchg
push
std
fistps
or
loope
inc
cwtl
jp
mov
int
dec
int
ret
jno
test
inc
clc
lahf
sarl
das
and
imul
mov
ss
inc
sti
xchg
push
std
out
cli
push
test
mov
mov
mov
and
jb
jo
or
dec
xchg
stos
sub
sbb
mov
pop
cmpsl
cmp
pop
out
sarb
outsb
push
inc
and
cmp
aaa
aam
jo
ds
inc
lcall
popa
cmp
xchg
mov
push
out
or
mov
and
test
push
leave
sti
adcb
push
xchg
and
rcll
add
or
inc
aas
adc
xor
and
cmpsl
xor
cli
std
ss
pop
jbe
in
cli
gs
in
mov
ds
out
jp
jno
or
pusha
movsl
cmp
mov
cmp
fidivs
roll
mov
xlat
fwait
das
outsb
les
loopne
jmp
mov
sbb
popa
inc
std
jbe
das
std
push
fs
enter
dec
push
cmp
pop
adc
xchg
sahf
push
fs
and
mov
pop
xchg
mov
out
mov
pop
shr
mov
pcmpeqd
inc
sub
ret
push
js
dec
add
xchg
jbe
leave
loope
dec
ficoms
pop
or
aaa
xchg
mov
jmp
sbb
jp
lods
jle
lock
sub
addr16
dec
push
jmp
mov
xor
ret
xchg
jge
sub
xor
loopne
adc
jp
xchg
jecxz
repnz
xchg
sbb
hlt
addr16
repnz
ret
aaa
repnz
sub
adc
mov
cmp
rorb
pop
mov
movsl
pop
adc
mov
xchg
pushf
add
push
push
mov
outsb
jae
add
or
ss
fs
lods
int
xor
cltd
test
and
and
sbb
aaa
pop
sar
lea
xchg
add
loope
inc
and
or
inc
push
jge
pop
repz
ds
mov
sub
daa
iret
test
cmp
adc
xchg
or
jl
push
cmc
jbe
nop
sbb
mov
xchg
nop
cmp
adc
test
sahf
js
jbe
repz
mov
adc
js
or
test
mov
ficoms
es
or
hlt
out
lds
mov
aad
pop
mov
pop
arpl
or
sahf
ljmp
ja
add
jp
fmul
xchg
fidivs
repz
inc
out
js
push
fsubrs
rclb
inc
test
imul
pop
lea
sbbb
jb
cmc
iret
push
push
cmp
lret
and
push
pop
aam
sub
adcb
outsb
test
jae
in
dec
inc
movb
mov
out
les
fsubrl
add
leave
xchg
mov
lods
xchg
xchg
cltd
xorb
lahf
mov
out
pop
sbbb
sub
movb
jo
dec
xchg
stos
adc
repnz
xor
test
xchg
mov
mov
imul
out
cmp
inc
jle
pop
sub
xchg
out
outsb
icebp
rcrl
div
xchg
sti
inc
push
into
repz
sbb
popf
fbstp
cmp
jmp
dec
push
ds
add
loope
imul
mov
dec
sbb
sbb
xchg
pop
or
fisubs
push
inc
aam
mov
pushf
mov
test
add
adcl
ds
inc
je
inc
lahf
flds
jecxz
mov
cs
dec
push
std
shlb
popa
sub
pop
or
pop
subl
jmp
cmc
es
push
cwtl
cmp
out
dec
mov
icebp
adc
pop
sub
adc
cmc
mov
ffree
push
and
xchg
icebp
xor
mov
mov
push
pop
cld
xor
mov
sbb
or
push
insb
cltd
pusha
jo
sbb
sbb
pop
mov
fimull
push
ss
pop
mov
xor
and
sub
cmp
int3
mov
int
bound
jae
sub
scas
mov
dec
mov
push
scas
leave
sbb
jno
stos
add
or
pop
in
mov
mov
mov
pop
sub
jb
jle
push
addr16
aam
mul
fldl2e
sbb
adc
inc
pop
aas
movsb
sarl
out
mov
push
pop
xor
movsb
loopne
aaa
icebp
xchg
in
mov
cmp
ret
jge
test
pop
loopne
stos
inc
lahf
or
mov
arpl
in
xchg
xorb
inc
int3
rcll
cwtl
aam
jo
dec
les
loop
cli
iret
and
in
inc
xchg
pop
pop
imul
push
mov
jg
mov
or
adc
incb
pop
popf
outsb
dec
or
pop
aam
xchg
add
imul
adc
stos
adc
ljmp
nop
ret
cwtl
sub
jno
imul
out
fs
sti
dec
sub
data16
and
or
shrl
inc
cmp
imul
in
xor
call
dec
loopne
xor
cmp
mov
bound
movsl
pop
aaa
dec
scas
inc
xchg
mov
ja
fists
loope
and
out
setge
lahf
scas
push
bt
rol
dec
fildll
sub
stc
lods
push
cmp
iret
aad
jp
int
xlat
loope
popa
je
adc
sbb
fcomps
cltd
add
sbb
stos
jmp
mov
arpl
xchg
inc
push
xor
mov
cmp
iret
cmpsb
push
popa
mov
mov
sbbb
mov
in
sub
jb
loop
inc
xchg
pop
cmc
add
inc
pop
call
dec
mov
mov
cmp
sub
and
aaa
pop
pusha
cmp
inc
fwait
mov
mov
adc
push
xor
mov
lods
cmpsb
bound
daa
insl
shlb
mov
sub
pop
ret
in
inc
pop
mov
mov
in
lea
cmc
mov
sti
add
pop
jnp
ds
sub
scas
jnp
cmp
es
mov
xor
stos
int3
bound
or
sti
and
xor
stos
sbb
stos
push
test
icebp
popa
inc
add
mov
mov
ret
or
inc
dec
and
mov
or
mov
sbb
das
les
pop
jbe
and
xor
and
cmp
adc
lods
jns
jnp
in
adc
or
cmp
into
adcb
jo
rcrb
fdivr
ljmp
sahf
outsb
cmc
pop
add
cmp
fs
mov
sahf
and
pusha
out
add
sub
dec
popa
cmp
adc
adc
es
enter
dec
sub
dec
out
scas
loope
sbb
xchg
incl
pop
out
es
push
cmp
bound
jle
iret
dec
xor
movsl
sbb
push
pop
sub
pop
mov
dec
or
ljmp
inc
int
pop
cli
movsl
mov
mov
jmp
mov
cmp
mov
add
push
push
fwait
dec
test
add
daa
lock
sub
mov
ret
push
lret
mull
dec
cltd
cmpsb
adc
lock
cmp
dec
xor
adc
sub
xchg
jb
cmpsl
int3
aas
mov
repnz
add
xor
pop
outsb
lock
xchg
sbb
std
mov
dec
and
jg
mov
push
and
inc
sub
out
ret
sti
and
xor
mov
pop
pop
sub
enter
fdivs
dec
das
jbe
scas
sub
adc
xor
iret
cmpsb
adc
leave
jp
nop
push
sti
or
test
and
sub
mov
add
dec
mov
int
adc
ret
sbb
add
jb
repz
sarb
mov
mov
and
das
pop
mov
sbb
leave
sbb
dec
aaa
jae
push
push
pop
sbb
dec
mov
repz
ds
xchg
sub
jecxz
sti
lods
push
lock
imul
sub
cmp
enter
xchg
push
jl
sbb
pushl
xor
rorb
cmp
xor
adc
jb
cmp
pop
cs
add
into
sbb
ja
cwtl
mov
push
or
lods
adc
or
sub
ja
imul
inc
and
cmpl
shll
sar
nop
les
xchg
mov
adc
out
pushf
div
push
xor
add
jmp
sub
adc
adc
inc
filds
xorl
ret
mov
das
nop
add
sub
fdiv
jno
scas
xor
stos
add
adc
aaa
mov
or
fwait
jg
retw
lret
sbb
dec
adc
ret
int3
xor
scas
popf
stc
xor
ficomps
mov
sbb
shlb
mov
out
in
pop
jl
out
loop
jns
cltd
push
mov
lahf
cs
push
jg
sub
lock
jecxz
rorl
mov
test
xchg
and
mov
cmp
shl
cmp
iret
mov
repnz
negb
or
pop
pop
ljmp
adc
out
gs
iret
ret
daa
pop
or
lea
sbb
notl
mov
sbb
inc
pop
iret
add
and
in
ret
rcll
xor
push
shlb
add
xlat
jmp
out
xor
stos
dec
arpl
mov
adc
es
pop
jecxz
jg
and
mov
push
mov
add
call
rcrb
jnp
push
sahf
cmp
mov
push
sub
lods
cmpl
out
add
adc
outsb
or
xchg
hlt
hlt
repz
sbb
ret
mov
iret
out
test
daa
inc
jmp
fwait
cmp
mov
test
fsts
add
pop
mov
pop
in
cmp
cmp
stc
or
notl
adc
xor
xchg
mov
out
xlat
mov
sub
jge
das
add
jle
popa
pushl
scas
insl
sbb
pop
inc
push
ljmp
jae
sbb
inc
sbbb
lods
std
cmp
fs
mov
fnstenv
call
clc
insb
adc
add
ljmp
arpl
and
dec
inc
call
in
pop
xchg
or
pop
mov
jmp
stos
in
arpl
ss
and
cmpl
mov
incl
cmp
mov
cmp
loopne
sub
mov
cltd
jo
repz
sub
xor
push
out
insl
adc
lret
fdivrs
xchg
outsb
loopne
repz
lret
xchg
pop
mov
lcall
pop
mov
das
add
test
mov
lock
inc
cmc
daa
or
xchg
xchg
movsl
sbb
push
cmp
int3
jne
add
jns
leave
pop
loope
and
or
jge
jnp
mov
and
dec
cmp
lcall
gs
dec
outsl
lcall
fnsave
adc
aas
dec
es
xchg
push
add
iret
inc
cmp
xchg
repz
push
pop
adc
mov
js
and
outsb
std
xor
mov
mov
mov
fdivrs
aaa
int3
mov
xchg
orb
stos
mov
xchg
xor
cli
jb
repz
pop
icebp
lods
sub
push
mov
imul
add
adc
fcmovne
inc
mov
lahf
and
push
cmpsl
pop
adc
cmp
or
repnz
push
popf
mov
int
sti
jne
iret
mov
push
out
lahf
lcall
insb
xor
stos
mov
dec
stos
loope
gs
and
push
lock
xchg
adc
out
dec
stos
jnp
arpl
outsb
sbb
call
lods
mov
cmp
andb
lcallw
movb
jmp
xlat
pop
fdivrs
int3
outsl
push
cld
jnp
sbb
sbb
mov
dec
repnz
out
mov
xor
lds
aaa
lcall
sti
inc
mov
mov
stc
cmp
in
jg
add
mov
xchg
push
xor
or
das
aas
cwtl
jp
mov
cmpsb
push
xchg
mov
jmp
mov
fmuls
insl
xor
flds
aad
inc
push
jl
enter
popa
loope
aaa
mov
scas
shll
sbb
push
leave
std
jbe
lds
cs
int3
add
leave
and
int3
leave
jbe
dec
ds
xchg
and
mov
cmpsl
xor
jne
pop
xor
cmpsl
mov
aas
mov
loopne
xchg
xchg
mov
push
mov
sbb
fsubrs
or
or
lds
stc
sbb
jp
or
insb
cmpsb
cltd
sub
hlt
dec
cltd
fdivp
in
aam
mov
push
and
sub
mov
ss
mov
mov
cmc
jae
cmp
push
lea
jecxz
sahf
or
aaa
dec
pop
jmp
test
jno
mov
mov
xor
jl
add
ss
es
mov
push
int3
popa
xchg
fadds
add
jo
adc
cmpsl
rorb
jmp
cmpb
jo
sarb
adc
fs
loopne
push
jle
sahf
adcb
test
pop
add
addr16
cmp
mov
mov
mov
dec
cmp
clc
inc
in
lea
push
das
dec
scas
movsl
sub
fisubrl
mov
lret
dec
adc
lock
mov
dec
push
and
popf
dec
aad
stos
fdivp
pop
inc
jae
cmp
adc
mov
adc
xor
dec
pop
push
into
lods
std
scas
cld
mov
rcll
inc
push
cltd
adc
psrld
bt
dec
mov
push
ffree
cltd
nop
cmp
test
in
imulb
ret
mov
loop
clc
and
mov
xor
mov
push
fldt
sbb
movsb
les
cmp
mov
push
cmp
sbb
push
push
orl
dec
fmul
aas
sbb
stos
stc
not
jb
and
mov
inc
scas
fcompl
push
push
sbb
or
mov
or
scas
outsb
mov
jge
adc
mov
mov
sti
jbe
adc
cld
jg
subb
ljmp
add
pop
mov
pop
adc
cmp
fstps
mov
in
xor
rolb
mov
adc
mov
daa
bnd
test
and
sbb
loope
rcrl
loopne
pop
out
mov
mov
xor
adc
sbb
aas
cmp
inc
in
cld
mov
rolb
cmp
sub
dec
adc
xor
dec
fabs
call
cmp
sbb
sbb
or
popf
push
cmp
and
sahf
inc
inc
cmp
sub
je
mov
data16
inc
push
leave
xchg
inc
xlat
pop
push
lret
jno
pop
negb
fmull
cmp
add
cmpsl
mov
nop
dec
adc
lods
pop
inc
and
jge
mov
int3
jle
cmp
push
mov
cs
idivl
sbbl
inc
push
sbb
mov
movsb
dec
or
movsb
nop
outsb
aam
aaa
sub
ret
mov
dec
test
rorb
jmpw
lods
in
lret
mov
lods
jnp
jb
sbb
imul
hlt
cmp
pop
jo
push
roll
xchg
iret
mov
imul
incl
pusha
fwait
sub
pop
jb
ret
les
popf
stos
xchg
sub
scas
mov
stos
je
sub
stos
bound
pop
aaa
pop
lgs
dec
jge
insl
test
or
je
pop
inc
and
add
mov
das
jne
adcb
adc
pop
xchg
add
in
or
cmp
jo
adc
sbb
ds
cmpsb
mov
es
sbb
divb
mov
adc
in
fcomps
leave
sarl
xor
std
imul
xorb
inc
dec
adc
nop
fwait
cmp
lret
xchg
jmp
xchg
imull
cs
mov
out
or
xchg
mov
adc
aas
pop
or
push
xchg
cmp
mov
xchg
xor
mov
in
dec
add
inc
rclb
ss
sahf
iret
cmpsl
jmp
xchg
std
popa
jge
das
jbe
xchg
mov
xor
lds
jmp
imul
sub
out
sbb
xor
inc
roll
js
xrelease
pop
pop
push
test
cmpps
fistl
cmp
push
sbb
mov
or
jae
mov
pop
pushl
mov
xchg
and
adc
mov
xchg
mov
cltd
frstor
xor
xchg
inc
mov
adc
dec
add
fwait
jl
inc
sub
mov
push
inc
inc
pop
inc
adc
loop
pusha
fdivl
mov
sbb
xlat
pushf
xlat
push
leave
xor
or
lret
out
ljmp
dec
cmp
cwtl
jecxz
out
mov
jbe
in
iret
sub
sbb
shlb
test
cmp
jae
mov
mov
dec
inc
notl
cltd
and
int3
cmp
sub
push
outsl
ret
dec
lcall
repz
mov
lock
inc
aas
cmp
xor
insl
repz
in
dec
repnz
mov
xchg
jnp
add
jnp
enter
ror
add
mov
hlt
cld
inc
inc
hlt
xchg
sbb
or
lcall
pop
cmc
or
cltd
or
fwait
dec
icebp
pop
xor
jl
inc
sbb
adc
out
push
aam
cld
pop
inc
cmpsb
fmuls
test
mov
imul
xor
and
ds
mov
imul
push
fidivs
in
dec
mov
mov
and
jno
in
mov
pop
std
push
xor
lods
xchg
mov
imul
jmp
pop
push
dec
jl
imul
jge
sbb
mov
mov
test
pop
pushf
lret
push
jl
inc
in
inc
pop
jmp
jb
cmp
cmp
lret
pop
das
mov
gs
xchg
pop
popa
mov
es
add
mov
cmpsl
sub
fsts
jmp
lds
ja
call
mov
sub
push
ret
aam
jg
or
xchg
into
dec
popa
lds
mov
sub
inc
add
sub
call
mov
mov
daa
inc
cltd
inc
mov
movsl
inc
inc
or
adc
cwtl
inc
daa
mov
out
inc
insb
std
ss
clts
rcl
gs
movsl
cmp
lcall
jb
inc
aaa
xorb
adc
arpl
movsb
mov
lahf
jno
mov
sub
xchg
cmp
lods
fstl
sub
cld
rcl
cmpl
int
jne
mov
inc
xor
lds
and
and
in
fwait
mov
inc
or
push
subb
sbb
add
lret
inc
jmp
dec
fs
mov
pop
out
aas
pop
ds
rcrl
enter
in
lret
insb
dec
cmp
addr16
out
xchg
xchg
lcall
int3
push
inc
sar
sub
sbb
push
bswap
dec
jnp
xor
cwtl
shll
mov
inc
mov
pop
mov
lods
clc
into
sub
jb
push
repz
in
mov
cmpsl
in
xor
inc
in
adc
inc
movsb
push
sub
shlb
pop
testl
out
fldenv
inc
loope
fdivrs
and
shrl
aas
xchg
inc
xlat
iret
mov
pop
xor
ror
ret
popa
repnz
mov
aas
loope
notl
leave
test
adc
mov
movsl
xchg
jnp
sbb
imul
insl
sub
push
stc
fdivs
loope
jno
cs
cmpsb
lret
inc
pop
or
fs
test
push
inc
je
scas
lcall
sti
adc
xlat
jmp
mov
mov
out
add
xchg
rcrl
sbb
xorb
xor
mov
cmc
xchg
or
or
jecxz
sti
repz
push
into
cmp
jns
add
xchg
shll
dec
push
inc
mov
fwait
or
popa
shll
cmpsl
sahf
cmp
mov
mov
popf
xchg
popl
sbb
or
das
cmp
inc
push
adc
popa
adc
fldl2t
daa
loop
pop
leave
pop
jmp
ret
imul
jns
jno
xor
cmp
pop
and
sbb
adc
psrad
and
ret
jns
or
mov
and
mov
sbb
clc
andb
aam
lret
fidivrs
mov
jg
andl
jnp
xor
cmc
cltd
cmp
push
jae
push
mov
adc
addb
inc
pop
lods
push
adc
orb
mov
sbb
aaa
fldl2t
stos
push
add
out
cmc
scas
cmpsb
stos
xchg
idivw
jecxz
inc
cltd
xor
mov
sahf
aad
cmp
mov
mov
mov
ficoms
fadds
out
bound
notb
inc
pop
add
outsl
aad
test
inc
xchg
call
out
cmp
push
outsb
or
mov
or
adc
push
lock
sbb
mov
inc
push
leave
leave
in
arpl
je
lcall
in
jmp
faddp
imul
sbb
mov
call
and
sbb
lret
mov
cld
xor
add
cwtl
testb
sbb
imul
fsubs
test
jmp
addr16
and
stos
xchg
jo
or
call
aaa
and
sbb
jo
fs
adc
mov
dec
fs
adc
mov
data16
inc
stos
jae
xchg
mov
inc
dec
shr
jne
fs
mov
jg
dec
out
fstps
jno
mov
pusha
jle
arpl
fimull
scas
sub
imul
lret
call
pusha
insl
pop
or
nop
xchg
nop
rorl
xor
or
and
jmp
mov
test
add
add
sti
jbe
cld
nop
sub
xchg
dec
sub
and
add
mov
popf
mov
mov
outsl
sub
pop
sbb
lods
ret
sti
popa
sbb
sarl
aam
pusha
lcall
sub
in
xchg
mov
in
xchg
scas
xchg
in
popa
push
dec
pop
aam
sar
cmp
add
sbb
test
popf
ret
xor
pop
inc
mov
jns
cmpsb
mov
nop
incb
sub
scas
inc
xchg
jg
and
cmp
sbb
add
jle
mov
fs
pop
adc
and
dec
mov
adc
sbb
cmp
ret
inc
adc
lock
xor
sbb
fdivrl
cltd
dec
push
loop
outsb
add
mov
inc
outsb
pushf
jo
jne
xchg
loopne
cmp
pop
movsb
xchg
dec
sub
xor
popf
imul
lret
mov
out
or
repz
popa
or
cs
sti
pop
fisubl
jecxz
pop
mov
jae
loopne
arpl
pop
push
pop
repz
orl
daa
sti
push
sar
jne
je
mov
in
outsb
sti
push
cmp
pop
pop
pusha
and
inc
into
cmp
adc
jno
pop
lods
xchg
add
push
jg
pop
mov
pop
inc
enter
push
fs
jne
xchg
fisubl
sbb
pop
push
enter
sub
mov
pop
shlb
movb
lret
and
mov
in
pop
pop
mov
adc
loopne
pop
rorl
mov
aas
aas
sbb
fwait
push
pop
inc
sbb
jb
xchg
cmp
das
pushf
mov
mov
sub
add
cltd
lds
jmp
data16
mov
test
mov
out
in
shll
and
pop
loop
cmp
leave
jnp
pusha
mov
jns
popa
leave
pop
push
sarl
pusha
and
in
or
stos
jbe
imul
fidivrs
imul
ss
fistps
cmp
out
sar
int3
sbb
pop
sti
adc
mov
pop
xchg
sbb
xchg
or
jecxz
lds
daa
out
mov
fisubrs
inc
pusha
aas
mov
mov
jnp
aam
outsb
and
sahf
lcall
mov
setne
mov
cmc
sub
mov
cmp
lcall
jno
xchg
ret
mov
int
jo
sub
sbb
das
xlat
add
mov
fistpl
fld
insb
push
pop
inc
cld
pop
xor
js
cmp
inc
cmp
mov
xchg
shr
dec
and
les
enter
mov
pusha
sub
dec
inc
pushl
jo
arpl
cmpsb
cmp
jecxz
hlt
push
inc
xor
cli
and
mov
push
mov
jns
pop
push
jo
fsubrl
mov
fmull
mov
cmp
scas
out
sub
inc
xor
repz
je
push
push
sarb
pop
jp
test
pop
mov
js
mov
jo
pop
cli
xor
jne
imul
leave
test
ljmp
pop
mov
or
mov
nop
mov
pop
jno
shrb
xchg
mov
mov
lods
adc
out
xchg
cmp
cltd
jg,pt
ljmp
bound
imul
xchg
fldt
ds
and
sbb
push
jns
sbb
icebp
and
jmp
incb
push
shlb
shr
mov
mov
mov
int
push
jecxz
stos
shl
fisubrs
scas
gs
adc
iret
push
and
leave
sub
cld
repz
stos
leave
jae
movsb
test
jl
mov
jp
ss
aad
sbb
mov
push
lahf
call
sub
cld
fdivrs
jmp
jb
fldenv
loop
out
push
push
and
xchg
sti
mov
inc
repnz
pop
int3
int3
mov
xchg
dec
int
push
mov
add
dec
test
jne
dec
pop
mov
adc
das
push
push
sbb
and
inc
inc
adc
jmp
or
roll
cmpsl
test
orb
shlb
stos
mov
pop
divl
cmp
xor
std
push
cltd
add
push
mov
xchg
lret
mov
repz
fninit
pop
mov
pop
in
ds
mov
addr16
push
data16
popl
xor
xchg
cmp
into
mov
mov
lock
and
loop
xchg
sub
mov
mull
int
jecxz
loope
xchg
jl
pop
or
pusha
mov
push
loope
imul
sahf
hlt
push
cmp
xchg
sbb
mov
or
test
in
jne
stos
xlat
jae
jecxz
xor
fidivl
pop
dec
lahf
scas
sbb
cmp
mov
xchg
add
outsl
mov
push
lock
jbe
sbb
jns
loopne
adc
cmpsl
mov
popa
insb
les
add
mov
ds
in
push
daa
inc
add
push
push
shll
inc
aas
jle
inc
jnp
popf
das
mov
popl
cmpl
mov
popa
push
push
test
add
pop
pop
popf
mov
and
sub
fsubl
fisubrl
test
sbb
cmp
test
or
les
jg
scas
popf
js
jl
test
into
mov
insb
push
cmp
fcompl
add
xor
xchg
pop
lock
pushf
test
lcall
frstor
shlb
inc
push
mov
push
inc
pop
sti
gs
jecxz
or
inc
sub
push
in
cmpsb
xor
add
mov
mov
dec
jne
decb
jbe
arpl
mov
push
mov
mov
es
xor
jg
mov
mov
dec
nop
and
dec
js
pusha
out
sub
js
mov
jae
push
mov
fcmovb
xor
push
clc
adc
fiadds
fldcw
sbb
scas
jb
loopne
or
pop
adc
nop
inc
sar
mov
xor
lahf
mov
push
test
sbb
adc
push
pop
scas
divb
and
hlt
jl
lods
or
imul
mov
rorb
ret
or
jge
xchg
xchg
aas
xchg
mov
fmulp
call
jmp
inc
mov
fs
dec
mov
scas
aam
push
dec
and
mov
mov
or
or
push
add
inc
loopne
pop
fbld
lahf
popa
fcmovnbe
or
xchg
sbb
fildll
sahf
daa
add
inc
jo
out
xchg
sub
push
jb
call
and
and
sub
jb
mov
mov
imul
lret
call
in
inc
into
sti
mov
xchg
jns
jge
xchg
aad
add
mov
pop
sub
inc
inc
imul
hlt
notb
xchg
mov
jmp
xchg
popf
scas
jecxz
xchg
sub
aas
xchg
addr16
cmp
sahf
fsub
lahf
and
loope
dec
cmp
mov
sbb
xchg
jnp
xor
fsubrl
rclb
xor
mov
out
clc
lock
xor
nop
fistpl
jle
sub
sbb
cmc
mov
repz
and
cmp
das
scas
dec
mov
outsb
iret
inc
xchg
mov
hlt
pop
lcall
dec
std
dec
pop
roll
shll
inc
fsub
aad
repnz
fwait
jp
imul
xchg
and
push
mov
sub
test
mov
lea
ljmp
jbe
mov
jae
adc
cmc
adc
fsts
out
test
dec
adc
das
rcrl
pop
ficomps
movsb
repz
inc
scas
add
mov
mov
and
das
push
inc
pop
div
mov
mov
into
mov
mov
int3
notb
dec
xor
sarl
push
xlat
mov
dec
outsb
xchg
xchg
xor
xor
cwtl
and
sbb
enter
out
lock
or
and
mov
nop
std
push
dec
lods
mov
out
push
jl
jnp
std
div
xchg
repz
les
cmp
mov
jge
sbb
dec
mov
jg
jno
xor
mov
xor
inc
ret
mov
sbb
mov
mov
fildll
fimuls
jae
insb
and
in
std
jns
dec
test
pop
outsl
js
fs
rcr
jg
pop
or
sbb
and
dec
xchg
mov
lcall
addr16
xchg
dec
dec
jbe
lret
mov
jge
jl
or
stos
ret
fldln2
mov
push
jne
fildl
mov
test
sti
imul
out
push
lcall
fstl
cmp
into
jo
push
jae
mov
and
xchg
mov
mov
adc
inc
cmp
adc
sub
fcompl
inc
push
icebp
dec
inc
inc
xchg
xchg
adc
stos
mov
pop
push
das
shlb
cmpsb
mov
test
cmp
or
push
fwait
adc
flds
add
sub
sub
inc
push
jg
sub
pusha
mov
mov
push
lods
mov
jbe
std
aad
fmull
data16
jl
int3
fstpt
hlt
es
clc
out
pop
andl
sbb
clc
xchg
jbe
xlat
jge,pn
inc
inc
mov
ret
or
std
popa
add
sbb
pop
or
into
loope
xor
pop
cmp
jle
sub
dec
push
dec
or
cmp
imul
lret
daa
mov
push
daa
std
in
insl
out
pop
jl
sbb
xor
shl
sbb
mov
mov
arpl
insl
push
cmp
adc
dec
and
ficoms
daa
jo
lods
das
out
jge
mov
jg
adc
mov
mov
mov
mov
mov
cmp
mov
rcrl
stc
ja
addr16
mulb
and
push
mov
test
xchg
lock
andl
dec
and
sbb
sub
jle
mov
shll
cmpsl
jg
inc
jl
mov
mov
mov
shl
mov
aas
sahf
mov
cs
xlat
addr16
inc
jl
bound
and
mov
repz
fcmovb
mov
push
jge
dec
pop
cmpsl
sbb
cmp
pop
gs
lock
add
push
jo
ss
push
jne
test
xor
stos
jne
cmc
cwtl
mov
push
outsb
inc
sbb
xor
cmp
mov
xor
mov
mov
outsb
mov
sbb
rclb
cmpsb
lret
mov
adc
push
jp
popa
push
inc
mov
scas
mov
in
xlat
lret
xor
fsubl
mov
add
sub
dec
pushf
dec
dec
ficoml
pusha
in
xchg
mov
fsubrp
add
es
lds
stc
cmp
ds
ss
test
xchg
push
adc
repz
mov
xor
add
inc
test
clc
jns
mov
fldenv
mov
or
fidivl
bound
imul
pop
inc
nop
lcall
lret
aas
fwait
mov
mov
pop
lcall
fidivl
xor
push
push
inc
xchg
mov
dec
and
clc
andl
push
dec
and
addr16
xchg
test
and
jae
cld
aam
inc
rorb
subl
mov
cli
fdivr
mov
in
leave
mov
jnp
xchg
and
sbb
mov
out
stos
pop
and
or
dec
scas
icebp
shrl
jl
adc
and
aad
ss
jo
xchg
or
adc
test
mov
lret
or
in
or
xchg
xchg
aad
dec
imul
and
push
cltd
xor
adc
inc
outsb
mov
rorl
inc
movsl
test
popa
and
add
push
sub
inc
xorb
mov
pop
sti
add
pop
int
pushf
push
lahf
mov
lock
add
jmp
inc
xchg
jmp
ds
pop
daa
inc
and
mov
push
jge
push
mov
jmp
pusha
and
out
lods
cmp
pop
jne
int3
mov
sub
mov
fdivrs
int3
mov
bound
add
fsubrl
push
andb
xchg
roll
in
cmp
or
pop
mov
rorb
mov
jno
fldl
xorb
mov
sbb
mov
jno
fsubrl
mov
out
lock
testl
jl
jno
test
mov
lea
cwtl
or
jnp
in
cltd
adc
divl
es
sub
add
mov
jecxz
data16
cmp
mov
aam
dec
scas
push
push
mov
outsb
bound
pop
test
pusha
or
addr16
or
pop
push
jnp
and
and
insb
stos
mov
dec
add
or
sbb
jl
cmp
mov
out
fstpt
inc
jnp
outsb
jnp
dec
aas
jg
lds
das
je
adc
mov
sbb
clc
loope
cld
push
fs
shlw
pop
inc
mov
push
es
fwait
nop
xchg
sub
sub
inc
mov
pusha
mov
push
pop
push
into
push
pop
adc
dec
outsl
sub
enter
dec
push
cmp
shll
call
leave
adc
popa
inc
xchg
hlt
mov
fnstenv
inc
into
addr16
jmp
cmp
insb
sbb
push
cmp
mov
add
bound
adc
jg
ret
outsb
es
loope
cmc
int
out
push
test
ja
inc
loopne
jle
and
inc
in
out
and
sub
push
cmpsl
ja
xchg
jae
mov
shrb
inc
loopne
jg
push
orb
movsl
sbb
add
or
jbe
imul
or
jp
mov
data16
lock
mov
mov
scas
icebp
pop
lcall
ret
push
jns
repnz
js
dec
sbb
popa
mov
hlt
push
inc
mov
pop
jle
mov
lret
add
stos
cmpsb
call
lcall
sub
mov
sub
or
mov
pop
mov
xchg
and
mov
sub
mov
mov
ja
xchg
inc
shlb
jle
inc
mov
pop
dec
ficompl
into
fs
out
rorl
fisttpl
pop
xchg
es
insb
aaa
pusha
outsl
and
mov
pop
xlat
push
loop
int3
pop
cmc
sbb
and
js
mov
and
mov
mov
mov
cmpsb
pusha
jl
sub
and
mov
les
push
jb
dec
push
andl
call
jg
inc
xchg
xor
pop
lods
jns
je
sbb
ss
and
inc
pop
mov
ret
cmp
pop
bound
call
pop
repz
and
fimull
inc
cmpsb
sub
out
stc
xchg
or
mov
and
push
push
jle
int3
cmp
test
cmpsl
xchg
jl
mov
push
mov
inc
mov
add
push
cmc
xor
jge
add
jae
mov
pmaddwd
jbe
and
dec
inc
push
lods
leave
jae
push
dec
adc
stc
jmp
jnp
adc
sub
test
mov
stos
push
test
pop
lods
das
lods
fcomps
in
stos
jle
mov
cmpsb
lret
leave
mov
movsl
shrb
push
cmp
push
jno
jae
sbb
add
push
mov
test
in
inc
cld
push
mov
fs
cmp
adc
dec
or
pop
inc
xchg
pushl
mov
mov
push
call
push
and
cmc
mov
int3
bound
test
pop
cmpsl
xchg
test
lds
mov
jbe
adc
negl
mov
stc
js
cmp
push
mov
xlat
mov
outsl
xorb
fistps
push
test
lret
pop
test
loope
jne
mov
testl
out
insl
jl
jnp
pop
jne
mov
add
pop
shlb
mov
xchg
sbb
adc
push
mov
jo
repnz
mov
jnp
mov
inc
sub
mov
rcll
cmp
mov
cmpb
lret
jno
ret
or
jnp
mov
jnp
mov
or
or
ret
jg
arpl
sbb
aaa
xchg
scas
bswap
mov
ljmp
lock
out
mov
pusha
mov
xor
popf
jmp
mov
orl
pop
inc
test
popl
test
hlt
cwtl
enter
pop
add
push
fistpl
in
pop
out
inc
ret
les
sbb
stos
aas
or
cmp
push
sub
mov
faddl
lahf
ret
push
dec
xor
cwtl
rolb
push
mov
mov
lret
sti
sub
adc
adc
cli
fistpl
inc
jl
stos
dec
xor
int
loop
nop
push
dec
mov
mov
in
iret
lret
jne
je
loope
cmp
dec
inc
pop
in
pop
aaa
stos
push
dec
jmp
sub
xchg
subl
inc
pop
int3
dec
mov
adc
jo
out
sub
cmp
rcll
pusha
mov
xchg
mov
jbe
adc
pop
rcrb
loopne
add
mov
xor
aad
mov
scas
sub
jnp
push
mov
pop
push
stos
lea
pop
pop
jne
mov
pop
loopne
shr
pop
std
fstps
and
aad
je
loopne
cmp
shlb
lock
pop
loop
jmp
or
add
out
arpl
mov
lcall
cmp
xor
and
xchg
pop
or
pop
shrd
dec
xchg
xor
pop
push
sub
dec
js
inc
sbb
pop
mov
dec
mov
mov
mov
mov
mov
inc
jecxz
insb
rcrl
dec
out
hlt
adc
ret
in
xor
and
mov
mov
fiaddl
push
xor
stos
inc
pop
fwait
ret
addb
adc
mov
lods
sahf
jo
in
stos
lahf
mov
rolb
dec
sarb
dec
xor
cmc
mov
xchg
ja
in
jecxz
mov
iret
or
in
and
add
sub
in
out
mov
lret
adc
aas
and
xor
xor
stc
out
stos
add
pop
cmp
loop
ja
cmp
mov
push
jge
int3
dec
and
xchg
xlat
hlt
imul
sbb
push
sbb
and
sbb
mov
cwtl
and
pop
sub
mov
push
sbb
ret
push
mov
roll
lahf
mov
sbb
pop
pop
loop
in
fiaddl
test
xor
sahf
add
jae
movsb
jne
push
pushl
inc
push
and
lcall
test
xchg
push
arpl
pop
add
gs
mov
push
shrb
jecxz
push
sti
pop
mov
pop
fcmovnb
adc
jge
cmpsb
daa
mov
adc
out
std
inc
adc
dec
std
repz
fstpt
jo
cmpsb
aas
inc
mov
in
ja
mov
dec
cmp
jecxz
push
jmp
add
and
in
lock
sti
mov
push
mov
and
or
dec
mov
scas
mov
es
fs
aas
loope
pop
movsl
ret
call
lea
lret
jl
xchg
fadds
dec
sub
stc
out
mov
popa
dec
das
xor
adc
js
mov
in
fstpt
addb
push
push
imul
adc
inc
das
cmp
pop
arpl
mov
not
test
push
cmpsb
mov
inc
call
leave
das
sbbb
mov
or
daa
inc
jb
and
out
push
adcl
pop
sti
aas
jb
fimuls
and
and
sarb
jle
mov
mov
bound
xchg
pop
hlt
xchg
divb
int3
clc
stos
fimuls
inc
or
pop
inc
dec
popf
jo
adc
push
or
les
xchg
int
inc
xor
imul
push
jae
or
push
cs
cmp
nop
jo
daa
ror
xchg
jnp
jb
mov
out
stos
adc
add
add
jp
mov
adc
out
xor
sbb
sbb
fimuls
lds
test
in
inc
outsb
in
push
and
and
movsl
outsb
mov
nop
inc
out
aas
jmp
imul
out
pop
rcl
or
push
sbb
push
jns
ficoml
xchg
dec
xor
mov
jecxz
scas
jl
jg
in
push
daa
ljmp
inc
popa
into
adc
gs
push
jno
xor
sub
stos
loope
sbb
pop
das
or
xor
fdivr
sub
rcrb
loop
add
add
aaa
xorb
mov
test
cmc
xor
insb
pop
mov
mov
xor
sbb
in
add
push
js
out
das
scas
addl
dec
mov
xlat
je
or
adc
and
mov
lret
fistpll
test
std
into
out
mov
adc
aad
xchg
push
xchg
ja
and
or
xchg
xor
dec
dec
dec
jns
mov
inc
cwtl
dec
notl
xchg
divb
dec
sbbl
loopne
jnp
cmpsl
xchg
loop
cmc
lret
addl
pop
repz
call
or
dec
aas
lock
cli
std
push
push
sub
and
popa
cmp
dec
jg
jp
push
and
fcoms
lds
jns
imulb
leave
cld
pop
ljmp
sbb
popf
stc
outsb
mov
pop
das
mov
dec
inc
mov
and
sub
and
movsl
xor
shlb
or
fdivrs
mov
push
aad
clc
dec
mov
daa
adc
aas
mov
sahf
repnz
das
cmp
in
adc
adc
cld
jl
mov
pop
fadds
leave
rorl
sti
out
add
iret
inc
repz
nop
and
lret
jne
lods
js
lret
dec
jbe
jnp
mov
push
jb
xor
xor
mov
imull
ret
inc
in
daa
out
push
lods
cli
pop
jl
js
sahf
pop
out
add
mov
repz
mov
mov
jl
cmp
add
jb
push
sahf
fidivrs
jb
cmp
popf
mov
jge
test
loope
inc
mov
xchg
xor
xchg
push
adc
xor
or
mov
movsb
leave
or
and
sbb
jle
jle
add
or
test
aam
mov
cli
lahf
fbstp
out
js
xchg
jbe
sub
dec
clc
out
movsl
adc
adc
ja
insb
jb
inc
adc
and
mov
mov
jl
ss
gs
ss
sarb
cmp
jb
lret
sbb
mov
sahf
or
callw
test
fcomps
cmpsb
in
enter
and
mov
lds
or
in
pusha
fyl2x
sub
push
mov
sti
xchg
inc
xchg
push
fwait
or
lods
cwtl
sbb
nop
dec
mov
popf
adc
shrb
cmp
sub
call
dec
push
notl
les
stos
mov
fwait
aaa
and
sbb
mov
xchg
je
fsubrp
das
mov
test
mov
je
adc
pop
inc
popf
test
cld
repz
stc
popa
ret
aas
inc
addr16
pushl
das
scas
lahf
jo
movsb
sbb
push
pop
mov
out
fsub
or
xchg
arpl
sbb
add
dec
lods
jmp
cmpb
xchg
mov
hlt
scas
lret
cmp
or
jle
mov
ret
test
jns
xchg
xor
jl
mov
lret
push
loopne
cmpl
sti
and
popf
push
insl
outsl
aam
xor
pop
subl
cmpsl
xchg
mov
and
pop
dec
push
mov
enter
jnp
scas
xor
and
mov
sub
xor
mov
lods
dec
or
mov
or
dec
popf
pop
cmp
lret
stc
ds
enter
idivb
dec
test
insl
inc
mov
push
pushf
ret
or
pop
jb
test
sti
ret
shlb
and
sub
mov
dec
fsubl
jg
pop
test
jns
outsb
fidivrs
fmuls
mov
add
imul
int3
add
cmpsl
mov
clc
in
push
leave
sahf
aad
inc
clc
mov
mov
adc
arpl
xchg
aad
add
loop
mov
fldenv
fwait
into
mov
cli
loope
imul
stos
add
popf
cwtl
jae
dec
lock
cmpsb
loopne
mov
data16
int3
add
sahf
inc
push
outsb
repz
cmpl
inc
or
sti
xchg
cmp
mov
push
add
inc
leave
pop
mull
cmp
lea
cmp
fnstcw
in
ja
dec
inc
fwait
inc
mov
mov
jb
pop
arpl
xchg
sub
adc
sti
cltd
push
je
fdivl
js
fsubr
adc
xor
dec
mov
lds
mov
out
adc
cmp
push
mov
push
add
mov
imul
adc
pop
xchg
inc
mov
sbb
add
cs
cli
and
mov
push
mov
and
add
addl
xchg
jl
xor
push
jno
rorb
pop
mov
outsl
xchg
jmp
js
add
addr16
popf
push
divl
insl
outsb
scas
xchg
jg
sub
push
enter
aas
mov
sbbb
sahf
jae
mov
mov
repnz
pop
ss
jae
jbe
push
stc
in
lods
pop
sbb
xor
lea
jo
and
daa
mov
push
popa
in
sti
adc
dec
inc
jbe
and
loop
movsl
cmp
fdivr
out
arpl
xchg
fnsave
or
shl
notb
add
and
bswap
xchg
dec
push
push
idivb
push
inc
xor
adc
scas
loope
jnp
or
ret
push
jecxz
sub
mov
push
test
sahf
fidivrl
in
insl
gs
sbb
bound
gs
inc
adc
mov
in
std
sti
xor
xchg
and
scas
xor
insl
cld
push
popa
jg
mov
pop
pop
sbb
pushf
out
mov
insl
imul
cmp
cmp
cmp
aam
ret
test
lock
dec
bound
adc
setnp
out
inc
out
das
push
lret
ja
in
sbb
lods
jg
push
cmp
adc
mov
cmp
dec
fbstp
dec
xchg
xchg
mov
or
jp
dec
mov
cld
push
sahf
icebp
bound
int3
mov
pop
mov
loopne
dec
jp
lods
xchg
adc
out
arpl
or
jp
mov
push
gs
pop
dec
aas
dec
add
mov
rclb
cmp
pusha
mov
cmpsb
roll
sbb
cmp
cmpsl
cltd
lret
mov
add
xchg
jnp
sub
loopne
lods
dec
sbb
dec
test
jp
es
aam
enter
and
popa
js
mov
mov
adc
inc
mov
mov
mov
aam
sbb
xorb
cs
xchg
ja
xlat
jle
int
outsb
mov
and
sub
aas
and
cltd
data16
test
cmc
sbb
dec
jmp
sbb
jmp
int
adc
mov
pop
cmpsb
inc
add
fs
repnz
rclb
fidivs
sub
sbb
sub
jns
sbbl
adc
imul
popa
fincstp
es
lret
xchg
ss
jmp
lcall
mov
add
xor
cltd
gs
add
aas
pop
dec
outsb
xor
mov
push
aad
jecxz
movsl
dec
sbb
jmp
or
in
adc
push
loope
jbe
loop
pop
pop
xor
lods
inc
addr16
mov
mov
xchg
or
jo
xchg
jae
nop
ret
ror
in
lods
lret
pop
cmc
lods
clc
movsb
lea
jg
out
jne
mov
push
int3
xchg
faddl
arpl
scas
out
pop
jns
frstor
ss
jb
fimuls
xor
mov
loop
xlat
adc
jecxz
jb
lcall
movsb
and
lret
lcall
adc
gs
xchg
lcall
inc
dec
push
mov
ja
add
sahf
cwtl
xchg
enter
inc
and
cltd
xchg
fs
popa
stc
adc
xlat
test
mov
pop
mov
and
add
adcb
sbb
stos
cltd
mov
rolb
sbb
jl
mov
pusha
push
mov
fists
mov
cmc
xlat
or
pop
cmp
lahf
or
push
mov
mov
mov
and
insb
stc
cmp
push
mov
mov
or
mov
or
rclb
leave
or
jbe
or
insb
imul
sub
pop
sbb
pop
rolb
sbb
andb
push
test
in
jmp
pop
loop
icebp
dec
int3
adc
fldt
cwtl
dec
xor
xor
xchg
xchg
repnz
cmc
adc
inc
push
push
add
push
mov
lcall
inc
jl
pop
mov
adcb
inc
cmc
cltd
jns
mov
mov
adcb
adcl
gs
xchg
je
cld
sbb
mov
arpl
push
pop
rcrl
lcall
add
pop
add
xlat
push
je
enter
pusha
xor
cmpsb
jns
mov
dec
add
movsb
sarl
xchg
adc
sbb
push
adc
pop
jae
int
rcr
aas
push
add
pop
add
and
lock
or
ret
mov
test
cmp
xchg
je
lea
jne
sbb
inc
mov
push
imul
imul
je
and
int3
popa
insb
int3
out
xchg
or
cmp
nop
lahf
icebp
stos
hlt
mov
in
push
sbb
ret
insb
adc
sti
cmpsb
lock
dec
aad
jg
mov
xor
dec
sahf
pop
fwait
push
pop
ja
xor
mov
pop
xor
adc
xor
or
xchg
xor
mov
mov
jne
mov
mov
inc
and
addb
shll
and
jecxz
mov
cmp
punpckhbw
push
adc
dec
mov
in
fwait
pop
mov
jne
or
xchg
push
sahf
mov
add
or
mov
pusha
mov
push
outsb
xor
and
adc
push
dec
mov
into
pop
xor
jecxz
mov
pop
cmp
das
inc
mov
sub
push
loopne,pt
push
jae
inc
adc
jno
popa
mov
pop
enter
out
les
out
or
mov
jnp
push
sti
xchg
daa
lods
movsl
push
push
sub
xchg
adc
movsbl
movsl
cmp
jb
xor
mov
test
sbb
inc
fcmovnu
pushf
out
repnz
dec
test
outsl
push
inc
in
mov
and
ficompl
movsl
mov
mov
test
jbe
lds
daa
pop
mov
xchg
shrl
sbb
push
sti
dec
aaa
mov
cmp
mov
xor
outsl
std
xorb
sub
jmp
fbstp
cwtl
ret
cmp
in
insb
or
xchg
lods
arpl
jnp
lret
hlt
imul
dec
stos
addr16
jo
imul
push
adc
jo
call
mov
cmp
and
push
mov
sbb
xchg
and
sbb
and
cmp
add
inc
cmp
push
ds
loop
loope
xchg
lahf
jp
pop
cmpsl
push
mov
pop
pop
mov
and
loope
outsb
dec
out
cmp
jg
scas
mov
cmp
inc
popf
dec
andb
sub
mov
sbb
or
stc
jp
js
movsb
mov
les
jle
and
cli
clc
xor
femms
sbb
cmp
aad
mov
fists
adc
dec
mov
cli
aaa
inc
push
aam
shrb
sub
xchg
mov
xlat
mov
push
popa
or
inc
out
push
cmp
aad
xor
pusha
cmp
push
ss
jl
pusha
stos
fisttpll
mov
or
out
adc
mov
pusha
lock
adc
scas
cmp
repz
mov
mov
es
fidivrs
aam
stos
or
js
adc
pop
xchg
pop
mov
pop
mov
nop
push
dec
loopne
out
or
xor
ja
push
stos
lcall
dec
arpl
vpunpcklbw
leave
std
aam
xchg
adc
mov
mov
push
mov
je
scas
gs
fmulp
movsb
in
xchg
cli
inc
shll
dec
stos
push
in
or
decl
movsl
js
mov
sahf
and
insb
cmpsb
mov
push
shll
sbb
push
outsl
shl
mov
lea
cmp
ds
lock
add
mov
ljmp
adc
jp
shll
iret
roll
jl
sbb
push
jae
lods
aaa
mov
dec
pop
dec
hlt
repnz
push
inc
sub
fnstenv
mov
mov
adc
sbb
inc
inc
addb
loope
or
out
jle
les
adc
fwait
cmpb
icebp
rcr
les
jp
js
roll
inc
jne
leave
inc
insl
test
aas
xchg
jnp
enter
jo
pushf
das
test
mov
pusha
call
rclb
rclb
mov
dec
xor
cmpb
lds
mov
loopne
ja
xor
dec
repz
xchg
sub
push
jns
adc
insb
icebp
add
adc
imul
cmp
add
dec
lds
out
aam
outsl
sbb
jg
inc
insl
insl
xor
xchg
or
jnp
push
out
pop
or
stc
jecxz
outsb
push
int3
xchg
inc
cltd
inc
push
insb
push
cld
pop
es
xchg
pop
ret
insl
jo
and
clc
into
cwtl
or
jmp
daa
in
or
daa
imul
pop
mov
inc
mov
mov
sbb
jnp
lret
mov
lods
xlat
stc
inc
adc
mov
in
dec
fbstp
cli
push
adc
aam
cmp
mov
add
add
jmp
pushf
xchg
adc
ss
mov
inc
cwtl
sub
ljmp
pop
js
pushf
lret
push
imul
cmpl
fs
push
pop
adc
ret
shlb
rcll
pop
or
pop
mov
cmp
insl
pop
scas
roll
repnz
adc
xor
cmc
shll
sbb
hlt
jae
testb
adc
insl
inc
xchg
sub
lcall
jb
cmp
jecxz
lea
pop
ja
sbb
xchg
in
push
int3
out
fbld
pop
pop
add
cs
mov
sbb
add
movd
int
frndint
dec
push
clc
xor
lods
je
outsb
mov
xor
fsts
test
jnp
cmp
ret
add
leave
jnp
and
jp
push
sarl
ret
or
pop
cmp
sbb
sub
cwtl
push
mov
sub
pop
and
cmp
out
ret
outsb
int
mov
loopne
xlat
and
scas
in
test
pop
sub
rcr
pop
mov
xchg
ljmp
les
mov
sub
test
outsb
jnp
repz
aam
xchg
add
cmp
das
in
out
aas
test
insb
test
ret
cmp
jo
rcll
gs
notb
loop
ja
popa
dec
jnp
ja
push
test
popa
cmp
test
outsl
add
and
test
repz
movsb
dec
shlb
loope
mov
mov
popf
jge
stos
bound
add
es
sbb
sub
outsb
loopne
clc
xchg
mov
jbe
ret
mov
ljmp
andl
into
inc
sbb
jmp
add
cli
cmpsl
xor
dec
push
push
lock
sub
jmp
cmp
stc
cld
stc
fs
ds
orb
cmp
int3
xor
das
dec
xchg
sbb
sti
out
movsb
jns
inc
cltd
movsb
cmpsl
sbb
and
mov
mov
rclb
mov
es
mov
mov
lea
pop
iret
and
xchg
dec
enter
cmpsb
dec
das
jge
push
mov
push
xlat
xchg
mov
mov
rcrl
lods
aam
jle
sub
bound
sbb
dec
pusha
push
pop
cld
icebp
xor
lahf
add
xorb
aam
jo
cmp
xchg
dec
lahf
lea
lahf
push
mov
pop
or
mov
jo
test
sbb
loope
je
mov
out
mov
call
inc
loop
pop
push
out
mov
pop
loopne
and
cmc
add
add
pop
push
ja
push
lods
or
adc
mov
cmc
xorl
or
sti
jnp
daa
ror
mov
out
sub
push
loope
stc
inc
and
andb
add
fisubl
into
leave
js
sub
icebp
mov
out
cli
or
cmp
push
inc
sbb
pushf
cs
mov
xor
fidivrs
ss
add
push
repz
out
jns
push
hlt
push
rorb
clc
jmp
cmp
adc
push
cmp
xor
lea
inc
push
push
js
fcomp
xor
mov
pop
aad
cs
les
and
aad
icebp
adc
push
push
sub
nop
fs
sub
add
outsl
je
icebp
mov
pop
insl
mov
dec
push
dec
mov
outsb
sub
outsl
push
push
lods
loope
push
test
popf
jecxz
and
sub
xor
dec
jne
test
and
rorb
push
mov
xor
dec
arpl
movsl
aad
mov
sub
int3
dec
push
incl
fsubrp
mov
stc
mov
repnz
enter
je
mov
stc
loope
push
adc
sub
or
pusha
cmp
and
imul
loop
psubsw
push
movsb
xchg
inc
addr16
mov
mov
and
cmpb
in
sbb
sbb
cmc
lret
dec
sahf
adc
or
lods
mov
mov
sub
dec
sub
popf
insl
stos
mov
ja
ret
jecxz
jl
xchg
cmp
jmp
dec
jl
jmp
xchg
insb
or
push
jp
xor
jl
cs
jbe
adc
cli
lret
adc
jo
cmp
add
daa
ja
cmp
rol
in
loope
fsubl
cs
sbbl
xchg
testl
mov
pop
rcll
sbb
mov
fistpll
lret
xchg
jmp
inc
aas
lods
mov
stos
jb
mov
xchg
or
imul
int3
adc
dec
lock
and
inc
into
into
or
jae
rcll
add
rclb
or
or
lahf
push
jb
xchg
xchg
mov
push
lock
divb
pusha
push
adc
pop
push
jl
out
fwait
xchg
add
shll
jp
cmc
loop
jbe
mulb
fdivs
leave
lods
in
in
mov
mov
adc
xchg
dec
movl
sub
sub
jp
adc
loopne
sub
std
add
or
ss
filds
cmp
or
arpl
cmp
xor
push
iret
fisubs
dec
xor
test
cmc
cmp
in
loop
sub
mov
orl
cmp
mov
sub
jle
sbb
add
push
lods
xor
sub
or
sbb
push
add
movl
aam
mov
cmpsb
cmp
in
mov
repz
mov
xor
cmp
xchg
lods
fisttpll
mov
jmp
pop
inc
dec
mov
idivl
outsb
clc
push
mov
test
ret
movb
or
fdivrs
in
and
inc
stc
mov
inc
setne
and
outsl
cmp
js
shlb
mov
inc
xchg
mov
lods
cwtl
jge
push
arpl
push
push
leave
test
lcall
cmp
shlb
into
scas
in
sahf
ljmp
mov
mov
xor
test
hlt
jbe
movsl
test
jp
and
pop
inc
adc
xor
or
adc
sahf
or
mov
cmp
sub
js
dec
das
aas
add
mov
adc
notl
adc
push
fistpll
data16
aaa
mov
movsl
data16
mov
ret
add
decl
stos
negl
and
mov
adc
push
mov
add
cmp
sahf
xor
imull
lcall
pusha
dec
mov
add
pop
mov
mov
mov
dec
into
in
out
mov
lods
cltd
aad
jle
cli
add
xchg
push
jo
sub
in
cmp
cmpb
lea
mov
sbb
inc
aaa
sub
dec
or
push
ret
call
call
push
pop
xchg
call
dec
and
pop
icebp
scas
or
dec
mov
sbb
idivl
es
push
fcompl
out
arpl
inc
mov
mov
addl
clc
pop
dec
mov
sbbl
movsb
mov
es
push
cs
aad
lds
inc
dec
push
mov
hlt
into
imul
imul
scas
shl
push
sbb
scas
adc
loop
sarb
adc
loopne
jg
dec
push
mov
pop
cwtl
mov
cmp
enter
cmp
dec
test
hlt
mov
jne
sti
test
mov
mov
inc
fisttpl
ss
jge
popa
test
jl
push
xchg
neg
out
js
cmp
xor
cld
sub
mov
sarl
mov
pop
test
mov
insb
inc
into
cltd
xchg
pop
clc
push
lahf
loop
and
aaa
or
aas
dec
imul
jo
cmpsl
pop
leave
xor
mov
jmp
aaa
mov
push
jl
imul
jp
cld
stc
lcall
loope
adc
addr16
aaa
pusha
mov
outsb
fldenv
std
add
fldl
add
hlt
test
das
xchg
stos
imul
out
repz
or
mov
mov
cmpsl
aas
xor
insl
sub
shrb
xchg
cmp
or
lods
ret
es
outsl
arpl
arpl
xchg
jp
mov
add
leave
xor
adc
push
xchg
pop
fcomps
into
test
inc
fldenv
test
inc
sbb
xchg
add
mov
ljmp
in
adc
dec
inc
ljmp
jmp
rcll
fldl2e
adc
cmpsb
xchg
lcall
scas
mov
gs
bound
je
cli
and
add
mov
dec
jecxz
pop
mov
cmp
mov
test
imul
jmp
ja
loopne
pop
add
bound
popf
mov
out
aad
les
stos
push
ja
xchg
negl
mov
cmc
cmp
xchg
fstps
or
ljmp
pushf
and
add
rolb
pop
push
pop
adc
and
iret
sub
xchg
sub
into
pop
mov
leave
mov
xchg
lcall
and
mov
sti
test
sub
std
insb
cmp
inc
scas
jb
jae
jg
push
inc
ret
xor
mov
fsubs
jae
pop
movb
cmc
out
out
sub
add
xor
scas
sbb
repnz
outsl
adc
cmc
mov
out
fdivl
mov
inc
and
jl
mov
movsb
ja
sub
loope
mov
dec
jno
cmp
adc
jl
arpl
movsl
daa
cwtl
sbb
mov
push
cmp
pop
icebp
sbb
xor
push
push
incl
sarl
mov
xchg
or
xor
loop
adc
add
mov
cld
pop
hlt
test
push
jecxz
gs
ss
ret
jecxz
jmp
test
cwtl
aam
pmovmskb
sub
sub
and
dec
add
ror
xchg
int3
sbb
xchg
test
add
inc
je
inc
lcall
or
xor
bound
clc
loop
or
sbb
les
or
dec
popf
popf
add
lret
mov
out
fdivrl
push
lds
nop
inc
ret
jb
pop
sbb
and
inc
lods
addr16
inc
jns
aaa
rcrb
sbbb
push
fadd
pop
cmp
pop
lret
sub
mov
cmp
inc
loopne
ret
or
dec
add
subb
lahf
addr16
mov
xor
xchg
mov
jl
stc
imul
or
cmp
mov
mov
mov
out
testl
sub
lahf
loopne
dec
scas
dec
fwait
aas
stc
in
jl
lock
jmp
mov
insl
adc
inc
sar
mov
xlat
pusha
xchg
mov
icebp
aaa
lock
adc
pop
les
cmp
leave
sub
sbb
sbb
jg
inc
mov
push
adc
or
aad
enter
jo
adc
dec
and
andl
and
inc
xchg
loop
and
sar
dec
inc
loop
dec
push
xchg
mov
xchg
dec
stc
pop
loope
cltd
fldt
inc
fidivrl
cmp
jmp
sub
lock
incl
pop
je
push
sub
cmp
cmp
js
rorb
sti
repz
pop
mov
stc
adc
insl
imul
sub
xchg
pop
stc
xchg
cli
call
and
ljmp
out
fisttpll
sbb
sar
jnp
ds
movsl
push
jp
adc
pop
inc
xchg
cmp
xor
jns
dec
addr16
push
leave
push
divl
mov
push
or
movsl
je
jecxz
insb
push
inc
pop
test
sbb
pusha
ret
cmp
add
sub
add
iret
and
cmc
in
cld
scas
popa
aam
shrw
scas
pop
or
or
mov
jnp
imul
add
stos
clc
jmp
stos
sub
aas
xchg
xor
out
mov
mov
call
mov
fs
mov
mov
and
nop
jo
mov
fdivl
jg
lea
xchg
adc
pop
repnz
inc
sahf
adc
pop
or
je
daa
sub
jb
mov
add
adc
sti
das
sarl
loope
fcmovnbe
loop
in
push
xchg
push
shlb
jp
ss
or
in
jno
testb
aad
add
ja
adc
pop
sarl
pop
dec
and
test
mov
lock
add
cmp
push
xchg
out
jmp
dec
jl
fdivr
xor
arpl
push
push
sub
sar
sbb
mov
add
add
inc
repnz
std
outsb
js
mov
gs
imul
cmp
out
test
mov
and
sarl
or
and
push
repnz
fsubr
add
jl
or
jmp
and
sti
mov
lods
mov
or
jbe
jecxz
push
bound
subl
fbld
fldl
adc
ja
pushf
les
mov
dec
out
ficompl
xor
jle
shlb
insb
stos
out
ds
or
mov
mov
movsb
rol
rcll
jns
fcmovbe
pusha
mov
and
mov
rcl
or
add
aas
pop
in
and
sti
and
xchg
sub
add
repz
inc
and
repnz
sub
dec
sbb
sahf
add
xchg
cld
lcall
sub
sub
ja
pop
movsl
fnstsw
push
in
adc
inc
dec
les
mov
or
adc
lret
add
test
mov
out
shll
lods
ja
inc
adc
sub
test
lahf
data16
stos
xchg
test
dec
into
mov
call
bound
sub
in
sbb
add
mov
push
bound
jmp
out
jp
push
jns
dec
notb
fs
adc
jb
mov
jb
xor
adc
sbb
cmp
and
icebp
push
rclb
js
out
sbb
inc
pop
mov
pop
xchg
mov
test
incb
inc
ret
mov
pop
cmp
and
mov
cmp
mov
test
or
aas
sti
and
les
popa
les
inc
pop
xor
test
xchg
push
and
stos
iret
out
xchg
xchg
orb
ret
ud2
imul
mov
js,pn
cmpsl
cmp
popf
pop
xchg
leave
sbb
iret
call
inc
aam
pop
adc
adc
pop
mov
ret
mov
mov
xor
cli
test
in
inc
pop
lds
dec
pop
add
repz
mov
push
inc
inc
repz
in
jae
fwait
insl
lods
leave
inc
adc
xor
xor
mov
cli
dec
xchg
jge
add
aam
sub
mov
sbb
pop
dec
mov
int
and
js
ret
xor
mov
sub
fmull
fcoms
lods
idivl
cmp
jl
push
push
pop
add
mov
fidivrs
cli
jnp
ret
pop
mov
push
adc
hlt
sub
fidivrs
jp
testl
pop
ret
push
imul
mov
gs
mov
dec
mov
mov
and
scas
dec
insb
dec
in
imul
mov
and
lahf
push
xchg
and
or
inc
fcmovbe
pop
lahf
out
xor
cmpsl
xchg
fsubl
inc
and
mov
fistpll
inc
dec
jb
lahf
insb
dec
cltd
mov
jnp
mov
or
aas
dec
jae
sbb
in
inc
in
inc
popf
fnstenv
jo
ljmp
xchg
shrb
pop
mov
lahf
popa
ljmp
jns
sbbl
loopne
xchg
movsl
scas
lahf
daa
push
xchg
jmp
ljmp
lcall
sbb
mov
fcoml
or
cmp
ljmp
dec
pop
scas
popa
es
adc
jl
adc
hlt
outsl
jne
cmp
mov
shrb
push
or
push
cmp
adc
push
mov
sub
cld
ja
les
out
or
imul
rcrl
sub
cli
shrl
aas
inc
jbe
xor
fbstp
add
decb
ja
inc
icebp
push
daa
xor
loopne
hlt
pop
xor
in
add
cmc
sbb
cmp
mov
inc
fwait
push
aam
je
enter
cs
pop
das
gs
add
adc
xlat
push
inc
iret
arpl
xchg
add
xchg
fisubl
mov
inc
sbb
sub
outsl
pop
pop
mov
fnstenv
xchg
jmp
orl
sbb
mov
add
jo
test
adc
xor
js
pushf
cmp
pop
lods
xor
lock
fstpl
adc
or
fs
sbb
fwait
aad
mov
xchg
inc
jecxz
mov
xor
insb
sub
xchg
repz
in
mov
xor
scas
lock
dec
and
test
stc
cmp
jae
xchg
adc
ss
popa
shl
mul
push
cmp
add
outsb
pop
pop
xchg
cmpb
pop
fs
cmp
les
loop
cmp
sub
mov
mov
pop
inc
nop
or
out
xchg
je
and
into
push
scas
mov
inc
divl
pop
mov
add
jg
repnz
call
aam
popa
lahf
xchg
out
jge
ficomps
pop
out
cld
popf
cmp
jae
jge
psubd
sbb
enter
fwait
lods
les
sub
and
std
les
jbe
sub
mov
jge
adc
or
sbb
push
cs
movsl
pop
outsl
leave
outsb
in
pop
ret
mov
xchg
adc
sub
into
lock
stos
enter
enter
call
push
data16
push
pop
dec
das
sub
cmp
jge
and
mov
pop
cmp
decb
ret
hlt
jne
pushf
jne
or
push
leave
fidivl
mov
push
mov
mov
jnp
out
adc
dec
int
inc
fnsave
cmpsb
xchg
popf
cmp
cmp
ret
arpl
cld
movsl
ss
mov
xor
stos
lahf
mov
mov
add
dec
sub
dec
pushf
push
jb
xor
in
mov
dec
es
inc
sub
xor
push
mov
ret
push
loopne
das
mov
sub
cltd
stc
fidivs
sub
jbe
mov
mov
jae
inc
popa
iret
add
sti
pop
scas
mov
sub
lret
inc
dec
and
leave
sub
mov
sub
xchg
pop
fwait
xor
imul
push
loopne
pop
gs
data16
jl
insb
xor
xchg
int
jb
lea
fdivrs
js
repnz
jb
sub
mov
clc
test
stos
shll
iret
test
mov
adc
movsb
or
inc
mov
mov
pop
hlt
stc
aas
ljmp
inc
push
or
popa
mov
add
lea
adc
jp
jmp
push
adc
xor
lret
mov
xlat
outsl
sub
fldl
rclb
xchg
scas
lods
fstp
movsb
loopne
inc
cli
sbb
mov
mov
mov
sub
jle
xor
lahf
push
sahf
es
loop
or
in
jg
add
dec
and
imul
xchg
pop
fstpl
movsb
pop
jns
xchg
push
cwtl
xchg
dec
add
aaa
fbstp
loopne
inc
adc
adc
adc
pop
cmp
jne
dec
xchg
or
out
jbe
sub
insl
or
aam
xor
mov
mov
imul
push
dec
ja
add
test
loopne
push
imul
ljmp
mov
and
inc
pushf
lock
mov
decb
sub
imul
je
push
inc
call
xchg
mov
adc
cmpsb
jge
inc
adc
jecxz
sbb
loope
aaa
out
sbb
test
add
in
lahf
outsl
cmp
in
pop
lret
dec
fnsave
imul
stos
outsl
jne
push
fdivl
mov
jg
add
jg
int
xchg
xor
pop
add
lcall
aaa
mov
cmc
sahf
subl
gs
dec
pop
dec
test
stos
cld
push
pusha
mov
mov
pop
iret
dec
add
mov
push
imul
pop
jge
mov
xchg
sbb
filds
sub
jg
in
outsl
inc
pop
fimuls
push
sarl
xor
rclb
xor
les
cli
adc
mov
or
scas
or
push
pop
jmp
push
pushf
out
popa
stos
jle
aad
outsl
outsb
or
rorl
outsl
mov
cmp
stc
mov
mov
aam
mov
cmp
push
dec
sub
into
cs
jmp
dec
out
rcll
aam
adc
sahf
mov
test
outsl
xchg
pop
push
mov
push
mov
push
cmp
adc
incb
scas
dec
lcall
cmpsb
jge
je
outsl
scas
ret
nop
pop
jne
push
jo
push
xorl
nop
scas
in
insb
jmp
pop
sub
fs
pop
fistpll
xchg
fcoml
dec
clc
push
jmp
nop
xor
cmc
in
out
repz
cmp
cli
dec
mov
push
xchg
jg
lcall
xchg
mov
add
inc
div
pop
jae
scas
cmp
xchg
cmova
xchg
push
insb
pushf
sub
jns
int
jno
adc
mov
movl
jae
sub
hlt
fucomp
cld
jns
xor
dec
sbb
mov
shrl
xor
lods
popf
add
add
add
sbb
mov
hlt
addr16
mov
pushf
outsl
jp
imul
add
lods
push
cmc
js
fiaddl
fs
rcll
cmp
rcll
subb
cmpsl
push
jmp
pusha
popf
insb
sub
shl
xchg
aaa
cltd
and
repz
adc
mov
pop
mov
sub
shlb
stc
sbb
lods
dec
push
cmp
cmpl
insl
pusha
xchg
pop
xor
push
add
cld
xchg
push
cmp
mov
aas
shlb
and
sbb
or
xor
repnz
dec
dec
testb
xor
pop
jns
push
mov
jno,pt
push
xlat
adc
jno
adc
push
xor
mov
and
and
ja
loop
jb
sbb
rorb
lret
scas
sub
push
or
push
or
fsubrs
mov
inc
sub
jno
in
xor
xor
jns
or
clc
fdiv
das
xchg
cld
in
push
jmp
mov
and
mov
mov
stos
mov
cmpsl
or
mov
stos
mov
fwait
jne
repz
mov
aad
aad
aaa
inc
in
repnz
mov
addl
aaa
std
mov
sub
ljmp
inc
imul
mov
sbb
push
jne
imul
push
loope
jbe
data16
js
xor
inc
jp
xor
and
jo
fiaddl
mov
adc
es
jns
cmpsl
aam
and
xor
repnz
jo
mov
push
mov
sub
dec
add
mov
mov
or
outsb
ja
ret
adc
aas
adc
je
mov
xchg
mov
mov
sbb
cmp
out
int3
or
sub
push
sbb
insb
jb
sub
subb
mov
lods
jns
xchg
jne
pop
push
xor
lds
aam
lock
or
in
fdivl
add
lds
aad
dec
cmp
add
loop
dec
pop
mov
scas
dec
inc
rorl
mov
push
mov
in
cmc
mov
mov
push
and
sbbl
cmp
sahf
push
dec
mov
jge
ds
fmull
and
add
cmp
pop
iret
xchg
cs
jne
add
lds
adcb
test
inc
push
icebp
js
into
sub
pushf
jb
adc
mov
loope
pop
sub
mov
lds
ficoms
pop
in
mov
mov
xlat
out
cmp
negl
dec
lahf
in
cmp
inc
out
add
repz
inc
xor
movsl
int3
xchg
out
and
repnz
sub
pop
bswap
pop
cltd
cmp
es
jecxz
dec
sub
mov
sub
fcomps
push
popa
dec
sbbl
adc
out
imul
pop
cmp
push
sbb
jge
mov
inc
push
ret
dec
inc
addr16
sbb
popa
fistpll
jge
add
mov
cmc
imul
notl
sub
leave
xor
jb
pop
push
out
shl
dec
test
xchg
cmpsb
sti
jae
xchg
outsb
jl
mov
sbbl
xor
imul
sub
insb
cmp
push
test
andl
cwtl
jae
test
mov
bound
and
push
jno
ror
lcall
push
out
test
arpl
mov
push
fisttpl
pop
and
jb
mov
jnp
rcr
sti
popa
scas
icebp
and
lods
jnp
inc
pop
push
xchg
sbb
repnz
cmp
sbb
jnp
movsl
dec
jg
iret
xchg
or
lods
scas
mov
loope
push
mov
call
pop
or
ljmp
outsl
dec
push
ror
ret
outsb
in
test
jmp
mov
xchg
in
scas
imul
addl
out
idiv
in
movsb
pop
fdivs
lahf
sub
cltd
js
cmp
popf
cmpsl
adc
jge
lret
cltd
pop
int3
iret
jnp
repz
xor
ss
loope
test
sarl
push
and
jle
cli
daa
xor
daa
mov
push
mov
jne
mov
cmp
mov
jne
push
sbb
adc
es
repz
sbb
aaa
insb
jl
cmp
lret
push
repnz
test
pushf
add
ret
push
dec
loopne
jne
imul
popa
and
fwait
pop
pop
int
xor
inc
repz
pop
sub
js
xor
add
jl
add
or
out
push
dec
and
cld
push
inc
adc
sub
inc
divl
sub
out
xor
mov
pop
rorb
or
lret
loopne
cltd
ja
mov
xchg
jo
inc
insl
xchg
add
jecxz
add
std
in
mov
or
lret
lret
push
sar
stos
fdivrl
inc
inc
stos
and
mov
sub
rcll
lcall
scas
mov
mov
scas
add
fidivrs
mov
ss
imul
add
pop
pop
jl
xchg
ss
mov
cmp
lods
cltd
shr
call
mov
add
les
bound
das
movsl
loop
adc
jbe
and
popf
fidivl
rcll
jbe
lret
or
xchg
mov
cmp
cmpsb
push
scas
dec
inc
loopne
repnz
xchg
sub
insb
scas
testl
jb
jo
stos
fcomip
xchg
mov
push
cmp
inc
push
mov
mov
icebp
sbb
cs
push
push
push
ljmp
movsl
jmp
sub
sub
lods
or
sub
inc
ljmp
push
cmpsb
sub
cltd
fdivrp
or
test
dec
icebp
mov
cmp
inc
das
sbb
mov
fwait
dec
jl
mov
adc
dec
sti
flds
xchg
push
jbe
aaa
push
mov
mov
push
add
dec
cmp
jmp
out
je
cld
call
fwait
jge
fstpl
push
shr
scas
xchg
sub
gs
popfw
loope
aad
mov
cmpsl
lret
iret
jbe
jno
ss
add
repz
pop
cltd
sub
popf
sarb
mov
imul
lods
and
repnz
repz
xor
adc
mov
add
in
es
push
mov
xchg
pop
jne
scas
jle
fcmovu
fnstsw
and
repnz
pop
jbe
in
ja
xchg
mov
int3
inc
pushf
rclb
jecxz
sbb
shll
inc
xchg
dec
cmpsl
push
stc
xor
mov
cmpsb
mov
scas
in
jge
div
in
aad
jmp
mov
loope
xorb
sbb
pop
cmp
aas
jge
push
push
roll
dec
div
mov
aad
and
lret
cmpl
call
cmc
shl
or
xchg
sti
mov
lcall
into
mov
imul
frstor
mov
mov
cwtl
outsb
repnz
es
in
dec
fimuls
das
push
sahf
insl
je
bound
aaa
xchg
fists
mov
stos
push
sub
mov
push
pop
inc
mov
mov
pushf
jecxz
popf
mov
test
gs
dec
or
jo
ljmp
fs
add
shlb
adc
out
imul
in
cmpsb
xchg
adc
dec
cmp
xor
mov
lret
sbb
xchg
fsubr
jae
mov
cmpsl
pusha
push
and
negb
inc
ja
les
hlt
repnz
inc
pop
out
inc
cs
lcall
push
inc
push
and
popf
or
test
pop
jb
addr16
dec
cmc
cmp
aaa
pop
and
push
xor
cli
adc
ret
fisubrs
gs
repz
aam
jno
movsl
jo
pop
xor
aaa
or
pop
enter
fistpll
inc
gs
sbb
sub
mov
scas
cwtl
and
cltd
mov
ds
cmp
nop
mov
or
sub
daa
lret
test
add
adc
rcll
popa
fdivrs
ljmp
xlat
data16
in
test
push
fldl
hlt
inc
inc
sbb
xchg
mov
sarb
or
add
imul
adc
jno
push
mov
aad
scas
fcmovnu
mov
ret
out
js
cmpsb
lea
sub
rorl
scas
setbe
filds
xchg
mov
adc
fldenv
jge
mov
hlt
add
adc
push
adc
xor
cmp
inc
mov
dec
cmpl
adc
orb
xlat
cmpsb
flds
aam
gs
ds
xor
lahf
stc
inc
dec
or
lds
fisubrs
mov
jbe
out
shrl
mov
outsb
pushf
and
data16
inc
stos
daa
ss
inc
nop
and
inc
loop
add
push
js
inc
pop
mov
mov
out
sti
int3
pop
ret
div
das
aaa
out
mov
inc
jecxz
leave
rorl
add
rol
outsb
fcmovne
loop
dec
std
dec
fwait
push
jp
and
stc
call
les
or
sti
sbb
lcall
or
fcomp
mov
dec
xchg
sarl
lods
or
test
jnp
or
push
dec
call
mov
and
ret
dec
xchg
insb
or
and
xor
dec
ficomps
mov
push
fs
sti
cmp
xor
aam
pop
test
push
mov
outsb
call
mov
lods
stos
cmpsb
mov
arpl
fldenv
lret
test
dec
jmp
cmpsl
inc
cli
ja
jno
add
int3
add
je,pt
data16
xor
pusha
mov
xchg
cmpsl
ds
adc
pop
jbe
test
and
mov
pop
out
push
cmp
push
pop
lcall
sub
push
cmpsl
inc
xlat
daa
inc
sbb
dec
xchg
jmp
daa
rclb
xor
inc
mov
xchg
mov
mov
mov
inc
stc
sbb
mov
push
dec
mov
int3
xor
inc
lods
dec
test
test
and
imul
enter
push
loope
std
les
cs
test
fcomip
push
and
adc
mov
add
push
in
adc
mov
cli
lds
mov
aad
ja
gs
pop
mov
cmc
mov
mov
fisttps
aas
jge
push
cmpsb
pusha
clc
scas
in
in
repz
ds
mov
or
mov
data16
pop
call
mov
outsl
xchg
push
mov
mov
inc
xchg
sub
ds
adc
mov
iret
loopne
js
sbbb
fiadds
push
sub
aaa
cmpsl
data16
xchg
jecxz
aaa
mov
test
push
sbb
fstpt
pop
sbb
rorb
in
and
inc
jp
sub
fnstcw
je
mov
mov
adc
or
mov
add
loope
sub
xchg
add
cli
xor
cmp
cmp
pop
popa
sbb
sbbl
mov
outsb
adc
dec
ret
and
mov
insl
ljmp
call
inc
fdivs
pop
push
stc
xlat
test
xchg
jbe
out
push
and
mov
xchg
jge
mov
mov
inc
pop
jp
aad
pop
orb
aad
push
xor
jae
mov
sub
test
stos
lret
xchg
in
sbb
xorl
sbb
lds
mov
ljmp
and
gs
test
mov
and
addl
shl
xor
sub
adc
dec
adc
test
out
and
lods
icebp
push
push
adc
loopne
mov
in
pusha
xchg
mov
stos
mov
adc
mov
sub
jmp
dec
les
mov
mov
add
jno
cld
xchg
enter
andl
mov
inc
xchg
or
adc
dec
xchg
xchg
sbb
repnz
and
repnz
and
nop
adc
shl
mov
scas
fwait
pop
enter
mov
rcrb
out
int3
sti
sahf
or
jne
ja
ret
test
push
or
in
jg
pop
ljmp
gs
xchg
inc
xor
jns
scas
or
xchg
daa
scas
jbe
pop
add
or
add
mov
aad
repnz
fildll
push
push
mov
mov
in
dec
shlb
cmp
mov
test
xor
rcl
mov
mov
dec
dec
xlat
adc
xorb
push
push
ficompl
dec
push
dec
ret
nop
outsb
push
jne
aad
sbb
mov
mov
mov
add
push
jno
stos
pop
xor
pop
mov
into
ljmp
jns
ljmp
mov
fdiv
push
dec
fstl
mov
test
inc
out
and
mov
lret
aas
divl
push
add
test
lret
sahf
arpl
pop
rolb
xlat
add
inc
sti
mov
add
sbb
or
push
add
xchg
ret
jae
jne
pop
insb
clc
aam
push
cmp
mov
clc
push
and
xchg
insl
dec
popf
pop
jl
push
sbb
push
adc
sub
push
adc
leave
call
std
mov
or
ret
lahf
in
xchg
mov
fdivs
fstpl
or
sub
cmc
addr16
jb
leave
popf
aam
or
shr
inc
xchg
push
push
cmp
jmp
movsb
dec
push
xchg
xchg
add
jne
lods
mov
xor
testl
jmp
or
leave
punpckhwd
jb
adc
and
add
cmpsb
mov
and
cmp
leave
and
mov
inc
sub
mov
mov
fmuls
cmp
pop
pusha
push
lret
scas
add
fidivrl
movsl
sbb
add
add
icebp
cmpsb
and
hlt
in
decl
jg
jle
ljmp
xchg
call
aam
xor
jge
inc
movsl
sub
aad
test
in
push
mov
cmp
int
pop
insl
sub
mov
pop
push
add
popf
das
xchg
adc
dec
mov
xchg
bound
cmpsl
lret
je
xchg
mov
adcb
xor
lret
in
add
xchg
call
xchg
in
fidivs
leave
scas
push
mov
stos
sub
daa
mov
in
lods
add
mov
push
jg
xor
add
xchg
insb
daa
call
gs
pop
aaa
sub
lcall
mov
rol
mov
pushf
xchg
sbb
sub
sub
daa
outsl
loop
cltd
pop
loopne
scas
loop
addr16
sahf
jp
les
fidivs
and
push
mov
add
jnp
notb
mov
sbb
fisttpll
rcrb
push
sbb
ja
movsb
into
lahf
jne
int
fisttps
sub
mov
pop
xchg
divb
mov
mov
xchg
adc
push
fcmovbe
mov
adc
aas
in
scas
out
lods
xor
cli
popf
or
in
jmp
jle
jb
scas
dec
jg
or
cmp
xlat
pop
push
cld
test
inc
sti
rolb
sub
dec
push
pop
add
repz
adc
mov
mov
clc
jae
sahf
imul
mov
push
and
lret
or
dec
cli
sub
and
popa
dec
andb
jp
in
or
test
test
mov
loopne
idivl
movsb
sub
stc
popa
adc
adc
sbb
sti
ljmp
mov
xchg
or
lahf
ljmp
push
std
pop
lret
inc
dec
movb
into
scas
sarb
sbb
xor
mov
sahf
jno
jo
int
sub
mov
insb
lahf
pushf
xchg
mov
cmp
or
ret
rcl
sar
pushl
dec
enter
xor
cmp
sbb
ficoml
inc
push
adc
mov
jne
pusha
subl
ror
sbb
or
dec
sub
and
sbb
stos
sahf
jp
inc
pop
dec
fsubs
fldenv
bound
sahf
addb
fsubrl
das
cmc
cmp
mov
jge
xor
dec
sbb
mov
rolb
subl
xchg
jg
mov
cmp
clc
push
fs
sbb
bound
lods
insb
cmp
pop
inc
in
sub
rol
or
cmp
aam
lea
sbb
push
add
push
add
icebp
das
test
jns
xchg
adc
clc
dec
xchg
repnz
sbb
leave
xor
fwait
inc
xor
xchg
sub
jo
enter
lahf
push
mov
leave
push
jg
or
jge
aaa
inc
mov
pop
repz
mov
out
jns
and
cmp
cmpsl
in
jb
push
xchg
cmpsb
imul
xor
loopne
or
xchg
lods
testb
sbb
in
and
repnz
mov
aaa
lea
mov
and
add
add
add
mov
popa
push
inc
mov
and
ret
das
iret
add
mov
fldl
xchg
jae
insb
aad
xchg
addl
lods
sbb
sub
add
lahf
mov
inc
inc
addb
inc
scas
inc
in
xchg
dec
xchg
cmpl
xor
cmp
add
mov
jp
xchg
push
mov
or
test
mov
xchg
push
cmp
loopne
pusha
push
mov
fisttpll
add
loopne
jle
inc
insb
imul
mov
test
ds
adc
imul
sbb
mov
push
imul
jns
inc
insl
lock
mov
adcl
jecxz
in
pop
jmp
jae
decl
xchg
sbb
hlt
pop
xchg
mov
aam
sub
dec
ficoms
bound
aas
pop
icebp
sahf
push
and
pop
clc
je
insl
xchg
mov
push
cwtl
pop
shlb
sub
insb
mov
xor
and
movl
ja
insb
lock
xchg
pop
subb
dec
das
xor
push
adc
ret
adc
adc
loopne
xchg
sahf
je
stos
sar
jo
xor
lret
mov
cs
cmp
push
clc
sub
xor
xlat
loopne
dec
cmovge
pop
sbb
push
pop
push
push
push
ljmp
pop
lret
jo
mov
cltd
xor
outsb
mov
cmc
stos
imul
in
xchg
push
push
divl
cmp
cltd
pushf
enter
lret
ds
adc
pop
cmpsl
xor
pcmpgtb
pop
mov
push
adc
stos
and
sub
mov
dec
call
or
pop
imul
cwtl
mov
push
push
inc
inc
icebp
into
notw
jnp
int
dec
cs
loop,pt
rolb
mul
jge
pop
adc
test
add
pop
xchg
jns
cwtl
sub
int3
in
mov
in
ds
mov
mov
mov
movl
xchg
test
xchg
xlat
cwtl
mov
jle
cmp
js
lret
xchg
fdiv
mov
dec
subl
jle
fwait
test
dec
fisttpll
inc
push
loope
and
pop
int3
mov
mov
push
or
dec
dec
xor
or
mov
jle
sbb
xchg
shl
stc
leave
dec
add
or
aam
push
into
mov
in
or
test
mov
test
lods
pop
fidivs
pusha
dec
pop
insb
aam
in
test
add
mov
xchg
inc
push
hlt
or
pop
scas
or
nop
enter
xchg
movsl
and
mov
sbb
mov
or
aaa
push
push
fidivrl
out
mov
jg
push
xchg
fs
jne
sub
rcll
mov
repnz
mov
pop
mov
sub
xchg
gs
mul
shll
adc
outsb
mov
shlb
cli
idivb
lahf
cmp
out
add
xchg
js
or
test
sbb
xor
loop
cmc
push
xchg
in
adc
jecxz
aaa
jmp
lock
adc
jge
pop
jne,pt
out
mov
js
hlt
in
xor
sti
cs
sub
popf
and
adc
test
jno
aaa
out
addr16
pop
shll
sbb
mov
xchg
out
mov
bound
lock
push
lret
out
decl
xchg
xlat
jnp
xacquire
fiaddl
cmc
and
jno
mov
clc
frstor
pushf
inc
mov
cld
shlb
out
stos
xchg
mov
cmp
fstpl
inc
leave
mov
or
cmp
inc
cmpl
jne
out
daa
or
lret
adc
fistpll
in
dec
jl
testb
xorb
nop
shl
test
lea
push
or
or
lock
lea
xor
mov
pushf
cli
sub
sub
mov
pop
arpl
sbb
sub
stos
inc
mov
mov
lods
out
cmpsl
jmp
jb
fimuls
cmc
cwtl
mov
pop
popf
xor
and
pop
or
pusha
jno
scas
mov
mov
lret
nop
je
ja
pop
and
add
subb
jno
lcall
xchg
xchg
pop
les
ss
sti
mov
lret
out
popf
add
scas
stos
cmpsl
mov
rcll
sbb
adc
gs
xor
xchg
setl
push
stos
fs
arpl
test
sahf
pop
push
aas
enter
mov
cmp
mov
lret
or
cltd
aas
and
push
insl
in
sbb
negb
xchg
dec
mov
ljmp
cmp
scas
out
xchg
popa
add
or
add
mov
out
or
out
clc
arpl
lcall
add
mov
repz
cld
mov
mov
fisubs
cmp
adc
cmpsl
adc
shlb
loop
push
push
push
inc
xor
iret
cmpsl
iret
test
ljmp
fdivs
inc
adc
jge
int
aaa
mov
dec
dec
mov
repz
shlb
mov
int
pop
int3
pop
xor
push
mov
cmp
shrb
fucomip
push
aad
popa
sbb
adc
repz
mov
test
out
cwtl
and
cmc
xor
loopne
decl
xchg
icebp
mov
inc
icebp
sub
mull
pop
das
lock
dec
adc
dec
movb
mov
mov
xchg
popa
push
subl
pop
push
dec
daa
mov
sub
iret
test
xor
or
int
fisubrs
or
push
aad
and
adc
push
movsl
adcb
push
mov
cltd
outsl
sti
cld
xchg
add
push
std
test
and
testl
ljmp
pushf
lods
pop
or
adc
mov
inc
sub
fcoms
js
mov
push
inc
adc
ds
jge
or
adc
outsl
es
xor
push
add
pop
lea
clc
sbb
ss
push
out
xchg
mov
stos
xchg
icebp
add
jae
aaa
mov
out
or
insl
push
and
lcall
mov
outsl
addr16
outsl
mov
push
sub
mov
int3
lds
out
mov
pop
and
fdivrl
aaa
xchg
loopne
shrl
jno
clc
fwait
js
mov
xor
testb
push
xchg
repz
sar
xor
iret
add
fisttps
push
push
sub
pcmpeqb
mov
popa
in
mov
mov
cmc
adc
arpl
cmp
pop
daa
pop
sbb
adc
mov
or
jnp
mov
inc
shl
cmpsl
xchg
adc
add
inc
aas
jecxz
jmp
cmp
inc
iret
cmp
mov
sbb
sbb
sbb
rclb
mov
leave
xor
mov
test
adc
repz
int
enter
das
jno
inc
pop
ds
lods
cmp
mov
push
or
cmpsl
jecxz
ja
dec
sub
dec
sbb
and
in
mov
lret
icebp
fs
jno
push
xor
push
xchg
add
repnz
into
adc
ret
mov
jae
aaa
lods
rorl
mov
sbb
or
xchg
pop
push
js
push
mov
mov
pusha
imul
xor
xor
sbb
xchg
scas
test
lods
loop
ja
pop
mov
loope
lcall
push
pop
sarl
sub
sub
cwtl
div
xchg
xchg
cmp
insl
and
jmp
xchg
aam
sbb
push
lods
test
add
add
add
push
fists
xor
hlt
fyl2x
or
dec
push
jmp
testb
or
xlat
sbb
push
jno
and
add
push
mov
mov
int3
push
cmp
and
iret
lcall
data16
in
inc
into
loope
inc
sub
and
fucom
cmp
xorl
cmpsl
sub
cmp
or
or
xor
shlb
in
orl
arpl
xchg
cmpsl
fdivr
sub
xchg
jmp
mov
jnp
dec
mov
shl
add
stc
or
or
add
pop
adc
pop
insl
mov
sub
cmp
mov
std
xchg
xor
mov
mov
mov
inc
xchg
lahf
pop
ljmp
dec
inc
filds
stos
jo
shll
lock
cwtl
out
loope
push
pop
or
add
xchg
orb
cmp
mov
jnp
and
pop
test
mov
xlat
dec
shl
shll
mov
into
push
ret
data16
add
js
push
rol
repz
dec
scas
aaa
sbb
mov
popf
dec
cmpsl
pop
xor
leave
pushf
out
pop
mov
adc
dec
outsb
cmp
push
repz
xchg
ss
insl
pop
xor
stos
sahf
fnstsw
inc
repz
adc
xchg
jae
lods
jmp
sbb
nop
mov
stc
inc
adc
add
cmp
cmpsb
jo
adc
mov
lock
outsb
dec
sahf
push
cmc
ja
stos
cmc
stc
inc
ljmp
push
das
sub
mov
hlt
dec
cwtl
gs
inc
xchg
pop
jmp
div
lock
fidivs
les
mov
mov
sbb
pop
fidivl
fnstcw
hlt
sub
jns
pop
xor
fwait
mov
sti
mov
fcoml
in
dec
sbb
mov
mov
dec
sub
outsl
mov
ja
sub
lahf
jns
mov
xor
jge
adc
sbb
lds
push
enter
subl
push
shrb
testl
fists
fsubrs
dec
in
cmc
ret
sub
sti
mov
xchg
rcrl
je
push
test
fistpll
imul
xor
iret
repnz
imul
mov
pop
pop
cmpsb
jge
outsl
mov
test
sti
shrl
addl
pop
push
arpl
inc
mov
icebp
rolb
iret
pop
ret
push
neg
mov
add
repz
lcall
adc
adc
mov
std
add
xchg
and
iret
add
mov
xlat
mov
lahf
or
mov
cmp
push
add
call
cmp
lods
fiadds
lds
popa
ds
lock
loope
adc
movsl
je
cmpsl
xor
sub
ret
outsb
fadds
mov
bound
cwtl
push
xor
xchg
mov
les
je
mov
dec
shrl
mull
fldcw
or
inc
in
lods
pcmpgtd
jno
or
push
fcompl
lds
mov
add
loopne
fcomi
and
sbb
add
ficompl
add
xor
jns
fildll
xchg
fnstcw
mov
mov
add
add
cmp
sar
out
cmp
daa
inc
sbb
push
cwtl
in
xchg
xor
shl
dec
xchg
mov
xchg
call
in
fwait
push
fwait
pop
int3
fcomip
inc
cmp
or
xchg
das
repnz
xor
aaa
sub
call
push
push
xor
xor
outsl
fdivrl
pop
push
movsl
je
inc
out
aad
pop
xor
ret
clc
cs
leave
sbb
push
xorl
inc
or
jnp
xchg
mov
sub
pop
fsubrs
ret
xor
xlat
int3
sar
sbb
mov
push
outsb
cmp
lods
xchg
dec
sub
rorl
push
mov
clc
test
iret
aad
xor
and
or
xorl
mov
cmpb
xchg
sarb
mov
dec
cli
mov
jg
mov
push
adc
into
test
ret
pop
lea
call
lret
fcompl
mov
pushf
adc
sub
int3
pop
fdivs
or
mov
pop
adc
sub
xor
popf
dec
mov
out
xor
rol
fcoms
dec
cmc
jnp
or
addps
jne
call
rolb
aad
ja
cld
ret
test
ret
sbb
cmp
xchg
loopne
daa
fdivrs
inc
ja
xlat
and
push
pushf
insb
jl
jg
and
out
ss
gs
dec
stos
mov
mov
cmpsl
adc
inc
cs
icebp
nop
insl
push
cwtl
mov
adc
mov
inc
fists
int3
sarl
shlb
mov
adc
cmpsb
dec
jmp
ret
nop
pop
pop
std
sarl
xbegin
jp
dec
mov
jno
lea
push
push
inc
mov
icebp
push
add
jns
out
xor
sub
test
dec
sahf
or
les
cmp
int3
jb
scas
lock
mov
pop
push
mov
pop
inc
xchg
xor
test
sub
mov
pop
fs
mov
sbb
jecxz
into
push
in
push
pop
into
push
fnstenv
push
std
mov
sub
repz
js
pop
dec
dec
fisttpll
test
ljmp
jge
inc
stc
mov
add
mov
push
pop
pop
mov
xchg
test
sarl
inc
sub
jg
aam
and
mov
divb
das
lds
fstps
adc
dec
out
loope
sti
inc
outsl
jne
pop
stos
shrl
pop
inc
push
adc
add
cld
test
mov
push
mov
mov
xor
and
leave
pop
or
in
shl
ret
cmp
or
ljmp
cmc
xor
dec
fildl
sub
lret
dec
xchg
push
mov
push
mov
push
pop
sbb
add
adc
rcrb
mov
std
adc
push
push
or
mov
mov
daa
cmp
lods
push
mov
or
sub
adc
mov
in
push
mov
and
sbb
cwtl
in
mov
daa
lahf
insl
cmp
or
adc
sbb
lock
pop
mov
dec
or
pusha
jle
pop
jl
add
dec
subb
popa
dec
clc
test
fwait
sbbl
mov
cli
jae
fwait
js
mov
popf
push
and
jg
lret
push
pushf
ret
push
add
es
dec
loope
outsb
push
leave
adc
scas
scas
add
cmp
adc
subl
test
test
stos
or
pop
xchg
or
push
push
adc
push
xchg
aaa
push
or
mov
mov
in
call
and
push
fimuls
rcrb
ljmp
test
sarl
popf
mov
rorb
shrb
adc
sbbb
addr16
jecxz
popa
pusha
lods
hlt
pushf
movsl
jno
cmp
cmp
popa
push
scas
lcall
imul
jae
lea
mov
dec
xchg
test
xchg
imull
or
ret
add
lcall
fistps
jl
notb
add
sub
mov
fadds
mov
xchg
fcoms
dec
adc
aam
aas
push
and
adc
push
fwait
imul
cmc
out
dec
push
shrb
into
pusha
test
sub
or
push
cwtl
fsubrl
mov
lret
jge
mov
inc
test
enter
jmp
inc
aaa
xor
leave
lret
test
mov
jp
std
adc
push
andb
lret
repz
lret
aas
or
imul
iret
int3
ljmp
loop
leave
mov
scas
sub
xor
add
ljmp
cmc
or
std
jmp
out
inc
imul
aaa
mov
or
sarl
cli
sar
sbb
in
jbe
mov
pusha
dec
fs
or
cmpsl
scas
mov
pop
mov
out
das
xor
pop
adc
aam
clc
loopne
arpl
or
sub
pop
faddl
jge
jecxz
add
and
jge
jb
or
shrl
ret
mov
arpl
jle
cmp
push
jmp
daa
mov
xor
iret
sub
into
imul
fcmovnb
jne
mov
xlat
push
inc
mov
idivb
mov
ret
enter
cmp
cld
inc
mov
sub
sarl
test
push
push
xor
push
xor
dec
in
mov
jb
mov
push
cmpl
and
add
arpl
test
push
ret
mov
stos
or
jbe
int3
iret
mov
dec
jge
nop
les
lods
dec
jae
pop
push
lea
pop
test
nop
fiadds
nop
fbstp
adc
add
pop
fstpt
mov
cmp
and
adc
mov
popa
push
int
sbb
add
lea
mov
lret
mov
lods
dec
dec
mov
arpl
mov
and
mov
add
push
sbb
xchg
addr16
push
mov
dec
sbb
adc
cmp
call
int
cmp
sti
cltd
in
stos
clc
xchg
enter
jge
ds
jae
push
lods
mov
and
jbe
outsb
pop
in
mov
enter
ljmp
rep
hlt
popf
cmp
mov
mov
pop
ret
xchg
lcall
repnz
inc
mov
into
push
and
or
xchg
test
mov
push
or
jno
and
inc
cs
int3
sahf
fisttpl
mov
enter
push
sbb
in
mov
clc
sbb
push
sub
pop
push
cmc
mov
pop
adc
cmpsb
cli
in
adc
scas
cld
pop
jle
addr16
pop
mov
icebp
adc
incl
fdiv
and
dec
shl
es
loopne
inc
adc
mov
jbe
jno
pusha
out
push
xlat
stos
lods
lods
rcll
popf
mov
or
loope
lcall
aad
out
and
pop
inc
ja
repz
adc
jno
inc
bswap
fidivrs
inc
insb
popa
or
es
shrl
add
mov
fsubrl
mov
icebp
and
push
data16
mov
imul
and
jno
test
lods
mov
jo
ds
cltd
mov
xchg
dec
aad
cmp
lods
les
jne
notl
mov
aas
outsb
outsl
roll
arpl
push
jmp
xor
lahf
rcrl
sbb
leave
fistl
stos
lods
push
icebp
insb
push
cmp
cmp
adc
out
or
mov
add
jns
arpl
in
call
mov
cmp
sbb
sbb
pop
fmulp
enter
mov
pop
xchg
out
test
stc
sti
cwtl
push
clc
movsb
adc
enter
xlat
adc
insb
add
sar
or
cmpsl
push
jno
cmpb
or
push
insb
jmp
adc
hlt
outsl
out
lods
in
bound
sub
shll
cmp
mov
fdivp
push
rorb
in
imul
stos
pop
mov
mov
repz
xchg
cmp
in
jp
xchg
jecxz
xor
das
call
leave
ds
adc
mov
insl
xor
mov
fstpt
xor
pop
cmpsl
push
clc
push
mov
je
out
mov
cmp
out
cmpl
mov
pop
mov
scas
cmc
stos
add
les
and
cmpsl
leave
mov
xchg
mov
mov
jl
addr16
sub
mov
shlb
sub
inc
pop
xlat
cmp
pop
sbb
mov
xchg
mov
into
push
xor
push
dec
dec
xor
hlt
scas
scas
cld
aam
and
aas
jb
jle
int
cmp
inc
mov
in
lret
mov
rorb
mov
ret
xchg
aam
fcoms
daa
mov
fcomps
pop
sbb
insl
cwtl
and
or
scas
cmpsb
mov
movsb
push
cmpsl
ljmp
xchg
push
xchg
jecxz
test
cmp
les
sti
je
daa
mov
mov
sub
xchg
aad
enter
mov
lcall
addr16
cld
popf
pop
and
dec
and
into
fists
loopne
add
aam
mov
pop
dec
movsl
mov
aad
and
cs
inc
mov
sbb
pusha
jle
xlat
or
dec
dec
in
jp
icebp
lea
hlt
icebp
push
hlt
mov
movsb
jno
addr16
xchg
push
clc
mov
cli
int
xchg
movsl
lret
cmc
sbb
adc
outsb
out
ret
adc
adc
sub
adc
rclb
dec
xchg
jmp
sub
fstps
das
push
out
mov
hlt
aas
popf
lods
or
popa
dec
sub
add
adc
lret
data16
dec
ficoml
inc
lret
int
loope,pt
lods
xchg
xchg
insl
inc
mov
test
mov
dec
scas
push
dec
pop
or
adc
call
or
adc
rorl
adc
push
push
pop
in
adc
jecxz
ds
popf
outsb
data16
adc
push
fdivrp
call
jnp
int
push
adc
cmp
fwait
mov
addl
icebp
sbb
lret
shlb
or
icebp
xor
xor
jle
arpl
jecxz
add
xchg
add
adc
nop
loop
xchg
pop
popa
int
fnstenv
jle
jle
daa
mov
pop
shrl
out
sub
pop
jne
dec
lods
sub
xor
dec
repnz
enter
mov
adc
add
stos
cmp
and
addr16
outsl
inc
inc
lea
xor
je
or
push
and
test
adc
mov
jno
fsubl
sbb
lods
lcall
and
in
sub
pop
xor
pushf
or
mov
and
inc
ljmp
mov
mov
cmp
xchg
in
push
lea
sbb
pop
das
and
sti
adc
push
inc
add
inc
pop
in
cmp
pop
dec
mov
subl
adc
sub
into
sarl
xor
rcll
sarb
std
jbe
push
hlt
jae
lret
xor
and
imul
jb
push
adc
aam
xchg
movsl
pop
cmp
jg
stos
xchg
nop
xchg
int
mov
sub
add
js
popa
arpl
dec
jg
jle
ss
mov
jg
mov
jns
and
cli
xor
pop
jb
push
fldenv
test
inc
hlt
les
mov
jb
cwtl
or
dec
inc
fdivrs
out
cmp
cwtl
mov
dec
pop
loopne
pop
sub
fst
iret
pushf
push
enter
call
popa
popa
jns
push
jl
cmpb
ret
pusha
mov
and
mov
stos
sbb
pushf
cmp
js
stc
xchg
fs
xor
int3
jmp
mov
sub
and
mov
dec
cmpsl
sub
sub
incb
movsl
push
jp
add
xchg
ds
push
loopne
lcall
out
pushw
sti
mov
and
incl
pop
adc
stos
xor
inc
leave
test
pushf
pop
ljmp
push
xor
push
dec
outsb
movsl
hlt
mov
push
cli
loopne
adc
shll
sbb
adc
mov
add
add
rcll
mov
in
jbe
into
fnstenv
adc
fcmove
xlat
test
mov
lahf
pop
movsb
pop
in
mov
leave
dec
shrl
xchg
add
fdivrs
jb
jmp
inc
int
push
popa
fsts
jmp
xor
stos
xor
xchg
popf
mov
subb
cli
push
sti
pop
cmp
adc
scas
fwait
data16
mov
xchg
shl
adc
cltd
cmp
push
sbb
adc
sbb
xchg
mov
stos
repnz
jg
xchg
bound
push
mov
sar
inc
loope
hlt
aaa
subl
es
insb
add
sahf
jl
cld
jle
adc
ret
add
mov
jge
fs
ret
roll
adc
xorb
repz
out
xchg
pop
push
jo
pop
incb
in
xor
loope
or
call
loop
cwtl
add
push
enter
iret
scas
mov
jno
or
push
mov
inc
xlat
jb
sub
insb
cli
hlt
pushf
lcall
lds
shlb
sub
cli
sub
cmpsl
test
sub
and
jo
and
ret
sbb
daa
sub
fisubs
cmp
jno
sarb
push
shl
jge
les
into
dec
cmpl
scas
fwait
rorl
daa
push
jecxz
and
sub
sub
cmp
mov
jns
iret
pop
cmp
mov
fistps
adc
dec
mov
push
pop
xor
xor
stos
rorl
lods
sub
fisttpl
outsb
xor
mov
jge
repnz
lock
hlt
lcall
icebp
mov
adc
adc
into
insb
aaa
dec
pushf
adc
cmpsl
arpl
sbb
sbb
jge
xlat
inc
mov
clc
sbb
add
pop
out
cltd
adc
insb
test
inc
daa
arpl
cmpsb
loop
mov
xor
test
adc
out
jl
xor
mov
idivl
leave
call
sar
gs
jbe
shll
xchg
push
adc
mov
je
sbb
insl
xchg
sbb
scas
arpl
xchg
mov
out
adcl
push
shrl
js
inc
lret
orb
jg
leave
cmp
add
or
dec
xchg
mov
mov
inc
cmp
adc
cmp
cld
lret
mov
pop
xorb
rcr
movsl
ss
add
hlt
sub
xor
pop
dec
cmp
pop
shlb
dec
push
dec
cmpsb
lret
adc
mov
sub
pop
xor
or
roll
sarl
xchg
adc
loopne
imul
lods
fidivs
stos
dec
movsl
pusha
pop
and
push
je
mov
test
push
lret
int
mov
lock
les
daa
sub
movsl
mov
enter
dec
push
fistl
sarb
mulb
mov
lahf
sbb
stos
xchg
lahf
or
les
sub
jp
xor
cmpsb
mov
or
xchg
pop
xor
mov
add
icebp
es
mov
cld
xchg
in
cld
add
leave
pop
lea
loopne
sbb
pop
inc
std
push
sbb
mov
or
pop
fcoml
bound
movsb
pop
jmp
jle
jno
test
cmp
xor
or
call
sbbb
or
push
cmp
xor
cmc
jmp
add
popa
jno
and
jl
or
or
outsb
dec
mov
aam
sbb
sbb
fidivrl
pop
sbb
xchg
adc
inc
out
inc
clc
cld
mov
stc
adc
out
cmpsb
ja
clc
mov
push
cmp
ret
cmc
mov
test
cmp
loop
loope
das
xor
in
jb
cmp
cmp
enter
inc
testl
subl
lcall
mov
es
add
jae
cli
cli
adc
shl
loopne
adc
je
or
mov
dec
jne
sub
mov
sbb
xor
mov
pop
mov
xor
fistpll
into
mov
xchg
popf
lds
fsubr
cmpsl
stc
arpl
arpl
or
sbb
sbb
push
jmp
mov
sub
jb
inc
or
cmpsl
add
aas
call
jmp
jo
cmpsb
xchg
xchg
out
cwtl
iret
leave
sub
inc
jnp
lcall
inc
and
sbb
mov
cmp
xlat
in
not
aaa
sti
fdivl
jl
sub
xor
movsl
and
xchg
sub
pop
add
test
jmp
cmp
push
sbb
aaa
dec
pop
inc
ja
lods
icebp
jg
js
pop
adc
iret
test
push
and
scas
pop
fists
bswap
cmp
xchg
bnd
mov
sub
jb
repz
js
into
fnstsw
cs
mov
lods
cmp
mov
pop
jne
xor
lea
inc
mov
hlt
jg
repz
add
fisubrs
outsl
repnz
enter
pop
mov
fiadds
cmp
aad
add
fwait
cmp
js
sub
in
add
and
push
sub
cmp
ret
nop
int3
jo
adc
dec
clc
push
xor
popf
mov
mov
pop
or
jl
adc
xchg
mov
mov
lods
nop
repz
daa
andb
fs
or
daa
cmc
cld
faddp
repnz
in
inc
push
ret
dec
mov
loop
ror
fdivrs
xorb
adc
cs
mov
cmp
mov
ret
adc
mov
in
int3
outsl
mov
clc
push
jo
cmp
cmp
setno
nop
pop
mov
sbb
ljmp
jno
out
lock
mov
stos
out
bound
in
stos
cmpsb
push
jo
or
adc
mov
orb
xor
mov
push
push
rep
push
loop
mov
in
sti
pop
sbb
jmp
fstps
push
cmp
pop
bound
sarl
pop
rol
mov
pusha
jbe
mull
popf
adc
outsb
jle
or
out
repnz
cmp
je
imul
dec
sub
pop
std
xor
pusha
mov
adc
mov
xchg
sub
int
mov
or
pop
je
xchg
xor
and
lcall
mov
push
mov
pop
lret
jg
pop
hlt
push
mov
dec
iret
popa
xchg
in
scas
push
je
push
pmulhuw
xor
mov
mov
lods
sbb
je
data16
testl
outsb
pop
push
subb
shll
mov
dec
movsl
popf
xor
shr
nop
add
into
lods
idivb
xor
push
int3
adc
xchg
inc
ds
leave
adc
adc
jl
push
in
mov
int3
ret
clc
mov
add
ljmp
pop
incl
stc
jae
jne
jle
fadds
xchg
stos
imul
scas
fldcw
loop
sub
push
cmp
inc
inc
push
outsb
xorl
mov
aam
jbe
xor
jne
outsb
or
jne
pop
adc
push
mov
mov
popa
dec
xor
repz
push
ljmp
int
bnd
jne
fsubrl
sub
pop
fucom
pop
xor
push
cmpsb
mov
sbb
or
test
stos
jl
andb
pop
pop
sub
cld
inc
jg
leave
jp
adc
adc
into
jp
mov
mov
je
sbb
pusha
sarl
sub
jecxz
pop
inc
shl
push
jge
pop
cld
xor
pusha
test
sub
dec
sbb
sbb
insl
mov
mov
stos
insl
and
xchg
jl
and
push
jge
mov
mov
cltd
testl
cmp
mov
out
lods
xor
inc
inc
push
movsl
std
jae
mov
cmp
les
mov
imul
xor
int3
in
sbb
inc
and
das
fcom
xchg
jbe
orb
es
pop
fmul
sbb
and
push
mov
pop
pop
sbb
rolb
adc
adc
push
mov
jge
push
mov
negb
sub
push
lcall
inc
jle
sub
pop
shrl
cmp
xor
popf
adc
mov
in
fldt
mov
pushf
jo
out
mov
scas
xor
xchg
sarb
xchg
sbb
cmpsl
insb
inc
sub
movsb
lret
dec
sbb
aad
mov
or
arpl
cmp
xor
arpl
insl
inc
ljmp
decl
xchg
ss
sbb
mov
cmp
aaa
inc
adc
mov
cltd
mov
dec
push
inc
xchg
std
dec
sbb
ja
aad
adc
or
fcoml
fiadds
cmp
push
insb
jp
push
addr16
fwait
xor
xor
stc
aam
xchg
insl
push
mov
xlat
aaa
push
stos
lret
punpckhbw
add
mov
ret
sbb
fdivrl
xchg
cmp
in
sub
scas
mul
test
adc
sti
add
mov
int3
aad
sbb
rorl
dec
inc
filds
pop
adc
ret
movsb
jb
imul
sub
sub
push
xchg
xor
mov
sbb
rcrb
adc
mov
rcll
dec
jnp
loopne
test
std
mov
mov
mov
ds
andl
pop
cmp
pop
mov
pusha
lock
xchg
push
push
loope
rorl
lret
inc
dec
mov
cmp
and
aam
push
mov
adc
loop
jl
cmpsb
dec
cld
clc
and
mov
es
movsl
or
shlb
je
mov
inc
adc
or
cmpsl
sub
insl
xchg
imul
sbbb
jns
jbe
sbb
xchg
insl
mov
arpl
sub
sub
inc
push
push
icebp
xchg
test
orb
rcll
push
mov
shrl
dec
scas
jp
lds
cmpsl
in
std
mov
sbb
fs
dec
ja
dec
jb
in
xchg
jno
fadd
dec
sub
push
in
jae
enter
push
cmp
lods
ret
cmc
push
mov
lret
sti
xchg
cmp
xchg
repz
cmpsb
push
int3
push
push
jbe
xor
or
mov
xor
mov
inc
cmp
mull
push
xchg
aaa
repnz
dec
adc
rorb
inc
mov
stc
push
sbb
jle
aam
inc
sbb
jle
cmc
jecxz
mov
add
sbb
and
in
bound
jae
in
pop
pop
iret
cmp
sbb
aaa
jb
call
ds
lret
add
sti
pop
xchg
jo
xor
pop
jle
addr16
mov
fisubs
stos
sahf
xchg
dec
dec
dec
outsb
xor
pop
in
movsb
lcall
xchg
pop
pop
pop
sarb
push
inc
test
cli
jmp
repz
mov
sbb
xchg
repnz
ret
pop
in
das
xor
pop
mov
mov
popf
fcompl
pop
hlt
dec
adc
adc
scas
fistpll
lret
inc
lea
out
jmp
test
sub
or
and
mov
sbb
jbe
mov
and
cli
xorl
add
mov
mov
mov
mov
loopne
scas
inc
shll
loop
pop
mov
repz
add
push
push
cmc
popa
loop
sbb
cmp
inc
adcl
mov
sti
enter
fsub
dec
fstl
pop
fwait
jle
out
hlt
jmp
enter
mov
dec
out
sbb
pop
test
fdivrl
jge
ror
lods
push
mov
jne
imulb
scas
sbb
hlt
enter
out
out
cmp
and
jle
adc
jo
mov
repz
sbb
jmp
or
mov
add
xchg
mov
jecxz
mov
xchg
ficoms
cmpsb
fldl
fucomip
dec
mov
lahf
sbb
push
inc
ret
call
into
push
pop
cmp
ja
add
inc
std
jb
mov
adc
sbb
pop
sbb
fistpl
sti
mov
add
inc
adc
dec
xor
or
push
push
sub
and
gs
les
int3
popf
push
mov
dec
aad
mov
push
insl
rcl
gs
adc
push
sub
pop
repnz
shrb
inc
cmpsl
fldt
sub
mov
inc
outsl
pushf
rcll
fldcw
jg
jg
loope
ret
jge
xchg
push
xchg
outsl
into
pop
xor
sbbb
xor
scas
mov
and
push
mov
fcmovu
jb
mov
push
lods
push
fsubrs
mov
push
add
add
mov
stos
sbb
outsl
pop
sti
mov
aam
jecxz
and
pusha
stc
mov
addb
mov
int
das
push
mov
jp
les
pop
shrb
cmc
mov
cmpsb
orb
pop
cmc
adc
pop
push
jnp
dec
sbb
outsl
and
and
in
xchg
jg
popa
mov
jae
popf
dec
add
fcoms
mov
fisttps
inc
jns
daa
dec
lcall
inc
out
cld
cld
rolb
jb
sbb
mov
or
dec
cltd
sbb
push
sub
repz
push
icebp
fdivrl
sbb
rolb
push
sbb
push
shl
inc
and
xchg
mov
or
pop
ljmp
cmp
xchg
mov
push
dec
xor
movsl
into
aas
inc
push
ljmp
repz
mov
aam
mov
and
xor
sub
sar
xlat
fiadds
jg
stos
ja
push
fdivrp
out
mov
scas
pop
outsb
stos
test
cli
mov
xchg
inc
cmpb
pop
adc
mov
push
xchg
fnstsw
cmpsb
lmsw
repz
push
sub
cwtl
loop
sti
mov
test
jg
xchg
test
sbb
sbb
xor
cmp
inc
xor
push
mov
lock
xor
and
xor
xor
lds
out
int
cwtl
insb
sub
ds
in
add
in
adc
and
in
cmc
jnp
movsb
in
add
loope
mov
push
imul
sub
mov
pop
out
cmp
std
outsl
xchg
add
insb
mov
push
test
lret
lret
xlat
cmp
outsb
sbb
adc
xchg
fiaddl
dec
mov
mov
jecxz
int3
mov
out
jnp
sub
in
mov
and
jo
mov
pushf
dec
aas
jge
fs
fimuls
jo
or
mov
arpl
das
mov
lahf
rolb
shll
fistpll
jno
mov
testl
fdivrs
sbb
push
daa
aam
xor
push
sbb
and
loopne
xor
testl
and
xor
inc
push
jp
repnz
mov
jg
or
adc
mov
add
push
dec
stos
fisubs
rolb
xchg
scas
mov
xorl
je
iret
int
mov
pop
iret
out
inc
gs
imul
push
sub
and
mov
mov
fcomp
int3
test
ljmp
inc
inc
test
std
test
lods
sbb
inc
mov
xchg
xor
xchg
mov
sub
inc
ffree
inc
push
fildl
mov
mov
popl
cli
xchg
xchg
hlt
jae
pop
dec
mov
lret
dec
cltd
pop
xor
sub
sub
out
inc
lahf
sbb
mov
mov
out
jno
pmulhw
or
lock
add
xchg
sbb
enter
aad
push
push
movsl
aaa
add
and
push
mov
repz
shll
jl
mov
adc
push
cli
je
cwtl
push
fstl
pusha
enter
sbb
mov
dec
test
jne
adc
mov
jnp
and
mov
fisttpl
push
dec
mov
lret
inc
sahf
clc
fcomip
sub
stos
lret
clc
mov
outsb
cs
popf
cmp
xlat
je
clc
in
ret
sub
enter
addr16
rcr
pop
out
prefetch
sbb
xchg
aas
push
adc
xchg
add
add
in
pop
xchg
xchg
xchg
clc
and
rorl
je
add
adc
es
not
sbb
outsl
pop
insl
movsl
and
or
adc
std
push
push
sahf
lret
enter
mov
dec
popf
cmc
jae
fbstp
xor
scas
xor
int
adc
jo
std
sub
push
xchg
fscale
pop
outsb
fdivrs
cltd
lods
add
sbb
repz
hlt
fwait
dec
cmp
subb
adc
push
test
aam
subl
xchg
out
inc
mov
not
inc
jle
stc
inc
sub
loop
fstl
stos
repnz
jb
inc
and
fcompl
jnp
leave
test
and
enter
arpl
icebp
jg
add
jecxz
bswap
sti
sti
mov
inc
outsl
pop
fcomp
xchg
mov
sub
adc
jne
insl
mov
lods
idivl
loope
repnz
push
adc
push
pop
int
mov
mov
call
inc
test
std
repz
js
flds
into
pusha
cli
stos
jae
sbb
in
and
inc
loopne
sbb
mov
push
andl
pop
lcall
mov
mov
repz
xor
je
adc
push
daa
sub
jae
cld
pop
pop
test
push
inc
rcll
add
jle
add
and
imul
cmp
cmpsb
popa
pop
pop
add
pop
cmpsl
or
jns
mov
adcl
outsl
mov
lret
jp
test
dec
repnz
cld
xchg
pop
mov
add
repnz
cwtl
cmpsl
pop
ja
push
aam
loop
mov
xor
fistpll
jge
adc
or
js
lcall
sbb
and
sahf
scas
shl
dec
lods
sahf
add
gs
insb
pusha
int3
popa
shll
cmpb
mov
adc
sub
pop
pop
or
mov
add
insb
dec
pusha
cli
xor
rolb
loope
outsb
or
cmp
outsb
cltd
mov
mov
test
out
loop
leave
or
jp
aam
sbbl
add
pusha
mov
cmp
fldl
xchg
mov
es
xor
iret
paddw
dec
mov
jle
fidivl
mov
inc
and
push
mov
cmpsl
push
data16
mov
add
ffree
cs
call
xchg
or
jg
pop
nop
pop
cmc
pop
push
repnz
pop
lcall
cmp
pop
popw
mov
add
cltd
imul
push
mov
mov
push
les
inc
shr
xor
fldenv
sbb
pop
xchg
cmp
cltd
jle
daa
stos
dec
ror
add
test
dec
popa
lahf
in
lret
pop
push
xor
js
cmp
or
loope
insl
outsl
dec
sarl
in
mov
adc
aaa
pop
jo
cmpsb
xor
fidivl
fistps
pop
xchg
imul
mov
sub
cwtl
rorb
inc
mov
inc
scas
lcall
sub
adc
insl
pop
je
xchg
fdivrl
push
icebp
pop
and
insb
pop
icebp
xchg
testl
popa
idiv
mov
xchg
mov
outsl
and
icebp
popa
dec
cmovl
out
pop
lahf
sbb
shl
int
in
pop
not
fsubrs
fdivr
and
xchg
outsb
inc
fnstenv
outsl
xchg
ficoms
adc
cmp
mov
inc
imul
push
mov
jp
cmp
dec
fs
pop
movsb
sub
subb
out
mov
sub
sub
jnp
loope
dec
mov
pop
pop
and
into
jo
fdivs
cmc
mov
push
int3
jmp
sbb
fcoms
xchg
outsb
xor
shlb
push
cmc
sbb
mov
lds
js
dec
negb
add
mov
and
icebp
sub
into
out
aaa
arpl
mov
idivb
fidivrl
and
add
das
hlt
loop
les
add
cli
aam
imul
xor
mov
aam
lock
stc
orb
cmp
xchg
out
into
repnz
xor
sbb
push
push
std
adc
out
jb
push
repnz
std
mov
xchg
mov
out
jbe
xchg
pop
inc
shrb
in
push
pop
jbe
inc
cmp
push
and
xchg
popf
cmpsb
es
xor
mov
outsl
jle
mov
jle
xchg
js
dec
inc
cmp
cmc
xchg
mov
mov
inc
call
bound
fwait
inc
std
jno
aaa
aad
aaa
mov
xorl
pop
xchg
pop
cmpb
mov
add
xchg
xor
cld
sub
in
mov
inc
stc
lret
insl
xchg
lcall
gs
movsb
data16
ja
js
out
mov
cmp
push
pop
sub
int
les
and
les
leave
mov
push
cs
xchg
cmp
and
sub
in
idiv
sub
or
lahf
push
inc
into
lret
pushw
jmp
sbb
inc
pusha
mov
pop
lcall
push
pop
xor
bound
mov
out
push
stc
mov
subl
adc
mov
imul
adc
cs
leave
cs
jge
jns
pushf
mulb
aas
call
fadd
jge
xor
jo
movsl
or
pop
adc
mov
mov
mov
ret
inc
cmp
fnclex
xchg
pop
lcall
leave
inc
push
loopne
imul
pop
inc
popf
xchg
pushf
dec
jns
add
sti
aam
jge
xchg
inc
les
aad
fstpl
sahf
mov
jae
mov
mov
xlat
inc
xor
push
sbb
mov
out
je
fsubr
or
sbb
inc
sbb
mov
cmp
sub
and
popf
lret
and
inc
pushf
rorl
pop
sar
lds
lcall
xchg
in
cmpsl
divb
addr16
stc
pop
call
ljmp
popa
mov
mov
add
cmpb
inc
loopne
pusha
in
add
aaa
popa
sub
sar
sub
ja
fiadds
popf
aaa
clc
mov
sbb
pop
or
adc
and
scas
daa
and
xchg
and
sbb
js
cmc
or
inc
dec
xor
mov
rorb
loope
cwtl
enter
jg
cmp
fs
rcrl
mov
add
sbb
jne
adc
pop
mov
popf
clc
shl
sbb
ja
je
mov
scas
lea
popf
adc
xlat
push
dec
repnz
arpl
addr16
pop
mov
sbbb
jle
cltd
hlt
outsl
push
hlt
inc
fmull
push
je
sub
lahf
inc
mov
cmp
cmpsb
ret
popf
sarl
lods
xor
mov
jp
jmp
xor
mov
test
jbe
pusha
mov
dec
test
stos
in
xor
lea
in
fnsave
aam
testl
outsl
xchg
cli
imul
pop
mov
or
xchg
jno
out
xchg
push
mov
sbb
mov
ret
add
jle
popf
mov
mov
enter
cmpsl
push
pop
fwait
mov
cltd
adc
int3
jmp
mov
mov
dec
test
popf
stos
mov
sbb
pushf
xchg
jmp
mov
das
push
in
scas
in
sbb
andl
xchg
mov
ja
aas
and
fcmovne
mov
push
test
xor
adc
arpl
dec
push
mov
push
repnz
scas
jne
mov
mov
mov
sub
mov
cli
rolb
lods
dec
ja
cmpsl
das
sbb
push
inc
xchg
mov
sub
pop
outsl
out
jecxz
adc
jge
cmp
insb
xchg
push
sbb
ds
inc
mov
sahf
mov
iret
in
mov
aas
or
push
cmp
mov
ljmp
test
mov
inc
pop
push
std
add
repnz
arpl
aaa
sub
lods
xor
fldl
stos
pop
out
sahf
rcl
iret
pop
xlat
in
and
pop
dec
inc
mov
sbb
jne
xor
xor
xchg
js
test
loope
jle
fcompl
cli
and
mov
ficoms
sets
std
mov
js
leave
push
lds
inc
aam
pop
dec
lcall
xor
loop
jbe
loop
jmp
push
insl
in
mov
mov
insb
clc
hlt
lds
push
sub
inc
mov
divb
cli
pop
in
and
sahf
jbe
daa
adc
xchg
mov
fcmovnbe
cwtl
shlb
in
jl
or
shlb
sbb
incb
cmp
add
sbbb
lock
es
sysenter
xchg
andb
push
xchg
fadds
adc
pop
enter
into
imul
sub
add
int
sar
loope
push
lret
lock
bound
stos
insl
fsubrs
leave
sbb
idivb
rorb
mov
lock
test
sub
iret
mov
dec
or
es
xor
iret
mov
adc
bound
mov
bound
stos
mov
ret
xor
cmpsl
mov
adc
xchg
andb
aaa
rorl
movsb
sarl
cmp
pop
jg
ss
outsb
xor
data16
pushf
test
rorb
pop
sub
rorl
cld
xchg
dec
dec
pop
push
loope
and
mov
into
mov
inc
stos
xchg
inc
adc
sbb
fisubrl
pop
outsb
pop
and
bound
je
arpl
inc
jg
jg
adcb
push
adc
aas
lods
enter
in
in
dec
add
ficoml
inc
lods
fsubs
call
pusha
sbb
pop
lea
pop
sbb
and
cmc
mov
xchg
enter
popf
loope
push
inc
xor
inc
fsts
jno
mov
arpl
cmp
inc
rolb
cmp
mulb
call
stos
dec
in
xchg
dec
lret
xchg
fildl
ret
sar
loop
pop
sarb
aas
cmp
notb
shll
add
push
dec
jl
shl
insl
inc
push
sahf
ret
pop
lods
dec
inc
cmp
cmp
mov
inc
hlt
sub
mov
cs
push
add
imul
lret
bsr
pop
pop
inc
clc
pop
out
and
sub
cmp
adc
gs
xor
and
add
sarb
xchg
aam
loope
mov
xlat
aad
push
cltd
mov
jo
lahf
dec
ss
es
popf
xor
nop
adc
inc
push
xor
push
dec
cs
sub
add
jmp
fildll
xorb
mov
push
faddp
push
cmc
fldcw
pushf
in
gs
imul
pop
xor
and
add
push
push
adc
ret
insb
cmp
cli
push
loop
and
cwtl
ss
out
fwait
cld
adc
call
shlb
ss
into
sub
repnz
inc
rclb
or
dec
insl
cmpsl
and
push
add
sub
inc
popf
leave
lock
sub
cmp
jbe
int3
sub
jmp
push
ficoms
cmpsb
mov
sub
and
add
test
enter
lahf
int
pop
mov
sub
repnz
xor
test
xor
stos
inc
push
jns
addb
adc
clc
jecxz
sahf
xor
fsubrs
pushf
mov
sub
aas
xor
in
inc
cmc
adc
push
insb
sbb
pusha
int3
jbe
fldl
lea
ss
popa
cmp
arpl
enter
cmp
andb
lcall
mov
addr16
insb
fdivs
pop
xchg
fbld
adc
insl
loop
mov
lahf
or
out
pop
shlb
loop
adc
dec
push
mov
ljmp
je
aad
lcall
ss
push
in
lret
mov
lret
jle
adc
scas
add
test
mov
sub
xor
out
out
push
les
aaa
push
jmp
jno
fwait
jne
pop
out
dec
mov
inc
add
cmp
and
movsb
in
std
mov
inc
fdivrs
pop
outsl
push
out
ja
cwtl
sar
lea
inc
mov
lods
jae
call
jmp
outsl
dec
or
sbb
inc
jmp
cmp
in
or
and
adc
sub
inc
jg
cmp
imul
pop
and
cmp
js
rorb
gs
aas
scas
lods
push
addl
sbb
mov
inc
or
dec
push
cmp
push
xchg
mov
xchg
xchg
stos
test
push
out
push
pop
mov
out
adcl
lods
dec
or
out
outsb
inc
inc
popf
mov
imul
bnd
mov
jb
mov
sti
outsl
inc
push
add
add
das
dec
pop
lahf
and
jnp
add
pop
sbb
push
inc
lahf
es
out
lret
sub
mov
mov
mov
cmp
inc
ja
mov
dec
jne
inc
push
cmpsb
jge
je
mov
mov
add
movsl
lock
scas
inc
leave
repz
ds
add
mov
or
dec
mov
fisttps
or
mov
out
fisubrl
mov
sub
xchg
fs
pop
jns
test
or
out
int3
lret
sbb
gs
cmpsl
push
push
xorl
int
xor
lret
aad
inc
and
mov
test
jae
out
cmp
mov
shlb
imul
xchg
inc
scas
lds
out
out
repz
mov
stos
inc
int3
adc
and
fwait
cmpsl
dec
shrl
inc
dec
and
jp
out
js
mov
pop
out
imul
mov
xor
lock
mov
dec
sahf
ss
lods
and
push
jg
leave
and
sub
mov
or
sbb
rep
add
rorb
dec
ret
int
jae
xchg
popf
enter
push
dec
stc
mov
mov
inc
add
sbb
lea
cmp
test
sub
jle
fcoml
add
fsubr
add
cs
xchg
adc
sbb
lock
jno
mov
add
or
dec
jns
mov
add
cmp
add
imul
jbe
mov
push
cmp
js
je
jecxz
inc
loope
xchg
insl
jecxz
mov
jg
outsl
cmp
pop
dec
pop
rcrl
fs
push
in
insl
out
mov
dec
and
call
ja
adc
leave
add
fcomps
aam
test
pop
scas
adc
xchg
into
iret
pop
imul
std
sbb
push
inc
inc
or
or
sub
scas
pop
dec
nop
shll
inc
loopne
es
mov
cmp
adc
pop
mov
sub
repnz
sub
lret
test
push
xlat
daa
push
mov
inc
aas
mov
push
and
xor
cmpsb
int
xchg
xor
and
movsb
push
int
scas
data16
out
mov
clc
or
arpl
dec
mov
jbe
mov
xlat
jbe
mov
into
shrl
sub
push
xor
mov
sbb
aam
push
xchg
frstor
into
xor
jno
test
insl
jbe
aas
mov
mov
testb
out
push
cmpsl
sbb
test
add
prefetcht0
test
or
mov
stos
mov
shr
je
movsl
and
mov
jmp
arpl
and
repz
pop
enter
in
pushf
xchg
repnz
imul
outsb
iret
notl
xchg
and
mov
jne
cmp
add
jmp
xchg
sbb
dec
xlat
pusha
cld
dec
shlb
pushf
fcomp
mov
cld
add
in
inc
inc
mov
jp
xor
ss
data16
and
push
sti
and
lods
out
in
pusha
dec
adc
ds
sub
xchg
mov
mov
or
inc
cli
pop
jne
andl
pop
add
fmull
fldl
out
mov
sub
in
and
jbe
stos
jo
ret
ret
out
je
cmpsl
and
pushf
insl
inc
repz
pop
inc
add
mov
out
nop
mov
mov
mov
push
mov
add
add
mov
mov
into
ds
inc
in
int3
dec
mov
test
cli
pop
aas
mov
in
jae
add
jnp
mov
in
pushf
nop
pop
mov
xchg
js
push
ljmp
lret
test
push
ds
test
push
mov
mov
lcall
fisttpl
dec
negl
cmp
jle
lret
cltd
push
pushf
hlt
adcb
push
ret
mov
movsl
addr16
ret
mov
or
mov
add
in
jp
outsl
movsl
aaa
mov
test
daa
lret
movl
xorl
dec
and
insl
test
mov
mov
mov
imul
js
cld
scas
sub
ja
aaa
push
or
out
shlb
jecxz
roll
mov
push
pop
or
lds
mov
negl
es
push
mov
adc
addr16
mov
xchg
fldl
xor
ror
decb
add
adc
mov
insl
and
ds
or
pop
inc
js
nop
xchg
and
dec
lret
or
inc
add
inc
ljmp
pop
fistpll
inc
shrb
sti
sahf
mov
scas
repz
popa
pop
mov
call
xchg
mov
stc
mov
cmc
leave
xor
js
jae
lcall
stc
sti
jle
jmp
lret
jecxz
add
jbe
jmp
cli
imull
sub
aad
add
mov
insb
icebp
mov
mov
fistpl
jmp
xor
les
lahf
xor
out
ret
testl
xor
andl
imul
push
push
jne
or
mov
fucom
shll
imul
in
jl
mov
lods
cmp
out
cld
adc
lcall
dec
push
inc
scas
sti
push
xorl
sarb
pop
jb
adc
adc
mov
sarl
or
emms
pop
cmp
jnp
cmp
xchg
shl
or
jnp
or
or
cltd
pop
test
jle
cld
push
inc
sbb
mov
xchg
dec
icebp
and
add
repnz
fisubs
outsl
mov
xor
add
lea
in
push
xchg
dec
xchg
sbb
mov
inc
scas
jnp
push
out
pop
xchg
ret
lcall
mov
sbbb
shll
and
lea
xchg
insl
mov
jne
inc
es
mov
lcall
mov
rorb
mov
sbb
insb
pop
jle
js
into
push
shll
stc
lcall
addr16
test
dec
push
push
mov
shlb
sub
sbb
adc
mov
repnz
movsb
mov
inc
mov
lret
push
cmp
or
mov
xchg
xchg
rolb
dec
sub
xchg
sbb
testl
repz
insl
xchg
rcrb
dec
sbb
and
mov
iret
pop
pop
mul
xchg
repz
xor
mov
push
cmp
fcoms
cmp
pop
xor
sbb
cld
xlat
fcomip
and
fistps
in
bound
xchg
mov
cmp
or
xor
push
loop
ret
mov
outsl
jmp
inc
cmp
pop
icebp
mov
dec
mov
outsb
sbb
cmp
in
mov
mov
dec
push
icebp
test
aam
xor
outsl
dec
xchg
push
mov
jbe
sub
in
sub
loope
jae
mov
fiadds
inc
cmp
mov
test
mov
lods
add
ljmp
out
and
inc
stos
sub
or
popf
stos
mov
xchg
aas
inc
dec
push
clc
adc
data16
jg
mov
xor
jo
inc
gs
mov
repz
mov
fs
cltd
in
out
bound
pop
rcr
popf
add
push
out
and
jmp
add
cmpsl
mov
stos
sbb
xor
adc
cmp
cli
fnstenv
xchg
fiaddl
fwait
out
add
dec
cs
fbld
ljmp
scas
lock
cmpsl
int
getsec
lea
cmp
fdiv
cmpsb
fildll
adc
int
pop
inc
sub
loop
inc
sub
aam
pop
cs
nop
imul
xchg
mov
mov
popf
push
pop
int
in
sbb
cmp
fdivrs
or
mov
scas
mov
add
lock
adc
subl
jns
mov
dec
cmpsb
in
movsl
es
negl
xor
jbe
ljmp
data16
push
in
call
imul
cmpsb
mov
es
pop
loop
jo
stos
lea
int
rcr
and
fs
mov
div
les
or
adc
adc
enter
add
mov
fimull
bound
fdivr
iret
push
rcrl
fucomi
xchg
push
mov
inc
jl
mov
fisubrs
sbb
aas
and
adc
mov
xor
pop
push
push
pop
push
mov
iret
movsb
mov
xchg
jb
cmpsb
xchg
pop
push
test
cli
test
sarl
adc
js
cs
fldenv
mov
imul
lahf
push
xchg
lea
sti
loop
pop
cmp
bound
xor
in
or
adc
es
sti
mov
ret
dec
sbb
lcall
adc
insl
jp
stos
subb
xchg
push
sbbl
xchg
mov
adc
mov
push
sti
arpl
mov
inc
push
adc
outsb
inc
dec
data16
jno
mov
dec
pop
push
mov
lcall
shlb
ret
fsub
xchg
jb
cmpl
and
mov
rcrb
inc
jnp
pop
stos
sub
mov
int
mov
popl
push
add
in
loop
fs
cmpl
ret
cmp
push
xchg
and
or
test
int3
imul
and
clc
aaa
and
sbb
sti
add
inc
pop
mov
fs
es
mov
jmp
xor
mov
sub
roll
fs
pop
les
mov
inc
pop
repz
in
mov
add
push
pop
mov
fmull
lds
sti
adcl
movsb
ja
push
jb
cmp
cs
push
fwait
repnz
enter
adc
out
es
aam
mov
push
sbb
outsl
dec
testl
jl
cmpsl
in
push
or
pop
jl
xchg
xchg
mov
mov
popl
test
mov
jg
movsl
std
push
pop
mov
es
xor
mov
shll
add
fs
jbe
mov
stc
outsl
sub
movsl
shr
jo
mov
cli
out
inc
and
outsb
mov
add
hlt
xor
sub
mov
je
and
xchg
in
imul
mov
dec
adc
jecxz
add
cmp
adc
push
cld
call
inc
xor
xchg
mov
addl
fsubl
push
push
push
and
jle
nop
in
jnp
sbb
xchg
stc
mov
les
call
dec
aam
add
lcall
scas
lret
ljmp
push
sbb
or
cmpsl
cmpb
rorb
sub
sub
mov
xor
sbb
fsub
aaa
sub
stos
xchg
movsl
mov
imul
cmp
rcr
pop
imul
adc
fcoml
aas
aad
dec
mov
sub
mov
push
lds
aam
std
bnd
inc
mov
jecxz
xchg
mov
pop
push
add
push
dec
cmp
lods
insl
insl
mov
mov
rol
xor
push
sub
mov
arpl
addr16
ljmp
pop
incb
bnd
addr16
sbb
imul
jo
aam
icebp
dec
mov
xor
bound
push
xchg
cld
fs
push
inc
inc
test
shll
repz
std
inc
or
cmc
jbe
scas
fsubl
adc
adc
pushf
pushf
pop
test
xchg
loopne
pop
inc
sub
fcomps
mov
call
in
dec
jne
aaa
ret
subb
out
add
inc
xchg
mov
incb
in
fcomps
or
sub
scas
jmp
addl
shrb
mov
or
sub
hlt
cmp
sub
adc
rolb
push
adc
dec
or
mov
dec
imul
inc
add
iret
dec
inc
cmpsl
mov
mov
mov
and
push
inc
lock
push
or
ja
sarb
pop
jno
movsl
fwait
div
stos
fwait
bound
lock
addr16
call
or
jp
inc
testb
jp
cmpsb
jmp
and
lret
icebp
fnstcw
idivl
lea
lret
insb
adc
mov
fprem1
inc
xor
dec
dec
or
adc
adc
jno
sti
fsubl
dec
sar
test
jno
and
mov
lcall
dec
notb
fbld
adc
clc
pushf
sub
lahf
push
leave
jae,pt
push
and
and
or
sub
push
shrl
adc
mov
cli
inc
xchg
and
pop
jmp
mov
mov
xchg
pop
mov
ds
addr16
addr16
test
insl
rorb
mov
mov
jae
push
test
je
mov
outsb
outsl
ficoml
jg
mov
dec
das
xchg
daa
push
mov
sbb
push
xor
leave
mov
test
push
xchg
insb
scas
bound
pop
int3
aam
testb
mov
sbb
outsb
jle
les
in
lret
or
es
xchg
filds
movsl
inc
daa
leave
or
les
pop
orb
pusha
sub
xor
xlat
mov
lahf
xor
sbbl
test
jb
cli
xor
push
mov
loop,pn
adc
mov
in
lods
pop
out
mov
inc
jge
jno
mov
stc
fnsave
or
ret
nop
int
sbb
fidivrl
jge
hlt
jge
pop
imul
cld
pop
int3
lcall
subb
arpl
xorl
xchg
jns
outsl
or
mov
sbbb
mov
mov
sarl
movsl
push
sbb
push
mov
arpl
sahf
xor
jno
loope
mov
and
adc
push
in
cmc
mov
test
push
addr16
ss
cmp
cmp
and
mov
pusha
dec
or
dec
inc
ret
shrb
dec
add
mov
les
imul
jbe
int3
or
mov
push
or
imul
dec
jb
call
pminsw
jno
jecxz
fimull
sbb
fisttps
outsb
or
or
xchg
push
inc
or
addr16
mov
scas
fwait
pop
in
mov
jno
push
mov
loope
hlt
orb
ljmp
cmp
inc
lds
adc
dec
xlat
sub
dec
push
insb
ss
dec
dec
add
pop
into
movl
cmp
scas
cmp
mov
adc
dec
adc
sbb
add
mov
repz
sbb
xchg
test
out
add
subb
icebp
jmp
xor
popaw
mov
shr
mov
mov
jg
fwait
xchg
cmp
in
adc
ret
inc
dec
int
mov
or
cmpsb
pusha
aas
pop
shrl
test
sbb
lods
in
mov
cmp
push
jb
in
mov
loop
pop
mov
cli
add
test
xchg
cmpl
dec
popl
push
xor
fistpll
test
and
cltd
adc
xchg
mov
sbb
xchg
xor
stos
pop
mov
mov
insl
ljmp
push
test
inc
outsb
cwtl
cmp
jg
push
cs
inc
cltd
decl
mov
hlt
rcl
lcall
lods
push
test
adc
orl
add
mov
les
push
inc
repnz
jp
pop
jge
or
jmp
loopne
ljmp
psubq
cmp
jl
aas
mov
add
jmp
jns
repz
sahf
push
imul
push
rcll
xlat
pop
addr16
inc
inc
in
and
lods
xchg
andl
mov
xor
std
xchg
in
mov
mov
sbb
movsb
mov
ja
add
ljmp
popf
push
leave
in
pushf
popf
popf
pop
cmp
fs
cltd
sbb
xor
push
mov
and
jp
lret
jnp
cmc
into
repnz
jbe
xchg
mov
push
pop
rorl
ljmp
out
mov
into
and
loop
insb
xchg
jae
lret
arpl
cs
fmulp
loopne
jle
lret
movsb
test
cltd
xor
cmp
and
pop
sub
mov
adc
cmp
bound
pop
loop
enter
or
or
push
xlat
fcmovnu
xor
mov
inc
in
clc
movsl
jge
fidivl
js
ds
lods
icebp
jge
push
dec
imul
mov
sbb
mov
xor
cwtl
cmp
out
in
mov
add
cmp
cmpsb
push
ret
hlt
lret
pop
enter
sbb
push
rclb
dec
nop
jmp
push
scas
mov
or
xlat
fldt
cs
cmp
adc
mov
add
in
jb
mov
xchg
insl
push
xchg
dec
enter
push
rclb
or
mov
add
in
lods
fstpl
int3
loope
fwait
push
mov
or
xchg
fbstp
pusha
test
out
nop
adc
jne
inc
orl
xor
push
movsl
aad
jl
stc
add
dec
shll
sub
lock
clc
push
std
mov
movsb
inc
addb
push
or
gs
xchg
mov
and
shrb
mov
cmp
push
imul
mov
iret
push
jle
fists
xchg
inc
push
and
aas
inc
add
ret
jb
xchg
pop
mov
add
mov
fwait
les
sbb
mulb
lret
and
or
mov
cmpsb
cmp
or
fs
mov
adc
adc
push
mov
push
orb
push
out
push
stc
dec
fisubs
mov
push
mov
xchg
ja
mov
fnstenv
mov
pushf
xlat
xchg
cmpsl
jp
mov
jno
add
cmp
arpl
pop
inc
test
iret
fisubrs
jno
and
or
mov
loopne
fabs
int3
push
in
mov
sub
add
loop
and
int3
or
sub
fisttps
cld
nop
mov
dec
out
rcll
pop
imul
fwait
clc
mov
outsb
imul
inc
ss
adc
xchg
cmp
xchg
mov
xchg
imul
lret
push
cs
lahf
inc
lea
out
lret
push
jp
int
enter
sub
in
or
pushf
jo
mov
jns
iret
xchg
mov
icebp
jbe
mov
push
or
int
outsb
out
mov
xor
insl
add
xchg
mov
imul
stos
mov
or
arpl
sbb
icebp
push
mov
imul
mov
aaa
dec
loopne
cmp
add
and
icebp
push
sahf
insb
jns
adc
aam
fsubr
loop
out
sbb
out
into
inc
push
add
into
stc
outsl
push
and
outsb
sub
pop
insb
pop
in
add
movb
mov
cmpsb
dec
lods
idivb
repnz
dec
lea
insl
ljmp
stos
mov
add
push
rcr
pop
frstor
imul
in
test
in
js
cli
xchg
inc
dec
lds
dec
push
pop
stos
adc
insl
stos
inc
xor
mov
adcl
sub
sub
cli
xorb
call
movb
in
lea
mov
push
inc
dec
add
lret
je
dec
es
push
jmp
push
movl
insb
jns
jg
sbb
xchg
push
sbb
or
orl
sbb
ficoms
jp
mov
or
lods
push
ror
jns
push
pop
les
je
xor
shlb
fiaddl
int
xchg
addr16
inc
in
mov
aam
and
insl
push
mov
push
sub
mov
or
sti
xor
jne
sahf
sti
sbb
lahf
call
test
pop
cld
pop
mov
cmp
cmpsl
inc
sbb
insb
aad
shl
stc
int
sbb
ja
push
ret
jmp
mov
push
jge
cmp
loopne
out
out
add
fs
pop
push
xor
out
in
mov
sub
mov
and
test
or
mov
add
jo
jge
iret
dec
and
ret
pop
int
fldt
jmp
xor
scas
sub
mov
sub
inc
mov
les
mov
dec
inc
cmp
inc
push
in
mov
aad
inc
xchg
stc
and
adc
out
movsl
cld
lret
stc
nop
mov
add
insl
ret
subl
xchg
mull
sbb
mov
je
dec
dec
movlps
leave
and
add
fimuls
mov
mov
cmp
subl
cmc
sbb
ror
push
jmp
std
inc
icebp
xlat
test
sbb
lods
and
and
shl
pop
cmp
cmp
sub
pop
jge
add
fidivrs
into
push
xchg
sub
sbb
js
push
xchg
mov
or
or
out
pushf
jnp
xor
stos
lds
fidivrl
inc
jnp
imul
subl
mov
mov
sbb
add
sbb
xlat
inc
ja
inc
add
jns
les
sbb
xor
mov
inc
fildll
xor
jno
enter
es
xchg
lret
test
xchg
dec
fwait
push
cmp
dec
std
mov
inc
stc
rcrl
xchg
aas
xor
bound
mov
jge
int
xchg
ljmp
cltd
sbb
inc
inc
cli
jae
add
xor
bnd
loopne
insl
call
add
lahf
fs
mov
lahf
cld
fs
mov
into
js
inc
cmp
and
int
cmc
jp
jge
ljmp
push
das
xor
inc
xchg
mov
inc
lods
repnz
and
push
sub
stos
iret
lods
lret
shrl
inc
shl
push
sub
adc
mov
lds
adc
mov
xchg
inc
dec
loop
pop
adc
in
jle
pop
rcll
arpl
sub
jo
xchg
addr16
add
ja
pop
inc
jne
icebp
and
lahf
push
call
loopne
lea
movq
pushf
push
jmp
mov
pop
push
iret
imul
dec
push
in
mull
sbb
lock
test
popa
in
jp
cmp
dec
cltd
push
dec
mov
dec
xchg
lcall
mov
cmp
mov
lcall
xor
popa
cmp
pusha
jle
or
imul
or
loop
cli
mov
dec
mov
add
data16
and
xlat
pop
in
add
adc
sub
sbb
cmpsl
adc
andb
push
ret
push
cmp
mov
fisubl
sub
int3
cmp
rcrl
pop
jno
mov
mov
loopne
and
pop
pop
sbb
movsb
jo
ss
test
mov
lds
dec
jns
jge
sarl
mov
pop
jns
or
aas
cwtl
pop
dec
sbb
jae
add
sbb
test
repz
scas
sahf
sbb
mov
inc
repz
mov
and
xor
adc
stos
push
push
notb
ret
cs
imul
adcl
nop
jle
add
test
adc
outsb
cmpsb
sub
xchg
or
lret
imul
les
sbb
adc
jg
loop
iret
das
lahf
mov
ss
fs
and
jne
xchg
std
outsl
add
scas
popl
mov
not
rcrb
mov
and
mov
add
adc
les
dec
shll
addr16
mov
jmp
cmpb
addb
aas
xor
push
mov
jle
jne
push
xor
and
mov
sbb
sbb
xor
or
lcall
jmp
fstl
insb
ret
add
fisttps
mov
loope
enter
rclb
out
mov
adc
sub
jne
mov
mov
stc
mov
xabort
push
or
into
pop
or
jecxz
mov
pop
bound
repz
adc
inc
and
cmp
push
dec
add
shlb
lods
cmp
push
and
das
pushf
in
stc
rclb
fisttpl
push
outsb
lds
lods
push
lock
jbe
test
xchg
push
addr16
mov
or
inc
loope
dec
xchg
call
shlb
dec
loopne
lods
mov
cmpsb
or
outsl
push
or
imul
rol
shll
repz
sbb
mov
adc
push
adc
mov
jb
adc
fsubrs
cmp
outsl
mov
movsl
test
mov
lock
ja
mov
mov
inc
leave
pop
out
ret
sbb
pop
cld
push
lock
movsl
outsb
push
ret
imul
xchg
push
lret
and
mov
adc
pop
test
jmp
cli
mov
sub
mov
xor
insb
ficoml
imul
outsl
adc
cmpsb
lret
mov
push
lods
push
nop
sbb
imul
scas
pop
mov
jno
aas
mov
je
jp
movsl
dec
mov
and
cmpb
mov
mov
fxch
xchg
mov
push
sbb
frstor
jb
inc
or
loope
xchg
mulb
mov
arpl
loopne
push
adc
pop
repz
mov
js
sub
add
mov
mov
pop
xchg
xor
out
pop
lds
ret
fistl
into
loope
mov
mov
sub
movsl
or
jl
in
mov
fs
push
cs
or
jp
cmp
es
int3
mov
inc
lret
or
push
fs
adc
and
dec
lret
mov
daa
dec
adc
xor
jg
test
fidivrl
pop
sub
test
jp
cmpsb
inc
fisttpl
sub
pop
dec
pop
mov
dec
adc
mov
sbb
push
insl
sbb
jbe
std
mov
push
xchg
jns
rcl
jecxz
inc
cmp
fldt
mov
and
xor
cmp
cmc
fistl
stos
or
sub
sub
sbb
add
call
xchg
lds
fbld
pop
or
movl
cmc
jnp
xor
rcrl
loope
sbbb
mov
and
xorl
arpl
mov
test
sub
xchg
popf
cmp
jge
movsb
ror
das
je
inc
pop
sub
addr16
mov
mov
jge
shlb
mov
fildll
adc
clc
and
sahf
jne
xlat
push
insb
out
out
or
jno
adcb
mov
fcmovu
sub
adc
cvtdq2ps
jge
aaa
adc
add
out
jns
cmp
add
stos
sbb
dec
into
mov
into
mov
adc
add
loop
addr16
shll
mov
sbb
out
scas
mov
aad
mov
cmp
lcall
push
repnz
inc
lock
test
mov
shll
orl
push
pushf
std
sahf
mov
or
out
sub
out
pop
cmpsl
scas
and
jecxz
stos
jb
cld
cld
cmp
xchg
mov
fcoms
gs
outsb
sub
dec
mov
insb
dec
test
jp
xor
mov
push
dec
xchg
sub
mov
sarl
pop
jg
push
mov
or
arpl
dec
dec
or
ss
call
rorl
push
jb
dec
std
xlat
cmpsb
in
lret
aad
fidivl
icebp
daa
lahf
mov
jnp
das
mov
je
test
loope
push
sub
sub
dec
mov
sub
pop
adc
sub
movsb
add
mov
sub
cwtl
les
push
stc
mov
int3
mov
dec
and
repnz
pop
jmp
in
jl
xchg
sbb
enter
cmp
sub
movsb
stos
cmp
inc
mov
inc
inc
call
aad
xchg
dec
add
adc
jecxz
pop
cmp
or
inc
sub
mov
push
pop
ret
popa
aam
or
in
lods
cmpsl
movsl
dec
xlat
lahf
stos
inc
fildl
test
fistpll
add
push
in
cli
in
mov
cwtl
jp
loop
movsl
mov
sub
or
loope
sub
mov
sub
xor
mov
cmp
les
sbbl
loope
fmuls
mov
call
cmp
not
or
test
cmpsl
push
stos
add
jmp
mov
mov
cltd
sub
pop
mov
xchg
pop
out
nop
daa
sbb
sub
pop
aad
fmull
lahf
iret
mov
mov
adcb
out
inc
loopne
lea
out
push
in
xor
jmp
fidivrs
mov
mov
mov
pop
push
cmp
cmp
xor
in
push
in
mov
aam
mov
xchg
inc
outsb
negl
jno
test
into
mov
xor
outsl
aas
inc
pop
sbb
ret
pushf
pop
jge
jle
loopne
sub
lods
dec
lahf
jecxz
imul
sbb
lea
out
imul
mov
jmp
add
andb
mov
xlat
in
sub
or
out
sub
clc
mov
rclb
out
sbb
mov
push
out
mov
or
fwait
jo
sbb
mov
xchg
popa
sar
inc
aad
lods
addb
scas
mov
jecxz
test
dec
fs
pop
loope
shlb
out
sbb
push
testb
inc
mov
jle
rcrl
sub
jmp
cld
scas
xor
xchg
cmp
das
add
jl
imul
jmp
ret
xchg
jge
mov
push
inc
repnz
enter
push
daa
mov
and
pop
mov
scas
dec
push
or
sbbb
test
pop
stos
je
pop
sahf
bound
and
int
mov
or
pop
out
push
xor
rcll
sbb
sub
outsl
fsubp
push
sub
les
and
jecxz
lock
fwait
mov
stc
xor
jg
and
rorb
mov
test
aad
stc
sub
mov
xor
pop
xchg
mov
jge
xchg
mov
int
jg
sub
xchg
lcall
xor
add
fdivs
xchg
cmpsl
into
imul
xchg
xor
in
inc
jmp
std
dec
arpl
mov
inc
movsb
cld
pop
cmpsl
and
sbb
adc
sbb
dec
cltd
sub
jg
aas
xorb
dec
jnp
jno
clc
loopne
add
outsl
and
adc
inc
lods
or
test
inc
lods
cmpsl
cmp
out
repz
imul
clc
test
pusha
or
mov
sbb
mov
hlt
inc
decl
mov
mov
fidivl
into
movsl
aam
push
test
sub
int
test
test
sbb
sti
lcall
mov
out
in
mov
sub
popf
mov
orb
mov
inc
push
fiaddl
outsb
push
xchg
ret
sbb
adc
fnstsw
xchg
sar
push
ja
insl
imul
mov
xor
rclb
push
outsl
testl
inc
sbb
aas
movb
repnz
mov
loopew
lods
rol
mov
fisttpl
test
mov
jo
mov
jge
jle
xchg
sub
jmp
sbb
sahf
inc
mov
data16
pop
cld
sarl
cmc
mulb
shll
in
in
cmp
jmp
xor
inc
mov
cmp
pop
jns
fs
mov
jbe
xchg
push
bound
mov
cwtl
pop
push
aam
jo
or
sbb
xchg
push
hlt
xchg
pop
fs
jbe
leave
ss
jo
lods
cwtl
stos
add
test
repnz
xor
out
xchg
test
sub
decb
adc
into
lahf
cwtl
jo
mov
pop
add
xorb
pop
dec
lods
inc
pop
pop
lods
fcmovnb
iret
sbb
sbb
and
or
das
popa
decb
mov
scas
xor
pop
shlb
xchg
test
rorl
mov
or
test
rolb
push
mov
and
adc
push
sahf
std
movsb
xor
test
jbe
inc
bound
xor
add
movsl
push
lock
lock
mov
scas
jle
leave
push
dec
add
mov
jbe
out
push
mov
call
mov
pushf
insl
sbb
cmc
sbbl
and
sbb
test
out
xchg
scas
pop
mov
xor
xor
fsub
lcall
out
mov
mov
fisubs
mov
aas
push
mov
out
aad
xchg
sub
cmovge
loope
jle
rorl
out
or
fs
ret
cmp
mov
mov
out
mov
out
push
lahf
pop
movsb
je
adc
jno
inc
int
inc
and
test
add
cmpb
popf
cmp
mov
mov
shld
push
test
dec
xchg
stos
push
into
gs
sbb
xor
inc
mov
sbb
into
movsb
pop
iret
pop
popl
cmp
call
fcmovu
cli
adc
rcrb
or
push
out
stos
adc
testb
push
testl
test
pop
adc
mov
out
popa
test
mov
pushf
lods
ret
or
std
std
rcrl
inc
xchg
dec
pop
popf
and
cmp
outsl
xchg
jmp
js
pop
popf
hlt
inc
inc
push
xor
call
push
test
push
dec
scas
dec
jp
xlat
icebp
jl
xor
xchg
movb
adc
pop
shrb
push
add
pop
fimull
pop
xchg
mov
jle
pusha
xchg
popf
lahf
or
mov
jmp
xchg
xor
adc
cmp
cli
stos
push
ljmp
mov
mov
cmp
sub
aam
out
test
out
jp
inc
inc
jle
in
jns
inc
ljmp
call
popa
jbe
sub
test
aad
and
rclb
lock
outsl
push
or
int3
sti
test
lcall
les
ret
pop
adcl
ret
out
jno
mov
out
mov
das
in
imul
pop
pop
fldenv
mov
lock
cmpsl
pop
pop
mov
jo
arpl
xchg
fwait
movsl
xchg
jo
jecxz
mov
pusha
ss
push
push
in
xlat
iret
bound
jb
stc
xchg
mov
rcrl
pop
out
and
sbb
or
or
jo
and
mov
stos
sbb
xchg
repz
and
sub
rorl
ret
inc
into
adc
lcall
aam
lret
imulb
jg
into
fistpll
dec
int
sub
sbb
or
adc
shrl
fdivr
xchg
test
and
pop
out
ds
jns
dec
jo
es
movsb
sarl
xchg
mov
arpl
aad
sti
cmpsb
cwtl
push
shrb
fxch
nop
push
mov
push
xchg
add
push
xorb
push
xor
xchg
xor
jb
adc
movsl
cmp
stc
sti
cwtl
stos
stos
xchg
rorb
stos
jp
push
call
or
jl
out
test
push
cmp
fwait
and
cmc
mov
mov
mov
inc
bound
or
sub
int3
loope
lcall
xchg
imul
sbb
or
mov
xchg
enter
mov
jle
sbb
pop
fucom
std
mov
xor
jg
jle
sarb
aam
es
add
mov
push
push
jl
xchg
push
es
mov
xor
dec
sti
mov
pop
mov
add
mov
sbb
les
mov
sub
imul
data16
lods
xchg
fldenv
jl
inc
inc
mov
ss
test
push
testb
orl
adc
pop
and
pop
in
or
test
rcll
sbb
mov
xlat
pushl
xor
test
movsl
sub
out
jmp
cmp
out
mov
adc
cli
pop
stos
xchg
stc
add
pop
push
push
and
in
xor
clc
rorb
push
inc
jmp
in
inc
mov
rcrb
pushf
inc
dec
pop
cld
add
shlb
sbb
mov
mov
ljmp
mov
push
adc
xchg
out
xchg
cmp
sub
mov
pop
pusha
test
aad
xchg
lds
sbb
gs
loope
loop
das
daa
dec
jno
sub
cmp
hlt
test
cmp
push
ficoms
iret
js
pusha
pop
jmp
mov
ja
xlat
aam
xchg
xor
sub
sub
test
pop
dec
jnp
adc
cwtl
aad
div
fneni(8087
jecxz
xor
in
jg
enter
push
outsb
iret
lds
dec
dec
jge
add
pop
inc
mov
mov
push
sub
cmp
mov
insb
inc
insb
sub
sbb
xchg
int
fcmovnu
test
cmp
cmpsl
in
rorl
leave
and
adc
add
bound
mov
mov
lods
mov
pop
mov
inc
cmp
cmpsl
cmp
out
fidivs
cmp
push
and
inc
subl
push
inc
outsl
lods
push
and
popf
xchg
je
cmpb
lahf
inc
jmp
inc
xchg
xchg
sti
mov
mov
or
sbb
rcr
jae
or
int3
call
xor
scas
fcoms
sbb
insb
xor
fistps
and
adc
jmp
jb
insb
mov
push
mov
popf
int3
mov
fdivrs
jecxz
push
lcall
fcmovne
mov
rol
and
sub
rcl
scas
add
jg
cmp
addb
or
xchg
xchg
repz
repz
adc
popa
push
inc
test
stc
ljmp
outsl
sub
popa
fidivrs
or
mov
push
popa
inc
mov
sub
scas
mov
pop
inc
pop
jns
xor
pop
sub
outsb
addl
xor
add
jle
addb
pop
iret
xor
add
lds
pushf
neg
push
ret
sbb
or
sbb
cmp
dec
sub
arpl
lds
jmp
cmpsb
nop
and
sbb
pop
aam
lret
xchg
insl
ret
call
cmc
sbb
or
push
xlat
cli
inc
xor
popa
sub
shlb
out
mov
dec
adc
negl
in
in
mov
mov
out
inc
sti
aas
loope
ret
cmpsb
sbb
loop
cmc
xchg
add
cmpsl
fwait
loop
sar
insb
imul
or
gs
ret
into
addr16
or
pop
sub
hlt
push
test
movsb
imul
pop
push
mov
outsb
mov
push
ja
sbb
inc
add
ficomps
arpl
and
sbb
or
mov
insl
lea
int3
mov
test
inc
das
xchg
iret
or
icebp
add
mov
cmpsl
lods
popa
cmp
sub
cmp
mov
mov
fstps
and
add
xor
sbb
loopne
cmpsl
push
xchg
sti
xorl
xchg
fs
outsl
sub
subl
mov
cmp
imul
or
lea
cs
mov
mov
cmpsb
dec
pop
and
jo
mov
push
mov
in
stos
sub
mov
fcmove
push
es
sti
push
mov
sti
xor
xor
xor
rolb
or
das
xor
inc
sub
and
mov
or
stos
lahf
cmp
ret
icebp
inc
adc
ret
inc
sbb
jg
loope
inc
add
push
scas
mov
mov
mov
mov
rol
cli
cld
cmpsl
das
xor
movsl
push
imul
js
sti
std
fwait
or
call
lcall
test
clc
jl
push
adc
xchg
or
add
push
jnp
jmp
lahf
dec
xchg
inc
mov
mov
xorl
pop
mov
dec
add
jb
mov
jge
mov
add
sbb
daa
insl
movsl
sub
fcoml
sbb
xor
subl
sub
adc
pop
xlat
push
mov
jecxz
daa
sbb
pushf
in
push
out
aaa
hlt
hlt
xor
push
and
roll
xor
or
sub
and
dec
and
insl
in
pushw
repnz
cltd
bound
pop
xlat
xor
add
pop
loop
shrl
dec
sub
mov
lahf
adc
imul
aaa
cli
scas
and
test
jnp
repz
repz
push
jne
jb
iret
jle
pop
mov
jmp
dec
dec
gs
mov
std
xor
mov
add
push
jbe
mov
ret
mov
cmp
mov
push
mov
pop
xchg
dec
mov
aaa
push
pop
dec
mov
andl
mov
test
test
add
jns
pop
dec
fs
adc
and
add
or
sbb
push
ds
mov
in
pop
dec
mov
lock
mov
mov
dec
cmp
out
pop
xor
testb
pop
or
mov
mov
push
int3
test
jp,pt
mov
inc
mov
ds
mov
jmp
es
in
cltd
dec
rcrl
movmskps
insl
stos
scas
cmpsl
xor
adc
dec
xor
dec
ds
adc
pusha
cmp
adc
cmp
sub
orl
scas
out
inc
call
and
pop
mov
inc
mov
int
and
cmp
cli
in
scas
or
cld
pop
xor
rcl
sbb
and
loopne
mov
vpaddusb
movb
push
popa
ficompl
icebp
outsl
es
ret
add
xor
adc
insl
mov
jns
cmp
xchg
mov
adc
les
push
fabs
cmp
test
push
cmp
push
fldenv
or
push
mov
mov
test
imul
pop
and
mov
movsb
subl
inc
cld
icebp
inc
sbbl
stos
fs
dec
mov
fcoml
popa
int
out
fdivs
fisttpll
sub
mov
mov
loope
scas
insl
pop
push
jno
adcb
ret
outsl
aad
cltd
negb
mov
arpl
std
movsb
lahf
insb
int3
push
out
hlt
lods
mov
xchg
mov
xchg
rcr
into
cltd
testb
enter
in
jecxz
bound
test
cltd
mov
addr16
fucom
jae
push
and
pop
jge
mov
sub
stos
adc
jl
aad
mov
push
rolb
xor
mov
das
adc
cmpsb
dec
subl
cmp
jb
mov
xchg
cltd
xor
adc
push
stos
jnp
jle
cli
popa
inc
fmuls
outsb
leave
adc
fcoms
mov
lahf
pop
fmull
sbb
or
enter
pop
movb
lahf
inc
sbb
fwait
dec
test
loope
add
xchg
jg
adc
mov
rcrb
jbe
or
pushf
in
and
sub
xor
sahf
movsl
cs
out
dec
push
daa
pop
sarb
add
jo
jl
xchg
add
jne
dec
or
lods
jns
sub
push
cmp
movsl
insb
adc
mov
subl
cmp
xor
sbb
ljmp
imul
mov
fcomp
scas
jl
dec
push
in
xchg
push
or
and
mov
cmp
int3
rcr
mov
loopne
pop
add
xchg
mov
lcall
dec
in
scas
mov
iret
inc
dec
inc
xor
stos
adc
cmp
push
leave
jecxz
mov
sub
jge
mov
lret
and
mov
adc
mov
orl
adcl
pop
jmp
pop
and
rcll
mov
or
aas
xchg
call
das
jmp
mov
dec
jne
scas
in
and
or
inc
in
dec
jl
sub
xchg
fidivs
add
pusha
js
xchg
mov
and
and
dec
aaa
loope
xor
out
imul
ret
jae
xchg
gs
daa
stos
rolb
ljmp
loope
popf
test
pop
mov
gs
cli
xchg
lcall
mov
adc
and
fs
cltd
popf
xor
int3
jg
cmp
aas
out
ljmp
adc
inc
jbe
cmova
aaa
pusha
inc
int
mov
mov
icebp
movsb
cmpsl
push
cli
pop
cmp
add
cli
push
in
dec
lea
lock
rorb
xchg
sti
rcl
jl
cmpsl
stc
aaa
mov
fisubrl
dec
and
push
xchg
jno
mov
pop
movb
and
rorl
and
ss
sub
jb
ja
cmp
xchg
dec
out
andl
sbb
mov
jno
ret
fisttps
xor
pop
pop
dec
dec
and
add
push
test
outsl
cmp
adc
pop
inc
fs
leave
jp
inc
into
adc
jg
or
or
add
imul
nop
adc
ss
out
push
pop
stc
icebp
idivb
jg
pusha
rcl
mov
pop
imul
add
sub
dec
and
sti
shrb
jmp
inc
jae
xchg
call
repz
jecxz
pop
lea
stos
sti
sbb
in
in
pop
xchg
test
push
mov
scas
pop
mov
sbb
call
loope
or
popf
xor
enter
mov
dec
dec
int3
cmp
mov
xor
add
icebp
xor
repz
inc
jne
ja
sub
imul
cmp
adc
push
popf
xor
xorb
xchg
inc
xchg
adc
pop
sub
jb
or
sub
iret
or
xchg
test
jg
jo
jge
xor
inc
je
inc
sub
rcll
fcomps
fsubr
out
xor
fldcw
fstl
xchg
or
add
mov
xor
jg
je
sbb
jmp
cs
pop
mov
testb
adc
les
in
js
enter
sub
sub
mov
xor
out
cld
xor
in
mov
divl
dec
stc
rclb
sub
fistpll
add
add
inc
repz
xchg
imul
out
stos
and
es
mov
lcall
cli
mov
fiaddl
or
pop
call
in
push
movsl
mov
xor
push
test
inc
loope
lea
outsl
insb
outsb
or
lds
cld
test
dec
mov
test
xchg
je
out
cmp
mov
jge
je
fnsave
xor
lret
cltd
jecxz
test
inc
mov
dec
cmc
loop
pop
pop
loopne
dec
sub
nop
mov
ss
push
mov
pop
and
nopl
jp
jmp
in
sub
push
dec
dec
mov
insb
aad
aad
jae
xor
out
inc
jg
mov
inc
and
mov
test
push
lods
icebp
cmpsl
adc
add
sbb
mov
sar
out
incl
lods
fwait
aas
xor
sarl
out
fisubrs
sub
mov
add
dec
lds
daa
dec
cld
mov
mov
pop
xorl
push
mov
jge
jmp
nop
adc
dec
push
fisubrl
ljmp
sbb
stos
push
mov
cmp
out
std
mov
cmp
cmc
in
adc
aam
popf
cltd
sub
rcrb
lret
inc
repz
xchg
mov
lock
xor
dec
icebp
cmpsl
icebp
jmp
xor
pusha
hlt
inc
stos
sbb
dec
push
add
cli
push
lret
push
sbbb
xor
cltd
les
insb
inc
pop
decb
outsb
fisubs
push
inc
adc
dec
push
dec
cwtl
dec
adc
mov
dec
sti
lods
aad
xchg
xlat
add
inc
lds
das
faddl
xchg
cltd
pop
add
mov
shl
mov
mov
and
xchg
add
push
lret
aad
adc
jp
xchg
or
pop
movsl
mov
repnz
pushf
push
rcr
repz
dec
jp
test
popa
adc
mov
sub
push
ds
adcl
cld
mov
hlt
daa
pusha
mov
lcall
cmp
dec
cmc
adcl
fwait
cmp
mov
int3
adcb
cltd
add
jbe
call
popa
sahf
inc
aad
jmp
cmpsb
mov
rorb
repnz
lods
or
ds
jbe
adc
cmp
mov
dec
lods
test
or
out
stos
movswl
push
loopne
repz
fldl
fadd
pop
test
popa
mov
xor
pop
mov
inc
jnp
jmp
sub
mov
push
cld
mov
or
js
push
mov
repnz
mov
jp
scas
mov
scas
pop
cmp
xor
dec
xor
push
dec
ljmp
pusha
jbe
nop
lock
and
pop
pop
mov
int
jb
aas
notb
mov
pop
cli
pop
shlb
lcall
dec
cs
add
in
fisubl
mov
push
inc
inc
or
push
in
push
push
iret
xor
int3
push
fdivs
test
scas
or
sbb
stos
bound
and
adc
sbb
aas
xor
sbb
pop
or
inc
xor
fisttpl
adcl
in
cmc
mov
arpl
adc
and
adc
mov
in
int3
pslld
hlt
iret
inc
mov
jmp
incl
pop
imul
mov
jmp
cltd
sbb
aas
inc
aas
sub
inc
fidivrl
push
dec
or
mov
xor
int3
sti
sbb
xor
lcall
fsubl
lock
cld
mov
popa
jno
andl
mov
mov
aad
or
or
fnstsw
lea
in
popa
mov
into
fmuls
enter
mov
adc
pop
imul
inc
add
sti
xor
sub
mov
sti
dec
mov
jg
out
push
push
insb
lods
jmp
sub
dec
pop
ud1
inc
js
cmc
pop
lds
daa
fstp
pop
cmpl
shll
jecxz
in
nop
lahf
and
clc
bts
sub
test
shlb
pop
cld
outsl
add
test
js
jmp
mov
dec
repnz
push
sbb
loopne
dec
or
cmp
push
xchg
clc
xor
inc
push
mov
in
sahf
cwtl
xchg
push
scas
mov
nop
ds
dec
mov
dec
fldz
iret
sbb
into
push
mov
cltd
cld
cmp
sahf
mov
adc
jb
lods
negb
mov
adc
jp
scas
addr16
lret
xor
imul
mov
sbb
lcall
add
subb
cltd
movsb
popa
out
in
aam
push
jecxz
insl
out
mov
sbb
mov
adc
jmp
mov
mov
xchg
out
jne
add
mov
aaa
jle
and
stc
sub
or
push
popl
stos
enter
jge
sarb
pop
fldl
push
stos
or
stos
jb
ret
iret
add
pop
inc
ror
xor
xorb
int
aad
inc
and
fwait
push
lret
cmpl
aaa
ret
xor
mull
xlat
aas
sarb
test
push
stos
and
mov
lea
cmp
xchg
inc
mov
xor
jnp
or
loopne
inc
and
sub
xlat
mov
cmpsb
out
fsubrs
or
cwtl
mov
imul
cmp
jo
mov
ret
dec
into
and
cmp
jg
xchg
add
and
in
jle
pop
cmc
icebp
mov
cmp
mov
xor
jge
xor
xchg
lods
test
pop
jmp
stc
sbb
in
inc
mov
fstpt
or
negl
inc
jnp
xorb
fidivl
ss
scas
adc
dec
lahf
cltd
push
xchg
jns
mov
mov
xchg
mov
adc
xlat
shlb
push
pop
popa
fmuls
scas
dec
xchg
pop
dec
xor
lods
jbe
arpl
lock
call
cmpsb
cli
cmpsb
std
pop
or
xchg
push
and
pop
loopne
or
bound
push
int3
pushl
push
sub
jmp
push
mov
mov
jb
cltd
push
adc
inc
lea
xchg
in
andb
loop
jae
dec
ja
xor
cltd
shll
cld
sarl
push
fildll
das
ficompl
lock
and
stos
aad
sahf
mov
lods
cltd
in
and
pusha
popf
icebp
pop
inc
inc
add
leave
inc
hlt
add
aas
pop
and
and
jle
dec
jg
mov
bound
or
lods
mov
hlt
jecxz
bound
jnp
push
adc
or
in
pop
fstpt
fs
xchg
pop
insb
mov
and
insl
imul
mov
or
ljmp
add
addr16
sub
data16
jmp
jle
cli
push
call
inc
les
sbb
sti
imul
mov
aaa
pop
mov
cmp
mov
push
jmp
jg
fsubl
icebp
int
mov
dec
mov
mov
in
or
ljmp
push
sbb
jo
fadds
shll
stos
xchg
in
xchg
mov
mov
cs
test
sub
ds
rcll
pop
sbb
jb
movsb
shl
mull
and
repnz
mov
cmp
or
mulps
mov
outsl
stos
lahf
shl
divb
sub
subl
or
mov
andl
mov
lds
xor
mov
insb
ljmp
out
fildll
mov
or
cmp
jl
dec
pusha
jae
add
test
int
pop
lods
leave
cltd
outsb
push
push
xchg
insl
mov
ljmp
push
mov
xor
stos
ret
pop
leave
cmpsb
lods
or
add
xor
leave
pop
mov
pop
mov
jecxz
insb
ror
in
into
lds
sahf
sbb
cli
icebp
dec
mov
mov
mov
pop
jmp
inc
divb
addr16
mov
ljmp
pop
loope
pop
mov
in
cmc
push
inc
mov
leave
mov
dec
and
mov
or
cmp
ficoms
inc
loop
sbb
stos
insl
mov
jo
std
ret
sbb
rcll
add
outsb
stc
and
cmp
cld
lcall
popa
sarb
xor
mov
mov
outsl
jecxz
aad
xor
pushf
xor
sub
ds
jge
push
fists
dec
dec
jp
loopne
mov
cmp
das
inc
cmpl
insl
sbb
jb
insl
mov
jno
lods
push
outsb
xchg
pop
inc
xor
mov
jecxz
and
adc
pusha
int3
cmpsb
dec
xchg
xchg
pop
jmp
xchg
cmc
in
in
lock
popf
je
mov
sbb
jae
lock
fs
test
dec
inc
daa
dec
push
dec
sub
adcb
test
push
cli
in
mov
jg
dec
xchg
movsl
push
fdivrl
xchg
push
mov
cmp
sub
jbe
xchg
pop
outsl
cmc
ljmp
xchg
sub
lds
lods
push
lcall
in
jno
ljmp
jmp
or
sbb
pop
push
sar
push
xchg
or
cmp
jg
pop
lock
out
iret
cltd
in
gs
mov
cli
cmp
stos
mov
or
fimuls
inc
dec
outsl
movsb
addr16
test
push
push
movsb
mulb
insl
ss
js
lds
cmpsb
fwait
es
aam
or
xchg
dec
aad
jae
mov
adc
int
imul
sti
push
jecxz
ds
lods
loopne
mov
push
or
sub
int3
dec
ret
jg
jmp
push
mov
ds
test
test
sysret
lock
add
add
lds
dec
and
mov
mov
loope
popf
adc
es
pop
cmp
xchg
jne
mov
jp
addr16
into
mov
and
and
mov
dec
into
fsubrp
cld
testb
xchg
pushf
xor
sub
addr16
arpl
xchg
mov
mov
mov
mov
push
pop
jnp
imul
add
adc
test
fcmovnb
xchg
mov
scas
movsw
arpl
gs
push
push
add
jg
mov
jne
into
pop
push
out
push
fnstsw
mov
dec
fs
sbb
sub
fcom
sbb
xor
pop
sbb
cmp
and
xorb
insb
out
aaa
ljmp
fidivs
outsl
pop
mov
imul
out
bound
push
sub
or
jg
iret
daa
inc
ja
add
xor
jae
mov
mov
or
or
sbb
pop
dec
cs
xchg
popa
in
mov
stos
imul
movsl
and
sbb
insb
stos
insl
rcrl
push
mov
pushf
xchg
in
insl
and
das
sti
jbe
fiadds
mov
fistpll
fsubl
cmp
inc
or
cmp
jp
loope
mov
inc
stos
jnp
pop
sarl
mov
call
lcall
or
outsl
inc
loope
aas
ret
pop
cli
add
mov
inc
js
dec
cmpsl
dec
cli
pop
cmp
push
sahf
jmp
adc
mov
jl
dec
inc
sbb
mov
or
cmp
in
jb
pushf
xor
cmp
pop
add
out
ret
fisubl
ljmp
xor
or
sahf
je
sbb
rcrl
mov
inc
sbb
mov
enter
ret
adc
push
jl
and
lret
dec
out
ljmp
cmc
xor
mov
jnp
repz
xchg
cltd
xchg
fiaddl
push
and
mov
xchg
in
push
ljmp
sbb
dec
add
in
mov
mov
add
mov
jmp
fwait
and
je
push
or
sbb
adc
int3
stos
dec
pop
cmpsl
inc
imul
cmpsl
or
rclb
ldmxcsr
sti
sbb
adc
ret
movsb
imul
call
out
adc
lock
aas
rolb
cwtl
inc
xchg
out
jno
inc
jge
fnstsw
mov
leave
mov
lcall
scas
mov
and
aas
lret
sub
mov
cld
adc
ljmp
mov
daa
pop
dec
repz
mov
cmp
jge
mov
iret
scas
lds
mov
jnp
hlt
inc
adc
out
adc
pop
push
shl
jnp
dec
mov
dec
xchg
scas
lods
addr16
jns
ss
and
dec
cmp
xor
lret
mov
outsb
push
test
gs
test
sbb
inc
cmp
repz
ret
in
fmull
pop
adc
scas
xchg
cld
add
pushf
adc
ss
push
pop
push
fbstp
stos
test
insl
test
xor
insl
and
test
jbe
push
js
in
sbb
jns
es
push
push
xchg
test
lcall
xor
sbbb
repz
and
out
adc
or
jl
dec
push
and
fmull
test
repz
xchg
pop
repz
jns
dec
dec
mov
mov
stos
fs
sbb
or
sarl
cld
negl
aam
mov
fstps
imul
roll
jl
aad
push
arpl
xchg
stos
stos
cmpsb
js
jns
xor
or
iret
ds
je
insb
mov
sbb
mov
lds
add
and
leave
cli
mov
push
aam
popf
xor
aaa
int3
js
pop
jg
sbb
iret
pop
loop
sub
xchg
movsl
inc
xor
das
mov
mov
cs
xor
push
rolb
mov
push
cwtl
fsubl
mov
popa
sbb
mov
cmp
lret
jns
xchg
mov
mov
loopne
sahf
es
xchg
lcall
adc
pop
iret
jecxz
push
out
adcl
ds
xor
fidivrl
in
lahf
icebp
xchg
sbb
mov
mov
in
sbb
sub
push
jp
cmp
lock
aam
mov
jbe
int3
cmp
pop
aam
push
scas
mov
mov
lahf
repz
outsl
addr16
xor
dec
dec
mov
or
add
adc
leave
xchg
mov
in
dec
lret
lods
shrb
into
sub
adc
fldcw
movsl
jg
push
ret
lds
sti
jmp
push
out
rcrl
or
fmull
and
cld
jp
pop
sub
ret
outsl
cmp
adc
inc
lea
cmp
dec
xor
sahf
or
sub
leave
call
xor
mov
mov
nop
jge
pop
into
add
jle
out
mov
inc
push
push
mov
clc
orb
jge
mov
pusha
fisubrs
ret
mov
cmp
into
push
dec
jns
pop
dec
jo
daa
int3
jne
dec
roll
mov
fwait
jl
stos
push
ljmp
or
sbb
inc
mov
pop
mov
arpl
mov
fidivrs
xor
rolb
mul
mov
scas
test
pusha
sbb
ljmp
lea
rcl
lds
mov
pop
jb
clc
stos
orb
out
mov
adc
xor
jb
pop
sbb
sbb
into
aad
rolb
les
dec
pop
clc
xchg
xchg
and
jo
outsb
push
nop
dec
add
mov
dec
movsl
in
push
or
pop
dec
pop
inc
jle
ret
mov
ret
pushf
fidivrl
sbb
sbbb
ret
or
nop
loopew
mov
das
inc
inc
jbe
les
pop
mov
mov
xor
mov
fsubrs
lret
loop
call
add
or
pop
xchg
loopne
aas
jl
mov
adc
adc
xchg
mov
adc
outsb
aaa
std
xchg
push
cwtl
dec
and
nop
jmp
enter
sahf
fsubrl
adc
cmovp
test
push
sub
mov
lret
nop
imul
cmp
mov
fcmovu
xchg
out
jo
stos
repz
inc
xor
push
xchg
enter
mov
xor
je
mov
arpl
push
cmp
mov
ss
cwtl
in
jmp
repz
nop
xor
loopne
xchg
aas
mov
test
sub
in
jmp
aam
inc
in
cmp
jmp
out
inc
mov
pop
and
adc
ret
je
ljmp
push
lahf
inc
stos
fstps
rorl
fsub
call
into
push
and
mov
movsl
jecxz
inc
adc
into
and
mov
mov
xchg
push
mov
flds
imulb
dec
ljmp
xchg
or
push
ret
dec
popa
in
int3
addl
sbb
mov
popa
idivl
xor
mov
pop
lods
adc
dec
std
cmp
movsb
jno
in
push
xchg
mov
jo
mov
mov
adc
add
cmpsl
test
nop
aam
mov
adc
sub
data16
pop
jbe
outsb
push
adc
pop
mov
mov
jecxz
addr16
shrb
aas
aas
inc
cmpsl
out
data16
frstor
push
jne
in
dec
in
fcomi
pop
mov
mov
jb
jnp
loope
pop
jnp
inc
mov
adc
lea
fmuls
push
add
pop
pop
pop
jge
inc
in
ss
and
mov
xor
and
fists
adc
pop
mov
gs
add
adc
xchg
sbb
repnz
or
xchg
movsb
fidivrl
lret
cltd
cmc
dec
add
int
test
inc
loopne
mov
test
std
sub
test
xchg
outsb
sbb
daa
push
lret
sub
fnstcw
imul
loop
leave
mov
mov
xor
mov
fs
push
adc
push
pop
xchg
dec
jnp
and
sbb
je
daa
xorl
shr
push
mov
and
push
es
jb
lods
cmp
lods
xlat
mov
outsl
sbb
and
lret
adc
call
getsec
pop
enter
fwait
adc
lock
mov
or
sub
inc
mov
les
outsl
dec
sub
jne
jle
fdivrl
movl
mov
in
je
cmpsl
cmp
fwait
aad
mov
out
mov
outsl
cmpsb
sbb
es
inc
ds
notl
add
inc
call
inc
jge
adc
pop
and
xor
shlb
add
sub
dec
int3
mov
push
push
xor
cwtl
mov
xor
push
jecxz
mov
add
dec
cmpsl
movsb
out
roll
mov
jmp
mov
pop
pop
xchg
inc
mull
cld
je
add
xor
andl
and
push
cld
jb
int3
gs
cmp
fwait
pop
movsb
mov
out
jbe
gs
or
mov
in
lcall
xlat
andb
jne
mov
les
push
push
mov
adc
add
or
push
pop
mov
pop
pop
push
popf
sahf
loop
sub
int
cwtl
imul
mov
xchg
hlt
das
lahf
rcll
popf
dec
xor
pop
idiv
dec
mov
pop
test
xchg
stos
sub
push
icebp
push
call
jp
bound
pop
cmp
mov
pop
loope
mov
xchg
push
mov
mov
mov
fisttpl
dec
test
pushf
out
dec
jmp
sub
pushf
inc
std
mov
mov
dec
add
aad
cmp
outsl
out
xor
hlt
ljmp
lds
lret
mov
push
popa
mov
xor
sub
pop
pushf
pop
imul
into
mov
push
pop
xor
adc
inc
mov
mov
cmc
shlb
or
push
jmp
push
jne
ret
mov
pop
push
xor
sbb
mov
inc
lret
addl
or
mov
popf
out
dec
and
imul
xor
ss
xchg
fbstp
xchg
mov
add
jecxz
ret
les
and
push
int
mov
mov
in
xor
lea
out
repnz
adc
bound
jg
cmp
ret
ja
lods
andl
std
jne
cmp
mov
out
add
add
jne
imul
cmpsb
fimull
aaa
mov
sbb
sbb
stos
lea
lret
into
sbb
ss
hlt
jbe
jmp
pop
mov
push
or
pushf
inc
ret
sub
xlat
pop
ret
dec
ficomps
int3
push
jmp
test
mov
data16
jl
addb
xchg
mov
jno
imul
pushf
stos
dec
lock
lcall
lahf
mov
add
jmp
xlat
sub
xchg
sub
push
iret
push
setb
add
xchg
add
dec
jbe
mov
fcoms
xor
mov
pop
aad
lds
in
je
or
dec
cld
adc
das
or
or
xor
das
cmp
or
xorl
sbb
mov
inc
xchg
jo
je
inc
push
inc
push
xchg
add
jecxz
rcrl
es
scas
jne
orl
pop
sbb
lcall
mov
push
loop
adc
jne
pop
nop
test
imul
or
shll
pop
mov
sub
scas
and
pop
pop
jae
stos
cmc
dec
faddp
ud2
or
fadds
cli
sti
nop
jb
xchg
cli
or
loope
mov
or
mov
cmp
adc
std
jecxz
aam
pop
icebp
das
out
dec
cld
sar
add
cmpsb
cmp
or
xor
ret
std
add
fdivrp
pop
dec
mov
test
xchg
mov
je
push
hlt
outsb
push
inc
push
or
dec
add
dec
lcall
gs
dec
scas
jae
inc
aad
int3
and
pop
push
add
mov
xor
callw
mov
sub
stos
shrb
push
push
cmpsb
push
cmp
sub
push
mov
add
adc
cs
jne
pop
loopne
mov
and
pop
push
loopne
sbb
out
xchg
test
loop
or
cmp
mov
dec
insb
cmp
int3
shrb
or
fidivrs
xor
push
aaa
pusha
andb
inc
in
mov
in
pop
or
in
fidivl
das
inc
ja
cmp
test
nop
in
cmpsl
iret
add
sub
mov
lret
add
mov
ret
cmp
sub
enter
std
xchg
insb
stc
nop
imulb
movsl
or
js
gs
inc
xchg
fistl
mov
testb
mov
ja
test
mov
jle
fsts
xor
lahf
pop
mov
mov
dec
sub
cmpsl
cmp
sbb
aam
or
pop
je
lock
loop
sub
xchg
movb
xchg
add
mov
push
sbb
jmp
lcall
mov
or
fisubrs
push
push
js
jecxz
mov
xchg
es
scas
in
fdivr
mov
gs
sahf
lock
test
mov
imul
or
mov
mov
stos
mov
mov
pop
int
lahf
lock
mov
pop
imul
push
push
or
inc
ss
dec
jae
int3
sarl
mov
popa
icebp
sbb
push
push
lea
ds
or
add
into
sbb
cs
in
clc
fidivl
pop
stos
cli
ja
divl
jl
mov
mov
inc
xor
fucomi
sti
js
stc
in
sbb
imul
fcomps
dec
jl
jl
lcall
mov
std
into
int
mov
test
add
scas
or
cmp
in
pop
adc
mov
pop
sbb
jnp
cld
sbb
xor
inc
or
pop
lret
xchg
add
shrl
mov
cltd
push
ds
cmpsb
inc
jo
dec
aas
mov
add
xlat
popa
adc
and
sub
sub
lock
or
addl
xchg
clc
push
adc
mov
ja
push
lret
fbld
and
scas
loop
js
xor
shll
fldt
mov
enter
out
or
pop
xlat
je
lret
mov
sbb
push
mov
aas
cmp
jo
cmpsl
roll
scas
bound
jp
fldcw
call
push
push
or
hlt
xor
fldl
inc
mov
mov
xor
push
sbb
add
jbe
dec
pop
test
repnz
dec
mov
pop
xchg
cmp
xchg
ret
pop
mov
and
bound
jo
push
push
pushf
scas
pop
mov
mov
adc
pop
xchg
jo
inc
pusha
xchg
dec
or
mov
xor
push
aas
and
and
pop
dec
jmp
cmp
pop
les
mov
repz
into
dec
or
cmp
repnz
stos
sub
call
jns
or
adc
insb
lret
dec
outsl
data16
dec
and
inc
push
dec
divl
fwait
adc
cwtl
jl
cmp
int3
scas
jecxz
hlt
icebp
cli
cmp
das
mov
cmp
push
xor
mov
in
aad
mov
mov
adc
movsl
dec
shrl
clc
scas
aaa
cli
test
movsb
stos
inc
or
mov
scas
pop
clc
scas
push
sbb
mov
fwait
push
mov
jg
shl
test
pop
ficoms
cltd
ret
sub
dec
xchg
aaa
cmc
dec
adc
test
imull
jge
adc
jg
pusha
jl
push
test
movsb
dec
inc
jnp
mov
lcall
into
ljmp
dec
or
in
sbb
jnp
ljmp
test
insb
mov
fldenv
dec
xor
mov
fimuls
jle
outsb
cli
lea
movsl
sub
adc
xor
and
xchg
rcr
mov
ret
sub
adc
xor
push
inc
in
popa
dec
lahf
rcrl
dec
sbb
aad
sub
pop
aad
and
cmp
mov
push
lods
scas
call
lret
scas
pop
mov
inc
sbb
adc
pushf
push
cmpsl
xlat
into
ficomps
cmp
in
push
pushf
mov
push
mov
xchg
inc
mov
imul
movsl
cld
cmpsb
subb
fmul
idiv
fbstp
cmp
jge
xchg
fdivs
mov
or
sbb
movsb
lods
and
shlb
push
leave
mov
je
mov
mov
leave
add
cmp
orl
jmp
addb
hlt
lret
out
idiv
unpcklps
stos
sbb
adcb
fwait
ret
pop
mov
outsb
shl
dec
out
inc
cmp
leave
xchg
sub
cmpsb
sarb
pop
xchg
xlat
aad
mov
dec
js
rcl
cli
or
mov
xchg
out
mov
and
repnz
arpl
pop
and
mov
gs
inc
adc
jecxz
sahf
mov
lods
fdivr
sbb
cli
daa
movsl
inc
adcb
add
shll
cs
cmp
clc
cmpsl
push
jmp
jmp
add
xchg
cmpsl
imul
jb
and
mov
and
loop
scas
into
sub
nop
aam
cltd
xchg
test
lods
add
push
lea
loopne
inc
xor
xchg
inc
ret
int
inc
mov
xchg
push
popf
adc
inc
lods
mov
or
ret
ret
add
mov
popf
sub
das
or
imul
jge
push
xchg
cmp
cld
push
and
hlt
adc
or
in
or
jb
jbe
cmc
inc
jmp
mov
inc
dec
call
mov
jnp
mov
and
out
aaa
mov
aaa
xchg
pop
pop
fisttps
jge
fidivs
add
adc
scas
inc
mov
cwtl
push
push
aam
mov
fwait
pop
sbbb
inc
decb
aam
mov
sbb
cmpsl
sub
sub
xchg
jecxz
lds
adc
aas
push
ret
push
scas
int3
dec
cmpb
out
lds
xchg
cmc
movsb
loopne
jae
loopne
pop
sbb
aam
mov
es
or
or
cmovg
xchg
inc
add
rep
push
mov
dec
rcr
daa
sti
add
or
push
jae
mov
cmc
outsb
jbe
mov
dec
loope
nop
roll
and
jne
outsb
imul
add
pushf
pop
testl
ror
cmp
jp
push
int
bound
push
and
add
test
cmpb
sbb
inc
out
mov
jl
push
add
or
mov
loop
sub
leave
hlt
pop
xor
and
dec
sub
orb
and
mov
subl
adc
or
mov
shr
sub
fsts
popf
and
hlt
dec
int3
call
shll
jne
das
mov
sarb
js
push
test
sti
clc
push
xor
sbbl
scas
pop
arpl
inc
out
and
push
es
cmp
test
mov
mov
sbb
xor
data16
adc
stc
arpl
xchg
pop
ss
or
mov
cwtl
xor
cmc
push
cs
jbe
addb
jp
in
in
mov
push
les
pushl
xchg
sub
inc
cmp
mulb
or
jnp
loopne
addr16
mov
andl
lret
jecxz
xorl
xor
sbb
daa
xchg
sbb
in
push
dec
mov
das
or
stc
lock
icebp
inc
mov
getsec
aas
push
push
ret
push
add
ds
addr16
mov
xchg
fs
gs
mov
pop
out
pop
inc
nop
ffreep
pusha
push
andb
cmpsb
add
lret
ret
xchg
jmp
and
outsb
xor
aam
lcall
push
movsb
ja
shlb
cmc
adc
mov
movb
mov
movsl
js
adc
cs
jnp
or
popl
push
outsb
push
or
cmp
insl
int
stos
cmp
mov
push
pop
aaa
sub
pop
sub
jmp
in
push
ret
call
and
out
es
add
mov
int
mov
pop
sub
xor
icebp
mov
cmc
aad
ss
xor
or
mov
xchg
rolb
sarb
dec
or
mov
lods
mov
mov
dec
in
aaa
cmpsb
insl
xchg
xcrypt-cfb
cmpsl
es
or
lods
mov
ret
inc
mov
sbb
mov
test
mov
mov
add
fmuls
fnstenv
rorb
mov
jnp
les
out
pop
test
or
ja
push
repz
adc
xchg
sti
repnz
into
in
lea
gs
adc
out
rol
push
cltd
pushf
jmp
cmp
pop
add
hlt
jno
dec
outsl
stc
xchg
pop
and
cmp
mov
jecxz
pop
push
sub
jo
mov
xlat
xchg
movsb
pop
repz
hlt
divl
fcom
dec
jge
rclb
push
pop
insl
dec
movsl
int
inc
add
leave
in
cmpsb
xor
ja
mov
repz
fmull
arpl
and
decb
cmp
ja
ds
fnstsw
test
rorb
dec
inc
negb
push
xor
frstor
or
mov
mov
loop
cli
nop
or
mov
lahf
sbb
inc
pushf
mov
adc
pop
aam
inc
jge
add
mov
push
pushf
inc
pop
shll
out
pop
xchg
pop
fildl
testl
ja
aad
pop
test
add
mov
dec
add
push
mov
push
cs
mov
xor
pop
sti
xor
movsl
jbe
push
mov
fisubrl
sbb
sti
push
push
mov
pusha
cmpsl
aas
dec
std
mov
mov
xor
push
pop
xchg
loopne
lock
sbb
leave
scas
pop
add
mov
int3
mov
push
fcmovu
xchg
out
adc
loop
push
fstl
xor
scas
pop
inc
or
cltd
push
mov
jae
mov
mov
cmp
pop
pop
mov
pop
inc
inc
mov
dec
and
sbb
aad
sbb
xchg
outsl
add
outsl
aad
sti
sbb
fs
jl
xchg
jle
into
dec
pop
inc
insl
aas
push
pop
pushf
int
xchg
cmp
fldl
add
dec
je
dec
xchg
in
fs
adc
pop
inc
out
lea
rclb
bnd
pop
inc
mov
repz
add
lock
adc
rol
es
add
pop
xlat
pop
ja
repz
in
testb
inc
shlb
aas
cmc
inc
lea
and
inc
push
jnp
sbb
cmp
shlb
xor
mov
mov
xchg
cs
dec
sti
xchg
addr16
pusha
aad
test
cmp
dec
and
xor
das
fs
daa
popf
nop
jg
or
jl
bound
jg
pop
jge
add
daa
or
push
push
into
push
inc
lods
lret
out
out
push
arpl
lahf
push
inc
in
or
ret
xor
shl
adc
pop
pop
insb
in
or
scas
dec
es
lcall
sub
out
mov
jne
nop
inc
and
dec
inc
sub
pop
mov
scas
pop
loop
cltd
mov
sarb
mov
btcl
jge
jmp
push
fnstcw
outsl
adc
or
push
mov
hlt
cmp
inc
mov
icebp
and
xor
jno
mov
jmp
es
shrl
sti
push
sbb
mov
and
insb
and
je
and
hlt
and
xlat
mov
mov
adc
mov
mov
aas
push
push
test
stos
insb
dec
cmp
mov
fs
xor
outsb
xchg
add
icebp
out
jecxz
sbb
and
push
dec
in
insb
repz
mov
adc
push
arpl
jge
adc
sbb
mov
dec
cwtl
mov
or
and
sbb
mov
test
mov
inc
push
lcall
pop
push
adc
sub
test
inc
es
jmp
sbb
add
test
ss
add
rcr
jecxz
xchg
inc
jmp
cmp
adc
and
jmp
out
sub
mov
lahf
xlat
cmp
sbb
or
ror
pop
push
cmpsl
out
leave
out
push
cmp
iret
pop
stos
movsb
popa
sbb
jnp
dec
sub
sub
sbb
lods
jecxz
daa
mov
cmp
inc
xchg
call
js
jg
insl
cmc
and
mov
pop
mov
xchg
xchg
repz
lods
leave
test
mov
lret
pop
lret
mov
mov
int
in
adc
cmc
push
adc
add
xchg
push
aaa
shlb
add
mov
test
icebp
pop
cmp
rcrb
jp
int
jg
sub
mov
jnp
ret
adc
push
jp
xchg
fldenv
gs
inc
sbb
repz
xor
fs
pushf
xchg
mov
mov
and
je
inc
or
not
fidivl
insb
add
mov
pop
dec
loope
ret
jne
hlt
adc
jno
fildl
add
lcall
jns
xchg
xor
ret
xchg
xor
test
pop
and
movsb
out
xlat
push
pop
icebp
adc
lods
repz
out
or
jle
mov
lea
pushf
lahf
icebp
xor
gs
rclb
jno
inc
pop
scas
or
rcl
fwait
leave
mov
xchg
jo
add
fldt
sbb
mov
mov
jle
xchg
test
pop
mov
les
mov
push
lret
ljmp
out
pushf
lcall
mov
sbb
inc
loop
dec
jne
lret
jns
aaa
lock
pop
sub
negl
mov
mov
pushl
jmp
mov
jb
push
mov
inc
cmp
cmp
mov
xor
pop
outsb
xor
test
pop
dec
mov
adc
in
inc
into
in
cwtl
xchg
cmc
cmpsb
push
es
pop
cld
pop
jl
sbb
pushf
ja
fs
mov
popa
in
fiaddl
add
aaa
out
jecxz
and
add
aaa
lods
sbb
xlat
mov
mov
jl
into
loopne
mov
adc
sub
sub
sbb
movsl
rcll
outsb
push
ficoms
adc
fsubl
mov
scas
jae
push
cld
and
dec
mov
xor
fdivs
dec
outsl
jno
movsb
hlt
data16
outsl
fxch
rol
sub
loop
adc
adc
adc
mov
pop
mov
and
mov
inc
sub
ja
dec
push
mov
jnp
shll
add
in
sbb
jp
jp
sbb
xchg
mov
mov
out
outsb
pushf
and
movsl
inc
mov
lods
jbe
lds
add
incb
std
inc
ljmp
dec
mov
shrl
negl
cmpl
add
push
aas
mov
sbb
adc
ret
sbb
fwait
in
test
lahf
cmpb
push
popa
xor
xchg
push
into
clc
in
cmp
adc
aam
nop
icebp
adc
cmc
loop
mov
xchg
lahf
push
or
lods
hlt
sub
add
mov
test
cmp
adc
jo
xorb
pop
loopne
pop
add
mov
cmp
inc
test
ss
dec
xchg
sub
stc
ret
sbb
xor
push
xor
xorb
lahf
movsb
mov
fs
fnstsw
xchg
std
mov
mov
iret
test
lea
mov
leave
dec
cmp
jnp
test
aad
aad
dec
push
mov
pop
int3
or
imul
lcall
in
adc
dec
mov
repnz
ja
xchg
cmp
or
jb
iret
sahf
aam
pop
ret
or
rcl
mov
daa
psrld
nop
mov
in
jae
and
lods
outsl
and
ja
xchg
dec
les
mov
leave
scas
jne
negl
aad
mov
push
int3
js
dec
arpl
xor
popf
xchg
mov
add
sub
adc
sub
dec
fidivrs
inc
cmpsl
xchg
mov
mov
cltd
imul
jg
shrb
scas
cmp
mov
push
cmp
sub
loope
inc
mov
fcomps
lods
pop
icebp
test
cmpsl
fists
push
mov
lcall
movsl
pushf
mov
test
ss
test
push
ss
push
or
pusha
lock
xor
popa
imulb
hlt
mov
cmpsl
lods
and
sub
loope
add
mov
leave
shlb
call
idiv
insl
mov
cmp
sbb
xor
gs
mov
sub
pop
jbe
sbb
pusha
sbb
mov
cmp
scas
repz
push
std
rclb
fmuls
jg
mov
nop
insb
shlb
inc
aas
cld
push
and
cmpl
test
or
jno
sbb
adc
jmp
lcall
mov
push
adc
inc
pop
xor
xchg
int
js
shl
or
movsb
movsl
mov
sbb
test
insl
adc
sbb
in
pop
scas
int
fsubl
pop
dec
or
sbb
adc
popa
dec
xlat
jmp
cmpsb
cmpsb
dec
mov
jg
lods
loopne
popa
jno
cmc
hlt
popf
loop
xchg
xchg
and
call
push
xlat
aas
pop
push
inc
es
add
fwait
push
sbb
lea
arpl
ficoml
mov
fcoml
mov
push
stc
add
cmc
xchg
pop
cmp
shll
rol
xor
mov
pusha
sti
cmpl
mov
jg
push
lods
in
lret
mov
mov
jl
mov
cmp
mov
or
mov
push
push
icebp
popf
std
and
pop
in
les
popf
mov
inc
cmp
lret
cld
test
mov
es
adc
lods
xchg
xlat
mov
pop
push
hlt
lds
push
pop
subps
mov
adc
push
lock
sub
aaa
out
and
pop
mov
dec
lock
lea
cmp
pop
pop
jge
enter
int
es
jmp
int
pop
xchg
repnz
repnz
xchg
add
mov
out
inc
hlt
out
in
std
mov
jno
in
in
outsb
ds
adc
sar
push
mov
add
dec
pusha
stc
dec
loop
aam
pop
jb
jmp
sbb
jno
sub
pop
rcrl
fbld
xchg
adc
mov
bound
popa
das
lods
negb
test
jge
pop
mov
pop
aad
setb
push
adc
pop
mov
sar
add
dec
mov
mov
stc
pushf
push
test
test
mov
adc
js
test
cmp
inc
test
ficoml
addb
cmpsb
mov
adc
shl
mov
jg
int3
insb
push
and
rclb
pop
sub
sub
out
jae
pushf
inc
xlat
and
cwtl
test
mov
adc
push
sub
es
lret
iret
setae
xor
xor
push
and
xor
sbb
dec
sbb
sbb
mov
jns
cmp
scas
mov
inc
xchg
lret
jne
push
lds
or
loopne
cmp
and
sbb
sub
je
sub
jns
push
pusha
std
and
xchg
mov
mov
mov
mov
xor
ficomps
int3
fidivrs
mov
pop
push
inc
mov
jno
push
inc
sbb
ret
xchg
adc
pop
inc
cmp
daa
ljmp
addl
ja
sub
cmp
push
ret
and
adc
mov
fldenv
in
lock
jecxz
daa
out
push
inc
add
jo
mov
xchg
aas
es
mov
sarl
loop
movsb
mov
test
mov
jns
out
fmulp
mov
xchg
outsb
shl
imul
je
sub
mov
ljmp
daa
rcll
mov
push
adc
jmp
mov
pop
pop
or
aas
outsl
xchg
mov
pop
mulb
icebp
movsl
ret
in
xor
add
loop
out
jbe
sub
xchg
mov
jge
and
int3
add
push
dec
mov
andl
testb
mov
in
add
adc
jle
fdivrs
jbe
fcomps
sub
pop
jb
pop
xchg
lcall
popf
or
sbbb
dec
addl
div
jne
dec
aam
push
lock
iret
sub
sub
and
jmp
shll
jo
aad
push
mov
and
mov
xchg
xor
push
test
rcrl
mov
push
scas
scas
shrl
adc
mov
subb
aad
add
pushf
sub
stc
cmp
mov
mov
inc
push
jbe
or
xor
daa
ljmp
fmuls
push
add
sub
adc
pop
xor
es
pop
jb
bound
cli
jnp
sbb
inc
and
adc
movsl
push
repz
xchg
cmc
shrb
das
sbb
push
pop
push
inc
lar
or
scas
shrb
loopne
popl
or
movsl
clc
cltd
xlat
mov
aam
or
hlt
cmp
mov
negl
mov
jecxz
bound
das
loop
andb
cmp
push
mov
or
subb
sahf
dec
sub
inc
push
aas
xchg
fdivrs
or
adc
xor
pop
into
leave
xor
pushf
in
je
lahf
cmp
in
in
inc
xor
in
mov
frstor
leave
jb
stos
js
jp
sbb
push
or
jge
cmp
jge
dec
inc
lods
test
xlat
mov
pusha
data16
inc
mov
or
xor
mov
mov
xor
or
dec
push
xchg
iret
inc
xor
pushl
lods
jge
inc
lcall
mov
jns
pop
and
cmp
adc
idivb
pusha
fisubrs
pop
imul
out
imul
pusha
les
jb
inc
flds
add
addl
jnp
cmpl
imul
dec
xor
or
mov
and
gs
aaa
arpl
mov
mov
mov
int
dec
mov
mov
cmp
push
lret
xor
adc
or
add
and
fs
fs
sbb
stos
lret
push
bound
or
js
mov
cmp
icebp
cmc
push
cmp
xchg
jmp
shrl
xchg
jns
fidivrs
ss
inc
adc
mov
sar
fisttpl
pop
push
push
jns
mov
push
cmp
push
mov
jp
xor
orl
sbb
mov
cmp
test
jle
fidivs
add
sbb
outsl
icebp
mov
outsl
lcall
sbb
xor
cmpl
and
cmp
pusha
sti
scas
testb
pop
ror
and
sahf
mov
jecxz
jp
inc
jl
out
adcb
fnstsw
xor
cmp
sbb
ficompl
cmc
aad
mov
push
movsb
cmp
push
cltd
xchg
repz
jns
jae
xlat
mov
and
push
sarl
inc
orps
jne
int
cltd
pop
jo
js
call
pop
insb
and
fcmovbe
orl
ret
enter
inc
mov
pusha
in
mov
inc
repz
cmc
pushf
lods
clc
inc
bound
in
popf
pop
inc
out
outsl
fistpl
gs
xor
cwtl
dec
xor
sbbb
mov
sti
ljmp
mov
push
mov
ret
fstps
imul
mov
push
sbb
mov
push
ljmp
addr16
adc
jns
jp
cmp
pop
cltd
add
outsb
sbb
xor
sbb
stc
iret
std
or
cmp
pop
je
or
jge
sub
jne
bound
xchg
sarl
dec
push
or
mov
adc
jge
fwait
push
cmp
push
jp
jns
jne
adc
addr16
cltd
scas
xorl
mov
imull
dec
xchg
mov
lods
sbb
mull
dec
push
or
mov
push
adc
inc
imul
mov
outsl
mov
mov
ss
add
dec
in
jo
xor
sub
dec
aas
push
test
int
popf
mov
fistpl
sti
cmp
push
sbb
sbb
sub
adc
imul
pop
jbe
stc
push
and
inc
stos
push
fs
or
in
fdivrs
and
or
jae
sbb
inc
xchg
jno
mov
cmp
push
aaa
cmc
ds
fwait
pop
adcl
sub
hlt
aaa
lods
xlat
dec
data16
dec
fwait
sub
cmp
sbb
pop
pop
pop
inc
jno
xlat
ret
outsl
jge
xchg
xchg
insl
fidivrl
test
je
mov
mov
pop
in
cmp
xchg
mov
xchg
dec
jecxz
inc
test
xchg
lock
lret
push
fimull
mov
orb
and
lock
lods
push
pushf
jb
test
in
inc
cld
xor
mov
mov
inc
or
inc
or
lds
test
mov
insb
out
cmpsl
dec
dec
call
rcrb
rclb
subl
inc
or
and
push
and
inc
insb
jno
loop
add
ret
cld
popf
call
jbe
addl
dec
adcb
cs
movsb
push
negl
loopne
jmp
dec
add
pusha
cmp
test
int
call
lret
jecxz
lcall
push
daa
and
mov
inc
jb
push
fstp
hlt
fs
jno
stos
jnp
psrlw
out
jmp
popa
mov
arpl
xchg
adc
out
scas
and
sbb
mov
jl
add
addl
pop
pop
mov
mov
add
xchg
lret
aas
xchg
push
addr16
jno
and
outsl
fnstenv
or
and
inc
push
add
or
xchg
and
pop
pop
cmpsl
mov
icebp
jmp
inc
stos
sbb
xchg
insb
dec
jno
roll
shrl
popf
pop
jne
mov
cmp
push
jg
ss
mov
inc
repnz
xchg
pop
mov
push
xchg
ja
pop
insl
dec
imul
xchg
test
ja
pop
xor
lcall
idivl
ljmp
js
cmp
imull
pop
jnp
sbb
cmpsb
xchg
imul
loopne
roll
pop
pop
fstp
mov
xchg
push
sub
lahf
jmp
nop
xor
insb
and
daa
out
adc
pushf
sub
sub
stc
icebp
sbb
out
sarb
shr
jl
dec
dec
push
aaa
rorl
sbb
pop
movl
cmpsb
sbb
cmpsl
pop
xchg
xor
mov
inc
jae
lret
das
mov
jb
sbb
mov
mov
sbb
or
pop
add
cmp
xor
fdiv
inc
shll
dec
jmp
mov
xorb
bound
cmp
cmp
imul
insl
push
push
lahf
sub
into
lods
inc
testl
inc
dec
add
push
inc
push
push
mov
clc
add
and
cmp
cmp
mov
dec
jg
repz
mov
pop
dec
fsubl
daa
ss
std
jp
adc
fdivrl
lock
cmp
xor
imul
xor
jl
xor
sub
xchg
and
mov
daa
in
std
fstps
aam
inc
daa
and
adc
orb
dec
sbb
jne
or
shlb
xchg
mul
add
out
mov
lea
dec
roll
add
aas
mov
nop
push
jo
inc
mov
int
mov
cmpl
or
fldcw
pop
mov
xlat
sti
jbe
mov
pop
cmp
rclb
jge
lock
sub
lcall
test
add
add
fmull
push
cmp
enter
adc
inc
mov
stos
iret
or
pop
ljmp
addr16
lock
xor
mov
xor
sbb
mov
loopne
stos
shl
stos
and
dec
dec
push
pop
add
cmp
fnclex
js
jbe
mov
jg
ss
lea
xor
popf
jne
fidivs
mov
adc
cs
aam
mov
rol
dec
mov
sarb
lcall
icebp
xchg
adc
sub
pushl
adc
aas
mov
pop
pop
repz
and
inc
pop
sub
inc
lea
xchg
xor
pop
dec
cmp
shrb
push
negb
fimuls
stos
inc
sub
xor
sub
sti
out
in
pop
leave
jae
pop
fistpll
mov
test
aam
clc
stc
out
nop
xlat
push
adc
cli
xor
add
mov
pop
jae
leave
add
adc
mov
adc
inc
mov
sub
shlb
notl
fsubs
mov
test
repz
adc
or
movsl
icebp
mov
xchg
pop
lret
xor
xlat
push
stc
lods
lahf
cld
cmpsl
icebp
fnstenv
rol
xchg
cli
mov
in
lock
mov
xchg
fdivrs
lcall
jle
loope
enter
std
xchg
pop
sub
insb
sti
mov
pop
mov
out
scas
inc
int
bound
ds
dec
cmp
mov
push
or
push
sti
pop
push
cmp
xor
adc
or
dec
sub
test
adc
push
pop
mov
or
test
xchg
hlt
jp
pop
aaa
xor
repz
fimull
jnp
jmp
mov
sahf
jns
push
lock
arpl
shll
mov
clc
mov
and
add
jmp
aas
je
cli
out
and
dec
push
pop
iret
mov
add
cmp
dec
pop
push
fxch
pop
sbb
adc
arpl
lret
jb
hlt
hlt
js
and
adc
add
jno
scas
scas
pop
fnstsw
sub
pushf
iret
repz
jge
cmp
inc
into
adc
rcr
push
outsb
dec
in
stc
xchg
scas
test
daa
fdivrs
push
in
in
pop
mov
and
lcall
ret
push
push
loop,pt
or
js
jns
paddq
cmp
xor
nop
cmp
out
sbb
fldl
cwtl
xchg
jle
add
push
pop
imul
and
or
aas
pop
adc
fldenv
in
inc
xchg
or
adcl
aas
pop
xchg
shll
mov
pop
inc
cmp
cmp
mov
push
dec
stos
or
shll
push
pop
pop
xchg
push
bound
add
mov
in
movsl
mov
mov
fadds
test
mov
subl
loop
cmp
in
les
and
or
dec
frstor
add
pushw
push
sbb
mov
pop
int
xor
push
aaa
cmp
out
dec
fstpt
inc
mov
test
sarl
jne
mov
mov
jge
mov
cmc
cmp
inc
jle
jmp
ljmp
xor
pop
ds
imul
call
rol
es
jmp
add
or
mov
or
repnz
fcoml
pushf
xorl
ja
xor
push
mov
lea
sbb
mov
pandn
jp
and
outsl
loope
lea
lods
inc
cwtl
or
sbb
testl
rcrb
data16
addr16
aad
mov
das
pop
mov
out
nop
jns
jb
into
aas
insb
xchg
jne
fists
fcmovbe
fstpt
fwait
cld
push
jg
mov
sbb
sbb
cmpsl
xchg
sub
jl
imul
aaa
test
mov
jb
aam
pop
repz
movsl
sub
loopne
and
shll
and
outsl
inc
mov
add
sarl
or
scas
push
adcl
or
movsb
jge
xlat
pop
lods
adc
lret
inc
fisubrs
jnp
scas
sub
mov
scas
mov
dec
inc
cmc
mov
dec
in
arpl
pop
rcrb
jae
pop
sbbl
inc
inc
shl
orb
stc
jns
inc
pop
aas
pop
aam
lret
scas
sbb
mov
sbb
sub
mov
or
and
ss
push
jge
adc
push
outsb
scas
ja
nop
in
adc
subl
xor
shrl
repz
jne
cmp
lcall
adc
pop
iret
mov
push
dec
xor
testl
jle
mov
xor
icebp
sbb
mov
arpl
xor
in
lock
mov
push
jae
push
mov
xor
push
daa
push
sbb
ja
pop
jmp
lret
scas
xchg
enter
or
mov
sbb
fistl
jo
ret
adc
fcmovne
dec
mov
jo
lea
or
add
mov
les
dec
scas
std
arpl
push
xor
inc
lods
nop
cmp
cmp
and
stos
or
ds
adc
jns
outsl
divl
shll
stos
mov
es
and
inc
seta
into
jb
test
cmpsb
pop
mov
out
pop
negb
ret
cmp
mov
ja
aas
mov
jp
mov
je
and
in
loop
addl
and
scas
lret
fsubr
loope
stos
jecxz
addb
lret
fisttps
or
mov
dec
jg
jg
shr
push
es
popf
cmp
loope
mov
xchg
insl
inc
repnz
sbb
push
dec
mov
out
lcall
dec
pop
pop
lahf
mov
cltd
sbb
and
lods
insb
xchg
in
jns
lods
jl
sbb
rorb
sbb
iret
sbb
pop
xchg
adc
cmp
xchg
loop
xchg
and
mov
inc
adc
mov
subl
xabort
or
mov
inc
lcall
cltd
pop
jp
push
out
fstpl
dec
sahf
insb
mov
ret
fdivrl
ja
std
cli
push
cmp
inc
add
repz
jg
arpl
push
in
lods
into
cmp
inc
and
adc
clc
gs
dec
add
sbbl
stos
in
mov
sbb
mov
sbb
xor
dec
imul
js
xor
aad
movsl
shrl
inc
dec
fstpl
inc
shll
and
add
jns
mov
sub
out
loope
pop
or
call
mov
mov
xchg
mov
xchg
sub
dec
pcmpeqb
nop
sahf
out
popf
roll
sub
arpl
jl
push
ret
dec
in
fsqrt
test
sub
jge
or
gs
mov
imull
mov
cmp
jns
pop
gs
ljmp
xchg
sub
or
xor
jmp
push
cmp
sbb
mov
int3
ja
sahf
adc
xlat
mov
decl
mov
sub
cmp
sbbl
adc
popf
dec
and
jg
outsl
out
lahf
dec
jle
push
adc
stos
xor
out
int
sarb
ss
push
addr16
popf
xchg
pop
sub
sbb
aas
xchg
jae
leave
mov
mov
fstps
test
cli
mov
and
sahf
or
jmp
cs
lds
add
mov
aaa
and
jno
mov
add
popf
sahf
pop
add
aad
adc
sub
push
mov
bound
and
sbb
and
mov
mov
xchg
lds
jl
and
ret
pusha
fstpl
pop
es
push
pop
daa
scas
cmp
ljmp
scas
repnz
lods
divb
ss
sub
lahf
inc
test
inc
repnz
adc
mov
lret
sub
pop
ds
and
arpl
jns
mov
sub
pop
shll
or
aam
fiaddl
xchg
xor
push
clc
and
xor
or
imul
daa
inc
inc
je
add
shrb
rcll
int
adc
daa
push
movsb
mov
sbb
cs
mov
movsl
popa
push
mov
xor
or
sbb
sub
add
nop
add
jge
lds
pop
lret
faddl
mov
lea
and
callw
sti
iret
add
jb
sbb
fsubl
xlat
mov
push
or
les
aad
cmpsb
add
add
push
inc
jb
movsb
push
jne
mov
mov
rcl
cmpsb
loop,pn
mov
in
addb
das
adc
or
in
fisubs
movsl
sub
push
addr16
lea
fs
jmp
push
or
scas
mov
inc
rcr
mov
mov
lahf
filds
lcall
push
sbb
or
inc
mov
std
pop
lret
out
cld
repnz
mov
movsl
jae
outsb
js
loope
mov
pop
add
cwtl
or
mov
push
loop
faddp
dec
mov
push
das
push
cltd
iret
shl
and
out
cmp
pop
pop
orl
lods
xor
xchg
hlt
stc
adc
jecxz
cmp
inc
inc
ret
inc
push
sub
fidivrl
inc
cmpsl
out
or
pop
cmp
mov
rolb
xor
jp
nop
jl
cmpsl
and
clc
adc
negl
imul
xchg
mov
fimuls
push
icebp
xor
bound
cli
lds
push
xor
jle
and
xchg
int
imul
pop
cltd
insl
pusha
aas
andl
inc
cmpsl
loope
mov
lahf
mov
push
push
ret
loop
cmp
sbb
movsl
adc
and
cmp
or
pop
int3
mov
aas
rorl
dec
xchg
fcmovnbe
mov
ljmp
adc
add
test
fmulp
push
sub
mov
xchg
out
and
shrb
shlb
inc
xor
fsubr
lcall
cmp
aaa
lret
inc
mov
xchg
or
jae
xchg
mov
mov
sbb
sbb
out
pushf
pop
data16
pop
push
lock
and
sub
out
andl
mov
icebp
sbb
iret
pop
xor
push
cltd
dec
into
ret
xchg
test
push
popa
in
cmp
adc
push
inc
and
loope
sub
push
fwait
and
jl
jmp
ret
cmc
iret
inc
xor
mov
push
xor
sub
fisubs
mov
sbb
ret
pop
mov
push
mov
loop
test
pop
sub
xor
sbb
mov
inc
mov
fisubs
cmpsl
adc
cmp
movsl
mov
and
test
call
xor
stos
mov
lds
fisubs
xlat
mov
adc
imul
fisubrl
sub
pop
mov
push
rclb
in
es
jp
mov
ret
popa
scas
xor
addl
mov
add
mov
int3
gs
out
mov
xor
out
pop
or
les
aaa
cltd
fidivs
scas
mov
lods
ds
fcmovu
js
in
adcl
bound
sub
js
insb
and
ja
push
bound
xorb
movsl
inc
mov
lods
ja
sub
mov
pop
or
dec
in
add
pop
mov
lret
fsubrl
lret
lea
stos
push
jnp
out
out
imul
imul
int
in
mov
aam
add
add
sub
inc
mov
fisttpll
jne
ret
pop
sti
xor
stos
dec
bound
out
inc
mov
lret
xchg
cld
nop
test
xchg
mov
sbb
into
mov
imul
loopne
cmpb
aas
and
jae
xchg
jb
jb
ja
sbb
mov
nop
mov
daa
pushf
js
inc
mov
push
lret
xchg
insb
fwait
push
dec
xor
mov
jl
jle
xchg
repnz
fs
in
mov
add
mov
pop
cltd
popa
cmpsb
fidivrs
ret
in
xchg
mov
adc
xor
xchg
sub
add
push
cwtl
jle
adc
cld
jg
in
xchg
cmp
xlat
lods
mov
lea
testl
addb
and
scas
add
stos
ja
fiadds
pop
lods
adc
pop
dec
mov
jno
lds
repz
sbb
pushf
inc
dec
scas
push
inc
fsubrl
cld
popa
jp
ljmp
repz
jle
cmp
xchg
aaa
lahf
and
push
mov
jo
negb
push
sbb
insb
fwait
mov
or
jp
outsb
or
lds
mov
loop
and
or
leave
imul
shl
outsb
iret
jmp
stos
push
mov
sub
pop
xor
icebp
push
xor
pop
jle
add
pop
sti
jne
sbb
pop
das
mov
ret
mov
mov
popf
loop
mov
out
fistpl
push
lods
inc
icebp
cmpsl
mov
mov
push
dec
push
jns
and
sbb
push
cmpsb
data16
rorb
enter
sub
or
cmpsb
jle
inc
mov
fs
push
int3
xchg
xchg
std
fwait
fwait
and
and
aaa
fisubrs
sub
test
dec
out
mov
or
xlat
icebp
loopne
xor
lahf
addb
fcmovb
cwtl
inc
rcll
out
out
lea
call
sbb
mov
addb
xchg
pop
mov
scas
popf
and
ret
lods
stos
pop
jns
rclb
push
test
mov
add
bound
std
sbb
lods
stc
sbb
xor
sub
push
mov
push
inc
mov
mov
dec
addl
inc
mov
and
xchg
inc
rcr
inc
enter
movsb
mov
inc
imul
mov
mov
aas
fs
ljmp
stos
push
sub
nop
inc
sub
inc
mov
fdivl
or
lods
sahf
jns
sarl
push
xchg
mov
mov
sbb
or
or
shrl
mov
jge
incl
insl
pushf
xor
inc
inc
mov
xor
inc
rcl
sahf
idivl
lahf
rcrl
mov
movl
ljmp
fwait
mov
dec
es
cmp
mov
mov
adc
dec
cmp
cmp
add
das
mov
jl
repnz
adc
lcall
scas
jl
or
sahf
mov
stc
lahf
pop
jmp
cmp
std
clc
in
popa
cmp
adc
add
loope
xchg
and
inc
repz
xor
mov
jne
push
idivb
and
push
scas
aam
iret
cmp
test
jg
stc
add
shll
stos
fwait
roll
in
jecxz
loope
xorb
mov
ds
xchg
pop
sub
push
clc
lods
fwait
push
loope
gs
sbb
or
dec
hlt
mov
push
mov
icebp
add
repnz
adc
pop
in
add
pusha
repnz
in
push
in
pop
lahf
jno
out
mov
imul
ja
fstp
loop
and
pop
mov
loopne
out
and
jnp
mov
icebp
or
pushf
mov
jg
int3
in
out
or
jle
xchg
adc
mov
fdivs
arpl
push
mov
into
adc
jmpw
clc
cs
xor
lods
xchg
sbb
je
pop
adc
lret
imul
cs
inc
inc
daa
xchg
loope
pop
sahf
lcall
push
lcall
sbb
push
int3
pop
ss
add
xchg
push
push
push
das
aam
or
xor
and
nop
subb
lcall
das
adc
jmp
clc
into
sbb
and
cmp
inc
and
jecxz
mov
pop
loopne
lods
insb
lock
mov
lret
cmp
dec
xor
push
pop
add
push
and
lock
push
add
inc
pop
and
pushf
jp
add
fistl
or
jns
fisubs
xor
dec
hlt
dec
inc
pop
in
xchg
mov
hlt
std
sbb
xor
mov
shr
add
mov
adc
add
bound
lcall
dec
movsl
sub
jo
jp
or
lahf
mov
pop
jl
movsl
push
arpl
or
lea
inc
call
popa
and
mov
jno
aaa
es
and
mov
iret
xlat
lods
loope
xchg
sub
fsubl
test
aaa
into
mov
mov
fcomps
xor
sti
mov
sbb
pushf
cmp
jbe
dec
jbe
sbb
cmp
and
mov
into
popf
sahf
lahf
inc
dec
mov
sahf
movsb
shll
mov
dec
and
xchg
sub
jmp
ret
mov
or
testl
jns
test
js
jnp
jge
pushf
mov
push
dec
pop
int3
mov
sub
mov
jns
js
cld
aam
push
pop
leave
sbbb
lods
dec
push
test
jge
and
and
daa
popf
test
lods
adc
ja
icebp
ja
ds
push
sbb
fisubs
movsl
cmp
repz
rcrl
test
sti
fneni(8087
in
ss
cmpsl
stos
mov
pushf
mov
or
pop
mov
or
ret
xchg
leave
xchg
adc
jae
lods
std
mov
xchg
xor
jp
xchg
mov
mov
repnz
and
pop
insl
pop
xchg
bound
mov
leave
stos
xchg
dec
sbb
iret
cmp
push
push
in
jnp
sbb
stos
call
ja
jns
clc
adc
xorb
icebp
fstpl
xchg
lods
mov
je
roll
jl
into
out
mov
xchg
fiadds
inc
fldenv
sarl
mov
push
add
popf
orb
outsl
pop
pop
pop
push
or
stos
shrb
aaa
pop
int3
cmp
jae
mov
stc
clc
in
jbe
cmc
out
mov
inc
inc
ss
lret
cld
dec
lock
dec
and
cmp
add
dec
testb
mov
jmp
cmp
loop
dec
xchg
adc
mov
aad
lahf
ret
dec
negl
scas
push
popf
jle
pop
gs
inc
je
sbb
cli
or
lock
push
sbb
mov
cmp
fcoms
jmp
xchg
int3
fdivrs
lret
or
into
add
mov
mov
rorb
popf
mov
loopne
push
idiv
and
inc
or
idivb
mul
mov
es
mov
or
or
push
lret
test
jae
scas
xor
int3
or
int
cmp
mov
cld
jecxz
insb
mulb
aaa
xchg
jmp
sti
pop
loop
pop
jmp
pop
mov
imul
mov
pop
dec
test
adc
imul
pop
cli
sub
out
movsl
inc
in
jg
shll
loop
movsl
loopne
loopne
lahf
fstl
sbb
mov
pop
add
jo
mov
sub
pop
int
jp
mov
fldenv
fiaddl
inc
rcrl
testb
xor
xchg
out
arpl
sbb
loope
loope
setne
jl
addr16
sub
add
xor
or
ds
lret
cmpsb
test
pop
sub
inc
lods
arpl
or
pop
inc
into
mov
jno
xor
pop
lcall
fmull
aas
mov
pop
out
or
stos
shlb
cmpsb
lods
or
pop
addl
push
in
mov
shll
mov
sbb
xor
aaa
jecxz
cltd
stos
call
jb
push
inc
sahf
jg
out
test
sti
cwtl
xor
loopne
faddp
dec
pop
jle
adc
cmp
stc
push
subl
or
aas
mov
jecxz
mov
subl
mov
out
mov
iret
jl
sti
inc
xchg
jae
lock
hlt
jae
movb
xchg
mov
push
nop
xchg
and
enter
jg
movsb
mov
jae
lds
xchg
aaa
inc
stos
cli
pop
fxch
pusha
call
sub
add
lods
xchg
xchg
cmp
ficompl
mov
aam
or
aaa
out
cwtl
push
sbb
add
pop
jnp
pop
ss
int3
mov
ss
call
or
gs
push
push
gs
shl
and
pop
stc
cmp
sbb
out
inc
aaa
pop
aas
loope
nop
test
sub
mov
xor
adc
push
test
adc
out
mov
add
frstor
call
xor
lcall
adc
add
rep
rorl
xchg
shlb
test
std
es
inc
loopne
push
inc
shl
fs
lea
in
sub
xchg
scas
sub
xor
adc
sub
and
xor
jbe
add
mov
mov
aad
dec
xchg
lret
out
pop
sar
loope
push
int3
or
pop
push
addb
xor
mov
pop
fstl
sbb
sub
lods
xchg
adc
lods
sbb
sub
insl
lods
jecxz
add
inc
popa
inc
inc
ljmp
popa
mov
push
out
enter
cld
sub
jle
mov
fistpl
sub
nop
jle
or
outsl
insb
sub
sti
add
inc
push
imul
ja
mov
lret
mov
dec
mov
xor
jo
testl
es
mov
std
scas
clc
inc
stc
inc
icebp
mov
notl
push
movsb
cwtl
xor
push
jmp
adc
or
cmp
xor
fst
loope
mov
and
jg
mov
jl
cli
fsubrp
cmp
pop
push
cs
ja
scas
stos
sub
jmp
cmpsl
mov
push
mov
dec
cmpsl
in
or
sarb
ret
div
jo
dec
lods
lods
xor
jle
adc
scas
mov
sbb
and
cs
es
pop
mov
idivb
add
pushf
jg
sbb
push
push
cmp
mov
mov
cmp
leave
mov
cmp
mov
dec
cs
pop
cmpsb
lret
sbbl
shrb
cmc
fnsave
scas
xchg
data16
cwtl
lods
cmpsb
mov
dec
sub
mov
mov
cs
mov
scas
test
addr16
movsb
pop
ljmp
dec
ret
cmp
mov
lret
sbb
dec
fadds
lods
test
les
lret
sbb
or
pop
test
sti
mov
shll
rcll
shrb
imul
rcrb
js
lret
sbbb
popa
addl
loope
dec
out
addr16
mov
xor
sub
addr16
icebp
jo
movsb
mov
dec
ds
push
nop
imul
fucomp
mov
leave
xor
fcoms
sbb
enter
aas
and
adc
insl
pop
cltd
mov
mov
subb
push
push
push
add
inc
dec
mov
dec
in
mov
mov
aas
mulb
into
and
or
out
sub
inc
fistl
mov
enter
adc
adc
idivl
outsb
lock
dec
in
in
rcr
out
mov
insb
push
es
xlat
mov
adc
lcall
loope
inc
fildl
lds
ret
add
mov
je
cwtl
rsqrtps
ss
in
nop
or
cmp
mov
lds
inc
adc
and
hlt
in
outsb
rorb
rcrb
sbb
daa
mov
test
popa
cmp
cwtl
xchg
and
pop
cmp
mov
mov
pushf
in
push
ljmp
cmpsb
mov
pop
mov
cmpsb
push
xchg
inc
xchg
pop
push
sub
loope
cltd
mov
add
mov
and
into
ss
es
fsubrl
jp
add
jo
ficoml
push
addb
jne
scas
lods
test
add
cld
pop
or
loope
inc
or
sbbb
mov
lahf
lahf
ja
dec
mov
cmpsl
mov
lds
xchg
xchg
cli
cmpsl
setle
mov
inc
jno
cltd
cmpl
xorb
test
insb
test
adc
xor
adc
lea
adc
pop
adc
icebp
adc
sub
icebp
xchg
in
cmp
loopne
dec
scas
mov
rep
hlt
flds
clc
jnp
aas
scas
subb
dec
pop
mov
mov
daa
inc
jp
aad
cmp
dec
sarb
loope
ljmp
add
les
sbb
mov
mov
dec
lods
xchg
dec
test
adc
mov
scas
pop
xchg
push
lods
inc
js
mov
inc
mov
mov
fstpt
push
inc
xchg
stc
jne
jg
insl
sub
fcompl
imul
push
gs
mov
js
in
inc
push
fnstenv
out
pop
mov
pop
in
insl
jns
sahf
dec
push
pop
cmc
popf
in
jno
insb
mov
xchg
dec
mov
mov
popa
xor
cwtl
sub
aad
mov
or
dec
pop
xchg
or
or
fmuls
sub
mov
divb
dec
mov
lret
push
mov
nop
or
cld
popf
sbb
inc
loopne
lahf
lods
sub
xor
js
sbb
fwait
daa
inc
sbb
mov
test
jae
test
icebp
ljmp
imul
pop
negl
adc
push
cltd
call
sub
gs
outsb
push
push
lea
xor
mov
mov
xchg
mov
aas
arpl
and
jno
and
xchg
inc
cmp
mov
adc
pop
inc
sub
add
push
or
add
mov
jae
stos
dec
dec
pop
or
xchg
and
addb
adc
rol
mov
dec
cmp
mov
sub
test
rcrl
call
iret
das
mov
gs
add
fstp
js
or
lods
aaa
inc
mov
cwtl
xchg
rolb
leave
arpl
pop
movsb
js
push
loopne
dec
pop
cmp
push
int
push
mov
adc
inc
test
clc
out
push
sbb
inc
adc
mov
icebp
push
inc
mov
push
sub
notl
and
jl
dec
and
or
subps
imul
jl
pop
ret
push
dec
rol
jb
aad
cmp
iret
mov
cmpsb
and
jecxz
sub
mov
sbb
mov
and
sbb
lock
xor
mov
aam
fcompl
xlat
xchg
pop
inc
clc
cltd
lret
sbb
in
int
sbb
in
dec
movsb
pop
loop
in
into
das
mov
ret
push
xchg
in
xchg
stos
and
das
mov
cwtl
jge
sub
adc
mov
pusha
jne
repnz
ficompl
loop
addr16
xchg
shl
push
or
rcrb
cltd
pop
stc
shll
and
test
mov
ret
into
insb
xor
mov
xorb
enter
cwtl
mov
push
jne
mov
push
cli
cmp
push
jge
lods
test
add
jl
int3
mov
xchg
addr16
pop
fs
jns
mov
cmp
sbb
and
xor
mov
push
rorb
aaa
mov
sbb
aad
push
out
push
mov
push
push
arpl
out
lahf
les
push
gs
push
fabs
shll
or
adc
cld
stc
sbbb
cmc
mov
xchg
cwtl
or
arpl
ja
fisttps
or
orl
pop
jbe
hlt
jecxz
mov
mov
xor
fildl
and
or
icebp
aad
adc
mov
push
es
ret
sub
jne
fwait
mov
mov
xchg
loopew
pushf
or
mov
rorb
dec
bound
aas
pop
loopne
dec
ficompl
rcr
in
es
cmp
addr16
faddl
push
rcrl
mov
rol
dec
sbb
mov
add
jp
les
cwtl
pop
jno
fsubrp
xlat
add
adc
jo
adc
or
pop
jno
sbb
lahf
push
in
outsb
test
cmpsb
addr16
neg
ljmp
or
nop
aam
fstpl
mov
jge
icebp
addr16
add
sbb
jge
mov
jmp
popa
call
lods
sub
push
aam
lcall
sbb
pop
shl
mov
and
sub
nop
jl
push
sbb
jecxz
fcomps
out
adc
jecxz
dec
movb
jle
mov
fs
insl
cmp
dec
cmp
jle
repnz
jle
hlt
outsb
lcall
imul
or
inc
lret
mov
bound
or
lret
xchg
jns
mov
outsb
test
cmp
imul
cmc
shlb
mov
je
push
ja
andb
dec
push
jp
mov
cmp
jne
test
jp
clc
stos
pop
pop
jecxz
dec
lods
jecxz
ret
mov
push
gs
jne
add
loopne
gs
pushf
mov
adc
xor
or
stc
jl
loopne
outsl
nop
loop
pushl
or
in
cltd
mov
mov
push
xor
femms
aam
sbb
push
jbe
daa
popa
lea
scas
jae
in
test
add
das
push
add
addr16
es
clc
or
ja
sub
xchg
sbb
jp
pop
lahf
jle
dec
les
cmpsb
fisubrl
pushf
movb
cltd
in
mov
or
pop
out
dec
sub
adc
jle
mov
sbb
add
dec
fsts
jle
pop
adc
cltd
sub
mov
fbstp
or
test
clc
xchg
and
xor
mov
push
scas
mov
xor
push
ret
into
inc
mov
cmp
das
call
xchg
ret
inc
je
loop
das
cli
scas
fcoml
cwtl
sti
push
sbb
inc
and
mov
outsb
dec
mov
push
jo
mov
mul
js
imul
push
rcr
repz
filds
mov
repz
loop
fcoms
hlt
in
pop
mov
dec
cmp
stos
add
das
push
adc
add
stc
mov
mov
ljmp
mov
rolb
mov
popa
push
aaa
and
xor
inc
push
pusha
das
dec
inc
lret
push
testl
pop
mov
dec
dec
rcrl
es
adc
leave
shl
insb
mov
dec
shlb
push
movsb
jno
sbb
das
jge
ror
jb
push
mov
cli
pop
iret
mov
cmp
and
hlt
xchg
mov
push
fadds
xchg
jmp
inc
sbb
mov
mov
cs
aaa
cwtl
call
test
xlat
leave
int
sbb
pop
test
aad
mov
push
or
mov
sub
imul
mov
subb
pop
ljmp
cmp
jne
add
enter
insl
jecxz
pop
test
faddl
adc
test
je
and
sub
inc
inc
mov
in
xchg
lds
mulb
mov
xchg
sti
jo
std
lcall
cmc
xchg
mov
jae
or
stos
dec
movsl
fsubrs
int3
jle
ds
cli
inc
ja
add
shl
clc
inc
xor
sahf
jl
into
xchg
repz
mov
popa
outsl
and
rcrb
push
ret
sbb
and
arpl
sub
push
test
jge
in
push
lret
mov
mov
jo
outsb
jecxz
cmp
mov
jae
inc
aas
pop
pop
dec
xchg
jne
ss
jmp
push
aam
xchg
mov
xlat
rep
mov
pop
xor
jb
fbld
jne
mov
jae
test
cltd
dec
pop
subl
mov
jl
ds
aas
in
push
xchg
cmp
jo
lcall
jmp
jmp
or
jne
add
movl
insl
sbb
stos
jg
pusha
cwtl
xlat
out
push
orb
fcomi
inc
cwtl
xchg
cmpsl
out
les
stc
cmp
mov
insl
sbb
test
std
fcomi
ds
rorl
xor
jle
xchg
out
out
push
mov
inc
jmp
adc
jmp
je
and
imul
mov
je
aas
sti
inc
fsubrs
outsb
in
jl
inc
or
add
mov
ret
inc
fs
sbb
outsl
mov
dec
inc
xchg
in
subb
dec
imul
sar
adc
mov
jns
inc
jmp
mov
inc
jo
and
je
aam
xchg
push
dec
mov
mov
mov
pop
mov
and
pop
popa
loope
sarl
pop
cmp
jge
lock
and
and
addr16
mov
dec
cmp
dec
mov
jb
push
mov
xchg
mov
in
in
nop
pop
scas
cli
test
jae
add
jp
mov
xlat
push
imul
mov
scas
adc
and
jo
cmp
outsb
mov
mov
imul
fsubrl
popf
out
insl
loopne
and
ds
addr16
addl
inc
int3
out
stos
inc
stos
mov
cmpsb
je
cs
repnz
cmp
in
pop
stos
pop
int3
mov
mov
jb
fmull
aad
test
call
pop
xor
cmp
es
inc
and
sub
push
xchg
push
lods
and
dec
mov
sbb
lea
sahf
fisubl
and
mov
add
sub
jp
mov
icebp
or
xchg
mov
xchg
jns
or
jge
mov
sbb
stos
mov
sbb
sbb
mov
pop
rcrb
or
add
stos
add
movsb
mov
sahf
adc
sub
scas
cmp
xchg
xor
inc
movsb
dec
mov
jmp
push
orl
iret
hlt
popf
test
jle
test
outsb
lcall
pop
dec
decb
cltd
es
sbb
inc
mov
and
jnp
repnz
lret
lcall
iret
dec
add
ss
adc
mov
in
fwait
daa
mov
fbld
mov
dec
rcrb
add
dec
dec
xor
ss
fnstcw
jbe
sahf
mov
cwtl
add
aad
aaa
fisttps
pop
and
fnstcw
inc
mov
mov
lods
cmp
xchg
sbb
pop
cli
push
sbb
push
testb
xchg
popf
sahf
xchg
jns
mov
sahf
pop
push
push
lret
sbb
test
loope
push
jmp
aad
hlt
pop
cld
fwait
add
pop
pop
mov
sub
push
and
cmp
pop
dec
sti
popf
add
movsb
inc
jmp
add
subl
sbb
jnp
gs
mov
xor
call
pop
cmp
dec
ficomps
test
aam
mov
xor
and
cmp
rcl
adc
lcall
push
or
mov
and
lea
out
pop
inc
rol
cld
push
push
jg
movsb
pushf
out
arpl
push
int3
inc
cmc
daa
mov
dec
add
sar
add
push
or
mov
sbb
cli
or
push
sub
pop
and
filds
repz
lds
adc
mov
sahf
or
mov
mov
cmc
xor
mov
mov
jle
xchg
rcrb
sbb
push
xchg
call
adc
dec
and
xchg
imul
fdivs
orb
sahf
mov
fstl
aaa
out
hlt
vpmacssdd
and
gs
sub
scas
pop
mov
aad
loopne
cmp
xchg
mov
mov
das
pop
fs
fcmovu
movsl
loopne
sub
xor
into
cmpsb
rorl
push
iret
test
or
inc
je
jmp
lea
mov
out
push
imul
sbb
ja
ficoml
cmpps
shr
xchg
enter
cmpsb
push
xchg
xchg
lret
jp
sub
imul
add
add
leave
cmp
roll
xchg
ljmp
mov
pushf
and
xor
pop
flds
cmp
jle
loope
stos
mov
rorb
dec
test
fmull
aad
and
data16
inc
jle
aaa
arpl
pop
jno
mov
ss
out
aam
add
jmp
adc
mov
cmpsl
aam
nop
inc
test
call
push
aam
enter
mov
jae
icebp
lea
je
test
or
stos
sarl
ja
adc
imul
aas
push
adc
inc
mov
cmpsb
push
sub
adc
push
test
or
and
cmp
movsl
mov
adc
cwtl
sbb
int
and
push
inc
inc
inc
cmpsl
push
add
push
mov
jo
sbb
mov
sbb
sub
addr16
sub
icebp
push
xchg
leave
cmp
mov
mov
xchg
push
mov
xor
push
cmc
int
in
xchg
stos
ds
jmp
out
inc
xchg
out
jg
mov
jp
adc
dec
leave
iret
mov
cltd
sbb
jmp
sub
mov
pop
or
cmpsb
std
sahf
jecxz
sub
xchg
and
xor
dec
pop
pop
aad
loopne
cmpsb
out
xchg
mov
sub
xchg
mov
inc
push
inc
divb
pop
dec
in
pop
imul
dec
sbb
dec
mov
pop
add
xor
adc
xlat
sti
lods
cld
andb
ret
lcall
in
gs
jo
cld
add
loope
repnz
sub
dec
jl
std
jnp
mov
dec
stc
xchg
mov
lods
mov
mov
repz
and
and
test
cmpb
icebp
fdivrl
push
mov
lcall
pop
idivl
or
mov
push
pop
lods
jmp
add
das
cld
cmp
adcb
dec
or
mov
leave
test
pop
xchg
mov
pusha
imul
insb
aas
aas
stos
sti
rorl
sub
mov
scas
cmpsb
mov
shll
cmc
dec
inc
daa
mov
subb
mov
or
pop
sub
clc
fs
fnsave
mov
movsl
jns
and
fildl
mov
addb
leave
lock
xchg
jae
mov
xchg
test
inc
push
arpl
jg
add
lret
sbb
outsl
cmp
cmpsb
push
xchg
loope
rorl
cs
cmp
jge
pop
gs
mov
xor
addr16
in
inc
jns
push
mov
mov
cmc
xchg
fiaddl
adc
scas
adc
ficoml
mov
pop
jecxz
and
rcrl
mov
in
imul
aam
inc
ja
add
mov
sbb
popa
loope
loopne
and
stc
jg
add
cmp
adc
jae
xchg
in
sbb
shlb
pop
leave
loopne
mov
sub
dec
insb
pop
cmpb
pop
xchg
and
mov
in
pop
sahf
les
and
adc
add
mov
lret
sub
loop
mov
mov
and
inc
inc
and
cmpsl
xor
aas
icebp
pusha
loopne
fwait
mov
sbb
cmc
pop
das
nop
fs
add
rclb
andb
mov
mov
mov
inc
cmp
lret
jecxz
pop
xor
pop
out
lds
int
xor
jmp
pop
push
repz
or
stos
outsb
mov
je
sub
pop
enter
xchg
dec
inc
inc
call
mov
add
and
jg
adc
ss
rorl
cmovle
popa
aaa
mov
mov
rclb
addl
out
xchg
std
nop
push
scas
es
sti
dec
mov
xor
and
loopne
dec
fldenv
stc
push
and
scas
jge
xor
daa
cltd
push
jl
pusha
shlb
sbb
mov
jae
out
es
into
popa
lods
lfs
les
xchg
test
fnstenv
push
lret
jae
add
out
fucom
stos
mov
neg
inc
out
pop
push
nop
pop
xchg
jg
testb
lds
pop
jae
out
push
sbb
dec
pusha
jne
and
or
mov
inc
mov
enter
add
push
aad
pop
cmp
cmp
inc
add
sub
movsb
int3
xchg
in
sub
xor
jmp
idivb
fdivr
cmp
pusha
lea
pop
mov
scas
sti
or
jmp
int3
std
cld
fucomp
inc
mov
mov
push
jle
insl
xchg
fidivs
push
pop
mov
bound
int
testl
xor
mov
outsb
shll
clc
in
cmp
inc
popa
lahf
xor
lds
push
xor
cmp
jp
jnp
es
push
jns
fs
and
and
test
cwtl
cmpl
lock
out
sbb
jo
in
pushf
dec
sahf
push
sub
mov
pop
sbb
stos
inc
call
fstpl
inc
cld
pop
in
insb
or
shl
and
in
out
pop
jae
or
out
and
dec
fwait
pop
mov
jp
jl
push
push
test
dec
repz
jae
dec
or
jl
sub
xchg
cwtl
dec
mov
mov
jb
das
in
rolb
fs
test
adc
xchg
mov
test
repnz
aad
sub
xchg
pop
push
fucom
icebp
aad
mov
mov
lea
sti
adc
psubusw
adc
dec
cmc
loope
adc
pop
dec
xchg
dec
lcall
xor
adc
or
pop
sbb
adc
addb
movsl
jne
jmp
pusha
cmpsl
mov
mov
mov
add
sbb
lock
ret
sbb
push
daa
mov
fucomip
dec
mov
and
pop
mov
lret
mov
push
enter
icebp
mov
insb
sub
outsb
adc
dec
and
or
jne
push
sub
pusha
pop
adc
nopl
xchg
hlt
sub
shlb
push
std
mov
ljmp
fwait
cmpsb
push
hlt
test
sub
pop
dec
sbbb
scas
inc
add
xor
bound
stos
adc
pusha
cmpl
jmp
sar
cmp
mov
add
cmp
icebp
xor
mov
pop
cmc
push
cld
or
lds
fcoml
loop
pop
jge
xchg
sub
in
push
lods
or
call
and
xchg
clc
daa
add
sbb
std
pop
xchg
mov
lcall
ds
push
dec
lret
xor
in
shrl
lcall
daa
jecxz
mov
sbb
repz
ss
fmull
cld
mov
fstpl
push
push
adc
cwtl
push
add
popf
jae
jecxz
clc
mov
clc
std
jmp
mov
cmovg
xor
sbb
stc
sbb
xor
push
into
jg
repz
clc
jns
pushf
lahf
cmc
pop
xor
lret
stos
or
rorb
pop
xchg
cltd
lock
cmc
xchg
inc
xor
in
xchg
leave
push
cmp
and
inc
cmp
icebp
in
mov
loope
xchg
fsubs
aas
mov
sti
test
scas
push
add
jp
jecxz
cmp
xchg
jle
and
cld
cmp
mov
adc
dec
cmc
sub
outsb
hlt
jg
shll
pop
push
xor
add
mov
das
mov
jl
pop
shll
or
fsubl
sbb
xlat
rorl
cwtl
xchg
insl
mov
test
lret
cmp
xchg
es
xor
sbb
hlt
mov
iret
sbb
stos
gs
cwtl
adc
or
adc
mov
add
loop
pop
dec
jp
sub
and
xchg
push
cli
shll
push
jl
mov
outsb
iret
jge
inc
popa
fdivs
es
sbb
pop
pop
xor
cmp
xor
mov
adc
mov
push
mov
aad
les
je
insb
lret
mov
popa
testl
jo
mov
mov
mul
lahf
loop
xchg
jmp
js
sub
xlat
fldln2
jno
ror
aas
adc
lcall
cmpsl
push
dec
orl
sbb
mov
and
mov
repnz
jne
push
cmpsb
and
mov
or
push
pop
jo
dec
add
icebp
popa
test
shrl
mov
xor
dec
xchg
pop
rcr
loope
sbb
add
pop
mov
add
faddl
lds
je
mov
mov
mov
sub
fdivrp
sub
jp
cmpsb
pop
out
add
pop
lcall
inc
lret
cmp
stc
rcr
test
int
inc
cltd
stos
sub
lds
out
add
fst
pusha
popa
sub
sub
xchg
dec
xorl
and
push
outsb
jo
cmp
cli
mov
xchg
popa
stc
test
imul
iret
inc
and
ds
mov
adc
or
mov
gs
mov
scas
add
mov
mov
nop
add
and
sub
pop
cmc
push
jge
jp
test
and
sub
pop
fs
jg
repnz
adc
push
jno
sbb
cmp
push
sar
adc
sub
sarl
aad
aam
pop
mov
imul
in
sbb
push
fnstenv
loopne
add
xor
out
push
das
orl
mov
and
shrl
dec
xchg
das
dec
rorl
and
lret
and
jnp
xchg
or
or
push
int
dec
in
add
call
out
pop
mov
xchg
out
sub
in
sahf
leave
ja
xchg
imul
enter
clc
sbb
jo
dec
cs
aad
shlb
sub
addr16
jae
ljmp
test
fisttpl
jmp
push
xor
pusha
fcoml
mov
mov
ss
mov
mov
mov
mov
cltd
xchg
sub
nop
sbb
pusha
and
mov
pushf
cmpsb
jo
jg
adc
aam
insb
adc
insl
imul
movsl
xchg
in
xchg
push
lahf
cmp
add
popaw
cmp
sarb
jne
daa
dec
inc
lea
fwait
out
leave
into
dec
clc
cvtps2pi
aaa
jne
out
pop
push
push
pop
loope
and
or
adc
sub
lret
loopne
sbb
imul
cmp
cmp
and
push
mov
pop
xchg
testb
and
jmp
lods
cmpsb
push
xor
out
loope
mov
shlb
sub
xor
nop
add
push
stc
mov
push
add
jg
int
faddp
or
shrl
or
aad
jae
scas
or
movsb
mov
adc
test
sarb
test
bnd
test
xchg
sarl
push
push
pop
mov
out
cmpsl
mov
dec
push
aaa
mov
add
pop
inc
mov
aas
fmull
mov
mov
out
pushf
int
fs
add
ljmp
sbb
xor
sub
inc
xchg
or
inc
jmp
das
xcrypt-cbc
cmpsl
adc
and
push
or
mov
or
mov
mov
push
push
std
pushf
out
cmp
enter
mov
jl
mov
mov
adc
test
mov
cmp
inc
in
jne
es
data16
mov
les
push
xor
lock
mov
clc
inc
inc
ljmp
leave
leave
pop
pop
daa
jbe
push
sahf
dec
sub
inc
mov
mov
push
out
mov
out
mov
lods
push
dec
incl
jl
lods
loopne
sub
inc
sub
fldenv
push
adc
or
loop
rclb
arpl
mov
in
dec
lock
add
inc
aam
pop
xchg
pop
pop
std
cld
jl
xchg
nop
sbb
pop
jg
add
and
mov
jno
jno
mov
or
orl
inc
xor
inc
test
pop
popf
cmp
or
aaa
loopne
mov
insl
sbb
sub
out
cmp
jae
pushf
push
jbe
add
das
xchg
adc
rcrb
push
add
gs
xlat
rcll
cld
push
add
adc
add
push
lcall
cs
sbb
sti
adc
fistl
xor
xchg
pop
mov
jg
pop
cld
inc
push
fcomps
cli
push
mov
lea
mov
andl
cli
mov
adc
adc
aas
lret
jns
dec
adc
pop
mov
dec
repz
inc
fildll
mov
das
hlt
ss
popa
inc
enter
aaa
mov
sarl
sub
fs
sub
rol
mov
lret
mov
mov
mov
sbb
lcall
inc
ljmp
ss
fdivl
push
dec
inc
mov
daa
sbb
insb
iret
cmpsl
popa
and
inc
in
mov
cmp
cmc
lds
pusha
push
add
lret
test
cmp
push
pushf
jb
mov
xor
add
adc
ljmp
sbb
sub
in
jmp
adc
fnsave
add
outsl
scas
nop
iret
aas
sahf
mov
arpl
outsl
lods
repz
sbb
pop
add
inc
aas
push
popw
mov
jecxz
jns
xchg
std
push
repnz
inc
insl
pop
mull
pop
mov
icebp
lock
pop
lcall
adcb
lea
add
mov
cmp
sub
inc
cmp
cli
cmp
ss
lret
int3
psrad
mov
fistpl
pop
call
out
jnp
les
lcall
rcl
repnz
dec
or
les
aaa
dec
fbld
adc
movsb
into
leave
shll
enter
jmp
sub
jo
mov
popa
jne
adc
push
mov
adc
test
dec
sub
or
adc
aas
pop
cmp
icebp
in
mov
mov
lea
adc
xor
sub
sbb
enter
fxch
movsl
adc
dec
addr16
sbb
adc
inc
push
clc
cwtl
inc
enter
or
aad
shrb
adc
in
hlt
xchg
mov
inc
mov
mov
mov
push
pop
jae
cmpsl
mov
outsl
mov
pushl
pop
dec
cmc
aam
pusha
js
and
add
sub
clc
outsb
ds
in
popf
mov
mov
add
lcall
inc
lods
fisttpll
dec
or
mov
aam
jl
push
arpl
cmc
dec
out
cli
adc
int3
fucom
xchg
dec
cmp
daa
je
insb
sbb
dec
popf
sub
add
mov
pop
cmp
jmp
jns
ds
adc
fmul
lock
inc
xchg
xchg
scas
inc
xchg
jb
add
into
jl
pop
test
fs
fucomip
call
add
inc
jl
bound
jns
mov
add
in
xchg
add
mov
xlat
popa
jbe
and
sbb
push
outsl
or
out
push
fxam
mov
notb
adc
jbe
xchg
push
enter
xor
push
pop
mov
clc
aad
xchg
je
sub
sub
arpl
push
and
and
mov
ss
aas
cmp
mov
dec
mov
lock
mov
mov
pop
pusha
addr16
push
arpl
cmpsl
ret
adc
push
ss
movsb
add
movsl
or
xlat
mov
add
pop
repnz
add
sahf
cs
adc
jecxz
shr
dec
dec
mov
jle
adc
ret
and
testb
movsb
push
mov
lcall
pop
sbb
push
arpl
cli
popf
repz
fcoml
mov
fmull
mov
and
fsubrl
mov
movsb
push
pop
xchg
fdivrl
adc
in
xor
in
mov
jnp
cli
jmp
mov
fdivs
rcl
lods
jbe
mov
add
mov
out
inc
inc
fstl
out
push
mov
fiadds
leave
mov
imul
mov
or
stos
adc
imul
xchg
sub
dec
pop
push
scas
mov
fcomps
fcomip
fs
shr
mov
xlat
xor
repz
cmp
and
or
push
mov
mov
xor
and
fnsave
fistl
out
imul
sbb
push
inc
mov
and
insl
lret
or
mov
mov
bound
sub
popf
and
jle
pop
jl
push
std
psubsb
push
pop
and
hlt
and
je
stc
jae
cmp
xor
mov
dec
sbb
test
sbbb
ja
pop
inc
call
add
or
divb
cmp
cmc
mov
lea
iret
and
int
jae
push
xchg
xlat
out
lds
cmpsb
ds
insl
xchg
xchg
sub
add
sub
or
pop
pop
inc
test
leave
sbb
dec
mov
pop
testl
sub
adc
aaa
xor
push
ret
cwtl
cmpsl
mov
cmp
mov
mov
mov
lods
lret
scas
push
xchg
stc
icebp
imul
mov
xchg
orb
and
popf
cmp
test
test
cmpl
pop
cld
push
fistps
add
sub
test
cmp
stc
and
cmpsb
jge
je
inc
jecxz
dec
aas
mov
adc
pop
push
in
gs
push
imul
cmp
mov
jb
fwait
mov
dec
xor
sub
mov
inc
insl
mov
push
cmp
je
divl
push
xor
inc
lds
js
dec
or
sub
push
lret
lods
fwait
cmc
loop
repz
stc
pop
ret
jbe
mov
rcrb
shrl
mov
mov
inc
add
or
mov
pusha
loope
rorl
lods
int
cmc
inc
dec
imul
inc
sarb
imul
imul
stos
enter
lds
cmp
sti
dec
test
sbb
or
sti
mov
push
dec
sets
pop
xchg
shll
or
and
in
lcall
sti
ret
leave
fldt
jge
mov
pop
sub
dec
xor
insb
daa
sub
rcrl
push
ljmp
and
js
add
fs
pop
pushf
cmpsb
icebp
call
arpl
call
rcll
mov
insl
jnp
sti
fs
or
jo
adcb
das
ret
add
pop
lea
dec
inc
jmp
repz
adc
das
inc
adc
test
and
int3
adc
push
sub
dec
cmp
push
das
subb
bound
pushf
outsb
enter
test
arpl
mov
clc
sbb
daa
fucomip
push
sahf
jmp
in
push
xor
icebp
pusha
push
fisttpl
mov
bound
insb
jns
xor
sub
outsb
inc
pop
cmp
add
or
cltd
loope
dec
push
dec
loopne
cmp
mov
movb
inc
stos
xor
mov
call
jp
sbb
lods
mov
loop
loopne
ja
push
aas
push
jb
int3
test
inc
scas
xchg
inc
aas
bnd
fs
mov
loopne
or
and
adc
and
fcomps
scas
and
sub
sbb
push
pop
popf
int
pop
addl
in
inc
sbb
add
in
insb
push
sarl
xchg
sub
pop
and
stos
imul
sub
lea
mov
ficompl
fnstcw
lret
mov
push
inc
xchg
cli
insl
inc
fists
mov
push
test
faddl
push
movsb
add
negl
adc
incb
jl
adc
add
cmp
jbe
jns
pop
ss
cmp
adc
mov
outsb
xor
mov
mov
dec
loopne
lods
and
js
adc
and
ret
jg
test
aas
adc
push
sub
xchg
adc
test
popf
push
bt
mov
cmp
mulb
cmp
pushf
es
push
inc
cmp
and
hlt
das
outsl
stos
in
popf
cmp
inc
cmp
cmp
sti
xor
push
mov
iret
mov
stos
out
pop
aaa
xchg
and
insl
notl
popf
in
push
call
fisttpll
inc
nop
js
mov
aaa
mov
inc
mov
clc
or
sbb
dec
sbb
xor
add
ljmp
mov
dec
pop
mov
test
xchg
mov
fcompl
push
adc
in
cld
and
pushf
add
adc
mov
fidivl
ss
cmpsl
jns
dec
mov
mov
lods
insl
sbb
decb
and
jmp
hlt
in
sbb
push
lret
inc
mov
mov
cs
ljmp
call
mov
sbb
sar
flds
jns
jb
in
sbb
popf
movsl
push
adc
fldcw
imul
shlb
xchg
dec
in
dec
imul
inc
imul
test
inc
sahf
mov
and
mov
push
jne
into
or
pop
cmp
pop
adc
insb
in
repnz
lcall
rorl
add
push
or
sub
nop
enter
xchg
mov
lods
lea
push
popf
sbb
xchg
lret
dec
pop
or
call
push
add
into
in
in
sbb
test
adc
in
mov
rorl
jmp
cmpsb
into
jo
ret
test
pop
scas
push
fisubrs
or
les
add
mov
test
jns
pop
dec
repz
push
adc
cmp
jecxz
adc
lds
pop
bound
pusha
push
push
inc
cli
sub
aas
cmp
sbbb
add
mov
stc
xchg
cmc
pop
fdiv
xor
not
adcb
pop
bound
adc
sub
cmp
mov
fwait
rcrl
pushw
inc
aas
xchg
mov
mov
pop
mov
lcall
aad
add
xchg
adc
add
sahf
or
cmp
cmp
scas
jo
fistpl
sbb
enter
push
fs
testl
lock
stos
jae
jge
mov
pushf
out
scas
stc
jno
shrl
je
shll
into
mov
inc
scas
inc
ds
fcmovnbe
inc
rol
daa
adc
out
xor
xchg
adc
sahf
gs
mov
sbb
xchg
fdivs
xor
fildl
add
stos
add
mov
psrlq
push
inc
test
pop
pop
fsubrp
mov
insl
and
cmp
push
xchg
out
das
xchg
mov
nop
fisttpl
leave
cmpsb
lret
sub
mov
xchg
addb
and
xchg
lret
and
mov
mov
dec
inc
dec
pop
lahf
sub
test
das
sbb
mov
mov
std
and
jg
inc
stos
push
adc
shrb
inc
icebp
add
into
mov
fwait
in
xor
inc
loop
call
call
cmpsb
iret
inc
in
cs
out
xchg
add
ficoms
gs
cmpsl
or
and
movsl
leave
mov
aad
lea
call
xor
xchg
xor
push
shr
loopne
cmc
insl
pop
or
addps
dec
fbld
push
jg
icebp
jae
fstpl
pop
aaa
xchg
sti
mov
xlat
loope
mov
mov
pop
adc
insl
xor
jae
pop
inc
add
jle
pop
sub
cs
pop
das
mov
cltd
inc
shrb
mov
xor
mov
push
add
mov
leave
cmp
lret
cmpl
cltd
jb
mov
adc
xchg
loopne
lock
mov
dec
or
push
call
cmp
add
mov
ds
dec
jne
ficoms
mov
jnp
movb
movsl
dec
lea
scas
fcoml
xor
repz
xchg
or
add
loop
and
mov
mov
mov
or
push
call
repz
in
out
push
stos
stos
jb
cmp
daa
in
push
loope
pop
jns
cmpsl
push
mov
jb
xor
outsl
daa
gs
adc
cmp
mov
rcrl
sub
push
mov
sbb
loope
push
jnp
lods
daa
data16
or
push
fildll
loopne
fistpl
cmp
jne
jp
repz
adc
pop
loopne
repnz
pop
and
and
aaa
mov
imul
sahf
mov
xlat
in
int
int
pop
das
mov
and
shrb
xor
pop
xchg
in
repnz
outsb
stos
bnd
icebp
fcom
aas
sbbb
mov
or
ret
xchg
push
jae
mov
push
mov
cmpsb
pop
sbb
lods
mov
dec
sub
pop
adc
sbb
dec
dec
roll
stc
push
inc
clc
xor
out
lret
dec
sbb
fildll
jecxz
fiadds
ss
jno
or
adc
mov
dec
mov
out
push
fcmovb
adc
sbb
loopne
rcrb
or
cwtl
jg
sarb
jne
fdivrs
notb
mov
lods
pop
pop
xchg
cmp
jne
cmp
bound
jb
jp
dec
push
stos
inc
lcall
shr
add
std
dec
sbb
mov
in
out
pop
gs
pop
lret
inc
jg
mov
add
mov
push
xchg
sbb
mov
adcl
jb
fistpll
pop
and
push
jo
popf
sbb
ja
inc
cld
aas
push
or
imul
inc
loope
sub
cmp
inc
pop
loop
mov
mov
sub
in
sub
mov
fldl
jne
jnp
xor
rcll
inc
je
mov
push
pushf
icebp
and
fs
adc
clc
pop
addr16
daa
pop
mov
notl
outsl
in
fwait
movsl
push
cmpb
jo
xor
cmp
xchg
loop
push
cli
and
out
out
inc
mov
int3
std
or
sbb
lret
or
into
enter
sbb
ret
adc
mov
xchg
hlt
enter
int3
fstps
movsl
popa
shrl
bound
push
fwait
adc
shrb
lods
rolb
call
or
rcrb
lret
cmp
mov
cmp
cmp
data16
pushf
outsl
pop
outsb
or
xchg
or
sub
lahf
xchg
and
popa
mov
mov
lock
adc
les
or
mov
cmpsl
sub
cmp
sub
lret
lret
mov
cmp
xor
push
ret
push
lods
xchg
in
xor
mov
dec
popa
pop
inc
adc
adc
jns
cmp
dec
cmpsb
in
scas
dec
in
mov
dec
cmpsb
mov
scas
pop
jnp
adc
stos
push
pusha
xchg
test
dec
cs
pop
mov
fisubrs
pop
lea
or
int3
mov
xchg
mov
push
lret
inc
lock
jmp
xor
xchg
sti
push
pop
mov
ljmp
es
jnp
cmp
jge
dec
stos
jecxz
dec
shl
dec
pop
and
sub
popf
iret
loope
lret
inc
cld
lcall
aas
lcall
cmp
sbb
adc
mov
insb
int3
std
ja
xor
in
fs
stc
fstpl
push
jno
ret
cmp
pop
add
inc
xor
sub
lods
movsb
jno
sub
add
popf
inc
and
es
mov
std
inc
int3
jns
push
popf
sub
test
aam
cwtl
mov
imul
mov
aad
btc
fcmovnb
pop
dec
pop
or
add
or
fistpll
das
rorl
xor
xchg
scas
icebp
mov
push
mov
push
inc
jns
lock
enter
lcall
jnp
sbb
mov
sub
les
xchg
dec
stos
mov
and
fisubl
arpl
inc
rolb
aad
pop
outsb
enter
push
mov
or
ficompl
aam
stc
dec
adc
sbb
sub
addr16
je
or
cmp
push
xchg
es
inc
cmp
rcrl
push
and
xchg
shl
sub
lods
pop
pop
loopne
dec
cmpsl
xlat
fidivrl
fidivrs
pop
shlb
popa
imull
push
jbe
ds
xor
xchg
sub
iret
dec
fs
into
lcall
jno
pop
jae
adc
pushf
push
xor
pop
movsb
daa
jl
test
js
icebp
rcll
jecxz
dec
mov
enter
test
aas
dec
add
insb
push
lock
lock
outsl
add
hlt
mov
mov
cmc
cmp
test
xchg
andb
cmpl
sahf
icebp
pop
dec
scas
scas
mov
xchg
push
lock
sub
mov
xchg
dec
cmp
sarl
int3
jns
call
cmp
jmp
push
mov
xchg
pushf
bnd
ret
jmp
fs
sbb
andl
jo
ror
stos
cmp
push
jmp
pop
rolb
and
int3
test
insb
jmp
push
sbb
cmp
leave
inc
jl
inc
push
xor
xorb
outsb
jg
lcall
aas
xchg
lret
cmp
cltd
aas
sub
inc
inc
cmp
es
movsl
xor
mov
jmp
iret
iret
push
in
adc
loop
jecxz
idivl
das
xchg
inc
mov
push
cli
cmp
int
inc
daa
sub
fidivrl
loope
out
mov
addr16
into
mov
enter
icebp
and
ret
sbb
sub
sub
neg
fisttpll
lret
test
inc
loop
pop
dec
mov
sub
cmp
mov
mov
or
adc
cli
mov
mov
push
xchg
daa
enter
outsb
fcompl
jnp
fsubrl
enter
fucom
in
ja
je
aam
scas
inc
mov
clc
and
mov
push
lcall
nop
movsb
xchg
std
in
jnp
ret
jne
push
test
add
pop
mov
rcrl
iret
sarb
ss
sbb
outsb
lret
stc
ds
push
pop
jp
cmp
mov
push
fs
in
mov
push
push
mov
mov
out
or
add
outsl
cmp
loop
jbe
jae
fiaddl
pop
jge
outsb
adc
bswap
stos
ficoml
pop
xchg
cmpsb
out
fdivrl
shl
jge
fldenv
enter
mov
mov
dec
fwait
pushf
repz
sti
lcall
mov
push
in
push
addl
jae
fcomps
adc
add
les
and
imull
mov
aas
ret
pop
adc
mov
sbb
lcall
xlat
pop
dec
pop
fadd
daa
and
scas
outsl
fdivrp
push
and
roll
mov
xor
insl
fimull
lods
mov
sbb
jge,pn
leave
sbbb
push
jmp
dec
bound
or
mov
imul
xor
stos
push
fsubrl
fdivs
mov
and
fdivrs
mov
push
pusha
dec
test
imul
stc
inc
pop
lahf
sub
add
pop
pop
xor
into
add
adc
dec
inc
xor
cli
icebp
and
mov
xchg
push
and
add
fwait
push
dec
inc
out
push
addr16
aad
push
cmpsb
jl
mulb
je
div
mov
pop
pop
mov
das
in
outsb
jno
cli
add
mov
xor
enterw
xor
stc
pop
test
lret
nop
adc
jbe
mov
inc
and
les
or
fiaddl
mov
jmp
fmuls
loop
ficoml
adc
pushf
lods
pop
inc
pop
cmp
xchg
mov
mov
jne
int
pusha
cli
pop
dec
cmpsl
pop
pop
xchg
popa
and
and
add
xchg
jl
dec
jge
xor
and
push
ret
pop
loope
sbb
add
pop
arpl
ret
leave
xchg
aam
mov
xchg
nop
aam
jge
lahf
cmpl
push
mov
notb
jle
push
sub
int
sbbl
cld
inc
jg
mov
xchg
inc
sub
push
pop
push
mov
call
test
pop
lock
jecxz
imull
mov
mov
cli
or
data16
out
dec
hlt
enter
cmp
iret
cmp
mulb
ret
shl
mov
sub
sub
pop
aam
mull
pusha
add
lret
mov
cltd
loop
js
push
cmpsb
mov
mov
push
mov
push
dec
jp
mov
or
jae
das
mov
stos
std
pop
jle
mov
stc
call
divb
hlt
and
adc
adc
in
sub
mov
pop
xor
mov
lea
add
mov
sti
add
clc
icebp
add
hlt
popa
mov
loope
and
cld
imul
enter
push
mov
movb
push
or
add
push
ret
jl
ret
out
mov
shlb
cmp
mov
insb
sti
lcall
push
shrb
in
mov
pop
ffreep
cltd
and
push
stos
cs
subb
cmp
shll
add
fisubl
arpl
call
xchg
daa
mov
jne
or
test
stos
adc
stc
pop
ss
orb
out
xor
int3
jp
sbb
add
inc
int
adc
pop
mov
push
or
popf
clc
add
sbb
adc
mov
xchg
inc
inc
movb
mov
mov
add
and
adc
repnz
fbld
cmp
mov
shlb
cmpsl
in
xor
lods
and
add
cmp
push
mov
pop
adc
lods
adc
ja
or
ja
dec
mov
cmp
sub
jne
adc
aas
sub
xchg
sbb
inc
mov
cmp
ds
fidivl
xor
adc
or
mov
mov
shl
inc
cli
xlat
scas
scas
movsb
dec
stos
xlat
aaa
inc
std
push
inc
jno
sahf
jle
adc
or
pushf
push
dec
xchg
push
sbb
lahf
xchg
movsb
popf
popf
mov
sbb
jbe
not
lahf
idivl
aam
dec
stc
sbb
pop
imul
or
enter
lcall
pop
cli
nop
cmp
sahf
sahf
sub
adc
push
leave
pop
fwait
int
test
in
xchg
adc
movsb
mov
aaa
dec
jp
std
mov
cmp
xchg
cs
jge
stc
jns
sahf
mov
leave
mov
in
jne
popf
push
imul
in
gs
dec
push
inc
in
lea
push
rcrl
xchg
add
or
cmpsl
push
sub
cmp
mov
pop
mov
popfw
jns
rorb
xlat
addr16
pop
pop
xchg
das
xor
add
xchg
fmull
sub
out
sti
iret
fcoms
decb
test
scas
mov
cmp
cmp
decb
add
mov
jge
push
push
sbb
fwait
xor
push
and
leave
arpl
aaa
outsl
es
dec
mov
adc
xor
test
in
xchg
cld
add
cs
sbbb
fstl
add
lds
js
sbb
pop
xchg
xchg
inc
repz
xor
xchg
pop
xchg
repnz
test
test
loope
dec
xchg
imul
fildl
push
ret
mov
in
or
sti
xchg
loopne
add
loope
lock
push
lods
adc
inc
lahf
popa
into
mov
nop
loopne
pop
lahf
jbe
aaa
add
or
hlt
outsb
repz
arpl
data16
or
mov
movsb
sub
add
mov
stos
es
mov
mov
xor
mov
inc
and
lahf
push
shlb
fcompl
fxam
inc
xchg
je
sar
fdivrs
icebp
mov
jae
sub
cmp
fmul
ja
aam
jne
loope
xchg
dec
cmp
xchg
jne
add
aas
hlt
jno
call
lcall
mov
jo
jmp
movsb
out
or
sarb
push
rolb
dec
pop
insl
enter
in
lret
sahf
das
fs
lahf
lret
inc
dec
adc
insb
icebp
inc
sti
or
jae
and
out
mov
sub
push
xchg
outsl
mov
adc
add
inc
add
and
repnz
jns
enter
sub
andb
rol
popa
lods
and
sbb
sbb
sub
push
leave
notl
inc
dec
inc
jl
xchg
les
adc
inc
fcomps
push
aad
push
loop
lods
inc
dec
rorl
std
repz
mov
sub
cld
mov
fadd
cmc
push
push
xor
mov
fmull
aas
fistpll
cmp
add
adc
and
out
dec
lock
icebp
cwtl
jb
jl
js
mov
xor
add
push
push
daa
mov
inc
invd
or
mov
push
in
stos
pop
gs
into
push
pop
pop
inc
loope
add
xor
es
cmp
stos
or
lahf
js
mov
adc
lahf
dec
or
cmp
adc
clc
pushf
jnp
sbb
test
fincstp
add
dec
out
xor
jl
push
aaa
dec
aaa
inc
jnp
cwtl
incl
xchg
js
test
divb
movsb
repz
sbb
in
xor
pop
pop
imul
xchg
clc
mov
dec
cmp
mov
mov
or
daa
xchg
fcomps
lods
icebp
out
lods
inc
out
outsb
mov
jecxz
mov
sub
xor
and
sbb
in
inc
shufps
or
mov
jb
andb
andb
jmp
jns
loope
mov
push
lock
push
lods
or
jno
lods
or
mov
dec
dec
pop
mov
jg
mov
adc
inc
sbb
cli
clc
sti
lret
test
sub
xor
push
push
pop
mov
xchg
daa
andl
int3
pusha
jmp
cmpb
inc
cmpsb
pop
dec
nop
mov
xchg
add
xor
mov
cmpsb
jb
pop
mov
les
or
shll
loop
sbb
mov
sahf
lods
jae
imul
cltd
sbb
or
xchg
subl
and
fucomi
xor
arpl
xchg
mov
scas
lea
insb
mov
mov
adc
mov
repnz
inc
pusha
jl
cmpl
push
ret
xchg
push
mov
or
adc
dec
cmpsb
sub
ljmp
pop
insb
adc
out
shlb
and
bnd
mov
mov
push
add
adc
inc
mov
push
out
and
jge
notb
out
into
mov
popf
cld
jo
pop
push
dec
pop
jp
and
jae
imulb
xor
cmp
les
aaa
sbb
sbb
mov
cmp
ret
inc
xor
push
jnp
push
call
cmp
scas
std
sub
mov
push
xor
movb
push
xor
xchg
or
das
bswap
sbb
lock
es
stos
mov
xor
mov
lcall
andl
out
fimull
cmc
add
dec
push
add
xor
push
adc
repnz
pop
rolb
cmpsl
push
je
shlb
stos
jecxz
out
movsb
fwait
lods
jp
adc
xchg
jmp
cmp
outsb
ja
enter
adc
pop
ss
jne
xchg
xor
add
inc
loope
or
push
or
pop
outsb
mov
mov
stos
ret
mov
adc
inc
xor
pop
js
sub
gs
js
push
int
fidivl
jno
jne
jne,pn
dec
mov
pop
aaa
aam
jecxz
cmp
ds
push
mov
and
sub
cmp
test
in
push
cmp
dec
ret
in
jge
add
outsl
cmp
test
push
jno
fisubl
sbb
pop
adc
sbb
aaa
xor
dec
pop
mov
or
out
into
mov
stos
xchg
push
repnz
out
js
inc
jl
inc
popf
mov
call
sbb
jno
cmp
or
or
sub
mov
xor
gs
cmp
mov
or
sbb
cmp
dec
imul
in
gs
xchg
jnp
jbe
aas
sbb
pop
push
mov
cwtl
adc
jmp
out
jne
xchg
lods
jbe
mov
xchg
pop
xchg
pop
mov
nop
sub
or
movsl
ljmp
out
push
mov
xor
push
push
mov
imul
and
mov
xor
adc
push
mov
sub
jg
mov
notb
mov
pop
inc
movsb
sub
outsb
iret
movsb
je
mov
scas
cmp
sbb
inc
stos
cmpsl
test
hlt
fdiv
mov
sbb
loopne
push
daa
orb
add
dec
sarl
lock
shrb
in
sbb
call
es
xor
je
xlat
iret
mov
mov
shll
jb
lahf
inc
ret
mov
mov
movsl
decb
pop
sbb
ss
adc
rcll
outsl
sbb
sbb
ljmp
stos
popa
stos
arpl
int3
pop
xor
pop
xchg
sbb
mov
repnz
xlat
push
jno
or
outsb
or
in
and
fwait
push
fdivr
imul
xor
sbb
mov
mov
adcl
fisubs
into
jmp
jno
cwtl
mov
lret
sbb
xor
xor
lea
xchg
inc
sub
int3
sahf
pop
mov
mov
in
and
mov
jp
sub
inc
push
jo
and
cltd
int
lock
inc
ret
or
add
fsubp
pushf
sbb
and
outsl
xor
stos
fcmovnb
repz
or
stos
and
les
sub
sbb
mov
or
les
sbb
mov
int
or
pop
sbb
test
sbb
lea
lock
add
mov
mov
dec
pop
push
lock
xchg
or
outsl
movsb
and
popa
hlt
fwait
xchg
mov
popa
xchg
and
loopne
add
cmp
aam
mov
mov
dec
mov
mov
je
xor
test
ja
aam
dec
shl
inc
push
sub
nop
pop
xor
xor
pop
test
mov
dec
mull
idivb
xchg
nop
orb
pop
orl
sbb
mov
sarb
insl
cli
add
or
push
mov
lock
pop
js
pushf
jno
mov
fldt
movsb
cmp
pop
cmp
loop
arpl
mov
mov
or
std
sbb
dec
insb
jp
inc
loope
popf
pop
add
sar
hlt
mov
lret
daa
leave
push
pop
sub
leave
data16
sub
jo
mov
xchg
inc
pop
mov
jmp
insl
sbb
in
and
or
leave
push
xchg
fnsave
mov
push
push
push
cmpsb
xor
sub
or
jecxz
pop
and
sti
call
xchg
jp
push
dec
and
sarb
dec
inc
pop
push
fcompl
sub
push
das
fsubp
add
jl
aaa
pop
mov
int
xchg
cltd
mov
or
push
sahf
fs
xchg
sub
and
or
or
fistps
insb
inc
mulb
and
sub
test
and
out
xor
adc
mov
sbb
divb
push
js
xchg
lahf
or
test
lret
add
mov
push
and
int
jp
int
cmpsl
fdiv
rorl
and
or
lcall
ds
mov
push
jbe
fidivrs
jp
rcl
mov
sub
cld
pop
and
xchg
pop
dec
push
fmull
xor
inc
xor
into
push
cmp
inc
cmp
icebp
pop
addr16
lahf
or
std
es
pop
mov
jbe
enter
sti
add
jne
xchg
mov
rcll
dec
shrl
cmpsb
mov
cmpsl
dec
adc
dec
int3
adc
and
or
mov
inc
pop
clc
fidivl
inc
add
and
xchg
sub
cmpsb
jl
xor
inc
scas
pop
outsb
xchg
imul
in
test
icebp
lahf
in
dec
mov
or
test
shll
js
pop
and
popa
cs
or
sub
int
les
lret
xor
mov
mov
leave
cli
testb
jmp
test
outsb
arpl
mov
xchg
imul
in
iret
push
mov
data16
push
ljmp
sbb
insl
popf
jbe
lods
sbb
je
fwait
mov
addb
inc
jnp
iret
outsl
fs
dec
mov
push
xor
pop
lods
adc
mov
sbb
jecxz
movsl
fwait
mov
addr16
lods
repz
cmp
sbb
mov
mov
rcr
mov
cs
sub
loopne
xchg
cltd
mov
fwait
sbb
cmp
xor
mov
cs
fcomps
arpl
rorl
aad
movsb
leave
mov
push
fstp
icebp
fldcw
jg
sub
dec
adc
imul
and
in
xchg
mov
pop
fnsave
or
xor
or
cmpsl
lcall
push
test
xchg
dec
sub
subb
xchg
popf
ss
dec
sti
jb
fwait
lea
push
sbb
mov
jl
icebp
mov
popa
in
sbb
push
nop
cmpsl
or
adc
mov
stos
jne
subps
arpl
fmull
hlt
mov
xorl
fs
clc
sbb
push
inc
imul
mov
divb
arpl
push
enter
inc
mov
popa
pop
std
add
mov
xor
jecxz
divb
mov
mov
sbb
dec
pop
jae
in
aaa
fstpl
stos
insb
xchg
push
push
outsl
popf
ret
pop
adc
jnp
es
dec
cs
in
bound
push
stos
add
pushf
push
test
aas
test
das
xchg
and
clc
pushf
xor
mov
iret
cli
insl
cmpl
sub
shrl
sbbl
ss
fwait
jl
cwtl
mov
inc
gs
push
test
arpl
or
or
sub
sub
rolb
insl
inc
outsl
pop
pop
adc
cmp
inc
ds
shrb
xchg
jl
int3
and
mov
push
jl
rorb
ljmp
adc
orb
and
mov
outsl
fdivrl
daa
add
dec
pop
test
fnstenv
les
rorl
test
inc
iret
lcall
cwtl
cmp
popf
sbb
not
aaa
xor
mov
out
lods
pop
sahf
dec
out
xchg
sub
cmp
stos
push
mov
and
dec
push
cmp
add
fs
push
aaa
inc
gs
enter
xchg
sub
cmp
sti
push
jae
idivl
mov
mov
push
mov
dec
sarl
aaa
cmp
pop
dec
sbbb
shl
xor
xchg
icebp
push
cmp
stc
cmpsb
sub
clc
sbb
mov
sbb
out
or
mov
mov
mov
pusha
push
jl
ds
arpl
arpl
mov
sti
divb
and
sub
mov
jbe
fnsave
adcb
adc
sbb
push
xchg
mov
cmc
sub
fidivs
repnz
push
push
sub
daa
jl
xchg
or
loope
mov
xor
insl
orl
jp
lahf
out
and
rcl
ds
inc
xor
and
insl
add
stos
ljmp
or
cld
shlb
jmp
xlat
jb
push
sbb
jne
sti
fsubp
test
push
aam
mull
aad
loop
sti
pop
nop
adc
cwtl
mov
mov
fimuls
jge
jns
mov
inc
or
cwtl
push
dec
movsb
xchg
add
in
ret
out
call
inc
imul
pusha
sbbl
jno
outsl
cld
pop
inc
dec
ss
inc
add
mov
push
push
data16
sub
daa
mov
sbbl
sbb
fimuls
es
push
jle
adc
test
test
push
dec
pop
les
js
shlb
nop
inc
mov
jbe
fisubrs
mov
xor
mov
adc
push
mov
pminsw
stos
stc
imul
dec
outsl
xor
sti
cmp
mov
push
mov
sub
jg
and
mov
xor
sbb
stos
pop
lea
clc
adc
aad
or
les
add
mov
insl
iret
in
sub
scas
inc
mov
mov
jmp
cmc
outsl
cmc
add
inc
push
mov
lea
pcmpeqd
repz
push
icebp
push
dec
movsl
pop
out
dec
adc
test
out
pushf
xor
hlt
push
jbe
insb
loop
out
add
fstl
sub
mov
adc
ret
xchg
sbbl
xlat
into
iret
loop
push
sbb
sti
push
movsb
dec
inc
inc
ds
xchg
imul
out
lock
out
cmp
in
push
stos
xchg
sbb
push
inc
ja
add
mov
lock
outsl
inc
lret
test
xor
outsl
daa
shll
sbb
mov
js
pop
lods
xchg
mov
jmp
push
mov
add
pop
push
pop
add
dec
loopne
sbb
adc
push
dec
enter
fidivs
inc
cwtl
add
xor
xor
inc
adc
fwait
je
bnd
subl
leave
xor
aas
xchg
xlat
ficoml
pop
xchg
jo
mov
test
mov
test
push
jbe
adc
imulb
or
inc
gs
dec
and
and
daa
or
aad
subl
dec
pop
xchg
lods
pushf
dec
jns
test
jbe
sbb
jbe
lods
arpl
push
sbb
sbb
inc
ret
cmp
xor
rcll
jmp
sub
jp
inc
push
cs
stc
test
xor
ja
pop
test
and
mov
test
mov
push
push
add
pop
mov
es
bound
arpl
shl
lea
fsubr
inc
ret
mov
cmp
xchg
fisubl
cmp
push
sub
xchg
push
testb
pop
cmp
addr16
fs
add
sarb
xchg
xor
imul
stc
xchg
mov
int
pop
adc
das
movsl
cmp
imul
idivl
mov
mov
lods
mov
loopne
into
pop
mov
in
dec
adc
daa
sub
cmp
mov
lds
movl
in
scas
cmp
lods
popa
cmp
scas
jecxz
popa
adc
fwait
loope
std
push
sbb
dec
xor
push
ret
push
jg,pn
pop
sub
popa
repnz
mov
repnz
xchg
mov
add
push
scas
push
jle
lock
sub
xor
decb
mov
hlt
xchg
rorl
dec
mov
jge
sbb
mov
out
stc
enter
jle
repnz
out
cmp
add
out
xorl
out
adc
sub
data16
xor
in
imul
je
or
dec
cmpsb
shrl
sbb
and
add
add
mov
in
cld
xchg
insl
xchg
mov
jmp
mov
in
inc
decl
mov
mov
repz
sub
scas
mov
cmp
fs
add
or
cs
dec
aas
pop
aad
push
mov
pop
adc
mov
daa
cmpb
leave
add
lds
sbb
adc
mov
mov
shlb
ljmp
and
or
outsl
add
call
xchg
out
ret
adc
and
cmp
inc
cmp
in
dec
and
pop
divb
mov
iret
dec
mov
jnp
mov
or
xor
lret
mov
dec
xchg
movsl
std
cltd
xchg
ret
ljmp
addr16
loop
pop
insl
and
pusha
cmp
add
outsl
lds
adc
sub
mov
ret
and
push
je
add
ds
rolb
pop
lret
and
in
push
adc
repz
mov
inc
lret
std
xchg
mov
test
cmp
push
xchg
pop
push
orb
aam
into
repz
pusha
and
mov
jle
aad
jmp
dec
hlt
push
and
loope
ds
rorb
push
mov
stos
or
popa
inc
adc
out
dec
out
and
cmpsl
cmp
push
in
cmp
jb
call
mov
xorb
jbe
adc
mov
pusha
pop
sarl
pop
adc
xor
xchg
insl
sbb
in
imul
popf
jb
cmp
mov
loopne
inc
or
cmp
jp
or
testb
mov
jecxz
push
cld
clc
sub
aaa
outsb
ljmp
xor
in
jbe
addb
popf
ficompl
jecxz
jmp
pop
mov
iret
jle
push
aas
mov
mov
mov
ds
jl
push
fnstcw
mov
cmp
out
adc
mov
fcompl
int
mov
adc
mov
adc
jae
cwtl
xchg
mov
enter
test
fs
jno
inc
rcrl
cmp
and
fs
pop
repnz
in
divl
movsl
in
xchg
ficoms
pop
lods
loop
cmp
hlt
jl
outsb
icebp
mov
xlat
mov
mov
popf
mov
lds
mov
inc
push
pop
aas
push
add
or
rolb
sbb
aam
sbb
out
push
add
fidivrl
pop
push
xor
enter
or
mov
aas
sti
xchg
test
push
jno
cltd
lds
push
xor
jnp
pop
pop
fnstsw
enter
or
fistpl
std
add
rcr
xchg
mov
sarb
and
sbb
pop
mov
sub
pop
jno
pushf
in
sbb
add
leave
jg
and
lcall
sbb
cmp
repnz
push
dec
rorb
push
sqrtps
sub
xor
ret
sbb
pushf
lods
insb
fidivrl
outsb
nop
push
or
sbb
adc
inc
push
push
inc
dec
push
cmpsb
clc
addb
dec
or
test
ljmp
lock
aas
sub
in
sub
cmp
ljmp
inc
and
fwait
mov
hlt
add
or
std
clc
cmp
stc
cs
pop
lret
into
insl
enter
popl
xchg
mov
jnp
out
sbb
out
insl
push
dec
and
add
icebp
cmp
leave
ret
mov
ret
sbb
ss
clc
sub
mov
aaa
inc
inc
bound
jmp
test
mov
and
roll
dec
adc
outsb
cmpsb
fbstp
pop
pop
mov
push
jecxz
jg
pop
aas
mov
loope
dec
fld
test
adc
mov
stc
jmp
jno
inc
push
xchg
cmc
add
mov
sbb
jle
in
mov
mov
jns
cwtl
and
cmp
cltd
mov
sub
repnz
jg
dec
xchg
ss
cld
or
jbe
xor
push
shr
enter
cmp
mov
sub
or
fadds
add
inc
mov
call
mov
jmp
mov
test
test
scas
ja
or
mov
dec
gs
mov
mov
sar
adc
push
in
rorb
sarl
inc
imul
mov
mov
insb
push
fwait
adc
inc
mov
lods
repz
dec
jl
ret
bound
lret
fnstsw
sbb
push
notb
insl
jae
or
lods
push
adc
jg
int
mov
test
jae
xor
mov
push
and
push
mov
loopne
aas
aam
or
mov
mov
mov
and
sbb
shr
rcll
inc
jns
es
pop
ljmp
cmc
in
and
sbb
popa
jmp
sub
push
stc
sarl
out
push
insl
jmp
dec
mov
pop
xchg
shll
add
rorl
cltd
xor
mov
rclb
push
push
mov
cli
xchg
add
cmp
mov
rcrb
cmp
add
inc
pushf
loope
and
sbb
cmc
fcomi
lds
mov
fs
mov
not
mov
sub
xor
dec
xor
cmp
in
js
mulb
push
dec
decl
jge
icebp
es
int
sub
mov
push
jae
adc
jge
mov
pop
pop
xchg
movsl
add
adc
sub
je
inc
bound
pop
repnz
and
cwtl
add
sub
cmp
aam
dec
sbb
shrb
int3
fidivrl
sub
lods
leave
pop
jno
dec
jne
sub
adc
pop
inc
es
xlat
cmc
arpl
pop
aaa
fcmovnbe
mov
xlat
xor
mov
pop
fiaddl
pop
pop
cmp
ret
mov
add
in
movaps
shufps
xor
shrl
mov
pop
out
or
push
xchg
xchg
xchg
fisttpll
jmp
leave
jnp
or
xchg
dec
lds
test
arpl
xchg
add
push
int
pop
stc
gs
aad
leave
sbb
mov
daa
jp
push
or
lds
jmp
and
fisubs
sbb
movsb
cmc
inc
rorb
inc
lcall
leave
jae
push
adc
repnz
pop
mov
std
xor
pop
mov
dec
pop
cmp
pop
inc
je
and
cmp
sbb
test
add
arpl
jae
testb
cwtl
push
fs
cs
cmovne
mov
jb
mov
ret
rcr
jp
dec
inc
adc
jmp
pop
pop
and
ja
insl
repz
int3
lcall
iret
adc
aad
pushf
jne
or
dec
inc
cli
or
pop
into
and
add
les
and
gs
fbstp
test
xor
notb
pavgw
cmp
lods
test
leave
or
out
cltd
inc
xchg
enter
iret
in
xlat
dec
add
mov
pop
and
mov
mov
and
jp
mov
and
jbe
dec
or
add
imul
fcmovnb
mov
sbb
repnz
ja
inc
lock
mov
gs
lods
in
fmul
sbb
inc
sarb
popf
jne
or
mov
mov
xor
lcall
mov
movsb
add
lahf
rep
inc
or
imul
aam
and
ja
dec
mov
int
add
test
enter
lods
push
imul
icebp
mov
subb
sbb
mov
xor
pusha
pop
and
ret
cmp
sbb
std
xorl
xchg
jle
push
push
and
push
mov
sbb
mov
js
dec
mov
mov
mov
fwait
or
pop
and
ja
mulb
int
xchg
mov
or
enter
mov
dec
and
inc
fidivl
test
xor
in
pop
shlb
popf
inc
mov
and
cmp
sub
imul
xorl
jae
and
shlb
adc
jp
bound
adc
dec
add
movsl
mov
mov
jnp
int
test
pop
jnp
sbb
sub
xchg
rclb
rcrb
filds
clc
repnz
xor
test
orb
sti
xor
sbb
mov
scas
scas
clc
xor
pop
fs
pusha
xlat
cmp
lret
mov
push
jp
mov
pop
dec
cli
js
inc
cmpl
inc
lods
mov
xor
pop
leave
out
clc
int3
xor
loop
adc
jnp
mov
jg
sahf
ja
sbb
mov
adc
nop
ficompl
popa
mov
test
cmpsl
js
rol
xchg
jae
das
shl
pusha
ror
sub
repz
adc
or
sbb
and
scas
bound
push
lahf
out
rcr
popf
daa
jmp
fdivl
xchg
sub
dec
sbbl
lret
cmc
adc
jns
shl
iret
lea
and
mov
bound
jae
inc
sahf
mov
sbb
jno
rcl
fld
sbb
and
mov
mov
pop
inc
add
mov
xlat
scas
cs
imul
daa
shll
jnp
mov
cmpsl
shll
add
ss
jns
sbb
jb
jne
out
xor
xchg
mov
stos
xor
faddp
dec
push
jge
xor
bound
mov
popf
adc
sub
popf
inc
xor
fs
pop
xchg
shll
mov
call
adc
sbb
cltd
test
decl
loop
or
cld
push
xchg
add
cmc
mov
ret
mov
gs
scas
xchg
mov
jp
ret
js
sub
stc
lds
mov
mov
mov
mov
xor
add
dec
jecxz
ret
add
gs
inc
xchg
clc
bound
lds
jl
imul
xchg
cmp
lret
xchg
mov
repz
das
aas
popf
xchg
push
int3
mov
jne
ja
ret
pusha
jbe
fwait
lahf
mov
sti
mov
push
add
push
jp
iret
add
sbb
imul
or
push
sbb
adc
inc
pop
jne
pop
out
adc
mov
jbe
mov
mov
mov
pop
faddp
push
mov
push
or
push
cmc
std
push
sub
xor
shlb
jg
jmp
jo
andb
mov
les
scas
ret
insl
mov
data16
xchg
add
add
mov
mov
mov
cmovae
cmp
cmp
or
push
sti
and
pop
cmp
sub
or
pop
outsl
jns
mov
push
and
lods
sub
testl
xchg
mov
aaa
xor
fs
jae
fs
sub
int3
inc
popf
rolb
mov
xchg
cmp
in
xchg
push
adc
mov
jb
and
push
sbb
loopne
mov
jmp
cs
cmp
xchg
mov
mov
xchg
and
sbbl
loope
stc
jl
pusha
dec
aaa
test
xor
and
pop
mov
xchg
addr16
lods
stc
mov
push
jae
data16
mov
xor
and
mov
nop
adc
addb
repz
leave
pop
cmp
dec
icebp
std
aas
jecxz,pt
fiadds
mov
xchg
xchg
ljmp
jns
lret
mov
idivb
inc
lret
mov
call
bound
pop
lods
sbb
rorb
pop
mov
mov
push
mov
cltd
gs
jg
pop
insl
sub
loopne
in
enter
aas
xor
test
xor
aas
decl
stos
jb
jecxz
test
xor
or
mov
ja
outsb
xchg
mov
jo
dec
sub
jmp
mov
cmp
pop
jecxz
clc
jbe
imull
rclb
sbb
cmp
mov
int
out
ret
xchg
pusha
push
lock
insb
loop
jne
inc
es
mov
bound
stos
pusha
mov
movsb
xchg
sub
lcall
lods
push
sbb
call
test
lods
jb
add
mov
std
dec
cmpsb
dec
enter
out
test
mov
ds
adc
pop
pop
lcall
pop
scas
punpcklwd
cmpsl
cmpsb
cltd
mov
je
push
mov
sub
mov
and
arpl
xor
push
dec
in
pop
lds
sbb
sahf
mov
xor
scas
xlat
iret
fidivl
es
add
xchg
push
mov
mov
sub
loopne
cmpsl
or
in
pop
popl
dec
lret
xchg
xchg
inc
jecxz
ret
stos
fcomp
and
mov
mov
cld
lcall
popa
sbb
shlb
movsl
sbb
es
outsb
in
cmp
fistl
lods
adc
pop
push
scas
stos
in
and
sbb
push
or
sub
cmpsb
mov
ljmp
neg
mov
and
jne
xchg
out
xchg
repnz
arpl
data16
fcmovnbe
or
out
in
repz
in
mov
subl
nop
mov
push
sub
xor
dec
loope
ss
adc
push
push
pop
iret
xor
out
dec
hlt
in
sub
mov
sbb
incl
mov
test
mov
xchg
lret
in
add
or
jmp
xor
pushl
mov
adc
pop
dec
jecxz
movsb
mov
sti
incl
sahf
fnstcw
repz
int3
mov
mov
fsub
fbstp
fst
adc
xchg
js
hlt
or
popf
jb
or
outsl
mov
popf
xlat
pop
out
mov
add
test
dec
aas
iret
insl
or
repnz
push
subl
into
xlat
adc
cmp
stc
lods
and
jmp
popf
bound
sti
xchg
pushf
pusha
aam
pop
repnz
sbb
mov
push
ds
jo
int
or
xor
and
inc
fistpl
xor
mov
mov
mov
popa
cmp
or
ret
enter
arpl
push
xor
cmp
jb
adc
hlt
sbb
loop
and
testb
es
pop
sar
xchg
je
dec
xchg
movsb
scas
je
and
loope
inc
sahf
pop
pop
pop
xor
adc
xlat
inc
ljmp
or
cmp
push
xlat
mov
inc
lcall
jo
test
push
inc
adc
mov
lock
ret
mov
jo
cmp
adc
enter
mov
jne
jnp
pop
jo
sub
mov
jecxz
dec
pop
mov
pop
pop
sub
jnp
mov
jg
ret
jb
xor
pushl
mov
xchg
out
int3
push
or
aad
je
mov
pusha
mov
jp
test
mov
lds
sahf
imul
gs
push
cmp
push
les
sub
hlt
mov
mov
dec
bound
xchg
push
adc
sbb
add
shl
add
scas
xorl
mov
lock
test
sub
mov
pop
push
and
leave
mov
mov
lret
scas
sub
mov
loop
mov
lfs
cld
lret
adc
push
int3
jns
imul
repz
sub
out
xchg
sub
leave
xchg
push
sub
mov
adc
sbb
jecxz
push
dec
push
mov
xchg
daa
push
lahf
mov
notl
pop
mov
outsb
shlb
scas
popf
test
jnp
pop
pop
rclb
xchg
lods
push
mov
push
xchg
stc
cli
daa
push
cmp
pop
pop
push
push
sbb
loop
cmp
sti
add
pop
pop
push
nop
add
inc
cmp
or
mov
mov
sub
fildl
xorl
cmc
mov
push
xor
cli
iret
je
sbb
outsl
lds
and
loop
out
loopne
mov
outsl
mov
addl
mov
xchg
add
aas
add
mov
fsubrl
pop
pop
and
push
icebp
mov
adc
lods
lret
fildl
and
lret
cmc
sbb
xor
sbb
push
inc
mov
and
adc
push
pop
je
or
data16
xor
sbb
pop
jb
mov
dec
adc
or
mov
cs
mov
decl
pop
lcall
jne
out
pop
xchg
inc
mov
arpl
sbb
push
aam
mov
loop
loopne
pop
dec
inc
arpl
test
add
out
in
xchg
and
xchg
cs
dec
aad
pop
lahf
lds
in
dec
js
mov
andb
outsl
mov
or
dec
cmp
dec
fsincos
ret
push
xor
jl
icebp
inc
sub
ret
mov
inc
add
cmp
cmpsl
add
das
or
jmp
gs
push
inc
mov
push
dec
sub
roll
pop
stc
outsb
hlt
ja
adc
pop
and
cwtl
ret
adc
mov
sahf
jp
loopne,pn
mov
dec
int
and
adc
lret
push
div
add
cld
cmp
adc
lea
xchg
inc
arpl
jle
pop
adc
mov
hlt
dec
pop
in
aam
adc
mov
movsl
add
mov
sti
mov
xchg
add
ret
jae
pop
jge
cmpl
dec
push
hlt
iret
cld
xchg
xorl
cmc
or
push
loop
imul
inc
sub
pop
pop
es
mov
or
xchg
jnp
xchg
mov
aam
mov
das
aas
addb
mov
out
fistpll
inc
xor
add
insl
xorb
mov
or
xchg
push
inc
imul
in
mov
lret
ja
pop
cmpsb
lret
jp
in
lds
add
rep
inc
add
push
dec
xlat
daa
arpl
jl
xchg
pop
pop
pop
mov
sub
dec
mov
es
sbb
imull
pop
in
xchg
pop
add
mov
fisttps
aad
push
sbb
sub
and
push
mov
inc
aad
xor
lods
orb
scas
test
pop
pusha
cmp
call
ja
cld
mov
pusha
not
ds
ret
inc
and
mov
push
jbe
cld
cmp
stc
dec
inc
add
sarl
addl
add
int
sub
arpl
and
sbb
cld
pop
and
dec
in
adc
jle
std
out
icebp
lods
sub
jno
adc
hlt
add
cmp
xor
inc
add
mov
test
pop
add
jecxz
pop
inc
inc
cmc
or
test
into
mov
mov
cwtl
add
cmp
push
push
je
mov
aam
and
test
imul
add
outsl
sti
and
and
add
ja
xor
mov
les
insb
and
push
movsb
pop
fidivl
scas
hlt
cli
bound
in
xchg
sahf
sbb
je
adc
sub
in
pop
pushfw
cmc
pushf
loopne
dec
adc
xlat
mov
cmp
inc
inc
adc
or
mov
fimuls
aam
out
xchg
cltd
dec
fidivrs
cmp
out
rorl
add
int
cmp
cmc
sti
into
idivb
rolb
cmp
das
adc
idivb
ret
sbb
loop
inc
add
in
xor
sbb
xchg
add
loopne
sbb
inc
ds
sti
outsb
cwtl
xor
cmpsl
loop
dec
js
cld
jnp
sub
or
addr16
adc
hlt
mov
in
jno
and
in
popf
jnp
mov
lds
pop
dec
je
inc
test
adc
es
push
xchg
mov
movsl
sbb
enter
enter
int
xchg
or
jno
xor
xor
xchg
mov
mov
adc
push
push
and
fisubl
repnz
cmp
sub
inc
test
movsb
xchg
loop
ret
leave
mov
xchg
out
pop
negb
scas
sub
and
and
repnz
mov
pop
in
pop
outsl
sub
adc
icebp
je
rol
enter
push
add
aas
addr16
pop
fadd
clc
dec
ds
ss
movsb
push
xchg
jo
imul
mov
imul
lea
stos
pop
mov
inc
xor
cltd
sbb
es
and
jp
fdivs
nop
pusha
inc
xchg
je
addr16
call
jmp
pop
outsb
sub
mov
add
insb
and
push
add
pop
cltd
inc
jmp
fldt
shrl
loopne
mov
xchg
popf
xchg
xlat
pushf
ljmp
xchg
iret
mov
push
enter
ficompl
adc
in
xchg
add
fdivrs
push
les
adc
sub
pushf
es
add
in
push
repz
mov
jno
sar
xchg
xchg
addr16
jnp
fdivrs
jne
sub
fwait
mov
add
ret
push
sarl
mov
push
sti
fmull
daa
nop
enter
fisubrl
daa
add
mov
in
sub
mov
and
jb
sub
lods
or
push
mov
inc
add
cmc
call
push
movswl
ror
es
loope
push
push
mov
push
fldl
das
outsl
scas
mov
sub
mov
bound
xor
ja
inc
icebp
ja
jb
mov
cmpsl
dec
mov
mov
mov
shlw
pushf
inc
add
jl
loopne
aam
aaa
arpl
icebp
sbb
std
jge
insb
test
dec
lret
cs
sahf
call
push
repnz
out
je
sbb
leave
hlt
rcr
mov
fmuls
mov
jmp
lret
mov
sub
imul
mov
sbb
iret
mov
ret
arpl
lcall
daa
or
lahf
mov
xor
sub
mov
sub
cmpl
mov
lea
mov
repz
sbb
in
mov
push
jb
insl
test
aam
imul
push
lods
jl
jnp
mov
es
test
call
ror
fnsetpm(287
and
cmp
les
xchg
mov
sbb
mov
test
je
in
cmp
in
sbb
test
test
sbb
or
sub
fdivr
out
mov
daa
and
insb
out
repnz
sti
mov
in
lods
mov
movsb
push
arpl
cmp
stos
icebp
in
fwait
sbb
jb
stc
mov
bnd
mov
sbb
pop
pop
adc
lods
outsb
xchg
xor
push
sub
test
or
jne
cmp
mov
test
int
test
loopne
fwait
sbb
push
ret
rcll
mov
or
dec
fistl
gs
or
xor
push
out
daa
or
shll
xchg
sbb
mov
inc
pop
dec
dec
dec
in
dec
xchg
push
sbb
fcom
fisubs
mov
add
push
sbbl
add
stos
fwait
mov
hlt
xchg
fmull
mov
pop
test
xor
inc
rolw
dec
rcrl
lds
xlat
mov
fs
and
push
push
repnz
jno
orl
test
sbb
dec
fmull
cmp
xorl
imul
mov
into
in
push
fmuls
push
push
aam
loopne
std
decb
push
fimull
dec
mov
rcll
movsl
jp
mov
pop
ret
or
data16
push
enter
call
add
movsl
jl
in
add
xor
xlat
sahf
mov
jecxz
cli
jbe
xchg
in
adc
inc
push
mov
xchg
mov
daa
test
ficomps
bound
cmpsb
ss
int3
cmpsb
inc
inc
outsb
mov
std
test
mov
mov
and
call
aas
mov
pop
daa
push
push
aaa
imul
jno
mov
orl
sub
stc
test
lcall
ret
sbb
dec
pop
ss
or
lods
mov
lods
repnz
fwait
lds
or
insl
and
repz
and
cli
cwtl
clc
gs
in
push
ss
xchg
and
mov
addr16
test
mov
int
out
fistpl
into
cwtl
std
mov
mulb
sarb
shrb
and
xor
pandn
test
ds
dec
add
cld
rorl
fcomi
sub
pop
js
cwtl
pop
push
or
pop
pop
aas
aas
cltd
movsb
in
adc
or
push
mov
xchg
cmpsb
and
xchg
cli
jae
cmp
mov
out
cmpsl
leave
repnz
inc
lret
cmp
jnp
jp
out
push
xor
fistps
fcompl
add
nop
leave
adc
xor
xchg
adc
test
jl
rol
clc
push
daa
fwait
gs
adc
ljmp
loop
jge
xchg
inc
xchg
test
jae
gs
stos
push
dec
shll
mov
adc
mov
in
mov
or
xorps
add
cs
outsw
cmp
shlb
mov
inc
jle
test
shll
outsl
sti
out
mov
lock
or
sbb
and
ja
movsb
lods
cmp
sbb
insb
xchg
leave
imul
xor
pop
mov
imull
sub
push
int
fs
mov
pop
icebp
lock
jmp
cld
jno
xchg
in
push
fldlg2
lcall
mov
jp
outsl
rcl
dec
add
jmp
xchg
out
imul
popa
jp
cmpsb
sub
loope
sub
loop
adc
aad
dec
jge
pop
outsb
jl
inc
scas
sahf
orl
shl
insb
lcall
cmp
daa
push
in
dec
mov
jle
mov
and
dec
jns
pop
fidivs
data16
push
out
ss
push
int
add
xor
or
mov
inc
pushf
mov
cmpsl
std
and
push
jl
fistps
fiaddl
sub
js
mov
add
subb
rclb
or
xor
mov
xor
fstpt
and
sahf
inc
leave
iret
push
aam
sbb
jp
cli
xchg
mov
dec
jl
scas
icebp
add
jno
mov
loopne
cs
cmp
movsb
push
icebp
mov
xor
cltd
lahf
mov
ret
xchg
pop
inc
loopne
sub
or
ss
std
jbe
dec
xor
and
adc
fsubrs
adc
repnz
and
mov
adc
clc
sbb
lret
dec
imul
xor
add
inc
adc
adc
aas
mov
push
pop
ror
repz
cld
mov
stc
test
pop
push
sbb
lods
cmpsl
pop
jno
gs
lods
mov
inc
or
or
sub
add
push
js
pop
cwtl
adc
sarb
mov
xchg
push
push
insl
xchg
dec
repz
mov
mov
cs
jo
sub
fucomp
jle
call
or
jnp
out
movsl
jle
mov
lods
mov
dec
xor
mov
pop
fiadds
test
ljmp
ret
xorl
rcll
sbb
enter
daa
push
or
pop
cmp
and
xchg
jns
jb
subb
adc
subl
cmpsb
mov
stos
and
lods
push
sti
mov
aaa
inc
andb
mov
sbb
pop
sbb
outsl
sub
lods
lahf
cli
cli
daa
inc
and
mov
push
dec
push
sbb
pop
xchg
in
out
pop
push
inc
pop
out
xor
int3
mov
scas
in
mov
adc
gs
mov
and
fs
sbb
movsb
cmc
hlt
cli
cmp
rcrl
stos
lock
xchg
clc
pop
in
fucomp
cld
jmp
sub
fsubrs
mov
jnp
leave
fisttpll
or
nop
sub
jo
icebp
loope
ja
ja
fidivs
aaa
xlat
inc
jnp
repnz
sahf
scas
xor
iret
jle
cwtl
repnz
xchg
mov
cmpsl
jmp
dec
sub
and
cmpsl
add
seto
int3
gs
not
es
gs
push
mov
lret
jle
mov
jecxz
and
sbb
xchg
inc
js
mov
or
bound
lods
out
test
idiv
lods
pop
bound
aaa
movsl
lods
dec
or
mov
enter
xchg
or
je
ljmp
xchg
push
daa
mov
enter
jmp
push
jno
decb
or
cmp
push
mov
fdecstp
xor
in
repz
outsb
mov
jmp
mov
sub
es
fiaddl
add
jp
pusha
dec
cmpsb
jle
add
imul
sbb
icebp
xchg
fcoms
adc
mov
je
das
gs
jge
mov
lock
cmp
or
loope
insb
cs
add
aam
pop
lds
rolb
mov
push
xchg
mov
pusha
jl
in
int3
or
mov
mov
iret
xor
sub
and
rolb
pop
rcl
out
add
xor
sahf
dec
ret
ljmp
push
ds
dec
pop
jae
sub
cli
adc
xchg
addb
mov
cwtl
sbb
popa
xchg
pushf
pop
lods
cmp
es
popa
dec
sbb
ret
inc
sbb
adc
repnz
lock
popf
adc
sarb
mov
adc
fidivrs
aam
add
cli
ljmp
dec
mov
dec
jo
push
inc
jle
mov
sbbb
rorb
dec
int3
push
adc
jns
call
sub
loope
cmpb
pop
and
aad
push
jecxz
jecxz
icebp
loop
push
cli
inc
or
push
or
xchg
loope
push
popf
jl
int3
inc
std
add
outsb
daa
stos
push
jle
lea
xor
pop
repnz
les
loop
or
sbb
adc
jbe
sub
int3
dec
arpl
ret
cltd
and
cmpsl
in
push
mov
jmp
ret
imul
loopne
out
jp
and
test
pop
mov
xchg
mov
push
in
bound
pop
cmp
inc
sbb
dec
jae
adc
fs
pop
rcll
cmp
inc
pop
aam
adc
lret
cmp
push
sti
inc
jg
add
ds
mov
ljmp
arpl
mov
xchg
addr16
sub
nop
call
sbb
mov
shrb
enter
inc
mov
sbb
pop
test
xor
sbb
adc
pop
xor
cli
sbb
cmp
lods
adc
inc
mov
inc
nop
xchg
xor
mov
inc
xor
push
jbe
fs
ja
lods
push
jle
and
cmp
fld
sti
xchg
xchg
mov
cmp
or
in
out
ficoms
aas
out
inc
jo
pusha
mov
and
sub
mov
repnz
movsl
in
fbstp
fists
jmp
sub
sbb
push
iret
lret
clc
das
fildl
xchg
mov
sti
pushf
std
xchg
pop
xor
ds
push
xor
pushl
jg
shll
mov
pop
popl
push
cmp
and
jbe
push
mov
xor
push
and
bound
xchg
test
or
push
xor
or
dec
xchg
dec
dec
xor
jno
pushf
insl
push
push
shl
cwtl
xor
jecxz
repz
idivl
lock
mov
jno
inc
nop
cmc
adc
sbb
jmp
fildl
in
cli
cmc
xchg
adc
or
pusha
push
or
dec
inc
pop
fdivrp
pop
sub
mov
lcall
in
scas
jp
xchg
inc
mov
das
and
and
repnz
repz
shll
mov
sbb
mov
out
fst
cwtl
jmp
sub
xchg
inc
jge
mov
jbe
or
mov
mov
loopne
sub
lcall
add
add
pop
es
pop
dec
stos
rorb
xor
and
mov
and
adc
repz
es
mov
inc
lret
mov
jge
mov
add
pop
cmpsl
in
xor
call
sbb
push
jno
cli
movsb
sbb
add
rorb
jl
pop
xor
fmul
pop
inc
pop
sarl
rcl
push
mov
imul
in
sub
pop
ret
and
xchg
cltd
sbb
inc
adc
and
enter
outsb
sbbb
jns
and
stc
cmc
sub
push
leave
nop
fs
jmp
pop
mov
mov
xchg
mov
xchg
in
das
inc
cmp
push
mov
outsl
test
mov
mov
call
fucomp
insl
stc
xor
mov
call
sarl
jge
push
mov
fcomps
lcall
scas
inc
out
jge
rcl
and
or
lds
out
ja
fwait
int3
ret
lea
mov
pop
idivb
push
out
js
out
out
sub
sbb
sbb
dec
inc
xor
jno
stos
popf
xor
cmpsl
hlt
out
rcrl
cmp
xchg
test
sub
in
enter
xchg
dec
mov
adc
jge
lahf
fisttpll
jl
aaa
push
out
xor
insb
ror
sub
lods
or
add
fcompl
repnz
or
push
test
jo
out
sahf
xorb
sbb
cltd
cmp
addr16
rol
xor
push
cltd
and
ja
sarb
xor
xor
sbb
dec
ljmp
leave
pop
cmp
jmp
popf
push
xor
shll
addr16
or
aad
dec
test
push
mov
inc
iret
cli
push
pop
sarb
test
jp
pop
jge
push
lcall
xchg
push
jecxz
cmc
dec
and
inc
xchg
sub
arpl
xor
js
pop
jecxz
sub
mov
push
sti
lods
and
in
and
sti
add
adc
mov
das
imul
sub
mov
adc
mov
dec
push
inc
cs
push
adc
aam
ds
ja
push
and
das
xchg
jg
jb
cwtl
pop
dec
sub
push
loop
sub
add
pop
mov
inc
lcall
dec
pop
insl
mov
out
mov
test
inc
add
mov
sub
cld
or
dec
nop
movb
decb
hlt
pop
cmp
pop
push
enter
xchg
mov
addr16
xor
daa
into
rcrl
or
lea
or
insl
adc
popf
inc
pop
cld
adc
pop
roll
sbb
pop
cmpsl
jo
jmp
sbb
inc
mov
das
lret
lret
cmp
xchg
add
es
adc
adc
jno
shll
ret
add
loop
ficomps
add
sti
loopne
stos
pop
sahf
lock
sbb
inc
imull
ljmp
and
jmp
sbb
mov
scas
xchg
or
pop
daa
xchg
aad
sahf
test
adc
sub
loopne
dec
xor
add
cmp
xlat
std
lods
xchg
sti
jle
popa
push
jne
aas
cltd
mov
add
cmp
clc
dec
jle
or
xchg
mov
repz
aaa
lods
insl
aas
call
add
push
shll
mov
lret
rorl
lret
dec
xchg
dec
pushf
icebp
push
insb
js
xchg
xchg
aas
fdivrl
ds
test
dec
iret
jge
fs
sub
lods
add
jl
push
movsb
mov
rolb
xchg
out
sbbl
mov
pop
int3
jp
rcl
and
fstl
orb
or
test
add
mov
int
push
movsb
mov
popl
popa
cmp
mov
cmpsb
nop
fdivrs
adc
xor
add
outsb
sbb
jmp
shlb
sub
pop
xchg
stos
hlt
scas
push
xor
push
cmp
adc
jne
mov
mov
inc
call
push
testl
cs
addr16
test
out
pop
ss
mov
clc
aam
ds
mov
fsubs
fcmovne
mov
idivl
in
jp,pn
aad
jmp
pop
cli
lret
inc
jb
ss
inc
cmpsb
adc
mov
cwtl
jmp
test
xlat
mov
pusha
cli
inc
inc
inc
add
and
ljmp
lods
mov
adc
dec
out
inc
jle
pop
push
mov
test
sahf
insb
and
dec
shll
fstl
repnz
fmuls
xchg
add
adc
jp
pop
cmp
xchg
push
lock
test
xchg
repnz
and
imul
push
pop
jae
jmp
xchg
or
rcr
daa
lods
xchg
loop
dec
hlt
into
xor
pushf
fdivr
cltd
int
mov
push
pop
mov
aaa
loope
cwtl
rcr
rcrl
or
pushf
pop
dec
aas
pop
sbbb
js
push
inc
add
out
push
push
jge
popa
enter
inc
jp
xlat
insb
sub
cltd
aam
mov
xchg
jle
aaa
lahf
xor
xchg
rcrl
sbb
les
stc
cwtl
add
imul
jl
push
mov
mov
adc
testl
jg
ret
pop
sbb
gs
aas
jbe
out
and
mov
clc
fldcw
and
aaa
int3
icebp
and
push
jae
fwait
inc
clc
sub
fisubl
lret
lock
notl
fwait
shlb
cld
sbb
cmc
das
mov
sub
add
mov
mov
test
lods
ljmp
mov
cmp
outsb
ss
lahf
lret
fwait
mov
test
lods
jle
ret
dec
in
movb
mov
lea
iret
pop
adc
stc
xchg
adcl
in
jge
ret
push
cmp
xor
sbb
aaa
roll
arpl
sbb
into
es
pop
or
pop
sub
scas
sbb
cmp
push
scas
loope
xor
adc
and
gs
dec
mov
cmp
add
insl
inc
dec
add
push
aam
push
xchg
cmc
dec
mov
fisubrl
adc
xchg
dec
mov
nop
scas
jns
mov
out
imul
pop
repnz
lock
and
push
push
inc
movsb
ljmp
and
xchg
xchg
xchg
adc
jno
clc
sub
leave
pop
push
bound
daa
bnd
push
xchg
test
xor
or
into
mov
dec
pushf
mov
push
int3
jp
sbb
add
and
push
cmp
ss
push
pop
data16
pop
addl
cmp
dec
std
daa
out
in
jns
push
jle
pusha
aam
cld
mov
test
and
nop
mov
mov
in
aam
jp
imul
dec
cli
add
jecxz
xor
pop
sbb
fisubl
es
xor
mov
gs
aas
sbb
cmp
roll
aaa
add
out
enter
leave
inc
xlat
cmc
and
sub
or
cwtl
sub
jnp
push
cmp
fcoml
dec
in
test
outsl
aam
test
cltd
or
enter
xor
movsb
mov
push
and
loop
dec
lahf
idivl
and
and
cmp
aaa
insb
add
cwtl
sbb
sub
xchg
fisubrs
incl
xor
das
inc
jmp
bound
mov
dec
cld
shl
leave
xor
push
adc
cwtl
mov
pop
out
pop
adc
int
mov
xlat
rorb
sahf
bound
mov
push
lds
sub
outsb
lret
loope
xchg
or
pop
xlat
mov
jns
les
loopne
lea
push
pusha
jnp
mov
jnp
lahf
mov
imulb
in
test
pushf
sarb
in
jp
mov
shll
frstor
jb
jle
dec
xchg
popa
cmp
repnz
mov
xor
lret
shll
sbb
xchg
cs
mov
pop
pop
adc
adc
jp
sub
dec
out
loope
inc
jp
loop
int3
mov
push
cmpsb
dec
dec
push
sub
push
out
pop
aam
inc
dec
rcrl
mov
add
aas
aam
sub
mov
dec
inc
pop
imul
pop
lret
iret
sub
jae
repz
jnp
stc
insl
pusha
xchg
mov
stc
icebp
xchg
adc
fdiv
pop
jp
xchg
dec
fs
adc
mov
gs
les
xor
jno
cmp
cmp
outsl
nop
cmp
mov
test
jp
push
mov
xchg
xchg
or
push
push
push
stos
add
fimull
xchg
std
pop
mov
call
lock
push
sub
in
sti
xor
arpl
or
or
mov
adc
mov
add
out
dec
mov
cmpsl
iret
mov
ret
sahf
sti
popa
mov
mov
in
stos
and
outsl
lods
mov
mov
inc
cmp
enter
push
xchg
cli
dec
fwait
cmp
adc
sbb
cmpl
jmp
sarl
cmc
push
insl
pop
ja
ret
sub
jno
jg
jno
mov
jge
push
paddd
add
jecxz
js
mov
adc
and
daa
xchg
icebp
outsl
inc
xor
lret
shll
je
sub
or
popa
pop
mov
xchg
iret
inc
daa
je
enter
push
xchg
incl
xor
add
dec
push
xchg
cmp
repnz
sub
jnp
gs
xchg
mov
cmp
jae
mov
sbb
nop
mov
popf
cli
and
jg
cld
addr16
aad
ffree
cmc
cmp
adc
jg
les
hlt
xchg
add
scas
es
mov
xchg
cmp
ficoms
inc
and
and
iret
cmp
call
icebp
xchg
mov
dec
dec
pusha
and
je
loopne
mov
enter
mov
mov
sbb
movsl
sbb
cmp
pop
pushf
add
mov
mov
xor
mov
data16
add
mov
icebp
sahf
std
inc
insl
push
ds
repz
adc
mov
inc
mov
xchg
scas
int
les
adc
je
lea
jne
adc
adc
push
mov
test
push
pop
cmc
mov
xchg
xor
ss
in
addb
repnz
and
inc
inc
xor
sbb
aas
push
sbb
xchg
loop
inc
dec
pop
out
sbb
mov
fwait
sbb
test
sti
mov
mov
ret
cmpsl
faddl
sar
out
mov
aaa
mov
sbb
mov
mov
addr16
cmpsb
fcomps
iret
adc
push
subb
add
sub
or
loopne
inc
into
ja
sahf
pop
dec
mov
sti
inc
sub
pop
pop
ss
fnsave
shlb
mov
lock
sbb
cmc
lods
es
jge
ljmp
lock
lret
insl
in
cmpsb
outsl
sub
pop
mov
mov
and
shlb
pop
outsl
fisubrs
ltr
mov
ds
mov
xor
mul
pop
or
inc
std
sub
pop
jecxz
push
cmp
or
or
aas
insb
cmpsb
fcoml
xchg
xor
sbb
hlt
add
lret
mov
enter
mov
orb
sub
enter
movl
clc
loop
jo
sub
scas
lcall
or
ja
lods
iret
push
scas
xchg
pop
repz
rol
iret
add
jbe
push
sub
dec
mov
inc
adc
push
imulb
dec
xchg
pop
test
jge
fucomip
or
xor
jp
in
sub
rcl
mov
pop
sbb
and
shll
imul
gs
xorb
fidivrs
push
imul
rcll
inc
flds
lcall
sti
xor
push
es
cs
mov
push
andl
cmp
cld
adc
ret
popa
push
das
jmp
fiaddl
sub
mov
and
lods
shl
sub
add
add
dec
and
cli
jns
adc
xchg
shrb
fimull
pop
popf
inc
mov
xor
shl
push
lods
shlb
shlb
pop
and
mov
jecxz
inc
xor
sub
or
loopne
xchg
fwait
xchg
incl
or
jp
bound
out
sbb
push
cmpb
push
scas
imul
clc
pop
call
and
imul
sahf
outsl
fdivr
cmpsb
stc
xchg
loop
sub
mov
adc
dec
movsb
arpl
pop
jnp
ss
jae
lock
cmp
inc
dec
mov
add
lods
repnz
scas
jne
loopne
cmp
jns
sbb
mov
jmp
popa
ficoml
into
aaa
add
cmp
xchg
ret
mov
roll
adc
inc
push
outsb
out
sbb
cmp
fcomps
push
and
in
je
sbb
movsl
scas
cmpsb
outsb
sub
sti
inc
mov
scas
jbe
sbb
sbb
mov
in
xchg
xor
xchg
jno
cmp
push
pop
pop
mov
cmp
sbb
test
jo
outsl
inc
mov
adc
inc
jns
xor
xor
fldcw
pop
out
or
jne
jnp
add
movsl
push
adc
clc
mov
mov
or
jae
xor
or
mov
jp
cmp
jecxz
cs
addr16
jb
jl
cmc
in
test
je
xor
xchg
dec
jge
pop
les
in
daa
cmpsb
shrb
cmp
inc
sbb
mov
fisttpl
jnp
mov
mov
insl
stos
fmuls
push
fmuls
sub
aam
mov
insl
cmpb
insb
test
pop
scas
jle
mov
rclb
sbb
lret
xchg
adc
push
xchg
dec
ja
push
test
pop
sub
or
push
loopne
arpl
into
sbb
stos
and
push
xor
jbe
iret
sub
mov
mov
and
and
repnz
stc
jp
out
bound
adc
xchg
scas
mov
jo
adcl
sub
pop
sti
cltd
clc
adc
jns
adc
cmpsl
sub
cwtl
add
mov
and
mov
orl
dec
addr16
push
fdivr
mov
fsubrl
cwtl
push
mov
jbe
call
xchg
xor
sbb
sar
xchg
inc
jg
sbb
insb
mov
in
push
cwtl
push
popa
inc
cmp
mov
jl
cld
push
adc
sub
out
sysenter
lods
xchg
lret
adc
push
mov
mov
int
cmpsl
pop
push
pop
cld
cmp
push
mov
fldenv
stos
sahf
scas
inc
frstor
add
cmpsb
mov
or
jne
scas
cld
xchg
push
int3
rclb
int3
stc
stc
xchg
add
lods
jg
dec
mov
mov
ror
inc
loopne
out
xor
lds
shl
push
pop
inc
sub
push
push
pusha
dec
mov
shlb
cmpb
lea
pop
push
repz
movsl
cmp
xor
cmp
test
fwait
cmp
mov
xor
mov
jo
xor
xchg
cmpsb
xor
fwait
inc
mov
push
or
ror
mov
cmp
test
push
push
jmp
adc
movsl
lret
or
push
repnz
shr
push
push
aaa
mov
jmp
cmp
cmp
xlat
lret
jp
icebp
and
jmp
cmpsb
cmp
sbb
int
xchg
in
mov
xor
les
repnz
mov
jbe
mov
ljmp
aas
inc
and
call
add
pop
push
cld
xor
add
aas
xor
dec
arpl
mov
or
aas
pusha
inc
pop
add
adc
fadd
mov
pop
in
icebp
lret
icebp
push
dec
lahf
call
mov
xchg
repz
pop
lods
push
rcrl
mov
mov
movsl
mov
pop
fistps
stos
call
mov
lods
jle
mov
in
sbb
mov
adc
lods
cli
jecxz
pop
ret
sub
and
repnz
fwait
and
dec
push
add
mov
js
sub
icebp
or
cmp
xchg
jp
xlat
fiadds
push
daa
aas
sub
pop
pushf
bound
aaa
movsb
push
sahf
or
mov
or
jno
scas
dec
notl
cmp
sub
mov
dec
idivl
sahf
inc
mov
jae
xchg
add
or
xchg
imulb
dec
js
in
dec
sub
popf
push
jbe
fstps
mov
mov
negb
or
es
popf
cmp
cmp
sbb
push
mov
adc
aas
push
les
dec
loope
shlb
mov
jecxz
lods
in
xchg
mov
test
push
in
data16
lock
mov
jo
and
aam
sub
movsb
inc
sahf
add
pop
adc
jmp
leave
pop
jle
sbbb
add
mull
mov
addr16
jp
in
mov
push
dec
xchg
or
lods
std
adc
ret
and
rorl
cmpsb
repnz
in
push
cmp
clc
lea
jb
sbb
data16
sbb
mov
pushf
fs
pop
push
push
jae
push
sub
or
das
jns
push
in
jecxz
xor
add
aas
inc
fsubl
mov
addr16
pop
imulb
add
out
pop
sbb
ja
and
nop
and
or
popf
or
addb
icebp
mov
add
xor
paddw
and
push
and
sub
pop
fcoml
dec
sbb
je
jp
test
inc
sub
fisttps
mov
fisttpll
cmp
dec
out
js
arpl
movsl
pop
xorl
mov
ss
jle
jnp
jle
aam
sbb
imul
cmp
xchg
sahf
lock
or
movsb
sbbb
or
sarb
pop
inc
inc
nop
pop
cmp
test
mov
pop
fcmovb
cld
js
lret
out
lret
orl
pop
xor
mov
mov
push
mov
push
jecxz
jo
mov
inc
push
sahf
jle
loopne
aaa
push
bound
dec
adc
test
rcrb
loope
das
and
jmp
pop
sub
mov
jb
lock
ljmp
fdivs
cwtl
aas
scas
cs
jge
lahf
cmpsb
dec
pop
jbe
out
gs
sbb
addl
xchg
pop
cld
insb
in
fnstenv
or
gs
pop
push
xchg
out
pushf
cmp
mov
sti
test
pop
outsb
call
lret
mov
pop
mov
mov
into
int
mov
mov
inc
loope
jmp
loope
mov
inc
repz
out
scas
cwtl
fcoms
mov
mov
xchg
xor
outsl
cmp
add
pushf
pop
dec
outsl
inc
jge
mov
jae
sbb
or
jg
nop
mov
fldl
insb
jbe
pop
mov
pop
sub
out
fimuls
fs
int
inc
rclb
sub
xlat
jnp
insl
add
and
lea
int
pop
out
push
dec
cmc
mov
xchg
mov
and
iret
push
and
jmp
out
jmp
popf
sub
sti
cmp
or
inc
lcall
or
fwait
xor
pop
mov
pushf
and
adc
adc
movsb
add
out
jnp
fwait
sar
addr16
xor
hlt
es
ffreep
jp
out
xchg
sbb
mov
or
das
jb
jp
inc
adc
mov
cld
shlb
fdiv
inc
popf
flds
add
pop
andl
xor
push
or
inc
push
outsl
out
sbb
xchg
mov
mov
pop
inc
mov
xor
sub
movsl
into
sbb
mull
mov
aam
mov
push
sbb
call
and
sbb
out
xchg
lods
in
repz
loop
pop
dec
cli
rol
sub
fwait
push
jg
xchg
cmc
cli
inc
rclb
hlt
out
in
fsubr
lods
inc
insb
push
movsb
std
mov
shl
mov
int3
fs
add
out
xor
pop
movl
test
dec
dec
and
ret
add
mov
rol
sahf
fstpl
clc
data16
mov
xor
test
mov
or
outsb
mov
sub
xchg
pop
fcoml
pusha
cli
cmp
xchg
xor
sbb
lret
push
bound
push
xchg
sub
xor
adc
sub
adc
fisubrs
ret
sbb
mov
fs
mov
mov
out
leave
scas
cmp
mov
add
cmp
cmp
mov
insl
into
fcoml
inc
scas
push
jo
mov
mov
and
inc
cli
mov
or
les
pop
rcrl
push
daa
push
mov
les
xchg
push
mov
scas
mov
cmp
mov
push
stc
cmc
mov
popf
push
and
fimuls
std
jno
inc
repz
jns
jb
jo
popa
lock
lock
adc
mov
pop
dec
in
mov
or
inc
adc
pop
rcrb
sbb
pop
sbb
shrl
aam
leave
cmpsl
cmp
or
dec
pop
cmp
xor
push
mov
cmp
pop
cmpsl
loop
sub
cld
xor
outsl
std
push
add
xchg
adc
cmp
iret
dec
mov
push
je
cmc
mov
cli
xlat
add
pop
hlt
sub
lods
inc
push
xor
ss
jno
inc
lret
in
rorl
xor
ret
push
in
outsl
popf
sbb
call
or
xor
out
popl
in
sbb
or
jecxz
rcl
xchg
push
cmp
data16
mov
dec
fwait
cmp
fidivs
fs
sub
adc
cli
adc
jo
out
rorb
clc
or
movsl
xchg
jl
adc
mov
insb
push
out
add
push
dec
shrl
pop
jnp
mov
cmp
push
xor
pop
cmp
cwtl
lret
mov
ja
movsl
mov
or
cmp
iret
ja
lods
nop
mov
data16
xor
cmp
cltd
aad
pop
add
stc
inc
leave
out
cmc
xor
adcl
or
inc
inc
sbb
and
int
dec
lahf
mov
or
loope
mov
pop
adcb
das
dec
and
pop
xlat
sub
add
jecxz
lock
jl
imul
cmc
sub
clc
repz
cmp
cmp
push
jmp
call
push
jg
pushf
jg
and
inc
pop
xchg
or
test
ss
sbb
mov
jp
and
scas
jmp
jne
addl
insl
xor
sbb
mov
sub
jecxz
push
fidivs
adc
iret
xchg
mov
xor
push
insl
pop
fcoms
jbe
rclb
cmc
pushl
out
xor
cli
cmpsb
lcall
pop
clc
sbb
push
mov
stos
icebp
and
mov
pop
add
in
loope
jle
pushf
push
stc
xchg
jmp
mov
dec
pop
imul
subb
popa
add
movsb
add
jmp
cld
in
enter
jge
xor
jle
scas
adc
xchg
push
ss
popf
adc
jp
cmp
aas
adc
int3
shl
mov
stc
pushf
ror
fiadds
mov
cmp
mov
loopne
pop
and
idivb
pop
shll
hlt
mov
inc
sub
sbb
mov
imul
popf
or
sbb
add
xchg
or
les
jo
gs
and
iret
xor
jnp
ret
cmpl
fistl
arpl
push
stos
jno
loop
cvtps2dq
cmp
sahf
mov
jle
sub
xchg
mov
or
sbb
pop
jmp
xchg
adc
aam
adc
fcoml
add
mov
pusha
push
shr
or
push
fsts
mov
or
and
pop
add
arpl
pop
shlb
add
and
sub
sbb
cmp
mov
lea
out
dec
aaa
pop
enter
push
jge
xlat
push
push
sub
insl
inc
adc
push
jp
inc
mov
adc
mov
cmpsl
testl
mov
lods
in
je
pop
in
rcrb
mov
jne
idiv
clc
int3
xor
loope
mov
mov
xchg
xor
push
cmp
dec
mov
push
movntps
shlb
push
inc
dec
jnp
pusha
popa
nop
daa
mov
hlt
add
xor
mov
add
sub
dec
lock
xchg
xchg
popf
popa
add
pop
ret
jl
dec
stos
sbb
shlb
data16
rolb
iret
imul
das
xor
mov
in
push
pop
push
or
push
mov
dec
call
fsts
cmp
jle
fldl
leave
cs
call
push
rorb
mov
movsl
xchg
stc
fdiv
das
sub
add
loopne
and
out
mov
inc
mov
mov
xorl
xchg
adc
pop
insl
fsubrs
cmp
lds
clc
aaa
inc
test
or
gs
mov
je
loop
movsb
mov
das
mov
sbb
and
sbb
mov
mov
loope
jp
iret
jg
push
out
fadds
or
stos
nop
jo
hlt
in
and
add
push
data16
int3
push
js
int3
dec
pop
sub
enter
add
cmp
lcall
iret
out
mov
jmp
or
push
mov
cmp
insl
push
mov
fs
int3
out
test
sbb
in
push
shr
push
loop
in
push
sti
dec
insb
xor
fs
adc
xchg
dec
mov
testb
stos
popa
mov
xlat
loope
out
nop
xchg
sub
add
loopne
jne
cmc
cmp
fistps
fiaddl
mov
insb
inc
fsubrs
xchg
and
repz
dec
sub
in
fucomi
adc
push
xchg
jge
xchg
pop
pushf
add
and
or
jp
mov
jo
leave
xchg
xchg
fidivrs
mov
xchg
test
or
in
jle
test
test
jmp
cmpsb
mov
sub
push
pop
adc
fwait
in
andb
pop
fdivl
clc
mov
sub
cmp
insl
popf
mov
mov
sub
inc
jge
movsl
movsw
das
int
aad
or
mov
loop
std
sbb
xor
xor
and
sub
icebp
sbb
xor
add
mov
sbb
mov
int
negl
lock
aad
mov
xchg
ja
cli
aad
fistpl
pop
cmpsl
ja
inc
jae
mov
xchg
pop
mov
iret
lds
add
cltd
jmp
xor
pop
enter
dec
add
mov
data16
stos
xchg
testb
xchg
cltd
aad
stos
aas
aad
mov
dec
sub
pop
inc
cwtl
repnz
pop
and
fidivrs
popl
les
xchg
mov
pop
outsb
sub
repnz
movsl
orb
push
sub
jb
sub
mov
lret
aad
pop
xchg
fisttps
cmp
out
stos
lahf
notl
scas
dec
jnp
or
sub
dec
or
dec
cmp
aaa
sub
mov
add
xlat
pop
clc
addr16
icebp
nop
jmp
lret
mov
lret
cmp
jno
mov
cwtl
cli
loopne
mov
call
addr16
fisttpl
lods
clc
mov
xor
mov
adc
mov
daa
mov
loopne
xchg
xchg
cmpsl
or
inc
es
xchg
lcall
adc
or
popf
pop
dec
cs
xchg
push
cmp
scas
movsl
stos
gs
leave
imul
add
cld
jnp
movsl
dec
xor
pop
rorb
enter
shll
pop
pop
sub
lret
and
push
mov
hlt
aad
pop
cs
cmp
xor
adc
stc
mov
mov
pop
mov
and
sbb
adc
sub
call
jg
adc
sbb
popa
lea
mov
dec
ss
ljmp
cmp
jl
sti
pop
xchg
mov
fcoml
sbb
faddl
or
lcall
and
call
xchg
sti
sahf
sbb
xor
jb
aad
addr16
jp
xor
dec
fldl
dec
xorb
dec
out
rorb
push
arpl
sahf
nop
movsb
push
xor
xor
and
adc
inc
push
sbb
pop
push
pop
movsb
out
jno
popf
sbb
adc
adc
dec
hlt
push
rclb
push
cwtl
out
mov
jo
stc
in
or
jmp
loopne
test
adc
pop
test
sarb
enter
jecxz
pop
stc
cmc
stos
leave
repz
mov
dec
test
hlt
daa
jno
cmpsl
lret
pusha
into
in
ss
push
mov
fdivl
xor
test
mov
fwait
adc
ret
lahf
out
shll
mov
push
mov
sbb
nop
sub
xchg
mov
repz
pop
into
outsl
idivl
cltd
in
lcallw
xchg
push
xor
es
or
or
lcall
add
and
decb
arpl
push
test
mov
xor
ficoml
inc
adc
dec
sbb
test
pop
adcb
pushf
pop
lcall
cltd
mov
cmp
cltd
gs
loop
mov
shlb
sub
pop
dec
clc
push
pop
sahf
inc
rcrb
xor
aad
test
and
add
fdivrl
mov
mov
jp
pusha
pop
jnp
add
cmpsl
xchg
icebp
adc
outsb
xlat
nop
das
gs
cwtl
sub
cmc
int3
ret
fistpl
movsb
ds
in
mov
adc
mov
sti
dec
mov
and
stc
lret
xlat
ds
mov
inc
mov
pop
fldenv
cli
fwait
into
add
adc
sbb
mov
dec
cli
cmp
pop
lea
js
sub
push
dec
add
mulb
inc
dec
iret
or
jne
daa
inc
inc
sbbb
cmpsb
ret
and
jae
ljmp
xor
xchg
pop
leave
shlb
out
inc
js
jecxz
jne
outsb
mov
imul
clc
pop
jp
or
mov
fcmovbe
push
add
sbb
inc
mov
scas
mov
lahf
dec
mov
lcall
push
push
cltd
call
mov
push
in
jp
bound
icebp
hlt
or
push
or
enter
mov
in
mov
leave
or
and
hlt
dec
in
nop
sbb
mov
push
jg
jl
sub
dec
icebp
pushf
loope
ss
mov
sbb
stc
jne
xor
or
rorl
test
dec
xor
stos
call
mov
int
inc
and
mov
pusha
push
dec
and
inc
fistps
int
je,pn
fwait
in
ja
adc
jb
jecxz
dec
pop
mov
imul
mov
cmpb
inc
outsb
bound
clc
aas
add
cmp
aaa
mov
les
shlb
xchg
hlt
cli
js
bound
mov
pop
sub
in
std
scas
add
jne
sub
mull
clc
pushf
lea
push
out
cli
push
cmc
cmp
fldt
or
push
sahf
jne
jmp
push
lea
out
add
imul
in
and
daa
or
lret
test
xor
movsb
or
sub
insb
insb
sub
pop
and
cli
shr
pop
in
pushf
outsb
testb
push
mov
xchg
les
incl
mov
or
adc
lea
ret
out
shrl
pop
icebp
cmpsl
sub
fcmovne
cmp
cmp
sub
push
pop
and
scas
ljmp
add
shrl
cmp
xor
dec
mov
push
inc
pushl
out
gs
cmp
sahf
out
mov
ds
add
lods
outsl
jnp
xchg
out
push
cli
roll
mov
push
mov
icebp
mov
and
daa
lret
jne
mov
mov
sbbb
mov
xchg
jp
push
xchg
mov
add
loop
push
dec
fs
mov
adc
xchg
sub
add
int3
adc
sub
ret
mov
mov
xchg
mov
lret
sub
cwtl
or
mov
arpl
sub
pop
jae
cmpsl
and
cld
aad
addb
sti
mov
push
xchg
xchg
push
popa
sbb
pop
add
mov
push
mov
mov
push
dec
inc
repz
addr16
xor
fstl
fiaddl
sbb
push
or
bound
cld
stc
cmpsb
cltd
add
sub
stc
lea
pop
repnz
dec
adc
pop
mov
mov
dec
adc
insl
jge
and
mov
xchg
mov
lods
int3
push
fs
into
mov
push
test
dec
fwait
clc
jge
addr16
xlat
cs
test
repz
loop
int
xchg
mov
mov
pop
js
idiv
in
and
pop
add
bound
loope
cmp
mov
adc
lret
pop
or
or
push
inc
sahf
fdivrl
cmp
pop
sub
inc
testb
insb
fsts
out
imul
pop
or
dec
sub
fildl
sbb
das
add
sub
and
pop
jle
ret
imul
xchg
ret
bound
push
pushf
in
mov
xchg
xlat
cmp
scas
ja
sbb
lods
ss
jge
mov
lret
iret
mov
add
stos
aam
int3
push
push
sbb
popf
inc
ret
xchg
xor
and
adc
jns
push
mov
cmp
jle
or
jne
pushf
pop
jmp
adcb
dec
fistpl
jo
jb
inc
sub
push
dec
fwait
sahf
sbb
loop
push
in
dec
mov
and
lret
inc
movsl
and
mov
jae
scas
clc
std
test
jnp
in
add
xorb
lcall
jp
add
std
lret
jge
imul
jmp
pop
jle
add
cmovo
add
loopne
mov
adc
aam
aas
pop
mov
pop
aaa
cs
ret
pop
repnz
popa
rcrb
lods
add
inc
fimull
cmp
add
jp
lret
jno
mov
repnz
mov
clc
popa
aas
test
sub
mov
daa
sbb
push
lock
push
add
xchg
inc
or
test
loop
mov
pop
push
jg
mov
bound
pop
inc
mov
imul
xchg
cs
bound
sarb
dec
dec
push
jns
push
sbb
mov
mov
or
xchg
mov
int3
push
sub
mov
pop
and
mov
repz
push
push
pop
cmpsb
sbb
or
test
mov
xor
in
jg
push
jne
scas
roll
jg
pop
sar
push
in
push
stos
aam
fstpl
nop
repnz
jne
mov
mov
lahf
ja
jnp
popf
dec
xchg
in
imul
adc
pop
push
mov
shll
and
out
inc
lret
negb
sbb
negb
inc
xlat
sbb
dec
push
insb
leave
jbe
enter
or
cmpxchg
pop
lcall
mov
mov
xchg
push
test
mov
icebp
jmp
push
cmpl
jecxz
dec
xor
dec
mov
lret
jecxz
stos
xor
test
ret
and
mov
loop
enter
test
adc
xorl
jecxz
scas
shrb
aaa
push
mov
pop
inc
xor
mov
or
aam
imul
cmp
mov
and
rcrl
pusha
mov
rorb
mov
inc
ds
push
adc
xor
pop
bound
or
xor
divb
popf
sahf
fidivrs
sahf
loope
out
ds
lods
mull
xlat
js
fmul
inc
repnz
stos
fstpt
add
and
mov
js
popa
push
jb
repz
popf
stc
pop
inc
cmc
mov
icebp
jecxz,pn
add
jecxz
in
jbe
pop
sbb
in
dec
xor
lret
mov
cli
push
or
aam
adc
repnz
cltd
mov
iret
push
fdivp
call
dec
test
dec
jge
movb
pop
cmpsl
xor
push
inc
xchg
dec
ljmp
jbe
pop
add
inc
jbe
push
outsl
and
in
jle
shll
jno
psubusb
cltd
push
hlt
and
vphaddwq
cmp
mov
inc
dec
sub
jne
hlt
mov
push
pusha
or
rsqrtps
shlb
das
loopne
stos
xor
in
mov
aam
outsb
inc
and
mov
sub
cli
mov
dec
mov
fcompl
or
sub
mov
sarl
icebp
pop
popf
push
inc
imul
imul
shl
pop
add
pushf
shlb
fidivl
imul
gs
imulb
add
jns
shlb
mov
add
sub
ljmp
and
and
repnz
test
clc
movsl
addb
push
xchg
cmpsl
lahf
movsl
add
xor
outsb
and
lock
insl
loopne
shlb
xor
inc
aas
cmpl
les
jne
fwait
mov
call
mov
mov
jmp
xor
je
cmp
lods
add
jo
das
add
mov
adc
mov
movlps
jmp
bnd
lcall
mov
ret
xor
jno
imul
movsl
fdivs
repz
pusha
inc
dec
pop
lea
mov
pop
sub
pushf
int
lahf
pushf
cs
lods
add
lods
insl
stos
xor
or
cmc
lds
daa
cmpsl
cmp
mov
les
jge
stc
mov
cli
loope
ds
and
shl
cmp
pop
hlt
mov
sbb
add
xchg
xchg
sbb
jp
mov
inc
xor
inc
mov
or
aaa
ret
and
jg
aas
fldt
lods
lods
xchg
cmpsb
out
jmp
addr16
aad
fidivrs
leave
loopne,pt
loop
xor
clc
orb
push
fwait
call
inc
bound
jo
push
add
imul
or
xor
sbb
adc
ja
mov
push
sti
rol
inc
cwtl
sahf
out
imull
stos
int
jo
ret
inc
push
push
call
and
addr16
jae
add
sti
out
sub
pop
dec
fstps
add
sub
xor
inc
std
ss
arpl
jecxz
push
sub
shll
subl
cli
ss
mov
cmpsb
or
pop
push
or
or
push
std
out
lock
inc
adc
cwtl
movsb
ftst
js
les
jg
xchg
add
adc
jae
xchg
xchg
push
cmp
add
dec
mov
data16
xor
rorl
rclb
fdivr
popf
hlt
sub
cli
push
and
mov
test
push
add
or
rolb
ljmp
test
fmuls
mov
pop
popf
push
popa
stc
mov
mov
xor
and
lret
sub
je
stos
insb
mov
lret
inc
sbb
sbb
das
inc
push
subb
mov
adc
add
inc
cmpsb
mov
imul
xchg
call
je
mov
shlb
dec
mov
sub
jb
bound
jg
cld
in
movsb
xchg
push
sub
outsl
mov
and
sbb
in
lret
sbb
xor
jmp
jno
push
into
pushf
outsl
cmp
sti
cmpsl
dec
jmp
xor
sbb
es
push
and
sub
push
mov
mov
stos
adc
incl
cmpsb
in
scas
and
adc
jg
push
pop
addl
xchg
mov
xchg
je
fiaddl
jns
leave
add
cmpsl
adc
rorb
lahf
mov
xchg
cmc
in
inc
rcl
xchg
ss
lret
jnp
sahf
mov
pop
movsb
jnp
in
push
mov
adc
fnstenv
bound
lret
stc
pop
sti
mov
mov
loopne
sbb
pop
or
jno
sahf
rcrl
cmp
push
push
aaa
scas
xor
pop
adc
cld
push
cmpsb
pop
pop
mov
or
sub
sbb
inc
cltd
aam
andl
arpl
stos
leave
jmp
test
adc
idivb
xchg
lds
lret
push
clc
and
mov
data16
mov
inc
cmpsb
xor
push
and
push
insb
pop
in
js
inc
inc
aaa
sbb
inc
mov
sbbb
es
test
pop
addl
ljmp
aas
mov
pop
subb
mov
out
stc
mov
arpl
mov
popa
sub
movsb
mov
xchg
inc
inc
or
jmp
loopne
test
pop
sbbb
in
imul
incb
jmp
call
ret
push
mov
in
cli
ror
jmp
cld
jmp
xor
movsb
push
push
inc
sarl
cli
out
pop
pop
push
js
push
lock
je
cmc
add
pop
push
cli
sbb
imul
push
daa
sub
pop
mov
movsl
jns
ret
ja
mov
lea
mov
add
out
add
mov
pop
ljmp
adc
in
fdivrl
sti
cmp
es
cs
stos
pop
mov
dec
jae
xchg
mov
nop
sti
and
fmull
dec
mov
in
mov
outsb
or
add
insb
inc
nop
or
mov
push
mov
jns
pushf
and
xlat
mov
aam
inc
sub
inc
decl
mov
push
and
fcompl
lret
adc
roll
mov
ds
push
lahf
popa
jo
sbb
cmpsb
mov
adc
cmpsb
jle
jg
cmp
or
xlat
lcall
mov
popa
gs
pop
std
inc
insb
add
xchg
ret
push
test
mov
push
int3
mov
sbb
fdivrp
ljmp
inc
arpl
dec
or
cmpsl
sahf
stc
push
xchg
in
sub
mov
mov
lock
int
dec
sub
add
outsb
mov
xchg
jbe
fldcw
fwait
call
jbe
mov
or
xchg
sahf
pop
jns
movsb
insl
mov
mov
inc
imul
pop
cs
push
sbb
jmp
mov
mov
fdivl
mov
loop
sub
test
aad
cmp
imul
into
sbb
mov
or
mov
mov
dec
lcall
stos
pop
xor
inc
xlat
lea
test
inc
mov
mov
pop
ds
icebp
repnz
aas
inc
je
je
pop
xor
jg
xor
nop
aas
leave
pop
jnp
inc
and
mov
loop
sub
sbbb
sub
jp
nop
int3
jne
pop
fucomp
mov
sarl
adc
ljmp
insl
cmpsb
jae
test
ds
rcl
outsl
imull
adc
push
cmp
mov
es
cmpb
pusha
jle
mov
popa
inc
rolb
sahf
sub
adcb
push
mov
int
dec
loopne
pop
inc
push
inc
les
fdivrs
js
mov
pusha
je
testb
xchg
addl
xor
lods
mov
loope
mov
test
sub
sti
dec
adc
xor
jbe
pop
mov
jbe
push
push
pop
movsl
and
or
addr16
and
jle
jno
dec
push
out
mov
mov
jne
imul
ljmp
mov
fdivrl
add
outsb
stc
add
cmpsb
sub
dec
sub
repnz
testl
sub
push
sub
ja
xorb
addr16
mov
pop
push
movsb
dec
pop
dec
leave
loopne
push
sbb
and
int3
cmp
jo
xor
or
add
shrl
xchg
stos
mov
in
das
shr
iret
mov
mov
fdivrl
xchg
jns
mov
out
insb
insb
mov
push
fnsave
xchg
fiadds
sbb
aaa
and
sbb
jp
arpl
dec
lock
mov
push
orl
fnstcw
mov
pop
test
inc
xor
test
sub
movsl
ficompl
add
fbld
pop
xorb
cmp
and
es
test
dec
cmp
xor
loop
jge
mov
add
fimuls
test
test
dec
jnp
inc
sub
xchg
subb
xor
lods
je
xor
fs
les
xchg
jae
mov
adc
jg
pusha
loope
mov
aaa
xchg
add
cld
cltd
mov
add
cltd
pop
and
jne
in
leave
add
outsb
cmp
adc
lea
cmp
add
sub
mov
jae
xchg
jge
jg
pop
loopne
jns
out
push
in
jl
addr16
in
fcmove
jg
add
adc
sbb
leave
sub
cmp
dec
mov
inc
xchg
xor
jns
daa
lods
lods
ror
lret
add
jle
dec
jmp
or
mov
sbb
popa
outsb
or
push
xor
loopne
xor
fiadds
test
testb
push
adc
inc
jbe
cld
dec
cltd
xor
cmp
and
pop
push
clc
ljmp
push
xlat
dec
lock
mov
or
ret
push
pop
mov
es
icebp
fdivrl
xchg
in
inc
mov
xchg
jno
out
mov
popa
shlb
fldz
mov
jns
or
scas
cmova
xchg
bound
pushf
ljmp
jnp
into
stc
push
sbb
jl
xchg
nop
repnz
popa
mov
lea
icebp
data16
jmp
adc
xchg
mov
outsl
xchg
mov
lahf
ljmp
sbb
fnsave
push
xor
mov
cli
adc
xchg
stos
insl
neg
ffreep
bound
xor
pop
jl
mov
sbb
sub
cmp
int
pop
mov
fstps
mov
jl
push
pop
mov
stos
fisttps
pop
inc
cld
cmc
lds
ds
xor
lods
cmp
in
pop
out
and
lea
push
inc
jmp
xor
adc
lods
pop
xchg
mov
mov
mov
stos
push
dec
scas
xchg
sti
jge
cwtl
ds
pushf
ds
iret
and
or
or
mov
mov
in
hlt
mov
sbb
dec
daa
mul
cmc
add
xor
paddq
mov
inc
ss
aad
int
or
sbb
adc
sbb
js
and
cli
into
inc
xchg
pop
or
clc
outsb
push
mov
std
jmp
jnp
push
sbb
das
push
icebp
add
fnstenv
jmp
push
out
fs
into
pop
xorl
mov
in
push
repz
sub
add
xchg
lods
dec
es
cmp
in
das
test
fldcw
xchg
clc
mov
lds
lods
fcmovnb
push
cmc
jmp
ret
insl
cmp
push
pop
dec
rcrb
arpl
lock
pop
ljmp
aaa
sub
and
fnstcw
mov
sub
imul
xor
call
adc
test
jns
fldl
add
lea
push
and
out
jle
push
out
pop
mov
push
mov
mov
sbb
and
les
stc
fs
dec
fsubl
xorps
in
push
jb
jnp
adc
popa
jmp
sub
push
cltd
jl
cmp
push
idivb
adc
mov
or
cld
mov
jnp
mov
test
xor
jg
jae
out
stos
insb
push
js
out
imul
push
xchg
aam
push
fwait
das
incl
mov
jno
jno
dec
mov
mov
loope
sbb
adc
outsb
scas
mov
sarb
negb
popa
jb
push
sbb
push
xor
jb
cmpsb
jg
sbb
cli
lahf
dec
adc
inc
mov
sbb
in
repnz
inc
mov
mov
loopne
pop
mov
out
or
loope
hlt
jle
and
scas
loopne
fstpl
orl
add
insb
cmpl
fs
adc
xor
iret
fucom
sahf
adc
jmp
hlt
mov
xchg
mov
sub
repnz
fwait
xchg
xchg
popa
xor
cmpsb
rorb
imul
pop
lds
or
dec
scas
or
outsl
clc
addl
adc
test
mov
cmc
xchg
sysenter
mov
lcall
repz
xlat
jp
mov
aad
mov
mov
cmpsl
aam
mov
dec
mov
ds
push
lea
cld
mov
sub
mov
in
mov
aam
sub
punpcklbw
imul
xchg
test
les
adc
adc
xor
in
imul
xor
inc
cmp
in
add
mov
lret
jg
jnp
les
adc
arpl
fcompl
fadds
pop
loop
or
rorb
pop
mov
roll
icebp
sub
mov
mov
lock
ret
dec
fwait
xchg
out
rol
fisubs
add
pusha
cmp
mov
sahf
pop
xchg
push
mull
mov
mov
mov
mov
aaa
sbb
push
cmp
out
imul
or
vcvttsd2si
xchg
jns
sub
pop
mov
xchg
mov
inc
jp
pop
push
xchg
add
mov
add
imul
mov
ret
push
mov
dec
in
sbb
pusha
ret
ret
inc
adc
push
and
xchg
jg
popl
mov
out
jbe
xorb
lods
sub
inc
and
pop
adc
outsb
xor
lods
inc
cmp
add
xchg
sbb
int3
aas
lahf
scas
mov
sub
jno
push
jne
xlat
insl
cs
mov
jnp
mov
cmp
adc
pop
dec
xorb
jb
mov
cs
gs
outsb
in
adc
pop
movsl
pop
fisttpl
pop
jne
push
popf
mov
sbb
or
aaa
mov
and
nop
mov
adc
test
ret
inc
int
dec
scas
imul
xchg
mov
push
fsubl
stos
inc
icebp
xor
jmp
or
lret
imul
xor
stc
fstps
cmp
scas
mov
add
not
mov
inc
pop
cmp
sub
fstpt
inc
pop
leave
dec
pop
dec
testl
outsb
and
jmp
in
pop
fstps
adc
imul
xor
mov
dec
clc
std
push
test
add
outsb
cmp
fcom
arpl
adc
cmp
dec
mov
pmaxsw
push
xchg
daa
dec
mov
insb
scas
xor
mov
mov
jns
jb
arpl
pusha
add
lret
or
cmpsl
and
sarb
sbb
sbb
jo
cmp
int
iret
jb
cmpsb
pop
lock
mov
pop
jb
adc
jae
adc
shl
jbe
xor
jb
cmc
pop
cld
xchg
dec
dec
cmpb
outsb
pop
loop
pop
jno
out
xor
or
mov
in
cmp
outsb
add
fwait
xor
cwtl
xchg
cmp
imul
fdivs
push
scas
or
ret
add
je
mov
mov
mov
imul
jmp
sbb
enter
daa
mov
out
lret
xor
mov
add
rol
loop
xchg
addb
imul
aas
flds
mov
cmc
ja
mov
lret
test
or
gs
xchg
aam
pop
lock
dec
aaa
mov
aam
fs
add
repnz
cmp
cmc
sbb
and
cmp
fucomp
adc
hlt
jle
enter
sub
mov
test
xchg
rorl
test
pusha
mov
das
mov
lret
sbb
mov
and
fisubrs
movsb
push
adc
lock
in
sub
arpl
cmp
fidivrl
push
cmp
imul
lahf
or
addb
sahf
loop
jnp
xor
sub
push
or
jle
or
scas
gs
leave
mov
mov
fadds
sbb
mov
outsl
roll
push
and
xchg
mov
push
dec
popa
jae
fistpl
xor
scas
and
test
pop
aad
outsl
nop
icebp
sbb
xlat
imull
mov
xchg
cmp
mov
fidivs
and
int
stos
xor
insb
nop
xlat
and
mov
and
pop
mov
and
jb
or
xchg
ja
jnp
mov
scas
jae
sbb
or
ds
call
sbb
xchg
lea
rcl
ss
nop
add
xchg
xchg
mov
push
sti
and
scas
js
std
popa
dec
in
xchg
aaa
pushf
xor
scas
je
mov
pushf
out
fisttps
ficoml
pop
pop
push
fistl
call
or
loop
dec
shll
inc
cltd
test
pop
je
sbb
xchg
sahf
subb
mov
stc
cltd
and
sbb
add
mov
enter
fcmovnu
jecxz
cmp
repz
jne
sub
pop
cmc
and
sbb
je
dec
repnz
fcoml
pop
ljmp
xor
mov
sub
mov
add
inc
in
enter
sahf
push
sbb
jbe
push
js
or
sbbb
jl
add
shll
sub
and
icebp
loopne
cmp
sub
stos
push
sbb
rol
jl,pn
and
out
cwtl
add
xor
xchg
pushf
iret
inc
jb
fistl
mov
outsl
mov
bound
cmp
jnp
daa
dec
call
jb
sti
dec
or
dec
cli
rcl
mov
jno
loop
cmp
sub
jp
xor
daa
andl
clc
inc
jnp
sbb
imul
fsubr
mov
jecxz
jecxz
inc
scas
push
fisttpll
rcll
adc
ja
jl
out
lahf
jb
pop
test
inc
inc
shlb
shll
cmc
xchg
in
sbb
pop
cmc
insb
imul
cmpsb
pop
ljmp
divb
in
cmp
pop
push
sub
push
in
ret
sub
jbe
loop
les
add
jmp
outsl
mov
into
cmp
out
rcrb
lods
xlat
cmpsl
add
mov
add
pop
push
scas
pusha
popf
mov
call
test
aas
gs
adc
cmp
jmp
ds
add
sub
mov
jp
sbb
mov
repz
mov
out
test
cmpb
out
and
mov
outsb
inc
cmp
pop
xor
flds
or
dec
dec
sub
cmc
xchg
popf
push
cmc
or
add
mov
data16
mov
xchg
pop
lret
or
movsb
mov
mov
mov
mov
shl
sbb
stc
into
and
repz
loop
filds
mov
mov
or
cld
inc
roll
pop
sarb
jb
push
push
push
rcrb
or
and
or
jge
jb
mov
fcomps
mov
stc
test
mov
mov
cmp
push
xchg
cwtl
lods
inc
fstl
lcall
icebp
push
loope
aaa
cmc
popf
sub
idivb
push
push
and
and
cli
pop
je
push
cmpl
or
mov
jae
adc
sbb
lcall
dec
cmc
int
xchg
xchg
xor
or
xor
pop
punpckhwd
and
pop
xchg
cwtl
subl
xor
scas
bnd
mov
iret
and
and
cmc
pop
imul
push
loopne
dec
push
addl
cmpsl
js
dec
lds
lock
and
jo
push
lret
sub
jg
loop
loop
dec
jo
nop
dec
sub
jno
mov
mov
add
xor
fs
add
call
inc
mov
sub
sub
addr16
outsl
inc
push
cld
dec
sbb
aas
mov
scas
mov
in
xlat
cmp
out
mov
cwtl
xlat
xchg
lahf
stos
inc
pop
inc
adc
adc
or
insb
fnstcw
lods
mov
sbb
inc
enter
sub
jge
imul
int
clc
sub
mov
movsb
ret
mov
aad
out
in
fwait
mov
xor
rcll
pop
stc
es
mov
sub
dec
jnp
stos
loopne
invd
dec
fs
mov
outsb
test
ljmp
stos
sbb
imul
out
add
sub
and
and
or
mov
scas
clc
aaa
or
and
and
sti
fs
pop
cli
xchg
mov
dec
mov
popf
fxch
leave
into
ds
mov
sub
sarb
mov
push
mov
jle
repz
mov
push
dec
xchg
cmp
adc
sbb
xlat
push
std
add
cld
push
jl
cmpsl
xchg
jno
scas
insb
bound
push
pop
nop
loope
outsb
test
mov
inc
sbbb
jo
das
xor
sub
add
adc
movsb
bound
mov
dec
sub
test
xlat
and
incl
mov
xchg
push
lods
icebp
jecxz
jg
add
inc
and
aad
pop
hlt
out
lcall
das
dec
pop
push
mov
cmc
mov
test
jge
rcll
sar
xor
cwtl
lods
push
imull
inc
je
pop
test
push
rorb
pop
jno
mov
adc
dec
pop
in
xchg
sbb
shr
int
add
clc
rcrl
into
mov
popa
pop
icebp
jmp
push
adc
add
mov
fstpt
inc
outsl
sbb
sub
ss
repnz
aaa
inc
jl
stos
mov
mov
int3
mov
inc
jo
daa
sub
or
movsl
mov
ja
int
cmpsb
inc
mov
addr16
cltd
mov
dec
dec
dec
push
rcr
lcall
jae
sbb
stos
xchg
or
inc
lods
adc
lret
fwait
inc
ss
pushl
sub
pop
test
jns
xor
jmp
insl
pushf
adc
cltd
in
adc
cmp
sbb
jne
nop
fs
aas
pop
cmp
xchg
xchg
mov
movsl
cmp
sbb
sahf
dec
lods
out
stos
pop
in
mov
xchg
clc
xchg
dec
cmpsb
int3
adc
cmp
jmp
sub
mov
xchg
fstl
shrl
pop
jae
dec
sahf
adc
std
mov
mov
xchg
push
push
and
jae
jle
aaa
test
jb
movsb
loope
arpl
aas
jno
fadd
outsl
pop
xchg
or
aas
out
dec
dec
gs
inc
mov
ljmp
xor
jbe
and
pop
pop
loope
push
sbb
in
or
sub
jo
or
jg
test
lret
outsb
int
bnd
iret
ljmp
loopne
cmp
mov
lret
mov
or
out
shlb
int3
adc
jnp
inc
mov
in
ret
cmp
stos
push
mov
inc
lret
cmpsb
xchg
sbb
dec
sti
outsl
xchg
fiadds
sbb
mov
cmpsl
push
rol
mov
dec
mov
pop
inc
add
add
mov
movsb
orb
movsb
jmp
jns
mov
idivb
sahf
sbbl
lcall
push
scas
packssdw
cmc
pop
xor
arpl
outsl
cmpsl
cmp
subb
xor
stos
lcall
jne
push
test
inc
sub
cltd
icebp
std
and
repnz
clc
dec
pop
popa
arpl
mov
sarl
ss
add
dec
testl
mov
sahf
xor
cli
mov
sub
pop
shrb
add
inc
sub
jbe
dec
push
mov
mov
dec
shrl
dec
pusha
movsb
mov
mov
jae
and
push
and
out
mov
jecxz
sbb
imul
outsl
sub
xchg
cltd
jg
mov
push
dec
rolb
sar
and
mov
lock
inc
cmp
push
mov
ja
jae
pop
repz
or
int3
push
into
add
or
int3
xchg
mov
lret
pop
jo
xchg
mov
adc
mov
sarb
xor
and
mov
push
mov
cmpsb
push
outsb
mov
push
lock
adcb
xor
mov
dec
pop
or
fcoml
out
dec
inc
xchg
aas
out
mov
cmpsb
dec
inc
jp
dec
mov
in
xor
rol
cli
ds
sbb
out
loope
ljmp
pop
push
jb
int
stc
sbb
mov
aam
lret
mov
mov
or
jae
sbb
jmp
jb
mov
or
fsubr
cmp
loopne
ffreep
scas
jl
xchg
ja
inc
cmp
mov
sub
cmp
aas
sahf
add
fistpll
loope
jecxz
mov
cmovne
aas
aaa
sbb
mov
cwtl
mov
dec
mov
mov
fwait
pop
scas
dec
out
insl
cmp
mov
mov
adc
fistpll
shll
testb
outsb
ds
pop
mov
pop
shr
mov
push
pop
rorb
push
ja
aas
cmpsb
jg
gs
jae
mov
popl
xor
mov
cmp
ja
mov
outsl
mov
mov
sahf
hlt
mov
aam
adc
scas
stos
jo
out
lcall
fxch
sbb
push
fstp
or
scas
rol
int3
xor
add
push
cmpsb
mov
das
pop
sub
sbb
xor
and
lret
xor
xchg
jbe
adc
mov
sbbl
push
and
loop
mov
sbb
pop
dec
js
lock
xor
inc
inc
push
cmp
fnstcw
int3
scas
jp
and
add
std
loopne
lods
ljmp
and
outsl
enter
cmc
xor
imul
or
ret
mov
lods
leave
loopne
lds
data16
test
or
popf
movsl
andb
aad
or
push
shll
imul
pop
xchg
jmp
xchg
mov
test
push
push
lea
jecxz
iret
cmp
xchg
xor
or
fildl
lock
cmp
mov
mov
push
add
cmp
pushf
rorl
push
xchg
jg
out
enter
repnz
push
out
sub
xchg
jmp
nop
mov
mov
xor
outsl
jge
mov
stos
repnz
hlt
in
lcall
push
xor
dec
nop
aaa
xor
cmp
test
das
add
xchg
adc
mov
fimuls
jg
dec
cli
mov
jno
fstpt
or
dec
mov
or
add
mov
xorb
js
push
mov
xor
cltd
sub
inc
jmp
lock
sub
aaa
push
enter
pop
mov
add
sbb
call
sti
repnz
mov
push
jo
or
fs
mov
mov
arpl
pushf
mov
cli
iret
outsl
ja
xor
mov
dec
xchg
clc
sub
pop
lods
cld
daa
or
dec
mov
rcll
mov
xchg
pushf
or
shlb
insb
stos
xchg
xor
outsl
loopne
out
sbb
inc
xlat
loope
jmp
or
loop
mov
xchg
add
shr
wbinvd
mov
sbb
cli
sti
mov
cwtl
and
adc
add
sub
lret
clc
push
inc
in
shlb
or
adc
push
add
jmp
mov
jnp
xor
mov
and
fistps
xchg
cmpsl
sbb
sti
lods
fs
mov
in
popa
ja
jne
mov
data16
mulb
clc
gs
add
ret
cltd
dec
adc
test
roll
cmc
stc
aas
repz
xchg
bound
jnp
outsl
push
ret
stos
jl
fimull
mov
lds
scas
test
push
add
pushf
pop
mov
fs
andl
jo
fidivrs
out
cmp
lahf
or
int
pusha
mov
cld
les
jecxz
mov
jge
mov
adc
clc
add
push
ret
mov
imul
into
cs
mov
and
xor
pushf
fdivrl
shll
test
pop
mov
iret
mov
fmuls
inc
fsubrl
shrb
adc
and
cmpsb
xor
mov
mov
outsb
mov
or
pop
call
daa
mov
sahf
ret
jno
loopne
adc
mov
fimuls
fiaddl
ljmp
rcrl
icebp
or
add
push
cmpsb
dec
pushf
add
sub
sti
fs
and
inc
std
mov
sub
jb
push
xor
xchg
stos
adc
cli
out
lods
cltd
sahf
xchg
mov
mov
ljmp
insb
jle
mov
dec
lock
and
cmp
mov
inc
sar
andl
lock
int
mov
popf
inc
in
lahf
lock
mov
das
mov
inc
mov
pop
push
inc
mov
push
fdivrp
or
jmp
mov
adc
popa
mov
mov
add
cmp
aad
adc
xor
data16
xlat
sbb
mov
iret
jo
add
inc
sbb
and
loop
dec
add
subl
sub
movsb
adc
insl
addr16
mov
xor
test
sbb
jl
inc
js
push
dec
or
xchg
mov
jge
pop
orb
pop
lret
push
outsb
enter
imul
add
repnz
mov
in
add
lods
sahf
pop
or
bnd
fistpl
sbb
loop
sti
loop
xchg
mov
dec
inc
mov
or
push
out
jmp
mov
pusha
fisubrs
fsub
adc
scas
sub
xchg
xchg
int3
subb
add
stc
mov
lret
into
nop
or
lds
mov
bound
sbb
lock
cltd
in
divb
mov
fbstp
sbb
sbb
adc
xchg
je
cld
dec
cmc
lea
sahf
push
sbb
lock
inc
pop
mov
xacquire
xchg
dec
xor
sbb
pop
inc
push
cmpsl
xchg
xchg
scas
in
lret
push
fimull
add
cld
mov
and
adc
sbb
call
les
popa
sbb
faddl
xor
lods
sbb
pop
xor
sbb
cli
and
mov
dec
mov
cmp
sarl
pushf
int3
in
fs
xchg
clc
addr16
repz
push
lds
scas
cs
mov
or
or
add
mov
popf
test
dec
fs
aam
or
sub
ss
pop
lds
push
mov
lods
xor
mov
movsb
mov
cmp
negl
roll
mov
cmp
testl
imulb
xchg
aad
aas
ret
sti
data16
jno
push
xchg
pop
jno
cmp
pop
cmpsb
xlat
xor
je
jb
push
movnti
sbb
and
pop
xchg
rolb
and
data16
mov
cmp
mov
sbb
xor
mov
mov
adc
daa
subb
jns
pop
mov
lds
out
push
cmp
aaa
jnp
pop
push
xor
mov
push
dec
incl
mov
int3
lcall
imul
cwtl
jae
xlat
xor
cmp
scas
and
jmp
jbe
lds
lcall
dec
dec
add
les
inc
pop
stc
push
sahf
ja
sahf
cmpsb
js
test
insl
push
rcll
sub
or
sub
push
insb
sub
shrd
dec
sub
out
dec
lahf
cmovo
cmpsb
lods
cmp
sbb
cld
dec
fs
je
jecxz
or
adc
enter
incb
xchg
inc
mov
call
inc
aas
xchg
xchg
mov
ljmp
outsl
dec
add
cmp
lcall
out
pop
add
sti
dec
fcompl
jmp
pop
mov
and
jecxz
xor
mov
cmp
imul
shrb
cmpsb
aaa
xchg
sub
add
jnp
lds
cwtl
pop
xchg
xor
inc
std
xchg
cs
xor
cmp
cmp
movb
push
add
and
or
sarl
jmp
push
fwait
push
mov
xorb
jmp
stos
or
das
and
fs
rcrb
xchg
mov
push
inc
inc
shll
mov
insl
push
stc
or
test
es
adc
sub
loop
jmp
and
push
pop
mov
sbb
data16
dec
adc
aas
inc
hlt
mov
mov
xchg
mov
jnp
incl
ljmp
jo
fcomps
xor
mov
loope
jae
pop
xchg
loope
rcll
xlat
pop
mov
jmp
pop
int
jo
rcrb
push
aad
mov
aaa
cmpsl
xchg
or
mov
ret
jl
outsl
jns
and
scas
push
ret
iret
lods
nop
mov
sbb
jno
pop
sbb
maskmovq
imull
daa
dec
add
test
lea
push
hlt
mov
inc
imul
jecxz
mov
cmove
adc
inc
add
divl
ret
cmpsl
repz
shrb
flds
rcrl
and
sbb
push
or
add
sahf
push
pop
xchg
fnsave
icebp
data16
xchg
subb
and
test
fildl
mov
xor
sarb
es
and
and
das
jb
repz
push
sbb
dec
ret
inc
repz
cli
jge
pop
jg
mov
inc
popf
mov
loopne
addl
ffreep
mov
sbb
pop
insb
xlat
xchg
add
jo
mov
out
and
or
movsl
iret
fsubl
sarb
rorb
push
lahf
fdivr
push
std
clc
ret
iret
mov
or
mov
test
sub
xchg
lds
pop
aam
adc
call
or
mov
fs
outsb
push
lret
out
pushf
xchg
push
inc
popf
jae
pop
mov
cmp
insl
fdivs
sub
dec
test
pmulhw
test
std
sub
sub
inc
inc
or
enter
out
pop
and
lcall
shll
add
sbb
fisttpll
ljmp
test
lcall
push
stc
xchg
jnp
test
faddp
loope
ds
loop
ljmp
mov
adc
je
sub
mov
pop
fdiv
out
rcll
leave
call
push
aam
arpl
xor
lock
mov
fildll
imul
arpl
stos
cwtl
mov
xor
xor
jae
jb
mov
adc
jbe
adc
pop
inc
into
pop
test
inc
icebp
gs
mov
sbb
or
ss
push
mov
mov
subl
sahf
movsl
cmp
pop
popl
sbb
stos
mov
push
decb
fcomi
dec
subb
ret
cmp
ret
stos
add
lret
dec
adc
mov
arpl
xor
and
pop
test
leave
adc
divb
iret
sahf
and
lods
lcall
js
iret
lock
and
jmp
cltd
pop
outsl
idiv
mul
pop
in
push
stc
stc
insb
push
out
and
jns
mov
add
fimull
cwtl
jp
pop
or
mov
lahf
inc
sub
out
fistl
sti
scas
xchg
stos
loop
aad
dec
cs
clc
lock
mov
addb
push
mov
adc
pop
icebp
cwtl
add
add
popa
lahf
lahf
repz
stos
sub
stc
sti
jnp
pusha
popa
in
repz
ficomps
out
or
sub
add
fistps
dec
rolb
xchg
xchg
or
out
pop
pushf
dec
cmp
std
mov
shll
cli
push
les
xor
out
lds
fs
and
fisttpl
jl
xchg
pusha
or
loopne
cmp
loopne
and
mov
xchg
ljmp
xchg
imul
sub
leave
push
rcrl
cmpb
imul
testb
pusha
mov
add
inc
shrl
push
sarb
xor
in
adc
nop
dec
or
inc
mov
inc
clc
mov
test
xchg
xor
mov
or
fistpl
push
aam
mov
jmp
lds
xor
lret
aas
shrl
rcrb
dec
xchg
push
mov
aas
and
jbe
cmp
sub
fcompl
jl
cwtl
push
xor
mov
insl
dec
inc
aas
push
ds
mov
sti
pusha
mov
imulb
fnsave
stos
push
add
cmc
push
cmp
or
loop
lret
cltd
pop
je
enter
xchg
subb
push
mov
pop
cmpsl
sbb
xchg
jae
xor
cmp
jmp
xor
xchg
sbb
jg
je
fisttps
jle
lock
mov
leave
fnsave
idivb
out
mov
aas
stos
adc
cltd
inc
movl
push
push
mov
mov
jne
int3
mov
aad
push
push
adc
pop
stc
fcomps
xchg
pop
inc
and
pop
aaa
outsb
jl
push
ljmp
mov
stc
push
mov
xor
pop
mov
cmc
inc
cmp
lods
sti
jbe
lock
cmpsb
cmp
and
xor
mov
pop
cmpsb
aad
mov
push
mov
inc
out
lea
das
fisttpll
xor
fcoml
pop
nop
lods
bswap
loop
in
xchg
mov
mov
ret
stc
fdivl
test
push
mov
ret
movsb
xchg
je
push
stc
xchg
mov
mov
push
inc
jb
shll
add
std
mov
je
sahf
mov
inc
ss
aam
sub
cs
xlat
arpl
push
xor
lods
jo
or
push
loopne
dec
xor
popf
lea
jnp
adc
in
sub
xchg
lret
mov
mov
insl
pop
pop
push
movsb
flds
or
dec
sbb
or
loop
push
pop
sub
adc
ret
mov
xlat
and
add
sbb
out
add
in
sbb
test
out
sub
jmp
lea
or
cmp
mov
fdivr
loopne
add
incl
mov
xchg
adc
jae
mov
jnp
jp
cmp
mov
xchg
loopne
out
jg
into
cs
jns
cmc
adc
rorl
mov
subl
push
je
sbb
xchg
fildl
mov
jbe
add
mov
enter
mov
fidivl
dec
outsb
dec
nop
xchg
adcl
in
sub
test
or
into
insl
mov
mov
repnz
cmp
call
push
ficoml
outsl
push
inc
xchg
or
sbb
dec
enter
sub
sub
ds
test
js
mov
rcll
ret
arpl
xor
lock
das
iret
sahf
insb
bound
sbb
pop
scas
pop
mov
sub
xchg
scas
xchg
add
sbb
mov
inc
dec
shl
mov
mov
push
iret
inc
cmp
pop
repnz
std
pop
inc
mov
pop
sub
call
aas
aas
xor
mov
or
stos
push
decb
push
adc
mov
xor
xchg
mov
nop
mov
pop
call
loop
test
mov
movsb
adc
aam
js
inc
adc
mov
test
ds
mov
test
add
fsts
mov
and
dec
xor
out
inc
xor
cli
shrb
mov
fisubrl
rcll
out
mov
mov
mov
shll
and
leave
ja
shrb
lock
sbb
jmp
test
ss
push
ss
rol
sub
inc
in
clc
xor
xchg
inc
pop
sbb
jno
jae
in
shl
xchg
jle
getsec
test
sub
mov
pusha
sbb
das
lret
rorl
test
or
hlt
repnz
jecxz
and
adc
cmp
mov
sar
out
cmp
mov
stc
pop
ss
stc
lods
mov
push
in
mov
xor
jb
jbe
out
mov
imul
aam
cmp
pop
adc
pusha
jne
out
ficompl
cltd
std
fisttps
pusha
ss
xor
xor
cmp
lahf
popf
xor
pop
mov
inc
out
je
jns
pop
movsb
and
mov
scas
inc
test
lahf
popa
pop
or
stc
jne
pop
dec
lahf
xor
sti
pop
bound
imul
mov
dec
and
xor
es
jmp
inc
imul
jo
mov
adc
push
push
rorl
or
clc
fildl
ja
xlat
mov
shrb
jne
mov
cmp
mov
and
mov
add
sub
clc
dec
push
mov
call
adc
in
mov
xchg
sub
scas
ja
dec
push
jne
test
xlat
xor
adc
leave
nop
mov
mov
out
and
mov
rorb
jp
pop
dec
divb
imul
andl
sub
arpl
sub
pop
push
lods
les
xor
stos
rorb
cmp
mov
pusha
push
inc
in
sbb
cmp
lock
cmc
pop
cltd
fsub
decl
jp,pt
xor
jae
or
push
cltd
xchg
outsb
test
jl
jmp
cs
out
iret
pop
bound
nop
mov
xor
push
and
mov
fs
rcll
mov
test
aas
fcoms
orb
mov
jno
fadds
nop
dec
sub
inc
sahf
add
fs
adc
loopne
inc
pop
nop
sbb
and
mov
dec
jge
xchg
push
rcrb
mov
cmpsb
pop
sbb
leave
pop
xor
mov
mov
xor
test
mov
sbb
xor
outsb
gs
mov
sbb
add
testb
int
push
hlt
daa
adc
repz
movsl
ret
adc
cmp
adc
mov
mov
mov
xor
std
jge
imul
lret
cltd
fsubl
mov
pop
push
fldt
cmp
sbb
leave
loopne
test
loop
adc
cmpb
sbb
cmpsb
and
push
mov
push
dec
mov
pop
xor
and
push
mov
mov
sub
nop
add
loopne
add
cwtl
mov
loopne
sbb
test
inc
in
mov
iret
cmp
dec
pop
test
mov
jmp
std
lods
sub
add
arpl
stos
pop
jo
es
inc
push
inc
cmp
ret
dec
jbe
add
xchg
sbb
cmp
scas
incb
mov
push
adc
dec
push
test
push
mov
cmpsb
mov
xlat
adc
lock
pop
push
aaa
inc
xor
scas
jmp
movsb
jne
sbb
mov
iret
push
setnp
sub
jg
dec
mov
mov
nop
insl
jl
jo
pop
in
jo
sub
pop
jmp
dec
ret
push
pop
fcoml
push
cmpsl
inc
fldenv
icebp
pop
shll
gs
fists
xchg
mov
mov
dec
pop
xor
pop
lret
jno
add
test
mov
lret
mov
add
mov
loopne
push
ret
inc
cmp
pop
inc
scas
jle
test
mov
scas
into
mov
or
add
mov
and
fidivrl
jbe
fsubrl
ficoml
inc
movsb
cmp
or
push
addr16
jno
push
add
inc
lods
inc
sub
or
mov
aam
xor
jbe
jb
lea
ljmp
cmp
int3
push
mov
inc
mov
pmaxsw
outsb
or
dec
loop,pn
pavgw
pusha
mov
pop
add
cmp
dec
push
ljmp
out
std
mov
cmp
test
cmpsl
loopne
repnz
test
inc
loop
out
fnstenv
mov
or
cmp
xchg
mov
inc
cmp
sub
mov
decl
inc
or
repz
lock
adc
pop
ljmp
sbb
dec
cwtl
dec
lea
push
leave
mov
adc
scas
inc
jmp
pusha
fwait
call
rcr
add
pushf
mov
inc
nop
cld
sbb
pop
dec
or
inc
imul
jnp
dec
pop
push
mov
call
jne
cld
movl
mov
add
enter
movsb
mov
jecxz
jmp
shrb
push
push
ljmp
xchg
pop
imul
cmp
into
or
outsl
mov
or
jbe
std
mov
mov
mov
mov
xchg
and
mov
inc
adc
jnp
cltd
inc
sub
inc
mov
pop
inc
dec
push
mov
add
es
jo
sti
cmpsb
std
push
mov
mov
adc
cmp
xchg
push
sbbl
out
decl
push
add
xor
adc
mov
push
or
sbb
push
xchg
in
and
sub
sbb
ret
add
adc
stc
sbb
inc
int3
sbbl
push
xor
lret
nop
fimull
sti
adc
loope
lcall
ret
outsl
or
sub
or
dec
gs
dec
enter
and
dec
cmc
add
js
xchg
pop
cmp
hlt
add
jp
jg
xchg
movsb
dec
push
cmc
pushf
inc
fnstenv
jbe
push
pushf
in
xor
and
cwtl
lock
mov
insl
sbb
lea
aaa
lods
sbb
push
mov
mov
ljmp
mov
sub
dec
xchg
shll
mov
je
clc
jbe
mov
mov
pop
pop
lods
dec
out
aad
ds
pop
cmc
mov
jg
cmpsl
pop
int3
leave
mov
dec
lods
int3
cwtl
push
mov
lcall
neg
xchg
cmp
lock
rcr
popf
inc
iret
push
sbb
out
imul
sbb
ret
data16
and
movl
cmp
shlb
or
push
int
xchg
xor
dec
ret
out
adc
pop
pop
scas
cmpsb
aaa
xchg
mov
mov
gs
add
out
adc
daa
ljmp
or
adc
sahf
cmp
mov
insl
and
adc
xchg
daa
mov
jg
out
mov
push
repz
inc
jbe
test
pop
test
inc
jae
mov
jae
pop
xorb
js
stos
or
xor
or
xchg
pop
and
inc
push
or
daa
mov
adc
adc
jne
in
sub
adc
jge
push
mov
cmp
sbb
mov
sbb
pusha
mov
addb
ja
int3
pop
in
adc
dec
outsb
jl
out
mov
fsubr
push
and
or
jge
adc
cmp
mov
cld
repz
sbb
stos
pop
jne
or
adc
inc
mov
scas
xor
adc
mov
call
cld
dec
enter
jb
sbb
mov
cmp
sub
aas
lock
or
stos
dec
pop
pop
test
xor
shlb
flds
lds
ss
je
add
test
lock
outsb
inc
rcrb
mov
cwtl
xor
mov
sbb
mov
dec
lds
int3
movsl
sbb
xchg
cmc
inc
or
xchg
dec
add
pop
xchg
and
add
xor
fnstcw
jl
cmc
ljmp
mov
into
sbb
cmp
sub
and
jnp
sbbl
mov
ret
mov
add
push
dec
pop
add
das
ds
jp
push
outsl
jbe
test
add
lea
pop
xor
push
pop
add
adc
dec
add
mov
xchg
adc
int3
jnp
inc
cli
nop
cld
ss
data16
cmp
int3
sbb
pop
test
push
jl
je
mov
jg
stc
adcb
xor
test
sub
mov
out
sub
call
jl
xchg
imul
inc
dec
popl
movsl
fmuls
lods
sti
mov
push
sbb
pop
aas
xor
ret
jp
aam
scas
jge
stos
adc
test
test
das
sbb
jne
sarl
add
mov
xor
cld
jb
clc
roll
add
je
jbe
lret
adc
xchg
xchg
jo
loopne
lods
mov
scas
out
aaa
in
and
fcompl
hlt
jbe
cmp
push
out
into
into
mov
stc
mov
jo
add
fisubrl
mov
int3
out
pop
rcrl
xor
lods
jnp
bswap
mov
adcl
das
pop
cmp
sub
cmc
xor
or
mov
in
sbb
xorl
jmp
dec
cmpsb
frstor
enter
mov
lds
ret
lahf
pop
adc
out
cld
adc
sbb
aas
ret
inc
lret
mov
jb
roll
mov
mov
jmp
stos
cmpsb
xor
popf
jg
stc
adc
popa
jecxz
fwait
mov
dec
and
jmp
inc
stos
mov
add
test
sbb
add
test
inc
hlt
fcmovu
test
add
xchg
lahf
fisttpll
loopne
movsb
mov
mov
xchg
push
add
sahf
call
mov
or
adc
loope
xchg
ds
cli
push
xorl
popa
pop
andb
jbe
in
xchg
inc
outsb
pop
lret
jge
mov
js
inc
pop
mov
or
jge
das
lods
or
fildll
jb
cltd
clc
pop
jno
push
mov
punpckhwd
rcll
adc
lahf
xor
les
or
sub
les
fstpl
pop
jbe
sbb
in
mov
pop
or
clc
lret
in
inc
inc
in
push
xor
xchg
adc
rcrl
lahf
mov
push
mov
addr16
mov
push
xor
and
mov
ret
fwait
les
xor
bound
adc
jno
pop
push
lret
mov
sub
sbb
int
cmpsb
fnsave
mov
incb
out
mov
adc
xor
testl
pop
test
ret
je
int3
cli
cwtl
sub
lret
jne
out
pop
push
mov
sti
les
pop
and
lods
mov
gs
in
pop
jae
mov
pop
daa
movsb
outsb
sub
sub
out
iret
and
mov
or
jo
pop
sarb
push
das
push
lret
add
mov
jmp
mov
hlt
dec
insb
repnz
fcmove
push
out
pushf
out
scas
sub
jmp
pop
xorb
mov
adc
fsubrs
les
stos
or
inc
arpl
cltd
xor
sbbb
push
and
insb
pop
inc
lret
loopne
in
popa
fildl
sub
push
jle
sub
xor
outsl
mov
mov
aad
cmpsb
push
mov
pop
cmp
jae
mov
mov
dec
aaa
push
enter
cmp
add
out
mov
sbb
sbb
sub
loope
mov
sbb
sub
or
jle
sbb
data16
call
fistpl
mov
jle
add
push
test
cmp
cltd
pop
cmp
fdivr
mov
sti
lsl
cltd
cmp
lods
insb
or
pop
xchg
iret
inc
jbe
repz
repnz
jl
cld
mov
jle
adc
das
dec
sbb
mov
sub
cmp
stc
sbb
add
jecxz
sbbb
xchg
pop
sbb
mov
pop
add
mov
xchg
shrb
ja
movsb
nop
les
mov
sub
mov
fcmovnu
adc
flds
xchg
jnp
ficoms
js
sahf
out
int3
andb
jle
and
mov
mov
popa
jmp
mov
fdivrs
xor
cmpl
xchg
scas
fstl
dec
repz
push
sti
lea
arpl
mov
addr16
add
je
cli
dec
imul
popf
insl
cwtl
inc
mov
adc
mov
and
gs
mov
fimuls
pusha
adc
ja
mov
xchg
xor
cmp
shrl
jle
mov
mov
hlt
jmp
xchg
mov
mov
insb
jp
mov
iret
add
pop
mov
notb
xchg
mov
jle
jae
jnp
mov
adc
pop
js
lret
xchg
mov
push
mov
push
pop
push
flds
scas
sub
push
nop
mov
pop
outsl
inc
inc
shll
rcrl
fadds
pop
cmp
xchg
adc
shlb
rcl
push
test
jle
mov
fucom
mov
ret
bound
fwait
int
inc
test
fldt
mov
out
push
out
pop
test
movsb
aad
mov
loop
cltd
jecxz
fisttps
imul
or
sub
mov
cli
scas
leave
push
test
stos
mov
popa
pop
fsubrs
les
add
std
fmull
cmp
movsb
inc
cmp
add
mov
cmp
out
xchg
add
lea
dec
push
ja
hlt
xchg
rol
insl
jge
jp
jno
xchg
les
ljmp
imul
xor
lods
mov
inc
inc
ret
sub
lock
pop
adc
xchg
pop
das
cmp
mov
push
fs
push
filds
lret
cmc
mov
nop
insb
lret
or
outsl
or
sub
and
pop
sub
dec
pop
pusha
leave
adc
int
pop
and
jb
cmp
das
clc
mov
adc
std
loope
jl
dec
inc
dec
xchg
pop
fldt
sub
inc
rcr
sbb
push
cmp
addl
push
fcomp
sub
mov
sbb
dec
pop
cltd
jne
mov
lock
push
mov
sti
add
test
or
pusha
push
and
adc
jmp
lcall
xorl
adc
sbb
lea
sarb
or
fwait
sbb
xor
push
in
fwait
xchg
outsb
mov
xchg
ds
adc
repz
movsb
sbb
outsl
sub
aam
pop
fs
sbb
push
outsw
jg
iret
or
arpl
nop
inc
mov
or
push
into
shlb
fwait
or
mov
mov
gs
inc
jbe
insb
dec
push
cmp
push
in
fidivrs
mov
ja
xchg
jp
xor
push
add
jbe
cld
std
xor
cmp
add
je
aad
or
cltd
pop
push
sub
xchg
pop
mov
pop
pop
imul
jbe
mov
adc
dec
jnp
fwait
std
fdivrs
jg
jbe
ljmp
adc
pop
cs
insl
mov
hlt
xor
out
jmp
cwtl
jns
adcb
lcall
les
dec
xor
lods
fcoms
lret
cwtl
jl
and
fdiv
inc
arpl
in
pusha
adc
jl
add
inc
fistpl
mov
fildl
jl
out
jp
xchg
clc
out
mov
repnz
jo
mov
lock
negb
mov
outsl
sbb
clc
ljmp
xchg
call
xor
sbb
iret
pusha
lahf
add
pushf
mov
int
or
sbb
jbe
xchg
out
loop
jae
mov
pop
adc
dec
or
js
adc
sbb
fstl
mov
pop
add
jne
push
pop
mov
jae
repz
xor
jl
cmpsl
jmp
out
nop
cmc
add
inc
imul
cmp
jne
lods
lea
mov
add
inc
lock
add
ret
xor
sbb
and
inc
andb
mov
dec
cmp
dec
mov
pop
inc
jb
pop
hlt
pop
call
cmpsb
lea
lahf
sbbl
mov
pop
xchg
cmc
mov
or
xor
xor
lret
add
and
fbstp
or
sub
mull
ljmp
fbld
test
add
insb
mov
xlat
cmp
mov
ret
scas
pop
cmc
or
adcb
dec
and
inc
cs
pop
add
ds
stc
sub
sbb
inc
mov
lcall
shlb
cmovno
addb
imul
sbb
inc
inc
mov
jnp
dec
ret
idivl
addb
loope
shl
xlat
push
xchg
dec
cmp
sub
xlat
fsubrs
imul
mov
test
insb
inc
cltd
pop
notl
das
cmp
aaa
pusha
out
mov
fs
or
loopne
xchg
and
cmpsb
les
push
pop
adc
divl
jo
dec
xorl
add
mov
pop
loop
bswap
add
ret
inc
adc
divb
test
test
and
push
add
lcall
pop
mov
test
call
mov
insb
sbb
pop
dec
mov
inc
jmp
outsb
and
jg
cld
or
cmpsl
jle
sub
fiaddl
xchg
add
fidivl
mov
movsl
les
out
dec
loopne
sbb
xchg
dec
jnp
jne
push
adc
sti
push
sub
mov
test
aam
push
out
add
lock
mov
fldt
mov
js
popa
ret
shrb
dec
pop
sar
sub
xor
dec
sub
pop
dec
push
sti
pop
jl
lcall
jae
pop
jge
jns
add
push
dec
pop
push
js
out
in
and
bound
jb
inc
adc
xorb
rcll
mov
pusha
mov
sbb
aaa
popf
sbb
clc
cli
dec
mov
adc
in
or
xlat
pop
sub
gs
loopne
sahf
sub
jmp
ja
lret
mov
mov
call
mov
push
ljmp
lods
stc
cmpsb
test
sti
mov
sbb
pop
jno
dec
mov
aam
pop
inc
or
insl
dec
ja
repz
out
pusha
nop
sti
mov
and
push
aad
inc
mov
mov
push
mov
inc
xchg
pop
inc
or
push
inc
in
and
sbb
test
adcb
repnz
rolb
das
mov
push
add
call
iret
aad
cmp
xchg
mov
push
arpl
test
insb
cmp
insl
inc
sbb
mov
xlat
ret
aad
in
movsb
push
sahf
mov
repnz
les
xor
cwtl
xchg
into
scas
mov
pop
out
scas
add
notl
dec
fldcw
out
gs
lds
mov
pusha
push
fdivrs
jae
mov
xchg
int3
jmp
test
push
lods
sahf
xchg
inc
mov
inc
mov
or
and
out
pop
mov
lret
call
imul
cld
fs
ljmp
push
aaa
cmp
and
cmp
inc
scas
scas
add
and
adc
wrmsr
rcrl
shrl
repz
jbe
mov
jb
shl
pop
clc
stc
stos
sbb
xor
enter
mov
xchg
mov
js
dec
ds
mov
lods
insl
pop
mov
dec
push
rcr
fnsave
fstps
sbb
push
dec
lret
std
and
pushl
and
ja
in
loop
scas
dec
mov
xchg
mov
push
jg
arpl
movb
popl
fidivl
push
hlt
movsl
es
and
inc
pop
cmp
es
push
mov
imul
pop
mov
ficoml
pushf
mov
shr
xchg
adc
shlb
pop
inc
inc
decl
fwait
xchg
rolb
and
push
push
jns
out
push
adc
pop
add
sarl
rolb
jae
dec
shlb
inc
adc
ss
mov
add
mov
je
xchg
and
int
cmp
insl
xor
roll
jg
insl
pushf
inc
ret
mov
aad
lods
adc
jg
aas
ja
bound
mov
push
dec
daa
punpckhdq
aad
pusha
stos
xor
dec
lret
lea
and
insb
inc
les
xlat
adc
inc
adc
mov
sbb
inc
pop
outsl
mov
or
jo
mov
xor
mov
nop
inc
inc
jl
int
fscale
jg
scas
aaa
inc
sub
adc
aaa
and
dec
ret
rcll
arpl
repnz
cmovs
aam
or
jnp
adc
xchg
test
cmp
push
lods
out
mov
sub
jnp
cmp
stos
out
add
movsl
cmp
outsb
sub
popf
dec
push
sub
and
je
inc
push
sahf
neg
xor
mov
rorb
pusha
cltd
pop
fnsave
test
leave
stos
mov
in
and
or
cltd
imul
int
and
je
or
or
xchg
dec
push
jmp
mov
jb
jns
lock
jae
ljmp
hlt
xchg
fldenv
dec
mov
pop
lret
and
xchg
int
pop
pop
mov
ds
nop
js
int
shll
xchg
adc
pop
cs
in
mov
xor
jo
ret
pop
das
in
push
inc
lea
inc
cmp
pop
arpl
cmp
daa
adc
push
mov
xor
xchg
outsl
lods
push
addr16
pusha
adc
mov
cld
mov
cmp
adc
fst
mov
and
cmp
cli
lods
adc
mov
pushf
mov
jb
faddl
pop
mov
cmp
test
dec
xorb
scas
and
test
fsubrp
into
mov
fildll
sbb
add
ret
and
shll
daa
ds
out
push
test
mov
xor
and
clc
dec
loopne
jmp
test
fimull
jmp
arpl
sub
inc
aad
js
rorb
je
jg
cmp
fwait
movsb
xchg
loopne
pushaw
mov
lds
dec
sbb
out
jo
aad
push
fldl
mov
enter
jmp
jmp
jno
fldt
pop
mov
mov
test
mov
xchg
dec
fmuls
mov
aaa
cmp
sub
push
sbb
loopne
jp
js
nop
mov
andl
mov
lods
push
or
jnp
js
lret
jbe
push
mov
adc
cmp
inc
ljmp
add
xor
or
sbb
xchg
cwtl
das
lahf
fisubrl
cmpsb
sbb
inc
pop
pop
jecxz
gs
jle
decl
out
adc
loop
fnstenv
jp
je
jb
shr
mov
cmp
and
sub
mov
test
inc
repnz
sti
jl
pushf
scas
in
fucomip
mov
dec
mov
jecxz
jnp
bound
cmp
jns
jl
mov
subl
sti
gs
xchg
cmp
jmp
lock
dec
push
cmp
insb
pop
test
sbb
adc
scas
jg
pushf
and
mov
mov
loope
andb
in
jo
js
int3
or
testl
fisubrs
inc
popa
cmp
xor
dec
outsb
stos
sti
and
jl
loop
or
jae
fiaddl
inc
loopne
dec
rcll
adc
and
or
mov
xchg
dec
rol
shrb
add
sub
popa
sbb
test
dec
pop
gs
enter
xchg
pusha
xchg
and
popa
xorb
xchg
arpl
mov
mov
leave
mov
mov
mov
clc
das
sub
loopne
fcmovnu
mov
push
xor
scas
push
mov
and
and
add
into
sub
lock
dec
bound
push
cmp
mov
mov
loop
mov
les
fcmovnu
jnp
sbb
cli
sbb
add
add
scas
inc
or
sbb
orb
cmp
push
scas
pop
cmpb
roll
add
shlb
and
rcll
bound
shr
add
outsb
adc
sub
test
out
cmpsb
mov
adc
dec
dec
jno
push
push
mov
push
sub
fadds
sbb
jne
cmp
gs
inc
jp
ficoms
add
int3
lods
rcr
adc
push
cmp
adc
jp
sahf
add
test
pop
jnp
push
movsb
stos
jne
stos
and
adc
jge,pn
mov
repz
gs
jle
scas
xor
daa
loop
int3
test
sbb
push
cmp
hlt
add
add
in
and
es
jnp
inc
push
decl
fcom
or
mov
movsl
mov
into
add
and
xor
data16
std
add
pop
popa
pushfw
aas
xlat
clc
int3
pushf
out
jo
fisubrl
cmp
faddl
jnp
or
dec
and
inc
mov
xor
aas
test
fldcw
push
add
inc
mov
addb
fcmovnb
dec
mov
push
bound
icebp
push
adc
lods
arpl
push
aas
add
arpl
js
cmp
ss
or
cmpsb
add
in
test
and
mov
xchg
inc
push
dec
les
inc
fdivrs
cwtd
bound
push
and
test
or
arpl
jmp
cmp
sbbl
bound
adc
aas
shrl
rol
sub
jp
add
insl
jnp
aas
test
dec
push
pusha
xchg
imul
fs
xchg
inc
push
add
jnp
jae
dec
int3
ss
add
test
imul
pop
pop
sbb
pop
insl
aas
xchg
push
sub
lcall
dec
rcr
lahf
outsb
daa
je
inc
and
xchg
sarb
xchg
aad
xchg
phaddsw
push
jne
cli
shl
dec
loop
jne
and
cwtl
jge
cwtl
pusha
and
in
lock
mov
inc
xchg
or
mov
out
ds
push
fdiv
sbb
dec
xor
rcr
aad
sbb
add
xchg
jo
mov
popa
pop
cmpsl
dec
subb
or
xchg
sbb
mov
imul
fdivp
addb
jb
jle
incb
or
out
dec
or
jne
ljmp
mov
fldt
mov
fs
call
push
lock
sub
dec
jg
repnz
int
fwait
adc
popa
mov
pop
adc
add
xor
or
push
pop
or
loop
mov
lock
jmp
jbe
hlt
pop
inc
mov
adc
roll
orps
push
xchg
mov
xchg
dec
fcomps
or
test
fildl
jb
shll
bound
test
xchg
xor
fs
xchg
cmp
fldl
fdivr
push
std
push
lods
sub
and
mov
int3
or
out
xchg
orl
aad
sbb
push
ds
push
mov
add
mov
pop
adc
das
cmp
int
testl
lods
pop
xlat
pop
jge
jmp
xorb
lret
pop
xchg
cmpsb
xor
ficomps
add
cmp
add
pop
pop
jle
add
test
adcl
dec
jmp
dec
imul
lret
movsl
mov
cmp
imul
mov
mov
sub
add
ljmp
jg
mov
popf
pushf
dec
push
pop
push
and
pushf
iret
call
xchg
jb
cmp
xor
inc
adc
adc
frstor
daa
sbb
mov
xchg
push
ljmp
adc
cmp
push
out
push
mov
push
or
sarl
xlat
test
ja
cmp
xor
dec
addl
ljmp
imul
dec
es
push
push
jne
jmp
xchg
sahf
fstpt
addr16
jg
jae
adc
and
int
pop
mov
out
lea
adc
pop
pop
mov
icebp
lahf
call
pusha
xchg
fdivs
lea
test
inc
cmp
and
repz
outsl
inc
aaa
inc
mov
in
push
shlb
pusha
adc
mov
jne
pop
loop
sbb
fildll
xchg
jmp
mov
cmp
push
fs
fmuls
fcmovnbe
mov
outsl
outsb
jnp
cmp
lea
jg
repnz
adc
fisubrs
lcall
dec
push
push
lea
lods
xchg
out
setge
lods
pusha
jne
add
sub
decl
cmp
sahf
sub
jmp
xchg
add
je
mov
xchg
push
sbb
ret
mov
xchg
sub
aam
mov
enter
push
out
lcall
lock
xchg
inc
jp
push
jmp
and
jne
adc
out
popf
js
test
fcomps
sbb
push
add
xchg
scas
mov
mov
add
jle
stos
inc
dec
add
push
es
sub
div
es
mov
push
mov
std
shll
jb
dec
pusha
out
mov
lahf
hlt
loop
push
xchg
imul
loop
inc
xorl
fldl
xchg
xchg
loop
xor
push
frstor
and
adc
add
cs
push
shlb
icebp
or
dec
jnp
pop
sbb
push
mov
mov
mov
pop
push
xchg
or
ret
and
cwtl
add
or
loop
cmp
push
xor
or
incb
daa
push
in
scas
adc
mov
lds
xchg
mov
aaa
mov
dec
icebp
mov
popa
sub
jbe
std
mov
push
push
imul
dec
jecxz
dec
cmp
dec
mov
and
out
mov
lret
push
xchg
cmp
rcll
push
inc
in
cwtl
js
mov
push
pop
push
push
push
jl
inc
inc
lret
or
xchg
jae
dec
xchg
es
add
mov
mov
jmp
xchg
sub
movb
ljmp
divl
adc
adc
out
ret
insl
test
bound
rcrl
scas
cmp
in
cli
adc
int
cld
jbe
movsb
loope
cmpsb
push
sbb
sub
push
subl
pop
dec
xorl
imul
movsl
cmp
mov
stos
sbb
cmp
cmp
fbstp
pop
icebp
outsl
test
les
jae
adc
xor
jo
and
xchg
adc
pop
out
inc
test
jbe
repz
inc
ss
call
or
aam
push
push
test
dec
xchg
aam
mov
pop
dec
mov
popf
mov
pop
lret
xor
mov
ss
push
cmp
sbb
pop
jo
inc
adcb
mov
pop
adc
ficompl
scas
push
daa
mov
test
repz
jae
mov
jl
pop
ret
mov
push
cld
and
fidivrs
subl
sub
cli
xchg
test
imul
fld
out
sub
cmpsb
adc
jl
push
xchg
pusha
cmp
mull
xchg
insb
jb
add
push
bound
mov
lret
add
xor
stos
jmp
ljmp
xor
addb
adc
mov
cmc
mov
cwtl
aaa
andl
lcall
xlat
adc
dec
add
dec
lahf
sbb
mov
add
and
jmp
jmp
push
xchg
gs
out
push
lods
dec
js
mov
xchg
cwtl
sub
sbb
repz
or
stc
iret
mov
sub
inc
jb
decl
and
cltd
shrl
push
pop
cmpsl
adc
je
push
push
aad
loopne
add
add
movsb
out
jle
mov
add
lods
loope
mov
add
ss
push
mov
adc
ret
push
mov
mov
xchg
push
jns
mov
into
addr16
fdivrl
outsb
pop
add
int3
imul
and
lahf
fsub
sahf
sbbb
stc
daa
sbb
add
movsl
inc
das
in
mov
aaa
es
imul
pop
sub
loope
sahf
jbe
dec
add
add
std
jp
mov
adc
xor
sbb
fcoml
lcall
in
ds
cmc
adc
xchg
fs
aam
sbb
sbb
jb
mov
in
addr16
dec
popa
mov
test
out
push
push
jle
add
fwait
pop
jge
loopne
xor
lea
xchg
out
adc
inc
mov
add
cmp
mov
popa
pop
hlt
xchg
ret
pop
jb
xchg
xchg
jg
push
flds
add
or
inc
xchg
mov
dec
popf
sbb
and
or
in
pushf
push
jbe
std
rcrl
aam
sub
push
jecxz
pop
dec
jmp
pushf
jmp
xor
rcrb
add
push
je
test
dec
jno
pop
pop
push
sub
adc
cmp
xor
xchg
loop
adc
pop
das
sub
mov
add
imul
push
insl
hlt
push
cmpl
into
jecxz
push
out
pushl
into
ljmp
cmpsb
jae
stos
xor
je
int
in
js
sub
cli
jge
and
xor
and
cmpsl
cmp
mov
imul
push
mov
shll
or
mov
jb
shrl
data16
jp
insb
sbb
push
es
dec
fcomps
cmp
fcompl
bound
nop
int
enter
xor
add
mov
xchg
call
bound
xlat
jbe
pusha
rolb
mov
lcall
aaa
push
fcomps
jecxz
jb
add
xchg
jne
rorb
cmp
lods
out
das
scas
ja
bound
add
push
push
or
sub
and
pop
fs
imul
add
lret
mov
and
lahf
xchg
cltd
jp
inc
bound
movsb
aam
stc
sti
lods
adc
gs
jle
sbb
icebp
stc
call
push
out
outsb
xchg
es
cltd
push
stos
xchg
or
xor
push
adc
mov
idivb
lret
stc
ret
sbb
sub
in
fisubrl
xchg
scas
adc
ja
sub
sub
adc
mov
dec
mov
mov
frstor
mov
lock
cmp
loope
icebp
pop
push
rclb
pop
push
push
cmp
mov
outsb
out
jmp
mov
xor
or
icebp
jle
pop
pop
in
mov
lock
std
imul
cmp
adc
xchg
in
push
fcom
cwtl
cwtl
aaa
in
inc
and
push
testb
int
rcl
pop
rcrb
notb
adc
mov
adc
pop
test
mov
sub
jo
mov
adc
cmp
popf
cmc
lea
sahf
movsb
lcall
mov
cmp
xlat
out
dec
xor
cwtl
sub
stc
test
pop
mov
adc
push
add
shrb
popf
push
push
ret
dec
repz
cmp
out
inc
mov
movhps
outsb
cmp
xor
stc
testb
jl
mulb
jno
add
arpl
mov
jne
add
sbb
jle
stc
sub
push
mov
jecxz
rorb
negl
cmpsl
jns
sub
ret
and
aam
ljmp
ficomps
add
fmul
aam
lods
jge
rclb
aad
fcoms
inc
cmpsb
inc
ret
dec
mov
out
movb
imul
cmp
jns
je
orl
dec
int
lea
fiaddl
xchg
lods
in
mov
ljmp
mov
shrb
clc
cmp
mov
mov
sub
jns
fmul
shlb
cmp
xchg
aam
std
es
pop
loope
sbb
test
aas
sub
pop
cmp
rorb
cmc
in
sbb
leave
cmp
clc
push
sahf
orb
std
xor
push
lret
jne
cwtl
mov
fcom
cld
sti
subl
out
aad
dec
or
sbb
jo
sub
jmp
cs
dec
xchg
cwtl
movb
in
sub
add
sti
fbld
cs
xchg
lea
or
xlat
scas
imull
pop
js
inc
dec
cmp
outsb
mov
dec
test
push
and
push
cld
pop
movsb
or
or
dec
cs
mov
test
test
adc
push
scas
push
sbb
fbld
sbb
test
cmp
fmuls
pop
sbb
sti
mov
mov
addl
jp
idivb
pop
cld
shlb
je
lds
and
andl
gs
icebp
adc
dec
mov
inc
push
sbb
adcl
mov
mov
movsl
jmp
adc
ret
leave
in
jmp
or
xchg
sti
mov
mov
out
mov
and
jno
jbe
pmullw
sbb
adc
enter
pushf
push
movsl
rorb
dec
lret
sub
sbb
xor
pop
push
mov
mov
sbb
pop
scas
sahf
sub
pop
xor
pop
js
push
fbstp
xorb
inc
mov
xor
push
sub
sarl
aam
mov
incb
add
out
sub
std
or
push
and
sbb
adc
lds
loope
inc
in
testl
insb
lods
mov
jb
lret
scas
sub
sub
cmpsl
sbb
pop
xor
test
lret
fcompl
in
in
cmp
mov
jnp
jl
fidivl
pop
jge
lock
in
add
sub
cs
imul
xchg
mov
lret
dec
lods
shlb
mov
and
cmp
int3
sbb
out
fsubrl
sub
push
repnz
test
aas
mov
jle
ds
xor
or
add
inc
enter
sub
cmpsb
subl
push
cwtl
sbb
mov
jbe,pt
mov
aas
mov
daa
pushl
xchg
mov
les
cmp
sbb
jge
jns
mov
lcall
dec
push
xlat
sarb
in
ds
push
in
xchg
mov
xchg
and
out
mov
aad
adc
cmp
sbb
pushf
das
add
imul
aad
enter
mov
and
adc
out
es
push
mov
test
push
lret
mov
popf
insl
sar
push
movsl
jg
adc
clc
push
push
xor
xor
hlt
sub
dec
dec
mov
pop
repnz
aad
lock
pop
arpl
or
call
mov
cmp
inc
popf
lods
xchg
adcb
xchg
adc
jecxz
pop
mov
js
mov
cmp
scas
sub
xlat
cmp
insb
popf
push
and
cmp
jg
sbb
js
lds
dec
inc
popa
mov
nop
mov
xchg
fsts
iret
jecxz
rcll
sbb
fcmovb
dec
inc
xor
pop
pusha
pop
cmp
adc
mov
pop
xlat
and
cmc
sub
mov
cli
xchg
int3
cs
out
jb
or
cmp
cmp
dec
rsqrtps
out
sub
dec
pop
fprem1
or
add
mov
jge
imul
xchg
mov
sbb
add
cmp
and
orb
int3
xchg
and
jmp
aaa
fidivrl
sbb
add
mov
mov
mov
fcmovnb
popf
aad
icebp
clc
imul
sub
fists
insl
mov
push
mov
ret
adc
std
inc
loopne
sub
pop
push
sub
movsb
adc
sbb
jmp
inc
sbb
mov
or
int3
je
mov
xor
mov
sbb
pop
loopne
mov
loopne
subb
pop
insb
mov
inc
inc
adc
loopne
cltd
xchg
loopne
bound
dec
adc
iret
jno
mov
rcll
mov
jecxz
inc
lahf
xchg
xor
lret
or
in
push
sub
pop
xchg
inc
data16
lret
or
lcall
gs
js
push
scas
mul
inc
xchg
in
mov
icebp
das
mov
outsl
lods
sbb
lcall
sbb
push
adc
das
inc
sbb
andb
loopne
inc
push
adc
xor
testl
insb
lock
jecxz
jne
mov
clc
cld
mov
js
adc
sbb
adc
push
pop
test
leave
fbstp
outsb
xor
jle
inc
arpl
loop
cmp
dec
inc
pushf
test
rcrl
leave
mov
adc
or
or
fdivs
sbb
xchg
xchg
mov
dec
testb
lret
sbb
adc
dec
out
xchg
in
pop
int
popa
stc
out
cmp
and
je
fisubrl
imulb
or
add
rcrb
sub
or
sub
pop
add
data16
in
push
ss
pop
dec
mov
mov
xor
inc
and
into
sub
pop
cltd
cmp
adc
ja
sub
mov
mov
loope
or
shrb
sub
inc
push
fimuls
push
add
sahf
rcrl
cwtl
das
cmpsb
and
or
leave
inc
push
xor
lods
aas
ret
cmp
inc
cmp
pop
pop
and
mov
nop
in
inc
jg
add
ret
mov
dec
testl
push
sub
outsb
in
insb
scas
lock
popf
or
iret
lock
inc
js
push
adc
adc
fsubs
dec
pop
add
les
or
arpl
jg
ljmp
mov
xchg
enter
add
and
xchg
fs
mov
xchg
or
fwait
jp
cmp
rcl
inc
outsl
inc
xor
inc
aaa
scas
cmp
pushf
pop
mov
jg
inc
je
jmp
ds
pop
mov
daa
fiadds
stos
shl
push
es
out
mov
add
lods
push
cmpsl
mov
dec
icebp
jecxz
mov
cltd
mov
iret
aam
xchg
scas
int
outsb
jne
push
pop
push
mov
lea
sub
arpl
cmp
sbb
mov
scas
adc
sub
pop
mov
add
jns
and
cmp
add
fldt
adc
mov
out
sti
es
cmp
push
cs
cmp
mov
movsl
mov
in
adc
lret
or
xchg
cmp
sbb
or
sbb
inc
add
and
dec
mov
shl
cld
mov
ror
daa
test
xor
dec
inc
int
dec
inc
je
push
xchg
aam
add
aam
inc
adc
pop
jb
dec
pop
stc
mov
jae
ds
add
jmp
pusha
es
mov
mov
xchg
jmp
gs
movsl
ret
fcomps
ja
ja
std
ffree
mov
adc
rcrl
and
ss
mov
mov
adc
out
jmp
add
xlat
jp
jno
cmp
jae
fsub
pop
inc
sbb
aam
movsl
in
data16
in
adc
pusha
xchg
test
jbe
daa
es
jno
pop
push
jb
mov
mov
arpl
rorb
mov
movsb
adc
inc
xor
inc
pop
pop
mov
ret
mov
mov
cmp
xor
xor
sti
jge
out
pop
jle
das
jg
les
clc
fbld
inc
sbb
shll
pop
clc
test
xchg
cmpl
mov
test
jo
fstp
jmp
lea
mov
andl
fmul
fdivl
xor
jmp
pop
xor
inc
faddl
add
sbb
jmp
inc
mov
cltd
fadds
std
lock
aam
cmp
fdivrs
inc
in
xchg
push
mov
shrl
leave
int3
inc
or
fcompl
jl
push
jno
inc
sub
outsl
add
xchg
cmpsl
addr16
cli
cmp
xchg
icebp
push
mov
dec
movsb
jl
pop
xchg
cmp
mov
test
fdivrl
js
pop
jecxz
dec
jg
mov
pop
and
dec
xor
insb
sub
movsl
sbbb
aas
push
lods
mov
sub
gs
es
sti
jge
push
in
mov
dec
repnz
shrb
add
adc
cmc
repnz
decb
lock
add
in
jo
in
das
jns
pushf
xchg
popf
pop
inc
gs
add
scas
jl
gs
cltd
adc
test
sbb
negb
mov
inc
repz
mov
jmp
cld
xor
in
xor
cltd
fdivrs
jnp
cs
fadd
pop
leave
into
js
mov
rolb
outsb
inc
pop
fs
fisubrl
fidivl
aaa
fs
out
lret
scas
clc
in
push
int3
ficoms
or
repz
jg
add
add
cmp
mov
fdivrl
cmpb
xor
adc
or
cmpsb
aam
js
cwtl
or
bound
cmc
xor
lcall
sub
push
loope
fs
movl
jmp
mov
lret
lock
cmp
cli
jnp
rcrb
jbe
sub
xchg
xchg
mov
mov
or
pop
xorb
jnp
rol
dec
cmpsb
stos
clc
add
pop
mov
leave
xchg
shlb
or
sub
push
cli
and
loopne
shlb
das
ret
push
cmp
out
xchg
jl
push
imull
daa
push
sbb
hlt
jmp
das
sub
lret
xor
push
xor
cmpsb
sahf
enter
out
outsb
pop
push
in
jecxz
mov
mov
fisttpl
sub
dec
push
and
clc
mov
dec
clc
out
pop
jle
mov
js
dec
jg
lret
mov
cmp
sub
xchg
and
add
sub
data16
sbb
push
adc
and
les
mov
out
lods
mov
push
rolb
loopne
popa
out
sub
cwtl
rorb
std
in
adc
test
mov
cmpl
scas
in
lea
movsl
sub
scas
fnstcw
jns
and
sbb
ja
shlb
std
nop
ret
fisttps
pop
enter
leave
outsb
dec
nop
popf
test
jbe
mov
mov
stos
inc
mov
adc
pop
mov
push
add
call
shlb
hlt
out
mov
or
xchg
movsl
enter
icebp
mov
int3
jae
xor
mov
cli
ja
mov
pusha
mov
adc
iret
pop
das
lahf
data16
and
dec
lcall
mov
mov
je,pt
dec
mov
test
shll
mov
jne
clc
fimuls
ret
popf
fwait
and
mov
data16
sbb
and
mov
pushf
mov
inc
outsl
sahf
cmp
xchg
imul
sbb
push
inc
out
xor
mov
shrl
leave
aas
into
lahf
jecxz
lret
jp
mov
push
in
loop
insb
outsb
mov
jno
xchg
dec
cmp
mov
pop
jbe
jg
mov
dec
movsb
ds
shrb
and
adcb
ss
ja
cmpb
xchg
xchg
sub
fcoml
push
std
out
outsl
and
testl
fwait
mov
cmp
adcb
ss
into
mov
ss
dec
pop
shll
lds
dec
mov
cmp
mov
mov
cmp
das
xlat
in
outsb
and
jno
cli
fdiv
mov
pushf
leave
adc
mov
pop
mov
cld
mov
cwtl
mov
mov
push
add
add
or
pop
jae
and
in
fdivrs
ret
mov
shrb
push
fists
ja
xchg
jg
push
lret
xchg
cmp
xor
aad
dec
cmc
mov
in
fldt
pop
mov
sub
dec
inc
cltd
push
cmp
enter
testb
lcall
xchg
je
jns
movsb
ljmp
addl
or
ret
xor
repnz
notb
or
lods
ja
hlt
dec
inc
lret
jge
mov
mov
fistl
cmpb
rorl
pop
lret
cmp
inc
dec
push
adc
bound
in
jge
jno
or
cmp
test
repnz
and
test
adc
jmp
cmpsl
cmp
mov
and
or
pop
sbb
bound
push
std
lds
push
sbb
test
je,pt
cmp
and
inc
sub
jecxz
fsts
std
into
into
mul
xor
outsl
sbb
test
int3
xor
push
arpl
push
scas
inc
push
ficompl
and
ret
xlat
xor
psadbw
pop
push
jne
push
cmpsl
aam
mov
and
push
test
xchg
mov
inc
and
pop
push
sbb
inc
insl
mov
test
push
in
and
insl
push
cli
enter
push
xchg
jge
mov
out
dec
mov
dec
pop
daa
lods
add
in
imul
mov
rcrl
ret
inc
xlat
push
int
int3
pop
mov
xor
lock
das
jbe
xchg
pop
xchg
outsb
or
nop
xchg
pop
jb
movsl
decl
push
push
lahf
sub
das
pop
adc
sub
int3
bound
jge
leave
fmull
lods
test
les
cmp
loop
push
in
pop
scas
push
out
scas
inc
mov
jg
repnz
lret
and
cmpsb
scas
clc
repz
pop
xchg
add
mov
loope
aas
add
inc
out
lahf
xchg
adc
inc
lock
xor
xor
ds
rorl
mov
adc
mov
stc
or
incb
lcall
hlt
mov
fwait
mov
int3
mov
sbb
aaa
mov
and
push
inc
shl
test
sub
push
push
mov
and
pop
add
mov
test
dec
xchg
push
or
bound
xchg
xor
lcall
xor
push
lods
orl
sti
repz
inc
fstps
mov
push
stc
pop
das
clc
jecxz
adc
or
sub
daa
dec
inc
fs
jo
das
sbb
pop
or
bound
mov
aad
cld
xor
rorl
inc
bound
fadd
add
push
loope
dec
push
stos
stos
xor
fldenv
gs
lret
inc
ds
add
mov
in
mov
xchg
inc
insl
inc
jecxz
jg
push
in
daa
jbe
int3
shll
mov
mov
or
out
cmpsl
mov
icebp
pusha
pop
aam
ss
arpl
lods
cmc
adc
add
mov
mov
in
and
pop
int
add
add
and
and
pop
inc
insb
add
pop
rorb
pop
in
aas
cs
int
jbe
adc
das
iret
inc
divl
add
aaa
cmp
add
js
aam
outsl
xchg
into
dec
push
fnstenv
xchg
mov
gs
lock
add
mov
nop
aam
daa
sub
xorl
jnp
popa
iret
mov
cmpsb
mov
cmc
inc
cld
dec
sub
inc
inc
movsb
jnp
iret
mov
add
insb
out
adc
pop
mov
mov
sahf
jmp
es
std
push
cli
test
mov
outsb
daa
aas
push
ja
sub
enter
test
xchg
lock
inc
enter
loopne
sbb
lods
xor
test
aaa
and
test
sub
or
lock
arpl
in
adc
fnstsw
jl
cmp
int3
loop
and
jbe
pop
cmp
add
loope
sbb
cmp
fcmove
int
and
mov
in
jle
xchg
inc
ret
lods
push
mov
inc
pop
arpl
xor
jecxz
or
bound
xor
mov
fsubrs
loop
adc
bound
cmp
dec
adc
lcall
inc
ss
pop
scas
inc
push
gs
bound
fsubrs
shl
pop
mov
dec
dec
into
add
mov
dec
mov
dec
clc
or
pop
outsl
gs
movsb
bound
mov
jp
sub
test
lock
dec
xor
adc
cld
fisttps
add
xor
xor
lds
xchg
push
or
mov
imull
mov
jp
cmc
push
loope
ss
in
cmp
loopne
clc
out
and
inc
repnz
and
xor
flds
jmp
pusha
mov
fisubl
or
cmpsl
pop
in
jmp
rcrl
test
pushl
lahf
out
std
dec
stos
divl
adc
jae
or
push
jnp
addl
movsb
jns
loope
cwtl
pusha
ja
ret
cwtl
in
lret
mov
lds
dec
dec
xchg
mov
add
push
ret
add
aad
adc
xlat
xchg
mov
pop
xlat
jp
lahf
ret
inc
pop
ja
jnp
mov
mov
mull
mov
sahf
xchg
fs
mov
mov
cltd
cmp
add
das
stos
jl
dec
jle
mov
sbb
add
in
cmp
pop
das
or
sti
add
jnp
push
sbb
dec
xchg
mov
cmp
adcl
mov
jg
cld
push
push
and
stc
out
imul
lret
and
sarl
cmp
lock
xor
inc
outsl
cmp
xchg
scas
test
ret
test
jmp
mov
sbb
mov
jnp
sarb
and
push
ffreep
cld
mov
mov
pop
cmp
rorl
xchg
dec
shrb
jl
sub
pop
fisttpll
inc
cmpsl
pop
push
pop
jne
cmp
mov
incl
cmp
imull
je
mov
cli
aas
fistl
inc
arpl
mov
sub
or
or
out
mov
fs
mov
les
add
cmp
fnstenv
lret
adc
adc
pop
add
lcall
mov
add
mov
jbe
int3
and
xchg
insl
into
aas
mov
or
push
icebp
cmp
rclb
seta
jle
lods
mov
loope
rclb
ror
push
adc
push
xchg
inc
sbb
or
xchg
loope
push
jno
sub
sbb
pop
rorl
mov
inc
push
push
stc
shlb
jle
xchg
push
jb
jns
shll
push
lea
in
jp
and
xor
mov
sub
je
inc
push
out
lcall
dec
inc
add
add
inc
ss
add
aas
add
cmpsl
out
out
imul
out
mov
jns
js
mov
sbb
sub
scas
cmp
imul
dec
mov
lahf
pushf
rcrb
pop
push
js
enter
arpl
push
ds
notb
arpl
jno
popf
sbb
sub
lcall
jmp
push
incl
add
sti
mov
xlat
jns
inc
or
lods
pop
cmpsb
mov
and
mov
dec
addr16
nop
pop
jle
dec
push
jo,pt
cmp
mov
inc
addr16
sbb
jp
mov
fwait
cmc
push
in
push
or
fcoml
cmp
sahf
pop
cmp
jnp
fcomps
jg
mov
repnz
rcrb
aaa
and
iret
repz
lds
jg
sbb
les
xchg
pop
in
dec
std
jle
add
fstl
push
std
ret
mov
jecxz
test
push
mov
and
lods
add
sbb
negl
push
jg
add
jae
shlb
int3
fcomp
dec
rorb
in
lods
mov
inc
sub
shrb
roll
int3
mov
addr16
sub
int3
sbb
sbb
ljmp
cmp
loope
imul
cwtl
pop
pop
out
das
fnstenv
in
mov
testb
dec
cmp
xor
inc
mov
dec
cmp
and
pop
sub
cmp
jb
xchg
in
fucomip
sbb
add
fs
pop
out
icebp
xchg
flds
clc
ds
and
mov
dec
xchg
sbb
hlt
arpl
mov
cmp
loopne
iret
in
iret
sahf
popf
fsubs
pop
out
cmpsl
movsl
cli
insb
mov
inc
mov
sqrtps
xor
aad
jbe
std
add
jns
sub
or
movsl
sub
and
outsb
and
mov
imul
xchg
xchg
sbb
shrl
int3
xchg
imulb
mov
cld
std
jnp
shlb
add
or
dec
cmp
mov
sub
loopne
fnsave
adc
or
mov
dec
dec
lods
int3
fiaddl
dec
es
dec
das
jno
push
test
stos
lcall
mov
sahf
push
loop
and
pop
mov
jmp
mov
pop
xchg
adc
mov
jne
add
clc
sbb
movsb
jb
std
scas
jbe
call
add
jae
push
xor
add
xor
inc
mov
arpl
dec
push
adc
fsubrl
lahf
add
es
jae
add
sub
scas
stos
mov
jae
push
push
lock
sbb
rol
push
dec
sbb
std
sub
cmp
and
fldenv
jno
adc
iret
jbe
mov
add
cmp
in
ret
arpl
and
push
pop
adc
jno
xor
inc
and
pop
into
xor
and
mov
push
mov
enter
lea
or
xlat
or
push
in
pop
in
rorl
out
lgs
lods
fldl2t
inc
dec
jns
in
jp
push
pusha
out
ss
pop
cmpsl
mov
push
repnz
sub
rcrl
sbbl
mov
dec
shll
ljmp
leave
xor
rcll
jg
sub
jl
movsb
repnz
xchg
mov
in
fnstenv
xlat
inc
dec
xchg
cmpsb
or
dec
fidivs
ficompl
lcall
ret
sub
fcmovnbe
in
push
popf
in
lock
adc
mov
pop
adc
push
dec
aaa
mov
xchg
cmp
dec
out
and
mov
pushf
jmp
push
xor
clc
test
inc
sub
outsb
repz
rcrb
in
or
sbb
add
dec
sahf
insb
adc
in
inc
xor
repz
mov
mov
adc
in
imul
add
dec
jmp
mull
repnz
mov
sub
add
mov
inc
fptan
mov
call
out
and
dec
daa
jne
mov
or
aas
jmp
adc
les
mov
shlb
ds
sub
imul
and
dec
lock
jmp
push
rol
pusha
pushf
sbb
cli
cmp
inc
mov
loope
enter
sub
into
cmp
cltd
neg
adc
cmc
and
fmul
adc
sub
jne
je
fs
and
fcoms
push
movsl
lahf
movsb
inc
scas
inc
cmp
sub
shrb
and
lds
jge
jns
dec
lods
sbb
popa
loopne
cmp
fdivrp
gs
inc
or
in
inc
rclb
jne
xor
mov
in
ds
adc
dec
xchg
inc
stos
sar
mov
sti
pop
stos
xchg
lods
in
test
cmp
mov
shll
lcall
pop
icebp
mov
daa
push
pop
frstor
sub
ret
insb
insb
jne
sbb
mov
rclb
pop
rep
sub
jnp
in
adc
das
ja
sbb
push
cwtl
movsl
add
sub
outsb
test
pop
pop
test
mov
xchg
popl
mov
inc
cmp
repnz
jae
or
sbb
adc
jmp
packsswb
icebp
xchg
sub
cmp
call
dec
push
mov
addr16
cmp
cli
push
lea
ss
mov
aas
cmc
inc
push
insl
fsincos
rcrl
decb
mov
cmc
loop
cmpsl
aad
sub
rcr
push
jle
jle
adc
hlt
repnz
mov
dec
mov
cmp
mov
sbb
dec
popf
ljmp
dec
out
mov
fstl
loopew
pop
inc
in
xchg
adc
jmp
mov
mov
cmp
lret
mov
fldenv
dec
sub
adc
pop
clc
ja
mov
push
mov
push
xchg
xchg
mov
jp
test
aas
push
testl
gs
mov
jbe
popa
in
lahf
pop
push
lea
inc
stos
mov
or
cmpsb
es
push
pop
jle
xchg
rclb
xchg
sbb
jl
mov
subb
pop
mov
mov
dec
adc
test
sub
or
fisttpll
dec
sub
js
adc
das
loope
jbe
fldcw
cmp
mov
jp
add
into
sahf
inc
js
jmp
into
mov
cmp
pop
xchg
mov
popf
xchg
jmp
and
jge
mov
jl
leave
repz
push
adc
jo
outsl
lods
pusha
out
cld
cltd
aam
idiv
mov
cmp
lods
fincstp
sbb
les
mov
scas
xchg
mov
add
lret
fstps
and
jge
popf
inc
sahf
inc
imul
ljmp
cwtd
sub
xchg
jg
call
xorb
loope
and
mov
push
fisubl
test
mov
cmc
loop
je
jle
out
mov
cmp
or
cmpb
dec
cmp
cli
push
jmp
pop
jnp
mov
stc
jnp
add
daa
sub
repz
inc
aam
aaa
mov
add
roll
xchg
push
aaa
mov
jle
stos
mov
imul
jecxz
adc
ret
cltd
dec
xchg
nop
jmp
fdivr
movsl
sbb
sbb
xchg
in
xchg
vpaddd
dec
push
sahf
loope
cltd
mov
leave
ret
out
jmpw
jbe
dec
lods
add
mov
mov
pop
loope,pt
outsl
mov
jmp
push
cwtl
xor
daa
pop
cmc
jg
clc
jo
ljmp
repnz
push
nop
mov
mov
inc
rol
pop
loopne
mov
jmp
jmp
add
sbbl
lea
xor
cmc
pop
inc
int
mov
stos
mov
jns
sbb
lret
daa
std
or
push
cmp
ljmp
inc
jle
cmp
or
or
mov
push
shrb
mov
or
nop
fstpl
cs
cmpsl
mov
nop
outsb
adc
mov
inc
das
mov
mov
std
pop
dec
std
add
out
inc
inc
notb
push
jmp
or
jns
sub
xchg
sub
outsb
pop
xor
daa
xor
pop
cld
popa
cmp
movsb
imul
and
sub
dec
mov
das
enter
lods
or
sbb
icebp
cli
mov
mov
mov
sub
mov
aas
and
jb
pusha
je
cmc
pop
jnp
inc
fcmove
push
stos
ss
cmp
dec
xchg
leave
mov
and
xchg
mov
in
les
ljmp
pop
lahf
call
mov
cld
insl
cmp
xor
icebp
cmovl
add
pop
and
movsb
imul
cmp
sub
add
es
int3
and
test
std
es
adc
sub
cmp
xchg
mov
test
pop
pop
add
cmp
aaa
addr16
push
add
add
sub
out
cmp
int
outsb
pop
sub
cmp
dec
mov
sub
insb
inc
scas
and
adc
out
xchg
pop
add
xorl
lea
dec
push
dec
and
cmc
aaa
int3
cmpb
xchg
inc
mov
jp
loop
cmp
icebp
mov
xchg
jl
test
jl
nop
movsl
jo
push
sbb
xor
pop
cmp
mov
mov
inc
arpl
cmp
scas
iret
ds
mov
mov
clc
js
sti
addr16
mov
fdivr
fstp
sub
stos
mov
lret
sahf
ret
xor
mov
aad
mov
mov
icebp
and
add
or
int3
cmp
inc
mov
aam
ljmp
fists
xor
xchg
or
push
lods
jl
cmpsl
imul
jnp
jbe
jne
insl
mov
lock
adc
dec
cmp
sahf
mov
xchg
inc
add
xchg
scas
faddl
das
jno
mov
cmp
pop
arpl
js
mov
jge
jge
out
or
ret
xor
lods
adcl
jne
xor
int3
jbe
jnp
mov
fwait
adc
mov
or
fwait
push
daa
sbb
jecxz
movsb
push
cld
int3
inc
and
push
lret
sub
sub
cmp
into
fnstenv
jnp
cli
fstl
lods
cltd
xor
and
sbb
mov
mov
mov
dec
shrl
xor
mov
inc
das
lods
in
mov
lds
add
pop
ss
mov
inc
jge
test
insb
sub
cli
ret
xchg
mov
lea
pop
inc
xlat
adc
mov
and
xchg
mov
fcomip
popa
mov
movsb
inc
push
pop
ja
ljmp
or
fcompl
add
cmp
scas
jg
mov
out
pop
cmpsb
jb
pop
repnz
testb
jmp
adc
popa
mov
movsb
and
or
inc
lds
jg
mov
mov
jp
mov
push
pop
adc
mov
mov
xor
sub
fdivr
inc
lock
scas
enter
xor
adc
xor
sbb
out
jo
je
nop
lea
inc
and
mov
jmp
inc
fwait
dec
xchg
or
sub
outsl
push
push
aam
jnp
dec
mov
cli
xchg
cs
jbe
and
cmpsl
in
fdivrl
iret
xor
push
in
scas
push
loop
lods
sahf
push
inc
xorb
divl
push
xchg
inc
mov
lcall
push
xor
pop
xor
shlb
sbb
and
mov
lea
jmp
out
call
inc
cmp
add
pop
pop
or
jns
in
dec
in
mov
inc
rcr
pop
cmp
scas
mov
hlt
ds
xor
jecxz
sub
mov
insl
adc
xchg
iret
sbb
out
mov
cltd
fnsave
dec
add
ficoms
dec
dec
loopne
pshufw
cltd
xor
sbb
jo
mov
into
or
inc
stos
sbb
mov
sahf
cmc
lahf
sti
rol
lret
orb
or
sbb
lret
mov
ja
sbb
or
and
mov
push
sbb
jmp
and
mov
loope
loopne
addr16
idiv
mov
fidivl
in
cmp
out
xor
jno
and
jae
cmp
jno
call
fdivl
mov
jp
in
stos
cwtl
push
push
jmp
inc
mov
pushl
aaa
imul
dec
pusha
mov
mov
test
adc
insl
adc
inc
insl
and
dec
inc
push
adc
xchg
sub
repz
add
clc
cmpsl
enter
add
call
outsl
push
outsb
cmpl
das
jb
sbb
fcompl
xchg
mov
out
xor
pop
or
inc
dec
pop
int3
sbb
jl
add
mov
loope
jae
daa
fsubr
into
fcomps
imul
aaa
mov
ljmp
in
mov
push
test
mov
lods
push
jle
jo
and
popa
pop
pop
aam
aad
popf
xchg
jmp
and
push
pop
out
leave
ret
add
mov
aam
sti
push
mov
cmp
repz
pop
sbb
fimull
mov
ljmp
and
inc
xchg
scas
lahf
in
mov
inc
cli
sub
test
mov
lret
inc
idivb
xlat
mov
outsb
xchg
in
out
push
pmaddwd
mov
xchg
std
jae
push
test
sbb
int3
xor
mov
test
mov
in
adc
add
mov
mov
jmp
int
jno
xchg
adc
and
cmpsl
daa
push
rcrl
imul
addr16
divb
sbb
mov
adc
mov
xor
adc
inc
pop
mov
push
bound
xchg
pop
jb
aas
push
lods
pop
movlps
bound
dec
sub
mov
push
xor
mov
addl
in
pop
cmp
pop
fnsave
fcomip
cwtl
imul
mov
add
mov
cs
inc
cmp
in
fisubrs
fidivs
out
lods
cwtl
adc
xchg
pop
mov
in
jae
test
int
clc
sub
lods
pusha
jg
movsl
int
repz
dec
pop
pop
or
or
inc
out
bound
stos
aam
mov
pop
mov
xor
in
fmull
clc
adc
fadd
andb
and
xor
testl
dec
and
sub
push
sub
icebp
cwtl
pop
clc
and
jl
sbb
xchg
cmpsl
lock
pop
fwait
mov
in
je
xor
scas
push
and
jmp
sahf
jbe
repnz
xor
jg
out
clc
fidivrl
fchs
adc
inc
movsb
xor
push
push
loop
lcall
jnp
inc
sub
mulb
push
dec
push
cltd
xchg
stos
in
jg
xchg
cld
and
push
pop
cmp
mov
test
xor
ret
sub
popa
repz
push
je
mov
mov
daa
and
pusha
jp
pop
adcb
and
mov
cmpsb
push
ja
lcall
sub
cmp
dec
pop
pushf
les
mov
shlb
insb
cwtl
jae
insl
outsl
push
scas
sbb
dec
push
js
loope
jecxz
dec
pop
jb
mov
push
arpl
xor
jae
ljmp
jmp
clc
fildl
decl
jno
ja
test
lahf
push
loopne
jo
es
das
xor
adcb
jno
test
popa
repnz
andb
mov
test
inc
jl
adcb
cwtl
ja
xlat
inc
or
xor
inc
push
sub
negb
test
push
out
into
mov
jecxz
mov
push
loopne
leave
lea
push
sub
orl
in
and
ja
out
into
xchg
pushf
xor
sbb
into
mov
lea
mov
xor
pop
rorb
ja
jns
jnp
inc
aas
cmpsl
fwait
jge
push
movsl
adc
int
push
pop
lcall
es
sub
cmc
pop
mov
cmp
inc
mov
and
ljmp
mov
push
test
mov
add
sti
adc
iret
cmp
add
cmc
or
adc
mov
xchg
or
sbb
or
enter
jle
xorl
and
dec
lea
loope
jbe
sti
out
dec
push
jge
mov
mov
fnstenv
aam
dec
movsl
mov
push
lahf
mov
sbb
data16
dec
imul
mov
sbb
jbe
lret
sti
dec
xor
fdivr
test
stos
add
cli
mov
cld
fstpl
mov
sbb
mul
lods
ss
sbb
lcall
or
xor
jecxz
addr16
mov
dec
in
jmp
xchg
jnp
adc
mov
js
fiaddl
push
mov
scas
add
xchg
dec
dec
cmp
sub
cmp
fwait
xchg
out
arpl
mov
sbb
or
mov
xchg
sub
ja
rclb
pop
jecxz
push
jle
arpl
mov
mov
sbb
imul
sub
or
mov
imul
mov
std
add
push
faddl
jnp
sbbl
pushf
cmp
push
les
fs
sbb
inc
mov
ljmp
inc
rcr
dec
out
fdivl
lret
sub
sbb
mov
push
cmpsl
shll
roll
ljmp
std
and
and
xchg
ret
fimull
insl
rclb
or
fadd
adc
dec
push
mull
fs
pop
add
jae
push
js
ret
pop
test
mov
xor
mov
cmp
cmpsb
push
jmp
sub
and
rcrb
ss
xchg
xchg
fcomps
in
push
push
mov
fisttps
xor
lea
mov
push
xor
and
mov
mov
arpl
out
xchg
cwtl
frstor
jno
icebp
repz
out
push
mov
dec
xchg
les
ret
lcall
test
jmp
mov
in
mov
inc
test
mov
nop
mov
push
stos
adc
lret
jbe
outsb
into
shlb
psubb
push
loop
dec
and
cwtl
imul
loop
sbb
sbb
push
pop
hlt
fistpl
mov
pmaxub
cwtl
lock
mov
push
xchg
test
mov
xlat
xchg
pop
mov
mov
arpl
push
push
pop
mov
shrb
cwtl
add
xor
dec
shlb
lret
data16
xchg
sbb
in
scas
sbb
xchg
ret
adc
pusha
sub
insb
lock
je
ljmp
jecxz
repnz
gs
addr16
xor
mov
mov
inc
mov
adc
inc
or
rorb
arpl
mov
push
ret
test
and
imul
out
or
lods
sbb
out
cwtl
sub
cwtl
xor
push
icebp
cmp
inc
mov
mov
push
xor
xor
dec
fldcw
mov
mov
and
mov
mov
cmpl
mov
es
mov
imulb
lahf
cmp
xchg
jae
pop
test
mov
push
popa
sub
fisttpl
adc
xor
xchg
aas
imul
out
lahf
leave
pop
fcomip
jns
push
mov
call
mov
sub
xchg
jb
jbe
sub
mov
addl
jnp
lahf
cmp
push
fnstenv
into
cmc
loop
rol
mov
das
pushf
sbb
adc
iret
xlat
aam
addr16
mov
addr16
pop
adc
out
out
jp
add
xchg
jae
adc
dec
cld
xlat
lock
sbb
pop
cwtl
ja
inc
mov
pop
inc
fwait
jecxz
pop
cli
cld
data16
cltd
jmp
sub
repnz
divl
jp
shll
and
scas
outsl
adc
inc
das
sti
or
lock
sbb
inc
push
stos
or
in
cmp
lds
push
mov
int
out
outsl
aaa
cmp
js
sbb
adc
jns,pt
push
aas
mov
cmp
mov
lods
sub
push
xchg
fldt
popa
inc
inc
in
jmp
push
mov
xor
or
icebp
js
cmpsb
jl
mov
xchg
add
adc
sbbb
mov
push
and
mov
scas
std
push
imul
jg
sahf
add
mov
mov
mov
dec
xlat
add
mov
enter
dec
cmpsl
movsl
xor
jnp
and
and
in
imul
lahf
stos
cwtl
dec
xchg
xchg
inc
adc
mov
xchg
mov
pop
mov
sub
movsb
xchg
xor
repnz
pushf
mov
iret
daa
outsl
add
out
cmp
add
sub
xchg
fists
lahf
jno
jecxz
inc
fdivrs
dec
inc
outsl
jmp
pop
rol
mov
dec
int
sbb
push
test
out
mov
xchg
jnp
gs
dec
lds
fwait
loope
test
xchg
pop
xchg
lcall
push
call
cli
stos
and
out
push
rcrl
inc
adc
pop
pop
mov
push
lock
dec
and
pop
mov
int3
xor
aad
dec
outsb
inc
mov
rolb
icebp
dec
lcall
fisubrs
insl
sbb
inc
ret
test
mov
jle
pop
jbe
and
push
data16
mov
mov
in
fs
in
cmpsb
mov
ret
movsb
stos
xchg
js
cwtl
or
int3
push
dec
in
in
cld
push
mov
mov
fldl
addr16
and
negb
test
xor
mov
rorb
mov
fsts
lods
movsb
movsl
stos
pushf
pushf
fistpll
or
jp
mov
add
sahf
mov
jb
fwait
cmp
pop
movsb
std
pop
pop
push
push
mov
xchg
pop
xchg
dec
cwtl
mov
mov
adc
cmp
idivl
insb
xchg
test
add
addb
rcll
enter
mov
and
push
outsb
mov
pop
xchg
push
dec
stos
andb
mov
out
nop
in
mov
lods
shrb
jo
sub
cli
leave
dec
mov
adc
pop
push
mov
ja
out
pop
xchg
sbbb
imul
testl
push
jo
cmpsl
adc
mov
ret
cmp
and
mov
xchg
call
mov
and
test
add
hlt
cmp
loop
mov
cltd
mov
xor
sub
loop
cmp
sbb
inc
out
sbb
jns
push
loop
sbb
mov
je
data16
jb
fs
mov
xor
jg
scas
out
sub
cmc
in
push
cmp
inc
and
xor
xchg
jecxz
xchg
loop
jb
inc
mov
cmp
adc
fucom
punpckhbw
mov
nop
fs
push
dec
and
xchg
aad
xor
shl
jp
lods
or
out
xlat
cli
lods
addr16
leave
add
push
adc
loop
add
insl
or
mov
add
jp
test
push
jne
not
fisubrl
mov
jne
xlat
jg
sarl
mov
sbb
xlat
xor
inc
loop
cs
ret
clc
fbld
ja
push
sarl
cmpsb
xchg
pop
dec
inc
inc
add
jno
fs
lcall
outsl
add
sub
fsubrs
ret
insl
test
test
popf
or
or
jecxz
fistl
inc
add
fmull
jo
les
dec
lcall
mov
mov
jle
sbb
shll
fs
je
push
push
push
xor
das
test
pusha
push
das
call
mov
out
xchg
test
xlat
shll
xor
mov
xchg
cmp
mov
movsb
popa
inc
add
xchg
ds
cmc
rclb
or
std
sub
adc
mov
push
xchg
sbb
hlt
cmp
das
jbe
enter
pop
mov
dec
scas
mov
dec
push
xchg
pushf
outsl
mov
hlt
xor
out
test
scas
pop
stos
inc
add
arpl
lods
pop
lahf
or
and
or
rcl
mov
mov
pop
jecxz
stos
nop
hlt
and
cmp
xor
or
and
dec
and
scas
sub
inc
dec
push
mov
push
repnz
dec
in
xlat
xchg
jbe
xchg
pop
adc
in
imul
or
adc
pop
push
xchg
jns
mov
xchg
and
jae
pop
loope
push
or
mov
cmc
lds
add
and
xor
ljmp
push
fnstsw
inc
into
cmc
jecxz
jnp
mov
push
insl
mov
cld
gs
ret
scas
bound
call
adc
xchg
inc
cmp
and
or
lret
insb
fnstcw
jl
jns
scas
push
and
push
push
mov
sub
lret
enter
xor
rcl
out
sbb
fwait
mov
ficomps
outsb
mov
out
scas
adc
adc
dec
sarb
sahf
andb
inc
nop
lds
test
lods
cmc
stos
lods
pushf
inc
mov
or
or
xor
push
stos
xchg
or
aad
sbb
cmp
sbb
adcb
jmp
shll
hlt
push
fiaddl
in
repz
xchg
and
arpl
mov
mov
movsl
or
adc
addl
sbb
loopne
mov
les
insl
xchg
shl
push
ja
scas
mov
or
popa
lret
lahf
xor
sbb
sti
inc
cmp
test
sub
cld
lret
or
insl
sub
je
push
pop
pop
stc
adc
and
test
cmpsl
mov
adc
mov
int
nop
sbbl
pop
pop
out
out
out
out
cmpsb
test
sahf
mov
mov
mov
and
xlat
push
stc
xchg
lret
out
sub
sub
in
push
outsb
sub
in
jp
push
or
cmc
aad
or
fsubr
out
lret
and
cli
push
test
gs
idivl
inc
shll
xchg
and
pop
in
addb
in
push
adc
fdivrs
inc
jl
aaa
adcb
and
mov
or
inc
test
add
int
outsb
mov
and
pusha
in
jno
in
mov
mov
imul
shl
pusha
loopne
icebp
ss
cltd
pop
mov
jb
xor
imul
dec
pop
and
add
add
push
lock
jae
sahf
xchg
in
mov
je
xchg
jge
or
mov
mov
movsl
stc
mov
jl
ret
adc
sub
mov
dec
mov
pop
push
mov
dec
push
sahf
dec
fs
mov
cltd
jl
data16
jne
mov
cmp
iret
inc
and
pop
xchg
dec
rolb
push
std
push
xor
xchg
xchg
rorl
bound
enter
xchg
jbe
and
dec
dec
jae
mov
testb
and
push
pop
int3
cmc
sub
ficomps
stos
int3
imul
sub
test
lret
out
std
in
jl
dec
jae
ja
loopne
dec
add
movsb
push
mov
addr16
and
mov
add
add
adc
mov
scas
mov
daa
push
add
ret
shll
stos
sub
test
lds
sub
and
imul
adc
popf
fidivs
shlb
jb
popf
xor
push
mov
add
inc
add
rep
inc
add
leave
xor
xorl
inc
ret
icebp
std
sahf
pop
mov
stc
and
pop
dec
pop
pop
jne
test
push
in
mov
aam
pop
mov
mov
xchg
sub
xor
jb
lahf
dec
ja
mov
popf
loope
lods
arpl
cmp
add
lret
xor
xor
aaa
mov
das
xchg
bound
sbb
stc
lahf
push
movsl
mov
cmp
sti
jbe
adc
or
shrl
clc
lret
push
aam
cld
cs
sahf
push
enter
inc
enter
scas
ficomps
inc
fs
xor
sbbl
repnz
es
movd
jle
pop
in
mov
cmp
add
fimull
insl
mov
sbb
dec
adc
aas
cmpsb
cmpsl
imul
dec
outsb
cld
stc
push
jmp
xor
scas
push
cmp
es
daa
sub
shrb
gs
loop
and
test
bound
dec
mov
jns
push
rdpmc
test
pop
push
repnz
mov
es
imul
cmpsl
lods
mov
xchg
lret
add
sbbb
add
jge
dec
mov
xlat
jmp
and
xchg
pushf
repnz
mov
ret
mov
adc
test
fucomp
xchg
les
pop
popa
mov
shrb
xor
das
movsb
and
pop
mov
in
mov
into
xlat
fwait
inc
icebp
pushf
aas
clc
pop
push
jl
cmp
sub
test
stc
push
dec
aad
filds
repz
cmpsl
push
cmp
mov
sti
aaa
andb
lret
mov
jns
shll
inc
mov
jno
sbb
adc
add
mov
add
jnp
xor
mov
adc
push
dec
lahf
ret
movsb
push
arpl
cmpsl
jbe
sbb
std
gs
push
adc
aad
mov
cld
inc
pop
push
aad
cmp
mov
cmpsb
mov
and
push
dec
xor
push
das
push
mov
jg
lcall
inc
clc
jne
sbb
jmp
and
jbe
js
aas
and
das
mov
lea
mov
jb
lahf
dec
jecxz
fwait
gs
adc
mull
and
clc
mov
mov
jno
mov
clc
sbb
add
or
icebp
mov
cli
and
mov
pop
push
sbb
push
lea
or
lock
push
xchg
icebp
in
adc
mov
dec
ja
lret
push
sbb
or
int3
clc
jl
add
fldcw
sarl
rorl
sub
jnp
shrl
xchg
mov
inc
repz
xchg
mov
or
cld
sbb
xor
aas
mov
jno
jecxz
and
mov
add
fsubp
push
dec
pop
and
xchg
pushf
scas
into
push
cs
push
mov
pusha
xchg
cmp
push
ficompl
mov
sbb
cmp
push
jg
aas
mov
fwait
xchg
xlat
stos
daa
cmp
cld
jge
fmull
mov
pop
scas
lods
xchg
testb
repz
into
mov
cmp
pusha
xchg
xchg
js
fnstsw
push
data16
out
push
cmpsl
fnsave
daa
mov
add
cmp
push
in
lret
inc
lahf
jmp
inc
dec
test
add
mov
hlt
fs
dec
sbb
jg
fisttps
mov
xchg
cmpsl
insb
imull
cmp
jae
add
mov
test
clc
cmp
nop
ja
inc
aaa
jnp
mov
pop
das
call
ret
and
sbb
push
cltd
fst
lea
test
std
mov
or
sub
aaa
xlat
das
inc
test
arpl
xor
inc
in
adc
add
flds
pop
not
sbb
sbb
xor
andl
jge
je
push
push
sti
xor
popa
push
cmp
push
cmp
cwtl
sbbl
dec
dec
or
and
mov
push
repnz
push
sub
cmpsl
shl
xor
push
fwait
loopne
mov
xor
je
jbe
push
or
push
mov
mov
ret
mov
push
and
mov
sbb
lret
in
arpl
fdivrl
push
fldcw
cwtl
dec
add
mov
xchg
jge
lret
inc
stc
jb
xchg
xor
in
mov
add
fists
mov
aaa
jle
adc
lods
sub
mov
das
test
daa
fimull
xchg
lea
mov
dec
das
push
faddl
andb
data16
cmc
mov
pop
pop
stos
mov
or
jmp
out
in
addr16
ficompl
fchs
adc
aaa
shlb
push
fdivp
mov
and
xor
data16
and
mov
cli
cmp
mov
inc
mov
or
inc
sub
push
or
inc
cmpsb
ds
fldt
mov
push
imul
pop
mov
test
iret
out
jae
scas
pop
enter
js
sbb
mov
mov
xchg
nop
jbe
fimull
push
push
xchg
aad
jp
push
jbe
out
aaa
rcrl
xchg
mov
and
mov
inc
mov
in
sbb
test
addb
movsb
dec
mov
jl
popa
inc
movsl
gs
mov
add
test
lret
fsub
std
mov
js
sahf
push
outsb
pop
xchg
push
or
imul
pop
repz
inc
pop
dec
fwait
not
cwtl
imul
xor
dec
pop
xor
cwtl
mov
ja
lahf
clc
dec
push
aas
mov
cmc
iret
mov
repz
mov
mov
ja
int3
incb
jo
adc
fdivr
loop
adc
cmp
repz
stos
faddl
loope
adc
arpl
dec
sti
jecxz
out
adc
ret
mov
or
out
dec
mov
out
dec
push
sub
push
cmp
and
cli
push
push
jmp
stc
shlb
jbe
outsb
outsl
and
aas
addr16
mov
pusha
cmp
push
shll
and
in
adc
push
cmp
or
xchg
lds
lds
repz
js
repnz
pop
fdivl
dec
sbb
mov
mov
cli
imulb
xchg
cmc
cld
cmp
enter
push
aam
mov
sbbb
or
ljmp
pop
adcb
cltd
in
sbb
stos
inc
ss
cld
sahf
fstpt
mov
ljmp
push
std
lret
dec
and
mov
rorl
je
andb
mov
mov
and
pop
je
push
lea
xor
push
or
mov
rorl
out
pop
pop
insl
push
icebp
scas
sbb
out
or
inc
xor
mov
out
push
das
loopne
sbb
fnstsw
in
mull
fisubrs
int3
inc
sbb
jbe
xchg
insb
cmp
lahf
sub
lahf
and
mulb
gs
mov
iret
cmp
mov
inc
mov
mov
jecxz
adc
pop
movl
or
test
add
lock
add
cmp
add
ret
push
jp
cld
and
mov
xor
loopne
imul
cmp
sbb
int
std
sti
sbb
inc
or
xchg
out
or
cld
sbb
cmpsl
jecxz
dec
push
addr16
repnz
jecxz
mov
jnp
in
mov
inc
push
adc
ds
pop
sbb
loope
push
loopne
std
imul
and
push
mov
adc
dec
lcall
pop
leave
push
inc
sub
dec
sub
mov
into
or
ds
loope
sub
lahf
push
sub
addr16
stc
into
sahf
adc
pop
out
insl
psubb
push
xchg
cltd
fcmovbe
or
cmc
mov
test
pop
cmp
adc
add
cmp
bound
outsb
sti
pusha
xorl
into
add
pop
jmp
cmpsb
push
pusha
push
sub
xlat
inc
ret
cwtl
cli
mov
fidivs
inc
pusha
or
jg
insb
in
dec
imul
outsl
push
mov
xor
mov
js
aam
xchg
rorb
icebp
mov
and
lods
pop
and
ficompl
popa
and
pop
lods
decb
or
pop
pop
out
cmp
dec
adc
pop
or
stos
inc
push
add
ret
xor
inc
repz
add
ss
push
nop
pop
movlps
push
mov
mov
inc
add
xchg
ljmp
cld
pushfw
sbbl
loope
mov
aad
or
cmp
dec
dec
cmpsb
jg
test
mov
sbb
jb
outsl
ret
es
test
sub
adc
dec
jns
lock
push
fisubl
movsb
sbb
mov
sub
push
into
int
addb
loope
xor
insl
jecxz
loopne
popf
inc
adc
cmp
fs
loop
outsl
push
enter
inc
out
repz
bound
ret
and
jnp
push
xor
jb
imul
sti
std
out
pop
dec
daa
dec
xchg
clc
jmp
jo
jge
cld
adc
mov
sbb
push
mov
loopne
mov
aas
xor
push
in
mov
jle
pop
pop
cli
sahf
stos
jmp
popa
dec
jecxz
or
repz
jo
popf
push
orb
enter
or
cmp
xor
out
push
out
lret
mov
lods
aam
pusha
movsl
aad
or
cs
testb
int3
jecxz
lcall
jmp
cmpsl
lret
orl
cmpb
sub
fwait
pop
cmp
fnstsw
lret
imul
fistl
mov
mov
insl
loopne
cli
les
data16
jbe
test
inc
adc
repz
aaa
xor
or
daa
jecxz
mov
pop
out
sub
cli
bound
je
cwtl
in
push
daa
push
add
add
lea
jecxz
fwait
out
cld
loope
jnp
sub
jae
jne
pop
pop
out
stos
in
call
jl
aam
sbb
jge
mov
test
and
mulb
mov
push
out
or
pop
lods
add
mov
mov
lock
movsb
call
xor
adc
jbe
mov
jg
adc
in
cs
dec
mov
mov
aas
and
hlt
xor
dec
xchg
in
sbb
test
loope
and
add
mov
lock
pop
inc
in
jno
outsl
mov
out
movsb
test
add
xor
mov
pop
nop
add
sbb
or
sysexit
mov
mov
mov
je
aaa
or
imul
cwtl
sbb
lret
xor
cmp
pop
sahf
les
push
iret
xchg
adc
adc
mov
icebp
cmp
or
push
std
mov
subb
and
addr16
xchg
roll
adc
xlat
ret
mov
repz
lret
lea
jg
dec
mov
xchg
push
mov
push
scas
pop
jbe
push
lods
leave
jge
adc
mov
bound
mov
adcl
ss
mov
pop
lret
in
decb
sub
push
les
dec
fs
or
xor
xor
mov
mov
add
stos
test
fidivrs
dec
popa
and
shlb
mov
adc
movsl
cld
inc
or
repz
mov
cmp
jge
jno
aaa
pusha
repnz
hlt
inc
jnp
dec
sbb
ds
imul
int
fs
mov
pop
push
xchg
insl
xor
loopne
push
and
mov
mov
enter
sub
ljmp
add
popa
test
jae
jmp
adc
es
dec
or
mov
aad
xchg
pop
test
dec
add
stos
fwait
push
add
shrl
flds
out
and
in
jecxz
ds
stos
xor
or
xor
cmc
mov
cli
sub
cwtl
andb
in
add
in
mov
test
adc
ja
xchg
ficoms
jnp
push
nop
cld
sub
jp
cmp
cltd
and
jae
xchg
mov
popa
decl
jns
ljmp
repnz
cwtl
mov
mov
cmc
dec
cvtps2pd
pop
fnstsw
js
fs
add
ljmp
ror
les
test
push
sbb
inc
mov
pop
mov
xchg
cmp
push
out
sbb
jle
mov
or
or
or
and
sahf
sbb
mov
mov
jne
in
pop
lret
xchg
nop
cltd
mov
mov
pop
xor
fsubr
stc
jbe
lcall
mov
jl
outsl
icebp
out
dec
sahf
add
or
gs
fdiv
mov
xor
les
adc
or
inc
xchg
mov
cmc
lahf
pop
aam
cmpsl
mov
and
cwtl
int3
sbb
rorl
ja
orl
movsb
pusha
loopne
xor
push
inc
lret
mov
loop
xchg
adc
xchg
popf
xchg
stos
cmp
test
sbb
in
mov
pop
mov
lea
cmp
mov
push
mov
les
les
outsb
mov
int
popa
pop
mov
fiadds
cli
xchg
add
mov
test
mov
mov
push
xlat
std
addr16
inc
pop
sub
adc
test
push
jo
inc
push
fwait
stos
es
xchg
ljmp
sub
cmp
das
ss
mov
in
add
aaa
ret
pop
push
xchg
cmpsl
bound
es
push
rolb
cld
or
lock
adc
adc
jne
pop
clc
jbe
mov
aam
test
movsl
dec
in
fmuls
adc
insl
test
loopne
cmpsl
lahf
std
cmp
sbb
jno
std
xchg
mov
push
ret
jl
icebp
ja
pop
mov
into
jne
ds
leave
cmc
xor
test
push
mov
test
inc
add
mov
shll
and
rcll
dec
mov
in
xchg
lods
dec
in
push
imul
scas
dec
into
arpl
and
mov
outsb
movsb
stos
push
pop
push
push
test
mov
test
enter
jg
popl
cwtl
inc
insb
std
cli
loopne
xchg
cli
hlt
loope
sti
cmpl
rcr
mov
sahf
mov
test
je
jae
cmp
insb
pusha
mov
xor
pop
imul
and
xor
pop
and
imul
jo
test
lea
jmp
fnstcw
mulps
imul
or
push
ret
fsubrs
nop
gs
xor
mov
dec
jno
push
ljmp
enter
jae
mov
sbb
out
les
xchg
xchg
repnz
or
cmp
nop
add
mov
pop
mov
sarb
pop
rcrl
leave
cmp
pushf
push
iret
sbb
mov
sbb
loop
scas
mov
pop
neg
mov
insl
sahf
push
lret
scas
add
and
in
jo
adc
push
sbb
push
mov
sbb
sub
add
inc
in
fstpl
or
fldl
mov
push
adc
mov
sbb
int
or
and
mov
dec
sub
or
and
addb
xor
insb
xchg
push
add
push
aam
hlt
sub
std
mov
pop
jnp
mov
out
js
stos
push
mov
fldz
push
fdiv
addr16
jg
je
mov
ljmp
pop
sub
push
sti
push
push
mov
dec
mov
test
stc
push
pushf
jge
pop
or
dec
ljmp
sbb
clc
mov
jp
inc
adc
pop
fcoms
cld
test
pop
pop
leave
ret
test
adc
jecxz
push
push
sbb
sub
dec
and
pop
ret
xchg
adc
sub
xchg
addr16
insb
popf
cli
fld
movsl
in
pop
lret
push
lods
xchg
shll
ja
mov
pop
xchg
cld
test
and
enter
push
cmpsb
int3
pop
cmp
xor
adc
xor
dec
mov
ret
push
repnz
imul
sub
shlb
mov
mov
mov
fildl
shlb
leave
and
or
sti
jg
pusha
imul
mov
iret
sbb
xor
pop
je
aas
shlb
imul
pop
or
mov
scas
sbb
imul
aas
xchg
test
mov
push
ljmp
mov
pop
pushf
push
xchg
ret
test
jo
hlt
adc
pushf
loope
lock
mov
pop
notl
fiaddl
cld
js
push
cmpsl
push
pop
lret
faddl
pop
dec
mov
xor
jae
aaa
push
repz
jmp
xchg
jae
and
jecxz
in
movsb
enter
negl
inc
cs
jns
xchg
aas
sahf
ja
xchg
movsl
jmp
fdivl
add
rcrl
popa
ljmp
lret
call
loope
add
mov
dec
bswap
or
mov
pusha
push
mov
mov
mov
mov
sub
cli
mov
ficomps
stos
repz
pusha
repnz
pop
lods
leave
ficomps
mov
lods
inc
xorb
push
pop
cs
xchg
idivb
arpl
xchg
dec
jmp
push
xor
sbb
lahf
jne
fisttpll
jae
int3
cmc
jnp
hlt
imul
int
jl
stos
adc
stc
xchg
xchg
pop
shll
ret
add
jbe
iret
or
sub
xchg
xor
filds
std
sub
rcl
dec
adc
sti
pop
mov
scas
scas
fildll
imul
mov
mov
push
in
ss
jb
xchg
cmp
test
mov
mov
pop
in
sbb
mov
lcall
imul
mov
dec
mov
pushf
daa
jp
outsb
leave
lds
xor
sub
mov
mov
push
decb
xchg
mov
xor
enter
call
in
mov
rcrl
and
lahf
cwtl
sbb
les
jb
jbe
inc
jge
ds
sbb
repz
pop
into
inc
loope
pop
pop
and
rorl
push
cmp
and
cmp
pop
stos
loope
ja
add
push
ja
out
pop
push
and
xlat
test
jne
or
shrl
std
cmp
and
insl
out
out
adc
ret
push
and
cs
jb
fmuls
je
loopne
cmp
jbe
dec
ja
scas
std
imul
stos
cwtl
dec
fildl
decb
imul
inc
mov
scas
ss
jbe
xor
rorb
cmp
mov
loop
or
cmpsb
clc
daa
pavgw
cld
jecxz
and
int
imul
js
stc
xchg
loope
cwtl
rorb
ficompl
pop
mov
sub
mov
sbbb
inc
cmp
jp
cmpsb
push
sub
imull
call
inc
cmp
pop
inc
mov
into
test
in
sub
bound
dec
dec
lods
lahf
dec
movsl
sbb
xchg
adcb
cmpsl
cs
lods
das
push
sub
aad
jno
dec
mov
cmp
dec
add
inc
push
jns
lock
fbstp
jns
mov
xchg
fs
outsb
xlat
adc
mov
dec
fnstsw
jl
rcll
movsl
and
insb
pop
jnp
std
adc
lea
mov
add
ret
fwait
js,pn
mov
sub
out
adc
call
mov
dec
cmpsl
es
pop
icebp
inc
jne
cmp
adc
pop
aaa
popa
imul
jge
mov
fnstcw
aaa
out
rorb
aam
cmp
add
jl
jne
inc
cmp
gs
and
scas
or
xchg
out
mov
push
sub
push
push
pop
cld
leave
in
aad
popf
and
push
mov
sub
and
and
cld
cli
pop
cld
pop
into
aas
in
ret
push
push
cli
mov
sub
fcoml
sbb
dec
xor
mov
mov
int
mov
cld
outsb
ffree
mov
aad
daa
xor
out
xchg
inc
mov
or
cli
jae
js
or
sub
aaa
and
push
je
jmp
out
outsl
and
mov
call
xor
aas
cmp
push
jb
aad
cmp
jg
cmp
lods
jno
filds
cmpb
pop
add
pushl
sbb
cli
pop
or
mov
movsl
xchg
jle
mov
sarl
pop
enter
mov
sbb
pop
loopne
jne
or
mov
cmp
in
or
xchg
pop
mov
ja
ret
filds
sub
les
outsl
and
inc
dec
dec
das
dec
dec
repnz
test
or
ret
xchg
jns
push
int3
add
xor
add
lcall
xor
and
xchg
pop
subl
mov
cmp
lods
xor
push
repz
ret
test
jge
cmpl
je
fsubp
aas
inc
xor
xorl
std
xor
bound
fistpll
mov
mov
inc
push
lods
punpckldq
or
mov
dec
pop
lds
mov
lret
cld
mov
mov
outsb
decl
mov
cmpsb
jnp
lods
and
add
call
das
adc
mov
insb
jnp
cld
jl
inc
pop
adc
inc
dec
push
sbb
xor
call
outsl
push
or
je
adc
dec
xor
sbb
pop
lds
sbb
cld
lahf
add
lahf
outsl
cmpsl
stos
or
push
cltd
adc
in
mov
cmp
fldt
push
aam
dec
hlt
cmp
push
add
pop
adc
imul
cmp
sub
pop
pop
push
sbb
dec
mov
adc
cwtl
sbb
sbb
add
sub
cmpsl
push
mov
adc
xchg
lods
mov
lret
mov
enter
or
sub
sub
int3
mov
jo
push
or
mov
shrl
push
je
jns
jo
mov
lret
lock
and
cmc
pop
xchg
fs
aaa
xchg
test
jmp
inc
adc
sahf
sahf
mov
pop
cmp
leave
push
xor
jo
mov
push
jns
das
scas
notb
xor
std
add
es
les
pusha
mov
ljmp
jl
loopne
cmp
stc
sub
sbb
stos
enter
adc
add
jmp
mov
xor
stos
cmc
xor
push
pop
aaa
stc
lock
jge
pop
push
and
ja
dec
je
repnz
adc
pop
jns
or
outsb
clc
in
cli
pop
jp
inc
outsb
xchg
pop
mov
aad
xchg
or
movsl
mov
mov
into
lea
into
fs
jbe
movsl
xor
les
fildll
rcr
pop
mov
mov
mov
nop
mov
mov
pop
xchg
mov
in
jae
loope
ds
xchg
loop
xchg
mov
jle
out
outsb
cmp
es
pushf
inc
inc
out
in
mov
lds
pop
sub
dec
in
jbe
mov
dec
adc
pop
int
jmp
stc
cmpb
pop
hlt
and
aad
icebp
pop
iret
inc
insb
mov
shrb
test
faddp
mov
or
sub
inc
dec
mov
adc
xor
inc
in
xor
mov
jns
bound
and
aam
das
or
pop
pop
idivl
gs
stos
and
push
sub
outsl
jnp
lea
out
popf
loopne
adc
push
out
lea
test
jne
inc
dec
xchg
or
pop
jne
aad
jp
push
mov
imul
add
aam
mov
movsb
mov
cmpl
hlt
rcll
xor
mov
out
fcmove
and
jo
fidivrs
pusha
hlt
fs
mov
test
push
mov
leave
ja
scas
gs
and
scas
cmc
in
out
mov
ret
test
mul
or
into
mov
jb
jo
arpl
xchg
jl
xlat
cmp
cmp
jle
fwait
loopne
les
mov
jno
les
mov
stos
popa
mov
pop
mov
shlb
inc
or
xor
push
jmp
sbb
or
inc
xchg
jb,pt
mov
jle
push
xchg
inc
leave
and
inc
ret
aas
or
inc
mov
jecxz
popa
lods
jno
imul
test
pop
cmp
push
repz
shlb
push
divb
xor
mov
or
sbb
lock
lret
into
aaa
gs
adc
outsb
in
add
mov
fcmovbe
or
fildll
lods
dec
jne
mov
lods
jge
fildl
pop
pop
dec
push
sbb
xchg
ud1
mov
lahf
inc
add
cmpsb
add
and
inc
bound
jp
jb
aas
es
arpl
shr
mov
xchg
adc
mov
std
inc
mov
leave
test
ficomps
xor
push
ss
rorb
js
jae
jbe
mov
jno
divb
push
push
int3
les
roll
pop
aam
enter
xchg
lret
and
sarb
push
cwtl
das
push
test
jecxz
pop
and
jae
xchg
pop
je
insl
pop
hlt
fs
mov
test
test
jmp
ja
cmp
outsb
xlat
mov
cwtl
cmp
sti
outsl
popa
adc
pop
adc
leave
push
lcall
push
cltd
and
cmp
add
push
nop
or
mov
arpl
pop
mov
xchg
pop
pop
lret
into
jl
fidivl
fists
dec
je
sahf
stos
xchg
test
ss
cld
mov
movsb
rcrb
mov
jbe
icebp
adc
out
adc
mov
mov
jle
push
fimull
jp
and
cli
cmp
ficomps
aam
stos
sbb
lods
gs
cmp
pop
add
fstpl
hlt
pop
mov
lods
out
rcrl
cs
mov
push
jp
pusha
hlt
jbe
rcr
push
pop
mov
lods
jo
in
sbb
xchg
dec
lcall
fcomps
and
leave
fsubr
mov
scas
xchg
xchg
sbb
mov
adc
cmp
bound
sbb
adc
jae
mov
insl
loope
adc
xor
jno
loope
inc
out
outsl
cmp
stc
or
clc
cmp
xchg
in
mov
jle
test
in
fsts
cli
test
movsb
addl
xor
cmp
into
adc
xor
test
jle
leave
sub
mov
imul
cmp
ret
mov
inc
mov
dec
stos
or
rclb
out
and
ret
pop
jmp
test
mov
adc
sub
jb
sbb
call
lods
jg
cmp
cmp
dec
inc
mov
jg
and
sub
shr
mov
cld
cmc
bound
push
imull
shrb
cmp
xchg
jne
imul
cmpsb
xchg
enter
je
and
gs
arpl
lds
cltd
mov
addb
inc
inc
popf
outsl
jmp
lea
ja
mov
cld
dec
xchg
cmp
inc
fs
aaa
mov
mov
cmp
ret
stc
inc
popa
sti
loope
arpl
push
mov
sbb
adc
adc
sub
in
xchg
mov
aad
sub
dec
mov
jmp
push
js
pop
inc
dec
shlb
mov
ret
js
pop
ror
je,pt
sti
lret
push
xchg
push
xchg
decl
mov
mov
das
enter
arpl
lcall
xor
push
fistpll
cmp
out
test
icebp
leave
sbb
mov
sahf
mov
mov
jb
popa
jp,pt
mov
in
jmp
ss
sbb
ficompl
push
rorl
imul
popa
xchg
mov
jne
add
bound
out
jne
jno
call
or
inc
push
jmp
jge
rcrb
xorb
ret
dec
fiaddl
fdivl
push
and
mov
nop
cli
scas
je
xchg
adc
mov
lret
test
sbb
push
mov
xchg
shll
fcmovnbe
push
aaa
sbb
andl
push
mov
lret
test
pop
push
cmp
xchg
cmp
or
push
mov
mov
jl
mov
xchg
pop
cmp
es
mov
jg
int
int3
mov
test
imul
test
cs
in
and
test
pusha
popl
and
std
dec
test
sub
sub
imul
xor
add
sub
arpl
dec
inc
ret
or
pop
lds
and
dec
mov
iret
fmul
in
xchg
test
inc
xor
rcrb
outsb
shl
xchg
cmpb
add
mov
rclb
cld
cwtl
mov
xchg
push
ds
call
mov
test
test
mov
int3
std
push
adc
sti
xor
push
mov
lock
imul
dec
dec
pop
cmp
pop
adc
jbe
push
jl
test
and
scas
test
adc
add
bswap
rclb
ret
test
iret
cltd
push
jle
hlt
lock
xchg
jl
or
mull
js
cmp
scas
push
aas
mov
xchg
push
cmp
xor
sbb
nop
shl
cmp
jg
xor
clc
shll
fs
hlt
pop
jle
mov
outsl
dec
push
cli
lods
vpsraw
les
sti
dec
inc
jle
cmpb
enter
iret
dec
mov
punpcklwd
lret
xor
mov
mov
pop
mov
lock
incb
sbb
jnp
scas
jge
orl
outsl
in
sbb
jg
dec
push
rol
frstor
in
sahf
mov
lcall
dec
mov
out
in
mov
movsl
pop
jmp
fdivl
sub
or
xor
sub
jg
scas
push
sbb
jmp
testl
add
or
leave
sbb
xor
and
cmp
jnp
imul
repnz
mul
das
push
lock
orb
jo
push
pop
pushf
inc
jge
jno
mov
xor
dec
ds
or
mov
insb
clc
scas
notl
fmuls
sub
xor
ss
je
cmpb
aam
lods
dec
mov
jne
or
lods
cmc
addb
add
inc
ja
mov
icebp
daa
movsl
test
scas
data16
inc
mov
and
mov
pop
orb
jb
cwtl
mov
inc
in
int
add
arpl
xor
ljmp
fisttpl
add
enter
sbb
lea
push
dec
and
pop
mov
repnz
cld
insl
sbb
aam
not
dec
cmp
mov
dec
imul
testb
es
fidivl
inc
xchg
mov
insb
out
sti
xor
cltd
sbb
or
scas
mov
cmp
ja
test
jns
push
mov
pop
inc
fcoml
jb
cld
popf
add
sub
aam
addb
add
cs
adcb
cltd
loop
xlat
or
out
adc
push
cmp
dec
push
inc
arpl
loop
in
jo
and
clc
pushf
xchg
pop
jge
lea
imul
jno
xchg
in
cmp
dec
and
mov
in
mov
scas
clc
dec
mov
sbb
cmp
daa
test
push
push
mov
inc
jae
and
pop
and
dec
or
pop
push
out
pop
outsb
int3
mov
jge
or
push
fsub
arpl
xchg
pop
arpl
inc
xchg
push
push
add
aas
dec
push
outsb
pop
inc
mov
lock
bound
push
xchg
mov
clc
xlat
mov
xor
test
ret
pop
mov
sub
mov
push
sarb
out
push
in
std
inc
jmp
roll
jge
test
xlat
add
aaa
mov
pop
cmp
scas
xchg
cs
dec
ret
out
in
or
negl
rol
lods
jae
cli
sbb
add
icebp
pushf
lret
test
xchg
stos
jmp
lret
lret
pop
std
xorb
idivb
adc
and
lea
lret
and
lret
iret
in
dec
inc
xor
shrb
xor
adc
fsts
hlt
sbbb
je
mov
shrl
push
stos
mov
sub
fisubrs
mov
mov
add
lret
sahf
xchg
pop
inc
and
xchg
icebp
fistpll
xchg
clc
out
aaa
push
adcb
xchg
cmp
fucomp
or
shll
shrl
out
icebp
push
aas
push
or
incb
dec
mov
push
cmc
jnp
scas
and
inc
imul
loope
aad
mov
mov
outsb
adc
movsb
xchg
repz
mov
jno
roll
sub
push
in
popa
in
outsl
dec
out
icebp
cmp
mov
push
ret
je
and
pop
cmc
bound
and
test
in
sub
in
clc
sahf
and
and
xchg
movsb
push
rolb
enter
leave
imul
and
outsl
push
stc
mov
xchg
or
add
loopne
jns
or
jle
xchg
in
pop
add
pop
sbb
mov
xor
pushf
xor
insl
inc
dec
inc
rclb
jns
push
rolb
neg
mov
sub
pop
xchg
fsubrs
mov
loop
and
rolb
fstps
ljmp
cmp
ret
lods
gs
inc
sbb
pop
push
test
jecxz
mov
fistps
xor
cmp
push
sbb
xchg
and
jle
push
shll
xchg
pop
push
les
sbb
aam
addr16
inc
cwtl
iret
out
fiaddl
insb
sub
and
rolb
pop
popf
int
imul
jbe
stc
mov
fistl
sbb
out
sub
outsb
ss
jae
je
or
test
xlat
insb
cli
lahf
cmpsb
mov
and
scas
lret
jbe
or
filds
mov
pop
sbb
lock
pop
jns
cmpsb
fcomp
imul
lea
dec
push
pop
mov
daa
push
mov
mov
loopne
xor
pushf
jmp
push
mov
sub
pusha
xchg
mov
leave
inc
scas
mov
and
xchg
cmp
fcmovnu
dec
adc
mov
jno
int3
addb
stos
dec
inc
dec
inc
aas
dec
mov
sbb
mov
jo
xchg
ja
jmp
mov
jbe
jno
fcompp
daa
lods
mov
add
mov
cmp
jg
add
std
fsubl
push
pop
aas
mov
push
scas
add
mov
xchg
push
xchg
cmpsl
stos
test
insb
sub
imul
movsb
push
cwtl
xor
sbb
jl
outsl
pop
mov
mov
mov
outsb
cmp
addr16
cs
and
sahf
xor
jmp
stos
imul
sti
stc
pop
inc
jle
in
aam
lds
push
out
cmp
rolb
adc
sub
jne
jp
fildll
stos
clc
dec
lods
insb
sbb
ret
mov
test
and
cmp
shl
inc
lods
sbbl
fs
xchg
in
xlat
sbb
imul
jp
cmp
sub
adcb
push
sbb
cmp
aas
jnp
adc
xlat
xor
jmp
mov
or
repnz
das
sbb
jns
cmpsb
jno
sbb
std
fsub
add
into
sbb
inc
mov
enter
push
fdivl
lret
int
bound
icebp
mov
pop
xor
pushf
decb
and
adc
xor
jl
push
cmpsb
jecxz
scas
add
rorb
cmp
shlb
cmp
fidivl
fwait
popa
push
movsl
lods
xchg
pushf
or
mov
loop
pop
push
popa
std
loope
jbe
xchg
push
add
sti
cmpsb
ret
sbbl
push
sbb
and
push
and
hlt
out
and
and
lret
sarl
dec
add
mov
fcomps
and
or
ss
das
nop
mov
into
push
lahf
clc
shlb
iret
andb
push
bound
aam
ss
and
xchg
rcll
cmpsl
push
inc
xchg
es
cmp
fisubrl
dec
cli
add
and
jno
mov
pop
jecxz
mov
inc
test
movsl
xchg
inc
repz
aaa
lds
andb
testl
and
push
inc
std
sarl
jge
sbb
negb
ret
lret
mov
sarl
push
outsl
or
mov
cmp
sub
in
in
push
ficomps
dec
loope
dec
pop
and
sbb
push
push
into
shrl
les
adc
inc
shrl
adcl
test
and
roll
into
in
bound
and
lods
popl
push
cmc
inc
push
cmpsb
fnsave
adc
push
or
mov
cmpsl
rcr
sub
or
jmp
test
and
in
mov
stos
inc
xchg
or
test
xor
mov
and
sbb
out
gs
mov
inc
pusha
sub
inc
jnp
loope
fwait
or
sarl
push
arpl
enter
mov
sub
cld
xchg
popa
dec
int
push
lea
test
cltd
dec
add
push
mov
pop
xlat
dec
shl
fsubrs
mov
jo
and
mov
lea
imul
mov
popf
push
cs
rorl
aam
push
sub
fdivrs
imul
jl
mov
pop
fldl
addr16
xor
stos
int
add
pop
lods
jl
lcall
xchg
ja
in
mov
add
sbb
popf
pop
mov
out
leave
scas
das
or
out
sbb
mov
shrl
mov
and
shl
xchg
jne
push
out
aam
adc
push
xor
std
lahf
loop
fcomi
push
fwait
push
out
xchg
cmp
jae
rcrb
sbb
or
mov
inc
or
sbb
lcall
sub
mov
xchg
mov
cmp
xchg
fwait
jg
rcl
ret
rolb
rclb
out
jb
mov
mov
movsl
mov
test
jl
mov
push
shrl
jae
dec
xchg
ficompl
jl
popf
pop
pop
in
dec
loop
jns
inc
sahf
inc
dec
mov
repz
push
iret
or
jno
pop
pop
fnstenv
jne
scas
dec
and
test
leave
xchg
jae
fistpl
jno
pusha
shll
popf
dec
clc
ljmp
lret
fmul
sahf
out
daa
pop
repnz
push
das
mov
xor
pop
aas
test
add
cmp
jmp
cmp
and
lcall
dec
mov
jns
inc
addl
jle
adc
cmpsl
les
adc
xor
inc
shrl
adc
les
das
shlb
ficompl
ja,pn
cwtl
xor
dec
jle
insl
xchg
das
mov
inc
mov
aad
jae
sbb
add
push
pop
stos
lock
loope
jne
rorb
xchg
leave
ja
xchg
fistl
popa
enter
jo
loope
sub
fisubrl
lahf
das
inc
push
inc
push
loopne
imul
sahf
lret
push
adc
push
or
mov
popa
xor
fucomip
mov
xchg
pop
sbb
push
xor
xchg
mov
out
mov
mov
jne
in
dec
xor
adc
push
sbb
sbb
out
rorb
fiadds
xchg
gs
push
dec
into
pop
pop
test
push
mov
int
mov
dec
fsubrp
sbb
mov
add
notl
jb
add
repz
push
loopne
push
xchg
inc
pop
test
lods
cli
inc
jg
push
filds
ljmp
insw
mov
outsb
jl
dec
push
pushf
and
jo
sbb
std
push
lret
add
ret
sbb
cmp
add
mov
mov
decl
fs
std
test
mov
scas
add
xchg
stos
pushl
cltd
adc
pop
mov
pop
xchg
in
xorl
adc
test
adc
jo
mov
inc
and
into
in
stos
xchg
arpl
sub
push
mov
cmp
aas
aad
stos
pop
in
loopne
mov
mov
ret
mov
ret
ror
je
jp
fistpll
icebp
or
push
jmp
repz
inc
mov
push
out
stos
rclb
pop
int
jl
jne
adc
imul
dec
outsl
adc
call
xchg
adc
and
sub
daa
loopne,pt
or
adc
cli
mov
loopne
xor
imul
inc
test
sbb
lcall
imul
loopne
sub
mov
xor
dec
loop
dec
sbb
lret
ja
movsb
test
jmp
call
mov
mov
add
xchg
enter
out
xchg
idivb
cmc
dec
adc
das
jne
cmp
bound
popf
inc
pop
push
cmp
in
xchg
pop
xchg
xchg
jge
into
loope
xchg
fisttps
leave
andb
leave
leave
mov
jecxz
lods
movsl
int
xor
xor
into
movsb
inc
sub
inc
adc
arpl
out
xchg
adc
shrb
mov
jbe
lcall
shlb
daa
xor
add
push
sub
out
out
pop
xorb
adc
in
pop
enter
aam
cmp
jge
xor
shrb
stos
xchg
andb
inc
push
andb
pusha
fiaddl
push
mov
mov
mov
out
aas
sub
push
jae
inc
aad
add
fcoms
sbb
xchg
mov
fbstp
jmp
out
scas
in
outsb
call
xchg
add
test
jle
pop
pop
lcall
xor
ljmp
xor
int
in
inc
xor
push
mov
push
xor
stos
mov
xor
loopne
cmp
push
and
roll
shll
jno
inc
cmp
xchg
rolb
addr16
push
sbb
inc
inc
aaa
sbbb
add
jecxz
mov
push
mov
aad
xchg
mov
bnd
mov
mov
dec
mov
add
rcr
mov
jecxz
jg
sbb
add
sbb
ja
sbb
shll
sti
mov
jne
shrl
and
arpl
and
out
lret
xchg
sub
adc
xchg
pop
pop
into
pop
and
lods
pop
mov
btc
rcll
test
fldz
xor
aad
test
cmc
sahf
repnz
cmp
ja
icebp
jmp
hlt
push
lret
xor
lret
xchg
cmp
es
bound
sbb
push
sbbl
push
adc
dec
xor
xchg
mov
cmp
push
push
ret
out
or
out
mov
dec
lods
mov
push
xlat
and
mulb
ficoml
xchg
cwtl
inc
jbe
call
daa
hlt
sub
or
fs
mov
ds
mov
mov
push
dec
rcr
jp
push
loopne
inc
ret
es
or
lock
jae
enter
inc
push
and
sub
aas
xchg
push
cs
frstor
std
insl
lea
push
mov
xchg
inc
xor
pop
inc
cmp
jae
test
xchg
ret
iret
loop
push
jmp
out
cmpsl
mov
jp
lods
xchg
cmpsl
int3
outsw
and
jne
mov
scas
push
int
insl
dec
cwtl
xor
inc
das
test
stos
add
insl
js
cmc
das
inc
adc
scas
push
and
fisubrs
inc
pop
inc
sbb
lret
rcl
mov
push
ficomps
out
addb
mov
push
inc
ret
les
sbb
mov
je
fiadds
jp
rcrl
aad
repnz
lret
mov
out
les
push
rorl
popf
lods
push
mov
hlt
sti
mov
dec
and
mov
push
scas
xchg
xchg
or
jno
shl
mov
jne
xchg
in
and
xorl
push
pop
sbb
xchg
mov
movsl
lods
clc
lcall
sub
cmp
stc
out
sbb
fstpl
sarb
and
sub
es
jmp
das
mov
inc
loop
or
pusha
lea
sbb
jb
jo
dec
ret
cmp
bound
mov
in
mov
cwtl
outsl
inc
imul
add
ret
jmp
cmp
out
add
pusha
mov
ds
mov
sub
add
pop
sub
notb
sub
cmp
mov
inc
call
mov
add
aas
dec
jp
jecxz
filds
cmc
jnp
data16
cwtl
dec
cmp
std
pop
clc
fwait
ss
outsl
mov
pop
fiaddl
mov
inc
adc
je
or
das
pop
sbb
bound
test
sub
push
jge
bound
jno
ds
out
push
mov
mov
or
mov
mov
cmp
inc
mul
and
icebp
or
js
ret
and
add
arpl
cmp
das
sbb
test
mov
mov
cmpsl
mov
jb
setle
loop
push
mov
clc
or
lahf
mov
das
cmp
aaa
lcall
add
lds
lea
xchg
pop
out
lods
inc
rcll
sbb
insl
adc
imul
mov
jmp
xchg
adc
out
rcrl
or
pushf
jne,pt
cli
scas
sti
jecxz
shll
xchg
frstor
push
pushf
mov
mov
lods
and
jno
sbb
cli
lods
lret
ret
xor
push
mov
jb
mov
add
lods
in
pop
scas
jp
mov
lahf
test
pop
pop
sti
jns
or
pop
and
mov
sub
dec
ds
xchg
mov
incb
pop
repnz
sub
aam
inc
xchg
cli
ret
gs
xchg
jb
cwtl
mov
sbb
cmp
loopne
call
pop
add
and
std
push
arpl
mov
mov
xchg
push
mov
cmp
pop
int
xor
int3
lahf
jno
popa
loope
dec
aaa
outsb
cli
mov
xor
cmc
sti
jecxz
mov
std
out
fistl
pop
inc
mov
pop
ljmp
pop
sbb
adc
out
ret
popa
ljmp
ja
add
stos
or
cmp
pop
sub
sub
mov
into
lea
inc
insb
adc
pusha
mov
sbb
popa
bound
scas
fs
mov
lds
in
imulb
adc
xchg
cmp
jo
cmp
int
xchg
jg
jno
into
lcall
mov
xchg
outsb
add
enter
int3
mov
inc
loopne
and
jge
inc
pop
sbb
enter
cmp
repz
cwtl
jg
in
lret
inc
rcll
stos
clc
pop
jg
stc
xor
sub
jl
mov
bound
js
jmp
mov
inc
pop
js
xor
mov
push
outsb
lahf
and
mov
aas
pushf
das
cmp
and
add
imul
adc
mov
dec
sub
ss
mov
shrb
ds
aaa
adcb
aam
pop
outsl
movsb
pop
push
mov
sub
dec
adc
ss
sbb
test
stc
test
jp
rorl
inc
ficoml
jae
mov
xchg
pop
inc
pop
sub
inc
neg
sbb
notl
sbb
repz
push
dec
shll
or
andl
jno
mov
nop
leave
add
xchg
imul
fsubl
jne
cld
mov
lahf
push
add
in
cltd
fistl
jne
je
fcmovb
ljmp
addb
inc
mov
push
icebp
push
jg
xchg
aas
and
inc
incl
jmp
cmpsl
cmp
movsl
dec
cwtl
xor
scas
mov
cld
jge
jnp
cwtl
mov
push
xchg
enter
push
mov
lea
jns
enter
mov
fcomp
idivb
pop
or
or
loop
pop
lahf
ja
dec
push
push
add
sbb
mov
pop
xor
mov
ja
xchg
cmp
flds
pusha
dec
in
ret
aas
cmp
jnp
xchg
leave
test
mov
js
adc
push
xorb
or
xchg
rcrb
cmp
mov
or
lcall
mov
test
test
xor
ficoml
jl
pop
xor
push
insl
cmpsb
sbb
push
ljmp
or
lods
repz
add
cmpsb
ret
push
xchg
xchg
loop
jns
xor
mov
and
ds
popf
and
enter
xchg
pop
das
inc
xchg
scas
popf
lods
in
add
and
sub
gs
xchg
inc
or
xlat
popa
lret
movsb
into
aas
fcoml
cmp
nop
adc
flds
lcall
int3
mov
lret
inc
mov
cli
jne
rcrl
shlb
jl
aam
cmp
cmp
rcl
mov
inc
mov
sbb
in
stos
bound
pop
shrl
fcmovnbe
pop
cmp
jbe
push
jle
and
mov
das
std
cmp
pop
aad
lret
pop
inc
sbb
inc
imul
mov
mov
mov
sti
fistpll
sub
movl
adc
shll
sub
data16
xchg
push
mov
loope
outsb
sub
std
xor
lcall
std
lret
pop
faddl
int
xchg
push
jne
mov
push
xchg
insl
imul
fisttpll
jecxz
inc
fsts
dec
ret
ret
xor
sub
sti
scas
fwait
mov
cmc
mov
lods
ds
loope
jl
leave
mov
and
ds
mov
ljmp
add
sub
mov
sub
mov
cmp
or
add
scas
xor
jl
adc
pop
mov
push
stc
pop
jg
lret
fiadds
rolb
shl
sbb
add
jae
mov
outsb
iret
ss
xor
sub
mov
fidivrl
out
mov
adc
or
jl
stos
jle
je
lret
adc
pop
cmpsl
ss
xchg
xchg
ljmp
pop
jae
mov
loope
mov
adc
mov
pop
jp
add
insl
mov
sbb
loop
js
sahf
adc
js
push
mov
push
fdivr
sbbl
pop
and
and
adc
inc
mov
stos
stos
jl
divb
shlb
cmp
push
dec
imul
push
sbb
sub
jns
rep
fwait
scas
dec
clc
out
dec
dec
or
das
cltd
push
sub
cld
lret
dec
imul
clc
mov
jae
insl
sahf
lock
jl
jnp
pop
out
xchg
daa
fldt
adc
test
xchg
imul
inc
push
push
lret
out
adc
inc
push
nop
push
out
inc
jns
cs
mov
les
out
jl
lock
ret
in
sub
lret
push
push
jne
or
test
mov
cmpsl
jle
cmp
loopne
cld
das
dec
pop
dec
rcrb
xchg
adc
push
lahf
mov
dec
sub
pop
sbb
inc
leave
sbb
test
les
inc
rcr
nop
pushf
popa
pop
pop
inc
adc
push
out
es
sti
stos
and
push
das
push
lods
mov
push
sti
mov
and
cmp
dec
dec
mov
push
xor
mov
aad
loop
cmp
and
push
inc
xor
jmp
add
pop
pusha
data16
je
mov
inc
jecxz
fwait
xor
cwtl
jmp
cli
add
ret
xor
fistps
lahf
loop
mov
inc
daa
mov
dec
cld
lods
jg
pop
xchg
mov
jge
xchg
dec
outsl
mov
xchg
mov
mov
test
das
mov
pop
cmpsl
test
xchg
cmp
imul
push
and
popf
int
out
aas
cmp
stos
xlat
mov
lret
mov
pavgw
pop
sahf
sbb
js
xor
add
xor
into
sbb
jle
ljmp
fstl
in
pop
or
shlb
or
mov
mov
jp
cltd
addb
fnstsw
xchg
mov
sbb
and
jmp
addb
inc
inc
add
inc
movsb
xchg
pop
in
cmc
test
xchg
in
aad
inc
cmp
push
sbb
xchg
and
leave
pushf
sbb
imul
scas
stc
std
dec
jb
cs
sub
out
pushf
gs
lret
cmpb
xchg
sub
pop
fistps
icebp
cli
shll
ficomps
mov
lret
xchg
shll
cmp
and
rolb
sub
data16
popa
lret
jmp
repz
inc
cld
xor
loop
dec
ljmp
gs
pop
pusha
mov
mov
enter
addr16
push
rcrl
mov
lods
aad
pop
mov
scas
pop
xor
movsb
pop
loope
mov
pushf
frstor
inc
inc
scas
sarl
popa
ret
add
mov
jb
fcmovnu
fcomps
sub
cmpsl
es
aad
fdivrl
xor
pop
jnp
fs
shrl
sbb
jae
sahf
mov
push
cmp
outsb
out
sub
daa
and
fsts
push
test
inc
sbb
adc
adc
sub
fistpll
add
cmc
jne
test
xchg
or
out
mov
jbe
mov
in
scas
pop
jmp
cmpsb
and
adc
stos
stc
mov
cmp
fdivs
jne
fcoml
sub
addr16
repz
pop
cmp
push
xchg
mov
sbb
jmp
repnz
roll
pop
add
push
fcomip
mov
pop
sbb
pop
xchg
pop
xor
sti
sub
test
add
xor
cmc
jae
test
cli
loop
dec
inc
adc
clc
iret
lods
shl
jno
jo
sbbl
imul
out
adc
adc
mov
push
div
and
je
adc
adc
icebp
hlt
jns
into
mov
sbb
push
adc
lret
mov
pop
xchg
out
icebp
sar
das
adc
rcrb
or
test
xchg
pop
sub
data16
inc
ficomps
div
addr16
negb
fwait
loop
sub
mov
aad
es
mov
xchg
mov
or
mov
push
and
sub
push
data16
lcall
pop
jecxz
cmp
mov
xchg
adc
popf
dec
sub
gs
cli
daa
lret
cli
dec
out
jl
push
or
and
scas
daa
imul
aam
cwtl
mov
sarb
data16
pusha
leave
stos
mov
dec
movsb
sub
push
leave
les
in
mov
mov
cmpsl
lret
push
xchg
test
enter
xchg
popf
xor
popf
outsl
push
xchg
rclb
xchg
jno
push
das
leave
pop
push
repz
iret
jp
add
lret
fiadds
clc
jg
rorb
test
out
aam
daa
imul
sbb
leave
mull
scas
in
push
bound
jne
sbb
iret
inc
dec
xor
mov
ds
lret
movsb
sbb
cmovne
or
jns
in
mov
xchg
mov
pop
jge
lds
pop
cmp
pop
repnz
or
fcmovb
fs
sarb
mov
aaa
sub
and
adc
cmp
xor
pop
add
adc
pop
insb
shrl
xlat
push
cmp
mov
int
dec
pop
pop
bound
in
mov
js
ds
mov
stos
stos
sbbb
push
ss
fnsave
testl
push
cmc
sbb
fsubl
ss
ret
or
mov
pushl
mov
mov
xor
pop
push
xor
inc
jg
adc
js
sub
inc
push
lcall
imul
das
shlb
fisubl
mov
std
adc
das
lock
outsb
in
push
lds
jb
xor
pop
aam
xor
sub
push
outsl
mov
xor
iret
sub
repz
stc
out
sbb
inc
xchg
dec
ljmp
add
popf
fcmovb
lret
shlb
cmp
mov
jge
cltd
sub
addb
push
mov
lret
mov
lods
dec
add
xchg
test
out
inc
or
aam
mov
aas
xchg
mov
es
sti
subl
stos
mov
push
in
scas
jg
adc
fiadds
addr16
loopne
jmp
fwait
dec
or
ret
jnp
sbb
xchg
cmc
sarb
cltd
sbb
jle
cvtdq2ps
subl
movsb
jne
ret
push
pop
add
clts
test
mov
xchg
enter
repz
notl
loop
mov
adc
in
cmp
repnz
lret
pop
pusha
pusha
push
subb
xchg
push
test
out
loopne
add
int
notl
add
test
pushf
ljmp
ljmp
xchg
lock
pop
rcrl
pop
cld
rolb
xchg
jbe
adc
aaa
xchg
or
int3
ja
into
xor
aas
loopne
cmp
push
pop
add
xor
sub
jmp
or
movsl
jnp
dec
sub
aad
cwtl
loopne
xor
or
sbb
fnstsw
push
scas
out
movsb
cld
xor
adc
adc
sub
subb
jns
adc
int3
and
xor
cwtl
push
int
dec
and
xchg
cmpb
sahf
imul
mov
lock
fsub
test
pop
ss
and
lods
sbb
leave
inc
adc
mov
jl
mov
sub
nop/reserved
jbe
adc
scas
loop
test
testl
or
arpl
jnp
movsl
popa
popa
sbb
sti
mov
aas
xchg
xchg
shll
roll
sbb
in
xorl
icebp
inc
jo
data16
repz
shlb
lahf
add
std
leave
stc
stos
int
mull
fisttpll
mov
and
insl
jmp
mov
xor
adc
sbb
pusha
cmp
movsb
dec
pop
xchg
cmc
mov
int3
pusha
push
sbb
pushf
fstps
psubd
loop
imul
xor
add
test
dec
imulb
mov
or
lds
add
popf
movsb
mov
hlt
xchg
je
jo
leave
popf
leave
xchg
rcll
xor
aaa
mov
jns
mov
cmp
insb
rcrl
jnp
or
mov
sub
push
dec
int3
sub
dec
shll
add
popf
fisttpll
push
adc
lds
mov
jl
fists
clc
cmp
jno
int3
inc
and
lods
rorb
inc
nop
fistpl
cld
mov
loope
mov
int3
jbe
dec
pushf
fs
pop
xchg
out
fs
in
js
sti
sub
into
mov
call
or
push
data16
cltd
pop
stos
jnp
xchg
out
gs
roll
sub
popf
jo
jno
mov
lock
mov
add
or
lret
adc
movsl
enter
add
aas
cmp
mov
mov
adc
mov
push
mov
mov
dec
pop
outsl
fdivrs
int3
call
dec
xchg
test
push
out
push
dec
mov
push
nop
ds
dec
push
jle,pn
jge
push
pop
stos
inc
or
rcl
mov
enter
push
xchg
pop
testb
dec
mov
and
mov
or
cltd
and
movsb
js
mull
lret
movups
jg
xor
push
or
adcl
cmp
test
sbb
lcall
lods
mov
cld
movsl
cmp
loop
jge
dec
dec
loope
out
or
out
push
pusha
adc
cmpsb
add
dec
and
scas
int
add
mov
ss
into
movsl
push
fsts
imul
outsl
loope
push
jg
mov
and
addb
jp
inc
pop
and
adc
add
popa
icebp
mov
xor
pop
ret
fimuls
scas
push
fwait
inc
cmpsl
jecxz
mov
xor
and
mov
setl
mov
int3
adc
cmpsb
imul
xor
sub
lahf
shll
mov
stos
mov
lods
faddl
xchg
xorl
cmc
mov
push
sbb
or
mov
cld
inc
dec
fs
daa
mov
xor
push
mov
testl
xchg
inc
jne
push
or
push
in
xchg
push
cmp
outsb
insb
and
pop
jmp
jae
mov
cmp
xchg
adc
icebp
in
adc
cmp
inc
mov
out
mov
fbld
test
pop
jecxz
out
xchg
ds
out
lcall
mov
in
lds
fcmovne
xchg
xor
adc
jmp
movsl
in
std
sbb
jmp
mov
movsb
mov
cmp
mov
xor
cwtl
xchg
or
test
push
add
insb
or
xchg
pop
sbb
bound
shlb
dec
andl
adc
dec
lods
jbe
into
addr16
push
xlat
lock
dec
outsl
imul
fldl
mov
cmc
push
ljmp
dec
rorb
pop
imul
inc
pushf
sub
pop
mov
inc
movsb
fisubrl
or
daa
inc
or
dec
mov
xor
mov
cmpsb
pop
jae
push
or
cmp
les
idiv
xor
divb
leave
add
fbld
jo
movsb
movsb
jae
jno
out
mov
outsb
cmp
lods
jo
pop
jge
lods
jbe
pop
sub
int
shl
jmp
or
pop
mov
ret
stos
mov
pop
loope
lods
pusha
cs
mov
mov
cs
mov
cli
jg
clc
dec
clc
ja
mov
fisubs
xchg
or
or
inc
lret
in
push
stos
addb
in
dec
movsb
pusha
mov
cmp
je
xchg
jb
and
sbb
aam
js
scas
dec
ret
pop
xor
pop
subb
icebp
mov
bound
xlat
shlb
jno
fisttps
daa
adc
add
add
orl
xchg
fbld
fwait
xchg
push
jg
jp
xchg
mov
sahf
mov
jnp
icebp
out
mov
fdivr
pop
xor
jno
ds
mov
fwait
lret
mov
xchg
jl
cmpsb
xchg
add
mov
lahf
cld
repnz
or
adc
mov
sbb
lea
pushf
test
xchg
ss
mov
push
lea
ret
mov
in
add
mov
lret
rorb
outsb
hlt
mov
push
lock
xchg
cmp
jge
push
mov
mov
jns
movb
or
push
loope
mov
adc
inc
out
stos
cmp
inc
pop
insl
sub
adc
cwtl
and
in
pop
lds
movhps
lcall
fs
shl
std
pop
push
bound
xor
loope
lcall
mov
sub
xorb
jge
fwait
push
test
out
pop
daa
dec
jo
mov
int
out
ss
cmp
ljmp
inc
inc
xchg
push
fbstp
adc
inc
iret
dec
mov
push
push
lds
push
and
xor
or
inc
das
push
or
mov
mov
orb
cmp
jp
scas
xor
pop
fwait
dec
pop
inc
std
aaa
push
cmp
jbe
repnz
loopne
xchg
addr16
mov
push
and
or
lret
xchg
imull
cmpsb
test
xor
push
test
pop
jns
adc
mov
loope
sub
imul
stc
stos
daa
fwait
cmp
ljmp
jbe
enter
sbb
imulb
cld
shlb
or
ret
adc
test
int3
add
push
or
fsubr
jg
xor
lcall
adc
ds
test
dec
cmpsb
mul
sub
or
sub
insb
dec
xchg
fdivp
outsl
test
aas
ficomps
mov
pop
popa
lods
sub
mov
lods
lods
sbb
popf
cltd
xchg
aam
cs
and
push
addr16
or
mov
sub
call
jle
int
jo
imul
push
mov
aaa
push
shll
push
or
repnz
fwait
pop
mov
jbe
fidivrl
pop
add
jno
inc
fisttpll
enter
mov
xchg
jp
repnz
jnp
and
push
sbb
lock
fwait
stc
sub
adc
adc
mov
mov
std
in
adc
out
int
mov
adc
cmp
sbb
fildl
mov
incb
ficoml
fcoml
push
out
mov
data16
mov
and
cmp
test
adc
inc
or
test
xchg
cmp
aad
scas
cmp
repnz
dec
cmp
mulb
xchg
xchg
popa
notl
mov
and
nop/reserved
rclb
stos
sub
xor
mov
out
jb
ds
and
jo
inc
daa
inc
aam
call
cmpsb
arpl
pop
push
lods
mov
push
in
notl
jns
xchg
cmp
popa
inc
inc
out
jp
and
int3
xchg
ds
push
push
xor
lds
inc
sub
enter
js
pop
cs
and
lcall
das
add
dec
push
scas
mov
lgs
mov
lea
addl
inc
jae
int
inc
arpl
notb
cld
pop
mov
xor
out
movsl
insb
push
mov
add
popl
jmp
pop
sub
cmp
jne
lea
dec
cmp
not
push
mov
mov
mov
pusha
lods
loop
dec
sbb
cltd
cli
js
rcll
aam
pop
into
mov
add
mov
int
ror
pop
push
int3
jne
adc
add
mov
dec
mov
lcall
dec
addr16
mov
neg
dec
xor
cmpsl
adc
xchg
repnz
lret
pop
ss
cmp
outsl
lds
fisttpl
cwtl
mov
cmp
cmpsb
push
and
dec
mov
insb
jecxz
inc
nop
outsl
out
mov
fidivs
pushl
fimuls
add
jbe
and
in
and
pop
xlat
push
leave
mov
xor
mov
sub
cmc
enter
arpl
in
cs
into
lret
jmp
call
push
leave
xlat
jge
rcr
mov
movsl
xchg
rolb
sahf
jno
mov
shl
out
ret
add
adc
js
call
mov
or
mov
jmp
je
outsl
out
out
mov
add
arpl
icebp
leave
pop
or
hlt
inc
dec
adc
out
stos
shll
faddl
mov
cmp
push
pop
lods
mov
jg
fwait
loopne
xchg
stos
int3
adc
dec
popf
or
lcall
pushf
xchg
cwtl
sub
ret
pop
mov
cmp
mov
mov
lds
jge
negb
mov
or
rorb
or
cltd
jmp
cmp
mov
mov
mov
orb
pop
int
inc
test
frstor
adc
jmp
xor
into
inc
test
adc
xchg
jp
sbb
enter
rolb
in
xchg
or
add
in
aad
xlat
mov
or
add
fldl
pop
movsb
bound
pop
lock
icebp
mov
cmp
sub
lcall
push
pop
and
addl
cmc
mov
cmpb
out
arpl
or
jle
stos
dec
loopne
and
mov
mov
es
cmpsl
and
xchg
fidivl
sub
jmp
cmp
out
ret
mov
ret
rorl
popa
adcl
mov
test
and
addr16
dec
movsb
mov
lcall
jge
movsl
fnstenv
stos
add
incl
pop
sub
nop
ret
add
addl
sbb
cli
pop
adc
xchg
dec
cmovo
les
jbe
lahf
push
jg
es
sbb
sti
mov
pop
cmp
test
mov
adc
xchg
xchg
mov
mov
sbb
icebp
mov
sbb
sub
lock
push
aas
sub
mov
dec
fcmovnbe
and
adc
xor
mov
jmp
aam
call
lcall
mov
jae
mov
adc
mov
mov
jae
loope
sub
out
inc
ds
sarb
add
into
dec
xchg
into
and
mov
adc
das
popl
sahf
int3
cmp
inc
das
test
push
add
fs
jo
fisubrs
int
loope
je
sub
and
xchg
xor
sbb
sbb
pop
into
xchg
icebp
mov
mov
decl
or
push
mov
lahf
xchg
xor
daa
add
xor
dec
add
mov
scas
clc
dec
jle
and
mov
sbb
adc
sbb
or
mov
and
repz
into
cmc
fists
adc
inc
jne
xchg
mov
andl
mov
cmp
adc
adc
lock
xor
xchg
cmp
or
ffree
adc
repz
shll
scas
lahf
lret
loopne
ds
dec
mov
pop
daa
inc
sub
push
test
cmp
add
inc
add
and
dec
fdivs
out
or
call
and
sbbb
cmp
push
mov
sbb
push
aaa
mov
fnstcw
xor
insb
mov
lock
push
daa
adc
mov
and
shrb
repnz
scas
lcall
xchg
mov
jo
xor
sbb
pop
unpckhps
or
mov
jl
imul
repnz
jne
add
jne
push
add
mull
imul
push
movsl
pop
mov
cwtl
leave
xchg
cmp
pusha
movsl
dec
roll
les
cmp
or
cmc
sbb
stos
insl
jae
jbe
jns
lcall
adc
sbb
pusha
sbb
ss
ffree
negl
add
dec
and
push
xchg
and
sub
jecxz
add
add
mov
ret
jp
ljmp
pop
mov
mov
jb
cli
dec
jle
pop
jmp
mov
cltd
out
adc
fdivrs
jae
orl
mov
dec
jb
dec
gs
sbb
fnstcw
test
xchg
inc
mov
out
adc
or
add
ljmp
jmp
imul
sbb
int3
lods
test
rclb
xchg
lea
imul
mov
fadds
mov
add
push
lea
xor
out
xchg
aad
xorl
dec
cmpsl
xchg
xchg
mov
sarl
sarb
int3
rol
mov
aam
into
scas
push
std
sbb
fldt
inc
cmp
pushl
adc
dec
push
pop
mov
lea
xor
loop
pop
push
adc
or
call
fistl
or
int3
or
stos
loopne
nop
sub
loope
inc
dec
mov
xor
aaa
pushf
popf
rcl
mov
push
push
pop
jecxz
push
mov
outsl
fwait
sbb
aad
iret
sbb
jmp
pop
mul
ds
mov
scas
pop
outsl
jo
test
mov
or
aam
rorb
push
or
and
lds
in
cmp
mov
call
or
popf
out
ficoml
add
jmp
push
xchg
mov
xor
lea
xchg
cmpsl
loop
popf
or
jbe
imul
jnp
pop
xchg
jbe
cwtl
loop
lret
aas
push
in
cltd
lods
adc
pop
sub
out
out
dec
xor
xor
adc
mov
pop
add
sbb
pusha
addl
cli
mov
push
js
and
inc
mov
fucom
dec
inc
adc
mov
add
jnp
xor
jmp
adc
push
lahf
add
jns
icebp
out
icebp
inc
test
hlt
ret
dec
mov
cmpsb
in
loopne
mov
adcl
mov
ret
mov
fxch
fimuls
mov
idiv
xor
fwait
iret
popa
ja
and
orb
sbb
pop
xchg
mov
add
ret
push
mov
sbb
movsl
aas
in
pop
lds
shrl
inc
sub
fninit
pop
pusha
pop
lea
test
sti
lret
pop
xchg
std
pop
jae
push
lea
mov
add
push
cwtl
mov
jbe
fstpl
cmp
xorb
ss
or
push
sbb
test
push
insb
mov
shll
leave
mov
dec
sub
mov
dec
loopne
inc
jge
fiadds
stc
inc
dec
cli
pop
cmpsl
testb
xchg
xchg
pop
xchg
sti
mov
push
adc
es
outsl
jp
cwtl
scas
mov
shll
jae
adc
scas
add
push
pop
mov
into
mov
pop
jb
jp
and
orb
sbb
sub
int3
add
cmpl
push
ljmp
cmp
fcmovnu
loope
sti
pop
xchg
loop
loopne
movsb
xchg
push
mov
in
int3
addr16
outsl
imul
arpl
orb
mov
mov
xor
fisubs
sub
cmp
mov
cmc
cmpsb
jae
adc
fbstp
cmpsl
mov
gs
sbb
inc
fs
cltd
sub
cmp
sub
cmp
jo
lcall
push
sub
and
fxch
mov
dec
in
pop
std
andl
rorb
sets
loopne
movsb
insl
mov
popa
lods
add
nop
pop
push
outsl
and
mov
jge
in
jnp
push
test
sbb
imul
aad
insb
adc
adc
popa
test
in
and
mov
xchg
bound
add
jecxz
not
push
mov
fisttps
lds
jo
enter
cmp
pusha
rcrl
clc
mov
jae
dec
adc
frstpm(287
inc
mov
xchg
hlt
cmp
cltd
cmp
inc
cmpsl
insb
cld
mov
jge
push
xlat
cmc
cmpsb
inc
xchg
xchg
das
adc
in
ret
addr16
mov
outsb
leave
add
loopne
xlat
and
imul
hlt
add
sti
push
adc
dec
pusha
xchg
sbb
int3
fiadds
fsubl
mov
jns
icebp
jns
fsts
es
in
rorl
roll
mov
push
lahf
xor
test
mov
jmp
cmc
das
bound
add
xchg
pop
dec
mov
pushf
mov
pop
ljmp
sti
add
xor
je
out
cmp
jl
jge
sti
loop
mov
push
mov
mov
adc
data16
ja
pop
adc
cmp
sbb
call
mov
mov
push
scas
or
mov
mov
out
jl
mov
int
cmpsl
sub
sbb
js
hlt
cld
inc
pop
ror
mov
jne
push
out
push
loopne
and
out
adc
decl
dec
int
push
rclb
mov
shl
mov
sahf
push
mov
dec
inc
or
add
push
nop
mov
inc
lods
mov
adc
or
out
fwait
cs
lods
sub
mov
sti
jl
xchg
orl
add
loopne
fcoml
xchg
pop
mov
and
outsl
jle
sbb
mov
loopne
cld
add
mov
ss
push
mov
aam
fiadds
add
aam
jne
les
pop
and
jecxz
repnz
call
sub
loop
loope
popa
push
add
test
lret
cs
cwtl
repnz
sub
xor
icebp
call
add
push
scas
inc
add
paddsb
adc
lods
and
pop
jmp
inc
pop
fdivs
xchg
xlat
jo
mov
lret
mov
xor
and
nop
roll
sub
mov
push
mov
cli
loope
fiadds
repz
xlat
testb
arpl
lock
or
iret
in
xchg
ds
loop
mov
add
fdivs
leave
fcmovnbe
rolb
pop
out
icebp
scas
jecxz
fadds
mov
xchg
xchg
pop
xchg
aas
dec
cmc
call
stos
xchg
ljmp
inc
fsubs
mov
inc
xchg
imul
leave
sbb
mov
xor
xchg
bswap
mov
repz
xor
pushf
bound
ss
dec
insb
adc
out
call
negb
or
ret
pop
das
mov
push
pop
xchg
push
jmp
mov
cwtl
sarl
jle
sub
gs
lret
add
push
inc
scas
testb
xchg
push
filds
fimull
xlat
lods
test
xchg
in
jecxz
mov
pop
gs
fwait
cmp
adcb
xchg
orl
insl
add
es
mov
dec
imul
mov
inc
mov
xchg
and
lahf
ljmp
inc
mov
xorl
adc
or
dec
xchg
lock
mov
stos
mov
or
dec
ss
in
jne
adcl
idiv
jae
sub
mov
js
sbb
mov
pop
adc
add
sub
push
data16
xor
das
ret
sbb
inc
scas
test
testb
test
adc
fbstp
add
addb
add
cmp
jns
test
xchg
cmc
mov
scas
inc
add
loop
mov
in
shlb
ljmp
mov
sbb
sti
jbe
data16
pop
mov
sub
sbb
in
add
jae
jae
in
mov
cltd
or
loopne
mov
sbb
jo
or
aam
pop
cmc
and
mov
cld
mov
mov
mov
mov
xor
imul
xor
push
sbb
test
sub
aam
outsl
adc
pop
scas
in
cmp
cmc
dec
int
add
push
loopne
fdivl
and
and
mov
cli
jnp
lods
das
push
sbb
cli
jns
or
outsb
les
lret
jno
inc
cs
stos
sarb
and
pop
push
cs
lds
jnp
sub
outsb
ret
cmc
ficoml
push
jbe
icebp
pop
push
loopne
sbb
pop
scas
add
mov
enter
and
fdivrl
mov
sub
mov
or
sub
and
inc
sbb
sbb
pushf
fldenv
jp
aam
inc
in
shlb
fldl
pop
dec
pop
sub
push
test
adc
mov
adc
rorb
cmpl
mov
aaa
loopne
dec
mov
add
adc
push
push
push
mov
clc
rcll
idiv
imul
push
mov
and
and
ljmp
mov
push
sbb
mov
je
sub
push
inc
sub
jno
out
scas
iret
sbb
sahf
push
cmp
sub
xor
je
push
add
dec
daa
or
xor
mov
lods
loopne,pn
ret
lods
lret
add
shrb
mov
mov
mov
inc
lods
mov
psrld
cltd
cltd
jae
cmp
xor
xchg
out
cmp
cltd
dec
nop
jg
loop
add
push
in
int3
sub
lods
std
ficomps
bound
push
mov
into
mov
mov
lds
int3
and
pop
pop
stos
pushf
inc
fwait
xchg
ja
sbb
jg
mov
pusha
mov
jo
out
lahf
loope
mov
inc
pop
push
clc
in
jno,pt
pop
jne
mov
cmpsb
outsb
ja
cwtl
dec
sti
mov
cmp
les
and
incl
xchg
push
rcrl
mov
lret
mov
scas
and
loopne
cltd
ja
cli
or
test
lcall
icebp
ret
jb
in
dec
or
lods
pop
outsl
push
mov
mov
jl
scas
sub
es
cmp
pop
mov
pushf
int
cli
mov
mov
pusha
in
in
ret
jno
movsl
cli
inc
sahf
mov
stc
or
shr
xor
scas
inc
sub
mov
fdivp
outsb
or
pop
iret
inc
aas
je
loopne
jae
xor
shll
lock
push
mov
add
pop
xor
and
cmp
fbld
sbb
shlb
and
lcall
adc
aas
cmp
xlat
and
in
ret
sarl
nop
ret
jo
dec
adc
mov
mov
add
dec
mov
addl
xor
add
adc
dec
mov
sub
xchg
test
bound
test
stos
jnp
int
xchg
add
jb
in
stos
inc
sbb
sbb
loop
scas
scas
pop
add
jmp
mov
lods
stos
test
aam
push
jmp
out
jge
popf
shll
jmp
sbbl
pusha
aam
xchg
add
shrl
jge
jecxz
jns
popf
or
in
mov
jns
or
inc
cld
loop
cwtl
adc
out
pop
push
inc
insl
mov
insl
negb
gs
push
xchg
in
jmp
subl
call
cmp
mov
mov
or
or
cltd
jo
into
and
add
jg
cmp
fs
faddl
movsb
adc
inc
icebp
inc
pop
cmp
cltd
into
dec
push
dec
and
mov
xlat
add
push
add
cmc
das
pop
ret
insb
pop
movq
pop
jbe
cmp
aaa
add
jbe
mov
repnz
aad
sbb
mov
iret
push
div
fiadds
scas
and
or
jg
call
daa
loopne,pn
das
ss
enter
dec
mov
cmp
mov
gs
mull
jno
cltd
mov
pusha
inc
mov
cmp
ffreep
xchg
mov
push
xor
mov
mov
sahf
lahf
push
sti
dec
lea
test
sbbl
inc
mov
mov
inc
insl
iret
mov
mov
xchg
imul
enter
lret
mov
fsubrs
int3
les
push
enter
test
jne
icebp
and
loope
jae
or
test
xlat
xchg
xchg
aad
ror
cmpsb
fs
xchg
add
add
adcb
ret
movsl
ret
jbe
sahf
fisubl
rolb
insl
ret
loope
push
ljmp
sub
int3
add
lcall
test
push
negb
adc
repnz
lock
or
sub
jge
movsl
jg
out
mov
ja
lret
push
xor
repz
je
push
stos
xor
add
fcom
mov
push
push
cli
or
push
adc
mov
sub
mov
mov
and
shlb
or
mull
sbb
pusha
jne
add
mov
mov
sbb
ret
dec
imul
dec
cmc
fildll
or
push
sbb
add
cltd
out
pop
cs
imull
popf
pushf
inc
push
inc
xchg
and
in
lods
sub
and
pusha
mov
and
push
sbb
fnstsw
pop
mov
aam
popf
jecxz
pop
fbld
mov
push
leave
adc
in
and
inc
rolb
lcall
gs
jl
call
jne,pt
push
imul
faddp
fistps
lret
jp
sbb
testb
jo
pop
out
push
or
pushf
dec
gs
push
cmp
popa
jmp
dec
mov
negb
cmc
and
adc
push
cmp
in
orl
xchg
jnp
mov
xor
add
dec
in
bound
mov
add
cwtl
es
fnstsw
decb
shrl
popf
pop
add
test
arpl
adc
outsl
aad
nop
les
ret
clc
arpl
push
pusha
pop
xchg
xchg
jmp
das
inc
popf
or
mov
cmp
pop
or
pop
pop
rorl
sarl
fisubrs
lods
and
mov
mov
push
in
ret
dec
mov
inc
and
jo
aas
imul
mov
or
jmp
push
adc
mulb
fistpll
adc
sub
dec
sub
push
in
xchg
mov
jae
mov
cmc
arpl
in
inc
loope
pop
das
in
mov
rcl
mov
jle
push
mov
pop
adc
or
push
or
es
cmpsl
jnp
pop
insb
das
xlat
jg
stc
adc
sub
movsb
mov
fs
rclb
xor
adc
andl
test
test
sti
lahf
nopl
add
push
xchg
and
inc
sbb
xor
shll
in
pop
dec
xchg
enter
or
or
mov
dec
movsl
pop
fidivl
xor
mov
push
pop
js
imul
push
xchg
cmp
xor
shlb
fbld
sub
mov
jns
mov
sqrtps
and
hlt
test
aad
sub
push
orb
out
adc
push
and
or
pop
sub
add
bound
iret
scas
lea
jmp
push
mov
jne
jno
rcll
addl
cli
sbb
push
loopne
popf
into
in
mov
pop
cwtl
push
andb
push
into
rcl
mov
pop
push
add
popf
adc
les
fcoms
imul
out
lods
es
pop
ljmp
mov
sbb
ffree
icebp
stc
jo
popa
fldcw
sub
adc
add
ss
add
cmpsb
and
loopne
dec
mov
xchg
rorl
pop
mov
out
cmp
mov
cwtl
cltd
add
ljmp
xchg
js
pushf
mov
stos
lea
or
ds
and
repnz
sarl
loopne
popf
shlb
jmp
jbe
idivb
add
pop
jp
push
dec
test
in
leave
lods
mov
xchg
or
push
ficomps
nop
jnp
sub
push
filds
cli
mov
stos
sub
dec
jns
mov
and
push
pop
hlt
pusha
andl
outsl
rcrl
mov
dec
repnz
cmpsl
sub
pop
xchg
mov
xor
cmc
into
push
dec
dec
pop
push
test
add
pop
and
or
mov
ror
dec
stc
fiadds
les
cmp
pop
mov
ss
mov
sub
jmp
add
mov
cmpsl
cli
mov
jbe
in
sub
sar
add
pop
or
lea
xchg
jecxz
insb
sbb
mov
lods
and
xlat
jmp
cmpsb
mov
lods
test
in
xchg
add
sbb
sub
sbb
xor
xor
pop
mov
add
xor
test
int3
inc
aam
xor
cmpsb
ja
xor
ret
sbb
sub
pop
fs
xchg
cld
wrmsr
inc
sub
cmp
stos
push
cmp
rcr
jg
xor
cmp
insb
push
orl
xchg
xchg
sti
lods
aad
push
and
movsb
add
stos
cmpsb
sbb
jo
mov
pop
dec
imul
subb
xor
das
movsl
loope
lods
fldcw
pop
xchg
cmp
lcall
outsb
xor
jns
jmp
fwait
lock
sub
mov
mov
inc
jnp
in
xchg
add
lret
inc
adc
mov
sbb
popf
mov
cmp
inc
gs
fs
cli
fnsave
sub
das
ret
es
push
dec
and
mov
repnz
push
or
push
sub
popf
cmp
shrl
sbbb
inc
fldt
lds
mov
test
xor
cld
cmc
inc
dec
dec
rcl
adc
sarb
jno
scas
das
jmp
cmp
add
inc
cmpsb
cmp
loopne
testl
decl
stc
add
mov
pop
pop
mov
xor
repz
mov
xorl
test
add
pop
mov
ret
loopne
scas
popl
dec
mov
push
adc
mov
jmp
out
and
inc
jp
movsl
dec
out
mov
and
mov
es
jns
jmp
dec
repnz
mov
pop
jecxz
les
adc
dec
pop
jmp
fstpt
arpl
xchg
jl
push
push
fistl
loop
cs
icebp
jno
sub
mov
fdivrl
ds
cmp
loop
sbb
jp
out
fiadds
mov
ljmp
cld
pushl
lcall
out
imul
std
mov
xor
gs
push
jmp
inc
mov
mov
shlb
lea
jp
lock
fbld
leave
and
test
je
daa
ret
jmp
add
loop
push
jno
pop
and
stos
ret
jmp
or
aaa
cmp
mov
fistps
cmp
je
addr16
mov
popf
dec
mov
sahf
or
push
mov
sbb
xchg
pop
xchg
repnz
fldenv
mov
sahf
add
jle
enter
pop
in
sub
jo
loope
lds
mull
xchg
xchg
inc
testl
leave
dec
clc
and
int3
inc
loope
cmp
inc
shr
into
in
out
xor
adc
push
popa
imul
and
jl
jne
dec
push
mov
cs
jmp
ret
aaa
xchg
loope
rcrb
or
in
pop
fidivrs
sbb
dec
xchg
cmp
xchg
sbb
ret
cs
stos
xchg
xchg
adc
xor
das
mov
sub
repnz
in
jae
mov
xchg
cmp
xchg
xor
and
pusha
xchg
push
stos
cmp
in
jmp
pop
pop
jb
pop
call
bound
mov
sub
mov
popl
lret
je
js
mov
ss
sub
das
xor
addr16
fbld
repnz
lahf
xorb
enter
rorb
ljmp
sbb
call
lahf
pop
xchg
add
push
imull
mov
js
mov
imul
les
sub
sbb
loop
daa
xchg
mov
out
push
mov
fldt
enter
stc
bound
sbb
mov
pusha
adc
xor
cmpsl
ljmp
push
lock
inc
xor
rorb
pop
push
lea
dec
xor
jecxz
int
flds
mov
push
xchg
mov
scas
shlb
xor
aam
inc
add
outsb
je
push
push
mov
push
jo
insb
popa
icebp
xchg
test
into
xor
mov
or
inc
jo
xchg
mov
and
ljmp
xor
jmp
icebp
push
ljmp
cmp
lret
gs
push
lahf
iret
jecxz
ds
sbb
push
loope
fmulp
inc
jo
lods
sub
ret
jae
push
cmp
mov
dec
out
aad
mov
jecxz
les
fs
xor
xchg
push
inc
mov
nop
aas
jb
das
jno
fstp
imul
leave
pushf
cwtl
xchg
movsb
inc
cmp
test
mov
sbb
dec
mov
jno
pop
pushf
les
fistpl
pushf
lods
js
adc
sub
into
fcoml
xchg
into
push
rclb
mov
dec
and
pushf
adc
mov
das
int
into
add
das
push
daa
outsb
cld
fadd
push
push
push
repnz
ret
adc
aas
scas
xor
push
xchg
xor
lahf
mov
xchg
pop
inc
aas
jecxz
dec
xor
or
lret
enter
mov
mov
imul
les
cmp
scas
ds
push
inc
nop
stc
hlt
call
adc
add
in
push
mov
filds
rclb
xchg
cmp
push
gs
pop
mov
inc
arpl
mov
add
test
mov
js
ja
pop
repz
sbb
shrl
imul
in
aam
in
xchg
addb
popa
inc
idivl
pop
out
pop
sub
mov
aam
xor
in
in
xchg
lcall
ljmp
jnp
mov
shll
cmc
nop
mov
das
dec
jb
sbb
lock
add
pusha
jl
andl
xor
push
int3
sub
xchg
sub
arpl
xchg
test
add
xchg
add
jg
insl
test
scas
cmc
inc
shlb
andb
es
dec
add
mov
and
pop
lret
stc
sub
not
mov
gs
cmpsb
mov
xchg
fst
mov
pop
jmp
push
add
fiaddl
push
aad
cmp
sub
and
js
jge
rolb
inc
mov
sbb
stos
pop
mov
mov
js
mov
insb
xchg
jp
stos
pop
loope
adc
out
ds
rol
fcompl
sarl
sti
inc
inc
xorl
cmp
popf
lret
scas
cmp
jno
repz
mov
cmp
add
inc
pop
mov
lock
jo
inc
scas
shl
cmp
cmc
adc
push
std
adc
pop
fdivrl
pop
mov
ret
hlt
test
adc
jno
repnz
and
scas
sub
xchg
push
nop
push
fnsave
sysexit
inc
imul
pop
test
mov
cltd
shrl
mov
dec
mov
subb
inc
aad
adc
adc
neg
es
add
mov
out
pop
test
outsl
push
clc
mov
push
sub
bound
fildl
loop
adc
aad
xor
test
and
push
mov
ja
ss
dec
push
gs
mov
imull
mov
insl
sbb
movsb
and
in
add
stc
xor
sbb
jo
mov
ret
fs
aam
hlt
pop
aas
ljmp
sti
xor
aaa
xchg
xchg
icebp
aad
add
stos
imul
pop
xchg
stos
xor
sbb
push
jge
mov
pop
inc
pop
inc
push
dec
movsb
xchg
sqrtps
mov
gs
shrl
adc
scas
push
sub
scas
bnd
int3
jp
dec
movsl
sub
dec
pushf
jl
pop
dec
icebp
adcb
fstl
fildl
xor
movsl
addb
and
fwait
mov
add
in
mov
and
test
aam
jno
ret
fsubrs
jns
and
data16
jecxz
lcall
call
jne
insb
push
repnz
sbb
mov
pop
or
lods
adc
mov
das
adc
in
shlb
and
adc
xor
dec
push
dec
cmpsb
hlt
loop
or
mov
cmp
mov
in
movsb
pop
test
xor
push
out
sti
cmpsl
test
data16
push
inc
loopne
js
test
jae
inc
push
cmp
or
add
repz
lahf
shll
ja
and
push
sub
imul
mov
nop
fwait
insb
or
movsl
inc
repz
adc
sub
repnz
adc
repz
adc
sbb
int
cs
push
cmp
pop
aam
and
mov
inc
mov
and
cmp
sbb
mov
sti
dec
sub
nop
inc
and
lcall
and
xor
jl
mov
mov
pop
dec
data16
mov
dec
fstpl
nop
jle
in
push
push
or
data16
iret
fadd
repnz
sarl
out
jge
xor
fst
loope
dec
lock
mov
fldenv
xchg
cli
cmp
mov
gs
and
aad
outsl
pop
aas
insl
jne
or
mov
xor
mov
imul
lea
xor
or
adc
outsl
repz
jbe
loope
mov
sub
pop
dec
jne
in
inc
ja
pop
mov
sub
hlt
xchg
jmp
sbb
shlb
jno
fdivs
gs
rcll
lock
sub
jecxz
es
ss
in
in
jg
scas
rcrb
arpl
fidivs
mov
cld
jns
and
add
pop
divb
and
adc
movd
ja
xor
mov
cmc
xor
mov
es
call
inc
cmpsl
jno
mov
insl
xor
jl
int
dec
push
pop
sbb
fists
test
pop
mov
dec
push
decb
rcll
xchg
sub
imulb
sub
outsb
jge
xlat
out
sub
int3
push
add
and
mov
pop
gs
adc
inc
adc
mov
push
loop
xor
jne
jge
pop
push
mov
in
stc
sarb
aas
jne
mov
xchg
push
pop
jp
inc
mov
stos
mov
push
aas
loope
sbb
punpckhwd
fistl
mov
mov
mov
push
jb
movsl
push
mov
and
enter
cmpsb
fsubs
sub
lea
mov
les
mov
out
aad
cmpsb
mov
mov
mov
rclb
push
cmp
dec
mov
test
pop
sub
or
aaa
jae
lds
dec
push
clc
inc
xor
pop
ret
ja
pushf
inc
jne
push
je
xor
fcmovbe
push
inc
fcomps
or
xor
in
mov
aaa
ja
lcall
das
xor
gs
popf
adc
test
push
lods
stc
jle
sub
mov
lds
test
in
in
add
lret
rorb
add
jmp
aaa
or
outsb
aaa
mov
out
xor
push
lock
dec
mov
xor
pushf
xchg
lods
into
ror
xor
fs
sahf
jb
xchg
dec
and
and
insb
pop
jbe
mov
pusha
in
sub
loopne
jle
xchg
jno
add
mov
jmp
xor
imul
jle
inc
std
push
dec
mov
push
cmp
popf
insb
or
inc
out
and
adcl
es
jge
nop
addl
xchg
mov
xchg
sbbb
insb
in
repnz
dec
push
push
mov
mov
dec
stos
int
rorb
pushf
inc
ror
push
mov
mov
cli
out
cld
loope
sub
das
inc
mov
shll
dec
jmp
jbe
scas
dec
adc
mov
mov
mov
aas
rdpmc
mov
and
mov
ja
outsl
ja
mov
jbe
mov
jp
nop
sub
in
jmp
jg
andl
push
fdivr
ret
lcall
adc
push
sbb
in
push
jl
cmpsl
pop
mov
iret
ret
sub
or
mov
or
in
and
int3
xchg
xor
dec
adc
fwait
loopnew
cmc
mov
inc
into
push
dec
mov
in
testb
loop
mov
insl
mov
call
repnz
inc
pop
ret
dec
ds
aas
and
dec
ja
out
jae
divl
or
xor
imul
pop
mov
adcl
xor
ret
jg
xchg
mov
push
sub
xchg
out
fcoms
dec
inc
dec
rcrb
mov
dec
ret
mov
cmp
aam
and
repz
mov
push
shlb
filds
pop
mov
es
push
aad
add
jne
lahf
pushf
mov
into
ja
adc
add
repnz
mov
cmp
xor
test
jge
iret
push
fs
lea
inc
mov
push
aas
mov
div
mov
sti
addr16
ret
mov
dec
jl
popa
push
dec
cltd
fnstsw
add
daa
flds
fdivrl
hlt
jle
push
stos
inc
mov
mov
jp
jb
mov
sub
int
sub
addl
xor
xchg
rcr
cmp
and
ror
mov
in
aas
mov
add
cmp
int
sub
in
popl
push
jg
sub
add
lret
mov
xchg
addl
shrb
sar
push
or
sub
sbb
test
or
in
cmp
cltd
nop
clc
and
xor
scas
in
mov
lret
stc
lock
inc
mov
loope
es
negl
mov
out
inc
mov
adc
push
jge
rclb
loope
stc
or
out
add
pusha
test
rclb
xchg
in
sub
sub
xchg
jb
cmp
in
insl
stc
in
mov
adc
idivl
icebp
shll
inc
shrl
and
enter
cmp
mov
inc
push
mov
lea
in
jb
push
pop
popf
jge
decl
lds
and
lea
jge
push
sub
jg
dec
xlat
cmp
xchg
outsb
add
and
xchg
pop
sbb
fists
test
adcb
inc
roll
lods
or
xor
dec
cmp
mov
mov
fdiv
inc
jne
sbb
out
xchg
sub
aam
mov
cmpsl
mov
xor
sbb
in
rorl
std
dec
test
orl
test
add
push
je
push
out
push
mov
mov
mov
xor
test
stos
shll
movsl
orb
fidivrl
lahf
cmpsl
push
jns
mov
ds
push
ja
cmpsb
call
ljmp
fsts
dec
adc
lcall
or
clc
aaa
mov
insb
mov
stos
loopne
dec
pushf
test
pop
mov
rcll
loopne
cmp
bound
addr16
cltd
jnp
fisttpl
sbb
and
xlat
push
xchg
fadds
nop
xchg
mov
adc
les
dec
imulb
ljmp
outsb
lcall
cmc
lcall
inc
and
mov
and
in
cmp
pusha
in
xchg
push
add
adc
lea
and
loopne
add
push
xor
cli
xchg
fs
ret
cwtl
push
addb
or
mov
ja
push
lock
xor
lahf
and
xor
mov
inc
loopne
pop
inc
mov
add
fwait
gs
lcall
test
ljmp
jno
xchg
sub
loopne
push
xchg
add
mov
jmp
inc
movsb
xorl
mov
mov
mov
shlb
adc
sbb
je
stos
push
divl
and
add
test
dec
adc
add
pop
arpl
pop
cmp
mov
not
or
hlt
mov
aaa
push
xlat
fsubrs
jae
jne
addr16
call
outsb
sahf
jns
and
pop
pop
insb
mov
mov
sub
jbe
enter
fbstp
jo
dec
inc
mov
out
mov
loope
xchg
and
mov
cltd
xchg
add
mov
jg
cmp
inc
inc
lcall
xchg
je
jbe
mov
imul
gs
sbb
data16
ljmp
xchg
ret
or
outsb
add
and
push
sub
aad
xorb
insl
aaa
pop
cmp
sub
iret
shrb
fdivs
pusha
add
mov
das
cmp
cmpsl
lock
in
mov
cmc
aam
xlat
loopne,pn
jns
jns
and
push
jb
aam
out
test
popf
scas
jmp
stc
cmp
int3
push
inc
sarl
xchg
sbb
std
test
shlb
and
mov
int
xorl
xor
push
shr
rcr
jns
gs
rcrb
push
mov
std
int
pop
and
sub
sar
out
arpl
add
sahf
cmp
add
shrl
and
cwtl
mov
adc
jbe
xchg
xor
bound
test
cmp
xor
stos
aas
inc
inc
lock
fsts
subb
fwait
mov
ret
nop
cs
popa
jge
cmpsl
sub
cmp
inc
xor
arpl
sub
ret
fwait
mov
ret
ret
inc
jmp
cmpsl
fistpl
lahf
mov
inc
jbe
mov
add
and
and
inc
cmp
inc
push
sbb
pushf
ljmp
loopne
mov
idiv
icebp
mov
lret
out
or
psubsw
lret
arpl
adc
push
loopne
mov
jle
add
and
nop
out
and
iret
arpl
pop
xchg
jmp
popa
sahf
stos
es
xorl
push
ret
jns
out
in
lds
inc
xor
cltd
sbb
and
push
dec
or
pop
in
push
dec
xor
lret
xor
mov
cmpsb
insl
daa
les
dec
cmp
in
imul
lods
loopne
cmp
hlt
shll
mov
loopne
inc
cld
xor
jge
fists
adc
sbb
rcrl
icebp
fnsave
and
inc
divl
inc
popf
cmpsl
test
sub
scas
sahf
mov
pusha
cmc
enter
jb
rcll
and
mov
push
push
push
or
sbb
gs
fistpl
neg
dec
lock
js
or
ret
mov
jge
cmc
cmp
cmpsl
push
jl
ds
or
jle
mov
xchg
push
cld
add
mov
xor
mov
mov
mov
pop
jnp
fisubl
outsl
shr
push
mov
pop
lock
add
pushf
aad
fnstcw
shlb
shr
imul
adc
push
inc
inc
jge
rcll
sbb
push
sbb
or
sub
jmp
dec
dec
outsl
lret
sub
shlb
inc
sub
ret
push
mov
and
jo
push
lock
pop
mov
dec
push
cli
mov
fnstcw
mov
jb
pushf
mov
in
inc
movsb
adc
cmp
xlat
inc
jnp
or
pop
mov
inc
adc
inc
push
lret
xlat
loope
std
sbb
or
jg
xchg
add
pop
pop
xor
lods
test
int
testb
push
push
cmp
clc
test
xlat
cs
jp
loopne
push
or
lret
iret
shl
mov
xchg
add
push
mov
pop
enter
sub
inc
rcll
sbb
adc
cs
inc
pop
pop
out
dec
and
lcall
cltd
lahf
lcall
xchg
out
stos
in
imul
push
jns
mov
or
out
movl
push
dec
xchg
xor
and
sbb
imul
dec
sbb
leave
pop
lret
mov
test
jle
pop
call
repnz
iret
jg
mov
repnz
dec
xchg
mov
test
lods
jne
and
stc
call
mov
dec
cmc
stc
ds
out
and
mov
bnd
call
scas
scas
loope
mov
and
and
test
mov
leave
fisubs
out
std
sub
gs
jp,pt
adc
mov
int3
int
sbb
and
sbb
adc
pop
sti
test
jge
mov
jbe
dec
addl
aad
and
mov
cmp
add
and
js
sbb
sub
jp,pt
cltd
pop
add
cmpsb
xlat
dec
jp
loope
fistpl
mov
pushf
xor
inc
mov
lock
push
ret
mov
ret
int
inc
mov
push
nop
pusha
out
cmp
xchg
rclb
pushf
mov
adc
leave
fs
iret
sbb
xor
fdivp
test
imul
cmp
fiadds
pop
cmp
xchg
xor
or
pop
cmp
sahf
pop
call
xchg
mov
cwtl
sub
andl
popa
pop
hlt
leave
or
movsb
aaa
jno
in
push
pop
mov
cmp
ret
sbb
adc
sbb
inc
out
mov
xchg
pop
sub
sub
mov
fcomps
in
adc
dec
sti
push
test
divb
mov
inc
fsts
shlb
push
lahf
push
stc
pop
jge
andl
inc
dec
inc
sbb
pop
rcrl
pop
movb
pusha
jbe
xor
mov
mov
cmpsl
xor
add
pop
jle
int
mov
pop
pushf
dec
inc
jne
push
fcompl
push
popa
pusha
not
mov
and
push
pop
inc
dec
fnsave
insb
outsl
jmp
jp
out
lods
fdivrl
and
iret
shll
push
ret
sti
add
pop
scas
adc
or
mov
inc
sub
cmp
and
jp
pushf
cmpl
dec
into
sbb
dec
sub
fstl
cmp
loope
jmp
inc
jae
in
fsubrl
cmp
push
data16
das
fidivrl
scas
and
push
lret
mov
jbe
sahf
pop
xchg
inc
add
loopne
mov
inc
pop
lcall
mov
ljmp
out
jno
fidivs
push
push
lods
inc
shlb
jae
in
nop
icebp
in
lcall
into
das
sti
neg
movsb
adc
mov
sub
sub
mov
scas
in
fdivr
dec
xchg
jge
cmp
mov
rol
lret
loopne
popf
fsubl
jbe
push
sti
mov
je
mov
mov
lods
push
imul
imul
ret
cmc
loop
add
pop
outsl
das
loopne
iret
dec
jge
xchg
in
pop
mov
mov
stc
ret
adc
add
cmpsl
push
cmpxchg
jne
bound
ret
clc
sub
inc
push
cmp
in
lret
ljmp
aam
pushf
push
sub
int
jne
cmpl
out
push
jno
out
lods
ja
pop
movsb
repnz
inc
jnp
lret
push
inc
mov
cmp
sub
add
lock
xchg
add
mov
sarl
arpl
and
fildl
dec
popf
stos
setno
incb
aam
movsl
cmpsl
and
fimull
and
mov
pop
mov
or
loope
pop
iret
mov
test
push
mov
insl
lahf
mov
dec
test
stc
mov
mov
push
ss
cmp
xor
adc
mov
inc
lea
loop
mov
push
mov
cmp
sti
push
stos
fcoms
xor
fistpll
and
mov
add
sahf
nop
cmp
mov
pop
cld
and
shll
or
loope
outsl
push
lahf
mov
or
xchg
popa
lret
mov
sub
mov
loopne
bound
movsb
xor
outsl
push
sbb
mov
cltd
add
cmp
fidivs
inc
negb
in
push
xor
jb
xchg
sarl
push
cmp
push
push
pop
std
jecxz
mov
or
movsl
jl
add
fldt
cmp
pop
mov
repz
ret
fisubs
inc
shrb
in
in
jp
mov
cmp
xchg
mov
cwtl
jae
cwtl
sbb
jne
std
lods
xlat
xor
mov
xchg
mov
mov
sbb
shlb
aas
sub
lret
dec
xor
or
shll
les
or
jnp
pop
and
inc
bound
sub
pop
pop
xchg
adc
mov
pop
pusha
jno
stos
sar
fidivs
js
ficoml
gs
ret
mov
mov
rcr
xchg
int3
aas
imulb
fcom
pop
shll
in
inc
pop
mov
jp
jno
mov
dec
or
jne
lahf
mov
shll
test
xchg
add
xchg
imulb
aas
or
insb
pop
dec
push
test
jnp
xchg
cli
sbb
lret
sub
mov
jno
adc
insl
push
sub
dec
cmp
xchg
add
cmpl
mov
clc
aaa
xor
push
sti
dec
setae
leave
lods
rcr
cmp
lret
adc
aas
add
out
std
jp
aad
pushf
int
lock
mov
shll
stos
sbb
fwait
fwait
ret
or
add
in
int
inc
sub
daa
cmp
dec
imul
jle
jge
mov
jae
mov
jo
stos
cmp
dec
out
movsl
popa
jle
dec
or
in
loop
lods
sub
arpl
sub
loop
cld
mov
outsl
test
loopne
or
out
mov
cltd
cmp
mov
xchg
jmp
repz
sbb
xchg
add
decl
cltd
jo
adc
xor
mov
lret
mov
inc
cwtl
push
and
xchg
mov
pop
dec
cmp
fwait
enter
mov
or
adc
ret
hlt
xchg
addl
mov
xchg
jge
inc
mov
jnp,pt
inc
sbb
jp
repnz
stc
cwtl
or
addr16
dec
test
inc
xor
bnd
cltd
aam
cs
pusha
dec
xor
pop
inc
add
jl
add
data16
dec
push
inc
mov
jnp
arpl
or
test
cmpb
enter
cmpsb
jg
sarl
cs
std
mov
mov
ret
mov
mov
or
sub
pop
test
mov
mov
addr16
jb
jle
adc
shr
mov
int
inc
push
adc
push
and
pop
or
pop
lcall
loopne
cs
jl
adc
mov
xor
std
push
clc
add
dec
dec
lret
mov
cltd
mov
nop
dec
sbb
arpl
lret
xor
mov
or
ret
cmp
or
mov
xor
in
aaa
and
aam
sub
sbb
inc
add
int3
xchg
push
gs
addr16
push
scas
shll
mov
push
fdivl
jp
mov
dec
jg
mov
icebp
mov
jae
loop
jno
adcb
xchg
scas
pop
in
out
sbb
adc
add
add
jmp
adc
mov
mov
icebp
sar
push
out
pusha
sub
xor
js
jecxz
adc
fwait
out
jp
repz
pop
and
lods
ficoms
mov
and
cwtl
ds
insl
cli
daa
pop
push
iret
or
mov
pushw
insb
sarl
fstpl
stc
mov
adc
mov
and
ud2
lock
push
mov
negb
pop
clc
lret
xchg
xchg
sbb
xor
xchg
mov
cmp
insb
pop
lcall
mov
pop
mov
stc
cli
xchg
xchg
scas
stos
call
adc
outsb
add
cmp
push
mov
decl
imul
mov
mov
into
lahf
add
mov
sbb
das
mov
mov
or
adcb
loop
mov
inc
cmp
cmp
sbbl
mov
jb
scas
dec
push
mov
icebp
cmp
mov
idivb
dec
inc
jno
jle
jo
adc
outsb
xchg
xor
mov
loopne
pop
test
inc
add
xlat
mov
fimuls
push
mov
xchg
add
dec
scas
fsts
ficoms
addr16
das
xor
inc
inc
dec
and
push
sub
repz
jne
sbb
pop
dec
add
jb
adc
scas
divl
in
je
sbb
sub
xor
in
push
jge
cmp
repnz
lock
mov
daa
xorl
jmp
cmp
mov
sti
jb
mov
pop
adc
or
das
adc
out
out
mov
test
pop
mov
adc
fildl
cwtl
inc
outsb
adc
mov
mov
push
roll
push
inc
cmp
mov
cwtl
sbb
pushf
adcl
jno
enter
mov
xor
xchg
sbb
adc
ja
out
cmp
movsl
iret
roll
push
sub
dec
inc
imul
push
lahf
push
xor
lds
sub
push
jnp
ss
cmp
xlat
cltd
fidivs
mov
into
jno
dec
out
inc
pop
mov
pop
mov
xor
jb
notl
inc
cmpsl
les
xorl
in
inc
repnz
fistps
in
jecxz
pop
and
iret
rorl
xor
and
loopne
inc
scas
jne
test
dec
pop
dec
scas
sub
fimull
xor
adcl
mov
push
push
icebp
jecxz
add
movsl
jns
lods
divb
xchg
insl
xor
mov
and
xor
popf
daa
xchg
outsl
mov
jb
dec
divl
inc
jg
add
std
mov
xchg
and
aam
xchg
movsb
sub
fldenv
xchg
loope
push
add
xor
pop
es
jnp
inc
cmp
ljmp
jle
dec
mov
jle
test
xchg
xorl
cmp
lcall
xchg
sub
lods
jno
xlat
shrl
jl
mov
pop
push
ficoml
push
sbb
jbe
xor
cmp
cwtl
push
mov
or
pop
jl
dec
enter
pop
mov
sbb
xchg
cmp
dec
adc
nop
cmp
test
adc
cmc
test
cmp
sar
cld
stos
adc
lret
mov
sub
jbe
jmp
popa
popf
mov
mov
and
push
push
lock
mov
scas
push
pop
and
shrb
ret
jno
sahf
and
outsl
jp
pop
lcall
adcb
cmp
out
adc
stos
outsb
ja
xor
or
lcall
cs
push
aaa
jb
add
or
pusha
test
bound
movsb
jnp
sbb
fwait
mov
aam
mov
cmp
dec
icebp
mov
fiaddl
roll
push
test
or
mov
loopne
mov
outsb
cltd
and
jmp
pop
cmp
lret
cmpb
movl
lret
nop
sarl
push
add
sub
rcll
aam
cltd
adc
and
test
xor
pushf
fnclex
sub
and
xchg
jne
enter
nop
ss
adc
outsl
dec
cmpsb
mov
lods
aam
xor
sbbl
inc
xchg
xor
je
rcrl
lret
insb
xchg
mov
ret
mov
push
or
cmovl
add
xchg
jmp
pop
and
insl
cmp
pop
sub
repz
adc
decl
pusha
mov
outsb
ss
push
cld
sub
lret
cld
lods
cmc
add
jmp
jle
xor
push
lret
daa
repz
push
dec
rolb
mov
hlt
jbe
add
in
push
mov
das
add
jmp
add
push
fwait
pusha
mov
jnp
call
dec
xchg
cmp
mov
mov
mov
mov
rcl
inc
negl
addb
jno
lcall
insl
sbb
aad
imul
cld
or
pop
adc
mov
dec
xchg
push
mov
call
mov
fstl
in
push
es
pop
aad
roll
jo
das
andl
inc
cmp
repnz
xor
das
xchg
hlt
lea
cwtl
mov
and
xchg
ds
in
mov
xchg
pop
aad
inc
aaa
and
and
jbe
and
jge
add
test
enter
stc
inc
jmp
mov
lret
sub
lcall
orb
adcl
out
lret
clc
pop
popf
lret
jbe
repnz
dec
and
out
inc
repz
stos
aaa
mov
pop
mov
mov
lret
and
jecxz
in
xorl
cmp
lcall
xor
lret
cmp
push
mov
cli
inc
mov
mov
adc
aas
daa
addb
or
mov
je
dec
iret
xchg
hlt
cmpb
inc
cltd
cmp
out
mov
daa
cmp
pop
jle
mov
lea
icebp
loop
loop
daa
ficoml
ss
mov
scas
cmp
rsm
cwtl
test
jae
xor
adc
and
cmpsb
dec
mov
pop
sbbl
andb
mov
lret
mov
iret
mov
jl
data16
shlb
movsl
data16
inc
push
jno
lods
push
iret
mov
jo
jo
sbb
int
push
adc
sbb
lret
sub
dec
push
cmp
in
jle
fbld
adc
or
loope
int3
inc
dec
lahf
lcall
in
push
pop
push
xchg
cs
fnstcw
test
xor
pop
lret
dec
mov
push
loopne
or
leave
sbb
xchg
leave
std
and
leave
push
cmc
js
add
push
xchg
sbb
fcomi
sub
popa
push
in
imul
int3
sub
in
sahf
cmp
cli
jne
loopne
pop
sti
pop
ret
pusha
mov
stc
dec
loope
lods
xor
outsl
scas
rcrb
add
mov
inc
xchg
mov
mov
add
mov
or
cmp
dec
stc
mov
test
fimull
imul
jae
sbb
lods
out
cli
mov
mov
std
xor
xor
mov
xor
adcb
enter
inc
add
jl
push
pop
movsl
mov
xchg
fists
push
aas
mov
dec
test
xor
daa
fmul
xlat
sbb
push
je
dec
push
mov
sbb
in
xchg
sbb
mov
adc
push
cmp
cld
orl
shlb
xor
inc
arpl
test
shrb
sub
insb
xchg
jecxz
push
xor
imul
xchg
lcallw
aam
movsb
test
xchg
bound
mov
inc
sbb
xchg
lahf
jns
cmp
rclb
fwait
pushf
and
sbb
inc
add
faddl
xchg
std
addb
xchg
push
push
rclb
and
adc
xchg
sub
dec
jae
jmp
int
dec
push
negb
xchg
and
ss
cmp
clc
outsl
sub
and
idiv
cmc
dec
mov
mov
pop
cmp
loope
cmp
sti
xchg
xchg
testb
ss
insb
jp
enter
mov
mov
cmp
jl
lcall
mov
push
fiaddl
std
inc
and
mov
pop
testl
cli
insl
insl
insl
stc
sbb
dec
test
inc
test
jge
addl
and
lods
pop
aas
jns
or
les
mov
nop
dec
loope
mov
cli
std
add
push
enter
cmp
pop
subl
lret
sub
das
rclb
jns
sahf
dec
pusha
gs
inc
fwait
dec
xchg
arpl
add
or
adc
sub
decl
rcll
call
dec
mov
hlt
sub
cmp
cmp
pusha
dec
mov
mov
add
mov
mov
mov
cmpsl
mov
aad
aaa
cmp
adc
dec
lahf
scas
fidivs
or
xorb
push
or
fisubrs
mov
xor
jns
xchg
loopne
negl
adc
nop
js
inc
js
cltd
sbb
rol
popa
push
fwait
add
or
xchg
xchg
mov
inc
fst
mov
push
test
movsb
call
shlb
sub
cmp
jmp
fwait
je
outsb
pushf
cld
adc
repz
outsb
aad
fsubl
inc
adc
jae
pop
and
and
inc
jbe
lock
stos
add
sub
idivl
push
pop
mov
adc
mov
push
adc
jge
jecxz
pop
pop
js
loope
ffree
lret
or
push
xchg
outsl
pop
xor
cmp
sbb
imul
jns
stos
jl
mov
fwait
out
inc
pop
xchg
sarl
xor
mov
ret
packsswb
mov
xor
loope
stc
mov
jle
inc
js
mov
dec
jo
hlt
jne
mov
mov
mov
lds
mov
cmp
mov
xorb
push
mov
in
mov
jle
aam
pushl
pop
cmp
enter
fucom
popa
ret
inc
inc
aam
xor
pop
rcrl
insl
in
lods
inc
or
imul
and
daa
push
mov
xor
mov
mov
push
insb
mov
mov
jno
sub
mov
pop
pop
mov
inc
repnz
fists
mov
mov
int
adc
jns
add
mov
and
inc
cmpsb
idivb
xchg
shll
jmp
mov
inc
into
mov
cmp
das
mov
push
cwtl
aad
aam
inc
jle
add
out
or
push
orb
and
adc
pushf
xchg
pop
lods
mov
iret
test
cld
mov
jbe
jp
jae
test
dec
pop
and
mov
outsb
daa
mov
add
inc
iret
in
insl
mov
leave
fs
lock
test
cli
enter
addr16
loopne
and
movsb
pop
rclb
aas
pop
mov
inc
sbb
fidivl
mov
aaa
xchg
fistps
mov
mov
push
jo
sub
mov
jp
xor
or
or
or
sub
test
cmpsl
mov
mov
scas
daa
sahf
jbe
jno
and
mov
xchg
or
inc
mov
mov
dec
fistpll
ja
cmp
xor
xchg
dec
push
mov
and
mov
test
adc
adc
cmp
or
cmp
std
mov
cmp
xor
in
jae
or
push
mov
mov
inc
dec
scas
cmp
or
push
jno
movsl
sti
adc
cld
les
sub
popl
insl
mov
ret
aad
jle
pop
sbb
stos
dec
inc
push
pop
push
rclb
test
push
sbb
scas
dec
mov
mov
mov
pop
mov
dec
je
or
outsb
loop
daa
pop
insb
stos
xchg
jmp
or
push
sbb
pop
or
lods
jmp
in
cmpsl
out
insb
std
into
es
push
mov
xor
xorl
and
xchg
xchg
addr16
add
mov
add
cli
cmp
imul
fs
pop
in
push
lcall
in
xchg
lret
xchg
xchg
es
and
call
loope
add
ret
jne
fisttps
cltd
adc
inc
xchg
xchg
xlat
mov
ficoml
jae
in
cmpb
xchg
cmpsb
mov
loopne
jne
in
cltd
inc
es
add
out
xchg
cmp
sub
jns
clc
mov
es
push
imul
mov
enter
cmc
push
int
inc
mov
cmp
or
das
pop
sub
or
push
mov
mov
cmp
aam
inc
in
mov
stos
dec
adc
ss
pop
mov
fistl
sti
mov
out
dec
adc
push
or
pop
add
push
mov
xchg
add
xor
push
shl
sbb
inc
xor
in
imull
inc
fldz
and
fnsave
or
sbb
xor
fimuls
popf
mov
ljmp
lret
jnp
cmp
pop
out
sbb
aad
xchg
pusha
jbe
mov
and
jl
sub
cmp
adc
addr16
notb
adc
fdivrs
shr
xchg
rorb
gs
push
dec
xchg
cmp
cmp
movsl
movsb
int3
mov
mov
popa
mov
sbb
inc
xchg
cmp
and
push
pextrw
inc
test
lahf
dec
xchg
adc
push
inc
aam
sub
adc
sbb
jbe
das
pop
jae
adc
sbbl
and
sbb
push
test
imul
mov
ret
ret
hlt
adc
int3
sub
inc
mov
cmp
mov
xor
pop
aad
out
push
in
lcall
mov
sub
in
aaa
mov
jmp
cmp
mov
push
mov
adcl
imull
pop
int3
scas
cwtl
xor
add
jecxz
and
mov
addr16
dec
push
fcompl
subl
jb
xor
mov
and
xchg
lcall
mov
and
mov
jmp
call
mov
lods
ja
jmp
mov
in
dec
fsubrs
mov
stos
idivb
lods
jmp
mov
jne,pt
shll
outsl
jmp
pop
clc
and
lds
xor
sbb
xchg
push
mov
dec
loope
mov
adc
or
jge
xor
and
dec
outsb
sbb
stc
mov
lcall
push
jne
ret
popa
fsubrp
jl
mov
mov
xchg
cmp
iret
ret
mov
mov
icebp
lahf
jns
lcall
into
cmp
push
mov
js
je
ret
das
pop
push
outsl
es
fwait
or
xor
push
xor
mov
mov
stos
and
add
cmp
cli
add
test
adc
lret
push
roll
cmpsb
std
movsb
mov
lea
inc
mov
repnz
sbb
add
cmp
inc
push
pop
je
cmp
cmp
daa
int
repnz
push
push
jge
push
mov
xchg
xchg
js
inc
jo
jl
dec
aad
sahf
cmp
inc
imul
fwait
jno
xor
sar
test
sahf
adc
pusha
ss
lea
sbb
pop
add
mov
test
push
cltd
insb
movsb
fs
dec
sbbl
mov
and
cmpsb
fidivrl
add
inc
shrl
sbbl
aam
cmc
add
mov
adc
mov
insl
and
cli
and
xchg
jno
mov
and
dec
lds
dec
adc
inc
sbb
inc
jno
andb
mov
xchg
stc
mull
ljmp
fdivp
out
subb
sbb
cmpb
lret
mov
inc
jo
cmpsl
outsb
addr16
mov
mov
lods
xor
mov
adc
sub
mov
bound
ds
into
pop
pop
insb
jle
in
test
mov
stos
sbbl
cs
jmp
lds
insb
mov
push
xchg
ficoms
lods
adc
mov
cmc
mov
mov
rorb
fisubs
gs
xchg
roll
stos
inc
pusha
push
loope
inc
lret
lcall
mov
xchg
mov
push
inc
pop
out
sahf
mov
mov
jnp
xor
out
lcall
mov
jl
les
mov
push
lods
xor
xchg
adc
in
jb
sar
stc
mov
jmp
orl
arpl
cmp
lods
cmp
cmpsb
repnz
pop
loop
je
lret
mov
mov
cmpsb
insb
cmp
in
mov
inc
mov
movsl
xchg
adc
into
mov
push
mov
inc
fbld
xlat
sbb
cmpb
scas
aas
ret
addr16
cmp
loop
inc
pusha
or
ret
or
out
push
xchg
or
mov
jns
xchg
pop
inc
mov
and
mov
mov
xor
nop
arpl
sub
mov
dec
mov
ss
lods
hlt
scas
sbbb
in
sbb
inc
sub
js
pop
pop
stos
sub
xchg
inc
mov
in
mov
loop
or
insl
jge
push
xchg
loopne
es
cmp
ds
mov
xor
dec
mov
mov
mov
push
inc
dec
pop
hlt
push
outsl
mov
stos
repz
int
stos
lods
std
mov
add
sahf
repnz
aas
repz
movsb
outsb
andb
xor
in
jne
in
dec
jge
jno
cmp
andb
movsb
xchg
push
iret
cmp
jns
lcall
cli
in
jge
sbb
jg
mov
iret
jmp
fucomip
jg
xchg
popa
mov
mov
xchg
sarb
jb
push
in
mov
sub
jmp
sub
sbb
ds
add
into
popa
lods
jmp
cmpsl
or
add
repnz
clc
inc
sbb
and
mov
cmpb
jmp
outsb
pop
pusha
jecxz
ret
add
or
bound
pop
shrb
jmp
shr
imul
gs
inc
int
mov
iret
jge
dec
adc
arpl
mov
xchg
rclb
mov
lret
push
mov
bnd
inc
lods
jle
orb
mov
push
sahf
push
daa
mov
in
sar
arpl
rol
cli
push
hlt
inc
xchg
fnstcw
out
pop
and
mov
or
and
cltd
sbb
push
xor
lret
in
rclb
das
mov
fistpll
and
sbb
xchg
fs
sahf
sub
cmpsb
cmp
and
cmp
push
cmp
jge
adc
bound
and
sti
fmull
dec
pusha
fnstcw
sahf
cmpsb
sti
ja
repnz
enter
adc
sbb
ficoms
mov
push
mov
jae
fwait
div
loop
lret
repz
lods
popf
cli
lods
test
fidivl
push
stos
sub
stc
or
leave
xchg
xchg
int
shlb
pop
push
sub
movsl
pop
jnp
push
aam
repz
out
aam
clc
xorb
adc
sbb
push
aad
je
xor
scas
mov
popa
add
add
or
into
imul
stc
jmp
xlat
pop
adc
sldt
adc
shlb
and
fistl
fnstcw
rol
scas
inc
cmp
test
fidivs
fs
mov
mov
xchg
bound
mov
pop
call
ljmp
lcall
lods
lcall
sub
dec
xor
sub
mov
dec
das
and
mov
imul
jecxz
test
imul
rolb
cltd
addb
les
aas
jp
mov
fldcw
sarb
lods
movl
xor
xchg
add
jmp
or
push
test
imul
mov
push
ljmp
xor
inc
cwtl
aad
pop
divl
push
mulb
and
xlat
mov
adc
jno
sub
mov
adc
pop
mov
push
leave
in
fisubl
dec
mov
cmc
inc
adc
outsl
cmp
in
in
xor
xchg
and
lods
rcll
enter
out
adc
jno
dec
mov
mov
push
add
gs
fisttps
rorb
pushf
clc
mov
aas
ja
mov
aas
in
pop
rcll
cwtl
and
inc
sbb
outsl
jp
das
enter
cmc
dec
inc
stos
in
inc
outsl
dec
push
ljmp
pop
and
add
sub
push
inc
or
ss
pop
push
adc
insb
mov
jmp
sub
movsb
mov
mov
mov
out
push
sbb
rclb
sub
ljmp
cli
jns
js
fcomps
jle
xchg
mov
xchg
sahf
adc
push
bnd
xor
jl
jbe
pushf
bound
test
nop
xchg
xchg
pop
test
lea
and
leave
pop
ret
mov
inc
mov
gs
insb
sub
cmp
in
mov
sub
mov
mov
and
aam
jecxz
ret
xlat
roll
cmp
loop
test
cli
dec
mov
or
sti
pop
adcl
insb
sub
pop
jne
fistps
mov
push
out
loope
pop
adc
xchg
mov
cli
xor
repz
idivl
xchg
mov
pop
mov
mov
subb
sub
pop
loopne
or
inc
cld
dec
mov
leave
je
movsb
mov
insb
fwait
pop
cmpl
or
push
dec
cltd
push
or
incb
shrb
jbe
pop
outsb
sarl
sti
scas
popf
movsl
cmpsl
jl
repnz
repnz
sbb
jns
out
outsb
adc
cmp
xor
pop
cmp
pop
or
popf
in
adc
data16
dec
xchg
push
and
xchg
mov
jle
inc
mov
xchg
mov
movsb
pop
sbbl
test
inc
jno
xorl
push
mov
mov
add
jns
push
sbb
pop
xchg
push
mov
lods
and
daa
jl
xor
pushf
jge
fnsave
adc
popa
mov
aas
cmp
jns
insl
shlb
mov
pop
push
mov
lods
out
test
or
or
add
ss
mov
mov
adcb
inc
stos
sbb
fcmovnbe
outsb
and
insb
inc
jbe
adc
jo
and
das
leave
jnp
iret
mov
repnz
jbe
cmp
js
jbe
mov
notb
xor
dec
add
adc
mov
xor
add
int3
push
cmpb
push
fs
ss
mov
mov
add
out
mov
iret
pop
jns
dec
mov
adc
icebp
rorl
rorb
stos
std
adc
aam
add
adc
mov
dec
mov
andl
push
and
or
fildl
out
out
push
inc
mov
and
sti
icebp
and
dec
movsl
ljmp
dec
cld
stos
lea
or
pop
fisttpll
stc
mov
adc
ljmp
jmp
jbe
sbb
xor
mov
fucomp
mov
cmp
scas
jmp
in
mov
cmpsl
or
out
daa
cmpsl
or
or
nop
or
push
fwait
jge
pushf
outsb
xor
popf
mov
les
inc
inc
lea
and
adc
xchg
adc
psubusb
outsb
jae
xchg
outsb
and
loope
fsub
popf
sti
cmp
push
mov
and
mov
xor
imul
enter
clc
mov
stos
lret
into
pop
cmp
jo
scas
aas
inc
push
sub
pop
cmpsl
test
inc
xchg
mull
xlat
popf
stos
test
out
test
jo
dec
cwtl
ljmp
xchg
leave
in
dec
gs
mov
lahf
shl
or
add
push
mov
pop
pop
in
outsb
fidivl
sahf
push
xchg
jo
or
adc
xor
jb
lcall
cwtl
sahf
push
les
mov
xchg
xchg
in
fwait
xchg
push
cltd
pop
les
outsb
pop
in
shll
sub
push
lods
mov
je
pusha
ja
cmp
ljmp
add
jecxz
jns
push
xchg
cmp
sub
cs
adc
sub
or
loope
xchg
stos
outsl
cmpsb
jge
cmp
insl
adc
enter
repnz
ss
cmpsl
enter
pushf
and
dec
fisttpl
ss
bnd
dec
scas
jo
mov
out
scas
inc
pop
mov
fs
xor
jbe
popa
popa
pop
sub
and
or
addb
adc
lret
pop
jge
out
jnp
frstor
jge
lret
aas
shll
adc
testb
cs
add
or
pop
and
xchg
sbb
lret
loopne
push
mov
push
sub
jmp
mov
out
lods
xor
subl
inc
sub
in
ljmp
scas
mov
and
mov
enter
mov
mov
mov
or
sbb
jne
push
and
loop
sbb
dec
bound
fcmovnbe
lcall
inc
inc
xor
into
fidivrs
sub
pop
and
pop
mov
int3
mov
pop
fcmovb
ljmp
xorb
cmpsb
jo
mov
xchg
mov
adc
pop
xor
jo
sub
fisubs
fs
dec
jae
rcrb
cmpsb
test
adc
xor
lods
xor
mov
das
inc
pop
mov
orb
leave
aad
sub
call
sub
jle
add
dec
lahf
sub
jo
cmp
js
xchg
push
or
fisubl
daa
sub
sbb
mov
sub
and
std
or
daa
mov
xchg
sbbl
push
add
jl
pop
push
scas
clc
fcompl
sbb
sbb
outsl
std
xor
xor
bound
pop
mov
shlb
jl
loope
jbe
mov
ds
out
popf
jecxz
adc
cmp
mov
sub
add
sbb
jae
sar
out
movsl
dec
adc
jns
push
andb
daa
pusha
push
lcall
popa
icebp
mov
hlt
std
sub
jb
sbb
cmp
dec
pushf
add
add
cld
sti
mov
or
imul
out
mov
repz
hlt
pop
incb
movsb
add
mov
push
popf
inc
mov
jnp
and
out
pop
adc
out
inc
stos
adc
idiv
cmp
and
mov
sbb
ljmp
jne
xchg
or
push
jnp
in
mov
mov
push
ret
sahf
outsl
dec
sarl
jge
mov
adc
in
fs
cmp
mov
and
add
jb
mov
jbe
xor
fistl
jle
outsl
push
pop
outsl
cs
fucom
ret
pop
fistl
loopne
adc
or
pop
in
sti
faddp
loop
xlat
test
dec
fbstp
lods
in
js
jecxz
cmp
popf
movsb
dec
insb
test
fcoml
sbb
mov
or
nop
push
int
push
dec
bound
xor
xchg
fmuls
xchg
scas
sbb
addr16
sub
jo
sbb
flds
inc
shl
imul
sub
cmc
jp
incb
hlt
scas
out
insb
js
dec
push
jbe
aam
mov
add
push
push
sbb
dec
pop
rol
jmp
lahf
push
adc
aad
into
movsl
or
mov
inc
mov
xchg
lds
mov
pop
movsb
stos
shr
xchg
mov
scas
push
aam
test
push
or
mov
cmc
lret
push
sahf
test
pop
fucomi
popa
cmc
movsl
push
test
cmp
outsb
xlat
and
addr16
fldenv
mov
inc
mov
repz
dec
mov
arpl
xchg
sub
inc
pushf
dec
daa
loopne
icebp
mov
xchg
adc
jbe
xchg
mov
mov
cmpsl
pop
fwait
mov
xor
pop
inc
setb
push
add
jae
fistpll
add
adc
in
jp
testb
cmp
inc
pop
push
lret
xchg
lahf
fldenv
loope
das
push
sub
rorl
lret
cmp
cmp
out
fisubrl
sbb
dec
testb
mov
fcomi
cmc
outsl
push
iret
push
ds
loopne
sti
int3
mov
inc
and
lods
sub
aad
dec
loop
outsl
leave
test
mov
sbb
rol
call
fidivrs
jl
mov
xor
in
jbe
mov
outsl
push
cmp
mov
xchg
int
cmp
sbb
mov
and
xorb
mov
pusha
add
jns
in
add
loope
ret
inc
fwait
lahf
sub
mov
adc
mov
es
negb
jle
mov
inc
pop
ja
scas
shrb
push
sahf
mov
fsubrs
jo
jbe
mov
xor
int3
aam
jmp
in
lods
push
xchg
jo
push
sar
mov
mov
pop
jae
sbb
or
fs
call
data16
pusha
cmpsb
pop
les
xor
scas
xor
loopne
dec
aad
mov
or
cmp
push
ja
jg
sub
loopne
mov
dec
adcl
mov
arpl
sub
lcall
inc
in
xchg
xor
jp,pt
cli
in
loop
imul
dec
add
mov
xchg
mov
xor
pusha
popa
fildll
sub
inc
imul
dec
out
ror
mov
add
ljmp
pop
in
aaa
fcompl
cmpsb
cmpsl
jge
mov
push
xlat
in
icebp
in
fwait
pop
jbe
cmpb
xchg
xchg
push
hlt
fistps
arpl
aam
pop
call
push
mov
daa
out
mov
jge
cmp
gs
push
in
mov
cltd
fptan
dec
inc
or
jmp
add
xor
cltd
jae
call
push
int3
push
ret
fnsetpm(287
sbb
imul
stos
popa
dec
and
popa
or
xchg
xor
inc
scas
push
enter
xlat
fisttpll
add
add
outsl
test
cmp
jb
cmc
cmc
movsl
aas
into
mov
pop
push
pop
xor
sti
xchg
cmp
lea
stc
jns
adc
jbe
sbb
and
bound
stos
push
pop
adc
sar
add
outsb
cmpl
inc
push
jg
fimull
lods
mov
xor
mov
lahf
jae
and
ret
mov
lret
rorb
mov
push
dec
xchg
pop
sbb
faddp
test
sbb
add
cmp
dec
sti
es
lret
fisttps
and
insb
test
cltd
cmpsb
jno
mov
out
add
das
cmc
xchg
xchg
jns
js
or
sub
lods
ret
push
adc
pop
adcl
ja
sti
jmp
lahf
stc
insl
ljmp
lcall
and
inc
inc
in
xchg
and
mov
icebp
arpl
pop
push
jno
mov
adc
sub
loopne
rcl
adc
rorb
jmp
mov
popf
jecxz
js
bnd
mov
mov
out
lahf
fsubrs
pop
cmp
loop
in
jnp
cmpsb
or
cmp
cmc
mov
xchg
push
xor
lahf
cwtl
or
aaa
lock
sbb
pop
shll
cs
pop
sbb
xor
or
nop
mov
and
mov
and
mov
fcmovb
sbb
mov
mov
ret
je
push
je
popa
aaa
insb
pop
mov
dec
add
aas
imul
dec
or
mov
shll
clc
jecxz
jae
lret
push
add
mov
insl
mov
pop
aam
jp
cltd
inc
nop
xchg
push
and
cmpsl
jne
popf
mov
out
cmp
push
fsts
gs
inc
pop
cli
or
imul
ret
sbb
das
mov
cmp
repz
sbb
mov
aas
hlt
fsub
out
xchg
pop
push
dec
pop
xchg
xor
mov
push
pop
dec
roll
inc
sahf
jne
scas
test
jge
js
test
int
adc
xor
pusha
repz
scas
pop
jae
sub
shll
xchg
push
sbb
sbb
add
push
jge
pop
push
outsb
int3
fs
loop
sub
ret
iret
ret
in
int3
lret
push
stc
pop
dec
insl
addr16
cmp
enter
sub
adc
adc
jl
inc
ficoml
inc
xor
shlb
fsubs
mov
ret
scas
fnsave
cmp
or
mov
cmp
cmp
sarl
dec
pop
repz
ret
fnstcw
imul
adc
xchg
cmp
in
push
ds
xchg
jle
add
int3
bound
jbe
mov
jge
insb
cmp
pop
out
fs
xchg
adc
repnz
jle
add
mov
in
scas
aad
pop
aaa
in
jb
cmpsb
clc
mov
pop
loop
ljmp
inc
lret
push
mov
pop
loopne
ljmp
fldcw
rorb
scas
pusha
pop
sbb
mov
xor
cmpb
and
scas
dec
pop
fdiv
pop
popa
ficomps
mov
into
sbb
xchg
pop
lahf
sti
add
mov
push
add
sbb
daa
sub
test
mov
sarb
dec
pop
js
hlt
or
popa
insl
jmp
js
mov
je
jp
ds
mov
into
add
mov
movsb
pop
pusha
inc
sub
jl
out
outsb
push
or
mov
stc
sbb
or
push
xor
sahf
jl
sbb
cmp
mov
out
push
fistps
cwtl
mov
jl
push
push
mov
inc
cmc
sbb
jmp
rcrl
pop
push
push
sub
mov
push
daa
aas
mov
or
and
add
fstpl
sarl
stos
insb
enter
insb
xor
loopne
lock
or
lods
xor
cli
xor
sub
push
loop
lds
pop
pop
jg
daa
push
mov
push
push
mov
dec
outsl
std
add
dec
sbb
loopne
test
inc
insb
inc
and
sti
das
cmp
cmpsb
cmc
dec
mov
in
mov
ror
cltd
jne
cmpsl
sbb
push
cmpsb
add
mov
mov
test
imul
dec
adc
js
mov
jp
lcall
sub
inc
xchg
ja
imul
mov
aas
pop
cvtps2pd
lds
arpl
jl
mov
stc
loopne
add
jecxz
sbb
es
push
mov
enter
in
popf
push
and
std
inc
cs
notl
xchg
in
add
dec
fidivs
repnz
sbb
sahf
loope
inc
pop
xchg
xchg
gs
mov
jb
cwtl
sbbl
push
scas
ret
or
and
jmp
stc
inc
mov
push
in
xchg
sub
ljmp
mov
ret
rorb
es
dec
mov
xchg
adc
out
cmp
arpl
repz
pop
lea
mov
jae
cmpsb
pop
rorb
adc
scas
mov
xlat
sbb
mov
or
iret
or
adcl
mov
sbb
xchg
inc
imul
xor
or
hlt
sbb
inc
sub
dec
add
icebp
mov
test
enter
mov
xor
sub
jmp
nop
mov
xor
scas
add
addr16
jp
pop
es
lds
int3
add
loopne,pt
imul
inc
inc
and
hlt
fwait
lahf
add
mov
rcrb
cmpsl
dec
int3
mov
imul
and
mov
sbb
cmpsb
aad
in
gs
add
add
mov
pop
in
inc
lret
pusha
bound
mov
popf
add
roll
and
sub
jne
stc
addl
scas
adc
jg
testb
das
and
jo
ljmp
es
add
push
int3
testb
adc
jg
mov
dec
fdivs
into
pop
push
add
cmc
sbb
sub
insl
rcrb
and
ljmp
mov
icebp
xchg
sbb
xchg
sub
ja
lds
pusha
cmpsl
aaa
mov
clc
fstpt
cltd
testl
and
add
fadd
cmc
mov
movsl
pushf
push
inc
dec
sub
aas
push
xchg
aaa
int
or
cli
popf
int
dec
int3
mov
stos
nop
push
cmpsb
andb
mov
in
jae
lret
xchg
add
push
das
cs
jg
cld
sub
popa
adc
stos
pop
push
sbb
dec
cmp
add
dec
dec
mov
jne
jns
fcomp
mov
sub
sub
xor
xchg
xchg
inc
mov
sbb
inc
pop
jle
mov
mov
scas
or
push
mov
imul
or
inc
jnp
mov
mov
cmp
dec
rol
bound
shl
pop
std
in
stos
jmp
data16
add
fwait
dec
mov
mov
mov
cmp
daa
fisttps
mov
xchg
adc
push
aaa
sti
pop
mov
lret
out
sbb
mov
mov
adc
popf
out
pop
pop
xor
clc
bound
cld
fdivrp
iret
mov
mov
in
cs
and
cmpsb
fildl
pop
cltd
loop
shl
fs
cmp
pop
jne
in
mov
mov
inc
jl
ljmp
pop
fcmovb
stc
addl
es
sub
shr
adc
dec
adc
pop
sub
mov
mov
cmpsb
int
pop
out
in
mov
or
ret
xlat
mov
out
sub
or
ss
xchg
fmuls
mov
xchg
jnp
cmp
call
add
stos
cltd
push
out
test
dec
sub
dec
sbb
arpl
jne
ficoml
dec
xchg
add
cmp
jl
or
scas
in
jmp
or
jbe
ds
cmp
sub
push
addr16
cwtl
sbb
jg
mov
std
imull
icebp
sub
enter
dec
adcb
lret
mov
scas
lcall
shlb
call
xchg
sub
inc
add
add
mov
out
xchg
mull
jnp
push
sub
sbb
or
add
gs
add
dec
mov
jno
das
sub
mov
push
adc
pop
jb
add
lods
stc
xor
out
call
mov
mov
jle
sub
xchg
shl
and
add
mov
jg
or
aad
mov
jecxz
stos
iret
inc
add
ret
into
xlat
aas
mov
push
jge
std
xor
ret
mov
jp
mov
test
push
loop
jb
mov
js
dec
mov
pop
call
mov
jno
sbb
jg
lea
fcomp
jns
aaa
and
mov
fldpi
jno
mov
mov
push
or
mov
mov
or
repz
test
cmp
push
jno
add
sbb
xchg
ljmp
notl
arpl
mov
and
pop
mov
adcb
out
sbb
insl
dec
testb
test
fistpl
dec
test
jne
addr16
outsl
aaa
inc
xchg
jg
std
shrl
stos
outsb
shlb
and
cmp
mov
into
push
popa
daa
push
or
loope
sub
mov
mov
out
icebp
cwtl
pushf
fdivrs
mov
xchg
frstor
sbb
xchg
or
insl
mov
movsb
subl
orb
cmp
xor
das
sbb
mov
js
inc
mov
and
xchg
pop
iret
mov
pop
inc
push
call
out
rclb
jp
push
mov
pop
call
in
and
test
into
push
jb
test
jns
adc
adc
xchg
imul
xor
int3
fcompl
test
aam
cmp
ja
and
adc
es
aas
mov
sub
ljmp
sti
xchg
jmp
dec
jne
push
lock
stc
cmp
xchg
mov
mov
int3
dec
mov
mov
pop
scas
sub
xlat
paddb
push
mov
pop
adc
jp
cmp
jp
xchg
sbb
cmp
in
bswap
stc
jecxz
jnp
jge
add
pop
mov
ja
lcall
push
pop
daa
imul
rorl
push
out
adc
lcall
loope
leave
call
mov
and
xor
sbb
sub
je
mov
int
push
addr16
mov
out
enter
dec
mov
pop
xor
jp
push
fisubrl
std
xchg
cwtl
repz
daa
outsl
dec
fstpt
inc
mov
imul
insl
fstpt
xor
mov
or
push
add
insl
mov
popa
inc
lods
jae
push
idiv
jg
gs
adc
insl
dec
mov
xchg
enter
lock
jne
std
mov
mov
xchg
add
inc
adc
loope
lret
xor
and
jp
mov
add
jp
push
fistl
jnp
mov
mov
ds
dec
mov
popa
insl
loopne
xor
inc
in
repnz
loop
pop
add
push
ret
iret
mov
pop
pop
pop
cs
movsb
jmp
mov
add
mov
or
lods
nop
shll
sbb
in
pop
jmp
mov
repz
incb
dec
rcll
les
xor
mov
cwtl
shr
daa
mov
movsl
sub
jp
mov
dec
cmpsl
test
loop
push
dec
mov
jno
das
sbb
and
lea
mov
mov
push
popf
jl
stos
lods
getsec
imul
bound
in
in
rcrl
inc
sub
sub
sbb
mov
mov
andl
sbb
in
pop
pop
cltd
mov
jle
test
scas
aas
cmp
insl
mov
inc
ret
pop
adc
shl
mov
adc
adc
xchg
xor
into
ret
cmp
cld
mov
xor
push
xor
cli
stc
inc
cmp
dec
sub
xchg
sub
mov
xchg
frndint
pushf
and
repnz
inc
ja
xchg
jnp
bound
icebp
loopne
xchg
push
roll
inc
das
or
in
push
jnp
lods
outsl
xchg
jae
sbb
mov
mov
sbb
mov
sbb
aaa
mov
clc
push
mov
mov
loop
xchg
mov
icebp
push
sub
hlt
adc
xchg
out
xchg
fdivp
repz
int3
xor
test
fcmovnu
push
jle
pop
dec
jmp
pushf
into
shrd
out
dec
or
and
mov
jno
sub
cmp
mov
jnp
int3
cmpsb
popf
aaa
pushf
jno
or
sbb
neg
insl
jo
mov
cmpsb
jb
sbb
add
pop
mov
add
pop
push
add
jmp
sub
xchg
fs
bt
std
sbb
lods
push
rcrl
cmp
popf
inc
jo
je
jl
xor
sbb
int
stos
push
adc
pop
and
cmpsl
cmp
mov
sub
xchg
loop
jo
mov
inc
cld
xor
ficompl
mov
je
ljmp
pop
mov
into
push
sub
shl
filds
ss
rsqrtps
idivl
mov
cmp
mov
mov
es
push
cmc
cli
or
lds
arpl
and
mov
push
jmp
dec
leave
loopne
iret
movhps
mov
pop
daa
mov
aaa
xor
call
or
mov
fs
pop
leave
cmp
push
sub
fwait
pop
and
sub
mov
pusha
push
scas
pop
pop
xor
cmc
fldenv
jne
test
cmp
ret
fstl
faddl
pop
inc
rcrb
int
or
sbb
pop
mov
push
push
aad
xchg
xchg
pop
xor
icebp
and
jae
int3
adc
jnp
sub
frstor
mov
aas
int3
cmp
jns
rol
xlat
test
and
jecxz
lock
lock
loopne
or
aad
aaa
lock
adc
stos
aaa
fdivrs
mov
mov
and
andl
aas
stos
pop
push
pop
inc
hlt
fsubs
push
outsl
repz
sbb
cmp
ljmp
pusha
es
imulb
sbb
push
loope
ret
lods
pop
mov
xchg
pushf
hlt
loop
outsl
dec
push
or
push
pusha
int3
mov
rclb
or
mov
repnz
and
scas
loop
push
mov
mov
ds
pop
dec
adc
pop
dec
xor
push
pop
std
inc
pop
inc
adc
xor
jno
fwait
lret
pop
cwtl
dec
cmp
jge
sbb
add
mov
push
sbb
insb
lods
add
lea
stos
cltd
ljmp
dec
pop
xchg
lcall
daa
jmp
popa
call
icebp
jle
cmp
and
rolb
inc
mov
in
jae
inc
xor
mov
pop
ss
test
pop
fisubrl
sub
or
fcomip
adc
neg
in
add
sti
push
pop
and
rcll
push
mov
sub
mov
ret
pop
push
mov
lret
in
cli
int
push
cmp
push
pop
mov
nop
call
push
enter
clc
lea
mov
adc
push
pop
add
sbb
push
push
cmovb
lods
iret
pop
jae
dec
loop
push
test
int3
xchg
mov
stos
sub
jp
rcrl
xchg
cmp
imul
xchg
pop
or
and
mov
in
sub
dec
fcoml
ret
push
pusha
and
mov
mov
inc
push
fistpll
xchg
adc
inc
lahf
test
add
xor
mov
and
ja
out
mov
lret
sti
cwtl
repz
add
aaa
insb
xor
outsb
fs
jb
cmp
in
adc
mov
cmpsl
scas
daa
iret
sub
and
pop
and
cmpl
ljmp
and
mov
xchg
fistps
jge
and
xchg
fnstcw
incl
stos
cmpsb
jmp
inc
xor
shr
pop
xchg
repz
cld
int
add
push
daa
adc
or
and
cltd
scas
mov
sub
gs
shlb
pop
loop
push
xorl
pop
cli
xchg
lds
jp
leave
aas
or
xor
mov
mov
pushf
push
push
test
and
repnz
fildll
add
add
subb
mov
lods
adc
mov
mov
into
jmp
std
cs
das
sub
and
shll
int3
pop
fstpl
push
in
push
fdiv
cmp
or
loopne
movsl
or
inc
mov
mov
sub
jne
pop
sub
push
aam
int3
outsl
out
aam
scas
addr16
and
icebp
popa
jae
cmp
dec
add
movsl
mov
ret
jmp
cli
mov
pop
mov
jg
ljmp
js
scas
stos
dec
push
cwtl
imul
into
inc
pop
in
push
lcall
pushf
loopne
xor
ja
shll
out
xor
sbb
lods
cmp
nop
and
mov
shll
xor
ja
test
stos
test
add
lea
inc
lret
aaa
out
jns
fsubrl
loope
mov
pop
fcmovnu
xor
stos
movsb
fwait
mov
mov
push
mov
iret
cmp
mov
int
fmull
arpl
lods
sbb
popf
ds
loope
xor
popa
fisttpl
lds
xchg
dec
cmp
pop
ja
cmp
and
xchg
test
push
dec
mov
add
or
sbbl
and
jge
pusha
cwtl
lds
push
ficomps
cmp
mov
dec
mov
insl
sahf
scas
mov
mov
push
fidivs
sub
ja
js
subb
loopne
int
mov
repz
lcall
loop
icebp
dec
es
ja
insl
jno
call
mov
xor
clc
or
ret
jns
mov
mov
add
mov
mov
dec
lahf
pop
clc
inc
mov
push
fmuls
ljmp
fldcw
inc
lds
popf
push
push
mov
popf
jmp
mov
out
xchg
sti
push
pop
adc
xor
push
lret
cwtl
inc
cmp
xchg
push
push
sbb
mov
es
nop
sub
push
adc
lahf
sub
movsl
pop
adc
adc
cld
scas
jno
inc
cmp
mov
xor
in
cmp
daa
dec
push
inc
push
test
hlt
enter
cmp
cmp
lock
lret
scas
jecxz
mov
cmpsl
mov
lahf
fdivr
jo
rcrl
and
push
sub
push
cmp
fld
dec
aad
addr16
jg
pushf
xchg
shlb
push
sub
outsb
mov
mov
pop
outsb
scas
pop
adc
cmp
in
push
xchg
pushf
cli
or
insl
jmp
sbb
fnsave
xchg
and
push
lea
rol
jb
add
cltd
out
cmc
cmp
push
insl
icebp
cltd
leavew
test
or
dec
add
sub
loopne
inc
hlt
mov
sub
pop
notb
xor
lods
stc
jb
shll
add
push
lea
stos
pop
fisubs
xchg
sti
mov
push
or
mov
mov
aam
jae
push
lret
adc
fwait
repz
mov
or
ds
push
nop
rcrl
bound
sub
mull
sar
pushf
adc
fisttps
addl
js
aam
mov
shlb
and
loop
jg
mov
and
mov
enter
push
jo
lret
aad
mov
movsb
sti
out
and
jle
loop
aam
cmp
cmpsl
cmpsb
clc
push
mov
add
cwtl
jno
add
mov
sub
add
push
pushf
add
dec
nop
add
push
mov
cmp
xchg
mov
out
mov
add
xchg
mov
mov
xor
inc
adc
stc
scas
sub
cmpsl
dec
push
lcall
mov
inc
cltd
xor
xchg
repnz
push
daa
xchg
rcrl
and
scas
xchg
mov
into
iret
fisubl
mov
cltd
loopne
jl
mov
jo
lods
add
and
cmp
mov
jl
sub
out
push
mov
mov
xchg
pushf
mov
das
dec
and
pop
negb
stc
mov
movsb
insl
xchg
lret
inc
jns
xchg
mov
jnp
loop
out
mov
push
repz
sbb
xor
bswap
xchg
add
mov
xor
arpl
jl
inc
cmp
fsubrl
sub
std
push
and
xchg
dec
fwait
cmp
push
dec
jo
aam
jp
leave
lahf
fisubrs
xchg
rorl
pop
fistpll
mov
lret
xor
outsl
es
or
rcrl
push
push
jmp
cld
push
lock
pop
pop
adc
mov
adc
mov
stos
sbb
fisttps
outsb
loopne
jae
lcall
imul
cs
aas
or
add
shl
cmpsl
fwait
cmpsb
jo
mov
dec
push
rorl
das
jns
out
push
loop
mov
or
or
aaa
cltd
fsubrl
cmp
adc
jl
adc
cld
xlat
xor
jo
mulb
xchg
mov
int3
mov
mov
out
mov
mov
sub
inc
sbb
out
lcall
mov
sub
movsb
pop
inc
mov
pop
jne
push
lods
in
into
push
jmp
lcall
repnz
pop
mov
repz
mov
repz
hlt
cld
popa
out
xchg
adc
dec
sub
jp
sbb
mov
add
xor
or
int
mov
ret
and
add
fidivrs
insl
int
adc
enter
add
mov
jp
es
shr
lock
xchg
loope
xchg
pop
jbe
pushf
mov
test
xchg
mov
lds
push
fsubl
xchg
pop
repz
movsb
popa
xor
jge
fbstp
pop
push
dec
lcall
rclb
bswap
rep
ret
or
jo
in
fucomp
mov
jg
sbbb
loope
iret
cmpsl
cmp
lcall
lds
gs
inc
inc
nop
adcl
dec
push
push
cmp
inc
aas
dec
or
rcll
dec
inc
cmp
cmp
test
dec
leave
lock
cs
cmp
mov
or
movsl
xchg
cmpsb
push
movsb
xorb
xchg
or
sbb
push
mov
aam
sahf
orl
fidivs
repz
cmpsb
mov
jb
sahf
ljmp
movsl
dec
ljmp
movsl
mov
inc
fwait
test
shrl
negb
mov
mov
xor
jge
inc
add
pusha
push
mov
lock
add
leave
mov
bound
xchg
daa
pop
pop
xor
xor
xchg
fwait
xchg
push
movsl
add
jne
cmp
aad
mov
leave
push
lds
cmc
popa
bound
out
popl
lahf
cmpsb
ret
sbb
daa
sbb
test
mov
push
aas
mov
in
out
push
cmp
mov
int3
or
mov
sbb
xor
push
ret
inc
adcb
and
pusha
push
mov
hlt
xchg
cmpsl
shll
push
dec
mov
xor
lock
insl
cmc
cld
xchg
cmp
mov
aam
aad
rol
push
pop
add
pop
pusha
out
rorb
aas
gs
add
mov
or
cmp
sub
gs
add
addr16
ret
outsl
scas
pusha
fdiv
mov
mov
mov
adc
cwtl
add
clc
int
imul
jb
dec
mov
in
cld
loop
dec
fcomp
js
dec
sete
xor
popa
push
addr16
test
pop
jo
das
xor
das
cmp
imul
shr
loope
xchg
sbb
inc
dec
fs
pop
sti
and
mov
xchg
dec
ds
mov
mov
dec
cmp
negl
scas
es
sarb
add
insb
mov
das
rcr
sub
cltd
push
push
cmpsl
addr16
adc
inc
or
jae
icebp
xlat
xchg
add
pop
cmp
add
ss
sbb
jp
fistps
dec
int
lds
pushf
fidivs
push
jno
mov
jecxz
sbb
stc
mov
pop
pop
lcall
call
cmp
add
inc
xor
nop
sbb
xchg
cmp
push
jecxz
pop
or
jecxz
lret
fists
cmp
xchg
mov
cmp
cmp
stc
aad
push
lock
pop
push
and
fidivrs
lret
aad
aaa
pop
jge
push
xor
mov
dec
inc
cmp
test
rclb
mov
lea
das
jle
push
es
jp
imul
sub
sbb
jmp
ficomps
jmp
pop
add
push
inc
or
divl
ret
int3
cmp
dec
lds
push
fildll
jge
adc
outsl
inc
pop
or
or
xor
cmp
mov
roll
pop
mov
jnp
mov
sub
lret
leave
lret
xor
push
dec
pushf
dec
jg
adc
arpl
arpl
out
or
cmp
mov
lret
mov
sbb
push
int3
inc
dec
sbb
sbb
mov
cs
lcall
lds
ljmp
out
repnz
push
cmp
inc
adc
dec
popa
mov
add
or
movsb
xchg
test
pop
add
mov
or
jbe
int3
jg
lods
out
scas
rorl
out
inc
inc
adc
add
mov
insb
lcall
jle
and
addl
fidivs
adc
shl
mov
pop
sub
jle
testl
mov
rclb
daa
pop
jge
insl
aas
arpl
aas
adcb
cltd
shrl
add
inc
movsb
pop
call
mov
ja
shll
movsb
mov
mov
addr16
pop
pop
iret
mov
mov
imul
icebp
or
jl
mov
adc
xchg
dec
data16
ss
push
add
into
shll
pop
push
xor
mov
adc
push
int3
ljmp
or
sbb
stos
push
sbb
xchg
dec
cmpsl
cmpsb
mov
pop
out
or
lods
fistl
mov
aas
movsl
and
pushf
jno
mov
sarb
lcall
xchg
rcr
mov
into
mov
push
mov
xchg
mov
leave
pop
ja
pop
enter
ljmp
out
ss
xor
sub
dec
nop
pop
test
push
cmc
mov
bound
pop
outsl
sub
pop
sub
xchg
lods
jbe
pop
jmp
enter
push
fdivs
int
sbb
icebp
inc
xchg
mov
dec
lahf
cs
and
fbld
mov
cmp
xchg
fadd
loop
lret
fwait
sbb
mov
push
jno
pop
es
push
out
cmp
jno
add
inc
stos
and
mov
neg
stos
shrl
bnd
push
ja
shr
cmp
or
mov
xor
jmp
dec
es
jbe
jl
sub
daa
mov
ret
xor
pavgb
xor
dec
sub
roll
mov
push
ss
js
xor
inc
cld
ljmp
stos
imul
es
in
inc
in
test
mov
or
mov
fidivrs
add
inc
lcall
ja
movl
inc
shlb
gs
sbb
out
dec
movsl
cmp
fnstcw
adc
mov
test
mov
pop
push
sub
xlat
mov
inc
dec
faddp
div
mov
push
pop
ficoms
out
add
out
cwtl
mov
es
cs
adc
inc
icebp
sahf
adc
push
inc
push
xchg
inc
frstor
insl
shrl
imul
decl
out
sbb
mov
bound
xor
mov
xchg
in
xor
rcrb
dec
pushf
in
fcmovne
test
add
pop
push
jne
or
adc
insl
xchg
lret
mov
adc
call
stc
out
das
aad
test
inc
test
loope
je
xor
cmpsl
inc
jb
add
dec
fcmovb
push
mov
push
xlat
jecxz
xchg
ror
in
in
sub
inc
sbbl
dec
pop
aam
mov
mov
inc
pop
adc
and
cwtl
lods
arpl
mov
push
idiv
adcl
mov
cli
lods
jp
fwait
enter
xor
mov
bound
fbld
lds
and
les
and
dec
in
sbb
dec
mov
arpl
jle
mov
imul
insb
jle
jmp
xchg
scas
rolb
cmp
fs
bound
push
or
dec
dec
ja
sub
sbb
fsubs
pop
jb
mov
xchg
loopne
insl
repnz
mov
movsb
lea
adc
loopne
loopne
mov
sti
dec
sahf
xchg
aas
mov
iret
pop
pushf
ja
cmp
hlt
pop
movntq
mov
push
out
sbb
jbe
inc
nop
imul
lods
push
push
add
mov
inc
mov
pop
xor
and
adcl
int3
xor
or
inc
mov
fisttpl
push
xchg
pop
push
or
sahf
dec
fisubrs
imul
push
jnp
test
xor
shll
sub
dec
aaa
push
pop
mov
test
fists
out
ret
jno
xlat
pop
lea
mov
jg
push
data16
sbb
push
cmp
stc
dec
cmp
inc
inc
int
dec
mov
push
lods
and
jnp
inc
mov
sbb
insl
cld
xor
xchg
cmc
lea
test
jno
mov
mov
jbe
mov
jg
sti
dec
aas
sub
push
andl
or
sub
mov
jg
arpl
mov
jecxz
stos
pushf
add
xor
xchg
add
mov
sahf
jae
fdivrs
push
out
jb
idiv
cmp
cli
push
push
inc
push
xchg
outsb
push
loop
push
sub
cmp
outsb
das
push
outsb
iret
or
scas
or
inc
daa
mulb
inc
sbb
scas
scas
xor
cmp
cmp
push
stc
movsl
adc
and
pop
sarl
aam
pop
imulb
mov
aaa
pop
clc
in
pop
mov
dec
xlat
adc
xor
js
movsb
adc
in
std
lret
movaps
std
je
jmp
fsubrs
xchg
pop
aad
sbb
addr16
fildl
cmp
in
mov
test
mov
push
push
or
sbb
lods
pop
popf
lock
mov
push
pop
adc
push
cmc
xor
addr16
lods
jo
sarb
je
jno
xchg
pop
xor
xchg
push
xchg
pop
fcomps
pop
dec
nop
cli
dec
inc
cmpsl
adc
mov
sub
imul
icebp
add
mov
add
mov
cmp
mov
mov
dec
cld
xor
pop
int
ds
imul
cmp
pop
in
and
push
dec
hlt
movsb
xchg
call
aad
push
jo
rcrl
insb
inc
lods
push
je
addr16
cwtl
jae
sub
rcrb
mov
mov
push
inc
jbe
xchg
loopne
and
jae
push
add
sub
test
mov
in
xor
imul
es
outsl
popa
jge
add
test
jbe
sub
sbbl
loopne
jns
jo
jnp
mov
and
pushf
nop
push
push
lret
sub
xor
pop
inc
push
push
clc
scas
jl
xchg
xchg
xchg
jg
sbb
add
div
subb
add
je
or
xor
mov
pop
sub
or
pop
or
es
push
lds
inc
dec
mov
adc
les
sub
cmp
bndstx
bndstx
jmp
push
je
mov
scas
roll
jne
cltd
mov
clc
adc
repnz
sti
fistpll
or
xchg
and
or
mov
lcall
inc
cwtl
push
int
testb
sub
sahf
sarb
mov
test
add
cwtl
inc
xlat
popa
push
xor
stc
sbb
mov
adc
mov
pop
cmpsb
mov
push
sbb
mov
sti
xor
mov
xor
mov
mov
and
mov
and
inc
xchg
test
jl
cmp
aas
xchg
stc
xchg
out
cmp
mov
arpl
xchg
add
je
scas
xor
pop
arpl
pop
ljmp
xchg
stos
std
int
cmpsl
cmpsl
aaa
pop
hlt
sub
mov
dec
mov
in
gs
jg
fsubrl
cltd
iret
movaps
add
stc
add
push
rorl
mov
rcrl
add
and
mov
mov
pusha
repz
daa
clc
push
shlb
jnp
lea
xchg
sbb
jge
push
sahf
xchg
fwait
ja
pop
pop
mov
xor
mov
pop
jmp
addr16
lret
shlb
stc
adc
push
or
in
rcll
xor
dec
lahf
cmp
mull
adc
and
sbb
fidivl
pop
mov
mov
adc
shr
insl
sbb
gs
mov
xchg
aam
in
fcomps
jae
xchg
data16
cmc
loopne
adc
sub
mov
mov
jg
sti
ret
pusha
cmpb
adc
mov
xchg
push
add
repnz
adc
daa
divb
or
lods
sub
push
pop
ss
xor
out
inc
adc
mov
cmpsb
add
lds
ja
out
pop
stos
xor
or
aaa
push
mov
rcr
push
and
test
xor
jb
je
mov
jle
xorl
mov
jmp
imul
iret
dec
add
shl
lock
cmpsb
pop
mov
cli
lret
dec
xor
int3
insb
repnz
les
lahf
sahf
or
addr16
imul
and
pop
insb
sub
mov
test
pop
mov
pop
pop
pop
lahf
jmp
push
insb
sbb
imul
push
std
sbb
pop
hlt
inc
inc
mov
pushf
sub
dec
push
mov
jb
cs
lret
sbb
repnz
popf
aaa
push
dec
stos
loop
push
or
fwait
and
je
lods
mov
pusha
mov
push
pop
mov
jno
nop
lret
xchg
jns
xchg
lret
push
jmp
sub
adcb
push
add
cli
out
push
daa
sub
insl
mov
pop
inc
pop
xchg
cmp
dec
xorb
sub
cmp
ljmp
pop
sub
mov
dec
xor
leave
lcall
je
xchg
movlps
mov
lahf
aam
int
jns
incb
xchg
addr16
cmp
cmp
stos
add
aas
jmp
pop
push
inc
pop
fnstenv
lea
push
dec
xor
mov
lock
loopne
cmp
xor
lds
jo
repz
xlat
push
lret
mov
mov
loopne
sub
xchg
adc
outsb
fs
andl
push
xchg
ja
inc
dec
push
push
aam
sbb
cmp
leave
add
xchg
out
cltd
mov
sbb
pop
ret
jnp
mov
jns
dec
sub
es
mov
outsb
stos
pop
repz
aam
xchg
cmc
js
std
xlat
lods
jno
fldt
mov
pop
xchg
xchg
lcall
test
or
rcr
push
dec
movsb
pop
pop
je
jno
popa
cmc
xor
adc
xor
test
jle
js
in
mov
cmc
repnz
mov
fldcw
jno
mov
outsl
dec
xlat
xchg
xchg
mov
pop
pop
dec
xchg
or
lock
cmpsl
daa
xchg
pop
arpl
rcl
jp
clc
ja
sub
mov
mov
jnp
pop
shll
mov
xchg
rcr
add
mov
pop
lcall
addr16
shl
push
outsl
out
xchg
cmp
movl
pop
mov
stos
stos
and
loope
notb
xor
into
fnstcw
lds
lock
popl
subl
mov
lock
fisttps
sub
popa
adc
mov
aam
cmp
jmp
fimull
nop
icebp
in
ljmp
gs
inc
mov
push
and
shr
xchg
popa
jno
lods
lea
es
mov
xor
pop
add
movsl
mov
repz
lods
push
test
mov
jp
iret
xor
push
std
lret
das
sti
push
dec
mov
in
outsl
sar
and
ss
rcr
lods
pop
test
add
push
enter
jae
or
les
insb
loope
out
lods
add
or
mov
cmp
sahf
push
push
stos
jnp
clc
lcall
iret
xor
cli
call
jo
mov
push
xor
or
jns
jl
in
pusha
mov
cmp
mov
sahf
lcall
dec
pop
test
and
jl,pn
mov
in
mov
fcmove
jo
int
push
fnsave
xlat
mov
push
ljmp
mov
mov
shll
sbb
mov
jle
hlt
pop
sahf
stos
pop
lock
je
icebp
pop
mov
xor
js
adcb
les
or
popa
ror
dec
adc
dec
je
leave
cmp
scas
xchg
xchg
xchg
mov
jmp
mov
add
int
xchg
xchg
and
js
push
negb
mov
cmpsb
popf
insb
xor
aam
cmpsb
dec
lods
mov
jg
sbb
out
fcmovu
lods
ret
fsubrl
jl
jl
int
lods
das
jg
ror
fwait
dec
push
sbb
jne
xchg
push
leave
mov
pop
inc
mov
cmp
loope
iret
jmp
xor
icebp
mov
sbb
outsb
iret
arpl
cmp
mov
jmp
inc
add
lock
mov
sbb
jne
jno
rcll
mov
dec
xlat
outsl
imulb
cmp
sub
mov
popa
pop
out
xchg
sub
push
lods
xor
andb
fildll
add
add
mov
xor
sbb
pop
aad
aas
sbb
mov
ret
push
jg
jne
add
adc
mov
pop
fistpl
dec
add
js
insb
sbb
rolb
aas
lds
int3
mov
xchg
xor
push
push
fisubrl
push
jp
repnz
mov
xchg
adc
xor
je
mov
lds
jns
fsts
cmp
mov
imul
je
dec
or
cli
adc
or
leave
inc
test
jno
jne
cmp
ss
addr16
mov
rcl
lahf
adc
js
push
loopne
cs
or
xor
mov
cld
and
aad
jbe
pop
and
jne
sbb
push
dec
and
test
dec
xor
inc
arpl
add
inc
aas
dec
fs
xor
push
mov
pushf
in
push
jno
inc
mov
add
mov
je
rolb
xchg
jns
dec
stos
out
mov
sbb
fsubrs
aad
int
hlt
aam
or
cmp
sahf
xchg
int
out
icebp
and
or
pop
out
adc
xor
sub
push
repnz
jo
sarl
mov
into
cmp
pshufw
adc
push
les
cmpsl
dec
mov
add
xor
cmp
sub
cmpsb
dec
push
stos
mov
nop
cs
add
ret
sarb
adc
aam
fsubr
pop
mov
sub
mov
mov
xor
mov
or
imul
inc
daa
out
pop
jecxz
out
xchg
push
push
ficomps
addr16
mov
scas
sbb
js
int3
outsl
lock
mov
test
insb
arpl
enter
int
addl
rorb
mov
mov
in
cmc
jae
out
push
xchg
sub
test
sar
xlat
pusha
pop
ljmp
aam
adc
cmp
xorl
jle
dec
insl
and
mov
xchg
add
stos
or
sub
jg
xchg
enter
mov
pop
adc
jle
dec
orb
and
ret
fwait
xor
dec
jmp
fiadds
lret
jl
addb
sbb
inc
mov
iret
sub
xor
inc
loopne
adc
insb
pop
add
push
pop
sbb
jp
out
test
cmc
sub
gs
cwtl
mov
fcmove
aaa
adc
push
cmpsb
add
xchg
mov
jecxz
mov
sti
subl
fsts
and
sbb
adc
out
mov
mov
push
leave
dec
push
dec
insb
pop
pop
push
js
addr16
mov
out
xchg
sub
or
pusha
jmp
xchg
rcrb
stc
adc
jle
shl
movsb
mov
cli
sub
andl
sahf
cmc
cmp
inc
sub
jle
dec
push
repz
cmp
xacquire
hlt
fwait
mov
push
pop
add
push
adcb
mov
imul
rclb
stos
fldl
lock
aas
lret
ljmp
mov
mov
out
aas
mov
mul
mov
sbb
mov
pushf
stc
mov
out
int
dec
insb
ret
fdivrl
mov
adc
popa
popa
inc
dec
call
aaa
sbbb
pop
out
cmp
inc
push
out
jg
xchg
mov
rclb
lret
mov
sub
sub
in
jae
ljmp
test
in
mov
std
mov
jne
loopne
jo
sbb
push
lahf
and
bound
pop
call
push
cmp
sub
hlt
int
or
out
inc
sub
cld
in
lahf
stos
call
push
pop
inc
mov
mov
ret
add
pop
inc
push
pusha
adc
scas
stc
adc
aad
dec
ret
sbb
aas
jbe
dec
jp
cmp
lahf
lret
mov
aad
aad
ret
daa
bnd
aad
aaa
and
push
aam
dec
icebp
aaa
mov
mov
inc
test
mov
std
shl
addl
insb
sbb
aas
mov
addr16
cmp
movsb
lcall
in
xchg
xor
cmp
jge
je
shl
xor
js
adc
mov
sbb
mov
jl
shll
test
bound
add
jae
pop
outsb
jne
sub
inc
mov
inc
lret
inc
mov
dec
je
shlb
xchg
cs
mov
mov
add
add
pop
loopne
mov
cmpsb
lds
sub
sti
or
mov
fwait
push
aaa
loop
clc
push
ficomps
jno
shl
jge
leave
mov
jb
mov
or
ss
pop
imul
mov
push
mov
and
lds
inc
sti
outsl
loop
pop
daa
mov
repz
adc
int
fwait
dec
inc
jnp
cmp
enter
and
addl
inc
add
ror
xor
jo
lret
pop
sub
test
xor
movsb
mov
fildl
pop
outsl
xchg
xor
pop
sbb
ret
sub
outsl
pop
sbb
mov
stc
push
f2xm1
dec
mov
rorb
push
jge
jno
xchg
inc
call
xor
push
jnp
mov
xchg
jecxz
das
fdivs
sarb
adc
xchg
jp
cs
lea
add
push
pop
fucomp
cmp
sub
push
shll
sbb
add
lea
xor
in
aad
adc
push
sub
lock
test
sbb
ret
jg
fidivl
pushf
out
pop
mov
stos
movsb
adc
outsl
mov
or
dec
inc
mov
pop
jmp
into
inc
in
dec
out
notb
loope
mov
mov
add
cltd
dec
dec
scas
dec
cmpsb
sbb
mov
in
and
test
sbbl
iret
mov
fldl
aam
out
insl
xor
push
dec
fwait
cmp
movsb
adc
jnp
in
and
sbb
shl
stos
or
xor
dec
dec
xor
inc
aas
dec
cmp
push
icebp
addr16
push
sub
inc
pop
inc
loopne
out
mov
adc
andl
mov
fwait
cmp
push
mov
rcr
shlb
xchg
leave
popf
pop
ret
shr
lret
sahf
jmp
mov
xchg
and
out
popf
jno
push
dec
inc
or
rclb
es
les
shr
mov
cmpsb
int
shl
xor
and
stc
mov
cmp
iret
and
push
adc
cmp
test
adc
loope
mov
stc
cmp
in
adc
mov
jmp
lcall
imulb
mov
cwtl
repz
pop
mov
int
pop
addb
xor
and
mov
data16
push
pop
sbb
sub
push
mov
mov
push
or
adc
pop
es
mov
mov
pop
repz
push
xchg
mov
stos
xor
xor
fwait
xchg
insb
aas
aas
icebp
xchg
add
sbb
fbstp
xchg
les
xchg
inc
xchg
decl
push
mov
mov
fidivs
fs
xchg
mov
or
inc
mov
stos
push
mov
std
mov
pop
shll
pop
push
push
xchg
sar
outsb
fistps
xor
sub
scas
xor
pushf
loopne
hlt
and
fsubrl
push
pop
aas
push
mov
shrl
xor
das
cvttps2pi
or
pop
or
pop
mov
dec
add
in
outsb
popa
addr16
xchg
add
stc
push
in
sub
int
pop
add
lock
fstl
and
cmc
or
mov
sbb
sbb
xlat
mov
add
and
int
mov
push
stc
adc
xchg
lds
cli
das
ljmp
inc
fisttps
cmp
incl
lret
outsl
int
xchg
jnp
dec
hlt
add
insl
divb
jnp
xorb
popf
out
dec
ret
stc
data16
cmpsb
stos
mov
dec
pop
adc
popa
cmc
xchg
loope
loopne
pop
pop
push
stos
xchg
jb
rep
and
inc
outsb
loop
in
mov
push
cmc
setno
lea
in
and
add
std
add
pushf
xor
in
cmp
mov
push
jae
lahf
js
xor
fbld
lcall
or
dec
adc
add
and
lods
add
icebp
movsb
mov
lods
das
push
ljmp
cmp
pop
outsl
leave
push
jge
into
inc
daa
sub
jge
jne
lcall
xlat
dec
mov
es
mov
pusha
movsb
hlt
mov
jbe
push
scas
je
jl
and
pop
mov
lods
inc
je
jb
push
cmp
pushaw
xchg
xchg
cmpsl
call
pop
dec
push
mov
scas
insb
movsl
jmp
mov
dec
leave
jbe
bound
sub
inc
adc
hlt
add
out
sbb
xchg
and
fs
cmp
or
cmc
aas
sub
fs
mov
aad
mov
dec
aam
jecxz
out
insb
xor
sahf
in
jmp
push
addb
stos
add
out
outsl
jl
int3
dec
cmp
sub
les
jecxz
xor
add
xor
imul
fucomip
and
int3
addb
jg
mov
subb
hlt
sbb
sub
cli
in
sub
loope
cmpsb
stos
test
jns
int
xchg
jnp
mov
cmp
mov
aaa
or
ja
scas
mov
stc
shlb
pop
rcrl
les
lods
pop
pop
das
stos
imul
stc
and
xchg
lret
mov
xor
sub
dec
pop
mov
jbe
jnp
dec
pop
pop
mov
push
jge
xchg
add
xchg
cmp
push
nop
mov
test
push
js
fadds
mov
sbb
popa
pop
jo
mulb
push
hlt
cli
pop
inc
mov
add
dec
push
stos
test
mov
stc
testb
mov
lcall
icebp
test
adc
and
push
lods
fwait
cmpsb
insb
lcall
sub
mov
push
repz
xchg
mov
stos
xchg
mov
ja
sbbl
dec
iret
rorl
add
popf
xor
fisubs
sti
push
loope
jge
sub
jnp
fwait
mov
stc
mov
rorl
jmp
cmc
xor
orb
xlat
or
mov
or
or
sahf
inc
mov
sbb
imul
movsb
int
pop
or
add
jo
call
stc
or
mov
mov
shlb
pop
cmp
push
cmpsb
loope
push
icebp
push
insl
scas
clc
cmovs
dec
mov
pusha
xchg
rclb
or
gs
add
outsl
test
data16
aam
or
fnstcw
mov
cmpb
cmpsb
mov
gs
cli
or
mov
jae
dec
in
fiadds
pushf
add
pop
mov
cmp
addl
mov
push
pop
pop
mov
enter
lret
push
pusha
clc
adc
adcb
in
pop
dec
lock
push
push
mov
and
and
push
sub
sbbb
sub
fildl
mov
cmc
pop
sub
or
test
pop
cmc
adc
pop
xor
jnp
cli
lcall
mov
call
sti
je
inc
push
clc
mov
subl
mov
sbb
fidivl
repnz
ret
aaa
sbb
xor
sbbb
in
sub
nop
fimull
mov
lahf
test
int3
mov
cmpsb
mov
daa
fcmovu
stos
jmp
push
mov
dec
ret
dec
xchg
ret
fmull
iret
mov
xor
out
pusha
lret
movsl
mov
cmc
sbb
pop
mov
dec
cld
mov
mov
mov
ja
dec
dec
cmp
mov
scas
mov
sahf
in
sub
pop
dec
mov
cld
mov
adc
dec
xchg
sbb
or
sub
push
insb
lds
ljmp
rcrb
sbb
push
sahf
shrb
insb
mov
sub
outsl
add
mov
xchg
sbb
sbb
std
sub
inc
push
sub
ss
aas
shr
call
repz
leave
cwtl
fs
mov
sbb
repnz
in
and
pop
pop
in
repz
push
dec
and
idivl
aaa
jbe
or
filds
mov
fs
dec
mov
out
cmp
add
add
mov
push
sbb
jb
push
mov
test
lds
pop
mov
sahf
rcll
jmp
inc
cmp
cmpsl
or
test
cmp
adcl
into
out
inc
sbb
test
jle
call
push
int
inc
cmc
jo
lods
push
nop
add
sti
scas
movsl
jl
popa
and
inc
je
ja
add
inc
lret
daa
aaa
inc
ss
sub
mov
push
xorl
lods
push
jge
in
fs
push
insb
xchg
imul
bound
sub
add
jo
and
loop
xchg
dec
pop
out
push
xor
fstl
popa
mov
in
test
xor
stos
test
and
test
aad
push
cli
syscall
add
jae
lret
push
jge
stc
xchg
rcrb
push
xlat
in
fstps
or
loope
mov
in
movsl
mov
sbb
cld
xor
xchg
sbb
lret
xor
test
dec
sub
scas
xchg
loope
js
out
je
mov
sub
push
sbb
pop
sub
mov
daa
popf
outsb
or
scas
jg
xor
xor
fcomip
cmp
xchg
rolb
add
add
mov
sub
mov
push
or
fdiv
jmp
rclb
aam
les
mov
pushf
in
dec
xor
mov
push
lret
pusha
repz
call
adc
jbe
or
sbb
pop
xchg
fwait
jbe
pushl
mov
sub
jl
mov
and
xor
andl
aaa
push
xor
test
lret
dec
lods
scas
ret
js
scas
cs
loope
jae
push
addr16
mov
push
movl
sahf
jge
add
and
pop
lcall
stos
sub
mov
mov
jge
scas
sbb
gs
aas
xchg
mov
dec
or
sub
jle
cmp
sbb
dec
xchg
ja
and
mov
outsl
popa
sub
xor
insb
lcall
enter
inc
sub
fcomp
dec
add
shrl
sbb
jns
mov
hlt
pop
lcall
xor
lods
mov
inc
lcall
aas
out
ss
ja
and
lret
and
outsb
popf
mov
adc
mov
out
filds
mov
rcrl
xchg
fsub
imul
rorb
pop
fidivrl
mov
and
pop
pop
and
test
push
ret
mov
add
inc
jns
push
jbe
jle
lea
je
pop
jno
shll
or
pop
lock
add
and
fcom
les
scas
mov
dec
aad
mov
jp
iret
cmp
testb
sbb
iret
dec
mov
sbb
fdivrs
ret
movsl
or
ja
pusha
cmp
push
xchg
sbbl
das
cmp
pop
mov
or
sub
jg,pn
ds
lret
addr16
lret
ljmp
push
push
mov
xor
xor
div
push
cmc
inc
mov
enter
jae
cmpsb
iret
pop
orb
imul
xor
aas
xor
cmp
add
addr16
gs
push
or
and
push
push
xchg
dec
push
mov
or
jg
outsb
sub
mov
aad
cmp
inc
fcoms
scas
loop
in
or
jbe
jmp
lcall
lods
nop
sbbl
inc
xchg
andl
bound
ljmp
cmpsl
mov
test
push
loop
or
push
push
sub
mov
loop
loopne
cli
pop
mov
jae
in
cltd
mov
xchg
cltd
cmp
push
mov
sbb
ret
mov
pop
fidivl
mov
fisttpl
cmp
movsb
popf
mov
insl
add
pop
inc
arpl
nop
clc
loopne
jae
into
inc
push
lods
call
push
repz
andb
push
pop
jecxz
add
dec
dec
sbb
push
in
int3
inc
sub
push
repnz
push
and
lret
xor
or
shll
fcomps
cmpsl
jmp
inc
sti
and
hlt
jo
insb
sbb
lock
sbb
push
xchg
push
jo
notl
mov
ret
lea
jns
xor
mov
shrl
dec
xlat
mov
inc
jno
inc
fwait
or
iret
test
aas
loope
sub
mov
fadds
mov
push
dec
xor
push
xchg
xor
popf
test
adc
stos
xor
or
pop
jecxz
add
mov
push
adc
inc
ficoms
push
dec
cmp
push
subl
pop
xchg
inc
inc
mov
dec
or
enter
sti
mov
fstps
jns
pop
cmp
xor
add
xor
enter
pushf
pushf
mov
push
jae
aam
cmp
pushf
sub
aam
mov
negb
mov
jnp
mov
dec
rep
imul
jmp
stc
fdivs
loope
and
cmp
lods
fcoms
pop
cmp
mov
jmp
push
cmp
mov
outsb
cmp
mov
sbb
xor
repz
repnz
or
mov
repz
pop
inc
call
scas
adc
cmp
inc
mov
ljmp
pop
inc
cltd
shld
rcl
lahf
mov
ret
or
mov
push
and
pusha
mov
mov
imul
add
std
aad
push
rorl
cs
push
and
add
fs
add
je
jl
rorb
jnp
daa
adc
inc
sub
clc
in
cmp
pop
jl
adc
fmull
and
mov
notl
mov
ret
mov
nop
pop
mov
cs
popl
mov
cld
aam
xchg
cmc
into
stc
inc
jl
insb
imul
ss
mov
inc
jne
and
mov
testb
jnp
movsb
arpl
mov
push
daa
jmp
in
push
dec
push
jp
test
enter
cli
jne
adc
roll
add
pusha
add
testl
sub
sti
sub
addr16
test
test
sub
movsb
pop
add
insb
pop
mov
mov
add
pushf
incl
xor
movl
pop
xor
inc
and
loope
data16
sub
pop
push
mov
fistl
or
icebp
popa
mov
adc
test
pop
repz
mov
pop
int3
scas
dec
xlat
inc
and
and
stos
in
aad
mov
jmp
dec
aad
add
jo
mov
pop
sub
sbb
mov
scas
pop
lcall
add
sarl
lea
xor
mov
dec
add
pop
sti
sbb
pop
fucom
push
call
test
pop
xchg
and
jp
inc
xchg
imul
leave
xchg
dec
jl
pop
mov
fdivr
fstl
sbb
mov
repnz
mov
sbb
xchg
cmp
shrl
xor
jg
xor
adc
cmpsl
insb
xchg
shr
scas
jb
repnz
jnp
mov
mov
mov
add
outsl
cmp
xor
mov
test
imul
jle
add
push
lret
cld
add
pop
jmp
adc
or
es
aas
jo
cld
or
ja
and
jmp
push
loop
lea
add
bound
icebp
stos
push
push
js
and
inc
xchg
cmc
pop
incb
lods
ds
add
add
jmp
aaa
mov
xor
cltd
dec
lock
jmp
push
imul
push
push
jno
fwait
outsl
rorb
xchg
cmp
jae
in
jo
inc
ror
push
fdivl
push
inc
sahf
adc
cs
and
or
add
adc
jo
push
cmp
mov
sub
sahf
insb
shl
mov
fdivrs
jae
repnz
clc
das
add
or
xlat
sub
push
jmp
xor
sbb
cmp
adc
insb
loope
adc
jmp
inc
adc
cli
stos
addr16
movsl
std
cmp
std
addr16
pop
sub
mov
or
xor
mov
scas
lret
push
inc
ficoms
and
je
test
dec
xchg
loopne
push
xchg
xchg
shr
xchg
clc
xchg
ja
add
dec
sub
jmp
sbb
lcall
adc
and
lcall
jne
dec
sbb
out
inc
and
js
jae
arpl
mov
stos
adc
addr16
mov
sub
pop
inc
push
rcrb
dec
js
xor
data16
scas
pop
dec
iret
mov
adc
lds
in
cmp
in
mov
mov
fbld
sbb
and
insb
nop
or
and
or
mov
lea
add
jb
mov
lods
das
push
das
dec
fidivrs
or
xor
inc
sub
jl
mov
orl
aad
jo
imul
loopne
outsb
xchg
xchg
cmp
mov
aaa
addb
ret
pop
mov
mov
ss
lret
sub
add
jo
out
push
div
loope
jge
leave
adc
inc
mov
rcr
bound
xor
cmp
adc
sub
push
xor
int3
or
mov
xchg
clc
mov
pop
add
or
mov
jb
inc
stos
shll
cmc
mov
pusha
pop
jl
adc
push
push
call
and
jo
rcr
inc
shrl
sbb
loop
icebp
cmp
addr16
aam
inc
fimull
cmpb
inc
xchg
int3
mov
mov
enter
test
mov
imul
call
xor
fistpl
int
out
inc
push
dec
loopne
push
leave
ret
xchg
and
adc
push
test
cmpsl
stos
lahf
stos
iret
jno
pop
lds
fiadds
xchg
daa
sub
mov
jo
gs
mov
push
adcb
fidivrs
or
and
mov
lcall
ret
scas
pop
mov
int3
mov
in
mov
jnp
mov
mov
cmp
enter
xor
jnp
test
cmp
rcrb
stos
xchg
add
loopne
inc
dec
adc
jno
fiaddl
lret
lcall
xor
adc
out
and
mov
mov
and
pop
and
insl
cmp
pushf
shll
arpl
lds
sahf
jo
cs
inc
inc
aaa
and
push
and
push
call
lods
adc
mov
push
cmpsb
pusha
movsl
jo
sbb
adc
mov
popf
sub
mov
rorl
pop
push
sbb
daa
test
cmpsl
fstl
jno
bound
jbe
js
pusha
mov
push
call
add
fwait
lods
ret
pushf
mov
jnp
or
and
cmp
pop
test
push
inc
pop
testl
out
sbb
or
cmp
mov
add
loopne
js
lods
xor
or
not
test
push
add
add
adc
out
mov
test
mov
enter
and
adc
test
arpl
shll
add
imul
icebp
sub
lret
je
cmp
out
aas
stos
mov
insl
mov
jge
aas
mov
imul
cmp
sbb
iret
and
movsb
jns
jp
mov
out
jge
fisttpl
inc
test
pop
mov
mov
cmp
mov
dec
sub
jmp
xchg
push
imul
sub
fimull
fwait
mov
outsl
push
test
sbb
adc
rcr
xor
sbb
shl
jg
xor
sbb
jo
dec
enter
jo
xor
test
dec
dec
pop
and
xchg
and
lret
push
icebp
push
shrl
xchg
subl
and
jne
sub
mov
rcll
int3
pop
sbb
and
gs
jb
aaa
xor
lcall
mov
or
mov
ljmp
daa
icebp
pusha
aam
lods
push
fadd
push
xor
in
adc
xor
cwtl
sbb
inc
jg
shlb
cmp
jb
testb
sbb
xchg
xor
decb
mov
cmc
stc
xor
test
mov
dec
xchg
bndstx
adcb
cwtl
and
inc
mov
mov
mov
sub
fisttpll
ja
adc
leave
mov
rorl
test
nop
pop
dec
pop
xor
adc
push
adc
addb
mov
fimull
fstpl
jge
leave
inc
subb
dec
jmp
addl
jne
pop
cmp
or
lret
hlt
fmul
xchg
mov
imul
adc
in
add
sub
stos
jecxz
rcll
ror
fstl
scas
pop
movsb
mov
jae
push
notl
les
out
mov
rclb
xor
enter
adc
gs
pop
mov
fdivrl
and
dec
pushf
xor
jl
stc
fnstsw
push
jmp
sbb
sarl
sub
adc
cmp
inc
jl
xor
hlt
adc
mov
jae
push
pop
in
sbb
jmp
jae
mov
fdivl
sbb
testb
sbb
pop
xor
pop
sub
dec
dec
xor
jp
fwait
push
xchg
xor
mov
jg
xchg
les
out
loop
push
clc
popf
inc
mov
add
xchg
mov
pop
push
aaa
and
js
sub
pop
mov
mov
mov
add
cs
mov
xor
mov
js
stc
clc
shll
mov
mov
int
fs
cmp
and
sub
rclb
popf
jmp
iret
cmp
mov
dec
stos
fnstsw
pop
out
mov
cli
lods
xchg
cs
push
pop
cmp
mov
sahf
outsl
sbb
cmp
sbb
enter
mov
roll
adc
or
ds
push
into
add
jle
jo
es
lock
out
xchg
cmp
aas
mov
outsb
sub
jg
imul
cli
fbld
call
shrl
repz
jp
mov
out
mov
fcmovnb
repz
hlt
aas
in
addr16
mov
pop
cli
int3
or
adc
xchg
pop
push
xor
mov
push
jae
inc
aaa
inc
xchg
out
ret
mov
sub
dec
or
cmc
pop
mov
not
daa
dec
outsl
stc
lds
pop
lods
pusha
cld
es
ficoms
aam
enter
sti
pusha
adc
insl
xchg
out
inc
sub
fidivrs
inc
dec
cs
adc
test
jno
popa
pop
outsb
fstps
fldcw
pop
push
aaa
call
mov
inc
jge
jns
push
loop
and
in
sbb
call
fs
addb
pusha
push
repnz
idiv
sub
mov
pop
lds
shl
xor
outsl
imul
cs
cwtl
xor
mov
dec
inc
mov
adc
or
loopne
push
inc
cmp
loop
stc
popa
jecxz
and
xor
sbb
jmp
dec
aad
enter
add
push
push
nop
mov
and
jns
rclb
jle
xlat
movsb
gs
xchg
imul
call
movsb
leave
decl
sub
test
sub
adc
mov
out
cmc
jbe
jmp
and
xchg
imul
mov
arpl
orb
mov
add
out
stc
and
js
xchg
mov
push
cltd
shll
or
add
sub
movsb
push
mov
test
jbe
dec
hlt
xchg
test
arpl
dec
cmpsl
adc
or
outsl
pop
stc
stos
sbb
pop
out
hlt
jecxz
mov
repz
repnz
sub
or
sub
adc
jne
test
inc
fdivrl
cmp
dec
jecxz
or
jp
fsts
sahf
jns
inc
mov
add
xor
int3
mov
movsl
clc
iret
daa
sub
aam
test
jmp
test
jne
and
push
repz
sub
dec
fnsave
jns
dec
adc
insb
rcrl
sub
cmp
jmp
and
loope
loop
jne
mov
jle
fistpll
mov
sub
loopne
push
addr16
xchg
sub
push
movsb
cltd
movsb
lods
ljmp
jnp
push
scas
adc
mov
sbb
jmp
sahf
jnp
jb
movsb
mov
leave
enter
scas
nop
cmp
test
push
fldenv
cmpsb
shrl
les
stc
push
push
xchg
loopne
mov
xchg
push
in
nop
xchg
outsl
ja
pop
sub
xchg
call
mov
sbb
and
mov
push
movsb
fsubrl
push
inc
pop
jp
bound
push
jo
xor
dec
sub
lea
mov
xchg
sbb
mov
cmp
movsl
cltd
dec
inc
rcll
add
mov
lret
sub
lret
mov
hlt
cli
mov
sub
push
clc
push
push
sbb
jnp
mov
or
mov
jecxz
sub
push
mov
daa
int3
dec
adc
push
sti
aam
sbb
pop
lcall
dec
shll
notb
inc
add
mov
cli
pop
sbb
inc
loop
dec
fs
insl
sub
imul
sbbl
adc
mov
cmpl
jle
fsub
cli
pop
out
fisubrl
cwtl
jb
push
inc
mov
cmp
cmp
cmp
pusha
xor
push
aaa
fisubl
fucomip
and
loop
jecxz
int3
shl
int3
cmp
in
aaa
xor
pop
fcmovb
adc
fnsave
hlt
movsb
add
divb
loopne
jns
sub
push
fisubl
out
lods
clc
lahf
and
cmpsb
jno
adc
pop
or
mov
das
mov
mov
xchg
sbb
xor
mov
jne
fistl
mov
cmp
mov
mov
jne
xor
inc
mov
xchg
xlat
or
and
rol
xor
out
fcmovu
test
cmc
push
adcl
xlat
cld
test
pop
mov
and
adc
cmc
adc
sbb
ret
cmp
test
clc
fadds
lret
jl
push
adc
add
jbe
xor
insb
mov
push
les
mov
bound
sub
rol
dec
les
push
scas
cmpsb
jbe
imul
sbb
cmp
lds
subl
push
bound
pop
into
jne
nop
xor
js
pop
jge
sbb
xchg
cmp
sbb
cs
nop
mov
dec
shll
shrb
outsl
adc
inc
pop
ljmp
fisttpl
pop
addb
pop
jmp
paddd
data16
lret
push
bound
or
cs
lods
mov
add
not
lret
or
push
insl
add
jecxz
insb
mov
and
fstpt
pop
mov
and
xchg
js
pop
add
filds
icebp
mov
pop
push
imul
adc
adc
or
and
jl
mov
cmp
iret
mov
add
sub
sub
or
insl
mov
loopne
test
push
sahf
clc
mov
add
or
lcall
clc
jb
mov
pusha
ja
jl
xor
in
sub
loop
js
adc
cmp
aam
add
pop
adc
and
icebp
mov
jle
arpl
fucomp
and
cmp
mov
mov
dec
int3
and
mov
inc
jmp
and
lcall
adc
xchg
or
lret
test
add
mov
icebp
inc
mov
push
sbb
ss
mov
pop
xchg
stos
adc
dec
jne
sbb
jle
iret
pop
iretw
xchg
dec
int3
mov
sub
sbb
adc
js
sbb
ss
add
add
or
push
pop
iret
jo
adc
mov
adc
push
scas
jno
dec
hlt
and
pop
gs
ja
sbb
test
popf
pop
clc
xor
dec
nop
cs
xor
movsb
add
jmp
jl
add
sbb
je
ja
and
js
in
sahf
addl
mov
mov
imul
add
push
mov
nop
cmp
aaa
or
inc
cmpsl
fadds
push
aad
ss
push
mov
push
repz
outsl
mov
pop
imul
mov
dec
adc
push
fs
mov
repz
mov
or
sbb
xlat
aam
int
dec
fadds
dec
arpl
sub
les
inc
jl
inc
test
rcrb
loopne
sub
jmp
mov
mov
sbb
dec
push
sti
xor
ret
testb
mov
popf
movsl
call
sub
rolb
fs
mov
xchg
in
xorb
adc
cmpsb
push
dec
pop
test
xchg
sub
outsb
out
cli
outsb
mov
in
insl
outsl
icebp
sbb
sahf
mov
sub
push
hlt
std
loopne
dec
fnstsw
stc
fidivs
out
or
mov
bound
aaa
sub
cli
scas
pushf
push
fwait
pop
jg
cmp
or
pop
scas
xchg
std
lret
mov
testl
push
ficompl
pushf
mov
pop
xor
mov
popa
sahf
xchg
push
or
incb
clc
cld
frstor
sbb
sbb
pushf
jle
not
ficompl
fsubrs
xchg
adc
ret
js
xchg
outsl
stos
add
pop
jecxz
dec
cmpsb
mov
fadds
enter
das
scas
lds
ja
loopne
pop
mov
test
sbb
fst
mov
dec
pop
stos
nop
in
push
mov
pop
cmp
mov
mov
lea
and
lds
cmp
jbe
add
jp
repnz
mov
out
mov
push
roll
sbb
test
sarl
xor
fcoml
xchg
or
addr16
enter
sbb
aam
sub
xor
loope
mulb
dec
push
inc
aas
fisubs
psubusw
jb
mov
cmpsl
adc
or
xor
push
sub
and
and
and
inc
inc
cmp
fnstsw
rolb
jmp
adc
test
lods
ret
das
push
dec
addr16
mov
xchg
daa
inc
popf
sub
push
mov
push
push
mull
mov
enter
mov
mov
push
cmp
push
pop
std
pop
repnz
mov
int3
pusha
push
out
repz
iret
shlb
pop
jge
stc
cmc
loopne
bound
dec
es
xor
les
fbld
jle
lret
mov
mov
shrl
and
jae
add
icebp
dec
jno
cltd
movsb
int3
aaa
and
push
ret
test
mov
outsb
and
pop
arpl
push
xadd
push
dec
cwtl
les
xor
jnp
jecxz
pop
mov
pop
leave
or
add
jne,pt
testb
jp
bswap
mov
xor
jne
cmp
in
and
and
or
dec
flds
cmpsb
or
sbb
ret
cmp
daa
clc
daa
cmp
add
nop
cmpl
sub
jae
pop
pop
push
mov
xor
adcb
and
call
xor
data16
mov
push
mov
jne
loopne
fdivrs
in
lahf
mov
into
in
js
push
xor
inc
movsl
int3
jno
push
cmp
push
jo
leave
lods
and
dec
lock
mul
ret
xlat
jmp
push
fstps
jp
int3
cmc
or
xor
xor
repnz
xchg
push
push
daa
lock
sbbl
jecxz
dec
mov
imul
inc
dec
mov
jns
or
jmp
mov
sahf
jmp
test
popl
mov
out
jmp
xchg
test
hlt
dec
data16
in
mov
cmp
movsl
sbb
jge
mov
jg
sub
mov
sbb
jg
inc
inc
dec
cmp
xchg
es
dec
jge
pop
fimuls
hlt
lret
adc
mov
jbe
sub
js
outsb
clc
jo
pop
sarb
dec
pop
adc
push
into
mov
inc
pop
fwait
and
push
loope
pop
mov
cmpsb
mov
cmc
stos
out
inc
les
mov
flds
mov
cmc
pop
clc
popa
clc
rcl
inc
mov
dec
test
push
fstpt
sbb
or
adc
xor
jo
int
lea
sub
subb
nop
scas
mov
pop
push
dec
adc
cmp
leave
push
in
mov
sarl
outsl
andb
mov
and
mov
scas
jbe
push
adc
fstpl
bound
cld
sub
mov
enter
aaa
aaa
enter
push
mov
into
lock
mov
pop
push
test
lods
movsl
adc
pop
testl
jp
les
roll
outsb
test
jmp
push
repz
pop
mov
das
dec
xchg
xor
adc
subl
sbb
sbb
sbbb
cs
xchg
mov
loop
mov
sbb
loope
leave
rolb
add
out
sbb
int3
sbb
pop
jle
addr16
fcmovnu
inc
es
xchg
shlb
adc
mov
fdiv
sbb
xor
mov
dec
div
dec
stos
lods
cltd
pop
and
cwtl
pop
or
pop
stos
icebp
xor
ds
test
cmpsl
push
lret
xchg
cmp
push
daa
ds
sbb
ret
sbb
popa
loope
lret
xchg
or
stc
shl
sub
push
rcrl
mov
fmull
sbb
push
xchg
sbb
xchg
push
mov
inc
push
xlat
imul
fmuls
or
or
adc
aaa
mov
popf
neg
lods
fldt
or
cmpsb
lcall
out
addr16
in
shrb
mov
cmpsb
jns
or
pop
ret
sar
or
xchg
push
sub
enter
cmc
arpl
mov
cmpsl
pextrw
mov
stos
inc
push
in
jp
scas
lods
gs
scas
sbb
pop
inc
jl
cs
push
mov
pusha
je
js
jle
into
dec
and
pop
push
data16
repnz
jp
test
outsl
cs
xchg
pop
fdiv
xchg
stos
pop
xchg
jnp
insl
xchg
jmp
sub
out
addl
dec
movsb
shld
push
repz
push
mov
outsl
movsb
push
xchg
outsl
out
adc
cmpsb
test
mov
mov
loope
push
cmpsb
or
pop
test
mov
lea
inc
ds
lahf
ljmp
mov
push
dec
test
sbb
movsbl
fs
mov
mov
ds
cmp
add
lea
fsubr
jae
sarb
das
jbe
cmp
clc
dec
outsl
out
jmp
mov
js
xor
int3
mov
mov
xor
aam
inc
inc
outsl
cmc
call
bound
addr16
xchg
jne
xor
int
inc
pop
popl
loope
sbb
popa
loope
add
out
push
mov
int
push
xchg
out
sbb
loop
lret
loopne
mov
out
stos
adc
sub
stc
dec
ss
sbb
inc
dec
mov
int3
cmp
subl
scas
addr16
sub
neg
testb
xor
cmpb
mov
jmp
call
push
arpl
scas
leave
addr16
xchg
inc
pop
mov
pop
mov
mov
inc
add
mov
adc
ljmp
push
xor
rcrl
cwtl
insl
mov
ss
fwait
mov
pop
pushf
lcall
cmp
push
shl
add
inc
adc
inc
mov
cmpsb
fistpl
popf
enter
jecxz
mov
mov
sbb
aam
add
test
lods
mov
call
insl
add
iret
mov
push
shl
mov
xor
cmpb
pop
sbb
sbb
pop
add
xor
adc
inc
dec
stos
sub
lods
cmpsb
cltd
arpl
mov
inc
neg
addr16
mov
roll
aad
add
sahf
push
push
jge
arpl
jg
or
mov
arpl
add
mov
mov
inc
ljmp
xchg
cmp
imul
or
pop
lods
stc
pop
mov
mov
lods
sbb
cli
pop
lret
mov
sarb
and
in
cmp
pop
aad
xchg
push
xchg
jns
xor
mov
adc
pop
push
mov
and
xchg
and
cltd
and
cmp
lds
cmp
xor
jge
xchg
cmp
push
pop
or
shll
inc
ja
xlat
hlt
icebp
into
cmpsb
add
notl
cmp
decb
in
repz
jmp
into
icebp
cld
pop
pcmpgtd
jl
lret
push
arpl
lcall
mov
jecxz
test
rcll
push
push
or
jl
ljmp
mov
shlb
mov
mov
xor
xor
shrb
mov
int3
cmp
mov
lock
and
jne
cwtl
cmpsl
loopne
add
lods
inc
push
mov
mov
jg
data16
sub
insl
cltd
cmp
mov
cmc
mov
cwtl
or
sub
inc
add
xchg
mov
fdivrs
and
sub
jne
ret
sbb
mov
and
cwtl
cmpl
jge
xor
and
push
imul
mov
rclb
iret
imul
lret
sahf
stos
lret
int3
int
xchg
mov
cmp
mov
sbb
lret
int3
fcomps
sahf
push
adc
outsl
repz
lods
sub
insb
adc
push
fwait
add
pusha
jle
roll
jp
shl
cmp
pop
test
js
or
repnz
push
inc
jns
fidivl
xorb
pop
xchg
dec
push
fldcw
inc
mov
sub
or
push
nop
and
lahf
jl
iret
int3
fsubs
sbb
sbb
jecxz
int3
ret
pop
imul
mov
test
rolb
lea
imul
adc
int3
mov
mov
movl
into
inc
push
mov
hlt
les
test
xchg
movsb
dec
stos
in
fcoml
lahf
push
aas
in
xchg
sub
pushf
ljmp
inc
aaa
dec
in
push
fisubrs
push
jne
and
out
insl
xor
and
or
dec
cmpsb
pop
mov
les
outsb
popf
divb
dec
inc
xor
cmp
ret
mov
sbb
sbb
loope
fstp
dec
bsf
xor
sub
xlat
mov
adc
lcall
outsb
loopne
roll
add
outsl
je
loop
scas
sbb
push
xchg
pop
jmp
xchg
jmp
push
mov
aad
rorl
int
adc
andb
pop
sahf
in
mov
xchg
clc
xlat
mov
inc
add
fcmovne
int3
mov
stc
mov
addb
loope
inc
int3
xchg
xchg
sub
mov
test
in
cmpsl
movsl
lods
lahf
pop
mov
ret
pop
sbb
cmpxchg
xchg
test
inc
out
call
test
test
adc
mov
rcr
add
xchg
into
shlb
imul
shlb
sub
add
lahf
cmpsl
dec
test
nop
jmp
mov
sbb
ret
xor
pop
sub
or
arpl
stos
ss
int3
gs
ficomps
andb
arpl
in
push
xor
in
mov
pop
lret
inc
in
fldl
and
jge
imul
xor
jo
xchg
push
out
mov
dec
xchg
fiadds
pop
pop
cmp
ss
add
stos
xchg
stos
in
jbe
outsl
jae
inc
aas
nop
pop
jbe
int3
xchg
jns
or
xor
cwtl
in
mov
sub
or
ja
dec
push
jae
ficompl
jle
cltd
sub
addr16
nop
xorb
idivl
pushf
cltd
insl
sbb
sub
stos
das
out
arpl
cltd
cmp
xchg
in
push
sbbl
xchg
and
notl
aad
mov
push
idivb
cwtl
xchg
movsl
inc
loopne
repz
mov
mov
mov
popa
scas
adc
mov
mov
outsl
aad
jge
cmp
sbb
jmp
mov
add
fwait
add
in
mov
xor
mov
push
testl
jne
lret
adc
mov
test
iret
jge
es
sbb
jbe
pop
or
inc
jns
mov
jp
repnz
or
push
std
faddl
loope
ret
fs
shll
aas
mov
xor
ror
xchg
imul
fdivrp
xchg
aam
adc
lods
xor
jmp
pop
mul
outsb
cmp
mov
mov
jge
mov
insb
jle
mov
mov
sbb
push
jno
sbb
xor
aas
push
icebp
fwait
jmp
cli
fwait
push
mov
lret
js
inc
xchg
jg
fxch
out
jg
jp
adc
mov
addr16
pushl
rcll
sub
ja
inc
ret
call
sub
out
lcall
dec
mov
push
subb
bound
push
sbb
cld
and
daa
cwtl
fiaddl
nop
cmp
push
mov
into
icebp
int3
je
divl
jno
lock
sar
lea
addr16
adc
mov
dec
addr16
dec
push
mov
test
hlt
mov
push
mov
push
xchg
add
jmp
cmp
sub
sbb
mov
les
or
cltd
xor
sub
sub
jmp
in
jb
fs
pop
push
iret
cli
xchg
outsb
jnp
je
test
in
ds
mov
clc
push
scas
pop
mov
push
push
mov
in
add
xchg
nop
xor
mov
and
loop
sti
xchg
adc
jns
add
push
hlt
inc
les
loopne
decl
jo
mov
in
dec
in
jo
xor
adc
rcll
xor
sbb
scas
ljmp
jge
decl
jb
ss
mov
outsl
fcmovne
inc
xchg
cmp
cltd
daa
mov
adc
push
shll
jl
inc
popf
sub
aam
adc
inc
or
lret
insl
dec
mov
jne
gs
rcrb
lock
cld
scas
or
push
pop
lods
jmp
sbb
xor
dec
test
pop
aam
js
pop
sbb
cmp
test
push
jns
dec
mov
fcompl
push
arpl
mov
mov
sbb
jne
notl
test
ja
push
cmp
pop
iret
out
sub
cmpsb
adc
mov
sub
out
lcall
rcll
nop
or
dec
xorb
nop
bound
mov
mov
xor
mov
rcrl
sub
lods
cli
fsubrs
out
call
xchg
lret
jno
mov
dec
inc
std
sbb
ffree
xchg
xlat
sub
mov
rcll
shl
ret
xor
mov
or
std
roll
mov
mov
repnz
ds
jecxz
das
sub
test
mov
cmp
sarb
mov
nop
in
jg
or
sub
insl
cmc
push
pop
push
mov
flds
add
add
mov
out
xlat
adc
mov
or
mov
adc
rsm
pop
lea
movsb
enter
jl
cld
loop
sub
mov
adc
and
xor
jle
dec
sub
testl
movsl
call
mov
push
dec
pop
inc
mov
xor
in
jecxz
push
push
xor
pop
sbb
ds
xchg
mov
call
dec
roll
outsb
rcrl
sub
loope
xchg
mov
aas
std
in
imul
insl
repz
pop
addr16
cmpsl
and
mov
loopne
aam
outsl
pop
xlat
add
cmc
inc
and
mov
test
cwtl
mov
inc
aaa
hlt
jae
dec
loope
xchg
xchg
mov
jle
push
movsl
pop
jne
dec
fmuls
jno
leave
icebp
inc
repnz
dec
loopne
nop
sbb
inc
clc
test
jo
push
or
popf
sub
enter
pop
xchg
push
mov
dec
xorb
pop
add
mov
nop
subb
cmp
sub
ss
lahf
movsb
sbb
mov
mov
ja
cmp
aam
inc
and
das
nop
add
lods
daa
mov
add
mov
pop
jecxz
adc
add
rcl
cltd
mov
dec
mov
xchg
lock
cmpsl
mov
ret
out
fbstp
orb
repnz
lods
or
mov
stos
sbb
or
leave
inc
mov
mov
int3
out
stc
pusha
les
pop
sbb
push
rolb
iret
mov
push
push
cmc
dec
lock
shrl
cmp
push
inc
push
adc
hlt
lahf
cmp
or
sbb
dec
mov
insb
pop
sarb
cmp
or
es
insb
xchg
repz
pop
test
je
popa
frstor
clc
mov
jge
test
int3
push
sub
ss
cmpsl
and
lahf
int
push
ds
out
inc
mov
mov
xchg
cmp
lds
sub
loope
aam
imul
sahf
push
cmp
inc
xchg
jbe
clc
fsubrl
push
cmp
xchg
out
inc
cmp
aam
sbb
add
sahf
ret
pop
dec
dec
nop
scas
les
mov
xchg
jae
cli
or
mov
sub
cmp
xchg
push
lret
ror
and
add
mov
fstps
xchg
and
stos
std
sbb
mov
addr16
in
xor
ja
xchg
pop
pop
dec
hlt
test
inc
hlt
je
mov
jbe
xor
lret
sub
sahf
leave
mov
scas
jne
mov
fisttps
pop
inc
sub
sub
scas
popa
pop
mov
xor
fwait
xchg
int3
sbb
daa
rolb
mov
sub
mov
inc
out
inc
mov
add
fcmovne
aas
add
adcb
cmp
pop
lret
mov
fwait
loop
mov
in
sti
jbe
mov
add
es
sbb
adc
movl
lock
xchg
jns
xchg
or
add
inc
mov
subb
or
shlb
inc
xchg
cmp
pushf
mov
inc
xor
fidivrl
xchg
sbb
outsb
cmp
sbbl
lea
inc
mov
jl
hlt
in
dec
icebp
and
xchg
outsl
xchg
ss
stos
push
out
and
mov
cmp
sub
xchg
pushf
mov
rorb
pop
sbb
lods
push
jne
ret
push
push
fidivl
add
mov
jnp
enter
dec
ret
lcall
mov
or
dec
cld
gs
movsl
bound
add
push
andl
mov
mov
and
ja
in
loop
dec
lock
sbb
or
stc
das
pushf
xor
pushw
mov
ret
push
cmc
sub
notb
out
ds
fistps
or
shrb
mov
cli
push
sbb
cltd
outsb
insl
arpl
cmp
and
push
sub
movsl
add
lret
xor
inc
iret
mov
lahf
fsubrs
or
fimull
push
das
fdivl
scas
xlat
mov
push
das
inc
cmpsb
hlt
xorb
mov
dec
sahf
iret
insb
sub
icebp
in
cmp
pop
pop
mov
xor
inc
call
movsl
sbb
scas
inc
mov
push
mov
xchg
popa
cmpsb
xchg
mov
sarl
sbb
cs
or
popa
cwtl
and
fldenv
and
xor
sbb
stos
arpl
mov
xchg
lods
adc
pop
orb
inc
pusha
or
push
sbb
cwtl
pop
addb
pop
arpl
jno
inc
clc
dec
mov
xchg
arpl
lods
add
sbb
adc
jge
daa
mov
xchg
fwait
mov
dec
mov
int3
xchg
and
xor
aam
sub
sbb
pop
daa
xor
mov
dec
jecxz
cld
into
fcmovnb
mov
push
xor
insb
mov
clc
dec
loopne
push
into
leave
in
in
sbb
mov
arpl
repnz
xchg
jmp
int
movsb
lods
popa
and
mov
sbb
push
jg
mov
test
cmc
mov
pop
lea
rorl
adc
pop
pusha
xchg
bound
insl
inc
sub
mov
adc
lret
cmp
push
dec
ds
aad
icebp
scas
xlat
and
and
push
jb
ss
popf
add
dec
and
popf
roll
subl
push
mov
outsb
shl
and
jp
push
dec
jmp
inc
movl
into
cmp
xor
rolb
rep
or
or
push
insb
aas
jae
iret
xor
jae
imul
lea
rcr
cmp
push
les
shll
sbb
jmp
mov
popw
test
outsb
ljmp
fld
sbb
adc
hlt
icebp
pop
or
pop
mov
icebp
or
lret
push
popa
cmp
lea
adc
pop
mov
cltd
pop
cmp
dec
dec
cli
jne
inc
jo
int3
subb
pop
mov
stos
cmp
out
test
xchg
xorps
mov
inc
or
das
pop
mov
add
and
sti
stc
insl
add
adc
dec
nop
xchg
pop
pop
push
inc
sbb
dec
fdivl
mov
push
add
lds
aam
jmp
pop
inc
ret
imul
mov
dec
repnz
call
fdivs
bound
jb
adc
sub
negb
imul
stos
imul
bound
dec
sub
test
in
pop
scas
xor
jb
insl
mov
orl
dec
test
xor
mov
out
xchg
xchg
sub
xor
mov
inc
dec
insl
imul
push
dec
nop
inc
push
jle
test
push
xor
in
adc
shl
xchg
int
test
mov
lods
ds
cli
cmp
in
out
push
jo
lods
mov
aam
pushf
add
inc
lods
sbb
stc
adc
lods
iret
pop
sub
rcrl
int3
sarl
call
fidivl
repz
and
sub
mov
xorb
movsb
dec
sub
loope
pop
add
into
inc
fld
movsl
pop
mov
cmp
lret
lods
out
in
mov
lcall
movb
iret
jbe
push
xchg
call
mov
and
dec
push
adc
mov
pop
xor
int
or
push
mov
adc
stc
fidivrs
imul
pop
loop
lock
dec
mov
fmull
sub
sub
js
fnstsw
sbb
sbb
xor
in
fidivrl
jmp
shlb
sub
jge
pop
sub
loopne
and
mov
mov
rol
outsb
mov
ds
mov
out
sbb
dec
jg
pop
sarb
in
and
jg
hlt
lods
dec
mov
fbstp
push
dec
mov
add
mov
lss
pop
aas
out
cs
sub
aad
push
mov
lahf
out
xchg
and
mov
and
cwtl
scas
mov
scas
dec
cmc
les
xor
cmp
lea
mov
add
pop
adc
cwtl
loop
sbb
ss
jo
rcrb
pop
inc
dec
push
push
cli
jecxz
mov
mov
out
lcall
in
lahf
insb
cmp
in
xchg
mov
pop
pop
fistpll
mov
out
jp
scas
xchg
lcall
outsl
mov
mov
repnz
sbb
cmp
stc
sub
sub
shrb
in
movsb
jl
ret
rcrb
fisttps
inc
or
mov
aaa
push
jo
lock
fsts
mov
sahf
dec
pop
sub
add
sbb
lcall
divb
mov
scas
sub
out
sbb
push
stc
sbb
test
mov
push
and
movsl
sbb
cmp
shlb
inc
fdivrs
jno
jae
jo
sbb
or
mov
dec
int
sbb
or
cmp
jecxz
lods
inc
insb
mov
adc
cmp
fsubl
fsubrp
outsb
call
dec
fldln2
loope
mov
cli
sbb
jle
in
xor
dec
jle
ljmp
cmp
lods
dec
jl
jl
mov
and
jmp
das
test
shrl
xor
inc
jb
stos
leave
lock
inc
icebp
aaa
lods
mov
jl
insb
int
xor
pop
jnp
xor
jl
mov
les
test
js
cmp
push
push
and
push
jp
sarl
sub
xchg
add
cmp
div
dec
scas
ret
in
cmp
std
rol
les
stc
add
adcb
jp
pop
les
push
les
mov
les
iret
mov
ret
mov
inc
fldt
rorl
movsb
add
sbb
mov
lcall
inc
lret
stos
push
movsl
xchg
xchg
rcrl
das
aam
int
push
push
aaa
fbld
lods
lcall
std
rcll
lock
pop
push
stc
es
ret
xchg
mov
push
adc
dec
inc
insl
mov
arpl
jp
mov
rorb
push
ljmp
lret
int
xchg
es
pop
pop
ficomps
cli
push
js
in
mov
sbb
mov
fs
cli
pushf
cmp
mov
jno
xor
movsb
test
adc
sub
mov
mov
push
add
mov
add
aam
cmp
xchg
rol
into
pop
and
pop
cmp
jge
lea
shll
jne
imul
push
mov
and
xor
pop
ja
pop
data16
adc
sarb
mov
aad
adc
test
mov
sub
cltd
movups
lods
outsb
mov
pushf
aas
mov
dec
pop
outsb
aam
cmp
loopne
cs
lods
ret
or
pxor
jmp
mov
into
popa
sarb
ljmp
add
cwtl
test
mov
cmp
xchg
push
enter
stos
xchg
jo
pop
sti
adc
push
scas
add
push
aaa
ficompl
mov
stos
jb
dec
push
notb
ja
ror
mov
and
mov
int3
data16
sbb
dec
or
cmp
cmp
outsb
repz
cmc
loop
fwait
imul
test
mov
or
xchg
push
and
sbb
mov
pop
push
fdivrl
push
and
ret
dec
xchg
adc
not
ret
popa
hlt
mov
ja
push
pop
inc
push
in
xor
xor
inc
insb
push
push
out
xchg
xor
sahf
mov
inc
clc
cwtl
pop
lea
inc
loop
sub
jbe
int3
test
pushf
pop
or
aas
je
out
clc
leave
push
mov
mov
lods
shll
mov
push
mov
fildll
and
fwait
bound
add
or
imul
xchg
les
testl
aad
into
dec
adc
pusha
jae
push
aas
fstpl
sahf
xor
adc
int
out
call
or
rcrl
add
fistpl
mov
test
or
pop
lods
push
xchg
aad
loope
fimuls
invd
aaa
mov
insl
jle
jo
pusha
or
pushf
lea
xor
inc
loopne
mov
adc
pop
popf
mov
test
popf
call
sbb
notb
xchg
mov
sub
lods
mov
and
bound
imul
stos
cltd
sti
jno
negb
dec
cmpb
xlat
xor
sbb
mov
sub
jnp
mov
fidivrl
clc
mov
aas
mov
xchg
sbb
push
cmp
in
call
fmull
rclb
push
fisubl
jne
mov
inc
lock
jno
lcall
jmp
mov
cmc
inc
mov
int3
jge
inc
mov
in
pop
mov
mov
iret
sub
and
shl
addb
dec
mov
popf
insl
pop
dec
jne
cmp
pop
lret
or
cmp
ja
jns
out
out
or
dec
pop
fwait
stos
xchg
pop
ljmp
outsl
dec
gs
daa
iret
pop
xchg
sbbb
fcompl
pop
adc
mov
lds
inc
ds
ret
loopne
mov
push
xchg
data16
push
gs
loope
loope
xor
pop
sti
mov
pop
js
mov
idivb
ljmp
xchg
cmc
call
cmpsl
imul
inc
enter
push
mov
xor
cmp
fcompl
frstor
or
dec
out
mov
arpl
fwait
pop
add
pop
cli
dec
repz
das
inc
lods
std
and
mov
xlat
cltd
or
cs
xchg
sub
inc
pop
cmpsl
pop
lret
inc
bound
mov
sbb
fistpl
imul
outsl
jbe
jmp
mov
es
inc
fldt
or
aas
lret
or
add
sbb
in
mov
adc
aas
mov
adc
jl
sbb
or
mov
cltd
or
js
jo
cld
movsb
test
lret
mov
fiadds
fnstsw
clc
push
lods
mov
lods
xchg
pop
adc
dec
and
push
push
cmp
in
cltd
mov
loope
int
xlat
push
mov
jbe
pop
xor
movb
mov
push
test
or
test
fisttpll
cwtl
sub
loope
xor
cmp
pop
jl
incb
ja
insb
cmpsb
mov
lea
jbe
and
fadds
lds
stos
imul
lret
cmpsb
jbe
mov
ficomps
xor
insl
lods
hlt
cmp
lock
lahf
fwait
push
inc
cmp
sub
dec
push
dec
lods
mov
dec
mov
flds
mov
mov
inc
insb
xor
sbb
xchg
dec
cmpsl
or
test
in
pushf
adc
test
or
clc
inc
hlt
push
cmp
jp
stc
in
xchg
repnz
cmp
ret
mov
lret
clc
les
jge
inc
scas
xor
fwait
push
call
lret
jmp
sbb
dec
fiadds
sub
jp
popa
pop
xchg
jl
ja
jbe
mov
in
imul
pop
cltd
addr16
enter
xor
rorl
out
pop
mov
in
jp
add
lods
push
jo
jle
sub
add
sub
or
xor
stos
fisubrl
das
adc
pop
fldenv
imul
shlb
dec
mov
cmp
loope
push
loop
in
fdivp
loopne
sub
inc
xchg
lods
mull
xchg
lcall
jg
test
ret
adc
fldenv
inc
xor
fdivrl
and
test
out
es
and
push
jnp
sarb
xchg
xchg
icebp
into
dec
jne
test
xchg
or
popf
xlat
adcb
xchg
flds
lea
fstps
loop
ror
rcr
out
mov
inc
mov
fiaddl
and
test
ja
mov
pop
mov
je
xchg
outsb
test
out
dec
sbb
jns
int3
enter
out
out
adc
jne
nop
jb
lods
or
mov
outsb
xlat
xor
and
sub
pushl
out
cmp
std
das
mov
jle
inc
mov
mov
les
xor
cmp
xchg
xchg
cmp
sub
xor
sub
aas
lods
mov
pop
notb
leave
shr
cltd
leave
dec
cmpsb
out
leave
ret
push
mov
mov
outsl
lret
sub
in
xchg
andb
in
enter
dec
jnp
insl
ds
imul
cld
cs
loope
hlt
or
pop
pop
cmpsl
add
mov
and
xchg
sub
mov
mov
js
cwtl
imul
cmpsb
arpl
loop
faddl
add
push
xor
cmc
pushf
dec
lret
jp
inc
mov
add
sub
outsb
xchg
sub
test
leave
jg
loopne
lcall
cmp
out
popf
lea
in
bound
lcall
push
jecxz
dec
cli
lock
mov
xchg
out
jae
jns
sub
cli
add
pushf
jg
cmc
pop
lea
rcll
andl
mov
pmaddwd
cmc
push
mov
mov
popf
aaa
add
pop
mov
sbb
test
push
dec
outsb
mov
loopne
fistpl
fs
pop
pushl
dec
mov
stos
out
outsl
jl
in
lret
cs
loope
cmp
fcompl
sar
push
sahf
inc
cmc
dec
jo
add
js
pop
pop
fs
stos
shl
outsl
and
hlt
clc
inc
outsl
pop
hlt
xor
mov
stc
cmp
mov
xchg
pop
mov
mov
and
bound
outsl
inc
jg
fldt
fs
add
pop
xchg
pop
push
cmp
adc
cmpsb
pop
lods
pop
fcmovne
mov
or
mov
xchg
dec
mov
loop
adc
inc
push
inc
xlat
scas
mov
sub
rep
jecxz
xor
mov
cwtl
mov
lock
rorl
pop
jg
cmpsl
scas
out
push
enter
cwtl
bound
adc
repnz
dec
test
sbb
cli
popa
jp
sbb
out
and
lcall
and
test
je
dec
fwait
gs
pop
jne
imul
cmc
aas
mov
mov
adc
repnz
dec
and
sar
add
popa
mov
lds
mov
pop
xor
lods
inc
daa
mov
movsl
fistpl
cmpsl
inc
adc
pop
push
xor
adc
xchg
fildll
xchg
sub
test
ror
loop
stc
jno
mov
mov
rcl
aad
sbb
jl
pop
mov
jnp
mov
mov
or
repz
push
cs
je
push
lahf
inc
mov
or
mov
add
push
adc
cmp
push
imul
out
icebp
and
out
outsl
mov
adc
or
inc
sub
cmpb
inc
cmp
push
jmp
loope
mov
sbb
mov
jnp
insb
in
ljmp
or
fildl
lcall
and
test
hlt
push
xor
loop
sahf
adc
out
repz
pusha
es
mov
xchg
call
sbb
xor
mov
cmp
repnz
push
push
pop
ja
push
adc
je
loop
push
in
mov
pop
xchg
shll
cmp
popa
pop
push
pop
stos
out
mov
int
push
ja
into
sarb
pop
popa
pop
les
sub
dec
mov
in
fucomi
push
jmp
lods
bswap
lea
into
jbe
push
jno
leave
lds
dec
es
adc
sub
jae
movb
movsl
test
jns
arpl
pop
clc
push
sub
pop
roll
cmp
ljmp
xor
jmp
shll
push
cmp
add
push
lcall
xchg
mov
jecxz
jae
je
xchg
lods
or
push
mov
mov
push
jne
fidivs
dec
sar
dec
or
cwtl
into
mov
jae
jns
cmpsb
sbb
call
stos
dec
js
dec
pop
shr
jmp
jecxz
inc
sub
nop
inc
push
flds
stos
sarl
movsb
push
xchg
or
outsb
pop
inc
test
fisttpll
pop
cmp
mov
insb
mov
mov
sub
ret
xchg
jnp
inc
add
leave
addr16
lahf
cwtl
xor
xchg
or
push
cmc
mov
or
jb
push
outsb
xchg
xchg
aad
roll
xchg
sub
filds
or
and
out
adc
loope
daa
mov
pop
arpl
jl
push
ja
je
iret
insl
mov
sbb
out
or
xor
add
inc
dec
repnz
inc
dec
mov
scas
mull
xchg
mov
or
scas
jo
jge
push
jle
ret
mov
pop
pop
daa
pop
cmp
int
pop
xchg
outsl
fmull
in
cmp
fcompl
in
jo
pop
add
mov
jnp
lds
gs
xor
testb
xchg
inc
mov
cwtl
push
nop
cltd
pop
scas
push
or
fisubrs
lret
inc
mov
andl
pop
and
sbb
call
fwait
push
repz
jle
imul
dec
pushf
mov
idivl
movsb
mov
or
mov
adc
or
mov
push
nop
pop
mov
icebp
xor
testb
pushf
pushf
xchg
xor
push
ja
add
sub
lcall
sub
inc
cmp
in
sbb
fadds
fbstp
ret
mov
lahf
bound
sub
arpl
lock
ret
and
xchg
fmul
fsub
fs
gs
inc
push
idivl
push
lret
cli
add
out
add
push
cmp
inc
mov
xchg
add
jp
movsl
jno
mov
lods
cmp
test
xchg
bound
cs
jmp
inc
xor
and
insl
repz
push
in
pop
movsb
push
pop
xchg
mov
pushf
or
inc
movsl
movsl
pop
mov
inc
mov
imul
lods
pop
inc
inc
xor
add
sub
sub
fistpll
in
push
pop
insb
jp
in
mov
xchg
rcl
leave
dec
pushf
pop
imul
xor
jmp
adc
cmp
pop
cmp
stos
add
and
push
pop
cmp
push
dec
je
jecxz
xor
cld
pop
mov
push
in
sub
push
lcall
adc
imul
cmp
pop
or
pop
imul
imulb
push
xor
scas
movsb
and
ja
push
in
and
mov
push
call
aaa
mov
lods
ss
xchg
add
jecxz
xchg
insl
imul
aas
mov
lcall
aad
inc
dec
daa
xor
cmpsl
push
push
cmpsl
scas
das
jae
add
mov
xchg
push
xchg
outsb
inc
add
cld
out
dec
xor
push
lcall
push
out
xor
mov
sub
lock
push
xor
pushf
data16
ret
jle
and
loope
mov
xchg
and
push
inc
pop
jb
frstor
fs
gs
mov
fcmove
aad
jne
mov
mov
test
mov
xorl
cmp
std
mov
xor
jae
ljmp
add
sbb
pop
or
dec
popa
mov
push
std
push
icebp
dec
sbb
mov
gs
sbb
pop
jb
imul
dec
mov
push
pusha
sbb
sbb
dec
mov
jmp
into
adc
dec
rep
imul
cmp
fcoms
push
and
and
push
into
mov
sub
out
push
push
aaa
xchg
dec
pop
dec
jp
push
fs
js
faddl
push
in
mov
xchg
popf
push
daa
jp
xchg
jne
xchg
gs
inc
inc
and
js
add
pop
pop
sub
imulb
shlb
popf
sub
bswap
cmp
push
xchg
sbb
lret
lcall
adc
jne
imul
je
pop
add
je
pop
push
fwait
jns
insl
insl
call
testb
jnp
hlt
js
adc
rclb
je
cmp
mov
fisttps
xor
aad
xlat
jno
or
lret
pop
xor
fbstp
out
mov
movsl
lgs
pop
xchg
out
mov
and
adc
mov
pop
out
sub
pop
fidivrs
sbb
pushf
and
push
jl
loopne
pushl
pushf
push
xor
jp
push
outsl
add
negb
pop
adc
sti
cmpsl
mov
fstp
sbb
loop
arpl
push
andb
fistps
mov
cmp
scas
push
adc
ret
leave
mov
mov
in
lods
and
imul
mov
and
jne
pop
loop
or
stos
fwait
or
outsb
inc
stos
data16
inc
sbb
aaa
mov
sbb
loope
or
mov
inc
rol
mov
dec
xor
sub
cmp
addr16
mov
fs
in
adc
lods
sbbl
push
in
pop
adc
jb
daa
mov
inc
inc
sub
pop
testb
and
popa
mov
rorl
mov
mov
xor
push
stos
lods
test
push
cmpsl
insl
stos
mov
mov
push
mov
pop
mov
inc
mov
and
xchg
adc
or
sbb
cld
addps
icebp
xchg
add
fiadds
mov
adc
pop
sub
pop
clc
fistps
cld
sub
push
scas
inc
scas
int3
jmp
and
add
mov
sysenter
and
push
cmp
roll
movsb
repz
sbb
or
fdivrl
sbb
cmp
movsl
leave
mov
pop
xor
mov
mov
popa
cmp
mov
inc
jl
sbb
daa
mov
ret
xchg
push
out
imul
mov
push
jmp
jl
negb
mov
shl
mov
adc
cmpsl
outsl
int3
dec
movsb
sahf
jmp
lock
pop
mov
pop
inc
call
ds
inc
sti
enter
outsl
lods
roll
xor
xchg
popa
mov
xor
push
pop
lahf
decb
mov
and
rcrb
mov
popa
das
sbb
ja
push
add
cmp
aam
xchg
add
test
push
subb
test
fldl
imul
popf
xchg
outsl
cmp
push
out
cmp
test
adc
sub
mov
jae
xchg
js
jns
mov
xchg
and
push
imul
jle
add
sub
jge
sbb
push
cmp
xchg
gs
adc
scas
dec
push
ss
orl
sub
enter
and
cmpsb
and
jecxz
aad
test
enter
cmp
aad
sahf
loopne
pop
rcr
sub
cwtl
les
das
pop
mov
push
cmc
sbb
lea
mov
mov
sbb
stos
xor
scas
push
xchg
mov
xchg
jmp
mov
mov
jbe
movsb
push
stos
pop
cltd
mov
imul
mov
adc
sarl
cmp
inc
or
lods
shl
loopne
in
or
push
inc
into
out
xchg
or
cli
cltd
in
adc
popl
loop
inc
dec
push
dec
fmulp
push
test
ret
lret
cmpsl
jp
aas
and
popf
jne
jns
les
xchg
cmc
test
pop
lahf
or
push
clc
ret
sub
or
aad
into
mov
mov
lea
mov
jbe
gs
inc
sbb
mov
mov
push
arpl
cld
dec
xor
or
or
add
push
mulb
mov
stos
dec
fcompp
pcmpeqw
jo
mov
cmc
ds
lds
cmpsb
das
pop
mov
sub
arpl
adc
aas
gs
hlt
cwtl
xchg
test
pop
test
cwtl
repz
or
pop
mov
jbe
sti
hlt
adc
jb
jmp
jp
dec
jmp
imul
add
inc
fnop
cltd
jle
arpl
testb
mov
jge
and
push
pushf
jmp
jo
xchg
mov
cmp
in
sbb
xchg
popa
sahf
ss
out
cmpsl
cld
test
jo
mov
xor
push
sti
je
data16
xor
aas
jns
pusha
cltd
or
add
push
push
fildll
add
shl
adc
rolb
mov
or
pop
test
jp
or
test
mov
js
ficompl
fldl
push
outsb
call
mov
scas
xor
frstor
lds
xor
sbb
and
movsb
adc
into
ss
movzbl
inc
std
sbb
mov
pop
inc
scas
dec
xor
cmpsb
xlat
or
push
push
mov
fs
js
mov
or
sbb
movsl
std
push
inc
cli
or
mov
andb
lods
mov
jbe
ss
loopne
je
mov
lahf
xlat
or
pop
or
mov
jo,pn
ss
movsb
mov
fildll
adc
das
fcmovnb
fistl
push
pop
outsb
ljmp
push
inc
push
fisubl
pop
imul
push
mov
loopne
xor
pop
ret
mov
cmpl
mov
loopne
or
mov
iret
stos
inc
outsw
pusha
out
push
jge
or
pop
cmp
stc
cmp
or
sar
jge
mov
or
pop
fbstp
mov
xor
loop
cmp
je
mov
push
lods
jb,pt
lds
xor
outsb
lret
cltd
arpl
rcll
jmp
add
or
or
push
or
mov
negl
and
and
movsl
inc
cmp
daa
std
mov
mov
add
loop
dec
outsl
jae
pop
dec
push
ja
in
hlt
outsb
sbb
push
mov
rorb
and
inc
mov
insb
push
mov
push
push
inc
ja
sub
and
xchg
add
scas
testb
pop
cmpb
cwtl
jl
xchg
aaa
jne
int
push
mov
std
das
loopne
xor
adc
mov
loop
jb
dec
int3
inc
test
in
loopne
and
cmc
scas
add
mov
xchg
jl
add
fcmovu
dec
xlat
sub
push
fsts
lock
clc
sti
xchg
in
mov
orl
rcr
or
xor
adc
lahf
cltd
clc
jno
in
pop
les
mov
xchg
dec
adc
clc
imul
shll
mov
pusha
pop
sbb
sub
xlat
mov
mov
jns
popf
dec
push
add
xlat
scas
mov
inc
inc
sub
stos
ret
sub
sub
jbe
test
xchg
cmp
mov
aam
incb
popa
jbe
arpl
push
adc
lret
xor
call
mov
jbe
xchg
ret
clc
xor
xchg
jo
arpl
or
lds
dec
nop
lcall
sbb
insl
mov
nop
cmp
mov
jmp
scas
jae
lret
dec
in
jmp
sub
mov
test
stc
lods
lcall
sbb
inc
push
fwait
xchg
jl
lahf
in
loope
xor
ja
jge
mov
adc
sbb
loopne
int3
xor
push
cmp
push
lock
lea
inc
inc
cmpl
push
je
jp
aaa
and
inc
mov
scas
das
xchg
inc
loop
jb
push
mov
or
imul
call
fidivrl
movsb
repnz
or
push
sub
jle
sbb
adc
shrl
loope
ds
ja
scas
ljmp
dec
xchg
cmp
push
dec
lods
push
scas
mov
lea
mov
out
inc
push
jb
push
mov
in
push
fistpl
and
pop
popf
dec
sbb
cli
sbb
nop
ja
mov
jno
dec
lods
stc
jae
push
xchg
inc
and
movsb
adc
adc
jns
fdivrp
push
sub
lret
push
icebp
sbb
push
and
xor
cli
stos
icebp
subl
je
or
mov
push
jne
adc
cmp
inc
in
jp
xchg
cmpsb
imul
cmp
pop
pop
inc
mov
mov
mov
or
test
gs
sbb
inc
mov
fmull
cmp
into
mov
ss
dec
xchg
lret
test
ret
fisttpl
sub
push
sbb
test
lds
lds
fistpll
push
jb
push
pushf
and
pusha
scas
xor
push
lds
loop
sahf
movsb
lea
dec
pop
insl
inc
aaa
imul
sbb
pop
add
inc
jnp
dec
lcall
inc
sbb
lods
cmpsb
sub
xor
jg
sahf
int3
inc
sub
sub
and
fstpt
imul
sub
inc
cltd
push
mov
mov
jnp
xor
cmp
aad
stc
jo
popf
cld
mov
rorb
loope
aam
sub
roll
push
sub
push
and
and
add
fnsave
jae
insb
out
jge
aas
push
pop
add
iret
pop
mov
mov
mov
movsl
pop
int
mov
cltd
mov
push
movsl
shlb
rclb
bound
mov
push
inc
enter
mov
cmp
movsl
roll
jp
sbbl
mov
jmp
pop
xchg
shrb
pop
lret
pop
in
mov
mov
inc
push
lret
scas
xchg
push
test
push
hlt
pop
xchg
add
lret
shl
out
hlt
mov
ljmp
leave
jmp
aam
sub
call
add
test
mov
mov
stos
mov
pop
ljmp
push
xchg
cmpsl
or
shlb
ds
or
push
mov
int
daa
ficompl
pop
mov
ret
jne
push
xchg
adc
repz
cmpsb
aam
pop
out
stos
push
sub
sub
lret
mov
stc
inc
xchg
pusha
xor
and
jnp
test
jae
cmp
mov
xor
sub
pop
mov
xchg
into
jns
out
mov
je
stos
js
in
xchg
fcom
jns
sarb
sub
mov
test
xchg
aaa
adc
xchg
xor
push
sub
add
and
daa
nop
cmp
mov
aad
in
adc
sbb
mov
mov
add
lock
push
fidivrs
pop
mov
mov
dec
cmpsl
mov
sbb
mov
cmc
shl
in
jno
adc
sbb
ds
dec
push
xor
rolb
pop
mov
cmp
testb
in
mov
mov
jae
mov
jle
sbb
mov
into
mov
aam
jmp
push
pop
inc
lahf
cmp
lcall
mov
aam
cmp
xchg
imul
xor
sub
pop
cmp
dec
popa
jbe
push
inc
pop
and
xor
pop
out
hlt
outsl
aam
les
mov
mov
jle
mov
jle
mov
cs
nop
jl
push
lahf
mov
fwait
pop
xor
add
iret
aam
mov
mov
lret
jl
es
inc
ds
lods
out
xor
mov
fimuls
in
adc
sbb
lds
sub
and
add
inc
aad
lret
mov
dec
out
fistps
call
ljmp
arpl
mov
push
or
dec
mov
push
sbb
sti
cmp
clc
orl
jne
hlt
pop
dec
or
cmp
loope
inc
adc
in
icebp
in
xchg
addb
sbb
pop
sub
daa
adc
inc
xor
fs
xchg
inc
fs
xor
mov
xchg
loop
adc
sbb
scas
inc
xchg
fwait
shl
pop
out
shrb
in
dec
mov
js
mov
jne
mov
shr
add
xlat
or
dec
mov
movsl
pop
stos
sahf
imul
and
fsubrs
dec
xchg
lods
shrl
pushaw
jo
call
fpatan
ss
jno
dec
ds
fsubs
popf
enter
sub
sbb
in
pusha
push
scas
and
outsb
das
movsb
push
dec
addr16
or
inc
in
iret
aas
js
daa
aaa
jns
adc
sbbb
lds
mov
fcoml
push
push
jns
jl,pn
push
adc
ret
into
xor
adc
stos
xchg
ljmp
mov
sbb
stos
and
mov
mov
iret
shlb
out
stc
idivl
hlt
adc
jnp
out
insl
es
jno
inc
sarl
pushf
cmp
shlb
mov
mov
add
fs
ret
pop
stc
xchg
loop
xchg
aam
fdivrs
add
jns
ja
mov
pop
nop
lds
or
rclb
shlb
outsl
pop
push
inc
loopne
mov
mov
push
movl
int
mul
out
adc
and
gs
mov
aad
ss
mov
pop
push
jecxz
in
pop
faddp
add
pop
fdivl
insl
push
jp
xchg
adc
loop
or
movsb
shrb
add
loopne
lahf
hlt
inc
mov
push
xlat
cmpl
sub
into
outsl
push
sbb
or
in
xor
sbb
inc
jl
int3
jecxz
fimuls
mov
movsb
subb
mov
add
push
lock
hlt
push
sub
mov
fwait
popf
or
cmp
pop
sarb
dec
pop
mov
shlb
icebp
out
data16
popa
mov
dec
pop
repz
lock
cmpsb
dec
sbb
push
sahf
sbb
out
outsl
xlat
or
ret
hlt
lods
mov
hlt
cmp
fdivrs
out
sar
lret
push
xchg
dec
cltd
mov
mov
xor
fwait
add
pop
addps
pushf
add
or
loopne
cmc
xchg
xor
and
dec
gs
sub
dec
rcrl
or
xchg
dec
jno
pop
sbb
ret
or
mov
adc
scas
mov
lock
fwait
mov
test
xor
cmp
sub
je
pop
loopne
cmpsb
xor
push
stos
loope
in
mov
or
insl
inc
push
push
dec
and
lock
and
stos
sub
ret
movsb
loop
aas
mov
inc
inc
fildl
inc
stos
cltd
push
or
dec
pop
xchg
sub
setg
sti
cmp
mov
xchg
and
out
xchg
je
jl
fldt
sub
cs
xchg
add
rorl
out
pop
inc
mov
loop
and
cmp
push
call
adc
sbb
ret
les
repnz
mov
mov
int
or
push
daa
mov
add
xor
xor
sahf
and
pop
mov
mov
pop
push
pop
dec
sti
mov
and
into
cmpl
jmp
and
lret
call
or
mov
jp
dec
cli
add
push
lcall
mov
inc
inc
push
pop
sbb
xor
push
outsb
pop
jl
iret
jo
cld
int
pushf
leave
sbb
in
leave
xchg
in
push
mov
cmp
adc
jns
push
in
adc
cli
repnz
and
inc
in
dec
mov
mov
push
xlat
into
xorl
imul
xchg
push
sbb
imul
xor
subb
testl
sbb
inc
loope
jbe
cltd
pushf
int
mov
arpl
lock
inc
sbb
in
icebp
and
mov
dec
dec
jns
in
dec
fldt
cmp
xchg
add
add
dec
mov
push
mov
scas
stos
xchg
je
mov
sbb
dec
leave
jg
sbb
aam
rorl
mov
movsb
cmpsl
movsb
fs
hlt
push
dec
xchg
push
mov
lcall
jb
push
in
insb
mov
scas
inc
lea
adc
in
mov
es
fnsave
push
xor
bound
adc
push
cmp
push
cmpsb
stos
push
out
mov
cmp
mov
adcb
mov
fcomps
popf
lahf
cmp
jb
sub
pop
xor
ss
sub
jb
vunpckhpd
jnp
into
and
aam
pop
mov
sbb
push
push
and
fnstcw
es
mov
and
jnp
mov
fiadds
sbbl
add
or
xor
and
sbb
pop
jecxz
mov
mov
pop
mov
popa
fsts
mov
cwtl
movsl
int
loope
insl
mov
stc
int
imul
ja
and
and
lret
cmp
push
mov
mov
cli
pop
stos
into
sub
push
mov
xchg
testl
cmpsl
rcrl
sub
dec
icebp
aam
jmp
shrb
cmpsb
lret
test
mov
fistpl
repnz
ja
jmp
sub
xchg
and
call
xor
xchg
scas
rcrb
mov
cmpsl
leave
xor
out
mov
loopne
testb
scas
rcrb
outsl
mov
orb
inc
push
and
pusha
add
rorb
sbb
inc
sub
mov
or
inc
mov
xor
sub
jns
in
leave
and
imul
ret
or
add
xor
lahf
clc
cwtl
push
andb
mov
fisubl
or
lods
lret
jg
xor
daa
push
aas
xchg
push
out
sbb
or
rol
in
pop
scas
push
ficoml
sbb
mov
or
mov
shl
in
and
scas
jne
jg
pop
outsl
insb
out
int3
mov
dec
mov
mov
mov
pop
cwtl
push
out
adc
dec
mov
pop
push
notb
inc
sub
push
cmp
cmpsb
addr16
cli
jg
insl
inc
arpl
js
push
xor
xchg
push
jl
call
jle
xchg
xor
inc
call
xchg
pop
mov
inc
not
cs
outsl
ret
push
adc
dec
push
ds
jnp
xor
nop
addl
dec
fldenv
add
int
inc
xor
jo
pop
stos
lcall
sbb
adc
xchg
loope
mulb
iret
jmp
dec
daa
imulb
icebp
ret
cmp
mov
int
loope
in
test
pop
sbb
lahf
jmp
popf
cld
pop
xor
mov
cmpsb
sti
leave
in
stc
icebp
sub
pop
in
enter
cmp
mov
iret
sbb
cmpsl
dec
clc
xchg
loopne
flds
adc
andl
mov
mov
xor
cld
xlat
push
mov
lods
cmpsl
xchg
pop
imul
xchg
popa
jge
in
inc
andl
mov
cld
mov
adc
push
pop
movsl
movsl
rol
mov
cmp
dec
out
adc
xchg
out
xchg
jecxz
stos
mov
push
jo
cmp
xchg
repz
xor
rcrl
cli
xchg
pop
inc
insl
adc
lret
js
jge
inc
js
div
sub
pop
shll
aam
aam
pop
xchg
mov
data16
fstps
stos
inc
mov
jae
imul
xor
ljmp
mov
cmp
inc
mov
xor
test
addb
pop
bnd
cmpsb
ds
xchg
ljmp
mov
add
inc
pop
divb
pop
cltd
ss
and
push
or
adc
fstpt
mov
int3
shrb
std
sub
js
xchg
pop
ds
push
cmp
jne
mov
test
call
aas
sti
push
bound
jo
addl
icebp
mov
scas
mov
int
or
das
jae
sbbl
cmp
loop
popf
call
loope
in
loope
gs
and
mov
out
push
andl
aaa
dec
mov
sbb
popa
or
inc
xchg
sub
add
cmp
or
pop
xor
test
mov
mov
lret
shrl
sub
sbb
div
pop
imul
mul
jb
mov
fldcw
push
mov
cmc
xor
fnstcw
addb
repz
push
dec
dec
add
push
mov
inc
scas
lods
in
xchg
adc
js
mov
aad
insb
aas
add
fnstsw
mov
xchg
and
call
xlat
xchg
fisttpll
lds
inc
insb
movsl
fdiv
out
movsl
mov
sbb
test
fcomps
push
iret
pop
xchg
jnp
inc
fwait
adc
mov
es
mov
add
fsubrl
cmc
pop
movsl
mov
push
mov
leave
dec
test
lds
xchg
mov
ret
pop
xor
inc
aas
aam
mov
sub
add
cmp
loop
test
mov
push
movsbl
dec
inc
sbb
in
xor
xor
lock
xlat
sbb
jp
adc
xor
mov
ret
shr
adc
push
mov
mov
gs
cld
jp
cli
fucom
out
mov
das
stos
lods
ffreep
fisubl
rol
dec
xor
xor
and
scas
sub
in
dec
jae
jbe
je
ja
int3
push
aad
mov
pop
or
scas
add
inc
test
iret
dec
lea
jns
xchg
leave
inc
add
inc
sub
movsl
gs
arpl
jno
mov
scas
movsb
xlat
test
add
dec
and
inc
sub
add
ret
pop
cmp
sub
mov
jmp
pop
pop
enter
cmpsl
imul
lret
je
gs
mov
jmp
xor
mov
cmpsb
pop
ret
mov
push
mov
aam
mov
jmp
push
jle
nop
xor
lahf
cwtl
pop
fsubrs
sub
sti
jecxz
xlat
fcoms
imul
mov
scas
outsl
leave
in
adc
jl
lret
push
mov
or
mov
es
pop
push
mov
nop
rol
int3
js
sahf
xchg
sbb
in
cs
popa
sbbl
add
pop
sbb
cld
scas
stc
andl
sbb
and
repz
test
sbb
pusha
xchg
add
mov
inc
scas
xchg
mov
mov
shll
loop
push
jns
xorb
lea
xchg
int
stos
scas
out
mov
sbb
ret
mov
xor
loope
sbb
testl
cltd
xor
sarb
and
hlt
lea
mov
pop
and
push
ret
jl
adc
imul
nop
xor
and
mov
lret
jns
xchg
inc
int
add
lea
mov
aad
dec
dec
lea
ljmp
inc
mov
mov
faddp
push
adc
mov
es
fwait
xor
shrl
add
je
imul
sti
add
sbb
and
dec
add
aad
inc
xor
adc
shll
sbb
les
scas
test
inc
dec
xlat
jge
cs
ja
dec
push
cli
jl
cmp
mov
test
mov
in
adc
inc
sbb
jge
add
add
mov
jbe
sbb
or
mov
dec
jmp
mov
mov
xchg
pop
int3
mov
dec
cmpsl
jb
leave
mov
dec
xlat
jg
ds
or
mov
and
or
lret
mov
and
sub
pop
les
and
scas
stos
mov
mov
sahf
subb
push
scas
movsl
mov
jne
movsl
lcall
sub
fdivrl
rolb
cmc
cld
ds
aad
xor
pusha
jle
cld
lahf
mov
pop
outsl
inc
dec
jno
hlt
inc
dec
arpl
mov
lcall
jecxz
or
mov
add
test
aas
mov
clc
fcompl
outsb
xor
push
jge
push
jmp
and
jl
addr16
or
in
jl
jnp
jle
pushl
jno
xor
rcll
mov
dec
sti
or
mov
lcall
stc
and
sbb
cmp
addr16
jnp
xchg
push
test
push
push
fistpll
dec
cmc
mov
fildl
lret
repnz
or
scas
lahf
dec
xchg
jge,pt
add
jbe
jo
jae
out
adc
in
enter
iret
cmp
and
leave
call
jge
or
imul
xor
mov
cltd
pop
int
es
inc
loopne
sahf
mov
jo
jmp
addr16
push
lods
stc
shlb
pushf
inc
icebp
xor
ret
icebp
jl
idivb
repz
or
lock
mov
jg
fisubrl
xlat
push
mov
sub
inc
out
and
pop
daa
push
pop
insb
ljmp
repz
lods
xor
daa
jo
mov
mov
hlt
and
xchg
cmp
pop
xorl
fs
push
int3
or
xchg
push
insl
leave
jecxz
dec
cmp
push
pop
addr16
sbb
push
mov
stos
adc
mov
push
jg
es
ret
or
dec
sub
clc
mov
clc
jo
fldl
xchg
mov
sbb
jne
xchg
add
test
data16
jbe
xchg
insl
sbb
aaa
loope
pop
pop
shl
arpl
test
push
jne
loop
iret
mov
enter
add
sub
pop
dec
scas
daa
int
inc
cmp
call
inc
rorb
data16
loop
xchg
xchg
xchg
ja
jge
xchg
xor
pop
mov
xor
fsubrs
outsb
jnp
into
xchg
lods
lahf
xchg
add
mov
gs
dec
push
adc
test
add
sti
xlat
lcall
or
jle
cltd
call
pop
test
push
jno
dec
jge
inc
ss
pop
push
sub
aas
jle
dec
mov
or
sbb
sarl
loop
jne
xor
movsl
jnp
leave
dec
ljmp
mov
ss
into
mov
adc
in
fiadds
pop
push
or
loope
addr16
adc
mov
in
stc
ds
pop
dec
or
push
add
add
or
loope
aas
mov
pusha
mov
xlat
sbb
push
push
jbe
pop
movl
fisubs
call
xchg
mov
sub
cmp
inc
pop
js
xchg
inc
jo
xor
call
jle
pop
adc
repnz
sbb
or
sub
mov
orl
addb
push
int3
loop
ja
loope
inc
push
xchg
arpl
dec
test
test
outsl
dec
cmc
adc
sub
dec
inc
cli
mov
sub
mov
mov
in
stos
mov
and
sub
mov
jmp
nop
arpl
and
fcoml
pop
pop
xchg
pushf
pop
in
sbb
ret
sti
jne
cmc
loope
adc
sti
orb
mov
lods
cmp
inc
repnz
cld
repnz
xor
mov
das
lea
jge
lods
pop
enter
cmp
cli
fstps
cld
sub
dec
fisubs
sar
jmp
dec
int3
aaa
in
loope
out
shr
arpl
pop
dec
testl
mov
pop
push
xchg
fstl
jbe
and
xchg
xorl
in
mov
inc
push
dec
adc
pop
dec
mov
mov
sbb
sub
push
pop
push
gs
bound
aas
xor
lcall
out
stc
mov
xchg
cmpsl
push
jbe,pn
cmp
int3
outsl
push
pop
inc
mov
es
xor
mov
mul
lahf
sbb
outsb
xor
jmp
adc
mov
push
pop
ss
push
hlt
cmpxchg
or
pop
dec
cli
mov
stos
ljmp
mov
pop
loopne
pop
xchg
cli
adcl
iret
leave
xor
add
push
pop
fidivrs
clc
cld
add
cmp
jb
mov
mov
pop
mov
mov
mov
inc
mov
push
aaa
lret
inc
sbb
push
lock
subb
pop
cmpl
xchg
jg
jb
cmpsl
fadd
lcall
push
faddp
mov
popf
inc
cltd
mov
sar
cmpsb
mov
cmc
mov
or
and
xor
dec
std
push
into
ret
stos
mov
sahf
xor
cmp
ret
add
cwtl
push
nop
inc
es
and
test
mov
loope
mov
dec
pop
ror
and
dec
xor
sbb
mov
push
sbbb
mov
lret
cmp
cmp
or
mov
dec
ret
pop
mov
in
cmc
pop
jle
lods
jns
aad
clc
cmp
repz
sbb
leave
jbe
inc
add
out
lods
pop
mov
pop
packsswb
pop
je
leave
dec
push
aam
jmp
sub
lea
pop
jle
pop
scas
push
shl
dec
mov
or
test
mov
or
lret
mov
jge
imul
movsb
inc
sbb
adc
inc
imul
inc
mov
add
sbb
loope
dec
fcompl
pop
addr16
imul
ljmp
jp
insl
inc
les
popa
enter
pop
pop
push
in
mov
push
inc
xchg
jle
or
xor
adc
lret
mov
in
or
xor
mov
and
sbb
or
xchg
pop
les
sbb
dec
xchg
inc
sub
cmp
jnp
inc
hlt
sarl
and
enter
pop
dec
cs
and
test
or
scas
and
dec
push
sub
cltd
jb
sbbb
mov
pushf
js
sbb
clc
pop
out
arpl
xor
push
jecxz
out
shrl
mov
mov
jo
jmp
cltd
adc
aad
repnz
test
add
ljmp
fdivrs
adc
enter
xchg
addr16
in
inc
mov
rorl
into
jmp
scas
cmc
lea
jg
xchg
jp
fwait
adc
mov
into
xchg
stos
mov
jg
push
inc
xchg
mov
mov
push
dec
pop
je
sbb
xchg
xlat
imul
push
and
adc
adc
das
pop
popa
ficoml
mov
test
mov
cmpsb
jnp
push
stos
dec
data16
pop
es
mov
add
add
enter
mov
repz
out
sub
call
cmp
ror
cmpsb
push
cli
lds
lock
xchg
sbb
sbb
mov
jns
push
aas
dec
ds
inc
arpl
inc
shlb
dec
pop
cmp
lock
cmp
push
mov
cmp
sbb
loopne
jecxz
mov
mov
arpl
std
std
fwait
jo
mov
scas
push
fcomps
and
mov
xchg
push
adc
add
pop
and
lods
stos
push
push
and
int
add
loop
cwtl
pop
dec
and
or
pop
int3
or
xchg
sub
int3
and
cs
mov
xor
xorl
xor
mov
jl
sbb
fcoms
adc
and
xchg
adc
mov
jle
ret
push
push
xor
jno
mov
shl
pop
mov
cmp
pusha
add
xor
jbe
rcrl
fildl
pop
test
sub
xchg
add
xor
sbb
loope
in
sbb
cmp
sub
inc
movsb
lcall
cmp
push
fdivrs
movsb
scas
or
dec
lds
inc
mov
mov
add
popf
ja
sub
pop
push
mov
das
add
jo
ret
jnp
movsl
ja
daa
sahf
mov
in
pop
jae
push
inc
push
out
loope
mov
in
aas
icebp
inc
test
pop
lea
aad
cmp
lcall
xor
inc
iret
or
pop
lret
fldl
xorl
sub
and
fs
data16
add
xchg
xor
ret
and
adc
jns
js
xchg
push
nop
push
gs
ss
jmp
roll
enter
pop
sub
sub
aaa
mov
push
pop
repnz
roll
or
test
sbb
lds
in
sbb
nop
pop
rorl
and
imul
push
or
stos
and
in
mov
ret
aad
out
flds
push
pusha
push
cmc
sbb
rcr
fiadds
xor
stos
or
mov
or
or
lahf
push
incl
in
fst
mov
rcrl
mov
shl
pmulhuw
add
sub
push
and
add
aaa
les
sbb
dec
mov
push
bound
lods
xor
mov
inc
mov
sub
cs
push
cmp
push
icebp
shlb
sbb
cs
push
sti
leave
out
xlat
cmpsl
subb
mov
inc
inc
test
pop
out
mov
inc
sahf
xor
xor
inc
lea
push
xchg
jnp
mov
sub
lcall
test
mov
rcrl
insb
mov
arpl
pop
andl
and
xor
mov
mov
jb
lods
mov
sub
mov
int3
push
pop
movsb
insb
push
pop
pop
mov
rcll
insl
inc
add
jmp
push
inc
mov
or
push
and
dec
repz
fists
mov
or
sarl
orl
xor
fs
fucomi
fsubrl
lcall
fs
or
mov
outsl
or
insl
lods
cld
jno
fisubrl
std
aam
test
sub
rorl
cltd
and
lock
mov
cld
ja
lock
int
jbe
xchg
add
lret
sbb
cmpsb
inc
repz
inc
push
mov
cli
adc
outsl
out
jo
ljmp
mov
pop
xor
hlt
lods
adc
push
das
mov
imul
xchg
inc
xchg
les
sub
dec
addr16
mov
daa
es
ja
scas
or
pop
inc
inc
out
mov
movsl
cmp
mov
mov
or
enter
movb
sbb
repnz
add
movsl
dec
rorb
rcr
dec
mov
push
test
rcll
ficompl
adc
dec
jne
sub
xchg
lret
les
push
xchg
aad
cmp
mov
push
jle
aam
xor
cmp
jne
pop
xor
jge
cwtl
out
or
insb
in
pop
not
mov
mov
jp
test
mov
jno
mov
andl
add
mov
pop
jmp
lret
xor
and
xlat
or
add
add
xor
dec
or
mov
xchg
mov
test
icebp
and
dec
push
popf
mov
fs
mov
nop
xlat
mov
sti
clc
int3
je
sbbl
scas
cmpsl
dec
test
jno
loop
lcall
sar
push
lock
cmpsl
adc
sbb
stos
inc
pushl
shr
cmpsl
movsl
and
lahf
jle
cmpsl
inc
jle
out
mov
push
fcmovbe
xchg
mov
push
incl
and
dec
cmp
cmc
sub
mov
push
jecxz
icebp
out
push
push
pop
in
fs
xchg
in
les
mov
xchg
andb
jmp
adc
fcoms
jae
jae
xchg
inc
sub
mov
or
cmpsl
into
loope
cmp
adc
in
psraw
fdiv
inc
xchg
mov
scas
pusha
negb
test
xchg
push
out
rcll
imul
push
fadds
adc
mov
pop
outsl
push
sub
cli
sahf
sub
jg
jle
jp
cmpsb
lods
fstl
dec
out
pop
cld
adc
pop
jmp
stos
out
movsl
and
push
mov
ret
push
insb
cmp
lcall
out
xchg
cld
inc
ffreep
popf
cmp
mov
pop
rorb
fimuls
mov
loop
test
xchg
rcr
xchg
sbb
and
cs
mov
push
pop
les
cs
aas
pop
and
into
xchg
jg
pop
cmpsb
mov
mov
mov
cmp
jo
mov
xchg
mov
and
popa
imul
xor
jmp
xchg
imul
mov
add
jmp
fildl
push
lods
dec
and
pop
inc
pop
popf
das
sub
add
sbb
cwtl
rorl
call
mov
mov
ds
jl
mov
js
mov
out
jo
or
movsl
test
mov
leave
fwait
or
enter
movsb
sub
cs
and
cmpsl
pop
inc
pop
xchg
or
push
mov
add
push
cltd
hlt
dec
out
les
dec
mov
mov
jg
rol
jbe
cmc
cs
mov
cmpsl
inc
pop
mov
cmp
mov
arpl
pop
cmp
insl
cmp
jae
sub
adc
jle
ja
add
mov
imul
lcall
fsts
mov
outsl
xchg
mov
cmp
xchg
sub
cmp
lods
movsl
mov
outsb
pop
add
cwtl
fisttpl
pop
sbb
mov
das
sbb
add
mov
xor
xchg
cmp
out
enter
call
iret
and
mov
mov
dec
sahf
test
cli
push
jecxz
popf
sahf
stos
jbe
mov
rclb
pop
adc
sub
clc
scas
mov
in
sbb
sbb
sbb
add
stc
fnsave
xchg
popf
mov
mov
test
push
outsl
je
jmp
sub
dec
add
push
lahf
call
out
xchg
sar
rcrb
loop
lret
outsb
xchg
sub
and
loop
je
lcall
leave
lds
daa
adc
push
pop
push
mov
imul
xor
call
pop
adc
out
enter
test
xchg
loop
dec
fidivrs
fcompl
into
repnz
jl
cmp
dec
in
lcall
addr16
pop
gs
movsl
rclb
xchg
mov
inc
dec
dec
adc
sub
mov
ja
and
sbb
adc
or
sahf
adc
rcrl
jecxz
jle
xor
jne
out
inc
clc
jae
cmp
std
mov
lock
aad
sbb
das
cmc
and
jbe
mov
clc
mov
jne
mov
jno
add
rclb
lret
pop
xor
dec
nop
mov
pusha
cmpsl
outsl
sub
adc
leave
push
push
mov
jmp
mov
sbb
ret
xor
inc
cld
out
fistps
dec
jns
insl
fdivrp
add
imul
or
out
mov
sbb
fs
mov
add
xchg
pop
jmp
mov
data16
sbb
test
das
sti
pop
ja
repnz
push
cmp
shrb
iret
mov
sbb
mov
js
sub
pop
std
pop
xchg
xor
loop
ja
jae
mov
mov
adc
sbb
loop
push
jb
mov
mov
sbb
inc
lret
aad
lahf
adc
jns
cmpsb
loope
js
and
clc
mov
mov
add
ss
ja
lcall
and
iret
adc
push
or
xlat
popf
add
add
cmp
add
cs
out
mov
mov
mov
push
jle
in
lods
inc
out
jle
inc
xor
mov
clc
push
iret
lcall
arpl
out
or
sub
hlt
and
push
mov
inc
push
sarb
fwait
or
mov
inc
mov
mov
lret
xor
mov
andl
test
adcb
rcrb
je
movsb
ds
jg
adc
fisubl
adc
leave
mov
pop
lahf
roll
popa
int
adc
cwtl
seto
aas
jae
scas
push
push
cmp
orl
mov
loopne
add
xchg
ror
inc
dec
sbb
fbstp
ljmp
sbb
mov
outsb
jnp
inc
ljmp
mov
sbb
lock
pop
std
add
jl
das
jno
lods
mov
imul
mov
pop
pop
out
mov
xchg
cs
lahf
in
arpl
mov
data16
stos
pop
popf
sti
aam
adc
xor
testl
notl
mov
rcrb
cld
jns
lahf
ljmp
movsl
out
xor
in
sbb
cli
add
add
adc
sub
in
notl
rcrb
in
ss
repnz
pop
test
nop
or
ja
xlat
hlt
std
lds
loope
lret
mov
out
push
or
insl
sub
cld
aad
incl
and
adc
or
outsl
out
mov
mov
inc
mov
arpl
cmp
fstpt
les
pushf
clc
rcrl
xchg
xor
icebp
sub
rolb
mov
push
insl
out
mov
push
stc
adc
xchg
jb
sbb
lds
dec
fildll
pusha
jo
out
or
dec
pop
cmp
js
adc
inc
std
jg
dec
cmp
or
and
mov
ficompl
mov
ss
cmp
pop
loopne
aam
mov
lods
sbb
xor
subb
aad
pop
mov
dec
sbb
jns
les
call
divl
int
fwait
das
iret
rolb
cmpsl
je
in
fsubrs
lahf
mov
mov
push
lcall
jp
mov
pop
mov
fwait
notb
sub
lea
xor
pop
inc
mov
xchg
mov
cmp
mov
mov
sbb
add
idivl
lret
ret
in
outsl
into
sub
and
pop
xchg
xchg
jle
add
test
inc
mov
push
sub
sub
adc
jmp
pop
les
cmp
cmp
das
cmp
cmpsl
push
xchg
aad
jge
sub
fsts
sbb
pop
push
shrb
jbe
adc
rcrl
dec
sbb
jecxz
out
jmp
push
addb
xchg
xor
jbe
fistl
test
fiaddl
cmp
rcr
cld
inc
in
pop
gs
xchg
movsl
rcrl
jl
cmpsl
or
shlb
cmpsl
and
pop
movsl
int3
pop
push
sub
cmpsl
test
inc
adc
push
arpl
add
jae
jmp
int
xchg
icebp
jp
or
bound
lea
push
lahf
stc
ret
xchg
sbb
leave
jecxz
in
and
mov
lods
cmovno
lods
sub
cmp
or
out
xor
inc
daa
test
cmpsl
roll
pop
sbb
out
adc
test
negb
sbb
cld
mov
mov
adc
aaa
add
jno
das
sahf
xor
daa
stos
add
adc
inc
fwait
mov
addr16
rcl
xor
cmp
sbb
rclb
jbe
xor
push
lock
das
add
pop
xchg
cmp
daa
mov
or
sbb
popf
repz
push
rcrb
mov
xchg
sub
pop
sub
out
aas
pop
insl
push
scas
lods
rcrl
cmc
in
into
shll
sub
lcall
jge
jnp
adc
scas
fwait
popa
sbb
mov
xor
jge
mov
jne
mov
clc
nop
jp
pop
aad
push
icebp
pop
mov
push
sub
adc
inc
insl
add
jno
fwait
loopne
test
dec
and
enter
sti
lahf
loope
daa
out
ja
dec
xor
and
xor
nop
jl
imul
mov
mov
fadd
mov
out
addr16
arpl
out
xor
daa
or
jmp
jbe
seto
push
pop
add
jbe
in
movsl
jp
loopne
js
xor
cmp
push
jmp
dec
or
inc
or
stos
enter
inc
hlt
lods
xchg
rcrb
mov
mov
in
jb
aam
loopne
sbb
pop
rcll
mov
jns
cmpsl
dec
insb
ja
dec
imul
notl
jnp
xchg
jo
mov
lock
rcll
pop
adc
lea
js
stos
sub
movaps
mov
int
pop
jecxz
shll
fisubs
aas
mov
in
lods
ljmp
add
idivb
and
imul
leave
cmp
mov
in
mov
sbb
pushf
shlb
pop
das
pushf
movsl
test
jnp
sub
imul
pusha
pop
mov
push
cmp
dec
fcomps
push
pusha
jp
mov
dec
jl
stos
in
and
push
lods
mov
daa
sub
xchg
inc
int3
nop
xor
and
in
popf
mov
jmp
aaa
mov
pop
and
fisubrl
pop
or
jno
test
xlat
in
xor
dec
sahf
iret
mov
mov
sbb
sub
dec
sub
jb
mov
mov
jno
jnp
leave
and
mov
xchg
mov
cmpsb
sahf
cld
sbb
aas
ret
icebp
int3
roll
dec
cmp
cld
inc
popf
daa
inc
outsl
mov
pushf
mov
jno
fnop
jbe
inc
mov
xchg
or
mov
inc
xchg
mov
cmpsb
sub
xchg
push
movsl
cmp
xchg
adc
push
or
mov
cmp
aam
or
push
adcl
dec
insl
enter
cmp
adcl
data16
jne
adc
or
xchg
inc
test
dec
dec
arpl
out
jge
dec
adc
daa
cmp
test
adc
arpl
adc
mov
scas
iret
lds
cmp
lahf
fildll
and
inc
cmp
push
mov
sbb
inc
xor
xor
jo
lcall
int
lea
adc
sub
push
imull
mov
shrb
and
push
sar
fimull
mov
adc
inc
push
dec
jns
movsb
inc
je
xchg
inc
mov
movsb
xor
stos
xor
imul
adc
in
sub
call
or
dec
mov
fnstenv
xchg
stc
sahf
mov
add
dec
mov
and
not
jno
xchg
adc
push
dec
cli
stos
jmp
xchg
xchg
jne
ficompl
push
in
aad
lret
iret
add
pop
btr
ss
testl
out
je
fxch
cmp
sub
leave
inc
mov
adc
addr16
mov
adc
rcrb
sbb
iret
and
lods
xchg
aam
sub
pop
addr16
adc
jp
add
push
jno
pusha
jb
clc
lds
sbb
xchg
jb
test
fisttpl
push
cmp
test
xchg
mov
add
imull
test
and
mov
lods
pop
add
idivb
cs
mov
enter
leave
sub
sub
in
cmc
mov
mov
bound
inc
push
hlt
jb
fisubs
fmul
ror
pop
push
in
aam
lea
shll
pop
out
sub
fs
or
jo
cwtl
push
cmpb
mov
in
mov
mov
mov
inc
bound
mov
rcll
mov
adc
sub
xor
insb
dec
mov
daa
jbe
dec
mov
repnz
xor
rep
mov
adc
add
aas
and
inc
cmp
and
cmpsl
rorb
xchg
jg
adc
mov
jecxz
inc
sub
shrb
push
mov
in
mov
dec
dec
pop
push
insb
push
arpl
ja
pop
mov
movsl
xchg
int
cwtl
aas
aad
stos
aam
mov
or
cmp
xchg
sub
mov
and
push
push
adc
enter
xor
push
int3
rorl
imul
ss
jmp
push
push
insb
adc
fiadds
ja
jns
pop
test
cltd
mov
test
mov
imul
xchg
jb
and
std
mov
popa
mov
cmpsl
shll
stos
and
popa
push
in
fldenv
cmp
insb
inc
gs
mov
mov
add
test
pop
icebp
lcall
lahf
sbb
sahf
fs
push
hlt
arpl
mov
xor
lea
pop
mov
pop
and
cmp
lea
icebp
xchg
leave
mov
push
in
jecxz
push
mov
cmpsb
mov
mov
dec
cmp
jmp
je
cmp
push
rorb
loop
test
pop
jae
xor
jb
je
sbb
leave
sbb
cmpsb
lock
test
ret
xor
loope
ficoml
mov
sub
mov
xchg
push
movsl
xchg
sub
inc
stc
or
or
sahf
stc
xchg
fistpl
insb
popa
dec
sub
aad
adc
or
out
aaa
inc
ret
or
mov
int3
test
das
sub
cmp
enter
dec
sub
lahf
cmpsl
xor
pop
int
push
rcr
lds
je
or
add
lods
push
pushf
inc
push
jg
sub
sahf
add
popa
and
inc
lahf
fisttpll
cmpsl
stc
mov
lea
push
sub
cmp
aam
jb
mov
sub
decl
clc
cli
js
add
addr16
icebp
sbb
pop
lods
xorl
add
or
arpl
shrl
or
add
xchg
mov
fiaddl
sub
and
or
push
jb
adc
out
push
dec
mov
pop
jnp
das
out
test
push
rcrl
in
add
cld
hlt
outsl
inc
jmp
test
dec
mov
sbb
jg
dec
mov
push
pop
insb
test
xchg
aad
test
sbb
dec
test
mov
jb
mov
lret
imul
hlt
aas
and
xchg
push
or
shrl
push
popf
mull
sub
in
loope
outsb
pop
xlat
xlat
ja
popa
aas
rcrl
mov
jns
out
leave
imul
pusha
xor
pop
cmpsl
lret
in
shlb
jp
pop
cli
shll
out
cmp
and
push
sbb
xor
mov
popf
jb
cmp
mov
ret
movsl
xor
jae
dec
mov
les
ffreep
sahf
mov
in
xchg
push
xor
jae,pn
jge
das
lock
outsl
mov
jns
scas
add
mov
scas
out
pop
into
lss
sbb
xchg
fucomp
imul
inc
pop
test
dec
jo
inc
lods
mov
pop
rcrb
in
shl
shl
lock
adc
sbbl
inc
in
pop
inc
add
aad
sbb
call
test
mov
orl
adc
adc
ret
xchg
jle
sahf
call
jno
inc
nop
into
mov
xor
repnz
xchg
ret
push
cmp
dec
jge
movsl
or
inc
flds
sub
mov
cmc
out
sbb
std
sub
or
psubusb
imul
mov
mov
aaa
daa
out
jno
inc
or
mov
or
es
adc
sti
mov
mov
inc
push
pop
xchg
jno
dec
shlb
xor
jle
xchg
mov
sub
outsb
inc
add
stos
add
push
inc
lahf
lcall
add
jo
xor
mov
aad
push
mov
popf
out
lahf
mov
sbb
loopne
xchg
popa
jae
mov
lods
js
jnp
fnstsw
test
fwait
loop
sarb
mov
mov
sbb
pop
repz
dec
pop
and
sbb
sarb
pop
add
xchg
ja
lock
dec
xchg
adc
xchg
jmp
sbb
push
xor
mov
xor
and
mov
jnp
stos
fdivrl
test
das
lds
xchg
push
es
inc
arpl
pop
jle
sahf
leave
insb
aas
cld
std
jns
mov
cwtl
sbb
nop
xor
mov
outsl
push
fnstsw
and
scas
out
pop
pop
int
stos
push
adc
test
xchg
icebp
outsl
scas
in
cmp
insl
sti
pop
out
dec
push
mov
mov
inc
push
inc
sub
push
cmp
jo
ja
push
or
jmp
mov
jecxz
mov
push
sarl
mov
mov
popf
mov
dec
in
adcl
pop
xorl
enter
out
imul
leave
fdivr
test
out
jmp
mov
xchg
and
sub
jbe
xlat
jge
test
pop
xor
mov
pop
push
out
mov
adc
cmp
sub
pop
mov
inc
aaa
sbb
cmp
lret
xchg
in
pop
int3
jb
lock
dec
loope
sub
pop
pop
fs
test
inc
jno
cmp
mov
jb
xchg
xor
ret
mov
push
sub
popa
jg,pt
popf
inc
xchg
pop
jmp
xorb
dec
mov
in
in
or
jge
pop
jl
inc
in
ds
test
lret
lret
stos
dec
dec
lcall
test
mov
in
in
bnd
rcl
fldl
stos
add
cmp
ljmp
push
sbb
mov
lock
cmp
out
and
clc
mov
xchg
aaa
repz
inc
cmpsl
cs
loopne
add
add
mov
cwtl
sub
cmp
insb
add
xchg
pop
movsb
ja
add
sti
loopne
sub
push
mull
xchg
push
push
sub
jbe
push
loopne
mov
xor
mov
cmpsl
push
popa
in
hlt
cmc
inc
sbb
adc
fiadds
push
push
std
mov
mov
sbb
js
sarl
les
outsl
mov
jg
adc
xor
rclb
orb
pusha
fidivl
loope
or
shrb
push
add
add
and
cmpsl
mov
sbb
push
sbb
adc
cs
sub
inc
xchg
loopne
xor
pop
pusha
mov
or
jg
lahf
or
or
test
in
repnz
push
mov
mov
mov
xor
pop
out
out
dec
inc
push
addr16
pop
push
mov
jo
ljmp
cltd
arpl
cld
push
scas
movsl
add
scas
mov
arpl
out
mov
sbb
sbb
mov
in
mov
lods
inc
lock
add
test
data16
push
pusha
cmpsl
popf
adc
or
jno
mov
rcl
aas
sbb
loope
jb
in
fnstsw
orl
cmc
cmp
cmp
pusha
mov
popf
push
sbb
gs
jmp
test
mov
cmp
push
mov
enter
fstpl
mov
sub
xchg
scas
loop
scas
js
cli
fstpt
out
in
popa
sahf
xchg
subb
subl
sub
jnp
out
andb
adc
jbe
mov
mov
loopne
inc
lock
or
jae
add
cmp
repnz
test
jecxz
mov
inc
gs
bound
lahf
sbb
mov
gs
pop
xchg
ss
lods
dec
mov
xor
lahf
mov
dec
leave
sbb
cmp
ljmp
das
or
cwtl
nop
jnp
inc
or
lock
divl
test
push
das
adc
mov
xchg
add
fidivl
hlt
mov
add
jae
mov
push
cmp
mov
push
in
mov
and
in
mov
rorl
dec
sub
insl
inc
mov
lret
or
repnz
mov
cmpsb
mov
das
aas
jns
repnz
mov
xchg
roll
push
inc
pop
stc
lods
mov
mov
dec
in
call
mov
or
add
cmpsl
cmp
cwtl
and
mov
jno
sub
out
mov
cmp
lret
loope
out
push
dec
pop
pop
fistpll
xchg
xorl
pop
push
inc
movb
std
adc
popf
cmp
insb
pop
jb
repnz
mov
push
xchg
xchg
test
out
cmpb
enter
outsl
jno
push
fisubrl
or
pop
xor
stos
adc
int3
lcall
cmpsb
dec
add
out
sub
fildl
pop
dec
xlat
pushf
lcall
push
jnp
int
dec
loop
xchg
ret
enter
leave
mov
sub
rorb
dec
add
inc
out
fcomip
and
andb
clc
out
pusha
cs
dec
fcmovb
jp
fistps
mov
clc
mov
pop
stos
mov
push
mov
shr
jp
ljmp
ljmp
push
ds
ja
sahf
and
push
or
mov
scas
fistpll
addl
test
add
mov
cld
cmc
adc
leave
inc
inc
and
lahf
popl
out
movsb
cmp
cwtl
movsl
aas
stc
test
push
cmovle
mov
sbb
mov
lahf
or
mov
into
cld
mov
push
ljmp
ja
add
ret
add
ljmp
add
shll
and
enter
or
jge
jns
fs
hlt
mov
adc
fs
jne
or
mov
mov
dec
pushf
xchg
pop
sub
or
dec
mov
xchg
push
push
pop
adc
fistpll
and
cmpsl
aaa
insl
cmp
mov
outsb
ffreep
imul
aad
in
add
int3
scas
mov
dec
inc
scas
sbbl
mov
neg
dec
inc
cs
push
into
aas
mov
mov
sbb
outsb
loope
out
push
push
xchg
pop
loopne
rorb
repnz
and
js
or
scas
mov
scas
call
inc
outsl
stos
jb
or
test
adc
das
int
adc
into
fwait
mov
cltd
jp
aaa
fcmovbe
hlt
mov
and
fnstenv
or
add
jge
cmp
mov
jmp
push
mov
add
jb
in
push
dec
fsubrs
cmp
mov
adc
imul
je
outsb
jne
clc
in
punpckhbw
mov
sbb
pop
pusha
fldl
and
lret
cmp
divl
xchg
shlb
stc
add
add
mov
ret
jg
push
dec
jo
shrl
xchg
sbb
outsl
xlat
dec
mov
stos
xchg
mov
mov
cmp
push
fldcw
sub
inc
mov
in
sub
add
jo
in
repnz
cld
pop
xchg
jbe
dec
adc
jp
lret
test
lcall
lret
add
jo
xchg
inc
jle
lds
or
or
xchg
lods
imulb
fwait
je
pop
fwait
jmp
cmp
jns
aad
push
int3
cmc
outsb
sub
dec
add
leave
lea
adc
shlb
dec
and
xorb
adc
testb
loop
mov
addr16
lock
mov
arpl
xor
movsl
xchg
sub
add
dec
xchg
loop
imul
lret
sub
adc
or
aad
dec
data16
cmp
fcoms
push
mov
xchg
cmp
fiaddl
jno
adc
sub
outsl
cmc
cmp
push
fdivr
xchg
pop
lea
mov
popa
andl
xor
push
xor
push
call
shll
jno
and
testl
aas
and
push
outsl
dec
mov
sub
xchg
mov
push
add
imul
xlat
stc
jne
mov
mov
fisttpl
mov
cld
pop
xchg
mov
fs
xchg
jmp
aad
lock
fs
out
cmp
or
subb
cmp
dec
cmpsl
and
mov
pusha
sahf
inc
fiadds
push
scas
dec
inc
cmc
cwtl
jl
mov
add
add
mov
fwait
pop
mov
push
jge
rcrl
adc
clc
mov
rolb
jns
lds
out
or
jmp
lret
xchg
sbb
inc
out
and
xor
xchg
sbb
push
push
push
js
pop
loopne
arpl
jmp
in
test
sub
cmp
mov
neg
inc
push
lods
push
fdivl
js
das
sub
add
jne
pop
adc
xchg
ja
fadds
mov
inc
pop
dec
scas
fnstsw
rolb
mov
pop
lea
adc
test
inc
lret
jae
inc
xchg
call
lahf
fwait
add
jnp
xor
and
pop
push
pop
sub
push
inc
and
sbbl
and
mov
out
sbb
out
sbb
inc
std
mov
mov
sub
mov
jp
pop
outsb
jbe
cmc
cmp
cli
loope
aam
pop
or
xor
daa
inc
cmp
add
mov
mov
int
pusha
movsb
mov
aas
pop
je
adc
xlat
mov
cmp
push
pop
pop
std
sbb
mov
cld
push
inc
loop
not
dec
adc
and
cmp
add
fldt
xorb
sbb
lock
pop
sbb
ret
pop
sub
mov
bound
insl
outsb
jle
lea
xlat
push
mov
jmp
repz
outsl
sub
push
call
loop
fisubrl
aam
in
js
test
xor
jne
test
lds
xor
scas
ljmp
in
mov
sbb
insl
fistps
pop
jns
and
add
xor
popa
iret
scas
mov
jo
cmp
loopne
jmpw
pop
or
pop
and
xchg
and
cmp
filds
outsl
pop
inc
jo
mov
or
mov
mov
cmp
sbb
in
push
mov
adc
mov
push
leave
sti
sub
pushf
jns
das
sub
adc
jae
mov
xor
sbb
loop
mov
xchg
xor
jecxz
inc
push
leave
pop
or
pop
shl
pop
pop
pop
dec
cmp
push
dec
outsb
outsl
mov
inc
stos
add
test
fimuls
ret
ja
mov
jns
xor
out
push
ljmp
push
sub
mov
mov
test
pop
jl
cmp
fs
inc
mov
into
jo
add
pop
add
xor
pop
fbld
mov
clc
scas
mov
cmc
mov
dec
test
in
jbe
ljmp
push
cmpsl
insl
pop
adc
or
stos
xchg
add
sbbb
fcomp
xor
sbb
xchg
mov
fcomi
repnz
popf
inc
dec
jle
cmpsl
shl
into
ret
cmp
sbb
shll
int3
xchg
int
mov
xchg
push
lds
xor
mov
add
pop
pop
xor
jae
shr
getsec
and
clc
in
aad
jl
loopne
lcall
jmp
mov
push
and
out
pop
int
subl
nop
sbb
cld
movb
add
hlt
loope
jg
cmpb
mov
addr16
sub
pop
ds
or
lret
and
jne
add
outsb
mov
and
xchg
mov
mov
and
ret
adc
rol
mov
pushl
inc
pop
fdivr
outsl
lret
dec
rcl
jge
mov
sbb
dec
or
lcall
cltd
fldcw
lods
jmp
dec
xor
jmp
add
fnstsw
lods
pop
pop
or
orps
push
sub
mov
bound
xlat
or
sbb
gs
lret
shl
and
addr16
push
or
xor
addr16
ds
scas
adc
test
mov
adc
fsubrl
cli
mov
mov
or
push
jp
xor
mov
xchg
jns
daa
pop
mov
add
cmp
lods
stos
pushf
outsb
ljmp
flds
fnsetpm(287
jp
movsl
add
xchg
xchg
sbb
shrb
push
or
lret
jp
push
push
addb
lcall
insb
in
in
jnp
push
and
fnstsw
lds
xor
movsl
add
jo
xchg
add
ljmp
das
scas
lds
dec
call
rorb
push
mov
scas
xchg
in
mov
mov
push
daa
int
push
lds
pop
sbb
lahf
inc
push
dec
aad
nop
mov
pop
out
jp
mov
inc
and
in
lds
push
icebp
rol
rcrb
test
lahf
mov
outsb
lds
popa
sub
outsl
loop
outsl
dec
dec
aas
dec
mov
popa
enter
ja
mov
hlt
insl
cltd
ja
jp
cmp
das
stc
add
divl
int
nop
sbb
push
xchg
scas
xchg
push
xchg
xor
gs
cmp
mov
adcl
jmp
jecxz
sti
dec
mov
pop
jnp
xor
pop
aaa
mov
push
test
xchg
adc
sbb
inc
in
sbb
push
inc
insw
rcl
mov
adc
pop
sub
lods
jecxz
test
mov
mov
pop
inc
lods
push
sub
imul
xchg
rcl
adc
shll
push
pop
in
mov
adc
xchg
jl
test
mov
lods
lahf
inc
jne
push
xor
imul
ss
popa
jne
scas
or
popf
mov
xchg
leave
in
or
js
movsl
imul
pop
push
aad
ja
lods
lods
and
and
jbe
mov
mov
mov
lret
jae
cmp
fisttps
sbb
add
aas
xor
dec
mov
and
pop
mov
inc
mov
movsb
push
add
pushl
iret
test
fisubl
fdivp
mov
mov
xchg
pop
ljmp
mov
cmp
mov
movsb
loop
scas
mov
push
adc
add
scas
aam
popa
xchg
xor
inc
lret
int
ret
or
popa
mov
flds
enter
insl
bound
adc
daa
cmp
dec
mov
fildll
xchg
mov
inc
aaa
popa
dec
aaa
repnz
xor
lds
push
mov
ja
ljmp
jge
sub
cli
cmpsb
sbb
ljmp
push
ja
jnp
adc
or
popa
inc
fdivrs
pop
pushf
adc
sahf
cwtl
int
xchg
lock
xchg
nop
mov
hlt
or
jae
sahf
mov
xchg
sti
sub
xorb
or
or
push
icebp
or
fdivrp
cmp
das
xor
mov
in
addr16
and
ret
insl
pop
divb
pop
aam
xor
or
das
push
call
iret
pop
lret
data16
mov
xor
faddp
ret
or
add
pop
pusha
mov
fsubl
sbb
push
das
xlat
jmp
aaa
add
inc
mov
mov
inc
js
dec
std
push
lcall
shlb
xor
lock
outsl
outsb
adc
subl
xchg
jo
movsl
cmc
push
lahf
cli
push
std
mov
lds
add
inc
into
mov
lcall
test
and
insb
xchg
nop
cmc
jns
enter
daa
sbb
nop
movb
jmp
out
mov
mov
daa
sub
adc
lods
hlt
sub
push
test
out
pop
mov
cmp
mov
mov
fildl
fucomip
rorb
or
inc
pop
arpl
cmp
sti
cld
in
sti
jne
das
pop
add
leave
mov
xor
subb
add
or
mov
push
out
lret
lcall
add
xor
shll
dec
enter
js
das
mov
dec
jns
ds
or
movsl
int
xor
jge
add
mov
sub
hlt
sti
xlat
xor
mov
dec
ljmp
jae
fcoms
out
ljmp
sub
fsubrs
xchg
xchg
pop
xlat
cmp
xor
xchg
enter
and
xchg
sahf
mov
pushf
mov
inc
rorl
shrb
jl
push
hlt
fists
dec
sub
daa
out
lcall
test
and
clc
jns
sub
test
mov
shl
xchg
cs
xlat
adc
aaa
jno
in
aad
jne
icebp
out
push
insl
orl
insl
fldenv
sub
mov
test
push
mov
mov
xchg
mov
leave
xchg
rorb
pop
mov
dec
scas
mov
mov
xchg
or
mov
cmp
xor
subl
dec
aad
pop
iret
ljmp
ds
sbbl
sub
mov
shr
hlt
mov
popl
xlat
insb
dec
ja
in
test
push
inc
xor
sub
jbe
cli
and
pusha
jae
out
stos
lret
mov
fmull
push
pusha
mov
push
loope
popa
mov
fdivl
or
sahf
add
jo,pn
adc
icebp
and
mov
shr
repnz
xchg
stos
or
cld
pop
ret
sub
push
loopne
mov
cmp
xor
push
push
das
sbb
jmp
out
test
jo
jno
daa
lret
loop
das
xchg
mov
mov
adc
push
add
push
sbb
sbb
xchg
stos
fistpll
fnstenv
sbb
cmp
out
mov
test
and
pop
lret
dec
sbb
sub
add
or
inc
mov
mov
mov
inc
clc
enter
out
mov
lds
icebp
sbb
mulb
add
jge
das
xor
cmp
xchg
mov
or
pusha
out
cmp
pop
ja
jp
cmovs
out
push
and
jno
ret
movsl
mov
add
inc
bound
pop
push
mov
insb
es
sbb
cmc
mov
cli
or
add
xchg
iret
jne
enter
lret
js
jle
push
enter
filds
cmp
sub
out
aaa
pop
pop
aad
xor
int3
push
push
cld
fld
dec
fistps
rclb
adc
iret
fwait
aam
mov
inc
test
pop
adc
adc
scas
movntps
stc
sub
out
loopne
jge
arpl
std
xor
xor
loop
cmp
xor
push
dec
jg
pusha
pop
flds
mov
sbb
mov
push
test
in
jg
shl
add
adc
ret
pop
das
inc
fiadds
int3
jmp
mov
inc
push
mov
aam
jmp
pop
add
add
mov
fisubrl
mov
jl
add
icebp
xor
cmp
sub
loop
jo
out
cltd
sbb
ret
cmp
test
cmp
jb
lods
and
jo
js
sbb
mov
xchg
and
push
mov
pop
push
jae
lods
into
pop
sbb
ljmp
dec
fisttps
push
cmpb
lea
test
xchg
mov
rolb
pop
in
jns
and
shrb
sbb
mov
sub
cwtl
inc
in
jg
dec
test
jp
mov
rclb
fbld
scas
test
outsl
xchg
push
repnz
rclb
aam
and
data16
mov
or
aad
fcoml
mov
pushf
enter
sahf
les
push
jae
pusha
gs
gs
call
ljmp
jo
mov
xchg
xor
inc
out
decl
es
mov
sbb
mov
aad
jo
or
enter
inc
lods
ja
addb
jnp
fs
rcrb
ret
in
mov
shrb
fwait
and
shl
ret
idiv
pop
inc
call
jmp
cmp
arpl
cwtl
imul
dec
arpl
pop
subb
imul
cmp
leave
jl
jmp
inc
test
push
push
cs
cld
les
scas
rcrb
dec
lret
push
mov
ds
scas
rorb
call
push
mov
jge
and
sbb
loop
or
xchg
push
fistpl
rorl
pop
pop
xchg
mov
data16
jo
arpl
jge
pushf
lret
pop
repnz
popa
clc
push
call
cmp
scas
push
sbb
js
hlt
inc
scas
and
sub
adc
add
insb
xlat
adc
mov
sub
sbb
and
cltd
scas
mov
ljmp
aam
out
pop
adc
mov
pop
fcomps
mov
cmp
mov
addl
test
subb
sbb
push
mov
mov
insb
stc
adc
sub
test
dec
pop
jbe
add
pop
rcl
push
add
cmpsl
dec
cmp
movsl
adc
sti
mov
jl
cmpsl
fidivrs
push
mov
mov
icebp
jl
cs
movsbl
mov
repz
add
je
push
sahf
mov
aas
in
xor
leave
pop
lock
jmp
mov
mov
sub
fs
inc
push
xor
icebp
jp
cs
xor
test
lret
aas
xor
pop
aaa
pushf
pushf
add
rcrb
ja
and
pop
enter
cli
inc
xor
dec
daa
js
xchg
jg
es
outsb
dec
add
les
bound
sub
icebp
push
mov
mov
mov
dec
movsl
dec
sti
sbb
rol
dec
testl
das
aam
jns
dec
jne
loopne
sarb
mov
or
add
xor
or
jnp
nop
mov
imul
lds
hlt
out
push
mov
sub
inc
inc
outsb
dec
daa
ret
mov
and
pusha
or
and
call
idivb
mov
mov
test
ss
mov
add
shlb
sub
mov
ret
insb
into
pop
xchg
test
xchg
in
rol
mov
fxch
fnstcw
inc
loope
iret
mov
adc
test
ss
cvtpi2ps
data16
fwait
pmovmskb
add
js
push
cmp
sub
xchg
fists
xor
dec
loop
shl
mov
or
push
cld
fldenv
lret
int3
fdivs
pusha
mov
xchg
bound
sub
mov
push
pusha
mov
repnz
int
or
jo
push
xchg
repnz
jmp
mov
popa
jb
jmp
xor
xorl
adc
mov
xchg
dec
roll
add
mov
inc
fcmovbe
mov
int3
bound
lea
int3
inc
in
lcall
push
in
dec
xor
push
nop
in
data16
ss
pop
pop
cwtl
mov
inc
imul
scas
xor
add
push
cmp
jl
call
aas
sti
subb
jbe
sti
in
push
mov
or
adc
rclb
ret
mov
ja
pop
das
shl
sti
mov
mov
movb
sbb
leave
xchg
arpl
popf
je
dec
sahf
scas
or
sbb
and
mov
mov
out
cmpsl
jle
jns
mov
add
sbb
fists
int
jg
pop
mov
dec
push
pop
notb
pop
inc
jnp
and
stc
pop
push
mov
in
mov
and
inc
rorl
insb
aaa
xchg
pop
movsb
jmp
mov
push
mov
cmp
add
push
shlb
lret
xchg
pushf
mov
cmp
jge
enter
fldenv
pop
mov
bound
packsswb
adc
adc
lea
cmp
mov
nop
sub
ret
in
lcall
dec
test
cld
movsl
jae
push
rorb
pop
dec
pusha
aas
aaa
cld
or
push
cmp
into
sbb
push
xchg
mov
mov
fstl
scas
aad
cmpsl
cmp
push
outsb
sbb
orb
dec
and
jae
lods
pop
pushl
sarl
push
popa
lret
mov
lret
xchg
loop
add
popf
loopne
pop
mov
xor
push
dec
push
inc
mov
imul
mov
test
pushf
or
cmp
jmp
sarl
popa
imul
scas
xor
mov
sarb
lods
xor
push
lcall
sbbl
test
in
lock
inc
insb
ljmp
cmpsl
divb
outsb
cmp
jmp
mov
mov
sbb
sbb
push
iret
jle
mov
add
add
mov
lea
test
dec
jp
sbb
xor
mov
imull
insl
popa
lods
push
sub
ret
jne
lret
push
jbe
mov
pop
fiaddl
arpl
pop
cli
push
jle
adcb
iret
xor
loop
xor
icebp
lahf
stos
inc
iret
inc
icebp
sbb
lret
dec
sub
push
jmp
push
push
push
cmpsb
jl
rclb
adc
sub
mov
int
sbb
loop
mov
aam
add
push
fists
repnz
lods
rcll
push
imul
sbb
jmp
xchg
xchg
lret
insl
rcrl
mov
mov
add
fidivs
mov
stos
adcb
lock
cmc
dec
xchg
or
cwtl
push
lds
pop
subl
lret
cld
sub
int
pushf
cmp
popf
cmpsb
lahf
mov
inc
adc
cli
dec
adc
jo
mov
lds
mov
dec
mov
jmp
dec
xchg
sahf
and
int3
andb
test
cmp
push
push
sbbl
inc
xchg
lret
lea
dec
fildl
bound
jb
sub
jnp
std
mov
or
sub
pop
adc
lret
call
xchg
xor
leave
pusha
and
sub
adc
int3
sub
das
jle
dec
test
push
push
aad
in
add
inc
fimull
arpl
test
fstps
addr16
aaa
jmp
cmc
rorl
sub
add
dec
out
addr16
sub
pop
sub
shlb
push
das
inc
pop
scas
rol
out
and
lret
inc
je
ficompl
repz
add
or
jnp
pop
push
stos
repz
mov
popf
add
mov
push
clc
pop
pop
loope
mov
outsb
lea
shll
sahf
nopl
and
test
inc
aad
mov
ljmp
xchg
fistpll
push
adc
lock
inc
out
sbb
dec
cmp
sarl
shrb
les
xchg
inc
sti
popa
and
fnstsw
jecxz
mov
mov
mov
cmp
cli
les
add
repz
xchg
cltd
in
jns
je
lea
push
or
mov
jno
pushf
lods
call
shll
jb
xchg
inc
cld
xchg
sub
sub
xchg
adc
mov
pop
dec
xor
imul
jecxz
mov
js
xor
mov
mov
push
add
mov
pop
repz
jge
mov
test
jns
fcmovu
lock
push
push
cmp
cmp
jl
xchg
mov
fwait
jmp
shlb
in
sbb
jge
imul
sti
mov
and
and
fsubl
lahf
bound
inc
xchg
mov
inc
mov
or
dec
sbb
mov
xchg
dec
fldl
das
or
int3
lods
mov
cmpsl
xlat
and
adcb
dec
xor
in
outsb
scas
push
dec
sub
mov
gs
jmp
sbb
jmp
out
shlb
outsl
mov
jge
test
push
push
xchg
jp
ljmp
mov
push
xchg
push
rorb
add
push
sub
mov
das
stos
hlt
loope
xor
arpl
inc
mov
mov
and
sbb
pop
addb
xlat
pop
or
push
bound
cld
mov
cmp
cmc
gs
sbb
dec
dec
sub
into
out
repz
cwtl
int
or
mov
push
jp
or
fistpll
sub
jne
sub
mov
outsb
rcl
xchg
mov
dec
ss
push
jns
in
dec
ja
jae
lret
adc
or
lcall
dec
movsl
adc
xchg
punpckhdq
cmpb
push
es
mov
nop
aaa
lea
lock
xor
pop
push
xchg
xchg
mov
push
mov
insl
pop
dec
xor
jns
mov
xor
jo
xchg
mov
popa
pop
or
or
lds
cli
xchg
push
lcall
pop
js
or
xor
stc
test
mov
loope
lds
aam
out
loopne
gs
xchg
sahf
mov
push
sub
push
jns
mov
xor
mov
and
mov
jno
insl
lret
lds
aaa
xchg
popf
inc
xor
test
mov
in
pop
sbb
and
xchg
mov
fxam
mov
xchg
fsub
lret
test
sbb
push
loop
inc
inc
mov
or
test
mov
push
dec
mov
shll
ret
dec
xor
into
std
neg
icebp
cmp
imul
sbb
in
cmpsl
dec
pop
sub
jp
push
inc
iret
inc
cmc
jge
pop
dec
jae
jnp
jle
dec
jp
scas
cmp
mov
sti
sub
jns
sbb
sbb
repz
sti
push
lret
stos
adc
xor
push
xor
ds
rorb
in
adc
lahf
adc
dec
xchg
incb
jae
jb
and
jecxz
test
loope
mov
and
adc
hlt
mov
aam
repnz
dec
sub
shrl
movsl
cmpsb
mov
jbe
mov
pop
inc
mov
sbb
fwait
push
pop
loopne
ljmp
sub
pop
mov
jo
inc
test
jns
les
fucomip
push
popf
add
sarl
xchg
and
add
test
jo
cmp
sbb
lods
and
pop
fadd
call
inc
clc
pop
and
fildll
imul
cmpb
icebp
sub
inc
jl
inc
jae
lds
sti
mov
cltd
mov
data16
lea
lds
xor
aam
mov
xchg
cmp
mov
iret
mov
sbb
rcll
inc
nop
sub
sub
je
dec
xchg
jno
inc
push
xor
and
cmp
pop
cmp
pop
es
mov
imul
pop
push
loop
sbb
stc
mov
inc
pop
out
sbb
in
xchg
mov
mov
mov
xchg
adcl
aaa
shlb
sbb
mov
shll
loopne
mov
repz
push
inc
hlt
jne
imul
push
fs
ror
mov
and
sti
shl
lret
mov
xchg
icebp
cmc
mov
pop
jb
cmp
or
jge
push
pop
push
xchg
int
in
test
stos
cmp
lcall
pop
adc
sbbb
push
out
aad
idivl
add
cmp
leave
xchg
jge
sbb
test
jecxz,pt
jo
ja
std
xchg
jbe
jo
clc
mov
jmp
enter
xor
dec
mov
fnstcw
lcall
sub
pop
push
mov
xor
jl
shlb
outsl
aad
mov
subl
fiaddl
outsl
cmpsb
iret
clc
rcrb
fistpll
mov
sub
sahf
rcll
cli
sbb
dec
mov
mov
sub
pop
jmp
stos
sub
insb
or
jne
jg
inc
push
repnz
xor
jnp
bound
stc
inc
or
repnz
ret
or
aam
cmp
xor
out
stc
and
add
push
mov
test
dec
insb
and
orl
adc
push
into
pop
dec
cmp
dec
xlat
lret
gs
jmp
inc
mov
test
sti
andb
cmp
add
ret
adc
cmc
rclb
push
inc
dec
mov
call
push
or
stos
pop
push
mov
scas
aad
popa
dec
xor
jo
hlt
jg
cmp
mov
dec
rolb
es
inc
adc
sbb
push
js
xchg
xor
lret
adc
shrb
loopne
mov
insl
test
fcmovne
cld
dec
arpl
int3
xor
jnp
je
pop
cs
add
shrl
mov
out
incl
sti
and
outsl
rcrb
scas
stos
scas
cwtl
shrb
frstor
sbb
lret
mov
and
inc
mov
int
add
pop
mov
insb
fcompl
popa
lock
int
or
push
add
rcl
loope
dec
push
fsubrs
cwtl
ret
scas
push
or
loope
inc
popa
daa
insl
mov
pusha
fsubrl
ljmp
bound
loopne
lods
popa
cwtl
add
pop
mov
cli
ljmp
incb
sub
pushf
lret
inc
int
mov
xchg
pop
mov
push
fs
sbb
jle
xchg
sbb
xchg
push
add
aad
xchg
lret
xor
jg
or
ss
pop
es
movsl
shll
insb
push
stos
mov
dec
fstps
cmpsl
push
jle
and
jne
push
loope
push
xchg
lea
pop
xchg
jmp
inc
mov
decl
rcll
xchg
enterw
xchg
sbbb
fwait
xchg
dec
mov
mov
cmp
stos
out
aaa
lds
in
dec
outsl
inc
cld
aas
fdivl
adc
jno
push
movsl
cmp
std
nop
insl
filds
out
in
arpl
ljmp
push
pop
add
rcl
xchg
or
shrl
shlb
mov
fsts
cmpsb
pop
nop
pop
int3
jbe
cmpsl
inc
loopne
xor
into
jnp
popf
fmul
mov
mov
in
adc
cmp
frndint
xchg
sbb
adc
xchg
adc
or
xchg
addr16
xchg
loope
ds
inc
push
adc
lods
adc
xchg
add
inc
jne
je
scas
ret
or
pusha
test
adc
jb
and
mov
mov
inc
jle
js
js
push
popa
addr16
sbb
mov
mov
lret
loop
icebp
adc
pushf
pop
xchg
inc
aad
stc
mov
rcr
sti
mov
lods
mov
fdivs
out
cmp
sbb
dec
mov
inc
fisubs
or
pushf
repz
dec
add
in
rol
mov
adc
lea
cmpsb
mov
out
mov
and
push
xchg
loope
inc
or
shrb
sbb
push
pop
mov
testb
stc
add
pop
sahf
dec
sti
and
roll
inc
and
push
testb
cmpsb
fwait
stos
lock
inc
stos
dec
add
dec
ds
aas
xchg
add
aas
js
lret
notb
add
push
adc
data16
pop
lea
jae
clc
std
iret
add
inc
sub
mov
out
fidivl
xchg
push
ljmp
or
repz
pop
jge
into
pop
or
out
mov
or
pop
fldl
dec
add
xchg
lock
hlt
xor
pushf
sub
dec
aad
xor
pop
adc
sub
gs
mov
nop
adc
sub
or
mov
faddl
push
pop
aas
mov
mov
fistps
ret
repnz
dec
les
mov
add
xor
stos
adc
mov
mov
hlt
mov
push
sbb
cmp
push
cmp
xchg
stc
push
movsb
adc
sub
pop
aaa
cmp
mov
dec
shrl
jne
stos
adc
mov
ds
testl
mov
popa
repz
cmp
cmp
sub
add
mov
cvtps2pd
pop
mov
sbb
push
lods
add
mov
jb
pushf
loopne
fisubs
in
mov
pop
hlt
outsl
adc
mov
in
sub
add
ret
xchg
ljmp
cmpsl
aad
fwait
in
rcr
leave
jo
je
enter
fsubp
inc
fsub
pop
sub
imul
ljmp
xor
fwait
popf
jmp
push
aaa
jmp
pop
adc
add
outsb
scas
and
fimuls
mov
mov
dec
sub
jmp
testb
pop
or
in
push
scas
mov
fdivs
mov
imul
fcomip
sub
mov
sub
mov
or
push
inc
push
xor
mov
xchg
push
outsl
loop
mov
push
cli
jb
xor
jae
xchg
inc
sbb
add
add
fisttpll
pop
mov
cltd
out
negl
fsub
les
rcll
push
daa
jge
cli
mov
mov
pop
and
inc
dec
inc
aaa
or
lods
add
jne
icebp
js
inc
lcall
stc
testl
mov
push
push
fbld
xcrypt-ofb
cmpsl
sub
loope
cmc
repnz
inc
jae
and
add
sarl
push
jp
pop
imul
cld
cwtl
cmpsl
and
push
rcll
rcrl
adc
sbb
dec
call
sub
stc
shr
imul
cmp
sbb
and
inc
cmp
lahf
and
xchg
xchg
fdivrl
ja,pn
jns
jno
mov
insb
rclb
outsb
into
subl
stos
add
xchg
pushf
cltd
sbb
cltd
stos
out
in
aaa
sbb
loope
lds
push
push
mov
testb
adc
stos
ss
mov
mov
jl
movsl
je
xor
sbb
mov
dec
scas
lods
out
icebp
pop
cmp
add
inc
xchg
xor
fcoml
and
and
dec
movsb
dec
fwait
cmc
sarl
mov
cmp
outsb
inc
test
icebp
or
mov
dec
shrl
mov
pop
inc
cmpsl
mov
imul
ds
mov
in
iret
insl
js
aaa
inc
add
and
iret
dec
out
jbe
add
dec
dec
pop
xchg
mov
setge
clc
lret
push
push
cmp
fldl
sbb
scas
arpl
cmc
loope
js
inc
add
sub
xor
mov
lcall
mov
fldenv
cli
push
insl
xor
jne
popf
sub
mov
ror
inc
and
cmc
sub
pushf
push
daa
stc
jb
imul
in
clc
rclb
inc
or
or
dec
cmp
xor
mov
dec
dec
jne
push
push
fnsave
scas
push
fldcw
dec
xor
jge
in
out
scas
xor
mov
xor
add
jb
sub
in
in
roll
inc
rclb
call
testb
stos
cs
jp
mov
je
nop
lea
in
int3
test
out
test
pusha
std
and
mov
xor
ficompl
repz
shrb
xchg
push
mov
clc
fwait
mov
cmc
leave
push
scas
sbb
insl
cmpsb
xor
jo
xor
jne
jmp
pop
jl
nop
clc
mov
or
adc
sub
int
cmpsl
hlt
insl
and
or
out
jmp
push
pushf
mov
not
or
movsb
jno
iret
dec
push
aaa
lret
xchg
push
mov
daa
xchg
maxps
das
stc
outsb
and
pop
repz
lret
xchg
dec
je
into
pop
pop
jb
pop
lcall
movsl
or
push
pop
inc
jae
adc
scas
pop
sbb
fsubrl
xor
xchg
push
pop
pop
xor
repz
jns
stc
ret
adc
fwait
and
insl
push
stc
adc
dec
pop
in
push
and
test
pop
outsb
aad
and
sub
aaa
arpl
adc
rcrb
es
adc
jns
lea
lock
aam
cld
lcall
and
push
xchg
inc
add
adc
aam
push
gs
or
mov
or
lret
cwtl
mov
sbb
pop
mov
xor
cmpl
jb
cltd
mov
iret
dec
lock
xchg
jmp
scas
flds
xor
ljmp
jge
xchg
loop
push
fcmovnu
divb
pushf
jp
aas
stos
mov
inc
jl
push
and
cmp
call
xchg
inc
ds
sub
xor
jns
into
dec
add
out
push
xlat
dec
sub
mov
mov
xchg
mov
test
lahf
pop
in
into
or
cmp
and
push
testl
js
pop
or
movsl
cld
pop
imul
hlt
or
inc
lret
cmp
insb
sbbb
xchg
js
sarl
push
jge
jnp
repnz
stc
ret
sahf
push
xchg
stos
rcrb
and
imul
rcll
mov
ljmp
sahf
mov
enter
inc
cmp
in
insb
mov
cmpsb
push
and
mov
fcmovnb
icebp
push
fisubl
add
mov
or
dec
cmp
inc
mov
fiadds
test
call
sti
xor
das
outsb
lcall
add
ljmp
mov
es
std
gs
or
es
pop
decl
xchg
fnstcw
cld
jge
shl
arpl
fadd
test
stos
xchg
icebp
imul
addl
movsl
dec
mov
adcb
sahf
sub
lahf
jge
mov
leave
pop
jg
enter
addl
in
fcmovu
xchg
mov
pop
dec
and
imul
sbb
inc
sbb
and
into
stos
inc
adc
dec
inc
jae
loopne
dec
add
stos
push
stos
mov
mov
clc
je
mov
sahf
add
adc
gs
loop
push
out
pushf
ja
sarl
push
mov
push
lods
sti
xlat
jecxz
sbb
xor
xlat
fs
hlt
sbb
lods
lcall
adc
lods
por
xchg
add
adc
inc
cmc
stos
xor
jp
push
push
jae
mull
shlb
push
iret
cwtl
leave
mov
mulb
and
mov
scas
ret
icebp
adc
pop
inc
movsb
aad
mov
inc
mov
xor
cli
enter
fcoms
inc
js
mov
dec
xchg
cmpsb
pusha
lret
add
push
rorl
push
sarl
roll
test
xchg
fdivp
repnz
xchg
xchg
push
jb
data16
adc
or
inc
ret
sbb
push
in
mov
mov
jnp
mov
mov
aas
mov
inc
mov
inc
rolb
push
and
cld
jge
or
stos
movsl
mov
daa
jb
cmpb
add
adc
jl
xor
cwtl
and
sbb
jno
push
cmp
mov
leave
andl
push
push
or
ret
jmp
les
movb
xlat
repz
dec
outsb
cmpb
push
dec
fimuls
test
pop
ret
mov
es
fcoms
xchg
lcall
pop
adc
push
dec
push
lds
aam
fmull
fs
sub
sub
fnstsw
cmp
sub
fcomi
sarb
mov
cmc
mov
jmp
xor
gs
mov
adc
dec
push
or
fcmovnu
call
cmpsl
fnsave
dec
dec
std
or
sbb
mov
add
cmp
fldl
mov
cmc
mov
dec
mov
fsubrp
pop
adc
cwtl
icebp
or
das
jge
dec
push
scas
adc
sub
and
xchg
rdpmc
lret
sbb
gs
push
flds
xor
cs
or
insl
std
mov
hlt
inc
es
addr16
das
incl
fsubs
pop
mov
mov
and
sub
sar
test
je
xchg
scas
cmpsb
outsl
ljmp
jnp
cmp
cli
in
sbb
stc
ljmp
inc
daa
jno
xchg
mov
inc
pop
aam
jl
scas
testb
mov
and
insl
add
push
push
push
scas
rorl
jae
rcll
enter
adc
push
sub
dec
stos
mov
out
fimuls
mov
mov
out
shlb
lahf
sahf
mov
outsl
fwait
xor
xchg
adc
push
lahf
idivl
mov
xor
xchg
ja
cs
xchg
outsl
jle
sbb
rcrb
stc
pop
mov
jecxz
mov
mov
dec
mov
imul
enter
ret
std
out
inc
test
mov
repnz
ret
jne
cmc
fdivrs
pop
cs
sbb
jbe
movsb
repnz
mov
and
mov
out
in
xchg
jp
lcall
jecxz,pt
xor
xorl
mov
cwtl
js
push
xor
js
push
mov
dec
add
pop
rorl
dec
push
push
adc
cmp
mov
or
push
iret
jae
xchg
lock
and
idiv
lds
add
adc
jb
test
adc
stos
sbb
lret
mov
rorb
mov
push
stc
jb
and
fisttpll
jge
out
test
imul
pop
jmp
test
pop
data16
stc
cmc
ja
jo
sarb
push
jge
out
inc
cmp
js
imul
iret
test
rcl
sbb
jne
call
and
loop
inc
movsl
iret
xchg
mov
adc
add
std
mov
ret
push
or
in
fsub
addr16
cmpsl
push
jo
xchg
and
pop
adc
ror
xor
test
imul
iret
ret
cmpsl
notb
sub
push
xor
dec
jbe
fcmovne
cmc
andb
mov
inc
add
pop
icebp
in
lret
enter
in
push
cwtl
std
mov
sbb
daa
pop
xchg
arpl
call
mov
push
arpl
ret
lods
mov
mov
mov
clc
andl
jmp
mov
dec
push
loope
inc
lds
iret
mov
mov
mov
pop
mov
mov
cmp
idiv
sub
dec
lds
pop
fsubr
clc
adc
or
mov
lret
cltd
cmpsb
mov
sbb
push
movsl
push
mov
loopnew
xor
stc
push
popf
pop
and
stc
mov
or
fsts
jo
in
sub
lahf
rclb
fs
jmp
adc
mov
addr16
rorl
pushf
mov
jle
mov
gs
push
xor
data16
mov
subb
push
hlt
loop
dec
icebp
loopne
and
stos
mov
daa
cmp
dec
cltd
enter
rcrl
test
in
int3
loopne
hlt
int
adc
js
lret
testl
imul
sub
repnz
pop
stc
pushl
shl
xchg
add
into
dec
ss
hlt
add
lds
mov
rclb
pushf
and
mov
cmp
mov
shll
xchg
out
jg
cs
sarl
xchg
mov
pop
into
ss
testl
pushf
push
sbb
mov
test
add
ss
rcr
adc
dec
inc
in
out
test
sub
push
lods
rorb
ljmp
ljmp
mov
rcll
shlb
and
cmpsl
mov
sub
rol
adc
sbb
dec
enter
loopne
pop
jae
sti
out
in
inc
push
and
xchg
testl
das
les
or
push
xchg
cmpsb
pop
filds
jg
sub
push
cmp
pop
lds
dec
pop
gs
sub
adc
mov
mull
mov
fdivr
cmp
sbb
inc
xchg
pop
adc
lds
insb
mov
mov
mov
bound
xor
push
inc
mov
out
mov
pop
mov
sbb
setb
pusha
cwtl
or
icebp
inc
fdivl
loopne
sbb
adc
xlat
bound
push
hlt
out
push
inc
int3
fisubrs
sbb
outsb
mov
adc
scas
adc
daa
cmc
inc
xchg
jg
mov
insb
and
loopne
aad
xor
cmpsb
dec
in
lcall
sbb
cmp
ret
lods
jle
in
pushf
jnp
push
or
adc
in
aam
xchg
jnp
inc
out
mov
lds
push
loopne
push
dec
and
dec
cmp
outsb
push
pop
movl
inc
cmp
int
fcompl
jge
mov
lret
jmp
jl
or
pusha
xor
in
push
cltd
xlat
jo
mov
pop
sub
sahf
cmpsb
dec
in
lret
out
popf
iret
hlt
dec
jnp
jae
add
or
inc
pop
push
cli
inc
lock
cmc
stc
cld
adc
ficoms
imul
out
add
shlb
sahf
add
insb
das
pop
rorl
sarl
stc
xchg
mov
jnp
cmp
loope
dec
xchg
outsl
adc
out
mov
jb
dec
adc
or
in
jp
ret
and
icebp
add
pop
push
vpmovzxbd
dec
cmp
je
jmp
mov
inc
out
jle
push
cmp
jo
mov
ds
mov
pop
xchg
es
test
and
pop
mov
pushf
popa
inc
push
or
sahf
xchg
iret
bswap
and
cmp
dec
fistps
fsub
insb
out
out
hlt
rclb
fistps
push
inc
or
ja
aas
jl
cmp
mov
pop
nop
sub
aaa
fs
or
arpl
dec
jmp
push
jnp
mov
push
inc
adc
in
fwait
idivb
mov
xchg
mov
push
push
lods
xor
pusha
out
inc
cmc
xchg
mull
shlb
icebp
cmp
rclb
test
inc
les
mov
es
xchg
add
jecxz
sbb
push
add
add
ret
cmp
int
adc
negb
scas
and
enter
and
subb
jb
mov
sarb
sbb
lret
cmc
adc
pop
dec
call
cmpsb
insb
in
mov
ss
dec
sub
jg
in
pushl
lea
push
mov
fwait
sahf
xchg
pop
adc
mov
inc
daa
adc
clc
push
pop
mov
sbbb
inc
fs
pop
aaa
and
sahf
and
out
lods
inc
out
nop
add
ficompl
je
sahf
fnstenv
insb
lock
sbbl
xchg
setl
dec
in
add
adc
inc
gs
lret
ja
add
aad
adc
sahf
or
add
add
xor
arpl
xchg
inc
idivb
pop
cld
pop
inc
cmovg
test
or
cltd
pushf
or
or
push
xchg
test
pop
stc
cmpsl
mov
jns
scas
lcall
add
sahf
add
jge
fisubrs
popf
test
push
adcb
in
dec
lods
xchg
mov
sub
icebp
scas
adc
test
jbe
outsb
loopne
pushf
xlat
push
fadds
dec
lretw
dec
jge
in
adc
pop
out
fwait
sbb
arpl
sub
cmp
cmp
orb
sbb
lret
cmpsl
inc
clc
push
or
int3
jno
dec
push
and
psubb
and
lods
dec
and
mov
inc
cmp
pop
fstps
push
std
mov
cmp
in
or
dec
js
add
pmaxsw
pusha
push
and
aaa
adc
cmc
lods
cmp
ljmp
jnp
or
xchg
dec
repnz
mov
pop
mov
fsub
pop
dec
iret
inc
into
push
fs
cmpsl
mov
mov
lea
lods
adc
jnp
popf
mov
bswap
mov
fisubl
adc
or
sbb
iret
fwait
jmp
mov
inc
loope
jno
cmp
mov
or
fdivrs
add
inc
pop
mov
lret
mov
xchg
mov
dec
in
xor
nop
ret
xchg
xchg
iret
into
ja
pop
xor
fdivrs
dec
sbb
sbb
push
std
sub
sti
add
cwtl
fisttps
sbb
test
das
andl
cwtl
mov
jp
sbb
test
fs
lret
cmpsl
call
ljmp
imul
je
push
paddsw
dec
mov
or
jns
cmp
fwait
insb
and
popf
pop
cmpsl
cmpsl
mov
mov
mov
aaa
jnp
andl
bound
in
push
lods
jmp
mov
sub
mov
bound
cmp
test
in
jb
shll
jmp
mov
std
xor
jbe
data16
fs
or
xchg
push
mov
mov
inc
movsb
add
push
mov
pop
popf
std
jmp
lods
into
shrb
cltd
fs
insb
movsl
pusha
mov
cmc
ret
loopne
add
pop
cld
or
sbb
pop
add
lods
xchg
sbb
or
movsb
dec
add
inc
shlb
sahf
dec
test
shll
dec
negl
xchg
lods
push
cwtl
xchg
inc
popf
pop
aad
sbb
loope
xchg
mov
test
inc
out
push
sbb
rorl
negw
jo
iret
dec
cmpsb
ds
inc
mov
jmp
jp
sbb
ja
mov
sub
jno
mov
adc
cli
std
and
xchg
repnz
push
cltd
fs
push
cmc
nop
or
jg
xchg
gs
push
or
adc
out
arpl
lahf
or
adc
pop
sarl
mov
inc
pop
lock
cmp
xor
inc
sub
fcompl
sub
rorb
mov
arpl
sub
jno
rcrb
int3
testl
mov
inc
ficoms
mov
sbb
and
les
sbb
adc
imul
cmp
lea
adcb
and
jmp
movsl
mov
dec
roll
jnp
andb
or
loop
adcb
lock
popf
leave
inc
jnp
call
push
int3
jae
and
inc
dec
jnp
inc
cld
subps
sbb
test
push
xchg
ds
pop
test
push
fcoms
cltd
je
icebp
in
pop
cmp
shll
ret
mov
dec
aas
push
xor
mov
inc
fisubrl
push
jg
or
jle
and
mov
mulb
inc
sbb
cmp
shl
test
mov
repz
loope
mov
rcrb
bswap
sub
lahf
ret
call
push
sti
pop
adc
xor
sbb
mov
mov
jbe
inc
xchg
cmp
add
cli
popf
aaa
repz
test
mov
aam
and
icebp
scas
inc
xorb
arpl
test
aam
shlb
cltd
and
out
movsb
loope
inc
das
pop
push
cltd
mov
clc
cwtl
xchg
rcll
mov
jnp
ss
sub
repnz
add
mov
inc
cmp
andb
cmp
insl
aad
jnp
stos
orl
dec
mov
icebp
cmp
out
sub
stos
ljmp
mov
int
mov
aad
jp
loop
and
mov
mov
dec
idiv
pop
roll
push
add
cmp
or
jno
sub
dec
ljmp
pop
shr
xlat
rcll
inc
test
imul
dec
fwait
roll
das
xchg
sbb
cli
insb
or
sub
scas
sub
mov
cli
insb
push
divl
add
jp
sub
push
stos
cmp
pop
data16
push
jge
data16
daa
iret
xor
add
mov
xchg
pop
clc
insb
xchg
mov
call
ret
arpl
inc
in
movsb
jmp
jo
lds
cmp
mov
cmpsl
mov
push
scas
je
enter
stos
stos
call
jg
loopne
loop
dec
xchg
push
jle
je
push
lahf
jns
push
fiaddl
lea
sbbl
insb
movl
fldenv
jg
loopne
pop
das
lds
lea
jnp
pop
pop
pop
and
je
stos
frstor
jecxz
or
ficoms
aam
mov
pop
cmp
push
mov
mov
jb
add
mov
inc
bound
pop
adc
imul
lods
lea
repnz
mov
jo
clc
mov
sti
mov
adc
fwait
add
pop
and
clc
jmp
push
fistps
shll
mov
adc
or
inc
pusha
lret
push
inc
push
mov
imul
jge
sub
xor
mov
sub
pop
add
dec
xchg
sbbl
hlt
pop
hlt
push
inc
sub
aad
inc
inc
xor
stos
int3
fsub
push
push
ret
mov
stos
sbb
add
jae
test
or
mov
gs
gs
and
cmpsl
out
repnz
push
cmp
lret
and
mov
adc
jae
mov
pop
test
pushf
pop
jne
ret
decl
cli
into
mov
pusha
arpl
dec
repz
sub
xchg
repnz
fimuls
xchg
pop
pushf
push
or
mov
mov
lock
aam
xchg
mov
div
leave
jecxz
pusha
push
outsb
push
mov
and
pop
ds
ret
xor
xchg
fs
mov
shlb
sub
nop
sbb
adc
out
xor
xor
inc
push
pop
mov
push
jecxz
lcall
or
push
and
stos
mov
push
insb
movsb
add
inc
or
hlt
cmp
sbbl
mov
pop
movsl
pop
inc
push
leave
cs
jno
mov
lcall
adc
mov
mov
inc
push
sub
in
push
pushf
cld
and
sub
mov
lret
fwait
fs
push
push
sub
mov
mov
lcall
jbe
mov
repnz
jmp
jae
and
lock
jmp
negb
jo
inc
pop
xor
mov
mov
mov
adc
cmp
cmp
sti
adcl
jp
jae
call
data16
jg
push
in
movsl
iret
xor
loop
mov
popf
insl
pcmpgtw
jns
bound
pop
push
icebp
test
mov
adc
idivb
mov
xchg
mov
iret
sbb
mov
and
pushf
in
fistpl
outsb
push
les
movsb
xorl
int3
ss
repnz
pop
repz
xchg
lret
xchg
add
lcall
sub
mov
test
nop
arpl
scas
loope
push
jo
test
sbbl
lods
push
enter
ret
pop
sub
cmp
jmp
mov
in
push
xor
pushf
adc
xor
scas
pop
mov
loop
int
hlt
add
fstpt
add
shlb
mov
addr16
int
mov
xor
pop
sahf
xchg
lcall
xchg
hlt
sti
jae
notb
inc
adc
sbb
insb
daa
testl
imul
mov
into
gs
jne
dec
bound
xchg
pop
adc
fildl
call
jae
mov
lds
adc
push
mov
or
mov
in
lods
sahf
shlb
std
xlat
and
push
pop
sbb
jecxz
pushl
hlt
and
jo
adc
or
dec
pop
testl
pushf
sbb
inc
jp
ss
mov
outsl
push
dec
out
daa
insl
pop
leave
in
xchg
icebp
push
mov
push
ljmp
mov
ds
js
sbb
imul
testl
or
and
sbb
test
bound
ret
rcll
std
in
nop
in
mov
adc
push
xor
jnp
push
or
sub
add
call
push
decb
popa
xchg
into
or
mov
mov
aaa
sbb
mov
mov
push
pop
bnd
push
leave
rcll
sbb
insb
adc
addr16
rorb
mov
jmp
push
andb
scas
mov
inc
jns
cmc
mov
pop
test
adc
negb
pop
stos
cmc
push
xchg
addr16
push
xor
adc
addb
mov
stos
mov
cmp
cltd
ret
pop
and
arpl
push
std
sbb
ret
lcall
and
aaa
rcl
push
pop
push
fists
mov
xchg
jl
loop
loope
or
push
cmp
mov
stos
and
xchg
loop
adc
lds
iret
add
pushf
fisttpll
cltd
lret
pop
jmp
jmp
repz
or
jnp
popa
sbb
mov
xor
rcrb
fcomps
jmp
mov
jbe
dec
inc
adc
repz
fmuls
jg
int
xor
or
cmc
dec
ja
insl
jbe
idivb
ret
add
lret
pop
jbe
push
adc
dec
xor
stc
mov
dec
pop
clc
cltd
or
and
int3
aas
add
push
stc
fwait
mov
sahf
sub
or
test
daa
loop
es
push
mov
icebp
pop
cli
js
xchg
insb
mov
jne
mov
xchg
jae
ror
add
popf
mov
orl
data16
jecxz
mov
inc
roll
int3
lret
lcall
addb
inc
nop
cld
jae
xor
xor
xchg
push
clc
fmull
lock
ret
and
jg
dec
sbb
or
or
popf
sbb
or
shr
ficoms
fistpl
push
lret
sub
sbb
rcrb
xor
mov
xchg
sti
stos
daa
jno
stos
add
bound
mov
push
xor
lret
aad
cmpsl
pusha
test
insl
dec
lcall
lret
fcomps
ret
dec
mov
pushf
out
iret
hlt
scas
sub
adc
fimull
fimuls
rcrl
fs
fsubs
xchg
sahf
lea
test
out
push
add
ret
push
out
inc
pop
nop
in
mov
adc
push
push
jo
mov
jno
cmpsl
ljmp
sbb
daa
test
aaa
fldcw
pop
mov
mulb
inc
pop
fucomp
leave
movsl
push
jle
sarl
push
or
or
repnz
cmpsl
dec
popa
rclb
stos
mov
cwtl
add
outsl
pop
cmp
cs
add
pusha
jmp
adc
sub
scas
push
jle
ud2
sbb
adc
xchg
mov
sti
jbe
and
add
aaa
loop
lock
or
pop
fstp
in
int
mov
pop
pop
in
sub
or
cli
add
xchg
push
dec
add
xor
cmp
bound
xchg
repnz
pop
push
pushf
lods
jno
xchg
fimuls
test
rorl
cmpb
or
test
inc
jno
dec
xchg
cmp
repz
test
dec
xchg
mov
stos
push
xchg
jnp
incl
fnstcw
sar
dec
cmpsb
hlt
add
pushf
mov
inc
fcmovnb
jne
dec
and
push
loope
ds
inc
jl
negl
push
sub
insl
mov
in
jno
jo
outsb
xchg
mov
shl
bound
ljmp
xchg
xor
mov
push
rorb
rcl
jo
mov
popa
adc
lods
sub
lock
lret
jbe
fidivrs
jne
dec
int3
daa
sub
dec
bswap
adc
push
cmpsb
adc
mov
push
jecxz
loope
mov
shlb
icebp
mov
cmpsl
xor
or
mov
out
and
pop
mov
or
or
movsb
shrb
movb
in
push
sbb
adc
push
hlt
les
frstpm(287
xor
sti
shl
xchg
shl
mov
cmpsl
sbb
imul
cmp
movl
notl
outsb
add
push
push
add
push
sbbl
insl
cmc
add
push
xor
test
jae
cmpsl
in
lods
sub
or
std
jne
les
mov
sbb
fisttpll
pop
mov
cmc
imul
and
outsb
mov
sub
movsl
fisubs
lret
mov
jl
inc
push
mov
stos
in
pop
aam
iret
lds
mov
in
jg
ljmp
or
push
or
sti
fisubl
inc
iret
ljmp
mov
push
ljmp
inc
aam
jae
test
out
and
or
fs
scas
jmp
mov
cltd
decb
es
jns
mov
cltd
push
xorl
sbb
nop
rcr
pop
stc
in
mov
mov
inc
mov
fildl
lods
mov
mov
ds
mov
fistl
fistpll
mov
ja
mov
cmp
sti
xor
cmpl
sbb
adc
and
push
sub
sub
dec
out
xor
loope
call
sbb
inc
cs
arpl
mov
leave
daa
mov
mov
adc
lods
mul
adc
lret
mov
shr
push
cmp
pop
jo
subb
gs
sub
pop
adc
daa
out
sti
pop
aad
xchg
push
vcomiss
mov
cltd
mov
inc
movsb
movsb
cmpsb
jl
or
pushf
popf
aad
mov
xor
mov
dec
hlt
scas
sub
mov
loope
push
xlat
jno
repnz
aaa
arpl
push
lods
hlt
rorl
outsb
sti
push
mov
mov
pop
mov
xchg
or
lock
loope
or
imul
xor
mov
outsb
sbb
sbb
add
ds
xor
subb
push
or
mov
out
inc
pop
and
adcl
sub
sbb
nop
jbe
not
es
in
or
add
sub
jg
lods
mov
sub
mov
sbb
sti
ss
mul
ljmp
fpatan
cmp
out
mov
lods
add
mov
fcoml
repz
outsb
xor
in
sub
cmp
lea
dec
filds
sub
insl
push
xor
in
push
outsl
push
push
inc
pop
lahf
mov
add
push
ds
loopne
add
jge
leave
je
shl
fs
out
testl
test
stc
xchg
test
stc
nop
sbb
leave
ficoms
iret
xchg
or
rcl
push
mov
push
push
mov
loope
movsb
insb
lret
inc
inc
jno
and
jl
lods
xlat
push
push
jb
ljmp
and
xor
lods
jnp
popf
mov
lds
stc
pop
xchg
add
cmpsb
fs
rcr
addl
lock
cmp
push
mov
das
adc
aas
sub
push
mov
cmpb
out
aam
fs
mov
and
sub
sbb
xor
and
xchg
hlt
dec
test
fsubrl
scas
push
std
inc
sbb
lock
jp
call
xorb
mov
out
enter
add
pop
jae
mov
out
lds
pop
es
adc
cwtl
adcb
or
in
in
xchg
push
push
mov
ret
add
jae
mov
jae
nop
push
cmp
fcmovnbe
pop
lret
popa
mull
idiv
or
pop
loopne
mov
ja
jae
stc
mov
xchg
out
xchg
dec
mov
enter
adc
xor
sbb
arpl
es
mov
adcb
push
sahf
icebp
add
add
stos
loop
xchg
xchg
jne
add
cmp
pop
jecxz
cli
or
in
sub
sub
inc
jne
cmc
sub
xlat
jg
dec
out
enter
mov
nop
add
fdivr
lidtl
lret
in
sub
sbb
mov
pop
inc
stos
fcompl
mov
ss
or
jno
out
hlt
test
dec
mov
push
mov
add
or
call
jmp
dec
jecxz
and
es
test
add
cmp
mov
setp
mov
pop
ret
mov
mov
adc
movsl
ss
or
loop
stos
lcall
sbb
lret
push
cs
push
cmpsb
pop
test
or
jmp
xor
jmp
sbb
add
xchg
inc
xlat
sub
or
sbb
lret
popa
jl
arpl
mov
iret
pop
xchg
hlt
int
mov
loope
out
les
shlb
aaa
mov
jge
shlb
cmpsl
xor
or
mov
jmp
pop
cld
loope
xor
inc
das
inc
int3
sahf
movl
mov
inc
das
fidivrl
fldl
sub
movsl
dec
push
stos
lret
into
fstpt
dec
les
in
cmc
dec
dec
jge
movsb
mov
test
sbb
add
std
in
dec
xor
and
ss
sbbl
xor
mov
jge
mov
enter
jmp
mov
fisttpl
cmp
sub
leave
es
popf
inc
pop
xlat
xor
push
fimuls
push
mov
icebp
in
cmp
loop
or
mov
test
pop
es
sub
ror
jo
lret
lock
dec
cld
or
jne
mov
cmpsb
cmp
stos
mov
inc
mov
mov
movsb
mov
or
pop
aaa
out
jecxz
fstp
aad
push
sbbl
push
sbb
std
sti
ss
daa
in
cmpsb
xor
add
repz
jbe
test
sbb
lahf
ret
das
pop
mov
scas
or
lods
clc
sbb
scas
stos
mov
fwait
dec
in
dec
stc
mov
mov
std
add
jl
adc
js
repz
xchg
sbb
push
jp
xchg
adc
adc
cmp
adc
add
movsl
cmp
js
enter
sbb
jmp
dec
sub
adc
sbb
mov
fcomps
xchg
mov
add
sub
psubusb
sbb
rcrl
rcrb
sub
xor
dec
jl
xor
nop
cmp
int3
add
test
cmc
lea
adc
mov
lods
xor
adc
dec
in
pop
dec
nop
mov
sti
mov
icebp
dec
int
lods
prefetchw
pop
popa
mov
cmp
pop
push
jbe
gs
sub
js
mov
cltd
jbe
dec
shll
sub
dec
mov
push
packssdw
lahf
fxch
gs
insl
jnp
mov
inc
xchg
mov
cmpsl
mov
lock
fiaddl
outsl
add
pop
pop
pop
pop
ja
inc
xchg
sahf
loopne
js
lahf
jle
dec
xchg
jg
xchg
or
dec
repnz
lods
loop
jnp
aaa
movl
inc
stc
adc
sti
andb
dec
jecxz
shl
in
mov
adc
test
icebp
in
push
ja
lcall
jne
out
outsl
adc
loope
aaa
ja,pt
ss
fwait
cmp
jmp
xlat
bound
mov
ds
stc
cmp
cmc
lahf
sub
arpl
push
pop
push
cmp
xor
mov
jl
insb
pop
push
or
scas
cmpsl
gs
test
sub
or
cmp
arpl
lcall
in
mov
sub
push
inc
cmp
push
push
mov
into
mov
or
cmp
push
inc
mov
mov
add
ljmp
mov
insb
insb
rorb
sarb
movb
fildl
mov
negb
xor
and
lds
cmpsl
jbe
or
or
adc
xor
or
sbb
mov
push
xchg
fucomp
lcall
je
mov
push
outsl
insl
pop
out
inc
lcall
js
mov
icebp
test
inc
in
xchg
test
je
push
push
mov
xchg
cmp
sub
xor
mov
in
cmp
lea
iret
std
push
mov
mov
jp
mov
in
adc
cli
cli
add
pusha
add
cmp
mov
enter
out
xor
test
movsl
sub
sbbl
mov
adc
enter
and
rcr
sub
mov
popf
pusha
and
jp,pt
xor
mov
js
outsb
ficoml
push
lret
in
pop
movsl
fmull
ror
pop
addr16
push
jae
scas
xchg
and
sahf
insb
arpl
fstl
and
mov
int
jno
icebp
xor
idivb
mov
sbb
sub
pop
loop
cmpsl
mov
jb
add
adc
xor
sbb
xlat
sub
pop
adc
xchg
sbb
sarb
insl
add
xlat
imul
xlat
testb
divb
cmp
push
in
repz
adc
xchg
fsubs
aas
shlb
dec
mov
jle
and
and
cmpsl
push
cwtl
cmpsl
push
mov
inc
cmp
incb
cwtl
sbb
xor
xchg
adc
les
test
lret
in
int
cs
pusha
cmp
test
mov
clc
push
in
ret
adc
xor
xor
mov
sarb
fists
movsb
lret
leave
jg,pt
xchg
or
cmp
sbb
gs
movsl
das
xchg
shr
cmc
adc
pop
push
es
sbb
push
lock
push
shll
mov
lahf
repz
cmc
out
mov
dec
dec
ss
push
push
lock
mov
ja
ja
fwait
mov
push
fdivr
mov
cmpsl
sbb
loope
in
cmp
and
stos
xchg
ret
pop
jnp
cmp
das
or
sti
aam
xchg
add
rorl
mov
xchg
jg
jmp
push
dec
scas
aaa
jbe
cmp
or
or
xor
out
aas
sub
repz
xchg
inc
sbb
mov
daa
cmp
mov
adc
pop
mov
in
push
stos
xor
dec
lahf
lcall
js
nop
iret
cli
out
inc
pop
neg
mov
fiadds
prefetch
je
shll
cmp
xchg
mov
pop
int3
sub
inc
mov
aaa
mov
lret
int3
sahf
xchg
dec
fdivs
dec
lret
xchg
push
loop
mov
push
jne
mov
jg
push
pushf
daa
fimull
push
inc
sub
and
std
out
int
iret
inc
stc
mov
in
daa
shll
pusha
mov
sti
decb
push
aad
sti
sbb
xor
push
xchg
ss
jmp
cltd
mov
and
jle
hlt
dec
lods
or
mov
loop
or
push
enter
mov
jno
adc
sbb
mov
negb
sbb
iret
inc
jmp
sbb
cmp
aad
dec
jecxz
push
push
inc
cs
adc
into
jp
cwtl
fcmovne
sti
dec
and
in
and
adc
inc
mov
sbb
scas
mov
scas
cmpsb
cmp
inc
leave
out
mov
add
and
fldl
inc
aaa
pop
mov
cmpsl
adc
sbb
std
jmp
xchg
mov
stos
out
cmpl
imull
pop
or
sbb
into
cli
pop
fldt
rcll
adc
sub
or
jb
imul
mov
mov
xor
cmpsl
adc
xchg
dec
les
jge
pop
fsubrs
adc
jl
out
sbb
bnd
dec
push
push
call
fstl
sar
ds
enter
push
cli
mov
lahf
and
fimull
in
sbb
stc
in
push
adc
add
sbb
aaa
pop
outsl
je
sahf
movsb
in
mov
scas
jg
stos
fsubl
push
pop
pop
dec
or
sbb
xchg
pushf
pop
dec
jno
jge
push
fidivrs
ds
mov
arpl
add
pusha
jg
mov
dec
fwait
pop
insb
sbb
lret
xlat
add
mov
les
xchg
xchg
mov
aam
cmpl
sub
mov
dec
cmp
cmpsl
cmc
jo
sbb
fs
adc
xor
pusha
or
mov
mov
push
jb
or
dec
dec
fistl
adc
in
lods
jl
inc
jge
mov
xchg
xchg
push
sub
push
scas
jbe
inc
pushl
rclb
dec
adc
or
pop
pop
xchg
sbb
sarb
mov
sub
adc
clc
addb
inc
movsb
inc
dec
ret
pop
negb
jns
pop
rorb
out
inc
ficoms
pop
add
jns
xchg
decb
xchg
adc
ss
int
shll
sbb
or
gs
jge
add
sti
lea
mov
jecxz
push
inc
pop
clc
push
test
xor
ljmp
ret
lret
jmp
cmpl
mov
pop
xrelease
ret
test
arpl
call
rcrl
hlt
sahf
out
movsl
pop
sti
jle
mov
xor
push
scas
sub
into
aaa
sti
divl
jnp
sbb
push
decb
insl
repz
push
out
aad
bound
je
add
std
lahf
and
sub
xchg
cmp
or
aam
mov
push
mov
jnp
xor
es
cmp
xchg
andl
xchg
int
fcmovne
push
xchg
inc
jne
mov
pop
xchg
aaa
and
mov
or
mov
xchg
xor
mov
jns
cmp
leave
mov
xchg
push
sub
imul
adc
mov
fbld
fsubl
and
push
movsl
mov
inc
jb
ljmp
in
ja
sub
and
mov
dec
pop
pop
dec
push
dec
dec
pop
gs
js
push
incb
loopne
xchg
test
stos
sahf
aad
sbb
jp
inc
shlb
add
andb
scas
movsb
xchg
xchg
lods
sbb
pop
je
sub
push
enter
mov
cltd
decl
pop
cmp
es
insb
jge
cs
xchg
in
jle
mov
pop
mov
sbb
mov
daa
dec
out
fstps
dec
or
jns
fwait
andb
clc
imull
mov
rcll
pop
cmp
bound
ret
pop
dec
es
sub
in
add
sbb
push
xor
repz
push
enter
cmpl
xor
dec
pop
mov
mov
xchg
jb
or
fisubs
and
jne
std
pop
pop
cmp
fsubs
push
cmpsb
add
aad
jl
mov
adc
push
ret
jmp
xchg
sti
imul
dec
adc
add
mov
inc
jmp
call
push
fld
adc
pushf
imul
adc
fsubs
sbb
mov
orb
arpl
stos
pop
and
fsubp
repz
out
pop
mov
adc
test
jbe
lret
mov
negl
push
jo
addr16
scas
arpl
mov
add
push
loopne
int
inc
mov
pushf
incb
in
and
stos
inc
adc
arpl
ret
stc
int
and
or
push
pop
push
xchg
les
outsb
cld
add
aaa
xlat
in
adc
nop
fbstp
popa
and
test
es
lods
sti
test
dec
mul
retw
mov
xchg
fwait
mull
jle
cmp
sbb
push
popa
cmp
cmp
ret
into
imulb
clc
loope
xchg
sub
mov
stos
mov
xchg
aaa
rclb
loopne
in
sti
mov
clc
inc
lea
lcall
mov
mov
rolb
mov
ljmp
jmp
mov
jl
dec
jne
mov
jno
fiadds
adc
ja
push
inc
repnz
std
testl
scas
sub
mov
push
ja,pn
mov
je
ljmp
sub
inc
hlt
shrl
js
stc
leave
lahf
repz
in
push
xchg
and
aad
andl
cmp
loope
mov
stos
in
pop
in
sbb
loope
mov
add
test
test
iret
push
pop
jle
in
pusha
lods
ja
sub
gs
cmp
popl
push
std
cmpsb
ss
ret
xor
imul
pop
pop
mov
cmpb
pop
pop
add
or
pop
pop
cwtl
and
pop
cmpsb
lret
addr16
push
xchg
icebp
stc
xor
mov
add
cmp
js
lcall
mov
xor
inc
notb
in
cmp
movsl
subb
jle
fldl
outsl
pop
lock
fists
shrl
xor
jmp
adc
test
inc
sub
xchg
push
iret
or
xor
mov
insb
fucomi
test
movsb
or
notb
push
jae
popl
push
test
add
in
mov
mov
test
jno
jmp
lods
cltd
xchg
jg
push
cmp
mov
popf
repz
add
mov
aad
pop
jne
mov
lea
cltd
jnp
fidivs
mov
or
mov
orb
add
stc
mov
push
sahf
in
and
jne
or
sbb
mov
add
adc
mov
inc
pushf
mov
xor
dec
cltd
xor
sbb
pushf
rcrb
ds
fdivs
sub
pusha
jle
cmp
mov
aaa
stos
ret
mov
nop
cmp
push
fwait
lret
loope
pop
sub
scas
and
push
mov
jns
mov
loop
stos
cwtl
mov
arpl
les
push
or
repnz
notb
cmp
xor
mov
or
add
and
xor
and
out
int
push
sbb
inc
cmp
push
or
lcall
and
xchg
js
out
mull
in
lcall
incb
addb
daa
sub
pop
ja
and
cwtl
scas
dec
mov
in
xor
sbb
xchg
or
into
xor
rorl
jg
out
sbb
pushf
aam
js
sbb
sbb
aam
dec
or
ja
lock
cmp
ror
sub
daa
arpl
imul
cmc
jne
push
inc
jne
js
jno
cmpsl
imul
sbb
movsl
adc
push
sti
dec
mov
icebp
call
dec
pop
aam
adc
fadds
cmp
inc
push
cmpsl
dec
xor
in
sub
cltd
xchg
mov
jge
stos
push
add
sub
ja
push
mov
or
nop
lret
adc
mov
in
sbb
add
nop
mov
sti
cli
ja
pop
pusha
dec
test
push
dec
dec
jo
inc
inc
fsubr
addr16
sbb
shll
mov
sbb
pop
mov
mov
fistpll
or
xchg
loop
shll
lret
mov
cld
pushf
pop
repz
in
dec
lds
add
add
dec
cmp
shlb
jnp
xor
fdivl
fldcw
imul
push
gs
push
adc
aad
mov
shll
and
sub
test
jmp
adc
or
xor
pop
das
cmp
icebp
push
mov
scas
shl
and
orl
adc
add
mov
mov
cmc
loop
xor
mov
jmp
xor
sbb
lods
imul
xlat
loopne
add
daa
mov
pop
das
cvtpi2ps
ret
in
mov
hlt
imull
push
add
lahf
mov
mov
dec
mov
fcmovne
sub
or
xchg
popa
sarb
test
inc
adc
jo
shl
cmp
movsl
pop
aaa
ret
cmp
fistpl
add
and
arpl
inc
movsb
loope
inc
call
and
adc
ds
je
dec
call
jo
imul
xor
add
fldcw
push
add
orb
lods
mov
rcrb
or
and
dec
jle
loopne
lock
cmpsb
push
jnp
push
mov
sbb
push
nop
dec
add
fimuls
adc
imul
rcr
adc
outsb
push
mov
testb
aaa
fwait
push
add
pop
js
filds
mov
pusha
in
xor
cwtl
jo
insb
fmull
push
inc
sbb
mov
pop
or
xor
mov
or
adc
adc
push
push
dec
adc
jno
ss
mov
pop
sbb
xchg
cmpsl
sub
ret
out
lea
repnz
into
pop
les
mov
out
add
std
cmpsl
jb
dec
push
out
insl
dec
mov
inc
sbb
mov
jae
cmp
js
andl
je
mov
dec
mov
or
cmc
sbb
add
xor
mov
clc
xchg
or
popf
add
sbb
mov
xor
out
scas
push
sub
sbb
dec
fcmovb
daa
test
xor
call
sti
mov
cmc
and
cmp
adc
hlt
roll
or
imul
outsl
cltd
ret
mov
lret
loopne
data16
mov
ja
mov
push
cmp
jno
rol
or
push
aam
and
lock
pop
sbb
fildl
and
stc
or
dec
or
ds
sbbl
xchg
mov
adc
out
lds
mov
xchg
inc
rcrl
push
mov
arpl
sahf
sti
clc
addr16
stc
pushf
jp
jae
and
jmp
dec
cmp
jbe
jecxz
leave
mov
dec
xor
mov
lahf
rcll
push
movb
ljmp
pop
dec
ja
aas
out
sti
cmp
rol
pushf
lds
cmpl
stos
fisttps
adc
mov
out
push
sub
std
outsl
jge
cmpb
cltd
adc
subl
in
dec
ljmp
mov
pop
sbbb
lea
xlat
hlt
outsb
adc
icebp
cmp
adc
cmp
xor
ret
arpl
imul
cwtl
jg
insb
mov
mov
mov
clc
cmp
repz
jp
roll
in
jne
mov
jns
aas
adc
call
mov
or
jb
cld
cmp
mov
mov
imul
mov
dec
out
out
scas
ljmp
adc
rorl
pop
dec
in
pop
xor
push
xchg
jo
pop
fs
movsl
mov
jmp
loop
mov
clc
aam
pop
aad
ja
pusha
pop
cwtl
push
mov
bound
loop
jl
cmpb
hlt
out
mov
movsl
mov
daa
addr16
mov
test
dec
lods
fucomip
mov
pushf
jne
adc
mov
ret
fldenv
mov
sarb
adc
inc
ret
inc
scas
imul
cmp
ja
rcrb
sub
fisubs
js
jg
push
out
lods
sub
popf
and
mov
rcll
repz
mov
ret
pop
fidivrl
inc
xor
inc
jb
adc
add
cmp
push
in
dec
in
xor
push
and
inc
loop
mov
cmp
jl
punpckldq
cmp
popf
dec
cmpsb
xchg
std
sub
imul
and
aas
loop
adc
or
rcrl
jo
mov
xor
sub
test
inc
jae
xchg
loop
xchg
adcl
cmp
adc
push
sbb
leave
inc
adc
jns
jl
sub
xlat
insb
ds
dec
stos
cmp
aam
xor
shrb
add
jbe
and
test
mov
jbe
xchg
icebp
fbstp
pop
adcl
lock
xchg
bound
adc
xor
push
ret
or
popf
sub
or
dec
sbb
orl
call
mov
and
fcompl
adc
jmp
in
or
insl
cmp
ret
ret
mov
jae
add
and
add
aaa
adc
jg
xor
leave
mov
cmc
ficomps
mulb
push
lods
push
out
pop
in
push
aam
xor
xchg
and
fwait
pop
xchg
movsl
sarb
add
inc
out
sahf
xchg
push
test
js
inc
fnstenv
gs
fimull
outsl
cld
pop
lret
jno
push
repz
jno
rcrl
pop
xor
vpmacsdd
pop
xchg
add
movl
sbb
jmp
das
xchg
mov
jmp
sub
pop
push
pop
bound
pop
inc
in
ds
movsb
push
cmp
mov
ljmp
gs
fs
ss
jmp
cltd
sub
cwtl
mov
popa
mov
pop
aad
pop
aad
out
add
add
mov
leave
imul
dec
loopne
ror
xor
out
out
jg
xorb
push
jle
push
jne
cwtl
outsl
or
fidivrs
and
hlt
loope
sbb
jg
adc
pop
test
jg
addr16
js
fs
cmp
mov
mov
add
cmp
outsl
and
cltd
inc
dec
fstps
stc
xchg
xchg
fldl
dec
cs
aaa
jge
and
cmp
pop
dec
loop
ss
pop
xor
lahf
pop
into
in
iret
loop
push
jnp
pop
mov
fdivrs
and
jne
cwtl
daa
mov
mov
jae
nop
fnstsw
daa
pop
sti
aam
pushf
or
std
inc
lds
cmc
mov
cli
btc
stc
xchg
les
mov
imulb
add
rolb
or
call
lods
add
enter
push
clc
insl
fidivs
xchg
mov
xor
cmp
jnp
pop
jae
or
sbb
inc
cmp
lea
jg
sub
out
js
rcrl
xor
cmp
lret
jb
add
dec
xor
aas
aad
lods
jb
das
lret
dec
adc
mov
les
fildll
xchg
int3
and
lods
adc
out
mov
lea
cmp
loopne
push
rclb
in
iret
pop
lret
cltd
or
popf
jno
cmp
lcall
or
cmp
bound
aas
pop
lret
cmp
icebp
std
repz
sub
lahf
pop
inc
xlat
inc
lahf
cmpsl
xchg
lods
rclb
out
mov
jb
fucom
pop
addr16
sub
mov
cmp
decb
lods
cmpsb
mov
aas
pop
cwtl
fidivrl
std
or
pusha
outsb
xor
lds
cld
adc
js
jl
ret
jbe
or
out
dec
rorl
lea
repnz
sbb
jle
imul
popa
jg
aaa
insl
mov
jmp
enter
int
nop
lcall
rol
in
or
in
and
add
push
push
scas
mov
cs
jno
xlat
mov
cmp
mov
scas
jo
dec
cmpl
pop
jns
xor
or
cmp
xchg
or
pushf
push
xlat
sahf
add
lahf
or
push
test
add
adc
cmpsl
sub
mov
or
push
les
js
cmp
outsb
cmp
scas
push
scas
push
fadd
loopne
dec
cmpb
popf
lret
enter
sub
push
add
mov
push
lods
jno
inc
mov
scas
sbb
int3
mov
scas
adc
fcoms
je,pn
ljmp
bound
mov
push
mov
ja
add
adc
inc
xor
mov
popf
fwait
jp
lock
fcmovnu
fs
mov
xchg
dec
aam
repnz
mov
mov
mov
enter
mov
sbb
jns
cltd
inc
out
int3
and
js
stos
clc
ljmp
mov
rcrb
mov
mov
lahf
mov
rcl
mov
in
xor
pop
ljmp
jae
ret
add
jo
inc
data16
and
dec
divb
inc
and
sti
push
fldenv
shl
cmp
shl
stos
mov
fcmovnu
jne
fmuls
and
in
jo
add
cmp
sub
push
loop
loop
shrl
lret
clc
mov
xchg
test
fiadds
sbb
cmp
jns
daa
and
iret
test
cltd
enter
mov
sub
popf
xor
pop
ds
fs
inc
jnp
mov
in
mov
pop
mov
outsl
not
sbb
popf
je
orb
xor
jb
popa
lea
mov
insb
dec
mov
subb
pop
clc
mov
sub
in
xchg
in
shlb
mov
pop
fstpl
int3
mov
and
cmc
aam
jae
cs
sbbl
pop
sbbl
jbe
jne
outsb
pop
in
repnz
adcb
into
inc
jns
push
enter
icebp
xchg
push
sbb
xchg
xor
mov
inc
dec
sti
into
fidivs
mov
cli
jb
into
mull
lods
inc
cmp
popf
sub
jns
fisubrs
leave
adc
notl
repnz
in
xor
jns
push
je
mov
push
mov
icebp
sub
testb
jl
mov
iret
jecxz
push
mov
cld
ret
test
pop
pop
cmp
dec
mov
ficompl
ds
shrl
adc
rcr
mov
movsb
xor
gs
pop
mov
outsl
mov
mov
inc
lds
mov
shrl
inc
xlat
xchg
in
mulb
add
movsl
add
ja
int3
sahf
push
sbb
jmp
es
and
cmp
jle
jno
adc
popl
pop
psubusb
cmp
dec
xchg
mov
mov
mov
adc
jo
xor
add
sarl
push
out
movsb
inc
pop
ds
bnd
shlb
addr16
or
iret
mov
mov
out
sti
push
xchg
sub
jle
lock
fucomp
jmp
and
in
cld
push
sbb
arpl
mov
sub
sub
rol
test
aas
xchg
rorb
imul
loop
or
mov
push
lds
lods
cmp
cmp
jne
dec
addb
xchg
cltd
jp
jl
push
cli
cmp
daa
xchg
sbb
jl
stc
hlt
jns
pop
enter
push
inc
cmc
out
xor
pop
or
or
dec
shll
stc
mov
lea
cs
pop
stc
inc
jno
es
fcmovb
bound
in
in
inc
and
push
mov
rorb
lock
mov
jl
mov
push
jl
lods
pop
sti
imul
cmpsl
shlb
in
xchg
push
jbe
sbb
aas
pop
xor
jp
xchg
enter
imull
pop
push
cmpsl
sbb
and
jle
rcll
jp
pop
pusha
cmpsl
insl
adc
xor
xor
cmp
mov
push
notl
xor
mov
sarb
ret
sbb
pop
mov
jno
mov
in
shll
cmc
xchg
add
sbb
mov
push
inc
loopne
xlat
sub
mov
sub
popf
xchg
in
lar
sbb
lcall
daa
insb
sub
ja
enter
repnz
cmpl
loop
roll
inc
imul
or
ss
xor
sar
sub
into
sbb
mov
xchg
lret
adc
adc
cs
mov
in
hlt
push
jle
or
mov
adc
push
push
xor
das
cli
scas
out
cwtl
iret
jnp
scas
std
lods
push
pop
sub
pushf
loope
xchg
in
xchg
xor
out
dec
xorl
cmpsb
loop
aam
push
mov
adc
pop
scas
sub
test
cmp
inc
sarb
lods
outsb
fisubl
push
xchg
mov
and
iret
xchg
xchg
je
push
and
add
sbb
repnz
dec
jl
loope
push
adc
stc
mov
lods
movsl
mov
mov
push
cmc
loop
incb
jle
mov
jp
sub
loopne
xchg
into
or
lods
shll
negl
sub
jge
pop
cmp
jbe
hlt
aaa
add
jo
or
aas
xor
repz
fdivrl
or
out
sti
imul
xlat
dec
push
cmpsl
popf
cli
imul
scas
pop
push
mov
loopne
hlt
not
mov
fsubs
xor
xor
mov
sbb
and
mov
js
xchg
out
cld
and
outsl
test
rolb
inc
push
cld
negl
jg
or
mov
push
mov
pop
sarb
lock
cmp
push
sbb
int3
mov
adc
push
lret
xor
xor
add
out
xor
int3
cmpsb
test
jno
xor
sub
scas
movsl
cmp
scas
leave
push
mov
or
jae
mov
push
xchg
cli
pop
add
rcll
push
jo
pop
mov
mov
lret
shr
jle
add
out
adc
sbb
sti
pop
bnd
clc
orb
out
xchg
fisttpl
mov
imul
ljmp
inc
pushf
arpl
outsb
push
mull
inc
es
mov
in
pop
sbb
stos
push
mov
das
jns
loopne
jne
addr16
lods
inc
fbld
jnp
mov
sub
mov
imul
add
sbbl
mov
ret
pop
mov
stos
adc
or
lret
cmp
in
jne
lds
sub
mov
cmp
adc
fdivs
mov
out
lret
push
into
mov
shlb
jp
ror
sbb
jg
scas
jne
in
cmp
shll
scas
cmp
xor
or
lcall
mov
push
cmovs
stos
xor
or
sti
daa
cltd
jmp
mov
inc
sbb
push
mov
les
test
cmp
inc
fs
aam
xchg
jae
jae
mov
pushf
lods
sub
addr16
or
xor
and
mov
ja
inc
cmp
mov
jb
push
sbb
jge
popf
lret
cli
les
sbbb
into
dec
shll
je
xchg
mov
inc
aad
sub
call
lcall
lea
into
mov
xchg
outsl
push
pop
das
mov
ds
mov
clc
cmc
jecxz
push
mov
dec
xor
mov
stc
int3
jecxz
icebp
bound
daa
add
cltd
or
cmpsb
push
out
pop
loop
lret
jb
in
jp
loope
mov
or
and
xchg
add
pop
cmp
fnclex
xchg
inc
push
scas
lea
or
sbb
mov
cmp
test
repnz
stc
call
mov
movsb
ret
movsb
xor
mov
js
xlat
cmp
xchg
out
gs
jae
mov
shl
gs
xorl
cmp
addr16
subb
or
add
pop
push
push
cs
ss
mov
pop
pop
mull
movl
push
inc
aas
xchg
xchg
push
or
shll
sbb
mov
ret
cmpsl
test
rorl
popa
xor
push
iret
or
lret
or
cmp
inc
mov
out
mov
lds
jp
sti
mov
sbb
imul
xor
add
sub
xor
xchg
cmp
cs
das
cmp
and
pushw
imul
or
stos
mov
je
fstpt
adc
iret
or
addr16
cmp
int
mov
std
shl
and
nop
sbb
pop
push
mov
cmc
push
clc
movl
jns
test
xchg
sarb
lods
psubb
into
sub
out
add
call
pop
push
push
cmp
stc
sahf
scas
fidivs
lret
mov
mov
psubb
nop
jp
lcall
pop
add
imull
mov
lds
cmp
cmpsl
sbb
addr16
add
jo
add
fst
nop
lods
divl
pop
sahf
xor
adc
lods
adc
cwtl
leave
cmpsb
cmp
pop
data16
sbb
cmp
jmp
hlt
mov
test
outsl
adc
dec
jnp
negl
js
mov
out
test
imull
cmp
movsl
daa
aas
call
or
cmp
sbb
rcrb
scas
mov
mov
mov
jecxz
scas
pop
cmp
mov
shrl
enter
mov
xchg
out
lret
sarl
mov
add
mov
xchg
dec
sahf
pop
xor
and
add
imul
cltd
pushf
orl
ja
mov
mov
sbbl
aad
inc
sub
mov
ficomps
and
mov
inc
mov
jp
stos
or
pop
jp
neg
sbb
xlat
decl
mov
xor
and
pop
cmp
orb
mov
or
push
push
icebp
inc
enter
inc
stos
add
test
addr16
push
xchg
cmp
fistl
xchg
sbb
in
sbb
test
lret
dec
mov
sbb
pop
add
fs
out
nop
dec
or
xchg
push
fistpll
mov
lock
sarb
mov
lret
fcompl
inc
or
fdivs
cli
jl
into
std
addr16
dec
dec
push
mov
push
mov
jb
ss
movsb
inc
ret
out
pop
cmp
xor
xor
xor
push
sbb
lods
cli
jbe
xchg
leave
inc
cs
ror
mov
in
sub
fdivrl
lahf
loopne
mov
insb
push
push
test
emms
jge
cs
sub
sbb
xor
das
insl
jbe
sbb
mov
pop
adc
pusha
in
sbb
or
or
sbb
std
inc
or
fldcw
popf
addr16
sub
push
adc
cmp
fmull
orl
add
xchg
sub
adc
pop
xchg
pop
push
sbb
cmp
into
pop
push
loopne
sbb
imul
xchg
jge
inc
pop
in
dec
xor
jecxz
testb
mov
lea
mov
in
adc
add
bound
xchg
and
or
pop
into
xchg
aaa
les
imul
stos
mov
xlat
mov
popa
push
loopne
cmp
jmp
xor
cmp
sub
xchg
repz
clc
xchg
lods
xchg
fnstenv
insb
adcb
arpl
int3
cmp
add
repz
mov
sahf
out
cmp
jne
dec
test
ficompl
es
in
mov
sbb
sbb
pushl
dec
or
pop
push
cwtl
xor
jle
pop
and
or
cs
and
scas
mov
dec
in
les
aaa
outsl
lahf
sub
ss
shrb
pop
hlt
and
jg
sbb
or
call
dec
xchg
lds
loope
shrl
mov
daa
or
data16
pushw
scas
scas
push
clc
cwtl
imul
lock
bound
mov
movsl
ficoml
inc
je
add
cmova
aas
pop
popf
push
out
int
push
fsubrl
ljmp
scas
or
inc
xor
or
loopne
aad
xor
pushl
mov
lahf
xor
adc
xchg
orb
xchg
pop
andl
mov
push
cli
arpl
sub
sub
daa
or
inc
call
jp
add
mov
test
lahf
cmp
jle
cmp
lea
push
mov
aas
fbstp
mov
cmp
xchg
pop
pop
das
jle
test
add
pusha
or
out
xor
cli
rcrb
jle
xor
movl
lret
fwait
pusha
insb
mov
mov
sbb
mov
xor
ds
in
dec
mov
xchg
cmpsb
dec
adc
icebp
fcoms
pusha
lock
cmp
and
sub
ret
inc
enter
scas
mov
lods
push
icebp
cmpsb
jp
les
pop
pop
call
xchg
cmp
fwait
pop
push
add
pop
iret
xchg
add
clc
lahf
mov
inc
std
jno
subl
lods
lahf
mov
or
dec
shlb
pop
out
cmp
clc
mov
imul
ret
sub
push
or
mov
insl
lcall
adc
js
xor
insb
mov
outsl
insl
sub
pop
jmpw
pop
cmp
sbb
jno
mov
push
xchg
loop
scas
repnz
adc
jb
jo
inc
dec
cmp
test
nop
xor
cld
xchg
repz
ds
fdivrs
cltd
repz
and
cs
pop
rcr
inc
pop
adc
xchg
adc
aaa
stc
mov
std
pop
inc
inc
mov
dec
dec
mov
mov
adc
or
jo
pop
sbb
cs
add
mov
into
fsubrl
mov
push
mov
sahf
jle
xchg
ljmp
xor
std
faddl
mov
dec
xchg
lahf
xchg
nop
dec
mov
pop
test
fistl
repz
loope
daa
xor
push
and
std
xor
push
xchg
mov
enter
push
xor
int
enter
aas
scas
movsb
xor
jp
xor
scas
xchg
or
leave
shrb
push
in
mov
dec
test
lds
add
xor
adc
add
dec
repz
stos
jmp
jns
sub
mov
sub
sahf
inc
mov
insl
jnp
push
inc
jno
idivl
sbb
fwait
jo
dec
mov
cmp
xchg
and
sti
push
scas
sbb
sbb
fmuls
mov
icebp
sub
and
inc
mov
push
cmpsl
lods
sub
mov
nop
cmp
xchg
mov
neg
cli
inc
test
gs
fstpl
fwait
and
dec
jle
lods
xor
cmp
ret
adc
out
jns
repz
inc
in
ret
jmp
mov
icebp
int3
insb
pop
outsl
dec
rcl
repz
push
jmp
mov
sub
lahf
pop
adc
into
leave
ss
adc
push
rcr
xor
call
loopne
out
rcr
es
adc
bound
ret
mov
mov
stc
mov
xorl
pop
add
jl
cmpsb
jo
add
xchg
mov
jmp
test
outsb
jge
mov
test
into
pop
mov
sbb
xchg
push
adc
pop
jae
push
lods
push
push
cs
xor
dec
dec
roll
cmp
cmpb
lret
enter
push
testb
pop
jle
dec
cli
out
or
in
jnp
xor
pop
arpl
je
aam
rcrb
fdivs
scas
notb
test
sub
roll
push
pop
adc
stos
cmpsl
mov
je
dec
into
cmp
jno
adc
push
in
cmc
inc
mov
mov
jbe
lock
mov
js
outsl
cmp
stos
inc
pop
fwait
push
movsb
frstor
cmp
loopne
test
sub
add
pop
in
lea
or
rcl
sub
in
xchg
or
xor
xor
arpl
inc
int
stos
inc
lock
xchg
push
in
std
fs
mov
pop
jl
sbb
add
and
nop
cmpl
cwtl
cmp
jb
sbb
enter
adc
daa
movsb
fsubrl
sub
and
into
ja
outsb
mov
popf
xor
insb
lcall
mov
adc
jecxz
dec
or
push
adc
test
sub
cpuid
jle
fwait
jns
cld
in
push
push
inc
push
test
mov
jp
xor
pusha
mulb
push
test
pop
mov
xor
mov
or
subb
shrb
mov
mov
push
push
outsb
js
dec
cli
mov
ja
movsb
push
es
push
lds
sbbb
push
js
insl
repz
jl
stc
inc
pop
sub
iret
sub
push
and
pop
jb
jbe
daa
or
bound
sub
push
popl
adc
ds
lahf
adc
fdivr
and
xchg
insl
nop
lahf
ret
push
in
add
fwait
rcrl
inc
stc
mov
subb
in
sub
jbe
sub
xlat
icebp
inc
pop
xchg
out
pop
dec
xor
iret
xchg
or
sub
mov
daa
xor
or
stc
inc
fs
mov
cmpsl
ret
mov
ret
lret
fistpl
setb
movsl
outsl
pop
xchg
je
loope
scas
enter
pop
cmp
xchg
stos
jo
add
sub
pushf
push
stc
int
adc
inc
dec
and
ja
fs
inc
mov
adc
add
fildl
jo
adc
pop
mov
mov
shr
movsb
mov
test
movsb
push
inc
lods
ret
cmp
sbb
stc
push
ljmp
jg
dec
mov
fdivp
dec
test
arpl
push
out
ja
add
clc
xor
clc
pusha
lods
mov
and
fnstenv
rcr
out
pusha
and
jecxz
adc
popa
cld
je
mov
mov
mov
dec
cmp
out
mov
xor
pop
or
xchg
imul
mov
or
add
push
and
stos
in
cmpsl
push
sbb
cld
add
sub
or
lods
push
out
test
pop
mov
arpl
pop
fcoms
sbb
hlt
jno
mov
sbb
jno
mov
test
fsubrs
push
int3
inc
jbe
mov
sub
mov
cmpsl
fwait
rol
or
stos
movsl
push
xchg
inc
cmp
jns
cltd
sbb
call
in
call
xchg
lods
mov
sbb
scas
sbb
mov
inc
mov
ljmp
xchg
mov
mov
xor
jo
xor
pop
sbb
add
mov
aad
sbb
sub
mov
cmovnp
dec
xlat
out
out
push
mov
out
sbb
xor
jb
mov
fisubrl
inc
push
out
xchg
jmp
out
cmp
or
push
or
stos
jge
sub
and
seta
add
loop
cmp
orl
inc
sub
adc
popa
cmpsb
xchg
push
xor
das
cli
bound
data16
hlt
call
and
xchg
insb
test
jmp
insl
mov
jg
or
inc
inc
int
repz
pushf
outsl
int3
sahf
adc
push
dec
jecxz
mov
js
cmp
arpl
xchg
clc
out
test
sub
push
mov
mov
dec
imul
leave
sti
mov
loope
and
movsl
xor
jnp
inc
cmp
adc
xlat
xchg
cmp
mov
cltd
test
ret
das
lods
imul
adc
or
test
je
push
in
pop
push
icebp
mov
or
hlt
xor
loope
mov
fwait
lret
xchg
jae
dec
leave
and
jno
push
imul
jg
mov
enter
dec
lret
lcall
mov
into
lods
pop
pop
ficomps
aam
imul
fs
mov
mov
xor
stos
xor
out
ret
fdivl
push
stos
iret
insl
ret
cmp
fbld
add
bound
mov
fistps
sbb
adc
ret
push
lret
inc
jl
push
iret
xor
mov
jb
and
mov
aas
cmp
mov
adc
cltd
push
les
inc
pop
aam
or
idivb
jb
sub
cmp
and
pop
push
in
outsb
in
scas
ja
rol
sub
jbe
cmpsb
xchg
mov
ja
inc
filds
sti
das
addr16
and
mov
and
add
mov
andl
cli
nop
bound
mov
and
fdivl
push
sub
jl
insl
test
dec
or
stos
gs
dec
dec
cmp
fs
mull
mov
push
outsb
xchg
inc
call
xchg
iret
pop
and
or
push
inc
lods
cmp
out
into
cmpsb
repnz
sbb
adc
xchg
mov
call
test
in
cmpb
popa
out
int3
test
cltd
fidivs
pop
push
sbb
pop
and
sub
fists
jb
xchg
sbb
fs
sub
pusha
push
mov
js
test
mov
pop
enter
xor
test
adc
lahf
cwtl
mov
arpl
pop
mov
cmc
adc
insb
sbb
call
xchg
lods
shrb
cs
jl
jb
outsb
inc
pop
xchg
xchg
int
inc
insb
addr16
pop
call
outsb
fimull
adc
iret
dec
sti
xchg
adc
es
imul
mov
jl
pusha
jb
fwait
jno
xchg
iret
inc
dec
dec
pop
loop
add
loope
sahf
addb
push
icebp
mov
add
dec
data16
dec
inc
push
jge
mov
mov
cwtl
cmpb
shl
jge
pusha
in
sub
pop
pop
add
mov
pop
sbb
push
dec
inc
xor
cmp
mov
fisubs
not
rcrb
lods
hlt
sbb
xor
lcall
imul
and
in
test
dec
in
mov
ss
push
push
cmp
sub
daa
inc
pop
sbb
rcr
daa
sub
rcrb
inc
add
lods
inc
into
aad
ljmp
pop
jp
sbb
loopne
adc
notb
inc
cli
pop
faddl
sub
jae
lds
mov
push
inc
cmc
icebp
imul
sub
sbb
sub
sahf
movsl
hlt
xchg
lods
pop
sub
dec
cltd
ja
into
out
or
fistpl
fists
mov
sub
sub
jnp
faddp
adc
imul
and
pop
inc
cwtl
pop
pusha
movsl
cmc
mov
fidivrl
pop
xor
bswap
jecxz
jmp
fidivrs
ss
mov
xchg
adc
dec
cmp
mov
push
fsubr
jg
in
cwtl
mov
pop
push
dec
inc
push
adc
insl
lods
jecxz
jg
push
pushf
push
xchg
lock
xchg
mov
add
int3
add
shl
mov
sub
cmp
dec
fwait
and
rcrb
mov
cmp
outsb
enter
pop
xor
arpl
mov
sub
xchg
push
insb
push
imul
dec
int
inc
scas
adc
mov
or
mov
xchg
push
leave
mov
outsl
mov
mov
icebp
xor
sub
fadd
pop
cld
xchg
pusha
aad
jae
mov
xor
repz
or
dec
adc
push
mov
scas
repnz
jecxz
and
arpl
adcl
ret
jb
mov
insl
dec
inc
push
pop
lret
or
adc
push
dec
sbb
ja
sub
cmpsl
gs
fucomip
fwait
icebp
mov
lods
mov
aam
std
mov
ret
push
cmp
mov
inc
call
out
sti
push
push
dec
out
bound
enter
jnp
mov
insb
sub
sub
xchg
ret
rcrb
xor
daa
push
add
xor
inc
test
shlb
push
push
mov
mov
imul
mov
push
sbb
cwtl
jl
add
mov
xor
lea
inc
repnz
push
inc
dec
ret
xor
pop
or
and
in
dec
into
mov
inc
icebp
ljmp
shll
mov
call
pop
xor
leave
cmp
repnz
int3
dec
sbb
xchg
adc
xchg
shrb
jne
ss
inc
sbb
test
lods
shlb
in
cmp
cmp
rcll
in
dec
std
les
scas
mov
push
rcr
enter
ljmp
mov
add
mov
lret
pop
jno
stos
popa
stc
pusha
shrl
jle
or
dec
je
inc
mov
or
pushf
sar
jb
arpl
lods
xor
xchg
jne
push
fildl
pushf
shll
cmpsb
in
ss
sbb
jb
mov
js
clc
fs
mov
xchg
sbb
jge
ret
inc
std
adc
sub
or
ret
outsb
shrl
hlt
mov
rorb
mov
and
icebp
push
mov
shrb
in
or
cltd
or
mov
cwtl
adc
loop
das
and
pop
xchg
int
jle
fidivl
mov
jecxz
int
addb
mov
jb
and
not
cltd
iret
loope
inc
pushf
aad
cmp
rcll
movsl
mov
out
lahf
xlat
mov
outsb
loope
lods
dec
adc
add
mov
mov
cmp
xchg
pop
aad
out
test
and
lret
pop
inc
sub
inc
shl
and
es
mov
pop
rol
mov
sub
cltd
xchg
mov
cli
xor
inc
fistpll
imul
add
sti
jno
and
enter
push
shll
lock
add
cmp
orl
cmp
lret
dec
jno
jne
mov
add
push
test
sti
mov
dec
daa
jl
sbb
movsb
jmp
nop
mov
popf
pop
iret
pop
ja
ds
sbb
ds
das
sti
push
mov
je
xchg
outsl
xor
ljmp
mov
xchg
xlat
les
adc
xchg
mov
aas
movsl
pop
or
arpl
andb
addr16
jne
mov
bnd
fistpll
push
pushf
pop
movsl
inc
call
xchg
add
xor
decb
mov
mov
and
mov
cmp
jo
daa
xor
rcl
mov
mov
std
inc
jnp
mov
stos
lds
cmp
mov
aad
ja
mov
dec
dec
cmp
pop
mov
mov
lcall
int3
shlb
xchg
and
cmp
inc
mov
pop
out
xchg
sub
xchg
sub
adc
enter
xor
xchg
aad
xchg
dec
movsl
icebp
inc
ja
push
les
in
scas
cmp
cmc
xor
adc
imul
xchg
cmp
mov
das
adcb
add
shr
or
mov
inc
js
clc
or
xor
sbb
into
nop
mov
xlat
push
int
repz
and
lods
ficompl
ror
insb
xchg
mov
sbb
scas
mov
mov
cwtl
cmp
jne
jle
pushf
inc
xchg
jge
shl
sub
test
or
dec
xor
data16
mov
mov
adc
push
jae
je
push
nop
cmp
and
cmp
sbb
sbb
pop
xchg
lcall
bnd
add
mov
jge
gs
rcrb
ja
aad
addr16
adc
addr16
or
inc
mov
loop
and
imul
clts
stc
jp
sub
mov
jp
stos
cmpsl
aad
mov
mov
insb
sub
das
sub
push
mov
movsb
mov
das
mov
add
mov
xor
mov
iret
lock
lret
rcll
out
sahf
pop
push
int
es
jl
je
adc
pavgb
jl
mov
push
jo
mov
repz
mov
repz
call
adc
and
jp
hlt
pop
inc
or
test
add
out
aad
jle
outsb
mov
jns
je
addl
ret
mov
and
mov
fsubrs
mov
pop
mov
cwtl
jge
ret
int
add
mov
xchg
out
test
and
inc
insb
mov
fisubs
int
nop
iret
or
pop
cmp
fstpl
sbb
sub
xchg
xor
popa
mov
daa
jg
dec
push
mov
mov
mov
ljmp
jmp
gs
ss
js
aaa
cmp
sti
mov
stos
and
push
mov
es
int
ds
mov
or
jae
testb
leave
or
sahf
xor
lods
ret
xor
lret
fnstenv
addr16
divl
dec
out
dec
and
push
lahf
jae
stos
scas
mov
in
aad
repz
jbe
fcmovb
rol
fmuls
loopne
mov
shrb
sbb
xchg
bound
lea
shll
inc
arpl
rclb
mov
xor
push
fs
in
and
aas
xorl
daa
aad
test
push
mov
cld
and
shl
or
sub
mov
pop
dec
mov
shlb
fsts
subb
mov
add
jb
sarl
and
and
adc
sub
stos
orb
jne
adc
dec
mov
movsl
sub
pushf
in
fwait
lret
into
cld
push
jno
jbe
pop
fsubl
xchg
movsl
loope
movb
orl
push
push
or
test
cmp
pop
pop
push
stos
movsl
test
ficompl
iret
cmpsl
popf
test
adc
mov
ds
imul
sbb
add
sbbl
stc
mov
mov
loope
inc
jle
js
jb
call
mov
shll
jmp
xchg
pusha
add
cmp
or
gs
iret
movsl
inc
cwtl
mov
popa
cwtl
sbb
into
and
arpl
gs
adc
lock
cmp
into
addr16
enter
jl
and
sti
or
pop
pop
mov
and
xchg
xchg
or
loop
and
or
scas
mov
cmpsb
xchg
jae
pop
inc
cli
mov
xchg
fisubs
jmp
mov
xchg
fstpl
in
pop
in
das
movsb
mov
out
dec
lahf
test
shrb
and
inc
or
xchg
xchg
adc
enter
xor
arpl
inc
ret
jae
js
adc
inc
inc
adc
call
cmp
dec
add
leave
test
sti
andl
or
les
leave
and
jne
jnp
bswap
jp
fnstsw
jnp
xchg
inc
mov
xor
fsubl
inc
mov
test
add
scas
mov
ret
add
push
test
mov
stc
inc
and
xchg
pop
iret
adc
lock
jo
out
inc
push
pop
icebp
adc
mov
outsb
adc
mov
test
mov
roll
repz
imul
inc
shlb
ljmp
pop
xchg
cwtl
pushf
mov
inc
mov
and
inc
scas
adc
or
mov
cmpsl
xor
xchg
lds
push
std
les
shrl
outsb
or
adc
inc
jmpw
lock
shr
loope
cs
add
out
nop
sarb
cli
push
inc
jo
inc
jp
pop
int3
push
je
gs
mov
jae
pop
push
sub
sub
mov
ficompl
shr
scas
adc
fadds
pop
jmp
pop
add
lahf
mov
xor
inc
jle
dec
fisttpl
imul
dec
mov
mov
push
jge
mov
hlt
icebp
mov
lcall
es
push
hlt
pop
ljmp
mov
maxps
mov
fstpt
pusha
push
mov
mov
rclb
nop
fsubs
or
sub
xchg
sub
test
pushf
adc
not
int3
pusha
mov
in
mov
loope
je
insl
jp
int
mov
dec
das
aam
lret
ja
nop
pop
filds
data16
js
fildll
mov
aad
cwtl
rcr
xchg
out
sub
rorb
push
aas
sub
lea
sub
push
pop
pusha
push
movsb
in
out
ljmp
gs
jle
insl
or
xor
xchg
iret
pop
outsl
push
jne
loope
push
jae
icebp
cmpsl
imul
aad
mov
pop
mov
fistpl
test
sti
and
negb
clc
sub
push
test
stos
dec
or
fwait
or
movsb
jb
inc
adc
add
rorl
mov
mov
cli
movsb
xor
pop
popf
pushf
ret
pop
push
mov
shll
mov
dec
loope
mov
popa
loope
repz
int3
shl
lds
jns
loope
into
jno
insb
imul
into
je
xchg
push
je
mov
test
test
mov
mov
jmp
dec
push
out
sbb
mov
add
fdivp
sarl
fisttps
scas
sbb
lds
fmull
sub
stos
cli
mov
push
sub
es
jne
push
test
movsb
repnz
mov
movsb
xor
pop
mov
pop
xor
ljmp
mov
hlt
jl
cmpsl
jo
lea
in
sbb
sarl
mov
mov
outsb
mov
pop
mov
adcl
popa
aas
inc
xchg
push
and
xchg
pop
jmp
cmp
pop
mov
imul
rcrb
pusha
cmp
inc
or
adc
pop
mov
pusha
rol
fsubs
outsb
add
lret
pusha
jp
mov
add
push
add
adc
sbb
sti
lds
call
cltd
aad
ljmp
adcb
fistps
js
test
ret
fnstsw
in
xor
aas
mov
nop
mov
lret
adc
loopne
push
cwtl
scas
and
rorb
popa
mov
dec
pop
push
inc
int3
mov
gs
ret
and
sbb
fucom
ja
adc
je
xchg
mov
dec
dec
out
jg
mov
push
mov
dec
sti
xchg
jne
cld
das
dec
pop
jnp
jp
loopne
jo
add
imul
cmp
dec
sbb
xchg
push
dec
hlt
pusha
xor
add
jg
mov
cli
loop
cmp
ds
lret
scas
mov
sbb
mov
aad
lds
mov
repnz
js
nop
imul
ss
push
sub
lods
or
pop
and
addr16
inc
negl
cld
mov
movsb
mov
lcall
mov
adc
adc
xchg
popf
es
xchg
push
jl
es
push
xchg
sbb
or
fwait
sbb
pop
jne
es
add
aad
fsubrp
push
cmpsl
pusha
mov
mov
ds
cmc
addb
scas
sti
mov
or
or
pop
fwait
sub
sbb
insl
outsl
push
jl
dec
fistpl
lea
inc
mov
enter
aam
inc
push
in
mov
lea
xchg
std
mov
fwait
or
adc
sub
in
scas
pop
jae
adc
mov
test
fildll
scas
cmpsb
add
pushf
add
lahf
les
lods
mov
add
mov
sub
sahf
mov
ds
mov
jecxz
jo
push
ret
adc
lods
stc
mov
je
int
in
mov
sbb
les
jns
je
xlat
sub
or
cmpsb
cs
popf
dec
aaa
shrl
je
mov
xchg
pop
mov
ljmpw
inc
pushf
roll
ficoms
add
pop
ja
int3
sub
fldcw
loope
mov
scas
mov
rcrl
inc
test
test
push
dec
mov
mov
out
mov
aad
negb
das
lods
ja
call
ret
push
push
push
div
out
push
decl
push
shr
mov
test
mov
push
jl
sbb
fildll
data16
loop
mov
xchg
out
in
pop
add
mov
hlt
jae
leave
or
test
push
cli
adc
fcoml
fnstcw
jns
push
pop
sti
mov
xchg
or
fsubr
pop
adc
call
dec
xchg
pop
cmp
sbb
ret
mov
inc
xchg
lods
mov
out
aaa
adcb
lea
push
jecxz
fcomps
outsb
stos
negl
ss
push
mov
dec
int
mov
cmp
cltd
mov
pop
mov
pop
xchg
mov
int
pop
loop
inc
dec
mov
fdivr
mov
std
sub
xor
cmp
pop
or
fmulp
push
jmp
jge
sub
call
pop
xchg
fnstcw
rolb
sti
cmp
mov
shlb
insb
sub
outsl
dec
pop
es
sbb
push
push
add
dec
jle
mov
jmp
and
enter
testl
jne
scas
mov
sub
fidivrl
lock
push
out
cmp
lret
or
es
adc
push
ds
inc
push
or
and
inc
pop
cli
mov
repnz
cli
or
jmp
mov
negb
rol
aaa
lcall
pop
sub
int
popf
jl
adc
or
fildll
adc
jp
push
lds
push
push
or
imul
pop
es
xor
lds
adc
call
push
jmp
sti
or
jmp
mov
lea
cmp
inc
andb
push
fwait
mov
and
pop
fstp
loop
cltd
inc
incb
testb
jbe
lea
adc
mov
ja
mov
mov
mov
mov
xor
insb
ja
dec
fsts
sti
stos
ds
adc
out
hlt
jae
add
in
test
or
gs
out
fstps
pop
addr16
mov
push
mov
pop
fists
dec
jae
outsl
cld
sbb
mov
mov
mov
inc
dec
popf
imul
push
cli
push
mov
jl
roll
mov
cmc
pop
sbb
cmp
pop
and
ljmp
cmp
mov
xchg
dec
push
inc
xor
sti
xchg
lcall
fs
imul
push
mull
mov
mov
adc
dec
popa
xor
fsqrt
or
mov
cs
mov
rorb
int3
adc
fnstenv
add
loop
and
pop
mov
lds
stos
testl
imul
int
mov
sbb
ret
lds
push
add
lcall
fcoms
ss
pop
rclb
inc
mov
push
imul
ja
inc
jno
js
mov
mov
pop
outsl
insl
sti
and
repz
js
cs
ljmp
js
xor
lods
inc
xchg
inc
dec
insb
jl
or
aas
jmp
test
pop
adc
in
jge
add
divl
iret
aas
enter
pop
out
jno
sbb
stos
inc
divl
inc
push
xchg
mov
sbb
push
sbb
jge
cmpsl
int
xor
sahf
adc
lret
adc
cmp
cmpsb
mov
lea
jg
ds
cmp
out
popf
aam
pop
int3
es
mov
push
stos
pop
imul
xchg
fnsave
mov
add
fwait
cld
xchg
hlt
mov
dec
andl
aas
xchg
lods
cltd
or
into
ret
xor
hlt
pushf
xlat
in
in
add
ret
mov
outsl
lea
inc
mov
daa
cmpl
sbb
dec
inc
add
mov
in
aaa
inc
lods
and
pop
jbe
fistps
or
push
sahf
ret
jb
xchg
xlat
popf
jnp
es
sarb
insb
stos
ret
mov
les
nop
loopne
inc
std
in
sbb
popa
cltd
cmp
loop
mov
push
jmp
xor
je
mov
xchg
sbb
adc
imul
xchg
jb
imull
movsl
push
popa
dec
outsb
xchg
xchg
int3
jg
xchg
dec
cli
or
jno
mov
test
mov
aam
out
xchg
mov
xor
cmp
mov
repz
fldcw
mov
jl
es
jp
dec
pop
cmp
lods
pop
cli
push
push
sub
mov
push
add
push
mov
pop
movsl
cmp
sub
mov
mov
lods
pushf
xlat
mov
fisttpll
or
push
cli
loop
test
push
hlt
movsl
xor
daa
push
jle
cld
jge
sub
test
mov
sti
ret
std
inc
cmp
xchg
addr16
pop
mov
mov
test
sub
sbb
lahf
mov
sbb
add
into
stos
mov
sarb
ds
dec
rcl
cmc
pop
and
or
dec
mov
or
and
fwait
push
lock
lock
jge
andw
stos
mov
pop
stos
inc
mov
mov
pop
xchg
or
push
mov
jmp
ss
lods
in
adc
cmp
xorl
shrb
ficoml
daa
mov
mov
imul
xchg
lods
test
mov
sub
das
add
lods
sub
test
jl
dec
jge
sub
arpl
ljmp
in
add
add
ficompl
fcomps
or
mov
into
inc
adc
xlat
outsb
fiadds
mov
mov
sbb
push
sbb
sar
movsb
mov
and
sahf
push
and
cmpsb
mov
les
inc
sbb
xor
lcall
mov
stos
fs
hlt
jmp
fs
xchg
sbb
xchg
cwtl
int
mov
and
fisttpll
sub
addr16
adc
cmc
lcall
dec
je
dec
xchg
push
sbb
and
pop
insl
dec
stc
push
sub
mov
cmc
jo
loop
out
rolb
scas
pop
mov
xor
or
dec
test
and
or
gs
sub
fcompl
rcrb
add
xor
icebp
loopne
leave
fs
add
icebp
jg
mov
jg
imul
push
imulb
mov
add
pop
out
leave
mov
stc
cmp
cmpsl
int
xor
daa
sti
mov
xchg
fdivl
push
call
pop
addl
cltd
lods
call
jns
pop
dec
xchg
js
and
js
sarl
jmp
jp
inc
aam
es
into
lods
jl
in
fildll
mov
pop
pop
negl
outsl
loopne
leave
add
clc
mov
dec
dec
sub
aad
mov
stos
test
xor
ds
call
mov
arpl
push
mov
test
xor
sub
into
test
int
aam
ficoml
call
inc
or
imul
lds
nop
stos
or
enter
out
sub
outsl
movsb
mov
xlat
ss
inc
dec
les
aas
dec
stos
sub
lock
adc
int3
fdivs
lret
jge
addb
jecxz
bound
mov
pop
pop
push
add
call
fistpll
cmc
mov
cmpsb
push
fisubrl
xor
aaa
shrb
and
clc
cmpsb
cld
in
mov
inc
adc
ja
add
jbe
mov
push
sbb
into
pop
js
testb
div
pop
sub
xchg
mov
divb
sub
sbb
and
mov
shlb
xchg
inc
into
ss
paddsw
mov
mov
and
loope
loope
cld
jge
outsl
xchg
loop
dec
jnp
outsl
cmpb
jo
popf
lret
nop
xor
shll
js
cmp
pop
mov
notb
lock
or
sbb
pusha
iret
cmp
lods
push
into
mov
aas
loop
push
cs
int
inc
repnz
movsl
sbb
into
adc
in
ret
ja
lahf
and
mov
ljmp
and
xchg
testl
push
pop
adc
dec
sbb
test
jp
xchg
shrb
add
jmp
cmc
add
mov
pop
movsb
cwtl
add
ss
xchg
int
aaa
cmc
shr
and
int
pop
shl
int
pop
push
mov
mov
cmp
mov
in
data16
pop
in
jmp
cli
mov
xchg
or
xor
les
mov
pushf
push
out
lds
push
stc
jo
xchg
pop
and
cwtl
mov
mov
fdivrl
dec
pushf
aad
popf
loope
hlt
stc
mov
or
test
inc
clts
inc
shr
inc
ret
sbb
sbb
mov
cmp
sbb
fsub
or
je
in
sbb
out
loopne
clc
mov
push
cmp
jae
inc
mov
sbb
sub
adc
push
in
mov
popf
mov
xor
mov
mov
jle
fwait
das
imul
inc
cmp
movsb
mov
jl
push
pop
mov
fs
movsb
mov
xchg
call
sub
popf
add
pop
cmp
dec
dec
xor
frstor
sbb
lods
and
mov
outsb
sub
push
pop
add
pop
add
out
cli
jge
cwtl
inc
outsl
fildl
fsubr
or
sub
xchg
push
cmpsb
inc
adcb
sarl
pop
stos
and
push
jns
fcmovbe
rclb
sti
scas
jecxz
pop
repnz
lods
push
adc
rcrl
outsb
and
pop
daa
add
dec
pop
daa
sub
jo
and
jb
dec
call
movsb
mov
movsb
gs
sbb
testl
mov
cmp
mov
nop
mov
loop
mov
lds
sti
repz
add
mov
aad
inc
cmp
mov
scas
enter
and
mov
and
or
mov
fcmovu
sbb
add
pop
sub
leave
xchg
iret
add
notl
mov
fs
ljmp
mov
xchg
jns
jl
call
or
scas
or
ja
add
jb
ret
dec
pop
sti
inc
pop
fidivs
xchg
js
xor
pop
jp
xor
and
lods
andl
orb
adc
scas
pop
sbb
sbb
mov
jae
and
cmp
pop
pop
fdivrs
adc
into
test
call
loop
bound
fsubr
mov
idivb
negl
shll
call
out
fldt
mov
push
imul
jmp
mov
es
push
fs
leave
mov
jecxz
xlat
or
push
aaa
addl
rorb
adc
mov
mov
or
dec
and
pop
pop
fs
fs
cmpsl
mov
into
sub
add
in
push
lcall
push
aad
je
sbb
ljmp
sub
testl
jno
sar
popf
addr16
dec
mov
jecxz
int3
ja
iret
clc
push
sti
cmp
inc
jg
cmc
push
sbb
lahf
imul
inc
pop
mov
lock
mov
popa
rcr
fucomi
out
loop
dec
jb
lret
outsb
push
int
xchg
out
add
dec
lock
inc
or
int3
mov
xor
in
subb
add
aad
xchg
jmp
xor
add
or
insl
insb
mov
or
mov
mov
xchg
pop
push
xchg
or
inc
cmp
xor
dec
ds
xchg
mov
xchg
inc
jno
es
xor
fisttpl
lods
andb
cmp
pop
xor
fdivr
cld
sub
lods
xchg
shl
mov
adc
inc
es
pop
fs
shrb
xor
or
fists
fs
mov
add
jp
jb
movsl
test
jno
pop
shlb
bound
data16
roll
adc
cld
fmull
mov
cltd
ja
add
cli
lret
pop
mov
push
add
fildll
lcall
sub
or
push
pop
cs
gs
loopne
or
add
dec
or
and
popa
fistps
sbb
jg
sub
addr16
push
fwait
xchg
push
xchg
clc
sbb
es
jns
xor
leave
mov
stos
mov
jbe
or
lret
ja
mov
sub
shlb
out
in
lds
in
cld
test
add
jo
dec
push
outsb
flds
pop
mov
dec
inc
in
popa
cmp
cltd
mov
fiaddl
cwtl
cmpsb
aad
shlb
mov
fadd
outsl
sub
mov
inc
jge
scas
mov
push
dec
dec
mov
adc
lret
pop
xor
mov
and
jno
out
sbb
or
and
in
adc
adc
sbb
cld
xchg
int
aam
xchg
xor
cs
or
test
or
and
hlt
adc
inc
pop
out
jo
sbb
andb
inc
and
push
xchg
cld
mov
jle
cmp
adc
cmp
sbb
mov
leave
cltd
pop
pop
sbb
pop
dec
stos
and
pop
xorb
jl
aas
dec
mov
mov
test
push
dec
pop
mov
clc
push
adc
and
xor
imul
and
inc
fnstsw
rorl
addr16
or
xor
add
cmp
pop
add
lods
dec
sarl
add
in
jbe
sbb
jge
hlt
je
out
scas
push
fld
bnd
jmp
cmp
jmp
jno
xchg
int
aas
and
ret
idivl
adc
aad
jbe
fisubl
jecxz
imul
and
mov
push
and
rcl
and
xchg
sub
adc
je
xchg
lods
mov
mov
xchg
rorb
repnz
mov
xor
mov
jae
mov
adc
or
aad
xor
int
inc
dec
inc
cwtl
out
and
cmp
addr16
xor
enter
cmpsb
rcl
sub
or
ljmp
sbbb
or
idiv
adc
test
rol
ret
clc
lods
ficomps
mov
and
pop
cmp
mov
inc
popa
gs
xor
enter
fdivs
jae
lahf
dec
xor
fildl
lds
pushl
cli
xor
arpl
aaa
out
cli
jb
movsb
negl
repz
mov
hlt
jne
lahf
outsb
scas
into
mov
inc
loope
inc
xchg
jmp
jb
pop
cwtl
or
or
cmp
pop
mov
xlat
dec
imul
fs
pop
pop
dec
aad
mov
jns
sbb
pop
xchg
fwait
xlat
cmp
fsubrs
mov
cld
xchg
ret
ja
sub
imul
fisubs
fistpll
pushf
jbe
adc
in
jae
pop
jns
out
jle
loop
inc
andb
cmp
lcall
and
adc
enter
fildl
mov
rclb
jnp
mov
sahf
sub
imul
dec
xor
roll
nop
ret
xchg
into
cltd
les
fdivrl
ret
push
in
mov
mov
hlt
stos
dec
xor
xor
xchg
fdivr
dec
sub
mov
sub
loop
sarl
sbb
popa
jo
adc
aad
and
mov
es
sbb
jb
leave
jle
adc
ss
out
decb
push
fisubrl
movsb
push
pop
ds
loopne
dec
into
add
addb
fsubrs
ror
mov
dec
cmp
ret
xchg
xchg
pop
sub
bound
lods
mov
jne
cwtl
xor
push
push
cmp
add
lea
adc
in
sub
stc
push
add
push
sbb
xor
int3
lea
xor
adc
shlb
in
adc
sar
in
cmp
jle
inc
aaa
xchg
out
xchg
jp
int
adc
jnp
inc
lock
mov
ret
cmpsl
clc
and
daa
js
or
shl
std
push
ja
aas
xor
push
sarb
insb
cmc
jecxz
xlat
and
push
mov
add
aam
std
xchg
sbb
pushf
sbb
xor
insl
add
movsb
inc
and
lock
data16
cwtl
std
std
jl
push
aaa
pop
pop
dec
loopne
mov
lcall
daa
dec
inc
lcall
sbb
les
push
cltd
aaa
stos
lahf
outsl
js
cli
push
stos
xchg
ja
rolb
fistpl
mov
loop
fnsave
ljmp
imul
mov
fstpt
jmp
jg
lret
sahf
in
aam
pop
mov
mov
shl
icebp
aam
sbb
jo
mov
clc
imul
das
popf
js
lret
andl
inc
dec
inc
fdivp
repz
pop
fisttpl
cmp
xor
mov
xor
cmp
insl
adc
ljmp
mov
adc
scas
wbinvd
out
in
les
sbb
loope
addr16
jnp
mov
cmp
push
lahf
insb
nop
outsl
repnz
ffree
pop
cmp
dec
jns
pushf
gs
pop
arpl
leave
lock
cmpsb
test
outsb
into
in
lods
adc
push
stc
inc
or
mov
or
mov
fcmovnbe
dec
pop
jnp
pop
xor
push
mov
mov
rol
shlb
jge
in
in
dec
movsl
loope
jl
outsl
mov
jmp
inc
ljmp
stc
sub
add
ficoms
gs
clc
mov
imul
es
sub
sub
add
mov
push
les
xor
dec
mov
out
dec
pop
pop
sub
mov
addb
push
sar
pusha
or
push
jbe
jg
mov
aad
lcall
pop
stos
push
push
leave
out
cmp
fisttps
push
push
ret
adc
pop
ret
sahf
loopne
lock
fdivr
andl
or
jg
outsb
cmpsl
ja
mov
add
push
or
push
inc
mov
pusha
insl
je
jp
mov
pop
lcall
adc
mov
cmpsl
loopne
out
cwtl
jne
icebp
jmp
leave
pop
pop
lods
mov
adc
push
popa
or
xor
jae
pop
push
mov
dec
shrl
js
pop
and
scas
enter
daa
loope
xchg
out
mov
sbb
or
adc
jae
ljmp
dec
call
jae
arpl
cmpsb
sbb
adc
pop
popf
push
pop
fnsave
push
inc
mov
repnz
xchg
scas
iret
push
inc
mov
out
loope
push
dec
hlt
push
int3
das
scas
and
leave
mov
add
dec
jmp
push
jne
mov
add
icebp
sub
in
xchg
insb
ret
push
lcall
inc
xchg
and
cli
leave
scas
shll
mov
cwtl
cmp
xchg
xchg
sub
in
add
xchg
je
mov
xchg
push
push
nop
push
roll
fwait
movsl
dec
jmp
dec
mov
gs
stos
jb
mov
push
dec
cmc
iret
ds
subl
lcall
outsb
dec
aaa
into
test
inc
inc
stc
into
out
stos
jno
jae
add
cltd
inc
stc
add
enter
sub
out
mov
mov
sub
loope
mov
jl
mov
xor
decl
cmp
sub
lea
int3
popa
xchg
push
cs
cmp
testb
in
inc
out
mov
cwtl
dec
insb
mov
loopne
xchg
imul
jnp
mov
and
or
xchg
or
lods
or
std
arpl
fs
out
push
sbb
lret
out
adc
outsl
orb
push
inc
imul
cli
sub
scas
inc
lcall
shrl
pop
and
and
fs
in
sbb
inc
aas
aam
gs
in
mov
pop
sbb
repnz
cmpsb
or
pop
push
lods
clc
sub
xor
test
or
insl
fistpl
lock
dec
lahf
fdivs
sbb
xchg
scas
ja
std
out
and
stos
pop
loope
lret
sbb
add
inc
adcb
jge
and
jnp
lret
add
jns
cmp
cwtl
repnz
insb
adc
sbb
sbb
inc
shll
sub
pop
lret
nop
outsl
rcrl
push
cmpsb
int
pop
cld
daa
in
adcl
ror
cmpsb
pop
cli
call
aam
xlat
inc
cmpsb
mov
jnp
gs
test
loope
ret
int3
lds
js
imul
xchg
sub
push
jnp
pushf
and
and
and
sub
popl
cmp
iret
icebp
ds
sub
je
xor
aas
jae
pop
out
mov
inc
enter
stos
mov
jb
cmp
ret
negl
movsb
ss
pop
mov
mov
enter
sbb
cmpsl
stc
xchg
add
test
jb
notl
divb
mov
dec
pop
pop
cs
mov
sub
mov
adc
xchg
movsl
push
push
jl
xchg
jns
inc
lret
les
dec
xlat
xor
test
jg
adc
dec
daa
daa
sti
cli
pop
xor
lret
sbb
sub
subb
lcall
arpl
and
sbbb
aam
cmp
addr16
icebp
pusha
in
ss
mov
mov
arpl
pop
test
add
in
inc
pop
and
push
dec
mov
push
add
pop
js
clc
lahf
sub
sub
fs
and
add
add
mov
sbb
inc
cmp
push
and
xor
popw
dec
jbe
out
xor
dec
out
dec
stos
or
shr
cmp
jge
inc
sub
push
pop
cld
inc
mov
mov
or
or
cwtl
sahf
cli
push
test
mov
pusha
or
in
mov
inc
or
xchg
insl
cs
aam
mov
popa
sbb
les
mov
push
std
push
out
push
push
scas
xchg
push
cld
ret
jae
xchg
jle
popa
lret
cmc
notl
mov
xor
adc
cmpsb
rclb
cmp
ss
mov
mov
inc
dec
pop
aas
insl
dec
loopne
cmp
xor
inc
mov
push
shlb
scas
sti
in
lret
leave
mov
xor
cmp
or
xchg
int3
push
iret
dec
shr
clc
push
and
jecxz
xchg
aad
outsb
ja
pop
pushf
loop
fstpt
insb
mov
das
leave
loopne
jb
mov
imul
inc
lods
push
bound
inc
pop
mov
sbb
in
and
scas
jg
stos
insl
es
xor
dec
push
xchg
pop
inc
js
ja
fnstsw
pushl
jno
mov
mov
aad
popa
int3
adc
cs
jle
cmp
clc
lock
pusha
cmp
in
mov
repz
daa
push
sub
jmp
sub
sbb
xchg
sti
jbe
cmpsl
inc
sub
jbe
test
xor
in
fmulp
bound
nop
ret
dec
std
scas
xor
mov
into
and
rorb
in
mov
jmp
add
push
lock
mov
sbb
arpl
jl
mov
jno
xchg
bound
xor
or
fisubs
ja
jbe
or
push
xor
in
jg
lahf
mov
in
les
movsl
outsl
dec
mov
ficomps
mov
xchg
xchg
jbe
mov
jne
jl
stos
mov
xchg
ds
jp
cmp
mov
loopne
pop
jno
dec
cmp
arpl
mov
inc
mov
inc
adc
sahf
mov
cli
shlb
sub
shrl
nop
dec
addr16
test
xor
or
push
and
dec
mov
mov
addr16
das
inc
mov
lods
and
pop
iret
leave
push
add
xor
xor
lods
mov
idivl
mov
dec
mov
in
inc
cmpsb
sbb
aaa
iret
sbb
out
scas
pop
mov
adc
ret
xlat
into
pop
mov
xchg
jae
pop
popa
ret
add
mov
mov
ds
push
test
pusha
lahf
inc
cli
cmp
leave
enter
lcall
stos
ret
sub
pusha
jno
mov
push
test
stos
insl
push
push
xchg
xor
divl
lods
mov
jne
inc
cwtl
dec
call
jmp
test
dec
ret
jne
loope
in
gs
mov
pop
mov
cltd
add
or
test
cltd
leave
stos
mov
mov
mov
dec
lcall
add
mov
sub
mov
or
mov
pop
jmp
pop
pop
adc
cwtl
aad
jl
add
jae
cmp
lods
dec
sub
sub
jl
fwait
pop
jae
call
mov
aad
addb
in
cmpsb
push
jb
mov
mov
mov
add
add
dec
scas
mov
inc
pop
xchg
and
aam
lods
push
sbb
and
fsts
std
gs
add
ljmp
popa
push
fidivl
push
xchg
lock
or
add
int
pop
test
data16
jg,pn
jb
push
icebp
sbb
pusha
mov
ds
jnp
xchg
scas
xchg
xchg
into
hlt
or
daa
mov
jp
scas
hlt
cmc
cmp
lea
xor
out
jnp
lret
pop
push
js
add
out
jns
aad
jmp
sbbl
or
outsb
cmp
pop
loope
push
ja
fsubs
cmp
lret
mov
dec
dec
sahf
xchg
sbb
add
std
loop
lret
xchg
ds
fnstsw
in
into
xchg
add
in
insb
pusha
dec
pop
mov
push
push
add
scas
ljmp
xor
outsb
les
aam
movsb
popa
ret
int3
sahf
push
xor
popa
inc
mov
lods
pushl
push
push
ja
imul
sti
pop
xor
sub
mov
call
mov
adc
arpl
push
ret
fisubs
mov
outsl
xlat
cmp
jno
test
iret
leave
mov
rcrb
js
orb
imul
fs
mull
jl
mov
sbb
jbe
mov
mov
or
test
clc
repnz
xor
shlb
cmp
lods
ficomps
test
mov
aad
std
aaa
gs
stos
pop
jbe
push
sbb
stos
cmpsb
sub
push
ja
inc
mov
mov
ficomps
scas
ds
scas
lods
pop
mov
push
xchg
and
push
es
movnti
jb
lods
xor
dec
loope
out
push
daa
xor
cmp
inc
inc
popf
pop
mov
jns
dec
pop
xchg
add
mov
sub
inc
xor
pop
in
jge
pop
into
pop
cmc
mov
icebp
or
add
es
inc
add
mov
mov
pop
mov
sahf
fcompl
sub
adc
mov
ja
cwtl
pop
js
mov
lret
decl
push
pop
bound
mov
adc
loope
xor
add
dec
sub
mov
and
push
pushf
cs
rclb
sub
sbb
ss
rorl
lret
movsb
sub
sub
dec
sub
adc
and
cmp
mov
and
cmp
xor
stos
push
lods
push
xor
stc
push
lret
in
arpl
xchg
rorl
rcl
js
scas
jle
in
cld
repz
movsl
adc
into
inc
iret
cs
push
fwait
ds
popf
sbb
jle
mov
push
mov
mov
add
jmp
ljmp
sbb
xor
fildll
xchg
movsb
clc
or
xchg
and
inc
mov
xor
cmp
das
xchg
enter
push
arpl
jae
mov
pop
ljmp
dec
call
jb
jmp
dec
call
inc
and
add
jl
rcrb
aaa
mov
xchg
outsb
adc
or
add
cmp
outsl
lret
popa
mov
into
fiadds
adc
inc
dec
repz
jmp
sbb
push
div
icebp
outsl
dec
sahf
repz
shrb
outsl
and
lret
push
outsl
ja
jae
subb
inc
leave
rcrb
or
jle
aam
ret
leave
lea
lods
ret
inc
dec
movsb
stos
test
ljmp
bound
jno
mov
dec
mov
push
xor
xchg
rcrl
push
out
bsf
repnz
jmp
shl
adc
aad
clc
mov
dec
ficomps
xchg
adc
mov
popa
adcb
outsl
scas
cmp
dec
js
cltd
mov
mov
cmp
insb
cmpsb
pop
shr
dec
mov
lahf
testb
out
dec
mov
push
cmp
and
in
fs
jne
stc
and
sub
add
push
cmp
jmp
inc
test
dec
daa
mov
pop
dec
jmp
push
scas
in
xchg
jl
js
push
arpl
dec
cs
or
arpl
fbld
cmp
add
repz
xchg
cmp
adc
mov
dec
mov
xchg
xchg
imul
adc
jns
divl
fwait
push
xor
push
mov
jb
pusha
movsb
xor
cmp
in
daa
insl
iret
in
and
sbb
sub
test
into
mov
dec
in
add
or
jmp
or
jno
fmuls
mov
mov
rcl
push
test
mov
int
scas
int3
rorl
loop
je
xchg
aam
js
pushf
jmp
invd
add
jno
pop
ljmp
pop
mov
and
xchg
bound
cmp
mov
adc
mov
or
aaa
fs
ss
jne
xchg
test
leave
das
sahf
lret
mov
dec
mov
xor
or
test
dec
icebp
cmp
pop
xor
pop
push
je
cli
mov
sbb
or
int
movsb
push
mov
dec
add
ss
fisttpll
popa
push
push
adc
pop
inc
outsb
jnp
out
dec
test
ficomps
mov
imul
xorb
sub
cmp
test
xchg
dec
aaa
or
mov
pop
out
mov
cltd
cltd
cli
jl
movsb
mov
push
xchg
xor
adc
stos
test
cs
xchg
mov
out
lock
bound
push
fiadds
sub
call
daa
lds
sbb
lds
fcomi
ss
sbb
mov
jecxz
aas
and
orb
mov
push
rcrl
jg
xor
arpl
sbb
in
rcrb
sbb
out
jo
hlt
lahf
cmp
cwtl
cmp
pop
mov
popf
mov
dec
jp
data16
mov
pop
unpcklps
jecxz
mov
jo
outsl
pop
xchg
cltd
xlat
es
jle
fsubl
sbb
cmp
xor
nop
mov
jp
lds
cmp
mov
pop
pop
inc
inc
test
ja
sti
mov
icebp
dec
lock
icebp
add
sub
sub
jnp
xor
mov
adc
sahf
inc
mov
lods
cwtl
out
lods
mov
sub
div
das
or
in
jmp
out
xor
mov
push
ja
clc
stos
or
and
jb
rclb
test
mov
sub
notb
scas
bound
xor
mov
inc
xlat
pop
dec
adc
jne
out
jo
lock
mov
ds
and
daa
jbe
xor
repnz
mov
push
cld
ja
decl
int
outsb
jge
into
adc
adc
dec
dec
mov
mov
call
enter
aaa
push
mov
add
in
fistps
sub
movsl
fldenv
xchg
orl
pop
push
lcall
inc
pop
inc
fldenv
mov
nop
clc
and
aam
jbe
mov
sub
sbb
mov
sbb
sub
call
adcl
inc
cmc
test
paddb
mov
inc
adc
or
popa
inc
mov
cmp
pop
add
call
ljmp
jmp
push
and
out
sbb
dec
adc
stos
sbbl
jmp
cli
movl
inc
popa
pop
push
lods
movsb
scas
push
rcr
xchg
jbe
mov
int3
iret
cld
fbstp
lds
hlt
aaa
aad
pop
ret
xchg
xchg
sub
jo
push
inc
jmp
outsb
push
add
push
pop
inc
lcall
xor
mov
xlat
in
mov
ret
sbbb
mov
jl
fwait
or
int3
mov
add
pusha
in
bound
add
push
and
sbb
adc
sti
mov
and
jo
in
mov
add
fisttpll
or
and
jge
xor
and
imul
std
lods
scas
mov
ret
pop
inc
jg
sbb
jns
cmpps
cld
mov
inc
mov
icebp
mov
push
cmpsb
sub
in
call
mov
bound
add
ret
cld
or
mov
mov
push
ds
rcl
movsb
xchg
sub
mov
adc
in
mov
mov
aaa
cmovp
mov
sub
jg
rcr
pop
daa
jae
sahf
add
aaa
and
add
fstl
sbb
adc
mov
nop
in
and
mov
mov
fdivl
ficoms
mov
lds
pop
xchg
inc
pop
mov
mov
dec
sbb
xchg
add
push
bound
enter
sub
pop
icebp
out
cmp
adc
pop
pusha
pusha
stc
into
push
out
pop
js
insl
xor
cs
and
mov
cmp
inc
fistps
jns
insb
loope
loopne
mov
cmc
fcomps
lock
into
fdivs
mov
orl
xchg
insb
sub
stc
xorb
repnz
mov
jg
lock
rcrl
mov
mov
nop
push
les
addb
mov
outsb
stos
fnstcw
xorb
cmpl
mov
or
push
cld
ss
push
ljmp
jb
outsl
sbb
cmpsl
bound
aaa
inc
push
sub
xor
cmp
outsl
test
ljmp
enter
mov
push
pop
cmc
push
xchg
xor
outsl
jae
stos
mov
xchg
mov
pop
loope
fcmovnbe
negb
ret
out
or
pushf
fistps
into
cld
pop
ret
ja
xchg
cmpsb
mov
rorb
sbb
popf
or
les
lods
mov
jno
adc
adc
xchg
mov
call
loope
mov
aaa
dec
xchg
imul
ss
jae
push
and
dec
pop
jo
cmp
push
and
xchg
push
push
lods
pop
stos
dec
xchg
das
mov
sbb
push
adc
pop
inc
sbb
adc
insl
xorb
xchg
inc
and
adc
sbb
or
inc
xchg
cltd
das
jecxz
mov
pusha
lds
mov
pop
add
enter
pop
dec
ret
aas
cmpsl
out
jns
mov
inc
mov
negb
sbb
xor
push
orb
mov
adc
rcl
xchg
push
test
cmp
push
stc
icebp
cmp
mov
cli
dec
shlb
call
dec
scas
dec
push
lahf
repz
mov
in
and
or
fstpt
or
aad
adc
dec
in
sub
movsl
out
loopne
fcompl
test
add
les
ret
int3
roll
outsl
sbb
xor
repz
loop
xchg
pop
push
rclb
hlt
xchg
xchg
dec
es
mov
mov
shl
in
xchg
mov
lret
xchg
push
stos
bound
inc
xor
int3
mov
push
jmp
in
icebp
push
pop
std
mov
in
bound
inc
push
mov
rclb
push
mov
pop
sub
addr16
insb
mov
xchg
das
add
outsl
jg
testl
dec
arpl
pop
ds
leave
lret
insb
cltd
clc
xor
loopne
inc
mov
sbb
and
or
call
out
in
and
sbbb
ljmp
ljmp
ds
mov
or
clc
mov
xchg
fistpll
mov
jl
or
shrl
adc
push
ret
add
lds
sbb
adc
popf
adc
mov
mov
jb
push
or
mov
incl
sub
sarl
adc
mov
xchg
fs
jmp
fs
dec
repnz
sbbl
jbe
mov
push
pop
fidivl
icebp
pusha
out
mov
cmc
sub
mov
jnp
shl
xchg
imul
iret
js
ficompl
xor
int
cmp
dec
imulb
cld
push
repnz
scas
dec
lock
cli
mov
loope
fldl
out
not
dec
dec
sbb
dec
fisttps
mov
xchg
das
sahf
jle
and
rclb
sahf
daa
adc
pop
push
or
mov
push
cmpsl
insl
rcl
js
enter
cmpsb
fimuls
in
arpl
push
jnp
ror
xor
cmp
push
dec
inc
pop
aam
sbb
push
jno
dec
sub
fldenv
pop
ret
and
enter
jo
mov
pop
push
subl
shll
daa
push
loop
lods
shrb
stc
stos
loop
in
dec
sti
add
loop
mov
mov
dec
cmp
inc
shrl
inc
pop
lods
sbb
lods
xchg
mov
or
mov
ds
cs
push
jecxz
sahf
cmp
adc
inc
sub
push
sub
add
test
mov
mov
std
stos
pop
jno
dec
insb
xchg
out
lret
push
imul
fistps
scas
pop
in
jmp
sbbb
out
test
int3
xchg
iret
rcrb
aad
add
push
sbb
jne
cli
stc
or
pop
cld
sbb
fstps
negb
lods
dec
push
push
repnz
adc
lret
ljmp
dec
mov
stos
and
fildll
jo
add
jns
es
lods
ja
pushf
push
pop
imulb
imul
inc
leave
popf
push
xlat
jno
in
sbb
pop
push
pop
push
sbb
xchg
clc
mov
xor
shlb
je
repnz
mov
incl
orb
adc
aam
inc
dec
ret
fildl
sbb
test
pop
mov
and
or
mov
jge
sub
insb
fnsave
nop
daa
mov
push
stos
lahf
lods
test
push
sub
lahf
sub
in
or
pop
mov
mov
jae
or
sbb
cltd
shll
jmp
jp
cmp
adc
js
mov
jae
into
or
syscall
rclb
xor
jp
mov
in
jns
in
sbb
test
pop
lea
ja
and
mov
xor
sbb
push
cmp
jmp
xor
xchg
cs
fbld
imull
scas
lods
inc
mov
shll
mov
cwtl
ljmp
das
jns
jle
loop
repnz
arpl
pop
sub
clc
testb
jno
mov
movsb
cmp
ret
in
jl
and
into
jns
hlt
add
mov
out
xor
inc
adc
sbb
sub
jmp
mov
and
push
mov
mov
subb
dec
mov
pushf
inc
and
mov
dec
lds
out
in
and
call
cmp
rclb
popa
jae
mov
jns
inc
pop
fbld
test
push
lods
fstps
add
enter
xor
and
leave
gs
jb
dec
das
sbb
popa
jnp
out
xor
and
add
shll
out
in
pop
mov
or
xor
lock
jno
das
fneni(8087
popf
sbb
adc
sub
cmp
loop
and
mov
addb
or
jns
shlb
push
es
lret
inc
pop
fwait
aaa
ret
xchg
iret
cld
dec
push
data16
and
mov
enter
sbb
inc
adcb
mov
dec
add
repz
push
sarl
jge
test
aas
or
cmp
sbb
jns
lret
out
pop
jle
outsl
arpl
mov
fwait
dec
hlt
sbb
pop
sbb
out
pop
and
pop
lea
pop
push
popa
mov
inc
and
sbb
gs
cmp
cmp
jge
cwtl
mov
push
outsb
in
sub
out
adcb
jnp
inc
scas
icebp
rol
int
addr16
sub
scas
jno
dec
mov
pop
lret
dec
stc
mov
pop
xchg
push
or
addr16
js
in
icebp
jns
cltd
sub
pop
push
mov
mov
mov
fs
mov
test
ror
clc
xor
add
das
jae
mov
mov
cmp
lea
sbb
sub
xchg
and
sub
sub
jge
pop
in
adc
jae
push
xchg
mov
push
add
xlat
nop
ljmp
insb
loop
bound
out
sbb
and
insl
ret
ret
sub
sti
add
ss
mov
dec
loope
sub
addb
loopne
shlb
das
lcall
cmpb
jbe
mov
add
incl
enter
sbb
call
mov
and
testl
adc
adc
ja
sbb
mov
std
xor
sbb
inc
lods
out
or
cmp
jbe
in
arpl
pop
pop
jle
adc
mov
rcll
mov
gs
xchg
mov
push
jae
lahf
and
stos
jns
stos
add
sbb
pop
outsl
dec
inc
mov
xchg
xor
sbb
mov
ret
std
in
clc
pop
es
subl
lcall
xchg
gs
mov
test
mov
es
aas
pop
mov
sahf
test
mov
inc
adc
arpl
push
jb
adc
and
pop
pop
test
daa
enter
scas
add
push
xor
dec
mov
lods
mov
icebp
adc
scas
xchg
xchg
lds
fstpl
dec
mov
xchg
lret
mov
xor
inc
jle
ds
sbb
jo
sbb
fldl
cmp
sbb
shr
xor
ljmp
loopne
dec
jmp
pop
mov
stc
in
pop
cmp
je
test
hlt
stos
das
in
pop
jae
mov
jnp
adc
jno
std
cmp
lds
xchg
lcall
add
dec
or
mov
cli
incb
shl
xchg
pop
pop
sub
push
inc
inc
add
es
inc
rclb
dec
and
les
dec
aas
push
les
bound
lods
jmp
mov
mov
out
push
adc
enter
ret
adc
and
lods
mov
js
scas
aad
loop
ja
sbb
stos
pusha
jne
fistl
add
imul
push
rcr
scas
mov
pop
fidivs
lea
das
lds
dec
and
cld
sbb
lods
sbb
shrb
test
sub
mov
jg
or
ret
sti
xorl
or
inc
ds
and
into
adc
and
push
add
sbb
imul
sar
fcmovb
loopne
pmullw
cmpsl
mov
imul
mov
repz
es
dec
mov
jo,pt
xor
decb
mov
sbb
cmp
jmp
adc
inc
adc
jmp
pop
or
push
mov
jbe
enter
scas
sub
jne
sbb
inc
dec
cmpsb
bound
mov
popa
ret
jbe
dec
testb
xchg
cmp
aam
cmp
pop
imul
add
outsb
lret
sbb
or
mov
add
pop
je
add
adc
pushf
sbb
xchg
into
lcall
mov
sbb
push
sahf
sub
pop
stos
lret
push
pop
jne
icebp
push
xchg
and
or
adc
and
mov
addb
ss
pop
add
jp
fisubl
sub
jge
cld
leave
sti
cmp
cmpsb
pop
lcall
iret
pop
icebp
movsl
mov
int3
push
lret
imul
cltd
fnstsw
mov
or
xor
jecxz
loope
jmp
mov
adc
ret
xchg
fstpl
cmpsl
xchg
xor
cmp
mov
setge
jmp
pop
sti
les
enter
lods
push
push
cmp
in
ds
xor
mov
jecxz
sti
les
add
in
dec
cmp
push
or
dec
mov
mov
insl
cs
xor
mov
or
add
ret
sti
les
xchg
out
popa
cltd
mov
cld
xlat
scas
lahf
pop
faddl
loope
cmp
shlb
icebp
push
repnz
adc
test
test
xchg
xchg
test
sarl
pop
add
rorb
xor
sbb
xchg
enter
dec
dec
mov
aad
aaa
sub
pop
leave
mov
push
jb
lods
ret
popa
adc
mov
inc
pushf
push
je
sti
cmc
push
fnstcw
sbb
test
aam
notb
and
jbe
add
fldl
mov
adc
into
mov
pop
aas
std
dec
adc
stc
outsb
mov
stc
cmp
pop
fisubrs
repz
add
ret
jbe
or
adc
push
inc
out
or
mov
push
lret
js
rcrl
pop
push
cmc
mov
lret
xlat
xor
decb
out
loope
add
das
rorl
xchg
mov
imul
mov
arpl
mov
shrb
sub
out
loopne
nop
mov
lahf
jne
jbe
sbb
adc
xchg
and
xchg
jmp
and
mov
mov
xchg
mov
or
pushf
int
lods
lds
out
jg
cmc
test
aas
clc
dec
or
ret
bound
fucomp
insb
and
pop
les
je
inc
ss
testb
and
shl
or
fstl
mov
add
sbb
sbb
pop
xor
fists
xchg
xor
adc
or
mov
cmpb
mov
sub
inc
ret
sub
pop
lock
xor
inc
mov
jmp
fsubs
adc
loopne
cltd
out
fcmovnbe
xchg
fs
ljmp
and
repnz
xlat
icebp
les
das
adc
lahf
sub
fnstsw
inc
stos
pop
mov
mov
dec
adc
mov
push
sarl
pop
scas
xchg
loope
stos
rcr
pop
out
cs
popl
data16
in
push
int
pop
scas
pop
push
dec
imul
sub
mov
fbld
dec
mov
sbb
push
xor
xchg
repz
pusha
mov
ss
add
pop
or
push
pop
sbb
outsl
jg
or
adc
shrb
movsb
pop
dec
sub
mov
imul
aaa
lea
push
lret
dec
aam
iret
pop
loopne
int
sbb
push
xchg
xor
pop
repnz
es
or
out
xor
xchg
int3
punpcklwd
adc
fwait
xor
std
jecxz
inc
mov
imul
fnstsw
das
inc
shrb
scas
xchg
inc
je
xchg
jno
push
pop
sbbb
loopne
inc
lock
fdivrs
sbb
movsb
adc
inc
sbb
movsb
pop
enter
lcall
mov
mov
out
arpl
mov
and
ds
adc
jge
jmp
and
push
test
cmc
data16
mov
inc
lock
xor
xchg
shlb
xor
dec
mov
andb
cld
popa
icebp
test
jne
incb
addr16
aaa
cwtl
mov
cmpsb
mov
fimuls
fmuls
daa
out
or
jl
sbb
fwait
sbb
mov
iret
stos
test
add
push
jbe
adcb
movsl
or
jno
mov
xchg
xchg
xor
out
lods
incb
leave
cmp
inc
inc
cmp
arpl
and
mov
in
adc
out
xchg
fstp
and
stos
push
repnz
push
cmp
sahf
sti
dec
mov
aam
mov
les
add
cmp
jecxz
mov
icebp
adc
js
mov
mov
push
cld
call
ja
cmp
je
mov
ds
cmp
ja
cmp
mov
push
pop
enter
in
sbb
pop
sti
inc
cmpsb
aas
xor
pop
add
ljmp
lret
jns
xor
mov
dec
cmp
cmpsb
out
push
lahf
pop
pop
arpl
push
lds
pusha
stos
aas
in
sbb
dec
adc
jge
hlt
int
jecxz
je
sbb
jb
je
jmp
mov
hlt
out
or
jp
leave
lods
mov
sahf
pushf
aas
jmp
jbe
mov
pop
cmp
fs
mov
xchg
push
lahf
movsl
adc
insl
fmull
cmp
dec
es
out
cld
dec
ret
test
movsl
pushf
hlt
arpl
mov
call
sbb
lea
sbb
sub
lods
je
loope
pop
add
mov
add
aam
inc
or
cmc
cmp
in
ja
call
sarl
push
dec
pop
jl
xor
push
lret
mov
jmp
imul
push
leave
int
aam
sbb
enter
xlat
or
adc
outsl
push
sbb
test
clc
sub
mov
xor
jb
ds
jae
ss
mov
push
mov
or
out
add
out
jnp
je
mov
add
sbb
cmpsb
aas
movsb
arpl
pop
mov
ljmp
cmp
lds
adcl
orl
mov
js
push
jle
mov
mov
xorl
scas
cs
out
outsb
jmp
xchg
add
dec
icebp
js
int
and
mov
scas
mov
pop
mov
add
mov
lods
out
jmp
mov
std
clc
rcrb
mov
push
sahf
test
dec
leave
mov
ss
jns
or
orb
sub
jg
jg
dec
sbb
out
mov
inc
push
fidivrs
pop
ret
dec
jg
stos
push
mov
dec
in
pop
adc
sub
imul
xor
push
adc
mov
push
lea
cmp
movsb
push
cvttps2pi
lcall
cld
sbb
adc
sub
push
rorb
lahf
jo
xor
mov
cmpsl
fildl
inc
push
std
dec
dec
and
pop
fisttpll
push
dec
dec
xchg
leave
mov
loop
sub
lods
sti
iret
cmp
clc
insb
clc
lret
xchg
aaa
mov
dec
and
mov
std
loop
mov
cld
lods
mov
jmp
cmp
mov
add
test
int
inc
mov
icebp
aam
xchg
imulb
push
add
jg
pushf
fmul
jb
icebp
jle
es
movsb
mov
into
xchg
leave
cli
mov
popa
cmp
iret
push
sub
cltd
in
in
jl
out
daa
add
imul
sub
iret
call
aaa
push
push
mov
add
push
mov
nop
push
xor
sbb
cwtl
dec
jno
icebp
repnz
xchg
sahf
adc
aad
mov
xchg
mov
pop
out
inc
push
imul
dec
inc
and
outsl
inc
add
dec
pop
lods
data16
push
das
mov
jl
pop
pop
lods
or
mov
jae
repz
stos
jle
mov
repnz
out
in
mov
pop
scas
adc
pop
sub
fstps
lahf
cmpsl
mov
dec
mov
jge
pop
jl
movsb
sub
mov
ds
mov
lock
mov
es
mov
sub
sbb
jno
enter
es
xchg
xchg
cmp
lret
add
dec
or
ret
out
jno
add
into
pop
xchg
or
dec
push
and
scas
pushl
lea
cmpsb
push
inc
mov
lods
fs
int
pop
inc
xchg
inc
sub
add
outsb
lahf
push
in
es
insb
stos
stc
inc
jno
mov
sbb
xchg
and
mov
lds
jno
divl
adc
jle
inc
mov
jg
js
jb
mov
xchg
jp
clc
inc
add
lods
nop
test
mov
mov
xor
stos
ljmp
sti
sub
jnp
int3
or
aam
xchg
jp
lret
xchg
popf
mov
sub
fxch
push
push
into
dec
push
adc
push
cmp
cmp
call
les
inc
dec
mov
mov
fs
mov
loopne
imul
mov
mov
inc
push
js
pop
and
sahf
mov
data16
ljmp
dec
rorl
fisttps
cli
test
jmp
mov
push
mov
inc
mov
fidivrs
cwtl
popa
pop
dec
in
lds
loope
or
outsb
pop
jg
cmp
sahf
adc
mov
jge
int3
in
sbb
cmp
pushf
mov
lea
inc
cmp
mov
or
or
mov
pop
movl
add
insb
imul
dec
outsl
xchg
daa
ds
cld
andb
inc
mov
lret
jb
rcr
je
sbb
mov
mov
inc
mov
jno
mov
sar
xchg
or
movsb
sub
adc
jno
bound
nop
fnstsw
jae
out
int
jle
dec
jp
ret
cld
adc
sahf
mov
inc
mov
mov
jle
push
inc
jno
or
and
shlb
ret
or
jns
shll
popa
lds
jg
adc
dec
adc
ret
xor
xor
das
sub
xchg
cmc
xchg
mov
lret
imul
dec
jle
aad
inc
das
jecxz
pop
pop
xor
insl
or
cmp
loop
mov
mov
xchg
lock
movb
push
movlps
sub
push
push
inc
mov
or
mov
mov
cmc
pop
cmp
pop
les
xor
mov
addb
xor
loop
cld
xor
ret
cltd
push
sub
inc
mov
shrb
dec
in
popa
nop
lds
jle
adc
in
je
test
xchg
xchg
outsl
inc
imul
ret
and
adc
jge
mov
fnstsw
shll
repz
sarb
xor
or
inc
hlt
mov
pop
push
test
scas
adc
or
out
adc
filds
pop
into
icebp
outsb
mov
icebp
out
into
test
add
xchg
dec
inc
dec
ds
mov
adc
leave
outsb
and
data16
stos
adc
aaa
mov
xchg
add
dec
jp
mov
sbb
xor
push
push
sbb
sub
fldenv
and
mov
push
subb
jl
inc
mov
push
mov
orl
dec
or
repnz
or
pop
je
or
cmp
dec
dec
add
ljmp
pop
xor
fiadds
cmpsl
int3
fiadds
cmp
shll
mov
shlb
es
pusha
and
and
dec
push
and
and
cmp
mov
inc
mov
rorb
inc
dec
pop
pusha
out
mov
xchg
jb
and
in
out
sub
pop
xor
add
push
mov
dec
add
cmp
xchg
out
scas
mov
mov
add
jg
or
mov
mov
adc
icebp
adc
xor
enter
xchg
cmp
pop
pop
jne
inc
insb
fwait
pop
sahf
mov
nop
dec
out
outsb
scas
xor
add
jmp
in
shl
pushf
inc
es
mov
idiv
mov
or
nop
adc
sub
add
or
aaa
mov
mov
loop
loope
rep
adc
int
add
imulb
faddl
pop
lods
mov
add
inc
sub
mov
xchg
inc
jmp
mov
repz
jle
lahf
add
mov
push
ds
clc
mov
dec
sub
aam
sub
enter
mov
push
idivb
pop
repz
xchg
repz
jno
add
cmp
nop
test
icebp
test
and
or
sbb
dec
in
inc
or
xchg
lods
jecxz
inc
and
sub
insl
lcall
imul
mov
popf
and
movsl
jg
insb
xchg
mov
add
dec
imul
mov
lcall
add
fldl
fiadds
inc
sbb
xchg
lcall
test
pop
insb
xchg
jge
arpl
in
mov
lods
inc
mov
jb
stos
and
lods
gs
jp
add
mov
mov
dec
gs
js
clc
pop
add
xchg
test
roll
mov
mov
inc
pop
cmp
les
ficoms
dec
test
xchg
cmp
lds
pushf
je
xchg
jnp
xchg
test
shrl
mov
test
and
sti
inc
aaa
cmpsb
push
and
lret
or
mov
or
adc
sti
mov
pop
ds
ret
push
das
xor
rol
mov
push
mov
and
out
add
das
adc
add
mov
or
push
xchg
jbe
int3
pop
fsub
insb
cmp
push
mov
arpl
js
lahf
xor
dec
rolb
mov
imul
mov
or
dec
pop
lea
mov
outsb
repnz
pusha
mov
sbb
mov
cld
fmuls
jno
das
subl
add
inc
out
mov
repnz
dec
sbb
or
add
and
add
sahf
stos
adcb
shrl
mov
jb
sbb
enter
cld
adc
add
mov
mov
and
fdivs
dec
fcoms
mov
mov
push
loope
sub
add
neg
mov
mov
dec
jne
dec
in
cmp
push
std
or
loope
or
gs
or
icebp
std
jp
ljmp
pop
out
call
xchg
lock
pop
lds
scas
jbe
mov
xchg
mov
in
adc
jg
clc
mov
cmpsb
push
in
jp
inc
sub
jecxz
sub
je
imul
sbb
mov
add
aam
xor
xchg
test
das
push
push
aam
mov
mov
orl
rolb
ficoml
ret
mov
cwtl
sbb
push
mov
ds
pop
add
pop
sub
or
mov
fsubs
sub
push
cmp
jns
cmp
pop
mov
test
loop
mov
push
add
cmp
jecxz
push
dec
movsb
sub
pop
xchg
movsb
sbb
mov
cmp
sub
jb
pushf
stos
das
add
jb
mov
jmp
cmp
repnz
add
test
aas
sbb
mov
or
adc
add
cld
scas
outsl
insb
add
dec
lcall
movsb
andb
aaa
fsubr
imul
xchg
int
insb
das
rcrl
jnp,pt
pop
pop
inc
lret
cltd
jmp
ret
inc
leave
in
cmp
sti
clc
int
add
and
dec
fdivrl
negl
inc
mov
popf
iret
lods
jg
rcl
add
test
loop
movsb
lods
fists
jae
and
lret
rcll
stos
jl
loope
out
test
call
jns
stos
loope
jae
into
inc
xchg
xlat
pop
das
faddl
int
pop
mov
in
mov
call
inc
and
out
or
loopne
loopne
cmp
mov
lea
mov
mov
add
cmpsl
fildll
dec
movsl
sbb
lock
in
adc
lods
jmp
pushf
xchg
xchg
cmp
addr16
adc
xor
stc
push
pop
rcrl
and
test
push
mov
inc
push
into
jecxz
dec
icebp
sub
dec
pop
divb
out
test
push
xchg
out
pop
arpl
sbb
push
and
sub
iret
fisubrl
movsl
fdivrs
or
test
cmp
aam
mov
mov
out
das
insl
popf
fldt
lret
xchg
ret
pop
sbb
push
insb
xlat
cmp
or
mov
jp
hlt
sbb
dec
in
lods
ret
push
roll
fwait
ret
mov
and
cld
idivb
in
or
imul
jbe
pushf
jmp
pop
pop
lcall
push
push
in
cmp
adcl
cltd
mov
or
mov
and
bound
xor
mov
dec
aas
jecxz
mov
xor
addr16
lret
js
cmp
fsubrp
mov
dec
enter
bound
push
mov
pop
xor
decb
test
push
fsubl
into
test
cmp
lret
sub
leave
ss
jecxz
cmc
inc
jo
adc
jb
xchg
sub
cmp
push
cmp
push
mov
movsb
dec
bound
pusha
mov
stos
pushf
adc
mov
inc
dec
mov
push
jmp
aaa
xchg
mov
jne
sbb
in
dec
cmpsb
inc
mov
shrl
in
add
ror
lcall
adc
bound
sub
adc
pop
adcl
int
in
mov
xor
xchg
clc
xor
lahf
enter
lea
push
fnstsw
iret
cwtl
hlt
pop
and
mov
sbb
sub
fildl
mov
dec
xchg
lret
dec
mov
xlat
mov
dec
fidivrs
fsubr
add
cltd
sbb
loope
sbb
cltd
mov
mov
jne
and
push
stc
js
cmc
add
in
rorb
loop
pop
nop
add
lock
lea
mov
pop
or
xchg
sub
arpl
jae
jno
xor
or
stc
pushf
mov
cmp
in
into
cmc
jo
push
orb
xor
outsb
xorb
adc
adc
pop
inc
push
in
jge
data16
cmp
sub
mov
cmpsl
test
mov
xchg
frstor
xchg
rolb
or
adc
cld
bnd
loope
dec
xchg
mov
jg
test
js
daa
call
leave
loope
in
push
xchg
sbb
mul
mov
imulb
lret
adc
cs
addr16
push
fldl
rcll
inc
and
adc
dec
mov
repz
push
imulb
cmpsb
je
daa
xor
mov
leave
adc
loop
cmp
pop
jb
xchg
hlt
mov
cmp
popf
pop
sbb
scas
pop
outsl
adc
mov
ljmp
cwtl
pop
in
pop
cmp
out
or
cmp
int
inc
ljmp
ret
xchg
es
push
push
sbbb
ret
inc
adc
or
icebp
adc
test
pushfw
mov
stos
outsb
ds
jnp
popa
push
shr
adc
daa
sub
xor
push
data16
xchg
push
int3
lods
add
clc
mov
and
js
and
mov
sbb
fcompl
push
insl
xchg
xlat
inc
jp
push
lds
sbb
cmc
out
mov
or
mov
rcrl
mov
inc
repz
popf
pop
les
fstps
pop
xor
shlb
push
add
cmp
stos
cs
xchg
aas
lret
inc
jbe
and
lret
test
ja
jl
xor
scas
ja
js
pop
scas
pop
push
lock
loop
lock
jmp
or
repnz
xchg
push
mov
or
mov
add
enter
push
mov
mov
popf
pop
and
jae
cltd
sbb
mov
push
outsb
inc
in
insl
sub
mov
fld
xchg
andb
pop
mov
push
xor
mov
jnp
out
fwait
shl
dec
cmp
xchg
popa
cmp
mov
clc
test
sahf
fwait
inc
sarb
jno
jne
in
loop
push
mov
shll
fldt
pop
lcall
xlat
pop
push
nop
mov
fs
mov
push
sub
sbb
hlt
adc
jne
or
fcompl
fcmovnbe
aam
inc
sub
inc
loope
pop
movsb
scas
adc
insl
mov
sbb
pop
int3
stos
test
loopne
cmp
pop
idivb
push
and
pop
lods
dec
xor
mov
sbb
adc
cs
cmpsl
into
xor
xor
ljmp
add
mov
jmp
xlat
or
int
in
lahf
inc
cmp
jae
stos
inc
jb
icebp
add
nop
scas
sarb
das
in
pop
fldcw
pop
mov
js
test
mov
arpl
out
or
fldt
enter
ret
xchg
jle
add
cmp
xor
in
cmpsb
jno
dec
pop
ja
popf
outsl
in
xor
cmp
mov
cmp
inc
and
sahf
adc
pop
xor
dec
movsl
insl
daa
js
or
fimull
idivl
mov
xor
and
mov
fwait
lret
rcrl
pusha
inc
insl
in
lcall
inc
addr16
stos
aad
pusha
push
add
inc
fildll
mov
lahf
inc
and
push
enter
enter
dec
in
pop
inc
fildll
jle
push
jo
cmpsb
mov
popa
mov
fcompl
xchg
sub
xor
sub
orl
sbb
addr16
or
inc
movsl
inc
jp
add
jbe
mov
inc
pop
xchg
cld
dec
stos
inc
xor
data16
rcrl
and
ret
lcall
push
sbb
out
add
cltd
in
mov
pop
testl
arpl
xor
mov
jle
in
mov
mov
fucom
pop
cltd
sahf
jbe
loop
popf
cmp
sub
mov
sbb
mov
dec
notb
mov
ljmp
orl
sub
fbld
cmpsl
jg
cmp
scas
orl
push
mov
in
inc
mov
fcomps
mov
dec
into
int3
jne
xchg
scas
adc
mov
add
push
loopne
lcall
pop
inc
sbb
push
hlt
int3
inc
cwtl
data16
enter
and
aaa
hlt
push
aam
js
iret
into
fcoms
aaa
xor
pop
sub
jl
das
std
pop
scas
xchg
inc
js
cmp
pop
xchg
cmpsl
mov
jns
aas
and
stos
in
jne
lea
adc
test
fnstenv
xor
hlt
repz
xorl
cmp
cmpsl
int
shl
inc
imul
or
mov
push
aam
dec
inc
out
xchg
pusha
out
xchg
imul
daa
je
inc
mov
negb
mov
push
inc
test
and
push
mov
jle
mov
dec
mov
pop
shl
sub
inc
rcrb
mov
jmp
lret
pop
sub
push
pop
hlt
fsubrl
inc
cmpb
jmp
inc
stc
dec
outsl
xchg
adcb
mov
mov
xchg
sbb
mov
mov
pop
ret
or
mov
inc
add
cmpsb
pop
mov
stos
xor
nop
inc
cmovl
cwtl
mov
cmp
ss
add
pop
pop
icebp
je
cmp
xchg
aaa
xchg
mov
sub
push
mov
push
ds
iret
loope
lahf
scas
mov
add
dec
iret
orl
shrl
sub
mov
int
jo
sub
iret
add
cmpb
cld
daa
mov
adc
jecxz
sub
pushf
jo
stc
add
xchg
insl
cld
push
enter
nop
gs
mov
cmp
sub
hlt
jmp
jmp
cli
les
daa
mov
sbbl
cmp
xor
sub
int3
push
scas
insb
lret
or
fnstenv
std
stos
int3
mov
leave
xor
sahf
sub
scas
dec
cmpsb
stc
jle
rclb
sub
lods
xor
xor
jle
xor
dec
adc
push
jmp
idivb
mov
dec
cmpsb
repz
sahf
outsb
sbb
inc
dec
sbb
pop
fdivp
ficoms
addr16
cmpsb
inc
add
sbb
inc
push
lds
or
rcrb
faddl
cs
xchg
jl
dec
cld
loope
adc
adc
shrb
lcall
fs
pop
and
es
xchg
int
daa
mov
in
sbb
sbb
bound
sub
or
imul
pop
insb
or
cld
sarb
lahf
cmp
push
es
inc
sub
sbb
xchg
xor
negb
or
xlat
nop
and
or
sti
push
cltd
push
add
stos
pop
lds
fcomps
out
mov
xchg
addr16
rclb
in
sbbb
repz
in
lcall
push
js
movsb
mov
in
cltd
and
test
loopne
test
xchg
lods
ret
inc
das
xor
sub
mov
or
incl
aaa
sub
roll
dec
jne
cmpsl
aam
xchg
in
xor
pop
add
shr
arpl
lods
dec
mov
fistps
jp
pop
jb
sub
sub
popf
decb
into
pop
and
mov
pop
std
pop
repz
push
rol
mov
pop
cmc
repz
cltd
test
sti
mov
dec
ss
add
cmpsb
jge
popf
dec
push
xor
popa
mov
bswap
rclb
xchg
js
fidivrl
push
xor
rsm
jl
mov
bound
push
pop
aam
scas
jl
or
mov
sub
ljmp
jg
and
incl
gs
aaa
cs
fisttpl
dec
dec
cmpsb
outsl
mov
jb
sbb
in
iret
sbb
jae
ret
pop
fmull
addr16
insl
mov
call
xor
dec
outsb
adc
test
xchg
inc
xchg
xchg
pop
xchg
bound
inc
popa
fisubl
sbb
sbb
int3
test
jge
or
clc
dec
dec
push
popa
in
xor
mov
or
jge
mov
sbb
push
sbb
mov
xchg
inc
ljmp
sub
insl
pop
cmc
cltd
ljmp
cld
stc
cs
jg
push
dec
aam
push
popf
daa
mov
adc
sbb
xor
imul
mov
loope
dec
pushf
fisubs
inc
mov
ret
pop
jle
in
xchg
jae
and
cmp
clc
cld
and
fsubs
imul
out
hlt
addr16
enter
cmpsl
or
cwtl
inc
jbe
mov
rol
jne
pop
popf
sub
imul
mov
in
into
cmp
mov
int3
and
nop
jecxz
mov
jno
and
rol
ja
push
out
push
int3
push
inc
fisubs
pop
fmuls
add
xchg
add
jae
fxch
sbb
jecxz
add
jmp
test
mov
add
roll
aaa
popa
shll
movsl
jb
pop
rorl
xchg
xor
cmp
and
fcompl
adc
jle
jmp
and
jae
addr16
add
popa
stos
loope
pop
mov
and
add
outsb
push
push
into
mov
nop
xchg
nop
pushl
pop
ror
shll
cltd
stos
pop
cwtl
pop
lods
mov
jge
mov
mov
dec
out
lods
imul
adc
add
mov
daa
ja
imul
popa
mov
inc
mov
push
std
fstpl
ljmp
repnz
xchg
lock
test
xor
ds
pop
xchg
cmp
pmaddwd
dec
sahf
mov
outsl
aas
cld
adc
adc
loopne
lods
mov
test
pop
into
adc
push
in
or
pushl
sti
jl
fldl
cwtl
pop
inc
sub
je
mov
or
pop
pop
sub
ja
loope
jg
add
xchg
inc
pop
pop
iret
jecxz
clc
mov
addr16
or
fldcw
fdivl
xchg
stos
mov
cmpsb
push
popl
pop
fiadds
jmp
adc
sub
inc
push
shrb
sub
sbb
popa
jae
adc
cmpsb
sbb
aas
mov
xchg
mov
push
xchg
outsb
les
and
cmp
or
adc
daa
inc
pop
or
mov
mov
sarb
roll
mov
mov
test
inc
jp
mov
bound
add
xchg
cmp
loop
mov
sub
sub
pop
cmc
adc
push
xchg
mov
mov
cwtl
dec
orl
adc
pusha
dec
inc
dec
cltd
mov
push
add
cmpsb
pop
xor
nop
jno
pusha
leave
cmpsb
sub
cmp
jo
in
orb
dec
and
lods
sub
std
cs
push
stos
lahf
push
inc
xchg
test
cmp
lahf
mov
xor
xor
xorb
cmp
add
jbe
pop
push
in
dec
mov
inc
fsubrs
leave
loop
add
jne
mov
cli
out
outsl
xchg
dec
xor
stos
jmp
mov
call
pop
decb
nop
lea
cmc
stc
jle
rcl
pusha
jl
xlat
stos
inc
xchg
lods
ja
enter
jmp
mov
inc
movsl
loopne
lea
mov
and
scas
add
lret
mov
push
cmpsl
xor
cmpsl
imul
mov
dec
addr16
or
add
outsb
shlb
imul
je
pop
mov
sarb
es
lea
mov
fsubr
pop
add
dec
dec
in
xor
sub
adc
pop
and
cmp
or
cmpsb
mov
movsl
adc
stos
aaa
xchg
das
iret
pop
rclb
es
push
loope
in
mov
es
lret
subl
cs
adc
mov
out
inc
lock
fstpt
jnp
xor
sub
xor
cmp
inc
sahf
gs
out
push
cmp
decl
in
sahf
pushf
pop
pop
add
out
adc
movsl
cli
ror
and
xor
inc
jle
sti
adc
xchg
stos
mov
pushf
jo
xchg
lcall
outsl
fildl
cmp
out
cmc
cmc
rorb
mov
pop
sbb
aad
sbb
dec
fnstenv
imull
cmove
popl
dec
std
popf
mov
or
mov
icebp
mov
in
mov
cwtl
das
dec
daa
fdiv
cmp
sbb
incb
int
jb
cli
iret
psubd
sysenter
pop
sub
dec
push
jp
cmp
xlat
jbe
mov
xor
in
int
cmc
mov
and
mov
out
std
mov
fdivrl
aas
cwtl
cmp
mov
outsl
adc
cmp
iret
jl
xor
icebp
sub
mov
mov
xor
dec
inc
or
imul
shll
shlb
add
mov
lods
jp
repnz
sbb
fisttps
fisubrl
fldenv
push
mov
cmp
cmp
lcall
repnz
push
jecxz
dec
das
arpl
push
jge
sub
icebp
inc
pop
imul
cmpsl
cmp
push
and
rcrl
jg
mov
roll
push
xor
lds
pop
sbb
dec
push
mov
insl
ljmp
sub
int
cmp
popf
cli
push
push
cmp
push
scas
mov
mov
movsl
add
stos
aaa
rclb
sti
into
xor
cmp
xchg
lcall
pop
jle
out
lahf
lock
inc
int3
in
adc
jno
pushf
movsb
outsl
inc
jecxz
insb
mov
sbb
dec
add
lds
stos
into
popa
sahf
out
mov
imul
ljmp
sbb
pusha
mov
mov
ss
ja
lods
dec
cmp
xor
call
or
mov
mov
mov
push
sub
ret
andb
popa
cmpsl
pop
mov
popf
hlt
sub
mov
push
and
and
stc
sarl
pop
mov
ret
aad
mov
inc
sbb
es
sti
mov
notb
mov
pop
xchg
add
pop
mov
xor
adc
js
fnstcw
loopne
loop
mov
psrld
mov
inc
ljmp
mov
fs
stos
jg
add
iret
mov
imul
push
fnstcw
push
mov
bound
mov
xchg
dec
data16
dec
or
push
push
lods
pusha
inc
sbb
gs
imulb
repz
xor
das
ja
idivl
sahf
cmp
pop
cmpsl
or
test
jge
std
rol
adc
xchg
lahf
and
outsl
sbb
cmc
test
adc
lcallw
pusha
lock
fistpll
pop
push
jg
push
aam
push
mov
xchg
xor
mov
pop
std
das
push
inc
sbb
jge
pushf
jecxz
push
inc
ja
jle
scas
cmpsl
or
call
js
cmpsb
sti
nop
into
pop
rcrl
int3
sbb
xchg
pop
push
xor
imul
sahf
lock
pop
hlt
cmpsb
cmp
push
fistpl
hlt
jb
les
popa
das
xor
aas
pop
into
iret
and
mov
sub
loopne
adc
stos
add
mov
icebp
fnstcw
jns
jne
ret
or
dec
lods
pop
sar
aaa
in
jno
mov
add
or
int
movsl
adc
mov
jbe
negl
aaa
add
outsl
xor
fldenv
mov
call
adc
clc
mov
push
add
pop
pop
pop
mov
daa
dec
aaa
jg
testb
mov
pop
dec
fsts
mov
jnp
or
ldmxcsr
pusha
jmp
addl
sbb
scas
mov
int3
sub
mov
jg
cmp
mov
push
dec
ret
insb
xor
push
mov
int
movsb
sbb
mov
int
popl
gs
bound
xchg
mov
mov
jecxz
sub
xchg
push
lahf
push
push
je
add
push
stc
les
and
sub
mov
aad
stos
add
in
or
or
je
sub
xchg
mov
fmul
ret
adc
push
mov
push
dec
sbb
jb
cmp
xchg
and
enter
nop
xor
jb
mov
out
adc
hlt
out
outsb
imul
or
cwtl
lds
xchg
flds
push
incb
dec
lock
outsb
js
mov
aad
int3
mov
add
jae
mov
leave
cmp
sub
add
shll
daa
cltd
xor
sbb
add
mov
sub
enter
xor
out
push
push
mov
sub
mov
hlt
xchg
pop
out
rcll
negb
daa
xor
cmc
mov
das
pop
aas
lahf
mov
scas
sarl
stos
lret
and
mov
sti
mov
aad
pop
and
jg
xchg
sti
insb
inc
push
inc
mov
mov
and
mov
sbb
rclb
fdiv
add
push
pop
or
xchg
call
cmpsb
in
inc
iret
mov
jmp
cli
cmp
es
clc
xor
imull
pop
dec
add
push
cmp
les
add
xchg
cwtl
inc
shrb
pcmpgtw
jg
push
xor
sbb
lret
push
mov
scas
xchg
mov
rcrb
xorl
icebp
pop
fcomps
leave
push
das
sub
cmp
lods
std
mov
dec
mov
mov
sbb
fmull
cmpsl
dec
and
shl
push
jne
add
and
imulb
loopne
xor
sub
pop
xchg
sub
cmp
dec
jae
mov
cltd
sbb
shrb
fs
addb
daa
movsb
xchg
cmp
aam
fwait
inc
movsb
pop
ror
xchg
push
push
aaa
rorb
pop
stc
mov
pop
inc
jbe
fstpt
bsf
jle
inc
pusha
stc
hlt
imul
out
in
xorl
push
inc
divb
mov
jmp
push
and
pop
xchg
cmpsl
adc
repz
add
rcrb
cmp
bound
sub
jnp
daa
inc
sub
xor
call
test
sbb
mov
ret
adc
mov
int
jg
xor
jl
xor
lods
je
lods
inc
imul
loop
jnp
sbbb
ret
sub
inc
cld
push
in
xor
lock
and
push
loopne
addr16
adc
bound
stos
call
inc
in
and
imul
xor
or
shll
dec
xor
add
push
adcb
shll
inc
pop
das
les
push
es
lods
sbb
add
lds
push
xchg
pop
call
roll
cmp
sbb
jnp
mov
xchg
hlt
push
sbb
lods
jg
fstpl
cmp
out
loop
lcall
clc
sub
popf
aaa
sub
fs
dec
pop
sbb
pop
fnsave
xchg
adc
pop
jnp
xchg
fildl
fisttpll
inc
fimull
jg
imul
in
xchg
test
fsub
cwtl
adc
fs
sarb
pop
add
bound
push
mov
jae
out
add
jl
outsb
mov
into
imul
push
or
fsubr
mov
dec
xchg
push
addr16
stc
loope
or
sub
addl
sub
sub
cmp
int3
call
mov
pop
ja
inc
shll
jg
inc
mov
inc
jne
shl
mov
popa
sbb
mov
ds
mov
rolb
push
pop
sarb
mov
cmc
pop
fdecstp
mov
adc
xchg
sbb
mov
repnz
cmpl
mov
popf
mov
scas
icebp
lcall
stos
xchg
mov
xchg
ret
jmp
fwait
xor
xorb
and
lahf
fisubrl
cmpsl
icebp
dec
in
in
insl
aaa
xor
cmp
mov
push
lock
or
shll
jbe
pop
xchg
cmp
pop
cmp
xchg
cmp
fnsetpm(287
pusha
and
jmp
jmp
andl
xorl
sbb
xlat
mov
add
adc
insb
sbb
pushf
jb
ror
cmc
mov
cmp
daa
out
outsl
sbb
scas
push
cmp
or
jl
imul
adc
int3
and
scas
sbb
sub
repz
das
pop
push
and
jne
test
xchg
and
or
lret
xchg
shl
test
repnz
in
in
inc
inc
cmp
lret
lds
in
pop
lcall
push
leave
pop
or
imul
leave
pop
jbe
mov
adc
lods
cmc
pop
call
lcall
repnz
movsb
jmp
mov
movsb
or
enter
pop
xchg
stos
and
pushf
or
loop
fsubrs
push
push
add
adc
mov
mov
sti
xor
or
and
mov
popf
xchg
jmp
mov
xchg
or
xchg
movb
test
in
pop
sub
jns
fsubr
xchg
fiadds
mov
sub
jle
pushf
fdiv
das
adc
pop
repnz
fucomi
data16
sub
lret
cwtl
and
mov
xchg
mov
ja
les
xlat
lahf
mov
mov
pop
cld
lea
jae
sbb
mov
pop
sti
dec
mov
jnp
cmc
fsubr
xchg
fdivrp
je
test
jg
hlt
dec
push
lods
sub
mov
jmp
jle
ret
adc
lods
jne
cmp
hlt
sbb
push
sbb
mov
mov
adc
fwait
cmp
adc
shr
int3
lods
pop
mov
das
fstps
mov
fs
shrb
ficoml
mov
andb
lods
out
call
sub
and
cli
xchg
push
lsl
pushf
mov
push
aad
repnz
enter
les
cs
mov
cmp
inc
xchg
jo
adc
jp
xor
test
xor
push
hlt
sub
dec
aas
fwait
xor
sub
loop
ljmp
ljmp
add
sub
cs
add
xchg
sbb
jae
imul
cwtl
fsubl
sub
aam
xor
xlat
xchg
shll
mov
add
jno
jae
gs
fistpll
jo
mov
rol
das
sahf
loope
insb
stc
ljmp
adc
xor
add
xor
shll
and
adc
bound
mov
cmpsb
cmp
stos
adc
push
jnp
inc
in
ja
div
pop
push
test
push
cmp
pop
das
push
mov
pop
mov
icebp
and
dec
pop
js
sub
stc
mov
inc
cmp
outsl
mov
inc
cmc
mov
and
and
jmp
arpl
les
iret
jle
or
jle
jl
lds
and
test
adcb
mov
dec
or
mov
into
mov
mov
sbb
scas
push
mov
in
dec
xchg
xor
adc
and
add
or
loope
or
push
clc
xchg
sub
std
xor
int
dec
jns
bound
lss
movsl
sti
xchg
jbe
dec
js
nop
and
sbb
leave
call
adc
inc
rorb
int
add
enter
fisttps
inc
cld
ret
and
mov
sub
test
pop
jge
mov
jg
mov
loope
cmp
and
lret
ret
sbbl
daa
les
ljmpw
shlb
lcall
das
sbb
pushw
movsb
movsb
mov
in
sti
push
iret
loopne
xchg
xchg
xchg
cmpsl
fs
sar
mov
lret
leave
jle
and
mov
pop
test
mov
inc
mov
enter
pop
in
push
lods
aas
sbb
sub
or
add
out
mov
call
inc
cwtl
xchg
sub
dec
lock
pop
jmp
xor
test
aas
mov
pop
call
cmp
out
outsb
mov
cmpsl
sub
and
test
xchg
xchg
divb
lods
xchg
aas
cmpsb
mov
sbbl
insb
xor
sub
inc
movsbl
inc
dec
mov
mov
in
imul
add
pop
jmp
pop
imul
fisubl
jg
outsl
push
mov
pop
pushf
repz
mov
xor
add
sahf
mov
gs
movsb
pop
pop
push
mov
mov
leave
xor
loope
cmp
sbb
scas
dec
cmp
adc
xchg
add
lods
adc
and
pop
xlat
mov
mov
andl
or
pop
mov
lcall
sub
xchg
add
sub
jl
test
ljmp
pop
jg
fisttpll
lock
fcmovb
ja
sub
popf
fcmovbe
push
addb
sbb
scas
popa
test
jnp
mov
mov
fcomps
inc
enter
sub
hlt
outsl
test
xchg
shrl
movsl
xchg
decl
rcrl
xor
das
push
mov
sbb
sub
test
jnp
ljmp
dec
cmp
dec
inc
popa
mov
xchg
xor
sub
leave
cmp
test
sbb
cmpsb
mov
mov
push
mov
mov
int3
fcmovbe
lret
popf
and
jge
fidivl
mov
add
jle
mov
imul
test
stc
xchg
inc
cld
mov
movsl
pop
xchg
fsub
fstpt
in
cmp
cmp
sbb
pop
and
outsl
sti
push
jmp
repnz
aas
mov
cltd
sarb
or
scas
stos
ja
inc
xchg
fisttpl
sub
jo
cmp
cwtl
shll
imul
ret
mov
ds
nop
test
int
out
pop
psubsb
add
popa
inc
jo
ret
sahf
test
xor
jnp
imul
cwtl
xchg
das
movsl
cmc
or
sbb
xchg
mov
mov
loopw
mov
adc
imul
push
lods
nop
jg
push
or
lcall
adc
sbb
push
test
push
ret
sub
jg
je
cld
add
arpl
pushf
hlt
scas
sbb
mov
xchg
js
jge
inc
addr16
getsec
fnsave
outsb
imul
xor
jle
sbbl
and
hlt
aaa
lods
push
pop
mov
jl
js
sti
das
or
ret
xchg
icebp
clc
xchg
and
jne
pop
pusha
cmp
test
imul
cltd
ss
outsb
mov
out
or
push
pop
mov
stc
popf
lcall
repz
out
std
sbb
cli
xor
xchg
out
add
cmp
jge
sbb
nop
clc
add
and
mov
stc
jmp
xchg
inc
mov
mov
aaa
xor
stc
jb
stc
loopne
add
mov
cltd
push
stos
enter
repnz
mov
xor
jae
hlt
out
fadd
sbb
icebp
mov
aas
jg
and
or
insb
mov
test
cs
sub
adc
jo
jle
pushl
ror
fbstp
imull
data16
xchg
fimuls
xor
push
cmpsb
fwait
pop
pusha
scas
adc
jp
pop
fstp
mov
sbb
xchg
movsb
sub
cltd
add
jmp
push
test
das
ds
inc
stos
addb
cmc
add
sbb
mov
xlat
jo
out
sub
mov
xchg
dec
adc
dec
addb
imul
adc
mov
enter
movsb
push
jno
pop
fs
test
shrb
rolb
daa
inc
dec
push
repz
imul
push
push
icebp
dec
inc
lods
aad
push
xor
mov
xchg
in
push
call
xchg
or
adc
stos
mov
or
xchg
fistps
mov
add
fcmovnu
jb
xor
cltd
mov
repz
popa
in
test
leave
dec
mov
mov
movsb
movsl
idivl
fistps
lret
or
stc
lret
xor
pop
push
sbb
sbbl
add
mov
adc
adc
push
pop
pop
pop
aad
cmp
cmp
and
lret
fstpl
xor
jns
adc
pop
test
cs
sbb
adc
jp
jp
cli
loopne
mov
adc
test
cltd
add
xchg
idiv
add
pop
jp
faddl
stos
in
punpckhdq
ror
lcall
sub
icebp
cmp
fsubrl
sbb
mov
xor
out
cmp
cmp
cmp
cld
cmp
and
fidivl
fldenv
nop
jne
out
out
fs
xor
int
pop
cmp
fisttpll
jb
mov
sbb
sbb
test
in
pusha
or
cs
xchg
out
jae
mov
jnp
adc
push
scas
mov
loope
mov
test
jns
outsb
movsl
xchg
or
inc
call
pop
cltd
inc
arpl
xor
xor
jnp
pop
mov
insl
jecxz
sbb
push
dec
vmulpd
and
or
add
lret
cld
jmp
lock
mov
and
and
push
mov
xchg
fcompl
out
cld
xor
out
and
dec
cmp
imull
xchg
pop
aad
scas
push
inc
mov
fstpl
and
in
jne
add
xchg
and
cmp
repz
fldcw
pop
xchg
sbbb
movups
in
stos
repz
outsl
data16
xchg
sarb
cmp
lret
adc
sub
push
or
jb
stos
xchg
pusha
jns
or
leave
imul
add
int3
xchg
aad
std
data16
test
jle
and
movsb
jle
add
xchg
push
cmp
or
ret
js
adc
in
das
movl
adc
aas
addr16
fmull
dec
or
cmp
lahf
xchg
sti
mov
int3
mov
dec
xor
push
pop
out
mov
or
push
sub
dec
movsb
es
stc
push
fs
adc
call
insl
dec
jmp
in
scas
and
cli
jmp
or
lcall
inc
and
or
insl
cltd
inc
mov
daa
and
sbb
aas
adcb
insb
xchg
and
leave
loop
mov
xchg
cmc
lea
out
cmp
stos
and
jne
lahf
push
or
inc
mov
not
mov
sbb
imull
divl
sub
popa
test
add
pop
add
add
jb
and
mov
int3
xor
clc
adc
mov
iret
dec
mov
lods
outsl
rcr
xchg
faddp
pop
xchg
test
and
inc
mov
vandpd
popf
mov
loope
mov
les
mov
imul
sub
dec
fcmovb
xlat
jge
repz
shrb
and
fidivl
cmp
cwtl
xlat
mov
int3
xchg
test
jbe
xor
mov
sub
push
sbb
adc
or
add
cmpsb
das
fs
aas
mov
add
jg
jg
fsub
add
or
or
xchg
xchg
es
push
xor
mov
xchg
pop
and
nop
daa
push
mov
fmuls
cmp
arpl
pusha
xchg
ljmp
movsl
mov
mov
xchg
adcb
rcl
adc
inc
mov
adcb
or
popf
mov
and
add
jo
xchg
and
imul
mov
push
scas
shll
sub
jo
dec
mov
outsl
jge
jnp
loope
fsub
mov
or
mov
push
push
addr16
ljmp
mov
add
sar
pop
icebp
enter
inc
dec
dec
push
dec
gs
sbb
leave
stos
dec
sbb
aas
dec
fidivrs
into
jo
movsb
inc
add
jne
cwtl
cmp
cmp
adc
loopne
and
inc
push
mov
xorl
or
dec
cld
loopne
in
dec
fcmovbe
xlat
xchg
clc
or
lods
push
mov
inc
aad
repz
cld
das
mov
dec
stos
push
jns
xor
jno
dec
loope
jmp
fstl
fsts
or
inc
push
sarl
add
push
int
xor
dec
sub
shlb
test
cmp
bound
in
loopne
xorl
xor
xchg
xchg
or
mov
ret
icebp
xor
adc
out
pop
jge
mov
in
iret
sub
xchg
mov
lret
inc
cmp
sbb
dec
push
movsb
mov
lods
insl
out
stos
ret
inc
dec
mov
inc
cmp
test
or
pop
sar
pushf
xor
scas
inc
mov
cmp
xchg
imul
push
dec
stos
rcr
inc
inc
and
sub
adc
cmp
mov
sti
sub
sub
lahf
xlat
cmp
mov
faddl
shrb
outsl
mov
enter
pushf
movsl
fs
mov
cs
mov
sbb
xor
movsl
or
inc
icebp
or
fwait
xchg
xor
push
enter
adc
fnsave
sbb
push
xor
and
mov
cltd
je
push
add
jb
xor
out
mov
or
adc
xor
cs
and
notl
shrl
mov
out
push
xor
jo
nop
lock
inc
push
out
jae
sbb
sbb
scas
data16
fcomps
ficompl
out
mov
adc
mov
imul
in
das
les
pop
cmp
scas
in
std
dec
jnp
add
movsl
sbb
sub
dec
mov
pop
xor
mov
mov
out
ret
ljmp
mov
push
and
pop
jne
mov
xor
aad
cmp
and
push
cld
xor
and
dec
gs
ret
dec
add
and
mov
xor
inc
std
popl
dec
mov
ret
jmp
pop
imul
jmp
test
insl
add
rcl
cmp
adc
mov
sub
repnz
or
adc
decl
xlat
sbbb
aam
mov
js
cmp
aam
pop
loopne
test
pop
arpl
inc
xchg
xchg
imul
jb
sti
xchg
push
iret
or
mov
mov
mov
adc
in
in
mov
aas
xor
push
arpl
nop
adc
outsb
inc
ja
dec
ss
add
pop
shlb
pop
add
mov
adc
decl
inc
push
nop
sub
inc
mov
add
cmp
pop
pop
jae
xlat
push
add
movsl
mov
out
jecxz
pop
inc
mov
mov
jle
push
lea
push
mov
and
xor
imul
insl
or
xchg
xchg
test
sub
popa
mov
out
jbe
dec
popa
mov
rcrl
cld
aas
sbb
ss
lahf
insb
outsb
aad
sti
xchg
scas
cmp
fcomip
mov
add
insl
inc
dec
in
popf
sti
aaa
pop
test
fistpll
test
push
ljmp
cld
cmp
push
stos
pop
pushf
mov
arpl
lds
loopne
addb
repz
idivl
ss
jmp
sbb
negl
rorb
fwait
test
push
cmp
pop
js
cmp
xor
inc
lods
xor
cmp
mov
push
sbb
adc
pop
mov
add
push
lock
out
aam
cmpsb
js
adc
loop
ret
adc
push
sub
enter
xlat
mov
lea
push
int3
mov
je
mov
in
and
movsl
cmp
out
cmp
xchg
rolb
inc
aad
cmp
sbb
sub
outsl
sbb
mov
inc
pop
cmc
push
adc
rorb
inc
sub
cwtl
outsl
add
sub
dec
mov
lret
shlb
mov
mov
imul
xorb
mov
sbb
lret
aad
xchg
cmp
cmp
gs
inc
icebp
push
imul
test
adc
fsin
out
scas
dec
and
ret
pop
loopne
mov
leave
out
bound
bound
push
test
push
data16
lret
notb
jb
hlt
lea
dec
or
es
add
cmp
testl
cmpsl
scas
lock
fmuls
mov
stos
mov
aad
dec
mov
fdivrs
mov
shl
fcmovb
aad
xchg
or
xchg
pop
pop
lret
push
std
rcrl
pop
cmpsb
cmp
adc
xchg
pusha
aas
out
xor
les
cmp
xor
es
movsb
ficompl
sub
xorb
fwait
dec
call
imul
xchg
xchg
jmp
inc
shl
aad
mov
lcall
dec
ja
js
inc
mov
mov
mov
int
xchg
push
dec
mov
xor
ja
push
test
fwait
mov
sbb
mov
fisttps
pop
test
mov
stc
adcb
cltd
mov
xchg
das
pop
js
mov
xor
fdivrs
hlt
dec
cltd
cmp
cli
mov
pop
stc
inc
hlt
out
cmp
adc
lcall
add
push
dec
popf
push
and
xor
jge
push
fs
out
nop
sub
nop
nop
mov
nop
sbb
popa
mov
gs
xchg
jns
mov
jmp
jge
pop
push
add
les
lret
cltd
and
cmc
pop
in
test
push
cmp
js
or
cmp
jmp
push
cli
test
iret
sbb
jnp
out
cmpsb
imul
pop
cmc
cltd
or
and
pop
outsb
ljmp
dec
fdivs
in
jns
cmp
push
jnp
sub
int3
or
mov
cmp
or
mov
adc
adc
lahf
loope
stos
xor
into
sbb
dec
repz
mov
xchg
push
push
and
mov
ret
jo
lds
out
lods
test
out
cmp
adc
sbb
clc
mov
mov
dec
shrl
aam
mov
movd
out
lret
xchg
in
mov
into
lock
out
nop
cmp
aad
stos
cltd
xchg
leave
xchg
push
pop
andl
cld
ds
push
rcll
jnp
aad
ror
andl
pushw
hlt
repnz
and
faddl
orb
std
arpl
mov
jae
sbb
mov
lret
out
mov
dec
pushf
xor
xor
adc
dec
mov
imul
mov
loope
negb
cmpsb
mov
cmp
sbb
insb
jle
pushf
xchg
xchg
inc
add
icebp
mov
mov
xchg
leave
pop
mov
and
in
mov
dec
xchg
mov
jge
popa
lret
sub
mov
sub
nop
add
xlat
jl
out
pop
jb
pop
in
lcall
cmpsb
int3
cmp
xor
mov
add
scas
jae
mov
inc
inc
dec
lret
in
push
mov
mov
push
pop
xchg
outsb
jbe
shrl
or
xchg
insl
lcall
dec
mov
test
add
mov
sub
xor
and
fxch
inc
enter
or
xor
add
movsb
xchg
push
fwait
and
in
movsb
arpl
mov
test
and
jbe
loopne
cmc
sub
pusha
mov
push
mov
fld
pop
imul
add
xchg
int3
inc
mov
sti
pop
es
pop
sbb
xchg
loopne
movsl
enter
jne
xorps
in
xchg
and
dec
jecxz
push
pushf
cmp
repz
cli
push
mov
or
adc
mov
in
add
aaa
mov
les
push
adc
mov
movsb
push
imul
push
inc
push
jnp
leave
inc
sbbb
jg
and
jle
test
addr16
into
xor
sbb
mov
ret
bound
cmp
xor
repnz
ret
jae
sub
loop
jne
and
popa
icebp
pop
jl
sti
inc
fisttpll
fwait
mov
test
rcr
insb
dec
aas
repz
mov
xchg
sub
repz
dec
pushaw
add
clc
sbb
lahf
jge
mov
fwait
test
nop
sbb
pop
arpl
push
adc
jns
in
test
cmp
pop
insb
aad
mov
and
mov
insl
test
shl
lahf
xchg
mov
dec
cmc
push
mov
mov
mov
fucom
jge
sbb
movsl
push
xchg
out
sti
or
and
jns
push
xchg
sahf
faddl
test
imul
jg
js
ss
cmp
jge
xchg
ficompl
mov
not
push
push
mov
cmpsb
shll
in
es
daa
jne
sbb
sub
mov
es
fcmovb
mov
fsts
inc
shr
in
push
push
push
xor
js
mov
and
test
pop
xchg
add
dec
in
fwait
xchg
cmp
mov
jb
testb
testl
fwait
xor
loop
push
cmp
sbb
mov
pop
add
mov
cmc
add
loop
jmp
nop
and
cwtl
cmpl
repnz
inc
gs
jp
jle
xchg
push
xchg
fcomip
xor
ftst
mov
add
mov
ja
cmpb
adc
das
daa
xchg
mov
jle
push
jae
ljmp
push
adc
xchg
lods
ljmp
push
mov
loope
cmp
cmp
mov
pop
pushl
cwtl
cwtl
rep
popa
fsubl
mov
jmp
in
cld
lods
shlb
loope
adc
sbb
insb
leave
pop
dec
cmp
and
sbb
mov
loopne
mov
rcl
es
mov
ret
lcall
fsincos
outsb
mov
fnstenv
mov
jb
inc
and
jle
mov
incb
das
cmp
or
mov
fwait
xchg
sub
or
pop
testl
push
stos
shr
cmp
sbb
add
popa
fucomp
push
adc
insl
stc
or
pushf
mov
leave
repnz
pop
and
es
or
bound
sbb
iret
xchg
fists
sti
rcl
jg
mov
rcll
fsub
pop
and
mov
lods
sbbl
decl
test
mov
dec
xchg
jmp
add
shl
adc
mov
sbb
or
int
pop
push
mov
shlb
outsb
jne
aaa
mov
mov
inc
dec
add
cwtl
xchg
cmpsb
and
xchg
in
fs
in
or
pop
and
stos
in
rolb
dec
icebp
dec
loopne
jmp
test
and
jp
jecxz
out
movsb
ret
jg
rclb
incb
dec
xor
sub
inc
iret
mov
ucomiss
xor
call
int3
jo
cmp
lods
push
inc
shrb
aam
lea
adc
mov
push
dec
out
fsubrl
adc
fabs
fists
lods
ja
sbb
and
pop
push
sub
ss
xchg
cmp
xor
inc
mov
and
dec
lcall
xor
ficomps
xor
int3
sbb
lret
cmp
mov
sbb
out
adc
dec
sbb
mov
mov
cld
outsb
push
mov
add
jp
ja
nop
shrl
inc
bt
or
pushf
mov
jb
inc
push
shl
popf
inc
cmp
jno
dec
sub
lret
nop
loop
push
xor
cmp
mov
pushf
cmpsb
xchg
pushf
inc
pop
sbb
scas
jno
dec
jbe
shrl
cmp
xchg
ss
test
mov
push
pop
and
int3
adcb
dec
lret
std
repz
fcoml
lea
jle
enter
xor
adc
nop
js
cmp
jns
push
aas
push
mov
lea
cmpsl
mov
lods
movq
ljmp
ja
mov
or
bound
mov
aaa
call
jnp
cld
nop
loopne
shrb
xor
xchg
pop
fisttpl
xor
lret
loop
test
mov
mov
push
test
fwait
scas
dec
jg
repnz
adc
jnp
cltd
lock
push
lds
jae
pop
xchg
sarl
xchg
enter
push
addr16
dec
cmp
sub
popa
sbb
jne
lahf
cmp
subb
add
andb
inc
push
inc
cltd
jbe
jp
push
cltd
push
mov
movsb
rcl
xorb
or
fsubrs
xchg
xor
es
int
xchg
jge
mov
cmp
cli
cmp
lret
sar
mov
mov
mov
out
jg
je
push
pop
ret
in
push
sub
es
sub
ss
lret
ret
cmpsl
and
loope
scas
movsw
sti
in
pop
adc
cld
loopne
and
cmp
push
sarl
mov
and
les
in
repnz
aas
mov
std
rcll
xchg
or
add
loopne
inc
test
pop
cltd
nop
cmc
xchg
xor
jns
jno
and
aam
aam
push
gs
or
fisubrs
outsb
aas
push
lods
shll
mov
push
and
sub
hlt
cwtl
lds
ret
inc
cltd
into
shlb
dec
jecxz
lret
inc
fwait
aad
cmp
and
out
lods
lret
push
popa
xor
movsl
lret
lret
enter
and
jo
xor
int
add
aad
jge
or
cld
sub
pop
lds
daa
or
out
aaa
mov
enter
scas
push
icebp
in
push
xor
mov
inc
mov
inc
jnp
jbe
imulb
push
add
lcall
sahf
filds
cmp
xor
gs
lods
repz
adc
lods
jl
dec
mov
aaa
cmp
addr16
je
clc
mov
mov
and
inc
cld
jno
jne
dec
mov
insl
and
mov
cmp
xchg
cld
sbb
jmp
inc
cwtl
repz
add
addb
push
pop
mov
fsubl
movsl
cmpsb
mov
jbe
ficoml
pop
not
outsb
mov
pushf
test
fxch
icebp
cmp
jo
sarb
rcl
jle
nop
jne
in
inc
nop
cmpsb
mov
lcall
cs
fiaddl
movsl
aaa
or
repnz
insb
fwait
push
sbb
sub
movsl
into
cmp
pop
xchg
loop
aad
sar
stc
in
mov
inc
xchg
lcall
shlb
rorl
jmp
pop
int
fstps
dec
and
sub
xor
fnstsw
jp
pop
mov
push
mov
inc
cltd
insl
cmc
push
jl
push
jne
and
fisubrl
out
fnstenv
in
pop
xor
mov
inc
jp
xchg
xor
test
int3
jmp
and
lds
test
insb
jns
add
inc
adc
fimuls
dec
aas
orb
or
rcl
xchg
repz
pushf
jecxz
inc
xor
mov
push
sub
sub
ljmp
mulb
out
push
inc
xchg
popf
movsb
fs
sub
mov
dec
jns
or
cld
jl
das
add
dec
testl
mov
add
jne
fsubrl
sbb
ret
or
out
jno
pushf
jne
mov
fldenv
rep
sbb
pop
dec
aam
imul
inc
mov
loope
xchg
pop
aad
push
in
jg
sbb
stos
arpl
cmpsl
lret
push
dec
lea
sbb
stos
rcr
xchg
out
cmp
ficompl
add
dec
mov
data16
dec
and
xor
aaa
outsl
into
in
fs
adc
sbb
fdivrp
in
or
sbb
aas
xor
fnstenv
adc
call
cmpsb
and
rcrb
or
pusha
cli
mov
mov
mov
movsb
jg
sbb
dec
add
jle
test
bound
cmp
movsb
repz
inc
push
lret
xchg
jmp
cmc
mov
xchg
add
pop
xchg
insb
das
std
ret
mov
xor
bound
je
jge
mov
pop
repnz
imul
movsb
cmp
cld
outsb
aam
mov
prefetcht2
xchg
lea
cmp
sarl
cmpsl
out
mov
insl
pop
mov
and
push
cwtl
imul
clc
sub
mov
or
xchg
outsb
in
call
mov
sbb
jbe
popf
leave
cmp
inc
jmp
jne
pop
inc
push
push
test
cmp
out
adc
xor
out
inc
dec
xchg
mov
xor
sbb
mov
jb
dec
pushf
lock
scas
stos
xchg
test
mov
test
mov
lahf
push
xchg
imul
lret
insl
popa
mov
xchg
xchg
jmp
cli
aas
sub
dec
cltd
cmc
cs
test
sbb
or
sbb
push
pusha
in
pop
mov
pushl
gs
sub
sub
jnp
add
pop
loop
popf
adc
scas
movsb
mov
pop
sbbb
inc
push
push
lods
lds
or
and
mov
mov
outsl
push
push
in
and
popf
mov
xchg
ret
pop
in
dec
jp
or
cmp
les
lods
or
xlat
lods
pop
mov
and
sbb
fistpl
aas
lretw
xor
pop
jp
pop
pop
jg
loope
in
mov
mov
adc
mov
add
mov
divb
inc
inc
dec
mov
shlb
mov
jle
mov
fwait
stc
rorl
mov
push
pop
mov
pop
or
pop
fwait
fwait
push
pusha
inc
cmc
insl
test
imul
mov
cld
leave
ret
scas
imul
int3
scas
inc
add
mov
nop
test
bound
mov
testl
jns
outsb
sbb
dec
mov
lods
arpl
push
mov
inc
jecxz
sbb
and
sarl
dec
xchg
imul
pushf
xchg
scas
and
pop
sub
or
pop
lods
push
mov
jns
neg
sbb
xlat
jmp
sub
mov
dec
scas
testl
dec
mov
mov
and
incb
adc
inc
out
dec
push
sbb
imul
test
mov
adc
mov
sti
shl
sysret
out
push
unpckhps
out
nop
je
xchg
sub
cli
lods
addr16
fiaddl
pop
cmp
in
dec
les
mov
imul
outsb
jge
sbb
dec
stos
popa
xchg
test
jmp
out
push
and
push
test
cld
roll
push
into
mov
jno
dec
xlat
sub
scas
jg
mov
mov
stc
push
add
pop
lret
sub
lcall
inc
inc
jecxz
sbb
mov
test
in
inc
and
call
jmp
out
or
jl
push
add
inc
fdivr
loop
rorl
push
cmp
dec
mov
sbb
mov
inc
jmp
sbbb
stos
test
cmpsb
lds
test
lock
int
push
adc
adc
xor
icebp
and
lret
lea
xor
and
or
xor
fldcw
lock
arpl
push
cmpsl
cmp
int
mov
mov
add
shl
repz
test
sbb
xchg
adc
and
xchg
mov
fdivs
pop
cmpsb
xor
out
push
adc
or
data16
jno
jno
stos
mov
popa
loope
xor
scas
sbb
stc
pop
fisubrs
and
adc
jno
inc
push
lcall
push
xlat
mov
mov
insb
mov
mov
pop
aas
mov
xchg
cmp
roll
repz
lds
pusha
dec
mov
mov
rcrl
and
adc
dec
dec
xlat
or
cltd
mov
xor
pop
and
test
lea
mov
push
add
out
sub
xchg
mov
notb
daa
daa
ficoml
mov
cmp
jno
pop
call
add
dec
push
pop
enter
adcl
icebp
divl
dec
and
mov
jnp
push
jp
ljmp
cmpsb
cmc
nop
jae
push
mov
xlat
imul
pop
mov
jno
add
sub
mov
or
in
lahf
fisubl
js
sub
bndldx
in
and
les
lods
jp
aaa
pop
fidivrs
ret
andl
aaa
push
inc
xchg
cmpsl
pop
outsb
pop
sbb
pop
mov
mov
xlat
insl
ficoml
inc
sbb
push
or
lahf
icebp
inc
pop
icebp
sar
push
lret
out
fucomi
lahf
jne
lea
sub
dec
cmp
rol
pop
adc
and
icebp
lcall
movsl
jmp
mov
xor
imul
data16
arpl
clc
aam
mov
cmp
inc
jg
scas
iret
adc
xchg
dec
xchg
cli
lods
ljmp
jmp
std
push
sbb
cmp
outsb
fstpt
test
out
dec
sbb
push
sub
shlb
lcall
popf
pop
gs
std
xor
jge
cmp
movups
jb
pusha
inc
pop
mov
xchg
data16
cld
jg
pop
add
ret
xlat
add
push
data16
adcl
push
cltd
sbb
push
stos
pop
das
in
lcall
imul
xor
pop
pop
xor
decl
mov
or
lahf
aas
push
add
pop
pushf
add
inc
pop
sbb
dec
test
ret
emms
lret
adc
push
cmpsb
xlat
and
sbb
add
sarl
jmp
and
mov
in
out
pusha
jne
or
call
sbb
addl
bound
sub
in
rolb
fdivl
mov
cmc
push
or
insl
xchg
in
mov
addr16
in
ret
leave
inc
fmuls
test
mov
daa
cmp
and
icebp
mov
sti
rorb
cmp
pop
insb
sbbl
lea
rorl
std
mov
cmp
sub
divl
fldenv
ret
mov
adc
xor
testb
inc
out
add
xchg
imul
sub
lret
xchg
out
or
jle
cmpsl
and
repnz
mov
push
adc
repz
and
dec
cld
push
es
insb
mov
or
xor
pusha
out
mov
and
jae
jne
inc
push
or
mov
rorb
cmc
sub
mov
gs
xchg
pusha
lods
loopne
rcrl
pop
xor
lahf
mov
cmpb
mov
insb
push
aaa
movsl
lcall
mov
pop
add
clc
sbb
dec
mov
cwtl
mov
loope
pop
mov
xchg
stos
mov
outsb
mov
xorb
push
or
jecxz
mov
pop
aad
lods
jne
adc
sbb
call
std
xchg
jle
pop
rcll
mov
inc
sbbb
xor
rcll
lock
inc
jl
lahf
mov
cmp
sbb
mov
sbb
daa
mov
sti
cmp
sbb
lea
and
cmpsl
icebp
mull
pop
mov
iret
xor
sti
sbb
ja
fcmove
repz
aas
mov
push
jge
mov
fidivs
mov
push
out
sbb
pop
cmp
xor
pop
and
xchg
push
push
dec
mov
mov
clc
push
popa
dec
xor
jg
into
and
sub
fwait
into
push
pusha
or
sbb
out
push
or
jno
sbb
add
in
nop
push
mov
outsl
cmp
inc
mov
out
enter
xchg
imulb
mov
sbbl
cmpl
sbb
lods
cmpsl
in
cmpsl
dec
mov
push
sub
push
mov
pop
inc
or
jb
xor
lcall
inc
mov
sub
stos
xchg
sbb
mov
in
ret
les
int3
mov
xchg
jno
xchg
pop
mov
inc
sub
xchg
std
lods
push
fcoml
dec
adc
xchg
and
test
ds
cmovo
mov
je
into
cld
cmp
sub
stos
or
fstps
adc
pusha
mov
inc
jo
dec
adc
sbb
mov
mov
xchg
inc
dec
lcall
cmp
mov
or
data16
pop
ficoml
lea
cmp
movl
insb
lret
popf
mov
leave
jle
push
cld
dec
mov
aaa
sti
aaa
bound
ret
mov
cmpsl
in
pmovmskb
and
xchg
pop
loope
jae
inc
xor
cli
mov
sbb
neg
cmp
insb
pop
pusha
or
lret
mov
popa
mov
add
leave
leave
imul
lret
xor
ss
outsb
popa
cmp
mov
push
sbbb
sbb
xchg
les
fdiv
mov
adc
or
jno
fstpt
push
inc
or
imul
out
xchg
jnp
xor
mov
jno
mov
sbb
and
icebp
clc
adc
jo
lcall
out
lods
ret
int3
js
daa
cld
mov
dec
shll
adc
ret
je
sub
jae
mov
pop
enter
adc
or
or
lret
inc
cli
and
mov
pop
cltd
sub
stos
mov
add
sti
movsl
lcall
leave
ss
and
clc
push
aam
mov
loope
iret
xlat
fisubs
ret
add
clc
and
into
cltd
adc
add
fstpt
test
jnp
loope
shll
daa
sub
or
out
rolb
sbb
xchg
insb
jl
inc
out
call
xor
iret
pushf
rcl
jge
jno
xchg
test
test
inc
mov
pop
mov
pop
fdiv
fidivrl
incl
push
fmuls
in
ffree
cmp
movsb
mov
sbb
imul
inc
call
cmp
ret
sub
mov
out
pop
out
test
test
cmp
imul
push
push
mull
fstps
pushf
xchg
add
lret
push
or
dec
xchg
inc
popf
push
test
fisubrs
out
sbb
pop
jge
inc
scas
jecxz
sbb
add
push
mov
jecxz
mov
shll
mov
cwtl
mov
mov
fmuls
push
xchg
sbb
mov
dec
in
int3
jp
inc
and
mov
xor
sub
inc
sbb
fdiv
jbe
jp
push
xchg
mov
sti
lea
mov
jno
insl
je
mov
icebp
adc
pusha
push
fisttpll
dec
mov
push
sub
xchg
push
in
aaa
clc
jle
ret
arpl
mov
sbb
pop
jo
xlat
lods
push
inc
mov
clc
clc
cmp
dec
sub
mov
xchg
sahf
mov
push
push
mov
jnp
in
push
or
mov
xor
push
ss
iret
rcrl
mov
punpckhbw
dec
sub
mov
nop
jg
cmp
test
mov
fstl
imul
fistps
pop
int
out
insb
xchg
xchg
and
bound
jne
inc
adcb
pop
cmpsb
mov
inc
hlt
sti
mov
pop
and
inc
or
insb
mov
inc
lods
mov
pmulhuw
std
mov
push
or
lock
cmc
imul
mov
fisubrs
push
lret
cwtl
call
sub
mov
pop
pop
fabs
add
sbb
lods
xor
clc
shrl
jge
cmp
dec
addr16
mov
mov
jns
scas
mov
push
daa
dec
imull
nop
sbb
cmp
xchg
push
lock
xor
outsb
or
aaa
sub
jmp
pop
inc
add
xchg
xorb
dec
mov
push
cmp
hlt
imul
popa
movb
xchg
shll
outsb
ljmp
sub
jne
adc
push
cmpsb
add
mov
lods
xchg
in
sbb
jg
pop
je
or
mov
jecxz
jo
pop
lods
enter
pop
pop
pop
shll
pop
scas
adc
inc
pop
addb
aas
cmp
mov
sti
aad
jnp
popa
shrl
lret
push
inc
mov
xchg
jle
push
fisubrs
mov
nop
xor
sub
cs
sbb
divb
or
testl
clc
hlt
or
push
jg
lret
adc
cmpsl
lcall
inc
jl
iret
shlb
add
in
xlat
xlat
fldenv
xchg
adc
imul
cmpsl
in
mov
in
and
rolb
subb
movsl
imul
add
orl
lock
popa
adc
repnz
cmp
icebp
mov
aas
in
cmp
push
inc
xor
inc
out
or
jmp
add
cwtl
inc
xchg
push
push
push
mov
es
testl
enter
loope
xor
sbb
lret
dec
int3
or
das
dec
idivb
cmc
jns
push
or
ja
test
movl
push
push
inc
imul
mov
leave
mov
sbb
js,pn
push
out
jp
xchg
inc
adc
add
mov
mov
xchg
aaa
pop
dec
xor
out
movsl
dec
arpl
xor
stos
addr16
sbb
fistpll
das
and
repnz
adc
xlat
mov
lcall
or
addr16
aad
or
lods
loope
dec
addr16
divl
adc
adc
cwtl
mov
inc
cmp
push
int3
out
stos
dec
loope
or
sbb
popa
mov
jmp
je
jg
ss
lods
xor
mov
call
insl
insb
jo
xchg
jnp
fwait
or
inc
lea
sbb
mov
fiadds
sbb
aad
mov
popf
rclb
dec
pop
adc
adc
pop
int3
das
hlt
lds
cmpsl
mov
inc
arpl
cmp
xchg
mov
and
imul
js
into
sarb
shrl
daa
in
jp
decl
jge
xorl
jno
jae
lea
lock
rcrl
mov
pop
sbb
shlb
pop
adc
cmp
dec
xchg
push
pop
mov
pop
push
subb
in
jg
sbb
fnstenv
push
mov
inc
loop
leave
lock
jl
xchg
rcrb
mov
aad
push
pop
cmpsb
sbb
xor
int3
daa
jbe
fisttpl
sti
sbb
data16
enter
xchg
rcrb
cs
gs
sub
sar
ljmp
xchg
inc
int3
mov
popa
mov
mov
cmpsl
or
mov
cmc
jno
jbe
xor
and
clc
test
dec
sub
cmc
adc
lock
sbb
scas
cmp
or
stos
sub
ss
push
pop
leave
mov
sub
scas
sub
fldcw
ds
push
loop
and
xlat
cld
cmp
daa
cmp
xlat
daa
idiv
adc
loop
push
adc
add
sbb
xchg
dec
inc
sbb
sbb
mov
dec
addr16
cmpsl
fildl
test
dec
scas
repz
stos
push
pushf
stc
sbb
aas
dec
aas
mov
xchg
scas
jl
xchg
lock
mov
repnz
in
dec
sahf
setno
push
sbb
adc
jo
push
enter
add
lea
push
lods
pop
cwtl
xor
push
enter
mov
sbb
repz
lret
inc
sbbl
pop
scas
xlat
rol
sarb
mov
retw
or
mov
push
xchg
xchg
mov
mov
mov
test
push
jbe
leave
jbe
out
xor
lahf
push
mov
ja
and
cmc
push
add
sbb
sub
sbb
cwtl
jbe
shll
and
daa
js
rorl
mov
jle
arpl
outsb
lret
out
test
sub
mov
sarb
inc
sarb
test
mov
mov
lods
pop
push
push
xchg
mov
push
push
xchg
mov
lret
icebp
or
jmp
xchg
or
jbe
test
jg
xchg
and
mov
movsb
pop
es
ja
ljmp
es
lret
pop
jmp
mov
rolb
out
pop
lret
cmp
jbe
adc
ret
adc
sub
sub
mov
mov
call
dec
pop
adc
or
movsb
push
jp
fs
pop
sbb
xchg
movsb
push
sar
scas
clc
xor
xor
scas
ljmp
mov
scas
add
or
xor
lock
inc
mov
mov
dec
out
daa
mov
xchg
dec
mov
mov
stos
mov
xlat
cmp
mov
mov
inc
push
pop
mov
outsl
scas
sbb
sti
call
sub
test
xchg
mov
push
add
call
ja
push
addr16
mov
push
shl
ficoms
in
cli
addr16
push
cmp
clc
hlt
mov
js
xchg
dec
mov
test
negb
into
jle
ret
imul
pop
stos
lcall
dec
scas
lahf
rcr
aad
sbb
cmp
scas
imul
sbb
outsl
push
xor
push
sbb
pop
pop
pop
icebp
adc
add
and
out
adc
pop
mov
out
rorl
xchg
xor
xchg
cmpsl
aam
imul
insb
pusha
and
pop
in
mulb
lret
jg
outsl
sti
xchg
inc
inc
adc
dec
cmp
fldln2
cmpsb
and
mov
jns
sub
aad
xchg
jle
or
insb
aam
data16
mov
lods
lret
jmp
es
mov
movsb
cmpl
pushf
ja
jg
lahf
ret
testl
and
nop
xchg
test
jp
insb
pop
dec
ljmp
adc
jp
mov
loopne
xor
push
mov
hlt
push
jne
sti
and
push
pop
repnz
test
sbb
or
loop
movsl
mov
filds
mov
add
in
cmp
int
jno
loop
add
lock
pop
rorb
mov
jle
ljmp
or
in
mov
insl
fwait
fs
adc
std
arpl
aaa
rcr
mov
or
cmp
fnstsw
aaa
lods
lods
outsb
bound
mov
jecxz
and
rcrb
cli
loopne
mov
push
aam
push
repnz
inc
dec
adc
and
int
les
sub
jmp
xorb
cmpsb
cld
or
daa
sti
iret
jp
sti
out
dec
fwait
loop
xlat
nop
fldt
push
pop
sub
jae
add
daa
imull
fnstcw
into
xorb
in
int
out
xchg
mov
in
repnz
ljmp
mov
popf
jl
ficoml
aas
cmp
sub
mov
sub
cmp
lahf
cmp
sbb
pop
pop
fisubrs
mov
imul
cli
enter
and
push
and
cwtl
push
test
xor
xor
xor
or
mov
test
inc
adc
pop
in
push
into
sar
lds
jmp
sbb
pop
jae
jmp
xor
inc
xchg
mov
pop
or
sbb
mov
pop
ljmp
pop
call
mov
mov
imull
mov
cli
sbb
jmp
mov
in
bnd
mov
xchg
lret
adc
jo
pop
mov
mov
out
push
out
and
cmp
sti
pop
lods
pop
mov
aad
dec
jne
jne
or
and
push
cmp
push
out
sub
jno
ret
cwtl
ret
out
sahf
test
or
push
iret
scas
es
les
iret
and
push
call
xor
int
shlb
jae
insl
jb
xor
jp
mov
sbb
mov
mov
pushw
sbb
mov
call
mov
imul
rol
call
and
or
out
push
push
movzwl
lcall
out
and
cmp
mov
repnz
pop
pop
movsl
mov
xchg
add
shld
arpl
xor
lret
gs
int
push
or
pop
jg
test
movsb
loope
hlt
ret
insl
aaa
jno
in
call
mov
pop
addr16
test
cmp
xor
adc
daa
aas
int
dec
inc
add
negl
cli
adc
sahf
or
pcmpgtd
pop
rolb
inc
sub
mov
mov
mov
aam
ret
shlb
cltd
cli
outsl
pop
cs
or
mov
sub
sbbl
insl
je
jns
ficoml
jo
mov
adc
fidivrl
dec
lods
pop
sbbb
ds
pop
rorb
rcrb
sahf
jmp
cmp
add
iret
cmp
js
lret
out
in
jns
jmp
rorl
lods
sbb
push
insl
inc
xor
stos
rcr
nop
cmp
jne
cmpsb
std
int3
ss
in
mov
and
mov
adc
xor
cmpsl
test
fimuls
in
adc
hlt
js
subb
inc
jne
iret
push
icebp
js
ud1
test
sub
cltd
jnp
scas
lcall
scas
mov
adc
mov
sub
adc
out
pop
or
sub
pop
lds
fcmovbe
out
adc
ss
push
dec
dec
sub
jbe
mov
sbbl
cld
push
sub
push
sbb
xchg
imulb
rorl
test
cli
push
xchg
cmpsl
pop
inc
insb
pop
mov
mov
pop
sbb
adc
xchg
adc
mov
mov
je
jl
repnz
lea
inc
mov
xchg
push
sahf
mov
jmp
mov
test
sbb
sti
jb
mov
cld
out
and
sub
inc
bound
mov
sbb
insl
sub
sub
in
int
aad
movsb
sub
testb
add
xor
mov
addb
pop
inc
in
scas
lds
sbb
lods
jmp
or
emms
pop
mov
fadd
or
jle
test
push
cli
mov
mov
ret
lods
or
orb
std
ret
xabort
ss
mov
mov
push
or
dec
lret
or
dec
loopne
sbb
mov
fadd
jg
pusha
jnp
fisttps
cwtl
or
stos
imull
popa
mov
loop
out
ds
aaa
int3
push
adcl
jmp
mov
fwait
cmpsb
pop
inc
imul
push
aaa
sbb
mov
pop
inc
cmp
fsubrs
mov
addr16
lods
xchg
addr16
mov
mov
sbb
pop
mov
mov
es
sbb
mov
cs
add
xchg
movsl
jecxz
mov
sarb
arpl
mov
push
sbb
int
mov
sub
stos
and
fnstenv
push
or
pop
or
mov
inc
mov
testl
lods
bound
push
add
pop
lds
xor
push
data16
push
push
xchg
inc
das
pop
push
fistps
inc
mov
call
cs
lahf
push
pop
or
inc
jo
rolb
sbb
bound
ret
cmpb
xlat
scas
jg
sub
inc
xor
nop
enter
push
dec
sub
lods
stos
lods
sbb
and
mov
pop
insl
es
aaa
in
mov
mov
insb
aaa
ficoms
imul
mov
fists
xsaves
roll
mov
xor
out
test
bound
adc
mov
mov
add
call
loop
or
adc
pop
rcll
mov
mov
ret
js
fidivrl
cmp
adc
int3
sar
fsubs
loope
mov
or
pop
inc
mov
dec
stc
xor
iret
jmp
mov
inc
repz
mov
mov
shl
divl
insl
add
dec
popa
xchg
enter
rol
pusha
lret
scas
fdiv
fsubr
sti
dec
imul
dec
in
and
fidivrl
push
pop
aas
cs
add
ljmp
and
lret
mov
adc
xlat
roll
and
mov
lcall
inc
cld
push
push
jno
test
rol
pusha
mov
xorb
cmp
fiaddl
jmp
mov
lock
cltd
inc
mov
push
lahf
sarb
sbb
lods
fcomps
xchg
xor
jae
add
cli
jg
ja
sbb
and
stos
fistpll
fcomps
push
fs
xchg
push
jae
cmp
and
lods
dec
lods
ss
pop
fsubp
jmp
sbb
pop
sahf
push
enter
push
lods
dec
jmp
lret
int3
cld
std
iret
inc
add
mov
pop
lret
add
inc
ret
dec
sub
das
mov
xor
xor
fisubs
xchg
pop
mov
jmp
jae
lods
pop
adc
insb
xor
insb
push
xchg
jge
loop
jno
out
lret
pushf
dec
ficoml
adc
jp
sub
fiadds
add
fstpl
stos
cld
ret
dec
test
mov
mov
dec
jnp
fildl
push
mov
fwait
sbb
movsb
inc
shlb
enter
lcall
loope
add
sub
dec
jge
adc
lock
push
pop
ljmp
cmp
jb
addr16
push
hlt
adc
aas
outsb
ljmp
xor
jg
mov
ret
loope
or
sub
inc
fistl
push
sub
cmp
fwait
or
pushf
in
sub
outsl
jp
adc
xchg
sub
push
adcb
icebp
out
push
jns
xor
jl
or
mov
rcrb
out
cmp
arpl
mov
mov
sub
add
xor
rcll
lods
shll
jns
insb
int
insl
jnp
das
xchg
orb
lods
xor
xchg
pop
pop
in
fsts
or
int3
rclb
xor
cmp
test
pop
or
scas
mov
sub
sub
repnz
sbb
ds
icebp
mov
adc
inc
sub
mov
inc
andl
and
mov
push
mov
in
fstpl
adc
push
mov
fwait
sti
stc
test
adc
fsubrs
inc
loope
test
mov
sbb
shrb
xchg
mulb
cwtl
sub
dec
sub
jmp
outsb
cmp
sbb
icebp
fiaddl
adc
imull
inc
jbe
mov
mov
adc
or
jge
popa
aas
and
int
push
fisttpl
dec
sub
movb
hlt
mov
inc
fcompl
in
xchg
fimuls
addb
ret
adc
push
or
pop
js
jle
mov
or
dec
pop
sub
enter
inc
aaa
imul
lret
mov
xchg
and
xor
repz
cwtl
xor
sub
pop
push
xlat
ljmp
jg
xchg
mov
jo
cmp
int3
rcrl
hlt
test
pusha
mov
push
mov
sub
dec
cltd
ret
data16
sahf
cld
jge
sub
inc
in
jp
mov
or
ret
xchg
or
shrl
lods
xchg
lret
jnp
arpl
mov
fists
xorb
imull
jg
repnz
adc
addr16
je
in
inc
aaa
or
inc
add
lods
cmc
mov
dec
sub
jmp
cwtl
icebp
and
sar
dec
jge
ret
mov
dec
xor
pop
mov
or
push
dec
int
lret
out
adc
mov
in
xor
mov
repz
push
int
in
popa
movsl
lea
jp
push
push
lock
inc
xchg
sar
or
fistps
push
pushf
mov
cli
int3
daa
pop
fistl
rorl
pop
pop
rorl
lahf
out
jmp
and
sub
jnp
mov
lret
out
jns
sar
pusha
pop
stc
dec
gs
dec
divl
fildl
inc
fnsave
pop
sahf
insl
push
inc
lods
xor
dec
inc
repz
mov
cmpsb
xor
mov
mov
aaa
jo
mov
xor
or
cmc
insl
insl
push
test
das
repz
push
mov
stc
bnd
mov
add
pop
add
add
icebp
mov
push
in
std
jb
push
cmp
or
push
popf
sub
test
and
mov
sub
inc
call
loope
adc
adc
and
sbb
daa
or
fstp
lcall
lock
xchg
mov
inc
mov
adc
ret
aad
icebp
fidivrl
ljmp
xchg
jno
mov
clc
or
test
das
mov
pushaw
lock
xchg
test
dec
and
adcl
imul
inc
in
pusha
dec
cwtl
in
dec
add
pop
cmpb
mov
xor
push
ret
psubsw
iret
aas
push
decl
mov
mov
cmp
jg
lahf
fwait
jecxz
adc
cmp
jge
mov
adc
es
sbb
int3
sub
repz
leave
out
mov
repz
inc
jnp
fisttps
nop
insl
add
lods
or
jp
pushl
cmp
cmp
sbbb
cli
or
xchg
stc
shl
out
xchg
sub
lea
in
insl
xchg
pop
and
or
fstl
mov
adc
bnd
pop
movsb
sbb
xor
or
mov
loopne
mov
dec
xchg
paddusb
mov
xor
inc
test
xor
and
and
mov
shl
adc
push
mov
jl
bnd
out
sbb
jle
inc
pop
enter
rcr
and
sahf
mov
in
xor
inc
stos
inc
repnz
flds
push
and
dec
repnz
cmpsl
imul
xchg
jge
call
push
dec
testl
add
cs
sub
or
in
pusha
loopne
sahf
xor
test
push
dec
call
sub
subl
int
push
aas
je
in
jo
pusha
stos
ror
mov
aam
sub
mov
fcompl
push
popf
inc
pop
fdivs
pop
insl
xchg
push
fucomip
push
test
sub
out
mov
pop
fmuls
or
xor
inc
stc
cmp
icebp
or
mov
ss
mov
cmp
nop
push
or
stos
cmp
fistl
pop
mov
adc
dec
push
jg
adc
dec
inc
cmpl
popf
es
es
sbb
pop
daa
mov
cmc
mul
daa
mov
sbb
mov
cmpsb
pop
dec
jne
jne
inc
pushaw
pop
xchg
jae
scas
or
mov
jno
mov
dec
test
pop
or
mov
inc
outsb
dec
hlt
sbb
jns
inc
jns
sbb
daa
jno
lcall
xor
rol
xor
aad
sub
sbb
ret
insl
adc
xchg
int3
dec
dec
pop
mov
xchg
pop
fdivl
mov
std
decl
pop
call
xor
int
aad
ret
shl
mov
mov
js
ret
imul
incb
loopne
rorb
stos
sbb
jle
test
jns
sub
movsl
sti
outsl
or
mov
stc
jmp
adc
insl
push
pop
nop
pop
pop
or
jo
cmpsl
and
inc
inc
int
jmp
std
sti
sub
in
xchg
daa
es
pop
pop
dec
pop
pusha
xchg
dec
aaa
lods
imul
xchg
dec
pop
push
mov
jnp
and
dec
xor
adc
lret
jb
inc
std
insb
cmc
jp
xchg
das
daa
xchg
or
testb
in
mov
pop
jnp
xchg
and
loop
xchg
hlt
push
mov
cmpsb
out
lret
aad
ret
flds
ror
fisttps
push
in
mov
push
faddl
cmpsl
inc
add
fadds
push
adc
mov
sbb
inc
cmpsb
sub
idiv
aad
out
lcall
cmp
inc
or
mov
mov
jnp
push
shrb
mov
pop
and
loope
cmp
pop
mov
inc
or
daa
xchg
xor
xlat
sbb
and
push
out
fisubl
dec
out
sub
mov
mov
adc
push
loopne
mov
push
dec
push
mov
inc
sub
pop
inc
xorb
scas
sbbl
nop
push
cwtl
adc
sbb
outsb
pop
mov
xor
int
xchg
int
lahf
jo
fnstsw
fildll
add
sub
bswap
mov
dec
js
xor
mov
jns
lds
jae
mov
adc
sbbb
xor
cltd
sarl
pop
cltd
addl
mov
adc
int3
pop
jne
or
out
test
jbe
cwtl
je
xchg
adc
or
insb
mov
cmp
movb
pop
push
aas
fnstcw
push
xor
in
mov
sub
hlt
add
push
sub
adc
jle
data16
push
aad
fsubr
popa
xor
mov
lods
test
push
pop
hlt
mov
mov
cltd
jns
push
inc
mov
xchg
mov
repnz
test
pop
sub
pop
hlt
rcl
jg
mov
cli
and
jo
fimuls
or
xchg
popa
xchg
aaa
in
loope
dec
and
xor
shrb
xor
jo
inc
cmp
mov
push
xor
mov
out
or
lahf
push
outsb
jbe
movsl
jns
int3
mov
out
jbe
cli
jle
xchg
test
ljmp
in
arpl
sbb
xacquire
call
iret
jg
cmp
ja
push
cmp
jno
int
add
jnp
push
loope
push
sbb
sarl
out
and
inc
pop
in
movb
mov
inc
adc
cmp
in
and
repz
mov
or
repz
mov
or
dec
jl
int
orl
pop
mov
fs
outsb
inc
test
fsub
aaa
rolb
and
mov
jge
mov
lds
push
mov
xchg
pushf
mov
pop
inc
mov
movsl
push
jp
or
sub
ret
pop
aaa
cltd
cs
shll
lock
inc
sbb
mov
pop
and
mov
into
or
in
jl
mov
lahf
xor
addr16
insb
lcall
inc
cmc
sbb
sbb
pop
lea
notb
icebp
mov
mov
stos
adc
icebp
imul
bound
cli
dec
stc
lods
movsl
dec
xchg
stos
lock
push
cltd
sub
pop
lods
lods
xchg
push
das
sbb
add
stc
mov
not
imul
adc
and
and
or
sub
adc
sub
mov
jbe
push
fwait
pop
inc
loopne
popa
test
add
inc
movsl
and
push
in
mov
pop
mov
andl
mov
pop
aam
xor
jecxz
xor
dec
pop
xor
mov
ds
push
mov
add
aad
dec
mov
insl
popa
inc
lret
mov
mov
and
mov
in
xchg
into
repz
pop
and
push
scas
movsl
leave
sub
mov
cmp
arpl
fcmovu
adc
xchg
outsl
mov
add
sbb
divl
dec
and
into
push
mov
ret
dec
cwtl
nop
lret
sub
mov
mov
ret
out
insb
mov
daa
inc
fidivrs
cltd
ja
push
insb
inc
mov
xchg
dec
xor
enter
aad
js
push
faddl
sbb
or
ljmp
and
lret
or
dec
jmp
in
outsl
jecxz
fnsetpm(287
out
cmp
inc
out
es
jbe
sub
js
out
leave
testl
stos
movsb
or
inc
bound
cmp
add
xlat
hlt
mov
fidivl
jmp
pop
test
adcb
xchg
arpl
ret
shr
adc
sub
pop
mov
outsb
stos
sbb
arpl
sbbl
push
dec
lahf
xabort
xchg
pop
ljmp
xchg
gs
push
loopne
orb
mov
nop
or
adc
xor
lds
pop
adc
aam
and
shlb
jns
mov
fidivl
icebp
rcl
mov
inc
imul
inc
lock
inc
es
inc
jbe
jno
dec
and
inc
pop
pushf
ficompl
xchg
xlat
fistps
jb
pop
mov
mov
jmp
test
mov
pop
xchg
fisttpl
dec
push
and
dec
mov
mov
fists
adc
xchg
push
sub
dec
mov
outsl
mov
mov
cmc
fwait
mov
xchg
int3
pop
test
hlt
xchg
enter
mov
inc
out
and
jae
push
stos
jb
fldt
xchg
or
lret
mov
jg
mov
incl
sub
and
or
shrb
push
mov
fmulp
xchg
pushf
mov
repnz
in
stc
mov
mov
xchg
cmpsl
pushf
xor
jnp
or
fsubr
pop
mov
cltd
pop
imul
pop
nop
xchg
mov
cli
pop
cmp
imull
mov
jne
pop
popf
jae
jo
inc
or
lods
js
jp
pop
push
movsb
xchg
inc
mov
inc
ror
pop
inc
jb
clc
loopne
mov
ja
xor
mov
cmc
xor
xchg
flds
mov
lcall
jg
shll
lock
add
inc
sarl
and
xchg
js
push
mov
rclb
jne
and
cmp
loope
mov
cmc
xchg
jb
sbb
mov
xor
aam
int
xor
ljmp
in
jo
pop
xor
es
pop
add
push
jmp
lods
aaa
insb
inc
sarb
das
sbb
mov
cmp
push
push
mov
lret
out
rclb
and
fst
arpl
cld
lods
mov
pop
lret
mov
cmp
sbb
pop
jge
inc
or
lret
or
cltd
dec
and
lods
mov
int
dec
mov
mov
mov
cmpsl
dec
mov
push
or
enter
push
push
es
sbb
leave
fcomp
adc
sub
pop
sub
jno
xchg
dec
pop
or
sub
lahf
sbb
xchg
rol
clc
pop
add
aad
mov
pop
pop
sub
dec
and
mov
cmpsb
jmp
shrb
mov
pop
adc
in
jb
lret
cmp
jno
ds
dec
daa
gs
idivb
jo
push
lcall
cmpsl
pop
lods
mov
pop
fdiv
mov
insb
sbb
inc
scas
xchg
dec
sti
cmp
cwtl
jmp
lahf
sarl
movsl
movb
cli
jge
cmp
lods
rcl
push
mov
sti
inc
sub
sahf
xchg
lcall
add
xchg
jl
cmp
push
ljmp
lcall
notb
jle
dec
push
pop
cmp
std
push
out
mov
adc
jp
jbe
insl
push
inc
pop
push
mov
lret
aam
fucomi
xchg
imul
scas
lahf
pop
dec
mov
divl
sub
xchg
cmpsl
and
mov
movsl
push
xchg
push
xlat
cli
cmp
cmp
repnz
cmp
dec
xor
mov
into
sbb
jp
sub
inc
push
adc
aam
insb
or
cld
sbb
mov
sbb
adc
adc
sbb
xor
push
dec
movsl
scas
cltd
arpl
dec
push
xchg
mov
js
jge
movsb
movsb
xchg
loopne
add
or
xchg
sti
fisubrl
js
fcoml
or
jmp
push
dec
pop
cli
mov
cmpsl
std
and
mov
inc
movsb
or
mov
loopne
cmpsl
pop
xchg
pop
jmp
test
repz
add
cltd
pop
movsl
lock
jae
cli
adc
insb
stos
mov
cltd
jg
mov
lds
adc
in
xchg
sub
mov
mov
daa
adc
cmp
jb
orl
and
dec
inc
mov
xchg
pop
inc
mov
scas
cmpsb
sbb
and
jge
nop
jmp
mov
out
cmpl
mov
bound
popf
enter
data16
dec
test
or
mov
imulb
int3
cmp
sbb
loop
inc
mov
cwtl
dec
scas
int3
scas
sub
sub
sbb
sub
lahf
sbbb
stc
add
ja
xor
push
sbb
loopne
sbb
inc
loop
imul
lods
faddl
sub
hlt
adc
xlat
xchg
bswap
jns
xchg
adc
orb
outsl
xorl
addr16
sub
cmp
hlt
jp
fmul
dec
scas
loop
sar
mov
clc
std
in
xor
mov
xchg
xlat
roll
cltd
lret
popf
lods
ss
cmc
decb
addl
jg
popf
sbb
xchg
jp
push
stc
dec
repz
inc
jno
push
lds
idivl
pop
test
test
pop
xchg
push
cli
xchg
hlt
popf
ret
out
das
fwait
xor
mov
xor
cmp
pop
cmpsl
mov
mov
cwtl
add
adc
fbld
cmpsl
push
cmp
push
into
cmp
loopne
enter
sbb
dec
loope
xor
les
push
imull
push
movsb
je
adc
scas
mov
cmc
aam
in
iret
inc
lret
cmp
aas
sub
mov
mov
lret
sub
mov
pushf
cmc
push
cmp
push
xor
fs
fcoms
cmp
movsb
inc
sub
xchg
push
into
pop
movb
fucomp
int
jl
repnz
add
pop
call
loop
jmp
loope
pop
push
dec
dec
andb
cmpsb
inc
loopne
test
or
sub
cmp
leave
iret
rcrl
cwtl
or
loop
lret
jbe
shlb
insl
mov
pop
adc
push
rcrl
insl
mov
and
jns
jg
loope
lahf
daa
sub
dec
sub
add
inc
test
and
cmpsb
or
les
xor
outsb
push
jno
leave
jmp
clc
ficoms
scas
push
ficoml
mov
inc
ret
jle
imull
lds
scas
mov
mov
mov
jl
mov
xchg
xor
mov
dec
lds
fisttpll
inc
lods
movsb
mov
fwait
fs
mov
imul
ret
int
xor
std
aas
fistps
test
out
scas
jns
xor
mov
mov
mov
mov
mov
pop
dec
push
inc
dec
pusha
scas
pop
and
mov
scas
fadds
es
hlt
sbb
push
sahf
jns
das
xchg
pop
cltd
imul
xor
aam
mov
pop
scas
dec
daa
push
dec
shl
add
nop
in
aam
mov
xor
pop
hlt
in
aad
or
inc
insb
mov
mov
or
ret
enter
jns
add
insl
sarb
popf
add
lret
stos
mov
rorb
add
lret
cmp
xlat
pop
in
sahf
test
mov
mov
ss
repz
xchg
mov
jmp
mov
leave
mov
loope
adcb
adc
jle
movsb
mov
pop
fiaddl
sub
ja
daa
push
lret
inc
sbb
je
scas
and
das
xlat
sahf
fimull
adc
mov
es
jns
adc
popf
pop
les
scas
push
ss
push
mov
mov
jae
repz
or
repz
adc
mov
imul
sarb
push
or
out
ret
test
mov
outsl
dec
test
xchg
jnp
xor
fisttpl
sbb
mov
repz
lea
push
pop
cmp
call
out
push
subl
imul
test
inc
sub
lcall
vpunpcklbw
ficoms
je
push
add
nop
mov
sub
pop
cmp
dec
cmp
dec
out
sub
and
rcrb
jo
pop
test
hlt
std
out
jmp
popf
cmp
mov
test
pop
inc
mov
jns
loope
xor
je
and
in
mov
adc
mov
mov
add
push
test
aad
lea
dec
xchg
inc
xchg
imul
outsb
sahf
push
inc
pop
aad
dec
out
adc
xor
jecxz
mov
pop
testb
inc
std
stos
movsb
pop
xor
cmpsb
jle
xor
icebp
pop
or
pop
jno
mov
fistl
jp
jecxz
dec
call
push
iret
ret
dec
cmp
mov
mov
js
stc
mov
push
out
imul
cmp
adc
add
ja
lods
lods
xchg
dec
xchg
popa
icebp
inc
mov
and
mov
shlb
inc
aaa
jp
jno
push
ficompl
jo
jg
jl
out
repnz
adc
pop
nop
pop
das
push
jns
jae
jle
lds
aas
sub
push
mov
pop
and
inc
es
lret
push
sarl
xchg
ror
int
mov
loopne
test
cwtl
jnp
xor
sbb
fadds
sub
sbb
add
fistl
mov
inc
pusha
fildll
cs
or
and
cmp
mov
add
sbbb
int
hlt
idivl
dec
ljmp
xor
jnp
dec
dec
insl
mov
cli
inc
pop
xchg
repnz
jae
cmp
dec
push
push
out
adc
adc
lods
flds
call
loope
cmp
mov
or
sbb
js
mov
inc
and
pop
shl
stos
sub
push
gs
xchg
stos
xchg
sahf
or
sub
pop
fsubl
jp
pushf
ds
or
lahf
popf
inc
xchg
and
xchg
cmc
push
or
jmp
cld
dec
clc
jmp
sbbl
fsts
adc
mov
sbb
lahf
jmp
cli
push
jge
sub
jl
rol
jns
popa
faddl
mov
mov
outsb
inc
ljmp
cwtl
inc
push
fcoms
or
loop
cmp
push
ja
jb
mov
xorb
push
xchg
icebp
inc
and
mov
lock
rorb
jne
jbe
pop
das
orl
lods
xlat
pop
sbb
test
lcall
lods
test
jne
adcb
or
in
cmp
cltd
push
flds
dec
in
push
xor
rcrb
add
nop
rorb
pusha
inc
je
rorb
aaa
inc
dec
test
dec
nop
pop
loop
fldt
mov
pop
jle
stos
je,pt
inc
pop
cmpsb
and
sti
mov
insl
aam
dec
push
add
cmc
pop
cmp
xchg
jbe
pop
push
xor
enter
outsb
dec
mov
lcall
int3
ljmp
call
and
fsubs
mov
dec
push
dec
jl
cmpsl
mov
shl
fnsave
mov
mov
into
mov
std
and
push
loop
rcll
and
xor
lock
xor
fadds
les
xchg
sahf
dec
out
push
or
xor
out
nop
add
shlb
mov
sbb
sub
sub
sub
pop
ljmp
in
mov
adc
xor
push
xchg
add
mov
sub
pop
push
mov
mov
aaa
outsl
jnp
ss
bound
push
ret
rorb
mov
mov
xchg
cmp
std
mov
clc
lret
mov
cli
inc
push
int3
adc
dec
popa
sub
out
sarl
ljmp
mov
scas
sbb
dec
push
inc
daa
xor
cs
jb
cmp
adc
das
xor
cli
xor
cmp
imul
lcall
inc
pop
inc
and
cs
mov
leave
cmpsb
shrb
mov
mov
cmp
or
push
lods
jno
sbb
mov
insl
mov
andb
int
and
xor
ja
mov
in
inc
cmc
popf
adc
jecxz
xchg
loope,pt
cmpsl
clc
inc
aad
cmp
or
lcall
dec
or
or
and
sti
xchg
fstpl
test
dec
or
adc
dec
and
call
stos
xchg
in
push
ljmp
xor
loopne
fbld
sbb
or
popa
push
adc
jbe
shll
push
push
mov
nop
jmp
loopne
xchg
xchg
cltd
pop
adc
cmc
rclb
sub
mov
shll
push
cmpsl
mov
inc
lahf
aaa
stos
clc
push
pop
movsl
adc
jl
xchg
mov
dec
rol
lea
add
cmp
xchg
add
or
dec
ret
dec
flds
popa
sahf
adc
sub
lods
insl
loopne
pop
mov
push
cltd
jg
sbb
or
mov
rclb
push
testl
inc
out
xlat
out
fld
jo
cwtl
dec
ss
fwait
and
inc
push
push
or
inc
sti
cmp
or
inc
and
fnstcw
xor
je
pop
cmp
add
xor
dec
and
fimuls
mov
dec
jle
aam
lock
fildll
jecxz
add
add
cmc
decb
popf
in
push
adc
push
sahf
pushf
dec
pop
adc
ficoms
xchg
add
and
adc
fwait
lret
call
mov
scas
adc
sub
mov
cmp
out
ds
push
fidivrl
xor
pop
pop
dec
iret
cmc
stc
push
mov
jecxz
fs
jns
rcl
movsl
or
push
fsub
mov
in
lds
idiv
add
shlb
shll
repnz
flds
stc
jmp
adc
stos
jmp
xchg
and
mov
bound
mov
aad
jo
pop
insl
addl
punpcklwd
test
jmp
push
subl
sub
icebp
push
inc
push
and
ret
sub
sbb
mov
movsl
adc
mov
jnp
out
add
cmpsl
bound
popa
mov
stc
inc
imul
bnd
or
lret
add
mov
push
aam
out
push
repz
jl
in
sbb
lock
in
pop
or
push
enter
mov
dec
jbe
push
pop
push
sbb
ds
mov
in
fiadds
dec
fstpt
dec
loopne
cmp
sbb
out
sub
jmp
xchg
xchg
dec
sbb
mov
clc
shrb
sub
mov
hlt
aaa
inc
inc
inc
ss
and
and
push
je
ret
pusha
mov
out
adc
neg
jge
movsl
fidivs
push
fsubp
mov
add
jnp
outsb
push
shlb
xchg
xor
push
xor
jle
lcall
ret
nop
pop
mov
lods
cmp
cmp
mov
xchg
push
sub
nop
popa
mov
mov
scas
and
stos
das
mov
push
dec
adc
cmc
mov
fs
data16
cmp
inc
addr16
std
test
cmovno
daa
jo
aaa
movsl
sbb
xlat
inc
pop
in
cmp
cmpsb
mov
pop
xlat
fsubl
pop
sub
xor
add
fmul
xchg
test
or
int3
idivl
lods
dec
push
inc
xchg
mov
inc
fcmovne
adc
adc
mov
stc
in
adc
lock
hlt
sahf
ror
test
jecxz
and
mov
sbb
sbb
or
or
pop
mov
sbb
mov
test
lcall
bound
add
test
pop
adc
xchg
jo
cmp
push
push
dec
test
movsl
or
clc
ret
fucomp
icebp
xchg
inc
cmpsb
sub
jg
cwtl
pop
add
xor
or
push
xchg
push
cmp
mov
sbb
js
mov
scas
ret
xchg
mov
adc
mov
adc
insl
xor
pusha
dec
cs
sbb
in
mov
rcrb
imul
inc
inc
mov
sar
jne
into
inc
sub
enter
sbb
pop
fistpll
mov
or
lret
jne
pop
add
jae
int
sub
or
ret
mov
fdivs
shl
push
or
insl
add
xor
mov
nop
lock
ficoml
es
nop
gs
dec
xchg
and
int3
ret
lods
jle
xchg
shr
fisttpll
cltd
ret
in
xchg
sarb
or
repnz
mov
mov
sub
fwait
stos
ljmp
inc
aam
cmp
push
push
or
outsb
jbe
lock
pushf
cs
cwtl
push
aad
lods
bound
js
mov
enter
or
shlb
out
mov
jp
push
mov
jl
dec
pop
cli
adc
imull
xchg
xchg
mov
inc
adcb
out
xor
test
out
inc
mov
add
cmpsl
pop
inc
jns
xchg
in
jge
ss
pop
imull
sarl
mov
xor
mov
mov
xor
aad
cmp
mov
mov
cs
pop
ja
pushf
sbb
xor
xchg
push
or
stc
dec
cmp
icebp
fisttpll
push
push
adc
or
addr16
push
mov
xor
loope
test
mov
lea
sarb
mov
mov
xor
mov
mov
push
jmp
mov
sub
fstpt
je
mov
ja
clc
sub
cli
push
jbe
mov
or
dec
and
enter
fcoms
mov
les
pop
or
cmpsb
lods
mov
xlat
sub
and
pop
insb
fcmovnu
and
sbb
iret
mov
xchg
repz
cmpb
adc
daa
stc
lret
je
xchg
mov
lock
or
sbb
adc
cmp
mov
and
js
xor
imul
sub
popf
dec
xor
xor
sbb
in
sbb
pushf
mov
add
je
dec
loope
mov
pop
pop
xlat
xor
lret
sub
rolb
push
aas
test
lea
mov
in
shr
or
fisubrs
lahf
jb
and
std
test
dec
mov
push
push
adc
sbb
arpl
pop
js
xchg
mov
shlb
adc
rol
pop
jno
pop
and
pop
jo
or
fsubrl
xlat
mov
adc
mov
xchg
push
mov
fwait
scas
jp
adc
aaa
push
push
mov
push
movsl
jge
mov
xchg
xor
aam
or
adc
aaa
pop
cmp
lods
mov
add
xchg
mov
mov
jp
frstor
int3
mov
or
icebp
and
push
pop
mov
jo
addr16
orl
xor
xchg
push
and
call
push
sahf
aam
ret
xchg
fs
xor
mov
jmp
ja
pop
xor
ljmp
cmp
inc
or
les
sahf
stc
cmpsb
fcmove
out
push
push
push
shrb
pop
jnp
mov
mov
pop
out
fadds
mov
adc
add
cmp
lcall
sub
pop
sbb
dec
ror
or
in
adc
adc
aaa
xchg
sbb
push
inc
into
jbe
adc
fstpl
test
ds
aas
out
shrb
dec
pop
add
lock
fsubrs
mov
iret
lods
push
test
call
adc
loop
adc
scas
loope
insl
pusha
mov
add
pop
xchg
in
pop
lret
into
ret
fwait
inc
mov
mov
xchg
push
xchg
inc
jmp
out
test
adc
popa
cmp
out
negl
sbb
rolb
inc
xchg
lcall
test
xor
inc
pop
je
jmp
lret
sarl
rclb
or
daa
shlb
fstpt
sahf
enter
movsl
xor
mov
xchg
imul
sbb
shll
sbb
inc
mov
sbb
icebp
pop
or
cwtl
adc
and
adc
or
fstps
je
mov
insl
mov
jp
jo
adc
clc
inc
or
inc
lods
shrb
popf
lock
push
dec
loop
cmp
cltd
jnp
inc
push
push
jbe
lea
and
add
sbb
mov
loope
loop
mov
inc
inc
inc
or
pop
sbb
or
js
in
icebp
mov
sbb
push
dec
push
aaa
es
and
xchg
sub
add
movsl
inc
sbb
popa
cmp
mov
fsubs
jg
clc
addr16
and
sbb
xor
fs
out
jle
jae
sub
jb
ret
xchg
repnz
mov
test
inc
push
loop
popa
dec
je
sub
lret
ret
mov
mov
or
sbb
sti
cmp
jb
jmp
aaa
lods
in
mov
dec
pop
repnz
and
ja
push
mov
push
inc
lcall
xor
pop
movsl
cmpsb
push
rcll
jp
add
push
test
in
leave
pop
xchg
pop
mov
scas
ds
or
mov
lods
ljmp
bound
decl
cmpsb
inc
stc
cmpsb
hlt
or
and
push
loopne
imul
std
js
ds
popf
loopne
inc
orl
dec
mov
mov
pop
and
js
test
fidivl
or
or
testl
icebp
and
or
loopne
mov
sub
test
xchg
and
dec
inc
push
dec
scas
fwait
jmp
or
or
pop
femms
bound
outsl
adc
jo
sbb
into
sub
das
and
movsb
xor
xlat
ljmp
std
dec
insb
pushf
or
nop
addb
xchg
mov
sub
mov
xlat
movsl
arpl
iret
mov
fdivs
data16
pop
call
mov
mov
pop
stos
push
mov
dec
mov
xor
sub
clc
scas
mov
adc
and
mov
xchg
cmp
cmp
dec
in
stos
add
shlb
xlat
mov
mov
jae
push
xchg
mov
into
out
lds
xchg
std
mov
into
cmp
adc
lahf
in
nop
jno
out
mov
shlb
pop
mov
mov
stos
pop
enter
add
jmp
xchg
mov
int
outsb
mov
cmp
jb
stc
mov
ret
rcll
maxps
jmp
nop
sub
cwtl
push
mov
xor
pop
jmp
insb
sub
test
decl
lahf
dec
leave
dec
stos
add
sbb
cmp
in
xchg
orb
jae
ds
jle,pt
ss
cmp
mov
jle
sub
out
rolb
and
xchg
jae
stos
mov
movb
inc
push
out
and
shrb
dec
arpl
adc
mov
jge
mov
jo
mov
daa
pop
push
aad
sbb
lea
mov
dec
push
mov
xor
xchg
push
cmp
dec
xlat
sub
push
jmp
inc
in
test
mov
popf
xor
cmc
push
mov
insb
jae
dec
aam
rclb
ret
movsb
dec
movsb
stos
jae
adc
pop
addr16
xor
ds
sbb
and
aam
xchg
test
or
pop
fnsave
lahf
shl
ret
adc
imul
outsb
xchg
fildll
add
out
je
add
xchg
xchg
push
es
pop
push
push
sbb
push
jp
shrb
fucomip
push
and
xor
dec
jb
push
sbb
xor
in
in
aaa
and
dec
sub
flds
pushl
mov
jae
and
mov
push
ljmp
add
jns
shr
ret
add
mov
fsubrl
in
cmp
mov
je
test
insl
shlb
push
jmp
xchg
icebp
inc
hlt
out
data16
push
stos
xchg
xor
or
loope
and
and
out
sub
inc
test
push
fwait
shll
pusha
xor
mov
push
mov
iret
fwait
add
jge
push
push
push
pop
push
or
cmpl
fsubrs
jno
push
daa
andl
add
cmp
jp
bound
sahf
imulb
mov
test
adc
ljmp
rorb
inc
fcmovb
mov
xor
jmp
repz
and
cltd
lret
pop
sbbl
or
jo
add
les
jne
mov
or
add
or
mov
cwtl
sbb
ja
dec
test
divl
sbb
adc
lret
pop
mov
mov
push
out
icebp
mov
jg
es
jg
stos
clc
sbb
mov
sbb
dec
lods
mov
or
sub
mov
adc
or
or
push
aaa
pop
or
jge
xchg
mov
dec
cmp
jp
dec
pushf
call
push
fcomps
sub
lods
push
into
inc
jp
fucomip
mov
mov
sub
mov
icebp
mov
imul
pop
lret
jecxz
sbb
xor
and
pushw
mov
mov
icebp
cld
jns
dec
das
xor
fwait
pop
lds
ud2
clc
sub
dec
jp
mov
jns
xor
sbb
lods
nop
sbb
rcl
sub
popa
push
cmc
inc
xchg
daa
sub
movsb
dec
pop
aam
scas
mov
xchg
imul
and
adc
jmp
sti
dec
jns
lock
out
push
mov
or
pop
lods
movb
into
int
dec
xlat
sub
or
cmp
lds
xchg
lock
sbb
mov
cmpsl
mov
out
push
and
xchg
fldenv
vmovups
imull
arpl
lahf
fsubrl
inc
cltd
imul
xor
subl
clc
mov
mov
jg
das
adc
sti
mov
arpl
xchg
add
inc
cld
pusha
sbb
add
jno
mov
inc
cs
fs
xchg
pop
aad
mov
push
jb
jle
sub
jmp
ds
or
loop
xlat
fiaddl
add
jnp
xchg
pop
cmp
xor
dec
mov
xchg
jge
push
mov
les
pop
jp
pusha
adc
jle
out
xor
mov
sbb
fildl
int
popa
leave
jae
mov
mov
int3
out
pop
cmpsb
popf
jae
adc
mov
mov
push
out
test
fisubrs
sub
mov
std
mov
movsl
std
adc
jecxz
jbe
cwtl
lods
leave
mov
mov
inc
jg
andl
dec
jl
lock
jbe
icebp
shll
idiv
inc
cmp
cmpsb
mov
popf
testb
xchg
cmp
test
jmp
and
movsl
pop
in
pop
mov
and
and
pop
pop
add
mov
pop
ss
or
cmp
and
xchg
repnz
ret
fs
icebp
dec
stc
rol
push
jp
lcall
jns
mov
push
xor
xchg
cvtps2pi
dec
push
and
pop
jns
test
sbb
push
enter
and
mov
lds
adc
in
mov
dec
sbb
dec
xabort
push
and
lods
in
cmp
xor
cwtl
jb
push
int3
jne
or
jns
shll
mov
jno
sub
push
sbbl
insb
push
pop
jae
xor
pop
dec
rcrl
sbb
xor
or
sbb
jle
ljmp
aaa
pop
mov
mov
lret
imul
pop
mov
sbb
flds
shll
repz
xchg
dec
mov
stc
sarl
add
pop
xchg
stc
fldcw
iret
push
mov
push
test
and
push
dec
in
test
cs
inc
adc
dec
pusha
bound
bound
lcall
divl
jno
test
movsb
popf
lock
sub
mov
js
push
fidivs
iret
loopne
xchg
sub
xchg
xchg
fcomip
jle
leave
out
lret
cld
ret
mov
aas
push
xor
pop
leave
lret
daa
inc
dec
adc
lcall
icebp
and
fistpll
add
out
mov
pop
roll
lods
and
fmull
fs
cld
push
sbb
jno
xor
imul
loope
inc
adc
add
ds
or
dec
in
jecxz
shll
mov
ja
jp
jne
mov
mov
pop
mov
jne
aaa
cltd
test
ss
in
jnp
insl
ret
xor
mov
pop
fildll
jne
and
sbb
xchg
loop
es
jecxz
insl
clc
push
or
pop
arpl
sbb
push
test
jo
mov
add
mov
dec
xchg
icebp
test
aad
mov
inc
cmp
sub
xor
adc
lods
rcr
repz
sarb
mov
gs
mov
dec
inc
lds
mov
cmp
pop
mov
cmp
inc
sub
dec
jle
scas
out
pusha
lcall
data16
enter
xchg
lods
add
ret
sub
es
push
dec
fstpl
mov
mov
xlat
test
fsubl
je
popf
sub
lret
xchg
and
push
add
cmpsl
je
outsb
pusha
mov
popf
stos
testl
mov
stc
ret
dec
sbb
adc
insl
push
pop
fldenv
dec
decb
push
fs
loop
fildl
jl
mov
inc
or
arpl
ljmp
scas
dec
test
xlat
cmp
test
or
arpl
dec
call
push
mov
lahf
je
jns
push
push
inc
push
fadds
fisttps
out
cmp
inc
jge
cmp
popa
sub
push
clc
imul
sbb
inc
dec
and
push
mov
lods
xchg
test
jno
pushf
push
cld
xchg
cmp
dec
out
stos
mov
in
fdivrl
daa
jnp
dec
rcrl
sub
hlt
jp
ljmp
and
add
arpl
in
outsl
cmp
mov
mov
pusha
iret
addr16
inc
ds
push
enter
pushf
xchg
ret
loope
pop
pop
mov
xchg
xchg
data16
imull
imul
sbb
xchg
jg
out
ss
mov
or
xor
inc
icebp
pushf
cmp
int
mov
push
xchg
xchg
mov
inc
imul
shr
das
int3
dec
lock
mov
pop
sub
lea
rcl
sub
pusha
adc
ja
cmp
sub
sbb
shlb
xchg
mov
imul
bound
inc
mov
cmp
or
add
fdivrl
dec
sbb
test
testb
cltd
pop
repz
jb
ffreep
pop
call
sbb
pop
mov
cli
and
es
insl
fwait
cwtl
push
jmp
movsb
outsb
fs
jae
mov
jmp
sar
push
lahf
cmpsl
mov
add
movsl
add
xchg
or
add
dec
dec
xchg
dec
jmp
lret
jl
push
pop
mov
test
or
test
mov
and
xchg
sbb
pop
xor
dec
test
add
jns
lea
stos
mov
data16
cmpsb
popa
xchg
mov
xchg
inc
imul
adc
aaa
nop
lahf
jecxz
aad
aaa
pushl
int3
dec
add
jecxz
or
xchg
sub
insl
clc
ror
sbb
aam
fnstcw
rclb
inc
mov
pop
jnp
add
enter
repnz
rorb
aad
xlat
enter
sub
pop
push
mov
lods
adc
sbb
sti
mov
nop
mov
mov
js
inc
in
pop
outsl
sbb
xchg
lods
push
xor
outsb
inc
in
add
aad
xchg
ror
xor
outsb
inc
add
into
das
das
cmp
repnz
lret
mov
xor
mov
addr16
fstps
fcompl
jecxz
cmpsb
add
jae
cli
and
mov
js
scas
inc
sbb
push
xchg
aad
pop
jmp
jge
add
or
scas
cli
std
inc
xchg
shl
ja
aam
push
sbb
push
or
sub
xor
lods
jecxz
xlat
pop
popf
cmp
inc
dec
data16
sub
in
jns
push
sub
or
mov
fstl
xlat
xchg
icebp
sub
addr16
bound
sbb
test
sub
repz
cmp
insl
and
aam
inc
xchg
aas
test
mov
outsb
into
cli
pop
popf
xchg
and
int
xor
cmpb
or
mov
mov
jnp
rcr
icebp
or
les
nop
outsb
imul
mov
outsl
mov
dec
mov
in
cmp
movsl
orb
hlt
cmp
adc
stos
xchg
xlat
and
adc
les
mov
lahf
sbb
les
lcall
sub
fsubrs
sub
mull
xor
jmp
outsl
out
lds
pop
sbb
mov
scas
inc
leave
popf
mov
pushf
sti
dec
xchg
cmp
scas
std
nop
xchg
mov
enter
clc
push
sarl
inc
xchg
fdivrl
mov
mov
push
and
and
int
cmpl
movsl
pop
bound
push
cltd
xor
jmp
or
and
adc
push
outsb
mov
adc
xchg
sub
jmp
pushf
inc
adc
pop
rclb
mov
push
repz
push
and
push
push
xor
add
and
cld
pop
call
mov
jae
test
stc
and
fwait
sub
pop
add
cmpsb
popa
stos
nopl
add
mov
adc
xor
push
sbb
jmp
stc
jmp
sub
or
test
add
dec
sub
or
in
push
aam
sti
lcall
push
test
jl
mov
cmpsl
ret
movsb
xor
sbb
jl
sbb
orb
dec
mov
rcll
push
inc
les
pop
inc
stos
lods
pop
into
push
jno
sub
call
mov
aam
mov
loop
push
cmpl
loopne
rol
aas
loop
in
iret
jo
flds
outsb
mov
in
cmpsb
pushl
cmp
scas
pushf
ja
repz
add
xor
and
xor
pop
stos
push
negl
rorb
pop
sti
aad
push
scas
fdivl
hlt
sar
push
dec
mov
dec
loope
aaa
inc
not
fucomp
repz
out
xor
push
xchg
mov
mov
test
xchg
fmuls
push
cmp
adc
shlb
mov
sbb
orb
call
aad
xchg
sbb
fisttps
repz
jl
push
pushf
push
or
and
movsb
stos
repnz
stos
movsb
in
pop
mov
repz
xchg
xchg
mov
bound
gs
je
stc
loope
iret
push
data16
add
and
ljmp
or
mov
sbb
xchg
mov
out
insb
fnop
ljmp
push
outsl
lahf
sbb
add
popf
icebp
push
mov
ljmp
pushf
xchg
xor
aad
ret
jbe
fs
mov
push
or
decb
cmp
ss
ud2
jnp
xor
pop
loope
jo
pop
pop
cltd
jns
cmp
dec
std
pop
sub
xchg
ret
or
sbb
addr16
lahf
jge
cmp
sub
jnp
pushf
sbb
mov
or
pop
scas
lahf
push
repnz
fs
mov
bound
mov
mov
in
sbb
lock
jb
popf
xchg
mov
mov
loop
shrl
in
loope
rcrl
pop
dec
les
ret
cmpl
and
mov
adc
test
insl
inc
aas
adcl
imul
jecxz
les
repz
add
sahf
clc
dec
pop
jbe
les
pop
dec
xchg
xchg
push
mov
mov
or
sub
xor
adcl
leave
lea
add
and
dec
jne
mov
xchg
adc
clc
jl
jg
cmp
jge
jg
jae
mov
movsb
xchg
push
adc
mov
inc
pop
cmp
daa
insb
cmp
and
je
sub
dec
xchg
enter
rolb
inc
pop
and
pop
push
fwait
movsb
xchg
cltd
repz
out
xchg
cmp
sub
pop
jg
push
add
pop
ret
sbb
nop
cmp
mov
or
data16
popf
xor
outsb
xchg
push
dec
pop
push
js
bound
shll
int
or
xchg
fwait
jge
arpl
mov
fstpt
cld
cmp
iret
xor
sub
mov
inc
cltd
xchg
mov
push
loop
data16
xchg
fsubs
idiv
xchg
sub
lret
cmc
push
xor
icebp
dec
loop
std
out
pop
imul
pop
sbb
mov
pop
loope
dec
xchg
mov
or
hlt
inc
leave
mov
mov
and
mov
in
int
lods
ljmp
aam
mov
sti
inc
pop
enter
sarb
pop
add
popa
add
leave
out
clc
cmp
jp
lds
mov
rcr
sbbl
lds
stos
cltd
into
test
sbb
adc
push
mov
lods
decb
inc
mov
xor
mov
push
loop
mov
repz
dec
and
fdivrl
lahf
cmc
inc
fbstp
cmp
xchg
jmp
xchg
or
xor
je
dec
jg
stc
fdivrl
imul
pop
pop
sbb
mov
dec
aaa
mov
mov
es
mov
dec
jns
mov
jne
pusha
call
popf
ret
and
out
mov
or
fnsave
push
add
adc
pop
mov
pop
or
pop
xor
stc
cmpsb
sbb
imull
mov
or
js
lcall
adc
sbb
std
pop
faddl
in
mov
rolb
cmp
pop
popf
sbb
ret
jns
icebp
push
xchg
jno
or
call
or
dec
mov
les
cmpb
iret
jnp
inc
adc
jns
sub
cmc
aaa
sbb
jle
mov
outsb
dec
xchg
das
shrl
xchg
sbb
lcall
movsl
ret
cmpsb
lcall
ret
scas
dec
push
nop
sub
lret
imul
shrl
cmp
inc
pusha
dec
das
mov
fisubs
push
loop
pop
xchg
xor
test
or
insb
repnz
push
xchg
lret
lahf
sub
sub
popa
push
xchg
adc
je
mov
fisubrs
cmp
stos
pop
testl
pop
stos
fsubl
sbb
shll
push
outsb
push
mov
or
lea
adc
sbb
jno
es
push
jno
es
sub
mov
push
jae
cs
popl
scas
test
fs
sar
jmp
xchg
mov
push
lret
pop
inc
adc
int3
das
add
cmpsb
adc
mov
inc
repz
sahf
scas
popa
pop
jp
cs
sahf
mov
mov
in
or
push
js
ljmp
mov
sbb
scas
jge
pop
add
in
push
ljmp
fsubrl
cli
inc
mov
pop
mov
cmc
add
push
jg
into
outsb
sbb
mov
stos
popa
jns
sbb
outsb
xor
pop
cmp
and
in
adc
cmp
or
das
pop
daa
pop
xchg
push
pop
mov
adc
mov
mov
aad
dec
leave
jge
pop
dec
cmpsb
mov
es
cmpsl
inc
lods
aas
ljmp
xchg
mov
ja
sar
inc
arpl
call
pop
jmp
call
test
xor
adc
idivb
aam
ret
int3
orl
xor
pop
dec
mov
movsb
sub
outsl
movsl
outsb
in
push
jecxz
in
inc
dec
xchg
xchg
stos
lds
out
mov
std
jmp
stos
push
pop
movsl
adc
lret
lods
cmp
ljmp
and
mov
pop
or
mov
push
or
loopne
pop
faddl
and
icebp
and
xlat
mov
mov
gs
daa
adc
sub
fsubs
jg
stos
sti
dec
cld
mov
out
xchg
cltd
into
adc
retw
stc
cmp
and
in
scas
mov
nop
or
add
inc
jp
and
sub
push
iret
xor
add
push
push
ljmp
fiaddl
mov
es
lahf
sbb
aad
sub
pop
shl
icebp
das
je
mov
stc
mov
adc
push
filds
fstpt
cs
leave
jl
dec
aad
dec
dec
sub
in
ss
sbb
cs
and
mov
sbbl
xor
sbbb
xorb
aas
pop
icebp
js
in
or
jb
aad
xchg
subl
and
ret
ret
jmp
xchg
fisubs
pop
lods
and
daa
fisttps
lahf
hlt
mov
cmpsl
aad
mov
xor
add
sbb
test
cmp
sub
outsb
and
sti
and
ss
mov
mov
mov
pop
pop
cmp
push
sbb
aaa
mov
nop
ret
fidivrs
inc
add
sub
mov
stos
adc
push
sub
push
orb
je
jg
mov
pop
pop
dec
mov
fs
aad
or
sbb
and
or
pop
rorl
inc
fcoml
jns
das
mov
movsl
ja
fisubrs
xor
push
and
bound
ret
cmp
pop
jecxz
cmpsb
cmp
inc
inc
in
adc
pop
pop
ss
les
xchg
dec
jne
jge
fdivr
or
sahf
xchg
mov
dec
test
fistps
pop
ret
ret
mov
sahf
pusha
mov
pushf
mov
sarl
dec
jl
ret
rorb
das
or
popf
mov
pop
sub
pop
fdivrs
dec
sti
pop
or
imul
push
repz
add
lret
and
inc
jmp
sbb
pop
jmp
lock
adc
fnstcw
addb
xchg
insl
add
jmp
ljmp
jp
jp
sub
ljmp
mov
xchg
sub
push
andl
push
xorb
jmp
dec
cmp
mov
mov
and
gs
and
pop
adc
cmp
sbb
es
in
jno
xorl
cmpsl
flds
fidivl
cmpsb
loop
inc
jp
and
fldenv
lea
xor
test
loopne
fwait
push
fwait
shrb
js
sub
imul
popa
sbb
mov
popf
mov
xor
jno
push
push
sbb
mov
pop
outsb
scas
shrl
js
inc
in
gs
icebp
sub
clc
push
arpl
xchg
fs
inc
aad
out
xchg
call
jle
push
daa
arpl
ficoml
xchg
popf
xor
xchg
mov
clc
pushf
stos
out
push
fstpt
pusha
sub
daa
inc
xor
in
mov
jne
lods
jnp
aad
add
rorb
jg
mov
data16
fisttps
mov
mov
in
ret
adc
mov
aad
mov
pop
sbb
push
lods
arpl
dec
mov
shrl
lret
out
mov
popf
scas
ret
lds
icebp
or
clc
and
popa
pop
movsb
xchg
sub
fsubrp
push
cmp
mov
addr16
adc
or
cmp
or
jbe,pt
lahf
add
pop
je
decl
jnp
movl
mov
shl
lea
mov
and
scas
mov
int3
jb
adc
imul
or
repnz
mov
lcall
hlt
xchg
cltd
fstpt
push
rcrb
test
cld
call
out
inc
mov
stos
add
daa
jecxz
or
pop
rorl
shl
cmp
in
push
test
jae
pop
test
jp
loopne
int
je
das
fwait
pop
adcl
mov
rorb
inc
sub
das
insb
add
fwait
pop
xor
add
mov
js
sub
shrl
enter
sti
lods
sarl
aas
push
test
pop
pop
or
adc
cwtl
sbb
scas
mov
push
jns
mov
jno
ja
cmp
jne
cwtl
dec
cwtl
dec
testl
mov
adc
stos
or
scas
into
xchg
xchg
ljmp
ret
aad
imul
jg
cmc
test
lock
adc
dec
sbb
cmp
mov
flds
or
test
jp
and
xor
in
mov
cmpsl
sbb
ds
stos
dec
fnstsw
in
cli
xlat
mov
mov
lcall
daa
sbb
mull
sbb
daa
out
dec
push
mov
dec
inc
or
ss
cmp
add
and
iret
insl
dec
repz
xchg
out
hlt
clc
dec
dec
inc
push
movsl
xor
xor
adc
dec
push
lret
lods
into
sbb
mov
mov
or
ret
mov
es
rolb
adc
jge
adc
jne
mov
sub
ja
sbb
inc
add
mov
in
jp
mov
jns
int3
sbb
cmc
sti
add
loopne
jecxz
or
call
aaa
jge
adc
in
lods
mov
or
push
or
lret
inc
cwtl
xchg
insl
lahf
popf
ljmp
ljmp
mov
mov
push
add
or
mov
lret
inc
mov
lea
xor
aas
es
add
test
pushf
adcl
cli
movsl
enter
dec
fistpl
pop
jmp
sub
pushf
lds
cltd
mov
jmp
rol
lret
mov
push
negb
push
dec
pop
mov
inc
pop
stos
leave
xor
or
lcall
cmc
movsl
fsubs
lods
mov
adc
xchg
push
sub
pop
sub
xchg
cmpsl
dec
popf
add
adc
xor
jge
fdivl
inc
sbb
jl
add
sti
fidivl
test
mov
ds
in
cmp
inc
enter
xchg
add
or
adc
jnp
mov
add
daa
or
mov
pop
fildl
test
or
xlat
mov
lret
fstpl
es
push
adc
clc
js
test
or
call
ss
xchg
adc
cmp
nop
std
data16
adc
push
aaa
sahf
adc
adc
jl
inc
movsb
sub
vprotb
sti
or
into
push
jae
push
aaa
jmp
jae
pushw
lret
fnstsw
test
push
leave
mov
scas
mov
pop
lahf
clc
stc
and
mov
stos
adc
cltd
repnz
lcall
in
mov
xor
andb
inc
std
inc
jl
lds
pop
xor
sbb
test
scas
sub
test
and
mov
dec
gs
lcall
lret
adc
fstl
xchg
mov
rorl
mov
push
mov
in
rclb
cld
fwait
out
jmp
jecxz
and
add
out
jle
scas
push
sbb
insl
push
sub
fst
push
mov
jmp
adc
pop
test
jo
fdiv
ret
add
push
sbb
negb
pop
push
testb
or
push
stos
mov
mov
test
pop
xchg
insb
test
sub
pop
fs
pop
aam
out
fnstenv
pop
and
and
incl
mov
ror
adc
cmp
jne
mov
or
das
dec
stc
loopne
sbb
outsl
int3
ret
ja
in
or
aaa
xchg
and
add
jo
icebp
leave
in
out
dec
push
mov
or
fmull
stos
jae
push
xor
add
mov
out
dec
xchg
outsb
mov
cmpsl
decb
or
insl
mov
arpl
cmp
lods
mov
addl
insl
pop
sbb
mov
stc
insb
sbb
adc
mov
fwait
ds
pop
stc
adc
push
mov
arpl
mov
lods
cwtl
pop
lret
loopne
bound
and
dec
xchg
xchg
mov
sbb
and
lcall
push
data16
loop
movsb
jae
and
cltd
mulb
sbb
inc
leave
jl
lds
mov
mov
test
pop
xlat
xchg
pop
mov
and
lret
jae
and
adc
sbb
xor
push
stc
mov
mov
sub
adc
push
and
push
fisubrl
and
das
nop
or
je
push
jl
adc
mov
and
adc
sbbb
clc
or
pushf
sti
xor
inc
mov
and
shrl
pop
arpl
cs
ljmp
sahf
add
cmpsb
lahf
repnz
dec
fistps
and
xchg
aad
js
sub
je
pop
adcb
inc
sbb
inc
out
jl
push
repz
jle
sub
dec
pop
and
pop
das
imul
jno
mov
sbb
aam
ret
cmc
sub
push
out
repnz
test
outsl
imull
mov
mov
shr
and
sub
aad
mov
xrelease
push
jmp
outsb
jle
rclb
adc
inc
push
lret
aam
cmc
mov
pop
fmull
mov
dec
cmp
int
xchg
loop
notl
adc
cmpsl
movsl
inc
js
dec
jns
mov
fistps
mov
dec
out
dec
add
and
sub
or
dec
je
hlt
jle
jne
pop
mov
sub
cmp
adc
mov
jbe
cmp
les
adc
jbe
push
pop
and
movl
pop
jecxz
pop
sbb
imul
xchg
push
test
rclb
mov
mov
out
xchg
push
insb
or
push
cwtl
fnstenv
push
popa
fdivr
xchg
inc
fsts
jmp
cwtl
dec
fmul
sub
inc
arpl
test
test
adc
imul
into
sbb
jmp
cwtl
lahf
fs
xor
sti
je
mov
jg
or
insb
scas
jge
or
lret
ficoms
hlt
mov
ss
subb
cmp
mov
push
xchg
pop
or
push
mov
adc
out
and
pop
out
push
pushf
js
mov
xchg
inc
pop
dec
mov
xchg
xor
arpl
out
lret
sti
mov
aad
into
add
fsubrl
inc
sub
pushf
out
pop
mov
and
fwait
popf
arpl
push
out
dec
ja
sbb
sub
out
testb
sbb
inc
insl
jge
sbb
outsb
jo
push
mov
mov
pop
addr16
mov
rorb
cmp
mov
mov
jecxz
fmull
inc
adc
cltd
push
or
dec
lods
imul
xchg
ret
fmuls
stos
cwtl
js
pop
sti
inc
in
dec
fildll
xchg
mov
dec
push
and
inc
cld
fdivrp
in
mov
xor
inc
dec
inc
xchg
outsb
dec
hlt
aad
lea
mov
dec
ss
sbb
negl
sbbl
pop
xchg
inc
xor
test
stos
insl
mov
test
into
cwtl
add
xor
inc
cli
std
jbe
add
cmp
mov
sbb
or
aam
aam
xchg
dec
pop
jbe
mov
inc
push
push
outsl
rcll
cmp
adc
insl
test
int3
mov
aas
mov
mov
inc
mov
shll
ret
adcb
push
xor
jg
dec
fwait
xor
cs
int
inc
jp
dec
pop
mov
mov
and
mov
pop
push
sub
jae
sub
add
sub
dec
int
je
sti
mov
pop
lahf
ja
jb
lds
filds
mov
out
dec
loopne
pop
jg
mov
xchg
jg
and
pop
clc
push
mov
and
sbb
out
mov
neg
sbb
mov
movsl
aas
jne
jp
cmpsl
inc
or
xchg
sub
ljmp
movl
cmp
aaa
dec
jmp
data16
bound
sub
stos
aam
mov
mov
repz
test
cwtl
or
mov
mov
add
jb
push
loopne
repz
pop
je
and
sub
xlat
fimuls
lods
push
xchg
xchg
push
imul
mov
mov
fdivp
daa
xchg
leave
jl
xor
lods
mov
lret
aad
sti
cmp
pop
cmp
jle
inc
imull
movsb
mov
jge
fistpl
xor
mov
xor
and
push
sbb
inc
popf
pushf
cli
in
repnz
push
aad
push
pop
jb
or
in
push
push
rcl
stc
test
mov
push
fistl
out
popa
mov
jnp
shlb
jo
cmc
mov
faddl
sub
sahf
push
movsb
in
fstl
cmpsb
pop
xor
int
aaa
inc
push
fbld
jo
addb
pop
push
lock
hlt
cwtl
and
rolb
jg
cmpsb
adc
repz
mov
lret
sbb
jnp
push
push
icebp
cwtl
inc
mov
cmp
stos
cmp
inc
push
sub
gs
xor
push
pop
and
insb
push
cmpsb
rcl
negb
hlt
stos
jo
mov
cwtl
or
or
andl
xor
fs
inc
ljmp
lret
jo
and
test
popf
scas
sbb
lahf
xchg
add
lods
sbb
jmp
repnz
cltd
xor
pop
mov
xchg
mov
pusha
xor
pop
js
add
jg
insl
test
into
aaa
inc
jmp
mov
test
and
outsl
xchg
leave
outsb
adc
mov
aas
inc
mov
dec
mov
lods
lahf
pop
repz
xchg
adc
and
xor
mov
daa
fimull
shrl
inc
sbbl
jp
xchg
pop
or
lock
popa
mov
daa
mov
and
loope
adc
mov
xchg
cmpsb
and
pop
sbb
movsb
or
loopne
jno
pop
xor
ret
fmul
push
or
add
inc
fwait
dec
dec
repnz
ficomps
js
out
pop
xchg
sub
push
jmp
mov
shrl
inc
add
xor
xchg
push
sub
and
mov
scas
inc
fisttps
add
push
lret
jne
jbe
sbb
mov
stos
out
and
adc
jecxz
mov
scas
sbbl
dec
jns
outsb
xchg
int
or
icebp
push
fnstcw
popf
sub
icebp
dec
or
pop
pushf
fcompl
shll
jb
mov
or
clc
cmpb
sub
jmp
fiadds
xchg
or
lahf
adc
fwait
push
dec
cs
pop
jb
pushf
lret
jp
xor
cmc
xchg
dec
jns
test
pop
movsl
push
lcall
cmp
cmp
cmp
sbb
inc
je
cli
adc
mov
imul
out
push
xlat
lahf
cwtl
rcrb
fistps
ja
fs
push
in
jns
and
lods
int
test
scas
shrl
sahf
cltd
divb
hlt
test
fisubs
in
xchg
notb
mov
jnp
push
cmpsl
or
ds
adc
xchg
fstp
mov
int3
push
xchg
loope
fs
daa
ss
insl
push
inc
arpl
je
mov
jbe
pop
adc
or
pop
das
xchg
movsl
jp
and
xor
fdiv
loop
xchg
stos
push
cwtl
aaa
ret
mov
sbb
in
les
and
outsb
mov
int
pop
out
mov
inc
xchg
or
pop
out
or
mov
xchg
adc
int3
mov
cwtl
stos
xor
ljmp
cmp
mov
incb
mov
popa
in
cmp
sub
cmp
mov
enter
data16
sbb
popa
fcomip
hlt
adc
push
shl
inc
jo
mov
mov
jle
mov
dec
cmp
add
cmp
jbe
jecxz
adc
call
nop
pop
leave
xchg
mov
adc
or
sbb
aad
aad
pop
cmp
lret
or
xchg
mov
cltd
dec
pop
pushf
pop
aam
adc
stos
pushf
lret
je
cmp
leave
mov
test
jle
jp
out
outsb
popf
mov
add
xchg
inc
adc
js
in
mov
mov
shll
aad
movsb
push
mov
jp
addr16
jle
shll
dec
mov
stos
stc
add
add
inc
dec
xorl
xchg
push
jo
mov
add
or
or
pop
sbb
inc
aaa
stos
inc
jno
movsl
adc
ja
sarl
jo
sbb
popa
sub
add
mov
mov
mov
pop
or
lods
call
mov
adc
push
sub
arpl
arpl
movsl
cwtl
daa
repz
repz
pop
xchg
inc
push
mov
dec
adc
or
repz
scas
jno
add
xor
mov
cld
cltd
xchg
adc
lahf
pop
push
addr16
inc
fwait
idivb
pop
int3
stos
add
rep
stos
cmpsl
jle
and
xor
xchg
jnp
mov
sub
in
lods
sbb
cmp
sahf
jbe
mov
lods
push
ss
xchg
push
adc
mov
adc
pop
adcl
push
aas
ja
adc
mov
and
rclb
outsb
mov
jae
in
fwait
cmp
scas
test
xchg
repnz
nop
and
sbb
xor
mov
aas
fidivs
clc
cmp
push
adc
aas
arpl
insb
mov
loope
nop
sbb
inc
ret
js
sarb
ljmp
faddp
dec
cli
add
xor
xorb
jge
fs
lret
jnp
sbb
mov
pop
jae
fwait
jge
lds
scas
cwtl
and
mov
mov
sub
mov
fisttpll
adc
cmp
inc
adc
xchg
fst
pop
icebp
adc
daa
inc
dec
lret
in
lahf
push
mov
lods
incb
inc
pop
cmc
stos
movsl
iret
mov
sub
fimuls
daa
mov
add
fdivs
adc
push
cmp
lea
sbb
movsl
mov
lcall
pop
pop
mov
push
adc
std
stos
dec
insl
mov
pop
dec
fcmovu
ja
inc
sub
mov
ja
stos
jne
icebp
es
mov
aas
mov
mov
clc
push
adc
push
pop
push
ret
insb
and
loop
push
rcr
xor
shrl
inc
pop
imul
dec
out
pop
sub
lds
stos
mov
xor
add
jge
jbe
outsl
jns
sahf
fcompl
ftst
jae
xchg
in
jecxz
fdivrl
sub
inc
sti
adc
sti
push
dec
out
stos
xchg
mov
pop
mov
mov
or
fbstp
aad
stos
sbb
bound
lea
dec
push
out
push
jno
pop
out
pop
aad
popf
xor
adc
or
ljmp
jbe
add
arpl
gs
sti
pop
fisubrl
adc
add
lea
sbb
fmulp
test
mov
les
popa
adc
loope
pop
mov
leave
xor
xlat
and
and
pop
les
push
inc
cmpsb
mov
mov
and
xchg
sub
xchg
mov
add
cs
pop
rdmsr
enter
mov
fisttpl
cwtl
cmp
fwait
mov
add
add
jg
sbb
ja
push
ja
mov
cld
mov
fnstcw
push
pop
mov
shrb
xchg
stc
popa
enter
mov
cli
adc
sub
addb
arpl
pop
cmp
imul
jae
pop
xor
mov
fadd
or
ret
mov
iret
cli
or
sub
cwtl
jle
mov
pop
mov
rcr
and
sbb
lret
xlat
pop
lcall
popf
add
pushf
cltd
sbb
xchg
sub
cmp
push
cmpsl
jecxz
sbb
xchg
mov
inc
ficoml
daa
out
jb
scas
pop
push
add
and
xor
sbb
jae
dec
push
push
pushw
sub
int
bound
int3
cmpsb
pop
xor
dec
and
dec
xchg
rolb
call
cmc
and
aam
and
cli
xchg
inc
mov
outsl
cmp
jle
and
mov
inc
ds
sbb
sub
aad
dec
lret
adc
dec
push
pop
mov
popf
in
int
cwtl
divl
mov
push
outsl
pop
in
lds
sbb
pop
cmpl
adc
shl
icebp
fdivrs
outsl
int3
inc
lods
loope
mov
mov
sbb
xchg
sbb
test
test
dec
jp
mov
sub
jnp
outsl
je
loop
iret
mov
sbb
in
jne
inc
stc
add
fcoml
and
popa
push
stc
leave
movsb
sbb
sub
dec
popl
mov
out
dec
cmp
xor
xchg
mov
in
lea
cld
in
pop
and
fisubrs
and
inc
mov
xor
fisubl
bound
pop
push
inc
mov
pop
std
mov
push
adcb
stc
inc
and
fadds
test
and
fnstsw
mov
imul
sub
dec
mov
loop
dec
dec
xchg
xlat
and
push
pop
dec
popf
and
mov
ror
mov
mov
aas
leave
mov
test
test
inc
push
push
mov
sbb
enter
js
jnp
imul
fwait
cwtl
push
inc
mov
fsubrs
roll
xchg
adc
ja
xchg
sti
xor
pop
mov
inc
scas
and
mov
xor
pop
int
sbb
sarb
lahf
mov
push
push
or
in
jne
lret
cmp
pusha
xor
jp
xor
pusha
add
mov
xchg
mov
aad
or
les
es
shrl
bound
imul
mov
icebp
lock
xchg
push
jo
mov
xor
stc
sbb
xlat
jecxz
sbb
popf
pop
jl
or
cmp
mov
add
imul
jns
and
jbe
and
push
mov
and
xchg
lcall
sbb
adc
out
inc
pop
dec
cmp
pop
test
into
aaa
mov
inc
inc
rcrl
dec
or
outsl
sub
cmpsb
inc
jle
sahf
fs
xor
daa
scas
jno
nop
pop
inc
xlat
push
and
fidivs
push
imul
adc
call
mov
xchg
adc
push
dec
and
cmp
xlat
testl
insl
ja
push
lahf
push
jo
lret
push
mov
clc
in
xor
push
cs
xor
jns
ss
cmp
xlat
test
mov
fbld
adc
bound
lret
mov
mov
aam
out
int3
out
inc
jae
and
in
loop
sbb
in
in
fisubrl
adc
mov
ss
sbb
push
icebp
insl
pusha
jno
push
xchg
enter
add
adc
cmp
add
mul
dec
cmp
fimuls
add
popa
jne
fists
fisubrl
and
sbb
out
mov
insb
scas
int
icebp
xor
or
scas
pop
aad
inc
lahf
dec
cmp
jne
add
mov
pop
imull
mov
sbb
pop
xchg
add
dec
add
inc
xor
mov
daa
jno
and
pop
daa
data16
add
fldcw
sub
adc
cmp
adc
add
movsl
jmp
in
push
add
in
int3
sbb
repz
dec
cmp
mov
mov
or
cmp
inc
orl
fcompl
cs
ss
mov
adc
dec
mov
mov
jb
push
mov
xchg
stc
push
inc
jecxz
push
rolb
mov
test
ds
fwait
add
ret
xor
lahf
xor
xchg
ret
aam
popa
insb
pusha
scas
adc
icebp
lcall
push
nop
sub
mov
daa
add
mov
mov
or
sarb
cmpsb
adc
sbb
sbb
data16
je
mov
mov
in
xchg
sub
mov
cli
push
jle
lock
jo
call
push
shlb
lock
jae
push
movsb
out
lcall
iret
mov
xchg
pop
jge
inc
sbb
pop
loop
hlt
out
inc
loop
adc
cli
push
cmp
add
shlb
ret
inc
popf
push
xchg
xchg
test
adc
mov
fidivs
mov
mov
mov
add
call
xlat
jge
push
adc
xchg
mov
sti
insl
pop
loopne
sbb
inc
cmp
jae
loopne
xor
test
mov
or
stos
enter
cmp
into
sbb
add
adc
or
ret
cwtl
ret
sub
or
stos
subb
clc
push
gs
xor
cld
icebp
pop
cmpsb
ds
call
idiv
or
mov
int
add
fnstenv
sbb
cmpsb
xlat
ret
cmp
or
ljmp
iret
mov
adc
shrl
jg
call
and
push
inc
fwait
lret
dec
cli
rorb
pop
sbb
insl
push
into
das
jecxz
push
and
int3
je
pushf
lods
xchg
jmp
jg
fstpl
mov
cmp
push
mov
mov
inc
or
xor
or
inc
imul
jns
repz
addr16
pop
mov
sub
adc
mov
loope
ss
cmp
or
mov
adc
out
icebp
cli
mov
arpl
imul
and
fstpt
or
je
and
sub
jb
jo
stc
mov
push
repz
lret
outsb
mov
or
and
or
shll
jno
and
pop
xchg
sbb
call
scas
cmp
das
sbb
mov
mov
loop
loopne
mov
push
fcoms
sub
jnp
aas
in
icebp
sub
cmp
sub
arpl
add
or
cmpsl
jl
test
stos
fnstenv
ror
cmp
outsb
cmp
das
inc
add
mov
das
pushl
inc
jle
loop
push
inc
ss
lods
mov
sarb
sbb
popf
jecxz
repz
ja
cmpsl
jnp
int3
lea
adc
jle
mov
inc
sbb
jae
fbld
xchg
gs
aam
loope
faddl
lods
and
dec
jb
subl
stos
adc
mov
xor
cmp
pusha
push
hlt
add
in
arpl
clc
add
movsl
pusha
and
xchg
mov
mov
mov
pop
add
jmp
pop
xor
shl
push
xor
fiadds
jge
or
outsb
and
inc
cmc
pop
dec
hlt
add
data16
fs
jmp
push
adc
sbb
das
test
cld
les
mov
mov
jne
xchg
pop
or
lods
add
cmpsl
mov
mov
enter
callw
adc
mov
mov
dec
mov
push
lds
enter
cli
mov
jbe
mov
inc
imul
mov
jmp
imul
mov
adc
lock
inc
push
out
xor
pop
aas
pop
int
mov
dec
pop
in
jnp
xchg
jno
xorl
add
cmp
inc
adc
test
out
das
jno
lcall
lahf
dec
out
ret
add
cmpsl
and
outsb
fwait
fwait
push
xor
and
sahf
ss
cmp
mov
cli
sbb
add
mov
shlb
xchg
enter
mov
mov
testl
jo
ss
lods
mov
bound
data16
leave
sub
pusha
icebp
sbb
add
fnstenv
mov
push
cmpsb
cmp
in
jae
ret
mov
sub
push
leave
aad
inc
push
xor
ljmp
in
push
fstps
aaa
jg
pop
sub
test
inc
sub
inc
fistpll
xchg
push
roll
pop
xchg
and
test
jg
in
adc
xchg
aaa
addr16
dec
rol
dec
cmp
into
out
or
lcall
insb
lods
jecxz
lahf
sub
pop
cld
into
inc
mov
lock
push
push
lahf
push
xor
out
pop
xlat
and
jns
idivb
push
mov
inc
xchg
sub
sbb
and
out
jno
iret
sbb
xor
add
lea
cmp
call
loope
dec
mov
dec
ljmp
cmpsl
pop
stc
push
fbstp
imul
js
mov
cmc
and
push
mov
lds
fldl
mov
cmp
sti
adc
scas
lcall
push
sub
incl
cli
cmp
test
int
loope
or
lret
xor
or
packssdw
push
dec
pop
les
into
imul
jae
stos
xchg
test
call
bound
and
mull
scas
enter
push
int
imul
int
xchg
inc
jno
sub
mov
xor
push
jno
jne
lahf
and
and
popa
xor
outsl
aaa
stc
push
das
push
xchg
jl
or
jl
int
xchg
js
lcall
outsl
mov
jns
mov
or
push
sti
jae
andl
shl
sub
adcl
mov
sub
mov
mov
mov
jbe
bound
xchg
hlt
mov
xor
mov
cs
outsl
dec
xchg
xor
movsb
mov
leave
daa
mov
test
cmp
in
shl
rolb
mov
xor
subl
mov
mov
incl
clc
fcoms
cmp
jp
inc
ds
jns
andl
mov
repz
lret
stos
dec
sbb
mov
pop
mov
xor
ljmp
out
cwtl
das
push
je
and
fidivrs
jmp
ss
push
cmp
or
mov
dec
add
arpl
inc
loopne
imul
subl
sahf
fnstsw
call
subl
adc
data16
mov
jbe
push
adc
cmpsb
fs
push
out
dec
into
dec
jne
imul
push
add
adc
and
mov
or
lret
push
cltd
and
loop
stos
pop
mov
pop
fwait
data16
mov
gs
fistpll
inc
lret
cmpsl
andb
adcb
or
inc
shl
jns
adc
sbb
cmpsb
or
call
ja
jne
insb
aaa
dec
sub
nop
lcall
movsb
lret
jbe
push
dec
in
mov
mov
sub
popa
adcb
repnz
out
lret
pop
ja
mov
into
fidivl
or
pop
sbb
jg
push
mov
mov
orl
sahf
xor
dec
push
and
pusha
pop
sub
push
add
aaa
inc
lret
push
xchg
sbb
aad
jnp
outsl
adc
dec
shlb
lock
aas
mov
mul
stos
jge
inc
mov
hlt
sbb
mov
cmp
mov
mov
mov
daa
dec
int
cmc
lods
xor
jge
jmp
cltd
and
lock
mov
sbb
jb
inc
pop
xor
test
xchg
mov
jbe
xchg
inc
pop
mov
add
jo
ret
fisubrl
repnz
out
idivl
int3
rorl
loope
xrelease
arpl
lahf
cmp
ja
or
or
inc
gs
sbb
inc
mov
lcall
cmpsb
mov
ss
push
jmp
cmp
test
lret
cld
mov
jne
sub
push
push
test
jae
repnz
rorb
jmp
add
jle
xchg
dec
cmp
fsts
stos
pop
mov
dec
ret
stos
or
pushf
fsubp
sti
test
mov
leave
loope
xlat
mov
test
movl
into
je
icebp
mov
push
dec
into
and
or
inc
add
inc
and
cmp
xor
divb
call
les
movsb
les
mov
xlat
nop
out
xchg
pop
sar
cmpsb
mov
sbb
mov
jnp
dec
test
test
cmp
lods
stos
loopne
pop
scas
cmp
clc
adc
cmp
xchg
ja
mov
je
xchg
lahf
inc
stos
sbb
pop
mov
xor
dec
jl
cmp
mov
icebp
enter
xchg
lods
jmp
nop
sti
or
mov
mov
mov
sahf
sahf
mov
fs
mov
ss
sbb
loop
fimuls
mov
mov
stos
push
and
cmp
fiadds
lahf
fldcw
fdivr
cmpsl
loope
out
ljmp
mov
dec
add
cmp
adc
jle
xchg
or
clc
roll
pop
push
stc
push
ficoml
stos
cwtl
push
rcr
loope
test
xchg
mov
sar
popa
lods
dec
mulb
pop
adc
mov
jo
test
clc
movsb
inc
xchg
jmp
pop
je
js
cmp
fimuls
mov
pop
idivl
push
mov
mov
jp
jp
cmp
loope
jg
xchg
shl
pushf
clc
xor
aas
mov
iret
inc
sub
outsb
sub
mov
fcom
xchg
sarl
les
in
cltd
mov
cwtl
xchg
cmc
and
addr16
inc
leave
lret
push
in
push
cmp
test
inc
lods
subl
mov
add
push
inc
add
dec
call
das
jae
rolb
pop
pop
xchg
push
jle
iret
shll
in
add
xchg
test
neg
std
movb
adc
ret
bound
cmp
push
xchg
sti
lret
cltd
adc
and
std
adc
mov
int3
or
push
shll
repnz
js
sub
jg
jp
scas
out
insb
cs
imulb
ja
sarb
sbb
loopne
lret
ljmp
mov
adc
pop
pop
rep
sahf
lock
imul
or
jecxz
cmp
scas
xchg
rclb
popa
gs
cmp
sub
jb
mov
mov
popa
cwtl
out
lods
push
mov
cmc
btc
mov
or
repz
or
fwait
push
loopne
ret
adc
dec
aas
cmp
cmc
daa
into
sarl
add
ljmp
sub
addr16
ficoml
xor
nop
imul
push
jl
jmp
dec
push
inc
mov
dec
sbb
aad
jnp
les
mov
movsb
lods
sti
xor
mov
lahf
mov
cmpl
cld
testb
jne
jg
push
push
ffreep
add
scas
fucomip
mov
and
test
jmp
mov
fstpt
pop
and
jnp
cmp
jb
loop
std
stos
popa
jecxz
jle
or
dec
xchg
mov
lret
imul
hlt
jp
rcl
bound
aam
jmp
sub
push
std
popf
adc
dec
pop
lds
inc
je
and
mov
lods
sbb
fistpll
jb
dec
push
xor
mov
xor
shlb
ror
fsubrs
sub
sar
clc
inc
add
push
cmp
shll
inc
cmp
ds
insl
pop
dec
xor
cs
nop
rcrl
mov
cltd
mov
mov
divb
test
lods
test
lret
mov
push
mov
jge
push
insl
es
sub
jecxz
cmp
sbb
hlt
int
push
jmp
pop
xor
add
add
bound
lret
pusha
mov
js
scas
adc
push
test
mov
and
add
pop
cmp
in
lcall
push
aad
adc
pop
cltd
rclb
aam
ljmp
pop
ret
cld
dec
push
pop
mov
pop
enter
lods
and
cmpsl
notb
sbb
push
mov
jmp
xchg
pop
out
inc
daa
fistpl
cld
cmp
sub
stc
aad
pop
mov
movsl
fdivrl
stos
mov
in
sar
or
fxam
mov
int
cmp
cmpsl
sub
mov
aas
sub
push
push
outsl
or
push
and
popf
cmpsb
pushf
cltd
enter
jae
mov
xrelease
gs
inc
repnz
pop
ret
in
aas
lahf
xchg
popf
pop
test
cmp
iret
jbe
cwtl
arpl
inc
rorl
rcl
aas
insb
lret
inc
mov
cld
inc
lods
popf
mov
xor
adc
ror
in
xchg
xchg
inc
or
lahf
hlt
cltd
lods
shrb
shl
fnsave
test
jnp
adc
repz
add
arpl
sub
push
fsubl
sbb
cmc
adc
outsb
fiadds
mov
je
lahf
jae
into
push
and
push
jge
fiadds
cs
mov
jp
aad
dec
loop
insb
lcall
std
cwtl
jae
stc
adcb
out
cmp
shlb
clc
mov
stos
cmpsb
loop
stos
neg
sub
push
add
ljmp
cmp
iret
adc
push
push
divl
call
int3
and
or
sub
or
xchg
or
jns
pop
and
push
xchg
push
mov
jle
dec
shlb
call
inc
mov
xchg
mov
mov
cmpsl
add
popa
xchg
and
je
stc
cmp
jno
inc
push
and
stc
mov
pop
xor
mov
adc
adc
imul
mov
cmp
push
mov
popa
movsl
negl
shll
xor
stos
stos
adc
sub
mov
je
icebp
jp
cmp
dec
mov
popf
adc
js
je
sub
scas
movsl
fwait
push
sbb
repz
and
xor
cld
add
jmp
add
push
sbb
hlt
cwtl
int3
aam
in
stc
lahf
add
arpl
mov
int3
xchg
loop
dec
adc
int3
ret
lret
sbbb
pop
popf
dec
xchg
add
pop
lods
sbb
dec
outsb
inc
jl
or
inc
adc
adc
hlt
jl
xlat
sub
popf
outsb
insl
xor
and
or
aam
add
cltd
sbb
into
fistpl
lock
pop
decl
stc
mov
pusha
mov
fs
fs
call
dec
test
adc
jb
testl
aaa
mov
pop
push
arpl
inc
push
sbb
add
mov
into
xchg
stos
cmpsl
in
add
stos
pusha
repnz
push
push
cmp
inc
ret
sbb
xchg
mov
sbb
xor
push
je
test
stc
sahf
stc
pushf
sbb
pop
test
fsubs
sub
xchg
nop
addl
xor
jnp
cld
jecxz
pop
arpl
sub
mov
mov
out
mov
lcall
sbb
mov
adc
aas
mov
pop
adc
sahf
movsb
cmp
fbstp
jno
repnz
add
mov
jae
mov
pop
and
scas
add
in
cli
gs
jl
in
scas
pop
repnz
jmp
lret
lret
js
call
push
adc
push
cld
and
imul
popf
popf
mov
in
sub
jb
mov
adc
push
or
mov
insl
or
jns
in
int
ret
adc
push
push
xor
mov
outsb
xchg
or
add
cmp
cmp
mov
push
ss
mov
xor
stc
icebp
clc
adcb
lds
sahf
dec
lcall
sub
and
add
ret
in
loop
mov
mov
fsts
stc
in
pushf
push
push
out
xor
popa
sbb
sbb
cmp
push
pusha
adc
inc
push
mov
in
sbb
popf
xchg
lcall
addl
test
dec
lods
inc
dec
sub
out
and
xchg
pop
or
popa
mov
je
andb
lret
mov
jge,pn
mov
clc
push
cmp
into
jp
pop
mov
imul
jmp
pop
dec
sbb
push
dec
testl
imul
cmp
test
cmp
lods
lret
xchg
ljmp
or
es
mov
in
cmp
lock
xchg
aam
inc
je
aad
mov
cmpb
lea
mov
mov
or
stc
xlat
mov
out
rcrl
mov
mov
in
cltd
test
dec
repz
xchg
dec
inc
popf
add
sahf
mov
fsubs
mov
arpl
mov
pop
and
iret
sbb
or
mul
sbb
mov
fdivrs
jne
fisubs
loop
mov
je
outsl
hlt
test
in
mov
jle
add
test
inc
out
jecxz
jns
in
pop
rclb
mov
into
cmp
repz
ljmp
hlt
mov
sub
stos
add
adc
je
imull
dec
fdivrp
and
push
ja
mov
subl
in
dec
jl
pop
mov
pop
cmp
clc
mov
imul
mov
sar
leave
and
rcll
ja
or
icebp
sbbl
fstps
jnp
sbb
fst
test
leave
mov
sahf
push
sbbl
sahf
stos
into
pop
sbb
mov
sub
shlb
xchg
stc
repnz
into
sub
mov
enter
dec
jae
mov
add
test
adc
jnp
push
xchg
shrb
cmp
inc
lcall
test
into
test
rcll
mov
je
test
rol
movl
movsb
dec
mov
out
push
xor
dec
cmc
dec
gs
inc
mov
sbb
push
mov
pmaxub
jbe
mov
jg
insb
loope
pop
xor
xchg
dec
jbe
inc
push
mov
bound
ror
cltd
adc
sub
sub
push
pop
push
inc
push
mov
add
rcr
insl
sub
xlat
pop
pop
inc
das
mov
iret
call
test
loop
loopne
arpl
cmp
cs
cmp
lods
push
sbb
or
scas
or
das
sbb
icebp
add
pop
mov
js
cmp
loopne
dec
or
xlat
into
cli
js
int
idivl
mov
cwtl
cmpsb
ror
ljmp
push
jnp
in
mov
iret
loopne
out
mov
addl
rolb
gs
ljmp
mov
test
push
negl
push
jnp
mov
invd
fimuls
xchg
das
inc
cmp
jae
adc
test
xchg
lcall
sbb
test
in
loope
cmp
jbe
sbb
mov
push
mov
xor
dec
cmp
xor
or
scas
test
lret
loop
pop
or
dec
jns
push
cmpsb
addr16
jns
mov
pop
rcr
dec
xchg
ret
aad
shl
adc
insl
sbb
dec
dec
ds
xor
into
call
insl
jl
sbbl
in
cld
lret
test
in
in
divl
cmp
and
test
push
mov
mov
scas
aas
lds
lock
fxam
xor
jb
push
das
inc
jno
lret
add
jg
scas
fsub
xchg
pop
push
pusha
test
test
popl
add
int3
push
jp
sub
xor
inc
shlb
xchg
in
cmp
adc
mov
int
ret
int
push
cli
add
ss
adc
adc
test
cltd
xor
jno
xor
adc
movsl
xchg
je
imul
pop
popf
inc
cmp
cmp
test
mov
mov
pop
sti
aaa
or
lods
iret
outsb
shlb
shll
test
dec
insb
test
cmp
cmpb
sbb
mov
jp
rorl
add
in
mov
pushf
mov
xchg
push
arpl
mov
jne
ror
pop
lock
hlt
sub
push
ret
jne
addr16
sbb
xchg
pop
mov
sub
cmp
into
mov
ret
pop
fiadds
lea
xor
push
inc
lock
xchg
gs
inc
sbb
inc
pusha
xchg
pop
dec
cmp
test
insb
cmc
aaa
xorb
fadds
cmpsb
mov
dec
cmpl
push
fbld
xlat
int
repz
add
iret
cli
and
fiadds
add
imul
shrb
gs
repnz
andl
stos
pop
and
cmp
xor
ret
mov
bound
pop
shlb
pop
fistpl
pop
leave
pop
mov
cmp
adc
je
stos
xchg
xchg
in
into
out
cmpsl
sti
lret
adc
stos
jl
in
push
xlat
mov
dec
jge
pop
xor
sub
mov
inc
hlt
pop
ljmp
dec
imul
sub
push
xchg
loop
xor
mov
test
loop
mov
test
push
gs
push
cmpsb
fistpll
cmp
push
push
jmp
lock
std
jbe
lret
adc
add
fwait
cwtl
jnp
imulb
std
pop
mov
xor
shll
push
lods
mov
sub
inc
push
sbb
testl
fnstcw
pop
rol
repnz
pop
pop
sub
mov
pop
imul
jae
dec
jl
cmp
adc
imul
add
push
mov
les
out
gs
mov
push
add
jge
flds
out
mov
push
add
fmuls
sbb
jp
fidivrl
lds
and
popf
pop
sbb
aam
lret
repnz
inc
xchg
xchg
jmp
scas
subl
sub
scas
adc
push
mov
fucomip
jmp
idivl
pop
ljmp
pop
add
je
xlat
adc
xor
lret
loop
or
and
sub
ret
xchg
fmull
push
cld
in
push
stos
mov
sarb
xor
je
repz
hlt
cs
pop
adc
jnp
and
gs
cmp
mov
or
shlb
test
fcoms
xchg
ljmp
inc
fwait
inc
nop
ljmp
dec
enter
or
stos
dec
pop
loope
and
loope
add
inc
inc
pop
cmp
fsub
xchg
xor
push
push
or
bound
je
adc
pushf
mov
cmp
cwtl
push
roll
xchg
xor
xchg
inc
out
les
lret
pop
mov
xor
sub
dec
int
xchg
mov
mov
add
jnp
loope
mov
cwtl
jbe
mov
lahf
jbe
adc
fstps
pusha
mov
cmp
jb
xchg
dec
frstor
cmp
orb
xor
push
sub
pop
es
sbb
xor
inc
popa
cld
clc
jge
push
or
pop
andl
and
leave
jnp
sbb
lret
fadds
and
fistps
push
cld
jecxz,pt
adc
jae
add
call
out
mov
cmp
data16
fs
xor
mov
cmpsl
mov
cmp
lahf
movsl
push
adc
xchg
fadds
jne
sub
addr16
push
icebp
cmp
mov
or
adc
fldl
arpl
cmp
mov
fcomps
mov
sbb
xlat
xchg
mov
pusha
call
push
jne
sub
xchg
dec
and
sub
arpl
leave
out
adc
mov
cwtl
loop
ficomps
shll
cli
test
push
inc
sub
fistps
fs
jecxz
fnstcw
push
jle
fisttpl
stc
inc
inc
sarl
push
jecxz
push
popa
mov
xchg
push
cld
aas
xchg
jmp
outsl
and
and
push
outsb
aam
xor
jp
inc
or
leave
and
cs
dec
push
xor
cmp
sahf
push
mov
dec
ja
and
pop
pop
movsl
push
dec
test
pop
jmp
xor
cltd
mov
and
mov
mov
in
rclb
test
add
cmpsb
cmpb
lods
sbb
adc
daa
cmp
movsb
jle
jge
xor
imul
xchg
int
pop
int3
or
xchg
jns
xor
in
push
cwtl
fmull
inc
jno
bound
pop
fadds
and
mov
xchg
cmp
pcmpgtw
stos
and
cmpsl
pop
and
ret
pop
cltd
push
pop
jge
mov
xchg
aaa
add
and
fwait
or
and
jns
push
in
dec
add
or
stos
ret
add
xor
inc
mov
outsl
into
div
jmp
daa
lods
popf
jmp
add
ds
daa
mov
xor
lea
pop
std
cmpsl
shll
pop
mov
inc
out
inc
push
push
push
dec
pop
mov
push
or
sub
rclb
jns
xor
inc
sbb
mov
dec
or
adc
test
mov
movsb
cmp
xchg
rcrb
lret
outsl
into
rcll
cmc
lds
push
cltd
scas
repnz
sbb
ljmp
push
in
jmp
push
mov
jecxz
fistpl
rcrb
insb
into
adc
or
xor
ds
mov
test
jnp
lods
push
push
pop
int3
fidivrs
inc
scas
jecxz
aaa
sub
inc
xchg
adc
lods
cli
push
sbbb
add
xorl
xchg
iret
push
divb
xchg
xor
in
mov
aas
mov
add
stos
mov
lods
sub
push
jbe
xchg
xchg
mov
jge
in
lcall
adc
cltd
or
out
mov
cmp
mov
nop
cmp
cmp
jp
lcall
xor
and
jno
jecxz
es
push
pusha
pop
add
iret
push
das
stos
iret
dec
mov
or
sbb
mov
in
cmp
aaa
call
add
xchg
pop
xor
enter
js
jle
inc
aad
andl
push
push
insl
cmp
jae
jecxz
scas
in
and
pop
mov
ss
pop
repz
or
dec
pop
or
cs
adcb
test
sbb
int
call
pushf
lea
je
mov
mov
js
or
dec
lods
repz
cmp
imul
test
out
push
ret
test
mov
sbb
xchg
lcall
and
pop
int
divps
push
ficomps
cltd
in
mov
stos
push
inc
in
stos
cmp
mov
cltd
xor
fidivrl
add
xor
ret
mov
and
sbb
cli
ret
in
mov
cmp
sbb
repnz
xor
mov
dec
xchg
pushf
fucomi
sti
xor
or
add
jb
movsl
mov
or
xchg
in
push
jg
add
mov
outsb
aaa
scas
xor
in
mov
push
addr16
sub
popf
lcall
jle
nop
cmp
insb
add
popf
or
popf
push
mov
mov
adc
loope
sti
push
xlat
or
mov
pop
lret
neg
add
mov
cmp
inc
out
push
into
cld
pop
cmp
push
mov
mov
pop
lcall
enter
mov
cli
cmp
cmp
dec
es
mov
jno
movsb
xor
jmp
xchg
in
fildll
xchg
sbb
sub
sub
test
out
or
test
arpl
inc
int3
pop
sub
xchg
mov
push
fadds
in
fidivrl
repnz
fwait
rcrb
loop
cltd
fisubrs
scas
test
repz
adc
xchg
insl
outsl
fstpt
in
jns
mov
loop
test
pop
dec
inc
pusha
mov
test
scas
test
subl
xchg
test
flds
xlat
sub
cmp
in
or
xchg
cmp
xlat
cltd
std
sbb
cmpsl
daa
ja
xor
sub
sub
mov
inc
mov
movsl
xor
pop
cmpsl
iret
xchg
aad
add
push
cs
xchg
test
push
jbe
add
inc
push
or
dec
imul
rclb
add
mov
push
outsb
nop
xchg
sub
outsb
cs
and
cltd
loopne
jmp
das
sbb
dec
test
rep
and
cmp
popa
leave
in
and
cwtl
mov
repnz
repnz
enter
test
mov
add
xor
mov
ljmp
push
sahf
iret
mov
xor
int
xchg
xchg
push
fstpt
fnstsw
les
sbb
int
hlt
push
sbb
cli
mov
cmp
ss
addr16
testl
and
pop
or
xchg
jle
jnp
movsb
mov
sub
jae
push
cmpsb
ret
dec
outsb
pop
pop
push
mov
arpl
out
sub
cmc
rcll
cmpps
outsb
and
jbe
repnz
pop
jo
mov
subl
and
lds
fsubl
mov
mov
pushf
adc
xor
add
ljmp
cmp
push
jns
or
and
jne
add
pop
test
dec
jmp
and
mov
icebp
xchg
jb
scas
pushf
fdivp
xchg
test
arpl
add
fwait
jg
lock
cmc
shl
cs
dec
jg
jl
add
lods
dec
sahf
push
or
xlat
lret
in
in
cmpsb
repnz
pop
xchg
je
sbb
aas
fldt
mov
sbb
in
add
xor
jle
push
test
repz
push
cmp
jno
push
mov
clc
dec
ljmp
leave
xor
imul
pop
inc
add
pushf
rorb
pop
mov
push
xor
repz
mov
les
aad
leave
mov
inc
mov
test
sub
pushl
sub
sub
inc
add
clc
inc
jbe
and
stos
adc
jge
xchg
scas
insl
dec
inc
in
cltd
loop
mov
fnstcw
pusha
loope
daa
push
adc
jno
inc
ss
loopne
fs
test
shrb
and
adc
xchg
out
loopne
es
pop
fwait
sub
cli
sub
repz
mov
movsl
movsl
push
push
insb
mov
add
lret
imul
mov
sbb
mov
call
pop
arpl
xor
inc
mov
mov
dec
fsubr
leave
and
xor
shll
pop
or
outsl
popa
loop
and
loop
jp
xchg
inc
xchg
lock
pusha
sbb
push
mov
mov
pop
mov
clc
sbbl
push
dec
dec
sub
aad
sbbl
cli
stc
sub
inc
or
das
jp
roll
and
imul
outsl
mov
cmp
push
outsb
jo
loop
sub
dec
mov
mov
xor
ds
je
add
dec
pop
imul
hlt
scas
xor
cmpsb
dec
or
sbb
cmp
push
and
icebp
add
ljmp
push
mov
add
jbe
testl
add
jbe
cmp
inc
mov
js
rcrl
test
xchg
bound
xor
arpl
mov
cmpsl
sbb
jne
push
mov
mov
fldenv
mov
pop
xlat
inc
dec
sub
sahf
insl
imul
out
sub
dec
push
mov
cli
iret
cli
dec
xor
mov
xchg
adc
adcl
mov
pop
fstl
sub
mov
or
or
lods
movsl
sbb
dec
in
les
or
push
imul
xchg
popf
add
cmp
in
ljmp
add
add
arpl
inc
sub
lods
mov
xchg
pop
mov
sub
sahf
in
fildl
je
scas
cwtl
fs
xor
jp
into
mov
decl
mov
test
loop
push
mov
mull
xchg
xchg
push
cli
sbb
cltd
push
nop
push
pushf
or
mov
movsb
mov
lcall
cld
popf
mov
stos
xchg
sub
add
loop
cmp
push
pusha
lcall
jns
lret
ja
ss
outsb
aam
out
js
js
add
xchg
sub
mov
in
or
fcmove
jg
sbb
xchg
gs
push
div
sarl
mov
mov
ret
shlb
test
fidivrs
lock
lahf
cld
fisttps
adc
icebp
stos
push
iret
xchg
jnp
add
ret
or
push
mov
imull
adc
shll
aam
shlb
aam
ret
jge
push
or
nop
push
mov
ds
mov
pop
mov
sbb
shr
adc
into
pop
mov
and
hlt
das
push
push
jae
jb
pop
dec
push
testb
lds
outsl
add
fisttpll
inc
add
clc
mov
dec
inc
mov
xor
jns
inc
and
repnz
cmpsl
push
xchg
pop
xchg
cmc
sbb
mov
mov
les
int3
sbb
repnz
add
sbb
scas
cmp
or
or
hlt
jne
and
dec
mov
or
inc
test
outsl
fbld
mov
xchg
lahf
fnstsw
xchg
in
adc
and
pop
pop
loop
adc
int
dec
stc
sbb
cli
test
aad
inc
jg
dec
arpl
pop
xchg
js
xchg
bound
jae
sbb
out
cmp
fidivs
mov
outsb
rcrl
lods
dec
xchg
pop
xchg
outsl
push
cmp
or
push
xchg
mov
leave
or
leave
add
bound
cltd
mov
popf
sub
mov
xlat
dec
clc
movsl
lea
add
adc
dec
movsb
and
jge
jle
adc
jmp
adc
sub
sub
stos
pushf
pop
cmp
sub
insb
cmc
xchg
add
int
test
leave
sbb
jmp
xchg
inc
mov
cmpsb
jns
sub
ja
fsubrs
fistpl
lods
outsb
mov
cmpsl
fcomps
int
push
dec
mov
fwait
pusha
xchg
xor
xor
push
push
jle
mov
dec
xchg
imul
mov
stos
xor
cmpsb
into
xor
js
xchg
sub
icebp
adcl
mov
fildl
mov
jns
fiaddl
pusha
jmp
ret
in
push
and
in
ja
leave
fcoms
sbb
test
ret
es
scas
lret
ret
mov
and
jmp
mov
xchg
push
lock
inc
scas
insb
inc
bswap
fs
mov
lds
xchg
sub
xchg
imul
and
loope
xorl
fdivrp
enter
int3
bound
add
aad
packssdw
push
xchg
pop
xor
loop
mov
push
xchg
cwtl
or
add
sbb
push
sbb
xor
out
jge
in
dec
in
mov
and
negl
sbb
ljmp
lods
jno
mov
add
fidivrl
sub
ret
mov
jmp
lret
add
cltd
jnp
dec
jle
pop
mov
stos
adc
daa
xchg
push
push
cli
jo
lahf
mov
jmp
out
outsl
std
or
push
icebp
hlt
jecxz
lock
sbb
mov
adc
sbb
mov
stos
xchg
in
jg
addb
and
test
icebp
je
cmp
mov
rcr
ljmp
mov
insb
pop
and
scas
xlat
jmp
lret
or
je
out
sub
sbb
add
add
cwtl
pop
and
sti
jl
les
and
jp
mov
jmp
test
mov
add
xor
cmp
loope
mov
out
in
mov
movsb
push
cltd
adc
sub
or
arpl
rorb
mov
pusha
mov
stos
outsl
icebp
jnp
shll
call
ret
cmpsb
inc
push
mov
xchg
jns
sub
and
icebp
pop
or
cmpsb
data16
and
push
adc
inc
sub
fwait
cmp
rolb
inc
sbb
cs
arpl
clc
inc
pusha
push
push
inc
inc
jo
icebp
jmp
pop
jnp
jge
into
ljmp
and
xchg
in
mov
je
lret
xchg
jno
fstl
sbb
push
push
popf
loope
test
ja
or
jbe
adc
lods
lahf
ja
push
jns
add
sub
mov
neg
add
movsl
sarl
xor
leave
aad
sbb
repnz
lret
not
sahf
or
sub
orl
and
dec
mov
cmp
rcrw
pop
rcrb
outsl
loop
sahf
sbb
cld
gs
movsb
mov
test
xchg
inc
xchg
incb
or
jbe
push
and
push
out
ret
call
loope
arpl
repz
jmp
imul
es
mov
lea
dec
test
jo
adc
out
mov
xor
rorb
lahf
inc
push
sahf
cmp
xchg
mov
pusha
cli
cmp
xchg
ficoms
and
repz
mov
sbb
xor
cmp
movl
gs
pop
dec
jg
leave
fisttpll
inc
into
push
mov
mov
xchg
mov
outsl
arpl
jmp
mov
dec
mov
inc
ror
xchg
shl
mov
push
sbb
add
pushf
jg
push
imul
clc
sbb
mov
jg
aam
push
scas
inc
xlat
pop
jge,pt
out
cltd
push
push
daa
testb
and
in
cmp
fidivl
cmp
jg
adc
arpl
add
jmp
xchg
xor
fbld
cmpb
mov
ret
jns
fwait
das
test
repz
lret
sbbl
arpl
movl
aas
push
and
lahf
add
mov
sub
mov
push
dec
fs
jbe
pop
in
imul
xchg
inc
aam
xchg
stos
mov
and
mov
lea
fs
outsb
or
xchg
mov
or
lret
bound
es
add
arpl
js
in
int
xchg
mov
in
add
mov
mov
push
xchg
mov
inc
push
scas
sub
cli
nop
scas
or
pop
sbb
dec
push
std
xchg
sbb
or
leave
mov
cmpsb
sub
popa
add
repz
inc
dec
mov
push
imul
push
out
xchg
mov
jno
scas
nop
les
and
ss
jbe
xchg
adc
xchg
add
shrb
cmp
pop
sub
rorl
fimull
insl
dec
sub
and
mov
movsb
mov
xchg
mov
das
lcall
push
fs
mov
fisubs
icebp
dec
mov
jl
scas
xor
xor
sub
dec
mov
in
aas
rcr
or
push
les
rcll
ret
fldenv
cmpsb
or
cmpsb
gs
aad
mov
sbb
es
inc
xchg
fstpl
daa
fs
pop
xor
push
push
daa
xchg
adc
sti
addr16
jp
xchg
scas
adc
das
test
lock
xor
dec
mov
jb
sbb
jb
in
push
mov
rcrb
sbb
fldenv
xor
sub
mov
push
add
jae
test
cmp
mov
cmp
xor
fistpll
fistps
dec
dec
inc
and
mov
inc
in
or
repnz
aam
int
into
fdivrl
lcall
les
mov
orl
cmp
call
pop
or
add
and
cmc
mov
adc
movsb
loopne
int3
mov
mov
and
mov
inc
int3
fsubl
xchg
insb
stos
push
cmp
jne
cmp
jl
nop
add
scas
pop
adc
ss
mov
pop
xchg
cmpsb
inc
bound
cmpsl
pusha
mov
adc
and
aaa
shl
loopne
bswap
imul
ss
mov
fldenv
mov
push
sub
jge
ja
or
sahf
push
out
dec
xor
pusha
mov
in
ljmp
lahf
ja
push
test
push
out
inc
sub
mov
leave
cmc
jmp
icebp
pusha
and
fninit
mov
jmp
mov
pop
pop
inc
lret
je
sbb
imul
mov
or
and
xchg
lods
and
xor
jmp
jne
jecxz
sub
adc
mov
jl
ror
cmc
std
mov
mov
jmp
nop
lods
iret
cs
loop
jne
and
jle
cmp
xor
dec
push
popa
rcr
sub
bound
sub
fisttpl
frstpm(287
adcl
cmpl
cwtl
fs
or
aas
mov
dec
sub
mov
sbb
inc
aad
jp
push
cmp
push
fsubs
mov
inc
xlat
mov
cmpsl
cmpb
mov
inc
aas
jp
push
sti
adc
jecxz
ret
add
pushf
insl
mov
push
dec
add
ret
stos
mov
cld
push
lcall
in
cmp
jle
cli
xor
imul
sub
hlt
test
hlt
insl
sbb
ljmp
jbe
sbb
push
sarb
xor
pushf
popa
movsl
lret
dec
pop
or
add
and
or
out
aam
pop
pop
cmp
clc
sbb
pusha
inc
inc
in
int3
push
pop
mov
outsl
lcall
test
cmp
mov
or
jle
and
lahf
aaa
xor
mov
jbe
jne
icebp
stos
data16
xor
inc
shlb
push
and
cmpsl
cmp
out
cld
sub
xlat
test
pop
mov
xchg
mov
cmpb
xlat
sti
incl
ss
pop
in
imul
and
outsl
stos
mov
or
fdivl
ss
adc
je
das
outsb
xor
arpl
cmp
aas
xor
and
in
xchg
dec
inc
fldenv
orl
dec
sbb
loopne
idivl
inc
repz
push
add
jle
es
cmp
push
mov
push
or
in
or
jb
inc
std
orb
cs
add
mov
xchg
add
int3
or
cmp
divl
dec
mov
cwtl
leave
dec
fs
or
dec
xchg
mov
push
in
or
jl
lock
xlat
ret
cli
add
cltd
sbb
lock
aad
rcr
adc
add
xor
sub
addr16
jp
movsl
pushf
dec
out
xchg
inc
sub
neg
jp
mov
jb
incb
push
jp
mov
imul
aas
pop
jmp
gs
add
mov
in
jge
push
sbb
dec
rcrb
lock
push
test
shrl
bound
mov
push
pusha
ficompl
jle
insb
mov
popa
stos
js
lcall
cmp
lar
and
dec
push
jo
jecxz
clc
or
mov
mov
xchg
fnstenv
cmp
or
fmuls
or
outsl
in
ffreep
pushf
loop
adc
pop
mov
add
enter
das
xor
dec
stos
xchg
stc
pop
fsts
xor
pop
lret
fistl
aad
mov
cltd
push
and
clc
stos
cltd
mov
fwait
cmp
inc
push
cmpsb
pop
stc
xchg
or
imul
fsubl
mov
dec
insb
jp
mov
jnp
cmp
jg
mov
and
sub
fldenv
mov
leave
mov
add
sub
sbb
mov
adc
pop
ret
xor
xchg
mov
mov
fs
pop
dec
inc
push
mov
or
inc
jno
cmp
fisttpl
adc
iret
or
and
in
mov
sbb
movsl
push
in
inc
mov
je
dec
and
push
push
sahf
mov
scas
push
mov
out
mov
lahf
ret
xor
inc
sbb
pop
loope
push
data16
pop
push
xchg
jg
dec
outsl
repz
outsb
dec
inc
lods
insl
pop
imul
jle
xor
push
push
outsb
sti
push
mov
push
rcrb
mov
cmp
in
and
lahf
xchg
aas
mov
test
sbb
ljmp
dec
inc
dec
enter
adc
fxtract
push
dec
out
and
add
aas
and
rcrb
cltd
mov
fwait
loop
mov
xor
inc
cmpsl
pushf
adc
pushf
xor
and
lret
and
mov
add
pop
shll
rclb
sub
sub
and
andl
mov
sbbb
or
int3
adc
mov
pop
aas
nop
out
rcr
outsb
push
push
jg
fs
jb
push
xchg
or
fstp
hlt
mov
xchg
jbe
push
scas
repnz
test
leave
imulb
sahf
adc
jge
sbb
rcrb
mov
push
mov
call
or
inc
pop
inc
andb
ret
push
xchg
sti
insl
pop
mov
jo
xor
int3
mov
clc
mov
sbb
xor
push
jl
loop
sahf
lahf
repz
cmc
xchg
mov
push
hlt
push
ljmp
pop
fnstenv
mov
into
shll
sbb
loopne
shll
jecxz
movsl
sbb
jbe
push
xchg
push
std
fistps
or
loope
inc
cwtl
jp
mov
int
dec
int
ret
jno
test
inc
clc
lahf
sarl
das
and
imul
mov
ss
inc
sti
xchg
push
std
out
cli
push
test
mov
mov
mov
and
jb
jo
or
dec
xchg
stos
sub
sbb
mov
pop
cmpsl
cmp
pop
out
sarb
outsb
push
inc
and
cmp
aaa
aam
jo
ds
inc
lcall
popa
cmp
xchg
mov
push
out
or
mov
and
test
push
leave
sti
adcb
push
xchg
and
rcll
add
or
inc
aas
adc
xor
and
cmpsl
xor
cli
std
ss
pop
jbe
in
cli
gs
in
mov
ds
out
jp
jno
or
pusha
movsl
cmp
mov
cmp
fidivs
roll
mov
xlat
fwait
das
outsb
les
loopne
jmp
mov
sbb
popa
inc
std
jbe
das
std
push
fs
enter
dec
push
cmp
pop
adc
xchg
sahf
push
fs
and
mov
pop
xchg
mov
out
mov
pop
shr
mov
pcmpeqd
inc
sub
ret
push
js
dec
add
xchg
jbe
leave
loope
dec
ficoms
pop
or
aaa
xchg
mov
jmp
sbb
jp
lods
jle
lock
sub
addr16
dec
push
jmp
mov
xor
ret
xchg
jge
sub
xor
loopne
adc
jp
xchg
jecxz
repnz
xchg
sbb
hlt
addr16
repnz
ret
aaa
repnz
sub
adc
mov
cmp
rorb
pop
mov
movsl
pop
adc
mov
xchg
pushf
add
push
push
mov
outsb
jae
add
or
ss
fs
lods
int
xor
cltd
test
and
and
sbb
aaa
pop
sar
lea
xchg
add
loope
inc
and
or
inc
push
jge
pop
repz
ds
mov
sub
daa
iret
test
cmp
adc
xchg
or
jl
push
cmc
jbe
nop
sbb
mov
xchg
nop
cmp
adc
test
sahf
js
jbe
repz
mov
adc
js
or
test
mov
ficoms
es
or
hlt
out
lds
mov
aad
pop
mov
pop
arpl
or
sahf
ljmp
ja
add
jp
fmul
xchg
fidivs
repz
inc
out
js
push
fsubrs
rclb
inc
test
imul
pop
lea
sbbb
jb
cmc
iret
push
push
cmp
lret
and
push
pop
aam
sub
adcb
outsb
test
jae
in
dec
inc
movb
mov
out
les
fsubrl
add
leave
xchg
mov
lods
xchg
xchg
cltd
xorb
lahf
mov
out
pop
sbbb
sub
movb
jo
dec
xchg
stos
adc
repnz
xor
test
xchg
mov
mov
imul
out
cmp
inc
jle
pop
sub
xchg
out
outsb
icebp
rcrl
div
xchg
sti
inc
push
into
repz
sbb
popf
fbstp
cmp
jmp
dec
push
ds
add
loope
imul
mov
dec
sbb
sbb
xchg
pop
or
fisubs
push
inc
aam
mov
pushf
mov
test
add
adcl
ds
inc
je
inc
lahf
flds
jecxz
mov
cs
dec
push
std
shlb
popa
sub
pop
or
pop
subl
jmp
cmc
es
push
cwtl
cmp
out
dec
mov
icebp
adc
pop
sub
adc
cmc
mov
ffree
push
and
xchg
icebp
xor
mov
mov
push
pop
cld
xor
mov
sbb
or
push
insb
cltd
pusha
jo
sbb
sbb
pop
mov
fimull
push
ss
pop
mov
xor
and
sub
cmp
int3
mov
int
bound
jae
sub
scas
mov
dec
mov
push
scas
leave
sbb
jno
stos
add
or
pop
in
mov
mov
mov
pop
sub
jb
jle
push
addr16
aam
mul
fldl2e
sbb
adc
inc
pop
aas
movsb
sarl
out
mov
push
pop
xor
movsb
loopne
aaa
icebp
xchg
in
mov
cmp
ret
jge
test
pop
loopne
stos
inc
lahf
or
mov
arpl
in
xchg
xorb
inc
int3
rcll
cwtl
aam
jo
dec
les
loop
cli
iret
and
in
inc
xchg
pop
pop
imul
push
mov
jg
mov
or
adc
incb
pop
popf
outsb
dec
or
pop
aam
xchg
add
imul
adc
stos
adc
ljmp
nop
ret
cwtl
sub
jno
imul
out
fs
sti
dec
sub
data16
and
or
shrl
inc
cmp
imul
in
xor
call
dec
loopne
xor
cmp
mov
bound
movsl
pop
aaa
dec
scas
inc
xchg
mov
ja
fists
loope
and
out
setge
lahf
scas
push
bt
rol
dec
fildll
sub
stc
lods
push
cmp
iret
aad
jp
int
xlat
loope
popa
je
adc
sbb
fcomps
cltd
add
sbb
stos
jmp
mov
arpl
xchg
inc
push
xor
mov
cmp
iret
cmpsb
push
popa
mov
mov
sbbb
mov
in
sub
jb
loop
inc
xchg
pop
cmc
add
inc
pop
call
dec
mov
mov
cmp
sub
and
aaa
pop
pusha
cmp
inc
fwait
mov
mov
adc
push
xor
mov
lods
cmpsb
bound
daa
insl
shlb
mov
sub
pop
ret
in
inc
pop
mov
mov
in
lea
cmc
mov
sti
add
pop
jnp
ds
sub
scas
jnp
cmp
es
mov
xor
stos
int3
bound
or
sti
and
xor
stos
sbb
stos
push
test
icebp
popa
inc
add
mov
mov
ret
or
inc
dec
and
mov
or
mov
sbb
das
les
pop
jbe
and
xor
and
cmp
adc
lods
jns
jnp
in
adc
or
cmp
into
adcb
jo
rcrb
fdivr
ljmp
sahf
outsb
cmc
pop
add
cmp
fs
mov
sahf
and
pusha
out
add
sub
dec
popa
cmp
adc
adc
es
enter
dec
sub
dec
out
scas
loope
sbb
xchg
incl
pop
out
es
push
cmp
bound
jle
iret
dec
xor
movsl
sbb
push
pop
sub
pop
mov
dec
or
ljmp
inc
int
pop
cli
movsl
mov
mov
jmp
mov
cmp
mov
add
push
push
fwait
dec
test
add
daa
lock
sub
mov
ret
push
lret
mull
dec
cltd
cmpsb
adc
lock
cmp
dec
xor
adc
sub
xchg
jb
cmpsl
int3
aas
mov
repnz
add
xor
pop
outsb
lock
xchg
sbb
std
mov
dec
and
jg
mov
push
and
inc
sub
out
ret
sti
and
xor
mov
pop
pop
sub
enter
fdivs
dec
das
jbe
scas
sub
adc
xor
iret
cmpsb
adc
leave
jp
nop
push
sti
or
test
and
sub
mov
add
dec
mov
int
adc
ret
sbb
add
jb
repz
sarb
mov
mov
and
das
pop
mov
sbb
leave
sbb
dec
aaa
jae
push
push
pop
sbb
dec
mov
repz
ds
xchg
sub
jecxz
sti
lods
push
lock
imul
sub
cmp
enter
xchg
push
jl
sbb
pushl
xor
rorb
cmp
xor
adc
jb
cmp
pop
cs
add
into
sbb
ja
cwtl
mov
push
or
lods
adc
or
sub
ja
imul
inc
and
cmpl
shll
sar
nop
les
xchg
mov
adc
out
pushf
div
push
xor
add
jmp
sub
adc
adc
inc
filds
xorl
ret
mov
das
nop
add
sub
fdiv
jno
scas
xor
stos
add
adc
aaa
mov
or
fwait
jg
retw
lret
sbb
dec
adc
ret
int3
xor
scas
popf
stc
xor
ficomps
mov
sbb
shlb
mov
out
in
pop
jl
out
loop
jns
cltd
push
mov
lahf
cs
push
jg
sub
lock
jecxz
rorl
mov
test
xchg
and
mov
cmp
shl
cmp
iret
mov
repnz
negb
or
pop
pop
ljmp
adc
out
gs
iret
ret
daa
pop
or
lea
sbb
notl
mov
sbb
inc
pop
iret
add
and
in
ret
rcll
xor
push
shlb
add
xlat
jmp
out
xor
stos
dec
arpl
mov
adc
es
pop
jecxz
jg
and
mov
push
mov
add
call
rcrb
jnp
push
sahf
cmp
mov
push
sub
lods
cmpl
out
add
adc
outsb
or
xchg
hlt
hlt
repz
sbb
ret
mov
iret
out
test
daa
inc
jmp
fwait
cmp
mov
test
fsts
add
pop
mov
pop
in
cmp
cmp
stc
or
notl
adc
xor
xchg
mov
out
xlat
mov
sub
jge
das
add
jle
popa
pushl
scas
insl
sbb
pop
inc
push
ljmp
jae
sbb
inc
sbbb
lods
std
cmp
fs
mov
fnstenv
call
clc
insb
adc
add
ljmp
arpl
and
dec
inc
call
in
pop
xchg
or
pop
mov
jmp
stos
in
arpl
ss
and
cmpl
mov
incl
cmp
mov
cmp
loopne
sub
mov
cltd
jo
repz
sub
xor
push
out
insl
adc
lret
fdivrs
xchg
outsb
loopne
repz
lret
xchg
pop
mov
lcall
pop
mov
das
add
test
mov
lock
inc
cmc
daa
or
xchg
xchg
movsl
sbb
push
cmp
int3
jne
add
jns
leave
pop
loope
and
or
jge
jnp
mov
and
dec
cmp
lcall
gs
dec
outsl
lcall
fnsave
adc
aas
dec
es
xchg
push
add
iret
inc
cmp
xchg
repz
push
pop
adc
mov
js
and
outsb
std
xor
mov
mov
mov
fdivrs
aaa
int3
mov
xchg
orb
stos
mov
xchg
xor
cli
jb
repz
pop
icebp
lods
sub
push
mov
imul
add
adc
fcmovne
inc
mov
lahf
and
push
cmpsl
pop
adc
cmp
or
repnz
push
popf
mov
int
sti
jne
iret
mov
push
out
lahf
lcall
insb
xor
stos
mov
dec
stos
loope
gs
and
push
lock
xchg
adc
out
dec
stos
jnp
arpl
outsb
sbb
call
lods
mov
cmp
andb
lcallw
movb
jmp
xlat
pop
fdivrs
int3
outsl
push
cld
jnp
sbb
sbb
mov
dec
repnz
out
mov
xor
lds
aaa
lcall
sti
inc
mov
mov
stc
cmp
in
jg
add
mov
xchg
push
xor
or
das
aas
cwtl
jp
mov
cmpsb
push
xchg
mov
jmp
mov
fmuls
insl
xor
flds
aad
inc
push
jl
enter
popa
loope
aaa
mov
scas
shll
sbb
push
leave
std
jbe
lds
cs
int3
add
leave
and
int3
leave
jbe
dec
ds
xchg
and
mov
cmpsl
xor
jne
pop
xor
cmpsl
mov
aas
mov
loopne
xchg
xchg
mov
push
mov
sbb
fsubrs
or
or
lds
stc
sbb
jp
or
insb
cmpsb
cltd
sub
hlt
dec
cltd
fdivp
in
aam
mov
push
and
sub
mov
ss
mov
mov
cmc
jae
cmp
push
lea
jecxz
sahf
or
aaa
dec
pop
jmp
test
jno
mov
mov
xor
jl
add
ss
es
mov
push
int3
popa
xchg
fadds
add
jo
adc
cmpsl
rorb
jmp
cmpb
jo
sarb
adc
fs
loopne
push
jle
sahf
adcb
test
pop
add
addr16
cmp
mov
mov
mov
dec
cmp
clc
inc
in
lea
push
das
dec
scas
movsl
sub
fisubrl
mov
lret
dec
adc
lock
mov
dec
push
and
popf
dec
aad
stos
fdivp
pop
inc
jae
cmp
adc
mov
adc
xor
dec
pop
push
into
lods
std
scas
cld
mov
rcll
inc
push
cltd
adc
psrld
bt
dec
mov
push
ffree
cltd
nop
cmp
test
in
imulb
ret
mov
loop
clc
and
mov
xor
mov
push
fldt
sbb
movsb
les
cmp
mov
push
cmp
sbb
push
push
orl
dec
fmul
aas
sbb
stos
stc
not
jb
and
mov
inc
scas
fcompl
push
push
sbb
or
mov
or
scas
outsb
mov
jge
adc
mov
mov
sti
jbe
adc
cld
jg
subb
ljmp
add
pop
mov
pop
adc
cmp
fstps
mov
in
xor
rolb
mov
adc
mov
daa
bnd
test
and
sbb
loope
rcrl
loopne
pop
out
mov
mov
xor
adc
sbb
aas
cmp
inc
in
cld
mov
rolb
cmp
sub
dec
adc
xor
dec
fabs
call
cmp
sbb
sbb
or
popf
push
cmp
and
sahf
inc
inc
cmp
sub
je
mov
data16
inc
push
leave
xchg
inc
xlat
pop
push
lret
jno
pop
negb
fmull
cmp
add
cmpsl
mov
nop
dec
adc
lods
pop
inc
and
jge
mov
int3
jle
cmp
push
mov
cs
idivl
sbbl
inc
push
sbb
mov
movsb
dec
or
movsb
nop
outsb
aam
aaa
sub
ret
mov
dec
test
rorb
jmpw
lods
in
lret
mov
lods
jnp
jb
sbb
imul
hlt
cmp
pop
jo
push
roll
xchg
iret
mov
imul
incl
pusha
fwait
sub
pop
jb
ret
les
popf
stos
xchg
sub
scas
mov
stos
je
sub
stos
bound
pop
aaa
pop
lgs
dec
jge
insl
test
or
je
pop
inc
and
add
mov
das
jne
adcb
adc
pop
xchg
add
in
or
cmp
jo
adc
sbb
ds
cmpsb
mov
es
sbb
divb
mov
adc
in
fcomps
leave
sarl
xor
std
imul
xorb
inc
dec
adc
nop
fwait
cmp
lret
xchg
jmp
xchg
imull
cs
mov
out
or
xchg
mov
adc
aas
pop
or
push
xchg
cmp
mov
xchg
xor
mov
in
dec
add
inc
rclb
ss
sahf
iret
cmpsl
jmp
xchg
std
popa
jge
das
jbe
xchg
mov
xor
lds
jmp
imul
sub
out
sbb
xor
inc
roll
js
xrelease
pop
pop
push
test
cmpps
fistl
cmp
push
sbb
mov
or
jae
mov
pop
pushl
mov
xchg
and
adc
mov
xchg
mov
cltd
frstor
xor
xchg
inc
mov
adc
dec
add
fwait
jl
inc
sub
mov
push
inc
inc
pop
inc
adc
loop
pusha
fdivl
mov
sbb
xlat
pushf
xlat
push
leave
xor
or
lret
out
ljmp
dec
cmp
cwtl
jecxz
out
mov
jbe
in
iret
sub
sbb
shlb
test
cmp
jae
mov
mov
dec
inc
notl
cltd
and
int3
cmp
sub
push
outsl
ret
dec
lcall
repz
mov
lock
inc
aas
cmp
xor
insl
repz
in
dec
repnz
mov
xchg
jnp
add
jnp
enter
ror
add
mov
hlt
cld
inc
inc
hlt
xchg
sbb
or
lcall
pop
cmc
or
cltd
or
fwait
dec
icebp
pop
xor
jl
inc
sbb
adc
out
push
aam
cld
pop
inc
cmpsb
fmuls
test
mov
imul
xor
and
ds
mov
imul
push
fidivs
in
dec
mov
mov
and
jno
in
mov
pop
std
push
xor
lods
xchg
mov
imul
jmp
pop
push
dec
jl
imul
jge
sbb
mov
mov
test
pop
pushf
lret
push
jl
inc
in
inc
pop
jmp
jb
cmp
cmp
lret
pop
das
mov
gs
xchg
pop
popa
mov
es
add
mov
cmpsl
sub
fsts
jmp
lds
ja
call
mov
sub
push
ret
aam
jg
or
xchg
into
dec
popa
lds
mov
sub
inc
add
sub
call
mov
mov
daa
inc
cltd
inc
mov
movsl
inc
inc
or
adc
cwtl
inc
daa
mov
out
inc
insb
std
ss
clts
rcl
gs
movsl
cmp
lcall
jb
inc
aaa
xorb
adc
arpl
movsb
mov
lahf
jno
mov
sub
xchg
cmp
lods
fstl
sub
cld
rcl
cmpl
int
jne
mov
inc
xor
lds
and
and
in
fwait
mov
inc
or
push
subb
sbb
add
lret
inc
jmp
dec
fs
mov
pop
out
aas
pop
ds
rcrl
enter
in
lret
insb
dec
cmp
addr16
out
xchg
xchg
lcall
int3
push
inc
sar
sub
sbb
push
bswap
dec
jnp
xor
cwtl
shll
mov
inc
mov
pop
mov
lods
clc
into
sub
jb
push
repz
in
mov
cmpsl
in
xor
inc
in
adc
inc
movsb
push
sub
shlb
pop
testl
out
fldenv
inc
loope
fdivrs
and
shrl
aas
xchg
inc
xlat
iret
mov
pop
xor
ror
ret
popa
repnz
mov
aas
loope
notl
leave
test
adc
mov
movsl
xchg
jnp
sbb
imul
insl
sub
push
stc
fdivs
loope
jno
cs
cmpsb
lret
inc
pop
or
fs
test
push
inc
je
scas
lcall
sti
adc
xlat
jmp
mov
mov
out
add
xchg
rcrl
sbb
xorb
xor
mov
cmc
xchg
or
or
jecxz
sti
repz
push
into
cmp
jns
add
xchg
shll
dec
push
inc
mov
fwait
or
popa
shll
cmpsl
sahf
cmp
mov
mov
popf
xchg
popl
sbb
or
das
cmp
inc
push
adc
popa
adc
fldl2t
daa
loop
pop
leave
pop
jmp
ret
imul
jns
jno
xor
cmp
pop
and
sbb
adc
psrad
and
ret
jns
or
mov
and
mov
sbb
clc
andb
aam
lret
fidivrs
mov
jg
andl
jnp
xor
cmc
cltd
cmp
push
jae
push
mov
adc
addb
inc
pop
lods
push
adc
orb
mov
sbb
aaa
fldl2t
stos
push
add
out
cmc
scas
cmpsb
stos
xchg
idivw
jecxz
inc
cltd
xor
mov
sahf
aad
cmp
mov
mov
mov
ficoms
fadds
out
bound
notb
inc
pop
add
outsl
aad
test
inc
xchg
call
out
cmp
push
outsb
or
mov
or
adc
push
lock
sbb
mov
inc
push
leave
leave
in
arpl
je
lcall
in
jmp
faddp
imul
sbb
mov
call
and
sbb
lret
mov
cld
xor
add
cwtl
testb
sbb
imul
fsubs
test
jmp
addr16
and
stos
xchg
jo
or
call
aaa
and
sbb
jo
fs
adc
mov
dec
fs
adc
mov
data16
inc
stos
jae
xchg
mov
inc
dec
shr
jne
fs
mov
jg
dec
out
fstps
jno
mov
pusha
jle
arpl
fimull
scas
sub
imul
lret
call
pusha
insl
pop
or
nop
xchg
nop
rorl
xor
or
and
jmp
mov
test
add
add
sti
jbe
cld
nop
sub
xchg
dec
sub
and
add
mov
popf
mov
mov
outsl
sub
pop
sbb
lods
ret
sti
popa
sbb
sarl
aam
pusha
lcall
sub
in
xchg
mov
in
xchg
scas
xchg
in
popa
push
dec
pop
aam
sar
cmp
add
sbb
test
popf
ret
xor
pop
inc
mov
jns
cmpsb
mov
nop
incb
sub
scas
inc
xchg
jg
and
cmp
sbb
add
jle
mov
fs
pop
adc
and
dec
mov
adc
sbb
cmp
ret
inc
adc
lock
xor
sbb
fdivrl
cltd
dec
push
loop
outsb
add
mov
inc
outsb
pushf
jo
jne
xchg
loopne
cmp
pop
movsb
xchg
dec
sub
xor
popf
imul
lret
mov
out
or
repz
popa
or
cs
sti
pop
fisubl
jecxz
pop
mov
jae
loopne
arpl
pop
push
pop
repz
orl
daa
sti
push
sar
jne
je
mov
in
outsb
sti
push
cmp
pop
pop
pusha
and
inc
into
cmp
adc
jno
pop
lods
xchg
add
push
jg
pop
mov
pop
inc
enter
push
fs
jne
xchg
fisubl
sbb
pop
push
enter
sub
mov
pop
shlb
movb
lret
and
mov
in
pop
pop
mov
adc
loopne
pop
rorl
mov
aas
aas
sbb
fwait
push
pop
inc
sbb
jb
xchg
cmp
das
pushf
mov
mov
sub
add
cltd
lds
jmp
data16
mov
test
mov
out
in
shll
and
pop
loop
cmp
leave
jnp
pusha
mov
jns
popa
leave
pop
push
sarl
pusha
and
in
or
stos
jbe
imul
fidivrs
imul
ss
fistps
cmp
out
sar
int3
sbb
pop
sti
adc
mov
pop
xchg
sbb
xchg
or
jecxz
lds
daa
out
mov
fisubrs
inc
pusha
aas
mov
mov
jnp
aam
outsb
and
sahf
lcall
mov
setne
mov
cmc
sub
mov
cmp
lcall
jno
xchg
ret
mov
int
jo
sub
sbb
das
xlat
add
mov
fistpl
fld
insb
push
pop
inc
cld
pop
xor
js
cmp
inc
cmp
mov
xchg
shr
dec
and
les
enter
mov
pusha
sub
dec
inc
pushl
jo
arpl
cmpsb
cmp
jecxz
hlt
push
inc
xor
cli
and
mov
push
mov
jns
pop
push
jo
fsubrl
mov
fmull
mov
cmp
scas
out
sub
inc
xor
repz
je
push
push
sarb
pop
jp
test
pop
mov
js
mov
jo
pop
cli
xor
jne
imul
leave
test
ljmp
pop
mov
or
mov
nop
mov
pop
jno
shrb
xchg
mov
mov
lods
adc
out
xchg
cmp
cltd
jg,pt
ljmp
bound
imul
xchg
fldt
ds
and
sbb
push
jns
sbb
icebp
and
jmp
incb
push
shlb
shr
mov
mov
mov
int
push
jecxz
stos
shl
fisubrs
scas
gs
adc
iret
push
and
leave
sub
cld
repz
stos
leave
jae
movsb
test
jl
mov
jp
ss
aad
sbb
mov
push
lahf
call
sub
cld
fdivrs
jmp
jb
fldenv
loop
out
push
push
and
xchg
sti
mov
inc
repnz
pop
int3
int3
mov
xchg
dec
int
push
mov
add
dec
test
jne
dec
pop
mov
adc
das
push
push
sbb
and
inc
inc
adc
jmp
or
roll
cmpsl
test
orb
shlb
stos
mov
pop
divl
cmp
xor
std
push
cltd
add
push
mov
xchg
lret
mov
repz
fninit
pop
mov
pop
in
ds
mov
addr16
push
data16
popl
xor
xchg
cmp
into
mov
mov
lock
and
loop
xchg
sub
mov
mull
int
jecxz
loope
xchg
jl
pop
or
pusha
mov
push
loope
imul
sahf
hlt
push
cmp
xchg
sbb
mov
or
test
in
jne
stos
xlat
jae
jecxz
xor
fidivl
pop
dec
lahf
scas
sbb
cmp
mov
xchg
add
outsl
mov
push
lock
jbe
sbb
jns
loopne
adc
cmpsl
mov
popa
insb
les
add
mov
ds
in
push
daa
inc
add
push
push
shll
inc
aas
jle
inc
jnp
popf
das
mov
popl
cmpl
mov
popa
push
push
test
add
pop
pop
popf
mov
and
sub
fsubl
fisubrl
test
sbb
cmp
test
or
les
jg
scas
popf
js
jl
test
into
mov
insb
push
cmp
fcompl
add
xor
xchg
pop
lock
pushf
test
lcall
frstor
shlb
inc
push
mov
push
inc
pop
sti
gs
jecxz
or
inc
sub
push
in
cmpsb
xor
add
mov
mov
dec
jne
decb
jbe
arpl
mov
push
mov
mov
es
xor
jg
mov
mov
dec
nop
and
dec
js
pusha
out
sub
js
mov
jae
push
mov
fcmovb
xor
push
clc
adc
fiadds
fldcw
sbb
scas
jb
loopne
or
pop
adc
nop
inc
sar
mov
xor
lahf
mov
push
test
sbb
adc
push
pop
scas
divb
and
hlt
jl
lods
or
imul
mov
rorb
ret
or
jge
xchg
xchg
aas
xchg
mov
fmulp
call
jmp
inc
mov
fs
dec
mov
scas
aam
push
dec
and
mov
mov
or
or
push
add
inc
loopne
pop
fbld
lahf
popa
fcmovnbe
or
xchg
sbb
fildll
sahf
daa
add
inc
jo
out
xchg
sub
push
jb
call
and
and
sub
jb
mov
mov
imul
lret
call
in
inc
into
sti
mov
xchg
jns
jge
xchg
aad
add
mov
pop
sub
inc
inc
imul
hlt
notb
xchg
mov
jmp
xchg
popf
scas
jecxz
xchg
sub
aas
xchg
addr16
cmp
sahf
fsub
lahf
and
loope
dec
cmp
mov
sbb
xchg
jnp
xor
fsubrl
rclb
xor
mov
out
clc
lock
xor
nop
fistpl
jle
sub
sbb
cmc
mov
repz
and
cmp
das
scas
dec
mov
outsb
iret
inc
xchg
mov
hlt
pop
lcall
dec
std
dec
pop
roll
shll
inc
fsub
aad
repnz
fwait
jp
imul
xchg
and
push
mov
sub
test
mov
lea
ljmp
jbe
mov
jae
adc
cmc
adc
fsts
out
test
dec
adc
das
rcrl
pop
ficomps
movsb
repz
inc
scas
add
mov
mov
and
das
push
inc
pop
div
mov
mov
into
mov
mov
int3
notb
dec
xor
sarl
push
xlat
mov
dec
outsb
xchg
xchg
xor
xor
cwtl
and
sbb
enter
out
lock
or
and
mov
nop
std
push
dec
lods
mov
out
push
jl
jnp
std
div
xchg
repz
les
cmp
mov
jge
sbb
dec
mov
jg
jno
xor
mov
xor
inc
ret
mov
sbb
mov
mov
fildll
fimuls
jae
insb
and
in
std
jns
dec
test
pop
outsl
js
fs
rcr
jg
pop
or
sbb
and
dec
xchg
mov
lcall
addr16
xchg
dec
dec
jbe
lret
mov
jge
jl
or
stos
ret
fldln2
mov
push
jne
fildl
mov
test
sti
imul
out
push
lcall
fstl
cmp
into
jo
push
jae
mov
and
xchg
mov
mov
adc
inc
cmp
adc
sub
fcompl
inc
push
icebp
dec
inc
inc
xchg
xchg
adc
stos
mov
pop
push
das
shlb
cmpsb
mov
test
cmp
or
push
fwait
adc
flds
add
sub
sub
inc
push
jg
sub
pusha
mov
mov
push
lods
mov
jbe
std
aad
fmull
data16
jl
int3
fstpt
hlt
es
clc
out
pop
andl
sbb
clc
xchg
jbe
xlat
jge,pn
inc
inc
mov
ret
or
std
popa
add
sbb
pop
or
into
loope
xor
pop
cmp
jle
sub
dec
push
dec
or
cmp
imul
lret
daa
mov
push
daa
std
in
insl
out
pop
jl
sbb
xor
shl
sbb
mov
mov
arpl
insl
push
cmp
adc
dec
and
ficoms
daa
jo
lods
das
out
jge
mov
jg
adc
mov
mov
mov
mov
mov
cmp
mov
rcrl
stc
ja
addr16
mulb
and
push
mov
test
xchg
lock
andl
dec
and
sbb
sub
jle
mov
shll
cmpsl
jg
inc
jl
mov
mov
mov
shl
mov
aas
sahf
mov
cs
xlat
addr16
inc
jl
bound
and
mov
repz
fcmovb
mov
push
jge
dec
pop
cmpsl
sbb
cmp
pop
gs
lock
add
push
jo
ss
push
jne
test
xor
stos
jne
cmc
cwtl
mov
push
outsb
inc
sbb
xor
cmp
mov
xor
mov
mov
outsb
mov
sbb
rclb
cmpsb
lret
mov
adc
push
jp
popa
push
inc
mov
scas
mov
in
xlat
lret
xor
fsubl
mov
add
sub
dec
pushf
dec
dec
ficoml
pusha
in
xchg
mov
fsubrp
add
es
lds
stc
cmp
ds
ss
test
xchg
push
adc
repz
mov
xor
add
inc
test
clc
jns
mov
fldenv
mov
or
fidivl
bound
imul
pop
inc
nop
lcall
lret
aas
fwait
mov
mov
pop
lcall
fidivl
xor
push
push
inc
xchg
mov
dec
and
clc
andl
push
dec
and
addr16
xchg
test
and
jae
cld
aam
inc
rorb
subl
mov
cli
fdivr
mov
in
leave
mov
jnp
xchg
and
sbb
mov
out
stos
pop
and
or
dec
scas
icebp
shrl
jl
adc
and
aad
ss
jo
xchg
or
adc
test
mov
lret
or
in
or
xchg
xchg
aad
dec
imul
and
push
cltd
xor
adc
inc
outsb
mov
rorl
inc
movsl
test
popa
and
add
push
sub
inc
xorb
mov
pop
sti
add
pop
int
pushf
push
lahf
mov
lock
add
jmp
inc
xchg
jmp
ds
pop
daa
inc
and
mov
push
jge
push
mov
jmp
pusha
and
out
lods
cmp
pop
jne
int3
mov
sub
mov
fdivrs
int3
mov
bound
add
fsubrl
push
andb
xchg
roll
in
cmp
or
pop
mov
rorb
mov
jno
fldl
xorb
mov
sbb
mov
jno
fsubrl
mov
out
lock
testl
jl
jno
test
mov
lea
cwtl
or
jnp
in
cltd
adc
divl
es
sub
add
mov
jecxz
data16
cmp
mov
aam
dec
scas
push
push
mov
outsb
bound
pop
test
pusha
or
addr16
or
pop
push
jnp
and
and
insb
stos
mov
dec
add
or
sbb
jl
cmp
mov
out
fstpt
inc
jnp
outsb
jnp
dec
aas
jg
lds
das
je
adc
mov
sbb
clc
loope
cld
push
fs
shlw
pop
inc
mov
push
es
fwait
nop
xchg
sub
sub
inc
mov
pusha
mov
push
pop
push
into
push
pop
adc
dec
outsl
sub
enter
dec
push
cmp
shll
call
leave
adc
popa
inc
xchg
hlt
mov
fnstenv
inc
into
addr16
jmp
cmp
insb
sbb
push
cmp
mov
add
bound
adc
jg
ret
outsb
es
loope
cmc
int
out
push
test
ja
inc
loopne
jle
and
inc
in
out
and
sub
push
cmpsl
ja
xchg
jae
mov
shrb
inc
loopne
jg
push
orb
movsl
sbb
add
or
jbe
imul
or
jp
mov
data16
lock
mov
mov
scas
icebp
pop
lcall
ret
push
jns
repnz
js
dec
sbb
popa
mov
hlt
push
inc
mov
pop
jle
mov
lret
add
stos
cmpsb
call
lcall
sub
mov
sub
or
mov
pop
mov
xchg
and
mov
sub
mov
mov
ja
xchg
inc
shlb
jle
inc
mov
pop
dec
ficompl
into
fs
out
rorl
fisttpl
pop
xchg
es
insb
aaa
pusha
outsl
and
mov
pop
xlat
push
loop
int3
pop
cmc
sbb
and
js
mov
and
mov
mov
mov
cmpsb
pusha
jl
sub
and
mov
les
push
jb
dec
push
andl
call
jg
inc
xchg
xor
pop
lods
jns
je
sbb
ss
and
inc
pop
mov
ret
cmp
pop
bound
call
pop
repz
and
fimull
inc
cmpsb
sub
out
stc
xchg
or
mov
and
push
push
jle
int3
cmp
test
cmpsl
xchg
jl
mov
push
mov
inc
mov
add
push
cmc
xor
jge
add
jae
mov
pmaddwd
jbe
and
dec
inc
push
lods
leave
jae
push
dec
adc
stc
jmp
jnp
adc
sub
test
mov
stos
push
test
pop
lods
das
lods
fcomps
in
stos
jle
mov
cmpsb
lret
leave
mov
movsl
shrb
push
cmp
push
jno
jae
sbb
add
push
mov
test
in
inc
cld
push
mov
fs
cmp
adc
dec
or
pop
inc
xchg
pushl
mov
mov
push
call
push
and
cmc
mov
int3
bound
test
pop
cmpsl
xchg
test
lds
mov
jbe
adc
negl
mov
stc
js
cmp
push
mov
xlat
mov
outsl
xorb
fistps
push
test
lret
pop
test
loope
jne
mov
testl
out
insl
jl
jnp
pop
jne
mov
add
pop
shlb
mov
xchg
sbb
adc
push
mov
jo
repnz
mov
jnp
mov
inc
sub
mov
rcll
cmp
mov
cmpb
lret
jno
ret
or
jnp
mov
jnp
mov
or
or
ret
jg
arpl
sbb
aaa
xchg
scas
bswap
mov
ljmp
lock
out
mov
pusha
mov
xor
popf
jmp
mov
orl
pop
inc
test
popl
test
hlt
cwtl
enter
pop
add
push
fistpl
in
pop
out
inc
ret
les
sbb
stos
aas
or
cmp
push
sub
mov
faddl
lahf
ret
push
dec
xor
cwtl
rolb
push
mov
mov
lret
sti
sub
adc
adc
cli
fistpl
inc
jl
stos
dec
xor
int
loop
nop
push
dec
mov
mov
in
iret
lret
jne
je
loope
cmp
dec
inc
pop
in
pop
aaa
stos
push
dec
jmp
sub
xchg
subl
inc
pop
int3
dec
mov
adc
jo
out
sub
cmp
rcll
pusha
mov
xchg
mov
jbe
adc
pop
rcrb
loopne
add
mov
xor
aad
mov
scas
sub
jnp
push
mov
pop
push
stos
lea
pop
pop
jne
mov
pop
loopne
shr
pop
std
fstps
and
aad
je
loopne
cmp
shlb
lock
pop
loop
jmp
or
add
out
arpl
mov
lcall
cmp
xor
and
xchg
pop
or
pop
shrd
dec
xchg
xor
pop
push
sub
dec
js
inc
sbb
pop
mov
dec
mov
mov
mov
mov
mov
inc
jecxz
insb
rcrl
dec
out
hlt
adc
ret
in
xor
and
mov
mov
fiaddl
push
xor
stos
inc
pop
fwait
ret
addb
adc
mov
lods
sahf
jo
in
stos
lahf
mov
rolb
dec
sarb
dec
xor
cmc
mov
xchg
ja
in
jecxz
mov
iret
or
in
and
add
sub
in
out
mov
lret
adc
aas
and
xor
xor
stc
out
stos
add
pop
cmp
loop
ja
cmp
mov
push
jge
int3
dec
and
xchg
xlat
hlt
imul
sbb
push
sbb
and
sbb
mov
cwtl
and
pop
sub
mov
push
sbb
ret
push
mov
roll
lahf
mov
sbb
pop
pop
loop
in
fiaddl
test
xor
sahf
add
jae
movsb
jne
push
pushl
inc
push
and
lcall
test
xchg
push
arpl
pop
add
gs
mov
push
shrb
jecxz
push
sti
pop
mov
pop
fcmovnb
adc
jge
cmpsb
daa
mov
adc
out
std
inc
adc
dec
std
repz
fstpt
jo
cmpsb
aas
inc
mov
in
ja
mov
dec
cmp
jecxz
push
jmp
add
and
in
lock
sti
mov
push
mov
and
or
dec
mov
scas
mov
es
fs
aas
loope
pop
movsl
ret
call
lea
lret
jl
xchg
fadds
dec
sub
stc
out
mov
popa
dec
das
xor
adc
js
mov
in
fstpt
addb
push
push
imul
adc
inc
das
cmp
pop
arpl
mov
not
test
push
cmpsb
mov
inc
call
leave
das
sbbb
mov
or
daa
inc
jb
and
out
push
adcl
pop
sti
aas
jb
fimuls
and
and
sarb
jle
mov
mov
bound
xchg
pop
hlt
xchg
divb
int3
clc
stos
fimuls
inc
or
pop
inc
dec
popf
jo
adc
push
or
les
xchg
int
inc
xor
imul
push
jae
or
push
cs
cmp
nop
jo
daa
ror
xchg
jnp
jb
mov
out
stos
adc
add
add
jp
mov
adc
out
xor
sbb
sbb
fimuls
lds
test
in
inc
outsb
in
push
and
and
movsl
outsb
mov
nop
inc
out
aas
jmp
imul
out
pop
rcl
or
push
sbb
push
jns
ficoml
xchg
dec
xor
mov
jecxz
scas
jl
jg
in
push
daa
ljmp
inc
popa
into
adc
gs
push
jno
xor
sub
stos
loope
sbb
pop
das
or
xor
fdivr
sub
rcrb
loop
add
add
aaa
xorb
mov
test
cmc
xor
insb
pop
mov
mov
xor
sbb
in
add
push
js
out
das
scas
addl
dec
mov
xlat
je
or
adc
and
mov
lret
fistpll
test
std
into
out
mov
adc
aad
xchg
push
xchg
ja
and
or
xchg
xor
dec
dec
dec
jns
mov
inc
cwtl
dec
notl
xchg
divb
dec
sbbl
loopne
jnp
cmpsl
xchg
loop
cmc
lret
addl
pop
repz
call
or
dec
aas
lock
cli
std
push
push
sub
and
popa
cmp
dec
jg
jp
push
and
fcoms
lds
jns
imulb
leave
cld
pop
ljmp
sbb
popf
stc
outsb
mov
pop
das
mov
dec
inc
mov
and
sub
and
movsl
xor
shlb
or
fdivrs
mov
push
aad
clc
dec
mov
daa
adc
aas
mov
sahf
repnz
das
cmp
in
adc
adc
cld
jl
mov
pop
fadds
leave
rorl
sti
out
add
iret
inc
repz
nop
and
lret
jne
lods
js
lret
dec
jbe
jnp
mov
push
jb
xor
xor
mov
imull
ret
inc
in
daa
out
push
lods
cli
pop
jl
js
sahf
pop
out
add
mov
repz
mov
mov
jl
cmp
add
jb
push
sahf
fidivrs
jb
cmp
popf
mov
jge
test
loope
inc
mov
xchg
xor
xchg
push
adc
xor
or
mov
movsb
leave
or
and
sbb
jle
jle
add
or
test
aam
mov
cli
lahf
fbstp
out
js
xchg
jbe
sub
dec
clc
out
movsl
adc
adc
ja
insb
jb
inc
adc
and
mov
mov
jl
ss
gs
ss
sarb
cmp
jb
lret
sbb
mov
sahf
or
callw
test
fcomps
cmpsb
in
enter
and
mov
lds
or
in
pusha
fyl2x
sub
push
mov
sti
xchg
inc
xchg
push
fwait
or
lods
cwtl
sbb
nop
dec
mov
popf
adc
shrb
cmp
sub
call
dec
push
notl
les
stos
mov
fwait
aaa
and
sbb
mov
xchg
je
fsubrp
das
mov
test
mov
je
adc
pop
inc
popf
test
cld
repz
stc
popa
ret
aas
inc
addr16
pushl
das
scas
lahf
jo
movsb
sbb
push
pop
mov
out
fsub
or
xchg
arpl
sbb
add
dec
lods
jmp
cmpb
xchg
mov
hlt
scas
lret
cmp
or
jle
mov
ret
test
jns
xchg
xor
jl
mov
lret
push
loopne
cmpl
sti
and
popf
push
insl
outsl
aam
xor
pop
subl
cmpsl
xchg
mov
and
pop
dec
push
mov
enter
jnp
scas
xor
and
mov
sub
xor
mov
lods
dec
or
mov
or
dec
popf
pop
cmp
lret
stc
ds
enter
idivb
dec
test
insl
inc
mov
push
pushf
ret
or
pop
jb
test
sti
ret
shlb
and
sub
mov
dec
fsubl
jg
pop
test
jns
outsb
fidivrs
fmuls
mov
add
imul
int3
add
cmpsl
mov
clc
in
push
leave
sahf
aad
inc
clc
mov
mov
adc
arpl
xchg
aad
add
loop
mov
fldenv
fwait
into
mov
cli
loope
imul
stos
add
popf
cwtl
jae
dec
lock
cmpsb
loopne
mov
data16
int3
add
sahf
inc
push
outsb
repz
cmpl
inc
or
sti
xchg
cmp
mov
push
add
inc
leave
pop
mull
cmp
lea
cmp
fnstcw
in
ja
dec
inc
fwait
inc
mov
mov
jb
pop
arpl
xchg
sub
adc
sti
cltd
push
je
fdivl
js
fsubr
adc
xor
dec
mov
lds
mov
out
adc
cmp
push
mov
push
add
mov
imul
adc
pop
xchg
inc
mov
sbb
add
cs
cli
and
mov
push
mov
and
add
addl
xchg
jl
xor
push
jno
rorb
pop
mov
outsl
xchg
jmp
js
add
addr16
popf
push
divl
insl
outsb
scas
xchg
jg
sub
push
enter
aas
mov
sbbb
sahf
jae
mov
mov
repnz
pop
ss
jae
jbe
push
stc
in
lods
pop
sbb
xor
lea
jo
and
daa
mov
push
popa
in
sti
adc
dec
inc
jbe
and
loop
movsl
cmp
fdivr
out
arpl
xchg
fnsave
or
shl
notb
add
and
bswap
xchg
dec
push
push
idivb
push
inc
xor
adc
scas
loope
jnp
or
ret
push
jecxz
sub
mov
push
test
sahf
fidivrl
in
insl
gs
sbb
bound
gs
inc
adc
mov
in
std
sti
xor
xchg
and
scas
xor
insl
cld
push
popa
jg
mov
pop
pop
sbb
pushf
out
mov
insl
imul
cmp
cmp
cmp
aam
ret
test
lock
dec
bound
adc
setnp
out
inc
out
das
push
lret
ja
in
sbb
lods
jg
push
cmp
adc
mov
cmp
dec
fbstp
dec
xchg
xchg
mov
or
jp
dec
mov
cld
push
sahf
icebp
bound
int3
mov
pop
mov
loopne
dec
jp
lods
xchg
adc
out
arpl
or
jp
mov
push
gs
pop
dec
aas
dec
add
mov
rclb
cmp
pusha
mov
cmpsb
roll
sbb
cmp
cmpsl
cltd
lret
mov
add
xchg
jnp
sub
loopne
lods
dec
sbb
dec
test
jp
es
aam
enter
and
popa
js
mov
mov
adc
inc
mov
mov
mov
aam
sbb
xorb
cs
xchg
ja
xlat
jle
int
outsb
mov
and
sub
aas
and
cltd
data16
test
cmc
sbb
dec
jmp
sbb
jmp
int
adc
mov
pop
cmpsb
inc
add
fs
repnz
rclb
fidivs
sub
sbb
sub
jns
sbbl
adc
imul
popa
fincstp
es
lret
xchg
ss
jmp
lcall
mov
add
xor
cltd
gs
add
aas
pop
dec
outsb
xor
mov
push
aad
jecxz
movsl
dec
sbb
jmp
or
in
adc
push
loope
jbe
loop
pop
pop
xor
lods
inc
addr16
mov
mov
xchg
or
jo
xchg
jae
nop
ret
ror
in
lods
lret
pop
cmc
lods
clc
movsb
lea
jg
out
jne
mov
push
int3
xchg
faddl
arpl
scas
out
pop
jns
frstor
ss
jb
fimuls
xor
mov
loop
xlat
adc
jecxz
jb
lcall
movsb
and
lret
lcall
adc
gs
xchg
lcall
inc
dec
push
mov
ja
add
sahf
cwtl
xchg
enter
inc
and
cltd
xchg
fs
popa
stc
adc
xlat
test
mov
pop
mov
and
add
adcb
sbb
stos
cltd
mov
rolb
sbb
jl
mov
pusha
push
mov
fists
mov
cmc
xlat
or
pop
cmp
lahf
or
push
mov
mov
mov
and
insb
stc
cmp
push
mov
mov
or
mov
or
rclb
leave
or
jbe
or
insb
imul
sub
pop
sbb
pop
rolb
sbb
andb
push
test
in
jmp
pop
loop
icebp
dec
int3
adc
fldt
cwtl
dec
xor
xor
xchg
xchg
repnz
cmc
adc
inc
push
push
add
push
mov
lcall
inc
jl
pop
mov
adcb
inc
cmc
cltd
jns
mov
mov
adcb
adcl
gs
xchg
je
cld
sbb
mov
arpl
push
pop
rcrl
lcall
add
pop
add
xlat
push
je
enter
pusha
xor
cmpsb
jns
mov
dec
add
movsb
sarl
xchg
adc
sbb
push
adc
pop
jae
int
rcr
aas
push
add
pop
add
and
lock
or
ret
mov
test
cmp
xchg
je
lea
jne
sbb
inc
mov
push
imul
imul
je
and
int3
popa
insb
int3
out
xchg
or
cmp
nop
lahf
icebp
stos
hlt
mov
in
push
sbb
ret
insb
adc
sti
cmpsb
lock
dec
aad
jg
mov
xor
dec
sahf
pop
fwait
push
pop
ja
xor
mov
pop
xor
adc
xor
or
xchg
xor
mov
mov
jne
mov
mov
inc
and
addb
shll
and
jecxz
mov
cmp
punpckhbw
push
adc
dec
mov
in
fwait
pop
mov
jne
or
xchg
push
sahf
mov
add
or
mov
pusha
mov
push
outsb
xor
and
adc
push
dec
mov
into
pop
xor
jecxz
mov
pop
cmp
das
inc
mov
sub
push
loopne,pt
push
jae
inc
adc
jno
popa
mov
pop
enter
out
les
out
or
mov
jnp
push
sti
xchg
daa
lods
movsl
push
push
sub
xchg
adc
movsbl
movsl
cmp
jb
xor
mov
test
sbb
inc
fcmovnu
pushf
out
repnz
dec
test
outsl
push
inc
in
mov
and
ficompl
movsl
mov
mov
test
jbe
lds
daa
pop
mov
xchg
shrl
sbb
push
sti
dec
aaa
mov
cmp
mov
xor
outsl
std
xorb
sub
jmp
fbstp
cwtl
ret
cmp
in
insb
or
xchg
lods
arpl
jnp
lret
hlt
imul
dec
stos
addr16
jo
imul
push
adc
jo
call
mov
cmp
and
push
mov
sbb
xchg
and
sbb
and
cmp
add
inc
cmp
push
ds
loop
loope
xchg
lahf
jp
pop
cmpsl
push
mov
pop
pop
mov
and
loope
outsb
dec
out
cmp
jg
scas
mov
cmp
inc
popf
dec
andb
sub
mov
sbb
or
stc
jp
js
movsb
mov
les
jle
and
cli
clc
xor
femms
sbb
cmp
aad
mov
fists
adc
dec
mov
cli
aaa
inc
push
aam
shrb
sub
xchg
mov
xlat
mov
push
popa
or
inc
out
push
cmp
aad
xor
pusha
cmp
push
ss
jl
pusha
stos
fisttpll
mov
or
out
adc
mov
pusha
lock
adc
scas
cmp
repz
mov
mov
es
fidivrs
aam
stos
or
js
adc
pop
xchg
pop
mov
pop
mov
nop
push
dec
loopne
out
or
xor
ja
push
stos
lcall
dec
arpl
vpunpcklbw
leave
std
aam
xchg
adc
mov
mov
push
mov
je
scas
gs
fmulp
movsb
in
xchg
cli
inc
shll
dec
stos
push
in
or
decl
movsl
js
mov
sahf
and
insb
cmpsb
mov
push
shll
sbb
push
outsl
shl
mov
lea
cmp
ds
lock
add
mov
ljmp
adc
jp
shll
iret
roll
jl
sbb
push
jae
lods
aaa
mov
dec
pop
dec
hlt
repnz
push
inc
sub
fnstenv
mov
mov
adc
sbb
inc
inc
addb
loope
or
out
jle
les
adc
fwait
cmpb
icebp
rcr
les
jp
js
roll
inc
jne
leave
inc
insl
test
aas
xchg
jnp
enter
jo
pushf
das
test
mov
pusha
call
rclb
rclb
mov
dec
xor
cmpb
lds
mov
loopne
ja
xor
dec
repz
xchg
sub
push
jns
adc
insb
icebp
add
adc
imul
cmp
add
dec
lds
out
aam
outsl
sbb
jg
inc
insl
insl
xor
xchg
or
jnp
push
out
pop
or
stc
jecxz
outsb
push
int3
xchg
inc
cltd
inc
push
insb
push
cld
pop
es
xchg
pop
ret
insl
jo
and
clc
into
cwtl
or
jmp
daa
in
or
daa
imul
pop
mov
inc
mov
mov
sbb
jnp
lret
mov
lods
xlat
stc
inc
adc
mov
in
dec
fbstp
cli
push
adc
aam
cmp
mov
add
add
jmp
pushf
xchg
adc
ss
mov
inc
cwtl
sub
ljmp
pop
js
pushf
lret
push
imul
cmpl
fs
push
pop
adc
ret
shlb
rcll
pop
or
pop
mov
cmp
insl
pop
scas
roll
repnz
adc
xor
cmc
shll
sbb
hlt
jae
testb
adc
insl
inc
xchg
sub
lcall
jb
cmp
jecxz
lea
pop
ja
sbb
xchg
in
push
int3
out
fbld
pop
pop
add
cs
mov
sbb
add
movd
int
frndint
dec
push
clc
xor
lods
je
outsb
mov
xor
fsts
test
jnp
cmp
ret
add
leave
jnp
and
jp
push
sarl
ret
or
pop
cmp
sbb
sub
cwtl
push
mov
sub
pop
and
cmp
out
ret
outsb
int
mov
loopne
xlat
and
scas
in
test
pop
sub
rcr
pop
mov
xchg
ljmp
les
mov
sub
test
outsb
jnp
repz
aam
xchg
add
cmp
das
in
out
aas
test
insb
test
ret
cmp
jo
rcll
gs
notb
loop
ja
popa
dec
jnp
ja
push
test
popa
cmp
test
outsl
add
and
test
repz
movsb
dec
shlb
loope
mov
mov
popf
jge
stos
bound
add
es
sbb
sub
outsb
loopne
clc
xchg
mov
jbe
ret
mov
ljmp
andl
into
inc
sbb
jmp
add
cli
cmpsl
xor
dec
push
push
lock
sub
jmp
cmp
stc
cld
stc
fs
ds
orb
cmp
int3
xor
das
dec
xchg
sbb
sti
out
movsb
jns
inc
cltd
movsb
cmpsl
sbb
and
mov
mov
rclb
mov
es
mov
mov
lea
pop
iret
and
xchg
dec
enter
cmpsb
dec
das
jge
push
mov
push
xlat
xchg
mov
mov
rcrl
lods
aam
jle
sub
bound
sbb
dec
pusha
push
pop
cld
icebp
xor
lahf
add
xorb
aam
jo
cmp
xchg
dec
lahf
lea
lahf
push
mov
pop
or
mov
jo
test
sbb
loope
je
mov
out
mov
call
inc
loop
pop
push
out
mov
pop
loopne
and
cmc
add
add
pop
push
ja
push
lods
or
adc
mov
cmc
xorl
or
sti
jnp
daa
ror
mov
out
sub
push
loope
stc
inc
and
andb
add
fisubl
into
leave
js
sub
icebp
mov
out
cli
or
cmp
push
inc
sbb
pushf
cs
mov
xor
fidivrs
ss
add
push
repz
out
jns
push
hlt
push
rorb
clc
jmp
cmp
adc
push
cmp
xor
lea
inc
push
push
js
fcomp
xor
mov
pop
aad
cs
les
and
aad
icebp
adc
push
push
sub
nop
fs
sub
add
outsl
je
icebp
mov
pop
insl
mov
dec
push
dec
mov
outsb
sub
outsl
push
push
lods
loope
push
test
popf
jecxz
and
sub
xor
dec
jne
test
and
rorb
push
mov
xor
dec
arpl
movsl
aad
mov
sub
int3
dec
push
incl
fsubrp
mov
stc
mov
repnz
enter
je
mov
stc
loope
push
adc
sub
or
pusha
cmp
and
imul
loop
psubsw
push
movsb
xchg
inc
addr16
mov
mov
and
cmpb
in
sbb
sbb
cmc
lret
dec
sahf
adc
or
lods
mov
mov
sub
dec
sub
popf
insl
stos
mov
ja
ret
jecxz
jl
xchg
cmp
jmp
dec
jl
jmp
xchg
insb
or
push
jp
xor
jl
cs
jbe
adc
cli
lret
adc
jo
cmp
add
daa
ja
cmp
rol
in
loope
fsubl
cs
sbbl
xchg
testl
mov
pop
rcll
sbb
mov
fistpll
lret
xchg
jmp
inc
aas
lods
mov
stos
jb
mov
xchg
or
imul
int3
adc
dec
lock
and
inc
into
into
or
jae
rcll
add
rclb
or
or
lahf
push
jb
xchg
xchg
mov
push
lock
divb
pusha
push
adc
pop
push
jl
out
fwait
xchg
add
shll
jp
cmc
loop
jbe
mulb
fdivs
leave
lods
in
in
mov
mov
adc
xchg
dec
movl
sub
sub
jp
adc
loopne
sub
std
add
or
ss
filds
cmp
or
arpl
cmp
xor
push
iret
fisubs
dec
xor
test
cmc
cmp
in
loop
sub
mov
orl
cmp
mov
sub
jle
sbb
add
push
lods
xor
sub
or
sbb
push
add
movl
aam
mov
cmpsb
cmp
in
mov
repz
mov
xor
cmp
xchg
lods
fisttpll
mov
jmp
pop
inc
dec
mov
idivl
outsb
clc
push
mov
test
ret
movb
or
fdivrs
in
and
inc
stc
mov
inc
setne
and
outsl
cmp
js
shlb
mov
inc
xchg
mov
lods
cwtl
jge
push
arpl
push
push
leave
test
lcall
cmp
shlb
into
scas
in
sahf
ljmp
mov
mov
xor
test
hlt
jbe
movsl
test
jp
and
pop
inc
adc
xor
or
adc
sahf
or
mov
cmp
sub
js
dec
das
aas
add
mov
adc
notl
adc
push
fistpll
data16
aaa
mov
movsl
data16
mov
ret
add
decl
stos
negl
and
mov
adc
push
mov
add
cmp
sahf
xor
imull
lcall
pusha
dec
mov
add
pop
mov
mov
mov
dec
into
in
out
mov
lods
cltd
aad
jle
cli
add
xchg
push
jo
sub
in
cmp
cmpb
lea
mov
sbb
inc
aaa
sub
dec
or
push
ret
call
call
push
pop
xchg
call
dec
and
pop
icebp
scas
or
dec
mov
sbb
idivl
es
push
fcompl
out
arpl
inc
mov
mov
addl
clc
pop
dec
mov
sbbl
movsb
mov
es
push
cs
aad
lds
inc
dec
push
mov
hlt
into
imul
imul
scas
shl
push
sbb
scas
adc
loop
sarb
adc
loopne
jg
dec
push
mov
pop
cwtl
mov
cmp
enter
cmp
dec
test
hlt
mov
jne
sti
test
mov
mov
inc
fisttpl
ss
jge
popa
test
jl
push
xchg
neg
out
js
cmp
xor
cld
sub
mov
sarl
mov
pop
test
mov
insb
inc
into
cltd
xchg
pop
clc
push
lahf
loop
and
aaa
or
aas
dec
imul
jo
cmpsl
pop
leave
xor
mov
jmp
aaa
mov
push
jl
imul
jp
cld
stc
lcall
loope
adc
addr16
aaa
pusha
mov
outsb
fldenv
std
add
fldl
add
hlt
test
das
xchg
stos
imul
out
repz
or
mov
mov
cmpsl
aas
xor
insl
sub
shrb
xchg
cmp
or
lods
ret
es
outsl
arpl
arpl
xchg
jp
mov
add
leave
xor
adc
push
xchg
pop
fcomps
into
test
inc
fldenv
test
inc
sbb
xchg
add
mov
ljmp
in
adc
dec
inc
ljmp
jmp
rcll
fldl2e
adc
cmpsb
xchg
lcall
scas
mov
gs
bound
je
cli
and
add
mov
dec
jecxz
pop
mov
cmp
mov
test
imul
jmp
ja
loopne
pop
add
bound
popf
mov
out
aad
les
stos
push
ja
xchg
negl
mov
cmc
cmp
xchg
fstps
or
ljmp
pushf
and
add
rolb
pop
push
pop
adc
and
iret
sub
xchg
sub
into
pop
mov
leave
mov
xchg
lcall
and
mov
sti
test
sub
std
insb
cmp
inc
scas
jb
jae
jg
push
inc
ret
xor
mov
fsubs
jae
pop
movb
cmc
out
out
sub
add
xor
scas
sbb
repnz
outsl
adc
cmc
mov
out
fdivl
mov
inc
and
jl
mov
movsb
ja
sub
loope
mov
dec
jno
cmp
adc
jl
arpl
movsl
daa
cwtl
sbb
mov
push
cmp
pop
icebp
sbb
xor
push
push
incl
sarl
mov
xchg
or
xor
loop
adc
add
mov
cld
pop
hlt
test
push
jecxz
gs
ss
ret
jecxz
jmp
test
cwtl
aam
pmovmskb
sub
sub
and
dec
add
ror
xchg
int3
sbb
xchg
test
add
inc
je
inc
lcall
or
xor
bound
clc
loop
or
sbb
les
or
dec
popf
popf
add
lret
mov
out
fdivrl
push
lds
nop
inc
ret
jb
pop
sbb
and
inc
lods
addr16
inc
jns
aaa
rcrb
sbbb
push
fadd
pop
cmp
pop
lret
sub
mov
cmp
inc
loopne
ret
or
dec
add
subb
lahf
addr16
mov
xor
xchg
mov
jl
stc
imul
or
cmp
mov
mov
mov
out
testl
sub
lahf
loopne
dec
scas
dec
fwait
aas
stc
in
jl
lock
jmp
mov
insl
adc
inc
sar
mov
xlat
pusha
xchg
mov
icebp
aaa
lock
adc
pop
les
cmp
leave
sub
sbb
sbb
jg
inc
mov
push
adc
or
aad
enter
jo
adc
dec
and
andl
and
inc
xchg
loop
and
sar
dec
inc
loop
dec
push
xchg
mov
xchg
dec
stc
pop
loope
cltd
fldt
inc
fidivrl
cmp
jmp
sub
lock
incl
pop
je
push
sub
cmp
cmp
js
rorb
sti
repz
pop
mov
stc
adc
insl
imul
sub
xchg
pop
stc
xchg
cli
call
and
ljmp
out
fisttpll
sbb
sar
jnp
ds
movsl
push
jp
adc
pop
inc
xchg
cmp
xor
jns
dec
addr16
push
leave
push
divl
mov
push
or
movsl
je
jecxz
insb
push
inc
pop
test
sbb
pusha
ret
cmp
add
sub
add
iret
and
cmc
in
cld
scas
popa
aam
shrw
scas
pop
or
or
mov
jnp
imul
add
stos
clc
jmp
stos
sub
aas
xchg
xor
out
mov
mov
call
mov
fs
mov
mov
and
nop
jo
mov
fdivl
jg
lea
xchg
adc
pop
repnz
inc
sahf
adc
pop
or
je
daa
sub
jb
mov
add
adc
sti
das
sarl
loope
fcmovnbe
loop
in
push
xchg
push
shlb
jp
ss
or
in
jno
testb
aad
add
ja
adc
pop
sarl
pop
dec
and
test
mov
lock
add
cmp
push
xchg
out
jmp
dec
jl
fdivr
xor
arpl
push
push
sub
sar
sbb
mov
add
add
inc
repnz
std
outsb
js
mov
gs
imul
cmp
out
test
mov
and
sarl
or
and
push
repnz
fsubr
add
jl
or
jmp
and
sti
mov
lods
mov
or
jbe
jecxz
push
bound
subl
fbld
fldl
adc
ja
pushf
les
mov
dec
out
ficompl
xor
jle
shlb
insb
stos
out
ds
or
mov
mov
movsb
rol
rcll
jns
fcmovbe
pusha
mov
and
mov
rcl
or
add
aas
pop
in
and
sti
and
xchg
sub
add
repz
inc
and
repnz
sub
dec
sbb
sahf
add
xchg
cld
lcall
sub
sub
ja
pop
movsl
fnstsw
push
in
adc
inc
dec
les
mov
or
adc
lret
add
test
mov
out
shll
lods
ja
inc
adc
sub
test
lahf
data16
stos
xchg
test
dec
into
mov
call
bound
sub
in
sbb
add
mov
push
bound
jmp
out
jp
push
jns
dec
notb
fs
adc
jb
mov
jb
xor
adc
sbb
cmp
and
icebp
push
rclb
js
out
sbb
inc
pop
mov
pop
xchg
mov
test
incb
inc
ret
mov
pop
cmp
and
mov
cmp
mov
test
or
aas
sti
and
les
popa
les
inc
pop
xor
test
xchg
push
and
stos
iret
out
xchg
xchg
orb
ret
ud2
imul
mov
js,pn
cmpsl
cmp
popf
pop
xchg
leave
sbb
iret
call
inc
aam
pop
adc
adc
pop
mov
ret
mov
mov
xor
cli
test
in
inc
pop
lds
dec
pop
add
repz
mov
push
inc
inc
repz
in
jae
fwait
insl
lods
leave
inc
adc
xor
xor
mov
cli
dec
xchg
jge
add
aam
sub
mov
sbb
pop
dec
mov
int
and
js
ret
xor
mov
sub
fmull
fcoms
lods
idivl
cmp
jl
push
push
pop
add
mov
fidivrs
cli
jnp
ret
pop
mov
push
adc
hlt
sub
fidivrs
jp
testl
pop
ret
push
imul
mov
gs
mov
dec
mov
mov
and
scas
dec
insb
dec
in
imul
mov
and
lahf
push
xchg
and
or
inc
fcmovbe
pop
lahf
out
xor
cmpsl
xchg
fsubl
inc
and
mov
fistpll
inc
dec
jb
lahf
insb
dec
cltd
mov
jnp
mov
or
aas
dec
jae
sbb
in
inc
in
inc
popf
fnstenv
jo
ljmp
xchg
shrb
pop
mov
lahf
popa
ljmp
jns
sbbl
loopne
xchg
movsl
scas
lahf
daa
push
xchg
jmp
ljmp
lcall
sbb
mov
fcoml
or
cmp
ljmp
dec
pop
scas
popa
es
adc
jl
adc
hlt
outsl
jne
cmp
mov
shrb
push
or
push
cmp
adc
push
mov
sub
cld
ja
les
out
or
imul
rcrl
sub
cli
shrl
aas
inc
jbe
xor
fbstp
add
decb
ja
inc
icebp
push
daa
xor
loopne
hlt
pop
xor
in
add
cmc
sbb
cmp
mov
inc
fwait
push
aam
je
enter
cs
pop
das
gs
add
adc
xlat
push
inc
iret
arpl
xchg
add
xchg
fisubl
mov
inc
sbb
sub
outsl
pop
pop
mov
fnstenv
xchg
jmp
orl
sbb
mov
add
jo
test
adc
xor
js
pushf
cmp
pop
lods
xor
lock
fstpl
adc
or
fs
sbb
fwait
aad
mov
xchg
inc
jecxz
mov
xor
insb
sub
xchg
repz
in
mov
xor
scas
lock
dec
and
test
stc
cmp
jae
xchg
adc
ss
popa
shl
mul
push
cmp
add
outsb
pop
pop
xchg
cmpb
pop
fs
cmp
les
loop
cmp
sub
mov
mov
pop
inc
nop
or
out
xchg
je
and
into
push
scas
mov
inc
divl
pop
mov
add
jg
repnz
call
aam
popa
lahf
xchg
out
jge
ficomps
pop
out
cld
popf
cmp
jae
jge
psubd
sbb
enter
fwait
lods
les
sub
and
std
les
jbe
sub
mov
jge
adc
or
sbb
push
cs
movsl
pop
outsl
leave
outsb
in
pop
ret
mov
xchg
adc
sub
into
lock
stos
enter
enter
call
push
data16
push
pop
dec
das
sub
cmp
jge
and
mov
pop
cmp
decb
ret
hlt
jne
pushf
jne
or
push
leave
fidivl
mov
push
mov
mov
jnp
out
adc
dec
int
inc
fnsave
cmpsb
xchg
popf
cmp
cmp
ret
arpl
cld
movsl
ss
mov
xor
stos
lahf
mov
mov
add
dec
sub
dec
pushf
push
jb
xor
in
mov
dec
es
inc
sub
xor
push
mov
ret
push
loopne
das
mov
sub
cltd
stc
fidivs
sub
jbe
mov
mov
jae
inc
popa
iret
add
sti
pop
scas
mov
sub
lret
inc
dec
and
leave
sub
mov
sub
xchg
pop
fwait
xor
imul
push
loopne
pop
gs
data16
jl
insb
xor
xchg
int
jb
lea
fdivrs
js
repnz
jb
sub
mov
clc
test
stos
shll
iret
test
mov
adc
movsb
or
inc
mov
mov
pop
hlt
stc
aas
ljmp
inc
push
or
popa
mov
add
lea
adc
jp
jmp
push
adc
xor
lret
mov
xlat
outsl
sub
fldl
rclb
xchg
scas
lods
fstp
movsb
loopne
inc
cli
sbb
mov
mov
mov
sub
jle
xor
lahf
push
sahf
es
loop
or
in
jg
add
dec
and
imul
xchg
pop
fstpl
movsb
pop
jns
xchg
push
cwtl
xchg
dec
add
aaa
fbstp
loopne
inc
adc
adc
adc
pop
cmp
jne
dec
xchg
or
out
jbe
sub
insl
or
aam
xor
mov
mov
imul
push
dec
ja
add
test
loopne
push
imul
ljmp
mov
and
inc
pushf
lock
mov
decb
sub
imul
je
push
inc
call
xchg
mov
adc
cmpsb
jge
inc
adc
jecxz
sbb
loope
aaa
out
sbb
test
add
in
lahf
outsl
cmp
in
pop
lret
dec
fnsave
imul
stos
outsl
jne
push
fdivl
mov
jg
add
jg
int
xchg
xor
pop
add
lcall
aaa
mov
cmc
sahf
subl
gs
dec
pop
dec
test
stos
cld
push
pusha
mov
mov
pop
iret
dec
add
mov
push
imul
pop
jge
mov
xchg
sbb
filds
sub
jg
in
outsl
inc
pop
fimuls
push
sarl
xor
rclb
xor
les
cli
adc
mov
or
scas
or
push
pop
jmp
push
pushf
out
popa
stos
jle
aad
outsl
outsb
or
rorl
outsl
mov
cmp
stc
mov
mov
aam
mov
cmp
push
dec
sub
into
cs
jmp
dec
out
rcll
aam
adc
sahf
mov
test
outsl
xchg
pop
push
mov
push
mov
push
cmp
adc
incb
scas
dec
lcall
cmpsb
jge
je
outsl
scas
ret
nop
pop
jne
push
jo
push
xorl
nop
scas
in
insb
jmp
pop
sub
fs
pop
fistpll
xchg
fcoml
dec
clc
push
jmp
nop
xor
cmc
in
out
repz
cmp
cli
dec
mov
push
xchg
jg
lcall
xchg
mov
add
inc
div
pop
jae
scas
cmp
xchg
cmova
xchg
push
insb
pushf
sub
jns
int
jno
adc
mov
movl
jae
sub
hlt
fucomp
cld
jns
xor
dec
sbb
mov
shrl
xor
lods
popf
add
add
add
sbb
mov
hlt
addr16
mov
pushf
outsl
jp
imul
add
lods
push
cmc
js
fiaddl
fs
rcll
cmp
rcll
subb
cmpsl
push
jmp
pusha
popf
insb
sub
shl
xchg
aaa
cltd
and
repz
adc
mov
pop
mov
sub
shlb
stc
sbb
lods
dec
push
cmp
cmpl
insl
pusha
xchg
pop
xor
push
add
cld
xchg
push
cmp
mov
aas
shlb
and
sbb
or
xor
repnz
dec
dec
testb
xor
pop
jns
push
mov
jno,pt
push
xlat
adc
jno
adc
push
xor
mov
and
and
ja
loop
jb
sbb
rorb
lret
scas
sub
push
or
push
or
fsubrs
mov
inc
sub
jno
in
xor
xor
jns
or
clc
fdiv
das
xchg
cld
in
push
jmp
mov
and
mov
mov
stos
mov
cmpsl
or
mov
stos
mov
fwait
jne
repz
mov
aad
aad
aaa
inc
in
repnz
mov
addl
aaa
std
mov
sub
ljmp
inc
imul
mov
sbb
push
jne
imul
push
loope
jbe
data16
js
xor
inc
jp
xor
and
jo
fiaddl
mov
adc
es
jns
cmpsl
aam
and
xor
repnz
jo
mov
push
mov
sub
dec
add
mov
mov
or
outsb
ja
ret
adc
aas
adc
je
mov
xchg
mov
mov
sbb
cmp
out
int3
or
sub
push
sbb
insb
jb
sub
subb
mov
lods
jns
xchg
jne
pop
push
xor
lds
aam
lock
or
in
fdivl
add
lds
aad
dec
cmp
add
loop
dec
pop
mov
scas
dec
inc
rorl
mov
push
mov
in
cmc
mov
mov
push
and
sbbl
cmp
sahf
push
dec
mov
jge
ds
fmull
and
add
cmp
pop
iret
xchg
cs
jne
add
lds
adcb
test
inc
push
icebp
js
into
sub
pushf
jb
adc
mov
loope
pop
sub
mov
lds
ficoms
pop
in
mov
mov
xlat
out
cmp
negl
dec
lahf
in
cmp
inc
out
add
repz
inc
xor
movsl
int3
xchg
out
and
repnz
sub
pop
bswap
pop
cltd
cmp
es
jecxz
dec
sub
mov
sub
fcomps
push
popa
dec
sbbl
adc
out
imul
pop
cmp
push
sbb
jge
mov
inc
push
ret
dec
inc
addr16
sbb
popa
fistpll
jge
add
mov
cmc
imul
notl
sub
leave
xor
jb
pop
push
out
shl
dec
test
xchg
cmpsb
sti
jae
xchg
outsb
jl
mov
sbbl
xor
imul
sub
insb
cmp
push
test
andl
cwtl
jae
test
mov
bound
and
push
jno
ror
lcall
push
out
test
arpl
mov
push
fisttpl
pop
and
jb
mov
jnp
rcr
sti
popa
scas
icebp
and
lods
jnp
inc
pop
push
xchg
sbb
repnz
cmp
sbb
jnp
movsl
dec
jg
iret
xchg
or
lods
scas
mov
loope
push
mov
call
pop
or
ljmp
outsl
dec
push
ror
ret
outsb
in
test
jmp
mov
xchg
in
scas
imul
addl
out
idiv
in
movsb
pop
fdivs
lahf
sub
cltd
js
cmp
popf
cmpsl
adc
jge
lret
cltd
pop
int3
iret
jnp
repz
xor
ss
loope
test
sarl
push
and
jle
cli
daa
xor
daa
mov
push
mov
jne
mov
cmp
mov
jne
push
sbb
adc
es
repz
sbb
aaa
insb
jl
cmp
lret
push
repnz
test
pushf
add
ret
push
dec
loopne
jne
imul
popa
and
fwait
pop
pop
int
xor
inc
repz
pop
sub
js
xor
add
jl
add
or
out
push
dec
and
cld
push
inc
adc
sub
inc
divl
sub
out
xor
mov
pop
rorb
or
lret
loopne
cltd
ja
mov
xchg
jo
inc
insl
xchg
add
jecxz
add
std
in
mov
or
lret
lret
push
sar
stos
fdivrl
inc
inc
stos
and
mov
sub
rcll
lcall
scas
mov
mov
scas
add
fidivrs
mov
ss
imul
add
pop
pop
jl
xchg
ss
mov
cmp
lods
cltd
shr
call
mov
add
les
bound
das
movsl
loop
adc
jbe
and
popf
fidivl
rcll
jbe
lret
or
xchg
mov
cmp
cmpsb
push
scas
dec
inc
loopne
repnz
xchg
sub
insb
scas
testl
jb
jo
stos
fcomip
xchg
mov
push
cmp
inc
push
mov
mov
icebp
sbb
cs
push
push
push
ljmp
movsl
jmp
sub
sub
lods
or
sub
inc
ljmp
push
cmpsb
sub
cltd
fdivrp
or
test
dec
icebp
mov
cmp
inc
das
sbb
mov
fwait
dec
jl
mov
adc
dec
sti
flds
xchg
push
jbe
aaa
push
mov
mov
push
add
dec
cmp
jmp
out
je
cld
call
fwait
jge
fstpl
push
shr
scas
xchg
sub
gs
popfw
loope
aad
mov
cmpsl
lret
iret
jbe
jno
ss
add
repz
pop
cltd
sub
popf
sarb
mov
imul
lods
and
repnz
repz
xor
adc
mov
add
in
es
push
mov
xchg
pop
jne
scas
jle
fcmovu
fnstsw
and
repnz
pop
jbe
in
ja
xchg
mov
int3
inc
pushf
rclb
jecxz
sbb
shll
inc
xchg
dec
cmpsl
push
stc
xor
mov
cmpsb
mov
scas
in
jge
div
in
aad
jmp
mov
loope
xorb
sbb
pop
cmp
aas
jge
push
push
roll
dec
div
mov
aad
and
lret
cmpl
call
cmc
shl
or
xchg
sti
mov
lcall
into
mov
imul
frstor
mov
mov
cwtl
outsb
repnz
es
in
dec
fimuls
das
push
sahf
insl
je
bound
aaa
xchg
fists
mov
stos
push
sub
mov
push
pop
inc
mov
mov
pushf
jecxz
popf
mov
test
gs
dec
or
jo
ljmp
fs
add
shlb
adc
out
imul
in
cmpsb
xchg
adc
dec
cmp
xor
mov
lret
sbb
xchg
fsubr
jae
mov
cmpsl
pusha
push
and
negb
inc
ja
les
hlt
repnz
inc
pop
out
inc
cs
lcall
push
inc
push
and
popf
or
test
pop
jb
addr16
dec
cmc
cmp
aaa
pop
and
push
xor
cli
adc
ret
fisubrs
gs
repz
aam
jno
movsl
jo
pop
xor
aaa
or
pop
enter
fistpll
inc
gs
sbb
sub
mov
scas
cwtl
and
cltd
mov
ds
cmp
nop
mov
or
sub
daa
lret
test
add
adc
rcll
popa
fdivrs
ljmp
xlat
data16
in
test
push
fldl
hlt
inc
inc
sbb
xchg
mov
sarb
or
add
imul
adc
jno
push
mov
aad
scas
fcmovnu
mov
ret
out
js
cmpsb
lea
sub
rorl
scas
setbe
filds
xchg
mov
adc
fldenv
jge
mov
hlt
add
adc
push
adc
xor
cmp
inc
mov
dec
cmpl
adc
orb
xlat
cmpsb
flds
aam
gs
ds
xor
lahf
stc
inc
dec
or
lds
fisubrs
mov
jbe
out
shrl
mov
outsb
pushf
and
data16
inc
stos
daa
ss
inc
nop
and
inc
loop
add
push
js
inc
pop
mov
mov
out
sti
int3
pop
ret
div
das
aaa
out
mov
inc
jecxz
leave
rorl
add
rol
outsb
fcmovne
loop
dec
std
dec
fwait
push
jp
and
stc
call
les
or
sti
sbb
lcall
or
fcomp
mov
dec
xchg
sarl
lods
or
test
jnp
or
push
dec
call
mov
and
ret
dec
xchg
insb
or
and
xor
dec
ficomps
mov
push
fs
sti
cmp
xor
aam
pop
test
push
mov
outsb
call
mov
lods
stos
cmpsb
mov
arpl
fldenv
lret
test
dec
jmp
cmpsl
inc
cli
ja
jno
add
int3
add
je,pt
data16
xor
pusha
mov
xchg
cmpsl
ds
adc
pop
jbe
test
and
mov
pop
out
push
cmp
push
pop
lcall
sub
push
cmpsl
inc
xlat
daa
inc
sbb
dec
xchg
jmp
daa
rclb
xor
inc
mov
xchg
mov
mov
mov
inc
stc
sbb
mov
push
dec
mov
int3
xor
inc
lods
dec
test
test
and
imul
enter
push
loope
std
les
cs
test
fcomip
push
and
adc
mov
add
push
in
adc
mov
cli
lds
mov
aad
ja
gs
pop
mov
cmc
mov
mov
fisttps
aas
jge
push
cmpsb
pusha
clc
scas
in
in
repz
ds
mov
or
mov
data16
pop
call
mov
outsl
xchg
push
mov
mov
inc
xchg
sub
ds
adc
mov
iret
loopne
js
sbbb
fiadds
push
sub
aaa
cmpsl
data16
xchg
jecxz
aaa
mov
test
push
sbb
fstpt
pop
sbb
rorb
in
and
inc
jp
sub
fnstcw
je
mov
mov
adc
or
mov
add
loope
sub
xchg
add
cli
xor
cmp
cmp
pop
popa
sbb
sbbl
mov
outsb
adc
dec
ret
and
mov
insl
ljmp
call
inc
fdivs
pop
push
stc
xlat
test
xchg
jbe
out
push
and
mov
xchg
jge
mov
mov
inc
pop
jp
aad
pop
orb
aad
push
xor
jae
mov
sub
test
stos
lret
xchg
in
sbb
xorl
sbb
lds
mov
ljmp
and
gs
test
mov
and
addl
shl
xor
sub
adc
dec
adc
test
out
and
lods
icebp
push
push
adc
loopne
mov
in
pusha
xchg
mov
stos
mov
adc
mov
sub
jmp
dec
les
mov
mov
add
jno
cld
xchg
enter
andl
mov
inc
xchg
or
adc
dec
xchg
xchg
sbb
repnz
and
repnz
and
nop
adc
shl
mov
scas
fwait
pop
enter
mov
rcrb
out
int3
sti
sahf
or
jne
ja
ret
test
push
or
in
jg
pop
ljmp
gs
xchg
inc
xor
jns
scas
or
xchg
daa
scas
jbe
pop
add
or
add
mov
aad
repnz
fildll
push
push
mov
mov
in
dec
shlb
cmp
mov
test
xor
rcl
mov
mov
dec
dec
xlat
adc
xorb
push
push
ficompl
dec
push
dec
ret
nop
outsb
push
jne
aad
sbb
mov
mov
mov
add
push
jno
stos
pop
xor
pop
mov
into
ljmp
jns
ljmp
mov
fdiv
push
dec
fstl
mov
test
inc
out
and
mov
lret
aas
divl
push
add
test
lret
sahf
arpl
pop
rolb
xlat
add
inc
sti
mov
add
sbb
or
push
add
xchg
ret
jae
jne
pop
insb
clc
aam
push
cmp
mov
clc
push
and
xchg
insl
dec
popf
pop
jl
push
sbb
push
adc
sub
push
adc
leave
call
std
mov
or
ret
lahf
in
xchg
mov
fdivs
fstpl
or
sub
cmc
addr16
jb
leave
popf
aam
or
shr
inc
xchg
push
push
cmp
jmp
movsb
dec
push
xchg
xchg
add
jne
lods
mov
xor
testl
jmp
or
leave
punpckhwd
jb
adc
and
add
cmpsb
mov
and
cmp
leave
and
mov
inc
sub
mov
mov
fmuls
cmp
pop
pusha
push
lret
scas
add
fidivrl
movsl
sbb
add
add
icebp
cmpsb
and
hlt
in
decl
jg
jle
ljmp
xchg
call
aam
xor
jge
inc
movsl
sub
aad
test
in
push
mov
cmp
int
pop
insl
sub
mov
pop
push
add
popf
das
xchg
adc
dec
mov
xchg
bound
cmpsl
lret
je
xchg
mov
adcb
xor
lret
in
add
xchg
call
xchg
in
fidivs
leave
scas
push
mov
stos
sub
daa
mov
in
lods
add
mov
push
jg
xor
add
xchg
insb
daa
call
gs
pop
aaa
sub
lcall
mov
rol
mov
pushf
xchg
sbb
sub
sub
daa
outsl
loop
cltd
pop
loopne
scas
loop
addr16
sahf
jp
les
fidivs
and
push
mov
add
jnp
notb
mov
sbb
fisttpll
rcrb
push
sbb
ja
movsb
into
lahf
jne
int
fisttps
sub
mov
pop
xchg
divb
mov
mov
xchg
adc
push
fcmovbe
mov
adc
aas
in
scas
out
lods
xor
cli
popf
or
in
jmp
jle
jb
scas
dec
jg
or
cmp
xlat
pop
push
cld
test
inc
sti
rolb
sub
dec
push
pop
add
repz
adc
mov
mov
clc
jae
sahf
imul
mov
push
and
lret
or
dec
cli
sub
and
popa
dec
andb
jp
in
or
test
test
mov
loopne
idivl
movsb
sub
stc
popa
adc
adc
sbb
sti
ljmp
mov
xchg
or
lahf
ljmp
push
std
pop
lret
inc
dec
movb
into
scas
sarb
sbb
xor
mov
sahf
jno
jo
int
sub
mov
insb
lahf
pushf
xchg
mov
cmp
or
ret
rcl
sar
pushl
dec
enter
xor
cmp
sbb
ficoml
inc
push
adc
mov
jne
pusha
subl
ror
sbb
or
dec
sub
and
sbb
stos
sahf
jp
inc
pop
dec
fsubs
fldenv
bound
sahf
addb
fsubrl
das
cmc
cmp
mov
jge
xor
dec
sbb
mov
rolb
subl
xchg
jg
mov
cmp
clc
push
fs
sbb
bound
lods
insb
cmp
pop
inc
in
sub
rol
or
cmp
aam
lea
sbb
push
add
push
add
icebp
das
test
jns
xchg
adc
clc
dec
xchg
repnz
sbb
leave
xor
fwait
inc
xor
xchg
sub
jo
enter
lahf
push
mov
leave
push
jg
or
jge
aaa
inc
mov
pop
repz
mov
out
jns
and
cmp
cmpsl
in
jb
push
xchg
cmpsb
imul
xor
loopne
or
xchg
lods
testb
sbb
in
and
repnz
mov
aaa
lea
mov
and
add
add
add
mov
popa
push
inc
mov
and
ret
das
iret
add
mov
fldl
xchg
jae
insb
aad
xchg
addl
lods
sbb
sub
add
lahf
mov
inc
inc
addb
inc
scas
inc
in
xchg
dec
xchg
cmpl
xor
cmp
add
mov
jp
xchg
push
mov
or
test
mov
xchg
push
cmp
loopne
pusha
push
mov
fisttpll
add
loopne
jle
inc
insb
imul
mov
test
ds
adc
imul
sbb
mov
push
imul
jns
inc
insl
lock
mov
adcl
jecxz
in
pop
jmp
jae
decl
xchg
sbb
hlt
pop
xchg
mov
aam
sub
dec
ficoms
bound
aas
pop
icebp
sahf
push
and
pop
clc
je
insl
xchg
mov
push
cwtl
pop
shlb
sub
insb
mov
xor
and
movl
ja
insb
lock
xchg
pop
subb
dec
das
xor
push
adc
ret
adc
adc
loopne
xchg
sahf
je
stos
sar
jo
xor
lret
mov
cs
cmp
push
clc
sub
xor
xlat
loopne
dec
cmovge
pop
sbb
push
pop
push
push
push
ljmp
pop
lret
jo
mov
cltd
xor
outsb
mov
cmc
stos
imul
in
xchg
push
push
divl
cmp
cltd
pushf
enter
lret
ds
adc
pop
cmpsl
xor
pcmpgtb
pop
mov
push
adc
stos
and
sub
mov
dec
call
or
pop
imul
cwtl
mov
push
push
inc
inc
icebp
into
notw
jnp
int
dec
cs
loop,pt
rolb
mul
jge
pop
adc
test
add
pop
xchg
jns
cwtl
sub
int3
in
mov
in
ds
mov
mov
mov
movl
xchg
test
xchg
xlat
cwtl
mov
jle
cmp
js
lret
xchg
fdiv
mov
dec
subl
jle
fwait
test
dec
fisttpll
inc
push
loope
and
pop
int3
mov
mov
push
or
dec
dec
xor
or
mov
jle
sbb
xchg
shl
stc
leave
dec
add
or
aam
push
into
mov
in
or
test
mov
test
lods
pop
fidivs
pusha
dec
pop
insb
aam
in
test
add
mov
xchg
inc
push
hlt
or
pop
scas
or
nop
enter
xchg
movsl
and
mov
sbb
mov
or
aaa
push
push
fidivrl
out
mov
jg
push
xchg
fs
jne
sub
rcll
mov
repnz
mov
pop
mov
sub
xchg
gs
mul
shll
adc
outsb
mov
shlb
cli
idivb
lahf
cmp
out
add
xchg
js
or
test
sbb
xor
loop
cmc
push
xchg
in
adc
jecxz
aaa
jmp
lock
adc
jge
pop
jne,pt
out
mov
js
hlt
in
xor
sti
cs
sub
popf
and
adc
test
jno
aaa
out
addr16
pop
shll
sbb
mov
xchg
out
mov
bound
lock
push
lret
out
decl
xchg
xlat
jnp
xacquire
fiaddl
cmc
and
jno
mov
clc
frstor
pushf
inc
mov
cld
shlb
out
stos
xchg
mov
cmp
fstpl
inc
leave
mov
or
cmp
inc
cmpl
jne
out
daa
or
lret
adc
fistpll
in
dec
jl
testb
xorb
nop
shl
test
lea
push
or
or
lock
lea
xor
mov
pushf
cli
sub
sub
mov
pop
arpl
sbb
sub
stos
inc
mov
mov
lods
out
cmpsl
jmp
jb
fimuls
cmc
cwtl
mov
pop
popf
xor
and
pop
or
pusha
jno
scas
mov
mov
lret
nop
je
ja
pop
and
add
subb
jno
lcall
xchg
xchg
pop
les
ss
sti
mov
lret
out
popf
add
scas
stos
cmpsl
mov
rcll
sbb
adc
gs
xor
xchg
setl
push
stos
fs
arpl
test
sahf
pop
push
aas
enter
mov
cmp
mov
lret
or
cltd
aas
and
push
insl
in
sbb
negb
xchg
dec
mov
ljmp
cmp
scas
out
xchg
popa
add
or
add
mov
out
or
out
clc
arpl
lcall
add
mov
repz
cld
mov
mov
fisubs
cmp
adc
cmpsl
adc
shlb
loop
push
push
push
inc
xor
iret
cmpsl
iret
test
ljmp
fdivs
inc
adc
jge
int
aaa
mov
dec
dec
mov
repz
shlb
mov
int
pop
int3
pop
xor
push
mov
cmp
shrb
fucomip
push
aad
popa
sbb
adc
repz
mov
test
out
cwtl
and
cmc
xor
loopne
decl
xchg
icebp
mov
inc
icebp
sub
mull
pop
das
lock
dec
adc
dec
movb
mov
mov
xchg
popa
push
subl
pop
push
dec
daa
mov
sub
iret
test
xor
or
int
fisubrs
or
push
aad
and
adc
push
movsl
adcb
push
mov
cltd
outsl
sti
cld
xchg
add
push
std
test
and
testl
ljmp
pushf
lods
pop
or
adc
mov
inc
sub
fcoms
js
mov
push
inc
adc
ds
jge
or
adc
outsl
es
xor
push
add
pop
lea
clc
sbb
ss
push
out
xchg
mov
stos
xchg
icebp
add
jae
aaa
mov
out
or
insl
push
and
lcall
mov
outsl
addr16
outsl
mov
push
sub
mov
int3
lds
out
mov
pop
and
fdivrl
aaa
xchg
loopne
shrl
jno
clc
fwait
js
mov
xor
testb
push
xchg
repz
sar
xor
iret
add
fisttps
push
push
sub
pcmpeqb
mov
popa
in
mov
mov
cmc
adc
arpl
cmp
pop
daa
pop
sbb
adc
mov
or
jnp
mov
inc
shl
cmpsl
xchg
adc
add
inc
aas
jecxz
jmp
cmp
inc
iret
cmp
mov
sbb
sbb
sbb
rclb
mov
leave
xor
mov
test
adc
repz
int
enter
das
jno
inc
pop
ds
lods
cmp
mov
push
or
cmpsl
jecxz
ja
dec
sub
dec
sbb
and
in
mov
lret
icebp
fs
jno
push
xor
push
xchg
add
repnz
into
adc
ret
mov
jae
aaa
lods
rorl
mov
sbb
or
xchg
pop
push
js
push
mov
mov
pusha
imul
xor
xor
sbb
xchg
scas
test
lods
loop
ja
pop
mov
loope
lcall
push
pop
sarl
sub
sub
cwtl
div
xchg
xchg
cmp
insl
and
jmp
xchg
aam
sbb
push
lods
test
add
add
add
push
fists
xor
hlt
fyl2x
or
dec
push
jmp
testb
or
xlat
sbb
push
jno
and
add
push
mov
mov
int3
push
cmp
and
iret
lcall
data16
in
inc
into
loope
inc
sub
and
fucom
cmp
xorl
cmpsl
sub
cmp
or
or
xor
shlb
in
orl
arpl
xchg
cmpsl
fdivr
sub
xchg
jmp
mov
jnp
dec
mov
shl
add
stc
or
or
add
pop
adc
pop
insl
mov
sub
cmp
mov
std
xchg
xor
mov
mov
mov
inc
xchg
lahf
pop
ljmp
dec
inc
filds
stos
jo
shll
lock
cwtl
out
loope
push
pop
or
add
xchg
orb
cmp
mov
jnp
and
pop
test
mov
xlat
dec
shl
shll
mov
into
push
ret
data16
add
js
push
rol
repz
dec
scas
aaa
sbb
mov
popf
dec
cmpsl
pop
xor
leave
pushf
out
pop
mov
adc
dec
outsb
cmp
push
repz
xchg
ss
insl
pop
xor
stos
sahf
fnstsw
inc
repz
adc
xchg
jae
lods
jmp
sbb
nop
mov
stc
inc
adc
add
cmp
cmpsb
jo
adc
mov
lock
outsb
dec
sahf
push
cmc
ja
stos
cmc
stc
inc
ljmp
push
das
sub
mov
hlt
dec
cwtl
gs
inc
xchg
pop
jmp
div
lock
fidivs
les
mov
mov
sbb
pop
fidivl
fnstcw
hlt
sub
jns
pop
xor
fwait
mov
sti
mov
fcoml
in
dec
sbb
mov
mov
dec
sub
outsl
mov
ja
sub
lahf
jns
mov
xor
jge
adc
sbb
lds
push
enter
subl
push
shrb
testl
fists
fsubrs
dec
in
cmc
ret
sub
sti
mov
xchg
rcrl
je
push
test
fistpll
imul
xor
iret
repnz
imul
mov
pop
pop
cmpsb
jge
outsl
mov
test
sti
shrl
addl
pop
push
arpl
inc
mov
icebp
rolb
iret
pop
ret
push
neg
mov
add
repz
lcall
adc
adc
mov
std
add
xchg
and
iret
add
mov
xlat
mov
lahf
or
mov
cmp
push
add
call
cmp
lods
fiadds
lds
popa
ds
lock
loope
adc
movsl
je
cmpsl
xor
sub
ret
outsb
fadds
mov
bound
cwtl
push
xor
xchg
mov
les
je
mov
dec
shrl
mull
fldcw
or
inc
in
lods
pcmpgtd
jno
or
push
fcompl
lds
mov
add
loopne
fcomi
and
sbb
add
ficompl
add
xor
jns
fildll
xchg
fnstcw
mov
mov
add
add
cmp
sar
out
cmp
daa
inc
sbb
push
cwtl
in
xchg
xor
shl
dec
xchg
mov
xchg
call
in
fwait
push
fwait
pop
int3
fcomip
inc
cmp
or
xchg
das
repnz
xor
aaa
sub
call
push
push
xor
xor
outsl
fdivrl
pop
push
movsl
je
inc
out
aad
pop
xor
ret
clc
cs
leave
sbb
push
xorl
inc
or
jnp
xchg
mov
sub
pop
fsubrs
ret
xor
xlat
int3
sar
sbb
mov
push
outsb
cmp
lods
xchg
dec
sub
rorl
push
mov
clc
test
iret
aad
xor
and
or
xorl
mov
cmpb
xchg
sarb
mov
dec
cli
mov
jg
mov
push
adc
into
test
ret
pop
lea
call
lret
fcompl
mov
pushf
adc
sub
int3
pop
fdivs
or
mov
pop
adc
sub
xor
popf
dec
mov
out
xor
rol
fcoms
dec
cmc
jnp
or
addps
jne
call
rolb
aad
ja
cld
ret
test
ret
sbb
cmp
xchg
loopne
daa
fdivrs
inc
ja
xlat
and
push
pushf
insb
jl
jg
and
out
ss
gs
dec
stos
mov
mov
cmpsl
adc
inc
cs
icebp
nop
insl
push
cwtl
mov
adc
mov
inc
fists
int3
sarl
shlb
mov
adc
cmpsb
dec
jmp
ret
nop
pop
pop
std
sarl
xbegin
jp
dec
mov
jno
lea
push
push
inc
mov
icebp
push
add
jns
out
xor
sub
test
dec
sahf
or
les
cmp
int3
jb
scas
lock
mov
pop
push
mov
pop
inc
xchg
xor
test
sub
mov
pop
fs
mov
sbb
jecxz
into
push
in
push
pop
into
push
fnstenv
push
std
mov
sub
repz
js
pop
dec
dec
fisttpll
test
ljmp
jge
inc
stc
mov
add
mov
push
pop
pop
mov
xchg
test
sarl
inc
sub
jg
aam
and
mov
divb
das
lds
fstps
adc
dec
out
loope
sti
inc
outsl
jne
pop
stos
shrl
pop
inc
push
adc
add
cld
test
mov
push
mov
mov
xor
and
leave
pop
or
in
shl
ret
cmp
or
ljmp
cmc
xor
dec
fildl
sub
lret
dec
xchg
push
mov
push
mov
push
pop
sbb
add
adc
rcrb
mov
std
adc
push
push
or
mov
mov
daa
cmp
lods
push
mov
or
sub
adc
mov
in
push
mov
and
sbb
cwtl
in
mov
daa
lahf
insl
cmp
or
adc
sbb
lock
pop
mov
dec
or
pusha
jle
pop
jl
add
dec
subb
popa
dec
clc
test
fwait
sbbl
mov
cli
jae
fwait
js
mov
popf
push
and
jg
lret
push
pushf
ret
push
add
es
dec
loope
outsb
push
leave
adc
scas
scas
add
cmp
adc
subl
test
test
stos
or
pop
xchg
or
push
push
adc
push
xchg
aaa
push
or
mov
mov
in
call
and
push
fimuls
rcrb
ljmp
test
sarl
popf
mov
rorb
shrb
adc
sbbb
addr16
jecxz
popa
pusha
lods
hlt
pushf
movsl
jno
cmp
cmp
popa
push
scas
lcall
imul
jae
lea
mov
dec
xchg
test
xchg
imull
or
ret
add
lcall
fistps
jl
notb
add
sub
mov
fadds
mov
xchg
fcoms
dec
adc
aam
aas
push
and
adc
push
fwait
imul
cmc
out
dec
push
shrb
into
pusha
test
sub
or
push
cwtl
fsubrl
mov
lret
jge
mov
inc
test
enter
jmp
inc
aaa
xor
leave
lret
test
mov
jp
std
adc
push
andb
lret
repz
lret
aas
or
imul
iret
int3
ljmp
loop
leave
mov
scas
sub
xor
add
ljmp
cmc
or
std
jmp
out
inc
imul
aaa
mov
or
sarl
cli
sar
sbb
in
jbe
mov
pusha
dec
fs
or
cmpsl
scas
mov
pop
mov
out
das
xor
pop
adc
aam
clc
loopne
arpl
or
sub
pop
faddl
jge
jecxz
add
and
jge
jb
or
shrl
ret
mov
arpl
jle
cmp
push
jmp
daa
mov
xor
iret
sub
into
imul
fcmovnb
jne
mov
xlat
push
inc
mov
idivb
mov
ret
enter
cmp
cld
inc
mov
sub
sarl
test
push
push
xor
push
xor
dec
in
mov
jb
mov
push
cmpl
and
add
arpl
test
push
ret
mov
stos
or
jbe
int3
iret
mov
dec
jge
nop
les
lods
dec
jae
pop
push
lea
pop
test
nop
fiadds
nop
fbstp
adc
add
pop
fstpt
mov
cmp
and
adc
mov
popa
push
int
sbb
add
lea
mov
lret
mov
lods
dec
dec
mov
arpl
mov
and
mov
add
push
sbb
xchg
addr16
push
mov
dec
sbb
adc
cmp
call
int
cmp
sti
cltd
in
stos
clc
xchg
enter
jge
ds
jae
push
lods
mov
and
jbe
outsb
pop
in
mov
enter
ljmp
rep
hlt
popf
cmp
mov
mov
pop
ret
xchg
lcall
repnz
inc
mov
into
push
and
or
xchg
test
mov
push
or
jno
and
inc
cs
int3
sahf
fisttpl
mov
enter
push
sbb
in
mov
clc
sbb
push
sub
pop
push
cmc
mov
pop
adc
cmpsb
cli
in
adc
scas
cld
pop
jle
addr16
pop
mov
icebp
adc
incl
fdiv
and
dec
shl
es
loopne
inc
adc
mov
jbe
jno
pusha
out
push
xlat
stos
lods
lods
rcll
popf
mov
or
loope
lcall
aad
out
and
pop
inc
ja
repz
adc
jno
inc
bswap
fidivrs
inc
insb
popa
or
es
shrl
add
mov
fsubrl
mov
icebp
and
push
data16
mov
imul
and
jno
test
lods
mov
jo
ds
cltd
mov
xchg
dec
aad
cmp
lods
les
jne
notl
mov
aas
outsb
outsl
roll
arpl
push
jmp
xor
lahf
rcrl
sbb
leave
fistl
stos
lods
push
icebp
insb
push
cmp
cmp
adc
out
or
mov
add
jns
arpl
in
call
mov
cmp
sbb
sbb
pop
fmulp
enter
mov
pop
xchg
out
test
stc
sti
cwtl
push
clc
movsb
adc
enter
xlat
adc
insb
add
sar
or
cmpsl
push
jno
cmpb
or
push
insb
jmp
adc
hlt
outsl
out
lods
in
bound
sub
shll
cmp
mov
fdivp
push
rorb
in
imul
stos
pop
mov
mov
repz
xchg
cmp
in
jp
xchg
jecxz
xor
das
call
leave
ds
adc
mov
insl
xor
mov
fstpt
xor
pop
cmpsl
push
clc
push
mov
je
out
mov
cmp
out
cmpl
mov
pop
mov
scas
cmc
stos
add
les
and
cmpsl
leave
mov
xchg
mov
mov
jl
addr16
sub
mov
shlb
sub
inc
pop
xlat
cmp
pop
sbb
mov
xchg
mov
into
push
xor
push
dec
dec
xor
hlt
scas
scas
cld
aam
and
aas
jb
jle
int
cmp
inc
mov
in
lret
mov
rorb
mov
ret
xchg
aam
fcoms
daa
mov
fcomps
pop
sbb
insl
cwtl
and
or
scas
cmpsb
mov
movsb
push
cmpsl
ljmp
xchg
push
xchg
jecxz
test
cmp
les
sti
je
daa
mov
mov
sub
xchg
aad
enter
mov
lcall
addr16
cld
popf
pop
and
dec
and
into
fists
loopne
add
aam
mov
pop
dec
movsl
mov
aad
and
cs
inc
mov
sbb
pusha
jle
xlat
or
dec
dec
in
jp
icebp
lea
hlt
icebp
push
hlt
mov
movsb
jno
addr16
xchg
push
clc
mov
cli
int
xchg
movsl
lret
cmc
sbb
adc
outsb
out
ret
adc
adc
sub
adc
rclb
dec
xchg
jmp
sub
fstps
das
push
out
mov
hlt
aas
popf
lods
or
popa
dec
sub
add
adc
lret
data16
dec
ficoml
inc
lret
int
loope,pt
lods
xchg
xchg
insl
inc
mov
test
mov
dec
scas
push
dec
pop
or
adc
call
or
adc
rorl
adc
push
push
pop
in
adc
jecxz
ds
popf
outsb
data16
adc
push
fdivrp
call
jnp
int
push
adc
cmp
fwait
mov
addl
icebp
sbb
lret
shlb
or
icebp
xor
xor
jle
arpl
jecxz
add
xchg
add
adc
nop
loop
xchg
pop
popa
int
fnstenv
jle
jle
daa
mov
pop
shrl
out
sub
pop
jne
dec
lods
sub
xor
dec
repnz
enter
mov
adc
add
stos
cmp
and
addr16
outsl
inc
inc
lea
xor
je
or
push
and
test
adc
mov
jno
fsubl
sbb
lods
lcall
and
in
sub
pop
xor
pushf
or
mov
and
inc
ljmp
mov
mov
cmp
xchg
in
push
lea
sbb
pop
das
and
sti
adc
push
inc
add
inc
pop
in
cmp
pop
dec
mov
subl
adc
sub
into
sarl
xor
rcll
sarb
std
jbe
push
hlt
jae
lret
xor
and
imul
jb
push
adc
aam
xchg
movsl
pop
cmp
jg
stos
xchg
nop
xchg
int
mov
sub
add
js
popa
arpl
dec
jg
jle
ss
mov
jg
mov
jns
and
cli
xor
pop
jb
push
fldenv
test
inc
hlt
les
mov
jb
cwtl
or
dec
inc
fdivrs
out
cmp
cwtl
mov
dec
pop
loopne
pop
sub
fst
iret
pushf
push
enter
call
popa
popa
jns
push
jl
cmpb
ret
pusha
mov
and
mov
stos
sbb
pushf
cmp
js
stc
xchg
fs
xor
int3
jmp
mov
sub
and
mov
dec
cmpsl
sub
sub
incb
movsl
push
jp
add
xchg
ds
push
loopne
lcall
out
pushw
sti
mov
and
incl
pop
adc
stos
xor
inc
leave
test
pushf
pop
ljmp
push
xor
push
dec
outsb
movsl
hlt
mov
push
cli
loopne
adc
shll
sbb
adc
mov
add
add
rcll
mov
in
jbe
into
fnstenv
adc
fcmove
xlat
test
mov
lahf
pop
movsb
pop
in
mov
leave
dec
shrl
xchg
add
fdivrs
jb
jmp
inc
int
push
popa
fsts
jmp
xor
stos
xor
xchg
popf
mov
subb
cli
push
sti
pop
cmp
adc
scas
fwait
data16
mov
xchg
shl
adc
cltd
cmp
push
sbb
adc
sbb
xchg
mov
stos
repnz
jg
xchg
bound
push
mov
sar
inc
loope
hlt
aaa
subl
es
insb
add
sahf
jl
cld
jle
adc
ret
add
mov
jge
fs
ret
roll
adc
xorb
repz
out
xchg
pop
push
jo
pop
incb
in
xor
loope
or
call
loop
cwtl
add
push
enter
iret
scas
mov
jno
or
push
mov
inc
xlat
jb
sub
insb
cli
hlt
pushf
lcall
lds
shlb
sub
cli
sub
cmpsl
test
sub
and
jo
and
ret
sbb
daa
sub
fisubs
cmp
jno
sarb
push
shl
jge
les
into
dec
cmpl
scas
fwait
rorl
daa
push
jecxz
and
sub
sub
cmp
mov
jns
iret
pop
cmp
mov
fistps
adc
dec
mov
push
pop
xor
xor
stos
rorl
lods
sub
fisttpl
outsb
xor
mov
jge
repnz
lock
hlt
lcall
icebp
mov
adc
adc
into
insb
aaa
dec
pushf
adc
cmpsl
arpl
sbb
sbb
jge
xlat
inc
mov
clc
sbb
add
pop
out
cltd
adc
insb
test
inc
daa
arpl
cmpsb
loop
mov
xor
test
adc
out
jl
xor
mov
idivl
leave
call
sar
gs
jbe
shll
xchg
push
adc
mov
je
sbb
insl
xchg
sbb
scas
arpl
xchg
mov
out
adcl
push
shrl
js
inc
lret
orb
jg
leave
cmp
add
or
dec
xchg
mov
mov
inc
cmp
adc
cmp
cld
lret
mov
pop
xorb
rcr
movsl
ss
add
hlt
sub
xor
pop
dec
cmp
pop
shlb
dec
push
dec
cmpsb
lret
adc
mov
sub
pop
xor
or
roll
sarl
xchg
adc
loopne
imul
lods
fidivs
stos
dec
movsl
pusha
pop
and
push
je
mov
test
push
lret
int
mov
lock
les
daa
sub
movsl
mov
enter
dec
push
fistl
sarb
mulb
mov
lahf
sbb
stos
xchg
lahf
or
les
sub
jp
xor
cmpsb
mov
or
xchg
pop
xor
mov
add
icebp
es
mov
cld
xchg
in
cld
add
leave
pop
lea
loopne
sbb
pop
inc
std
push
sbb
mov
or
pop
fcoml
bound
movsb
pop
jmp
jle
jno
test
cmp
xor
or
call
sbbb
or
push
cmp
xor
cmc
jmp
add
popa
jno
and
jl
or
or
outsb
dec
mov
aam
sbb
sbb
fidivrl
pop
sbb
xchg
adc
inc
out
inc
clc
cld
mov
stc
adc
out
cmpsb
ja
clc
mov
push
cmp
ret
cmc
mov
test
cmp
loop
loope
das
xor
in
jb
cmp
cmp
enter
inc
testl
subl
lcall
mov
es
add
jae
cli
cli
adc
shl
loopne
adc
je
or
mov
dec
jne
sub
mov
sbb
xor
mov
pop
mov
xor
fistpll
into
mov
xchg
popf
lds
fsubr
cmpsl
stc
arpl
arpl
or
sbb
sbb
push
jmp
mov
sub
jb
inc
or
cmpsl
add
aas
call
jmp
jo
cmpsb
xchg
xchg
out
cwtl
iret
leave
sub
inc
jnp
lcall
inc
and
sbb
mov
cmp
xlat
in
not
aaa
sti
fdivl
jl
sub
xor
movsl
and
xchg
sub
pop
add
test
jmp
cmp
push
sbb
aaa
dec
pop
inc
ja
lods
icebp
jg
js
pop
adc
iret
test
push
and
scas
pop
fists
bswap
cmp
xchg
bnd
mov
sub
jb
repz
js
into
fnstsw
cs
mov
lods
cmp
mov
pop
jne
xor
lea
inc
mov
hlt
jg
repz
add
fisubrs
outsl
repnz
enter
pop
mov
fiadds
cmp
aad
add
fwait
cmp
js
sub
in
add
and
push
sub
cmp
ret
nop
int3
jo
adc
dec
clc
push
xor
popf
mov
mov
pop
or
jl
adc
xchg
mov
mov
lods
nop
repz
daa
andb
fs
or
daa
cmc
cld
faddp
repnz
in
inc
push
ret
dec
mov
loop
ror
fdivrs
xorb
adc
cs
mov
cmp
mov
ret
adc
mov
in
int3
outsl
mov
clc
push
jo
cmp
cmp
setno
nop
pop
mov
sbb
ljmp
jno
out
lock
mov
stos
out
bound
in
stos
cmpsb
push
jo
or
adc
mov
orb
xor
mov
push
push
rep
push
loop
mov
in
sti
pop
sbb
jmp
fstps
push
cmp
pop
bound
sarl
pop
rol
mov
pusha
jbe
mull
popf
adc
outsb
jle
or
out
repnz
cmp
je
imul
dec
sub
pop
std
xor
pusha
mov
adc
mov
xchg
sub
int
mov
or
pop
je
xchg
xor
and
lcall
mov
push
mov
pop
lret
jg
pop
hlt
push
mov
dec
iret
popa
xchg
in
scas
push
je
push
pmulhuw
xor
mov
mov
lods
sbb
je
data16
testl
outsb
pop
push
subb
shll
mov
dec
movsl
popf
xor
shr
nop
add
into
lods
idivb
xor
push
int3
adc
xchg
inc
ds
leave
adc
adc
jl
push
in
mov
int3
ret
clc
mov
add
ljmp
pop
incl
stc
jae
jne
jle
fadds
xchg
stos
imul
scas
fldcw
loop
sub
push
cmp
inc
inc
push
outsb
xorl
mov
aam
jbe
xor
jne
outsb
or
jne
pop
adc
push
mov
mov
popa
dec
xor
repz
push
ljmp
int
bnd
jne
fsubrl
sub
pop
fucom
pop
xor
push
cmpsb
mov
sbb
or
test
stos
jl
andb
pop
pop
sub
cld
inc
jg
leave
jp
adc
adc
into
jp
mov
mov
je
sbb
pusha
sarl
sub
jecxz
pop
inc
shl
push
jge
pop
cld
xor
pusha
test
sub
dec
sbb
sbb
insl
mov
mov
stos
insl
and
xchg
jl
and
push
jge
mov
mov
cltd
testl
cmp
mov
out
lods
xor
inc
inc
push
movsl
std
jae
mov
cmp
les
mov
imul
xor
int3
in
sbb
inc
and
das
fcom
xchg
jbe
orb
es
pop
fmul
sbb
and
push
mov
pop
pop
sbb
rolb
adc
adc
push
mov
jge
push
mov
negb
sub
push
lcall
inc
jle
sub
pop
shrl
cmp
xor
popf
adc
mov
in
fldt
mov
pushf
jo
out
mov
scas
xor
xchg
sarb
xchg
sbb
cmpsl
insb
inc
sub
movsb
lret
dec
sbb
aad
mov
or
arpl
cmp
xor
arpl
insl
inc
ljmp
decl
xchg
ss
sbb
mov
cmp
aaa
inc
adc
mov
cltd
mov
dec
push
inc
xchg
std
dec
sbb
ja
aad
adc
or
fcoml
fiadds
cmp
push
insb
jp
push
addr16
fwait
xor
xor
stc
aam
xchg
insl
push
mov
xlat
aaa
push
stos
lret
punpckhbw
add
mov
ret
sbb
fdivrl
xchg
cmp
in
sub
scas
mul
test
adc
sti
add
mov
int3
aad
sbb
rorl
dec
inc
filds
pop
adc
ret
movsb
jb
imul
sub
sub
push
xchg
xor
mov
sbb
rcrb
adc
mov
rcll
dec
jnp
loopne
test
std
mov
mov
mov
ds
andl
pop
cmp
pop
mov
pusha
lock
xchg
push
push
loope
rorl
lret
inc
dec
mov
cmp
and
aam
push
mov
adc
loop
jl
cmpsb
dec
cld
clc
and
mov
es
movsl
or
shlb
je
mov
inc
adc
or
cmpsl
sub
insl
xchg
imul
sbbb
jns
jbe
sbb
xchg
insl
mov
arpl
sub
sub
inc
push
push
icebp
xchg
test
orb
rcll
push
mov
shrl
dec
scas
jp
lds
cmpsl
in
std
mov
sbb
fs
dec
ja
dec
jb
in
xchg
jno
fadd
dec
sub
push
in
jae
enter
push
cmp
lods
ret
cmc
push
mov
lret
sti
xchg
cmp
xchg
repz
cmpsb
push
int3
push
push
jbe
xor
or
mov
xor
mov
inc
cmp
mull
push
xchg
aaa
repnz
dec
adc
rorb
inc
mov
stc
push
sbb
jle
aam
inc
sbb
jle
cmc
jecxz
mov
add
sbb
and
in
bound
jae
in
pop
pop
iret
cmp
sbb
aaa
jb
call
ds
lret
add
sti
pop
xchg
jo
xor
pop
jle
addr16
mov
fisubs
stos
sahf
xchg
dec
dec
dec
outsb
xor
pop
in
movsb
lcall
xchg
pop
pop
pop
sarb
push
inc
test
cli
jmp
repz
mov
sbb
xchg
repnz
ret
pop
in
das
xor
pop
mov
mov
popf
fcompl
pop
hlt
dec
adc
adc
scas
fistpll
lret
inc
lea
out
jmp
test
sub
or
and
mov
sbb
jbe
mov
and
cli
xorl
add
mov
mov
mov
mov
loopne
scas
inc
shll
loop
pop
mov
repz
add
push
push
cmc
popa
loop
sbb
cmp
inc
adcl
mov
sti
enter
fsub
dec
fstl
pop
fwait
jle
out
hlt
jmp
enter
mov
dec
out
sbb
pop
test
fdivrl
jge
ror
lods
push
mov
jne
imulb
scas
sbb
hlt
enter
out
out
cmp
and
jle
adc
jo
mov
repz
sbb
jmp
or
mov
add
xchg
mov
jecxz
mov
xchg
ficoms
cmpsb
fldl
fucomip
dec
mov
lahf
sbb
push
inc
ret
call
into
push
pop
cmp
ja
add
inc
std
jb
mov
adc
sbb
pop
sbb
fistpl
sti
mov
add
inc
adc
dec
xor
or
push
push
sub
and
gs
les
int3
popf
push
mov
dec
aad
mov
push
insl
rcl
gs
adc
push
sub
pop
repnz
shrb
inc
cmpsl
fldt
sub
mov
inc
outsl
pushf
rcll
fldcw
jg
jg
loope
ret
jge
xchg
push
xchg
outsl
into
pop
xor
sbbb
xor
scas
mov
and
push
mov
fcmovu
jb
mov
push
lods
push
fsubrs
mov
push
add
add
mov
stos
sbb
outsl
pop
sti
mov
aam
jecxz
and
pusha
stc
mov
addb
mov
int
das
push
mov
jp
les
pop
shrb
cmc
mov
cmpsb
orb
pop
cmc
adc
pop
push
jnp
dec
sbb
outsl
and
and
in
xchg
jg
popa
mov
jae
popf
dec
add
fcoms
mov
fisttps
inc
jns
daa
dec
lcall
inc
out
cld
cld
rolb
jb
sbb
mov
or
dec
cltd
sbb
push
sub
repz
push
icebp
fdivrl
sbb
rolb
push
sbb
push
shl
inc
and
xchg
mov
or
pop
ljmp
cmp
xchg
mov
push
dec
xor
movsl
into
aas
inc
push
ljmp
repz
mov
aam
mov
and
xor
sub
sar
xlat
fiadds
jg
stos
ja
push
fdivrp
out
mov
scas
pop
outsb
stos
test
cli
mov
xchg
inc
cmpb
pop
adc
mov
push
xchg
fnstsw
cmpsb
lmsw
repz
push
sub
cwtl
loop
sti
mov
test
jg
xchg
test
sbb
sbb
xor
cmp
inc
xor
push
mov
lock
xor
and
xor
xor
lds
out
int
cwtl
insb
sub
ds
in
add
in
adc
and
in
cmc
jnp
movsb
in
add
loope
mov
push
imul
sub
mov
pop
out
cmp
std
outsl
xchg
add
insb
mov
push
test
lret
lret
xlat
cmp
outsb
sbb
adc
xchg
fiaddl
dec
mov
mov
jecxz
int3
mov
out
jnp
sub
in
mov
and
jo
mov
pushf
dec
aas
jge
fs
fimuls
jo
or
mov
arpl
das
mov
lahf
rolb
shll
fistpll
jno
mov
testl
fdivrs
sbb
push
daa
aam
xor
push
sbb
and
loopne
xor
testl
and
xor
inc
push
jp
repnz
mov
jg
or
adc
mov
add
push
dec
stos
fisubs
rolb
xchg
scas
mov
xorl
je
iret
int
mov
pop
iret
out
inc
gs
imul
push
sub
and
mov
mov
fcomp
int3
test
ljmp
inc
inc
test
std
test
lods
sbb
inc
mov
xchg
xor
xchg
mov
sub
inc
ffree
inc
push
fildl
mov
mov
popl
cli
xchg
xchg
hlt
jae
pop
dec
mov
lret
dec
cltd
pop
xor
sub
sub
out
inc
lahf
sbb
mov
mov
out
jno
pmulhw
or
lock
add
xchg
sbb
enter
aad
push
push
movsl
aaa
add
and
push
mov
repz
shll
jl
mov
adc
push
cli
je
cwtl
push
fstl
pusha
enter
sbb
mov
dec
test
jne
adc
mov
jnp
and
mov
fisttpl
push
dec
mov
lret
inc
sahf
clc
fcomip
sub
stos
lret
clc
mov
outsb
cs
popf
cmp
xlat
je
clc
in
ret
sub
enter
addr16
rcr
pop
out
prefetch
sbb
xchg
aas
push
adc
xchg
add
add
in
pop
xchg
xchg
xchg
clc
and
rorl
je
add
adc
es
not
sbb
outsl
pop
insl
movsl
and
or
adc
std
push
push
sahf
lret
enter
mov
dec
popf
cmc
jae
fbstp
xor
scas
xor
int
adc
jo
std
sub
push
xchg
fscale
pop
outsb
fdivrs
cltd
lods
add
sbb
repz
hlt
fwait
dec
cmp
subb
adc
push
test
aam
subl
xchg
out
inc
mov
not
inc
jle
stc
inc
sub
loop
fstl
stos
repnz
jb
inc
and
fcompl
jnp
leave
test
and
enter
arpl
icebp
jg
add
jecxz
bswap
sti
sti
mov
inc
outsl
pop
fcomp
xchg
mov
sub
adc
jne
insl
mov
lods
idivl
loope
repnz
push
adc
push
pop
int
mov
mov
call
inc
test
std
repz
js
flds
into
pusha
cli
stos
jae
sbb
in
and
inc
loopne
sbb
mov
push
andl
pop
lcall
mov
mov
repz
xor
je
adc
push
daa
sub
jae
cld
pop
pop
test
push
inc
rcll
add
jle
add
and
imul
cmp
cmpsb
popa
pop
pop
add
pop
cmpsl
or
jns
mov
adcl
outsl
mov
lret
jp
test
dec
repnz
cld
xchg
pop
mov
add
repnz
cwtl
cmpsl
pop
ja
push
aam
loop
mov
xor
fistpll
jge
adc
or
js
lcall
sbb
and
sahf
scas
shl
dec
lods
sahf
add
gs
insb
pusha
int3
popa
shll
cmpb
mov
adc
sub
pop
pop
or
mov
add
insb
dec
pusha
cli
xor
rolb
loope
outsb
or
cmp
outsb
cltd
mov
mov
test
out
loop
leave
or
jp
aam
sbbl
add
pusha
mov
cmp
fldl
xchg
mov
es
xor
iret
paddw
dec
mov
jle
fidivl
mov
inc
and
push
mov
cmpsl
push
data16
mov
add
ffree
cs
call
xchg
or
jg
pop
nop
pop
cmc
pop
push
repnz
pop
lcall
cmp
pop
popw
mov
add
cltd
imul
push
mov
mov
push
les
inc
shr
xor
fldenv
sbb
pop
xchg
cmp
cltd
jle
daa
stos
dec
ror
add
test
dec
popa
lahf
in
lret
pop
push
xor
js
cmp
or
loope
insl
outsl
dec
sarl
in
mov
adc
aaa
pop
jo
cmpsb
xor
fidivl
fistps
pop
xchg
imul
mov
sub
cwtl
rorb
inc
mov
inc
scas
lcall
sub
adc
insl
pop
je
xchg
fdivrl
push
icebp
pop
and
insb
pop
icebp
xchg
testl
popa
idiv
mov
xchg
mov
outsl
and
icebp
popa
dec
cmovl
out
pop
lahf
sbb
shl
int
in
pop
not
fsubrs
fdivr
and
xchg
outsb
inc
fnstenv
outsl
xchg
ficoms
adc
cmp
mov
inc
imul
push
mov
jp
cmp
dec
fs
pop
movsb
sub
subb
out
mov
sub
sub
jnp
loope
dec
mov
pop
pop
and
into
jo
fdivs
cmc
mov
push
int3
jmp
sbb
fcoms
xchg
outsb
xor
shlb
push
cmc
sbb
mov
lds
js
dec
negb
add
mov
and
icebp
sub
into
out
aaa
arpl
mov
idivb
fidivrl
and
add
das
hlt
loop
les
add
cli
aam
imul
xor
mov
aam
lock
stc
orb
cmp
xchg
out
into
repnz
xor
sbb
push
push
std
adc
out
jb
push
repnz
std
mov
xchg
mov
out
jbe
xchg
pop
inc
shrb
in
push
pop
jbe
inc
cmp
push
and
xchg
popf
cmpsb
es
xor
mov
outsl
jle
mov
jle
xchg
js
dec
inc
cmp
cmc
xchg
mov
mov
inc
call
bound
fwait
inc
std
jno
aaa
aad
aaa
mov
xorl
pop
xchg
pop
cmpb
mov
add
xchg
xor
cld
sub
in
mov
inc
stc
lret
insl
xchg
lcall
gs
movsb
data16
ja
js
out
mov
cmp
push
pop
sub
int
les
and
les
leave
mov
push
cs
xchg
cmp
and
sub
in
idiv
sub
or
lahf
push
inc
into
lret
pushw
jmp
sbb
inc
pusha
mov
pop
lcall
push
pop
xor
bound
mov
out
push
stc
mov
subl
adc
mov
imul
adc
cs
leave
cs
jge
jns
pushf
mulb
aas
call
fadd
jge
xor
jo
movsl
or
pop
adc
mov
mov
mov
ret
inc
cmp
fnclex
xchg
pop
lcall
leave
inc
push
loopne
imul
pop
inc
popf
xchg
pushf
dec
jns
add
sti
aam
jge
xchg
inc
les
aad
fstpl
sahf
mov
jae
mov
mov
xlat
inc
xor
push
sbb
mov
out
je
fsubr
or
sbb
inc
sbb
mov
cmp
sub
and
popf
lret
and
inc
pushf
rorl
pop
sar
lds
lcall
xchg
in
cmpsl
divb
addr16
stc
pop
call
ljmp
popa
mov
mov
add
cmpb
inc
loopne
pusha
in
add
aaa
popa
sub
sar
sub
ja
fiadds
popf
aaa
clc
mov
sbb
pop
or
adc
and
scas
daa
and
xchg
and
sbb
js
cmc
or
inc
dec
xor
mov
rorb
loope
cwtl
enter
jg
cmp
fs
rcrl
mov
add
sbb
jne
adc
pop
mov
popf
clc
shl
sbb
ja
je
mov
scas
lea
popf
adc
xlat
push
dec
repnz
arpl
addr16
pop
mov
sbbb
jle
cltd
hlt
outsl
push
hlt
inc
fmull
push
je
sub
lahf
inc
mov
cmp
cmpsb
ret
popf
sarl
lods
xor
mov
jp
jmp
xor
mov
test
jbe
pusha
mov
dec
test
stos
in
xor
lea
in
fnsave
aam
testl
outsl
xchg
cli
imul
pop
mov
or
xchg
jno
out
xchg
push
mov
sbb
mov
ret
add
jle
popf
mov
mov
enter
cmpsl
push
pop
fwait
mov
cltd
adc
int3
jmp
mov
mov
dec
test
popf
stos
mov
sbb
pushf
xchg
jmp
mov
das
push
in
scas
in
sbb
andl
xchg
mov
ja
aas
and
fcmovne
mov
push
test
xor
adc
arpl
dec
push
mov
push
repnz
scas
jne
mov
mov
mov
sub
mov
cli
rolb
lods
dec
ja
cmpsl
das
sbb
push
inc
xchg
mov
sub
pop
outsl
out
jecxz
adc
jge
cmp
insb
xchg
push
sbb
ds
inc
mov
sahf
mov
iret
in
mov
aas
or
push
cmp
mov
ljmp
test
mov
inc
pop
push
std
add
repnz
arpl
aaa
sub
lods
xor
fldl
stos
pop
out
sahf
rcl
iret
pop
xlat
in
and
pop
dec
inc
mov
sbb
jne
xor
xor
xchg
js
test
loope
jle
fcompl
cli
and
mov
ficoms
sets
std
mov
js
leave
push
lds
inc
aam
pop
dec
lcall
xor
loop
jbe
loop
jmp
push
insl
in
mov
mov
insb
clc
hlt
lds
push
sub
inc
mov
divb
cli
pop
in
and
sahf
jbe
daa
adc
xchg
mov
fcmovnbe
cwtl
shlb
in
jl
or
shlb
sbb
incb
cmp
add
sbbb
lock
es
sysenter
xchg
andb
push
xchg
fadds
adc
pop
enter
into
imul
sub
add
int
sar
loope
push
lret
lock
bound
stos
insl
fsubrs
leave
sbb
idivb
rorb
mov
lock
test
sub
iret
mov
dec
or
es
xor
iret
mov
adc
bound
mov
bound
stos
mov
ret
xor
cmpsl
mov
adc
xchg
andb
aaa
rorl
movsb
sarl
cmp
pop
jg
ss
outsb
xor
data16
pushf
test
rorb
pop
sub
rorl
cld
xchg
dec
dec
pop
push
loope
and
mov
into
mov
inc
stos
xchg
inc
adc
sbb
fisubrl
pop
outsb
pop
and
bound
je
arpl
inc
jg
jg
adcb
push
adc
aas
lods
enter
in
in
dec
add
ficoml
inc
lods
fsubs
call
pusha
sbb
pop
lea
pop
sbb
and
cmc
mov
xchg
enter
popf
loope
push
inc
xor
inc
fsts
jno
mov
arpl
cmp
inc
rolb
cmp
mulb
call
stos
dec
in
xchg
dec
lret
xchg
fildl
ret
sar
loop
pop
sarb
aas
cmp
notb
shll
add
push
dec
jl
shl
insl
inc
push
sahf
ret
pop
lods
dec
inc
cmp
cmp
mov
inc
hlt
sub
mov
cs
push
add
imul
lret
bsr
pop
pop
inc
clc
pop
out
and
sub
cmp
adc
gs
xor
and
add
sarb
xchg
aam
loope
mov
xlat
aad
push
cltd
mov
jo
lahf
dec
ss
es
popf
xor
nop
adc
inc
push
xor
push
dec
cs
sub
add
jmp
fildll
xorb
mov
push
faddp
push
cmc
fldcw
pushf
in
gs
imul
pop
xor
and
add
push
push
adc
ret
insb
cmp
cli
push
loop
and
cwtl
ss
out
fwait
cld
adc
call
shlb
ss
into
sub
repnz
inc
rclb
or
dec
insl
cmpsl
and
push
add
sub
inc
popf
leave
lock
sub
cmp
jbe
int3
sub
jmp
push
ficoms
cmpsb
mov
sub
and
add
test
enter
lahf
int
pop
mov
sub
repnz
xor
test
xor
stos
inc
push
jns
addb
adc
clc
jecxz
sahf
xor
fsubrs
pushf
mov
sub
aas
xor
in
inc
cmc
adc
push
insb
sbb
pusha
int3
jbe
fldl
lea
ss
popa
cmp
arpl
enter
cmp
andb
lcall
mov
addr16
insb
fdivs
pop
xchg
fbld
adc
insl
loop
mov
lahf
or
out
pop
shlb
loop
adc
dec
push
mov
ljmp
je
aad
lcall
ss
push
in
lret
mov
lret
jle
adc
scas
add
test
mov
sub
xor
out
out
push
les
aaa
push
jmp
jno
fwait
jne
pop
out
dec
mov
inc
add
cmp
and
movsb
in
std
mov
inc
fdivrs
pop
outsl
push
out
ja
cwtl
sar
lea
inc
mov
lods
jae
call
jmp
outsl
dec
or
sbb
inc
jmp
cmp
in
or
and
adc
sub
inc
jg
cmp
imul
pop
and
cmp
js
rorb
gs
aas
scas
lods
push
addl
sbb
mov
inc
or
dec
push
cmp
push
xchg
mov
xchg
xchg
stos
test
push
out
push
pop
mov
out
adcl
lods
dec
or
out
outsb
inc
inc
popf
mov
imul
bnd
mov
jb
mov
sti
outsl
inc
push
add
add
das
dec
pop
lahf
and
jnp
add
pop
sbb
push
inc
lahf
es
out
lret
sub
mov
mov
mov
cmp
inc
ja
mov
dec
jne
inc
push
cmpsb
jge
je
mov
mov
add
movsl
lock
scas
inc
leave
repz
ds
add
mov
or
dec
mov
fisttps
or
mov
out
fisubrl
mov
sub
xchg
fs
pop
jns
test
or
out
int3
lret
sbb
gs
cmpsl
push
push
xorl
int
xor
lret
aad
inc
and
mov
test
jae
out
cmp
mov
shlb
imul
xchg
inc
scas
lds
out
out
repz
mov
stos
inc
int3
adc
and
fwait
cmpsl
dec
shrl
inc
dec
and
jp
out
js
mov
pop
out
imul
mov
xor
lock
mov
dec
sahf
ss
lods
and
push
jg
leave
and
sub
mov
or
sbb
rep
add
rorb
dec
ret
int
jae
xchg
popf
enter
push
dec
stc
mov
mov
inc
add
sbb
lea
cmp
test
sub
jle
fcoml
add
fsubr
add
cs
xchg
adc
sbb
lock
jno
mov
add
or
dec
jns
mov
add
cmp
add
imul
jbe
mov
push
cmp
js
je
jecxz
inc
loope
xchg
insl
jecxz
mov
jg
outsl
cmp
pop
dec
pop
rcrl
fs
push
in
insl
out
mov
dec
and
call
ja
adc
leave
add
fcomps
aam
test
pop
scas
adc
xchg
into
iret
pop
imul
std
sbb
push
inc
inc
or
or
sub
scas
pop
dec
nop
shll
inc
loopne
es
mov
cmp
adc
pop
mov
sub
repnz
sub
lret
test
push
xlat
daa
push
mov
inc
aas
mov
push
and
xor
cmpsb
int
xchg
xor
and
movsb
push
int
scas
data16
out
mov
clc
or
arpl
dec
mov
jbe
mov
xlat
jbe
mov
into
shrl
sub
push
xor
mov
sbb
aam
push
xchg
frstor
into
xor
jno
test
insl
jbe
aas
mov
mov
testb
out
push
cmpsl
sbb
test
add
prefetcht0
test
or
mov
stos
mov
shr
je
movsl
and
mov
jmp
arpl
and
repz
pop
enter
in
pushf
xchg
repnz
imul
outsb
iret
notl
xchg
and
mov
jne
cmp
add
jmp
xchg
sbb
dec
xlat
pusha
cld
dec
shlb
pushf
fcomp
mov
cld
add
in
inc
inc
mov
jp
xor
ss
data16
and
push
sti
and
lods
out
in
pusha
dec
adc
ds
sub
xchg
mov
mov
or
inc
cli
pop
jne
andl
pop
add
fmull
fldl
out
mov
sub
in
and
jbe
stos
jo
ret
ret
out
je
cmpsl
and
pushf
insl
inc
repz
pop
inc
add
mov
out
nop
mov
mov
mov
push
mov
add
add
mov
mov
into
ds
inc
in
int3
dec
mov
test
cli
pop
aas
mov
in
jae
add
jnp
mov
in
pushf
nop
pop
mov
xchg
js
push
ljmp
lret
test
push
ds
test
push
mov
mov
lcall
fisttpl
dec
negl
cmp
jle
lret
cltd
push
pushf
hlt
adcb
push
ret
mov
movsl
addr16
ret
mov
or
mov
add
in
jp
outsl
movsl
aaa
mov
test
daa
lret
movl
xorl
dec
and
insl
test
mov
mov
mov
imul
js
cld
scas
sub
ja
aaa
push
or
out
shlb
jecxz
roll
mov
push
pop
or
lds
mov
negl
es
push
mov
adc
addr16
mov
xchg
fldl
xor
ror
decb
add
adc
mov
insl
and
ds
or
pop
inc
js
nop
xchg
and
dec
lret
or
inc
add
inc
ljmp
pop
fistpll
inc
shrb
sti
sahf
mov
scas
repz
popa
pop
mov
call
xchg
mov
stc
mov
cmc
leave
xor
js
jae
lcall
stc
sti
jle
jmp
lret
jecxz
add
jbe
jmp
cli
imull
sub
aad
add
mov
insb
icebp
mov
mov
fistpl
jmp
xor
les
lahf
xor
out
ret
testl
xor
andl
imul
push
push
jne
or
mov
fucom
shll
imul
in
jl
mov
lods
cmp
out
cld
adc
lcall
dec
push
inc
scas
sti
push
xorl
sarb
pop
jb
adc
adc
mov
sarl
or
emms
pop
cmp
jnp
cmp
xchg
shl
or
jnp
or
or
cltd
pop
test
jle
cld
push
inc
sbb
mov
xchg
dec
icebp
and
add
repnz
fisubs
outsl
mov
xor
add
lea
in
push
xchg
dec
xchg
sbb
mov
inc
scas
jnp
push
out
pop
xchg
ret
lcall
mov
sbbb
shll
and
lea
xchg
insl
mov
jne
inc
es
mov
lcall
mov
rorb
mov
sbb
insb
pop
jle
js
into
push
shll
stc
lcall
addr16
test
dec
push
push
mov
shlb
sub
sbb
adc
mov
repnz
movsb
mov
inc
mov
lret
push
cmp
or
mov
xchg
xchg
rolb
dec
sub
xchg
sbb
testl
repz
insl
xchg
rcrb
dec
sbb
and
mov
iret
pop
pop
mul
xchg
repz
xor
mov
push
cmp
fcoms
cmp
pop
xor
sbb
cld
xlat
fcomip
and
fistps
in
bound
xchg
mov
cmp
or
xor
push
loop
ret
mov
outsl
jmp
inc
cmp
pop
icebp
mov
dec
mov
outsb
sbb
cmp
in
mov
mov
dec
push
icebp
test
aam
xor
outsl
dec
xchg
push
mov
jbe
sub
in
sub
loope
jae
mov
fiadds
inc
cmp
mov
test
mov
lods
add
ljmp
out
and
inc
stos
sub
or
popf
stos
mov
xchg
aas
inc
dec
push
clc
adc
data16
jg
mov
xor
jo
inc
gs
mov
repz
mov
fs
cltd
in
out
bound
pop
rcr
popf
add
push
out
and
jmp
add
cmpsl
mov
stos
sbb
xor
adc
cmp
cli
fnstenv
xchg
fiaddl
fwait
out
add
dec
cs
fbld
ljmp
scas
lock
cmpsl
int
getsec
lea
cmp
fdiv
cmpsb
fildll
adc
int
pop
inc
sub
loop
inc
sub
aam
pop
cs
nop
imul
xchg
mov
mov
popf
push
pop
int
in
sbb
cmp
fdivrs
or
mov
scas
mov
add
lock
adc
subl
jns
mov
dec
cmpsb
in
movsl
es
negl
xor
jbe
ljmp
data16
push
in
call
imul
cmpsb
mov
es
pop
loop
jo
stos
lea
int
rcr
and
fs
mov
div
les
or
adc
adc
enter
add
mov
fimull
bound
fdivr
iret
push
rcrl
fucomi
xchg
push
mov
inc
jl
mov
fisubrs
sbb
aas
and
adc
mov
xor
pop
push
push
pop
push
mov
iret
movsb
mov
xchg
jb
cmpsb
xchg
pop
push
test
cli
test
sarl
adc
js
cs
fldenv
mov
imul
lahf
push
xchg
lea
sti
loop
pop
cmp
bound
xor
in
or
adc
es
sti
mov
ret
dec
sbb
lcall
adc
insl
jp
stos
subb
xchg
push
sbbl
xchg
mov
adc
mov
push
sti
arpl
mov
inc
push
adc
outsb
inc
dec
data16
jno
mov
dec
pop
push
mov
lcall
shlb
ret
fsub
xchg
jb
cmpl
and
mov
rcrb
inc
jnp
pop
stos
sub
mov
int
mov
popl
push
add
in
loop
fs
cmpl
ret
cmp
push
xchg
and
or
test
int3
imul
and
clc
aaa
and
sbb
sti
add
inc
pop
mov
fs
es
mov
jmp
xor
mov
sub
roll
fs
pop
les
mov
inc
pop
repz
in
mov
add
push
pop
mov
fmull
lds
sti
adcl
movsb
ja
push
jb
cmp
cs
push
fwait
repnz
enter
adc
out
es
aam
mov
push
sbb
outsl
dec
testl
jl
cmpsl
in
push
or
pop
jl
xchg
xchg
mov
mov
popl
test
mov
jg
movsl
std
push
pop
mov
es
xor
mov
shll
add
fs
jbe
mov
stc
outsl
sub
movsl
shr
jo
mov
cli
out
inc
and
outsb
mov
add
hlt
xor
sub
mov
je
and
xchg
in
imul
mov
dec
adc
jecxz
add
cmp
adc
push
cld
call
inc
xor
xchg
mov
addl
fsubl
push
push
push
and
jle
nop
in
jnp
sbb
xchg
stc
mov
les
call
dec
aam
add
lcall
scas
lret
ljmp
push
sbb
or
cmpsl
cmpb
rorb
sub
sub
mov
xor
sbb
fsub
aaa
sub
stos
xchg
movsl
mov
imul
cmp
rcr
pop
imul
adc
fcoml
aas
aad
dec
mov
sub
mov
push
lds
aam
std
bnd
inc
mov
jecxz
xchg
mov
pop
push
add
push
dec
cmp
lods
insl
insl
mov
mov
rol
xor
push
sub
mov
arpl
addr16
ljmp
pop
incb
bnd
addr16
sbb
imul
jo
aam
icebp
dec
mov
xor
bound
push
xchg
cld
fs
push
inc
inc
test
shll
repz
std
inc
or
cmc
jbe
scas
fsubl
adc
adc
pushf
pushf
pop
test
xchg
loopne
pop
inc
sub
fcomps
mov
call
in
dec
jne
aaa
ret
subb
out
add
inc
xchg
mov
incb
in
fcomps
or
sub
scas
jmp
addl
shrb
mov
or
sub
hlt
cmp
sub
adc
rolb
push
adc
dec
or
mov
dec
imul
inc
add
iret
dec
inc
cmpsl
mov
mov
mov
and
push
inc
lock
push
or
ja
sarb
pop
jno
movsl
fwait
div
stos
fwait
bound
lock
addr16
call
or
jp
inc
testb
jp
cmpsb
jmp
and
lret
icebp
fnstcw
idivl
lea
lret
insb
adc
mov
fprem1
inc
xor
dec
dec
or
adc
adc
jno
sti
fsubl
dec
sar
test
jno
and
mov
lcall
dec
notb
fbld
adc
clc
pushf
sub
lahf
push
leave
jae,pt
push
and
and
or
sub
push
shrl
adc
mov
cli
inc
xchg
and
pop
jmp
mov
mov
xchg
pop
mov
ds
addr16
addr16
test
insl
rorb
mov
mov
jae
push
test
je
mov
outsb
outsl
ficoml
jg
mov
dec
das
xchg
daa
push
mov
sbb
push
xor
leave
mov
test
push
xchg
insb
scas
bound
pop
int3
aam
testb
mov
sbb
outsb
jle
les
in
lret
or
es
xchg
filds
movsl
inc
daa
leave
or
les
pop
orb
pusha
sub
xor
xlat
mov
lahf
xor
sbbl
test
jb
cli
xor
push
mov
loop,pn
adc
mov
in
lods
pop
out
mov
inc
jge
jno
mov
stc
fnsave
or
ret
nop
int
sbb
fidivrl
jge
hlt
jge
pop
imul
cld
pop
int3
lcall
subb
arpl
xorl
xchg
jns
outsl
or
mov
sbbb
mov
mov
sarl
movsl
push
sbb
push
mov
arpl
sahf
xor
jno
loope
mov
and
adc
push
in
cmc
mov
test
push
addr16
ss
cmp
cmp
and
mov
pusha
dec
or
dec
inc
ret
shrb
dec
add
mov
les
imul
jbe
int3
or
mov
push
or
imul
dec
jb
call
pminsw
jno
jecxz
fimull
sbb
fisttps
outsb
or
or
xchg
push
inc
or
addr16
mov
scas
fwait
pop
in
mov
jno
push
mov
loope
hlt
orb
ljmp
cmp
inc
lds
adc
dec
xlat
sub
dec
push
insb
ss
dec
dec
add
pop
into
movl
cmp
scas
cmp
mov
adc
dec
adc
sbb
add
mov
repz
sbb
xchg
test
out
add
subb
icebp
jmp
xor
popaw
mov
shr
mov
mov
jg
fwait
xchg
cmp
in
adc
ret
inc
dec
int
mov
or
cmpsb
pusha
aas
pop
shrl
test
sbb
lods
in
mov
cmp
push
jb
in
mov
loop
pop
mov
cli
add
test
xchg
cmpl
dec
popl
push
xor
fistpll
test
and
cltd
adc
xchg
mov
sbb
xchg
xor
stos
pop
mov
mov
insl
ljmp
push
test
inc
outsb
cwtl
cmp
jg
push
cs
inc
cltd
decl
mov
hlt
rcl
lcall
lods
push
test
adc
orl
add
mov
les
push
inc
repnz
jp
pop
jge
or
jmp
loopne
ljmp
psubq
cmp
jl
aas
mov
add
jmp
jns
repz
sahf
push
imul
push
rcll
xlat
pop
addr16
inc
inc
in
and
lods
xchg
andl
mov
xor
std
xchg
in
mov
mov
sbb
movsb
mov
ja
add
ljmp
popf
push
leave
in
pushf
popf
popf
pop
cmp
fs
cltd
sbb
xor
push
mov
and
jp
lret
jnp
cmc
into
repnz
jbe
xchg
mov
push
pop
rorl
ljmp
out
mov
into
and
loop
insb
xchg
jae
lret
arpl
cs
fmulp
loopne
jle
lret
movsb
test
cltd
xor
cmp
and
pop
sub
mov
adc
cmp
bound
pop
loop
enter
or
or
push
xlat
fcmovnu
xor
mov
inc
in
clc
movsl
jge
fidivl
js
ds
lods
icebp
jge
push
dec
imul
mov
sbb
mov
xor
cwtl
cmp
out
in
mov
add
cmp
cmpsb
push
ret
hlt
lret
pop
enter
sbb
push
rclb
dec
nop
jmp
push
scas
mov
or
xlat
fldt
cs
cmp
adc
mov
add
in
jb
mov
xchg
insl
push
xchg
dec
enter
push
rclb
or
mov
add
in
lods
fstpl
int3
loope
fwait
push
mov
or
xchg
fbstp
pusha
test
out
nop
adc
jne
inc
orl
xor
push
movsl
aad
jl
stc
add
dec
shll
sub
lock
clc
push
std
mov
movsb
inc
addb
push
or
gs
xchg
mov
and
shrb
mov
cmp
push
imul
mov
iret
push
jle
fists
xchg
inc
push
and
aas
inc
add
ret
jb
xchg
pop
mov
add
mov
fwait
les
sbb
mulb
lret
and
or
mov
cmpsb
cmp
or
fs
mov
adc
adc
push
mov
push
orb
push
out
push
stc
dec
fisubs
mov
push
mov
xchg
ja
mov
fnstenv
mov
pushf
xlat
xchg
cmpsl
jp
mov
jno
add
cmp
arpl
pop
inc
test
iret
fisubrs
jno
and
or
mov
loopne
fabs
int3
push
in
mov
sub
add
loop
and
int3
or
sub
fisttps
cld
nop
mov
dec
out
rcll
pop
imul
fwait
clc
mov
outsb
imul
inc
ss
adc
xchg
cmp
xchg
mov
xchg
imul
lret
push
cs
lahf
inc
lea
out
lret
push
jp
int
enter
sub
in
or
pushf
jo
mov
jns
iret
xchg
mov
icebp
jbe
mov
push
or
int
outsb
out
mov
xor
insl
add
xchg
mov
imul
stos
mov
or
arpl
sbb
icebp
push
mov
imul
mov
aaa
dec
loopne
cmp
add
and
icebp
push
sahf
insb
jns
adc
aam
fsubr
loop
out
sbb
out
into
inc
push
add
into
stc
outsl
push
and
outsb
sub
pop
insb
pop
in
add
movb
mov
cmpsb
dec
lods
idivb
repnz
dec
lea
insl
ljmp
stos
mov
add
push
rcr
pop
frstor
imul
in
test
in
js
cli
xchg
inc
dec
lds
dec
push
pop
stos
adc
insl
stos
inc
xor
mov
adcl
sub
sub
cli
xorb
call
movb
in
lea
mov
push
inc
dec
add
lret
je
dec
es
push
jmp
push
movl
insb
jns
jg
sbb
xchg
push
sbb
or
orl
sbb
ficoms
jp
mov
or
lods
push
ror
jns
push
pop
les
je
xor
shlb
fiaddl
int
xchg
addr16
inc
in
mov
aam
and
insl
push
mov
push
sub
mov
or
sti
xor
jne
sahf
sti
sbb
lahf
call
test
pop
cld
pop
mov
cmp
cmpsl
inc
sbb
insb
aad
shl
stc
int
sbb
ja
push
ret
jmp
mov
push
jge
cmp
loopne
out
out
add
fs
pop
push
xor
out
in
mov
sub
mov
and
test
or
mov
add
jo
jge
iret
dec
and
ret
pop
int
fldt
jmp
xor
scas
sub
mov
sub
inc
mov
les
mov
dec
inc
cmp
inc
push
in
mov
aad
inc
xchg
stc
and
adc
out
movsl
cld
lret
stc
nop
mov
add
insl
ret
subl
xchg
mull
sbb
mov
je
dec
dec
movlps
leave
and
add
fimuls
mov
mov
cmp
subl
cmc
sbb
ror
push
jmp
std
inc
icebp
xlat
test
sbb
lods
and
and
shl
pop
cmp
cmp
sub
pop
jge
add
fidivrs
into
push
xchg
sub
sbb
js
push
xchg
mov
or
or
out
pushf
jnp
xor
stos
lds
fidivrl
inc
jnp
imul
subl
mov
mov
sbb
add
sbb
xlat
inc
ja
inc
add
jns
les
sbb
xor
mov
inc
fildll
xor
jno
enter
es
xchg
lret
test
xchg
dec
fwait
push
cmp
dec
std
mov
inc
stc
rcrl
xchg
aas
xor
bound
mov
jge
int
xchg
ljmp
cltd
sbb
inc
inc
cli
jae
add
xor
bnd
loopne
insl
call
add
lahf
fs
mov
lahf
cld
fs
mov
into
js
inc
cmp
and
int
cmc
jp
jge
ljmp
push
das
xor
inc
xchg
mov
inc
lods
repnz
and
push
sub
stos
iret
lods
lret
shrl
inc
shl
push
sub
adc
mov
lds
adc
mov
xchg
inc
dec
loop
pop
adc
in
jle
pop
rcll
arpl
sub
jo
xchg
addr16
add
ja
pop
inc
jne
icebp
and
lahf
push
call
loopne
lea
movq
pushf
push
jmp
mov
pop
push
iret
imul
dec
push
in
mull
sbb
lock
test
popa
in
jp
cmp
dec
cltd
push
dec
mov
dec
xchg
lcall
mov
cmp
mov
lcall
xor
popa
cmp
pusha
jle
or
imul
or
loop
cli
mov
dec
mov
add
data16
and
xlat
pop
in
add
adc
sub
sbb
cmpsl
adc
andb
push
ret
push
cmp
mov
fisubl
sub
int3
cmp
rcrl
pop
jno
mov
mov
loopne
and
pop
pop
sbb
movsb
jo
ss
test
mov
lds
dec
jns
jge
sarl
mov
pop
jns
or
aas
cwtl
pop
dec
sbb
jae
add
sbb
test
repz
scas
sahf
sbb
mov
inc
repz
mov
and
xor
adc
stos
push
push
notb
ret
cs
imul
adcl
nop
jle
add
test
adc
outsb
cmpsb
sub
xchg
or
lret
imul
les
sbb
adc
jg
loop
iret
das
lahf
mov
ss
fs
and
jne
xchg
std
outsl
add
scas
popl
mov
not
rcrb
mov
and
mov
add
adc
les
dec
shll
addr16
mov
jmp
cmpb
addb
aas
xor
push
mov
jle
jne
push
xor
and
mov
sbb
sbb
xor
or
lcall
jmp
fstl
insb
ret
add
fisttps
mov
loope
enter
rclb
out
mov
adc
sub
jne
mov
mov
stc
mov
xabort
push
or
into
pop
or
jecxz
mov
pop
bound
repz
adc
inc
and
cmp
push
dec
add
shlb
lods
cmp
push
and
das
pushf
in
stc
rclb
fisttpl
push
outsb
lds
lods
push
lock
jbe
test
xchg
push
addr16
mov
or
inc
loope
dec
xchg
call
shlb
dec
loopne
lods
mov
cmpsb
or
outsl
push
or
imul
rol
shll
repz
sbb
mov
adc
push
adc
mov
jb
adc
fsubrs
cmp
outsl
mov
movsl
test
mov
lock
ja
mov
mov
inc
leave
pop
out
ret
sbb
pop
cld
push
lock
movsl
outsb
push
ret
imul
xchg
push
lret
and
mov
adc
pop
test
jmp
cli
mov
sub
mov
xor
insb
ficoml
imul
outsl
adc
cmpsb
lret
mov
push
lods
push
nop
sbb
imul
scas
pop
mov
jno
aas
mov
je
jp
movsl
dec
mov
and
cmpb
mov
mov
fxch
xchg
mov
push
sbb
frstor
jb
inc
or
loope
xchg
mulb
mov
arpl
loopne
push
adc
pop
repz
mov
js
sub
add
mov
mov
pop
xchg
xor
out
pop
lds
ret
fistl
into
loope
mov
mov
sub
movsl
or
jl
in
mov
fs
push
cs
or
jp
cmp
es
int3
mov
inc
lret
or
push
fs
adc
and
dec
lret
mov
daa
dec
adc
xor
jg
test
fidivrl
pop
sub
test
jp
cmpsb
inc
fisttpl
sub
pop
dec
pop
mov
dec
adc
mov
sbb
push
insl
sbb
jbe
std
mov
push
xchg
jns
rcl
jecxz
inc
cmp
fldt
mov
and
xor
cmp
cmc
fistl
stos
or
sub
sub
sbb
add
call
xchg
lds
fbld
pop
or
movl
cmc
jnp
xor
rcrl
loope
sbbb
mov
and
xorl
arpl
mov
test
sub
xchg
popf
cmp
jge
movsb
ror
das
je
inc
pop
sub
addr16
mov
mov
jge
shlb
mov
fildll
adc
clc
and
sahf
jne
xlat
push
insb
out
out
or
jno
adcb
mov
fcmovu
sub
adc
cvtdq2ps
jge
aaa
adc
add
out
jns
cmp
add
stos
sbb
dec
into
mov
into
mov
adc
add
loop
addr16
shll
mov
sbb
out
scas
mov
aad
mov
cmp
lcall
push
repnz
inc
lock
test
mov
shll
orl
push
pushf
std
sahf
mov
or
out
sub
out
pop
cmpsl
scas
and
jecxz
stos
jb
cld
cld
cmp
xchg
mov
fcoms
gs
outsb
sub
dec
mov
insb
dec
test
jp
xor
mov
push
dec
xchg
sub
mov
sarl
pop
jg
push
mov
or
arpl
dec
dec
or
ss
call
rorl
push
jb
dec
std
xlat
cmpsb
in
lret
aad
fidivl
icebp
daa
lahf
mov
jnp
das
mov
je
test
loope
push
sub
sub
dec
mov
sub
pop
adc
sub
movsb
add
mov
sub
cwtl
les
push
stc
mov
int3
mov
dec
and
repnz
pop
jmp
in
jl
xchg
sbb
enter
cmp
sub
movsb
stos
cmp
inc
mov
inc
inc
call
aad
xchg
dec
add
adc
jecxz
pop
cmp
or
inc
sub
mov
push
pop
ret
popa
aam
or
in
lods
cmpsl
movsl
dec
xlat
lahf
stos
inc
fildl
test
fistpll
add
push
in
cli
in
mov
cwtl
jp
loop
movsl
mov
sub
or
loope
sub
mov
sub
xor
mov
cmp
les
sbbl
loope
fmuls
mov
call
cmp
not
or
test
cmpsl
push
stos
add
jmp
mov
mov
cltd
sub
pop
mov
xchg
pop
out
nop
daa
sbb
sub
pop
aad
fmull
lahf
iret
mov
mov
adcb
out
inc
loopne
lea
out
push
in
xor
jmp
fidivrs
mov
mov
mov
pop
push
cmp
cmp
xor
in
push
in
mov
aam
mov
xchg
inc
outsb
negl
jno
test
into
mov
xor
outsl
aas
inc
pop
sbb
ret
pushf
pop
jge
jle
loopne
sub
lods
dec
lahf
jecxz
imul
sbb
lea
out
imul
mov
jmp
add
andb
mov
xlat
in
sub
or
out
sub
clc
mov
rclb
out
sbb
mov
push
out
mov
or
fwait
jo
sbb
mov
xchg
popa
sar
inc
aad
lods
addb
scas
mov
jecxz
test
dec
fs
pop
loope
shlb
out
sbb
push
testb
inc
mov
jle
rcrl
sub
jmp
cld
scas
xor
xchg
cmp
das
add
jl
imul
jmp
ret
xchg
jge
mov
push
inc
repnz
enter
push
daa
mov
and
pop
mov
scas
dec
push
or
sbbb
test
pop
stos
je
pop
sahf
bound
and
int
mov
or
pop
out
push
xor
rcll
sbb
sub
outsl
fsubp
push
sub
les
and
jecxz
lock
fwait
mov
stc
xor
jg
and
rorb
mov
test
aad
stc
sub
mov
xor
pop
xchg
mov
jge
xchg
mov
int
jg
sub
xchg
lcall
xor
add
fdivs
xchg
cmpsl
into
imul
xchg
xor
in
inc
jmp
std
dec
arpl
mov
inc
movsb
cld
pop
cmpsl
and
sbb
adc
sbb
dec
cltd
sub
jg
aas
xorb
dec
jnp
jno
clc
loopne
add
outsl
and
adc
inc
lods
or
test
inc
lods
cmpsl
cmp
out
repz
imul
clc
test
pusha
or
mov
sbb
mov
hlt
inc
decl
mov
mov
fidivl
into
movsl
aam
push
test
sub
int
test
test
sbb
sti
lcall
mov
out
in
mov
sub
popf
mov
orb
mov
inc
push
fiaddl
outsb
push
xchg
ret
sbb
adc
fnstsw
xchg
sar
push
ja
insl
imul
mov
xor
rclb
push
outsl
testl
inc
sbb
aas
movb
repnz
mov
loopew
lods
rol
mov
fisttpl
test
mov
jo
mov
jge
jle
xchg
sub
jmp
sbb
sahf
inc
mov
data16
pop
cld
sarl
cmc
mulb
shll
in
in
cmp
jmp
xor
inc
mov
cmp
pop
jns
fs
mov
jbe
xchg
push
bound
mov
cwtl
pop
push
aam
jo
or
sbb
xchg
push
hlt
xchg
pop
fs
jbe
leave
ss
jo
lods
cwtl
stos
add
test
repnz
xor
out
xchg
test
sub
decb
adc
into
lahf
cwtl
jo
mov
pop
add
xorb
pop
dec
lods
inc
pop
pop
lods
fcmovnb
iret
sbb
sbb
and
or
das
popa
decb
mov
scas
xor
pop
shlb
xchg
test
rorl
mov
or
test
rolb
push
mov
and
adc
push
sahf
std
movsb
xor
test
jbe
inc
bound
xor
add
movsl
push
lock
lock
mov
scas
jle
leave
push
dec
add
mov
jbe
out
push
mov
call
mov
pushf
insl
sbb
cmc
sbbl
and
sbb
test
out
xchg
scas
pop
mov
xor
xor
fsub
lcall
out
mov
mov
fisubs
mov
aas
push
mov
out
aad
xchg
sub
cmovge
loope
jle
rorl
out
or
fs
ret
cmp
mov
mov
out
mov
out
push
lahf
pop
movsb
je
adc
jno
inc
int
inc
and
test
add
cmpb
popf
cmp
mov
mov
shld
push
test
dec
xchg
stos
push
into
gs
sbb
xor
inc
mov
sbb
into
movsb
pop
iret
pop
popl
cmp
call
fcmovu
cli
adc
rcrb
or
push
out
stos
adc
testb
push
testl
test
pop
adc
mov
out
popa
test
mov
pushf
lods
ret
or
std
std
rcrl
inc
xchg
dec
pop
popf
and
cmp
outsl
xchg
jmp
js
pop
popf
hlt
inc
inc
push
xor
call
push
test
push
dec
scas
dec
jp
xlat
icebp
jl
xor
xchg
movb
adc
pop
shrb
push
add
pop
fimull
pop
xchg
mov
jle
pusha
xchg
popf
lahf
or
mov
jmp
xchg
xor
adc
cmp
cli
stos
push
ljmp
mov
mov
cmp
sub
aam
out
test
out
jp
inc
inc
jle
in
jns
inc
ljmp
call
popa
jbe
sub
test
aad
and
rclb
lock
outsl
push
or
int3
sti
test
lcall
les
ret
pop
adcl
ret
out
jno
mov
out
mov
das
in
imul
pop
pop
fldenv
mov
lock
cmpsl
pop
pop
mov
jo
arpl
xchg
fwait
movsl
xchg
jo
jecxz
mov
pusha
ss
push
push
in
xlat
iret
bound
jb
stc
xchg
mov
rcrl
pop
out
and
sbb
or
or
jo
and
mov
stos
sbb
xchg
repz
and
sub
rorl
ret
inc
into
adc
lcall
aam
lret
imulb
jg
into
fistpll
dec
int
sub
sbb
or
adc
shrl
fdivr
xchg
test
and
pop
out
ds
jns
dec
jo
es
movsb
sarl
xchg
mov
arpl
aad
sti
cmpsb
cwtl
push
shrb
fxch
nop
push
mov
push
xchg
add
push
xorb
push
xor
xchg
xor
jb
adc
movsl
cmp
stc
sti
cwtl
stos
stos
xchg
rorb
stos
jp
push
call
or
jl
out
test
push
cmp
fwait
and
cmc
mov
mov
mov
inc
bound
or
sub
int3
loope
lcall
xchg
imul
sbb
or
mov
xchg
enter
mov
jle
sbb
pop
fucom
std
mov
xor
jg
jle
sarb
aam
es
add
mov
push
push
jl
xchg
push
es
mov
xor
dec
sti
mov
pop
mov
add
mov
sbb
les
mov
sub
imul
data16
lods
xchg
fldenv
jl
inc
inc
mov
ss
test
push
testb
orl
adc
pop
and
pop
in
or
test
rcll
sbb
mov
xlat
pushl
xor
test
movsl
sub
out
jmp
cmp
out
mov
adc
cli
pop
stos
xchg
stc
add
pop
push
push
and
in
xor
clc
rorb
push
inc
jmp
in
inc
mov
rcrb
pushf
inc
dec
pop
cld
add
shlb
sbb
mov
mov
ljmp
mov
push
adc
xchg
out
xchg
cmp
sub
mov
pop
pusha
test
aad
xchg
lds
sbb
gs
loope
loop
das
daa
dec
jno
sub
cmp
hlt
test
cmp
push
ficoms
iret
js
pusha
pop
jmp
mov
ja
xlat
aam
xchg
xor
sub
sub
test
pop
dec
jnp
adc
cwtl
aad
div
fneni(8087
jecxz
xor
in
jg
enter
push
outsb
iret
lds
dec
dec
jge
add
pop
inc
mov
mov
push
sub
cmp
mov
insb
inc
insb
sub
sbb
xchg
int
fcmovnu
test
cmp
cmpsl
in
rorl
leave
and
adc
add
bound
mov
mov
lods
mov
pop
mov
inc
cmp
cmpsl
cmp
out
fidivs
cmp
push
and
inc
subl
push
inc
outsl
lods
push
and
popf
xchg
je
cmpb
lahf
inc
jmp
inc
xchg
xchg
sti
mov
mov
or
sbb
rcr
jae
or
int3
call
xor
scas
fcoms
sbb
insb
xor
fistps
and
adc
jmp
jb
insb
mov
push
mov
popf
int3
mov
fdivrs
jecxz
push
lcall
fcmovne
mov
rol
and
sub
rcl
scas
add
jg
cmp
addb
or
xchg
xchg
repz
repz
adc
popa
push
inc
test
stc
ljmp
outsl
sub
popa
fidivrs
or
mov
push
popa
inc
mov
sub
scas
mov
pop
inc
pop
jns
xor
pop
sub
outsb
addl
xor
add
jle
addb
pop
iret
xor
add
lds
pushf
neg
push
ret
sbb
or
sbb
cmp
dec
sub
arpl
lds
jmp
cmpsb
nop
and
sbb
pop
aam
lret
xchg
insl
ret
call
cmc
sbb
or
push
xlat
cli
inc
xor
popa
sub
shlb
out
mov
dec
adc
negl
in
in
mov
mov
out
inc
sti
aas
loope
ret
cmpsb
sbb
loop
cmc
xchg
add
cmpsl
fwait
loop
sar
insb
imul
or
gs
ret
into
addr16
or
pop
sub
hlt
push
test
movsb
imul
pop
push
mov
outsb
mov
push
ja
sbb
inc
add
ficomps
arpl
and
sbb
or
mov
insl
lea
int3
mov
test
inc
das
xchg
iret
or
icebp
add
mov
cmpsl
lods
popa
cmp
sub
cmp
mov
mov
fstps
and
add
xor
sbb
loopne
cmpsl
push
xchg
sti
xorl
xchg
fs
outsl
sub
subl
mov
cmp
imul
or
lea
cs
mov
mov
cmpsb
dec
pop
and
jo
mov
push
mov
in
stos
sub
mov
fcmove
push
es
sti
push
mov
sti
xor
xor
xor
rolb
or
das
xor
inc
sub
and
mov
or
stos
lahf
cmp
ret
icebp
inc
adc
ret
inc
sbb
jg
loope
inc
add
push
scas
mov
mov
mov
mov
rol
cli
cld
cmpsl
das
xor
movsl
push
imul
js
sti
std
fwait
or
call
lcall
test
clc
jl
push
adc
xchg
or
add
push
jnp
jmp
lahf
dec
xchg
inc
mov
mov
xorl
pop
mov
dec
add
jb
mov
jge
mov
add
sbb
daa
insl
movsl
sub
fcoml
sbb
xor
subl
sub
adc
pop
xlat
push
mov
jecxz
daa
sbb
pushf
in
push
out
aaa
hlt
hlt
xor
push
and
roll
xor
or
sub
and
dec
and
insl
in
pushw
repnz
cltd
bound
pop
xlat
xor
add
pop
loop
shrl
dec
sub
mov
lahf
adc
imul
aaa
cli
scas
and
test
jnp
repz
repz
push
jne
jb
iret
jle
pop
mov
jmp
dec
dec
gs
mov
std
xor
mov
add
push
jbe
mov
ret
mov
cmp
mov
push
mov
pop
xchg
dec
mov
aaa
push
pop
dec
mov
andl
mov
test
test
add
jns
pop
dec
fs
adc
and
add
or
sbb
push
ds
mov
in
pop
dec
mov
lock
mov
mov
dec
cmp
out
pop
xor
testb
pop
or
mov
mov
push
int3
test
jp,pt
mov
inc
mov
ds
mov
jmp
es
in
cltd
dec
rcrl
movmskps
insl
stos
scas
cmpsl
xor
adc
dec
xor
dec
ds
adc
pusha
cmp
adc
cmp
sub
orl
scas
out
inc
call
and
pop
mov
inc
mov
int
and
cmp
cli
in
scas
or
cld
pop
xor
rcl
sbb
and
loopne
mov
vpaddusb
movb
push
popa
ficompl
icebp
outsl
es
ret
add
xor
adc
insl
mov
jns
cmp
xchg
mov
adc
les
push
fabs
cmp
test
push
cmp
push
fldenv
or
push
mov
mov
test
imul
pop
and
mov
movsb
subl
inc
cld
icebp
inc
sbbl
stos
fs
dec
mov
fcoml
popa
int
out
fdivs
fisttpll
sub
mov
mov
loope
scas
insl
pop
push
jno
adcb
ret
outsl
aad
cltd
negb
mov
arpl
std
movsb
lahf
insb
int3
push
out
hlt
lods
mov
xchg
mov
xchg
rcr
into
cltd
testb
enter
in
jecxz
bound
test
cltd
mov
addr16
fucom
jae
push
and
pop
jge
mov
sub
stos
adc
jl
aad
mov
push
rolb
xor
mov
das
adc
cmpsb
dec
subl
cmp
jb
mov
xchg
cltd
xor
adc
push
stos
jnp
jle
cli
popa
inc
fmuls
outsb
leave
adc
fcoms
mov
lahf
pop
fmull
sbb
or
enter
pop
movb
lahf
inc
sbb
fwait
dec
test
loope
add
xchg
jg
adc
mov
rcrb
jbe
or
pushf
in
and
sub
xor
sahf
movsl
cs
out
dec
push
daa
pop
sarb
add
jo
jl
xchg
add
jne
dec
or
lods
jns
sub
push
cmp
movsl
insb
adc
mov
subl
cmp
xor
sbb
ljmp
imul
mov
fcomp
scas
jl
dec
push
in
xchg
push
or
and
mov
cmp
int3
rcr
mov
loopne
pop
add
xchg
mov
lcall
dec
in
scas
mov
iret
inc
dec
inc
xor
stos
adc
cmp
push
leave
jecxz
mov
sub
jge
mov
lret
and
mov
adc
mov
orl
adcl
pop
jmp
pop
and
rcll
mov
or
aas
xchg
call
das
jmp
mov
dec
jne
scas
in
and
or
inc
in
dec
jl
sub
xchg
fidivs
add
pusha
js
xchg
mov
and
and
dec
aaa
loope
xor
out
imul
ret
jae
xchg
gs
daa
stos
rolb
ljmp
loope
popf
test
pop
mov
gs
cli
xchg
lcall
mov
adc
and
fs
cltd
popf
xor
int3
jg
cmp
aas
out
ljmp
adc
inc
jbe
cmova
aaa
pusha
inc
int
mov
mov
icebp
movsb
cmpsl
push
cli
pop
cmp
add
cli
push
in
dec
lea
lock
rorb
xchg
sti
rcl
jl
cmpsl
stc
aaa
mov
fisubrl
dec
and
push
xchg
jno
mov
pop
movb
and
rorl
and
ss
sub
jb
ja
cmp
xchg
dec
out
andl
sbb
mov
jno
ret
fisttps
xor
pop
pop
dec
dec
and
add
push
test
outsl
cmp
adc
pop
inc
fs
leave
jp
inc
into
adc
jg
or
or
add
imul
nop
adc
ss
out
push
pop
stc
icebp
idivb
jg
pusha
rcl
mov
pop
imul
add
sub
dec
and
sti
shrb
jmp
inc
jae
xchg
call
repz
jecxz
pop
lea
stos
sti
sbb
in
in
pop
xchg
test
push
mov
scas
pop
mov
sbb
call
loope
or
popf
xor
enter
mov
dec
dec
int3
cmp
mov
xor
add
icebp
xor
repz
inc
jne
ja
sub
imul
cmp
adc
push
popf
xor
xorb
xchg
inc
xchg
adc
pop
sub
jb
or
sub
iret
or
xchg
test
jg
jo
jge
xor
inc
je
inc
sub
rcll
fcomps
fsubr
out
xor
fldcw
fstl
xchg
or
add
mov
xor
jg
je
sbb
jmp
cs
pop
mov
testb
adc
les
in
js
enter
sub
sub
mov
xor
out
cld
xor
in
mov
divl
dec
stc
rclb
sub
fistpll
add
add
inc
repz
xchg
imul
out
stos
and
es
mov
lcall
cli
mov
fiaddl
or
pop
call
in
push
movsl
mov
xor
push
test
inc
loope
lea
outsl
insb
outsb
or
lds
cld
test
dec
mov
test
xchg
je
out
cmp
mov
jge
je
fnsave
xor
lret
cltd
jecxz
test
inc
mov
dec
cmc
loop
pop
pop
loopne
dec
sub
nop
mov
ss
push
mov
pop
and
nopl
jp
jmp
in
sub
push
dec
dec
mov
insb
aad
aad
jae
xor
out
inc
jg
mov
inc
and
mov
test
push
lods
icebp
cmpsl
adc
add
sbb
mov
sar
out
incl
lods
fwait
aas
xor
sarl
out
fisubrs
sub
mov
add
dec
lds
daa
dec
cld
mov
mov
pop
xorl
push
mov
jge
jmp
nop
adc
dec
push
fisubrl
ljmp
sbb
stos
push
mov
cmp
out
std
mov
cmp
cmc
in
adc
aam
popf
cltd
sub
rcrb
lret
inc
repz
xchg
mov
lock
xor
dec
icebp
cmpsl
icebp
jmp
xor
pusha
hlt
inc
stos
sbb
dec
push
add
cli
push
lret
push
sbbb
xor
cltd
les
insb
inc
pop
decb
outsb
fisubs
push
inc
adc
dec
push
dec
cwtl
dec
adc
mov
dec
sti
lods
aad
xchg
xlat
add
inc
lds
das
faddl
xchg
cltd
pop
add
mov
shl
mov
mov
and
xchg
add
push
lret
aad
adc
jp
xchg
or
pop
movsl
mov
repnz
pushf
push
rcr
repz
dec
jp
test
popa
adc
mov
sub
push
ds
adcl
cld
mov
hlt
daa
pusha
mov
lcall
cmp
dec
cmc
adcl
fwait
cmp
mov
int3
adcb
cltd
add
jbe
call
popa
sahf
inc
aad
jmp
cmpsb
mov
rorb
repnz
lods
or
ds
jbe
adc
cmp
mov
dec
lods
test
or
out
stos
movswl
push
loopne
repz
fldl
fadd
pop
test
popa
mov
xor
pop
mov
inc
jnp
jmp
sub
mov
push
cld
mov
or
js
push
mov
repnz
mov
jp
scas
mov
scas
pop
cmp
xor
dec
xor
push
dec
ljmp
pusha
jbe
nop
lock
and
pop
pop
mov
int
jb
aas
notb
mov
pop
cli
pop
shlb
lcall
dec
cs
add
in
fisubl
mov
push
inc
inc
or
push
in
push
push
iret
xor
int3
push
fdivs
test
scas
or
sbb
stos
bound
and
adc
sbb
aas
xor
sbb
pop
or
inc
xor
fisttpl
adcl
in
cmc
mov
arpl
adc
and
adc
mov
in
int3
pslld
hlt
iret
inc
mov
jmp
incl
pop
imul
mov
jmp
cltd
sbb
aas
inc
aas
sub
inc
fidivrl
push
dec
or
mov
xor
int3
sti
sbb
xor
lcall
fsubl
lock
cld
mov
popa
jno
andl
mov
mov
aad
or
or
fnstsw
lea
in
popa
mov
into
fmuls
enter
mov
adc
pop
imul
inc
add
sti
xor
sub
mov
sti
dec
mov
jg
out
push
push
insb
lods
jmp
sub
dec
pop
ud1
inc
js
cmc
pop
lds
daa
fstp
pop
cmpl
shll
jecxz
in
nop
lahf
and
clc
bts
sub
test
shlb
pop
cld
outsl
add
test
js
jmp
mov
dec
repnz
push
sbb
loopne
dec
or
cmp
push
xchg
clc
xor
inc
push
mov
in
sahf
cwtl
xchg
push
scas
mov
nop
ds
dec
mov
dec
fldz
iret
sbb
into
push
mov
cltd
cld
cmp
sahf
mov
adc
jb
lods
negb
mov
adc
jp
scas
addr16
lret
xor
imul
mov
sbb
lcall
add
subb
cltd
movsb
popa
out
in
aam
push
jecxz
insl
out
mov
sbb
mov
adc
jmp
mov
mov
xchg
out
jne
add
mov
aaa
jle
and
stc
sub
or
push
popl
stos
enter
jge
sarb
pop
fldl
push
stos
or
stos
jb
ret
iret
add
pop
inc
ror
xor
xorb
int
aad
inc
and
fwait
push
lret
cmpl
aaa
ret
xor
mull
xlat
aas
sarb
test
push
stos
and
mov
lea
cmp
xchg
inc
mov
xor
jnp
or
loopne
inc
and
sub
xlat
mov
cmpsb
out
fsubrs
or
cwtl
mov
imul
cmp
jo
mov
ret
dec
into
and
cmp
jg
xchg
add
and
in
jle
pop
cmc
icebp
mov
cmp
mov
xor
jge
xor
xchg
lods
test
pop
jmp
stc
sbb
in
inc
mov
fstpt
or
negl
inc
jnp
xorb
fidivl
ss
scas
adc
dec
lahf
cltd
push
xchg
jns
mov
mov
xchg
mov
adc
xlat
shlb
push
pop
popa
fmuls
scas
dec
xchg
pop
dec
xor
lods
jbe
arpl
lock
call
cmpsb
cli
cmpsb
std
pop
or
xchg
push
and
pop
loopne
or
bound
push
int3
pushl
push
sub
jmp
push
mov
mov
jb
cltd
push
adc
inc
lea
xchg
in
andb
loop
jae
dec
ja
xor
cltd
shll
cld
sarl
push
fildll
das
ficompl
lock
and
stos
aad
sahf
mov
lods
cltd
in
and
pusha
popf
icebp
pop
inc
inc
add
leave
inc
hlt
add
aas
pop
and
and
jle
dec
jg
mov
bound
or
lods
mov
hlt
jecxz
bound
jnp
push
adc
or
in
pop
fstpt
fs
xchg
pop
insb
mov
and
insl
imul
mov
or
ljmp
add
addr16
sub
data16
jmp
jle
cli
push
call
inc
les
sbb
sti
imul
mov
aaa
pop
mov
cmp
mov
push
jmp
jg
fsubl
icebp
int
mov
dec
mov
mov
in
or
ljmp
push
sbb
jo
fadds
shll
stos
xchg
in
xchg
mov
mov
cs
test
sub
ds
rcll
pop
sbb
jb
movsb
shl
mull
and
repnz
mov
cmp
or
mulps
mov
outsl
stos
lahf
shl
divb
sub
subl
or
mov
andl
mov
lds
xor
mov
insb
ljmp
out
fildll
mov
or
cmp
jl
dec
pusha
jae
add
test
int
pop
lods
leave
cltd
outsb
push
push
xchg
insl
mov
ljmp
push
mov
xor
stos
ret
pop
leave
cmpsb
lods
or
add
xor
leave
pop
mov
pop
mov
jecxz
insb
ror
in
into
lds
sahf
sbb
cli
icebp
dec
mov
mov
mov
pop
jmp
inc
divb
addr16
mov
ljmp
pop
loope
pop
mov
in
cmc
push
inc
mov
leave
mov
dec
and
mov
or
cmp
ficoms
inc
loop
sbb
stos
insl
mov
jo
std
ret
sbb
rcll
add
outsb
stc
and
cmp
cld
lcall
popa
sarb
xor
mov
mov
outsl
jecxz
aad
xor
pushf
xor
sub
ds
jge
push
fists
dec
dec
jp
loopne
mov
cmp
das
inc
cmpl
insl
sbb
jb
insl
mov
jno
lods
push
outsb
xchg
pop
inc
xor
mov
jecxz
and
adc
pusha
int3
cmpsb
dec
xchg
xchg
pop
jmp
xchg
cmc
in
in
lock
popf
je
mov
sbb
jae
lock
fs
test
dec
inc
daa
dec
push
dec
sub
adcb
test
push
cli
in
mov
jg
dec
xchg
movsl
push
fdivrl
xchg
push
mov
cmp
sub
jbe
xchg
pop
outsl
cmc
ljmp
xchg
sub
lds
lods
push
lcall
in
jno
ljmp
jmp
or
sbb
pop
push
sar
push
xchg
or
cmp
jg
pop
lock
out
iret
cltd
in
gs
mov
cli
cmp
stos
mov
or
fimuls
inc
dec
outsl
movsb
addr16
test
push
push
movsb
mulb
insl
ss
js
lds
cmpsb
fwait
es
aam
or
xchg
dec
aad
jae
mov
adc
int
imul
sti
push
jecxz
ds
lods
loopne
mov
push
or
sub
int3
dec
ret
jg
jmp
push
mov
ds
test
test
sysret
lock
add
add
lds
dec
and
mov
mov
loope
popf
adc
es
pop
cmp
xchg
jne
mov
jp
addr16
into
mov
and
and
mov
dec
into
fsubrp
cld
testb
xchg
pushf
xor
sub
addr16
arpl
xchg
mov
mov
mov
mov
push
pop
jnp
imul
add
adc
test
fcmovnb
xchg
mov
scas
movsw
arpl
gs
push
push
add
jg
mov
jne
into
pop
push
out
push
fnstsw
mov
dec
fs
sbb
sub
fcom
sbb
xor
pop
sbb
cmp
and
xorb
insb
out
aaa
ljmp
fidivs
outsl
pop
mov
imul
out
bound
push
sub
or
jg
iret
daa
inc
ja
add
xor
jae
mov
mov
or
or
sbb
pop
dec
cs
xchg
popa
in
mov
stos
imul
movsl
and
sbb
insb
stos
insl
rcrl
push
mov
pushf
xchg
in
insl
and
das
sti
jbe
fiadds
mov
fistpll
fsubl
cmp
inc
or
cmp
jp
loope
mov
inc
stos
jnp
pop
sarl
mov
call
lcall
or
outsl
inc
loope
aas
ret
pop
cli
add
mov
inc
js
dec
cmpsl
dec
cli
pop
cmp
push
sahf
jmp
adc
mov
jl
dec
inc
sbb
mov
or
cmp
in
jb
pushf
xor
cmp
pop
add
out
ret
fisubl
ljmp
xor
or
sahf
je
sbb
rcrl
mov
inc
sbb
mov
enter
ret
adc
push
jl
and
lret
dec
out
ljmp
cmc
xor
mov
jnp
repz
xchg
cltd
xchg
fiaddl
push
and
mov
xchg
in
push
ljmp
sbb
dec
add
in
mov
mov
add
mov
jmp
fwait
and
je
push
or
sbb
adc
int3
stos
dec
pop
cmpsl
inc
imul
cmpsl
or
rclb
ldmxcsr
sti
sbb
adc
ret
movsb
imul
call
out
adc
lock
aas
rolb
cwtl
inc
xchg
out
jno
inc
jge
fnstsw
mov
leave
mov
lcall
scas
mov
and
aas
lret
sub
mov
cld
adc
ljmp
mov
daa
pop
dec
repz
mov
cmp
jge
mov
iret
scas
lds
mov
jnp
hlt
inc
adc
out
adc
pop
push
shl
jnp
dec
mov
dec
xchg
scas
lods
addr16
jns
ss
and
dec
cmp
xor
lret
mov
outsb
push
test
gs
test
sbb
inc
cmp
repz
ret
in
fmull
pop
adc
scas
xchg
cld
add
pushf
adc
ss
push
pop
push
fbstp
stos
test
insl
test
xor
insl
and
test
jbe
push
js
in
sbb
jns
es
push
push
xchg
test
lcall
xor
sbbb
repz
and
out
adc
or
jl
dec
push
and
fmull
test
repz
xchg
pop
repz
jns
dec
dec
mov
mov
stos
fs
sbb
or
sarl
cld
negl
aam
mov
fstps
imul
roll
jl
aad
push
arpl
xchg
stos
stos
cmpsb
js
jns
xor
or
iret
ds
je
insb
mov
sbb
mov
lds
add
and
leave
cli
mov
push
aam
popf
xor
aaa
int3
js
pop
jg
sbb
iret
pop
loop
sub
xchg
movsl
inc
xor
das
mov
mov
cs
xor
push
rolb
mov
push
cwtl
fsubl
mov
popa
sbb
mov
cmp
lret
jns
xchg
mov
mov
loopne
sahf
es
xchg
lcall
adc
pop
iret
jecxz
push
out
adcl
ds
xor
fidivrl
in
lahf
icebp
xchg
sbb
mov
mov
in
sbb
sub
push
jp
cmp
lock
aam
mov
jbe
int3
cmp
pop
aam
push
scas
mov
mov
lahf
repz
outsl
addr16
xor
dec
dec
mov
or
add
adc
leave
xchg
mov
in
dec
lret
lods
shrb
into
sub
adc
fldcw
movsl
jg
push
ret
lds
sti
jmp
push
out
rcrl
or
fmull
and
cld
jp
pop
sub
ret
outsl
cmp
adc
inc
lea
cmp
dec
xor
sahf
or
sub
leave
call
xor
mov
mov
nop
jge
pop
into
add
jle
out
mov
inc
push
push
mov
clc
orb
jge
mov
pusha
fisubrs
ret
mov
cmp
into
push
dec
jns
pop
dec
jo
daa
int3
jne
dec
roll
mov
fwait
jl
stos
push
ljmp
or
sbb
inc
mov
pop
mov
arpl
mov
fidivrs
xor
rolb
mul
mov
scas
test
pusha
sbb
ljmp
lea
rcl
lds
mov
pop
jb
clc
stos
orb
out
mov
adc
xor
jb
pop
sbb
sbb
into
aad
rolb
les
dec
pop
clc
xchg
xchg
and
jo
outsb
push
nop
dec
add
mov
dec
movsl
in
push
or
pop
dec
pop
inc
jle
ret
mov
ret
pushf
fidivrl
sbb
sbbb
ret
or
nop
loopew
mov
das
inc
inc
jbe
les
pop
mov
mov
xor
mov
fsubrs
lret
loop
call
add
or
pop
xchg
loopne
aas
jl
mov
adc
adc
xchg
mov
adc
outsb
aaa
std
xchg
push
cwtl
dec
and
nop
jmp
enter
sahf
fsubrl
adc
cmovp
test
push
sub
mov
lret
nop
imul
cmp
mov
fcmovu
xchg
out
jo
stos
repz
inc
xor
push
xchg
enter
mov
xor
je
mov
arpl
push
cmp
mov
ss
cwtl
in
jmp
repz
nop
xor
loopne
xchg
aas
mov
test
sub
in
jmp
aam
inc
in
cmp
jmp
out
inc
mov
pop
and
adc
ret
je
ljmp
push
lahf
inc
stos
fstps
rorl
fsub
call
into
push
and
mov
movsl
jecxz
inc
adc
into
and
mov
mov
xchg
push
mov
flds
imulb
dec
ljmp
xchg
or
push
ret
dec
popa
in
int3
addl
sbb
mov
popa
idivl
xor
mov
pop
lods
adc
dec
std
cmp
movsb
jno
in
push
xchg
mov
jo
mov
mov
adc
add
cmpsl
test
nop
aam
mov
adc
sub
data16
pop
jbe
outsb
push
adc
pop
mov
mov
jecxz
addr16
shrb
aas
aas
inc
cmpsl
out
data16
frstor
push
jne
in
dec
in
fcomi
pop
mov
mov
jb
jnp
loope
pop
jnp
inc
mov
adc
lea
fmuls
push
add
pop
pop
pop
jge
inc
in
ss
and
mov
xor
and
fists
adc
pop
mov
gs
add
adc
xchg
sbb
repnz
or
xchg
movsb
fidivrl
lret
cltd
cmc
dec
add
int
test
inc
loopne
mov
test
std
sub
test
xchg
outsb
sbb
daa
push
lret
sub
fnstcw
imul
loop
leave
mov
mov
xor
mov
fs
push
adc
push
pop
xchg
dec
jnp
and
sbb
je
daa
xorl
shr
push
mov
and
push
es
jb
lods
cmp
lods
xlat
mov
outsl
sbb
and
lret
adc
call
getsec
pop
enter
fwait
adc
lock
mov
or
sub
inc
mov
les
outsl
dec
sub
jne
jle
fdivrl
movl
mov
in
je
cmpsl
cmp
fwait
aad
mov
out
mov
outsl
cmpsb
sbb
es
inc
ds
notl
add
inc
call
inc
jge
adc
pop
and
xor
shlb
add
sub
dec
int3
mov
push
push
xor
cwtl
mov
xor
push
jecxz
mov
add
dec
cmpsl
movsb
out
roll
mov
jmp
mov
pop
pop
xchg
inc
mull
cld
je
add
xor
andl
and
push
cld
jb
int3
gs
cmp
fwait
pop
movsb
mov
out
jbe
gs
or
mov
in
lcall
xlat
andb
jne
mov
les
push
push
mov
adc
add
or
push
pop
mov
pop
pop
push
popf
sahf
loop
sub
int
cwtl
imul
mov
xchg
hlt
das
lahf
rcll
popf
dec
xor
pop
idiv
dec
mov
pop
test
xchg
stos
sub
push
icebp
push
call
jp
bound
pop
cmp
mov
pop
loope
mov
xchg
push
mov
mov
mov
fisttpl
dec
test
pushf
out
dec
jmp
sub
pushf
inc
std
mov
mov
dec
add
aad
cmp
outsl
out
xor
hlt
ljmp
lds
lret
mov
push
popa
mov
xor
sub
pop
pushf
pop
imul
into
mov
push
pop
xor
adc
inc
mov
mov
cmc
shlb
or
push
jmp
push
jne
ret
mov
pop
push
xor
sbb
mov
inc
lret
addl
or
mov
popf
out
dec
and
imul
xor
ss
xchg
fbstp
xchg
mov
add
jecxz
ret
les
and
push
int
mov
mov
in
xor
lea
out
repnz
adc
bound
jg
cmp
ret
ja
lods
andl
std
jne
cmp
mov
out
add
add
jne
imul
cmpsb
fimull
aaa
mov
sbb
sbb
stos
lea
lret
into
sbb
ss
hlt
jbe
jmp
pop
mov
push
or
pushf
inc
ret
sub
xlat
pop
ret
dec
ficomps
int3
push
jmp
test
mov
data16
jl
addb
xchg
mov
jno
imul
pushf
stos
dec
lock
lcall
lahf
mov
add
jmp
xlat
sub
xchg
sub
push
iret
push
setb
add
xchg
add
dec
jbe
mov
fcoms
xor
mov
pop
aad
lds
in
je
or
dec
cld
adc
das
or
or
xor
das
cmp
or
xorl
sbb
mov
inc
xchg
jo
je
inc
push
inc
push
xchg
add
jecxz
rcrl
es
scas
jne
orl
pop
sbb
lcall
mov
push
loop
adc
jne
pop
nop
test
imul
or
shll
pop
mov
sub
scas
and
pop
pop
jae
stos
cmc
dec
faddp
ud2
or
fadds
cli
sti
nop
jb
xchg
cli
or
loope
mov
or
mov
cmp
adc
std
jecxz
aam
pop
icebp
das
out
dec
cld
sar
add
cmpsb
cmp
or
xor
ret
std
add
fdivrp
pop
dec
mov
test
xchg
mov
je
push
hlt
outsb
push
inc
push
or
dec
add
dec
lcall
gs
dec
scas
jae
inc
aad
int3
and
pop
push
add
mov
xor
callw
mov
sub
stos
shrb
push
push
cmpsb
push
cmp
sub
push
mov
add
adc
cs
jne
pop
loopne
mov
and
pop
push
loopne
sbb
out
xchg
test
loop
or
cmp
mov
dec
insb
cmp
int3
shrb
or
fidivrs
xor
push
aaa
pusha
andb
inc
in
mov
in
pop
or
in
fidivl
das
inc
ja
cmp
test
nop
in
cmpsl
iret
add
sub
mov
lret
add
mov
ret
cmp
sub
enter
std
xchg
insb
stc
nop
imulb
movsl
or
js
gs
inc
xchg
fistl
mov
testb
mov
ja
test
mov
jle
fsts
xor
lahf
pop
mov
mov
dec
sub
cmpsl
cmp
sbb
aam
or
pop
je
lock
loop
sub
xchg
movb
xchg
add
mov
push
sbb
jmp
lcall
mov
or
fisubrs
push
push
js
jecxz
mov
xchg
es
scas
in
fdivr
mov
gs
sahf
lock
test
mov
imul
or
mov
mov
stos
mov
mov
pop
int
lahf
lock
mov
pop
imul
push
push
or
inc
ss
dec
jae
int3
sarl
mov
popa
icebp
sbb
push
push
lea
ds
or
add
into
sbb
cs
in
clc
fidivl
pop
stos
cli
ja
divl
jl
mov
mov
inc
xor
fucomi
sti
js
stc
in
sbb
imul
fcomps
dec
jl
jl
lcall
mov
std
into
int
mov
test
add
scas
or
cmp
in
pop
adc
mov
pop
sbb
jnp
cld
sbb
xor
inc
or
pop
lret
xchg
add
shrl
mov
cltd
push
ds
cmpsb
inc
jo
dec
aas
mov
add
xlat
popa
adc
and
sub
sub
lock
or
addl
xchg
clc
push
adc
mov
ja
push
lret
fbld
and
scas
loop
js
xor
shll
fldt
mov
enter
out
or
pop
xlat
je
lret
mov
sbb
push
mov
aas
cmp
jo
cmpsl
roll
scas
bound
jp
fldcw
call
push
push
or
hlt
xor
fldl
inc
mov
mov
xor
push
sbb
add
jbe
dec
pop
test
repnz
dec
mov
pop
xchg
cmp
xchg
ret
pop
mov
and
bound
jo
push
push
pushf
scas
pop
mov
mov
adc
pop
xchg
jo
inc
pusha
xchg
dec
or
mov
xor
push
aas
and
and
pop
dec
jmp
cmp
pop
les
mov
repz
into
dec
or
cmp
repnz
stos
sub
call
jns
or
adc
insb
lret
dec
outsl
data16
dec
and
inc
push
dec
divl
fwait
adc
cwtl
jl
cmp
int3
scas
jecxz
hlt
icebp
cli
cmp
das
mov
cmp
push
xor
mov
in
aad
mov
mov
adc
movsl
dec
shrl
clc
scas
aaa
cli
test
movsb
stos
inc
or
mov
scas
pop
clc
scas
push
sbb
mov
fwait
push
mov
jg
shl
test
pop
ficoms
cltd
ret
sub
dec
xchg
aaa
cmc
dec
adc
test
imull
jge
adc
jg
pusha
jl
push
test
movsb
dec
inc
jnp
mov
lcall
into
ljmp
dec
or
in
sbb
jnp
ljmp
test
insb
mov
fldenv
dec
xor
mov
fimuls
jle
outsb
cli
lea
movsl
sub
adc
xor
and
xchg
rcr
mov
ret
sub
adc
xor
push
inc
in
popa
dec
lahf
rcrl
dec
sbb
aad
sub
pop
aad
and
cmp
mov
push
lods
scas
call
lret
scas
pop
mov
inc
sbb
adc
pushf
push
cmpsl
xlat
into
ficomps
cmp
in
push
pushf
mov
push
mov
xchg
inc
mov
imul
movsl
cld
cmpsb
subb
fmul
idiv
fbstp
cmp
jge
xchg
fdivs
mov
or
sbb
movsb
lods
and
shlb
push
leave
mov
je
mov
mov
leave
add
cmp
orl
jmp
addb
hlt
lret
out
idiv
unpcklps
stos
sbb
adcb
fwait
ret
pop
mov
outsb
shl
dec
out
inc
cmp
leave
xchg
sub
cmpsb
sarb
pop
xchg
xlat
aad
mov
dec
js
rcl
cli
or
mov
xchg
out
mov
and
repnz
arpl
pop
and
mov
gs
inc
adc
jecxz
sahf
mov
lods
fdivr
sbb
cli
daa
movsl
inc
adcb
add
shll
cs
cmp
clc
cmpsl
push
jmp
jmp
add
xchg
cmpsl
imul
jb
and
mov
and
loop
scas
into
sub
nop
aam
cltd
xchg
test
lods
add
push
lea
loopne
inc
xor
xchg
inc
ret
int
inc
mov
xchg
push
popf
adc
inc
lods
mov
or
ret
ret
add
mov
popf
sub
das
or
imul
jge
push
xchg
cmp
cld
push
and
hlt
adc
or
in
or
jb
jbe
cmc
inc
jmp
mov
inc
dec
call
mov
jnp
mov
and
out
aaa
mov
aaa
xchg
pop
pop
fisttps
jge
fidivs
add
adc
scas
inc
mov
cwtl
push
push
aam
mov
fwait
pop
sbbb
inc
decb
aam
mov
sbb
cmpsl
sub
sub
xchg
jecxz
lds
adc
aas
push
ret
push
scas
int3
dec
cmpb
out
lds
xchg
cmc
movsb
loopne
jae
loopne
pop
sbb
aam
mov
es
or
or
cmovg
xchg
inc
add
rep
push
mov
dec
rcr
daa
sti
add
or
push
jae
mov
cmc
outsb
jbe
mov
dec
loope
nop
roll
and
jne
outsb
imul
add
pushf
pop
testl
ror
cmp
jp
push
int
bound
push
and
add
test
cmpb
sbb
inc
out
mov
jl
push
add
or
mov
loop
sub
leave
hlt
pop
xor
and
dec
sub
orb
and
mov
subl
adc
or
mov
shr
sub
fsts
popf
and
hlt
dec
int3
call
shll
jne
das
mov
sarb
js
push
test
sti
clc
push
xor
sbbl
scas
pop
arpl
inc
out
and
push
es
cmp
test
mov
mov
sbb
xor
data16
adc
stc
arpl
xchg
pop
ss
or
mov
cwtl
xor
cmc
push
cs
jbe
addb
jp
in
in
mov
push
les
pushl
xchg
sub
inc
cmp
mulb
or
jnp
loopne
addr16
mov
andl
lret
jecxz
xorl
xor
sbb
daa
xchg
sbb
in
push
dec
mov
das
or
stc
lock
icebp
inc
mov
getsec
aas
push
push
ret
push
add
ds
addr16
mov
xchg
fs
gs
mov
pop
out
pop
inc
nop
ffreep
pusha
push
andb
cmpsb
add
lret
ret
xchg
jmp
and
outsb
xor
aam
lcall
push
movsb
ja
shlb
cmc
adc
mov
movb
mov
movsl
js
adc
cs
jnp
or
popl
push
outsb
push
or
cmp
insl
int
stos
cmp
mov
push
pop
aaa
sub
pop
sub
jmp
in
push
ret
call
and
out
es
add
mov
int
mov
pop
sub
xor
icebp
mov
cmc
aad
ss
xor
or
mov
xchg
rolb
sarb
dec
or
mov
lods
mov
mov
dec
in
aaa
cmpsb
insl
xchg
xcrypt-cfb
cmpsl
es
or
lods
mov
ret
inc
mov
sbb
mov
test
mov
mov
add
fmuls
fnstenv
rorb
mov
jnp
les
out
pop
test
or
ja
push
repz
adc
xchg
sti
repnz
into
in
lea
gs
adc
out
rol
push
cltd
pushf
jmp
cmp
pop
add
hlt
jno
dec
outsl
stc
xchg
pop
and
cmp
mov
jecxz
pop
push
sub
jo
mov
xlat
xchg
movsb
pop
repz
hlt
divl
fcom
dec
jge
rclb
push
pop
insl
dec
movsl
int
inc
add
leave
in
cmpsb
xor
ja
mov
repz
fmull
arpl
and
decb
cmp
ja
ds
fnstsw
test
rorb
dec
inc
negb
push
xor
frstor
or
mov
mov
loop
cli
nop
or
mov
lahf
sbb
inc
pushf
mov
adc
pop
aam
inc
jge
add
mov
push
pushf
inc
pop
shll
out
pop
xchg
pop
fildl
testl
ja
aad
pop
test
add
mov
dec
add
push
mov
push
cs
mov
xor
pop
sti
xor
movsl
jbe
push
mov
fisubrl
sbb
sti
push
push
mov
pusha
cmpsl
aas
dec
std
mov
mov
xor
push
pop
xchg
loopne
lock
sbb
leave
scas
pop
add
mov
int3
mov
push
fcmovu
xchg
out
adc
loop
push
fstl
xor
scas
pop
inc
or
cltd
push
mov
jae
mov
mov
cmp
pop
pop
mov
pop
inc
inc
mov
dec
and
sbb
aad
sbb
xchg
outsl
add
outsl
aad
sti
sbb
fs
jl
xchg
jle
into
dec
pop
inc
insl
aas
push
pop
pushf
int
xchg
cmp
fldl
add
dec
je
dec
xchg
in
fs
adc
pop
inc
out
lea
rclb
bnd
pop
inc
mov
repz
add
lock
adc
rol
es
add
pop
xlat
pop
ja
repz
in
testb
inc
shlb
aas
cmc
inc
lea
and
inc
push
jnp
sbb
cmp
shlb
xor
mov
mov
xchg
cs
dec
sti
xchg
addr16
pusha
aad
test
cmp
dec
and
xor
das
fs
daa
popf
nop
jg
or
jl
bound
jg
pop
jge
add
daa
or
push
push
into
push
inc
lods
lret
out
out
push
arpl
lahf
push
inc
in
or
ret
xor
shl
adc
pop
pop
insb
in
or
scas
dec
es
lcall
sub
out
mov
jne
nop
inc
and
dec
inc
sub
pop
mov
scas
pop
loop
cltd
mov
sarb
mov
btcl
jge
jmp
push
fnstcw
outsl
adc
or
push
mov
hlt
cmp
inc
mov
icebp
and
xor
jno
mov
jmp
es
shrl
sti
push
sbb
mov
and
insb
and
je
and
hlt
and
xlat
mov
mov
adc
mov
mov
aas
push
push
test
stos
insb
dec
cmp
mov
fs
xor
outsb
xchg
add
icebp
out
jecxz
sbb
and
push
dec
in
insb
repz
mov
adc
push
arpl
jge
adc
sbb
mov
dec
cwtl
mov
or
and
sbb
mov
test
mov
inc
push
lcall
pop
push
adc
sub
test
inc
es
jmp
sbb
add
test
ss
add
rcr
jecxz
xchg
inc
jmp
cmp
adc
and
jmp
out
sub
mov
lahf
xlat
cmp
sbb
or
ror
pop
push
cmpsl
out
leave
out
push
cmp
iret
pop
stos
movsb
popa
sbb
jnp
dec
sub
sub
sbb
lods
jecxz
daa
mov
cmp
inc
xchg
call
js
jg
insl
cmc
and
mov
pop
mov
xchg
xchg
repz
lods
leave
test
mov
lret
pop
lret
mov
mov
int
in
adc
cmc
push
adc
add
xchg
push
aaa
shlb
add
mov
test
icebp
pop
cmp
rcrb
jp
int
jg
sub
mov
jnp
ret
adc
push
jp
xchg
fldenv
gs
inc
sbb
repz
xor
fs
pushf
xchg
mov
mov
and
je
inc
or
not
fidivl
insb
add
mov
pop
dec
loope
ret
jne
hlt
adc
jno
fildl
add
lcall
jns
xchg
xor
ret
xchg
xor
test
pop
and
movsb
out
xlat
push
pop
icebp
adc
lods
repz
out
or
jle
mov
lea
pushf
lahf
icebp
xor
gs
rclb
jno
inc
pop
scas
or
rcl
fwait
leave
mov
xchg
jo
add
fldt
sbb
mov
mov
jle
xchg
test
pop
mov
les
mov
push
lret
ljmp
out
pushf
lcall
mov
sbb
inc
loop
dec
jne
lret
jns
aaa
lock
pop
sub
negl
mov
mov
pushl
jmp
mov
jb
push
mov
inc
cmp
cmp
mov
xor
pop
outsb
xor
test
pop
dec
mov
adc
in
inc
into
in
cwtl
xchg
cmc
cmpsb
push
es
pop
cld
pop
jl
sbb
pushf
ja
fs
mov
popa
in
fiaddl
add
aaa
out
jecxz
and
add
aaa
lods
sbb
xlat
mov
mov
jl
into
loopne
mov
adc
sub
sub
sbb
movsl
rcll
outsb
push
ficoms
adc
fsubl
mov
scas
jae
push
cld
and
dec
mov
xor
fdivs
dec
outsl
jno
movsb
hlt
data16
outsl
fxch
rol
sub
loop
adc
adc
adc
mov
pop
mov
and
mov
inc
sub
ja
dec
push
mov
jnp
shll
add
in
sbb
jp
jp
sbb
xchg
mov
mov
out
outsb
pushf
and
movsl
inc
mov
lods
jbe
lds
add
incb
std
inc
ljmp
dec
mov
shrl
negl
cmpl
add
push
aas
mov
sbb
adc
ret
sbb
fwait
in
test
lahf
cmpb
push
popa
xor
xchg
push
into
clc
in
cmp
adc
aam
nop
icebp
adc
cmc
loop
mov
xchg
lahf
push
or
lods
hlt
sub
add
mov
test
cmp
adc
jo
xorb
pop
loopne
pop
add
mov
cmp
inc
test
ss
dec
xchg
sub
stc
ret
sbb
xor
push
xor
xorb
lahf
movsb
mov
fs
fnstsw
xchg
std
mov
mov
iret
test
lea
mov
leave
dec
cmp
jnp
test
aad
aad
dec
push
mov
pop
int3
or
imul
lcall
in
adc
dec
mov
repnz
ja
xchg
cmp
or
jb
iret
sahf
aam
pop
ret
or
rcl
mov
daa
psrld
nop
mov
in
jae
and
lods
outsl
and
ja
xchg
dec
les
mov
leave
scas
jne
negl
aad
mov
push
int3
js
dec
arpl
xor
popf
xchg
mov
add
sub
adc
sub
dec
fidivrs
inc
cmpsl
xchg
mov
mov
cltd
imul
jg
shrb
scas
cmp
mov
push
cmp
sub
loope
inc
mov
fcomps
lods
pop
icebp
test
cmpsl
fists
push
mov
lcall
movsl
pushf
mov
test
ss
test
push
ss
push
or
pusha
lock
xor
popa
imulb
hlt
mov
cmpsl
lods
and
sub
loope
add
mov
leave
shlb
call
idiv
insl
mov
cmp
sbb
xor
gs
mov
sub
pop
jbe
sbb
pusha
sbb
mov
cmp
scas
repz
push
std
rclb
fmuls
jg
mov
nop
insb
shlb
inc
aas
cld
push
and
cmpl
test
or
jno
sbb
adc
jmp
lcall
mov
push
adc
inc
pop
xor
xchg
int
js
shl
or
movsb
movsl
mov
sbb
test
insl
adc
sbb
in
pop
scas
int
fsubl
pop
dec
or
sbb
adc
popa
dec
xlat
jmp
cmpsb
cmpsb
dec
mov
jg
lods
loopne
popa
jno
cmc
hlt
popf
loop
xchg
xchg
and
call
push
xlat
aas
pop
push
inc
es
add
fwait
push
sbb
lea
arpl
ficoml
mov
fcoml
mov
push
stc
add
cmc
xchg
pop
cmp
shll
rol
xor
mov
pusha
sti
cmpl
mov
jg
push
lods
in
lret
mov
mov
jl
mov
cmp
mov
or
mov
push
push
icebp
popf
std
and
pop
in
les
popf
mov
inc
cmp
lret
cld
test
mov
es
adc
lods
xchg
xlat
mov
pop
push
hlt
lds
push
pop
subps
mov
adc
push
lock
sub
aaa
out
and
pop
mov
dec
lock
lea
cmp
pop
pop
jge
enter
int
es
jmp
int
pop
xchg
repnz
repnz
xchg
add
mov
out
inc
hlt
out
in
std
mov
jno
in
in
outsb
ds
adc
sar
push
mov
add
dec
pusha
stc
dec
loop
aam
pop
jb
jmp
sbb
jno
sub
pop
rcrl
fbld
xchg
adc
mov
bound
popa
das
lods
negb
test
jge
pop
mov
pop
aad
setb
push
adc
pop
mov
sar
add
dec
mov
mov
stc
pushf
push
test
test
mov
adc
js
test
cmp
inc
test
ficoml
addb
cmpsb
mov
adc
shl
mov
jg
int3
insb
push
and
rclb
pop
sub
sub
out
jae
pushf
inc
xlat
and
cwtl
test
mov
adc
push
sub
es
lret
iret
setae
xor
xor
push
and
xor
sbb
dec
sbb
sbb
mov
jns
cmp
scas
mov
inc
xchg
lret
jne
push
lds
or
loopne
cmp
and
sbb
sub
je
sub
jns
push
pusha
std
and
xchg
mov
mov
mov
mov
xor
ficomps
int3
fidivrs
mov
pop
push
inc
mov
jno
push
inc
sbb
ret
xchg
adc
pop
inc
cmp
daa
ljmp
addl
ja
sub
cmp
push
ret
and
adc
mov
fldenv
in
lock
jecxz
daa
out
push
inc
add
jo
mov
xchg
aas
es
mov
sarl
loop
movsb
mov
test
mov
jns
out
fmulp
mov
xchg
outsb
shl
imul
je
sub
mov
ljmp
daa
rcll
mov
push
adc
jmp
mov
pop
pop
or
aas
outsl
xchg
mov
pop
mulb
icebp
movsl
ret
in
xor
add
loop
out
jbe
sub
xchg
mov
jge
and
int3
add
push
dec
mov
andl
testb
mov
in
add
adc
jle
fdivrs
jbe
fcomps
sub
pop
jb
pop
xchg
lcall
popf
or
sbbb
dec
addl
div
jne
dec
aam
push
lock
iret
sub
sub
and
jmp
shll
jo
aad
push
mov
and
mov
xchg
xor
push
test
rcrl
mov
push
scas
scas
shrl
adc
mov
subb
aad
add
pushf
sub
stc
cmp
mov
mov
inc
push
jbe
or
xor
daa
ljmp
fmuls
push
add
sub
adc
pop
xor
es
pop
jb
bound
cli
jnp
sbb
inc
and
adc
movsl
push
repz
xchg
cmc
shrb
das
sbb
push
pop
push
inc
lar
or
scas
shrb
loopne
popl
or
movsl
clc
cltd
xlat
mov
aam
or
hlt
cmp
mov
negl
mov
jecxz
bound
das
loop
andb
cmp
push
mov
or
subb
sahf
dec
sub
inc
push
aas
xchg
fdivrs
or
adc
xor
pop
into
leave
xor
pushf
in
je
lahf
cmp
in
in
inc
xor
in
mov
frstor
leave
jb
stos
js
jp
sbb
push
or
jge
cmp
jge
dec
inc
lods
test
xlat
mov
pusha
data16
inc
mov
or
xor
mov
mov
xor
or
dec
push
xchg
iret
inc
xor
pushl
lods
jge
inc
lcall
mov
jns
pop
and
cmp
adc
idivb
pusha
fisubrs
pop
imul
out
imul
pusha
les
jb
inc
flds
add
addl
jnp
cmpl
imul
dec
xor
or
mov
and
gs
aaa
arpl
mov
mov
mov
int
dec
mov
mov
cmp
push
lret
xor
adc
or
add
and
fs
fs
sbb
stos
lret
push
bound
or
js
mov
cmp
icebp
cmc
push
cmp
xchg
jmp
shrl
xchg
jns
fidivrs
ss
inc
adc
mov
sar
fisttpl
pop
push
push
jns
mov
push
cmp
push
mov
jp
xor
orl
sbb
mov
cmp
test
jle
fidivs
add
sbb
outsl
icebp
mov
outsl
lcall
sbb
xor
cmpl
and
cmp
pusha
sti
scas
testb
pop
ror
and
sahf
mov
jecxz
jp
inc
jl
out
adcb
fnstsw
xor
cmp
sbb
ficompl
cmc
aad
mov
push
movsb
cmp
push
cltd
xchg
repz
jns
jae
xlat
mov
and
push
sarl
inc
orps
jne
int
cltd
pop
jo
js
call
pop
insb
and
fcmovbe
orl
ret
enter
inc
mov
pusha
in
mov
inc
repz
cmc
pushf
lods
clc
inc
bound
in
popf
pop
inc
out
outsl
fistpl
gs
xor
cwtl
dec
xor
sbbb
mov
sti
ljmp
mov
push
mov
ret
fstps
imul
mov
push
sbb
mov
push
ljmp
addr16
adc
jns
jp
cmp
pop
cltd
add
outsb
sbb
xor
sbb
stc
iret
std
or
cmp
pop
je
or
jge
sub
jne
bound
xchg
sarl
dec
push
or
mov
adc
jge
fwait
push
cmp
push
jp
jns
jne
adc
addr16
cltd
scas
xorl
mov
imull
dec
xchg
mov
lods
sbb
mull
dec
push
or
mov
push
adc
inc
imul
mov
outsl
mov
mov
ss
add
dec
in
jo
xor
sub
dec
aas
push
test
int
popf
mov
fistpl
sti
cmp
push
sbb
sbb
sub
adc
imul
pop
jbe
stc
push
and
inc
stos
push
fs
or
in
fdivrs
and
or
jae
sbb
inc
xchg
jno
mov
cmp
push
aaa
cmc
ds
fwait
pop
adcl
sub
hlt
aaa
lods
xlat
dec
data16
dec
fwait
sub
cmp
sbb
pop
pop
pop
inc
jno
xlat
ret
outsl
jge
xchg
xchg
insl
fidivrl
test
je
mov
mov
pop
in
cmp
xchg
mov
xchg
dec
jecxz
inc
test
xchg
lock
lret
push
fimull
mov
orb
and
lock
lods
push
pushf
jb
test
in
inc
cld
xor
mov
mov
inc
or
inc
or
lds
test
mov
insb
out
cmpsl
dec
dec
call
rcrb
rclb
subl
inc
or
and
push
and
inc
insb
jno
loop
add
ret
cld
popf
call
jbe
addl
dec
adcb
cs
movsb
push
negl
loopne
jmp
dec
add
pusha
cmp
test
int
call
lret
jecxz
lcall
push
daa
and
mov
inc
jb
push
fstp
hlt
fs
jno
stos
jnp
psrlw
out
jmp
popa
mov
arpl
xchg
adc
out
scas
and
sbb
mov
jl
add
addl
pop
pop
mov
mov
add
xchg
lret
aas
xchg
push
addr16
jno
and
outsl
fnstenv
or
and
inc
push
add
or
xchg
and
pop
pop
cmpsl
mov
icebp
jmp
inc
stos
sbb
xchg
insb
dec
jno
roll
shrl
popf
pop
jne
mov
cmp
push
jg
ss
mov
inc
repnz
xchg
pop
mov
push
xchg
ja
pop
insl
dec
imul
xchg
test
ja
pop
xor
lcall
idivl
ljmp
js
cmp
imull
pop
jnp
sbb
cmpsb
xchg
imul
loopne
roll
pop
pop
fstp
mov
xchg
push
sub
lahf
jmp
nop
xor
insb
and
daa
out
adc
pushf
sub
sub
stc
icebp
sbb
out
sarb
shr
jl
dec
dec
push
aaa
rorl
sbb
pop
movl
cmpsb
sbb
cmpsl
pop
xchg
xor
mov
inc
jae
lret
das
mov
jb
sbb
mov
mov
sbb
or
pop
add
cmp
xor
fdiv
inc
shll
dec
jmp
mov
xorb
bound
cmp
cmp
imul
insl
push
push
lahf
sub
into
lods
inc
testl
inc
dec
add
push
inc
push
push
mov
clc
add
and
cmp
cmp
mov
dec
jg
repz
mov
pop
dec
fsubl
daa
ss
std
jp
adc
fdivrl
lock
cmp
xor
imul
xor
jl
xor
sub
xchg
and
mov
daa
in
std
fstps
aam
inc
daa
and
adc
orb
dec
sbb
jne
or
shlb
xchg
mul
add
out
mov
lea
dec
roll
add
aas
mov
nop
push
jo
inc
mov
int
mov
cmpl
or
fldcw
pop
mov
xlat
sti
jbe
mov
pop
cmp
rclb
jge
lock
sub
lcall
test
add
add
fmull
push
cmp
enter
adc
inc
mov
stos
iret
or
pop
ljmp
addr16
lock
xor
mov
xor
sbb
mov
loopne
stos
shl
stos
and
dec
dec
push
pop
add
cmp
fnclex
js
jbe
mov
jg
ss
lea
xor
popf
jne
fidivs
mov
adc
cs
aam
mov
rol
dec
mov
sarb
lcall
icebp
xchg
adc
sub
pushl
adc
aas
mov
pop
pop
repz
and
inc
pop
sub
inc
lea
xchg
xor
pop
dec
cmp
shrb
push
negb
fimuls
stos
inc
sub
xor
sub
sti
out
in
pop
leave
jae
pop
fistpll
mov
test
aam
clc
stc
out
nop
xlat
push
adc
cli
xor
add
mov
pop
jae
leave
add
adc
mov
adc
inc
mov
sub
shlb
notl
fsubs
mov
test
repz
adc
or
movsl
icebp
mov
xchg
pop
lret
xor
xlat
push
stc
lods
lahf
cld
cmpsl
icebp
fnstenv
rol
xchg
cli
mov
in
lock
mov
xchg
fdivrs
lcall
jle
loope
enter
std
xchg
pop
sub
insb
sti
mov
pop
mov
out
scas
inc
int
bound
ds
dec
cmp
mov
push
or
push
sti
pop
push
cmp
xor
adc
or
dec
sub
test
adc
push
pop
mov
or
test
xchg
hlt
jp
pop
aaa
xor
repz
fimull
jnp
jmp
mov
sahf
jns
push
lock
arpl
shll
mov
clc
mov
and
add
jmp
aas
je
cli
out
and
dec
push
pop
iret
mov
add
cmp
dec
pop
push
fxch
pop
sbb
adc
arpl
lret
jb
hlt
hlt
js
and
adc
add
jno
scas
scas
pop
fnstsw
sub
pushf
iret
repz
jge
cmp
inc
into
adc
rcr
push
outsb
dec
in
stc
xchg
scas
test
daa
fdivrs
push
in
in
pop
mov
and
lcall
ret
push
push
loop,pt
or
js
jns
paddq
cmp
xor
nop
cmp
out
sbb
fldl
cwtl
xchg
jle
add
push
pop
imul
and
or
aas
pop
adc
fldenv
in
inc
xchg
or
adcl
aas
pop
xchg
shll
mov
pop
inc
cmp
cmp
mov
push
dec
stos
or
shll
push
pop
pop
xchg
push
bound
add
mov
in
movsl
mov
mov
fadds
test
mov
subl
loop
cmp
in
les
and
or
dec
frstor
add
pushw
push
sbb
mov
pop
int
xor
push
aaa
cmp
out
dec
fstpt
inc
mov
test
sarl
jne
mov
mov
jge
mov
cmc
cmp
inc
jle
jmp
ljmp
xor
pop
ds
imul
call
rol
es
jmp
add
or
mov
or
repnz
fcoml
pushf
xorl
ja
xor
push
mov
lea
sbb
mov
pandn
jp
and
outsl
loope
lea
lods
inc
cwtl
or
sbb
testl
rcrb
data16
addr16
aad
mov
das
pop
mov
out
nop
jns
jb
into
aas
insb
xchg
jne
fists
fcmovbe
fstpt
fwait
cld
push
jg
mov
sbb
sbb
cmpsl
xchg
sub
jl
imul
aaa
test
mov
jb
aam
pop
repz
movsl
sub
loopne
and
shll
and
outsl
inc
mov
add
sarl
or
scas
push
adcl
or
movsb
jge
xlat
pop
lods
adc
lret
inc
fisubrs
jnp
scas
sub
mov
scas
mov
dec
inc
cmc
mov
dec
in
arpl
pop
rcrb
jae
pop
sbbl
inc
inc
shl
orb
stc
jns
inc
pop
aas
pop
aam
lret
scas
sbb
mov
sbb
sub
mov
or
and
ss
push
jge
adc
push
outsb
scas
ja
nop
in
adc
subl
xor
shrl
repz
jne
cmp
lcall
adc
pop
iret
mov
push
dec
xor
testl
jle
mov
xor
icebp
sbb
mov
arpl
xor
in
lock
mov
push
jae
push
mov
xor
push
daa
push
sbb
ja
pop
jmp
lret
scas
xchg
enter
or
mov
sbb
fistl
jo
ret
adc
fcmovne
dec
mov
jo
lea
or
add
mov
les
dec
scas
std
arpl
push
xor
inc
lods
nop
cmp
cmp
and
stos
or
ds
adc
jns
outsl
divl
shll
stos
mov
es
and
inc
seta
into
jb
test
cmpsb
pop
mov
out
pop
negb
ret
cmp
mov
ja
aas
mov
jp
mov
je
and
in
loop
addl
and
scas
lret
fsubr
loope
stos
jecxz
addb
lret
fisttps
or
mov
dec
jg
jg
shr
push
es
popf
cmp
loope
mov
xchg
insl
inc
repnz
sbb
push
dec
mov
out
lcall
dec
pop
pop
lahf
mov
cltd
sbb
and
lods
insb
xchg
in
jns
lods
jl
sbb
rorb
sbb
iret
sbb
pop
xchg
adc
cmp
xchg
loop
xchg
and
mov
inc
adc
mov
subl
xabort
or
mov
inc
lcall
cltd
pop
jp
push
out
fstpl
dec
sahf
insb
mov
ret
fdivrl
ja
std
cli
push
cmp
inc
add
repz
jg
arpl
push
in
lods
into
cmp
inc
and
adc
clc
gs
dec
add
sbbl
stos
in
mov
sbb
mov
sbb
xor
dec
imul
js
xor
aad
movsl
shrl
inc
dec
fstpl
inc
shll
and
add
jns
mov
sub
out
loope
pop
or
call
mov
mov
xchg
mov
xchg
sub
dec
pcmpeqb
nop
sahf
out
popf
roll
sub
arpl
jl
push
ret
dec
in
fsqrt
test
sub
jge
or
gs
mov
imull
mov
cmp
jns
pop
gs
ljmp
xchg
sub
or
xor
jmp
push
cmp
sbb
mov
int3
ja
sahf
adc
xlat
mov
decl
mov
sub
cmp
sbbl
adc
popf
dec
and
jg
outsl
out
lahf
dec
jle
push
adc
stos
xor
out
int
sarb
ss
push
addr16
popf
xchg
pop
sub
sbb
aas
xchg
jae
leave
mov
mov
fstps
test
cli
mov
and
sahf
or
jmp
cs
lds
add
mov
aaa
and
jno
mov
add
popf
sahf
pop
add
aad
adc
sub
push
mov
bound
and
sbb
and
mov
mov
xchg
lds
jl
and
ret
pusha
fstpl
pop
es
push
pop
daa
scas
cmp
ljmp
scas
repnz
lods
divb
ss
sub
lahf
inc
test
inc
repnz
adc
mov
lret
sub
pop
ds
and
arpl
jns
mov
sub
pop
shll
or
aam
fiaddl
xchg
xor
push
clc
and
xor
or
imul
daa
inc
inc
je
add
shrb
rcll
int
adc
daa
push
movsb
mov
sbb
cs
mov
movsl
popa
push
mov
xor
or
sbb
sub
add
nop
add
jge
lds
pop
lret
faddl
mov
lea
and
callw
sti
iret
add
jb
sbb
fsubl
xlat
mov
push
or
les
aad
cmpsb
add
add
push
inc
jb
movsb
push
jne
mov
mov
rcl
cmpsb
loop,pn
mov
in
addb
das
adc
or
in
fisubs
movsl
sub
push
addr16
lea
fs
jmp
push
or
scas
mov
inc
rcr
mov
mov
lahf
filds
lcall
push
sbb
or
inc
mov
std
pop
lret
out
cld
repnz
mov
movsl
jae
outsb
js
loope
mov
pop
add
cwtl
or
mov
push
loop
faddp
dec
mov
push
das
push
cltd
iret
shl
and
out
cmp
pop
pop
orl
lods
xor
xchg
hlt
stc
adc
jecxz
cmp
inc
inc
ret
inc
push
sub
fidivrl
inc
cmpsl
out
or
pop
cmp
mov
rolb
xor
jp
nop
jl
cmpsl
and
clc
adc
negl
imul
xchg
mov
fimuls
push
icebp
xor
bound
cli
lds
push
xor
jle
and
xchg
int
imul
pop
cltd
insl
pusha
aas
andl
inc
cmpsl
loope
mov
lahf
mov
push
push
ret
loop
cmp
sbb
movsl
adc
and
cmp
or
pop
int3
mov
aas
rorl
dec
xchg
fcmovnbe
mov
ljmp
adc
add
test
fmulp
push
sub
mov
xchg
out
and
shrb
shlb
inc
xor
fsubr
lcall
cmp
aaa
lret
inc
mov
xchg
or
jae
xchg
mov
mov
sbb
sbb
out
pushf
pop
data16
pop
push
lock
and
sub
out
andl
mov
icebp
sbb
iret
pop
xor
push
cltd
dec
into
ret
xchg
test
push
popa
in
cmp
adc
push
inc
and
loope
sub
push
fwait
and
jl
jmp
ret
cmc
iret
inc
xor
mov
push
xor
sub
fisubs
mov
sbb
ret
pop
mov
push
mov
loop
test
pop
sub
xor
sbb
mov
inc
mov
fisubs
cmpsl
adc
cmp
movsl
mov
and
test
call
xor
stos
mov
lds
fisubs
xlat
mov
adc
imul
fisubrl
sub
pop
mov
push
rclb
in
es
jp
mov
ret
popa
scas
xor
addl
mov
add
mov
int3
gs
out
mov
xor
out
pop
or
les
aaa
cltd
fidivs
scas
mov
lods
ds
fcmovu
js
in
adcl
bound
sub
js
insb
and
ja
push
bound
xorb
movsl
inc
mov
lods
ja
sub
mov
pop
or
dec
in
add
pop
mov
lret
fsubrl
lret
lea
stos
push
jnp
out
out
imul
imul
int
in
mov
aam
add
add
sub
inc
mov
fisttpll
jne
ret
pop
sti
xor
stos
dec
bound
out
inc
mov
lret
xchg
cld
nop
test
xchg
mov
sbb
into
mov
imul
loopne
cmpb
aas
and
jae
xchg
jb
jb
ja
sbb
mov
nop
mov
daa
pushf
js
inc
mov
push
lret
xchg
insb
fwait
push
dec
xor
mov
jl
jle
xchg
repnz
fs
in
mov
add
mov
pop
cltd
popa
cmpsb
fidivrs
ret
in
xchg
mov
adc
xor
xchg
sub
add
push
cwtl
jle
adc
cld
jg
in
xchg
cmp
xlat
lods
mov
lea
testl
addb
and
scas
add
stos
ja
fiadds
pop
lods
adc
pop
dec
mov
jno
lds
repz
sbb
pushf
inc
dec
scas
push
inc
fsubrl
cld
popa
jp
ljmp
repz
jle
cmp
xchg
aaa
lahf
and
push
mov
jo
negb
push
sbb
insb
fwait
mov
or
jp
outsb
or
lds
mov
loop
and
or
leave
imul
shl
outsb
iret
jmp
stos
push
mov
sub
pop
xor
icebp
push
xor
pop
jle
add
pop
sti
jne
sbb
pop
das
mov
ret
mov
mov
popf
loop
mov
out
fistpl
push
lods
inc
icebp
cmpsl
mov
mov
push
dec
push
jns
and
sbb
push
cmpsb
data16
rorb
enter
sub
or
cmpsb
jle
inc
mov
fs
push
int3
xchg
xchg
std
fwait
fwait
and
and
aaa
fisubrs
sub
test
dec
out
mov
or
xlat
icebp
loopne
xor
lahf
addb
fcmovb
cwtl
inc
rcll
out
out
lea
call
sbb
mov
addb
xchg
pop
mov
scas
popf
and
ret
lods
stos
pop
jns
rclb
push
test
mov
add
bound
std
sbb
lods
stc
sbb
xor
sub
push
mov
push
inc
mov
mov
dec
addl
inc
mov
and
xchg
inc
rcr
inc
enter
movsb
mov
inc
imul
mov
mov
aas
fs
ljmp
stos
push
sub
nop
inc
sub
inc
mov
fdivl
or
lods
sahf
jns
sarl
push
xchg
mov
mov
sbb
or
or
shrl
mov
jge
incl
insl
pushf
xor
inc
inc
mov
xor
inc
rcl
sahf
idivl
lahf
rcrl
mov
movl
ljmp
fwait
mov
dec
es
cmp
mov
mov
adc
dec
cmp
cmp
add
das
mov
jl
repnz
adc
lcall
scas
jl
or
sahf
mov
stc
lahf
pop
jmp
cmp
std
clc
in
popa
cmp
adc
add
loope
xchg
and
inc
repz
xor
mov
jne
push
idivb
and
push
scas
aam
iret
cmp
test
jg
stc
add
shll
stos
fwait
roll
in
jecxz
loope
xorb
mov
ds
xchg
pop
sub
push
clc
lods
fwait
push
loope
gs
sbb
or
dec
hlt
mov
push
mov
icebp
add
repnz
adc
pop
in
add
pusha
repnz
in
push
in
pop
lahf
jno
out
mov
imul
ja
fstp
loop
and
pop
mov
loopne
out
and
jnp
mov
icebp
or
pushf
mov
jg
int3
in
out
or
jle
xchg
adc
mov
fdivs
arpl
push
mov
into
adc
jmpw
clc
cs
xor
lods
xchg
sbb
je
pop
adc
lret
imul
cs
inc
inc
daa
xchg
loope
pop
sahf
lcall
push
lcall
sbb
push
int3
pop
ss
add
xchg
push
push
push
das
aam
or
xor
and
nop
subb
lcall
das
adc
jmp
clc
into
sbb
and
cmp
inc
and
jecxz
mov
pop
loopne
lods
insb
lock
mov
lret
cmp
dec
xor
push
pop
add
push
and
lock
push
add
inc
pop
and
pushf
jp
add
fistl
or
jns
fisubs
xor
dec
hlt
dec
inc
pop
in
xchg
mov
hlt
std
sbb
xor
mov
shr
add
mov
adc
add
bound
lcall
dec
movsl
sub
jo
jp
or
lahf
mov
pop
jl
movsl
push
arpl
or
lea
inc
call
popa
and
mov
jno
aaa
es
and
mov
iret
xlat
lods
loope
xchg
sub
fsubl
test
aaa
into
mov
mov
fcomps
xor
sti
mov
sbb
pushf
cmp
jbe
dec
jbe
sbb
cmp
and
mov
into
popf
sahf
lahf
inc
dec
mov
sahf
movsb
shll
mov
dec
and
xchg
sub
jmp
ret
mov
or
testl
jns
test
js
jnp
jge
pushf
mov
push
dec
pop
int3
mov
sub
mov
jns
js
cld
aam
push
pop
leave
sbbb
lods
dec
push
test
jge
and
and
daa
popf
test
lods
adc
ja
icebp
ja
ds
push
sbb
fisubs
movsl
cmp
repz
rcrl
test
sti
fneni(8087
in
ss
cmpsl
stos
mov
pushf
mov
or
pop
mov
or
ret
xchg
leave
xchg
adc
jae
lods
std
mov
xchg
xor
jp
xchg
mov
mov
repnz
and
pop
insl
pop
xchg
bound
mov
leave
stos
xchg
dec
sbb
iret
cmp
push
push
in
jnp
sbb
stos
call
ja
jns
clc
adc
xorb
icebp
fstpl
xchg
lods
mov
je
roll
jl
into
out
mov
xchg
fiadds
inc
fldenv
sarl
mov
push
add
popf
orb
outsl
pop
pop
pop
push
or
stos
shrb
aaa
pop
int3
cmp
jae
mov
stc
clc
in
jbe
cmc
out
mov
inc
inc
ss
lret
cld
dec
lock
dec
and
cmp
add
dec
testb
mov
jmp
cmp
loop
dec
xchg
adc
mov
aad
lahf
ret
dec
negl
scas
push
popf
jle
pop
gs
inc
je
sbb
cli
or
lock
push
sbb
mov
cmp
fcoms
jmp
xchg
int3
fdivrs
lret
or
into
add
mov
mov
rorb
popf
mov
loopne
push
idiv
and
inc
or
idivb
mul
mov
es
mov
or
or
push
lret
test
jae
scas
xor
int3
or
int
cmp
mov
cld
jecxz
insb
mulb
aaa
xchg
jmp
sti
pop
loop
pop
jmp
pop
mov
imul
mov
pop
dec
test
adc
imul
pop
cli
sub
out
movsl
inc
in
jg
shll
loop
movsl
loopne
loopne
lahf
fstl
sbb
mov
pop
add
jo
mov
sub
pop
int
jp
mov
fldenv
fiaddl
inc
rcrl
testb
xor
xchg
out
arpl
sbb
loope
loope
setne
jl
addr16
sub
add
xor
or
ds
lret
cmpsb
test
pop
sub
inc
lods
arpl
or
pop
inc
into
mov
jno
xor
pop
lcall
fmull
aas
mov
pop
out
or
stos
shlb
cmpsb
lods
or
pop
addl
push
in
mov
shll
mov
sbb
xor
aaa
jecxz
cltd
stos
call
jb
push
inc
sahf
jg
out
test
sti
cwtl
xor
loopne
faddp
dec
pop
jle
adc
cmp
stc
push
subl
or
aas
mov
jecxz
mov
subl
mov
out
mov
iret
jl
sti
inc
xchg
jae
lock
hlt
jae
movb
xchg
mov
push
nop
xchg
and
enter
jg
movsb
mov
jae
lds
xchg
aaa
inc
stos
cli
pop
fxch
pusha
call
sub
add
lods
xchg
xchg
cmp
ficompl
mov
aam
or
aaa
out
cwtl
push
sbb
add
pop
jnp
pop
ss
int3
mov
ss
call
or
gs
push
push
gs
shl
and
pop
stc
cmp
sbb
out
inc
aaa
pop
aas
loope
nop
test
sub
mov
xor
adc
push
test
adc
out
mov
add
frstor
call
xor
lcall
adc
add
rep
rorl
xchg
shlb
test
std
es
inc
loopne
push
inc
shl
fs
lea
in
sub
xchg
scas
sub
xor
adc
sub
and
xor
jbe
add
mov
mov
aad
dec
xchg
lret
out
pop
sar
loope
push
int3
or
pop
push
addb
xor
mov
pop
fstl
sbb
sub
lods
xchg
adc
lods
sbb
sub
insl
lods
jecxz
add
inc
popa
inc
inc
ljmp
popa
mov
push
out
enter
cld
sub
jle
mov
fistpl
sub
nop
jle
or
outsl
insb
sub
sti
add
inc
push
imul
ja
mov
lret
mov
dec
mov
xor
jo
testl
es
mov
std
scas
clc
inc
stc
inc
icebp
mov
notl
push
movsb
cwtl
xor
push
jmp
adc
or
cmp
xor
fst
loope
mov
and
jg
mov
jl
cli
fsubrp
cmp
pop
push
cs
ja
scas
stos
sub
jmp
cmpsl
mov
push
mov
dec
cmpsl
in
or
sarb
ret
div
jo
dec
lods
lods
xor
jle
adc
scas
mov
sbb
and
cs
es
pop
mov
idivb
add
pushf
jg
sbb
push
push
cmp
mov
mov
cmp
leave
mov
cmp
mov
dec
cs
pop
cmpsb
lret
sbbl
shrb
cmc
fnsave
scas
xchg
data16
cwtl
lods
cmpsb
mov
dec
sub
mov
mov
cs
mov
scas
test
addr16
movsb
pop
ljmp
dec
ret
cmp
mov
lret
sbb
dec
fadds
lods
test
les
lret
sbb
or
pop
test
sti
mov
shll
rcll
shrb
imul
rcrb
js
lret
sbbb
popa
addl
loope
dec
out
addr16
mov
xor
sub
addr16
icebp
jo
movsb
mov
dec
ds
push
nop
imul
fucomp
mov
leave
xor
fcoms
sbb
enter
aas
and
adc
insl
pop
cltd
mov
mov
subb
push
push
push
add
inc
dec
mov
dec
in
mov
mov
aas
mulb
into
and
or
out
sub
inc
fistl
mov
enter
adc
adc
idivl
outsb
lock
dec
in
in
rcr
out
mov
insb
push
es
xlat
mov
adc
lcall
loope
inc
fildl
lds
ret
add
mov
je
cwtl
rsqrtps
ss
in
nop
or
cmp
mov
lds
inc
adc
and
hlt
in
outsb
rorb
rcrb
sbb
daa
mov
test
popa
cmp
cwtl
xchg
and
pop
cmp
mov
mov
pushf
in
push
ljmp
cmpsb
mov
pop
mov
cmpsb
push
xchg
inc
xchg
pop
push
sub
loope
cltd
mov
add
mov
and
into
ss
es
fsubrl
jp
add
jo
ficoml
push
addb
jne
scas
lods
test
add
cld
pop
or
loope
inc
or
sbbb
mov
lahf
lahf
ja
dec
mov
cmpsl
mov
lds
xchg
xchg
cli
cmpsl
setle
mov
inc
jno
cltd
cmpl
xorb
test
insb
test
adc
xor
adc
lea
adc
pop
adc
icebp
adc
sub
icebp
xchg
in
cmp
loopne
dec
scas
mov
rep
hlt
flds
clc
jnp
aas
scas
subb
dec
pop
mov
mov
daa
inc
jp
aad
cmp
dec
sarb
loope
ljmp
add
les
sbb
mov
mov
dec
lods
xchg
dec
test
adc
mov
scas
pop
xchg
push
lods
inc
js
mov
inc
mov
mov
fstpt
push
inc
xchg
stc
jne
jg
insl
sub
fcompl
imul
push
gs
mov
js
in
inc
push
fnstenv
out
pop
mov
pop
in
insl
jns
sahf
dec
push
pop
cmc
popf
in
jno
insb
mov
xchg
dec
mov
mov
popa
xor
cwtl
sub
aad
mov
or
dec
pop
xchg
or
or
fmuls
sub
mov
divb
dec
mov
lret
push
mov
nop
or
cld
popf
sbb
inc
loopne
lahf
lods
sub
xor
js
sbb
fwait
daa
inc
sbb
mov
test
jae
test
icebp
ljmp
imul
pop
negl
adc
push
cltd
call
sub
gs
outsb
push
push
lea
xor
mov
mov
xchg
mov
aas
arpl
and
jno
and
xchg
inc
cmp
mov
adc
pop
inc
sub
add
push
or
add
mov
jae
stos
dec
dec
pop
or
xchg
and
addb
adc
rol
mov
dec
cmp
mov
sub
test
rcrl
call
iret
das
mov
gs
add
fstp
js
or
lods
aaa
inc
mov
cwtl
xchg
rolb
leave
arpl
pop
movsb
js
push
loopne
dec
pop
cmp
push
int
push
mov
adc
inc
test
clc
out
push
sbb
inc
adc
mov
icebp
push
inc
mov
push
sub
notl
and
jl
dec
and
or
subps
imul
jl
pop
ret
push
dec
rol
jb
aad
cmp
iret
mov
cmpsb
and
jecxz
sub
mov
sbb
mov
and
sbb
lock
xor
mov
aam
fcompl
xlat
xchg
pop
inc
clc
cltd
lret
sbb
in
int
sbb
in
dec
movsb
pop
loop
in
into
das
mov
ret
push
xchg
in
xchg
stos
and
das
mov
cwtl
jge
sub
adc
mov
pusha
jne
repnz
ficompl
loop
addr16
xchg
shl
push
or
rcrb
cltd
pop
stc
shll
and
test
mov
ret
into
insb
xor
mov
xorb
enter
cwtl
mov
push
jne
mov
push
cli
cmp
push
jge
lods
test
add
jl
int3
mov
xchg
addr16
pop
fs
jns
mov
cmp
sbb
and
xor
mov
push
rorb
aaa
mov
sbb
aad
push
out
push
mov
push
push
arpl
out
lahf
les
push
gs
push
fabs
shll
or
adc
cld
stc
sbbb
cmc
mov
xchg
cwtl
or
arpl
ja
fisttps
or
orl
pop
jbe
hlt
jecxz
mov
mov
xor
fildl
and
or
icebp
aad
adc
mov
push
es
ret
sub
jne
fwait
mov
mov
xchg
loopew
pushf
or
mov
rorb
dec
bound
aas
pop
loopne
dec
ficompl
rcr
in
es
cmp
addr16
faddl
push
rcrl
mov
rol
dec
sbb
mov
add
jp
les
cwtl
pop
jno
fsubrp
xlat
add
adc
jo
adc
or
pop
jno
sbb
lahf
push
in
outsb
test
cmpsb
addr16
neg
ljmp
or
nop
aam
fstpl
mov
jge
icebp
addr16
add
sbb
jge
mov
jmp
popa
call
lods
sub
push
aam
lcall
sbb
pop
shl
mov
and
sub
nop
jl
push
sbb
jecxz
fcomps
out
adc
jecxz
dec
movb
jle
mov
fs
insl
cmp
dec
cmp
jle
repnz
jle
hlt
outsb
lcall
imul
or
inc
lret
mov
bound
or
lret
xchg
jns
mov
outsb
test
cmp
imul
cmc
shlb
mov
je
push
ja
andb
dec
push
jp
mov
cmp
jne
test
jp
clc
stos
pop
pop
jecxz
dec
lods
jecxz
ret
mov
push
gs
jne
add
loopne
gs
pushf
mov
adc
xor
or
stc
jl
loopne
outsl
nop
loop
pushl
or
in
cltd
mov
mov
push
xor
femms
aam
sbb
push
jbe
daa
popa
lea
scas
jae
in
test
add
das
push
add
addr16
es
clc
or
ja
sub
xchg
sbb
jp
pop
lahf
jle
dec
les
cmpsb
fisubrl
pushf
movb
cltd
in
mov
or
pop
out
dec
sub
adc
jle
mov
sbb
add
dec
fsts
jle
pop
adc
cltd
sub
mov
fbstp
or
test
clc
xchg
and
xor
mov
push
scas
mov
xor
push
ret
into
inc
mov
cmp
das
call
xchg
ret
inc
je
loop
das
cli
scas
fcoml
cwtl
sti
push
sbb
inc
and
mov
outsb
dec
mov
push
jo
mov
mul
js
imul
push
rcr
repz
filds
mov
repz
loop
fcoms
hlt
in
pop
mov
dec
cmp
stos
add
das
push
adc
add
stc
mov
mov
ljmp
mov
rolb
mov
popa
push
aaa
and
xor
inc
push
pusha
das
dec
inc
lret
push
testl
pop
mov
dec
dec
rcrl
es
adc
leave
shl
insb
mov
dec
shlb
push
movsb
jno
sbb
das
jge
ror
jb
push
mov
cli
pop
iret
mov
cmp
and
hlt
xchg
mov
push
fadds
xchg
jmp
inc
sbb
mov
mov
cs
aaa
cwtl
call
test
xlat
leave
int
sbb
pop
test
aad
mov
push
or
mov
sub
imul
mov
subb
pop
ljmp
cmp
jne
add
enter
insl
jecxz
pop
test
faddl
adc
test
je
and
sub
inc
inc
mov
in
xchg
lds
mulb
mov
xchg
sti
jo
std
lcall
cmc
xchg
mov
jae
or
stos
dec
movsl
fsubrs
int3
jle
ds
cli
inc
ja
add
shl
clc
inc
xor
sahf
jl
into
xchg
repz
mov
popa
outsl
and
rcrb
push
ret
sbb
and
arpl
sub
push
test
jge
in
push
lret
mov
mov
jo
outsb
jecxz
cmp
mov
jae
inc
aas
pop
pop
dec
xchg
jne
ss
jmp
push
aam
xchg
mov
xlat
rep
mov
pop
xor
jb
fbld
jne
mov
jae
test
cltd
dec
pop
subl
mov
jl
ds
aas
in
push
xchg
cmp
jo
lcall
jmp
jmp
or
jne
add
movl
insl
sbb
stos
jg
pusha
cwtl
xlat
out
push
orb
fcomi
inc
cwtl
xchg
cmpsl
out
les
stc
cmp
mov
insl
sbb
test
std
fcomi
ds
rorl
xor
jle
xchg
out
out
push
mov
inc
jmp
adc
jmp
je
and
imul
mov
je
aas
sti
inc
fsubrs
outsb
in
jl
inc
or
add
mov
ret
inc
fs
sbb
outsl
mov
dec
inc
xchg
in
subb
dec
imul
sar
adc
mov
jns
inc
jmp
mov
inc
jo
and
je
aam
xchg
push
dec
mov
mov
mov
pop
mov
and
pop
popa
loope
sarl
pop
cmp
jge
lock
and
and
addr16
mov
dec
cmp
dec
mov
jb
push
mov
xchg
mov
in
in
nop
pop
scas
cli
test
jae
add
jp
mov
xlat
push
imul
mov
scas
adc
and
jo
cmp
outsb
mov
mov
imul
fsubrl
popf
out
insl
loopne
and
ds
addr16
addl
inc
int3
out
stos
inc
stos
mov
cmpsb
je
cs
repnz
cmp
in
pop
stos
pop
int3
mov
mov
jb
fmull
aad
test
call
pop
xor
cmp
es
inc
and
sub
push
xchg
push
lods
and
dec
mov
sbb
lea
sahf
fisubl
and
mov
add
sub
jp
mov
icebp
or
xchg
mov
xchg
jns
or
jge
mov
sbb
stos
mov
sbb
sbb
mov
pop
rcrb
or
add
stos
add
movsb
mov
sahf
adc
sub
scas
cmp
xchg
xor
inc
movsb
dec
mov
jmp
push
orl
iret
hlt
popf
test
jle
test
outsb
lcall
pop
dec
decb
cltd
es
sbb
inc
mov
and
jnp
repnz
lret
lcall
iret
dec
add
ss
adc
mov
in
fwait
daa
mov
fbld
mov
dec
rcrb
add
dec
dec
xor
ss
fnstcw
jbe
sahf
mov
cwtl
add
aad
aaa
fisttps
pop
and
fnstcw
inc
mov
mov
lods
cmp
xchg
sbb
pop
cli
push
sbb
push
testb
xchg
popf
sahf
xchg
jns
mov
sahf
pop
push
push
lret
sbb
test
loope
push
jmp
aad
hlt
pop
cld
fwait
add
pop
pop
mov
sub
push
and
cmp
pop
dec
sti
popf
add
movsb
inc
jmp
add
subl
sbb
jnp
gs
mov
xor
call
pop
cmp
dec
ficomps
test
aam
mov
xor
and
cmp
rcl
adc
lcall
push
or
mov
and
lea
out
pop
inc
rol
cld
push
push
jg
movsb
pushf
out
arpl
push
int3
inc
cmc
daa
mov
dec
add
sar
add
push
or
mov
sbb
cli
or
push
sub
pop
and
filds
repz
lds
adc
mov
sahf
or
mov
mov
cmc
xor
mov
mov
jle
xchg
rcrb
sbb
push
xchg
call
adc
dec
and
xchg
imul
fdivs
orb
sahf
mov
fstl
aaa
out
hlt
vpmacssdd
and
gs
sub
scas
pop
mov
aad
loopne
cmp
xchg
mov
mov
das
pop
fs
fcmovu
movsl
loopne
sub
xor
into
cmpsb
rorl
push
iret
test
or
inc
je
jmp
lea
mov
out
push
imul
sbb
ja
ficoml
cmpps
shr
xchg
enter
cmpsb
push
xchg
xchg
lret
jp
sub
imul
add
add
leave
cmp
roll
xchg
ljmp
mov
pushf
and
xor
pop
flds
cmp
jle
loope
stos
mov
rorb
dec
test
fmull
aad
and
data16
inc
jle
aaa
arpl
pop
jno
mov
ss
out
aam
add
jmp
adc
mov
cmpsl
aam
nop
inc
test
call
push
aam
enter
mov
jae
icebp
lea
je
test
or
stos
sarl
ja
adc
imul
aas
push
adc
inc
mov
cmpsb
push
sub
adc
push
test
or
and
cmp
movsl
mov
adc
cwtl
sbb
int
and
push
inc
inc
inc
cmpsl
push
add
push
mov
jo
sbb
mov
sbb
sub
addr16
sub
icebp
push
xchg
leave
cmp
mov
mov
xchg
push
mov
xor
push
cmc
int
in
xchg
stos
ds
jmp
out
inc
xchg
out
jg
mov
jp
adc
dec
leave
iret
mov
cltd
sbb
jmp
sub
mov
pop
or
cmpsb
std
sahf
jecxz
sub
xchg
and
xor
dec
pop
pop
aad
loopne
cmpsb
out
xchg
mov
sub
xchg
mov
inc
push
inc
divb
pop
dec
in
pop
imul
dec
sbb
dec
mov
pop
add
xor
adc
xlat
sti
lods
cld
andb
ret
lcall
in
gs
jo
cld
add
loope
repnz
sub
dec
jl
std
jnp
mov
dec
stc
xchg
mov
lods
mov
mov
repz
and
and
test
cmpb
icebp
fdivrl
push
mov
lcall
pop
idivl
or
mov
push
pop
lods
jmp
add
das
cld
cmp
adcb
dec
or
mov
leave
test
pop
xchg
mov
pusha
imul
insb
aas
aas
stos
sti
rorl
sub
mov
scas
cmpsb
mov
shll
cmc
dec
inc
daa
mov
subb
mov
or
pop
sub
clc
fs
fnsave
mov
movsl
jns
and
fildl
mov
addb
leave
lock
xchg
jae
mov
xchg
test
inc
push
arpl
jg
add
lret
sbb
outsl
cmp
cmpsb
push
xchg
loope
rorl
cs
cmp
jge
pop
gs
mov
xor
addr16
in
inc
jns
push
mov
mov
cmc
xchg
fiaddl
adc
scas
adc
ficoml
mov
pop
jecxz
and
rcrl
mov
in
imul
aam
inc
ja
add
mov
sbb
popa
loope
loopne
and
stc
jg
add
cmp
adc
jae
xchg
in
sbb
shlb
pop
leave
loopne
mov
sub
dec
insb
pop
cmpb
pop
xchg
and
mov
in
pop
sahf
les
and
adc
add
mov
lret
sub
loop
mov
mov
and
inc
inc
and
cmpsl
xor
aas
icebp
pusha
loopne
fwait
mov
sbb
cmc
pop
das
nop
fs
add
rclb
andb
mov
mov
mov
inc
cmp
lret
jecxz
pop
xor
pop
out
lds
int
xor
jmp
pop
push
repz
or
stos
outsb
mov
je
sub
pop
enter
xchg
dec
inc
inc
call
mov
add
and
jg
adc
ss
rorl
cmovle
popa
aaa
mov
mov
rclb
addl
out
xchg
std
nop
push
scas
es
sti
dec
mov
xor
and
loopne
dec
fldenv
stc
push
and
scas
jge
xor
daa
cltd
push
jl
pusha
shlb
sbb
mov
jae
out
es
into
popa
lods
lfs
les
xchg
test
fnstenv
push
lret
jae
add
out
fucom
stos
mov
neg
inc
out
pop
push
nop
pop
xchg
jg
testb
lds
pop
jae
out
push
sbb
dec
pusha
jne
and
or
mov
inc
mov
enter
add
push
aad
pop
cmp
cmp
inc
add
sub
movsb
int3
xchg
in
sub
xor
jmp
idivb
fdivr
cmp
pusha
lea
pop
mov
scas
sti
or
jmp
int3
std
cld
fucomp
inc
mov
mov
push
jle
insl
xchg
fidivs
push
pop
mov
bound
int
testl
xor
mov
outsb
shll
clc
in
cmp
inc
popa
lahf
xor
lds
push
xor
cmp
jp
jnp
es
push
jns
fs
and
and
test
cwtl
cmpl
lock
out
sbb
jo
in
pushf
dec
sahf
push
sub
mov
pop
sbb
stos
inc
call
fstpl
inc
cld
pop
in
insb
or
shl
and
in
out
pop
jae
or
out
and
dec
fwait
pop
mov
jp
jl
push
push
test
dec
repz
jae
dec
or
jl
sub
xchg
cwtl
dec
mov
mov
jb
das
in
rolb
fs
test
adc
xchg
mov
test
repnz
aad
sub
xchg
pop
push
fucom
icebp
aad
mov
mov
lea
sti
adc
psubusw
adc
dec
cmc
loope
adc
pop
dec
xchg
dec
lcall
xor
adc
or
pop
sbb
adc
addb
movsl
jne
jmp
pusha
cmpsl
mov
mov
mov
add
sbb
lock
ret
sbb
push
daa
mov
fucomip
dec
mov
and
pop
mov
lret
mov
push
enter
icebp
mov
insb
sub
outsb
adc
dec
and
or
jne
push
sub
pusha
pop
adc
nopl
xchg
hlt
sub
shlb
push
std
mov
ljmp
fwait
cmpsb
push
hlt
test
sub
pop
dec
sbbb
scas
inc
add
xor
bound
stos
adc
pusha
cmpl
jmp
sar
cmp
mov
add
cmp
icebp
xor
mov
pop
cmc
push
cld
or
lds
fcoml
loop
pop
jge
xchg
sub
in
push
lods
or
call
and
xchg
clc
daa
add
sbb
std
pop
xchg
mov
lcall
ds
push
dec
lret
xor
in
shrl
lcall
daa
jecxz
mov
sbb
repz
ss
fmull
cld
mov
fstpl
push
push
adc
cwtl
push
add
popf
jae
jecxz
clc
mov
clc
std
jmp
mov
cmovg
xor
sbb
stc
sbb
xor
push
into
jg
repz
clc
jns
pushf
lahf
cmc
pop
xor
lret
stos
or
rorb
pop
xchg
cltd
lock
cmc
xchg
inc
xor
in
xchg
leave
push
cmp
and
inc
cmp
icebp
in
mov
loope
xchg
fsubs
aas
mov
sti
test
scas
push
add
jp
jecxz
cmp
xchg
jle
and
cld
cmp
mov
adc
dec
cmc
sub
outsb
hlt
jg
shll
pop
push
xor
add
mov
das
mov
jl
pop
shll
or
fsubl
sbb
xlat
rorl
cwtl
xchg
insl
mov
test
lret
cmp
xchg
es
xor
sbb
hlt
mov
iret
sbb
stos
gs
cwtl
adc
or
adc
mov
add
loop
pop
dec
jp
sub
and
xchg
push
cli
shll
push
jl
mov
outsb
iret
jge
inc
popa
fdivs
es
sbb
pop
pop
xor
cmp
xor
mov
adc
mov
push
mov
aad
les
je
insb
lret
mov
popa
testl
jo
mov
mov
mul
lahf
loop
xchg
jmp
js
sub
xlat
fldln2
jno
ror
aas
adc
lcall
cmpsl
push
dec
orl
sbb
mov
and
mov
repnz
jne
push
cmpsb
and
mov
or
push
pop
jo
dec
add
icebp
popa
test
shrl
mov
xor
dec
xchg
pop
rcr
loope
sbb
add
pop
mov
add
faddl
lds
je
mov
mov
mov
sub
fdivrp
sub
jp
cmpsb
pop
out
add
pop
lcall
inc
lret
cmp
stc
rcr
test
int
inc
cltd
stos
sub
lds
out
add
fst
pusha
popa
sub
sub
xchg
dec
xorl
and
push
outsb
jo
cmp
cli
mov
xchg
popa
stc
test
imul
iret
inc
and
ds
mov
adc
or
mov
gs
mov
scas
add
mov
mov
nop
add
and
sub
pop
cmc
push
jge
jp
test
and
sub
pop
fs
jg
repnz
adc
push
jno
sbb
cmp
push
sar
adc
sub
sarl
aad
aam
pop
mov
imul
in
sbb
push
fnstenv
loopne
add
xor
out
push
das
orl
mov
and
shrl
dec
xchg
das
dec
rorl
and
lret
and
jnp
xchg
or
or
push
int
dec
in
add
call
out
pop
mov
xchg
out
sub
in
sahf
leave
ja
xchg
imul
enter
clc
sbb
jo
dec
cs
aad
shlb
sub
addr16
jae
ljmp
test
fisttpl
jmp
push
xor
pusha
fcoml
mov
mov
ss
mov
mov
mov
mov
cltd
xchg
sub
nop
sbb
pusha
and
mov
pushf
cmpsb
jo
jg
adc
aam
insb
adc
insl
imul
movsl
xchg
in
xchg
push
lahf
cmp
add
popaw
cmp
sarb
jne
daa
dec
inc
lea
fwait
out
leave
into
dec
clc
cvtps2pi
aaa
jne
out
pop
push
push
pop
loope
and
or
adc
sub
lret
loopne
sbb
imul
cmp
cmp
and
push
mov
pop
xchg
testb
and
jmp
lods
cmpsb
push
xor
out
loope
mov
shlb
sub
xor
nop
add
push
stc
mov
push
add
jg
int
faddp
or
shrl
or
aad
jae
scas
or
movsb
mov
adc
test
sarb
test
bnd
test
xchg
sarl
push
push
pop
mov
out
cmpsl
mov
dec
push
aaa
mov
add
pop
inc
mov
aas
fmull
mov
mov
out
pushf
int
fs
add
ljmp
sbb
xor
sub
inc
xchg
or
inc
jmp
das
xcrypt-cbc
cmpsl
adc
and
push
or
mov
or
mov
mov
push
push
std
pushf
out
cmp
enter
mov
jl
mov
mov
adc
test
mov
cmp
inc
in
jne
es
data16
mov
les
push
xor
lock
mov
clc
inc
inc
ljmp
leave
leave
pop
pop
daa
jbe
push
sahf
dec
sub
inc
mov
mov
push
out
mov
out
mov
lods
push
dec
incl
jl
lods
loopne
sub
inc
sub
fldenv
push
adc
or
loop
rclb
arpl
mov
in
dec
lock
add
inc
aam
pop
xchg
pop
pop
std
cld
jl
xchg
nop
sbb
pop
jg
add
and
mov
jno
jno
mov
or
orl
inc
xor
inc
test
pop
popf
cmp
or
aaa
loopne
mov
insl
sbb
sub
out
cmp
jae
pushf
push
jbe
add
das
xchg
adc
rcrb
push
add
gs
xlat
rcll
cld
push
add
adc
add
push
lcall
cs
sbb
sti
adc
fistl
xor
xchg
pop
mov
jg
pop
cld
inc
push
fcomps
cli
push
mov
lea
mov
andl
cli
mov
adc
adc
aas
lret
jns
dec
adc
pop
mov
dec
repz
inc
fildll
mov
das
hlt
ss
popa
inc
enter
aaa
mov
sarl
sub
fs
sub
rol
mov
lret
mov
mov
mov
sbb
lcall
inc
ljmp
ss
fdivl
push
dec
inc
mov
daa
sbb
insb
iret
cmpsl
popa
and
inc
in
mov
cmp
cmc
lds
pusha
push
add
lret
test
cmp
push
pushf
jb
mov
xor
add
adc
ljmp
sbb
sub
in
jmp
adc
fnsave
add
outsl
scas
nop
iret
aas
sahf
mov
arpl
outsl
lods
repz
sbb
pop
add
inc
aas
push
popw
mov
jecxz
jns
xchg
std
push
repnz
inc
insl
pop
mull
pop
mov
icebp
lock
pop
lcall
adcb
lea
add
mov
cmp
sub
inc
cmp
cli
cmp
ss
lret
int3
psrad
mov
fistpl
pop
call
out
jnp
les
lcall
rcl
repnz
dec
or
les
aaa
dec
fbld
adc
movsb
into
leave
shll
enter
jmp
sub
jo
mov
popa
jne
adc
push
mov
adc
test
dec
sub
or
adc
aas
pop
cmp
icebp
in
mov
mov
lea
adc
xor
sub
sbb
enter
fxch
movsl
adc
dec
addr16
sbb
adc
inc
push
clc
cwtl
inc
enter
or
aad
shrb
adc
in
hlt
xchg
mov
inc
mov
mov
mov
push
pop
jae
cmpsl
mov
outsl
mov
pushl
pop
dec
cmc
aam
pusha
js
and
add
sub
clc
outsb
ds
in
popf
mov
mov
add
lcall
inc
lods
fisttpll
dec
or
mov
aam
jl
push
arpl
cmc
dec
out
cli
adc
int3
fucom
xchg
dec
cmp
daa
je
insb
sbb
dec
popf
sub
add
mov
pop
cmp
jmp
jns
ds
adc
fmul
lock
inc
xchg
xchg
scas
inc
xchg
jb
add
into
jl
pop
test
fs
fucomip
call
add
inc
jl
bound
jns
mov
add
in
xchg
add
mov
xlat
popa
jbe
and
sbb
push
outsl
or
out
push
fxam
mov
notb
adc
jbe
xchg
push
enter
xor
push
pop
mov
clc
aad
xchg
je
sub
sub
arpl
push
and
and
mov
ss
aas
cmp
mov
dec
mov
lock
mov
mov
pop
pusha
addr16
push
arpl
cmpsl
ret
adc
push
ss
movsb
add
movsl
or
xlat
mov
add
pop
repnz
add
sahf
cs
adc
jecxz
shr
dec
dec
mov
jle
adc
ret
and
testb
movsb
push
mov
lcall
pop
sbb
push
arpl
cli
popf
repz
fcoml
mov
fmull
mov
and
fsubrl
mov
movsb
push
pop
xchg
fdivrl
adc
in
xor
in
mov
jnp
cli
jmp
mov
fdivs
rcl
lods
jbe
mov
add
mov
out
inc
inc
fstl
out
push
mov
fiadds
leave
mov
imul
mov
or
stos
adc
imul
xchg
sub
dec
pop
push
scas
mov
fcomps
fcomip
fs
shr
mov
xlat
xor
repz
cmp
and
or
push
mov
mov
xor
and
fnsave
fistl
out
imul
sbb
push
inc
mov
and
insl
lret
or
mov
mov
bound
sub
popf
and
jle
pop
jl
push
std
psubsb
push
pop
and
hlt
and
je
stc
jae
cmp
xor
mov
dec
sbb
test
sbbb
ja
pop
inc
call
add
or
divb
cmp
cmc
mov
lea
iret
and
int
jae
push
xchg
xlat
out
lds
cmpsb
ds
insl
xchg
xchg
sub
add
sub
or
pop
pop
inc
test
leave
sbb
dec
mov
pop
testl
sub
adc
aaa
xor
push
ret
cwtl
cmpsl
mov
cmp
mov
mov
mov
lods
lret
scas
push
xchg
stc
icebp
imul
mov
xchg
orb
and
popf
cmp
test
test
cmpl
pop
cld
push
fistps
add
sub
test
cmp
stc
and
cmpsb
jge
je
inc
jecxz
dec
aas
mov
adc
pop
push
in
gs
push
imul
cmp
mov
jb
fwait
mov
dec
xor
sub
mov
inc
insl
mov
push
cmp
je
divl
push
xor
inc
lds
js
dec
or
sub
push
lret
lods
fwait
cmc
loop
repz
stc
pop
ret
jbe
mov
rcrb
shrl
mov
mov
inc
add
or
mov
pusha
loope
rorl
lods
int
cmc
inc
dec
imul
inc
sarb
imul
imul
stos
enter
lds
cmp
sti
dec
test
sbb
or
sti
mov
push
dec
sets
pop
xchg
shll
or
and
in
lcall
sti
ret
leave
fldt
jge
mov
pop
sub
dec
xor
insb
daa
sub
rcrl
push
ljmp
and
js
add
fs
pop
pushf
cmpsb
icebp
call
arpl
call
rcll
mov
insl
jnp
sti
fs
or
jo
adcb
das
ret
add
pop
lea
dec
inc
jmp
repz
adc
das
inc
adc
test
and
int3
adc
push
sub
dec
cmp
push
das
subb
bound
pushf
outsb
enter
test
arpl
mov
clc
sbb
daa
fucomip
push
sahf
jmp
in
push
xor
icebp
pusha
push
fisttpl
mov
bound
insb
jns
xor
sub
outsb
inc
pop
cmp
add
or
cltd
loope
dec
push
dec
loopne
cmp
mov
movb
inc
stos
xor
mov
call
jp
sbb
lods
mov
loop
loopne
ja
push
aas
push
jb
int3
test
inc
scas
xchg
inc
aas
bnd
fs
mov
loopne
or
and
adc
and
fcomps
scas
and
sub
sbb
push
pop
popf
int
pop
addl
in
inc
sbb
add
in
insb
push
sarl
xchg
sub
pop
and
stos
imul
sub
lea
mov
ficompl
fnstcw
lret
mov
push
inc
xchg
cli
insl
inc
fists
mov
push
test
faddl
push
movsb
add
negl
adc
incb
jl
adc
add
cmp
jbe
jns
pop
ss
cmp
adc
mov
outsb
xor
mov
mov
dec
loopne
lods
and
js
adc
and
ret
jg
test
aas
adc
push
sub
xchg
adc
test
popf
push
bt
mov
cmp
mulb
cmp
pushf
es
push
inc
cmp
and
hlt
das
outsl
stos
in
popf
cmp
inc
cmp
cmp
sti
xor
push
mov
iret
mov
stos
out
pop
aaa
xchg
and
insl
notl
popf
in
push
call
fisttpll
inc
nop
js
mov
aaa
mov
inc
mov
clc
or
sbb
dec
sbb
xor
add
ljmp
mov
dec
pop
mov
test
xchg
mov
fcompl
push
adc
in
cld
and
pushf
add
adc
mov
fidivl
ss
cmpsl
jns
dec
mov
mov
lods
insl
sbb
decb
and
jmp
hlt
in
sbb
push
lret
inc
mov
mov
cs
ljmp
call
mov
sbb
sar
flds
jns
jb
in
sbb
popf
movsl
push
adc
fldcw
imul
shlb
xchg
dec
in
dec
imul
inc
imul
test
inc
sahf
mov
and
mov
push
jne
into
or
pop
cmp
pop
adc
insb
in
repnz
lcall
rorl
add
push
or
sub
nop
enter
xchg
mov
lods
lea
push
popf
sbb
xchg
lret
dec
pop
or
call
push
add
into
in
in
sbb
test
adc
in
mov
rorl
jmp
cmpsb
into
jo
ret
test
pop
scas
push
fisubrs
or
les
add
mov
test
jns
pop
dec
repz
push
adc
cmp
jecxz
adc
lds
pop
bound
pusha
push
push
inc
cli
sub
aas
cmp
sbbb
add
mov
stc
xchg
cmc
pop
fdiv
xor
not
adcb
pop
bound
adc
sub
cmp
mov
fwait
rcrl
pushw
inc
aas
xchg
mov
mov
pop
mov
lcall
aad
add
xchg
adc
add
sahf
or
cmp
cmp
scas
jo
fistpl
sbb
enter
push
fs
testl
lock
stos
jae
jge
mov
pushf
out
scas
stc
jno
shrl
je
shll
into
mov
inc
scas
inc
ds
fcmovnbe
inc
rol
daa
adc
out
xor
xchg
adc
sahf
gs
mov
sbb
xchg
fdivs
xor
fildl
add
stos
add
mov
psrlq
push
inc
test
pop
pop
fsubrp
mov
insl
and
cmp
push
xchg
out
das
xchg
mov
nop
fisttpl
leave
cmpsb
lret
sub
mov
xchg
addb
and
xchg
lret
and
mov
mov
dec
inc
dec
pop
lahf
sub
test
das
sbb
mov
mov
std
and
jg
inc
stos
push
adc
shrb
inc
icebp
add
into
mov
fwait
in
xor
inc
loop
call
call
cmpsb
iret
inc
in
cs
out
xchg
add
ficoms
gs
cmpsl
or
and
movsl
leave
mov
aad
lea
call
xor
xchg
xor
push
shr
loopne
cmc
insl
pop
or
addps
dec
fbld
push
jg
icebp
jae
fstpl
pop
aaa
xchg
sti
mov
xlat
loope
mov
mov
pop
adc
insl
xor
jae
pop
inc
add
jle
pop
sub
cs
pop
das
mov
cltd
inc
shrb
mov
xor
mov
push
add
mov
leave
cmp
lret
cmpl
cltd
jb
mov
adc
xchg
loopne
lock
mov
dec
or
push
call
cmp
add
mov
ds
dec
jne
ficoms
mov
jnp
movb
movsl
dec
lea
scas
fcoml
xor
repz
xchg
or
add
loop
and
mov
mov
mov
or
push
call
repz
in
out
push
stos
stos
jb
cmp
daa
in
push
loope
pop
jns
cmpsl
push
mov
jb
xor
outsl
daa
gs
adc
cmp
mov
rcrl
sub
push
mov
sbb
loope
push
jnp
lods
daa
data16
or
push
fildll
loopne
fistpl
cmp
jne
jp
repz
adc
pop
loopne
repnz
pop
and
and
aaa
mov
imul
sahf
mov
xlat
in
int
int
pop
das
mov
and
shrb
xor
pop
xchg
in
repnz
outsb
stos
bnd
icebp
fcom
aas
sbbb
mov
or
ret
xchg
push
jae
mov
push
mov
cmpsb
pop
sbb
lods
mov
dec
sub
pop
adc
sbb
dec
dec
roll
stc
push
inc
clc
xor
out
lret
dec
sbb
fildll
jecxz
fiadds
ss
jno
or
adc
mov
dec
mov
out
push
fcmovb
adc
sbb
loopne
rcrb
or
cwtl
jg
sarb
jne
fdivrs
notb
mov
lods
pop
pop
xchg
cmp
jne
cmp
bound
jb
jp
dec
push
stos
inc
lcall
shr
add
std
dec
sbb
mov
in
out
pop
gs
pop
lret
inc
jg
mov
add
mov
push
xchg
sbb
mov
adcl
jb
fistpll
pop
and
push
jo
popf
sbb
ja
inc
cld
aas
push
or
imul
inc
loope
sub
cmp
inc
pop
loop
mov
mov
sub
in
sub
mov
fldl
jne
jnp
xor
rcll
inc
je
mov
push
pushf
icebp
and
fs
adc
clc
pop
addr16
daa
pop
mov
notl
outsl
in
fwait
movsl
push
cmpb
jo
xor
cmp
xchg
loop
push
cli
and
out
out
inc
mov
int3
std
or
sbb
lret
or
into
enter
sbb
ret
adc
mov
xchg
hlt
enter
int3
fstps
movsl
popa
shrl
bound
push
fwait
adc
shrb
lods
rolb
call
or
rcrb
lret
cmp
mov
cmp
cmp
data16
pushf
outsl
pop
outsb
or
xchg
or
sub
lahf
xchg
and
popa
mov
mov
lock
adc
les
or
mov
cmpsl
sub
cmp
sub
lret
lret
mov
cmp
xor
push
ret
push
lods
xchg
in
xor
mov
dec
popa
pop
inc
adc
adc
jns
cmp
dec
cmpsb
in
scas
dec
in
mov
dec
cmpsb
mov
scas
pop
jnp
adc
stos
push
pusha
xchg
test
dec
cs
pop
mov
fisubrs
pop
lea
or
int3
mov
xchg
mov
push
lret
inc
lock
jmp
xor
xchg
sti
push
pop
mov
ljmp
es
jnp
cmp
jge
dec
stos
jecxz
dec
shl
dec
pop
and
sub
popf
iret
loope
lret
inc
cld
lcall
aas
lcall
cmp
sbb
adc
mov
insb
int3
std
ja
xor
in
fs
stc
fstpl
push
jno
ret
cmp
pop
add
inc
xor
sub
lods
movsb
jno
sub
add
popf
inc
and
es
mov
std
inc
int3
jns
push
popf
sub
test
aam
cwtl
mov
imul
mov
aad
btc
fcmovnb
pop
dec
pop
or
add
or
fistpll
das
rorl
xor
xchg
scas
icebp
mov
push
mov
push
inc
jns
lock
enter
lcall
jnp
sbb
mov
sub
les
xchg
dec
stos
mov
and
fisubl
arpl
inc
rolb
aad
pop
outsb
enter
push
mov
or
ficompl
aam
stc
dec
adc
sbb
sub
addr16
je
or
cmp
push
xchg
es
inc
cmp
rcrl
push
and
xchg
shl
sub
lods
pop
pop
loopne
dec
cmpsl
xlat
fidivrl
fidivrs
pop
shlb
popa
imull
push
jbe
ds
xor
xchg
sub
iret
dec
fs
into
lcall
jno
pop
jae
adc
pushf
push
xor
pop
movsb
daa
jl
test
js
icebp
rcll
jecxz
dec
mov
enter
test
aas
dec
add
insb
push
lock
lock
outsl
add
hlt
mov
mov
cmc
cmp
test
xchg
andb
cmpl
sahf
icebp
pop
dec
scas
scas
mov
xchg
push
lock
sub
mov
xchg
dec
cmp
sarl
int3
jns
call
cmp
jmp
push
mov
xchg
pushf
bnd
ret
jmp
fs
sbb
andl
jo
ror
stos
cmp
push
jmp
pop
rolb
and
int3
test
insb
jmp
push
sbb
cmp
leave
inc
jl
inc
push
xor
xorb
outsb
jg
lcall
aas
xchg
lret
cmp
cltd
aas
sub
inc
inc
cmp
es
movsl
xor
mov
jmp
iret
iret
push
in
adc
loop
jecxz
idivl
das
xchg
inc
mov
push
cli
cmp
int
inc
daa
sub
fidivrl
loope
out
mov
addr16
into
mov
enter
icebp
and
ret
sbb
sub
sub
neg
fisttpll
lret
test
inc
loop
pop
dec
mov
sub
cmp
mov
mov
or
adc
cli
mov
mov
push
xchg
daa
enter
outsb
fcompl
jnp
fsubrl
enter
fucom
in
ja
je
aam
scas
inc
mov
clc
and
mov
push
lcall
nop
movsb
xchg
std
in
jnp
ret
jne
push
test
add
pop
mov
rcrl
iret
sarb
ss
sbb
outsb
lret
stc
ds
push
pop
jp
cmp
mov
push
fs
in
mov
push
push
mov
mov
out
or
add
outsl
cmp
loop
jbe
jae
fiaddl
pop
jge
outsb
adc
bswap
stos
ficoml
pop
xchg
cmpsb
out
fdivrl
shl
jge
fldenv
enter
mov
mov
dec
fwait
pushf
repz
sti
lcall
mov
push
in
push
addl
jae
fcomps
adc
add
les
and
imull
mov
aas
ret
pop
adc
mov
sbb
lcall
xlat
pop
dec
pop
fadd
daa
and
scas
outsl
fdivrp
push
and
roll
mov
xor
insl
fimull
lods
mov
sbb
jge,pn
leave
sbbb
push
jmp
dec
bound
or
mov
imul
xor
stos
push
fsubrl
fdivs
mov
and
fdivrs
mov
push
pusha
dec
test
imul
stc
inc
pop
lahf
sub
add
pop
pop
xor
into
add
adc
dec
inc
xor
cli
icebp
and
mov
xchg
push
and
add
fwait
push
dec
inc
out
push
addr16
aad
push
cmpsb
jl
mulb
je
div
mov
pop
pop
mov
das
in
outsb
jno
cli
add
mov
xor
enterw
xor
stc
pop
test
lret
nop
adc
jbe
mov
inc
and
les
or
fiaddl
mov
jmp
fmuls
loop
ficoml
adc
pushf
lods
pop
inc
pop
cmp
xchg
mov
mov
jne
int
pusha
cli
pop
dec
cmpsl
pop
pop
xchg
popa
and
and
add
xchg
jl
dec
jge
xor
and
push
ret
pop
loope
sbb
add
pop
arpl
ret
leave
xchg
aam
mov
xchg
nop
aam
jge
lahf
cmpl
push
mov
notb
jle
push
sub
int
sbbl
cld
inc
jg
mov
xchg
inc
sub
push
pop
push
mov
call
test
pop
lock
jecxz
imull
mov
mov
cli
or
data16
out
dec
hlt
enter
cmp
iret
cmp
mulb
ret
shl
mov
sub
sub
pop
aam
mull
pusha
add
lret
mov
cltd
loop
js
push
cmpsb
mov
mov
push
mov
push
dec
jp
mov
or
jae
das
mov
stos
std
pop
jle
mov
stc
call
divb
hlt
and
adc
adc
in
sub
mov
pop
xor
mov
lea
add
mov
sti
add
clc
icebp
add
hlt
popa
mov
loope
and
cld
imul
enter
push
mov
movb
push
or
add
push
ret
jl
ret
out
mov
shlb
cmp
mov
insb
sti
lcall
push
shrb
in
mov
pop
ffreep
cltd
and
push
stos
cs
subb
cmp
shll
add
fisubl
arpl
call
xchg
daa
mov
jne
or
test
stos
adc
stc
pop
ss
orb
out
xor
int3
jp
sbb
add
inc
int
adc
pop
mov
push
or
popf
clc
add
sbb
adc
mov
xchg
inc
inc
movb
mov
mov
add
and
adc
repnz
fbld
cmp
mov
shlb
cmpsl
in
xor
lods
and
add
cmp
push
mov
pop
adc
lods
adc
ja
or
ja
dec
mov
cmp
sub
jne
adc
aas
sub
xchg
sbb
inc
mov
cmp
ds
fidivl
xor
adc
or
mov
mov
shl
inc
cli
xlat
scas
scas
movsb
dec
stos
xlat
aaa
inc
std
push
inc
jno
sahf
jle
adc
or
pushf
push
dec
xchg
push
sbb
lahf
xchg
movsb
popf
popf
mov
sbb
jbe
not
lahf
idivl
aam
dec
stc
sbb
pop
imul
or
enter
lcall
pop
cli
nop
cmp
sahf
sahf
sub
adc
push
leave
pop
fwait
int
test
in
xchg
adc
movsb
mov
aaa
dec
jp
std
mov
cmp
xchg
cs
jge
stc
jns
sahf
mov
leave
mov
in
jne
popf
push
imul
in
gs
dec
push
inc
in
lea
push
rcrl
xchg
add
or
cmpsl
push
sub
cmp
mov
pop
mov
popfw
jns
rorb
xlat
addr16
pop
pop
xchg
das
xor
add
xchg
fmull
sub
out
sti
iret
fcoms
decb
test
scas
mov
cmp
cmp
decb
add
mov
jge
push
push
sbb
fwait
xor
push
and
leave
arpl
aaa
outsl
es
dec
mov
adc
xor
test
in
xchg
cld
add
cs
sbbb
fstl
add
lds
js
sbb
pop
xchg
xchg
inc
repz
xor
xchg
pop
xchg
repnz
test
test
loope
dec
xchg
imul
fildl
push
ret
mov
in
or
sti
xchg
loopne
add
loope
lock
push
lods
adc
inc
lahf
popa
into
mov
nop
loopne
pop
lahf
jbe
aaa
add
or
hlt
outsb
repz
arpl
data16
or
mov
movsb
sub
add
mov
stos
es
mov
mov
xor
mov
inc
and
lahf
push
shlb
fcompl
fxam
inc
xchg
je
sar
fdivrs
icebp
mov
jae
sub
cmp
fmul
ja
aam
jne
loope
xchg
dec
cmp
xchg
jne
add
aas
hlt
jno
call
lcall
mov
jo
jmp
movsb
out
or
sarb
push
rolb
dec
pop
insl
enter
in
lret
sahf
das
fs
lahf
lret
inc
dec
adc
insb
icebp
inc
sti
or
jae
and
out
mov
sub
push
xchg
outsl
mov
adc
add
inc
add
and
repnz
jns
enter
sub
andb
rol
popa
lods
and
sbb
sbb
sub
push
leave
notl
inc
dec
inc
jl
xchg
les
adc
inc
fcomps
push
aad
push
loop
lods
inc
dec
rorl
std
repz
mov
sub
cld
mov
fadd
cmc
push
push
xor
mov
fmull
aas
fistpll
cmp
add
adc
and
out
dec
lock
icebp
cwtl
jb
jl
js
mov
xor
add
push
push
daa
mov
inc
invd
or
mov
push
in
stos
pop
gs
into
push
pop
pop
inc
loope
add
xor
es
cmp
stos
or
lahf
js
mov
adc
lahf
dec
or
cmp
adc
clc
pushf
jnp
sbb
test
fincstp
add
dec
out
xor
jl
push
aaa
dec
aaa
inc
jnp
cwtl
incl
xchg
js
test
divb
movsb
repz
sbb
in
xor
pop
pop
imul
xchg
clc
mov
dec
cmp
mov
mov
or
daa
xchg
fcomps
lods
icebp
out
lods
inc
out
outsb
mov
jecxz
mov
sub
xor
and
sbb
in
inc
shufps
or
mov
jb
andb
andb
jmp
jns
loope
mov
push
lock
push
lods
or
jno
lods
or
mov
dec
dec
pop
mov
jg
mov
adc
inc
sbb
cli
clc
sti
lret
test
sub
xor
push
push
pop
mov
xchg
daa
andl
int3
pusha
jmp
cmpb
inc
cmpsb
pop
dec
nop
mov
xchg
add
xor
mov
cmpsb
jb
pop
mov
les
or
shll
loop
sbb
mov
sahf
lods
jae
imul
cltd
sbb
or
xchg
subl
and
fucomi
xor
arpl
xchg
mov
scas
lea
insb
mov
mov
adc
mov
repnz
inc
pusha
jl
cmpl
push
ret
xchg
push
mov
or
adc
dec
cmpsb
sub
ljmp
pop
insb
adc
out
shlb
and
bnd
mov
mov
push
add
adc
inc
mov
push
out
and
jge
notb
out
into
mov
popf
cld
jo
pop
push
dec
pop
jp
and
jae
imulb
xor
cmp
les
aaa
sbb
sbb
mov
cmp
ret
inc
xor
push
jnp
push
call
cmp
scas
std
sub
mov
push
xor
movb
push
xor
xchg
or
das
bswap
sbb
lock
es
stos
mov
xor
mov
lcall
andl
out
fimull
cmc
add
dec
push
add
xor
push
adc
repnz
pop
rolb
cmpsl
push
je
shlb
stos
jecxz
out
movsb
fwait
lods
jp
adc
xchg
jmp
cmp
outsb
ja
enter
adc
pop
ss
jne
xchg
xor
add
inc
loope
or
push
or
pop
outsb
mov
mov
stos
ret
mov
adc
inc
xor
pop
js
sub
gs
js
push
int
fidivl
jno
jne
jne,pn
dec
mov
pop
aaa
aam
jecxz
cmp
ds
push
mov
and
sub
cmp
test
in
push
cmp
dec
ret
in
jge
add
outsl
cmp
test
push
jno
fisubl
sbb
pop
adc
sbb
aaa
xor
dec
pop
mov
or
out
into
mov
stos
xchg
push
repnz
out
js
inc
jl
inc
popf
mov
call
sbb
jno
cmp
or
or
sub
mov
xor
gs
cmp
mov
or
sbb
cmp
dec
imul
in
gs
xchg
jnp
jbe
aas
sbb
pop
push
mov
cwtl
adc
jmp
out
jne
xchg
lods
jbe
mov
xchg
pop
xchg
pop
mov
nop
sub
or
movsl
ljmp
out
push
mov
xor
push
push
mov
imul
and
mov
xor
adc
push
mov
sub
jg
mov
notb
mov
pop
inc
movsb
sub
outsb
iret
movsb
je
mov
scas
cmp
sbb
inc
stos
cmpsl
test
hlt
fdiv
mov
sbb
loopne
push
daa
orb
add
dec
sarl
lock
shrb
in
sbb
call
es
xor
je
xlat
iret
mov
mov
shll
jb
lahf
inc
ret
mov
mov
movsl
decb
pop
sbb
ss
adc
rcll
outsl
sbb
sbb
ljmp
stos
popa
stos
arpl
int3
pop
xor
pop
xchg
sbb
mov
repnz
xlat
push
jno
or
outsb
or
in
and
fwait
push
fdivr
imul
xor
sbb
mov
mov
adcl
fisubs
into
jmp
jno
cwtl
mov
lret
sbb
xor
xor
lea
xchg
inc
sub
int3
sahf
pop
mov
mov
in
and
mov
jp
sub
inc
push
jo
and
cltd
int
lock
inc
ret
or
add
fsubp
pushf
sbb
and
outsl
xor
stos
fcmovnb
repz
or
stos
and
les
sub
sbb
mov
or
les
sbb
mov
int
or
pop
sbb
test
sbb
lea
lock
add
mov
mov
dec
pop
push
lock
xchg
or
outsl
movsb
and
popa
hlt
fwait
xchg
mov
popa
xchg
and
loopne
add
cmp
aam
mov
mov
dec
mov
mov
je
xor
test
ja
aam
dec
shl
inc
push
sub
nop
pop
xor
xor
pop
test
mov
dec
mull
idivb
xchg
nop
orb
pop
orl
sbb
mov
sarb
insl
cli
add
or
push
mov
lock
pop
js
pushf
jno
mov
fldt
movsb
cmp
pop
cmp
loop
arpl
mov
mov
or
std
sbb
dec
insb
jp
inc
loope
popf
pop
add
sar
hlt
mov
lret
daa
leave
push
pop
sub
leave
data16
sub
jo
mov
xchg
inc
pop
mov
jmp
insl
sbb
in
and
or
leave
push
xchg
fnsave
mov
push
push
push
cmpsb
xor
sub
or
jecxz
pop
and
sti
call
xchg
jp
push
dec
and
sarb
dec
inc
pop
push
fcompl
sub
push
das
fsubp
add
jl
aaa
pop
mov
int
xchg
cltd
mov
or
push
sahf
fs
xchg
sub
and
or
or
fistps
insb
inc
mulb
and
sub
test
and
out
xor
adc
mov
sbb
divb
push
js
xchg
lahf
or
test
lret
add
mov
push
and
int
jp
int
cmpsl
fdiv
rorl
and
or
lcall
ds
mov
push
jbe
fidivrs
jp
rcl
mov
sub
cld
pop
and
xchg
pop
dec
push
fmull
xor
inc
xor
into
push
cmp
inc
cmp
icebp
pop
addr16
lahf
or
std
es
pop
mov
jbe
enter
sti
add
jne
xchg
mov
rcll
dec
shrl
cmpsb
mov
cmpsl
dec
adc
dec
int3
adc
and
or
mov
inc
pop
clc
fidivl
inc
add
and
xchg
sub
cmpsb
jl
xor
inc
scas
pop
outsb
xchg
imul
in
test
icebp
lahf
in
dec
mov
or
test
shll
js
pop
and
popa
cs
or
sub
int
les
lret
xor
mov
mov
leave
cli
testb
jmp
test
outsb
arpl
mov
xchg
imul
in
iret
push
mov
data16
push
ljmp
sbb
insl
popf
jbe
lods
sbb
je
fwait
mov
addb
inc
jnp
iret
outsl
fs
dec
mov
push
xor
pop
lods
adc
mov
sbb
jecxz
movsl
fwait
mov
addr16
lods
repz
cmp
sbb
mov
mov
rcr
mov
cs
sub
loopne
xchg
cltd
mov
fwait
sbb
cmp
xor
mov
cs
fcomps
arpl
rorl
aad
movsb
leave
mov
push
fstp
icebp
fldcw
jg
sub
dec
adc
imul
and
in
xchg
mov
pop
fnsave
or
xor
or
cmpsl
lcall
push
test
xchg
dec
sub
subb
xchg
popf
ss
dec
sti
jb
fwait
lea
push
sbb
mov
jl
icebp
mov
popa
in
sbb
push
nop
cmpsl
or
adc
mov
stos
jne
subps
arpl
fmull
hlt
mov
xorl
fs
clc
sbb
push
inc
imul
mov
divb
arpl
push
enter
inc
mov
popa
pop
std
add
mov
xor
jecxz
divb
mov
mov
sbb
dec
pop
jae
in
aaa
fstpl
stos
insb
xchg
push
push
outsl
popf
ret
pop
adc
jnp
es
dec
cs
in
bound
push
stos
add
pushf
push
test
aas
test
das
xchg
and
clc
pushf
xor
mov
iret
cli
insl
cmpl
sub
shrl
sbbl
ss
fwait
jl
cwtl
mov
inc
gs
push
test
arpl
or
or
sub
sub
rolb
insl
inc
outsl
pop
pop
adc
cmp
inc
ds
shrb
xchg
jl
int3
and
mov
push
jl
rorb
ljmp
adc
orb
and
mov
outsl
fdivrl
daa
add
dec
pop
test
fnstenv
les
rorl
test
inc
iret
lcall
cwtl
cmp
popf
sbb
not
aaa
xor
mov
out
lods
pop
sahf
dec
out
xchg
sub
cmp
stos
push
mov
and
dec
push
cmp
add
fs
push
aaa
inc
gs
enter
xchg
sub
cmp
sti
push
jae
idivl
mov
mov
push
mov
dec
sarl
aaa
cmp
pop
dec
sbbb
shl
xor
xchg
icebp
push
cmp
stc
cmpsb
sub
clc
sbb
mov
sbb
out
or
mov
mov
mov
pusha
push
jl
ds
arpl
arpl
mov
sti
divb
and
sub
mov
jbe
fnsave
adcb
adc
sbb
push
xchg
mov
cmc
sub
fidivs
repnz
push
push
sub
daa
jl
xchg
or
loope
mov
xor
insl
orl
jp
lahf
out
and
rcl
ds
inc
xor
and
insl
add
stos
ljmp
or
cld
shlb
jmp
xlat
jb
push
sbb
jne
sti
fsubp
test
push
aam
mull
aad
loop
sti
pop
nop
adc
cwtl
mov
mov
fimuls
jge
jns
mov
inc
or
cwtl
push
dec
movsb
xchg
add
in
ret
out
call
inc
imul
pusha
sbbl
jno
outsl
cld
pop
inc
dec
ss
inc
add
mov
push
push
data16
sub
daa
mov
sbbl
sbb
fimuls
es
push
jle
adc
test
test
push
dec
pop
les
js
shlb
nop
inc
mov
jbe
fisubrs
mov
xor
mov
adc
push
mov
pminsw
stos
stc
imul
dec
outsl
xor
sti
cmp
mov
push
mov
sub
jg
and
mov
xor
sbb
stos
pop
lea
clc
adc
aad
or
les
add
mov
insl
iret
in
sub
scas
inc
mov
mov
jmp
cmc
outsl
cmc
add
inc
push
mov
lea
pcmpeqd
repz
push
icebp
push
dec
movsl
pop
out
dec
adc
test
out
pushf
xor
hlt
push
jbe
insb
loop
out
add
fstl
sub
mov
adc
ret
xchg
sbbl
xlat
into
iret
loop
push
sbb
sti
push
movsb
dec
inc
inc
ds
xchg
imul
out
lock
out
cmp
in
push
stos
xchg
sbb
push
inc
ja
add
mov
lock
outsl
inc
lret
test
xor
outsl
daa
shll
sbb
mov
js
pop
lods
xchg
mov
jmp
push
mov
add
pop
push
pop
add
dec
loopne
sbb
adc
push
dec
enter
fidivs
inc
cwtl
add
xor
xor
inc
adc
fwait
je
bnd
subl
leave
xor
aas
xchg
xlat
ficoml
pop
xchg
jo
mov
test
mov
test
push
jbe
adc
imulb
or
inc
gs
dec
and
and
daa
or
aad
subl
dec
pop
xchg
lods
pushf
dec
jns
test
jbe
sbb
jbe
lods
arpl
push
sbb
sbb
inc
ret
cmp
xor
rcll
jmp
sub
jp
inc
push
cs
stc
test
xor
ja
pop
test
and
mov
test
mov
push
push
add
pop
mov
es
bound
arpl
shl
lea
fsubr
inc
ret
mov
cmp
xchg
fisubl
cmp
push
sub
xchg
push
testb
pop
cmp
addr16
fs
add
sarb
xchg
xor
imul
stc
xchg
mov
int
pop
adc
das
movsl
cmp
imul
idivl
mov
mov
lods
mov
loopne
into
pop
mov
in
dec
adc
daa
sub
cmp
mov
lds
movl
in
scas
cmp
lods
popa
cmp
scas
jecxz
popa
adc
fwait
loope
std
push
sbb
dec
xor
push
ret
push
jg,pn
pop
sub
popa
repnz
mov
repnz
xchg
mov
add
push
scas
push
jle
lock
sub
xor
decb
mov
hlt
xchg
rorl
dec
mov
jge
sbb
mov
out
stc
enter
jle
repnz
out
cmp
add
out
xorl
out
adc
sub
data16
xor
in
imul
je
or
dec
cmpsb
shrl
sbb
and
add
add
mov
in
cld
xchg
insl
xchg
mov
jmp
mov
in
inc
decl
mov
mov
repz
sub
scas
mov
cmp
fs
add
or
cs
dec
aas
pop
aad
push
mov
pop
adc
mov
daa
cmpb
leave
add
lds
sbb
adc
mov
mov
shlb
ljmp
and
or
outsl
add
call
xchg
out
ret
adc
and
cmp
inc
cmp
in
dec
and
pop
divb
mov
iret
dec
mov
jnp
mov
or
xor
lret
mov
dec
xchg
movsl
std
cltd
xchg
ret
ljmp
addr16
loop
pop
insl
and
pusha
cmp
add
outsl
lds
adc
sub
mov
ret
and
push
je
add
ds
rolb
pop
lret
and
in
push
adc
repz
mov
inc
lret
std
xchg
mov
test
cmp
push
xchg
pop
push
orb
aam
into
repz
pusha
and
mov
jle
aad
jmp
dec
hlt
push
and
loope
ds
rorb
push
mov
stos
or
popa
inc
adc
out
dec
out
and
cmpsl
cmp
push
in
cmp
jb
call
mov
xorb
jbe
adc
mov
pusha
pop
sarl
pop
adc
xor
xchg
insl
sbb
in
imul
popf
jb
cmp
mov
loopne
inc
or
cmp
jp
or
testb
mov
jecxz
push
cld
clc
sub
aaa
outsb
ljmp
xor
in
jbe
addb
popf
ficompl
jecxz
jmp
pop
mov
iret
jle
push
aas
mov
mov
mov
ds
jl
push
fnstcw
mov
cmp
out
adc
mov
fcompl
int
mov
adc
mov
adc
jae
cwtl
xchg
mov
enter
test
fs
jno
inc
rcrl
cmp
and
fs
pop
repnz
in
divl
movsl
in
xchg
ficoms
pop
lods
loop
cmp
hlt
jl
outsb
icebp
mov
xlat
mov
mov
popf
mov
lds
mov
inc
push
pop
aas
push
add
or
rolb
sbb
aam
sbb
out
push
add
fidivrl
pop
push
xor
enter
or
mov
aas
sti
xchg
test
push
jno
cltd
lds
push
xor
jnp
pop
pop
fnstsw
enter
or
fistpl
std
add
rcr
xchg
mov
sarb
and
sbb
pop
mov
sub
pop
jno
pushf
in
sbb
add
leave
jg
and
lcall
sbb
cmp
repnz
push
dec
rorb
push
sqrtps
sub
xor
ret
sbb
pushf
lods
insb
fidivrl
outsb
nop
push
or
sbb
adc
inc
push
push
inc
dec
push
cmpsb
clc
addb
dec
or
test
ljmp
lock
aas
sub
in
sub
cmp
ljmp
inc
and
fwait
mov
hlt
add
or
std
clc
cmp
stc
cs
pop
lret
into
insl
enter
popl
xchg
mov
jnp
out
sbb
out
insl
push
dec
and
add
icebp
cmp
leave
ret
mov
ret
sbb
ss
clc
sub
mov
aaa
inc
inc
bound
jmp
test
mov
and
roll
dec
adc
outsb
cmpsb
fbstp
pop
pop
mov
push
jecxz
jg
pop
aas
mov
loope
dec
fld
test
adc
mov
stc
jmp
jno
inc
push
xchg
cmc
add
mov
sbb
jle
in
mov
mov
jns
cwtl
and
cmp
cltd
mov
sub
repnz
jg
dec
xchg
ss
cld
or
jbe
xor
push
shr
enter
cmp
mov
sub
or
fadds
add
inc
mov
call
mov
jmp
mov
test
test
scas
ja
or
mov
dec
gs
mov
mov
sar
adc
push
in
rorb
sarl
inc
imul
mov
mov
insb
push
fwait
adc
inc
mov
lods
repz
dec
jl
ret
bound
lret
fnstsw
sbb
push
notb
insl
jae
or
lods
push
adc
jg
int
mov
test
jae
xor
mov
push
and
push
mov
loopne
aas
aam
or
mov
mov
mov
and
sbb
shr
rcll
inc
jns
es
pop
ljmp
cmc
in
and
sbb
popa
jmp
sub
push
stc
sarl
out
push
insl
jmp
dec
mov
pop
xchg
shll
add
rorl
cltd
xor
mov
rclb
push
push
mov
cli
xchg
add
cmp
mov
rcrb
cmp
add
inc
pushf
loope
and
sbb
cmc
fcomi
lds
mov
fs
mov
not
mov
sub
xor
dec
xor
cmp
in
js
mulb
push
dec
decl
jge
icebp
es
int
sub
mov
push
jae
adc
jge
mov
pop
pop
xchg
movsl
add
adc
sub
je
inc
bound
pop
repnz
and
cwtl
add
sub
cmp
aam
dec
sbb
shrb
int3
fidivrl
sub
lods
leave
pop
jno
dec
jne
sub
adc
pop
inc
es
xlat
cmc
arpl
pop
aaa
fcmovnbe
mov
xlat
xor
mov
pop
fiaddl
pop
pop
cmp
ret
mov
add
in
movaps
shufps
xor
shrl
mov
pop
out
or
push
xchg
xchg
xchg
fisttpll
jmp
leave
jnp
or
xchg
dec
lds
test
arpl
xchg
add
push
int
pop
stc
gs
aad
leave
sbb
mov
daa
jp
push
or
lds
jmp
and
fisubs
sbb
movsb
cmc
inc
rorb
inc
lcall
leave
jae
push
adc
repnz
pop
mov
std
xor
pop
mov
dec
pop
cmp
pop
inc
je
and
cmp
sbb
test
add
arpl
jae
testb
cwtl
push
fs
cs
cmovne
mov
jb
mov
ret
rcr
jp
dec
inc
adc
jmp
pop
pop
and
ja
insl
repz
int3
lcall
iret
adc
aad
pushf
jne
or
dec
inc
cli
or
pop
into
and
add
les
and
gs
fbstp
test
xor
notb
pavgw
cmp
lods
test
leave
or
out
cltd
inc
xchg
enter
iret
in
xlat
dec
add
mov
pop
and
mov
mov
and
jp
mov
and
jbe
dec
or
add
imul
fcmovnb
mov
sbb
repnz
ja
inc
lock
mov
gs
lods
in
fmul
sbb
inc
sarb
popf
jne
or
mov
mov
xor
lcall
mov
movsb
add
lahf
rep
inc
or
imul
aam
and
ja
dec
mov
int
add
test
enter
lods
push
imul
icebp
mov
subb
sbb
mov
xor
pusha
pop
and
ret
cmp
sbb
std
xorl
xchg
jle
push
push
and
push
mov
sbb
mov
js
dec
mov
mov
mov
fwait
or
pop
and
ja
mulb
int
xchg
mov
or
enter
mov
dec
and
inc
fidivl
test
xor
in
pop
shlb
popf
inc
mov
and
cmp
sub
imul
xorl
jae
and
shlb
adc
jp
bound
adc
dec
add
movsl
mov
mov
jnp
int
test
pop
jnp
sbb
sub
xchg
rclb
rcrb
filds
clc
repnz
xor
test
orb
sti
xor
sbb
mov
scas
scas
clc
xor
pop
fs
pusha
xlat
cmp
lret
mov
push
jp
mov
pop
dec
cli
js
inc
cmpl
inc
lods
mov
xor
pop
leave
out
clc
int3
xor
loop
adc
jnp
mov
jg
sahf
ja
sbb
mov
adc
nop
ficompl
popa
mov
test
cmpsl
js
rol
xchg
jae
das
shl
pusha
ror
sub
repz
adc
or
sbb
and
scas
bound
push
lahf
out
rcr
popf
daa
jmp
fdivl
xchg
sub
dec
sbbl
lret
cmc
adc
jns
shl
iret
lea
and
mov
bound
jae
inc
sahf
mov
sbb
jno
rcl
fld
sbb
and
mov
mov
pop
inc
add
mov
xlat
scas
cs
imul
daa
shll
jnp
mov
cmpsl
shll
add
ss
jns
sbb
jb
jne
out
xor
xchg
mov
stos
xor
faddp
dec
push
jge
xor
bound
mov
popf
adc
sub
popf
inc
xor
fs
pop
xchg
shll
mov
call
adc
sbb
cltd
test
decl
loop
or
cld
push
xchg
add
cmc
mov
ret
mov
gs
scas
xchg
mov
jp
ret
js
sub
stc
lds
mov
mov
mov
mov
xor
add
dec
jecxz
ret
add
gs
inc
xchg
clc
bound
lds
jl
imul
xchg
cmp
lret
xchg
mov
repz
das
aas
popf
xchg
push
int3
mov
jne
ja
ret
pusha
jbe
fwait
lahf
mov
sti
mov
push
add
push
jp
iret
add
sbb
imul
or
push
sbb
adc
inc
pop
jne
pop
out
adc
mov
jbe
mov
mov
mov
pop
faddp
push
mov
push
or
push
cmc
std
push
sub
xor
shlb
jg
jmp
jo
andb
mov
les
scas
ret
insl
mov
data16
xchg
add
add
mov
mov
mov
cmovae
cmp
cmp
or
push
sti
and
pop
cmp
sub
or
pop
outsl
jns
mov
push
and
lods
sub
testl
xchg
mov
aaa
xor
fs
jae
fs
sub
int3
inc
popf
rolb
mov
xchg
cmp
in
xchg
push
adc
mov
jb
and
push
sbb
loopne
mov
jmp
cs
cmp
xchg
mov
mov
xchg
and
sbbl
loope
stc
jl
pusha
dec
aaa
test
xor
and
pop
mov
xchg
addr16
lods
stc
mov
push
jae
data16
mov
xor
and
mov
nop
adc
addb
repz
leave
pop
cmp
dec
icebp
std
aas
jecxz,pt
fiadds
mov
xchg
xchg
ljmp
jns
lret
mov
idivb
inc
lret
mov
call
bound
pop
lods
sbb
rorb
pop
mov
mov
push
mov
cltd
gs
jg
pop
insl
sub
loopne
in
enter
aas
xor
test
xor
aas
decl
stos
jb
jecxz
test
xor
or
mov
ja
outsb
xchg
mov
jo
dec
sub
jmp
mov
cmp
pop
jecxz
clc
jbe
imull
rclb
sbb
cmp
mov
int
out
ret
xchg
pusha
push
lock
insb
loop
jne
inc
es
mov
bound
stos
pusha
mov
movsb
xchg
sub
lcall
lods
push
sbb
call
test
lods
jb
add
mov
std
dec
cmpsb
dec
enter
out
test
mov
ds
adc
pop
pop
lcall
pop
scas
punpcklwd
cmpsl
cmpsb
cltd
mov
je
push
mov
sub
mov
and
arpl
xor
push
dec
in
pop
lds
sbb
sahf
mov
xor
scas
xlat
iret
fidivl
es
add
xchg
push
mov
mov
sub
loopne
cmpsl
or
in
pop
popl
dec
lret
xchg
xchg
inc
jecxz
ret
stos
fcomp
and
mov
mov
cld
lcall
popa
sbb
shlb
movsl
sbb
es
outsb
in
cmp
fistl
lods
adc
pop
push
scas
stos
in
and
sbb
push
or
sub
cmpsb
mov
ljmp
neg
mov
and
jne
xchg
out
xchg
repnz
arpl
data16
fcmovnbe
or
out
in
repz
in
mov
subl
nop
mov
push
sub
xor
dec
loope
ss
adc
push
push
pop
iret
xor
out
dec
hlt
in
sub
mov
sbb
incl
mov
test
mov
xchg
lret
in
add
or
jmp
xor
pushl
mov
adc
pop
dec
jecxz
movsb
mov
sti
incl
sahf
fnstcw
repz
int3
mov
mov
fsub
fbstp
fst
adc
xchg
js
hlt
or
popf
jb
or
outsl
mov
popf
xlat
pop
out
mov
add
test
dec
aas
iret
insl
or
repnz
push
subl
into
xlat
adc
cmp
stc
lods
and
jmp
popf
bound
sti
xchg
pushf
pusha
aam
pop
repnz
sbb
mov
push
ds
jo
int
or
xor
and
inc
fistpl
xor
mov
mov
mov
popa
cmp
or
ret
enter
arpl
push
xor
cmp
jb
adc
hlt
sbb
loop
and
testb
es
pop
sar
xchg
je
dec
xchg
movsb
scas
je
and
loope
inc
sahf
pop
pop
pop
xor
adc
xlat
inc
ljmp
or
cmp
push
xlat
mov
inc
lcall
jo
test
push
inc
adc
mov
lock
ret
mov
jo
cmp
adc
enter
mov
jne
jnp
pop
jo
sub
mov
jecxz
dec
pop
mov
pop
pop
sub
jnp
mov
jg
ret
jb
xor
pushl
mov
xchg
out
int3
push
or
aad
je
mov
pusha
mov
jp
test
mov
lds
sahf
imul
gs
push
cmp
push
les
sub
hlt
mov
mov
dec
bound
xchg
push
adc
sbb
add
shl
add
scas
xorl
mov
lock
test
sub
mov
pop
push
and
leave
mov
mov
lret
scas
sub
mov
loop
mov
lfs
cld
lret
adc
push
int3
jns
imul
repz
sub
out
xchg
sub
leave
xchg
push
sub
mov
adc
sbb
jecxz
push
dec
push
mov
xchg
daa
push
lahf
mov
notl
pop
mov
outsb
shlb
scas
popf
test
jnp
pop
pop
rclb
xchg
lods
push
mov
push
xchg
stc
cli
daa
push
cmp
pop
pop
push
push
sbb
loop
cmp
sti
add
pop
pop
push
nop
add
inc
cmp
or
mov
mov
sub
fildl
xorl
cmc
mov
push
xor
cli
iret
je
sbb
outsl
lds
and
loop
out
loopne
mov
outsl
mov
addl
mov
xchg
add
aas
add
mov
fsubrl
pop
pop
and
push
icebp
mov
adc
lods
lret
fildl
and
lret
cmc
sbb
xor
sbb
push
inc
mov
and
adc
push
pop
je
or
data16
xor
sbb
pop
jb
mov
dec
adc
or
mov
cs
mov
decl
pop
lcall
jne
out
pop
xchg
inc
mov
arpl
sbb
push
aam
mov
loop
loopne
pop
dec
inc
arpl
test
add
out
in
xchg
and
xchg
cs
dec
aad
pop
lahf
lds
in
dec
js
mov
andb
outsl
mov
or
dec
cmp
dec
fsincos
ret
push
xor
jl
icebp
inc
sub
ret
mov
inc
add
cmp
cmpsl
add
das
or
jmp
gs
push
inc
mov
push
dec
sub
roll
pop
stc
outsb
hlt
ja
adc
pop
and
cwtl
ret
adc
mov
sahf
jp
loopne,pn
mov
dec
int
and
adc
lret
push
div
add
cld
cmp
adc
lea
xchg
inc
arpl
jle
pop
adc
mov
hlt
dec
pop
in
aam
adc
mov
movsl
add
mov
sti
mov
xchg
add
ret
jae
pop
jge
cmpl
dec
push
hlt
iret
cld
xchg
xorl
cmc
or
push
loop
imul
inc
sub
pop
pop
es
mov
or
xchg
jnp
xchg
mov
aam
mov
das
aas
addb
mov
out
fistpll
inc
xor
add
insl
xorb
mov
or
xchg
push
inc
imul
in
mov
lret
ja
pop
cmpsb
lret
jp
in
lds
add
rep
inc
add
push
dec
xlat
daa
arpl
jl
xchg
pop
pop
pop
mov
sub
dec
mov
es
sbb
imull
pop
in
xchg
pop
add
mov
fisttps
aad
push
sbb
sub
and
push
mov
inc
aad
xor
lods
orb
scas
test
pop
pusha
cmp
call
ja
cld
mov
pusha
not
ds
ret
inc
and
mov
push
jbe
cld
cmp
stc
dec
inc
add
sarl
addl
add
int
sub
arpl
and
sbb
cld
pop
and
dec
in
adc
jle
std
out
icebp
lods
sub
jno
adc
hlt
add
cmp
xor
inc
add
mov
test
pop
add
jecxz
pop
inc
inc
cmc
or
test
into
mov
mov
cwtl
add
cmp
push
push
je
mov
aam
and
test
imul
add
outsl
sti
and
and
add
ja
xor
mov
les
insb
and
push
movsb
pop
fidivl
scas
hlt
cli
bound
in
xchg
sahf
sbb
je
adc
sub
in
pop
pushfw
cmc
pushf
loopne
dec
adc
xlat
mov
cmp
inc
inc
adc
or
mov
fimuls
aam
out
xchg
cltd
dec
fidivrs
cmp
out
rorl
add
int
cmp
cmc
sti
into
idivb
rolb
cmp
das
adc
idivb
ret
sbb
loop
inc
add
in
xor
sbb
xchg
add
loopne
sbb
inc
ds
sti
outsb
cwtl
xor
cmpsl
loop
dec
js
cld
jnp
sub
or
addr16
adc
hlt
mov
in
jno
and
in
popf
jnp
mov
lds
pop
dec
je
inc
test
adc
es
push
xchg
mov
movsl
sbb
enter
enter
int
xchg
or
jno
xor
xor
xchg
mov
mov
adc
push
push
and
fisubl
repnz
cmp
sub
inc
test
movsb
xchg
loop
ret
leave
mov
xchg
out
pop
negb
scas
sub
and
and
repnz
mov
pop
in
pop
outsl
sub
adc
icebp
je
rol
enter
push
add
aas
addr16
pop
fadd
clc
dec
ds
ss
movsb
push
xchg
jo
imul
mov
imul
lea
stos
pop
mov
inc
xor
cltd
sbb
es
and
jp
fdivs
nop
pusha
inc
xchg
je
addr16
call
jmp
pop
outsb
sub
mov
add
insb
and
push
add
pop
cltd
inc
jmp
fldt
shrl
loopne
mov
xchg
popf
xchg
xlat
pushf
ljmp
xchg
iret
mov
push
enter
ficompl
adc
in
xchg
add
fdivrs
push
les
adc
sub
pushf
es
add
in
push
repz
mov
jno
sar
xchg
xchg
addr16
jnp
fdivrs
jne
sub
fwait
mov
add
ret
push
sarl
mov
push
sti
fmull
daa
nop
enter
fisubrl
daa
add
mov
in
sub
mov
and
jb
sub
lods
or
push
mov
inc
add
cmc
call
push
movswl
ror
es
loope
push
push
mov
push
fldl
das
outsl
scas
mov
sub
mov
bound
xor
ja
inc
icebp
ja
jb
mov
cmpsl
dec
mov
mov
mov
shlw
pushf
inc
add
jl
loopne
aam
aaa
arpl
icebp
sbb
std
jge
insb
test
dec
lret
cs
sahf
call
push
repnz
out
je
sbb
leave
hlt
rcr
mov
fmuls
mov
jmp
lret
mov
sub
imul
mov
sbb
iret
mov
ret
arpl
lcall
daa
or
lahf
mov
xor
sub
mov
sub
cmpl
mov
lea
mov
repz
sbb
in
mov
push
jb
insl
test
aam
imul
push
lods
jl
jnp
mov
es
test
call
ror
fnsetpm(287
and
cmp
les
xchg
mov
sbb
mov
test
je
in
cmp
in
sbb
test
test
sbb
or
sub
fdivr
out
mov
daa
and
insb
out
repnz
sti
mov
in
lods
mov
movsb
push
arpl
cmp
stos
icebp
in
fwait
sbb
jb
stc
mov
bnd
mov
sbb
pop
pop
adc
lods
outsb
xchg
xor
push
sub
test
or
jne
cmp
mov
test
int
test
loopne
fwait
sbb
push
ret
rcll
mov
or
dec
fistl
gs
or
xor
push
out
daa
or
shll
xchg
sbb
mov
inc
pop
dec
dec
dec
in
dec
xchg
push
sbb
fcom
fisubs
mov
add
push
sbbl
add
stos
fwait
mov
hlt
xchg
fmull
mov
pop
test
xor
inc
rolw
dec
rcrl
lds
xlat
mov
fs
and
push
push
repnz
jno
orl
test
sbb
dec
fmull
cmp
xorl
imul
mov
into
in
push
fmuls
push
push
aam
loopne
std
decb
push
fimull
dec
mov
rcll
movsl
jp
mov
pop
ret
or
data16
push
enter
call
add
movsl
jl
in
add
xor
xlat
sahf
mov
jecxz
cli
jbe
xchg
in
adc
inc
push
mov
xchg
mov
daa
test
ficomps
bound
cmpsb
ss
int3
cmpsb
inc
inc
outsb
mov
std
test
mov
mov
and
call
aas
mov
pop
daa
push
push
aaa
imul
jno
mov
orl
sub
stc
test
lcall
ret
sbb
dec
pop
ss
or
lods
mov
lods
repnz
fwait
lds
or
insl
and
repz
and
cli
cwtl
clc
gs
in
push
ss
xchg
and
mov
addr16
test
mov
int
out
fistpl
into
cwtl
std
mov
mulb
sarb
shrb
and
xor
pandn
test
ds
dec
add
cld
rorl
fcomi
sub
pop
js
cwtl
pop
push
or
pop
pop
aas
aas
cltd
movsb
in
adc
or
push
mov
xchg
cmpsb
and
xchg
cli
jae
cmp
mov
out
cmpsl
leave
repnz
inc
lret
cmp
jnp
jp
out
push
xor
fistps
fcompl
add
nop
leave
adc
xor
xchg
adc
test
jl
rol
clc
push
daa
fwait
gs
adc
ljmp
loop
jge
xchg
inc
xchg
test
jae
gs
stos
push
dec
shll
mov
adc
mov
in
mov
or
xorps
add
cs
outsw
cmp
shlb
mov
inc
jle
test
shll
outsl
sti
out
mov
lock
or
sbb
and
ja
movsb
lods
cmp
sbb
insb
xchg
leave
imul
xor
pop
mov
imull
sub
push
int
fs
mov
pop
icebp
lock
jmp
cld
jno
xchg
in
push
fldlg2
lcall
mov
jp
outsl
rcl
dec
add
jmp
xchg
out
imul
popa
jp
cmpsb
sub
loope
sub
loop
adc
aad
dec
jge
pop
outsb
jl
inc
scas
sahf
orl
shl
insb
lcall
cmp
daa
push
in
dec
mov
jle
mov
and
dec
jns
pop
fidivs
data16
push
out
ss
push
int
add
xor
or
mov
inc
pushf
mov
cmpsl
std
and
push
jl
fistps
fiaddl
sub
js
mov
add
subb
rclb
or
xor
mov
xor
fstpt
and
sahf
inc
leave
iret
push
aam
sbb
jp
cli
xchg
mov
dec
jl
scas
icebp
add
jno
mov
loopne
cs
cmp
movsb
push
icebp
mov
xor
cltd
lahf
mov
ret
xchg
pop
inc
loopne
sub
or
ss
std
jbe
dec
xor
and
adc
fsubrs
adc
repnz
and
mov
adc
clc
sbb
lret
dec
imul
xor
add
inc
adc
adc
aas
mov
push
pop
ror
repz
cld
mov
stc
test
pop
push
sbb
lods
cmpsl
pop
jno
gs
lods
mov
inc
or
or
sub
add
push
js
pop
cwtl
adc
sarb
mov
xchg
push
push
insl
xchg
dec
repz
mov
mov
cs
jo
sub
fucomp
jle
call
or
jnp
out
movsl
jle
mov
lods
mov
dec
xor
mov
pop
fiadds
test
ljmp
ret
xorl
rcll
sbb
enter
daa
push
or
pop
cmp
and
xchg
jns
jb
subb
adc
subl
cmpsb
mov
stos
and
lods
push
sti
mov
aaa
inc
andb
mov
sbb
pop
sbb
outsl
sub
lods
lahf
cli
cli
daa
inc
and
mov
push
dec
push
sbb
pop
xchg
in
out
pop
push
inc
pop
out
xor
int3
mov
scas
in
mov
adc
gs
mov
and
fs
sbb
movsb
cmc
hlt
cli
cmp
rcrl
stos
lock
xchg
clc
pop
in
fucomp
cld
jmp
sub
fsubrs
mov
jnp
leave
fisttpll
or
nop
sub
jo
icebp
loope
ja
ja
fidivs
aaa
xlat
inc
jnp
repnz
sahf
scas
xor
iret
jle
cwtl
repnz
xchg
mov
cmpsl
jmp
dec
sub
and
cmpsl
add
seto
int3
gs
not
es
gs
push
mov
lret
jle
mov
jecxz
and
sbb
xchg
inc
js
mov
or
bound
lods
out
test
idiv
lods
pop
bound
aaa
movsl
lods
dec
or
mov
enter
xchg
or
je
ljmp
xchg
push
daa
mov
enter
jmp
push
jno
decb
or
cmp
push
mov
fdecstp
xor
in
repz
outsb
mov
jmp
mov
sub
es
fiaddl
add
jp
pusha
dec
cmpsb
jle
add
imul
sbb
icebp
xchg
fcoms
adc
mov
je
das
gs
jge
mov
lock
cmp
or
loope
insb
cs
add
aam
pop
lds
rolb
mov
push
xchg
mov
pusha
jl
in
int3
or
mov
mov
iret
xor
sub
and
rolb
pop
rcl
out
add
xor
sahf
dec
ret
ljmp
push
ds
dec
pop
jae
sub
cli
adc
xchg
addb
mov
cwtl
sbb
popa
xchg
pushf
pop
lods
cmp
es
popa
dec
sbb
ret
inc
sbb
adc
repnz
lock
popf
adc
sarb
mov
adc
fidivrs
aam
add
cli
ljmp
dec
mov
dec
jo
push
inc
jle
mov
sbbb
rorb
dec
int3
push
adc
jns
call
sub
loope
cmpb
pop
and
aad
push
jecxz
jecxz
icebp
loop
push
cli
inc
or
push
or
xchg
loope
push
popf
jl
int3
inc
std
add
outsb
daa
stos
push
jle
lea
xor
pop
repnz
les
loop
or
sbb
adc
jbe
sub
int3
dec
arpl
ret
cltd
and
cmpsl
in
push
mov
jmp
ret
imul
loopne
out
jp
and
test
pop
mov
xchg
mov
push
in
bound
pop
cmp
inc
sbb
dec
jae
adc
fs
pop
rcll
cmp
inc
pop
aam
adc
lret
cmp
push
sti
inc
jg
add
ds
mov
ljmp
arpl
mov
xchg
addr16
sub
nop
call
sbb
mov
shrb
enter
inc
mov
sbb
pop
test
xor
sbb
adc
pop
xor
cli
sbb
cmp
lods
adc
inc
mov
inc
nop
xchg
xor
mov
inc
xor
push
jbe
fs
ja
lods
push
jle
and
cmp
fld
sti
xchg
xchg
mov
cmp
or
in
out
ficoms
aas
out
inc
jo
pusha
mov
and
sub
mov
repnz
movsl
in
fbstp
fists
jmp
sub
sbb
push
iret
lret
clc
das
fildl
xchg
mov
sti
pushf
std
xchg
pop
xor
ds
push
xor
pushl
jg
shll
mov
pop
popl
push
cmp
and
jbe
push
mov
xor
push
and
bound
xchg
test
or
push
xor
or
dec
xchg
dec
dec
xor
jno
pushf
insl
push
push
shl
cwtl
xor
jecxz
repz
idivl
lock
mov
jno
inc
nop
cmc
adc
sbb
jmp
fildl
in
cli
cmc
xchg
adc
or
pusha
push
or
dec
inc
pop
fdivrp
pop
sub
mov
lcall
in
scas
jp
xchg
inc
mov
das
and
and
repnz
repz
shll
mov
sbb
mov
out
fst
cwtl
jmp
sub
xchg
inc
jge
mov
jbe
or
mov
mov
loopne
sub
lcall
add
add
pop
es
pop
dec
stos
rorb
xor
and
mov
and
adc
repz
es
mov
inc
lret
mov
jge
mov
add
pop
cmpsl
in
xor
call
sbb
push
jno
cli
movsb
sbb
add
rorb
jl
pop
xor
fmul
pop
inc
pop
sarl
rcl
push
mov
imul
in
sub
pop
ret
and
xchg
cltd
sbb
inc
adc
and
enter
outsb
sbbb
jns
and
stc
cmc
sub
push
leave
nop
fs
jmp
pop
mov
mov
xchg
mov
xchg
in
das
inc
cmp
push
mov
outsl
test
mov
mov
call
fucomp
insl
stc
xor
mov
call
sarl
jge
push
mov
fcomps
lcall
scas
inc
out
jge
rcl
and
or
lds
out
ja
fwait
int3
ret
lea
mov
pop
idivb
push
out
js
out
out
sub
sbb
sbb
dec
inc
xor
jno
stos
popf
xor
cmpsl
hlt
out
rcrl
cmp
xchg
test
sub
in
enter
xchg
dec
mov
adc
jge
lahf
fisttpll
jl
aaa
push
out
xor
insb
ror
sub
lods
or
add
fcompl
repnz
or
push
test
jo
out
sahf
xorb
sbb
cltd
cmp
addr16
rol
xor
push
cltd
and
ja
sarb
xor
xor
sbb
dec
ljmp
leave
pop
cmp
jmp
popf
push
xor
shll
addr16
or
aad
dec
test
push
mov
inc
iret
cli
push
pop
sarb
test
jp
pop
jge
push
lcall
xchg
push
jecxz
cmc
dec
and
inc
xchg
sub
arpl
xor
js
pop
jecxz
sub
mov
push
sti
lods
and
in
and
sti
add
adc
mov
das
imul
sub
mov
adc
mov
dec
push
inc
cs
push
adc
aam
ds
ja
push
and
das
xchg
jg
jb
cwtl
pop
dec
sub
push
loop
sub
add
pop
mov
inc
lcall
dec
pop
insl
mov
out
mov
test
inc
add
mov
sub
cld
or
dec
nop
movb
decb
hlt
pop
cmp
pop
push
enter
xchg
mov
addr16
xor
daa
into
rcrl
or
lea
or
insl
adc
popf
inc
pop
cld
adc
pop
roll
sbb
pop
cmpsl
jo
jmp
sbb
inc
mov
das
lret
lret
cmp
xchg
add
es
adc
adc
jno
shll
ret
add
loop
ficomps
add
sti
loopne
stos
pop
sahf
lock
sbb
inc
imull
ljmp
and
jmp
sbb
mov
scas
xchg
or
pop
daa
xchg
aad
sahf
test
adc
sub
loopne
dec
xor
add
cmp
xlat
std
lods
xchg
sti
jle
popa
push
jne
aas
cltd
mov
add
cmp
clc
dec
jle
or
xchg
mov
repz
aaa
lods
insl
aas
call
add
push
shll
mov
lret
rorl
lret
dec
xchg
dec
pushf
icebp
push
insb
js
xchg
xchg
aas
fdivrl
ds
test
dec
iret
jge
fs
sub
lods
add
jl
push
movsb
mov
rolb
xchg
out
sbbl
mov
pop
int3
jp
rcl
and
fstl
orb
or
test
add
mov
int
push
movsb
mov
popl
popa
cmp
mov
cmpsb
nop
fdivrs
adc
xor
add
outsb
sbb
jmp
shlb
sub
pop
xchg
stos
hlt
scas
push
xor
push
cmp
adc
jne
mov
mov
inc
call
push
testl
cs
addr16
test
out
pop
ss
mov
clc
aam
ds
mov
fsubs
fcmovne
mov
idivl
in
jp,pn
aad
jmp
pop
cli
lret
inc
jb
ss
inc
cmpsb
adc
mov
cwtl
jmp
test
xlat
mov
pusha
cli
inc
inc
inc
add
and
ljmp
lods
mov
adc
dec
out
inc
jle
pop
push
mov
test
sahf
insb
and
dec
shll
fstl
repnz
fmuls
xchg
add
adc
jp
pop
cmp
xchg
push
lock
test
xchg
repnz
and
imul
push
pop
jae
jmp
xchg
or
rcr
daa
lods
xchg
loop
dec
hlt
into
xor
pushf
fdivr
cltd
int
mov
push
pop
mov
aaa
loope
cwtl
rcr
rcrl
or
pushf
pop
dec
aas
pop
sbbb
js
push
inc
add
out
push
push
jge
popa
enter
inc
jp
xlat
insb
sub
cltd
aam
mov
xchg
jle
aaa
lahf
xor
xchg
rcrl
sbb
les
stc
cwtl
add
imul
jl
push
mov
mov
adc
testl
jg
ret
pop
sbb
gs
aas
jbe
out
and
mov
clc
fldcw
and
aaa
int3
icebp
and
push
jae
fwait
inc
clc
sub
fisubl
lret
lock
notl
fwait
shlb
cld
sbb
cmc
das
mov
sub
add
mov
mov
test
lods
ljmp
mov
cmp
outsb
ss
lahf
lret
fwait
mov
test
lods
jle
ret
dec
in
movb
mov
lea
iret
pop
adc
stc
xchg
adcl
in
jge
ret
push
cmp
xor
sbb
aaa
roll
arpl
sbb
into
es
pop
or
pop
sub
scas
sbb
cmp
push
scas
loope
xor
adc
and
gs
dec
mov
cmp
add
insl
inc
dec
add
push
aam
push
xchg
cmc
dec
mov
fisubrl
adc
xchg
dec
mov
nop
scas
jns
mov
out
imul
pop
repnz
lock
and
push
push
inc
movsb
ljmp
and
xchg
xchg
xchg
adc
jno
clc
sub
leave
pop
push
bound
daa
bnd
push
xchg
test
xor
or
into
mov
dec
pushf
mov
push
int3
jp
sbb
add
and
push
cmp
ss
push
pop
data16
pop
addl
cmp
dec
std
daa
out
in
jns
push
jle
pusha
aam
cld
mov
test
and
nop
mov
mov
in
aam
jp
imul
dec
cli
add
jecxz
xor
pop
sbb
fisubl
es
xor
mov
gs
aas
sbb
cmp
roll
aaa
add
out
enter
leave
inc
xlat
cmc
and
sub
or
cwtl
sub
jnp
push
cmp
fcoml
dec
in
test
outsl
aam
test
cltd
or
enter
xor
movsb
mov
push
and
loop
dec
lahf
idivl
and
and
cmp
aaa
insb
add
cwtl
sbb
sub
xchg
fisubrs
incl
xor
das
inc
jmp
bound
mov
dec
cld
shl
leave
xor
push
adc
cwtl
mov
pop
out
pop
adc
int
mov
xlat
rorb
sahf
bound
mov
push
lds
sub
outsb
lret
loope
xchg
or
pop
xlat
mov
jns
les
loopne
lea
push
pusha
jnp
mov
jnp
lahf
mov
imulb
in
test
pushf
sarb
in
jp
mov
shll
frstor
jb
jle
dec
xchg
popa
cmp
repnz
mov
xor
lret
shll
sbb
xchg
cs
mov
pop
pop
adc
adc
jp
sub
dec
out
loope
inc
jp
loop
int3
mov
push
cmpsb
dec
dec
push
sub
push
out
pop
aam
inc
dec
rcrl
mov
add
aas
aam
sub
mov
dec
inc
pop
imul
pop
lret
iret
sub
jae
repz
jnp
stc
insl
pusha
xchg
mov
stc
icebp
xchg
adc
fdiv
pop
jp
xchg
dec
fs
adc
mov
gs
les
xor
jno
cmp
cmp
outsl
nop
cmp
mov
test
jp
push
mov
xchg
xchg
or
push
push
push
stos
add
fimull
xchg
std
pop
mov
call
lock
push
sub
in
sti
xor
arpl
or
or
mov
adc
mov
add
out
dec
mov
cmpsl
iret
mov
ret
sahf
sti
popa
mov
mov
in
stos
and
outsl
lods
mov
mov
inc
cmp
enter
push
xchg
cli
dec
fwait
cmp
adc
sbb
cmpl
jmp
sarl
cmc
push
insl
pop
ja
ret
sub
jno
jg
jno
mov
jge
push
paddd
add
jecxz
js
mov
adc
and
daa
xchg
icebp
outsl
inc
xor
lret
shll
je
sub
or
popa
pop
mov
xchg
iret
inc
daa
je
enter
push
xchg
incl
xor
add
dec
push
xchg
cmp
repnz
sub
jnp
gs
xchg
mov
cmp
jae
mov
sbb
nop
mov
popf
cli
and
jg
cld
addr16
aad
ffree
cmc
cmp
adc
jg
les
hlt
xchg
add
scas
es
mov
xchg
cmp
ficoms
inc
and
and
iret
cmp
call
icebp
xchg
mov
dec
dec
pusha
and
je
loopne
mov
enter
mov
mov
sbb
movsl
sbb
cmp
pop
pushf
add
mov
mov
xor
mov
data16
add
mov
icebp
sahf
std
inc
insl
push
ds
repz
adc
mov
inc
mov
xchg
scas
int
les
adc
je
lea
jne
adc
adc
push
mov
test
push
pop
cmc
mov
xchg
xor
ss
in
addb
repnz
and
inc
inc
xor
sbb
aas
push
sbb
xchg
loop
inc
dec
pop
out
sbb
mov
fwait
sbb
test
sti
mov
mov
ret
cmpsl
faddl
sar
out
mov
aaa
mov
sbb
mov
mov
addr16
cmpsb
fcomps
iret
adc
push
subb
add
sub
or
loopne
inc
into
ja
sahf
pop
dec
mov
sti
inc
sub
pop
pop
ss
fnsave
shlb
mov
lock
sbb
cmc
lods
es
jge
ljmp
lock
lret
insl
in
cmpsb
outsl
sub
pop
mov
mov
and
shlb
pop
outsl
fisubrs
ltr
mov
ds
mov
xor
mul
pop
or
inc
std
sub
pop
jecxz
push
cmp
or
or
aas
insb
cmpsb
fcoml
xchg
xor
sbb
hlt
add
lret
mov
enter
mov
orb
sub
enter
movl
clc
loop
jo
sub
scas
lcall
or
ja
lods
iret
push
scas
xchg
pop
repz
rol
iret
add
jbe
push
sub
dec
mov
inc
adc
push
imulb
dec
xchg
pop
test
jge
fucomip
or
xor
jp
in
sub
rcl
mov
pop
sbb
and
shll
imul
gs
xorb
fidivrs
push
imul
rcll
inc
flds
lcall
sti
xor
push
es
cs
mov
push
andl
cmp
cld
adc
ret
popa
push
das
jmp
fiaddl
sub
mov
and
lods
shl
sub
add
add
dec
and
cli
jns
adc
xchg
shrb
fimull
pop
popf
inc
mov
xor
shl
push
lods
shlb
shlb
pop
and
mov
jecxz
inc
xor
sub
or
loopne
xchg
fwait
xchg
incl
or
jp
bound
out
sbb
push
cmpb
push
scas
imul
clc
pop
call
and
imul
sahf
outsl
fdivr
cmpsb
stc
xchg
loop
sub
mov
adc
dec
movsb
arpl
pop
jnp
ss
jae
lock
cmp
inc
dec
mov
add
lods
repnz
scas
jne
loopne
cmp
jns
sbb
mov
jmp
popa
ficoml
into
aaa
add
cmp
xchg
ret
mov
roll
adc
inc
push
outsb
out
sbb
cmp
fcomps
push
and
in
je
sbb
movsl
scas
cmpsb
outsb
sub
sti
inc
mov
scas
jbe
sbb
sbb
mov
in
xchg
xor
xchg
jno
cmp
push
pop
pop
mov
cmp
sbb
test
jo
outsl
inc
mov
adc
inc
jns
xor
xor
fldcw
pop
out
or
jne
jnp
add
movsl
push
adc
clc
mov
mov
or
jae
xor
or
mov
jp
cmp
jecxz
cs
addr16
jb
jl
cmc
in
test
je
xor
xchg
dec
jge
pop
les
in
daa
cmpsb
shrb
cmp
inc
sbb
mov
fisttpl
jnp
mov
mov
insl
stos
fmuls
push
fmuls
sub
aam
mov
insl
cmpb
insb
test
pop
scas
jle
mov
rclb
sbb
lret
xchg
adc
push
xchg
dec
ja
push
test
pop
sub
or
push
loopne
arpl
into
sbb
stos
and
push
xor
jbe
iret
sub
mov
mov
and
and
repnz
stc
jp
out
bound
adc
xchg
scas
mov
jo
adcl
sub
pop
sti
cltd
clc
adc
jns
adc
cmpsl
sub
cwtl
add
mov
and
mov
orl
dec
addr16
push
fdivr
mov
fsubrl
cwtl
push
mov
jbe
call
xchg
xor
sbb
sar
xchg
inc
jg
sbb
insb
mov
in
push
cwtl
push
popa
inc
cmp
mov
jl
cld
push
adc
sub
out
sysenter
lods
xchg
lret
adc
push
mov
mov
int
cmpsl
pop
push
pop
cld
cmp
push
mov
fldenv
stos
sahf
scas
inc
frstor
add
cmpsb
mov
or
jne
scas
cld
xchg
push
int3
rclb
int3
stc
stc
xchg
add
lods
jg
dec
mov
mov
ror
inc
loopne
out
xor
lds
shl
push
pop
inc
sub
push
push
pusha
dec
mov
shlb
cmpb
lea
pop
push
repz
movsl
cmp
xor
cmp
test
fwait
cmp
mov
xor
mov
jo
xor
xchg
cmpsb
xor
fwait
inc
mov
push
or
ror
mov
cmp
test
push
push
jmp
adc
movsl
lret
or
push
repnz
shr
push
push
aaa
mov
jmp
cmp
cmp
xlat
lret
jp
icebp
and
jmp
cmpsb
cmp
sbb
int
xchg
in
mov
xor
les
repnz
mov
jbe
mov
ljmp
aas
inc
and
call
add
pop
push
cld
xor
add
aas
xor
dec
arpl
mov
or
aas
pusha
inc
pop
add
adc
fadd
mov
pop
in
icebp
lret
icebp
push
dec
lahf
call
mov
xchg
repz
pop
lods
push
rcrl
mov
mov
movsl
mov
pop
fistps
stos
call
mov
lods
jle
mov
in
sbb
mov
adc
lods
cli
jecxz
pop
ret
sub
and
repnz
fwait
and
dec
push
add
mov
js
sub
icebp
or
cmp
xchg
jp
xlat
fiadds
push
daa
aas
sub
pop
pushf
bound
aaa
movsb
push
sahf
or
mov
or
jno
scas
dec
notl
cmp
sub
mov
dec
idivl
sahf
inc
mov
jae
xchg
add
or
xchg
imulb
dec
js
in
dec
sub
popf
push
jbe
fstps
mov
mov
negb
or
es
popf
cmp
cmp
sbb
push
mov
adc
aas
push
les
dec
loope
shlb
mov
jecxz
lods
in
xchg
mov
test
push
in
data16
lock
mov
jo
and
aam
sub
movsb
inc
sahf
add
pop
adc
jmp
leave
pop
jle
sbbb
add
mull
mov
addr16
jp
in
mov
push
dec
xchg
or
lods
std
adc
ret
and
rorl
cmpsb
repnz
in
push
cmp
clc
lea
jb
sbb
data16
sbb
mov
pushf
fs
pop
push
push
jae
push
sub
or
das
jns
push
in
jecxz
xor
add
aas
inc
fsubl
mov
addr16
pop
imulb
add
out
pop
sbb
ja
and
nop
and
or
popf
or
addb
icebp
mov
add
xor
paddw
and
push
and
sub
pop
fcoml
dec
sbb
je
jp
test
inc
sub
fisttps
mov
fisttpll
cmp
dec
out
js
arpl
movsl
pop
xorl
mov
ss
jle
jnp
jle
aam
sbb
imul
cmp
xchg
sahf
lock
or
movsb
sbbb
or
sarb
pop
inc
inc
nop
pop
cmp
test
mov
pop
fcmovb
cld
js
lret
out
lret
orl
pop
xor
mov
mov
push
mov
push
jecxz
jo
mov
inc
push
sahf
jle
loopne
aaa
push
bound
dec
adc
test
rcrb
loope
das
and
jmp
pop
sub
mov
jb
lock
ljmp
fdivs
cwtl
aas
scas
cs
jge
lahf
cmpsb
dec
pop
jbe
out
gs
sbb
addl
xchg
pop
cld
insb
in
fnstenv
or
gs
pop
push
xchg
out
pushf
cmp
mov
sti
test
pop
outsb
call
lret
mov
pop
mov
mov
into
int
mov
mov
inc
loope
jmp
loope
mov
inc
repz
out
scas
cwtl
fcoms
mov
mov
xchg
xor
outsl
cmp
add
pushf
pop
dec
outsl
inc
jge
mov
jae
sbb
or
jg
nop
mov
fldl
insb
jbe
pop
mov
pop
sub
out
fimuls
fs
int
inc
rclb
sub
xlat
jnp
insl
add
and
lea
int
pop
out
push
dec
cmc
mov
xchg
mov
and
iret
push
and
jmp
out
jmp
popf
sub
sti
cmp
or
inc
lcall
or
fwait
xor
pop
mov
pushf
and
adc
adc
movsb
add
out
jnp
fwait
sar
addr16
xor
hlt
es
ffreep
jp
out
xchg
sbb
mov
or
das
jb
jp
inc
adc
mov
cld
shlb
fdiv
inc
popf
flds
add
pop
andl
xor
push
or
inc
push
outsl
out
sbb
xchg
mov
mov
pop
inc
mov
xor
sub
movsl
into
sbb
mull
mov
aam
mov
push
sbb
call
and
sbb
out
xchg
lods
in
repz
loop
pop
dec
cli
rol
sub
fwait
push
jg
xchg
cmc
cli
inc
rclb
hlt
out
in
fsubr
lods
inc
insb
push
movsb
std
mov
shl
mov
int3
fs
add
out
xor
pop
movl
test
dec
dec
and
ret
add
mov
rol
sahf
fstpl
clc
data16
mov
xor
test
mov
or
outsb
mov
sub
xchg
pop
fcoml
pusha
cli
cmp
xchg
xor
sbb
lret
push
bound
push
xchg
sub
xor
adc
sub
adc
fisubrs
ret
sbb
mov
fs
mov
mov
out
leave
scas
cmp
mov
add
cmp
cmp
mov
insl
into
fcoml
inc
scas
push
jo
mov
mov
and
inc
cli
mov
or
les
pop
rcrl
push
daa
push
mov
les
xchg
push
mov
scas
mov
cmp
mov
push
stc
cmc
mov
popf
push
and
fimuls
std
jno
inc
repz
jns
jb
jo
popa
lock
lock
adc
mov
pop
dec
in
mov
or
inc
adc
pop
rcrb
sbb
pop
sbb
shrl
aam
leave
cmpsl
cmp
or
dec
pop
cmp
xor
push
mov
cmp
pop
cmpsl
loop
sub
cld
xor
outsl
std
push
add
xchg
adc
cmp
iret
dec
mov
push
je
cmc
mov
cli
xlat
add
pop
hlt
sub
lods
inc
push
xor
ss
jno
inc
lret
in
rorl
xor
ret
push
in
outsl
popf
sbb
call
or
xor
out
popl
in
sbb
or
jecxz
rcl
xchg
push
cmp
data16
mov
dec
fwait
cmp
fidivs
fs
sub
adc
cli
adc
jo
out
rorb
clc
or
movsl
xchg
jl
adc
mov
insb
push
out
add
push
dec
shrl
pop
jnp
mov
cmp
push
xor
pop
cmp
cwtl
lret
mov
ja
movsl
mov
or
cmp
iret
ja
lods
nop
mov
data16
xor
cmp
cltd
aad
pop
add
stc
inc
leave
out
cmc
xor
adcl
or
inc
inc
sbb
and
int
dec
lahf
mov
or
loope
mov
pop
adcb
das
dec
and
pop
xlat
sub
add
jecxz
lock
jl
imul
cmc
sub
clc
repz
cmp
cmp
push
jmp
call
push
jg
pushf
jg
and
inc
pop
xchg
or
test
ss
sbb
mov
jp
and
scas
jmp
jne
addl
insl
xor
sbb
mov
sub
jecxz
push
fidivs
adc
iret
xchg
mov
xor
push
insl
pop
fcoms
jbe
rclb
cmc
pushl
out
xor
cli
cmpsb
lcall
pop
clc
sbb
push
mov
stos
icebp
and
mov
pop
add
in
loope
jle
pushf
push
stc
xchg
jmp
mov
dec
pop
imul
subb
popa
add
movsb
add
jmp
cld
in
enter
jge
xor
jle
scas
adc
xchg
push
ss
popf
adc
jp
cmp
aas
adc
int3
shl
mov
stc
pushf
ror
fiadds
mov
cmp
mov
loopne
pop
and
idivb
pop
shll
hlt
mov
inc
sub
sbb
mov
imul
popf
or
sbb
add
xchg
or
les
jo
gs
and
iret
xor
jnp
ret
cmpl
fistl
arpl
push
stos
jno
loop
cvtps2dq
cmp
sahf
mov
jle
sub
xchg
mov
or
sbb
pop
jmp
xchg
adc
aam
adc
fcoml
add
mov
pusha
push
shr
or
push
fsts
mov
or
and
pop
add
arpl
pop
shlb
add
and
sub
sbb
cmp
mov
lea
out
dec
aaa
pop
enter
push
jge
xlat
push
push
sub
insl
inc
adc
push
jp
inc
mov
adc
mov
cmpsl
testl
mov
lods
in
je
pop
in
rcrb
mov
jne
idiv
clc
int3
xor
loope
mov
mov
xchg
xor
push
cmp
dec
mov
push
movntps
shlb
push
inc
dec
jnp
pusha
popa
nop
daa
mov
hlt
add
xor
mov
add
sub
dec
lock
xchg
xchg
popf
popa
add
pop
ret
jl
dec
stos
sbb
shlb
data16
rolb
iret
imul
das
xor
mov
in
push
pop
push
or
push
mov
dec
call
fsts
cmp
jle
fldl
leave
cs
call
push
rorb
mov
movsl
xchg
stc
fdiv
das
sub
add
loopne
and
out
mov
inc
mov
mov
xorl
xchg
adc
pop
insl
fsubrs
cmp
lds
clc
aaa
inc
test
or
gs
mov
je
loop
movsb
mov
das
mov
sbb
and
sbb
mov
mov
loope
jp
iret
jg
push
out
fadds
or
stos
nop
jo
hlt
in
and
add
push
data16
int3
push
js
int3
dec
pop
sub
enter
add
cmp
lcall
iret
out
mov
jmp
or
push
mov
cmp
insl
push
mov
fs
int3
out
test
sbb
in
push
shr
push
loop
in
push
sti
dec
insb
xor
fs
adc
xchg
dec
mov
testb
stos
popa
mov
xlat
loope
out
nop
xchg
sub
add
loopne
jne
cmc
cmp
fistps
fiaddl
mov
insb
inc
fsubrs
xchg
and
repz
dec
sub
in
fucomi
adc
push
xchg
jge
xchg
pop
pushf
add
and
or
jp
mov
jo
leave
xchg
xchg
fidivrs
mov
xchg
test
or
in
jle
test
test
jmp
cmpsb
mov
sub
push
pop
adc
fwait
in
andb
pop
fdivl
clc
mov
sub
cmp
insl
popf
mov
mov
sub
inc
jge
movsl
movsw
das
int
aad
or
mov
loop
std
sbb
xor
xor
and
sub
icebp
sbb
xor
add
mov
sbb
mov
int
negl
lock
aad
mov
xchg
ja
cli
aad
fistpl
pop
cmpsl
ja
inc
jae
mov
xchg
pop
mov
iret
lds
add
cltd
jmp
xor
pop
enter
dec
add
mov
data16
stos
xchg
testb
xchg
cltd
aad
stos
aas
aad
mov
dec
sub
pop
inc
cwtl
repnz
pop
and
fidivrs
popl
les
xchg
mov
pop
outsb
sub
repnz
movsl
orb
push
sub
jb
sub
mov
lret
aad
pop
xchg
fisttps
cmp
out
stos
lahf
notl
scas
dec
jnp
or
sub
dec
or
dec
cmp
aaa
sub
mov
add
xlat
pop
clc
addr16
icebp
nop
jmp
lret
mov
lret
cmp
jno
mov
cwtl
cli
loopne
mov
call
addr16
fisttpl
lods
clc
mov
xor
mov
adc
mov
daa
mov
loopne
xchg
xchg
cmpsl
or
inc
es
xchg
lcall
adc
or
popf
pop
dec
cs
xchg
push
cmp
scas
movsl
stos
gs
leave
imul
add
cld
jnp
movsl
dec
xor
pop
rorb
enter
shll
pop
pop
sub
lret
and
push
mov
hlt
aad
pop
cs
cmp
xor
adc
stc
mov
mov
pop
mov
and
sbb
adc
sub
call
jg
adc
sbb
popa
lea
mov
dec
ss
ljmp
cmp
jl
sti
pop
xchg
mov
fcoml
sbb
faddl
or
lcall
and
call
xchg
sti
sahf
sbb
xor
jb
aad
addr16
jp
xor
dec
fldl
dec
xorb
dec
out
rorb
push
arpl
sahf
nop
movsb
push
xor
xor
and
adc
inc
push
sbb
pop
push
pop
movsb
out
jno
popf
sbb
adc
adc
dec
hlt
push
rclb
push
cwtl
out
mov
jo
stc
in
or
jmp
loopne
test
adc
pop
test
sarb
enter
jecxz
pop
stc
cmc
stos
leave
repz
mov
dec
test
hlt
daa
jno
cmpsl
lret
pusha
into
in
ss
push
mov
fdivl
xor
test
mov
fwait
adc
ret
lahf
out
shll
mov
push
mov
sbb
nop
sub
xchg
mov
repz
pop
into
outsl
idivl
cltd
in
lcallw
xchg
push
xor
es
or
or
lcall
add
and
decb
arpl
push
test
mov
xor
ficoml
inc
adc
dec
sbb
test
pop
adcb
pushf
pop
lcall
cltd
mov
cmp
cltd
gs
loop
mov
shlb
sub
pop
dec
clc
push
pop
sahf
inc
rcrb
xor
aad
test
and
add
fdivrl
mov
mov
jp
pusha
pop
jnp
add
cmpsl
xchg
icebp
adc
outsb
xlat
nop
das
gs
cwtl
sub
cmc
int3
ret
fistpl
movsb
ds
in
mov
adc
mov
sti
dec
mov
and
stc
lret
xlat
ds
mov
inc
mov
pop
fldenv
cli
fwait
into
add
adc
sbb
mov
dec
cli
cmp
pop
lea
js
sub
push
dec
add
mulb
inc
dec
iret
or
jne
daa
inc
inc
sbbb
cmpsb
ret
and
jae
ljmp
xor
xchg
pop
leave
shlb
out
inc
js
jecxz
jne
outsb
mov
imul
clc
pop
jp
or
mov
fcmovbe
push
add
sbb
inc
mov
scas
mov
lahf
dec
mov
lcall
push
push
cltd
call
mov
push
in
jp
bound
icebp
hlt
or
push
or
enter
mov
in
mov
leave
or
and
hlt
dec
in
nop
sbb
mov
push
jg
jl
sub
dec
icebp
pushf
loope
ss
mov
sbb
stc
jne
xor
or
rorl
test
dec
xor
stos
call
mov
int
inc
and
mov
pusha
push
dec
and
inc
fistps
int
je,pn
fwait
in
ja
adc
jb
jecxz
dec
pop
mov
imul
mov
cmpb
inc
outsb
bound
clc
aas
add
cmp
aaa
mov
les
shlb
xchg
hlt
cli
js
bound
mov
pop
sub
in
std
scas
add
jne
sub
mull
clc
pushf
lea
push
out
cli
push
cmc
cmp
fldt
or
push
sahf
jne
jmp
push
lea
out
add
imul
in
and
daa
or
lret
test
xor
movsb
or
sub
insb
insb
sub
pop
and
cli
shr
pop
in
pushf
outsb
testb
push
mov
xchg
les
incl
mov
or
adc
lea
ret
out
shrl
pop
icebp
cmpsl
sub
fcmovne
cmp
cmp
sub
push
pop
and
scas
ljmp
add
shrl
cmp
xor
dec
mov
push
inc
pushl
out
gs
cmp
sahf
out
mov
ds
add
lods
outsl
jnp
xchg
out
push
cli
roll
mov
push
mov
icebp
mov
and
daa
lret
jne
mov
mov
sbbb
mov
xchg
jp
push
xchg
mov
add
loop
push
dec
fs
mov
adc
xchg
sub
add
int3
adc
sub
ret
mov
mov
xchg
mov
lret
sub
cwtl
or
mov
arpl
sub
pop
jae
cmpsl
and
cld
aad
addb
sti
mov
push
xchg
xchg
push
popa
sbb
pop
add
mov
push
mov
mov
push
dec
inc
repz
addr16
xor
fstl
fiaddl
sbb
push
or
bound
cld
stc
cmpsb
cltd
add
sub
stc
lea
pop
repnz
dec
adc
pop
mov
mov
dec
adc
insl
jge
and
mov
xchg
mov
lods
int3
push
fs
into
mov
push
test
dec
fwait
clc
jge
addr16
xlat
cs
test
repz
loop
int
xchg
mov
mov
pop
js
idiv
in
and
pop
add
bound
loope
cmp
mov
adc
lret
pop
or
or
push
inc
sahf
fdivrl
cmp
pop
sub
inc
testb
insb
fsts
out
imul
pop
or
dec
sub
fildl
sbb
das
add
sub
and
pop
jle
ret
imul
xchg
ret
bound
push
pushf
in
mov
xchg
xlat
cmp
scas
ja
sbb
lods
ss
jge
mov
lret
iret
mov
add
stos
aam
int3
push
push
sbb
popf
inc
ret
xchg
xor
and
adc
jns
push
mov
cmp
jle
or
jne
pushf
pop
jmp
adcb
dec
fistpl
jo
jb
inc
sub
push
dec
fwait
sahf
sbb
loop
push
in
dec
mov
and
lret
inc
movsl
and
mov
jae
scas
clc
std
test
jnp
in
add
xorb
lcall
jp
add
std
lret
jge
imul
jmp
pop
jle
add
cmovo
add
loopne
mov
adc
aam
aas
pop
mov
pop
aaa
cs
ret
pop
repnz
popa
rcrb
lods
add
inc
fimull
cmp
add
jp
lret
jno
mov
repnz
mov
clc
popa
aas
test
sub
mov
daa
sbb
push
lock
push
add
xchg
inc
or
test
loop
mov
pop
push
jg
mov
bound
pop
inc
mov
imul
xchg
cs
bound
sarb
dec
dec
push
jns
push
sbb
mov
mov
or
xchg
mov
int3
push
sub
mov
pop
and
mov
repz
push
push
pop
cmpsb
sbb
or
test
mov
xor
in
jg
push
jne
scas
roll
jg
pop
sar
push
in
push
stos
aam
fstpl
nop
repnz
jne
mov
mov
lahf
ja
jnp
popf
dec
xchg
in
imul
adc
pop
push
mov
shll
and
out
inc
lret
negb
sbb
negb
inc
xlat
sbb
dec
push
insb
leave
jbe
enter
or
cmpxchg
pop
lcall
mov
mov
xchg
push
test
mov
icebp
jmp
push
cmpl
jecxz
dec
xor
dec
mov
lret
jecxz
stos
xor
test
ret
and
mov
loop
enter
test
adc
xorl
jecxz
scas
shrb
aaa
push
mov
pop
inc
xor
mov
or
aam
imul
cmp
mov
and
rcrl
pusha
mov
rorb
mov
inc
ds
push
adc
xor
pop
bound
or
xor
divb
popf
sahf
fidivrs
sahf
loope
out
ds
lods
mull
xlat
js
fmul
inc
repnz
stos
fstpt
add
and
mov
js
popa
push
jb
repz
popf
stc
pop
inc
cmc
mov
icebp
jecxz,pn
add
jecxz
in
jbe
pop
sbb
in
dec
xor
lret
mov
cli
push
or
aam
adc
repnz
cltd
mov
iret
push
fdivp
call
dec
test
dec
jge
movb
pop
cmpsl
xor
push
inc
xchg
dec
ljmp
jbe
pop
add
inc
jbe
push
outsl
and
in
jle
shll
jno
psubusb
cltd
push
hlt
and
vphaddwq
cmp
mov
inc
dec
sub
jne
hlt
mov
push
pusha
or
rsqrtps
shlb
das
loopne
stos
xor
in
mov
aam
outsb
inc
and
mov
sub
cli
mov
dec
mov
fcompl
or
sub
mov
sarl
icebp
pop
popf
push
inc
imul
imul
shl
pop
add
pushf
shlb
fidivl
imul
gs
imulb
add
jns
shlb
mov
add
sub
ljmp
and
and
repnz
test
clc
movsl
addb
push
xchg
cmpsl
lahf
movsl
add
xor
outsb
and
lock
insl
loopne
shlb
xor
inc
aas
cmpl
les
jne
fwait
mov
call
mov
mov
jmp
xor
je
cmp
lods
add
jo
das
add
mov
adc
mov
movlps
jmp
bnd
lcall
mov
ret
xor
jno
imul
movsl
fdivs
repz
pusha
inc
dec
pop
lea
mov
pop
sub
pushf
int
lahf
pushf
cs
lods
add
lods
insl
stos
xor
or
cmc
lds
daa
cmpsl
cmp
mov
les
jge
stc
mov
cli
loope
ds
and
shl
cmp
pop
hlt
mov
sbb
add
xchg
xchg
sbb
jp
mov
inc
xor
inc
mov
or
aaa
ret
and
jg
aas
fldt
lods
lods
xchg
cmpsb
out
jmp
addr16
aad
fidivrs
leave
loopne,pt
loop
xor
clc
orb
push
fwait
call
inc
bound
jo
push
add
imul
or
xor
sbb
adc
ja
mov
push
sti
rol
inc
cwtl
sahf
out
imull
stos
int
jo
ret
inc
push
push
call
and
addr16
jae
add
sti
out
sub
pop
dec
fstps
add
sub
xor
inc
std
ss
arpl
jecxz
push
sub
shll
subl
cli
ss
mov
cmpsb
or
pop
push
or
or
push
std
out
lock
inc
adc
cwtl
movsb
ftst
js
les
jg
xchg
add
adc
jae
xchg
xchg
push
cmp
add
dec
mov
data16
xor
rorl
rclb
fdivr
popf
hlt
sub
cli
push
and
mov
test
push
add
or
rolb
ljmp
test
fmuls
mov
pop
popf
push
popa
stc
mov
mov
xor
and
lret
sub
je
stos
insb
mov
lret
inc
sbb
sbb
das
inc
push
subb
mov
adc
add
inc
cmpsb
mov
imul
xchg
call
je
mov
shlb
dec
mov
sub
jb
bound
jg
cld
in
movsb
xchg
push
sub
outsl
mov
and
sbb
in
lret
sbb
xor
jmp
jno
push
into
pushf
outsl
cmp
sti
cmpsl
dec
jmp
xor
sbb
es
push
and
sub
push
mov
mov
stos
adc
incl
cmpsb
in
scas
and
adc
jg
push
pop
addl
xchg
mov
xchg
je
fiaddl
jns
leave
add
cmpsl
adc
rorb
lahf
mov
xchg
cmc
in
inc
rcl
xchg
ss
lret
jnp
sahf
mov
pop
movsb
jnp
in
push
mov
adc
fnstenv
bound
lret
stc
pop
sti
mov
mov
loopne
sbb
pop
or
jno
sahf
rcrl
cmp
push
push
aaa
scas
xor
pop
adc
cld
push
cmpsb
pop
pop
mov
or
sub
sbb
inc
cltd
aam
andl
arpl
stos
leave
jmp
test
adc
idivb
xchg
lds
lret
push
clc
and
mov
data16
mov
inc
cmpsb
xor
push
and
push
insb
pop
in
js
inc
inc
aaa
sbb
inc
mov
sbbb
es
test
pop
addl
ljmp
aas
mov
pop
subb
mov
out
stc
mov
arpl
mov
popa
sub
movsb
mov
xchg
inc
inc
or
jmp
loopne
test
pop
sbbb
in
imul
incb
jmp
call
ret
push
mov
in
cli
ror
jmp
cld
jmp
xor
movsb
push
push
inc
sarl
cli
out
pop
pop
push
js
push
lock
je
cmc
add
pop
push
cli
sbb
imul
push
daa
sub
pop
mov
movsl
jns
ret
ja
mov
lea
mov
add
out
add
mov
pop
ljmp
adc
in
fdivrl
sti
cmp
es
cs
stos
pop
mov
dec
jae
xchg
mov
nop
sti
and
fmull
dec
mov
in
mov
outsb
or
add
insb
inc
nop
or
mov
push
mov
jns
pushf
and
xlat
mov
aam
inc
sub
inc
decl
mov
push
and
fcompl
lret
adc
roll
mov
ds
push
lahf
popa
jo
sbb
cmpsb
mov
adc
cmpsb
jle
jg
cmp
or
xlat
lcall
mov
popa
gs
pop
std
inc
insb
add
xchg
ret
push
test
mov
push
int3
mov
sbb
fdivrp
ljmp
inc
arpl
dec
or
cmpsl
sahf
stc
push
xchg
in
sub
mov
mov
lock
int
dec
sub
add
outsb
mov
xchg
jbe
fldcw
fwait
call
jbe
mov
or
xchg
sahf
pop
jns
movsb
insl
mov
mov
inc
imul
pop
cs
push
sbb
jmp
mov
mov
fdivl
mov
loop
sub
test
aad
cmp
imul
into
sbb
mov
or
mov
mov
dec
lcall
stos
pop
xor
inc
xlat
lea
test
inc
mov
mov
pop
ds
icebp
repnz
aas
inc
je
je
pop
xor
jg
xor
nop
aas
leave
pop
jnp
inc
and
mov
loop
sub
sbbb
sub
jp
nop
int3
jne
pop
fucomp
mov
sarl
adc
ljmp
insl
cmpsb
jae
test
ds
rcl
outsl
imull
adc
push
cmp
mov
es
cmpb
pusha
jle
mov
popa
inc
rolb
sahf
sub
adcb
push
mov
int
dec
loopne
pop
inc
push
inc
les
fdivrs
js
mov
pusha
je
testb
xchg
addl
xor
lods
mov
loope
mov
test
sub
sti
dec
adc
xor
jbe
pop
mov
jbe
push
push
pop
movsl
and
or
addr16
and
jle
jno
dec
push
out
mov
mov
jne
imul
ljmp
mov
fdivrl
add
outsb
stc
add
cmpsb
sub
dec
sub
repnz
testl
sub
push
sub
ja
xorb
addr16
mov
pop
push
movsb
dec
pop
dec
leave
loopne
push
sbb
and
int3
cmp
jo
xor
or
add
shrl
xchg
stos
mov
in
das
shr
iret
mov
mov
fdivrl
xchg
jns
mov
out
insb
insb
mov
push
fnsave
xchg
fiadds
sbb
aaa
and
sbb
jp
arpl
dec
lock
mov
push
orl
fnstcw
mov
pop
test
inc
xor
test
sub
movsl
ficompl
add
fbld
pop
xorb
cmp
and
es
test
dec
cmp
xor
loop
jge
mov
add
fimuls
test
test
dec
jnp
inc
sub
xchg
subb
xor
lods
je
xor
fs
les
xchg
jae
mov
adc
jg
pusha
loope
mov
aaa
xchg
add
cld
cltd
mov
add
cltd
pop
and
jne
in
leave
add
outsb
cmp
adc
lea
cmp
add
sub
mov
jae
xchg
jge
jg
pop
loopne
jns
out
push
in
jl
addr16
in
fcmove
jg
add
adc
sbb
leave
sub
cmp
dec
mov
inc
xchg
xor
jns
daa
lods
lods
ror
lret
add
jle
dec
jmp
or
mov
sbb
popa
outsb
or
push
xor
loopne
xor
fiadds
test
testb
push
adc
inc
jbe
cld
dec
cltd
xor
cmp
and
pop
push
clc
ljmp
push
xlat
dec
lock
mov
or
ret
push
pop
mov
es
icebp
fdivrl
xchg
in
inc
mov
xchg
jno
out
mov
popa
shlb
fldz
mov
jns
or
scas
cmova
xchg
bound
pushf
ljmp
jnp
into
stc
push
sbb
jl
xchg
nop
repnz
popa
mov
lea
icebp
data16
jmp
adc
xchg
mov
outsl
xchg
mov
lahf
ljmp
sbb
fnsave
push
xor
mov
cli
adc
xchg
stos
insl
neg
ffreep
bound
xor
pop
jl
mov
sbb
sub
cmp
int
pop
mov
fstps
mov
jl
push
pop
mov
stos
fisttps
pop
inc
cld
cmc
lds
ds
xor
lods
cmp
in
pop
out
and
lea
push
inc
jmp
xor
adc
lods
pop
xchg
mov
mov
mov
stos
push
dec
scas
xchg
sti
jge
cwtl
ds
pushf
ds
iret
and
or
or
mov
mov
in
hlt
mov
sbb
dec
daa
mul
cmc
add
xor
paddq
mov
inc
ss
aad
int
or
sbb
adc
sbb
js
and
cli
into
inc
xchg
pop
or
clc
outsb
push
mov
std
jmp
jnp
push
sbb
das
push
icebp
add
fnstenv
jmp
push
out
fs
into
pop
xorl
mov
in
push
repz
sub
add
xchg
lods
dec
es
cmp
in
das
test
fldcw
xchg
clc
mov
lds
lods
fcmovnb
push
cmc
jmp
ret
insl
cmp
push
pop
dec
rcrb
arpl
lock
pop
ljmp
aaa
sub
and
fnstcw
mov
sub
imul
xor
call
adc
test
jns
fldl
add
lea
push
and
out
jle
push
out
pop
mov
push
mov
mov
sbb
and
les
stc
fs
dec
fsubl
xorps
in
push
jb
jnp
adc
popa
jmp
sub
push
cltd
jl
cmp
push
idivb
adc
mov
or
cld
mov
jnp
mov
test
xor
jg
jae
out
stos
insb
push
js
out
imul
push
xchg
aam
push
fwait
das
incl
mov
jno
jno
dec
mov
mov
loope
sbb
adc
outsb
scas
mov
sarb
negb
popa
jb
push
sbb
push
xor
jb
cmpsb
jg
sbb
cli
lahf
dec
adc
inc
mov
sbb
in
repnz
inc
mov
mov
loopne
pop
mov
out
or
loope
hlt
jle
and
scas
loopne
fstpl
orl
add
insb
cmpl
fs
adc
xor
iret
fucom
sahf
adc
jmp
hlt
mov
xchg
mov
sub
repnz
fwait
xchg
xchg
popa
xor
cmpsb
rorb
imul
pop
lds
or
dec
scas
or
outsl
clc
addl
adc
test
mov
cmc
xchg
sysenter
mov
lcall
repz
xlat
jp
mov
aad
mov
mov
cmpsl
aam
mov
dec
mov
ds
push
lea
cld
mov
sub
mov
in
mov
aam
sub
punpcklbw
imul
xchg
test
les
adc
adc
xor
in
imul
xor
inc
cmp
in
add
mov
lret
jg
jnp
les
adc
arpl
fcompl
fadds
pop
loop
or
rorb
pop
mov
roll
icebp
sub
mov
mov
lock
ret
dec
fwait
xchg
out
rol
fisubs
add
pusha
cmp
mov
sahf
pop
xchg
push
mull
mov
mov
mov
mov
aaa
sbb
push
cmp
out
imul
or
vcvttsd2si
xchg
jns
sub
pop
mov
xchg
mov
inc
jp
pop
push
xchg
add
mov
add
imul
mov
ret
push
mov
dec
in
sbb
pusha
ret
ret
inc
adc
push
and
xchg
jg
popl
mov
out
jbe
xorb
lods
sub
inc
and
pop
adc
outsb
xor
lods
inc
cmp
add
xchg
sbb
int3
aas
lahf
scas
mov
sub
jno
push
jne
xlat
insl
cs
mov
jnp
mov
cmp
adc
pop
dec
xorb
jb
mov
cs
gs
outsb
in
adc
pop
movsl
pop
fisttpl
pop
jne
push
popf
mov
sbb
or
aaa
mov
and
nop
mov
adc
test
ret
inc
int
dec
scas
imul
xchg
mov
push
fsubl
stos
inc
icebp
xor
jmp
or
lret
imul
xor
stc
fstps
cmp
scas
mov
add
not
mov
inc
pop
cmp
sub
fstpt
inc
pop
leave
dec
pop
dec
testl
outsb
and
jmp
in
pop
fstps
adc
imul
xor
mov
dec
clc
std
push
test
add
outsb
cmp
fcom
arpl
adc
cmp
dec
mov
pmaxsw
push
xchg
daa
dec
mov
insb
scas
xor
mov
mov
jns
jb
arpl
pusha
add
lret
or
cmpsl
and
sarb
sbb
sbb
jo
cmp
int
iret
jb
cmpsb
pop
lock
mov
pop
jb
adc
jae
adc
shl
jbe
xor
jb
cmc
pop
cld
xchg
dec
dec
cmpb
outsb
pop
loop
pop
jno
out
xor
or
mov
in
cmp
outsb
add
fwait
xor
cwtl
xchg
cmp
imul
fdivs
push
scas
or
ret
add
je
mov
mov
mov
imul
jmp
sbb
enter
daa
mov
out
lret
xor
mov
add
rol
loop
xchg
addb
imul
aas
flds
mov
cmc
ja
mov
lret
test
or
gs
xchg
aam
pop
lock
dec
aaa
mov
aam
fs
add
repnz
cmp
cmc
sbb
and
cmp
fucomp
adc
hlt
jle
enter
sub
mov
test
xchg
rorl
test
pusha
mov
das
mov
lret
sbb
mov
and
fisubrs
movsb
push
adc
lock
in
sub
arpl
cmp
fidivrl
push
cmp
imul
lahf
or
addb
sahf
loop
jnp
xor
sub
push
or
jle
or
scas
gs
leave
mov
mov
fadds
sbb
mov
outsl
roll
push
and
xchg
mov
push
dec
popa
jae
fistpl
xor
scas
and
test
pop
aad
outsl
nop
icebp
sbb
xlat
imull
mov
xchg
cmp
mov
fidivs
and
int
stos
xor
insb
nop
xlat
and
mov
and
pop
mov
and
jb
or
xchg
ja
jnp
mov
scas
jae
sbb
or
ds
call
sbb
xchg
lea
rcl
ss
nop
add
xchg
xchg
mov
push
sti
and
scas
js
std
popa
dec
in
xchg
aaa
pushf
xor
scas
je
mov
pushf
out
fisttps
ficoml
pop
pop
push
fistl
call
or
loop
dec
shll
inc
cltd
test
pop
je
sbb
xchg
sahf
subb
mov
stc
cltd
and
sbb
add
mov
enter
fcmovnu
jecxz
cmp
repz
jne
sub
pop
cmc
and
sbb
je
dec
repnz
fcoml
pop
ljmp
xor
mov
sub
mov
add
inc
in
enter
sahf
push
sbb
jbe
push
js
or
sbbb
jl
add
shll
sub
and
icebp
loopne
cmp
sub
stos
push
sbb
rol
jl,pn
and
out
cwtl
add
xor
xchg
pushf
iret
inc
jb
fistl
mov
outsl
mov
bound
cmp
jnp
daa
dec
call
jb
sti
dec
or
dec
cli
rcl
mov
jno
loop
cmp
sub
jp
xor
daa
andl
clc
inc
jnp
sbb
imul
fsubr
mov
jecxz
jecxz
inc
scas
push
fisttpll
rcll
adc
ja
jl
out
lahf
jb
pop
test
inc
inc
shlb
shll
cmc
xchg
in
sbb
pop
cmc
insb
imul
cmpsb
pop
ljmp
divb
in
cmp
pop
push
sub
push
in
ret
sub
jbe
loop
les
add
jmp
outsl
mov
into
cmp
out
rcrb
lods
xlat
cmpsl
add
mov
add
pop
push
scas
pusha
popf
mov
call
test
aas
gs
adc
cmp
jmp
ds
add
sub
mov
jp
sbb
mov
repz
mov
out
test
cmpb
out
and
mov
outsb
inc
cmp
pop
xor
flds
or
dec
dec
sub
cmc
xchg
popf
push
cmc
or
add
mov
data16
mov
xchg
pop
lret
or
movsb
mov
mov
mov
mov
shl
sbb
stc
into
and
repz
loop
filds
mov
mov
or
cld
inc
roll
pop
sarb
jb
push
push
push
rcrb
or
and
or
jge
jb
mov
fcomps
mov
stc
test
mov
mov
cmp
push
xchg
cwtl
lods
inc
fstl
lcall
icebp
push
loope
aaa
cmc
popf
sub
idivb
push
push
and
and
cli
pop
je
push
cmpl
or
mov
jae
adc
sbb
lcall
dec
cmc
int
xchg
xchg
xor
or
xor
pop
punpckhwd
and
pop
xchg
cwtl
subl
xor
scas
bnd
mov
iret
and
and
cmc
pop
imul
push
loopne
dec
push
addl
cmpsl
js
dec
lds
lock
and
jo
push
lret
sub
jg
loop
loop
dec
jo
nop
dec
sub
jno
mov
mov
add
xor
fs
add
call
inc
mov
sub
sub
addr16
outsl
inc
push
cld
dec
sbb
aas
mov
scas
mov
in
xlat
cmp
out
mov
cwtl
xlat
xchg
lahf
stos
inc
pop
inc
adc
adc
or
insb
fnstcw
lods
mov
sbb
inc
enter
sub
jge
imul
int
clc
sub
mov
movsb
ret
mov
aad
out
in
fwait
mov
xor
rcll
pop
stc
es
mov
sub
dec
jnp
stos
loopne
invd
dec
fs
mov
outsb
test
ljmp
stos
sbb
imul
out
add
sub
and
and
or
mov
scas
clc
aaa
or
and
and
sti
fs
pop
cli
xchg
mov
dec
mov
popf
fxch
leave
into
ds
mov
sub
sarb
mov
push
mov
jle
repz
mov
push
dec
xchg
cmp
adc
sbb
xlat
push
std
add
cld
push
jl
cmpsl
xchg
jno
scas
insb
bound
push
pop
nop
loope
outsb
test
mov
inc
sbbb
jo
das
xor
sub
add
adc
movsb
bound
mov
dec
sub
test
xlat
and
incl
mov
xchg
push
lods
icebp
jecxz
jg
add
inc
and
aad
pop
hlt
out
lcall
das
dec
pop
push
mov
cmc
mov
test
jge
rcll
sar
xor
cwtl
lods
push
imull
inc
je
pop
test
push
rorb
pop
jno
mov
adc
dec
pop
in
xchg
sbb
shr
int
add
clc
rcrl
into
mov
popa
pop
icebp
jmp
push
adc
add
mov
fstpt
inc
outsl
sbb
sub
ss
repnz
aaa
inc
jl
stos
mov
mov
int3
mov
inc
jo
daa
sub
or
movsl
mov
ja
int
cmpsb
inc
mov
addr16
cltd
mov
dec
dec
dec
push
rcr
lcall
jae
sbb
stos
xchg
or
inc
lods
adc
lret
fwait
inc
ss
pushl
sub
pop
test
jns
xor
jmp
insl
pushf
adc
cltd
in
adc
cmp
sbb
jne
nop
fs
aas
pop
cmp
xchg
xchg
mov
movsl
cmp
sbb
sahf
dec
lods
out
stos
pop
in
mov
xchg
clc
xchg
dec
cmpsb
int3
adc
cmp
jmp
sub
mov
xchg
fstl
shrl
pop
jae
dec
sahf
adc
std
mov
mov
xchg
push
push
and
jae
jle
aaa
test
jb
movsb
loope
arpl
aas
jno
fadd
outsl
pop
xchg
or
aas
out
dec
dec
gs
inc
mov
ljmp
xor
jbe
and
pop
pop
loope
push
sbb
in
or
sub
jo
or
jg
test
lret
outsb
int
bnd
iret
ljmp
loopne
cmp
mov
lret
mov
or
out
shlb
int3
adc
jnp
inc
mov
in
ret
cmp
stos
push
mov
inc
lret
cmpsb
xchg
sbb
dec
sti
outsl
xchg
fiadds
sbb
mov
cmpsl
push
rol
mov
dec
mov
pop
inc
add
add
mov
movsb
orb
movsb
jmp
jns
mov
idivb
sahf
sbbl
lcall
push
scas
packssdw
cmc
pop
xor
arpl
outsl
cmpsl
cmp
subb
xor
stos
lcall
jne
push
test
inc
sub
cltd
icebp
std
and
repnz
clc
dec
pop
popa
arpl
mov
sarl
ss
add
dec
testl
mov
sahf
xor
cli
mov
sub
pop
shrb
add
inc
sub
jbe
dec
push
mov
mov
dec
shrl
dec
pusha
movsb
mov
mov
jae
and
push
and
out
mov
jecxz
sbb
imul
outsl
sub
xchg
cltd
jg
mov
push
dec
rolb
sar
and
mov
lock
inc
cmp
push
mov
ja
jae
pop
repz
or
int3
push
into
add
or
int3
xchg
mov
lret
pop
jo
xchg
mov
adc
mov
sarb
xor
and
mov
push
mov
cmpsb
push
outsb
mov
push
lock
adcb
xor
mov
dec
pop
or
fcoml
out
dec
inc
xchg
aas
out
mov
cmpsb
dec
inc
jp
dec
mov
in
xor
rol
cli
ds
sbb
out
loope
ljmp
pop
push
jb
int
stc
sbb
mov
aam
lret
mov
mov
or
jae
sbb
jmp
jb
mov
or
fsubr
cmp
loopne
ffreep
scas
jl
xchg
ja
inc
cmp
mov
sub
cmp
aas
sahf
add
fistpll
loope
jecxz
mov
cmovne
aas
aaa
sbb
mov
cwtl
mov
dec
mov
mov
fwait
pop
scas
dec
out
insl
cmp
mov
mov
adc
fistpll
shll
testb
outsb
ds
pop
mov
pop
shr
mov
push
pop
rorb
push
ja
aas
cmpsb
jg
gs
jae
mov
popl
xor
mov
cmp
ja
mov
outsl
mov
mov
sahf
hlt
mov
aam
adc
scas
stos
jo
out
lcall
fxch
sbb
push
fstp
or
scas
rol
int3
xor
add
push
cmpsb
mov
das
pop
sub
sbb
xor
and
lret
xor
xchg
jbe
adc
mov
sbbl
push
and
loop
mov
sbb
pop
dec
js
lock
xor
inc
inc
push
cmp
fnstcw
int3
scas
jp
and
add
std
loopne
lods
ljmp
and
outsl
enter
cmc
xor
imul
or
ret
mov
lods
leave
loopne
lds
data16
test
or
popf
movsl
andb
aad
or
push
shll
imul
pop
xchg
jmp
xchg
mov
test
push
push
lea
jecxz
iret
cmp
xchg
xor
or
fildl
lock
cmp
mov
mov
push
add
cmp
pushf
rorl
push
xchg
jg
out
enter
repnz
push
out
sub
xchg
jmp
nop
mov
mov
xor
outsl
jge
mov
stos
repnz
hlt
in
lcall
push
xor
dec
nop
aaa
xor
cmp
test
das
add
xchg
adc
mov
fimuls
jg
dec
cli
mov
jno
fstpt
or
dec
mov
or
add
mov
xorb
js
push
mov
xor
cltd
sub
inc
jmp
lock
sub
aaa
push
enter
pop
mov
add
sbb
call
sti
repnz
mov
push
jo
or
fs
mov
mov
arpl
pushf
mov
cli
iret
outsl
ja
xor
mov
dec
xchg
clc
sub
pop
lods
cld
daa
or
dec
mov
rcll
mov
xchg
pushf
or
shlb
insb
stos
xchg
xor
outsl
loopne
out
sbb
inc
xlat
loope
jmp
or
loop
mov
xchg
add
shr
wbinvd
mov
sbb
cli
sti
mov
cwtl
and
adc
add
sub
lret
clc
push
inc
in
shlb
or
adc
push
add
jmp
mov
jnp
xor
mov
and
fistps
xchg
cmpsl
sbb
sti
lods
fs
mov
in
popa
ja
jne
mov
data16
mulb
clc
gs
add
ret
cltd
dec
adc
test
roll
cmc
stc
aas
repz
xchg
bound
jnp
outsl
push
ret
stos
jl
fimull
mov
lds
scas
test
push
add
pushf
pop
mov
fs
andl
jo
fidivrs
out
cmp
lahf
or
int
pusha
mov
cld
les
jecxz
mov
jge
mov
adc
clc
add
push
ret
mov
imul
into
cs
mov
and
xor
pushf
fdivrl
shll
test
pop
mov
iret
mov
fmuls
inc
fsubrl
shrb
adc
and
cmpsb
xor
mov
mov
outsb
mov
or
pop
call
daa
mov
sahf
ret
jno
loopne
adc
mov
fimuls
fiaddl
ljmp
rcrl
icebp
or
add
push
cmpsb
dec
pushf
add
sub
sti
fs
and
inc
std
mov
sub
jb
push
xor
xchg
stos
adc
cli
out
lods
cltd
sahf
xchg
mov
mov
ljmp
insb
jle
mov
dec
lock
and
cmp
mov
inc
sar
andl
lock
int
mov
popf
inc
in
lahf
lock
mov
das
mov
inc
mov
pop
push
inc
mov
push
fdivrp
or
jmp
mov
adc
popa
mov
mov
add
cmp
aad
adc
xor
data16
xlat
sbb
mov
iret
jo
add
inc
sbb
and
loop
dec
add
subl
sub
movsb
adc
insl
addr16
mov
xor
test
sbb
jl
inc
js
push
dec
or
xchg
mov
jge
pop
orb
pop
lret
push
outsb
enter
imul
add
repnz
mov
in
add
lods
sahf
pop
or
bnd
fistpl
sbb
loop
sti
loop
xchg
mov
dec
inc
mov
or
push
out
jmp
mov
pusha
fisubrs
fsub
adc
scas
sub
xchg
xchg
int3
subb
add
stc
mov
lret
into
nop
or
lds
mov
bound
sbb
lock
cltd
in
divb
mov
fbstp
sbb
sbb
adc
xchg
je
cld
dec
cmc
lea
sahf
push
sbb
lock
inc
pop
mov
xacquire
xchg
dec
xor
sbb
pop
inc
push
cmpsl
xchg
xchg
scas
in
lret
push
fimull
add
cld
mov
and
adc
sbb
call
les
popa
sbb
faddl
xor
lods
sbb
pop
xor
sbb
cli
and
mov
dec
mov
cmp
sarl
pushf
int3
in
fs
xchg
clc
addr16
repz
push
lds
scas
cs
mov
or
or
add
mov
popf
test
dec
fs
aam
or
sub
ss
pop
lds
push
mov
lods
xor
mov
movsb
mov
cmp
negl
roll
mov
cmp
testl
imulb
xchg
aad
aas
ret
sti
data16
jno
push
xchg
pop
jno
cmp
pop
cmpsb
xlat
xor
je
jb
push
movnti
sbb
and
pop
xchg
rolb
and
data16
mov
cmp
mov
sbb
xor
mov
mov
adc
daa
subb
jns
pop
mov
lds
out
push
cmp
aaa
jnp
pop
push
xor
mov
push
dec
incl
mov
int3
lcall
imul
cwtl
jae
xlat
xor
cmp
scas
and
jmp
jbe
lds
lcall
dec
dec
add
les
inc
pop
stc
push
sahf
ja
sahf
cmpsb
js
test
insl
push
rcll
sub
or
sub
push
insb
sub
shrd
dec
sub
out
dec
lahf
cmovo
cmpsb
lods
cmp
sbb
cld
dec
fs
je
jecxz
or
adc
enter
incb
xchg
inc
mov
call
inc
aas
xchg
xchg
mov
ljmp
outsl
dec
add
cmp
lcall
out
pop
add
sti
dec
fcompl
jmp
pop
mov
and
jecxz
xor
mov
cmp
imul
shrb
cmpsb
aaa
xchg
sub
add
jnp
lds
cwtl
pop
xchg
xor
inc
std
xchg
cs
xor
cmp
cmp
movb
push
add
and
or
sarl
jmp
push
fwait
push
mov
xorb
jmp
stos
or
das
and
fs
rcrb
xchg
mov
push
inc
inc
shll
mov
insl
push
stc
or
test
es
adc
sub
loop
jmp
and
push
pop
mov
sbb
data16
dec
adc
aas
inc
hlt
mov
mov
xchg
mov
jnp
incl
ljmp
jo
fcomps
xor
mov
loope
jae
pop
xchg
loope
rcll
xlat
pop
mov
jmp
pop
int
jo
rcrb
push
aad
mov
aaa
cmpsl
xchg
or
mov
ret
jl
outsl
jns
and
scas
push
ret
iret
lods
nop
mov
sbb
jno
pop
sbb
maskmovq
imull
daa
dec
add
test
lea
push
hlt
mov
inc
imul
jecxz
mov
cmove
adc
inc
add
divl
ret
cmpsl
repz
shrb
flds
rcrl
and
sbb
push
or
add
sahf
push
pop
xchg
fnsave
icebp
data16
xchg
subb
and
test
fildl
mov
xor
sarb
es
and
and
das
jb
repz
push
sbb
dec
ret
inc
repz
cli
jge
pop
jg
mov
inc
popf
mov
loopne
addl
ffreep
mov
sbb
pop
insb
xlat
xchg
add
jo
mov
out
and
or
movsl
iret
fsubl
sarb
rorb
push
lahf
fdivr
push
std
clc
ret
iret
mov
or
mov
test
sub
xchg
lds
pop
aam
adc
call
or
mov
fs
outsb
push
lret
out
pushf
xchg
push
inc
popf
jae
pop
mov
cmp
insl
fdivs
sub
dec
test
pmulhw
test
std
sub
sub
inc
inc
or
enter
out
pop
and
lcall
shll
add
sbb
fisttpll
ljmp
test
lcall
push
stc
xchg
jnp
test
faddp
loope
ds
loop
ljmp
mov
adc
je
sub
mov
pop
fdiv
out
rcll
leave
call
push
aam
arpl
xor
lock
mov
fildll
imul
arpl
stos
cwtl
mov
xor
xor
jae
jb
mov
adc
jbe
adc
pop
inc
into
pop
test
inc
icebp
gs
mov
sbb
or
ss
push
mov
mov
subl
sahf
movsl
cmp
pop
popl
sbb
stos
mov
push
decb
fcomi
dec
subb
ret
cmp
ret
stos
add
lret
dec
adc
mov
arpl
xor
and
pop
test
leave
adc
divb
iret
sahf
and
lods
lcall
js
iret
lock
and
jmp
cltd
pop
outsl
idiv
mul
pop
in
push
stc
stc
insb
push
out
and
jns
mov
add
fimull
cwtl
jp
pop
or
mov
lahf
inc
sub
out
fistl
sti
scas
xchg
stos
loop
aad
dec
cs
clc
lock
mov
addb
push
mov
adc
pop
icebp
cwtl
add
add
popa
lahf
lahf
repz
stos
sub
stc
sti
jnp
pusha
popa
in
repz
ficomps
out
or
sub
add
fistps
dec
rolb
xchg
xchg
or
out
pop
pushf
dec
cmp
std
mov
shll
cli
push
les
xor
out
lds
fs
and
fisttpl
jl
xchg
pusha
or
loopne
cmp
loopne
and
mov
xchg
ljmp
xchg
imul
sub
leave
push
rcrl
cmpb
imul
testb
pusha
mov
add
inc
shrl
push
sarb
xor
in
adc
nop
dec
or
inc
mov
inc
clc
mov
test
xchg
xor
mov
or
fistpl
push
aam
mov
jmp
lds
xor
lret
aas
shrl
rcrb
dec
xchg
push
mov
aas
and
jbe
cmp
sub
fcompl
jl
cwtl
push
xor
mov
insl
dec
inc
aas
push
ds
mov
sti
pusha
mov
imulb
fnsave
stos
push
add
cmc
push
cmp
or
loop
lret
cltd
pop
je
enter
xchg
subb
push
mov
pop
cmpsl
sbb
xchg
jae
xor
cmp
jmp
xor
xchg
sbb
jg
je
fisttps
jle
lock
mov
leave
fnsave
idivb
out
mov
aas
stos
adc
cltd
inc
movl
push
push
mov
mov
jne
int3
mov
aad
push
push
adc
pop
stc
fcomps
xchg
pop
inc
and
pop
aaa
outsb
jl
push
ljmp
mov
stc
push
mov
xor
pop
mov
cmc
inc
cmp
lods
sti
jbe
lock
cmpsb
cmp
and
xor
mov
pop
cmpsb
aad
mov
push
mov
inc
out
lea
das
fisttpll
xor
fcoml
pop
nop
lods
bswap
loop
in
xchg
mov
mov
ret
stc
fdivl
test
push
mov
ret
movsb
xchg
je
push
stc
xchg
mov
mov
push
inc
jb
shll
add
std
mov
je
sahf
mov
inc
ss
aam
sub
cs
xlat
arpl
push
xor
lods
jo
or
push
loopne
dec
xor
popf
lea
jnp
adc
in
sub
xchg
lret
mov
mov
insl
pop
pop
push
movsb
flds
or
dec
sbb
or
loop
push
pop
sub
adc
ret
mov
xlat
and
add
sbb
out
add
in
sbb
test
out
sub
jmp
lea
or
cmp
mov
fdivr
loopne
add
incl
mov
xchg
adc
jae
mov
jnp
jp
cmp
mov
xchg
loopne
out
jg
into
cs
jns
cmc
adc
rorl
mov
subl
push
je
sbb
xchg
fildl
mov
jbe
add
mov
enter
mov
fidivl
dec
outsb
dec
nop
xchg
adcl
in
sub
test
or
into
insl
mov
mov
repnz
cmp
call
push
ficoml
outsl
push
inc
xchg
or
sbb
dec
enter
sub
sub
ds
test
js
mov
rcll
ret
arpl
xor
lock
das
iret
sahf
insb
bound
sbb
pop
scas
pop
mov
sub
xchg
scas
xchg
add
sbb
mov
inc
dec
shl
mov
mov
push
iret
inc
cmp
pop
repnz
std
pop
inc
mov
pop
sub
call
aas
aas
xor
mov
or
stos
push
decb
push
adc
mov
xor
xchg
mov
nop
mov
pop
call
loop
test
mov
movsb
adc
aam
js
inc
adc
mov
test
ds
mov
test
add
fsts
mov
and
dec
xor
out
inc
xor
cli
shrb
mov
fisubrl
rcll
out
mov
mov
mov
shll
and
leave
ja
shrb
lock
sbb
jmp
test
ss
push
ss
rol
sub
inc
in
clc
xor
xchg
inc
pop
sbb
jno
jae
in
shl
xchg
jle
getsec
test
sub
mov
pusha
sbb
das
lret
rorl
test
or
hlt
repnz
jecxz
and
adc
cmp
mov
sar
out
cmp
mov
stc
pop
ss
stc
lods
mov
push
in
mov
xor
jb
jbe
out
mov
imul
aam
cmp
pop
adc
pusha
jne
out
ficompl
cltd
std
fisttps
pusha
ss
xor
xor
cmp
lahf
popf
xor
pop
mov
inc
out
je
jns
pop
movsb
and
mov
scas
inc
test
lahf
popa
pop
or
stc
jne
pop
dec
lahf
xor
sti
pop
bound
imul
mov
dec
and
xor
es
jmp
inc
imul
jo
mov
adc
push
push
rorl
or
clc
fildl
ja
xlat
mov
shrb
jne
mov
cmp
mov
and
mov
add
sub
clc
dec
push
mov
call
adc
in
mov
xchg
sub
scas
ja
dec
push
jne
test
xlat
xor
adc
leave
nop
mov
mov
out
and
mov
rorb
jp
pop
dec
divb
imul
andl
sub
arpl
sub
pop
push
lods
les
xor
stos
rorb
cmp
mov
pusha
push
inc
in
sbb
cmp
lock
cmc
pop
cltd
fsub
decl
jp,pt
xor
jae
or
push
cltd
xchg
outsb
test
jl
jmp
cs
out
iret
pop
bound
nop
mov
xor
push
and
mov
fs
rcll
mov
test
aas
fcoms
orb
mov
jno
fadds
nop
dec
sub
inc
sahf
add
fs
adc
loopne
inc
pop
nop
sbb
and
mov
dec
jge
xchg
push
rcrb
mov
cmpsb
pop
sbb
leave
pop
xor
mov
mov
xor
test
mov
sbb
xor
outsb
gs
mov
sbb
add
testb
int
push
hlt
daa
adc
repz
movsl
ret
adc
cmp
adc
mov
mov
mov
xor
std
jge
imul
lret
cltd
fsubl
mov
pop
push
fldt
cmp
sbb
leave
loopne
test
loop
adc
cmpb
sbb
cmpsb
and
push
mov
push
dec
mov
pop
xor
and
push
mov
mov
sub
nop
add
loopne
add
cwtl
mov
loopne
sbb
test
inc
in
mov
iret
cmp
dec
pop
test
mov
jmp
std
lods
sub
add
arpl
stos
pop
jo
es
inc
push
inc
cmp
ret
dec
jbe
add
xchg
sbb
cmp
scas
incb
mov
push
adc
dec
push
test
push
mov
cmpsb
mov
xlat
adc
lock
pop
push
aaa
inc
xor
scas
jmp
movsb
jne
sbb
mov
iret
push
setnp
sub
jg
dec
mov
mov
nop
insl
jl
jo
pop
in
jo
sub
pop
jmp
dec
ret
push
pop
fcoml
push
cmpsl
inc
fldenv
icebp
pop
shll
gs
fists
xchg
mov
mov
dec
pop
xor
pop
lret
jno
add
test
mov
lret
mov
add
mov
loopne
push
ret
inc
cmp
pop
inc
scas
jle
test
mov
scas
into
mov
or
add
mov
and
fidivrl
jbe
fsubrl
ficoml
inc
movsb
cmp
or
push
addr16
jno
push
add
inc
lods
inc
sub
or
mov
aam
xor
jbe
jb
lea
ljmp
cmp
int3
push
mov
inc
mov
pmaxsw
outsb
or
dec
loop,pn
pavgw
pusha
mov
pop
add
cmp
dec
push
ljmp
out
std
mov
cmp
test
cmpsl
loopne
repnz
test
inc
loop
out
fnstenv
mov
or
cmp
xchg
mov
inc
cmp
sub
mov
decl
inc
or
repz
lock
adc
pop
ljmp
sbb
dec
cwtl
dec
lea
push
leave
mov
adc
scas
inc
jmp
pusha
fwait
call
rcr
add
pushf
mov
inc
nop
cld
sbb
pop
dec
or
inc
imul
jnp
dec
pop
push
mov
call
jne
cld
movl
mov
add
enter
movsb
mov
jecxz
jmp
shrb
push
push
ljmp
xchg
pop
imul
cmp
into
or
outsl
mov
or
jbe
std
mov
mov
mov
mov
xchg
and
mov
inc
adc
jnp
cltd
inc
sub
inc
mov
pop
inc
dec
push
mov
add
es
jo
sti
cmpsb
std
push
mov
mov
adc
cmp
xchg
push
sbbl
out
decl
push
add
xor
adc
mov
push
or
sbb
push
xchg
in
and
sub
sbb
ret
add
adc
stc
sbb
inc
int3
sbbl
push
xor
lret
nop
fimull
sti
adc
loope
lcall
ret
outsl
or
sub
or
dec
gs
dec
enter
and
dec
cmc
add
js
xchg
pop
cmp
hlt
add
jp
jg
xchg
movsb
dec
push
cmc
pushf
inc
fnstenv
jbe
push
pushf
in
xor
and
cwtl
lock
mov
insl
sbb
lea
aaa
lods
sbb
push
mov
mov
ljmp
mov
sub
dec
xchg
shll
mov
je
clc
jbe
mov
mov
pop
pop
lods
dec
out
aad
ds
pop
cmc
mov
jg
cmpsl
pop
int3
leave
mov
dec
lods
int3
cwtl
push
mov
lcall
neg
xchg
cmp
lock
rcr
popf
inc
iret
push
sbb
out
imul
sbb
ret
data16
and
movl
cmp
shlb
or
push
int
xchg
xor
dec
ret
out
adc
pop
pop
scas
cmpsb
aaa
xchg
mov
mov
gs
add
out
adc
daa
ljmp
or
adc
sahf
cmp
mov
insl
and
adc
xchg
daa
mov
jg
out
mov
push
repz
inc
jbe
test
pop
test
inc
jae
mov
jae
pop
xorb
js
stos
or
xor
or
xchg
pop
and
inc
push
or
daa
mov
adc
adc
jne
in
sub
adc
jge
push
mov
cmp
sbb
mov
sbb
pusha
mov
addb
ja
int3
pop
in
adc
dec
outsb
jl
out
mov
fsubr
push
and
or
jge
adc
cmp
mov
cld
repz
sbb
stos
pop
jne
or
adc
inc
mov
scas
xor
adc
mov
call
cld
dec
enter
jb
sbb
mov
cmp
sub
aas
lock
or
stos
dec
pop
pop
test
xor
shlb
flds
lds
ss
je
add
test
lock
outsb
inc
rcrb
mov
cwtl
xor
mov
sbb
mov
dec
lds
int3
movsl
sbb
xchg
cmc
inc
or
xchg
dec
add
pop
xchg
and
add
xor
fnstcw
jl
cmc
ljmp
mov
into
sbb
cmp
sub
and
jnp
sbbl
mov
ret
mov
add
push
dec
pop
add
das
ds
jp
push
outsl
jbe
test
add
lea
pop
xor
push
pop
add
adc
dec
add
mov
xchg
adc
int3
jnp
inc
cli
nop
cld
ss
data16
cmp
int3
sbb
pop
test
push
jl
je
mov
jg
stc
adcb
xor
test
sub
mov
out
sub
call
jl
xchg
imul
inc
dec
popl
movsl
fmuls
lods
sti
mov
push
sbb
pop
aas
xor
ret
jp
aam
scas
jge
stos
adc
test
test
das
sbb
jne
sarl
add
mov
xor
cld
jb
clc
roll
add
je
jbe
lret
adc
xchg
xchg
jo
loopne
lods
mov
scas
out
aaa
in
and
fcompl
hlt
jbe
cmp
push
out
into
into
mov
stc
mov
jo
add
fisubrl
mov
int3
out
pop
rcrl
xor
lods
jnp
bswap
mov
adcl
das
pop
cmp
sub
cmc
xor
or
mov
in
sbb
xorl
jmp
dec
cmpsb
frstor
enter
mov
lds
ret
lahf
pop
adc
out
cld
adc
sbb
aas
ret
inc
lret
mov
jb
roll
mov
mov
jmp
stos
cmpsb
xor
popf
jg
stc
adc
popa
jecxz
fwait
mov
dec
and
jmp
inc
stos
mov
add
test
sbb
add
test
inc
hlt
fcmovu
test
add
xchg
lahf
fisttpll
loopne
movsb
mov
mov
xchg
push
add
sahf
call
mov
or
adc
loope
xchg
ds
cli
push
xorl
popa
pop
andb
jbe
in
xchg
inc
outsb
pop
lret
jge
mov
js
inc
pop
mov
or
jge
das
lods
or
fildll
jb
cltd
clc
pop
jno
push
mov
punpckhwd
rcll
adc
lahf
xor
les
or
sub
les
fstpl
pop
jbe
sbb
in
mov
pop
or
clc
lret
in
inc
inc
in
push
xor
xchg
adc
rcrl
lahf
mov
push
mov
addr16
mov
push
xor
and
mov
ret
fwait
les
xor
bound
adc
jno
pop
push
lret
mov
sub
sbb
int
cmpsb
fnsave
mov
incb
out
mov
adc
xor
testl
pop
test
ret
je
int3
cli
cwtl
sub
lret
jne
out
pop
push
mov
sti
les
pop
and
lods
mov
gs
in
pop
jae
mov
pop
daa
movsb
outsb
sub
sub
out
iret
and
mov
or
jo
pop
sarb
push
das
push
lret
add
mov
jmp
mov
hlt
dec
insb
repnz
fcmove
push
out
pushf
out
scas
sub
jmp
pop
xorb
mov
adc
fsubrs
les
stos
or
inc
arpl
cltd
xor
sbbb
push
and
insb
pop
inc
lret
loopne
in
popa
fildl
sub
push
jle
sub
xor
outsl
mov
mov
aad
cmpsb
push
mov
pop
cmp
jae
mov
mov
dec
aaa
push
enter
cmp
add
out
mov
sbb
sbb
sub
loope
mov
sbb
sub
or
jle
sbb
data16
call
fistpl
mov
jle
add
push
test
cmp
cltd
pop
cmp
fdivr
mov
sti
lsl
cltd
cmp
lods
insb
or
pop
xchg
iret
inc
jbe
repz
repnz
jl
cld
mov
jle
adc
das
dec
sbb
mov
sub
cmp
stc
sbb
add
jecxz
sbbb
xchg
pop
sbb
mov
pop
add
mov
xchg
shrb
ja
movsb
nop
les
mov
sub
mov
fcmovnu
adc
flds
xchg
jnp
ficoms
js
sahf
out
int3
andb
jle
and
mov
mov
popa
jmp
mov
fdivrs
xor
cmpl
xchg
scas
fstl
dec
repz
push
sti
lea
arpl
mov
addr16
add
je
cli
dec
imul
popf
insl
cwtl
inc
mov
adc
mov
and
gs
mov
fimuls
pusha
adc
ja
mov
xchg
xor
cmp
shrl
jle
mov
mov
hlt
jmp
xchg
mov
mov
insb
jp
mov
iret
add
pop
mov
notb
xchg
mov
jle
jae
jnp
mov
adc
pop
js
lret
xchg
mov
push
mov
push
pop
push
flds
scas
sub
push
nop
mov
pop
outsl
inc
inc
shll
rcrl
fadds
pop
cmp
xchg
adc
shlb
rcl
push
test
jle
mov
fucom
mov
ret
bound
fwait
int
inc
test
fldt
mov
out
push
out
pop
test
movsb
aad
mov
loop
cltd
jecxz
fisttps
imul
or
sub
mov
cli
scas
leave
push
test
stos
mov
popa
pop
fsubrs
les
add
std
fmull
cmp
movsb
inc
cmp
add
mov
cmp
out
xchg
add
lea
dec
push
ja
hlt
xchg
rol
insl
jge
jp
jno
xchg
les
ljmp
imul
xor
lods
mov
inc
inc
ret
sub
lock
pop
adc
xchg
pop
das
cmp
mov
push
fs
push
filds
lret
cmc
mov
nop
insb
lret
or
outsl
or
sub
and
pop
sub
dec
pop
pusha
leave
adc
int
pop
and
jb
cmp
das
clc
mov
adc
std
loope
jl
dec
inc
dec
xchg
pop
fldt
sub
inc
rcr
sbb
push
cmp
addl
push
fcomp
sub
mov
sbb
dec
pop
cltd
jne
mov
lock
push
mov
sti
add
test
or
pusha
push
and
adc
jmp
lcall
xorl
adc
sbb
lea
sarb
or
fwait
sbb
xor
push
in
fwait
xchg
outsb
mov
xchg
ds
adc
repz
movsb
sbb
outsl
sub
aam
pop
fs
sbb
push
outsw
jg
iret
or
arpl
nop
inc
mov
or
push
into
shlb
fwait
or
mov
mov
gs
inc
jbe
insb
dec
push
cmp
push
in
fidivrs
mov
ja
xchg
jp
xor
push
add
jbe
cld
std
xor
cmp
add
je
aad
or
cltd
pop
push
sub
xchg
pop
mov
pop
pop
imul
jbe
mov
adc
dec
jnp
fwait
std
fdivrs
jg
jbe
ljmp
adc
pop
cs
insl
mov
hlt
xor
out
jmp
cwtl
jns
adcb
lcall
les
dec
xor
lods
fcoms
lret
cwtl
jl
and
fdiv
inc
arpl
in
pusha
adc
jl
add
inc
fistpl
mov
fildl
jl
out
jp
xchg
clc
out
mov
repnz
jo
mov
lock
negb
mov
outsl
sbb
clc
ljmp
xchg
call
xor
sbb
iret
pusha
lahf
add
pushf
mov
int
or
sbb
jbe
xchg
out
loop
jae
mov
pop
adc
dec
or
js
adc
sbb
fstl
mov
pop
add
jne
push
pop
mov
jae
repz
xor
jl
cmpsl
jmp
out
nop
cmc
add
inc
imul
cmp
jne
lods
lea
mov
add
inc
lock
add
ret
xor
sbb
and
inc
andb
mov
dec
cmp
dec
mov
pop
inc
jb
pop
hlt
pop
call
cmpsb
lea
lahf
sbbl
mov
pop
xchg
cmc
mov
or
xor
xor
lret
add
and
fbstp
or
sub
mull
ljmp
fbld
test
add
insb
mov
xlat
cmp
mov
ret
scas
pop
cmc
or
adcb
dec
and
inc
cs
pop
add
ds
stc
sub
sbb
inc
mov
lcall
shlb
cmovno
addb
imul
sbb
inc
inc
mov
jnp
dec
ret
idivl
addb
loope
shl
xlat
push
xchg
dec
cmp
sub
xlat
fsubrs
imul
mov
test
insb
inc
cltd
pop
notl
das
cmp
aaa
pusha
out
mov
fs
or
loopne
xchg
and
cmpsb
les
push
pop
adc
divl
jo
dec
xorl
add
mov
pop
loop
bswap
add
ret
inc
adc
divb
test
test
and
push
add
lcall
pop
mov
test
call
mov
insb
sbb
pop
dec
mov
inc
jmp
outsb
and
jg
cld
or
cmpsl
jle
sub
fiaddl
xchg
add
fidivl
mov
movsl
les
out
dec
loopne
sbb
xchg
dec
jnp
jne
push
adc
sti
push
sub
mov
test
aam
push
out
add
lock
mov
fldt
mov
js
popa
ret
shrb
dec
pop
sar
sub
xor
dec
sub
pop
dec
push
sti
pop
jl
lcall
jae
pop
jge
jns
add
push
dec
pop
push
js
out
in
and
bound
jb
inc
adc
xorb
rcll
mov
pusha
mov
sbb
aaa
popf
sbb
clc
cli
dec
mov
adc
in
or
xlat
pop
sub
gs
loopne
sahf
sub
jmp
ja
lret
mov
mov
call
mov
push
ljmp
lods
stc
cmpsb
test
sti
mov
sbb
pop
jno
dec
mov
aam
pop
inc
or
insl
dec
ja
repz
out
pusha
nop
sti
mov
and
push
aad
inc
mov
mov
push
mov
inc
xchg
pop
inc
or
push
inc
in
and
sbb
test
adcb
repnz
rolb
das
mov
push
add
call
iret
aad
cmp
xchg
mov
push
arpl
test
insb
cmp
insl
inc
sbb
mov
xlat
ret
aad
in
movsb
push
sahf
mov
repnz
les
xor
cwtl
xchg
into
scas
mov
pop
out
scas
add
notl
dec
fldcw
out
gs
lds
mov
pusha
push
fdivrs
jae
mov
xchg
int3
jmp
test
push
lods
sahf
xchg
inc
mov
inc
mov
or
and
out
pop
mov
lret
call
imul
cld
fs
ljmp
push
aaa
cmp
and
cmp
inc
scas
scas
add
and
adc
wrmsr
rcrl
shrl
repz
jbe
mov
jb
shl
pop
clc
stc
stos
sbb
xor
enter
mov
xchg
mov
js
dec
ds
mov
lods
insl
pop
mov
dec
push
rcr
fnsave
fstps
sbb
push
dec
lret
std
and
pushl
and
ja
in
loop
scas
dec
mov
xchg
mov
push
jg
arpl
movb
popl
fidivl
push
hlt
movsl
es
and
inc
pop
cmp
es
push
mov
imul
pop
mov
ficoml
pushf
mov
shr
xchg
adc
shlb
pop
inc
inc
decl
fwait
xchg
rolb
and
push
push
jns
out
push
adc
pop
add
sarl
rolb
jae
dec
shlb
inc
adc
ss
mov
add
mov
je
xchg
and
int
cmp
insl
xor
roll
jg
insl
pushf
inc
ret
mov
aad
lods
adc
jg
aas
ja
bound
mov
push
dec
daa
punpckhdq
aad
pusha
stos
xor
dec
lret
lea
and
insb
inc
les
xlat
adc
inc
adc
mov
sbb
inc
pop
outsl
mov
or
jo
mov
xor
mov
nop
inc
inc
jl
int
fscale
jg
scas
aaa
inc
sub
adc
aaa
and
dec
ret
rcll
arpl
repnz
cmovs
aam
or
jnp
adc
xchg
test
cmp
push
lods
out
mov
sub
jnp
cmp
stos
out
add
movsl
cmp
outsb
sub
popf
dec
push
sub
and
je
inc
push
sahf
neg
xor
mov
rorb
pusha
cltd
pop
fnsave
test
leave
stos
mov
in
and
or
cltd
imul
int
and
je
or
or
xchg
dec
push
jmp
mov
jb
jns
lock
jae
ljmp
hlt
xchg
fldenv
dec
mov
pop
lret
and
xchg
int
pop
pop
mov
ds
nop
js
int
shll
xchg
adc
pop
cs
in
mov
xor
jo
ret
pop
das
in
push
inc
lea
inc
cmp
pop
arpl
cmp
daa
adc
push
mov
xor
xchg
outsl
lods
push
addr16
pusha
adc
mov
cld
mov
cmp
adc
fst
mov
and
cmp
cli
lods
adc
mov
pushf
mov
jb
faddl
pop
mov
cmp
test
dec
xorb
scas
and
test
fsubrp
into
mov
fildll
sbb
add
ret
and
shll
daa
ds
out
push
test
mov
xor
and
clc
dec
loopne
jmp
test
fimull
jmp
arpl
sub
inc
aad
js
rorb
je
jg
cmp
fwait
movsb
xchg
loopne
pushaw
mov
lds
dec
sbb
out
jo
aad
push
fldl
mov
enter
jmp
jmp
jno
fldt
pop
mov
mov
test
mov
xchg
dec
fmuls
mov
aaa
cmp
sub
push
sbb
loopne
jp
js
nop
mov
andl
mov
lods
push
or
jnp
js
lret
jbe
push
mov
adc
cmp
inc
ljmp
add
xor
or
sbb
xchg
cwtl
das
lahf
fisubrl
cmpsb
sbb
inc
pop
pop
jecxz
gs
jle
decl
out
adc
loop
fnstenv
jp
je
jb
shr
mov
cmp
and
sub
mov
test
inc
repnz
sti
jl
pushf
scas
in
fucomip
mov
dec
mov
jecxz
jnp
bound
cmp
jns
jl
mov
subl
sti
gs
xchg
cmp
jmp
lock
dec
push
cmp
insb
pop
test
sbb
adc
scas
jg
pushf
and
mov
mov
loope
andb
in
jo
js
int3
or
testl
fisubrs
inc
popa
cmp
xor
dec
outsb
stos
sti
and
jl
loop
or
jae
fiaddl
inc
loopne
dec
rcll
adc
and
or
mov
xchg
dec
rol
shrb
add
sub
popa
sbb
test
dec
pop
gs
enter
xchg
pusha
xchg
and
popa
xorb
xchg
arpl
mov
mov
leave
mov
mov
mov
clc
das
sub
loopne
fcmovnu
mov
push
xor
scas
push
mov
and
and
add
into
sub
lock
dec
bound
push
cmp
mov
mov
loop
mov
les
fcmovnu
jnp
sbb
cli
sbb
add
add
scas
inc
or
sbb
orb
cmp
push
scas
pop
cmpb
roll
add
shlb
and
rcll
bound
shr
add
outsb
adc
sub
test
out
cmpsb
mov
adc
dec
dec
jno
push
push
mov
push
sub
fadds
sbb
jne
cmp
gs
inc
jp
ficoms
add
int3
lods
rcr
adc
push
cmp
adc
jp
sahf
add
test
pop
jnp
push
movsb
stos
jne
stos
and
adc
jge,pn
mov
repz
gs
jle
scas
xor
daa
loop
int3
test
sbb
push
cmp
hlt
add
add
in
and
es
jnp
inc
push
decl
fcom
or
mov
movsl
mov
into
add
and
xor
data16
std
add
pop
popa
pushfw
aas
xlat
clc
int3
pushf
out
jo
fisubrl
cmp
faddl
jnp
or
dec
and
inc
mov
xor
aas
test
fldcw
push
add
inc
mov
addb
fcmovnb
dec
mov
push
bound
icebp
push
adc
lods
arpl
push
aas
add
arpl
js
cmp
ss
or
cmpsb
add
in
test
and
mov
xchg
inc
push
dec
les
inc
fdivrs
cwtd
bound
push
and
test
or
arpl
jmp
cmp
sbbl
bound
adc
aas
shrl
rol
sub
jp
add
insl
jnp
aas
test
dec
push
pusha
xchg
imul
fs
xchg
inc
push
add
jnp
jae
dec
int3
ss
add
test
imul
pop
pop
sbb
pop
insl
aas
xchg
push
sub
lcall
dec
rcr
lahf
outsb
daa
je
inc
and
xchg
sarb
xchg
aad
xchg
phaddsw
push
jne
cli
shl
dec
loop
jne
and
cwtl
jge
cwtl
pusha
and
in
lock
mov
inc
xchg
or
mov
out
ds
push
fdiv
sbb
dec
xor
rcr
aad
sbb
add
xchg
jo
mov
popa
pop
cmpsl
dec
subb
or
xchg
sbb
mov
imul
fdivp
addb
jb
jle
incb
or
out
dec
or
jne
ljmp
mov
fldt
mov
fs
call
push
lock
sub
dec
jg
repnz
int
fwait
adc
popa
mov
pop
adc
add
xor
or
push
pop
or
loop
mov
lock
jmp
jbe
hlt
pop
inc
mov
adc
roll
orps
push
xchg
mov
xchg
dec
fcomps
or
test
fildl
jb
shll
bound
test
xchg
xor
fs
xchg
cmp
fldl
fdivr
push
std
push
lods
sub
and
mov
int3
or
out
xchg
orl
aad
sbb
push
ds
push
mov
add
mov
pop
adc
das
cmp
int
testl
lods
pop
xlat
pop
jge
jmp
xorb
lret
pop
xchg
cmpsb
xor
ficomps
add
cmp
add
pop
pop
jle
add
test
adcl
dec
jmp
dec
imul
lret
movsl
mov
cmp
imul
mov
mov
sub
add
ljmp
jg
mov
popf
pushf
dec
push
pop
push
and
pushf
iret
call
xchg
jb
cmp
xor
inc
adc
adc
frstor
daa
sbb
mov
xchg
push
ljmp
adc
cmp
push
out
push
mov
push
or
sarl
xlat
test
ja
cmp
xor
dec
addl
ljmp
imul
dec
es
push
push
jne
jmp
xchg
sahf
fstpt
addr16
jg
jae
adc
and
int
pop
mov
out
lea
adc
pop
pop
mov
icebp
lahf
call
pusha
xchg
fdivs
lea
test
inc
cmp
and
repz
outsl
inc
aaa
inc
mov
in
push
shlb
pusha
adc
mov
jne
pop
loop
sbb
fildll
xchg
jmp
mov
cmp
push
fs
fmuls
fcmovnbe
mov
outsl
outsb
jnp
cmp
lea
jg
repnz
adc
fisubrs
lcall
dec
push
push
lea
lods
xchg
out
setge
lods
pusha
jne
add
sub
decl
cmp
sahf
sub
jmp
xchg
add
je
mov
xchg
push
sbb
ret
mov
xchg
sub
aam
mov
enter
push
out
lcall
lock
xchg
inc
jp
push
jmp
and
jne
adc
out
popf
js
test
fcomps
sbb
push
add
xchg
scas
mov
mov
add
jle
stos
inc
dec
add
push
es
sub
div
es
mov
push
mov
std
shll
jb
dec
pusha
out
mov
lahf
hlt
loop
push
xchg
imul
loop
inc
xorl
fldl
xchg
xchg
loop
xor
push
frstor
and
adc
add
cs
push
shlb
icebp
or
dec
jnp
pop
sbb
push
mov
mov
mov
pop
push
xchg
or
ret
and
cwtl
add
or
loop
cmp
push
xor
or
incb
daa
push
in
scas
adc
mov
lds
xchg
mov
aaa
mov
dec
icebp
mov
popa
sub
jbe
std
mov
push
push
imul
dec
jecxz
dec
cmp
dec
mov
and
out
mov
lret
push
xchg
cmp
rcll
push
inc
in
cwtl
js
mov
push
pop
push
push
push
jl
inc
inc
lret
or
xchg
jae
dec
xchg
es
add
mov
mov
jmp
xchg
sub
movb
ljmp
divl
adc
adc
out
ret
insl
test
bound
rcrl
scas
cmp
in
cli
adc
int
cld
jbe
movsb
loope
cmpsb
push
sbb
sub
push
subl
pop
dec
xorl
imul
movsl
cmp
mov
stos
sbb
cmp
cmp
fbstp
pop
icebp
outsl
test
les
jae
adc
xor
jo
and
xchg
adc
pop
out
inc
test
jbe
repz
inc
ss
call
or
aam
push
push
test
dec
xchg
aam
mov
pop
dec
mov
popf
mov
pop
lret
xor
mov
ss
push
cmp
sbb
pop
jo
inc
adcb
mov
pop
adc
ficompl
scas
push
daa
mov
test
repz
jae
mov
jl
pop
ret
mov
push
cld
and
fidivrs
subl
sub
cli
xchg
test
imul
fld
out
sub
cmpsb
adc
jl
push
xchg
pusha
cmp
mull
xchg
insb
jb
add
push
bound
mov
lret
add
xor
stos
jmp
ljmp
xor
addb
adc
mov
cmc
mov
cwtl
aaa
andl
lcall
xlat
adc
dec
add
dec
lahf
sbb
mov
add
and
jmp
jmp
push
xchg
gs
out
push
lods
dec
js
mov
xchg
cwtl
sub
sbb
repz
or
stc
iret
mov
sub
inc
jb
decl
and
cltd
shrl
push
pop
cmpsl
adc
je
push
push
aad
loopne
add
add
movsb
out
jle
mov
add
lods
loope
mov
add
ss
push
mov
adc
ret
push
mov
mov
xchg
push
jns
mov
into
addr16
fdivrl
outsb
pop
add
int3
imul
and
lahf
fsub
sahf
sbbb
stc
daa
sbb
add
movsl
inc
das
in
mov
aaa
es
imul
pop
sub
loope
sahf
jbe
dec
add
add
std
jp
mov
adc
xor
sbb
fcoml
lcall
in
ds
cmc
adc
xchg
fs
aam
sbb
sbb
jb
mov
in
addr16
dec
popa
mov
test
out
push
push
jle
add
fwait
pop
jge
loopne
xor
lea
xchg
out
adc
inc
mov
add
cmp
mov
popa
pop
hlt
xchg
ret
pop
jb
xchg
xchg
jg
push
flds
add
or
inc
xchg
mov
dec
popf
sbb
and
or
in
pushf
push
jbe
std
rcrl
aam
sub
push
jecxz
pop
dec
jmp
pushf
jmp
xor
rcrb
add
push
je
test
dec
jno
pop
pop
push
sub
adc
cmp
xor
xchg
loop
adc
pop
das
sub
mov
add
imul
push
insl
hlt
push
cmpl
into
jecxz
push
out
pushl
into
ljmp
cmpsb
jae
stos
xor
je
int
in
js
sub
cli
jge
and
xor
and
cmpsl
cmp
mov
imul
push
mov
shll
or
mov
jb
shrl
data16
jp
insb
sbb
push
es
dec
fcomps
cmp
fcompl
bound
nop
int
enter
xor
add
mov
xchg
call
bound
xlat
jbe
pusha
rolb
mov
lcall
aaa
push
fcomps
jecxz
jb
add
xchg
jne
rorb
cmp
lods
out
das
scas
ja
bound
add
push
push
or
sub
and
pop
fs
imul
add
lret
mov
and
lahf
xchg
cltd
jp
inc
bound
movsb
aam
stc
sti
lods
adc
gs
jle
sbb
icebp
stc
call
push
out
outsb
xchg
es
cltd
push
stos
xchg
or
xor
push
adc
mov
idivb
lret
stc
ret
sbb
sub
in
fisubrl
xchg
scas
adc
ja
sub
sub
adc
mov
dec
mov
mov
frstor
mov
lock
cmp
loope
icebp
pop
push
rclb
pop
push
push
cmp
mov
outsb
out
jmp
mov
xor
or
icebp
jle
pop
pop
in
mov
lock
std
imul
cmp
adc
xchg
in
push
fcom
cwtl
cwtl
aaa
in
inc
and
push
testb
int
rcl
pop
rcrb
notb
adc
mov
adc
pop
test
mov
sub
jo
mov
adc
cmp
popf
cmc
lea
sahf
movsb
lcall
mov
cmp
xlat
out
dec
xor
cwtl
sub
stc
test
pop
mov
adc
push
add
shrb
popf
push
push
ret
dec
repz
cmp
out
inc
mov
movhps
outsb
cmp
xor
stc
testb
jl
mulb
jno
add
arpl
mov
jne
add
sbb
jle
stc
sub
push
mov
jecxz
rorb
negl
cmpsl
jns
sub
ret
and
aam
ljmp
ficomps
add
fmul
aam
lods
jge
rclb
aad
fcoms
inc
cmpsb
inc
ret
dec
mov
out
movb
imul
cmp
jns
je
orl
dec
int
lea
fiaddl
xchg
lods
in
mov
ljmp
mov
shrb
clc
cmp
mov
mov
sub
jns
fmul
shlb
cmp
xchg
aam
std
es
pop
loope
sbb
test
aas
sub
pop
cmp
rorb
cmc
in
sbb
leave
cmp
clc
push
sahf
orb
std
xor
push
lret
jne
cwtl
mov
fcom
cld
sti
subl
out
aad
dec
or
sbb
jo
sub
jmp
cs
dec
xchg
cwtl
movb
in
sub
add
sti
fbld
cs
xchg
lea
or
xlat
scas
imull
pop
js
inc
dec
cmp
outsb
mov
dec
test
push
and
push
cld
pop
movsb
or
or
dec
cs
mov
test
test
adc
push
scas
push
sbb
fbld
sbb
test
cmp
fmuls
pop
sbb
sti
mov
mov
addl
jp
idivb
pop
cld
shlb
je
lds
and
andl
gs
icebp
adc
dec
mov
inc
push
sbb
adcl
mov
mov
movsl
jmp
adc
ret
leave
in
jmp
or
xchg
sti
mov
mov
out
mov
and
jno
jbe
pmullw
sbb
adc
enter
pushf
push
movsl
rorb
dec
lret
sub
sbb
xor
pop
push
mov
mov
sbb
pop
scas
sahf
sub
pop
xor
pop
js
push
fbstp
xorb
inc
mov
xor
push
sub
sarl
aam
mov
incb
add
out
sub
std
or
push
and
sbb
adc
lds
loope
inc
in
testl
insb
lods
mov
jb
lret
scas
sub
sub
cmpsl
sbb
pop
xor
test
lret
fcompl
in
in
cmp
mov
jnp
jl
fidivl
pop
jge
lock
in
add
sub
cs
imul
xchg
mov
lret
dec
lods
shlb
mov
and
cmp
int3
sbb
out
fsubrl
sub
push
repnz
test
aas
mov
jle
ds
xor
or
add
inc
enter
sub
cmpsb
subl
push
cwtl
sbb
mov
jbe,pt
mov
aas
mov
daa
pushl
xchg
mov
les
cmp
sbb
jge
jns
mov
lcall
dec
push
xlat
sarb
in
ds
push
in
xchg
mov
xchg
and
out
mov
aad
adc
cmp
sbb
pushf
das
add
imul
aad
enter
mov
and
adc
out
es
push
mov
test
push
lret
mov
popf
insl
sar
push
movsl
jg
adc
clc
push
push
xor
xor
hlt
sub
dec
dec
mov
pop
repnz
aad
lock
pop
arpl
or
call
mov
cmp
inc
popf
lods
xchg
adcb
xchg
adc
jecxz
pop
mov
js
mov
cmp
scas
sub
xlat
cmp
insb
popf
push
and
cmp
jg
sbb
js
lds
dec
inc
popa
mov
nop
mov
xchg
fsts
iret
jecxz
rcll
sbb
fcmovb
dec
inc
xor
pop
pusha
pop
cmp
adc
mov
pop
xlat
and
cmc
sub
mov
cli
xchg
int3
cs
out
jb
or
cmp
cmp
dec
rsqrtps
out
sub
dec
pop
fprem1
or
add
mov
jge
imul
xchg
mov
sbb
add
cmp
and
orb
int3
xchg
and
jmp
aaa
fidivrl
sbb
add
mov
mov
mov
fcmovnb
popf
aad
icebp
clc
imul
sub
fists
insl
mov
push
mov
ret
adc
std
inc
loopne
sub
pop
push
sub
movsb
adc
sbb
jmp
inc
sbb
mov
or
int3
je
mov
xor
mov
sbb
pop
loopne
mov
loopne
subb
pop
insb
mov
inc
inc
adc
loopne
cltd
xchg
loopne
bound
dec
adc
iret
jno
mov
rcll
mov
jecxz
inc
lahf
xchg
xor
lret
or
in
push
sub
pop
xchg
inc
data16
lret
or
lcall
gs
js
push
scas
mul
inc
xchg
in
mov
icebp
das
mov
outsl
lods
sbb
lcall
sbb
push
adc
das
inc
sbb
andb
loopne
inc
push
adc
xor
testl
insb
lock
jecxz
jne
mov
clc
cld
mov
js
adc
sbb
adc
push
pop
test
leave
fbstp
outsb
xor
jle
inc
arpl
loop
cmp
dec
inc
pushf
test
rcrl
leave
mov
adc
or
or
fdivs
sbb
xchg
xchg
mov
dec
testb
lret
sbb
adc
dec
out
xchg
in
pop
int
popa
stc
out
cmp
and
je
fisubrl
imulb
or
add
rcrb
sub
or
sub
pop
add
data16
in
push
ss
pop
dec
mov
mov
xor
inc
and
into
sub
pop
cltd
cmp
adc
ja
sub
mov
mov
loope
or
shrb
sub
inc
push
fimuls
push
add
sahf
rcrl
cwtl
das
cmpsb
and
or
leave
inc
push
xor
lods
aas
ret
cmp
inc
cmp
pop
pop
and
mov
nop
in
inc
jg
add
ret
mov
dec
testl
push
sub
outsb
in
insb
scas
lock
popf
or
iret
lock
inc
js
push
adc
adc
fsubs
dec
pop
add
les
or
arpl
jg
ljmp
mov
xchg
enter
add
and
xchg
fs
mov
xchg
or
fwait
jp
cmp
rcl
inc
outsl
inc
xor
inc
aaa
scas
cmp
pushf
pop
mov
jg
inc
je
jmp
ds
pop
mov
daa
fiadds
stos
shl
push
es
out
mov
add
lods
push
cmpsl
mov
dec
icebp
jecxz
mov
cltd
mov
iret
aam
xchg
scas
int
outsb
jne
push
pop
push
mov
lea
sub
arpl
cmp
sbb
mov
scas
adc
sub
pop
mov
add
jns
and
cmp
add
fldt
adc
mov
out
sti
es
cmp
push
cs
cmp
mov
movsl
mov
in
adc
lret
or
xchg
cmp
sbb
or
sbb
inc
add
and
dec
mov
shl
cld
mov
ror
daa
test
xor
dec
inc
int
dec
inc
je
push
xchg
aam
add
aam
inc
adc
pop
jb
dec
pop
stc
mov
jae
ds
add
jmp
pusha
es
mov
mov
xchg
jmp
gs
movsl
ret
fcomps
ja
ja
std
ffree
mov
adc
rcrl
and
ss
mov
mov
adc
out
jmp
add
xlat
jp
jno
cmp
jae
fsub
pop
inc
sbb
aam
movsl
in
data16
in
adc
pusha
xchg
test
jbe
daa
es
jno
pop
push
jb
mov
mov
arpl
rorb
mov
movsb
adc
inc
xor
inc
pop
pop
mov
ret
mov
mov
cmp
xor
xor
sti
jge
out
pop
jle
das
jg
les
clc
fbld
inc
sbb
shll
pop
clc
test
xchg
cmpl
mov
test
jo
fstp
jmp
lea
mov
andl
fmul
fdivl
xor
jmp
pop
xor
inc
faddl
add
sbb
jmp
inc
mov
cltd
fadds
std
lock
aam
cmp
fdivrs
inc
in
xchg
push
mov
shrl
leave
int3
inc
or
fcompl
jl
push
jno
inc
sub
outsl
add
xchg
cmpsl
addr16
cli
cmp
xchg
icebp
push
mov
dec
movsb
jl
pop
xchg
cmp
mov
test
fdivrl
js
pop
jecxz
dec
jg
mov
pop
and
dec
xor
insb
sub
movsl
sbbb
aas
push
lods
mov
sub
gs
es
sti
jge
push
in
mov
dec
repnz
shrb
add
adc
cmc
repnz
decb
lock
add
in
jo
in
das
jns
pushf
xchg
popf
pop
inc
gs
add
scas
jl
gs
cltd
adc
test
sbb
negb
mov
inc
repz
mov
jmp
cld
xor
in
xor
cltd
fdivrs
jnp
cs
fadd
pop
leave
into
js
mov
rolb
outsb
inc
pop
fs
fisubrl
fidivl
aaa
fs
out
lret
scas
clc
in
push
int3
ficoms
or
repz
jg
add
add
cmp
mov
fdivrl
cmpb
xor
adc
or
cmpsb
aam
js
cwtl
or
bound
cmc
xor
lcall
sub
push
loope
fs
movl
jmp
mov
lret
lock
cmp
cli
jnp
rcrb
jbe
sub
xchg
xchg
mov
mov
or
pop
xorb
jnp
rol
dec
cmpsb
stos
clc
add
pop
mov
leave
xchg
shlb
or
sub
push
cli
and
loopne
shlb
das
ret
push
cmp
out
xchg
jl
push
imull
daa
push
sbb
hlt
jmp
das
sub
lret
xor
push
xor
cmpsb
sahf
enter
out
outsb
pop
push
in
jecxz
mov
mov
fisttpl
sub
dec
push
and
clc
mov
dec
clc
out
pop
jle
mov
js
dec
jg
lret
mov
cmp
sub
xchg
and
add
sub
data16
sbb
push
adc
and
les
mov
out
lods
mov
push
rolb
loopne
popa
out
sub
cwtl
rorb
std
in
adc
test
mov
cmpl
scas
in
lea
movsl
sub
scas
fnstcw
jns
and
sbb
ja
shlb
std
nop
ret
fisttps
pop
enter
leave
outsb
dec
nop
popf
test
jbe
mov
mov
stos
inc
mov
adc
pop
mov
push
add
call
shlb
hlt
out
mov
or
xchg
movsl
enter
icebp
mov
int3
jae
xor
mov
cli
ja
mov
pusha
mov
adc
iret
pop
das
lahf
data16
and
dec
lcall
mov
mov
je,pt
dec
mov
test
shll
mov
jne
clc
fimuls
ret
popf
fwait
and
mov
data16
sbb
and
mov
pushf
mov
inc
outsl
sahf
cmp
xchg
imul
sbb
push
inc
out
xor
mov
shrl
leave
aas
into
lahf
jecxz
lret
jp
mov
push
in
loop
insb
outsb
mov
jno
xchg
dec
cmp
mov
pop
jbe
jg
mov
dec
movsb
ds
shrb
and
adcb
ss
ja
cmpb
xchg
xchg
sub
fcoml
push
std
out
outsl
and
testl
fwait
mov
cmp
adcb
ss
into
mov
ss
dec
pop
shll
lds
dec
mov
cmp
mov
mov
cmp
das
xlat
in
outsb
and
jno
cli
fdiv
mov
pushf
leave
adc
mov
pop
mov
cld
mov
cwtl
mov
mov
push
add
add
or
pop
jae
and
in
fdivrs
ret
mov
shrb
push
fists
ja
xchg
jg
push
lret
xchg
cmp
xor
aad
dec
cmc
mov
in
fldt
pop
mov
sub
dec
inc
cltd
push
cmp
enter
testb
lcall
xchg
je
jns
movsb
ljmp
addl
or
ret
xor
repnz
notb
or
lods
ja
hlt
dec
inc
lret
jge
mov
mov
fistl
cmpb
rorl
pop
lret
cmp
inc
dec
push
adc
bound
in
jge
jno
or
cmp
test
repnz
and
test
adc
jmp
cmpsl
cmp
mov
and
or
pop
sbb
bound
push
std
lds
push
sbb
test
je,pt
cmp
and
inc
sub
jecxz
fsts
std
into
into
mul
xor
outsl
sbb
test
int3
xor
push
arpl
push
scas
inc
push
ficompl
and
ret
xlat
xor
psadbw
pop
push
jne
push
cmpsl
aam
mov
and
push
test
xchg
mov
inc
and
pop
push
sbb
inc
insl
mov
test
push
in
and
insl
push
cli
enter
push
xchg
jge
mov
out
dec
mov
dec
pop
daa
lods
add
in
imul
mov
rcrl
ret
inc
xlat
push
int
int3
pop
mov
xor
lock
das
jbe
xchg
pop
xchg
outsb
or
nop
xchg
pop
jb
movsl
decl
push
push
lahf
sub
das
pop
adc
sub
int3
bound
jge
leave
fmull
lods
test
les
cmp
loop
push
in
pop
scas
push
out
scas
inc
mov
jg
repnz
lret
and
cmpsb
scas
clc
repz
pop
xchg
add
mov
loope
aas
add
inc
out
lahf
xchg
adc
inc
lock
xor
xor
ds
rorl
mov
adc
mov
stc
or
incb
lcall
hlt
mov
fwait
mov
int3
mov
sbb
aaa
mov
and
push
inc
shl
test
sub
push
push
mov
and
pop
add
mov
test
dec
xchg
push
or
bound
xchg
xor
lcall
xor
push
lods
orl
sti
repz
inc
fstps
mov
push
stc
pop
das
clc
jecxz
adc
or
sub
daa
dec
inc
fs
jo
das
sbb
pop
or
bound
mov
aad
cld
xor
rorl
inc
bound
fadd
add
push
loope
dec
push
stos
stos
xor
fldenv
gs
lret
inc
ds
add
mov
in
mov
xchg
inc
insl
inc
jecxz
jg
push
in
daa
jbe
int3
shll
mov
mov
or
out
cmpsl
mov
icebp
pusha
pop
aam
ss
arpl
lods
cmc
adc
add
mov
mov
in
and
pop
int
add
add
and
and
pop
inc
insb
add
pop
rorb
pop
in
aas
cs
int
jbe
adc
das
iret
inc
divl
add
aaa
cmp
add
js
aam
outsl
xchg
into
dec
push
fnstenv
xchg
mov
gs
lock
add
mov
nop
aam
daa
sub
xorl
jnp
popa
iret
mov
cmpsb
mov
cmc
inc
cld
dec
sub
inc
inc
movsb
jnp
iret
mov
add
insb
out
adc
pop
mov
mov
sahf
jmp
es
std
push
cli
test
mov
outsb
daa
aas
push
ja
sub
enter
test
xchg
lock
inc
enter
loopne
sbb
lods
xor
test
aaa
and
test
sub
or
lock
arpl
in
adc
fnstsw
jl
cmp
int3
loop
and
jbe
pop
cmp
add
loope
sbb
cmp
fcmove
int
and
mov
in
jle
xchg
inc
ret
lods
push
mov
inc
pop
arpl
xor
jecxz
or
bound
xor
mov
fsubrs
loop
adc
bound
cmp
dec
adc
lcall
inc
ss
pop
scas
inc
push
gs
bound
fsubrs
shl
pop
mov
dec
dec
into
add
mov
dec
mov
dec
clc
or
pop
outsl
gs
movsb
bound
mov
jp
sub
test
lock
dec
xor
adc
cld
fisttps
add
xor
xor
lds
xchg
push
or
mov
imull
mov
jp
cmc
push
loope
ss
in
cmp
loopne
clc
out
and
inc
repnz
and
xor
flds
jmp
pusha
mov
fisubl
or
cmpsl
pop
in
jmp
rcrl
test
pushl
lahf
out
std
dec
stos
divl
adc
jae
or
push
jnp
addl
movsb
jns
loope
cwtl
pusha
ja
ret
cwtl
in
lret
mov
lds
dec
dec
xchg
mov
add
push
ret
add
aad
adc
xlat
xchg
mov
pop
xlat
jp
lahf
ret
inc
pop
ja
jnp
mov
mov
mull
mov
sahf
xchg
fs
mov
mov
cltd
cmp
add
das
stos
jl
dec
jle
mov
sbb
add
in
cmp
pop
das
or
sti
add
jnp
push
sbb
dec
xchg
mov
cmp
adcl
mov
jg
cld
push
push
and
stc
out
imul
lret
and
sarl
cmp
lock
xor
inc
outsl
cmp
xchg
scas
test
ret
test
jmp
mov
sbb
mov
jnp
sarb
and
push
ffreep
cld
mov
mov
pop
cmp
rorl
xchg
dec
shrb
jl
sub
pop
fisttpll
inc
cmpsl
pop
push
pop
jne
cmp
mov
incl
cmp
imull
je
mov
cli
aas
fistl
inc
arpl
mov
sub
or
or
out
mov
fs
mov
les
add
cmp
fnstenv
lret
adc
adc
pop
add
lcall
mov
add
mov
jbe
int3
and
xchg
insl
into
aas
mov
or
push
icebp
cmp
rclb
seta
jle
lods
mov
loope
rclb
ror
push
adc
push
xchg
inc
sbb
or
xchg
loope
push
jno
sub
sbb
pop
rorl
mov
inc
push
push
stc
shlb
jle
xchg
push
jb
jns
shll
push
lea
in
jp
and
xor
mov
sub
je
inc
push
out
lcall
dec
inc
add
add
inc
ss
add
aas
add
cmpsl
out
out
imul
out
mov
jns
js
mov
sbb
sub
scas
cmp
imul
dec
mov
lahf
pushf
rcrb
pop
push
js
enter
arpl
push
ds
notb
arpl
jno
popf
sbb
sub
lcall
jmp
push
incl
add
sti
mov
xlat
jns
inc
or
lods
pop
cmpsb
mov
and
mov
dec
addr16
nop
pop
jle
dec
push
jo,pt
cmp
mov
inc
addr16
sbb
jp
mov
fwait
cmc
push
in
push
or
fcoml
cmp
sahf
pop
cmp
jnp
fcomps
jg
mov
repnz
rcrb
aaa
and
iret
repz
lds
jg
sbb
les
xchg
pop
in
dec
std
jle
add
fstl
push
std
ret
mov
jecxz
test
push
mov
and
lods
add
sbb
negl
push
jg
add
jae
shlb
int3
fcomp
dec
rorb
in
lods
mov
inc
sub
shrb
roll
int3
mov
addr16
sub
int3
sbb
sbb
ljmp
cmp
loope
imul
cwtl
pop
pop
out
das
fnstenv
in
mov
testb
dec
cmp
xor
inc
mov
dec
cmp
and
pop
sub
cmp
jb
xchg
in
fucomip
sbb
add
fs
pop
out
icebp
xchg
flds
clc
ds
and
mov
dec
xchg
sbb
hlt
arpl
mov
cmp
loopne
iret
in
iret
sahf
popf
fsubs
pop
out
cmpsl
movsl
cli
insb
mov
inc
mov
sqrtps
xor
aad
jbe
std
add
jns
sub
or
movsl
sub
and
outsb
and
mov
imul
xchg
xchg
sbb
shrl
int3
xchg
imulb
mov
cld
std
jnp
shlb
add
or
dec
cmp
mov
sub
loopne
fnsave
adc
or
mov
dec
dec
lods
int3
fiaddl
dec
es
dec
das
jno
push
test
stos
lcall
mov
sahf
push
loop
and
pop
mov
jmp
mov
pop
xchg
adc
mov
jne
add
clc
sbb
movsb
jb
std
scas
jbe
call
add
jae
push
xor
add
xor
inc
mov
arpl
dec
push
adc
fsubrl
lahf
add
es
jae
add
sub
scas
stos
mov
jae
push
push
lock
sbb
rol
push
dec
sbb
std
sub
cmp
and
fldenv
jno
adc
iret
jbe
mov
add
cmp
in
ret
arpl
and
push
pop
adc
jno
xor
inc
and
pop
into
xor
and
mov
push
mov
enter
lea
or
xlat
or
push
in
pop
in
rorl
out
lgs
lods
fldl2t
inc
dec
jns
in
jp
push
pusha
out
ss
pop
cmpsl
mov
push
repnz
sub
rcrl
sbbl
mov
dec
shll
ljmp
leave
xor
rcll
jg
sub
jl
movsb
repnz
xchg
mov
in
fnstenv
xlat
inc
dec
xchg
cmpsb
or
dec
fidivs
ficompl
lcall
ret
sub
fcmovnbe
in
push
popf
in
lock
adc
mov
pop
adc
push
dec
aaa
mov
xchg
cmp
dec
out
and
mov
pushf
jmp
push
xor
clc
test
inc
sub
outsb
repz
rcrb
in
or
sbb
add
dec
sahf
insb
adc
in
inc
xor
repz
mov
mov
adc
in
imul
add
dec
jmp
mull
repnz
mov
sub
add
mov
inc
fptan
mov
call
out
and
dec
daa
jne
mov
or
aas
jmp
adc
les
mov
shlb
ds
sub
imul
and
dec
lock
jmp
push
rol
pusha
pushf
sbb
cli
cmp
inc
mov
loope
enter
sub
into
cmp
cltd
neg
adc
cmc
and
fmul
adc
sub
jne
je
fs
and
fcoms
push
movsl
lahf
movsb
inc
scas
inc
cmp
sub
shrb
and
lds
jge
jns
dec
lods
sbb
popa
loopne
cmp
fdivrp
gs
inc
or
in
inc
rclb
jne
xor
mov
in
ds
adc
dec
xchg
inc
stos
sar
mov
sti
pop
stos
xchg
lods
in
test
cmp
mov
shll
lcall
pop
icebp
mov
daa
push
pop
frstor
sub
ret
insb
insb
jne
sbb
mov
rclb
pop
rep
sub
jnp
in
adc
das
ja
sbb
push
cwtl
movsl
add
sub
outsb
test
pop
pop
test
mov
xchg
popl
mov
inc
cmp
repnz
jae
or
sbb
adc
jmp
packsswb
icebp
xchg
sub
cmp
call
dec
push
mov
addr16
cmp
cli
push
lea
ss
mov
aas
cmc
inc
push
insl
fsincos
rcrl
decb
mov
cmc
loop
cmpsl
aad
sub
rcr
push
jle
jle
adc
hlt
repnz
mov
dec
mov
cmp
mov
sbb
dec
popf
ljmp
dec
out
mov
fstl
loopew
pop
inc
in
xchg
adc
jmp
mov
mov
cmp
lret
mov
fldenv
dec
sub
adc
pop
clc
ja
mov
push
mov
push
xchg
xchg
mov
jp
test
aas
push
testl
gs
mov
jbe
popa
in
lahf
pop
push
lea
inc
stos
mov
or
cmpsb
es
push
pop
jle
xchg
rclb
xchg
sbb
jl
mov
subb
pop
mov
mov
dec
adc
test
sub
or
fisttpll
dec
sub
js
adc
das
loope
jbe
fldcw
cmp
mov
jp
add
into
sahf
inc
js
jmp
into
mov
cmp
pop
xchg
mov
popf
xchg
jmp
and
jge
mov
jl
leave
repz
push
adc
jo
outsl
lods
pusha
out
cld
cltd
aam
idiv
mov
cmp
lods
fincstp
sbb
les
mov
scas
xchg
mov
add
lret
fstps
and
jge
popf
inc
sahf
inc
imul
ljmp
cwtd
sub
xchg
jg
call
xorb
loope
and
mov
push
fisubl
test
mov
cmc
loop
je
jle
out
mov
cmp
or
cmpb
dec
cmp
cli
push
jmp
pop
jnp
mov
stc
jnp
add
daa
sub
repz
inc
aam
aaa
mov
add
roll
xchg
push
aaa
mov
jle
stos
mov
imul
jecxz
adc
ret
cltd
dec
xchg
nop
jmp
fdivr
movsl
sbb
sbb
xchg
in
xchg
vpaddd
dec
push
sahf
loope
cltd
mov
leave
ret
out
jmpw
jbe
dec
lods
add
mov
mov
pop
loope,pt
outsl
mov
jmp
push
cwtl
xor
daa
pop
cmc
jg
clc
jo
ljmp
repnz
push
nop
mov
mov
inc
rol
pop
loopne
mov
jmp
jmp
add
sbbl
lea
xor
cmc
pop
inc
int
mov
stos
mov
jns
sbb
lret
daa
std
or
push
cmp
ljmp
inc
jle
cmp
or
or
mov
push
shrb
mov
or
nop
fstpl
cs
cmpsl
mov
nop
outsb
adc
mov
inc
das
mov
mov
std
pop
dec
std
add
out
inc
inc
notb
push
jmp
or
jns
sub
xchg
sub
outsb
pop
xor
daa
xor
pop
cld
popa
cmp
movsb
imul
and
sub
dec
mov
das
enter
lods
or
sbb
icebp
cli
mov
mov
mov
sub
mov
aas
and
jb
pusha
je
cmc
pop
jnp
inc
fcmove
push
stos
ss
cmp
dec
xchg
leave
mov
and
xchg
mov
in
les
ljmp
pop
lahf
call
mov
cld
insl
cmp
xor
icebp
cmovl
add
pop
and
movsb
imul
cmp
sub
add
es
int3
and
test
std
es
adc
sub
cmp
xchg
mov
test
pop
pop
add
cmp
aaa
addr16
push
add
add
sub
out
cmp
int
outsb
pop
sub
cmp
dec
mov
sub
insb
inc
scas
and
adc
out
xchg
pop
add
xorl
lea
dec
push
dec
and
cmc
aaa
int3
cmpb
xchg
inc
mov
jp
loop
cmp
icebp
mov
xchg
jl
test
jl
nop
movsl
jo
push
sbb
xor
pop
cmp
mov
mov
inc
arpl
cmp
scas
iret
ds
mov
mov
clc
js
sti
addr16
mov
fdivr
fstp
sub
stos
mov
lret
sahf
ret
xor
mov
aad
mov
mov
icebp
and
add
or
int3
cmp
inc
mov
aam
ljmp
fists
xor
xchg
or
push
lods
jl
cmpsl
imul
jnp
jbe
jne
insl
mov
lock
adc
dec
cmp
sahf
mov
xchg
inc
add
xchg
scas
faddl
das
jno
mov
cmp
pop
arpl
js
mov
jge
jge
out
or
ret
xor
lods
adcl
jne
xor
int3
jbe
jnp
mov
fwait
adc
mov
or
fwait
push
daa
sbb
jecxz
movsb
push
cld
int3
inc
and
push
lret
sub
sub
cmp
into
fnstenv
jnp
cli
fstl
lods
cltd
xor
and
sbb
mov
mov
mov
dec
shrl
xor
mov
inc
das
lods
in
mov
lds
add
pop
ss
mov
inc
jge
test
insb
sub
cli
ret
xchg
mov
lea
pop
inc
xlat
adc
mov
and
xchg
mov
fcomip
popa
mov
movsb
inc
push
pop
ja
ljmp
or
fcompl
add
cmp
scas
jg
mov
out
pop
cmpsb
jb
pop
repnz
testb
jmp
adc
popa
mov
movsb
and
or
inc
lds
jg
mov
mov
jp
mov
push
pop
adc
mov
mov
xor
sub
fdivr
inc
lock
scas
enter
xor
adc
xor
sbb
out
jo
je
nop
lea
inc
and
mov
jmp
inc
fwait
dec
xchg
or
sub
outsl
push
push
aam
jnp
dec
mov
cli
xchg
cs
jbe
and
cmpsl
in
fdivrl
iret
xor
push
in
scas
push
loop
lods
sahf
push
inc
xorb
divl
push
xchg
inc
mov
lcall
push
xor
pop
xor
shlb
sbb
and
mov
lea
jmp
out
call
inc
cmp
add
pop
pop
or
jns
in
dec
in
mov
inc
rcr
pop
cmp
scas
mov
hlt
ds
xor
jecxz
sub
mov
insl
adc
xchg
iret
sbb
out
mov
cltd
fnsave
dec
add
ficoms
dec
dec
loopne
pshufw
cltd
xor
sbb
jo
mov
into
or
inc
stos
sbb
mov
sahf
cmc
lahf
sti
rol
lret
orb
or
sbb
lret
mov
ja
sbb
or
and
mov
push
sbb
jmp
and
mov
loope
loopne
addr16
idiv
mov
fidivl
in
cmp
out
xor
jno
and
jae
cmp
jno
call
fdivl
mov
jp
in
stos
cwtl
push
push
jmp
inc
mov
pushl
aaa
imul
dec
pusha
mov
mov
test
adc
insl
adc
inc
insl
and
dec
inc
push
adc
xchg
sub
repz
add
clc
cmpsl
enter
add
call
outsl
push
outsb
cmpl
das
jb
sbb
fcompl
xchg
mov
out
xor
pop
or
inc
dec
pop
int3
sbb
jl
add
mov
loope
jae
daa
fsubr
into
fcomps
imul
aaa
mov
ljmp
in
mov
push
test
mov
lods
push
jle
jo
and
popa
pop
pop
aam
aad
popf
xchg
jmp
and
push
pop
out
leave
ret
add
mov
aam
sti
push
mov
cmp
repz
pop
sbb
fimull
mov
ljmp
and
inc
xchg
scas
lahf
in
mov
inc
cli
sub
test
mov
lret
inc
idivb
xlat
mov
outsb
xchg
in
out
push
pmaddwd
mov
xchg
std
jae
push
test
sbb
int3
xor
mov
test
mov
in
adc
add
mov
mov
jmp
int
jno
xchg
adc
and
cmpsl
daa
push
rcrl
imul
addr16
divb
sbb
mov
adc
mov
xor
adc
inc
pop
mov
push
bound
xchg
pop
jb
aas
push
lods
pop
movlps
bound
dec
sub
mov
push
xor
mov
addl
in
pop
cmp
pop
fnsave
fcomip
cwtl
imul
mov
add
mov
cs
inc
cmp
in
fisubrs
fidivs
out
lods
cwtl
adc
xchg
pop
mov
in
jae
test
int
clc
sub
lods
pusha
jg
movsl
int
repz
dec
pop
pop
or
or
inc
out
bound
stos
aam
mov
pop
mov
xor
in
fmull
clc
adc
fadd
andb
and
xor
testl
dec
and
sub
push
sub
icebp
cwtl
pop
clc
and
jl
sbb
xchg
cmpsl
lock
pop
fwait
mov
in
je
xor
scas
push
and
jmp
sahf
jbe
repnz
xor
jg
out
clc
fidivrl
fchs
adc
inc
movsb
xor
push
push
loop
lcall
jnp
inc
sub
mulb
push
dec
push
cltd
xchg
stos
in
jg
xchg
cld
and
push
pop
cmp
mov
test
xor
ret
sub
popa
repz
push
je
mov
mov
daa
and
pusha
jp
pop
adcb
and
mov
cmpsb
push
ja
lcall
sub
cmp
dec
pop
pushf
les
mov
shlb
insb
cwtl
jae
insl
outsl
push
scas
sbb
dec
push
js
loope
jecxz
dec
pop
jb
mov
push
arpl
xor
jae
ljmp
jmp
clc
fildl
decl
jno
ja
test
lahf
push
loopne
jo
es
das
xor
adcb
jno
test
popa
repnz
andb
mov
test
inc
jl
adcb
cwtl
ja
xlat
inc
or
xor
inc
push
sub
negb
test
push
out
into
mov
jecxz
mov
push
loopne
leave
lea
push
sub
orl
in
and
ja
out
into
xchg
pushf
xor
sbb
into
mov
lea
mov
xor
pop
rorb
ja
jns
jnp
inc
aas
cmpsl
fwait
jge
push
movsl
adc
int
push
pop
lcall
es
sub
cmc
pop
mov
cmp
inc
mov
and
ljmp
mov
push
test
mov
add
sti
adc
iret
cmp
add
cmc
or
adc
mov
xchg
or
sbb
or
enter
jle
xorl
and
dec
lea
loope
jbe
sti
out
dec
push
jge
mov
mov
fnstenv
aam
dec
movsl
mov
push
lahf
mov
sbb
data16
dec
imul
mov
sbb
jbe
lret
sti
dec
xor
fdivr
test
stos
add
cli
mov
cld
fstpl
mov
sbb
mul
lods
ss
sbb
lcall
or
xor
jecxz
addr16
mov
dec
in
jmp
xchg
jnp
adc
mov
js
fiaddl
push
mov
scas
add
xchg
dec
dec
cmp
sub
cmp
fwait
xchg
out
arpl
mov
sbb
or
mov
xchg
sub
ja
rclb
pop
jecxz
push
jle
arpl
mov
mov
sbb
imul
sub
or
mov
imul
mov
std
add
push
faddl
jnp
sbbl
pushf
cmp
push
les
fs
sbb
inc
mov
ljmp
inc
rcr
dec
out
fdivl
lret
sub
sbb
mov
push
cmpsl
shll
roll
ljmp
std
and
and
xchg
ret
fimull
insl
rclb
or
fadd
adc
dec
push
mull
fs
pop
add
jae
push
js
ret
pop
test
mov
xor
mov
cmp
cmpsb
push
jmp
sub
and
rcrb
ss
xchg
xchg
fcomps
in
push
push
mov
fisttps
xor
lea
mov
push
xor
and
mov
mov
arpl
out
xchg
cwtl
frstor
jno
icebp
repz
out
push
mov
dec
xchg
les
ret
lcall
test
jmp
mov
in
mov
inc
test
mov
nop
mov
push
stos
adc
lret
jbe
outsb
into
shlb
psubb
push
loop
dec
and
cwtl
imul
loop
sbb
sbb
push
pop
hlt
fistpl
mov
pmaxub
cwtl
lock
mov
push
xchg
test
mov
xlat
xchg
pop
mov
mov
arpl
push
push
pop
mov
shrb
cwtl
add
xor
dec
shlb
lret
data16
xchg
sbb
in
scas
sbb
xchg
ret
adc
pusha
sub
insb
lock
je
ljmp
jecxz
repnz
gs
addr16
xor
mov
mov
inc
mov
adc
inc
or
rorb
arpl
mov
push
ret
test
and
imul
out
or
lods
sbb
out
cwtl
sub
cwtl
xor
push
icebp
cmp
inc
mov
mov
push
xor
xor
dec
fldcw
mov
mov
and
mov
mov
cmpl
mov
es
mov
imulb
lahf
cmp
xchg
jae
pop
test
mov
push
popa
sub
fisttpl
adc
xor
xchg
aas
imul
out
lahf
leave
pop
fcomip
jns
push
mov
call
mov
sub
xchg
jb
jbe
sub
mov
addl
jnp
lahf
cmp
push
fnstenv
into
cmc
loop
rol
mov
das
pushf
sbb
adc
iret
xlat
aam
addr16
mov
addr16
pop
adc
out
out
jp
add
xchg
jae
adc
dec
cld
xlat
lock
sbb
pop
cwtl
ja
inc
mov
pop
inc
fwait
jecxz
pop
cli
cld
data16
cltd
jmp
sub
repnz
divl
jp
shll
and
scas
outsl
adc
inc
das
sti
or
lock
sbb
inc
push
stos
or
in
cmp
lds
push
mov
int
out
outsl
aaa
cmp
js
sbb
adc
jns,pt
push
aas
mov
cmp
mov
lods
sub
push
xchg
fldt
popa
inc
inc
in
jmp
push
mov
xor
or
icebp
js
cmpsb
jl
mov
xchg
add
adc
sbbb
mov
push
and
mov
scas
std
push
imul
jg
sahf
add
mov
mov
mov
dec
xlat
add
mov
enter
dec
cmpsl
movsl
xor
jnp
and
and
in
imul
lahf
stos
cwtl
dec
xchg
xchg
inc
adc
mov
xchg
mov
pop
mov
sub
movsb
xchg
xor
repnz
pushf
mov
iret
daa
outsl
add
out
cmp
add
sub
xchg
fists
lahf
jno
jecxz
inc
fdivrs
dec
inc
outsl
jmp
pop
rol
mov
dec
int
sbb
push
test
out
mov
xchg
jnp
gs
dec
lds
fwait
loope
test
xchg
pop
xchg
lcall
push
call
cli
stos
and
out
push
rcrl
inc
adc
pop
pop
mov
push
lock
dec
and
pop
mov
int3
xor
aad
dec
outsb
inc
mov
rolb
icebp
dec
lcall
fisubrs
insl
sbb
inc
ret
test
mov
jle
pop
jbe
and
push
data16
mov
mov
in
fs
in
cmpsb
mov
ret
movsb
stos
xchg
js
cwtl
or
int3
push
dec
in
in
cld
push
mov
mov
fldl
addr16
and
negb
test
xor
mov
rorb
mov
fsts
lods
movsb
movsl
stos
pushf
pushf
fistpll
or
jp
mov
add
sahf
mov
jb
fwait
cmp
pop
movsb
std
pop
pop
push
push
mov
xchg
pop
xchg
dec
cwtl
mov
mov
adc
cmp
idivl
insb
xchg
test
add
addb
rcll
enter
mov
and
push
outsb
mov
pop
xchg
push
dec
stos
andb
mov
out
nop
in
mov
lods
shrb
jo
sub
cli
leave
dec
mov
adc
pop
push
mov
ja
out
pop
xchg
sbbb
imul
testl
push
jo
cmpsl
adc
mov
ret
cmp
and
mov
xchg
call
mov
and
test
add
hlt
cmp
loop
mov
cltd
mov
xor
sub
loop
cmp
sbb
inc
out
sbb
jns
push
loop
sbb
mov
je
data16
jb
fs
mov
xor
jg
scas
out
sub
cmc
in
push
cmp
inc
and
xor
xchg
jecxz
xchg
loop
jb
inc
mov
cmp
adc
fucom
punpckhbw
mov
nop
fs
push
dec
and
xchg
aad
xor
shl
jp
lods
or
out
xlat
cli
lods
addr16
leave
add
push
adc
loop
add
insl
or
mov
add
jp
test
push
jne
not
fisubrl
mov
jne
xlat
jg
sarl
mov
sbb
xlat
xor
inc
loop
cs
ret
clc
fbld
ja
push
sarl
cmpsb
xchg
pop
dec
inc
inc
add
jno
fs
lcall
outsl
add
sub
fsubrs
ret
insl
test
test
popf
or
or
jecxz
fistl
inc
add
fmull
jo
les
dec
lcall
mov
mov
jle
sbb
shll
fs
je
push
push
push
xor
das
test
pusha
push
das
call
mov
out
xchg
test
xlat
shll
xor
mov
xchg
cmp
mov
movsb
popa
inc
add
xchg
ds
cmc
rclb
or
std
sub
adc
mov
push
xchg
sbb
hlt
cmp
das
jbe
enter
pop
mov
dec
scas
mov
dec
push
xchg
pushf
outsl
mov
hlt
xor
out
test
scas
pop
stos
inc
add
arpl
lods
pop
lahf
or
and
or
rcl
mov
mov
pop
jecxz
stos
nop
hlt
and
cmp
xor
or
and
dec
and
scas
sub
inc
dec
push
mov
push
repnz
dec
in
xlat
xchg
jbe
xchg
pop
adc
in
imul
or
adc
pop
push
xchg
jns
mov
xchg
and
jae
pop
loope
push
or
mov
cmc
lds
add
and
xor
ljmp
push
fnstsw
inc
into
cmc
jecxz
jnp
mov
push
insl
mov
cld
gs
ret
scas
bound
call
adc
xchg
inc
cmp
and
or
lret
insb
fnstcw
jl
jns
scas
push
and
push
push
mov
sub
lret
enter
xor
rcl
out
sbb
fwait
mov
ficomps
outsb
mov
out
scas
adc
adc
dec
sarb
sahf
andb
inc
nop
lds
test
lods
cmc
stos
lods
pushf
inc
mov
or
or
xor
push
stos
xchg
or
aad
sbb
cmp
sbb
adcb
jmp
shll
hlt
push
fiaddl
in
repz
xchg
and
arpl
mov
mov
movsl
or
adc
addl
sbb
loopne
mov
les
insl
xchg
shl
push
ja
scas
mov
or
popa
lret
lahf
xor
sbb
sti
inc
cmp
test
sub
cld
lret
or
insl
sub
je
push
pop
pop
stc
adc
and
test
cmpsl
mov
adc
mov
int
nop
sbbl
pop
pop
out
out
out
out
cmpsb
test
sahf
mov
mov
mov
and
xlat
push
stc
xchg
lret
out
sub
sub
in
push
outsb
sub
in
jp
push
or
cmc
aad
or
fsubr
out
lret
and
cli
push
test
gs
idivl
inc
shll
xchg
and
pop
in
addb
in
push
adc
fdivrs
inc
jl
aaa
adcb
and
mov
or
inc
test
add
int
outsb
mov
and
pusha
in
jno
in
mov
mov
imul
shl
pusha
loopne
icebp
ss
cltd
pop
mov
jb
xor
imul
dec
pop
and
add
add
push
lock
jae
sahf
xchg
in
mov
je
xchg
jge
or
mov
mov
movsl
stc
mov
jl
ret
adc
sub
mov
dec
mov
pop
push
mov
dec
push
sahf
dec
fs
mov
cltd
jl
data16
jne
mov
cmp
iret
inc
and
pop
xchg
dec
rolb
push
std
push
xor
xchg
xchg
rorl
bound
enter
xchg
jbe
and
dec
dec
jae
mov
testb
and
push
pop
int3
cmc
sub
ficomps
stos
int3
imul
sub
test
lret
out
std
in
jl
dec
jae
ja
loopne
dec
add
movsb
push
mov
addr16
and
mov
add
add
adc
mov
scas
mov
daa
push
add
ret
shll
stos
sub
test
lds
sub
and
imul
adc
popf
fidivs
shlb
jb
popf
xor
push
mov
add
inc
add
rep
inc
add
leave
xor
xorl
inc
ret
icebp
std
sahf
pop
mov
stc
and
pop
dec
pop
pop
jne
test
push
in
mov
aam
pop
mov
mov
xchg
sub
xor
jb
lahf
dec
ja
mov
popf
loope
lods
arpl
cmp
add
lret
xor
xor
aaa
mov
das
xchg
bound
sbb
stc
lahf
push
movsl
mov
cmp
sti
jbe
adc
or
shrl
clc
lret
push
aam
cld
cs
sahf
push
enter
inc
enter
scas
ficomps
inc
fs
xor
sbbl
repnz
es
movd
jle
pop
in
mov
cmp
add
fimull
insl
mov
sbb
dec
adc
aas
cmpsb
cmpsl
imul
dec
outsb
cld
stc
push
jmp
xor
scas
push
cmp
es
daa
sub
shrb
gs
loop
and
test
bound
dec
mov
jns
push
rdpmc
test
pop
push
repnz
mov
es
imul
cmpsl
lods
mov
xchg
lret
add
sbbb
add
jge
dec
mov
xlat
jmp
and
xchg
pushf
repnz
mov
ret
mov
adc
test
fucomp
xchg
les
pop
popa
mov
shrb
xor
das
movsb
and
pop
mov
in
mov
into
xlat
fwait
inc
icebp
pushf
aas
clc
pop
push
jl
cmp
sub
test
stc
push
dec
aad
filds
repz
cmpsl
push
cmp
mov
sti
aaa
andb
lret
mov
jns
shll
inc
mov
jno
sbb
adc
add
mov
add
jnp
xor
mov
adc
push
dec
lahf
ret
movsb
push
arpl
cmpsl
jbe
sbb
std
gs
push
adc
aad
mov
cld
inc
pop
push
aad
cmp
mov
cmpsb
mov
and
push
dec
xor
push
das
push
mov
jg
lcall
inc
clc
jne
sbb
jmp
and
jbe
js
aas
and
das
mov
lea
mov
jb
lahf
dec
jecxz
fwait
gs
adc
mull
and
clc
mov
mov
jno
mov
clc
sbb
add
or
icebp
mov
cli
and
mov
pop
push
sbb
push
lea
or
lock
push
xchg
icebp
in
adc
mov
dec
ja
lret
push
sbb
or
int3
clc
jl
add
fldcw
sarl
rorl
sub
jnp
shrl
xchg
mov
inc
repz
xchg
mov
or
cld
sbb
xor
aas
mov
jno
jecxz
and
mov
add
fsubp
push
dec
pop
and
xchg
pushf
scas
into
push
cs
push
mov
pusha
xchg
cmp
push
ficompl
mov
sbb
cmp
push
jg
aas
mov
fwait
xchg
xlat
stos
daa
cmp
cld
jge
fmull
mov
pop
scas
lods
xchg
testb
repz
into
mov
cmp
pusha
xchg
xchg
js
fnstsw
push
data16
out
push
cmpsl
fnsave
daa
mov
add
cmp
push
in
lret
inc
lahf
jmp
inc
dec
test
add
mov
hlt
fs
dec
sbb
jg
fisttps
mov
xchg
cmpsl
insb
imull
cmp
jae
add
mov
test
clc
cmp
nop
ja
inc
aaa
jnp
mov
pop
das
call
ret
and
sbb
push
cltd
fst
lea
test
std
mov
or
sub
aaa
xlat
das
inc
test
arpl
xor
inc
in
adc
add
flds
pop
not
sbb
sbb
xor
andl
jge
je
push
push
sti
xor
popa
push
cmp
push
cmp
cwtl
sbbl
dec
dec
or
and
mov
push
repnz
push
sub
cmpsl
shl
xor
push
fwait
loopne
mov
xor
je
jbe
push
or
push
mov
mov
ret
mov
push
and
mov
sbb
lret
in
arpl
fdivrl
push
fldcw
cwtl
dec
add
mov
xchg
jge
lret
inc
stc
jb
xchg
xor
in
mov
add
fists
mov
aaa
jle
adc
lods
sub
mov
das
test
daa
fimull
xchg
lea
mov
dec
das
push
faddl
andb
data16
cmc
mov
pop
pop
stos
mov
or
jmp
out
in
addr16
ficompl
fchs
adc
aaa
shlb
push
fdivp
mov
and
xor
data16
and
mov
cli
cmp
mov
inc
mov
or
inc
sub
push
or
inc
cmpsb
ds
fldt
mov
push
imul
pop
mov
test
iret
out
jae
scas
pop
enter
js
sbb
mov
mov
xchg
nop
jbe
fimull
push
push
xchg
aad
jp
push
jbe
out
aaa
rcrl
xchg
mov
and
mov
inc
mov
in
sbb
test
addb
movsb
dec
mov
jl
popa
inc
movsl
gs
mov
add
test
lret
fsub
std
mov
js
sahf
push
outsb
pop
xchg
push
or
imul
pop
repz
inc
pop
dec
fwait
not
cwtl
imul
xor
dec
pop
xor
cwtl
mov
ja
lahf
clc
dec
push
aas
mov
cmc
iret
mov
repz
mov
mov
ja
int3
incb
jo
adc
fdivr
loop
adc
cmp
repz
stos
faddl
loope
adc
arpl
dec
sti
jecxz
out
adc
ret
mov
or
out
dec
mov
out
dec
push
sub
push
cmp
and
cli
push
push
jmp
stc
shlb
jbe
outsb
outsl
and
aas
addr16
mov
pusha
cmp
push
shll
and
in
adc
push
cmp
or
xchg
lds
lds
repz
js
repnz
pop
fdivl
dec
sbb
mov
mov
cli
imulb
xchg
cmc
cld
cmp
enter
push
aam
mov
sbbb
or
ljmp
pop
adcb
cltd
in
sbb
stos
inc
ss
cld
sahf
fstpt
mov
ljmp
push
std
lret
dec
and
mov
rorl
je
andb
mov
mov
and
pop
je
push
lea
xor
push
or
mov
rorl
out
pop
pop
insl
push
icebp
scas
sbb
out
or
inc
xor
mov
out
push
das
loopne
sbb
fnstsw
in
mull
fisubrs
int3
inc
sbb
jbe
xchg
insb
cmp
lahf
sub
lahf
and
mulb
gs
mov
iret
cmp
mov
inc
mov
mov
jecxz
adc
pop
movl
or
test
add
lock
add
cmp
add
ret
push
jp
cld
and
mov
xor
loopne
imul
cmp
sbb
int
std
sti
sbb
inc
or
xchg
out
or
cld
sbb
cmpsl
jecxz
dec
push
addr16
repnz
jecxz
mov
jnp
in
mov
inc
push
adc
ds
pop
sbb
loope
push
loopne
std
imul
and
push
mov
adc
dec
lcall
pop
leave
push
inc
sub
dec
sub
mov
into
or
ds
loope
sub
lahf
push
sub
addr16
stc
into
sahf
adc
pop
out
insl
psubb
push
xchg
cltd
fcmovbe
or
cmc
mov
test
pop
cmp
adc
add
cmp
bound
outsb
sti
pusha
xorl
into
add
pop
jmp
cmpsb
push
pusha
push
sub
xlat
inc
ret
cwtl
cli
mov
fidivs
inc
pusha
or
jg
insb
in
dec
imul
outsl
push
mov
xor
mov
js
aam
xchg
rorb
icebp
mov
and
lods
pop
and
ficompl
popa
and
pop
lods
decb
or
pop
pop
out
cmp
dec
adc
pop
or
stos
inc
push
add
ret
xor
inc
repz
add
ss
push
nop
pop
movlps
push
mov
mov
inc
add
xchg
ljmp
cld
pushfw
sbbl
loope
mov
aad
or
cmp
dec
dec
cmpsb
jg
test
mov
sbb
jb
outsl
ret
es
test
sub
adc
dec
jns
lock
push
fisubl
movsb
sbb
mov
sub
push
into
int
addb
loope
xor
insl
jecxz
loopne
popf
inc
adc
cmp
fs
loop
outsl
push
enter
inc
out
repz
bound
ret
and
jnp
push
xor
jb
imul
sti
std
out
pop
dec
daa
dec
xchg
clc
jmp
jo
jge
cld
adc
mov
sbb
push
mov
loopne
mov
aas
xor
push
in
mov
jle
pop
pop
cli
sahf
stos
jmp
popa
dec
jecxz
or
repz
jo
popf
push
orb
enter
or
cmp
xor
out
push
out
lret
mov
lods
aam
pusha
movsl
aad
or
cs
testb
int3
jecxz
lcall
jmp
cmpsl
lret
orl
cmpb
sub
fwait
pop
cmp
fnstsw
lret
imul
fistl
mov
mov
insl
loopne
cli
les
data16
jbe
test
inc
adc
repz
aaa
xor
or
daa
jecxz
mov
pop
out
sub
cli
bound
je
cwtl
in
push
daa
push
add
add
lea
jecxz
fwait
out
cld
loope
jnp
sub
jae
jne
pop
pop
out
stos
in
call
jl
aam
sbb
jge
mov
test
and
mulb
mov
push
out
or
pop
lods
add
mov
mov
lock
movsb
call
xor
adc
jbe
mov
jg
adc
in
cs
dec
mov
mov
aas
and
hlt
xor
dec
xchg
in
sbb
test
loope
and
add
mov
lock
pop
inc
in
jno
outsl
mov
out
movsb
test
add
xor
mov
pop
nop
add
sbb
or
sysexit
mov
mov
mov
je
aaa
or
imul
cwtl
sbb
lret
xor
cmp
pop
sahf
les
push
iret
xchg
adc
adc
mov
icebp
cmp
or
push
std
mov
subb
and
addr16
xchg
roll
adc
xlat
ret
mov
repz
lret
lea
jg
dec
mov
xchg
push
mov
push
scas
pop
jbe
push
lods
leave
jge
adc
mov
bound
mov
adcl
ss
mov
pop
lret
in
decb
sub
push
les
dec
fs
or
xor
xor
mov
mov
add
stos
test
fidivrs
dec
popa
and
shlb
mov
adc
movsl
cld
inc
or
repz
mov
cmp
jge
jno
aaa
pusha
repnz
hlt
inc
jnp
dec
sbb
ds
imul
int
fs
mov
pop
push
xchg
insl
xor
loopne
push
and
mov
mov
enter
sub
ljmp
add
popa
test
jae
jmp
adc
es
dec
or
mov
aad
xchg
pop
test
dec
add
stos
fwait
push
add
shrl
flds
out
and
in
jecxz
ds
stos
xor
or
xor
cmc
mov
cli
sub
cwtl
andb
in
add
in
mov
test
adc
ja
xchg
ficoms
jnp
push
nop
cld
sub
jp
cmp
cltd
and
jae
xchg
mov
popa
decl
jns
ljmp
repnz
cwtl
mov
mov
cmc
dec
cvtps2pd
pop
fnstsw
js
fs
add
ljmp
ror
les
test
push
sbb
inc
mov
pop
mov
xchg
cmp
push
out
sbb
jle
mov
or
or
or
and
sahf
sbb
mov
mov
jne
in
pop
lret
xchg
nop
cltd
mov
mov
pop
xor
fsubr
stc
jbe
lcall
mov
jl
outsl
icebp
out
dec
sahf
add
or
gs
fdiv
mov
xor
les
adc
or
inc
xchg
mov
cmc
lahf
pop
aam
cmpsl
mov
and
cwtl
int3
sbb
rorl
ja
orl
movsb
pusha
loopne
xor
push
inc
lret
mov
loop
xchg
adc
xchg
popf
xchg
stos
cmp
test
sbb
in
mov
pop
mov
lea
cmp
mov
push
mov
les
les
outsb
mov
int
popa
pop
mov
fiadds
cli
xchg
add
mov
test
mov
mov
push
xlat
std
addr16
inc
pop
sub
adc
test
push
jo
inc
push
fwait
stos
es
xchg
ljmp
sub
cmp
das
ss
mov
in
add
aaa
ret
pop
push
xchg
cmpsl
bound
es
push
rolb
cld
or
lock
adc
adc
jne
pop
clc
jbe
mov
aam
test
movsl
dec
in
fmuls
adc
insl
test
loopne
cmpsl
lahf
std
cmp
sbb
jno
std
xchg
mov
push
ret
jl
icebp
ja
pop
mov
into
jne
ds
leave
cmc
xor
test
push
mov
test
inc
add
mov
shll
and
rcll
dec
mov
in
xchg
lods
dec
in
push
imul
scas
dec
into
arpl
and
mov
outsb
movsb
stos
push
pop
push
push
test
mov
test
enter
jg
popl
cwtl
inc
insb
std
cli
loopne
xchg
cli
hlt
loope
sti
cmpl
rcr
mov
sahf
mov
test
je
jae
cmp
insb
pusha
mov
xor
pop
imul
and
xor
pop
and
imul
jo
test
lea
jmp
fnstcw
mulps
imul
or
push
ret
fsubrs
nop
gs
xor
mov
dec
jno
push
ljmp
enter
jae
mov
sbb
out
les
xchg
xchg
repnz
or
cmp
nop
add
mov
pop
mov
sarb
pop
rcrl
leave
cmp
pushf
push
iret
sbb
mov
sbb
loop
scas
mov
pop
neg
mov
insl
sahf
push
lret
scas
add
and
in
jo
adc
push
sbb
push
mov
sbb
sub
add
inc
in
fstpl
or
fldl
mov
push
adc
mov
sbb
int
or
and
mov
dec
sub
or
and
addb
xor
insb
xchg
push
add
push
aam
hlt
sub
std
mov
pop
jnp
mov
out
js
stos
push
mov
fldz
push
fdiv
addr16
jg
je
mov
ljmp
pop
sub
push
sti
push
push
mov
dec
mov
test
stc
push
pushf
jge
pop
or
dec
ljmp
sbb
clc
mov
jp
inc
adc
pop
fcoms
cld
test
pop
pop
leave
ret
test
adc
jecxz
push
push
sbb
sub
dec
and
pop
ret
xchg
adc
sub
xchg
addr16
insb
popf
cli
fld
movsl
in
pop
lret
push
lods
xchg
shll
ja
mov
pop
xchg
cld
test
and
enter
push
cmpsb
int3
pop
cmp
xor
adc
xor
dec
mov
ret
push
repnz
imul
sub
shlb
mov
mov
mov
fildl
shlb
leave
and
or
sti
jg
pusha
imul
mov
iret
sbb
xor
pop
je
aas
shlb
imul
pop
or
mov
scas
sbb
imul
aas
xchg
test
mov
push
ljmp
mov
pop
pushf
push
xchg
ret
test
jo
hlt
adc
pushf
loope
lock
mov
pop
notl
fiaddl
cld
js
push
cmpsl
push
pop
lret
faddl
pop
dec
mov
xor
jae
aaa
push
repz
jmp
xchg
jae
and
jecxz
in
movsb
enter
negl
inc
cs
jns
xchg
aas
sahf
ja
xchg
movsl
jmp
fdivl
add
rcrl
popa
ljmp
lret
call
loope
add
mov
dec
bswap
or
mov
pusha
push
mov
mov
mov
mov
sub
cli
mov
ficomps
stos
repz
pusha
repnz
pop
lods
leave
ficomps
mov
lods
inc
xorb
push
pop
cs
xchg
idivb
arpl
xchg
dec
jmp
push
xor
sbb
lahf
jne
fisttpll
jae
int3
cmc
jnp
hlt
imul
int
jl
stos
adc
stc
xchg
xchg
pop
shll
ret
add
jbe
iret
or
sub
xchg
xor
filds
std
sub
rcl
dec
adc
sti
pop
mov
scas
scas
fildll
imul
mov
mov
push
in
ss
jb
xchg
cmp
test
mov
mov
pop
in
sbb
mov
lcall
imul
mov
dec
mov
pushf
daa
jp
outsb
leave
lds
xor
sub
mov
mov
push
decb
xchg
mov
xor
enter
call
in
mov
rcrl
and
lahf
cwtl
sbb
les
jb
jbe
inc
jge
ds
sbb
repz
pop
into
inc
loope
pop
pop
and
rorl
push
cmp
and
cmp
pop
stos
loope
ja
add
push
ja
out
pop
push
and
xlat
test
jne
or
shrl
std
cmp
and
insl
out
out
adc
ret
push
and
cs
jb
fmuls
je
loopne
cmp
jbe
dec
ja
scas
std
imul
stos
cwtl
dec
fildl
decb
imul
inc
mov
scas
ss
jbe
xor
rorb
cmp
mov
loop
or
cmpsb
clc
daa
pavgw
cld
jecxz
and
int
imul
js
stc
xchg
loope
cwtl
rorb
ficompl
pop
mov
sub
mov
sbbb
inc
cmp
jp
cmpsb
push
sub
imull
call
inc
cmp
pop
inc
mov
into
test
in
sub
bound
dec
dec
lods
lahf
dec
movsl
sbb
xchg
adcb
cmpsl
cs
lods
das
push
sub
aad
jno
dec
mov
cmp
dec
add
inc
push
jns
lock
fbstp
jns
mov
xchg
fs
outsb
xlat
adc
mov
dec
fnstsw
jl
rcll
movsl
and
insb
pop
jnp
std
adc
lea
mov
add
ret
fwait
js,pn
mov
sub
out
adc
call
mov
dec
cmpsl
es
pop
icebp
inc
jne
cmp
adc
pop
aaa
popa
imul
jge
mov
fnstcw
aaa
out
rorb
aam
cmp
add
jl
jne
inc
cmp
gs
and
scas
or
xchg
out
mov
push
sub
push
push
pop
cld
leave
in
aad
popf
and
push
mov
sub
and
and
cld
cli
pop
cld
pop
into
aas
in
ret
push
push
cli
mov
sub
fcoml
sbb
dec
xor
mov
mov
int
mov
cld
outsb
ffree
mov
aad
daa
xor
out
xchg
inc
mov
or
cli
jae
js
or
sub
aaa
and
push
je
jmp
out
outsl
and
mov
call
xor
aas
cmp
push
jb
aad
cmp
jg
cmp
lods
jno
filds
cmpb
pop
add
pushl
sbb
cli
pop
or
mov
movsl
xchg
jle
mov
sarl
pop
enter
mov
sbb
pop
loopne
jne
or
mov
cmp
in
or
xchg
pop
mov
ja
ret
filds
sub
les
outsl
and
inc
dec
dec
das
dec
dec
repnz
test
or
ret
xchg
jns
push
int3
add
xor
add
lcall
xor
and
xchg
pop
subl
mov
cmp
lods
xor
push
repz
ret
test
jge
cmpl
je
fsubp
aas
inc
xor
xorl
std
xor
bound
fistpll
mov
mov
inc
push
lods
punpckldq
or
mov
dec
pop
lds
mov
lret
cld
mov
mov
outsb
decl
mov
cmpsb
jnp
lods
and
add
call
das
adc
mov
insb
jnp
cld
jl
inc
pop
adc
inc
dec
push
sbb
xor
call
outsl
push
or
je
adc
dec
xor
sbb
pop
lds
sbb
cld
lahf
add
lahf
outsl
cmpsl
stos
or
push
cltd
adc
in
mov
cmp
fldt
push
aam
dec
hlt
cmp
push
add
pop
adc
imul
cmp
sub
pop
pop
push
sbb
dec
mov
adc
cwtl
sbb
sbb
add
sub
cmpsl
push
mov
adc
xchg
lods
mov
lret
mov
enter
or
sub
sub
int3
mov
jo
push
or
mov
shrl
push
je
jns
jo
mov
lret
lock
and
cmc
pop
xchg
fs
aaa
xchg
test
jmp
inc
adc
sahf
sahf
mov
pop
cmp
leave
push
xor
jo
mov
push
jns
das
scas
notb
xor
std
add
es
les
pusha
mov
ljmp
jl
loopne
cmp
stc
sub
sbb
stos
enter
adc
add
jmp
mov
xor
stos
cmc
xor
push
pop
aaa
stc
lock
jge
pop
push
and
ja
dec
je
repnz
adc
pop
jns
or
outsb
clc
in
cli
pop
jp
inc
outsb
xchg
pop
mov
aad
xchg
or
movsl
mov
mov
into
lea
into
fs
jbe
movsl
xor
les
fildll
rcr
pop
mov
mov
mov
nop
mov
mov
pop
xchg
mov
in
jae
loope
ds
xchg
loop
xchg
mov
jle
out
outsb
cmp
es
pushf
inc
inc
out
in
mov
lds
pop
sub
dec
in
jbe
mov
dec
adc
pop
int
jmp
stc
cmpb
pop
hlt
and
aad
icebp
pop
iret
inc
insb
mov
shrb
test
faddp
mov
or
sub
inc
dec
mov
adc
xor
inc
in
xor
mov
jns
bound
and
aam
das
or
pop
pop
idivl
gs
stos
and
push
sub
outsl
jnp
lea
out
popf
loopne
adc
push
out
lea
test
jne
inc
dec
xchg
or
pop
jne
aad
jp
push
mov
imul
add
aam
mov
movsb
mov
cmpl
hlt
rcll
xor
mov
out
fcmove
and
jo
fidivrs
pusha
hlt
fs
mov
test
push
mov
leave
ja
scas
gs
and
scas
cmc
in
out
mov
ret
test
mul
or
into
mov
jb
jo
arpl
xchg
jl
xlat
cmp
cmp
jle
fwait
loopne
les
mov
jno
les
mov
stos
popa
mov
pop
mov
shlb
inc
or
xor
push
jmp
sbb
or
inc
xchg
jb,pt
mov
jle
push
xchg
inc
leave
and
inc
ret
aas
or
inc
mov
jecxz
popa
lods
jno
imul
test
pop
cmp
push
repz
shlb
push
divb
xor
mov
or
sbb
lock
lret
into
aaa
gs
adc
outsb
in
add
mov
fcmovbe
or
fildll
lods
dec
jne
mov
lods
jge
fildl
pop
pop
dec
push
sbb
xchg
ud1
mov
lahf
inc
add
cmpsb
add
and
inc
bound
jp
jb
aas
es
arpl
shr
mov
xchg
adc
mov
std
inc
mov
leave
test
ficomps
xor
push
ss
rorb
js
jae
jbe
mov
jno
divb
push
push
int3
les
roll
pop
aam
enter
xchg
lret
and
sarb
push
cwtl
das
push
test
jecxz
pop
and
jae
xchg
pop
je
insl
pop
hlt
fs
mov
test
test
jmp
ja
cmp
outsb
xlat
mov
cwtl
cmp
sti
outsl
popa
adc
pop
adc
leave
push
lcall
push
cltd
and
cmp
add
push
nop
or
mov
arpl
pop
mov
xchg
pop
pop
lret
into
jl
fidivl
fists
dec
je
sahf
stos
xchg
test
ss
cld
mov
movsb
rcrb
mov
jbe
icebp
adc
out
adc
mov
mov
jle
push
fimull
jp
and
cli
cmp
ficomps
aam
stos
sbb
lods
gs
cmp
pop
add
fstpl
hlt
pop
mov
lods
out
rcrl
cs
mov
push
jp
pusha
hlt
jbe
rcr
push
pop
mov
lods
jo
in
sbb
xchg
dec
lcall
fcomps
and
leave
fsubr
mov
scas
xchg
xchg
sbb
mov
adc
cmp
bound
sbb
adc
jae
mov
insl
loope
adc
xor
jno
loope
inc
out
outsl
cmp
stc
or
clc
cmp
xchg
in
mov
jle
test
in
fsts
cli
test
movsb
addl
xor
cmp
into
adc
xor
test
jle
leave
sub
mov
imul
cmp
ret
mov
inc
mov
dec
stos
or
rclb
out
and
ret
pop
jmp
test
mov
adc
sub
jb
sbb
call
lods
jg
cmp
cmp
dec
inc
mov
jg
and
sub
shr
mov
cld
cmc
bound
push
imull
shrb
cmp
xchg
jne
imul
cmpsb
xchg
enter
je
and
gs
arpl
lds
cltd
mov
addb
inc
inc
popf
outsl
jmp
lea
ja
mov
cld
dec
xchg
cmp
inc
fs
aaa
mov
mov
cmp
ret
stc
inc
popa
sti
loope
arpl
push
mov
sbb
adc
adc
sub
in
xchg
mov
aad
sub
dec
mov
jmp
push
js
pop
inc
dec
shlb
mov
ret
js
pop
ror
je,pt
sti
lret
push
xchg
push
xchg
decl
mov
mov
das
enter
arpl
lcall
xor
push
fistpll
cmp
out
test
icebp
leave
sbb
mov
sahf
mov
mov
jb
popa
jp,pt
mov
in
jmp
ss
sbb
ficompl
push
rorl
imul
popa
xchg
mov
jne
add
bound
out
jne
jno
call
or
inc
push
jmp
jge
rcrb
xorb
ret
dec
fiaddl
fdivl
push
and
mov
nop
cli
scas
je
xchg
adc
mov
lret
test
sbb
push
mov
xchg
shll
fcmovnbe
push
aaa
sbb
andl
push
mov
lret
test
pop
push
cmp
xchg
cmp
or
push
mov
mov
jl
mov
xchg
pop
cmp
es
mov
jg
int
int3
mov
test
imul
test
cs
in
and
test
pusha
popl
and
std
dec
test
sub
sub
imul
xor
add
sub
arpl
dec
inc
ret
or
pop
lds
and
dec
mov
iret
fmul
in
xchg
test
inc
xor
rcrb
outsb
shl
xchg
cmpb
add
mov
rclb
cld
cwtl
mov
xchg
push
ds
call
mov
test
test
mov
int3
std
push
adc
sti
xor
push
mov
lock
imul
dec
dec
pop
cmp
pop
adc
jbe
push
jl
test
and
scas
test
adc
add
bswap
rclb
ret
test
iret
cltd
push
jle
hlt
lock
xchg
jl
or
mull
js
cmp
scas
push
aas
mov
xchg
push
cmp
xor
sbb
nop
shl
cmp
jg
xor
clc
shll
fs
hlt
pop
jle
mov
outsl
dec
push
cli
lods
vpsraw
les
sti
dec
inc
jle
cmpb
enter
iret
dec
mov
punpcklwd
lret
xor
mov
mov
pop
mov
lock
incb
sbb
jnp
scas
jge
orl
outsl
in
sbb
jg
dec
push
rol
frstor
in
sahf
mov
lcall
dec
mov
out
in
mov
movsl
pop
jmp
fdivl
sub
or
xor
sub
jg
scas
push
sbb
jmp
testl
add
or
leave
sbb
xor
and
cmp
jnp
imul
repnz
mul
das
push
lock
orb
jo
push
pop
pushf
inc
jge
jno
mov
xor
dec
ds
or
mov
insb
clc
scas
notl
fmuls
sub
xor
ss
je
cmpb
aam
lods
dec
mov
jne
or
lods
cmc
addb
add
inc
ja
mov
icebp
daa
movsl
test
scas
data16
inc
mov
and
mov
pop
orb
jb
cwtl
mov
inc
in
int
add
arpl
xor
ljmp
fisttpl
add
enter
sbb
lea
push
dec
and
pop
mov
repnz
cld
insl
sbb
aam
not
dec
cmp
mov
dec
imul
testb
es
fidivl
inc
xchg
mov
insb
out
sti
xor
cltd
sbb
or
scas
mov
cmp
ja
test
jns
push
mov
pop
inc
fcoml
jb
cld
popf
add
sub
aam
addb
add
cs
adcb
cltd
loop
xlat
or
out
adc
push
cmp
dec
push
inc
arpl
loop
in
jo
and
clc
pushf
xchg
pop
jge
lea
imul
jno
xchg
in
cmp
dec
and
mov
in
mov
scas
clc
dec
mov
sbb
cmp
daa
test
push
push
mov
inc
jae
and
pop
and
dec
or
pop
push
out
pop
outsb
int3
mov
jge
or
push
fsub
arpl
xchg
pop
arpl
inc
xchg
push
push
add
aas
dec
push
outsb
pop
inc
mov
lock
bound
push
xchg
mov
clc
xlat
mov
xor
test
ret
pop
mov
sub
mov
push
sarb
out
push
in
std
inc
jmp
roll
jge
test
xlat
add
aaa
mov
pop
cmp
scas
xchg
cs
dec
ret
out
in
or
negl
rol
lods
jae
cli
sbb
add
icebp
pushf
lret
test
xchg
stos
jmp
lret
lret
pop
std
xorb
idivb
adc
and
lea
lret
and
lret
iret
in
dec
inc
xor
shrb
xor
adc
fsts
hlt
sbbb
je
mov
shrl
push
stos
mov
sub
fisubrs
mov
mov
add
lret
sahf
xchg
pop
inc
and
xchg
icebp
fistpll
xchg
clc
out
aaa
push
adcb
xchg
cmp
fucomp
or
shll
shrl
out
icebp
push
aas
push
or
incb
dec
mov
push
cmc
jnp
scas
and
inc
imul
loope
aad
mov
mov
outsb
adc
movsb
xchg
repz
mov
jno
roll
sub
push
in
popa
in
outsl
dec
out
icebp
cmp
mov
push
ret
je
and
pop
cmc
bound
and
test
in
sub
in
clc
sahf
and
and
xchg
movsb
push
rolb
enter
leave
imul
and
outsl
push
stc
mov
xchg
or
add
loopne
jns
or
jle
xchg
in
pop
add
pop
sbb
mov
xor
pushf
xor
insl
inc
dec
inc
rclb
jns
push
rolb
neg
mov
sub
pop
xchg
fsubrs
mov
loop
and
rolb
fstps
ljmp
cmp
ret
lods
gs
inc
sbb
pop
push
test
jecxz
mov
fistps
xor
cmp
push
sbb
xchg
and
jle
push
shll
xchg
pop
push
les
sbb
aam
addr16
inc
cwtl
iret
out
fiaddl
insb
sub
and
rolb
pop
popf
int
imul
jbe
stc
mov
fistl
sbb
out
sub
outsb
ss
jae
je
or
test
xlat
insb
cli
lahf
cmpsb
mov
and
scas
lret
jbe
or
filds
mov
pop
sbb
lock
pop
jns
cmpsb
fcomp
imul
lea
dec
push
pop
mov
daa
push
mov
mov
loopne
xor
pushf
jmp
push
mov
sub
pusha
xchg
mov
leave
inc
scas
mov
and
xchg
cmp
fcmovnu
dec
adc
mov
jno
int3
addb
stos
dec
inc
dec
inc
aas
dec
mov
sbb
mov
jo
xchg
ja
jmp
mov
jbe
jno
fcompp
daa
lods
mov
add
mov
cmp
jg
add
std
fsubl
push
pop
aas
mov
push
scas
add
mov
xchg
push
xchg
cmpsl
stos
test
insb
sub
imul
movsb
push
cwtl
xor
sbb
jl
outsl
pop
mov
mov
mov
outsb
cmp
addr16
cs
and
sahf
xor
jmp
stos
imul
sti
stc
pop
inc
jle
in
aam
lds
push
out
cmp
rolb
adc
sub
jne
jp
fildll
stos
clc
dec
lods
insb
sbb
ret
mov
test
and
cmp
shl
inc
lods
sbbl
fs
xchg
in
xlat
sbb
imul
jp
cmp
sub
adcb
push
sbb
cmp
aas
jnp
adc
xlat
xor
jmp
mov
or
repnz
das
sbb
jns
cmpsb
jno
sbb
std
fsub
add
into
sbb
inc
mov
enter
push
fdivl
lret
int
bound
icebp
mov
pop
xor
pushf
decb
and
adc
xor
jl
push
cmpsb
jecxz
scas
add
rorb
cmp
shlb
cmp
fidivl
fwait
popa
push
movsl
lods
xchg
pushf
or
mov
loop
pop
push
popa
std
loope
jbe
xchg
push
add
sti
cmpsb
ret
sbbl
push
sbb
and
push
and
hlt
out
and
and
lret
sarl
dec
add
mov
fcomps
and
or
ss
das
nop
mov
into
push
lahf
clc
shlb
iret
andb
push
bound
aam
ss
and
xchg
rcll
cmpsl
push
inc
xchg
es
cmp
fisubrl
dec
cli
add
and
jno
mov
pop
jecxz
mov
inc
test
movsl
xchg
inc
repz
aaa
lds
andb
testl
and
push
inc
std
sarl
jge
sbb
negb
ret
lret
mov
sarl
push
outsl
or
mov
cmp
sub
in
in
push
ficomps
dec
loope
dec
pop
and
sbb
push
push
into
shrl
les
adc
inc
shrl
adcl
test
and
roll
into
in
bound
and
lods
popl
push
cmc
inc
push
cmpsb
fnsave
adc
push
or
mov
cmpsl
rcr
sub
or
jmp
test
and
in
mov
stos
inc
xchg
or
test
xor
mov
and
sbb
out
gs
mov
inc
pusha
sub
inc
jnp
loope
fwait
or
sarl
push
arpl
enter
mov
sub
cld
xchg
popa
dec
int
push
lea
test
cltd
dec
add
push
mov
pop
xlat
dec
shl
fsubrs
mov
jo
and
mov
lea
imul
mov
popf
push
cs
rorl
aam
push
sub
fdivrs
imul
jl
mov
pop
fldl
addr16
xor
stos
int
add
pop
lods
jl
lcall
xchg
ja
in
mov
add
sbb
popf
pop
mov
out
leave
scas
das
or
out
sbb
mov
shrl
mov
and
shl
xchg
jne
push
out
aam
adc
push
xor
std
lahf
loop
fcomi
push
fwait
push
out
xchg
cmp
jae
rcrb
sbb
or
mov
inc
or
sbb
lcall
sub
mov
xchg
mov
cmp
xchg
fwait
jg
rcl
ret
rolb
rclb
out
jb
mov
mov
movsl
mov
test
jl
mov
push
shrl
jae
dec
xchg
ficompl
jl
popf
pop
pop
in
dec
loop
jns
inc
sahf
inc
dec
mov
repz
push
iret
or
jno
pop
pop
fnstenv
jne
scas
dec
and
test
leave
xchg
jae
fistpl
jno
pusha
shll
popf
dec
clc
ljmp
lret
fmul
sahf
out
daa
pop
repnz
push
das
mov
xor
pop
aas
test
add
cmp
jmp
cmp
and
lcall
dec
mov
jns
inc
addl
jle
adc
cmpsl
les
adc
xor
inc
shrl
adc
les
das
shlb
ficompl
ja,pn
cwtl
xor
dec
jle
insl
xchg
das
mov
inc
mov
aad
jae
sbb
add
push
pop
stos
lock
loope
jne
rorb
xchg
leave
ja
xchg
fistl
popa
enter
jo
loope
sub
fisubrl
lahf
das
inc
push
inc
push
loopne
imul
sahf
lret
push
adc
push
or
mov
popa
xor
fucomip
mov
xchg
pop
sbb
push
xor
xchg
mov
out
mov
mov
jne
in
dec
xor
adc
push
sbb
sbb
out
rorb
fiadds
xchg
gs
push
dec
into
pop
pop
test
push
mov
int
mov
dec
fsubrp
sbb
mov
add
notl
jb
add
repz
push
loopne
push
xchg
inc
pop
test
lods
cli
inc
jg
push
filds
ljmp
insw
mov
outsb
jl
dec
push
pushf
and
jo
sbb
std
push
lret
add
ret
sbb
cmp
add
mov
mov
decl
fs
std
test
mov
scas
add
xchg
stos
pushl
cltd
adc
pop
mov
pop
xchg
in
xorl
adc
test
adc
jo
mov
inc
and
into
in
stos
xchg
arpl
sub
push
mov
cmp
aas
aad
stos
pop
in
loopne
mov
mov
ret
mov
ret
ror
je
jp
fistpll
icebp
or
push
jmp
repz
inc
mov
push
out
stos
rclb
pop
int
jl
jne
adc
imul
dec
outsl
adc
call
xchg
adc
and
sub
daa
loopne,pt
or
adc
cli
mov
loopne
xor
imul
inc
test
sbb
lcall
imul
loopne
sub
mov
xor
dec
loop
dec
sbb
lret
ja
movsb
test
jmp
call
mov
mov
add
xchg
enter
out
xchg
idivb
cmc
dec
adc
das
jne
cmp
bound
popf
inc
pop
push
cmp
in
xchg
pop
xchg
xchg
jge
into
loope
xchg
fisttps
leave
andb
leave
leave
mov
jecxz
lods
movsl
int
xor
xor
into
movsb
inc
sub
inc
adc
arpl
out
xchg
adc
shrb
mov
jbe
lcall
shlb
daa
xor
add
push
sub
out
out
pop
xorb
adc
in
pop
enter
aam
cmp
jge
xor
shrb
stos
xchg
andb
inc
push
andb
pusha
fiaddl
push
mov
mov
mov
out
aas
sub
push
jae
inc
aad
add
fcoms
sbb
xchg
mov
fbstp
jmp
out
scas
in
outsb
call
xchg
add
test
jle
pop
pop
lcall
xor
ljmp
xor
int
in
inc
xor
push
mov
push
xor
stos
mov
xor
loopne
cmp
push
and
roll
shll
jno
inc
cmp
xchg
rolb
addr16
push
sbb
inc
inc
aaa
sbbb
add
jecxz
mov
push
mov
aad
xchg
mov
bnd
mov
mov
dec
mov
add
rcr
mov
jecxz
jg
sbb
add
sbb
ja
sbb
shll
sti
mov
jne
shrl
and
arpl
and
out
lret
xchg
sub
adc
xchg
pop
pop
into
pop
and
lods
pop
mov
btc
rcll
test
fldz
xor
aad
test
cmc
sahf
repnz
cmp
ja
icebp
jmp
hlt
push
lret
xor
lret
xchg
cmp
es
bound
sbb
push
sbbl
push
adc
dec
xor
xchg
mov
cmp
push
push
ret
out
or
out
mov
dec
lods
mov
push
xlat
and
mulb
ficoml
xchg
cwtl
inc
jbe
call
daa
hlt
sub
or
fs
mov
ds
mov
mov
push
dec
rcr
jp
push
loopne
inc
ret
es
or
lock
jae
enter
inc
push
and
sub
aas
xchg
push
cs
frstor
std
insl
lea
push
mov
xchg
inc
xor
pop
inc
cmp
jae
test
xchg
ret
iret
loop
push
jmp
out
cmpsl
mov
jp
lods
xchg
cmpsl
int3
outsw
and
jne
mov
scas
push
int
insl
dec
cwtl
xor
inc
das
test
stos
add
insl
js
cmc
das
inc
adc
scas
push
and
fisubrs
inc
pop
inc
sbb
lret
rcl
mov
push
ficomps
out
addb
mov
push
inc
ret
les
sbb
mov
je
fiadds
jp
rcrl
aad
repnz
lret
mov
out
les
push
rorl
popf
lods
push
mov
hlt
sti
mov
dec
and
mov
push
scas
xchg
xchg
or
jno
shl
mov
jne
xchg
in
and
xorl
push
pop
sbb
xchg
mov
movsl
lods
clc
lcall
sub
cmp
stc
out
sbb
fstpl
sarb
and
sub
es
jmp
das
mov
inc
loop
or
pusha
lea
sbb
jb
jo
dec
ret
cmp
bound
mov
in
mov
cwtl
outsl
inc
imul
add
ret
jmp
cmp
out
add
pusha
mov
ds
mov
sub
add
pop
sub
notb
sub
cmp
mov
inc
call
mov
add
aas
dec
jp
jecxz
filds
cmc
jnp
data16
cwtl
dec
cmp
std
pop
clc
fwait
ss
outsl
mov
pop
fiaddl
mov
inc
adc
je
or
das
pop
sbb
bound
test
sub
push
jge
bound
jno
ds
out
push
mov
mov
or
mov
mov
cmp
inc
mul
and
icebp
or
js
ret
and
add
arpl
cmp
das
sbb
test
mov
mov
cmpsl
mov
jb
setle
loop
push
mov
clc
or
lahf
mov
das
cmp
aaa
lcall
add
lds
lea
xchg
pop
out
lods
inc
rcll
sbb
insl
adc
imul
mov
jmp
xchg
adc
out
rcrl
or
pushf
jne,pt
cli
scas
sti
jecxz
shll
xchg
frstor
push
pushf
mov
mov
lods
and
jno
sbb
cli
lods
lret
ret
xor
push
mov
jb
mov
add
lods
in
pop
scas
jp
mov
lahf
test
pop
pop
sti
jns
or
pop
and
mov
sub
dec
ds
xchg
mov
incb
pop
repnz
sub
aam
inc
xchg
cli
ret
gs
xchg
jb
cwtl
mov
sbb
cmp
loopne
call
pop
add
and
std
push
arpl
mov
mov
xchg
push
mov
cmp
pop
int
xor
int3
lahf
jno
popa
loope
dec
aaa
outsb
cli
mov
xor
cmc
sti
jecxz
mov
std
out
fistl
pop
inc
mov
pop
ljmp
pop
sbb
adc
out
ret
popa
ljmp
ja
add
stos
or
cmp
pop
sub
sub
mov
into
lea
inc
insb
adc
pusha
mov
sbb
popa
bound
scas
fs
mov
lds
in
imulb
adc
xchg
cmp
jo
cmp
int
xchg
jg
jno
into
lcall
mov
xchg
outsb
add
enter
int3
mov
inc
loopne
and
jge
inc
pop
sbb
enter
cmp
repz
cwtl
jg
in
lret
inc
rcll
stos
clc
pop
jg
stc
xor
sub
jl
mov
bound
js
jmp
mov
inc
pop
js
xor
mov
push
outsb
lahf
and
mov
aas
pushf
das
cmp
and
add
imul
adc
mov
dec
sub
ss
mov
shrb
ds
aaa
adcb
aam
pop
outsl
movsb
pop
push
mov
sub
dec
adc
ss
sbb
test
stc
test
jp
rorl
inc
ficoml
jae
mov
xchg
pop
inc
pop
sub
inc
neg
sbb
notl
sbb
repz
push
dec
shll
or
andl
jno
mov
nop
leave
add
xchg
imul
fsubl
jne
cld
mov
lahf
push
add
in
cltd
fistl
jne
je
fcmovb
ljmp
addb
inc
mov
push
icebp
push
jg
xchg
aas
and
inc
incl
jmp
cmpsl
cmp
movsl
dec
cwtl
xor
scas
mov
cld
jge
jnp
cwtl
mov
push
xchg
enter
push
mov
lea
jns
enter
mov
fcomp
idivb
pop
or
or
loop
pop
lahf
ja
dec
push
push
add
sbb
mov
pop
xor
mov
ja
xchg
cmp
flds
pusha
dec
in
ret
aas
cmp
jnp
xchg
leave
test
mov
js
adc
push
xorb
or
xchg
rcrb
cmp
mov
or
lcall
mov
test
test
xor
ficoml
jl
pop
xor
push
insl
cmpsb
sbb
push
ljmp
or
lods
repz
add
cmpsb
ret
push
xchg
xchg
loop
jns
xor
mov
and
ds
popf
and
enter
xchg
pop
das
inc
xchg
scas
popf
lods
in
add
and
sub
gs
xchg
inc
or
xlat
popa
lret
movsb
into
aas
fcoml
cmp
nop
adc
flds
lcall
int3
mov
lret
inc
mov
cli
jne
rcrl
shlb
jl
aam
cmp
cmp
rcl
mov
inc
mov
sbb
in
stos
bound
pop
shrl
fcmovnbe
pop
cmp
jbe
push
jle
and
mov
das
std
cmp
pop
aad
lret
pop
inc
sbb
inc
imul
mov
mov
mov
sti
fistpll
sub
movl
adc
shll
sub
data16
xchg
push
mov
loope
outsb
sub
std
xor
lcall
std
lret
pop
faddl
int
xchg
push
jne
mov
push
xchg
insl
imul
fisttpll
jecxz
inc
fsts
dec
ret
ret
xor
sub
sti
scas
fwait
mov
cmc
mov
lods
ds
loope
jl
leave
mov
and
ds
mov
ljmp
add
sub
mov
sub
mov
cmp
or
add
scas
xor
jl
adc
pop
mov
push
stc
pop
jg
lret
fiadds
rolb
shl
sbb
add
jae
mov
outsb
iret
ss
xor
sub
mov
fidivrl
out
mov
adc
or
jl
stos
jle
je
lret
adc
pop
cmpsl
ss
xchg
xchg
ljmp
pop
jae
mov
loope
mov
adc
mov
pop
jp
add
insl
mov
sbb
loop
js
sahf
adc
js
push
mov
push
fdivr
sbbl
pop
and
and
adc
inc
mov
stos
stos
jl
divb
shlb
cmp
push
dec
imul
push
sbb
sub
jns
rep
fwait
scas
dec
clc
out
dec
dec
or
das
cltd
push
sub
cld
lret
dec
imul
clc
mov
jae
insl
sahf
lock
jl
jnp
pop
out
xchg
daa
fldt
adc
test
xchg
imul
inc
push
push
lret
out
adc
inc
push
nop
push
out
inc
jns
cs
mov
les
out
jl
lock
ret
in
sub
lret
push
push
jne
or
test
mov
cmpsl
jle
cmp
loopne
cld
das
dec
pop
dec
rcrb
xchg
adc
push
lahf
mov
dec
sub
pop
sbb
inc
leave
sbb
test
les
inc
rcr
nop
pushf
popa
pop
pop
inc
adc
push
out
es
sti
stos
and
push
das
push
lods
mov
push
sti
mov
and
cmp
dec
dec
mov
push
xor
mov
aad
loop
cmp
and
push
inc
xor
jmp
add
pop
pusha
data16
je
mov
inc
jecxz
fwait
xor
cwtl
jmp
cli
add
ret
xor
fistps
lahf
loop
mov
inc
daa
mov
dec
cld
lods
jg
pop
xchg
mov
jge
xchg
dec
outsl
mov
xchg
mov
mov
test
das
mov
pop
cmpsl
test
xchg
cmp
imul
push
and
popf
int
out
aas
cmp
stos
xlat
mov
lret
mov
pavgw
pop
sahf
sbb
js
xor
add
xor
into
sbb
jle
ljmp
fstl
in
pop
or
shlb
or
mov
mov
jp
cltd
addb
fnstsw
xchg
mov
sbb
and
jmp
addb
inc
inc
add
inc
movsb
xchg
pop
in
cmc
test
xchg
in
aad
inc
cmp
push
sbb
xchg
and
leave
pushf
sbb
imul
scas
stc
std
dec
jb
cs
sub
out
pushf
gs
lret
cmpb
xchg
sub
pop
fistps
icebp
cli
shll
ficomps
mov
lret
xchg
shll
cmp
and
rolb
sub
data16
popa
lret
jmp
repz
inc
cld
xor
loop
dec
ljmp
gs
pop
pusha
mov
mov
enter
addr16
push
rcrl
mov
lods
aad
pop
mov
scas
pop
xor
movsb
pop
loope
mov
pushf
frstor
inc
inc
scas
sarl
popa
ret
add
mov
jb
fcmovnu
fcomps
sub
cmpsl
es
aad
fdivrl
xor
pop
jnp
fs
shrl
sbb
jae
sahf
mov
push
cmp
outsb
out
sub
daa
and
fsts
push
test
inc
sbb
adc
adc
sub
fistpll
add
cmc
jne
test
xchg
or
out
mov
jbe
mov
in
scas
pop
jmp
cmpsb
and
adc
stos
stc
mov
cmp
fdivs
jne
fcoml
sub
addr16
repz
pop
cmp
push
xchg
mov
sbb
jmp
repnz
roll
pop
add
push
fcomip
mov
pop
sbb
pop
xchg
pop
xor
sti
sub
test
add
xor
cmc
jae
test
cli
loop
dec
inc
adc
clc
iret
lods
shl
jno
jo
sbbl
imul
out
adc
adc
mov
push
div
and
je
adc
adc
icebp
hlt
jns
into
mov
sbb
push
adc
lret
mov
pop
xchg
out
icebp
sar
das
adc
rcrb
or
test
xchg
pop
sub
data16
inc
ficomps
div
addr16
negb
fwait
loop
sub
mov
aad
es
mov
xchg
mov
or
mov
push
and
sub
push
data16
lcall
pop
jecxz
cmp
mov
xchg
adc
popf
dec
sub
gs
cli
daa
lret
cli
dec
out
jl
push
or
and
scas
daa
imul
aam
cwtl
mov
sarb
data16
pusha
leave
stos
mov
dec
movsb
sub
push
leave
les
in
mov
mov
cmpsl
lret
push
xchg
test
enter
xchg
popf
xor
popf
outsl
push
xchg
rclb
xchg
jno
push
das
leave
pop
push
repz
iret
jp
add
lret
fiadds
clc
jg
rorb
test
out
aam
daa
imul
sbb
leave
mull
scas
in
push
bound
jne
sbb
iret
inc
dec
xor
mov
ds
lret
movsb
sbb
cmovne
or
jns
in
mov
xchg
mov
pop
jge
lds
pop
cmp
pop
repnz
or
fcmovb
fs
sarb
mov
aaa
sub
and
adc
cmp
xor
pop
add
adc
pop
insb
shrl
xlat
push
cmp
mov
int
dec
pop
pop
bound
in
mov
js
ds
mov
stos
stos
sbbb
push
ss
fnsave
testl
push
cmc
sbb
fsubl
ss
ret
or
mov
pushl
mov
mov
xor
pop
push
xor
inc
jg
adc
js
sub
inc
push
lcall
imul
das
shlb
fisubl
mov
std
adc
das
lock
outsb
in
push
lds
jb
xor
pop
aam
xor
sub
push
outsl
mov
xor
iret
sub
repz
stc
out
sbb
inc
xchg
dec
ljmp
add
popf
fcmovb
lret
shlb
cmp
mov
jge
cltd
sub
addb
push
mov
lret
mov
lods
dec
add
xchg
test
out
inc
or
aam
mov
aas
xchg
mov
es
sti
subl
stos
mov
push
in
scas
jg
adc
fiadds
addr16
loopne
jmp
fwait
dec
or
ret
jnp
sbb
xchg
cmc
sarb
cltd
sbb
jle
cvtdq2ps
subl
movsb
jne
ret
push
pop
add
clts
test
mov
xchg
enter
repz
notl
loop
mov
adc
in
cmp
repnz
lret
pop
pusha
pusha
push
subb
xchg
push
test
out
loopne
add
int
notl
add
test
pushf
ljmp
ljmp
xchg
lock
pop
rcrl
pop
cld
rolb
xchg
jbe
adc
aaa
xchg
or
int3
ja
into
xor
aas
loopne
cmp
push
pop
add
xor
sub
jmp
or
movsl
jnp
dec
sub
aad
cwtl
loopne
xor
or
sbb
fnstsw
push
scas
out
movsb
cld
xor
adc
adc
sub
subb
jns
adc
int3
and
xor
cwtl
push
int
dec
and
xchg
cmpb
sahf
imul
mov
lock
fsub
test
pop
ss
and
lods
sbb
leave
inc
adc
mov
jl
mov
sub
nop/reserved
jbe
adc
scas
loop
test
testl
or
arpl
jnp
movsl
popa
popa
sbb
sti
mov
aas
xchg
xchg
shll
roll
sbb
in
xorl
icebp
inc
jo
data16
repz
shlb
lahf
add
std
leave
stc
stos
int
mull
fisttpll
mov
and
insl
jmp
mov
xor
adc
sbb
pusha
cmp
movsb
dec
pop
xchg
cmc
mov
int3
pusha
push
sbb
pushf
fstps
psubd
loop
imul
xor
add
test
dec
imulb
mov
or
lds
add
popf
movsb
mov
hlt
xchg
je
jo
leave
popf
leave
xchg
rcll
xor
aaa
mov
jns
mov
cmp
insb
rcrl
jnp
or
mov
sub
push
dec
int3
sub
dec
shll
add
popf
fisttpll
push
adc
lds
mov
jl
fists
clc
cmp
jno
int3
inc
and
lods
rorb
inc
nop
fistpl
cld
mov
loope
mov
int3
jbe
dec
pushf
fs
pop
xchg
out
fs
in
js
sti
sub
into
mov
call
or
push
data16
cltd
pop
stos
jnp
xchg
out
gs
roll
sub
popf
jo
jno
mov
lock
mov
add
or
lret
adc
movsl
enter
add
aas
cmp
mov
mov
adc
mov
push
mov
mov
dec
pop
outsl
fdivrs
int3
call
dec
xchg
test
push
out
push
dec
mov
push
nop
ds
dec
push
jle,pn
jge
push
pop
stos
inc
or
rcl
mov
enter
push
xchg
pop
testb
dec
mov
and
mov
or
cltd
and
movsb
js
mull
lret
movups
jg
xor
push
or
adcl
cmp
test
sbb
lcall
lods
mov
cld
movsl
cmp
loop
jge
dec
dec
loope
out
or
out
push
pusha
adc
cmpsb
add
dec
and
scas
int
add
mov
ss
into
movsl
push
fsts
imul
outsl
loope
push
jg
mov
and
addb
jp
inc
pop
and
adc
add
popa
icebp
mov
xor
pop
ret
fimuls
scas
push
fwait
inc
cmpsl
jecxz
mov
xor
and
mov
setl
mov
int3
adc
cmpsb
imul
xor
sub
lahf
shll
mov
stos
mov
lods
faddl
xchg
xorl
cmc
mov
push
sbb
or
mov
cld
inc
dec
fs
daa
mov
xor
push
mov
testl
xchg
inc
jne
push
or
push
in
xchg
push
cmp
outsb
insb
and
pop
jmp
jae
mov
cmp
xchg
adc
icebp
in
adc
cmp
inc
mov
out
mov
fbld
test
pop
jecxz
out
xchg
ds
out
lcall
mov
in
lds
fcmovne
xchg
xor
adc
jmp
movsl
in
std
sbb
jmp
mov
movsb
mov
cmp
mov
xor
cwtl
xchg
or
test
push
add
insb
or
xchg
pop
sbb
bound
shlb
dec
andl
adc
dec
lods
jbe
into
addr16
push
xlat
lock
dec
outsl
imul
fldl
mov
cmc
push
ljmp
dec
rorb
pop
imul
inc
pushf
sub
pop
mov
inc
movsb
fisubrl
or
daa
inc
or
dec
mov
xor
mov
cmpsb
pop
jae
push
or
cmp
les
idiv
xor
divb
leave
add
fbld
jo
movsb
movsb
jae
jno
out
mov
outsb
cmp
lods
jo
pop
jge
lods
jbe
pop
sub
int
shl
jmp
or
pop
mov
ret
stos
mov
pop
loope
lods
pusha
cs
mov
mov
cs
mov
cli
jg
clc
dec
clc
ja
mov
fisubs
xchg
or
or
inc
lret
in
push
stos
addb
in
dec
movsb
pusha
mov
cmp
je
xchg
jb
and
sbb
aam
js
scas
dec
ret
pop
xor
pop
subb
icebp
mov
bound
xlat
shlb
jno
fisttps
daa
adc
add
add
orl
xchg
fbld
fwait
xchg
push
jg
jp
xchg
mov
sahf
mov
jnp
icebp
out
mov
fdivr
pop
xor
jno
ds
mov
fwait
lret
mov
xchg
jl
cmpsb
xchg
add
mov
lahf
cld
repnz
or
adc
mov
sbb
lea
pushf
test
xchg
ss
mov
push
lea
ret
mov
in
add
mov
lret
rorb
outsb
hlt
mov
push
lock
xchg
cmp
jge
push
mov
mov
jns
movb
or
push
loope
mov
adc
inc
out
stos
cmp
inc
pop
insl
sub
adc
cwtl
and
in
pop
lds
movhps
lcall
fs
shl
std
pop
push
bound
xor
loope
lcall
mov
sub
xorb
jge
fwait
push
test
out
pop
daa
dec
jo
mov
int
out
ss
cmp
ljmp
inc
inc
xchg
push
fbstp
adc
inc
iret
dec
mov
push
push
lds
push
and
xor
or
inc
das
push
or
mov
mov
orb
cmp
jp
scas
xor
pop
fwait
dec
pop
inc
std
aaa
push
cmp
jbe
repnz
loopne
xchg
addr16
mov
push
and
or
lret
xchg
imull
cmpsb
test
xor
push
test
pop
jns
adc
mov
loope
sub
imul
stc
stos
daa
fwait
cmp
ljmp
jbe
enter
sbb
imulb
cld
shlb
or
ret
adc
test
int3
add
push
or
fsubr
jg
xor
lcall
adc
ds
test
dec
cmpsb
mul
sub
or
sub
insb
dec
xchg
fdivp
outsl
test
aas
ficomps
mov
pop
popa
lods
sub
mov
lods
lods
sbb
popf
cltd
xchg
aam
cs
and
push
addr16
or
mov
sub
call
jle
int
jo
imul
push
mov
aaa
push
shll
push
or
repnz
fwait
pop
mov
jbe
fidivrl
pop
add
jno
inc
fisttpll
enter
mov
xchg
jp
repnz
jnp
and
push
sbb
lock
fwait
stc
sub
adc
adc
mov
mov
std
in
adc
out
int
mov
adc
cmp
sbb
fildl
mov
incb
ficoml
fcoml
push
out
mov
data16
mov
and
cmp
test
adc
inc
or
test
xchg
cmp
aad
scas
cmp
repnz
dec
cmp
mulb
xchg
xchg
popa
notl
mov
and
nop/reserved
rclb
stos
sub
xor
mov
out
jb
ds
and
jo
inc
daa
inc
aam
call
cmpsb
arpl
pop
push
lods
mov
push
in
notl
jns
xchg
cmp
popa
inc
inc
out
jp
and
int3
xchg
ds
push
push
xor
lds
inc
sub
enter
js
pop
cs
and
lcall
das
add
dec
push
scas
mov
lgs
mov
lea
addl
inc
jae
int
inc
arpl
notb
cld
pop
mov
xor
out
movsl
insb
push
mov
add
popl
jmp
pop
sub
cmp
jne
lea
dec
cmp
not
push
mov
mov
mov
pusha
lods
loop
dec
sbb
cltd
cli
js
rcll
aam
pop
into
mov
add
mov
int
ror
pop
push
int3
jne
adc
add
mov
dec
mov
lcall
dec
addr16
mov
neg
dec
xor
cmpsl
adc
xchg
repnz
lret
pop
ss
cmp
outsl
lds
fisttpl
cwtl
mov
cmp
cmpsb
push
and
dec
mov
insb
jecxz
inc
nop
outsl
out
mov
fidivs
pushl
fimuls
add
jbe
and
in
and
pop
xlat
push
leave
mov
xor
mov
sub
cmc
enter
arpl
in
cs
into
lret
jmp
call
push
leave
xlat
jge
rcr
mov
movsl
xchg
rolb
sahf
jno
mov
shl
out
ret
add
adc
js
call
mov
or
mov
jmp
je
outsl
out
out
mov
add
arpl
icebp
leave
pop
or
hlt
inc
dec
adc
out
stos
shll
faddl
mov
cmp
push
pop
lods
mov
jg
fwait
loopne
xchg
stos
int3
adc
dec
popf
or
lcall
pushf
xchg
cwtl
sub
ret
pop
mov
cmp
mov
mov
lds
jge
negb
mov
or
rorb
or
cltd
jmp
cmp
mov
mov
mov
orb
pop
int
inc
test
frstor
adc
jmp
xor
into
inc
test
adc
xchg
jp
sbb
enter
rolb
in
xchg
or
add
in
aad
xlat
mov
or
add
fldl
pop
movsb
bound
pop
lock
icebp
mov
cmp
sub
lcall
push
pop
and
addl
cmc
mov
cmpb
out
arpl
or
jle
stos
dec
loopne
and
mov
mov
es
cmpsl
and
xchg
fidivl
sub
jmp
cmp
out
ret
mov
ret
rorl
popa
adcl
mov
test
and
addr16
dec
movsb
mov
lcall
jge
movsl
fnstenv
stos
add
incl
pop
sub
nop
ret
add
addl
sbb
cli
pop
adc
xchg
dec
cmovo
les
jbe
lahf
push
jg
es
sbb
sti
mov
pop
cmp
test
mov
adc
xchg
xchg
mov
mov
sbb
icebp
mov
sbb
sub
lock
push
aas
sub
mov
dec
fcmovnbe
and
adc
xor
mov
jmp
aam
call
lcall
mov
jae
mov
adc
mov
mov
jae
loope
sub
out
inc
ds
sarb
add
into
dec
xchg
into
and
mov
adc
das
popl
sahf
int3
cmp
inc
das
test
push
add
fs
jo
fisubrs
int
loope
je
sub
and
xchg
xor
sbb
sbb
pop
into
xchg
icebp
mov
mov
decl
or
push
mov
lahf
xchg
xor
daa
add
xor
dec
add
mov
scas
clc
dec
jle
and
mov
sbb
adc
sbb
or
mov
and
repz
into
cmc
fists
adc
inc
jne
xchg
mov
andl
mov
cmp
adc
adc
lock
xor
xchg
cmp
or
ffree
adc
repz
shll
scas
lahf
lret
loopne
ds
dec
mov
pop
daa
inc
sub
push
test
cmp
add
inc
add
and
dec
fdivs
out
or
call
and
sbbb
cmp
push
mov
sbb
push
aaa
mov
fnstcw
xor
insb
mov
lock
push
daa
adc
mov
and
shrb
repnz
scas
lcall
xchg
mov
jo
xor
sbb
pop
unpckhps
or
mov
jl
imul
repnz
jne
add
jne
push
add
mull
imul
push
movsl
pop
mov
cwtl
leave
xchg
cmp
pusha
movsl
dec
roll
les
cmp
or
cmc
sbb
stos
insl
jae
jbe
jns
lcall
adc
sbb
pusha
sbb
ss
ffree
negl
add
dec
and
push
xchg
and
sub
jecxz
add
add
mov
ret
jp
ljmp
pop
mov
mov
jb
cli
dec
jle
pop
jmp
mov
cltd
out
adc
fdivrs
jae
orl
mov
dec
jb
dec
gs
sbb
fnstcw
test
xchg
inc
mov
out
adc
or
add
ljmp
jmp
imul
sbb
int3
lods
test
rclb
xchg
lea
imul
mov
fadds
mov
add
push
lea
xor
out
xchg
aad
xorl
dec
cmpsl
xchg
xchg
mov
sarl
sarb
int3
rol
mov
aam
into
scas
push
std
sbb
fldt
inc
cmp
pushl
adc
dec
push
pop
mov
lea
xor
loop
pop
push
adc
or
call
fistl
or
int3
or
stos
loopne
nop
sub
loope
inc
dec
mov
xor
aaa
pushf
popf
rcl
mov
push
push
pop
jecxz
push
mov
outsl
fwait
sbb
aad
iret
sbb
jmp
pop
mul
ds
mov
scas
pop
outsl
jo
test
mov
or
aam
rorb
push
or
and
lds
in
cmp
mov
call
or
popf
out
ficoml
add
jmp
push
xchg
mov
xor
lea
xchg
cmpsl
loop
popf
or
jbe
imul
jnp
pop
xchg
jbe
cwtl
loop
lret
aas
push
in
cltd
lods
adc
pop
sub
out
out
dec
xor
xor
adc
mov
pop
add
sbb
pusha
addl
cli
mov
push
js
and
inc
mov
fucom
dec
inc
adc
mov
add
jnp
xor
jmp
adc
push
lahf
add
jns
icebp
out
icebp
inc
test
hlt
ret
dec
mov
cmpsb
in
loopne
mov
adcl
mov
ret
mov
fxch
fimuls
mov
idiv
xor
fwait
iret
popa
ja
and
orb
sbb
pop
xchg
mov
add
ret
push
mov
sbb
movsl
aas
in
pop
lds
shrl
inc
sub
fninit
pop
pusha
pop
lea
test
sti
lret
pop
xchg
std
pop
jae
push
lea
mov
add
push
cwtl
mov
jbe
fstpl
cmp
xorb
ss
or
push
sbb
test
push
insb
mov
shll
leave
mov
dec
sub
mov
dec
loopne
inc
jge
fiadds
stc
inc
dec
cli
pop
cmpsl
testb
xchg
xchg
pop
xchg
sti
mov
push
adc
es
outsl
jp
cwtl
scas
mov
shll
jae
adc
scas
add
push
pop
mov
into
mov
pop
jb
jp
and
orb
sbb
sub
int3
add
cmpl
push
ljmp
cmp
fcmovnu
loope
sti
pop
xchg
loop
loopne
movsb
xchg
push
mov
in
int3
addr16
outsl
imul
arpl
orb
mov
mov
xor
fisubs
sub
cmp
mov
cmc
cmpsb
jae
adc
fbstp
cmpsl
mov
gs
sbb
inc
fs
cltd
sub
cmp
sub
cmp
jo
lcall
push
sub
and
fxch
mov
dec
in
pop
std
andl
rorb
sets
loopne
movsb
insl
mov
popa
lods
add
nop
pop
push
outsl
and
mov
jge
in
jnp
push
test
sbb
imul
aad
insb
adc
adc
popa
test
in
and
mov
xchg
bound
add
jecxz
not
push
mov
fisttps
lds
jo
enter
cmp
pusha
rcrl
clc
mov
jae
dec
adc
frstpm(287
inc
mov
xchg
hlt
cmp
cltd
cmp
inc
cmpsl
insb
cld
mov
jge
push
xlat
cmc
cmpsb
inc
xchg
xchg
das
adc
in
ret
addr16
mov
outsb
leave
add
loopne
xlat
and
imul
hlt
add
sti
push
adc
dec
pusha
xchg
sbb
int3
fiadds
fsubl
mov
jns
icebp
jns
fsts
es
in
rorl
roll
mov
push
lahf
xor
test
mov
jmp
cmc
das
bound
add
xchg
pop
dec
mov
pushf
mov
pop
ljmp
sti
add
xor
je
out
cmp
jl
jge
sti
loop
mov
push
mov
mov
adc
data16
ja
pop
adc
cmp
sbb
call
mov
mov
push
scas
or
mov
mov
out
jl
mov
int
cmpsl
sub
sbb
js
hlt
cld
inc
pop
ror
mov
jne
push
out
push
loopne
and
out
adc
decl
dec
int
push
rclb
mov
shl
mov
sahf
push
mov
dec
inc
or
add
push
nop
mov
inc
lods
mov
adc
or
out
fwait
cs
lods
sub
mov
sti
jl
xchg
orl
add
loopne
fcoml
xchg
pop
mov
and
outsl
jle
sbb
mov
loopne
cld
add
mov
ss
push
mov
aam
fiadds
add
aam
jne
les
pop
and
jecxz
repnz
call
sub
loop
loope
popa
push
add
test
lret
cs
cwtl
repnz
sub
xor
icebp
call
add
push
scas
inc
add
paddsb
adc
lods
and
pop
jmp
inc
pop
fdivs
xchg
xlat
jo
mov
lret
mov
xor
and
nop
roll
sub
mov
push
mov
cli
loope
fiadds
repz
xlat
testb
arpl
lock
or
iret
in
xchg
ds
loop
mov
add
fdivs
leave
fcmovnbe
rolb
pop
out
icebp
scas
jecxz
fadds
mov
xchg
xchg
pop
xchg
aas
dec
cmc
call
stos
xchg
ljmp
inc
fsubs
mov
inc
xchg
imul
leave
sbb
mov
xor
xchg
bswap
mov
repz
xor
pushf
bound
ss
dec
insb
adc
out
call
negb
or
ret
pop
das
mov
push
pop
xchg
push
jmp
mov
cwtl
sarl
jle
sub
gs
lret
add
push
inc
scas
testb
xchg
push
filds
fimull
xlat
lods
test
xchg
in
jecxz
mov
pop
gs
fwait
cmp
adcb
xchg
orl
insl
add
es
mov
dec
imul
mov
inc
mov
xchg
and
lahf
ljmp
inc
mov
xorl
adc
or
dec
xchg
lock
mov
stos
mov
or
dec
ss
in
jne
adcl
idiv
jae
sub
mov
js
sbb
mov
pop
adc
add
sub
push
data16
xor
das
ret
sbb
inc
scas
test
testb
test
adc
fbstp
add
addb
add
cmp
jns
test
xchg
cmc
mov
scas
inc
add
loop
mov
in
shlb
ljmp
mov
sbb
sti
jbe
data16
pop
mov
sub
sbb
in
add
jae
jae
in
mov
cltd
or
loopne
mov
sbb
jo
or
aam
pop
cmc
and
mov
cld
mov
mov
mov
mov
xor
imul
xor
push
sbb
test
sub
aam
outsl
adc
pop
scas
in
cmp
cmc
dec
int
add
push
loopne
fdivl
and
and
mov
cli
jnp
lods
das
push
sbb
cli
jns
or
outsb
les
lret
jno
inc
cs
stos
sarb
and
pop
push
cs
lds
jnp
sub
outsb
ret
cmc
ficoml
push
jbe
icebp
pop
push
loopne
sbb
pop
scas
add
mov
enter
and
fdivrl
mov
sub
mov
or
sub
and
inc
sbb
sbb
pushf
fldenv
jp
aam
inc
in
shlb
fldl
pop
dec
pop
sub
push
test
adc
mov
adc
rorb
cmpl
mov
aaa
loopne
dec
mov
add
adc
push
push
push
mov
clc
rcll
idiv
imul
push
mov
and
and
ljmp
mov
push
sbb
mov
je
sub
push
inc
sub
jno
out
scas
iret
sbb
sahf
push
cmp
sub
xor
je
push
add
dec
daa
or
xor
mov
lods
loopne,pn
ret
lods
lret
add
shrb
mov
mov
mov
inc
lods
mov
psrld
cltd
cltd
jae
cmp
xor
xchg
out
cmp
cltd
dec
nop
jg
loop
add
push
in
int3
sub
lods
std
ficomps
bound
push
mov
into
mov
mov
lds
int3
and
pop
pop
stos
pushf
inc
fwait
xchg
ja
sbb
jg
mov
pusha
mov
jo
out
lahf
loope
mov
inc
pop
push
clc
in
jno,pt
pop
jne
mov
cmpsb
outsb
ja
cwtl
dec
sti
mov
cmp
les
and
incl
xchg
push
rcrl
mov
lret
mov
scas
and
loopne
cltd
ja
cli
or
test
lcall
icebp
ret
jb
in
dec
or
lods
pop
outsl
push
mov
mov
jl
scas
sub
es
cmp
pop
mov
pushf
int
cli
mov
mov
pusha
in
in
ret
jno
movsl
cli
inc
sahf
mov
stc
or
shr
xor
scas
inc
sub
mov
fdivp
outsb
or
pop
iret
inc
aas
je
loopne
jae
xor
shll
lock
push
mov
add
pop
xor
and
cmp
fbld
sbb
shlb
and
lcall
adc
aas
cmp
xlat
and
in
ret
sarl
nop
ret
jo
dec
adc
mov
mov
add
dec
mov
addl
xor
add
adc
dec
mov
sub
xchg
test
bound
test
stos
jnp
int
xchg
add
jb
in
stos
inc
sbb
sbb
loop
scas
scas
pop
add
jmp
mov
lods
stos
test
aam
push
jmp
out
jge
popf
shll
jmp
sbbl
pusha
aam
xchg
add
shrl
jge
jecxz
jns
popf
or
in
mov
jns
or
inc
cld
loop
cwtl
adc
out
pop
push
inc
insl
mov
insl
negb
gs
push
xchg
in
jmp
subl
call
cmp
mov
mov
or
or
cltd
jo
into
and
add
jg
cmp
fs
faddl
movsb
adc
inc
icebp
inc
pop
cmp
cltd
into
dec
push
dec
and
mov
xlat
add
push
add
cmc
das
pop
ret
insb
pop
movq
pop
jbe
cmp
aaa
add
jbe
mov
repnz
aad
sbb
mov
iret
push
div
fiadds
scas
and
or
jg
call
daa
loopne,pn
das
ss
enter
dec
mov
cmp
mov
gs
mull
jno
cltd
mov
pusha
inc
mov
cmp
ffreep
xchg
mov
push
xor
mov
mov
sahf
lahf
push
sti
dec
lea
test
sbbl
inc
mov
mov
inc
insl
iret
mov
mov
xchg
imul
enter
lret
mov
fsubrs
int3
les
push
enter
test
jne
icebp
and
loope
jae
or
test
xlat
xchg
xchg
aad
ror
cmpsb
fs
xchg
add
add
adcb
ret
movsl
ret
jbe
sahf
fisubl
rolb
insl
ret
loope
push
ljmp
sub
int3
add
lcall
test
push
negb
adc
repnz
lock
or
sub
jge
movsl
jg
out
mov
ja
lret
push
xor
repz
je
push
stos
xor
add
fcom
mov
push
push
cli
or
push
adc
mov
sub
mov
mov
and
shlb
or
mull
sbb
pusha
jne
add
mov
mov
sbb
ret
dec
imul
dec
cmc
fildll
or
push
sbb
add
cltd
out
pop
cs
imull
popf
pushf
inc
push
inc
xchg
and
in
lods
sub
and
pusha
mov
and
push
sbb
fnstsw
pop
mov
aam
popf
jecxz
pop
fbld
mov
push
leave
adc
in
and
inc
rolb
lcall
gs
jl
call
jne,pt
push
imul
faddp
fistps
lret
jp
sbb
testb
jo
pop
out
push
or
pushf
dec
gs
push
cmp
popa
jmp
dec
mov
negb
cmc
and
adc
push
cmp
in
orl
xchg
jnp
mov
xor
add
dec
in
bound
mov
add
cwtl
es
fnstsw
decb
shrl
popf
pop
add
test
arpl
adc
outsl
aad
nop
les
ret
clc
arpl
push
pusha
pop
xchg
xchg
jmp
das
inc
popf
or
mov
cmp
pop
or
pop
pop
rorl
sarl
fisubrs
lods
and
mov
mov
push
in
ret
dec
mov
inc
and
jo
aas
imul
mov
or
jmp
push
adc
mulb
fistpll
adc
sub
dec
sub
push
in
xchg
mov
jae
mov
cmc
arpl
in
inc
loope
pop
das
in
mov
rcl
mov
jle
push
mov
pop
adc
or
push
or
es
cmpsl
jnp
pop
insb
das
xlat
jg
stc
adc
sub
movsb
mov
fs
rclb
xor
adc
andl
test
test
sti
lahf
nopl
add
push
xchg
and
inc
sbb
xor
shll
in
pop
dec
xchg
enter
or
or
mov
dec
movsl
pop
fidivl
xor
mov
push
pop
js
imul
push
xchg
cmp
xor
shlb
fbld
sub
mov
jns
mov
sqrtps
and
hlt
test
aad
sub
push
orb
out
adc
push
and
or
pop
sub
add
bound
iret
scas
lea
jmp
push
mov
jne
jno
rcll
addl
cli
sbb
push
loopne
popf
into
in
mov
pop
cwtl
push
andb
push
into
rcl
mov
pop
push
add
popf
adc
les
fcoms
imul
out
lods
es
pop
ljmp
mov
sbb
ffree
icebp
stc
jo
popa
fldcw
sub
adc
add
ss
add
cmpsb
and
loopne
dec
mov
xchg
rorl
pop
mov
out
cmp
mov
cwtl
cltd
add
ljmp
xchg
js
pushf
mov
stos
lea
or
ds
and
repnz
sarl
loopne
popf
shlb
jmp
jbe
idivb
add
pop
jp
push
dec
test
in
leave
lods
mov
xchg
or
push
ficomps
nop
jnp
sub
push
filds
cli
mov
stos
sub
dec
jns
mov
and
push
pop
hlt
pusha
andl
outsl
rcrl
mov
dec
repnz
cmpsl
sub
pop
xchg
mov
xor
cmc
into
push
dec
dec
pop
push
test
add
pop
and
or
mov
ror
dec
stc
fiadds
les
cmp
pop
mov
ss
mov
sub
jmp
add
mov
cmpsl
cli
mov
jbe
in
sub
sar
add
pop
or
lea
xchg
jecxz
insb
sbb
mov
lods
and
xlat
jmp
cmpsb
mov
lods
test
in
xchg
add
sbb
sub
sbb
xor
xor
pop
mov
add
xor
test
int3
inc
aam
xor
cmpsb
ja
xor
ret
sbb
sub
pop
fs
xchg
cld
wrmsr
inc
sub
cmp
stos
push
cmp
rcr
jg
xor
cmp
insb
push
orl
xchg
xchg
sti
lods
aad
push
and
movsb
add
stos
cmpsb
sbb
jo
mov
pop
dec
imul
subb
xor
das
movsl
loope
lods
fldcw
pop
xchg
cmp
lcall
outsb
xor
jns
jmp
fwait
lock
sub
mov
mov
inc
jnp
in
xchg
add
lret
inc
adc
mov
sbb
popf
mov
cmp
inc
gs
fs
cli
fnsave
sub
das
ret
es
push
dec
and
mov
repnz
push
or
push
sub
popf
cmp
shrl
sbbb
inc
fldt
lds
mov
test
xor
cld
cmc
inc
dec
dec
rcl
adc
sarb
jno
scas
das
jmp
cmp
add
inc
cmpsb
cmp
loopne
testl
decl
stc
add
mov
pop
pop
mov
xor
repz
mov
xorl
test
add
pop
mov
ret
loopne
scas
popl
dec
mov
push
adc
mov
jmp
out
and
inc
jp
movsl
dec
out
mov
and
mov
es
jns
jmp
dec
repnz
mov
pop
jecxz
les
adc
dec
pop
jmp
fstpt
arpl
xchg
jl
push
push
fistl
loop
cs
icebp
jno
sub
mov
fdivrl
ds
cmp
loop
sbb
jp
out
fiadds
mov
ljmp
cld
pushl
lcall
out
imul
std
mov
xor
gs
push
jmp
inc
mov
mov
shlb
lea
jp
lock
fbld
leave
and
test
je
daa
ret
jmp
add
loop
push
jno
pop
and
stos
ret
jmp
or
aaa
cmp
mov
fistps
cmp
je
addr16
mov
popf
dec
mov
sahf
or
push
mov
sbb
xchg
pop
xchg
repnz
fldenv
mov
sahf
add
jle
enter
pop
in
sub
jo
loope
lds
mull
xchg
xchg
inc
testl
leave
dec
clc
and
int3
inc
loope
cmp
inc
shr
into
in
out
xor
adc
push
popa
imul
and
jl
jne
dec
push
mov
cs
jmp
ret
aaa
xchg
loope
rcrb
or
in
pop
fidivrs
sbb
dec
xchg
cmp
xchg
sbb
ret
cs
stos
xchg
xchg
adc
xor
das
mov
sub
repnz
in
jae
mov
xchg
cmp
xchg
xor
and
pusha
xchg
push
stos
cmp
in
jmp
pop
pop
jb
pop
call
bound
mov
sub
mov
popl
lret
je
js
mov
ss
sub
das
xor
addr16
fbld
repnz
lahf
xorb
enter
rorb
ljmp
sbb
call
lahf
pop
xchg
add
push
imull
mov
js
mov
imul
les
sub
sbb
loop
daa
xchg
mov
out
push
mov
fldt
enter
stc
bound
sbb
mov
pusha
adc
xor
cmpsl
ljmp
push
lock
inc
xor
rorb
pop
push
lea
dec
xor
jecxz
int
flds
mov
push
xchg
mov
scas
shlb
xor
aam
inc
add
outsb
je
push
push
mov
push
jo
insb
popa
icebp
xchg
test
into
xor
mov
or
inc
jo
xchg
mov
and
ljmp
xor
jmp
icebp
push
ljmp
cmp
lret
gs
push
lahf
iret
jecxz
ds
sbb
push
loope
fmulp
inc
jo
lods
sub
ret
jae
push
cmp
mov
dec
out
aad
mov
jecxz
les
fs
xor
xchg
push
inc
mov
nop
aas
jb
das
jno
fstp
imul
leave
pushf
cwtl
xchg
movsb
inc
cmp
test
mov
sbb
dec
mov
jno
pop
pushf
les
fistpl
pushf
lods
js
adc
sub
into
fcoml
xchg
into
push
rclb
mov
dec
and
pushf
adc
mov
das
int
into
add
das
push
daa
outsb
cld
fadd
push
push
push
repnz
ret
adc
aas
scas
xor
push
xchg
xor
lahf
mov
xchg
pop
inc
aas
jecxz
dec
xor
or
lret
enter
mov
mov
imul
les
cmp
scas
ds
push
inc
nop
stc
hlt
call
adc
add
in
push
mov
filds
rclb
xchg
cmp
push
gs
pop
mov
inc
arpl
mov
add
test
mov
js
ja
pop
repz
sbb
shrl
imul
in
aam
in
xchg
addb
popa
inc
idivl
pop
out
pop
sub
mov
aam
xor
in
in
xchg
lcall
ljmp
jnp
mov
shll
cmc
nop
mov
das
dec
jb
sbb
lock
add
pusha
jl
andl
xor
push
int3
sub
xchg
sub
arpl
xchg
test
add
xchg
add
jg
insl
test
scas
cmc
inc
shlb
andb
es
dec
add
mov
and
pop
lret
stc
sub
not
mov
gs
cmpsb
mov
xchg
fst
mov
pop
jmp
push
add
fiaddl
push
aad
cmp
sub
and
js
jge
rolb
inc
mov
sbb
stos
pop
mov
mov
js
mov
insb
xchg
jp
stos
pop
loope
adc
out
ds
rol
fcompl
sarl
sti
inc
inc
xorl
cmp
popf
lret
scas
cmp
jno
repz
mov
cmp
add
inc
pop
mov
lock
jo
inc
scas
shl
cmp
cmc
adc
push
std
adc
pop
fdivrl
pop
mov
ret
hlt
test
adc
jno
repnz
and
scas
sub
xchg
push
nop
push
fnsave
sysexit
inc
imul
pop
test
mov
cltd
shrl
mov
dec
mov
subb
inc
aad
adc
adc
neg
es
add
mov
out
pop
test
outsl
push
clc
mov
push
sub
bound
fildl
loop
adc
aad
xor
test
and
push
mov
ja
ss
dec
push
gs
mov
imull
mov
insl
sbb
movsb
and
in
add
stc
xor
sbb
jo
mov
ret
fs
aam
hlt
pop
aas
ljmp
sti
xor
aaa
xchg
xchg
icebp
aad
add
stos
imul
pop
xchg
stos
xor
sbb
push
jge
mov
pop
inc
pop
inc
push
dec
movsb
xchg
sqrtps
mov
gs
shrl
adc
scas
push
sub
scas
bnd
int3
jp
dec
movsl
sub
dec
pushf
jl
pop
dec
icebp
adcb
fstl
fildl
xor
movsl
addb
and
fwait
mov
add
in
mov
and
test
aam
jno
ret
fsubrs
jns
and
data16
jecxz
lcall
call
jne
insb
push
repnz
sbb
mov
pop
or
lods
adc
mov
das
adc
in
shlb
and
adc
xor
dec
push
dec
cmpsb
hlt
loop
or
mov
cmp
mov
in
movsb
pop
test
xor
push
out
sti
cmpsl
test
data16
push
inc
loopne
js
test
jae
inc
push
cmp
or
add
repz
lahf
shll
ja
and
push
sub
imul
mov
nop
fwait
insb
or
movsl
inc
repz
adc
sub
repnz
adc
repz
adc
sbb
int
cs
push
cmp
pop
aam
and
mov
inc
mov
and
cmp
sbb
mov
sti
dec
sub
nop
inc
and
lcall
and
xor
jl
mov
mov
pop
dec
data16
mov
dec
fstpl
nop
jle
in
push
push
or
data16
iret
fadd
repnz
sarl
out
jge
xor
fst
loope
dec
lock
mov
fldenv
xchg
cli
cmp
mov
gs
and
aad
outsl
pop
aas
insl
jne
or
mov
xor
mov
imul
lea
xor
or
adc
outsl
repz
jbe
loope
mov
sub
pop
dec
jne
in
inc
ja
pop
mov
sub
hlt
xchg
jmp
sbb
shlb
jno
fdivs
gs
rcll
lock
sub
jecxz
es
ss
in
in
jg
scas
rcrb
arpl
fidivs
mov
cld
jns
and
add
pop
divb
and
adc
movd
ja
xor
mov
cmc
xor
mov
es
call
inc
cmpsl
jno
mov
insl
xor
jl
int
dec
push
pop
sbb
fists
test
pop
mov
dec
push
decb
rcll
xchg
sub
imulb
sub
outsb
jge
xlat
out
sub
int3
push
add
and
mov
pop
gs
adc
inc
adc
mov
push
loop
xor
jne
jge
pop
push
mov
in
stc
sarb
aas
jne
mov
xchg
push
pop
jp
inc
mov
stos
mov
push
aas
loope
sbb
punpckhwd
fistl
mov
mov
mov
push
jb
movsl
push
mov
and
enter
cmpsb
fsubs
sub
lea
mov
les
mov
out
aad
cmpsb
mov
mov
mov
rclb
push
cmp
dec
mov
test
pop
sub
or
aaa
jae
lds
dec
push
clc
inc
xor
pop
ret
ja
pushf
inc
jne
push
je
xor
fcmovbe
push
inc
fcomps
or
xor
in
mov
aaa
ja
lcall
das
xor
gs
popf
adc
test
push
lods
stc
jle
sub
mov
lds
test
in
in
add
lret
rorb
add
jmp
aaa
or
outsb
aaa
mov
out
xor
push
lock
dec
mov
xor
pushf
xchg
lods
into
ror
xor
fs
sahf
jb
xchg
dec
and
and
insb
pop
jbe
mov
pusha
in
sub
loopne
jle
xchg
jno
add
mov
jmp
xor
imul
jle
inc
std
push
dec
mov
push
cmp
popf
insb
or
inc
out
and
adcl
es
jge
nop
addl
xchg
mov
xchg
sbbb
insb
in
repnz
dec
push
push
mov
mov
dec
stos
int
rorb
pushf
inc
ror
push
mov
mov
cli
out
cld
loope
sub
das
inc
mov
shll
dec
jmp
jbe
scas
dec
adc
mov
mov
mov
aas
rdpmc
mov
and
mov
ja
outsl
ja
mov
jbe
mov
jp
nop
sub
in
jmp
jg
andl
push
fdivr
ret
lcall
adc
push
sbb
in
push
jl
cmpsl
pop
mov
iret
ret
sub
or
mov
or
in
and
int3
xchg
xor
dec
adc
fwait
loopnew
cmc
mov
inc
into
push
dec
mov
in
testb
loop
mov
insl
mov
call
repnz
inc
pop
ret
dec
ds
aas
and
dec
ja
out
jae
divl
or
xor
imul
pop
mov
adcl
xor
ret
jg
xchg
mov
push
sub
xchg
out
fcoms
dec
inc
dec
rcrb
mov
dec
ret
mov
cmp
aam
and
repz
mov
push
shlb
filds
pop
mov
es
push
aad
add
jne
lahf
pushf
mov
into
ja
adc
add
repnz
mov
cmp
xor
test
jge
iret
push
fs
lea
inc
mov
push
aas
mov
div
mov
sti
addr16
ret
mov
dec
jl
popa
push
dec
cltd
fnstsw
add
daa
flds
fdivrl
hlt
jle
push
stos
inc
mov
mov
jp
jb
mov
sub
int
sub
addl
xor
xchg
rcr
cmp
and
ror
mov
in
aas
mov
add
cmp
int
sub
in
popl
push
jg
sub
add
lret
mov
xchg
addl
shrb
sar
push
or
sub
sbb
test
or
in
cmp
cltd
nop
clc
and
xor
scas
in
mov
lret
stc
lock
inc
mov
loope
es
negl
mov
out
inc
mov
adc
push
jge
rclb
loope
stc
or
out
add
pusha
test
rclb
xchg
in
sub
sub
xchg
jb
cmp
in
insl
stc
in
mov
adc
idivl
icebp
shll
inc
shrl
and
enter
cmp
mov
inc
push
mov
lea
in
jb
push
pop
popf
jge
decl
lds
and
lea
jge
push
sub
jg
dec
xlat
cmp
xchg
outsb
add
and
xchg
pop
sbb
fists
test
adcb
inc
roll
lods
or
xor
dec
cmp
mov
mov
fdiv
inc
jne
sbb
out
xchg
sub
aam
mov
cmpsl
mov
xor
sbb
in
rorl
std
dec
test
orl
test
add
push
je
push
out
push
mov
mov
mov
xor
test
stos
shll
movsl
orb
fidivrl
lahf
cmpsl
push
jns
mov
ds
push
ja
cmpsb
call
ljmp
fsts
dec
adc
lcall
or
clc
aaa
mov
insb
mov
stos
loopne
dec
pushf
test
pop
mov
rcll
loopne
cmp
bound
addr16
cltd
jnp
fisttpl
sbb
and
xlat
push
xchg
fadds
nop
xchg
mov
adc
les
dec
imulb
ljmp
outsb
lcall
cmc
lcall
inc
and
mov
and
in
cmp
pusha
in
xchg
push
add
adc
lea
and
loopne
add
push
xor
cli
xchg
fs
ret
cwtl
push
addb
or
mov
ja
push
lock
xor
lahf
and
xor
mov
inc
loopne
pop
inc
mov
add
fwait
gs
lcall
test
ljmp
jno
xchg
sub
loopne
push
xchg
add
mov
jmp
inc
movsb
xorl
mov
mov
mov
shlb
adc
sbb
je
stos
push
divl
and
add
test
dec
adc
add
pop
arpl
pop
cmp
mov
not
or
hlt
mov
aaa
push
xlat
fsubrs
jae
jne
addr16
call
outsb
sahf
jns
and
pop
pop
insb
mov
mov
sub
jbe
enter
fbstp
jo
dec
inc
mov
out
mov
loope
xchg
and
mov
cltd
xchg
add
mov
jg
cmp
inc
inc
lcall
xchg
je
jbe
mov
imul
gs
sbb
data16
ljmp
xchg
ret
or
outsb
add
and
push
sub
aad
xorb
insl
aaa
pop
cmp
sub
iret
shrb
fdivs
pusha
add
mov
das
cmp
cmpsl
lock
in
mov
cmc
aam
xlat
loopne,pn
jns
jns
and
push
jb
aam
out
test
popf
scas
jmp
stc
cmp
int3
push
inc
sarl
xchg
sbb
std
test
shlb
and
mov
int
xorl
xor
push
shr
rcr
jns
gs
rcrb
push
mov
std
int
pop
and
sub
sar
out
arpl
add
sahf
cmp
add
shrl
and
cwtl
mov
adc
jbe
xchg
xor
bound
test
cmp
xor
stos
aas
inc
inc
lock
fsts
subb
fwait
mov
ret
nop
cs
popa
jge
cmpsl
sub
cmp
inc
xor
arpl
sub
ret
fwait
mov
ret
ret
inc
jmp
cmpsl
fistpl
lahf
mov
inc
jbe
mov
add
and
and
inc
cmp
inc
push
sbb
pushf
ljmp
loopne
mov
idiv
icebp
mov
lret
out
or
psubsw
lret
arpl
adc
push
loopne
mov
jle
add
and
nop
out
and
iret
arpl
pop
xchg
jmp
popa
sahf
stos
es
xorl
push
ret
jns
out
in
lds
inc
xor
cltd
sbb
and
push
dec
or
pop
in
push
dec
xor
lret
xor
mov
cmpsb
insl
daa
les
dec
cmp
in
imul
lods
loopne
cmp
hlt
shll
mov
loopne
inc
cld
xor
jge
fists
adc
sbb
rcrl
icebp
fnsave
and
inc
divl
inc
popf
cmpsl
test
sub
scas
sahf
mov
pusha
cmc
enter
jb
rcll
and
mov
push
push
push
or
sbb
gs
fistpl
neg
dec
lock
js
or
ret
mov
jge
cmc
cmp
cmpsl
push
jl
ds
or
jle
mov
xchg
push
cld
add
mov
xor
mov
mov
mov
pop
jnp
fisubl
outsl
shr
push
mov
pop
lock
add
pushf
aad
fnstcw
shlb
shr
imul
adc
push
inc
inc
jge
rcll
sbb
push
sbb
or
sub
jmp
dec
dec
outsl
lret
sub
shlb
inc
sub
ret
push
mov
and
jo
push
lock
pop
mov
dec
push
cli
mov
fnstcw
mov
jb
pushf
mov
in
inc
movsb
adc
cmp
xlat
inc
jnp
or
pop
mov
inc
adc
inc
push
lret
xlat
loope
std
sbb
or
jg
xchg
add
pop
pop
xor
lods
test
int
testb
push
push
cmp
clc
test
xlat
cs
jp
loopne
push
or
lret
iret
shl
mov
xchg
add
push
mov
pop
enter
sub
inc
rcll
sbb
adc
cs
inc
pop
pop
out
dec
and
lcall
cltd
lahf
lcall
xchg
out
stos
in
imul
push
jns
mov
or
out
movl
push
dec
xchg
xor
and
sbb
imul
dec
sbb
leave
pop
lret
mov
test
jle
pop
call
repnz
iret
jg
mov
repnz
dec
xchg
mov
test
lods
jne
and
stc
call
mov
dec
cmc
stc
ds
out
and
mov
bnd
call
scas
scas
loope
mov
and
and
test
mov
leave
fisubs
out
std
sub
gs
jp,pt
adc
mov
int3
int
sbb
and
sbb
adc
pop
sti
test
jge
mov
jbe
dec
addl
aad
and
mov
cmp
add
and
js
sbb
sub
jp,pt
cltd
pop
add
cmpsb
xlat
dec
jp
loope
fistpl
mov
pushf
xor
inc
mov
lock
push
ret
mov
ret
int
inc
mov
push
nop
pusha
out
cmp
xchg
rclb
pushf
mov
adc
leave
fs
iret
sbb
xor
fdivp
test
imul
cmp
fiadds
pop
cmp
xchg
xor
or
pop
cmp
sahf
pop
call
xchg
mov
cwtl
sub
andl
popa
pop
hlt
leave
or
movsb
aaa
jno
in
push
pop
mov
cmp
ret
sbb
adc
sbb
inc
out
mov
xchg
pop
sub
sub
mov
fcomps
in
adc
dec
sti
push
test
divb
mov
inc
fsts
shlb
push
lahf
push
stc
pop
jge
andl
inc
dec
inc
sbb
pop
rcrl
pop
movb
pusha
jbe
xor
mov
mov
cmpsl
xor
add
pop
jle
int
mov
pop
pushf
dec
inc
jne
push
fcompl
push
popa
pusha
not
mov
and
push
pop
inc
dec
fnsave
insb
outsl
jmp
jp
out
lods
fdivrl
and
iret
shll
push
ret
sti
add
pop
scas
adc
or
mov
inc
sub
cmp
and
jp
pushf
cmpl
dec
into
sbb
dec
sub
fstl
cmp
loope
jmp
inc
jae
in
fsubrl
cmp
push
data16
das
fidivrl
scas
and
push
lret
mov
jbe
sahf
pop
xchg
inc
add
loopne
mov
inc
pop
lcall
mov
ljmp
out
jno
fidivs
push
push
lods
inc
shlb
jae
in
nop
icebp
in
lcall
into
das
sti
neg
movsb
adc
mov
sub
sub
mov
scas
in
fdivr
dec
xchg
jge
cmp
mov
rol
lret
loopne
popf
fsubl
jbe
push
sti
mov
je
mov
mov
lods
push
imul
imul
ret
cmc
loop
add
pop
outsl
das
loopne
iret
dec
jge
xchg
in
pop
mov
mov
stc
ret
adc
add
cmpsl
push
cmpxchg
jne
bound
ret
clc
sub
inc
push
cmp
in
lret
ljmp
aam
pushf
push
sub
int
jne
cmpl
out
push
jno
out
lods
ja
pop
movsb
repnz
inc
jnp
lret
push
inc
mov
cmp
sub
add
lock
xchg
add
mov
sarl
arpl
and
fildl
dec
popf
stos
setno
incb
aam
movsl
cmpsl
and
fimull
and
mov
pop
mov
or
loope
pop
iret
mov
test
push
mov
insl
lahf
mov
dec
test
stc
mov
mov
push
ss
cmp
xor
adc
mov
inc
lea
loop
mov
push
mov
cmp
sti
push
stos
fcoms
xor
fistpll
and
mov
add
sahf
nop
cmp
mov
pop
cld
and
shll
or
loope
outsl
push
lahf
mov
or
xchg
popa
lret
mov
sub
mov
loopne
bound
movsb
xor
outsl
push
sbb
mov
cltd
add
cmp
fidivs
inc
negb
in
push
xor
jb
xchg
sarl
push
cmp
push
push
pop
std
jecxz
mov
or
movsl
jl
add
fldt
cmp
pop
mov
repz
ret
fisubs
inc
shrb
in
in
jp
mov
cmp
xchg
mov
cwtl
jae
cwtl
sbb
jne
std
lods
xlat
xor
mov
xchg
mov
mov
sbb
shlb
aas
sub
lret
dec
xor
or
shll
les
or
jnp
pop
and
inc
bound
sub
pop
pop
xchg
adc
mov
pop
pusha
jno
stos
sar
fidivs
js
ficoml
gs
ret
mov
mov
rcr
xchg
int3
aas
imulb
fcom
pop
shll
in
inc
pop
mov
jp
jno
mov
dec
or
jne
lahf
mov
shll
test
xchg
add
xchg
imulb
aas
or
insb
pop
dec
push
test
jnp
xchg
cli
sbb
lret
sub
mov
jno
adc
insl
push
sub
dec
cmp
xchg
add
cmpl
mov
clc
aaa
xor
push
sti
dec
setae
leave
lods
rcr
cmp
lret
adc
aas
add
out
std
jp
aad
pushf
int
lock
mov
shll
stos
sbb
fwait
fwait
ret
or
add
in
int
inc
sub
daa
cmp
dec
imul
jle
jge
mov
jae
mov
jo
stos
cmp
dec
out
movsl
popa
jle
dec
or
in
loop
lods
sub
arpl
sub
loop
cld
mov
outsl
test
loopne
or
out
mov
cltd
cmp
mov
xchg
jmp
repz
sbb
xchg
add
decl
cltd
jo
adc
xor
mov
lret
mov
inc
cwtl
push
and
xchg
mov
pop
dec
cmp
fwait
enter
mov
or
adc
ret
hlt
xchg
addl
mov
xchg
jge
inc
mov
jnp,pt
inc
sbb
jp
repnz
stc
cwtl
or
addr16
dec
test
inc
xor
bnd
cltd
aam
cs
pusha
dec
xor
pop
inc
add
jl
add
data16
dec
push
inc
mov
jnp
arpl
or
test
cmpb
enter
cmpsb
jg
sarl
cs
std
mov
mov
ret
mov
mov
or
sub
pop
test
mov
mov
addr16
jb
jle
adc
shr
mov
int
inc
push
adc
push
and
pop
or
pop
lcall
loopne
cs
jl
adc
mov
xor
std
push
clc
add
dec
dec
lret
mov
cltd
mov
nop
dec
sbb
arpl
lret
xor
mov
or
ret
cmp
or
mov
xor
in
aaa
and
aam
sub
sbb
inc
add
int3
xchg
push
gs
addr16
push
scas
shll
mov
push
fdivl
jp
mov
dec
jg
mov
icebp
mov
jae
loop
jno
adcb
xchg
scas
pop
in
out
sbb
adc
add
add
jmp
adc
mov
mov
icebp
sar
push
out
pusha
sub
xor
js
jecxz
adc
fwait
out
jp
repz
pop
and
lods
ficoms
mov
and
cwtl
ds
insl
cli
daa
pop
push
iret
or
mov
pushw
insb
sarl
fstpl
stc
mov
adc
mov
and
ud2
lock
push
mov
negb
pop
clc
lret
xchg
xchg
sbb
xor
xchg
mov
cmp
insb
pop
lcall
mov
pop
mov
stc
cli
xchg
xchg
scas
stos
call
adc
outsb
add
cmp
push
mov
decl
imul
mov
mov
into
lahf
add
mov
sbb
das
mov
mov
or
adcb
loop
mov
inc
cmp
cmp
sbbl
mov
jb
scas
dec
push
mov
icebp
cmp
mov
idivb
dec
inc
jno
jle
jo
adc
outsb
xchg
xor
mov
loopne
pop
test
inc
add
xlat
mov
fimuls
push
mov
xchg
add
dec
scas
fsts
ficoms
addr16
das
xor
inc
inc
dec
and
push
sub
repz
jne
sbb
pop
dec
add
jb
adc
scas
divl
in
je
sbb
sub
xor
in
push
jge
cmp
repnz
lock
mov
daa
xorl
jmp
cmp
mov
sti
jb
mov
pop
adc
or
das
adc
out
out
mov
test
pop
mov
adc
fildl
cwtl
inc
outsb
adc
mov
mov
push
roll
push
inc
cmp
mov
cwtl
sbb
pushf
adcl
jno
enter
mov
xor
xchg
sbb
adc
ja
out
cmp
movsl
iret
roll
push
sub
dec
inc
imul
push
lahf
push
xor
lds
sub
push
jnp
ss
cmp
xlat
cltd
fidivs
mov
into
jno
dec
out
inc
pop
mov
pop
mov
xor
jb
notl
inc
cmpsl
les
xorl
in
inc
repnz
fistps
in
jecxz
pop
and
iret
rorl
xor
and
loopne
inc
scas
jne
test
dec
pop
dec
scas
sub
fimull
xor
adcl
mov
push
push
icebp
jecxz
add
movsl
jns
lods
divb
xchg
insl
xor
mov
and
xor
popf
daa
xchg
outsl
mov
jb
dec
divl
inc
jg
add
std
mov
xchg
and
aam
xchg
movsb
sub
fldenv
xchg
loope
push
add
xor
pop
es
jnp
inc
cmp
ljmp
jle
dec
mov
jle
test
xchg
xorl
cmp
lcall
xchg
sub
lods
jno
xlat
shrl
jl
mov
pop
push
ficoml
push
sbb
jbe
xor
cmp
cwtl
push
mov
or
pop
jl
dec
enter
pop
mov
sbb
xchg
cmp
dec
adc
nop
cmp
test
adc
cmc
test
cmp
sar
cld
stos
adc
lret
mov
sub
jbe
jmp
popa
popf
mov
mov
and
push
push
lock
mov
scas
push
pop
and
shrb
ret
jno
sahf
and
outsl
jp
pop
lcall
adcb
cmp
out
adc
stos
outsb
ja
xor
or
lcall
cs
push
aaa
jb
add
or
pusha
test
bound
movsb
jnp
sbb
fwait
mov
aam
mov
cmp
dec
icebp
mov
fiaddl
roll
push
test
or
mov
loopne
mov
outsb
cltd
and
jmp
pop
cmp
lret
cmpb
movl
lret
nop
sarl
push
add
sub
rcll
aam
cltd
adc
and
test
xor
pushf
fnclex
sub
and
xchg
jne
enter
nop
ss
adc
outsl
dec
cmpsb
mov
lods
aam
xor
sbbl
inc
xchg
xor
je
rcrl
lret
insb
xchg
mov
ret
mov
push
or
cmovl
add
xchg
jmp
pop
and
insl
cmp
pop
sub
repz
adc
decl
pusha
mov
outsb
ss
push
cld
sub
lret
cld
lods
cmc
add
jmp
jle
xor
push
lret
daa
repz
push
dec
rolb
mov
hlt
jbe
add
in
push
mov
das
add
jmp
add
push
fwait
pusha
mov
jnp
call
dec
xchg
cmp
mov
mov
mov
mov
rcl
inc
negl
addb
jno
lcall
insl
sbb
aad
imul
cld
or
pop
adc
mov
dec
xchg
push
mov
call
mov
fstl
in
push
es
pop
aad
roll
jo
das
andl
inc
cmp
repnz
xor
das
xchg
hlt
lea
cwtl
mov
and
xchg
ds
in
mov
xchg
pop
aad
inc
aaa
and
and
jbe
and
jge
add
test
enter
stc
inc
jmp
mov
lret
sub
lcall
orb
adcl
out
lret
clc
pop
popf
lret
jbe
repnz
dec
and
out
inc
repz
stos
aaa
mov
pop
mov
mov
lret
and
jecxz
in
xorl
cmp
lcall
xor
lret
cmp
push
mov
cli
inc
mov
mov
adc
aas
daa
addb
or
mov
je
dec
iret
xchg
hlt
cmpb
inc
cltd
cmp
out
mov
daa
cmp
pop
jle
mov
lea
icebp
loop
loop
daa
ficoml
ss
mov
scas
cmp
rsm
cwtl
test
jae
xor
adc
and
cmpsb
dec
mov
pop
sbbl
andb
mov
lret
mov
iret
mov
jl
data16
shlb
movsl
data16
inc
push
jno
lods
push
iret
mov
jo
jo
sbb
int
push
adc
sbb
lret
sub
dec
push
cmp
in
jle
fbld
adc
or
loope
int3
inc
dec
lahf
lcall
in
push
pop
push
xchg
cs
fnstcw
test
xor
pop
lret
dec
mov
push
loopne
or
leave
sbb
xchg
leave
std
and
leave
push
cmc
js
add
push
xchg
sbb
fcomi
sub
popa
push
in
imul
int3
sub
in
sahf
cmp
cli
jne
loopne
pop
sti
pop
ret
pusha
mov
stc
dec
loope
lods
xor
outsl
scas
rcrb
add
mov
inc
xchg
mov
mov
add
mov
or
cmp
dec
stc
mov
test
fimull
imul
jae
sbb
lods
out
cli
mov
mov
std
xor
xor
mov
xor
adcb
enter
inc
add
jl
push
pop
movsl
mov
xchg
fists
push
aas
mov
dec
test
xor
daa
fmul
xlat
sbb
push
je
dec
push
mov
sbb
in
xchg
sbb
mov
adc
push
cmp
cld
orl
shlb
xor
inc
arpl
test
shrb
sub
insb
xchg
jecxz
push
xor
imul
xchg
lcallw
aam
movsb
test
xchg
bound
mov
inc
sbb
xchg
lahf
jns
cmp
rclb
fwait
pushf
and
sbb
inc
add
faddl
xchg
std
addb
xchg
push
push
rclb
and
adc
xchg
sub
dec
jae
jmp
int
dec
push
negb
xchg
and
ss
cmp
clc
outsl
sub
and
idiv
cmc
dec
mov
mov
pop
cmp
loope
cmp
sti
xchg
xchg
testb
ss
insb
jp
enter
mov
mov
cmp
jl
lcall
mov
push
fiaddl
std
inc
and
mov
pop
testl
cli
insl
insl
insl
stc
sbb
dec
test
inc
test
jge
addl
and
lods
pop
aas
jns
or
les
mov
nop
dec
loope
mov
cli
std
add
push
enter
cmp
pop
subl
lret
sub
das
rclb
jns
sahf
dec
pusha
gs
inc
fwait
dec
xchg
arpl
add
or
adc
sub
decl
rcll
call
dec
mov
hlt
sub
cmp
cmp
pusha
dec
mov
mov
add
mov
mov
mov
cmpsl
mov
aad
aaa
cmp
adc
dec
lahf
scas
fidivs
or
xorb
push
or
fisubrs
mov
xor
jns
xchg
loopne
negl
adc
nop
js
inc
js
cltd
sbb
rol
popa
push
fwait
add
or
xchg
xchg
mov
inc
fst
mov
push
test
movsb
call
shlb
sub
cmp
jmp
fwait
je
outsb
pushf
cld
adc
repz
outsb
aad
fsubl
inc
adc
jae
pop
and
and
inc
jbe
lock
stos
add
sub
idivl
push
pop
mov
adc
mov
push
adc
jge
jecxz
pop
pop
js
loope
ffree
lret
or
push
xchg
outsl
pop
xor
cmp
sbb
imul
jns
stos
jl
mov
fwait
out
inc
pop
xchg
sarl
xor
mov
ret
packsswb
mov
xor
loope
stc
mov
jle
inc
js
mov
dec
jo
hlt
jne
mov
mov
mov
lds
mov
cmp
mov
xorb
push
mov
in
mov
jle
aam
pushl
pop
cmp
enter
fucom
popa
ret
inc
inc
aam
xor
pop
rcrl
insl
in
lods
inc
or
imul
and
daa
push
mov
xor
mov
mov
push
insb
mov
mov
jno
sub
mov
pop
pop
mov
inc
repnz
fists
mov
mov
int
adc
jns
add
mov
and
inc
cmpsb
idivb
xchg
shll
jmp
mov
inc
into
mov
cmp
das
mov
push
cwtl
aad
aam
inc
jle
add
out
or
push
orb
and
adc
pushf
xchg
pop
lods
mov
iret
test
cld
mov
jbe
jp
jae
test
dec
pop
and
mov
outsb
daa
mov
add
inc
iret
in
insl
mov
leave
fs
lock
test
cli
enter
addr16
loopne
and
movsb
pop
rclb
aas
pop
mov
inc
sbb
fidivl
mov
aaa
xchg
fistps
mov
mov
push
jo
sub
mov
jp
xor
or
or
or
sub
test
cmpsl
mov
mov
scas
daa
sahf
jbe
jno
and
mov
xchg
or
inc
mov
mov
dec
fistpll
ja
cmp
xor
xchg
dec
push
mov
and
mov
test
adc
adc
cmp
or
cmp
std
mov
cmp
xor
in
jae
or
push
mov
mov
inc
dec
scas
cmp
or
push
jno
movsl
sti
adc
cld
les
sub
popl
insl
mov
ret
aad
jle
pop
sbb
stos
dec
inc
push
pop
push
rclb
test
push
sbb
scas
dec
mov
mov
mov
pop
mov
dec
je
or
outsb
loop
daa
pop
insb
stos
xchg
jmp
or
push
sbb
pop
or
lods
jmp
in
cmpsl
out
insb
std
into
es
push
mov
xor
xorl
and
xchg
xchg
addr16
add
mov
add
cli
cmp
imul
fs
pop
in
push
lcall
in
xchg
lret
xchg
xchg
es
and
call
loope
add
ret
jne
fisttps
cltd
adc
inc
xchg
xchg
xlat
mov
ficoml
jae
in
cmpb
xchg
cmpsb
mov
loopne
jne
in
cltd
inc
es
add
out
xchg
cmp
sub
jns
clc
mov
es
push
imul
mov
enter
cmc
push
int
inc
mov
cmp
or
das
pop
sub
or
push
mov
mov
cmp
aam
inc
in
mov
stos
dec
adc
ss
pop
mov
fistl
sti
mov
out
dec
adc
push
or
pop
add
push
mov
xchg
add
xor
push
shl
sbb
inc
xor
in
imull
inc
fldz
and
fnsave
or
sbb
xor
fimuls
popf
mov
ljmp
lret
jnp
cmp
pop
out
sbb
aad
xchg
pusha
jbe
mov
and
jl
sub
cmp
adc
addr16
notb
adc
fdivrs
shr
xchg
rorb
gs
push
dec
xchg
cmp
cmp
movsl
movsb
int3
mov
mov
popa
mov
sbb
inc
xchg
cmp
and
push
pextrw
inc
test
lahf
dec
xchg
adc
push
inc
aam
sub
adc
sbb
jbe
das
pop
jae
adc
sbbl
and
sbb
push
test
imul
mov
ret
ret
hlt
adc
int3
sub
inc
mov
cmp
mov
xor
pop
aad
out
push
in
lcall
mov
sub
in
aaa
mov
jmp
cmp
mov
push
mov
adcl
imull
pop
int3
scas
cwtl
xor
add
jecxz
and
mov
addr16
dec
push
fcompl
subl
jb
xor
mov
and
xchg
lcall
mov
and
mov
jmp
call
mov
lods
ja
jmp
mov
in
dec
fsubrs
mov
stos
idivb
lods
jmp
mov
jne,pt
shll
outsl
jmp
pop
clc
and
lds
xor
sbb
xchg
push
mov
dec
loope
mov
adc
or
jge
xor
and
dec
outsb
sbb
stc
mov
lcall
push
jne
ret
popa
fsubrp
jl
mov
mov
xchg
cmp
iret
ret
mov
mov
icebp
lahf
jns
lcall
into
cmp
push
mov
js
je
ret
das
pop
push
outsl
es
fwait
or
xor
push
xor
mov
mov
stos
and
add
cmp
cli
add
test
adc
lret
push
roll
cmpsb
std
movsb
mov
lea
inc
mov
repnz
sbb
add
cmp
inc
push
pop
je
cmp
cmp
daa
int
repnz
push
push
jge
push
mov
xchg
xchg
js
inc
jo
jl
dec
aad
sahf
cmp
inc
imul
fwait
jno
xor
sar
test
sahf
adc
pusha
ss
lea
sbb
pop
add
mov
test
push
cltd
insb
movsb
fs
dec
sbbl
mov
and
cmpsb
fidivrl
add
inc
shrl
sbbl
aam
cmc
add
mov
adc
mov
insl
and
cli
and
xchg
jno
mov
and
dec
lds
dec
adc
inc
sbb
inc
jno
andb
mov
xchg
stc
mull
ljmp
fdivp
out
subb
sbb
cmpb
lret
mov
inc
jo
cmpsl
outsb
addr16
mov
mov
lods
xor
mov
adc
sub
mov
bound
ds
into
pop
pop
insb
jle
in
test
mov
stos
sbbl
cs
jmp
lds
insb
mov
push
xchg
ficoms
lods
adc
mov
cmc
mov
mov
rorb
fisubs
gs
xchg
roll
stos
inc
pusha
push
loope
inc
lret
lcall
mov
xchg
mov
push
inc
pop
out
sahf
mov
mov
jnp
xor
out
lcall
mov
jl
les
mov
push
lods
xor
xchg
adc
in
jb
sar
stc
mov
jmp
orl
arpl
cmp
lods
cmp
cmpsb
repnz
pop
loop
je
lret
mov
mov
cmpsb
insb
cmp
in
mov
inc
mov
movsl
xchg
adc
into
mov
push
mov
inc
fbld
xlat
sbb
cmpb
scas
aas
ret
addr16
cmp
loop
inc
pusha
or
ret
or
out
push
xchg
or
mov
jns
xchg
pop
inc
mov
and
mov
mov
xor
nop
arpl
sub
mov
dec
mov
ss
lods
hlt
scas
sbbb
in
sbb
inc
sub
js
pop
pop
stos
sub
xchg
inc
mov
in
mov
loop
or
insl
jge
push
xchg
loopne
es
cmp
ds
mov
xor
dec
mov
mov
mov
push
inc
dec
pop
hlt
push
outsl
mov
stos
repz
int
stos
lods
std
mov
add
sahf
repnz
aas
repz
movsb
outsb
andb
xor
in
jne
in
dec
jge
jno
cmp
andb
movsb
xchg
push
iret
cmp
jns
lcall
cli
in
jge
sbb
jg
mov
iret
jmp
fucomip
jg
xchg
popa
mov
mov
xchg
sarb
jb
push
in
mov
sub
jmp
sub
sbb
ds
add
into
popa
lods
jmp
cmpsl
or
add
repnz
clc
inc
sbb
and
mov
cmpb
jmp
outsb
pop
pusha
jecxz
ret
add
or
bound
pop
shrb
jmp
shr
imul
gs
inc
int
mov
iret
jge
dec
adc
arpl
mov
xchg
rclb
mov
lret
push
mov
bnd
inc
lods
jle
orb
mov
push
sahf
push
daa
mov
in
sar
arpl
rol
cli
push
hlt
inc
xchg
fnstcw
out
pop
and
mov
or
and
cltd
sbb
push
xor
lret
in
rclb
das
mov
fistpll
and
sbb
xchg
fs
sahf
sub
cmpsb
cmp
and
cmp
push
cmp
jge
adc
bound
and
sti
fmull
dec
pusha
fnstcw
sahf
cmpsb
sti
ja
repnz
enter
adc
sbb
ficoms
mov
push
mov
jae
fwait
div
loop
lret
repz
lods
popf
cli
lods
test
fidivl
push
stos
sub
stc
or
leave
xchg
xchg
int
shlb
pop
push
sub
movsl
pop
jnp
push
aam
repz
out
aam
clc
xorb
adc
sbb
push
aad
je
xor
scas
mov
popa
add
add
or
into
imul
stc
jmp
xlat
pop
adc
sldt
adc
shlb
and
fistl
fnstcw
rol
scas
inc
cmp
test
fidivs
fs
mov
mov
xchg
bound
mov
pop
call
ljmp
lcall
lods
lcall
sub
dec
xor
sub
mov
dec
das
and
mov
imul
jecxz
test
imul
rolb
cltd
addb
les
aas
jp
mov
fldcw
sarb
lods
movl
xor
xchg
add
jmp
or
push
test
imul
mov
push
ljmp
xor
inc
cwtl
aad
pop
divl
push
mulb
and
xlat
mov
adc
jno
sub
mov
adc
pop
mov
push
leave
in
fisubl
dec
mov
cmc
inc
adc
outsl
cmp
in
in
xor
xchg
and
lods
rcll
enter
out
adc
jno
dec
mov
mov
push
add
gs
fisttps
rorb
pushf
clc
mov
aas
ja
mov
aas
in
pop
rcll
cwtl
and
inc
sbb
outsl
jp
das
enter
cmc
dec
inc
stos
in
inc
outsl
dec
push
ljmp
pop
and
add
sub
push
inc
or
ss
pop
push
adc
insb
mov
jmp
sub
movsb
mov
mov
mov
out
push
sbb
rclb
sub
ljmp
cli
jns
js
fcomps
jle
xchg
mov
xchg
sahf
adc
push
bnd
xor
jl
jbe
pushf
bound
test
nop
xchg
xchg
pop
test
lea
and
leave
pop
ret
mov
inc
mov
gs
insb
sub
cmp
in
mov
sub
mov
mov
and
aam
jecxz
ret
xlat
roll
cmp
loop
test
cli
dec
mov
or
sti
pop
adcl
insb
sub
pop
jne
fistps
mov
push
out
loope
pop
adc
xchg
mov
cli
xor
repz
idivl
xchg
mov
pop
mov
mov
subb
sub
pop
loopne
or
inc
cld
dec
mov
leave
je
movsb
mov
insb
fwait
pop
cmpl
or
push
dec
cltd
push
or
incb
shrb
jbe
pop
outsb
sarl
sti
scas
popf
movsl
cmpsl
jl
repnz
repnz
sbb
jns
out
outsb
adc
cmp
xor
pop
cmp
pop
or
popf
in
adc
data16
dec
xchg
push
and
xchg
mov
jle
inc
mov
xchg
mov
movsb
pop
sbbl
test
inc
jno
xorl
push
mov
mov
add
jns
push
sbb
pop
xchg
push
mov
lods
and
daa
jl
xor
pushf
jge
fnsave
adc
popa
mov
aas
cmp
jns
insl
shlb
mov
pop
push
mov
lods
out
test
or
or
add
ss
mov
mov
adcb
inc
stos
sbb
fcmovnbe
outsb
and
insb
inc
jbe
adc
jo
and
das
leave
jnp
iret
mov
repnz
jbe
cmp
js
jbe
mov
notb
xor
dec
add
adc
mov
xor
add
int3
push
cmpb
push
fs
ss
mov
mov
add
out
mov
iret
pop
jns
dec
mov
adc
icebp
rorl
rorb
stos
std
adc
aam
add
adc
mov
dec
mov
andl
push
and
or
fildl
out
out
push
inc
mov
and
sti
icebp
and
dec
movsl
ljmp
dec
cld
stos
lea
or
pop
fisttpll
stc
mov
adc
ljmp
jmp
jbe
sbb
xor
mov
fucomp
mov
cmp
scas
jmp
in
mov
cmpsl
or
out
daa
cmpsl
or
or
nop
or
push
fwait
jge
pushf
outsb
xor
popf
mov
les
inc
inc
lea
and
adc
xchg
adc
psubusb
outsb
jae
xchg
outsb
and
loope
fsub
popf
sti
cmp
push
mov
and
mov
xor
imul
enter
clc
mov
stos
lret
into
pop
cmp
jo
scas
aas
inc
push
sub
pop
cmpsl
test
inc
xchg
mull
xlat
popf
stos
test
out
test
jo
dec
cwtl
ljmp
xchg
leave
in
dec
gs
mov
lahf
shl
or
add
push
mov
pop
pop
in
outsb
fidivl
sahf
push
xchg
jo
or
adc
xor
jb
lcall
cwtl
sahf
push
les
mov
xchg
xchg
in
fwait
xchg
push
cltd
pop
les
outsb
pop
in
shll
sub
push
lods
mov
je
pusha
ja
cmp
ljmp
add
jecxz
jns
push
xchg
cmp
sub
cs
adc
sub
or
loope
xchg
stos
outsl
cmpsb
jge
cmp
insl
adc
enter
repnz
ss
cmpsl
enter
pushf
and
dec
fisttpl
ss
bnd
dec
scas
jo
mov
out
scas
inc
pop
mov
fs
xor
jbe
popa
popa
pop
sub
and
or
addb
adc
lret
pop
jge
out
jnp
frstor
jge
lret
aas
shll
adc
testb
cs
add
or
pop
and
xchg
sbb
lret
loopne
push
mov
push
sub
jmp
mov
out
lods
xor
subl
inc
sub
in
ljmp
scas
mov
and
mov
enter
mov
mov
mov
or
sbb
jne
push
and
loop
sbb
dec
bound
fcmovnbe
lcall
inc
inc
xor
into
fidivrs
sub
pop
and
pop
mov
int3
mov
pop
fcmovb
ljmp
xorb
cmpsb
jo
mov
xchg
mov
adc
pop
xor
jo
sub
fisubs
fs
dec
jae
rcrb
cmpsb
test
adc
xor
lods
xor
mov
das
inc
pop
mov
orb
leave
aad
sub
call
sub
jle
add
dec
lahf
sub
jo
cmp
js
xchg
push
or
fisubl
daa
sub
sbb
mov
sub
and
std
or
daa
mov
xchg
sbbl
push
add
jl
pop
push
scas
clc
fcompl
sbb
sbb
outsl
std
xor
xor
bound
pop
mov
shlb
jl
loope
jbe
mov
ds
out
popf
jecxz
adc
cmp
mov
sub
add
sbb
jae
sar
out
movsl
dec
adc
jns
push
andb
daa
pusha
push
lcall
popa
icebp
mov
hlt
std
sub
jb
sbb
cmp
dec
pushf
add
add
cld
sti
mov
or
imul
out
mov
repz
hlt
pop
incb
movsb
add
mov
push
popf
inc
mov
jnp
and
out
pop
adc
out
inc
stos
adc
idiv
cmp
and
mov
sbb
ljmp
jne
xchg
or
push
jnp
in
mov
mov
push
ret
sahf
outsl
dec
sarl
jge
mov
adc
in
fs
cmp
mov
and
add
jb
mov
jbe
xor
fistl
jle
outsl
push
pop
outsl
cs
fucom
ret
pop
fistl
loopne
adc
or
pop
in
sti
faddp
loop
xlat
test
dec
fbstp
lods
in
js
jecxz
cmp
popf
movsb
dec
insb
test
fcoml
sbb
mov
or
nop
push
int
push
dec
bound
xor
xchg
fmuls
xchg
scas
sbb
addr16
sub
jo
sbb
flds
inc
shl
imul
sub
cmc
jp
incb
hlt
scas
out
insb
js
dec
push
jbe
aam
mov
add
push
push
sbb
dec
pop
rol
jmp
lahf
push
adc
aad
into
movsl
or
mov
inc
mov
xchg
lds
mov
pop
movsb
stos
shr
xchg
mov
scas
push
aam
test
push
or
mov
cmc
lret
push
sahf
test
pop
fucomi
popa
cmc
movsl
push
test
cmp
outsb
xlat
and
addr16
fldenv
mov
inc
mov
repz
dec
mov
arpl
xchg
sub
inc
pushf
dec
daa
loopne
icebp
mov
xchg
adc
jbe
xchg
mov
mov
cmpsl
pop
fwait
mov
xor
pop
inc
setb
push
add
jae
fistpll
add
adc
in
jp
testb
cmp
inc
pop
push
lret
xchg
lahf
fldenv
loope
das
push
sub
rorl
lret
cmp
cmp
out
fisubrl
sbb
dec
testb
mov
fcomi
cmc
outsl
push
iret
push
ds
loopne
sti
int3
mov
inc
and
lods
sub
aad
dec
loop
outsl
leave
test
mov
sbb
rol
call
fidivrs
jl
mov
xor
in
jbe
mov
outsl
push
cmp
mov
xchg
int
cmp
sbb
mov
and
xorb
mov
pusha
add
jns
in
add
loope
ret
inc
fwait
lahf
sub
mov
adc
mov
es
negb
jle
mov
inc
pop
ja
scas
shrb
push
sahf
mov
fsubrs
jo
jbe
mov
xor
int3
aam
jmp
in
lods
push
xchg
jo
push
sar
mov
mov
pop
jae
sbb
or
fs
call
data16
pusha
cmpsb
pop
les
xor
scas
xor
loopne
dec
aad
mov
or
cmp
push
ja
jg
sub
loopne
mov
dec
adcl
mov
arpl
sub
lcall
inc
in
xchg
xor
jp,pt
cli
in
loop
imul
dec
add
mov
xchg
mov
xor
pusha
popa
fildll
sub
inc
imul
dec
out
ror
mov
add
ljmp
pop
in
aaa
fcompl
cmpsb
cmpsl
jge
mov
push
xlat
in
icebp
in
fwait
pop
jbe
cmpb
xchg
xchg
push
hlt
fistps
arpl
aam
pop
call
push
mov
daa
out
mov
jge
cmp
gs
push
in
mov
cltd
fptan
dec
inc
or
jmp
add
xor
cltd
jae
call
push
int3
push
ret
fnsetpm(287
sbb
imul
stos
popa
dec
and
popa
or
xchg
xor
inc
scas
push
enter
xlat
fisttpll
add
add
outsl
test
cmp
jb
cmc
cmc
movsl
aas
into
mov
pop
push
pop
xor
sti
xchg
cmp
lea
stc
jns
adc
jbe
sbb
and
bound
stos
push
pop
adc
sar
add
outsb
cmpl
inc
push
jg
fimull
lods
mov
xor
mov
lahf
jae
and
ret
mov
lret
rorb
mov
push
dec
xchg
pop
sbb
faddp
test
sbb
add
cmp
dec
sti
es
lret
fisttps
and
insb
test
cltd
cmpsb
jno
mov
out
add
das
cmc
xchg
xchg
jns
js
or
sub
lods
ret
push
adc
pop
adcl
ja
sti
jmp
lahf
stc
insl
ljmp
lcall
and
inc
inc
in
xchg
and
mov
icebp
arpl
pop
push
jno
mov
adc
sub
loopne
rcl
adc
rorb
jmp
mov
popf
jecxz
js
bnd
mov
mov
out
lahf
fsubrs
pop
cmp
loop
in
jnp
cmpsb
or
cmp
cmc
mov
xchg
push
xor
lahf
cwtl
or
aaa
lock
sbb
pop
shll
cs
pop
sbb
xor
or
nop
mov
and
mov
and
mov
fcmovb
sbb
mov
mov
ret
je
push
je
popa
aaa
insb
pop
mov
dec
add
aas
imul
dec
or
mov
shll
clc
jecxz
jae
lret
push
add
mov
insl
mov
pop
aam
jp
cltd
inc
nop
xchg
push
and
cmpsl
jne
popf
mov
out
cmp
push
fsts
gs
inc
pop
cli
or
imul
ret
sbb
das
mov
cmp
repz
sbb
mov
aas
hlt
fsub
out
xchg
pop
push
dec
pop
xchg
xor
mov
push
pop
dec
roll
inc
sahf
jne
scas
test
jge
js
test
int
adc
xor
pusha
repz
scas
pop
jae
sub
shll
xchg
push
sbb
sbb
add
push
jge
pop
push
outsb
int3
fs
loop
sub
ret
iret
ret
in
int3
lret
push
stc
pop
dec
insl
addr16
cmp
enter
sub
adc
adc
jl
inc
ficoml
inc
xor
shlb
fsubs
mov
ret
scas
fnsave
cmp
or
mov
cmp
cmp
sarl
dec
pop
repz
ret
fnstcw
imul
adc
xchg
cmp
in
push
ds
xchg
jle
add
int3
bound
jbe
mov
jge
insb
cmp
pop
out
fs
xchg
adc
repnz
jle
add
mov
in
scas
aad
pop
aaa
in
jb
cmpsb
clc
mov
pop
loop
ljmp
inc
lret
push
mov
pop
loopne
ljmp
fldcw
rorb
scas
pusha
pop
sbb
mov
xor
cmpb
and
scas
dec
pop
fdiv
pop
popa
ficomps
mov
into
sbb
xchg
pop
lahf
sti
add
mov
push
add
sbb
daa
sub
test
mov
sarb
dec
pop
js
hlt
or
popa
insl
jmp
js
mov
je
jp
ds
mov
into
add
mov
movsb
pop
pusha
inc
sub
jl
out
outsb
push
or
mov
stc
sbb
or
push
xor
sahf
jl
sbb
cmp
mov
out
push
fistps
cwtl
mov
jl
push
push
mov
inc
cmc
sbb
jmp
rcrl
pop
push
push
sub
mov
push
daa
aas
mov
or
and
add
fstpl
sarl
stos
insb
enter
insb
xor
loopne
lock
or
lods
xor
cli
xor
sub
push
loop
lds
pop
pop
jg
daa
push
mov
push
push
mov
dec
outsl
std
add
dec
sbb
loopne
test
inc
insb
inc
and
sti
das
cmp
cmpsb
cmc
dec
mov
in
mov
ror
cltd
jne
cmpsl
sbb
push
cmpsb
add
mov
mov
test
imul
dec
adc
js
mov
jp
lcall
sub
inc
xchg
ja
imul
mov
aas
pop
cvtps2pd
lds
arpl
jl
mov
stc
loopne
add
jecxz
sbb
es
push
mov
enter
in
popf
push
and
std
inc
cs
notl
xchg
in
add
dec
fidivs
repnz
sbb
sahf
loope
inc
pop
xchg
xchg
gs
mov
jb
cwtl
sbbl
push
scas
ret
or
and
jmp
stc
inc
mov
push
in
xchg
sub
ljmp
mov
ret
rorb
es
dec
mov
xchg
adc
out
cmp
arpl
repz
pop
lea
mov
jae
cmpsb
pop
rorb
adc
scas
mov
xlat
sbb
mov
or
iret
or
adcl
mov
sbb
xchg
inc
imul
xor
or
hlt
sbb
inc
sub
dec
add
icebp
mov
test
enter
mov
xor
sub
jmp
nop
mov
xor
scas
add
addr16
jp
pop
es
lds
int3
add
loopne,pt
imul
inc
inc
and
hlt
fwait
lahf
add
mov
rcrb
cmpsl
dec
int3
mov
imul
and
mov
sbb
cmpsb
aad
in
gs
add
add
mov
pop
in
inc
lret
pusha
bound
mov
popf
add
roll
and
sub
jne
stc
addl
scas
adc
jg
testb
das
and
jo
ljmp
es
add
push
int3
testb
adc
jg
mov
dec
fdivs
into
pop
push
add
cmc
sbb
sub
insl
rcrb
and
ljmp
mov
icebp
xchg
sbb
xchg
sub
ja
lds
pusha
cmpsl
aaa
mov
clc
fstpt
cltd
testl
and
add
fadd
cmc
mov
movsl
pushf
push
inc
dec
sub
aas
push
xchg
aaa
int
or
cli
popf
int
dec
int3
mov
stos
nop
push
cmpsb
andb
mov
in
jae
lret
xchg
add
push
das
cs
jg
cld
sub
popa
adc
stos
pop
push
sbb
dec
cmp
add
dec
dec
mov
jne
jns
fcomp
mov
sub
sub
xor
xchg
xchg
inc
mov
sbb
inc
pop
jle
mov
mov
scas
or
push
mov
imul
or
inc
jnp
mov
mov
cmp
dec
rol
bound
shl
pop
std
in
stos
jmp
data16
add
fwait
dec
mov
mov
mov
cmp
daa
fisttps
mov
xchg
adc
push
aaa
sti
pop
mov
lret
out
sbb
mov
mov
adc
popf
out
pop
pop
xor
clc
bound
cld
fdivrp
iret
mov
mov
in
cs
and
cmpsb
fildl
pop
cltd
loop
shl
fs
cmp
pop
jne
in
mov
mov
inc
jl
ljmp
pop
fcmovb
stc
addl
es
sub
shr
adc
dec
adc
pop
sub
mov
mov
cmpsb
int
pop
out
in
mov
or
ret
xlat
mov
out
sub
or
ss
xchg
fmuls
mov
xchg
jnp
cmp
call
add
stos
cltd
push
out
test
dec
sub
dec
sbb
arpl
jne
ficoml
dec
xchg
add
cmp
jl
or
scas
in
jmp
or
jbe
ds
cmp
sub
push
addr16
cwtl
sbb
jg
mov
std
imull
icebp
sub
enter
dec
adcb
lret
mov
scas
lcall
shlb
call
xchg
sub
inc
add
add
mov
out
xchg
mull
jnp
push
sub
sbb
or
add
gs
add
dec
mov
jno
das
sub
mov
push
adc
pop
jb
add
lods
stc
xor
out
call
mov
mov
jle
sub
xchg
shl
and
add
mov
jg
or
aad
mov
jecxz
stos
iret
inc
add
ret
into
xlat
aas
mov
push
jge
std
xor
ret
mov
jp
mov
test
push
loop
jb
mov
js
dec
mov
pop
call
mov
jno
sbb
jg
lea
fcomp
jns
aaa
and
mov
fldpi
jno
mov
mov
push
or
mov
mov
or
repz
test
cmp
push
jno
add
sbb
xchg
ljmp
notl
arpl
mov
and
pop
mov
adcb
out
sbb
insl
dec
testb
test
fistpl
dec
test
jne
addr16
outsl
aaa
inc
xchg
jg
std
shrl
stos
outsb
shlb
and
cmp
mov
into
push
popa
daa
push
or
loope
sub
mov
mov
out
icebp
cwtl
pushf
fdivrs
mov
xchg
frstor
sbb
xchg
or
insl
mov
movsb
subl
orb
cmp
xor
das
sbb
mov
js
inc
mov
and
xchg
pop
iret
mov
pop
inc
push
call
out
rclb
jp
push
mov
pop
call
in
and
test
into
push
jb
test
jns
adc
adc
xchg
imul
xor
int3
fcompl
test
aam
cmp
ja
and
adc
es
aas
mov
sub
ljmp
sti
xchg
jmp
dec
jne
push
lock
stc
cmp
xchg
mov
mov
int3
dec
mov
mov
pop
scas
sub
xlat
paddb
push
mov
pop
adc
jp
cmp
jp
xchg
sbb
cmp
in
bswap
stc
jecxz
jnp
jge
add
pop
mov
ja
lcall
push
pop
daa
imul
rorl
push
out
adc
lcall
loope
leave
call
mov
and
xor
sbb
sub
je
mov
int
push
addr16
mov
out
enter
dec
mov
pop
xor
jp
push
fisubrl
std
xchg
cwtl
repz
daa
outsl
dec
fstpt
inc
mov
imul
insl
fstpt
xor
mov
or
push
add
insl
mov
popa
inc
lods
jae
push
idiv
jg
gs
adc
insl
dec
mov
xchg
enter
lock
jne
std
mov
mov
xchg
add
inc
adc
loope
lret
xor
and
jp
mov
add
jp
push
fistl
jnp
mov
mov
ds
dec
mov
popa
insl
loopne
xor
inc
in
repnz
loop
pop
add
push
ret
iret
mov
pop
pop
pop
cs
movsb
jmp
mov
add
mov
or
lods
nop
shll
sbb
in
pop
jmp
mov
repz
incb
dec
rcll
les
xor
mov
cwtl
shr
daa
mov
movsl
sub
jp
mov
dec
cmpsl
test
loop
push
dec
mov
jno
das
sbb
and
lea
mov
mov
push
popf
jl
stos
lods
getsec
imul
bound
in
in
rcrl
inc
sub
sub
sbb
mov
mov
andl
sbb
in
pop
pop
cltd
mov
jle
test
scas
aas
cmp
insl
mov
inc
ret
pop
adc
shl
mov
adc
adc
xchg
xor
into
ret
cmp
cld
mov
xor
push
xor
cli
stc
inc
cmp
dec
sub
xchg
sub
mov
xchg
frndint
pushf
and
repnz
inc
ja
xchg
jnp
bound
icebp
loopne
xchg
push
roll
inc
das
or
in
push
jnp
lods
outsl
xchg
jae
sbb
mov
mov
sbb
mov
sbb
aaa
mov
clc
push
mov
mov
loop
xchg
mov
icebp
push
sub
hlt
adc
xchg
out
xchg
fdivp
repz
int3
xor
test
fcmovnu
push
jle
pop
dec
jmp
pushf
into
shrd
out
dec
or
and
mov
jno
sub
cmp
mov
jnp
int3
cmpsb
popf
aaa
pushf
jno
or
sbb
neg
insl
jo
mov
cmpsb
jb
sbb
add
pop
mov
add
pop
push
add
jmp
sub
xchg
fs
bt
std
sbb
lods
push
rcrl
cmp
popf
inc
jo
je
jl
xor
sbb
int
stos
push
adc
pop
and
cmpsl
cmp
mov
sub
xchg
loop
jo
mov
inc
cld
xor
ficompl
mov
je
ljmp
pop
mov
into
push
sub
shl
filds
ss
rsqrtps
idivl
mov
cmp
mov
mov
es
push
cmc
cli
or
lds
arpl
and
mov
push
jmp
dec
leave
loopne
iret
movhps
mov
pop
daa
mov
aaa
xor
call
or
mov
fs
pop
leave
cmp
push
sub
fwait
pop
and
sub
mov
pusha
push
scas
pop
pop
xor
cmc
fldenv
jne
test
cmp
ret
fstl
faddl
pop
inc
rcrb
int
or
sbb
pop
mov
push
push
aad
xchg
xchg
pop
xor
icebp
and
jae
int3
adc
jnp
sub
frstor
mov
aas
int3
cmp
jns
rol
xlat
test
and
jecxz
lock
lock
loopne
or
aad
aaa
lock
adc
stos
aaa
fdivrs
mov
mov
and
andl
aas
stos
pop
push
pop
inc
hlt
fsubs
push
outsl
repz
sbb
cmp
ljmp
pusha
es
imulb
sbb
push
loope
ret
lods
pop
mov
xchg
pushf
hlt
loop
outsl
dec
push
or
push
pusha
int3
mov
rclb
or
mov
repnz
and
scas
loop
push
mov
mov
ds
pop
dec
adc
pop
dec
xor
push
pop
std
inc
pop
inc
adc
xor
jno
fwait
lret
pop
cwtl
dec
cmp
jge
sbb
add
mov
push
sbb
insb
lods
add
lea
stos
cltd
ljmp
dec
pop
xchg
lcall
daa
jmp
popa
call
icebp
jle
cmp
and
rolb
inc
mov
in
jae
inc
xor
mov
pop
ss
test
pop
fisubrl
sub
or
fcomip
adc
neg
in
add
sti
push
pop
and
rcll
push
mov
sub
mov
ret
pop
push
mov
lret
in
cli
int
push
cmp
push
pop
mov
nop
call
push
enter
clc
lea
mov
adc
push
pop
add
sbb
push
push
cmovb
lods
iret
pop
jae
dec
loop
push
test
int3
xchg
mov
stos
sub
jp
rcrl
xchg
cmp
imul
xchg
pop
or
and
mov
in
sub
dec
fcoml
ret
push
pusha
and
mov
mov
inc
push
fistpll
xchg
adc
inc
lahf
test
add
xor
mov
and
ja
out
mov
lret
sti
cwtl
repz
add
aaa
insb
xor
outsb
fs
jb
cmp
in
adc
mov
cmpsl
scas
daa
iret
sub
and
pop
and
cmpl
ljmp
and
mov
xchg
fistps
jge
and
xchg
fnstcw
incl
stos
cmpsb
jmp
inc
xor
shr
pop
xchg
repz
cld
int
add
push
daa
adc
or
and
cltd
scas
mov
sub
gs
shlb
pop
loop
push
xorl
pop
cli
xchg
lds
jp
leave
aas
or
xor
mov
mov
pushf
push
push
test
and
repnz
fildll
add
add
subb
mov
lods
adc
mov
mov
into
jmp
std
cs
das
sub
and
shll
int3
pop
fstpl
push
in
push
fdiv
cmp
or
loopne
movsl
or
inc
mov
mov
sub
jne
pop
sub
push
aam
int3
outsl
out
aam
scas
addr16
and
icebp
popa
jae
cmp
dec
add
movsl
mov
ret
jmp
cli
mov
pop
mov
jg
ljmp
js
scas
stos
dec
push
cwtl
imul
into
inc
pop
in
push
lcall
pushf
loopne
xor
ja
shll
out
xor
sbb
lods
cmp
nop
and
mov
shll
xor
ja
test
stos
test
add
lea
inc
lret
aaa
out
jns
fsubrl
loope
mov
pop
fcmovnu
xor
stos
movsb
fwait
mov
mov
push
mov
iret
cmp
mov
int
fmull
arpl
lods
sbb
popf
ds
loope
xor
popa
fisttpl
lds
xchg
dec
cmp
pop
ja
cmp
and
xchg
test
push
dec
mov
add
or
sbbl
and
jge
pusha
cwtl
lds
push
ficomps
cmp
mov
dec
mov
insl
sahf
scas
mov
mov
push
fidivs
sub
ja
js
subb
loopne
int
mov
repz
lcall
loop
icebp
dec
es
ja
insl
jno
call
mov
xor
clc
or
ret
jns
mov
mov
add
mov
mov
dec
lahf
pop
clc
inc
mov
push
fmuls
ljmp
fldcw
inc
lds
popf
push
push
mov
popf
jmp
mov
out
xchg
sti
push
pop
adc
xor
push
lret
cwtl
inc
cmp
xchg
push
push
sbb
mov
es
nop
sub
push
adc
lahf
sub
movsl
pop
adc
adc
cld
scas
jno
inc
cmp
mov
xor
in
cmp
daa
dec
push
inc
push
test
hlt
enter
cmp
cmp
lock
lret
scas
jecxz
mov
cmpsl
mov
lahf
fdivr
jo
rcrl
and
push
sub
push
cmp
fld
dec
aad
addr16
jg
pushf
xchg
shlb
push
sub
outsb
mov
mov
pop
outsb
scas
pop
adc
cmp
in
push
xchg
pushf
cli
or
insl
jmp
sbb
fnsave
xchg
and
push
lea
rol
jb
add
cltd
out
cmc
cmp
push
insl
icebp
cltd
leavew
test
or
dec
add
sub
loopne
inc
hlt
mov
sub
pop
notb
xor
lods
stc
jb
shll
add
push
lea
stos
pop
fisubs
xchg
sti
mov
push
or
mov
mov
aam
jae
push
lret
adc
fwait
repz
mov
or
ds
push
nop
rcrl
bound
sub
mull
sar
pushf
adc
fisttps
addl
js
aam
mov
shlb
and
loop
jg
mov
and
mov
enter
push
jo
lret
aad
mov
movsb
sti
out
and
jle
loop
aam
cmp
cmpsl
cmpsb
clc
push
mov
add
cwtl
jno
add
mov
sub
add
push
pushf
add
dec
nop
add
push
mov
cmp
xchg
mov
out
mov
add
xchg
mov
mov
xor
inc
adc
stc
scas
sub
cmpsl
dec
push
lcall
mov
inc
cltd
xor
xchg
repnz
push
daa
xchg
rcrl
and
scas
xchg
mov
into
iret
fisubl
mov
cltd
loopne
jl
mov
jo
lods
add
and
cmp
mov
jl
sub
out
push
mov
mov
xchg
pushf
mov
das
dec
and
pop
negb
stc
mov
movsb
insl
xchg
lret
inc
jns
xchg
mov
jnp
loop
out
mov
push
repz
sbb
xor
bswap
xchg
add
mov
xor
arpl
jl
inc
cmp
fsubrl
sub
std
push
and
xchg
dec
fwait
cmp
push
dec
jo
aam
jp
leave
lahf
fisubrs
xchg
rorl
pop
fistpll
mov
lret
xor
outsl
es
or
rcrl
push
push
jmp
cld
push
lock
pop
pop
adc
mov
adc
mov
stos
sbb
fisttps
outsb
loopne
jae
lcall
imul
cs
aas
or
add
shl
cmpsl
fwait
cmpsb
jo
mov
dec
push
rorl
das
jns
out
push
loop
mov
or
or
aaa
cltd
fsubrl
cmp
adc
jl
adc
cld
xlat
xor
jo
mulb
xchg
mov
int3
mov
mov
out
mov
mov
sub
inc
sbb
out
lcall
mov
sub
movsb
pop
inc
mov
pop
jne
push
lods
in
into
push
jmp
lcall
repnz
pop
mov
repz
mov
repz
hlt
cld
popa
out
xchg
adc
dec
sub
jp
sbb
mov
add
xor
or
int
mov
ret
and
add
fidivrs
insl
int
adc
enter
add
mov
jp
es
shr
lock
xchg
loope
xchg
pop
jbe
pushf
mov
test
xchg
mov
lds
push
fsubl
xchg
pop
repz
movsb
popa
xor
jge
fbstp
pop
push
dec
lcall
rclb
bswap
rep
ret
or
jo
in
fucomp
mov
jg
sbbb
loope
iret
cmpsl
cmp
lcall
lds
gs
inc
inc
nop
adcl
dec
push
push
cmp
inc
aas
dec
or
rcll
dec
inc
cmp
cmp
test
dec
leave
lock
cs
cmp
mov
or
movsl
xchg
cmpsb
push
movsb
xorb
xchg
or
sbb
push
mov
aam
sahf
orl
fidivs
repz
cmpsb
mov
jb
sahf
ljmp
movsl
dec
ljmp
movsl
mov
inc
fwait
test
shrl
negb
mov
mov
xor
jge
inc
add
pusha
push
mov
lock
add
leave
mov
bound
xchg
daa
pop
pop
xor
xor
xchg
fwait
xchg
push
movsl
add
jne
cmp
aad
mov
leave
push
lds
cmc
popa
bound
out
popl
lahf
cmpsb
ret
sbb
daa
sbb
test
mov
push
aas
mov
in
out
push
cmp
mov
int3
or
mov
sbb
xor
push
ret
inc
adcb
and
pusha
push
mov
hlt
xchg
cmpsl
shll
push
dec
mov
xor
lock
insl
cmc
cld
xchg
cmp
mov
aam
aad
rol
push
pop
add
pop
pusha
out
rorb
aas
gs
add
mov
or
cmp
sub
gs
add
addr16
ret
outsl
scas
pusha
fdiv
mov
mov
mov
adc
cwtl
add
clc
int
imul
jb
dec
mov
in
cld
loop
dec
fcomp
js
dec
sete
xor
popa
push
addr16
test
pop
jo
das
xor
das
cmp
imul
shr
loope
xchg
sbb
inc
dec
fs
pop
sti
and
mov
xchg
dec
ds
mov
mov
dec
cmp
negl
scas
es
sarb
add
insb
mov
das
rcr
sub
cltd
push
push
cmpsl
addr16
adc
inc
or
jae
icebp
xlat
xchg
add
pop
cmp
add
ss
sbb
jp
fistps
dec
int
lds
pushf
fidivs
push
jno
mov
jecxz
sbb
stc
mov
pop
pop
lcall
call
cmp
add
inc
xor
nop
sbb
xchg
cmp
push
jecxz
pop
or
jecxz
lret
fists
cmp
xchg
mov
cmp
cmp
stc
aad
push
lock
pop
push
and
fidivrs
lret
aad
aaa
pop
jge
push
xor
mov
dec
inc
cmp
test
rclb
mov
lea
das
jle
push
es
jp
imul
sub
sbb
jmp
ficomps
jmp
pop
add
push
inc
or
divl
ret
int3
cmp
dec
lds
push
fildll
jge
adc
outsl
inc
pop
or
or
xor
cmp
mov
roll
pop
mov
jnp
mov
sub
lret
leave
lret
xor
push
dec
pushf
dec
jg
adc
arpl
arpl
out
or
cmp
mov
lret
mov
sbb
push
int3
inc
dec
sbb
sbb
mov
cs
lcall
lds
ljmp
out
repnz
push
cmp
inc
adc
dec
popa
mov
add
or
movsb
xchg
test
pop
add
mov
or
jbe
int3
jg
lods
out
scas
rorl
out
inc
inc
adc
add
mov
insb
lcall
jle
and
addl
fidivs
adc
shl
mov
pop
sub
jle
testl
mov
rclb
daa
pop
jge
insl
aas
arpl
aas
adcb
cltd
shrl
add
inc
movsb
pop
call
mov
ja
shll
movsb
mov
mov
addr16
pop
pop
iret
mov
mov
imul
icebp
or
jl
mov
adc
xchg
dec
data16
ss
push
add
into
shll
pop
push
xor
mov
adc
push
int3
ljmp
or
sbb
stos
push
sbb
xchg
dec
cmpsl
cmpsb
mov
pop
out
or
lods
fistl
mov
aas
movsl
and
pushf
jno
mov
sarb
lcall
xchg
rcr
mov
into
mov
push
mov
xchg
mov
leave
pop
ja
pop
enter
ljmp
out
ss
xor
sub
dec
nop
pop
test
push
cmc
mov
bound
pop
outsl
sub
pop
sub
xchg
lods
jbe
pop
jmp
enter
push
fdivs
int
sbb
icebp
inc
xchg
mov
dec
lahf
cs
and
fbld
mov
cmp
xchg
fadd
loop
lret
fwait
sbb
mov
push
jno
pop
es
push
out
cmp
jno
add
inc
stos
and
mov
neg
stos
shrl
bnd
push
ja
shr
cmp
or
mov
xor
jmp
dec
es
jbe
jl
sub
daa
mov
ret
xor
pavgb
xor
dec
sub
roll
mov
push
ss
js
xor
inc
cld
ljmp
stos
imul
es
in
inc
in
test
mov
or
mov
fidivrs
add
inc
lcall
ja
movl
inc
shlb
gs
sbb
out
dec
movsl
cmp
fnstcw
adc
mov
test
mov
pop
push
sub
xlat
mov
inc
dec
faddp
div
mov
push
pop
ficoms
out
add
out
cwtl
mov
es
cs
adc
inc
icebp
sahf
adc
push
inc
push
xchg
inc
frstor
insl
shrl
imul
decl
out
sbb
mov
bound
xor
mov
xchg
in
xor
rcrb
dec
pushf
in
fcmovne
test
add
pop
push
jne
or
adc
insl
xchg
lret
mov
adc
call
stc
out
das
aad
test
inc
test
loope
je
xor
cmpsl
inc
jb
add
dec
fcmovb
push
mov
push
xlat
jecxz
xchg
ror
in
in
sub
inc
sbbl
dec
pop
aam
mov
mov
inc
pop
adc
and
cwtl
lods
arpl
mov
push
idiv
adcl
mov
cli
lods
jp
fwait
enter
xor
mov
bound
fbld
lds
and
les
and
dec
in
sbb
dec
mov
arpl
jle
mov
imul
insb
jle
jmp
xchg
scas
rolb
cmp
fs
bound
push
or
dec
dec
ja
sub
sbb
fsubs
pop
jb
mov
xchg
loopne
insl
repnz
mov
movsb
lea
adc
loopne
loopne
mov
sti
dec
sahf
xchg
aas
mov
iret
pop
pushf
ja
cmp
hlt
pop
movntq
mov
push
out
sbb
jbe
inc
nop
imul
lods
push
push
add
mov
inc
mov
pop
xor
and
adcl
int3
xor
or
inc
mov
fisttpl
push
xchg
pop
push
or
sahf
dec
fisubrs
imul
push
jnp
test
xor
shll
sub
dec
aaa
push
pop
mov
test
fists
out
ret
jno
xlat
pop
lea
mov
jg
push
data16
sbb
push
cmp
stc
dec
cmp
inc
inc
int
dec
mov
push
lods
and
jnp
inc
mov
sbb
insl
cld
xor
xchg
cmc
lea
test
jno
mov
mov
jbe
mov
jg
sti
dec
aas
sub
push
andl
or
sub
mov
jg
arpl
mov
jecxz
stos
pushf
add
xor
xchg
add
mov
sahf
jae
fdivrs
push
out
jb
idiv
cmp
cli
push
push
inc
push
xchg
outsb
push
loop
push
sub
cmp
outsb
das
push
outsb
iret
or
scas
or
inc
daa
mulb
inc
sbb
scas
scas
xor
cmp
cmp
push
stc
movsl
adc
and
pop
sarl
aam
pop
imulb
mov
aaa
pop
clc
in
pop
mov
dec
xlat
adc
xor
js
movsb
adc
in
std
lret
movaps
std
je
jmp
fsubrs
xchg
pop
aad
sbb
addr16
fildl
cmp
in
mov
test
mov
push
push
or
sbb
lods
pop
popf
lock
mov
push
pop
adc
push
cmc
xor
addr16
lods
jo
sarb
je
jno
xchg
pop
xor
xchg
push
xchg
pop
fcomps
pop
dec
nop
cli
dec
inc
cmpsl
adc
mov
sub
imul
icebp
add
mov
add
mov
cmp
mov
mov
dec
cld
xor
pop
int
ds
imul
cmp
pop
in
and
push
dec
hlt
movsb
xchg
call
aad
push
jo
rcrl
insb
inc
lods
push
je
addr16
cwtl
jae
sub
rcrb
mov
mov
push
inc
jbe
xchg
loopne
and
jae
push
add
sub
test
mov
in
xor
imul
es
outsl
popa
jge
add
test
jbe
sub
sbbl
loopne
jns
jo
jnp
mov
and
pushf
nop
push
push
lret
sub
xor
pop
inc
push
push
clc
scas
jl
xchg
xchg
xchg
jg
sbb
add
div
subb
add
je
or
xor
mov
pop
sub
or
pop
or
es
push
lds
inc
dec
mov
adc
les
sub
cmp
bndstx
bndstx
jmp
push
je
mov
scas
roll
jne
cltd
mov
clc
adc
repnz
sti
fistpll
or
xchg
and
or
mov
lcall
inc
cwtl
push
int
testb
sub
sahf
sarb
mov
test
add
cwtl
inc
xlat
popa
push
xor
stc
sbb
mov
adc
mov
pop
cmpsb
mov
push
sbb
mov
sti
xor
mov
xor
mov
mov
and
mov
and
inc
xchg
test
jl
cmp
aas
xchg
stc
xchg
out
cmp
mov
arpl
xchg
add
je
scas
xor
pop
arpl
pop
ljmp
xchg
stos
std
int
cmpsl
cmpsl
aaa
pop
hlt
sub
mov
dec
mov
in
gs
jg
fsubrl
cltd
iret
movaps
add
stc
add
push
rorl
mov
rcrl
add
and
mov
mov
pusha
repz
daa
clc
push
shlb
jnp
lea
xchg
sbb
jge
push
sahf
xchg
fwait
ja
pop
pop
mov
xor
mov
pop
jmp
addr16
lret
shlb
stc
adc
push
or
in
rcll
xor
dec
lahf
cmp
mull
adc
and
sbb
fidivl
pop
mov
mov
adc
shr
insl
sbb
gs
mov
xchg
aam
in
fcomps
jae
xchg
data16
cmc
loopne
adc
sub
mov
mov
jg
sti
ret
pusha
cmpb
adc
mov
xchg
push
add
repnz
adc
daa
divb
or
lods
sub
push
pop
ss
xor
out
inc
adc
mov
cmpsb
add
lds
ja
out
pop
stos
xor
or
aaa
push
mov
rcr
push
and
test
xor
jb
je
mov
jle
xorl
mov
jmp
imul
iret
dec
add
shl
lock
cmpsb
pop
mov
cli
lret
dec
xor
int3
insb
repnz
les
lahf
sahf
or
addr16
imul
and
pop
insb
sub
mov
test
pop
mov
pop
pop
pop
lahf
jmp
push
insb
sbb
imul
push
std
sbb
pop
hlt
inc
inc
mov
pushf
sub
dec
push
mov
jb
cs
lret
sbb
repnz
popf
aaa
push
dec
stos
loop
push
or
fwait
and
je
lods
mov
pusha
mov
push
pop
mov
jno
nop
lret
xchg
jns
xchg
lret
push
jmp
sub
adcb
push
add
cli
out
push
daa
sub
insl
mov
pop
inc
pop
xchg
cmp
dec
xorb
sub
cmp
ljmp
pop
sub
mov
dec
xor
leave
lcall
je
xchg
movlps
mov
lahf
aam
int
jns
incb
xchg
addr16
cmp
cmp
stos
add
aas
jmp
pop
push
inc
pop
fnstenv
lea
push
dec
xor
mov
lock
loopne
cmp
xor
lds
jo
repz
xlat
push
lret
mov
mov
loopne
sub
xchg
adc
outsb
fs
andl
push
xchg
ja
inc
dec
push
push
aam
sbb
cmp
leave
add
xchg
out
cltd
mov
sbb
pop
ret
jnp
mov
jns
dec
sub
es
mov
outsb
stos
pop
repz
aam
xchg
cmc
js
std
xlat
lods
jno
fldt
mov
pop
xchg
xchg
lcall
test
or
rcr
push
dec
movsb
pop
pop
je
jno
popa
cmc
xor
adc
xor
test
jle
js
in
mov
cmc
repnz
mov
fldcw
jno
mov
outsl
dec
xlat
xchg
xchg
mov
pop
pop
dec
xchg
or
lock
cmpsl
daa
xchg
pop
arpl
rcl
jp
clc
ja
sub
mov
mov
jnp
pop
shll
mov
xchg
rcr
add
mov
pop
lcall
addr16
shl
push
outsl
out
xchg
cmp
movl
pop
mov
stos
stos
and
loope
notb
xor
into
fnstcw
lds
lock
popl
subl
mov
lock
fisttps
sub
popa
adc
mov
aam
cmp
jmp
fimull
nop
icebp
in
ljmp
gs
inc
mov
push
and
shr
xchg
popa
jno
lods
lea
es
mov
xor
pop
add
movsl
mov
repz
lods
push
test
mov
jp
iret
xor
push
std
lret
das
sti
push
dec
mov
in
outsl
sar
and
ss
rcr
lods
pop
test
add
push
enter
jae
or
les
insb
loope
out
lods
add
or
mov
cmp
sahf
push
push
stos
jnp
clc
lcall
iret
xor
cli
call
jo
mov
push
xor
or
jns
jl
in
pusha
mov
cmp
mov
sahf
lcall
dec
pop
test
and
jl,pn
mov
in
mov
fcmove
jo
int
push
fnsave
xlat
mov
push
ljmp
mov
mov
shll
sbb
mov
jle
hlt
pop
sahf
stos
pop
lock
je
icebp
pop
mov
xor
js
adcb
les
or
popa
ror
dec
adc
dec
je
leave
cmp
scas
xchg
xchg
xchg
mov
jmp
mov
add
int
xchg
xchg
and
js
push
negb
mov
cmpsb
popf
insb
xor
aam
cmpsb
dec
lods
mov
jg
sbb
out
fcmovu
lods
ret
fsubrl
jl
jl
int
lods
das
jg
ror
fwait
dec
push
sbb
jne
xchg
push
leave
mov
pop
inc
mov
cmp
loope
iret
jmp
xor
icebp
mov
sbb
outsb
iret
arpl
cmp
mov
jmp
inc
add
lock
mov
sbb
jne
jno
rcll
mov
dec
xlat
outsl
imulb
cmp
sub
mov
popa
pop
out
xchg
sub
push
lods
xor
andb
fildll
add
add
mov
xor
sbb
pop
aad
aas
sbb
mov
ret
push
jg
jne
add
adc
mov
pop
fistpl
dec
add
js
insb
sbb
rolb
aas
lds
int3
mov
xchg
xor
push
push
fisubrl
push
jp
repnz
mov
xchg
adc
xor
je
mov
lds
jns
fsts
cmp
mov
imul
je
dec
or
cli
adc
or
leave
inc
test
jno
jne
cmp
ss
addr16
mov
rcl
lahf
adc
js
push
loopne
cs
or
xor
mov
cld
and
aad
jbe
pop
and
jne
sbb
push
dec
and
test
dec
xor
inc
arpl
add
inc
aas
dec
fs
xor
push
mov
pushf
in
push
jno
inc
mov
add
mov
je
rolb
xchg
jns
dec
stos
out
mov
sbb
fsubrs
aad
int
hlt
aam
or
cmp
sahf
xchg
int
out
icebp
and
or
pop
out
adc
xor
sub
push
repnz
jo
sarl
mov
into
cmp
pshufw
adc
push
les
cmpsl
dec
mov
add
xor
cmp
sub
cmpsb
dec
push
stos
mov
nop
cs
add
ret
sarb
adc
aam
fsubr
pop
mov
sub
mov
mov
xor
mov
or
imul
inc
daa
out
pop
jecxz
out
xchg
push
push
ficomps
addr16
mov
scas
sbb
js
int3
outsl
lock
mov
test
insb
arpl
enter
int
addl
rorb
mov
mov
in
cmc
jae
out
push
xchg
sub
test
sar
xlat
pusha
pop
ljmp
aam
adc
cmp
xorl
jle
dec
insl
and
mov
xchg
add
stos
or
sub
jg
xchg
enter
mov
pop
adc
jle
dec
orb
and
ret
fwait
xor
dec
jmp
fiadds
lret
jl
addb
sbb
inc
mov
iret
sub
xor
inc
loopne
adc
insb
pop
add
push
pop
sbb
jp
out
test
cmc
sub
gs
cwtl
mov
fcmove
aaa
adc
push
cmpsb
add
xchg
mov
jecxz
mov
sti
subl
fsts
and
sbb
adc
out
mov
mov
push
leave
dec
push
dec
insb
pop
pop
push
js
addr16
mov
out
xchg
sub
or
pusha
jmp
xchg
rcrb
stc
adc
jle
shl
movsb
mov
cli
sub
andl
sahf
cmc
cmp
inc
sub
jle
dec
push
repz
cmp
xacquire
hlt
fwait
mov
push
pop
add
push
adcb
mov
imul
rclb
stos
fldl
lock
aas
lret
ljmp
mov
mov
out
aas
mov
mul
mov
sbb
mov
pushf
stc
mov
out
int
dec
insb
ret
fdivrl
mov
adc
popa
popa
inc
dec
call
aaa
sbbb
pop
out
cmp
inc
push
out
jg
xchg
mov
rclb
lret
mov
sub
sub
in
jae
ljmp
test
in
mov
std
mov
jne
loopne
jo
sbb
push
lahf
and
bound
pop
call
push
cmp
sub
hlt
int
or
out
inc
sub
cld
in
lahf
stos
call
push
pop
inc
mov
mov
ret
add
pop
inc
push
pusha
adc
scas
stc
adc
aad
dec
ret
sbb
aas
jbe
dec
jp
cmp
lahf
lret
mov
aad
aad
ret
daa
bnd
aad
aaa
and
push
aam
dec
icebp
aaa
mov
mov
inc
test
mov
std
shl
addl
insb
sbb
aas
mov
addr16
cmp
movsb
lcall
in
xchg
xor
cmp
jge
je
shl
xor
js
adc
mov
sbb
mov
jl
shll
test
bound
add
jae
pop
outsb
jne
sub
inc
mov
inc
lret
inc
mov
dec
je
shlb
xchg
cs
mov
mov
add
add
pop
loopne
mov
cmpsb
lds
sub
sti
or
mov
fwait
push
aaa
loop
clc
push
ficomps
jno
shl
jge
leave
mov
jb
mov
or
ss
pop
imul
mov
push
mov
and
lds
inc
sti
outsl
loop
pop
daa
mov
repz
adc
int
fwait
dec
inc
jnp
cmp
enter
and
addl
inc
add
ror
xor
jo
lret
pop
sub
test
xor
movsb
mov
fildl
pop
outsl
xchg
xor
pop
sbb
ret
sub
outsl
pop
sbb
mov
stc
push
f2xm1
dec
mov
rorb
push
jge
jno
xchg
inc
call
xor
push
jnp
mov
xchg
jecxz
das
fdivs
sarb
adc
xchg
jp
cs
lea
add
push
pop
fucomp
cmp
sub
push
shll
sbb
add
lea
xor
in
aad
adc
push
sub
lock
test
sbb
ret
jg
fidivl
pushf
out
pop
mov
stos
movsb
adc
outsl
mov
or
dec
inc
mov
pop
jmp
into
inc
in
dec
out
notb
loope
mov
mov
add
cltd
dec
dec
scas
dec
cmpsb
sbb
mov
in
and
test
sbbl
iret
mov
fldl
aam
out
insl
xor
push
dec
fwait
cmp
movsb
adc
jnp
in
and
sbb
shl
stos
or
xor
dec
dec
xor
inc
aas
dec
cmp
push
icebp
addr16
push
sub
inc
pop
inc
loopne
out
mov
adc
andl
mov
fwait
cmp
push
mov
rcr
shlb
xchg
leave
popf
pop
ret
shr
lret
sahf
jmp
mov
xchg
and
out
popf
jno
push
dec
inc
or
rclb
es
les
shr
mov
cmpsb
int
shl
xor
and
stc
mov
cmp
iret
and
push
adc
cmp
test
adc
loope
mov
stc
cmp
in
adc
mov
jmp
lcall
imulb
mov
cwtl
repz
pop
mov
int
pop
addb
xor
and
mov
data16
push
pop
sbb
sub
push
mov
mov
push
or
adc
pop
es
mov
mov
pop
repz
push
xchg
mov
stos
xor
xor
fwait
xchg
insb
aas
aas
icebp
xchg
add
sbb
fbstp
xchg
les
xchg
inc
xchg
decl
push
mov
mov
fidivs
fs
xchg
mov
or
inc
mov
stos
push
mov
std
mov
pop
shll
pop
push
push
xchg
sar
outsb
fistps
xor
sub
scas
xor
pushf
loopne
hlt
and
fsubrl
push
pop
aas
push
mov
shrl
xor
das
cvttps2pi
or
pop
or
pop
mov
dec
add
in
outsb
popa
addr16
xchg
add
stc
push
in
sub
int
pop
add
lock
fstl
and
cmc
or
mov
sbb
sbb
xlat
mov
add
and
int
mov
push
stc
adc
xchg
lds
cli
das
ljmp
inc
fisttps
cmp
incl
lret
outsl
int
xchg
jnp
dec
hlt
add
insl
divb
jnp
xorb
popf
out
dec
ret
stc
data16
cmpsb
stos
mov
dec
pop
adc
popa
cmc
xchg
loope
loopne
pop
pop
push
stos
xchg
jb
rep
and
inc
outsb
loop
in
mov
push
cmc
setno
lea
in
and
add
std
add
pushf
xor
in
cmp
mov
push
jae
lahf
js
xor
fbld
lcall
or
dec
adc
add
and
lods
add
icebp
movsb
mov
lods
das
push
ljmp
cmp
pop
outsl
leave
push
jge
into
inc
daa
sub
jge
jne
lcall
xlat
dec
mov
es
mov
pusha
movsb
hlt
mov
jbe
push
scas
je
jl
and
pop
mov
lods
inc
je
jb
push
cmp
pushaw
xchg
xchg
cmpsl
call
pop
dec
push
mov
scas
insb
movsl
jmp
mov
dec
leave
jbe
bound
sub
inc
adc
hlt
add
out
sbb
xchg
and
fs
cmp
or
cmc
aas
sub
fs
mov
aad
mov
dec
aam
jecxz
out
insb
xor
sahf
in
jmp
push
addb
stos
add
out
outsl
jl
int3
dec
cmp
sub
les
jecxz
xor
add
xor
imul
fucomip
and
int3
addb
jg
mov
subb
hlt
sbb
sub
cli
in
sub
loope
cmpsb
stos
test
jns
int
xchg
jnp
mov
cmp
mov
aaa
or
ja
scas
mov
stc
shlb
pop
rcrl
les
lods
pop
pop
das
stos
imul
stc
and
xchg
lret
mov
xor
sub
dec
pop
mov
jbe
jnp
dec
pop
pop
mov
push
jge
xchg
add
xchg
cmp
push
nop
mov
test
push
js
fadds
mov
sbb
popa
pop
jo
mulb
push
hlt
cli
pop
inc
mov
add
dec
push
stos
test
mov
stc
testb
mov
lcall
icebp
test
adc
and
push
lods
fwait
cmpsb
insb
lcall
sub
mov
push
repz
xchg
mov
stos
xchg
mov
ja
sbbl
dec
iret
rorl
add
popf
xor
fisubs
sti
push
loope
jge
sub
jnp
fwait
mov
stc
mov
rorl
jmp
cmc
xor
orb
xlat
or
mov
or
or
sahf
inc
mov
sbb
imul
movsb
int
pop
or
add
jo
call
stc
or
mov
mov
shlb
pop
cmp
push
cmpsb
loope
push
icebp
push
insl
scas
clc
cmovs
dec
mov
pusha
xchg
rclb
or
gs
add
outsl
test
data16
aam
or
fnstcw
mov
cmpb
cmpsb
mov
gs
cli
or
mov
jae
dec
in
fiadds
pushf
add
pop
mov
cmp
addl
mov
push
pop
pop
mov
enter
lret
push
pusha
clc
adc
adcb
in
pop
dec
lock
push
push
mov
and
and
push
sub
sbbb
sub
fildl
mov
cmc
pop
sub
or
test
pop
cmc
adc
pop
xor
jnp
cli
lcall
mov
call
sti
je
inc
push
clc
mov
subl
mov
sbb
fidivl
repnz
ret
aaa
sbb
xor
sbbb
in
sub
nop
fimull
mov
lahf
test
int3
mov
cmpsb
mov
daa
fcmovu
stos
jmp
push
mov
dec
ret
dec
xchg
ret
fmull
iret
mov
xor
out
pusha
lret
movsl
mov
cmc
sbb
pop
mov
dec
cld
mov
mov
mov
ja
dec
dec
cmp
mov
scas
mov
sahf
in
sub
pop
dec
mov
cld
mov
adc
dec
xchg
sbb
or
sub
push
insb
lds
ljmp
rcrb
sbb
push
sahf
shrb
insb
mov
sub
outsl
add
mov
xchg
sbb
sbb
std
sub
inc
push
sub
ss
aas
shr
call
repz
leave
cwtl
fs
mov
sbb
repnz
in
and
pop
pop
in
repz
push
dec
and
idivl
aaa
jbe
or
filds
mov
fs
dec
mov
out
cmp
add
add
mov
push
sbb
jb
push
mov
test
lds
pop
mov
sahf
rcll
jmp
inc
cmp
cmpsl
or
test
cmp
adcl
into
out
inc
sbb
test
jle
call
push
int
inc
cmc
jo
lods
push
nop
add
sti
scas
movsl
jl
popa
and
inc
je
ja
add
inc
lret
daa
aaa
inc
ss
sub
mov
push
xorl
lods
push
jge
in
fs
push
insb
xchg
imul
bound
sub
add
jo
and
loop
xchg
dec
pop
out
push
xor
fstl
popa
mov
in
test
xor
stos
test
and
test
aad
push
cli
syscall
add
jae
lret
push
jge
stc
xchg
rcrb
push
xlat
in
fstps
or
loope
mov
in
movsl
mov
sbb
cld
xor
xchg
sbb
lret
xor
test
dec
sub
scas
xchg
loope
js
out
je
mov
sub
push
sbb
pop
sub
mov
daa
popf
outsb
or
scas
jg
xor
xor
fcomip
cmp
xchg
rolb
add
add
mov
sub
mov
push
or
fdiv
jmp
rclb
aam
les
mov
pushf
in
dec
xor
mov
push
lret
pusha
repz
call
adc
jbe
or
sbb
pop
xchg
fwait
jbe
pushl
mov
sub
jl
mov
and
xor
andl
aaa
push
xor
test
lret
dec
lods
scas
ret
js
scas
cs
loope
jae
push
addr16
mov
push
movl
sahf
jge
add
and
pop
lcall
stos
sub
mov
mov
jge
scas
sbb
gs
aas
xchg
mov
dec
or
sub
jle
cmp
sbb
dec
xchg
ja
and
mov
outsl
popa
sub
xor
insb
lcall
enter
inc
sub
fcomp
dec
add
shrl
sbb
jns
mov
hlt
pop
lcall
xor
lods
mov
inc
lcall
aas
out
ss
ja
and
lret
and
outsb
popf
mov
adc
mov
out
filds
mov
rcrl
xchg
fsub
imul
rorb
pop
fidivrl
mov
and
pop
pop
and
test
push
ret
mov
add
inc
jns
push
jbe
jle
lea
je
pop
jno
shll
or
pop
lock
add
and
fcom
les
scas
mov
dec
aad
mov
jp
iret
cmp
testb
sbb
iret
dec
mov
sbb
fdivrs
ret
movsl
or
ja
pusha
cmp
push
xchg
sbbl
das
cmp
pop
mov
or
sub
jg,pn
ds
lret
addr16
lret
ljmp
push
push
mov
xor
xor
div
push
cmc
inc
mov
enter
jae
cmpsb
iret
pop
orb
imul
xor
aas
xor
cmp
add
addr16
gs
push
or
and
push
push
xchg
dec
push
mov
or
jg
outsb
sub
mov
aad
cmp
inc
fcoms
scas
loop
in
or
jbe
jmp
lcall
lods
nop
sbbl
inc
xchg
andl
bound
ljmp
cmpsl
mov
test
push
loop
or
push
push
sub
mov
loop
loopne
cli
pop
mov
jae
in
cltd
mov
xchg
cltd
cmp
push
mov
sbb
ret
mov
pop
fidivl
mov
fisttpl
cmp
movsb
popf
mov
insl
add
pop
inc
arpl
nop
clc
loopne
jae
into
inc
push
lods
call
push
repz
andb
push
pop
jecxz
add
dec
dec
sbb
push
in
int3
inc
sub
push
repnz
push
and
lret
xor
or
shll
fcomps
cmpsl
jmp
inc
sti
and
hlt
jo
insb
sbb
lock
sbb
push
xchg
push
jo
notl
mov
ret
lea
jns
xor
mov
shrl
dec
xlat
mov
inc
jno
inc
fwait
or
iret
test
aas
loope
sub
mov
fadds
mov
push
dec
xor
push
xchg
xor
popf
test
adc
stos
xor
or
pop
jecxz
add
mov
push
adc
inc
ficoms
push
dec
cmp
push
subl
pop
xchg
inc
inc
mov
dec
or
enter
sti
mov
fstps
jns
pop
cmp
xor
add
xor
enter
pushf
pushf
mov
push
jae
aam
cmp
pushf
sub
aam
mov
negb
mov
jnp
mov
dec
rep
imul
jmp
stc
fdivs
loope
and
cmp
lods
fcoms
pop
cmp
mov
jmp
push
cmp
mov
outsb
cmp
mov
sbb
xor
repz
repnz
or
mov
repz
pop
inc
call
scas
adc
cmp
inc
mov
ljmp
pop
inc
cltd
shld
rcl
lahf
mov
ret
or
mov
push
and
pusha
mov
mov
imul
add
std
aad
push
rorl
cs
push
and
add
fs
add
je
jl
rorb
jnp
daa
adc
inc
sub
clc
in
cmp
pop
jl
adc
fmull
and
mov
notl
mov
ret
mov
nop
pop
mov
cs
popl
mov
cld
aam
xchg
cmc
into
stc
inc
jl
insb
imul
ss
mov
inc
jne
and
mov
testb
jnp
movsb
arpl
mov
push
daa
jmp
in
push
dec
push
jp
test
enter
cli
jne
adc
roll
add
pusha
add
testl
sub
sti
sub
addr16
test
test
sub
movsb
pop
add
insb
pop
mov
mov
add
pushf
incl
xor
movl
pop
xor
inc
and
loope
data16
sub
pop
push
mov
fistl
or
icebp
popa
mov
adc
test
pop
repz
mov
pop
int3
scas
dec
xlat
inc
and
and
stos
in
aad
mov
jmp
dec
aad
add
jo
mov
pop
sub
sbb
mov
scas
pop
lcall
add
sarl
lea
xor
mov
dec
add
pop
sti
sbb
pop
fucom
push
call
test
pop
xchg
and
jp
inc
xchg
imul
leave
xchg
dec
jl
pop
mov
fdivr
fstl
sbb
mov
repnz
mov
sbb
xchg
cmp
shrl
xor
jg
xor
adc
cmpsl
insb
xchg
shr
scas
jb
repnz
jnp
mov
mov
mov
add
outsl
cmp
xor
mov
test
imul
jle
add
push
lret
cld
add
pop
jmp
adc
or
es
aas
jo
cld
or
ja
and
jmp
push
loop
lea
add
bound
icebp
stos
push
push
js
and
inc
xchg
cmc
pop
incb
lods
ds
add
add
jmp
aaa
mov
xor
cltd
dec
lock
jmp
push
imul
push
push
jno
fwait
outsl
rorb
xchg
cmp
jae
in
jo
inc
ror
push
fdivl
push
inc
sahf
adc
cs
and
or
add
adc
jo
push
cmp
mov
sub
sahf
insb
shl
mov
fdivrs
jae
repnz
clc
das
add
or
xlat
sub
push
jmp
xor
sbb
cmp
adc
insb
loope
adc
jmp
inc
adc
cli
stos
addr16
movsl
std
cmp
std
addr16
pop
sub
mov
or
xor
mov
scas
lret
push
inc
ficoms
and
je
test
dec
xchg
loopne
push
xchg
xchg
shr
xchg
clc
xchg
ja
add
dec
sub
jmp
sbb
lcall
adc
and
lcall
jne
dec
sbb
out
inc
and
js
jae
arpl
mov
stos
adc
addr16
mov
sub
pop
inc
push
rcrb
dec
js
xor
data16
scas
pop
dec
iret
mov
adc
lds
in
cmp
in
mov
mov
fbld
sbb
and
insb
nop
or
and
or
mov
lea
add
jb
mov
lods
das
push
das
dec
fidivrs
or
xor
inc
sub
jl
mov
orl
aad
jo
imul
loopne
outsb
xchg
xchg
cmp
mov
aaa
addb
ret
pop
mov
mov
ss
lret
sub
add
jo
out
push
div
loope
jge
leave
adc
inc
mov
rcr
bound
xor
cmp
adc
sub
push
xor
int3
or
mov
xchg
clc
mov
pop
add
or
mov
jb
inc
stos
shll
cmc
mov
pusha
pop
jl
adc
push
push
call
and
jo
rcr
inc
shrl
sbb
loop
icebp
cmp
addr16
aam
inc
fimull
cmpb
inc
xchg
int3
mov
mov
enter
test
mov
imul
call
xor
fistpl
int
out
inc
push
dec
loopne
push
leave
ret
xchg
and
adc
push
test
cmpsl
stos
lahf
stos
iret
jno
pop
lds
fiadds
xchg
daa
sub
mov
jo
gs
mov
push
adcb
fidivrs
or
and
mov
lcall
ret
scas
pop
mov
int3
mov
in
mov
jnp
mov
mov
cmp
enter
xor
jnp
test
cmp
rcrb
stos
xchg
add
loopne
inc
dec
adc
jno
fiaddl
lret
lcall
xor
adc
out
and
mov
mov
and
pop
and
insl
cmp
pushf
shll
arpl
lds
sahf
jo
cs
inc
inc
aaa
and
push
and
push
call
lods
adc
mov
push
cmpsb
pusha
movsl
jo
sbb
adc
mov
popf
sub
mov
rorl
pop
push
sbb
daa
test
cmpsl
fstl
jno
bound
jbe
js
pusha
mov
push
call
add
fwait
lods
ret
pushf
mov
jnp
or
and
cmp
pop
test
push
inc
pop
testl
out
sbb
or
cmp
mov
add
loopne
js
lods
xor
or
not
test
push
add
add
adc
out
mov
test
mov
enter
and
adc
test
arpl
shll
add
imul
icebp
sub
lret
je
cmp
out
aas
stos
mov
insl
mov
jge
aas
mov
imul
cmp
sbb
iret
and
movsb
jns
jp
mov
out
jge
fisttpl
inc
test
pop
mov
mov
cmp
mov
dec
sub
jmp
xchg
push
imul
sub
fimull
fwait
mov
outsl
push
test
sbb
adc
rcr
xor
sbb
shl
jg
xor
sbb
jo
dec
enter
jo
xor
test
dec
dec
pop
and
xchg
and
lret
push
icebp
push
shrl
xchg
subl
and
jne
sub
mov
rcll
int3
pop
sbb
and
gs
jb
aaa
xor
lcall
mov
or
mov
ljmp
daa
icebp
pusha
aam
lods
push
fadd
push
xor
in
adc
xor
cwtl
sbb
inc
jg
shlb
cmp
jb
testb
sbb
xchg
xor
decb
mov
cmc
stc
xor
test
mov
dec
xchg
bndstx
adcb
cwtl
and
inc
mov
mov
mov
sub
fisttpll
ja
adc
leave
mov
rorl
test
nop
pop
dec
pop
xor
adc
push
adc
addb
mov
fimull
fstpl
jge
leave
inc
subb
dec
jmp
addl
jne
pop
cmp
or
lret
hlt
fmul
xchg
mov
imul
adc
in
add
sub
stos
jecxz
rcll
ror
fstl
scas
pop
movsb
mov
jae
push
notl
les
out
mov
rclb
xor
enter
adc
gs
pop
mov
fdivrl
and
dec
pushf
xor
jl
stc
fnstsw
push
jmp
sbb
sarl
sub
adc
cmp
inc
jl
xor
hlt
adc
mov
jae
push
pop
in
sbb
jmp
jae
mov
fdivl
sbb
testb
sbb
pop
xor
pop
sub
dec
dec
xor
jp
fwait
push
xchg
xor
mov
jg
xchg
les
out
loop
push
clc
popf
inc
mov
add
xchg
mov
pop
push
aaa
and
js
sub
pop
mov
mov
mov
add
cs
mov
xor
mov
js
stc
clc
shll
mov
mov
int
fs
cmp
and
sub
rclb
popf
jmp
iret
cmp
mov
dec
stos
fnstsw
pop
out
mov
cli
lods
xchg
cs
push
pop
cmp
mov
sahf
outsl
sbb
cmp
sbb
enter
mov
roll
adc
or
ds
push
into
add
jle
jo
es
lock
out
xchg
cmp
aas
mov
outsb
sub
jg
imul
cli
fbld
call
shrl
repz
jp
mov
out
mov
fcmovnb
repz
hlt
aas
in
addr16
mov
pop
cli
int3
or
adc
xchg
pop
push
xor
mov
push
jae
inc
aaa
inc
xchg
out
ret
mov
sub
dec
or
cmc
pop
mov
not
daa
dec
outsl
stc
lds
pop
lods
pusha
cld
es
ficoms
aam
enter
sti
pusha
adc
insl
xchg
out
inc
sub
fidivrs
inc
dec
cs
adc
test
jno
popa
pop
outsb
fstps
fldcw
pop
push
aaa
call
mov
inc
jge
jns
push
loop
and
in
sbb
call
fs
addb
pusha
push
repnz
idiv
sub
mov
pop
lds
shl
xor
outsl
imul
cs
cwtl
xor
mov
dec
inc
mov
adc
or
loopne
push
inc
cmp
loop
stc
popa
jecxz
and
xor
sbb
jmp
dec
aad
enter
add
push
push
nop
mov
and
jns
rclb
jle
xlat
movsb
gs
xchg
imul
call
movsb
leave
decl
sub
test
sub
adc
mov
out
cmc
jbe
jmp
and
xchg
imul
mov
arpl
orb
mov
add
out
stc
and
js
xchg
mov
push
cltd
shll
or
add
sub
movsb
push
mov
test
jbe
dec
hlt
xchg
test
arpl
dec
cmpsl
adc
or
outsl
pop
stc
stos
sbb
pop
out
hlt
jecxz
mov
repz
repnz
sub
or
sub
adc
jne
test
inc
fdivrl
cmp
dec
jecxz
or
jp
fsts
sahf
jns
inc
mov
add
xor
int3
mov
movsl
clc
iret
daa
sub
aam
test
jmp
test
jne
and
push
repz
sub
dec
fnsave
jns
dec
adc
insb
rcrl
sub
cmp
jmp
and
loope
loop
jne
mov
jle
fistpll
mov
sub
loopne
push
addr16
xchg
sub
push
movsb
cltd
movsb
lods
ljmp
jnp
push
scas
adc
mov
sbb
jmp
sahf
jnp
jb
movsb
mov
leave
enter
scas
nop
cmp
test
push
fldenv
cmpsb
shrl
les
stc
push
push
xchg
loopne
mov
xchg
push
in
nop
xchg
outsl
ja
pop
sub
xchg
call
mov
sbb
and
mov
push
movsb
fsubrl
push
inc
pop
jp
bound
push
jo
xor
dec
sub
lea
mov
xchg
sbb
mov
cmp
movsl
cltd
dec
inc
rcll
add
mov
lret
sub
lret
mov
hlt
cli
mov
sub
push
clc
push
push
sbb
jnp
mov
or
mov
jecxz
sub
push
mov
daa
int3
dec
adc
push
sti
aam
sbb
pop
lcall
dec
shll
notb
inc
add
mov
cli
pop
sbb
inc
loop
dec
fs
insl
sub
imul
sbbl
adc
mov
cmpl
jle
fsub
cli
pop
out
fisubrl
cwtl
jb
push
inc
mov
cmp
cmp
cmp
pusha
xor
push
aaa
fisubl
fucomip
and
loop
jecxz
int3
shl
int3
cmp
in
aaa
xor
pop
fcmovb
adc
fnsave
hlt
movsb
add
divb
loopne
jns
sub
push
fisubl
out
lods
clc
lahf
and
cmpsb
jno
adc
pop
or
mov
das
mov
mov
xchg
sbb
xor
mov
jne
fistl
mov
cmp
mov
mov
jne
xor
inc
mov
xchg
xlat
or
and
rol
xor
out
fcmovu
test
cmc
push
adcl
xlat
cld
test
pop
mov
and
adc
cmc
adc
sbb
ret
cmp
test
clc
fadds
lret
jl
push
adc
add
jbe
xor
insb
mov
push
les
mov
bound
sub
rol
dec
les
push
scas
cmpsb
jbe
imul
sbb
cmp
lds
subl
push
bound
pop
into
jne
nop
xor
js
pop
jge
sbb
xchg
cmp
sbb
cs
nop
mov
dec
shll
shrb
outsl
adc
inc
pop
ljmp
fisttpl
pop
addb
pop
jmp
paddd
data16
lret
push
bound
or
cs
lods
mov
add
not
lret
or
push
insl
add
jecxz
insb
mov
and
fstpt
pop
mov
and
xchg
js
pop
add
filds
icebp
mov
pop
push
imul
adc
adc
or
and
jl
mov
cmp
iret
mov
add
sub
sub
or
insl
mov
loopne
test
push
sahf
clc
mov
add
or
lcall
clc
jb
mov
pusha
ja
jl
xor
in
sub
loop
js
adc
cmp
aam
add
pop
adc
and
icebp
mov
jle
arpl
fucomp
and
cmp
mov
mov
dec
int3
and
mov
inc
jmp
and
lcall
adc
xchg
or
lret
test
add
mov
icebp
inc
mov
push
sbb
ss
mov
pop
xchg
stos
adc
dec
jne
sbb
jle
iret
pop
iretw
xchg
dec
int3
mov
sub
sbb
adc
js
sbb
ss
add
add
or
push
pop
iret
jo
adc
mov
adc
push
scas
jno
dec
hlt
and
pop
gs
ja
sbb
test
popf
pop
clc
xor
dec
nop
cs
xor
movsb
add
jmp
jl
add
sbb
je
ja
and
js
in
sahf
addl
mov
mov
imul
add
push
mov
nop
cmp
aaa
or
inc
cmpsl
fadds
push
aad
ss
push
mov
push
repz
outsl
mov
pop
imul
mov
dec
adc
push
fs
mov
repz
mov
or
sbb
xlat
aam
int
dec
fadds
dec
arpl
sub
les
inc
jl
inc
test
rcrb
loopne
sub
jmp
mov
mov
sbb
dec
push
sti
xor
ret
testb
mov
popf
movsl
call
sub
rolb
fs
mov
xchg
in
xorb
adc
cmpsb
push
dec
pop
test
xchg
sub
outsb
out
cli
outsb
mov
in
insl
outsl
icebp
sbb
sahf
mov
sub
push
hlt
std
loopne
dec
fnstsw
stc
fidivs
out
or
mov
bound
aaa
sub
cli
scas
pushf
push
fwait
pop
jg
cmp
or
pop
scas
xchg
std
lret
mov
testl
push
ficompl
pushf
mov
pop
xor
mov
popa
sahf
xchg
push
or
incb
clc
cld
frstor
sbb
sbb
pushf
jle
not
ficompl
fsubrs
xchg
adc
ret
js
xchg
outsl
stos
add
pop
jecxz
dec
cmpsb
mov
fadds
enter
das
scas
lds
ja
loopne
pop
mov
test
sbb
fst
mov
dec
pop
stos
nop
in
push
mov
pop
cmp
mov
mov
lea
and
lds
cmp
jbe
add
jp
repnz
mov
out
mov
push
roll
sbb
test
sarl
xor
fcoml
xchg
or
addr16
enter
sbb
aam
sub
xor
loope
mulb
dec
push
inc
aas
fisubs
psubusw
jb
mov
cmpsl
adc
or
xor
push
sub
and
and
and
inc
inc
cmp
fnstsw
rolb
jmp
adc
test
lods
ret
das
push
dec
addr16
mov
xchg
daa
inc
popf
sub
push
mov
push
push
mull
mov
enter
mov
mov
push
cmp
push
pop
std
pop
repnz
mov
int3
pusha
push
out
repz
iret
shlb
pop
jge
stc
cmc
loopne
bound
dec
es
xor
les
fbld
jle
lret
mov
mov
shrl
and
jae
add
icebp
dec
jno
cltd
movsb
int3
aaa
and
push
ret
test
mov
outsb
and
pop
arpl
push
xadd
push
dec
cwtl
les
xor
jnp
jecxz
pop
mov
pop
leave
or
add
jne,pt
testb
jp
bswap
mov
xor
jne
cmp
in
and
and
or
dec
flds
cmpsb
or
sbb
ret
cmp
daa
clc
daa
cmp
add
nop
cmpl
sub
jae
pop
pop
push
mov
xor
adcb
and
call
xor
data16
mov
push
mov
jne
loopne
fdivrs
in
lahf
mov
into
in
js
push
xor
inc
movsl
int3
jno
push
cmp
push
jo
leave
lods
and
dec
lock
mul
ret
xlat
jmp
push
fstps
jp
int3
cmc
or
xor
xor
repnz
xchg
push
push
daa
lock
sbbl
jecxz
dec
mov
imul
inc
dec
mov
jns
or
jmp
mov
sahf
jmp
test
popl
mov
out
jmp
xchg
test
hlt
dec
data16
in
mov
cmp
movsl
sbb
jge
mov
jg
sub
mov
sbb
jg
inc
inc
dec
cmp
xchg
es
dec
jge
pop
fimuls
hlt
lret
adc
mov
jbe
sub
js
outsb
clc
jo
pop
sarb
dec
pop
adc
push
into
mov
inc
pop
fwait
and
push
loope
pop
mov
cmpsb
mov
cmc
stos
out
inc
les
mov
flds
mov
cmc
pop
clc
popa
clc
rcl
inc
mov
dec
test
push
fstpt
sbb
or
adc
xor
jo
int
lea
sub
subb
nop
scas
mov
pop
push
dec
adc
cmp
leave
push
in
mov
sarl
outsl
andb
mov
and
mov
scas
jbe
push
adc
fstpl
bound
cld
sub
mov
enter
aaa
aaa
enter
push
mov
into
lock
mov
pop
push
test
lods
movsl
adc
pop
testl
jp
les
roll
outsb
test
jmp
push
repz
pop
mov
das
dec
xchg
xor
adc
subl
sbb
sbb
sbbb
cs
xchg
mov
loop
mov
sbb
loope
leave
rolb
add
out
sbb
int3
sbb
pop
jle
addr16
fcmovnu
inc
es
xchg
shlb
adc
mov
fdiv
sbb
xor
mov
dec
div
dec
stos
lods
cltd
pop
and
cwtl
pop
or
pop
stos
icebp
xor
ds
test
cmpsl
push
lret
xchg
cmp
push
daa
ds
sbb
ret
sbb
popa
loope
lret
xchg
or
stc
shl
sub
push
rcrl
mov
fmull
sbb
push
xchg
sbb
xchg
push
mov
inc
push
xlat
imul
fmuls
or
or
adc
aaa
mov
popf
neg
lods
fldt
or
cmpsb
lcall
out
addr16
in
shrb
mov
cmpsb
jns
or
pop
ret
sar
or
xchg
push
sub
enter
cmc
arpl
mov
cmpsl
pextrw
mov
stos
inc
push
in
jp
scas
lods
gs
scas
sbb
pop
inc
jl
cs
push
mov
pusha
je
js
jle
into
dec
and
pop
push
data16
repnz
jp
test
outsl
cs
xchg
pop
fdiv
xchg
stos
pop
xchg
jnp
insl
xchg
jmp
sub
out
addl
dec
movsb
shld
push
repz
push
mov
outsl
movsb
push
xchg
outsl
out
adc
cmpsb
test
mov
mov
loope
push
cmpsb
or
pop
test
mov
lea
inc
ds
lahf
ljmp
mov
push
dec
test
sbb
movsbl
fs
mov
mov
ds
cmp
add
lea
fsubr
jae
sarb
das
jbe
cmp
clc
dec
outsl
out
jmp
mov
js
xor
int3
mov
mov
xor
aam
inc
inc
outsl
cmc
call
bound
addr16
xchg
jne
xor
int
inc
pop
popl
loope
sbb
popa
loope
add
out
push
mov
int
push
xchg
out
sbb
loop
lret
loopne
mov
out
stos
adc
sub
stc
dec
ss
sbb
inc
dec
mov
int3
cmp
subl
scas
addr16
sub
neg
testb
xor
cmpb
mov
jmp
call
push
arpl
scas
leave
addr16
xchg
inc
pop
mov
pop
mov
mov
inc
add
mov
adc
ljmp
push
xor
rcrl
cwtl
insl
mov
ss
fwait
mov
pop
pushf
lcall
cmp
push
shl
add
inc
adc
inc
mov
cmpsb
fistpl
popf
enter
jecxz
mov
mov
sbb
aam
add
test
lods
mov
call
insl
add
iret
mov
push
shl
mov
xor
cmpb
pop
sbb
sbb
pop
add
xor
adc
inc
dec
stos
sub
lods
cmpsb
cltd
arpl
mov
inc
neg
addr16
mov
roll
aad
add
sahf
push
push
jge
arpl
jg
or
mov
arpl
add
mov
mov
inc
ljmp
xchg
cmp
imul
or
pop
lods
stc
pop
mov
mov
lods
sbb
cli
pop
lret
mov
sarb
and
in
cmp
pop
aad
xchg
push
xchg
jns
xor
mov
adc
pop
push
mov
and
xchg
and
cltd
and
cmp
lds
cmp
xor
jge
xchg
cmp
push
pop
or
shll
inc
ja
xlat
hlt
icebp
into
cmpsb
add
notl
cmp
decb
in
repz
jmp
into
icebp
cld
pop
pcmpgtd
jl
lret
push
arpl
lcall
mov
jecxz
test
rcll
push
push
or
jl
ljmp
mov
shlb
mov
mov
xor
xor
shrb
mov
int3
cmp
mov
lock
and
jne
cwtl
cmpsl
loopne
add
lods
inc
push
mov
mov
jg
data16
sub
insl
cltd
cmp
mov
cmc
mov
cwtl
or
sub
inc
add
xchg
mov
fdivrs
and
sub
jne
ret
sbb
mov
and
cwtl
cmpl
jge
xor
and
push
imul
mov
rclb
iret
imul
lret
sahf
stos
lret
int3
int
xchg
mov
cmp
mov
sbb
lret
int3
fcomps
sahf
push
adc
outsl
repz
lods
sub
insb
adc
push
fwait
add
pusha
jle
roll
jp
shl
cmp
pop
test
js
or
repnz
push
inc
jns
fidivl
xorb
pop
xchg
dec
push
fldcw
inc
mov
sub
or
push
nop
and
lahf
jl
iret
int3
fsubs
sbb
sbb
jecxz
int3
ret
pop
imul
mov
test
rolb
lea
imul
adc
int3
mov
mov
movl
into
inc
push
mov
hlt
les
test
xchg
movsb
dec
stos
in
fcoml
lahf
push
aas
in
xchg
sub
pushf
ljmp
inc
aaa
dec
in
push
fisubrs
push
jne
and
out
insl
xor
and
or
dec
cmpsb
pop
mov
les
outsb
popf
divb
dec
inc
xor
cmp
ret
mov
sbb
sbb
loope
fstp
dec
bsf
xor
sub
xlat
mov
adc
lcall
outsb
loopne
roll
add
outsl
je
loop
scas
sbb
push
xchg
pop
jmp
xchg
jmp
push
mov
aad
rorl
int
adc
andb
pop
sahf
in
mov
xchg
clc
xlat
mov
inc
add
fcmovne
int3
mov
stc
mov
addb
loope
inc
int3
xchg
xchg
sub
mov
test
in
cmpsl
movsl
lods
lahf
pop
mov
ret
pop
sbb
cmpxchg
xchg
test
inc
out
call
test
test
adc
mov
rcr
add
xchg
into
shlb
imul
shlb
sub
add
lahf
cmpsl
dec
test
nop
jmp
mov
sbb
ret
xor
pop
sub
or
arpl
stos
ss
int3
gs
ficomps
andb
arpl
in
push
xor
in
mov
pop
lret
inc
in
fldl
and
jge
imul
xor
jo
xchg
push
out
mov
dec
xchg
fiadds
pop
pop
cmp
ss
add
stos
xchg
stos
in
jbe
outsl
jae
inc
aas
nop
pop
jbe
int3
xchg
jns
or
xor
cwtl
in
mov
sub
or
ja
dec
push
jae
ficompl
jle
cltd
sub
addr16
nop
xorb
idivl
pushf
cltd
insl
sbb
sub
stos
das
out
arpl
cltd
cmp
xchg
in
push
sbbl
xchg
and
notl
aad
mov
push
idivb
cwtl
xchg
movsl
inc
loopne
repz
mov
mov
mov
popa
scas
adc
mov
mov
outsl
aad
jge
cmp
sbb
jmp
mov
add
fwait
add
in
mov
xor
mov
push
testl
jne
lret
adc
mov
test
iret
jge
es
sbb
jbe
pop
or
inc
jns
mov
jp
repnz
or
push
std
faddl
loope
ret
fs
shll
aas
mov
xor
ror
xchg
imul
fdivrp
xchg
aam
adc
lods
xor
jmp
pop
mul
outsb
cmp
mov
mov
jge
mov
insb
jle
mov
mov
sbb
push
jno
sbb
xor
aas
push
icebp
fwait
jmp
cli
fwait
push
mov
lret
js
inc
xchg
jg
fxch
out
jg
jp
adc
mov
addr16
pushl
rcll
sub
ja
inc
ret
call
sub
out
lcall
dec
mov
push
subb
bound
push
sbb
cld
and
daa
cwtl
fiaddl
nop
cmp
push
mov
into
icebp
int3
je
divl
jno
lock
sar
lea
addr16
adc
mov
dec
addr16
dec
push
mov
test
hlt
mov
push
mov
push
xchg
add
jmp
cmp
sub
sbb
mov
les
or
cltd
xor
sub
sub
jmp
in
jb
fs
pop
push
iret
cli
xchg
outsb
jnp
je
test
in
ds
mov
clc
push
scas
pop
mov
push
push
mov
in
add
xchg
nop
xor
mov
and
loop
sti
xchg
adc
jns
add
push
hlt
inc
les
loopne
decl
jo
mov
in
dec
in
jo
xor
adc
rcll
xor
sbb
scas
ljmp
jge
decl
jb
ss
mov
outsl
fcmovne
inc
xchg
cmp
cltd
daa
mov
adc
push
shll
jl
inc
popf
sub
aam
adc
inc
or
lret
insl
dec
mov
jne
gs
rcrb
lock
cld
scas
or
push
pop
lods
jmp
sbb
xor
dec
test
pop
aam
js
pop
sbb
cmp
test
push
jns
dec
mov
fcompl
push
arpl
mov
mov
sbb
jne
notl
test
ja
push
cmp
pop
iret
out
sub
cmpsb
adc
mov
sub
out
lcall
rcll
nop
or
dec
xorb
nop
bound
mov
mov
xor
mov
rcrl
sub
lods
cli
fsubrs
out
call
xchg
lret
jno
mov
dec
inc
std
sbb
ffree
xchg
xlat
sub
mov
rcll
shl
ret
xor
mov
or
std
roll
mov
mov
repnz
ds
jecxz
das
sub
test
mov
cmp
sarb
mov
nop
in
jg
or
sub
insl
cmc
push
pop
push
mov
flds
add
add
mov
out
xlat
adc
mov
or
mov
adc
rsm
pop
lea
movsb
enter
jl
cld
loop
sub
mov
adc
and
xor
jle
dec
sub
testl
movsl
call
mov
push
dec
pop
inc
mov
xor
in
jecxz
push
push
xor
pop
sbb
ds
xchg
mov
call
dec
roll
outsb
rcrl
sub
loope
xchg
mov
aas
std
in
imul
insl
repz
pop
addr16
cmpsl
and
mov
loopne
aam
outsl
pop
xlat
add
cmc
inc
and
mov
test
cwtl
mov
inc
aaa
hlt
jae
dec
loope
xchg
xchg
mov
jle
push
movsl
pop
jne
dec
fmuls
jno
leave
icebp
inc
repnz
dec
loopne
nop
sbb
inc
clc
test
jo
push
or
popf
sub
enter
pop
xchg
push
mov
dec
xorb
pop
add
mov
nop
subb
cmp
sub
ss
lahf
movsb
sbb
mov
mov
ja
cmp
aam
inc
and
das
nop
add
lods
daa
mov
add
mov
pop
jecxz
adc
add
rcl
cltd
mov
dec
mov
xchg
lock
cmpsl
mov
ret
out
fbstp
orb
repnz
lods
or
mov
stos
sbb
or
leave
inc
mov
mov
int3
out
stc
pusha
les
pop
sbb
push
rolb
iret
mov
push
push
cmc
dec
lock
shrl
cmp
push
inc
push
adc
hlt
lahf
cmp
or
sbb
dec
mov
insb
pop
sarb
cmp
or
es
insb
xchg
repz
pop
test
je
popa
frstor
clc
mov
jge
test
int3
push
sub
ss
cmpsl
and
lahf
int
push
ds
out
inc
mov
mov
xchg
cmp
lds
sub
loope
aam
imul
sahf
push
cmp
inc
xchg
jbe
clc
fsubrl
push
cmp
xchg
out
inc
cmp
aam
mov
imul
push
ja
push
jnp
jbe
push
dec
into
icebp
daa
es
into
or
aaa
xor
insb
je
xor
lods
xchg
lret
push
clc
adc
popf
iret
into
cmp
push
dec
cmp
sldt
in
jecxz
ficompl
push
jle
adc
lods
imul
movsl
cltd
push
daa
cli
or
sbb
cmp
adc
les
mov
cmc
cs
xchg
js
sub
outsb
pop
ret
mov
xor
inc
cs
mov
sub
maskmovq
negl
pop
mov
in
jae
outsl
ret
adcb
xchg
pop
ret
inc
test
pushf
iret
pop
add
cmpsl
push
push
fmulp
push
mov
push
push
hlt
jl
mov
push
adc
or
or
dec
insb
or
cmc
dec
test
movsb
lahf
stos
cltd
cltd
mov
into
push
xor
dec
dec
xor
clc
pushf
fbstp
mov
nop
insb
ja
data16
xchg
or
push
add
dec
xchg
lahf
inc
sub
mov
addr16
push
mov
mov
dec
push
mov
jb
push
xchg
imulb
rol
adc
outsl
ljmp
inc
sbb
loopne
push
mov
push
cmp
std
jle
int3
std
add
mov
scas
sti
inc
das
dec
dec
pop
sbb
fcompl
pop
jo
jae
xchg
fs
neg
xor
or
xor
inc
xchg
xchg
je
repnz
aas
loop
ret
mov
jge
mov
sbb
lods
ds
leave
and
pop
add
lret
jp
arpl
dec
aam
adc
jle
aad
push
mov
sub
mov
adc
clc
data16
js
or
push
mov
cwtl
imul
mov
fiadds
lock
popf
sbb
push
mov
aam
das
fildll
out
push
cmp
lock
jecxz
push
inc
mov
clc
cmp
lea
or
adc
jne
xchg
lods
pop
jae
xlat
xchg
hlt
movsl
xchg
pop
stos
addb
xchg
cmpl
adc
std
cmp
ret
jne
sbb
out
loop
cmp
sbb
test
xorb
and
jp
rclb
pusha
rorb
sub
xchg
and
movb
aam
push
mov
jp
daa
push
inc
je
mov
out
jecxz
xor
cwtl
mov
cmp
pop
bound
sub
ja
test
pop
jmp
ror
loopne
cmp
jle
repnz
jo
test
adc
repz
xchg
ja
inc
pop
push
clc
lods
shll
mov
cmpsl
ficomps
or
mov
jmp
into
mov
popf
sub
push
pusha
mov
int3
call
imul
cmpsl
lret
dec
cltd
cld
lret
dec
scas
imul
shl
leave
rcll
adc
jg
lahf
jno
pop
stos
aas
mov
fmull
out
and
fcmove
mov
push
gs
pop
jp
inc
rclb
or
shr
push
cmp
cmp
lods
jae
or
push
xlat
adcb
dec
test
cmpsb
xlat
adc
icebp
scas
jge
xchg
mov
and
test
in
insl
lret
adc
push
push
sub
das
addr16
loopne
clc
fwait
rcll
dec
aam
lods
leave
dec
dec
or
pop
leave
xlat
jmp
push
push
inc
push
js
pop
sbb
sbb
mov
push
shll
fnstcw
add
popl
subps
inc
adc
rcll
dec
ret
pop
pop
test
es
fninit
mov
dec
aas
or
das
and
bound
sub
mov
bound
nop
fcmovu
sbb
push
jl
mov
mov
push
pop
and
iret
dec
xlat
pop
in
sahf
aad
mov
rcrl
lock
fsubrp
mov
int3
lret
mov
mov
daa
sub
sub
push
in
lds
in
fdivs
xchg
imul
xor
mov
mov
xor
jae
mov
sar
stc
sub
xor
dec
xlat
shlb
push
sub
mov
ret
scas
fadds
in
orb
or
daa
inc
int3
idivl
les
scas
dec
adcb
enter
xchg
adc
sbb
mov
jnp
add
andl
cmp
sti
data16
mov
mov
outsb
mov
jnp
cmp
adc
test
push
add
pop
decl
clc
xor
leave
mov
or
push
popf
nop
das
repz
mov
and
mov
mov
popa
hlt
inc
xor
packssdw
or
insl
lcall
outsl
and
lods
testl
adc
pop
sbb
insb
xchg
lret
cs
push
lret
xor
sub
push
mov
cmp
mov
data16
pushf
arpl
cmpsb
lock
mov
shl
adc
mov
lret
lea
test
sub
dec
inc
jno
xchg
add
movsbl
cmp
jp
and
icebp
lds
movsl
aam
push
out
stc
mov
cmp
pop
mov
sub
mov
dec
pop
shr
out
jle
test
inc
mov
add
xchg
pop
and
mov
ret
xchg
aam
lret
lahf
push
mov
icebp
or
outsl
incl
pop
dec
imul
aam
or
sti
iret
clc
cmc
mov
pop
mov
ret
jg
mov
repz
cmp
mov
push
or
inc
dec
xchg
adcl
out
dec
dec
repnz
lahf
out
dec
insl
and
jge
mov
aaa
xor
js
arpl
push
adc
mov
pop
iret
add
icebp
or
fsubrl
lea
lahf
push
lds
pushf
gs
dec
notb
push
lds
sahf
adc
sahf
or
dec
loop
xor
xchg
mov
push
jne
jge
push
add
jle
in
or
inc
ret
out
or
lret
scas
pop
pop
daa
jno
mov
out
push
adc
shlb
orl
les
stos
push
sub
xchg
idivb
test
jl
adc
aad
inc
mov
pop
mov
pop
jnp
push
pop
jp
pop
jo
adc
fwait
pop
jmp
mov
dec
shlb
cmp
rolb
jo
daa
mov
jp
adc
mov
cmc
mov
aaa
cmp
or
in
loope
sbb
cmpsl
add
cmp
imull
push
add
movsl
hlt
xadd
mov
and
stc
jg
xchg
cs
jo
sbb
fxch
mov
mov
mov
xchg
inc
insl
jae
pop
lsl
xor
mov
xorl
lods
nop
inc
pop
aas
xor
push
popa
push
and
arpl
push
xchg
inc
iret
rcll
xchg
call
adc
fsubrs
movsl
and
mov
mov
hlt
push
dec
cmp
nop
pop
mov
movsl
dec
bound
and
nop
dec
fisttpl
out
push
mov
lret
inc
addb
xchg
add
int3
outsl
inc
lahf
rcll
lahf
mov
mov
call
lock
push
repz
cmc
jbe
add
and
sbb
dec
push
inc
rolb
fwait
imul
lahf
cs
cmp
stos
cltd
and
xor
gs
es
shlb
mov
add
iret
mov
repz
jo
jbe
fldt
lea
push
mov
scas
inc
stos
lods
lds
pop
loopne
frstor
add
add
and
cmpl
xor
cmp
mov
dec
cmp
and
in
lret
jb
mov
cld
sbb
and
sub
inc
dec
dec
out
jnp
pop
rorl
inc
ljmp
sub
jl
lods
xchg
sub
mov
inc
add
cmp
stc
mov
je
xchg
jmp
push
and
lret
imull
mov
cmp
test
and
repnz
test
movsb
adc
or
rorb
adc
outsb
xchg
pop
mov
enter
cmp
insb
cmp
inc
cmp
push
or
or
rol
out
aas
adc
adc
jp
adcb
cmp
pushf
jne
sbb
push
imul
pop
mov
cwtl
mov
dec
cmpsb
jp
das
das
jo
in
jecxz
adc
mov
ss
data16
repz
xor
sbb
jmp
jnp
arpl
xor
jl
movsb
repz
jl
push
cmpsl
scas
xchg
sbb
adc
xor
scas
mov
mov
pushf
sahf
out
movsbl
daa
push
jg
sbb
pop
mov
lahf
test
dec
dec
mov
lahf
cwtl
xor
stos
lahf
mov
mov
mov
dec
test
mov
sub
inc
xor
paddsb
jle
sbb
faddl
in
bound
test
xor
xchg
mov
add
shlb
loop
jne
xchg
stc
rcll
add
repz
shl
dec
sbb
push
sti
pop
out
es
push
out
mov
mov
imul
das
mov
int
bound
jmp
subl
cmp
mov
aaa
push
sub
adc
xchg
nop
gs
and
inc
loopne
push
addl
outsl
xchg
and
cltd
ljmp
add
mov
test
cmc
mov
call
pusha
jne
pop
mov
dec
bound
call
mov
cmp
repnz
adc
mov
push
lcall
sbb
sbb
add
cmc
pop
gs
sbb
ret
pop
cwtl
inc
push
sahf
ja
lahf
int3
dec
mov
fdiv
ficoml
fidivl
and
lods
mov
notb
div
loop
arpl
sub
pushf
test
pop
js
cli
dec
fld
int3
cmpsl
mov
aam
sbb
jb
sbb
xor
adc
mov
pop
gs
std
sub
test
adc
test
sbb
in
rolb
mov
mov
aas
pop
xor
jl
addr16
movsl
push
es
mov
xlat
and
stc
and
adc
imulb
dec
in
mov
loope
cmp
adc
ljmp
cli
sbb
mov
xchg
push
cwtl
scas
cmc
sti
and
test
out
or
aas
push
and
fsub
inc
fs
inc
jmp
iret
lcall
sti
repnz
jno
jnp
mov
ds
fisttps
push
and
data16
mov
test
dec
mov
incb
xlat
pusha
rolb
fxch
hlt
in
nop
jnp
ljmp
adc
outsl
adc
sbb
icebp
aad
cmp
je
aad
ss
xchg
cmp
cmc
xor
xchg
dec
ret
enter
ret
xchg
loopne
int3
xchg
push
sbb
lea
pusha
jb
xchg
enter
int3
ret
lret
mov
fwait
jp
cli
out
lds
stos
leave
xlat
cld
push
cmp
sub
mov
lret
xchg
and
loope
xchg
in
xchg
jle
mov
jno
test
imul
mov
popf
and
das
pop
add
cmp
push
push
imul
cmp
insb
loop
mov
icebp
xchg
push
mov
cld
test
bnd
mov
movsl
sbbl
add
sahf
scas
rol
push
cli
xor
shll
dec
jo
call
std
mov
dec
testl
in
xchg
push
lods
and
pop
lea
push
fisttpl
adc
rcrl
dec
pop
push
lcall
lcall
mov
iret
test
sub
mov
or
cmp
push
shll
aas
inc
pop
sub
push
pop
or
dec
add
xchg
sbb
lret
std
sbb
addr16
mov
js
stos
lock
out
subb
iret
dec
into
and
mov
popf
pusha
dec
imull
mov
sti
sahf
rorl
fisubrl
add
jno
js
push
jbe
fsts
imul
icebp
cmp
pop
js
repnz
mov
jmp
cwtl
mov
xchg
or
xlat
pop
sbb
mov
sub
leave
cmpsl
and
sahf
repz
xor
cmp
mov
loopne
mov
les
aaa
jo
mov
sub
dec
aam
std
sub
pop
fsubrs
fsub
mov
jne
jno
add
xor
sbb
push
imul
add
mov
adc
adc
lock
xor
xchg
pop
into
mov
xor
jecxz
cld
lret
lods
pop
dec
test
das
stos
push
clc
into
rcll
push
sbb
adc
rorl
lahf
mov
inc
xor
daa
and
addl
mov
jl
mov
in
fwait
sbb
daa
push
aas
adc
adc
or
inc
popa
pop
add
stos
cwtl
inc
test
movb
nop
lods
rorl
popa
fldenv
popa
lds
or
xchg
ret
fldcw
inc
movsb
jp
xchg
and
push
jg
cmp
sbb
aas
add
popf
mov
jbe
or
push
adc
sub
lds
lods
mov
movsb
xchg
jg
dec
jge
call
sbb
neg
sbb
jge
jae
ja
mov
daa
iret
sarb
shlb
ja
sahf
mov
cmp
sub
ja
add
mov
xchg
jb
jo
aas
iret
xor
adc
jae
sbb
dec
test
xor
inc
xor
and
inc
lret
inc
jmp
das
les
pusha
ds
out
jge
pop
adc
adc
push
push
push
xchg
mov
and
pop
out
lods
pop
mov
repz
xlat
mov
mov
enter
dec
xchg
pushf
int3
pop
pop
push
cmpsb
xor
test
inc
scas
and
lcall
movsb
add
call
cmp
in
iret
ret
inc
inc
jle
and
or
or
outsl
sub
dec
mov
jg
inc
xor
cld
std
aad
in
jb
fmul
cmp
js
add
add
out
mov
cmp
lods
xor
pop
jmp
lcall
ljmp
loopne
lods
jl
stc
es
fdivl
inc
sbb
aas
dec
jo
mov
push
pop
sub
jno
cli
loope
sbb
adc
cltd
iret
push
rol
shl
inc
in
xchg
icebp
push
xor
cmp
sbb
cli
and
sub
mov
push
lea
data16
ds
lahf
clc
pop
sub
sub
loop
pop
adc
shlb
rcrb
dec
lods
imul
movsb
mov
add
xor
or
test
pop
mov
stos
pop
shll
mov
es
pusha
std
mov
jns
adc
mov
dec
sbb
inc
jge
and
add
push
test
pop
inc
fbstp
sub
adc
fbstp
mov
dec
mov
add
pop
lods
add
fadds
out
xchg
cmpsl
push
shlb
mov
inc
or
lods
cs
movsb
idivl
jle
std
push
ror
and
loop
out
mov
push
pop
lock
inc
inc
jnp
inc
lahf
jb
fmull
sbb
adcb
ss
insb
push
push
xchg
jbe
jp
mov
imulb
xchg
sbb
pop
call
push
cmpsl
dec
jb
mov
pop
push
das
inc
jnp
rcll
popa
pop
fisttpll
icebp
hlt
cmpb
or
push
mov
nop
xchg
jbe
xor
rcr
shlb
leave
jl
mov
aas
mov
sti
cmp
inc
push
mov
repz
pushf
dec
int
jmp
lods
push
mov
jecxz
dec
mov
lcall
testl
sbb
rcrl
mov
fistl
pop
xor
pop
inc
pop
repz
xor
sti
sub
and
dec
xchg
int
mov
dec
push
or
add
das
add
and
movsb
ss
xchg
pushf
pop
cmc
jmp
lahf
loop
push
pop
mov
je
mov
idiv
sar
lret
iret
jno
push
stc
push
cmc
sahf
shll
out
roll
negb
lds
jne
dec
nop
pop
das
jl
pushf
pop
adc
xchg
ret
test
imul
das
lods
stos
add
mov
jne
jp
out
sbb
imul
loopne
mov
xor
xlat
stc
inc
cmp
add
add
das
inc
mov
enter
jmp
add
jg
test
jecxz
inc
mov
xor
mov
sti
sub
insb
pop
ret
fbld
cs
xor
loop
pop
jg
lcall
lods
xor
xchg
push
movsb
adc
adc
lds
pushf
pop
leave
mov
std
je
mov
or
inc
xchg
pop
popf
sti
push
jnp
add
push
dec
lcall
xor
sbb
jp
out
pop
mov
int3
clc
sbb
test
int3
shr
push
and
leave
mov
cmp
inc
iret
jmp
pop
es
cmpsl
xchg
cmp
mov
in
push
aad
jns
mov
adc
cmp
jge
aas
insl
mov
repz
out
add
data16
add
arpl
imul
dec
and
in
push
jg
iret
daa
das
into
in
cmpsl
sbb
scas
inc
lret
jmp
inc
je
bound
mov
clc
xor
xlat
movsl
xchg
or
pop
jns
pushf
daa
rol
pop
popa
jnp
ret
icebp
scas
jecxz
ljmp
std
dec
hlt
movsl
xor
ret
mov
arpl
sub
arpl
out
mov
xor
push
sub
repnz
sbb
mov
shl
fiaddl
std
repz
push
sahf
outsl
fisubl
cmpsb
lock
sbb
loopne
aaa
nop
pusha
jle
fcomps
ret
add
xor
cmpsb
pushf
or
andl
mov
jbe
push
cmp
stos
mov
enter
mov
xor
jl
xor
cmp
loop
iret
mov
rcll
sub
sbb
sti
add
xchg
call
rsqrtps
cmp
ret
mov
sub
sbb
jmp
and
lods
mov
push
mov
mov
pusha
data16
xor
mov
mov
aaa
test
ret
mov
jno
nop
or
xchg
imul
repnz
jmp
pushf
push
loop
jmp
inc
rep
xor
popf
jg
ret
push
mov
addr16
inc
loop
pop
and
loop
mov
mov
pop
ret
pop
sub
sub
mov
push
pop
fstpt
sbb
int
ret
dec
cwtl
es
scas
mov
jg
mov
lods
jp
or
outsb
jg
xchg
bound
dec
mov
mov
jno
sbb
adc
ret
ss
notb
mov
inc
add
lods
sbb
pushf
sub
stos
leave
jb
xlat
mov
mov
imul
xor
add
ret
pop
push
enter
and
lock
adc
lock
bound
imul
push
fs
inc
rcrl
icebp
daa
xor
out
shlb
xor
mov
gs
call
mov
xorl
jmp
sub
push
xorl
mov
add
addb
push
sahf
rcl
lods
xor
cmpb
subl
jle
pop
mov
sub
aam
pop
push
pop
mov
lds
and
in
mov
test
jle
jns
and
imul
rolb
pop
jb
sub
repz
pop
mov
jne
pushf
and
dec
or
fimuls
repz
call
jmp
stos
cs
in
dec
lods
loop
fidivrs
jg
out
idivl
out
in
leave
jecxz
std
fwait
fldt
sub
jne
add
dec
jge
cmp
mov
adc
inc
lea
test
push
outsb
or
pop
fwait
pop
pop
mov
push
sbb
dec
push
sbb
inc
jnp
sub
dec
gs
mov
sbb
lret
add
ret
in
hlt
xlat
imul
aam
push
in
inc
cs
mov
xchg
lods
pop
mov
xchg
ja
ficompl
addl
rolb
testb
jbe
pop
jbe
das
fcomp
ficomps
fs
or
scas
xchg
and
outsb
push
dec
xchg
xchg
adc
and
mov
sub
ret
lods
add
test
add
imul
lcall
test
adc
mov
ret
dec
xor
jg
cltd
adc
jecxz
jnp
xlat
inc
mov
arpl
add
pusha
not
or
mov
add
mov
lcall
jno
jge
cld
dec
jbe
mov
enter
das
cs
adc
insb
sbb
jno
movb
push
int
sbb
dec
lahf
and
sti
push
xlat
shrl
inc
out
mov
push
pop
push
pop
pop
and
cmp
mov
or
push
ret
daa
sbb
inc
inc
or
mov
adc
fwait
mov
cmp
mov
rorl
pop
leave
out
icebp
js
pop
fcmovnu
push
insl
sbb
jmp
xor
sbb
std
sub
push
fbstp
and
mov
mov
outsl
ds
add
inc
push
test
add
push
push
inc
sub
push
inc
and
int3
popf
mov
addr16
sbb
aas
arpl
scas
mov
mov
sbb
test
lods
push
mov
paddusw
mov
push
sub
cli
or
rorl
push
xor
sbb
bound
mov
adc
and
jg
dec
pop
cs
mov
mov
lret
add
push
out
adc
scas
iret
leave
lds
movsb
test
mov
lods
aaa
cmpl
jmp
leave
out
in
add
jge
out
push
add
mov
aaa
sbb
stos
push
sub
inc
or
inc
cmp
out
js
daa
scas
or
ds
pop
push
jb
js
dec
xchg
jb
pop
jmp
push
and
ds
pop
dec
outsb
jnp
dec
jle
jle
mov
xchg
cmp
shr
dec
or
in
push
dec
cmp
mov
mov
leave
push
sub
mov
jbe
jb
int3
outsb
xchg
or
jo
je
pop
push
xchg
xchg
jecxz
out
adcb
out
pop
xor
adc
xor
push
icebp
lret
out
xchg
sub
std
cmpsl
pop
fwait
test
jp
fidivs
popa
pop
test
sbb
jp
sbb
add
mov
cmp
sub
dec
inc
and
out
dec
outsl
inc
pushf
inc
fists
stos
inc
pop
xchg
rcl
lods
insl
xor
push
jbe
pop
mov
int3
push
outsb
cmp
adc
sub
dec
pop
and
std
push
outsb
push
sbb
pop
aam
loopne
or
mov
xchg
dec
jmp
mov
or
js
fisubrl
stos
call
fnstsw
jmp
in
pop
xchg
jmp
jno
fwait
jge
fs
in
dec
and
cmp
int
scas
gs
add
add
fldt
ds
dec
pop
test
popf
jo
repz
mov
push
divb
and
or
ret
ja
int
xchg
stc
push
lret
cmpsb
les
and
or
fildl
mov
adc
pop
adc
cmp
push
add
xchg
jns
cmp
add
jo
dec
push
jmp
in
mov
imul
xchg
nop
dec
sbb
ret
stos
mov
add
gs
lahf
loop
pushf
ficompl
add
stos
push
loope
xor
and
rcl
xchg
movsl
jl
and
push
and
push
jg
lods
mov
enter
movsl
xor
test
mov
pop
pop
push
mov
decl
pop
adc
shlb
dec
mov
test
pop
xchg
sbb
sbb
lret
notb
loop
fnstenv
cmp
subl
jp
popa
popa
jl
popf
dec
fscale
aaa
cmpsb
out
cwtl
hlt
jo
mov
adc
dec
test
fisttps
es
mov
add
ds
push
mov
rcrl
jae
movsl
fwait
cmc
dec
and
notl
dec
fs
or
lret
jno
jno
dec
sbb
insl
xchg
stos
pushf
jns
xchg
mov
jge
sbb
movsl
adc
or
ret
rol
stc
fstpt
push
xchg
insb
sahf
xchg
or
rcrb
inc
dec
jmp
clc
and
repz
loope
add
cld
push
scas
cmc
mov
cmp
or
pop
sbb
sahf
mov
es
shll
push
jle
std
fiaddl
inc
push
cmpsb
push
ljmp
and
mov
fsubl
inc
cmp
lock
fisttpll
test
sti
ljmpw
test
push
in
xor
xchg
sub
scas
outsb
nop
fisubrs
rorl
pop
fiaddl
jbe
adc
adc
and
adc
imul
outsl
mov
shll
das
movsb
jl
repnz
push
dec
hlt
mov
and
xor
push
adc
arpl
mov
inc
and
fs
sbb
nop
nop
jmp
adc
pop
icebp
imul
into
iret
jmp
test
jge
adc
sub
ret
insl
pop
mov
js
stc
ja
imull
int
jmp
rcl
cmc
repz
hlt
sub
xchg
mov
addl
loopne
nop
mov
call
andl
cltd
xchg
xlat
mov
pop
sbb
pop
and
fcomps
int
shlb
sub
jp
mov
int
cmpsl
cmpsb
icebp
dec
in
mov
xchg
push
xchg
popf
cltd
sbb
pushl
loope
adc
or
mov
cmpsl
icebp
fs
adc
aad
push
xor
aaa
mov
ljmp
insb
lahf
dec
decl
ficompl
nop
sub
mov
lret
add
xchg
sub
xor
int
sahf
ja
cmpsb
mov
test
pop
shll
cltd
test
add
mov
or
test
flds
pop
cmp
leave
push
cwtl
shr
xchg
sub
xor
rep
add
mov
arpl
jns
push
cmc
pop
out
add
cs
ret
sahf
xchg
pop
icebp
push
sub
rcrl
and
lea
mov
jl
rolb
mov
mov
mov
ficoml
daa
fiadds
pop
bound
shll
jge
es
cmpsb
xchg
adc
sbb
mov
sub
jmp
jne
mov
pusha
push
add
mov
pop
in
pop
xor
cli
lea
pop
jl
xor
gs
jbe
mov
xor
pop
popf
shlb
xchg
sbb
add
pop
add
ja
dec
mov
cmp
add
add
fwait
push
inc
icebp
outsb
xor
inc
dec
jge
call
dec
movsl
test
sub
cwtl
inc
nop
das
iret
sti
in
ja
sbb
dec
test
enter
mov
mov
cmp
pop
xor
mov
roll
in
int
dec
add
testl
dec
sbbb
xor
ss
push
lret
dec
add
lock
lcall
xchg
pusha
mov
xor
sub
jle
lods
rorb
jno
push
pop
rcl
push
inc
and
scas
inc
es
inc
popf
scas
shll
xchg
push
cltd
test
sti
cmp
dec
pop
jg
sub
andb
test
sub
pop
or
or
in
and
repz
xor
xchg
fildll
mov
out
inc
leave
stc
xor
xchg
rcll
dec
in
scas
mov
cld
icebp
movd
mov
sbb
nop
and
pop
out
cwtl
data16
in
pop
enter
int3
mov
daa
mov
or
ds
outsl
call
std
ret
jecxz
lret
popf
add
mul
es
pop
add
int
je
sub
mov
mov
mov
jp
inc
jo
in
jle
jno
inc
addb
mov
wrmsr
psrad
jecxz
les
adc
cwtl
shrl
and
jo
cs
pop
cmp
lds
and
xchg
push
push
cmp
inc
sub
jo
lock
leave
or
lock
stos
aaa
shl
aaa
sbb
imul
cmpl
xchg
in
adc
std
fcomps
bound
mov
pop
mov
test
mov
insl
adc
adc
incl
test
xor
push
mov
shll
bound
and
lock
jmp
ficompl
mov
filds
std
loop
mov
inc
adc
mov
adc
ds
cmp
and
pop
rcl
and
jmp
lds
mov
add
cmp
inc
scas
jnp
push
mov
insl
ja
mov
fs
cmp
mov
lock
and
dec
adc
inc
jmp
pop
out
out
mov
xchg
stos
inc
insl
test
gs
mov
inc
push
fadds
nop
dec
daa
pop
push
mov
cmp
arpl
sub
lea
pop
pop
jmp
xor
or
jo
rcrb
cmpsl
pop
pop
cmc
mov
inc
inc
jo
sbb
out
je
imul
or
and
dec
das
sbb
cmp
roll
cltd
xchg
add
adc
rcl
mov
rcrb
cmpsl
pop
jecxz
lods
je
ds
fdivl
sub
jno
jl
fimull
add
cli
test
shl
pop
dec
das
lahf
pusha
test
or
loop
loope
mov
adc
pop
dec
mov
arpl
aas
adcl
addr16
lods
pop
imul
lods
bound
test
pop
test
aas
data16
decl
push
push
mov
mov
cmovno
out
push
test
lcall
mov
enter
inc
ljmp
mov
inc
imul
or
mov
call
sub
jge
push
int3
ret
mov
cmpsl
pop
and
and
dec
sub
in
cmp
adc
pop
sub
lods
lahf
popf
enter
add
outsl
xchg
stos
je
sbb
mov
pop
mov
pop
out
icebp
fwait
sub
dec
adc
int
loopne
fldl2t
xor
sbb
add
cmp
sbb
test
test
fldcw
dec
xor
push
add
insl
movsb
inc
insl
mov
int
stos
push
dec
jne
sub
and
repz
movsl
enter
loop
or
adc
add
pop
mov
daa
xor
jno
shlb
lret
mov
clc
xchg
nop
nop
push
js
pop
out
sub
mov
loopne
in
jl
and
ja
cltd
jmp
jb
cltd
cmp
sub
ja
xor
add
jmp
inc
mov
pop
int3
ret
inc
add
nop
pusha
dec
and
out
nop
fsubrl
scas
lret
test
lret
sub
movb
mov
cmpsb
fsubrs
pushl
fwait
or
xor
adcl
inc
popf
cwtl
pop
es
and
jnp
xchg
loopne
imul
adc
mov
xchg
xchg
sub
in
dec
cmp
movd
add
mov
je
test
mov
cmp
mov
scas
cltd
or
adc
fldl
lock
jl
pushf
pushf
in
pushl
clc
mov
test
add
xor
ljmp
add
mov
pusha
sahf
adc
andnps
call
outsl
loop
or
add
add
add
add
les
add
out
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
xchg
xchg
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
mov
mov
xchg
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
inc
or
sub
or
les
adc
