push
call
ret
ret
push
mov
mov
xchg
shlb
stos
es
scas
dec
sbbb
xchg
dec
je
xor
lods
xchg
bound
jmp
aas
nop
cmp
sahf
jmp
push
xorb
mov
xchg
pop
imul
movsl
pop
sbb
add
inc
mov
repz
mov
pop
sub
hlt
pusha
sahf
popa
jg
loop
push
ss
xor
dec
movsb
pop
fistpl
sbb
xor
pusha
sarl
jp
push
pushf
xor
inc
aad
lock
je
ficoml
das
in
or
loope
mov
adc
adc
pop
les
sbb
call
loope
push
jae
xor
inc
cmp
inc
add
sbb
jbe
dec
mov
pop
pusha
cmp
shll
sbb
mov
pop
popa
xchg
sub
push
les
push
jne
ds
or
out
icebp
sti
mov
and
mov
xchg
mov
shlb
out
int
mov
xor
movsb
pop
rcrb
daa
sarl
add
fwait
inc
inc
jnp
int3
sti
adc
daa
or
mov
jbe
push
or
bound
repz
cmpsl
mov
jg
lcall
pop
enter
sub
add
cmp
jg
jns
xchg
sbb
das
repz
sbbl
lret
ds
or
sub
test
sbb
xchg
repz
inc
test
jo
mov
add
mov
hlt
rolb
xor
cs
gs
xor
jno
scas
sbb
mov
cwtl
ds
movb
or
das
xchg
bound
jbe
push
mov
ret
mov
jnp
jp
and
out
dec
dec
xchg
in
mov
pop
pushl
dec
fs
fwait
jns
xor
xchg
cmpsl
mov
sahf
push
inc
xchg
xchg
stc
sbb
ja
in
imul
movsl
pop
or
xchg
pushl
imul
jmp
mov
add
fwait
int
add
adc
push
mov
xlat
cltd
scas
sbb
push
xchg
adc
push
inc
xchg
cmp
ds
data16
push
mov
ja
and
fwait
mov
pop
push
pop
fsts
xchg
aas
inc
adc
mov
xchg
ret
jno
mov
out
lret
xchg
cmpsl
mov
mov
dec
fstpl
sarb
js
aaa
scas
mul
call
in
aad
outsb
mov
data16
sub
gs
in
fsubr
lret
and
out
test
mov
xchg
enter
sub
xchg
pop
pop
in
loop
lahf
int
lcall
xlat
cmp
xor
sbb
cld
jmp
jmp
mov
repnz
adc
arpl
addr16
pop
shll
loop
push
jnp
pminsw
mov
es
xchg
mov
pop
scas
ja
sbb
loope
pop
loop
and
xchg
mov
pop
sub
add
clc
mov
jmp
sub
pusha
nop
cld
mov
jns
cmp
add
mov
scas
imul
mov
pop
cmp
cmp
movsl
add
xor
mov
test
inc
or
fldenv
movsl
fdivrs
imul
movb
in
mov
sub
aam
in
out
pop
mov
ret
sahf
pusha
jp
scas
jmp
insl
rcl
hlt
leave
lods
lds
sub
scas
sbb
push
mov
gs
lret
mov
push
push
mov
ffreep
push
test
add
jecxz
in
rcll
or
stos
fcmovu
cmc
js
decb
push
outsb
fs
ficompl
lret
bound
pop
mov
cmp
adcb
out
mov
push
ret
inc
popw
mov
sarb
movsb
mov
dec
cmp
lea
sub
jmp
push
mov
inc
mov
scas
sbb
js
sbb
fisubrs
mov
sub
or
insb
inc
mov
mov
xchg
test
sub
sub
les
xor
inc
jle
gs
call
rclb
leave
hlt
mov
loopne
xor
cmc
and
and
mov
dec
je
lods
stos
and
add
int3
aad
lret
and
movsl
add
jge
stos
pop
in
push
mov
out
push
and
lret
js
aaa
pmulhuw
jmp
gs
mov
hlt
notl
pushf
scas
mov
mov
mov
mov
dec
jmp
mov
sbb
les
jg
ds
scas
dec
in
pop
mov
mov
lods
xor
gs
cmp
into
push
xchg
and
mov
inc
xor
jno
xchg
xor
scas
lods
fadd
lods
cli
adc
loopne
sub
add
ss
repnz
cltd
jb
mov
enter
in
cltd
in
repnz
inc
outsb
inc
add
add
pop
mov
jp
fisttpll
decb
repz
mov
loopne
sarl
mov
xor
mov
das
mov
fcmovnb
pop
sub
jmp
cmp
loop
dec
mov
push
cmp
push
daa
jge
rorb
sub
fbstp
push
gs
jecxz
inc
aaa
sbb
and
pop
pop
sub
lock
jno
fldl
jne
push
ficompl
mov
mov
xor
gs
dec
pop
cltd
insb
mov
rcrl
push
pop
cmp
rcll
rorb
pop
andb
out
jge
cmp
in
push
pop
insb
lret
test
das
andl
adc
call
into
fwait
lock
loope
sub
xchg
or
mov
push
or
cmp
bound
sub
fdiv
stos
add
enter
mov
cmp
nop
jp
aas
or
enter
push
stos
sub
push
insl
paddb
push
push
sbb
push
aad
add
jp,pt
push
cs
in
mov
dec
faddl
outsl
or
dec
mov
and
sti
ds
push
mov
xor
push
pushf
cmp
inc
mov
jne
insb
loopne
icebp
arpl
lock
sbb
jbe
and
jbe
fsubrp
or
pop
xchg
movsb
xlat
iret
inc
mov
xor
push
je
hlt
adc
movsb
arpl
pop
subb
aam
int
and
mov
adc
sub
popf
push
xchg
inc
or
add
jbe
fwait
cmp
sub
ror
nop
mov
adc
fs
jbe
and
adc
dec
add
mov
cmp
xchg
mov
ror
jbe
jge
jge
pop
jns
or
mov
ja
cmp
repz
int
or
lock
les
das
sub
in
inc
xor
sbb
cmp
add
mov
das
push
pop
jmp
jg
xchg
sbb
pusha
rcrl
mov
sub
loopne
movsl
dec
das
and
xor
mov
jnp
jecxz
pushf
icebp
lock
jae
mov
jne
or
nop
sbb
fimuls
inc
jge
sti
ss
mov
cltd
out
les
add
sbb
loopne
mov
js
cmp
daa
pushf
bound
outsl
mov
jg
ret
ret
push
mov
adc
mov
in
idivl
xchg
cld
inc
in
mov
fisubrs
add
xorb
insl
push
jecxz
jb
scas
jle
jno
imul
popf
rcr
xor
test
lea
and
enter
push
mov
aaa
sbb
jge
in
enter
mov
sbb
stos
cs
cmpsb
lods
scas
xor
int3
mov
daa
inc
aad
xchg
outsl
inc
push
inc
out
sbb
cmp
lret
outsl
push
and
adc
xor
push
mov
push
mov
add
xor
mov
aaa
sub
add
mov
xchg
or
xor
rsm
clc
in
dec
lods
std
in
fmul
mov
rcrl
or
sub
jg
mov
xchg
test
scas
jae
orl
pop
push
sti
cmp
xor
rcrl
jl
push
mov
pushf
push
jle
pop
adc
push
movl
mov
jecxz
aam
pop
sub
xchg
std
out
fisubl
mov
push
push
cmp
inc
and
pusha
gs
and
mov
mov
lods
lds
xchg
cmp
dec
mov
and
mov
std
out
sub
nop
das
insl
mov
fcoms
insl
jecxz
ret
jns
negb
popa
xor
das
xor
out
jg
aas
clc
and
imul
enter
test
xor
push
and
push
adc
daa
lret
int3
xor
jge
out
pop
popf
mov
cld
add
jge
hlt
movsb
pop
into
inc
stos
rclb
hlt
jg
mov
lcall
lds
popf
fcomps
mov
or
push
lods
xchg
lret
orb
lods
inc
pop
addr16
push
xlat
cwtl
xchg
lret
popa
sbbl
xchg
lea
mov
out
adc
push
dec
pop
loop
jp
icebp
and
push
stos
inc
inc
sub
lea
into
push
xor
ljmp
xor
fistps
daa
jno
sub
icebp
ss
shr
lcall
ds
ja
lret
pop
and
imul
mov
iret
cwtl
lods
xchg
out
stc
mov
mov
pop
in
xor
jne
shrl
nop
xor
push
inc
fmull
popf
pop
ficompl
ja
sub
fmuls
imul
jl
test
cmp
xlat
mov
adc
jmp
and
add
fisttpl
jg
add
push
call
dec
jge
int3
data16
nop
mov
inc
movb
push
sbb
stc
mov
push
orl
sub
inc
push
mov
ss
scas
fildl
add
es
stos
xchg
adc
xsaveopt
arpl
outsl
mov
insb
mov
mov
roll
sbb
jno
pusha
mov
inc
sub
pushf
pop
sub
mov
testl
dec
mov
add
jge
fadds
push
adc
and
mov
fmull
xchg
sbb
xor
sbb
fistl
cmp
push
rcrl
das
pop
sahf
jmp
repz
int3
nop
inc
in
or
mov
rorb
repnz
cs
mov
mov
xor
jecxz
cli
mov
es
add
cmpsb
cli
jecxz
adc
insb
push
stc
xor
lahf
int3
jp
test
mov
iret
lea
sbb
aas
repz
sbb
push
insb
push
mov
pop
int3
cmpsb
sbb
mov
inc
jno
xor
inc
sbb
jmp
and
mov
pop
adc
cmp
clc
repz
sub
or
shlb
mov
cmp
add
sbb
call
test
dec
xchg
sbb
pop
andb
mov
push
subb
mov
js
jl
rep
sub
in
loop
es
aad
xchg
push
adc
or
xchg
popf
scas
js
mov
sbb
movsb
loop
dec
aas
inc
lahf
mov
test
insl
stos
rolb
inc
adc
fucomip
mov
paddsw
ljmp
push
ss
test
cli
pop
lcall
hlt
movsl
je
and
lcall
mov
mov
mov
sub
imul
ljmp
lahf
push
ret
shlb
test
mov
iret
mov
cmpsb
stos
mov
jae
or
enter
xor
insb
test
mov
cmp
inc
adc
je,pn
into
aas
ss
fildl
xchg
push
cmpsl
lret
xor
rorb
pop
push
scas
mov
xor
scas
inc
push
call
mov
jmp
test
cmc
dec
cmp
adc
int
mov
in
adc
inc
bound
and
xchg
leave
stos
add
jle
pop
cmp
fnsave
mov
adc
shrb
or
into
and
enter
dec
lods
out
dec
inc
movsb
push
add
daa
jae
clc
into
add
out
int3
fwait
mov
jmp
mov
xchg
mov
loopne
inc
jmp
push
paddd
xlat
movsl
arpl
out
mov
fprem
inc
or
cmc
outsl
mov
mov
imul
outsl
hlt
mov
xor
xchg
mov
adc
inc
mov
cmp
mov
sarl
adc
push
xor
mov
jns
inc
ljmp
or
sub
hlt
mov
in
andb
icebp
mov
sti
inc
or
adc
mov
fadds
sbb
das
dec
mov
and
mov
cmpsb
jae
inc
cmp
popf
adcl
mov
mov
imul
add
out
xor
fldt
gs
xchg
lock
add
inc
cmovl
in
inc
aam
adc
dec
repnz
sub
adc
vdivsd
jg
jp
mov
scas
jp
inc
fbstp
sub
cmp
and
enter
push
lret
sub
push
imul
pusha
lock
in
movsb
pop
cmpsl
rcll
les
lahf
mov
push
in
jl
in
cmp
mov
adc
pop
fmull
insb
push
mov
lret
pop
adc
icebp
shlb
mov
cmpsl
test
push
dec
pop
cmp
ds
insb
or
mov
jo
es
add
movsl
mov
push
ret
inc
push
mov
popf
test
lods
and
inc
mov
in
jmp
mov
xchg
and
xchg
ja
pop
xor
pop
int
push
sahf
sbb
sub
xchg
inc
add
inc
jecxz
test
mov
sub
hlt
int3
mov
lds
fnstcw
imulb
push
addr16
add
pop
test
sub
inc
xchg
push
mov
dec
cwtl
cwtl
subb
adc
movsb
ss
lret
outsb
imul
mov
and
cwtl
imul
sbb
add
fisttpl
add
dec
jno
or
ret
jg,pt
sahf
test
jno
xchg
sub
jae
cmpsb
mov
jbe
or
aaa
jle
aam
dec
mov
lcall
adc
sbb
into
and
fcmovnbe
lahf
loopne
inc
js
jmp
stos
inc
sbb
sbb
mov
cmp
mov
jnp
sub
and
stc
pop
pop
xor
jnp
mov
or
shll
fucomp
inc
les
test
js
scas
int3
fisubrs
imul
stos
std
mov
push
adc
jbe
test
push
xchg
scas
mov
gs
clc
add
mov
daa
test
mov
mov
call
xorl
orl
jnp
stos
or
xchg
or
push
into
sti
sti
cmc
pop
xchg
dec
cltd
fxch
adc
repz
and
push
cli
test
sub
jle
outsl
int
dec
adc
pop
adc
mov
in
test
in
rcr
mov
mov
and
push
cmp
mov
xchg
cmp
xor
addr16
and
push
jp
inc
mov
decb
test
sbb
add
loopne
add
mov
stc
pop
clc
clc
dec
mov
pop
idivb
mov
js
sub
dec
inc
mov
movsl
sbb
mov
test
les
dec
cmc
adc
movsb
jg
stc
int3
xlat
es
push
dec
loope
adc
inc
mov
out
mov
in
xlat
jne
in
jge
xchg
sti
adc
lods
sahf
inc
pop
shlb
pop
and
xchg
push
xchg
mov
negb
pop
pop
cmp
xchg
dec
rolb
inc
mov
mov
xor
mov
and
inc
push
add
and
test
adc
pop
cmp
push
fidivs
and
xchg
push
adc
mov
dec
ret
add
dec
mov
out
jecxz
aad
inc
fs
movsb
fistpl
pop
shrl
mov
push
jmp
inc
and
lahf
lcall
aam
or
out
inc
push
movsl
test
mov
aam
loopne
lret
sbb
push
xor
pop
push
inc
aam
test
add
hlt
mov
dec
popa
push
fs
xchg
aad
inc
enter
and
mov
pop
dec
jl
ds
cmp
mov
add
and
inc
aaa
nop
jne
aaa
jl
push
mov
and
imul
sti
xchg
popa
imul
pop
xor
fsub
aas
insl
push
jne
popf
sbbl
jl
in
data16
adc
mov
inc
loope
mov
pop
nop
push
arpl
lcall
lret
xchg
into
fs
pop
stos
lods
sbb
and
adc
arpl
push
je
test
lcall
xchg
popf
bnd
cmp
pop
stos
rolb
xchg
int3
jmp
fisubl
clc
pop
int3
or
mov
adc
gs
dec
jnp
enter
lods
cmp
sbbl
fmull
test
mov
lock
jae
pop
xchg
adc
cmp
xchg
outsb
cmp
and
adc
xchg
stos
xchg
and
xchg
mov
mov
stc
sub
mov
fdivs
add
jbe
inc
pop
insl
sub
mov
cmovs
sub
lods
inc
loope
mov
adc
mov
lret
lods
inc
dec
push
out
xchg
decb
add
inc
out
mov
xor
clc
adc
cmp
mov
arpl
mov
outsl
stos
ljmp
shl
or
and
sbb
lret
rorl
xchg
fistpll
loope
outsl
stos
mov
shl
sti
mov
ss
push
repz
lcall
and
int
in
xchg
aas
mov
insl
pop
xor
cmpsb
iret
imul
or
rolb
jle
push
mov
js
cmp
bound
not
jo
lock
pop
mov
cmp
dec
loop
shlb
lret
dec
int
push
jo
xchg
jo
mov
fimuls
cmp
and
sahf
shll
ret
dec
dec
subb
jae
shrl
jns
fisubrs
shl
data16
aaa
repnz
in
test
loope
lea
or
dec
push
inc
jmp
pop
xor
push
push
sahf
cmc
mov
pop
jge
xchg
pop
jne
jle
in
ja
dec
dec
aad
sti
push
sbb
outsb
dec
push
test
push
xchg
fiadds
adc
adc
push
xor
nop
divl
push
adc
int
pop
in
lods
lods
std
dec
maskmovq
mull
sbb
xor
fwait
cwtl
cmp
mov
lods
fs
in
inc
repnz
aam
add
int
icebp
and
jae
ret
aad
push
std
dec
jge
lret
cmp
xchg
test
ds
mov
mov
sbbl
xchg
jno
cmp
imul
loopne
xchg
inc
mov
ret
jo
mov
aas
adc
insb
adc
inc
mov
lahf
out
or
xchg
fbld
xchg
push
cli
adc
mov
dec
daa
sbb
push
in
bound
xchg
cmp
push
xchg
push
fwait
outsb
dec
pop
push
and
jbe
xchg
cmp
pop
or
addr16
out
xor
movl
adc
pop
mov
mov
mov
shrb
mov
xchg
sahf
shl
mov
dec
jp
sbb
mov
pop
or
jae
jg
push
pushf
push
or
enter
in
out
dec
xchg
lods
sbb
pop
cmp
xor
pusha
xlat
scas
or
sub
push
shlb
push
mov
daa
out
sub
mov
mov
int3
lret
inc
movsl
mov
mov
aas
insb
jb
add
cmp
shrb
test
pop
mov
dec
popa
loope
jne
sub
cmp
clc
rclb
jmp
cli
std
push
pop
lock
out
lcall
divb
xor
jbe
addl
in
std
xor
push
ljmp
test
push
jnp
add
nop
data16
sub
enter
xchg
cmp
xor
adc
outsb
mov
mov
push
fiaddl
outsl
dec
inc
ror
xchg
pop
fistpll
add
jmp
fldcw
sarl
xor
cmpsl
and
add
xchg
aam
rclb
adcl
cmp
rcll
std
inc
push
sub
and
adc
dec
cltd
pusha
fwait
mov
lret
lret
gs
add
addr16
popa
cmpsb
sbb
mov
pop
mov
cltd
lods
jge
insl
pusha
jns
and
ljmp
ror
ds
mov
jno
cmp
rorl
shrb
sbbb
mov
sub
inc
xchg
shrb
sbb
movsl
aas
rcr
sub
xchg
push
xor
sar
dec
mov
hlt
pusha
pusha
xchg
call
mov
jg
enter
lock
dec
mov
aas
xchg
js
pop
xchg
sub
sbb
leave
stos
imul
sub
dec
cmp
mov
out
mov
inc
cli
ds
imul
outsb
adc
dec
les
or
mov
lahf
sub
std
jmp
add
outsb
mov
adc
cmp
movntps
add
mov
sbb
flds
dec
movl
ret
cmc
out
dec
inc
sub
xchg
lahf
inc
or
cli
pop
dec
popf
cs
jecxz
data16
stc
aas
mov
sbb
or
bound
das
mov
and
js
ret
jecxz
adc
add
sahf
ret
fyl2xp1
sbb
push
push
add
test
push
mov
pop
cmp
stc
mov
loop
into
jae
jmp
gs
sbb
push
imul
in
stos
cld
mov
xor
add
mov
xorb
push
sbb
xchg
ja
shll
xchg
push
jnp
rcrb
lods
out
imull
fs
lcall
in
cld
mov
popa
imul
dec
push
cmc
sbb
mov
adc
dec
xchg
out
js
mov
cld
push
test
xchg
push
cmp
mov
out
repz
cld
int
or
enter
sub
mov
cmp
xor
add
mov
outsl
ss
dec
bound
int3
leave
mov
cmp
cmpsb
mov
fwait
dec
jo
rcr
fstl
dec
push
pop
outsb
pop
repz
repnz
out
push
and
mov
xchg
xor
or
sarl
mov
jo
lcall
and
enter
inc
rol
movsl
add
mov
enter
pushf
jo
lds
or
leave
jo
push
add
cwtl
in
jb
nop
insl
in
dec
daa
std
and
pop
and
cltd
enter
push
hlt
sbb
and
jbe
cli
xchg
inc
scas
scas
adc
fcompl
cmp
push
nop
mov
je
cmc
xor
jmp
imul
negl
xchg
popf
outsl
ss
outsl
je
and
xor
pop
cmp
jae
sbb
pop
sub
xor
into
cmp
inc
fistpll
dec
scas
lahf
xor
ficompl
add
mov
dec
lcall
pop
push
xor
add
xor
jecxz
fsubrs
cld
cmp
ds
in
and
iret
fildll
js
adc
xor
rcrb
shl
fimull
cmp
das
mov
inc
mov
outsl
popa
out
stos
cmc
xchg
push
imul
orl
xor
xchg
scas
lds
test
scas
mov
sbb
dec
mov
movsb
cmc
fwait
enter
cld
jmp
jo
mov
out
fdivrs
xor
cli
mov
das
xor
out
inc
sub
adc
arpl
lods
shrb
faddl
rol
push
out
push
in
xchg
cld
and
mov
imul
repnz
lret
cli
add
arpl
lock
mov
dec
lods
inc
dec
lcall
inc
iret
sub
imul
inc
test
mov
mov
scas
xor
or
outsb
or
das
scas
ljmp
bnd
lods
jmp
insl
das
jecxz
push
repz
pop
lods
sbb
sbb
nop
jge
mov
dec
mov
xor
inc
xchg
dec
cmpsl
jle
jae
loopne
cltd
xor
xchg
mov
mov
sbb
out
xchg
nop
and
jae
jne
jmp
lock
stos
mov
push
in
push
or
push
xor
mov
aam
mov
cltd
adc
call
adc
popa
jmp
int3
ret
aam
jecxz
hlt
mov
sti
inc
fucomip
in
push
cmp
push
pop
rcr
lods
sbb
enter
in
mov
vmovupd
xchg
push
push
stos
push
fbstp
jg
or
fs
sbb
jge
cmc
test
cmpb
cmp
gs
jge
push
mov
fmull
das
or
or
sti
rorb
adc
call
jns
js
cmp
fadd
lcall
dec
jg
in
lods
cmp
pop
test
or
les
mov
fucom
add
xor
loop
rcll
jge
sarl
jp
cmpsl
push
cltd
adc
push
pop
and
out
ja
in
pop
in
jno
in
mov
out
mov
inc
pop
jge
ret
mov
mov
stc
ja
inc
inc
stos
cmp
pop
dec
cs
ficoms
push
arpl
pop
fdivp
pop
stos
push
fsubr
scas
les
hlt
lcall
popf
xor
out
cltd
std
inc
adc
inc
add
sti
cmpsl
lret
inc
clc
cmpsl
push
aad
add
repz
imul
cmc
cwtl
adc
hlt
ret
mov
je
frstor
lds
outsl
aad
push
not
xchg
xchg
outsb
mov
sbb
pop
jp
test
cld
push
aad
push
or
iret
mov
dec
loop
push
iret
fisubl
jmp
dec
xchg
fsubrs
sub
adc
pop
scas
insb
push
movsb
dec
notl
cwtl
stos
rcrl
popf
sbb
mov
bound
push
jl
push
stos
imul
sbb
jbe
cmp
ja
xchg
cltd
push
loope
dec
jnp
cwtl
mov
out
mov
dec
fistpll
cmpsl
pop
ss
xchg
pop
dec
into
xchg
divl
mov
sub
in
or
fisttpl
testb
or
cltd
add
pop
jns
cmc
adc
push
sub
cltd
cmpl
inc
push
out
orps
cmp
testb
mov
xchg
sub
dec
sub
in
lret
imul
sub
scas
xorb
and
fsts
sbb
jne
pop
pop
pop
add
mov
dec
add
xor
mov
cli
push
sub
push
pop
adcl
inc
sub
out
aas
aad
inc
push
test
add
lea
lcall
aaa
popf
push
clc
fidivrl
addr16
or
mov
imul
inc
xor
or
call
icebp
mov
adc
fsubl
fbld
dec
xor
shll
adc
fucom
xor
in
jle
movsb
mov
dec
mov
into
inc
fistl
data16
mov
mov
fisttps
sub
cmpsl
jmp
add
add
adc
xchg
xchg
in
push
into
or
sub
rcll
imul
xor
cld
pop
call
out
push
push
repz
and
daa
dec
test
mov
push
xchg
xchg
sub
loop
ja
out
push
xchg
outsb
cmpsb
and
testl
lret
sub
aas
lret
es
ja
imul
mov
out
jmp
jmp
mov
mov
push
sub
cld
xchg
jle
fidivl
xor
cld
mov
mov
xor
adc
sbb
repnz
ja
dec
loopne
xchg
dec
push
bnd
or
sbb
jae
mov
pop
mov
pop
and
loope
das
add
xchg
inc
and
inc
sub
leave
pop
mov
mov
loop
frstor
out
gs
mov
rolb
jns
int3
xchg
or
gs
mov
daa
mov
mov
jecxz
divl
sub
jnp
gs
bound
subb
loopne
add
inc
shll
mulb
xchg
bound
pop
pop
addr16
popa
mov
f2xm1
mov
mov
and
inc
mov
pop
push
arpl
xchg
out
xor
lods
inc
push
incb
xchg
loop
outsl
stos
mov
inc
stos
sbb
xchg
shl
fs
push
push
or
xor
push
sub
mov
rorb
or
hlt
dec
mov
mov
lods
xchg
clc
inc
je
adc
and
jb
jb
and
add
push
fwait
add
mov
sbb
pusha
hlt
push
xchg
jbe
insl
jge
fidivrl
aaa
mov
sbb
insb
sub
push
popf
pusha
xchg
mov
mov
and
cmp
jl
call
jns
xor
mov
mov
in
mov
mov
or
lods
test
roll
dec
pextrw
mov
push
add
mov
lret
into
push
inc
jg
mov
scas
jb
mov
or
xchg
dec
and
push
icebp
fsubs
or
xchg
add
adcb
test
push
xlat
xabort
loop
mov
pop
xlat
or
imul
leave
adc
push
fwait
push
mov
jb
mov
shll
mov
ds
add
pop
mov
mov
stos
mov
movsl
mov
mov
cmp
mov
and
idivl
divb
xchg
lret
dec
pop
cmp
and
push
icebp
mov
jl
or
xor
test
movsl
jne
mov
xchg
add
rorb
xchg
scas
xor
xchg
orb
loope
je
mov
cld
sbb
mov
mov
sbb
arpl
data16
sub
outsl
add
inc
out
movl
daa
movsl
pop
sub
je
xchg
icebp
imul
pop
fsub
lcall
mov
fdivs
loope
stos
dec
xchg
adc
xlat
arpl
pop
sub
mov
dec
mov
sbb
das
sahf
sti
movsb
mov
xor
shlb
test
sbb
mov
jg
push
push
add
jmp
inc
jae
mov
adc
stc
clc
test
out
int3
jne
push
outsb
jp
bound
add
popf
sub
jmp
mov
dec
sub
mov
pusha
jne
xor
in
mov
andb
int
pop
jo
in
push
out
inc
lea
push
xchg
notb
repnz
fidivs
mov
jl
and
pop
movsl
cli
sub
mov
mov
mov
test
cld
xchg
jle
lret
and
mov
out
movsl
repnz
lcall
repz
mov
aas
loopne
sbb
jmp
jp
popf
test
aad
mov
scas
xor
js
ds
lcall
jle
js
ljmp
push
jo
dec
inc
push
jno
mov
push
add
aas
add
rclb
in
jns
xlat
mov
hlt
dec
ror
mov
sub
sti
loopne
pop
adc
cld
outsl
add
bound
cmp
sbb
rcr
xor
mov
mov
rcrb
cmpsb
cmp
push
hlt
push
lods
jbe
xchg
fsubs
insl
je
pop
jnp
cld
push
cld
bound
jmp
push
outsb
dec
sub
dec
push
sarb
adc
mov
scas
jb
jno
pop
dec
in
xor
push
pop
adc
scas
dec
push
mov
adc
stos
sbb
adc
jae
jbe
mov
pop
hlt
cmpsb
jo
add
cmpsl
loopne
cmp
cmp
outsl
int3
mov
imul
mov
insl
dec
por
sti
push
push
pushw
out
out
inc
xor
inc
cmpsb
in
inc
jecxz
inc
push
cmp
lret
push
lahf
mov
leave
hlt
mov
das
sub
push
jae
xorb
divb
xchg
lcall
sub
pop
pop
xor
jle
scas
jl
int3
adc
push
push
test
mov
stc
inc
lret
cmp
mov
and
mov
mov
lcall
and
shrb
int
fwait
jg
cmpsl
mov
pop
lret
xchg
sub
sbb
sub
pop
jno
mov
cmp
add
inc
dec
inc
xchg
repnz
inc
loope
decb
and
pop
mov
rorl
sub
int3
pop
dec
dec
cmp
xor
jae
or
shlb
pop
std
pushf
push
push
andl
adc
jb
insb
xorl
and
jo
mov
jmp
insb
mov
adc
pop
push
dec
dec
or
pop
repz
imul
ja
xchg
cmp
mov
or
fwait
push
jp
cmp
test
aad
add
mov
jg
lods
mov
push
daa
mov
jp
or
push
or
or
sub
pop
mov
shlb
test
les
pop
dec
dec
movsl
outsl
pop
repnz
push
or
negb
push
xchg
jl
out
add
scas
xchg
cmp
adc
cmp
sbb
shl
jb
pop
icebp
inc
ja
sub
fwait
aas
jo
insb
xor
loopne
pmullw
ret
fwait
xchg
fdivrs
cmp
and
add
pop
mov
cmp
or
jl
repnz
stos
push
lahf
sbb
jno
lds
fisttpll
ficoms
sbb
push
mov
push
sbb
ljmp
in
adc
mov
outsl
popf
xor
aas
dec
in
mov
loopne
xor
pop
das
divb
pop
xor
shll
out
xchg
jns
inc
lret
sbb
inc
push
test
jge
inc
sub
adcb
mov
stos
lods
sub
movsl
mov
call
jecxz
gs
jle
sub
rclb
pop
cvtps2pi
add
push
push
fs
icebp
mov
test
in
sbb
adc
sahf
imul
xor
outsl
js
repz
or
dec
mov
or
stos
fistpl
les
inc
xor
adc
outsl
cs
mov
cli
lods
pusha
ja
loopne
loopne
mov
dec
outsb
xchg
call
in
out
jl
cmpsl
adc
pop
sti
dec
sub
repz
xchg
flds
loopne
cmp
pop
pop
lret
and
pop
fstpt
or
xchg
xor
ficoms
sbb
cld
incb
jne
cmp
inc
sbb
ljmp
add
mov
xor
std
push
jae
add
push
sub
sbb
inc
xchg
data16
subb
sbb
ret
mov
add
cmp
pop
add
js
dec
mov
cwtl
jp
out
pop
mov
popf
inc
test
mov
fyl2x
push
mov
mov
shl
xor
xor
lods
ljmp
push
cmp
cltd
cmp
fcompl
inc
add
cmp
ret
and
lods
mov
sbb
inc
subps
test
xchg
xchg
bound
jp
lcall
mov
and
mov
lcall
jo
lret
jbe
repz
sub
lahf
jbe
pop
xor
in
stc
ficompl
mov
mov
out
fisubrl
xchg
imul
hlt
push
cltd
mov
mov
gs
sub
jg
addr16
repnz
out
rcll
sbb
push
fs
andl
aaa
repz
cs
pop
xchg
mov
xchg
jno
lret
in
mov
icebp
xchg
dec
fmulp
and
bound
loop
mov
pop
jg
cwtl
mov
ror
sbb
or
jne
fdivp
bound
pop
clc
outsl
clc
repz
mov
fidivs
pusha
xchg
sti
cmp
jo
pop
aas
out
inc
cmp
sbb
outsl
fs
push
fwait
push
ss
dec
inc
call
cmp
jns
mov
push
inc
shlb
push
out
lock
mov
inc
lock
cli
or
dec
jmp
jo
clc
add
and
cmpsb
mov
xchg
add
cmp
popf
adc
mov
enter
in
insl
mov
les
rep
cltd
repz
inc
in
cld
adc
das
push
aad
frstor
pop
into
loopne
js
rorb
dec
rorb
shl
dec
in
inc
inc
out
shlb
repnz
sahf
lahf
sbb
xchg
scas
leave
push
mov
xor
xor
lret
sar
push
je
addr16
fisubl
push
add
pop
test
push
inc
repnz
fidivs
mov
ret
dec
jns
mov
jno
xor
stc
lcall
in
fsubs
add
in
sub
js
mov
xchg
mov
cmpsl
dec
sbb
xor
xchg
into
aad
mov
jnp
fwait
aas
add
mov
shr
push
dec
xchg
in
jle
push
pop
cmpsl
lret
out
mov
mov
xchg
push
mov
sbb
test
inc
fucomi
fistl
aad
gs
int
xchg
movsb
sbb
jb
and
popf
hlt
in
std
inc
inc
aaa
lds
loop
push
outsl
sbb
cmp
leave
adc
adc
inc
es
pop
jl
jmp
push
dec
pop
out
or
out
ret
dec
mov
dec
imul
pop
sbbb
xor
imul
adc
push
clc
shlb
ss
and
pusha
mov
iret
dec
loopne
cmpsb
fsubrp
and
jne
xlat
cltd
xor
clc
lret
add
pop
dec
bound
fnsave
hlt
lock
xchg
loope
iret
xorl
dec
sarb
sti
test
mov
ret
incb
cmp
xchg
cmp
xchg
jle
out
adc
inc
in
pop
shll
xorb
xor
out
mov
push
sub
into
xor
xchg
insl
pop
add
jmp
das
or
mov
out
data16
je
pop
jno
pop
and
rorb
not
sbb
mov
dec
or
aaa
insl
sbb
dec
dec
or
and
push
icebp
test
mov
adc
push
out
test
int3
neg
pop
gs
lret
inc
jnp
movsb
xor
inc
aas
jmp
add
aam
mov
loop
add
xchg
push
test
jp
mov
add
out
xor
push
jmp
mov
or
push
sub
push
mov
fldcw
pop
add
shrl
jne
adc
push
shl
je
and
mov
bndldx
jmp
in
push
lds
push
test
inc
sub
pop
imul
in
js
loop
mov
sub
test
xchg
and
aad
push
push
movsl
sarl
inc
shll
push
cmp
inc
or
roll
lahf
cmc
es
mov
jo
dec
push
mov
into
cmp
or
dec
pop
lret
mov
sbb
fsubl
dec
movsl
clc
loope
insl
add
cld
sti
xor
mov
test
mov
imul
xor
fcompl
or
sub
jg
ds
push
jecxz
adc
in
push
pop
ret
flds
movsb
in
add
adcl
mov
loope
adcb
mov
cmpsl
addr16
addr16
sbb
movsl
fwait
cs
fbstp
mov
sub
mov
sbb
mov
sbbl
push
xchg
test
jno
mov
inc
cmpsl
push
test
cpuid
mov
jo
adc
mov
aad
in
lret
cli
shrl
ror
jbe
insb
fbstp
pusha
fimull
sbb
cltd
xchg
pop
imul
aas
or
sbb
push
aad
mov
daa
push
es
pop
cmp
mov
push
xchg
sbb
xlat
push
push
jge
fnclex
push
rorl
mov
int
dec
fwait
out
adc
push
iret
push
xchg
stos
cmove
sahf
adc
adc
push
js
sbb
fcompl
fisttps
xchg
imul
repz
stos
cli
or
fwait
adc
fisttpl
jg
and
mov
mov
sahf
xchg
jne
out
loopne
jno
fwait
sbb
fmull
mov
das
mov
repnz
lret
pop
js
xchg
les
push
lcall
pop
cmp
adc
mov
xor
mov
dec
jp
inc
jecxz
mov
jno
out
push
lods
movups
popf
out
cltd
ljmp
adc
leave
mov
lock
push
push
rcr
lods
hlt
fdiv
sbb
and
adc
scas
lret
mov
subps
and
insb
xchg
mov
rorb
or
int
fidivrl
mov
dec
imul
and
lock
mov
call
aad
sbb
mov
sub
adc
push
adc
rcll
sub
fildl
pop
fsubrl
mov
out
or
sbb
cld
es
je
or
push
popf
in
dec
or
mov
sub
in
hlt
insl
sti
pusha
dec
int
dec
test
push
aaa
dec
xchg
cmc
mov
icebp
test
pop
fmul
add
and
sub
pop
push
mov
lock
adc
aad
jl
push
mov
mov
sub
cli
sub
ja
stc
ficomps
dec
stos
jno
jbe
repnz
pop
or
pusha
shlb
cmp
and
bound
xchg
cmpsl
ret
loopne
fsubrl
or
add
pop
out
inc
loopne
dec
pop
push
cld
pop
arpl
mov
stos
out
std
int3
sub
movsb
xor
jb
test
call
xor
lods
jnp,pn
pop
js
out
mov
or
mov
test
mov
adc
testb
int
dec
les
pop
inc
repz
cmp
push
xchg
mov
sub
adc
lds
mov
das
loopne
outsb
push
mov
and
cwtl
sub
test
loop
and
cmpb
sbb
jns
jecxz
je
data16
xchg
pop
cld
out
sub
add
in
pop
cmpsb
mov
and
repz
hlt
lcall
pop
sarb
fwait
minps
shrl
adc
test
sbb
fwait
pushf
pop
sub
enter
clc
ljmp
movaps
xor
add
dec
mov
ljmp
out
mov
or
sbb
adc
and
loope
jne
inc
xchg
stos
sbb
icebp
inc
cmpsb
push
push
mov
push
out
xchg
in
dec
inc
andb
mov
jae
push
jae
and
jno
push
std
lcall
insb
add
push
mov
xor
sub
inc
filds
adc
addr16
cmp
xchg
mov
stc
jo
adc
jg
aam
mov
dec
push
and
add
inc
adc
jns
jp
or
insb
cwtl
mov
inc
lock
pop
pop
jno
mov
sub
adc
or
jmp
gs
jb
cmp
adc
popf
jne
pop
pop
pop
pop
jae
dec
in
popf
mov
inc
cmp
aad
test
and
sub
push
add
cli
int
pop
out
mov
push
daa
sub
inc
iret
pop
addr16
cmp
adc
mov
outsb
iret
adc
sub
in
sub
xchg
or
add
dec
push
xchg
std
mov
jecxz
xor
repz
sahf
sbb
js
cmc
in
adc
dec
shrb
hlt
shrb
pop
pop
jb
lds
daa
inc
int3
mov
rolb
enter
lods
add
loop
fsubrl
lods
dec
fldcw
iret
push
pop
sbb
sbb
mov
lea
push
faddl
cmpsl
push
rclb
or
add
mov
push
xor
hlt
fucomp
dec
jl
pop
outsl
notb
jno
xchg
bnd
add
out
fnstenv
clc
sti
sbb
push
xor
and
sbb
test
adc
pop
xor
mov
mov
into
aas
cs
add
inc
pushf
push
ss
inc
xchg
xlat
sbb
push
push
popa
inc
clc
lret
adc
xchg
mov
cmp
sub
push
xchg
add
mov
jno
loopne
aas
scas
std
movsl
mul
and
jmp
jmp
or
mov
or
jmp
cli
lret
cli
jnp
mov
push
xchg
es
sbb
xchg
xor
adc
popa
mov
mull
mov
test
mov
ficoms
xchg
pop
mov
adc
mov
jo
push
xor
data16
imul
nop
push
andl
mov
cmc
cmp
aam
lds
push
add
xchg
and
dec
jne
popa
cmc
mov
movq
push
dec
xchg
arpl
lcall
js
addb
cmp
and
cmp
jle
lock
pop
lods
sbb
dec
jo
pushf
imul
pop
or
inc
mov
add
mov
mov
ja
cmp
test
scas
and
fldcw
dec
in
mov
negl
pop
jmp
mov
fsubrp
push
lods
lds
cmpsb
mov
sbb
lret
frstor
mov
cmp
icebp
adc
mov
sbb
push
dec
sbb
sbb
mov
add
lods
xchg
mov
sub
ja
fmuls
adc
dec
cmp
aas
mov
sub
ss
jnp
dec
jno
or
xchg
mov
stos
and
in
xchg
out
dec
push
jnp
popf
xor
pop
pop
xchg
sahf
mov
lds
pop
sub
nop
popf
adc
adc
mov
int
lds
es
xchg
or
push
data16
mov
mov
into
loop
sbb
add
push
and
cmp
sub
push
insl
fisubl
xor
jmp
xor
out
cmc
out
cmp
pop
jle
jg
cmp
mov
pop
jb
jl
jle
mov
add
push
incl
dec
push
imul
imul
xchg
xor
repnz
lahf
jg
dec
test
jno
rorl
push
fs
lahf
sbb
rorl
repnz
push
pop
fwait
push
pop
jecxz
imul
xor
aam
loopne
fisttps
jbe
sub
jmp
and
inc
and
dec
cmpsb
shlb
aad
hlt
mov
lahf
filds
jnp
call
jns
or
hlt
test
xlat
mov
cld
lea
loop
out
les
cmp
jge
js
gs
jnp
push
cmpsl
sbb
je
out
scas
sti
pop
xchg
aam
sub
jb
cwtl
jg
dec
movsb
lret
fisubl
fists
loop
inc
stc
mov
pop
or
ret
push
mov
xor
mov
add
in
sub
add
dec
xchg
lods
jmp
shlb
xor
adc
leave
jecxz
out
mov
push
jns
push
psubb
push
cltd
xor
loop
movsb
xchg
les
sbb
and
sbb
sbb
dec
ret
adc
mov
jp
aam
and
mov
xchg
or
cmc
jecxz
addr16
icebp
fwait
jno
xor
xor
and
adc
cmpsl
jp
orb
xor
add
mov
orl
cmp
xor
and
or
push
cmp
sarb
mov
data16
mov
testb
cmpsl
cmc
scas
cmp
shrl
mov
xor
loope
sub
iret
add
and
fnsave
sti
pop
out
mov
ret
sbb
clc
outsl
and
add
inc
mov
or
int3
stos
or
push
xchg
repnz
pop
into
repz
pop
ds
cmp
push
lahf
mov
xchg
sbb
dec
movsb
dec
sub
inc
mov
pop
jg
jnp
sbb
xchg
sbbb
js
pop
fstl
pop
insb
jle
faddl
sub
cmp
testb
mov
inc
xorl
add
mov
call
add
loopne
cmpl
popf
loopne
aad
test
mov
lea
aaa
pusha
push
mov
xchg
mov
sub
mov
cmc
inc
pop
icebp
call
sbb
and
sub
adc
out
arpl
shl
lret
cmp
pop
je
ja
mov
pop
push
movsb
sti
lcall
outsl
shlb
inc
sbb
push
fwait
lcall
xchg
dec
xchg
outsl
jo
xor
jle
mov
or
insb
scas
loop
int
lret
jno
lret
clc
inc
fstp
dec
adc
pop
add
jno
fadds
inc
test
push
and
dec
fidivs
imul
cmp
loop
shrb
push
cmpsl
jae
sub
pop
inc
jbe
inc
cmp
cmp
shr
fadd
jl
call
cmp
scas
sub
push
in
jo
sbb
fiadds
xchg
mov
popa
fcmovnbe
add
stc
or
sti
mov
aaa
ljmp
pop
pop
stc
test
insl
dec
leave
aas
jbe
dec
sbb
bnd
sub
in
push
repz
addr16
mov
insb
dec
mov
push
push
push
inc
and
xchg
pushf
int
ljmp
cmp
or
ja
ret
adcb
jmp
pop
jg
mov
add
adc
dec
aas
pop
ret
out
les
pusha
pop
and
addb
std
sub
nop
sub
or
adc
push
cmc
sbb
xchg
mov
repz
mov
xchg
mov
mov
leave
xchg
sti
adc
aad
jmp
sub
leave
mov
pop
clc
xchg
sub
xor
pusha
sahf
adc
cmp
xchg
pop
add
dec
mov
mov
cmp
sub
jae
and
sar
loope
xor
scas
shlb
push
sub
dec
xchg
xlat
loop
pop
dec
andb
jbe
xchg
inc
inc
mov
xchg
mov
addb
aad
or
int3
add
mov
add
std
xorl
xor
add
mov
inc
sbb
notl
cwtl
dec
cmc
enter
dec
push
not
xchg
push
inc
pop
out
xchg
xchg
inc
daa
rcll
push
dec
lods
dec
movsl
push
loopne
lods
or
dec
movsb
jp
nop
in
bound
leave
shlb
outsl
add
loopne
call
movsb
in
lahf
jno
jg
add
xchg
arpl
jle
popa
mov
sbb
lret
negw
sbb
push
ljmp
int
jo
add
push
pop
add
pushf
popa
mov
in
inc
pop
imulb
mov
mov
dec
dec
lret
test
jno
or
adc
cmp
lcall
push
out
push
xchg
jecxz
insb
fsubrl
sbb
sbb
mov
cmp
mov
dec
xor
dec
es
jle
repnz
push
xor
mov
test
jne
inc
test
dec
mov
push
lret
jle
push
idivl
jo
stos
mov
xchg
cld
adc
jp
xchg
stos
cmp
jno
loope
shll
mov
pop
dec
mov
fdivs
hlt
xor
cmp
cmp
outsb
mov
pop
push
subl
dec
sub
movsb
std
jo
aad
cmp
sbb
int3
pop
mov
inc
jg
daa
gs
imul
mov
lret
cmp
addl
push
les
faddl
mov
cmp
cmpb
cmpsb
cmp
pop
int3
mov
stos
cmc
xchg
int3
out
ret
test
jg
shlb
xor
lahf
shlb
sub
inc
aas
sbb
adc
and
mov
pop
sub
mov
and
sbb
pusha
inc
jg
jae
fldt
jo
fcoml
xchg
lret
pop
dec
rcrl
mov
pushf
fnstsw
inc
sub
mov
inc
xchg
push
fdivp
push
xor
dec
rcr
fists
push
in
ja
stos
pop
lods
pop
lcall
mov
mov
mov
jns
lret
xchg
stos
jae
outsl
les
add
shr
mov
movsb
fbld
adc
push
mov
dec
jge
jge
inc
xchg
clc
lret
jo
fwait
rorl
xor
dec
hlt
adc
push
pop
xchg
inc
lock
add
lock
and
xor
and
les
mov
xchg
sbb
cmp
and
xor
jno
nop
cmp
stos
in
push
xor
adc
sbb
daa
jnp
mov
in
push
or
iret
mov
cmpsb
cwtl
mov
das
cltd
inc
movsb
ret
sub
mov
lret
and
xchg
push
movsb
push
or
add
xchg
sbb
mov
orl
adc
sbb
fstl
movsb
ss
leave
pop
lahf
xchg
push
xor
aaa
cltd
lret
xchg
xlat
cmp
cwtl
shlb
fs
dec
xchg
mov
mov
adc
mov
lret
mov
xchg
popa
sar
test
fisttpl
mov
push
fcoms
aam
sbb
fnstcw
mov
imulb
roll
mov
and
push
test
call
pop
fnstsw
xlat
loop
test
sub
out
test
in
mov
xchg
cmp
pop
sbb
clc
outsb
cmp
das
sbb
test
jle
das
sti
addb
pop
scas
mov
test
fsubs
dec
in
xorl
jnp
loop
xor
lea
lret
sarl
dec
cltd
movsb
add
push
jno
repnz
dec
sbb
push
jl
out
sarb
jp
lcall
push
xchg
adc
stos
test
rcl
pop
add
cmpxchg
out
sbbl
jo
push
xlat
dec
mov
stos
popa
fisubs
es
cmp
xchg
mov
add
mov
jp
adc
mov
cmp
push
or
stos
adc
das
jle
pop
xor
ds
xchg
add
fucomip
mov
popf
push
aad
push
xorb
mov
dec
cmp
iret
inc
pop
les
mov
mov
pop
xchg
dec
push
dec
xchg
bound
out
push
rcrl
xchg
fs
aad
repnz
iret
mov
dec
push
gs
sub
in
mov
sbb
lods
pushf
fs
jl
push
pop
sarb
ss
dec
cmp
ret
mov
mov
cmp
dec
mov
cwtl
mov
popa
add
and
or
nop
ja
cmp
sahf
cmpb
push
stc
pop
sbb
or
mov
pusha
loop
cmp
and
jp
add
inc
iret
fdivs
add
loop
shll
mov
xchg
mov
and
xchg
or
add
mov
xchg
mov
movsl
inc
inc
jge
das
test
rorb
xchg
xchg
push
pop
mov
sbb
rolb
test
cmp
jbe
setne
scas
out
fdivrs
loopne
push
push
mov
int3
jmp
shlb
std
fnstsw
inc
mov
xchg
xchg
xchg
sub
insl
jmp
adc
jno
xor
cmpsl
arpl
xchg
imul
scas
xchg
cmp
mov
rcrl
or
pop
ret
lods
je
inc
push
scas
add
in
pushf
mov
sbb
adc
pushf
xchg
mov
add
add
test
int
fsubl
scas
add
xchg
frstpm(287
les
pop
lret
movsl
shl
movsb
rcl
lods
and
xor
fldl
or
out
dec
testl
xchg
imul
js
jle
sar
insb
pushf
pop
int
xor
mov
and
js
jmp
pop
adcl
push
rcrb
outsb
not
popa
sarl
call
pop
stc
xor
out
std
mov
in
daa
int
jae
lock
cvtdq2ps
cmpsb
cmp
pop
aas
inc
inc
adc
jno
sub
jb
jo
xlat
xor
imul
dec
mov
ficomps
xchg
in
and
push
or
subl
dec
pop
inc
pop
mov
inc
shrl
lret
cmp
fnsave
push
cmp
pop
xchg
sub
lds
add
jp
mov
icebp
jp
adc
gs
mov
in
lahf
push
pop
loope
dec
push
mov
adc
ret
fnstcw
sub
insb
clc
xchg
adc
adc
in
dec
jno
mov
aad
rol
add
sub
imul
dec
adc
mov
sbb
mov
subl
cmpsl
mov
je
pop
shrb
mov
inc
fdivr
xchg
jecxz
xchg
gs
adc
testb
out
test
int3
xlat
pshufw
imul
sbb
into
mov
aad
popf
and
cmpsb
xchg
pop
add
cmp
mov
sbb
add
out
sar
jo
sbb
sbb
int
xchg
xor
cmp
jl
stos
mov
hlt
xchg
lahf
cwtl
pop
pop
pop
aaa
inc
sub
pop
mov
xchg
jne
pushf
pop
jo
fs
adc
roll
mov
jg
mov
inc
test
cmpsb
jnp
add
cmp
inc
popa
xlat
push
in
adc
dec
imul
inc
int3
and
cmpsb
xlat
insl
xor
sbb
std
ljmp
jecxz
mov
mov
xor
daa
jp
std
js
jecxz
jne
jge
dec
lods
inc
cmp
loopne
jg
xor
xor
pop
mov
push
inc
cmp
sub
les
inc
imul
inc
push
ja
dec
mov
or
and
lods
jge
jmp
fucomi
fcmovnu
push
gs
cmpsl
scas
ss
pop
subl
jne
repnz
jns
adc
cmp
shl
mov
loopne
adc
cmp
idivl
fists
dec
lock
or
jne
sarb
and
mov
int
push
icebp
xchg
out
mov
dec
fsubrl
ret
sbb
or
lods
mov
imul
and
jl
leave
jno
int
mov
pop
insb
mov
dec
dec
mov
mov
add
scas
pop
or
les
fisubrl
idiv
out
pop
sarb
movsl
sbb
test
ljmp
pop
jge
sub
push
repz
push
insb
popa
loopne
jp
xchg
sbb
fmuls
mov
and
icebp
cli
cmpsb
push
hlt
lea
mov
pushf
dec
stc
mov
bound
roll
jg
jp
sarb
xor
rcrb
shrl
insb
stos
hlt
add
pop
mov
xor
inc
mov
es
stc
cmp
xor
in
clc
fsubrl
sub
test
loop
mov
jb
xchg
ss
pop
and
loopne
xchg
lcall
sbb
mov
sarl
ret
aam
iret
lea
pop
pushf
push
xchg
aad
bound
fcomps
jns
pop
cmpsl
push
bound
cld
test
ja
pop
push
ror
inc
and
mov
mov
mov
cmpl
jb
std
cmp
stos
mov
addl
or
lods
lahf
pop
nop
add
lock
mov
xchg
and
popf
sub
lret
std
test
sub
sub
sbb
adc
pop
jmp
mov
xchg
leave
xor
mov
aam
pop
mov
ljmp
xchg
or
popa
lods
jmp
fwait
jbe
shl
adc
pushf
es
pop
lea
je
jmp
jnp
inc
ficomps
test
mov
pop
xchg
dec
aaa
jmp
and
mov
fdivp
cmp
and
or
xlat
incl
lret
dec
leave
mov
fs
pop
jle
fistps
mov
out
es
sub
xor
cmpsl
pop
jp
loope
sbbb
or
fisubs
fstl
aam
or
push
cmovb
or
aaa
cmp
adc
out
insb
sub
adc
aam
outsl
push
addl
adc
sbb
jg
dec
cmp
sbb
int3
add
iret
inc
add
popa
add
jge
mov
push
jnp
mov
add
call
pop
out
lock
fstps
repz
lret
jmp
pushf
leave
mov
cwtl
into
adc
outsb
scas
pop
fistl
je
aad
std
pusha
mov
outsb
test
sbb
mov
lret
xchg
test
inc
insb
sub
mov
jns
movaps
mov
sub
mov
je
fdivrs
dec
in
add
cmc
push
push
xor
incl
push
out
xor
pop
push
fisubrs
cmpb
push
inc
decb
testl
es
xchg
loope
notb
pushf
dec
inc
out
rcrb
jo
popf
or
and
imul
and
call
hlt
test
nop
cmp
mov
push
or
insl
test
jmp
pop
jmp
sbb
leave
adc
mov
xor
xchg
adc
dec
pop
or
outsb
stos
stos
gs
jmp
cmc
out
mov
jg
cmp
repnz
adc
sub
test
add
jo
xor
mov
push
lock
bound
out
xor
roll
push
lcall
nop
push
enter
mov
iret
jno
sub
mov
pop
push
sbb
fadds
inc
dec
cmp
ss
leave
and
jo
mov
fxam
loope
fs
call
jbe
push
mov
scas
xchg
gs
jmp
hlt
mov
mov
push
pop
insb
mov
and
aad
dec
jl
cltd
xchg
sbb
fsubl
stc
push
in
sub
jae
outsb
push
xchg
push
adcb
cld
sarb
ljmp
mov
cmpsl
fists
xchg
mov
sub
push
daa
jg
jb
inc
or
mov
nop
add
in
jecxz
mov
addr16
into
mov
ret
mov
push
loop
adc
std
push
popa
mov
test
xchg
call
enter
ret
cmp
out
dec
xor
adc
jg
imul
ret
pop
lret
andl
pop
ja
or
fiaddl
cmc
push
lea
lock
test
mov
cmpl
pusha
lret
sbb
sahf
fimuls
int3
cwtl
imul
push
std
cmpsb
mov
add
sbb
xchg
sbb
jo
out
jb
in
adc
xlat
mov
rorb
or
popa
dec
dec
jo
lea
adc
mov
inc
adc
or
andb
mov
mov
lods
jns
ret
jno
test
rcr
dec
pop
outsb
mov
pop
cmp
imul
out
or
mov
insl
add
inc
cwtl
inc
jecxz
cmpsb
xor
insb
adc
jo
je
xchg
mov
adc
xorb
loope
or
mov
cwtl
je
lock
je
and
and
cmp
rcll
notb
cmp
aad
clc
xchg
mov
lret
xor
ret
mov
jnp
fisttpl
adc
rclb
in
jne
fnsave
mov
mov
js
xchg
pop
add
je,pt
lock
movl
scas
mov
ret
inc
int3
inc
outsl
test
or
pop
frstor
pop
mov
ss
and
and
adc
dec
add
mov
dec
iret
pop
movsb
incl
xor
jge
mov
int3
imul
fildll
dec
xchg
add
pushf
mov
jecxz
push
pop
push
nop
inc
jp
aas
push
sti
or
dec
ss
je
xor
xor
dec
add
rcrb
jmp
and
mov
xchg
sbb
jno
xor
and
mov
fwait
adcb
mov
add
jb
sub
sbb
out
adc
lret
sub
das
mov
jbe
mov
adc
add
addl
jecxz
lods
adc
sbb
xor
mov
push
sub
pop
and
mov
das
std
int
pop
fisubrs
add
jno
aaa
pop
pop
mov
mov
test
lock
cmp
push
dec
sub
cs
xorl
cld
ret
mov
mov
adc
lods
out
xchg
movsb
adc
sub
fs
arpl
dec
pop
icebp
aaa
sbb
mov
mov
subb
xchg
mov
loope
xchg
iret
and
push
add
jnp
je
mov
test
mov
sub
pop
pop
cmc
test
xchg
and
push
mov
push
mov
mov
hlt
out
cmp
dec
dec
jns
ja
pop
push
push
aas
ljmp
push
xor
pusha
mov
out
lahf
clc
push
pushf
sub
xor
sti
mov
inc
std
outsl
sub
lahf
aam
dec
in
movsl
xchg
jns
insl
pop
jmp
fsub
std
fidivrl
pop
xor
je
mov
test
sbb
mov
fisubs
fwait
sub
cwtl
in
popf
xor
mov
pop
mov
dec
je
inc
mov
and
aas
pop
subl
repz
and
push
test
xchg
or
add
mov
mov
pusha
sub
inc
push
das
pop
arpl
mov
mov
inc
cmp
mov
emms
and
fsubrl
addr16
xchg
xor
stos
in
dec
and
lea
das
movsl
imul
cld
and
sbb
mov
xchg
imul
bound
xor
out
mov
mov
sbb
aam
leave
and
sbb
dec
daa
push
add
mov
xchg
push
addr16
pop
jecxz
test
out
sub
lret
xchg
imul
sub
mov
pop
mov
repnz
jle
mov
out
mov
mov
mov
inc
inc
ret
iret
enter
pushf
jg
jmp
jns
mov
sbb
inc
sbb
jns
add
jl
movb
shl
adc
jl
mov
sub
sbb
fisubl
insl
test
pusha
mov
scas
ss
push
aas
sub
loopne
and
add
ss
add
mov
hlt
in
jbe
ljmp
xchg
scas
pop
jne
xor
jp,pn
addb
xorb
or
xchg
push
dec
add
xchg
fdivs
nop
xchg
sbb
adc
int
movsl
mov
push
out
les
mov
push
adc
fsubl
sahf
pop
jns
or
imul
add
xchg
sbb
fsubrp
inc
mulb
ja
scas
int3
add
test
imul
mov
dec
out
xor
inc
addr16
pop
sub
testl
sahf
js
repz
inc
lock
cmp
mov
shlb
or
cmpsl
std
xchg
xor
adc
repnz
je
pcmpgtw
pop
and
xchg
pop
xor
enter
xchg
mov
rcll
cmc
clc
pop
mov
xor
mov
out
pop
fldl
ret
lds
mov
jle
xchg
xchg
adc
sub
ss
sbb
pop
mov
inc
popf
addr16
pop
adc
sahf
repz
mov
jmp
xchg
jo
cmc
out
inc
sbb
mov
and
add
push
jp
dec
mov
jb
mov
dec
insl
mov
rcrl
pop
lds
sahf
adc
into
or
repnz
les
xor
leave
fnstcw
dec
mov
fcomps
lock
sub
dec
popa
icebp
pushf
in
dec
push
lods
jecxz
in
adc
inc
jnp
xchg
dec
cmp
mov
cmp
push
enter
sbb
push
or
repnz
clc
adc
enter
subb
sbb
sbb
or
lahf
inc
sub
mov
push
or
fisubrl
add
clc
imul
daa
icebp
pop
or
cld
adc
test
test
notl
jno
jbe
repz
fstpl
shrl
jno
scas
loope
les
fwait
pop
fstl
jg
inc
test
rcll
inc
xchg
fsub
sub
mov
subb
int3
hlt
jo
and
lods
in
ret
xor
sbb
cmp
jbe
mov
add
mov
cmc
pop
jge
pop
push
push
push
sbb
mov
sbb
mov
sub
pop
xchg
ret
aam
outsb
inc
push
add
outsb
clc
dec
push
popw
lea
push
or
jae
test
out
cltd
jns
dec
cltd
aaa
scas
leave
dec
add
int3
sarb
pop
mov
cmp
adc
cmp
inc
ljmp
sbb
or
mov
cmp
fcoms
mov
xchg
xor
repz
jae
xor
pop
sbb
cmp
jge
insb
popa
pop
scas
add
or
mov
lret
cmp
cmpsl
into
ror
xchg
xor
fistpll
lahf
lahf
xlat
mov
sub
adc
imul
and
pop
mov
push
adc
pop
sub
dec
mov
fwait
aam
sahf
lret
push
jnp
es
jno
pop
pop
cmp
add
dec
add
cmp
bound
mov
into
jge
dec
cmpsl
inc
mov
or
mov
xor
sbb
and
or
push
or
lods
dec
adc
shll
sahf
adc
lods
pop
imul
dec
jp
pop
mov
mov
jnp
cmpsl
push
dec
mull
call
js
cmpsb
in
adcb
mov
icebp
mov
jg
mov
push
repz
sub
mov
push
cmpsb
lock
cmc
push
sub
xor
repz
adc
cmc
mov
rclb
dec
sub
adc
sbb
jo
rcll
xorl
jle
inc
fdivs
pop
pop
xchg
push
or
adc
into
mov
ds
dec
cmp
aas
lea
push
popf
int3
or
xchg
adc
or
rcll
negb
sub
push
std
rolb
ret
insl
loopne
ret
dec
aaa
cwtl
jge
or
hlt
mov
ja
shl
mov
mov
xor
andb
mov
loop
mov
lds
cmp
iret
cmpsl
sub
push
in
push
sub
fcomps
jle
rcll
popa
and
repz
push
xor
push
daa
in
test
repnz
or
ds
or
xchg
stos
and
xor
adc
aas
ljmp
sub
inc
fcompl
push
mov
lahf
sub
xor
pop
sbb
in
mov
pop
xchg
mov
outsl
icebp
sarb
fcmovu
bnd
lods
aad
inc
nop
iret
aas
pusha
xor
sbb
xchg
jmp
push
cld
jge
lods
cmc
stc
fstpt
or
add
add
add
pushf
mov
mov
sbb
and
shl
push
imul
push
adc
out
idivb
test
xor
into
movsb
das
xchg
or
cmp
ds
fmull
jo
dec
or
enter
cmp
in
jp
mov
jns
mov
je
pop
pop
bound
push
pop
jge
cmpsb
xchg
ja
fcmovnu
cmp
hlt
xor
ds
adc
adc
xchg
js
xchg
popa
rcr
sub
and
imul
insb
cld
push
jb
jae
jae
jecxz
xor
xchg
hlt
inc
aam
or
lahf
inc
outsl
in
xor
icebp
sti
iret
pop
pop
jno
pop
stc
push
sar
mov
gs
dec
cmc
jge
clc
add
push
frstor
push
xchg
mov
mov
dec
mov
mov
fstps
ljmp
leave
insb
jmp
movsb
gs
mov
mov
cs
pop
fwait
notl
mov
std
cwtl
rolb
aam
mov
in
or
mov
or
add
xor
add
stc
adc
lods
leave
add
push
scas
jecxz
insb
add
xor
pop
loop
and
addr16
fmuls
mov
cli
hlt
mov
cs
jae
dec
jp
jo
arpl
cmp
insb
rol
fisubs
ret
push
test
fwait
dec
outsl
pushf
js
subb
aam
push
mov
mov
pop
in
mov
jne
je
cmp
lds
fs
popa
push
dec
cmp
mov
mov
inc
cltd
cmp
xchg
push
jg
push
aaa
mov
jp
notb
sahf
cmc
test
ficoms
inc
adc
xchg
loopne
dec
xchg
xor
push
into
imul
sbb
dec
xchg
imul
ss
push
lock
sbb
mov
cs
cmc
fdivs
cwtl
adc
jb
pushf
mov
out
int
sbb
jo
xor
pop
xchg
and
pop
and
xor
outsb
adc
or
xlat
fisubl
xchg
mov
cmpsl
sub
mov
mov
mov
add
test
cmp
push
scas
insb
mov
add
xchg
and
push
int3
adc
scas
mov
mov
xchg
in
sarl
mov
xchg
add
push
call
jecxz
fbld
pop
xor
mov
add
push
or
aam
dec
jmp
testb
popa
dec
xor
rol
in
les
push
imul
push
jmp
fnstsw
f2xm1
addr16
push
sub
in
dec
cmp
sbb
out
inc
repnz
add
pop
rcll
sbb
push
pop
mov
mov
lds
das
insb
outsb
or
dec
ffree
fdivl
sti
mov
in
sti
cs
cli
push
mov
xor
cmp
sub
leave
jnp
mov
iret
pop
xlat
jo
or
mov
add
in
sbb
mov
xor
push
or
inc
movsl
xchg
stos
les
clc
lahf
sbb
mov
and
test
ret
add
out
arpl
hlt
xchg
mov
jecxz
mov
ret
out
jnp
sbbl
int3
xchg
push
cmpl
add
testl
push
xor
mov
popa
les
lock
jmp
arpl
dec
or
clc
jg
fwait
push
gs
mov
aas
pop
mov
fildl
pop
dec
dec
scas
cld
fptan
addl
rcrl
xor
mov
xchg
ds
dec
mov
dec
in
insb
add
dec
xor
xor
rcll
testl
aas
mov
aas
add
adc
jne
adc
insl
out
push
sub
xor
out
sarl
sub
mov
cmc
arpl
pop
xor
movsl
adc
in
jns
jmp
jo
into
andb
fwait
std
push
push
arpl
fs
sub
push
mov
push
xchg
or
xor
inc
sbb
adc
ljmp
push
or
movsb
push
or
adc
clc
pusha
sahf
mov
jne
shrb
lret
cmpsl
daa
or
loope
incb
lret
sub
xor
dec
int3
aaa
inc
movsb
daa
rol
rclb
das
add
out
gs
pushf
sbb
mov
jnp
jge
in
xchg
and
or
xchg
movsb
sub
add
repnz
insb
es
fwait
mov
inc
fstps
xor
loop
jnp
ss
cmp
jmp
dec
push
test
sub
hlt
dec
pushf
mov
fs
int
mov
and
push
pop
enter
bound
pushf
loopne
inc
dec
xor
cmp
inc
jae
cmp
add
lret
fldenv
jb
mov
xor
mulb
sbb
adc
pusha
mov
jecxz
jnp
clc
and
dec
dec
jg
dec
sahf
test
mov
dec
xchg
leave
in
outsl
pop
jl
pop
fadd
sub
sbb
sbb
fimuls
mov
pop
sub
pop
push
xchg
and
jae
lahf
jmp
movsl
aam
add
out
rol
shl
dec
push
orps
icebp
sbb
cmp
test
shlb
int
mov
sarb
cmp
int3
mov
jp
mov
and
pop
add
or
push
mov
subl
outsb
dec
xlat
sbb
mov
inc
mov
stos
xlat
pop
push
repnz
and
fwait
push
push
sbb
mov
gs
ret
insl
subb
test
iret
movsb
adc
inc
arpl
stos
imul
push
and
mov
cs
dec
mov
ret
out
fsubs
pop
inc
mov
and
pop
rcll
out
and
adc
xchg
imul
add
in
mov
jns
daa
std
out
xchg
jo
cmp
xor
aad
push
xchg
sar
scas
daa
xor
sub
cmp
xor
xchg
push
xchg
rcll
int3
fmuls
pop
mov
pushf
cmp
popf
inc
jb
insb
mov
pop
clc
sbb
add
and
inc
xchg
cmp
add
cli
sub
mov
movsb
lret
mov
mov
dec
pop
mov
or
into
js
cmpsl
clc
mov
shll
xor
cmp
inc
push
stos
or
sub
xor
mov
pusha
pop
jg
jmp
icebp
rcr
xchg
out
add
mov
fdivs
xor
aas
inc
mov
and
sub
es
scas
jge
notl
xchg
push
add
fadds
xor
pushf
shll
lods
fcomps
outsl
test
and
push
cmp
inc
mov
fmul
ds
push
add
xchg
inc
push
mov
fcmove
movsb
xchg
sub
mov
fisttpll
cmp
mov
inc
icebp
cmp
pop
addr16
mov
pop
loop
mov
and
push
lods
rcr
and
inc
out
lock
hlt
cld
in
shr
adc
pop
loopne
adc
mov
loopne
push
xor
in
mov
jg
add
inc
mov
add
loopne
test
fdivl
cmp
inc
inc
inc
les
inc
dec
add
cmp
rcpps
lea
xor
addr16
and
add
push
sub
loopne
xor
add
pop
test
inc
out
gs
gs
pop
int3
fucomp
test
inc
hlt
xor
sbb
xor
cltd
repz
mov
sbb
es
pop
adc
add
jne
rcpps
dec
mov
ds
push
pop
xchg
inc
mov
ljmp
mov
clc
xchg
push
push
rorl
xor
ljmp
out
mov
loope
pop
fwait
out
test
push
loop
and
data16
lret
cmpsl
or
loope
mov
mov
in
in
or
loop
lea
jbe
shll
and
pop
subl
loope
jns
pop
ret
js
js
mov
inc
test
movsb
cmc
gs
cmp
jmp
cmc
mov
rolb
xlat
pop
ret
pop
or
cmp
js
adc
xchg
mov
fcompl
and
inc
adc
lock
sub
dec
data16
cmp
pop
mov
mov
test
jno
jp
iret
mov
cmpsl
or
adc
fistpll
inc
nop
cmp
test
pop
cmp
lahf
pusha
icebp
das
std
cld
xor
fcomps
cmp
pop
mov
cli
cmp
mov
sub
aad
pop
mov
repz
mov
push
aam
fdivrs
data16
add
add
loope
xor
cmpsb
add
xchg
adc
inc
outsb
mov
mov
lds
add
fidivrs
xchg
lods
imul
adc
sub
mov
negl
adc
out
push
fs
jle
dec
or
outsl
sbb
outsb
fs
mov
add
mov
push
dec
inc
das
lcall
mov
rcrb
cmpsl
int3
and
mov
pusha
pop
cmp
sbb
inc
test
adc
jl
icebp
data16
mov
xor
iret
pop
cmc
dec
jno
lcall
sbb
pushw
imul
add
or
dec
cmp
mov
aas
xchg
xchg
xor
mov
popa
int
loope
ficompl
sti
outsl
cltd
test
cmp
ffreep
jmp
insb
setb
fnstsw
das
adc
push
jb
pop
out
add
stos
jmp
mov
aaa
dec
in
es
push
xchg
loop
inc
dec
aas
rolb
add
aas
adc
add
fcmove
imul
incl
int
add
shrl
mov
xor
mov
jge
call
push
inc
cmp
mov
push
jp
push
pop
sbb
pop
daa
jae
fwait
je
out
mov
lret
les
insb
push
rcll
int
dec
test
mov
mov
cmp
add
sbb
jge
ret
into
cli
push
mov
sbb
jle
jb
xchg
ds
aaa
or
push
xchg
out
popf
pop
btrl
or
les
inc
sbb
xor
pop
add
mov
xchg
test
add
ror
mov
test
jge
cmp
add
push
sbb
or
addl
and
insl
adc
pop
movsb
cmp
jp
stos
repnz
ret
xchg
mov
sub
push
dec
cmp
jg
rorb
fmull
outsb
in
mov
lock
movsl
fsubrl
imul
hlt
pcmpeqw
sub
outsb
shrb
jecxz
call
mov
popf
xchg
and
ja
imul
mov
js
sahf
std
shll
enter
repz
mov
jle
sub
xor
xchg
mov
div
adc
movsb
das
cmpsl
arpl
in
xor
jmp
xor
push
mov
pop
sub
pop
ss
lods
pop
ficompl
inc
test
hlt
in
jge
lock
push
loope
movsl
push
aaa
jbe
lahf
pushf
cmpsl
sub
ret
repz
pop
sub
xchg
inc
push
icebp
or
inc
add
cmp
mov
sbb
adc
inc
xlat
jne
andl
call
sub
lea
lods
ja
mov
push
cmp
imul
adc
add
xchg
lods
loop
aas
mov
sub
stos
xor
loop
adc
mov
fcompl
mov
cmpsl
and
inc
xorl
and
push
sbb
or
popa
rcll
adc
ss
shll
mov
lcall
pop
cmp
mov
icebp
cwtl
bnd
mov
inc
test
test
xchg
and
jb
bts
adc
ss
jge
add
jns
inc
daa
stos
sub
or
cmpsl
pop
inc
lret
pop
jnp
addl
lcall
inc
and
sub
cltd
in
add
pop
inc
clc
pop
xchg
in
add
icebp
jbe
pop
fisubrs
data16
lock
cmp
dec
xchg
push
mov
popf
mov
sub
hlt
ficoml
sbbb
negl
fldcw
pop
insl
cmp
popa
movl
imul
gs
test
jecxz
enter
ret
jno
shlb
jno,pt
push
sub
pop
lret
mov
push
and
mov
loopne,pn
inc
imul
jmp
jo
jp
or
rcl
add
mov
sbbb
sub
ucomiss
jecxz
cmp
mov
dec
cmp
js
sbb
mov
rol
dec
or
add
lret
mov
xchg
push
fs
xlat
and
std
mov
bound
repnz
pop
cmp
xchg
fs
fisttps
aaa
pop
fcmovne
sbb
es
popf
cmp
lods
xchg
call
mov
cmpsb
pop
mov
inc
sbb
mov
in
imul
fwait
or
mov
test
jmp
jmp
insb
cltd
rcll
movsb
cmp
pop
and
jne
or
movsl
icebp
icebp
xchg
rcrb
movsb
cmp
fadds
sbb
pop
xchg
cmp
cs
sti
gs
or
xorl
mov
push
shl
xor
or
mov
outsl
sbb
popa
inc
lahf
or
stc
sub
je
test
xor
fisubrl
lds
or
xchg
scas
leave
and
clc
loope
filds
pop
pushf
jp
cmp
push
sub
out
jne
fidivl
sbb
xor
add
mov
dec
xchg
scas
leave
cmp
jle
and
sub
push
xchg
mov
pop
jae
stc
std
outsb
dec
out
push
dec
and
lds
aaa
ror
lahf
cmc
in
jecxz
push
xchg
repnz
sub
aaa
push
insb
inc
std
mov
popf
sbb
cmp
inc
les
and
pushf
les
pop
pop
aad
rcrl
sbb
inc
xor
outsb
andb
xorl
push
xchg
fmull
test
mov
cli
cmp
xchg
cwtl
adc
inc
pop
sar
dec
add
into
and
cli
sbb
dec
into
movsb
in
inc
loope
sbb
stos
mov
add
pop
std
fcomi
cmp
add
inc
call
xor
lret
xor
rcrb
clc
imul
ret
or
push
cmpsl
ljmp
stos
xchg
out
idivl
dec
xor
xchg
adc
push
and
ret
mov
pop
pop
scas
ja
stos
test
clc
das
add
aaa
outsb
movsb
adc
popa
sti
sti
call
sti
push
mulb
lahf
test
add
insl
sahf
lahf
mov
dec
pusha
xorb
inc
test
inc
xlat
jmp
loop
mov
and
jno
xor
push
fstpt
stos
iret
mov
mov
sti
addr16
add
sub
inc
mov
xchg
inc
or
jnp
ret
jp,pn
mov
aad
sbb
adc
mov
rcrl
inc
cmp
hlt
xchg
sahf
and
xor
mov
add
addl
sub
idivb
pop
cmp
jge
gs
fwait
in
out
adc
push
cli
cld
aad
push
int3
aaa
xchg
jo
in
out
roll
inc
pop
dec
push
pop
pop
lock
push
mov
shll
jo
push
test
pop
mov
ret
leave
mov
mov
xchg
inc
shr
jbe
stos
sbb
lea
fisubrs
cld
dec
or
mov
lock
mov
and
popa
ljmp
mov
pop
adc
adc
shrb
or
dec
and
mov
or
pushf
push
mov
push
xor
sbb
add
adc
lods
lds
or
and
aas
lods
jg
popa
sub
into
jb
sub
out
mov
cmp
push
movsb
fists
mov
and
das
cmp
imul
mov
bound
sarb
xor
sub
out
cmp
stos
repnz
add
leave
add
inc
adc
xor
add
sub
and
pop
xor
test
and
aaa
popa
pop
dec
pop
lret
cmp
lock
inc
push
ret
add
push
aas
xchg
xor
jp
cmp
cmc
push
pop
sub
rcrl
lcall
mov
jecxz
xlat
pop
outsl
shrl
pop
mov
adc
dec
pop
lods
pop
leave
sahf
mov
add
addl
jne
xor
push
add
loopne
inc
and
divl
bnd
dec
cs
ja
push
into
pop
shll
sub
push
dec
rclb
leave
jb
xor
xchg
lds
jge
xor
loope
dec
xchg
xchg
rcll
nop
rorl
mov
jns
cli
repz
jbe
insl
decl
jg
repz
sbb
jmp
push
jg
dec
filds
cli
cwtl
push
insb
push
insl
out
mov
mov
aad
sub
pop
arpl
into
shl
pop
adc
int
xor
iret
mov
loope
sub
dec
pop
push
xor
dec
sub
popa
pop
adc
push
pop
out
sub
adc
mov
pushf
cli
xchg
popa
xchg
adc
cld
bound
popa
jge
cmp
adc
and
test
dec
sub
add
xchg
inc
dec
dec
jns
js
sahf
fwait
xchg
fwait
jnp
jg
scas
leave
mov
xchg
ror
mov
cpuid
cmp
inc
nop
pop
data16
sahf
adc
inc
sti
adc
cs
xor
push
hlt
lret
imul
loopne
jne
jo
inc
enter
fdivrl
mov
pushf
test
xchg
or
mov
pop
jecxz
scas
xchg
add
sub
cmc
popf
ja
cmp
dec
imul
push
jns
inc
shlb
or
mov
jne
push
adc
push
lds
loopne
add
xor
pushf
xchg
or
fisttpll
js
imull
into
pop
adc
ret
push
mov
and
fcmovnu
test
in
jo
sbb
aas
mov
adc
jl
ss
mov
aas
or
inc
popa
movsl
lahf
or
cmc
add
jmp
loope
pop
cmp
push
push
pushl
or
int3
inc
pop
mov
xor
push
ret
xor
lret
cs
leave
pop
fs
and
mov
je
add
aas
inc
mov
imul
cwtl
aas
inc
fcomp
cmp
add
and
flds
lahf
shrl
pushf
sbb
lds
jecxz
fstpt
loop
rorb
mov
adc
dec
xchg
mov
push
jmp
iret
ret
jb
fmulp
hlt
pop
mov
adc
add
in
ret
daa
lret
pop
sub
pop
int
sbb
nop
rcrl
int3
mov
adc
iret
cmp
movsb
les
mov
add
scas
adc
imull
adc
aas
mov
mov
mull
xchg
mov
mov
test
cld
pop
inc
and
outsb
sbb
xor
pop
cld
jne
mov
popa
pop
sub
sub
add
mov
jl
inc
or
pop
or
jge
cmpsl
mov
adc
fisttpll
pop
out
cmp
mov
cltd
sbb
add
sub
pop
test
pop
frstor
inc
pop
loopne
aad
ja
fsts
ljmp
fwait
cltd
jmp
mov
push
cmp
or
and
push
in
out
push
xchg
xchg
dec
lcall
xchg
add
sbb
lea
xchg
pop
dec
inc
jno
xor
lcall
in
pop
xor
shrl
outsl
test
pop
adc
jnp
push
xor
cltd
scas
sti
push
xchg
mov
lds
lods
stos
add
xchg
movsl
bound
jle
enter
test
dec
and
fnsave
movsl
mov
dec
sbb
sbb
mov
and
stc
lods
stos
xchg
dec
mov
test
pop
mov
outsb
ret
std
je
call
pusha
enter
xor
stc
mov
cmp
pop
mov
xchg
inc
add
call
adc
arpl
fs
dec
inc
or
lods
sbb
je
xchg
lea
mov
lea
jae
inc
lds
test
mov
mov
cs
mov
stos
adc
push
push
sub
inc
je
ds
mov
mov
sub
in
mov
cwtl
int3
popf
insl
lods
mov
jo
xor
dec
mov
sbb
negb
xchg
icebp
popa
xorb
mov
push
dec
pop
adc
rolb
xchg
xchg
ret
mov
mov
dec
pop
adc
clc
mov
cmp
insl
ror
rorb
pop
data16
push
out
mov
lds
insl
push
fildl
xchg
ret
pop
nop
xchg
filds
xor
cmp
int
sbb
imul
or
lods
inc
cwtl
inc
nop
dec
xlat
push
xchg
fisttpll
jnp
push
ret
imul
or
lahf
lret
push
js
mov
push
sbb
xor
outsl
mov
cmp
xchg
ja
sbb
ja
push
jp
push
xchg
cmp
dec
mov
cli
icebp
pop
adcl
xchg
dec
in
adc
pop
xor
pop
mov
in
adc
mov
mov
repz
dec
fcomp
cs
inc
jns
std
xchg
popf
push
jnp
shll
pop
mov
imul
pop
loope
pop
arpl
cmp
divl
pop
cli
cmpsl
jnp
sbbb
outsl
call
ljmp
gs
inc
sahf
or
out
add
adc
stos
add
sbb
mov
daa
xchg
lret
ds
mov
scas
out
lcall
adc
fidivl
into
pop
daa
push
nop
sub
jl
aam
jp
dec
jns
mov
fldenv
dec
inc
adc
mov
mov
enter
sti
notb
insb
std
sti
xor
mov
mov
pusha
js
xchg
aad
movb
adcl
cmp
movhps
jp
movsl
lahf
cmp
pop
jmp
xlat
xchg
mov
xor
cmp
and
push
xor
and
dec
pop
repnz
fcmovnb
jnp
mov
fmull
test
popa
rcll
stc
clc
xchg
pop
imul
dec
popa
je
jl
xchg
aam
rcll
push
pusha
xor
ret
jns
sbb
mov
adc
movsb
movsb
loop
adc
sub
jp
lret
iret
jns
inc
jo
sub
or
addl
cld
outsl
outsb
insl
ljmp
mov
adc
out
daa
lret
out
scas
dec
xor
scas
inc
fldpi
aad
repnz
mov
mov
push
aaa
mov
call
pop
dec
jg
jle
movl
into
inc
mov
cmc
jno
jnp
jno
dec
jno
gs
push
shll
sub
bound
lods
ja
jnp
mov
xchg
dec
ds
dec
js
dec
into
imull
hlt
sbb
xlat
mov
push
pop
fstps
fiaddl
cmp
iret
je
movl
in
pop
mov
mov
cld
scas
call
fistl
clts
add
arpl
sub
in
xor
gs
das
fdivr
push
mul
mov
shll
jo
ret
mov
outsl
nop
or
ror
inc
punpckldq
or
or
mov
cwtl
push
stos
clc
pushf
xchg
jo
push
dec
mov
dec
sub
bound
mov
test
xchg
sbb
arpl
sbb
jne
cltd
fs
test
jo
pop
cmc
add
aaa
lock
fs
jns
pop
ret
jae
outsb
cmp
push
bnd
movsl
push
sahf
repnz
bound
push
mov
jp
daa
mov
out
ss
jnp
lcall
jb
sbb
add
int
clc
ljmp
push
insb
movl
and
shl
dec
adc
jno
cmp
popf
xlat
in
aam
icebp
and
jle
jmp
dec
cmpsl
cltd
push
in
xchg
repnz
mov
adc
push
mov
popa
cmp
cmp
sti
push
inc
cltd
sarl
jae
pop
mov
push
add
cmp
or
mov
out
ret
stos
data16
mov
lret
les
loopne
lahf
adc
inc
jnp
icebp
gs
push
sbb
jg
ja
outsl
arpl
sbb
adc
insl
stos
mov
xchg
ret
pushf
jg
or
jns
jmp
sti
jg
pusha
mov
pop
or
ret
notl
and
cmp
insl
or
es
add
out
or
jmp
or
pop
stc
lcall
sbb
repnz
xorb
mov
mov
cmp
lcall
popf
lods
rcl
les
clc
jns
subb
xchg
fwait
mov
dec
jle
jns
int
cwtl
push
fisttpll
sbb
xchg
or
sub
pop
aaa
ja
mov
jge
cmp
jo
xchg
clc
call
jg
dec
mov
popa
pushf
add
popf
arpl
push
fdiv
enter
ret
leave
push
jno
push
sub
sbbb
cmp
adc
jno
add
cmp
cmp
xchg
mov
adc
mov
pop
dec
mov
pop
fcompl
add
fsubrs
clc
ljmp
sub
xor
pop
sbb
sub
mov
lret
or
add
cld
sbb
call
daa
jb
xor
sbb
pop
or
test
xor
and
push
sbb
dec
cmp
scas
inc
data16
lods
push
rolb
cmc
out
in
jg
mov
rcr
ss
xor
jge
or
mov
shl
push
test
mov
je
or
sub
mov
and
in
or
hlt
in
xor
ficoms
xor
fsubrl
xchg
xchg
push
pop
sub
icebp
mov
fdivr
shlb
push
and
inc
fnstenv
je
add
enter
imul
adc
dec
testb
fistpl
adc
popf
pop
stos
scas
cmp
and
jg
inc
and
xchg
scas
pop
and
xor
cwtl
cwtl
push
inc
je
sti
movsw
dec
pop
inc
cmp
cmp
mov
sahf
stc
dec
fwait
add
lret
pop
call
cmp
leave
mov
dec
repnz
or
push
adcb
ret
mov
std
jmp
cmc
xchg
push
into
std
lret
pop
jl
sbb
adc
fidivl
int
adcb
ret
dec
or
and
push
sbb
popf
out
adcl
cmc
into
mov
cmpsl
pushl
adc
mov
and
loope
fimuls
ja
enter
ss
int
push
pop
jae
jecxz
shl
jle
movsb
lcall
lcall
in
push
mov
sbb
jmp
jb
int3
add
mov
cmc
loop
push
stc
push
adc
cmp
jb
ss
test
push
addr16
push
sbb
test
lahf
xchg
cli
outsl
push
loop
mov
nop
rorl
jecxz
dec
or
hlt
popf
test
orl
sahf
push
mul
xor
push
inc
xor
or
std
or
outsb
fisubs
mov
push
test
sub
fisttpll
jp
test
aad
push
int
stc
and
sub
fstps
jno
lods
pop
dec
push
pop
mov
jle
cmp
add
push
push
popa
mov
push
push
and
cmp
xor
out
jbe
jecxz
xchg
mov
or
mov
imul
cwtl
xlat
cmp
les
push
cmp
adc
cmp
fildll
cltd
jg
scas
push
rcll
icebp
loope
jns,pt
popa
inc
pop
pop
fsubrl
js
lahf
add
cmpsl
fidivrs
jg
xchg
cs
insl
xor
cld
fldenv
sarl
pop
cmp
sub
jo
cld
aam
shll
js
lret
sbb
fimull
pop
pop
push
adc
lret
add
out
sbb
push
mov
push
sbb
xor
cmp
pushf
jecxz
aad
test
fs
push
inc
lock
adcl
test
cmp
jbe
rorl
lea
cli
sub
and
dec
sub
jmp
sbb
fcmove
xor
call
pop
xchg
ficoms
and
lahf
inc
push
fidivrl
in
adc
sahf
repz
mov
outsb
add
movsb
jmp
fs
negb
pop
adc
out
dec
repz
xlat
mov
mov
xor
jb
jecxz
inc
mov
dec
mov
aam
and
mov
sub
mov
ret
or
roll
add
and
jns
repz
sub
xchg
xchg
jp
xchg
pop
inc
fucomip
dec
inc
in
pop
je
rorl
repz
xchg
pushf
movsl
outsb
inc
push
fimull
aas
sbb
pop
je
aas
popf
sub
mov
ss
out
fbld
and
shll
mov
lock
pop
add
push
mov
bsr
xchg
jne
add
xchg
pop
jecxz
jl
shrb
incl
add
outsl
sar
adc
and
mov
sub
out
mov
shll
imul
ljmp
adcb
fwait
jmp
fisttpll
mov
push
pop
fcomps
jle
notl
pop
pop
fwait
insl
xor
jg
aad
into
mov
dec
fists
jnp
cmp
and
inc
pop
clc
xor
bound
js
mov
aad
push
bound
cmp
push
jg
add
pop
lcall
mov
jmp
nop
add
sub
and
push
aaa
std
scas
lods
dec
add
ss
inc
aad
mov
data16
pop
sub
xor
cmp
andl
test
imul
sub
push
xlat
aaa
push
cli
mov
in
mov
gs
xchg
das
push
fwait
xchg
push
sbb
stc
fucomi
xor
lahf
jmp
dec
push
lahf
rcll
pop
adcb
push
das
insb
das
inc
mov
lods
out
mov
cwtl
outsl
adc
sbb
pop
add
or
rcrl
loopne
bound
pop
xor
pop
xchg
testl
inc
jno
shl
inc
add
inc
pop
or
mov
imul
mov
mov
fisubrl
pop
push
jo
add
xor
sbb
mov
stos
sbb
jbe
lret
sub
xchg
mov
test
test
cmpsb
fs
in
cmp
pop
stc
mov
aam
mov
and
int3
aaa
pop
stc
insb
jg
shrl
loopne
ja
leave
arpl
cltd
fisttps
add
fbstp
inc
sahf
mov
fcmovnbe
insb
popa
and
cmp
inc
pop
sbb
inc
sbb
jno
sub
xchg
add
pop
rcll
outsb
jno
es
shrb
test
cmc
xchg
adc
add
incl
or
sub
jge
icebp
clc
push
sub
sub
pop
lods
xchg
stos
inc
dec
jo
cmp
frstor
push
push
xlat
pop
adc
add
dec
mov
mov
dec
in
dec
adc
mov
add
xchg
outsl
cltd
inc
out
in
xor
je
repnz
popa
ss
stos
mov
sti
push
mov
cmpsl
inc
cmp
pop
add
push
jp
subl
sbb
aaa
adc
cmpsb
sbb
ret
insb
sarb
or
push
jns
addr16
sbbb
add
enter
fcmovnb
shll
lea
xor
sbbb
and
scas
out
cmc
adc
les
leave
scas
icebp
mov
bound
ss
lcall
call
and
jnp
jne
cmpsb
push
cmpsl
push
xor
mov
xchg
cmp
inc
rcrb
jecxz
sti
insb
cmp
pop
pop
sbb
fisttpll
inc
loopne
adc
lcall
pop
mov
mov
stc
ret
or
sbb
xchg
insl
test
sbb
xchg
push
js
sbb
adc
aad
mov
cmpl
xchg
mov
ficomps
movsb
or
stos
stos
adc
mov
es
pop
fwait
cmp
dec
lds
sbb
fistpll
pop
stos
jmp
ret
push
in
cmpsl
mov
push
inc
add
test
and
jns
mov
mov
and
pop
pop
mov
dec
loopne
test
xchg
lock
push
les
cli
loop
mov
push
jno
mov
xchg
or
mov
scas
lds
fs
pop
xchg
daa
and
mov
sahf
stos
adc
mov
lcall
roll
stc
divl
iret
mov
data16
dec
jecxz
xor
xor
mov
insb
xor
stos
dec
jge
sarb
jne
out
mov
sub
dec
filds
mov
cwtl
xor
add
cltd
jb
jmp
xor
adc
pop
enter
mov
or
imul
push
mov
cmpsb
jp
inc
sub
and
pushf
lods
sub
xchg
dec
popl
and
lcall
mov
icebp
jle
pushf
xchg
das
mov
mov
test
insl
push
dec
jo
sbb
fistpll
inc
movsl
jmp
les
inc
call
lret
sub
loope
add
push
pop
mov
xor
lea
jns
test
iret
and
push
clc
add
mov
xor
pushf
push
out
xchg
push
xor
pop
ss
int3
or
daa
aam
ud1
add
jns
mov
imul
jno
je
dec
rcr
push
push
sub
sub
loope
cld
sbb
in
into
hlt
push
jno
pop
in
sub
mov
mov
fcoml
xchg
or
dec
jecxz
mov
aam
shlb
or
imulb
mov
mov
js
xor
pusha
enter
adc
js
in
or
cld
into
sub
cmp
xlat
in
cmc
outsb
mov
cmc
and
cwtl
lods
sti
repz
jne
jns
into
inc
sahf
or
mov
cmp
addr16
push
cltd
sti
fs
mov
mov
mov
lods
out
add
cwtl
cmp
add
arpl
jae
inc
cmc
sub
push
pop
cmpsl
sbbl
and
ret
jmp
push
jbe
pop
xchg
sbb
insb
sub
pop
pusha
or
add
outsl
ret
repz
adc
shlb
mov
xlat
aam
stc
rolb
push
mov
insl
sub
xlat
les
aam
hlt
sub
push
xchg
mov
ret
jle
and
pusha
mov
dec
imul
sbb
sbb
mov
movsl
mov
cs
cmpb
jbe
mov
dec
dec
push
out
les
add
movsb
enter
int
into
cmp
lods
testb
test
insl
nop
int3
xchg
sub
stos
inc
in
jl
imul
jae
sub
push
ret
push
jmp
out
bound
mov
pop
xchg
scas
aad
icebp
dec
js
mov
clc
aas
inc
sbb
pop
movb
xlat
pop
loopne
pusha
inc
insl
xor
push
je
jnp
mov
imul
pop
repz
sub
push
imul
xchg
or
push
adc
rcr
and
and
test
cmp
popa
fldenv
outsb
add
iret
push
jmp
into
ret
mov
mov
add
roll
sbb
test
data16
adc
xchg
cmp
pop
mov
xorl
daa
or
mov
dec
cmp
cmp
orb
pushf
push
mov
or
lcall
pushf
add
not
push
jp
call
out
xor
xchg
sahf
cwtl
pop
add
mov
xchg
repnz
xchg
sti
call
dec
cmp
cmp
mov
mov
rcrl
rolb
in
lods
fbld
sub
push
shr
push
ljmp
popa
fildl
lock
hlt
fdivs
mov
jecxz
push
sbbb
leave
mov
pop
ljmp
stc
and
pusha
sbb
sub
xlat
idiv
inc
in
lea
sbb
cmp
das
lods
jae
pushf
cltd
xchg
mov
sbb
scas
dec
lods
mov
aad
xchg
mov
scas
cli
xchg
jae
sbb
insl
std
stos
popa
inc
je
prefetchwt1
gs
shlb
lea
out
jbe
addl
xor
add
cmc
testl
jge
xchg
fs
xchg
dec
mov
out
mov
xchg
inc
std
add
into
addr16
mov
stc
ds
add
test
lea
push
mov
mov
movsb
shll
das
sbb
arpl
dec
push
mov
inc
popa
imul
inc
cmp
fiadds
cmp
cmp
call
sub
or
out
div
nop
mov
mov
xchg
push
inc
add
lret
jnp
call
fdivs
push
in
ret
arpl
jnp
test
jmp
xchg
mov
pop
movsl
mov
add
inc
pop
push
adc
movsb
xor
out
addb
xor
push
fisttpl
addr16
jno
pop
push
inc
and
cmpsb
inc
and
in
cmp
mov
out
ljmp
sub
mov
mov
pop
adc
jmp
rcr
add
dec
pushf
mov
jmp
les
cmp
jge
rcrb
rol
and
out
mov
fildl
pop
sub
xor
aam
lods
sbb
dec
jge
lret
fdivr
cmp
add
xlat
iret
fdivr
addr16
popa
mov
push
mov
orl
ret
lods
mov
sbbl
sbb
push
fsubs
lods
std
aas
fwait
roll
xchg
cwtl
or
lock
push
sub
dec
cmpsl
bound
leave
daa
fildll
orl
jae
cli
faddl
ja
xchg
adc
std
arpl
ja
cmp
inc
call
repnz
lds
out
xor
inc
lods
jo
mov
xchg
push
push
andl
cmp
mov
gs
fstps
xor
mov
enter
js
dec
fists
push
addr16
pop
stos
cwtl
sbb
cmp
mov
sub
or
pop
out
mov
in
ljmp
mov
aad
push
xchg
pop
seto
es
pop
adc
mov
dec
out
sbb
push
mov
loope
ljmp
and
jmp
mov
mov
jne
insl
loopne
mov
rorl
mov
add
xchg
ljmp
add
jnp
push
mov
adc
dec
fwait
ja
or
scas
mov
pop
ss
sub
in
ficompl
data16
movswl
mov
jb
mov
adc
and
subl
mov
ljmp
loopne
jno
hlt
jg
jge
lds
dec
fwait
mov
inc
push
inc
jns
popf
xor
add
pop
fiadds
mov
mov
iret
sarl
mov
add
out
cmpsl
cmp
cmp
je
inc
cmp
cmpsb
insb
mov
insb
cmpsl
adc
xor
jb
inc
stos
test
pushf
pop
andl
iret
mov
mov
mov
sbb
lret
push
add
adc
dec
jg
jge
mov
cmpsb
push
push
push
mov
enter
mov
ds
cmpsb
add
xchg
add
mov
movsl
mov
lret
xchg
mov
outsb
push
adc
fwait
and
es
jbe
bnd
cmc
pop
mov
scas
roll
dec
push
out
lods
pushf
mov
outsb
push
sbb
xor
xor
dec
xor
xchg
imul
arpl
pop
push
aam
fwait
inc
lea
cmpsb
mov
mov
es
mov
lret
adc
aad
jg
push
arpl
int3
adc
add
add
decb
cmpsl
dec
dec
pop
and
test
hlt
and
arpl
adc
shlb
jb
add
cmp
add
jge
mov
pop
lods
aam
das
clc
popl
mov
sbb
enter
int3
lahf
aam
xchg
push
mov
xor
lret
loopne
pop
jb
dec
movsb
jno
sbb
inc
ja
lds
sub
cmp
fildll
xchg
stos
inc
mov
mov
pop
icebp
lahf
cmpsl
or
cmpsb
aam
sbb
ss
add
xchg
fidivl
push
mov
out
hlt
scas
imul
jo,pn
imulb
mov
out
mov
jo
push
dec
add
lods
push
cs
inc
push
test
adc
pop
jp,pn
xchg
mov
cmpsl
cltd
stc
xchg
je
xchg
cwtl
cmp
iret
push
cmp
nop
add
sub
xlat
sub
dec
imul
stos
cld
mov
mov
cli
inc
out
stc
repz
dec
mov
mov
outsb
adcl
enter
and
sub
sbb
mov
int3
mov
jnp
mov
js
fadds
outsb
lret
aam
and
int3
cltd
xchg
mov
and
cmc
jne
cli
sbb
out
roll
cmp
out
pop
cmp
jecxz
arpl
js
xchg
aas
cmpsb
cmp
sbb
ljmp
int3
pop
add
or
enter
cmp
jno
outsb
test
ljmp
or
pop
pop
or
cmp
and
mov
les
and
mov
adc
inc
add
mov
repnz
and
push
shlb
sub
iret
scas
ja
mov
pop
rorb
mov
outsl
in
cmpsb
xor
and
dec
mov
test
pop
cmp
lock
push
xor
adc
cmp
pop
push
pop
jmp
mov
pop
aas
ficompl
jnp
in
xchg
outsb
sarb
dec
adc
and
xor
cmp
loop
and
mov
pop
outsb
xor
out
cmp
lcall
push
push
popa
push
jg,pn
push
ljmp
sahf
sbb
cmpl
mov
sub
push
xchg
pop
aad
add
pop
icebp
repnz
xchg
xchg
fs
jo
adc
push
clc
jecxz
bsf
push
adc
or
mov
push
fs
cmp
pop
in
stos
icebp
dec
fwait
outsb
icebp
imul
inc
xchg
jne
and
ret
mov
sbb
lahf
fnstcw
xor
int3
paddsw
loope
jge
cmp
mov
pop
dec
add
lods
jg
add
push
jne
jae,pt
repz
sbb
imul
outsb
orl
mov
cmpsb
sti
jno
add
iret
mov
popa
jb
mov
pop
arpl
in
lahf
mov
mov
lods
sbb
lock
je
cld
stos
outsl
insl
sub
jb
scas
jb
test
lea
out
imul
pop
fadd
xor
test
cmp
mov
push
pop
mul
jmp
decb
mov
xor
inc
int
mov
ljmp
mov
scas
cli
pusha
sbb
ljmp
or
sub
push
movsb
inc
mov
or
mov
arpl
fmulp
cli
mov
popa
notb
stos
sbb
ljmp
out
fstpl
ds
jne
xchg
xchg
push
sub
stc
out
xchg
cmp
sbb
movsb
lods
push
les
test
cwtl
inc
adc
mov
enter
es
mov
inc
xor
push
cmpsb
xor
js
les
inc
add
jle
jecxz
cmpsb
dec
sbb
sub
hlt
sti
add
cld
inc
test
stos
mov
pop
mov
fnstenv
hlt
xor
adc
push
jns
sbb
and
and
add
in
pushf
inc
add
fcoms
push
mov
mov
push
sub
mov
adc
je
sbb
push
cltd
es
mov
insl
adc
cmp
mov
enter
jno
jno
jmp
jle
adc
outsl
dec
gs
dec
scas
outsb
pop
mov
dec
stos
out
iret
add
mov
sub
cmp
xchg
lret
push
pop
rclb
cmp
scas
scas
sub
inc
pop
call
lcall
xchg
push
cld
lcall
imul
jmp
and
xor
jle
gs
shlb
js
divl
pop
mov
xchg
iret
sbbb
rcll
xor
pop
dec
call
das
lods
mov
sti
dec
stos
loope
xlat
enter
aad
das
jbe
std
das
adc
dec
and
sub
clc
mov
movsb
in
icebp
xor
sbb
lods
inc
mov
cmc
add
sbb
push
pop
scas
jecxz
jb
imul
mov
call
push
fstpl
fwait
xchg
bnd
ja
and
lcall
jns
jl
outsb
sarl
push
and
push
fstps
les
sti
xor
xchg
sbb
jmp
rclb
pushl
adc
mov
idivl
movsb
cmp
popa
push
cmpsb
or
lods
imul
cmpsl
aam
jg
mov
inc
pop
adc
mov
xchg
mov
stos
add
outsl
cmpsb
ret
sbb
jle
or
scas
scas
out
pusha
call
insb
shrl
mov
ljmp
mov
fcompl
add
dec
lods
mov
jo
in
out
lds
lret
mov
cmp
pop
out
cmp
adc
test
inc
jnp
pop
add
xchg
inc
jbe
inc
jmp
stos
je
push
xchg
mov
sub
push
pop
into
sbb
into
sbb
lods
scas
outsl
mov
dec
mov
imul
sbb
sub
aaa
and
test
faddp
mov
push
mov
rorl
xor
dec
lods
ja
xor
jae
jne
inc
call
and
add
mov
mov
or
inc
add
xchg
scas
pop
daa
popa
call
sub
and
pop
push
push
mov
mov
cmp
pop
pop
pop
mov
push
dec
mov
inc
daa
dec
in
paddsb
pusha
repz
out
pop
imul
sub
push
fsubrl
cmpsl
or
inc
push
dec
lahf
lret
ret
loop
xchg
outsl
pop
inc
lcall
sub
fstp
lock
dec
xor
pop
dec
cmpsb
pop
popa
das
xchg
fldenv
pop
cs
jnp
movsb
inc
xchg
pop
popa
outsb
sub
pmaxub
outsb
xchg
es
mov
dec
jp
pop
sub
movsl
enter
rcrl
or
push
jp
fdivrs
cmpsl
mov
dec
repz
push
clc
fnsave
jbe
clc
movsb
mov
frstor
rcl
test
xchg
pop
aam
adc
add
mov
add
mov
out
and
lcall
jne
push
and
xor
sbb
fisubrs
into
push
cmpsl
pop
mov
stc
xlat
mov
sub
sbb
loop
in
xchg
test
sbb
lahf
lea
aad
jne
xchg
dec
jmp
lea
push
fldcw
stc
outsl
pusha
sbb
pusha
lea
pop
push
cli
mov
xlat
data16
ljmp
pusha
mov
or
mov
insb
movsl
sbb
out
lds
adc
cmp
sbb
movsl
lods
je
jecxz
les
loopne
cmc
or
in
rorl
sbbb
inc
xor
mov
dec
enter
mov
add
daa
test
mov
jecxz
subl
in
pop
xor
cmp
push
icebp
repnz
cmp
jb
cs
cmp
mov
jecxz
cld
aaa
xor
xchg
cmpsb
aam
fsts
inc
push
inc
jb
movsl
inc
xor
pop
xor
test
test
push
inc
roll
data16
mov
or
sbb
mov
test
cli
sar
adc
adc
adc
fdivp
inc
xchg
stos
in
scas
pop
pop
ret
lds
jno
ja
lds
popf
bound
mov
adc
mov
stos
cld
orl
xchg
repnz
bound
aas
inc
int
sbb
xchg
in
adc
adc
mov
mov
xchg
out
stos
push
sbb
js
jmp
hlt
xor
inc
outsb
mov
ret
loopne
sti
std
and
and
dec
adc
stos
mov
in
leave
jmp
cmp
icebp
xchg
popf
xor
xchg
mov
pop
pop
sub
xchg
out
or
pop
dec
xor
cmp
pusha
jae
xchg
or
test
add
cmp
mov
inc
and
lcall
dec
xchg
inc
out
cmpsb
push
or
daa
mov
mov
lods
push
jns
hlt
jmp
test
shlb
cmp
pop
jns
loop
jp
add
out
addl
sub
jae
push
pop
iret
fsubrp
call
add
cmpsb
mov
andl
xchg
dec
mov
icebp
push
popa
sub
sbb
test
cli
das
scas
int
stos
sub
dec
sub
call
leave
lods
push
jp
icebp
xor
xor
stos
mov
xchg
cmpsb
jl
in
movsb
repnz
push
or
cmc
out
lods
sbb
cltd
push
aaa
imul
mov
sarl
mov
in
push
push
test
ljmp
imul
test
mov
out
xlat
pop
and
in
adc
add
stos
lock
pop
inc
loopew
in
mull
push
jbe
mull
push
push
mov
jmp
mov
cmp
hlt
xchg
xlat
mov
adcl
jne
outsb
or
data16
mov
and
push
out
stc
mov
dec
jnp
lret
mov
mov
xlat
or
and
sub
hlt
pop
push
pop
aaa
xchg
adc
repnz
mov
icebp
popa
fimuls
mov
xor
gs
repz
dec
test
ret
loop
xchg
xor
stos
mov
dec
lret
jo
and
sarl
fimull
orl
jmp
sub
push
and
test
ljmp
mov
jno
sub
scas
inc
cmpsl
mov
loope
mov
cmp
es
mov
sbb
ja
sahf
add
mov
adc
mov
hlt
scas
mov
popf
mov
cmp
jbe
pop
orb
push
push
in
or
mov
dec
push
and
loop
dec
add
clc
cltd
ljmp
or
and
mov
inc
or
clc
sbb
push
outsb
std
andb
inc
sub
lock
icebp
adc
or
in
fs
dec
pop
pop
adc
popa
stc
or
shl
cli
sbb
inc
xor
faddl
in
cmpsl
cmp
push
popa
ds
shrb
and
add
rcrl
or
fdiv
xlat
cltd
pop
outsl
addr16
jle
popa
adc
push
fmull
dec
cwtl
shlb
out
data16
lods
push
and
pop
jmp
cmp
scas
mov
xchg
cmpsb
stos
test
arpl
mov
aaa
sahf
rcl
mov
dec
fadds
mov
test
in
iret
mov
adc
leave
rol
mov
or
jae
cmp
cltd
mov
pushf
je
dec
ret
lcall
dec
mov
xchg
fisubrl
pop
loop
loopne
scas
xor
imul
loopne
cmpsb
mov
xchg
sub
pop
mov
jmp
addr16
sub
mov
mov
stos
cmc
xchg
lret
xchg
add
cld
jle
mov
stos
fs
inc
out
loop
fistpll
pop
push
aas
dec
cmc
mov
lret
jl
dec
pop
jmp
movsl
cmpl
clc
sub
pop
and
vcmpsd
jecxz
pop
or
and
mov
dec
push
fimull
inc
loope
imul
cs
lods
adcb
adcl
mov
dec
cwtl
sahf
or
mov
sub
fistl
rorb
stos
icebp
or
ss
mov
aam
sbb
out
jle
outsl
rorl
mov
fs
nop
push
adc
jno
adc
mov
gs
insl
dec
fs
cmpsl
les
sbb
dec
pusha
mov
ja
scas
loope
int3
subb
jns
rolb
stos
les
and
andl
imul
fnstenv
adc
bound
pop
gs
pop
jo
cmpsl
lret
scas
fistps
lock
ss
loope
in
dec
and
arpl
add
dec
sub
in
inc
pop
xor
jle
fs
cli
pop
imul
mov
aaa
pop
mov
int3
fwait
cwtl
imulb
in
pop
pop
ficoms
or
ljmp
sti
popf
dec
xor
and
mov
ljmp
xchg
inc
sahf
fwait
in
fdivr
add
ja
jne
jp
fistl
jbe
fimull
jns
shrl
xchg
and
mov
push
les
xchg
push
leave
sub
add
call
adc
dec
ja
test
cwtl
dec
clc
lahf
sbb
int
subb
movsb
aam
insl
sub
fbld
mov
xchg
sarl
lret
enter
in
mov
jb
out
jae
je
orb
imul
xlat
nop
jmp
fcmovb
pop
cwtl
add
outsl
xor
jb
daa
pop
mov
cwtl
jno
add
mov
sbb
inc
lods
lea
test
inc
adc
sub
jle
adc
inc
mov
mov
es
push
xor
testl
daa
and
fisttps
pop
mov
loope
mov
sbb
out
subl
mov
inc
clc
lds
jmp
mov
dec
sbbb
dec
addr16
iret
in
mov
sub
jnp
mov
push
aaa
fwait
add
ljmp
fdivs
test
mov
testl
test
mov
mov
adc
mov
hlt
or
push
jmp
test
dec
jne
xchg
imul
mov
in
mov
xor
fsubl
rcll
add
xor
test
cmc
stc
pop
mov
sbb
sahf
imul
xchg
pop
stos
loope
sub
and
cmp
pop
mov
ljmpw
or
or
into
fldenv
dec
adc
daa
js
fistpl
jecxz
push
int
sub
sub
je
lret
inc
mov
cli
int
mov
mov
aaa
add
aam
add
ret
out
sti
or
mov
mov
dec
cwtl
and
jg
jns
mov
fbld
add
cmpb
lods
pop
lahf
insl
arpl
mov
pop
fsts
lahf
icebp
inc
cmp
sub
mov
imul
mov
scas
jnp
fwait
lods
xchg
call
dec
cmp
test
sbb
aas
cmpsb
mov
ficomps
movl
ljmp
adc
adc
inc
xor
pop
push
dec
xchg
sti
add
ss
popa
iret
mov
push
faddl
cli
xor
push
es
cmp
dec
mov
notb
loopne
mov
ss
cmc
js
fidivrl
std
dec
addr16
cli
leave
lea
xchg
dec
lea
js
cli
jecxz
insl
xchg
sub
push
inc
out
cmpsb
dec
mov
std
outsb
jmp
sbb
data16
dec
pushf
xor
sub
push
jecxz
mov
fldenv
repz
and
ds
xlat
fwait
stos
in
mov
ret
or
cmpsb
cmp
jg
rorl
enter
std
std
mov
or
mov
mov
dec
xchg
pop
mov
jmp
hlt
aas
jnp
push
xchg
adc
mov
out
loopne
sub
pop
out
inc
repnz
test
adc
mov
movsb
xlat
mov
inc
or
adc
pop
mov
sbb
jmp
ret
mov
jb
shlb
js
mov
aaa
cmpsl
push
movl
xlat
fcoml
in
les
mov
and
lret
mov
andb
loop
test
xchg
enter
movl
mov
es
inc
popf
cmpb
xchg
into
push
add
xor
data16
mov
ret
sbb
sbb
cmp
dec
mov
mov
sbb
push
cmp
push
mov
mov
sbbb
jmp
in
addr16
push
ret
jle
ret
mov
pop
jbe
loopne
in
mov
inc
fnsave
inc
popf
lret
xlat
and
dec
fldcw
jns
sbb
jmp
mov
xchg
or
gs
push
shl
in
imul
ja
ljmp
mov
mov
mov
fwait
dec
dec
adc
scas
jge
or
xchg
in
test
sub
cmp
mov
fwait
and
lahf
loopne
xor
adc
adc
jbe
call
xchg
jbe
out
jns
xchg
pop
out
inc
jl
das
loopne
sub
add
dec
nop
lds
push
aad
fcomi
jb
sub
dec
rcrb
sbb
stos
mov
movsl
sub
sbb
mov
call
add
loop
xchg
mov
jp
insl
sbb
dec
out
and
in
repz
inc
mov
pop
or
sbb
push
shl
and
call
fcompl
mov
popa
jb
dec
movsb
lret
addb
insb
ret
pop
or
or
sbb
xchg
and
jg
jns
push
iret
xchg
je
repnz
push
out
add
ficoml
movsb
inc
xchg
cmp
xchg
daa
mov
or
push
xchg
or
popf
out
sbb
cmp
adc
pop
jne
in
xor
imul
cld
test
test
mov
pusha
pop
data16
in
cltd
and
dec
jmp
jb,pn
ret
mov
xorl
imull
sub
jbe
jp
and
arpl
mov
inc
cwtl
imul
outsb
daa
sbb
in
out
leave
add
aam
popf
and
push
xor
pop
lret
dec
test
cmpsb
lcall
jge
push
xlat
iret
mov
sbb
and
jge
fwait
cmpsl
add
lods
hlt
std
scas
mov
jns
adc
nop
sahf
iret
pop
sbb
sahf
testb
lcall
or
pushf
cltd
sahf
mov
or
in
pop
jne
jl
mov
or
mov
cmc
sub
add
movsl
cltd
jo
out
sahf
and
mov
ficoms
xchg
arpl
lahf
fcoml
out
mov
sub
mov
cmpsb
jb
loopne
jge
enter
inc
and
inc
movlps
pop
or
push
loopne
popf
inc
mov
push
scas
mov
pop
push
repnz
mov
adc
dec
js
ret
add
lods
insl
fstpl
movsl
ss
push
lahf
add
sar
jb
cmp
pop
cmp
into
jecxz
adc
jle
decb
movsb
sti
stos
add
popa
xchg
push
xlat
inc
lea
clc
sub
add
jno
stc
lret
or
pusha
push
pop
in
pop
test
fildll
jmp
mov
adc
add
mov
mov
mov
lea
andps
cld
xchg
ret
iret
or
stc
pop
daa
adc
mov
pop
add
jbe
scas
xchg
out
sarl
jge
in
push
add
and
aad
push
add
sbb
add
mov
push
xor
loope
lret
mov
mov
test
bound
xchg
mov
sbbl
jo
insb
xchg
out
insb
lods
testl
jbe
das
iret
jo
mov
dec
add
push
or
jge
ficoms
lret
movsl
or
pop
rcll
scas
adcl
fcmovnu
sete
mov
inc
xor
pop
lahf
fdivrs
out
pop
adc
mov
data16
in
out
outsl
stc
or
out
arpl
jnp
pop
cltd
push
lods
push
subl
sarl
shrb
mov
cmp
fbld
in
ss
sarb
jb
push
mov
lods
jp
push
popa
in
push
jb
push
sbb
out
iret
scas
add
cmp
cmpsl
loopne
adc
lods
lea
adc
jmp
inc
push
adc
adc
mov
out
cmp
or
xchg
jbe
fwait
outsl
cmp
ja
int
cli
mov
push
mov
cmp
fidivrs
shrl
xchg
lods
sbb
inc
ljmp
cmp
lods
push
popa
xchg
test
xchg
jno
jp
lret
mov
jb
mov
popf
loope
push
lahf
sub
mov
jae
jge
fs
jl
insb
aam
add
nop
push
jmp
add
imul
aad
jae
and
out
mov
mov
cmp
in
in
pop
aam
ret
sub
in
and
fbld
push
lret
inc
add
in
mov
inc
xor
popf
xchg
jmp
in
and
inc
dec
add
in
into
lock
push
scas
mov
lcall
bound
insl
out
jno
aam
add
pushf
enter
ja
cli
push
inc
mov
sbbl
lret
pop
or
je
xchg
aad
jno
cmp
mov
loop
xlat
shl
jns
adc
sbb
xchg
xor
pop
cmp
sti
cmp
lret
call
cmp
out
jl
mov
push
out
sub
inc
xor
dec
sbb
mov
mov
sub
lock
aad
inc
pop
sbb
nop
jle
shll
repz
rolb
xchg
insb
and
cmp
mov
add
popf
in
dec
push
mov
leave
sbb
in
and
push
or
outsl
ficoml
lret
iret
out
insb
popa
leave
ret
in
cmp
mov
fwait
lahf
cmp
test
scas
repz
and
push
gs
cltd
scas
out
add
sti
lods
xlat
push
sub
jo
pop
mov
aas
sub
popf
les
xor
scas
or
adc
mov
jmp
sbb
xor
sub
hlt
jmp
adc
xchg
inc
shl
mov
sahf
inc
popa
xor
imul
dec
dec
lock
cwtl
sub
repz
push
xor
bound
jne
nop
mov
push
roll
push
test
stos
shll
mov
adc
adc
push
ljmp
cmp
pop
or
cmc
mov
out
xor
test
in
setg
lds
sub
pop
cmp
in
outsl
sbb
notb
fs
xor
mov
sbb
nop
inc
dec
pushf
loop
mov
shrl
fcoms
stos
push
pop
pop
inc
mov
and
mov
sti
dec
out
aas
fwait
gs
icebp
mov
sti
jno
sbb
sbb
mov
pop
enter
iret
out
std
int3
ljmp
jp
sahf
enter
test
dec
imul
sbb
sub
jne
add
pop
cli
stc
push
cmp
jnp
or
jge
lock
push
in
mov
mov
scas
fxch
dec
dec
pop
or
xchg
stos
mov
fcmovb
in
xchg
loopne
pop
cli
lahf
js
iret
mov
add
cld
icebp
loop
pop
push
mov
mov
add
or
xchg
xor
or
cmp
sbb
xor
into
lret
dec
pop
scas
mov
xchg
cld
btr
dec
or
or
cmp
pop
adc
mov
jle
pop
lock
mov
xor
push
pop
fcomp
xor
mov
and
inc
in
lret
sbb
jecxz
pop
andb
popa
sbb
or
push
adc
lea
sub
xor
mov
insb
jge
loop
push
mov
or
jns
push
push
xchg
cltd
push
pop
jns
shr
sarb
mov
xchg
scas
xchg
sti
cmpsl
mov
add
roll
add
dec
xor
xor
popa
push
sub
inc
idivl
popf
dec
adc
aad
pop
movsb
pop
fisttpll
xacquire
test
repz
mov
jge
adc
ja
loop
out
ljmp
cmp
bound
push
aad
push
scas
mov
and
xchg
inc
jns
jg
push
out
jns
imul
arpl
subl
ret
adc
jle
scas
popf
xchg
inc
aas
jle
cmp
ret
pop
adc
push
pop
sarb
in
cmp
jp
jne
xlat
add
sub
fadd
stos
cli
jne
enter
jge
jbe
fsubs
out
pop
cmpsb
ret
repz
leave
xlat
ret
lds
dec
jp
xchg
fcmovne
push
push
jnp
inc
and
in
mov
sub
xlat
jle
je
imul
fs
popa
jmp
sub
loope
push
cwtl
imul
scas
add
mov
dec
daa
orb
out
or
bound
in
mov
inc
cmp
pushf
xchg
test
bnd
push
mov
lds
es
mov
sbb
or
loopne
xchg
add
pop
mov
sub
fmull
arpl
pop
mov
cli
gs
push
mov
or
cmp
cmp
fwait
xchg
stc
jne
cmpsl
cmp
daa
lcall
adc
sub
mov
pushf
jle
add
pushf
or
insb
inc
aad
sbb
popf
sti
xor
sub
xchg
xchg
xchg
mov
mov
sub
loopne
mov
lahf
xor
imul
pop
pop
adc
je
ljmp
mov
add
call
pusha
cwtl
push
cmp
mull
fstpt
outsb
push
test
pusha
lahf
popf
mov
outsl
mov
jmp
or
iret
xor
loopne
nop
inc
stc
ljmp
xchg
push
pushf
je
cmp
daa
out
or
jmp
pop
mov
cwtl
int3
jo
pop
js
xlat
mov
test
out
stos
mov
dec
adc
sbb
nop
xorl
jbe
push
jae
xchg
lea
pop
sbb
sub
cmpsl
xchg
dec
sbb
pop
or
and
and
dec
aad
mov
lock
add
xor
cmc
orl
jecxz
push
cmp
jo
lcall
or
arpl
add
push
les
out
mov
pop
jns
pop
push
jl
insl
scas
out
sbbl
jle
addr16
inc
xorb
std
push
fdivrl
jge
popf
cmpsb
sbb
pop
decb
outsl
sti
xchg
pop
add
xor
data16
std
lahf
test
insl
in
data16
cmp
mov
loopne
mov
or
sbb
mov
pusha
movsl
cmp
and
pop
cmp
pop
cmp
and
pop
dec
enter
cmpsb
ds
test
sub
shlb
inc
and
inc
or
mov
xor
pop
imull
lcall
inc
rcrl
push
cmp
cmp
scas
add
xchg
jg
mov
inc
push
repnz
stc
fwait
sub
push
shrb
inc
xor
dec
ljmp
pop
and
outsb
loope
mov
pop
and
lea
stc
xchg
xchg
jno
inc
inc
add
outsl
rcrb
or
or
lcall
mov
loope
movsl
xchg
js
ljmp
mov
push
jae
jp
js
and
lods
mov
lea
jb
jg
cmp
adc
dec
idiv
inc
dec
fmulp
sbb
popf
jne
or
push
stos
push
in
popf
jo
dec
mov
jnp
mov
pop
ret
stc
push
lock
sub
jg
pop
mov
rcl
fiadds
rolb
sub
cltd
ret
and
push
ret
fistps
aaa
mov
jmp
ja
lret
xor
popf
gs
and
and
imul
ljmp
pop
jno
inc
imul
xchg
and
lods
mov
pop
inc
ss
movsb
mov
pop
sbb
or
cmp
not
inc
in
xchg
xchg
xor
loope
dec
jno
xchg
push
add
xchg
daa
outsl
cmc
test
divb
jl,pt
pop
jecxz
shrb
pusha
jmp
shll
mov
pop
subb
sbb
add
out
push
jge
push
out
jb
aaa
and
sbb
shrl
fs
dec
scas
iret
and
pop
sub
mov
popa
std
mov
pushf
in
mov
sub
int3
icebp
xchg
icebp
imul
clc
jecxz
and
adc
mov
cltd
dec
bound
xor
test
mov
push
addb
mov
jg
mov
icebp
stc
mov
push
decl
stc
mov
cs
pop
sub
xchg
pusha
or
stc
cmc
mov
xchg
cmp
push
test
push
add
mov
nop
out
int
maskmovq
negl
in
pushf
cmp
repz
mov
xor
jb
test
notb
notb
into
lahf
roll
cmp
adc
mov
mov
scas
subb
nop
fneni(8087
push
lcall
add
daa
mov
xchg
es
add
dec
fs
push
les
sbb
repz
inc
je
outsb
mov
inc
inc
sbb
rorl
dec
inc
stc
iret
push
test
mov
jbe
imul
mov
aaa
adc
popa
repnz
xor
es
jle
mov
sbb
xchg
mov
gs
add
mov
jmp
mov
fiaddl
test
and
or
push
mov
mov
fnstsw
fistpll
mov
cld
add
sub
rclb
add
xchg
add
stos
jnp
xor
js
inc
jl
ret
and
cmpb
jb
add
cs
adc
mov
push
sub
jae
outsl
mov
shll
and
and
pushf
scas
mov
jb
repnz
xor
daa
push
stos
cmc
gs
sarb
sbb
cmp
enter
adc
mull
pop
dec
and
inc
cmp
and
cltd
dec
mov
or
mov
add
mov
out
xor
cmc
inc
cmp
rcll
xor
popf
jp
fiaddl
cmp
and
pop
jle
das
cmc
push
test
mov
lds
mov
test
lods
enter
outsl
cmp
test
add
xor
pop
scas
mov
inc
movsb
in
push
push
movsl
push
dec
mov
out
xor
imul
jnp
push
adc
and
outsl
adc
repnz
mov
outsl
dec
sub
aaa
jg
xor
lock
jmp
popf
scas
push
out
and
daa
scas
jae
popa
sbb
into
loop
nop
aam
mov
out
push
mov
xchg
fstp
or
mov
mov
dec
push
jae
mov
xchg
ds
cwtl
arpl
mov
fdivl
dec
mov
inc
lea
adc
xchg
xchg
lods
pop
hlt
sbb
repnz
out
jmp
out
enter
mov
movsww
gs
test
mov
xchg
pop
loopne
jns
loope
sbb
and
adc
ret
popf
cwtl
lahf
int3
rcr
push
stc
shlb
jmp
popl
jecxz
pushf
xchg
or
xor
xchg
popf
jae
cli
jo
dec
lret
fistps
pop
stos
pop
sub
jmp
dec
les
jbe
enter
fwait
lds
and
add
jne
gs
sub
cli
scas
add
mov
pop
bound
movsl
mov
lods
push
hlt
mov
xor
pop
jecxz
aad
jnp
or
mov
cwtl
shlb
imul
data16
mov
in
mov
and
popa
sahf
mov
add
addl
cli
pop
mov
call
cmc
pop
sub
sahf
out
or
push
aam
ror
pop
flds
test
xor
xchg
pop
sbb
jns
cmc
jg
push
mov
fisubrl
sub
jecxz
xor
push
dec
in
push
pop
and
mov
int3
cli
xchg
sbb
jge
cwtl
mov
xor
pop
test
pop
push
or
adc
mov
sub
icebp
into
out
rcrl
jb
test
mov
pop
dec
inc
cltd
mov
jno
rolb
push
push
rcll
iret
xchg
stos
xchg
sub
xor
jmp
repnz
add
pop
sarl
das
pusha
xor
cmp
jg
sub
in
cmp
sahf
pop
ja
pop
mov
lods
mov
adc
loopne
lcall
repz
jmp
fnstcw
jnp
insl
jge
pop
mov
ss
and
popf
push
cld
sbb
dec
mov
pop
gs
mov
sub
sbb
lods
sub
or
adc
aas
ret
in
cltd
xor
cmp
insl
nop
cmp
xchg
jmp
insb
adc
int3
ficompl
sbb
push
mov
lret
jbe
aad
xlat
loopne
pop
lahf
xor
bound
mov
xor
mov
sbb
xor
add
add
in
outsl
sti
lahf
xor
or
call
xor
imul
ja
sub
mov
cli
mov
pop
xchg
sub
dec
pushf
fdivrl
pop
or
mov
add
push
aas
movsl
pop
mov
fsubl
rclb
mov
ljmp
push
out
mov
lcall
mov
dec
test
shlb
dec
js
mov
rolb
movsl
adc
xor
fisubl
movsb
jecxz
or
jno
imul
pop
pop
fstpl
fs
push
xor
mov
dec
pop
push
icebp
xchg
mov
xlat
js
and
add
lods
movsb
push
xchg
and
or
sub
inc
push
jl
xor
hlt
out
leave
or
mov
xchg
mov
pop
dec
in
dec
add
jmp
cld
push
rclb
lods
xchg
jbe
xor
jns
lret
push
out
pop
cmp
into
loope
dec
es
cmc
xchg
mov
mov
or
movsl
or
les
loope
xchg
inc
mov
outsb
sbb
xchg
mov
push
or
mov
pop
sub
rcrb
jnp
adcl
orl
push
ljmp
add
or
data16
lret
jp
fldcw
add
gs
testl
sarl
dec
or
dec
push
mov
pop
pop
mov
scas
rcll
sbb
cmp
xchg
cli
jnp
cli
dec
adc
and
jae
pop
lret
pop
dec
fs
or
mov
dec
hlt
mov
pop
in
xchg
push
fs
mov
dec
adc
test
pop
mov
mov
sub
inc
dec
pop
xor
cmpb
insb
mov
pop
inc
enter
mov
adc
stos
dec
sub
mov
push
out
lods
les
or
mov
xchg
ja
daa
enter
ds
int3
jae
sub
cli
cltd
sarb
adc
test
lahf
flds
mov
fs
xor
or
enter
testb
out
sub
sbbb
js
mov
push
rclb
fmulp
jae
cmc
mov
adc
lods
stos
mov
sub
inc
aam
ret
sub
fwait
push
xor
xchg
enter
in
stos
pop
cwtd
inc
or
fistl
mov
shll
cmp
ja
xlat
push
aam
rcll
testb
push
fsubl
and
ljmp
inc
subb
enter
int
rcrl
loopne
pop
jne
xchg
outsb
push
sti
dec
dec
shrl
jo
es
js
mov
repz
aad
xchg
scas
push
std
add
ja
cmp
mov
adc
pop
and
mov
pop
addl
rcrb
testl
mov
pop
test
sti
fdiv
jno
rorb
mov
lock
aaa
push
fdivr
lahf
xchg
ds
cmp
xchg
es
xchg
inc
xchg
call
xchg
les
push
repz
mov
mov
mov
push
xchg
int
and
xchg
inc
adc
sub
mov
in
sub
dec
push
lea
push
mov
loopne
insl
mov
mov
mov
movsl
fidivs
jae
test
sub
cmp
xchg
hlt
shlb
stos
jmp
dec
stos
imul
or
mov
arpl
and
xchg
sbb
ljmp
or
xor
mov
stos
es
pushf
pop
aaa
or
shlb
rolb
cmp
lcall
repz
lret
push
pusha
pop
shl
ffree
ret
jg
arpl
popa
cli
enter
cmp
psllw
mov
enter
aas
adc
mov
xlat
adc
loop
xchg
or
ljmp
pushf
arpl
aam
adc
adc
dec
sbb
pop
ljmp
leave
mov
js
fprem1
hlt
jge
push
call
or
popf
das
pop
mov
stos
ja
jg
inc
sarl
int
push
pop
cs
into
int
aas
andb
sbb
hlt
aam
inc
pop
in
cmpsl
pop
push
fwait
aam
mov
or
mov
xchg
insb
addr16
push
sub
shlb
inc
jp
shlb
sub
in
or
std
jns
insl
leave
push
fstpt
cltd
pop
andl
outsb
mov
xchg
flds
jbe
or
inc
and
ja
aam
push
pop
jg
sub
mov
sub
fsubr
mov
add
mov
enter
aad
in
push
icebp
insb
bound
inc
out
xor
ret
sti
outsb
jbe
jo
xor
adc
inc
nop
lret
mov
movsb
jge
jl
lret
test
popa
jl
in
inc
xchg
cltd
mov
iret
shll
or
fnsave
mov
pushf
lahf
xlat
jg
repnz
xchg
lea
leave
push
movsl
add
pop
xor
setno
jns
mov
das
adc
jecxz
out
fbld
les
dec
adc
jo
mov
or
push
pusha
xor
imul
pop
add
sub
enter
roll
ja
or
or
addb
sbb
test
xor
rclb
in
xchg
inc
imul
xchg
aas
adc
mov
pop
sti
xor
cmp
jnp
fisttpll
das
int
sub
test
inc
or
push
pop
jae
imul
scas
repnz
dec
jle
push
insb
and
adc
push
ss
aad
xor
cmp
gs
push
and
out
inc
or
pop
mov
adc
add
add
mov
in
jp
outsl
orb
mov
shll
lds
lea
pop
push
pop
aaa
mov
stos
jl
push
inc
mov
dec
mov
xchg
shll
gs
in
int3
dec
and
mov
test
subb
jno
and
push
or
xchg
dec
pop
test
adc
das
and
shll
test
loopne
push
jno
push
sbb
movsb
cld
or
lods
movl
cli
icebp
mov
aaa
pop
push
ja
cmp
xchg
aas
movsl
ja
cmpsl
mov
lret
cmc
push
pop
mov
cmp
mov
sub
pop
outsl
enter
in
cmp
pop
and
xchg
and
cmpsb
cmp
ror
cmp
fs
mov
or
test
stos
enter
xchg
fmull
sub
imul
push
call
pop
rcl
xorl
mov
aaa
sti
inc
jle
inc
test
lcall
stos
adcb
sbb
cmc
and
jne
or
lock
es
add
into
ds
mov
bound
in
add
push
aas
sbb
add
test
sbb
mov
xor
lahf
popa
cli
cmp
test
fimull
aas
xor
insb
sbb
mov
subb
inc
scas
cmp
cs
add
jnp
inc
stc
sbb
jg
lahf
out
je
mov
fidivs
imul
jge
mov
pop
sub
and
test
stos
sub
sub
nop
jno
neg
ds
and
aas
into
arpl
out
add
pop
dec
fdivrl
mov
mov
sbb
pop
push
rorb
cmp
fwait
dec
pop
int3
mov
call
add
repnz
pop
mov
int
mov
push
sarl
fildl
das
cltd
adc
xchg
in
adcl
cmp
test
shr
ffree
inc
jge
sbb
inc
repz
das
push
xchg
adc
cli
jg
push
ret
cmc
fidivrs
xor
and
fadd
mov
adc
or
scas
dec
sbb
jle
inc
mov
pop
jo
repnz
push
and
xor
jle
movsl
sti
rcll
cmp
jl
jmp
pop
ss
xchg
xchg
js
cs
sahf
or
push
sbb
bound
outsl
insl
dec
orl
cmp
outsb
xor
stos
pusha
shl
loope
jne
lcall
sub
sub
jecxz
jge
xor
stos
mov
jecxz
shrb
inc
clc
or
adcl
test
sbb
out
inc
push
aad
and
pop
mov
lea
mov
jmp
or
mov
xchg
pop
cmp
call
cmp
and
popa
mov
dec
cmp
xlat
pusha
test
inc
xor
cmp
lock
mov
outsl
test
inc
fsts
lcall
lcall
sbb
mov
push
imul
mov
mov
add
pop
xor
lcall
mov
popf
aad
cmp
test
adc
sahf
in
negb
xchg
mov
fcomi
jne
cmpsb
or
push
mov
adc
cmp
push
divl
pop
test
add
jl
popa
rcr
ja
lret
mov
mov
jecxz
jno
push
jmp
mov
dec
pushf
popa
incb
add
das
inc
les
mov
sbbl
or
or
dec
mov
or
fwait
bound
test
and
leave
in
add
ljmp
push
push
mov
fists
lods
xor
mov
mov
aaa
xor
mov
dec
stc
mov
lret
jne
fucomp
ret
iret
dec
cmc
mov
adc
and
dec
adc
pop
std
add
pop
rorl
shr
push
es
enter
dec
inc
sub
daa
lret
xor
sti
pop
cmp
fcmovbe
dec
hlt
jno
outsl
sbb
dec
mov
ret
cli
cmp
nop
or
int3
add
pop
in
in
sbb
xchg
add
arpl
pop
rcrl
and
loopne
xchg
cmpsb
add
mov
jno
outsb
out
sbb
sub
cmp
movsb
cltd
int
jg
push
mov
jns
cmpsb
arpl
shlb
je
mov
inc
dec
cltd
insl
xor
dec
mov
xchg
aad
lret
dec
jg
dec
sbb
or
pop
jnp
rclb
clc
in
mov
cmp
int
ret
sub
or
push
cmp
mov
ljmp
push
jmp
mov
test
cld
xorl
dec
popf
cmp
push
sub
mov
sbb
pop
leave
dec
and
dec
test
mov
push
push
push
mov
and
add
testb
ret
pop
test
out
xchg
push
and
push
xchg
lods
loope
mov
add
xchg
addl
xor
push
sbb
jbe
dec
push
es
mov
test
int3
mov
or
ret
adc
movsl
xlat
pushf
jo
mov
inc
sbb
outsl
icebp
sub
ds
rcrl
out
push
mov
jbe
stos
inc
jecxz
stos
dec
jl
sub
jne
pusha
push
cmpsb
adc
sub
rcll
pop
add
jo
addr16
and
or
bnd
ds
stos
mov
push
push
out
inc
scas
imulb
adc
add
andl
mov
mull
loopne
inc
mov
sbb
add
jo
adc
test
loop
lock
xchg
int
add
paddb
in
arpl
jns
inc
jne
int
adc
into
stc
adcl
sub
sub
jne
mov
clc
in
xor
jle
ljmp
pop
dec
aad
lcallw
call
stc
mov
push
je
sbb
push
mov
inc
cmp
cld
or
cmc
test
xor
jb
addr16
in
adc
add
adc
mov
orl
mov
test
jmp
out
jmp
in
pushw
pop
pop
cmp
rorb
inc
loope
jl
int
jle
jnp
jnp
or
adc
js
mov
mov
inc
xchg
mov
xchg
lods
and
dec
adc
pop
movb
js
push
add
int
push
fisubrl
fidivs
mov
shrl
cmp
fwait
mov
pop
loope
push
jnp
mov
xlat
outsb
pextrw
or
pop
jecxz
pop
mov
cwtl
push
sub
adc
hlt
push
dec
and
xor
and
js
jae
push
test
push
dec
in
test
jb
or
cli
je
fcoms
mov
notb
adc
clc
daa
jge
insb
aas
or
scas
lock
loop
popf
pop
or
movsl
mov
mov
add
inc
or
call
pop
and
dec
xor
test
roll
xor
pop
lahf
adc
push
loopne
and
clc
inc
les
push
pushf
push
push
lods
mov
repz
mov
push
and
push
and
jns
leave
xchg
dec
or
lods
mov
mov
mov
push
bound
xor
adc
stos
sbb
jl
xor
xchg
jb
ds
movsb
inc
outsb
insl
test
push
inc
jbe
sub
fucomi
jp
xchg
mov
in
loop
mov
add
or
ljmp
inc
push
fs
repnz
pop
or
xchg
test
rclb
aas
in
mov
mov
inc
mov
push
dec
sub
jl
cmp
mov
or
pop
andb
sbb
stc
dec
scas
scas
or
cwtl
push
mov
pop
cltd
stos
int3
repz
inc
lahf
mov
loop
rolb
cmp
in
insl
push
mov
sarb
cli
xchg
mov
out
and
mov
mov
cmp
pop
push
cli
sub
mov
push
xor
mov
mov
or
dec
and
jmp
and
pop
mov
and
out
lret
test
aad
add
std
movb
pop
es
or
or
sbb
add
bound
inc
sbb
scas
cmpsl
frstor
add
fs
je
pop
jae
cli
pushl
sub
in
stos
xchg
cmpsb
pop
pop
pop
and
add
test
xchg
pop
cmpsb
insb
arpl
lret
fs
call
sub
les
jns
fimull
fs
test
popf
int
decb
push
sub
movsb
popa
adc
test
adc
test
jb
stos
mov
inc
movswl
arpl
xor
clc
in
sbb
pop
adc
fcoms
lods
incl
add
mov
fildl
or
repz
testb
mul
outsl
mov
jge
pusha
add
mov
or
inc
fcmovnb
xchg
aas
scas
mov
fisttpll
sbb
jb
rcll
cmp
outsb
jo
lods
push
insb
fistpl
pop
aad
push
popa
mov
test
dec
fstpt
jge
pop
adc
mov
movsl
jbe
and
call
push
push
and
jns
dec
cmpb
mov
xor
xchg
fnsave
loope
or
hlt
add
int3
cli
and
shrl
movsl
jge
adc
mov
fldl
scas
add
cmp
xor
adc
xchg
dec
or
mov
fmuls
sahf
mov
rorb
push
imul
mov
adc
cmp
inc
imul
inc
xchg
fisttpll
mov
outsl
in
cmp
scas
mov
icebp
cs
jge
ficoml
ret
scas
lds
pop
sbbl
push
loop
dec
sub
push
mov
xchg
or
or
mov
outsl
inc
outsb
add
in
dec
add
ja
xlat
cli
sub
aam
push
leave
lods
and
mov
dec
mov
jmp
std
inc
inc
add
adc
or
mov
aaa
xchg
pushf
push
push
adc
in
push
sbb
and
in
fsts
sub
push
sbb
sub
in
frstpm(287
mov
push
sbb
and
sub
pop
jl
sbb
xchg
dec
sub
mov
fisubrs
mov
push
mov
push
cld
into
adc
mov
movhps
lock
cmp
pop
mov
and
aam
movb
out
movsb
mov
or
fimull
cmp
fdivrl
test
inc
call
pcmpgtw
pushf
outsb
ljmp
sbb
and
push
lods
mov
and
push
adc
lods
pushf
rcll
mov
stos
mov
loop
dec
insb
add
scas
sbb
movsl
xchg
fcmovnbe
ja
xchg
jne
ds
shrl
stos
movsb
insb
jp
int3
aad
push
fsubl
inc
es
xchg
outsl
mov
and
std
adc
push
sbb
sar
push
sbb
cwtl
inc
pop
pop
mov
jge
lods
loop
cmpl
enter
sbb
push
rclb
and
push
fnstsw
lret
test
adc
iret
ljmp
repz
stos
pop
mov
jl
pop
sbb
mov
in
push
or
mov
rcrb
sbb
push
mov
sub
adc
stos
add
mov
imul
pop
cltd
lahf
dec
outsb
jge
test
xchg
adc
lahf
mov
push
ret
mov
test
aaa
pop
xor
inc
dec
pusha
or
clc
dec
in
xor
shrl
dec
inc
ret
sbb
xor
outsb
in
sub
pop
pusha
aad
add
inc
push
xor
or
outsb
out
sbbl
mov
aas
mov
cmc
inc
push
push
flds
adc
mov
mov
inc
jnp
fstp
enter
fbld
mov
cld
out
out
pusha
xor
pop
cli
call
and
jmp
shl
adc
mov
pusha
out
dec
xchg
or
testb
imul
mov
imul
bound
xor
xlat
jle
cmp
mov
rorb
fcoml
scas
loopne
dec
sub
fdivrl
repnz
push
and
push
jnp
ror
stc
cmp
popf
cmp
adc
push
stos
jge
xor
mov
mov
out
popf
mov
cmpsl
stos
shll
xor
dec
mov
js
les
mov
add
dec
test
mov
push
dec
jo
pop
jbe
call
out
mov
fdivrl
lods
mov
int
fistpll
mov
cltd
pop
dec
sub
imul
fldcw
mov
sbb
cltd
pop
dec
out
cli
xchg
orl
aam
fmuls
or
jmp
inc
mov
aam
xchg
mov
lret
adc
into
enter
mov
dec
or
or
push
sub
pop
es
add
jmp
and
loopne
mov
cmp
or
div
fld
xchg
inc
or
jmp
shll
lods
mov
pop
cli
mov
xor
and
dec
cmp
or
rep
jl
lret
popa
cwtl
clc
mov
clc
dec
xor
fisttpll
pop
loop
cmp
movsl
xchg
sub
cmp
inc
mov
inc
in
adc
xor
xlat
add
and
add
push
clc
jmp
insb
fwait
xor
add
xchg
inc
lahf
jg
pop
cmp
sub
cmp
lret
aas
dec
add
add
test
and
ret
push
js
js
pusha
loopne
ret
jecxz
xchg
cltd
int
loop
hlt
mov
gs
pop
or
adc
mov
cwtl
xor
mov
xchg
pop
ljmp
xchg
scas
add
inc
mulb
inc
das
jmp
clc
inc
out
fidivrl
add
cwtl
movsl
xchg
ja
push
xchg
xor
imul
fwait
xor
fcoms
push
inc
pop
clc
dec
cld
fstl
jno
mov
sub
push
movsb
sub
insb
jae
jns
mov
lahf
pop
jns
addl
test
lcall
sarb
dec
rcl
insl
out
mov
int
push
out
adc
sbb
test
insl
hlt
xorb
xchg
mov
cmc
insb
and
stc
jl
mov
iret
es
aas
rorl
enter
or
adc
nop
push
inc
lock
add
sbb
mov
mov
clc
inc
in
mov
push
sbb
sub
fiadds
mov
push
or
mov
mov
adc
dec
push
ja
xchg
push
sbbb
jb
daa
ficomps
enter
cmp
ret
shrl
insb
dec
arpl
fiaddl
jnp
inc
cmc
adc
sub
cmpsb
dec
cwtl
leave
sub
ds
jecxz
mov
jnp
mov
rclb
aad
jns
push
in
cmp
inc
rcr
xchg
dec
bound
rcrl
outsb
cli
adc
lea
or
lea
fs
data16
sbb
fbstp
add
in
dec
jge
push
scas
fildl
std
push
jecxz
ds
mov
xchg
push
scas
pushf
incl
scas
pushf
fcmovu
fsubp
mov
cmp
sahf
inc
push
jnp
cs
and
jmp
xorl
jmp
iret
lods
ss
dec
sbb
fcomip
insl
dec
aad
jp
pop
cmpsl
jg
test
mov
cld
ret
mov
jno
pop
adc
int3
mov
mov
mov
btr
jae
xchg
adc
ret
jb
push
fidivs
ljmp
sbb
cwtl
movsl
jmp
shl
sub
stos
mov
or
sbb
inc
pop
or
leave
sub
add
clc
lcall
fiaddl
daa
adc
sbbb
fnstenv
mov
pop
rcrl
out
xor
xor
mov
out
push
xchg
jecxz
enter
clc
cmpsb
cmp
in
xchg
cmpsl
divl
fcompl
leave
gs
pop
or
arpl
mov
xchg
mov
push
daa
and
dec
fs
mov
imul
stos
push
cmp
push
arpl
fdivrs
icebp
ja
out
or
jmp
bound
mov
daa
cld
sahf
je
stos
add
mov
push
cmp
lcall
dec
xchg
push
test
xchg
mov
adc
jno
cld
jl
scas
or
lret
fdivrl
and
lret
mov
mov
cs
mov
js
mov
push
push
enter
pushf
leave
xor
in
mov
insl
sbb
fsubrl
adc
add
gs
fst
outsb
lret
cmc
jnp
jae
pop
icebp
insb
fldenv
or
push
inc
leave
add
jnp
nop
loope
jmp
jp
inc
and
push
stc
inc
and
inc
adc
jae
push
push
stos
fisttpll
insl
cmc
loopne
add
pop
cmp
or
aad
decl
in
outsb
xor
movsl
dec
lods
adc
int
dec
sub
xor
or
shll
jnp
into
adc
rcrl
mov
dec
sub
push
ret
enter
push
sbb
mov
xchg
ss
test
out
insb
sub
xchg
lahf
mov
movb
int3
inc
mov
fdivp
pop
lret
mov
call
cmpsb
dec
mov
in
or
out
cmp
push
xor
xchg
xlat
push
int
mov
cmp
test
or
aad
leave
lret
mov
lret
sti
or
popf
xlat
mov
test
enter
fldl
iret
in
jp
mov
stos
or
push
je
aas
mov
push
out
mov
xor
dec
aas
inc
pop
pop
pop
test
shrd
test
inc
in
iret
dec
pop
sbb
dec
push
mov
add
pop
pop
push
dec
pop
aaa
test
loopne
mov
ljmp
test
push
sub
int
and
sub
jns
inc
je
js
shll
pop
jno
lret
push
gs
dec
ja
xor
cmp
pop
insb
inc
adc
xchg
jns
or
test
fs
pop
hlt
push
mov
inc
jns
loop
insb
mov
xchg
decl
dec
hlt
rorb
lods
test
ds
or
lea
inc
xchg
test
aam
and
inc
sub
cltd
cmp
cmp
mov
scas
sbb
mov
xchg
jns
inc
ds
in
out
fidivrl
inc
jae
mov
cmp
pop
stos
pop
jb
stos
cmp
inc
stos
mov
or
hlt
cs
mov
insb
iret
or
andb
pop
cltd
xlat
shll
add
popf
mov
lock
pop
fistps
jecxz
fiadds
sbb
bound
insb
xchg
notb
push
push
fistpll
pushw
add
je
scas
stos
leave
cmp
pop
idiv
and
test
fsubl
into
popf
test
jo
rcrb
hlt
dec
mov
shll
loope
leave
xor
jnp
data16
sub
insb
nop
xchg
sbb
lahf
out
popw
pop
std
js
jecxz
lret
mov
or
add
pop
mov
and
adc
int
xchg
push
scas
outsb
jb
data16
int
scas
sbb
subl
mov
cmp
insl
xchg
mov
int
rol
fcompl
mov
lahf
test
jnp
dec
push
add
pop
mov
les
daa
aam
sbb
and
inc
mov
xor
popf
xor
mov
test
pop
fsubrp
stc
lods
mull
call
inc
dec
cmp
loopne
mov
sbb
icebp
das
or
and
and
mov
stos
inc
out
scas
fsubs
mov
push
jb
ljmp
adc
jmp
push
das
icebp
fistpll
leave
rcll
mov
leave
fldenv
movl
int3
mov
mov
loop
add
mov
mov
lret
aad
ret
in
scas
lock
repz
xchg
pop
cmp
sub
jns
js
dec
push
push
ljmp
aad
sub
lcall
imul
jbe
xorl
mov
out
rol
ret
in
mov
jecxz
loope
dec
loope
push
cmp
and
shlb
dec
jo
int
shll
enter
in
adc
xor
cwtl
mov
xor
clc
aaa
loopne
push
bound
jge
jo
cmc
fs
mov
rol
dec
and
cld
xlat
sub
sbb
xor
xchg
cwtl
mov
sub
cmp
jae
nop
cmpl
les
mov
and
insl
stos
push
arpl
mov
inc
lcall
sub
xlat
xchg
mov
mov
dec
test
scas
fwait
cmp
mov
addl
cld
cltd
aad
xchg
dec
repnz
mov
pop
xor
adc
ljmp
vaddpd
in
les
or
add
adc
int
push
push
je
sub
sti
sub
push
sbb
jbe
fcomp
lea
into
lds
into
xlat
insb
fcompl
lods
ret
adcl
and
lds
aad
fsubrp
cmpsl
cmc
stc
jbe
mov
mov
rol
and
sub
cmp
daa
loop
scas
hlt
jae
mov
shlb
xchg
pop
aam
and
movsl
jnp
filds
pop
es
mov
jl
adc
cld
sahf
pop
cmp
xor
lahf
push
xor
ret
negl
lods
jecxz
or
out
push
mov
sub
fsubl
daa
inc
out
loop
mov
in
add
into
mov
dec
scas
stos
hlt
pushl
xorl
dec
ja
clc
add
mov
adc
push
ss
jg
push
es
xlat
rolb
sbb
xlat
ret
mov
inc
je
xchg
jnp
stos
repnz
lods
jb
popf
jmp
das
mov
stos
dec
sub
lds
mov
add
mov
jns
and
inc
sub
mov
jns
iret
jg
adc
incb
pop
clc
pop
aad
mov
or
cmp
in
xorl
mov
cmpsb
scas
out
lea
daa
or
test
jns
sti
xor
popf
es
addr16
xorb
mov
test
loope
jae
xor
dec
mov
xor
mov
aaa
loopne
or
push
push
jmp
fidivl
xlat
icebp
mov
rcll
fnstcw
fistl
sbb
les
jecxz
xchg
shl
mov
mov
shrb
gs
push
mov
lcall
or
mov
stos
rep
in
lods
leave
in
cli
mov
jle
inc
or
mov
mov
pop
dec
mov
aam
gs
xchg
hlt
cltd
mov
xchg
or
pusha
jg
test
cmp
mov
lret
push
in
mov
nop
cmp
insl
icebp
pop
in
pushf
xor
xchg
aam
lods
mov
arpl
xor
adc
leave
cmpsl
push
xchg
push
pop
repnz
movsb
lcall
adc
jle
cli
dec
dec
push
jl
sbb
ret
adc
adc
pop
mov
inc
push
test
xchg
mov
push
sbb
movsl
mov
push
pop
jl
outsl
lea
stos
push
add
jns
mov
inc
pop
movsl
xor
cli
filds
xchg
mov
addr16
stos
js
jo
dec
cltd
cmp
pop
insl
inc
out
rorl
push
sbbb
sbbb
jge
out
addr16
dec
rorl
or
arpl
fstpt
adc
adc
sub
sub
mov
jecxz
pop
sbb
xchg
sub
jle
clc
jmp
mov
int
lods
fildll
xchg
xor
and
popl
adc
adc
add
sub
xorb
loope
std
pusha
xchg
dec
mov
sti
xchg
lods
xchg
out
or
jae
xchg
sub
outsl
mov
push
sub
rorl
in
ret
hlt
jbe
rcrl
mov
xlat
into
lods
dec
push
lea
cmpsb
dec
jno
fwait
or
pop
das
jg
fidivrl
ficompl
mov
leave
cmp
loopne
aaa
xchg
addr16
in
movsl
push
jns
int3
mov
repz
mov
jno
and
mov
add
faddp
adc
sub
mov
hlt
pop
mov
sbb
loope
call
test
lods
cld
cmpsb
add
jl
and
ficompl
jno
clc
jge
loope
inc
lcall
nop
mov
pop
mov
push
push
add
sbb
sbb
seta
xchg
shlb
sub
push
xchg
std
inc
lods
sbb
stc
lods
popf
push
movsl
push
pop
mov
fbstp
push
xorl
add
insb
push
cmp
xchg
dec
cmp
mov
push
pop
lods
xor
lock
in
sbb
dec
mov
popf
mov
loop
push
sarb
aam
sbb
mov
xchg
xor
pop
je
dec
mov
outsl
push
or
fs
push
mov
cmp
call
add
gs
mov
scas
insl
or
test
cli
mov
out
mov
clc
call
dec
inc
mov
cmc
test
in
es
cltd
cmp
push
js
daa
sbb
sarb
jmp
orb
sar
mov
cmp
inc
mov
imul
mov
lret
shlb
nop
sub
scas
mov
sub
mov
scas
pop
popf
inc
sbb
fstl
lods
adc
cwtl
mov
lock
in
sahf
and
adc
cmp
inc
faddl
cltd
add
add
bound
pop
jmp
inc
inc
cmpsb
mov
xchg
jecxz
repnz
shll
mulb
pop
push
sub
mov
lea
push
std
mov
lock
add
mov
enter
push
mov
lods
std
shlb
push
adc
xchg
iret
mov
mov
loop
lods
push
mov
mov
cwtl
mov
sbb
xor
xchg
pop
insb
mov
setle
adc
in
cmp
mov
sub
mov
cltd
jge
arpl
pusha
test
push
imul
adcb
mov
mov
jl
or
jl
test
and
or
aaa
data16
mov
xor
or
or
mov
aas
out
jno
out
out
pop
adc
xchg
adc
iret
hlt
fisubl
mov
xchg
popa
xor
shrb
mov
ret
fsubs
or
push
jbe
aam
pop
and
push
jno
test
inc
lods
pop
aaa
jl
mov
mov
cwtl
je
push
cli
jecxz
xlat
jg
and
and
or
outsl
and
rclb
mov
pusha
adc
ja
out
mov
jl
lods
dec
inc
pop
repnz
mov
jae
push
xchg
mov
lahf
sub
inc
rclb
dec
mov
outsb
insl
and
mov
add
push
test
mov
out
adc
xor
adc
in
lods
xor
mov
and
lret
mov
mov
push
add
jle
xor
dec
fimuls
fmul
xchg
push
jmp
les
xchg
sbb
movsl
sahf
cmpb
mov
mov
jne
mov
shlb
and
or
lods
pop
or
xchg
sti
fwait
mov
pop
leave
stos
and
sbb
jno
and
leave
data16
je
lea
pop
sbb
sub
mov
sbb
pop
mov
mov
hlt
mov
inc
insl
stc
aas
out
inc
jmp
push
push
jae
jo
outsb
mov
or
mov
xor
mov
sti
jbe
adc
pop
cli
push
scas
popl
les
ss
jo
or
pextrw
inc
and
shll
fisubl
dec
imul
imul
subb
push
rolb
sti
data16
cmpsl
push
pop
inc
and
lock
lret
ja
pop
shlb
mov
lret
test
and
ret
out
add
aas
out
call
mov
mov
mov
cld
iret
shll
lret
dec
xchg
aaa
mov
jmp
mov
pop
outsb
bound
fstpl
enter
pop
cli
inc
icebp
xor
cs
sbbl
xchg
add
inc
outsl
jbe
jae
sbb
iret
cltd
jp
dec
sub
push
push
repnz
mov
mov
icebp
shrl
push
pushf
sbb
jo
jp
outsl
loope
loope
enter
ja
dec
jno
outsb
xchg
test
lods
pop
or
xchg
popa
and
add
dec
pop
in
ds
in
jno
mov
sbbl
lock
repnz
cmp
mov
repz
inc
icebp
cmpsb
and
test
mov
repz
mov
jmp
dec
insb
jmp
lahf
out
lods
inc
mov
sbb
mov
xchg
dec
mov
jg
add
cmp
outsl
sub
mov
cmp
movsl
fs
dec
fsubrs
cmp
nop
jle
adc
imul
push
add
sar
xchg
inc
and
jns
cmpsb
repnz
je
repnz
stc
xor
push
push
sbb
add
es
ret
bound
loop
sahf
lods
xchg
dec
test
fxtract
das
cmp
push
sub
and
push
jl
jns
add
push
mov
and
flds
push
sbb
aad
xor
es
cs
arpl
scas
sti
push
aam
sub
and
adc
cmc
mov
inc
out
inc
jmp
xchg
cld
adc
orb
ret
xchg
xor
lret
mov
in
mov
jmp
jns
lods
jbe
jbe
pop
lock
inc
inc
stos
xor
mov
out
rcrl
add
aam
movb
mov
push
adc
les
xchg
mov
test
lods
fidivs
jg
fcomip
push
daa
lahf
jo
dec
push
movsl
orl
sub
sub
add
cli
dec
loope
stos
movsb
mov
mov
cli
sbb
adc
nop
movsb
jno
stos
xchg
int
dec
mov
jno
push
imul
es
int3
mov
data16
push
cmp
shl
mov
inc
xchg
mov
or
and
cmp
outsl
xchg
test
sbb
xchg
cli
sub
fcomip
push
pop
fsts
mov
out
lods
ljmp
mov
push
push
int3
rclb
dec
lret
cmp
pop
pop
xchg
sub
sbb
cwtl
repnz
xor
sarb
mov
sbbl
push
pop
push
sbb
inc
shlb
cmpps
loopne
popf
in
and
pop
aaa
loope
insb
shl
mov
fimuls
rol
jne
jae
inc
nop
mov
and
jmp
js
mov
mov
xor
pop
jmp
pop
arpl
dec
fildll
lods
sbb
xchg
sbb
cmp
ret
cmc
xlat
mov
pusha
mov
iret
lods
ret
out
and
and
dec
pop
xorb
sti
aad
sahf
xor
into
out
xor
repnz
inc
xlat
enter
add
lret
out
mov
jb
aam
and
dec
add
push
addr16
and
mov
jmp
fwait
lret
mov
fiaddl
push
imul
nop
cmp
cmp
xlat
lcall
jl
fwait
scas
push
push
in
xchg
cmpb
ds
mov
add
faddl
int
xor
outsl
mov
bound
into
aaa
cmc
sub
xor
je
push
les
and
mov
and
xchg
dec
repz
mov
pop
ficomps
mov
xor
or
fwait
cmp
lahf
data16
call
es
add
dec
js
sbb
loopne
xchg
xlat
rclb
leave
cmc
mov
aad
loop
std
lock
mov
cld
cmpsb
inc
lds
sbbl
push
test
imul
pop
dec
lahf
fists
cmp
fmul
cmp
xor
cld
and
js
lds
lods
lods
pop
push
hlt
adc
or
das
cmp
ja
daa
dec
and
or
int3
jbe
push
out
cld
or
pop
rcll
dec
mov
dec
repnz
jp
nop
sahf
xor
lret
stos
loop
push
xor
add
fwait
and
ret
jl
ss
xchg
clc
daa
mov
lods
call
mov
frstor
testl
notl
xchg
gs
sbb
popa
cmpl
inc
jecxz
cmpsb
mov
call
lret
jge
das
jg
jo,pn
push
stos
out
adc
mov
and
je
mov
movsb
inc
stos
int
dec
pop
ja
outsb
mov
jmp
stc
int
xchg
out
jle
lret
xor
pop
adc
loopne
int
and
cwtl
test
addb
inc
adc
sub
rolb
sbb
jns
sub
push
xchg
outsl
popf
xchg
mov
shll
push
or
aam
mov
sbb
cltd
mov
mov
jl
jo
in
xchg
xlat
add
xchg
jl
cmp
push
cltd
push
sbb
cmp
aad
sti
xchg
sbb
add
push
dec
scas
repnz
xlat
add
inc
push
iret
imul
fs
push
xchg
iret
adc
pop
shr
into
or
in
jae
or
and
js
xchg
test
cltd
shr
xchg
decl
cmc
mov
add
cwtl
inc
add
aas
int
loopne
pop
icebp
imul
push
jb
mov
inc
mov
int
xor
imul
enter
adc
rclb
loop
mov
sbb
and
sub
xor
inc
into
aad
das
fadds
outsl
clc
pusha
loopne
xor
sbb
cmp
xor
js
inc
int
jae
mov
or
inc
popa
push
mov
sbb
jecxz
adc
nop
mov
add
push
addr16
add
aas
sbb
xor
sbb
data16
sbb
inc
mov
xchg
pop
mov
in
xchg
movsb
xchg
shlb
ret
mov
arpl
lcall
fmull
inc
push
cli
testb
mov
out
xlat
xchg
mov
cwtl
cmpsb
mov
pop
mov
adc
or
mov
dec
jae
lcall
fimull
lods
jnp
mov
inc
divb
aam
push
repnz
hlt
pushf
jp
mov
addr16
and
xchg
decb
es
cmp
mov
shrb
pop
sub
push
xchg
ret
sub
or
sbb
mov
inc
push
dec
popf
pop
es
mov
cmpsl
inc
pop
xlat
pop
adc
fstpt
pop
jb
lock
loop
fbld
and
jnp
cmp
aaa
xchg
aaa
sbb
lret
add
cs
in
ljmp
adc
sbb
mov
dec
pusha
inc
data16
push
jp
test
hlt
out
mov
es
xor
loope
dec
jg
adc
jae
inc
cmp
mov
dec
lea
mov
in
inc
enter
aam
push
sub
int
adc
fistpl
rclb
inc
add
aaa
push
mov
call
mov
ss
push
mov
jno
cs
popa
pusha
pop
stos
jnp
mov
cmp
scas
rcl
imul
call
lock
rolb
int
xchg
out
sahf
mov
hlt
mov
jecxz
je
in
in
mov
insl
icebp
dec
enter
add
add
inc
aam
rcrl
inc
xor
lret
and
xor
xchg
das
test
jo
loopne
dec
cmp
lret
fbld
in
xchg
push
popa
mov
mov
sub
cmp
mov
ficompl
sbb
xchg
sub
push
aaa
pop
int3
out
adc
lods
sbb
loope
mov
je
push
sub
mov
xchg
fs
sbb
je
push
pop
push
fisubl
adc
jbe
popa
daa
push
pop
les
add
cmp
sti
mov
add
stos
faddl
mov
bound
add
cmpsl
lahf
xchg
add
or
je
cmc
xchg
mov
test
jl
enter
roll
ss
xchg
add
aas
mov
cmp
imul
mov
and
mov
cltd
es
es
xchg
inc
cmp
js
insb
rorl
test
enter
cmp
cmp
in
xchg
mov
repnz
adc
out
add
pop
adc
mov
cli
sbb
out
bound
out
fs
adc
dec
xor
mov
int3
xchg
jmp
inc
inc
jl
mov
imul
pop
add
hlt
cmp
pavgw
pushf
jo
cmp
sti
adc
test
adc
mov
pop
test
cmc
sub
das
or
cmp
dec
xchg
dec
pop
jae
rcrb
push
fimull
jecxz
lret
popa
push
mov
out
jae
add
lea
in
xchg
ss
mov
push
andl
pop
ret
pop
or
ljmp
inc
lock
aad
cmp
mov
sarl
shll
xor
mov
imul
leave
data16
add
xchg
popa
mov
js
pop
rcrl
movsb
loope
lods
sub
clc
arpl
xor
mov
inc
push
sti
ret
data16
enter
cmpsl
pop
out
lcall
xchg
stc
leave
nop
lods
daa
gs
and
imul
data16
outsl
outsl
cmp
push
pop
cmpb
dec
sbb
test
pop
jecxz
cmpsl
dec
leave
ret
pop
dec
pop
adc
dec
data16
mov
rcr
cmovl
mov
movsb
pushf
mov
or
mov
test
out
std
add
jbe
xchg
mov
mov
outsl
xor
or
xor
in
sahf
icebp
dec
mov
jnp
jae
dec
cmp
cmp
into
sbb
sub
sbb
loopne
clc
test
iret
jecxz
push
pop
sahf
or
and
pusha
fs
xchg
pusha
mov
pusha
xorb
xor
xchg
cltd
ret
inc
fsubrs
stos
adc
dec
ljmp
mov
or
jg
mov
cmp
test
add
pop
cmpl
int3
xorb
add
xchg
fdivrs
out
pop
scas
sub
mov
mov
icebp
sub
or
addb
xchg
pop
xor
movsb
das
in
lcall
jno
mov
dec
sti
std
cwtl
ret
lods
je
adc
test
std
std
adc
jmp
loopne
push
jecxz
repz
push
xor
mov
pop
gs
mov
loope
aad
mov
dec
and
in
jb
fisttps
int3
mov
lcall
cmp
and
addr16
rcrl
loop
jne
dec
push
aaa
dec
addr16
stc
jno
adc
xchg
mov
orb
dec
ss
outsb
jmp
mov
xchg
aam
cmpsb
cs
bound
scas
lea
mov
jmp
push
cltd
inc
and
loop
mov
ret
mov
test
call
adc
lret
mov
stos
fdivrs
loope
cmpsl
push
mov
aas
xor
lods
cmp
xlat
shlb
sub
inc
adc
or
sahf
fwait
pop
mov
or
popf
xlat
lods
lcall
sbb
mov
pusha
jnp
and
jge
cmp
insl
cmpsl
shrb
push
es
jge
faddl
xchg
or
sub
pop
adc
aas
repz
lods
out
sti
lea
and
sub
imul
into
cmpsl
popf
fucomi
dec
push
mov
mov
sub
xlat
xchg
add
roll
xchg
das
xchg
jmp
into
lods
or
cld
push
pop
dec
mov
sbb
push
or
adc
pop
sub
jl
push
scas
rcrl
mov
insl
outsb
xchg
orl
fprem1
or
mov
mov
call
in
add
sub
mov
in
dec
rorb
push
sahf
pop
icebp
clc
mov
cmp
gs
sbbb
push
ljmp
xchg
xchg
mov
and
or
mov
jnp
sub
mov
sbb
aad
xchg
dec
xchg
test
mov
sub
sub
popa
and
aaa
pop
in
or
cmpsb
adcl
dec
aaa
shlb
cmp
mov
dec
sbb
ffree
xchg
sbb
xchg
imul
xor
pop
fmulp
sbb
dec
mov
hlt
loop,pn
mov
xlat
push
loope
cmc
aas
mov
orl
jge
imul
out
dec
and
loop
mov
and
push
outsl
nop
in
xchg
outsl
mov
popf
test
aas
clc
cmp
and
stos
sbb
or
inc
inc
mov
add
negl
stos
mov
mov
mov
adc
jno
mov
stos
pop
sahf
xor
shll
cmpsb
out
push
pushf
incl
jae
push
mov
cltd
mov
fsubrs
push
pop
push
mov
jnp
xchg
cmp
shll
mov
ret
outsb
lcall
jae
push
inc
insb
das
xchg
inc
and
jmp
dec
scas
lret
adc
cmpsb
cmp
push
rorl
scas
xchg
mov
fcompl
insb
cmpsl
fcomip
sub
cmp
inc
jb
insb
imul
iret
scas
pop
les
push
jmp
pop
and
inc
xor
fldt
aas
aam
mov
je
das
fistpl
sbb
push
mov
lods
hlt
inc
leave
pop
sub
push
test
xor
adc
pop
enter
pop
fmul
dec
sahf
psllw
popl
push
pushl
cmc
int3
pop
cs
aaa
jb
xchg
test
inc
mov
aas
push
mov
cwtl
adc
lock
push
push
sbb
mov
pop
fdivrs
push
lock
mov
std
es
cmpsl
test
and
mov
pop
mov
pop
mov
cmpb
inc
pop
into
and
loopne
rcrl
push
pop
xchg
cmp
call
je
mov
testl
sub
test
sbb
fsts
and
ss
bound
aad
sbb
in
mov
pop
cli
aad
jno
int3
mov
loop
sub
loop
hlt
insb
call
push
adc
adc
jnp
gs
xchg
cli
push
sbb
mov
push
xchg
mov
push
sub
adc
dec
jae
push
mov
jns
mov
stos
mov
mov
push
repnz
bound
jp
ret
dec
out
sub
and
mov
cs
xor
add
notb
add
cmp
inc
pop
push
push
ljmp
lock
mov
outsb
add
sbb
xchg
mov
pusha
cmp
imul
pushf
or
jecxz
xchg
out
mov
dec
inc
pop
push
mov
fimull
push
outsb
dec
lock
mov
movsl
xchg
push
mov
mov
xchg
repnz
out
bound
scas
mov
pop
dec
pushf
out
lret
push
mov
cmp
fucom
adc
stos
pop
flds
shlb
mov
xchg
or
pop
xchg
sti
aas
cmpsb
adc
subl
daa
adc
jge
push
xchg
rorl
xor
add
mov
cltd
fistl
or
cld
inc
mov
sub
neg
mov
sbb
dec
xor
popf
loop
add
mov
cmp
dec
and
das
adc
and
and
cmp
push
cmpsb
repz
add
fmuls
fidivrs
inc
add
sub
adc
or
inc
loopne
lods
hlt
sub
dec
in
hlt
orb
sbb
icebp
sub
insl
mov
data16
pop
ljmp
sub
stc
sub
sahf
rcll
jecxz
jbe
cmp
std
cmp
sbb
add
push
cli
adc
js
cltd
or
subb
iret
ficoml
mov
loopne
ret
jecxz
sar
mov
movlps
jecxz
shrb
pop
push
xor
hlt
icebp
loopne
mov
jg
ja
cmp
lret
out
mov
sub
es
mov
aas
cmp
adc
sbb
aas
lcall
decl
cmp
mov
je
nop
and
sbb
sbb
xchg
cmp
bound
sahf
fucom
or
dec
mov
xor
call
pop
adc
hlt
ds
pop
call
pop
lea
or
sarb
in
pop
xor
xor
push
cmpsb
jno
adc
jb
imul
mov
or
jle
loop
xor
add
sub
cmp
add
out
cld
lds
xorb
loope
pusha
xor
fs
jbe
sbb
mov
out
xchg
pop
xchg
sbb
mov
add
aad
pop
sub
lahf
mov
stos
cmp
js
push
pushl
bound
push
adc
mov
stos
push
push
and
cmp
lret
lahf
dec
stos
cwtl
jp
arpl
outsb
lahf
ror
imul
loop
dec
xchg
in
mov
test
clc
fbstp
mov
mov
push
in
mov
cmpl
xchg
push
scas
sbb
jnp
out
xchg
lds
jne
fwait
js
rcr
mov
jmp
cmpsb
nop
js
int
testl
jp
cmp
clc
out
cs
add
popf
mov
jnp
or
pushf
leave
mov
movsl
in
fnstcw
cmc
and
pop
cmpsl
bound
in
ljmp
fwait
ja
rorl
repz
mov
adc
mov
popa
mov
shlb
sbb
sbb
pop
or
jmp
cmp
sahf
mov
jecxz,pt
aad
outsl
aaa
pop
out
out
dec
push
clc
jp
dec
cmp
roll
icebp
pop
xchg
mov
mov
addr16
imul
xor
cmp
arpl
lea
and
test
in
ficompl
inc
pop
sub
nop
xlat
and
pop
fs
fisubrs
cmp
mov
fs
sbb
dec
xchg
aas
repz
or
jp
lock
iret
push
shll
lds
xor
fcomi
xor
inc
ret
aam
jecxz
test
push
out
sbb
ret
xor
js
loopne
xchg
sahf
push
pop
scas
shrl
adc
sub
cld
mov
push
adc
inc
rcrb
pusha
jno
pop
fistps
aas
mov
orl
lcall
sbb
xchg
adc
stc
sub
mov
mov
xor
cmp
push
leave
push
leave
ja
adc
dec
pop
mov
stc
repnz
cmp
cli
sbb
popa
add
loopne
imulb
inc
loopne
stc
xchg
adc
mov
xchg
pop
sub
int3
cmpsl
mov
or
call
pop
jb
fwait
imul
push
stos
fnsave
das
mov
and
orl
xor
outsl
hlt
out
pop
dec
arpl
or
inc
orl
push
stos
fcoml
lret
adc
add
mov
dec
ljmp
pop
add
lea
jno
push
rcll
add
xchg
adc
pop
jl
mov
repz
xor
inc
pop
fnsave
lods
in
adc
pop
stc
int3
jae
out
ret
cltd
push
pop
rcrb
sub
enter
scas
sub
pop
adc
mov
cmp
inc
scas
std
imul
aaa
dec
push
mov
sub
cmpsl
dec
inc
push
clc
cmp
xchg
dec
push
leave
dec
hlt
xor
fsubrs
or
clc
mov
movsb
xchg
and
pop
cltd
inc
aad
lods
xor
cli
rorl
in
mov
and
mov
add
fistps
and
inc
mov
lret
mov
fnstcw
and
mov
cmp
pop
filds
mov
push
lret
lea
iret
xlat
dec
stos
cmp
xor
outsb
mov
into
ja
push
nop
mov
fcoml
lods
addb
mov
mov
aam
repnz
nop
scas
xchg
push
aad
movsl
test
mov
ljmp
xor
test
pushf
adc
mov
rcll
dec
mov
cmp
adc
mov
push
mov
rclb
ror
push
pop
jne
js
pop
jnp
jp
inc
mov
pop
loope
scas
int
sbb
fists
push
or
sahf
jp
leave
pop
inc
lock
adc
pop
scas
and
arpl
scas
cltd
and
out
clc
or
ret
mov
adc
cld
ja
xchg
out
mov
rorl
int
or
rorl
dec
addl
add
fcoml
ljmp
dec
xchg
std
inc
je
sbb
jp
cs
mov
call
les
hlt
push
stc
stc
xlat
mov
incb
ss
xchg
clc
aas
mov
mov
cmp
dec
fmull
lock
jp
sahf
cmp
cwtl
push
enterw
fsub
leave
lds
inc
inc
mov
popa
js
or
add
cmpsl
mov
mov
pop
jbe
mov
outsl
push
scas
repnz
adc
out
xor
xchg
fs
jl
sub
jmp
subb
lds
es
mov
xor
jmp
pop
mov
dec
dec
test
call
lods
push
jge
cs
rorl
je
jo
lcall
inc
adc
and
jmp
dec
sub
std
mov
mov
lods
sub
mov
xchg
mov
lahf
inc
sub
aam
sbb
push
cmp
orb
sarb
js
or
std
enter
sbb
mov
cwtl
mov
push
push
outsl
cli
jo
dec
cld
xchg
dec
mov
iret
sub
test
sub
scas
and
test
mov
loopne
mov
mov
push
mov
out
fadds
mov
test
push
dec
outsl
repz
sahf
adc
xor
js
xlat
cmp
insb
jne
aaa
mov
sub
inc
imul
shrl
cwtl
push
call
je
pop
sti
std
pop
push
comiss
dec
stos
mov
in
adc
adc
mov
jb
jns
push
iret
fnstcw
sti
adc
sbb
xchg
or
pushf
xor
loope
mov
dec
jp
loop
out
ss
sub
mov
mov
pushf
sti
xor
pop
xor
pop
sbb
sub
jo
scas
jne
or
cmp
pop
mov
xchg
lret
mov
lds
addr16
push
mov
pop
stos
push
jo
ja
pop
subb
aaa
xor
leave
pop
out
or
movsb
mov
mov
mulb
inc
push
dec
stos
jp
test
clc
insl
mov
out
imul
add
fmuls
cmpsl
push
lret
pop
jle
imulb
std
hlt
sub
cld
add
and
pop
jecxz
fistpll
insl
jmp
pop
sub
or
mov
lods
and
arpl
adc
push
sub
dec
lock
add
add
aaa
fstpl
adc
ret
push
adc
cmp
aam
cmp
or
adc
inc
or
mov
ja
arpl
cmp
jmp
mov
mov
insl
mov
xchg
lahf
xor
fistpll
popa
cmp
add
inc
out
incb
and
nop
mov
clc
fisttpl
rclb
icebp
or
cmp
mov
mov
xor
sub
lret
out
jne
jno
into
in
xlat
out
dec
andb
test
dec
outsl
inc
sub
iret
stc
push
scas
xor
test
imul
dec
sub
in
pop
mov
jbe
cmp
lea
stc
dec
mov
mov
ret
pop
sbb
clc
add
dec
clc
mov
adc
and
out
mov
cmc
out
xor
pop
js
adc
movsl
pushf
mov
insb
test
jecxz
movsl
push
xor
inc
jnp
mov
jb
pop
dec
loop
outsb
jb
dec
inc
cmp
jle
lds
and
ss
pusha
add
loopne
cltd
jae
jl
shr
xchg
push
movsl
sub
sub
enter
sub
rcl
mov
mov
xchg
outsb
xchg
mov
sub
ja
or
dec
jle
out
iret
scas
popf
cwtl
mov
movsl
outsl
leave
sti
cmp
pop
shlb
loope
imul
jecxz
mov
daa
movsl
xlat
or
mov
loop
xor
push
xchg
or
jmp
mov
insb
and
arpl
push
jmp
sub
fists
cmp
add
incb
mov
ss
lar
adcl
dec
jo
jae
aas
dec
ret
das
pop
hlt
mov
dec
mov
fs
dec
mov
sbbb
pop
repnz
sub
xor
gs
jae
mov
in
add
movsb
adc
xchg
dec
outsb
xchg
jecxz
cmp
bound
hlt
fbstp
mov
xor
iret
lret
and
sbbl
and
loop
outsb
popf
int3
xchg
xor
lds
das
icebp
test
sti
sbb
pushf
enter
scas
repnz
jl
daa
push
das
pop
xchg
push
jecxz
inc
or
sub
fdivr
test
out
lret
into
xchg
js
push
movsb
jg
andb
jmp
cwtl
pop
dec
push
cmp
lret
cwtl
push
hlt
jmp
push
xor
loope
inc
mov
mov
cmp
cmp
shlb
xlat
push
test
mov
jo
in
sti
mov
dec
and
addr16
sti
nop
mov
frstor
orl
outsb
cmp
fistl
push
jnp
mov
mov
mov
cld
sbb
jmp
jecxz
pop
push
add
jge
test
sbb
cld
inc
pusha
ljmp
out
xchg
adc
sub
fidivrs
push
jmp
push
sti
mov
jb
xor
cmc
loope
aas
mov
shl
sti
inc
xchg
lods
pop
mov
int
sbb
adc
iret
inc
cld
jae
inc
aam
xor
jb
xor
test
dec
and
or
roll
jae
cld
sahf
mov
lods
lret
xchg
cltd
add
push
push
out
inc
movsl
push
dec
jecxz
push
xorb
jecxz
pop
jmp
jo
jl
xor
inc
inc
jg
mov
sbb
outsb
es
xchg
pop
mov
xorl
mov
add
aas
adc
adc
xor
decb
stos
mov
popf
dec
mov
ja
ljmpw
xor
and
cmp
rol
int
xorl
sbb
pop
icebp
xchg
adc
sbb
sub
pop
fstpt
fnstcw
pop
int
sbb
movsb
or
test
mov
test
add
cwtl
leave
fwait
lods
lds
add
ss
out
mov
cmpsl
ret
inc
xor
fs
xor
mov
outsb
xchg
and
stos
xor
int
pop
outsl
push
loope
push
fwait
icebp
mov
adc
jmp
loop
cld
jp
lahf
add
div
aaa
jo
push
in
pop
shrl
adc
iret
ret
cmp
or
arpl
cmp
repz
jbe
rcrl
or
add
jne
pop
mov
jmp
sub
cli
pop
stos
pop
lret
aas
xchg
loop
mov
loopne
hlt
ret
loope
stos
lcall
ja
xchg
in
jae
iret
jecxz
jno
filds
xchg
aaa
xchg
cmp
add
mov
lret
out
mov
sti
cs
mov
add
adc
movsl
outsl
or
ja
aad
cltd
xor
xchg
fnsave
mov
pushf
cmpb
insb
or
pop
cmp
rclb
fs
xor
xor
mov
cmp
fimull
aaa
pushf
sbb
dec
mov
aas
shlb
mov
leave
push
mov
addr16
cmpsl
or
rcll
lds
and
push
jge
cmp
and
cmp
push
inc
sahf
dec
mov
xor
sbbl
mov
mov
dec
jg
xchg
aam
into
scas
sub
shl
xchg
add
add
and
jp
mov
inc
popf
leave
enter
rcrb
jnp
es
out
add
fcmovb
cmpsl
xor
inc
push
add
fs
xor
dec
xchg
addr16
dec
xlat
arpl
movsb
push
insl
pop
std
rcrl
setp
pop
adc
vpshlb
test
mov
test
cmpsb
les
sti
mov
fwait
sahf
adc
xor
inc
dec
and
sub
fwait
inc
pop
addl
fiaddl
sahf
rorl
push
pushf
aam
adc
cmpsb
js
pusha
sbb
int
fst
lods
inc
out
add
mov
cmpsb
dec
enter
lods
mov
mov
inc
or
jbe
pop
mov
mov
insb
incl
xor
jp
fbstp
push
sub
ja
call
push
pop
rorb
daa
loopne
fcmovu
ds
xor
pop
xlat
cld
test
mov
or
stos
pop
movsl
int3
pop
jns
adc
mov
push
mov
jl
mov
jle
movsb
fildl
dec
js
sbb
jns
into
inc
pop
sbbb
dec
push
jge
dec
cmp
or
dec
adc
mov
pop
inc
mov
rcl
push
pop
xor
out
in
js
inc
and
ds
int
adc
divb
pop
jnp
add
xlat
push
mov
adc
cld
xchg
inc
mov
lret
ret
fwait
and
lock
iret
in
or
push
into
mov
push
jl
mov
pop
sahf
and
mov
or
or
jp
and
jo
sahf
add
mov
push
dec
imul
out
pop
rcrb
mov
pop
and
sub
push
insl
jmp
stos
mov
out
outsb
push
out
icebp
inc
rcrb
cli
push
test
pop
fists
mov
and
pop
mov
cmp
pop
pop
movsl
daa
pusha
jge
jb
cmpsl
daa
xchg
insl
pushl
adc
sub
pop
clc
push
push
es
xor
xchg
sub
lock
fildl
jne
sub
ja
sahf
and
xchg
iret
mov
cmc
ds
adc
repnz
das
dec
cld
push
dec
seto
std
xchg
lods
les
insb
lds
rcll
jge
hlt
int
and
jno
sbb
ss
jo
das
dec
popf
sub
mov
pop
lds
loop
pop
add
nop
push
xlat
loope
sti
aam
inc
iret
pop
mov
ret
xlat
jb
rorl
xchg
or
sbb
pop
cmp
js
mov
mov
sbb
ret
pop
push
jo
mov
stc
mov
pop
xor
lret
jnp
les
mov
addr16
nop
mov
ss
popf
and
inc
xchg
shl
pop
icebp
dec
testl
sub
mov
xor
and
mov
jl
add
rorl
jae
rcl
or
sub
xor
sbb
loope
aaa
cmpsl
data16
cmp
loopne
fucom
xor
aad
mov
mov
jg
dec
roll
pop
or
dec
push
scas
fcompl
inc
adc
jecxz
sbb
inc
cmc
sub
imul
or
pop
rcr
mov
cs
jg
and
roll
mov
xor
std
jmp
orb
loop
cmc
sti
pop
xor
mov
mov
xchg
jle
jno
add
dec
sub
jmp
ror
arpl
scas
loope
jle
xor
pop
sbb
xchg
nop
aas
lds
mov
cld
cmp
sbb
push
gs
jae
sbb
fwait
mov
push
mov
sti
or
shrb
or
subl
pop
xchg
imul
mov
fidivl
dec
mov
rorb
xchg
movsb
daa
nop
push
nop
xchg
dec
fwait
cmc
pop
push
shl
aaa
aas
xchg
add
sbb
out
pop
dec
out
dec
dec
fwait
jo
enter
push
test
or
sub
push
ja
jmp
cmp
mov
mov
testb
xchg
inc
daa
in
lahf
cmc
imul
jnp
dec
sub
or
jle
mov
add
insb
sub
pop
add
xsha1
cmpsb
dec
out
push
data16
jp
cmp
popf
adc
stos
hlt
int3
cmp
lret
out
movd
dec
xchg
lret
outsb
aaa
sub
add
mov
cmpsb
std
imul
mov
adc
les
sub
int3
ss
into
push
hlt
push
lcall
xchg
pop
jle
xchg
and
loopne
or
push
pop
dec
imul
xor
lcall
mov
and
jb
cmp
xor
sub
adc
push
dec
and
loopne
rcrl
fimuls
cmpsb
imul
sbb
cmp
andb
xor
mov
ja
add
sahf
sbbb
and
int3
insb
mov
or
xlat
inc
jb
mov
lods
mov
sub
loope
out
pop
add
mov
push
lcall
add
and
imul
jbe
xchg
outsb
std
out
cmp
aad
test
popf
stos
int
icebp
icebp
pop
xchg
jle
pop
xor
jnp
mov
fwait
mov
movsb
mov
scas
repz
inc
lea
ljmp
hlt
mov
jnp
mov
sbb
adc
and
popf
mov
jg
test
scas
mov
pop
cmp
ja
loop
popf
ss
sbb
in
lock
aad
in
jo
sub
push
aas
aam
incb
mov
jge
iret
test
insl
sbb
mov
mov
mov
mov
or
pop
rol
adc
push
xor
icebp
les
sub
mov
mov
inc
stc
cli
or
js
sub
aad
or
jo
aaa
les
push
sbb
lds
orb
jp
rolb
shlb
mov
jecxz
scas
xchg
cmp
push
jns
das
xchg
cwtl
mov
mov
pop
rolb
and
add
mov
and
jecxz
cwtl
sahf
std
jns
push
push
lcall
stos
cli
in
lret
test
add
push
xchg
decb
inc
jbe
mov
stc
out
bound
and
and
mov
xchg
or
inc
pusha
jb
jmp
stc
jb
shrb
rorl
das
pop
push
sbb
les
xchg
int
sahf
mov
mov
push
push
cmpsb
or
lods
inc
shrl
in
shlb
mov
xchg
mov
mov
gs
out
js
inc
ja
xchg
int
insb
int3
shl
dec
inc
in
std
xlat
sbb
ss
cmp
cltd
stos
sti
push
faddl
inc
ja
push
mov
push
mov
sub
ror
sbb
pop
int
lret
add
pop
insl
inc
dec
sbb
test
inc
les
jne
call
jmp
or
xchg
push
xchg
xor
aas
cmp
dec
fldenv
pop
push
xchg
aam
imul
sti
sbb
push
and
xchg
pop
push
add
xchg
sbb
or
cmp
rep
and
outsb
mov
decl
jo
movsl
lock
push
mov
cmp
xchg
or
in
cli
repnz
testw
xchg
ljmp
test
or
add
add
inc
in
bound
int3
imul
in
and
and
mov
mov
inc
mov
popf
pop
mov
jb
lcall
stos
cmp
es
jp
lock
sarb
or
outsl
dec
hlt
mov
loop
imul
push
adc
cmp
arpl
adc
mov
ljmp
jmp
cmp
hlt
mov
dec
shrb
jae
or
and
mov
adc
mov
psraw
lcall
notb
pop
sub
ja
pop
cmpsl
xor
test
lods
dec
dec
jae
call
jno
lret
ljmp
jae
mov
inc
stos
pop
add
mov
jge
mov
mov
push
adc
stc
stos
pop
mov
add
sbb
push
test
icebp
mov
sub
push
jo
and
testb
push
inc
dec
fcompl
roll
xchg
add
mov
mov
stc
mov
pop
push
mov
cmp
push
loopne
jmp
pop
mov
std
mov
pop
or
push
cmp
mov
addl
adc
lods
mov
jb
into
pop
jg
dec
es
mov
inc
jmp
mov
mov
xor
int
add
or
lods
ror
push
fnstcw
pushf
dec
aad
or
cmp
jmp
push
sbb
outsl
inc
aad
popw
mov
mov
inc
or
scas
call
call
cmp
les
xchg
lret
out
lock
dec
sbb
mov
insb
dec
cmc
cltd
sub
lcall
movsb
mov
fwait
inc
loopne
aad
js
jno
add
mov
enter
fisttps
pop
fists
xor
mov
jo
ss
lcall
arpl
push
and
mov
mov
fnstenv
lock
mov
mov
pushf
loopne
comiss
nop
adc
aam
jbe
mov
or
dec
cmpl
ja
and
dec
adc
ret
mul
cltd
flds
hlt
adc
dec
inc
and
fiaddl
ficompl
adc
fistpll
jns
dec
xchg
ds
pusha
or
movsb
subb
inc
insb
mov
jl
in
cmpsl
testl
scas
mov
jns
daa
sub
jo
mov
lret
adcl
cmp
stos
outsb
adc
jp
sbb
mov
and
ss
cmpsb
pop
roll
mov
add
call
sub
and
icebp
ret
pop
shl
mov
gs
inc
stos
lcall
lret
xor
int3
decb
cmp
popa
or
jmp
into
shll
shl
xor
or
and
mov
and
add
pop
add
in
pop
insl
mov
repz
iret
push
sub
xchg
cli
adc
pop
mov
mov
insb
sub
sbb
movsl
in
and
sub
push
loop
sub
cld
push
fcomps
inc
push
mul
jnp
pop
pusha
test
pop
repz
subl
dec
adc
push
add
adc
movsb
lock
sub
push
xchg
cmpsl
lods
aam
mov
pop
pop
stos
xchg
std
fld
xor
push
gs
cltd
test
push
nop
mov
jg
xor
sarb
pop
add
xor
mov
test
dec
dec
stos
int3
les
pop
fcomps
pop
scas
xchg
mov
mov
insb
std
inc
add
sbb
mov
or
in
jge
ret
leave
mov
push
popa
stos
shll
xor
adc
arpl
mov
add
enter
xor
jbe
stos
dec
lahf
insb
mov
outsl
gs
jle
rorl
imul
push
dec
jae
roll
sub
mov
and
std
je
cmp
ja
or
rclb
mov
lret
push
xor
dec
imul
cmp
and
fcoms
mov
and
aaa
lahf
add
and
jne
std
or
je
jle
inc
call
push
std
sub
lret
dec
pop
out
cmp
sbb
adc
mov
mov
lret
fstp
add
xor
es
in
xchg
and
call
ljmp
cmp
add
mov
les
sbb
inc
popa
gs
adc
or
cmpl
adc
sbb
cmp
dec
mov
jb
into
repnz
mov
mov
jmp
arpl
cmp
aas
insb
sar
mov
add
xor
fistl
sub
test
scas
outsl
loope
sbb
bound
and
subb
fyl2xp1
sar
dec
pop
sahf
dec
and
pop
push
rcrb
mov
mov
sub
out
lahf
jae
jo
mov
add
mov
addr16
sbb
je
js
insb
sbb
cli
fwait
mov
mov
jns
cli
dec
into
movsb
lea
adc
sbb
insb
xchg
in
clc
and
add
sbb
xor
sub
into
add
into
xchg
jae
std
mov
in
pop
adc
cwtl
lods
dec
cltd
cwtl
add
in
lds
pushf
add
jo
jge
mov
adc
fs
mov
leave
adc
pop
jl
pop
shr
fidivl
enter
dec
xchg
nop
scas
aas
mov
jno
and
in
dec
dec
sbb
and
movb
jl
loope
cmp
fidivrs
sahf
mov
loopne
out
xor
jg
mov
mov
mov
mov
add
rcrb
out
push
xor
jnp
and
rol
sbb
bound
js
mov
xor
out
push
sahf
scas
ljmp
mov
or
dec
jmp
jmp
gs
sub
inc
and
push
dec
sahf
iret
sbb
mov
and
movsl
sbb
lret
jnp
loope
gs
push
sbb
or
shrl
inc
aas
popf
stos
fmuls
xor
inc
sub
xchg
loopew
js
dec
jno
push
pop
notb
push
lods
lcall
out
test
inc
dec
cmp
cmpsl
push
xor
mov
xlat
mov
mov
lret
cmp
lcall
pop
pop
push
mov
lret
dec
scas
aad
adc
dec
pop
lods
adc
sbb
pop
xor
and
loopne
es
mov
xor
and
pusha
or
jp
lahf
lea
push
jle
es
dec
aam
sub
ret
movsl
bound
and
add
sbb
dec
daa
les
jg
and
enter
jnp
hlt
add
xor
js
xchg
jmp
pop
lret
dec
or
sub
pop
adc
jb
rorl
xor
add
lret
xor
scas
or
out
mov
xor
sbb
into
jmp
cli
adc
outsb
inc
or
test
outsl
xchg
and
mov
sti
pusha
push
cmpl
jno
rol
je
mov
xor
mov
inc
rclb
xchg
cs
rcll
push
and
in
push
dec
jg
cmp
add
ja
mov
sbb
in
inc
sub
nop
fcoms
scas
dec
or
lret
mov
out
std
mov
mov
or
ljmp
push
xchg
jno
sbb
add
mov
into
clc
dec
aam
xchg
aam
out
cmp
outsb
lds
in
lcall
fcomps
stc
cltd
pop
sub
mov
pop
fildll
pop
xlat
jno
aaa
jb
gs
inc
inc
mov
imul
or
pop
adc
rolb
data16
cld
jo
into
pop
mov
ljmp
push
lods
call
jmp
add
push
push
sbb
into
ret
sbb
ficoml
push
mov
fmul
mov
xchg
cmp
ffree
fs
icebp
fscale
xchg
icebp
repnz
mull
pop
pop
jle
mov
popa
shrl
mov
popf
in
movsl
push
sbb
clc
sar
jbe
lret
fldenv
dec
cmp
mov
mov
data16
xor
cmpsb
xor
mov
and
sahf
pusha
xor
mov
mov
jb
popa
inc
sbb
pop
or
aam
dec
xchg
shll
inc
lea
aaa
int
jbe
xchg
jge
movsl
into
push
adc
lret
sbb
cmc
mov
adc
out
push
push
push
push
inc
cmc
xor
sub
xor
imul
fnsave
jno
arpl
sbb
pusha
sub
and
dec
sbb
or
pop
sbb
scas
or
arpl
cld
outsb
xchg
imul
cmp
dec
or
pushf
popf
xchg
rorb
mov
dec
add
ret
mov
xchg
push
inc
or
jb
test
or
mov
into
out
pop
sub
xchg
das
xchg
push
pop
push
cmpsl
jno
mov
xor
push
inc
mov
mov
idiv
pushf
arpl
mov
fidivl
ljmp
data16
cmp
jle
cs
insb
sbb
outsl
sub
mov
pop
or
in
or
jp
movsl
jmp
mov
les
mov
cmp
enter
shl
inc
add
aas
insl
loope
xchg
push
adc
lods
jmp
pop
aaa
in
ficompl
pop
and
mov
cltd
mov
shlb
pop
push
inc
or
faddp
lea
lret
clc
xchg
dec
outsl
fbld
in
stos
imul
jb
adc
mov
repz
in
out
shlb
xchg
xor
pushf
mov
cmc
dec
pop
scas
stos
sub
sbb
and
pop
adc
push
mov
shrl
mov
xor
ret
stos
stos
addr16
fnstcw
cmp
add
jge
sub
ss
push
rolb
xor
in
stc
jp
mov
xor
mov
lret
arpl
aam
mov
pusha
mov
movsb
popf
xchg
add
mov
std
sbb
jecxz
or
pop
and
sub
movsb
and
push
jbe
les
mov
push
pop
xchg
fdivr
out
xchg
rorl
mov
jp
mov
aaa
lods
out
arpl
fdivrs
out
push
inc
aas
call
pop
dec
paddusw
adc
in
loope
push
loop
mov
in
inc
or
ljmp
popf
gs
jb
shll
loopne
dec
or
bound
jbe
mov
push
bound
idivl
cli
fcos
repz
ror
inc
xchg
stos
arpl
cli
jns
sti
lea
lock
sahf
xchg
jb
lods
outsb
push
lcall
adc
es
xor
cltd
dec
in
lahf
or
inc
test
push
inc
popa
scas
test
push
inc
and
pop
add
push
rcrb
jnp
mov
hlt
sbb
and
stos
enter
hlt
cld
push
mov
cmp
pushl
dec
jle
imul
jl
mov
orb
in
pop
inc
sub
xor
clc
xchg
dec
inc
cmp
imul
xor
push
jns
jno
js
and
mov
fwait
mov
adc
xor
mov
jo
ljmp
notl
cli
push
push
sbb
pop
xchg
mov
jno
lea
test
mov
jmp
xchg
cli
fsts
das
sub
lds
sbb
loope
adc
std
movsl
mov
call
push
ds
lds
lcall
leave
jne
add
push
std
cmp
cli
add
scas
repnz
inc
or
add
in
call
out
insl
imul
nop
mov
jae
mov
adc
xbegin
pop
sar
out
xor
jno
cmpsb
daa
mov
insb
fistps
or
sub
xchg
mov
xchg
gs
loope
out
and
pop
fcompl
stos
inc
jg
mov
bound
nop
orl
popf
in
mov
sbb
adc
or
ficoml
add
mov
int
xchg
sti
fsubrl
mov
xchg
dec
and
decl
xor
jae
push
pop
sub
jle
mov
popa
xor
rcrl
in
pop
xchg
inc
pminub
icebp
frstor
push
adc
cmpsb
addb
inc
ret
stc
dec
add
stc
mov
out
dec
lods
popf
sbb
pop
and
mov
in
xor
xor
fdiv
lahf
out
inc
xor
ror
push
daa
mov
outsb
inc
movsb
and
insb
sbb
jbe
mov
test
adc
inc
lock
shll
cmp
sahf
cltd
mov
pop
js
xor
ljmp
or
adc
jns
stos
adc
dec
dec
and
cli
sub
ficompl
sub
rcrl
inc
pop
inc
xchg
xor
push
loop
sub
imul
mov
cli
movsl
jno
popa
xlat
das
aam
fmuls
jbe
sub
xchg
adc
popf
rcrl
jmp
xchg
jmp
out
push
xchg
xor
mov
mov
movsb
dec
sub
sbb
xor
jp
adc
mov
push
daa
fisttpll
cmpsl
into
xor
imul
nop
cmp
lds
iret
jl
mov
mov
push
xor
insb
shl
cli
rolb
mov
add
stos
pop
xor
test
push
test
or
rcrl
pop
test
sbb
pop
xchg
jns
add
fcmovne
dec
push
mov
daa
push
lcall
inc
cwtl
push
or
and
mov
pop
ret
xchg
int3
mov
addr16
push
in
cmp
pop
jns
loopne
xchg
mov
add
jge
mov
daa
jge
sub
insb
daa
jmp
jo
xor
and
inc
jae
or
sbb
in
fs
enter
lods
sub
leave
lea
xor
xchg
jge
jns
mov
mov
inc
pusha
and
or
or
xor
stc
push
test
movsl
xlat
js
movsl
jg
pop
lcall
jne
out
fs
out
jecxz
sbb
xchg
sub
int3
les
add
adc
sub
lock
stos
pop
and
fsubr
inc
pop
adc
jb
popf
pop
int3
inc
in
es
imul
sub
mov
bound
add
aas
ja
popf
adc
test
push
adc
insb
add
add
outsb
and
cmp
repz
test
inc
test
xor
lods
test
out
lret
inc
enter
mov
sub
mov
test
clc
shlb
xchg
jle
mov
adc
mov
daa
jne
xchg
std
call
add
xchg
or
lea
cld
gs
mov
insb
sub
cmpsl
inc
imul
cmp
jne
inc
sahf
lds
leave
cmpb
cmp
pop
pop
test
push
add
inc
cmp
cs
mov
lods
cli
rorl
mov
mov
lock
mov
add
popf
stc
fidivrl
sti
mov
movsl
dec
inc
test
insl
dec
test
movsl
sbbl
cmp
mov
add
mov
iret
add
hlt
xor
jmp
or
fs
and
push
clc
and
sub
mov
ror
loop
mov
xor
push
addr16
fbld
movsl
mov
aaa
mov
mov
out
jg
add
rcr
fwait
fwait
in
inc
ficompl
sbb
test
into
jmp
jb
mov
pop
cmp
add
scas
test
jle
popf
nopl
jg
or
mov
or
ret
pop
enter
mov
xor
sahf
inc
lods
rcl
mov
pop
iret
xor
cld
and
dec
pop
aas
sar
imul
add
xchg
dec
les
cltd
dec
cld
fs
sbb
adc
jecxz
jnp
inc
cmp
je
int
outsb
lret
pop
fwait
mov
aas
xchg
fidivrl
daa
xchg
out
aas
insb
fisttpll
cli
and
inc
loopne
fs
mov
pop
and
ficomps
movsb
add
ss
imul
mov
sbb
aam
fsubs
cld
dec
clc
ss
mov
add
or
dec
sub
shl
jo
sbb
repz
outsb
dec
xchg
enter
push
lods
test
dec
sub
jg
js
mov
inc
cld
ja
movsl
push
xor
inc
in
pop
xor
sbb
test
pop
sub
xor
inc
test
pop
jne
jmp
das
sbb
cmp
cmp
rclb
dec
pushf
int
mov
xchg
and
lcall
add
test
shll
test
fcomps
fsubrl
dec
bound
and
ret
aad
sbb
adc
push
stos
iret
mov
lods
int3
mov
xor
sti
cmpsl
xor
push
dec
fcoms
lret
out
imul
lret
das
fcmovb
es
inc
test
mov
divl
jmp
pop
addr16
out
fdivrl
cld
popl
mov
and
mov
mov
cld
out
fidivrs
out
inc
sub
faddl
xchg
cltd
jmp
cmp
lcall
pop
outsb
outsb
test
sub
lods
dec
pop
cmpsb
daa
xlat
iret
inc
mov
dec
popa
addr16
dec
or
mov
insl
mov
jb
stos
xor
fldt
ja
inc
clc
nop
push
inc
fs
pop
or
lods
shlb
cld
push
cli
xchg
jae
mov
lods
and
xor
mov
rcll
in
cwtl
add
scas
mov
es
dec
mov
cmpsl
sarb
push
adc
add
into
sub
sahf
enter
gs
push
repnz
into
loop
and
std
add
dec
pop
in
pop
xchg
rolb
pop
fdivrp
xchg
xor
sbb
xor
mov
mov
push
or
popf
mov
sti
out
int3
cli
sub
pushl
lahf
or
jge
adc
xor
fisubl
xchg
pushw
out
xchg
dec
jge
mov
test
test
add
mov
mov
xchg
dec
mov
jmp
mov
ret
fs
mov
das
aas
or
aam
inc
mov
mov
aad
pusha
sub
scas
aaa
imul
mov
sub
push
filds
in
stos
xor
test
jbe
pop
in
sbb
add
xor
push
add
test
test
fsubl
insb
ja
dec
adc
nop
or
dec
mov
repnz
mov
dec
push
dec
bound
hlt
pop
test
inc
push
out
cmpl
xor
or
clc
pop
leave
xor
push
rol
in
mov
adcb
lret
mov
mov
and
xor
dec
xchg
add
or
sbb
fisubl
das
idiv
insl
rorl
mov
lock
orb
xchg
pop
cmp
mov
push
jne
int
rcll
scas
mov
push
cmp
xchg
mov
into
addr16
fistpll
and
cmc
jns
mov
inc
inc
pop
inc
rolb
lahf
mov
fstpl
mov
inc
gs
sub
ja
loop
dec
popa
bound
inc
cli
das
lock
shrl
cmc
jns
sub
sarb
daa
pusha
xor
pop
rcrl
jecxz
sub
pop
pop
cmp
mov
jmp
arpl
mov
frstor
js
adc
cmp
jg
les
jp
fwait
testl
faddl
repnz
test
jns
pop
clc
jl
push
inc
das
test
xor
inc
shll
or
cltd
outsb
outsl
fs
mov
stos
jns
ss
cmpsl
and
repz
push
pop
sbb
cmp
sti
in
fstps
lods
imul
ret
jbe
arpl
jle
nop
inc
sbb
or
jno
cmpsb
cwtl
sub
stos
les
jo
sbb
xlat
adc
gs
lea
adc
fsubr
in
jecxz
mov
pop
mov
ret
incb
or
xchg
push
jne
fcoms
js
mov
lods
mov
out
push
cmp
lods
mov
xlat
sbb
add
lds
nop
push
xor
add
arpl
cs
jnp
enter
jb
jecxz
popa
in
lods
jne
adcl
stc
ficoml
and
mov
int
jmp
lahf
loopne
rcl
mov
mov
adc
popf
add
xchg
clc
fnstenv
pop
mov
adcb
push
inc
negl
jmp
arpl
aam
lods
insb
loop
in
jne
adc
pop
mov
add
imul
inc
cwtl
pop
pushf
in
mov
jecxz
push
cwtl
aam
cld
pop
push
adc
add
insb
sub
cli
loope
mov
subb
ret
jle
pop
pop
xchg
mov
xchg
pop
sub
ret
insb
xor
push
mov
test
mov
jge
out
mov
jge
pop
cmpsl
mov
jle
repnz
ljmp
xor
loop
ds
pop
mov
xchg
xor
sti
jns
xor
cmp
pop
jmp
jae
out
and
arpl
xchg
imul
aam
loop
aad
ja
xor
adc
in
lods
js
sub
push
mov
dec
xchg
inc
add
cmpsl
sub
ljmp
or
xlat
jl
xchg
in
insl
loop
lahf
jo
pop
or
scas
xchg
pop
cltd
in
test
mov
adc
add
cmp
xorl
jge
or
push
mov
dec
mov
fwait
or
andb
sub
out
and
movsb
ljmp
xor
dec
call
mov
insb
push
sub
insb
in
jle
lock
adc
cmp
push
jae
cli
xchg
cmpsb
mov
dec
enter
jno
fildl
fs
lea
add
sub
jl
stos
movsl
xor
js
push
add
cmp
cmpl
mov
push
icebp
orl
stc
pop
dec
sbb
arpl
fiaddl
leave
test
es
dec
dec
pop
fs
mov
dec
xchg
inc
aaa
stos
shll
mov
xchg
push
mov
js
jbe
mov
bound
aas
cltd
shll
mov
lds
arpl
mov
sar
xchg
mov
inc
popa
cmp
dec
iret
scas
or
jecxz
adc
fs
test
cmp
mov
fists
icebp
pop
mov
inc
lahf
insl
aaa
mov
inc
aaa
mov
inc
jmp
adc
test
imul
arpl
js
test
inc
jle
inc
ja
mov
dec
mov
cld
inc
add
daa
xor
sarl
rcll
stos
sahf
out
fdivrs
rclb
fwait
int
cmc
rcrl
pushf
inc
lods
or
mov
pop
out
xchg
jne
or
popa
cmp
sahf
enter
dec
cmpb
dec
or
and
cmp
xor
inc
pop
jnp
es
and
and
and
outsl
lret
jge
scas
xor
sbb
loope
lret
out
notb
sub
lret
pop
push
daa
xorb
inc
sbb
bound
xor
int
sbb
out
sub
sbb
inc
cmp
mov
add
stos
data16
cmp
jle
xor
cmp
push
movsl
pop
adc
insl
lret
inc
jmp
movsl
adc
scas
sub
shrb
add
test
fnsave
mov
jns
pop
xor
mov
enter
cltd
mov
cmpsb
arpl
in
mov
jo
ss
dec
adc
mov
insl
fadds
popa
mov
pop
xchg
cmp
xchg
mov
dec
out
test
cli
jmp
jmp
inc
xor
and
scas
scas
js
mov
clc
inc
cmp
lfs
mov
retw
lret
cmpsl
decb
push
push
loopne
mov
jecxz
jecxz
pop
fistl
popf
jl
inc
daa
mov
cmp
mov
loopne
inc
rcl
repnz
loope
fs
push
jle
mov
sti
push
jle
xor
adc
pop
xchg
adc
clc
inc
adc
lock
mov
lea
out
cmpsl
jno
xchg
inc
jg
int
scas
jno
in
out
lcall
into
dec
cmpl
pop
push
test
icebp
push
push
xchg
cmp
inc
and
imul
and
imulb
in
add
push
jp
arpl
mov
rcrl
sbb
outsb
xchg
int3
sub
scas
xor
add
and
out
mov
and
fwait
adc
loope
fidivl
cmp
and
lods
push
xchg
jo
sbbl
inc
inc
adc
jmp
fidivs
cmpl
push
push
pop
mov
mov
mov
aam
pop
mov
imul
cmc
outsl
or
pop
lahf
std
lret
es
mov
fwait
fwait
xchg
pushf
repnz
jge
sub
sub
ljmp
inc
fisubrl
cmp
cmpl
and
aam
sbb
add
and
jns
dec
clc
gs
sub
in
insl
or
not
fsub
or
push
leave
in
dec
in
pushf
dec
jg
lret
dec
sub
scas
lcall
mov
ljmp
mov
pop
mov
aas
popl
test
push
mov
xchg
cmc
movsb
sub
ljmp
dec
orb
stos
enter
leave
inc
sbb
mov
scas
je
adc
fldz
shlb
test
fildl
ds
test
imul
aam
push
inc
aas
stos
stc
pop
int
repz
sbb
add
movb
mov
push
pop
lods
inc
inc
shrl
xchg
mov
imul
inc
cmp
fmull
xchg
ss
nop
mov
movsb
fcmovnb
ja
clc
int3
dec
inc
sbb
sub
pop
lods
mov
adc
mov
arpl
mov
testl
imul
int
mov
jg
pop
push
stc
rcll
mov
loope
add
inc
inc
inc
cwtl
push
mov
add
lds
ja
cmpsl
mov
or
mov
jbe
pop
adc
mov
pusha
ret
jb
pop
jne
js
and
add
mov
mov
stos
fisttpll
xor
sbb
inc
je
pop
jae
ljmp
lret
cmpsl
pop
dec
mov
call
jb
mov
mov
icebp
sbb
lret
cmp
test
or
fwait
repnz
push
mov
xorb
xlat
lret
adc
mov
dec
sbb
add
pop
pop
inc
sahf
inc
das
mov
lock
sbb
jno
pop
ret
testl
mov
sbb
stc
test
ret
push
in
xchg
mov
leave
data16
or
xor
mov
add
cmp
mov
add
shll
test
int
xchg
xchg
mov
inc
outsl
jl
out
test
stos
push
aam
sub
aam
adc
outsl
nop
mov
pop
jne
addr16
jne
xchg
xchg
repnz
xor
mov
mov
orb
sub
add
adc
fmull
arpl
repnz
mov
les
cs
sub
inc
and
stos
mov
testb
hlt
mov
cld
scas
mov
or
sub
and
dec
lea
adc
and
fs
mov
shlb
adcl
jbe
sbb
in
scas
pushf
or
pop
jmp
inc
aam
fisubrs
and
sbb
inc
jae
int3
jno
cwtl
add
push
jg
fsubl
aas
mov
and
dec
push
dec
adc
mov
xor
nop
jl
bound
and
call
in
out
shrb
cld
adc
cmp
xchg
add
mov
nop
inc
and
adc
adc
lret
sbb
ja
rcrb
rclb
jmp
sbb
popf
mov
outsb
pop
iret
subl
mov
ss
inc
mov
movsb
fs
aam
das
jne
adc
cmpsl
push
cmpsb
dec
fs
jo
rorl
pop
jmp
sub
pop
jbe
jo
mov
jp
jno
pop
ljmp
xor
add
out
fwait
lret
aad
mov
ljmp
push
pop
das
rolb
shlb
shll
stc
adc
pop
icebp
jg
dec
sbb
popf
xchg
xchg
mov
inc
or
gs
test
rcrl
jo
mov
leave
into
sbb
std
mov
lahf
ja
xchg
add
inc
adc
cwtl
jae
push
inc
mov
push
pop
mov
pop
mov
ss
sbb
inc
mov
dec
mov
mov
imul
icebp
jge
inc
add
rorw
cmp
std
clc
jns
lret
push
and
ss
in
pop
outsl
jne
inc
js
lds
nop
xor
push
out
scas
invd
fsub
cmc
pop
andl
and
ret
js
xor
dec
movsb
cmp
cmp
cmp
ljmp
lret
adc
in
sub
into
cmp
enter
and
daa
sub
mov
adc
cli
add
dec
sar
insb
xchg
mov
and
es
fst
int3
jnp
mov
les
test
arpl
mov
lret
add
xchg
and
sbb
movsl
sbb
and
push
push
sub
daa
lahf
setge
xchg
jmp
loop
fisubs
aam
in
sub
cmp
mov
outsb
lret
mov
mov
fmul
or
cli
push
dec
cli
aaa
dec
ficompl
cmp
mov
jne
ja
sub
adc
cmp
in
pop
pop
cmpl
sbb
add
cld
cmp
insl
cmp
pop
pop
scas
inc
addl
jmp
mov
lock
cmp
ja
mov
pop
dec
or
rorb
jno
aaa
sarb
pop
xchg
sub
mov
sbbl
xor
mov
lods
mov
add
cmp
out
add
movsl
mov
iret
mov
xchg
popf
and
icebp
lahf
or
xor
xor
push
je
dec
ret
call
inc
or
and
inc
xlat
fdivrs
data16
xchg
jmp
aas
mov
cltd
adc
pop
out
cld
movsl
and
jno
loopne
outsl
loop
jle
add
pop
xlat
sbb
xlat
xchg
or
adc
iret
xorl
dec
mov
push
cwtl
push
add
xchg
shr
ficoms
clc
das
repz
call
inc
loope
aam
test
fsubl
mov
movb
and
mov
push
fisubs
adc
lods
int3
mov
mov
mov
pop
fiadds
or
outsb
mov
and
popf
mov
and
hlt
add
push
and
cmp
mov
shrb
pop
es
pop
jno
adcb
dec
cld
and
jl
mov
pop
jnp
mov
add
adc
cwtl
das
add
push
in
inc
adc
mov
out
in
aas
sub
pop
icebp
adc
testl
dec
mov
loopne
stos
ljmp
lock
cmpsl
insb
scas
shrb
adc
jmp
add
jae
loope
mov
ret
sarl
mov
sub
mov
gs
pop
sub
lods
pusha
mov
and
mov
jo
insb
lods
imul
insb
pop
sbb
daa
js
adc
jmp
dec
popf
loope
sub
or
pushl
add
mov
xor
pusha
pushf
scas
fildl
in
test
pop
xchg
bound
movl
dec
shr
ja
in
mov
mov
mov
test
cld
sarl
in
mov
dec
pushf
inc
push
add
roll
inc
mov
push
test
jle
fsubrs
sbb
inc
daa
adc
ret
mov
lahf
mov
imul
cltd
ud2
pop
mov
pop
jp
inc
sub
pop
aas
sub
push
fwait
and
xchg
push
jge
inc
lcall
les
pop
sahf
enter
mov
test
cmpb
mov
subb
mov
mov
pop
mov
call
in
mov
xchg
rep
fistps
mov
push
repz
inc
inc
clc
aas
testl
push
sti
mov
repz
mov
xor
push
hlt
stos
pop
push
dec
lods
sti
movsb
push
test
mov
lock
out
xor
loopne
scas
and
mov
addr16
mov
adc
outsl
loopne
mov
sti
scas
push
push
cli
sub
dec
xchg
mov
repnz
adc
pop
sbb
rol
adc
jmp
inc
mov
adc
mov
mov
cwtl
cmp
sarl
xchg
stos
cwtl
fxch
out
into
push
mov
addr16
and
mov
sub
rorb
jle
pop
push
push
inc
xlat
and
mov
bound
arpl
movsl
cs
outsl
aas
popa
scas
or
test
aad
ljmp
mov
pop
andb
lahf
ficoms
xchg
popf
mov
test
push
repnz
aad
jae
and
ret
stc
es
ret
sub
jcxz
mov
ret
push
movsb
inc
xchg
das
mov
ret
pop
dec
or
fdivl
push
dec
negl
ret
jno
dec
addr16
xor
jmp
push
adc
dec
jecxz
mov
mov
and
stos
xlat
jae
inc
pushf
cmp
call
jno
mov
mov
leave
jae
addr16
cltd
pop
nop
mov
mov
xor
clc
xor
jg
inc
nop
mov
add
int3
push
out
in
out
mov
push
inc
pop
fdivrs
cmp
out
push
xchg
push
orb
shl
in
and
jb
out
adc
pop
mov
sub
enter
mov
rcrl
popf
inc
std
jns
pop
fadd
adc
gs
cmpsb
inc
xchg
adc
mov
jle
and
or
sub
xchg
fidivrs
xor
lahf
push
pop
and
sub
daa
mov
mov
lock
add
ds
sub
stc
out
sub
sub
incb
cld
out
dec
cmp
cltd
pop
adcb
dec
lock
pop
add
pushf
rcrb
cmp
sbbb
cmp
cld
mov
fadd
mov
dec
into
xor
inc
jecxz
and
jl
mov
cmp
iret
data16
xchg
push
inc
cmp
mov
jge
xor
mov
xchg
jg
sbb
loop
stc
popa
cmp
xchg
out
lods
mov
mov
cmp
push
cmc
pop
mov
fnstenv
loopne
pop
or
lcall
xchg
and
sahf
lahf
mov
xchg
jns
sbb
pop
push
mov
push
das
dec
adc
scas
mov
push
or
shrb
test
push
hlt
inc
pop
arpl
test
inc
lods
out
pop
pop
xor
and
jg
icebp
adc
stc
or
gs
rcl
or
pop
lods
mov
repnz
sub
xchg
dec
clc
sbb
inc
mov
dec
sub
rol
sbb
push
iret
add
stos
out
adc
xor
in
sbb
xor
pop
adc
rorl
jns
dec
ret
daa
loop
jae
fistl
dec
push
cmc
std
push
sbb
pop
test
fs
call
pop
pop
aam
outsb
daa
rcrb
jb
aas
cs
fldl
xor
sub
movsb
cmp
out
sbb
or
in
lods
jecxz
cmp
movsl
loopne
push
xor
add
cld
mov
test
outsl
sbb
add
scas
pop
xchg
sbb
mov
lret
insb
fsub
and
cld
xchg
mov
or
scas
shlb
pusha
add
in
ret
sub
xchg
push
xchg
mov
add
xor
xorb
mov
ret
mov
popf
shll
and
dec
fadd
inc
pushf
push
mov
adc
int
lcall
jmp
fbstp
ret
test
sbb
add
ret
jg
jmp
and
imulb
lcall
cmpb
push
mulb
mov
add
push
jmp
inc
xchg
mov
outsl
jmp
or
lds
add
cmc
jp
mov
fwait
sub
leave
jnp
lcall
daa
xchg
pusha
fcompl
pop
iret
jbe
sbb
or
pop
imul
xchg
fcmovbe
scas
xchg
jae
pop
dec
push
mov
fsubs
cwtl
insb
push
jb
pop
mov
mov
divl
pop
dec
mov
xor
dec
adc
xor
inc
xchg
sbbb
sbb
and
adc
pop
mov
lret
add
pop
mov
sub
cltd
xor
cmp
in
lods
mov
push
mov
lods
xchg
adc
cmp
psubusw
lret
mov
call
cmpsl
arpl
mov
mov
mov
push
je
ret
push
outsb
fsubrl
movups
mov
sub
push
fdivl
cmc
or
fwait
mov
lret
push
shlb
inc
push
js
ljmp
cmp
imul
sub
push
fs
int3
mov
inc
pop
dec
fisubrs
sti
jbe
pop
les
mov
aas
inc
cmpsb
das
aam
pushf
rcrl
iret
dec
mov
pop
js
mov
pop
dec
shrl
out
jbe
insb
xlat
mov
scas
mov
inc
xor
xor
xchg
mov
lds
mov
sub
xor
push
inc
xor
mov
test
push
or
pusha
jecxz
or
sti
jnp
sbb
xor
add
push
jo
mov
mov
xchg
cmp
hlt
es
mov
dec
cmp
jl
lcall
scas
pushf
rolb
pop
push
push
fldt
popl
xchg
inc
ljmp
mov
and
out
mov
jb
xchg
addr16
push
mov
mov
insb
mov
fwait
sub
ret
add
add
stos
sub
pop
sbb
daa
clc
inc
pop
stos
enter
xchg
or
jmp
into
inc
mov
mov
ret
cld
js
ja
cmp
nop
xchg
outsb
xchg
scas
and
sub
adc
push
cmp
pop
outsb
out
pop
mov
xchg
test
lcall
adc
pop
dec
ret
push
imul
ret
dec
fildl
push
dec
and
mov
test
mov
xchg
rcrb
into
jg
sbb
loop
pop
mov
jb
jbe
mov
pop
add
fsts
lahf
test
push
fisubs
dec
lock
or
movsl
push
mov
xor
xor
ja
mov
dec
xor
mov
arpl
stos
xchg
jmp
andl
mov
cwtl
fwait
enter
jg
lret
jae
push
ds
sahf
imulb
ret
adc
gs
clc
insl
rorl
test
push
sub
mov
imul
aas
outsl
or
push
ja
ret
sbb
xor
pop
sbb
xorl
call
jg
iret
pop
or
push
xchg
ss
mov
xor
sub
inc
cmpsl
inc
outsl
pop
imul
sub
jnp
lods
pop
cmp
mov
testl
jno
imul
jns,pn
shrl
loop
mov
call
ret
mov
xor
and
scas
and
insb
pop
iret
pop
repnz
push
mov
std
adc
and
pop
lock
jnp
lret
mov
imul
mov
or
mov
test
jecxz
fs
push
xor
push
cmp
dec
imul
mov
bound
mov
jmp
jns
int
or
outsb
je
dec
or
add
pop
xlat
out
pop
add
and
dec
orl
xor
xchg
stos
add
mov
xchg
pop
xor
test
and
cli
into
mov
shll
sub
and
outsl
adc
divps
mov
xor
mov
lcall
sub
fisttpl
dec
jbe
mov
cmp
push
rorb
lahf
and
mov
pop
es
divb
out
pop
cmc
and
hlt
mov
jbe
cmp
fimull
arpl
faddl
push
cli
les
push
adc
lahf
mov
mov
jns
notb
sarb
xchg
mov
push
in
ja
shl
out
push
cmp
arpl
pusha
and
pop
adc
inc
cwtl
lret
mov
pop
call
movb
cmp
andb
jmp
cmp
ret
or
repnz
fnsave
cmp
mov
mov
xchg
push
cs
jl
stc
mov
shrl
xchg
jae
inc
sbb
sahf
pop
mov
pop
lock
movsb
orl
mov
out
pop
push
ret
and
cmpsb
mov
and
mov
cld
mov
rcrl
shl
inc
inc
pop
out
xor
and
mov
jmp
mov
xchg
lret
jne
loop
pop
add
shrb
sahf
pop
inc
mov
add
jp
or
test
sbb
dec
leave
testb
pop
mov
cmp
out
out
xchg
lds
andb
cmp
cs
aam
scas
fdivl
push
pop
in
or
mov
xor
inc
pop
lods
push
jmp
pop
ret
imul
sbb
mov
jmp
pop
fwait
aad
jae
mov
sbb
ja
pusha
lcall
popf
cmc
loopne
rcl
push
stos
jns
jns
movsb
mov
outsb
je
mulb
push
jl
mov
lcall
ljmp
add
sbb
adc
jecxz
push
xor
mov
xchg
sbb
enter
lahf
jne
jo
xchg
mov
aad
or
mov
cmp
cmpsl
pop
clc
test
arpl
push
sbb
shll
push
lods
mov
in
icebp
jg
pop
fcmovb
sti
outsl
sahf
js
jle
mov
test
int
ret
jg
push
mov
fistl
sub
ljmp
dec
mov
xchg
data16
push
mov
and
andl
testl
lret
mov
je
outsl
pop
dec
adc
xchg
les
sbb
push
addr16
cmpb
jae
xor
fcomp
je
adc
ficompl
das
lds
push
ss
sbb
xchg
movsl
mov
and
inc
push
sbb
pop
push
mov
loopne
gs
mov
jbe
add
in
add
adc
outsl
and
pop
decb
test
lods
subl
ss
push
inc
repnz
jmp
jmp
ja
nop
cmp
mov
sahf
xlat
push
inc
int3
loop
loopne
mov
pop
sub
scas
int
cwtl
std
leave
mov
fs
adc
gs
lcall
sti
shl
or
push
mov
and
filds
cmc
push
inc
out
repz
scas
xor
fadds
repz
ss
arpl
pushf
adc
push
pop
in
xor
lock
dec
test
ret
cld
sarb
push
mov
testb
shlb
into
adc
icebp
pop
out
sbb
xor
mov
adc
jp
popa
jg
hlt
mov
adcl
pop
in
xchg
mov
pop
dec
orl
cs
pop
add
or
cmpsb
mov
dec
imul
sti
leave
out
sti
push
xor
xchg
sahf
inc
push
mov
out
dec
ret
cmc
inc
test
test
lcall
std
mov
pop
pop
pop
mov
loope
adc
xor
dec
jp
lods
mov
scas
sahf
jns
inc
stc
in
ret
and
roll
push
or
add
mov
push
cmpsl
xchg
xchg
orb
hlt
jae
addr16
sub
jp
mov
and
mov
addl
fs
mov
inc
into
aam
enter
adc
pushf
popf
fnstenv
dec
dec
sub
or
cmpsl
call
test
dec
out
nop
jo
pop
add
cmp
or
sti
jns
enter
lret
mov
fidivrl
ljmp
pop
dec
js
iret
or
into
out
ror
push
pop
or
ss
subb
jns
es
cmp
lea
in
arpl
test
into
or
cwtl
cmp
clc
push
inc
fldl
mov
jo
push
add
xchg
sbb
mov
decb
loop
cmc
daa
mov
mov
push
and
or
outsb
cmp
sub
mov
aad
ds
pop
push
bound
inc
fisubs
movsl
mov
aas
cmp
sub
ror
bswap
pop
add
inc
jbe
sbb
roll
pop
dec
popa
mov
cmp
add
sti
push
sub
inc
in
jl
int3
jge
inc
lods
xchg
mov
adc
popl
ja
mov
cmpsl
or
mov
dec
rol
mov
xchg
test
cmp
jl
mov
mov
outsb
jecxz
dec
movsb
repz
jge
xchg
mov
and
sbb
fiadds
fisttpll
mov
ss
imul
mov
jge
inc
les
into
pop
cld
addr16
and
lods
outsb
pop
shr
pop
sub
mov
shll
fldt
mov
lods
fwait
test
lods
mov
sbbb
sub
xchg
inc
jno
int3
in
pusha
push
pop
in
out
in
lock
shrl
enter
pop
jp
das
movzbl
test
xchg
and
mov
clc
mov
pusha
cmp
cmp
idiv
mov
shll
and
mov
insb
or
mov
add
adc
jns
mov
and
mov
js
xchg
ret
dec
int
mov
xor
loopne
fsubr
dec
cmpsl
adcb
add
push
loope
lret
cvtps2pi
outsb
sbb
adc
mov
cwtl
mov
cmp
inc
shlb
ja
aaa
aas
daa
xchg
jae
push
in
mov
jb
icebp
fistpl
cmp
cmp
jno
rorb
and
movsb
jo
addb
movsl
cld
outsl
sbb
orl
jno
insl
decb
lods
mov
aam
std
cmp
xchg
add
das
insl
mov
lock
adc
and
jp
jno
mov
rorb
inc
inc
cmp
stc
pop
sbb
xchg
push
jno
dec
out
jno
xor
pushf
in
xor
xchg
rolb
pop
or
imul
cli
mov
xor
push
lods
pop
mov
scas
push
pop
jns
fsubs
xchg
movsb
xchg
aas
bound
jecxz
dec
pop
je
add
fsubrl
lods
fbld
push
or
adc
int
cmp
pop
cmpsl
lahf
inc
inc
fbstp
or
leave
jmp
jle
mov
popf
jl
lds
xchg
xchg
fs
dec
hlt
imul
adc
xor
push
insb
jp
arpl
addr16
pop
sti
jae
push
in
mov
sbb
mov
xor
lret
or
pop
adc
adc
rolb
mov
mov
ds
test
inc
dec
push
cltd
jmp
push
imul
sub
mov
mov
enter
mov
xor
jle
cmpl
xor
jb
mov
jbe
mov
jl
xor
pop
add
jne
nop
out
cld
mov
lock
push
xchg
js
sub
jbe
pusha
fistps
sbb
cltd
aaa
out
mov
jg
call
inc
inc
ret
and
mov
mov
lcall
insl
outsl
pop
bound
nop
cltd
das
dec
pop
inc
mov
sub
mov
jl
out
pop
test
adc
outsb
shl
cmp
mov
jp
or
out
inc
pop
mov
adc
jae
cmp
popf
push
in
lret
and
inc
adc
mov
add
xchg
push
and
add
mov
xor
inc
loopne
psubusb
mov
outsb
xchg
sahf
mov
and
push
and
imul
mov
sub
into
or
shrb
jo
sbb
dec
add
in
sbb
loop
addr16
push
out
cmp
lds
xchg
hlt
xchg
lods
ret
inc
fwait
mov
ret
pop
push
and
push
push
out
aas
sub
rolb
cmp
mov
out
push
cmovle
and
subb
sti
ret
in
stc
sub
mov
mov
outsb
mov
inc
mov
lods
dec
xor
pop
mov
jnp
xor
rcr
and
ret
test
push
xor
icebp
push
jb
pop
sbb
bound
mov
dec
cmpsb
xchg
jg
out
jg
inc
push
mov
lahf
arpl
insl
dec
xchg
push
addr16
jecxz
add
or
adc
and
jbe
jle
jp
mov
je
inc
xlat
mov
fldt
lahf
or
es
shrb
cmp
push
and
out
xor
es
cmp
mulb
sbb
lret
seto
cmp
insb
movsb
rorl
push
loopne
in
outsb
dec
ja
mov
les
mov
dec
cmp
std
ja
daa
sub
stos
sbb
and
add
addr16
es
fstl
cmp
mov
adc
ja
push
jg
push
push
cmp
or
lods
call
iret
leave
mov
cmpsb
push
es
jnp
and
subl
jge
aaa
aad
adc
jbe
into
and
jno
fyl2xp1
mov
lret
sub
pop
xchg
or
cld
add
mov
inc
sbb
or
inc
jecxz
sbbl
dec
iret
push
fsubrs
ja
nop
and
mov
ljmp
mov
push
mov
faddp
mov
mov
in
shl
int3
out
cld
loop
and
lret
negb
ljmp
or
sub
mov
iret
xlat
push
push
sub
xor
lcall
and
cmpsb
dec
sbb
mov
negl
cwtl
cmp
subb
mov
inc
daa
wrmsr
subb
jb
jb
insb
sub
mov
and
jle
lea
dec
or
mov
mov
arpl
pop
ss
cmpsb
cmp
fidivrs
mov
into
nop
js
xor
mov
pop
shl
xchg
add
lea
add
mov
sbb
xchg
sub
in
pop
test
jno
mov
jg
pop
pop
jmp
mov
stos
repnz
repz
ds
ljmp
push
inc
dec
or
movsl
mov
adc
cs
icebp
jns
mov
sbb
mov
and
push
jg
shrb
cmp
popa
lret
adc
adcl
push
add
sub
sub
xor
adc
lds
jae
mov
std
cmp
jle
aad
lds
push
sub
jl
ret
mov
bound
xchg
pusha
addr16
mov
xchg
shr
sub
test
mov
pop
flds
add
int
leave
test
dec
push
and
adc
dec
sbb
ljmp
or
mov
add
sbbl
dec
lods
push
or
fldl
sti
inc
shll
push
xchg
imul
into
inc
jns
test
dec
inc
push
push
adc
jae
in
into
iretw
and
sbb
and
rcll
je
loopne
das
in
imul
repnz
test
lods
add
outsl
sarb
push
enter
dec
pop
push
es
jmp
mov
push
xor
out
ret
gs
adc
xorb
mov
mov
push
inc
jnp
jo
pop
mov
cli
inc
jo
stos
pop
cli
or
and
sbb
xorb
sbb
jno
mov
or
mov
dec
xor
cli
or
add
shl
dec
in
outsl
push
jg
jbe
lcall
sub
and
data16
jns
xor
add
arpl
repz
jmp
pusha
pop
lahf
inc
mov
add
dec
enter
jne
clc
scas
sub
out
lock
in
add
push
int
cmp
sub
addr16
cmpsl
pop
pusha
xchg
push
shll
arpl
addr16
repnz
dec
cli
dec
stos
aaa
mov
fcomi
jo
int
test
mov
inc
xchg
cmpsl
mov
dec
cmpsb
sbb
out
aas
scas
into
xor
cmp
fucomi
cwtl
lock
push
fdivs
imul
push
sbb
mov
mov
movsl
sbb
ja
adc
inc
sbb
ja
into
out
pop
and
out
cmpsl
fbld
fistps
notl
movsl
and
sub
addr16
adc
mov
adc
addr16
das
je
pop
xor
cmpsl
cld
in
ret
pusha
rcr
loope
mov
and
pop
lds
cmp
dec
leave
icebp
in
call
pop
test
xor
idiv
scas
int3
popf
ss
adcb
mov
xchg
cwtl
add
outsb
sub
subb
add
stc
ss
subb
mov
mov
cmp
adc
sti
xchg
push
lods
jno
scas
addr16
mov
data16
scas
inc
lock
xchg
xor
cmpsb
call
in
lock
test
stos
cmp
mov
in
mov
mov
jb
das
add
inc
int
or
cmpl
mov
jl
or
pop
sub
mov
add
and
or
subl
xor
insl
push
lcall
enter
imul
lcall
jae
insb
into
pop
mov
jl
repnz
adc
mov
inc
mov
gs
popf
std
xchg
lahf
stc
inc
mov
es
popf
adc
xchg
adc
inc
imul
call
push
mov
clc
push
mov
gs
pushf
mov
sub
xor
sbb
xchg
js
movsl
test
sub
xchg
sbb
ss
dec
pop
ds
sahf
in
mov
mov
xor
jge
jmp
lret
aaa
xor
sbb
mov
scas
inc
rcll
sub
nop
imul
mull
mov
add
push
aam
inc
into
imul
adc
jnp
cmp
imul
cltd
fidivs
sbb
jnp
dec
mov
adc
pop
push
jo
sbb
lcall
adc
hlt
push
dec
popf
and
stc
int3
mov
sub
clc
movsl
cmpsb
cld
hlt
pop
lods
jle
leave
jge
imul
push
movsl
fwait
sub
in
mov
popf
xor
addb
push
xor
loopne
loop
and
es
jle
push
rclb
sbb
fistpl
adc
push
nop
mov
shlb
jno
inc
push
mov
pop
jb
stos
ljmp
mov
lahf
ret
jno
cmp
inc
pop
mov
cltd
sub
lods
pop
mov
imul
negl
push
mov
mov
ret
jo
popf
rclb
movsl
inc
jl
outsb
pop
cli
xor
push
loopne
sbb
mov
fstl
or
shll
jg
pop
sbb
dec
ja
or
out
arpl
mov
push
jg
pop
sbb
icebp
push
cmp
lahf
xchg
jbe
xchg
shll
xchg
push
clc
adc
hlt
scas
dec
cmp
xchg
lds
and
adc
or
mov
in
cmp
in
mov
xchg
sub
in
mov
loop
sub
push
add
and
sbb
pop
adc
bound
push
sbb
ss
stos
ss
or
in
inc
rcl
andl
popf
xchg
pop
push
aas
xchg
imul
mov
stos
inc
bound
dec
mov
cmp
loopne
fnstcw
int3
xchg
inc
jnp
int
mov
call
js
dec
dec
adc
and
cltd
cmpsl
into
orl
fimuls
push
aas
into
xchg
cltd
clc
xchg
or
xor
repnz
push
mov
sbb
inc
sti
lret
xor
push
repnz
add
nop
sbb
push
inc
pop
inc
xchg
std
imul
jge
mov
xchg
jmp
sub
pushf
mov
lock
lret
movsb
in
sti
lea
jns
pop
stc
sub
movsl
clc
mov
cmp
pop
inc
push
push
insb
int
jnp
sbb
cmc
and
jg
pop
jae
movsl
dec
adc
out
mov
lods
sbb
out
outsl
push
das
adc
lcall
int
jmp
xchg
gs
xchg
mov
aaa
push
repnz
in
lcall
loopne
movsl
inc
test
imul
pop
and
jmp
mov
in
out
cmp
xor
cmp
sbb
lahf
cmpsl
sbb
lret
dec
dec
mov
mov
or
dec
cmp
sbb
dec
scas
add
mov
lret
push
sub
bound
cmp
mov
popf
dec
jp
mov
cs
pushf
inc
cmp
push
add
inc
add
xchg
aam
xchg
fists
dec
adc
xchg
mov
sub
xor
push
inc
mov
add
mov
sub
or
dec
rcr
mov
arpl
fisubrl
repz
ja
or
lds
lret
sub
data16
rorl
loope
cmpb
xchg
mov
and
push
jb,pn
iret
fnstsw
mov
sub
pop
test
scas
jmp
not
dec
dec
mov
mov
scas
or
mov
inc
dec
push
addr16
inc
sti
shrb
test
mov
int3
xor
shlb
pushf
js
and
mov
js
jb
pop
xchg
in
cli
inc
add
jne
dec
lods
stc
and
cmpsl
and
mov
imul
mov
inc
out
and
les
push
insl
cmovbe
inc
outsb
mov
stc
sbb
aaa
fsubp
fisttpll
mov
stos
jbe
inc
sarb
dec
mov
inc
rcll
loope
clc
stc
xlat
jns
movsl
push
mov
jne
sarl
mov
and
sub
aad
aaa
mov
cmp
inc
xchg
xchg
jae
mov
out
xchg
xor
adcb
mov
repz
adc
adc
adc
lret
adc
jb
mov
fisubrl
mov
push
ret
cs
xchg
pop
dec
sti
ss
dec
imul
jb
ret
pop
daa
mov
lahf
loopne
int3
sub
mov
insb
xchg
ljmp
inc
les
pop
inc
xchg
leave
jecxz
inc
xchg
ret
jb
cwtl
ja
add
cltd
aas
ret
xchg
mov
and
adc
mov
inc
sbbl
sbb
call
jo
jb
push
jo
fistps
repz
aam
mov
stos
lret
push
aaa
aad
int3
add
dec
lahf
lods
lret
push
and
pop
in
mov
mov
push
sub
sti
out
mov
adc
adc
sub
mov
leave
push
adc
out
sti
pop
xchg
pushf
jno
daa
sbb
in
pop
loop
std
inc
sbb
in
cmpsb
loopne
and
push
and
dec
mov
push
sbb
cmpsb
mov
cmp
xchg
and
pusha
add
jae
mov
int
push
mov
push
mov
or
shl
movsl
mov
cmp
mov
pop
push
inc
addl
popf
sub
push
jmp
push
dec
lcall
xor
dec
push
sbb
mov
lret
sar
outsl
cmp
rolb
sbb
arpl
mov
notl
push
shll
sub
sbb
dec
fldt
mov
mov
roll
js
mov
push
and
mov
rorl
mov
fwait
rorb
dec
push
sbb
out
mov
jp
mov
insl
lds
jle
pop
jge
ss
scas
jbe
inc
mov
inc
jbe
add
inc
xchg
lahf
sbbb
adc
pop
movsl
rcll
cmp
imul
outsb
fstpt
stos
mov
movsb
pop
leave
pop
inc
test
jbe
unpcklps
ficompl
or
test
shrl
ljmp
dec
sbb
xor
pop
cmp
pop
andl
inc
dec
aad
xor
int3
stc
ljmp
xchg
dec
std
bound
mov
push
call
cli
test
insl
mov
dec
gs
sub
enter
cwtl
push
push
mov
mov
dec
scas
push
xor
imul
int
cmovl
daa
es
push
mov
adc
out
bswap
and
sbb
mov
xor
mov
jo
mov
popf
cmp
gs
sbb
testl
addr16
and
and
xlat
mov
mov
lods
mov
cmp
sub
xchg
dec
scas
out
jae
xor
orb
xchg
or
xchg
add
push
insb
push
inc
mov
in
dec
xor
or
js
adc
push
imul
xor
sbb
and
inc
int
jno
dec
jl
arpl
xchg
insb
pop
pushf
in
lahf
jne
cmp
ret
cmp
icebp
lock
mov
lock
push
outsb
cmc
sbb
sti
mov
outsb
jmp
mov
mov
jge
roll
adc
out
mov
mov
xor
xlat
inc
dec
mov
mov
adc
push
lahf
push
mov
int
mov
cmp
testb
dec
pop
shl
pop
mov
gs
cmp
xor
mov
and
pop
jmp
xchg
add
jmp
test
mov
dec
orl
loopne
test
test
pop
pop
jbe
or
add
dec
inc
aas
rol
les
out
pusha
adc
mov
jmp
xor
xchg
cmp
in
xor
loop
cmp
pop
ss
addb
or
mov
pushf
imul
sti
or
adc
push
rcrb
jp
in
cmp
pop
cs
xchg
sbb
dec
or
pop
fsts
or
mov
push
and
push
out
imul
jo
and
pop
xor
dec
adc
in
pop
lods
cmp
icebp
shl
mov
fdivr
or
and
shlb
xor
shlb
insb
enter
inc
lock
pop
std
aam
sub
ret
push
mov
push
jae
and
jb
dec
ja
adc
dec
movsb
jo
cld
pop
sub
pop
gs
pop
and
and
adc
je
push
icebp
ja
outsl
mul
xor
shrb
jns
add
into
xor
js
dec
into
mov
pop
lcall
xchg
imul
lea
idiv
mov
add
das
mov
jo
pop
push
sahf
scas
loopne
in
cmp
aas
and
mov
dec
stos
in
add
adc
adc
jle
mov
dec
call
std
mov
pop
mov
inc
fsubrp
aam
pop
inc
mov
jns
add
jnp
push
cmpb
cmpsl
inc
mov
cltd
mov
rep
mov
shrb
lea
fildll
add
fstpl
data16
stc
cmp
adc
in
movsl
jne
pop
add
mov
test
dec
push
stos
jecxz
sub
mov
ret
dec
icebp
cltd
and
in
adc
push
test
or
stos
adc
inc
aad
cld
lock
sbb
adc
sbb
mov
inc
cltd
pop
imul
sub
push
push
imul
add
mov
pop
or
sub
mov
lea
int3
jmpw
jg
rcll
push
std
movsl
fmull
sbb
pop
stos
add
and
je
arpl
sbb
and
idivb
pop
jne
cmpsl
inc
cmpsb
test
mov
and
mov
mov
dec
ljmp
inc
cmp
and
mov
popa
inc
mov
and
sub
sbb
or
fcoml
mov
inc
add
fwait
out
aam
nop
xor
in
jl
sarb
mov
mov
jb
std
dec
pushl
or
inc
repnz
cmp
lret
dec
pop
lock
pop
adc
mov
lods
pop
jmp
sub
pop
ja
inc
or
xlat
sahf
in
jmp
cld
frstor
xlat
pop
in
lds
fwait
lcall
cs
in
dec
jg
mov
cs
imul
mov
or
push
mov
lods
outsb
inc
mov
nop
movsl
xchg
xchg
mov
dec
cli
push
cltd
jle
xchg
mov
mov
and
imul
jge
fwait
into
lahf
loope
into
pop
lret
mov
popa
stc
mov
push
aas
cwtl
popa
sub
in
iret
std
sub
add
daa
cmp
pop
cmp
fwait
cmpsl
xchg
pop
xchg
loope
bound
sbb
xchg
inc
loop
adc
xchg
mov
and
add
cmpsb
mov
push
pushf
inc
mov
rclb
insb
popa
mov
mov
dec
popa
das
faddp
imul
pop
cmp
mov
cmovs
and
inc
test
sbb
je
push
js
das
xor
data16
mov
xor
cwtl
mov
jb
cs
push
iret
add
stos
mov
scas
mov
pop
mov
push
sbb
mov
aaa
rcrb
mul
arpl
out
aad
insl
pop
int
call
mov
push
jmp
jns
or
pop
sub
mov
fisubrs
loopne
fimuls
cs
fs
jg
mov
push
addr16
sbbb
mov
gs
push
dec
mov
mov
lds
fcompl
fwait
pop
inc
into
call
sbb
mov
in
mov
enter
pop
xlat
xor
fisttpll
xchg
out
loope
je
lods
inc
push
aaa
mov
in
jmp
addr16
leave
lahf
popf
lds
sbb
rorb
sbb
jle
mov
adc
cltd
rclb
add
xor
cld
fisttps
push
imul
je
adc
orb
je
jecxz
push
pop
cmp
out
les
std
sarb
out
pop
gs
outsb
daa
arpl
lea
pop
dec
add
jg
mov
mov
sbb
hlt
push
push
int
lahf
mov
je
push
rcrl
int
push
shlb
into
or
push
xchg
adc
inc
cmp
add
lret
cmp
insl
incl
lds
mov
ljmp
sub
add
rclb
int
jecxz
push
popa
pusha
cmpsb
lods
sub
mov
das
push
fwait
dec
lahf
es
mov
popa
jnp
icebp
push
and
inc
ret
fnstsw
add
adc
add
dec
inc
pop
inc
loopne
xor
mov
and
cmp
cmp
repz
mov
dec
mov
sti
xor
inc
popa
lods
out
in
outsl
pop
jge
xchg
insb
test
xchg
mov
mov
mov
fimuls
das
js
pop
cmpl
add
stos
dec
and
xor
pop
pop
add
sub
gs
dec
call
adc
cmpl
jl
pop
and
pop
cli
mov
mov
mov
and
in
data16
fwait
out
mov
enter
ljmp
into
insb
bound
lds
cs
and
cmp
inc
idivb
push
cmpsb
test
movsb
xchg
xchg
mov
ljmp
mov
pop
enter
movsb
sub
cli
add
inc
je
jne
rcr
pop
jp
iret
cmc
jg
dec
mov
push
insb
mov
rorb
fildl
repnz
xchg
pop
movl
fwait
js
test
cmpsb
pop
sti
pop
out
mov
call
xchg
push
add
ret
cltd
xchg
lods
mov
popa
mov
test
push
sub
mov
into
jecxz
push
stos
mov
dec
stos
adc
ss
add
xor
sub
xchg
push
push
out
mov
gs
insb
ficoms
mov
cs
mov
scas
repz
mov
rorl
in
xor
jmp
jg
hlt
dec
pusha
sbb
push
or
mulb
scas
nop
jne
xchg
inc
pop
popf
mov
inc
in
sbb
fs
mov
or
cwtl
sahf
es
iret
lret
mov
mov
jnp
imul
mov
and
imul
sarb
sub
cld
or
mov
jge
jge
mov
vpmullw
mov
neg
arpl
fnstcw
mov
dec
mov
push
fisubrs
inc
or
loope
aas
clc
adc
push
addl
aad
mov
das
loop
std
pop
subl
shll
adc
xchg
sbb
jp
push
es
push
adcl
jnp
adc
in
mov
ljmp
fldl2e
stos
pop
gs
mov
xchg
popf
clc
ror
lret
nop
repnz
call
mov
rol
xchg
sbb
subl
jns
sbb
int3
add
stc
push
lea
loopne
mov
pop
test
ljmp
shrb
push
add
scas
popa
popa
xchg
jae
insb
cmp
push
repz
in
lret
outsb
adc
pop
fistl
sbb
dec
sub
and
jae
aas
cli
sti
push
arpl
test
jae
add
or
icebp
std
pop
mov
jb
repnz
mov
mov
cmp
fcmovne
cmp
icebp
jmp
push
dec
div
push
push
inc
in
stos
add
mov
and
pop
add
adc
add
sbb
lods
in
int3
mov
sub
sub
inc
mov
push
pop
popf
sub
lcall
xchg
movb
dec
sub
mov
dec
mov
mov
add
loope
movsl
fldl
inc
pop
test
push
icebp
popa
pop
hlt
xlat
mov
out
aas
pop
mov
les
inc
stc
pop
pop
pop
test
js
dec
pop
sbb
jo
pop
add
and
mov
pusha
hlt
or
or
fidivrl
leave
int
sbb
cmp
not
mov
mov
cmp
test
pop
xor
jne
pop
orb
mov
pop
and
scas
and
rcrb
pushf
jae
lea
pop
inc
mulb
popf
dec
mov
add
ja
aam
pushf
shll
push
xor
cmpsl
mov
mov
xchg
fs
lds
stc
and
adc
or
push
sbb
shl
xchg
aas
loopne
test
mov
lock
or
pop
pop
sbb
imull
loopne
add
or
cwtl
jnp
jmp
adc
xor
pop
sub
sbb
mov
sub
cmp
scas
add
hlt
adc
add
enter
bound
xor
lret
adc
and
mov
sbb
stos
loop
mov
mov
mov
ret
inc
inc
cmp
int
lret
jnp
sbb
cvtps2pd
xor
jmp
push
add
push
repz
ja
pop
sarl
jo
jb
out
mov
fnsave
mov
movsb
sti
pop
add
sbb
pop
ret
test
mov
cmp
test
cmc
outsb
push
jp
mov
outsl
daa
ret
aad
xchg
popa
mov
and
aad
call
jecxz
inc
jne
pop
cmp
mov
enter
pop
rcrb
ss
or
hlt
cmp
fwait
or
inc
jecxz
add
cmpsb
mov
repz
in
fisubrl
mov
xor
filds
popa
mov
fwait
lds
push
add
stc
arpl
int
lcall
ljmp
dec
jmp
repz
adc
jb
test
clc
inc
xor
int3
lret
dec
mov
xchg
add
push
inc
xor
stos
fisubs
add
xchg
cltd
adc
hlt
pop
and
cli
jns
loopne
or
push
dec
gs
adc
testl
lret
add
dec
mov
rcrb
movsb
dec
lret
cmp
cmpsb
lea
dec
mov
or
out
pushl
cmp
and
insb
cld
insb
lret
mov
test
mov
gs
and
xlat
sbb
jo
push
and
sbb
sbb
in
sbb
cmpsb
push
sbb
inc
lods
adc
push
popf
mov
pop
sub
xor
jg
das
fldl
cltd
stos
cld
sbb
cmp
mov
mov
lds
sbbb
cltd
dec
add
aas
inc
jecxz
enter
pop
loopne
add
bound
in
push
movl
push
mov
ret
mov
dec
sbb
cmp
xchg
clc
dec
push
roll
std
icebp
inc
pop
push
xchg
out
fldl
adc
cmc
lret
push
stc
inc
ret
mov
out
pop
jl
sbb
cs
push
cmc
imul
nop
adc
loopne
mov
inc
aas
cli
rorl
arpl
gs
add
push
mov
cmp
rcll
sbb
inc
cli
movsl
arpl
insb
movb
movsb
pusha
aad
outsb
jne
xchg
cmp
fimull
fidivs
out
cmp
aas
in
mov
sub
fadds
push
or
sarb
jmp
aaa
fnstenv
pop
cli
xor
fwait
lea
push
inc
mov
je
or
js
testb
sub
mov
es
mov
mov
mov
mov
pop
push
jmp
mov
call
jns
fs
sub
popa
adc
aas
outsl
xor
mov
and
add
push
mov
aaa
ljmp
mov
pop
and
cld
stos
sub
sbb
add
das
out
mov
sub
into
stos
cli
jle
in
push
repnz
enter
das
jae
inc
mov
and
mov
cmp
xchg
cmp
aad
ja
cld
sub
or
icebp
mov
add
and
mov
daa
dec
jno
sbb
mov
nop
bound
outsb
add
enter
aam
outsb
call
fdivs
jl
jno
int3
insl
and
nop
pop
mov
insb
push
lahf
inc
dec
mov
push
adc
mov
cmc
std
pop
stos
pop
lea
outsl
pop
in
jbe
mov
xchg
and
dec
shrb
dec
add
int
inc
push
sbb
xchg
lret
cmpsl
dec
pop
dec
hlt
shl
mov
pop
dec
sbb
insb
mov
sbb
adc
sbb
and
push
outsl
fidivrs
clc
imul
shll
or
push
push
mov
clc
pop
xor
stos
mov
mov
push
pop
adc
pop
mov
mov
push
lods
in
dec
out
lds
nop
pop
cltd
icebp
lret
xchg
push
testb
leave
sbb
shll
ds
cmpsl
repz
add
testl
scas
dec
or
pop
or
lds
stos
scas
cmp
aad
and
fs
ds
and
pop
sub
dec
xor
or
xchg
fldcw
xchg
mov
out
lret
or
lret
rorb
mov
mov
xchg
nop
ret
stos
aad
pop
sti
in
ret
dec
ds
mov
xchg
unpckhps
inc
xchg
dec
pop
outsb
push
mov
sbb
scas
mov
lret
push
test
jns
nop
xchg
pop
lds
notl
flds
xchg
in
inc
xchg
inc
sub
or
mov
sahf
js
sti
int3
mov
stos
jg
clc
push
loop
js
shl
mov
xor
sub
push
cmpsl
dec
add
add
in
fldcw
xor
sub
jl
ja
mov
sbb
lcall
rcrl
fwait
sub
mov
xor
iret
lods
leave
es
cmpsb
out
lds
sbb
pop
mov
je
arpl
jl
jo
fnstsw
inc
iret
out
fcoms
lds
push
sbb
and
dec
test
pop
push
std
insl
cmp
out
push
int
dec
mov
add
inc
cltd
enter
aad
repz
into
mov
jae
call
and
jecxz
lea
call
test
out
inc
add
cld
and
mov
dec
test
mov
cmp
xor
jecxz
jae
or
xchg
lahf
jle
jns
and
test
lea
and
cld
push
sbb
pop
cmpsb
xchg
fldcw
adcb
sub
pop
fcom
cwtl
sub
push
mov
lods
xchg
imul
jecxz
push
call
mov
adc
pop
cli
loop
ror
cmp
divps
mov
mov
push
loopne
cltd
push
mov
pop
out
mov
rclb
mov
jge
push
mov
mov
icebp
mov
and
pop
jmp
leave
gs
cwtl
gs
iret
mov
mov
ds
add
in
int3
cmp
push
cltd
pop
test
dec
and
fdivrl
xchg
xchg
enter
mov
shll
aas
push
cmp
adc
push
mov
das
fnstsw
js
cmp
scas
dec
out
xor
mov
pop
mov
mov
sub
jmp
add
push
jecxz
push
xchg
mov
xorb
fwait
mov
mov
mov
stc
sbb
fnsave
dec
jno
mov
inc
fiaddl
test
mov
push
pusha
fstpt
jle
dec
repz
push
push
or
mov
test
sbb
dec
mov
cmc
loopne
mov
push
or
jecxz
vpsllw
scas
stos
je
xchg
xor
jg
cld
cwtl
popa
xor
out
lea
ret
cli
mov
xor
dec
fisubrl
pop
fimuls
cwtl
push
jo
xchg
frstor
popa
add
and
or
pushl
jns
int
pop
xchg
or
sbb
incl
fadds
ret
and
sbb
and
sti
popa
rolb
subb
lods
stc
sub
cmpsb
sub
cmp
fsubr
push
mov
fdivl
sbb
orl
pop
scas
test
daa
fistpl
ds
repnz
inc
jns
ret
daa
call
jl
jno
cli
adc
jg
fcmovnu
lret
in
sbb
mov
cmpsl
popa
sbb
xor
or
fwait
jmp
adc
mov
pop
inc
rcrl
mov
loopne
pushf
add
jo
jno
jo
dec
xchg
jns
iret
add
xchg
cmp
inc
sar
scas
and
pop
test
scas
lcall
mov
add
push
cld
test
ret
adc
das
aad
jp
push
movsb
mov
stos
xor
sub
inc
mov
pop
sbb
mov
push
mov
xchg
lods
repz
icebp
out
fsub
mov
xchg
mov
mov
pushf
fdiv
push
pushf
movsl
enter
jecxz
out
or
add
sub
mov
cmp
or
out
mov
pop
mov
in
mov
lahf
sbb
mov
inc
pop
leave
test
inc
push
mov
sub
outsb
mov
jle
ljmp
jg
js
sub
enter
fstpt
subb
data16
add
iret
adc
cmp
xchg
test
jns
int
or
mov
andb
sbb
data16
sub
sbb
sub
pop
icebp
sbb
mov
cmp
fidivs
xchg
int3
mov
popf
xchg
popf
mov
cli
aad
mov
sub
clc
lods
aas
mov
push
push
scas
lods
imul
rclb
jmp
cld
cmp
loope
mov
dec
mov
std
orb
and
out
pop
mov
rorb
dec
popa
es
testl
pop
or
sub
jns
mov
sub
dec
mov
xchg
sbb
mov
cmc
loopne
dec
pop
sub
cltd
in
int
pushf
push
test
cwtl
popa
ret
aas
lds
pop
jl
loope
mov
test
mov
adc
push
cmp
das
mov
movsl
sbb
pushf
or
jmp
mov
iret
sbb
ja
adc
sbb
stos
dec
xchg
jne
dec
add
push
lcall
push
lds
sar
test
or
push
imul
push
ret
jb
out
dec
ret
mov
jne
jecxz
outsl
out
push
lods
jmp
mov
push
fmul
cmp
inc
add
mov
cltd
xor
push
movsb
aas
je
in
lcall
movsl
aas
push
dec
aas
insl
ficoms
aam
mov
in
imul
outsb
adc
pop
mov
mov
mov
xor
ljmp
mov
es
enter
jg
aaa
mov
sbb
mov
aaa
nop
sbb
jg
adc
jmp
or
int3
pop
sub
lret
je
xor
add
insb
mov
test
adc
lock
and
sub
mov
shr
pop
cmc
fisttpll
repz
mov
in
mov
sub
xor
adc
aas
adc
dec
negl
mov
xchg
adc
shrl
incl
xchg
pop
xchg
outsl
mov
jae
lret
repz
ror
add
call
mov
fcompl
xchg
jge
dec
cmp
sub
lock
pop
xchg
mov
pop
into
pop
lahf
push
pop
cmp
mov
mov
out
lock
lret
and
mov
rcr
mov
xchg
les
orl
leave
mov
out
das
mov
stc
scas
ja
stc
xor
lahf
push
aad
and
sbb
pop
insb
push
movsb
sbb
and
outsb
xlat
icebp
addr16
push
xor
scas
cmp
mov
sti
xor
out
cwtl
pop
xor
adc
cmp
movsb
inc
adc
repnz
sbb
mov
bound
test
fstpl
xor
jae
sub
mov
popa
stos
add
and
aaa
jae
mov
jg
clc
pop
outsb
xchg
push
out
daa
push
pop
outsb
cmc
xor
dec
iret
add
divl
fsubl
cld
cmpl
jbe
sub
cwtl
out
pop
lea
push
fcomps
jp
push
xchg
sub
pop
cmp
or
jae
push
js
sub
pop
inc
or
pop
push
mov
push
and
push
ja
xor
add
addl
fcmovnbe
xor
inc
sbb
fisttps
lods
cmp
scas
imul
adc
push
push
pop
inc
test
or
flds
mov
jge
repnz
in
xchg
mov
cmp
jmp
xchg
lahf
out
xor
mov
pop
sbb
or
jg
jecxz
pop
sbb
mov
mov
es
mov
xor
pop
xor
lods
xor
jge
xor
popa
jp
das
xchg
inc
mov
test
cmpsl
imull
scas
jmp
sub
dec
sbb
jg
cmp
ljmp
mov
sahf
pop
sbb
test
mov
inc
xchg
cli
lock
pop
es
dec
mov
push
and
cmpsl
xchg
jl
out
imul
xchg
push
loop
pop
ficompl
xchg
test
rolb
and
stos
xor
rcl
cmp
xor
pop
push
arpl
mov
inc
xchg
sub
mov
daa
sar
cmp
push
test
imul
ret
jl
ret
sbbl
int3
sahf
mov
add
inc
arpl
jne
out
leave
movsl
shl
push
push
sbb
pop
ds
in
xchg
fcomps
rol
movsb
aam
ljmp
lods
in
cwtl
scas
push
hlt
cmpsl
add
lds
shl
lret
stc
ret
test
clc
xchg
enter
pusha
inc
cmp
cli
or
sbb
call
leave
pushf
inc
test
push
bnd
mov
stos
enter
xor
fnstsw
add
pop
mov
cmpsl
push
loopne
sahf
lds
cmp
stos
enter
mov
sbb
push
cwtl
aaa
sub
jns
fwait
or
sbb
les
pop
fwait
ss
push
fwait
adc
dec
push
pop
adc
push
xor
or
jo
leave
mov
mov
insb
mov
int
mov
test
je
xchg
gs
cld
sbb
sbb
add
jmp
cs
pusha
jecxz
insb
push
pop
mov
sub
fdivrs
or
loope
sbb
or
sarl
arpl
sub
dec
inc
data16
cwtl
mov
jb
jnp
inc
lret
orb
and
imull
rcrb
fs
int3
inc
pop
nop
leave
cli
cmp
scas
mov
shl
push
push
out
sbb
cmp
jmp
int
pushf
sub
add
or
fisttps
push
add
in
bound
lret
jb
inc
clc
repz
add
clc
mov
sbb
pop
mov
cmp
xor
sbb
outsb
jle
push
cwtl
jle
mov
mov
push
inc
popf
leave
or
mov
xor
ret
jbe
mov
mov
out
jmp
jecxz
cwtl
xchg
push
mov
cmp
jnp
mov
and
test
fildll
fadds
xor
push
sub
push
xor
dec
adc
sub
call
cmp
cld
sub
sbbl
aam
dec
pop
xor
outsl
jecxz
imul
cmpsl
sbb
adc
dec
mov
push
mov
push
ja
pop
xchg
das
pop
pop
stos
sbb
mov
push
fistps
shlb
stos
lret
clc
test
stos
dec
ja
lods
xchg
xor
inc
cld
lcall
stos
jns
and
in
idivb
xor
daa
and
and
pop
or
mov
pop
stc
push
movsb
mov
sub
and
popf
pop
push
mov
adc
push
arpl
lret
stc
add
fisttpll
rorb
xchg
sbb
and
dec
xor
int
add
push
aaa
pop
inc
arpl
jbe
fisttpll
pop
mov
stc
popf
dec
iret
mov
dec
rol
ret
or
ffreep
inc
jg
sbb
sub
mov
rcpps
xchg
rcrl
xor
cmpsl
call
mov
and
xchg
mov
fstpt
jnp
andw
call
sahf
push
lret
push
cmp
mov
andl
pop
mov
and
enter
es
nop
push
mov
mov
fbstp
pop
sub
stos
pop
fiadds
jnp
bound
sbb
xlat
pop
in
push
test
pusha
jmp
imull
xchg
mov
xchg
jne
and
sbb
int
and
push
adc
push
mov
imul
imul
imul
stos
int
mov
pop
cmp
pop
sbb
or
loopne
push
insl
xor
jecxz
or
rcrl
leave
lcall
cmc
push
ss
testb
insb
fsubr
popa
shl
insb
stos
sub
xor
mov
ljmp
mov
rorl
jp
and
imul
adc
mov
mov
pop
add
outsl
inc
push
sub
jns
jmp
push
pop
pop
and
or
stc
jno
jmp
aas
mov
leave
adc
aad
dec
adc
mov
pop
xor
add
sub
fcmovb
leave
mov
jge
ss
add
stc
inc
push
outsb
adc
pop
dec
jecxz
int
jns
test
adc
or
mov
xchg
pop
lods
push
test
sbb
ja
mov
cmp
mov
jo
rolb
push
ja
mov
pop
lock
xchg
cltd
test
repnz
dec
pop
push
mov
pop
sub
stos
sahf
pop
or
or
adc
push
dec
sbb
cmc
mov
cmp
push
xor
ss
fwait
aaa
jb
pushl
sub
push
out
mov
inc
inc
scas
repz
in
ljmp
push
nop
out
int
sbb
dec
stos
cltd
stos
leave
mov
ret
pusha
pop
fdivp
push
mov
or
mov
pusha
clc
test
cwtl
cmp
rclb
mov
xor
push
add
xorb
push
jmp
xorl
push
xchg
pop
and
sbb
sub
andb
pop
fs
mov
adc
sbb
adc
fcomps
or
add
test
fistl
ds
adc
sbb
into
sbb
in
outsl
push
sbb
popa
hlt
or
imul
mov
aam
push
fmuls
cmp
add
pusha
shr
add
lret
outsb
pop
mov
mov
xor
lea
cmc
stc
add
mov
adc
push
pop
inc
aam
add
lods
rolb
pop
adc
cmp
pop
or
pushf
push
push
js
mov
push
pop
sahf
ds
movsl
push
aas
cmpsl
or
insb
push
adc
ficompl
push
jbe
sbb
mov
mul
mov
out
jbe
sbb
loopne
inc
mov
and
adc
jnp
jecxz
jns
add
mov
movsb
mov
pop
lea
imull
inc
cmpsb
hlt
imul
jp
loope
jecxz
loope
mov
mov
cmp
or
cli
pop
rolb
nop
ret
push
lock
inc
xchg
lods
push
push
insl
cmpsb
jnp
lret
sti
iret
cmp
popf
add
inc
fldenv
fbstp
and
sbb
ficomps
mov
out
stos
icebp
inc
mov
sub
addb
out
aaa
ds
jge
adc
pushf
sbb
cmpsl
jle
lret
fistl
lea
aad
stc
lret
xor
repnz
or
xchg
hlt
out
pop
dec
add
scas
decl
sbb
and
jns
xchg
push
jmp
cmp
out
insb
lds
mov
cmp
mov
xchg
mov
adc
mov
pop
mov
sbb
cmpsb
fstpt
lcall
jge
dec
pop
pop
xchg
xchg
jb
xchg
sub
add
inc
sbb
xor
mov
mov
imul
mov
and
pop
stos
orb
jne
in
sahf
call
loope
loope
pop
pop
mov
sbb
xor
jne
mov
cmp
insb
std
adc
sub
cmp
pop
jg
mov
lret
rcl
mov
test
repz
jae
xor
sahf
mov
cld
push
inc
jbe
test
ret
mov
dec
add
sbb
mov
xor
mov
aaa
out
test
loopne
xchg
repnz
outsl
lock
mov
lcall
add
std
inc
jae
push
push
sbb
loope
out
bound
and
in
int
lea
divl
add
sbb
cmp
out
jmp
gs
push
mov
and
add
sbbl
gs
dec
add
jbe
mov
mov
dec
cmp
imull
data16
shrl
rcrb
mov
outsl
adc
adc
mov
mov
gs
inc
imull
fbld
scas
push
lods
clc
test
jno
out
outsb
mov
mov
movsl
fsubrl
add
add
xchg
push
push
xor
rcrl
mov
jno
push
icebp
cmp
bnd
xor
ret
test
and
sub
decl
cmpxchg
imul
dec
ja
jmp
cwtl
bound
jne
push
fisttpll
xchg
out
sub
sub
or
addr16
push
mov
dec
ds
loope
and
test
hlt
xchg
xchg
mov
loope
adc
jge
jb
push
cs
push
mov
fstps
test
orb
lret
push
xchg
dec
push
cs
mov
xor
loope
stos
jae
icebp
loop
mov
cmp
xchg
add
leave
fcoml
and
sub
or
lods
lcall
out
icebp
ret
data16
mov
rcrb
movsl
xlat
pushl
cs
mov
pop
movsb
mov
test
loope
mov
or
jl
pushf
andb
mov
in
mov
xchg
icebp
rorb
test
in
adc
sahf
adc
mov
ffree
lcall
into
jae
int
lock
adc
test
sbb
call
or
inc
repnz
movsl
out
jb
or
mov
je,pt
test
jg
xor
cli
jecxz
pop
jle
cmp
stc
xor
or
cli
clc
frstor
insb
fstl
mov
add
mov
loop
sti
and
push
hlt
mov
cs
in
ss
popf
add
mov
aas
jns
mov
mov
dec
sub
jg
push
sub
cmp
inc
cmp
fmuls
mov
cltd
arpl
std
es
xor
adc
sub
dec
mov
jno
enter
xchg
jmp
enter
ds
xor
data16
cmc
das
pop
add
mov
in
cmpsb
das
mov
xchg
xchg
push
add
sahf
icebp
lock
aad
jmp
sub
mov
or
xor
pusha
jo
clc
mov
inc
add
jno
cmp
pusha
daa
mov
adc
push
jne
pop
mov
sub
jno
je
mov
pop
shrl
push
inc
mov
loopne
out
repnz
scas
pop
jns
xor
xor
adc
push
ljmp
mov
fs
sbb
xchg
lds
and
es
sbb
repnz
repz
and
dec
leave
int3
test
mov
sbb
iret
imul
mov
add
in
fwait
mov
fnstcw
inc
mov
je
sub
add
xor
ljmp
or
lret
push
push
shlb
or
pop
stos
inc
inc
mov
mov
cmp
cmp
push
xor
outsl
mov
or
pop
cld
mov
inc
outsb
mov
je
pop
ret
xor
icebp
jp
mov
cmp
jns
and
push
jge
xor
stc
cmp
dec
out
mov
pop
movsb
and
sarl
in
dec
pop
outsl
lahf
xchg
repnz
scas
sbb
inc
fmuls
add
int3
pop
arpl
scas
or
xchg
mov
repnz
addr16
inc
sbb
aam
adc
addr16
jp
push
insb
xchg
stc
testl
push
jle
cmp
rol
out
lods
and
mov
je
jp
push
scas
rcl
xchg
add
xchg
mov
or
loopne
cld
push
ret
push
outsl
push
pushf
jne
and
ds
and
test
pop
add
jbe
mov
pop
xor
xchg
jmp
stos
add
and
maskmovq
iret
cmpsb
push
test
or
xor
mov
fbstp
mov
cmpsb
jp
dec
lock
movsl
rcl
in
sub
sbb
call
push
fiaddl
mov
jno
xchg
jmp
mov
insb
or
inc
hlt
sbb
test
push
and
movsb
xchg
ss
xlat
ret
sbb
sahf
adc
add
das
rsm
mov
insl
outsl
jns
jae
inc
and
inc
shlb
cmpsl
aam
adc
inc
btc
or
aaa
push
lods
add
pushf
fnsave
mov
xor
pushf
pop
mov
push
jl
sbb
ret
cmp
xchg
add
xchg
cld
pop
stos
and
lods
add
orb
mov
pop
test
push
xchg
sub
mov
mov
add
into
jb
outsb
push
popa
cmc
fs
xor
imul
aaa
and
movd
out
call
mov
xorb
mov
inc
jbe
loop
loope
inc
ja
ja
cmc
or
ds
adc
frstor
jae
sbb
adc
adc
cld
sub
shll
adc
test
shrl
js,pn
pop
xchg
or
fcompl
movsb
or
jecxz
mov
xchg
loop
addr16
jmp
sbb
rol
popa
repnz
mov
lret
and
or
dec
lret
push
mov
lret
inc
ret
arpl
sbb
orb
repnz
and
mov
in
jns
je
repz
rcrl
jnp
mov
jl
sbbl
mov
shrb
or
jnp
jecxz
and
es
xor
jle
sub
or
shr
loopne
xor
out
jg
add
lcall
inc
add
lods
ret
into
imul
xchg
test
bound
inc
or
imull
mov
pop
pop
pop
cli
sub
add
and
jecxz
and
and
mov
adc
adc
mov
mov
imul
rclb
test
inc
pushf
xchg
mov
into
sti
xchg
cmp
inc
adc
dec
lods
daa
sbbb
push
setae
lea
jae
mov
xlat
je
xchg
and
pop
daa
jno
shr
js
inc
jmp
mov
dec
xchg
sub
jl
pop
cmovg
scas
and
push
subl
pop
sub
insl
sub
xchg
dec
sbb
push
popf
cmpsb
and
sbb
or
insl
mov
test
mov
mov
je
flds
pop
dec
out
xlat
mov
xorb
mov
xchg
lret
dec
pop
cmp
dec
xor
loop
xor
adc
ret
insb
shrb
dec
pop
lock
rcrb
shr
xchg
andb
lods
mov
xorb
stos
sub
push
pushf
aas
clc
test
decl
loope
push
pushf
push
xchg
stos
push
icebp
fidivrs
shll
sub
enter
aaa
dec
and
ror
scas
push
sub
mov
pop
xor
mov
scas
inc
mov
testb
cmp
xchg
int3
lcall
push
es
mov
movsb
mov
aad
pop
push
or
pop
cmp
ja
leave
pop
out
jmp
rcrl
xchg
xchg
repnz
cmp
xchg
xchg
xchg
loope
fisubl
dec
aas
test
jle
cmc
aas
jecxz
pop
mov
fistpll
movsb
add
jecxz
imul
sbb
test
push
scas
xor
lds
pushf
or
shl
lea
std
out
push
jge
inc
aad
ret
xorb
add
adc
es
mov
dec
daa
call
xlat
jge
es
add
loop
lods
popa
jnp
push
or
jmp
mov
sbb
int3
sbb
inc
push
enter
mov
xchg
sbb
fstpt
fisubl
cmp
ljmp
sbb
in
out
cmp
inc
pop
dec
arpl
dec
lea
and
or
fidivrl
inc
inc
ffreep
test
stc
mov
add
sahf
lods
inc
cmp
mov
push
adc
dec
popf
sub
outsb
into
add
push
lds
out
sti
jmp
aas
mov
fidivrl
lds
or
test
shlb
addl
push
inc
inc
lock
sub
insb
leave
packssdw
pop
xor
mov
loope
mov
pusha
ret
jg
jno
jecxz
fs
pop
mov
shrb
aam
jno
jmp
idivl
or
push
jecxz
pop
pop
mov
dec
scas
in
sub
push
add
sub
mov
inc
push
fwait
xor
clc
jmp
test
sub
or
sbb
les
inc
jb
leave
pop
xor
mov
nop
shl
add
sbb
sub
lret
pop
or
int3
scas
shlb
cltd
inc
in
inc
sub
pop
int3
mov
inc
xchg
shlb
xchg
call
cmp
in
andl
das
xor
cmpb
rcl
orl
repz
das
cmp
lods
xchg
mov
icebp
adc
mov
inc
inc
fists
test
sti
aam
mov
icebp
xor
and
test
jnp
and
and
mov
sbb
xor
out
sbb
pushf
icebp
ss
aam
mov
imul
or
sub
mov
dec
ljmp
adc
push
adc
push
jp
pop
cmc
sbb
jg
in
mov
push
cmc
sbb
add
arpl
adc
or
rcrl
jnp
push
dec
mov
fs
aas
addb
ret
pop
xor
pop
into
mov
clc
or
popf
in
scas
cmp
push
test
mov
xchg
mov
jo
adc
adc
cld
jno
push
dec
mov
or
sbbl
clc
lock
add
fsubr
pop
aad
bound
push
int3
jmp
addl
ljmp
xor
xor
imul
rclb
cmp
dec
popf
je
sub
sbb
clc
imul
jge
jbe
adc
dec
fisubl
test
fidivrs
leave
into
fidivs
adcb
xor
sub
ljmp
jo
mov
cli
ss
dec
xor
rol
xor
adc
lret
mov
jne
and
outsb
shl
scas
mov
gs
mov
hlt
jo
stos
xchg
cmp
aas
mov
dec
cmp
pop
or
push
test
jge
fnstenv
lcall
sub
sub
jle
xor
push
ljmp
sar
rcr
xchg
adc
jge
sbb
xor
dec
pop
push
mov
mov
push
add
and
pop
fnsave
mov
outsl
adc
lahf
test
pmaxub
lock
mov
loopw
ss
pusha
mov
xchg
push
xor
jp
loopne
insl
and
pop
or
popf
dec
cmpsb
test
bound
cmp
je
pop
aad
push
dec
cmp
xchg
push
jno
test
pop
sbb
cmp
adc
or
mov
mov
lods
adc
sbb
enter
sti
js
mov
add
lahf
sar
pop
andl
sub
insl
adc
xchg
xchg
mov
bound
sbb
faddl
inc
sbb
and
xlat
jnp
cmp
aad
subb
jmp
and
cmpsb
xchg
pop
cli
cmp
adc
sbb
loope
push
fisubrs
mov
xlat
je
mov
mov
xor
xorl
xchg
jmp
adc
lahf
fnstenv
sub
adc
jo
xor
mov
int
std
mov
xor
rcll
int
sub
add
cmp
push
bound
adc
daa
movsl
stos
pop
ds
inc
pminub
leave
mov
mov
in
movsl
fsub
add
push
pop
inc
call
ret
xchg
mov
jns
aam
add
adcl
and
cmp
fstl
popf
imul
jo
or
cmp
pop
pushl
push
push
inc
shlb
cwtl
mov
lock
pop
and
lock
enter
sub
xchg
lods
hlt
hlt
lahf
rolb
jns
mov
push
push
out
add
insl
les
insb
sarl
mov
pusha
dec
inc
arpl
lret
sbb
xor
scas
add
testl
clc
insl
push
faddl
mov
nop
test
test
cmpsl
inc
leave
push
xchg
ret
icebp
loop
pop
cltd
adc
pop
xchg
insb
mov
mov
scas
stos
push
mov
and
mov
inc
out
cmpsl
decb
into
lea
xchg
mov
push
mov
dec
sbb
in
adc
in
pushf
push
push
orb
mov
insl
sub
xor
xor
push
pop
les
out
bnd
pushf
test
add
cmp
jecxz
mov
ds
loopne
jecxz
icebp
daa
bound
pusha
jns
jge
stos
out
enter
jnp
fcmovb
sub
test
stos
xchg
xor
nop
sbbl
out
push
mov
mov
pop
mov
dec
lahf
sbb
call
mov
test
sti
mov
cmp
cmp
into
mov
xor
inc
or
xchg
mull
mov
repz
lahf
xor
stos
in
rcll
in
mov
popa
jnp
or
sub
sub
lods
out
stos
push
sbb
or
pop
iret
xchg
bound
ficomps
cmp
bound
int
xchg
push
aaa
icebp
push
andnps
ljmp
faddl
mov
pop
xchg
cwtl
xor
cwtl
in
and
inc
subl
repz
filds
nop
mov
enter
testb
add
lea
adc
jnp
mov
enter
je
or
xor
daa
mov
add
cmpsb
outsl
repz
test
enter
sbb
inc
sbb
pop
loope
mov
or
xchg
jmp
xchg
sbbb
negl
push
add
jmp
adc
pop
or
lahf
das
lods
mov
pop
push
mov
mov
int
dec
imul
rorb
je
sub
pop
dec
imul
nop
sbb
das
adc
mov
mov
cmc
jns
mov
aam
adc
imul
push
adc
hlt
cs
es
xchg
mov
mov
fsubs
pop
sub
push
pop
mov
dec
fdivs
insl
insl
push
jmp
in
cmc
push
dec
je
fstp
scas
xchg
addr16
sub
jmp
and
jmp
inc
mov
lcall
push
fwait
pop
xchg
fistl
rol
push
xchg
stc
and
fldenv
and
into
dec
call
and
xchg
xchg
mov
push
addr16
das
add
adc
repz
add
subl
in
mov
pop
xchg
test
bnd
xchg
mov
cmp
bound
lds
jecxz
lret
fs
test
pushf
xchg
aad
inc
sti
leave
sbb
cwtl
jp
cmp
rcrl
mov
dec
ret
dec
push
cwtl
mov
rol
dec
push
and
mov
hlt
jle
xchg
sbb
popa
and
lret
mov
call
lret
jno
inc
test
mov
test
fs
sbb
xchg
pop
or
fisubl
mov
cs
or
sub
aaa
cmp
test
insl
js
jae
sbb
cltd
add
shrb
call
mov
dec
jb
mov
inc
fdivp
cld
dec
cmp
test
fsubl
jp
and
jbe
dec
mov
push
cltd
xchg
iret
push
and
dec
sub
fwait
ret
test
es
repnz
ds
xchg
aaa
fs
mov
sbb
push
dec
popl
cli
cmp
outsl
loop
mov
jmp
dec
pop
pop
cmp
fdivs
sbb
xchg
push
add
mov
sbb
jg
pop
hlt
fsubl
and
je
aad
sbb
mov
inc
push
dec
cmp
test
or
jge
mov
sbb
in
xchg
dec
into
inc
mov
mov
enter
rorl
mov
sbb
int
into
rcrl
dec
dec
loopne
push
mov
add
daa
rcl
mov
iret
xchg
mov
xchg
sar
or
rcrb
adc
nop
enter
iret
cmp
xor
imulb
ficoml
push
xchg
cwtl
ds
pop
mov
xorb
adc
lods
sbb
test
mov
jl
divb
decl
xchg
xchg
rcrl
sti
jge
push
pusha
mov
fmuls
int
sbb
add
test
test
pop
stos
imul
add
xor
ficompl
insl
addr16
mov
psubw
in
pop
xchg
repnz
jnp
push
mov
cwtl
div
pop
mov
jno
fdivs
mov
call
stc
sbb
in
adc
pop
dec
jnp
fcoml
xchg
outsb
sarl
les
and
jno
mov
mov
mov
adc
lock
mov
mov
rol
gs
cmp
sub
xor
sarb
shrl
mov
sbb
xchg
std
mov
arpl
sbb
aad
std
insb
or
sarl
sahf
mov
cmc
push
inc
xchg
inc
mov
aas
out
arpl
jmp
sarl
das
in
mov
fisttpl
xlat
dec
mov
aad
dec
push
movsb
xorb
jmp
fildl
lret
xor
xchg
dec
adc
test
leave
lret
xor
pop
mov
lock
add
imulb
mov
cli
fsub
cld
movsb
outsl
inc
xchg
sbb
inc
jae
inc
stc
mov
jns
repnz
cld
cmp
insb
movsb
dec
sub
and
dec
fs
jl
xor
lcall
mov
sbb
out
pop
out
pop
movl
mov
ficoms
dec
sbb
xor
outsb
arpl
push
test
in
aam
xchg
add
dec
mov
sbb
sub
sub
out
decb
push
xchg
les
rclb
mov
xor
les
fmuls
sbbb
in
jno
mov
mov
xchg
pop
pop
jnp
mov
jo
imul
pop
push
imul
mov
fwait
insb
sub
dec
mov
stos
xor
sub
call
ja
push
cmc
enter
or
jecxz
mov
gs
and
pop
fucomi
iret
cs
scas
ljmp
addr16
xorl
inc
or
inc
and
pop
adc
pop
ss
cwtl
popa
inc
in
scas
adc
mov
pusha
xchg
add
arpl
in
cli
test
lcall
enter
popa
in
or
sbb
jge
jns
rcll
aaa
adc
in
popf
clc
fwait
inc
mov
lcall
and
lea
mov
stos
std
arpl
xchg
leave
sub
ret
xor
mov
mov
into
pop
cmp
xor
orb
add
out
cmp
js
data16
cmp
and
mov
dec
popf
jno
scas
xchg
inc
test
cli
int3
insl
popf
scas
iret
clc
mov
or
or
xchg
sahf
aam
frstor
insb
aas
sbb
push
pushf
subl
xor
clc
jmp
sub
jbe
daa
adc
shll
in
imul
test
pop
cmpsl
sbb
sub
stos
dec
push
ss
mov
fistps
mov
flds
pop
sahf
stc
adc
lret
jae
in
mov
enter
or
add
fcomps
adc
xlat
cmp
xlat
sub
fidivrl
mov
jo
push
or
repnz
or
mov
insl
pop
lcall
lcall
ss
pop
mov
dec
add
push
dec
push
jmp
jg
pop
inc
sub
sub
in
cltd
dec
pop
fbld
push
mov
mov
xchg
mov
out
push
mov
mov
sub
movsb
shrb
shl
cltd
push
cwtl
push
mov
pop
add
fmull
mov
cmc
in
je
xchg
ret
xchg
inc
mov
mov
int3
lahf
sbb
andl
sbb
pop
push
fwait
add
test
cmpsb
lea
ljmp
xchg
ss
es
cmp
dec
jge
jp
out
arpl
cmpl
inc
cli
adc
push
mov
mov
iret
and
mov
rol
test
push
ja
js
rcll
or
xchg
jnp
pop
lahf
jns
in
mov
js
mov
jns
pop
sbb
data16
lahf
jp
jmp
enter
pop
mov
lahf
xlat
enter
mov
inc
movsl
sbb
popa
fsubrl
xchg
xor
push
loop
orb
clc
xchg
add
ja
mov
neg
cmc
cli
xor
push
jecxz
add
adc
lods
inc
mov
fstp
mov
out
sahf
ja
dec
sbb
bound
xor
rcl
mov
xor
or
out
sbb
add
jo
adc
outsl
xor
nop
lock
mov
xor
jnp
add
das
push
lock
out
fstps
fists
dec
int3
mov
aaa
mov
sub
js
inc
bound
inc
jae
icebp
or
mov
enter
rep
iret
cmp
enter
push
or
cmp
jge
lods
pop
mov
xchg
dec
xorl
stos
inc
fmulp
xor
inc
cwtl
dec
jbe
push
cli
push
xorb
shlb
cmpsl
xchg
int3
or
inc
jnp
sub
into
test
dec
or
or
ds
hlt
push
jle
cmp
pop
sahf
lret
out
in
adc
inc
test
bound
and
and
rcl
iret
icebp
rclb
push
js
hlt
enter
lods
movsl
lcall
bound
jnp
mov
movsl
rcll
stc
stos
clc
lcall
jg
push
cmp
adc
fstpl
adc
jecxz
and
push
push
repz
xchg
fstl
adc
icebp
dec
inc
sbb
dec
fistpll
arpl
bound
lahf
repnz
icebp
cmpsl
pop
stos
ja
mov
icebp
dec
repz
cmp
xor
ss
xorb
inc
xchg
xor
cmp
jl
out
xor
repnz
test
data16
sbb
stc
inc
subl
ljmp
movsb
cmpsb
fwait
in
xorb
ds
add
aad
jge
mov
and
je
or
ljmp
pop
sub
xchg
mov
cmp
xchg
and
mov
dec
pop
sar
mov
pushf
and
sub
subl
lret
add
jno
pop
lods
je
and
lret
or
push
sbb
mov
sbb
fwait
dec
pop
mov
fdivrp
addr16
repnz
dec
add
clc
dec
and
movb
iret
xchg
inc
pusha
jle
jae
cmp
jne
mov
cwtl
in
xchg
bound
shll
cltd
inc
xchg
int
mov
jmp
mov
fwait
lcall
ret
pop
shl
les
xor
mov
cmp
mov
jb
andl
xchg
sti
lea
out
xlat
and
out
mov
xor
cmp
lcall
popf
dec
int
test
decb
cs
push
aam
mov
les
sbb
std
sahf
pop
inc
sti
sbb
push
mov
sbb
in
data16
jl
in
sbb
cli
sub
sbb
pop
stos
add
into
ja
and
fsubrs
imull
ret
and
std
fstpl
lods
push
jns
push
test
sub
xor
addr16
xchg
daa
inc
xor
or
pop
popf
jp
jb
stc
jnp
loopne
sahf
xchg
xor
mov
bound
jle
xorb
scas
cmp
dec
pop
scas
ljmp
inc
xchg
mov
insl
loope
jno
les
xlat
mov
popl
lahf
ficoms
outsl
pushf
test
dec
dec
inc
movsb
dec
pop
lcall
jne
inc
jo
jecxz
fdivrl
or
jmp
push
std
es
adc
pop
enter
sbb
out
cld
mov
shlb
ret
push
mov
lea
push
mov
inc
lock
movsb
lcall
lret
jae
aaa
add
addb
xchg
mov
xlat
aaa
pop
mov
icebp
mov
xor
popa
aas
and
scas
sbb
mov
mov
dec
out
pop
inc
in
hlt
mov
jnp
lods
or
mov
repnz
mov
inc
pop
out
jecxz
cmp
xor
push
cld
adc
out
sarl
or
push
outsl
xchg
ljmp
mov
mov
xchg
lods
push
fisubl
sub
sbb
pop
shrb
mov
mov
sub
lahf
les
and
push
cmpl
push
add
pop
mov
dec
xchg
mov
push
ljmp
or
sti
sarb
sahf
inc
push
xchg
mov
jns
add
jns
sti
jne
cmc
push
mov
popf
jmp
push
jb
fsubl
pop
mov
in
lcall
cs
jg
jmp
add
popa
int3
outsb
adc
daa
mov
mov
mov
lock
sbb
jl
inc
dec
xchg
add
dec
ds
sbb
jo
cmc
shrb
das
loopne
addr16
das
inc
fidivrl
adc
xchg
nop
mov
xchg
mov
out
jmp
xchg
sbb
push
aaa
cmp
jb
adc
inc
addr16
and
jecxz
mov
ljmp
xor
jo
std
aam
jo
inc
pop
and
pop
mov
test
leave
loopne
arpl
mov
and
lea
popa
add
add
sarb
pop
in
add
mov
push
sbb
test
cmp
aam
cltd
pop
dec
mov
adc
not
pop
mov
inc
hlt
adc
in
call
pop
cmpsl
nop
loop
fisttpll
cmp
outsl
sbb
jo
pop
dec
dec
adc
popa
xlat
mov
aaa
mov
mov
mov
addr16
test
leave
and
ljmp
cmc
divb
nop
test
or
enter
inc
leave
popf
pop
jge
cmpsb
pushf
icebp
mov
out
idivl
and
pushl
test
lret
push
xor
mov
xor
cmc
mov
push
fnstenv
and
adc
or
xor
cmp
shll
rcrb
ss
dec
clc
jecxz
add
loop
cltd
and
lcall
jp
inc
push
ret
into
sub
das
es
jle
jbe
insb
pmuludq
idiv
sahf
add
mov
ds
into
mov
mov
xor
fs
aaa
es
pop
ret
push
lock
mov
pop
add
mov
in
ljmp
push
outsl
mov
les
sub
and
lea
pop
jle
lods
cmp
icebp
sbb
push
popa
popa
inc
xor
adc
xchg
adc
adc
mov
xor
cmp
nop
movsl
das
xor
lahf
push
sahf
sub
xchg
dec
or
xor
xor
dec
pusha
mov
adc
test
cld
mov
lret
pop
cmp
add
xor
pusha
xlat
or
or
testb
mov
xchg
popw
inc
pop
and
stos
aas
mov
fcoms
push
or
jbe
dec
loope
test
pop
out
jne
inc
repz
mov
and
inc
xlat
push
dec
cmpsb
hlt
dec
test
outsl
es
addr16
jbe
jg
adcl
or
mov
mov
push
lock
fsubl
sar
mov
jb
mov
and
iret
inc
int3
nop
sub
mov
xor
addr16
xor
ljmp
into
call
lahf
push
mov
sti
push
fld
mov
inc
jbe
sub
nop
xchg
xor
xchg
pop
orl
adc
inc
rcrb
lcall
test
stos
orps
pop
shll
push
push
ret
push
fildll
mov
test
inc
pop
repnz
xchg
adc
jno
ja
sub
ds
test
cmp
gs
inc
fisttps
pop
adc
mov
sub
int
out
pop
gs
fsubrs
fidivl
call
add
addl
push
or
aaa
push
sub
scas
add
mov
mov
in
dec
pop
ss
mov
and
sub
subl
adc
divl
sahf
ds
repz
sub
sub
andps
pop
out
insb
int
into
xor
mov
sbb
cmp
lods
scas
iret
pop
syscall
sbb
lret
pop
adc
mov
pop
mov
inc
ja
das
xor
inc
inc
sub
sbb
aad
fnstcw
dec
test
out
cltd
cmpsl
in
lret
jb
test
dec
xor
sbb
cli
lret
iret
out
add
subb
call
add
sub
aad
pop
sub
imul
push
iret
sbb
push
dec
pushf
and
mulb
cmp
jl
mov
jb
insl
js
clc
std
test
push
sub
test
cmpsb
stos
fmulp
inc
leave
imul
xor
imul
push
negb
xor
xchg
pop
xor
fstl
outsl
neg
add
outsl
mov
pop
sbb
scas
adc
scas
ljmp
jl
lret
cmp
jo
inc
imul
inc
xchg
outsl
shrb
insl
sahf
aaa
iret
fwait
xor
iret
ret
sar
or
pushf
icebp
cmp
xor
test
jae
and
es
scas
push
nop
hlt
jp
out
in
outsb
pop
mov
and
fdivs
push
and
adc
add
fwait
or
mov
jl
pop
inc
shlb
dec
lods
jnp
lock
cmpsb
cwtl
dec
push
mov
sbb
add
push
into
cmp
mov
jecxz
pop
xchg
xchg
add
and
jns
sbb
pop
stos
in
xchg
repnz
mov
fidivrl
mov
mov
fmul
mov
test
push
jl
ds
inc
jo
or
test
mov
jge
popf
pop
and
out
loope
or
andb
cltd
add
aam
scas
stc
stos
dec
loop
xor
adc
pop
dec
sti
cmp
sahf
push
push
lahf
mov
addr16
jl
fistps
or
repz
out
ret
jnp
jo
mov
mov
icebp
mov
jb
subl
jecxz
inc
sub
mull
hlt
cld
cld
xor
fisttpll
outsl
mov
int
sahf
mov
cmp
push
pop
les
lret
xor
outsl
ret
int
xchg
pop
jecxz
movsl
enter
adc
dec
out
jmp
adc
push
mov
in
fdiv
cwtl
stc
mov
pusha
sub
xchg
xchg
cmp
data16
call
addl
movsl
sbb
fs
hlt
loopne
test
jns
mov
movsb
xchg
idivl
mov
jmp
inc
sbb
add
repnz
mov
call
cmp
jnp
xchg
cmp
jbe
faddl
incb
iret
mov
mov
push
mov
pop
outsl
not
add
insl
data16
sub
push
mov
ret
arpl
push
icebp
repz
mov
int
mov
dec
jge
mov
lahf
sbb
pop
rcr
push
sub
or
outsl
inc
dec
arpl
adc
pop
push
inc
xor
andl
out
or
and
aas
jmp
pop
test
in
lds
and
int3
xchg
lds
rcll
xlat
in
sub
cltd
fstpl
adc
inc
fs
nop
jecxz
shrb
mov
adcb
stc
jb
lret
xor
insl
or
and
mov
and
dec
std
cmp
sub
jo
mov
enter
mov
fs
cld
addr16
in
pop
fs
fistpll
ds
jp
mov
add
xor
xchg
loope
pop
clc
xchg
cmp
pop
push
jns
ret
pop
cwtl
sub
sub
hlt
push
add
push
mov
aam
push
imul
into
pop
fs
andb
mov
stos
sbb
out
gs
jp
dec
jmp
cmpsl
mov
into
inc
cs
daa
mov
xchg
int
divb
outsl
adc
sub
cmp
andb
dec
movsl
call
jl
sub
push
mov
sub
test
push
leave
in
pushf
and
in
xchg
cltd
and
xor
push
and
xchg
pop
lock
shlb
pop
cmp
aad
mov
and
cmc
lahf
roll
imul
sub
aaa
cmpsl
dec
jnp
leave
xchg
cli
mov
lods
cli
pop
xchg
stc
cmp
into
and
shrb
mov
insl
dec
pushf
adc
test
xchg
adc
fildl
gs
mov
stc
imul
mov
jns
lods
out
mov
les
sub
pop
sbb
mov
xor
pop
ja
mov
in
push
and
add
xor
push
imul
fsts
clc
or
cmp
push
pop
sbb
mov
pop
pop
inc
xchg
dec
dec
das
push
pop
mov
fnstcw
fs
xor
pop
cld
and
and
jecxz
mov
or
sbb
fldt
sbb
scas
rorl
ds
cs
cwtl
js
pop
sbb
out
mov
scas
push
xchg
sbb
out
stos
ficoml
repnz
push
insl
pop
and
lea
cmp
sub
adc
scas
insl
mov
pop
stc
xor
ljmp
out
fbstp
ficompl
sbb
xchg
push
push
stos
adc
xor
push
sbb
pop
xchg
ds
shrl
fiadds
adc
mov
sbb
aaa
leavew
dec
into
jbe
fldlg2
arpl
jge
mov
pop
pop
dec
jmp
adc
int
xor
push
pop
jns
into
sbb
popa
mov
xchg
xor
pop
cmp
arpl
jle
ret
inc
aad
xor
mov
and
sub
fsubs
jecxz
scas
mov
das
or
and
xchg
iret
jecxz
outsb
push
dec
mov
mov
push
add
dec
out
mov
shl
push
adc
lret
cmp
inc
outsl
sub
or
aad
cli
xor
add
push
cli
aad
xor
mov
xchg
int
mov
push
and
mov
xchg
in
ljmp
sub
push
cmp
add
ret
add
jae,pn
jns
bound
sub
sbb
outsl
mov
or
jle
enter
inc
cmp
sbb
push
jne
sbb
pop
xor
mov
dec
jno
mov
shl
push
pushf
vpsubusw
dec
cltd
push
call
adc
stos
std
mov
mov
and
push
ds
add
push
negb
shl
pop
ljmp
push
push
xor
sub
insl
sbb
mov
leave
shlb
mov
dec
pop
filds
sbb
out
loopne
out
fisttpll
test
dec
inc
pop
inc
inc
xchg
packuswb
cmp
cwtl
adc
int
adc
add
clc
push
fimuls
mov
jle
xorb
ja
adc
ss
pushf
mov
das
decb
mov
fnsave
pop
jecxz
add
adc
add
fldl
stc
inc
in
xor
push
pop
rcrl
out
mov
xchg
and
enter
adc
rorb
gs
dec
fidivs
inc
fisubrs
sbb
stc
scas
fs
mov
inc
out
rcl
jmp
clc
add
or
cmp
xchg
cmp
or
movsl
cmp
cmpsl
sub
ret
pusha
fnsave
in
pop
daa
call
jmp
repz
lahf
add
call
and
sahf
sbb
sub
lcall
and
test
dec
xor
or
mov
add
loop
cmp
pushf
push
dec
bound
or
popf
dec
rorl
shl
lods
clc
mov
out
jle
pushf
je
sub
mov
or
jmp
sbb
mov
in
pop
cmp
push
xchg
push
adc
xchg
jg
test
lds
ss
xchg
or
scas
jb
jg
call
adc
fnsave
jne
xchg
mov
add
push
mov
and
repnz
movsl
sub
mov
gs
xchg
jmp
decl
push
xchg
cld
imul
dec
dec
jge
xchg
xchg
xchg
inc
push
mov
jo
sub
addl
into
cs
push
mov
pushf
cmp
das
lcall
xor
xchg
mov
insb
scas
pop
inc
add
sub
jb
mov
sub
mov
or
nop
lods
push
cmp
pushf
cmc
mov
test
into
ljmp
test
test
jae
fsts
fnstenv
and
popf
loope
in
or
mov
into
lret
jl
in
aas
pop
adc
imul
mov
pop
xchg
push
bound
mov
lock
loop
mov
mov
leave
fcoms
xchg
cmc
lcall
enter
cmp
mov
loope
out
out
cmp
les
das
dec
and
fucomip
mov
fidivs
movsl
mov
rorb
cmpsl
pushf
movsl
fsub
push
lcall
pop
inc
ljmp
mov
adcl
mov
push
mov
movsb
xrelease
inc
sbb
jg
enter
pop
xor
push
subl
fcompl
and
lahf
push
icebp
aas
and
mov
pop
mov
inc
cltd
je
cmp
outsl
scas
and
pop
push
out
inc
cli
pop
and
je
push
mov
nop
enter
dec
xchg
cwtl
cli
mov
sub
xchg
mov
pop
popa
pop
inc
push
pop
jecxz,pt
xor
mov
add
cld
fsubl
lret
push
mov
xchg
sbb
and
test
push
rclb
pop
pop
inc
imul
fcoms
sarl
sub
hlt
and
imul
movsl
push
add
dec
daa
xchg
and
mov
mov
imul
out
xlat
das
orl
fcmovnbe
in
jne
stos
mov
stos
pop
imul
jbe
imul
imul
dec
vpsubsw
lock
jbe
fwait
add
jbe
ja
movhps
ss
lahf
jecxz
pusha
outsl
mov
mov
inc
test
and
rclb
dec
inc
mov
cmc
xchg
push
jge
stos
push
mov
imul
or
mov
aaa
cmp
dec
ror
sub
sub
mov
mov
add
add
dec
loop
cli
les
inc
mov
in
in
lret
lods
mov
fwait
push
mov
adc
sub
pushf
lret
push
push
and
inc
outsb
mov
xchg
cmp
pop
inc
pushf
cmp
push
xchg
push
jl
and
insb
popa
ds
sbb
loope
jne
insb
inc
push
pop
cmp
ljmp
adc
loope
push
adc
je
cs
out
pop
sbb
fs
cmpsl
daa
mov
imul
cmp
xor
push
scas
call
insl
inc
jl
ret
cmc
int
adc
in
xchg
dec
fcmovbe
int3
adcl
lret
cld
dec
stos
xchg
cltd
fstpt
xchg
pop
or
outsb
icebp
mov
xchg
xlat
add
das
cli
fisttpll
mov
push
jbe
movsl
lds
jge
sbb
negb
jo
out
and
daa
dec
popa
and
aad
sub
mov
or
rorb
mov
test
mov
outsb
insl
add
insb
stos
lahf
in
pop
gs
push
sbb
mov
mov
scas
outsl
mov
xchg
cmp
insb
mov
in
push
jne
inc
icebp
cmp
dec
jns
sbb
or
mov
loope
jne
insb
ss
add
insb
mov
xchg
aad
or
cmc
cld
sub
ljmp
addb
xchg
fisttps
sub
pop
cmp
dec
pushf
jle
in
rol
cmp
sbb
std
push
lods
fdivrs
and
pop
fsubrp
xor
repz
inc
adc
jmp
mul
divl
jmp
push
jno
into
mov
xor
mov
jne
mov
adc
cmp
xor
lea
ljmp
jg
xor
lock
popa
cmpsl
jmp
std
loop
adc
and
daa
sbb
sub
cmp
adc
cmp
addr16
sbb
xchg
pop
mov
mov
test
imul
hlt
dec
mov
cmp
mov
jae
loop
das
xchg
sbbb
les
popf
add
sbb
mov
test
lods
mov
sbb
sbb
and
and
call
mov
iret
xchg
mov
ret
mov
dec
adc
inc
dec
mov
adc
jg
jns
mov
push
pop
pop
mov
psubb
cmpsb
loope
outsb
or
sub
xchg
push
adc
pushf
pusha
es
or
xor
arpl
aad
mov
in
cmpl
sbb
push
test
push
jo
mov
outsl
cmp
xchg
push
sbb
lods
xchg
xor
leave
dec
popf
mov
adc
addr16
imul
cmp
adc
inc
rorb
repz
addl
ret
in
out
fstl
ret
xchg
xor
cmp
scas
in
pop
pmuludq
ljmp
jle
pop
pop
js
dec
pop
ret
outsb
cmpsb
mov
add
xchg
jae
add
mov
pop
ljmp
es
push
movsl
scas
jns
mov
mov
or
push
mov
leave
sub
test
aaa
xor
mov
idivb
fldl
mov
xchg
jp
popf
movsb
cmp
mov
pop
xchg
daa
sub
repz
or
loope
jmp
rol
insb
mov
inc
and
sti
inc
sub
jo
xorb
movsl
and
or
lcall
sahf
lods
int
imul
xchg
dec
loope
scas
xchg
xor
nop
pop
test
test
jbe
mov
sbb
or
mov
sub
jnp
fisubrl
nop
fcompl
xchg
inc
popf
daa
push
add
mov
pop
or
inc
loope
imul
das
fbstp
aam
jb
repnz
dec
xchg
subb
stos
pavgb
mov
repz
xchg
in
pushf
push
aaa
in
fldcw
jbe
insb
jp
out
jae
arpl
or
subl
sahf
int3
je
mov
imul
jno
clc
nop
adc
mov
mov
adc
nop
mov
sub
add
inc
add
xchg
cmc
shrl
fsubs
ffreep
clc
mov
movsb
lods
xchg
push
pushf
roll
push
ret
push
setl
lods
out
out
nop
lahf
repz
xor
cwtl
push
shlb
clc
dec
dec
sub
push
shl
lods
and
push
or
jg
mov
add
cs
in
cwtl
subb
cmpsl
xor
aaa
add
daa
stos
jg
fmul
push
or
pop
inc
add
cmp
inc
sub
xchg
fdivl
in
sbb
jmp
mov
adc
cltd
ljmp
fidivrs
cmpsl
or
mov
sub
mov
mov
mov
ljmp
addr16
insl
adc
popf
out
icebp
insl
sbb
sarb
jl
vunpcklps
and
cmp
xchg
fisubs
xor
nop
dec
jle
jne
or
inc
mov
fistpl
out
dec
add
mov
sarb
add
fwait
add
or
push
daa
and
outsb
add
imul
push
cmp
jecxz
lock
cmp
mov
or
subl
adc
js
push
mov
lcall
clc
aas
rcrl
sub
and
push
xor
std
push
cmp
iret
ljmp
idivl
sub
inc
dec
adc
dec
dec
in
imul
jle
test
cmc
jo
xor
into
outsl
inc
jns
pop
ljmp
std
ja
mov
add
stos
jmp
xchg
adc
cltd
stc
ds
dec
mov
fcompl
rolb
lret
jb
in
in
ds
pop
cli
xchg
cmp
test
mov
xor
jp
jge
cmp
jbe
ja
sarb
mov
cmp
lock
xor
xchg
mov
and
call
jmp
leave
jle
mov
and
dec
pop
sub
fcompp
push
scas
lahf
push
xor
jge
mov
jp
sahf
aad
int3
call
pop
inc
ss
sahf
xchg
ret
je
push
lods
pop
dec
jp
dec
data16
imull
jge
jns
dec
add
dec
es
outsl
loope
imul
movaps
add
inc
outsb
cmp
adc
xor
push
shl
mov
movsl
aas
cmp
xchg
inc
sets
xchg
mov
and
mov
mov
push
in
and
ficoml
int3
fimull
pop
push
cmp
and
bound
popa
and
repz
or
hlt
jl
add
push
loopne
clc
data16
xchg
adc
push
push
lret
out
xchg
int3
jae
cmc
movsb
sub
lock
enter
lret
loop
mov
pop
mov
test
push
sbb
add
in
cltd
nop
cmp
sbb
insl
adc
out
aam
adcl
inc
cmp
lahf
mov
imul
cli
lahf
cld
insl
cmp
lock
push
inc
mov
xchg
aad
sbb
cltd
fs
jp
or
mov
cmpb
xlat
push
lret
cwtl
iret
sti
insl
mov
mov
jge
gs
cmp
xlat
mov
movsb
pop
push
out
roll
pop
xchg
inc
std
iret
aas
or
push
sbb
add
sti
jle
inc
and
mov
insl
push
xor
sub
sbb
mov
ja
int
je
outsb
arpl
adc
loop
sbb
stos
sub
mov
mov
jb
mov
fsub
movb
cmp
loopne
outsb
pop
sbb
call
leave
mov
leave
xor
or
pmulhw
and
sti
push
and
inc
push
mov
bound
adc
push
hlt
inc
adc
mov
testl
loopne
xor
mov
movsb
push
or
fldcw
rol
in
xchg
stos
pop
insl
sub
pop
jb
jl
mov
out
pop
js
push
sub
dec
insb
aam
cmc
add
ja
jbe
cmp
fisttpl
xchg
push
daa
call
pop
xor
cs
push
or
mov
cmc
jns
clc
pop
xor
inc
in
and
mov
and
sbb
jbe
pop
outsb
int3
mov
sub
repz
loope
jge
push
jns
jle
mov
ja
inc
and
or
dec
dec
pop
or
add
pop
test
gs
sub
jnp
jns
in
xor
shrl
repz
in
and
pop
jb
dec
inc
inc
xlat
push
jle
inc
stos
adc
lret
sub
mov
dec
rcrb
sbb
es
or
cmc
rol
outsb
cmpl
fcomps
and
and
or
repnz
nop
inc
dec
sub
cmpsb
push
cs
repnz
adcl
popa
ret
cmp
loope
sub
sub
in
xchg
xchg
mov
or
sub
adc
psubw
dec
mov
cmpsl
adc
jecxz
sub
sbb
aad
jl
jle
xor
cwtl
icebp
mov
in
mov
cmp
adc
push
test
int
mov
out
sub
int
jae
jmp
test
scas
lret
mov
gs
rcl
ja
pop
cltd
push
ljmp
imul
jae
or
cmp
inc
mov
mov
jl
push
test
loope
cld
xchg
inc
adc
dec
nop
pushf
xor
test
push
fdivr
or
sbb
mov
xchg
jbe
xor
cmp
je
loope
sbb
xchg
js
aaa
xor
mov
push
scas
mov
xor
jle
jecxz
cltd
clc
mov
and
fnsave
and
lods
cltd
mov
pop
sub
inc
rorl
mov
mov
outsl
rolb
pop
lcall
aaa
sbb
or
pop
adc
add
adc
jno
pop
xchg
or
leave
pop
int3
enter
pop
flds
add
cmc
or
fmul
pop
xchg
add
arpl
stos
or
stos
es
les
mov
sub
fsubp
xchg
movsl
inc
dec
xor
xchg
ds
add
push
mov
test
xchg
xor
pop
sbb
mov
add
scas
mov
push
xchg
and
cld
dec
dec
cmc
and
or
cld
cmp
mov
lea
cmp
fnsave
in
popf
sbb
in
stos
leave
xchg
in
inc
mov
aad
push
in
negl
aam
divps
fucomi
sahf
imulb
cli
hlt
loopne
ss
lahf
fs
sub
jp
cmp
jl
ret
push
jb
pop
xchg
lock
or
stos
jp
lret
mov
loop
sub
inc
incb
frstor
cmpsb
rorb
insl
in
jno
sub
jp
hlt
xor
pop
rol
push
inc
xchg
pusha
cmp
mov
pop
mov
bound
outsl
movsb
dec
sahf
adc
insb
push
in
mov
push
aaa
mov
pushf
and
xchg
push
arpl
subl
xchg
ss
xchg
mov
dec
mov
cmc
push
das
cltd
in
jp
cmpsl
add
mov
lds
iret
cs
mov
jns
jne
cld
pusha
fnstsw
pop
xchg
cmc
cmp
and
and
dec
ja
pusha
or
xchg
mov
xor
push
ret
mov
or
cmp
inc
sub
push
cwtl
arpl
std
je
dec
sbb
mulb
scas
inc
sti
adc
mov
mov
mov
mov
into
push
mov
mov
sub
xlat
decl
int
rol
subb
or
ret
jns
movsl
lods
ja
push
mov
sbbl
lds
adc
cmpl
add
lods
les
inc
push
dec
pusha
or
jo
cltd
subl
stc
test
out
xor
jo
pop
pop
or
sbb
cmc
mov
lods
lds
movsl
jnp
jge
ss
je
ljmp
out
adc
aaa
daa
lods
je
sub
jle
aas
cs
repz
ds
cmp
dec
icebp
in
cmc
mov
icebp
rsm
ljmp
je
fldt
cltd
add
lock
repnz
jns
xchg
sub
and
mov
jbe
jmp
inc
andl
inc
add
int
scas
mov
aaa
cmp
jbe
push
xchg
sbb
aas
push
mov
xor
leave
bound
repz
sbb
push
jle
xchg
rcrl
or
or
dec
roll
je
orb
sub
cld
xchg
add
addl
mov
add
add
inc
cmpsb
mov
mov
outsb
cld
push
mov
arpl
popf
and
sbb
leave
mov
inc
push
rcr
nop
cli
les
out
cmp
jae
sahf
cmp
mov
push
xchg
shrl
vpsadbw
and
fwait
andl
dec
adcb
jg
jp
ret
aam
jge
xlat
mov
sbb
sbb
lcall
rcrl
lahf
pop
pop
pop
call
cmp
jbe
test
xchg
sbb
lcall
mov
mov
sub
dec
ljmp
test
loopne
xchg
ret
add
fs
xor
cmp
inc
and
in
aaa
xchg
icebp
push
scas
into
iret
frstor
icebp
jecxz
inc
not
lcall
add
rcrb
cmpl
jmp
mov
dec
push
inc
data16
add
xlat
xchg
sarl
jnp
add
or
orb
into
inc
adc
sbb
arpl
lods
and
cmc
cwtl
pop
adc
scas
out
out
xchg
inc
pop
jp
jbe
pop
out
and
adc
out
lods
mov
xchg
cmp
int
mov
pushl
sub
clc
in
mov
sub
dec
ss
jecxz
pop
cmp
and
xor
and
add
sub
in
popf
out
xchg
jmp
fcmove
push
bound
mov
dec
adc
fiaddl
mov
xchg
popa
sbb
xchg
and
pop
mov
adc
fcoms
xchg
or
push
mov
mov
mov
push
gs
pusha
jno
ficoms
movsl
adc
lcall
dec
sub
cltd
icebp
icebp
push
popa
subb
fstl
les
gs
xor
cmp
jg
pop
mov
xlat
xchg
out
movsl
xor
fdivl
data16
ss
lcall
and
xchg
fsubr
or
dec
mov
xlat
ljmp
mov
jge
jle
cmpsl
jmp
or
cmpsb
xor
sub
stos
xor
nopl
xchg
lret
dec
arpl
lods
sub
mov
mov
or
cwtl
xor
inc
in
xchg
xor
push
mov
jle
lock
fwait
push
flds
out
jecxz
mov
sub
mov
rorb
xchg
popf
adc
arpl
xchg
les
in
mov
sbb
and
push
sahf
pop
mov
outsb
loope
lods
roll
sbb
in
xchg
cmpl
dec
xor
popf
mov
fistl
mov
fbld
fwait
js
lock
sub
out
shlb
mov
pop
int
popf
lds
pop
dec
add
and
lock
push
mov
jb
es
jmp
sahf
push
xchg
mov
xor
das
repnz
lods
insl
xchg
pop
iret
cmpsl
sbb
rcrl
sub
and
out
and
movsl
push
lret
push
pop
out
dec
call
iret
xchg
dec
mov
push
sahf
jp
sbb
cmp
loopne
push
ret
jle
shrb
outsb
icebp
sbb
arpl
in
cmp
dec
shrb
repz
outsl
sub
cmp
lea
nop
out
icebp
pop
mov
cmp
das
adc
xor
pop
mov
das
dec
cmpsb
xor
mov
jae
call
imul
cld
es
mov
mov
or
pop
jae
cmp
imul
aaa
sub
arpl
sahf
mov
shll
imul
ret
jae
push
push
cmp
push
cmpsb
xor
and
out
enter
adc
push
ds
out
adc
test
les
ret
push
cmpl
les
adc
pusha
jl
jle
sahf
outsl
push
fdivl
lret
test
xor
in
fistpll
cmp
arpl
mov
xchg
movsl
dec
or
insl
lea
add
in
xchg
mov
jmp
xor
fldcw
lahf
inc
aas
orl
out
sbb
out
sub
xor
pop
fistpl
adc
test
enter
aad
and
fwait
icebp
mov
adc
cmp
mov
lods
add
pop
scas
fistpll
jmp
cmpsl
out
out
dec
jae
daa
mov
addr16
cwtl
scas
fimuls
pop
into
cwtl
add
adc
push
push
jecxz
popf
adc
and
pop
cmp
inc
pusha
arpl
mov
sbb
rorl
sahf
mov
dec
leave
xor
call
push
outsb
fdivr
jmp
xchg
inc
mov
cmp
pop
or
fistps
in
outsl
arpl
push
mov
repnz
pusha
pop
pop
adc
pop
loope
mov
sti
fldcw
push
fstp
push
or
adc
jge
pop
pushl
jbe
pushf
push
iret
scas
rclb
pop
into
stos
sbb
adc
and
mov
inc
or
or
mov
test
mov
subb
rolb
out
xchg
iret
pop
sti
add
and
adc
or
lcall
mov
or
addb
xchg
adc
fsubrl
add
dec
ret
jb
testb
popf
adc
repz
mov
adc
es
mov
and
movsb
pop
fs
popf
mov
outsb
fisubl
xor
jno
call
repz
xchg
sbb
dec
mov
jge
js
sti
jo
rcll
mov
ret
outsl
orb
cltd
icebp
cmpsl
enter
insb
popl
jno,pt
cltd
inc
insl
inc
sahf
jb
lods
loopne
and
inc
jns
adc
pop
dec
xlat
mov
out
iret
xchg
shrl
movsb
inc
aaa
test
subb
fidivl
jno
scas
push
push
mov
rcr
jle
jl
leave
push
loop
jb
shr
fdivl
mov
push
pop
and
lret
mov
dec
push
cmpl
arpl
cmp
xchg
mov
dec
aam
or
and
cmp
sub
das
addr16
mov
cmp
mov
int
popf
jl
popf
subl
push
ret
cwtl
and
mov
jb
icebp
movsb
stos
lods
aaa
repz
xchg
pop
ja
dec
ds
dec
subl
cmp
fidivrs
fstpl
xor
xchg
push
mov
pop
aad
lods
test
xor
push
or
jo
sub
xchg
and
pop
inc
iret
cmp
sub
addr16
pop
rclb
imulb
or
xchg
pop
outsl
bndldx
mov
lods
bound
iret
das
adc
adc
add
cli
jecxz
iret
std
jle
pop
pop
push
test
and
push
je
inc
mov
rcl
imulb
or
icebp
subb
fs
insb
incb
repnz
push
add
and
into
mov
shlb
lcall
fdiv
lods
lds
sub
dec
fldenv
jbe
mov
rcl
push
cmp
pushf
xchg
mov
in
sar
add
adc
inc
pop
adc
lods
roll
nop
sbb
pop
lock
roll
and
out
cwtl
push
xor
adc
inc
nop
loopne
mov
out
enter
jle
push
pop
xchg
pop
xchg
insl
push
ljmp
ja
aam
les
mov
cmp
mov
push
adc
leave
sbb
je
jno
aad
jns
push
inc
outsl
stos
in
outsb
jo
arpl
aam
jge
xor
adc
in
call
fcompl
dec
mov
or
add
in
dec
add
mov
push
in
xchg
or
lock
mov
cmp
rcrl
dec
mov
and
test
adc
addr16
outsl
pop
pusha
mov
sub
cltd
add
and
int
and
insb
stos
or
pop
cmp
fwait
fs
xchg
mov
mov
loopne
ss
adc
femms
icebp
leave
lahf
pop
test
cs
rcrl
mov
enter
push
fdivr
jp
or
push
lcall
mov
sbb
or
test
sbb
and
hlt
mov
cmp
movsb
outsl
cmovno
inc
orb
xchg
shl
jecxz
mov
mov
loop
jns
fs
xlat
pop
sahf
fdivs
mov
dec
add
repz
rsm
jge
add
arpl
shlb
popa
xor
fcompl
and
jl
int3
xor
aam
inc
mov
xor
mov
cs
cwtl
sbb
mov
xor
push
test
xchg
insb
mov
out
out
fsubr
andl
dec
pop
data16
in
jbe
ret
addr16
test
das
sbb
test
test
rol
mov
loopne
fsubrl
insl
scas
shlb
jmp
and
xlat
jbe
xchg
add
in
addr16
pop
in
xchg
fsubp
mov
repnz
pop
int
mov
scas
testl
icebp
dec
cmp
incb
sbb
jp
insb
popf
adc
jg
and
in
mov
pusha
shl
rep
mov
push
pop
aam
dec
int3
dec
lcall
ds
popf
mov
mov
add
xchg
std
pop
mov
outsl
std
sub
pop
cs
hlt
into
mov
jl
jb
dec
int3
push
cmpsl
xor
mov
lods
scas
jbe
stos
inc
inc
pop
push
cmp
in
cwtl
lret
jbe
int
mov
fstps
pop
pop
jmp
push
jns
xor
shrb
dec
orl
sbb
mov
into
mov
mov
fistpll
out
add
addr16
inc
movsb
lods
adc
mov
adc
test
adc
jp
xchg
add
cltd
cmp
cli
and
outsb
pop
or
div
in
mov
fnstenv
arpl
mov
repnz
or
imul
mov
mov
lret
imul
bound
test
std
jecxz
or
outsb
pop
mov
stc
fs
arpl
loope
sbb
add
ret
sbb
scas
mov
ds
sbb
and
jl
cmp
repnz
or
jge
dec
icebp
fstpt
inc
dec
stos
popl
adc
ljmp
test
pop
imul
jbe
xchg
dec
add
mov
cmpsl
dec
or
dec
dec
hlt
push
sbb
sbb
mov
fbld
cmp
mov
addr16
inc
adc
out
add
ret
pushf
pop
push
pop
cmp
pop
adc
dec
mov
mov
or
imul
pop
lcall
pop
subb
push
ja
mov
pop
adc
pop
or
sbb
pop
fwait
outsl
outsb
dec
fbld
xchg
cli
lock
dec
in
insl
inc
sbbb
xchg
mov
fists
push
jle
push
sbbb
add
addr16
inc
dec
out
sahf
sub
lods
andl
insl
mov
add
dec
popa
pop
or
js
mov
xlat
xor
or
inc
idivl
bound
lcall
and
popa
push
adc
pop
aam
cmp
xor
repz
cmpsb
pop
lcall
or
js
add
and
arpl
inc
mov
ljmp
mov
gs
aam
daa
pop
xchg
mov
fadds
cmpsb
lahf
inc
rcrb
lahf
push
paddb
push
jb
call
mov
pop
push
fldcw
xchg
add
jne
push
mov
into
jbe
movsl
pop
cld
mov
pop
sub
clc
dec
jecxz
loopne
push
test
xor
push
cmp
sbb
clc
cli
or
cld
cli
sub
les
fcmovne
mov
push
xchg
rorb
jnp
mov
not
cwtl
imul
mov
in
cmp
das
popa
mov
adc
scas
aaa
adc
cmovae
cmp
mov
adcb
lea
call
sbb
mov
sub
ljmp
lds
add
popa
xchg
and
mov
out
stos
cli
jb
dec
lahf
bound
or
push
hlt
inc
inc
int
cmp
insl
push
cwtl
into
and
ja
jnp
cmc
push
bound
mov
and
rcl
in
push
rclb
lds
out
les
sub
cli
jo
ljmp
mov
jp
fidivrl
nop
mov
dec
add
std
cld
movsb
jp
and
or
out
mov
out
cld
inc
xchg
stos
clc
out
mov
xor
xlat
jmp
into
call
push
aaa
xlat
outsl
jmp
mov
pop
out
mov
lcall
mov
call
mov
aam
jae
sbb
popf
imul
cmp
leave
aas
mov
call
lea
add
pop
in
xchg
cmp
into
add
add
pop
mov
cmp
cmp
xchg
dec
subl
out
push
xchg
test
pop
mov
inc
push
and
or
das
fsubl
mov
daa
stc
add
lcall
cmpsl
fs
addl
xchg
push
add
xchg
push
cmp
insb
or
rclb
xor
jecxz
add
mov
push
imul
jae
out
xor
mov
sbb
cmp
adc
mov
les
fisubrl
fbstp
cmovg
and
mulb
rorb
popa
nop
dec
or
frstor
int
in
lods
iret
ljmp
lea
les
leave
mov
decb
ljmp
dec
in
xchg
jle
pop
shrb
loope
cmc
lods
push
sbb
xor
or
ds
cmovle
iret
lods
sbb
adc
aas
int3
inc
lods
mov
ja
bound
pop
jae
pusha
cmc
xchg
pop
inc
adc
dec
lret
shrb
fwait
shrb
mov
insb
daa
inc
jge
mov
push
or
and
or
sbb
aaa
addr16
xchg
loopne
and
mov
jecxz
shr
mov
cwtl
pop
add
push
lahf
aad
pusha
addr16
pop
mov
cs
push
sub
rclb
xor
mov
adc
mov
outsb
test
insb
pop
shr
or
mov
cwtl
fbstp
fistpll
scas
dec
sub
stos
mov
imul
icebp
jmp
in
je
lret
fistpll
xchg
loopne
into
out
aam
or
iret
jg
cmp
stc
add
push
dec
inc
je
ret
stos
pcmpeqd
push
stc
mov
nop
lahf
scas
cwtl
dec
jae
or
loop
mov
scas
inc
pushf
mov
stos
call
out
push
adc
movsl
scas
lock
cmpsb
test
mov
xor
mov
int
sahf
jno
es
mov
and
dec
mov
inc
repnz
cltd
stc
xor
vfmadd213pd
mov
pushf
ret
clc
fisubs
sbb
shlb
cmp
xlat
rorb
push
mov
mov
push
dec
js
je
lods
sti
popf
fimull
sti
or
pop
aam
outsl
icebp
pop
loop
dec
adc
sahf
mov
leave
push
mov
mov
sbb
scas
addr16
out
jl
hlt
or
data16
mov
jae
inc
hlt
cmp
cld
push
fucomp
ret
sub
bound
mov
dec
push
scas
lret
icebp
fbld
push
leave
cmp
inc
mov
test
sub
adcl
divl
iret
mov
aad
xchg
or
mov
push
xchg
ret
insl
xlat
jb
jge
jno
sti
insl
pop
mov
cmp
enter
dec
ss
pop
adc
outsl
push
nop
xchg
pushf
stos
push
push
mov
inc
jne
je
mov
flds
push
hlt
mull
mov
mov
mov
mov
rorb
jae
mov
lds
xor
into
dec
jns
daa
push
fcoms
inc
ret
pop
nop
fldt
sub
adc
mov
pop
pop
mov
xlat
cmp
ss
in
push
leave
in
pop
notb
jb
xorl
mov
cmp
aam
popa
or
ss
inc
mov
sub
sub
inc
jl
jmp
xor
jge
pop
scas
jp
call
jns
das
or
pop
sbb
jns
xor
push
pushf
mov
iret
ret
pop
loop
repnz
push
pop
lods
xor
pop
sub
mov
or
call
insl
jo
add
loop
xchg
mov
inc
push
nop
jle
or
sbb
movb
xchg
pushf
int3
mov
fwait
lret
nop
fists
or
repz
jno
ds
andb
jne
pop
clc
les
push
xlat
dec
in
pop
adc
test
xchg
imul
gs
test
sarl
inc
jmp
dec
mov
xor
adc
aas
sbb
addr16
push
fnstsw
mov
xchg
inc
ljmp
jmp
loope
sbb
dec
and
cltd
xchg
adc
in
cmp
mov
xchg
sub
clc
test
and
pop
shrb
jns
cs
insl
mov
shr
sbb
push
xchg
xor
and
pop
dec
xor
fwait
sbb
rolb
negb
sub
jge
dec
rorb
pop
imul
cmp
mov
pop
cmpsl
fildll
jge
mov
jle
and
inc
and
movsb
int
rcrl
mov
shlb
test
std
aas
fmul
adc
mov
repz
lret
cmp
ret
cmpsb
sbbl
mov
pop
xchg
aaa
loop
popf
nop
jnp
or
outsb
jno
sbb
adc
mov
popf
fldenv
sarb
pop
mov
mull
dec
cmp
mov
push
aad
and
push
dec
pop
into
inc
cmp
fs
push
stos
or
push
push
cwtl
lea
rcrb
push
sbb
shll
test
scas
jmp
push
ds
loop
loope
stc
cmpsb
enter
xchg
mov
in
dec
sbb
adc
test
xor
fcoml
sarb
inc
or
sbb
sub
sbb
and
pushf
add
push
dec
out
imul
mov
push
mov
and
xor
xor
mov
stos
mov
push
pop
or
arpl
mov
push
push
mov
inc
xchg
xor
and
push
push
xor
dec
sbb
adc
fistps
mov
test
and
popa
cwtl
lea
xchg
jno
testl
pop
insb
aad
sub
das
lods
call
fdiv
inc
mov
xchg
pop
add
fmull
xor
in
dec
daa
mov
pop
or
xor
cmp
loop
pop
test
inc
sti
or
loop
iret
ja
dec
ja
lods
mov
cltd
cmp
cmpsb
dec
aad
xor
daa
adc
jmp
jno
push
jb
in
stos
lret
and
repnz
fucom
mov
sbb
pusha
cmp
mov
iret
push
mov
lods
pusha
sub
jae
std
xor
push
cmc
cmpsl
adc
mov
dec
sbb
and
jp
dec
pop
adcl
jmp
les
jo
pop
in
jbe
dec
xchg
dec
outsl
inc
push
and
divl
and
addr16
jo
loop
and
test
sub
mov
mov
xor
iret
loopne
jl
push
scas
out
mov
cmp
cmp
je
dec
cmp
divb
cwtl
cmp
xchg
push
jae
sbb
xor
das
dec
ss
in
jg
in
adc
dec
cmc
aam
gs
aaa
pop
mov
std
jg
jmp
test
cmp
or
mov
call
or
and
stos
jo
movsl
jg
jle
les
xor
inc
cs
dec
push
jecxz
js
ja
add
inc
jecxz
adc
sub
movsb
popa
pop
push
cwtl
loopne
mov
adc
push
xrelease
test
jle
ja
mov
aad
cwtl
pop
xor
rcrb
icebp
mov
jg
jl
inc
rcrl
add
jo
push
daa
fidivl
ljmp
sbb
xchg
push
test
xor
sti
out
mov
cmp
in
dec
push
mov
mov
xor
fs
push
int
cs
xchg
mov
sbb
mov
jns
mov
pop
or
add
ja
icebp
mov
push
nop
rolb
inc
popf
mov
dec
sbb
sub
pop
test
push
imul
dec
mov
xor
sbb
pop
add
imul
mov
jb
iret
and
lret
dec
adc
shrb
loop
inc
iret
or
fcompl
xor
cmp
cmp
or
mov
inc
xchg
ljmp
mov
xchg
jne
xor
in
adc
test
pop
xorl
add
aad
xor
andl
das
stc
mov
dec
cmc
inc
push
xchg
shlb
mov
mov
mov
sub
psubd
es
mov
mov
pushf
fistpl
les
fcmovb
sarl
sbb
shll
test
test
mov
dec
pop
xchg
push
aam
leave
stos
adc
loopne
jmp
mov
sub
aaa
popl
dec
lock
movsl
push
sub
sub
cmp
mov
adc
imull
push
inc
stos
sahf
mov
mov
jno
imul
cmp
call
fcom
xchg
mov
int
xchg
dec
inc
push
in
jnp
sub
xchg
fsubp
je
push
sbb
in
les
mov
adc
cmp
xor
sbb
cmp
pusha
jo
cmc
push
insb
mov
ljmp
das
sbb
mov
fwait
push
and
xchg
popl
inc
push
add
pop
ljmp
mov
in
push
das
push
sbbb
out
push
sbb
jmp
aas
push
js
or
pushf
jl
cmp
mov
xchg
pop
cmp
xchg
std
sbb
int3
or
ret
fadds
lea
and
push
adc
rcrb
cmp
lret
and
add
testl
lods
mov
jle
ss
or
aas
ss
sub
out
daa
out
scas
lea
jp
jne
jmp
adc
sbb
ret
mov
xor
xchg
inc
test
daa
jno
pusha
inc
cmp
mov
adc
push
dec
and
dec
popa
neg
int3
pop
jge
mov
repz
pop
jo
rcrl
cmp
xlat
in
scas
je
cmp
adcb
repz
imul
fst
stos
lcall
rcll
in
cmp
push
out
shll
push
mov
jno
gs
test
in
sbb
lahf
iret
rol
mov
ljmp
mov
es
dec
adc
pop
jno
push
dec
xor
scas
and
addl
scas
leave
and
call
mov
outsb
lods
or
pop
out
cld
aaa
bound
inc
fsubrl
xchg
fnsave
xor
out
push
arpl
out
jnp
loope
inc
jbe
pop
insl
pop
addr16
pmaxub
cmp
pop
add
fbstp
inc
in
int3
mov
mov
and
mov
add
aaa
sub
sub
inc
es
xorb
push
and
data16
push
inc
jmp
jp
in
iret
sbb
cltd
xor
ret
rcrb
mov
push
hlt
push
ljmp
pop
sub
pop
fsubp
repz
mov
push
mull
pop
out
sbb
sti
pop
test
cs
les
cmp
pop
cmp
push
cmp
fists
sarl
cmp
dec
or
mov
adc
pop
jmp
das
cmp
or
xor
jp
aas
rolb
repz
js
dec
xchg
add
push
loope
jo
fs
push
pop
shlb
jno
pop
xor
add
ret
cwtl
mov
fdiv
inc
sbb
out
jbe
scas
cltd
mov
and
sub
mov
lret
and
lods
mov
dec
add
mov
shl
cmp
cltd
mov
mov
subb
ret
add
iret
mov
insl
shlb
xchg
sub
fsubs
cs
xchg
add
in
test
ljmp
cmp
or
push
cmp
sbb
scas
push
cmp
bound
cmp
cmp
or
scas
xchg
pop
add
daa
cmpsl
lods
push
rorb
xchg
fucom
and
cmc
outsb
mov
mov
sbb
aam
test
in
push
or
sbb
fmulp
nop
test
adc
pop
insl
inc
and
dec
sti
outsl
pushf
xchg
into
test
mov
cmp
add
push
mov
shr
and
push
cmpsl
mov
test
jo
xchg
mov
lcall
lret
nop
std
pop
adc
adc
adc
xor
inc
pop
shlb
pusha
mov
es
mov
inc
cld
arpl
or
ret
push
cmpsl
inc
iret
inc
push
xchg
sbb
subb
shll
add
inc
xchg
jecxz
imul
pop
dec
out
clc
push
hlt
jmp
fcoms
dec
data16
std
outsb
or
jmp
ss
out
in
repz
xor
inc
test
push
add
nop
jle
fisttps
arpl
aas
lods
push
sbb
cmpsl
dec
dec
mov
jge
add
mov
aas
sbb
mov
and
in
pop
xchg
js
inc
jge
out
xor
std
add
jp
add
sbb
fsubs
or
and
aam
fisubl
lock
fwait
adc
andl
jns
test
cmp
shrl
pop
jnp
mov
pop
lret
fxch
pop
daa
into
stc
shrb
adc
jg
add
push
notb
outsb
push
jbe
orb
les
insl
pop
je
xchg
cmp
inc
insl
jge
cli
insb
sbb
and
icebp
and
jae
rorl
mov
or
arpl
mov
shlb
dec
fidivrs
js
mov
pop
mov
sub
jae
imul
cmp
xchg
pop
repnz
int
cmpsl
add
addr16
aam
xor
mov
lret
dec
outsb
cmpsb
mov
test
stc
mov
lods
push
lea
adc
sbb
cwtl
scas
pop
lea
aaa
or
adc
push
lods
adcb
inc
pop
inc
cmp
andl
dec
inc
popa
inc
push
fwait
add
cmp
lock
dec
bound
notb
add
out
xchg
jecxz
and
dec
std
mov
add
add
adc
inc
dec
jae
mov
cmp
iret
movsl
add
icebp
subb
lret
mov
jne
fbstp
push
sbb
xchg
pop
jno
sub
repz
shll
testb
sqrtps
xchg
repz
pop
popa
adc
std
adc
outsl
movsl
push
jg
jge
lcall
clc
and
bnd
sub
xor
or
lods
pop
add
jle
sahf
xor
and
lods
jp
loopne
add
pop
or
xor
shlb
or
sbb
push
cmpsb
mov
jg
xchg
pop
cmp
mov
sub
jb
test
inc
call
repnz
aas
ret
sub
test
sbb
rcrl
or
adc
scas
insl
mov
lahf
ds
push
jl
mov
adc
cmp
jmp
jno
sti
and
and
push
sbb
outsb
mov
js
push
test
and
push
loopne
sub
jg
mov
mov
xor
dec
ja
cmc
add
rcr
scas
shlb
cmp
subb
js
andb
dec
sbbb
mov
mov
mov
mov
cmp
fcmove
shlb
add
bound
out
js
notb
or
out
cmp
sub
jo
incl
rcr
pusha
jb
mov
or
xor
lea
ja
jmp
rorb
add
out
jecxz
in
ds
pop
mov
adc
icebp
cld
dec
in
mov
fiadds
stc
hlt
mov
gs
clc
xlat
push
pop
cmp
or
jae
in
add
data16
xor
mov
in
pop
das
push
jne
movsl
mov
push
fnstsw
and
pop
pop
dec
bound
mov
pop
mull
fistpll
mov
enter
jo
ljmp
jge
fs
icebp
lret
icebp
mov
ja
push
popf
cmc
rcll
push
stos
pop
jo
out
es
leave
jp,pt
sub
sti
cmpb
je
cwtl
fdivrs
xchg
sub
jb
inc
jno
push
mov
push
mov
rorb
adc
dec
pop
stos
lcall
loope
out
into
scas
in
xchg
add
outsl
gs
mov
pop
testl
inc
inc
adc
int3
sbb
sahf
push
jle
bound
fbstp
filds
add
lods
out
inc
test
jecxz
inc
outsb
sar
add
rolb
bound
xor
adc
and
dec
push
inc
mov
nop
cmp
shrl
in
inc
jns
jb
shl
ljmp
push
lahf
pop
cmp
lea
pop
cmp
adc
loope
test
sub
jbe
cltd
adc
lods
cwtl
int
ljmp
mov
push
push
xor
fcmovu
xor
arpl
pop
subl
or
sub
shll
xlat
in
mov
jg
pop
cmp
out
pop
mov
xchg
mov
cs
inc
mov
movsl
cmp
ret
xchg
addr16
push
pop
test
js
xor
jbe
into
fbld
std
xor
call
push
gs
add
lcall
in
out
xchg
mov
xchg
lds
add
std
xor
loopne
lret
or
vpmaddwd
daa
mov
sub
push
push
enter
in
sbb
mov
jae
jnp
cmp
dec
jne
sub
mov
inc
incb
jecxz
pop
out
rorl
mov
xor
jno
mov
int
cltd
movsb
push
push
xchg
pop
popf
or
sbb
cmp
mov
loope
leave
xor
cmc
addb
xchg
push
mov
pushf
push
pop
ss
sti
in
outsb
lahf
dec
and
sub
mulb
xor
adc
out
mov
or
cmp
cmp
mov
cmp
dec
or
fcom
pop
fadds
sbb
jle
fimull
cld
and
mov
and
cmp
enter
dec
mov
sub
mov
test
dec
test
je
push
outsb
xor
addr16
inc
fwait
mov
jns
jle
leave
insl
fisttps
mov
mov
mov
add
daa
pop
sahf
inc
or
sbb
dec
sub
and
lods
out
and
pop
in
dec
call
push
mov
mov
jmp
mov
iret
pop
scas
in
push
inc
int3
in
stos
ret
daa
jl
dec
xchg
andb
sub
lods
and
adc
xchg
in
xchg
and
subl
scas
popa
inc
jne
cs
hlt
sti
sbb
bound
pushf
inc
mov
add
ret
jns
xor
aam
fimuls
xlat
push
insb
popf
add
out
sarl
lea
dec
and
ds
js
int
xchg
loope
xchg
pop
dec
popa
add
xor
popf
adc
cmpsb
cmp
test
ret
dec
xchg
es
stc
inc
xchg
cmp
cmp
and
mov
pop
adc
mov
push
pop
sub
xor
subb
cmpsb
push
pop
adc
push
adc
fadds
in
push
dec
cld
shl
push
mov
push
mov
or
cmpsl
cmp
pushf
push
xchg
push
sbbl
lcall
shrb
jle
cmp
and
mov
adc
pop
xchg
push
orb
inc
dec
sub
cmp
clc
rcr
sub
std
fidivrl
sti
mov
push
mov
push
inc
out
ljmp
dec
push
aas
sub
pop
jmp
aaa
scas
fistpll
dec
mov
mov
or
xchg
pop
dec
mov
lahf
test
arpl
aam
sar
jle
jno
cmp
aad
mov
mov
je
loopne
fstpl
mov
gs
dec
lods
addb
nop
movl
enter
test
imul
mov
addr16
aas
stos
dec
lds
cmp
cmc
cli
or
push
pmaxsw
pinsrw
in
jecxz
mov
sbb
stos
outsb
lret
adc
cmp
cmovle
pop
or
pop
cmpsb
clc
sbb
pushf
dec
inc
adc
jae
jmp
jno
mov
bound
ja
addr16
out
and
jo
jp
xlat
jno
cmpsl
mov
jge
mov
fidivs
dec
dec
lret
or
into
jae
add
mov
outsb
out
mov
fcmovu
and
sub
mov
mov
daa
mov
xor
pop
pop
pushf
shlb
and
push
lea
loop
cmpsb
inc
mov
cmc
movsl
mov
mov
int3
mov
ret
aas
mov
inc
adc
adc
cmp
ret
ss
es
sbb
mov
out
pop
arpl
icebp
dec
loope
popf
frstor
outsl
xor
adc
adc
mov
push
cmp
mov
sbbl
and
push
inc
sahf
push
std
imull
jno
mov
fs
aas
int
aad
sub
add
test
cs
push
and
cltd
loopne
fs
push
jp
mov
fdivrl
out
movsb
or
fidivrl
adc
out
arpl
mov
in
adc
dec
out
sub
loope
mov
cld
aaa
and
and
ss
push
xchg
add
leave
cmpsl
out
xchg
dec
dec
or
mov
mov
ljmp
cmp
stc
je
and
jae
movsb
or
sub
pop
sbb
dec
pushf
nop
and
jg
clc
es
cmp
movsl
jns
cmp
mov
pop
push
cmp
push
repnz
test
inc
jbe
dec
aaa
std
scas
and
cmc
sbb
cwtl
pop
sbb
add
mov
nop
dec
xor
incb
pop
cmp
pop
cmp
test
jmp
imul
push
or
xor
xchg
sbb
xchg
jmp
push
js
inc
jbe
add
pop
stc
adc
fs
lock
nop
sub
push
mov
sti
call
jb
in
push
inc
adc
loope
enter
inc
lret
stc
or
aam
sub
xorl
pop
pop
inc
nop
mov
add
cmp
aas
movsl
ret
mov
iret
stc
insl
test
data16
nop
xchg
or
iret
jae
cs
adc
dec
test
lcall
inc
inc
and
mov
push
jno
mov
sbb
mov
cli
fsubl
test
out
add
mov
outsl
out
sub
shrb
and
mov
pop
fisttpll
xor
jo
and
pop
dec
bound
cmp
stos
dec
dec
jle
aaa
sti
mov
pop
push
mov
pop
mov
push
xchg
push
add
inc
mov
sub
dec
mov
pop
jecxz
xor
fidivrs
mov
fbld
mov
jno
mov
imull
orl
jns
rorb
xchg
push
add
inc
daa
std
mov
out
gs
movsb
imul
mov
lea
lahf
test
pop
js
pop
and
jb
test
dec
gs
jecxz
sbb
lods
popf
pop
mov
mov
and
lock
fisubrs
pop
jle
mov
push
or
out
push
ret
mov
jb
mov
rcrb
aam
sar
lahf
adc
test
add
dec
jbe
es
shlb
testb
jle
ljmp
dec
cs
mov
cs
adc
ja
loopne
fsts
cwtl
pop
mov
bound
mov
xor
mov
js
cld
jnp
and
add
fldt
push
arpl
movsb
xor
inc
pop
xchg
jns
leave
ret
cmp
pop
dec
ret
test
mov
xchg
insb
scas
or
out
mov
jb
test
cwtl
std
adc
jb
push
jne
or
fs
dec
sbb
imul
jo
jne
mov
loope
adc
pop
mov
mov
lock
inc
sbb
push
fldl
adc
jbe
mov
mov
fists
sub
mov
sbbl
adc
enter
test
in
cmc
mov
es
mov
mov
ret
sub
hlt
clc
jle
xchg
push
out
pop
int
xor
loop
mov
jbe
jg
mov
xor
cmp
mov
clc
mov
adc
xchg
ja
pop
test
shll
sub
sbb
cmpsb
mov
loop
incb
icebp
fs
xor
xchg
cmp
ja
in
sarl
mov
and
push
cmp
cmc
mov
arpl
sub
hlt
push
jge
out
dec
pop
jno
fiadds
mov
xor
mov
and
sbb
gs
dec
in
push
mov
add
dec
imul
test
jns
rolb
mov
fcmovnb
popf
pop
cmp
and
fwait
loopne
sahf
add
inc
das
lahf
pop
xchg
stos
jle
mov
lea
out
push
mov
clc
cli
ljmp
cmpsl
push
sub
pop
out
jo
nop
es
sarl
push
outsl
or
test
cmp
xor
ss
aad
aam
pusha
cli
pushf
or
je
test
pop
fbstp
xchg
jl
les
and
or
notl
mulb
xchg
les
cmp
jb
inc
ljmp
mov
fsubs
leave
push
push
adc
arpl
add
jb
fmuls
lret
loop
and
mov
js
clc
shr
add
push
xchg
inc
jns
sbb
push
ds
lds
mov
dec
xor
sbb
sub
lahf
outsb
fcomp
call
out
pop
fldcw
push
call
sahf
cli
stos
les
pop
cmp
sbb
and
sbb
pop
lcall
xchg
shl
dec
lock
pushf
sahf
jecxz
mov
int3
jbe
icebp
or
xchg
fisubrs
mov
decb
xchg
test
lret
and
mov
mov
jbe
pop
loope
andb
xchg
mov
pop
stc
in
sbbb
pusha
icebp
rclb
das
cmp
cmpsl
xchg
lds
shlb
fwait
pusha
fwait
iret
add
movsb
push
inc
leave
add
in
aas
inc
ds
rorl
push
movsb
push
and
je
mov
outsl
call
sbb
movsl
or
pusha
movsb
push
or
leave
add
and
xor
push
pop
inc
add
push
stc
in
imul
jg
jae
cmpsl
mov
repz
test
inc
mov
fs
fisubrl
arpl
roll
imul
mov
ja
push
xor
mov
dec
sub
push
jl
sub
push
xchg
out
pushf
adc
gs
adc
jmp
pop
stos
jb
test
pushf
mov
scas
decb
xchg
cmpsb
daa
xchg
repz
ljmp
adc
pop
jns
cmp
xchg
inc
imul
and
cmp
and
loope
lea
and
and
out
xchg
push
aad
ljmp
mov
jmp
and
ljmp
repnz
and
in
outsl
add
xchg
ret
imul
mov
imul
sti
xchg
cmpsl
inc
dec
in
inc
ds
data16
outsl
adc
push
mov
stc
les
or
cmpsl
test
idivl
jns
lret
add
adc
cmp
sub
aam
push
shlb
shld
fstpl
adc
mov
cmp
adc
cmp
adc
or
arpl
xor
inc
xor
mov
push
shl
aad
lcall
sub
in
mov
pop
jne
aam
in
call
pop
pop
das
xchg
push
int
sti
iret
outsl
or
pop
jmp
pop
dec
stos
cmp
xchg
add
jae
sbb
inc
insb
mov
xchg
and
subb
mov
test
es
pop
enter
popa
pusha
in
mov
jae
into
sbb
in
jmp
in
call
repz
sub
es
jp
inc
sub
lods
cmpsl
or
scas
aas
mov
or
andb
in
pusha
cltd
push
or
rolb
inc
sub
add
adc
mov
xor
sub
xchg
xor
adc
mov
adc
push
out
orl
movsb
push
push
mov
lret
mov
in
cli
sbb
aad
mov
in
jg
and
cmp
xchg
shlb
test
ja
mov
cmp
mov
gs
xor
jge
insl
in
leave
pop
mov
xor
sub
dec
lcall
shlb
sub
cmp
dec
pop
insl
pop
push
cltd
iret
mov
or
ficoms
iret
xor
aas
inc
leave
add
pop
xchg
push
mov
xchg
xor
jns
jecxz
mov
sahf
shr
inc
gs
push
nop
iret
mov
add
mov
mov
mov
cmp
mov
sbb
out
cmp
pusha
pop
cmovp
sbb
dec
mov
icebp
add
addr16
inc
add
fimuls
scas
cmp
push
lea
sub
add
sti
test
outsb
lock
pop
xchg
loope
ret
in
sbb
mov
lahf
sub
pushf
mov
cmp
inc
or
push
mov
lea
dec
adc
inc
adc
in
mov
lods
test
popf
mov
sbbb
mov
jne
std
imul
outsb
loope
jl
mov
addr16
jne
adc
shll
scas
sbb
dec
sbb
mov
fwait
les
add
test
push
leave
inc
inc
jo
packuswb
adc
cld
in
lds
ja
add
adc
push
adc
inc
incl
mov
sub
push
pushf
es
and
push
stos
dec
sarl
lods
dec
lret
fists
out
sub
stc
sbb
cwtl
cmp
fs
mov
xchg
in
inc
dec
orb
les
lods
mov
scas
loopne
nop
cltd
loopne
xchg
int
jp
jmp
or
fcmovnu
mov
and
jne
insl
out
sarl
mov
adc
orl
or
inc
out
fisubs
cld
adc
call
mov
aad
cmp
pop
cmp
cmp
lret
dec
sub
imul
orl
pop
mov
xchg
cmp
mov
lods
adc
test
cmpsl
xchg
push
mov
loop
mov
inc
scas
insb
push
rcrb
add
jae
stos
push
rcll
leave
insb
dec
cli
fisttps
add
push
dec
xchg
imul
jne
mov
dec
xchg
loope
mov
test
inc
add
outsl
arpl
or
jp
xor
and
jecxz
iret
jbe
test
fists
daa
mov
lahf
icebp
xor
mov
dec
repz
xor
data16
clc
or
clc
sti
mov
out
in
xchg
scas
lods
push
pop
push
imull
mov
mov
xchg
xchg
push
sub
mov
out
maskmovq
testl
and
into
out
sub
movsl
dec
lahf
loop
popf
fisttpl
mov
sub
stos
push
dec
pop
or
mov
rclb
inc
cmp
lods
jecxz
outsl
xchg
adc
lock
add
sahf
je
mov
push
inc
xchg
push
enter
xor
movswl
cwtl
cmp
inc
push
das
ss
lds
test
fidivl
in
xchg
cmp
cmp
insb
cmp
es
cmpsb
fwait
daa
mov
sub
pop
movsb
cmp
jo
int3
dec
mov
adc
adc
loop
orl
pop
mov
sbb
and
insl
jmp
loopne
inc
ss
mov
or
sbb
inc
loopne
mov
aaa
es
out
jns
ss
loope
loope
add
fsub
gs
scas
pop
ja
aad
push
mov
push
divb
mov
mov
cmp
mov
mov
mov
push
xchg
das
mov
add
ljmp
or
adc
ffree
cmp
jge
inc
test
or
fildll
insb
pop
inc
lea
mov
xchg
jmp
xlat
sbb
mov
sbb
cmp
pop
push
lods
mov
gs
mov
insb
stc
clc
push
mov
testl
popf
ret
jmp
in
rclb
test
jp
outsl
mov
cmp
sub
cwtl
in
jnp
xchg
nop
iret
clc
shll
cmp
fwait
pop
lcall
stc
arpl
stos
sub
popa
adc
sbb
fstl
add
test
daa
mov
aaa
mov
dec
xchg
mov
rcll
pop
pusha
into
imul
xor
scas
xor
pop
nop
and
push
xchg
jp
insl
mov
shr
cmp
in
mov
add
and
call
adc
cmpsl
loop
out
outsl
and
sub
mov
jno
cltd
enter
aam
mov
fdivrl
mov
push
out
inc
aas
add
pop
mov
shrb
push
lahf
data16
and
or
jl
or
pop
push
mov
dec
clc
mov
dec
fisttpl
sbb
les
icebp
stos
std
shl
imul
pop
mov
cmp
add
pop
mov
mov
add
fxch
lds
fs
cld
inc
rcrl
sbb
push
mov
in
jno
and
mov
mov
dec
mov
or
loope
jg
add
in
bound
xchg
or
push
shufps
dec
ss
leave
pusha
div
mov
ret
sub
xor
xchg
sti
int
in
or
ljmp
pusha
out
cmp
dec
push
ja
aas
mov
xor
shl
inc
repnz
add
jl
cmp
mov
inc
and
dec
cwtl
and
and
stos
pop
int3
sub
hlt
shll
test
fsubrl
int
sbb
loope
pusha
jno
sub
inc
mov
xor
xchg
loopne
sub
xchg
xor
dec
adc
imul
jmp
mov
sahf
iret
pop
xor
pop
rclb
push
or
xchg
call
movb
mov
cmp
adc
cld
les
jb
into
mov
jge
mov
xchg
mov
lds
je
mov
mov
and
cmp
lods
test
inc
fcoms
inc
mov
movsb
sub
xchg
and
pop
enterw
fnstsw
int3
xor
dec
popa
mov
std
aas
lea
lret
sub
fnstcw
sti
into
test
cmp
mov
push
pop
cmpsb
test
arpl
dec
push
aaa
sub
fcmovne
fisubrs
inc
inc
fistpl
mov
imul
cmp
divl
insl
jp
mov
xor
lods
ret
adc
outsl
or
sub
add
cmpsb
xor
push
ljmp
inc
inc
sti
xchg
inc
jnp
test
in
pop
test
jb
hlt
in
sub
jns
xchg
mov
loopne,pn
and
pop
jle
loopne
aas
or
bound
add
dec
imulb
jne
mov
pop
or
js
sub
jne
incl
mov
sbb
call
sub
shrl
jge
loopne
push
subb
sub
dec
sub
push
sbb
cld
mov
mov
int
push
ja
jle
sbb
test
dec
push
jb
adc
into
imul
mov
out
add
jmp
cmp
test
push
cwtl
iret
aas
push
sbb
test
xor
xor
fwait
adc
sbbb
daa
adc
inc
mov
xchg
test
push
sbb
sbb
add
sbb
cmc
into
mov
orl
fs
rclb
add
addl
pop
cmp
pop
sbb
jl
vpsrlq
popfw
adc
push
enter
xchg
xchg
or
jns
notb
mov
fimuls
rcrb
xchg
pop
pop
jns
fbld
cmp
inc
adc
lea
or
mov
xorb
movsl
ja
mov
sbb
repz
cmp
jno
xor
fiaddl
clc
adc
std
xchg
out
idiv
xchg
js
jmp
fidivrl
pusha
in
test
outsl
out
adc
in
mov
inc
sub
mov
jecxz
xchg
out
fisttpl
jl
jno
ljmp
out
hlt
or
loop
mov
shll
push
test
mov
xor
hlt
or
sub
stos
mov
jo
add
gs
pop
push
les
xor
mov
mov
bound
mov
lods
mov
imulb
sti
push
sub
shlb
cmpsl
mov
ss
bound
cmc
pusha
add
adc
add
fmul
sub
jl
xchg
xchg
jae
adc
jp
mov
insb
mov
addr16
adc
dec
pop
addb
loop
mov
push
xchg
idivb
push
movsb
xor
shr
leave
mov
fbld
stc
jnp
add
fwait
aas
fs
xchg
or
cwtl
nop
insb
cmp
imul
lahf
mov
fisubl
fmul
movsl
pop
pop
aas
add
sbb
and
lret
jmp
into
pusha
hlt
mov
orl
push
in
lods
jno
jl
out
mov
aam
mov
hlt
pop
orl
cli
mov
in
fcmovu
test
hlt
mov
adc
or
dec
jne
push
in
xchg
aam
imul
stos
insl
fsubl
sbb
and
and
enter
call
push
aad
xchg
into
xchg
repnz
iret
or
addr16
fidivl
fs
pushf
in
jmp
xchg
or
jnp
push
push
lods
jmp
xchg
mov
imul
popa
ficoms
or
je
subb
mov
or
imul
xchg
imull
jno
cmpsb
fcmovu
add
orb
inc
aas
inc
mov
mov
test
stos
push
das
std
ret
cltd
cmp
jg
mov
iret
mov
mov
cmc
pop
mov
cwtl
fidivs
mov
lahf
jecxz
adc
test
and
fldl
xor
scas
clc
xchg
mov
adc
xlat
jle
jns
cmc
and
mov
hlt
icebp
jne
dec
push
fidivl
mov
inc
hlt
pushf
pop
sub
aas
repnz
out
jne
sbb
dec
add
mov
call
jns
rcll
int3
sub
out
mov
mov
pop
add
cs
repz
dec
push
jle
adc
mov
cld
add
mov
jp
jg
aam
popf
cli
bound
enter
push
pusha
xor
push
fisubl
inc
pop
popa
in
mov
mov
lcall
mov
sahf
push
xchg
test
mov
cld
dec
sub
jecxz
sarl
xchg
in
lret
inc
aad
mov
pop
scas
ret
das
aam
mov
int
addr16
push
je
loop
xor
sub
fnsave
sbb
es
add
jle
orl
add
push
nop
or
cld
cmp
std
cltd
cli
dec
xor
mov
sub
cmp
dec
inc
inc
out
inc
test
cmp
lds
mov
out
sbbb
je
call
mov
cmp
mov
popf
push
cli
sbb
push
fdivp
lahf
daa
push
sbb
and
mov
imul
add
pop
rorl
sub
jae
es
les
mov
sbb
jb
popf
cmp
sub
pop
out
and
loopne
sahf
xor
gs
xlat
cltd
adc
jnp
sbb
jp
pop
fdiv
test
dec
push
cwtl
int
cmpsl
aas
lods
pop
lods
out
mov
cmp
inc
adc
and
push
popf
pop
add
xlat
pop
mov
and
mov
fsubl
cmp
shrb
jge
sub
pop
shrl
sub
sbb
jno
popa
ret
inc
adc
lods
lods
and
add
and
ss
push
mov
pop
dec
inc
les
push
mov
xchg
std
dec
dec
cmpb
mov
or
outsb
jae
cwtl
cmpsb
mov
leave
add
or
lret
push
lcall
fwait
dec
aad
cs
adc
push
push
jns
pop
mov
and
pop
lcall
mov
xchg
iret
scas
dec
push
mov
jnp
xchg
sub
icebp
inc
cmpsl
mov
clc
js
dec
popf
push
xchg
dec
pop
repnz
iret
dec
jae
rcll
sbb
imul
xchg
jg
sbb
in
dec
lods
pop
mov
loope
mov
dec
and
lock
pop
push
cld
mov
imul
mov
sbb
jp
lock
clc
pop
pop
ret
mov
ja
or
xor
pop
stos
jmp
pop
inc
adc
popa
aam
cmp
aad
in
pop
xchg
inc
xchg
aaa
and
sub
inc
push
cmp
icebp
icebp
mov
xchg
or
mov
dec
ret
ret
iret
mov
fs
mov
xor
test
out
mulb
shrb
es
data16
inc
and
and
dec
out
cli
repz
jge
adc
sbb
roll
xchg
xorb
mov
mov
add
ds
nop
adc
jg
lock
mov
inc
mov
inc
scas
mov
out
repz
por
insb
sti
nop
mov
pop
test
in
daa
lods
lds
fisttps
movsb
rcll
pop
bound
inc
je
dec
push
add
inc
jno
pushf
fwait
jb
js
adc
jns
push
repnz
pop
pop
pop
in
call
ret
pop
push
sub
cwtl
cmp
pop
lret
adc
rep
pop
and
lock
xchg
ret
test
sbb
cmp
mov
cmp
jg
repnz
xor
inc
cmp
orl
add
rcrb
mov
inc
cmp
in
inc
lret
imul
fimuls
sbbb
adc
repnz
std
les
sbb
arpl
mov
cmp
lret
in
testl
popf
addl
mov
decb
stos
lods
mov
test
fidivl
lret
mov
mov
mov
mov
packssdw
shrl
aam
dec
out
roll
push
daa
nop
lods
pop
out
jmp
jns
mov
nop
in
loope
insb
cwtl
ret
push
fmulp
adc
ret
jae
pushf
pop
pop
sub
or
popf
rcl
push
ds
xchg
adc
or
fs
push
sbb
iret
push
xchg
jo
cmpsb
mov
xchg
lahf
pop
dec
adc
push
or
cmpsb
je
add
scas
adc
dec
jb
lcall
jbe
roll
clc
std
lods
add
lahf
aam
xchg
fstpl
mov
sbb
sbb
cmc
xchg
arpl
sbb
orb
dec
aaa
xchg
mov
inc
fwait
scas
sub
outsb
jns
pop
xor
fisttpll
movsl
or
xorb
sbb
add
lea
and
fcmovne
dec
shll
in
add
addps
test
xor
ret
and
dec
xchg
outsb
clc
call
jno
pop
jge
mov
pop
xchg
repz
ljmp
mov
popa
pop
add
in
lahf
push
js
andb
cltd
add
loopne
fldl
rolb
call
mov
xor
fisubrs
and
iret
sub
cmp
rolb
icebp
or
adc
cmp
xlat
lock
loopne
into
movsl
dec
or
out
out
in
jns
pop
sahf
sti
push
inc
jb
aam
mov
mov
add
movsb
pop
and
mov
imul
lret
inc
movsb
mov
stc
je
push
xor
push
lret
and
ret
hlt
in
addb
pmullw
ja
lods
xchg
pushf
cmc
xchg
faddl
mov
out
mov
mov
sub
enter
cmpsb
shl
mov
cmp
leave
mov
sbb
mov
lret
push
mov
aad
jmp
icebp
add
icebp
test
leave
sbb
mov
pop
or
cli
loopne
push
xchg
or
jbe
mov
inc
int
adc
call
push
sbb
push
dec
fnstenv
fs
lcall
call
fistpl
adc
sub
js
stos
inc
mov
jne
daa
push
cmp
sub
ret
xor
push
test
jp
cwtl
xchg
mov
scas
sbb
xor
add
adcl
mov
push
xor
fistpll
imul
mov
jne
cli
roll
pop
mov
mov
xchg
xlat
adc
cmpsl
jge
inc
lea
pop
hlt
cs
dec
add
sbb
cltd
sbb
sbb
mov
xchg
push
pop
mov
lea
aas
sub
clc
inc
sbb
jge
ficoml
add
cmc
cmpsb
ja
pusha
and
xor
lcall
daa
popa
jno
fnsave
pushw
ss
lds
xchg
in
imul
sbb
adc
jo
and
test
mov
push
mov
mov
adc
mov
loope
aad
and
scas
sbb
jp
xchg
xchg
lods
or
fs
mov
orl
pop
sub
fdiv
xchg
mov
mov
xor
stos
pop
loopne
pmullw
inc
imul
xchg
adc
mov
jo
mov
into
in
push
jmp
cmc
rcrl
and
pop
jle
aas
push
jo
xchg
jg
lcall
push
jo
je
jne,pt
mov
push
incb
daa
xor
ret
cmp
ret
mov
mov
cmp
rol
fbld
sbb
push
fcmovnbe
scas
jnp
jbe
or
xor
adc
notl
jmp
xchg
stos
fdivr
aaa
enter
loop
lret
sub
or
xchg
adc
stos
adc
hlt
mov
outsb
and
sub
mov
xlat
sbb
xor
cwtl
cli
jmp
fcompl
pop
les
rorb
mov
cmp
xchg
mov
pop
ljmp
dec
mov
pop
mov
icebp
inc
movsl
test
notb
fmul
mov
mov
jno
sub
and
mov
scas
aad
gs
orl
out
xor
iret
cltd
ret
mov
std
aam
call
stc
repz
sub
sbb
aad
or
fwait
mov
leave
cli
addb
or
push
inc
lods
jle
sbb
mov
fcoml
filds
aam
loopne
fs
push
call
push
outsl
es
inc
jmp
adc
and
xchg
pop
and
xor
hlt
in
jle
sti
lahf
fisubl
mov
cmp
insb
shrb
cld
sub
mov
sbb
filds
pop
pop
sbb
mov
dec
stos
stc
inc
cwtl
jb,pn
ljmp
sbb
xor
pusha
add
push
xchg
ja
popf
aaa
cmp
push
sub
fs
lods
repnz
test
cmpsl
scas
shll
cmpsl
mov
nop
jge
movsl
popf
int3
fs
jno
mov
sahf
fistps
xchg
shlb
hlt
inc
and
inc
xor
or
lods
in
std
out
xchg
dec
or
mov
cmp
jnp
aaa
mov
pop
mov
mov
mov
push
push
add
or
loopne
shl
push
fidivrs
jp
cwtl
xor
les
bound
xor
ss
cmp
inc
cltd
sub
jecxz
subl
jecxz
mov
sbb
push
repz
add
cmpsb
ja
inc
add
jno
cmp
lret
gs
pop
pop
and
sbb
fucomip
insb
xchg
loope
imul
cmp
pop
ja
stos
dec
adc
xchg
test
into
mov
push
xor
bound
aad
stos
int
mov
xor
jle
cmp
pop
adc
lcall
fsubp
sub
lret
shr
ds
ja
repnz
sub
gs
clc
testl
iret
push
cmp
add
sub
sbb
mov
cs
xchg
int3
and
xchg
jl
lods
xor
pop
andl
push
push
cmp
arpl
cmp
fistl
xchg
pop
jp
nop
lds
cld
inc
shlb
es
sub
mov
adc
stc
add
addb
cmpsl
xorb
mov
sbb
xlat
or
mov
dec
pop
pop
das
xchg
mov
movsb
mov
mov
pop
xor
xor
outsb
cmp
out
aaa
or
movsb
pop
stos
dec
push
aam
data16
js
sbb
sbb
scas
test
mov
pop
add
insb
pminsw
aaa
jmp
adc
pop
mov
mov
pop
jns
mov
rcl
push
lahf
inc
iret
lods
mov
cmp
pop
out
movsl
pop
xchg
cltd
rclb
jl
movsl
and
jecxz
jg
or
ret
add
mov
pushf
lret
mov
fsubl
inc
push
push
lret
mov
mov
out
sub
ds
sub
jnp
jecxz
dec
int3
xor
pop
test
cmpsl
cmp
mov
call
incl
jle
ret
int3
push
sti
and
test
adc
jge
in
gs
roll
dec
jmp
fs
ret
and
es
xlat
jnp
das
scas
dec
jg
mov
inc
inc
xchg
mov
nop
xchg
insl
scas
das
pop
pushf
xchg
adc
mov
das
sbb
push
test
dec
imul
sbbb
xchg
stos
mov
mov
sub
cwtl
and
cmc
xchg
test
jo
sbb
repz
push
mov
add
test
push
jl
aas
movsl
cmpb
dec
addr16
push
rolb
add
xchg
outsl
xlat
ja
mov
adc
pop
aam
lret
std
out
and
nop
jo
xchg
std
or
aas
and
enter
clc
sbb
cli
push
push
jo
arpl
mov
xchg
dec
inc
arpl
push
sub
push
push
jge
mov
pop
popa
mov
jb
mov
andb
fiaddl
mov
jle
sbb
das
and
push
test
out
fwait
lret
xor
sub
fsubs
jmp
mov
movsb
divb
jne
cmpb
pop
lods
fnstsw
mov
adc
mov
in
sub
sarb
cmpsl
add
movsb
inc
or
sbb
adc
or
cmp
sub
adc
inc
movsl
mov
or
hlt
les
mov
mov
sti
pop
cmp
rorl
dec
enter
push
loopne
test
jp
and
xchg
xchg
std
into
jb
dec
adc
sub
adc
push
adc
testl
push
fbstp
int
and
sbb
sub
adc
fadd
sbb
xlat
lret
int3
cli
mov
jbe
or
test
insl
push
cmp
ret
into
sub
inc
adc
push
cli
fwait
xchg
adc
and
cs
neg
enter
aaa
fldt
ljmp
xchg
mov
shlb
daa
xlat
or
loope
arpl
jno
sahf
clc
and
test
fwait
decb
cld
int3
sbb
fldt
movb
and
sbb
jns
ret
subb
xor
test
push
and
loop
cli
xchg
pop
adc
fists
lcall
aad
enter
aam
xor
push
push
jbe
sbb
xor
fldenv
adc
push
aas
stos
scas
rclb
pushf
sub
rclb
in
ret
mov
xor
rcll
pop
cmc
xor
ficoms
clc
sub
mov
mov
cld
mov
into
mov
xchg
daa
nop
dec
push
fs
push
out
jbe
mov
fisttps
xor
mov
into
push
xchg
mull
adc
cld
jmp
mov
pop
pop
mov
gs
xorl
int
jnp
arpl
mov
cli
xor
out
out
outsb
inc
cmp
stc
dec
mov
stos
or
out
sahf
test
out
and
pop
mov
into
dec
ss
jno
imul
das
scas
cmp
push
ljmp
out
sbbl
call
add
adcl
in
and
mov
pop
adc
cmp
mov
mov
ret
icebp
fdivrs
jp
cmp
dec
les
out
imul
xchg
or
dec
dec
shlb
arpl
xor
repz
arpl
inc
lret
out
int
jecxz
pop
sbb
pop
dec
xchg
inc
and
mov
sbb
add
stc
jnp
push
jno
sbb
add
in
xor
jmp
sub
loop
push
mov
add
push
out
inc
xchg
pop
loope
cmp
mov
and
gs
fnstsw
xchg
dec
fs
test
xchg
mov
add
mov
xor
inc
in
adc
mov
inc
or
xor
in
or
ja
dec
sub
loop
mov
imul
pop
scas
jae
push
cmp
ficoml
rorl
dec
xchg
lret
lcall
ret
inc
nop
jmp
mov
ds
cltd
pop
pcmpgtd
and
or
push
push
adc
xchg
outsl
cmpsb
outsb
sub
dec
inc
stos
mov
int
mov
scas
or
in
fcmovb
aam
pop
push
aam
in
mov
negb
enter
jb
or
orb
xor
mov
iret
mov
loop
dec
xchg
adc
aam
jne
clc
or
insb
outsb
sub
repz
sub
sbb
dec
loop
sub
cld
push
and
jnp
popf
lcall
pop
repz
mov
popa
jae
insl
addr16
stos
test
jmp
adc
std
mov
and
enter
xor
mov
fucom
xchg
cmp
and
sbb
xchg
sahf
mov
inc
add
sbb
stc
xchg
add
mov
push
mov
sub
aas
lods
inc
cmpsb
cs
add
cmp
aas
roll
cmp
cmp
cmp
adc
addr16
or
or
mov
ja
push
movsb
push
xchg
cld
ljmp
dec
ffreep
in
repz
lahf
repnz
adcl
shr
adc
lcall
sbb
dec
or
xor
shlb
inc
or
inc
data16
mov
test
xchg
push
jg
push
xor
imul
pushl
pop
scas
insl
sahf
lahf
decl
ljmp
in
fstps
push
mov
in
mov
xchg
or
testb
decl
mov
jle
ds
mov
mov
mov
loopnew
mov
fdivrs
mov
inc
lds
ret
out
neg
test
adc
xchg
adcl
add
dec
addr16
add
fsts
pushf
push
adc
lds
jbe
mov
insb
outsl
lret
lods
dec
fsubl
cmp
xchg
add
push
aam
inc
pop
xor
mov
pop
ret
inc
sbb
jp
mov
out
mov
add
jmp
inc
adc
lret
sbbl
loop
jg
insb
test
push
push
bound
mov
cltd
test
sbb
add
adc
lods
push
xor
cmpsb
sub
xchg
mov
ret
ljmp
mov
mov
shl
in
pushf
stc
cwtl
mov
mov
aaa
pop
xchg
daa
push
jl
sub
arpl
mov
out
mov
cltd
pop
mov
and
aaa
cmc
aaa
add
loop
lods
mov
sub
sahf
rorl
leave
inc
push
push
inc
mov
mov
push
mov
inc
or
dec
xor
sub
mov
aas
fiaddl
leave
fists
jne
pop
cmpsl
mov
add
lock
jle
unpcklps
and
mov
cmp
rclb
push
rolb
mov
push
movsb
sbb
add
inc
es
xor
and
push
mov
ss
jns
dec
int3
leave
mov
in
fisubl
adc
cmp
mov
jns
and
inc
xor
aad
sbb
out
cmp
std
xlat
add
jmp
fdivr
mov
popa
outsl
pop
mov
arpl
xor
rcrl
fidivs
insl
mov
and
cmpsb
jmp
lds
ret
xor
sub
xorl
popl
or
dec
xchg
daa
ds
mov
jo
std
or
ds
mov
sahf
sub
inc
cmp
clc
inc
int
movsl
test
cli
and
movsl
adc
pop
xchg
mov
mov
xor
daa
fwait
dec
add
call
xlat
cld
sbb
pop
inc
addr16
push
push
mov
sbb
repz
sbb
inc
in
mov
fsubrl
push
mov
je
repz
xor
inc
inc
xlat
leave
mov
or
icebp
xchg
movb
std
iret
sbb
into
andb
insb
jnp
xor
nop
jne
popf
push
xor
leave
ss
push
adc
mov
adc
lcall
or
xlat
sub
insb
iret
or
stos
das
sbb
repnz
inc
mov
xor
and
rorb
xor
cmovl
lods
mov
stos
iret
mov
out
sub
loopne
push
gs
mov
adc
sub
or
and
ljmp
add
imul
mov
jl
fcoml
stos
jecxz
mov
loop
scas
xchg
xchg
enter
inc
xchg
sti
cld
pop
inc
pop
add
mov
test
insb
and
insb
add
cmpsb
xor
mov
push
out
xor
test
and
mov
mov
sahf
stos
fnsave
push
mov
mov
sarb
mov
testl
insl
push
mov
mov
mov
dec
in
sti
jbe
jp
xchg
pop
mov
mov
or
fldt
add
xchg
sahf
enter
pop
roll
jl
and
push
and
add
xor
mov
adc
mov
aad
leave
repz
cmp
sub
cwtl
sarl
hlt
sbb
adc
fsubr
lcall
test
popf
into
sbb
pop
lods
or
or
gs
xlat
xor
jns
sbb
push
loopne
mov
ljmp
or
mov
jo
push
das
and
lods
fidivl
and
or
sub
shl
add
adc
adc
jle
int3
outsb
mov
or
push
mov
sahf
lds
cld
cwtl
and
sarl
arpl
dec
inc
gs
inc
out
or
cmp
mov
std
dec
jl
and
cmp
sbb
ret
push
mov
fidivrl
sbb
inc
dec
pop
adc
push
add
add
es
cmp
xchg
loope
andl
rcrb
mov
ja
cmp
sbbl
dec
jae
addb
cmc
add
repnz
xchg
hlt
pop
jg
lret
jno
ds
nop
ret
outsl
jmp
aam
pop
mov
out
call
mov
in
xorl
inc
mov
icebp
lret
rorl
cmpsl
sbb
add
push
sub
cmpsb
add
xchg
mov
cld
xchg
repz
inc
xchg
in
cmpsl
bound
mov
shl
jecxz
pop
xor
in
push
cmp
cs
je
clc
lods
lret
loopne
cmp
insl
mov
lcall
add
sub
dec
xor
xchg
jo
pushf
inc
aad
fimull
sbb
movsb
fdivl
or
xor
sbb
inc
sbb
pop
mov
sub
dec
hlt
into
adc
daa
rolb
jl
push
fcmovnbe
hlt
popa
out
xchg
mov
btc
cld
push
cwtl
and
imul
adc
movsl
xor
icebp
mov
outsl
nop
dec
jp
call
outsl
lcall
sub
lock
popa
inc
jae
jo
mov
into
nop
jl
jge
dec
pop
xor
fbld
inc
in
jae
lods
js
aas
aam
inc
mov
push
mov
push
add
adc
push
mov
sbb
sub
in
ret
push
outsl
pop
pop
sbb
sub
pushf
mov
add
sti
xor
sbb
push
nop
ret
arpl
mov
pop
call
lcall
popa
pop
js
fldenv
mov
push
cmpsl
mov
les
test
xor
call
cmp
out
pop
push
cwtl
dec
dec
sub
mov
lret
out
and
adc
dec
mov
jb
pop
push
fs
xlat
sub
clc
cli
insl
jb
imul
imul
push
aas
das
jne
adc
aaa
repnz
sub
bound
movsb
adc
fs
jnp
shlb
jle
lret
xchg
mov
imul
out
movsb
cmp
into
fiadds
mov
addl
out
inc
das
shr
testb
dec
xchg
cmpsb
mov
dec
test
jb
sbb
cmp
xchg
pop
bnd
push
pop
out
insb
cwtl
push
fwait
or
push
notl
sub
mov
mul
pop
or
mov
xchg
xor
movsb
xchg
adc
int3
rcll
cs
mov
push
stc
sbb
or
in
jge
mov
cli
sbb
dec
jnp
sbb
clc
insb
sub
lahf
outsb
dec
push
les
jae
int
stc
dec
fsubrp
es
xor
lret
cmp
mov
pop
cmp
mov
fs
pop
cltd
xor
js
xchg
pop
imul
stc
pop
mov
jns
popa
mov
test
mov
add
sub
inc
pop
jge
mov
mov
sbb
inc
hlt
sub
leave
sbbl
out
and
xchg
mov
add
dec
jmp
or
xor
fldl
lret
jno
into
insb
mov
cmpsl
xor
andb
mov
adc
aaa
xlat
pop
or
add
pop
test
sti
hlt
cltd
jmp
add
addb
loop
mov
xor
sbb
push
arpl
jp
push
fucomi
adc
adc
outsb
out
mov
mov
mov
sbb
mov
shll
and
mov
jns
push
cmc
in
out
sarl
inc
sti
pop
insb
clc
push
sub
mov
stos
aad
sub
fldcw
sti
js
sysenter
or
xor
das
xchg
jnp
pop
testb
and
lods
mov
add
mov
add
scas
pop
mov
mov
test
in
inc
imul
clc
sub
mov
shrl
and
sbb
add
sbb
int
xlat
into
push
sbb
mov
fimuls
pushl
xchg
ljmp
je
push
and
addr16
out
movsb
lahf
sahf
dec
daa
clc
iret
push
mov
sub
lods
or
loopne
dec
cmp
shll
lods
int
xchg
push
daa
loop
mov
add
or
jmp
mov
data16
ja
cmp
ds
push
loope
iret
aaa
int
in
pushf
jae
jge
hlt
mov
sbb
pop
dec
stc
ret
sub
pop
in
sub
pop
push
dec
push
xchg
inc
or
sbb
fwait
adc
xor
lcallw
push
mov
inc
add
cld
xor
xchg
push
push
xor
adc
outsb
test
mov
adc
fidivrl
mov
ss
sbb
das
xchg
nop
pusha
push
aas
in
out
mov
shl
mov
sub
adcb
je
jp
imul
frstor
or
mov
xorl
in
stos
mov
dec
lahf
add
cmpsb
call
pop
out
pop
bound
ds
cmp
sub
push
push
or
jae
adc
out
sub
imul
lods
xchg
mov
insb
sbb
aad
inc
push
dec
inc
xor
cmp
lret
jle
leave
aam
ss
test
mov
sbb
xlat
sbb
pushf
bnd
pop
pop
ljmp
test
jno
fildl
cmp
je
sbb
andb
push
outsl
adc
mov
movsb
das
pop
fiadds
js
rdmsr
out
cs
lds
mov
ret
dec
add
idivb
jge
jb
jmp
lret
cmpb
aas
clc
pop
xor
pushf
sbb
repnz
insb
loop
mov
push
add
jne
sarl
fidivrl
fnsave
iret
sub
xchg
addr16
sbb
stos
je
fcomps
xor
cmp
sub
shll
fisttpl
ret
adc
mov
lcall
pop
dec
xor
es
mov
dec
or
jns
test
fstpt
mov
push
iret
dec
dec
aad
jl
cmp
ja
jg
xchg
loop
scas
jmp
dec
and
sub
stc
pop
push
loope
mov
or
push
je
mov
shrb
pop
and
outsb
fiaddl
ljmp
sbb
leave
pop
cli
dec
lcall
and
jno
out
inc
xor
or
lods
xlat
je
mov
test
aad
clc
mov
ds
shrl
add
and
dec
pop
and
dec
fsubs
icebp
fs
xor
div
dec
mov
fsubrs
mov
xor
sub
leave
mov
cmp
push
insl
loope
mov
rol
fcoms
ljmp
mov
xlat
pop
dec
push
lea
add
lret
lret
sub
js
ljmp
loopne
jbe
xor
push
dec
mov
imul
fisttpl
mov
add
insb
mov
aas
scas
pop
mov
add
into
dec
lret
out
mov
jp
and
jg
lea
test
mov
imul
xchg
and
sub
push
xchg
or
jg
inc
arpl
jb
inc
rorb
je
sarl
js
add
rclb
leave
in
xchg
test
fdivr
outsb
or
mov
pop
and
cs
pop
cmp
test
js
dec
int3
or
out
test
xchg
pop
and
xchg
les
aam
cli
data16
jmp
test
in
rcll
sahf
push
je
testb
xchg
in
mov
xchg
xor
lahf
or
add
adc
ljmp
push
xchg
leave
and
xchg
ret
sbb
xor
fisttpll
imul
fistps
jnp
pop
outsl
je
sub
mov
test
sbb
lods
icebp
cmp
lods
call
or
xchg
insl
mov
dec
and
imul
push
add
push
push
clc
iret
flds
sbbb
mov
adc
jmp
mov
iret
push
dec
out
push
les
rcll
js
mov
inc
and
out
xchg
mov
jecxz
add
hlt
jae
and
movsl
jae
xchg
subl
rcl
sbb
pop
mov
xlat
daa
shr
sub
pop
sub
inc
loop
into
jns
test
xchg
pop
sub
and
mov
dec
jb
add
addb
cmpsb
push
cltd
jl
cmp
in
fs
scas
outsb
mov
jne
inc
or
loopne
aad
enter
leave
dec
loopne
pop
mov
push
inc
adc
push
mov
addl
movsb
inc
mov
sbb
and
lahf
xchg
mov
daa
ret
pop
push
mov
mov
sbb
aas
push
inc
mov
and
or
xchg
fcompl
push
lea
sub
loope
insb
testl
add
dec
or
sbb
sub
dec
cmp
push
ja
or
pusha
addl
fimull
in
ret
lret
ficoml
add
into
cld
loopne
scas
rcrl
pop
adc
xor
mov
in
or
lods
jns
ret
mov
fldt
add
loop
push
sub
negl
pop
shlb
imulb
popf
cmp
inc
stos
jne
sbb
pushf
cmp
add
mov
pop
mov
repz
ljmp
decb
repz
xchg
nop
sbb
ds
mov
fcmovb
cmovle
cs
icebp
mov
arpl
push
or
je
rcrb
aas
shl
pop
xorl
shlb
mov
jbe
fmull
loop
add
rolb
xchg
call
lret
mov
outsl
mov
pop
add
repnz
and
ret
fbstp
xchg
enter
gs
daa
pop
pushf
cmpsl
xor
in
icebp
imul
and
add
lret
xor
adcl
and
inc
mov
pop
jmp
mov
xchg
cltd
and
std
xor
inc
mov
hlt
sbb
hlt
dec
or
or
test
sub
out
push
adc
shlb
das
int
shl
repz
imul
push
movsl
mov
pop
loopne
xchg
loopne
push
mov
leave
icebp
inc
mov
testb
hlt
add
aaa
mov
rcl
imul
mov
pop
inc
dec
xlat
out
clc
mov
jecxz
pop
adc
adc
jg
cli
out
adc
add
dec
std
sub
sarl
pop
loope
cmp
mov
inc
xor
in
mov
pop
jo
jnp,pn
dec
cmp
sub
or
xchg
loope
push
leave
add
cmp
dec
sub
clc
mov
stos
shll
mov
daa
or
shrl
xchg
xchg
and
jg
xchg
mov
add
push
ja
xor
pushf
adc
sub
scas
push
and
mov
mov
mov
xor
mov
scas
xchg
hlt
insl
mov
lods
in
mov
into
in
repz
pushf
dec
sbb
pusha
ss
loopne
xchg
fs
inc
and
xor
sub
lret
mov
mov
push
pushf
sbb
pop
inc
cmp
cwtl
mov
je
fwait
loope
jbe
test
push
aaa
sub
or
out
rcrl
inc
jns
or
mov
add
in
roll
cli
popa
cmpsl
push
mov
xchg
adc
sub
cltd
or
incl
ficoms
clc
imul
js
sbb
pop
mov
fbstp
lret
or
shrl
stos
out
gs
jg
cs
dec
or
xchg
in
mov
lret
lods
pop
arpl
mov
leave
pop
push
stos
das
int
repz
inc
push
aas
jbe
test
dec
shlb
jae
aam
pop
test
jg
and
and
or
inc
and
push
ss
mov
fsubp
sub
sbb
mov
sbb
jne
testb
pop
ret
es
scas
jnp
test
mov
add
sbb
push
sbb
push
and
xor
push
popf
mov
mov
aas
dec
inc
cmp
mov
scas
imul
ss
add
lods
lea
hlt
fisubl
and
mov
pop
push
push
add
std
inc
push
icebp
out
add
rcll
inc
dec
lret
notl
repnz
mov
pop
mov
fs
sbb
subl
test
pop
sub
mov
aas
scas
adc
fidivl
lcall
push
out
mov
or
stos
lret
dec
loop
cmp
fcmovbe
subl
movsb
lods
ficoms
loope
mov
mov
sbb
pop
lcall
je
push
enter
mov
dec
or
icebp
dec
movsb
mov
jmp
mov
call
stos
or
pop
cmp
mov
and
fcom
imul
jle
mov
out
repz
or
jl
xor
dec
shrb
sub
mov
jne
stos
mov
dec
adc
roll
pop
pushf
mov
pop
mov
jge
test
dec
dec
mov
rcl
mov
sub
cmp
int
out
fstps
dec
cmp
clc
insl
and
into
into
jae
mov
or
incl
sub
in
jo
ret
insb
and
inc
xor
mov
add
outsl
test
pop
mov
mov
test
aas
rclb
or
aad
push
or
hlt
add
xchg
mov
sub
call
mov
mov
repnz
arpl
inc
mov
cmp
add
sub
jl
ds
mov
mov
mov
inc
jo
cli
pop
dec
cmp
mov
fbstp
push
adc
rcrb
fs
rcl
jp
adc
gs
dec
icebp
int
jl
adc
or
shlb
jl
popa
je
pop
roll
jne
movsb
test
into
ret
mov
pop
fs
cmp
lods
sub
xchg
and
xchg
nop
imull
leave
sbb
arpl
std
adc
shll
fdivrs
mov
scas
cwtl
aad
popa
mov
cmp
fsts
cltd
and
ret
movsb
aaa
inc
mov
aad
push
lret
sarb
inc
test
jge
cmp
sub
nop
sbb
push
jne
outsb
call
push
mov
jne
scas
dec
lods
ja
sub
pop
dec
add
in
sbb
icebp
je
rcll
cmpsl
in
jmp
dec
imul
push
bound
stos
jbe
sbb
pop
shll
inc
ficompl
ret
es
lahf
aam
add
jae
not
sbb
adc
stos
or
jl
sti
sbb
hlt
fisubrs
mov
inc
imul
mov
sbb
push
mov
sti
mov
xchg
test
nop
shl
mov
cmp
mov
or
pop
lea
out
mov
dec
pop
xchg
test
xchg
push
rorb
jge
jno
shr
mov
test
xchg
lahf
fs
sub
mov
fwait
rorb
test
dec
aas
enter
je
pusha
dec
btc
mov
xchg
in
lcall
inc
daa
adc
call
sub
or
sbb
sahf
cs
xchg
idivb
cmpsl
pop
cmpsl
in
inc
jg
adc
mov
cmp
mov
sbb
push
jb
dec
pop
imul
sub
inc
and
add
xchg
cmp
pop
imul
ret
xchg
in
adc
xor
xor
les
jmp
fisttps
and
shr
adc
xchg
sbb
fsubl
sbbl
sub
stos
aaa
sub
data16
test
movsb
sbb
and
xchg
jge
inc
sub
mov
mov
xchg
pop
inc
out
lock
mov
arpl
and
jb
loopne
xor
stos
stos
sbb
std
adc
subb
inc
inc
or
inc
ret
addr16
shrl
inc
test
mov
ja
sbb
xor
insb
xlat
cmp
int3
mov
dec
mov
inc
mov
add
mov
jmp
jmp
or
xor
js
jl
or
sub
iret
stos
cld
xchg
out
jp
ss
adc
inc
cwtl
xor
ret
adc
dec
mov
cs
stc
mov
sets
insl
out
inc
hlt
insb
out
sub
in
in
leave
mov
sub
mov
adc
mov
cmp
fdivs
les
nop
cmp
out
ja
jl
in
push
cmpsb
add
jns
add
jle
ret
push
ret
mov
sbb
js
nop
adc
xchg
pop
ja
mov
xchg
fnstsw
dec
inc
test
decl
pop
in
mov
sbb
test
cmp
loop
inc
aad
loopne
fcoms
imul
fbld
jg
imul
sub
mov
bnd
ljmp
jl
push
scas
sub
dec
and
sub
sub
iret
std
fcoml
les
and
fists
loope
sarl
lcall
mov
cmp
fldenv
fcomps
mov
lock
xchg
inc
dec
leave
scas
movsl
or
dec
rcl
jns
sti
mov
mov
sub
pop
in
pop
outsb
add
bound
inc
xchg
hlt
mov
pop
jmp
in
fadds
jnp
test
mov
cmpsb
mov
sahf
inc
adc
stos
aam
and
shlb
cmpsb
add
stos
cmp
xchg
test
xor
aad
test
cmp
daa
cmp
xlat
cmp
sub
fcoml
fsubrs
lods
and
dec
fbstp
mov
test
and
xchg
jnp
sahf
mov
pop
xchg
lret
stos
in
bound
movsb
push
add
adc
push
add
pushf
adc
lret
mov
add
aam
and
cwtl
iret
popa
inc
aad
fisubs
outsb
ljmp
pop
fstl
lods
das
cmpsb
dec
sbb
or
sbb
enter
xchg
ss
cmp
and
add
es
xchg
ss
das
add
push
jmp
shrl
sti
and
push
jl
adc
imul
mov
cmp
repz
cmpsb
push
cmpb
shl
popa
lcall
stos
outsb
mov
mov
std
jmp
adc
test
and
cld
jg
fsub
sub
adc
cmp
icebp
add
fildl
call
sbb
stc
movsl
jle
add
out
mov
pop
jb
xlat
ror
push
fists
lods
sub
jecxz
ss
incb
aad
sbb
gs
mov
lret
test
fstpl
mov
mov
inc
cmp
mov
jne
dec
jae
mov
xor
and
call
popf
xor
daa
fistl
xadd
xchg
mov
mov
scas
xchg
out
xchg
add
in
push
cmp
sarl
xchg
int
outsl
fsub
or
dec
shrb
sbb
shll
dec
cwtl
jns
xlat
mov
mov
dec
imul
jle
xchg
js
and
mov
push
fstpt
inc
ja
bound
or
orb
lock
xchg
xorb
dec
sbb
mulb
push
call
mov
aam
mov
cltd
mov
loopne
lock
sahf
push
mov
movsb
insl
xchg
outsb
loop
cwtl
std
jp
out
adc
aad
call
into
adc
xchg
push
pop
loopne
xor
push
int3
lods
xor
sbb
inc
out
addl
jge
adc
cmp
dec
and
lcall
imul
push
test
add
or
or
ficomps
in
in
popa
mov
sub
and
scas
sub
or
aas
jge
xchg
and
arpl
inc
sbb
push
sub
add
mov
aad
mov
adc
jae
and
popa
sbb
ret
push
aam
jae
cli
mov
mov
cmp
scas
sbb
mov
cmp
mov
push
mov
outsl
mov
pushf
mov
loope
and
jbe
daa
dec
mov
mov
mov
test
push
out
xchg
mov
cmp
mov
jns
push
stos
stc
sbb
aam
addb
int3
cmpsl
cltd
sbb
push
mov
add
nop
or
hlt
pop
cwtl
test
sbb
push
inc
xor
push
sbb
aam
sbb
xor
leave
aam
hlt
iret
jl
pop
ret
push
xchg
mov
xlat
arpl
int3
sbb
pop
sti
pop
mov
and
sbb
push
mov
aaa
nop
and
jb
and
out
and
inc
xor
lret
insl
xchg
sahf
or
xor
dec
sbb
xor
testl
pop
pop
int3
sahf
into
leave
popa
pop
sub
push
push
ljmp
mov
popa
inc
cld
jnp
mov
cmc
inc
int3
inc
fadds
mov
dec
add
sbb
enter
sbb
and
lcall
adc
pop
nop
cmp
xchg
jmp
push
xchg
cmc
jmp
mov
adc
jno
fsts
and
rorb
loope
pop
or
mov
mov
xor
push
lods
and
jmp
lods
pop
setno
divl
ficompl
and
das
in
out
inc
jo
cmp
mov
mov
jnp
xchg
aad
daa
jp
xchg
mov
lds
insb
aad
popf
mov
addl
add
dec
or
xor
std
pop
sub
or
shl
fs
sti
and
sub
in
daa
and
jle
bound
clc
cmp
ret
jecxz
mov
mov
jmp
ja
inc
adc
fnstcw
aaa
lods
sbb
jg
sub
test
add
out
int3
in
jb
sti
aas
inc
data16
xchg
out
inc
subb
jecxz
scas
stos
movl
and
ret
inc
fistpll
push
push
push
pop
scas
mov
insb
lods
mov
or
lret
leave
xchg
dec
cmp
adc
mov
notl
aam
jle
or
xor
and
lret
sbbb
testb
fwait
jne
cmpsb
and
mov
clc
data16
cmp
arpl
cmpsb
sbb
test
cld
popf
inc
jle
inc
add
cs
mov
push
pushf
inc
mov
out
pop
in
lahf
or
push
shlb
test
sub
mov
movsl
cmp
fistps
std
repz
leave
push
repz
mov
adc
inc
hlt
pop
dec
outsb
sbb
dec
cmp
nop
adc
insl
aam
movsl
mov
int
push
ljmp
das
sbb
fidivs
pop
push
mov
fcmovnbe
or
outsb
push
adcl
push
pop
pop
pop
icebp
push
xor
lcall
or
imul
cmp
cwtl
movsb
lret
jne
hlt
add
pop
mov
loope
cli
lds
add
jb
test
sbb
int3
push
cwtl
xchg
and
jmp
mov
roll
jns
mov
dec
and
pop
fldt
repz
iret
pop
ds
inc
sub
out
cmp
adc
jns
inc
mov
sahf
xor
dec
or
jne
cmp
fcomp
cmpsl
jp
or
imul
gs
call
adc
mov
stos
sahf
in
dec
jecxz
mov
pop
cmc
jecxz
jmp
int
test
ja
inc
loopne
aaa
stos
lret
mov
xchg
out
aam
popl
and
mov
or
jge
aas
rcl
mov
or
jo
lods
shrl
lret
movsl
jg
fidivs
testl
pop
fistl
pop
arpl
xchg
aas
mov
stos
iret
imulb
pop
fst
pop
mov
imul
jns
cld
pusha
imul
cwtl
xchg
pop
imul
imul
std
pushf
andl
mov
shll
rol
sbb
dec
sbb
xor
std
mov
iret
jo
jecxz
sbb
in
rclb
push
jno
loope
call
in
mov
lcall
and
dec
pop
cmp
cs
sub
push
xor
incb
lock
bts
jle
mov
or
cli
cmp
dec
icebp
enter
aas
fisttpll
insl
xor
in
loop
mov
outsb
sar
push
in
cmpsl
push
scas
push
jge
hlt
mov
push
imul
icebp
adc
xor
xchg
lret
popf
addr16
arpl
dec
cld
lock
xchg
push
dec
mov
pop
or
xchg
out
shlb
ds
mov
iret
movsl
pop
mov
frstor
pop
fcmovne
mov
fiaddl
adc
adc
xchg
adc
cli
imul
mov
jge
cld
neg
mov
xor
insl
pop
leave
adc
and
test
orb
ja
jne
cwtl
lds
fidivl
add
mov
fisubs
mov
mov
sub
gs
ja
push
int
sbb
mov
dec
jg
adc
lods
or
arpl
dec
fsubrl
fsubs
fstl
pop
dec
mov
jo
fldln2
cmp
xchg
insb
push
pop
dec
jecxz
push
mov
notb
mov
and
test
cmp
insl
sub
xchg
dec
dec
mov
mov
clc
fwait
out
dec
loopne
xor
inc
arpl
mov
xchg
sub
ja
jge
loopne
cmpsl
mov
in
adc
sbb
movsb
icebp
mov
inc
adcl
fdivr
js
mov
push
xchg
sarl
lahf
xchg
mov
ds
scas
or
inc
in
sbb
lret
mov
dec
mov
adc
mov
fildl
std
fisttpll
sbb
repz
addr16
add
clc
adc
sub
gs
inc
jne
dec
pop
pop
adc
mov
dec
shl
jp
or
pushf
insb
xchg
mov
ja
in
xchg
mov
xchg
xor
out
adcl
les
mov
sub
mov
sub
aad
ficompl
lods
xor
mov
pop
mov
xchg
or
push
lods
inc
lods
stc
clc
dec
clc
in
das
xchg
xchg
mov
mov
fnstcw
test
mov
scas
xchg
ljmp
sub
fwait
sbb
adc
repz
mov
cmp
xor
test
mov
add
xchg
rcrl
jae
and
ret
sbb
popa
xor
adc
repz
lods
pop
fdiv
sub
fbld
jmp
push
add
aaa
jmp
pusha
ret
test
push
in
jl
int
add
fs
push
ss
sbb
pop
fstps
push
push
aam
outsl
dec
push
in
and
mov
mov
sub
push
xchg
inc
cmpsb
arpl
shlb
or
icebp
inc
mov
push
cmp
addr16
js
clc
push
fst
inc
dec
mov
push
cmpsb
faddl
fsubrs
in
sbb
jg
mov
inc
jmp
ret
mov
or
cmpsb
push
lock
push
mov
out
popa
jmp
add
movsl
pusha
test
jae
xchg
xchg
dec
adc
xchg
les
es
or
jae
sbb
outsb
js
lock
lcall
in
push
pop
call
add
daa
vmread
or
mov
sub
das
dec
loop
mov
clc
jp
mov
loop
incb
daa
cpuid
add
loopne
rcll
add
mul
stos
mov
sbb
inc
jnp
ficoml
test
vxorps
and
mov
dec
push
or
lock
lods
adc
sbb
leave
mov
adc
jno
std
xlat
xchg
add
inc
xchg
shll
sahf
ret
imul
sub
loop
je
dec
sar
push
xchg
sti
fmul
lret
lods
ret
xchg
ficomps
int
lahf
pushf
mov
dec
mov
lcall
jle
popf
shl
adc
cltd
push
sbb
mov
pop
xor
fcmovu
push
scas
inc
ret
fs
lods
cs
stos
inc
mov
ret
mov
stos
and
dec
stc
adc
cmp
push
ficoml
out
sub
xchg
int3
sti
cs
lock
and
mov
xchg
andb
int
test
pusha
sbb
push
push
xchg
xor
push
subb
nop
rclb
add
andl
cli
sub
sbb
fisttps
jge
faddl
pop
cli
push
lahf
loopne
ud0
fldl
movsb
fcompl
xchg
outsb
pop
jmp
dec
add
stos
xor
mov
xor
xchg
cmp
dec
mov
pop
inc
insb
adc
sbb
arpl
int
dec
push
jmp
ret
mov
icebp
sub
lcall
jno
mov
into
xchg
jne
rclb
je
and
push
fcoms
imul
fdivs
pop
stos
aas
cmp
out
jns
insb
cltd
and
xor
pop
cmpsb
je
fildl
cwtl
mov
subl
lea
xor
movsl
cmpb
test
mov
out
pop
js
enter
lds
jne
in
cmp
flds
cltd
sbb
jno
push
xchg
sbb
leave
cld
fcmovb
mov
ficomps
xchg
test
sub
rcll
or
out
jg
sbb
lods
and
mov
les
or
int
flds
icebp
lods
mov
jmp
lods
inc
sub
loopne
adc
push
dec
loop
push
sub
test
push
in
dec
idivb
and
and
stos
scas
sahf
xchg
adc
pop
push
xchg
and
xchg
addb
rcll
fld1
in
xor
adcl
push
std
mov
mov
pop
jae
jne
out
pop
xchg
xchg
pop
lds
cwtl
std
cmp
adc
push
mov
lcall
idivl
mov
movsb
xchg
push
lods
dec
enter
xchg
jne
xchg
outsl
ffree
stos
ds
xlat
movsb
add
outsl
fwait
adc
fnstsw
or
pop
xchg
cmp
rcrb
sub
lahf
push
repnz
stos
xchg
push
xchg
fsubrs
lret
mov
mov
and
icebp
insl
cmp
and
dec
dec
sub
test
lea
loope
fdivr
push
cmp
das
add
es
jmp
cmp
aam
xchg
ret
mov
mov
sub
jae
lds
inc
add
jmp
das
rcrb
loop
inc
jl
out
fwait
jmp
out
push
sti
fistpll
mov
xchg
repz
clc
push
mov
enter
mov
jle
pop
push
decl
test
loopne
cmpsl
jge
or
add
add
xor
add
idivb
sbb
pop
addr16
dec
fnstenv
cmp
cmp
and
mov
xor
lods
addr16
push
mov
push
xchg
pop
cld
icebp
outsl
or
das
stos
stc
xor
mov
ret
pop
xchg
xor
rolb
shl
add
movsl
push
sbb
lods
rcll
inc
nop
sub
cmc
das
or
and
loope
mov
subl
sub
inc
and
leave
mov
in
imul
gs
fisubrs
movsb
push
fnstenv
inc
orl
popf
dec
sbb
push
lret
pop
movsl
shl
rcll
add
push
jg
lcall
cmp
xchg
lock
addr16
add
adc
lret
cmpsb
pop
in
push
xchg
inc
aas
push
pop
mov
sbb
jl
js
xchg
adc
test
and
jne
mov
les
cmc
popa
gs
or
cwtl
je
leave
in
xor
xchg
nop
movsl
adc
push
adc
cmp
push
push
ficomps
ljmp
inc
negb
mov
dec
mov
subl
out
push
gs
outsl
fcoms
mov
loope
pop
sub
outsl
pushf
scas
inc
cli
popa
js
sub
aad
roll
notl
repnz
push
jnp
cmp
pop
into
push
cltd
inc
adc
or
mov
sub
enter
and
loop
lret
push
mov
and
xor
pop
mov
mov
in
jge
inc
mov
out
or
xchg
jl
rcrl
jmp
sarb
sub
or
aad
out
mov
push
adc
adc
xor
add
lods
xor
mov
sub
lods
shrl
inc
scas
and
and
mov
in
hlt
test
fdivs
popa
cltd
jnp
xchg
jmp
pop
sahf
insl
adc
repz
mov
sar
cmpl
push
popf
dec
jecxz
into
pusha
stos
or
cmp
push
pusha
inc
lock
lods
dec
xorb
int3
fcomip
in
cwtl
push
mov
cwtl
popf
xor
lea
pop
movsl
and
mov
lock
mov
sbbl
ja
inc
fnstcw
mov
das
jmp
stos
cwtl
add
adc
sbb
dec
xchg
mov
dec
xchg
cmpsl
fimuls
fdivrs
cli
mov
in
add
cwtl
push
testl
jle
fidivrl
lods
lods
in
scas
stos
adc
call
outsl
outsl
lret
subl
mov
adc
xchg
inc
outsb
clc
jo
and
pop
pusha
dec
sbb
lret
mov
divl
out
outsb
mov
mov
in
mov
movsl
xor
repnz
enter
repz
jmp
mov
enter
imul
or
add
push
fistpl
lret
cmp
push
in
push
jmp
lahf
jle
aam
adc
hlt
jne
push
vaddpd
cmp
cmpsb
sub
sarb
std
pop
scas
jns
push
mov
xor
aad
sub
jecxz
inc
pop
testb
insl
retw
cmp
jmp
mov
loope
pop
or
aad
jl
test
push
dec
sar
jl
cmpb
lock
sbb
loopne
mov
mov
sarl
into
pop
sbbl
in
dec
or
repz
fldcw
int3
xor
movsl
mov
pusha
mov
sbb
insl
xor
int3
lcall
test
sub
aaa
leave
ret
xlat
cltd
adc
sarb
pushaw
xchg
rclb
add
cmp
xor
pop
sub
scas
pop
xchg
xor
add
std
jmp
mov
mov
cmpsl
pop
adc
push
sub
adc
ret
in
es
movsb
fsubrp
mov
dec
dec
pop
gs
fimuls
xchg
and
jl
mov
sbb
movsb
xchg
loopne
pop
push
out
push
in
or
bnd
sti
push
jle
andb
sbbb
in
push
cltd
xchg
cmp
mov
test
and
adc
push
pop
adc
pop
sbb
sbb
js
aad
adc
shlb
les
and
popf
ja
xor
sahf
lcall
repnz
dec
push
pusha
loope
jae
adc
enter
stc
push
or
stos
mov
jmp
pushf
mov
cmp
ficomps
sar
insl
lds
es
ds
mov
sbb
xlat
lods
enter
push
mov
outsb
and
shlb
cmc
cltd
lds
hlt
pop
jmp
movsl
inc
cmpsl
ja
sub
inc
mov
sbb
lret
push
or
mov
push
repnz
cmp
in
xchg
jg
push
fisubrs
pop
adc
divl
push
push
cmp
mov
pop
jo
outsl
or
xchg
xor
mov
hlt
mov
mov
cmp
xor
jge
ss
sbb
and
in
popf
dec
aad
mov
add
std
mov
sar
ret
inc
cmpsl
mov
xor
lock
repnz
add
ficomps
or
and
popf
es
pop
mov
sbb
inc
cmp
ret
inc
xchg
push
mov
sub
push
rorb
push
into
inc
clc
repnz
into
pop
ret
fcmove
loopne
mov
sbb
xor
push
sub
into
add
adc
cmp
aad
sub
push
in
mov
ret
xlat
iret
mov
cmp
or
cli
xchg
sbb
repnz
addr16
in
clc
sti
inc
out
and
pop
popa
adc
pop
mov
into
jg
adc
inc
jecxz
cwtl
mov
or
cmp
int3
adc
jmp
out
hlt
int3
inc
outsb
popf
sub
das
lods
or
and
cmp
mov
jae
adc
xchg
jns
inc
mov
mov
lret
or
iret
inc
pop
pop
and
sbb
hlt
xchg
ds
sbb
adc
insb
pop
pop
les
int3
das
rcll
sti
je
insb
push
loope
inc
pushf
xor
in
sbb
adc
mov
hlt
in
inc
cmc
int
dec
insb
adc
add
inc
rclb
jbe
aas
pop
xchg
push
jg
sub
inc
cmp
inc
push
inc
ds
and
pop
aad
hlt
mov
fs
pop
mov
or
cmp
xchg
icebp
jae
call
jno
pop
xacquire
dec
or
fsubs
xchg
bound
shlb
imul
mov
or
mov
movsb
and
or
in
xor
mov
imul
xchg
bound
scas
insl
jnp
ss
adc
outsb
jle
mov
adc
cmp
or
xor
push
mov
inc
lock
pop
je
pop
adc
xor
into
ss
inc
and
cwtl
orl
sub
popf
xchg
fsubl
mov
add
fildl
cmpsb
dec
loopne
mov
jb
push
lret
or
imull
aaa
or
fmuls
stc
imul
rcll
jns
cltd
add
mov
add
gs
jo
lods
mov
test
lahf
jl
pop
test
and
hlt
decb
out
pavgw
out
xchg
bound
mov
mov
add
adc
mov
je
sub
js
and
ja
gs
clc
decb
or
jecxz
jno
fwait
outsb
aad
mov
enter
xor
lds
fimuls
out
adc
rcrl
testl
out
outsb
fsub
je
and
mov
push
mov
mov
and
inc
cltd
mov
aaa
shlb
int
shlb
leave
mov
inc
mov
outsb
clc
inc
js
mov
je
shl
adc
out
cli
test
out
inc
inc
mov
icebp
sbbl
mov
cli
dec
hlt
mov
inc
jmp
ja
jne
sbb
outsb
or
push
mov
and
je
xor
jo
mulb
add
add
mov
mov
xor
aas
cld
gs
cmp
pop
leave
imul
sbb
and
cs
xchg
dec
xor
ds
std
mov
pop
or
mov
mov
xchg
lahf
mov
test
cwtl
outsl
xor
jg
cmc
fwait
jl
dec
arpl
dec
shrl
cli
fcomp
xor
pop
shl
scas
icebp
sub
in
pushf
mov
mov
pop
es
dec
roll
jo
out
mov
cltd
pop
sbb
ss
sub
pusha
in
lods
js
add
fwait
jle
call
inc
mov
inc
dec
xor
and
mov
cli
fs
xor
inc
insb
call
cltd
adc
into
in
inc
cmpsb
lret
ud1
in
adc
xor
hlt
mov
sub
hlt
xchg
jo
les
inc
push
jbe
enter
pop
or
mov
fcoml
ret
test
push
lods
pop
sbb
inc
popa
decb
inc
mov
jb
scas
jg
sbb
mov
and
jbe
iret
shlb
stos
out
mov
ljmp
aas
pop
aaa
dec
mov
mov
inc
daa
cwtl
arpl
aad
insl
or
pop
cmovle
pop
cmp
pop
insb
mov
xchg
xorb
loope
pop
shl
sbb
inc
mov
mov
inc
mov
sarl
add
into
pop
je
cmpsb
lods
popf
push
mov
push
add
ja
addr16
adc
mov
lahf
cmp
rcll
and
movsl
jbe
push
mov
cwtl
fnstcw
add
int
iret
sbb
das
xchg
xchg
xor
dec
dec
addb
push
dec
or
xor
pop
inc
mov
test
xacquire
pop
int
hlt
jns
call
jle
shrb
jno
or
in
or
std
dec
rcr
mov
out
mov
out
cmp
sub
out
adc
sbb
cli
dec
movsb
sub
inc
mov
sbb
mov
sbb
rcr
or
and
mov
pop
in
or
je
dec
xchg
ret
and
rcll
push
inc
jp
sbb
out
jecxz
mov
or
outsb
adc
cmp
mov
inc
stos
xchg
adc
add
int3
mov
xchg
or
dec
iret
and
jp
cmpb
cld
repnz
iret
cld
pop
xor
push
popa
in
xchg
jg
pop
lret
cmc
and
test
mov
pop
rolb
rclb
sbb
mov
test
mov
imul
mov
sbb
cltd
out
movsb
mov
dec
cmp
pcmpgtd
jo
push
test
cmp
insl
out
add
lahf
push
test
jno
push
adc
mov
dec
icebp
sti
adc
pushf
stos
fs
cli
idivl
sub
jmp
xchg
jbe
popa
dec
sub
mov
dec
test
stos
mov
xchg
in
adc
or
xor
das
and
add
inc
push
xlat
ljmp
push
out
pop
insl
xor
das
test
repnz
pop
sub
das
mov
popa
jg
push
mov
ret
out
sti
adc
lahf
pop
inc
jecxz
sub
in
mov
add
pusha
xchg
inc
pusha
scas
cmp
ss
lcall
lea
pop
aad
adc
mov
inc
jg
mov
cli
insb
sbb
push
shlb
mov
inc
add
dec
jmp
repnz
inc
scas
fsubr
and
cmp
hlt
div
inc
adc
add
and
incb
movsl
clc
pop
lahf
movsl
inc
test
je
lods
fsubrp
imul
lods
out
mov
arpl
cmp
loopne
lea
cltd
nop
and
push
mov
adc
jns
xchg
cld
adc
pop
subb
dec
inc
dec
in
push
testb
jle
xchg
sbb
daa
scas
sub
push
sub
xchg
in
mov
mov
mov
sub
mov
ret
loope
test
push
mov
out
jnp
cmp
mov
push
xchg
cmp
div
sub
rclb
jecxz
dec
cmc
dec
or
push
shl
and
iret
movsl
test
or
cltd
popf
lods
in
pop
mov
and
aas
cmpsb
lcall
xchg
shl
inc
pop
and
fistps
int
push
shrl
mov
xchg
loopne
out
aas
push
mov
push
pop
aaa
inc
fdivl
pop
ds
xor
sub
aaa
or
jae
inc
and
out
mov
cmp
jae
in
int3
ds
mov
sub
lds
sbb
pushf
push
push
xchg
clc
and
mov
std
or
stos
jbe
aad
add
jmp
orb
lds
sub
sarb
cmp
int
lcall
scas
sahf
fcomp
and
xor
cmp
out
test
inc
ss
push
add
pusha
push
aaa
push
sbbl
mov
in
gs
dec
lods
sbbb
dec
lcall
or
int3
push
and
adc
add
std
stos
dec
jnp
mov
add
and
cs
sbb
cld
cmpsl
in
and
jp
push
push
mov
push
xchg
lahf
repz
dec
mov
or
rol
pop
mov
pop
aas
std
push
stc
add
test
push
lds
xor
es
mov
sbb
pop
push
inc
popf
dec
add
arpl
arpl
mov
sti
and
lret
leave
stc
push
push
pop
movsl
data16
test
sbb
xor
or
and
pop
or
lods
test
mov
xor
lret
cmpsb
addl
int
jno
push
lods
mov
cwtl
ficomps
nop
pushf
les
popf
adc
pop
out
jno
iret
mov
cmp
adc
mov
adc
fdecstp
push
data16
lds
clc
aas
mov
inc
jno
inc
add
mov
pop
mov
push
cmp
in
mov
enter
push
adc
mov
inc
adc
xchg
mov
adc
movsl
shll
sbb
stc
cmp
mov
gs
mov
andl
adc
add
mov
mov
adc
cmp
cmp
push
lahf
lods
out
or
dec
jmp
out
int
jl,pn
pop
in
cltd
movsl
loope
sbb
pop
imul
in
fnstcw
in
hlt
xchg
pop
cld
mov
addl
in
mov
test
and
adc
push
data16
shlb
mov
test
ljmp
dec
jl
test
push
add
aaa
dec
insb
xchg
in
repnz
inc
insb
pop
adc
and
xchg
cmp
in
jp
add
dec
leave
int
jl
mov
and
pop
pop
mov
mov
jae
jnp
imul
push
fcoml
mov
mov
sbb
push
in
mov
imul
pop
movsl
add
pop
inc
insb
and
and
dec
pop
jmp
jmp
popf
jl
add
sbb
xchg
jnp
sbb
and
mov
mov
and
xorb
lods
das
movsl
or
scas
adc
lods
mov
mov
cs
daa
fcmovnu
ret
out
test
lods
add
pop
and
and
mov
mov
leave
je
sbbl
or
rcrb
arpl
outsb
cmc
std
lods
ja
jb
adc
mov
cmp
xlat
jne
ss
or
mov
leave
std
sbb
flds
inc
pusha
jp
lret
sti
cmp
dec
cltd
stos
out
pop
mov
adc
movsl
getsec
stc
aaa
dec
xchg
pop
aaa
fwait
xchg
lret
mov
scas
cmp
lods
ljmp
jbe
mov
jmp
sub
cmp
movsl
sub
sbb
adc
or
inc
imul
and
dec
sbb
mov
mov
and
test
popl
jns
sub
scas
sub
loop
arpl
jbe
inc
mov
xchg
mov
into
inc
adcb
adc
xlat
clc
pop
sub
dec
fisubrl
cltd
jns
add
cwtl
movsb
js
rcrb
cwtl
movsl
push
out
arpl
mov
jecxz
mov
mov
in
pop
out
int
cld
imul
mov
pop
push
loop
outsb
int
push
stc
sbb
addr16
adc
push
inc
add
enter
lcall
push
call
push
out
daa
repnz
adc
mov
js
ljmp
cmp
jmp
pop
or
lret
mov
js
mov
inc
dec
cmp
int
xor
lds
adc
rol
pop
cmpsb
ret
cmpsb
ja
mov
les
enter
cmpsb
jmp
mov
push
lahf
icebp
jns
loopne
mov
lss
dec
adc
adc
movsl
in
scas
mov
xor
hlt
test
loope
sub
inc
xlat
scas
sub
roll
daa
aad
loop
cmp
fstpl
or
xor
arpl
call
mov
scas
adc
push
xchg
repnz
fistpll
xchg
xor
inc
mov
lar
jmp
add
movsb
repnz
sub
rorl
mov
repz
ret
sbb
sbb
lahf
mov
popa
and
es
mov
jl
mov
mov
pop
fdivp
ds
cld
push
ret
insl
pop
inc
in
loop
xchg
push
jne
addr16
xchg
out
push
pop
inc
imul
mov
pop
jp
jo
decb
xchg
loop
dec
scas
mov
and
pop
call
mov
cmp
adc
in
popa
dec
icebp
cmp
mov
jge
enter
ljmp
push
bound
outsl
rorl
ret
mov
push
stos
inc
shl
xchg
test
xchg
enter
cmc
cmp
adc
inc
psubusb
mov
lods
mov
inc
movsb
fidivrs
sub
jle
ja
xchg
test
add
xor
fyl2xp1
dec
int
dec
inc
mov
int
lods
repnz
outsl
jl
mov
sub
jp
lock
test
xchg
cmp
dec
xor
aam
mov
arpl
xchg
mov
adc
es
ret
out
mov
push
mov
sbb
lods
cmp
pop
fisubrs
inc
dec
hlt
jo
out
push
dec
inc
sahf
fistps
ja
dec
jl
fsubl
and
inc
xchg
ret
sub
or
in
or
and
dec
scas
test
mov
jo
pushf
fnstenv
mov
sbb
dec
mov
dec
sti
xor
and
sbb
fstpl
test
bound
cmp
or
jne
sti
push
ljmp
cmp
sub
sub
sbb
push
mulb
fs
or
xchg
add
clc
out
mov
sahf
aad
and
ret
or
dec
daa
jb
inc
lods
sbb
bound
inc
push
cs
dec
xchg
pusha
js
xor
cltd
push
sub
pop
imul
cmc
subb
lret
mov
std
orl
inc
push
sti
inc
mov
mov
mov
shrl
cs
loope
dec
xchg
mov
outsb
popf
xor
mov
mov
add
push
stos
jbe
inc
push
daa
notl
pop
inc
or
push
call
jmp
xor
js
mov
cmpsb
call
fs
and
push
xor
dec
jp
and
int
jmp
xlat
mov
div
mov
sbb
mov
jb
gs
clc
adc
mov
mov
mov
cmp
test
and
int
hlt
aam
in
sub
sub
cmpsb
icebp
out
mov
aad
in
test
scas
cltd
mov
sbbb
sahf
in
xchg
aaa
pop
mov
dec
add
mov
cmp
and
or
add
int3
fdivs
add
test
cmpsb
hlt
into
in
mov
cmp
fmul
dec
pop
pop
popf
stc
xchg
and
leave
mov
jge
call
cmp
mov
dec
and
ret
es
sub
fs
jae
mov
jl
jecxz
inc
push
imul
cmp
mov
fneni(8087
loope
dec
inc
jle
xchg
push
push
pusha
sbb
add
cwtl
hlt
jmp
and
add
push
popf
cmp
lahf
jge
push
push
or
ret
pop
or
and
mov
and
in
pusha
cmp
adc
popf
jns
mov
aam
test
dec
and
divl
push
lret
jmp
nop
xorl
inc
sub
jo
mov
mov
mov
mov
adc
or
adc
xor
lods
pop
sub
icebp
jbe
xlat
in
call
cmp
jns
sub
adc
xor
adc
inc
xor
aas
fists
pop
xor
mov
bound
push
mov
stos
lcall
rcll
mov
stc
out
test
dec
sbb
dec
mov
hlt
ja
inc
mov
pop
lahf
pop
jmp
movsl
inc
push
push
movsb
addr16
es
loope
movl
sbb
and
or
dec
fisubl
sarl
add
mulb
jmp
sarb
out
into
or
xor
or
or
mov
movsl
jmp
push
mov
and
mov
dec
push
jo
movsl
push
and
loop
mov
es
movsb
jecxz
insb
mov
arpl
aas
sbb
rcl
mov
call
dec
cmpsl
cltd
mov
call
in
mov
sbb
ret
jl
add
cmc
jle
mov
mov
push
sub
popf
jbe
push
rep
lcall
xchg
pop
rcrb
adc
dec
fstpl
sub
push
out
sbb
sbbb
xor
int
sub
cmpsl
or
mov
mov
es
into
jno
jmp
mov
mov
inc
das
in
mov
sub
mov
sti
xchg
clc
out
mov
lock
jne
insl
lret
sbb
in
push
pop
pop
dec
in
and
sub
sbb
add
in
scas
cltd
je
cmp
lcall
xchg
xor
push
inc
mov
sahf
cmc
sarb
sbb
scas
xchg
stos
add
mov
loop
dec
cmp
add
bound
inc
lret
aad
insb
mov
pop
pop
orl
sub
jb
lret
add
gs
ret
sbb
stos
mov
cmp
mov
dec
in
inc
nop
sbb
leave
and
test
jge
pop
arpl
inc
int
mov
lret
or
xor
jae
fdiv
xchg
out
lock
inc
push
mov
nop
pop
mov
in
mov
add
xchg
push
mov
cs
adc
icebp
popf
sarb
jmp
inc
pushf
push
scas
inc
hlt
mov
lret
jno
dec
scas
xor
add
pop
lods
add
ret
xchg
bound
stos
xor
pop
xchg
cld
jmp
addr16
es
jp
loop
inc
cmp
xchg
adcl
inc
outsb
mov
and
and
inc
mov
ds
adc
jmp
lods
addr16
mov
rcll
enter
jb
sub
iret
mov
testl
sub
add
lcall
sub
int
fwait
push
jg
rorl
xlat
mov
add
lret
call
and
push
ret
sti
cmp
push
test
pop
movsb
jecxz
lods
mov
inc
lods
xchg
ja
shrl
mov
testl
in
pop
clc
mov
pop
pop
cltd
out
jae
popa
outsb
mov
insb
subb
xor
pop
int
sbb
outsb
lds
or
and
cltd
xchg
push
inc
push
mov
dec
add
mov
jns
dec
orl
jno
add
xchg
jecxz
jbe
xor
addr16
xor
imul
dec
addr16
or
inc
ljmp
sbb
or
and
and
lret
cmp
shl
cwtl
xchg
nop
lea
pop
dec
aad
lds
xchg
cmp
out
adc
xor
popa
inc
inc
pop
sub
pop
stos
and
or
pop
xor
fcompl
and
xchg
push
adc
scas
xchg
sub
aam
dec
dec
jbe
add
and
outsb
dec
pop
cmp
add
scas
movsb
out
test
cmp
jns
push
rcr
adc
sub
xor
movsb
js
shlb
and
insl
xchg
test
or
adc
xor
xor
and
ret
push
push
mov
or
lcall
add
push
sub
adc
xchg
jmp
not
int3
outsb
mov
out
les
dec
test
aas
cmpsb
inc
addr16
xor
push
rol
add
push
pop
data16
loope
jle
loop
insb
cmp
out
jbe
shlb
movsl
jmp
sbb
jns
mov
jg
adc
out
iret
cmpl
aad
scas
inc
das
or
add
repnz
jo
gs
roll
arpl
out
push
pop
pop
das
in
cwtl
or
aad
test
or
int
lret
cmc
mov
xlat
lret
cmc
les
push
mov
test
adc
inc
cltd
jecxz
cmpl
xor
stos
mov
bound
lret
loope
mov
cs
out
push
dec
cli
adc
scas
and
pop
into
frstor
inc
cmpsb
sub
pop
stos
shrl
add
cmpsb
mov
imul
mov
cmp
xchg
pop
xor
negl
loope
or
repz
xor
push
pushl
or
out
or
das
pop
add
pop
inc
and
vcvtsi2sdl
pop
pop
rcl
ret
cli
jmp
gs
es
imulb
sahf
xor
push
ja
sti
gs
pop
cmp
fstpl
inc
fidivl
mov
sbb
inc
push
mov
jae
daa
cs
imul
shrb
frstor
es
popf
sub
inc
push
xor
sub
dec
dec
aaa
pop
or
dec
fcomi
out
push
lret
jno
inc
sbb
sti
sub
fistpl
mov
fisubrs
loop
dec
xchg
push
je
jae
sbb
dec
inc
add
or
out
jne
idiv
and
mov
mov
sub
mov
pop
dec
icebp
sbb
leave
stc
imul
sbb
fstpl
popa
mov
inc
sub
dec
or
das
xor
push
pop
dec
test
orb
xor
pop
and
push
stos
hlt
cmp
fists
popf
lret
jbe
ficomps
cmp
sbb
imul
pop
arpl
mov
inc
into
lea
and
xor
jo
xor
sbb
ret
movsl
push
xlat
cmp
loop
pop
lds
sbbl
xchg
mov
cli
xchg
dec
or
incb
clc
mov
imul
mov
cld
inc
sub
push
lods
in
xchg
cmp
out
or
rclb
stos
fsts
bound
add
nop
in
jecxz
push
add
push
out
pusha
mov
ret
mov
mov
aad
mov
lods
arpl
je
cmp
push
jg
repz
enter
repz
cmc
cltd
xorl
cmp
sub
leave
sub
cld
test
add
jg
mov
mov
inc
mov
xchg
inc
pusha
mov
push
outsb
das
jmp
sub
sbb
mov
scas
or
ret
sbb
stc
mov
cs
mov
cmp
pop
push
mov
xor
aas
push
cmp
fwait
cltd
push
sub
outsl
jecxz
ljmp
or
aad
lahf
outsb
jmp
test
xchg
jbe
inc
xchg
jg
fistl
adcl
xchg
cmpsb
js
cmp
fsub
sbb
cmpsb
lcall
push
js
add
push
es
adc
xchg
into
jg
push
mov
jbe
jae
imul
aad
int
jnp
xor
lcall
arpl
loop
mov
mov
add
xchg
dec
enter
mov
jp
mov
out
adc
jecxz
fs
dec
sub
out
sarb
sbb
arpl
in
and
push
enter
mov
in
jecxz
mov
jg
xchg
push
adc
dec
jb
push
push
sub
lret
mov
or
leave
mov
cmp
and
loopne
test
cli
mov
mov
clc
sbb
push
push
cmp
or
push
inc
fistps
sti
in
mov
xchg
add
into
xchg
pop
hlt
sbbb
lea
jp
imul
insl
imul
inc
repz
adc
lods
loope
movsl
cmp
fcmovb
dec
hlt
fsubrs
xchg
in
ds
mov
cmp
mov
mov
mov
add
jbe
push
or
mov
jp
or
mov
dec
std
jb
or
pop
jb
mov
mov
or
sbb
sbb
adc
pop
sbb
std
sbb
int
push
xchg
rorl
xchg
jl
std
daa
icebp
daa
into
push
or
add
dec
sub
sub
test
outsb
test
add
rcll
inc
mov
int3
out
pop
enter
jae
outsb
shll
in
cs
or
bound
lock
std
pop
cmpsb
mov
add
test
and
mov
es
mov
xor
jl
scas
xchg
and
xor
push
and
repnz
ret
test
or
std
lods
lods
cld
ret
movsb
shll
xor
mov
mov
or
jne
sti
xor
lahf
daa
pop
push
mov
xor
js
outsb
and
fst
outsl
addr16
xchg
out
add
xor
mov
test
daa
add
push
aas
add
add
movsl
nop
out
xor
lret
dec
imul
add
orb
outsl
sbb
lcall
lods
nop
decl
dec
jl
scas
xor
iret
cvtdq2ps
xor
stos
aas
inc
stc
dec
jp
cmc
adcb
xchg
out
sub
sub
insb
xchg
or
xchg
ja
loopne
inc
or
push
fisubrl
jmp
mov
xchg
push
int
mov
inc
xchg
cmp
fcmovne
daa
sbb
inc
out
jns
mov
mov
rcr
jbe
xor
mov
jmp
dec
mov
cmp
add
das
out
pop
add
cmpb
mov
fisttpll
movsl
lea
mov
lods
stos
lahf
loope
mov
jnp
sti
sti
lods
push
dec
lock
and
pop
pushf
xchg
inc
dec
push
push
cli
mov
out
jnp
or
mov
stos
cmc
cmp
mov
test
jle
inc
mov
mov
hlt
mul
push
mov
mov
fdivr
cmp
imul
mov
test
stos
ds
out
or
fistpl
jns
xor
add
xchg
xorb
std
and
popa
inc
dec
pop
aaa
clc
dec
pusha
push
inc
pusha
arpl
jmp
test
or
nop
outsl
ret
cmp
pop
gs
cmp
lahf
andl
sbb
lods
jmp
mov
sub
in
arpl
shrl
sbb
pop
jp
pop
adc
mov
out
push
jne
aaa
orps
inc
mov
mov
into
clc
imul
out
mov
push
and
mov
xor
or
mov
int
les
pushaw
arpl
mov
push
mov
cwtl
bswap
inc
sub
dec
sbb
adc
lret
fwait
mov
fisubrl
mov
xchg
cmp
std
cmpsl
mov
adc
dec
mov
xchg
lcall
scas
repnz
test
and
clc
stos
idivb
sbb
fldenv
das
iret
outsb
xchg
arpl
js
icebp
push
fcmovbe
pop
out
mov
lcall
dec
mov
mov
and
push
das
fidivs
jnp
in
push
sub
adc
jo
push
xor
loopne
and
xor
fstl
ljmp
add
mov
call
data16
orl
lea
xchg
inc
dec
aas
in
push
mov
dec
lret
cld
testb
es
icebp
jmp
xchg
aam
shrb
push
inc
sub
push
xor
into
stc
mov
push
mov
adc
imul
frstor
clc
hlt
ja
pop
cmp
in
adc
or
lahf
testb
cmc
cmp
xchg
mov
xchg
or
rorl
ds
sub
push
dec
movsb
pop
xchg
fs
add
imul
mov
cmpsl
jae
xchg
js
push
outsb
cmp
scas
fnsave
out
imul
repz
imul
cmp
lret
in
dec
and
bound
clc
sbb
cld
xchg
addb
gs
pop
cmc
std
mov
mov
ss
mov
xchg
int
mov
add
push
xchg
daa
shrl
inc
leave
imull
sti
cmp
scas
rcl
daa
ja
mov
and
pushf
add
push
mulb
shrb
push
cmp
push
les
mov
sub
add
and
xor
xlat
dec
mov
out
push
arpl
pop
scas
out
adc
pop
js
xor
cs
dec
scas
and
lret
mov
pop
jmp
loop
lret
xchg
push
mov
cmpb
dec
ds
in
and
imulb
out
jmp
lea
sub
nop
xor
pop
mov
jge
xchg
sbb
sti
add
mov
clc
cmc
loope
cmp
ljmp
aaa
outsb
in
rcr
xchg
and
jg
xor
sbb
push
movsl
add
cmp
push
frstor
lds
sub
push
and
pusha
sahf
mov
insl
or
fwait
jmp
sbb
add
clc
xlat
arpl
jg
mov
loop
scas
push
lock
les
xchg
fsts
icebp
cmp
dec
cwtl
mov
fsubrp
dec
aas
push
jl
fldcw
mov
lret
scas
fisubrs
and
add
mov
enter
nop
or
sbb
xchg
jb
push
sbb
in
push
loop
popa
dec
xlat
mov
arpl
sbb
fmuls
lret
cmp
decl
nop
or
cmp
in
cmpsl
loopne
cwtl
std
mov
loop
mov
push
adc
movsl
pop
sbb
mov
lea
or
push
pop
enter
je
loopne
rolb
pop
pop
sub
fld
repz
push
jno
out
popa
imul
xor
jae
add
and
mov
push
pop
pop
aaa
sbb
pop
sbb
add
sti
mov
ror
push
xchg
xchg
cmpsl
dec
cltd
xor
xchg
adc
adc
push
and
adc
xor
aam
insb
cmpsl
sti
lret
insb
sbb
mov
fsubs
je
or
aam
push
sub
jae
jb
addr16
fildll
sub
dec
mov
push
lcall
mov
cmp
addr16
inc
sub
mov
sahf
mov
testb
mov
loope
push
stos
aam
inc
jecxz
lea
roll
scas
push
adc
xchg
aaa
mov
mov
and
and
iret
in
push
push
outsb
mov
jp
jo
in
xor
mov
ds
add
or
cwtl
xchg
repz
lods
xor
lds
popf
je
addr16
outsl
and
ds
into
addr16
sub
stos
xor
cmp
adc
pop
sbb
push
xor
mov
pusha
inc
lods
sub
adcb
mov
inc
lcall
xchg
fldcw
lret
push
fisttpll
xor
hlt
jne
sub
cmp
rcr
push
out
shl
cmpsb
imul
mov
pop
xor
adc
stos
mov
xchg
jle
xor
cld
in
add
and
sub
int3
fwait
xchg
clc
js
push
xor
jmp
lds
cs
add
mov
jecxz
insb
stos
mov
gs
cltd
inc
sbb
aad
imul
jnp
fwait
or
imul
mov
or
jne
ja
les
pop
insb
sbb
push
pop
aas
adc
cmp
dec
cmp
lods
enter
jp
sbb
and
lea
mov
sbb
push
xchg
and
jmp
mov
mov
inc
shll
sbb
inc
movsb
dec
dec
dec
add
int
cli
pop
cmp
xchg
and
adc
fsubl
dec
inc
hlt
sbb
jmp
mov
push
dec
sub
loopne
in
mov
xchg
lock
xor
mov
xor
ds
fisubl
je
mov
sti
pop
imul
and
scas
cmove
cmp
jge
adc
fiadds
sub
cmp
and
jbe
jmp
xor
dec
inc
adc
cmc
or
fs
sbb
hlt
push
sbb
cld
push
lcall
imul
out
fstpt
jmp
std
add
fists
das
jo
mov
lahf
push
outsl
xchg
cli
jnp
sub
insb
in
jecxz
add
sub
mov
xchg
xlat
mov
adc
and
pop
mov
sbb
mull
je
scas
adc
fsubl
ja
hlt
stos
test
lret
mov
pop
mov
xchg
mov
jge
andnps
jp
jecxz
test
push
mov
xlat
ffree
xlat
sub
in
cmc
scas
stos
aaa
inc
test
outsb
add
fmulp
xchg
cmc
jle
in
add
sbb
jmp
xlat
mov
xorl
negl
mov
pop
das
in
testl
and
cld
and
mov
in
cmp
and
dec
adc
jnp
fcoml
pop
out
pop
fiadds
mov
jmp
inc
cmp
scas
lret
dec
fcmovne
sbb
fucom
and
xor
mov
mov
enter
out
mov
dec
loopne
mov
mov
xor
dec
enter
insb
mov
cmp
and
lods
xchg
or
push
or
push
or
lahf
cmp
push
pusha
dec
mov
loope
xchg
sahf
fimuls
data16
pop
shlb
add
xchg
cltd
iret
jg
cmp
leave
and
lret
mov
inc
lods
cld
jecxz
cli
cmp
jmp
mov
shr
mov
shlb
jb
cmp
clc
lahf
dec
lret
imul
mov
mov
vcomisd
xchg
movsl
lcall
jmp
or
pop
pop
xor
mov
or
xlat
xor
test
mov
and
out
xorb
jnp
ret
mov
jno
xchg
testl
and
ret
jns
stos
mov
js
gs
jmp
mov
inc
hlt
fdivrl
push
jb
pop
xor
add
or
test
pop
mov
cmc
jecxz
test
sarb
repnz
mov
sahf
sbb
dec
movsb
sbb
adc
xor
adc
and
lret
push
sarl
mov
push
mov
mov
hlt
leave
sti
push
mov
js
pop
mov
icebp
sub
jg
jae
sarb
push
mov
sbbb
add
and
jo
push
les
fsub
lea
dec
stc
inc
sub
subb
clc
push
adc
mov
jo
enter
inc
jecxz
lcall
adc
rclb
inc
loopne
cwtl
add
push
test
je
shrb
bound
test
mov
jbe
jecxz
orb
das
xchg
jl
push
adc
mov
dec
mov
mov
mov
xchg
push
ret
adc
mov
pop
push
in
scas
insl
sbb
push
and
jecxz
cmpsl
fnstenv
jle
push
jnp
outsl
fiadds
jne
popa
mov
xor
pop
stc
pop
scas
enter
push
imull
jae
repz
ja
add
xchg
sub
xor
cli
test
jne
insl
cmp
add
dec
sbb
push
cmp
dec
out
dec
xor
push
sbb
test
mov
mov
or
push
lret
iret
mov
jae
mov
or
out
sub
ds
lods
pop
mov
push
xor
inc
lret
add
icebp
mov
mov
insl
mov
pop
popf
int3
mov
mov
cmp
dec
jo
xor
shr
cltd
push
cli
cmp
into
lret
inc
aas
cmc
or
fs
lret
jmp
jmp
fucomp
dec
pushf
pop
aam
mov
shrl
mov
sub
bsr
sub
cmp
rol
mov
ja
sbb
xchg
or
loop
fcompl
dec
jp
loopne
cmp
mov
das
fisttps
popa
iret
jae
mov
sub
fs
xor
ljmp
cmp
call
out
sbb
repz
adc
in
mov
ljmp
sub
out
in
sub
adcb
dec
jl
xor
lock
in
inc
sbb
mov
ja
hlt
xchg
pop
mov
sbb
cmp
push
aaa
inc
out
pushf
loopne
pop
mov
dec
clc
jne
ds
pop
add
fisttpll
rorb
inc
fldt
cmpps
push
das
ret
push
mov
xchg
repnz
inc
idivl
inc
pop
aad
cmp
xlat
pushf
loop
push
xchg
out
movsl
stc
repnz
sbb
lea
lock
nop
and
sbb
cmpsl
dec
mov
xor
jmp
sub
jl
mov
mov
push
mov
clc
sbb
mov
mov
sub
mov
sub
push
jl
cmp
mov
aaa
xchg
test
push
out
mov
and
add
push
dec
icebp
leave
in
push
inc
jae
sahf
mov
dec
sahf
inc
call
adc
icebp
mov
rcl
aad
jp
push
inc
lcall
loopne
inc
adc
rorb
push
xchg
pop
jp
js
aaa
push
jne
sbb
mov
xchg
aaa
cmp
sbb
fmuls
cmpl
sbb
jle
or
popf
and
mov
sbb
cli
inc
xlat
imul
add
adc
mov
ja
mov
dec
adc
in
pusha
repz
push
fs
xchg
lret
sahf
sub
or
xchg
int
xor
loop
out
cmova
push
clc
cmp
xor
fiadds
or
adc
mov
out
pop
test
cmc
jb
iret
jge
out
insb
in
int
lret
add
pushf
add
movsb
mov
fnclex
sti
insb
lods
push
aam
iret
loopne
jmp
jp
ds
and
fnstenv
xchg
xor
lods
arpl
icebp
arpl
ret
iret
movsl
xor
lock
ljmp
push
lods
sbb
mov
outsb
mov
xchg
pop
mov
lods
lcall
mov
in
or
sbb
movsl
mov
add
andb
cmp
mov
xor
mov
cmpsl
ja
mov
imul
jne
roll
and
sub
cmpsb
sub
xchg
insb
jecxz
sub
xorb
fldcw
xor
in
popl
cmp
inc
inc
adc
xor
nop
xchg
nop
jle
add
bound
movl
aam
aas
sbb
mov
clc
mov
mov
data16
leave
mov
push
add
cwtl
popf
or
cmp
or
sbb
rorl
add
and
fwait
stc
push
pop
xchg
test
ja
int
repz
je
aam
outsl
rcrb
stos
popa
cmpsb
xor
mov
fnstcw
mov
lock
jnp
or
push
test
dec
sbb
popa
negb
movsbl
adc
xchg
lock
dec
divl
mov
mov
dec
pop
aam
mov
pop
mov
mov
incl
xor
inc
and
test
push
fldenv
xchg
cmp
push
sbb
cmp
divb
orb
mov
push
jmp
and
push
jmp
xchg
je
jecxz
adc
scas
shlb
or
movb
mov
shlb
pop
shl
mov
outsl
xlat
ds
sub
inc
mov
xor
movsl
dec
xchg
insl
dec
lret
push
adc
out
mov
dec
lods
lea
lcall
fnstenv
mov
jp
adc
popf
cmpsb
jno
dec
xor
bound
loopne
dec
dec
add
popa
cwtl
fimuls
pop
mov
pop
sub
aad
ss
sti
jbe
imul
mov
sbb
push
pushf
xchg
lea
aaa
testl
outsb
fwait
ds
push
push
mov
sub
cli
mov
fnstsw
imul
mov
inc
cmp
loopne
and
icebp
xor
mov
fisttpl
lret
lahf
mov
lret
cmp
mov
lea
lods
mov
loope
dec
into
lods
pushf
jg
cmpb
or
cmc
cwtl
ljmp
fwait
jmp
dec
xor
stos
xchg
les
inc
fildl
dec
adc
add
jns
push
in
adc
adc
add
push
pop
aam
std
scas
test
or
out
adc
test
mov
in
enter
sbb
test
gs
push
pop
arpl
clc
or
ror
sbb
bnd
mov
aas
jns
push
mulb
mov
add
out
orb
cmpsl
sub
inc
lahf
aaa
mov
loop
daa
mov
pop
push
incb
sti
push
xor
pop
std
mov
arpl
jp
fwait
mov
add
sub
icebp
push
mov
mov
sub
pop
in
mov
out
push
jno
je
fisubrl
sbb
sub
sbb
jecxz
push
fcomi
inc
jns
mov
and
sub
fwait
cmp
cwtl
cmp
adc
sub
cmp
pop
insb
jae
mov
and
pop
inc
jge
fwait
sahf
inc
arpl
mov
lret
add
add
pop
popa
ljmp
jp
cmp
inc
push
cmpsb
jo
iret
xchg
push
hlt
mov
or
ss
push
sbb
ds
jp
rolb
inc
xchg
sbb
inc
gs
jle
mov
call
mov
movsb
dec
ret
sbb
sahf
sub
jb
rcr
in
pop
fisubrs
and
mov
push
rcll
test
ss
dec
adc
dec
in
xor
gs
mov
sbb
out
fs
adc
inc
aam
insl
inc
jnp
pop
stos
inc
leave
test
push
pop
daa
sarb
pop
std
pop
leave
insl
jo
sbb
mov
mov
jg
pop
inc
xchg
mov
mov
push
xchg
mov
sub
pop
push
shlb
mov
and
mov
leave
mov
sbb
ret
dec
mov
xor
ret
push
adc
add
mov
push
mov
mov
lret
jns
adc
mov
jno
fcomps
lods
mov
or
icebp
dec
mov
mov
fldenv
out
stc
mov
sub
sub
mov
pop
mov
mov
pop
or
test
pop
push
test
cmp
jnp
and
inc
mov
jae
cs
jo
sub
dec
mov
sbb
test
sahf
js
mov
or
or
dec
movsl
jecxz
shrl
adc
adc
int3
dec
in
test
les
pop
ja
push
ror
out
push
pusha
mov
fmuls
lret
jbe
stos
out
dec
loope
xchg
dec
adc
mov
enter
gs
pop
ret
mov
arpl
mov
mov
xchg
out
call
fmuls
adc
in
xchg
loop
jp
test
mov
mov
or
push
mov
lock
mov
cltd
sahf
mov
xchg
pop
repnz
and
adc
fldcw
pop
arpl
sbb
fcmovne
cmc
aad
fabs
pop
inc
xchg
adc
dec
push
cmpsl
inc
movl
ljmp
push
xchg
push
stc
iret
cmp
add
add
insb
int3
ss
xchg
fidivrl
mov
sar
pop
cmpl
pop
add
add
scas
scas
test
popf
push
les
subl
push
rorb
inc
mov
sbb
cld
inc
jl
adc
push
cltd
out
call
xchg
inc
lret
cmp
push
jbe
sub
jmp
mov
jb
push
push
xchg
insl
inc
lods
inc
lock
daa
pop
xor
sbbl
sbbb
sbb
mov
addr16
add
adcl
mov
mov
mov
in
outsb
or
aam
cmpl
in
aad
shll
jp
and
mov
test
rcr
xchg
cmp
and
js
mov
dec
sub
loopne
sbb
and
mov
lods
hlt
pop
pop
rorl
push
das
mov
shl
cli
mov
mov
in
and
sbb
ret
or
push
xchg
dec
push
jl
and
sub
loopw
call
mov
mov
jmp
loopne
mov
jnp
sbb
addr16
jmp
cmpsl
fists
push
aas
mov
sahf
hlt
jae
add
and
notl
xchg
jb
dec
insb
scas
inc
stc
and
movsl
mov
and
inc
add
inc
xchg
insb
jg
insl
push
jb
lcall
dec
imul
push
pop
xchg
test
lds
fiaddl
jg
data16
sub
es
mov
sbb
sub
mov
mov
shll
mov
in
pushf
dec
mov
divb
rclb
cmp
into
loope
xchg
xor
xchg
dec
mov
bound
lds
loope
pop
into
cmp
test
xchg
imul
push
lahf
faddl
test
mov
mov
push
shl
xchg
inc
adcb
mov
mov
mov
cs
mov
cs
imul
fsubrl
data16
dec
aad
loop
iret
pop
xchg
push
imul
add
dec
jo
inc
or
dec
push
test
int3
push
add
cli
sbb
in
pop
aas
add
and
push
fsubrs
popa
pusha
stos
in
in
data16
sbb
xchg
ja
clc
jns
rorl
jecxz
dec
mov
mov
ja
mov
mov
jns
mov
andb
mov
adc
repnz
fcmovbe
ret
or
and
aaa
test
push
cltd
push
fxam
std
rol
andb
test
pop
mov
rol
rcrl
and
loope
jne
xor
pop
mov
andl
stos
pop
cli
fists
not
sub
in
push
nop
jle
pop
cmp
out
bound
push
sub
jae
sbb
in
xchg
fwait
mov
dec
or
bound
mov
pop
cmc
jae
dec
ret
dec
ret
adc
loopne
jno
pop
stos
add
pop
lahf
push
xchg
cltd
clc
jp
jb
sahf
ljmp
rclb
cwtl
sbb
out
fsub
push
mov
mov
push
test
mov
push
mov
es
insl
xchg
and
jge
test
push
mov
push
mov
mov
dec
dec
das
xor
jmp
mov
fdivs
mov
faddl
out
inc
test
cli
sbb
pop
pop
fistpl
mov
jno
loopne
cmpsb
inc
inc
or
lret
jo
pop
cwtl
les
mov
jno
pop
in
popf
inc
push
or
fmuls
enter
push
mov
sbb
andl
loop
mov
sar
xchg
test
out
cwtl
push
add
sbb
add
arpl
into
push
sbb
insl
in
sub
rcrl
in
push
push
mov
sub
nop
das
mov
outsb
add
adc
das
call
in
mov
lret
cmp
push
add
daa
or
pusha
xor
jmp
inc
leave
ja
les
into
push
sahf
xchg
loopne
adc
outsb
test
xor
dec
sub
xchg
jle
out
cmp
fbstp
gs
mov
popf
jg
mov
jge
sub
pop
add
push
inc
mov
shlb
test
es
mov
mov
je
call
mov
add
cmp
cld
mov
add
std
pushfw
push
or
shr
xchg
outsl
negb
fmul
xchg
inc
mulb
add
arpl
call
mov
lea
cmc
add
dec
movsl
sub
mov
das
mov
pop
insl
or
sbb
stc
hlt
int
lret
repz
mov
and
out
loopne
or
push
sbb
sub
sub
mov
aas
mov
test
imul
xchg
fwait
mov
sub
ja
fisttps
and
jne
push
faddl
mov
vmxoff
push
outsl
pop
into
sbb
in
push
or
pop
pop
xchg
scas
adc
insb
jns
mov
je
lods
mov
add
inc
mov
sbb
mov
aas
std
sub
mov
or
lods
js
cmp
in
mov
sub
mov
movsl
mov
pop
xchg
movb
jno
mov
pop
faddl
jo
sub
push
fsts
popa
mov
or
enter
aam
addr16
notl
int
pop
xchg
push
fwait
out
inc
call
jae
xchg
pop
and
xor
out
enter
pop
and
push
stos
int
pop
adc
mov
push
dec
movb
mov
push
dec
rclb
xor
cld
fisttps
outsb
rorl
jmp
xor
leave
dec
or
adc
mov
cmp
sub
dec
xlat
fnstcw
jg
daa
dec
push
enter
xchg
shlb
jg
nop
mov
add
ficomps
xchg
mov
jne
aaa
add
push
loop
popf
mov
xorl
mov
mov
jmp
xchg
clc
in
adc
pop
adc
testb
and
add
bound
and
ret
das
pop
repnz
mov
add
or
loope
xchg
out
ror
test
adc
mul
movsl
add
mov
xchg
mov
pusha
add
fnstsw
testl
popf
int
sbb
loop
js
daa
in
sbb
pop
mov
xor
pop
mov
js
lcall
pop
out
sbb
jmp
subb
pop
add
pop
pop
test
aad
insl
add
mov
in
jmp
mov
stos
fimull
icebp
push
clc
rorb
and
outsb
nop
mov
fs
insb
push
out
mov
cs
fldenv
mov
adc
dec
push
andl
push
dec
sbb
xor
cli
jae
or
xor
adc
jg
addr16
jmp
rcr
push
icebp
mov
icebp
cmp
sti
nop
push
lds
xor
and
mov
add
sbb
gs
vmaxpd
lcall
psllq
roll
aad
in
gs
mov
in
adc
insb
fidivl
adc
pushf
test
les
pop
sub
std
in
xchg
and
inc
cmpb
jg
inc
imul
shrl
out
inc
icebp
int
cmpsl
rorb
and
ficoms
or
sti
or
arpl
loopne
pusha
push
cmpsb
cmpb
xchg
int
into
sub
push
cli
adc
mov
cltd
cmp
jo
sarb
imul
xchg
pop
imul
out
xchg
dec
mov
popa
subl
scas
mov
jp
xor
xor
xchg
jle
add
sbb
or
repz
mov
xchg
stos
mov
lcall
and
add
lods
pop
aad
inc
pop
daa
sub
xchg
add
xchg
out
xchg
sub
mov
or
add
subl
call
jo
std
xor
and
mov
das
fwait
leave
imul
push
xchg
movsb
adc
icebp
cmp
ljmp
mov
xor
push
adc
jl
addr16
in
push
outsl
xchg
scas
pushf
call
sub
scas
mov
fidivl
and
pop
les
in
fisttps
repz
ljmp
or
push
out
adc
dec
push
push
bound
rorb
and
in
cwtl
and
xor
subb
aaa
adc
fwait
xor
cld
cmp
or
push
fwait
leave
addr16
mov
push
stos
sub
scas
nop
loop
or
xchg
inc
mov
mov
stos
aad
fnstenv
es
push
push
xor
idiv
sbb
and
lds
pop
or
mov
jno
and
or
sbb
pop
dec
in
mov
dec
imul
iret
repz
jge
and
push
xchg
dec
push
ret
pop
mov
pop
ss
push
sbb
push
repz
out
icebp
jle
or
movsl
push
shll
mulb
test
xlat
adc
nopl
cmp
icebp
xchg
fistpl
sahf
movsb
pop
mov
call
xor
arpl
pop
add
or
push
das
xchg
or
mov
es
sub
pop
inc
jo
and
frstor
xchg
sub
sbb
nop
fimull
jb
push
jmp
and
mov
pop
jmp
mov
jge
fwait
scas
pop
test
xor
adc
mov
popa
sub
fadd
out
push
mov
lods
inc
imul
fstp
and
xchg
or
sbb
insb
jne
cmp
push
pusha
add
daa
jno
mov
repnz
leave
lret
xchg
add
fdivrp
movsb
popa
pop
fcmovb
mov
gs
sub
mov
mov
push
out
stos
scas
test
jns
daa
mov
inc
jg
xor
imul
loopne
add
gs
outsb
jnp
add
sbb
cmp
push
xchg
add
mov
lret
lds
lcall
cmp
cltd
mov
lock
inc
pop
mov
jecxz
sbbl
loop
pop
int3
adc
cmp
or
pushf
stos
jp
jmp
in
mov
or
sahf
and
call
sbb
and
pusha
andl
sahf
test
imul
iret
dec
push
imul
outsl
mov
jge
cs
js
pop
dec
xor
movsb
dec
sub
xchg
cmp
outsb
outsb
aaa
insl
fildl
mov
cmc
pop
es
int3
cld
mov
inc
add
jo
stos
call
mov
push
icebp
cwtl
insb
cld
lds
aam
outsl
mov
stc
fdivl
lods
insb
js
and
pop
and
dec
pop
loop
into
mov
shrb
les
xchg
inc
sbb
xor
xchg
cmp
cmp
jmp
jo
mov
or
nop
rclb
clc
ljmp
xchg
xchg
emms
insl
movsb
cmpxchg
inc
inc
sub
aas
pop
pop
cmp
push
fwait
or
push
icebp
push
stos
int
sbb
push
sahf
lds
or
sub
movsl
xor
stc
fldenv
aad
jne
mov
cmp
cwtl
jecxz
cmp
lret
bound
mov
pushf
inc
inc
push
pop
jmp
fdivrs
mov
push
dec
add
xor
inc
leave
aad
mov
or
andb
inc
push
add
aad
xor
loop
int3
mov
xchg
xor
lcall
into
xchg
sbbl
and
mov
imul
mov
in
in
add
push
movsb
ffree
loopne
int
and
mov
sub
push
add
mov
sahf
or
popf
xor
push
aam
ja
cli
insb
jp
notl
inc
jg
adc
arpl
dec
adc
sar
jo
or
addl
mov
xor
popf
dec
adc
xor
lea
mov
or
into
cmp
push
and
dec
jb
ja
aaa
pop
fs
cmc
xchg
pushf
das
dec
jp
or
int3
imul
mov
mov
pop
xlat
movsb
in
inc
sar
or
jns
cmc
dec
and
and
mov
lods
mov
xor
pop
cld
ds
loope
sbb
clc
lock
inc
cmp
inc
aaa
insb
inc
pop
mov
dec
push
lahf
stos
adc
insl
shr
push
les
sub
in
dec
xchg
inc
cld
adcb
dec
clc
sub
out
push
pop
mov
pushf
add
bndstx
jo
cld
sbb
fisubs
shl
adc
push
lds
repnz
or
jg
add
push
push
bound
add
xchg
ret
nopl
push
out
and
pop
mov
pop
out
hlt
jo
jge
out
pop
pop
sbb
lds
or
push
xchg
cmp
pop
stc
sbb
push
mov
loope
adc
jl
decb
push
in
call
lcall
daa
adc
icebp
or
sahf
mov
adc
icebp
xchg
mov
je
inc
cld
push
and
jnp
sub
xlat
out
popa
pop
ficoml
imul
call
adc
lods
push
sbb
and
mov
jp
inc
jecxz
repnz
call
or
stos
sbb
je
pop
jg
pmaxsw
or
test
lcall
test
loope
xchg
pop
adcb
cmc
dec
adc
test
addb
xchg
jp
inc
adc
and
imul
add
mov
xor
jnp
cld
lock
out
int3
mov
pop
sbb
lods
mov
out
mov
jbe
mov
cmp
aas
fs
jp
xor
xor
out
into
mov
dec
lds
pop
imul
xchg
add
xorl
push
mov
scas
and
xchg
dec
in
rol
add
aam
xchg
pusha
jae
jb
xor
jo
sub
rcrl
xchg
cmp
add
dec
or
in
or
add
cltd
or
test
int
xorb
ret
jmp
cltd
cmc
cmp
nop
test
cli
inc
out
xchg
out
jo
pop
lea
jbe
mov
mov
and
movsl
mov
xchg
stc
xchg
push
push
push
stos
and
loop
mov
clc
sub
mov
sbb
js
push
adc
mov
rclb
push
add
or
sub
subl
push
call
loop
jle
out
sbb
dec
lret
sub
sbb
sub
xlat
pop
and
std
ss
xor
mov
std
pop
push
scas
jle
add
leave
add
push
mov
inc
push
int
sub
xchg
push
mull
outsl
pop
pop
addr16
repnz
push
pop
std
cmpsl
push
mov
icebp
mov
addr16
adc
inc
outsl
dec
and
xchg
mov
cmp
push
xchg
adc
out
inc
xchg
cmp
adc
pop
jl
sub
and
dec
push
or
ja
sub
das
int3
adc
sbbl
out
cmp
or
into
hlt
xor
cmpsb
mov
add
mov
adc
pop
sti
cmp
cmp
mov
jl
push
mov
dec
cwtl
dec
sub
xchg
sbb
cmpsb
jne
jbe
push
push
jmp
sarl
addr16
jne
or
add
push
or
decb
mov
popa
cmpsl
push
test
rclb
adc
sbb
cmp
iret
cwtl
or
or
lods
call
aas
icebp
aas
test
add
imul
aad
add
ljmp
dec
jmp
pop
push
jbe
leave
leave
xor
cltd
aam
push
dec
mov
mov
sub
mov
pop
fisubl
inc
es
arpl
loopne
xchg
mov
sub
cmp
mov
dec
clc
data16
cmp
jmp
mov
daa
inc
add
pushw
push
pop
test
out
add
aad
xor
mov
add
adc
cmp
xor
sbb
mov
outsl
sub
stc
std
testl
hlt
push
sahf
or
outsl
xchg
inc
clc
lea
imul
lret
js
cmpsl
pop
sbb
dec
cmp
jecxz
push
mov
mov
xchg
sub
stos
int
mov
les
es
fwait
test
fstpt
dec
cmp
and
ret
ror
iret
int3
jg
bound
and
sub
xchg
fldcw
aas
out
das
ret
data16
cmp
cltd
push
add
repnz
xchg
in
jmp
repz
mov
test
sbb
and
add
mov
subl
pop
jns
stos
jmp
addl
push
cmp
mov
xchg
in
inc
loop
sbb
inc
jns
mov
cs
inc
jecxz
sbb
out
ret
push
xchg
cli
pop
mov
pop
out
dec
aam
inc
gs
sub
xchg
or
mov
lcall
xchg
pop
mov
mov
mov
sarl
ror
ret
ficoml
or
imul
inc
mov
jl
pop
jp
in
int
ljmp
int
add
jl
push
sbb
daa
js
or
add
movhps
fidivl
stos
cmpsl
test
dec
push
xchg
call
shrb
or
repz
fcmovne
jmp
push
stos
scas
mov
jmp
push
les
sbb
xor
gs
fld
into
icebp
pop
js
mov
pop
stc
imulb
subb
mov
into
mov
jnp
leave
push
xlat
call
sub
lods
popa
jmp
fwait
adc
leave
pop
rorb
push
int
andb
jbe
mov
out
jae
jmp
sub
pop
pop
and
add
mov
mov
test
cmp
cmpsl
loope
icebp
loopne
out
mov
inc
adc
js
subb
nop
int3
cltd
mov
pop
cwtl
bound
shll
inc
subb
cmc
fbstp
fidivrl
and
pop
sub
sbb
movsl
adcl
mov
xor
rolb
dec
rcrb
cmp
mov
mov
xchg
out
out
push
mov
mov
jp
push
mov
push
repz
shll
xchg
scas
push
hlt
stos
adc
mull
adc
jbe
pop
mov
and
mov
lret
xor
xchg
mov
xchg
xlat
jbe
mov
or
lods
adc
xor
mov
inc
xchg
and
or
xchg
data16
insl
dec
data16
sub
or
jg
lret
sbbl
cmpsl
add
jns
cmp
mov
and
pop
jb
out
mov
fistpl
outsl
add
lods
test
dec
and
xor
hlt
lcall
push
or
mov
xor
and
rcll
sarl
fwait
sbb
push
xchg
push
push
fwait
movsl
int3
outsb
jg
aad
pop
mov
shlb
inc
scas
adc
and
js
mov
mov
adc
or
je
mov
xchg
loopne
out
aaa
fnstsw
mov
rep
popa
stc
xlat
jl
and
call
ret
fnsave
movsl
jecxz
mov
jns
mov
push
jo
push
clc
add
push
mov
mov
sbb
loop
mov
xchg
leave
shll
cmpsl
aas
test
outsl
test
imulb
repnz
lea
xor
fdivrs
mov
inc
mov
loop
lcall
pop
hlt
addr16
push
fnstenv
push
rcll
adc
inc
pop
mov
mov
cmp
sub
insb
flds
cwtl
jg
mov
cld
repz
jnp
scas
daa
lret
pop
sub
mov
out
pop
push
call
mov
jecxz
fidivs
push
fldt
jae
fdivl
jle
mov
add
test
fcoms
je
sti
pusha
mov
adc
lret
sub
inc
xchg
aam
adc
add
lds
jecxz
imul
mov
leave
and
cli
mov
xor
in
adc
push
std
mov
lea
popl
add
lret
push
loope
xlat
fisubrs
into
sbb
sub
data16
call
in
movb
mov
dec
fiaddl
scas
cmpsb
in
inc
xchg
cld
mov
out
push
in
or
movb
sahf
mov
mov
adc
adc
sahf
mov
shl
mov
cmp
fmul
mov
imul
das
paddusb
scas
imul
test
jae
fdivrl
mov
pop
stc
fisttps
pop
pop
movsl
fcmovb
cmp
sbb
daa
adc
mov
stc
xor
cmp
popf
stc
jno
jmp
push
scas
xor
inc
xor
add
ljmp
sub
mov
push
sub
ds
lds
mov
cmpsb
loopne
sub
sbb
subb
pop
and
dec
sbb
insl
jb
dec
push
popa
popf
idivl
pusha
inc
inc
insb
or
sub
sbb
mov
lds
xor
lds
pop
mov
jl
stos
clc
lock
ud2
jae
mov
xchg
scas
mov
fs
out
call
sbb
add
cmp
dec
sub
dec
fisttpll
ret
testl
loope
pop
cmc
and
iret
jno
out
or
adcl
fidivs
ds
add
icebp
in
pop
or
xor
cmc
pop
cmp
pop
mov
mov
jmp
mov
mov
lahf
insl
dec
xchg
add
int
push
cwtl
call
or
loop
mov
adc
cmpl
pop
clc
cmp
addr16
fildl
ret
and
fwait
adc
fcoml
mov
push
aam
mov
fxch
pop
mov
mov
push
mov
dec
gs
mov
xchg
sub
push
jle
sub
dec
or
mov
mov
dec
push
ljmp
popf
loopne
imul
testl
sub
xchg
ret
or
fucompp
ljmp
jae
mov
and
mov
enter
mov
rorl
pop
dec
mov
lods
ficoml
loop
pushf
xchg
adc
aas
jne
xor
insb
bound
pop
push
pop
xchg
aam
leave
fcoms
fidivl
or
or
sbb
sub
mov
das
inc
stos
negb
dec
hlt
lods
xchg
je
in
imul
pop
repz
adcb
inc
insl
ds
mov
mov
call
insl
outsb
int3
dec
inc
cmc
pop
mov
testb
sarl
mov
mov
jle
shll
cld
cli
int3
loope
hlt
jp
stos
adcb
and
icebp
dec
aad
int
xchg
out
jnp
wrmsr
push
inc
xor
jle
stos
pop
icebp
xchg
sub
stc
sub
aam
mov
je
test
jg
push
in
adc
push
and
scas
cmp
arpl
mov
inc
jmp
pop
pop
mov
das
jno
cld
sub
lea
cmp
imul
push
mov
or
sub
xchg
mov
ja
popa
out
jmp
and
insl
xor
shl
sbb
into
roll
es
in
dec
inc
outsl
bound
out
jl
mov
movsb
lcall
addr16
mov
mov
cwtl
mov
out
loopne
mov
scas
or
gs
lret
push
in
mov
sub
xchg
inc
and
add
jb
xor
cld
inc
movsb
das
sbb
jae
nop
or
push
sbb
jne
cmc
orb
mov
imul
stos
mov
icebp
lcall
filds
int3
rcrb
jmp
in
fdivrs
pop
ljmp
repz
idivb
lcall
out
cmp
xor
dec
xchg
push
mov
jno
fcmovnu
mov
mov
les
sub
or
negl
cli
xor
cli
movsb
or
lods
xor
fwait
pop
test
mov
mov
xchg
xchg
cmp
add
cmp
orb
xchg
jg
cltd
out
aad
das
adc
inc
fucom
popa
lds
mov
mov
adc
add
imul
dec
dec
cld
out
and
jecxz
movsl
and
test
subb
or
outsb
mov
push
lods
lret
imul
or
loop
aas
inc
std
bound
xlat
inc
in
xchg
nop
es
push
mov
adc
mov
inc
mov
sub
cmc
mov
or
push
rolb
rcrb
std
loopne
adc
jne
adc
aam
rclb
das
push
or
xor
push
fistps
frstor
xor
sub
inc
sub
out
xchg
cmc
jbe
jo
les
fimull
push
mov
out
aas
cmp
xchg
cli
sub
fdivrs
or
sub
mov
gs
dec
repz
bound
inc
jmp
sbb
dec
push
sbb
xlat
lock
and
jae
daa
adc
movsb
cmp
jmp
cld
in
inc
jns
dec
jp
mulb
jp
stc
es
inc
ds
jle
mov
daa
mov
bsr
data16
sbb
das
and
push
in
add
test
icebp
jmp
jno
jne
xchg
bound
sahf
loop
jle
cmp
add
mov
inc
imul
inc
cmp
sbb
cmp
mov
inc
mov
outsl
mov
lret
loope
pop
sub
jmp
sti
mov
fmull
xor
leave
adc
dec
or
fucom
repnz
packuswb
ds
xchg
imul
mov
adc
cmpsb
pop
cli
jb
pop
cmp
xor
gs
sub
jl
repz
mov
mov
mov
ja
and
lods
shll
sbb
or
dec
lcall
adc
mov
out
cmp
add
movsl
loopne
mov
sbb
dec
imul
int
adc
jns
movsl
xor
imul
into
cmc
mov
dec
add
mov
dec
cli
mov
imul
sub
mov
into
jb
js
mov
jecxz
lds
icebp
orb
aad
int
lcall
pop
cltd
pop
mov
add
jae
lods
aas
test
into
push
inc
test
in
cmc
loop
mov
ret
out
dec
inc
mov
in
sub
out
iret
inc
mov
mov
addl
lea
inc
jbe
das
pop
mov
nop
mov
into
rorb
push
xchg
das
inc
and
dec
lret
arpl
test
cs
mov
lods
cmpsl
or
in
nop
shlb
lods
fisubrs
aam
add
lds
out
mov
sbb
jmp
out
jle
pop
xchg
xor
in
sti
stos
shr
aad
sbb
inc
jnp
mov
test
fisubl
addr16
out
add
sbb
push
rolb
and
mov
popf
push
popf
out
fcoml
inc
out
lods
dec
mov
xchg
stos
outsb
sbb
adc
push
shlb
ds
pushl
xchg
decb
cld
or
mov
or
push
mov
xchg
jge
andb
pusha
jmp
sub
ret
arpl
mov
mov
and
mov
sahf
in
daa
xchg
fmull
jle
sub
mov
mov
pusha
mov
bswap
push
int3
test
xor
js
ret
fwait
outsl
push
data16
inc
xor
adc
subl
outsl
xor
add
andl
dec
pop
cmp
mov
out
fs
sbb
lcall
subb
icebp
sub
pop
cwtl
adc
in
repnz
or
imul
leave
inc
loope
push
pop
das
cmp
push
gs
adc
pop
cli
mov
shlb
out
add
mov
andl
std
cltd
cmp
addb
or
inc
inc
arpl
incb
aam
or
pop
sbb
mov
pop
jmp
and
jle
inc
fisubrs
xor
jmp
push
aas
enter
in
std
add
mov
fmulp
fidivrl
mov
xor
movsl
lods
in
jle
mov
addr16
paddd
sub
imul
dec
adc
mov
rcrb
fsubl
rcrb
inc
cmc
cltd
xor
ret
pop
sub
and
xchg
sti
sbb
pop
mov
ljmp
aaa
dec
sub
cwtl
push
pop
sub
sbb
xchg
push
xor
push
jns,pt
iret
imull
adc
push
das
lea
jp
mov
sahf
sub
lcall
in
pushf
loop
loopne
inc
sahf
adc
iret
stos
mov
nop
ds
hlt
push
outsl
in
add
cli
push
lods
pop
popf
pop
sub
out
adc
pop
out
out
pmaxub
in
and
jle
cmc
push
xchg
das
cld
in
jg
push
mov
dec
fwait
enter
push
xchg
inc
pop
jno
aad
fisttpll
mov
mov
push
lock
clc
mov
xor
test
cmpsb
push
addr16
ds
rcrl
rol
scas
in
fs
ljmp
push
push
in
xchg
mov
scas
jnp
xor
ret
mov
pop
push
enter
push
daa
cmpsb
cmpsb
orb
and
sub
cmp
add
mov
pushf
jae
or
sahf
push
negl
jnp
adc
sbb
hlt
aaa
bound
fwait
cmp
inc
imul
les
out
cmp
cmpsl
push
decl
pop
repz
jl
xchg
bound
or
repz
loopne
popa
pusha
popf
pop
xchg
andl
int
push
xchg
lcall
sub
and
imul
mov
or
inc
jnp
out
sub
jbe
cmpsb
aaa
jp
movsl
nop
lcall
push
les
xchg
add
data16
jmp
lahf
in
loopne
jmp
push
or
mov
pop
lods
pushl
imul
cmp
jno
xor
push
mov
fildl
enter
jecxz
nop
push
adc
std
xchg
push
push
jg
xchg
adc
mov
adc
dec
in
xchg
add
sub
mov
push
pop
pop
add
test
ljmp
or
push
ror
mov
fcmove
fsubrl
sahf
icebp
hlt
cltd
repz
cmp
out
sub
mov
arpl
mov
and
test
jbe
fcmovu
aam
or
call
mov
inc
in
stos
mov
or
ss
arpl
insb
in
adc
mov
lahf
mov
add
adc
adc
pusha
insl
xor
sti
adc
sarb
out
lcall
scas
sbb
ss
mov
cmpsb
xchg
cli
and
out
sub
js
push
fnstenv
sahf
loopne
imul
jmp
cld
push
sbb
cmp
sub
jle
cmp
out
add
mov
adc
push
test
or
or
in
int
aad
sub
scas
test
in
xchg
test
xchg
lcall
fnstcw
xor
xchg
loopne
mov
mov
mov
mov
shrl
or
repz
data16
out
int
les
ljmp
out
pop
std
jecxz
push
dec
popf
push
inc
sbb
cmp
or
les
mov
bound
cli
lahf
mov
pop
leave
mov
arpl
mov
or
mov
sti
inc
in
add
mull
push
movsb
fnstsw
push
dec
call
jne
loopne
dec
iret
setnp
inc
jnp
mov
or
jno
je
stos
out
imul
cmpsb
adc
lods
test
sbb
add
icebp
inc
iret
add
inc
mov
fnstcw
cmp
jle
jnp
orb
xor
stos
xlat
scas
jne
adc
jmp
pop
add
lea
addb
loope
add
mov
push
sub
ljmp
cld
in
cmp
daa
xchg
out
mov
int3
movsl
xchg
adc
adc
mov
and
outsl
pop
push
jo
jo
dec
inc
jl
dec
pop
dec
fnstenv
orl
mov
cmp
cltd
out
aaa
add
lods
ss
inc
xlat
sub
aad
icebp
aam
jl
faddp
test
aad
jo
fldz
jge
lret
add
pop
inc
in
cmp
out
jmp
push
insb
test
sbb
bound
add
in
roll
adc
adc
and
add
jbe
or
loope
inc
mov
and
mov
xor
pop
incl
xchg
sub
orl
mov
push
push
or
popf
fsubl
xchg
sub
outsl
fcoml
stc
out
es
insl
push
loop
ss
add
adc
fnstcw
cmp
aad
mov
pop
mov
gs
rcl
xor
push
or
in
shll
pop
xchg
push
outsl
ja
add
ds
loop
jnp
adc
scas
int
mulb
xor
loopne
cmp
xor
lea
mull
test
mov
lods
rcrl
or
fstps
cmpsl
enter
sub
xorl
not
or
pop
add
mov
mov
aaa
aaa
lahf
dec
cltd
or
fsubl
repz
into
sahf
lock
mov
stos
rol
pop
rcrb
sbb
mov
pop
xor
mov
xlat
jne
push
mov
mov
and
cmp
fwait
imul
mov
mov
andl
movsl
add
loop
pop
imul
xlat
pop
mov
pop
xorb
sub
je
lea
or
js
xchg
mov
popl
rclb
adc
or
mov
mov
mov
xchg
xchg
scas
stos
or
sti
and
lret
int3
orb
fistl
out
int
pop
int
es
dec
sbb
adc
jae
aad
xor
push
ss
jmp
xchg
jbe
mov
cmp
mov
test
sub
lea
xor
push
popf
icebp
arpl
inc
pushf
dec
or
cltd
std
outsl
and
arpl
sub
and
sub
inc
int3
sub
add
push
stos
leave
mov
insl
pop
mov
rorb
bound
imul
pop
ljmp
or
jge
test
mov
into
gs
xor
fstpt
popa
into
mov
push
xorl
cmp
fmulp
or
adc
jb
gs
scas
gs
out
mov
mov
and
pop
inc
mov
mov
add
fmuls
out
outsb
mov
xor
sbb
mov
sub
xchg
xchg
ljmp
adc
push
fcmovnu
gs
out
pop
sub
add
adc
mov
xor
popf
cmp
lods
xlat
xchg
push
leave
or
jns
loop
sub
int
jecxz
xchg
mov
jne
loope
mov
xchg
aas
insb
enter
loopne
or
inc
sti
scas
or
cmpb
inc
adcl
ss
icebp
cmp
jbe
and
xor
inc
repz
nop
sbb
fistl
fnstsw
push
jecxz
add
mov
mov
adc
pop
dec
popf
imul
mov
lret
mov
sub
iret
lods
jns
shll
jne
xchg
stos
test
push
and
jns
sahf
shl
ds
mov
mov
and
ficompl
add
push
inc
insl
cmpsl
mov
into
push
out
std
or
outsb
and
in
inc
xchg
mov
sub
mov
sti
sbb
lahf
xorl
push
xor
lahf
inc
popa
jno
fsubrl
cli
sub
scas
add
dec
adc
cmp
int3
xchg
aas
call
imul
out
shrl
cmp
idivl
jb
or
mov
std
icebp
lock
jbe
sbb
fdivl
out
call
xor
rcll
xchg
sub
fcoml
popa
jmp
cmp
iret
cld
cld
ds
mov
cmpsl
jg
mov
testb
in
stc
std
push
jp
sub
sbb
mov
outsb
sub
adc
adc
bound
xchg
popa
xchg
adc
iret
adc
pop
xchg
test
push
enter
xor
aas
pusha
fadds
sbb
test
iret
xchg
push
or
cmp
xor
and
hlt
or
mov
cmc
idivb
sub
repz
add
mov
lods
xchg
loope
cli
ljmp
rcr
fwait
mov
push
fsts
lahf
ljmp
mov
js
arpl
sub
clc
not
add
nop
push
cltd
and
adc
cld
mov
in
lcall
push
hlt
sub
push
mov
testl
in
andl
insb
mov
jecxz
int3
inc
iret
scas
mov
outsb
rcl
mov
pop
pop
and
pop
and
jge
vshufpd
mov
and
jecxz
push
mov
xchg
xor
imul
insb
jns
in
pop
testb
mov
pop
aam
sbb
rcrb
sarl
pop
push
daa
test
sahf
clc
or
pop
sub
jno
scas
add
mov
js
jnp
xor
xchg
sub
sub
sub
mov
stc
clc
scas
pop
mov
aam
inc
out
cwtl
push
mov
mov
or
cmp
xor
inc
pop
lock
shlb
mov
sbb
jae
ret
dec
cmp
arpl
pusha
pop
adc
cmp
loope
insb
aaa
dec
imul
fdivr
jg
push
fstpl
jns
jmp
jp
and
jge
ljmp
mov
jle
les
cmp
sbb
xchg
nop
stos
xor
ljmp
xor
je
ret
popa
jo
pusha
mov
and
sub
mov
xor
and
mov
add
scas
mov
es
dec
pop
bound
sbb
and
jge
insl
clc
cmpsb
dec
daa
es
lods
imul
mov
inc
adc
add
in
sub
aaa
mov
fnstenv
movsl
sub
lods
mov
mov
pop
sub
jecxz
mov
insb
cwtl
or
clc
data16
sbb
flds
push
inc
test
and
fcmovb
popa
mov
push
cmp
repz
subb
sub
add
scas
cmp
pop
sahf
add
ds
fs
inc
mov
call
pop
push
ret
pop
xchg
ficomps
cmp
sub
outsl
jbe
push
pop
test
cltd
cmp
push
sub
adc
jb
inc
inc
lods
xor
mov
push
cld
repz
std
popf
pop
test
sbb
xchg
adc
mov
mov
jns
js
dec
shrl
into
lds
test
adc
mov
out
incb
sbb
les
mov
xchg
pop
fisubrl
jo
or
jne
mov
xchg
lret
test
push
movsl
jno
pop
fs
inc
out
adc
dec
sbb
mov
cmp
jg
adc
jge
and
xchg
jle
cmpsl
data16
loopne
or
lahf
and
lods
in
pop
push
cmp
insl
jl
add
sbb
pop
leave
subb
and
in
jno
imul
jg
in
pushf
dec
in
adc
out
and
xchg
sub
bnd
shrl
xchg
testl
rcrl
test
sub
sbb
push
mov
pop
pop
out
jmp
xchg
iret
insb
sar
pop
flds
cli
mov
lret
sub
addr16
dec
pop
jae
in
xchg
scas
and
mov
mov
pop
jo
gs
jnp
fwait
into
movsb
sub
gs
jecxz
jo
fcomps
fistpll
cli
fwait
and
dec
lret
sub
sbb
inc
dec
push
push
sbb
dec
jb
shll
out
movsl
jge
push
in
lahf
pop
mov
push
fwait
push
xchg
outsb
or
cmc
loop
and
cmp
push
aam
add
leave
enter
aaa
adc
ds
sbb
dec
pop
cltd
scas
pop
negb
sub
mov
or
nop
mov
fistl
daa
pop
or
sarb
shlb
inc
es
pushf
fdivl
scas
mov
sub
scas
cmc
push
jecxz
or
jo
aas
inc
in
mov
jmp
or
std
and
outsb
push
jne
in
les
notb
notb
mov
test
dec
es
out
add
xchg
dec
or
adc
and
and
out
xchg
inc
aam
lret
sub
mov
xor
inc
cld
rcll
jbe
out
and
ljmp
and
mov
xchg
arpl
iret
stos
jnp
sbb
dec
mov
sbb
test
jb
inc
xchg
adc
icebp
out
decl
xchg
or
insb
adcl
mov
ret
sbb
dec
inc
std
adc
xchg
mov
jo
dec
js
int3
decl
icebp
repnz
push
jl
gs
sbb
or
mov
mov
sbb
jle
cmp
xchg
fstpt
jmp
imul
mov
cmp
cmc
rcll
mov
gs
repz
jno
test
mov
mov
outsb
mov
jg
stos
sub
ds
icebp
jbe
push
leave
int3
cmp
mov
test
je
inc
or
lret
jmp
movq
clc
mov
jbe
lahf
xorl
sbb
push
fs
pop
lret
cld
stc
mov
jmp
in
std
sbb
lcall
das
jo
sbb
cltd
je
add
int
stos
mov
movsl
popf
inc
loope
cmc
mov
jg,pt
xchg
ds
psllq
and
insl
fdivp
xchg
add
inc
pop
pop
add
push
fwait
inc
pop
mov
inc
push
cmp
loope
pop
pop
or
sbb
test
lds
hlt
int3
bound
jle
mov
adcb
cli
add
xor
addb
pop
and
jge
mov
and
je
sbb
xor
xchg
mov
data16
lds
xchg
or
ss
iret
cli
out
adc
adc
ss
mov
sub
in
clc
cltd
inc
lock
sub
cmp
sahf
sub
test
inc
add
mov
pop
and
push
sbbl
xor
les
mov
mov
adc
dec
jl
shll
repz
std
dec
cmovle
pop
add
inc
adc
enter
pop
mov
out
push
push
stos
popf
inc
or
sbb
push
mov
mov
addr16
mov
add
mov
or
je
mov
pushf
push
cmc
out
pop
addr16
jae
fidivrs
fimull
shll
iret
jge
xor
push
rcrl
sti
sub
xchg
adc
mov
cwtl
nop
sub
xchg
cli
fisubs
or
stc
pop
mov
data16
xlat
es
je
rolb
jge
sbb
gs
jmp
shrb
pop
aaa
hlt
mov
and
ret
pop
lret
cmp
mov
sub
cs
and
jo
stc
bound
ja
fists
jbe
repnz
arpl
aaa
insl
test
notl
in
andl
xchg
xchg
movsl
out
aam
pop
push
push
mov
popa
imul
jno
cmp
xchg
in
sub
jp
push
imul
into
scas
scas
adc
shlb
or
fmul
lods
xchg
jp
mov
push
mov
test
add
cld
mov
cmp
jne
mov
xchg
lret
sar
xor
les
add
lret
and
inc
in
add
insl
mov
mov
movb
loope
jmp
daa
shrb
mov
test
int3
ljmp
mov
pushf
mov
ret
sub
aaa
mov
or
clc
jns
sarb
lods
insb
xorb
pushf
roll
push
xchg
pop
subb
add
stc
xor
aam
repnz
fmull
jmp
insb
arpl
mov
mov
xlat
jns
iret
push
push
jmp
pop
sub
push
mov
das
int3
sbb
pop
lret
iret
out
pop
je
sub
sub
inc
xor
xchg
cmp
push
cli
stos
mov
xchg
stos
mov
or
loope
jp
pop
pusha
mov
jecxz
and
mov
dec
sbbl
in
in
and
out
stos
mov
adc
test
test
mov
or
ss
sub
dec
sbb
or
insl
lods
jmp
pop
sub
leave
and
faddl
add
lea
xchg
cmp
ljmp
lods
mov
movsb
jl
mov
mov
cmpsb
and
and
dec
cmpsl
ret
dec
lods
push
loopne
lods
arpl
mov
icebp
sub
mov
sbb
leave
cwtl
test
bound
in
je
add
pop
add
and
out
clc
push
mov
rorb
mov
xchg
gs
popf
jl
cmpsl
shlb
xchg
dec
out
out
ret
aaa
push
or
sub
and
mov
inc
shll
xor
test
add
sbb
mov
sbb
or
xchg
pop
jb
add
adc
inc
sub
rcrl
and
inc
sbb
aas
fucom
jge
dec
and
mov
sub
pmullw
iret
mov
lods
lods
mov
adc
dec
mov
inc
sub
jae
popa
mov
and
aaa
push
xor
lock
xchg
add
scas
xchg
shrb
fbld
lret
repz
outsl
sbb
cmp
xchg
add
inc
loopne
push
pushw
mov
aad
add
inc
jle
mov
mov
mov
lcall
inc
mov
jl
pop
jns
lmsw
popa
nop
xchg
ljmp
mov
test
lahf
sub
sub
xchg
js
mov
dec
rolb
jmp
stos
push
jnp
xchg
pop
aad
pushf
add
addl
leave
leave
scas
incl
jb
xor
mov
out
pop
lods
xor
pop
js
scas
fisubl
dec
jo
sub
adc
jecxz
testb
cmp
in
xchg
sub
rorb
in
cs
sahf
pop
imul
push
pop
lods
aam
popf
gs
inc
push
insb
cmp
inc
sub
add
xor
dec
rclb
stc
in
mov
jmp
mov
out
lahf
ja
xchg
inc
push
loope
mov
mov
jmp
enter
dec
int3
mov
shl
lcall
loopne
ds
xchg
add
inc
xor
scas
lcall
rcll
addr16
lcall
in
add
icebp
pop
hlt
aad
inc
int3
addr16
jp
int3
xchg
das
xchg
mov
sbb
push
inc
cmc
push
pop
hlt
adc
sub
fsubs
pushf
lahf
xchg
scas
in
scas
dec
push
jmp
cs
adc
ret
shlb
ret
cli
pop
or
repnz
jns
mov
jmp
in
jnp
adc
jmp
testb
add
mov
push
fiadds
mov
xlat
mov
sahf
cmp
call
mov
add
in
inc
out
cmp
fs
iret
adc
cwtl
imul
enter
jne
inc
les
int
shll
inc
push
arpl
inc
lock
rcrb
arpl
sbb
les
les
movsb
mov
mov
lock
sub
mov
test
popa
push
sub
mov
sarb
jae
test
push
jmp
loop
dec
aam
sub
into
xor
xchg
mov
daa
and
shrl
cmp
lock
and
mov
dec
xor
aam
fwait
cmp
add
fisttps
test
push
dec
xor
cmpb
cmp
push
cli
lods
lods
xor
mov
js
mov
pop
int3
daa
loopne
pop
iret
mov
push
stos
push
fidivs
scas
inc
fmuls
lods
adc
fidivs
cmpsl
cwtl
popf
insb
lods
mov
cwtl
ror
cld
aad
xchg
addr16
xchg
inc
loopne
xchg
outsl
popf
cmp
xor
iret
int3
aas
jge
and
push
lcall
xor
iret
dec
add
test
mov
jno
sub
out
inc
fwait
and
mov
lock
sbb
xchg
shrl
jg
mov
jmp
push
jmp
push
sub
sub
cwtl
push
in
and
xchg
movsb
cli
fs
aam
jo
fdivr
push
int
lret
mov
pop
dec
ror
jns
xor
sti
and
mov
lock
push
mov
mov
pusha
push
loope
dec
out
repz
sbb
scas
add
sub
pop
jne
mov
jle
and
repz
push
nop
in
pop
sbb
std
out
dec
insb
jno
inc
dec
stc
ror
xchg
push
mov
adc
in
cmp
fwait
movsb
lods
jns
cmc
adc
and
mov
mov
push
lds
lock
push
push
addb
xchg
pop
inc
into
add
or
sbb
xchg
jnp
mov
movsb
mov
jmp
push
fistpll
sbb
cmpsb
fdivrl
cmp
lea
and
mov
test
mov
cmp
leave
dec
cmc
test
out
push
jecxz
sbb
ds
ljmp
fwait
or
aam
enter
sub
cld
dec
scas
push
push
div
xor
sub
push
xchg
cmp
xchg
cmc
add
imul
insb
dec
hlt
repnz
je
out
imul
cmp
das
pop
push
rcr
pop
mov
and
lea
pop
push
and
lret
lea
jns
pop
ljmp
aas
stos
inc
shlb
test
mov
je
xor
pop
xor
mull
sbb
repz
xor
xor
scas
mov
dec
in
stos
mov
mov
dec
or
stc
push
sub
out
stc
enter
fsubrp
xor
pusha
andl
stc
bound
jmp
fdivl
out
or
insl
and
int
jecxz
mov
ret
js
jl
dec
xorb
cmp
inc
cmp
jle
xchg
sahf
fistps
unpckhps
ret
arpl
sub
popl
popf
xor
cld
loop
push
test
sbb
push
jnp
jae
xchg
add
mov
clc
das
xorl
jo
rclb
xor
enter
xchg
mov
pop
or
cli
cmp
mov
subb
fs
pop
jmp
movsl
pop
fidivrl
xor
mov
jg
sub
jo
aaa
imul
mov
clc
seta
jg
cmp
jp
push
mov
outsl
call
lea
mov
jg
imul
push
xchg
cwtl
mov
mov
fstpt
gs
cmp
test
lods
ffree
push
bound
movsb
adc
dec
dec
push
sbb
mov
lret
insl
xchg
mov
aaa
inc
mov
mov
aas
pop
fcomi
call
test
or
test
jne
outsb
decb
je
into
dec
repnz
aam
jns
inc
mov
mov
shlb
mov
mov
xor
js
pop
mov
inc
jae
ror
mov
xchg
lcall
mov
cmp
pop
pop
fsubs
cmp
out
scas
dec
iret
add
inc
rcrb
icebp
and
es
xor
adc
inc
jbe
pop
push
insb
sbb
out
add
or
jmp
mov
int
jae,pn
dec
inc
sub
inc
jbe
leave
inc
loopne
les
xlat
out
sahf
or
test
test
pusha
leave
jae
jecxz
sti
testb
outsl
pop
sbb
sbb
repnz
inc
insl
mov
loopne
sub
mov
xor
adc
dec
jno
filds
jmp
mov
or
lods
repnz
pop
imull
mov
imul
jl
jmp
cmp
outsl
and
ja
inc
jo
or
sbb
cs
gs
mov
stos
push
jae
std
movsw
outsb
pusha
mov
pop
rclb
insl
leave
cs
and
and
aam
ljmp
divb
sub
popa
and
mov
lret
add
repnz
enter
icebp
jge
add
cmp
or
dec
adc
dec
icebp
sbb
mov
ret
push
cmc
test
gs
int3
arpl
aaa
cmp
test
aad
adc
xchg
inc
ret
cmp
dec
sub
or
clc
stc
sub
std
push
add
loopne
decl
fmul
movsb
into
aas
pop
inc
shlb
push
sub
sub
cmpsb
mov
sahf
imul
ret
jbe
mov
ret
std
aaa
jmp
jne
enter
ds
bound
cmpsb
or
xchg
imul
and
into
or
dec
fwait
cmpsb
jle
aad
adc
and
dec
add
mov
xchg
pop
push
cmp
roll
add
stc
xor
lret
mov
mov
mov
inc
push
inc
cmp
cmp
xor
loope
imul
sbb
xchg
xchg
push
sbb
xor
mov
mov
aaa
lock
xchg
mov
lcall
push
outsl
outsl
imul
loop
jg
push
jnp
xor
outsb
mov
xor
jge
sub
jae
into
and
popa
je
push
sahf
outsb
add
and
sub
shlb
xchg
imulb
out
xchg
enter
jne
aas
jne
mov
aam
subl
adc
movsb
sub
push
push
mov
daa
mov
xor
push
mov
cmpb
std
and
add
outsl
xor
dec
mov
jo
lock
test
jg
sarb
push
inc
xchg
pop
sarl
pop
lock
sahf
and
je
and
loopne
test
into
insb
insb
and
outsb
jb
mov
mov
out
stos
stos
inc
loope
lret
in
test
sbb
rcrl
sbb
sub
mov
ja
push
jno
dec
das
repz
mov
push
push
mov
out
ret
mov
sbb
out
adc
or
or
push
popf
int3
sbb
int
cld
push
cmp
dec
push
mov
and
pop
xchg
and
add
lea
lock
add
or
jne
mov
pop
inc
push
sub
and
int3
mov
push
in
insb
int3
mov
repnz
out
or
mov
imul
cmp
insb
or
lret
repz
pop
cmp
mov
jle
mov
paddd
mov
mov
lahf
fstpt
out
cld
dec
push
or
xor
inc
in
fsts
push
addr16
scas
add
adc
pop
xor
fisubrs
cmc
ljmp
insl
sbb
push
adc
jno
adc
sub
add
pop
stc
aas
jle
repnz
or
jbe
pop
push
mov
xchg
cmp
enter
pop
clc
dec
les
shl
add
nop
dec
daa
stc
jmp
or
rorl
and
inc
popa
orl
pop
xor
sub
mov
fwait
add
addr16
cmp
popf
lock
fdivl
lret
nop
mov
mov
hlt
lret
inc
sbb
inc
push
xchg
pushf
xchg
out
test
push
sahf
mov
sahf
ds
cmp
mov
mov
mov
xor
pop
aam
in
xchg
inc
pusha
push
sbbb
xor
adc
inc
lea
xchg
imul
adc
fsub
sbb
push
stos
and
sub
and
aas
test
push
sbb
mov
std
adc
mov
push
inc
sbbl
sbb
fidivl
cmp
fdivrl
xchg
dec
xchg
pop
mov
in
cs
repnz
ds
pop
fbstp
imul
pop
fwait
push
cmp
aaa
loopne
pop
inc
call
lock
pop
push
inc
cmp
ljmp
dec
in
gs
shll
lock
adcb
lds
and
inc
push
adc
mov
js
int
into
loop
pop
enter
mov
sub
out
push
into
loopne
xor
mov
loope
testl
or
xchg
mov
fdivrl
pop
shlb
popf
mov
cltd
mov
sbb
adc
ret
sub
mov
pop
cmp
test
dec
call
pop
xor
pop
faddl
rolb
pop
mov
in
ret
lock
mov
test
jae
dec
data16
jb
lea
mov
or
mov
xchg
xchg
pop
push
aas
and
or
lods
and
or
inc
fisttpl
int3
arpl
shr
xchg
jl
pop
loope
xchg
or
sbb
cltd
mov
xor
cmp
mov
pop
add
aad
inc
lods
adc
push
lock
out
xchg
sbb
jb
xor
push
sbb
gs
cmp
mov
shlb
movsb
fildl
fcoms
or
neg
push
xor
jmp
std
xor
xchg
xor
xorl
aam
xchg
les
les
je
mov
adc
xchg
xor
xchg
in
imull
pop
sub
fs
jno
add
daa
data16
aad
rcll
mov
mulb
adc
stos
rcl
popa
jb
xchg
ret
pop
adc
fsubs
aam
mov
out
ljmp
mov
push
mov
cltd
sub
addl
inc
lret
in
sbb
lods
push
mov
fstps
int
sub
pop
or
xchg
jno
lcall
xchg
mov
sti
leave
add
push
mov
mov
sbb
jl
sbbb
push
xchg
dec
xor
rolb
dec
jecxz
stos
mov
push
clc
inc
popa
ljmp
fldt
leave
iret
mov
sbb
sub
int
jo
add
sbb
mov
movsb
jp
fwait
jg
push
lods
add
add
inc
int
sub
xchg
hlt
push
aas
imul
mov
jp
inc
dec
pop
aas
jge
popf
gs
repz
stos
fdivrp
push
movsl
test
cmp
pop
ja
jecxz
test
loopne
orl
jmp
addr16
pop
sbb
pop
insb
xchg
sahf
push
jge
jg
xor
fnstcw
lods
push
into
js
in
and
cmp
lds
int3
dec
or
adc
pop
aaa
adc
lret
es
jb
mov
pop
jo
aas
sbb
sub
push
loope
push
ds
incl
stos
inc
add
cmc
push
jbe
mov
dec
push
setle
mov
stos
in
mov
jnp
mov
in
mov
add
stc
pop
stc
mulb
adc
sub
adc
mov
xchg
mov
xchg
add
inc
out
xchg
mov
push
je
mov
cs
mov
cmpsl
lods
add
mov
mov
or
push
pop
push
inc
push
pushf
fnstcw
movsb
cmp
cltd
lea
xor
inc
inc
scas
mov
mov
jb
mov
dec
lret
mov
adc
or
adc
or
mov
loope
sbb
loope
fstp
cmp
sarb
iret
ds
scas
sti
add
gs
divl
jb
jo
mov
pop
or
dec
neg
push
ret
or
lods
inc
pop
push
cmp
cs
sbb
xchg
mov
lea
push
iret
lret
outsl
and
cmc
pop
out
fcos
sbb
std
push
cltd
mov
into
ljmp
addr16
add
shrb
insb
imul
pop
stos
jle
sub
jno
in
pop
xor
dec
hlt
es
push
xchg
ret
fwait
or
jns
cmp
pop
insb
enter
les
and
in
sub
dec
popa
or
jg
or
dec
adc
xorb
cmp
sbb
aas
mov
js
cli
jle
cmp
int3
or
dec
mov
mov
push
test
int
dec
mov
sbb
aas
fistpll
cltd
lock
popa
mov
sarb
insb
jne
jnp
push
xchg
cli
adc
nop
pusha
cmp
stos
mov
cmp
sub
xchg
stc
fistpl
ret
adc
jmp
cmp
mov
inc
bound
and
fisttpl
iret
icebp
pusha
xor
sti
add
sub
in
lret
cwtl
or
scas
pop
insl
and
cli
fs
xor
jle
call
adc
test
inc
sbb
into
nop
das
inc
jne
push
orl
inc
xor
mov
repz
stos
dec
cld
pop
subb
outsl
daa
mov
scas
jle
jmp
jbe
imul
lahf
mov
xor
adc
push
mov
insb
push
dec
mov
xchg
push
sahf
bound
imul
xchg
inc
mov
leave
sbb
aaa
pusha
pop
jae
jae
mov
mov
loopne
scas
push
add
push
ret
push
sbb
out
mov
xor
ja
mov
test
add
push
pusha
sub
fs
xchg
mov
cmc
sub
mov
add
and
jecxz
in
push
add
inc
xchg
rorb
xor
mov
push
fcom
push
add
subl
fmulp
inc
mov
xor
inc
iret
add
js
popa
jnp
dec
add
mov
mov
cltd
imul
mov
add
rclb
je
and
xor
jns
repz
or
gs
and
out
mov
xchg
jge
jae
fidivl
shll
add
repz
out
lods
xor
loop
test
xor
fisubl
outsl
inc
add
lods
stos
into
mov
sub
xor
dec
inc
shll
in
xor
enter
mov
sub
jns
push
out
push
xchg
inc
sbb
int3
jns
push
icebp
push
sbb
imul
lods
jne
or
sub
in
inc
jb
xor
mov
sub
push
ja
movsb
xor
and
ret
mov
out
sub
lcall
mov
fst
or
mov
test
popa
push
inc
lret
sbb
pushf
ljmp
lret
push
push
xchg
xlat
icebp
ret
mov
int3
insb
movsb
daa
mov
outsb
stos
out
and
insl
sbb
and
mov
outsl
notl
mov
lock
lahf
xor
je
cld
into
enter
sahf
mov
and
lods
pop
sub
ret
xchg
inc
add
hlt
add
jmp
jmp
das
leave
rdpmc
call
cmc
js
and
add
shlb
test
push
imul
jnp
outsl
cs
scas
test
lret
enter
rorl
cmpsl
inc
xorl
ret
push
jo
add
pop
xor
cld
test
xor
sbb
mov
daa
jp
mov
mov
mov
or
adc
fld
dec
pop
sarb
jmp
outsl
insb
ds
add
adc
sub
mov
and
mov
dec
subb
mov
js
clc
lds
roll
xor
jns
dec
aad
das
and
jmp
shlb
mov
xchg
outsl
cmp
mov
and
test
xchg
and
out
pop
sub
jmp
lock
push
xchg
xchg
pop
addr16
hlt
adc
fisttps
lahf
les
lret
cld
sahf
sbb
gs
popf
jne
loope
js
add
imul
cwtl
lods
pop
fcmovbe
sbb
stos
fldl
pop
mov
iret
fistpll
adc
fmull
into
cli
dec
sub
hlt
sbb
loop
push
push
cltd
adc
loope
sbb
xor
lret
jnp
pop
and
fsubr
cmp
addb
in
cmpsl
lods
add
aam
pop
mov
push
mov
aas
lea
sub
pop
xor
push
mov
mov
mov
sahf
sahf
sbb
pop
and
sbb
mov
cmp
dec
in
ret
xchg
repnz
lret
loope
es
int
sub
shll
insl
xchg
push
into
pop
call
stc
ss
cmp
mov
setne
xchg
shrb
mov
push
push
ss
aam
pop
push
push
add
dec
fiadds
out
dec
add
lods
imul
and
pop
jge
xchg
xchg
test
aaa
push
fnstsw
push
addr16
fisubrl
mov
in
pusha
pop
inc
xor
push
add
out
pop
cmp
aam
out
in
rcrl
out
subl
ror
inc
cmpsl
mov
jbe
push
mov
mov
lcall
loope
and
clc
and
negb
aam
add
xchg
adc
cmpsb
in
jne
mov
push
ss
ds
shll
ret
jns
jg
jbe
inc
repnz
push
popf
pop
mov
sub
lock
lods
jae
popa
sbbb
movsb
fdivrl
jno
lods
rcr
inc
mov
sahf
inc
dec
orb
dec
test
adc
stos
and
fstpt
lods
ret
sbb
sub
jp
jo
jmp
mov
lret
mov
pop
inc
jns
in
mov
sahf
jl
push
dec
data16
bound
in
adc
inc
and
mov
or
adc
dec
pop
stos
mov
mov
add
movsl
xchg
sub
dec
jle
stc
test
cwtl
imul
adc
lods
lods
mov
dec
mov
sbb
add
mov
adc
push
int3
dec
out
mov
lds
or
into
pop
shll
fdivp
nop
mov
xchg
jge
ja
dec
sbb
mov
movsb
pop
test
sub
mov
sub
mov
sti
pop
outsl
movsb
mov
dec
sub
xchg
cmp
out
cwtl
movsb
jb
jl
jle
jo
lret
dec
cmp
es
outsl
pop
iret
inc
test
mov
fdivrl
jecxz
or
mov
cmp
inc
push
imul
mov
fs
xchg
insl
jae
fistpl
mov
add
dec
jno
in
mov
fld
lret
mov
inc
in
sbb
das
jb
inc
loopne
mov
pop
dec
adc
adc
outsl
cmpsl
push
dec
dec
sub
mov
mov
addb
adc
xor
das
iret
or
sbb
pushf
xor
dec
test
loope
mov
xor
test
aad
rcl
jmp
fisttpll
add
add
mov
out
mov
and
jmp
xor
or
inc
sub
add
mov
lock
xor
mov
stos
movsb
jl
xchg
sbb
push
dec
sbb
clc
mov
orl
es
fidivl
call
push
shlb
cs
xchg
xchg
pop
scas
lock
xor
jecxz
mov
aam
and
add
xchg
lods
lahf
inc
sub
fstl
and
push
cmpsl
shll
fbld
hlt
add
movsb
mov
dec
cli
sbb
shll
inc
loope
testl
fdiv
dec
arpl
lods
inc
scas
jbe
cmp
fimull
xor
lret
inc
jne
rcll
daa
mov
mov
or
add
push
fsubrs
jo
xchg
lock
in
imul
mulb
jns
jecxz
data16
and
sbb
lret
fisubl
arpl
enter
ja
cmp
rcrb
in
outsl
or
lods
mov
inc
pop
jge
insb
add
popa
pop
and
aad
pop
adcb
fsincos
rorl
push
aad
cmpsl
sub
pop
mov
sbb
pop
jecxz
ficoml
mov
sbb
bound
and
daa
sahf
mov
sarl
mov
mov
inc
cmp
cmpsb
pop
xor
sahf
push
sbb
outsl
popf
jp
sbb
shl
adc
xchg
mov
jecxz
xchg
out
movsb
and
adc
les
adc
cld
pop
cltd
cld
movsb
stos
sub
or
cld
out
sti
mov
hlt
loope
jne
mov
xchg
or
lea
in
mov
inc
test
fidivs
pop
fwait
dec
inc
xchg
adcb
scas
pop
jle
and
and
popf
jno
add
hlt
into
stos
mov
cmp
adc
mov
cmp
fsub
aam
mov
pop
sub
cmp
push
movsb
ja
or
xchg
dec
data16
add
sub
lds
das
push
xor
dec
inc
inc
pop
mov
loop
xchg
push
dec
pop
mul
nop
dec
jae
insl
imul
mov
add
push
out
adc
xor
pop
dec
dec
mov
jns
in
cmp
cmp
and
std
stos
pop
push
jg
push
push
cs
mov
xchg
and
mov
pushf
push
pop
loop
and
cmpsb
icebp
xchg
sub
cmp
add
in
fldcw
aas
mov
lcall
stos
fnstenv
lods
popf
sahf
pop
test
lods
bound
shlb
in
mov
cmp
daa
loopne
adc
out
fmull
in
xchg
inc
mov
lret
aad
lret
movsl
cmpsb
cmpsb
repz
js
inc
sbb
pop
push
sbb
ljmp
dec
fadds
add
loopne
popa
testb
test
cs
pop
push
cmp
fsubrl
xchg
scas
and
dec
cmpsb
subl
xchg
jle
inc
mov
je,pt
xchg
out
push
pop
pop
mov
lret
mov
pop
stos
mov
test
mov
or
adc
xor
lahf
and
cmc
inc
jns
pop
push
rcll
push
mov
add
pop
out
xchg
sbb
leave
setl
jmp
or
pop
jmp
or
mov
push
sub
pop
popf
sub
push
mov
ret
push
mov
dec
mov
fdivl
adc
dec
out
or
push
xorb
xchg
imul
je
mov
les
pop
or
mov
jg
mov
sub
ret
repnz
jae
bound
xor
stc
out
pop
aas
add
pusha
data16
xchg
cmpsl
decl
sbb
inc
gs
jbe
mov
clc
stc
inc
add
lods
sub
jp
add
sub
in
pop
lret
fiadds
loope
cld
dec
cli
into
push
add
out
and
shlb
and
inc
adc
dec
xchg
sbb
inc
mov
sar
orl
mov
aaa
xchg
addr16
in
xchg
xchg
sbb
mov
in
lahf
mov
sbb
lret
cmp
hlt
notb
js
jb
shlb
popa
fsubs
inc
icebp
cmpsb
popf
in
iret
pop
jo
pop
xor
gs
lahf
pop
in
mov
mov
std
frstor
cmpsb
cli
fwait
push
xchg
cmp
ds
icebp
inc
adc
mov
jl
int3
xor
test
xchg
dec
push
dec
sub
out
sub
lahf
inc
movsl
and
test
sub
xor
jae
lea
dec
adc
cmp
rol
in
cmp
into
movsb
decl
lcall
and
push
pusha
scas
mov
adc
lods
daa
imul
negl
xor
or
dec
and
ret
mov
fadds
and
lahf
push
lret
sysret
mov
xchg
sub
std
sbbl
mov
dec
mov
lods
andb
nop
xchg
jmp
inc
pusha
out
in
popf
mov
cltd
sub
cmp
push
pop
icebp
add
inc
and
in
ljmp
out
xchg
rcrl
ljmp
push
sbb
aas
push
sub
cmpsl
or
cwtl
icebp
movsl
in
mov
jno
and
push
cld
fs
pop
sub
mov
sub
std
js
jle
dec
jge
pop
adcl
sub
icebp
or
sbb
dec
mov
je
mov
xor
cmc
jb
stos
sbb
ficoml
jmp
mov
jbe
les
loop
aad
mov
in
jo
jmp
mov
out
or
mov
pop
test
pop
movntq
movsb
das
outsb
ljmp
mov
mov
ss
add
sub
fdivrp
pop
xchg
adc
mov
add
mov
ds
jge
push
inc
and
mov
movsl
xor
in
mov
add
out
mov
lods
dec
in
int3
addb
mov
mov
cwtl
in
iret
lret
mov
call
shrd
aad
cmpsl
jecxz
pop
sti
push
or
mov
cmp
mov
jl
add
jno
clc
loop
hlt
in
outsl
mov
pop
jmp
enter
lea
pop
add
xchg
mulps
lods
xchg
enter
xor
pop
ja
insb
pusha
mov
lods
pushf
scas
ret
popf
fs
idivl
push
dec
and
mov
fs
lret
mov
gs
scas
cmp
sbb
cmp
or
inc
faddl
xchg
push
mov
lds
sarl
pop
lret
leave
int3
and
movsb
addr16
das
stos
ficompl
and
dec
jge
pop
sahf
jle
xchg
mov
inc
adc
mov
xorl
jo
xchg
fistpll
fwait
jns
and
sbb
push
ror
lods
dec
and
decb
loope
cmc
dec
push
inc
cltd
mov
mov
insb
or
inc
pop
add
mov
mov
mov
xor
fnstcw
xchg
inc
sbb
xchg
aam
jnp
addr16
or
and
out
fists
mov
imul
insb
inc
push
or
mov
add
jne
adc
xor
mov
or
push
push
aaa
mov
sahf
or
jmp
cmp
sbb
mov
xchg
xor
cmp
popf
push
mov
shll
push
or
sub
cmc
leave
icebp
pop
fsubs
add
push
sahf
out
hlt
inc
sahf
cmp
pop
cmp
out
xchg
out
ret
add
lret
adc
pop
mov
and
clc
adc
jl
push
rcll
add
mov
push
stc
pop
inc
pop
mov
in
jne
xchg
dec
insb
out
cmpsb
setl
mov
cmp
pop
in
sbb
xorl
fwait
lods
sub
dec
dec
inc
stos
mov
stos
test
xchg
shl
add
fidivrs
inc
sbb
daa
adc
mov
aam
sti
lea
adc
and
mov
fs
push
shl
call
cmpsl
adc
popf
andb
sbb
xchg
cli
testb
ljmp
jp
jno
lods
pop
push
pop
sub
sbb
add
dec
ss
dec
sahf
loopne
mov
cli
loop
xor
in
loop
sub
out
jmp
pop
sub
dec
imul
mov
push
dec
mov
dec
push
mov
adc
mov
fs
outsb
jp
sti
ftst
lods
dec
nop
inc
aaa
js
inc
dec
xchg
sub
pop
cli
push
jmp
es
and
shr
leave
pop
mov
ljmp
push
or
cmpsl
sbb
int
cmp
mov
aas
ja
shll
mov
mov
xchg
or
repnz
aas
popf
and
addr16
push
pop
pop
mov
pop
add
xor
push
fildl
mov
subl
and
add
xchg
jns
mov
mov
outsl
ljmp
xor
push
aaa
cmp
or
ret
cmpsb
ds
leave
imul
push
and
enter
cmc
add
repz
scas
mov
scas
lret
xchg
les
mov
lret
mov
push
mov
cmp
gs
adc
enter
jl
dec
pop
inc
aam
dec
hlt
mov
push
imul
clc
push
bound
pusha
pop
sub
mov
push
mov
int3
pop
xor
lock
push
jb
outsl
imul
and
xchg
jmp
aas
xchg
addb
pop
aaa
mov
imull
lea
lds
push
adc
in
mov
sahf
test
loop
gs
ja
jbe
mov
and
jl
or
pop
icebp
ja
out
cld
popl
ret
nop
push
call
repnz
pop
mov
repz
jns
jmp
sbb
jne
sbb
xor
fbld
cmp
loopne
daa
repz
mov
push
and
aad
push
sarb
mov
or
out
push
xchg
lret
imul
rcrb
insl
mov
and
mov
in
daa
cmp
xchg
sti
fdivl
daa
sbb
push
mov
mov
in
test
icebp
add
add
stos
cmpl
add
loope
fwait
mov
addb
inc
inc
stos
mov
mov
adc
mov
mov
mov
stc
sbb
inc
push
sahf
xchg
mov
fcomps
mov
pop
inc
xchg
xchg
and
jecxz
mov
popa
push
jbe
adc
dec
cmp
jbe
cli
add
add
push
xchg
or
test
daa
movsb
sahf
mov
cmp
dec
daa
fcomps
inc
iret
mov
cwtl
jns
pushfw
int3
xor
pop
call
cmpsl
aad
xlat
ja
shl
in
into
nop
jle
sub
sar
pop
jmp
divb
sarb
scas
movl
sarl
jb
lret
imul
shrl
addr16
xchg
shr
shll
insb
pop
adc
iret
push
pop
imul
lahf
in
lret
das
sbb
xchg
sub
enter
lret
push
movsb
cmp
inc
outsl
sti
shll
sub
das
shll
inc
mov
mov
pop
pop
shr
fimuls
sub
cmpsb
rcll
ret
nop
jge
pop
sahf
sti
adc
xor
lods
push
movb
nop
dec
push
ret
adc
or
pop
fisubrs
ret
testb
movsb
in
and
mov
fs
jp
add
xchg
fisubs
shl
sub
hlt
cmpl
lahf
adc
xchg
dec
inc
rcrl
and
push
push
sbb
mov
daa
jmp
xorl
es
jns
lods
jmp
mov
fcmovne
stos
jb
xchg
sbb
nop
mov
test
addr16
adc
cmp
push
push
in
cmpsl
cltd
and
xor
cwtl
xor
xchg
movsl
imul
inc
ret
or
into
and
enter
jecxz
aad
mov
mov
mov
push
ljmp
xor
xchg
sysret
cli
call
add
call
pop
xchg
call
jecxz
or
mov
sahf
pushf
dec
stos
or
dec
jl
into
orb
inc
jnp
pushf
stos
mov
mov
fbld
les
arpl
loop
inc
aam
in
or
in
lea
test
lcall
jo
mov
rolb
lock
out
pushf
das
fst
ret
inc
mov
aad
jno
xchg
pusha
loopne
jl
push
in
ja
mov
adc
jno
adc
inc
mov
stos
shlb
xor
mov
into
xorl
inc
dec
pop
push
sti
sbb
fiaddl
mov
pop
mov
sub
push
rcrl
hlt
out
test
inc
sub
int
mov
jae
dec
jmp
cmp
cmp
decb
out
mov
test
fimull
mov
jl
xor
notb
xchg
jmp
pop
adc
lea
cmp
add
movsl
jecxz
fidivs
nop
inc
mov
sub
inc
and
mov
fucomp
test
mov
cmp
and
scas
pop
xchg
in
dec
mov
and
jnp
sbb
retw
comiss
sti
cwtl
mov
jb
lret
mov
mov
cmpsl
xchg
out
leave
fs
add
scas
gs
out
leave
insl
mov
cmc
hlt
jo
fdivr
dec
fbld
xchg
je
jge
and
addb
in
cwtl
icebp
testb
test
inc
test
pop
int
dec
nop
mull
lds
test
inc
sub
ficoms
and
ret
add
mov
mov
push
insl
cmpsl
sbb
insl
in
add
xchg
dec
add
pop
bswap
cmpsl
addr16
rclb
pop
lods
jmp
cmp
jg
mov
jl
adc
pop
std
xlat
cld
in
mulb
imul
and
xchg
pop
sbb
dec
mov
push
pop
and
clc
xchg
aaa
dec
push
jns
ljmp
leave
mov
mov
iret
jne,pn
lahf
cli
xchg
mov
add
jg
cmc
xor
insb
insl
inc
lea
lds
repnz
mov
iret
adc
pop
push
subl
stc
je
mov
stos
mov
adc
pop
ret
xchg
xchg
cld
into
stos
inc
bound
pushf
in
sbb
jb
popa
inc
stos
push
mov
addl
insl
jecxz
push
pop
scas
fbstp
cmp
push
mov
cli
or
xchg
pop
mov
jns
stos
mov
xchg
jb
push
movsb
mov
mov
lret
fs
mov
ds
cmp
imul
adc
push
es
cwtl
xlat
out
jl
sbbl
or
mov
jp
stos
jle
xor
dec
gs
das
xlat
and
loop
pusha
adc
cmpsb
push
inc
jmp
push
icebp
mov
jb
shl
lods
testb
sti
jnp
xor
or
xor
movsb
xchg
push
andb
mul
ljmp
pusha
dec
aaa
in
or
cmp
dec
js
lods
or
addr16
fcmovb
mov
je
stc
sub
repz
test
ds
outsl
or
repnz
push
jl
pop
xchg
mov
jmp
sar
pop
sbbl
xchg
push
ss
sub
icebp
cmp
jl
lea
push
pusha
fistps
js
mov
gs
insb
fwait
lds
scas
cld
dec
jnp
cmpsb
scas
cmp
jge
mov
ret
fsubrl
call
jb
sub
aam
dec
sarb
cmp
push
roll
and
push
pop
out
xchg
pop
out
pop
adcl
push
test
dec
fadds
stos
ret
in
out
sbb
and
dec
sbb
xor
xchg
aam
outsb
mov
fnstenv
push
or
mov
stc
push
fcom
mov
mov
das
jp
repz
and
cli
sbb
out
xorl
mov
mov
or
ljmp
int3
inc
or
ret
jne
fwait
add
into
aaa
ljmp
mov
dec
or
push
and
dec
push
mov
arpl
dec
imul
dec
fwait
sub
shrl
adc
push
bound
mov
cmp
jmp
sub
jns
lahf
cmc
pop
add
push
mov
clc
lahf
adc
mov
popf
iret
paddusw
dec
movsl
adcl
andl
jbe
add
int
add
hlt
add
ficomps
push
add
rcll
or
cmp
xchg
and
push
or
fwait
pop
xchg
mov
lock
testl
out
aas
cmp
push
aaa
and
test
fcmovu
enter
xchg
xor
add
or
mov
scas
add
mov
sbb
push
imul
xor
aad
pop
outsl
xor
stos
mov
or
sub
hlt
cmp
dec
xor
sub
cmp
cmp
lea
repnz
out
iret
cmpsl
or
aas
dec
jl
in
xor
rol
jg
cli
testb
das
add
sub
loopne
cmp
in
pop
leave
test
sbb
incb
shl
notl
out
and
cmp
orl
mov
shll
outsl
incl
xchg
inc
sbb
lahf
mov
rclb
jo
and
xchg
test
jns
push
mov
push
fmul
pop
add
dec
out
clc
insl
fisubrs
pop
pop
pusha
movsl
dec
pusha
mov
mov
sub
fstpl
cmpsb
push
enter
mov
nop
mov
push
and
xor
aam
sbbb
lock
int3
mov
jge
out
sti
mov
push
stos
ja
das
mov
sub
jmp
call
xlat
sbb
shl
ja
in
test
fucomi
sub
mov
dec
pusha
jno
mov
rorb
adc
addr16
and
xchg
xorl
and
bound
cmp
xchg
sbb
jae
sub
ja
mov
jno
push
mov
inc
insb
push
xor
and
cli
mov
push
xchg
out
pop
inc
mov
inc
push
in
mov
cli
movsb
pop
mov
test
jl
daa
dec
sub
outsb
push
daa
add
push
xchg
in
pop
jne
outsb
out
or
cmc
scas
mov
popa
push
sbb
or
scas
lcall
int
int
sahf
ljmp
or
jge
stos
stos
in
jmp
inc
xorb
push
outsl
mov
sahf
pop
push
sahf
int3
add
add
mov
repnz
inc
sbb
add
mov
ljmp
clc
dec
mov
xchg
mov
imul
cmpsl
mov
adc
mov
add
fstpt
mov
sbb
cmc
sub
fimull
xor
pop
mov
or
fs
shr
jp
rorl
hlt
mov
xchg
mov
pop
push
std
sbb
mov
push
and
xchg
insb
je
mov
or
jnp
cmp
xchg
push
or
dec
leave
mov
push
xor
xchg
addr16
jno
fidivrs
lea
mov
faddl
and
out
pop
lods
mov
xchg
mov
mov
clc
out
push
cmp
and
scas
addl
jl
add
iret
iret
mov
gs
cmp
adc
push
jno
daa
inc
and
pop
cmp
and
mov
inc
pop
xor
ss
adc
mov
ljmp
shr
push
jl
js
pop
jecxz
mov
push
cmp
fisubrs
or
lods
lahf
dec
sub
movsb
pop
pop
inc
mov
lahf
and
jge
push
sub
sub
cmpsb
arpl
or
lahf
and
adc
das
fists
fwait
add
mov
lds
repnz
jb
popf
sub
roll
ja
fmul
out
mov
test
enter
pop
pop
stc
xchg
out
jnp
stos
test
pop
mov
decl
movsb
bound
js
test
cli
roll
pop
mov
push
sahf
in
icebp
test
push
insl
xchg
aaa
adc
popf
jg
xchg
dec
add
mov
mov
mov
daa
lea
add
lds
rdtsc
leave
add
jnp
out
xor
call
cltd
aas
mov
sub
xchg
inc
popl
xchg
xchg
xor
fbld
notb
and
sbb
push
cmp
dec
xlat
imul
lock
sub
sbb
push
mov
add
repz
es
imul
in
xor
hlt
pusha
or
and
jecxz
ret
cmp
or
popf
ljmp
icebp
adc
add
popa
hlt
cmp
add
push
adc
cltd
test
or
mov
cmp
adc
mov
xchg
setge
loopne
sub
inc
mov
rol
lds
push
and
mull
adc
push
pushf
cmp
push
pushf
stos
movsl
jo
cmp
fdivrl
inc
sbb
nop
or
push
clc
push
push
pop
sahf
mov
cld
cwtl
dec
dec
sbb
and
call
dec
aaa
es
iret
notb
xor
pop
pusha
popf
shrl
out
sbb
sub
in
scas
and
xchg
mov
in
dec
shll
sbb
push
nop
aaa
cwtl
jae
xchg
loopne
sub
rclb
test
loop
push
xor
ror
aam
add
testl
mov
shl
in
xor
mov
loope
adc
push
pop
js
xor
imul
fwait
cmp
mov
cpuid
loope
insb
push
loope
dec
stc
or
mov
sub
or
mov
mov
lahf
push
lds
jg
and
xchg
arpl
or
mov
cmp
setnp
mul
sub
xchg
push
cmc
jge
or
mov
insl
daa
pop
push
pop
xchg
lret
in
sub
and
xor
xchg
push
pushf
cmp
scas
ja
xorl
std
test
push
enter
cs
outsb
jno
mov
outsl
leave
mov
fldenv
scas
test
in
enter
mov
cmp
call
arpl
adc
ret
pop
lock
push
mov
add
add
xlat
push
mov
xorl
mov
sbb
sbb
scas
aam
push
xorb
sarb
cmp
sub
dec
outsb
gs
bound
movsl
clc
sub
and
cmp
and
inc
enter
add
xchg
jb
enter
subb
addb
ss
mov
and
inc
orl
xchg
mov
andl
movb
incl
xchg
lods
mov
mov
or
or
mov
movsl
aaa
sarl
pop
in
lcall
into
ds
shlb
cmc
add
iret
out
scas
inc
shr
lods
sbb
sbb
or
dec
push
pop
xor
xchg
add
filds
cmp
lret
xchg
cvtps2pd
test
sbb
add
aas
sbb
jb
jae
aaa
xchg
sbb
bnd
stc
arpl
enter
out
xchg
fisubl
pop
jecxz
jae
sbb
push
mov
pop
jne
xchg
jg
dec
shll
push
mov
loop
int
pop
cwtl
aas
or
xchg
xor
rcll
cmp
into
cmpsl
xchg
lahf
cmpsl
mov
rcll
inc
lret
sbb
cwtl
sub
xor
sbb
mov
icebp
adc
rol
iret
mov
rcr
mov
push
inc
outsb
mov
mov
stos
xchg
mov
mov
out
mov
sbb
jb
or
aad
xchg
js
popa
jo
pop
mov
mov
jnp
jge
xlat
out
scas
out
push
jecxz
xchg
sti
pop
cmp
mov
scas
lea
adc
cmp
push
std
dec
jbe
xchg
ljmp
rol
aaa
in
mov
or
sub
jecxz
or
testb
stc
ja
cmp
in
and
outsl
stc
jmp
enter
xchg
out
test
adc
sbbl
mov
leave
pushf
int3
xlat
pop
xchg
pop
cli
mov
jmp
mov
arpl
cmp
dec
vmread
push
pop
push
in
sub
test
mov
lock
xchg
cmpsl
xchg
adc
outsl
jmp
and
xor
add
into
test
das
and
insb
mov
rcrl
cmc
push
cld
pop
push
jl
sbb
ret
jo
popa
mov
and
icebp
sbb
lcall
repnz
push
sub
mov
pop
ficomps
pop
or
adc
push
mov
sub
jae
iret
jne
mov
add
jecxz
sbb
movsb
and
cltd
mov
idivb
adc
jns
push
mov
xchg
aaa
or
push
jb
mov
dec
divl
dec
pop
pop
or
inc
push
mov
dec
sbbb
dec
jb
push
pop
push
repnz
xor
ljmp
dec
addr16
adc
mov
cmp
mov
jb
dec
dec
xor
out
mov
mov
mov
lahf
cmp
lock
jmp
gs
rorb
data16
in
or
hlt
dec
ja
repnz
mov
ficomps
lret
inc
leave
std
pop
pushf
cs
add
mov
push
ficoml
test
call
xor
pop
or
enter
stc
fs
jmp
push
cltd
aas
scas
xor
mov
test
les
dec
and
push
fdivrl
addr16
adc
rcl
cli
xlat
mov
mov
push
cmc
cmp
pop
push
jge
mov
lods
push
xchg
fdivl
lret
add
sbb
sub
and
leave
scas
lds
inc
cmpsb
and
pop
lret
test
xchg
pop
xchg
cmpsl
movsb
cmpsl
aam
sub
or
sar
imul
or
ficoms
pop
in
fucomip
enter
and
mov
push
or
pop
pushl
push
test
rcr
cmp
shlb
jl
mov
jp
lret
movnti
adc
jg
sub
sahf
jmp
icebp
pop
xor
lods
inc
into
into
jbe
inc
roll
testl
out
sbbl
adc
pop
sub
dec
loope
sbb
push
popa
xchg
out
jnp
lahf
aaa
jge
adc
popa
mov
call
jns
mov
int3
mov
rcll
pop
jno
in
fwait
imul
push
inc
inc
push
adc
mov
mov
daa
or
shlb
jl
arpl
cld
mov
lret
dec
std
movsb
jo
add
ret
ret
xor
stos
dec
jno
mov
inc
outsb
ds
in
mov
or
xor
add
jmp
mov
jb
adc
pop
sahf
sbb
push
inc
inc
and
mov
xor
jno
dec
pop
sub
adc
push
xor
pop
mov
sub
cli
add
adc
sub
inc
push
push
push
xor
inc
js
mov
in
clc
mov
add
outsb
dec
cmp
rcl
mov
imul
inc
daa
fsts
xchg
je
or
fcompl
jle
and
push
pop
lret
jnp
cmc
add
rcl
pop
cmc
pop
and
cmp
push
dec
dec
dec
test
jmp
inc
es
or
loopne
xchg
and
ret
xchg
mov
in
push
leave
pop
mov
clc
mov
movsb
pop
imul
mov
dec
jae
stos
cmpsb
sti
xchg
pop
push
cmp
xchg
xchg
sbb
js
and
xchg
and
pop
fldcw
jne
or
mov
inc
mov
call
push
pop
repz
lret
cmp
fs
mov
inc
enter
imul
xor
lock
jo
ljmp
clc
cli
mov
aam
and
bswap
mov
repnz
shrb
jno
pushf
leave
add
repz
and
push
xchg
shrl
data16
push
xchg
mov
fisubrs
fldenv
push
inc
add
js
add
xor
mov
or
add
lahf
sbb
sub
push
imul
mov
mov
negb
cmp
andnps
dec
sbb
loop
jmp
sti
shlb
ljmp
aad
js
cli
adc
in
sub
jo
scas
sub
repz
scas
das
loopne
mov
out
push
mov
hlt
xchg
inc
cmpl
and
add
movsb
xchg
data16
in
sbb
and
popf
sub
cmp
insb
xor
or
sub
mov
int3
int
or
imul
test
pop
lahf
cmc
cmp
pop
xchg
mov
jo
sub
mov
loop
out
dec
sbb
in
cmp
gs
xor
cld
mov
mov
pop
and
repz
enter
pop
outsl
cwtl
cwtl
fisubl
inc
pop
sbbl
pop
dec
dec
daa
push
xchg
sbb
call
add
std
daa
push
jl
jecxz
lock
std
int3
icebp
inc
dec
xchg
iret
rcll
sbb
adc
fcompl
add
shr
adc
in
ret
scas
shlb
int
hlt
dec
aam
stos
shrl
pop
shll
xchg
pop
lods
xchg
pop
sub
mov
jg
call
sahf
out
shl
xchg
add
or
divb
inc
movsb
clc
add
add
pop
das
fs
sarl
in
sbb
adc
cs
xor
pop
sub
adc
mov
mov
push
in
and
xchg
add
jmp
test
aad
adc
cs
sbb
mov
icebp
jl
push
shlb
add
lods
mov
outsb
and
xchg
add
push
loop
cmp
mov
or
push
in
pop
mov
cltd
lods
xor
and
scas
and
filds
movsl
mov
sub
xchg
iret
cmp
jnp
mov
pushl
push
sub
mov
pop
xchg
stos
gs
lods
push
inc
mov
jbe
pop
int3
inc
cmp
cmp
xchg
es
dec
cmpsl
add
sahf
pop
jns
adc
test
dec
sub
loop
cmovnp
pop
mov
dec
or
mov
loope
scas
stos
repnz
mov
cmpsb
bound
jp
dec
dec
shlb
push
test
mov
jle
sbb
fwait
mov
mov
bound
add
xchg
jg
mov
std
adc
je
cmp
insl
dec
pop
or
adc
jl
mov
pop
pop
outsl
adc
aaa
mov
inc
inc
int
dec
sti
popf
cmpsl
filds
and
rclb
rcrl
pop
cmp
insl
bound
add
test
add
cmp
xor
call
mov
stc
sbb
arpl
adc
fmul
mov
roll
lcall
cwtl
roll
sbb
pop
ret
shl
mov
loopne
out
pop
imul
jmp
mov
fidivl
push
cmp
test
loope
cmpsb
add
adc
xchg
loop
push
or
jg
and
pop
mov
mov
mov
push
stc
or
push
arpl
jae
xor
pop
xor
scas
rol
mov
dec
clc
mov
cli
fimuls
pushf
mov
mov
mov
inc
in
roll
int3
mov
lret
jno
loop
push
je
pop
leave
outsl
orb
mov
and
iret
sub
xadd
fwait
xchg
test
ljmp
test
lods
pop
push
or
inc
int
dec
cltd
sub
mov
inc
xchg
and
ds
and
mov
jecxz
pop
pusha
rcll
daa
sbb
push
lock
push
sbb
lret
mov
test
mov
mov
imul
jecxz
daa
jmp
ret
mov
mov
das
inc
xchg
dec
xchg
cli
mov
inc
add
xor
mov
mov
mov
mov
xchg
add
cmpsl
push
jno
outsl
iret
add
out
fs
lods
lret
lret
add
push
aas
fldcw
clc
dec
pop
inc
jno
add
cli
lods
push
pop
and
add
mov
ret
xor
xor
inc
cmpsl
adc
jmp
or
inc
inc
add
mov
push
adc
hlt
xor
in
addl
es
mov
add
and
in
loop
shl
cli
sub
lea
sbb
aam
cmpsl
or
ret
or
xor
xchg
mov
scas
sbb
cmp
jne
cmp
je
ret
pusha
jno
pusha
xchg
lcall
mov
int3
push
decl
dec
ljmp
sbb
and
fisubrl
mov
xchg
mov
push
aaa
ret
add
aaa
nop
adc
add
sarl
out
cmp
jmp
outsb
cmp
jb
fnstsw
or
in
xchg
leave
sub
add
adc
movsb
xchg
rsm
add
sahf
lea
pop
push
int
mov
or
push
test
mov
pop
int
call
add
dec
in
or
dec
cmpsb
stos
mov
lret
clc
cmp
push
xchg
cmp
int
adcl
das
pop
push
adc
std
sbb
jo
shlb
pop
inc
rorl
xchg
adcl
mov
fldl
es
sub
jg
jnp
add
push
inc
push
mov
arpl
push
inc
test
mov
xchg
xor
or
fsubl
ds
sub
aaa
cwtl
bound
in
gs
push
pop
dec
sub
std
xchg
push
idivb
idivl
ss
frstor
mov
xor
or
movsb
into
or
xor
imul
mov
mov
jge
int
ret
insl
dec
insl
js
insb
and
xor
sub
push
cmp
add
shr
rol
fildll
mov
test
or
jnp
outsb
scas
insb
pushf
jmp
xchg
arpl
stos
ret
aam
mov
and
cltd
push
cli
out
popf
push
inc
inc
ret
in
movsb
cli
sbb
lods
sbb
push
mov
scas
data16
inc
pushf
rorb
out
cmp
ds
adc
xchg
bnd
pop
outsl
pop
mov
lea
insl
mov
mov
outsl
cmp
movsl
mov
hlt
mov
mov
shlb
mov
rcrl
sti
or
ljmp
mov
mov
mov
enter
push
xchg
jno
xor
jl
xchg
mov
aad
data16
xor
push
add
push
aaa
dec
in
jo
pop
xchg
push
fcmovnb
inc
or
pop
fstpt
fdivrs
pop
dec
stos
das
xchg
imul
mov
dec
inc
sub
lds
je
pop
and
jae
sbb
adcb
shll
pop
fs
mov
and
mov
rol
repz
rorl
inc
mov
pcmpgtb
mov
mov
push
aas
das
lret
int3
or
ret
fnstenv
ss
lods
loope
sbb
fxam
rorb
pop
rolb
lahf
sti
insl
pop
xchg
pop
xorb
push
leave
push
dec
repz
enter
loop
insl
into
mov
xor
push
xchg
mov
xchg
negb
cltd
push
pop
mov
mov
in
push
xchg
data16
lds
mov
mov
lret
add
jno
mov
and
pop
ds
adc
testb
enter
pushf
scas
mov
inc
mov
or
inc
adc
ss
ds
push
daa
outsb
sbb
cltd
aas
mov
push
xor
and
push
cmp
push
pop
push
iret
pusha
fdivs
mov
test
mov
lods
mov
aaa
adc
lods
roll
sub
xchg
ficoms
mov
cmp
jnp
bound
or
xchg
call
mov
pop
cmpsb
sbb
mov
mov
sub
push
or
mov
sbb
jno
ret
adc
negl
xchg
fs
lds
mov
xor
repz
xchg
das
std
cmpsb
inc
testb
xor
push
lcall
insl
or
pop
mov
xor
inc
cmpsb
pushf
xchg
fisttpll
bound
je
jnp
mov
cmpsl
adc
lock
scas
or
mov
fbstp
pop
dec
lock
shlb
add
out
mov
sbb
mov
inc
pop
inc
cmp
in
cwtl
rcrb
mov
push
repnz
ss
mov
mov
lret
xchg
or
inc
fcompl
add
dec
imul
cltd
jmp
pop
ja
leave
mov
mov
test
inc
cmp
out
xchg
add
and
out
in
add
push
mov
shll
or
es
dec
cmp
inc
push
std
inc
shlb
push
sbb
xchg
pushf
subl
outsl
aaa
dec
adc
outsb
js
xchg
sub
dec
xorb
out
mov
sub
xor
jmp
fdiv
loope
icebp
adc
scas
dec
jne
das
dec
iret
or
sub
loop
addr16
dec
dec
or
xor
add
jle
test
or
jo
testb
mov
push
xchg
dec
aam
dec
ljmp
sbb
mov
lds
imul
fisttpll
push
push
popf
cmp
mov
mov
test
add
mov
js
pop
movsl
mov
lods
mov
stc
fs
jle
sub
mov
nop
pop
and
out
subl
fistpl
cmp
test
ds
js
cmp
fstps
cmp
mov
sbb
pushf
push
repnz
lahf
lods
ret
pushf
cli
jl
ljmp
jno
pop
push
in
gs
inc
stos
and
dec
ror
clc
sub
pop
out
sbb
push
imul
sahf
rolb
scas
lock
hlt
dec
dec
gs
or
aaa
addr16
int3
clc
mov
xorb
loop
xchg
insb
adc
or
push
xchg
pop
add
and
popf
shlb
adc
outsb
fdivrp
adc
out
mov
sub
hlt
cmc
mov
cmp
mov
dec
dec
mov
subl
pop
cmpsl
lret
sub
adc
xor
xchg
cmp
mov
shll
enter
mov
inc
je
enter
xchg
dec
xchg
bswap
sub
and
cwtl
mov
popa
fsubl
pop
mov
jne
or
xor
xchg
clc
jb
dec
rcrb
call
iret
es
sub
sbb
fadds
pop
dec
inc
in
cmpl
jno
xchg
xchg
xor
cmc
mov
cli
stos
inc
movsl
push
cmp
push
push
cld
out
loop
orl
insl
xchg
dec
lock
add
arpl
incb
test
aaa
and
pop
mov
lods
sahf
fdivl
adc
push
test
outsl
fs
and
jp
and
mov
loope
adc
jo
or
push
mov
out
adc
or
push
mov
les
and
out
add
mov
pop
mov
sub
std
loope
xor
imul
push
test
cmpsl
push
pop
mov
add
pop
or
scas
fwait
add
es
shl
push
push
mov
jbe
push
icebp
push
push
popa
ljmp
out
repz
stc
lods
mov
movsb
hlt
xor
leave
add
jmp
pop
mov
or
xchg
mov
adc
sub
aad
dec
dec
inc
fwait
int
icebp
jb
lock
and
xchg
sub
neg
fs
inc
mov
repz
push
push
inc
cmp
testl
push
aam
cmpsb
cmp
xchg
push
ss
inc
sub
inc
imul
shl
mov
push
popf
xor
int
jp
dec
loopne
adc
notb
jnp
fisttpl
out
mov
rclb
jbe
or
stos
mov
and
push
dec
loope
je
clc
loop
lea
mov
lahf
mov
mov
sbb
push
or
into
push
jle
repnz
out
push
jecxz
jnp
stos
add
in
mov
stos
into
in
push
pop
xchg
insl
lcall
adc
aas
mov
stos
iret
push
sbb
lret
loope
psraw
jae
sbb
cmp
fstps
sub
xlat
jns
sub
in
fstl
mov
cmp
add
repnz
ret
cmp
jge
and
mov
or
inc
mov
and
test
dec
out
outsb
loopne
in
divb
pop
pushf
or
lds
inc
dec
lock
or
ror
outsl
xchg
int
shrb
jge
cmpsl
imul
rcll
mov
popa
jne
xlat
scas
push
in
add
mov
xor
js
aam
cmp
arpl
in
jne
dec
dec
cmp
pop
lods
mov
mov
ljmp
and
jno
push
loopne
dec
sbb
push
jp
add
out
jne
outsl
and
jo
cli
add
dec
out
stos
dec
addl
mov
xchg
pop
int3
test
mov
adc
jo
or
push
mov
and
mov
imul
call
inc
ficompl
dec
xchg
cmp
arpl
sti
call
arpl
pop
mov
jmp
mov
jg
mov
and
mov
xchg
sub
aad
mov
fs
ret
mov
fs
rol
loop
sbb
sub
dec
add
dec
pop
in
xor
add
ret
mov
mov
and
jge
into
stos
push
push
add
lds
pop
test
addr16
jg
inc
es
adc
sub
fistpll
nop
xor
jbe
push
jae
and
mov
xchg
cli
sbb
sub
mov
loopne
sbb
or
out
xor
cmp
adc
inc
or
add
insl
mov
cmc
cmc
shr
repnz
push
ds
mov
lock
jne
dec
mov
add
test
int3
js
push
xor
sbb
cmp
pop
cmp
mov
ffree
iret
mov
or
aaa
mov
ret
sbb
push
jp
push
out
pop
sbb
and
cs
sub
sti
mov
fs
mov
pop
int3
mov
add
add
mov
sbb
jecxz
xor
sbb
cld
lret
sub
jmp
rcll
rclb
xchg
test
mov
inc
mov
and
inc
out
fstpl
clc
and
pushf
insl
jecxz
outsb
and
and
jl
popf
or
mov
in
mov
add
repz
cli
jbe
or
fidivs
rorb
jne
jg
cltd
mov
pop
pop
mov
push
les
insl
in
insl
test
outsb
inc
inc
cwtl
adc
leave
xchg
inc
aas
sub
fstps
lret
pop
mov
fisubs
jle
pop
test
rcr
imul
xchg
adc
jne
popf
addr16
movsw
outsw
xor
mov
pusha
sub
cmc
jnp
xlat
jns
mov
jmp
std
jb
xor
das
mov
inc
in
push
adc
mov
call
cmpsb
mov
xor
shrb
je
and
inc
cwtl
addr16
faddp
xchg
pop
push
faddl
setle
pop
adc
outsb
push
dec
pop
fidivrs
or
in
jge
cld
dec
mov
and
imul
jge
inc
pop
push
iret
push
scas
or
add
clc
mov
inc
add
push
lret
ss
fcmove
lods
push
or
sti
daa
xor
xor
xlat
ret
sub
mov
adc
push
mov
rcl
sub
sub
pop
int
and
in
add
sbbb
aad
out
lcall
stos
imul
repz
bound
loopne
lods
mov
mov
shr
xchg
adc
xlat
popf
jle
addr16
cmpl
inc
pop
idiv
ss
cltd
push
pop
dec
push
in
fs
push
popa
xlat
fidivrl
sub
xchg
and
sbb
sahf
sarl
int3
cmp
push
mov
inc
xchg
rolb
jp
test
testl
leave
sbb
inc
cs
fwait
jbe
xor
rcrb
jmp
jecxz
push
push
dec
lods
mov
scas
jo
jle
add
mov
pop
roll
stc
mov
nop
mov
mov
inc
outsl
xchg
xchg
mov
push
xor
lods
xor
inc
pop
and
push
call
jle
fbld
xchg
sti
xor
and
loope
push
or
aas
outsb
dec
and
or
in
rolb
jle
push
cltd
jnp
mov
mov
inc
xchg
leave
roll
cld
mov
lods
add
and
mov
andl
inc
xchg
xchg
dec
stc
jae
imul
cmc
test
jg
test
jl
lods
fstpt
inc
call
inc
lcall
je
pop
mov
pop
outsl
or
jp
ficomps
shlb
xchg
and
ret
jae
sarl
popf
lock
test
pop
addr16
mov
int3
aam
mov
mov
xchg
inc
push
ljmp
pop
std
xlat
sbb
dec
pop
lds
pop
xchg
shrb
aad
dec
movsb
inc
or
das
or
push
xchg
xchg
jb
cmpsb
jae
lcall
icebp
pop
into
fs
sbb
add
cmp
add
jl
xor
fmull
loopne
ret
test
and
cmp
push
or
jae
sub
pop
xchg
dec
push
xchg
in
and
cmp
push
mov
dec
xchg
lret
lds
orb
in
or
imul
stos
call
pushf
pop
sahf
xchg
sub
push
xor
imul
sub
jae
aaa
or
fstpl
cmpsl
inc
pop
call
jmp
xchg
jge
popa
ljmp
out
xor
push
xchg
push
imul
xchg
pushf
movsb
out
loopne
mov
and
stc
les
jmp
cmp
sti
xor
jle
sbb
andb
ds
jne
and
add
lahf
mov
std
in
stos
cmpsb
jmp
cmp
xchg
sub
cwtl
adc
pop
mov
and
repz
adc
rcrb
mov
mov
das
int
loope
adcl
inc
popf
aad
movsl
mov
aas
dec
test
test
icebp
sub
mov
hlt
stos
mov
ret
jmp
out
or
data16
mov
fsub
pop
je
push
sbb
lods
clc
orl
lods
pop
cld
mov
add
cmpsl
ljmp
sub
add
jne
push
mov
lock
mov
cwtl
fiadds
test
push
or
add
and
test
xchg
mov
xor
sbb
fsubs
fbstp
cmp
fldenv
xchg
pop
ds
or
into
lock
daa
test
inc
push
mov
out
imul
enter
test
sub
ret
movl
adc
out
popa
mov
fistpll
int3
outsl
xchg
jge
add
pushl
dec
cmpsl
mov
or
xchg
cmp
outsb
test
outsb
and
lahf
mov
xor
xor
and
sbb
push
divb
rorb
ss
mov
notl
sbb
clc
pop
mov
and
rorl
loop
jg
and
xchg
frstor
mov
push
lods
push
jp
aad
mov
adc
dec
and
cmpsb
adc
xchg
and
aas
shrb
mov
sbbb
mov
push
jecxz
jl
mov
das
cmpsl
shl
push
push
adc
sbb
les
mov
add
pop
pop
xchg
inc
scas
fcoml
fbld
mov
es
hlt
test
lock
pop
daa
fs
sub
pop
hlt
add
and
cwtl
sub
and
and
mov
push
xchg
jns
xchg
call
mov
cwtl
stos
dec
cld
jo
das
shrb
lock
xor
stos
jp
jne
fsubp
mov
mov
pushf
sti
mov
inc
pop
fwait
iret
lcall
or
jp
cmp
enter
mov
xchg
xchg
jecxz
leave
pop
mov
sti
popa
sub
jp
out
add
mov
aas
mov
and
adc
inc
test
inc
push
dec
and
popf
pop
xchg
movsl
out
int3
pop
je
xchg
jge
arpl
xchg
sti
jno
imul
in
sti
inc
jne
repnz
pop
and
inc
ret
push
iret
loopne
insb
imul
movsl
pop
jecxz
mov
stc
cli
testb
out
fadd
icebp
mov
add
sub
push
nop
cmp
shrl
js
cmp
scas
roll
out
addl
jo,pn
std
push
pop
fadd
js
shl
lock
or
xchg
rolb
and
mov
xlat
pop
loope
jo
inc
stc
fstl
cmpsl
pop
out
rcl
push
cmpb
inc
push
jns
jbe
out
mov
push
sbb
sub
xor
cmpsb
shll
rorb
rcrb
fcmovu
sbb
push
jp
in
and
sbb
sbb
lret
mov
sti
push
jl
mov
inc
in
rcrb
pop
push
in
fsts
rcrb
cltd
jge
sub
or
call
sub
jecxz
cmp
add
pop
cmp
add
repz
std
mov
sub
scas
cmp
ja
push
sub
fldl2e
fldl
push
ret
loop
mov
fwait
pop
sbb
ds
mov
push
jb
mov
dec
xor
and
aaa
adc
fimuls
stos
movsl
insl
pop
jle
xchg
mov
xor
mov
mov
imul
mov
mov
mov
pop
pop
xchg
and
pushf
push
adc
xor
inc
popf
xchg
gs
lods
xor
testl
lcall
lock
push
sbb
das
push
aas
daa
stos
mov
loop
in
jbe
jge
pop
mov
xchg
mov
ss
movsl
loop
cmpsb
and
test
dec
mov
pop
adc
push
mov
push
aaa
js
sahf
pushf
add
lds
add
cltd
cmpsl
mov
inc
in
leave
inc
dec
test
adc
xchg
fsubrs
cli
adc
fwait
cli
mov
in
movsb
jle
repnz
jb
add
push
in
scas
or
adc
lea
pop
cmpsl
out
imul
inc
or
cmp
test
xchg
fisttps
mov
test
cmp
test
cmp
mov
adc
mov
pop
lcall
mov
pop
mov
add
testb
pop
xor
sbb
pop
inc
aam
fs
ljmp
fwait
cs
testb
ljmp
xor
jns
lret
or
roll
mov
int
mov
xchg
and
icebp
sub
in
mov
sbb
adc
adc
notb
dec
in
add
pop
pop
xchg
dec
xchg
xchg
push
scas
call
push
ret
mov
pusha
into
es
inc
bound
and
dec
push
pop
lods
adc
pusha
outsl
and
cmpps
sti
sub
mov
mov
push
faddl
dec
cmp
mov
int
jbe
cmc
rorb
cltd
mov
mov
mov
push
push
inc
inc
push
scas
mov
mov
and
call
and
xorb
cltd
fldt
cmpsb
mov
jecxz
mull
cmp
cmp
xor
sbb
faddl
or
icebp
jg
aam
push
add
mov
add
sbb
mov
lds
jmp
xchg
iret
subl
ret
je
insb
mov
xor
or
ja
inc
mov
mov
xchg
mov
mov
icebp
das
jnp
mov
int
imul
adc
pop
out
xlat
push
jns
popf
in
lock
and
pop
mov
pop
in
mov
sahf
ret
daa
sbb
add
nop
ret
dec
mov
pop
daa
ret
arpl
mov
xchg
shrl
rorl
sub
sub
les
xor
mov
rolw
mov
imul
jle
mov
inc
outsl
xor
push
dec
dec
inc
sti
fisubl
push
sbb
inc
arpl
push
push
xchg
dec
fistl
mov
cmp
xor
fwait
and
xor
push
mov
es
jg
hlt
and
sbb
pop
pop
pop
pop
inc
push
sahf
inc
push
mov
into
inc
adc
insl
sub
lret
lods
testl
movsl
pop
iret
cmp
scas
pop
nop
out
cwtl
lds
stos
aas
pop
hlt
repnz
mov
cmpsb
mov
repnz
movsl
inc
jmp
outsw
push
mov
lds
in
lock
jae
mov
cli
arpl
out
addb
xchg
movsb
sti
add
inc
and
mov
cmp
ds
xorb
out
jb
or
push
mov
sar
test
jno
pop
into
xor
pop
stos
xchg
adc
scas
sub
cli
or
xor
sbb
xor
sub
cmpsb
cmpsl
xchg
iret
adc
in
test
sti
jbe
or
test
insl
outsl
fisttpll
sub
push
dec
and
fdiv
push
sub
mov
push
add
insl
mov
mov
and
movsl
lods
mov
push
xchg
push
clc
repnz
mov
and
push
xor
idivl
mov
add
pop
ret
mov
shll
xor
outsb
sub
jnp
sbbb
mov
mov
aad
jo
into
cmpsb
lock
push
dec
pop
clc
inc
daa
lods
jnp
push
pop
lods
repz
repz
outsb
ret
push
mov
mov
lahf
mov
lcall
mov
pop
xchg
push
sbbl
subl
lret
aam
fwait
inc
push
shr
dec
inc
je
cmp
lods
enter
add
fsts
repz
sbb
in
lcall
pushf
rol
and
lcall
push
fimuls
dec
pop
orl
sbb
fsubl
mov
aaa
inc
xchg
cmp
mov
sbb
jl,pn
jae
das
and
adc
test
ficomps
jb
in
negl
test
mov
cmpsb
lret
jl
adc
cmp
es
enter
adc
pop
push
sub
scas
enter
inc
dec
cmpsl
adc
call
not
add
adc
cmp
addr16
ss
jg
and
mov
mov
out
lea
fwait
mov
lea
test
icebp
aaa
sub
aaa
mov
jnp
jmp
mov
jg
mov
cmp
dec
orl
cmp
into
and
orl
xchg
add
fbld
push
pop
jb
sti
mov
inc
lds
mov
sub
mov
jle
dec
lret
jno
and
xchg
jle
add
cmp
pusha
popf
test
in
arpl
test
daa
cld
xor
or
fs
jne
outsl
sbb
and
call
inc
lock
cltd
push
iret
mov
inc
xor
pushf
insb
ja
ds
inc
outsl
mov
or
fwait
cmp
or
jbe
roll
fimuls
imul
pop
push
lcall
insl
addb
adcl
mov
insb
inc
cmpsb
dec
loopne
lock
inc
imul
xchg
fdivrs
jl
loopne
jmp
iret
mov
add
ja
push
out
jnp
dec
in
cmpsl
pop
icebp
xor
cld
push
outsl
xchg
jno
aad
add
addr16
das
mov
call
xchg
pop
lods
inc
rolb
fwait
scas
jne
hlt
testb
insb
ficompl
fwait
js
cld
jne
push
shrl
jecxz
arpl
jecxz
add
es
add
and
andb
cmp
or
mov
mov
lds
repz
pop
adc
stc
sbb
ja
xchg
adc
adc
jg
ja
mov
outsb
loope
loopne
jno
push
fists
jecxz
xchg
fcomps
inc
jnp
pushf
dec
loopne
mov
leave
out
mov
jp
out
cmp
lret
fisttpl
mov
pop
or
pop
repnz
arpl
aad
add
test
xor
xor
jnp
adc
in
out
jae
je
pop
out
addr16
dec
mov
test
scas
lock
jle
fidivl
pop
pop
sub
int3
adc
inc
and
bnd
mov
jl
sub
mov
ror
or
cs
in
and
pop
sub
inc
mov
sbb
and
push
cltd
mov
sarb
lods
pop
aas
mov
add
pop
pop
lret
iret
int3
ja
push
aaa
lods
aam
rcrb
cmp
in
les
clc
sti
xor
mov
ret
xchg
pop
imul
fmuls
cmpsb
ret
pop
mov
cwtl
movsl
jg
adc
xor
cmp
and
jl
mov
adc
adc
test
sub
mov
mov
hlt
xchg
cmpsl
rcl
cld
and
mov
xchg
jecxz
fcomip
negl
jb
popf
xor
out
add
in
push
mov
xor
les
lods
and
iret
outsb
test
adc
jns
andb
ja
ds
insl
arpl
push
sub
test
shl
dec
test
jge
inc
dec
in
iret
mov
iret
out
mov
sub
out
adc
test
int3
stos
pushf
or
loop
mov
mov
cmp
jmp
cmp
mov
push
xchg
pop
fisubrs
enter
scas
ds
fdivrp
les
test
inc
loopne
frstor
sbb
test
inc
cmpsb
push
dec
int
bound
pavgb
mov
jl
js
loop
in
ret
sbb
lret
fwait
scas
movsl
push
subb
pop
jmp
in
popa
sub
out
or
or
movsb
mov
ja
dec
lods
mov
sahf
sbbb
cmp
and
sbb
add
push
fwait
decl
sbb
lods
or
adcb
jge
sti
movsb
or
fs
adc
mov
lret
mov
paddsb
jge
cmc
xchg
sbb
pop
adc
iret
cli
push
cmp
inc
pop
data16
call
push
jbe
sub
sahf
push
add
inc
cwtl
sbb
in
idivb
dec
adc
mov
lock
outsb
mov
cwtl
mulb
addb
std
push
mov
mov
rcll
or
sbb
push
inc
enter
fistl
sbb
loop
mov
mov
sbb
or
inc
or
pop
add
inc
out
pop
mov
shll
addl
mov
cmpsb
pop
in
inc
or
sti
sbb
aas
jg
repnz
pusha
mov
xor
sbb
and
iret
or
jmp
push
hlt
test
add
std
cmp
push
nop
xchg
inc
pop
jecxz
cs
lahf
fadd
inc
movsl
fbld
icebp
roll
mov
add
dec
ss
cli
fsubl
and
sbb
gs
xlat
arpl
xchg
mov
daa
dec
mov
xor
xchg
jecxz
out
pop
scas
push
xlat
jbe
je
add
jns
jmp
jmp
push
push
jae
test
jle
mov
push
icebp
into
or
clc
lcall
mov
add
or
enter
sbb
insb
xchg
test
mov
add
xor
push
xor
ds
rorl
addr16
cs
mov
movsl
stos
adc
push
xchg
mov
add
aad
dec
orb
xchg
mov
mov
cmp
test
dec
fwait
dec
lret
rol
cmpb
mov
push
scas
add
loop
adc
sub
jne
sbb
sbb
jle
enter
or
nop
loope
mov
icebp
sbb
lea
sbb
andb
scas
enter
adc
lds
push
jecxz
push
push
inc
dec
mov
orl
hlt
cmp
mov
aaa
jle
cmpsl
stc
icebp
aad
shrl
cld
xorl
xchg
push
sti
popf
sarb
mov
in
xchg
test
ljmp
or
popa
cmp
nop
fildl
or
push
adc
lock
xchg
cltd
seto
adc
pop
sub
mov
dec
mov
pop
shrl
hlt
pop
cmp
inc
mov
insl
daa
stc
fnstcw
cmp
ljmp
test
mov
ja
in
ret
cltd
aad
jmp
adc
add
dec
sub
jne
jne
jns
cmpsb
fldcw
imul
fistpll
fidivs
xchg
dec
xchg
pop
jae
insb
stc
insb
movsb
sbb
cmpl
test
enter
out
push
scas
lds
mov
xchg
jle
movsb
dec
lret
jle
repz
jbe
testl
dec
aam
cmpsl
scas
lret
out
adc
idivb
lock
subl
aas
and
dec
es
enter
xor
shll
adc
cmpsb
popa
ja
xor
cld
addr16
std
sub
popa
iret
mov
sbb
mov
ds
xchg
mov
fwait
jbe
movsl
sbb
int3
and
dec
ficoms
adc
cmp
es
test
xlat
and
pusha
mov
or
inc
pop
mov
mul
xchg
lods
inc
xchg
sub
cmp
mov
jnp
shrb
das
or
popa
jecxz
cmp
fwait
push
or
sub
pop
pop
sub
fwait
push
push
fs
repz
stos
pop
popa
rorb
mov
stc
mov
or
bound
xchg
adc
addr16
mov
push
stos
fs
mov
call
push
inc
inc
dec
into
imul
pop
mov
mov
sbb
out
frstor
xchg
mov
xor
fcompl
ds
arpl
lret
jno
std
dec
lods
push
nop
adc
cmc
jns
jne
out
bound
cmp
fwait
adc
jge
int
repnz
mov
dec
fdivr
cli
sub
ljmp
aas
imul
sub
mov
pop
pop
or
movsl
pop
ret
xlat
stos
pop
xchg
jecxz
mov
into
ljmp
pop
and
repz
dec
or
test
jecxz
out
iret
sub
jecxz
aad
nop
jns
mov
shll
dec
cmp
mov
imul
xchg
jo
mov
mov
ljmp
adc
in
lret
xor
in
mov
xor
mov
int
push
cmp
mov
sub
clc
mov
adc
xor
ror
mov
and
mov
shlb
and
mov
add
jb
fldl
pop
cmp
sub
enter
ljmp
mov
sub
add
cmp
xchg
popf
lods
inc
and
inc
adc
les
mov
add
fisttpl
aas
shlb
push
pop
data16
mov
in
aaa
gs
pop
xor
cmp
stos
fiaddl
pop
arpl
pop
or
mov
push
adc
cmp
jmp
xchg
lock
sbb
lds
repz
pop
pop
push
fisubrs
scas
and
stc
fidivrs
sub
or
repnz
xor
stos
dec
std
imul
repnz
mov
clc
call
sbb
lock
inc
bound
and
xchg
iret
jmp
pop
out
js
adc
pop
mov
pop
jno
sbb
test
dec
scas
adc
and
in
push
jl
jecxz
add
mov
lock
inc
pop
xor
xchg
dec
ret
and
push
push
stos
scas
push
rclb
subl
jp
add
pop
dec
repnz
leave
sub
clc
jns
add
mov
adc
loopne
movsl
cltd
fstps
aaa
sahf
aam
in
aas
dec
clc
test
pop
mov
or
out
popf
or
shr
inc
inc
and
outsl
fwait
pop
sti
inc
in
sub
std
sub
mov
in
lret
jmp
out
sub
add
decl
xor
mov
add
xchg
inc
inc
and
decb
sub
mov
jno
sub
aaa
cmpsl
out
pushf
mov
lahf
dec
mov
sbb
jg
out
jb
xor
and
fnstenv
out
aas
pop
mov
pop
arpl
mov
jae
xchg
mov
and
dec
jbe
pop
mov
xor
pop
shlb
jns
sbb
push
in
test
aas
es
add
xor
sub
add
jb
lret
xchg
adc
stos
pusha
push
sub
mov
adc
add
sub
xor
pop
pusha
xchg
dec
ljmp
outsb
sarb
xchg
int
into
mov
mov
es
fs
ljmp
sub
sub
test
inc
mov
and
sbb
xchg
mov
dec
pop
rorb
mov
sub
les
fwait
incb
xchg
mov
ja
jecxz
in
cmpsl
pop
inc
iret
xor
rcrl
push
aad
std
fwait
dec
and
loope
jb
mov
adcl
shlb
stos
push
cld
mov
sbb
adc
push
push
lret
xchg
adc
xlat
aas
daa
mov
mov
adc
sbb
jnp
mov
add
mov
mov
mov
outsb
sbb
les
cmp
sahf
repnz
push
enter
xchg
sub
lea
mov
xchg
dec
addl
inc
scas
daa
adc
push
fs
jbe
test
adc
mov
jmp
test
stos
xor
add
cmp
gs
xchg
adc
push
ja
lcall
sbb
daa
and
and
fadd
mov
sbb
out
or
cltd
or
or
cltd
pop
pop
pop
sbb
cmpsl
jns
enter
movsl
push
out
stos
cs
sub
mov
sahf
lds
aaa
in
testl
andb
jnp
sti
in
jge
jle
js
sbb
adc
mov
mov
or
pop
hlt
dec
call
jp
je
ret
pop
push
jno
xor
lods
push
mov
ss
xor
icebp
lahf
jno
hlt
sub
pop
or
clts
aam
mov
jmp
insl
in
adc
and
adc
popa
xor
cmc
shlb
cli
adc
jae
scas
ds
scas
mov
fists
mov
ljmp
cli
mov
cmpsl
dec
std
test
push
xor
jp
push
xchg
push
cmpsb
cmp
mov
push
jb
mov
and
ficoml
xor
pop
scas
test
insb
inc
in
enter
in
jecxz
mov
xchg
insl
rolb
jnp
jne
outsb
jge
pushf
cmp
jo
sub
mov
xchg
ss
and
imul
mov
mov
out
fwait
lahf
cmpsl
inc
mov
dec
jecxz
cltd
pop
lcall
and
pop
push
cmp
and
inc
in
sti
notb
cs
cltd
cmp
pop
mov
pushf
sti
sub
xchg
lret
pop
out
adc
hlt
jmp
add
fcmovbe
sbb
fcmovnbe
sahf
dec
xor
mov
fbld
pop
dec
xchg
xor
out
aas
popa
inc
mov
bnd
inc
cmpl
loop
mov
and
insb
lods
pop
pop
cwtl
.byte
popf
cld
add
add
add
add
and
add
pusha
add
addb
add
add
add
cmp
add
add
add
or
add
add
add
add
add
add
add
add
add
addb
add
or
add
pop
push
add
add
push
add
jns
imul
outsb
add
nop
add
add
add
aam
stc
in
sbb
in
xor
leave
or
pop
test
adc
test
into
movsb
add
or
iret
pop
popa
rol
test
pop
addr16
pop
adc
mov
enter
call
das
jecxz
mov
mov
xlat
xchg
mov
xor
add
popa
pop
xchg
sbb
aas
mov
cltd
xchg
push
add
xor
sbb
xchg
and
add
jge
add
sub
fs
push
lea
mov
repz
daa
into
je
cmc
or
xchg
loopne
xchg
jl
loop
mov
jbe
cwtl
adc
xchg
add
inc
mov
js
pop
and
out
pop
jns
outsb
imul
ds
rcrl
mov
push
out
repz
cmpsl
mov
addr16
sub
mov
pop
cmc
cmovbe
fwait
xchg
mov
and
mov
mov
aaa
lahf
fiaddl
cld
aas
xor
push
dec
sbb
lret
loopne
rorl
or
mov
inc
xchg
mov
adc
test
mov
sub
xchg
cwtl
xor
fdivs
push
mov
pop
.byte
ja
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
call
fstpt
mov
and
inc
push
nop
mov
jmp
pop
call
repnz
sar
lahf
in
mov
mov
test
xor
adc
add
sbb
cli
stos
or
push
and
fstps
pop
pop
pop
add
push
or
pop
push
sub
pop
mov
mov
mov
xor
add
sub
xor
jmp
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
cmp
adc
xchg
or
ret
jmp
insb
and
insb
xor
cmp
jne
or
outsl
sub
or
cmp
mov
mov
inc
and
sub
or
inc
mov
xchg
mov
cmp
sbb
mov
shl
lea
loopne
jmp
inc
jmp
sub
dec
inc
pop
imul
jae
jge
fidivs
ljmp
sub
fiaddl
adc
int
jae
fstl
loope
mov
pop
pop
cli
cmp
sti
ds
in
ret
xchg
cmp
inc
les
xlat
mov
cmp
test
xchg
daa
iret
lods
mov
test
adc
inc
jno
insl
cmp
sbb
mov
pop
stos
mov
jb
jmp
imul
push
cmp
ljmp
dec
mov
cmp
pop
adc
dec
out
scas
roll
int
mov
cmp
iret
lods
push
int3
sub
mov
pop
aam
push
jae
inc
loop
sbb
gs
lods
mov
aas
sbb
hlt
adc
mov
jne
lods
cmp
pop
mov
lret
dec
xchg
inc
pop
push
push
sub
jns
pop
fidivl
add
fldcw
and
xchg
fcoml
enter
call
jecxz
int3
jmp
sbb
sub
hlt
pop
adc
cmc
and
pusha
pop
jl
jb
in
push
jbe
mov
sub
movsb
mov
dec
push
insl
dec
stc
jne
loopne
jle
leave
call
cli
lea
fistps
sbb
lahf
fbstp
push
mov
jno
and
cltd
hlt
adc
pop
icebp
push
adc
jl
das
rorb
xor
sbb
adc
es
sahf
pop
pop
push
sbb
xor
adc
mov
pop
iret
enter
push
insb
les
mov
dec
ss
stos
jb
push
adc
jbe
jl
sbb
adc
ljmp
mov
aam
adc
jl
int3
push
mov
pop
cmpsl
and
cli
mov
jg
int3
sbb
inc
test
mov
int3
sbb
sbb
sarl
icebp
bound
outsb
pushf
test
imul
cs
rcl
imul
dec
or
mov
dec
cmpb
lods
jb
popa
shr
jo
out
bound
jp
shlb
lahf
cmc
add
bound
popf
jo
out
bound
div
bound
bound
repz
cmpsl
mov
jo
frstor
jns
bound
in
lods
icebp
bound
inc
xor
dec
stos
icebp
bound
pop
outsb
dec
imul
lods
inc
cwtl
enter
jle
dec
lds
dec
stos
mov
popa
dec
mov
icebp
mov
mov
rcl
mov
bound
bound
icebp
jnp
push
in
dec
pop
clc
cmp
icebp
bound
or
stos
icebp
jg
jb
bound
jg
jge
bound
enter
rcl
fsubr
bound
pop
dec
stos
outsb
xchg
pop
fcomip
mov
jmp
dec
repnz
repnz
jle
lret
xlat
jnp
stos
andb
int3
stos
sbb
lret
pop
sbb
fstpt
stos
icebp
rorl
dec
addb
jmp
dec
int3
insb
ret
dec
dec
hlt
mov
int3
cld
fdivrl
test
scas
dec
stos
icebp
rcl
xor
pop
vunpcklpd
imul
mov
bound
test
test
bound
cmp
gs
dec
int3
cmp
icebp
rorl
adcb
jmp
jle
mov
mov
jmp
dec
repnz
push
leave
inc
pop
jge
stos
clc
mov
icebp
mov
sbbb
lods
jno
dec
sub
pop
sbb
popa
dec
stos
icebp
mov
dec
stos
icebp
bound
pop
sahf
add
sbb
and
push
push
repnz
pop
dec
mov
adc
cli
xor
cli
pop
ljmp
push
sbb
sar
scas
add
popf
push
adc
pop
ljmp
jmp
inc
fimuls
pop
push
je
or
ds
mov
mov
adc
cli
push
xor
shlb
cltd
push
or
pop
movsl
test
bound
lea
ds
mov
mov
adc
cli
push
and
cmpsb
test
bound
lea
ds
mov
mov
adc
cli
push
and
aam
sbb
jo
stos
icebp
jg
in
nop
push
rorb
xlat
cmc
sbb
bound
inc
fimuls
pop
push
je
or
int
pop
mov
stos
adc
push
push
and
icebp
ficoml
rcl
sbb
jo
mov
jno
dec
add
js
pop
xor
cwtl
neg
hlt
jg
int3
out
adc
ss
das
cmp
incb
pop
xor
cwtl
divb
loopne
dec
repnz
gs
sub
stos
icebp
bound
fisubs
stos
out
bound
int
stos
mulb
add
sub
pop
push
sahf
lret
pop
sbb
xchg
sti
fs
sbb
pop
jp
stos
mov
leave
jecxz
sbb
lret
insl
jp
stos
mov
stos
icebp
mov
loope
sti
and
fimull
push
adc
sub
bound
ret
mov
iret
dec
stos
icebp
mov
and
in
repnz
lea
push
or
jg
fwait
pushf
sbb
imul
lods
sti
dec
call
ret
sti
mov
sub
mov
fisubl
sub
pop
inc
pusha
repz
pop
jae
notl
mov
pop
xchg
scas
jnp
fistpll
sarl
icebp
bound
bound
bound
bound
bound
bound
bound
hlt
or
bound
imul
dec
stos
icebp
bound
bound
int
loopne
sarl
jnp
stos
icebp
bound
bound
bound
bound
xchg
shl
rcrl
jle
test
jnp
push
mov
lock
lock
call
add
imul
rol
dec
and
sub
dec
sub
fstpt
jg,pn
mov
dec
ret
pop
loope
pop
push
xor
pop
sbb
inc
fistl
push
fistpll
pushf
out
and
mov
add
jae
leave
and
inc
popf
add
sbbb
sbb
mov
fstl
xor
mov
hlt
daa
scas
xor
cmp
sub
xchg
inc
push
or
mov
inc
stos
lea
sub
mov
inc
cmp
xor
mov
sbb
push
stc
mov
and
es
or
sbb
cmp
mov
pop
inc
call
lret
mov
sub
mov
pop
mov
fidivl
test
movsb
test
adc
in
mov
adc
cmp
cwtl
or
shll
dec
fisubrl
inc
test
push
cmp
and
xchg
lret
dec
test
push
mov
dec
and
xchg
stos
test
sub
xlat
or
ds
orl
inc
movb
pop
aam
adc
sahf
les
mov
movsl
test
xchg
jg
sub
mov
movsl
icebp
lcall
mov
cmpsb
loope
pop
into
push
xor
pop
and
cmp
dec
bound
lcall
out
aam
lods
push
mov
or
cltd
addr16
aas
or
add
enter
adc
cmc
loopne
nop
xchg
sbb
aad
sub
push
fisttpll
mov
inc
adc
sub
push
mov
add
stos
mov
dec
stos
notl
xorl
fisubrs
push
sbb
sbb
out
fnstcw
loop
add
push
dec
inc
add
sub
push
push
cmpsl
or
cmp
pop
jle
push
xchg
push
ljmp
push
fld
or
sahf
xor
nop
and
daa
rolb
sub
mov
jmp
hlt
pop
cmp
push
sbb
shlb
cmpsb
in
mov
jmp
and
mov
adcb
negl
xchg
mov
lods
jmp
lret
pop
test
leave
inc
dec
push
and
sub
loopne
hlt
mov
jg
and
call
test
dec
clc
out
decb
shrb
mov
aas
mov
add
clc
icebp
or
dec
mov
or
mov
test
xor
and
add
add
add
push
add
add
add
sub
add
push
dec
add
adc
pop
push
add
pop
push
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
pop
push
add
add
add
pop
push
add
add
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
add
add
and
add
add
add
call
add
add
add
add
add
add
add
add
add
add
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
ja
ja
ja
ja
ja
ja
ja
ja
js
mov
mov
mov
jg
clc
jo
jg
clc
jo
jg
clc
jo
jg
clc
jo
jg
clc
jo
jg
clc
jo
jg
clc
jo
jg
clc
jo
jg
clc
jo
jg
clc
jo
jg
clc
jo
jg
clc
jo
jg
clc
jo
jg
clc
jo
jg
clc
jo
jg
clc
jo
jg
clc
jo
jg
clc
jo
ja
ja
ja
ja
ja
ja
ja
jo
mov
mov
mov
inc
inc
inc
inc
inc
inc
inc
inc
add
add
jo
inc
inc
inc
inc
inc
inc
inc
inc
inc
dec
orb
inc
inc
inc
inc
inc
inc
inc
inc
dec
orb
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
jo
mov
mov
mov
ja
ja
ja
ja
ja
ja
jo
add
add
incl
add
add
jmp
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
lea
add
fsubrl
add
cmp
add
pop
dec
mov
je
xor
movsb
xchg
push
sahf
jae
movb
xchg
and
inc
ret
in
shll
jl
in
xchg
mov
fmul
push
or
jb
pusha
std
mov
mov
mov
fwait
jo
push
jge
pop
cmp
pushf
sbb
dec
pusha
mov
stc
lds
fs
adc
jns
repz
int
dec
jae
mulb
aaa
mov
outsl
jno
sub
push
sub
outsb
js
or
icebp
jp
stos
add
aas
xor
jmp
dec
das
cmp
filds
inc
jo
sbb
sub
sbb
mov
popa
push
xchg
insl
inc
push
push
lea
data16
jp
fisubs
push
jle
lock
cmp
mov
and
push
mov
cltd
sub
xor
popf
lea
pop
xchg
xchg
stc
pop
xchg
sti
mov
mov
out
pop
cld
push
xor
sti
jo
sbb
call
pop
popf
nop
adcb
iret
mov
mov
pop
inc
xchg
shr
js
dec
xchg
mov
push
repz
sub
or
push
scas
test
cmpsl
lods
cwtl
inc
imull
jmp
outsl
fmuls
push
lret
bound
sbb
sbb
xlat
dec
popf
mov
or
inc
out
dec
ljmp
imul
sub
inc
lds
mov
mov
xor
jmp
shlb
mov
ds
and
pop
and
test
and
xor
icebp
out
sub
dec
lcall
in
and
inc
and
dec
add
repnz
jg
test
sbb
adc
push
lahf
addr16
push
xchg
mov
dec
cmc
das
adc
pop
pop
pop
add
imul
sub
cs
jo
aaa
dec
or
pop
xor
pop
sub
popf
stos
mov
cmc
jge
cld
cmpsb
mov
jo
sub
js
or
call
insl
jecxz
ja
cmp
mov
mov
mov
in
fxtract
or
xchg
or
mov
inc
out
jb
sbb
cmp
mov
out
sub
or
inc
movsl
mov
push
sbb
bnd
mov
int3
mov
mov
test
scas
cmp
fisubrs
jnp
inc
ret
jge
leave
sub
push
mov
flds
mov
out
aas
mov
and
cmp
jbe
test
test
mov
or
aas
or
adc
add
test
js
pop
sbb
fldcw
repz
xor
inc
pop
in
icebp
xchg
out
pop
and
xor
test
inc
sti
push
push
cmp
jge
or
fsubrl
fidivrs
add
out
out
inc
xor
xchg
add
mov
movsb
icebp
inc
data16
sub
xlat
loopne
inc
stos
jg
js
fsub
int3
jp
stc
loope
push
daa
mov
dec
adc
mov
mov
mov
jae
adc
mov
rcr
mov
int3
push
add
cmpsl
cmpsb
cmp
or
inc
pushf
test
lea
movsl
ss
or
in
xor
jb
jne
out
aad
adc
pop
or
fdivp
sub
shll
popf
lret
jo
sbb
dec
mov
imul
test
cmp
xchg
cmp
pushf
out
cwtl
out
and
cmp
insl
xchg
leave
jl
push
in
add
adc
add
sbb
xor
imul
xchg
add
nop
ret
xor
adc
mov
inc
test
inc
mov
sbb
jge
push
or
xchg
dec
mov
push
push
test
mov
fnstsw
jg
idivb
pop
movsb
add
and
insl
test
sbbb
aad
adc
push
test
and
push
push
clc
push
push
lret
xchg
sub
cmp
xchg
mov
jge
jecxz
mov
push
and
lret
in
jns
and
imulb
neg
fs
scas
rol
lea
xchg
das
inc
lcall
push
add
ret
mov
jb
test
mov
in
fwait
in
inc
jae
insb
xor
dec
or
xlat
sub
dec
jb
in
lret
xchg
and
scas
nop
pop
or
sarl
ficomps
mov
fucomip
add
in
ss
push
cwtl
pop
sub
ss
ret
add
js
mov
and
roll
stos
push
rorb
sub
xor
mov
imul
movsl
loopne
out
ja
in
mov
jecxz
test
and
pop
dec
ja
dec
dec
jl
lret
jecxz
dec
and
push
cmp
cmc
int3
lret
sar
ljmp
fidivrs
or
xchg
push
icebp
nop
lods
lock
imul
sub
lret
or
and
mov
lret
sub
add
gs
xor
loopne
stos
adc
dec
add
jno
mov
call
inc
pop
push
mov
xor
push
add
jbe
xor
sub
adc
push
xchg
bound
push
loop
pop
pop
mov
shlb
imul
dec
lret
lods
out
es
xor
lods
fidivrs
cmp
fldenv
or
add
lcall
add
sub
and
xor
mov
stos
jns
dec
mov
mov
repz
nop
out
mov
push
cmpsb
ja
xchg
addr16
icebp
pop
xchg
popa
test
mov
call
mov
loope
sub
and
leave
sub
je
lods
outsb
push
leave
stc
hlt
rcl
mov
out
cmp
inc
daa
mov
out
mov
ja
stc
cmp
adc
sbb
pop
je
lods
iret
dec
scas
adcb
nop
jb
shlb
leave
sbb
mov
inc
and
insl
in
in
sbbl
nop
subb
es
pop
jecxz
or
mov
inc
das
test
jb
xchg
lods
test
xchg
add
xor
fs
enter
mov
ss
fdivs
fnstenv
in
push
imul
out
stc
mov
pop
sub
adc
xor
ss
fs
inc
sbb
mov
mov
jne
je
inc
xchg
mov
pop
xorl
leave
add
dec
mov
jg
inc
xor
jne
hlt
scas
or
and
aam
out
roll
dec
dec
popa
stos
inc
add
dec
shrl
mov
ret
fimuls
ss
jl
stc
loopne
jns
cmp
cmp
mov
hlt
cmc
ret
mov
inc
repz
pop
lods
cmp
ds
cwtl
lahf
jb
mov
or
mov
cs
pushf
pop
sbb
out
xor
add
jmp
add
and
push
pushf
dec
movsb
in
lods
inc
sub
push
loope
push
mov
fdivrl
xor
dec
xchg
test
lret
movsl
push
rcrl
or
mov
sub
xor
jle
mov
stos
popf
add
movsl
lcall
add
jbe
pop
push
js
lret
pop
push
ss
pop
addr16
sti
pop
clc
lahf
mov
xchg
xor
adc
pop
cmp
scas
pop
pop
pushf
sub
ja
cmc
test
inc
adc
rcrb
fisubs
jg
test
filds
fs
lea
call
adc
adc
mov
in
add
adc
jns
test
push
inc
movsb
cmp
test
int3
cld
or
leave
int
cmc
sbbl
inc
cmp
and
dec
push
push
jns
xchg
lahf
cltd
xor
lret
ficompl
mov
ja
insl
daa
out
mov
fisubl
xor
jp
mov
add
sbb
and
pshufw
mov
mov
inc
hlt
call
sub
mov
sti
xor
leave
jle
loop
shl
in
and
cmp
lock
fisubrs
cli
icebp
ja
inc
cmp
aad
iret
pop
push
and
fwait
sbb
and
mov
ret
xchg
adc
mov
jne
fdivl
jg
in
pop
pop
loop
repnz
stc
je
gs
push
xor
arpl
pusha
inc
dec
iret
data16
lods
mov
cwtl
sar
ljmp
sti
jg
pop
ret
sbb
popa
add
jge
das
popf
push
shlb
inc
negl
or
add
ret
aam
sbb
sub
sahf
stos
test
xor
and
mov
pusha
sub
pop
sarl
bound
cmpsl
leave
dec
loopne
cmc
lods
stc
aaa
cli
or
pop
test
pop
push
dec
add
js
in
out
inc
mov
cltd
sub
sub
insb
mov
cmp
sbb
aas
push
sarl
popa
insb
mov
enter
in
icebp
scas
mov
insl
rolb
shrl
notb
xor
pop
movsb
jbe
xchg
leave
pop
mov
fmuls
icebp
or
push
in
adc
cmc
xchg
scas
fidivl
lea
movsb
add
inc
sahf
sub
jno
jg
xor
mov
sub
adc
sub
daa
pop
and
xor
sbb
jecxz
ljmp
cmp
push
jnp
sub
cs
lahf
and
into
lret
or
fucomp
cltd
mov
cmp
cmp
cld
out
repz
std
mov
ja
cmpsb
sti
mov
das
cwtl
lret
call
adc
decb
dec
xor
pop
jg
enter
in
sarb
gs
add
add
test
jae
xor
adc
sarb
dec
push
jp
cld
imul
cmpsl
icebp
repnz
test
ljmp
jg
mov
mov
cmpsb
lcall
rcrb
jne
add
shrb
insb
mov
adc
inc
lods
jmp
add
push
dec
xor
mov
pop
and
push
out
imul
push
aad
pop
fimuls
int
xchg
fisttpll
cwtl
pop
int3
lock
jo
xchg
and
or
mov
stos
xor
mov
lea
mov
push
test
jmp
pop
mov
sub
std
jge
xor
push
or
jmp
inc
imul
scas
push
mov
push
sub
in
mov
mov
test
adc
lds
std
mov
mov
call
mov
das
pushl
sahf
popf
das
xchg
pop
das
into
mov
stos
jns
imul
mov
adc
stos
push
aad
bound
or
push
test
mov
add
fisttpl
jb
outsl
imull
and
fnstcw
dec
xor
mov
sbb
test
and
or
xor
fsubl
adc
iret
shll
ja
push
push
cmp
data16
test
xor
dec
push
jbe
fsubp
sbb
mov
xchg
data16
sahf
fisubrl
or
inc
mov
stos
ret
lds
mov
data16
stos
iret
jns
xor
xchg
cmp
mov
stos
ror
inc
inc
push
mov
push
cli
sbb
lea
shll
outsb
sub
mov
push
icebp
pop
popa
xchg
xor
fwait
outsl
sbb
xor
stc
adc
push
push
popa
cwtl
test
addl
mov
jno
test
inc
sub
mov
add
std
lahf
cmpsl
xor
add
bndstx
std
call
sub
gs
cltd
addr16
test
data16
fimull
addr16
adc
xchg
aam
ss
pop
mov
xchg
mov
xor
jle
mov
int3
mov
movsb
jae
inc
mov
push
mov
cwtl
je
mov
sub
fcom
arpl
std
movsl
xor
js
scas
mov
cmp
in
rorl
push
and
add
mov
mov
pop
lret
jnp
mov
cmp
add
lods
sbb
jo
sub
and
jl
mov
cli
lcall
push
mov
ret
pop
sub
test
jmp
jmp
insb
mov
insb
jmp
push
lock
inc
cmp
push
push
jg
dec
sbb
mov
sbb
push
hlt
mov
fstp
adc
test
iret
pusha
inc
js
nop
lret
lds
jae
punpckhdq
fcomp
test
push
adc
lcall
add
das
std
addr16
lret
call
inc
insl
adc
jmp
ljmp
lcall
jae
pop
sbb
push
stos
cmc
fildl
test
dec
adc
sar
mov
in
scas
jp
loope
pop
cmp
jl
jl
aad
out
adc
js
cmpsl
scas
lret
jnp
jle
ret
xchg
push
or
sbb
mov
mov
sbb
mov
push
and
xchg
roll
ficompl
or
in
decb
andb
dec
pop
out
roll
int
out
cmp
cmpsl
xchg
push
int3
mov
mov
pop
jns
lar
dec
icebp
inc
sub
mov
iret
insb
lret
mov
out
add
movsb
jns
insb
mov
push
jnp
adc
outsw
pusha
mov
jg,pn
pop
mov
cmp
pusha
add
testb
add
xchg
js
shlb
jge
lods
imul
leave
mov
xor
rol
popf
std
in
cmp
push
pushf
inc
jo
sbb
inc
mov
call
scas
adc
and
inc
cs
lret
sub
mov
or
cmc
pop
push
fisttpll
fwait
insb
outsl
sub
ja
sbb
outsl
imul
shll
scas
xor
adc
or
dec
rorb
xchg
scas
fdivrl
hlt
cld
ret
cmpsb
adc
push
inc
add
and
xor
mov
pop
cmc
cmp
and
jns
xchg
jb
push
notb
insl
movsl
mov
stc
xor
or
mov
pop
aas
ficoms
jnp
sub
popf
pop
mov
lea
out
xchg
push
xchg
lods
mov
jb
imul
les
mov
lahf
cmp
aad
pop
outsl
pop
mov
adc
sarl
std
popf
pop
lds
add
dec
icebp
sbb
mov
and
xor
ljmp
dec
dec
adc
adc
xor
sahf
and
sbb
push
sbb
fucompp
xor
adc
cmp
hlt
dec
dec
leave
loope
jp
jp
cmp
xchg
dec
mov
aas
outsb
dec
inc
cmp
in
arpl
lret
jns
adc
cmp
sub
or
sub
push
dec
add
push
lock
jg
jnp
and
std
or
imul
pushl
mov
xchg
push
ja
add
and
ja
test
push
cltd
sbb
fnstcw
shlb
cmp
mov
mov
cmp
pop
inc
fists
out
pop
xor
push
out
out
inc
gs
inc
loop
out
adc
stos
or
sbbb
repz
ret
fstpt
in
addr16
lea
push
aas
or
add
push
daa
and
jb
adc
iret
loop
hlt
or
scas
push
ja
jmp
and
ficomps
push
mov
or
dec
xchg
inc
jmp
cmp
loop
sahf
mov
push
setnp
sahf
adcl
jmp
xlat
cs
lcall
in
pslld
lret
mov
mov
and
cmp
cmp
cli
mov
cmc
sar
pop
out
add
push
imulb
or
fimuls
add
addb
mov
sub
adc
adc
arpl
popa
adc
mov
mov
in
push
lods
adc
aaa
pop
pusha
or
sbbb
mov
xchg
lea
add
sbb
arpl
mov
xor
rolb
repnz
pushf
xchg
sub
push
dec
in
mov
dec
mov
sbb
les
icebp
mov
jb
je
popw
in
out
mov
stos
fs
leave
cmp
fidivs
mov
sbb
sub
add
mov
mov
lds
pop
push
jns
mov
insb
xchg
frstor
sar
neg
js
test
or
roll
fisubs
jae
mov
negb
cmpb
cmpb
scas
rorl
out
pop
mov
in
xlat
outsb
retw
adc
mov
push
push
cmp
pop
pop
fs
xlat
mov
aaa
inc
int3
imul
repnz
push
data16
pop
neg
lahf
mov
lret
lahf
push
dec
cwtl
push
inc
inc
imul
add
into
mov
mov
push
popa
push
gs
int
test
ficoml
and
dec
mov
push
xor
lea
cmp
pusha
mov
push
add
mov
enter
sbb
or
cmpsb
scas
push
fisubrs
push
push
xchg
pop
xchg
cs
dec
lcall
dec
out
addr16
or
pop
test
or
shlb
add
je
and
sbb
pop
iret
mov
mov
xchg
inc
mov
push
fmuls
xchg
leave
ja
cmc
xchg
lahf
sub
sub
sbb
cmp
fcoml
lds
cmp
inc
popa
mov
cmovl
mov
lods
gs
sbb
dec
push
sbb
sbb
mov
xor
jmp
pop
dec
test
fsubr
fldt
aaa
pop
sahf
lret
js
leave
adc
xchg
dec
imul
mov
mov
or
les
cmpsl
or
pop
xorb
xchg
xchg
inc
lds
and
jecxz
push
in
adc
add
loope
mov
sbb
jl
shrl
mov
mov
or
pop
sub
dec
lret
mov
aad
ds
sub
repz
push
into
scas
push
adc
imul
mov
shrb
aam
fcompl
adcl
jns
mov
sbb
push
mov
pop
add
pop
or
movsb
fistpll
imul
cmpb
insb
mov
jg
dec
movsb
iret
in
pop
pop
xor
jbe
outsl
mov
jae
mov
out
or
fwait
rorl
add
and
cld
pop
pushf
enter
add
dec
mov
or
inc
aaa
fiadds
xchg
cltd
nop
cmc
out
push
incl
arpl
pop
adc
cli
div
jge
or
lret
rolb
shll
and
movsb
mov
lds
lds
std
test
inc
and
scas
sub
movsl
sbb
sbb
arpl
loope
out
das
pop
test
or
pop
test
push
ljmp
repz
pop
stos
xchg
or
test
dec
xor
inc
mov
popf
push
aam
dec
gs
mov
out
call
int
repnz
es
sti
ret
sub
dec
mov
cmp
and
and
std
jbe
cs
insb
jge
sub
sub
xchg
push
shll
cmp
lcall
aam
inc
sbb
in
adc
lock
add
jge
push
int3
adc
incl
lods
repz
mov
mov
iret
xchg
pop
pusha
inc
inc
ja
in
outsl
jo
push
pop
iret
movsb
shll
mov
mov
les
or
lahf
xor
imul
xor
inc
and
cmpsl
sbb
cmp
push
cli
xlat
ret
mov
stos
das
mov
sahf
mov
movsb
sbb
sub
push
cs
mov
cs
add
jno
pop
mov
loop
dec
mov
hlt
sbb
shl
dec
or
pop
faddp
push
mov
dec
adc
sti
cmp
into
xor
inc
pusha
cmp
sbb
enter
xor
jle
sbb
mov
decl
je
sbb
jge
lea
cmp
movl
lds
dec
out
pop
sub
push
and
outsb
mov
pop
aad
pop
fildl
lret
pop
ljmp
xchg
aaa
fbstp
aad
xor
fwait
cli
jns
inc
adc
push
xlat
cwtl
popl
lcall
shl
insb
mov
mov
cmpsl
and
push
rclb
push
das
enter
mov
insl
lock
jle
outsb
sbb
out
gs
outsl
pop
xchg
icebp
cmpsb
pop
mov
es
leave
push
push
xbegin
dec
push
add
xchg
cmpsb
popf
mov
dec
or
jno
loopne
movsl
test
xlat
cmp
and
cmp
test
shlb
cmpsl
rclb
sub
ljmp
pop
cmp
dec
pop
jne
mov
imul
pop
push
xchg
mov
imul
and
insl
mov
xor
fwait
or
and
cwtl
lock
add
cwtl
dec
enter
mov
nop
leave
adc
lahf
aam
mov
rclb
cmp
mov
add
mov
test
enter
ror
sub
fwait
movsl
popa
sbb
stos
lods
pop
xchg
mov
mov
pushf
movsl
fimuls
push
popf
daa
ds
lret
shll
fwait
popf
psubw
popf
or
ja
negl
mov
cmc
ret
neg
dec
ffree
inc
repz
push
cld
test
xchg
stos
js
and
sahf
and
push
fs
pop
fcom
inc
inc
popf
push
shlb
dec
push
xlat
cmp
loope
ljmp
add
ret
in
sti
loop
aad
das
bound
dec
test
fwait
dec
cmpsl
xlat
out
lods
mov
adc
clc
and
ljmp
je
cmp
mov
push
mov
loop
jp
mov
or
jno
ret
mov
add
sbb
mov
fildl
fildll
dec
xchg
int3
mov
arpl
push
mov
out
pop
cld
divl
sbb
int3
testl
aas
sub
inc
push
jecxz
pop
push
sbb
dec
sub
popa
adc
adc
mov
aad
inc
aas
adc
movsb
jo
cmp
mov
repz
jmp
jmp
mov
rcrl
add
bound
mov
scas
bt
inc
add
pop
arpl
sbb
neg
xor
stos
pop
push
rorl
adc
xchg
insb
inc
add
dec
jo
enter
or
rep
sahf
and
add
push
mov
fs
mov
shll
call
sbb
out
xchg
adc
cmp
bound
jmp
js
xchg
repnz
cli
mov
dec
out
mov
cmp
mov
pop
cltd
cmp
movzbl
in
cwtl
pop
imul
add
fdiv
sbb
cmc
sub
lahf
rorb
xlat
jno
fstpl
cmp
fistl
pop
push
pop
inc
sbb
mov
mov
inc
jge
cltd
push
push
xchg
push
clc
das
in
push
nop
xlat
in
stos
stos
ljmp
adc
imul
mov
ja
cmp
mov
out
xor
jl
mov
mov
push
imul
mov
aaa
popa
repz
popa
dec
mov
shrb
int
cmpsb
or
pop
shlb
mov
nop
mov
push
lds
sub
aas
push
mov
sahf
mov
mov
adc
and
mov
and
jae
outsl
daa
stos
rcl
subb
outsl
add
mov
and
jns
hlt
push
dec
mov
mov
test
xchg
or
pop
push
add
aad
sub
out
dec
inc
jb
mov
arpl
outsb
mov
mov
and
mov
push
xchg
gs
shll
mov
inc
cmc
pop
aam
cmp
sub
dec
xchg
and
mov
mov
cmp
shll
sub
add
aam
or
mov
push
mov
inc
fidivl
jmp
mov
mov
stc
and
sbb
fistpl
and
mov
add
ret
mov
aad
ds
inc
setp
js
push
insb
into
scas
imul
enter
push
mov
xchg
mov
out
scas
mov
sub
shlb
aas
dec
inc
insb
lret
push
scas
jg
mov
test
ja
sbb
push
insb
dec
lods
outsb
xchg
lret
popf
mov
inc
mov
imul
sbb
and
enter
and
inc
or
divb
clc
xchg
jnp
and
push
incb
gs
imul
fcompl
adc
stc
jp
ja
and
jae
dec
adc
ljmp
iret
add
cmpsl
mov
mov
scas
jo
push
cmpsl
lret
push
mov
sub
cmp
cmp
cwtl
mov
leave
shll
push
sbb
and
lahf
rcrl
xlat
cltd
xchg
ljmp
mov
cmpsb
lret
jmp
sbb
ret
rolb
cs
or
dec
cmpb
inc
or
jb
pop
mov
rcll
inc
cmpsl
mov
adc
loopne
out
out
daa
adc
mov
pop
fdivrl
mov
rclb
aas
and
addl
cmc
adc
xor
sbb
pop
jbe
pop
into
imulb
ss
mov
dec
out
dec
test
lods
int
lret
xchg
stos
dec
push
pop
clc
aam
sbb
dec
xchg
lock
adc
addb
or
mov
rol
int3
mov
leave
add
popf
sub
push
adc
xor
xor
and
insb
pop
pusha
cmpsb
pop
cli
outsb
out
loop
mov
subb
fstpt
aad
jb
add
jbe
out
xchg
add
mov
ljmp
lock
clc
sbb
hlt
xor
sub
cltd
aas
pop
jp
lret
push
adc
xor
xchg
dec
sub
outsl
lock
movsb
mov
mov
adc
mov
js
or
pop
cmp
les
push
mov
jne
dec
push
mov
mov
in
mov
out
cmp
push
push
in
fs
rcll
sub
add
inc
ds
ja
popf
inc
xchg
mov
lock
out
sub
add
insb
push
stos
or
mov
rcrl
shll
and
or
sub
sub
xchg
pop
int3
insb
fcomps
push
testb
pusha
push
call
lds
push
enter
lahf
ret
jae
mov
stos
push
push
xor
add
lds
pushf
pop
ret
ja
enter
in
xor
jbe
inc
lds
mov
sub
and
in
inc
mov
adc
mov
cmp
shll
fadd
mov
add
loopne
repnz
hlt
sub
loope
loopne
stos
cwtl
jne
inc
fwait
in
mov
cmp
out
jnp
pop
jne
sub
testl
push
jnp
aam
shrb
adcb
sbb
mov
pop
dec
jne
xchg
out
cmp
popa
bswap
inc
sbb
in
xchg
add
and
pop
sbbl
ret
jbe
imul
ljmp
pusha
sti
sub
xchg
ret
jb
jnp
shl
dec
and
xchg
pop
push
adc
cld
cs
nop
cld
addr16
bound
ret
cmp
jge
mov
push
and
xchg
mov
loop
xchg
dec
rcll
inc
mov
cmp
jle
jbe
jns
dec
xchg
jmp
jbe
add
lcall
sub
mov
mov
xor
mov
ss
mov
inc
xchg
out
mov
sub
mov
jns
push
jmp
mov
push
fs
cmpb
cmpsb
jecxz
jae
ja
dec
inc
in
fisttpll
aaa
enter
subb
xor
cmp
popa
push
or
scas
lcall
add
xchg
jno
out
push
sub
adc
pop
cmp
inc
ds
nop
outsl
test
mov
mov
inc
pop
xchg
cmpsb
mov
pop
jb
pop
mov
push
movsl
popa
xorl
sub
push
sbb
xchg
xchg
cs
pusha
fnsave
cmpsb
sarb
das
test
out
loopne
push
jmp
loope
test
xchg
mov
cmp
or
mov
pop
jp
aad
insl
xor
sub
dec
insb
push
lods
mov
cmp
jl
cmp
scas
je
pop
lods
sbb
push
and
idivl
xchg
mov
es
mov
loopne
in
push
mov
cmpl
pushf
inc
mov
pop
push
jb
cli
fwait
lret
lcall
lock
es
out
jne
push
leave
xor
in
dec
adc
jl
add
ljmp
fstl
jle
mov
cmp
push
lret
movsl
ficompl
bnd
xor
clc
dec
mov
mov
inc
and
add
pop
ret
imul
fnsave
or
outsl
aam
push
clc
mov
cmp
sbb
cmp
pop
cmc
sub
mov
ret
mov
mov
cmpsb
mov
pop
in
adc
pop
xor
pop
mov
mov
aam
or
adc
mov
loopne
push
jae
inc
mov
or
or
push
xor
fdivrs
and
mov
outsl
mov
or
sbb
mov
into
ret
sbb
dec
pop
nop
in
aam
sbb
movsl
jb
sub
dec
inc
aaa
clc
xorb
movsl
push
jnp
add
lret
imul
popa
xor
incl
add
mov
mov
das
mov
lret
mov
mov
push
dec
ret
bound
dec
cld
imul
inc
pop
dec
scas
rorl
push
stos
sub
mov
inc
call
loope
xchg
aam
sbb
jmp
push
push
add
data16
ds
mov
mov
bound
dec
cmp
add
mov
cmc
sub
sti
jae
subl
shll
fstpt
cmp
hlt
xor
mov
pop
imul
mov
lds
dec
addr16
push
push
or
mov
repnz
pusha
xor
sbb
lcall
pop
cmp
jg
scas
daa
add
in
pop
arpl
into
imul
mov
ja
cmpsl
push
sub
test
mov
cli
or
lods
aas
repz
jge
add
jns
icebp
push
negb
push
fists
shlb
jl
rorb
mov
xor
cwtl
mov
sti
lahf
popf
bound
add
push
cmp
sbb
mov
arpl
adc
or
pop
imul
dec
lods
sbb
add
inc
add
mov
jecxz
scas
or
jno
test
cmp
sbb
testl
pop
xchg
lea
dec
mov
sub
sbb
push
xor
jg
sbb
sti
mov
aam
clc
pop
xlat
mov
arpl
lock
repz
mov
daa
int
lock
sbb
jmp
rcrb
mov
xchg
mov
repnz
pop
mov
stos
lahf
addr16
int
cmp
fnstenv
mov
nop
cmp
or
and
xchg
stos
loop
xor
xor
insl
inc
lea
sub
jle
aaa
popa
push
push
dec
movsb
loopne
les
push
sbbb
cmp
xchg
cld
push
jl
popf
or
pop
jmp
add
cmp
push
loope
pop
pop
push
or
dec
jge
and
ret
mov
fwait
int
insb
mov
mov
test
push
xchg
pop
les
inc
xchg
adcb
cmp
sub
xlat
mov
aaa
mov
mov
out
fs
shrb
lock
iret
ja
mov
inc
mov
sub
mov
in
jmp
push
xchg
push
add
aad
and
dec
dec
out
pop
imul
daa
mov
pusha
cmc
in
out
adc
les
inc
mov
mov
popf
loope
lock
gs
fcomps
sub
push
xor
outsl
es
add
jns
fstpt
mov
lret
push
mov
mov
xor
movsb
mov
add
sti
xor
hlt
mov
push
iret
lock
cmp
jne
and
loop
inc
jns
cld
mov
mov
shll
or
mov
or
enter
andl
rcrb
je
sarl
xlat
jne
push
sbb
aad
mov
mov
iret
frstor
mov
das
push
fldt
inc
xchg
jo
mov
add
inc
fwait
mov
inc
fcmove
inc
mov
sar
xchg
test
imul
in
xor
es
hlt
outsw
cmc
dec
movsl
add
std
and
pop
arpl
scas
mov
outsb
jne
sub
imul
jl
mov
sub
outsb
add
xchg
pop
mov
mov
fisubl
imul
or
shlb
insb
mov
lock
fnop
out
inc
es
sub
fnstenv
dec
ret
dec
and
mov
or
pusha
add
fcoml
test
popf
fildl
ret
pop
out
insl
lret
sub
dec
insl
imul
hlt
dec
icebp
lret
pop
adcb
mov
fcmovbe
jae
in
sbb
xchg
daa
test
test
cmp
addr16
pop
ds
imul
movsb
ljmp
adc
or
arpl
dec
dec
jae
clc
test
dec
adc
inc
xchg
sub
out
outsl
mov
cmp
cltd
sub
sub
jl
push
xor
xor
leave
cmp
cmp
push
fnstsw
pop
cld
jb
sti
mov
stos
add
cmp
inc
mov
popf
mov
arpl
jmp
xchg
pop
pop
decb
addl
pop
mov
or
imul
rcrb
inc
jmp
arpl
cmp
ffreep
imul
mov
ficoms
fwait
shrl
int
add
xchg
cmp
sbb
sahf
inc
notl
faddl
xor
dec
jns
dec
jns
or
dec
ret
jle
add
push
push
shr
adc
dec
insb
js
and
fisttpl
sbb
ret
dec
inc
jg
jecxz
jl
pause
js
fdivrp
sbb
aaa
mov
push
je
dec
flds
jbe
push
cld
test
nop
or
pop
out
mov
jp
loope
or
outsb
mov
xchg
mov
fnsave
call
lcall
data16
cmc
jl
outsb
inc
xor
xchg
je
xorl
mov
out
mov
test
ficoms
insb
scas
ret
inc
push
jge
lcall
in
arpl
mov
lahf
and
rorb
jl
mov
pop
xor
jae
mov
shrb
les
cmp
add
aam
shll
pusha
enter
cld
in
xor
sub
insb
mov
mov
sahf
dec
cli
push
and
iret
shll
sti
das
sub
mov
sub
pop
push
int3
fldl
xchg
xchg
leave
movsl
or
mov
push
push
sbb
and
scas
dec
iret
in
lcall
push
leave
sbb
mov
mov
inc
cmp
add
or
sbb
loopne
sbb
push
sub
ret
cmpsl
loope
push
rcl
or
out
add
mov
outsl
testl
cmpsl
cli
mov
dec
sub
dec
jmp
cs
lods
adc
in
and
sub
popf
and
and
mov
dec
icebp
scas
xor
in
cmc
int3
mov
mov
sub
and
into
test
sbb
inc
mov
mov
push
xchg
data16
jno
clc
pop
pusha
mov
cmpsb
scas
xchg
xor
xchg
mov
loopne
push
mov
xchg
cltd
xchg
lcall
cltd
push
sub
mov
out
mov
imul
in
cmpb
int3
xor
and
sbb
leave
jne
jns
cmp
xchg
pop
add
js
and
in
dec
rcrl
xor
pop
cld
lcall
lods
sub
cmpsb
mov
sub
in
outsl
mov
in
adc
fnsave
popf
aad
jbe
cltd
hlt
arpl
pop
lods
inc
pop
mov
aad
push
lods
or
subl
sbb
dec
call
andl
repnz
fld
shrb
adc
mov
daa
repz
data16
mov
arpl
sbb
movsb
pop
or
test
cmpl
cwtl
jg
or
gs
xor
out
push
cmpsl
js
sub
rcll
popa
inc
mov
pop
dec
icebp
mov
mov
sub
aad
es
arpl
movswl
sbb
sub
or
dec
mov
xchg
sbb
fstpl
fsubrl
in
shlb
in
subl
jns
xchg
jp
imul
insl
repz
rcl
aas
push
sbb
orb
push
in
test
ficoms
add
xchg
and
mov
js
scas
or
inc
sub
mov
or
dec
cmp
push
inc
sub
sub
xchg
jle
push
data16
adcl
subl
jne
inc
loop
jb
loopne
and
mov
mov
bound
daa
jb
push
pop
cmp
imul
fwait
or
or
outsb
pop
cmp
loopne
cli
mov
sahf
pop
push
jae
lret
fidivl
sarb
xor
mov
inc
enter
push
setbe
and
sub
mov
mov
pushf
daa
xor
mov
add
iret
sub
in
pop
push
aaa
je
fcomps
cvtdq2ps
push
mov
in
hlt
fimuls
stos
in
jne
mov
cld
movsl
push
dec
pop
scas
jno
mov
cltd
inc
hlt
xchg
add
stos
cmp
mov
dec
xor
clc
mov
inc
mov
xchg
sti
mov
dec
mov
push
push
fwait
xor
xchg
push
in
imul
insl
push
pop
jp
xor
add
mov
jge
stc
push
push
in
jo
fwait
pop
mov
inc
or
sti
mov
mov
or
mov
mov
mov
mov
sahf
lahf
add
idiv
jo
cmp
pusha
mov
xor
rcrb
or
xchg
enter
sahf
lcall
scas
and
fisubrl
pop
stos
sub
push
inc
mov
adcb
into
sbb
cmp
dec
cld
aaa
lods
ljmp
push
mov
inc
std
sub
das
sub
js
aad
ljmp
mov
xor
dec
ficoml
scas
adc
ja
loopne
add
cmpsb
mov
ja
inc
mov
je
je
sub
loop
ljmp
insl
xchg
lds
mov
imul
loop
inc
test
jmp
xchg
repz
lds
shrl
movsl
dec
and
xor
sbb
push
inc
adc
jae
mov
inc
jmp
adc
inc
adc
daa
adc
mov
mov
loopne
and
loope
inc
leave
lcall
repnz
loopne
icebp
in
das
push
jge
adc
mov
ret
push
mov
movsb
mov
mov
jge
push
xchg
jecxz
fidivrs
je
test
adc
imul
xor
lcall
fwait
adc
stc
push
leave
int3
rorb
pusha
mov
pop
jp
out
dec
pop
mov
lods
cwtl
pop
pushl
aam
mov
xchg
fcom
shrl
in
fwait
xor
loope
sub
scas
arpl
int3
lcall
push
adc
push
mov
fcomi
scas
out
insl
mov
adc
pop
fsubl
add
movsl
mov
idivb
mov
adc
pusha
push
imul
pop
mov
leave
push
inc
jnp
jl
lahf
add
adc
int3
xchg
or
sbbl
mov
stc
cld
mov
dec
mov
push
into
sbb
inc
jmp
cmp
scas
cltd
xchg
inc
fsubrl
out
pop
pop
pop
push
movb
mov
adc
sub
xchg
hlt
sub
and
mov
ss
xor
fs
cmp
push
jb
and
xchg
popf
pop
jl
in
decb
rolb
fidivs
jbe
fisttpl
pop
mov
roll
mov
cld
mov
sbb
mov
xor
mov
fcmovnu
lods
mov
sub
cli
mov
xor
jns
bound
mov
cld
jo
test
jge
test
aam
jae
pop
and
xchg
pushf
pusha
popf
mov
jmp
out
sub
loope
imul
nop
sbb
add
xchg
or
ficoml
dec
push
mov
mov
test
push
push
xchg
arpl
adc
cli
in
mov
cmp
cli
in
stos
movsb
ds
adc
sub
push
jle
mov
xchg
test
xchg
pushw
mov
xor
mov
mov
jo
inc
cmp
cmp
sbb
xchg
cmp
lcall
lahf
cmp
lds
in
pop
inc
push
pop
sbb
das
loopne
xor
leave
daa
lds
cmc
xchg
rcrb
xor
mov
xor
mov
loopne
or
into
cmpsb
sbb
fdivrs
movsb
jbe
mov
push
mov
out
stos
jno
lgs
iret
jns
out
jmp
insb
shlb
lret
popf
pop
cltd
add
mov
push
fcmovbe
dec
cwtl
ss
sub
sbb
and
push
mov
scas
dec
loop
cmp
xor
negl
repnz
sub
mov
sbb
cmp
dec
stos
or
inc
mov
inc
into
stc
dec
mov
imul
xchg
jo
pop
jne
or
cli
push
xor
pop
xchg
cltd
push
negb
add
psubq
or
imul
pop
jns
mov
loop
cmp
shrb
test
sbb
jmp
fnstenv
cmp
es
bound
add
sbb
lods
out
pop
xchg
sub
xchg
sub
dec
add
mov
pop
mov
ret
dec
mov
int3
add
loope
fsts
std
test
mov
xchg
cmp
inc
cltd
hlt
xchg
popa
sbb
outsb
and
sbb
divb
shll
or
addl
push
mov
push
outsb
push
call
comiss
sbb
push
repz
jo
test
jbe
inc
or
lret
cmp
scas
mov
jae
dec
xor
sbb
scas
fucomp
sbb
jb
and
outsl
je
adc
dec
or
decl
pop
mov
and
leave
adc
cmpsl
and
fcomps
cli
lret
imul
jl
sbb
js
int3
int3
xchg
mov
inc
fcompl
and
mov
repnz
loop
outsb
std
sub
andl
inc
jmp
sbb
ljmp
dec
sbb
rcrl
ljmp
or
xchg
leave
into
in
loope
mov
aaa
aaa
dec
mov
xor
mov
pop
push
jecxz
pop
mov
repnz
or
in
lods
cli
pop
pop
jnp
pop
xor
loop
inc
lret
rorb
pop
insl
sbb
lods
cmpb
mov
jge
repz
out
xchg
pop
test
sub
sbb
repz
xor
inc
enter
sarl
lret
addr16
mov
xor
mov
insb
repz
cmp
xor
add
or
or
mov
lods
and
rolb
les
pop
out
loope
xchg
aaa
lock
xchg
xchg
icebp
adc
pop
das
push
xor
inc
pop
fdivl
daa
arpl
cmp
icebp
test
sbb
mov
int3
or
mul
xchg
xchg
gs
insb
icebp
mov
sarl
cwtl
out
cs
pop
or
dec
loopne
scas
in
or
cmpsb
lahf
xchg
cmp
and
test
test
outsb
iret
rolb
pop
push
int
lcall
ds
into
mov
mov
mov
mov
dec
imul
out
loopne
sahf
or
sbb
sahf
ss
popf
push
or
mov
shl
add
mov
insb
push
push
cmp
into
add
sbbl
cmpsl
negb
xchg
jp
xchg
leave
adc
pop
dec
insb
inc
insl
mov
outsb
adc
sbb
jne
cmp
imul
js
inc
sti
mov
jecxz
jb
arpl
xor
xor
cmp
fidivrl
rorb
push
mov
test
sbb
dec
and
xor
pop
jp
outsb
jne
sbb
mov
scas
lcall
pop
or
into
sbb
adc
out
mov
pop
in
in
jmp
dec
cltd
cmp
pop
or
das
jmp
jle
les
in
loope
xchg
pop
push
jns
fwait
call
mov
arpl
mov
lods
lock
and
xor
mov
repz
add
mov
aaa
in
mov
adc
mov
adc
cmpb
ljmp
push
xchg
dec
mov
push
xlat
popf
xchg
dec
sub
clc
push
vpavgw
fisubl
lds
loope
mov
aad
rcll
xor
cmp
loope
scas
xchg
shl
xchg
pop
or
inc
mov
insb
push
bound
arpl
mov
jns
push
mov
insb
pop
sbb
sbb
loopne
sbb
clc
xor
xor
jae
cmp
xchg
jl
aaa
xchg
add
int3
enter
inc
adc
pop
add
sub
jge
sub
ljmp
dec
xor
out
in
jg
sub
mov
insl
addb
les
and
les
testb
iret
repz
mov
imul
int3
push
push
jl
cmp
jb
and
sbbb
cmp
xor
push
inc
adc
xor
jae
jnp
push
add
xchg
sub
fstl
and
mov
mov
cmp
mov
push
mov
into
pop
or
xchg
push
call
cmc
xchg
dec
scas
mov
push
outsb
out
fnstsw
loopne
adc
xchg
dec
sub
adc
ljmp
push
mov
push
mov
sub
subl
fnsave
fistps
jb
mov
sub
adc
cmp
loopne
in
inc
mov
mov
cmpsl
in
sub
cli
das
inc
loope
fwait
stc
test
xor
loopne
xchg
push
outsb
bound
mov
dec
repnz
cwtl
es
inc
push
cwtl
jg
xchg
sbb
jmp
stc
cmp
mov
mov
xchg
jp
mov
outsl
jae
cmp
jg
jb
notb
push
and
push
lds
adc
rcrl
adc
adc
sarl
xchg
out
popa
arpl
mov
jb
sub
sbb
ficoml
cmp
lahf
xchg
ret
loop
jecxz
dec
dec
sbb
mov
adc
psubw
pusha
ja
aaa
mov
cmp
std
lret
pop
enter
jns
insl
cmpsl
ds
outsl
xor
bswap
xchg
loopne
pusha
movsl
lret
mov
in
push
mov
push
sub
push
mov
aaa
dec
sbb
flds
mov
mov
push
insl
ds
cmp
lods
fmulp
cmp
add
pop
inc
sahf
int
mov
mov
cmp
xchg
frstor
cmp
aaa
mov
cmp
sbb
add
sbb
adc
jns
xchg
jo
jmp
cmpl
sub
sbb
in
jmp
xor
adc
stc
mov
push
push
and
push
add
sbb
stc
pop
jp
lcall
mov
adc
mov
dec
clc
aaa
cwtl
lock
dec
mov
cmp
gs
inc
inc
sahf
cli
or
xor
xor
aas
stos
xor
push
ret
dec
ret
push
mov
mov
cmpb
es
sbb
outsl
adc
mov
icebp
cmp
jae
in
mov
addr16
sahf
xor
movsb
enter
push
mov
cmpsl
sub
pop
lret
pop
and
cwtl
dec
jno
pop
cmp
mov
push
jo
mov
mov
mov
movsl
mov
fiaddl
adc
mov
adc
dec
pop
fisttpl
and
xchg
ret
lods
sub
and
or
mov
ficomps
sub
push
cld
leave
outsl
pop
imul
in
jb
pop
jg
sub
mov
push
mov
push
lahf
lahf
movsl
push
xchg
insl
jae
loope
inc
mov
roll
fnstsw
leave
loop
add
or
xchg
cmp
scas
popf
pop
push
in
out
adc
pushf
js
pop
jmp
xor
scas
js
daa
insl
or
push
fmulp
push
inc
jnp
int3
faddl
pop
sbb
into
push
push
push
dec
out
jg
push
dec
cmpsl
stc
les
lea
pop
or
insl
divb
sub
sahf
cmpsl
in
mov
cmp
cli
insb
add
cmp
rorl
push
mov
aaa
add
xor
aad
testl
pop
add
fcompl
or
mov
jae
int
push
adc
or
mov
adc
mov
xchg
xchg
mov
out
daa
mov
dec
shrb
push
imul
into
nop
pop
mov
xor
pop
dec
jmp
sbb
mov
sub
and
jp
xor
mov
aaa
pop
testl
mov
or
imul
jg
and
mov
pop
mov
push
jecxz
insl
aad
add
lods
sub
mov
leave
adc
inc
mov
imulb
cmpb
xor
cltd
and
aaa
xchg
ficompl
push
add
aaa
and
add
pop
nop
push
jge
das
push
mov
cmc
in
inc
mov
adc
mov
sbb
add
adc
out
inc
mov
xchg
pop
cmp
gs
fwait
clc
dec
mov
and
repz
sysenter
cli
xchg
sub
pop
xchg
popa
pop
or
test
lahf
mov
std
push
push
or
mov
sub
in
jmp
fwait
mov
mov
mov
popf
push
fs
sti
cmp
mov
and
push
or
xor
es
test
arpl
pushf
insb
cltd
push
and
add
daa
push
cmc
pop
xor
test
iret
stc
push
sub
adc
adcb
nop
rclb
imul
and
gs
cmp
pop
mov
pop
lret
cs
sub
xor
mov
icebp
or
add
cmp
cmp
int
dec
or
cmc
je
sbb
sarb
insb
xor
adc
mov
fsts
sub
adc
push
cmpsb
jns
cmp
jg
mov
mov
add
pop
inc
add
test
add
sub
imul
repz
mov
mov
push
push
aad
cld
lret
bound
call
mov
dec
sbb
add
fistpl
lcall
sub
push
pop
lds
push
cmp
addl
mov
mov
jb
in
test
xor
loop
sbb
adc
repz
adc
xor
aaa
popa
inc
dec
popa
mov
fisubl
jmp
push
aaa
fsubs
and
enter
lret
xchg
cmp
mov
sbb
aam
sub
sbb
xchg
pop
insb
cwtl
je
ror
push
gs
dec
nop
and
adc
fcoml
xchg
daa
rcl
lret
pop
fcoms
sub
cmp
out
xchg
pop
aam
stos
cmpsl
repnz
inc
fimuls
js
xchg
rclb
mov
arpl
hlt
pop
mov
pop
or
sbb
je
arpl
and
je
add
int3
lods
push
inc
xor
out
cmc
aas
pop
and
push
fdivl
adc
xchg
stos
mov
aad
sub
ret
les
or
out
mov
mov
cwtl
out
mov
imul
insl
jae
imul
popf
mov
in
xor
popf
mov
stos
shrb
jg
mov
or
je
add
mov
shlb
adc
sbb
iret
cmp
mov
or
xorb
sub
and
add
push
sbb
int
cmp
arpl
inc
pop
cs
inc
mov
inc
mov
jmp
imul
mov
cwtl
ljmp
xorb
xlat
cmp
push
mov
scas
or
mov
push
jo
mov
dec
xchg
cmc
ficompl
pop
or
fcmovu
mov
nop
loopne
adc
lret
js
pop
cmp
add
es
ds
cli
stos
bound
inc
adc
addl
icebp
fisttps
dec
jae
dec
imul
out
xor
cld
cmpb
xor
aas
xor
ds
aad
dec
inc
mov
sub
sub
adc
jnp
mov
pop
lahf
add
addr16
xor
sub
inc
adc
outsb
or
cs
xchg
inc
xlat
in
mov
push
sub
sbbl
fimuls
pop
and
dec
push
lock
sub
ret
mov
and
fsubrs
mov
and
sub
mov
xlat
ficompl
repz
jne
fcomp
cmp
push
ljmp
shrl
stc
xlat
ficomps
xor
cli
cmpl
adc
push
dec
mov
jge
imul
aad
fdivr
pop
add
jbe
sti
sub
xchg
adc
dec
mov
sub
lods
loopne
data16
cwtl
sbb
clc
lcall
mov
cmp
or
inc
or
mov
call
jnp
dec
push
insl
or
cmp
cmp
push
inc
loopne
inc
mov
xchg
enter
repz
sbb
nop
sarb
push
orl
scas
xchg
gs
push
cmp
add
push
mov
mov
aaa
hlt
cmp
cmp
shll
ja
mov
xchg
test
jmp
mov
in
xor
sub
inc
mov
rcrl
sbb
sub
pop
xorb
add
pop
repz
dec
pop
push
cltd
mov
xchg
popf
leave
pop
sahf
or
push
dec
sbb
lret
mov
jp
xor
mov
xchg
leave
andl
add
insb
test
and
cld
iret
divl
pop
jno
dec
add
adc
or
adc
js
mov
pusha
cltd
jge
sub
pop
daa
pop
int
or
sbb
aaa
cmpb
lds
sbb
mov
adc
mov
jle
scas
mov
inc
adc
cwtl
out
or
pushl
mov
inc
rol
shl
xchg
sbb
jp
repnz
in
mov
in
ret
rolb
lret
add
jl
xchg
jne
es
jnp
jl
inc
xor
out
lds
in
cwtl
mov
xchg
mov
into
pop
das
push
leave
xchg
arpl
lds
mov
aam
cmpsl
mov
pop
in
and
sub
push
jecxz
popa
push
jle
in
mov
mov
leave
repnz
add
xor
stc
je
dec
fprem
pop
cs
inc
xchg
es
xchg
push
loopne
xchg
dec
push
and
test
pop
mov
pop
call
push
or
lcall
imulb
lret
addb
icebp
xchg
pop
mov
dec
cmp
fildl
out
push
jns
inc
aad
fwait
icebp
andb
jge
int3
rcrl
lahf
push
push
cwtl
rcll
insb
mov
adc
and
outsl
pop
fimuls
bound
mov
pop
sub
adc
xor
push
int3
lods
add
std
scas
jg
adc
and
notb
lods
clc
std
fldt
sbb
push
int
push
cltd
rclb
sub
adc
lret
xor
addr16
bndldx
popa
mov
jo
ret
push
mov
cs
sahf
dec
sub
mov
mov
cld
std
std
fdivrl
push
cli
cmpsb
ret
mov
out
push
and
divb
shll
jbe
repnz
sbb
insl
push
lahf
jl
test
lock
mov
push
lret
push
inc
cs
pop
mov
xor
adc
xchg
cld
push
ret
add
inc
sahf
dec
popf
imulb
ret
jae
jb
roll
mulb
lea
in
cmpb
popw
dec
popf
fsubrl
cmp
bound
adc
loope
icebp
ja
movsl
or
and
les
lret
xchg
mov
jae
jno
jecxz
std
jne
push
pop
mulb
nop
std
in
mov
mov
jmp
xchg
pop
sahf
mov
popa
mov
pop
shll
movsb
sar
shll
or
test
sub
push
mov
lds
mov
lds
push
xor
push
in
outsl
int3
test
sbb
fistpl
out
adc
hlt
inc
jmp
popa
inc
xlat
mov
lods
and
stos
sub
adc
pushf
add
xor
cmp
test
lds
shr
jo
or
out
jg
push
in
movsb
push
jp
mov
dec
or
cmp
inc
ss
mov
inc
mov
or
push
jb
mov
inc
jo
out
mull
orb
lock
sub
mov
in
in
pop
test
or
mov
add
mov
dec
fs
into
std
lock
mov
add
rolb
push
lds
lret
aas
hlt
push
or
in
xor
and
filds
adc
fistps
or
inc
xchg
fisttps
inc
rorl
iret
sbb
or
pop
xchg
pop
sub
pop
xchg
jle
mov
sahf
and
mov
mov
or
nop
inc
popa
out
sahf
les
loopne
cmp
dec
cmc
aam
ds
mov
imul
cmp
popf
neg
sbb
and
lahf
divb
shl
es
mov
int
es
push
pop
popa
pop
fidivs
sub
or
or
pusha
pop
rol
les
popa
stos
lcall
test
shll
mov
xchg
adc
xchg
in
pop
add
mov
xor
popf
scas
jo
sub
inc
jb
adc
jmp
int3
rolb
loop
in
push
push
mov
push
jae,pt
mov
mov
loope
cmp
lds
mulb
xor
outsb
dec
mov
or
mov
data16
js
push
push
adc
jge
out
cmpsl
dec
adc
sub
mov
addl
inc
in
push
addr16
pushf
call
inc
sbb
sbb
stos
sbb
mov
jg
popl
dec
cmp
jecxz
cwtl
mov
mov
test
icebp
rolw
in
add
and
std
imul
mov
inc
sahf
sarl
jns
mov
pause
add
and
pop
push
lahf
insb
mov
mov
or
aam
dec
mov
incb
loopne
pop
iret
jmp
mov
pushf
pop
pop
fdivrs
add
mov
or
push
scas
or
adc
or
adc
lahf
sahf
sbb
add
movsb
or
stos
mov
push
mul
js
sub
call
addr16
outsl
sub
pop
push
pop
popa
cmpsb
fldl
hlt
mov
xchg
inc
inc
filds
int3
mov
lahf
pop
loope
mov
jbe
sbb
pop
inc
inc
and
xor
sbb
or
shrb
mov
pop
inc
loopne
push
ror
ret
xchg
pop
rcrb
xchg
ja
pop
adc
loopne
xchg
dec
cmc
pop
cld
movsl
mov
add
and
data16
mov
fptan
dec
cs
loop
clc
in
pushf
cmp
rclb
pop
mov
xor
or
ret
jae
mov
mov
mov
ficompl
mov
dec
jae
sub
dec
adc
dec
orb
jno
sbb
pop
pop
int
in
jb
insl
ljmp
int
outsb
or
aaa
sub
jg
pop
mov
and
ret
pop
xor
xor
lret
ret
jb
pop
daa
fs
push
push
inc
das
xchg
movsb
imul
pushf
insl
sarl
jle
xchg
test
lea
mov
add
out
loope
xchg
mov
pushf
gs
stos
mov
mov
nop
out
ret
cwtl
push
or
mov
loopne
loop
addl
cwtl
test
inc
jne
jno
jmp
push
mov
xchg
dec
cmpsl
ficoms
mov
inc
sbb
pop
repz
mov
mov
lods
xor
xchg
jg
pop
ret
sbb
adc
aad
fidivrl
out
aam
push
mov
and
and
jo
scas
mov
insl
insb
sti
lret
jmp
daa
fdivrs
dec
lret
add
xor
xchg
js
or
ljmp
test
sub
pushf
xchg
enter
shll
loop
out
out
out
lretw
jo
mov
aas
ds
outsb
inc
mov
xchg
jmp
push
and
repnz
repnz
shrb
frstor
dec
cmc
cmp
jle
inc
jmp
fiaddl
arpl
scas
ret
imul
fwait
pop
push
data16
mov
inc
fdivrp
fildl
sbb
inc
sbb
mov
repnz
xor
xchg
mov
orl
pop
xchg
xor
cs
jnp
and
inc
push
sub
into
stos
bound
jecxz
fwait
push
mov
rcll
mov
xchg
std
mov
lds
gs
xor
mov
mov
xchg
mov
pop
add
inc
test
dec
push
repz
sti
divl
pusha
lret
and
add
xchg
les
add
inc
pop
jno
jno
rcrl
mov
xchg
xchg
gs
inc
push
popf
jns
ljmp
stc
clc
mov
xchg
setle
sub
push
mov
ljmp
je
adc
pop
inc
in
sbbb
push
mov
jle
aad
jmp
sbb
shr
imulb
pop
xlat
mov
mov
iret
fs
sbb
mov
sub
and
mov
fwait
jne
mov
inc
jecxz
add
lcall
cmp
into
add
sub
ss
cmc
fidivrl
xor
dec
scas
inc
adc
xchg
je
xchg
movsb
push
xchg
aad
adc
dec
lret
andb
sbb
add
lds
add
mov
adc
test
or
jge
sbb
cltd
sbb
ljmp
jecxz
sub
push
popf
or
scas
aad
fwait
hlt
outsb
ds
mov
sbb
divb
fbstp
pop
and
add
push
push
pushf
push
jno
mov
cli
jl
sarl
aas
ja
enter
push
cmpsb
lods
cmp
xor
pop
jbe
mov
pop
mov
adc
push
jecxz
pop
loop
cmp
repz
mov
ret
js
inc
lock
scas
jp
jnp
bound
dec
pop
das
xor
or
in
and
addl
cmpsb
outsb
jbe
ss
rcr
mov
sti
jmp
pop
sub
int3
and
rorl
rorb
int
add
sub
xchg
or
jne
push
mov
jp
das
es
add
xchg
jecxz
loopne
inc
sbb
cmp
jmp
jecxz
in
add
std
pop
cmp
mov
sahf
xchg
js
in
dec
aas
jb
scas
nop
cmp
and
andl
je
xchg
jp
inc
xlat
and
pop
push
mov
inc
mov
dec
pop
popf
fdivrs
aam
adc
testl
lods
cmp
fcomps
cmpl
push
arpl
fsubrp
mov
rclb
xchg
pop
flds
fs
push
xchg
mov
std
add
cmp
cmp
or
js
adc
lock
rcll
mov
sub
mov
add
sti
add
and
mov
int
xor
push
pop
fsts
mov
idivl
and
jle
pop
add
inc
cmc
es
mov
jl
dec
mov
fcom
ss
jmp
mov
mov
and
sub
push
or
jmp
test
shll
cltd
std
sbb
lods
addr16
int3
push
nop
cwtl
hlt
push
into
imul
push
sbb
push
ss
aaa
inc
cld
mov
out
sub
dec
pusha
cmp
mov
out
adc
aad
pop
notl
leave
xor
call
loopne
arpl
popf
into
ret
fbld
mov
xchg
and
popf
loope
stos
lcall
mov
and
mov
movsb
jmp
jae
sahf
inc
push
ljmp
or
push
pop
mov
movsl
outsl
ja
sbb
popa
xor
sti
pop
push
inc
cld
ret
sahf
gs
rcrl
xchg
fcoml
pop
movl
aas
icebp
add
push
movsb
and
jb
aam
jno
stos
mov
cmc
sbb
mov
pop
std
popa
adc
sub
mov
insb
enter
dec
sarb
scas
cmp
iret
fucom
dec
in
out
pop
std
ret
bsf
xchg
jno
jns
clc
lahf
or
add
sbb
sbb
ds
cmp
mov
cmp
adc
mov
jbe
or
sti
cmp
and
pop
and
sub
lods
cmpl
frstor
adc
shlb
sub
mov
sbb
enter
mov
jns
sbb
dec
pop
shll
jne
repz
mov
or
lahf
inc
mov
mov
or
dec
ljmp
gs
and
jo
sbb
or
je
pop
mov
push
jae
mov
insb
test
add
cli
lds
jmp
in
and
or
aas
in
mov
xchg
cltd
packuswb
mov
pop
fdivs
fsub
cmp
cltd
jns
cmp
sbb
xor
push
test
aas
les
mov
add
pushf
test
aam
sub
stc
push
pop
push
dec
push
test
test
lcall
xor
push
sarb
jbe
das
inc
and
add
out
out
repz
daa
xchg
dec
int
shrl
in
rcrl
push
cmc
jno
scas
loop
dec
xchg
mov
mov
out
call
ret
adc
mov
cmp
in
push
inc
out
cmp
and
mov
imulb
sub
pop
call
jnp
jno
outsb
ja
enter
mov
adc
mov
mov
dec
js
jnp
jno
cmp
add
jo
cmp
mov
xchg
out
out
popf
xor
mov
lock
inc
push
pusha
cmp
xorl
sbb
pushf
out
ds
lahf
mov
enter
or
nopl
out
cmp
push
negb
fists
inc
dec
add
xorb
cmc
pop
xor
dec
push
in
dec
xor
sub
jmp
imul
int3
cmp
ja
cmp
dec
xchg
popa
cmp
arpl
rcll
insl
mov
shlb
imul
mov
sar
test
stos
adc
lahf
arpl
rcrl
rclb
cltd
pusha
outsl
push
lea
cmp
stos
imul
inc
mov
in
sahf
arpl
inc
sub
push
pop
sub
mov
jno
sar
cmpsl
push
and
int
lret
mov
push
pop
jp
jl
pop
andb
outsb
mov
subb
pop
sub
imul
jp
syscall
insb
mov
loopne
mov
test
push
jecxz
mov
cmp
insb
mov
std
mov
add
dec
les
or
pop
fildll
xor
das
sbb
mov
js
loop
add
je
mov
out
push
rcrl
jmp
dec
aas
xchg
js
mov
push
xchg
scas
push
inc
out
and
icebp
call
mov
or
cltd
pop
and
and
lret
sub
sahf
jne
mov
out
add
fidivl
xchg
sbb
insb
pop
adc
insb
sub
push
push
sbb
ror
jmp
jne
stos
mov
andb
xchg
xchg
lcall
ss
adc
pop
inc
dec
imul
out
xor
inc
int3
or
sbb
or
or
test
adc
shrl
clc
cs
dec
xchg
mov
iret
sub
mov
inc
sbb
xchg
sub
shrb
subl
loop
and
inc
loopne
dec
sbb
jns
adcb
dec
inc
cmp
and
jnp
push
mov
dec
mov
scas
fstpl
scas
adc
mov
ret
mov
ret
sub
dec
lock
int3
pop
mulb
loopne
lret
and
jge
out
add
rcll
fisttps
test
into
adc
lea
sbb
aad
xor
adc
into
jo
stos
xor
movsl
jg
stc
loop
push
add
gs
addr16
lret
inc
dec
mov
sub
sub
fiaddl
sub
inc
pop
inc
mov
cmpsl
mov
and
pop
repz
and
adc
sbb
int
xor
push
mov
lret
out
pop
dec
add
sbb
cmp
hlt
daa
mov
les
jmp
scas
or
lfs
pop
mov
icebp
xchg
leave
aad
fstp
dec
loop
in
adc
jo
fldl
xor
jge
adc
lret
imul
xlat
ret
pop
and
bound
xchg
sar
xchg
ffreep
jne
push
add
and
add
sahf
lahf
add
out
dec
pop
cli
loope
push
cli
aas
adc
daa
mov
inc
inc
push
pop
out
xor
dec
call
clc
shrl
xchg
gs
jne
out
sub
xchg
repz
xor
outsl
pusha
aas
or
inc
loope
loope
jmp
loopne
push
pop
add
xchg
cmpb
test
sub
mov
mov
imul
pop
nop
mov
mov
fwait
inc
lods
sti
inc
jl
inc
add
popa
add
and
jmp
mov
mov
popa
pop
inc
clc
or
xchg
mov
or
mov
rclb
fadd
sti
sbb
and
ret
int
das
int
sbb
repz
mov
mov
sub
shr
or
mov
testl
or
sbb
icebp
add
ljmp
sub
pop
ja
aam
sti
rol
mov
fdivrs
loopne
push
xchg
add
mov
ds
push
mov
push
inc
nop
sub
popa
in
pop
movsb
sub
dec
push
push
sbb
push
or
pop
push
mov
lahf
icebp
pop
aad
data16
jmp
arpl
repnz
ficoml
or
lock
test
pop
sub
and
mov
jle
mov
aas
cmp
arpl
mov
insl
out
xorb
pop
mov
xor
les
subb
insb
cmp
and
out
mov
adc
push
js
iret
int3
lods
pop
mov
shll
cltd
jge
sbb
lds
nop
xchg
das
pop
mov
xchg
repz
repz
pop
xor
push
rorb
jl
out
or
mov
dec
out
jns
cmp
xchg
cmp
jnp
jg
dec
imul
pusha
and
adc
mov
lds
stos
fwait
int
pusha
sub
pop
aad
or
and
jo
movsl
inc
xor
mov
popf
fnstcw
xchg
fnsave
adc
ret
test
stos
stos
xor
fwait
stc
adc
stos
push
mov
pcmpeqw
inc
cld
mov
out
rclb
rol
call
nop
sahf
dec
call
mov
lods
lahf
dec
fbstp
aam
jb
jnp
repnz
adc
out
jp
sub
jo
frstor
jmp
lods
jmp
insl
xor
aaa
sbb
xor
xchg
jl
std
lods
imul
insb
mov
cmpsb
pop
movsl
jb
inc
neg
mov
push
mov
push
push
arpl
xchg
fs
sub
insb
lcall
mov
aad
jl
aas
pusha
ficomps
dec
leave
mov
sbb
outsb
flds
mov
mov
cmp
mov
call
neg
shl
mov
imul
into
pop
jmp
das
aad
rep
aas
stos
cli
mov
lods
sahf
cmp
add
lea
inc
orb
fstl
fwait
push
lahf
sbb
inc
imul
dec
lods
sub
sbb
xchg
fmull
jmp
shlb
mov
out
adc
cmp
imul
sbb
sbb
dec
mov
rcrl
mov
jecxz
mov
push
adc
ljmp
stos
mov
add
outsb
movsl
add
xchg
inc
or
and
cmc
negb
push
cmpl
add
mov
shrl
jp
repnz
pop
add
aad
or
nop
ljmp
fsubrl
nop
fcompl
push
push
mov
mov
dec
cmp
pop
cmp
sti
pop
lret
add
lea
and
or
in
mov
out
fistl
mov
cltd
ror
mov
xchg
push
or
cs
inc
imulb
add
cwtl
fcom
jecxz
jae
repz
shrb
sarl
inc
inc
xor
orl
movsl
sub
xchg
push
push
xchg
lcall
xchg
lea
mov
add
xchg
fldcw
sub
dec
add
push
sarl
jno
add
add
fxch
jg
lods
push
xchg
mov
adc
ds
cmp
mov
test
popa
insl
lods
lret
cmp
roll
and
pop
cmp
iret
in
imul
fs
push
call
outsl
shl
xlat
cmp
push
js
jle
aas
push
add
pop
adc
mov
in
inc
imul
jg
push
jb
lods
out
loop
sbb
push
dec
ljmp
push
mov
dec
xchg
ficomps
xor
mov
adc
call
and
xchg
leave
push
and
adc
push
xchg
or
cmp
mov
iret
xchg
sbbb
add
adc
inc
dec
add
xor
roll
sbb
cmpsb
mov
cld
sti
cmp
pop
scas
mov
jne
icebp
adc
shrl
test
xor
daa
xor
aas
mov
adc
andl
xchg
int
stos
dec
lret
aad
loopne
mov
sbb
inc
lock
cmpsb
push
addr16
mov
xchg
mov
idivl
jp
iret
push
aaa
mov
xchg
out
dec
jp
mov
dec
xor
xor
push
push
or
enter
push
inc
fidivl
fildl
aad
sub
cltd
or
push
cmc
sbb
mov
mov
addb
or
sub
fldl
mov
xor
inc
sub
push
mov
out
xor
fsubl
scas
sbb
test
scas
xor
out
scas
mov
mov
iret
scas
test
add
push
mov
icebp
xor
inc
sub
testl
pop
ds
xor
dec
cmp
xor
adc
and
clc
enter
movsb
inc
sbb
lods
push
cld
push
add
in
test
jecxz
icebp
mov
pusha
xchg
jle
negb
add
scas
in
sahf
outsb
sbb
xchg
popa
sub
out
insb
push
adc
adc
pop
fiaddl
enter
cmp
adc
mov
push
jmp
inc
mov
testb
xchg
in
xchg
cs
push
sbb
mov
and
js
imul
pop
clc
push
lods
fcompl
xchg
int3
mov
cwtl
stos
mov
xlat
btr
addb
xchg
out
adc
cmc
fucomp
stc
int3
or
cmp
cld
mov
and
jne
negl
nop
sarl
test
pop
movsl
sub
cmp
clc
je
and
fstl
inc
push
mov
sarl
cmp
pop
fisttps
mov
aam
jns
xor
or
mov
jmp
movsl
lcall
and
pop
add
pop
jmp
pop
loop
push
es
inc
pop
sub
sbb
mov
shrb
jg
xchg
sub
push
insl
mov
pop
shl
add
das
cmp
scas
inc
in
or
fisttpl
push
cld
xlat
cwtl
mov
test
push
aaa
divb
lcall
fdivrs
pop
and
sub
mov
dec
mov
or
jp
scas
or
or
stos
cltd
mov
mov
cmp
int
xlat
dec
fs
adc
dec
cltd
test
les
jle
jg
inc
fs
shll
ficoms
cli
cmp
adc
inc
hlt
push
pop
test
and
xchg
iret
nop
dec
outsb
lds
and
jmp
andb
or
push
or
push
jb
mov
dec
rcll
imul
add
fiaddl
sahf
inc
lret
xor
lods
gs
ss
cmpl
and
sar
cmp
and
lods
mov
out
fwait
inc
test
and
xchg
mov
aaa
sahf
addr16
pusha
xchg
mov
sahf
sbb
repnz
pop
icebp
les
push
mov
nop
insl
mov
lock
or
xor
pop
mov
cmp
js
sti
jg
jb
add
shl
cmc
mov
pop
sbb
imul
inc
mov
fists
aas
mov
gs
push
push
sbbl
xor
pop
mov
mov
xor
and
mov
fs
mov
rcrb
popa
adc
nop
add
lret
push
add
or
and
insb
push
fwait
jne
cld
aad
ljmp
xchg
loop
pop
lret
and
incl
pop
int3
mov
ret
jg
cmp
mull
mov
pop
add
or
jp
and
loop
lds
cwtl
out
loope
stos
in
test
pop
xchg
sub
jmp
and
int
xchg
in
ret
sti
lods
cmp
pop
lds
sub
mov
lcall
sbb
je
xchg
cs
jns
mov
aad
cwtl
int
shl
jge
int
in
push
test
fsubrl
lcall
pop
imul
add
pop
jnp
dec
ja
pop
mov
aas
orl
dec
cmp
jne
inc
jp
adc
clc
orb
mov
sbb
mov
shlb
xchg
or
or
jmp
shl
les
dec
pop
push
mov
pusha
in
enter
sarb
out
mov
nop
fimuls
imul
mov
pop
jmp
mov
jg
mov
push
into
lcall
push
sbb
popf
ficomps
dec
lods
cld
jb
sub
stc
push
lds
aad
fidivs
cmp
rolb
mov
xchg
and
cmp
cltd
and
jmp
add
repz
add
scas
outsb
add
data16
sbb
loope
and
fnstcw
jg
std
in
jg
mov
cmp
pop
decb
iret
mov
les
shl
add
dec
dec
iret
popf
push
sub
xor
sbb
lea
cmpsl
jg
xor
xchg
loope
xchg
jo
comiss
ds
pusha
cltd
int3
xor
in
shlb
mov
std
out
leave
and
loopne
or
out
cld
jle
or
fs
rcrl
adc
dec
sub
mov
leave
aas
push
push
lcall
sahf
fmull
sbb
xchg
mov
sub
mov
xor
push
cmp
push
mov
shll
arpl
and
inc
xor
mov
out
mov
mov
mov
push
lcall
jecxz
xor
mov
add
mov
nop
stos
jns
mov
and
sbb
sarb
ja
stos
cmp
mov
clc
xchg
aad
sbb
mov
loopne
mov
or
sub
cmpsl
cmp
push
adc
push
ds
nop
xchg
movsb
fs
fisubl
add
jns
insl
push
xor
add
iret
mov
insb
hlt
icebp
or
sbb
stc
add
lock
cmp
push
and
movsl
sub
jle
and
push
pop
inc
mov
cmp
or
jg
sbb
movsl
out
pop
shll
imul
pop
mov
push
mov
add
movsb
iret
pushf
sub
push
cmp
in
enter
orb
fs
xchg
pop
ret
rolb
test
dec
adc
mov
pushl
scas
sbb
adc
jno
sub
mov
lock
push
popf
aam
repz
cmovne
xchg
imul
pop
push
loop
adcb
pop
aad
aad
mov
add
call
int
pop
inc
mov
jp
push
sbb
and
sub
mov
xchg
jo
in
cltd
popf
cmpsb
sub
gs
or
mov
fisttps
ret
xchg
push
xchg
negb
xchg
lds
adc
push
jg
lock
jb
mov
mov
adc
dec
subl
pop
sub
sub
outsl
xlat
leave
arpl
or
test
scas
ror
dec
fldenv
insb
dec
adc
xchg
in
lret
jbe
mov
std
mov
inc
pop
cltd
lods
dec
cmp
or
movl
and
out
imul
dec
dec
mov
in
push
fstpl
leave
and
jns
cld
adc
shrb
push
insb
cwtl
sbb
into
pop
push
inc
aas
jl
std
mov
pop
dec
sahf
mov
mov
enter
fnstenv
out
popf
pop
repnz
sahf
or
sbb
xchg
sbb
push
add
outsl
popf
xlat
js
fldcw
pop
bound
dec
leave
xchg
out
push
cwtl
pop
int3
mov
or
mov
sbb
enter
mov
adc
xor
sbb
out
rorb
push
in
loopne
loop
adc
das
push
vhaddps
cld
mov
aad
nop
repz
rorb
test
scas
inc
inc
arpl
ret
or
dec
std
divb
mov
shll
xchg
cltd
dec
jmp
sbb
push
lock
xor
fs
pop
jno
dec
sbb
ficoml
dec
jl
inc
out
xchg
cwtl
in
out
inc
adc
loopne
sub
stc
outsw
test
xchg
sbb
mov
testb
repnz
xchg
mov
mov
mov
adc
cmp
inc
ljmp
cs
jno
push
and
push
lret
lods
fwait
adc
fs
push
sbb
insl
in
idivl
jmp
aas
das
sbb
or
icebp
call
sarl
and
sub
shll
fidivrl
xor
out
repz
xlat
jg
or
int
cmc
pop
xor
adc
je
jp
mov
inc
popa
adcl
xchg
test
loop
jg
mov
in
pop
divb
popa
cmc
and
cmpsb
dec
mov
insb
mov
jae
ds
loopne
and
sbb
movsl
mov
xlat
cli
mov
jp
pop
shl
nop
stos
popf
sub
insl
stos
xor
jns
add
inc
xchg
sbb
pop
and
shlb
push
aad
jecxz
xchg
mov
xchg
sahf
add
les
inc
das
jle
add
sub
fldl
je
jp
or
xor
fimuls
mov
fdiv
fpatan
es
fscale
clc
lds
xchg
sarl
mov
sbb
int
sbb
daa
pushf
mov
in
pop
pop
fstps
decb
xchg
jg
je
je
or
dec
xchg
in
dec
fidivrl
mov
fldt
clc
jb
add
adc
xchg
or
cmp
dec
add
mov
imul
out
mov
push
lea
lahf
fistpll
pop
pop
cmp
jns
int3
pop
add
or
pop
ret
cmp
decb
insb
shl
sub
fwait
test
ja
and
push
mov
sub
inc
adc
int3
inc
push
fcompl
fsubrs
jg
dec
mov
scas
cwtl
mov
or
xor
jno
out
jbe
js
mov
cmp
int
lock
push
push
push
sbb
and
adcl
sbbl
ds
ds
jmp
cld
lcall
insl
shll
jecxz
shrl
lods
mov
adc
sbb
hlt
add
fimull
cmpb
lods
outsb
into
ss
mov
test
cli
pop
js
push
sub
push
jmp
mov
adc
jno
sarl
cmp
cltd
cmpsb
mov
and
gs
pop
in
in
xor
data16
sbb
outsb
add
mov
fisubrl
inc
bnd
out
call
pusha
aam
push
repz
mov
negb
lds
lea
mov
jae
fcoml
jne
dec
mov
imul
mov
cmpsl
loopne
mov
test
add
pop
sti
sub
shr
lods
movsl
inc
mov
repnz
xchg
sub
xor
aam
lret
adc
daa
arpl
cld
imul
or
rorl
sbb
pop
lds
inc
push
cwtl
mov
jl
shl
sbb
je
sar
mov
outsb
int
gs
push
mov
mov
leave
and
jnp
je
in
mov
inc
int
loope
xor
imul
jbe
pushf
dec
movl
jp
pop
mov
test
and
cmp
sub
pop
in
mov
aaa
sahf
xchg
in
mov
shl
fs
arpl
iret
xor
cmp
sbbb
fmull
push
mov
jp
out
cmp
pop
xchg
push
lret
popa
xchg
sub
sbb
in
insl
xlat
arpl
mov
mov
clc
leave
fldt
call
adc
lret
pop
iret
xor
push
jo
cmp
xchg
aad
popf
std
stc
lcall
lock
xchg
pop
fwait
jecxz
sahf
ror
dec
mov
lcall
mov
xor
sub
jecxz
or
in
movsl
popf
and
jnp
mov
jge
adc
push
stc
test
test
lahf
scas
lahf
cmpsl
rcr
xlat
cld
jns
or
jle
int3
cmpsl
jae
loop
pop
ret
mov
aas
das
aas
pop
fwait
dec
outsb
ljmp
shlb
in
jmp
fwait
aas
enter
jbe
jl
sbb
and
idiv
lock
xor
xor
repnz
or
jge
hlt
and
mov
fs
popa
ds
ficomps
pusha
aas
xor
les
jo
pop
mov
mov
in
pop
add
mov
mov
mov
arpl
movsb
pop
iret
sbb
cwtl
shlb
jbe
inc
adc
push
jne
push
movsb
sub
jae
add
insb
jp
testl
scas
mov
lahf
jmp
adc
or
dec
xchg
inc
inc
push
in
xor
pop
mov
jno
sub
shll
mov
push
test
call
xchg
ds
mov
movsb
lcall
xor
cmp
cmp
push
inc
idivl
mov
sti
mov
shll
pop
das
pop
cld
or
mov
jp
hlt
push
ficoml
dec
mov
aas
adc
sahf
mov
mov
adc
cwtl
in
nop
inc
inc
pushf
sbb
mov
mov
imul
ret
dec
xchg
push
or
push
incb
int
int
pop
jo
cmovle
xlat
dec
inc
mov
push
push
int3
das
sub
jle
out
fists
es
int3
jns
aad
xor
test
nop
and
cld
fsubrs
stc
jne
inc
addr16
in
sub
scas
ds
dec
mov
ljmp
sbb
mov
sbb
pusha
or
mov
xchg
repz
sbb
lret
add
or
and
loopne
mov
ss
mov
sbb
sbb
ds
jp
fsubr
pop
arpl
dec
test
xchg
xchg
loopne
xor
jns
iret
push
push
cmp
cs
aaa
lret
das
into
and
add
and
jae
jae
repz
movsb
mov
cwtl
add
push
xlat
dec
in
cmc
jae
inc
dec
loop
cld
or
jmp
lods
pop
jmp
cli
sbbb
mov
adc
lods
xchg
std
cmp
in
mov
add
pop
mov
int3
bound
jns
flds
mov
add
mov
push
or
cmp
jne
push
push
xor
bound
loopne
imul
lahf
mov
popa
push
mov
les
popf
es
dec
jbe
scas
mov
push
add
add
mov
movsb
pop
test
jbe
movaps
sub
pop
orl
inc
jmp
xor
pop
pushf
fwait
aad
mov
push
jmp
aaa
test
mov
xor
out
jae
xchg
push
daa
jno
mov
aad
fstps
mov
jb
insb
or
in
mov
jecxz
xor
mov
ret
aaa
mov
mov
cmp
push
pop
adc
jp
aam
call
jge
cs
cmpsb
loopne
in
pop
lods
jg
outsl
in
adc
mov
and
bound
dec
mov
aad
mov
test
lret
pop
and
push
mov
scas
add
mov
or
ficomps
shll
add
mov
sahf
ljmp
movb
and
scas
mov
sbb
sbb
cmpsl
call
out
aaa
es
push
sbb
fcoms
imul
adc
adc
xor
sub
iret
jmp
cmp
pop
fwait
call
int3
insb
xor
subl
out
shrl
lods
fists
xor
ret
inc
lahf
popa
ja
or
fwait
int3
aam
push
arpl
xchg
mov
arpl
sarb
enter
fisubs
daa
pop
jecxz
cmp
xor
mov
rolb
push
mov
shrb
and
dec
pop
fdivl
cmc
push
mov
jl
add
movsl
addb
sbb
push
cmp
cltd
out
xor
movsb
movsl
pop
std
pop
mov
xchg
scas
clc
in
adc
bnd
push
xchg
movsl
lds
imul
add
stos
and
push
or
aas
mov
sub
icebp
das
out
jmp
insl
loopne
push
jnp
fwait
rcll
movq
fiaddl
jp
fists
addb
or
push
adc
out
test
lret
jmp
mov
and
cmp
dec
xor
aas
leave
fwait
scas
scas
popa
sub
jl
sub
add
scas
ret
roll
imul
and
imul
cmpb
jle
insb
fwait
ja
sbb
push
fstpl
jae
jl
and
cmp
mov
xchg
mov
leave
add
shll
jb
insb
roll
push
jns
xchg
pop
mov
nop
aad
sahf
jle
jns
push
cmc
imulb
jne
lock
rolb
cltd
cmp
sub
out
lret
jp
mov
jmp
movsb
sub
hlt
mov
cltd
xchg
outsl
pop
push
sbb
lret
test
popf
jbe
sub
jmp
call
jbe
clc
ror
lret
movsb
pop
outsl
popa
orb
out
push
fnstcw
jmp
and
je
jp
imul
call
rclb
repz
or
adc
dec
xchg
sbb
mov
pop
pop
and
inc
bnd
pop
setnp
sub
pusha
cmpsb
and
adc
inc
xchg
jb
dec
das
mov
inc
xor
sbb
sub
outsl
adc
pop
xor
gs
sbb
push
hlt
pop
push
pop
jmp
into
test
pop
mov
es
ret
lahf
popa
mov
or
jge
fdivs
mov
sub
sbb
xchg
mov
arpl
lea
add
fcompl
loopne
mov
pop
out
in
pop
and
fisubrs
pop
int
adc
repnz
inc
or
ret
out
out
jo
pop
sahf
cmp
sarb
insb
pushl
inc
mov
dec
test
mov
shr
xchg
in
lds
jecxz
outsl
mov
cmp
jmp
aaa
adc
mov
push
fwait
test
das
pop
sbb
test
scas
fwait
mov
jecxz
outsb
xchg
pop
stos
shll
cltd
adc
out
popa
ljmp
jmp
fisttpl
leave
popa
rcrl
filds
addr16
pop
test
fs
rcr
inc
outsb
das
fcmovbe
fwait
mov
and
lods
cmpsl
xor
jne
daa
repz
push
inc
and
inc
stos
movsb
cli
pop
push
cmpsb
cmc
ss
cltd
testb
mov
test
mov
int
outsl
out
test
dec
xor
mov
stos
add
lret
lret
or
pusha
adc
dec
dec
dec
sub
xchg
clc
inc
into
inc
mov
xor
add
mov
pop
in
sbb
inc
xchg
pop
scas
pop
mov
hlt
mov
adc
cmp
test
xchg
movsb
cmp
sub
fdiv
fisttpl
xchg
out
std
call
lcall
bound
outsb
adc
icebp
push
iret
in
bound
in
xchg
popf
pop
and
outsl
popf
push
clc
sub
xchg
call
mov
and
or
jle
add
inc
setle
push
repnz
adc
push
ret
jnp
insl
mov
mov
cmp
cmp
lock
ret
popf
hlt
dec
ret
scas
mov
mov
pop
push
fildl
rclb
nop
push
and
sbb
incl
cmc
jle
movsb
call
pop
fdivs
repnz
sub
lret
adc
in
out
xor
dec
lahf
daa
xchg
stc
int3
push
in
stc
rorb
in
cs
outsb
mov
scas
xchg
push
lods
pop
push
jg
ret
xchg
leave
ret
arpl
mov
mov
scas
dec
mov
dec
cmp
ljmp
ljmp
cmove
loope
inc
and
mov
cltd
or
roll
xchg
sahf
mov
clc
outsl
pop
jecxz
fs
or
ficompl
addr16
ja
je
xlat
jb
incl
adc
sbb
scas
sbb
addr16
push
mov
dec
les
dec
add
jle
nop
loop
ss
sub
mov
and
ds
mov
push
xor
lahf
outsl
xchg
mov
lret
cmpsb
es
out
clc
jb
ds
inc
xchg
fmull
outsb
daa
scas
add
or
mov
mov
fistps
mov
jno
or
fmull
lock
cltd
or
cmpsb
aad
scas
movb
sbb
inc
ret
and
in
or
dec
mov
cmp
jge
mov
mov
fsubrs
js
add
mov
fiadds
fdecstp
jae
icebp
js
mov
movsb
loope
call
rclb
test
pop
sub
pop
out
pushf
and
imul
stos
push
pop
jecxz
mov
ljmp
loopne
jl
sub
cmp
xor
push
mov
aaa
xchg
pusha
stc
mov
mov
call
add
and
mov
xchg
dec
sub
push
lahf
imul
lcall
iret
push
add
pusha
jb
sbb
pop
lods
pop
loopne
mov
test
sahf
stos
fwait
shl
push
clc
add
rcrb
adc
fdivr
aam
pop
xlat
cs
and
and
testb
arpl
sub
cmp
xor
mov
adc
ret
mov
or
inc
ret
or
sub
and
sub
mov
xor
divl
mov
mov
fidivrs
popa
push
ror
adc
mov
mov
xchg
inc
push
lods
mov
jbe
in
aam
xcrypt-cbc
cmpsl
push
or
out
lea
iret
imul
and
xchg
inc
and
cmpsl
mov
scas
pusha
mov
push
out
into
jge
loop
imul
in
jne
fldenv
mov
cmp
cmp
mov
lea
pop
call
insb
push
mov
movsl
add
and
jle
clc
fwait
sub
popa
pop
loope
pop
adc
push
dec
lock
insb
insb
fdivrl
dec
rcl
dec
xchg
notb
mov
pop
xor
sbb
or
mov
orl
in
sbb
fwait
jecxz
cmp
sub
in
push
sbb
imul
or
cmp
sbb
pop
cmp
push
cmp
dec
mov
ja
mov
dec
arpl
push
bnd
ret
shl
aaa
push
push
dec
push
in
test
lock
out
andb
xchg
and
stos
xchg
sub
inc
pop
jae
cmp
jne
xchg
push
cltd
std
sub
xchg
cli
dec
leave
outsb
push
call
cmp
cmpsl
vprotd
sbb
mov
dec
inc
std
sbb
aam
call
push
ljmp
mov
push
in
pop
je
cmp
cmpsb
adc
aaa
mov
inc
push
loope
mov
call
adc
mov
loop
icebp
sub
hlt
pop
movb
pop
jne
xor
dec
loopne
cmp
cmpsb
jp
jle
mull
movsb
mov
inc
mov
test
stos
rclb
fucomip
icebp
cmpsl
cmp
ds
pop
pop
mov
fwait
mov
push
aaa
dec
jmp
dec
xor
pcmpgtw
test
push
pop
dec
push
mov
les
jae
loope
dec
jg
mov
push
pop
and
or
dec
pop
cmpsl
push
mov
mov
inc
mov
or
shr
sub
dec
or
inc
js
pop
or
sti
xchg
inc
scas
mov
mov
add
outsb
int
and
pop
or
or
aam
pop
dec
sub
push
xorb
dec
adc
scas
fcoms
add
lret
cmp
lods
mov
pslld
notb
gs
loopne
clc
nop
push
mov
and
fistps
int3
sub
mov
push
test
jno
push
mov
fmull
fidivrl
loopne
jecxz
aad
test
adc
and
jnp
xlat
pop
jp
xlat
repz
imul
mov
xor
mov
cld
mov
mov
test
mov
jno
ja
dec
bound
mov
ficomps
sbb
xchg
add
shll
mov
leave
or
push
imul
ror
shl
adc
inc
stos
dec
andl
daa
xchg
push
sub
movsb
cmp
mov
dec
lods
adc
bound
or
js
ljmp
mov
push
test
mov
enter
sbb
cmp
mov
cmp
loop
and
outsb
cmp
adc
lret
cmp
aad
nop
rcrl
and
cmpsl
jbe
pop
cmpsl
pop
mov
fiadds
insl
xchg
inc
push
repz
sub
cwtl
nop
mov
fists
or
add
addb
or
push
sub
cmp
pop
icebp
fildll
sbb
fisubl
cs
fsubrl
mov
iret
mov
push
push
inc
jl
push
pop
je
imul
imul
sbbb
or
nop
inc
imul
sbb
idivl
or
add
outsl
in
jo
sahf
lods
icebp
cmp
sbb
cmp
and
inc
mov
ljmp
test
push
xor
push
dec
mov
push
nop
jmp
jne
insb
out
xadd
mov
sbb
mov
or
movsb
push
mov
rclb
mov
mov
adc
mov
pop
or
add
insb
push
mov
in
dec
out
test
cld
xor
movsb
test
nop
cmpsb
mov
inc
sub
mov
fldl
mov
jb
push
jo
in
xor
adc
rolb
cltd
xchg
fwait
push
adc
jmp
xlat
fiaddl
sbb
roll
inc
mov
pusha
hlt
mov
cmp
jecxz
add
in
sbb
push
in
mov
mov
jno
mov
mov
lods
jns
cmp
in
inc
fldl
jbe
in
stc
sub
enter
or
adc
stc
dec
add
scas
push
inc
jbe
xchg
sbb
lock
andl
pusha
mov
int
shrl
mov
sbb
pop
es
mov
xchg
push
mov
inc
sbb
stos
push
xor
adc
rorb
mov
adcb
aad
xchg
andl
cmp
mov
sub
adc
stos
jne
scas
adc
fs
lock
inc
cvtdq2ps
jmp
xor
cld
mov
aam
mov
jmp
mov
ljmp
jp
bound
cli
addb
cmpsl
dec
vcmplt_oqpd
ret
lret
aas
ja
mov
xchg
jecxz
js
pop
ret
movsl
and
push
or
aas
enter
add
or
push
andl
mov
sbb
cmpsl
xor
jmp
and
jb
mov
push
std
pop
jp
dec
add
lahf
insl
pop
repz
add
and
daa
push
xchg
hlt
dec
icebp
sub
add
push
out
jp
cmc
push
cli
loope
push
andb
popa
in
mov
test
adcb
popa
orb
cmpsb
pop
in
std
push
out
and
call
in
shll
sub
xchg
ds
and
mov
aas
add
mov
push
fists
push
cmp
icebp
loopne
pop
stc
pop
cmpsb
mov
or
arpl
dec
rol
dec
shrb
out
sub
jl
pop
mov
sahf
push
daa
mov
pop
push
insl
call
pop
lret
or
hlt
dec
inc
pop
sbb
scas
scas
pop
orl
adc
into
hlt
jns
xor
xchg
rorb
stos
hlt
hlt
jns
inc
cmp
mov
shlb
loop
add
les
xchg
cmc
pop
mov
push
fisubrl
cs
fsubp
roll
xlat
aam
daa
cld
in
mov
xor
sbb
mov
mov
into
lahf
cld
ljmp
mov
lahf
jae
and
ja
loop
mov
pop
pop
dec
add
cmpsl
out
cmp
cmpsb
or
inc
std
cmp
call
sbb
push
mov
out
and
lcall
mov
call
adcb
mov
iret
lods
fwait
push
cli
xchg
xchg
hlt
ds
lcall
sbb
adc
sub
aad
es
int3
cwtl
pop
imul
mov
out
stc
jo
daa
push
js
mov
jl
dec
jbe
pop
je
lcall
pause
mov
xor
xlat
in
aas
leave
inc
out
leave
aam
icebp
imul
jge
ljmp
jl,pt
dec
popf
icebp
xchg
lods
pop
adcl
inc
mov
ljmp
imul
in
sub
mov
mov
jnp
dec
xor
xchg
cmp
fdivrs
push
loopne
insl
fs
jbe
nop
inc
inc
push
xchg
mov
mov
mov
pop
xor
dec
add
push
pop
movsl
pop
adc
lods
lea
aam
loop
add
out
nop
cli
adc
ja
mov
adc
cmc
inc
aad
and
lock
pushf
adcl
insb
sub
mov
jle
sahf
scas
shlb
out
insb
in
inc
fs
xor
pop
in
mov
add
cld
gs
arpl
lea
add
fldcw
cwtl
aaa
cmpsb
sub
add
dec
xchg
out
aam
inc
xchg
xchg
xchg
xchg
or
pop
ja
cltd
pop
jge
inc
ds
push
rcrl
pop
dec
mov
adc
imul
in
cwtl
dec
aam
jp
lods
push
lock
aas
sarl
pop
sbb
inc
loope
popf
stos
cmpsl
iret
cltd
adc
es
call
jl
mov
dec
fbld
dec
jbe
adc
imulb
cmp
std
jge
pop
lods
push
ficomps
and
not
sub
cmp
xor
push
fbld
lret
stos
in
cmp
jns
sbb
push
iret
push
add
push
je
movsb
push
out
out
call
jb
mov
jle
add
xchg
test
xchg
dec
repnz
insl
test
xchg
cmpsl
lock
out
sbb
mov
fcomp
shrl
divb
or
ds
push
mov
cmp
pop
push
stos
test
popa
add
sahf
inc
jge
faddl
adc
ljmp
cmpsl
sahf
test
test
add
add
mov
dec
das
jge
fiaddl
push
and
aam
inc
jle
push
lahf
ss
pop
notb
push
out
pop
cmpsl
in
popa
inc
addr16
stos
push
jns
push
push
sbb
add
jae
cmp
imull
movsl
call
setno
xor
movsl
mov
pop
xchg
mov
mov
mov
xor
adc
stc
dec
sar
mov
mov
adc
sub
popl
movsl
xchg
sbb
xor
notb
xchg
sub
negb
cltd
rcll
xchg
xchg
movsl
sbb
jns
aas
sahf
out
jae
in
test
rorl
lret
adc
fwait
xor
push
movsbl
insl
movsl
push
jl
fldenv
insb
and
clc
cmp
jo
int
pop
lahf
aaa
movsl
iret
jns
repz
hlt
mov
jbe
leave
and
loop
test
dec
push
inc
fwait
xchg
lcall
aad
sub
fwait
dec
pop
cmp
lods
rolb
data16
pushf
mov
das
rorl
lods
jp
sahf
dec
sub
in
pop
std
ja
mov
jns
xchg
jl
push
repz
jmp
cwtl
scas
and
mov
push
dec
adc
cs
adc
cs
jb
jns
add
sbb
add
insl
jo
mov
shlb
pusha
and
pushf
lea
pop
pop
clc
jne
clc
ljmp
test
xchg
mov
jns
cmp
mov
or
loope
ss
mov
subl
mov
jl
push
jle
push
imul
ja
xchg
pop
sbb
pop
add
into
mov
or
sbb
and
pushf
xor
adc
movsl
imul
arpl
jge
int3
jne
pop
mov
inc
dec
pop
adc
mov
cld
insl
jecxz
fwait
mov
pop
sub
call
sbb
cmp
out
test
inc
ret
dec
jnp,pn
sub
jecxz
pop
jbe
mov
int3
push
sahf
jno
loope
aaa
jle
cmp
mov
sbbl
xchg
and
shrb
sbb
pop
out
xor
movsb
mov
jmp
fisubrl
dec
pop
leave
lea
add
aam
loop
testb
push
push
mov
enter
pop
stos
xor
add
in
mov
imul
push
into
pop
bound
leave
push
insb
in
lret
pushf
fisubs
cwtl
ss
pop
sub
mov
dec
inc
sub
aam
adc
jbe
mov
addr16
cmc
push
repnz
jae
dec
insl
mov
add
ds
push
aaa
std
mov
mov
imul
pop
cmp
aam
lret
cli
sub
shr
in
aas
jl
jecxz
rcl
fdivs
pop
test
pop
lock
aad
cli
pop
cmpsb
mov
xchg
test
push
push
and
icebp
int3
sbb
xlat
add
pop
push
mov
jle
movl
shll
fidivl
adc
sahf
nop
lahf
daa
out
xor
pusha
je
cltd
or
inc
mov
jmp
flds
add
inc
ficomps
pop
fidivs
stos
icebp
daa
bound
sbb
adc
loopne
sbb
lock
scas
dec
lahf
cmp
ret
sbb
das
cmp
xor
fwait
cmc
pop
lcall
icebp
daa
pop
mov
call
dec
xor
push
movsl
cltd
or
notl
ja
mov
movsl
and
mov
nop
sub
rcl
mov
and
notb
es
insb
das
sbb
leave
dec
test
sti
dec
cmp
sbb
dec
push
stos
jle
pop
xchg
adc
xor
ret
sub
ficompl
and
daa
out
inc
leave
xchg
jb
jmp
sbb
push
xor
es
hlt
imul
movsl
into
inc
push
scas
pop
mov
jnp
addl
cmp
cli
dec
ds
fdivs
lea
push
shrl
outsl
loope
popa
xchg
xor
lahf
jge
dec
cmp
xchg
push
iret
loopne
pop
add
sub
and
popa
lea
and
cmp
push
jae
out
fildl
xor
arpl
sbb
rorl
mov
sbb
jle,pn
jbe
mov
das
sub
mov
test
daa
mov
cmpb
data16
lret
cltd
push
testl
push
nop
in
push
jecxz
sub
sub
pushf
push
icebp
mov
mov
mov
add
push
xor
mov
mov
sarl
and
push
mov
jmp
sub
fisubrs
ljmp
mov
mov
inc
xchg
fcomps
fs
jle
loopne
xchg
pushf
and
cmpsl
in
fs
cld
mov
aas
dec
divb
shrd
out
mov
or
leave
dec
adc
pshuflw
pop
dec
fidivl
push
pop
pop
fcomps
lock
sub
push
and
mov
push
fwait
mov
mov
incl
inc
loopne
aam
mov
insl
adc
adc
add
movsb
sti
cli
mov
clc
pop
fadds
push
sub
lret
adc
ja
xchg
aas
inc
test
xchg
std
lods
inc
sub
push
ret
inc
call
shrl
dec
lcall
xchg
ret
inc
add
into
mov
pop
subb
out
leave
mov
xor
mul
ret
mov
push
mov
xchg
out
sarl
mov
out
sub
outsl
adc
fcompl
ret
add
popf
pop
adc
pop
leave
testb
sub
push
inc
sti
insl
mov
hlt
inc
sbb
adc
iret
je
cmpsb
scas
pop
mov
imul
scas
aas
adc
test
mov
mov
sub
xor
sbb
daa
mov
sarb
xor
lahf
lods
mov
stos
mov
xchg
in
or
cmpsl
int
pushf
bound
pop
stos
xchg
and
fcom
cmp
push
add
fldl
push
adc
xchg
ss
jae
lock
sub
mov
add
jge
popa
addr16
out
sti
aaa
cmp
jg
movsb
xchg
nop
mov
pop
call
daa
mov
in
push
jmp
inc
add
adc
xchg
out
dec
mov
sbb
mov
pushf
cmp
mov
mov
adc
cmpsw
gs
add
pop
je
xchg
push
or
popf
push
insb
std
inc
in
push
jbe
sbb
jle
lods
test
addr16
xchg
adc
pop
add
push
push
mov
adc
pop
mov
inc
sbb
bound
dec
fmull
insl
mov
pop
or
push
cmpsb
scas
dec
or
aaa
push
clc
xor
jb
shrl
pop
add
repnz
imul
dec
sarb
clc
xlat
mov
jo
lock
and
mov
insl
icebp
int3
test
ret
data16
or
mov
test
adc
je
in
push
jge
inc
push
add
sahf
dec
adc
shlb
mov
add
inc
push
imul
push
dec
bts
andl
mov
mov
nop
push
add
or
add
inc
or
or
xrelease
iret
push
adc
rcrb
pop
incl
cmpb
in
out
bound
bsr
dec
lcall
push
fisubl
sbb
add
pop
ds
pop
insb
xchg
cmp
in
cmp
lcall
loope
xor
cltd
rolb
cli
arpl
cmp
fnstenv
and
mov
dec
iret
xchg
inc
sbb
mov
or
repnz
push
adc
jge
mov
cmp
test
pushf
jno
scas
jb
sti
repnz
add
inc
jae
pop
sbb
popa
mov
fisubs
ss
pop
jl
inc
or
mov
mov
les
rorb
sub
out
push
inc
lret
adc
add
mov
ret
movsl
std
test
and
xchg
push
inc
enter
stc
adc
lea
sti
dec
mov
and
aad
jno
push
lret
adc
rep
lods
and
iret
fiadds
dec
xor
cmc
cmp
js
clc
jbe
mov
enter
xchg
icebp
add
fidivrs
divb
subb
add
clc
clc
jae
mov
pop
pop
jl
pop
scas
cmp
xor
dec
ja
push
sub
test
dec
xchg
push
dec
stos
jge
sbb
inc
inc
sbb
dec
stc
aam
cwtl
cmp
int
outsb
sbb
jl
inc
lret
cltd
popf
or
das
outsb
mov
lcall
jle
shr
xchg
movsb
push
jle
jp
lods
es
movsl
xor
lds
sub
je
ljmp
dec
xchg
aas
mov
dec
jb
xor
add
add
mov
rcr
lahf
xchg
xlat
sbb
xor
and
push
fisttpll
jle
lock
ficoml
test
push
lea
sub
or
mov
int3
or
inc
or
adc
fwait
jae
adc
xlat
rolb
divb
pop
push
rcrb
in
push
xchg
dec
xchg
and
shl
inc
mov
cltd
or
outsl
fdivrl
sbb
sahf
dec
xchg
cmpsb
add
in
in
mov
in
int
push
inc
xor
cltd
insb
xor
jb
mul
outsl
jmp
ss
lods
push
xor
dec
push
mov
push
icebp
sbb
out
inc
xor
pusha
sbb
adc
je
sbb
aaa
test
or
add
addr16
mov
and
dec
push
inc
mov
push
sub
call
cwtl
xchg
outsb
orb
lods
fucom
sbb
pop
and
leave
and
scas
pop
outsl
mov
arpl
fadds
push
mov
mov
sub
fisttps
lds
jle
jle
adc
mov
outsb
iret
sub
daa
stc
mov
idivl
cs
lcall
push
xchg
mov
cmp
sub
imul
ret
loop
lahf
or
cmc
inc
or
cli
test
sub
xchg
cwtl
mov
rorb
andb
fsubl
filds
bound
mov
mov
mov
outsl
sub
mov
or
sub
out
ds
push
mov
icebp
mov
cs
rorb
mov
jae
shr
pop
sub
mov
pop
dec
inc
loope
mov
movsl
sub
mov
inc
es
aas
daa
fldcw
iret
out
inc
jns
ja
lds
js
xchg
movsl
outsl
xchg
ja
icebp
mov
in
pop
inc
repz
testb
sub
je
mov
movsl
leave
mov
aad
lods
ret
scas
jbe
insb
or
daa
or
xor
or
nop
push
jg
out
call
dec
int
inc
cmpsl
mov
repz
daa
mov
pop
ret
pop
xor
and
sbb
mov
lret
jno
dec
testb
mov
mov
fs
mov
xor
xlat
adc
jb
fcomip
add
jns
adc
jb
cltd
sti
mov
push
jbe
outsb
add
sahf
mov
pushl
add
clc
jecxz
cld
mov
jle
add
dec
push
cmp
shrb
cli
mov
and
loop
push
push
addr16
fwait
imul
or
sbb
gs
lahf
aam
adc
rcll
cmp
push
idivb
add
adc
icebp
sub
xchg
or
movsb
xchg
dec
add
je
out
jo
mov
pop
xchg
adc
fstl
jo
lret
iret
add
pop
pop
repnz
loope
or
in
aaa
cltd
andl
test
pop
mov
sub
ljmp
je
imul
sbb
es
add
adc
jl
add
mov
xchg
add
mov
pop
nop
lahf
jmp
inc
pop
mov
sbbl
mov
pop
pop
int3
les
pop
clc
aaa
test
ljmp
ja
loop
lock
aaa
repnz
mov
imul
xor
xor
stos
lods
xchg
repnz
ret
fs
xor
adc
mov
lret
test
sbb
jno
int3
scas
les
arpl
fwait
aad
imul
sbb
push
pop
dec
sub
sbb
and
xor
testl
add
popf
xchg
mov
mov
int
clc
fstl
xchg
testl
and
movb
int3
cmp
xchg
mov
mov
push
repz
mov
cmpsb
popf
fidivs
sti
int3
orl
stc
lahf
iret
add
leave
scas
movsb
push
add
es
out
loope
aad
adc
popf
and
fdiv
jle
daa
mov
inc
bnd
cmc
insl
jno
cmp
adc
add
in
icebp
sahf
ja
sbb
call
xchg
ljmp
imul
xorl
mov
xorb
call
dec
jecxz
in
pop
inc
sbb
add
inc
fisttps
into
push
dec
jnp
push
mov
in
outsl
dec
hlt
jmp
and
ja
push
ja
cmpsl
orl
loopne
lock
inc
hlt
clc
push
sub
mov
rcrl
jle
loop
repz
jmp
int
pop
sub
or
nop
outsl
mov
mov
movsb
sub
scas
scas
xchg
inc
fistl
popa
out
pop
xor
jo
inc
sbb
sbb
scas
jb
mov
lahf
stc
adc
mov
inc
sub
add
mov
mov
push
ds
repz
mov
add
dec
pop
fldenv
mov
mov
jmp
lea
pop
mov
outsl
push
or
adc
dec
lock
or
xchg
jg
outsb
pusha
subb
cmpsb
fwait
adc
or
cld
jecxz
popa
or
outsl
xchg
push
not
push
sbb
into
push
inc
int3
cwtl
adc
leave
xchg
cmp
test
inc
je
pop
xor
or
jmp
cmc
sbbb
mov
inc
fcmovne
loope
sbb
sbb
lods
lcall
pop
sahf
pushfw
in
or
sub
iret
rcll
int
add
inc
ds
clc
aad
hlt
fsubl
add
xor
sbb
stc
cmpsl
jbe
imul
mov
ljmp
lret
dec
add
jae
mov
rol
push
insl
ret
call
sbb
mov
ret
enter
pop
fs
fcomps
mov
cltd
mov
clc
incl
scas
stos
dec
or
and
addr16
incl
cmp
mov
jbe
push
outsl
inc
movsb
mov
hlt
mov
inc
dec
mov
fildl
xchg
mov
xchg
sub
outsb
fwait
xchg
movsb
sub
in
add
sub
sbb
jmp
sbb
adc
loope
inc
push
cmc
pop
int3
pop
ss
inc
pop
cmp
mov
pop
mov
xor
notb
imul
push
xchg
dec
mov
out
cmp
icebp
call
out
mov
cmp
lahf
ja
shlb
xor
jo
pop
push
mov
imul
xor
jg
jo
jne
pushf
aas
orb
mov
mov
lock
mov
lock
xchg
clc
loopne
idivb
mov
popf
sub
lods
popa
ret
sub
mov
pop
pop
mov
pushf
push
in
jmp
outsb
ret
push
mov
dec
push
popl
pop
adc
mulb
addl
sub
cmpb
out
jle
jl
lcall
pusha
scas
sar
or
xor
dec
pop
xor
inc
add
mov
aam
push
in
ror
push
and
pop
inc
mov
and
adcl
mov
addr16
lods
and
pop
mov
out
mov
and
mov
add
outsl
ds
jne,pt
outsb
lds
sahf
or
pop
cs
inc
adc
js
xor
inc
es
daa
mov
enter
lret
ds
test
fstpt
loope
sub
sub
add
stos
jne
ret
pusha
fsave
push
pop
xor
cmc
scas
dec
or
call
adc
out
lods
mov
or
lahf
or
mov
push
pop
jae
loope
sarl
jl
xor
push
add
pusha
pusha
mov
sahf
sbb
pop
fstl
jl
pop
lods
pop
pop
pop
add
mov
jmp
hlt
lods
lock
mov
push
movsb
xor
imulb
pop
jne
and
xor
mov
test
loopne
push
xor
std
xchg
rol
imull
leave
cwtl
adc
cmp
mov
dec
dec
les
int
incb
stos
sbb
bound
hlt
jnp
into
fstps
lock
sub
cmc
jne,pn
and
xchg
sbb
imul
pop
movsl
dec
cmp
dec
cmp
cld
pop
pop
sub
cld
in
mov
inc
ret
dec
shl
jno
and
xchg
cmp
mov
imul
out
mov
mov
cmp
ds
push
cld
lods
mov
pop
call
jp
loope
xchg
flds
scas
adc
push
test
bswap
rorb
cmp
mov
sbb
mov
jmp
insl
or
xchg
xchg
mov
jmp
dec
pop
movsb
mov
sbb
xor
into
dec
sbb
push
shr
mov
aam
mov
pop
xor
cs
out
test
xchg
stc
mov
dec
xchg
mov
stc
push
fs
xor
pop
cwtl
sub
add
or
cmp
or
adc
dec
sub
jmp
sbb
lret
nop
lret
rolb
push
icebp
xor
sbb
sahf
sub
dec
add
inc
idiv
add
imul
loope
jg
shlb
fprem1
push
push
dec
fisttpl
mov
xchg
sbb
sub
xchg
mov
fptan
loopne
mov
inc
add
pop
adc
mov
jno
adcl
js
pop
shr
xchg
pusha
and
sbb
loopne
ljmp
in
dec
shl
push
dec
mov
dec
or
addl
lret
pop
push
mov
movsl
adc
jle
mov
test
jmp
jecxz
lahf
dec
into
adc
add
sbb
adc
or
add
adc
add
mov
inc
fldcw
and
or
push
xchg
aaa
notl
pop
ljmp
push
mov
push
rolb
movsl
push
push
lock
sbb
sahf
outsl
jmp
vmovd
test
inc
pop
push
leave
popa
adc
shl
inc
lret
call
std
imul
mov
mov
mov
push
push
ret
cwtl
lods
adc
popf
mov
aaa
mov
mov
aam
aaa
or
push
es
mov
sub
xor
mov
test
ret
mov
push
cmpb
xchg
push
mov
jae
add
cmc
add
dec
sub
sbbb
outsb
pop
dec
sbb
loopne
pop
outsb
mov
arpl
adc
into
and
add
test
mov
xchg
pusha
mov
js
lret
mov
dec
mov
inc
int
cmp
mov
lds
or
xor
cltd
pop
dec
adc
pop
aam
shlb
dec
adcl
nop
aaa
adc
xchg
inc
mov
inc
aad
sub
lock
int3
inc
jl
add
cmp
rcrl
loope
and
dec
lds
cmp
cmp
cmp
mov
xchg
push
push
add
and
xor
movsb
pop
cmp
cmp
cmpsl
test
push
andb
cld
mov
xchg
cmp
cmp
shrl
cmp
in
test
xor
aas
mov
jecxz
or
and
push
mov
cmpl
sbb
cs
inc
mov
rorl
push
cli
mov
stos
mov
adc
xchg
out
insb
sbb
mov
push
aaa
fmuls
in
xlat
shr
and
add
cmp
stos
add
xchg
shlb
pop
int3
push
cli
xchg
scas
test
jl
call
fldl
scas
in
xor
xor
inc
pop
push
mov
ss
int
mov
addr16
mov
stc
pusha
fisubrs
adc
xor
and
leave
lods
push
and
adc
pop
arpl
mov
movsb
pushf
or
mov
test
cmp
sbb
add
ljmp
mov
lock
ret
mov
ret
pusha
mov
imul
add
pop
es
mov
sub
rolb
cmp
push
jmp
fninit
push
lret
aad
pop
dec
ficoms
mov
or
loopne
mov
das
lods
lods
mov
mov
dec
outsb
cmpsb
dec
imul
jo
sbb
inc
add
and
shll
mov
jae
adc
pop
xor
aam
loop
in
sub
add
fidivrs
fstpl
dec
or
xchg
daa
cmp
outsl
rcll
jle
in
dec
pop
add
out
enter
frstor
adc
jne
scas
popf
adc
ficompl
cmp
xlat
rcrb
fs
ds
inc
inc
popf
mov
sbb
mov
and
sbb
ja
int3
push
in
adc
test
jge
xchg
and
je
push
sbb
mov
scas
inc
sti
ret
push
addl
out
inc
mov
adc
push
jecxz
push
cwtl
sbb
gs
hlt
ds
sbb
xor
add
or
sub
test
pop
push
das
repnz
cld
cwtl
sahf
in
jnp
jb
movsb
push
mov
lods
clc
ret
jp
xchg
dec
int
int3
int
aad
enter
fsubrl
mov
xlat
jbe
aam
dec
mov
mov
enter
push
jbe
aaa
dec
es
cmovbe
dec
addr16
mov
jns
lods
imul
xor
movsl
mov
loope
cwtl
fisubl
outsl
fwait
inc
push
mov
pop
enter
sbb
sahf
inc
cmp
je
push
jbe
pop
lods
xchg
stos
xchg
fcmovb
in
push
add
mov
dec
cwtl
jbe
add
ss
add
mov
xor
inc
pop
mov
das
pop
out
xchg
repz
lahf
mov
sbb
push
cwtl
imul
jmp
sub
in
sbb
add
repnz
xlat
pusha
push
xchg
sub
xlat
sbb
pushf
ror
sbb
xchg
cmp
sbb
xchg
mov
cmc
test
aam
aas
repnz
push
pusha
into
inc
in
jo
fcmovnb
cmp
nop
or
imul
repnz
in
dec
lods
sbb
push
stc
pushf
xlat
mov
daa
xchg
addr16
outsl
outsb
pop
push
xchg
mov
js
xchg
test
pop
sbb
lods
pop
pop
cmp
inc
in
xor
mov
mov
subb
cmc
pushf
aas
adc
xor
daa
ret
push
pop
and
mov
stc
fdivrl
inc
push
mov
icebp
lahf
add
mov
shrb
mov
xchg
fstps
scas
cmp
pop
aam
subb
or
rcll
inc
lahf
out
pop
inc
aam
pusha
scas
or
ja
lret
inc
push
pop
fxrstor
mov
daa
push
mov
pop
jp
rcrb
dec
cltd
imull
inc
call
add
test
scas
pop
outsl
inc
xor
adcb
stc
pop
inc
daa
cs
movsl
imul
xchg
pop
and
fsts
push
cltd
sbb
jge
jnp
das
xchg
jle
cmpsl
mov
mov
imul
mov
inc
loopne
int3
and
rcrb
out
scas
jle
sahf
jo
adc
data16
add
mov
or
push
and
in
jge
push
ret
arpl
sbb
jp
mov
sbb
movsb
sub
push
cmpsl
mov
mov
xchg
xchg
loop
aas
les
cmp
mov
adc
and
or
cld
lds
movsl
addb
es
xor
loope
or
shr
sbb
cmpsb
cltd
loopne
pop
loop
in
cmpsb
push
test
xor
lods
inc
add
jb
jae
in
ljmp
sbb
into
popf
or
es
mov
shlb
mov
flds
push
jle
nop
inc
mov
sub
into
sbb
jg
ja
fadd
mov
arpl
iret
and
test
pop
xor
jne
std
cmp
jle
push
jnp
enter
movsb
test
cmc
je
cmpl
jmp
jo
aad
adc
ljmp
cmpsb
lahf
cmc
mov
jnp
leave
xorl
push
push
push
test
jnp
sub
imul
fxch
iret
xor
orb
shrl
mov
iret
test
mov
xor
out
and
pop
xchg
mov
cmpsb
icebp
jne
loopne
mov
jae
pop
and
or
imul
mov
or
mov
shrl
test
aaa
ss
movsb
dec
push
das
je
cltd
pop
das
pusha
je
xor
jno
out
inc
imul
mov
scas
adc
xor
adc
mov
inc
lods
pop
out
sbb
pop
xor
add
ror
push
icebp
adc
push
insb
adc
movsb
push
cmp
or
stos
mov
dec
int
cmpsb
inc
lods
outsl
mov
cmc
imul
xchg
mov
in
repnz
dec
push
and
xchg
adc
fisubrs
fnstcw
scas
stc
pop
fwait
push
sarb
xchg
pop
xorl
lahf
fistpl
movsl
cmp
imul
dec
xor
mov
or
push
into
dec
cli
test
ja
lret
cmp
out
jp
jmp
lock
in
pop
stos
gs
sub
aam
aaa
mov
dec
movzbl
movsb
mov
mov
add
loop
lcall
inc
popf
ss
inc
pop
xchg
push
jge
call
lea
inc
push
jae
dec
push
jge
imull
jmp
bound
add
scas
xor
jb
das
sbb
sub
jae
fsubr
or
dec
arpl
test
mov
mov
loop
and
pusha
and
insl
push
push
xor
lea
mov
imul
mov
adc
rcl
cli
hlt
sub
insb
inc
or
push
nop
shr
dec
ds
cld
stos
in
inc
jl
ds
scas
push
loop
jmp
add
fcoml
and
adc
jae
das
test
js
movsl
outsb
xor
cmpsb
mov
imul
jae
xor
sbb
mov
mov
jecxz
mov
clc
mov
int3
add
and
sub
test
outsl
cmp
fisubl
lret
test
scas
mov
sarb
loop,pt
inc
es
mov
std
loop
fwait
js
and
sub
lcall
and
icebp
jp
sbb
out
mov
orb
adc
mov
ret
adc
cmp
add
or
sbb
imul
add
lea
popf
mov
nop
xor
cmc
dec
jg
pop
pusha
mov
mov
in
mov
int3
push
ja
jecxz
lds
sar
xchg
stos
cli
mov
push
aad
cmc
jnp
pop
dec
pop
push
jmp
call
fsubrp
push
or
sbb
js
or
ret
stos
in
mov
xchg
inc
xor
mov
insl
xchg
pop
mov
es
sahf
aam
push
lods
add
int
icebp
pop
and
out
call
and
jmp
arpl
popf
ja
out
clc
fisubs
sbbl
iret
cmpsl
inc
int
fidivrs
sbb
lea
mov
mov
mov
gs
push
ds
sahf
movsl
sahf
inc
in
lcall
lcall
ja,pt
and
xor
out
cltd
push
mov
dec
xchg
cmp
or
cwtl
cmp
adc
das
pushf
je
mov
mov
inc
cmp
xor
imul
int
stos
xor
adc
insb
movsb
or
dec
jnp
add
jge,pn
mov
sub
outsl
xchg
xchg
shll
cmp
inc
add
inc
jecxz
shrb
push
mov
rclb
pop
test
mov
xchg
push
jne
mov
imul
push
pusha
dec
mov
sbb
dec
and
adc
lock
cmp
push
les
sbb
bnd
push
daa
loopne
jge
push
push
cmp
mov
hlt
aas
xor
fsubp
mov
jo
mov
aaa
cwtl
xchg
and
push
sbb
shll
mov
adc
cmp
aam
mov
dec
adc
scas
iret
pusha
jns
cltd
dec
xor
adcb
cld
pop
rorl
outsb
or
jnp
push
pop
into
subl
sbb
mov
mov
mov
mov
push
inc
dec
dec
xchg
push
xchg
dec
jne
cmpsb
ds
lods
sti
cmpsb
out
bound
add
addr16
lods
cmp
sti
icebp
dec
sar
mov
int
mov
lahf
mov
sub
lret
sub
inc
mov
cmp
icebp
clc
bound
frstor
scas
insl
and
pop
push
push
cwtl
cmc
and
pop
test
inc
sahf
mov
mov
adc
in
insb
xchg
inc
pop
dec
outsl
cmp
aad
fwait
sub
test
dec
fs
push
inc
int3
aad
subl
cs
cmpsb
mov
jp
jb
xchg
rcr
cmpsl
push
sub
rclb
mov
jmp
add
enter
sbb
icebp
loop
adc
mov
orl
push
sahf
push
sti
lds
xor
xchg
xor
jb
pop
push
lret
pop
loopne
test
test
ds
mov
mov
jo
push
mov
mov
mov
sub
pop
jne
and
test
int
rcll
fistl
push
outsl
pusha
fsubs
cmp
or
cmp
sahf
and
sub
ja
cmpsl
add
and
shlb
xor
sub
dec
lods
jle
or
inc
aas
lret
addb
jmp
jle
sahf
ror
xor
daa
add
dec
mov
andb
lock
inc
call
pop
arpl
rcrb
lahf
ss
push
push
jmp
xor
push
scas
fidivs
loop
or
fmull
data16
cmp
fcmovne
pop
inc
dec
pop
pop
adc
cmp
xchg
movsb
rorb
and
imul
nop
orl
push
dec
pop
pop
mov
sbb
or
cmpsb
and
jmp
pop
ljmp
int
les
dec
stc
xchg
xor
push
inc
inc
mov
in
cmp
pusha
pop
fucomip
add
and
jp
loope
lcall
or
sbb
xchg
ficoml
add
iret
sub
pop
xchg
cmp
sub
inc
push
js
jns
insb
sbb
ja
cmp
lods
mov
and
jecxz
insl
movsl
add
lret
push
fwait
in
push
in
mov
mov
pop
mov
filds
mov
mov
jl,pn
sub
enter
leave
outsb
fsubr
or
add
mov
lret
inc
sbb
cli
test
les
jmp
mov
sahf
pop
scas
or
push
ds
js
mov
push
dec
outsl
mov
or
nop
mov
sbb
jmp
pusha
and
enter
cmp
in
fmulp
adc
xchg
or
sbb
push
mov
fsubrs
idivl
pop
inc
pushf
pop
lds
cmpsl
xlat
adc
or
or
pusha
push
adc
pop
jl
sbb
popf
sahf
add
add
mov
and
inc
insb
pop
rcr
outsb
int
fcmovbe
pop
mov
push
pop
xor
mov
sbb
rcrb
sbb
divb
stos
push
mov
jnp
inc
push
dec
push
movsb
sub
xchg
mov
sub
xchg
std
xchg
lret
dec
data16
fidivrs
ljmp
xchg
cmpb
nop
cmpsb
les
aad
cmp
adc
push
pop
sub
jp
test
mov
pop
sahf
push
mov
dec
mov
inc
imul
lds
jmp
add
ljmp
mov
pop
xchg
iret
enter
cli
repnz
cmp
stos
fistl
movsb
sbb
xlat
test
mov
xor
jbe
or
mov
inc
test
in
cmpsl
loope
sbb
cmp
scas
bound
add
fwait
mov
mov
test
push
sbb
inc
enter
xchg
insl
push
inc
jle
inc
cmpsl
or
push
loope
xor
ret
stos
mov
sbb
add
pop
notl
mov
sub
push
xor
fadds
mov
das
pop
cwtl
xor
xchg
jl
aad
mov
loopne
adc
add
dec
cmc
out
jl
sbb
jmp
in
mov
xor
aas
xor
scas
ret
in
xchg
xchg
subb
jmp
mov
imul
sti
lods
jne
movsb
xor
bnd
aam
mov
xorb
loop
push
out
push
jnp
fadd
rorl
cmp
xchg
dec
into
jae
rcrl
inc
adc
insb
out
and
lahf
mov
add
mov
mov
fstl
sub
fs
xchg
mov
rcll
jo
push
push
cltd
or
or
scas
pop
or
mov
scas
mov
jno
cmpsl
aad
xor
mov
packuswb
mov
ret
pop
loop
das
mov
cmc
push
rolb
lock
inc
mov
mov
or
adc
adc
or
mov
and
sub
mov
paddw
add
sbb
iret
jmp
scas
sbb
pop
push
std
js
mov
nop
and
out
push
leave
repnz
mov
pusha
mov
lea
stc
test
mov
inc
dec
pop
clc
and
popa
mov
pop
fnstsw
jp
and
add
jg
imul
sub
mov
mov
push
lahf
addr16
adc
inc
lahf
and
aad
inc
int3
and
mov
out
push
idivl
dec
mov
adc
xor
pop
fbld
iret
aaa
ret
mov
lahf
cmp
das
ror
xchg
fcoml
push
jo
testb
enter
das
rorb
aad
sub
mov
loopne
sahf
fldt
adc
dec
fsubr
dec
insl
xor
push
sub
shl
orb
rol
insl
adc
jle
inc
cltd
sbb
out
xor
jmp
pop
ljmp
dec
sbb
cmp
cltd
inc
aam
ret
mov
cltd
sbb
fcompl
frstpm(287
inc
ficoml
jl
push
jg
enter
rorb
dec
shlb
jno
test
hlt
fnstsw
popa
in
pop
mov
js
lret
xchg
imul
insb
in
ja
arpl
lock
gs
add
or
lods
and
adc
adcl
lahf
jne
subl
inc
mov
inc
movsb
push
lret
mov
test
popa
js
cmp
clc
jle
mov
movsl
or
and
xchg
test
out
push
fiaddl
ret
sub
loop
sahf
xchg
xchg
popf
mov
sub
clc
cmc
ljmp
ret
nop
pop
fcmovnu
enter
loope
jb
jns
xchg
inc
mov
inc
lea
mov
cmc
xchg
test
jbe
cmpsl
pop
ds
cmp
pop
in
adc
insl
lods
mov
push
xchg
pop
in
stc
pop
or
subl
aaa
rcl
adc
mov
data16
xor
push
addr16
or
jns
sub
lahf
sub
lret
cmc
repz
ficoml
xchg
out
push
mov
push
movsb
movsl
lds
iret
idivl
xchg
jno
cmp
movsb
sub
xchg
xor
repz
and
in
cmp
call
cltd
jbe
mov
lret
loopne
xor
and
mov
cltd
ds
mov
movsb
mov
stos
and
mov
pushf
hlt
jle
gs
out
hlt
push
popa
pop
andl
loope
int3
and
addr16
shl
into
mov
pushl
aas
into
bt
jg
cmp
pop
or
sbb
ret
imull
or
or
jbe
bound
fisubs
mov
sbb
pop
inc
outsb
in
jo
pusha
inc
xorl
fisubrs
adc
in
push
pop
out
sahf
sub
inc
cmp
sub
pop
pop
pop
mov
loope
pop
cmp
outsb
mov
cmp
inc
stos
aas
and
repz
popa
out
sbb
ljmp
push
hlt
mov
jp
call
lock
mov
pop
mov
or
daa
sbb
xor
or
loope
and
add
pop
pop
loop
sub
pop
sbb
inc
jo
inc
adc
mov
xlat
fdivrp
nop
sub
outsl
into
daa
data16
mov
adc
pop
gs
lods
vmovq
ret
xor
enter
cld
imul
clc
shll
aas
and
fstl
shrl
pop
and
sub
into
push
and
fldcw
pop
xor
push
or
sub
jbe
mov
xor
shr
dec
sub
popa
iret
ja
fs
ja
montmul
cmpsb
ret
sbb
lea
xor
push
bnd
dec
add
dec
dec
ss
jle
js
xor
dec
lcall
add
jne
cmovns
push
or
jno
pop
mov
adc
xor
pop
push
aad
ljmp
push
jo
mov
adc
negl
or
ret
rorb
push
scas
aaa
or
mov
pop
enter
sub
inc
jp
mov
repz
lret
popl
and
cltd
inc
nop
cld
jecxz
fwait
sub
dec
xchg
pop
int3
cmp
pop
jno
jno
dec
out
mov
add
inc
add
xor
add
jo
fmuls
aam
popa
outsb
pop
and
cmp
cld
mov
mov
xlat
push
mov
mov
push
cmp
add
imul
pushf
ficompl
mov
scas
inc
clc
sub
xchg
add
mov
mov
iret
xchg
inc
fcmovb
cmp
pop
dec
cwtl
cmp
outsl
arpl
pop
push
jle
adc
aas
cmp
mov
aaa
das
insl
adc
xor
pop
push
mov
sbb
adc
imul
lret
nop
or
xor
pop
pop
and
mov
pushf
bound
add
and
xchg
into
nop
or
imul
pop
icebp
mov
inc
js
mov
in
arpl
test
jp
call
xchg
and
xor
mov
int3
in
push
in
add
sub
jb
push
into
je
outsb
testl
out
in
mov
sbb
mov
mov
mov
add
push
pop
pop
out
pop
mov
test
jnp
adc
insl
xor
adc
fnstsw
aam
xor
mov
std
sbb
das
test
adc
nop
ss
cmpl
or
mulb
loop
insb
stos
xorl
add
scas
xchg
push
mov
icebp
lods
xor
mov
xchg
adc
shlb
adc
xchg
arpl
xor
adc
jb
push
fucom
ljmp
aam
mov
dec
clc
add
mov
adc
and
xor
ljmp
insl
sbb
test
mov
sahf
xchg
jo
lahf
mov
stos
sub
pop
out
jbe
fmuls
jb
sbb
mov
addr16
into
aad
cwtl
xchg
es
jne
ja
mov
adc
pop
sub
sahf
pop
sarl
test
dec
mov
cwtl
xchg
sbb
shll
jecxz
outsb
xor
inc
clc
fcmovb
aad
jb
movsb
and
scas
movsb
adc
jne
subl
fimull
loope
daa
mov
lods
xchg
pop
dec
mov
xchg
mov
jnp
push
mov
add
cs
push
jo
xor
dec
pop
mov
xor
ss
stos
cmc
adc
lcall
ds
js
xor
jbe
pop
jae
dec
repnz
adc
mov
jb
andl
mov
xor
repz
inc
inc
cmc
movsl
sub
arpl
jmp
subb
loopne
ds
in
pop
fwait
inc
or
mov
popa
scas
mov
mov
test
cmp
out
mov
js
nop
aam
add
cmp
sbb
mov
stc
add
jle
dec
pop
dec
aaa
xor
push
sbb
pop
jmp
rcrb
cmpsb
jo
lcall
fcompl
mov
aas
fstps
push
movsb
xchg
outsb
fbld
sbbb
pushf
hlt
pop
xlat
aas
push
out
mov
dec
dec
or
cmp
xchg
test
xchg
lahf
inc
mov
push
je
cltd
adc
dec
cmp
mov
adc
fiadds
mov
lret
fildll
fbld
cmc
push
cmpsb
jbe
adc
fisttpll
mov
dec
lahf
pop
addl
test
mov
cmpsl
dec
push
sbb
lea
dec
and
in
dec
pushl
xchg
xchg
sub
mov
pop
ljmp
jo
loopne
mov
lret
jl
scas
push
jbe
ja
not
lret
ds
xor
test
push
lcall
mov
sbb
enter
dec
fsubl
cwtl
dec
hlt
xchg
sbb
ja
sti
push
sbb
add
leave
sub
sub
push
or
insl
xor
loope
add
cwtl
test
lods
inc
cmc
loope
mov
std
inc
repnz
cmp
inc
and
bnd
pop
adc
daa
lahf
xchg
add
xor
ficoms
stos
ret
fisubrl
push
into
mov
dec
jmp
adc
add
fnstsw
mov
sbb
stc
outsb
iret
xchg
cwtl
add
and
jbe
jbe
xchg
cld
xor
sbb
xchg
sub
fsubrl
gs
ljmp
mov
push
jnp
jge
sahf
pop
adc
popa
in
sbb
push
jmp
sahf
fwait
jmp
adc
hlt
pop
fmulp
and
mov
push
outsl
and
mov
adc
js
in
test
inc
and
mov
adc
inc
inc
push
inc
push
mov
stc
div
mov
pop
mov
inc
test
mov
sahf
ds
daa
jne
ja
jne
jno
xchg
inc
cmc
push
in
repz
sahf
mov
mov
mov
addr16
inc
fcomi
push
or
pop
jb
cld
lret
dec
mov
cmc
lcall
sub
out
rcrl
push
pop
scas
xchg
popa
aam
jg
imul
ljmp
or
xor
out
jns
add
inc
rol
dec
sbb
and
mov
and
insl
sbb
ja
adc
jnp
stc
fwait
and
fstpt
int3
mov
inc
mov
ror
add
lods
dec
ret
ret
lea
sarb
pop
cmp
sti
jne
mov
xor
ss
cmp
or
shll
adc
sub
scas
sub
dec
test
fs
mov
push
xchg
sbb
pop
fwait
cmp
sbb
pop
imul
xor
jne
sahf
mov
imul
aaa
sbb
jbe
nop
add
sub
mov
push
inc
mov
cld
int3
xor
pop
push
popa
inc
inc
sbb
cmp
xchg
bound
mov
cmpsl
pop
or
pop
sbb
ret
cmp
adc
repnz
movlps
aam
jl
add
in
rcrb
fsubrs
repz
mov
ss
pop
adc
or
js
inc
mov
xchg
ficompl
and
movsb
icebp
repz
lret
xor
stos
sbb
sahf
cld
add
sbb
movsb
std
int
sarl
add
mov
fs
mov
mov
jae
and
mov
ffree
pop
push
dec
insb
adc
adc
jbe
cmp
cmc
insl
jo
xchg
lahf
rolb
and
sbb
xor
cmpsb
and
push
jp
dec
addl
mov
and
xchg
xchg
sbb
cmp
adc
pop
fwait
popa
aaa
xlat
cld
out
mov
mov
xor
ljmp
xchg
or
pop
lret
das
lods
insb
mov
jo
add
inc
insb
rcrl
push
popa
out
mov
inc
cmpsb
js
add
mov
ret
xor
ljmp
or
stc
je
adc
xor
mov
mov
push
in
mov
dec
ss
pop
stos
shr
xchg
addb
push
fiadds
mov
and
in
sbb
lods
jae
xor
jno
loop
and
scas
rolb
jo
lds
div
xchg
push
xchg
push
xchg
mov
adc
repz
pop
push
mov
stc
sbb
xchg
sbb
add
aam
push
cmp
cmc
lds
lods
lret
outsb
popf
int
jl
jns
fmul
pushf
xchg
dec
call
mov
in
mov
pop
enter
ret
add
mov
sbb
lods
add
aas
mov
sub
inc
mov
xor
clc
inc
scas
push
inc
fwait
and
dec
stos
xor
adc
in
loopne
xor
stc
jae
cmp
add
or
mov
subl
add
adc
enter
mov
and
inc
mov
loopne
pop
sbb
clc
cs
addr16
mov
inc
flds
mov
cmp
lret
pop
outsl
jl
out
hlt
loop
push
push
icebp
ror
xor
jmp
inc
in
out
mov
inc
push
in
movsb
nop
pop
aaa
pop
xor
pusha
shrb
mov
pushf
lock
push
shrb
adc
nop
jno
inc
in
inc
xchg
mov
jg
dec
jno
or
fdivs
fcomip
pop
pop
jne
aaa
mov
iret
loop
dec
dec
pop
sub
pop
jne
and
jbe
or
rclb
popa
mov
pop
sbb
adc
jp
lcall
in
mov
xchg
loope
rcr
pop
orl
jl
les
jbe
fisubrl
sarl
dec
cmp
scas
loopne
lahf
aas
in
ja
loop
add
fidivrl
dec
cli
rclb
lea
bound
cmp
in
fs
push
pushf
push
out
dec
cmp
fxch
insl
cmp
jae
fisubs
dec
subl
dec
sub
jmp
xchg
mov
in
mov
shr
shll
sub
es
lcall
xchg
inc
testl
enter
mov
call
lods
add
lret
and
jmp
push
je
mov
dec
out
pop
and
int3
dec
sti
pop
xchg
cmp
fucom
cwtl
jno
nop
cwtl
mov
dec
push
push
ss
pop
fdiv
cmp
lea
xor
repz
cmp
push
push
les
xchg
fsts
int
js
js
mov
adc
nop
loope
jno
pusha
pop
mov
movsl
jne
mov
loop
loope
int
lods
outsl
xchg
lds
mov
dec
test
pop
aaa
pusha
lds
cmp
adc
les
decb
or
out
or
mulb
xchg
cmc
lds
fisubs
xchg
scas
push
dec
leave
loopne
nop
xchg
ds
lahf
or
push
sbb
insl
into
jge
in
jno
dec
ljmp
daa
dec
push
fsub
shll
push
jnp
andb
jns
sbb
cmpsb
pop
std
mov
rcr
jmp
or
mov
push
scas
repnz
mov
iret
push
sbb
repnz
mov
or
and
mov
nop
repz
insl
xchg
andb
lea
add
jge
dec
add
fwait
add
fmul
movsl
std
and
mov
out
fnstcw
mov
add
lret
in
push
aad
push
pop
add
aas
out
ret
fcomps
cld
fucomip
mulb
outsl
add
iret
insl
fisttps
lahf
push
mov
movsl
inc
push
xchg
popa
mov
rcrb
jg
or
enter
jb
pop
mov
jmp
sub
mov
lock
pushf
movsl
pop
xchg
adc
cmp
adc
jecxz
loope
sbb
cld
nop
mov
fadds
lret
hlt
imul
mov
ret
push
mov
leave
adc
pop
mov
jp
in
inc
jge
mov
rorb
bound
dec
add
inc
cld
push
pop
jns
dec
test
lahf
inc
mov
mul
pushf
mov
inc
ret
add
test
adc
test
jp
adc
xor
pop
arpl
popa
mov
mov
test
inc
mov
dec
bound
shlb
loop
jns
outsl
stc
call
mov
lock
mov
nop
ror
mov
jno
cmp
mov
cs
in
loop
mov
xchg
call
cmp
int3
rcr
pop
cltd
mov
jns
jo
jno
pop
xor
fbld
inc
xor
ds
not
loope
stos
pop
nop
fs
jp
popf
je
or
stc
xchg
iret
test
call
psubd
ret
mov
ljmp
mov
sahf
push
and
mov
dec
jp,pn
fucom
pushf
mov
sub
aaa
leave
lock
adc
mov
fnsave
lret
bound
loop
jns
cltd
sbb
insb
or
popa
push
cltd
and
inc
push
push
dec
imul
jecxz
sub
daa
push
dec
fucomi
lahf
or
sarl
xor
pop
mov
mulb
mov
sarl
repnz
xchg
sub
sbb
addr16
mov
das
adc
mov
and
mov
xor
mov
mov
adc
in
jl
ss
insb
pop
adcl
dec
lret
pop
add
dec
mov
shlb
jecxz
or
insl
sahf
or
push
ds
dec
insb
push
sbb
push
xchg
sbb
lods
cwtl
jo
and
arpl
sahf
or
xor
jno
push
ja
mov
cwtl
xchg
jp
push
bound
out
incl
stos
test
rolb
push
push
jg
insb
mov
aaa
push
shrl
and
xchg
cmp
dec
dec
movl
mov
jg
cltd
inc
mov
push
or
movsb
cmp
add
aad
nopl
pop
dec
in
cmp
push
push
jge
xor
cmp
lret
xchg
stos
movsl
mov
adc
pop
adcl
dec
xchg
xchg
sub
cmp
xchg
cmpsb
jo
jbe
push
dec
xchg
sbb
xor
int
jae
xor
mov
push
arpl
fimuls
dec
add
dec
mov
xchg
push
pop
mov
jae
jno
lret
jae
out
mov
lret
or
sub
jne
cltd
rcrl
pop
inc
xchg
test
ja
sar
cs
pop
xchg
addr16
les
enter
es
scas
pusha
xor
stos
inc
test
lods
mov
cmp
cli
xor
insb
out
stos
cmpl
cmpsl
dec
mov
or
or
cli
in
out
fldl
rorl
add
adc
repz
les
push
sub
mov
push
pop
add
or
push
xchg
movsl
push
loopne
incl
test
daa
sub
inc
dec
aaa
jnp
jl
addr16
mov
pop
mov
push
fsubrl
mov
out
movsb
dec
inc
das
sbb
xchg
xchg
mov
sbb
dec
fsubrp
mov
push
outsl
imul
bound
pop
addr16
das
or
pop
aad
cmp
je
adc
jns
sti
xorl
fbld
fcmovnb
ss
mov
sbb
int3
rcll
or
or
cld
mov
out
fdivrl
adc
add
ret
sub
daa
popf
mov
add
icebp
int3
add
inc
aad
das
xchg
mov
data16
leave
sub
cmp
jb
ror
pusha
or
adc
and
mov
scas
call
iret
ficomps
push
add
xor
rcl
mov
fwait
mov
movsl
pop
setno
rcll
cli
ret
jg
jbe
xor
arpl
dec
dec
fs
adc
addl
pop
inc
mov
pop
xor
not
adc
jne
inc
sub
and
test
push
call
and
jnp
xor
outsl
xchg
je
mov
and
jge
dec
repnz
inc
cmp
add
fisttps
enter
cmp
or
adc
sub
or
sbb
xchg
pop
bnd
xor
or
int
xchg
sbb
jl
in
and
sub
stc
mov
or
xchg
or
jo
sub
mov
pop
nop
ss
dec
pmulhuw
ret
dec
sti
div
mov
xchg
sti
repnz
push
sub
ja
sub
xchg
ds
push
pop
fucomp
jmp
rolb
xor
loop
and
inc
into
sub
sahf
mov
andl
test
jnp
mov
xchg
add
mov
cli
es
jbe
mov
add
or
and
sub
xchg
into
movsb
insl
mov
mov
mov
inc
data16
and
jg
notb
jne
adc
pop
sub
cmp
mov
sub
dec
cmp
pop
add
pop
ret
lods
adc
rorb
xchg
sbbl
sub
cwtl
xchg
dec
loope
aad
or
dec
push
pop
push
or
in
jle
enter
dec
out
cmpsl
test
lds
xchg
pushf
sub
mov
inc
pop
loope
movsb
mov
or
jae
lahf
dec
data16
rcr
outsb
fcmovne
jmp
mov
addr16
pop
jg
cs
aam
add
push
dec
std
outsb
je
or
mov
ja,pt
jp
std
std
mov
fiaddl
into
jnp
clc
bswap
imul
sbb
lods
jl
or
sub
jo
add
add
xchg
pushf
popa
aas
and
xchg
cltd
lock
sub
pop
in
pusha
test
pop
push
dec
in
out
push
mov
sub
insl
pop
mov
stos
shrb
and
ret
test
adc
pop
cmp
int
nop
outsl
add
mov
rorb
xor
popf
insl
pop
or
sbb
pusha
bound
xor
lahf
cmpsl
out
cmp
pop
outsb
jns
loopne
pop
adc
jno
push
test
lea
push
add
or
jns
rcr
ljmp
int3
in
adcl
test
mov
mov
iret
jmp
and
push
hlt
cld
bound
scas
dec
mov
mov
repnz
lea
in
testb
cmc
sbb
cmp
sbb
inc
and
lods
out
or
push
jnp
out
out
jnp
inc
mov
movl
test
xchg
ja
dec
fadds
add
daa
insb
bound
test
mov
orb
add
adc
rep
lea
pushf
enter
inc
stc
mov
mov
scas
pop
les
lock
rol
enter
dec
and
ss
sbb
xlat
lahf
test
and
imul
xor
jno
push
push
fidivrl
ds
adc
insl
rcl
dec
cmpsb
fadds
lea
jmp
pop
and
dec
jge
add
sbb
pop
jne
xor
jne
nop
outsl
cltd
dec
icebp
inc
and
push
cmp
lods
stc
xor
xchg
pop
jl
xchg
xor
pop
jns
cmp
out
int
dec
xchg
add
aas
insl
aad
dec
push
test
xor
cmp
out
lods
add
and
or
gs
lret
in
mov
pop
lahf
jae
out
dec
xchg
pop
lea
jo
dec
xchg
sub
lock
mov
es
mov
xchg
pop
jecxz
scas
jae
ror
stos
jmp
adc
jmp
imul
pop
add
pop
repz
mov
in
xchg
ss
rolb
xchg
call
pop
sbb
stos
aas
pop
cwtl
dec
roll
rolb
inc
xorl
push
test
dec
jmp
xlat
or
das
mull
daa
push
pop
mov
cmp
lahf
enter
sub
pop
cmp
sub
enter
push
clc
pop
cmp
mov
jge
fnstenv
std
addr16
adc
clc
ror
clc
add
jl
into
pop
and
bound
xchg
in
and
int3
ljmp
cmp
pop
push
in
xor
int3
add
fwait
je
xor
inc
ret
pop
cltd
lcall
push
xor
xor
mulb
mov
xor
push
add
or
sbb
add
sub
test
clc
iret
js
std
lret
rolb
fnstenv
shll
push
xor
pop
repz
jbe
push
cld
mov
sub
mov
test
lods
adc
imul
sbb
jecxz
test
imul
xor
outsb
mov
outsb
xchg
jle
jne
sub
or
inc
adc
test
pusha
out
push
dec
insl
movsb
scas
inc
aam
jno
xor
push
mov
sbb
imul
sti
imul
lcall
xor
mov
xchg
testl
inc
push
into
stos
add
inc
test
out
adc
rolb
jnp
dec
ret
movsb
test
xlat
mov
mov
out
push
sbb
shr
popf
fs
call
inc
iret
jnp
add
sbb
sti
jp
xchg
imul
aad
movsb
aad
jp
repnz
dec
nop
insb
ret
push
lcall
jecxz
cli
mov
cmp
push
cwtl
mov
sahf
mov
add
xchg
mov
push
fcom
mov
or
test
xor
push
push
xchg
push
sbb
bnd
pop
je
push
mov
fisubs
rcrl
mov
pop
jnp
sub
cmpsb
xor
push
push
sub
mov
inc
mov
stos
push
lods
add
jns
daa
nop
cmp
les
jno
je
and
mov
sub
bound
ror
clc
xchg
xchg
push
mov
dec
ja
insb
outsb
mov
ss
pop
cmp
or
sbb
push
inc
nop
test
cmc
dec
sub
xchg
rcrl
adc
inc
call
roll
push
jae
pop
jg
dec
test
mov
jo
fs
rol
xor
mov
jae
xchg
adc
xchg
dec
stos
clc
inc
jne
les
xor
scas
repnz
sete
js
data16
das
std
mov
in
lods
jg
mov
cmp
unpckhps
stos
mov
into
dec
out
enter
cmpsb
pop
test
pop
stos
lret
mov
jp
pop
mov
into
and
sub
ret
out
inc
xchg
les
out
sbb
pop
fisttps
push
addl
roll
iret
dec
enter
rcrl
popa
jo
out
cmp
mov
mov
adcl
push
gs
add
pusha
adc
mov
push
pop
in
mov
adc
dec
mov
repz
loopne
mov
inc
in
and
cld
lea
cmp
xor
adc
outsl
lock
int
inc
or
addr16
pop
push
aad
and
stc
mov
in
cmp
shr
movsb
inc
out
aam
aam
xor
xchg
push
roll
jl
sub
jo
imul
mov
clc
jbe
stos
and
js
jno
popf
lcall
inc
pop
mov
sub
push
sbb
sbb
mov
loopne
dec
dec
mul
sub
imul
inc
mov
xlat
aad
das
out
dec
pushf
mov
pop
stos
aas
iret
jne
icebp
fnstcw
rcrl
mov
stos
icebp
jp
and
dec
sub
leave
nop
pop
divb
add
ret
jno
mov
mov
loopne
data16
fadds
in
inc
mov
daa
inc
mov
sbb
adc
jae
cvtps2pd
mov
inc
cmc
or
jne
lret
jo
divb
jnp
xchg
adc
stos
and
enter
push
inc
jge
adc
test
aas
mov
mov
rcrl
push
sti
add
cmp
test
jmp
dec
es
and
cmp
stos
xchg
adc
popa
inc
inc
ret
subl
shrl
in
cmp
push
mov
in
into
inc
mov
iret
lret
cmp
or
jp
call
movsl
mov
cmp
inc
cmpsb
pop
mov
jo
shll
in
jge
mov
bound
mov
adc
and
mov
sbb
fwait
test
push
xor
cmp
mov
jb
push
mov
loop
into
sub
push
mov
jo
clc
mulb
js
mov
scas
roll
push
int3
lret
xor
imul
out
mov
adc
adc
cs
sub
and
or
mov
sub
pop
push
dec
outsl
cmp
outsl
out
scas
push
fidivrl
inc
xchg
sbb
test
pop
mov
mov
faddl
fwait
in
push
mov
sbb
test
mov
push
jmp
fimull
or
sub
xor
jg
xchg
call
push
sub
mov
gs
jns
movups
jb
and
out
add
add
daa
push
push
adc
addr16
jg
adc
sahf
push
cmp
lret
sbb
insb
push
dec
stos
lcall
jns
sbb
arpl
gs
out
jae
mov
pop
cwtl
cmpb
fmul
jecxz
in
repz
jle
push
int3
inc
or
sub
sbb
xchg
lret
jge
mov
fistpll
mov
test
inc
cmpl
inc
mov
cmc
je
push
lds
adc
insl
in
pusha
add
sbb
xchg
mov
or
popa
mov
icebp
inc
aas
insb
cmp
fisubl
push
addl
lds
jmp
pop
sarl
mov
call
js
dec
decb
pushf
loope
movsb
mov
mov
in
nop
or
dec
xchg
xor
fnstcw
es
mov
movsl
test
mov
jae
mov
scas
pushf
sbbb
xchg
dec
inc
mov
idivl
test
mov
int3
pop
pop
pop
inc
jecxz
xchg
repnz
sub
pop
mov
mov
es
aam
imul
jae
mov
cs
mov
or
lret
movsl
inc
dec
mov
adcb
and
or
cmp
add
mov
fwait
ss
aas
into
and
jg
lods
sub
push
pop
dec
addl
xchg
cmpsb
xor
movsb
clc
sbb
xor
aas
in
addr16
sahf
loop
add
push
jno
xor
aas
mov
mov
and
inc
jns,pn
dec
cli
lcall
iret
inc
xchg
adcl
neg
clc
sub
adc
inc
sbb
lds
and
insb
addb
rcr
mov
ss
xchg
or
movsb
cmc
or
mov
ss
push
pop
xchg
fmull
into
repz
jmp
mov
test
jmp
push
adc
rorb
mov
xchg
adc
jae
lret
xlat
mov
stc
jnp
mov
leave
into
clc
int3
mov
fstpt
pop
stos
lds
aaa
xchg
mov
mov
jno
adc
std
pop
dec
inc
push
jno
into
test
mov
repz
jnp
scas
dec
sbb
cmpsl
mov
xor
out
fildl
movsl
jbe
lods
xorb
loop
fstpt
and
adc
mov
add
data16
bound
call
sub
stc
xchg
fsub
jnp
cmpsl
adc
aam
jecxz
sub
popa
fidivs
test
add
lcall
in
das
imul
fdivl
cmp
lret
popa
int
push
dec
imul
in
adc
xchg
in
sbb
jae
test
xchg
jmp
fdivrl
std
add
sub
clc
bound
and
adc
sahf
xor
fmull
dec
adc
or
sub
adc
mov
mov
mov
in
dec
and
das
mov
shrl
xor
xchg
popf
imull
jecxz
imul
cmpsl
testl
pop
imul
mov
sub
pop
ljmp
test
movsb
sbb
fstl
imul
repz
ds
mov
sub
aaa
in
pop
movsl
sbb
or
sahf
pop
pop
bound
push
pop
sbb
shlb
in
rclb
inc
or
popf
push
xchg
sbb
push
and
or
sub
loope
push
fldln2
and
push
aas
ljmp
mov
imul
adc
xlat
fildl
bound
pop
xchg
or
clc
ja
inc
cmpsb
cmp
in
addr16
cmp
ja
bound
xor
pop
inc
jmp
ret
mov
rol
mov
jge
mov
or
and
push
addr16
aad
rolb
fistpl
pop
mov
loopne
mov
dec
push
int
adc
jg
mov
mov
call
jmp
or
xlat
xor
outsl
cmp
clc
or
jo
stos
aad
ud2
ss
cli
addr16
movsl
mov
ret
rclb
xchg
dec
adc
pop
rorl
mov
pop
or
cld
jp
cmp
sbb
sub
sbb
cmc
cmpsl
test
xchg
cmpsb
aaa
addr16
sbbb
aam
and
xor
aam
lods
out
out
and
inc
in
sbb
sub
or
jecxz
in
push
mov
ss
neg
push
leave
lods
hlt
in
data16
fisttpll
xchg
inc
mov
andb
xchg
int3
imul
pop
push
nop
out
cmc
lcall
sbb
xchg
mov
or
movsb
xor
inc
icebp
or
and
bound
add
inc
inc
stc
jp
cmp
ret
rcl
mov
insb
insl
sbb
je
xor
sarl
scas
dec
call
push
push
pop
cmp
and
adc
call
sub
jno
mov
iret
shrl
or
clc
cmp
mov
ljmp
shlb
cmp
xor
inc
lods
pop
dec
js
mov
lret
pop
andb
repz
sahf
ljmp
cmp
or
leave
mov
outsb
lock
inc
insl
repnz
and
mov
push
pushf
mov
idivb
sti
pop
in
adc
pop
cmpsl
test
inc
test
call
fdivs
pop
xor
fsubrl
sbb
fstl
js
in
add
das
ljmp
sub
rcl
clc
cmp
adc
sbb
inc
push
aas
negl
fsubrp
jne
sub
ljmp
or
cmc
or
out
adc
pop
scas
repz
dec
pop
jbe
pusha
mull
add
push
jae
pop
pop
mov
mov
inc
or
push
and
out
incb
pop
test
cmp
xor
daa
enter
push
mov
add
insl
add
sti
dec
xlat
jns
das
dec
loop
das
lods
std
pop
loop
mov
sub
dec
push
lret
fnstsw
cmp
clc
out
nop
das
iret
out
popa
sahf
sbb
cmc
ljmp
mov
lods
sub
and
cs
in
dec
gs
xchg
lcall
insl
sub
jae
shr
cli
orb
fidivs
insl
fiaddl
inc
mov
clc
sahf
inc
repnz
nop
gs
jp
gs
enter
scas
pushf
out
icebp
in
repz
inc
cmp
cmp
inc
jge
mov
or
push
push
push
inc
cmp
test
jecxz
in
cmc
faddl
pusha
das
ds
inc
outsb
inc
ss
pop
repz
movsl
pop
jl
fidivs
cltd
adc
nop
xchg
and
push
in
jne
divb
cmp
in
cld
iret
pop
notl
fisubrs
into
jbe
mov
and
xor
data16
outsl
ret
out
stc
mov
mov
imul
jmp
pop
push
sub
pop
hlt
mov
lcall
adc
stos
lock
pop
sti
xor
stos
js
jb
sahf
pop
out
and
add
mov
dec
mov
imul
pop
mov
and
mov
adc
jae
dec
inc
and
and
push
jle
clc
jle
test
push
aad
in
lods
and
fdivr
jl
addr16
xor
push
loopne
mov
inc
add
or
add
dec
pop
jmp
mov
mov
xor
lret
mov
dec
ljmp
jl
cmpsb
pop
xor
lret
test
shlb
xchg
cmp
aaa
dec
push
dec
daa
or
mov
xlat
arpl
push
sahf
xlat
and
xchg
jmp
add
jo
sbb
out
cs
pushf
push
sbb
in
pop
push
jle
push
push
cmp
fwait
clc
push
insb
mov
shl
outsb
cmp
jg
loopne
cmp
sub
jecxz
mov
dec
les
negb
movsl
leave
scas
mov
out
mov
out
popf
xor
xchg
and
mov
rclb
pop
inc
bound
add
idivb
add
sub
jnp
mov
pop
dec
jb
lods
or
dec
lock
rorl
adc
fldt
push
xchg
mov
ja
out
jg
or
fnstenv
je
setns
jg
hlt
inc
or
mov
loope
pop
xor
cwtl
mov
popa
dec
mov
call
mov
mov
movsl
cmp
cmc
mov
lods
mov
ret
mov
aad
push
pop
or
or
icebp
cmp
gs
sarl
xor
pusha
xchg
jp
nop
je
dec
dec
cmp
clc
dec
hlt
jl
repnz
sbb
jmp
outsb
push
xor
adc
pushf
xor
jbe
or
dec
jp
push
xor
clc
inc
or
xchg
push
adc
fimuls
inc
js
mov
inc
or
push
mov
pop
sbb
dec
orl
push
jge
std
cmp
mov
movsl
push
scas
lret
adc
push
sub
adc
adc
push
add
insl
push
movsb
arpl
add
test
mov
imulb
xlat
mov
mov
inc
call
out
ffree
insb
pushf
jnp
fnsave
mov
jne
mov
ja
std
aas
cmc
hlt
xchg
ret
mov
xchg
push
gs
int
nop
sarb
repz
sub
int3
jmp
in
mov
push
ret
aaa
setns
push
or
mov
xchg
shlb
ret
push
dec
test
cmpsl
xchg
jle
push
xchg
push
bound
pop
fnstcw
stc
lods
add
sub
sub
and
loope
sub
adc
mov
out
push
cmc
mov
sbbl
xor
push
mov
orl
pop
cmp
loop
mov
arpl
pop
repz
fcompl
aad
iret
cmp
loope
ja
popf
cwtl
xchg
movsl
sbb
aaa
lret
inc
cmp
loop
out
inc
push
xor
mov
iret
mov
sti
popa
scas
xchg
xor
cmp
jno
or
scas
or
loopne
stos
sbbb
sbb
and
dec
push
out
adc
popa
jp
outsl
bound
dec
scas
push
push
sbb
into
outsl
scas
das
shll
int3
sbb
int
orl
xor
iret
mov
cmpsl
outsb
jnp
xchg
and
xlat
lret
out
movsl
sbb
iret
xchg
addr16
inc
cmp
lea
cltd
fdivl
pop
repz
icebp
push
mov
std
dec
scas
mov
sub
adc
in
pop
cwtl
xchg
and
gs
adc
mov
mov
xchg
add
mov
and
xor
int
movaps
fsubrl
and
xlat
jne
out
jle
xlat
gs
jg
pop
mov
fstps
arpl
sti
popa
push
xchg
icebp
sbb
inc
xor
mov
add
xorl
leave
or
mov
inc
std
cltd
add
outsb
fimuls
sahf
pop
bound
rcll
mov
pop
inc
xchg
pop
dec
push
rolb
jbe
or
lods
cltd
pmulhuw
xchg
dec
cli
ret
es
jae
icebp
sub
rolb
leave
push
mov
cmp
test
and
int3
int
movsl
rol
std
sbb
out
xchg
add
and
sbb
stc
jle
pop
sbb
xchg
test
shrl
cmpsb
sbb
sub
lock
es
xchg
mov
and
mov
cmp
jge
ljmp
arpl
std
dec
bound
lsl
in
mov
popf
ror
xorb
pop
pop
xchg
fdivrs
push
imul
xor
insb
dec
push
sti
dec
mov
outsl
int
lods
push
ficompl
cmp
xchg
add
cmp
loop
outsb
popa
into
mulb
into
mov
dec
ret
iret
jp
cmp
cmp
faddl
xchg
add
hlt
mov
outsl
iret
loop
scas
dec
sahf
sbb
xchg
mov
or
mov
jp
int
insb
dec
xor
stos
mov
repnz
outsl
push
lret
and
daa
mov
imul
mov
push
ss
jbe
bound
jne
call
cmpsb
aam
push
pop
cmp
sub
into
push
xchg
aaa
xchg
scas
push
push
add
imul
sub
xchg
inc
add
and
movsl
nop
xorl
mov
loope
shrb
pop
jnp
inc
mov
inc
jbe
aaa
fidivrl
push
push
ds
push
pushf
fdivr
adc
sbb
pop
sub
fisubrl
jo
dec
pop
pop
test
jecxz
mov
bound
pop
leave
fcomi
and
cwtl
mov
fcmovb
lret
adc
repz
sbb
pop
or
repz
jg
dec
mov
sub
je
jns
fnsave
subl
pop
push
data16
fisttpll
in
jmp
push
inc
fstl
cwtl
push
pushf
cltd
icebp
push
mov
sub
mov
lret
mov
sbb
jecxz
inc
cmp
jmp
sub
xlat
fldt
push
sbb
mov
and
inc
lahf
mov
call
xor
sbb
push
lds
mov
mov
call
cld
std
mov
pop
clc
or
imul
push
sbb
sbb
jecxz
mov
pop
sub
cmp
cltd
sub
push
ret
lahf
addr16
lods
or
jge
fldenv
sub
in
pop
stos
movsl
or
xlat
ret
xchg
sbb
jl
aaa
jnp
mov
jmp
popa
mov
add
pop
and
test
adc
sub
xor
out
psrlq
pusha
sahf
adc
cmp
xchg
dec
outsb
mov
jl
push
xchg
into
in
pop
fwait
mov
mov
lock
and
jp
popa
mov
add
jmp
mov
mov
sbb
jmp
cld
iret
mov
mov
cltd
pop
popf
pop
sbb
leave
pop
pusha
fiadds
test
pop
ret
adc
push
cmpsl
daa
out
inc
cmpsl
jle
lods
int3
dec
adc
xchg
cmp
inc
push
ss
jbe
cmpsb
into
sarl
outsl
rol
mov
xchg
xor
cmp
mov
into
jg
lret
or
sahf
andl
ret
cmp
lret
dec
out
add
dec
test
lods
add
xlat
and
arpl
push
js
arpl
or
data16
sbb
xor
inc
and
je
mov
xor
fldenv
push
imul
adc
jp
insb
jge
push
or
jnp
push
pusha
xchg
mov
pop
ja
mov
movsb
jp
scas
cld
adc
addr16
imul
arpl
mov
mov
and
fnstsw
iret
sbb
dec
js
mov
sbb
xchg
mov
stc
mov
movsl
xlat
lea
jp
lds
repnz
movsl
dec
fwait
dec
cwtl
jl
into
test
xor
stc
cltd
dec
out
out
mov
or
mov
out
xchg
xadd
mov
sub
out
sbb
pop
jbe
imul
std
nop
dec
or
pop
stc
jae
xchg
sahf
sub
mov
inc
shrb
pushf
pop
add
dec
nop
or
inc
dec
fmulp
or
fwait
dec
insb
lods
xor
cmpsb
pop
inc
fwait
dec
vshufpd
out
push
mov
mov
add
xchg
icebp
xor
xor
out
movsl
xchg
aad
push
push
push
jnp
jns
mov
sbb
adc
cmp
ja
data16
mov
shll
mov
iret
sbb
jbe
ss
pop
decl
or
scas
jne
nop
adc
push
sbb
sub
and
sub
mov
dec
fwait
test
xor
les
call
lods
aas
cmp
testb
movsl
es
cli
add
ret
roll
xchg
push
fucomi
jl
stos
clc
in
xchg
add
mov
and
ds
dec
xor
add
pop
fildll
push
sbb
jl
push
imul
cwtl
jmp
and
les
aad
sbb
mov
sbb
fucomi
lds
pop
arpl
sbb
aad
aad
popa
and
cltd
je
hlt
jge
xchg
sub
xchg
mov
adc
sahf
or
sub
push
cmp
mov
mov
cli
movsl
lods
out
dec
mov
cwtl
dec
test
push
imul
mov
pop
pop
mov
pop
fisubrs
jno
mov
jo
bound
out
lods
mov
mov
cmp
xor
ret
jns
ret
movsl
pop
fmul
jge
xchg
push
fs
and
ljmp
jg
aam
xchg
out
ret
aam
mov
sti
pop
xor
sahf
lret
or
mov
cmc
aad
jbe
pusha
pop
fisttpl
loopne
mov
sbb
add
sbb
stc
les
adc
jno
out
cld
je
aas
cmpsb
inc
mov
pop
cmc
push
sbb
adc
pop
dec
lock
fdivp
mov
sub
jne
unpckhps
xor
loopne
push
lcall
aaa
cld
icebp
hlt
push
and
inc
sbb
out
add
jge
pop
loop
push
adc
cs
push
xor
push
sar
pop
popa
scas
js
repz
lret
mov
sub
add
fwait
xor
xchg
scas
cmp
inc
into
cmc
xchg
mov
jmp
in
xor
sub
movsl
ljmp
daa
outsl
in
fcmovnbe
pop
sbb
mov
and
jge
gs
and
pop
jbe
js
aad
fnstcw
add
sub
push
lds
nop
pop
pushl
pop
inc
je
out
fisubl
cmp
outsl
or
xor
int3
hlt
popf
imul
pop
and
rol
outsb
push
imul
leave
shll
lea
ss
subl
dec
mov
fldt
stos
insl
addr16
ljmp
leave
cli
xor
imul
xorb
mov
fwait
pop
push
icebp
jecxz
xchg
cltd
push
icebp
jae
sub
push
inc
into
pop
adc
jle
cmp
popf
incl
cmpsl
dec
sahf
and
fbstp
dec
out
int
mov
adc
jno
lock
cmpsl
mov
icebp
popf
or
insb
lea
lea
jmp
jp
popf
inc
push
push
fists
out
repnz
inc
insl
adc
in
dec
jno
mov
rclb
fcomp
mov
pop
mov
imul
mov
jne
fstpl
jae
xchg
or
dec
cltd
jb
push
jp
popa
xchg
inc
inc
ds
lea
mov
test
and
sbb
cmp
leave
adc
cltd
push
ret
lcall
push
mov
sub
cltd
dec
jg
xlat
ss
xor
nop
ds
mov
cmpsb
xor
insl
ljmp
inc
lock
cmp
mov
aam
jecxz
jg
xor
lds
fstp
xchg
push
out
push
test
idivl
decl
dec
dec
cmp
sti
fdivrl
cmp
inc
sbb
aas
inc
adc
pop
xor
sbb
rorb
or
ror
sub
mov
push
fs
adc
sub
dec
in
cwtl
imul
dec
mov
pusha
call
lods
lock
int
xchg
std
ret
xor
lcall
dec
lds
mov
adc
imul
lods
ret
testl
pop
push
push
xor
push
test
fwait
out
pop
inc
push
movsl
repz
or
jb
addr16
mov
mov
iret
dec
and
push
out
in
out
mov
lock
sti
adc
shlb
inc
sub
xor
lret
cmpsl
loope
or
iret
xor
sub
scas
cmp
cli
lahf
add
stc
dec
cs
mov
add
repz
mov
mov
leave
push
mov
jno
jg
scas
ret
rorb
xlat
jge
or
je
rcrb
push
pop
push
jns
inc
mov
or
mov
imul
push
mov
lock
lea
mov
je
mov
push
mov
xor
adc
sub
insb
mov
mov
scas
in
or
loop
push
push
ret
cs
aam
aam
jno
mov
shrb
jnp
dec
cmp
mov
sub
loope
mov
fstpt
xchg
std
pushf
std
loop
in
cmp
lods
into
sbb
xchg
lret
aad
fiadds
rcrb
cmp
push
add
mov
inc
fs
cs
jg
pop
push
push
imul
add
adcl
mov
lods
jbe
adcl
cmpsb
cmpsl
and
adcb
sbb
repz
bound
jg
aam
mov
xchg
dec
or
bound
loop
or
jbe
sbb
pop
imul
add
xchg
fcomps
mov
addr16
mov
stc
mov
xor
sti
mov
push
cmp
mov
clc
lods
cmp
loope
sbb
jg
fwait
pop
into
ret
or
lahf
repz
in
cmpsb
daa
insl
mov
mov
out
lods
pop
mov
xor
add
fcomp
dec
pop
pop
cmp
add
xor
repz
out
jo
push
cmp
and
xor
push
pusha
jmp
mov
xor
or
inc
or
or
nop
dec
xor
jno
sbb
jns
mov
mov
mov
nop
movsl
leave
xchg
add
fmull
sbb
jecxz
int3
inc
or
jb
aas
and
sbb
dec
pop
push
mov
xor
test
hlt
and
sbb
cmc
fiaddl
ret
xor
mov
push
xorb
aas
pop
mov
rcl
push
loopne
int
data16
mov
pusha
xchg
mov
sti
xor
enter
add
push
in
lret
pusha
cmpsl
loop
sub
cmpsl
loopne
mov
arpl
fwait
stos
pop
dec
mov
lret
lock
shlb
jp
hlt
jmp
push
jns
push
sub
movsl
js
aas
hlt
inc
jo
mov
fs
pop
dec
mov
sbb
stos
mov
test
mov
jg
xchg
jo
sub
fidivrs
rorl
jae
inc
jge
loope
mov
fwait
sahf
push
insb
mov
insb
mov
xchg
mov
fdivrl
jp
mov
negl
and
repz
or
mov
cltd
jb
cltd
jge
fdivrp
mov
stc
std
aam
xor
data16
out
loope
std
pop
adc
push
mov
insb
mov
mov
into
popa
xlat
jle
into
push
mov
mov
ja
sbb
clc
jl
rorb
sbb
in
data16
test
jno
bound
dec
xchg
mov
sahf
pop
lock
mov
addr16
jns
scas
add
outsb
jae
sbb
pop
sub
enter
sbb
adc
lahf
les
cmpsb
cmpsb
fidivrs
push
dec
pop
outsb
aad
adc
xchg
push
into
and
mov
daa
fisubrl
cwtl
add
clc
pop
andl
lock
lcall
je
adc
aas
ficomps
inc
inc
add
lock
movsb
jbe
stc
dec
mov
insl
push
cmpsl
sub
andb
pop
ds
add
add
cs
mov
sub
sub
add
fldt
dec
dec
inc
dec
mov
stc
int3
hlt
sbb
adc
and
cmp
lret
mov
mov
pop
sub
inc
mov
out
mov
addr16
mov
out
lea
mov
jae
pop
test
repz
mov
mov
insl
scas
xchg
jl
cs
gs
pop
or
cmp
fsubs
or
lcall
rcrl
popf
sbb
jl
sti
dec
mov
sub
sbb
int3
jbe
mov
mov
jno
xor
cs
jae
sbb
add
int
andb
cmpsl
dec
jecxz
cmp
pop
cld
cmp
ror
add
add
push
daa
cmpsb
push
mov
mov
and
lods
lahf
cmpb
push
aam
and
popf
xor
dec
stos
lods
rclb
pop
or
pushf
popf
and
lahf
sub
aaa
inc
mov
push
mov
arpl
in
inc
movsl
push
stos
mov
pop
scas
lahf
out
jmp
mov
xchg
bound
nop
test
lea
mov
out
lret
mov
sahf
or
fwait
hlt
testl
sub
shlb
js
cltd
loopne
fistpll
jle
nop
or
test
mulb
sbb
or
or
pop
sub
mov
jp
mov
mov
add
push
das
jmp
push
xchg
mov
adc
loope
fldenv
movsl
add
push
fwait
sub
add
shlb
mov
test
pop
daa
mov
pushf
ror
jecxz
out
jae
mov
push
adc
bound
xor
daa
add
pushf
push
iret
sbb
xchg
push
ds
cmpsb
test
mov
xor
push
mov
shlb
jno
movsb
xchg
xchg
es
xchg
fistps
cmp
xor
dec
inc
adcl
add
mov
testb
mov
dec
clc
lods
stos
fiaddl
lods
mov
mov
mov
cmp
lret
je
lret
xchg
fmuls
and
lods
push
data16
jne
cmp
cwtl
sbb
push
push
push
repnz
inc
scas
enter
mov
jl
xchg
mov
stos
pop
cwtl
clc
lods
xlat
xchg
xchg
test
mov
insb
loopne
out
clc
xor
lret
int
addb
jnp
and
add
mov
mov
sub
adc
sbb
jno
jp
mov
add
inc
xchg
rolb
outsl
enter
adc
or
sti
xor
out
repz
pop
add
pop
fxch
jno
xor
jbe
pop
mov
aaa
sub
ret
add
and
es
lret
sub
aam
sub
mov
loope
scas
je
data16
mov
jg
ret
or
inc
fmuls
scas
jbe
mov
lcall
mov
pop
lods
fistpll
cmp
push
push
imul
dec
dec
hlt
or
lcall
hlt
mov
mul
cli
cwtl
push
icebp
jae
xor
lds
jbe
push
cmp
adc
adc
jmp
jnp
loop
push
movsl
test
push
cmpsl
or
push
fwait
cmp
loopne
xchg
inc
xchg
mov
sti
jns
xor
dec
movsb
arpl
repz
cmpsb
xchg
repz
fsubs
xchg
popf
xchg
pop
out
jmp
cmp
push
lods
movsl
pop
and
aas
cmp
jecxz
out
js
aaa
mov
inc
inc
sbb
outsb
xor
fs
daa
inc
mov
dec
jecxz
pop
ljmp
repz
das
leave
lret
aam
pop
loope
or
mov
mov
push
out
cmpsb
loop
insb
pop
data16
movsb
movsl
add
xor
fwait
jecxz
fs
frstor
cmp
fsubl
dec
dec
or
out
adc
push
jmp
lock
iret
aas
sbb
xchg
xchg
push
cwtl
add
inc
cld
dec
xor
pop
sub
inc
enter
cmpsl
in
dec
mov
rcrb
jae
cmpsl
xchg
push
xlat
dec
mov
sub
inc
jnp
jo
mov
ds
test
shrl
stc
fisubl
fdivr
jle
and
lods
fdivrs
and
jno
outsb
mov
ljmpw
data16
add
adcl
and
fldcw
mov
xlat
push
mov
cli
roll
movsl
aad
mov
pop
cmp
lods
lahf
shll
mov
addb
pop
lea
pop
lahf
lret
sbb
icebp
clc
adc
or
push
and
pop
pop
pop
test
xchg
or
or
push
and
or
dec
jl
outsl
mov
push
fst
pop
lock
sub
int
jmp
inc
cmp
jecxz
dec
loope
rcll
pop
mov
outsl
xor
std
int3
xchg
mov
mov
jle
aas
xchg
fdivrl
sub
popa
push
shrb
fninit
lret
lret
in
sbb
or
cmp
sub
mov
sub
pop
inc
xchg
inc
js
sbbl
sub
or
test
call
xor
push
pop
movsb
or
cs
mov
rol
lahf
inc
cmpsl
adc
mov
jmp
mov
mov
in
mov
stc
subl
mov
mov
lea
incl
ljmp
pop
add
inc
sar
ljmp
fsubl
sbb
lret
jmp
scas
mov
cmp
addb
sbb
cmp
mov
jnp
pop
sub
xchg
popa
jl
adc
mov
push
sti
inc
pop
incl
mov
iret
xchg
mov
cmpsb
push
and
icebp
mov
pop
insb
jb
insl
mov
sub
inc
mov
jle
adc
fsts
in
push
push
jno
pop
sti
scas
push
jo,pt
roll
lahf
or
std
ret
ja
sbb
arpl
dec
xor
inc
mov
mov
fdivrl
out
rorl
imul
jmp
jecxz
mov
sbb
repz
imul
outsl
cmp
sub
aas
adc
popf
mov
inc
pop
push
pop
sub
push
or
movsb
into
cmpsb
cli
bound
dec
insl
lds
add
loop
or
in
add
sbb
in
out
mov
cmp
aas
pop
push
loop
std
push
push
andb
into
or
icebp
pusha
sbb
cmp
push
repnz
xchg
xor
mov
arpl
jp
sbb
push
xor
lret
lret
stc
xor
ret
icebp
in
lcall
cwtl
cmp
in
daa
dec
sub
xor
loopne
adc
pop
imul
adc
and
imul
nop
outsb
push
shrl
dec
inc
dec
cs
add
in
fildl
movsl
call
adc
or
movsl
add
movsb
adc
pop
lcall
int3
popf
ja
or
cmc
out
sbb
test
dec
sbb
add
loopne
in
mov
mov
inc
leave
nop
mov
add
imul
and
sar
out
or
push
adcb
xor
stos
int3
out
clc
nop
or
add
insl
dec
jbe
jns
int
es
and
jecxz
movsb
xchg
sarb
sahf
add
aaa
push
aam
xchg
outsl
andb
lret
and
xor
adc
mov
subb
mov
pop
js
mov
mov
outsl
dec
repz
pop
out
pop
arpl
ds
divl
fwait
aam
push
fidivl
inc
dec
sub
fcomi
push
inc
pusha
dec
xchg
clc
dec
mov
out
mov
push
movsl
mov
or
gs
orl
cld
add
clc
adc
pop
aam
scas
test
push
mov
mov
scas
and
jmp
and
stc
mov
imul
or
leave
fucom
arpl
and
pop
rcrb
shll
mov
in
mov
iret
cmpsb
pop
and
dec
add
fs
inc
ja
icebp
jmp
or
std
or
jmp
mov
xor
adc
loopne
lea
jns
dec
out
loope
jns
and
jb
cmp
les
mov
mov
mov
inc
in
push
mov
adc
insl
mov
xchg
aam
xchg
adc
mov
xor
inc
push
cmp
pop
xchg
xor
jle
mov
mov
sub
xor
rolb
cmp
jge
and
std
cmp
fcmovne
pushf
pop
mull
loop
sbb
dec
rorl
test
out
test
sbb
and
test
ss
pop
enter
lret
pop
in
sub
jno
cmpsl
mov
jp
repz
mov
ja
push
adc
dec
and
fdiv
pushf
cmp
dec
pop
scas
mov
push
imul
adc
rep
lahf
pop
cmpb
inc
mov
cmp
outsb
jl
cs
dec
mov
addr16
pop
pop
test
imul
std
hlt
mov
pop
push
xor
mov
pop
roll
sbb
icebp
fs
mov
ljmp
decb
dec
test
dec
subb
rcl
mov
dec
mov
repz
adc
lret
or
scas
sub
cmc
aam
jno
mov
xorl
jle
pop
bound
xchg
push
xor
inc
out
push
fldt
sahf
push
mov
sub
cmp
mov
jge
ret
pop
je
mov
or
pop
neg
xor
scas
in
jno
sarb
xor
pop
lret
jne
or
outsb
jmp
or
or
mov
and
and
fisubs
imul
pop
mov
fwait
jno
adc
adc
aaa
dec
sub
dec
adc
mov
or
add
cmpb
or
cwtl
mov
sti
aad
mov
fldcw
call
sbb
sub
mov
mov
add
xchg
inc
pop
mov
mov
idivl
aaa
jo
call
addr16
jle
jns,pn
mov
jmp
jns
repz
jp
inc
push
cmp
outsb
jnp
ret
popa
mov
dec
mov
xorb
inc
sub
nop
sub
push
pop
loop
jb
int3
mov
cmp
pop
or
sub
cld
adc
sub
pop
iret
jno
mov
mov
xlat
or
out
cmc
out
xor
outsl
or
shlb
sbb
out
sub
test
pop
mov
xor
and
in
lea
std
sub
fadd
lahf
xchg
es
int
xor
pop
push
fimuls
jno
mov
imul
xor
dec
sub
fidivrs
sbb
frstor
jl
or
stc
mov
flds
iret
mov
and
and
push
mov
loope
testb
shrb
and
sbb
inc
fwait
and
icebp
mov
imul
lret
jnp
test
pop
xchg
fildll
push
sbb
fbstp
call
dec
in
cs
push
xor
mull
jmp
insl
out
dec
pop
mov
dec
mov
in
je
inc
cmp
mov
push
leave
lret
mov
ds
cmp
push
ljmp
pop
out
or
out
loop
stc
push
jmp
movsb
inc
mov
data16
rcll
cs
lahf
imul
mov
insl
ret
sub
popa
mov
mov
leave
repnz
xchg
les
mov
sbb
push
mov
movsb
sub
add
push
ficomps
mov
dec
lock
scas
insb
mov
repz
clc
and
dec
addr16
mov
mov
mov
es
inc
repnz
and
cmpsb
jge
adc
xchg
roll
push
inc
mov
iret
jae
les
mov
jae
adc
add
jle
sbb
dec
push
dec
xchg
sbb
mov
pop
xor
stos
out
xor
mov
test
les
mov
xor
mov
push
gs
std
dec
sbb
iret
adc
xchg
daa
test
adc
inc
pop
cmp
sbb
jo
or
sub
and
aad
call
int
cmpsb
or
out
test
leave
aas
lods
imul
rcll
roll
adc
jne
in
je
mov
mov
std
add
cmp
lret
lahf
xorb
sbb
mov
ret
and
add
xor
mov
push
insl
adc
int
push
push
push
sub
es
pop
push
pop
ja
je
lods
add
aas
push
in
sbb
aaa
jo
jb
jecxz
mov
push
pop
gs
call
push
and
sahf
adc
cmp
aad
pop
pop
icebp
push
mov
cmpsl
jne
faddp
push
adc
sub
ss
pop
xor
xchg
mov
add
xchg
sub
inc
sbb
inc
mov
mov
pop
xchg
and
enter
mov
movsb
popa
xor
stos
shl
and
sbb
in
adc
add
jo
add
add
mov
mov
mov
nop
jg
loope
test
xchg
mov
inc
comiss
rolb
orps
es
cltd
pop
loopne
push
adc
leave
add
cwtl
jmp
adc
xchg
inc
adc
fwait
push
repz
sub
sbb
adcb
pop
pop
imul
scas
xchg
mov
inc
divb
cmp
jno
fdivl
add
adc
sub
xor
mov
rcrb
cs
cwtl
dec
fcomp
cmp
xlat
add
lock
shll
mov
ret
adc
scas
push
mov
addl
cld
mov
rorb
lods
mov
inc
xlat
xchg
mov
mov
test
int
push
push
hlt
adc
cmpsl
and
outsb
jg
lret
xor
loop
in
ret
ljmp
iret
pop
lds
and
stos
add
or
ljmp
cmp
jns
cmp
fisttps
insl
mov
push
xchg
imul
insw
xchg
fcom
stc
std
cmp
daa
cmp
push
dec
clc
xchg
sbb
inc
outsb
fsubrl
mulb
pop
pusha
adc
popl
hlt
cmovbe
ljmp
mov
or
fadd
sub
stos
push
xor
cli
mov
sbb
add
stc
arpl
pop
adc
imul
lahf
jo
arpl
icebp
daa
sub
jb
insb
adc
rol
push
scas
pop
call
inc
mov
imul
cmp
aad
inc
inc
aaa
xor
lcall
mov
mov
les
lret
aad
jg
sub
sti
push
add
mov
dec
inc
mov
jbe
sbb
sti
repnz
andb
dec
fwait
out
push
push
shlb
enter
movsb
inc
lahf
lret
jno
std
pop
xchg
popf
push
inc
jo
sbb
subl
daa
sbb
jne
lods
lea
push
and
adc
and
jge
mov
cmpsl
enter
repnz
ja
fwait
pop
ss
imul
fistpl
hlt
xchg
rcrb
mov
add
rolb
imul
mov
int
jg
fildll
xchg
pop
aaa
repnz
push
cmpsb
cmp
mov
push
out
icebp
outsb
jae
out
hlt
lcall
cmp
lods
sbb
push
aad
inc
mov
sub
scas
fs
pop
xchg
out
inc
fildl
sbb
jl
jmp
inc
pop
fimull
lret
test
xchg
xchg
mov
shlb
rorl
fsubrs
push
popa
and
pusha
clc
mov
sub
cmp
fs
movhps
nop
ret
push
mov
or
rorb
or
lea
mov
xor
push
ss
femms
cmc
loop
int
fs
movsb
in
lods
fsubrl
mov
sub
test
jae
xchg
pop
or
cmp
mov
loope
repnz
dec
std
jmp
adc
xchg
cld
add
fs
dec
movsb
dec
xchg
shl
scas
inc
jo
add
pop
jno
insb
pop
popa
jmp
mov
mov
pop
fisttpl
push
pop
lret
lret
xchg
int3
xchg
int3
scas
and
iret
icebp
add
cmp
lahf
jno
push
arpl
ja
dec
xor
aas
xchg
mov
addl
scas
jne
push
sub
les
lret
jmp
pop
sbb
xor
pop
test
out
pusha
jle
mov
dec
cs
fisubrs
push
pop
mov
rorb
pop
inc
jle
push
adc
hlt
push
and
jg
fistps
cmp
lods
outsb
lods
xor
or
inc
xchg
in
adc
les
arpl
das
rcrb
mov
lret
adc
lahf
icebp
stos
inc
pop
sahf
sbb
outsb
test
repnz
sbb
addb
ror
iret
cli
repz
add
es
sub
leave
insl
shlb
sub
movsb
mov
xchg
xor
mov
push
dec
jecxz
sub
sbb
icebp
mov
push
sub
outsl
es
cwtl
je
mov
inc
push
push
pop
pop
cli
ljmp
or
jnp
xor
lock
mov
into
dec
fiadds
mov
xlat
cmp
cltd
dec
xor
add
mov
std
push
adcl
fldcw
loopne
add
mov
mov
cmp
sub
push
out
sbb
adc
fstps
cld
adc
sub
cmp
in
pop
and
cmp
enter
mov
sahf
and
jno
sbb
call
push
test
or
insl
dec
lods
xor
adc
mulb
jae
in
insl
mov
js
xlat
sub
cmpsl
dec
outsb
or
jnp
jge
loop
decb
fisttpl
mov
push
xchg
push
cmpl
rclb
aaa
test
push
inc
sub
repz
or
hlt
push
add
push
aam
dec
stc
cmp
mov
cmp
lret
mov
repnz
lds
mov
loope
push
arpl
cmpxchg
inc
fistl
out
fsubr
cltd
cmp
ss
pushf
add
jne
movsb
push
mov
adcl
and
outsb
decl
stos
js
jb
and
mov
cmp
pushw
shll
negb
enter
rorl
push
mov
adc
cltd
scas
sti
push
fldl
sahf
inc
movsb
or
call
cmp
iret
in
test
cwtl
sbb
aaa
inc
jnp
test
test
mov
fistps
cmp
inc
scas
xchg
inc
mov
cmp
jbe
mov
sbb
mov
les
imul
out
loope
and
inc
roll
adc
xor
in
loopne
lock
xchg
mov
dec
loopne
mov
xlat
fnsave
mov
xlat
cmpsb
pop
jbe
movsl
and
lcall
or
xor
push
inc
mov
xorb
addb
insb
ja
inc
adc
inc
cmp
pop
sbb
jge
call
push
andl
and
shlb
ss
push
push
or
inc
outsl
aad
mov
ss
mov
and
pop
rcll
out
mov
call
jo
jnp
lahf
push
cmc
lcall
out
movsb
push
gs
xchg
and
mov
out
push
xchg
dec
mov
inc
push
das
mov
pop
xlat
daa
ja
cwtl
fcomps
mov
into
pop
gs
mov
cld
das
sbb
add
cli
lea
jb
or
out
or
sbb
mov
lcall
adc
sbbb
push
aaa
inc
mov
rcll
aam
inc
stos
pop
adc
push
cmp
js
add
push
pop
xchg
or
sub
jg
sub
pop
mov
lea
pop
shlb
xchg
shld
mov
inc
cmp
inc
sbb
out
test
cmp
call
push
sbb
lret
mov
lods
inc
fisubrl
jns
pop
pop
add
dec
mov
dec
jg
xorl
xchg
pop
or
subl
mov
push
jno
mov
mov
dec
bound
push
jle
pop
test
push
cmp
ret
pop
data16
ret
xor
js
sub
sbb
xchg
daa
movsb
aas
sbb
xchg
movsl
inc
cmp
int
leave
and
inc
push
xor
in
pop
push
dec
push
and
add
and
dec
leave
gs
xor
xchg
in
jmp
loopne
inc
stos
sbb
jno
mov
pop
insl
jo
rorl
dec
xchg
mov
jg
jae
stos
mov
fbstp
movsl
and
fs
ja
fldl
cmc
out
into
and
dec
mov
pop
mov
pop
or
repnz
xor
jb
sbb
cmp
int
xchg
sbb
dec
lea
arpl
xchg
mov
ds
mov
mov
fwait
xchg
cmp
popf
iret
or
filds
stos
faddl
adc
and
mov
add
dec
inc
loop
pop
xchg
lds
sbb
popa
mov
jno
scas
pop
movsl
subps
xchg
push
shll
push
scas
inc
jle
inc
pop
xor
rclb
sub
or
jg
mull
data16
mov
sub
and
into
and
inc
int
pop
fcomp
out
in
lock
daa
or
mov
or
mov
cmp
cwtl
cmp
fwait
sbb
mov
cwtl
iret
sbb
das
xchg
fmul
push
or
dec
lahf
cmp
xlat
ror
add
fs
shll
add
adc
mov
or
xchg
daa
inc
shrb
inc
jp
sbb
sbb
fists
ds
jp
sbb
pop
loop
mov
shlb
cwtl
in
jns
pop
es
mov
add
dec
mov
mov
adc
leave
popa
jbe
cmp
iret
or
mov
icebp
cmp
loope
push
into
cmp
pop
fcomps
aas
ss
jo
aad
push
aam
dec
adc
add
xchg
loopne,pt
push
adc
add
out
jmp
push
cmp
fs
gs
xchg
sbb
jo
int
dec
scas
pop
xchg
das
jno
leave
mov
jnp
and
dec
int3
leave
in
mov
jbe
loopne
int3
shrl
jae
pushf
push
push
mov
xor
stos
or
call
popa
add
xchg
test
push
pushf
ficoms
sbb
add
flds
jns
or
jp
pop
in
pop
jnp
mov
in
mov
or
sti
pop
adc
repnz
xchg
aas
sub
lea
popf
pop
fimull
inc
jl
jecxz
push
push
test
daa
mov
sbb
dec
mov
bound
mov
xchg
push
mov
stos
test
call
mov
outsb
add
mov
push
mov
fwait
jnp
mov
insl
pusha
shr
shr
lods
cmp
arpl
rcrl
gs
mov
jnp
aas
adc
mov
outsb
aad
mov
inc
sbb
shl
cmp
loop
pop
in
inc
lahf
ret
cmc
pop
fstps
pop
fs
and
lret
jb
inc
lahf
adcl
mov
pop
sahf
mov
pop
dec
or
lret
mov
jecxz
xchg
inc
cmp
jl
xchg
es
lret
mov
stc
mov
xchg
xor
repnz
out
test
mov
push
xchg
push
xor
lea
jmp
out
or
cld
enter
pop
gs
mov
adc
fwait
inc
mov
xchg
aam
aam
jnp
dec
or
in
push
pusha
fidivrs
dec
fdivs
mov
jb
mov
shrl
mov
pusha
sbb
mov
adc
and
dec
or
ja
insl
aaa
in
loopne
je
addr16
test
orl
popa
sub
test
inc
pop
icebp
and
jmp
out
or
sbb
clc
xchg
or
test
xlat
sarb
jl
stos
xor
dec
cmpsb
daa
gs
dec
int3
add
pop
rorb
mov
std
dec
aas
test
cmp
paddsw
and
test
lock
dec
add
stos
loop
in
and
adc
xor
pop
fsubrp
jo
push
subb
inc
cmp
adc
sub
xor
cmpsl
rcrl
addr16
in
push
fsubr
and
fistps
jne
xor
bound
es
jbe
lods
enter
mov
mull
xchg
pop
inc
insl
sub
cmpb
adc
fstpt
jno
lcall
xor
bound
add
inc
push
xchg
jns
dec
imul
dec
xor
and
cmpsb
stos
or
pop
mov
movsl
jae,pn
lahf
xor
add
js
fwait
cmp
mov
lahf
jecxz
mov
dec
insb
xadd
mov
mov
call
lcall
iret
inc
jp
aaa
cwtl
mov
inc
inc
test
insl
inc
lods
inc
int3
scas
and
sti
mov
dec
ljmp
and
and
jb
clc
in
adc
call
dec
stc
lds
daa
push
sub
test
xchg
ror
dec
pop
push
data16
inc
mov
repz
arpl
add
push
pop
cmc
mov
add
int
sarl
mov
sub
fisubs
sbb
sub
negb
xchg
repz
dec
pop
dec
jg
mov
mov
mov
jecxz
dec
mov
adc
push
fisubl
ja
cld
or
lret
xor
ret
fwait
mov
fs
imul
lods
dec
pop
or
daa
jne
cld
outsl
shlb
sbb
negl
sti
jmp
xchg
jne
in
cmpl
cmp
fidivrl
out
fmulp
scas
out
call
mov
jp
cmp
js
stos
add
add
test
add
aas
std
xor
je
dec
sbb
test
or
stc
sub
jno
push
lret
or
pushf
nop
and
jne
cli
int
incl
sbb
insb
das
ret
push
push
ja
data16
mov
mov
xchg
cmc
leave
aam
imul
cmpsl
inc
out
imul
cmp
das
inc
and
arpl
mov
divb
fs
test
jae
inc
mov
shlb
into
subb
cmc
pop
adc
mov
xor
je
lret
imul
pop
popf
and
adc
inc
jg
jl
nop
pushf
xor
movsb
ljmp
push
push
push
movsb
cmp
mov
lods
shll
addr16
dec
jle
push
je
in
inc
in
les
cld
cmpl
aaa
jg
aaa
mov
add
aad
das
dec
pop
cmpsl
push
adc
lahf
pop
push
shlb
inc
mov
dec
daa
sbb
jl
aam
hlt
iret
mov
loopne
pop
mov
dec
pop
ret
jmp
xchg
pop
lock
mov
lds
stc
stos
mov
cmpsb
movq
pop
ja
lret
dec
dec
pop
out
stos
mov
icebp
and
insb
mov
cmp
out
loopne
insl
hlt
cltd
sbb
cmp
insl
xchg
mov
cmp
xchg
les
sbb
jno
pop
or
sub
push
iret
jecxz
xchg
add
adc
push
int3
js
and
outsb
repz
sbb
push
rcl
mov
lods
xchg
pop
mov
inc
das
and
sbb
clc
sbb
mov
out
add
xlat
or
sub
mov
mov
out
add
sahf
push
jbe
inc
or
dec
jbe
shll
lods
mov
nop
sub
pop
pop
mov
inc
xchg
inc
out
in
mov
mov
push
push
movsl
and
mov
mov
negl
out
dec
js
pop
add
jg
gs
xor
cmp
pop
mov
shlb
into
inc
fcoms
and
in
mov
mov
cmpb
cmpsb
ficomps
repz
inc
cli
xchg
jg
xor
bound
pop
cs
mov
cmp
mov
sbb
jmp
push
leave
icebp
cmp
test
fsubrl
sub
add
pop
adc
lods
jecxz
sahf
cmpsb
stos
jae
fidivs
inc
sub
mov
and
push
inc
movsb
mul
stos
out
xor
pop
mov
roll
and
int
addr16
and
outsb
leave
push
movsb
and
es
inc
nop
adc
mov
rorb
in
stos
daa
lret
lret
cs
push
pop
ja
imul
xor
sti
cmp
es
jne
sarb
cmp
cmp
lret
pop
mov
add
fbld
mov
mov
out
xor
cmpsl
xor
out
into
mov
rclb
push
and
popa
sub
ret
setge
mov
add
dec
lret
insb
int
or
mov
pusha
mov
enter
std
lcall
push
cli
push
sbb
imul
pop
test
scas
loopne,pn
out
test
ljmp
push
test
cmp
aas
jae
jl
jns
and
cmp
sub
lods
or
or
dec
ds
bound
subl
lret
repz
in
xchg
pop
loope
call
test
push
out
push
fldcw
mov
mov
push
adc
ss
inc
sahf
imul
int3
adc
mov
xchg
fcoms
mov
fisttpll
sahf
mov
push
and
push
xor
adc
roll
cltd
aas
cmp
jno
sub
fstpt
pop
mov
sbb
mov
jnp
adc
addb
faddl
inc
push
cmp
rcrb
cli
fcmovnb
out
sub
push
push
and
and
dec
mov
outsl
sti
clc
mov
jne
dec
and
insb
sahf
xor
out
inc
and
sub
stc
lea
iret
pusha
fbstp
xchg
push
add
in
test
and
call
sub
mov
repnz
mov
movsb
daa
lea
sub
orb
fistpl
lahf
sbb
jae
adc
ja
inc
fwait
sahf
gs
xchg
inc
loope
cmp
fiadds
mov
dec
xor
inc
imul
mov
add
mov
mov
mov
sbbl
mov
pop
shlb
test
ljmp
int
jge
shll
mov
xchg
inc
pop
pop
dec
shll
pop
jle
out
rcll
sar
sub
icebp
call
mov
mov
or
mov
shlb
hlt
xorl
loope
mov
add
jne
addr16
xchg
scas
dec
sti
and
outsl
loopne
mov
in
daa
and
mov
ret
jbe
sbb
gs
inc
cld
dec
or
inc
aam
mov
ret
cltd
sub
ret
mov
cmpsl
dec
fistl
ljmp
adc
sbb
lock
xchg
dec
das
test
leave
xchg
sub
add
mov
in
aad
gs
dec
pop
mov
xor
mov
sub
sub
inc
popf
lds
or
mov
test
or
xchg
jno
test
or
fstl
shrb
iret
hlt
pop
repz
cs
cmova
inc
leave
dec
sub
push
loope
rolb
cmp
push
add
notl
insb
mov
jmp
cld
jle
mov
bound
into
dec
mov
je
xchg
fistps
xchg
ds
scas
or
xor
sbb
daa
fimull
mov
adc
into
jb
insb
lret
lock
mov
mov
dec
adc
repz
or
mov
popf
insl
add
iret
add
ljmp
mov
je
lahf
pop
add
repz
xor
xor
push
imul
mov
rcrl
xor
ds
js
nop
scas
fs
push
mov
push
push
or
pop
ljmp
or
fisubrs
sbb
and
add
gs
sbb
scas
pop
stos
addr16
push
clc
insl
scas
push
js
xlat
sbb
xor
movsl
out
cwtl
jns
add
or
xor
and
xchg
clc
jge
daa
jae
roll
jbe
stos
push
je
int3
inc
cmp
fistpl
and
outsb
int3
xchg
in
or
xchg
pushf
out
adc
ret
adc
mov
xor
cmp
scas
fcoml
repnz
int
push
es
repnz
or
loopne
xor
std
mov
enter
mov
scas
int
sub
push
stc
push
jbe
rcrb
xchg
xchg
jmp
pop
lahf
dec
cmp
sub
xchg
enter
inc
push
in
cs
mov
push
inc
ffree
and
jne
ds
jbe
adc
imul
adc
arpl
and
mov
dec
xor
insl
data16
lds
repz
or
mov
stos
imul
in
jle
add
icebp
pushf
sahf
sub
pop
ds
mov
xor
enter
xchg
mull
int3
repnz
push
cmp
out
cli
bound
xchg
sarl
in
rol
scas
adc
mov
mov
add
pop
es
aam
rcrl
xchg
xor
loop
pushf
aam
xchg
adc
idivb
into
dec
push
push
xchg
lods
ficoml
aas
sahf
in
lods
int3
fsub
data16
dec
mov
movsl
mov
jnp
jns
inc
inc
xor
and
fisubrl
call
faddl
add
lods
nop
mov
cltd
enter
mov
mov
pushf
mov
mov
jbe
pushf
xor
insb
inc
imul
pop
sahf
mov
adc
and
push
and
xchg
xchg
jp
icebp
iret
sbbl
aad
mov
sbb
iret
mov
mov
flds
imul
fisttps
add
sub
aaa
stos
push
insb
sub
xchg
gs
adc
data16
dec
cmp
fadds
and
cmp
sub
cmp
loopne
push
sti
adc
out
push
bound
ret
or
xor
jg
repz
inc
orl
mov
dec
maxps
cmpsl
mov
mov
jo
pop
lahf
and
mov
ljmp
jns
rcrl
int
int3
pop
push
jne
pop
mov
xor
hlt
stos
mov
xchg
add
rol
sbb
aad
lcall
xor
test
das
lods
stos
pop
mov
add
push
lahf
pop
in
orl
jb
adc
rolb
and
dec
xchg
rorl
push
jns
int3
push
fildll
cmp
lods
mov
mov
push
mov
cli
inc
dec
sub
inc
xchg
sub
int3
inc
add
xor
fisttpll
and
mov
xchg
pop
int
sbb
test
add
dec
jp
push
or
orb
add
std
mov
sbb
cwtl
sbb
shll
mov
pop
roll
scas
test
int3
xor
lods
push
shl
push
inc
bound
lret
inc
mov
leave
jb
xorl
loope
sub
fnstenv
or
jg
scas
jns
ljmp
push
outsb
rsqrtps
subb
repnz
lea
clc
and
inc
mov
imulb
adc
xchg
dec
sbb
sub
sbb
xchg
mov
shr
pop
hlt
sub
add
lcall
pop
mov
popa
cmc
add
add
xor
js
adc
insl
pop
push
repnz
imul
adc
cwtl
add
cmpsb
jb
nop
xchg
cli
dec
ljmp
xchg
cmp
add
es
inc
aaa
das
popf
shlb
movsb
pop
sbb
xchg
das
adc
jne
loop
jne
or
cmp
dec
std
sub
lret
pop
dec
call
add
mov
push
or
add
fnsave
and
lock
push
fcoms
pop
add
leave
pop
gs
daa
movsb
data16
adc
out
cwtl
mov
dec
mov
inc
dec
mov
aaa
test
cmp
cltd
std
jne
inc
roll
mov
pop
cmp
dec
outsb
push
call
pop
in
inc
dec
repnz
dec
inc
repnz
rcrl
repnz
testb
xor
lcall
xchg
aaa
idivb
mov
push
mov
sbb
sarl
shr
or
insb
dec
fsubl
and
cld
add
xchg
mov
aaa
aaa
mov
call
dec
push
mov
add
jns
stos
fcomps
std
aaa
rcrb
xchg
cmp
fisttps
mov
xor
jo
aaa
nop
inc
rclb
sub
push
pop
arpl
lcall
jns
ret
jp
push
inc
js
cmovge
mov
push
and
xchg
xor
cmp
mov
sub
leave
push
addr16
xchg
xor
and
mov
jnp
ja
adc
ljmp
mov
add
mov
dec
int
clc
mov
pop
lods
mov
jl
push
arpl
add
xor
pop
fists
imul
jb
int
push
jle
jmp
xchg
mov
inc
call
out
test
mov
test
jecxz
int
popf
in
cmc
icebp
push
fsub
mov
dec
sbb
jl
test
xchg
scas
mov
cmc
xor
mov
xchg
movsb
jno
xor
mov
call
add
and
sub
or
mov
ja
push
inc
jle,pt
inc
or
aaa
and
xchg
pop
rorl
daa
and
mov
cmp
and
xchg
push
cwtl
push
xchg
mov
imul
sub
mov
pop
adc
daa
mov
and
insl
mov
push
out
fs
or
push
orb
xchg
in
fdiv
popf
lds
pusha
pop
or
pop
mov
lret
dec
mov
xchg
fcomip
sub
jns
int3
stos
aad
hlt
and
repnz
sti
out
dec
sub
cmp
cli
mov
sub
adc
mov
test
dec
and
sub
aaa
int
pop
and
sub
daa
or
xchg
orb
insl
ss
cmp
mov
mov
and
data16
xchg
inc
cmpsb
inc
mov
lret
jnp
bound
push
cwtl
xor
inc
sub
jne
add
inc
adcb
lock
xor
addr16
mov
stos
push
dec
add
xlat
adc
jbe
and
or
jae
or
rcrl
adc
stos
icebp
lret
iret
fnsave
cltd
test
sarb
sbb
jle
adc
add
ficomps
inc
aad
push
repnz
sbbl
cmp
fidivs
lahf
push
ja
addr16
and
xchg
jl
mov
aam
enter
xchg
or
rol
enter
outsb
push
in
iret
stos
cmc
adc
cmp
jne
jp
sbb
xchg
loope
and
cmp
sub
outsb
cld
push
pop
mov
loopne
sbb
loopne
rcr
js
inc
jmp
dec
movsl
push
std
or
or
dec
mov
and
addr16
fdivl
sub
jmp
cmp
push
sbb
out
pslld
out
jno
gs
jl
push
cmp
xchg
add
cs
test
fadds
lea
lock
adc
mov
imul
mov
insb
outsb
xchg
arpl
addb
add
sarl
pop
popf
fldl
lcall
sbb
and
mov
nop
sub
xor
mov
mov
jge
add
pop
ljmp
mov
mov
xor
insb
stos
jl
mov
adc
dec
dec
jg
sbb
ds
cmp
mov
inc
inc
push
adc
mov
mov
push
inc
add
ljmp
out
dec
inc
std
pop
or
add
sti
jne
out
mov
lea
cmp
popf
addl
xchg
out
xor
xor
fwait
xlat
xor
and
rorb
inc
fnstcw
xchg
ljmp
rorb
in
in
mov
cmp
inc
jne
enter
cmpsb
xchg
inc
cmp
mov
mov
mov
xor
mov
jg
repnz
arpl
jne
das
xor
sbb
ret
or
sti
scas
inc
outsb
aaa
xchg
and
stos
mov
test
fildl
and
xchg
out
mov
fdiv
loope
out
xchg
mov
mov
dec
adc
mov
or
ds
and
imul
lcall
cld
or
lea
cmp
xor
fstpt
mov
xlat
pop
jl
ficoms
xchg
outsb
test
cmp
int
cltd
test
mov
jg
adc
fildl
fwait
mov
lcall
or
dec
xor
sub
int
and
ret
xchg
lods
mov
inc
or
stc
loopne
je
push
shlb
or
std
mov
ss
pop
movsb
sbb
push
xlat
sub
xor
repnz
movsb
insb
and
jae
jge
pushf
cwtl
out
cmpsl
xchg
call
sbb
add
push
inc
out
inc
mov
sub
push
cs
mov
lock
in
btr
pop
cmp
mov
inc
push
das
mov
fbld
jae
inc
push
push
rclb
aas
lds
out
popa
cmpsb
push
sbb
mov
sbb
jp
pop
aas
lea
mov
cmpl
incl
lods
sub
inc
sub
jo,pt
jecxz
scas
fdivl
les
imul
push
pop
pop
lods
fistpl
add
adc
xor
mov
xor
outsb
mov
cmp
orb
push
bound
aaa
jns
test
push
negb
js
dec
test
xor
jg
inc
call
add
push
push
dec
in
or
scas
ficoms
xor
or
push
jae
xlat
lahf
add
mov
test
out
ja
mov
insl
imul
xchg
or
into
mov
push
sub
ja
scas
pop
xchg
into
addl
or
inc
sar
pop
and
xchg
jmp
push
out
aas
xlat
test
xchg
mov
mov
lcall
lcall
inc
scas
out
push
inc
gs
add
xchg
jb
xchg
cltd
neg
pop
mov
pop
push
movsb
out
dec
sbb
cmpsl
inc
jae
cmp
shlb
push
dec
inc
ret
inc
cld
xchg
outsb
fwait
enter
lds
xor
shll
addr16
cmpsl
or
lds
pushf
add
jmp
cmp
mov
fldcw
les
fidivs
inc
shl
addr16
cmp
in
push
jae
xchg
jbe
push
rcrl
lret
mov
pop
or
adc
ret
pop
mov
ss
jle
sub
testl
sahf
xchg
jnp
stc
into
sbb
clc
sub
lahf
push
out
pop
sbb
add
add
enter
pcmpeqb
fdivrl
scas
add
ljmp
pop
push
insb
mov
add
ds
cmp
stos
pop
adc
inc
jge
pop
fldt
adc
pop
loop
icebp
int
fdivrs
adc
aas
pop
daa
scas
out
lock
int3
jbe
dec
clc
rclb
cld
in
pop
in
and
pop
cmc
mov
dec
fdivrp
cmp
push
cmp
push
outsb
jb
int
dec
mov
dec
push
sub
xor
sub
sub
sbb
daa
aaa
sub
push
in
out
cwtl
test
cmp
adc
jge
xor
nop
or
lods
and
pop
ret
leave
divl
aad
mov
out
mov
cmp
sbb
cltd
mov
lahf
shll
jmp
jbe
mov
sbb
pop
ret
call
add
push
mov
cld
fwait
cmp
and
daa
jb
dec
shll
pusha
adc
xchg
mov
shr
insb
aas
in
mov
ds
roll
cmp
dec
cmc
out
js
insb
loope
or
jmp
fistpll
cld
arpl
in
sahf
pop
jno
out
test
lea
xor
jns
pusha
jecxz
sarb
mov
insb
les
mov
mov
add
xor
or
repnz
cmp
fcom
icebp
xchg
and
and
arpl
mov
imul
subb
pusha
sub
loop
insb
push
xor
mov
in
sbb
mov
push
inc
je
or
push
insb
add
insl
xchg
loop
jle
mov
cmpsb
push
call
jo
aaa
mov
fists
adc
sub
pop
pop
xchg
push
clc
notb
shrb
lcall
push
scas
std
xchg
push
pop
cmp
xor
pop
xchg
jae
in
pop
iret
shlb
pop
movsb
jne
add
mov
decl
push
xchg
push
cltd
jo
mov
inc
sub
cmpsb
out
inc
adc
push
sub
push
data16
xor
in
push
sbb
or
cmp
orb
cmpsb
mov
sbb
cmp
les
adc
inc
arpl
ds
in
outsb
adc
and
dec
stc
andl
pop
add
mov
sub
loop
lret
shlb
jns
push
push
and
dec
jmp
sbb
popf
sbb
xor
push
outsb
sbb
cmpsl
vstmxcsr
aad
dec
je
jb
je
or
shl
cs
xor
mov
and
inc
pop
in
xchg
xchg
adc
sub
fimuls
stc
aam
pop
in
cmpsl
clc
push
adcb
inc
jnp
sarb
cli
mov
push
adc
xor
adc
jnp
test
inc
test
adc
ret
call
mov
popa
fbstp
enter
aaa
jb
add
loope
adc
fnstcw
bound
sub
or
inc
fucomp
out
jns
outsl
or
stos
ljmp
and
inc
in
cmc
dec
lds
add
stos
adc
push
push
cmp
loope
aaa
pop
addr16
es
stc
call
add
frstor
inc
in
xor
cmp
xorb
and
jae
call
rcr
loope
push
push
xchg
sbb
into
dec
mov
push
std
inc
ss
mov
sbb
cmpsb
adc
inc
lods
icebp
cmp
out
mov
push
or
stc
mov
fildll
inc
icebp
cmp
pusha
lock
lcall
data16
call
adc
cmp
ljmp
into
shrl
in
jmp
jg
or
sbb
push
cmp
sub
rol
add
sbb
push
test
int3
outsb
pop
out
fwait
and
loopne
stc
fsubrs
mov
icebp
clc
divb
insb
std
adc
mov
or
sbb
iret
mov
push
mov
ret
jns
fsubl
push
add
in
inc
mov
push
repz
fcomip
movsl
loope
stos
jnp
jne
lcall
adc
pop
mov
push
arpl
adc
int3
ss
leave
jmp
data16
in
mov
mov
leave
gs
in
mov
or
mov
inc
aam
fadd
jecxz
insl
mov
add
cmpsl
inc
loop
adc
stos
sbb
xor
call
inc
orb
dec
cmp
lods
fs
test
cmp
mov
cmpsl
js
mov
xchg
aaa
iret
roll
lods
or
ret
out
jle
lods
fimull
fcmove
sub
mov
stos
bound
fiadds
mov
push
in
sub
shlb
stos
mov
mov
pop
dec
mov
lods
cmp
movsb
and
dec
imul
sub
mov
or
and
xchg
aas
repnz
xchg
cmp
xchg
mov
sbb
cmp
jb
pop
addr16
xorb
aaa
xor
inc
call
and
cmp
mov
add
ret
push
pop
mov
lret
inc
imul
movsb
rep
test
xchg
cmc
adc
or
dec
fmuls
xchg
pop
or
jbe
lahf
and
gs
sti
imul
mov
xchg
xor
daa
sub
inc
mov
and
insb
int3
add
lods
fsubs
pop
lret
arpl
or
fldenv
hlt
je
and
dec
in
enter
jae
cmp
arpl
fistpl
push
jne,pn
clc
jmp
mov
cmp
lods
push
and
fwait
pop
add
adc
pop
int3
push
dec
and
xchg
mov
filds
ret
and
mov
mulb
mov
lea
punpckhwd
cmp
and
inc
sbb
dec
jp
fwait
je
pop
scas
or
aaa
inc
push
mov
push
sbb
dec
and
xchg
inc
test
xor
xchg
daa
je
cmp
aad
lods
dec
test
jo
push
jp
add
aam
addb
cmc
or
jecxz
adc
add
shrl
xor
dec
jo
jb
push
mov
push
pop
std
push
pop
scas
in
fdiv
mov
inc
movsl
cs
xor
cld
sbb
dec
push
ret
cmp
push
mov
xchg
lods
fisttpl
outsl
fcmovne
ficoml
sbb
scas
cli
shrl
xor
in
jl
jge
sub
icebp
loope
out
jne
cmpsl
adc
jbe
pop
dec
push
insb
lret
incb
xor
daa
xor
aad
xchg
outsb
stos
scas
shl
lret
cli
jl
push
jmp
pop
popa
arpl
sub
imul
mov
std
sub
cmp
inc
adc
pop
scas
add
adc
rolb
add
adc
add
jp
fsubs
xor
add
pop
ljmp
pop
add
lret
jbe
push
subb
adc
cmp
in
jne,pn
out
imul
or
sub
ret
mov
adc
dec
sub
cld
pop
push
xchg
xor
pop
jmp
cld
in
sar
movsl
or
imul
mov
pop
push
jp
inc
test
xbegin
pop
je
cmpsb
repz
fwait
jp
mov
inc
and
loopne
cmp
cld
jne
addb
xor
pop
orl
mov
fsubs
les
insb
pushf
insb
xor
push
xor
iret
or
and
inc
xor
add
shll
xlat
mov
outsb
dec
xchg
xchg
sub
xor
dec
mov
push
cli
sbb
mov
pop
jno
xlat
xlat
mov
cmp
test
mov
jl
inc
or
imul
push
xor
xchg
sub
mov
les
stc
outsb
arpl
or
sub
cmp
imul
hlt
lods
call
push
push
pop
icebp
and
adc
out
fnstcw
rcrl
mov
outsl
cmpsl
inc
sbb
dec
arpl
cs
aad
mov
pop
rcr
in
adc
lods
pop
dec
pop
div
sub
pop
sahf
aaa
xchg
ret
mov
dec
xchg
stc
ficoml
push
or
je
cmpsl
mov
lods
test
xchg
mov
dec
mov
xor
cmp
jmp
lock
dec
xor
pop
cmp
or
lock
mov
loop
pusha
inc
sub
rol
stos
jmp
jmp
sti
sbb
mov
stos
dec
pop
pop
pusha
sub
js
in
and
jb
jo
cmp
int
arpl
fldl
lahf
and
cmpb
jge
and
xchg
data16
sub
cwtl
jl
sbb
cltd
and
cld
push
lcall
push
inc
lock
sbb
call
sbb
push
xor
add
test
bound
and
push
out
push
jg
lds
shrb
fnop
xlat
inc
cmpsb
lret
mov
sub
or
out
jp
inc
adc
cmp
scas
mov
popw
pop
xchg
ret
sahf
mov
mov
decb
aas
pop
mov
ljmp
add
jge
movl
ljmp
out
in
mov
out
mov
cmp
cli
xor
ss
out
xor
iret
or
fs
inc
out
ret
sub
ret
pop
mov
mov
sti
xorb
push
push
mov
xchg
cmpsl
leave
pushf
mov
and
push
popa
mov
outsb
add
fbld
cmp
xor
push
and
inc
jl
cmp
stc
sbb
push
xchg
xchg
push
data16
loope
xchg
lea
ljmp
clc
imul
in
insl
jecxz
jl
test
bound
sahf
jmp
notb
xor
mov
js
sbb
ss
lahf
in
xor
shll
push
orb
add
cmp
ljmp
push
or
bound
mov
add
and
mov
dec
and
adc
cltd
lock
insb
es
inc
dec
negl
inc
xchg
mov
ss
inc
dec
sbb
dec
dec
mov
das
lret
nop
xchg
popa
add
nop
dec
jl
mov
pushf
or
adc
add
or
in
adc
scas
sbb
inc
jbe
jbe
sbb
rcrl
lods
and
insl
sbb
push
cs
sbb
mov
push
cmp
sahf
sbb
mov
pop
lret
inc
or
and
into
mov
out
cmc
xlat
lods
pop
cmp
sbb
ret
or
push
ss
loop
push
adc
push
xor
cmpsl
adc
std
stc
outsb
xchg
add
test
scas
scas
xchg
pop
stos
cmp
and
stos
or
aam
loop
jo
aas
imulb
js
pop
les
push
xchg
fs
and
js
shll
stos
lds
sub
mov
rclb
inc
les
pop
pop
fimuls
xchg
and
insb
out
lahf
push
or
cmp
fstps
sub
movsl
cs
mov
or
stc
xor
sbb
dec
xor
insb
xchg
cmp
fwait
rolb
fidivs
lods
add
add
lock
and
leave
push
adc
ret
insl
mov
cli
and
movsl
orb
int
jl
jmp
fsts
in
fadds
mov
inc
mov
mov
lds
outsb
jl
imul
inc
fsubp
inc
jl
shrb
scas
add
pop
movsl
arpl
mov
fwait
cmpsl
test
mov
sbb
xor
sbb
mov
jmp
dec
repz
mov
mov
xchg
mov
sub
adc
lcall
jnp
fadd
cmp
sbbl
sub
xchg
inc
pop
movsb
xorl
mov
push
xor
pop
jmp
push
cmpsl
jp
xor
cs
push
jl
push
fstl
fmuls
mov
and
inc
sub
outsl
mov
and
lds
adc
in
cld
mov
dec
jb
dec
and
lret
aam
or
cltd
mov
ljmp
mov
mov
or
les
pop
sbb
push
xor
pushf
sbb
add
push
aaa
push
and
adc
icebp
adc
orl
sbb
push
push
js
lods
mov
push
fdivrp
lret
lahf
jbe
mov
xor
adc
push
pop
jnp
ds
out
sahf
lock
xchg
inc
aam
jns
stc
inc
icebp
cmp
movsl
push
mov
inc
inc
clc
push
jo
pushl
cmpsl
lods
inc
jp
inc
inc
leave
outsl
xor
out
cmp
sbb
inc
lret
push
add
out
arpl
mov
sbb
pop
flds
push
add
std
in
cmpsl
test
je
and
sarb
lods
cmp
mov
cmp
movsb
ja
mulb
mov
test
add
mov
lods
push
cmpsl
push
jns
mov
xchg
sbb
lret
jns
xor
mov
mov
mull
xchg
sub
and
xlat
pushf
or
test
divl
insb
xchg
loopne
cwtl
inc
pop
push
in
in
jo
cli
push
adc
aaa
movsb
mov
test
mov
sub
loop
out
pop
push
out
pop
bound
jnp
add
xchg
and
mov
push
test
cwtl
jo
dec
adc
xchg
popf
xor
ret
ficoms
ret
imul
sbb
shr
mov
std
inc
xchg
pushf
pop
jns
in
dec
lea
mov
movsb
jecxz
xchg
clc
cmp
hlt
inc
fsubs
ja
push
adc
cmc
ja
or
nop
into
xor
rorb
inc
ret
push
and
cmp
cmp
mov
push
cltd
iret
inc
fnstenv
lea
pop
pusha
js
ficoml
prefetcht2
lret
mov
and
cltd
dec
fistpll
rcl
add
into
xor
sti
rcrb
cmpsl
outsb
lds
fimuls
stos
xchg
mov
jecxz
jmp
add
ds
jg
sbb
mov
and
icebp
jge
mov
dec
cltd
pop
add
dec
jg
repz
iret
scas
mov
xchg
subl
dec
add
gs
add
cmpb
pop
rcl
dec
mov
push
xor
loope
addr16
cmp
inc
roll
inc
out
push
js
jns
loope
adc
or
jmp
aas
or
push
jnp
jo
loop
movsl
stos
addb
lods
movsl
into
mov
xor
dec
icebp
outsb
test
mov
sub
in
daa
fcompl
inc
in
int3
ds
lret
jo
mov
mov
push
and
aad
sub
shll
sub
ljmp
loopne
push
sbb
push
andl
and
mov
or
mov
and
adc
jl
adc
mov
cmpsb
addr16
stos
dec
fstpt
cmp
sub
imul
aad
outsl
aam
dec
loope
mov
leave
call
dec
scas
and
mov
dec
insb
lret
aaa
pop
pop
inc
scas
push
jno
add
jo
ljmp
fstl
mov
dec
mov
stc
ss
cwtl
addr16
cmp
mov
daa
jb
and
adc
clc
adc
pop
xlat
imul
ror
inc
test
inc
and
inc
push
push
stc
in
popa
scas
sbb
sarb
jnp
rcrb
nop
jg
jae
cmp
cmpsb
clc
inc
repnz
and
aaa
adc
pop
lods
push
fwait
and
jns
sbb
dec
cld
pushf
pushf
fisubrl
insb
pop
leave
jne
pop
xor
inc
mov
push
jecxz
dec
inc
mov
xchg
xchg
push
inc
fwait
mov
mov
scas
xor
cmp
ss
mov
cs
sub
and
mov
in
jb
mov
enter
mov
sbb
daa
dec
lods
aam
in
fdiv
fwait
or
add
int
stc
idivl
leave
cmp
push
xchg
mov
inc
std
mov
ret
sbb
arpl
sbb
jle
lret
xorl
dec
sbb
fwait
js
mov
adc
sub
sbb
cmp
add
cmpsl
push
adc
popf
cmc
mul
mov
mov
xor
mov
popa
imul
jmp
mov
cmp
pop
pushf
int3
jmp
int3
or
fs
lds
mov
mov
notb
shlb
fldenv
dec
sar
mov
imul
dec
ljmp
mov
fcmovb
xchg
popf
jl
lahf
imul
inc
sbb
and
push
or
test
adc
ljmp
ret
test
int
stos
sub
sbb
cmpsb
xor
bound
mov
icebp
jge
imul
scas
or
jl
in
adc
pushf
cltd
xor
ret
cmpsl
aas
out
pop
xchg
sub
cmove
xchg
sbb
cmp
enter
mov
fadd
in
sub
pusha
fistpll
and
mov
out
jne
sti
pop
shll
imul
mov
jb
test
add
and
bound
ljmp
mov
mov
mov
lds
pop
push
push
push
xlat
push
xor
add
into
aaa
int
sbb
and
fdivrs
enter
sub
lret
pop
ljmp
push
icebp
cmp
clc
add
mov
or
add
out
adc
xor
repz
adc
push
xorb
sbbb
in
push
lret
lods
fsts
sub
iret
mov
jge
ss
les
cmp
mov
cmpsl
fwait
out
or
imul
icebp
ficoml
cmp
lds
call
mov
dec
jp
or
add
scas
and
adc
dec
ret
mov
sbb
jno
test
mov
call
sub
aas
cwtl
mov
adc
and
cli
les
adc
pop
test
or
pop
enter
or
sbb
dec
dec
push
in
insl
mov
mov
push
stc
mov
add
push
mov
push
fs
lcall
pop
fcoms
shr
mov
loopne
xchg
subb
jo
leave
out
and
cwtl
pop
insl
push
aas
sbb
repz
subl
lods
push
lds
lods
pop
adc
cmp
xchg
jno
pusha
cmpsl
xchg
dec
jnp
jmp
pop
stc
mov
icebp
lret
movsb
mov
pop
mov
and
xor
pmuludq
cmp
inc
cli
aas
mov
scas
in
xor
mov
notb
loopne
xor
cmp
push
fs
lcall
sbb
fstpl
push
push
mov
sbbb
repnz
push
mov
jmp
adc
les
push
lahf
xchg
inc
gs
loope
cmpsb
cmp
fs
add
push
enter
cwtl
or
or
out
mov
hlt
push
cmp
gs
pop
sub
or
sbb
mov
std
loop
ret
jo
jle
js
sbb
mov
xlat
jl
dec
lahf
push
and
fildl
inc
or
pop
gs
or
les
loop
dec
xchg
or
pop
push
push
test
jne
es
aam
pop
fsubl
xchg
dec
inc
std
aaa
cmp
pusha
sbb
mov
addr16
jle
xor
sbb
adc
jle
sbb
pusha
jne
cmp
inc
pop
pushf
addl
inc
xor
add
iret
mov
pop
mov
sti
jg
and
lret
icebp
into
push
popf
insb
xor
rcrb
dec
roll
adc
add
lock
dec
xor
push
and
imul
decl
mov
orb
jg
inc
sbb
mov
add
sub
mov
pusha
xlat
test
jle
mov
addl
pushf
xlat
mov
xchg
xchg
xchg
or
mov
sub
push
mov
in
jmp
ljmp
sbb
or
sti
push
mov
sub
adc
cli
lret
mov
popl
js
dec
loopne
test
mov
test
push
push
jb
subb
cmpsb
and
xchg
fwait
mov
jge
imul
sarb
fs
xchg
push
out
sbb
push
sub
mov
call
rcrb
add
sub
push
repnz
ffree
sbb
pop
dec
sub
out
sar
mov
cltd
pop
dec
xor
add
mov
repnz
jle
addb
cmp
in
xor
ss
lods
xor
in
mov
testb
in
popl
sub
fsubl
fwait
cmpsb
cmpsb
push
movsb
fs
mov
test
jg
and
jg
dec
sarl
mov
sub
mov
adc
push
push
add
les
out
push
pop
ds
cltd
xchg
pop
jo
icebp
xchg
enter
or
or
mov
or
sub
mov
or
adc
jmp
into
mov
nop
lahf
or
lods
fsubs
into
jo
sbb
jnp
shrb
nop
adc
push
je
or
inc
push
shl
cmp
xor
push
shrl
stos
sub
pop
pop
and
xchg
es
in
inc
push
aam
xchg
daa
mov
pop
xlat
xchg
dec
xchg
lds
mov
and
mov
mov
jp
jge
outsl
sbb
mov
jns
sub
xlat
mov
dec
mov
test
pop
pop
jg
xchg
femms
lods
push
pop
out
fwait
push
sahf
lret
stos
test
mov
adc
xor
jmp
jns
jecxz
int3
adc
lock
mov
sbb
fistps
jge
mov
xchg
and
jmp
cmpsb
push
jb
inc
jecxz
mov
sub
into
push
sbb
in
lods
jp
je
cmpsl
xor
cmp
dec
ja
jmp
pop
andb
jp
mov
loope
mov
out
insl
cmp
inc
jnp
outsl
mov
pushf
jge
pop
mov
popf
mov
add
add
push
add
push
mov
mov
por
lds
pop
shrl
jp
outsb
int3
enter
das
cli
mov
mov
ljmp
xorl
xchg
jns
cmpsb
daa
test
js
loop
lods
inc
and
add
pusha
sbb
xchg
xchg
jbe
mov
xchg
pop
cmp
fidivrs
adc
mov
hlt
xchg
and
sbb
xlat
cmpsb
out
loope
mov
jl
sbb
dec
adc
clc
fnstsw
sbb
pop
and
inc
psubw
jnp
aad
jmp
addr16
icebp
dec
jns
sub
rorb
cmpsb
out
xchg
sbb
leave
popf
sub
rclb
sbb
je
inc
iret
out
adc
sti
sub
jno
xchg
leave
std
outsl
sbb
sbb
jbe
fcmovne
xchg
gs
mov
dec
xlat
test
inc
and
repnz
adc
popf
in
jno
in
lods
add
std
inc
lcall
jo
cmpsb
fadd
or
adc
xchg
testl
cmpsl
lret
invd
fstl
test
inc
mull
jecxz
loope
and
insl
ljmp
xchg
adc
mov
mov
xor
loopne
xchg
decl
cli
addr16
out
test
and
and
mov
jnp
ljmp
popf
sti
andl
push
dec
add
ja
popf
cld
dec
les
scas
loopne
jmp
and
push
inc
pop
fistl
inc
xor
cltd
sub
cld
or
add
sarl
mov
add
pop
push
xor
add
xchg
call
lret
gs
xor
pop
scas
repnz
cmp
jae
cmpsl
std
adc
inc
cmp
mov
adc
sbb
and
or
xor
jnp
lods
xchg
fldt
push
xchg
inc
scas
fbstp
jle
clc
sub
ljmp
imul
test
fs
dec
shlb
in
sbb
ja
jae
or
or
test
repz
mov
cmp
leave
stc
xchg
and
daa
mov
lret
pop
add
popa
adc
adc
repnz
fisubrs
test
das
loopne
mov
in
fdivrl
gs
mov
push
repz
dec
and
mov
sub
pop
mov
pop
mov
mov
or
pop
lock
mov
leave
leave
push
ret
notb
sub
lret
into
adc
jbe
push
mov
or
cmp
xchg
inc
push
dec
jnp
adc
paddq
f2xm1
in
xchg
test
mov
xor
jl
lcall
inc
mov
ds
or
add
push
add
call
pop
movsb
xor
scas
cwtl
fisttpll
popa
xchg
or
jl
in
or
cs
rcll
adc
js
roll
jns
movsb
inc
test
sub
nop
hlt
icebp
jnp
lock
insl
hlt
sbbl
and
or
dec
push
in
push
scas
pop
and
stos
idiv
orl
jb
mov
jg
dec
adc
popf
shll
cmp
or
and
sahf
sub
mov
xchg
jp
lret
pusha
arpl
and
shr
or
mov
lahf
jns
into
dec
and
shl
jge
inc
testb
stc
mov
mov
lods
jne
jl
push
popf
movsl
add
push
das
test
sub
ret
pop
xor
jne
loop
dec
aad
xchg
lds
inc
andb
mov
jns
fcoms
cs
xchg
in
dec
xor
inc
cmpb
inc
iret
xchg
push
mov
pop
daa
mov
jo
popf
xchg
mov
lahf
and
or
fwait
push
mov
pop
inc
outsl
test
mov
cwtl
sub
mov
hlt
inc
enter
push
incb
xchg
or
sbb
or
popf
adc
lret
data16
in
fimuls
mov
outsl
xor
and
mov
call
jmp
push
push
cmc
scas
stc
in
mov
pop
dec
ret
adc
xchg
fstpl
mov
arpl
or
fwait
incl
inc
and
cs
cmp
cmp
leave
jmp
xchg
mov
or
gs
je
adc
add
xchg
or
fld1
mov
fnstsw
pop
inc
fdivrl
or
es
or
adc
ds
in
mov
cmp
sub
scas
pop
popa
loopne
adc
push
test
incb
jecxz
addr16
mov
xor
ret
sbb
stos
insl
adc
call
in
dec
add
mov
fmull
popf
in
adc
lret
xchg
out
lcall
lahf
stos
pop
mov
mov
dec
or
int
pop
outsb
ja
xchg
pop
mov
push
inc
inc
jb
andl
out
stos
nop
scas
in
insb
cmp
and
and
aas
andl
and
roll
test
mov
adc
mov
test
outsl
sbb
out
mov
lahf
pop
fisttpll
lcall
arpl
or
and
push
call
mov
loop
mov
jo
jno
adc
out
push
fnsave
or
ss
daa
cmp
mov
dec
mov
lret
sub
fwait
xchg
jae
dec
ret
push
dec
push
das
jp
insl
jmp
rorl
lods
arpl
pop
xor
pop
out
into
add
xchg
scas
cmpsl
enter
rsqrtps
cmc
scas
scas
jmp
or
jne
fadd
mov
repz
pushf
shrb
adc
cwtl
dec
inc
mov
rcll
insl
jns
fsub
xlat
mov
dec
and
mov
push
pop
mov
loop
or
and
cmp
test
ds
int3
shrl
pop
ret
push
inc
fcmovne
sub
mov
dec
jecxz
and
pop
fs
push
and
or
xchg
xor
and
out
push
stos
push
push
pop
scas
mov
xchg
jge
loop
adc
cmc
add
jle
sub
test
dec
push
mov
adc
mov
and
push
xchg
dec
mov
xorl
ret
enter
shrl
je
stc
ret
dec
xchg
mov
sub
push
movq
push
xchg
mov
inc
cwtl
fmull
ljmp
inc
pop
fdivrl
daa
outsb
or
lahf
mov
xchg
enter
mov
add
scas
cmp
xor
scas
pushf
enter
or
cltd
cmpb
call
fwait
ljmp
and
xor
and
jmp
cmpl
push
aaa
push
test
add
rcll
in
add
imul
int3
leave
mov
xchg
xor
ret
addl
sub
and
push
sub
or
test
push
jl
sbb
xor
or
movsl
adc
xchg
cmp
mov
inc
lods
out
jecxz
pusha
outsb
rclb
aam
loop
xor
push
push
xchg
sub
xchg
adc
push
insl
ret
aas
jmp
push
push
add
std
add
ret
sub
cmp
mov
cmc
movsl
stos
jg
and
clc
movsl
dec
clc
icebp
ret
sbb
and
mov
push
std
mov
pop
xchg
sbb
pop
adc
icebp
pop
or
mov
fcmovu
mov
pop
ljmp
jnp
imul
cmp
dec
jno
scas
xchg
sarb
clc
pop
rcll
adc
xchg
outsb
mov
adc
push
in
pop
shll
mov
push
pop
mov
addb
movsb
call
push
sbb
rorb
pushf
arpl
std
pusha
mov
push
lds
das
bound
lods
call
pop
jle
fwait
pusha
ret
fwait
in
sub
fimuls
out
cmpb
dec
cmp
xor
ds
arpl
inc
loop
bound
pop
push
popf
inc
mov
mov
fdivs
jge
sbb
fsubrp
dec
sahf
stos
jo
aam
jp
lock
xor
mov
aam
hlt
lahf
mov
out
push
mov
xchg
sahf
push
mov
addb
sbb
test
adcb
pop
lea
arpl
clc
mov
pop
int3
cmp
push
mov
inc
add
mov
push
int
repnz
fdivl
aad
adc
pusha
mov
aam
xchg
xchg
jns
push
sbb
dec
jbe
imul
rolb
jae
or
or
mov
push
inc
mov
out
mov
adc
pop
out
or
icebp
sub
test
mov
push
jle
xchg
xchg
fidivs
and
testb
insl
pop
loopne
imull
mov
aaa
pop
push
mov
jp
popa
test
push
mov
fcmovbe
fdivs
cli
jp
movsl
leave
push
loop
pop
jg
inc
xchg
mov
jmp
fists
scas
push
xchg
mov
cmpsb
lods
mov
xor
scas
mov
mov
xor
dec
pop
popa
subb
adc
cmp
mov
dec
and
inc
jg
pushf
out
jns
test
and
adc
sbb
leave
ficoms
adc
repnz
jmp
cmp
xchg
lcall
out
pmaxub
or
add
call
push
inc
aam
ds
cli
xchg
bound
mov
mov
pusha
cmc
insl
shlb
andl
cmc
fs
test
repnz
pop
jae
dec
dec
lret
loop
jnp
js
add
mov
sub
mov
mov
cmp
xchg
jae
repnz
hlt
adc
movsb
pop
scas
lea
sbb
add
int3
pusha
push
movsl
or
mov
scas
lret
sub
cmc
inc
and
push
std
test
xlat
dec
mov
loope
jecxz
jl
dec
lret
jns
cld
icebp
jecxz
jo
fmul
jne
popf
or
iret
cmp
fwait
loop
aam
add
push
fildl
dec
popa
stos
lods
sub
inc
and
xchg
dec
ret
mov
clc
mov
push
mov
movb
inc
ds
lahf
aam
icebp
or
ds
push
paddd
popa
out
sbb
mov
scas
sbb
xchg
pop
cmp
xorb
jbe
inc
push
addl
popa
arpl
inc
inc
add
or
jbe
ret
mov
add
pushf
rcrl
hlt
pop
sti
cwtl
push
inc
js
cli
dec
sbb
mov
lcall
dec
loopne
mov
cmpsb
addr16
or
pushf
sub
jg
push
cmc
sahf
inc
inc
mov
loopne
adc
xor
and
or
add
or
mov
stos
test
stos
test
std
lods
xchg
sbb
daa
sbb
loop
mov
lods
test
in
mov
dec
mov
cmp
mov
push
or
rcr
xchg
sub
jmp
out
push
cmp
inc
dec
pop
adc
push
cltd
and
into
aam
aas
ja
mov
sbb
mov
mov
ffree
hlt
stos
mov
leave
xchg
es
cmpsl
inc
arpl
and
mov
mov
jg
mov
rcrb
mov
mov
mov
mov
std
mov
fldcw
ja
icebp
or
adc
popa
jo
adc
int
add
aas
mov
xor
sahf
jno
loopne
cmp
push
push
dec
jb
scas
xchg
addr16
stos
mov
repz
imul
or
ss
cmp
insl
popf
adc
sub
mov
test
out
es
jmp
arpl
mov
js
dec
shlb
fcomps
cmp
cmp
jb
pop
repnz
mov
inc
and
push
es
fdivrl
inc
insl
and
jecxz
les
icebp
int
and
stos
int
shll
push
adc
rclb
dec
xchg
dec
push
pop
popf
out
bound
clc
lcall
adc
cltd
xchg
mov
ss
sub
push
adc
xchg
xchg
mov
pusha
dec
jl
insb
lds
cmpsb
loop
pop
mov
clc
outsb
sub
sbb
sbb
pop
fisttps
and
jle
aaa
lret
leave
lds
xchg
pusha
dec
jmp
xor
and
gs
imull
bound
arpl
daa
add
sub
inc
test
ja
cltd
icebp
cmp
push
addr16
insb
sbb
and
cmp
pop
inc
inc
push
xorl
insl
cmp
punpcklbw
into
loope
rolb
push
mov
lcall
add
push
jl
cmp
icebp
jo
push
sbb
push
push
mov
out
dec
mov
sub
imul
mov
adc
into
mov
mov
cmpb
shll
fsubr
and
mov
pop
lock
xlat
add
sbb
sti
pusha
movsl
scas
scas
pop
mov
cmpl
ret
mov
aas
push
jg
stos
xchg
sub
mov
sbb
cltd
mov
mov
cwtl
mov
xchg
ja
xor
pop
sbb
or
xor
mov
xchg
sbb
xor
sti
rep
xchg
loope
pop
jne
jecxz
fs
mov
push
popa
arpl
aaa
cli
jmp
popf
push
xchg
mov
cltd
faddl
fs
in
and
push
inc
dec
inc
in
imul
jo
loopne
cmpsb
sub
push
cmpsl
imul
mov
cmp
and
sarl
lock
adc
test
mov
mov
arpl
pop
out
or
mov
mov
add
into
pop
fs
call
outsb
jg
xor
dec
sub
mov
cmpb
push
add
jo
incl
push
hlt
insb
jns
cld
lahf
xor
leave
adc
xchg
sti
add
and
pusha
jbe
cld
pop
fmulp
inc
es
clc
insl
enter
mov
cmp
jle
add
adcl
mov
sahf
mov
and
push
repnz
int
sub
dec
or
jg
cmp
in
mov
mov
lret
fdivs
imul
dec
inc
fldcw
loope
mov
lret
es
sbb
add
aaa
les
xor
aad
pop
lret
push
addr16
scas
xor
hlt
out
mov
sahf
cwtl
scas
sbb
cmpsb
and
sbb
push
iret
jle
leave
jne
cmp
mov
adc
mov
cld
cmp
data16
mov
dec
pop
jle
loope
lds
mov
adc
mov
sahf
or
lret
sbb
cmp
jno
test
add
enter
xlat
fiaddl
lret
pop
repnz
jns
rorl
ret
add
mov
mov
fwait
cmc
inc
pop
call
inc
sub
xchg
in
test
sbb
sbb
call
gs
xchg
jns
into
outsb
pusha
adc
loop
mov
xchg
pop
and
gs
inc
shll
jmp
add
cmp
hlt
bound
movsb
scas
xchg
test
lock
repnz
int
jns
int
pusha
jns
push
or
jg
pop
loopne
mov
aaa
ficoms
incb
dec
cmp
stc
decl
cwtl
add
jg
ds
adc
iret
in
imul
mov
into
das
sbb
push
out
pop
iret
pushf
out
out
mov
mov
mov
mov
in
shll
nop
sbb
pop
cmpsb
inc
das
mov
pop
sbb
inc
inc
push
shrb
out
fldl
lods
int3
int
cs
lea
shl
icebp
pop
loope
bound
stos
sub
dec
push
sub
rcll
out
cmp
inc
sbb
mov
test
pop
xlat
filds
popf
std
insl
mov
gs
lret
xor
push
cmp
mov
push
decl
inc
jmp
sbb
mov
and
sub
sti
in
jl
mov
xor
push
ret
xor
xchg
lea
mov
cli
push
rorl
aam
push
xchg
dec
ret
rorl
cmp
xor
mov
cmp
mov
jmp
jo
mov
mov
xor
jbe
leave
std
pop
pop
add
lahf
stc
lods
in
dec
scas
pop
jmp
push
pop
mov
cmpsb
les
repz
or
cmpsl
in
popa
jmp
push
test
adc
mov
or
adc
push
cltd
or
lds
stos
lret
insb
cmc
xchg
pop
pop
movsb
xchg
mov
fidivl
fwait
ljmp
insl
adc
out
cmp
xor
mov
cmp
xchg
mov
jg
inc
add
or
and
push
adc
test
and
outsl
or
in
adc
mov
dec
add
or
out
idivb
es
mov
jmp
sub
and
rclb
xor
les
jae
and
cmpsl
movd
mov
xchg
jecxz
or
cltd
xchg
sbb
test
add
out
jge
push
ret
hlt
fcmovnb
jmp
insl
lret
iret
mov
adc
mov
out
inc
cmpl
punpcklbw
aam
sbb
andb
sbb
imul
mov
test
add
loop
push
and
sub
add
les
lret
fdivp
push
fsubp
popa
hlt
sub
int3
dec
fwait
mov
cmp
jbe
mov
pop
prefetchw
lods
out
shrb
movsb
loope
je
jb
aam
mov
and
loopne
xor
mov
aam
mov
imul
pop
scas
vpand
daa
pop
jl
xor
movsb
loop
jns
jecxz
mov
inc
add
inc
push
jbe
test
lret
or
pop
xor
icebp
in
xlat
shlb
add
add
cltd
xlat
mov
shlb
fimull
clc
adc
outsb
sub
mov
cmpsl
pusha
ja
inc
imul
ficompl
sub
sub
cmp
cli
mov
mov
insl
xor
dec
and
aas
sbb
adc
test
cmp
xchg
xlat
out
jecxz
cld
out
test
cli
or
cmpsb
test
or
out
mov
sahf
movl
mov
jle
push
sub
jl
sbb
testl
pop
cli
cmpsl
lret
fisubrs
or
jnp
xor
cld
mov
pop
es
pop
add
jp
push
jge
and
fmuls
mov
ret
cmp
and
xlat
pushf
inc
push
lret
push
out
cld
and
data16
adc
hlt
imul
ja
testb
popa
out
dec
inc
cmc
push
shlb
cmp
lret
cmp
adc
push
or
xchg
dec
inc
adc
and
sbbb
test
xchg
xchg
mov
mov
jnp
xchg
and
aam
sub
mov
mov
cmp
and
dec
pop
mov
mov
sarl
and
inc
cmp
std
xor
xchg
fwait
adc
aam
nop
out
gs
rcrb
and
sbb
leave
cmp
outsl
mov
and
es
daa
das
std
xlat
and
add
std
xor
mov
shlb
out
or
cmp
aad
mov
or
mov
mov
push
into
xchg
and
jnp
loope
cmp
dec
stos
ds
cmpsb
imul
pop
pop
mov
sbb
adcb
loope
dec
insb
in
jle
stc
fisttpll
and
std
or
lock
notb
outsb
mov
jns
cs
or
arpl
add
iret
xor
or
mov
xchg
ds
push
mov
dec
dec
lods
cmp
add
movsb
fisttpl
push
imul
adc
push
xchg
aaa
popf
push
or
mov
repnz
ja
loop
inc
dec
sbb
add
xor
sbbl
xor
mov
loope
mov
pushf
xchg
push
sbb
xor
mov
push
push
mov
clc
sub
jnp
pushf
lahf
and
push
mov
int
lock
insb
sti
cmp
cli
cmp
add
and
push
adc
or
inc
rol
scas
call
pop
daa
inc
in
out
inc
jp
lods
ret
fld
in
jno
jnp
hlt
dec
hlt
ja
push
mov
cmp
sahf
push
cmp
jo
push
jecxz
je
popa
out
mov
jge
js
adc
fucomp
dec
push
shlb
dec
xchg
movsl
jp
dec
xor
mov
or
inc
adc
adc
movsl
push
rcrb
shrl
roll
add
dec
sub
vpsraw
sbb
sbb
aas
stc
repz
repnz
sbb
xchg
cmpsl
add
push
push
ljmp
mov
dec
dec
fs
mov
mov
cwtl
and
rcrl
cmp
cs
pop
pop
jecxz
mov
bound
repz
inc
xchg
cmovle
cmp
push
xorl
xchg
dec
std
scas
dec
adc
aam
xor
add
movsl
shl
xchg
push
mov
jns
call
in
mov
cltd
fsubrp
in
iret
dec
bound
add
adc
ret
dec
xor
xchg
and
mov
pop
xchg
pop
aas
sub
xor
cmp
mov
lret
mov
lcall
fidivl
clc
mov
or
insl
mov
lret
cmp
mov
mov
xor
or
setns
jb
pop
and
inc
and
addl
xor
stos
out
push
sub
rolb
je
mov
and
cmp
xor
xor
adc
div
cmp
push
xor
or
jnp
cmc
sarb
imul
test
adc
dec
out
push
push
repz
sbb
ds
data16
inc
sahf
pop
inc
jg
cld
jmp
and
popa
push
into
sub
sub
pop
jecxz
subl
inc
cli
dec
cwtl
cmc
rcl
cmpl
andb
lds
shlb
les
fucom
dec
pop
sbb
iret
rcll
mov
ss
popa
push
mov
mov
ficomps
xchg
pop
sarb
push
repnz
cmp
popf
setge
jbe
mov
inc
insb
adc
push
or
jmp
xlat
or
in
lods
imul
outsb
ljmp
repz
popa
mov
mov
ja
xor
dec
mov
xor
sbbl
js
loop
cwtl
and
add
mov
ret
dec
pop
or
sub
mov
arpl
das
test
pop
movsl
lods
dec
mov
mov
jo
dec
xchg
repnz
and
jmp
nop
loope
mov
cmpsb
sti
aad
fsubs
mov
ret
push
comiss
cmc
jp
pop
or
xor
push
icebp
pop
ds
rep
loope
test
add
bnd
imul
adcb
mov
push
lock
mov
add
test
shlb
mov
dec
cmp
cwtl
lea
stc
idivl
jmp
xor
call
adc
jg
jnp
sti
sub
and
xlat
jbe
push
mov
inc
push
cmc
test
cmp
out
and
jo
shll
cmp
cmpl
call
lea
iret
ljmp
jnp
rclb
outsl
and
dec
cmp
fldl
repz
xchg
scas
xchg
jb
xchg
push
loopne
int
stos
xchg
inc
ja
fnsave
mov
and
mov
fsts
fisttps
and
sub
ljmp
push
pop
and
mov
jbe
mov
push
pop
clc
xor
push
ljmp
or
xchg
mov
dec
sub
add
out
xchg
jmp
and
pop
push
testl
daa
repz
addr16
and
xor
cltd
jl
das
jae
mov
jne
mov
rol
mov
push
mov
lret
test
and
xor
dec
inc
sbb
test
sti
sbb
out
inc
pop
test
int
loop
cmp
stos
out
and
cltd
dec
sti
fcmovnb
fldenv
sub
add
fldcw
dec
ja
test
inc
jo
cmpsl
sub
or
jge
mov
mov
nop
aad
je
lea
outsb
outsl
sub
lods
adc
bound
ret
test
or
inc
fwait
jmp
mov
pop
push
xchg
jb
mov
sti
outsb
sub
inc
iret
lcall
jmp
pop
fwait
sti
pop
test
ds
lods
jle
mov
cmp
sbb
dec
jnp
je
pop
jns
jg
inc
cmp
pop
push
stos
mov
movsl
mov
in
push
insb
pop
jnp
jne
sub
mov
xchg
and
jle
fidivrs
xchg
mov
lds
inc
daa
out
mov
push
imul
jmp
movsb
lahf
push
les
repnz
add
iret
push
add
ss
cmpsl
pop
cmp
cmp
mov
xchg
cmpsl
xchg
sub
sbb
subl
xchg
jb
rclb
sbb
xchg
fdivl
and
mov
sti
jmp
jl
add
xor
push
lods
sub
stos
leave
jle
mov
in
xchg
sbb
lods
or
add
jle
fistl
test
orb
aaa
sbb
das
or
ds
and
lcall
push
jno
pushf
push
inc
pop
jmp
clc
fwait
add
push
pop
clc
push
jp
push
fwait
push
ret
pop
lret
js
jne
push
push
mov
ret
movsl
ret
sarb
repnz
data16
mov
inc
ret
push
mov
sub
adc
lods
sti
incb
fldl
mov
out
or
pop
fildll
and
addb
or
movsb
jns
add
ret
ss
inc
ficoml
jl
in
shl
insl
aad
or
mov
adc
es
cmp
or
pop
fdivrs
sbb
sub
jnp
adc
dec
push
inc
xor
mov
and
fldt
mov
mov
jo
mov
mov
popf
fwait
xor
adc
pop
push
push
or
jae
mov
push
stos
push
xchg
or
movsb
push
push
dec
sbb
out
or
leave
sub
xor
sti
mov
push
testb
jg
inc
sub
cld
lds
cmpsb
pop
adc
sub
or
inc
stos
loopne
filds
lock
sub
movsb
dec
stos
add
lcall
or
adc
dec
pushf
jae
xchg
lock
call
dec
out
ds
pop
das
stos
test
add
mull
or
and
ret
dec
and
sbb
aad
pop
adc
fwait
sub
adc
out
mov
fs
xchg
push
fwait
jecxz
lret
cmp
and
mov
scas
fidivl
lea
stos
aaa
mov
dec
mov
loope
sub
xchg
stos
jne
mov
flds
in
pusha
iret
push
lcall
dec
pop
andl
lock
dec
mov
mov
jb
and
imul
push
sbb
imulb
test
jo
pop
jbe
and
and
scas
push
pop
sub
pop
jecxz
ret
jnp
jge
xchg
aam
mov
xor
out
push
orl
push
out
stos
xor
xchg
das
jo
out
push
cmp
shlb
cmp
hlt
cmpsl
xchg
xor
shl
lds
cmp
xchg
jae
xchg
add
pop
cmpsl
js,pn
lods
add
sahf
inc
add
lock
mov
lcall
js
mov
ss
push
icebp
jb
push
dec
sub
sbb
xchg
or
cmp
sarl
inc
aam
jbe
pop
aaa
mull
gs
mov
or
push
js
loopne
cmp
xchg
xchg
xchg
pop
or
popa
jl
mov
push
jne
push
addl
sub
pushf
faddl
fsubrl
testb
jns
out
scas
push
fildl
and
inc
cmc
icebp
loope
jle
int
icebp
adc
int3
dec
adc
cli
mov
out
into
cmpsb
jns
mov
xchg
outsl
test
andl
movsb
cmp
jl
xor
inc
bound
cmc
jmp
xor
ret
out
addr16
roll
shrl
into
jle
movsl
jne
movsb
cmpb
mov
iret
mov
jl
xchg
mov
fmull
in
fcmovnu
cli
inc
repz
dec
ljmp
and
daa
lret
mov
out
dec
push
jl
jmp
inc
and
out
popf
pusha
lahf
mov
arpl
mov
cmp
in
add
pop
cmpsl
pop
sar
inc
out
xor
mov
std
es
lods
pop
outsl
mov
jns
push
cwtl
push
xchg
repnz
xchg
sub
sub
mov
dec
push
lods
add
lock
inc
xchg
daa
xor
lahf
scas
cmp
int3
arpl
jbe
int
popf
push
or
loop
lods
sub
pop
rorl
les
jae
cmc
in
mov
in
xchg
scas
test
hlt
mov
xlat
jg
cmp
out
mov
sahf
and
jl
sbb
lods
es
push
lahf
bnd
movswl
scas
jge
stc
insl
es
jno
jmp
mov
cmpb
mov
sbb
mov
aaa
inc
movsb
or
lods
pop
loope
js
jp
popa
in
daa
mov
sarb
mov
mov
mov
imul
xor
lock
clc
mov
push
rolb
push
adc
sarl
push
mov
jns
inc
mov
lret
lcall
inc
je
add
movsb
sub
pop
mov
test
mov
or
and
lahf
xor
hlt
xchg
xchg
ror
adc
icebp
out
sub
cwtl
adc
adc
mov
or
or
mov
or
ljmp
setnp
std
adcl
adc
adc
mov
sti
fcmovu
ds
push
clc
cmp
ss
cmp
jge
insl
xor
out
sti
xchg
rcrb
add
mov
stos
jl
push
lahf
in
or
dec
dec
sbb
lahf
xchg
mov
lahf
sub
cli
adc
js
sti
pusha
mov
jno
sub
scas
fwait
cltd
fsubs
mov
cmpsb
sahf
xlat
mov
cltd
sbb
iret
ret
stc
sbb
in
aad
xor
data16
and
sub
orl
push
pop
rclb
cmpsl
xchg
imul
enter
inc
jo
xor
test
mov
push
fs
jo
cs
leave
das
xchg
mov
pop
mov
jno
fidivrl
and
ds
mov
hlt
mov
xor
jge
mov
pop
addr16
add
lea
sarb
leave
or
les
cwtl
xorl
mov
mov
push
pop
add
pop
xchg
sbbl
mov
movsl
dec
js
in
popf
jmp
add
mov
cwtl
fdivrl
xor
jno
inc
jg
mov
mov
sbb
call
xchg
mov
push
push
adc
inc
cs
xchg
sub
rcl
pop
xchg
popf
and
ja
pop
or
lock
arpl
inc
and
das
pop
fidivs
or
xor
ret
adc
out
mov
xor
cwtl
inc
and
fs
xor
push
psadbw
les
clc
lahf
jp
sbb
dec
andb
add
mov
shrb
stc
mov
scas
out
cmp
mov
or
shll
ret
mov
jge
pop
out
paddw
sbb
loopne
fwait
into
push
out
fdiv
or
lret
pop
loope
dec
repnz
and
in
aas
cltd
xor
cld
insb
fwait
push
pushf
test
add
scas
into
and
sub
mov
mov
sbb
sub
inc
fmulp
ja
mov
and
movsb
pusha
sub
inc
rclb
leave
mov
xlat
fstpl
jg
into
xchg
mov
mov
imul
push
mov
or
cmp
cmp
inc
fwait
inc
add
test
fwait
and
stos
in
dec
push
and
je
or
jns
mov
jecxz
push
daa
add
sbb
cmp
push
add
loope
sti
lcall
xor
mov
mov
fwait
sub
pop
mov
jp
imul
mov
fnstcw
scas
imul
add
repnz
enter
mov
push
dec
in
lret
fmuls
adc
cli
mov
loope
pop
add
jns
add
lret
and
icebp
leave
mov
lea
andb
ret
cmp
add
data16
or
push
adc
inc
pop
xor
out
fwait
mov
sbb
cmpsl
lock
mov
lret
mov
fdivrs
ret
inc
lods
cmp
lods
cmc
push
fmulp
shll
stos
xor
pop
mov
or
mov
push
sti
lret
pop
fdivr
mov
xor
mov
mov
fwait
jmp
das
cmp
xchg
ror
dec
mov
dec
mov
dec
mov
lock
or
add
pusha
ret
ja
repnz
pop
cs
gs
outsl
icebp
jge
and
xor
mov
or
rcrl
jb
int
cmp
int
mov
dec
or
dec
add
inc
popf
subl
cwtl
push
mov
jle
xor
jbe
pop
std
mov
add
cmp
mov
push
inc
call
pop
addr16
pop
push
add
mov
dec
fstps
jmp
add
imul
cmp
test
in
pop
sbb
adc
pop
pushl
js
or
popf
ljmp
sbb
ret
mov
cld
ud0
xor
ds
repnz
mov
lret
sub
aas
push
pop
inc
out
test
or
push
jo
out
mov
movzbl
mov
xor
ds
push
cmpsb
or
mov
fisttps
icebp
sub
sahf
loope
dec
imul
imul
jo
mov
dec
jbe
sub
jl
mov
cmpsl
cmpsb
repz
push
cmp
je
ret
pmuludq
sub
aaa
clc
adc
xchg
mov
cmpsb
loop
lahf
bound
insl
stos
cs
sub
cmp
aaa
outsb
mov
cmp
repz
je
in
insb
lods
cs
add
mov
or
mov
push
push
dec
mov
xor
or
xor
jl
vdivsd
std
push
mov
inc
mov
jge
sub
inc
jno
loop
fdivl
mov
fcmovne
or
les
sub
mov
addr16
std
jnp
jp
out
mov
push
sahf
mov
mov
dec
push
cmpsl
push
arpl
push
ds
outsl
jmp
shl
push
jl
adc
in
ljmp
mov
lea
xchg
scas
sbb
addb
sbb
adc
jmp
sub
lret
xchg
divl
add
xchg
enter
imul
jecxz
bound
mov
mov
iret
sbb
mov
add
icebp
xchg
xor
clc
sub
and
out
add
push
imul
leave
cld
pushf
cmp
stos
cs
enter
loop
mov
jg
mov
xchg
popa
xlat
daa
loop
adc
lret
cld
jo,pt
push
mov
xlat
enter
imul
cli
loope
dec
xchg
cmpsl
push
inc
push
dec
add
into
pop
sahf
hlt
cmpsl
jnp
and
repz
into
dec
fwait
loop
mov
dec
pushf
mov
sbb
stos
push
add
cld
lea
jne
dec
dec
mov
xchg
addl
decb
fidivrs
sub
lret
scas
lahf
aam
ja
repz
cltd
mov
ljmp
sbb
cltd
test
sub
das
or
or
outsl
subl
mov
testl
adcb
and
mov
cli
mov
push
cmp
pop
mov
mov
dec
dec
out
inc
subb
aas
outsb
movsl
in
shr
lahf
push
pop
jo
dec
mov
sbb
cmpsl
movl
pop
and
repnz
mov
inc
or
sbb
fmul
inc
pop
insb
sahf
xchg
jge
push
ja
and
sub
push
ss
jge
repnz
int3
push
xchg
insb
pop
pop
cmp
and
popa
mov
add
mov
stos
es
pop
xor
sti
adc
jno
jecxz,pn
add
adc
lret
mov
jo
dec
inc
icebp
es
cmp
mov
and
lods
inc
jo
mov
sarl
mov
adc
cmp
dec
and
in
mov
fcomps
test
push
mov
inc
or
inc
stc
nop
adc
sbb
in
pop
iret
xor
mov
or
lcall
pushl
daa
sarl
je
leave
push
psubb
pushf
xor
hlt
jno
jl
adc
adc
xchg
add
cli
je
or
repnz
es
push
cs
jl
loop
dec
and
stc
and
sub
aam
sbb
imul
fdivs
call
dec
shlb
scas
ds
mov
jmp
mov
fwait
ja
fsubrl
lods
pop
mov
or
into
pop
mov
pop
stos
or
mov
mov
push
es
push
and
jmp
sbb
in
jmp
pop
cmp
xor
in
push
sti
add
ss
mov
test
add
lcall
shl
sbb
jae
and
daa
shlb
mov
sbb
test
adc
jmp
lds
xor
sub
xor
cmp
repnz
lret
cmp
movsl
or
push
push
cmp
jns
movsb
inc
push
sub
and
int
add
clc
mov
and
fcomps
push
ljmp
push
adc
xor
mov
sub
mov
dec
stos
ds
enter
fstps
in
mov
xor
mov
jns
pop
repz
shll
adc
pop
fmull
rorb
ror
dec
movsl
xlat
mov
xchg
repnz
cli
adc
pop
cmc
pop
xchg
shrl
mov
adcl
scas
in
mov
das
add
xor
in
pop
lcall
jae
jo
insl
ja
sbb
fs
pop
sbb
inc
inc
push
xor
xchg
fnsave
mov
pop
pop
push
jmp
push
push
movl
push
or
inc
cwtl
enter
push
jnp
xor
js
push
aad
test
inc
insl
mov
daa
or
in
outsl
add
lods
mov
adc
fbstp
icebp
sub
les
push
sbb
ljmp
add
inc
inc
mov
aam
push
das
sub
fwait
test
jmp
imul
and
push
sub
cmp
sub
imul
arpl
adc
mov
out
mov
pop
sub
pop
lret
jle
and
rcrl
pop
mov
mov
cmp
lods
imul
movb
mov
push
sbb
dec
mov
sar
les
in
daa
xchg
mov
or
jg
xorb
cmpsl
test
add
and
std
aad
outsb
add
xchg
cmp
adcl
sub
movsb
cmovge
xchg
fcomi
shlb
push
add
out
ss
andb
jecxz
push
fisttps
outsb
ret
lahf
pop
xor
jae
xchg
mov
fidivrl
add
and
cmp
cmpsb
jmp
cs
pop
scas
leave
mov
mov
stos
push
cmc
cmp
pop
adc
inc
popf
shlb
cmp
inc
int
roll
or
and
lret
cli
and
pop
addr16
push
add
mov
jmp
pop
mov
in
mov
pop
pushf
clc
lret
test
pop
xchg
jp
mov
mov
addr16
stc
movlps
add
mov
shlb
cmpsb
mov
ja
mov
pop
push
nop
cld
lcall
sub
or
push
push
lods
out
add
sub
shll
mov
nop
pop
pusha
pop
xchg
push
add
push
sub
push
scas
pop
sbb
in
inc
rcl
mov
imul
fimuls
or
pop
std
adcb
mov
jno
sbb
cmpsl
add
jmp
mov
mov
bound
je
cli
jp
xchg
ds
repz
lods
adc
xor
fisubl
mov
dec
mov
hlt
test
push
push
inc
sub
dec
jo
mov
mov
cmp
xor
xchg
mov
and
imul
push
in
jmp
outsb
sahf
loopne
sub
ja
loopne
add
cmc
adc
test
xchg
jmp
and
mov
jbe
jne
aad
out
sbb
stos
aad
xchg
popf
inc
lret
jne
mov
add
add
iret
add
and
inc
sbb
lds
pushf
sahf
mov
dec
inc
mov
xchg
mov
ds
sub
rclb
add
ret
stos
rcrb
idivb
nop
pop
adc
push
cmc
rcrb
imul
dec
mov
stc
sub
mov
sahf
dec
call
dec
test
ds
lret
xchg
add
pop
or
dec
ss
dec
mov
mov
pop
xchg
mov
clc
and
and
push
outsl
inc
call
fdiv
fbld
out
sbb
ja
mov
sub
cmc
lods
ficomps
sbb
lods
movsb
scas
sub
ds
push
scas
mov
adcb
sbb
mov
sbb
push
rorl
jle
mov
push
push
mov
lret
shlb
jecxz
insb
push
vmwrite
sbb
outsl
xchg
inc
mov
cltd
scas
outsl
jl
popf
adc
std
push
xlat
jmp
push
xorl
add
fwait
aam
lods
pop
jge
sbb
mov
jge
xor
adc
cli
icebp
cmpsb
inc
popa
mov
inc
repnz
dec
test
pop
test
shll
sbb
push
rorb
mov
xchg
cmc
cld
mov
movsl
xchg
mov
cltd
dec
ja
outsl
lea
cwtl
mov
test
fsubs
sti
pushf
lods
or
rol
scas
inc
daa
cmp
jno
insb
dec
call
dec
cmp
sub
push
mov
jns
ds
test
js
cmp
in
mov
enter
ud2
out
xchg
enter
and
out
std
insl
jmp
mov
jae
mov
mov
inc
in
or
pop
lret
addb
mov
adc
sub
jl
imul
popf
sub
jecxz
inc
test
into
sbb
lahf
inc
out
adc
inc
negb
push
lods
cmpsb
xchg
xchg
sbb
je
clc
ljmp
push
dec
mov
pop
sbb
jmp
hlt
cmp
mov
bound
mov
xchg
dec
push
call
pop
incl
pop
xchg
aaa
test
scas
ss
xor
out
push
fwait
sbb
inc
out
xchg
bound
jl
push
leave
cld
xchg
pop
fldln2
stos
inc
lea
lds
ds
cmpb
or
inc
insb
ljmp
or
dec
jle
int3
nop
shrl
and
cwtl
cmc
or
mov
dec
and
mov
jmp
xor
jbe
gs
or
pop
sahf
in
hlt
xlat
fistps
je
sti
cmc
mov
xchg
sub
or
mov
sub
in
xor
cwtl
lcall
or
sub
pop
dec
mov
notl
pop
cs
hlt
andl
inc
cmp
xchg
out
fdivs
xor
imull
jg
adc
xor
inc
mov
shl
dec
jmp
lea
push
mov
push
imul
add
aaa
cltd
lcall
xchg
out
jmp
insb
call
pop
cwtl
xor
lods
out
push
or
data16
jle
je
sub
sahf
xchg
insb
int
pusha
push
mov
sbb
out
add
xchg
psubsb
imul
out
jo
inc
fsts
inc
sub
push
mov
jge
insl
xchg
dec
pop
imul
ja
popa
mov
xchg
lock
das
hlt
rcrb
sub
pop
pop
jge
repnz
push
es
push
jns
push
cmp
or
and
aam
push
cltd
mov
xchg
jb
cld
gs
int
or
rcl
jecxz
mov
push
out
sar
sbb
xor
rorb
xor
aam
pop
and
xchg
je
lahf
push
mov
jbe
out
loop
cmp
or
sub
jbe
mov
icebp
dec
add
xor
out
add
dec
sbb
xchg
movsb
scas
jno
adc
pop
adc
jp
cmc
push
iret
cld
mov
pop
hlt
icebp
mov
das
xor
cli
stos
dec
scas
and
xchg
jp
dec
mov
sub
adc
cmp
out
mov
add
mov
mov
xchg
mov
lea
mov
call
mov
inc
inc
out
ss
popf
imul
push
or
push
mov
push
sub
daa
and
sub
ret
mov
aas
push
lret
out
aad
pop
lret
sahf
adc
psubq
inc
cmp
sub
sub
pop
insb
push
add
cmpsb
sahf
aas
insb
ds
mov
pop
pop
push
imul
scas
or
mov
jp
sub
pop
fildll
sub
mov
shrb
mov
imul
cmc
mov
lea
in
lret
shrl
add
xor
add
fisttpll
cmp
bound
dec
and
sbb
push
jp
scas
subl
orl
inc
dec
les
dec
movsb
jg
popa
add
adc
pop
or
imulb
decl
ljmp
inc
adc
lcall
imul
adc
jb
push
inc
repnz
pop
std
popa
les
xor
je
popa
jae
cmpsb
cmp
lahf
sbb
pop
js
flds
ljmp
sub
jecxz
xor
mov
xchg
rclb
cmp
out
push
mov
cmpsl
cmp
out
pusha
shlb
loopne
stos
cmpsb
es
call
paddq
fcoml
shrb
icebp
jecxz
cli
cmp
and
xchg
daa
repz
jne
stos
and
mov
jno
inc
pop
shll
fsubrl
mov
adc
scas
mov
inc
sti
jne
std
cld
jg
cltd
and
stc
xchg
test
lock
adc
sbb
enter
daa
int
decb
je
xchg
dec
lahf
jno
pop
aad
inc
aaa
sub
cs
movsl
push
bound
out
mov
int
insl
dec
arpl
sbb
mov
cmpsb
sub
das
jae
sub
dec
fists
clc
mov
cwtl
jecxz
jae
test
out
sub
cmp
lret
fwait
push
stc
out
jne
or
cmpsb
leave
dec
sub
adc
jns
dec
ret
fimull
mov
and
mov
xorb
pop
mov
scas
ficoml
aas
mov
lcall
test
std
and
cli
xchg
subl
mov
inc
push
mov
outsl
lcall
and
mov
in
and
lahf
frstor
arpl
dec
xchg
mov
adc
loopne
clc
lods
aad
je
jp
jb
or
sub
mov
into
leave
sbbb
test
addl
and
sbb
in
ret
fwait
add
bound
test
loop
jb
fiadds
fdivl
and
cmp
lds
lea
ret
repz
or
pusha
ds
cli
xor
sbb
repz
inc
push
loop
and
repz
cld
adc
sub
testb
sub
jle
mov
sti
dec
push
xchg
imul
dec
jecxz
jbe
in
lods
fstl
sbb
cmp
pushf
cmp
add
out
pop
xchg
and
test
lea
scas
and
dec
xlat
std
cmp
jae
adc
inc
lock
mov
xor
ret
mov
cwtl
xchg
mov
out
cwtl
cmp
movsl
mov
inc
xchg
std
fdivp
add
lret
sbb
ss
ret
out
xchg
mov
xchg
sbb
xor
inc
dec
ret
sarb
adc
inc
push
pop
outsl
sti
rolb
mov
sti
js
fcom
or
mov
cmp
jbe
mov
xchg
out
and
jbe
bound
pop
push
mov
pop
scas
and
in
mov
xor
orb
cltd
xchg
mov
sub
jl,pn
stc
jle
push
mov
mov
das
mov
ds
lock
stos
ret
push
scas
xchg
push
in
sbb
out
adc
fisubrs
add
mov
or
cmp
jg
hlt
aad
cmp
cmp
xor
stos
push
lods
in
or
jo
jge
insl
adc
call
dec
lock
in
test
leave
sti
cmp
dec
out
and
cli
scas
data16
movsb
cmp
fwait
push
lahf
hlt
mov
adc
js
sbb
fcoml
or
add
jns
xlat
cmp
int
or
leave
sbb
cmp
jle
adc
cltd
cmp
push
loopne
cmp
push
js
pop
aam
cmp
fwait
test
repz
lahf
mov
loop
popa
dec
fstps
imull
scas
adc
mov
test
push
cmp
movsl
mov
sbb
sbb
insl
decl
aam
in
push
cmpsl
cltd
sbb
cld
cmpsb
add
mov
lret
and
outsl
movsb
inc
addr16
push
push
mov
outsb
add
push
popf
mov
nop
cld
add
mov
pop
shlb
xor
jge
shll
stc
mov
dec
add
inc
mov
pop
fimuls
mov
sub
loope
into
std
popa
fdivs
or
call
jno
out
xor
fistl
mov
mov
movsb
adc
jbe
mov
sub
aaa
insl
pop
push
shl
mov
scas
scas
sub
fneni(8087
call
in
jl
mov
add
loopne
jo
cld
je
jp
insb
loopne
mov
leave
jo
dec
push
mov
mov
lahf
jg
iret
dec
es
fdivrs
inc
enter
leave
shlb
dec
sarb
mov
in
stos
sarb
stc
xchg
bnd
or
movsl
mov
inc
add
mov
fs
fwait
ljmp
out
pop
mov
test
cmpsl
jl
enter
fucomip
jmp
or
pop
dec
in
fmuls
mov
bound
daa
cmp
mov
addr16
fidivrl
cmc
enter
out
mov
int3
ret
add
lahf
rcl
fscale
decb
imul
ja
dec
repz
inc
cmpb
xor
adc
mov
dec
inc
inc
cmpl
adc
and
popw
nop
rclb
fs
cld
notl
xor
cltd
sub
mov
stos
push
xor
out
jle
dec
add
loopne
ret
lret
js
or
jl
sbb
mov
ja
or
fwait
test
push
lods
push
xor
out
push
mov
xorl
fisubs
push
stos
cwtl
out
jno
push
and
stos
mov
sub
mov
sbb
je
and
icebp
out
in
clc
cmc
xchg
pusha
mov
jg
test
repz
mov
outsb
aam
rclb
outsl
cwtl
push
push
scas
lahf
loop
je
fcmovnu
and
sbb
dec
pop
xchg
rclb
aam
sbb
or
lock
cld
push
adc
pop
mov
bound
lock
loopne
push
pop
addb
jmp
mov
movsb
shlb
loope
sbb
ss
fisubs
fsubl
jp
fisubrl
cltd
dec
sub
stos
lods
adc
inc
and
movsb
pop
sbb
iret
pop
jmp
pop
lret
test
inc
fs
sub
test
movsb
js
and
jmp
jg
xor
xor
cmc
fcoms
ss
pop
repz
sbbl
roll
gs
sbb
lds
dec
loop
dec
ds
cmp
lea
es
cmp
adc
adc
or
ret
xchg
insb
pushf
sub
popf
adc
cmpsl
dec
orl
pop
or
out
fcmovnu
rcrb
andl
cmp
cmp
mov
xor
aas
mov
mov
shrb
pop
stos
pop
jmp
jo
add
rcrb
in
or
in
and
pop
mov
cs
ljmp
or
stc
leave
shrb
in
pop
stc
sbb
adc
mov
inc
xor
pop
cmpsb
ret
test
scas
movsl
mov
sahf
add
mov
sbb
sti
mov
cmp
pop
in
jge
pop
and
mov
mov
leave
cmp
nop
and
xchg
ret
inc
pop
into
sbb
mov
retw
mov
test
mov
test
push
add
cmpsl
mov
insb
fsubrp
imul
xor
push
fsts
int3
fisubrl
mov
test
fisubs
or
dec
notl
mov
loope
inc
dec
jo
pop
sub
dec
stos
fldenv
mov
push
enter
ds
jge
sub
add
inc
mov
orb
sbb
sahf
xchg
push
mov
cmp
pcmpeqd
push
xchg
push
scas
in
shl
mov
in
xlat
test
lret
jne
pop
pop
out
sbb
out
clc
mov
jb
enter
and
sarb
jbe
test
push
cmp
imul
mov
pop
fsubrs
and
xor
std
push
sbb
mov
push
pusha
mov
in
pop
and
test
stc
imul
sbb
int
into
gs
cmp
int3
sub
arpl
insl
and
xor
push
arpl
lods
jb
pop
xor
imul
incl
cmp
ret
jnp
ds
insl
in
inc
mov
pop
nop
loope
rcl
pop
sub
bound
mov
fs
inc
xchg
js
sub
dec
xchg
lcall
into
incl
aam
xor
ret
sbb
push
ret
shrb
incl
fs
jns
popf
pusha
cmc
inc
int
loope
mov
inc
stc
lcall
mov
add
aas
in
xor
add
fidivrs
sub
dec
into
or
adc
cwtl
out
or
sub
enter
sbb
cmp
daa
ds
mov
lds
stos
pusha
push
loopw
outsl
je
arpl
push
test
mov
test
sub
sub
cmp
fwait
or
clc
xor
lret
xchg
jp
aaa
sahf
hlt
jbe
inc
xor
cwtl
and
scas
sub
pusha
movsb
adc
pop
jmp
add
push
xchg
sub
adc
dec
test
mov
mov
and
cmc
mov
dec
and
into
sarb
or
leave
xor
fs
xacquire
cltd
repnz
add
insl
jg
add
or
nop
js
test
in
sub
sbb
lods
loop
xorl
leave
jo
sbb
adc
scas
cmp
dec
addr16
inc
mov
clc
jb
xchg
rolb
lods
shl
sub
mov
lcall
out
mov
xchg
xchg
cltd
ficompl
bound
jmp
dec
fucomip
std
outsb
mov
in
inc
sarl
roll
cmp
subl
imul
cmp
inc
test
fisubl
imul
and
jp
and
in
jl
inc
push
insb
mov
xor
repz
scas
pop
outsl
dec
mov
mov
and
lea
aas
pcmpeqb
shlb
pop
mov
xor
ljmp
mov
xchg
popa
cli
push
push
mov
shrl
lods
lea
cmp
out
xchg
icebp
imul
repnz
aaa
lahf
shlb
xchg
je
ret
std
out
fildll
and
gs
imul
mov
arpl
je
xor
dec
cltd
cmpsl
pop
jbe
shl
js
out
out
aas
dec
leave
pop
ret
stc
ficomps
adc
xor
movsb
scas
aad
outsl
call
xor
dec
test
push
xlat
sahf
data16
repz
rorb
out
repz
fbld
sbb
xchg
cmp
fistpll
jnp
loope
pop
lahf
movsb
dec
push
rolb
cmp
adc
xchg
ljmp
cmp
ffreep
sub
mov
mov
jp
fwait
das
jns
mov
mov
xor
dec
sbb
sbb
fcomps
pop
add
jecxz
push
xchg
pmaxub
inc
xor
cs
sub
fcomp
push
cmp
mov
test
sbb
push
call
pushf
push
jmp
cmp
mov
stos
insl
xor
stos
das
push
ljmp
test
xchg
xchg
fistpl
movsl
es
xchg
jo
sti
arpl
mov
lods
int
cwtl
jnp
mov
jae
push
or
sti
sahf
mov
jno
jecxz
loop
dec
mov
jno
fs
cwtl
mov
inc
mov
shrb
loopne
enter
insl
xchg
hlt
mov
push
insl
insl
and
rorb
mov
xchg
add
insl
add
scas
popa
xchg
lds
imul
in
shl
push
ja
xchg
pop
test
shrb
mov
iret
shll
pop
in
sub
stos
es
das
sbb
cmpsb
inc
es
pop
cltd
test
or
test
sbb
out
lret
pop
push
cmp
int3
int3
jmp
test
jb
shlb
xor
jmp
adc
shlb
and
mov
pushf
push
cmp
adc
jb
mov
imul
imul
sbb
js
data16
lods
mov
cmp
pop
and
ret
pop
mov
xchg
jle
xchg
aaa
loop
stos
mov
fldenv
iret
adc
lret
push
clc
loop
and
push
mov
lcall
jmp
pop
push
cmp
adc
jmp
sub
cmpsb
mov
jmp
je
mov
jmp
cmp
fstl
or
out
push
xchg
test
andl
sti
or
inc
inc
scas
sbb
mov
in
or
repnz
or
insl
loope
decl
mov
movsl
cld
mov
cs
mov
jp
pop
pop
xchg
repnz
lock
cmp
push
jl
out
cmpsb
shl
sarb
xchg
pop
pushf
cmpsb
sbb
in
add
mov
mov
cmpsb
mov
sbbl
rcll
loope
and
dec
data16
xchg
inc
sbb
sti
mov
fildl
insl
mov
fistpll
jmp
insb
sahf
push
xchg
shll
aam
or
mov
jbe
imul
add
je
lea
pushf
jne
in
push
es
loope
testl
add
xor
dec
dec
sbb
loope
out
aam
ds
aaa
or
add
das
adc
icebp
mov
inc
in
leave
and
popf
adc
xchg
dec
mov
push
xor
divb
or
mov
stos
rep
mov
mov
jl
sahf
idiv
fs
xor
je
push
fistps
add
push
push
mov
sub
pusha
addr16
and
fcmovb
dec
out
push
lods
push
xor
mov
fcomps
and
cs
xor
xchg
addb
or
pop
xchg
adc
hlt
fdivrl
inc
mov
jns
adc
std
push
cmpsb
test
pop
les
jnp
dec
add
aaa
and
cli
aas
daa
mov
lahf
ja
fisttpll
lcall
cli
lods
add
jmp
stos
outsb
in
rcrb
outsl
mov
mov
add
jns
pop
in
xor
mov
push
test
dec
idivb
jno
mov
pop
push
xchg
je
xchg
lock
xor
decb
outsb
adc
inc
lods
xor
mov
mov
shl
dec
push
addr16
mov
sub
aad
add
andl
mov
sub
ret
out
jno
out
scas
mov
adc
xchg
lret
pusha
sub
out
pop
xor
hlt
sub
cmp
xor
push
add
enter
jp
jne
pop
aam
pop
push
aad
outsl
ds
xor
inc
movsl
lea
mov
jg
sahf
push
out
sbb
inc
add
xchg
sub
xchg
pop
or
xor
inc
stc
mov
das
jbe
addb
pushf
push
negl
ret
aaa
mov
lods
push
ret
stos
imul
icebp
addb
bound
and
sbb
mov
push
pop
imul
sbb
pop
fcomi
push
and
add
out
lret
mov
inc
andl
sbb
mov
repnz
hlt
xchg
addl
and
xor
mov
fistps
xor
sub
arpl
mov
xchg
push
mov
or
int
mov
sbb
jg
cmp
rcrb
mov
cs
dec
lods
cwtl
xchg
dec
xchg
nop
fmulp
insb
filds
bound
call
imul
out
jle
xchg
push
adc
outsl
dec
inc
jg
mov
xchg
leave
push
dec
in
push
ret
pop
mov
jmp
addl
cltd
xlat
push
and
cmp
arpl
rolb
dec
and
fistpll
inc
cwtl
loope
lds
and
and
or
mov
adc
jb
xchg
inc
inc
xor
enter
jns
scas
addr16
inc
add
jmp
dec
gs
movsl
cmp
jmp
xchg
das
insb
sarb
xchg
mov
int3
mov
testl
xor
pop
adc
mov
inc
pop
mov
js
xor
das
addl
xchg
adc
arpl
imul
addr16
lods
inc
pop
cs
jle
mov
sti
jne
adc
sub
jmp
sub
ja
ret
push
push
push
xchg
mov
fstl
loop
popl
jecxz
xchg
std
iret
fisubrl
lods
out
push
adc
std
xlat
xchg
pop
addr16
mov
and
mov
xor
loop
mov
push
dec
cmp
pop
sbb
pop
subl
mov
mov
call
mov
das
jge
pop
cmpsb
ret
ljmp
adc
out
sub
in
inc
outsl
inc
cwtl
notl
or
and
sbb
push
pop
sahf
ljmp
rolb
iret
xchg
dec
mov
mov
dec
or
jb
or
dec
mov
fwait
fwait
es
in
inc
mov
cmp
fnstcw
sbb
xchg
mov
mov
jnp
adc
into
scas
jne
sub
fstl
jo
xorl
repz
inc
mov
mov
and
xor
and
xchg
outsl
mov
fwait
and
dec
cmpsb
dec
imul
xor
fnstsw
repnz
push
xchg
push
mov
hlt
ret
sub
in
sbb
ss
outsl
pop
push
nop
lcall
or
mov
dec
inc
fsubrl
outsb
enter
dec
shrl
sarl
adc
or
mov
mov
add
notl
std
add
push
ret
cwtl
and
jbe
cmpb
fcoms
mov
mov
aaa
xchg
outsb
nop
jb
clc
xchg
xchg
mov
insw
iret
or
data16
jg
xchg
test
stos
xchg
sub
jo
sub
jg
add
fstp
and
cld
fidivs
test
jle
je
movsl
sbb
push
cmp
lods
je
or
fsubrs
sub
sbb
cmp
mov
pop
out
shr
cwtl
inc
rcrb
jne
mov
popl
push
and
nop
pop
mov
adc
push
aas
ds
xor
pop
mov
lods
ffree
push
mov
scas
mov
ret
add
push
pop
scas
cmpsb
sbb
hlt
das
inc
push
xchg
add
loopne
adc
scas
jg
cli
mov
pop
rolb
pop
ret
jecxz
ret
stos
pushf
sub
jmp
call
js
pop
ret
add
sub
aad
das
daa
lods
push
movsl
jl
mov
lret
outsl
sbb
pop
dec
into
les
cmp
or
divl
inc
or
rcll
test
or
scas
js
negb
out
test
rcrl
imul
lods
ds
sahf
cli
push
mov
in
sti
or
mov
repnz
cld
movsl
xchg
or
push
outsl
jae
pop
test
xor
xor
in
add
les
arpl
mov
sub
stos
push
jno
push
dec
jge
jg
mov
and
xchg
and
or
xchg
daa
mov
push
adc
pusha
jae
or
rclb
inc
inc
add
push
jnp
mov
cld
ret
mov
jnp
shrb
inc
insl
movl
mov
add
movsl
mov
and
mov
mov
mov
nop
cmp
push
gs
jns
and
test
adc
dec
enter
add
ljmp
jo
xchg
es
lds
inc
stos
jge
push
adc
imul
into
pop
rorl
shll
ror
pop
xlat
adcb
inc
or
stc
xlat
rcl
jnp
in
mov
inc
sub
cmp
insb
test
testl
movsb
mov
lea
cmove
mov
fisttpll
jne
push
and
fs
mov
sbb
enter
mov
mov
pusha
dec
test
xchg
mov
dec
xlat
inc
jns
adc
pop
lods
loop
jne
push
out
ret
push
shrl
mov
cs
inc
push
and
inc
xor
inc
ss
out
adc
repnz
dec
popf
pop
imul
test
sub
mov
add
cs
outsl
cmp
mov
mov
mov
adc
dec
jge
jecxz
jge
aaa
add
xchg
cmp
inc
daa
lcall
sbb
in
and
cmpsb
add
lods
stos
sbb
jae
sbbb
movsl
fwait
mov
ret
ja
lock
sbb
cmp
arpl
cmpsb
nop
int3
mov
push
dec
movsl
mov
imul
sbb
pop
add
mov
mov
adc
out
insl
mov
imulb
mov
ja
jno
push
pop
add
push
cmc
jae
imul
dec
sub
cmp
jmp
jae
int
rorl
idivl
fstpl
dec
sahf
add
jecxz
lods
stos
out
hlt
sahf
dec
or
lret
stc
xchg
call
dec
in
das
pop
test
cld
in
xor
inc
xor
dec
fsubl
mov
xor
hlt
jnp
je
add
les
movsl
cli
dec
cmp
sarl
jmp
pop
addr16
iret
push
andl
xchg
xor
adc
pop
mov
push
leave
insb
leave
inc
push
push
jb
push
mov
insb
ficoms
cwtl
xchg
xor
and
cmp
sbb
mov
popa
imul
or
xchg
adc
push
movsl
in
lods
adc
and
lock
jns
xor
or
ret
push
jle
push
stc
mov
seto
xor
das
sbb
jmp
push
mov
pop
clc
and
mov
dec
jnp
or
push
mulb
or
xchg
push
jecxz
mov
stos
outsb
dec
mov
loop
mov
orb
iret
and
jae
push
daa
out
les
jno
add
add
push
xchg
dec
ret
rdmsr
inc
scas
mov
fnsave
or
or
mov
pusha
or
mov
pushf
aas
ja
scas
push
or
fstpl
aaa
sub
cmp
fsts
or
push
cmpsb
jnp
mov
insl
inc
mov
or
inc
jl
inc
outsl
cmpb
into
int
cmp
dec
in
pop
xor
in
mov
notl
jae
cmpsl
je
xchg
xchg
movsb
pop
inc
addps
icebp
fidivrl
sub
dec
popa
mov
mov
movsl
bound
lods
xor
adc
xlat
or
shlb
inc
adc
cmp
ja
jno
addb
inc
nopl
fistl
in
pop
xor
inc
sub
ja
into
xchg
movsb
nop
cmpb
inc
orl
sbb
loope
stos
imul
cmp
add
push
xlat
mov
pop
lods
adc
jb
cs
dec
adc
pop
and
mov
and
mov
test
pop
test
or
bound
mov
roll
mov
inc
stos
xchg
fwait
dec
dec
popf
scas
clc
fsubl
movsl
dec
outsb
aad
cmp
push
into
lds
cmp
xor
or
sbb
push
hlt
or
pop
jge
and
cmp
mov
pop
xchg
jp
xchg
jbe
mov
jge
push
cltd
adc
jp
pop
sub
cmpsb
inc
pop
lods
in
aas
mov
mov
in
outsb
add
lret
xchg
loop
test
ljmp
movsl
out
adc
and
or
xchg
pop
lea
sbb
and
or
mov
xor
pop
xor
fildl
mov
cld
test
add
jb
dec
and
rcr
pop
lods
pop
ss
dec
pop
mov
sbb
jb
imul
in
sahf
sub
jmp
xchg
out
mov
icebp
ret
add
dec
ret
inc
sbb
addb
fsubrl
hlt
and
mov
pop
xor
scas
push
jae
mov
mov
jo
xchg
mov
ret
jl
dec
ret
lret
sub
xchg
incl
mov
mov
add
dec
mov
bound
sub
pushf
aam
addr16
jmp
inc
cwtl
out
mov
push
mov
xchg
mov
mov
pusha
in
lods
sbb
mov
int
inc
push
mov
enter
pop
push
mov
pushf
sbb
pop
cli
lock
cmp
imul
loope
cld
enter
sub
xchg
add
dec
fadd
scas
out
mov
dec
outsl
inc
xchg
rorl
adcl
adc
mov
je
dec
or
and
imul
push
enter
inc
mov
and
ljmp
push
in
outsb
push
push
push
outsl
cli
jge
cltd
xor
fdivrp
mov
sub
sarb
je
push
pop
fwait
adc
rcr
mov
ret
scas
inc
and
mov
ret
pop
adc
rol
and
xchg
fwait
mov
push
add
lea
mov
in
xor
arpl
out
jbe
jb
cmp
push
add
inc
adc
pop
out
test
xor
ja
lods
mov
jae
lock
aad
xor
mov
mov
sub
push
std
shrl
inc
jg
cwtl
andl
jnp
xchg
push
movsb
adc
les
pop
daa
xor
out
int3
cmpsl
jge
xchg
enter
xchg
std
mov
sbb
pop
xor
daa
adcb
xor
dec
orb
and
push
sbb
out
pop
and
gs
pushf
pusha
je
ljmp
outsb
add
rcll
xchg
pushf
iret
cmc
xlat
inc
adc
mov
cmp
mov
movsb
lret
das
mov
mov
orb
push
movsb
fidivs
adc
fnstcw
xor
jge
dec
dec
mov
in
jmp
stc
lahf
ja
popa
lahf
stc
aaa
dec
out
out
xchg
hlt
xchg
movsb
mov
fmul
scas
xor
mov
adc
adc
push
xlat
jbe
shrb
xorl
setae
or
das
mov
sti
xchg
loop
ljmp
sub
sbb
sub
test
stc
mov
sbb
clc
repz
adc
ljmp
push
enter
jo
scas
rcr
aam
addr16
inc
call
int
fildl
mov
xor
fldt
mov
aam
and
movsl
sbb
shrb
sub
xchg
in
decb
hlt
sahf
jg
mov
mov
jle
jno
ror
stos
sbb
cmp
pushf
inc
pop
stc
xor
clc
fwait
divb
idivl
dec
mov
sarl
addr16
andb
lahf
iret
cmpsb
cmp
subl
jg
nop/reserved
lret
mov
adc
xor
or
jnp
dec
sub
outsb
xor
arpl
add
push
aam
not
lret
mov
jne
push
std
in
ljmp
pop
add
out
xor
jno
and
outsl
sbb
fs
ffreep
lahf
fcmovbe
movsb
or
add
in
idiv
cmp
xchg
cwtl
pusha
xor
mov
scas
lods
testl
imull
push
rorb
cltd
mov
xchg
repz
stos
sub
sbb
mov
mov
and
mov
mov
lret
daa
lea
jle
ja
sti
cli
xlat
sti
mov
inc
adc
mov
push
stos
push
in
sbb
fwait
into
sbb
mov
pslld
push
test
xchg
inc
nop
mov
push
lds
xor
or
pop
aas
cs
enter
push
inc
push
add
sbb
lock
xorb
mov
fcmove
aam
push
je
sub
jno
jb
push
push
sub
or
adc
lods
int
jle
pop
rcll
lods
add
push
je
xchg
inc
insl
fxch
xor
movsl
pop
add
rcll
xlat
data16
loope
ja
mov
test
or
in
cmpsb
inc
add
aad
out
cmp
cmp
movsl
shr
dec
repnz
or
imul
jp
in
test
pop
lahf
xchg
inc
lret
xchg
add
cwtl
and
out
addr16
in
xchg
stc
dec
cltd
push
out
je
xor
add
insb
arpl
jge
jno
jo
adc
sub
aas
in
fs
out
call
lods
jl
xorl
inc
jbe
mov
push
cmp
insl
fnstcw
fucomp
nop
in
aad
mov
fs
or
loopne
ss
in
leave
imul
xchg
cli
insb
iret
mov
push
xchg
dec
mov
cmp
mov
inc
mov
aaa
adc
cmp
inc
and
popa
test
in
lea
scas
push
adc
mov
fidivs
aaa
pop
movb
jge
mov
adc
pushf
into
pop
jbe,pt
clc
ss
aam
fstpt
fs
jle
cmc
inc
test
inc
or
push
enter
cmpsl
push
in
ljmp
mov
xchg
shrb
dec
pop
push
xor
cmp
mov
push
or
lea
pop
mov
pusha
jnp
icebp
pop
cmp
rolb
mov
lods
push
out
and
push
fnstenv
pop
add
and
lcall
mov
popf
cmp
aas
call
jbe
aam
repz
ret
xchg
pushf
add
jmp
ss
inc
xchg
adc
mov
jb
pop
adc
or
les
xchg
jecxz
add
mov
out
call
imul
std
mov
cmc
dec
mov
pop
inc
lds
outsb
push
sub
fisubrs
mov
out
sub
sbb
sbb
jg
xchg
and
push
divb
cwtl
popa
call
jp
push
push
inc
shlb
pop
sarl
test
mov
jne
scas
sbb
lret
xchg
xchg
xchg
fidivl
rorl
incb
add
cltd
mov
test
js
pop
cmpsb
test
fiadds
dec
scas
pop
repnz
cmp
pop
cmpsl
mov
je
jb
inc
push
lret
pop
mulb
add
ja
jno
ds
mov
loop
popa
sahf
push
push
loop
sub
cmp
cmp
xchg
push
ja
mov
adc
push
sarb
xor
fisubs
cmp
sbb
push
dec
fimull
push
pop
sti
aam
lret
pop
xchg
xchg
xor
insb
rcll
cmc
shlb
sbb
and
and
fnsave
cltd
and
fs
sub
sbb
push
out
mov
int3
lock
mov
xchg
jmp
and
sub
sub
xor
filds
stc
dec
add
cmpsl
xlat
pop
xor
scas
ja
call
lds
sub
aas
ret
sbb
andb
test
int3
xchg
rol
int
dec
adc
notb
mov
fists
fmuls
repz
dec
or
mov
or
mov
mov
jo
cmp
pop
pop
rcrb
xchg
inc
adc
mov
decb
js
iret
mov
addr16
mov
sbb
sti
cld
ljmp
xorl
pop
movl
gs
lds
hlt
push
decb
je
mov
scas
nop
sub
test
call
stc
and
cmp
fiaddl
dec
push
in
rclb
xor
xchg
test
fnstcw
adc
push
imul
arpl
cmp
inc
mulb
movl
aaa
int
aas
int
sbb
add
xor
xor
ja
ud1
repz
mov
and
es
inc
mov
jg
cs
mov
jle
sahf
sub
imull
lea
jbe
aas
cwtl
fidivl
lea
adc
cmp
dec
mov
mov
push
dec
es
js
inc
add
into
ret
mov
sub
dec
push
aas
in
call
jno
xor
jle
xor
jmp
out
sub
jmp
cmc
loopne
out
sarl
enter
fsubrp
lds
scas
lcall
dec
pop
das
adc
lods
fwait
and
fadds
andl
or
xchg
mov
mov
outsl
mov
nop
xchg
cmp
scas
add
lahf
dec
mov
pop
xchg
incb
aas
or
xchg
adc
sbb
std
loope
xor
mov
xchg
das
mov
mov
add
enter
mov
outsb
rorl
lds
mov
mov
xchg
aad
or
lds
and
testl
or
adc
pop
sahf
and
push
out
mov
subl
sahf
rclb
xor
cmp
push
push
imul
mov
lods
sbb
in
inc
sbb
cmpsb
jmp
mov
out
and
sub
ret
lret
mov
inc
mov
push
movsb
fwait
dec
pop
incb
stc
hlt
enter
call
pushf
fwait
imul
mov
sub
or
add
adc
scas
scas
sbb
in
lods
or
ret
fsubp
fidivl
ret
gs
xchg
pop
lods
mov
mov
pusha
sub
subl
adc
shlw
push
mov
push
icebp
es
pop
data16
call
lods
stos
lret
cmp
lret
sarb
dec
testl
outsl
push
in
and
fcomi
jb
insb
xchg
nop
or
imul
aas
cmp
pop
push
frstor
jmp
pop
lods
dec
push
sbb
aas
in
jbe,pt
jmp
ljmp
cmp
mov
inc
icebp
js
hlt
andl
or
mov
les
mov
mov
aaa
xor
jo
adc
hlt
push
in
cltd
xor
cmp
int
ljmp
ljmp
int
in
lds
push
je
inc
nop
loopne
pop
pop
or
push
xor
mov
sti
test
lock
pop
push
inc
sbb
jo
jp
sti
inc
cmc
es
cmp
xchg
int3
add
add
jo
int
iret
cmp
test
ss
jmp
std
enter
mov
es
loopne
loopne
jo
push
push
add
sbb
push
ljmp
mov
bound
or
std
push
mov
or
mov
out
jp
xor
cmp
cmpb
ljmp
mov
xor
cmp
jno
pop
push
movsb
mov
jmp
pop
jecxz
xor
rorb
push
fdivl
fisttpll
lods
js
jle
inc
add
push
loopne
aam
nop
aas
push
inc
leave
and
outsl
sub
jge
fmul
movsb
dec
cld
call
int3
mov
push
or
into
sbb
dec
notb
sbb
in
sahf
cmpsb
and
iret
add
repz
jbe
push
push
add
jp
xor
call
adc
jne
std
jne
dec
gs
pusha
fwait
pop
vpshufhw
loopne
lcall
sub
jb
hlt
xor
test
nop
fsts
xchg
mov
inc
add
andl
stos
mov
mov
repz
cmp
fimull
or
mov
xor
cmc
mov
bnd
fwait
mov
fists
fdiv
add
fldcw
sub
popa
push
dec
mov
aad
sub
pop
aad
jle
cs
aaa
scas
mov
inc
add
fisttpll
adc
loope
ret
sbb
mov
push
adc
in
sub
es
add
clc
fldt
out
stc
ret
jno
inc
popf
inc
loope
dec
add
ljmp
adc
jno
xor
movsb
inc
stos
repnz
jnp
test
mov
push
xchg
sub
cmp
mov
stos
addr16
repz
loopne
test
test
mov
ljmp
adc
imul
dec
and
daa
xor
jae
and
mov
lret
insl
jae
xor
fmuls
addr16
adcb
imul
and
inc
and
add
mov
fcomps
rol
cmp
test
jge
sbb
hlt
jle
outsl
inc
mov
jae
and
inc
jns
out
pop
test
aaa
std
inc
pop
pop
inc
cmp
dec
lea
add
hlt
xchg
scas
add
enter
push
scas
addr16
leave
dec
clc
jbe
xor
fsubl
push
cld
push
cltd
mov
dec
scas
movsl
sahf
cmp
imul
cli
popf
cmc
xchg
push
cmpsb
pop
sarb
aas
pop
inc
jge
xchg
sub
loop
jo
sbb
cltd
push
cltd
cld
cs
scas
inc
cmpsl
hlt
inc
scas
mov
aam
popa
loope
jl
addr16
push
or
es
data16
mov
xor
mov
or
fists
mov
imul
inc
pushf
fcmovnu
dec
jns
xor
ss
or
imulb
jae
lahf
xchg
test
inc
icebp
sahf
ja
mov
imul
cmpsl
xchg
fildll
xchg
jb
ficomps
mov
nop
adcl
loopne
jae
xchg
lods
shl
jae
daa
push
dec
mov
repz
or
pop
xor
xchg
sub
into
das
mov
mov
enter
mov
mov
sbb
jge
push
and
test
mov
jmp
sbb
xchg
sbb
addr16
repnz
lods
sub
ja
pop
aad
rorl
scas
add
inc
icebp
fidivrl
and
dec
shlb
aad
sahf
movsl
push
and
jo
fistl
cmp
int3
nop
mov
out
dec
xchg
lcall
jnp
mov
scas
test
jmp
int
in
and
repnz
pop
add
das
pushf
pop
add
into
add
sub
jmp
push
pushf
push
xor
adc
lea
int3
inc
mov
pop
imul
inc
jecxz
mov
sti
xor
incb
int
inc
call
xor
mov
mov
push
je
inc
ret
dec
adc
das
lock
dec
nop
jmp
pop
ss
sahf
subl
clc
cltd
xor
pop
nop
inc
nop
cmp
pop
jmp
cmp
out
or
xor
pop
add
shrb
jne
dec
mov
jg
hlt
scas
pop
add
dec
and
mov
lahf
xchg
mov
incb
push
es
push
inc
call
hlt
daa
push
repz
lods
add
push
cmove
inc
jge
pop
push
xchg
mov
in
cld
cmp
fdivs
mov
int
fdivrs
sub
push
repnz
pusha
push
xchg
sti
sbb
xor
mov
fs
cmc
inc
lds
data16
sub
sbb
pop
out
aas
jbe
mov
jp
rolb
sub
xchg
leave
into
inc
lods
or
pop
call
push
adc
push
sub
notl
outsb
int3
shl
adc
push
jnp
cmp
cmpsb
in
mov
pop
mov
icebp
xor
hlt
stc
xchg
lods
adc
in
and
bound
stos
fdivrl
jbe
ret
lds
into
cmp
cmpsb
fcmovnb
inc
xor
mov
mov
add
in
mov
cs
cmp
ret
or
data16
adc
mov
in
adc
cmpsl
rorl
push
jnp
push
repnz
jl
mov
nop
hlt
xchg
push
jge
mov
inc
push
jge
jne
add
mov
addl
loopne
sbb
frstor
mov
xlat
mov
gs
jae
lea
jmp
dec
ds
into
add
jp
jnp
inc
xchg
xlat
dec
inc
into
fdivrl
arpl
dec
insb
dec
sub
xor
mov
lods
fsubrs
pop
sbb
subb
mov
adc
push
lret
jge
icebp
pop
push
test
sub
mov
push
add
pushf
es
inc
xchg
xor
push
sub
push
js
stos
jne
stos
jmp
loopne
lret
cmp
popa
loop
addr16
xchg
and
push
sbb
test
and
xchg
adc
cmp
dec
adc
xchg
decb
popf
mov
dec
xchg
inc
fsub
in
test
or
in
sub
cmpsl
int
inc
inc
sbb
push
fstps
in
adc
into
pop
and
cmp
or
clc
lcall
in
or
inc
loopne
sbb
andl
xor
inc
aad
mov
cltd
roll
rcll
push
mov
shl
inc
inc
mov
lcall
in
outsb
adc
jne
scas
call
add
fdivl
loopne
test
lds
mov
jg
fistpl
je
xchg
fistpl
adc
jmp
sbb
or
cmp
jno
fldt
pushf
push
mov
or
rcr
xchg
cmpl
out
mov
cmp
adc
lahf
shlb
pushf
jbe
xor
lods
jmp
and
dec
fisttpl
ss
adc
out
mov
enter
push
ficoms
pushf
xor
fwait
xor
das
loop
mov
pop
lods
push
or
mov
mov
aam
lahf
add
push
cmp
jg
movsb
lcall
pop
mov
pop
jge
enter
push
shll
ljmp
outsl
add
push
sub
mov
out
sbb
cs
addr16
mov
lret
inc
sub
aaa
lock
xchg
and
outsb
shrb
or
xchg
and
add
sbb
xchg
mov
roll
aad
dec
movsl
cld
add
fimull
add
xchg
push
xor
fsubr
ficoml
add
std
cltd
pusha
jae
fldl
add
jl
out
or
ficomps
xor
repz
je
outsb
les
inc
mov
or
pop
mov
push
sarb
mov
xor
rcrl
xchg
sbbl
sub
adc
pop
jg
inc
mov
daa
dec
and
cmp
repz
faddl
insb
xchg
push
jae
inc
jo
add
std
sub
in
rcr
out
push
mov
popa
icebp
pop
pop
popf
push
lahf
pop
fldt
movsl
imul
pop
repnz
adc
dec
adc
int
jmp
scas
lods
js
aad
aad
fisubrs
shll
inc
mov
lahf
xor
nop
sub
cs
dec
popa
shl
repnz
inc
mov
aas
sub
and
es
xchg
xor
cmp
mov
inc
stos
and
sbb
ret
pop
jg
cmp
lea
rclb
ret
das
mov
mov
aam
push
test
pop
lcall
bnd
jbe
add
and
cmp
pusha
jge
push
in
lcall
sub
xchg
roll
xor
das
mov
inc
insb
cli
test
hlt
popf
and
jp
cmp
mov
dec
int3
cmp
add
int
imul
and
push
cmpsb
dec
xor
hlt
jns
aad
ja
jmp
imul
cltd
ljmp
pop
loope
das
shrl
sub
or
sub
mov
dec
push
mov
pushf
iret
daa
jmp
pushf
or
mov
push
and
or
xchg
ljmp
outsb
pop
fnstcw
sbb
push
pop
jnp
repz
out
dec
rcrb
insb
jp
push
mov
ret
pop
and
fadd
jmp
sti
mov
xor
add
add
xchg
aam
mov
inc
add
xor
bound
xor
jecxz
test
mov
push
sub
mov
out
mov
add
sub
inc
loop
dec
ret
data16
lret
cmp
popf
xor
or
jle
cmp
and
out
shl
cmc
std
pop
pop
push
sub
cld
mov
push
push
dec
je
call
dec
cmp
xchg
lcall
jbe
stos
and
ljmp
lret
mov
out
cli
xchg
fstpl
stos
insb
adc
mov
testb
ss
movsb
mov
jb
xchg
jb
mov
hlt
and
mov
popa
sbb
test
xor
ss
or
mov
or
mov
es
ja
popa
cmp
out
cmp
mov
rorl
inc
jae
bound
test
movsb
sar
sarb
enter
pop
and
xor
dec
fnstsw
jbe
mov
mov
stos
inc
sub
jo
xchg
pop
mov
mov
jp
sti
xchg
adc
dec
pop
xchg
mov
jo
mov
pop
divb
mov
insl
xchg
repz
test
rclb
add
cld
pop
pop
mov
lret
adc
pop
pop
cmpsl
mov
rorl
cmp
lcall
inc
orb
icebp
outsb
jb
das
mov
int
dec
out
jle
lods
push
xchg
jbe
andl
mov
into
mov
cwtl
push
imul
mov
mov
jns
jns
enter
xor
add
pop
sbb
rcl
xchg
sti
or
fisttps
lcall
push
mov
ss
lds
mov
mov
sbb
std
add
dec
out
insb
adc
jnp
mov
aad
mov
int
dec
fucomp
xchg
sti
mov
pop
mov
imul
xchg
shrb
mov
rcr
test
dec
popf
aaa
imul
dec
outsl
lods
sbb
aad
dec
aam
sbb
push
cmp
cmp
push
popa
jb
lea
scas
test
sub
mov
lea
xchg
shl
adc
notb
dec
popa
adc
shlb
or
xchg
mov
adc
lcall
mov
adc
mov
sub
push
clc
push
int
cmp
or
xchg
movsb
test
clc
fisttpll
xchg
mov
and
or
loope
pusha
imul
inc
insl
sub
imul
mov
fdivr
pushf
incb
call
outsb
xor
mov
jnp
adc
dec
orl
push
inc
pusha
rcll
or
fwait
xor
bound
ljmp
jno
gs
push
jnp
nop
xchg
dec
test
dec
xchg
mov
or
gs
or
mov
fidivrs
pop
mov
insb
les
scas
or
out
xchg
jne
cmp
stos
movsl
cmp
ds
js
push
jmp
adc
xchg
sub
push
xlat
jo
cmp
mov
xchg
test
and
push
lcall
les
sbb
xchg
push
pushl
mov
adc
dec
pop
mov
and
leave
pop
sub
sbb
xlat
popf
pop
jo
xchg
and
sbb
movb
sub
es
sub
xchg
or
pop
xchg
mov
push
sbb
dec
mov
frndint
stos
cmpb
mov
out
test
xor
push
scas
jo
test
and
inc
inc
faddl
mov
int3
leave
addr16
std
leave
fstps
add
jge
mov
xor
test
and
cmp
push
push
or
rorb
xchg
adcl
mov
rorl
or
sbb
repnz
std
mov
cltd
rorl
mov
add
mov
out
inc
xor
imul
mov
hlt
cmp
out
scas
sbb
pcmpgtd
fadds
jp
adc
mov
outsb
out
incl
add
enter
mov
mov
adc
iret
and
lods
lods
sub
pop
and
sub
cmp
add
mov
ja
sbb
fwait
cld
push
jnp
push
repnz
and
add
fsts
sbb
lods
outsb
das
sbb
mov
jne
push
cmpsl
mov
push
stc
cmc
cli
dec
lahf
dec
or
das
jecxz
cmp
outsl
sub
nop
cmp
cmp
aad
or
sar
test
xorl
xchg
aam
dec
jle
mov
sahf
xchg
xor
movb
jp
pusha
xor
sbb
xor
les
cmc
jo
jno
lods
mov
movl
add
sub
jo
cmpsb
scas
push
ss
fbstp
movsb
daa
inc
sbb
pop
jp
cmp
push
dec
inc
xor
and
insl
pusha
adc
mov
inc
add
pop
data16
xor
inc
or
jge
mov
lahf
sahf
push
and
xchg
push
rcrb
adc
sti
or
scas
shl
insl
lods
cld
and
mov
adc
shll
add
pop
or
mov
push
daa
das
cmpsb
push
dec
cmpsb
fcmovnbe
mov
mov
cmpsb
xchg
loopne
mov
mull
xchg
pop
push
jmp
or
and
mov
test
test
mov
and
test
inc
out
xchg
je
sbb
into
ds
or
inc
cmp
xchg
push
mov
sbb
push
or
fwait
addl
rcll
fsubs
bound
cs
lods
mov
cmp
into
add
pop
push
shl
mov
gs
sahf
adc
xor
push
xor
icebp
imul
stos
pop
push
js
xor
vpmullw
int
stc
iret
in
sti
rcl
daa
push
mov
bound
std
jnp
and
and
xbegin
or
arpl
jno
dec
sbb
insb
cmp
pop
push
cmp
inc
xor
mov
popf
sub
lahf
and
mov
clc
lock
pop
pop
rcll
xchg
ret
mov
cmp
sti
jge
cmp
loope
cltd
notl
sub
sub
pusha
pop
mov
mov
mov
sbb
pop
call
cli
mov
stc
mov
dec
inc
xor
cwtl
leave
jg
push
lods
sub
mov
in
aaa
jb
jle
push
insl
cmp
and
mov
jp
adc
daa
pop
mov
iret
mov
add
inc
fisubl
inc
pop
loopne
sbb
fsubrs
fsubr
clc
push
shrl
or
and
mov
sbb
mov
dec
fs
int
icebp
and
repz
xchg
push
shrl
pop
and
xchg
loope
scas
aad
pusha
adc
loopne
sub
inc
dec
and
mov
xchg
adc
inc
ja
scas
xor
jge
mov
mov
dec
xchg
stos
int
ffree
push
dec
mov
push
outsl
rorl
outsl
and
or
inc
jnp
cli
mov
outsb
mov
pop
pop
dec
ret
daa
jmp
or
pop
movsb
mov
ret
push
mov
icebp
jg
rorb
rcrb
fsubrl
flds
subl
xchg
xchg
insb
pop
mov
ret
dec
cmp
mov
push
jnp
adcl
cwtl
insl
call
pusha
aaa
push
sub
mov
imull
aas
bnd
xchg
nop
xorb
fistpll
dec
sbb
int
outsb
cmp
mov
xrelease
sahf
cmp
mov
pop
stos
or
adc
dec
nop
inc
pop
xchg
sub
out
cmp
test
push
imul
popa
popa
or
lods
push
mov
out
sub
popa
add
test
and
dec
and
mov
shlb
stos
or
adc
dec
sbb
xlat
and
mov
dec
outsb
aam
mov
rcrb
sbb
mov
or
inc
negb
cmp
stos
repnz
push
pop
test
mov
repnz
push
pop
lea
arpl
idiv
loop
call
stc
jo
ja
or
ficomps
dec
in
pop
add
push
add
push
add
inc
rcrl
cmp
mov
icebp
push
add
sub
loop
gs
inc
sbb
or
jo
lds
mov
iret
dec
out
mov
cmpb
sub
cmpsb
andl
mov
rcl
sbb
cld
push
mov
hlt
xchg
popa
mov
inc
adc
mov
add
jge
test
les
fstl
fdivl
jg
inc
mov
imul
into
insb
lea
pusha
inc
sub
inc
hlt
jno
imul
sub
dec
dec
movsb
pop
pop
and
add
mov
xor
jmp
in
aad
lcall
out
frstor
inc
mov
pop
je
xor
jns
fsubl
test
adc
xor
mov
andl
std
xchg
lcall
bound
push
mov
imul
jmp
lock
div
dec
add
pop
es
iret
imul
ret
aad
scas
jns
jae
mov
shl
mov
les
fs
sti
sub
dec
pop
inc
popf
ja
imul
lock
mov
cmp
imul
es
lods
dec
lods
rorb
push
out
fwait
sbb
cmpsb
push
mov
sbb
fmull
call
bound
std
outsb
add
mulb
outsl
movsl
lock
enter
dec
mov
jno
pop
or
aad
aas
add
pusha
lods
push
add
dec
test
dec
rcrb
dec
and
aaa
aas
testl
jne
mov
movl
add
aam
fdivrs
jl
lods
sahf
movsb
and
push
sub
fisttps
gs
aad
pushf
sbb
add
aad
add
add
ret
lea
outsl
pusha
into
addr16
mov
addr16
mov
popf
or
and
sti
mov
lods
push
lods
cmp
in
das
mov
andb
xchg
pop
adc
jmp
dec
repnz
xlat
add
fldenv
adc
mov
adc
int3
test
and
dec
imul
jge
push
and
pop
xor
jecxz
ljmp
xchg
int3
pop
pop
imul
mov
leave
dec
scas
mov
dec
jmp
sbb
xchg
jp
int
xorb
adc
aad
push
enter
pushf
push
leave
or
stos
loope
jb
add
pop
dec
je
int3
data16
adc
repz
push
sub
pushf
mov
xchg
and
aaa
xlat
pushf
cwtl
das
xchg
test
rorb
jecxz
mov
leave
mov
je
sbb
pop
mov
shr
push
in
jbe
lahf
mov
and
in
lods
lret
cwtl
or
sbb
andl
aas
test
bound
cltd
push
sahf
mov
mov
pop
xor
xor
clc
sahf
jp
mov
mov
lds
stos
pop
scas
es
mov
add
sub
in
adc
sbb
pop
rolb
jle
mov
mov
mov
mov
sbb
fcompl
clc
cmpsb
sub
xchg
and
inc
mov
test
add
push
pop
push
mov
out
jp
ret
jl
xor
dec
pop
fsubrl
jle
push
xchg
sub
out
adc
movb
repnz
adc
ss
mov
mov
jmp
fidivrs
leave
push
outsl
push
mov
add
inc
insl
cmp
xchg
sbb
jle
xchg
loop
shl
pop
fnstsw
int3
mov
cmp
in
into
out
add
test
fcomip
sarb
mov
ds
sub
adc
adc
pop
and
addr16
push
jecxz
add
mov
lods
dec
mov
out
repz
push
pop
pop
jg
popa
imul
lret
lods
call
push
inc
mov
xchg
push
push
jp
dec
mov
adc
arpl
mov
test
dec
inc
ret
sbb
leave
sbb
or
add
mov
sub
rorb
loopne
cmc
dec
and
mov
jae
ret
hlt
mov
jbe
jne
xchg
push
movsb
jmp
mov
pop
cmpb
out
lock
and
cmc
jg
data16
in
ret
call
inc
pop
scas
xorl
lea
aas
outsb
out
mov
inc
mov
es
push
movsl
jmp
mov
andb
dec
pop
push
es
jae
push
leave
popf
sbb
call
ja
mov
adc
or
cltd
sub
ss
sub
pop
jbe
sbb
stc
jno
hlt
jae
adc
das
fsubs
mov
outsl
xor
aas
mov
sub
inc
imul
or
lcall
push
ficomps
pop
es
lods
pop
jne
pop
lods
adc
rorb
xor
sbb
das
ljmp
lret
sbb
ds
lea
sahf
xor
xor
arpl
loope
hlt
push
mov
fiaddl
pop
add
inc
fwait
stc
pusha
lock
lods
jmp
pop
loope
adc
push
xor
fstpl
inc
lret
iret
pushf
mov
clc
sbb
roll
jo
xchg
ret
and
pushf
mov
lret
pop
stos
imul
out
fcomip
push
jg
push
aam
das
jbe
and
lods
push
dec
out
mov
cmp
push
mov
or
add
arpl
jge
movsl
outsl
adc
mov
xchg
popa
cmpsl
xchg
dec
arpl
jmp
insb
jl
mov
das
xchg
mov
dec
lahf
jno
jmp
pop
cwtl
pop
into
or
mov
hlt
cmpsl
mov
push
add
sar
imul
dec
ds
int
and
push
xchg
sbb
rcll
sub
mov
dec
mov
int3
jp
aaa
cmp
dec
nop
popl
movsb
mov
popa
shrl
arpl
xchg
sahf
rcrl
lcall
push
ds
and
sub
daa
xchg
mov
xchg
add
add
or
loope
xchg
cmp
fcomi
jno
popa
jmp
enter
cmc
mov
arpl
mov
adc
aaa
push
frstor
or
sub
sub
mov
jg
icebp
repnz
in
ret
sarl
xorb
scas
aaa
or
fwait
loop
mov
daa
cmovns
push
lock
jle
mov
vaddsubpd
arpl
lret
xor
stc
pop
or
sub
addr16
pop
daa
pop
jle
jecxz
cmpsb
pushf
insb
cmp
inc
jecxz
jb
addl
popf
cs
rolb
dec
pop
jmp
xchg
add
add
nop
mulps
dec
inc
movsb
mov
movsl
int3
imul
scas
ror
rol
mov
mov
fadd
sub
xor
js
sbb
mov
rcll
fwait
pop
push
xchg
aad
pop
shrl
aas
xchg
or
and
dec
ljmp
pop
in
mov
pop
sbb
xchg
rorl
inc
scas
push
pop
lds
xlat
add
push
ret
and
inc
movl
and
repz
ret
sub
push
mov
mov
push
pop
push
fs
or
mov
out
into
push
add
out
cmc
aas
sub
jno
rep
or
insb
stos
mov
push
jbe
arpl
out
mov
push
es
imul
xor
dec
insb
jge
push
push
lods
add
xor
adc
lcall
xor
bound
shrb
pop
jb
inc
mov
mov
cmp
imul
xchg
ss
push
pushf
loope
aam
pop
lds
pop
je
mov
aad
mov
das
mov
in
cmp
mov
rcrb
aam
scas
gs
iret
mov
xchg
js
add
roll
push
into
mov
sbb
and
mov
and
mov
pop
popf
mov
leavew
xchg
les
jbe
nop
scas
mov
push
mov
div
inc
xchg
inc
adc
repz
xor
xlat
pop
aas
and
pop
stos
lret
ja
xchg
mov
xor
fisubs
and
cmp
insl
xchg
inc
stc
mov
xacquire
subl
sti
sbb
popa
test
stos
mov
cmp
mov
inc
pop
sbb
gs
jl,pt
sbb
fnstcw
sub
pop
sub
jle
rcll
xchg
or
mov
insl
sub
loopne
shrl
mov
mov
rcl
lods
inc
jle
inc
hlt
add
mov
scas
ja
dec
sbbb
jns
mov
jnp
orl
xchg
push
push
xorb
jns
mov
cli
sbb
mov
xchg
jg
pop
mov
xchg
or
jecxz
sahf
dec
aaa
jbe
loope
inc
sbb
or
sbb
icebp
inc
sbb
adc
pop
xor
ja
in
mov
fldcw
jo
xchg
pop
push
pop
fiaddl
ljmp
mov
divl
out
subl
lods
ja
xor
inc
jge
mov
popa
pop
push
out
nop
jne
fildll
jl
lahf
pop
lods
cmpb
jmp
push
add
mov
cmp
and
popa
mov
add
pop
jle
sbb
cmp
inc
jecxz
push
insl
adc
jp
xchg
sbb
mov
add
inc
mov
push
adc
xchg
jb
jb
jnp
xchg
cmp
jg
jp
xchg
mull
fimull
sarb
xlat
loop
std
adc
scas
scas
lds
loop
jnp
mov
or
int
and
out
lods
pop
iret
xchg
add
sbb
and
test
cld
fldt
in
lret
pop
leave
int
adc
jns
push
and
hlt
mov
outsl
sub
jns
dec
cltd
xchg
mov
mov
mov
popa
inc
loop
cmp
and
add
in
xchg
or
ficoms
inc
cmp
iret
inc
fistpll
push
inc
fldt
push
cmp
in
mov
jb
rcl
enter
push
mov
sub
lcall
imul
sub
cli
cmp
pop
add
jge
ret
sbb
in
sti
xchg
pop
jg
inc
adc
sub
pop
bound
add
repnz
mov
pushw
xchg
push
aas
lods
repnz
hlt
inc
cmp
insb
push
pop
aam
sbb
test
pop
xor
popa
mov
scas
xor
sub
inc
stos
add
pop
orb
movsl
sahf
call
jge
pop
out
jb
cmpsl
ljmp
pop
dec
push
add
lahf
dec
pop
aaa
movl
into
add
pop
xchg
popa
dec
xor
push
cmc
push
gs
dec
pop
js
in
int3
cmpsl
push
mov
jo
or
adc
ss
push
and
in
mov
xchg
mov
mov
sti
push
push
call
adc
bound
clc
icebp
xchg
rorl
mov
mov
mov
stos
imulb
out
jne
pop
xchg
fdiv
mov
jmp
pop
push
enter
scas
mov
imul
divl
sub
pop
mov
push
pop
cmp
mov
mov
addl
dec
ret
pop
push
push
push
fstps
sbb
fs
inc
scas
push
xchg
mov
dec
or
pop
cltd
dec
cmpsl
dec
ljmp
lcall
sub
clc
mov
fcompl
mov
sub
mov
in
rcll
test
mov
std
pop
test
data16
hlt
xlat
test
jmp
loop
pop
shlb
cmpb
in
popf
xchg
pop
stos
add
pop
lahf
and
xchg
dec
cmp
repz
clc
mov
fbstp
inc
ret
mov
push
out
sarb
int
rolb
cmp
pop
jl
cld
dec
add
xor
and
sub
mov
adc
cli
iret
roll
inc
in
addr16
sbb
icebp
mov
jmp
out
es
addr16
dec
imul
and
cmp
and
lock
inc
dec
ret
dec
mov
add
jno
push
test
dec
test
int
pop
les
mov
mov
jle
rcrl
jmp
mov
or
bound
adc
sub
jns
popf
pop
mov
or
ret
xchg
or
icebp
fdivrs
xorl
inc
mov
movsb
in
out
cs
jno
dec
lret
cs
lea
pushf
mov
roll
and
push
push
or
sbb
std
lods
lods
movaps
mov
popa
mov
in
or
fbld
push
mov
mov
ret
dec
test
and
add
adc
ljmp
into
lret
mov
jl
ss
rclb
lods
jnp
sub
repz
sahf
xchg
test
mov
aas
xor
movsb
in
enter
popa
mov
nop
jp
inc
pop
jp
adc
icebp
sbb
lret
enter
dec
mov
or
mov
mov
std
fidivl
sarb
mov
faddl
mov
std
call
aaa
push
and
movsl
add
xchg
repnz
or
hlt
xor
cmpsb
mov
dec
push
dec
sub
cli
xchg
or
notb
bnd
out
fldenv
adc
xchg
ret
push
jecxz
cmp
nop
add
xor
add
fisttpl
mov
pop
mov
movsl
sbb
sbb
cltd
ret
imul
inc
mov
aas
insb
push
push
xchg
and
sub
mov
jnp
aam
sbb
leave
adc
inc
hlt
cmp
mov
jne
hlt
in
inc
mov
ja
push
cld
jae
sarb
mov
add
mov
sbb
or
xor
loope
mov
mov
fs
clc
push
push
test
push
movsl
loope
inc
xlat
int3
and
xchg
stos
xchg
mov
sbb
stos
jle
pop
push
cmp
das
popa
jmp
mov
stos
mov
aad
cmp
inc
scas
bswap
cmpsb
sbb
arpl
imul
fwait
sub
or
fs
stc
cmpsb
lea
stos
mov
dec
mov
pop
sbb
jecxz
shr
lret
jns
daa
mov
loop
pop
jo
orb
push
inc
mov
or
dec
cs
stos
popf
insb
sub
dec
mov
in
mov
jl
lret
scas
nop
roll
or
hlt
inc
or
aad
icebp
adc
lcall
loop
ret
ss
je
sbb
ret
scas
pop
pop
inc
pushf
lods
or
int3
fmull
mov
in
mov
cld
lds
mov
jl
mov
repz
xchg
in
rcrl
mov
push
sub
dec
dec
jecxz
xor
xchg
cmpb
inc
loop
or
stos
fprem1
shr
idiv
insl
mov
aam
jbe
push
aam
insb
ret
push
push
imul
sbb
lods
mov
test
mov
sbb
jae
or
enter
push
push
adc
je
jg
iret
xor
xchg
push
fldt
cmc
mov
and
jne
mov
inc
jns
mull
ficoml
cltd
xchg
xchg
or
call
sbb
pop
lcall
cwtl
pop
xchg
push
push
sbb
imul
leave
push
not
xchg
gs
pushf
push
inc
lret
mov
and
test
ret
mov
xlat
in
sbb
cltd
sub
es
xor
jecxz
outsb
mov
and
push
sbb
or
push
sub
scas
adc
jo
out
in
sbb
jg
add
push
dec
loop
and
in
sub
push
pop
and
loop
pop
inc
xor
les
in
scas
mov
sub
es
repnz
ret
pop
aaa
aaa
andb
mov
cmp
nop
and
pushf
jecxz
sbb
mov
popf
push
arpl
pop
pop
pop
add
lods
cmp
mov
pop
shl
mov
xchg
fs
mov
jns
and
push
pmaddwd
pop
pop
das
cltd
decl
scas
and
inc
xor
xchg
or
and
out
sbb
and
sahf
mov
stc
adc
or
xchg
in
xchg
bound
adc
repz
leave
dec
add
dec
lcall
and
mov
and
pop
sbb
mov
pushf
sbb
push
mov
imul
mov
scas
cwtl
sbb
stos
sahf
sub
or
inc
dec
jecxz
and
jge
stos
sub
xchg
sub
lret
mov
cmp
xchg
mov
insb
fists
in
neg
out
loop
xchg
fnstsw
icebp
mov
jmp
and
or
pop
ret
mov
outsl
inc
pusha
popa
in
rol
mov
adc
xor
add
lods
out
out
std
xchg
repz
pop
and
adc
lcall
rorb
push
cld
sti
hlt
mov
jo
sarl
sbb
fnstenv
imul
popl
dec
xchg
jo
cmp
out
sbb
sbb
ljmp
jge
jb
mov
mov
pop
dec
jg
sub
fstl
aas
movsb
sbb
sbb
loopne
adc
dec
jl,pn
sti
inc
add
xchg
aas
and
and
lock
das
adc
ljmp
ret
enter
data16
sarb
int
lret
jp
add
iret
or
pop
shll
arpl
or
xchg
dec
sbb
divl
leave
outsl
arpl
arpl
fwait
xchg
or
loopne
movsl
cwtl
aaa
pop
pushf
adc
add
fadd
in
imul
mov
pop
or
popl
rcr
bswap
pop
dec
mov
insb
mov
orl
dec
sub
dec
mov
inc
repnz
dec
mov
pushl
xor
out
mov
lods
out
mov
sbb
and
jmp
mov
cwtl
std
mov
xchg
cmpb
movsl
decl
lahf
push
flds
mov
sub
stos
je
dec
leave
es
cli
int
push
xchg
xchg
lret
pop
loope
and
daa
in
xchg
dec
lret
add
dec
push
aad
stos
int3
cld
jnp
push
sbb
push
mov
rclb
pop
fidivrs
push
mov
jnp
aaa
int3
sub
aas
xchg
pop
stos
mov
cmpsl
cltd
movsbl
nop
inc
or
xlat
test
fcmovu
xor
sti
lahf
std
push
mov
outsb
lcall
loopne
ficoml
push
mov
and
mov
xchg
dec
rcll
add
int
lods
jb
mov
sub
cli
gs
and
mov
icebp
in
pop
xchg
cmp
dec
cli
in
or
push
aam
sub
lret
inc
outsb
arpl
in
loop
shl
shlb
fcmove
add
enter
and
es
out
or
stos
in
xchg
cmp
mov
xchg
ja
stc
pop
adc
cmp
inc
xchg
fistpl
adc
add
jg
or
das
ret
mov
rorl
or
sbbb
fcomi
sbb
leave
sub
xor
and
sub
push
pop
pushf
xlat
mov
jne
mov
or
sbb
stc
jmp
xlat
fcoml
stos
jp
xor
pop
test
int
mov
sbb
aam
push
cld
mov
stc
inc
and
mov
jg
rorb
sub
aaa
mov
rcrl
ds
mov
cmpb
pop
aad
add
cmp
mov
mov
pop
dec
lds
stos
jo
cmp
les
dec
or
push
lret
cmp
sar
sbb
sub
mov
imul
mov
push
mov
lahf
mov
adc
push
sarb
dec
cmp
jge
jbe
ss
dec
jmp
jb
enter
nop
scas
push
mov
sub
or
push
pop
mov
mov
xchg
sub
call
js
clc
popf
cltd
mov
fsubs
push
or
mov
xchg
add
mov
mov
imul
sub
cmp
cmp
and
pop
call
jl
or
std
push
cmp
ret
lods
xor
insb
clc
push
cmpsl
and
inc
das
xchg
outsl
and
outsb
or
rorl
mov
out
movsl
pop
cmc
ffree
xchg
xchg
cmove
jns
pop
pop
mov
mov
pusha
cmp
xchg
mov
out
xchg
mov
cmp
es
dec
test
add
pop
adc
ds
cli
xchg
jle
inc
adc
addr16
jnp
test
mov
xchg
fldenv
bound
dec
movsl
sub
push
inc
es
fisttps
fcmovnb
xchg
aad
inc
adc
rolb
daa
xor
push
xchg
test
jg
ds
mov
out
in
xchg
test
jno
call
sub
cltd
sub
ds
inc
inc
pop
ror
xor
push
rcr
adc
addb
int
in
sub
lods
aas
mov
push
das
mov
mov
out
lret
push
lcall
sbb
sbb
dec
inc
pop
arpl
pop
hlt
inc
xor
mov
ret
test
xchg
pop
ret
andb
mov
mov
xor
clc
gs
adc
add
scas
xchg
push
dec
mov
aad
cmpsl
nop
push
daa
mov
lret
mov
xchg
fists
mov
cmpsb
lea
leave
call
ss
mov
dec
pop
mov
or
insl
adc
rep
push
in
or
ss
dec
mov
cs
repnz
fmuls
into
xchg
jmp
pop
xor
xchg
int3
imul
mov
and
ret
sbb
fs
pusha
ds
pushw
jmp
loop
mov
test
subl
sbb
sub
subb
mov
loopne
dec
dec
icebp
jno
nop
lret
and
mov
jp
mov
std
and
add
fstps
xchg
add
xlat
and
and
pop
aas
test
and
aam
int3
push
out
enter
ds
sbb
or
sbb
push
dec
and
pop
and
sti
mov
and
xchg
leave
and
arpl
xchg
dec
into
push
dec
loop
or
push
lods
xchg
fs
and
mov
jnp
call
or
jmp
shrl
hlt
sbb
sbb
pop
jl
xor
repz
out
and
out
ret
dec
adc
ds
xchg
mov
cltd
push
popl
fs
jp
ret
sub
adc
in
pop
inc
push
cmp
arpl
push
clc
jg
leave
fwait
paddsb
pop
xor
and
add
lret
pop
mov
xchg
fwait
xchg
jo
adc
mov
fs
adc
aad
lret
jae
add
mov
aas
add
cmp
add
lods
xlat
popf
ret
ficompl
fidivl
pop
arpl
adc
out
out
in
or
and
cmp
in
outsl
ret
lret
faddl
jns
nopl
cmpsb
mov
hlt
shll
cmpsb
popf
push
add
push
sti
push
ror
nop
mov
jne
in
lcall
jns
cmc
mov
inc
inc
mov
jl
aam
mov
stos
or
loop
shl
sub
stc
or
incl
in
outsb
nop
ljmp
add
divl
fimuls
mov
jns
mov
test
adc
sbb
cltd
add
adc
adc
stos
add
rolb
xchg
popa
int3
addl
push
cmpsb
adc
data16
and
fists
popf
arpl
enter
jae
pop
sbb
clc
xchg
cmp
mov
cltd
pop
test
mov
sub
push
mov
mov
out
stc
xchg
dec
inc
in
push
xchg
xchg
fadds
dec
out
adc
cmpl
sarb
dec
test
loop
sbb
test
cmc
ds
cmc
adcl
mov
cmp
add
ret
stos
dec
inc
cmp
xchg
inc
inc
push
jno
sbb
ret
repz
rorb
xchg
sar
aas
das
mov
add
out
dec
xchg
dec
lds
rol
sub
std
push
jns
shll
dec
inc
xor
mov
fisubrl
inc
mov
jg
imul
shrb
fisubs
aam
pushf
rorb
or
mov
testl
push
movsb
ja
test
xchg
push
or
jmp
xchg
popa
dec
mov
pop
hlt
sub
js
xchg
les
fldt
rorb
outsb
ss
addb
push
inc
xor
icebp
push
xor
or
ret
and
cmpsb
hlt
mov
loope
out
xchg
xlat
stos
ror
xchg
lret
push
or
mov
loop
sub
jns
aas
nop
push
pop
imul
inc
call
jo
stos
adc
popa
xor
outsb
loope
cmp
push
nop
jno
rcr
adc
mov
cs
pop
es
stos
int
movsb
call
adc
push
inc
xor
inc
sub
pop
jecxz
les
arpl
mov
shlb
lahf
mov
mov
sbb
out
scas
push
ret
mov
mov
icebp
das
mov
inc
fdivs
mov
jbe
out
ret
cmp
int
adcb
loopne
aaa
mov
xchg
popf
out
inc
dec
mov
mov
xchg
or
sub
mov
push
push
fs
movsl
arpl
mov
mov
sbb
push
sub
jo
popl
push
push
xchg
lock
sahf
add
rcrl
jg
pop
cltd
xchg
fcmovbe
xchg
test
jbe
loop
mov
pop
xor
mov
xlat
sub
inc
dec
pushf
cli
lds
and
jecxz
jo
fwait
add
lret
lods
addr16
adc
test
iret
mov
test
clc
addb
cmc
adc
push
sahf
and
les
leave
int3
add
insl
stos
and
pusha
iret
sar
pop
pop
lahf
fnstenv
cwtl
rcll
mov
sbb
lahf
sub
sar
pop
bound
hlt
xchg
lods
inc
fidivrl
jnp
clc
loopne
cmc
std
xchg
push
lock
add
jle
xor
add
cld
jecxz
int
ficomps
mov
lcall
xchg
lea
je
add
dec
rorl
cmp
ret
xchg
mov
mov
xchg
stc
movsb
or
push
jae
insl
ja
mov
loop
shll
inc
sti
and
fnstcw
rcr
push
outsb
fdiv
leave
jae
je
fimuls
or
shl
mov
aaa
popa
sub
add
xchg
xchg
fldcw
dec
pop
sub
mov
fcmovu
and
enter
jl
pushl
inc
adc
cmpsl
dec
in
aad
jne
fmul
jmp
push
cmc
shlb
test
shlb
das
icebp
add
jnp
icebp
jbe
das
mov
ja
push
xchg
jno
push
in
in
mov
pop
andl
test
adc
fdivrl
cmp
xchg
movsl
loope
pop
jns
mov
cwtl
dec
push
dec
aaa
and
sbb
test
mov
int3
cs
jle
ret
mov
fildl
jns
mov
test
int
and
xchg
adc
push
mov
mov
nop
das
repz
push
sbb
dec
cmp
jne
test
cmpsl
int
cmp
sbb
lahf
pop
lcall
cmpsl
enter
das
push
icebp
xor
push
xchg
pop
push
popa
xchg
xchg
xchg
fldcw
in
xchg
and
or
dec
call
mov
jmp
inc
jns
inc
lods
mov
push
adc
sbb
pushf
lcall
jge
sbb
dec
pop
sub
imul
jns
sbb
pop
pop
sub
insb
jne
pop
sbb
fistpll
mov
jl
xchg
jmp
push
negb
insl
cmpsb
psubw
cmp
out
fwait
xor
cs
data16
lret
bound
out
icebp
jmp
stc
xlat
jne
push
pusha
cmp
or
push
cli
data16
add
adc
lods
stos
mov
fiaddl
cmp
insl
hlt
movsl
xor
test
pop
mov
stos
xor
repnz
pmuludq
and
xchg
outsl
test
mov
jno
ret
fists
leave
imul
jne
hlt
pop
mov
stos
ss
sub
shlb
add
cwtl
fidivl
in
sub
mov
je
jae
jbe
jge
pop
lahf
cmpl
and
sub
xor
dec
daa
call
mov
cwtl
mov
mov
cmp
lahf
mov
cmp
mov
sub
test
xchg
adc
aaa
xchg
movsb
ffree
pop
pop
scas
mov
scas
loopne
dec
and
repnz
dec
mov
int3
pusha
dec
sbb
dec
sahf
scas
mov
into
push
sub
imul
push
add
mov
pop
stos
aaa
jnp
pop
std
mov
mov
pushf
movsb
mov
fidivl
mov
stos
mov
sbb
lahf
xor
mov
std
pop
push
inc
pop
lret
mov
repz
enter
frstor
sub
pushf
cmp
fwait
push
das
aad
mov
dec
popa
pop
jge
sub
cmp
xchg
cmp
pop
push
jp
test
ja
push
lock
loopne
bound
jmp
sbb
push
ret
mov
loope
fld
cmp
push
inc
out
pop
ljmp
ficomps
iret
ds
or
mov
or
mov
sbb
ret
sbb
push
addr16
adc
dec
shrb
mov
sarl
pop
jge
out
rcl
jmp
stos
adc
add
fs
dec
pusha
lcall
dec
mov
sbb
std
ss
punpcklbw
xor
push
jne
inc
jge
aam
push
inc
popf
xlat
mov
outsl
pop
dec
mov
add
cmp
cwtl
rclb
mov
xchg
xchg
mov
pushf
xchg
dec
adc
shrl
jo
scas
movsb
push
adc
jo
mov
fdivr
and
xchg
ret
xor
iret
sbb
into
rcl
cld
mov
xor
or
pop
aam
scas
mov
xor
cs
dec
fsubrl
outsb
xchg
inc
stc
negb
test
call
lea
lret
cld
push
or
mull
sahf
xor
mov
pushf
outsb
lcall
aaa
mov
jg
lret
cltd
adc
push
sbb
dec
cmp
lock
or
out
xchg
nop
fwait
mov
inc
pop
jl
pushf
ficompl
sub
fs
mov
or
mov
repnz
and
mov
cwtl
push
pop
sub
inc
insb
jl
dec
js
imul
sub
iret
xchg
stos
out
in
push
xor
sub
arpl
cmp
jo
imul
pop
mov
mov
in
andb
dec
mov
imul
enter
mov
inc
xor
shll
xchg
int
lods
inc
sub
xlat
fcom
mov
stos
mov
xchg
and
jns
xor
mov
lods
pop
sub
mov
scas
dec
pop
repnz
lds
scas
movsb
add
es
cltd
xchg
mov
out
or
mov
ja
mov
mov
add
in
sbb
cs
imul
xchg
pop
push
addb
pop
fcmovbe
pop
pop
lea
xor
add
mov
lcall
mov
test
pop
aad
ds
add
cmpsb
mov
pop
add
lret
pusha
adcl
push
aaa
imul
xchg
fsubrs
add
add
test
int
jbe
jp
insb
cmpsb
pop
insb
test
movsb
pop
out
push
dec
dec
xor
jmp
js
adc
or
ja
les
sbb
mov
imul
loopne
inc
cmpsb
jp
call
push
jge
imul
or
cltd
mov
and
nop
xchg
insl
jo
xchg
fs
daa
and
push
mov
ss
call
sbb
mov
or
jns
inc
cltd
sub
pop
inc
movsl
inc
pop
push
dec
inc
ficompl
scas
push
std
push
or
pop
dec
sbb
loop
nop
adc
ficomps
daa
test
fiaddl
mov
inc
sbb
pop
jp
jmp
push
fisubrs
pop
sbb
mov
in
xor
mov
push
mov
xor
mov
mov
nop
call
adc
mov
mov
inc
out
pop
outsb
jecxz
cmpsb
mov
mov
fs
mov
sbb
ja
rorb
mov
xor
sub
in
outsw
mov
or
or
mov
cwtl
in
mov
clc
mov
aad
and
jle
inc
std
jb
call
dec
pop
push
sarl
jns
fisubs
pop
xor
add
add
pop
pop
in
pop
or
pusha
add
je
push
movsl
dec
mov
sub
pmuludq
jg
pushf
rol
in
lods
inc
lds
mov
mull
lds
push
outsl
stc
pop
xchg
stos
jo
add
inc
and
decl
fcoml
sbb
test
push
enter
cmp
lahf
iret
or
decl
jl
cmp
add
push
dec
fadds
cltd
adc
pop
jmp
fists
clc
mov
outsl
std
pop
jle
pop
jae
std
mov
cld
cli
jbe
cmc
das
inc
daa
cmp
and
inc
ljmp
aas
stos
lods
insl
sub
stos
lahf
mov
jle
dec
lahf
insl
push
or
mov
inc
dec
repnz
sbb
lods
sub
in
out
popf
cmpsb
fisubrl
ret
ret
gs
es
in
dec
mov
push
outsb
mov
dec
lea
loope
add
test
push
rol
mov
inc
adc
jns
cmp
mov
cmp
adc
lret
add
add
jns
test
rcll
fisttpll
mov
and
mov
sahf
inc
je
aad
fwait
pop
in
dec
stos
and
rolb
movsb
out
fcoms
fs
add
mov
xchg
fidivs
xchg
rorl
ljmp
adc
lcall
and
roll
xor
in
inc
mov
or
xor
into
cmpl
dec
mov
test
inc
pop
xchg
adc
push
adc
notl
add
test
call
ret
xorb
aam
lcall
xchg
or
test
inc
out
jne
dec
adc
lods
test
js
test
das
nop
aam
arpl
ja
lea
cmpb
jne
mov
in
cmc
subl
dec
test
adc
lods
mov
and
lret
cltd
dec
ja
arpl
jmp
jb
sbb
icebp
mov
push
adc
outsl
shr
daa
std
jnp
in
insb
mov
fcmovnb
adc
mov
cmpb
sbb
pusha
jae
aam
and
aaa
add
or
pop
iret
xchg
or
mov
push
cmp
int3
jno
fcoml
mov
int
dec
dec
ss
sub
scas
outsb
mov
daa
loopne
daa
dec
pusha
stos
insb
repz
inc
sub
xchg
aam
fisttpl
ds
dec
loope
sub
es
into
add
pusha
jae
lock
ja
test
mov
lock
stos
mov
into
adc
inc
ret
pop
adc
or
add
mov
mov
popa
cmp
aas
mov
sbb
bound
lods
push
pop
jns
lds
sbb
add
or
mov
xchg
stos
xor
mov
dec
dec
data16
fdivp
out
jo
cmp
imul
aam
adcb
xchg
and
popl
inc
lcall
sub
movsb
adc
sub
mov
stc
mov
xlat
sbb
and
adcl
add
adc
pop
fwait
cwtl
lods
jbe
sub
test
push
fs
lret
or
mov
sub
mov
ljmp
pop
ret
lea
cmpb
mov
push
ss
lret
pop
shl
sti
inc
fs
or
dec
and
pop
mov
jnp
loopne
stos
in
ret
pop
mov
add
shll
cli
sarl
push
std
mov
add
cmp
jno
mov
jl
cmp
popa
icebp
mov
or
xor
mov
jg
insl
inc
addr16
popa
ret
adc
push
imul
hlt
repz
or
pop
cli
push
popf
adc
add
inc
test
hlt
ljmp
mov
subb
cmpsb
das
inc
rcll
lret
xchg
sub
sbb
inc
aaa
push
xor
inc
dec
lea
dec
pop
push
xlat
stc
fnstenv
out
mov
insl
mov
das
jg
sub
rcll
popf
cmp
and
jo
cmp
push
adc
test
mov
int3
icebp
push
fwait
popf
mov
jnp
pushl
xor
cltd
cmpsb
add
inc
aam
mov
and
scas
xlat
inc
mov
fsubrl
outsb
sbb
mov
aaa
inc
imul
inc
push
inc
push
mov
out
bnd
fldt
and
ss
mov
mov
push
fwait
xor
ja
inc
fcmovnb
scas
shll
mov
pop
jne
out
sub
dec
loop
loope
aaa
js
xor
jae
sbb
andl
gs
pop
push
cmp
mov
xchg
push
test
lods
cmp
shl
and
std
mov
adc
push
sahf
push
das
scas
or
mov
es
insb
cmp
or
sbbl
add
arpl
and
stc
fisttpll
sub
iret
mov
and
xchg
dec
insl
and
dec
push
mov
icebp
into
push
mov
mov
xlat
rcr
gs
add
pop
jae
leave
stos
jl
pop
push
lret
decb
sub
mov
aaa
and
cmp
mov
aas
mov
adc
hlt
and
call
hlt
inc
insl
jle
gs
outsl
sub
shlb
popa
inc
mov
push
cmc
data16
arpl
sahf
push
xor
cmp
iret
xchg
mov
out
out
cwtl
daa
mov
inc
rorb
iret
add
pushf
ja
enter
jnp
rorb
mov
lcall
imul
ret
jmp
int
and
cmp
in
add
cmp
push
scas
cld
mov
cs
ljmp
dec
jmp
and
sub
data16
movsl
inc
fimull
mov
movsl
inc
xor
fmuls
mov
dec
adc
mov
xor
mov
jo
lret
aaa
fdivl
xchg
adc
mov
push
movsb
dec
shll
pop
cli
lock
into
mov
mov
imul
cli
fsub
mov
insb
fistl
rsqrtps
jge
cmpsb
mov
mov
ljmp
loop
fst
out
adc
imull
in
lds
add
jl
mov
fildll
sub
sub
nop
pop
xchg
inc
push
daa
fstpt
popa
push
test
cmpsb
add
ljmp
int3
hlt
pop
or
ds
sbb
push
test
rcrl
sub
push
clc
rcrb
push
insl
jmp
inc
dec
cli
pop
rcrb
or
popf
lds
dec
int3
aam
push
cmc
ljmp
jmp
leave
sub
es
lahf
push
data16
push
mov
push
dec
jne
add
push
push
xchg
jmp
xchg
sub
add
inc
data16
cmp
outsb
enter
dec
or
mov
loopne
into
lret
movsl
xchg
loop
pop
inc
inc
lods
xchg
adc
xor
fistpll
xor
rorb
push
loope
fisubrl
pop
dec
mov
pop
cmpsl
cmp
out
or
xlat
inc
out
add
les
lret
int3
xchg
lea
sub
loope
enter
inc
sub
fistps
ds
andb
inc
jmp
xor
push
nop
xchg
mov
inc
xor
enter
xor
lds
dec
ret
lahf
sbb
cs
ds
outsb
decl
dec
shlb
push
or
lods
xchg
adc
cmp
mov
cld
mov
add
and
push
cld
lcall
pop
sbb
jp
out
jl
test
imulb
ffree
xor
dec
enter
xor
inc
cmp
sub
and
mov
addb
mov
jbe
jge
and
cld
push
ds
test
xchg
ljmp
fsubs
push
test
sub
or
pop
jne
dec
xchg
aas
shll
gs
pop
sub
movsb
push
sbb
inc
xchg
cs
jle
xchg
jb
inc
iret
push
mov
or
std
xor
inc
xchg
jb
dec
mov
cmpsb
push
add
push
daa
adc
mov
jge
lods
pop
pop
fwait
cmp
xchg
cltd
mov
inc
lods
inc
cmp
out
sub
sub
ljmp
inc
mov
pushf
sub
jae
out
out
nop
repnz
in
mov
cli
mov
and
xor
mov
cli
jecxz
movsb
icebp
sub
ljmp
jnp
es
xor
and
jo
and
xor
xchg
cmp
and
pusha
ret
jno
jp
cmp
adc
xchg
xor
pop
movsl
xchg
pushf
jle
jb,pt
cmp
push
dec
and
repz
sbb
or
sbb
mov
je
push
call
clc
mov
int3
cmp
inc
lret
xchg
jnp
daa
das
imul
jnp
add
int
sbb
outsl
bound
aaa
mov
out
inc
dec
hlt
inc
mov
xchg
ret
mov
mov
les
jp
insb
jge
movsl
mov
inc
jae
das
xchg
scas
pop
fdivrs
ss
ds
outsl
mov
xor
bound
push
lret
lods
jmp
xor
push
mov
jl
cmp
sub
fwait
out
jnp
inc
lds
dec
rcrl
mov
add
xor
lret
test
push
lods
test
out
fs
ret
mov
and
cmpsb
jmp
pop
jg
aad
adcl
push
mov
jo
push
fisttpll
rorl
xor
adc
cmp
das
lret
jb
pop
fsts
mov
pop
test
or
mov
movsb
outsb
mov
xchg
mov
outsl
cli
sub
stos
sbb
jns
mov
or
mov
mov
test
cmp
pop
repnz
stos
mov
iret
out
mov
push
out
push
sub
adc
sbb
fnstsw
jmp
sbb
push
inc
xor
pop
pushf
mov
mov
jle
pop
ffreep
and
loop
fildl
mov
shll
and
dec
out
lods
out
jb
repz
mov
movsl
sarb
loope
imul
inc
nop
aam
inc
repz
cltd
fldl
xor
pop
rorl
push
imul
push
loop
aaa
inc
in
pusha
aas
jne
pop
lcall
push
xor
pop
add
add
pushf
dec
loopne
xlat
aaa
pop
xorl
test
ja
cmpsl
push
bound
jnp
mov
and
jne
clc
mov
faddl
pop
xchg
mov
lret
cmp
mov
es
iret
daa
stc
cmp
loopne
mov
test
xchg
mov
xchg
mov
xchg
iret
lret
pop
in
inc
inc
mov
inc
bound
jge
iret
aad
mov
js
mov
adc
sub
pusha
push
in
test
mov
popa
jl
mov
in
mov
cmp
lcall
pushl
out
and
add
sbb
mov
mov
jmp
mov
xor
std
mov
mov
jno
mov
cmp
fwait
adc
jne
fimull
popf
cmc
jne
incl
and
jo
imul
dec
mov
push
stos
sbb
lahf
aas
bound
ljmp
pop
ljmp
dec
pop
cwtl
jnp
in
psadbw
mov
xor
mov
ds
imul
push
sbb
sbb
in
cmp
in
mov
call
xchg
inc
push
lea
test
mov
add
bound
mov
jge
sbb
jecxz
mov
pop
xchg
jae
pop
outsl
adc
mov
inc
sbb
mov
jno
lahf
loope
and
mov
popf
hlt
dec
mov
test
xor
push
movsl
jne
dec
fs
sbb
push
rclb
add
add
repz
push
out
and
inc
gs
imul
cmp
cli
sub
inc
add
mov
fdivrl
int
aad
das
lds
scas
aas
mov
inc
or
test
and
and
roll
icebp
pop
add
flds
push
mov
xor
adc
lea
sbb
mov
inc
dec
jns
jp
mov
es
outsl
sarl
lcall
fbld
fdivl
out
pop
mov
test
daa
dec
mov
roll
stos
xor
xor
add
insl
in
pop
and
lods
and
or
lahf
pop
add
add
push
dec
push
popa
mov
ljmp
sub
and
cmp
fdivrl
push
inc
cld
and
mov
dec
fisttpll
iret
jbe
mov
outsl
arpl
jb
push
push
pop
push
or
test
adc
es
sbb
and
adc
rol
dec
lea
jecxz
add
mov
scas
aas
iret
fwait
cmp
lcall
flds
mov
cmp
jge
fwait
cmp
int3
cmp
add
clc
xor
in
outsb
sbb
test
xchg
adc
push
xchg
mov
mov
push
mov
fwait
adc
mov
lret
cld
scas
dec
in
ret
cmp
mov
orl
mov
jmp
mulb
outsb
stc
in
test
lods
jmp
and
je
push
xor
sub
cs
lods
jns
cmc
pop
pop
inc
and
or
cmpsb
pop
mov
jno
xchg
xchg
jecxz
fmuls
mov
loop
movsb
push
adc
shll
xlat
rcrl
mov
in
inc
xchg
or
sahf
xor
iret
insl
in
aas
xor
test
jns
aaa
shll
cltd
lahf
adc
add
popf
and
rol
mov
les
mov
sub
jecxz
dec
jl
push
fisubs
ret
cmpb
shll
sbb
adc
test
loop
mov
lret
mov
fsubrs
into
jo
dec
loopne
ja
xor
testl
shl
fldl
aam
insl
xor
jae
daa
ss
cmp
add
pop
cmp
jbe
dec
mov
ret
aad
jne
mov
sub
cmp
push
test
addr16
jge
cmp
jle
rcrb
fmull
xor
xchg
imul
dec
xchg
mov
cmpsl
arpl
add
pop
fmull
scas
mov
cli
stos
sbb
and
fisubs
fcmovnb
fildll
sub
pusha
daa
loopne
sub
jbe
insl
arpl
out
in
mov
shll
in
ljmp
sub
xor
mov
mov
cmp
sub
test
mov
sbb
xor
push
rcr
mov
sub
push
mov
popf
push
fucomip
iret
mov
or
popf
inc
jle
xor
push
add
jecxz
mov
and
aam
scas
inc
add
jbe
dec
mov
sub
pop
jne
jne
sbb
es
mov
jbe
add
cmpsl
inc
or
int
dec
stos
stos
adc
push
xor
jp
jl
push
hlt
inc
out
lcall
inc
repnz
clc
jle
xor
outsb
lods
int
lret
push
clc
xchg
imul
stos
ds
sti
or
jb
and
mov
adc
pop
pop
dec
sub
testb
mov
xor
call
test
xor
and
aad
xor
adc
pop
orb
mov
lock
iret
icebp
mov
iret
inc
or
push
orl
or
sbb
aam
cmp
ficompl
ja
mov
iret
push
ret
lods
clc
outsl
int
fsubp
cmpsb
and
mov
fldenv
repz
pusha
xor
push
jg
movsl
inc
dec
sbbb
cmp
lods
push
cmp
jno
sub
stos
out
fdivr
ss
ss
inc
mov
sub
cld
mov
cld
add
loop
jl,pt
outsl
cmp
inc
out
and
loopne
fmul
or
or
dec
into
add
test
push
xor
cmp
rcrb
cmpl
scas
imul
or
push
mov
and
lea
push
sub
push
leave
or
sbb
test
incl
push
xchg
pop
lret
cltd
fwait
sahf
fisttpll
lea
out
cmp
pop
icebp
mov
pop
popa
stc
jns
add
inc
dec
mov
ret
out
fcoms
shll
add
repnz
adc
call
push
cmp
jnp
icebp
xchg
faddl
mov
push
test
jmp
fcomps
adc
cmc
roll
jno
fwait
cwtl
sub
mov
das
cs
test
loopne
imul
cld
xor
stc
add
dec
call
fnstcw
sub
adc
jl
adc
movsb
mov
ds
inc
ja
mov
sub
repnz
in
inc
ret
dec
xchg
xor
xchg
mov
sarb
mov
xor
or
popf
dec
mov
rolb
mov
xchg
dec
pop
lcall
loop
xchg
xchg
out
sub
loope
out
ds
decb
cmpsl
in
pushf
popf
bound
mov
std
cmc
cmpsb
xor
aas
mov
and
loop
mov
jl
imul
out
cmp
pop
and
xor
xor
dec
adc
ja
fiadds
mulb
lods
xchg
mov
sbb
fdivrl
scas
stc
mov
cmp
pop
cltd
cwtl
lods
cmp
les
xor
add
enter
mov
das
sbb
add
adc
cmp
scas
lds
movsl
mov
and
enter
cli
cmp
mov
hlt
test
testl
cld
jg
dec
in
das
fidivrl
out
mov
add
cwtl
jne
and
and
stos
rsqrtps
iret
into
push
cwtl
jl
cmovne
xor
dec
or
pop
sbb
int3
xadd
push
pop
xchg
inc
push
popf
mov
inc
pop
jnp
xchg
push
jno
outsb
test
mov
mov
and
test
xor
push
stc
lret
in
push
ss
negl
into
pop
inc
cmpsl
mov
int
loopne
mov
enter
test
cltd
jnp
in
nop
pushf
pushf
pushl
aaa
into
in
cmp
scas
out
push
push
loope
movsb
jecxz
popa
cmp
add
cmp
fisttpl
mov
lods
rcrl
xchg
mov
push
lea
pop
xchg
pusha
and
adc
jp
mov
inc
pop
inc
outsl
lock
xchg
stc
dec
rorb
dec
mov
outsb
xchg
mov
addl
pop
inc
mov
lods
in
push
cmp
ret
jnp
cmc
sub
pop
inc
or
dec
jbe
sbb
icebp
fadd
loope
xchg
inc
xchg
fadds
mov
lahf
adc
sahf
testb
push
pop
ljmp
xor
adc
sbb
mov
mov
push
dec
cmp
cmp
pushf
mov
xchg
mov
or
push
adc
push
sbb
or
gs
out
scas
and
inc
xchg
in
xor
cmpsb
dec
iret
daa
pop
in
lcall
pop
repnz
cmp
sub
sti
out
inc
mov
cmp
dec
data16
add
pop
sahf
aad
out
dec
pop
or
and
cwtl
push
push
mov
cmp
or
pop
fs
jae
mov
dec
adc
cmpsb
je
rolb
lock
cli
mov
and
test
pop
push
add
aaa
sub
mov
nop
dec
and
mov
push
dec
js
scas
sub
ds
or
xor
add
add
mov
test
mov
and
xchg
jne
shlb
mov
test
mov
inc
xchg
xchg
jle
add
sub
pop
or
cmp
in
xor
popf
int3
cmc
jnp
js
sahf
ja
data16
into
aas
subl
xchg
aas
lea
sbb
cmp
iret
xchg
adc
test
icebp
pavgb
popf
cs
aad
sub
push
mov
sahf
jl
pop
or
push
xchg
cli
push
setb
or
ja
jg
sarb
xor
add
rcll
pop
dec
aaa
fdiv
sub
xor
pop
push
lahf
shl
mov
repz
enter
inc
push
xor
adc
jp
dec
or
jne
mov
rclb
and
xchg
popa
sti
mov
mov
fs
push
fwait
addr16
cld
xchg
mov
sahf
lods
adc
pop
cmp
xor
add
lods
adc
rep
int3
push
mov
dec
imul
gs
popw
push
pop
dec
mov
mov
shlb
lret
inc
aam
xor
jp
sub
outsb
add
lods
stc
aaa
pop
in
push
popl
stos
adcb
lcall
pop
adcb
push
or
lret
adc
stc
mov
jle
lcall
adc
fcmovnb
rorb
pusha
bswap
popa
bound
fnstsw
stos
rcrb
fidivrl
add
clc
ret
push
mov
jl
lret
mov
jno
lret
nop
das
sbb
adc
dec
push
loopne
push
ss
push
cli
dec
fimuls
sbb
cmp
psubsb
dec
in
data16
inc
pop
ret
fmuls
movsl
iret
inc
arpl
pop
cli
or
push
fmull
loope
popf
sti
inc
xor
jecxz
ror
repz
lret
loope
lds
adc
or
js
mov
push
mov
xor
adc
lea
lea
cld
and
sbb
adc
ss
outsl
jae
daa
cmp
lret
int3
mov
sbb
iret
mov
sub
ja
pop
sub
sbb
jno
movsl
push
mov
repnz
mov
inc
call
ja
push
lock
mov
jl
xor
jp
repz
aas
sbb
cmp
hlt
cmp
mov
sbb
cmp
pop
jl
add
sar
rclb
mov
lret
pop
loop
mov
cmpsb
jno
xchg
adc
test
setp
mov
add
inc
leave
and
repz
fbld
das
int3
repnz
ret
daa
dec
sbb
cmp
or
inc
mov
and
scas
cmp
push
ja
das
mov
jno
or
push
pop
mov
sarb
mov
dec
push
nop
testl
push
xor
aam
inc
sarl
adc
insl
sbbb
mov
push
test
mov
and
adc
xchg
sub
lock
cmp
fstp
push
mov
xor
pop
jecxz
and
xor
mov
negl
sbb
movsl
arpl
jg
imul
sbb
pop
mov
push
mov
into
mov
mov
mov
nop
xor
push
mov
loopne
aad
das
or
in
adc
fs
inc
in
imul
faddl
aaa
pop
add
fcmove
mull
fnstenv
cmp
xchg
and
fcomip
lock
mov
lea
add
cli
insl
fcomp
scas
sbb
loop
sub
jg
icebp
std
outsb
jecxz
pop
pushf
popf
dec
sub
xchg
fcmovnu
mov
push
out
imul
faddl
es
or
cmp
jmp
mov
mov
repz
sbb
xchg
rclb
arpl
or
sub
cmp
outsl
push
xor
adc
test
mov
xor
xabort
jge
push
in
xor
or
dec
mov
adc
sbb
rcll
sub
xlat
lret
lods
scas
xor
outsl
jp
dec
push
dec
add
xorb
aaa
or
es
sbb
shll
sbb
adc
dec
mov
sbb
je
call
dec
xchg
es
jecxz
ds
or
out
leave
push
in
push
dec
paddw
in
sbb
mov
insb
xor
mov
xor
push
cmp
push
cmp
pop
cld
xor
jns
pusha
lret
shlb
outsb
inc
jo
lahf
mov
mov
jmp
jno
mov
jae
adc
mov
inc
int3
jge
mov
rcr
push
in
icebp
aad
and
or
sti
adc
fcomps
mov
push
sub
fildl
ja
mov
fbld
stos
or
jae
mov
mov
mov
push
hlt
psrad
testb
in
push
xchg
mov
out
xor
stos
decb
dec
das
in
aaa
aam
lods
cmp
out
sbb
mov
xchg
xor
mov
call
mov
jmp
dec
in
pop
fnstenv
cmc
js
das
stos
fsubr
jecxz
and
cmp
mov
add
subl
les
dec
test
add
sbb
loop
cmp
fcompl
and
jo
jmp
idiv
shll
mov
leave
cmp
mov
in
cmpsl
mov
xor
lret
xchg
movsb
xchg
fmuls
cli
mov
xlat
rolb
jge
cmp
cmpsl
out
call
out
xor
push
cmp
sbb
into
lods
mov
mov
ss
sbb
add
fs
or
ss
aas
jae
loope
das
mov
sbb
iret
mov
movups
dec
mov
mov
xor
sub
inc
insb
scas
lret
mov
xchg
mov
mov
cwtl
lock
push
xor
stos
pop
or
insl
jbe
in
mov
pop
testb
inc
mov
pop
mov
dec
in
adc
shll
lea
aad
mov
bound
add
repz
idivb
inc
mov
aas
fsubl
jmp
test
and
sub
cmp
dec
stos
cmp
push
inc
dec
jecxz
dec
rcrl
pop
lock
dec
inc
call
mov
jno
cmp
mov
movl
mov
in
daa
xor
les
jp
bound
pcmpgtd
fwait
iretw
mov
jle
fsubl
mull
fs
jbe
ds
sbb
dec
cmp
xchg
and
mov
xor
pop
ret
hlt
xchg
pop
xchg
cs
xchg
js
sbb
jns
into
xor
pop
lods
lds
rorl
sbb
sub
fs
xchg
test
adc
mov
ds
bound
xchg
jecxz
fxch
jns
xchg
pop
jo
lods
jge
inc
jmp
addr16
pop
js
out
je
fisttpl
cld
mov
push
push
pushf
sub
mov
adc
in
mov
cs
and
test
or
dec
mov
mov
scas
xor
mov
push
bnd
xchg
lods
xchg
add
inc
jae
enter
pop
sub
xchg
in
mov
test
aas
cmp
ja
and
jmp
or
xor
sbb
jg
icebp
inc
jo
xor
stc
jne
es
cmp
mov
pop
pop
fbld
in
lahf
mov
mov
fidivrl
mov
out
orl
xlat
outsb
lret
mov
ret
cmp
mov
shll
adc
push
dec
push
inc
insb
cmp
adcl
lahf
mov
sub
pushf
fwait
and
sahf
cmp
jo
mov
in
mov
sbbl
out
xor
mov
add
dec
and
lods
repnz
loope
xor
jl
idivl
mov
test
mov
test
pop
sbb
mov
pusha
fcmovnbe
test
cmp
mov
sbb
ja
adc
movsb
xchg
sbb
add
dec
mov
inc
mov
call
and
lret
sti
push
jecxz
push
pop
mov
les
mov
pop
imul
cmp
push
or
xor
or
jmp
in
mov
mul
call
adc
dec
dec
ficoml
fisttps
push
inc
lock
cmp
int3
mov
push
and
mov
cltd
add
inc
pop
inc
cmp
aas
jecxz
rcrl
dec
jecxz
cmp
lea
int3
sahf
mov
sbb
int
loop
dec
in
nop
xchg
lahf
iret
loope
push
lret
push
xor
out
dec
jecxz
dec
stc
cmc
mov
mov
icebp
dec
and
mov
into
movsb
sbb
xor
pusha
dec
pop
imul
rclb
out
pop
bound
sub
divl
xchg
mov
xchg
aaa
rclb
jne
xchg
sti
iret
jbe
push
mov
or
xchg
xor
xchg
pop
in
insb
repnz
idivl
push
pop
call
or
dec
or
test
rorl
sti
inc
movsl
les
adc
and
mov
lods
das
sbb
aad
in
push
push
fcomps
pop
cmp
push
movsb
lock
mov
jp
imul
cld
pop
pop
insl
cmp
cld
in
movsb
mov
pop
pop
into
aaa
fcoms
enter
sti
bound
pop
jo
xor
das
xchg
cmp
xchg
es
push
push
fsubrs
push
loope
rcrb
add
mov
inc
pop
push
mov
fistl
inc
cmp
cltd
std
sbb
sbb
mov
hlt
shll
sti
pop
pop
test
inc
inc
mov
movsl
enter
icebp
clc
in
mov
pop
hlt
or
adc
sbb
mov
outsb
cmp
aam
xor
enter
pop
dec
jb
lods
shlb
fwait
rcl
add
insl
clc
jne
lcall
notl
into
in
xor
cwtl
add
mov
push
cld
les
lods
sarb
daa
pusha
cmp
cmc
ja
mov
pop
pop
and
pop
sbb
fwait
mov
adc
cmp
inc
xchg
push
inc
leave
mov
xchg
outsl
cmpsb
lods
fnstcw
adc
repnz
lea
inc
mov
cwtl
cmp
sub
iret
mov
inc
sti
scas
lea
das
push
pop
imul
jno
xor
sahf
fadds
stos
mov
inc
dec
int3
xchg
nop
bound
xchg
ss
pusha
xchg
popa
lods
mov
outsb
inc
imul
cmpsb
stos
daa
test
shr
je
out
push
fs
add
cld
arpl
jl
or
and
shrl
or
lret
imul
mov
jno
je
push
into
inc
xor
cmp
pop
add
xchg
cmp
xlat
popa
pop
sti
add
adc
inc
lret
aad
aam
or
push
cld
in
cmpsb
mov
lods
sbb
dec
pop
mov
repnz
and
cmp
push
add
repnz
daa
test
mov
mov
push
pushf
mov
enter
in
imul
adc
cmpsb
push
fistpl
sbb
xchg
mov
in
add
stos
ja,pt
adcl
mov
sub
stc
xchg
cmp
xor
or
mov
sbb
imul
sub
sti
or
pusha
jmp
cmp
mov
leave
scas
jns
or
test
xor
and
fucomip
cmp
data16
scas
pop
lea
fwait
ds
in
shll
cwtl
fldt
stos
dec
popf
mov
lret
sbb
dec
mov
lods
test
mov
mov
mov
mov
out
add
sbb
popf
jl
dec
and
and
in
sbb
out
jle
sbb
je
iret
and
addr16
dec
loopne
mov
inc
inc
sub
mov
sti
out
lret
add
sbb
fidivrs
pop
int3
mov
loope
cmpsl
mov
jns
xor
aaa
mov
pop
test
jmp
lds
push
pop
fisttpll
sahf
jmp
dec
jno
add
inc
sbb
lea
lock
sub
sbb
pop
popa
imul
sarl
dec
lcall
add
test
incl
stos
cltd
cli
cmpsl
fcoml
pop
mov
xor
shlb
aad
add
adc
aas
jge
jg
xor
push
sti
jne
int3
add
mov
out
rorb
push
adc
jle
adc
jno
ss
mov
and
pushf
test
add
cmpsb
enter
cmp
jne
dec
ljmp
sub
push
xchg
and
cmp
cmpsl
xor
or
js
mov
popa
mov
xchg
push
out
test
adc
fsubs
xchg
loopne
jl
and
xorl
mov
add
and
adc
sbb
fs
pop
cld
add
jb
sub
pushf
jle
out
ds
or
je
cli
xor
jge
in
dec
jae
es
jbe
aas
fwait
loop
add
jo
inc
dec
jmp
inc
loop
out
fdiv
sbb
popf
cmp
roll
push
aaa
insb
xchg
and
dec
sbb
dec
mov
inc
and
repz
mov
loope
xchg
fucomi
mov
mov
repz
mov
stos
int3
push
jecxz
or
in
jo
loope
sar
mov
mov
insb
mov
mov
jnp
push
pop
ja
ret
jmp
cltd
inc
shlb
sbb
push
repnz
jnp
clc
sub
test
xchg
jmp
int3
adc
mov
push
aam
scas
in
xor
lret
repnz
lret
in
ljmp
pop
movsb
outsl
hlt
adc
or
out
movsb
xchg
fldenv
daa
std
outsb
loope
nop
fistpl
sub
psubb
pushf
jmp
mov
mov
shrl
aas
test
out
loopne
lea
push
mov
fwait
psubsw
add
inc
lea
sub
xchg
mov
ret
mov
xor
cmp
inc
sub
lret
movsl
sti
sub
fs
in
fcom
out
pusha
sbb
sub
aaa
xor
cltd
push
fdivrs
and
subb
out
push
test
mov
push
movsb
mov
aaa
call
nop
xor
inc
mov
inc
cmc
icebp
movsl
sti
pushf
pop
es
or
sub
sbb
call
dec
scas
xchg
insl
xchg
leave
lret
mov
sub
das
dec
mov
cmp
pop
loop
pop
call
mov
mov
cli
push
scas
adc
xchg
in
test
or
cmp
dec
test
rolb
fldl
cld
je
inc
xchg
and
mov
jl
pop
sbb
mov
rorb
stc
out
outsb
push
mov
test
push
mov
cmp
in
sub
imul
cld
cmp
imull
sub
and
out
insl
sahf
lds
repnz
adc
stc
out
inc
mov
ret
sbb
mov
mov
sbb
fstps
jle
mov
es
push
jno
fmuls
sbb
mov
dec
mov
loope
mov
das
int
add
nop
aas
and
push
and
test
push
mov
in
mov
xorl
add
xchg
and
into
cwtl
dec
mov
ljmp
push
dec
dec
lahf
leave
push
cmp
cmpsl
adc
ds
mov
repz
add
repz
arpl
mov
jns
push
mov
dec
jne
mov
fildl
lods
mov
imul
stos
xchg
mov
cmp
int
cmp
cli
mov
add
cmp
lret
dec
xor
jg
out
outsb
xchg
jle
push
fcoml
jbe
fs
sbb
dec
mov
sahf
mov
fldt
fdivrl
rorl
mov
in
fists
mov
dec
aam
aam
cmp
cmp
lcall
outsl
add
mov
call
gs
cmpsb
mov
bound
or
xchg
shlb
cmpsb
dec
mov
pop
aas
movsb
das
mov
pop
pop
mov
cwtl
out
fsubrp
fcompl
sub
pop
xchg
sarl
clc
lods
pushf
jns
pop
cld
ja
repnz
or
rclb
cmp
cmc
jge
push
add
mov
es
sub
and
out
lds
lods
or
sub
jmp
mov
pop
in
sub
mov
dec
stos
fdivr
dec
jae
cltd
xor
pop
scas
and
xchg
sarb
iret
push
aad
out
push
mov
inc
jae
pop
and
fimull
add
xor
mov
cmp
popf
xor
pop
fwait
jnp
add
mov
jb
pushf
ret
cmc
andb
mov
mov
xchg
add
push
mov
jne
popa
out
xchg
outsl
js
mov
adc
jecxz
scas
mov
push
and
xchg
stc
and
mov
lcall
idivl
xor
je
jo
pop
lret
nop
ret
iret
arpl
pop
cwtl
push
jne
and
cmp
xor
mov
xor
push
movsb
fwait
out
jae
les
outsl
hlt
js
das
divb
mov
addr16
sub
das
and
lods
fmull
roll
mov
xor
fcmovb
lock
loope
loope
xlat
test
jb
adc
stos
jp
and
cld
dec
pusha
push
nop
iret
mov
cs
ja
js
pop
mov
inc
icebp
and
cmpb
inc
jne
out
push
sub
push
mov
iret
jmp
subl
mov
jge
call
in
pop
push
jae
out
cld
invd
sub
loopne
xorb
pop
sbb
push
push
adc
lods
cmpb
mov
mov
pushf
loope
push
loopne
outsl
test
cs
xor
jbe
dec
mov
pushf
and
sti
and
andb
sbb
stc
add
out
xor
push
mov
test
in
mov
bnd
rorb
and
and
adc
push
mov
or
sahf
loopne
adc
jb
les
add
and
jecxz
repnz
mov
mov
xchg
mov
cmpsl
popf
movsl
mov
das
pop
arpl
pop
in
cld
and
hlt
ror
adc
mov
sub
js
cmpsl
dec
xchg
dec
js
push
mov
xchg
sub
inc
nop
ljmp
jbe
addb
sub
cwtl
mov
loopne
fnstsw
das
idivl
xor
add
add
add
out
fnsave
out
clc
ret
jno
jnp
and
insl
xor
pop
mov
in
sahf
mov
mov
xor
cmc
into
jae
cmc
rcrl
stos
dec
pusha
and
cmpl
int
jns
out
loop
sbb
mov
lds
and
lcall
sbb
xchg
enter
pop
xchg
mov
mov
movsl
repz
setne
add
movsb
sub
mov
stos
jecxz
add
fildl
out
iret
xor
cs
arpl
sub
sub
mov
fistl
std
mov
adc
lea
fwait
dec
arpl
outsb
pop
sbb
xor
push
pop
xor
daa
jmp
cmc
push
add
jl
push
push
xor
push
or
pop
dec
pop
mov
mov
jp
xor
shl
mov
es
movsl
cwtl
mov
call
and
dec
iret
outsl
add
les
adc
mov
adc
cld
adc
std
imul
push
lods
add
and
jo
sti
out
cli
xchg
cmp
jle
insl
loop
lret
xchg
outsl
dec
push
cmp
sub
loope
inc
jmp
cwtl
cmp
mov
cltd
fsub
cmp
and
mov
push
mov
std
or
adc
and
roll
sub
sbb
jb
mov
lcall
xor
cmc
push
lea
ja
sbb
mov
or
js
and
cmp
testl
lds
inc
imul
push
sti
lcall
mov
fmull
fildl
divb
pop
cmp
ds
dec
pop
outsl
inc
shrl
push
sub
insb
xor
adc
scas
xchg
imul
and
sbb
jp
int
lods
lcall
nop
dec
push
iret
cmp
repnz
mov
dec
roll
mov
xchg
inc
push
xchg
adc
jmp
aad
pushf
xchg
fnsave
xor
dec
push
adc
mov
mov
and
add
xorl
test
stc
cmp
stos
bound
outsl
jg
push
movsb
das
addl
enter
xchg
dec
std
ds
jge
mov
add
or
insl
push
imul
cmp
aad
aas
addl
and
mov
inc
test
jecxz
jecxz
sarl
aad
dec
int
xchg
push
rolb
and
and
adc
adc
mov
sub
hlt
inc
mov
pushf
pusha
sti
xchg
xor
mov
mov
int3
sbb
cmp
rol
inc
xchg
mov
xchg
aaa
pop
add
sbb
jns
mov
pop
pop
jnp
dec
negl
dec
mov
aaa
dec
dec
mov
xor
xor
xchg
jns
cmpb
jge
jge
in
adc
add
aas
cld
and
add
dec
lods
into
or
mov
xor
sub
movsl
shl
mov
cmp
adc
sbb
cmc
jp
imul
aam
imul
and
out
shlb
out
push
xchg
insb
add
das
divl
inc
dec
scas
dec
mov
jl
stos
shlb
pop
scas
pop
arpl
jl
mov
movsl
int3
cmpb
sarb
subl
in
imul
adc
mov
cmp
push
insl
movsb
adcl
xor
mov
sbb
fildll
adc
movl
add
outsl
inc
xchg
xor
std
iret
adc
subb
push
cmpsb
push
jl
lods
pop
xor
loop
ret
aas
adc
sub
repnz
sarl
shll
mov
hlt
xor
arpl
and
fwait
imul
ficoml
pop
rolb
mov
sarl
les
jo
mov
jb
jp
sbb
lods
movsl
lea
int3
dec
push
cmp
sub
sbbb
int3
into
ja
xchg
push
jecxz
repz
mov
push
stos
pop
mov
jmp
adc
mov
es
sbb
out
pop
sbb
inc
outsl
push
gs
jb
std
dec
adc
pop
xlat
pop
stc
aaa
sub
push
sbb
rcrl
out
or
fs
and
sub
push
push
xchg
mov
fdivrp
mov
fsubp
int
out
lods
dec
xchg
fstp
roll
lret
xor
mov
pop
xor
andl
mov
in
mov
jb
jp
jge
insl
push
call
pop
dec
shlb
test
push
xchg
add
mov
xlat
rcrb
fcoms
pop
hlt
sarb
sbb
xchg
pop
push
loope
jl
loopne
mov
adc
mov
andl
mov
sbb
movsb
test
fmuls
sbb
enter
adc
jne
scas
ret
pop
fstps
int
xchg
aad
out
jae
lds
nop
cli
inc
mov
dec
repz
push
xor
ljmp
mov
push
push
outsb
rcr
sub
cmp
dec
sub
and
mov
int
popf
adc
shlb
imull
enter
pop
mov
cmp
popf
push
shrb
cmp
sbb
mov
and
ror
nop
pop
jns
insl
js
xor
pop
pop
jnp
into
jge
out
cld
push
sbb
lcall
xchg
stos
mov
mov
push
cmpsl
add
adc
push
mov
xor
mov
or
pop
call
lea
jnp
mov
lret
jbe
jo
xor
das
xchg
cmp
aas
push
fs
push
sub
sbb
fldt
ret
sahf
std
mov
sbb
cltd
xor
pop
cmpsl
push
mov
mov
mov
or
push
jg
cld
shll
fnstenv
push
in
imul
ljmp
sub
add
sbb
inc
adc
or
loop
mov
inc
dec
sti
xchg
jmp
inc
jecxz
aas
sti
gs
int3
push
mov
es
push
mov
lds
fsubl
loop
cmp
clc
cmc
ficomps
mov
loope
inc
mov
jmp
push
mov
xchg
cmpsl
sbb
jb
xchg
aam
testb
push
jbe
and
imul
cmpps
pop
ret
shrl
inc
repnz
lret
adc
das
fbstp
add
std
pop
addb
adc
push
ret
fistpll
fmuls
inc
and
pop
cmp
cli
xchg
push
push
pop
cmp
lcall
add
xchg
test
lahf
push
sub
xor
jo
inc
jge
ljmp
mov
sub
jp
xchg
ret
mulb
popa
pop
cwtl
stos
add
push
loop
xchg
shlb
dec
fcmovnb
dec
xchg
es
and
lods
mov
cld
add
es
shlb
pop
sbb
adc
jg
xchg
sub
jne
mulb
cli
das
and
insl
or
in
iret
cwtl
or
rolb
adc
fisubs
popf
add
clc
cmp
cmp
subl
push
and
out
mov
movsl
xchg
cmc
mov
inc
xchg
fisubrs
push
roll
add
fidivs
lea
jb
adc
sbb
push
adc
push
cwtl
lahf
mov
sbb
lock
sbb
jae
inc
mov
fcmovnu
jle
dec
mov
in
loopne
out
and
push
jle
in
and
dec
mov
add
insl
lods
and
mov
adc
push
pop
hlt
sbb
inc
fnstsw
pop
and
pop
popa
pop
lret
aaa
movsb
inc
mov
jmp
aad
xchg
gs
bnd
pop
ret
cmc
pop
stc
ror
inc
lcall
jnp
mov
jp
cmp
pop
or
dec
push
and
fsubrs
dec
fdivrl
jo
icebp
push
xchg
lcall
jb
sarl
cs
cs
fadd
movsb
sub
adc
adc
into
adc
repz
mov
and
sahf
push
outsl
inc
xorb
dec
sub
dec
daa
mov
inc
xchg
hlt
rcl
inc
scas
push
pop
std
xor
dec
jl
cld
test
xchg
in
lret
mov
cmp
aas
imul
adc
or
fbstp
clc
sub
dec
and
push
mov
test
mov
push
stos
pushf
and
push
push
and
pop
int3
push
push
and
or
js
add
xchg
js
xchg
sahf
xor
inc
aaa
ret
jnp
mov
insl
mov
enter
jns
and
lret
movsb
decl
dec
loop
push
cmpsl
pop
movsl
pop
mov
lret
mov
movl
push
xor
das
out
cmp
mov
shrl
leave
cwtl
or
and
fistps
jge
fcomp
adc
lods
rcrl
inc
outsb
sbbl
xor
clc
xlat
mov
shll
pop
in
sub
mov
aad
and
mov
test
adc
mov
mov
enter
adc
into
adc
test
xchg
push
cmp
outsb
xor
adc
clc
frstor
sub
sahf
ret
xlat
jle,pn
sub
repnz
stc
mov
mov
decb
dec
ja
sbb
and
aad
jae
sub
sub
xchg
incb
xor
gs
push
mov
cli
and
cli
cmp
pop
sub
adc
or
in
and
inc
out
jecxz
shl
xor
sub
xor
add
je
popf
mov
scas
fsubs
dec
push
jb
pop
test
lea
ror
repnz
cmp
arpl
mov
sahf
jg
sub
into
lret
xchg
mov
adc
cmp
dec
lahf
cmp
adc
in
jo
pop
mov
scas
jmp
inc
scas
in
in
push
in
add
adc
mov
ficoms
lock
inc
or
dec
push
sti
int
lcall
scas
mov
mov
jmp
sub
imul
stos
mov
cmp
sahf
jbe
pop
popa
xor
pusha
arpl
shr
jmp
xchg
test
mov
lcall
cmp
nop
das
push
mov
or
cwtl
mov
push
jmp
mov
mov
and
push
out
dec
mov
mov
add
les
cmp
mov
aad
mov
nop
lea
push
mov
pushf
xchg
seto
cld
push
movsl
xchg
cmc
in
lret
sub
jle
ljmp
mov
cmp
pop
jmp
jg
imul
scas
ja
popa
outsl
int3
push
lock
imul
sbb
leave
jae
movsb
pusha
sarb
jno
add
into
xchg
inc
push
cmpsl
sti
mov
int3
cmpsl
adc
inc
outsl
cwtl
inc
stos
sarl
lock
aam
loopne
mov
push
mov
mov
mov
pushf
js
inc
pop
inc
xchg
push
in
mov
je
loope
xor
push
xchg
les
jmp
outsb
pop
or
mov
ja
in
inc
jb
adc
int3
sbb
cmp
add
add
cmpsl
mov
dec
loope
repz
xor
ja
fwait
iret
jecxz
ja
imul
xor
mov
scas
cmp
sub
sub
or
enter
cwtl
sub
adc
hlt
nop
daa
repnz
rcll
rorb
nop
jb
shlb
cld
push
insb
lret
ret
sub
push
out
es
mov
push
hlt
sbbl
out
rcll
int
xor
adc
stos
rcrb
rolb
mov
and
add
adc
gs
repnz
fs
sahf
push
out
in
and
repnz
jecxz
mov
test
nop
lcall
mov
cli
aad
and
inc
fsubrl
loopne
sub
xchg
bound
imul
repz
mov
loop
xor
add
mov
sbb
movl
lods
icebp
packsswb
out
xchg
push
adc
mov
clc
mov
push
testb
push
cli
loop
stc
sub
mov
lcall
pop
stc
stos
clc
gs
jge
inc
or
mov
sbb
push
fwait
sbb
add
and
xchg
sbb
das
fdecstp
cs
insl
dec
fisttpl
mov
nop
rclb
aam
fidivl
gs
fstl
add
popa
or
scas
movsl
mov
ficompl
push
and
mov
rcrb
cmp
pop
neg
xchg
js
xchg
xchg
in
std
and
sub
into
dec
leave
mov
inc
jae
loope
adc
mov
push
ljmp
daa
mov
cli
jne
pushl
out
popa
jnp
aam
mov
jb
sbb
pop
pop
push
or
rcrl
lock
xor
in
pushl
cmp
outsb
xor
or
je
scas
pop
or
dec
inc
jns
or
dec
shr
inc
jae
loopne
aam
push
mov
cli
adc
cmc
adc
jg
lea
clc
inc
into
sbb
xchg
sbb
add
insb
mov
xor
sbb
jb
or
aaa
in
push
mov
adc
adc
adc
and
dec
sbb
imul
adc
push
sbb
nopl
mov
hlt
out
std
repz
mov
mov
out
stos
cmp
test
test
cld
imul
cmpsl
scas
popf
and
adc
outsl
inc
add
cmpsb
ja
hlt
daa
jle
lahf
stos
xchg
adc
rcll
xchg
movsb
push
xchg
aad
mov
pop
rol
in
js
fs
add
dec
add
cmp
cmp
mov
mov
push
lcall
mov
lock
fldl
xlat
les
mov
sbb
out
lahf
cwtl
mov
cmp
xor
push
leave
adc
lret
xor
nop
loop
sub
aad
lds
add
xor
and
add
in
dec
dec
lret
cmc
mov
roll
insl
aam
loop
add
das
imul
mov
outsl
sbb
jne
sbb
inc
cld
out
add
adc
inc
sahf
cmp
or
sub
and
xor
mov
cmp
cli
ja
sub
out
pop
jl
xor
xchg
mov
xorb
pop
pop
pop
mov
cmc
sbb
imulb
decl
je
cli
fistl
into
in
and
xchg
sub
add
fbld
cmp
push
jns
ret
dec
lock
sub
int
aad
shlb
jnp
xor
xchg
rep
js
mov
sbb
sbb
test
adc
mov
cmp
and
jae
pop
addl
ffree
dec
ja
fistpl
push
add
jno
xor
pop
lock
outsl
pop
lods
stc
insb
ss
mov
push
stos
outsl
stos
xchg
xorl
frstor
les
rcrl
ss
inc
inc
movsb
xchg
adc
in
jecxz
xchg
and
call
test
inc
mov
shll
mov
repz
pop
xor
sub
lahf
and
or
cmp
les
imul
cli
mov
leave
loopne
adc
loopne
add
lods
adc
mov
call
dec
pop
popf
int3
jp
xor
jnp
push
xor
test
add
aad
add
aaa
lock
xchg
pop
sub
popa
roll
pop
notl
cmpsl
dec
push
std
adc
xchg
es
or
sbbl
int
stos
dec
aad
mov
push
mov
movsb
cmp
test
xor
jl
shlb
xchg
stos
dec
mov
lahf
mov
push
adcb
or
aam
mov
lods
rorb
cmpsl
mov
aas
les
sbb
add
jnp
outsl
sarl
or
lahf
pop
test
mov
sub
or
xchg
in
cmp
loope
sub
fmuls
push
lods
outsb
pop
mov
cs
negb
or
xor
js
lret
ljmp
dec
jl
mov
push
sub
jg
or
dec
movsl
pop
stc
mov
int3
popf
mov
movsb
jns
cmp
push
lea
mov
lods
jns
adc
push
and
movsb
mov
out
sub
jno
sub
lock
and
mov
mov
push
movb
push
je
adc
xor
pop
inc
xor
in
lock
push
das
rcll
lret
xchg
jecxz
adc
cs
aaa
sub
out
leave
and
mov
inc
lret
nop
call
sbb
inc
les
test
out
pop
in
inc
mov
mov
fidivrs
shll
and
pop
gs
popf
test
outsl
xchg
adc
out
xor
jmp
jno
jp
sub
or
iret
pop
inc
out
mov
fcmovnu
arpl
and
xchg
jle
out
stos
mov
add
mov
fadd
push
push
loopne
pop
cmp
mov
push
and
xchg
add
shrl
popl
mov
pop
fimuls
or
cmc
push
jnp
dec
push
inc
cmpsl
xor
adc
bound
repz
push
xchg
jbe
orl
popf
mov
inc
xchg
movsl
frstor
xchg
jl
lods
fwait
pushf
sub
xchg
repz
fdivl
add
xchg
inc
pop
sub
pop
mov
push
xor
cmp
hlt
lret
leave
mov
out
mov
push
jl
gs
in
shrl
jle
lock
cmp
dec
inc
cld
aaa
pop
xor
mov
lods
in
pop
push
mov
mov
cld
hlt
mov
cwtl
mov
testb
push
mov
fmul
arpl
mov
push
testb
push
test
gs
negl
mov
xchg
sbb
jmp
call
test
ss
shll
xchg
inc
adc
add
lahf
pop
adcl
xchg
mov
xchg
out
cmpsl
pusha
and
jnp
and
leave
fwait
cmp
xor
sub
or
mov
and
adc
fcomp
das
out
jnp
jno
fstpl
sub
mov
xchg
cwtl
xchg
dec
aas
lock
adcl
insl
outsb
stos
imul
nop
in
fldt
xlat
scas
sub
repz
fcomi
pop
or
insl
repz
jge
or
jle
int
ljmp
or
fstl
push
imul
xchg
push
adc
enter
test
pop
xor
dec
mov
gs
dec
int
popa
mov
imul
popf
fidivrs
movsb
cmp
outsl
test
xchg
jae
jge
ja
xor
xchg
insb
xchg
jo
mov
sbb
push
mov
xchg
mov
data16
cmpsl
lret
addr16
pop
cmp
sub
xor
int
out
cwtl
sarb
call
pop
iret
push
mov
mov
adc
cmc
jbe
and
cmpsl
push
sub
rcrb
cmp
fisttpll
jne
scas
fnstsw
daa
rcl
pop
imul
push
ja
and
inc
mov
sarl
mov
dec
or
sub
fsubl
daa
ss
jge
cmp
xchg
push
or
push
and
cmp
js
add
insb
lret
andb
lods
and
test
clc
and
adc
loope
push
cmp
leave
jp
icebp
and
add
jmp
int
stc
gs
pop
fadds
add
jl
sbb
sti
fwait
mov
cwtl
enter
cli
pop
sahf
xchg
adc
iret
test
pop
cwtl
fsubrp
addps
adc
popa
ljmp
rcrb
lcall
mov
xlat
hlt
movsl
lcall
inc
std
inc
rol
jle
movsb
fwait
add
push
es
push
xor
and
xchg
pushf
push
out
fimuls
out
mov
hlt
mov
ljmp
enter
pop
jl
daa
in
test
and
cmp
sub
mov
mov
mov
leave
xor
sti
dec
fwait
call
icebp
pop
push
in
xchg
shlb
popa
pop
and
pop
or
push
fildl
inc
ljmp
jnp
test
and
push
mov
xchg
stos
ja
sahf
in
mov
mov
into
shl
inc
mov
push
push
loope
jae
repnz
adcl
jle
setge
push
cwtl
jmp
cmpsl
pop
or
test
inc
iret
jnp
sub
push
push
cmpb
popa
int3
xor
mov
testb
pop
xor
cmp
push
int3
push
frstor
shlb
in
pop
mov
fimull
cmpsl
add
aad
or
loop
dec
jecxz
cwtl
xchg
xchg
sbbb
push
imul
test
enter
push
lret
xchg
adc
cmp
fbld
pushf
faddl
aam
mov
lret
jae,pn
call
or
jp
cld
ljmp
cmp
mov
sub
sti
xchg
xchg
pop
ljmp
inc
push
sbb
lret
lahf
push
pop
sub
in
sahf
push
push
mov
xchg
jmp
mov
inc
dec
dec
xchg
ljmp
mov
dec
sti
sbb
or
pop
push
xor
mov
scas
mov
pop
pop
pop
popa
nop
mov
in
pop
mov
adc
sbb
aaa
sbb
fisubl
mov
or
cmp
jg
mov
jmp
mov
sahf
mov
mulb
inc
orl
rcll
jmp
ret
mov
add
cld
ret
mov
leave
ds
ret
inc
sbb
dec
sbb
je
repnz
movsb
push
jp
sub
pop
pop
popf
xchg
push
pop
pop
or
mov
movsl
xor
fwait
into
push
inc
sub
add
addl
in
mov
mov
leave
push
sub
push
sbb
mov
popf
addr16
push
dec
out
cld
mov
hlt
aad
add
cmpsb
stos
push
sbb
fnstenv
fiaddl
sbb
xchg
add
cmpsb
loop
psubq
cmpsl
and
xor
fcmovu
jle
jp
aas
jnp
aam
xchg
lahf
jns
call
cltd
scas
aam
or
pop
fcompl
sub
mov
lcall
int3
insl
push
cmp
or
cmp
cmp
jne
sbb
daa
jne
add
leave
jns
inc
aam
insl
cmc
push
std
mov
push
and
push
jg
fs
fs
ficoms
and
gs
inc
arpl
jns
call
decl
inc
bound
push
loope
fnstsw
sub
pushf
xchg
sarb
rcl
rorb
in
inc
jecxz
fnstsw
mov
aad
shrb
sbbl
jge
and
cmp
les
stos
cmp
lods
jbe
cmp
dec
adc
rcrb
sub
dec
mov
and
push
gs
mov
lcall
in
sbb
jle
add
xor
fdivrs
mov
jg
fcoms
add
sbb
nop
sub
fdivs
cmp
ss
repz
inc
inc
or
pop
aaa
jmp
out
scas
dec
test
cmc
and
jns
pop
mov
add
xchg
movsl
pop
add
ljmp
pop
inc
stos
pop
xchg
mov
inc
sbb
mov
popa
neg
hlt
dec
test
scas
sbb
fisubs
int3
adc
fimull
push
cmp
adc
mov
movsb
cmp
daa
ljmpw
cmp
or
dec
and
mov
cwtl
sbb
sbb
jp
je
pop
mov
and
xor
jp,pn
lods
cmp
jle
cmpsl
sub
add
in
xchg
test
push
inc
xchg
xlat
lret
mov
into
fimull
sti
pop
sub
sbb
popa
cltd
aaa
add
loop
jle
ds
cld
or
xorl
add
xchg
sbb
imulb
in
mov
push
mov
cmp
loop
xchg
cmp
sbbl
mov
cmp
fldt
cltd
add
stc
sub
sbb
ds
cld
pusha
lods
lods
test
cmc
mov
jecxz
add
inc
pop
mov
pop
jle
shrl
mov
sub
nop
dec
xchg
or
xchg
inc
mov
adcb
lcall
mov
das
push
pop
push
xchg
jl
push
xchg
jo
inc
add
filds
lret
dec
mov
mov
add
push
loop
movsb
cld
jnp
xchg
lds
push
inc
lods
cmp
into
xchg
xor
dec
push
jp
and
add
dec
loope
jl
js
sub
xor
hlt
insb
imul
mov
push
fxch
js
and
pop
rorb
mov
shll
loop
loope
pop
push
dec
sub
aas
iret
repz
xor
into
inc
jo
xlat
jo
and
xchg
ljmp
xchg
sbb
xchg
jecxz
aas
and
jle
sub
push
pop
lahf
in
pop
jne
js
mov
fnsave
loopne
jb
out
xchg
in
mov
xor
adc
cmpsb
mov
xchg
gs
cmc
imul
jge
popa
push
dec
sbb
jne
cs
hlt
dec
push
cmpsl
xchg
dec
push
lds
lock
ss
mov
in
iret
mov
icebp
mov
loopne
sbb
mov
icebp
pop
xchg
lret
pop
dec
mov
shl
mov
jno
mov
lods
mov
adc
xor
inc
push
xor
mov
inc
fldt
fdivrp
sub
out
addb
xlat
ljmp
push
sbb
sub
test
out
mov
lea
or
inc
in
inc
adc
xchg
jae
das
lcall
flds
fs
mov
jbe
loop
test
mov
sahf
div
cmp
sahf
jbe
popf
lea
sbb
test
and
jl
mov
cmp
or
outsb
cli
cmp
dec
jg
testl
dec
fmul
pop
mov
cmp
sbb
cmp
mov
arpl
push
inc
inc
adc
push
push
xor
cmp
mov
xchg
int3
test
ret
xor
jle
add
imul
xor
int
inc
arpl
sub
insb
fisttpll
addr16
insb
jno
push
pop
inc
shrb
cmp
adc
pop
xor
inc
dec
mov
dec
das
pop
mov
adc
out
ret
ret
cli
dec
or
pop
push
fiaddl
or
sub
cmpsb
dec
aaa
arpl
rcl
mov
inc
inc
or
cmp
ret
data16
pop
lahf
pop
inc
int3
jge
fmull
lret
or
xchg
dec
test
dec
fstps
loope
push
stos
in
sub
aam
into
xor
mov
cld
lea
xchg
xchg
add
mov
xchg
sub
pop
imul
cwtl
loope
leave
mov
rolb
and
pusha
add
add
lahf
mov
cmp
das
cltd
mov
mov
dec
in
stos
ficompl
sbb
push
pop
push
xchg
movsb
fs
sub
fsubl
mov
adc
daa
adc
xchg
int3
push
jbe
push
aas
push
inc
out
and
sbb
repz
mov
adc
bound
fsubrl
loop
sub
inc
jnp
rclb
or
subl
mov
mov
repnz
push
jecxz
jg
push
mov
pop
sahf
lahf
inc
cmpb
repnz
and
inc
jp
mov
push
cs
test
jb
add
and
pop
mov
add
mov
sub
mov
lcall
aas
lods
and
cmp
ljmp
loopne
add
mov
and
je
sti
jmp
xor
add
pop
cmp
push
or
push
hlt
push
ljmp
sbb
mov
ljmp
sub
cmp
aad
bound
cwtl
cmp
mov
shlb
daa
stc
adc
pop
push
subl
mov
in
xor
mov
int
icebp
fs
mov
inc
in
mov
mov
sbb
add
mov
ret
pop
inc
adc
add
std
dec
in
jnp
outsl
lds
xchg
call
lret
call
jp
outsb
inc
sub
mov
lock
inc
das
pop
add
pop
cmpsl
jmp
mov
add
or
push
add
or
in
mov
jns
fptan
mov
xchg
inc
mov
or
cli
test
out
pop
aam
insb
std
jp
adc
test
lea
cwtl
push
loop
aaa
mov
sub
jge
in
add
andb
pop
es
dec
xor
addr16
je
cmp
loop
and
sbb
mov
adc
add
mov
out
add
xor
gs
movsl
clc
fnstenv
jbe
mov
cli
test
lods
mov
dec
das
push
inc
xchg
mov
jle
sub
loop
adc
bound
cmpsl
sbb
jl
push
cmp
inc
inc
and
ljmp
je
repz
insl
out
push
cmc
mov
jl
cs
sbb
nop
add
mov
inc
lahf
shll
mov
lahf
sahf
scas
jns
adc
adc
add
in
ss
sub
jl
lret
cmc
xchg
inc
dec
inc
push
fs
add
shlb
daa
xchg
fiadds
adc
mov
icebp
repnz
adc
imul
add
sbb
dec
xchg
mov
das
xchg
or
fildl
jp
jg
dec
repnz
jne
inc
mov
adc
push
mov
pop
in
fucom
inc
rclb
pop
popa
cmpsl
shrb
jae
adc
lahf
test
sarb
jge
and
nop
xchg
pop
dec
xor
out
pop
hlt
xchg
in
jb
lahf
or
inc
mov
in
aam
in
or
mov
lahf
popf
adc
mov
add
push
fdivs
push
pusha
lcall
lea
cmpsb
jnp
cltd
push
or
sbb
scas
sbb
xchg
xchg
adc
dec
mov
leave
outsb
add
dec
adc
sub
repz
das
aas
scas
scas
aas
mov
adcl
dec
xor
mov
mov
jmp
dec
test
pop
xor
test
xchg
xchg
and
sbb
ffree
jo,pt
dec
imul
mov
ss
js
push
pop
cmpsl
roll
jmp
mov
lahf
stos
push
or
aas
cmc
inc
arpl
and
jmp
stc
sbb
push
sbb
or
mov
pop
push
jns
push
inc
and
push
dec
dec
pusha
jecxz
add
ror
mov
mov
stos
sub
incl
pop
lret
div
pop
lods
and
scas
mov
pop
xlat
or
sub
pop
lea
in
mov
mov
test
test
outsl
mov
cwtl
cmpsb
shll
mov
iret
or
cs
aaa
lcall
add
les
adc
mov
mov
mov
pushf
jbe
sub
xchg
loope
lahf
mov
add
xor
outsl
loope
scas
xchg
jmp
stos
addr16
cmpsl
mov
test
add
lret
divl
popf
insb
pop
sbb
daa
cli
pop
cmp
ss
jmp
rcll
jnp
lret
push
inc
mov
sarb
xor
cmp
inc
lret
test
xor
outsl
pop
and
fsubrl
push
pop
cmpsl
in
add
fcmovb
and
sub
rorl
adc
pusha
lods
push
ljmp
dec
pop
dec
mov
jno
nop
shlb
pusha
dec
rclb
cmp
adc
add
sbb
addr16
and
sub
sub
pop
cli
xchg
ds
jae
in
inc
sbb
hlt
imul
push
xchg
fisubrl
notl
xchg
leave
ds
js
popa
cmp
jl
stos
mov
outsl
push
outsb
or
add
inc
mov
sbb
addr16
pop
mov
mov
movsb
mov
in
push
push
out
xchg
out
in
xor
les
xor
fsubr
shlb
add
cmp
push
mov
push
xor
pop
shlb
jl
test
push
stos
mov
fcomps
add
into
out
push
xorb
out
mov
sahf
test
push
mov
fcmovbe
xor
into
lods
mov
ret
hlt
inc
cli
mov
jo
in
xlat
pop
dec
xchg
repz
mov
daa
mov
mov
or
mov
lcall
js
or
mov
insb
jg
xchg
mov
pusha
popa
adc
sbb
testb
mov
enter
mov
icebp
xchg
push
pminsw
jb
pop
sbb
or
push
test
sub
mov
dec
sub
push
xchg
popf
ds
sub
lcall
negb
les
bound
sbb
xchg
inc
mov
clc
dec
enter
dec
out
out
fidivl
jp
in
enter
sub
cmpb
shll
mov
out
stc
loope
lahf
int3
mov
jbe
xor
popf
hlt
push
pop
outsb
or
xorl
xchg
jge
sub
jmp
mov
ds
bound
sarb
xor
sbb
clc
iret
int
test
inc
pop
mov
jnp
mov
jns
dec
out
fsts
mov
gs
cli
data16
mov
xchg
cs
je
data16
mov
call
jae
cli
pusha
mov
xchg
insb
mov
and
movsl
lea
stos
mov
cmc
ja
pop
cltd
and
jb
sbb
dec
daa
cs
sbb
into
mov
add
imul
add
jp
imul
nop
sti
push
imul
lcall
xor
sti
pop
xchg
and
fcomps
adc
sub
les
jae
mov
arpl
add
adc
gs
dec
add
lcall
push
lret
push
mov
into
jb
mov
jmp
or
popf
pop
enter
scas
loop
or
mov
jno
add
movsl
add
dec
cmp
test
repz
dec
add
push
mov
lahf
push
sub
cmp
imul
dec
jb
mov
jne
je
cmp
mov
xchg
cmpb
dec
push
inc
stos
sahf
stc
adc
sbb
add
aad
mov
clc
sub
cwtl
pop
and
lds
and
popl
mov
cwtl
addr16
rclb
and
in
popa
sahf
mov
dec
out
xlat
xor
in
or
dec
andl
ds
shrb
rcll
dec
ja
push
sbbb
cld
arpl
jg
mov
jbe
mov
adc
ret
push
mull
lret
jecxz
test
jecxz
xor
mov
icebp
jae
cmp
idiv
stc
aam
xlat
jg
cmpsb
or
mov
pop
mov
sti
gs
adc
xchg
push
inc
jmp
xchg
fisttpll
rol
fsubrl
push
fidivrl
jmp
add
push
das
mov
mov
cmp
cmpl
arpl
in
stos
push
add
aas
adc
inc
xor
dec
mov
add
repz
movsl
rcl
xchg
sbb
and
xlat
push
pop
sub
pusha
test
das
fcom
test
shll
push
adc
jl
xor
sub
mov
sahf
hlt
out
and
loopne
jp
sub
rol
data16
fstpl
fidivs
gs
nop
inc
fimuls
mov
das
mov
push
pushf
sub
xchg
pusha
test
push
sub
ds
lods
lahf
lcall
and
das
icebp
int3
pop
push
pop
pop
sub
sbb
mov
jo
sbb
jne
divl
dec
fadds
push
lret
push
fwait
adc
dec
test
push
lea
cmp
cltd
inc
clc
or
in
push
sub
cmp
cmp
aam
push
cmpsl
ret
fbstp
nop
adcl
sbb
stos
out
cmp
cwtl
xchg
outsb
shlb
pop
test
xchg
mov
jne
rcrb
push
sub
inc
dec
negb
sti
pop
filds
xchg
dec
in
push
xchg
cmp
add
mov
cmp
shlb
in
dec
dec
pop
mov
icebp
pop
rcl
jne
into
inc
jecxz
mov
aas
xchg
in
lea
adc
pop
mov
out
popa
sub
lods
pusha
rcr
rcrl
outsb
movsb
lock
es
mov
adc
dec
popa
aam
scas
pop
add
int
sbb
or
mov
scas
lcall
adc
mov
mov
test
mov
inc
stc
mov
arpl
adc
push
aam
js
jno
outsl
outsl
pop
jp
adc
push
mov
jo
and
mov
rcr
push
and
clc
inc
inc
testb
testl
pushf
adc
sub
enter
cmp
pushf
cmp
imul
insl
dec
es
and
sbb
or
sbb
cmp
add
cmp
push
into
add
or
addr16
mov
js
ret
xor
cmpl
fisttpll
gs
movsb
sub
outsl
inc
test
dec
mov
pop
enter
cltd
arpl
and
mov
mov
jg
in
and
lds
push
xor
sar
fistpll
cmp
call
xchg
fwait
inc
js
outsl
test
xchg
cmpsl
push
xchg
push
repz
ja
ret
imul
xchg
inc
les
and
jns
arpl
jl
xchg
xor
adc
stos
sbb
add
bnd
pushf
ds
cmp
mov
cmpsb
pop
aas
and
mov
outsl
loope
adc
leave
mov
insb
mov
xlat
ja
fwait
movsb
xchg
cmp
stos
push
fs
lahf
fdivl
fwait
adc
jne
fimull
fcmovnbe
mov
dec
sub
ja
adc
jg
nop
cmc
pop
in
cmp
xor
sub
xor
pushf
cmp
int
xor
aad
ss
pusha
inc
icebp
loop
cmpsb
jb
lock
or
adc
in
mov
out
popa
clc
scas
outsl
xor
push
xor
jb
orl
ds
inc
incb
test
xchg
inc
dec
xor
mov
lea
dec
fcmovb
lret
mov
sub
mov
out
xchg
xchg
nop
in
shll
push
pop
jmp
adc
jb
addr16
scas
gs
xchg
fidivs
test
mov
lret
xchg
sub
mov
mov
into
lods
add
cmpsl
cld
cld
shrl
int3
sahf
cmp
lret
jnp
add
dec
sub
je
push
push
aas
dec
imul
aad
xchg
xchg
lea
and
pop
mov
and
mov
xchg
xorl
sbb
mov
dec
xor
sti
adc
xchg
push
xor
daa
ljmp
mov
sbb
pop
aam
cmp
sbb
dec
lds
aaa
mov
cltd
subl
sti
mov
mov
lcall
xor
mov
lods
notl
lea
push
addr16
inc
sarb
lahf
cmp
lods
cli
aaa
xor
loopne
shr
mov
je
leave
loopne
lcall
mov
out
inc
jnp
pop
fsubr
ret
xchg
xchg
mov
mov
sub
xor
sub
mov
cmp
dec
aas
lret
cwtl
mov
ret
notb
sub
lock
fcomps
push
cmpb
and
xchg
fimuls
lock
push
negl
in
popa
xor
mov
inc
adc
cmp
pop
scas
cmpsb
xchg
jle
lock
push
mov
into
js
inc
sti
int3
sub
push
xlat
popa
xor
arpl
dec
cmc
fsub
fldcw
add
imul
mov
roll
stos
shlb
icebp
adc
jl
and
push
shl
rorb
sub
out
adc
repz
or
jecxz
iret
rolb
push
imul
push
movsl
mov
fcomi
or
hlt
xor
add
pop
aas
popa
xchg
jnp
jp
stc
xor
xor
inc
stos
mov
mov
jl
or
inc
inc
mov
and
mov
mov
ret
or
cwtl
jne
loope
cmp
cmp
cmc
sub
pop
subb
lds
jecxz
push
loopne
fsts
out
imulb
rcrl
dec
fidivs
movsb
repnz
pop
pop
xor
and
fildll
lcall
fistpll
cmp
sub
lret
sbb
jle
xlat
or
in
roll
icebp
lock
minps
loope
mov
add
outsb
mov
fidivrs
cmp
ror
sub
repnz
dec
nop
lret
sub
mov
pop
mov
sbb
fdivrs
mov
stc
mov
mov
ljmp
push
cmc
xor
aas
out
push
ret
sbb
pop
jecxz
testb
cwtl
xchg
push
push
lock
dec
fmuls
ja
scas
sub
jg
dec
fldcw
xor
sbb
push
leave
sbb
mov
ret
lret
push
xor
out
scas
les
in
mov
stos
mov
push
sub
push
arpl
cmp
xchg
inc
cmp
xchg
adc
scas
sbb
xor
aas
dec
mov
in
or
mov
add
mov
adc
jbe
pop
mov
leave
fidivl
stos
jmp
mov
outsl
inc
insb
and
and
gs
mov
jnp
jg
adc
rorb
nop
xchg
sbb
addb
add
xchg
fisubs
dec
dec
loop
jns
out
pop
cltd
fcmovu
jb
or
inc
fsubs
mull
xchg
xchg
inc
int3
mov
imul
xchg
stos
aad
test
jo
mov
fs
and
add
test
mov
idivl
inc
insb
loop
pop
pop
out
and
test
lahf
std
push
push
xchg
ret
cs
mov
outsl
insb
cmp
push
lcall
imul
push
or
jnp
inc
adcl
jns
jno
mov
gs
in
dec
mov
mov
add
xchg
enter
gs
fsubl
hlt
js
push
pop
cltd
sahf
xchg
enter
ret
dec
mov
cs
push
add
cmp
loop
pusha
test
leave
daa
into
pusha
repnz
int3
setle
cmpsl
mov
ja
fisubrl
rcrb
xor
sub
mov
adc
xlat
ljmpw
out
push
ficompl
fcoml
shl
sbb
sahf
push
sbb
sti
mov
dec
lcall
and
ds
out
js
inc
pop
cmc
mov
xor
dec
push
mov
ficomps
iret
enter
test
popa
xor
push
lahf
pop
out
or
ret
mov
push
dec
mov
outsl
shl
mov
jbe
mov
inc
lret
rorb
push
or
stos
in
xor
cs
stos
jge
into
add
and
jecxz
mov
or
aad
std
xor
cmpsl
les
in
addb
arpl
ss
mov
pop
xchg
dec
cld
mov
movsl
inc
mov
cltd
movsl
out
push
mov
sbb
pop
imul
xchg
xor
ss
adc
xchg
fdivrs
jnp
mov
scas
ljmp
mov
test
cmp
test
sub
es
mov
push
lods
pextrw
test
stos
fisttps
jle
sbb
test
movl
add
cmp
faddl
std
addr16
fld
push
shl
adc
cld
pop
mov
pop
js
rcl
pop
shlb
jecxz
jg
int
mov
fldl
aam
or
adc
in
daa
repz
dec
mov
in
stc
popf
jbe
scas
ds
loopne
jmp
daa
sarl
mov
and
pop
jmp
rcrb
dec
cmp
pop
xchg
add
insb
jl
sbb
and
fnstcw
add
xlat
cltd
test
outsl
xor
cltd
gs
pop
inc
into
stos
out
and
cltd
push
pop
outsb
ret
orl
lds
loopne
jo
shll
xlat
sbbb
pop
adc
cltd
and
add
and
mov
pop
sbb
push
dec
dec
notb
or
imul
shlb
cwtl
mov
push
arpl
lret
call
mov
je
stc
add
notb
daa
xchg
js
dec
out
jae
cmp
stos
movsl
xor
je
in
adcb
pop
dec
sbb
out
shll
popa
es
outsl
and
shl
inc
test
cmpsb
ja
pop
pop
mov
jns
add
mov
push
aam
dec
pushf
add
mov
jecxz
repz
mov
out
arpl
pop
inc
mov
jge
sti
aas
rcrl
jl
jb
cltd
inc
in
lea
add
les
popf
and
adc
inc
pop
loope
sahf
cwtl
adc
or
xchg
out
add
leave
stc
jae
hlt
ljmp
sub
arpl
mov
xchg
mov
jp
leave
test
add
or
icebp
sbb
mov
sbb
lcall
dec
pop
lock
pop
mov
push
pop
jecxz
loopne
cmpl
inc
push
ret
pop
loope
ds
sbb
pop
testb
mov
xchg
std
repz
pop
into
mov
mov
test
dec
pop
lret
mov
jae
insb
mov
call
pop
and
pop
andl
push
sub
xor
xchg
adc
adc
mov
sub
mov
jno
out
int3
les
pop
sub
inc
in
push
lret
lock
mov
jle
cltd
cmp
mov
pushf
mov
call
pop
mov
pop
dec
fcmovnb
lods
jb
fwait
mov
cs
jl
pop
sarl
lcall
decw
scas
sbb
lea
inc
lret
mov
fisttpl
xor
ret
subl
out
xchg
sti
outsl
jmp
lret
lcall
push
ret
and
inc
pushf
rcrl
inc
pop
ficoms
fldl2e
mov
and
cli
jo
fucom
push
xchg
dec
mov
sbb
mov
ret
mov
in
dec
push
jbe
mov
sbbb
pminub
mov
jl
cmc
std
cmp
and
test
mov
mov
popa
cmp
jbe
cmpsl
xor
push
cmp
jnp
out
jl
pop
adc
loope
fbld
fcompl
stos
xor
scas
xchg
sub
cltd
mov
loope
jne
jle
insl
fs
push
mov
pop
loop
or
jl
rcr
clc
lods
out
xchg
scas
mov
pop
das
int3
nop
dec
add
mov
fwait
dec
in
xchg
adc
xorl
pop
es
or
movsb
sbb
popl
mov
add
add
inc
fists
xor
pop
and
jb
pop
mov
int
insl
xchg
addr16
mov
inc
test
jge
in
or
pop
shll
popa
dec
push
xchg
and
cmp
dec
ja
aam
cwtl
jmp
inc
movsb
sbb
lods
xchg
mov
mov
ds
sbb
sbb
mov
mov
jne
test
repz
and
dec
fwait
inc
xlat
jne
out
push
js
jne
repz
pusha
jecxz
imulb
add
jecxz
mov
fstps
jg
push
mov
add
mov
mov
add
lahf
xchg
in
or
cwtl
push
mov
aas
cwtl
outsb
inc
and
jae
sarl
and
fldl
jmp
fmuls
fisttpl
andl
les
mov
cmp
inc
sbb
imul
leavew
add
add
push
mov
lea
inc
mov
and
test
xor
inc
jo
rorb
or
sbb
bound
ficoml
das
fistl
mov
into
sub
pushf
adc
or
cld
fs
and
or
sub
sub
lret
mov
inc
xchg
lahf
pop
in
cmp
loop
cwtl
lret
xor
sub
push
mov
add
adc
outsl
and
into
pop
cmp
push
ret
xchg
sub
aad
add
xor
lea
push
in
or
inc
fwait
xor
dec
in
sbb
jnp
out
jb
loope
xchg
je
pop
cld
pop
sub
inc
daa
mov
or
sti
jnp
out
sub
mov
xor
pop
in
mov
enter
push
scas
sti
mov
xor
push
sahf
jae
mov
sbb
leave
stos
pop
or
mov
cmc
push
out
mov
mov
sbb
pop
out
test
lods
shrl
pop
inc
xchg
sbb
sbb
into
and
pop
dec
xchg
jle
sub
paddusw
test
insl
mov
daa
in
ror
repz
xchg
jae
loop
xlat
push
je
pop
les
lea
das
jge
adc
fstpl
test
jo
cmp
int
and
addr16
xor
mov
push
sbbl
dec
negl
mov
fisubs
pop
cs
cmc
in
test
out
mov
test
fnstenv
adc
pop
jne
popf
cs
nop
dec
xchg
cmpsb
cld
ljmp
pusha
test
sub
push
jae
dec
and
push
dec
xor
or
mov
aad
nop
add
stos
sbb
outsb
lods
cmp
xor
pop
in
adcb
lds
jmp
push
sbb
cmp
out
mov
cmpsb
add
popf
clc
cmp
ja
pop
sbb
insb
std
push
mov
mov
in
scas
cmp
int
fs
mov
aaa
dec
insb
mov
stos
test
push
js
popf
fwait
pushf
je
inc
or
shrb
push
lea
insb
push
dec
xor
in
ds
mov
xchg
icebp
push
mov
mov
cmpsl
cmp
shrl
add
xchg
ss
je
lret
stos
jne
xor
repz
enter
hlt
lock
fists
mov
adc
pop
adc
ljmp
mov
ljmp
sbb
cmp
push
mov
push
in
daa
push
sub
pop
push
movsb
hlt
inc
xchg
stos
ljmp
mov
xchg
push
sbb
push
and
cmp
cwtl
aad
inc
pop
dec
sbb
cs
adc
jo
or
pop
jne
mov
les
jge
js
lds
mov
adc
fdivr
push
adc
jmp
fnstenv
hlt
xchg
cmp
leave
addr16
ljmp
xor
outsl
dec
mov
cmpsb
mov
mov
insl
add
scas
push
fs
icebp
inc
repnz
inc
xchg
fcompl
mov
ret
lods
and
sbb
or
enter
xor
mov
push
jo
mov
sbb
fildll
or
mov
fdivrl
sub
popa
or
sbb
lods
jge
sub
mov
sarl
add
das
jae
dec
xchg
add
or
or
repnz
cs
push
push
or
dec
dec
mov
mov
jbe
or
bound
es
in
sub
adc
in
xor
cmc
mov
xor
fsubrs
adc
lock
jns
or
ja
mov
outsl
cmp
cmp
sti
loope
imul
movsb
mov
rorl
mov
xchg
or
movsl
les
shll
fwait
cltd
dec
or
cmp
inc
dec
cwtl
incl
loop
sub
sub
ljmp
sahf
cld
arpl
cltd
aad
ss
xchg
dec
cld
inc
cmovbe
bound
and
lret
rclb
fistpl
rolb
xlat
or
lds
sbbb
outsb
sbb
cmpsb
pushf
pop
push
jne
lcall
mov
loopne
xor
mov
and
xchg
jns
fs
pop
or
jbe
fsubrs
mov
rorb
scas
in
pop
sub
dec
push
test
push
jmp
insl
test
sub
popf
test
nop
inc
xchg
in
sbb
adc
dec
dec
jae
out
xchg
test
js
faddp
mov
or
fisubs
pusha
sahf
in
xlat
int3
push
xlat
les
cld
aam
dec
fidivrs
xor
mov
and
sbb
rorb
aad
or
jbe
shrl
scas
orl
outsb
xchg
push
cli
out
xlat
pop
pop
test
mov
aas
sbb
lea
movsl
sub
xchg
int
cli
xor
test
jns
repnz
scas
fwait
or
pand
jnp
mov
lahf
mov
arpl
addr16
pmullw
add
es
aad
mov
gs
push
add
push
psubd
cmpsb
inc
xlat
jp
in
loope
jb
xchg
out
and
cmp
cmp
and
rcrl
mov
addr16
imulb
ret
cmp
testb
jge
add
bound
fdivrl
xchg
ja
negb
push
mov
mov
inc
sub
sub
dec
aam
clc
in
out
fsubrl
xorl
jg
cli
loop
adc
ds
adc
jle
out
movl
loope
xchg
lret
sbb
inc
xchg
push
in
test
cs
cmpsb
leave
pop
idivb
arpl
push
cmp
inc
out
or
mov
ljmp
mov
pusha
pushf
push
inc
jns
std
in
cmp
gs
mov
push
mov
sbb
shrl
inc
ret
mov
xchg
push
out
scas
sbb
scas
ret
pushf
into
mov
mov
sub
push
mull
cwtl
leave
call
add
add
cwtl
daa
add
mov
push
xchg
enter
dec
and
add
push
lret
aas
pop
fstpt
das
out
mov
push
cld
cmpsl
jg
jecxz
in
adc
xchg
imul
dec
test
cmp
xchg
or
dec
loope
cwtl
xor
jmp
xchg
inc
adc
mov
mov
inc
push
nop
inc
pop
pushf
addl
push
cld
addl
dec
and
push
xchg
arpl
cwtl
out
mov
fidivs
xor
push
sbb
stos
mov
dec
or
push
dec
fiadds
jp
adc
jb
push
push
jmp
mov
shrl
sbb
and
add
in
mov
in
cmp
push
or
xor
mov
sbbb
or
out
je
vpsubsw
loop
popa
mov
lcall
pop
jne
imul
stos
push
and
mov
xchg
push
rcrl
bound
sub
jmp
ret
rorl
mov
and
movsb
mov
stos
mov
in
xlat
jp
insb
cmpsl
testl
xor
enter
fbstp
inc
lods
mov
shlb
pop
mov
mov
adcl
fbld
int3
les
lahf
push
cltd
std
popf
cwtl
mov
cmp
in
jle
cltd
imul
cmp
ret
sub
inc
dec
jg
xor
mov
or
clc
jg
xchg
mov
inc
jle
cmp
daa
loop
imul
in
iret
clc
lret
test
in
push
dec
mov
dec
mov
cmc
int
shlb
addr16
push
shrb
cmp
xor
out
sbb
pop
mov
xor
mov
fs
stc
dec
push
push
lcall
and
inc
xor
insl
das
jns
sub
adcl
add
pop
inc
inc
mov
jns
push
xchg
or
nop
pmaxub
xor
push
push
jne
fwait
mov
cltd
clc
xchg
sar
xchg
rcrl
inc
or
push
imul
mov
test
xchg
pop
outsl
sbb
outsl
fstp
cmp
cmpsl
incl
push
enter
gs
push
cmp
push
add
imul
push
sub
loop
gs
pop
into
mov
or
imul
fidivrs
imul
xchg
js
rcll
mov
sub
lds
je
sub
imul
sarb
cli
mov
cltd
mov
test
testb
call
fnstenv
fimuls
adc
ljmp
xchg
inc
or
pop
orb
jmp
std
shl
sub
push
insl
inc
aam
xor
xor
ret
test
mov
repnz
inc
ljmp
scas
bnd
icebp
pop
nop
mov
push
rcrb
lcall
mov
inc
jne
pop
mov
sbb
push
int
add
rorl
and
pop
into
xor
mov
adc
or
push
or
cmpl
popl
out
cmc
mov
dec
push
xchg
out
adc
in
pop
call
mov
enter
pop
dec
push
adc
mov
add
cld
dec
xchg
cmp
mov
push
fidivrl
pushf
and
cmp
dec
mov
mov
adc
pop
mov
test
mov
dec
rcl
inc
in
xchg
add
mov
mov
or
daa
pop
es
or
and
cmpsb
flds
jno
fisubrs
xor
dec
pushf
cmp
les
pop
inc
jle
add
jl
and
ljmp
dec
mov
cltd
jne
in
mov
iret
lret
jge
outsl
and
inc
stc
add
mov
stos
scas
data16
adc
jle
lahf
adc
or
lock
iret
mov
leave
mov
pusha
shll
lock
xor
mov
cmp
daa
inc
scas
inc
mov
daa
xchg
int
adc
inc
add
dec
sbb
movsl
and
jne
dec
imul
repz
pop
into
les
insl
push
mov
xchg
pop
inc
lods
rolb
fistpl
adc
mov
push
bound
cmp
repz
repnz
mov
xor
push
fstpl
push
sbb
iret
fs
sub
mov
movsl
cmp
adc
test
fwait
or
sub
jo
pop
and
jmp
idivb
mov
jno
ja
mov
iret
pop
addr16
cmp
sbb
ljmp
fistpl
sbb
jbe,pn
mov
pop
ret
add
cmpsl
jb
jb
lahf
adc
out
dec
mov
xor
push
popa
sbb
mov
cmp
jmp
faddl
and
sub
pop
pop
pusha
sub
jns
arpl
fsubs
cmc
lods
out
sub
mov
sbb
lcall
push
js
ja
repnz
cmp
mov
mov
sbb
lcall
pop
rclb
ljmp
insl
mov
mov
add
inc
push
jnp
loop
ficoml
push
xchg
jl
aam
imul
sub
sbb
mov
daa
cli
cmpl
sub
cmc
fdivl
xchg
fcmovnbe
inc
scas
jl
ljmp
jae
sbb
in
inc
xchg
rcll
ret
push
orl
int
pop
lods
pusha
push
iretw
fcoml
mov
mov
or
push
popa
dec
sbbl
nop
mov
je
adc
dec
ficoms
jp
cli
add
shlb
and
jg
pop
or
jg
dec
sbb
lods
shlb
cli
aam
adc
test
sbb
xchg
xchg
jl
push
inc
jp
push
cmpsl
xchg
loopne
push
jecxz
or
mov
inc
add
sbb
push
jmp
lock
fisubrs
fisttps
test
mov
imul
out
imul
sbb
jbe
jp
rep
xchg
dec
pop
lcall
mov
out
mov
inc
adc
adc
push
clc
das
dec
push
stc
mov
mov
test
icebp
mov
xchg
lods
iret
jae
push
pop
loope
jecxz
mov
sub
jns
test
sti
sbb
mov
jae
aam
dec
lods
cmpsl
shlb
clc
arpl
cli
scas
push
stos
cmp
sub
dec
not
add
sub
add
push
stos
lea
shll
jle
adc
add
sbb
insb
arpl
lods
mov
sbb
mov
jmp
pop
fwait
dec
jnp
or
adc
imul
mov
mov
inc
pop
divl
lea
adcl
and
into
jg
add
mov
pop
inc
and
sbb
cmp
cmp
divb
aaa
nop
pop
xchg
lret
int3
jbe
or
out
cmpb
cmp
mov
pop
sub
adc
insb
push
add
jecxz
out
jae
popl
imul
push
in
mov
fldl2e
shll
adc
xor
cmpsl
adc
inc
add
popa
jno
pop
shlb
mov
jge
mov
subb
arpl
cmp
dec
jo
dec
pop
stc
sub
or
pusha
nop
fsubrl
stc
int3
push
cwtl
pushf
cmpsb
rcl
rcll
enter
jecxz
mov
fnstenv
inc
and
or
loopne
sti
ret
cmpb
dec
in
mov
push
inc
clc
das
and
mov
push
fnstsw
pop
mov
nop
push
adc
repz
jle
push
stos
xor
adc
xor
xchg
push
push
rcrl
mov
jmp
jecxz
adc
dec
xchg
in
or
mov
mov
push
mov
repz
mov
mov
lret
xor
icebp
add
int
mov
mov
xchg
test
inc
push
push
sub
mov
mov
andb
sub
dec
add
mov
pop
leave
clc
test
aad
int
movsl
xchg
icebp
fnstsw
and
mov
fdivp
pop
out
add
inc
sahf
sub
sub
addb
and
jae
movsl
inc
or
pop
mov
repnz
lret
adc
fcomip
pop
pop
fwait
mov
or
push
xchg
and
or
lock
sbb
imul
push
pushf
dec
mov
xor
insl
les
faddp
aad
lret
outsl
or
pop
cmc
iret
sub
aad
cld
scas
icebp
pop
fidivs
mov
push
push
addl
add
push
mov
ret
jae
xchg
dec
lods
aam
call
pop
inc
add
cltd
push
mov
enter
mov
ret
subb
data16
mov
ds
cmp
arpl
mov
cmp
out
mov
xor
cmp
mov
test
leave
ljmp
cmpsl
dec
insl
cmp
scas
adc
aam
stc
sub
sub
dec
shl
les
repz
dec
testl
je
lods
fidivrl
ud2
mov
aaa
jns
stos
xchg
nop
js
push
addr16
pop
mov
jb
mov
iret
insl
movsl
ljmp
mov
imul
jge
outsb
xchg
aas
fwait
sahf
fwait
mov
movsl
out
lods
and
lret
inc
mov
lea
in
fstpt
loop
lcall
adc
adc
popf
lcall
xchg
cmp
int
fs
sub
mov
add
fbld
mov
sub
mov
mov
je
fildl
aaa
push
or
ss
imul
dec
cmp
in
outsl
adc
adc
popf
adc
xchg
sbb
cli
in
mov
hlt
or
adc
adc
jecxz
scas
push
cmp
fbstp
mov
sbb
xchg
pop
enter
arpl
pop
mov
sti
pop
repnz
mov
sbb
lcall
test
fs
mov
imul
inc
in
sbb
inc
insb
xchg
and
lret
push
mov
dec
les
pusha
add
mov
mov
icebp
pop
mov
mov
loop
pop
hlt
cmp
inc
cmpsb
cmp
test
in
fsubrp
mov
inc
cld
leave
aad
loop
pop
sbb
lret
popf
xchg
xchg
mov
mov
pop
lret
adc
pop
mov
out
jp
xor
stos
and
nop
adc
xor
mov
cmp
jge
std
aas
ljmp
and
adcl
pop
int
rorl
or
out
imulb
std
das
ja
dec
push
xchg
or
loope
call
out
fcompl
mov
mov
in
add
xchg
pusha
push
add
push
or
int
mov
sbb
repnz
push
ljmp
and
mov
ljmp
dec
pop
jmp
je
push
xlat
dec
push
out
call
gs
mov
pxor
jnp
xchg
sbb
sub
call
xchg
es
cmp
in
xor
mov
in
pop
mov
loop
push
or
sbb
fmul
add
add
stc
pop
arpl
test
xor
adc
xor
test
pop
incl
cmp
jmp
or
sbb
ss
inc
test
in
push
cmc
push
in
push
xchg
test
es
push
sarl
repnz
sbb
cmpsl
test
inc
orl
xlat
or
std
push
and
into
inc
dec
pop
fwait
je
cmpsb
xchg
daa
mov
mov
mov
testb
cmp
inc
jle
sub
imul
mov
fcomps
dec
dec
xor
fnstsw
xor
xor
add
leave
xchg
mov
dec
mov
imul
loop
mov
fdivr
xchg
inc
lret
inc
fstp
cli
mov
xchg
std
sbb
adc
ljmp
fistpll
enter
js
or
aas
fistps
jecxz
sti
in
fwait
int
jae
push
test
data16
jno
fcmovnb
mov
cmp
out
mov
nop
rolb
mov
dec
mov
pop
add
scas
pop
inc
pop
sbb
js
imul
mov
xchg
out
fwait
test
test
clc
jmp
out
inc
rolb
dec
in
cmc
clc
test
in
xor
das
ss
dec
cmpsb
cmp
aas
mov
xchg
aam
jecxz
xchg
cmpb
les
push
xchg
stos
push
mov
jg
mov
mov
add
rclb
loop
arpl
enter
cmp
sbb
push
jns
xor
pushf
and
mov
add
xor
cmp
mov
push
fwait
fs
enter
jge
cmp
sbb
lock
icebp
inc
push
test
arpl
pop
mov
mov
inc
pop
sub
sbb
dec
or
push
sahf
pop
mov
aaa
scas
jge
stc
mov
sub
rcr
insb
sbb
sbb
dec
jl
ret
test
shll
pop
daa
cwtl
fwait
cwtl
cli
add
leave
or
arpl
mov
data16
jmp
mov
les
daa
jne
push
and
push
jp
icebp
sub
jg
pusha
jge
rcrl
push
and
dec
test
jbe
ja
inc
cmpsl
xchg
or
popa
lock
mov
out
xor
lods
ffreep
sub
jle
negb
int3
xor
mov
xchg
out
ret
inc
pop
hlt
ss
int
ds
sbb
push
cli
and
jae
or
outsb
sub
mov
adc
repnz
nop
xor
aam
dec
mov
or
js
in
cmp
jecxz
mov
stos
add
jg
jbe
ret
cltd
jbe
pop
stc
shlb
test
rorb
fimuls
push
orb
jne
out
cwtl
mov
mov
sub
aad
push
sbb
mov
stos
push
call
jno
push
call
sbb
js
lods
xor
les
sti
xchg
stos
mov
loope
cmp
inc
loop
out
jbe
arpl
jnp
jle
sub
insl
mov
sub
sbb
inc
jge
shlw
inc
and
lret
sub
aaa
ret
rcrb
xchg
dec
jnp
bound
sbb
sbb
stos
sahf
dec
cmp
enter
ja
test
shr
test
and
dec
or
and
cltd
jo
or
fcomps
xchg
movb
push
sub
cld
adc
adc
push
jecxz
or
push
call
jg
mov
cmp
sbb
out
sub
stos
repz
jno
lock
fistps
inc
in
mov
popf
sub
fidivl
push
scas
pop
dec
mov
sbbl
add
sbb
jge
lds
in
push
das
push
popaw
pop
dec
movsl
jnp
push
scas
mov
sub
mov
or
push
inc
lods
daa
dec
movsb
sub
mov
inc
std
addr16
pcmpgtd
sahf
in
adcl
shlb
add
push
push
enter
jg
jg
xchg
dec
dec
push
mov
pop
shl
cli
or
add
shll
in
and
mov
and
addl
inc
out
xchg
sub
jae
push
push
xchg
stc
outsb
arpl
and
notl
jb
mov
xor
push
jns
mov
fists
jmp
cltd
push
in
add
idivb
or
popa
ja
xor
scas
setne
mov
adc
xor
cmp
adc
lock
jo
xchg
adc
fwait
out
xor
lret
jne
cmp
shlb
repz
sub
fs
pusha
stos
mov
xchg
pop
and
leave
pop
cld
mov
jle
pop
negl
push
mov
inc
cwtl
lock
ja
gs
cltd
mov
jg
fucom
roll
rcrb
inc
mov
xchg
push
bound
mov
add
mov
mov
inc
insl
xchg
gs
lds
test
jp
mov
pop
nop
call
jae
and
mov
ljmp
icebp
addb
popf
and
out
and
shr
mov
enter
dec
xchg
gs
fiadds
add
mov
repz
dec
mov
loope
mov
pop
sbb
stos
testb
and
mov
lods
je
xor
stos
adc
inc
nop
and
pop
mov
sub
in
jg
and
imul
mov
mov
mov
push
and
xor
mov
pop
sub
and
push
jmp
add
pop
inc
push
mov
mov
test
lret
push
in
or
adc
inc
inc
stos
mov
push
jle
rcr
jne
and
stos
icebp
xchg
loopne
xchg
loop
mov
int
xchg
lods
mov
clc
inc
fstpl
sbb
test
and
lock
or
shlb
inc
and
cli
pop
ret
add
jb
rorb
sub
mov
dec
cmpsl
cld
pop
mov
push
loopne
fwait
or
mov
testb
pop
add
add
jbe
and
cmp
mov
xor
jne
sahf
mov
pop
mov
pusha
fstl
mov
mov
shr
fbstp
xchg
inc
lock
mov
and
jbe
sub
cs
mov
xchg
gs
test
dec
sbb
push
jge
and
bound
fs
clc
cmpsb
pop
jae
test
cmp
fldl
and
inc
mov
sti
sti
scas
nop
jmp
ja
dec
push
jb
mov
shlb
dec
ficompl
adc
call
or
push
pushl
or
inc
popa
into
aaa
iret
sub
sub
sar
flds
icebp
add
mov
fsubl
in
ret
mov
sub
shrl
cs
cmp
adc
push
ret
xlat
cltd
lods
xchg
add
pop
mov
js
jo
lahf
cmp
addr16
and
and
sub
loope
inc
xchg
lcall
fcoms
dec
not
jns
sbb
cmpsb
jmp
mov
adc
shll
hlt
sub
sub
in
clc
insl
mov
scas
dec
loopne
xchg
pop
jle
stos
mov
hlt
xor
cwtl
pop
add
lcall
cmp
inc
sub
rcll
dec
push
out
mov
adc
or
ljmp
sub
sbb
and
cmpsl
fs
fisubrl
imul
inc
jmp
xor
cmp
ljmp
les
aaa
xorl
aad
adc
jge
loopne
iret
mov
stos
mov
loop
stc
push
mov
xchg
push
lods
dec
mov
in
sub
flds
dec
cld
push
lahf
xor
rcrl
lcall
in
xlat
pop
fs
cli
fcoms
scas
lret
inc
add
cmp
into
mov
das
jo
out
mov
int3
mov
xchg
adc
jmp
xor
cli
mov
and
push
dec
jb
lods
inc
addb
ret
icebp
fsubl
pop
ja
mov
lahf
mov
xor
push
add
sub
iret
mov
dec
mov
xchg
fsubl
mov
mov
leave
movb
popf
repnz
pop
or
decl
scas
cmpsb
or
outsl
nop
pop
dec
addb
lea
sbb
mov
sub
mov
jne
lahf
shll
aaa
inc
xor
mov
cmp
push
rolb
loopne
sub
or
ficoms
xchg
lret
ljmp
call
or
and
hlt
fwait
lds
push
jle
stos
sar
add
ljmp
shll
or
sbb
cwtl
cmpsl
ss
aad
pop
cmp
loop
adc
sub
mov
dec
xchg
repnz
adc
sub
push
mov
mov
aas
inc
or
xchg
jno
jo
stos
in
loop
pop
in
push
pop
mov
rcrb
aad
or
shl
sub
xchg
sarl
mov
adcb
movsb
cltd
xchg
sub
cmpsb
mov
out
and
xchg
xchg
fildl
jae
dec
and
inc
fidivs
in
mov
sbb
xchg
mov
es
in
fcoms
fwait
xor
adc
decl
idivl
or
inc
out
icebp
jnp
mov
ss
fucomp
inc
sbb
push
fistpl
les
icebp
add
out
sahf
fildll
bound
addl
xchg
das
pushf
xor
pop
insb
inc
sub
hlt
mov
je
mov
test
push
in
xor
out
bound
das
pop
dec
xchg
mov
inc
mov
pushf
mov
dec
xor
sbb
ret
incl
pop
shlb
aad
imul
lret
test
jl
sarb
movsb
jae
fcoms
out
inc
fxch
dec
test
dec
add
pop
adc
and
rcrl
pmulhw
popa
push
push
push
mov
insl
sub
lea
jbe
stos
aas
dec
sahf
loopne
dec
outsl
movsb
imul
cmp
call
cs
cmpsl
or
sbb
sti
ds
gs
inc
mov
jnp
int3
fnsave
popf
cwtl
std
cmp
inc
in
add
jo
fmuls
scas
test
inc
or
jns
loope
popa
shlb
sahf
fistpl
fldenv
push
mov
loope
stos
out
enter
cmpsl
cmp
add
cmp
mov
xor
mov
out
jmp
orb
and
jle
notb
shll
mov
arpl
out
dec
adc
fdivs
fwait
push
inc
dec
in
dec
fwait
mov
insl
lret
pop
fsubs
das
mulb
data16
movb
jge
fsts
stos
xchg
jmp
mov
pop
push
mov
cwtl
fdivl
sub
pop
xor
dec
test
adc
mov
xor
mov
aaa
repnz
push
mov
mov
jnp
nop
jge
xchg
add
sbb
stc
cwtl
scas
inc
fnsave
and
out
dec
popf
scas
scas
push
mov
ljmp
adc
add
imul
fisubl
loopne
xchg
rclb
xchg
sbb
add
ja
adc
push
bound
sahf
jge
cltd
adc
pop
sub
out
sub
mov
xchg
mov
xchg
push
cmp
jle
lcall
jge
rorl
mov
push
and
xor
enter
inc
sub
jg
xor
inc
xchg
pop
mov
xchg
inc
mov
dec
xor
leave
xchg
jae
loope
js
fidivs
jns
sub
mov
mov
add
pop
std
movsl
xor
mov
pop
cmp
roll
les
push
popa
faddl
repnz
enter
cmp
test
xchg
sub
or
ljmp
mov
pop
push
inc
inc
dec
test
inc
shl
stc
iret
js
and
sub
or
sbb
or
cmc
xchg
dec
adc
sub
in
jmp
and
add
mov
jge
inc
dec
mov
dec
into
mov
cmp
push
rorb
push
adc
mov
fnstenv
stc
int3
jecxz
in
xor
jmp
sti
icebp
jb
out
mov
fucompp
xor
sbb
mov
mov
jmp
xchg
add
pop
and
jns
add
push
push
das
pop
out
push
fnsave
aas
inc
je
inc
scas
scas
movsl
icebp
dec
xor
xor
add
cli
rolb
xor
push
xor
insb
gs
push
lcall
mov
dec
jne
sahf
aaa
push
sub
xor
loopne
aaa
add
adc
movsb
adc
pusha
mov
sbb
sbb
pop
push
outsb
jge
xchg
stos
lods
pop
sahf
arpl
and
and
fsubrp
jecxz
ds
loop
cli
pop
aaa
and
sbb
stos
sub
lea
adc
dec
xrelease
jo
cltd
sub
lock
pop
mov
mov
shll
dec
adc
sbb
fimuls
in
in
adc
push
sti
stos
mov
aam
push
fstp
jp
and
push
inc
fdivr
mov
xor
sbb
cld
dec
out
pop
rsqrtps
adc
xchg
mov
dec
pop
in
xor
repz
imul
inc
into
ja
bound
push
jecxz
daa
inc
in
pop
repz
rcll
jle
jbe
cmp
icebp
bound
in
cmpb
mov
push
rclb
or
xor
sbb
lea
and
and
push
mov
jb
cmc
dec
add
inc
pop
mov
cmp
and
insb
pop
xchg
bnd
pushf
les
js
lods
mov
add
nop
mov
loop
sbb
mov
sub
xchg
loope
cmp
cmp
jns
and
push
pop
pop
fsubs
clc
and
adc
and
clc
add
jmp
data16
jl
push
sbb
pminub
jb
out
dec
mov
mov
sbb
cli
sahf
inc
push
inc
pop
sub
shlb
test
xchg
adc
jmp
pslld
fsts
or
stos
aaa
push
mov
aad
mov
imul
cwtl
xchg
cld
loopne
imul
loope
cmp
popa
loopne
aaa
add
xchg
push
push
aaa
in
movsl
imul
mov
insl
mov
mov
nop
sub
loopne
mov
sbb
ret
lods
push
jecxz
insb
shll
aam
add
imul
adc
imul
cs
cmpsb
arpl
mov
push
sub
jge
stos
sbb
test
inc
push
pop
mov
loop
push
popa
fidivrs
movsl
out
std
aas
add
dec
mov
add
sub
pop
jge
repnz
push
outsl
sub
faddl
ds
xlat
push
clc
xor
std
cmp
adc
scas
imul
mov
das
push
cmp
push
pusha
loopne
xor
ficoms
cmp
loopne
add
inc
jmp
loopne
lahf
and
or
lods
stos
cltd
mov
inc
mov
mov
jns
and
dec
push
aaa
andl
scas
jg
es
cli
push
sbb
mov
and
movsb
cltd
adc
cltd
sbb
inc
hlt
filds
mov
or
mov
adc
stos
push
mov
lods
mov
repnz
insl
dec
jle
sub
lcall
in
fsub
shl
js
mov
xchg
push
pop
stos
stos
inc
out
call
jno
jne
mov
dec
ljmp
fistps
pop
push
inc
scas
dec
push
lock
jo
xchg
cltd
into
clc
mov
fdiv
filds
lods
outsb
sbbb
or
js
mov
inc
hlt
in
xor
outsb
xor
ret
cmpsb
movsb
lods
inc
mov
into
jne
testl
les
cmpsb
addr16
rcrb
jae
jns
pusha
add
jg
mov
pop
fisubrl
lea
repz
fiaddl
and
addr16
sub
enter
and
push
dec
mov
mov
lea
and
call
xor
ss
das
rol
lret
cmc
or
int3
xor
icebp
loope
aad
cli
inc
pop
or
lds
push
in
jae
push
ret
dec
lahf
lods
jl
pop
jns
lock
testl
call
pop
xchg
fisubl
fildll
inc
js
mov
push
movsl
pop
mov
cmp
test
adc
out
push
mov
pop
fildll
xchg
mov
mov
jp
mov
inc
xor
pop
inc
cmc
sahf
les
into
outsb
add
sbb
dec
push
shl
mov
aam
loope
add
push
pop
xlat
subb
out
ret
adc
inc
push
push
sbb
cs
cs
sbb
sbb
xor
ss
and
ja
lock
inc
mov
xchg
lret
inc
insb
and
xchg
sub
int3
sbb
orb
mov
iret
jmp
or
shlb
frstor
push
xchg
jo
lcall
dec
insb
js
enter
dec
mov
mov
mov
cld
jmp
out
insl
adc
stc
inc
xchg
rcll
js
jge
idivb
dec
push
sub
push
mov
mov
daa
xchg
xchg
mov
je
data16
and
lds
mov
xor
mov
lods
std
xchg
notb
inc
lahf
push
sub
out
fucomip
push
xchg
fwait
sub
mov
jl
roll
pop
add
pop
outsb
push
mov
ljmp
mov
repz
or
xor
pop
xor
ds
stc
pop
pop
ja
loope
pop
dec
add
jb
xor
xchg
loope
aas
mov
sbb
mov
jbe
mov
lock
mov
xor
mov
mov
lret
mov
dec
fcoms
xchg
test
jle
add
pushf
and
xlat
pop
pop
nop
jo
cli
mov
xor
dec
pop
cmc
es
std
xor
sub
pop
dec
test
pop
push
into
adc
jns
sbb
out
xchg
iret
test
inc
jnp
out
sub
push
je
stc
imull
pop
fmuls
sub
cmp
rorl
fdivp
add
jmp
rcl
push
test
rcrb
out
mov
push
je
das
mov
fadds
inc
sub
popa
add
push
movsb
add
xchg
test
xchg
dec
xchg
and
xchg
rol
or
fucomi
push
clc
icebp
xlat
dec
ljmp
shll
shrl
adc
cmpsb
outsl
dec
jne
push
mov
xor
mov
addr16
data16
jbe
pop
stos
mov
add
push
cwtl
inc
inc
pop
in
pop
xor
pop
mov
jecxz
jbe
or
into
cli
pop
cwtl
mov
sub
out
adc
les
lods
sub
inc
lret
dec
push
sub
adc
in
mov
in
xchg
pop
in
dec
or
cmp
inc
pop
or
inc
imul
xchg
je
test
mov
sub
pop
jmp
shl
jl
inc
dec
imull
jno
push
sub
leave
call
pop
push
inc
adc
and
repz
adc
out
fisttpl
lcall
out
scas
stos
cmp
inc
fadds
fwait
popa
in
mov
vpcmpeqd
leave
or
sbb
shlb
lea
inc
das
cli
sbb
lods
lcall
test
or
sahf
adc
out
push
bnd
sub
ret
scas
mov
inc
nop
jmp
or
mov
loope
xlat
mov
pop
mov
pop
nop
bound
nop
daa
jp
adc
daa
lahf
adc
jno
dec
xchg
mov
mov
pop
add
mov
jo
mov
lods
shll
mov
mov
lcall
pop
in
sub
testl
fcmovne
add
and
cmpsl
out
ljmp
or
pop
inc
inc
cmp
pusha
sub
rol
xchg
rclb
jnp
aaa
adc
test
pop
daa
loop
test
leave
dec
bound
aad
adc
push
xchg
inc
roll
lods
aam
pop
jbe
sahf
lock
cmp
cmpsb
jge
push
jno
sbb
adc
dec
shlb
outsb
inc
outsb
push
aas
stc
jg
js
mov
and
jnp
in
adc
les
push
ja
sub
out
fs
addr16
sbb
mov
loopne
mov
push
pusha
push
test
pop
sbbl
test
insb
outsb
xchg
lret
jle
jae
cmp
jmp
xchg
mov
sub
lock
idiv
mov
gs
jg
mov
sub
lods
das
xchg
pusha
sbb
mov
pop
dec
mov
mov
stos
mov
xchg
mov
xor
push
pop
adc
call
clc
push
or
mov
sbb
or
xchg
jmp
scas
sbbl
add
sbb
jecxz
lret
mov
dec
push
and
sub
inc
or
pop
in
cli
data16
lds
cmpb
pop
adc
dec
cmc
fisubs
push
sbb
mov
out
mov
lds
int3
dec
sub
xor
cmp
mov
test
js
jge
mov
cmp
jo
stos
pop
shll
aad
jmp
repz
pop
mov
jp
lods
dec
cltd
popa
shrb
and
pop
out
stos
dec
pop
insb
clc
test
jg
inc
lcall
inc
ja
mov
xchg
insb
dec
mov
cli
xor
cmp
lret
shll
enter
imul
mov
sub
out
mov
mov
loopne
inc
in
adc
jl
scas
rcll
xchg
jg,pn
es
mov
mul
roll
das
call
xchg
add
idivl
test
ljmp
movsb
xchg
inc
mov
orl
sbb
clc
bound
mov
mov
icebp
jne
push
cmp
mov
cmc
or
lds
mov
sti
cmc
mov
mov
mov
or
adc
pop
in
pop
pop
ja
jo
adc
jne
mov
cltd
sub
push
and
outsb
dec
adc
stc
or
add
lods
in
fwait
hlt
je
scas
insb
shlb
or
fidivs
aad
cmp
or
push
cmp
jp
cld
sub
cmpsb
bts
or
jae
rcrb
cmp
pop
insb
cmp
fldenv
push
int3
mov
in
xchg
jbe
cmp
repz
adc
push
sbb
std
je
addr16
lds
add
jle
mov
fdivs
xchg
outsb
in
lods
adc
xchg
jns
mov
stos
jbe
sub
adc
loopne
inc
cmp
ljmp
cli
iret
out
push
leave
sub
jl
add
fnstsw
je
jo
cmp
push
aam
stc
jae
test
sahf
push
dec
pop
mov
pop
mov
mov
popa
sbb
mov
jne
loopne
xchg
test
add
push
or
xor
mov
jecxz
test
cmpsl
dec
test
mov
test
pop
mov
pop
lds
sbb
das
jno
je
xchg
and
sbb
stc
shlb
icebp
jle
pop
adc
xchg
or
mov
lretw
jae
sbb
jae
stos
mov
fs
inc
mov
jae
sbb
dec
push
stos
lods
xchg
push
enter
mov
inc
fidivrs
imul
jnp
inc
in
jge
scas
daa
xor
jle
jbe
rolb
cmc
cld
rep
into
pop
push
fdivs
mov
scas
pop
lods
aad
mov
mov
fs
in
arpl
push
out
popa
clc
inc
es
lahf
divb
shlb
lcall
in
loop
lret
adc
jns
je
jp
arpl
call
fld
or
cmp
mov
jns
push
aad
mov
pop
enter
cmp
outsb
dec
outsl
xor
idivl
sub
push
cmp
push
imul
inc
push
jle
xor
fildl
jns
mov
cmp
lahf
in
test
lods
mov
repz
ja
mov
xor
inc
fildll
adc
aas
add
das
hlt
xchg
stc
cwtl
arpl
dec
subl
jp
les
pop
shlb
dec
ret
fdivs
insl
push
out
jae
iret
inc
pop
scas
mov
sub
pop
clc
jns
aad
push
inc
and
mov
inc
lock
xchg
mulb
filds
pop
test
fdivrs
mov
les
adc
mov
int
xor
mov
push
adc
dec
and
dec
and
xchg
inc
data16
mov
lds
gs
out
sub
add
lods
pop
pusha
in
mov
loopne
insb
mov
dec
into
mov
enter
hlt
ror
lret
push
aam
aam
mull
add
inc
xchg
ret
iret
outsb
sbb
dec
pop
aas
xchg
loop
std
hlt
mov
imul
fistpll
sbb
sbb
jno
inc
sbb
cli
or
push
clc
clc
jge
mov
sahf
fldt
or
lock
sbb
lock
sub
test
xchg
out
ja
cs
sbb
sahf
ljmp
dec
inc
dec
vcvtss2sd
jmp
xchg
adc
popf
xor
mov
aaa
nop
fisubs
out
xchg
cmc
setge
icebp
sbb
sbb
adc
lcall
loopne
lret
dec
sub
daa
dec
xchg
rcrl
and
push
push
iret
dec
pop
and
push
mov
outsl
outsb
shl
and
mov
gs
popa
ret
mov
cli
dec
pop
lds
xchg
arpl
jbe
push
ljmp
jno
lcall
mov
mov
mov
cltd
popf
sbb
imul
cld
fbstp
loope
je
fucomp
bound
dec
loope
mov
leave
incb
adc
xchg
or
push
or
inc
test
lret
sti
or
dec
inc
test
mull
and
push
paddd
pop
mov
in
push
mov
sbb
xor
popa
gs
sub
mov
cmp
jecxz
sub
push
std
movsb
inc
adc
or
cli
out
push
sbb
mov
cmpsb
xor
cltd
ret
add
sub
adc
and
push
mov
stos
arpl
xor
cwtl
dec
mov
mov
inc
pop
sti
sbb
pusha
sub
aad
int
inc
xor
xchg
xor
sbb
mov
mov
sub
and
pop
mov
cmpsl
dec
xor
adc
jno
pop
jge
out
pop
cmp
xchg
shll
stos
ret
xchg
aas
jle
stc
sbb
cltd
rcrb
xchg
xchg
pop
cmp
mov
int
xchg
fnstsw
lcall
loope
fnstsw
adc
icebp
or
in
jno
or
mov
mov
mov
dec
shlb
push
cltd
mov
stos
fidivrs
stos
add
popf
mov
mov
sub
out
inc
pop
cli
bound
cltd
cmp
inc
inc
adc
test
push
jns
pop
adc
pop
dec
icebp
mov
lea
popl
cwtl
aad
mov
push
push
inc
adc
jle
test
fiadds
or
stc
inc
out
cli
enter
neg
out
pop
in
lods
cmp
shlb
popf
or
insb
sub
and
inc
sub
and
pop
mov
and
mov
pop
inc
into
jl
mov
xor
push
cmp
addl
jno
mov
pop
pusha
scas
xchg
stos
enter
push
popf
cld
lods
scas
pop
cmp
cmp
jbe
aaa
lahf
mov
push
dec
dec
movsl
dec
ror
inc
or
pop
xchg
mov
outsb
std
xor
pushf
pop
or
jne
lret
in
xor
xchg
cmpsb
cld
xor
in
test
cmp
ss
and
and
aad
pop
inc
dec
mov
out
andl
inc
xchg
lret
mov
cwtl
cmp
mov
movsb
aas
pop
push
aaa
jb
andb
mov
decb
add
xchg
ret
arpl
in
lahf
push
aas
addr16
jecxz
scas
add
xor
fwait
mov
popf
sarl
incb
repz
push
jl
hlt
or
pusha
nop
mov
ja
loopne
into
mov
jg
dec
clc
pop
in
das
icebp
mov
movsl
mov
popl
mov
aaa
xorl
aaa
scas
out
mov
adc
inc
fisttps
iret
add
sub
and
xchg
leave
fs
push
mov
loope
add
mov
sbb
out
enter
mov
std
sbb
cmpsl
pop
jno
sbb
aam
mov
xor
mov
gs
jb
mov
or
and
pop
pop
cmp
pop
movsb
mov
inc
inc
lock
lds
rorl
rorl
test
ret
sbb
xchg
out
jge
rcrl
cmp
sub
mov
dec
pop
pop
xor
popf
dec
inc
addl
lods
mov
and
cmpsb
dec
outsl
shlb
push
pushf
shll
enter
push
icebp
push
cmp
dec
cmc
or
add
cmpsl
jle
rcrl
int3
out
mov
or
cmp
inc
mov
data16
and
xchg
and
clc
xor
les
adc
icebp
movl
push
stc
clc
test
sub
fisttps
mov
xchg
mov
cmp
inc
adc
mov
orb
mov
mov
cltd
push
dec
roll
shrl
jnp
sbb
dec
sub
cmp
mov
pop
xor
inc
andl
mov
movsl
and
pop
repz
sbbb
call
aas
clc
stos
sbb
enter
sbb
mov
or
decb
mov
mov
aaa
cmp
adc
cmpsl
js
xor
repnz
lcall
testb
mov
jne
dec
jno
jg
bound
sbb
push
ficoml
xor
cwtl
sahf
sbb
pop
lahf
xlat
push
xchg
mov
pop
xchg
cltd
xor
fcoms
in
and
inc
mov
xor
sub
jno
neg
aam
pop
pop
mov
adc
inc
mov
bound
daa
jbe
push
int3
lcall
xor
xor
xchg
sbb
or
fs
insl
mov
loop
pop
push
add
mov
repz
dec
and
mov
out
jg
mov
push
lea
push
movsl
inc
mov
out
daa
inc
xchg
xchg
loopne
test
lret
cwtl
xor
push
adc
mov
nop
ds
sub
cmp
cwtl
push
lods
xchg
jne
jl
sahf
testl
stos
add
loope
test
jp
notl
jno
arpl
loopne
fsubs
ds
sbb
mov
pop
jnp
pop
jno
lock
mov
nop
fidivl
push
ret
sub
mov
cmpsl
sbb
mov
dec
stc
in
push
addr16
fistl
fisttpl
lea
xor
add
ret
fidivl
xchg
fs
mov
dec
xor
jp
ficoms
mov
add
mov
shr
inc
cli
mov
and
pop
cmp
inc
cld
ret
mov
lahf
jg
push
jle
cmp
sub
fwait
lea
loop
repnz
fldl
adc
pop
mov
cmp
mov
mov
sbb
mov
pop
adc
pop
sti
adc
mov
hlt
cmp
mov
std
fiadds
mov
pop
xchg
xchg
adc
lcall
and
aam
decl
fidivs
test
xchg
mov
xor
xlat
sbb
aam
mov
jp
mov
inc
int
in
in
lods
scas
ljmp
xor
cmp
inc
stos
xor
aam
das
icebp
push
jo
insb
rcll
ljmp
in
push
mov
test
leave
pop
incb
int
loope
int
das
cmp
sub
and
stc
mov
sbbl
cli
push
sbb
inc
cmpb
sarl
andb
stc
adc
add
xchg
xchg
jmp
mov
push
jno
outsb
jns
xchg
lret
sahf
or
mov
push
jmp
xor
xchg
add
xor
ss
add
adc
jmp
js
cmpsl
xor
xor
aas
pop
sbb
or
sti
mov
cmp
pop
loop
xchg
xchg
jne
mov
xchg
lds
lods
push
mov
xor
add
loope
divb
jge
fdivs
fildll
adc
mov
sti
push
or
sbb
movsb
bound
inc
xchg
aas
inc
rcll
sub
push
sarb
pop
mov
aas
mov
push
test
sub
xchg
test
pop
push
imul
out
aad
fwait
cmpsb
les
imul
or
int
jbe
arpl
stc
daa
sub
mov
mov
in
loope
add
sbb
adc
jecxz
dec
cmp
cmpsl
mov
dec
or
inc
dec
jmp
popl
filds
cmp
xor
in
addl
xchg
sub
xor
aas
adc
xor
addr16
mov
and
fwait
push
mov
push
fs
pop
adc
ljmp
mov
loope
bound
sbb
mov
xchg
lret
cmp
cli
xor
jle
sbb
arpl
insb
pop
in
jno
mov
fldl
jo
or
mov
test
mov
mov
xor
loope
fdivl
dec
fstpt
inc
sbb
xor
adc
jecxz
mov
push
jne
xchg
gs
cld
aad
iret
dec
aam
push
push
sti
jp
sub
lods
mov
add
sub
aas
sbb
sbb
pushf
xchg
mov
cli
xor
adc
cmpsb
push
sahf
mov
cmp
mov
outsb
or
test
pop
pop
and
test
jnp
jno
leave
int3
sbb
jne
cld
inc
push
inc
cmpsl
popa
pop
mov
mov
sbb
pusha
adc
inc
std
mov
imul
push
cmp
inc
fbld
je
jg
bound
leave
js
pop
mov
dec
push
pop
lods
push
mov
mov
inc
xor
std
sbb
inc
fwait
stos
imul
dec
out
jmp
jo
and
call
xor
inc
icebp
add
arpl
sbb
lea
cmp
xchg
mov
jp
xor
cmp
mov
pop
push
push
jg
or
in
and
call
jg
aam
mov
inc
ret
push
repnz
inc
xlat
xchg
push
mov
pop
cmp
loopne
push
xchg
enter
shlb
mov
pushf
mov
push
push
outsb
mov
and
rcrb
adc
and
mov
mov
dec
cmp
xor
mov
sub
inc
jge
mov
test
mov
dec
test
jg
cmc
rcr
sbb
add
popa
dec
cwtl
jmp
xlat
adc
popa
enter
mov
push
jl
jne
mov
rorl
mov
cmp
movsb
xchg
add
loop
add
push
push
inc
lahf
sahf
arpl
push
and
enter
mov
stc
sbb
and
pop
xchg
push
mov
lret
mov
pop
notb
push
pop
xchg
push
xchg
cwtl
mov
push
add
loopne
pop
or
inc
lea
jnp
mov
lea
xchg
pop
or
xorl
xchg
sub
repz
pop
ljmp
lods
push
push
add
pop
iret
inc
adc
add
ja
inc
leave
sub
mov
int
jmp
out
dec
adcl
xchg
dec
stc
push
lahf
arpl
stos
sub
xor
jb
sbb
out
push
aam
lcall
jnp
or
sub
pop
ss
fiadds
popa
or
add
roll
ljmp
adc
bound
add
and
cmp
int
jge
jne
shlb
mov
iret
lcall
popf
or
mov
xor
clc
mov
mov
or
add
lock
mov
scas
push
into
scas
dec
mov
sub
mov
mov
call
xor
jae
sbb
stos
cld
ds
inc
loope
lea
sub
shl
lahf
jno
adc
jp,pn
fldt
push
je
and
imul
fs
jp
mov
mov
push
loope
negl
adc
pop
xchg
mov
jecxz
push
jno
mov
or
fmull
shr
add
dec
int
roll
fwait
adc
testl
lcall
stos
add
cmp
or
and
test
pop
inc
push
dec
shlb
pop
mov
in
cwtl
jno
std
std
sbb
mov
dec
xchg
daa
fisubs
dec
sub
shll
lret
mov
es
jge
lret
push
push
adc
mov
add
popf
adc
jl
pop
inc
mov
adc
lret
xor
sbb
inc
shlb
mov
in
push
scas
xor
addr16
movups
cmp
jns
movsb
rorl
mov
mov
mov
fsubrl
add
cmp
jp
lcall
xchg
cmp
xchg
mov
scas
call
push
aaa
or
mov
xlat
and
mov
xchg
ja
inc
mov
dec
out
popf
or
sub
hlt
mov
ja
popf
adc
pop
lds
outsl
test
xlat
loope
push
ficomps
or
mov
xchg
sahf
fldenv
repnz
cmp
gs
mov
jae
testl
call
push
out
pop
push
xchg
clc
mov
nop
xor
inc
enter
jns
addr16
repz
cmp
and
xchg
cwtl
inc
xlat
repz
mov
jns
cmp
ljmp
add
or
scas
jle
jmp
or
and
pop
mov
mov
mov
cmpsb
xor
inc
stos
enter
xor
ss
push
rorl
xchg
lods
mov
xor
pushf
out
repnz
and
leave
cs
lahf
adc
je
lret
mov
mov
add
ret
out
cld
or
mov
mov
sub
push
fnstcw
jle
xlat
mov
and
jle
mov
push
jmp
je
lcall
push
pop
mov
mov
jle
push
int3
outsl
insb
xchg
fdiv
ret
lods
in
out
popf
xchg
mov
aad
dec
int3
sub
sub
cmp
dec
push
cli
in
mov
push
xchg
inc
mov
adc
inc
das
push
sbb
insl
add
xchg
or
fistps
lret
xlat
int
ds
out
add
gs
xchg
jecxz
ljmp
push
jno
push
cmpsl
pop
in
enter
sbb
push
sbb
test
loope
add
imul
daa
fistl
cmp
aad
or
cmp
lds
mov
mov
ret
decb
pop
jns
lods
and
fcompl
adc
push
mov
imul
movsl
cmpsl
cmovae
add
repnz
popf
and
inc
or
jno
adc
test
xor
rol
iret
fists
or
add
es
lock
stc
lods
xor
jle
jmp
mov
sbb
add
or
test
idiv
jbe
out
js
sbb
pop
xchg
mov
sub
mov
add
sbb
xor
jns
ror
lods
ret
jae
pusha
test
bound
test
push
xchg
loop
fmull
gs
cmp
jb
enter
in
test
inc
and
xor
dec
xchg
arpl
and
xchg
cmpsl
add
in
ja
icebp
mov
push
sbb
lock
insb
subl
shrl
push
scas
dec
xchg
adc
mov
lcall
cmp
stos
inc
sub
push
mov
and
out
mov
push
cltd
xchg
dec
popf
xchg
and
ror
cmp
pop
ficompl
add
arpl
mov
sbb
in
dec
ficoms
cmp
and
sub
mov
rorl
push
cld
dec
movsb
shrb
mov
pop
movsl
inc
xor
xchg
add
fdivr
xchg
jns
xchg
lea
dec
jne
bound
add
jo
jbe
mov
rorb
dec
mov
fwait
push
adc
fwait
lods
push
jne
mov
mov
repz
xchg
das
lahf
ficompl
dec
adc
add
xchg
pop
stos
dec
xor
leave
sahf
clc
dec
jb
mov
dec
sarl
sbb
movsl
dec
into
sub
loop
push
sub
mov
test
cmp
xlat
orb
es
outsb
pop
or
stc
add
push
fwait
nop
cmp
dec
cltd
insb
push
jl
push
js
inc
sbb
xchg
scas
push
test
push
sbb
pop
sbb
xchg
mov
xchg
enter
mov
and
add
jnp
mov
mov
add
scas
mov
outsb
sti
push
or
sbb
xor
hlt
outsl
ja
mov
leave
cwtl
popa
jmp
xor
dec
xchg
pop
xor
mov
scas
in
cmpsb
xchg
inc
js
xchg
xor
xor
or
add
push
mov
cmpsb
enter
test
dec
jno
inc
mov
xchg
scas
mov
add
ficoms
cltd
mov
lret
adc
cmp
out
loop
imul
test
mov
push
xchg
pop
pop
pop
nop
adc
push
push
stos
dec
call
popf
jnp
stos
push
inc
inc
sbb
cli
shll
out
cmp
test
in
add
pop
cli
adc
clc
xchg
mov
lods
call
int
xor
insb
xor
sbb
repz
jmp
xor
lds
jge
lahf
les
divl
or
cmp
xor
std
pop
cltd
movb
mov
fnsave
adc
fildl
xor
cmp
lcall
int3
out
inc
gs
rolb
mov
rol
repnz
js
fldenv
mov
xchg
test
loop
mull
movsl
or
in
lods
mov
js
xchg
jae
mov
jnp
mov
ja
and
or
mov
xchg
in
cmp
jo
adc
add
or
xor
pop
xchg
jne
xchg
inc
mov
cmc
xchg
push
mov
cmp
cli
push
fdivrl
jne
std
xchg
ds
cmpsl
iret
popa
addl
push
mov
xor
js
movsb
pop
and
arpl
std
cltd
lods
aaa
popa
dec
loop
aad
dec
mov
push
push
sbb
inc
pop
mov
js
inc
stos
repnz
out
fucomp
cltd
daa
les
rep
cmp
xchg
cmpsl
jmp
in
xchg
mov
xchg
pusha
out
or
add
aam
sub
inc
cmpsl
js
push
insl
inc
cmp
sbb
cmp
clc
and
sarb
push
sti
xor
std
xorb
mov
mov
dec
jg
mov
aad
dec
loope
push
dec
shll
pop
gs
jns
xchg
inc
cmp
ret
or
jae
xchg
push
gs
cmp
repz
xchg
dec
js
mov
adc
out
mov
sub
mov
loope
adc
sbb
jbe
clc
aas
jecxz
push
cltd
rcrb
jmp
cmpl
divl
adc
gs
mov
pop
fs
cwtl
fisubrs
pop
mov
pop
lods
sti
mov
int
shlb
jge
add
imul
sti
nop
adc
jns
jmp
insl
adc
jge
add
sub
xor
insb
sbb
lret
add
mov
jge
mov
pop
dec
add
xlat
jno
cwtl
adc
test
lods
add
aad
insb
add
mov
lods
out
fsubrl
cmp
fisubrs
or
mov
inc
adc
pop
je
sbb
mov
dec
xchg
dec
push
jp
and
lret
fidivs
cmp
js
sti
dec
mov
aam
mov
js
cwtl
sub
lcall
sbb
xor
mov
fidivrl
repnz
pop
mov
sub
xchg
push
dec
rcr
ret
insl
xchg
xlat
fs
icebp
scas
jae
cmc
iret
adcb
je
add
enter
mov
shl
movsb
imul
mov
mov
mov
movsb
popa
ljmp
dec
pop
sub
int3
adc
jns
pop
push
add
lea
lea
jns
imul
jno
cmc
push
cmp
xchg
call
add
mov
in
in
mov
xchg
addr16
hlt
mov
add
xor
loope
stos
sbb
out
push
cltd
jl
sbb
jae
sbb
pop
daa
adc
lods
js
cld
mov
xchg
aaa
mov
ljmp
es
sbb
dec
pop
arpl
or
pmaxub
out
sahf
jb
sarb
or
adc
idivl
xchg
add
fistpl
cltd
dec
test
clc
dec
or
sub
ret
call
fstl
ss
outsl
mov
cmpsb
dec
addr16
in
shll
ds
push
mov
mov
mov
mov
push
daa
pop
icebp
jmp
sub
sub
std
stc
mov
popa
push
adc
ret
dec
jo
mov
frstor
vhaddpd
xorb
push
lret
call
setp
inc
jg
int
hlt
push
inc
pop
mov
push
stos
mov
cmp
ja
dec
and
push
xor
dec
mov
jbe
lahf
xorl
pop
mov
rcrb
jb
cmp
jg
mov
insb
cmp
push
xchg
aaa
popa
sub
mov
push
and
mov
in
cmp
mov
movsb
lods
movsb
pop
ret
sti
in
pop
mov
repnz
add
cld
or
push
mov
in
and
inc
stos
ret
call
out
lea
inc
mov
std
add
and
push
pop
push
aaa
sub
sbb
jb
jmp
sub
mov
daa
movsb
dec
stos
jmp
inc
sub
ret
add
cmp
or
adc
je
scas
xor
sub
flds
inc
aam
mov
xchg
mov
outsb
pop
stos
mov
jecxz
shll
or
and
pop
cmp
xchg
int
mov
inc
inc
into
mov
and
test
mov
jno
xchg
jge
fstpl
mov
pushf
int
dec
xor
mov
out
pop
iret
sub
fdivl
pop
push
fcomps
decb
fcompl
out
jmp
mov
and
stos
adc
push
daa
mov
outsl
lock
mov
sti
or
mov
push
jmp
out
data16
ss
mov
push
std
cmp
and
out
stos
jp
subb
notl
dec
xor
lret
imul
inc
add
push
and
aas
add
outsl
sbb
jne
shrl
inc
pop
or
sbb
fdivrl
add
outsl
push
insb
inc
aaa
scas
add
outsl
xchg
aaa
mov
push
cld
cmp
gs
inc
or
xor
pop
movaps
js
mov
add
test
lods
cltd
pop
mov
pop
out
push
aam
mov
rolb
sbbb
sub
int3
mov
xchg
xor
mov
mov
loope
sbb
pushf
sti
cltd
inc
xchg
out
inc
aaa
sub
fcoml
sbb
sahf
lds
pusha
push
jnp
cwtl
xchg
mov
push
adc
mov
xchg
jl
pop
pop
out
and
lahf
push
adc
adc
aaa
cmp
mov
jbe
rolb
dec
push
add
lea
and
es
int3
out
pop
inc
sti
test
enter
cmpsl
inc
sbbb
jae
les
dec
push
hlt
push
out
inc
outsl
scas
in
jl
je
adc
imul
dec
aad
xchg
je
out
aam
mov
mov
js
and
rcrb
dec
nop
inc
add
add
xor
cli
icebp
inc
pusha
addr16
inc
or
ja
rcrb
sbb
jbe
shlb
lret
test
ds
add
xchg
dec
push
ds
pop
ss
pop
inc
test
fmuls
xor
lds
fucompp
jne
adc
lock
push
test
push
cwtl
mov
sti
cmp
xchg
gs
and
dec
jmp
fwait
pop
jmp
add
mov
push
outsb
or
inc
fnsave
mov
or
or
std
sub
fdivrs
cs
popa
lds
sbb
cmp
push
enter
cltd
cmp
sub
es
lret
out
pop
mov
ljmp
fld
and
test
mov
mov
jge
inc
ret
mov
addr16
push
push
push
lods
loopne
ja
sub
test
jnp
pop
inc
call
fsubrs
sub
cmp
adc
or
jecxz
sti
mov
nop
aam
push
jns
enter
dec
in
movsb
fcom
xorb
inc
xor
jbe
push
sbbl
xor
or
mov
sti
add
mov
mov
cmc
cvtps2pi
push
stc
insb
xlat
mov
pushf
cld
cmp
nop
repnz
or
cmp
daa
push
push
mov
jge
clc
shll
mov
roll
push
iret
cmp
and
cltd
lods
pusha
rorb
jg
int3
push
ljmp
mov
movsb
negb
pop
push
cmc
sbb
pop
push
mov
test
lret
push
jg
pop
cmp
sti
pop
add
push
pop
ret
cmp
add
orl
xor
mov
psrlw
test
cmpsl
sti
mov
push
cmc
or
mov
cmc
fsub
fimull
cltd
dec
pop
scas
lahf
push
cli
dec
std
mov
adc
icebp
mov
mov
adc
xchg
rclb
mov
fistps
sbb
pushf
inc
sbb
mov
in
aas
xor
or
add
in
fisubl
mov
mov
jl
inc
cmp
mov
daa
cmpsb
adc
scas
xorb
cmp
add
pop
mov
push
cmpsl
xchg
mov
outsl
add
in
dec
imul
js
popf
xchg
inc
sub
jns
pop
enter
pxor
adc
sub
jp
cmp
cmp
and
push
lcall
xorl
pop
fadds
les
mov
inc
add
scas
mov
cmpl
scas
icebp
mov
inc
push
push
xchg
xlat
inc
xor
or
fistps
dec
and
mov
arpl
popa
push
add
iret
stos
xchg
scas
push
adc
in
xlat
mov
data16
mov
sub
bound
fstpt
adc
mov
jle
xchg
lds
mov
push
jp
xorl
dec
and
icebp
aas
std
fsubrl
sub
loopne
int
ljmp
seta
bound
sub
loop
imul
cwtl
stc
push
pop
adc
dec
sbb
into
ljmp
inc
jns
imul
cmpsb
dec
inc
dec
pop
insl
loop
ja
push
sti
pop
push
test
and
and
clc
or
dec
cmp
iret
dec
daa
out
orl
fcoms
das
and
add
scas
mov
mov
cmc
call
rorl
jmp
aas
push
add
fistl
push
fs
jae
xor
mov
lret
outsb
jmp
in
call
shl
ret
push
outsb
imul
daa
or
cmp
fs
int3
xlat
jle
int
mov
stos
dec
je
pop
int
xlat
clc
sbb
jp
inc
rcr
mov
sbb
insb
jno
jbe
sub
arpl
fadds
rclb
pop
dec
je
decl
rcrl
xor
out
add
enter
inc
xlat
pop
sahf
push
mov
lock
pop
mov
sbb
dec
cmp
imul
fcom
sbb
or
movsb
js
aam
sub
add
dec
addb
mov
hlt
inc
cs
stos
int
add
mov
lea
lahf
sub
or
mov
addr16
adc
and
push
fisttps
in
addr16
and
pop
dec
movsl
out
sub
add
jns
hlt
add
fstpl
mov
inc
jg
outsl
out
pop
scas
push
ret
jbe
jne
enter
jo
mov
arpl
mov
xor
insb
in
dec
and
cltd
push
push
push
stos
out
subl
iret
xchg
adc
test
test
loop
nop
stc
cmp
sub
mov
pop
lods
xor
push
or
fcmovnb
cmp
scas
scas
or
mov
js
add
out
cmp
push
imul
jbe
pop
sbb
fiadds
adc
fs
jl
out
insb
mul
fidivl
pusha
mov
xchg
js
mov
jno
xchg
aam
sbb
jmp
in
mov
add
arpl
scas
and
and
lcall
push
push
mov
jecxz
out
ret
rclb
js
push
outsb
mov
adc
lret
fstpl
dec
xchg
or
mov
mov
xchg
pushf
xor
or
xchg
roll
mov
scas
cmp
mov
int3
loope
xchg
dec
aaa
or
mov
sbb
sub
sbb
fimull
mov
pop
push
sub
fmuls
outsb
es
push
cmp
mov
dec
add
dec
push
jno
mov
adc
sbb
pop
rcrb
mov
adc
movsb
pop
push
xchg
dec
nop
xchg
loopne
pop
jecxz
les
pop
push
sub
aas
ja
rcl
repz
imul
mov
stos
loop
xor
repnz
clc
movsb
pushf
jg
imul
cmc
fsub
jo
pop
mov
fwait
mov
test
adc
jecxz
mov
ljmp
shl
mov
lcall
mov
pushf
jns
pop
fucomip
icebp
dec
aas
jl
cmp
push
mov
sbb
pop
push
or
shl
push
flds
or
inc
push
std
or
sbb
pop
mov
pushf
pop
test
inc
loopne
jnp
add
adc
push
ljmp
stc
and
es
pop
in
pop
xor
call
add
out
and
leave
jp,pt
sahf
mov
xchg
pop
lea
divl
insl
push
fdivl
lods
mov
shll
pop
xchg
ret
sub
push
push
shrb
push
add
or
js
hlt
mov
fcompl
push
and
and
orl
pop
hlt
and
push
inc
add
loop
sub
pop
and
es
xorb
mov
out
mov
popf
into
or
pop
call
cwtl
dec
adc
sti
mov
cltd
faddl
mov
jecxz
fdivp
fildll
add
sbb
and
sub
push
daa
pop
xchg
mov
and
xor
sar
jecxz
xchg
sahf
popa
jle
aas
out
push
cld
fisubrs
xchg
sbb
je
mov
or
mov
inc
and
or
outsb
push
jge
add
sbbb
sub
pop
cltd
fidivl
inc
push
enter
pop
inc
out
popa
mov
test
push
pop
ret
push
dec
add
iret
xchg
cltd
ja
sbb
loop
jns
scas
and
fistps
cwtl
ret
dec
add
mov
mov
iret
mov
out
jmp
dec
or
mov
test
sub
test
push
mov
mov
mov
push
cmp
stos
sbb
xchg
cmp
cs
jno
dec
test
or
push
into
test
adc
sub
or
add
sbb
xchg
ss
sahf
lret
xor
lock
pop
scas
jmp
jge
mov
and
add
jo
mull
xchg
pop
sbb
add
or
mov
pop
cmp
cmpsl
cmp
push
adc
xor
jmp
inc
and
mov
pop
lahf
bound
test
adc
data16
mov
dec
sbb
xor
rorb
dec
jae
test
std
pop
mov
sbb
dec
shl
mov
inc
call
or
inc
xor
pop
mov
sub
jge
mov
sub
xchg
jne
push
dec
std
repz
inc
lret
xor
iret
stc
adc
test
or
insb
xchg
dec
adcl
xchg
xchg
jle
test
aam
cmp
call
jl
or
hlt
jge
dec
lahf
mov
dec
push
pop
movsl
jno
vpackssdw
das
ljmp
sub
mov
mov
add
cmp
cmp
sub
popa
fmuls
or
fidivrl
orl
test
orl
daa
cmpsb
mov
cld
cmp
jb
stc
cmpsl
out
lahf
cmc
nop
push
mov
insl
aad
cmp
dec
loope
xchg
xor
mov
fnstcw
ja
shll
xor
push
repz
jle
xor
xlat
mov
jle
mov
cmc
je
jne
rolb
insb
test
aam
mov
push
adc
and
fs
jmp
add
xlat
cltd
addr16
movsl
insb
mov
outsb
test
clc
cmp
xor
mov
xchg
lahf
mov
cs
lahf
xor
sub
push
or
stos
je
adc
cmp
mov
mov
jp
shll
stc
loop
andl
icebp
pop
mov
pop
dec
lcall
push
and
pop
ret
xchg
pop
into
lret
scas
pop
pop
leave
cwtl
cmp
js
mov
ljmp
push
rclb
lret
filds
out
adc
xor
arpl
dec
lods
fdivp
push
push
or
mov
sub
in
test
jle
js
jae
js
and
cmp
xlat
jmp
mov
or
mov
jg
dec
adc
push
call
outsb
mov
lahf
lds
fwait
sbb
roll
mov
mul
shlb
clc
sub
outsl
cmpsb
push
insl
mov
mov
sub
push
in
sbb
lods
jno
leave
frstor
stc
dec
dec
push
scas
js
insl
add
xchg
fwait
int
fcmovnbe
int3
aad
sbb
add
shlb
fldenv
xor
jle
xor
or
mov
ret
xchg
add
or
jno
imul
stc
orb
and
pop
cmp
in
push
mov
rcrb
fwait
inc
rorb
pusha
pop
mov
sbb
mov
pushf
mov
push
jo
sub
or
popf
push
cmpsb
cmpsb
pop
popa
inc
cmp
cmp
adc
xlat
pop
bound
scas
test
bound
sbbl
shl
add
push
sub
test
sti
adc
jnp
in
mov
push
cmc
adc
jb
lahf
lahf
adc
sub
jo
jecxz
pop
xchg
and
ss
cmc
dec
in
cli
hlt
xchg
push
insb
enter
addr16
cmp
add
cli
insl
aam
push
pushf
out
aas
fistpl
ficomps
hlt
fsubs
sub
cli
jmp
rolb
repnz
imul
jge
adc
gs
mov
loopne
fmuls
sub
iret
sub
add
mov
shl
aam
cmp
insb
fstpl
add
pop
ret
insl
das
icebp
out
dec
in
mov
aam
pop
lcall
jo
dec
jnp
ficomps
shrb
jge
das
aad
in
scas
or
psllq
outsl
addr16
fcmovb
es
icebp
int3
js
pop
fmuls
xchg
push
jmp
test
loop
dec
std
dec
xrelease
mov
cwtl
mov
adcl
adc
cltd
push
sarb
push
js
fs
in
xchg
bound
popa
dec
fistpll
cmp
sarb
das
mov
scas
cmpsb
mov
or
scas
and
ljmp
scas
push
cmpl
mov
ret
cmp
cmp
fidivs
push
pushf
sbbb
icebp
inc
mov
enter
cwtl
out
call
ja
xor
xchg
jne
xlat
dec
push
inc
sub
cltd
es
mov
sarl
dec
and
adc
out
mov
mov
push
sbbl
adc
mov
dec
xlat
ljmp
inc
loope
fcomip
dec
dec
repnz
pop
sbb
inc
orl
in
and
mov
lahf
xor
mov
push
sahf
push
nop
fisttpl
repnz
cmpb
mov
das
dec
lock
push
xor
test
sbb
decl
jns
jl
into
je
fldcw
ljmp
lock
sbb
push
shrb
push
icebp
dec
fsub
pavgw
mov
add
int3
dec
or
sbb
sar
cmp
mov
idivl
jb
nop
cwtl
imul
int
inc
push
test
fistps
jo
dec
jg
bound
and
add
mov
jns
sbb
lret
das
xchg
xor
pop
jbe
jp
cld
and
ficompl
push
inc
fwait
sub
mov
orb
aam
and
outsb
push
mov
aam
repnz
cmc
out
daa
aad
cmp
ljmp
jle
out
sbb
adc
and
mov
lea
push
imul
xchg
mov
rcrb
das
pop
fistpll
push
test
cld
and
sub
enter
or
push
xchg
cmp
sub
sahf
ror
pusha
add
jecxz
movsb
test
mov
push
in
mov
shrl
sub
pusha
pusha
or
inc
mov
jg
int
pop
fisttpll
add
rcll
or
or
mov
or
das
push
aad
add
test
push
sarl
stos
pop
add
out
jmp
ss
push
int
mov
notb
scas
mov
mov
inc
push
pop
jne
out
sbb
mov
rcll
mov
vaddpd
negl
xor
xchg
dec
push
jmp
jo
mov
mov
stos
fildl
jge
mov
pop
into
xchg
icebp
cmp
mov
dec
push
jecxz
jg
push
mov
ret
lods
xchg
adc
int
dec
dec
shll
scas
mov
dec
fidivrs
push
cwtl
sbb
cmp
inc
or
mov
lret
push
sbb
leave
adc
iret
push
aad
xchg
sbb
push
ljmp
adc
fs
stos
push
jbe
int3
jmp
outsb
cmp
or
out
rorb
loopne
pop
int
dec
dec
mov
sti
xchg
pop
sarl
mov
fimull
jp
inc
jmp
mov
imul
and
mov
add
add
push
scas
test
or
int3
enter
rclb
adc
stc
xchg
lea
dec
push
mov
leave
ret
push
jecxz
popa
pop
xchg
jg
inc
cmp
add
jmp
cmc
and
fists
mov
fnstcw
lods
into
mov
inc
xchg
adcl
and
in
lea
movsb
fadd
inc
cmp
inc
in
rolb
lock
push
inc
mov
es
xchg
push
shlb
dec
fsubrl
mov
push
jp
sbb
xchg
pop
push
sahf
out
cld
push
leave
sbb
and
or
je,pn
mov
mov
stos
movb
mov
mov
mov
dec
xchg
dec
fdivrl
fists
push
out
sbb
mov
clc
sub
adc
pop
imul
mov
lods
call
cmp
lret
sbb
or
inc
adcl
aad
inc
push
dec
pusha
stc
push
cmp
dec
cmp
repnz
pop
fdiv
and
nop
or
fcomps
mov
pusha
sbb
mov
xchg
and
and
and
or
pop
push
push
push
and
mov
push
loope
sahf
je
inc
mov
mov
pop
push
push
add
xchg
pop
icebp
outsl
mov
stos
fsub
testb
addr16
lods
push
xchg
pusha
fdivr
lret
xchg
and
pop
popa
pop
daa
incl
jecxz
inc
loope
add
mov
xor
mov
pop
js
xor
xchg
sbb
push
pop
lea
or
stos
das
das
in
pop
ljmp
int
aad
xchg
pop
test
or
xor
and
dec
mov
fldln2
shlb
mov
stc
mov
stos
mov
fwait
inc
lods
jmp
xchg
and
add
mov
cmp
pop
into
out
insl
push
cmc
sub
inc
xor
or
xor
mov
jecxz
xchg
push
cmp
ficoml
incl
lods
adc
and
xchg
insb
fcmove
xor
test
pusha
js
or
xlat
push
push
xchg
mov
mov
enter
or
cmp
in
ss
xor
faddl
lods
jnp
loope
sub
and
imul
inc
fstl
jmp
sahf
lods
xchg
adc
xchg
scas
xor
mov
and
sbb
xchg
mov
shr
add
pop
das
icebp
push
sub
addl
xor
cld
enter
cmp
xor
mov
cmp
into
das
xor
sub
lahf
sub
inc
sub
aas
sub
push
pop
faddl
sub
cmp
mov
ffree
dec
sahf
mov
mov
cld
xor
call
rcrl
jmp
push
repz
mov
adc
movsl
or
jge
fdiv
repnz
mov
loope
stos
xchg
sbb
imull
ja
cmp
and
idivl
sub
jp
push
mov
pop
daa
movsb
push
pop
jp
les
subb
rolb
mov
jnp
clc
sub
std
xor
mov
aas
mov
jb
imul
sbb
dec
out
cli
xsaves
and
add
stc
hlt
mov
in
push
mov
sub
or
lea
std
and
arpl
addr16
pop
sub
mov
sarb
out
and
lods
sbb
xor
dec
insb
jae
mov
or
pusha
mov
std
lret
dec
mov
int
pop
dec
movl
lds
mov
add
das
add
mov
mov
push
add
jne
xchg
arpl
adc
pusha
out
lret
push
sub
negb
sbb
jbe
jmp
pushf
or
bnd
shll
and
sub
xor
dec
xor
xchg
sbb
dec
xor
jno
lock
and
repz
scas
mov
xlat
sti
push
inc
arpl
dec
test
fcomp
cld
fstp
movsb
sub
cmpsl
inc
dec
or
movsb
mov
out
cmpsb
mov
jge,pn
das
fxch
repz
xchg
aad
pusha
fcomps
pop
popf
mov
lahf
inc
aad
dec
and
cmc
cmp
sbbl
mov
push
add
dec
inc
jb
mov
movb
sbb
jmp
movsl
adc
xchg
test
push
int3
inc
rolb
test
jns
out
dec
fs
fs
xor
insb
cmc
xor
dec
icebp
mov
test
push
stos
mov
sub
mov
pop
int
js
push
decb
sbb
ljmp
cli
dec
popa
mov
cmpsl
jmp
inc
push
add
sbb
sahf
shlb
imul
xor
cwtl
inc
adc
lods
ljmp
test
in
jno
sbbb
int
mov
xorb
aad
int3
pop
mov
push
loope
jno
sbb
int3
push
xchg
rorb
push
repnz
fildll
sahf
xchg
pop
jmp
and
bound
out
pop
mov
fs
or
xor
or
push
imulb
inc
mov
add
lret
jbe
push
cmp
vpcmpgtd
xorl
jl
xchg
aaa
scas
je
outsb
das
fistl
mov
sub
jne
add
jae
outsb
sub
sub
cmp
lahf
jae
xor
movsb
and
push
arpl
mov
pop
shrl
jge
pushfw
ja
out
cwtl
in
cmpsl
lret
jmp
cli
mov
jnp
xchg
sbb
jmp
clc
aad
sub
add
ret
fstl
sahf
sub
jo
mov
subl
lahf
cmpsb
adc
cld
sbb
cmpsb
mov
add
lret
adc
aas
loope
imul
repnz
inc
lods
into
in
repz
loop
dec
aas
fistpl
movsl
mov
out
push
stos
xchg
call
push
xchg
popf
les
leave
jl
xor
fnsave
pop
mov
inc
adc
and
sbb
or
rolb
dec
fbstp
sbb
sub
pop
inc
arpl
cmp
sub
repz
rcrb
push
out
sahf
jle
cli
add
mov
pop
divl
aad
testl
lahf
gs
mov
fsubr
pop
jp
imull
jmp
mov
insb
inc
div
mov
sbb
and
xorb
cmp
dec
data16
jmp
jge
mov
ret
jle
fistps
dec
or
out
add
outsl
gs
ja
fbld
int3
cmpsl
add
push
ss
xchg
lea
or
or
filds
xchg
jae
insl
stos
lret
rclb
cmp
je
mov
mov
cmpsb
push
jmp
mov
jae
fdivl
xorb
shl
shr
jno
lahf
nop
mov
pop
fwait
mov
mov
test
jmp
pop
xor
or
dec
and
mov
enter
and
gs
ret
mov
dec
fcmovnb
aam
cmp
imul
scas
lock
in
cli
jne
hlt
pop
hlt
mov
pop
rclb
aad
test
aam
movsl
xchg
mov
adc
mov
loope
es
dec
mov
inc
int
fs
mov
sub
lock
xchg
cmp
mov
pcmpgtb
arpl
adc
xor
insl
mov
arpl
fdivrp
fmull
ja
sahf
bound
test
add
inc
lods
icebp
arpl
hlt
popa
fdivr
adcb
pusha
and
xor
mov
scas
dec
ffreep
xor
mov
dec
dec
js
daa
notb
jne
fwait
lret
out
stos
cli
mov
cmpsb
adc
lods
call
ds
movsl
lea
iret
movsl
inc
mov
jne
setl
test
xchg
jle
adcb
test
sub
and
mov
std
shld
add
mov
sbb
lock
add
sbb
in
jo
push
cld
cs
jne
sub
jbe
add
notb
sahf
stos
mov
sahf
jne
lea
add
sub
ljmp
cli
in
push
jecxz
mov
lahf
mov
sarb
or
pop
fimull
jno
inc
ds
cmp
adc
pop
lock
jp
outsb
sbb
test
out
iret
cmp
lods
xor
stos
or
sahf
xor
movsb
cmp
add
test
mov
cltd
add
jno
loop
loope
ret
int3
imul
xchg
outsb
lea
rclb
jb
inc
inc
lcall
and
mov
cli
xor
xchg
stc
and
lods
insb
push
mov
imul
xchg
pop
jbe
mov
pop
push
sbb
aam
aad
jno
popf
cwtl
rolb
aaa
mov
mov
sarb
test
dec
sub
pop
and
inc
js
xor
or
pushf
dec
ret
sti
in
jg
dec
inc
js
in
jl
dec
outsl
mov
sbb
jl
hlt
sub
inc
xor
scas
int
mov
sub
xchg
repnz
test
or
push
xor
xchg
pop
or
jb
addr16
hlt
mov
imul
stc
out
sarl
fcmovu
push
add
pop
fcoms
and
adc
out
dec
fisubrs
jmp
pop
mov
push
in
mov
lret
arpl
shrl
dec
cmp
inc
lret
imul
pop
insb
lock
and
adc
cmp
push
adcb
popf
nop
or
add
cmpsl
dec
push
ja
cwtl
outsl
out
jbe
xor
cmpsl
push
les
inc
or
lock
call
jae
lret
and
repnz
adc
and
pop
