xor
inc
ret
push
push
call
xor
push
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
mov
push
call
pop
orl
orl
call
mov
mov
call
mov
mov
mov
mov
mov
call
call
cmp
jne
push
call
pop
call
push
push
call
push
call
mov
mov
lea
push
pushl
lea
push
lea
push
lea
push
call
add
mov
cmp
jge
push
call
pop
push
push
call
call
mov
mov
pushl
pushl
pushl
call
add
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
call
ret
jmp
jmp
cmpl
jne
jmp
push
push
pushl
call
add
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
jmp
push
push
call
pop
pop
ret
xor
ret
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
mov
lea
push
mov
call
add
mov
mov
addl
ret
jmp
jmp
add
ret
ret
xchg
xor
xchg
ret
xchg
addl
xchg
ret
add
popl
push
mov
pop
push
xchg
push
xchg
add
push
xchg
add
xor
push
xor
pop
push
popl
pushl
ret
jmp
ret
ret
push
push
push
push
push
push
push
push
push
push
push
push
call
add
pop
pop
pop
pop
pop
pop
pop
ret
push
pop
ret
mov
ret
push
popl
ret
push
xchg
xchg
xchg
xchg
xchg
xchg
push
xchg
add
mul
xchg
xchg
xchg
push
pop
push
pop
add
add
ret
pop
push
xchg
ret
pop
push
xchg
ret
push
add
add
ret
push
xchg
add
ret
add
push
mov
push
push
push
xor
push
mov
xchg
mov
push
push
call
push
call
push
push
call
push
push
push
call
push
push
call
call
push
push
push
call
push
push
push
push
call
push
push
call
pushl
xchg
add
push
push
push
call
push
call
push
push
call
call
push
push
push
call
push
cmp
jae
ret
add
call
cltd
out
test
arpl
add
out
push
sub
out
add
scas
dec
cmp
daa
mov
and
sbb
int3
andl
fdivr
and
orb
jg
jbe
xor
push
adc
mov
xlat
sub
dec
das
push
imulb
xchg
pushf
into
jp
adc
js
add
fdecstp
push
fstpt
in
jg
lcall
int
jns
lea
dec
sbb
jecxz
test
dec
jl
and
ficomps
pop
loope
cmp
inc
or
call
pop
push
mov
cmp
outsl
adc
and
jl
bound
dec
xchg
xchg
shll
stos
sbb
arpl
lahf
jne
push
aaa
fldenv
push
arpl
push
cmpsl
aad
aam
adc
addr16
scas
or
jmp
fistps
stos
mov
mov
mov
mov
xor
jns
xchg
call
dec
cmpsl
out
inc
cmp
in
mov
mov
adc
xchg
or
jle
or
cmp
mov
jmp
jno
cmpsb
scas
fisubs
adc
or
cs
test
or
ljmp
sti
cld
push
push
pop
fs
jl
push
mov
nop
mov
cmp
pop
jae
je
cmovbe
push
inc
or
pop
mov
adcl
cmc
aaa
out
in
mov
cli
lret
and
movl
test
movsb
fdivrs
ljmp
std
pop
shll
push
mov
cltd
lock
mov
jp
sbb
xchg
add
push
ret
out
xchg
ret
test
pop
imul
js
xor
push
call
inc
sbb
scas
mov
and
mov
and
outsl
push
mov
cmpsb
cmp
jno
push
out
mov
sti
jl
adc
push
repz
cmp
adc
sub
mov
or
stos
hlt
mov
cmpsl
in
fcmovbe
and
cs
pop
icebp
mov
dec
rcrl
push
lcall
stc
bound
and
mov
lea
ret
dec
outsl
mov
xor
xor
inc
mov
les
cwtl
jnp
xchg
outsb
lds
jp
sahf
pop
imul
sub
ss
adc
outsb
scas
shlb
cwtl
movsb
pop
push
test
mov
push
xchg
sbb
xchg
mov
scas
ljmp
out
mov
xor
adc
stos
repz
shrb
sbb
testl
repnz
das
in
cmp
cmpsb
pop
add
xor
rcl
negl
fistpll
inc
push
cmp
imulb
pop
mov
shrl
lcall
test
pop
cmp
jp
in
pop
adc
outsb
push
pop
enter
xlat
and
lea
sub
fnsave
into
sub
adc
scas
xchg
sbb
sahf
sub
xchg
push
push
imul
in
nop
scas
xchg
or
stos
dec
jne
rol
in
stos
add
and
add
aaa
loop
popfw
lret
sbb
mov
scas
aad
lods
insb
add
fildl
or
stos
icebp
push
movsl
das
roll
mov
push
pop
fs
iret
scas
mov
sbb
enter
mov
lret
add
test
mov
jp
std
stos
cmpsl
inc
cmc
outsl
in
arpl
movsl
xchg
pusha
inc
jno
pushf
jae
mov
movsb
jbe
fs
pop
xor
mov
cli
shlb
cli
add
jle
imul
xor
dec
shl
movsl
or
js
adc
xor
movsb
and
jbe
cwtl
cmp
mov
push
mov
cmp
dec
add
push
xor
jp
rcr
mov
roll
aaa
jb
lock
cltd
or
shll
stc
pop
xchg
jb
inc
enter
ret
dec
pop
dec
and
out
push
dec
push
cmpsl
mov
mov
popa
dec
jb
mov
mov
imul
cmpsl
popf
push
cmc
clc
xchg
ljmp
jp
cmp
mov
jns
in
jnp
pop
stc
mov
xchg
or
cmp
stos
xchg
adc
bound
loope
lds
inc
aaa
imul
sub
sbb
add
or
cmpsl
jge
sub
mov
rcll
jecxz
jns
fidivrl
lret
je
inc
mov
pop
fisttps
je
andb
adc
scas
lret
adc
inc
sub
mov
dec
test
ret
nop
cmp
mov
repnz
pop
jno
imul
stc
push
test
inc
pop
xor
repnz
jge,pn
pop
icebp
insl
dec
dec
dec
adc
cmp
mov
mov
movl
test
push
xchg
push
inc
push
or
and
cmc
sbb
shlb
xchg
stc
into
test
fidivrl
sbb
sub
jl
out
and
mov
push
iret
mov
jg
xchg
imul
decb
add
cli
aaa
xor
and
sub
lods
arpl
push
outsl
lret
addr16
xchg
fsubs
adc
pop
adc
testl
add
mov
dec
pop
add
fs
outsb
icebp
aad
fldenv
pushf
inc
xchg
insl
mov
jbe
int3
xor
stos
hlt
out
fs
jg
dec
mov
sub
movsb
sub
cmp
fidivs
lods
and
sub
test
mov
sub
in
sub
mov
scas
mov
cmp
imul
mov
dec
or
ja
in
cmpsb
mov
pop
mov
mov
xchg
rcrl
mov
cmpsb
addb
ret
outsl
imul
or
mov
xor
dec
mov
jb
pop
fsubr
test
add
adc
push
pop
pushf
xchg
cmp
scas
mov
popa
and
lret
stc
lock
add
sub
add
clc
aas
test
mov
cmpsb
cmp
test
xor
das
iret
mov
aad
out
in
data16
and
add
add
xchg
leave
lods
lret
xor
add
add
cmp
in
xchg
jno
lods
nop
sahf
pop
loope
aaa
jno
xchg
dec
cltd
sub
addps
cld
cmpsl
xchg
insl
or
jbe
xor
sub
cld
in
mov
ret
push
sbb
scas
sub
pop
mov
sub
stc
mov
lcall
add
mov
inc
and
dec
sbb
in
sbb
push
xor
stos
mov
cltd
andl
jg
jns
js
idivl
loopne
mov
mov
or
sbb
je
jge
dec
xchg
shrl
jge
inc
fimull
ffree
es
int3
mov
inc
pop
les
add
jmp
inc
jmp
mov
xor
js
xlat
fsubrs
icebp
addr16
nop
cmp
fwait
mov
sbb
xor
mov
loopne
xor
cmpsb
aam
cmp
aam
test
dec
mov
pusha
call
int3
jge
add
call
pop
iret
in
daa
sarl
fidivl
xchg
xchg
aas
fwait
jno
mov
or
and
into
or
mov
iret
xchg
add
inc
jmp
ljmp
cmp
in
in
cmpsb
outsl
fs
daa
aad
out
or
cmp
outsl
and
out
adcb
jae
pop
and
xor
fimull
mov
repz
int
into
push
icebp
mov
in
out
loope
cs
xor
sub
lods
inc
ja
hlt
and
std
mov
push
gs
mov
or
out
adc
inc
cmp
pop
movsl
push
aam
lods
mov
mov
scas
cli
and
lds
push
jo
inc
aas
js
jmp
xchg
pop
push
mov
repnz
jmp
fbstp
out
sbb
and
adc
and
mov
loopne
add
and
add
jmp
mov
in
ds
mov
cmp
adc
xchg
add
bound
and
adc
push
fcmove
and
cmp
mov
add
xchg
jne
mov
fldenv
cmp
xchg
outsl
mov
jne
shrl
es
mov
xchg
out
cmpsl
add
call
and
sub
mov
jbe
mov
mov
cmp
fcompl
push
add
ds
sub
aaa
xor
ret
inc
sbb
adc
pushf
adc
mov
pop
cmp
mov
or
push
jmp
mov
dec
imul
mov
adc
imul
lcall
push
mov
mov
adc
jnp
sub
push
das
cli
and
aas
in
xchg
sub
sbb
mov
adc
daa
arpl
pop
sub
stos
popa
inc
mov
scas
pop
mov
ret
pop
popa
scas
push
pushl
xor
scas
jecxz
mov
lcall
push
imul
sub
jmp
pop
fmul
xor
out
in
xor
call
adc
add
push
push
rcr
ret
rcr
cmp
mov
test
mov
arpl
mov
cltd
pop
xor
aas
jb
sbb
mov
xor
rorl
cld
jnp
adc
mov
push
in
rcll
lock
neg
pop
xchg
imul
adc
jl
popf
inc
push
arpl
adc
mov
sbb
cmpl
cmpsl
pop
inc
sub
rcl
sub
scas
mov
loopne
orb
jbe
out
mov
test
pushf
and
sub
xlat
mov
xor
xchg
les
fsts
xor
mov
aas
fisubrl
cmp
pop
sub
loope
in
dec
jmp
mov
or
rcrb
push
ret
rclb
sbb
sub
mov
mov
jne
and
aam
andl
and
pusha
push
insb
ss
cli
scas
test
push
cmp
xchg
negl
popa
jl
aaa
inc
into
cmp
sbb
sub
cmp
sbb
mov
cmpsb
mov
jb
inc
in
aad
mov
ret
jle
sub
out
xchg
cwtl
pop
and
dec
pusha
xchg
xchg
mov
cmc
xlat
shlb
fcomi
jle
mov
daa
pop
sub
jbe
sbb
or
mov
sbb
xchg
ja
sub
cltd
dec
sahf
and
es
das
lcall
repz
repz
divl
bound
pop
push
mov
movsb
je
cmc
inc
inc
shll
mov
cwtl
dec
fimuls
pop
dec
jecxz
jb
jb
ds
arpl
sbb
dec
push
mov
cmpsl
std
lds
into
fnstsw
icebp
sub
movsb
sbb
push
rcr
xor
xchg
mov
add
mov
mov
push
pop
adc
andb
sbb
bound
je
ret
loope
fcmovnbe
add
push
lds
fs
adc
push
bound
lds
dec
sbb
punpckldq
lds
stos
dec
adc
stos
subb
dec
adc
ss
popa
daa
cmpsl
cmp
xlat
mov
mov
push
mov
fists
mov
and
int3
int3
sbb
xchg
dec
jns
jl
hlt
out
notl
fs
cmp
in
cmp
in
stos
pop
or
add
xchg
add
fcompl
dec
dec
sbb
sub
mov
push
aam
sbb
fs
mov
divb
jne,pn
jmp
lcall
inc
inc
and
pop
adc
xchg
mov
icebp
ja
push
ficoms
push
xor
repnz
adc
stos
cmp
divl
mov
fidivl
fstps
mov
xchg
mov
lock
into
xchg
lret
pop
jmp
ja
dec
sub
lahf
xor
fsubs
cmp
cmc
cli
outsb
jb
roll
xchg
cld
inc
pop
nop
test
mov
popf
xchg
sar
push
sbb
in
scas
xor
mov
add
add
ret
or
pop
jg
mov
push
push
or
sysexit
mov
pop
inc
jmp
cmp
or
xchg
or
xchg
push
jecxz
lods
gs
ret
inc
xchg
cld
rol
out
push
jl
inc
popl
mov
pop
ret
xor
push
and
sbb
cld
test
cmp
and
mov
lret
mov
es
push
sub
fwait
and
lret
sar
mov
adc
ficoms
dec
mov
xchg
cmp
xchg
mov
mov
mov
push
lcall
les
pop
sub
aam
or
and
mov
mov
sub
dec
dec
and
sbb
testb
pushf
mov
xlat
mov
adc
pop
sub
cmp
test
adc
pop
rorl
repnz
mov
mov
mov
inc
push
jg
sub
loopne
push
or
insl
mov
je
daa
mov
outsl
notl
add
mov
push
and
mov
sub
jle
inc
jb
jecxz
dec
es
imul
push
jne
push
sahf
sbbb
stos
xchg
ds
loope
sub
push
cld
pushf
mov
mov
inc
mov
mov
int3
ret
stc
cmp
aad
xor
fwait
out
mov
dec
lea
xor
dec
test
aaa
xor
arpl
sub
dec
repnz
leave
inc
ljmp
cltd
jmp
sbb
gs
push
popf
cmp
inc
sbb
cli
jge
xchg
out
stos
test
adcb
or
mov
gs
xor
xor
sbb
and
add
mov
mov
fstpt
or
and
lock
jnp
add
ja
inc
rclb
fidivrl
sbb
cmp
mov
push
inc
shl
lcall
mov
mov
mov
jmp
sub
mov
mov
xor
adc
inc
cmpsb
sbb
hlt
addr16
adc
sbb
xor
sbb
dec
mov
mov
ficoms
cmp
sub
fsubrs
imul
pop
or
cmpsb
cli
lcall
add
mov
sbb
ds
enter
ret
inc
cli
jmp
fidivrl
jmp
ljmp
fs
aas
jbe
inc
cmp
sub
ja
push
fwait
mov
sub
push
jae
add
xor
lret
sub
test
fisubs
pop
test
popa
es
out
fnstcw
mov
loop
call
add
mov
sub
jp
jp
stc
pop
pop
repnz
fwait
adc
std
push
mov
mov
cmp
adc
iret
sarb
scas
jb
out
cmp
fnstenv
rcr
in
fstp
popa
inc
xchg
or
pop
repnz
outsb
sbb
in
jg
sbb
dec
sbb
sub
jbe
fwait
int
cltd
div
cwtl
lods
negb
icebp
test
and
test
push
pop
jg
xchg
sti
jle
shll
cli
movsb
cwtl
into
add
mov
jge
aad
addr16
push
add
fcompl
mov
ljmp
xlat
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
movsb
sbb
mov
jecxz
es
mov
sahf
mov
mov
xlat
movsb
push
rolb
stos
out
arpl
pusha
push
lcall
shl
rol
jmp
insl
cmp
push
mov
addr16
fidivrl
jge
sbb
inc
ffree
stos
xor
cmovl
inc
call
orb
in
fsubs
icebp
movsb
stc
lret
pop
add
xor
mov
pop
das
xchg
jo,pn
sub
xchg
sbb
xchg
inc
add
out
shlb
mov
call
mov
cmc
scas
xchg
mov
sahf
pop
sub
inc
xchg
inc
outsb
iret
in
or
jge
cmc
iret
push
cmpsl
leave
pop
xlat
iret
cmpsl
pushf
pop
and
cmp
push
push
testl
out
mov
mov
mov
lea
push
lods
ds
test
mov
pop
into
and
adc
scas
sarb
xlat
in
decl
sbb
bswap
into
mov
jae
or
ficompl
ljmp
rcll
in
jg
mov
fidivrl
pusha
mov
orl
push
sub
push
xchg
xchg
cmovnp
mov
and
mov
cwtl
cmp
or
mov
push
cmc
xchg
fwait
aam
mov
es
in
cmp
sub
sbb
mov
mov
loop
adc
fsubrl
inc
dec
adcl
mov
xor
mov
fwait
imul
dec
stc
pop
mov
push
dec
sbb
pop
cmpsl
jae
lock
insl
insb
mul
int
ss
xlat
push
clc
and
aas
bound
xchg
icebp
lods
ss
loop
lea
jb
out
push
inc
sub
imul
mov
or
and
cltd
rclb
lods
shl
insb
xlat
push
inc
xor
sarl
cmp
xor
pushf
imul
cmp
cmp
add
adc
adcl
or
cmp
dec
jp
pusha
ljmp
pop
shll
outsb
adc
loopne
pushf
xor
cld
idiv
mov
push
mov
mov
arpl
repnz
mov
pop
ss
fists
rdpmc
mov
cwtl
ljmp
mov
test
mov
sti
cs
dec
pop
adc
testb
fistpl
ret
mov
mov
add
cmp
xchg
jns
xor
adc
mov
fidivrs
stos
xlat
sbb
mov
pushf
cmp
stos
rcrl
enter
dec
sub
ud0
ret
xchg
mov
mov
mov
fbld
shll
test
push
gs
out
inc
mov
xchg
ljmp
insl
lcall
dec
or
in
shlb
or
ja
insb
and
sub
xor
sub
out
lods
lods
push
loop
add
push
dec
rclb
jp
mov
int3
out
popa
jb
lret
cwtl
inc
jb
push
pop
add
enter
cmp
mov
push
jecxz
iret
cmc
pop
filds
das
mov
xor
aas
dec
mov
aaa
outsl
mov
adc
jno
or
testl
pushf
iret
lret
pop
loop
in
out
adc
in
ret
adc
scas
and
inc
mov
pop
in
push
in
sub
sbbb
jae
jbe
repnz
jecxz
sub
test
lret
cmp
divl
push
mov
jp
xchg
adc
ret
jp
jae
mov
mov
and
stos
out
pop
adc
push
push
jnp
rorl
jns
ret
add
adc
in
fcoml
lea
fs
mov
int
lret
adcb
add
aas
fsubs
push
xchg
repnz
and
and
add
cltd
mov
aas
dec
fwait
push
add
fstl
xor
aaa
mov
cmpsb
cmc
cmovl
mov
aas
mov
cltd
nop
js
jp
stos
sub
cmp
mov
lds
push
push
pop
cmp
mov
push
sub
dec
ljmp
mov
pop
xchg
clc
xlat
or
mov
jl
push
fwait
inc
mov
xor
xchg
shrl
mov
xor
jg
xorl
icebp
cmp
jle
xchg
mov
lret
leave
mov
ja
movsl
cmp
jl
fbld
mov
repnz
mov
xchg
lds
or
lcall
cmpsb
xor
adc
add
stos
test
add
out
dec
lret
jbe
push
adc
sahf
shrb
lds
sub
xchg
test
and
dec
out
xlat
nop
out
gs
pushf
js
lret
mov
repnz
cmpsl
pop
nop
xor
xchg
lcall
xchg
jns
int3
jl
push
dec
fistpll
ret
insb
lods
shr
mov
cmc
inc
sbb
cs
cld
pop
aam
mov
ret
inc
lea
inc
jne
adc
cltd
pop
notl
jo
hlt
ljmp
sbb
pop
jg
pop
inc
test
xchg
fsubrs
sarb
sbb
addr16
hlt
clc
and
mov
fsubrs
out
jns
cmp
lods
jnp
mov
shl
mov
or
inc
std
rorl
pop
mov
inc
xor
cs
inc
xchg
xchg
push
sub
dec
xchg
adc
int3
dec
or
or
adc
lock
mov
lods
push
or
stc
cmp
mov
push
dec
enter
scas
xchg
pop
fcomps
sbb
xchg
gs
popf
fnstsw
push
adc
and
mov
add
mov
pop
lahf
cmpsb
pop
fmul
cmc
cmpsl
adcb
cmp
fisttpll
enter
mov
mov
ds
pop
xchg
fstpl
dec
sub
mov
into
add
inc
sub
hlt
mov
push
push
cli
inc
dec
out
test
ja
dec
out
inc
sub
loopne
and
das
mov
pop
out
imul
adc
lret
ret
rcrl
pop
fucom
movl
mov
dec
mov
sbb
sbb
out
xchg
fcomps
and
adc
aas
sbb
mov
cmc
jl
in
cmovno
dec
outsl
mov
mov
jns
repnz
inc
pop
mov
mov
adc
inc
les
js
outsl
cltd
hlt
out
out
rolb
lahf
push
cltd
push
sar
negb
cmp
mov
xchg
xor
call
repnz
rolb
stos
dec
js
jg
sarb
cmp
leave
cmp
movsl
cld
imul
ja
add
mov
xchg
cmpsl
mov
ja
imul
mov
xchg
xor
testb
data16
push
dec
out
test
push
mov
jnp
xadd
cli
test
fisubrs
adc
push
fisubrl
mov
fs
xchg
xor
rcrl
rcrl
int
push
dec
mov
jge
cs
xor
adc
push
cli
arpl
inc
pop
pop
xor
test
mov
fcmovu
shlb
aad
je
pop
adc
cli
pop
in
bnd
es
push
popa
jo
psllw
test
pop
pop
loop
xchg
inc
bnd
test
lret
les
mov
sbb
repnz
mov
es
mov
add
movsb
push
mov
test
adc
insb
addl
fwait
dec
pop
jnp
in
push
add
xor
fdivrl
pop
mov
and
mov
shll
ror
jne
sahf
add
jnp
mov
outsb
xor
lahf
sub
add
jno
xor
mov
add
cld
in
les
das
xor
cld
mov
dec
dec
mov
lret
lret
mov
pop
xor
push
testl
dec
test
movsl
add
cmpl
inc
or
mov
xor
ja
jb
repnz
xrelease
xor
popa
fistpll
data16
fs
pop
dec
cmpsb
sbb
cmc
lds
push
sbb
mov
call
inc
adc
repz
hlt
daa
ret
lahf
aas
and
and
pop
sub
movsl
cli
neg
mov
sbb
dec
xchg
xchg
lret
inc
xchg
jl
jp
sets
pop
lods
mov
aad
lds
xchg
jbe
mov
and
adc
imul
add
mov
xchg
rcll
pop
scas
subb
adc
pop
imul
ficompl
fisttpl
or
xor
lahf
jo
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
dec
rol
mov
push
xor
push
test
mov
ret
dec
repnz
and
aam
jb
jp
fucomip
sub
inc
jo
stos
pop
push
push
push
xchg
pop
scas
cmp
push
mov
xor
jo
mov
jp
rclb
mov
push
push
mov
lahf
sbb
dec
adc
push
mov
sub
loopne
xor
bound
lods
xchg
lods
jo
adc
add
jge
daa
hlt
fst
mov
xor
sub
in
push
and
cmpsb
imul
mov
movsb
int
movsb
js
aad
xor
scas
push
or
loopne
xchg
inc
xor
mov
inc
test
mov
icebp
xlat
mov
movsb
sbb
pop
xchg
mov
out
inc
sub
fcompl
jae
add
fcompl
cmpb
fsubp
divb
xor
mov
outsl
fwait
mov
xor
ficomps
jne
dec
dec
pop
add
cmpsl
and
jg
scas
dec
jmp
in
mov
sub
out
add
xchg
orl
jo
idiv
mov
js
push
gs
jg
mov
loop
shlb
xchg
rolb
xor
push
sarb
fcompl
cmc
adc
push
mov
je
mov
jb
movsl
mov
adc
loopne
jns
mov
lock
jg
addr16
stos
jp
push
cld
pushf
js
sub
cmpsb
iret
es
jbe
push
loope
jge
push
hlt
mov
std
lds
cmc
cmp
cmpsb
daa
inc
pop
jmp
inc
in
subb
jmp
aas
out
jo
mov
popf
and
add
add
mov
sub
or
clc
mov
xchg
push
lock
sbb
fbstp
outsb
mov
call
lea
inc
sbb
lret
gs
fsubrl
jmp
add
and
shll
push
add
es
mov
pop
and
jge
iret
mov
xor
leave
sbb
push
mov
fsubrs
and
or
pop
clc
out
mov
fld
daa
push
mov
xor
ficoml
std
in
xchg
cltd
inc
hlt
sahf
jae
movsb
mulb
xchg
jg
pop
dec
sub
xchg
jmp
test
add
jno
push
adc
push
jmp
in
fstps
test
enter
adc
in
int3
sbb
jp
bound
sahf
sub
mov
xor
cwtl
fiaddl
fldt
or
shr
daa
jle
shl
jns
push
xor
mov
xchg
mov
jl
aad
loop
stos
ljmp
add
push
mov
mov
pop
test
ds
or
add
mov
cmp
jecxz
test
add
mov
and
fdivr
sub
repz
add
pop
and
cltd
add
rolb
mov
arpl
push
xor
cmp
pusha
dec
ja
cli
js
mov
push
mov
mov
dec
and
xor
push
add
rclb
sahf
imul
inc
pop
rol
mov
shlb
mov
repnz
int3
ljmp
fbstp
ret
rclb
cmp
lret
ror
popl
imull
rorl
shr
repnz
outsl
cmp
adc
pop
fcmovnu
mov
pop
xchg
xor
out
sub
mov
and
xchg
dec
dec
mov
dec
insb
cmpsb
and
scas
rolb
loope
xor
mov
dec
add
push
add
push
dec
cwtl
dec
mov
and
mov
je
xorl
mov
pushf
dec
jecxz
jno
sarb
gs
or
cmc
mov
lods
test
adc
jmp
icebp
cmc
das
insb
xchg
push
mov
lods
movsl
mov
fdivr
or
hlt
into
jge
insb
add
stos
scas
jecxz
push
pushf
daa
dec
mov
testb
push
xor
jecxz
mov
scas
scas
pusha
shrl
cmpl
ror
mov
push
xchg
push
leave
sti
mov
movsl
mov
sub
test
cmp
js
mov
xchg
jp
push
out
xchg
sahf
jp
sub
push
xchg
cli
pop
addr16
pop
out
ss
mov
stos
sahf
dec
xor
testb
test
add
outsl
xchg
inc
rcrb
addr16
pop
push
jo
jo
movsb
xchg
test
fbld
push
cwtl
outsb
ljmp
mov
inc
jns
cwtl
xor
mov
fldl
scas
leave
repz
insl
dec
mov
ss
lock
decl
test
sub
dec
test
xchg
xor
jbe
in
icebp
xchg
dec
faddp
xorl
or
ljmp
pop
fiaddl
lock
icebp
cmc
fwait
int
rcr
in
cmpsl
jnp
je
movsl
in
or
pop
popa
pop
add
xor
dec
shll
shr
dec
push
jno
daa
sti
insb
add
scas
cld
mov
lds
stos
test
mov
ret
pop
pop
cmp
dec
xor
out
lret
das
hlt
std
es
clc
lods
sbb
jns
ja
push
jmp
jge
jmp
sub
mov
add
or
mov
popa
xor
cmp
scas
cmpsb
cmp
mov
shlb
push
xchg
int3
or
cmp
sub
repnz
sbb
nopl
or
mov
xchg
leave
outsl
repz
inc
inc
mov
mov
add
mov
mov
mov
xlat
shll
dec
shlb
in
mov
adc
je
cmp
jae
inc
stc
lret
stos
and
in
push
pop
js
out
inc
xchg
dec
lret
inc
push
xchg
jge
out
loop
or
pop
test
jbe
fistl
mov
gs
sub
cs
cmp
rclb
xor
rcrl
sbb
repz
pop
pop
mov
xor
cld
mov
mull
loopne
sbb
das
xchg
addr16
mulb
push
pop
leave
dec
lcall
mov
pop
orl
pop
mov
xor
sahf
test
pop
push
mov
rcrb
popa
cld
inc
leave
inc
popa
in
out
sub
pop
repnz
xchg
push
cmova
mov
mov
jno
test
aad
push
dec
mov
sti
push
pop
loope
and
subb
enter
lea
add
add
pushf
hlt
fsubs
or
or
sub
das
dec
popa
int3
rep
addl
call
push
out
lds
dec
adc
fdivs
pop
push
loop
cmpsb
rclb
adc
scas
mov
dec
aad
into
mov
sub
sub
adcl
pop
jae
sub
xchg
jbe
fldt
mov
sbb
negl
sbb
dec
or
jle
mulb
arpl
add
sbbl
jnp
insb
aaa
mov
sar
inc
cltd
std
pushf
sbb
stos
popf
or
sar
lds
xchg
int3
leave
out
sub
jne
jg
cwtl
jns
xor
sbb
sub
mov
stos
add
inc
jae
lcall
dec
xchg
mov
xchg
mov
jmp
xchg
outsl
bnd
cmpsb
outsl
inc
jnp
mov
xor
loopne
or
mov
je
test
mov
fs
cld
stos
out
xchg
lcall
cmp
inc
aas
adc
xorl
xchg
inc
leave
scas
mov
dec
aad
mov
and
lds
cmp
out
js
inc
fadds
and
dec
stos
dec
push
cltd
mov
push
pop
cld
aad
xchg
push
cmp
or
or
jnp
insb
aaa
mov
movsl
clc
jge
fsubrs
xor
pop
fwait
insl
les
jo
jae
jnp
inc
repz
ss
rorb
jle
lea
mov
stos
add
inc
fsubs
rcll
xchg
xor
inc
adc
hlt
cmpl
fwait
sub
fnstsw
loope
jbe
fld
mov
mov
jl
mov
xor
mov
cs
mov
stos
rcrb
pcmpgtw
jno
pop
push
jo
fwait
lock
jno
push
sbb
mov
in
sbb
lods
out
pop
shlb
xchg
dec
cmp
lret
sub
or
pop
xchg
outsl
inc
xchg
adc
repz
sub
adc
sbb
pop
lret
inc
mov
inc
xchg
lcall
adcb
repz
repnz
xor
inc
pop
xchg
jno
pop
in
mov
cmpsb
pop
arpl
das
and
mov
int
sbbl
dec
pop
inc
xchg
or
inc
andl
icebp
add
stos
daa
mov
in
ds
jae
pop
dec
sub
stos
sbb
movsl
test
sub
xchg
ja
add
jnp
mov
xchg
insb
adc
in
in
fs
in
xchg
mov
xorl
add
mov
pop
inc
enter
mov
stos
xchg
push
rolb
imul
pop
pop
mov
gs
sub
testl
jnp
jecxz
mov
jp
xor
ljmp
sbb
xchg
cmpsl
mov
xlat
mov
mov
imul
lock
out
pop
push
xor
add
in
dec
sbb
inc
xor
inc
xchg
add
ljmp
aam
cli
sub
pop
sub
lcall
lahf
loop
ss
dec
aad
sub
cltd
or
mov
hlt
out
fnsave
pop
sarb
push
popf
sbb
pop
in
mov
aad
sub
push
pop
push
xor
leave
scas
push
idivb
add
jmp
add
adc
mov
movsb
lock
cmp
popa
push
adc
inc
sub
jno
add
fsubl
in
add
es
fisubrs
push
fisttpl
push
shl
into
inc
xchg
dec
sbb
dec
inc
cli
out
loopne
aas
imulb
jbe
cmp
sbb
or
fmuls
dec
pop
clc
adc
dec
test
push
fstpt
fs
inc
shrb
sub
mov
dec
xchg
mov
call
fists
sub
lahf
adc
cwtl
mov
push
xchg
in
call
push
xchg
cld
push
inc
jae
lea
xchg
pop
and
cmc
add
xlat
push
lds
mov
repz
fmulp
and
jle
xchg
cmp
dec
sbb
ss
fsubs
mov
or
mov
mov
inc
jp
mov
adc
icebp
cwtl
push
adc
adc
dec
sub
mov
fiaddl
jle
and
aad
sub
cmpsl
lahf
mov
cmpb
add
into
adc
inc
sub
testl
dec
mov
push
lock
xchg
jo
pop
pop
sub
xor
rolb
lahf
dec
les
jmp
inc
xchg
dec
in
xchg
pop
sahf
inc
aad
mov
sbb
push
fwait
lret
jns
psrld
inc
test
sbb
loop
xlat
pop
dec
sbb
scas
ljmp
sub
push
inc
int3
xchg
dec
push
cs
push
repnz
xchg
out
setp
mov
mov
popf
lock
imul
lods
add
and
sub
mov
push
push
mov
mov
out
mov
adc
test
mov
mov
jl
sahf
mov
lds
push
mov
mov
adc
in
mov
mov
adc
adc
or
push
jle
or
dec
mov
lcall
sub
lods
cmp
jo
pop
or
adc
mov
push
add
or
hlt
pop
xor
jns
cli
xchg
or
loop
std
dec
ja
pop
imul
and
mov
outsb
lret
test
popf
cmc
test
outsl
inc
cmp
mov
mov
rcr
xchg
popf
dec
sbb
mov
dec
xor
sti
stos
out
mov
jmp
dec
xchg
inc
add
sub
rcll
and
stc
inc
adc
jns,pt
in
scas
cmp
sarl
push
std
adc
outsl
adc
pop
leave
aad
ss
push
subb
aam
and
out
jno
shll
jnp
pop
outsb
push
mov
out
mov
fildll
sub
shll
shl
push
mov
push
and
ss
xchg
insb
cmp
mov
inc
mov
insb
add
ficomps
enter
ss
add
lahf
ja
jle
fistpll
ljmp
push
pop
cmp
lock
ret
or
jo
in
dec
mov
ss
ljmp
or
jl
cltd
mov
imul
push
push
sbb
jmp
and
push
add
mov
clc
pushf
arpl
jecxz
xlat
jmp
aam
lahf
inc
jmp
pop
and
push
xor
bnd
pop
push
xchg
and
pop
pop
cmp
je
add
jae
ret
bound
leave
insb
loopne
imull
push
dec
or
fistl
or
insb
mov
pop
adc
shr
push
push
fildll
xchg
daa
push
xchg
cmpsb
push
xchg
sbb
popa
iret
insl
out
jnp
sarb
add
push
sbb
push
icebp
ljmp
pop
fadds
rcll
shlb
ss
es
in
stos
loopne
or
sub
inc
inc
rclb
cmc
sarl
ficoml
test
add
xor
xchg
ljmp
jbe
xchg
sub
adc
lods
ret
repz
test
adc
push
dec
je
and
imul
mov
mov
dec
push
mov
inc
sbb
and
popa
testb
inc
cmp
mov
test
dec
mov
gs
stos
dec
cltd
mov
pusha
out
xlat
subb
sub
pop
in
mov
insb
mov
popf
and
and
jne
or
dec
popf
mov
mov
je
and
int
adc
into
cmp
xchg
xchg
mov
sbb
int3
call
dec
cmp
ret
push
setb
xor
or
pop
inc
shrb
fnstsw
js
dec
fisubrs
mov
inc
lods
movsb
leave
dec
insb
stc
cltd
xchg
shrl
mov
icebp
push
pop
iret
mov
pop
jle
jne
insb
fwait
cmpsb
ja
xor
inc
dec
lock
mov
into
ret
xchg
daa
stos
adc
leave
lahf
dec
lcall
call
add
and
les
jbe
push
or
or
sub
inc
lret
sub
inc
dec
dec
dec
sub
inc
push
push
scas
sbb
adc
or
adcb
inc
pop
mov
xchg
arpl
xchg
dec
xchg
jle
sub
es
or
mov
fadds
jecxz
out
xor
out
cmp
stos
pop
lds
mov
inc
push
faddl
add
cmp
iret
adc
in
jno
subb
pop
pop
cltd
push
lods
mov
mov
ret
int3
loopne
adc
adc
push
cs
xchg
ret
jp
cli
add
popf
jmp
sbb
ret
mov
xchg
cwtl
cli
mov
cmp
clc
jnp
and
push
int3
mov
push
and
movsl
mov
jg
lcall
xchg
push
test
popf
sub
fdivs
mov
es
or
add
or
repz
dec
dec
test
xor
mov
addr16
inc
add
jg
notb
mov
cmp
or
divl
push
shlb
imul
xchg
ds
jecxz
or
sub
pusha
mov
jno
lods
mov
mov
cmpb
bound
inc
jne
movsb
test
inc
or
add
mov
push
mov
imul
in
fcoms
jb
mov
xchg
mov
lods
lock
push
dec
movsb
push
dec
pop
push
movsl
lods
dec
sbb
or
movsl
xor
or
jmp
mov
daa
mov
loop
mov
xlat
push
push
xchg
lahf
shl
test
dec
inc
dec
mov
xorb
sbb
push
lock
lock
fs
stos
mov
repz
int
inc
arpl
mov
fmuls
fwait
gs
lcall
mov
xchg
pop
ss
or
lock
fwait
pop
mov
push
mov
pop
clc
mov
sbb
fidivrs
jae
jb
pop
and
mov
mov
jp
push
cs
fcom
mov
mov
das
jecxz
or
call
push
addr16
xor
mov
sub
mov
fsubrs
inc
xchg
sbb
into
dec
and
push
adc
pop
insl
andb
sarb
xor
jge
addr16
xchg
xchg
test
xchg
jae
dec
in
int
cltd
push
mov
aam
sub
jmp
clc
cld
mov
fcomp
or
in
js
inc
lods
mov
and
js
pushf
and
pop
insl
std
jae
pop
sbb
setnp
mov
and
daa
add
hlt
hlt
jbe
popa
add
std
push
fsubrs
xchg
fimull
daa
jbe
ficomps
jg
sub
and
add
xor
sahf
test
ret
jp
nop
fisubrs
push
dec
mov
sbb
shlb
mov
pushf
repz
jne
leave
or
out
adc
and
clc
in
lret
rcrl
xchg
add
stos
or
cmp
xchg
in
rcrl
pop
xor
lahf
call
repz
dec
es
test
lret
fwait
mov
dec
xchg
into
cmc
add
mov
mov
mov
cmp
fdivs
and
ficoml
rol
or
ljmp
pop
dec
int
lea
pop
push
jno
mov
out
fcoml
jg
fdivl
mov
xor
mov
cmp
xor
rorb
jbe,pn
out
outsb
popa
pop
mov
out
jno
inc
mov
aad
sub
js
cltd
sub
mov
jo
in
filds
mov
inc
dec
xor
es
or
inc
fmuls
cmpb
fstpl
inc
pop
push
xchg
loope
cltd
add
fwait
lds
xor
jmp
jnp
pop
dec
mov
push
mov
xor
push
or
inc
jo
and
call
daa
dec
pop
mov
outsb
add
out
jmp
dec
and
cltd
int3
and
dec
add
insl
fsubl
pop
int3
pop
jno
pop
mov
push
sbb
leave
sub
bound
pop
mov
pusha
nop
stos
dec
adc
mov
xchg
sub
xorl
adc
shll
push
add
sub
les
jecxz
jno
cvttps2pi
call
dec
sti
push
xor
or
or
push
pop
pop
jecxz
imulb
pusha
out
das
ds
sbb
notl
enter
cld
sbbb
mov
jle
mov
mov
cmpsb
pop
mov
add
and
pop
stos
dec
popa
add
jo
data16
jge
sub
adc
sub
mov
call
cmp
xor
inc
pop
in
push
or
pop
scas
fdiv
test
fwait
jbe
lods
xor
gs
inc
shl
inc
xor
sbb
cmpsl
sub
jns
xor
je
and
jle
xchg
inc
mov
jmp
pop
cmp
enter
inc
aam
push
aam
adc
mov
mov
add
bound
pop
push
popf
mov
daa
mov
adc
cmp
das
ret
scas
aas
sub
add
xchg
imul
dec
pop
jl
jbe
das
ret
jmp
fsubrp
bndstx
daa
pop
addr16
cli
sahf
cmc
mov
hlt
sbb
mov
arpl
or
xlat
test
subl
xchg
cmp
dec
dec
mov
ret
adc
in
sub
add
pop
aad
loop
mov
ljmp
cltd
push
inc
or
pop
test
ljmp
sbb
sbb
in
mov
and
xchg
mov
xchg
lods
jecxz
mov
clc
pandn
or
idivb
xchg
jb
xchg
xchg
pop
or
into
cli
jb
or
or
fidivs
jnp
sarb
inc
cld
cld
jge
mov
mov
rcr
sub
jge
dec
xchg
test
and
fbstp
pop
add
dec
test
mov
and
out
adc
and
arpl
loop
sbb
adc
or
std
sbb
outsl
lock
inc
jnp
int3
fdivl
out
and
mov
lgs
sub
push
xchg
xor
out
sub
xor
dec
roll
cmp
mov
xchg
mov
push
xchg
clc
cwtl
sub
sbb
sbb
jge
xor
xchg
movsb
push
dec
cld
lock
dec
packuswb
xor
test
fisttpll
xchg
ss
jae
dec
sti
pop
rorl
lcall
out
add
movsb
mov
cmp
pop
nop
dec
xchg
scas
push
fmull
adc
cmc
inc
sti
in
jp
dec
testl
xchg
mov
mov
cld
je
mov
arpl
mov
movsb
lods
mov
andl
scas
lods
in
mov
mov
xor
dec
cmpsb
repnz
pop
movsl
xorl
orb
inc
insl
in
jmp
repnz
in
xor
mov
jne
std
fdivrl
xchg
and
jp
sub
mov
out
dec
or
cmp
cmp
add
push
lcall
inc
mov
aam
loop
pop
inc
mov
decl
mov
icebp
cmp
std
sbb
xchg
inc
movsb
popf
mov
dec
push
sbb
mov
or
cmp
mov
cwtl
lret
xchg
push
jns
stos
lock
imul
loop
subl
pop
popa
je
js
jae
lods
sub
mov
mov
push
scas
ja
push
ror
stos
xchg
pushf
icebp
or
or
in
cmp
in
jmp
cmpsl
cmpl
pop
pop
sahf
dec
xchg
negb
inc
imul
xlat
imul
add
incb
hlt
jne
outsb
adc
jns
jb
mov
jmp
addr16
xor
push
enter
push
adc
jb
rolb
mov
femms
scas
inc
pop
or
jle
lret
jo
pusha
xor
sbb
push
pop
lcall
xchg
jle
dec
xchg
repnz
xchg
enter
pop
nop
and
mov
xorl
daa
mov
dec
add
xchg
mov
in
adc
lock
iret
inc
xor
outsl
add
push
lods
jl
cmp
push
push
lcall
push
shlb
push
inc
gs
xor
dec
dec
dec
and
sbb
in
inc
jmp
enter
out
xlat
adc
outsl
jmp
cmpsb
xchg
lret
mov
shl
lods
pop
lock
pop
cltd
lods
bound
push
decb
imul
clc
push
iret
notl
andl
popf
int
ljmp
adcl
clc
mov
or
or
lods
mov
loopne
addr16
pop
fisubrs
pop
in
or
xchg
jge
mov
and
jno
and
add
stos
hlt
and
fstl
add
jmp
add
repz
mov
lret
cmp
sbb
mov
push
adcl
mov
lret
lods
xchg
loop
cltd
jo
je
mov
in
add
sti
and
xorl
aaa
xor
arpl
out
daa
in
test
dec
push
xor
dec
mov
xor
adc
pavgw
mov
push
inc
cmp
mov
lds
add
loopw
movsl
cltd
testb
pop
and
lret
lret
cmpsb
insl
and
daa
mov
mov
pushf
sub
jl
dec
insl
insb
loope
sub
inc
test
push
xor
adc
iret
inc
ss
popa
sub
add
dec
pop
pop
fcompl
cmpsl
cmp
cmp
and
or
inc
sbb
popf
adc
hlt
aas
sar
arpl
repnz
cmp
xchg
jae
mov
scas
mov
jge
cmc
xorl
sbb
out
inc
idivb
scas
mov
or
jmp
in
fwait
loope
sub
cli
test
fidivrl
push
inc
loop
xchg
movsb
and
ret
stc
cwtl
mov
mov
cs
cld
movsb
lods
out
cmp
pop
stos
jge
jno
sbb
mov
out
dec
xchg
int3
mov
jmp
outsl
fs
outsl
shrb
scas
add
cwtd
mov
leave
push
add
out
dec
fwait
std
cmp
push
and
cmp
inc
xor
or
sbb
int
clc
aas
cli
int
dec
jl
ret
lret
out
test
fisttps
sub
test
stos
movsl
out
xlat
dec
pop
rol
dec
leave
add
leave
inc
pushf
push
mov
lea
addr16
and
mov
daa
xchg
cld
jae
xor
xchg
inc
outsb
ret
jge
mov
push
cltd
mov
mov
push
shll
and
push
sbb
int
hlt
pop
fimuls
xchg
xchg
add
rcrl
add
cli
sbb
lock
shrl
js
mov
or
movsl
mov
mov
scas
pop
loopne
clc
loopne
mov
push
add
or
cmp
loope
pushl
int
mov
hlt
bound
lods
xor
push
sbb
pushf
xchg
fbstp
jl
xor
stc
cmp
test
js
ss
daa
or
push
iret
pop
incl
call
fldt
mov
jecxz
pop
pushf
scas
clc
mov
cmp
mov
mov
gs
cmc
lcall
fidivrs
out
sti
cmp
mov
and
mov
and
fcomp
test
in
dec
push
sar
fldenv
cmp
scas
cmp
lea
lock
add
xor
push
clc
push
je,pn
xor
mov
clc
sbb
test
inc
sub
mov
inc
int3
into
add
mov
sti
fsubrs
test
cmp
adc
mov
jb
int3
sub
mov
nop
sub
daa
xor
add
cltd
inc
lock
push
adc
shlb
dec
add
pop
pop
pop
sub
cld
cld
cld
mov
push
pop
lea
push
in
shlb
xchg
nop
pop
mulb
aad
aaa
xchg
sahf
cmpsl
cmp
dec
jmp
sub
sbb
mov
data16
daa
pusha
aas
pop
fcomip
add
fisubrl
loopne
xchg
out
or
fisttpl
mov
or
cmpl
ret
inc
cli
out
jecxz
adc
xlat
inc
les
xchg
add
sub
outsl
aam
sti
leave
adc
fucomp
nop
sub
cmp
cmc
leave
inc
mov
lahf
xor
adc
cli
jns
and
jbe
mov
pushf
xlat
mov
jbe
adc
pop
adc
dec
rcr
rcll
push
adc
fwait
xor
sarl
shrl
lock
pop
jp
add
test
inc
ja
adc
or
adc
sbb
and
subl
inc
jno
movsb
fwait
lcall
iret
lahf
movsb
outsl
out
mov
inc
mov
jle
push
mov
adc
ja
outsl
mov
popa
rorb
stos
mov
aad
mov
adc
shlb
and
jo
es
fwait
xlat
dec
loope
es
mov
adc
enter
jge
out
push
insb
in
xor
std
xchg
stos
mov
cmpl
sub
xchg
rorb
loop
iret
pop
movsl
dec
insl
stos
test
test
push
pop
fidivrs
scas
xor
pop
cmpl
cmc
xor
clc
push
lea
mov
jnp
gs
mov
pop
std
sbbb
dec
xor
push
arpl
mov
out
rclb
mov
add
jo
out
imul
pop
xor
xchg
add
dec
sbb
loope
fs
mov
adc
xor
out
sbb
lret
cmpsl
sarb
lcall
jl
test
outsb
iret
sbb
jb
xchg
jle
adc
lahf
std
rcl
outsb
adc
lahf
jmp
push
add
add
mov
mov
idivl
dec
cmp
push
mov
xor
xor
mov
push
orl
ss
xchg
scas
inc
mov
test
fs
aas
repz
pop
push
aad
jns
xchg
rolb
push
pop
mov
push
jle
mov
xchg
adc
mov
adc
aaa
mov
scas
fsubrp
mov
cwtl
sbbl
cmp
inc
subl
stc
shrl
mov
fs
push
and
mov
cmp
sbb
jg
popf
mov
inc
xchg
pop
sbb
push
cmpsl
and
adc
sub
cmc
and
mov
adc
dec
jae
adc
cmp
je
dec
shlb
or
dec
or
mov
lss
inc
roll
out
pop
gs
shrb
xchg
insb
pop
push
nop
pop
shl
stc
loop
add
clc
inc
xrelease
mov
xor
repz
adc
mov
out
sub
mov
insl
and
push
mul
loope
push
pushf
sbb
inc
jg
shrl
mov
mov
xor
in
cmpl
movsb
mov
fwait
rcr
das
scas
sbb
xor
fdivs
push
movsl
adc
fisubs
fucomp
idivl
andl
xor
sahf
dec
je
mov
xor
push
movsl
lea
subl
in
imul
repnz
les
cmp
std
imul
imul
dec
cmpsb
repz
mull
int3
push
sti
adc
clc
hlt
jbe
or
lcall
and
push
jno
xchg
push
sub
xchg
bound
sbb
pusha
call
mov
push
xor
mov
insl
jmpw
ja
adc
mov
jo
stc
sahf
mov
inc
insb
mov
outsl
xor
cltd
jge
pop
dec
pop
shrl
cwtl
imul
shr
sub
inc
mov
mov
stos
sbb
repz
jb
lods
jmp
dec
popa
test
pop
fstpt
je
jnp
sub
into
pushl
rorb
and
jae
aam
push
out
xlat
or
cld
daa
inc
sbb
adc
fisubs
xor
inc
aam
lds
daa
out
dec
jns
enter
fiaddl
pop
jb
fwait
outsl
jb
das
mov
xchg
popf
sbb
cmpsl
mov
sub
bound
cmp
push
mov
jp
mov
and
xchg
add
mov
ja
inc
lods
xor
cmp
incl
jne
stos
xor
jo
push
ss
inc
lods
adc
xchg
sti
stos
sbb
addr16
inc
pusha
int3
xor
out
xlat
adc
jns
fcomps
and
int
pop
mov
out
mov
lds
enter
mov
repz
xchg
loop
shll
leave
enter
sub
loop
sbb
loope
lret
lcall
push
mov
hlt
adc
insb
cmp
adc
and
xchg
dec
insl
out
cmp
cltd
jge
xor
test
push
xor
fmuls
fdivrs
jmp
bound
cwtl
xchg
or
dec
into
insl
pop
mov
sbb
sbb
mov
iret
inc
cld
das
mov
clc
shlb
fidivrs
test
pusha
scas
ror
out
cs
int
dec
mov
fists
inc
cmpsb
arpl
add
out
sbb
lods
or
iret
mov
push
cwtl
and
fwait
adc
dec
ror
lea
stc
pop
jge
lret
insb
pop
pop
loopew
xchg
fucomi
push
cmc
cmp
mov
mov
int3
repnz
pop
sbb
std
idivl
push
jmp
loope
pusha
pop
popf
sahf
insb
icebp
and
jno
mov
test
loopne
sbb
xlat
xor
je
push
pop
sbb
addr16
mov
push
and
mov
je
icebp
xor
mov
sahf
inc
and
dec
dec
push
adc
inc
cmp
xchg
cmp
mov
jnp
inc
icebp
jmp
dec
xor
repnz
jnp
sbbl
push
lret
dec
or
cs
mov
fldl
popa
and
mov
and
inc
push
call
out
sbb
ds
leave
mov
in
and
add
sarl
xchg
mov
lock
adc
cmpsb
into
cmpsb
insb
pop
shlb
in
in
popa
std
cmpsl
mov
cmp
stos
push
sbb
aad
imul
filds
xchg
orl
xor
fs
in
dec
or
aam
loopne
sub
ret
lods
cmpsb
mov
icebp
dec
rcrb
dec
jnp
xor
xchg
jg
sbb
xchg
dec
sub
xor
cmp
fwait
inc
out
xchg
cmp
ret
mov
outsl
int3
std
adc
or
cmc
lret
movsb
pop
shll
inc
stos
jnp
lds
out
test
pminsw
dec
jb
lds
lret
icebp
push
aam
sub
fists
int3
adc
cltd
sub
add
xchg
out
icebp
sahf
loope
cld
mov
bound
pop
loop
adc
push
test
pop
call
pop
popl
imulb
mov
iret
lods
adc
mov
lcall
scas
add
cli
ror
mulb
mov
aam
mov
push
ret
inc
insl
xorl
lds
rcrb
lea
and
mov
and
mov
xor
cltd
push
lcall
cli
mov
jb
inc
fwait
cmp
fs
push
mov
mov
jnp
xchg
and
mov
imul
sbbl
icebp
pop
pushf
cmp
cmpsb
or
ret
loopne
data16
mov
test
cmp
fistl
push
cltd
int3
pop
scas
dec
aaa
shlb
xchg
insl
mov
aaa
or
popa
sbb
xor
loope
mov
inc
jecxz
stos
push
popf
sub
mov
out
push
xor
cltd
jg
add
push
test
add
mov
lahf
push
pop
add
mov
lods
movd
ljmp
lea
dec
mov
inc
adc
push
inc
mov
pop
inc
repnz
scas
arpl
cli
pusha
xor
mov
pop
aam
pxor
fisubs
mov
mov
add
in
mov
dec
and
inc
ss
jmp
iret
xorb
xchg
enter
sbb
jg
sub
jnp
cmp
inc
data16
dec
movsb
pusha
pop
cmpb
mov
pop
mov
mov
jae
daa
lods
lea
mov
sub
clc
pop
cs
mov
in
xchg
fistpll
rcrl
sub
xor
cwtl
stos
pop
or
in
out
sub
jecxz
lods
xchg
fmull
aas
xorl
ja
jns
inc
mov
mov
mull
sbb
adc
cmpsl
pop
push
dec
adc
or
lret
iret
ret
fimull
pop
cld
dec
xchg
fiadds
in
sbbl
imul
movsl
dec
sti
pop
hlt
sbb
add
cwtl
push
fstps
or
shrl
mov
nop
imul
repz
sub
sbb
and
add
pop
inc
sbb
pushf
or
mov
push
fcompl
adc
pop
jp
cmpsb
push
in
cltd
ret
adc
inc
cli
cld
jge
pop
cmpsb
leave
cltd
push
mov
cwtl
sub
das
insb
ljmp
fs
ss
bound
mov
pop
pop
outsb
jne
mov
jno
xor
gs
mov
mov
pop
or
adc
out
xor
mov
cmp
out
pop
sar
cli
out
mov
adc
adc
add
push
lock
mov
leave
ret
test
popl
dec
xor
shlb
push
out
test
in
inc
nopl
xchg
and
adc
mov
add
pop
pop
cltd
ds
ja
mov
into
and
movsb
icebp
push
popa
in
scas
insb
popl
insb
hlt
pop
cmpsl
push
xchg
outsb
cltd
sbb
test
and
aaa
dec
cs
pop
insb
mov
pushf
add
jge
ret
shlb
testl
andb
mov
sbb
xor
loope
frstpm(287
lods
add
push
loop
push
movsb
mov
and
add
in
push
andl
cmp
negb
popf
in
loopne
lret
in
and
lods
jb
insl
bound
aas
or
xchg
das
cmp
xor
enter
push
in
bound
add
pushf
jmp
mov
mov
add
inc
inc
sub
sub
jb
sbb
rorb
lahf
and
push
mov
pop
mov
dec
jg
enter
mov
fsubl
sub
shrb
aas
mov
fwait
lods
dec
hlt
xchg
in
mov
jmp
mov
mov
push
adc
jge
lret
jmp
flds
jl
test
pop
cli
cmpsl
aam
sub
imul
inc
imul
mov
in
stc
push
adc
hlt
push
sti
bts
aas
mov
add
pop
mov
test
push
out
cmp
xchg
dec
xor
jg
loopne
and
rcrl
fisttpll
fidivl
cli
xor
adc
add
es
push
icebp
std
fsubrl
andb
movb
push
and
jnp
test
mov
xor
push
pop
add
into
shll
and
insb
and
jns
scas
pop
adc
pushf
roll
out
scas
lret
mov
popf
cmp
jnp
mov
mov
cwtl
push
out
xor
dec
xchg
cmp
xacquire
hlt
rcrl
inc
mov
sti
jecxz
test
push
popf
ljmp
inc
xchg
sub
in
adc
popa
call
jecxz
test
test
adc
cmpsb
mov
and
sub
add
cmp
outsl
dec
xchg
or
scas
jl
xor
nop
xor
daa
mov
jns
fs
mov
aas
in
or
shl
mov
xor
xchg
sub
jb
movb
out
aaa
rcll
jae
shlb
cmpsb
jle
xchg
ficomps
jecxz
int
enter
jp
push
rcl
mov
sbb
xor
mov
fists
jge
in
jnp
add
sbb
lods
cmp
or
rorl
sarl
cmc
lods
outsb
or
jle
imul
mov
mov
aam
xlat
test
cmp
in
bound
icebp
mov
pop
outsb
sbbb
sbb
jmp
mov
imul
adc
cmp
cmp
mov
mov
or
clc
aad
into
fwait
sahf
xchg
push
lds
std
addr16
daa
push
push
add
add
push
xchg
pop
xchg
std
sbb
outsb
cmp
push
mov
imul
mov
dec
push
sarl
mov
clc
pop
fidivs
xchg
xchg
rcr
push
adc
inc
dec
or
push
subl
loop
inc
ja
and
sbb
jno
jb,pt
es
push
jns
sub
mov
inc
enter
pop
cld
mov
or
pop
scas
scas
addr16
push
les
cmp
mov
cmp
mov
divb
dec
adc
es
dec
cmp
je
loopne
jmp
pop
dec
jae
jnp
mulb
push
jle
push
pop
xor
js
adc
scas
push
dec
and
std
xchg
fabs
popa
jp
mov
mov
jmp
xorl
icebp
push
xchg
or
ljmp
jae
push
adc
aad
push
cmpsb
bound
fcomps
frstor
mov
sbb
addr16
xor
mov
cmp
jecxz
xchg
adc
data16
rorb
cltd
sahf
loopne
sub
in
xor
addr16
adc
outsb
aaa
adc
in
mov
fs
aam
cmp
js
fimuls
fwait
test
jns
sub
lret
and
scas
out
cltd
test
or
xchg
pop
notl
mov
jp
xor
xor
icebp
lcall
mov
imulb
nop
push
xchg
jle
pop
les
mull
scas
mov
shrb
mov
add
jb
pop
ja
call
sub
stos
popa
mov
test
cmp
dec
or
pusha
pop
test
xchg
fwait
loope
ljmp
ss
add
insl
push
mov
mov
cs
push
mov
clc
testb
ljmp
sbb
sbb
popf
mov
mov
cmp
dec
sbb
and
xchg
jbe
push
cmp
inc
lcall
xchg
je
cmp
aaa
jns
xchg
dec
scas
xchg
and
push
pop
xor
or
push
inc
and
loop
adc
push
cmp
mov
xor
test
jl
cltd
scas
sbb
and
je
add
sub
mov
sub
or
cmpsl
fnsave
mov
jl
mov
lahf
sbb
xchg
push
push
fwait
std
jg
jns
inc
pop
out
inc
xchg
addr16
orl
mov
jl
inc
adc
mull
push
adc
pusha
daa
push
pop
dec
jmp
je
jecxz
nop
adc
fsubl
jge
je
mov
dec
test
aaa
sar
imul
rcr
jg
test
mov
into
je
mov
and
sbb
cltd
dec
stos
ja
inc
push
adc
mov
mov
fcomi
add
xchg
test
or
pop
xchg
into
hlt
jg
fwait
pusha
xchg
out
int
and
cmp
sbb
add
fildl
rcl
in
mov
out
xchg
lret
lret
adc
shr
jb
lods
pushl
adc
cltd
sbb
icebp
and
mov
adc
popa
xor
idivl
cmp
loopne
pop
xor
xor
xor
push
adc
stos
xchg
enter
loope
nop
push
pop
or
es
insb
leave
jmp
mov
outsb
daa
fcoms
cld
pop
sub
lock
push
jne
popa
test
out
out
add
or
fmulp
and
and
mov
imul
jg
or
sbb
mov
testb
mov
pop
lret
mov
cld
pop
lods
ja
lea
nop
aam
push
leave
ret
rcl
xchg
xor
mov
inc
dec
jno
ret
cmp
rcrl
cmp
push
or
lret
inc
jo
sbb
jp
push
je
jle
hlt
pop
push
mov
add
lahf
fcoms
xor
outsb
mov
icebp
inc
xchg
in
pop
flds
stos
mov
into
rclb
add
dec
and
cmc
jmp
add
jmp
mov
outsl
push
in
pop
popl
nop
sbb
and
sar
pushf
sbb
and
ret
mov
dec
cltd
daa
inc
data16
scas
pop
mov
jg
test
mov
outsl
xor
pop
push
sbb
xchg
sahf
pop
xchg
imul
fidivs
push
imul
shll
shufps
fimuls
xchg
pop
and
cmpsl
ja
movsw
mov
and
ss
jbe
pop
pop
inc
and
mov
xchg
sar
js
flds
mov
rcrb
sub
iret
mov
mov
out
xchg
push
fnstsw
les
es
lahf
lods
dec
testl
adc
popa
add
ljmp
enter
rorb
popf
mov
ja
hlt
test
decl
lahf
xor
int
cwtl
sub
mov
insl
data16
stos
test
pop
loopne
inc
mov
xchg
xchg
or
xchg
cmpsl
sbb
xlat
cmp
jl
xor
aad
cli
js
aas
pop
dec
inc
lods
push
xlat
inc
mov
cmp
pop
aad
and
sbb
popf
mov
push
arpl
adc
sbb
lret
push
stc
cmp
push
test
sbb
mov
sbb
pop
add
sbb
leave
outsb
cmpl
and
adc
mov
inc
or
mov
mov
sub
cwtl
aad
push
jl
inc
aam
sub
pcmpgtw
mov
insl
inc
scas
mov
jno
xlat
lcall
loopne
and
aam
js
adc
ficoml
lret
in
fs
inc
pop
sub
cmp
jp
or
in
enter
push
clc
pop
mov
push
ret
out
mov
lahf
jns
fstps
jg
sbb
dec
ss
lock
ljmp
sub
aad
and
inc
outsb
add
push
ffreep
cmp
jnp
repz
ds
jb
add
add
rorb
scas
cmp
ret
jl
cltd
fldcw
inc
lods
aas
push
mov
and
lcall
imul
loopne
jg
gs
cmpsl
inc
andb
mov
into
xor
sbb
sti
xor
jbe
jl
inc
or
push
mov
cld
jbe
in
and
pop
shll
xchg
xor
outsl
rcl
adc
mov
dec
dec
or
inc
dec
test
xor
add
xor
std
call
test
pop
sub
daa
outsb
xchg
jp
js
xor
cmp
dec
xchg
fsubrl
jbe
and
mov
xchg
scas
insl
scas
adc
repnz
stc
jmp
xchg
jg
mov
into
pop
jo
xor
xchg
push
jo
outsl
cmp
pushf
aaa
push
mov
loop
std
xchg
loopne
insb
arpl
inc
mov
sbb
mull
pusha
icebp
test
push
outsl
pop
shlb
cmp
addl
mov
cld
jp
or
movsl
pop
arpl
mov
adc
push
sub
mov
and
sub
and
into
add
xor
movsl
aaa
outsl
mov
and
arpl
in
mov
cmc
adc
int
xor
lret
add
js
fisubrl
xor
movsl
sub
push
insl
lret
mov
fcoms
int
ret
leave
out
lock
mov
das
test
inc
popa
fiaddl
cmpsb
jecxz
mov
std
adc
arpl
sbb
aas
cli
cltd
fidivrs
cmp
mov
test
data16
add
xchg
xchg
and
add
dec
mov
dec
ljmp
insb
mov
cmp
push
lret
das
sub
pop
scas
pxor
inc
cltd
test
and
jo
ljmp
sbb
lea
push
inc
pop
icebp
addl
shl
mov
sbb
jne
dec
leave
imul
and
xchg
pop
sub
js
mov
mov
popa
pop
fwait
aaa
pushf
adc
orl
mov
add
push
mov
inc
scas
xor
pop
insb
jmp
daa
int3
pushfw
adc
lret
push
das
sub
bound
shll
jg
push
je
adcb
xor
aam
cmp
or
lea
push
loope
arpl
test
jmp
mov
or
iret
cmp
pop
pop
xchg
mov
jnp
ja
icebp
in
adc
jae
xchg
ljmp
fnstcw
mov
xlat
pop
ficomps
sbb
adc
vmulpd
ret
nop
pushf
or
outsl
add
cli
popa
dec
dec
mov
mov
mov
mov
insb
cmp
pop
xchg
fidivl
out
xor
into
xchg
push
out
mov
mov
pop
lcall
sub
xchg
jo
sbb
sub
cmpsl
inc
adc
add
dec
rorl
dec
and
lret
dec
mov
test
cmp
pop
lret
out
imul
jnp
ret
push
mov
lcall
mov
or
cmp
and
fmulp
push
pusha
jnp
fwait
mov
add
pop
pop
inc
pop
sub
adc
sub
jl
fcoms
mov
mov
xchg
scas
ror
dec
push
testb
xchg
pop
outsl
pop
repnz
cmp
dec
push
insl
xor
xchg
aas
inc
mov
pop
bound
scas
js
iret
dec
das
sub
leave
or
into
mov
pop
jnp
fsin
jp
and
sbb
add
in
and
std
push
neg
jb
xor
or
and
and
lahf
jmp
gs
sub
pop
ss
xchg
mov
mov
xchg
pop
cmp
test
std
ja
and
out
mov
andl
or
xchg
jno
gs
test
cmp
adc
add
pop
aas
or
mov
mov
mov
scas
sarl
xor
cmp
fcompl
js
lcall
enter
outsb
xor
xchg
inc
aaa
jnp
and
gs
sub
mov
push
push
xor
insl
ret
jmp
jbe
xchg
je
xchg
popf
inc
or
sbb
sarb
inc
jno
sbb
mov
mov
pop
push
andb
sub
testl
pop
xchg
in
push
jge
sub
stc
lods
mov
imul
repz
xchg
cmp
rorl
push
jno
push
adc
ja
sub
out
cmpsl
cli
out
xor
clc
lods
rcll
into
in
daa
jno
jo
gs
movsl
mov
js
jecxz
pop
addr16
or
and
xor
sahf
pop
imul
cmovnp
push
fimuls
fs
lds
push
mov
pop
inc
addr16
mov
setbe
stos
or
out
xchg
add
icebp
in
out
popa
jne
inc
lcall
fisubrs
fsubrp
pop
rorl
xchg
out
and
les
lock
inc
push
dec
jp
ss
fstpt
add
dec
mov
fs
mov
ss
jae
ret
rorl
inc
aam
xchg
or
je
les
pop
gs
lods
push
inc
inc
negl
cltd
mov
push
adc
xor
jno
fstpl
das
or
or
imul
sub
xchg
xor
pmaxub
add
dec
jne
fadd
outsl
jg
pop
xchg
push
mov
or
loope
fnstenv
cmp
inc
fwait
testl
mov
xor
mov
cmpsb
push
xchg
push
cmc
std
mov
cmp
cs
mov
jmp
loopne
add
sarb
sti
dec
dec
lea
loop
pop
inc
es
in
ljmp
imul
movsl
inc
and
inc
mov
movsb
repz
or
xchg
pop
sub
fdivrl
adc
push
inc
sub
push
add
jo
dec
clc
jns
es
mov
mov
lahf
jne
shlb
dec
mov
cmp
xchg
pusha
neg
js
repnz
lahf
sub
lahf
adc
jnp
jo
inc
pop
inc
inc
mov
jge
pop
fildl
inc
adc
add
mov
mov
mov
es
jl
mov
es
mov
pop
scas
inc
dec
mov
pop
dec
pop
or
or
in
test
cwtl
scas
dec
push
aas
xor
mov
imul
sub
sbb
mov
adc
stos
xchg
jno
pop
inc
cmp
xchg
xchg
mov
push
mov
adc
push
mov
push
xchg
orl
fs
or
sti
scas
mov
cmp
hlt
xchg
adc
leave
pop
fs
jo
and
sub
or
ljmp
or
mov
pop
adc
shl
xor
dec
cmp
pusha
int
loope
int3
aam
imul
mov
push
add
jbe
push
scas
xchg
and
stos
pop
shr
jns
pop
inc
xlat
clc
cltd
jne
sarb
push
cmp
insb
mov
xchg
aad
and
stos
pushl
sbb
xchg
jecxz
test
push
pop
cmp
ljmp
fs
fsubs
mov
push
mov
je
sub
jnp
mov
adc
mov
jne
jp
cmp
clc
xor
adc
push
push
jnp
scas
mov
insl
inc
cmp
sbb
cmp
adc
push
je
or
fdiv
adc
mov
mov
push
lods
aas
pop
push
adc
sbb
jg
stc
sbb
push
mov
cmpsl
push
ja
sub
stos
xorb
pop
rcrl
arpl
jnp
icebp
enter
jnp
out
and
das
sbb
xchg
or
bt
stos
pop
cli
in
sbb
inc
sbb
jg
lock
movsb
dec
inc
mov
xchg
xchg
mov
btc
test
leave
add
xor
pop
scas
sub
inc
adc
mov
xchg
out
cmpsl
xchg
test
fs
pop
dec
sub
adc
test
add
jo
inc
jge
and
mov
xor
shrl
imul
icebp
dec
inc
mov
into
in
sub
sbb
add
cmp
push
leave
fisubs
inc
loope
orb
cmpsl
mov
adc
or
mov
outsb
adc
xor
xchg
test
sub
addb
ja
sbb
popf
sub
test
sbb
testl
lods
xchg
mov
xchg
fiadds
push
subb
es
xchg
das
ja
dec
pop
push
mov
fdivs
gs
lock
jnp
dec
stos
fildll
mov
jp
addr16
jae
loopne
hlt
pushf
mov
pop
mov
shll
mov
cmp
jle
jne
js
or
inc
idiv
inc
shl
faddl
pop
mov
adc
push
repnz
cltd
jnp
sub
xchg
loop
xchg
faddp
push
insl
pop
dec
addr16
dec
cli
jmp
add
fdiv
insl
push
pop
and
jge
inc
fwait
repz
fs
popf
cmp
popf
sub
inc
cmovs
sbb
cmp
cmp
and
sub
xor
mov
mov
cmp
inc
mov
jnp
xor
dec
lods
push
push
sti
push
push
and
mov
adc
jge
inc
incl
adcl
insl
out
inc
lds
cli
das
pop
xor
jle
jp
mov
in
and
clc
and
push
and
pop
sbb
add
mov
and
cmpsl
in
les
loopne
das
insl
adcl
jl
mov
pop
lahf
fs
subb
pop
jg
jge
adc
push
and
mov
sbb
lea
mov
mov
push
sahf
leave
lods
jns
inc
stos
pop
xor
push
fidivs
fadds
out
mov
lahf
pop
or
inc
aad
or
mov
cmpsb
and
xor
int3
xchg
hlt
cs
sti
sti
push
cmp
xchg
push
jg
mov
test
stos
fidivrs
test
lods
ds
fcomps
in
into
lods
xchg
pushf
and
lods
lds
xor
push
adc
mov
jl
dec
arpl
xor
mov
xor
sub
icebp
lock
mov
xorb
dec
sbb
jmp
or
sub
outsb
int3
roll
mov
push
xchg
mov
movl
ret
cmp
pop
mov
aam
aaa
filds
dec
ljmp
stos
or
hlt
jecxz
pop
cmpsl
js
outsb
xchg
fnstcw
sti
dec
dec
lock
stos
xor
ja
das
adcb
je
fistpl
jg
inc
xchg
jb
push
push
cwtl
xchg
lcall
mov
int
fidivl
es
les
idiv
xor
push
inc
orb
aad
repz
jno
push
dec
cmp
add
sbb
push
inc
and
sub
sbb
repnz
jno
pushf
divb
sahf
test
lcall
cmp
lcall
cs
adc
push
cld
test
lods
pushf
adc
inc
xchg
int3
jbe
mov
mov
push
icebp
lea
repz
arpl
pop
cmpsb
int3
pusha
and
dec
fdivp
inc
in
and
fwait
pop
jle
aam
outsb
cmpsb
sub
movsl
xlat
les
fisttpl
xor
loopne
mov
addr16
xor
mov
xor
mov
rorb
ret
adc
adc
mov
or
and
aaa
sub
sub
and
fisubl
sub
push
add
mov
pop
cmc
pop
cmpsb
xchg
dec
fsubp
in
xchg
mov
xor
adc
aaa
aaa
jl
test
lea
mov
cli
test
fcompl
mov
sahf
popa
sbb
push
add
jg
ss
aam
or
addr16
andb
or
mov
and
mov
xchg
cmp
pop
or
sbb
jne
xor
out
sbb
jno
out
jmp
jb
lret
mov
test
call
mov
add
mov
mov
daa
inc
mov
movsl
sub
add
xchg
add
lret
roll
ds
jbe
out
mov
fiadds
aaa
inc
arpl
add
fwait
adc
scas
repnz
fs
test
sub
mov
cmp
dec
and
pop
in
mov
gs
rorb
add
adc
lcall
outsb
mov
push
xor
jns
stos
sub
pushf
mov
dec
cmp
sti
roll
or
jo,pt
stos
push
xchg
adc
sbb
sahf
sbb
ds
stc
push
jbe
daa
gs
adc
mov
jnp
pop
pop
fstps
pop
pushf
xchg
decl
dec
xchg
dec
and
jo,pn
push
push
mov
lret
xlat
inc
mov
adc
inc
dec
pop
cwtl
subl
dec
cmpsl
shl
lods
dec
inc
pushf
das
es
out
xchg
out
mov
inc
sbb
roll
push
adc
insl
jne
mov
push
hlt
or
in
cmp
and
ret
leave
out
testb
adc
mov
add
rol
popf
or
cmpsl
lcall
inc
fst
sbb
and
negl
add
and
cld
pop
lea
pop
adc
jne
and
shrl
mov
daa
filds
iret
loopne
jo
out
fidivs
jbe
loop
insl
aam
and
es
int
pop
incl
sbb
rclb
std
inc
dec
test
std
jae
xchg
divb
fnstsw
mov
arpl
or
mov
rol
cvtps2pd
jmp
cli
das
fsubs
fdivs
rorb
out
fadds
imul
outsb
push
mov
stc
push
jmp
into
rclb
mov
xchg
jo
in
fwait
inc
icebp
jl
rorl
and
test
movsb
sbb
mov
arpl
sti
std
pushf
pop
mov
mov
xor
mov
and
mov
dec
push
push
rorl
mov
push
or
repz
push
inc
sahf
xchg
inc
aam
adc
mov
push
test
sbb
ljmp
pop
leave
pop
push
scas
mov
stos
call
cmpsb
dec
jns
xchg
test
in
inc
in
in
test
jle
mov
cltd
aad
xchg
lods
sbb
jge
lods
test
push
loopne
sti
mov
lock
lds
push
mov
mov
cmp
push
jmp
jl
mov
test
lods
or
inc
hlt
frstor
xchg
or
push
and
sbb
adc
hlt
scas
lds
adc
jb
loope
sarl
sub
std
imul
cmp
jmp
mov
add
cmp
into
aad
imul
xchg
push
ds
inc
cmp
pop
out
mov
sahf
testl
push
lea
aam
sub
sub
pop
dec
mov
or
leave
sbb
pusha
adc
push
inc
mov
pop
push
cmpsl
jmp
mov
mov
into
mov
push
arpl
mov
inc
jl
push
dec
sbb
daa
sub
sub
push
mov
movsb
and
enter
jbe
and
out
add
xor
adc
stc
push
pop
jge
inc
mov
stc
cltd
outsl
sbb
mov
add
mov
out
and
lds
xor
sub
xchg
sub
or
sub
sahf
cltd
das
sbb
sub
cmp
jne
mov
sbb
add
out
inc
jp
inc
xchg
mov
mov
testl
mov
shlb
inc
cmp
out
cmpsl
add
insb
mov
out
in
sub
test
xor
popa
push
ret
pop
inc
into
ret
mov
addb
sti
andb
fidivrs
je
mov
or
jnp
xor
mov
lock
lcall
imull
mov
rclb
icebp
inc
test
iret
imull
and
sub
jmp
mov
adc
pop
das
out
sbbb
sub
and
xchg
and
pop
rcrl
push
ds
add
cmc
pop
iret
sbb
mov
dec
xor
jnp
outsb
out
fs
jnp
out
lret
sbb
jl
insl
jae
out
xchg
xchg
pop
and
addr16
sbb
adc
sbb
inc
in
push
cmp
test
js
sub
leave
mov
inc
cmpl
in
popf
stos
nopl
push
cltd
cltd
add
int3
cli
bnd
scas
das
cmp
adc
push
jae
sub
gs
pop
and
inc
lock
subl
push
subl
add
outsl
xchg
mov
adc
mov
decb
insl
les
cmp
lods
fs
xchg
aaa
jno
repnz
jbe
sbb
js
test
sti
jl
pop
dec
adc
push
inc
es
loopne
add
push
mov
push
imul
add
jns
jbe
jle
cld
adc
aas
pop
inc
pop
dec
pop
add
jne
mov
ja
and
shrb
jbe
add
pushf
stos
push
jle
cmpsb
orl
sbb
sub
xor
js
pop
jge
ds
cmc
xor
in
icebp
repz
mov
push
add
mov
and
pop
iret
leave
ret
data16
out
add
jno
sub
imul
js
cmp
out
add
test
cwtl
xchg
ss
fnstcw
insb
mov
and
rorb
jb
cli
mov
stos
sarl
jns
push
cmp
add
xchg
test
add
mov
or
push
push
pop
insl
loope
mov
sbb
or
out
mov
cli
movsb
outsl
fcomip
cmp
std
pop
cmp
inc
ret
mov
mov
push
mov
cmpb
sub
movl
outsb
mov
pop
movb
test
in
lret
cmp
mov
lock
arpl
sbb
cmpsl
rcrl
pop
pop
push
inc
mov
mov
loopne
cli
pop
test
bound
data16
add
scas
push
push
mov
push
fistps
dec
xchg
imul
and
or
mov
int3
lea
xor
mov
loop
ret
jl
adc
or
cli
sub
dec
sub
mov
and
nop
sahf
push
repnz
sbb
icebp
cmpsl
jb
dec
in
and
ja
lret
mov
sbb
cltd
mov
cwtl
push
cmpsl
cmp
imul
daa
xlat
fwait
pushl
dec
mov
daa
cmp
mov
les
dec
mov
cmp
out
xor
xor
dec
iret
or
add
rcll
or
outsl
push
push
arpl
fstpl
outsl
push
iret
cmp
sbb
inc
shlb
xor
push
sbb
push
inc
lods
lret
ficomps
sbb
jmp
and
rcrb
jmp
arpl
cmp
jbe
and
and
movsb
xchg
stc
into
dec
xchg
sbb
mov
push
mov
inc
or
dec
lcall
ret
pushw
outsl
add
ss
icebp
out
fwait
lea
loope
inc
mov
or
mov
push
jb
dec
xchg
push
fwait
insl
inc
jnp
mov
fldl
xchg
pushf
mov
mov
or
loop
rep
and
ja
ljmp
jns
ja
std
or
mov
push
adc
add
pusha
sbb
jae
pop
push
cltd
test
mov
fisubs
xchg
int3
pop
jb
or
rolb
jecxz
cltd
aaa
ficoms
pop
sbb
fmull
inc
out
mov
insb
push
ret
adc
sub
jge
aad
sbb
mov
jmp
mov
out
in
xor
pop
dec
pop
inc
jbe
repnz
test
inc
dec
shrb
mov
cmpsb
xor
mov
add
mov
mov
mov
dec
js
mov
pushaw
lea
scas
popf
or
xor
insl
outsb
sbb
stos
fldenv
nop
push
fisubl
jmp
loopne
lods
add
ret
sub
sub
mov
mov
test
xlat
into
dec
sbb
or
mov
xchg
inc
xorb
push
jg
adc
aam
push
or
cmpsl
adc
cmpl
cmp
push
fdivrl
jmp
or
cmp
je
dec
dec
scas
test
mov
jnp
sbb
push
or
jo
neg
in
mov
push
push
jl
or
bound
leave
or
pop
rcrb
cltd
insl
push
outsb
push
in
lds
jecxz
dec
test
xchg
push
aas
ret
orl
mov
mov
xchg
das
adc
pop
mov
mov
insl
aas
xor
in
mov
sbb
cltd
outsl
sti
stc
lea
mov
mov
imul
mov
fwait
js
xor
and
andl
call
cmp
jl
sar
shlb
and
jae
inc
mov
mov
mov
pop
mov
or
jl
ljmp
popa
adc
push
mov
dec
adc
nop
in
frstor
mov
pop
dec
adc
lock
rcr
mov
outsl
cmp
push
pop
mov
std
into
aad
fisttps
push
xchg
mov
xor
adc
cmc
dec
repnz
jecxz
and
jbe
cmp
js
sbb
out
push
fistl
test
data16
insb
ja
or
out
mov
not
or
fdivrs
and
sbb
fwait
jmp
rolb
push
sub
js
xchg
insl
ret
stc
fldt
jge
push
lea
lret
test
imul
and
push
dec
incl
faddp
loope
rcrb
push
sahf
xchg
ror
clc
clc
jmp
mov
arpl
xor
ret
jno
mov
xchg
sti
dec
adc
push
mov
sti
outsl
fs
sbb
mov
outsl
sub
xor
aas
mov
or
mov
out
cmp
push
dec
lods
cli
cmpsl
jnp
or
mov
stc
loopne
enter
or
insb
lcall
add
mov
push
cld
shl
sub
imul
push
mov
jp
pop
sbb
cmc
es
push
add
test
lret
hlt
mull
rcrb
push
lea
jp
mov
repnz
sbb
roll
dec
popf
and
pop
in
je
sub
jae
pop
xchg
mov
les
push
stos
into
xchg
push
stos
pop
jbe
xor
cmp
pop
add
in
sbb
xchg
ret
fdiv
fidivl
jnp
jo
rorl
lret
pop
xchg
out
jno
xchg
mov
and
push
in
iret
dec
pop
mov
pop
iret
or
shl
push
enter
dec
jnp
mov
movsl
inc
or
les
movsl
testl
jl
popa
int3
jecxz
mov
das
lods
iret
push
cmp
xor
loop
popf
mov
jne
pop
scas
scas
nop
cld
pop
jnp
mov
in
push
hlt
jmp
jmp
pop
fwait
or
add
sbb
inc
dec
xorb
mov
jno
push
mov
mov
pop
inc
adc
jb
and
ficoml
je
push
int3
adc
es
dec
mov
jle
xlat
mov
xor
cmp
lahf
adc
cld
ficomps
fldenv
lcall
adc
or
adcb
iret
cmpsl
pop
mov
fcmove
pop
mov
insb
pop
xchg
mov
jle
inc
repz
add
add
out
xlat
mov
cwtl
lods
fsubrp
pop
adc
mov
addr16
cmc
jmp
add
fcomp
xorl
push
sub
insl
mov
push
ficoml
dec
xlat
lahf
pop
jb
mov
mov
in
nop
rcrw
pop
jle
fwait
test
out
jno
xchg
pop
fs
sbb
test
jo
jg
mov
push
and
add
xorb
inc
negb
cmp
adc
es
test
add
lea
movsb
cs
fistpl
mov
push
jnp,pt
jbe
cmp
mov
inc
rcrb
in
shll
pop
jns
xchg
insl
mov
inc
ret
cli
pushaw
add
divl
arpl
mov
push
adc
jo
js
test
sbb
icebp
xchg
push
dec
bswap
cld
add
data16
mov
add
jmp
push
sbb
data16
pop
xchg
push
ds
in
adc
adc
jge
xchg
js
rorl
jp
loop
xor
cmpsb
pusha
stos
push
not
dec
mov
mov
jo
push
lock
inc
fldl
ds
adc
pop
cmpsb
fisttps
ficompl
dec
sbbl
xchg
xor
lcall
inc
fildll
mov
das
test
jmp
mov
and
int
push
aas
xchg
cwtl
int3
arpl
rol
dec
popf
popf
lret
mov
sbb
popl
gs
xor
inc
mov
insb
xor
adc
mov
je
pop
cs
cwtl
inc
xchg
mov
sbb
lcall
sub
lods
pop
stos
cli
inc
sti
jg
mov
cmc
mov
mov
add
out
pop
and
adc
push
or
iret
mov
add
push
add
sbb
xchg
mov
imul
jmp
loope
cmp
imul
in
jnp
loop
sbb
test
and
push
pop
inc
pop
mov
or
hlt
xchg
sahf
cmpsb
decl
ja
mov
dec
imul
push
xchg
inc
push
pop
in
push
add
add
mov
or
out
pop
xor
iret
or
inc
xchg
pop
popf
lcall
lahf
cmpl
add
push
mov
pop
data16
ja
decb
std
fcoml
sbb
push
mov
sub
nop
mov
int3
mov
push
sub
sahf
popf
push
push
dec
jmp
and
push
pop
ss
xor
jl
mov
xor
das
or
lret
or
mov
leave
insb
adc
adc
shrb
push
outsl
push
lcall
push
test
mov
je
out
sub
clc
and
mov
cmp
imul
lret
jmp
xor
adc
loopne
and
xchg
jecxz
sub
lahf
lock
sahf
mov
mov
jbe
mov
jno
in
out
popf
lahf
movsb
mov
or
mov
lret
push
add
xchg
mov
inc
lock
pushf
les
jae
sbb
aas
dec
xchg
test
frstor
loop
xorl
gs
inc
enter
xor
cmp
pop
clc
out
addr16
mov
mov
pop
or
insl
lds
sti
add
cmp
aam
leave
xor
inc
jne
jbe
shrl
and
jno
iret
sub
iret
adc
cld
dec
jno,pt
fnstenv
cmp
push
aam
je
pusha
ss
sub
popf
or
mov
int
fidivrl
sbb
cmpsb
pop
adc
xchg
in
mov
loopne
inc
pop
pop
pop
arpl
in
in
hlt
and
adc
inc
cmp
xor
xchg
insl
testb
push
dec
push
fsubl
push
mov
mov
gs
popa
stos
in
js
mov
adc
int3
adc
cmp
gs
stos
push
mov
sub
mov
iret
andl
ret
lods
nopl
scas
pusha
in
sbb
sub
ret
jns
sbb
mov
pop
in
jg
ds
cmpsb
sbb
mov
sbb
aaa
adc
jmp
dec
push
push
lock
aas
cmp
push
lret
or
sbb
cmp
insl
adc
repnz
inc
iret
and
mov
mov
inc
jmp
and
fistl
adc
sbb
mov
std
jno
mov
sub
sbb
cmp
ljmp
adc
jns
in
scas
mov
mov
pop
cld
mov
lcall
xchg
lcall
subb
mov
fidivrl
jge
or
lret
test
inc
jbe
std
jmp
mov
pop
sbb
or
pushf
out
outsl
insl
cmp
shl
mov
push
notb
sbbl
dec
mov
mov
xchg
jne
xor
cltd
mov
xor
mov
jbe
sub
bound
jnp
sbb
cmp
mov
cmp
mov
int3
lcall
outsl
jp
ja
xor
jb
cmp
mov
adc
push
xchg
mov
mov
sub
cmc
fwait
jl
push
fcompl
aam
shr
in
mul
adc
xchg
jecxz
data16
mov
xchg
call
das
scas
inc
icebp
adc
mov
divb
pop
xor
cli
pop
out
mov
xchg
fadds
or
mov
repz
arpl
test
inc
adc
sbb
les
mov
inc
mov
sahf
pushf
ret
es
push
adc
pop
mov
sub
aaa
ljmp
push
mov
pop
stos
arpl
push
jnp
neg
xor
sub
call
popa
jns
pop
xchg
das
das
lret
paddb
or
in
repz
cmp
cwtl
test
push
sub
inc
or
sbb
inc
lret
xchg
pop
leave
fsubl
loop
pop
add
cmpsb
loope
mov
aas
pop
jae
cli
test
pusha
outsb
cmp
dec
jg
pushf
andb
ljmp
sarb
push
inc
je
cmp
sub
mov
sub
jns
xchg
cltd
aad
rorb
add
stc
aam
movsl
mov
jmp
fucomp
mov
or
sbb
xor
jp
sub
psubusw
mov
clc
mov
jb
pop
pop
push
push
les
ret
jb
lcall
arpl
or
popf
in
push
pop
decb
dec
mov
cmp
icebp
mov
and
imul
mov
dec
sahf
add
dec
popf
out
push
sub
dec
and
adc
or
fbld
imul
arpl
adc
test
lahf
mov
addr16
dec
add
jno
lcall
popf
sbb
mov
xor
sub
imul
std
push
xchg
clc
xchg
push
idivb
xchg
adc
out
movsb
xchg
cmpsb
xor
shll
inc
pop
std
pop
and
mov
ds
jp
pop
test
add
jmp
push
fsts
arpl
jo
pcmpgtd
xorb
cmpsl
pushf
int3
or
mov
cwtl
mov
iret
and
pop
aaa
jle
push
mov
mov
jb
xor
dec
outsb
movsb
test
dec
test
xchg
shrl
xchg
cli
aas
xlat
shlb
pusha
pop
sbb
cs
ljmp
gs
into
out
leave
ds
mov
jne
or
cmpb
ds
xor
pop
inc
cli
shlb
inc
aas
or
jb
dec
int3
xchg
iret
fdiv
mov
dec
arpl
addr16
aaa
test
test
adc
inc
loop
mov
mov
sbb
es
and
call
cltd
inc
adc
inc
fidivs
add
cwtl
inc
lods
push
test
inc
jg
nop
push
add
sub
imull
push
sarl
sbb
mov
jnp
out
xchg
aas
setl
mov
mov
orb
mov
add
xchg
lods
dec
cmc
xchg
adc
mov
push
and
pusha
jae
cmpsl
loope
dec
push
jl
jle
test
mov
ljmp
movsl
hlt
xor
cld
inc
jmp
xchg
stc
mov
sti
addl
loopne
ror
leave
push
xchg
jl
push
test
sbb
std
outsl
cmp
fcomps
int3
xchg
xchg
and
das
daa
mov
lcall
int
mov
aad
js
or
movsb
fiadds
jo
or
cmp
adc
addl
lods
shrl
lcall
iret
repz
mov
inc
test
stos
dec
jge
pop
cmpl
cmp
cmp
pop
sub
xchg
mov
mov
or
dec
mov
jmp
das
mov
and
cmp
mov
sub
push
orb
push
xchg
xchg
pop
sub
xor
ja
mov
arpl
scas
fucomp
fmull
inc
xor
aad
xchg
leave
cmp
fwait
cli
inc
bound
mov
mov
mov
fcmovbe
mov
daa
ret
loope
std
ret
push
push
mov
lods
pusha
pop
sbb
std
std
arpl
cmpsb
sbb
mov
repnz
mov
andl
mov
test
and
lret
fldt
mov
sbb
movsb
mov
jmp
cmpsb
aas
js
adc
rcrb
addl
mov
and
leave
pop
add
cmp
test
jno
add
sahf
nop
out
insb
inc
sbb
lahf
pop
inc
push
fidivrs
popf
xchg
ss
int
jmp
pop
repz
jnp
mov
rcll
push
inc
icebp
rcrb
sbb
lock
lods
aad
push
sbb
xchg
xchg
push
pop
lock
pop
push
xchg
dec
fs
mov
fs
jnp
sbbb
std
mov
sahf
mul
nopl
inc
jle
movl
lret
mov
vpshuflw
roll
movsl
dec
rcrl
ds
fimuls
stc
mov
or
mov
fbstp
loop
and
pop
mov
test
imul
lret
aad
xchg
jg
scas
loope
mov
adc
sbb
js
jb
mov
xor
scas
fs
mov
shlb
jno
popa
xchg
lcall
lods
or
xchg
jl
fidivrs
sbb
sub
addr16
mov
clc
repnz
jl
xchg
aaa
adc
add
popf
movsl
pusha
ret
and
stc
pop
mov
fwait
test
loopne,pn
in
adc
lea
push
xor
xor
arpl
popa
xor
leave
adc
mov
or
outsl
mov
icebp
jb
cmp
sbb
jl
scas
insb
into
sub
arpl
add
mov
mov
sahf
inc
fisubs
cwtl
and
inc
fsts
into
xchg
push
arpl
jle
mov
insb
inc
cmp
je
shrb
xor
stc
mov
jne
jg
sub
fwait
inc
push
test
xchg
and
inc
push
imul
aaa
xor
mov
subl
outsb
iret
scas
xchg
and
xor
out
inc
cmp
cld
int
and
push
and
jne
outsl
popl
pop
push
mov
pop
movsl
push
xor
mov
negb
ret
enter
int
cmpsl
mov
stos
mov
negl
xchg
and
cs
xchg
mov
push
rcll
adc
push
xchg
in
jbe
fs
push
out
push
mov
icebp
gs
loop
pop
cltd
cs
cltd
push
mov
mov
in
mov
fnstenv
sub
pop
into
sbb
test
icebp
add
mov
lods
stos
fwait
mov
jns
arpl
pop
add
ja
mov
jecxz
pushl
dec
pushf
ja
iret
mov
adc
out
es
mov
sbb
scas
jne
pop
mov
ret
aaa
fldl
xchg
lcall
ss
rcrl
ss
icebp
fwait
jp
add
enter
cmp
sbb
mov
incl
sub
sahf
mov
xchg
mov
andl
xor
into
push
push
sbb
daa
pop
mov
mov
adc
in
inc
aam
mov
push
jp
push
or
arpl
fwait
jns
shlb
xor
pop
rol
pop
pop
sub
iret
jae
jo
subb
adcl
mov
out
adc
add
fs
xor
rcl
push
ficoms
mov
add
add
outsb
push
add
cmp
clc
add
pop
mov
or
push
dec
out
xorl
test
rol
lods
sub
add
sbb
lahf
jmp
xchg
xor
outsl
rcrb
repz
cs
iret
lock
or
push
ljmp
push
sub
inc
fistpll
and
icebp
fnstenv
addr16
jo
inc
fmull
pop
mov
or
es
mov
pop
xchg
mov
inc
push
cmp
test
or
add
in
test
popa
push
push
inc
cwtl
mov
insb
test
inc
bound
insl
aam
pusha
pop
mov
adc
stc
xchg
nop
mov
daa
dec
ret
fcoms
cmp
ret
jbe
sti
mov
fcompl
cltd
sub
cmp
inc
mov
lahf
xor
loopne
xchg
and
scas
std
jbe
mov
cmpsl
add
add
sarl
stos
sahf
jl
gs
sub
xor
sbbl
and
test
sbb
fsubrp
mov
fadd
cld
out
jp
test
ret
pop
mov
wrmsr
cmp
pop
push
pop
lret
inc
dec
hlt
lods
pop
std
aas
out
jb
mov
dec
out
cmp
push
adc
mov
adc
dec
js
fldcw
mov
dec
mulb
lret
mov
lcall
and
fdivrs
dec
adc
popa
add
jmp
gs
andl
rcrl
push
lock
jo
cmp
or
scas
test
add
scas
and
sbb
push
out
and
mov
add
adc
test
cmp
xchg
repnz
or
stc
mov
mov
nop
mov
ficompl
push
push
sbb
sahf
lret
sub
sarb
or
cmc
mov
mov
xlat
inc
scas
popf
and
cmp
in
push
mov
inc
out
and
sub
stos
ret
mov
dec
lcall
dec
iret
outsl
std
sbb
in
lret
sub
out
int3
dec
out
xor
in
pop
cmp
stos
out
out
mov
and
loope
jecxz
rcrb
es
jns
dec
ret
mov
mov
clc
xor
adc
pop
fs
jmp
shl
mov
push
inc
ss
push
and
cmp
sub
sub
fcoml
mov
inc
push
sbb
dec
idiv
shl
jge
sub
lret
dec
lods
and
adc
sub
in
insl
or
inc
pusha
mov
in
cmp
jne
aad
xor
or
ja
pushw
ljmp
aam
in
mov
mov
dec
aad
movsl
cmp
adc
ja
cld
mov
sbb
inc
cmp
dec
dec
shll
xchg
out
stos
pop
xchg
lret
jne
adc
sbb
in
nop
mov
sbb
xor
fsubs
clc
outsb
stc
in
bound
push
ds
fstl
mov
icebp
cltd
pop
push
subl
insl
jmp
pop
fs
adc
sub
scas
pop
mov
pop
std
dec
imul
pop
and
outsb
mov
and
icebp
enter
xor
sti
push
xchg
inc
sbb
push
jns
sub
mov
les
push
push
mov
je
call
cmp
mov
nop
fsubl
in
test
jo
imul
cmp
xchg
push
lods
cmp
leave
cmp
addl
mov
shlb
icebp
jne
bound
fidivl
testb
test
clc
xchg
in
xchg
mov
cmp
xchg
pop
dec
pop
jge
pusha
ret
arpl
inc
in
mov
pop
adc
jmp
inc
push
mov
rolb
test
sub
or
xor
xchg
xor
xchg
and
or
cmpb
ja
and
arpl
jne
jmp
lds
ja
cld
inc
cmp
clc
sbb
pop
xorl
ror
aad
inc
pop
lret
imul
or
test
shll
int3
into
inc
aaa
fs
fwait
data16
out
xchg
jg
jmp
aad
es
jl
loop
frstor
jp
sarb
loop
jle
es
inc
faddl
mov
div
adc
mov
pop
ss
outsl
sbb
jns
jge
in
xchg
add
arpl
popa
ja
mul
bound
out
outsl
xchg
loope
and
mov
inc
sbb
rep
mov
lock
bound
icebp
fwait
push
pushf
int3
test
jne
in
mov
xlat
mov
cld
pop
shr
int3
lcall
adc
pop
imul
cs
dec
mov
aas
push
and
xchg
xchg
xchg
lcall
add
xor
dec
jbe
cmpsl
cwtl
sahf
pop
pop
inc
sub
adc
push
leave
cmpsb
and
fisttpl
mov
xchg
cmp
or
inc
out
ss
mov
or
xor
or
jae
mov
lret
ret
jecxz
call
cmp
mov
mov
or
lret
stos
fdivrs
pop
cwtl
sub
xchg
dec
add
sbb
mov
push
outsl
enter
es
int3
repz
bound
jbe
xchg
sbb
fcmovb
xchg
dec
mov
repz
out
add
dec
mov
mov
out
push
out
aam
push
jp
iret
pop
push
or
push
pushl
stc
mov
int3
in
int3
or
das
mov
sbb
pop
and
sub
xor
jmp
adc
lods
xchg
push
or
pop
pop
adc
aas
fmulp
xchg
roll
xchg
lahf
lea
int
lahf
lods
push
add
mov
nop
sbb
leave
leave
lods
int3
pop
push
pop
xlat
test
ficompl
subl
jp
cs
sub
fxch
daa
inc
cmp
xchg
mov
push
or
out
nop
lahf
sysret
into
jbe
mov
clc
scas
insl
insb
test
lahf
mov
les
adc
mov
jbe
mov
mov
sub
xor
callw
in
adc
fxch
mov
inc
sarb
jo
test
push
push
inc
fsubrs
ljmp
sub
loope
divl
mov
lods
divl
push
pop
into
iret
fmul
imul
dec
cmpsl
mov
pop
cmp
movsl
push
int
push
nop
and
cwtl
pushf
and
cmp
ds
mov
mov
push
jae
out
scas
sub
loope
mov
movsl
sub
icebp
in
clc
cmp
inc
inc
and
adc
and
push
mov
jl
int
out
mov
es
add
jne
shl
es
les
inc
adc
push
fsubs
je
or
inc
lds
inc
loop
xor
mov
out
mov
xor
data16
mov
sbb
xchg
pop
xor
int3
int3
pop
and
push
push
loope
push
or
add
nop
movsl
ja
leave
into
hlt
mov
inc
ret
in
mov
sub
repnz
fsts
pusha
push
shr
mov
dec
sahf
call
sbb
daa
push
inc
cmpsl
outsl
sbb
out
jp
or
add
dec
dec
jb
mov
lret
sub
jne
add
mov
push
xchg
xchg
fistpl
jge
mov
xor
pusha
bound
out
sbb
jp
js
mov
cmp
inc
bound
loop
scas
int3
mov
inc
dec
rolb
mov
lret
adc
jg
negb
es
sub
seto
movsb
mov
cmp
fisttpll
push
aam
fstpl
jge
xchg
add
or
xchg
outsl
test
pop
adc
xchg
sahf
adc
cmp
push
insb
into
sub
in
sbb
test
mov
stc
mov
inc
push
mov
push
push
mov
pusha
xlat
sub
lcall
imulb
jae
ret
pop
jo
aaa
push
adc
addr16
jp
mov
orps
add
call
push
xchg
xchg
in
icebp
fimuls
mov
or
mov
dec
aas
sbb
or
int3
in
je
xor
xchg
aas
call
cmp
dec
jnp
insb
add
dec
aas
mov
jnp
add
pop
std
stos
add
sbb
in
pop
shll
cltd
clc
cs
sbb
lret
pop
cmp
and
fwait
jo
fisttps
xchg
je
rsqrtps
jo
pop
push
ja
push
rorl
xchg
jmp
in
sub
and
pop
add
gs
loope
jg
pop
in
paddb
add
sub
push
xor
hlt
push
sub
xor
mov
pop
int3
ss
fs
sub
push
or
mov
fidivrl
out
gs
sbb
cmp
fbstp
xor
movsb
pushl
test
push
pop
shrl
std
jl
enter
mov
pop
xor
std
cld
rcl
imul
push
or
jle
sub
lcall
call
notb
ret
mov
inc
orl
cmove
imul
sub
loop
adc
inc
popa
xchg
mov
cmp
popa
gs
lahf
adc
or
arpl
or
sub
pop
fistpll
leave
scas
scas
pop
es
hlt
inc
ret
and
data16
adc
and
mov
jecxz
fstl
mov
into
stc
sub
mov
stos
add
cmp
popa
imul
mov
test
test
call
push
imul
in
mov
js
movsb
jecxz
or
lea
ss
fildl
mov
icebp
das
inc
add
push
arpl
insl
push
int
lcall
mov
mov
ret
xor
pop
out
lds
jbe
jnp
cmp
cmp
mov
rcll
push
and
outsb
dec
add
dec
cmp
pop
daa
repnz
pop
popf
mov
ret
sti
jge
mov
push
faddl
add
repz
out
lahf
mov
cmp
push
test
jnp
cmp
ret
insb
jae
test
nop
aad
xor
push
adc
xor
jae
jae
mov
inc
js
ss
pop
pop
test
rorb
sahf
bound
sub
cs
jo
fwait
add
and
mov
or
inc
mov
lock
push
gs
orl
bound
jno
stc
add
les
pop
mov
aam
push
lods
mov
cmpl
stos
int
inc
ffree
addr16
mov
in
jbe
and
loopne
push
cmp
filds
jle
movsb
and
mov
jg
test
mov
jle,pt
xor
ror
mov
pusha
leave
inc
outsb
inc
jp
cmpsb
adc
pop
fwait
pop
mov
cwtl
mov
pop
jge
and
pop
movsl
lcall
insl
shlb
add
arpl
cwtl
dec
fsub
in
daa
idivb
add
lret
cmp
loop
cmp
leave
out
loopne
mov
mov
cmp
cmp
add
cmp
add
sub
shlb
mov
xchg
or
pop
scas
push
ss
and
call
mov
add
mov
dec
test
xor
loope
out
insl
gs
xchg
jbe
push
adc
repnz
sub
jns
add
pop
fcomps
sahf
jno
out
mov
pop
dec
sub
adc
jmp
push
out
jg
xor
or
sub
push
stos
stos
add
outsl
xor
jmp
insb
ss
mov
in
in
cmpsb
sub
in
lret
xchg
pop
jl
cmpl
test
lods
mov
push
lahf
jb
and
xor
mov
and
adc
inc
fucomip
in
inc
fisttpl
outsb
xchg
das
jbe
push
jle
sbb
sbb
jmp
jge
cmp
mov
jb
ret
fs
mov
and
pusha
repnz
in
daa
lahf
test
mov
xor
xor
pop
jl
mov
xchg
jle
jno
add
mov
xchg
push
and
movsb
inc
outsl
add
xchg
scas
adcl
inc
jle
push
into
mov
and
jno
mov
outsl
pop
xchg
addr16
cmpsb
push
mov
sub
jne
inc
dec
scas
jl
and
into
pop
jge
pop
and
pusha
cwtl
dec
mov
ret
xchg
dec
dec
icebp
mov
push
dec
inc
pop
xchg
in
push
das
out
jl
into
scas
push
sub
pop
cmpsb
inc
insb
leave
sbbl
fisubrs
inc
fsub
jmp
lock
aas
jg
jo
les
mov
ja
inc
mov
mov
test
push
inc
jl
dec
stos
lds
es
sub
sub
sbb
inc
das
stc
mov
mov
adc
add
and
rorl
cltd
push
out
dec
faddl
jns
call
js
ja
inc
sbb
lcall
xchg
lock
mov
sbb
cmp
insb
stos
in
mov
ja
mov
into
mov
ss
push
shrl
sub
popa
add
sbb
roll
cld
jmp
dec
mov
or
sbb
inc
mov
or
mov
fwait
int3
add
cmp
adc
ss
push
jo
or
mov
mov
and
and
shl
xchg
rolb
and
cmpsl
sbb
adc
or
sbb
cmp
ror
fnstenv
mov
fsubl
jl
sbb
lret
fsubl
adc
pushf
call
lret
push
adc
cwtl
inc
mov
lea
clc
int
pop
xchg
mov
test
cs
mov
sbb
mov
repz
inc
loop
xor
ret
xor
jle
add
jns
pushf
mov
jl
outsb
dec
inc
fcmovne
loope
scas
adc
or
dec
jo
inc
int3
dec
test
movsl
pushf
sbb
adc
test
aaa
mov
out
cmp
push
mov
mov
mov
sbb
jne
fistpl
std
loop
adcb
sub
imul
imul
xor
sbb
loope
jno
pop
push
in
adc
jb
lods
push
mov
jne
clc
repnz
popf
push
mov
shrl
imul
out
insb
icebp
dec
popa
fwait
mov
xchg
sub
scas
insl
mov
jl
mov
jae
sub
mov
jl
add
subl
lea
mov
imul
add
jmp
out
xor
mov
clc
add
xchg
sahf
mulb
aam
and
push
inc
xchg
insb
in
and
add
push
mov
mov
xchg
popa
inc
xchg
lods
outsb
lods
push
ss
in
sbb
es
mov
mov
jae
cmp
xchg
inc
outsb
inc
decb
add
imul
in
stos
sti
je
inc
sub
xor
adc
into
popa
idiv
mov
xorb
idivb
sbb
pusha
lods
xor
daa
inc
outsb
idivl
cld
in
jmp
sub
push
adc
loope
outsl
inc
scas
fwait
or
fsts
sub
adc
jns
mov
pop
cs
xchg
xor
shlb
icebp
in
bound
jg
testl
dec
mov
xchg
xchg
sub
lods
mov
mov
sub
icebp
mov
pop
dec
out
arpl
mov
and
sub
outsl
jno
push
aaa
mov
jp
subb
add
pusha
inc
stos
scas
andl
mov
mov
les
stos
sti
js
inc
pop
cmp
add
dec
movups
adc
rcrl
iret
jb
dec
pop
push
dec
popa
lret
dec
sub
cli
mov
add
lds
rcll
and
je
je
test
mov
arpl
std
mov
xor
xchg
cmp
arpl
push
or
mov
aaa
fmuls
add
mov
cmp
mov
push
in
cld
fsubrs
push
bound
imul
enter
mov
add
or
xor
rcll
loop
imul
sarl
hlt
xor
sahf
xchg
adc
loopne
mov
rcrb
mov
jnp
or
outsl
leave
into
sub
aas
clc
mov
adc
sbb
mov
and
loopne
jbe
push
push
mov
test
mov
mulb
ja
or
ss
sbb
fisubs
or
add
ss
popa
jmp
xchg
xchg
out
data16
pop
aaa
into
dec
add
testb
or
pop
stc
sbb
push
xchg
shl
jp
dec
push
sbb
lods
xchg
cmp
fisttpll
pop
hlt
rol
mov
stos
push
into
hlt
push
jmp
xchg
js
inc
sbb
jl
aas
es
xchg
add
inc
jecxz
dec
jg
inc
jns
jo
arpl
std
loope
mov
fcoms
cmp
iret
sub
xor
push
add
cltd
bound
pop
sahf
and
jmp
adc
adc
jle
sbb
ljmp
movsl
add
stos
cmpsl
adc
xor
ret
mov
pop
inc
cmp
or
push
paddb
jbe
pop
mov
test
dec
imul
mov
add
push
xchg
aam
sub
jo
xchg
push
or
outsb
pop
push
sbb
jae
hlt
inc
dec
pop
loop
sub
psllq
sbb
pop
or
mov
dec
ljmp
inc
mov
mov
inc
fsin
daa
ljmp
jmp
aas
rorl
std
popa
sbb
into
inc
fwait
pusha
lret
dec
push
or
cmp
js
jo
in
cltd
pop
js
sbb
out
call
xchg
cmp
mov
sbb
xchg
xor
and
dec
out
sub
stc
cmpsb
in
shlb
arpl
dec
mov
sbb
push
xlat
xchg
xchg
lds
and
loope
dec
sub
bound
mov
js
and
outsl
rorl
and
or
ficompl
hlt
inc
fsubrl
xchg
pop
mov
loopne
and
js
mov
push
testl
outsl
dec
mov
and
fcoms
popa
test
outsb
outsl
and
test
mov
mov
adc
mov
les
sbb
mov
repz
or
insb
add
icebp
loop
ficoms
shl
test
mov
test
sub
movsl
or
jo
inc
lds
pop
inc
mov
push
sub
dec
mov
test
push
test
sbb
cmp
jl
cmpsb
adc
cmp
mov
std
ficoms
stos
cmp
repnz
inc
roll
xor
jecxz
pop
push
xor
outsl
add
mov
dec
das
jno
inc
outsb
dec
test
insb
xchg
jp
sbb
aad
iret
and
cmp
fildll
sbb
jns
lret
cmp
repnz
jns
mov
das
jecxz
shll
iret
cmpsl
add
xchg
ret
decb
shrb
test
mov
mov
fmull
lock
sbb
scas
sub
and
sub
sbb
jae
je
sbb
imulb
add
jmp
out
loope
fucomip
test
mov
sahf
add
sbb
daa
cmp
inc
pop
ljmp
push
pop
mov
sbb
xlat
mov
sbb
cmp
mov
rol
pop
push
insl
jmp
dec
pop
and
sbb
mov
add
jecxz
fsubs
cli
mov
testl
adc
xor
and
dec
movsl
rcrb
push
leave
push
xchg
dec
test
xchg
nop
arpl
cwtl
repz
ljmp
iret
rcll
jbe
in
lds
iret
adc
jae
mov
push
pop
jecxz
loopne
jb
fwait
pop
aam
pop
jmp
ret
dec
mov
and
lahf
and
rcl
and
int3
outsw
mov
mov
rcll
sarb
stos
xchg
mov
in
xlat
mov
mov
dec
notb
push
push
add
stos
adc
dec
mov
xchg
ret
stos
imul
sbb
pop
pop
in
cmp
pushf
mov
or
arpl
scas
lds
push
jl
mov
popf
mov
ror
movsl
loop
pusha
xor
mov
jl
xchg
ret
mov
cmp
mov
negb
int3
inc
rolb
and
or
mov
jp
cwtl
mov
bound
xlat
inc
add
enter
pop
and
xchg
add
ret
mov
bound
jle
mov
aam
and
push
xchg
mov
add
push
and
mov
sub
push
cs
mov
clc
sbbl
cld
pop
dec
jne
adc
dec
mov
test
dec
xor
fildl
mov
jmp
xchg
mov
cmp
or
scas
jmp
testl
dec
inc
mov
or
out
push
out
mov
inc
jne
xor
push
lret
xchg
adc
adc
sarl
dec
stc
inc
or
in
loope
insb
push
jg
push
loop
test
popa
sub
inc
movsb
sub
xor
sbb
jae
mov
rcl
push
xchg
test
xor
add
test
aad
and
inc
mov
testl
cvtpi2ps
xor
sub
int
pop
pop
mov
mov
dec
pushf
iret
adc
or
sbb
stc
sub
lds
pop
sub
ja
aas
dec
xor
xor
xorb
das
lock
adc
insl
and
pop
sar
shl
cmpsl
cmp
push
aaa
popa
mov
add
fstps
push
mov
int3
pop
cmpsl
js
cmpsl
mov
and
or
popl
mov
lahf
aad
xor
mov
jmp
jbe
and
lods
inc
cmp
pop
pop
movsl
xor
push
push
bound
adcb
iret
mov
fcoml
inc
pop
lock
pop
enter
inc
xor
clc
loop
dec
inc
fs
xor
mov
das
adc
imul
jge
mov
repnz
xor
popa
or
dec
push
jno
or
sub
fcmovnbe
jb
xor
fisttpll
jo
popf
call
pop
pop
shlb
add
adc
adc
xchg
lds
pop
push
cmp
test
mov
loope
jne
pop
and
sbb
arpl
mov
ds
mov
pop
std
add
inc
push
sub
lret
loope
adc
sub
sbb
cmpsl
lcall
sbb
scas
mov
xchg
mov
adc
cmc
jmp
pop
xchg
fsubr
insb
add
mov
daa
sbbb
lret
pushf
cmp
lock
dec
jmp
mov
mov
pop
popf
and
aad
mov
mov
mov
fistpl
inc
loope
cwtl
pop
pop
iret
ljmp
in
popa
pop
push
push
cmp
xor
sbbb
adc
sbb
cmp
inc
mov
jae
dec
pop
incl
xor
mov
add
push
adc
gs
add
jns
sar
dec
xor
jle
mov
in
loope
pop
test
xor
out
lret
xchg
mov
add
outsl
andb
insb
adc
sub
xchg
or
xchg
dec
sahf
or
inc
sbb
push
xor
dec
ja
push
and
pop
and
stos
lds
pushf
mov
mov
dec
push
jns
sbb
mov
cs
idivb
sbb
dec
pop
mov
mov
aas
pop
inc
lret
fmul
sahf
jge
mov
cmpsl
mov
rcl
mov
mov
cmp
mov
in
inc
or
nop
jne
inc
mov
xor
jp
ret
push
les
mov
lahf
fimuls
sbb
stos
mov
flds
push
outsl
fldt
fwait
outsb
push
ljmp
out
pop
dec
dec
dec
dec
xchg
aas
loop
sub
mov
add
jae
frstor
add
cs
hlt
jge
adc
push
and
cmp
jmp
adc
xchg
sbb
aam
sti
add
push
es
cltd
sub
cli
cmp
out
sahf
mov
xor
sti
loopne
xchg
jle,pt
leave
icebp
sub
jnp
xor
aas
jle
add
out
or
fwait
loope
sub
lret
jbe
lret
push
js
jbe
mov
lods
lahf
fs
aad
test
jle
push
xor
pop
cltd
fwait
add
xchg
mov
ja
rol
pop
scas
push
and
lcall
adc
jnp
adc
call
shl
mov
jno
stc
pop
jecxz
xor
mov
scas
incb
jne
inc
jmp
push
ret
push
loope
mov
pop
ret
mov
aad
pusha
test
int
jp
cltd
aas
mov
cltd
imul
inc
jo
and
sbb
xor
add
cmp
fwait
and
cmp
hlt
inc
inc
adc
push
mov
cmp
sbbb
push
arpl
daa
in
adc
mov
aaa
repnz
in
hlt
xchg
xor
insb
pop
push
cld
jbe
stos
xchg
jae
jo
int3
hlt
cwtl
add
xor
lods
mov
push
jmp
dec
mov
insl
cmc
loop
fcoms
pop
pop
in
jo
dec
jae
stc
pop
lret
or
dec
in
mov
inc
xlat
inc
cmpsl
or
lea
lea
mov
ret
fisubl
loop
jae
outsl
cmpsb
push
adc
add
pop
loop
addb
les
lods
push
jecxz
push
mov
mov
xor
xorl
mov
sub
add
rorb
mov
pop
dec
testb
je
adc
add
bound
lods
push
or
jno
xchg
gs
mov
pushf
cwtl
fsubl
xlat
sti
into
push
ljmp
imul
std
mov
in
xchg
push
add
adc
dec
sbb
adc
add
in
fs
leave
es
adc
incl
out
push
adc
pop
lds
xchg
icebp
xchg
inc
aaa
push
dec
dec
fwait
mov
lods
stos
ret
pushl
xchg
out
test
push
and
cli
loopne
inc
std
sub
mov
xchg
jecxz
cmp
jbe
push
and
adc
iret
mov
mov
mov
sbb
jmp
cmp
lods
leave
jo
jge
pop
adcl
stos
cmp
in
outsb
adc
outsl
pop
xor
mov
adc
push
gs
sub
fdivs
imul
popa
jne
gs
jo
insb
into
mov
mov
mov
xchg
int3
mov
cmpl
pop
fisubrs
ds
ret
imul
outsl
adc
dec
push
cmc
xor
cmp
xchg
xchg
pop
lods
lea
test
aam
cmp
push
add
test
outsl
add
push
cs
cmp
push
xor
out
pop
outsl
jle
daa
mov
xor
popa
and
sub
pop
out
test
jmp
ds
fwait
daa
mov
stos
fisubrs
push
test
cmpsb
les
inc
ss
jno
and
fistpll
push
hlt
pop
cmpsb
mov
xchg
insl
lods
sbb
inc
popa
pusha
fldl
jae
mov
test
or
cmc
add
mov
sahf
jno
mov
xchg
ret
xchg
sub
cmpxchg
xor
and
pop
rorl
sahf
inc
fsubs
es
je
xchg
mulb
xchg
das
xor
int
adc
aaa
es
pop
mov
lea
xlat
pushf
lret
cmp
dec
addr16
movsl
or
sahf
xchg
call
pushf
outsl
pop
pop
sbb
or
ret
cmc
lods
scas
stc
dec
mov
pop
xchg
jnp
flds
sub
subl
pop
decl
xchg
outsl
outsl
andl
xchg
daa
jge
mov
test
cs
push
push
shll
ljmp
nop
divb
cli
out
out
jle
push
mov
or
mov
flds
js
outsl
clc
mov
in
call
mov
and
std
or
mov
xchg
sub
xor
test
out
mov
dec
sub
jg
in
cs
adc
lea
mov
nop
enter
rorb
add
add
inc
cmp
das
jecxz
cmp
fbstp
inc
mov
aad
xor
fcmovu
roll
int
out
or
outsb
stos
dec
fistl
push
push
mov
pusha
jp
jmp
pop
inc
subb
stc
and
inc
daa
movsl
in
mov
or
stos
orl
mulsd
xchg
shll
pop
pop
push
lahf
mov
add
stc
pop
and
daa
or
cwtl
cmp
iret
mov
xor
push
add
lahf
std
notb
aam
adc
hlt
pop
ljmp
dec
sbb
sbb
popf
xor
shll
mov
push
dec
sbb
bound
gs
mov
sbb
cmp
fcoml
ficoms
adc
xchg
jb
test
mov
cmpl
aad
mov
lock
fsqrt
xchg
mov
in
xchg
test
jb
pop
es
xor
xor
in
in
fists
rolb
xor
cli
add
fwait
aaa
sbb
lea
icebp
shll
mov
test
stos
pop
pop
cli
inc
in
push
xor
idivb
mov
loop
dec
push
add
das
cmp
sbb
jle
cli
pusha
int3
mov
push
in
repnz
ret
dec
scas
pop
push
pop
shll
push
mov
xchg
and
pop
jb
dec
mov
sub
xchg
popa
or
cmc
push
push
icebp
add
xchg
mov
into
cmpsl
xor
inc
fnstenv
cwtl
or
scas
iret
mov
xor
mov
mov
or
ja
jo
loopew
and
cmpsb
and
push
inc
ds
out
outsl
jno
sbb
pop
jl
and
jb
loope
mov
aad
insw
and
fisttpll
cmp
or
xchg
in
scas
mov
inc
mov
sub
pop
push
repz
inc
inc
repnz
lahf
adc
jge
mov
ret
dec
xchg
xor
ss
out
mov
pop
push
and
stc
testl
aaa
sub
fwait
cli
pop
and
xor
aaa
stc
bound
mov
jae
lock
xchg
xchg
imul
adcb
outsl
test
sbb
pop
pop
cmp
mov
dec
lds
in
imulb
inc
mov
xchg
int
mov
xlat
mov
and
pop
sahf
xchg
rcrb
jb
sbb
pop
stos
in
push
dec
mov
cld
add
fmuls
inc
mov
or
fistpll
into
imul
dec
mov
jnp
lds
sbb
icebp
lcall
cmp
xchg
stos
xchg
fstl
scas
mov
dec
cmp
pop
adc
aad
fildl
mov
jecxz
mov
test
add
sub
cltd
ja
int3
loopne
sbb
repz
xor
dec
pop
scas
mov
sub
push
movsl
and
pop
gs
in
push
push
int3
add
sbb
lea
dec
stos
sbb
repz
mov
mov
std
push
jle
jp
nop
pop
sbbl
orl
lods
mov
aad
sbb
pop
dec
cmp
lret
les
shrb
rorb
sbb
pushf
pop
lds
adc
sbb
and
adc
jb
arpl
std
cmpl
push
and
aam
mov
xchg
sub
addr16
xor
and
lods
iret
pop
inc
jne
jle
push
adc
cs
mov
mov
cmp
xchg
sar
test
jae
inc
adc
filds
fs
jnp
popf
push
push
inc
adc
push
imul
aad
scas
fcmovnbe
rclb
mov
mov
mov
push
popf
js
mov
or
xchg
fsubrs
dec
sbb
push
xor
add
jg
fstpt
push
sbb
fisubrs
fsubrs
lods
fcmovne
pop
jo
subb
adc
cli
fdiv
adc
bound
mov
dec
inc
xor
lret
dec
mov
sub
cmpsb
cmc
fucomi
loope
and
rcrl
pop
push
ret
xor
stos
repnz
cmp
xchg
or
pop
andl
fidivrs
int
cltd
scas
lcall
int
xor
adc
inc
push
popf
sub
icebp
mov
lahf
sahf
inc
cmp
sub
fs
pushf
int3
and
and
mov
or
sbb
sbb
jmp
pop
insl
cmpsl
push
rcll
loope
fidivs
jbe
pop
lds
roll
lret
or
insb
mov
xchg
lds
es
sbb
and
inc
and
cmpsb
aas
test
sti
inc
mov
push
xor
sub
adc
les
and
sbb
push
and
lds
mov
pop
add
jmp
rorb
subl
loope
cmpb
movsl
scas
fildl
add
dec
adc
fmull
std
mov
xlat
popl
add
cmp
or
cli
mov
dec
inc
outsb
roll
pusha
sbb
xor
push
xchg
loop
jns
mov
loope
sti
mov
jge
mov
ret
lcall
fstl
test
ljmp
loopne
xchg
sub
push
insl
or
jecxz
mov
or
shrl
lahf
mov
sub
jge
mov
idivb
sbb
xchg
mov
sub
enter
dec
in
jne
xchg
imul
sbb
sbb
mov
ret
je
stos
lods
adc
xlat
dec
call
flds
jl
inc
int
je
pop
cmp
pop
cmpsb
jmp
addr16
adc
popf
mov
mov
movsl
insl
push
mov
dec
and
add
sbb
and
jno
pop
scas
movsl
arpl
sbb
jp
mov
scas
stos
leave
ds
lock
dec
sbb
out
inc
mov
push
mov
xchg
lods
sbbb
popa
cwtl
cwtl
adc
cmp
hlt
cmp
cmp
sub
xchg
sbb
pop
xchg
jl
jbe
or
dec
ret
nop
and
sahf
push
mov
and
pop
cltd
lea
aaa
int
stc
je
in
sbb
xor
pop
xor
fisubrl
inc
sub
cmp
add
or
sub
jno
icebp
sbb
mov
jbe
fmul
daa
xchg
jge
pushf
cmp
dec
imulb
sarb
insl
push
adc
xchg
jo
pushf
imull
les
jp
js
incb
pop
mov
dec
jge
lea
xlat
pop
mov
xchg
push
xor
mov
push
or
and
movsb
mov
icebp
inc
call
sub
test
cmp
dec
movsl
push
pop
stos
mov
adc
pop
mov
call
cmp
outsl
outsb
jecxz
sub
and
mov
xor
dec
lods
dec
in
cltd
sbb
inc
lahf
int
xor
xor
insb
dec
rcrl
fistl
insb
arpl
add
ret
push
and
lahf
adc
push
roll
xchg
adc
xlat
repz
std
cwtl
hlt
in
and
xlat
ja
mov
imul
adc
jno
imul
or
js
sbb
ret
xchg
incb
cwtl
test
and
or
lods
je
push
repz
xchg
ss
and
mov
adc
sbbl
das
cs
xor
dec
lret
or
push
cld
repz
sub
or
fisttpll
sub
mov
jbe
stos
ds
aaa
mov
xchg
call
jl
ss
jecxz
lds
ret
or
xchg
push
out
xchg
dec
popa
int3
or
rorb
loop
popf
movsb
in
mov
inc
ret
mov
cmp
cld
sbb
xchg
xor
or
rcl
and
int
add
das
enter
xchg
sub
imul
cmp
and
stc
sbb
jne
lret
icebp
fldcw
sub
push
cmpsb
mov
cld
xchg
cmp
repz
insb
mov
shrl
sbb
push
mov
cmp
setnp
dec
xlat
or
popf
sbb
mov
and
shrb
rolb
js
and
xor
jae
lcall
cmp
cld
jbe
cmpl
mov
movl
jg
in
cltd
hlt
sub
ja
test
mov
inc
xchg
sub
inc
int3
pop
adc
inc
pop
loope
pop
in
stos
inc
sarl
stos
enterw
mov
or
mov
movd
pop
and
inc
enter
add
push
repz
lcall
jo
lret
pop
cmp
cmp
push
xor
es
cmp
xchg
mov
push
inc
xchg
sub
das
fiadds
cwtl
dec
xor
aam
xchg
out
popf
and
xor
or
iret
dec
mov
adc
xchg
inc
jmp
jns
adc
mov
cld
jo
cmp
inc
cmp
fistpl
sbb
push
xorl
ds
mov
lret
cwtl
xchg
mov
clc
scas
dec
scas
cmp
mov
std
add
lret
adc
and
lret
cmc
pop
in
test
and
dec
pop
or
mov
fs
gs
loopne
ds
cmp
dec
add
xor
cmpsl
ds
cmp
sub
sbb
and
mov
test
test
scas
adc
rcll
mov
dec
xor
jmp
js
cld
shll
adc
mov
ljmp
sti
arpl
addb
adc
mov
shrl
jp
test
jp
pop
popf
sub
scas
cs
and
lods
cmc
sar
xchg
push
mov
into
popf
in
add
aad
and
aaa
scas
adc
lock
pop
adc
mov
sub
insl
pop
divb
mov
xchg
jns
push
adc
inc
pop
dec
lock
rcll
fcoml
inc
test
sbb
mov
push
fs
test
mov
mov
sub
push
aad
ret
aas
in
sbb
outsl
sub
mov
arpl
xchg
scas
mov
xchg
fsubrl
add
loopne
popf
loop
lods
fstl
mov
test
sarb
loopne
in
jne
jns
inc
testl
xchg
lock
aaa
inc
jb
push
test
mov
xor
dec
mov
sti
fimuls
xchg
jle
cmpsl
int
adcl
aaa
pop
jl
mov
sbb
sub
in
mov
inc
push
add
xchg
mov
dec
frstor
cmc
inc
mov
int
cmpsb
subl
lahf
xor
mov
push
leave
mov
push
mov
sub
jne
xchg
bound
sbb
repz
popa
mov
add
and
mov
rcrl
dec
or
mov
mov
mov
std
jl
mov
xor
popa
out
out
pop
fs
cmpsl
lcall
mov
jmp
ret
mov
xchg
mov
mulb
lds
xor
pusha
lds
jb
fnsave
cli
sub
cmc
inc
ret
cmp
cs
mov
nop
rcll
std
in
or
faddl
out
add
mov
mov
js
mov
sete
ss
pop
shll
or
sub
and
lods
pop
or
fmull
pop
ffreep
cmp
xchg
fbstp
fdivrs
ja
lock
add
ljmp
lods
lea
stos
sub
jne
insb
inc
pop
fsubl
pop
inc
pusha
imul
mov
mov
xor
xchg
test
inc
push
ficomps
cmp
inc
xchg
jp
inc
fwait
out
in
sar
fwait
sahf
imul
cmp
fisttps
pop
loope
movsl
pop
int3
jae
cwtl
pop
fiaddl
pop
jnp
sbb
lret
shlb
mov
sbb
test
das
inc
push
repnz
xor
pop
out
rcl
ficoml
imul
mull
scas
push
mov
into
aad
mov
xchg
inc
push
sbb
adc
and
int3
cs
fchs
jmp
stc
das
or
int
xchg
pop
sbb
adc
add
lds
mov
push
xchg
mov
mov
cltd
pop
insb
push
xchg
ljmp
and
cwtl
popf
int
dec
cmp
add
orl
inc
xchg
shlb
loope
jmp
movl
and
jns
xchg
add
push
je
andb
jns
jbe
dec
jo
jp
outsl
jnp
mov
mov
sub
cmc
icebp
sti
pop
xchg
sub
xor
push
or
bound
cmp
jl
adc
nop
gs
out
fwait
in
xchg
mov
mov
sbb
mov
fimuls
sbb
mov
mov
jmp
in
mov
push
inc
loopne
adc
cmp
in
int3
lea
scas
pop
pusha
xchg
pop
mov
decb
sub
adc
or
adc
adc
and
add
ret
lock
mov
mov
mov
stos
iret
daa
cli
addb
cmpsb
jae
jmp
fdivr
cmpl
fscale
xlat
xor
push
sarl
sub
jae
xchg
mov
jb
fidivl
cmp
sbb
adc
push
add
out
pop
das
xorb
fists
sbb
xor
ds
pop
cmp
pop
cmp
push
cld
cltd
arpl
bound
or
lret
xchg
shll
inc
sbb
and
insb
loope
jb
es
mov
out
cmpsb
jp
xor
jp
add
push
mov
jbe
sbb
lcallw
movsb
and
mov
cmp
test
pop
and
jo
add
or
jb
mov
mov
fcompl
sub
sub
push
enter
dec
mov
dec
aam
mov
lea
or
cmpl
pop
in
adc
pop
lock
jbe
pop
les
pop
shlb
in
lock
into
inc
sbbb
sub
mov
push
or
addr16
ljmp
movsl
adc
xchg
aam
aas
sbb
sbb
xor
mov
sbb
mov
ret
inc
stos
sbb
fcomip
pop
fstps
fbstp
jae
xor
push
cmpsb
mov
inc
mov
cltd
in
adc
sub
mulb
ret
fwait
js
sti
pop
add
in
jnp
jnp
leave
in
aaa
jmp
mull
xor
lcall
mov
test
mov
ss
jl
xchg
dec
xchg
xchg
xchg
subb
xchg
outsl
dec
enter
pop
sti
pop
fcmovnbe
mov
loope
shlb
mov
shlb
cmp
dec
mov
push
sbb
xchg
mov
not
ja
sub
shl
into
jnp
cmpl
cmp
in
add
sbb
mov
jno
inc
jmp
push
add
or
imul
mov
pusha
cmpsl
inc
fs
or
lahf
roll
inc
or
addr16
movsb
ds
mov
hlt
push
push
fisubl
cmp
xchg
cld
push
cmp
mov
or
sub
lcall
adc
inc
fcoml
add
fsts
dec
dec
es
test
push
arpl
mov
out
sub
rclb
xacquire
out
sti
pop
popf
orl
out
pop
inc
clc
stos
les
filds
xlat
lea
fcom
fstl
repz
movsl
push
cwtl
xchg
xor
dec
adc
jo
pop
lret
and
scas
dec
mov
fnsave
dec
and
cwtl
xchg
popa
ret
push
adcb
inc
or
addr16
mov
fdivrl
ret
mov
mov
or
cmp
rcll
push
negl
rcll
in
adc
jae
lcall
fidivrl
jb
outsl
dec
call
mov
or
pop
adc
popf
in
push
int3
or
push
fstpl
cltd
cmp
push
out
fs
add
mov
cwtl
inc
xor
test
sbb
mov
pop
pop
jb
shlb
iret
jl
cs
stc
hlt
stos
aam
or
jns
loop
mov
iret
sahf
stos
inc
dec
out
shrl
xchg
inc
and
xchg
int
aaa
ret
jo
cmp
sub
pop
sbbb
test
pop
notb
pop
cli
out
xor
in
pop
dec
in
das
jnp
add
mov
pop
shlb
push
pusha
fs
dec
jb
sub
xchg
cmpsl
cmp
jge
sarl
mov
in
addr16
call
mov
sbb
xchg
bound
shrl
sbb
jae
popa
push
hlt
mov
push
les
jle
mov
in
loop
cmp
and
mov
add
popa
rcr
fs
inc
pop
jl
ljmp
fcoms
mov
or
mov
and
push
and
add
scas
adc
adc
fstl
push
adc
jecxz
ljmp
roll
mov
sbb
lds
pop
cmp
std
sub
enter
and
xor
daa
into
js
mov
jmp
popa
pusha
loop
add
leave
adc
push
push
mov
out
ret
test
mov
mov
lahf
pop
iret
jo
dec
push
add
mov
in
xor
in
push
adc
js
or
int
push
dec
out
mov
pushf
or
and
je
cmp
fnsave
jne
decl
test
je
sbb
push
push
sub
sub
pop
hlt
or
and
pop
dec
add
ljmp
inc
sub
dec
test
icebp
fiadds
out
or
pop
jno
pushf
lret
xchg
sub
repz
outsb
xor
aad
mov
arpl
mov
enter
xchg
add
pushf
jbe
add
jecxz
mov
add
sub
test
xor
push
mov
and
pushf
and
cmpsb
fdivrl
mov
adc
jb
xchg
add
inc
jno
pop
cli
jne
dec
jb
fcmovb
or
sahf
mov
cs
cs
scas
mov
dec
inc
mov
or
mov
aad
add
test
or
dec
enter
mov
fadds
sbb
mov
inc
jle
cld
stc
dec
adc
push
daa
icebp
frstor
cmp
arpl
add
repz
shll
push
push
iret
jns
js
in
shlb
push
sbb
mov
xchg
paddusw
gs
inc
pop
and
cs
and
inc
xchg
hlt
mov
sub
shll
inc
lahf
xchg
loop
push
pop
push
imul
adc
inc
and
push
imul
cmp
pop
cmp
jecxz
mov
inc
or
lods
mov
cltd
jmp
push
dec
push
popf
sarl
stc
xchg
cmp
dec
ret
xchg
out
inc
iret
aaa
in
xor
fsubrp
jge
sub
loopne
pusha
pop
insl
pop
mov
jmp
loopne
mov
xchg
jg
cwtl
scas
push
jl
pusha
cmpsb
cmc
inc
sbb
xor
mov
mov
push
lahf
in
pop
in
outsl
cmp
out
xchg
push
xchg
pop
repnz
xor
shl
mov
cmp
arpl
sub
lret
aam
test
lds
inc
inc
jg
lds
and
pop
stos
mov
xor
dec
lods
stos
fwait
push
pop
pop
hlt
inc
mov
push
mov
xchg
pop
ret
dec
pusha
jmp
cmpsl
push
rclb
add
push
add
cmp
shl
and
dec
ret
cmc
pop
mov
ljmp
mov
xchg
jb
inc
sub
aam
outsl
xchg
fs
iret
nop
cmp
loop
into
inc
mov
pop
mov
mov
sbb
loop
jmp
mov
pop
mov
dec
and
jp
mov
cmp
mov
cmp
cmp
lahf
pop
cld
jmp
mov
arpl
mov
movsl
pop
add
bound
xor
arpl
cmp
stos
xchg
jl
mov
dec
aaa
das
je
sbb
pop
out
imul
fsubrl
cmp
js
aam
ss
leave
ja
xor
add
jno
dec
pop
or
sub
jp
lock
out
jmp
aam
insb
or
insl
popf
and
sub
sub
mov
mov
dec
xor
adc
add
in
mov
icebp
jmp
mov
adc
pushf
stos
push
outsl
aam
dec
cmpsl
push
mov
cld
inc
inc
jnp
aam
or
adc
add
cmpb
test
sbb
mov
fwait
rcrl
in
repnz
jp
int
sub
sbb
into
loope
dec
into
cs
outsb
test
dec
call
push
sbb
add
std
scas
mov
ljmp
ficompl
mov
xor
xchg
or
xlat
xchg
into
es
not
xchg
iret
iret
mov
jae
fildll
fdivr
sub
mov
data16
pop
push
in
inc
les
dec
ffree
xchg
xchg
cs
mov
jns
pusha
icebp
ret
adc
stos
mov
ss
cmp
xchg
xlat
addr16
out
push
das
inc
insl
stos
lret
sbb
push
mov
inc
sbb
int3
test
mov
jecxz
jecxz
stos
xor
call
out
outsb
mov
dec
lods
dec
jno
dec
xor
call
je
dec
dec
jle
movb
fisubs
adcb
jge
push
sarb
xchg
and
xor
jecxz
cld
cwtl
pop
sbbb
lcall
lret
in
aas
aas
inc
adc
pusha
inc
adc
jno
mov
cmp
sub
sub
insb
dec
hlt
dec
sbb
or
gs
xchg
jge
data16
xchg
jne
leave
fwait
push
pusha
arpl
sub
add
aaa
mov
xchg
push
adc
leave
pop
push
sti
sbb
fiadds
add
sar
pop
mov
adc
cmc
pop
test
sbbl
xlat
lahf
jnp
sub
rcrl
jge
lcall
cmp
into
pop
adc
xchg
push
push
jb
pop
jge
mov
fucomp
in
mov
lret
inc
cmp
in
dec
add
icebp
jle
popf
std
jl
push
bnd
inc
adc
dec
xchg
rolb
icebp
rsqrtps
fstps
addr16
cmp
rorb
insl
dec
into
pop
pusha
add
add
in
stc
loop
sbb
push
call
test
mov
filds
lods
sub
fstpl
out
jb
bound
sbb
lods
aas
dec
mov
cmp
int3
mov
insl
pop
mov
or
inc
shl
jns
sub
ds
adc
imul
test
fstp
jb
mov
pop
cmp
inc
add
jb
roll
mov
jge
mov
subb
mov
or
call
and
jae
out
inc
ror
mov
jp,pt
das
stos
loopne
test
jl
repnz
and
or
lods
jb
pop
in
popf
add
lcall
jle
test
add
push
sbb
sahf
jno
inc
sub
mov
decl
test
shl
add
sub
das
jl
inc
inc
mov
jp
fsubrl
mov
sub
subl
shll
adc
stos
popf
mov
lahf
mov
int3
popf
gs
adc
iret
or
daa
nop
movsl
jge
imul
inc
test
adc
jmp
mov
das
fs
xor
xchg
sbb
cltd
jns
cmp
imul
cmpsb
das
pop
and
ss
push
mov
out
jb
cs
xor
lods
in
fnstenv
pcmpeqw
dec
push
les
or
in
cmc
shl
pushf
scas
xor
rcr
xor
mov
dec
jae
inc
scas
cmp
sub
dec
push
fists
push
rcll
out
push
mov
orl
mov
mov
pop
insb
push
or
lcall
in
pop
pop
loope
repz
mov
lret
xor
xorb
add
mov
cltd
inc
dec
pusha
pop
xchg
mov
dec
sbb
and
xchg
mov
test
mov
lret
inc
incl
sub
inc
pop
jbe
dec
dec
loope
sub
mov
std
gs
jecxz
fsubrl
jb
jns
fstl
or
lret
push
call
cmpsl
xor
lret
lods
mov
push
fidivrs
adc
xacquire
scas
cmp
popf
aad
or
insl
das
pusha
fistpl
jne
cmpsb
lods
test
push
cmc
popa
mov
mov
adc
and
mov
pop
mov
push
call
xchg
mov
mov
pop
rcll
mov
dec
cmpsb
nop
fwait
into
scas
movsb
jg
mov
adc
and
sbb
jg
adc
cmpsl
sahf
push
jg
jg
icebp
dec
stc
or
push
cld
les
leave
sbb
stos
mov
adc
cmpsl
paddw
mov
push
fnstcw
dec
cmp
mov
push
ss
xor
cmpsl
push
lods
inc
xor
divl
mov
adc
jmp
xor
lahf
jne
pusha
xlat
mov
fidivl
mov
cmc
repnz
mov
and
mov
ljmp
dec
in
insb
cmp
mov
inc
cld
adc
stos
jl
aas
in
jmp
jl
fsubrl
loope
bnd
je
int3
repz
rcrb
mov
cmc
mov
lret
jns
lret
sbb
fwait
jg
shr
sbb
push
sub
mov
ja
test
sahf
dec
dec
mov
lret
cli
cwtl
pusha
xorl
mov
sbb
hlt
jl
pop
sbb
xchg
cmp
aaa
sub
shl
hlt
pop
out
fidivrs
stc
adc
sub
xchg
jl
flds
in
sub
xor
divl
insl
loope
mov
sahf
rcrl
xchg
push
inc
jne
sub
xor
sub
scas
pop
cld
push
out
sub
jmp
add
xor
lods
mov
mov
ljmp
add
pop
in
push
popa
dec
inc
or
mov
ja
push
adc
and
ds
data16
jmp
hlt
jne
jbe
cmpl
insl
jae
cs
dec
sbb
fcoml
sub
out
jmp
adcb
jbe
add
cmp
pushf
sub
xor
push
mov
jg
jns
imul
imul
lods
mov
hlt
or
lahf
lcall
dec
sub
adc
dec
cmpsl
xchg
rorb
hlt
gs
xor
and
psubsw
adcb
cwtl
loope
dec
pushf
enter
push
fsubrs
in
icebp
bound
inc
cwtl
ds
call
repnz
sub
out
insl
add
mov
push
sarb
xlat
cmp
jbe
jno
mov
pop
inc
es
and
add
sbb
xor
push
dec
outsb
lahf
divb
dec
or
jo
fistpll
mov
jnp
mov
and
mov
inc
lods
xchg
fdiv
pop
jg
add
dec
test
pop
dec
fisttps
cmp
mov
movsb
imull
xsha1
cmpsb
or
stos
icebp
test
cmpsl
enter
mov
mov
jmp
cwtl
mov
push
xor
mov
mov
sahf
and
jne
lcall
bound
loop
mov
sbb
stos
push
fdivrl
es
insb
xorb
xlat
lcall
mov
pop
out
lcall
mov
mov
dec
add
push
cmpb
mov
out
imul
lea
out
xor
rol
js
jns
and
pop
push
mov
ret
insb
sbbb
inc
jbe
lret
jae
adc
rorb
imul
add
out
lret
lea
rclb
push
sahf
into
insl
pop
fldt
pushf
dec
mov
mov
insb
arpl
xchg
jmp
out
cmpsb
fdivrp
xor
lret
shrl
arpl
out
data16
in
fiaddl
in
in
xchg
jnp
xor
sbb
outsb
stc
inc
sbb
hlt
imulb
fldln2
xor
lock
xchg
ja
adc
insl
int3
movsl
test
xor
cmp
jnp
sahf
shlb
mov
in
cmp
xchg
jge
jbe
jl
mov
jne
push
popa
enter
adc
push
out
and
dec
add
cmp
push
add
jl
xor
mov
xor
rcr
pop
fidivrs
mov
cltd
xchg
dec
and
cmpb
inc
int
add
adc
jns
test
fidivrs
jge
pop
std
pop
pop
aam
xchg
stos
cmp
xlat
int
stos
mov
fnsave
das
push
lods
mov
jmp
mov
mov
fldl
xchg
dec
jmp
sbbb
cmp
push
jmp
addl
mov
xchg
pusha
push
fisubs
fldenv
ja
inc
lds
push
rcrl
cld
xor
xchg
bound
and
mov
subl
dec
jge
insl
cwtl
xchg
push
outsl
outsb
nop
inc
ret
popa
mov
push
cltd
push
lods
rcr
fisubl
idivl
sub
out
stos
pop
ljmp
stc
int
sub
fists
adc
mov
call
jb
jmp
pop
xchg
sub
jb
jle
in
aad
push
mov
mov
lods
fdivr
iret
xor
stc
es
and
cmp
jle
shlb
int3
sbb
xchg
scas
push
dec
xchg
arpl
jo
inc
loope
loop
test
jnp
add
mov
ljmp
es
insb
dec
xor
ss
dec
test
fldl
mov
fiaddl
inc
push
dec
adc
xor
sahf
fcomp
mov
dec
sub
xchg
movsb
test
sub
jmp
fnstsw
cmpsl
and
shl
jg
dec
and
enter
lret
pop
and
sarb
ret
pop
cmc
fmull
test
dec
adc
mov
aaa
fs
jne
iret
dec
xchg
cs
mov
and
sbb
daa
cwtl
jmp
push
xchg
mov
pop
cmp
gs
inc
les
orl
mov
testl
scas
arpl
xchg
adc
cmp
mov
fsubr
je
cld
loope
lret
xchg
xor
dec
adc
bound
filds
fidivrs
or
or
fwait
dec
push
cmpl
cli
xor
inc
xchg
xor
cmc
shll
dec
cld
jp
mov
cmc
push
push
or
mov
push
call
adc
je
xor
dec
rclb
xor
push
imul
jb
adc
pop
fsubl
jge
dec
pop
cmp
adcl
stos
lds
lods
sti
out
or
mov
sbb
inc
sub
add
fcmovnb
xchg
popa
push
pop
dec
sub
mov
dec
subb
call
das
jo
mov
adc
pusha
sub
pop
and
ficompl
insb
mov
mov
push
sub
mov
in
roll
sub
dec
out
or
sahf
out
or
enter
mulb
dec
or
push
cltd
popa
dec
mov
pusha
es
mov
mov
cmc
pop
inc
shr
dec
cmc
insl
aas
mov
aas
adc
push
fsubs
xchg
xchg
cmp
adc
and
insl
pop
xor
jno
ret
sar
dec
les
sbb
add
or
sahf
jle
cmp
jo
xchg
outsb
lods
inc
hlt
or
rorl
sub
in
mov
into
loopne
sahf
jecxz
pop
movsb
gs
or
mov
dec
mov
push
jae
das
jb
cmpsl
pop
sub
inc
dec
inc
xchg
xchg
push
fildl
or
pop
cmp
mov
xchg
fdivrl
enter
mov
lahf
push
cltd
pushf
push
mov
daa
bound
push
cmpsl
aas
xchg
xchg
cmc
lea
mov
add
test
mov
shrl
lcall
mov
mov
mov
fs
test
iret
sub
mov
push
and
inc
call
popa
sbb
popw
sbb
pop
int3
mov
dec
xchg
js
sti
outsl
outsl
mov
repnz
outsl
cmp
sbb
cmp
xor
add
arpl
pop
in
outsb
pushf
pop
adc
imul
aam
dec
sub
gs
mov
jg
addb
pop
inc
aas
fnstsw
push
fstpl
and
and
inc
test
cmpsb
push
andb
xor
inc
ljmp
adc
insl
sub
leave
xchg
mov
pop
xchg
xor
dec
push
cld
inc
xchg
stos
scas
or
jecxz
mov
mov
push
rclb
mov
pop
cmp
lahf
pop
mov
lods
cmp
cmp
repnz
test
fs
loopne
loop
fisubrl
scas
adc
popf
aas
xlat
fs
popa
push
adcl
lods
out
hlt
adc
dec
jle
add
xor
sti
fstsw
mov
mov
or
add
gs
pop
push
sbb
fdivrl
inc
and
arpl
jmp
adc
pop
bound
push
sbb
pop
dec
mov
call
sub
cld
ret
dec
inc
sbb
mov
int
rcr
mov
add
xor
repnz
and
aaa
push
or
sub
lret
sub
shrb
or
lahf
sahf
mov
mov
xchg
jns
xor
adc
pop
iret
test
xor
cli
bound
dec
fs
cmpsb
xchg
scas
out
pop
lcall
sarl
mov
xor
cmp
or
mov
push
xchg
dec
imul
or
fsts
xor
in
inc
fiaddl
push
jge
xchg
sub
ret
daa
push
sub
scas
push
fs
push
loope
bound
cmp
mov
imulb
outsb
das
xor
lods
push
push
testb
pop
xor
cmpsb
mov
fisttps
das
mov
mov
sbbl
shrl
test
jge
iret
gs
ret
mov
add
lahf
sbb
ret
mov
notb
std
adc
in
insb
lea
pushf
add
cs
mov
movd
xchg
push
push
push
repnz
pop
inc
aad
dec
out
mov
sbb
mov
out
dec
push
mov
repz
ljmp
decb
int3
test
repz
xchg
jl
outsl
jns
dec
test
mov
js
dec
and
insb
aaa
or
enter
insb
clc
enter
cmp
sbb
pop
and
cmpsl
js
inc
sub
sahf
jo
insl
into
sub
push
push
mov
inc
imul
jmp
movsl
sub
sbb
aaa
add
pop
stos
out
push
mov
push
ds
rcll
out
xlat
pop
dec
ret
jge
mov
adc
aam
inc
fs
fstpt
in
cmp
cmp
fwait
mov
xor
stos
std
pop
add
outsl
sahf
arpl
adc
fstpt
lods
adc
inc
bound
test
leave
jo
lcall
or
lods
dec
cmp
and
mov
mov
xchg
and
xchg
push
rcrl
sbb
icebp
scas
cltd
jns
mov
js
out
aad
in
lods
sbb
mov
lcall
push
sbb
movsb
test
lock
ljmp
pop
jmp
add
xor
and
sub
test
dec
in
loope
repz
movsb
arpl
push
dec
dec
mov
jg
enter
loopne
xor
sub
out
pop
lea
ja
inc
inc
pusha
stos
xchg
xor
mov
inc
mov
xchg
dec
cmpl
popf
xchg
push
mov
outsb
scas
out
popa
pushf
pop
movsl
out
push
pop
nop
icebp
xchg
call
push
xchg
jmp
cmp
mov
push
bound
ret
sub
negb
push
fstps
loopne
rcrb
mov
fwait
mov
sub
sbb
push
fwait
ljmp
push
sub
and
stos
cmp
jp
insl
and
cmc
dec
imul
aad
mov
inc
or
add
cs
cmp
adc
aad
inc
sub
dec
jecxz
sarb
add
gs
xchg
lock
adc
sub
add
movsb
or
lret
mov
cmp
rclb
dec
adc
push
imul
ret
mov
xchg
ret
xchg
out
idivb
dec
shlb
pop
out
addl
mov
push
fdiv
test
and
adc
addr16
inc
jno
in
and
inc
mov
in
sbb
es
cwtl
jnp
xchg
setns
divl
adc
lods
add
adc
inc
xchg
mov
dec
fiaddl
daa
fs
imul
push
sbb
icebp
outsl
iret
or
dec
loop,pn
push
ja
add
into
pop
and
mov
push
lds
arpl
mov
xrelease
inc
scas
dec
push
pop
mov
cmpsl
lock
repz
aam
mov
leave
mov
add
or
pop
stos
xchg
fbstp
icebp
mov
leave
ror
cltd
sub
inc
dec
xchg
fistpl
xorl
or
jp
popa
ffree
das
xor
out
iret
jae
pop
dec
dec
data16
push
addr16
mov
jbe
aaa
mov
stos
inc
int
lods
inc
adc
adc
push
mov
inc
mov
rorb
add
imul
pusha
loopne
ljmp
lods
mov
aaa
jmp
add
movl
push
roll
imul
mov
inc
xchg
xlat
push
imul
bound
lods
std
jmp
xor
hlt
inc
xor
out
adc
shrb
fwait
cmp
imul
dec
add
mov
hlt
rolb
lahf
cmp
inc
pop
xchg
xor
loope
enter
mov
in
pop
aas
mulb
jbe,pn
inc
out
mov
push
test
aad
push
test
add
xchg
sub
fs
iret
fldl
add
jbe
loop
dec
ds
lahf
dec
mov
in
add
cmp
mov
addl
cmp
add
mov
mov
lods
repz
jno
popa
mov
dec
je
xorb
jg
lods
xor
ret
in
pop
pushf
lcall
jecxz
cltd
ljmp
sbb
mov
push
push
aam
mov
lods
bound
xchg
pusha
jmp
inc
sbb
lret
xchg
outsb
fstpl
add
sub
or
int
sti
imulb
adc
pop
lcall
addr16
xchg
mov
xor
ljmp
lcall
inc
push
inc
daa
hlt
fldcw
test
add
jg
sarb
loopne
dec
mov
inc
push
cmp
xchg
push
jnp
cmp
add
mov
shlb
inc
push
push
lret
aas
pop
out
ljmp
inc
out
stos
insb
push
jo
addl
mov
jb
sub
sbb
shll
lds
push
and
or
cmp
iret
leave
mov
lcall
inc
adc
and
pop
inc
inc
jle
out
and
or
jbe
adc
das
cmp
clc
fs
in
iret
arpl
ljmp
fdivl
jae
scas
shll
lahf
inc
nop
jmp
sahf
test
mov
push
sbb
mov
gs
mov
jne
add
add
cmp
test
or
dec
ljmp
dec
jg
sub
in
les
and
aaa
les
jo
icebp
ret
fwait
mov
arpl
sub
push
cld
mov
jo
data16
sub
adc
daa
loop
bound
fsubs
ficomps
adc
repnz
int3
and
ss
orb
mov
out
in
ljmp
xor
js
out
mov
test
js
push
cmpsb
ret
xlat
divl
hlt
call
test
push
arpl
push
and
add
loope
adc
inc
inc
imul
data16
imul
fxam
inc
dec
enter
cltd
lds
and
stos
dec
out
popf
pop
cmc
dec
or
test
push
xorl
push
out
int3
insl
repnz
mov
data16
sub
repnz
lds
mov
fwait
cmpsl
pop
daa
add
stos
inc
sub
imul
jge
pushf
cmp
jnp
mov
jno
pop
decb
inc
in
xor
lock
ror
lods
js
dec
movsl
ja
sahf
aas
fcomi
les
sbb
push
or
adc
cwtl
push
ss
push
imul
repz
hlt
pop
and
sbb
inc
add
lcall
sub
jno
jne
pop
sbb
mov
push
xor
rcll
push
push
std
test
jp
clc
in
test
xor
jbe
jb
ss
inc
dec
xlat
lret
dec
rorl
leave
roll
xchg
aam
std
push
popf
fs
sbb
aad
jns
xor
inc
xchg
pop
mov
push
test
mov
pop
out
movsl
pop
ret
push
and
sbb
lock
test
mov
inc
inc
pop
sbb
in
pop
adc
xchg
mov
enter
add
aas
or
dec
cmc
mov
mov
inc
lock
mov
es
movsb
xchg
in
jg
inc
xchg
add
testb
cld
push
out
inc
inc
shll
add
add
movsb
cmp
xorb
and
pop
xchg
sahf
arpl
add
jge
xor
cmc
mov
cld
cwtl
adc
cmp
addr16
jge
adc
fisubs
sbb
pusha
shrl
lret
aad
dec
jmp
lcall
test
jl
cmp
push
sti
mov
xor
arpl
das
lcall
and
mov
xchg
cmp
xor
push
cmpsb
stos
mov
leave
jp
mov
or
jge
mov
test
lahf
clc
mov
pop
lods
cld
fistl
sub
mov
mov
repnz
mov
pop
repz
int3
cld
push
fsubr
std
ss
cmpsl
and
adc
jbe
fwait
ss
lds
or
out
and
jge
out
pop
pop
sub
rcl
jb
mov
pop
push
push
repz
es
inc
bound
or
adc
lret
movsl
imul
mov
subb
std
repnz
xchg
pop
sub
inc
incl
filds
and
inc
sub
lock
cltd
cmp
scas
test
in
fs
mov
inc
or
popf
inc
cmp
jb
pop
dec
outsb
and
mov
rclb
iret
pop
sub
outsl
mov
sahf
enter
dec
test
cmpsl
jno
push
js
icebp
fwait
add
popa
mov
push
mov
cmp
pop
cli
pop
cmc
jmp
dec
push
lret
jl
dec
mov
aaa
jns
sub
dec
and
int3
cmc
xchg
xor
daa
jns
jge
and
outsb
xor
rol
and
roll
gs
stos
pop
mov
outsl
adc
shl
dec
cli
dec
and
sub
xor
imul
jmp
jns
jno
insl
jmp
adc
dec
addr16
lret
xchg
dec
push
lods
adc
mov
dec
push
pop
shlb
inc
sub
adc
shlb
dec
push
addl
call
in
xchg
out
add
inc
iret
or
adc
out
rclb
push
stc
bound
mov
cmp
cmp
js
dec
jl,pt
aaa
scas
test
inc
ret
scas
out
inc
xchg
inc
pop
fstp
fimuls
int3
xor
jb
fsubl
aad
xor
pop
daa
pop
inc
jmp
lea
ds
xchg
fcoms
ds
mov
mov
stos
jbe
xor
test
shlb
xchg
cmpsb
xchg
push
pop
pusha
jmp
push
jno
pushf
jno
jb
int
push
rcrl
cwtl
push
and
xor
push
adc
inc
inc
xchg
leave
movsb
and
pop
mov
test
pop
outsb
mov
mov
es
jmp
loop
loop
mov
jne
mov
add
aam
push
ja
ljmp
pusha
aad
xchg
and
jb,pt
cmp
fstl
or
loopne
int
test
mov
sarl
cmp
dec
pop
out
data16
inc
push
jno
adc
mov
gs
jne
pushf
fldcw
out
jno
add
fists
mov
adc
or
repz
mov
daa
jp
mov
int3
rclb
or
push
mul
or
push
xor
cmp
ja
cmp
lret
pop
and
scas
cli
cmp
movsl
push
jle
xchg
add
jl
dec
jne
stos
je
scas
stos
hlt
cltd
or
out
cwtl
sbb
xorl
jmp
inc
xchg
mov
and
stos
out
je
cli
pop
lret
in
xchg
cwtl
lret
fmul
cmpsl
scas
jecxz
aad
lods
fdivr
lret
dec
and
popa
and
mov
mov
xchg
ret
out
inc
sub
je
out
mov
outsb
xchg
inc
cltd
dec
mov
cmpsl
jmp
sbb
lea
jmp
nop
cs
mov
lock
in
pushf
lret
add
roll
jl
out
push
cmpsl
nop
cmpb
dec
imul
jle
hlt
dec
sub
xchg
adc
fimull
push
add
aam
xchg
out
pop
rcrb
scas
inc
push
sub
sbb
pop
mov
sub
xchg
fcoms
scas
imul
je
int3
and
mov
xchg
test
nop
or
mov
aaa
xlat
pop
xchg
sub
mov
lret
incb
mov
rolb
dec
sbb
hlt
mov
pop
jl
jl
mov
jecxz
sub
decb
fwait
pusha
mov
mov
inc
jge
push
sarl
rcll
sub
or
lret
lds
rol
push
or
mov
icebp
dec
loopne
ficoml
es
cmpsb
jmp
jo
mov
mov
mov
repz
xchg
lret
mov
jae,pt
push
insl
std
ficomps
stos
std
insb
fcoms
sub
or
clc
rcpps
push
std
das
pop
imul
dec
jnp
xor
jbe
jbe
xor
pushf
sti
insb
pusha
aas
sbb
lret
adc
push
pushf
ficomps
in
ljmp
push
mov
mov
dec
xchg
pop
lods
mov
jno
pop
adc
pop
addb
push
sahf
adc
mov
out
das
pop
xor
add
or
pop
divb
push
jmp
add
inc
mov
in
push
clc
shll
fmul
sbbb
cmpl
stos
mov
hlt
outsl
ja
std
in
enter
inc
adc
pop
cmp
fidivs
add
xchg
icebp
nop
and
outsb
addb
shll
stos
xchg
cltd
cmp
mov
xchg
nop
jg
in
popa
negl
fiadds
mov
or
pop
xor
into
daa
ja
nopl
push
rolb
int
dec
fiaddl
xor
mov
mov
stos
xchg
mov
adc
std
add
clc
cmpsb
jle
in
imul
sbb
lds
and
pop
movsl
cmpsb
pop
cmp
pop
pop
or
mov
popl
dec
jb
mov
mov
int
cltd
outsl
dec
jmp
mov
adcl
cs
cmp
mov
orb
pusha
je
dec
xchg
mov
sbb
mov
mov
pop
jmp
pop
in
js
cld
shlb
push
nop
sbb
mov
jge
and
mov
stos
lcall
clc
jecxz
add
fiaddl
in
sub
add
xchg
dec
xor
lea
mov
jns
aas
inc
inc
pop
clc
ds
mov
mov
cli
fs
push
repnz
adc
push
xchg
je
bound
mov
sbb
push
in
rorb
mov
mov
movsb
ljmp
aaa
sti
pusha
jg
stos
dec
enter
push
shr
sbb
dec
pop
ss
xor
jnp
enter
push
mov
int
mull
xchg
and
ja
dec
cmc
inc
das
inc
dec
adc
jo
jp
or
pop
push
popa
pop
mov
fnsave
aaa
sub
push
mov
arpl
jne
loopne
mov
sub
imul
mov
lret
in
daa
push
lahf
add
and
lods
js
mov
add
dec
sti
mov
adc
inc
xlat
inc
jle
inc
pop
out
mov
sub
xor
clc
out
mov
mov
xor
push
xchg
adc
sbb
std
dec
mov
js
outsl
dec
lea
hlt
xchg
xchg
shrb
mov
dec
mov
cmpsb
push
jbe
insb
fbld
test
out
add
lret
loopne
inc
push
sub
fiaddl
add
push
in
sub
jns
jae
aaa
mov
int3
in
lahf
adc
xchg
add
pop
jnp
sub
icebp
outsl
fwait
test
adcb
xchg
adc
fucom
enter
fcmovb
mov
mov
subb
repz
mov
push
mov
mov
nop
fstl
lret
daa
dec
inc
cmp
mull
fstps
mov
or
psllq
inc
insl
repnz
xor
loop
mov
dec
pop
cli
out
adc
xchg
sub
stos
xchg
pop
dec
jecxz
loopne
pop
pop
inc
jg
sbb
lret
das
das
jne
push
sbb
xchg
test
push
sbb
pushl
add
lods
xor
daa
mov
mov
xchg
or
outsl
push
adc
sub
std
hlt
insb
xor
scas
cmp
ja
sbb
inc
xchg
lods
call
mov
scas
push
xlat
bound
push
enter
push
js
mov
in
rolb
xchg
xchg
das
dec
mov
ret
loope
add
mov
pop
push
cmc
jle
repz
cltd
and
xchg
fisttps
sbb
clc
jo
pop
adc
out
out
pusha
mov
sbb
mov
pop
icebp
notb
mov
and
mov
xchg
mov
filds
aas
insb
jle
add
sub
sub
push
mov
add
cld
cmp
push
mov
cmpb
or
pop
add
pop
cmc
popa
das
cmpsl
test
ja
iret
mov
gs
jp
jbe
and
jg
sub
xor
data16
pop
cltd
in
push
mov
and
es
daa
mov
mov
aad
lret
iret
add
fwait
pop
xchg
movsb
lods
outsl
jae
xor
push
int3
inc
sub
mov
adc
movsl
jo
push
adc
mov
push
add
and
scas
mov
iret
out
inc
fcmovu
adc
adc
repz
mov
jb
xlat
ror
or
jne
or
scas
into
jo
and
in
push
movsb
jl
push
push
inc
mov
into
mov
aam
sub
push
mov
ret
iret
mov
outsb
xorb
cld
scas
in
add
mov
enter
mov
push
loopne
icebp
xor
movsb
js
jb
decl
iret
add
or
dec
mov
fwait
jne
and
mov
fwait
inc
loope
pop
stos
dec
test
add
fcmove
lcall
dec
jb
push
xchg
aad
fwait
adc
les
pop
sub
sahf
movb
mov
andl
mov
push
jbe
xor
scas
imul
test
xor
ljmp
xor
dec
pop
nop
add
inc
fld
cmp
mov
dec
mov
dec
xor
sbb
cmp
mov
pop
mov
and
out
sbb
aaa
cmp
cmpsl
mov
adc
incb
mov
cmc
clc
icebp
cmp
xor
push
aaa
scas
cwtl
mov
loop
lock
in
push
mov
ds
sub
mov
movsb
sbb
pop
cmp
sub
imul
add
and
mov
push
dec
cmp
into
cmc
jbe
sbb
and
ret
xchg
lea
cmc
mov
jo
xchg
repz
xchg
sub
push
lock
cmc
clc
roll
loope
mov
adc
dec
adc
mov
or
les
sub
clc
test
jns
lds
jo
mov
std
int3
pop
add
orl
pop
cmp
or
or
xor
lock
movsb
xchg
inc
jno
imull
mov
pop
stc
xchg
or
inc
add
push
cmp
add
sbb
xor
mov
sub
filds
inc
mov
jge,pn
rolb
push
and
setle
jp
test
or
sub
ds
imul
jnp
aas
ficoml
pop
movlps
sbbb
inc
jns
arpl
pop
orl
scas
out
push
rcr
imul
add
insb
loop
push
lea
jmp
repnz
push
inc
pop
notl
fbld
ret
xor
clc
mov
popf
int
aaa
popa
jg
cmp
or
jne
adc
mov
arpl
adc
sbb
outsb
and
add
lods
mov
enter
inc
loopne
lcall
test
loope
pop
hlt
jae
cmp
arpl
mov
stos
cld
mov
sub
xor
push
frstor
mov
lret
test
pushf
lahf
clc
xchg
add
add
test
test
pop
sbb
nop
pop
hlt
pop
xchg
ret
in
pop
dec
aam
pushf
scas
cmp
jg
dec
cltd
and
push
xor
aad
push
mov
push
add
test
out
je
daa
jg
push
lds
in
jnp
xchg
sbb
or
lods
jno
xchg
mov
add
shlb
mov
std
xor
ds
xchg
sbb
cld
andl
dec
adc
sub
imul
sub
testb
lods
dec
test
cmp
addl
and
mov
mov
xor
test
push
xchg
cmp
add
test
test
mov
and
in
fdivr
push
incb
sub
out
mov
mov
sahf
popf
cmp
sub
dec
adc
fmull
int
mov
lds
imul
add
in
sub
lret
lods
add
add
pop
dec
out
pop
mov
lea
pop
ds
dec
xor
pop
xchg
and
jno
xchg
mov
stos
in
cmp
adc
and
test
test
mov
xlat
pusha
insb
shrl
scas
inc
adc
mov
pop
cmp
jo
pop
icebp
dec
and
mov
adc
mov
test
lds
loope
insl
inc
sbb
insl
shll
mov
ja
push
data16
lock
pop
xchg
push
mov
pop
es
ds
pop
xchg
loop
pop
mov
aad
adc
cmp
inc
adc
clc
sahf
mov
pop
cmpsl
cmc
clc
fstpl
jae
test
push
push
mov
daa
ja
aad
push
jmp
mov
adc
cwtl
pushf
iret
insb
roll
inc
test
roll
imul
rclb
mov
int3
cltd
adc
dec
add
int
or
dec
sbb
arpl
mov
scas
adc
pop
shl
pop
or
push
imulb
in
sbb
dec
dec
dec
bts
mov
push
fs
outsb
fimuls
lock
or
mov
mov
adc
pop
outsl
clc
jbe
movsb
add
mov
mov
add
popa
xchg
test
dec
std
push
cmp
pop
cmp
sti
bnd
cbtw
idivb
lretw
lcall
pop
enter
movsl
push
aam
cmpsl
xchg
inc
dec
mov
test
sbb
push
mov
out
paddw
out
pop
push
lahf
dec
fucomp
ds
mov
shl
xchg
add
ljmp
insb
int
dec
or
dec
fisubl
pop
test
push
adc
push
push
aad
arpl
sub
add
push
aaa
out
mov
cmpsl
mov
mov
inc
add
inc
add
and
pusha
addl
aaa
jg
outsl
out
cmp
fcmovu
lock
insl
xchg
xchg
pusha
popf
cmp
incl
jge
xchg
push
fstpt
fists
pop
cmp
bound
inc
push
aad
push
cmp
push
sub
out
call
cmp
aam
xlat
pushl
gs
idiv
idivl
mov
and
lcall
icebp
inc
sub
fst
jns
lea
jg
mov
test
and
lock
test
adc
sbb
aad
and
inc
inc
dec
xor
cmpsl
ret
jmp
jnp
ret
mov
pop
pop
in
inc
subl
mov
data16
or
cld
inc
push
jb
rcrl
pmaxub
lods
cmpsl
sub
stos
cmp
adc
xor
dec
push
cmp
mov
movsb
ret
jb
adc
aad
sub
insb
out
scas
cmc
sbb
jg
clc
push
jnp
or
mov
cli
push
pop
sbb
mov
movsb
sahf
cli
and
jne
in
mov
inc
jae
adc
push
bound
lcall
xchg
outsl
add
cmp
stos
enter
aas
jae
adc
daa
mov
or
mov
iret
or
push
sub
icebp
fs
out
pop
mov
scas
sub
jg
or
dec
cwtl
or
xchg
das
sub
push
int3
pop
sbb
mov
xchg
ljmp
iret
out
pop
cmp
clc
clc
out
mov
es
sub
fsubrl
mov
out
ret
push
sbb
nop
xchg
xor
cmc
xor
rclb
push
arpl
adc
pop
cltd
arpl
xor
in
push
push
dec
orl
lock
mov
jno
cs
sub
lods
jmp
outsl
or
cmp
jnp
fisubrs
in
repnz
xor
gs
cmc
in
or
mov
xor
daa
xchg
addr16
ffreep
lret
adc
ljmp
inc
sbb
test
mov
dec
lret
dec
pop
adc
jmp
add
and
stos
mov
xor
sub
fs
jge
out
insl
pop
testl
jns
jnp
aad
sub
outsl
in
adc
cs
sub
xchg
ret
and
lea
sbb
and
outsb
push
hlt
fstl
push
inc
std
stc
lret
in
mov
enter
pop
pop
das
push
xor
fists
jns
pand
xchg
fisttpl
jnp
cld
mov
inc
call
push
adc
xchg
cmp
push
pop
mov
and
mov
and
inc
or
and
pop
xchg
mov
mov
mov
mov
cmp
arpl
popa
jnp
mov
dec
mov
sarb
mov
lcall
into
js
iret
fiadds
lds
and
adc
sub
sub
jmp
and
inc
arpl
jnp
insl
mov
sbb
loop
mov
ja
lods
dec
inc
repnz
aas
sbb
hlt
loope
push
add
mov
fwait
in
push
dec
iret
push
xor
xchg
cmp
test
cmp
test
addr16
push
test
add
cwtl
es
and
rcll
cwtl
sbb
xchg
push
jge
out
xchg
xchg
mov
into
movsl
insb
dec
jbe
das
insb
inc
dec
imul
add
jo
add
xor
loope
xor
and
into
adc
jmp
jmp
les
cld
lods
mov
inc
fadds
sbb
not
sub
jae
or
outsl
xchg
sub
loope
dec
or
subb
xchg
into
hlt
mov
cmpsl
pop
ja
push
insb
cmp
push
mov
movsl
clc
lret
push
xchg
pop
les
add
adc
xor
push
xlat
punpckldq
add
call
daa
movsl
stc
mov
movsb
cmp
lea
je
jo
stos
shrb
sbb
shrl
rcll
mov
bound
mov
test
mov
mull
inc
inc
mov
in
and
sbb
insl
addr16
dec
lods
xlat
mov
sbb
mov
adc
js
xchg
adc
pop
and
cli
dec
inc
xchg
lock
fistpll
mov
dec
xchg
add
adc
insl
nop
and
push
jg
in
xchg
add
mov
pop
test
cmp
sbb
fdivrp
ljmp
jl
rorb
cmp
jo
test
add
in
sub
cmpsl
pop
sub
mov
xor
pop
lret
adc
sti
stos
xor
ret
in
fs
add
jno
mov
lds
pop
sbb
test
push
push
jne
shr
or
in
mov
lret
inc
or
push
addl
or
jg
push
outsl
push
in
cmpsb
test
sub
mov
int
cmc
subl
out
jo
and
add
push
aad
leave
imul
and
es
adc
fsubs
sbb
stos
push
inc
push
fwait
pusha
cmpsl
inc
xor
loop
fs
sbbb
mov
flds
das
mov
mov
call
jg
push
jge
pop
in
cmpsb
pop
test
and
movsb
int
xchg
cmpb
lcall
adcl
mov
or
aam
add
push
mov
int
arpl
ret
enter
xchg
pop
mov
in
ljmp
xchg
leave
push
js
mov
xchg
shlb
andl
pop
call
or
lds
sub
in
inc
shlb
fldenv
test
xlat
inc
enter
stos
pop
pop
cwtl
dec
ret
je
movsl
test
sub
sbb
inc
adc
les
dec
rcll
inc
clc
shlb
pop
aaa
das
xlat
insl
subb
xchg
sbb
stc
xor
divl
out
pop
inc
orb
cli
xor
sbb
xor
jp
add
rdpmc
mov
pop
mov
imul
loope
andl
dec
imul
mov
cli
xor
lret
subl
mov
add
mov
insb
cmp
and
loopne
jae
sub
popa
mov
jno
push
push
mov
jle
scas
or
lds
sub
add
jmp
cltd
lods
test
jbe
addr16
sbb
xor
popf
jne
or
lock
mov
mov
icebp
dec
jns
push
out
stos
xor
pusha
shrb
mov
dec
push
outsl
lcall
sub
xor
or
bound
sbb
popa
mov
add
push
mov
jo
sti
mov
fnstsw
mov
dec
fldenv
pop
adc
ljmp
cli
out
bswap
mov
xor
cld
insl
stos
outsl
adc
fsubrl
enter
call
repnz
jbe
and
ja
xor
pop
add
sbb
fs
bound
xchg
and
lcall
loope
fnsave
bnd
cmc
dec
int3
orl
add
push
sub
xor
xchg
scas
push
push
fidivrs
or
sub
jb
iret
add
aaa
add
jae
mov
add
ja
add
ror
xchg
push
add
insb
insl
jle
jns
ss
mov
inc
nop
push
mov
rcr
jb
lods
xchg
pop
fisttps
stos
push
xchg
jg
jge
andl
ljmp
insl
daa
dec
pusha
andb
inc
lods
cmp
leave
ficomps
int
pop
jg
push
imul
adc
mov
leave
clc
gs
mov
adc
iret
mov
fcoms
mov
add
in
xor
lret
icebp
jae
fldcw
inc
lea
fldt
mov
sbb
dec
xor
cmp
and
ret
xchg
pop
insl
dec
loopne,pt
mov
push
pop
imul
xor
int
icebp
movsb
out
xor
mov
scas
aad
mov
sbb
dec
push
add
mov
mov
sbb
ret
lods
xchg
add
dec
add
int
jecxz
pop
mov
sbb
adc
add
in
inc
lret
mov
jle
clc
out
mov
sbb
lds
sbb
and
xor
pop
mov
and
cmc
sub
xchg
nop
mov
or
jp
mov
add
dec
rolb
xchg
xchg
jns
shlb
xor
pop
repz
mov
adc
or
hlt
dec
inc
clc
jno
jg
imul
das
xchg
pop
add
loopne
in
out
xchg
sbb
scas
loopne
leave
mov
mov
int
out
call
test
jge
adc
scas
xlat
mov
dec
stos
jnp
mov
cmpsb
jno
into
xlat
fstps
stos
imul
pop
pop
shl
pop
sbb
sbb
mov
jb
cmc
push
inc
data16
jo
dec
pop
push
loop
and
std
dec
scas
mov
ret
pushf
inc
dec
in
arpl
cmp
and
stc
pop
fnsave
xchg
or
insb
sbb
test
push
ss
mov
lea
cmpsb
out
jne
popl
dec
sbb
mov
test
rcl
xor
outsb
jl
mov
inc
mov
push
xor
into
adc
push
fpatan
xchg
das
into
repnz
lahf
cmp
jnp
imulb
ss
pop
lahf
call
sbb
fdivrp
lods
addr16
es
xchg
mov
mov
loop
in
or
adc
sub
add
inc
test
mov
jp
mov
mov
inc
fdivs
je
inc
xor
inc
lret
aad
iret
mov
push
outsb
mov
dec
rcrb
mov
cmp
adc
mov
jl
pop
ret
roll
shrl
jg
mov
fcompl
cmp
movsb
adc
iret
adc
lods
out
cmpsb
popa
xor
pop
xor
ljmp
icebp
xchg
and
in
sub
mov
out
and
ss
leave
data16
lret
or
loop
xchg
dec
gs
cmp
mov
add
adc
inc
xchg
mov
leave
add
jae
shrl
xchg
imul
out
cmp
lret
scas
in
pushf
mov
and
sub
jo
push
icebp
dec
daa
xchg
jmp
inc
leave
sbb
rcll
xor
xchg
pop
push
orb
call
dec
scas
repz
fiaddl
in
cmpsb
cmp
xlat
cs
adc
into
xor
add
push
push
push
pushf
mov
rcrl
orb
int3
adc
pop
data16
cmp
jecxz
or
sbb
push
sub
out
imul
sti
add
or
push
ffreep
xchg
in
insb
xchg
xchg
imul
sahf
pop
add
dec
or
pop
sub
loop
fbstp
sbb
daa
dec
lock
les
pop
ljmp
sarl
dec
orl
and
lock
popa
sarl
inc
imul
ds
adc
insb
sarl
add
mov
xchg
imul
xchg
fldl
cmp
sub
or
or
fists
shll
pop
push
cmp
repz
add
inc
adc
mov
xlat
cs
jge
ret
xor
sub
or
fwait
rolb
dec
mov
mov
lock
outsb
pushf
xchg
arpl
in
ret
or
jecxz
test
mov
xchg
das
jno
hlt
xor
test
sub
push
sarl
cmp
mov
mov
movsb
out
jp
pop
xchg
das
ds
sbb
cwtl
lahf
adc
mov
fisubl
jge
ret
jl
popf
jp
dec
std
pusha
sbb
inc
or
pusha
sub
movsb
out
inc
mov
mov
adc
mov
sbb
inc
fadds
dec
ficoml
push
mov
mov
lods
pop
insb
sbb
xchg
sbb
push
stos
outsb
cmp
test
push
and
or
xor
mov
clc
mov
adc
pop
add
iret
and
inc
sbb
and
div
dec
and
out
jnp
mov
ret
cmpsl
mov
popa
pop
gs
bound
lods
mov
cmp
fwait
ss
call
xchg
sbb
insl
cmpsb
pop
mov
hlt
mov
jecxz
xor
subb
dec
mov
dec
inc
inc
addr16
inc
jmp
cli
sbb
inc
pusha
out
sbb
out
movsl
pushf
push
mov
jne
pusha
add
sbb
pop
and
inc
or
mov
repnz
sub
test
add
aaa
sbb
rcll
add
xchg
lcall
pop
cmp
in
in
shrl
dec
test
sbb
sarb
call
je
dec
sbb
divb
cwtl
icebp
call
fimull
iret
xor
push
and
rcl
ss
popa
faddl
movsb
fidivrs
pop
push
mov
add
push
fisubs
inc
aad
dec
push
xor
fdivr
aam
mov
icebp
pop
scas
pop
push
fsubs
push
push
pop
xchg
pop
jle
jl
inc
xchg
add
dec
adc
in
rcrl
insb
jno
aas
add
cli
cmp
gs
sub
lahf
test
jle
pop
jg
pop
stc
ret
xchg
xchg
xchg
outsb
mov
sbb
dec
and
fstl
sub
sub
loope
lock
cs
fwait
and
xor
xchg
xchg
jecxz
test
sbb
leave
pop
dec
sub
stos
out
jge
iret
lcall
cmp
pop
pop
roll
jno
movsl
fwait
lea
cld
and
lods
xlat
in
xor
push
sub
fwait
mov
loope
inc
loope
jle
push
pop
test
rolb
adc
and
pop
or
mov
mov
mov
sbb
sahf
arpl
leave
test
js
inc
fwait
movsb
and
aam
test
dec
scas
xchg
imul
xchg
sub
jg
xchg
in
or
bound
insb
push
ret
sbb
addr16
inc
out
dec
jl
add
jb
and
push
movsl
pusha
in
sub
sub
mulb
push
jmp
test
pop
sub
mov
mov
insb
sbb
icebp
jge
and
cmpsb
sub
in
sub
fwait
mov
movsl
ret
sub
mov
inc
je
std
xlat
xor
test
push
or
insl
xor
imul
push
push
push
inc
ss
pop
addl
xor
enter
lock
mov
pusha
sub
mov
aaa
fadds
sub
jmp
xorb
mov
shrb
mov
ficompl
movsl
pop
add
xor
mov
cmc
sub
add
push
bound
or
js
into
push
test
testl
push
fcompl
and
lret
mov
imul
lahf
dec
push
sbbb
pop
mov
addr16
adc
and
rolb
dec
lahf
jb,pt
jae
movsl
stos
jge
test
rep
je
andb
fiaddl
lcall
or
mov
inc
push
xlat
pop
test
pop
jge
inc
cmp
mov
out
and
out
adc
dec
push
mov
sub
cmp
push
sarb
jae
adc
and
mov
add
mov
out
mov
insb
loop
xor
inc
xlat
rcl
into
aad
jae
clc
and
cmp
cmp
mov
sbb
pop
fisttpll
adc
jmp
mov
push
jp
mov
shr
inc
cmc
dec
ljmp
adc
dec
pop
jno
xchg
cmp
pushf
int3
wbinvd
mov
push
push
pop
loop
clc
cs
mov
add
loope
sbb
push
sahf
push
add
lods
insb
dec
mov
imul
sbb
adc
pop
xor
xor
adcl
clc
popa
mov
adc
pop
loope
adc
into
pop
sub
pop
mov
adc
pushf
and
xchg
outsl
pop
in
push
xchg
and
icebp
inc
leave
shrb
cmp
pushf
into
stc
mov
xchg
or
push
out
xchg
repnz
imul
or
push
and
repnz
rorl
out
mov
adc
push
fwait
mov
push
rcrb
ds
lods
push
jb
pushf
pop
sbb
sbb
pop
cmpsl
leave
cli
movsb
fdivs
pop
shlb
and
cmpsl
jbe
xchg
mov
adc
ficoms
or
ja
stc
and
mov
sub
out
shrb
jb
cltd
in
xor
push
loopne
pop
in
es
push
cwtl
pop
cwtl
lcall
adc
iret
out
aam
addr16
cwtl
dec
mov
xor
shrl
mov
jbe
fdivl
inc
lea
push
orl
ret
adc
mov
loopne
sub
fidivrl
ds
mov
cmp
fld
adc
jmp
xchg
add
fwait
mov
das
enter
sub
jbe
jnp
xchg
lds
mov
jbe
and
and
pop
pop
adc
in
mov
mov
sahf
mov
xor
cs
pop
aam
and
adc
shlb
or
add
scas
fidivl
dec
aas
outsl
or
sbb
addr16
dec
repnz
push
xor
jecxz
xor
sub
sbb
cmp
inc
lea
fwait
sbb
dec
iret
mov
add
out
in
out
test
add
pop
fisttpll
and
mov
pop
shlb
imul
xchg
push
sub
add
dec
mov
dec
sub
movsl
jecxz
call
and
aad
lds
and
fs
dec
mov
mov
inc
push
lret
push
add
mov
sub
mov
nop
xor
test
ret
adcb
jne
pop
les
and
rcl
fwait
push
sub
int3
cld
sbbb
daa
xchg
fsubr
ja
push
mov
adc
fistps
lods
nop
loop
cli
fisttps
cmp
sbb
nop
push
arpl
cmp
adc
mov
popa
lods
or
pop
fsubrs
jns
in
sub
bound
dec
out
add
mov
add
dec
jecxz
insb
xchg
in
orb
movsb
mov
mov
xchg
mov
cmpsl
xor
in
lahf
sub
push
inc
repz
cli
sti
cmpsb
adc
fldl
xchg
repz
mov
insb
xlat
pushf
or
icebp
pop
ret
xor
loope
sarl
cld
rcll
mov
mov
jp
push
bound
dec
repz
imul
icebp
data16
std
xor
pop
mov
pusha
push
and
lahf
ss
mov
jecxz
xor
or
xchg
push
fists
fistps
in
sbb
movsl
adc
fwait
ror
jge
mov
xchg
out
hlt
test
imul
mov
push
jge
loope
loop
sub
lods
sbb
leave
ja
xchg
pop
sub
jo
lret
dec
fiaddl
push
outsb
inc
mov
or
adc
xchg
xor
mov
repnz
cld
adc
lahf
sbb
mov
mov
adc
repnz
iret
arpl
push
push
loop
adc
and
sub
mov
imul
jbe
dec
test
or
or
inc
mov
pop
icebp
add
pop
divl
add
or
and
jp
cmp
push
out
or
out
loopne
in
and
lea
stos
jg
pop
lahf
xchg
add
jo
mov
pop
cmpb
jge
fdiv
ret
shrb
into
fisttpll
xchg
fdivrs
fidivrl
jg
add
jo
or
pop
pushf
adc
stc
mov
gs
ror
fildll
cmp
xchg
mov
add
jnp
adcb
sahf
push
jmp
adc
xor
aad
loope
pop
shrb
sbb
shrl
das
adc
fisttpl
xchg
lcall
xchg
mov
xor
sub
sti
or
stos
inc
xor
dec
or
cmp
pop
cmpsb
in
adc
loopne
xchg
jae
mov
dec
mov
dec
out
imulb
adc
nop
lds
pop
xor
sbb
push
mov
and
xchg
je
jbe
shrb
sub
aas
and
cli
inc
movsb
stos
dec
filds
insl
cmp
aas
push
imul
or
paddusb
adc
mov
adc
sbb
xchg
into
cmp
dec
or
mov
test
adcb
add
xor
xchg
in
sub
cmp
setae
add
cmpsl
loop
pop
jg
sbb
cmp
andb
bound
push
xor
std
or
xor
adc
test
xchg
mov
daa
jl
xor
dec
mov
lea
cli
out
mov
adc
stos
loope
imul
divl
out
xor
mov
mov
push
pop
mov
mov
add
mov
sti
inc
push
push
movsl
out
hlt
inc
inc
cmp
and
cmp
arpl
cmc
xor
cmpsb
fs
outsl
lret
cmp
mov
ret
pop
and
mov
sti
jo
or
orl
arpl
iret
aas
call
or
sti
daa
mov
jbe
xchg
push
das
push
jne
jbe
mov
lock
cld
mov
adc
mov
push
xor
stc
ljmp
add
xchg
pop
adc
lahf
aam
popa
jecxz
mov
out
mov
test
adc
cmp
push
sarb
mov
xor
and
cli
or
pop
fcompl
dec
push
shlb
dec
jecxz
or
int3
add
cmp
int3
lock
negl
test
movsl
inc
fwait
push
mov
addr16
shll
mov
pop
je
out
iret
cmp
dec
les
sub
andb
in
pop
shlb
sub
into
inc
lret
pop
adc
nop
jno
mov
mov
pop
push
or
jmp
mov
scas
sub
push
es
xchg
push
add
mov
jmp
out
adc
jmp
or
adc
sahf
pop
sbb
jo
pop
je
mov
dec
xor
mov
jl
inc
loope
fists
fimuls
add
sub
ret
int
sub
sbb
push
mov
mov
sub
mov
push
loopne
call
ret
cmpsl
arpl
loope
dec
pop
fsubs
fdivs
xor
pushf
push
and
pop
xor
xor
and
mov
dec
mov
stos
pusha
cli
fwait
push
dec
in
cmp
jge
push
enter
dec
cmpsl
xchg
notb
frstor
out
push
or
xchg
aad
imul
out
jae
call
testl
adc
repz
cltd
cli
roll
jmp
mov
test
push
repnz
icebp
sub
aad
in
ret
lods
and
xor
es
add
mov
outsb
push
xor
mov
mov
and
shll
sahf
and
leave
ret
push
mov
mov
sbb
lds
xor
add
mov
lahf
jae
or
add
adc
aaa
dec
jae
cmp
and
fwait
mov
jns
dec
aas
lods
jge
js
lahf
cmp
insb
fwait
xor
sub
pop
fldenv
pushf
pop
das
aas
and
cmp
add
out
add
ds
mov
push
rcrb
sti
xchg
imul
push
in
xchg
nop
mov
push
scas
and
in
push
cmp
dec
outsl
lcall
and
ficomps
das
inc
lret
addr16
lret
jl
cmp
repnz
and
enter
popf
test
mov
push
rol
faddp
stos
push
mov
adc
xor
outsb
sbb
mov
das
popf
icebp
add
adc
int3
iret
ss
sbb
adc
in
mov
dec
js
adc
lret
pushf
fidivrl
jmp
inc
cmp
test
dec
xlat
in
mov
scas
adc
pop
aas
xchg
push
mov
std
add
dec
insl
sub
mov
inc
or
pop
pop
sbb
pop
insb
data16
push
mov
es
mov
cmc
sub
mov
cwtl
mov
mov
divl
xchg
mov
and
outsb
scas
inc
sbb
push
ja
cmp
mov
clc
test
pop
andl
jno
xor
lods
loope
mov
jne
cmp
cmpsl
xchg
jae
xor
inc
mov
push
aam
out
call
mov
adc
mov
adc
je
cmp
fistl
jg
push
push
outsb
stos
jp
inc
mov
call
daa
xchg
mov
jmp
cmp
cvtpi2ps
jne
or
gs
inc
mov
cltd
sub
loopne
xorl
inc
add
lods
rep
sbb
jl
popa
dec
xorb
fwait
shlb
mov
out
dec
sub
dec
jle
adc
or
lea
sbb
mov
iret
pop
pop
ss
shll
ljmp
lock
out
or
mov
dec
aam
pop
xchg
ja
pushf
orl
lret
cli
push
pop
cmpsb
xchg
push
add
pop
pop
xor
outsb
jno
adc
sub
or
add
cmp
in
icebp
xchg
push
mov
call
xchg
adc
repnz
mov
add
sahf
dec
dec
cli
push
mov
adc
add
bnd
mov
mov
enter
jge
test
bound
pop
mov
iret
mov
lods
jbe
into
arpl
mov
sub
and
cmp
out
stos
adc
popf
fnstcw
pop
add
mov
xchg
mov
sbb
adc
nop
xor
out
and
paddsb
test
dec
scas
and
mov
mov
or
repnz
js
jne
data16
lret
jno
lcall
into
add
lock
rcrb
stc
stc
xor
jbe
cld
daa
cltd
cwtl
mov
cli
push
pop
in
sub
mov
adc
pusha
jmp
mov
jne
lods
rclb
sub
inc
dec
loop
dec
test
adc
popl
ds
fcomps
jbe
ljmp
jmp
fsts
scas
loopne
and
movsl
lret
shrd
decl
jo
ljmp
sahf
lods
fs
sbb
xchg
pop
mov
dec
pop
fnstenv
and
jno
dec
outsb
cmp
inc
xchg
daa
int3
scas
arpl
mov
aaa
inc
push
add
rcrl
cwtl
std
sbb
sbb
mov
aaa
jae
arpl
or
push
fildl
adc
and
xchg
inc
mov
mov
push
out
in
repnz
and
ja
inc
daa
xor
enter
mov
mov
lret
jno
lods
mov
adc
mov
push
pop
dec
ds
pop
push
insl
je
pop
daa
aam
mov
sub
mov
mov
push
push
rep
mov
push
adc
mov
mov
int3
mov
sbb
sbb
pop
jmp
and
test
scas
int3
cmp
into
dec
mov
in
pop
sahf
dec
adc
lods
std
lods
stos
ret
jecxz,pt
fwait
out
test
jl
data16
xchg
inc
mov
sahf
add
movsb
mov
je
dec
or
jno
bound
ljmp
inc
inc
push
in
test
movsb
aad
int3
jp
insb
mov
rolb
movb
mov
bnd
jg
sub
pop
ret
pushf
xchg
fimuls
mov
lcall
sbb
movsl
and
sub
or
push
push
xor
into
pop
test
ret
pop
jnp
fwait
movsl
adc
and
popa
les
adc
pop
aas
cmc
incb
mov
fimull
push
dec
or
fnstenv
push
out
xchg
inc
jbe
rorb
xor
cmp
inc
jb
and
into
or
add
es
and
rorl
testl
push
xchg
xchg
dec
jae
add
enter
and
jge
lds
adc
je
sub
mov
ficoms
push
sbb
mov
jne
and
mov
mov
cld
inc
mov
scas
push
inc
and
test
mov
pop
cmpsb
mov
int3
add
loope
adc
mov
xchg
mov
andb
cmp
sbb
out
in
push
mov
sub
daa
movsb
sub
popa
lea
std
pop
push
inc
daa
mov
outsl
loope
shr
mov
jge
fistl
mov
jo
cmpsl
sbb
lcall
subl
lea
pcmpeqb
push
inc
cld
sbb
mov
mov
push
sbb
pop
adc
shll
sti
lcall
adc
cmpb
mov
js
iret
mov
xchg
mov
jb
arpl
stos
xchg
xor
push
adc
sbb
push
iret
push
xor
push
fsqrt
fnstcw
sub
stc
pop
cld
movsb
call
mov
out
push
test
cmp
jg
push
mov
insb
into
aas
and
cmp
popf
test
adc
pop
incl
orb
and
mov
adc
jmp
or
push
sbb
js
insl
mov
pop
dec
mov
push
jmp
pop
sub
xor
mov
pop
mov
test
hlt
in
je
into
lcall
mov
or
sti
jbe
push
cmp
dec
adc
cmp
jle
push
lds
sub
ljmp
hlt
pop
mov
jne
negl
arpl
and
pop
push
jl
or
xchg
mov
push
sub
adc
fidivrs
mov
repz
sub
jle
int
imul
out
clc
arpl
roll
fcmove
nop
and
cltd
movsb
inc
js
mov
std
mov
sub
aam
or
cwtl
adc
adc
jp
or
clc
inc
xor
std
adc
std
mov
sbb
lret
jb
add
xor
popa
in
or
ljmp
mov
mov
push
iret
xor
psraw
roll
cmpsl
or
xchg
stos
out
loope
call
xor
dec
jne
jmp
mov
pop
sub
icebp
cld
arpl
fcomi
enter
arpl
mov
lods
push
cmc
ljmp
in
out
fisubl
addl
push
in
mov
mov
push
cmp
pop
inc
mov
fldenv
jnp
xor
lods
bound
pusha
jnp
dec
adc
adc
and
pop
cmp
mov
nopl
insb
or
mov
jns
mov
fs
jo
jmp
movsb
pop
adc
std
mov
xchg
into
mov
es
pop
int
ds
lret
xchg
popa
leave
adc
cmpxchg
cwtl
sub
fsubrs
lods
sbb
mov
insb
lret
out
fdivrl
cmpxchg
test
mov
mov
sbb
xor
lret
lods
mov
sbb
outsb
cltd
push
shll
popf
jo
aas
add
pop
std
arpl
pop
xchg
or
stos
into
and
jle
jmp
pop
inc
pop
test
mov
repz
dec
pusha
sbb
out
sub
daa
or
aas
push
jge
jo
sar
xchg
rcrl
adc
lcall
popf
dec
inc
xchg
shlb
push
mov
push
xchg
jbe
add
mov
clc
xchg
je
ret
test
popa
jecxz
mov
xchg
aas
mov
mov
cmc
inc
mov
testl
mov
rcrl
pop
inc
out
ret
cmc
js
jns
cmp
or
ret
pop
jb
hlt
mov
fiadds
jnp
pop
and
jle
and
ds
and
pop
sbb
jle
fs
jb
hlt
jb
cwtl
and
ret
lret
movsl
stos
xor
pop
push
leave
jl
lret
shl
inc
aam
sti
inc
ret
in
stos
mov
fidivl
pop
adc
push
subb
loop
frstor
mov
dec
jb
out
mov
scas
pop
fsubrp
std
add
or
jl
loopne
dec
sbb
aaa
mov
iret
test
add
arpl
mov
lahf
aad
xor
stos
cmpl
shrl
xor
repnz
lods
popa
test
jl
inc
adc
cmp
rcrb
add
mov
xor
hlt
enter
sub
call
sub
xor
mov
mov
pusha
inc
sbb
sub
and
xchg
fs
sbb
inc
mov
push
lahf
jp
pushf
outsb
cmp
or
pop
sbb
shlb
dec
mov
popf
pop
push
outsl
lods
insl
scas
xchg
inc
add
mov
outsb
stc
cwtl
sbb
pop
dec
jl
and
mov
leave
fstps
inc
ja
out
mov
mov
ret
test
popf
jne
hlt
sbb
bound
ds
dec
shlb
mov
push
outsl
ss
dec
pop
sbb
cmc
mov
push
jmp
pop
insl
or
jp
lret
ja
pushl
jno
jg
mov
stos
push
sbb
sbb
and
lods
jno
lds
cmp
and
lcall
call
jg
push
push
leave
int3
rcrb
jbe
fucomip
xchg
mov
xchg
sbb
xor
jle
push
mov
adc
mov
jmp
pop
int
xchg
lret
fwait
jbe
jg
mov
call
addr16
pop
imul
sbb
cs
mov
mov
push
fldenv
loope
fdivp
mov
arpl
out
sub
push
add
sub
push
mov
out
dec
push
cwtl
sbbb
movsl
pusha
repz
mov
ljmp
adc
or
jl
cs
addr16
lods
or
psrad
dec
jecxz
cmp
add
scas
lods
xlat
sub
add
je
jno
xor
mov
add
jmp
xchg
andb
sub
adc
in
sub
adc
ret
mov
mov
cmp
call
jge
mov
in
mov
dec
jl
add
push
aas
mov
sub
dec
push
notb
dec
cld
dec
xor
jmp
hlt
pop
dec
movd
rcl
pushf
sub
gs
adc
dec
gs
imul
pop
loopne
inc
das
xor
inc
lds
pop
mov
mov
cmpsl
sub
jmp
rcrb
test
jecxz
jl
fwait
or
jae
rclb
inc
arpl
pop
pop
test
insb
push
mov
in
xor
xor
mov
sbb
cltd
push
out
or
movsl
ret
pop
lcall
dec
outsb
jl
mov
xchg
and
jae
fwait
jmp
pop
mov
adc
icebp
xorl
sub
scas
mov
aad
inc
cmp
xchg
pop
push
int
mov
out
inc
sbb
fsubrs
clc
popf
shrl
pop
push
inc
adc
xlat
jbe
subl
push
inc
mov
add
jnp
mov
jnp
dec
loope
js
jp
xchg
xchg
mov
pusha
mov
sti
pop
stos
push
pop
xchg
aam
neg
int
push
push
sbb
movsl
xchg
rcrl
in
mov
cmc
into
inc
sub
jo
cli
popf
mov
shl
add
jb
inc
icebp
xor
mov
iret
gs
btr
imul
dec
mov
imul
sbb
adc
aam
popa
fcompl
lds
xchg
sub
loop
stos
sbb
imul
inc
push
sub
aad
jno
fsts
cmpl
mov
and
adc
xorl
ret
jl
rcll
addl
stos
mov
js
hlt
or
loope
add
rorb
xor
and
xchg
xchg
mov
jae
xchg
dec
mov
icebp
and
mov
or
scas
mov
mov
cmc
aad
sub
call
scas
push
inc
mov
adc
pop
or
xor
rolb
mov
dec
loope
cmp
add
dec
sbb
adc
mov
popf
sub
add
pop
jbe
cmp
add
add
hlt
push
and
jne
repz
jbe
push
cltd
jecxz
les
stos
mov
imul
clc
stos
mull
fldt
fbstp
pop
push
loop
callw
inc
xor
xchg
rcr
fyl2x
push
insb
jae
mov
mov
cmp
shl
jmp
xchg
xchg
clc
sub
lea
leave
inc
ret
dec
xchg
mov
in
lret
mov
sbb
adc
lcall
add
mov
jo
orb
stos
add
mov
adc
fdiv
loope
mov
test
dec
inc
dec
mov
mov
jecxz
mov
pop
lock
add
movsl
xor
mov
scas
mov
lret
cltd
rorl
or
inc
mov
sub
in
int
push
loop
pop
hlt
push
mov
sub
lret
sbb
stos
xchg
lcall
fdivs
or
or
jnp
xorl
mov
outsb
or
dec
xchg
cmp
insl
xchg
movsl
rolb
jge
aaa
lcall
mov
push
mov
sub
xchg
decl
dec
mull
mov
sahf
lea
imul
xor
cmovno
pop
pop
dec
jecxz
js
dec
and
push
lret
or
sbb
ja
popl
jbe
cmp
js
orb
sbb
nop
cmp
cmp
lcall
in
imul
shll
cld
mov
mov
xchg
cmpsb
jno
sarb
xchg
xchg
data16
mov
sub
repz
aam
mov
sub
mov
dec
pop
xchg
xor
mov
inc
push
lds
sbbb
push
adc
sahf
or
xchg
outsl
scas
fisubl
xorl
add
ret
out
lods
or
aaa
xor
jp
jmp
jmp
fst
ror
xor
ds
shrl
mov
scas
aaa
stc
mov
mov
mov
insl
popf
cltd
jmp
aam
mov
rcrl
ds
sbb
rclb
xchg
aam
ss
sbb
scas
out
jns
add
inc
push
loopne
pushf
mov
adc
push
sbb
in
sbb
mov
inc
je
push
xchg
xor
js
scas
sub
out
mov
xlat
mov
mov
jp
leave
jnp
gs
test
push
sbb
and
cmp
sbb
or
mov
or
mov
neg
leave
mov
cltd
jb
sahf
mov
mov
and
xchg
xchg
jbe
xor
push
fcmovbe
pop
bound
mov
add
mov
inc
push
jle
push
out
sbb
rorl
ret
mov
push
mov
repnz
ja
imul
cmp
mul
aas
cs
aam
test
mov
adc
mov
scas
jl
inc
out
addr16
adc
or
or
jne
xor
in
add
sub
clc
cmpsb
fsub
in
movsb
add
scas
sbb
iret
sbb
push
lahf
cmp
movsb
notb
cmp
and
sub
xchg
into
ja
lret
ret
rcl
or
push
lods
cmpsl
push
push
int3
pop
push
xchg
xchg
jp
push
clc
cli
dec
dec
xor
jb
add
ficoms
ss
xor
or
cmp
into
xor
popf
push
scas
mov
aas
adc
es
nop
icebp
sub
fildll
scas
sbb
scas
int
in
jno
sub
or
fldcw
shlb
dec
mov
movsb
mov
inc
int3
rorb
divb
and
sbb
jle
out
aas
xchg
aas
lea
jno
or
xchg
insl
insl
roll
xor
mov
lods
arpl
frstor
jp
jo
sub
mov
xor
mov
fsubs
jns
and
dec
sub
jle
loop
xchg
pop
insl
loope
inc
push
lds
push
out
push
mov
sahf
ret
push
or
icebp
dec
dec
dec
add
popa
fidivrl
push
imul
test
or
xchg
pop
iret
mov
arpl
out
xor
add
in
mov
xor
sub
mov
shlb
jnp
lret
in
mov
out
sbb
xor
xor
mov
fsubp
cmp
out
xor
pop
lahf
cld
adc
std
jg
dec
loopne
mov
xchg
adc
imul
repz
fildll
lods
dec
mov
pusha
mov
xchg
sarl
enter
dec
movsb
mov
cmpsb
cld
ja
mulb
cltd
les
cld
mov
push
lea
cmp
mov
mov
je
addr16
sbb
rolb
add
inc
fsub
aam
xchg
xchg
xchg
sahf
ljmp
jmp
push
fadds
cmpsl
mov
loop
lods
xor
mov
xchg
or
js
inc
xor
scas
aam
orl
xor
fnstcw
rol
imul
lea
jae
ja
pop
inc
aam
into
test
in
mov
out
iret
or
and
adc
sbb
int3
rclb
dec
or
pop
adc
add
jbe
xor
andb
int
sub
rorl
mov
fildll
aam
outsl
inc
xchg
adc
jmp
push
mov
inc
pusha
pusha
add
pop
int3
int
push
rcpps
jae
push
jnp
cltd
aad
insb
das
test
rcrb
dec
mov
sbbl
sarl
mov
nop
mov
ret
and
aaa
je
pop
fcoml
mov
rcrb
shlb
mov
xchg
adc
lahf
pop
ret
scas
es
testb
cmpsl
add
cli
shr
cmp
aaa
sub
pop
roll
js
or
and
pop
inc
mov
cmp
seto
enter
out
cmpsl
mov
rcll
iret
js
aam
fldenv
stc
out
or
shll
lcall
adc
jp
mov
cmp
and
movsl
loop
jp
add
repnz
call
shlb
repnz
lods
fstpl
mov
pop
fmull
adc
test
xor
cli
pcmpgtw
pop
test
xchg
mov
mov
shll
jp
xlat
fwait
cmpsl
loopne
or
adc
xor
mov
mov
fimull
sti
mov
or
dec
push
ret
push
mov
xchg
rol
fcomi
jae
clc
pusha
xlat
repz
iret
adc
xor
shr
push
cmp
xor
mov
jne
adc
inc
orb
cs
dec
insw
jne
das
in
mov
inc
pop
rcrb
sbb
add
cs
jb
stc
test
pop
sarl
fld1
gs
sbb
cmp
nop
dec
jmp
negb
lahf
cmc
pop
cmp
or
lahf
push
mov
aam
cltd
cmc
xor
ljmp
jle
push
sti
cmpsl
jo
les
ja
in
cmp
push
inc
decl
lret
or
fcmovnu
push
adc
int
lods
dec
loop
sbbl
xor
and
dec
pop
ret
add
ret
loopne
jl
pop
dec
cmp
mov
mov
jo
pop
into
pusha
mov
sbb
aaa
add
out
aas
sub
xchg
mov
test
mov
mov
sbb
mov
adc
pop
jo
call
lcall
mov
push
push
gs
popf
push
jns
outsb
and
cmp
jg
inc
inc
or
sub
in
dec
fildll
cs
xchg
ffree
and
in
add
insl
cmp
loop
push
les
cltd
push
stos
addl
jne
lcall
pop
lods
addr16
add
push
cmpsb
lcall
inc
mov
dec
shl
insb
adc
dec
mov
jo
dec
xlat
jne
push
ja
shld
movsb
mov
and
xchg
loope
stc
aam
call
xchg
mov
scas
sub
push
lds
mov
data16
aas
jmp
adc
jl
out
wrmsr
cwtl
xchg
and
mov
rorb
lret
in
std
call
dec
mov
push
iret
pop
lock
sbb
push
sbb
test
mov
sbbl
stos
mov
mov
shlb
fidivl
xchg
add
mov
jg
das
test
shl
popa
mov
mov
or
lret
rcl
mov
lcall
cld
dec
pop
sbb
jp
push
loope
sub
push
jno
push
xchg
ss
push
mov
add
cmp
and
cmpsl
cld
dec
push
push
adc
fisttpl
sbb
dec
pop
bnd
jne
sub
mov
js
scas
cmc
mov
js
addr16
stos
rclb
call
jo
popl
hlt
mov
push
pop
mov
inc
push
sub
dec
jge
mov
je
push
or
cmp
out
push
hlt
mov
pop
inc
in
jge
outsb
mov
pop
add
push
je
push
xchg
add
mov
iret
subb
sub
jmp
push
xchg
and
sbb
jbe
jo
aas
add
cwtl
adc
pop
pop
mov
jg
fiadds
mov
push
dec
mov
xor
lahf
or
movsb
xchg
cmpsl
mov
adc
adc
adc
push
pushfw
cli
jns
ljmp
xchg
xchg
inc
cmpsb
jb
or
jnp
fdiv
push
sahf
push
test
adc
mov
lods
lds
sahf
rcll
int
mov
fnstcw
or
lods
sbb
adc
push
imul
orw
sub
mov
pop
mov
pop
sarl
sbb
push
mov
xchg
cltd
loopne
outsb
mov
leave
sahf
mov
dec
sbb
loope
dec
mov
test
xchg
adc
mov
xchg
cmp
hlt
mov
jge
pop
lds
icebp
cmp
dec
pop
or
imul
xor
push
gs
inc
jmp
jne
sbb
test
pop
lcall
and
mov
push
test
inc
fdivs
rorl
fildll
test
lret
repnz
roll
cld
jmp
mov
sbb
icebp
lock
jle
ss
push
xor
mov
mov
mov
cs
push
fisubrs
push
int3
lret
popa
sahf
nop
mov
test
shr
ret
push
cmp
fstpl
add
jecxz
sbb
adc
push
push
pushf
sub
data16
adc
ret
in
mov
mov
dec
cmc
push
pop
mov
mov
flds
mov
cld
addr16
subb
out
cwtl
mov
lret
mov
out
nop
push
or
movb
cmp
cs
dec
and
pusha
mov
mov
jecxz
daa
push
popf
pop
aaa
cltd
test
fistps
mov
xor
fnstcw
mov
subb
xchg
mov
incl
imul
outsb
std
jns
pop
mov
pusha
sti
aad
jo
decb
in
cmc
cs
insb
pop
add
pop
fwait
push
and
pop
add
mov
mov
push
test
mov
in
sub
jge
in
jg
mov
jno
pop
xchg
ret
maxps
test
xor
adc
or
adc
push
inc
cli
cmpsl
call
adc
std
ljmp
stos
dec
dec
ljmp
pop
mov
loope
cltd
jl
jge
lcall
push
cmp
sbb
pop
push
mov
popa
sub
jg
inc
int3
mov
jl
out
mov
add
pushl
inc
into
mov
adc
decl
jl
paddb
adc
int
dec
lods
std
dec
ret
and
rol
mov
sbb
cmp
aaa
and
xchg
ja
or
cmp
sbb
je
std
mov
fstp
rclb
adc
bound
in
jne
push
mov
loopne
jnp
hlt
dec
fs
jmp
addr16
xor
in
les
sbb
loope
jno
out
shrl
add
xor
mov
int
mov
enter
out
orl
aas
dec
adc
add
js
lret
pop
arpl
ja
pop
mov
xchg
xlat
adc
sub
fsubs
push
and
sbb
xor
xor
push
insb
adc
gs
shll
repnz
lods
out
xchg
mov
mov
je
adc
mov
push
iret
clc
rclb
mov
lods
into
test
loopne
pop
pop
mov
mov
fists
fbld
gs
addr16
mov
dec
add
sbb
insl
pop
mov
jl
sahf
mov
jecxz
add
pop
lret
test
dec
mov
fadds
inc
clc
sarl
pop
ljmp
cmp
ja
fstpt
push
inc
adc
mov
pop
xlat
cld
pop
mov
out
addr16
cmpsl
in
fisttps
jge
in
movsl
stos
and
xchg
pop
aas
popa
ja
lcall
leave
push
inc
xor
push
mov
pop
ss
adcl
mov
fwait
mov
lods
cmp
scas
in
or
popf
aas
cwtl
adc
aaa
dec
add
mov
pop
xor
mov
dec
mov
lods
dec
out
cmp
push
and
mov
add
aad
dec
mov
push
jbe
push
sarl
fimuls
mov
xor
adc
xor
sub
xor
insl
adc
inc
into
jns
dec
dec
popf
jns
mov
in
lea
lock
jecxz
mov
bound
xchg
jle
pop
and
cmp
cs
xchg
sub
movsl
fsub
lock
fstpt
inc
sub
ret
sbb
and
inc
push
jnp
cmp
cmp
arpl
mov
xchg
push
fsub
mov
inc
push
pop
xchg
mov
ja
sub
loop
mov
mov
push
outsl
out
push
push
mov
test
pushf
or
movb
push
mov
pop
inc
stos
mov
and
hlt
and
repnz
or
int
xchg
daa
movsb
outsb
ja
pop
add
mov
leave
or
inc
push
push
std
lods
enter
bound
ljmp
insb
lds
sbb
mov
mov
mov
outsl
frndint
adc
or
xchg
outsb
push
call
fcom
mov
dec
scas
ss
out
and
gs
leave
ja
inc
sti
push
xchg
mov
xchg
mov
xchg
cmpsb
ret
rcrb
orl
inc
repz
xlat
mov
push
mov
cmp
into
shrb
cmp
std
mov
dec
push
andl
xlat
mov
int
dec
cmp
imul
jmp
xlat
sbb
psubd
mov
pop
xchg
lret
mov
stos
dec
xor
in
xchg
out
loope
lock
sarl
mov
or
aas
push
sub
lock
lods
xlat
aas
cwtl
pop
adc
jbe
cmpsb
xchg
stc
dec
or
xlat
or
stos
sbb
lods
xor
dec
push
arpl
pavgw
mov
push
out
mov
daa
mov
mov
jns
repnz
loopne
orb
lahf
jo
filds
hlt
adc
outsb
jl
out
fildl
push
lods
mov
jae
pushw
out
xor
ret
ficoms
and
lods
mov
mulb
imul
das
and
lahf
add
push
outsb
negl
push
push
repz
call
mov
aaa
push
cwtl
and
in
test
movsb
popa
mov
mov
std
jle
jb
or
shlb
cmpsl
xchg
and
jne
iret
dec
xor
pop
jmp
ficoml
jg
shlb
sub
fidivl
inc
outsl
or
pop
sub
xchg
out
lret
push
clc
minps
or
repz
imul
ficomps
lahf
adc
seta
into
lahf
mov
int
xchg
add
ret
jno
sub
insl
xchg
dec
jle
cs
pop
push
and
mov
leave
out
gs
lods
stc
push
add
data16
ds
jp
lock
aaa
cmp
dec
mov
loope
inc
decb
mov
cmpl
and
sbb
test
xor
mov
mov
pop
xor
jbe
and
fidivl
addr16
aad
jne
loop
nop
mov
lcall
loopne
pop
in
das
xchg
in
mov
std
in
xchg
outsb
adc
mov
dec
mov
das
test
xor
and
or
or
leave
mov
jae
xor
pop
sbb
inc
push
and
mov
test
mov
cmpsl
add
iret
jns
ljmp
movsb
fcmovne
pop
adcl
outsl
jo,pn
adcl
and
jmp
jbe
sub
lock
enter
mov
jp
pushf
popf
xor
and
cmp
xlat
push
jbe
xor
imul
adc
leave
xchg
out
aaa
adcb
les
addr16
jnp
add
jge
adc
mov
clc
xchg
xor
mov
sub
dec
jge
ja
in
cmp
jmp
xchg
repz
sub
subb
cmpsl
sahf
out
sbb
lods
frstor
cli
jns
jl
ja
test
pop
in
xor
inc
cmp
inc
sub
adc
sub
aam
sahf
bnd
sarl
cmp
popf
ljmp
aad
push
inc
mov
mov
int
fisttpll
out
jne
push
mov
sahf
jmp
rolb
mov
pop
lret
and
inc
imul
adc
imull
imul
pop
mov
cmp
jno
inc
outsl
sahf
fidivrs
xor
int3
xor
jae
nop
pop
cmp
inc
jnp
sub
cmc
dec
lock
cmpb
push
or
mov
push
push
pop
fsubrs
sti
out
fcompl
mov
cmc
push
jb
cs
mov
mov
xchg
jecxz
xor
jg
daa
shlb
addr16
add
and
cwtl
mov
inc
out
incl
cld
adcb
dec
cmp
xor
push
push
pushf
cmp
pop
mov
sub
xor
lret
xchg
xchg
xlat
xor
sub
push
addr16
js
mov
xor
mov
dec
cmp
repz
jo
sub
xchg
je
inc
inc
xchg
add
add
mov
mov
pop
mov
push
mov
dec
ret
sub
test
pop
and
mov
jne
pop
aad
repnz
push
popf
fstp
out
xor
int3
sbb
int
repnz
test
jno
int3
mov
mov
cltd
xor
out
sahf
push
inc
cmp
mov
pop
lea
scas
mov
inc
loopne
aas
nop
out
push
sub
or
je
je
mov
into
popa
into
mov
mov
shlb
psllw
pop
fcmovbe
dec
xchg
push
sbb
ficomps
xor
xchg
and
movsl
mov
test
adc
movsb
jnp
mov
push
dec
scas
loope
adc
push
xor
mov
adc
pop
and
pop
jge
mov
insl
pushf
insb
aam
push
sub
or
fwait
popf
iret
shl
lods
pop
push
aad
rcrb
test
sub
sbb
cmp
add
or
sarb
jg
test
xor
addr16
sti
mov
cmp
mov
std
mov
and
popa
add
test
adc
scas
lds
fwait
popa
xor
rorb
decb
mov
ss
stos
enter
mov
js
ret
leave
out
push
mov
dec
push
and
jmp
ljmp
in
xchg
lcall
mov
mov
aaa
movsl
pop
or
xor
push
ljmp
xchg
popa
jnp
jmp
ret
jle
sub
jg
test
jg
xchg
cmpsl
enter
jle
movsl
inc
dec
jge
pop
fld
cmp
cmp
test
popf
stc
dec
cmp
mov
xor
mov
cmp
ret
cmp
minps
fistpl
mov
rcr
xchg
inc
fs
loopne
mov
hlt
adc
lret
gs
cwtl
mov
adc
test
cmp
cmp
mov
push
nop
out
divl
xor
xor
inc
jns
arpl
add
xchg
adc
jo
push
daa
ljmp
stc
and
mov
mov
pusha
mov
enter
adc
pop
inc
data16
or
mov
pop
jno
icebp
mov
push
jb
in
xchg
insb
or
pop
rcll
jl
and
push
mov
jmp
mov
int3
lcall
scas
daa
loop
inc
mov
cmp
hlt
jb
xchg
xchg
mov
idivl
aas
pop
push
mov
jns
lea
sbb
jne
lods
sbb
sbb
or
add
hlt
pop
lahf
fistpll
pusha
sub
fisttpl
rorb
and
sub
mov
test
dec
shlb
loope
mov
or
sub
jecxz
outsb
lods
cmp
or
mov
mov
mov
ret
sbb
sti
pop
jne
mov
jge
test
add
shlb
arpl
lods
push
mov
test
xchg
mov
cmpb
imul
push
add
out
xchg
dec
insb
add
cmp
pop
lcall
inc
fildll
insl
mov
cmp
in
loopne
data16
cmp
jge
xor
arpl
adc
pop
movsb
dec
xchg
dec
das
xchg
cmp
fidivrs
mov
fwait
int3
xor
pusha
sti
push
xchg
mov
out
jne
add
xchg
or
and
in
cmp
inc
dec
sub
cmp
jo
ss
mov
dec
outsb
push
jl
js
sub
add
jmp
cs
or
les
mov
lahf
and
in
inc
push
popf
jle
fists
push
loope
mov
jmp
int
sub
mov
adc
push
mov
sbb
sub
lret
mov
jb
jo
pop
addr16
negl
int3
psubusw
add
mov
ja
cwtl
sub
add
out
cmp
inc
lods
sub
mov
adc
adc
imul
lea
or
push
fidivrs
sub
xchg
into
fistpl
adc
daa
fiaddl
lret
cltd
stos
cmc
pop
jge
ret
jg
sbb
mov
aam
lcall
sub
out
fldt
sti
test
or
aaa
add
imul
repnz
out
sbb
mov
loope
cmc
mov
call
sbb
mov
sahf
imulb
or
mov
sbb
insb
in
shlb
nop
add
xchg
adc
out
mov
jle
inc
pop
add
pop
dec
mov
xchg
loope
pop
mov
pop
jae
jo
inc
hlt
pop
xor
adc
mov
xchg
pop
lahf
mov
nop
mov
sbb
cld
push
mov
mov
cmc
call
inc
dec
xor
sbb
shlb
add
mov
das
mov
in
xlat
sti
int
ljmp
add
pop
out
cmp
dec
pushf
mov
in
push
js
jle
repnz
jbe
leave
cmp
fs
xlat
pop
stos
repnz
mov
xchg
jecxz
stc
lret
jo
divb
pop
jp
add
call
hlt
xor
leave
xor
cmp
in
inc
dec
lret
lea
sub
mov
mov
or
push
scas
inc
xchg
mov
dec
fs
in
xchg
mov
dec
and
sub
jmp
mov
repz
adc
xchg
pop
adc
cmc
mov
hlt
jmp
pop
mov
and
cmp
pusha
pop
dec
sbb
lods
or
scas
add
cmp
sbb
ficoml
and
in
sahf
xor
lahf
int3
mov
gs
and
push
cmpsl
push
mov
rcl
xor
pop
pop
shrw
or
fisubl
adc
imul
xor
cmpsl
fistps
lret
and
clc
shrb
dec
push
xchg
ss
push
jg
adc
dec
xchg
pop
in
mov
push
and
sub
loopne
sub
lea
jmp
mov
mov
sti
cmpsl
adc
mov
mov
jl
int3
mov
xchg
gs
sbb
loop
sub
ror
in
or
out
orb
orb
push
popa
cmpsb
and
insl
iret
push
loope,pt
adc
or
jmp
imul
sbb
lock
mov
jmp
inc
mov
adc
lret
cmp
insb
aaa
xchg
adc
adc
out
aas
pop
cltd
pop
xlat
in
fstps
lret
shlb
xchg
ss
outsb
mov
mov
mov
mov
cmp
xchg
sub
mov
xor
pop
cwtl
and
bound
push
mov
and
movsb
jnp
and
je
mov
loope
sti
xchg
fldt
jb
jl
or
call
lcall
adc
inc
xlat
insl
xlat
mov
push
fstpl
and
push
mov
ficompl
lods
cmpsl
xchg
or
in
jle
xor
xorl
popa
cmpsl
sar
adc
lret
dec
fisubrl
cltd
xchg
fistl
sub
loop
ljmp
ret
xchg
jnp
pushf
cmp
test
stos
sub
sarl
sbb
jecxz
xchg
pop
mulb
and
cmp
xchg
sub
push
jmp
cld
jg
sbb
and
adc
dec
and
stos
push
sub
inc
sbb
movw
sub
inc
out
adc
pop
ret
sbb
xchg
or
sub
inc
xor
movl
test
or
lret
dec
callw
xor
add
xchg
xchg
in
push
ficomps
fimuls
mov
je
mov
jne
cmpsb
cmp
inc
int3
lahf
xchg
iret
add
mov
mov
xchg
and
xchg
mov
cmp
mov
fwait
shlb
adc
inc
sbb
sbb
mov
sub
cmp
jmp
or
dec
aas
test
in
fstpt
test
or
cwtl
mov
mov
rcrl
stos
jnp
or
cs
out
outsb
aad
xchg
idivb
psrld
adc
pushf
in
mov
adc
mov
sub
out
mov
std
xchg
jmpw
push
aam
lahf
aas
or
scas
sbbb
lcall
dec
fwait
daa
cmp
hlt
repnz
sbb
cmp
and
psrld
push
rorb
fsts
pusha
inc
push
ficoms
sbb
pop
inc
in
shlb
insl
push
sub
pop
iret
xchg
jno
ret
mov
xor
sahf
mull
mov
sarw
inc
cmpsl
jmp
adc
xlat
dec
pop
and
std
push
js
shlb
stc
stc
mov
imul
mov
popf
out
cltd
pusha
rcr
xor
imul
push
test
in
out
negl
jmp
sbb
cmp
mov
inc
cld
cmc
inc
cmp
jb
fidivrl
jp
mov
dec
xor
in
roll
inc
adc
xor
dec
dec
nop
mov
adc
out
jmp
stos
pop
daa
in
bound
push
addr16
sbb
mov
mov
sub
jnp
push
push
cmp
out
mov
cmp
lods
push
scas
inc
aas
add
fdivl
ja
mov
rcl
jo
dec
mov
jno
icebp
daa
mov
fidivl
jge
jne
jo
cmpsb
loope
cmp
pusha
jno
and
and
jge
inc
iret
xor
push
sub
icebp
jnp
mov
xchg
addr16
cmpsl
pushaw
mov
in
fldt
rolb
xor
sti
pop
mov
mov
bound
addr16
lret
cld
mov
adc
aad
adc
pop
mov
aaa
imul
dec
or
jno
out
addr16
or
loopne
mov
dec
je
push
jge
push
mov
jg
cmp
xor
xchg
xor
ficomps
mov
faddl
outsb
pop
inc
cs
add
repz
enter
lcall
in
push
ljmp
xchg
scas
pop
add
sub
sbb
cmp
shrl
mov
fildll
jg
lds
clc
pop
cmp
loop
mov
repnz
push
sub
mov
rolb
addb
mov
pop
add
insb
sub
fdivrs
repnz
icebp
push
out
mov
fldt
pop
or
orb
xor
mov
push
popa
jge
les
pushf
popf
andl
add
cmp
ret
ror
dec
and
xchg
mov
popa
add
push
pop
inc
jae
jne
lods
adc
inc
push
outsb
jnp
cld
popf
leave
pop
sub
mov
lods
cmc
cmpb
call
ja
adc
dec
sub
xor
in
sub
sti
pop
jns
xchg
dec
jne
mov
pop
adc
out
add
jne
and
pop
dec
xor
xchg
notl
xlat
outsl
sub
cld
xorl
hlt
fwait
lret
out
xchg
xchg
ror
scas
out
jge
push
daa
inc
pusha
mov
or
adc
loopne
sub
dec
pop
sarl
aam
add
sbb
xchg
jne
pop
cltd
inc
hlt
pushf
les
fstpl
add
cwtl
adc
adc
mov
cmp
popf
sub
fsts
idivb
lods
xchg
mov
xchg
mov
jo
loop
in
imul
lea
js
xchg
pop
movsb
das
adc
movsl
push
add
or
lock
cmp
mov
pop
or
pop
mov
rorb
push
in
pop
rcrl
inc
lahf
aaa
out
push
jae
adc
pop
cmp
pop
sbb
adc
xchg
sti
pop
jb
jne
daa
imul
imul
pop
std
les
dec
xor
xchg
fwait
loop
add
out
or
pop
jle,pt
aad
xchg
push
divb
icebp
cltd
or
fistpll
mov
lods
loope
stc
jbe
push
pop
lods
xchg
fwait
sub
cmpl
sbb
and
clc
fwait
xchg
sub
inc
sbb
les
std
dec
pushf
and
fwait
imul
lock
hlt
push
cmp
jbe
shrb
mov
scas
and
imul
cmp
ret
jb
jno
mov
mov
loope
push
push
pop
jnp
lret
dec
jl
jbe
push
repnz
repnz
cmpl
test
dec
dec
stos
sbb
js
sbbl
xchg
add
pop
jmp
insl
or
or
stos
add
xchg
or
fmull
imul
imul
stc
cwtl
test
add
mov
sti
popa
into
rcl
sahf
mov
lods
inc
mov
outsl
mov
sahf
add
cmp
and
jno
and
js
shrl
data16
lret
pop
sbb
adc
pop
loopne
cld
jnp
push
sub
mov
cmp
sbb
adc
aam
or
faddl
pushw
insb
mov
daa
movsl
hlt
rclb
or
test
cwtl
aas
imul
jb
dec
scas
jnp
push
pop
xchg
dec
dec
pop
dec
lret
cmp
pop
dec
mov
xor
pop
sub
sbb
push
pushf
jle
ljmp
pop
test
jns
mov
pop
push
test
enter
lret
inc
mov
sbb
sbb
out
in
and
dec
movsl
adc
aaa
inc
adc
add
add
cmp
sub
lret
jmp
lahf
jnp
mov
ss
adc
mov
adc
cld
popf
sub
orb
cs
inc
push
push
or
fadds
inc
xchg
xchg
cmp
fidivrl
adcb
mov
add
scas
mov
or
jle
add
jmp
sbb
mov
leave
mov
xor
pop
push
add
sbb
fcompl
enter
fs
dec
sbb
push
inc
int
sbb
push
mov
mov
lock
inc
rorb
jecxz
out
adcl
lods
and
mov
std
add
mov
pop
xor
xchg
adc
dec
jle
gs
mov
jns
cli
adc
inc
xchg
pop
adc
add
sbb
ret
sbb
loope
or
and
mov
call
ljmp
scas
mov
inc
in
jns
decl
sbb
fstpt
ficompl
lret
mov
rcrl
push
mov
sub
ficoms
loopne
js
xor
lahf
dec
popa
adcb
sbb
ficoms
fistps
nop
push
cmp
aas
mov
and
bound
jmp
js
aaa
push
int
and
cmp
insb
jnp
outsl
jnp
push
imulb
aad
xchg
lock
and
sti
and
ret
mov
dec
orb
sub
xor
mov
add
js
push
cmp
aas
jo
mov
jnp
std
das
mov
sarb
fwait
xor
repnz
std
inc
loop
push
les
sub
add
mov
mov
inc
sub
mov
mov
sbb
xchg
xlat
es
mov
fs
ds
jae
lret
cmp
pop
xchg
and
and
repnz
jo
call
sbb
and
add
sub
cwtl
repnz
or
adc
and
stc
push
xor
into
das
jmp
push
mov
dec
pushf
and
lods
push
sub
jmp
or
and
rol
cltd
test
shll
pop
int3
sbb
inc
scas
xchg
scas
dec
scas
mov
sbb
loopne
ret
flds
pop
add
notb
pop
inc
pop
xor
stos
enter
push
pop
pop
adc
push
push
sbb
adc
push
popf
jecxz
or
aas
xchg
inc
xor
pop
js
sub
loop
sub
and
fwait
out
mov
and
cmp
fsubrl
imul
sub
leave
cltd
cmc
lea
scas
jnp
push
sub
daa
push
in
fisttps
daa
test
dec
daa
sarb
pushf
ds
and
mov
movsb
addr16
pusha
pop
fs
sti
cwtl
cmc
xchg
pop
dec
inc
dec
push
xchg
xor
js
rorb
repz
lret
stos
xchg
cld
mov
daa
test
mov
orl
mov
aas
inc
andb
scas
jo
daa
sub
call
xor
es
or
loope
mov
in
dec
int
call
fdivr
jbe
xchg
push
outsb
jno
mov
cmpsl
push
cmpl
fs
mov
or
stc
inc
mov
xchg
xchg
sti
sub
jne
pop
out
pop
insl
mov
les
mov
insl
iret
mov
movsl
pushf
jbe
arpl
lret
dec
shr
dec
fistpl
lcall
jmp
arpl
test
out
adc
bound
pop
or
sub
xor
and
incl
roll
ret
and
mov
adc
dec
mov
cwtl
xor
mov
push
xor
dec
nop
rol
cmp
roll
fwait
adc
xor
adc
gs
sbb
jne
jno
add
movsb
dec
xchg
aam
divb
xchg
sti
adc
pop
je
adc
in
sub
xchg
dec
mov
lret
cmp
mov
add
jne
and
clc
mov
mov
xchg
loop
in
add
clc
mov
out
dec
mov
test
shll
push
ret
xchg
cs
cld
inc
aad
sti
vprotq
imul
fcoms
cli
push
cwtl
subl
adc
pop
inc
bound
adc
jo
sub
fcmovne
xchg
sub
jb
cli
add
popf
inc
or
jge
push
aas
fdivrl
dec
fnstenv
mov
or
push
pop
xor
dec
mov
jne
enter
andl
gs
hlt
addl
ja
pop
aam
or
pop
jo
sarl
and
sub
pop
push
mov
mov
and
js
int3
jle
ljmp
inc
add
cli
enter
decl
fwait
in
mov
popf
mov
jge
sub
aaa
mov
pop
out
dec
push
or
nop
push
cmp
cli
cltd
adc
dec
xchg
jns
out
mov
and
adc
and
mov
repz
in
mov
jg
dec
mov
push
mov
sub
inc
mov
outsb
cld
call
ljmp
in
lahf
inc
push
xchg
jp
fidivrl
out
and
push
sub
pop
sbb
xchg
stc
dec
stos
negl
jb
insb
cmpsl
aam
flds
sub
test
jbe
ds
ret
outsb
push
js
mov
inc
stos
sbb
pop
repnz
mov
add
je
sbb
sbb
mov
jae
xchg
js
ss
add
aas
jecxz
rsqrtps
pop
stc
fidivrs
push
int3
arpl
div
xor
lret
push
cmp
pushf
mov
push
and
mov
jg
sbb
cmp
ds
int3
sbb
les
adc
dec
jecxz
flds
mov
add
imul
fst
jb
aas
add
in
stos
xchg
xchg
sahf
or
lds
ds
and
adc
decb
insb
mov
je
call
pop
sarb
mov
pop
or
aam
cltd
mov
ret
gs
mov
push
subl
shr
lahf
iret
hlt
mov
push
test
or
pop
xchg
leave
leave
mov
push
aam
sbb
lock
test
adc
fs
int
int
shlb
sbb
sub
fnstenv
nop
xchg
stc
mov
add
xchg
inc
stos
lock
or
and
xchg
pop
jmp
pop
sub
sub
lods
adc
shl
sti
pushf
cmp
mov
jg
or
mov
cs
inc
push
call
dec
mov
stc
fwait
out
insb
inc
jae
push
xor
jns
daa
jo
and
pop
cmpsb
ficoml
cmp
iret
sbb
add
rclb
mov
idiv
loopne
movsb
lret
ljmp
push
outsl
es
push
movsb
cmpsl
lods
pop
ret
inc
lods
cmp
xchg
push
cmp
and
outsb
lds
or
inc
and
pop
and
mov
inc
cmpsb
cmpsb
or
mov
daa
jno
push
cmp
jbe
mov
popf
insl
sarl
outsl
push
in
xrelease
cs
cltd
add
lods
fisttpll
lock
lods
test
cmp
and
out
cmc
or
arpl
aad
stos
mov
test
stc
inc
ret
shlb
clc
mov
out
push
adc
test
loope
mov
in
ret
int
sub
addr16
and
mov
cs
call
scas
popf
pop
bound
adc
mov
xor
inc
mov
inc
sbb
stos
test
push
adc
adc
std
and
ja
iret
fchs
xchg
dec
fstpt
shlb
jno
add
inc
pop
jae
jno
pop
cmp
mov
sub
xchg
adc
aad
test
sbb
pop
es
inc
lea
mov
rorl
pop
mov
shl
mov
jnp
cmp
lds
push
jecxz
adc
cmp
into
or
adc
dec
fwait
dec
es
sub
ds
mov
adc
fadds
mov
push
inc
sbb
icebp
jg
sub
jle
xchg
sub
inc
bound
mov
jae
je
jle
test
out
popa
test
and
test
bound
iret
aad
inc
call
push
pop
loope
fcoms
mov
icebp
mov
jl
mov
scas
adc
fisttpl
inc
jno
sahf
push
ret
aaa
xchg
adc
cmp
pop
aas
fwait
imul
sub
jge
and
into
mov
mov
push
inc
movsb
enter
or
mov
clc
das
jae
and
clc
arpl
or
jbe
cld
shl
cltd
push
jg
pop
arpl
mov
fcmovnb
jmp
jecxz
mov
add
insl
les
in
inc
int3
rdpmc
xchg
fdivrl
mov
mov
shld
sub
shll
pop
jmp
in
mov
inc
mov
dec
inc
push
inc
pop
xchg
out
cmc
inc
repz
add
pop
pop
xchg
mov
xor
loopne
lock
pop
jle
cmp
lret
adc
insb
in
adc
sub
or
cmp
rclb
mov
cmp
adc
push
ja
sub
jp
cs
sbb
mov
dec
scas
mov
jae
incl
cmpsl
adc
adcl
or
xchg
roll
pop
rol
pop
cmp
test
sbb
inc
pop
clc
push
testb
or
mov
sub
push
push
cmp
ficoml
call
rcl
push
cmp
pop
push
or
cli
outsb
push
nop
fcoms
push
pusha
dec
jo
mov
pop
std
mov
aaa
fwait
pop
mov
xchg
jmp
mov
mov
mov
aam
and
in
fmull
push
and
mov
or
xchg
mov
add
add
insl
insl
aam
push
int
jb
cmp
xchg
or
push
lret
jp
sub
rorl
jle
shrb
inc
fdivs
mov
test
dec
sub
int3
mov
jmp
lret
inc
mov
sub
pop
int
movsl
das
add
jl
inc
xchg
sbb
int3
pop
push
inc
sub
insl
out
das
adc
fbstp
mov
pop
pop
test
out
or
mov
popf
dec
testb
sub
sub
sub
jg
mov
mov
cmp
aas
dec
outsl
fcomp
ficoms
jbe
inc
add
adc
cli
cmp
xchg
sub
xchg
push
cltd
sub
adc
popf
in
push
sub
ds
sar
and
push
push
mov
inc
inc
in
mov
pusha
ds
sub
xor
stos
mov
jl
xor
xor
data16
pushf
xchg
push
dec
in
sub
das
data16
pop
pop
fcmovbe
mov
into
add
dec
mov
inc
sub
sti
mov
sub
mov
inc
dec
push
pop
cld
fldt
stos
ret
or
shr
mov
sbb
xor
out
or
in
sub
pusha
cmp
mov
shl
and
inc
and
lds
mov
push
sbb
int3
mov
push
mov
movsb
lods
xchg
ds
imul
and
outsl
mov
pushf
xor
test
in
sub
mov
or
nop
add
mov
fwait
pop
xor
test
jmp
stos
cmpsb
popa
inc
cmp
dec
cmp
call
mov
lock
mov
faddl
adc
mov
idiv
inc
push
insb
jmp
jae
mov
jmp
pop
enter
fstpl
xorb
aaa
enter
cmp
xor
and
cmp
xor
lret
jae
nop
cmpsb
in
cltd
inc
mulb
fisubrl
stos
repz
xchg
cmp
sub
jbe
jmp
or
ljmp
scas
xchg
test
cli
sbb
pusha
adc
stc
mov
add
stc
outsb
test
out
ljmp
enter
jnp
mov
jo
idivl
into
ficomps
xchg
inc
and
addr16
mov
add
repnz
and
stc
mov
sbbl
mov
mov
cmp
imul
inc
loopne
leave
jmp
out
mov
sub
notb
inc
xor
mov
sub
mov
ja
mov
and
int
es
mov
push
stc
push
mov
movb
gs
mov
imul
pop
scas
or
adc
fmulp
leave
push
mov
lcall
jge
sbb
xor
xor
xchg
outsl
push
mov
fbstp
jnp
lock
push
ds
pop
sbb
adc
cmpl
push
aas
pop
cmp
or
jno
push
mov
stos
adc
fistps
lcall
pusha
inc
and
cmp
aaa
pop
pop
sbb
mov
insb
xlat
shll
push
fs
push
sti
mov
out
aam
pop
add
pop
rol
pop
jle
jnp
call
aas
sbb
mov
leave
mov
mov
fldl
rcrl
mov
jo
cli
lret
mov
adc
insb
ja
push
or
jge
imul
test
cmp
cmpsl
insb
or
dec
or
insl
scas
jecxz
ret
jp
fadds
xor
xlat
notl
mov
jb
xor
or
ds
stc
in
push
xchg
fwait
xchg
sahf
sbb
andb
mov
jb
in
and
lds
mov
mov
lods
out
dec
sahf
pop
pop
ficoml
cmp
loope
mov
roll
mov
mov
out
add
lahf
into
into
in
xor
loope
ja
sbb
pop
ja
mov
pop
negl
jne
cmp
cmp
ljmp
add
out
data16
push
push
data16
call
mov
popa
sub
mov
mov
and
repnz
jnp
cmp
outsl
mov
je
add
mov
xchg
arpl
mov
fnstsw
adc
fbld
sub
out
lock
in
pop
lods
lds
push
adc
cwtl
es
adc
lahf
fimull
add
adc
gs
adc
imul
imul
push
xor
repnz
mul
push
mov
loope
lret
mov
test
ret
test
push
popa
arpl
fdivr
dec
ja
loop
orl
jo
stc
aam
into
mulb
inc
daa
lods
stos
cmpsl
mov
fisttps
in
jl
inc
push
adcl
and
dec
imul
jae
fmuls
repnz
cmp
dec
push
int
jno
enter
jg
dec
push
cld
stos
insl
xorb
data16
sbb
cmova
pop
add
cmpb
or
fwait
adcb
jmp
stc
push
in
hlt
sub
scas
or
cmpsb
jge
push
cltd
and
mov
rsm
mov
or
inc
xor
loope
mov
mov
aad
cmc
cmpsb
pop
loop
je
cmpsb
jnp
mov
std
icebp
mov
pop
mov
push
dec
rol
std
in
sahf
clc
or
mov
pop
pop
inc
insb
sub
sub
pop
jae
fildll
notb
dec
shrb
jmp
jecxz
bound
cmp
inc
push
inc
mov
in
cli
dec
or
add
push
lahf
into
call
mov
jge
cmp
inc
fwait
sub
push
test
sbb
adc
inc
sbb
nop
cmp
jmp
je
loopne
shl
lock
pop
nop
test
lods
das
fimull
aam
out
jg
divb
inc
cmp
std
mov
push
scas
xchg
insl
push
mov
dec
mov
stos
jb
adc
test
sub
sub
cmp
inc
ljmp
adc
push
int3
mov
jl
jno
push
fwait
jbe
jae
lcall
sarl
and
lcall
loopne
test
jnp
mov
xchg
jle
popf
and
pop
insl
clc
mov
cmp
pushf
pop
mov
sbb
jl
rolb
sbb
cmp
clc
dec
orl
xchg
pusha
mov
lods
mov
xchg
imul
and
int
mov
lods
jbe
sbb
ktestw
addl
dec
lret
mov
and
push
cltd
pop
inc
and
icebp
in
outsl
xor
mov
mov
int
mov
lret
xchg
xor
mov
stc
mov
sbb
ds
shr
scas
adc
mov
insb
popa
inc
xchg
fcomps
mov
mov
push
js
sub
int3
aas
jns
fxch
adc
and
adc
jge
jle
mov
or
xor
js
aaa
daa
pop
aaa
jle
dec
pusha
cld
pop
nop
jno
jbe
mov
add
add
notb
sub
and
stc
jmp
sbb
mov
mov
dec
rol
in
rol
xchg
in
stos
nop
adc
push
int
sub
jnp
sub
adcb
and
aas
add
add
lcall
jge
aad
out
lock
dec
or
jmp
ret
push
mov
push
mov
jno
test
pop
pusha
pop
mov
mov
inc
or
add
xchg
pop
sub
incl
movsl
bound
popa
mov
movsl
sbbb
fs
imul
mov
and
xor
cmpl
test
push
push
inc
sub
push
inc
jno
and
jmp
lods
mov
dec
cmp
outsl
pop
or
fyl2xp1
inc
in
dec
and
cmp
leave
jge
mov
push
mov
pop
les
mov
jmp
pop
inc
stc
clc
jae
mov
fsubrl
nop
mov
push
jmp
outsb
push
rorb
adc
push
pop
ret
je
mov
jns
fsts
loope
pushf
cmp
pop
fidivrs
xor
mov
fdiv
aam
jge
jmp
mov
aas
test
movsb
scas
mov
leave
inc
movsl
adc
repz
cmc
mov
push
jae
fidivs
push
xchg
sar
sub
sti
ficompl
dec
pop
push
lea
fbld
xchg
jne
out
mov
andb
imul
bound
sbb
in
inc
jne
and
cmp
xchg
pusha
sub
lret
mov
test
xchg
pop
repnz
or
pop
aas
mov
aam
xlat
jg
mov
test
or
pop
add
mov
mov
or
jecxz
jae
push
mov
jg
push
xchg
outsb
pusha
mov
call
push
lret
xor
subl
outsb
xor
gs
imul
ds
ljmp
fldcw
pop
ds
add
and
mov
mov
cli
idivl
or
mov
adcl
js
and
stos
loope
int
dec
icebp
dec
push
ljmp
jne
xor
mov
push
je
test
movsb
xlat
cmp
jae
sarb
lea
inc
xchg
lcall
add
imul
pop
push
push
ljmp
test
add
and
cmpsl
xchg
inc
mov
sub
push
xchg
mov
popf
fisttpll
adc
aaa
dec
xchg
sub
ljmp
test
cmpsl
mov
or
shrl
insb
mov
push
xor
pop
enter
mov
or
lret
addr16
gs
mov
pop
inc
dec
enter
int
xor
mov
popa
cld
insl
mov
push
pop
fnsave
cmp
aad
xchg
test
rolb
inc
jo
repnz
mov
js
adc
xor
xchg
mov
and
mov
or
jb
shrl
gs
int3
xor
outsb
das
fsubs
sub
sbb
dec
inc
mov
mul
pop
stos
xor
push
enter
xchg
dec
mov
mov
push
mov
test
xor
jb
bound
sar
data16
lods
mov
sub
pusha
sbbl
jg
adc
sbb
shrl
ja
mov
mov
aaa
stos
mov
stos
je
xchg
jno
scas
cmp
ret
fcmovbe
mov
cmpsb
jbe
jle
mov
mov
in
loopne
movsl
popa
cmp
dec
push
xor
lea
cmp
jmp
push
mov
xchg
jg
and
mov
dec
subb
adc
pop
xchg
xor
mov
add
dec
dec
inc
arpl
jno
call
decb
mov
cld
and
rcrl
loop
ret
sub
sbb
addr16
mov
popa
jbe
loop
sahf
add
scas
pop
arpl
jle
inc
nop
ret
cmp
mov
das
mov
dec
xchg
lds
ret
inc
int
les
jno
mov
mov
inc
bswap
or
push
rclb
xchg
lret
inc
xchg
sub
and
adc
divb
mov
in
inc
loopne
gs
adc
movsl
push
adc
xchg
popa
roll
test
or
and
aad
xlat
mov
jecxz
mov
pop
cwtl
idiv
jns
push
stos
test
xchg
adc
sub
sbb
mov
cltd
mov
movl
inc
fiaddl
jmp
xor
dec
push
into
sub
jno
mov
inc
pop
orl
js
dec
mov
movsb
ret
fldt
aad
in
popf
jnp
loopne
cmc
sub
les
aas
fists
sbb
or
mov
xchg
mov
and
xor
add
xchg
loopne
fimull
das
sub
xor
dec
clc
push
pusha
dec
xor
cmp
sub
ss
mov
call
and
lods
sbb
nop
out
jb
xor
jp
repz
xor
cwtl
pop
aas
test
jbe
sbb
call
push
xlat
adc
xlat
mov
hlt
popl
mov
loopne,pt
int
daa
das
mov
pop
daa
call
and
adc
add
jle
shll
dec
int3
js
std
or
mov
adc
fsubs
jl
aas
add
pop
jb
or
mov
in
sub
int
ds
jl
xor
mov
fbld
sub
outsb
ret
mov
jge
aas
jl
gs
movsb
aaa
int
incb
dec
mov
test
push
mov
inc
test
jns
add
cmp
sub
sarb
cmpsb
and
xchg
scas
fwait
inc
push
pop
adc
push
cmp
and
xchg
cmpsl
adc
pop
lcall
adc
xchg
scas
xchg
fdivrl
or
adc
rcl
mov
mov
sub
mov
mov
add
inc
clc
popf
jp
inc
je
aas
jge
inc
negl
cmp
cs
and
sbb
test
rcrb
adcl
push
cltd
fdivl
mov
aaa
cmpsb
flds
push
mov
leave
int3
jae
push
loope
insl
sbb
and
arpl
jno
arpl
add
pop
aam
in
dec
inc
xchg
dec
xchg
jle
mov
inc
testb
ret
fistpll
leave
and
in
mov
push
rcl
push
cmp
subb
cwtl
jo
es
dec
pop
add
xor
mov
lret
push
add
addr16
lock
pop
sub
into
sub
or
jp
fstps
data16
add
add
adc
imul
lahf
cmp
mov
adc
cmp
insl
cld
cli
sub
mov
sub
mov
or
out
outsl
pop
and
js
out
inc
mov
out
ret
and
pop
out
hlt
adc
lret
dec
cmc
test
push
xlat
cmp
jnp
ds
test
add
testb
test
sbb
gs
cmp
mov
add
daa
inc
or
xchg
in
add
scas
mov
mov
mov
mov
in
or
pop
mov
fldt
adc
mov
aam
cmp
push
es
mov
jge
and
popa
and
sti
cmp
stos
push
pop
or
sub
add
iret
outsb
mov
mov
pop
push
inc
or
and
int
or
jo
mov
stc
sbb
push
lret
outsl
hlt
popa
ja
xor
shll
mov
pop
aam
push
push
dec
outsb
popa
mov
dec
iret
sub
repnz
in
lods
pusha
out
shrb
xchg
push
pusha
push
pop
jnp
int
outsb
loop
scas
fmull
jg
add
sti
jns
jmp
into
enter
out
xor
inc
test
and
adc
push
test
enter
mov
jl
xchg
es
lcall
jns
lods
adc
pusha
mov
mov
add
sbb
test
jb
fidivrs
or
gs
hlt
sahf
jns
sub
xor
repz
repz
int
int
cmpsl
push
mov
aas
mov
out
jmp
shrb
jbe
add
sbb
hlt
shlb
jb
sub
inc
addr16
push
jge
inc
add
ja
add
pop
lods
fidivs
jmp
mov
dec
popf
clc
fidivrl
inc
sbb
aad
xchg
inc
test
push
es
pop
mov
scas
mov
xchg
lds
cmp
sbb
pop
push
mov
mov
xchg
pop
inc
push
sbb
dec
xchg
and
xchg
sar
xchg
jge
imul
arpl
pop
loope
lahf
adc
cmp
jmp
lods
stc
jbe
mov
xchg
in
xor
fcmovnbe
shl
mov
jecxz
cmpsb
push
mov
arpl
out
mov
jmp
arpl
jb
rol
sub
lock
inc
cmp
mov
rcr
adc
mov
sbb
jae
mov
push
in
rcrb
clc
jo
xor
jl
hlt
test
cwtl
orl
mov
jmp
iret
arpl
pop
out
pop
or
cmpsb
mov
dec
add
loopne
je
outsb
out
and
mov
movaps
fcomip
bound
int3
sub
xchg
mov
jno
inc
and
mov
sti
mov
sub
jbe
push
xorb
adc
dec
adc
xor
or
test
mov
aaa
cli
andb
addb
ret
jno
push
addr16
mov
xor
pop
mov
jbe
mov
and
int3
test
into
arpl
mov
pop
inc
adc
outsb
int
mov
into
in
push
mov
mov
gs
mov
push
jae
loope
or
pop
inc
in
loopew
cmp
xchg
lock
or
mov
out
add
ret
pop
xchg
addb
rclb
push
cmp
mov
int
es
pop
lahf
mov
int
test
jle
insl
pushf
mov
das
cmpsb
inc
subb
jp
pop
xor
xor
lods
jae
push
test
xor
lods
xchg
and
push
ds
add
dec
rcr
xchg
gs
dec
inc
rcrb
push
inc
stos
mov
lods
mov
cli
add
add
jmp
stos
mov
test
sub
cwtl
shlb
inc
js
cmp
les
mov
cmp
or
andl
jbe
adc
aaa
dec
pop
pusha
jbe
cld
mov
or
fidivrs
cmpsl
xchg
push
mov
mov
outsl
lcall
pop
pop
adc
lods
rolb
pushf
sub
ljmp
mov
push
js
mov
and
or
xchg
orb
adc
dec
push
jne
mov
xchg
stos
sub
mov
scas
ficoml
sbb
imul
roll
movsl
sahf
rclb
sbb
xor
lds
mov
or
imul
shrl
psrlq
mov
call
aas
adc
pop
mov
pop
or
dec
sub
icebp
ljmp
dec
sub
add
jl
jg
ror
pop
iret
xchg
decl
fistpll
repz
test
mov
lcall
es
mov
inc
or
lcall
xor
mov
jnp
sbb
push
sub
push
xchg
add
mov
or
insb
and
adc
out
lock
jo
mov
jl
cwtl
cmc
pop
add
mov
addr16
adc
mov
popf
inc
call
xlat
or
push
pop
inc
scas
shl
sub
jl
mov
cmc
mov
push
in
xchg
push
pop
test
mov
cli
cmpsb
fldenv
call
xchg
cmp
pop
or
fnstsw
xlat
pop
in
scas
sbb
jp
out
ljmp
cmp
int3
scas
test
xchg
sbb
cmp
jae
fs
call
movsl
xor
data16
xchg
in
out
int
jbe
or
xchg
pop
nop
lock
fs
in
push
mov
push
xor
ja
leave
pop
stos
mov
cmp
xchg
cwtl
or
pop
push
xchg
dec
int3
add
xorb
loop
cs
fisttps
xchg
sti
nop
sbb
xchg
xchg
mov
loope
out
clc
cmp
sti
cmp
pop
in
pop
mov
pop
daa
jns
cmc
dec
lods
lods
mov
mov
arpl
jbe
sbb
mov
mov
sar
gs
sbb
ss
fistpll
push
mov
subl
pop
sarl
data16
dec
clc
into
or
cmpsl
xchg
shlb
xchg
cmp
or
or
cmp
jg
mov
mov
test
dec
xchg
jp
lcall
mov
cld
pop
imul
cli
faddp
push
push
xorl
push
push
sub
or
daa
rclb
test
not
outsb
adc
movsl
dec
xlat
mov
in
mov
sbbl
pop
mov
js
ret
enter
jl
xchg
jle
fs
outsb
adc
test
fnstcw
xchg
lods
nop
test
fidivrl
les
push
and
mov
ror
imul
stos
fwait
inc
or
mov
mov
loope
add
cmpsb
ror
movb
rclb
pop
jbe
xchg
mov
pop
push
nop
sbb
add
lods
adc
in
push
enter
iret
jg,pt
out
imul
mov
mov
inc
jle
in
outsb
sar
jge
pop
test
sub
or
cmp
xchg
pop
pop
push
divl
sbb
pop
fsubl
jg
arpl
sbb
push
scas
leave
fstps
push
out
push
jle
mov
cmp
adc
out
push
pop
js
mov
adc
std
outsb
xchg
xchg
pop
add
or
sbb
es
mov
and
add
cmp
dec
mov
jns
inc
loop
lods
invd
in
lods
push
lret
push
mov
leave
xchg
hlt
arpl
adc
pushf
imul
dec
push
cltd
addr16
sub
and
xlat
aad
mov
movsl
ret
jno
push
scas
and
mov
aad
cwtl
icebp
addr16
xchg
cli
mov
cli
ss
cmp
cmp
dec
pushf
lcall
push
or
cmp
add
sbb
cmp
pop
push
data16
xchg
push
arpl
and
je
inc
jno
lds
dec
stc
sub
xchg
pop
in
daa
fdivrs
jl
mov
mov
mov
lret
scas
pop
mov
push
cmp
jge
inc
inc
dec
push
addb
mov
je
cltd
dec
cmp
js
cltd
rorb
xchg
push
aas
push
inc
or
jl
out
cmp
sub
adc
lahf
or
add
popf
adc
imul
mov
loopne
cli
cmp
mov
inc
cld
xchg
arpl
setbe
jne
roll
out
iret
xchg
mov
das
subb
cwtl
repnz
push
jg
js
dec
push
sarl
add
pop
push
xlat
pushf
cli
das
scas
mov
adc
or
in
mov
mov
lret
sub
xor
mov
cmc
pop
push
lods
mov
dec
fs
xlat
dec
das
xor
or
jle
sbb
pop
ret
in
pop
out
sub
inc
cs
mov
or
lahf
loope
fwait
iret
pushf
cmc
inc
push
xor
cmc
jp
push
pop
mov
sub
adc
xor
fiaddl
xchg
pop
les
repnz
sub
push
push
inc
xchg
cltd
loopne
test
sub
inc
loope
pop
mov
mov
repz
arpl
xchg
add
jmp
inc
repnz
mov
in
push
adc
push
push
in
mov
inc
sti
into
xor
test
xchg
lret
clc
xor
in
mov
mov
lock
mov
ja
jno
lahf
adc
aad
mov
pop
push
in
mov
add
sub
ljmp
sbb
ret
loope
test
enter
push
fsubr
push
sub
cmpsb
push
lret
sub
push
call
ss
in
sahf
add
jno
mov
imul
add
mov
les
std
push
add
mov
xor
sahf
push
daa
or
fdivs
push
mov
xor
xor
stos
push
adc
or
jno
in
and
mov
or
stos
aad
pusha
icebp
sbb
push
mov
adc
scas
in
out
testb
pop
es
inc
mov
imul
addl
jns
faddl
nop
push
insl
cmp
pop
xor
mov
cwtl
cs
mov
mov
adc
and
mov
sbb
repnz
pusha
mov
loopne
jmp
hlt
scas
loopne
es
mov
adc
stos
and
popf
cltd
arpl
xchg
adc
add
mov
and
dec
cmp
in
jnp
or
mov
pop
out
cmp
cmp
xchg
xor
fcmove
ljmp
mov
out
fistps
mov
aas
cmp
aad
mov
mov
in
fidivrl
or
mov
jnp
outsb
arpl
lcall
mov
cltd
daa
pop
pop
xlat
or
adc
jo
push
dec
cmp
pop
daa
xor
das
das
jg
stc
cmp
aas
inc
std
inc
xchg
or
pop
test
aad
fs
push
daa
push
mov
sub
or
out
shr
mov
inc
push
adc
mov
lock
roll
cmp
in
sahf
pop
arpl
aad
push
das
or
add
scas
jno
jo
das
sub
insl
sbb
bound
mov
mov
or
enter
xchg
ficomps
in
mov
cltd
fwait
xor
cmp
or
jecxz
mov
sti
sti
and
adcb
adc
mov
shl
jmp
pop
cmpsb
adc
rorl
fisubrl
cmpb
clc
xor
aam
dec
popa
xchg
mov
adc
push
rol
test
add
mov
cmc
jbe
xchg
jg
popf
dec
mov
movsb
les
in
adc
mov
dec
stos
jb
xor
sbb
lret
jno
int3
pop
cli
push
lret
loope
mov
test
int
cmp
aas
pop
pop
xchg
xchg
inc
xchg
xchg
in
lock
ja
and
lret
ret
ljmp
pop
xor
jle
scas
or
adc
rcrl
pop
mov
or
lock
scas
mov
xchg
ret
mov
lahf
into
test
and
xor
subb
add
mov
pop
jl
ja,pt
stc
sbb
out
push
mov
sarb
xor
mov
inc
fistpl
test
and
push
loope
fwait
jecxz
sub
imul
push
lock
jbe
jle
cli
mov
xor
pusha
jle
dec
cwtl
push
adc
sbb
xchg
out
xor
lds
leave
add
fidivrs
sub
jp
mov
lcall
int3
es
ficoms
loope
mov
ljmp
jecxz
das
adc
push
rcrl
movups
js
mov
jecxz
mov
push
mov
test
adc
and
mov
mov
imul
xchg
adc
pop
ret
jno
lcall
add
or
out
add
pop
test
daa
in
xchg
aam
outsb
jl
movsb
data16
fs
cld
mov
sbb
rorb
jae
jge
jg
mov
sahf
dec
stos
push
or
jge
mov
cmc
nop
shll
pop
add
mov
cmp
rclb
push
nop
mov
inc
fmull
or
push
mov
push
loope
sub
add
loopne,pt
sti
fildl
orb
aad
push
sub
nop
lahf
pusha
pop
cmpl
test
sub
xchg
sbb
jnp
scas
sbb
fmull
add
and
in
ja
inc
jno
xchg
pusha
mov
jnp
or
xchg
imul
ss
pop
mov
lock
clc
ret
push
or
adc
jno
sbb
loope
cmp
daa
pop
mov
and
pop
mov
xchg
mov
sub
ja
rcl
jge
loope
jae
jae
or
pop
fstpl
jmp
faddp
imul
pop
cwtl
rcrl
hlt
lds
iret
inc
hlt
jns
cmpsl
rcrb
inc
clc
cmp
and
sarl
adcl
inc
vpaddb
jns
cwtl
clc
and
mov
cli
inc
arpl
in
xor
add
loop
sarl
add
xchg
out
loop
frstpm(287
hlt
push
cmp
rorb
mov
jge
lea
push
dec
cmpsb
call
cli
cwtl
cli
lods
pop
mov
xor
lcall
lock
jae
iret
int
stos
sub
pushf
jno
test
insl
xor
ja
jns
aam
sub
pop
push
hlt
add
sbb
and
dec
in
inc
adc
add
mov
mov
shl
in
lcall
je
lret
out
roll
mov
adc
sub
iret
pop
imul
cmc
pop
sub
out
jo
stos
push
outsl
or
mov
push
mov
incl
mov
jle
add
in
decl
mov
je
push
dec
mov
lods
popf
sbb
test
sub
arpl
call
xor
mov
test
sub
leave
cmp
jne
aad
arpl
pop
pop
shlb
jp
cmp
xorl
sarb
or
mov
fs
mov
sub
adc
fmul
mov
or
jns
fdiv
loope
aam
iret
std
mov
mov
sub
pop
mov
test
and
jns
mov
paddusw
scas
jecxz
mov
mov
xor
sbb
pop
aad
add
dec
xchg
sbbb
rol
sub
fcmovnbe
sbb
roll
arpl
fidivrl
negb
adc
loope
sbb
gs
ss
call
push
dec
jmp
jns
icebp
std
fldt
ja
sub
int
ret
xor
xlat
nop
jecxz
mov
fistpl
inc
test
xor
ljmp
ror
test
mov
adc
scas
das
loopne
les
daa
outsl
shl
stos
enter
insb
add
jp
pushf
sub
sub
mov
call
mov
fsubp
pop
mov
mov
or
add
inc
mov
dec
dec
mov
push
addr16
int
fisttps
outsb
xchg
xchg
mov
out
inc
movsl
inc
lret
jle
cmp
lods
xchg
ds
cmp
mov
xchg
adc
or
dec
imul
clc
jmp
adc
mov
repnz
test
test
cs
shrl
add
jle,pn
mov
shrl
fsubp
fldl
sbb
sarl
repz
jl
xlat
loop
repz
jl
xlat
loop
repz
jl
xlat
loop
repz
jl
xlat
loop
repz
jl
xlat
loop
repz
jl
xlat
loop
repz
jl
xlat
loop
repz
jl
xlat
loop
repz
jl
xlat
loop
mov
inc
imull
add
sar
sub
dec
call
test
xlat
sbb
add
pop
mov
push
mov
fstl
jne
xlat
push
pop
out
sub
popf
leave
in
xor
shll
push
insb
mov
aaa
int
sub
xor
xor
sahf
lods
mov
jbe
jl
mov
add
pop
cli
fwait
sbb
scas
lods
movsl
cmpsb
lcall
rorb
jge
lcall
pop
je
and
add
dec
imul
sarb
scas
cli
loop
repnz
mov
and
andb
aas
xor
push
dec
int3
xchg
ficoml
ss
add
ss
add
shlb
stc
call
xchg
mov
xchg
sbb
jle
in
xor
jns
pop
aad
mov
fcoml
lods
xor
and
scas
mov
sub
pop
rcrl
or
fs
cmp
test
mov
mov
mov
or
sbb
xor
jg
adc
adc
fwait
xor
rorl
lock
jmp
sub
push
aaa
sub
roll
cmp
xchg
mov
sub
orl
rcl
xchg
cmp
in
dec
sar
push
rcr
lock
jb
inc
push
rcr
sbb
int
pop
scas
push
fwait
push
inc
scas
outsl
mov
adc
ffree
xor
sarb
jb
es
jle
mov
outsb
mov
iret
dec
add
sarl
sbb
sub
sub
mov
xchg
in
mov
rol
loope
lahf
inc
ljmp
mov
jmp
xor
pop
lods
pop
mov
fmul
imul
and
rolb
int
fldt
adc
out
or
iret
leave
iret
out
xor
fs
ds
or
bound
xchg
or
pop
cmp
mov
mov
mov
jne
sbb
pop
mov
movsbl
out
aas
or
cs
mov
repnz
and
inc
push
or
jmp
push
push
ror
sbbl
aaa
cmpsl
jmp
cmpsl
arpl
adc
push
jae
push
push
sahf
subb
scas
cmp
mov
add
pop
mov
out
daa
repz
xor
fstpl
lock
ficompl
out
daa
mov
mov
arpl
push
mov
addb
and
sub
xchg
add
or
inc
out
aam
in
popa
test
jne
popf
sbb
and
mov
mov
call
scas
ja
and
lods
lcall
mov
mov
fsubrs
push
cmp
data16
push
out
test
jg
xor
add
inc
xchg
sub
les
rclb
mov
push
lcall
aad
jb
shl
sub
and
xor
les
push
xlat
sub
sti
dec
lods
or
stc
and
inc
xchg
nop
xchg
mov
insb
pop
xchg
iret
add
sbbb
jecxz
out
stos
cmp
pusha
jle
dec
outsl
push
mov
mov
push
fistpl
ds
adc
xor
lock
jo
and
movsl
ret
out
and
jmp
in
lcall
sbb
cld
stos
imul
popa
pop
cmp
pop
dec
test
sbb
mov
pushl
push
and
leave
ret
pop
popf
insb
out
iret
ljmp
push
movsb
pop
stc
cmpsb
shll
push
fisubrs
data16
jmp
dec
fwait
cmc
jbe,pt
cmpsl
sbb
inc
mov
or
cld
add
ror
or
and
je
inc
jl
loop
pusha
in
into
in
jae
pop
roll
sbb
imul
and
imul
outsl
cli
cmp
inc
mov
in
bound
cmp
push
mov
jg
mov
cmp
mov
pusha
hlt
add
add
roll
stc
sbb
fdivrs
push
pop
fadds
shll
fldt
outsl
aaa
xchg
inc
lock
jle
cs
add
lods
int
in
xchg
clc
pop
push
lcall
ds
adc
mov
jb
xchg
mov
adc
jg
stos
cmc
sbb
inc
inc
cld
je
sub
pop
dec
imul
pushf
push
aam
nop
mov
in
fidivrs
xor
in
icebp
imul
imul
dec
jg
adc
xor
icebp
insb
pop
inc
adc
xchg
pop
shrb
ja
sub
push
pop
test
xor
ds
mov
lahf
xchg
jecxz
mov
and
sbb
test
push
dec
pop
jl
mov
loopne
adc
push
icebp
pop
mov
adc
pop
mov
ret
add
lods
pop
sub
jge
out
ret
pop
flds
lods
fildl
adc
xchg
mov
adc
jle
bswap
sarb
add
scas
pop
push
push
pop
jnp
jp
push
ret
adc
mov
pop
arpl
mov
movsb
cmp
cmp
mov
xchg
cmp
dec
lods
mov
dec
sbb
xchg
popa
jl
xchg
or
into
xchg
adc
or
cwtl
test
adc
out
rclb
in
jp
cmc
sub
mov
popf
cmp
sub
popa
push
cwtl
mov
mov
sub
insb
push
jle
mov
punpckldq
nop
jmp
jno
sbb
xchg
xchg
mov
xchg
cmc
mov
popf
aam
push
mov
out
out
cmp
adc
int
jae
sub
pop
cmpsb
aam
jmp
jne
push
and
jb
fistpll
mov
sbb
mov
or
mov
in
xchg
xchg
cmp
iret
sbb
dec
jmp
fbstp
xchg
ds
into
adc
mov
cmc
test
stos
jle
mov
xchg
lds
ret
daa
pusha
or
jg
sub
jl
fcmovnu
xor
pushf
inc
sub
push
cmp
lahf
add
mov
lahf
rorl
mov
out
push
int3
mov
xchg
inc
jge
adc
pop
ret
xchg
pop
push
std
mov
nop
into
popf
cmp
rolb
fadd
mov
movb
sti
leave
imul
cld
xchg
sbb
nop
in
clc
sti
insl
cmp
adc
loopne
pop
xorl
mov
sti
cmpsl
je
fisttpll
lcall
adc
imul
mov
ja
dec
xchg
sbb
jg
test
js
push
aaa
sti
xchg
mov
ja
mov
adc
xchg
inc
sbb
adc
into
js
lods
xchg
test
jno
push
dec
sahf
stc
adc
lret
inc
mov
ljmp
pushf
xchg
ljmp
push
jle
in
cs
jbe
push
jg
out
add
lds
jae
push
dec
data16
ret
ds
gs
mov
inc
fcom
out
pop
notb
in
jno
lret
xchg
mov
sub
jb
mov
in
mov
and
dec
xlat
negb
sbb
das
xchg
push
sub
pop
inc
adc
inc
js
cmpsl
test
xchg
jo
loop
mov
mov
addr16
cmc
and
push
sahf
enter
jge
adc
jle
into
mov
hlt
pop
icebp
add
mov
xor
shlb
push
adc
cmp
ret
mov
push
pushf
lods
scas
bound
fldl
lods
push
std
in
mov
test
mov
and
xor
dec
popa
sbb
rcrl
in
push
and
je
stos
rcrl
pop
lcall
movsb
aad
sub
cwtl
leave
mov
sbb
and
cld
sub
cmp
sbb
cmpsb
mov
in
rolb
xchg
in
sub
pop
test
push
push
data16
lret
push
fistpll
cmp
mov
mov
int
mov
fcoms
repz
int3
add
bnd
les
cmp
test
sarl
adc
sub
push
mov
popf
mov
lahf
xchg
pop
pushf
sbb
mov
xor
stos
sub
push
std
scas
add
sbb
lcall
adc
shrd
test
iret
std
mov
jne
pop
sub
push
mov
cmpsb
mov
cmp
imul
jbe
pop
jp
test
mov
add
mov
xor
je
test
xlat
stc
ffreep
fisttpll
sti
mov
lock
iret
push
cmp
fldenv
dec
jp
add
push
imul
ret
add
xor
das
maskmovq
divl
push
mov
inc
mov
pop
imul
sbb
push
repnz
shlb
dec
mov
repz
pop
jmp
mov
jg
outsl
dec
daa
loop
inc
add
and
bound
sub
data16
in
adc
imul
les
sub
mov
in
lea
mov
aam
push
and
mov
pop
push
icebp
sahf
je
sbb
call
shll
and
iret
sbb
pop
add
mov
lret
inc
call
xchg
pop
sbb
xchg
xlat
xor
les
pop
dec
pop
fnstsw
jo
mov
push
sub
mov
mov
mov
ja
or
jge
aam
push
dec
imul
loope
test
sub
cli
jne
sub
pop
imul
mov
jne
out
push
lahf
outsl
stos
lahf
pop
mov
rorl
cld
stos
cmp
mov
nop
ret
sbb
in
mov
adc
xchg
insl
or
hlt
ss
in
or
std
into
gs
adcb
aas
cmp
leave
out
sbb
xor
je
xchg
add
pmulhw
imul
jg
sub
xchg
outsb
push
int3
mov
movsl
cmc
sub
sarb
enter
adc
mov
loop
movsb
repnz
cmpsb
mov
adc
les
sub
sub
lcall
popa
adc
jl
and
or
xor
pop
dec
mov
push
push
inc
incb
xor
mov
andl
mov
cmp
cltd
imul
outsb
lock
add
push
pop
add
jbe
xor
popf
inc
dec
lahf
or
adc
lds
jns
fcom
or
or
xor
mov
xor
mov
inc
cwtl
in
cs
sub
xor
or
push
mov
out
sbb
dec
lret
nop
and
lret
xchg
push
out
outsl
pop
and
dec
insl
imul
ss
pop
jae
test
cmpb
out
mov
cld
jge
pop
cmp
sbb
mov
pushl
jmp
shrd
insl
xchg
xchg
popf
idivl
mov
pop
pop
mov
jmp
jo
and
rcl
lea
insl
lock
pop
pop
xchg
clc
or
and
cmp
scas
push
lahf
dec
cltd
ja
sarl
mov
dec
xor
mov
mov
adc
inc
inc
pop
cmp
sub
sbb
xor
xchg
popa
daa
adc
pop
lret
xor
outsl
xlat
stc
movsl
mov
cmp
adc
rcr
fsubl
xlat
xor
out
cmp
int3
jno
jo
dec
jge
inc
inc
ret
sbb
xor
push
loop
hlt
roll
and
pop
and
mov
mov
pusha
fadds
pushf
daa
in
mov
mov
sub
add
jae
or
mov
xchg
ja
into
push
or
xchg
push
fbstp
xchg
cltd
pop
inc
inc
js
xor
dec
insl
test
fwait
rcll
jo
push
push
push
pop
fnstenv
or
andb
orl
jo
leave
ficomps
inc
nop
xor
dec
out
cmp
push
xor
jp
jecxz
sbb
mov
nop
mov
inc
aas
test
shlb
ret
fcmovnbe
mov
xchg
jo
mov
dec
pusha
es
lcall
jmp
loop
xchg
pop
repnz
jecxz
add
scas
ds
pop
bound
aam
hlt
icebp
jle
sbb
cli
in
xchg
es
out
stos
std
aam
cwtl
fs
loop
cmp
sbb
std
xchg
push
decl
cmpsl
shl
sub
cwtl
nop
outsl
sbb
pop
sbbl
ret
in
out
adcl
cmp
repz
insl
mov
pop
jb
leave
icebp
bnd
vcomisd
cmp
inc
roll
pop
orl
loopne
pop
push
mov
cmp
aam
mov
not
adc
stos
mov
test
push
fsubrl
sbb
inc
cmpsb
sbb
or
sbb
sub
or
mov
cmp
shrl
xlat
mov
fsubr
push
call
ret
test
sbb
sub
iret
pop
sbb
fwait
dec
cmp
mov
iret
or
sub
ror
fldt
es
lea
pop
ret
dec
mov
cmp
imul
test
pop
inc
pop
cmp
push
adcl
stos
xchg
daa
enter
pop
cmp
mov
arpl
xor
jecxz
xor
sub
cmp
push
loopne
jp
xchg
repnz
data16
stos
addl
shrb
sub
lret
xchg
loopne
cmc
mov
push
xchg
popa
leave
jnp
jne
ss
pusha
or
and
loope
pop
and
xchg
cs
add
fwait
jle
lcall
mov
xor
push
jl
sbb
adc
insb
push
in
xor
sub
es
jne
loop
pop
cmp
sahf
dec
or
push
push
xor
dec
scas
mov
pop
jecxz
in
push
push
sbb
call
out
and
jp
ret
add
scas
das
add
ljmp
jb
nop
add
xlat
ret
dec
mov
cmp
cwtl
pop
pop
mov
shll
movzwl
cld
scas
fadd
push
fistpll
sbb
fwait
fwait
sbb
dec
shrb
fbstp
push
inc
enter
fcoms
xlat
imul
bswap
mov
out
and
shll
into
mov
and
pop
pop
ret
xchg
cmpsl
mov
fwait
daa
std
filds
pop
hlt
pop
mov
pop
movsb
test
mov
inc
in
icebp
test
mov
inc
andb
pop
nop
mov
adc
mov
outsb
imul
adc
xor
inc
cmp
movsl
outsb
inc
lret
push
sahf
pop
or
je
pop
push
xchg
sub
rcrb
jne
jg
sbb
add
dec
pop
addb
stc
in
insb
jne
or
hlt
sub
inc
xlat
lods
or
scas
adc
fmuls
xorb
test
and
daa
mov
loopne
in
cmp
cmpsb
repz
mov
insb
xor
sti
loopne
inc
lods
add
pop
mov
mov
and
mov
or
std
pop
icebp
and
mov
test
dec
add
dec
jg
adc
pop
test
mov
lds
or
add
add
jmp
out
stos
ret
add
cmpsb
movsl
or
dec
gs
movsb
mov
shlb
sti
enter
test
test
push
incb
std
push
mov
rcr
int
pop
jp
and
fnstcw
jns
test
push
xorl
push
pushf
repz
mov
cmp
pushl
dec
pop
orl
cmp
add
ficoms
mov
inc
popa
loopne
loop
stc
pushf
imul
pushf
mov
std
jg
notb
into
add
lcall
jg
cmpsl
push
sar
inc
mov
mov
fwait
je
negb
jo
jne
aas
or
push
and
cmp
pusha
into
popf
arpl
push
cmp
bound
adc
call
or
sub
push
mov
or
pop
pop
rclb
sub
outsl
fs
mov
mov
shlb
sbb
shlb
and
jl
scas
add
into
push
shrl
sub
into
in
mov
loop
xchg
lcall
add
or
roll
push
push
xchg
mov
imul
add
push
cltd
lcall
sbb
jb
push
cmp
inc
xor
xchg
je
aas
lock
repnz
mov
cmp
sub
push
cld
jne
adcb
push
jo
das
test
sti
arpl
popa
ss
cmp
or
add
add
sub
push
insl
jmp
or
sub
sbb
sbb
push
in
or
push
sbb
stos
push
fldenv
jge
push
insb
sbbl
addr16
mov
sub
xchg
and
stos
inc
das
and
cmpl
ret
inc
les
scas
jo
loope
xchg
into
movsb
and
pop
mov
or
xlat
sti
sbb
push
pop
push
sbb
mov
add
pop
repz
cld
cli
push
inc
add
movsb
lret
sbb
fcmovb
fs
jae
adc
stc
movsl
outsl
icebp
xor
sub
or
xchg
pop
stos
subl
shll
movsb
leave
pop
xor
dec
rclb
or
ret
mov
jecxz
es
push
xchg
sub
je
dec
inc
aas
inc
mov
fistpl
daa
aas
xor
out
das
or
dec
rcll
adc
add
dec
push
les
add
cmp
mov
mov
daa
adc
fdivl
xor
lods
in
loopne
cmpsl
xor
pop
dec
jg
sbbb
sub
inc
or
sbb
lds
and
clc
clc
rclb
scas
sbb
addr16
outsb
push
lret
cmc
hlt
into
cld
xor
ss
push
in
adc
iret
jmp
imul
xchg
and
sbb
push
jb
push
fdivrl
pusha
dec
scas
sbb
js
cmc
dec
sub
repz
jg
andb
jne,pt
daa
mov
xchg
mov
jo
pop
es
push
dec
xor
popf
daa
push
iret
shrb
lock
push
xchg
test
cmp
push
je
mov
cmp
mov
repnz
dec
dec
inc
cwtl
sahf
int
or
pop
cmp
mov
in
inc
mov
lds
jle
inc
xchg
push
ja
imul
das
jg
and
inc
out
pop
push
mov
mov
add
std
and
sbbb
xchg
xor
movsl
jmp
pop
into
and
jg
jle
cld
add
jle
adc
enter
pop
sbb
mov
movsb
sbb
stos
call
xchg
sahf
data16
sarl
sbb
loopne
inc
sub
fists
test
pop
mov
mov
mov
in
or
sbb
jns
add
cmp
movsb
ss
test
mov
in
or
ss
hlt
jbe
mov
or
les
push
xor
jecxz
sub
fwait
sbb
adc
faddl
mov
push
jecxz
data16
mov
minps
lret
dec
mov
mov
sbb
lret
add
adcl
sub
jg
mov
adc
iret
pop
and
test
in
mov
dec
dec
lcall
in
pop
aam
sbb
jne
test
arpl
loopne
daa
cmp
jo
mov
xchg
and
or
jb
add
adc
xor
mov
mov
movsb
loopne
xchg
mov
inc
icebp
lret
sub
adc
popl
jno
out
dec
mov
in
push
mov
pusha
test
js
xor
mov
fnstenv
call
adc
jo
dec
cmp
jmp
xchg
rorb
push
je
in
jecxz
rorb
movsl
dec
dec
and
in
cli
and
or
stos
sbb
and
scas
jns
popl
out
pop
adc
inc
dec
mov
fists
pop
ret
loope
shll
cmp
jg
lret
sbb
rol
cmp
mov
pop
cwtl
jne
jp
das
mov
stc
and
mov
sahf
or
pop
add
icebp
pop
fwait
cmp
scas
adc
mov
stc
or
and
add
dec
out
fistl
testl
ss
aas
sub
daa
mov
sub
xor
push
rclb
mov
in
pop
lds
or
add
pushl
test
or
aas
insl
sub
pushf
add
adc
ret
test
xchg
nop
lret
add
inc
jg
addb
jns
or
push
dec
mov
fimuls
lock
dec
and
aam
fisttps
cltd
mov
or
adc
jecxz
loop
pop
iret
dec
das
push
gs
pop
fcom
outsl
xor
repnz
loope
cmp
and
ret
push
jbe
push
push
repz
mov
std
idivb
xchg
adc
cmp
fwait
pusha
inc
jg
imul
mov
pop
mov
push
cltd
aad
mov
rcll
mov
xor
cs
mov
add
mov
das
xchg
xchg
lcall
cmp
push
jno
xlat
movsl
xchg
mov
fwait
inc
cmp
repnz
mov
xorb
jmp
mov
lea
bound
jno
dec
paddw
jns
pop
cmp
adc
inc
in
jbe
aad
lret
adc
adc
in
sahf
out
mov
inc
int
negl
dec
sub
je
out
xchg
insb
js
sbb
mov
mov
ljmp
adc
negb
les
pop
push
in
mov
call
cmp
jb
popf
cwtl
mov
fstps
insl
xchg
scas
sub
xchg
inc
icebp
sub
add
lret
sub
adc
adc
push
mov
mov
es
inc
add
int3
dec
call
movsl
xor
ret
cmp
push
mov
xor
push
ja
or
ss
shl
repnz
lods
fcmovbe
cmpsb
test
sbb
sbb
pop
leave
add
mov
mov
jg
xor
lods
fs
test
aas
sbb
push
mov
cmp
fnstcw
mov
inc
pop
enter
arpl
loop
lods
jae
aaa
adc
dec
dec
pop
inc
icebp
test
mov
repnz
sarl
lcall
mov
movsb
hlt
pop
enter
xor
leave
sub
adcb
out
xor
jl
xor
jne
stc
mov
mov
ret
cmc
xchg
push
push
cmp
sbb
popa
push
add
sbb
subb
jp
xchg
jb
xor
nop
dec
jae
lahf
les
fisttps
dec
xchg
fimull
cmp
pop
mov
ret
sbb
lcall
xor
call
add
stc
popl
push
adc
or
jge
dec
fwait
cmpl
jbe
jl
add
or
push
mov
push
insl
pop
dec
mov
leave
sbb
push
xlat
add
jo
sbb
out
mov
push
sbb
std
and
mov
iret
cs
mov
or
int3
test
hlt
in
cmp
push
inc
push
xchg
inc
ds
cs
stc
into
and
lods
sub
dec
push
push
shll
mov
repnz
dec
sbb
mov
test
mov
inc
imul
jo
fistps
fst
mov
adc
mov
aad
sub
inc
std
dec
push
or
adc
enter
dec
or
mov
es
push
aam
in
dec
adc
xor
hlt
push
jb
stos
scas
dec
dec
xor
or
and
js
push
out
sub
bound
icebp
inc
adc
xor
jmp
dec
sbb
pusha
fdivp
and
mov
fldenv
sahf
jmp
pop
mov
pusha
adc
cld
rcrb
sti
aaa
lret
lahf
pop
xor
es
aad
jp
fwait
sub
cmpsl
jp
inc
stc
shll
mov
rep
popa
iret
xchg
push
nop
mov
or
pusha
pop
cld
or
movsl
insb
mov
in
push
adc
and
dec
rcrb
jne
add
xchg
je
sub
jno
mov
push
outsl
lods
add
xchg
dec
inc
mov
in
mov
fildll
jge
xchg
add
jmp
cmc
outsl
push
dec
cwtl
pushf
cwtl
xor
das
sbb
test
sahf
push
or
or
ret
mov
daa
jno
emms
clc
lret
sub
mov
inc
mov
and
mov
mov
aam
lahf
js
out
inc
into
xor
mov
cmc
pushf
xchg
jmp
push
mov
sbb
sbb
push
and
add
jecxz
or
and
addr16
pushf
cli
adcb
jg
xchg
jae
test
icebp
je
push
mov
jge
addb
rcrb
xlat
insb
inc
mov
rorl
add
insl
lods
or
jbe
jo
sahf
adc
xchg
push
jns
adcb
add
xor
xor
mov
lret
inc
mov
mov
sub
add
adc
outsb
add
cmp
mov
out
ljmp
js
outsl
dec
lea
push
cmp
mov
repz
cmp
lret
and
sbb
popf
jp
int3
jp
adc
jecxz
inc
js
cwtl
dec
repz
xchg
xchg
mov
push
add
mov
cltd
insl
pop
aaa
cmpb
adc
arpl
inc
push
nop
or
sub
sub
mov
push
fwait
jecxz
push
inc
loope
jmp
sub
sbb
aas
shr
fsubrp
jne
adc
jb
push
sbbb
mov
mov
dec
fistps
movsb
std
lcall
jecxz
xor
ljmp
pop
imul
out
xor
scas
cmp
add
adc
imul
sbb
push
dec
xchg
mul
cmp
jmp
add
and
leave
icebp
outsl
mov
lret
push
sbb
mov
arpl
jo
dec
in
rcrb
pop
popa
mov
repnz
jb
int3
xor
and
jg
push
out
hlt
mov
icebp
scas
in
or
ffreep
xchg
test
xlat
inc
cmp
push
rep
out
hlt
addl
sub
sbb
shll
and
pusha
jbe
push
cmp
cltd
pop
xor
stc
jns
out
fwait
jbe
xor
jmp
pop
and
add
cmpsl
mov
pop
mov
andb
lds
lret
jp
inc
icebp
dec
hlt
out
clc
lcall
mov
or
or
stos
sub
cs
data16
inc
fcompl
jl
inc
mov
int3
loop
jmp
andb
roll
jo
mov
es
int
or
in
cs
out
mov
lock
lods
pop
add
ret
sub
movsl
and
ljmp
and
push
dec
lds
sbb
gs
add
cs
mov
pushf
mov
andb
pop
repz
scas
sbb
fsubl
adc
enterw
fmuls
mov
into
negl
pop
mov
adc
ss
aas
popf
xchg
xchg
xchg
adc
insl
bound
inc
jmp
in
lret
jmp
sbb
mov
dec
in
pop
xor
inc
push
cs
mov
lea
xchg
repnz
jmp
andb
pushf
out
and
rclb
addr16
cmp
inc
mov
shrl
sub
jmp
and
lcall
cmpsl
int3
fidivrs
mov
sbb
push
jp
adc
hlt
push
leave
pop
mov
push
sti
je,pt
pop
jns
lods
or
xor
pop
or
push
pop
xor
rolb
stos
ret
adc
cmpsb
jnp
test
cmp
dec
loop
and
push
jp
idiv
out
dec
jae
inc
mov
sub
std
and
xchg
ror
lret
fwait
testb
sbb
mov
sahf
inc
sub
mov
jae
out
xchg
roll
out
adc
dec
pop
mov
jo
nop
dec
mov
add
bound
lea
xor
cli
mov
sub
popl
incb
push
enter
test
cmpsl
iret
out
fldt
arpl
ljmp
shrb
add
lds
sbb
mov
ljmp
dec
xchg
rcrl
push
mov
arpl
sbb
sbb
aam
fistpl
or
inc
xchg
cli
lahf
lock
mov
xchg
xor
inc
es
call
pop
std
aas
jge
mov
outsb
xor
mov
out
cli
sbb
or
fstp
mov
and
adc
ficomps
sub
mov
xchg
stc
xchg
and
ud1
fwait
popf
dec
lods
test
fdecstp
inc
jmp
das
icebp
or
lret
cmp
lods
push
mov
add
jp
push
mov
push
loope
insl
rclb
push
lods
or
push
imul
inc
insb
outsb
movsb
mov
stos
xor
and
js
and
xchg
xor
sub
push
xorl
imul
in
mov
aaa
pushf
inc
adc
lock
popf
pop
lcall
test
xchg
aam
outsl
cld
outsl
and
sbb
inc
jecxz
sbb
xchg
test
cmp
sub
jp
push
sbb
mov
push
adc
push
repz
jle
pop
dec
mov
lods
xchg
icebp
push
ss
int
test
in
mov
pop
mov
jg
dec
sbb
xchg
test
sbb
aam
inc
push
or
stos
push
in
std
jnp
repnz
into
iret
js
out
lahf
mov
mov
lea
inc
xor
adc
jb
ror
fwait
cs
or
pop
pop
add
pop
rep
push
adc
ret
adc
das
jg
popf
dec
inc
mov
mov
mov
mov
mov
jae
mov
dec
ret
ja
orl
xor
sbb
cmp
aas
mov
jbe
inc
or
or
xchg
int3
nop
lock
mov
arpl
movsb
mov
repz
lock
xchg
sbb
stc
sar
xchg
cmpb
pop
or
fnstsw
pop
or
push
jns
sub
pop
push
push
jne
cld
icebp
mov
cmp
bound
sbb
leave
inc
insl
xor
dec
inc
iret
repnz
xchg
sbbb
test
rorl
pop
shll
fistps
rcrb
out
rorb
add
jo
lret
dec
repnz
sub
addr16
and
test
mov
jecxz
dec
hlt
or
inc
fdivrs
outsb
fs
jnp
adc
mov
sti
and
test
adc
outsb
adc
ret
sub
lods
dec
les
icebp
push
add
mov
pop
ret
bswap
xchg
enter
push
jne
stos
adc
xchg
sbb
ljmp
lret
fstl
cmp
repnz
jbe
sbb
dec
into
push
insb
aas
jne
mov
xchg
mov
aaa
add
je
add
dec
stc
cmpsl
jg
ret
mov
js
pop
jmpw
lea
and
fwait
adc
outsl
fwait
xchg
dec
or
xchg
lahf
jle
mov
adc
pop
sub
inc
imul
cltd
inc
dec
cmp
xchg
rclb
pop
lcall
mov
or
jns
xchg
popl
mov
fadds
mov
inc
sbb
cmp
pop
sbb
inc
mov
dec
push
imul
sbb
pop
notb
mov
imul
sub
pop
insl
add
icebp
or
movsl
adc
jno
aaa
dec
or
xchg
and
test
fcompl
xchg
or
loopne
sub
sbb
jl
iret
pop
lock
rclb
adc
arpl
orb
cmpsb
adc
cmpsb
or
test
xor
jmp
out
cld
pop
and
roll
dec
mov
call
insl
push
sbb
and
movl
cmp
clc
adc
mov
call
push
dec
inc
enter
cmp
cmp
cmp
xchg
xchg
xchg
mov
adc
mov
shll
cld
and
js
int
add
fdivl
shll
sahf
or
ljmp
mov
sub
lret
push
clc
xor
enter
and
jmp
lcall
jecxz
adc
lret
test
mov
dec
xchg
not
mov
sbb
push
sub
jecxz
sbb
mov
negb
sti
mov
mov
out
lock
gs
rclb
mov
inc
hlt
dec
jecxz
rcr
gs
pop
leave
nop
inc
adc
lret
jnp
sbbb
roll
daa
adc
push
bound
pop
int
add
call
cli
xchg
sarb
pop
mov
or
inc
push
out
lods
xlat
inc
jno
das
jo
jns
xchg
push
push
add
inc
mov
out
mov
insb
cs
jne
mov
or
push
xor
cmpsb
dec
fcoms
lcall
ljmp
xor
pop
lahf
cmp
cmp
loop
ss
pusha
cmp
mov
cmp
gs
scas
mov
push
loopne
add
mov
loope
xchg
enter
shll
std
cmp
gs
addr16
push
pop
daa
push
mov
in
gs
sub
xchg
mov
testb
int
mov
cmp
adc
lock
ss
test
pop
into
insb
mov
push
rclb
cmpsb
dec
push
stos
cmp
jl
fisubs
cmp
mov
test
fcompl
rol
sti
dec
roll
mov
sub
and
mov
imul
insl
nop
lods
jno
cmc
fstps
jbe
inc
push
stos
popa
cld
sbb
cli
js
jp
mov
xchg
cmpsb
mov
ja
fdivl
out
mov
xor
push
pop
or
cmp
in
sahf
sbb
fcmovnbe
mov
cmp
movsb
xorb
mov
clc
dec
clc
stos
pop
add
cmp
sbb
mov
xchg
pop
cmp
icebp
cmp
imul
nop
test
pop
xchg
adc
pop
pop
mov
inc
ret
iret
and
lds
test
lock
test
les
dec
int
jg
in
inc
imul
jnp
in
dec
arpl
pop
mov
sbb
and
xchg
xchg
shrb
mov
xor
pop
addl
fisubrl
in
sbb
daa
lcall
jecxz
sub
push
xor
adc
sahf
cmp
mov
xor
jae
fimull
movsl
imul
sbb
xchg
dec
call
test
cmpl
or
cmp
adc
in
loop
add
or
aam
lcall
cld
je
and
stos
sbbb
das
stc
add
mov
pushf
push
mov
jp
xchg
pushf
sub
adc
nop
fs
mov
in
jecxz
mov
int3
dec
lcall
xlat
out
test
cld
call
or
jmp
leave
or
mov
dec
push
lcall
mov
dec
push
cmp
repnz
test
xchg
adc
les
fnstsw
pop
rcrl
movsb
iret
sbb
sbb
into
inc
mov
mov
pop
icebp
fcoml
push
mov
push
cwtl
add
push
mov
lods
fwait
push
pop
jne
and
ljmp
loop
xor
repnz
lret
xchg
jno
gs
clc
jle
daa
xchg
insl
sbb
out
or
out
inc
inc
in
int3
test
mov
add
dec
movsl
xor
out
push
mulb
add
xchg
out
gs
fildll
cmpsl
mov
ret
stos
test
xor
mov
testb
cmc
lahf
xchg
dec
lcall
and
mov
push
ds
pushf
push
fwait
cmp
fimuls
cmpsl
lret
test
ja
adc
hlt
add
fmull
shrb
test
push
sbb
mov
adc
sbb
sahf
pop
lcall
std
sub
imul
push
jge
mov
cmpsb
mov
les
in
jbe
mov
cmovnp
pop
lret
ror
scas
fnstenv
jl
pop
fmul
sbb
add
pop
add
jmp
mov
stos
jp
xor
test
fwait
sub
mov
jo
xchg
and
jae
sub
cli
fisttps
shlb
lock
xor
jb
lret
or
jae
lock
xchg
test
jns
aam
mov
clc
inc
pop
mov
push
pushf
insb
dec
cli
out
pop
cmpsl
pop
std
or
push
movsb
inc
sub
push
and
mov
nop
mov
dec
ja
stos
and
mov
jmp
dec
pop
fs
cmp
xchg
lcall
adc
inc
shl
xor
jns
mov
xor
les
cwtd
xchg
mov
sbb
add
aam
jle
cmp
fsubl
repnz
imul
movsb
dec
or
scas
test
xchg
sub
aam
outsb
sub
fimuls
inc
xchg
insl
mov
sbb
sbbb
in
add
dec
mov
enter
negl
push
test
or
push
cmp
and
aaa
push
pop
mov
dec
fcmove
cmp
les
jecxz
repnz
in
lock
sbb
ffree
jno
add
cmp
inc
adc
sti
jecxz
fldt
or
out
inc
lock
xchg
in
and
xchg
lret
ficomps
xor
sti
inc
adc
into
mov
dec
sbb
sub
push
out
lahf
and
jb
icebp
loope
cld
popf
add
and
test
cs
ret
fisubl
push
pop
cmpl
dec
test
ret
mov
int
bound
mov
add
jle
imul
dec
jecxz
sbb
or
push
xor
sub
and
inc
mov
and
out
xchg
add
jo
adc
inc
pushf
sub
movsb
pop
push
stc
ret
cmp
inc
dec
repz
xchg
or
testl
outsl
dec
inc
addb
mov
xchg
fists
jnp
fs
jnp
sarl
shrl
cld
fistpl
popa
xchg
jne
ret
sub
test
je
stos
cmp
dec
scas
add
mov
iret
es
pop
scas
push
jb
xchg
inc
sbb
jb
iret
repnz
xchg
int3
inc
movsl
cmp
aas
jne
jmp
shll
fisubs
pop
mov
mov
fcom
mov
push
jle
das
mov
ss
lret
inc
leave
mov
xor
pop
andl
sbbb
inc
test
stos
das
jmp
push
je
mov
sub
mov
aad
out
test
shrb
jle
pop
cld
xlat
in
mov
inc
popa
sub
ffreep
shrb
ljmp
insl
pop
dec
sub
dec
mov
fwait
mov
test
roll
inc
jge
mov
push
xchg
imul
mov
fistps
fs
xchg
arpl
cmp
xorb
jno
loop
add
ret
repnz
out
mov
xor
and
push
mov
js
sbbb
ret
mov
sbb
cmp
and
pop
stos
lock
jbe
lea
pusha
jmp
loop
xchg
ret
cmp
add
mov
mov
xlat
fisubrl
clc
movsb
fisubl
xchg
pmaxub
je
jmp
rorb
xchg
leave
test
ja
xsave
jb
cmc
mov
data16
jmp
sbb
mov
cmp
sub
scas
lcall
dec
mov
cmc
sbbl
mov
adc
pop
idiv
mov
loopne
xchg
push
push
mov
out
mov
sbb
push
or
dec
fimull
imul
icebp
push
mov
mov
xor
jns
add
cmpsl
dec
in
cmp
sub
dec
xlat
jecxz
sbb
xor
sub
repnz
hlt
stos
push
aas
adc
xlat
and
in
sub
in
loopne
adc
lret
test
cmpsb
xor
push
loope
loop
push
pop
jecxz
std
mov
int3
scas
pop
sbb
icebp
mov
mov
ljmp
int
inc
dec
repz
and
iret
addr16
pop
testb
popf
test
or
test
adc
ljmp
sbb
jbe
ret
int3
or
lods
mov
dec
push
pop
jmp
mov
dec
sub
outsl
jnp
xor
mov
aad
cmpsb
das
rorl
fidivl
cmc
iret
and
mov
test
inc
dec
mov
icebp
lret
stos
inc
add
scas
loopne
or
out
xchg
out
sbb
sbb
dec
add
xor
arpl
movsb
xor
fs
rolb
pop
mov
sbb
sub
jle
cs
inc
xchg
adc
inc
jecxz
mov
sub
fldl
xor
xchg
mov
aaa
inc
dec
mov
mov
inc
addl
addr16
mov
cwtl
outsb
call
add
int3
inc
rolb
and
xlat
push
adc
addr16
cli
push
cmp
cmp
int3
jnp
cmpsb
rcll
push
xchg
icebp
int3
das
aaa
mov
fwait
mov
push
jp
add
es
cmp
ret
mov
bound
aam
les
ret
or
insl
or
lea
out
js
fwait
movb
adc
outsl
jne
and
pushf
sarl
jbe
pushf
pop
xor
inc
sub
fs
mov
jp
inc
jecxz
loopne
jl
mov
xlat
or
insb
push
pop
mov
mov
test
jns
jmp
jl
adc
xor
and
pop
ljmp
mov
sahf
fisttpll
jb
repnz
cmpl
mov
test
sub
int3
xlat
outsl
sbb
lock
rcl
push
inc
out
scas
pop
add
es
dec
insl
xchg
mov
addr16
daa
rcrl
dec
mov
int
int3
test
clc
add
cmpl
stc
mov
mov
mov
xchg
jl
mov
shrl
adc
out
push
loope
out
test
pop
scas
outsl
aaa
xor
add
divl
pop
rorb
nop
cmc
fdiv
pusha
sbb
incl
inc
out
aas
xor
sbb
js
inc
sub
push
mov
mov
mov
das
mov
andl
mov
mov
or
fwait
add
dec
jbe
and
dec
stos
idiv
mov
es
or
xor
sub
sub
std
imul
push
mov
sub
fs
sub
adc
bound
pop
int3
and
or
lahf
jg
sysexit
mov
jo
pop
loopne
movsl
xchg
push
fcompl
daa
inc
ud0
arpl
cmp
cmpsl
or
jecxz
add
inc
and
and
mov
outsl
mov
sub
lods
and
xor
and
sub
leave
aaa
clc
out
jmp
adc
les
mov
xchg
sub
int
cmc
mov
xchg
cs
push
into
mov
dec
das
lods
cld
or
inc
dec
mov
popf
push
pop
fistpl
in
jbe
jne
xchg
mov
fs
daa
fs
sbb
daa
lods
push
orl
jmp
stos
iret
push
push
stos
pop
loope
lcall
out
ficoms
xor
pop
push
or
cli
cmpsb
add
aam
mov
inc
or
mov
rol
mov
mov
enter
aam
aad
dec
mov
je
adc
in
subb
loopne
shr
call
cltd
sti
pop
cwtl
cmp
ret
sbb
hlt
hlt
pop
scas
jae
rolb
lods
fs
sub
ss
int3
push
dec
movsl
out
lcall
addr16
lds
dec
out
mov
xchg
mov
adc
mov
push
xor
sub
movsl
iret
fbstp
adc
mov
jg
or
pop
cli
mov
dec
sbb
or
scas
aam
mov
inc
imul
imul
sarb
fsubrl
push
and
mov
jns
repz
and
sbb
movsb
pop
pusha
jnp
fstps
aas
pop
insb
cli
mov
js
pop
shlb
inc
xchg
push
aam
sbb
fs
add
fwait
xor
jae
jnp
xchg
shll
ljmp
mov
and
push
pop
std
ret
sbb
jb
sbb
pop
stos
adc
dec
mov
mov
fidivrl
push
popa
les
adc
movsb
xor
fstps
xchg
ds
insl
orl
sahf
add
push
inc
pop
dec
test
mov
scas
lea
sbb
push
push
lods
mov
sub
mov
loop
mov
pushf
pop
jns
stc
das
push
test
in
xchg
mov
pop
js
adc
ror
xor
mov
cltd
ret
pushf
push
test
cmp
or
mov
clc
iret
inc
xor
in
aad
jle
xchg
ljmp
dec
cwtl
mov
ret
test
outsb
mov
pop
cld
pushf
out
enter
adc
pop
xor
or
add
lret
push
notl
fdivl
jmp
jge
dec
pop
sub
int3
repz
add
jbe
scas
pop
and
pop
test
pop
lret
repnz
xchg
xor
je
in
fsubs
push
xor
add
fwait
or
clc
shl
iret
in
xchg
test
push
mov
adc
scas
pop
xchg
in
or
xchg
nop
fucomip
in
clc
xor
sarb
into
aas
insl
pop
incl
lods
bound
or
xor
in
scas
pop
mov
rclb
fnstsw
aad
and
es
out
and
dec
push
jecxz
xchg
lret
and
push
jmp
les
push
shrl
push
loop
aad
aas
in
imul
push
add
rorb
and
je
xor
std
ss
fnstenv
dec
enter
cmpsl
push
xchg
mov
icebp
loope
ja
test
jbe
in
xor
jmp
push
add
sbb
dec
sub
mov
pop
mov
inc
bound
dec
and
sub
cltd
mov
jl
pop
jl
and
dec
adc
mov
pop
int
aad
das
repz
fsubl
mov
clc
data16
shll
push
dec
ja
or
jbe
cmp
popf
imul
aas
mov
stos
subb
out
sbb
jmp
out
orl
inc
xchg
mov
or
fwait
xor
cmc
and
adc
arpl
nop
dec
push
cltd
mov
jle
std
mov
orb
rorl
mov
sub
pop
shrb
cmp
repz
push
jmp
repz
into
mov
out
xor
mov
inc
inc
nop
shll
call
mov
dec
lock
inc
test
jmp
cs
cmpsl
mov
push
ljmp
test
cmp
mov
wrmsr
inc
cwtl
push
ret
enter
mov
dec
icebp
test
cmc
mov
cmp
mov
inc
loopne
lcall
ds
aad
cmp
mov
leave
xor
push
mov
mov
cltd
pop
xchg
das
xchg
or
push
mov
push
fsub
sbb
and
popa
je
jp
jno
push
notb
mov
xor
ret
test
mov
mov
test
push
and
clc
sub
mov
jo
das
into
cmc
das
sarl
leave
mov
bound
add
stos
inc
sbb
sahf
mov
jg
fnstenv
inc
dec
jp
outsb
fmulp
push
icebp
shll
dec
dec
push
call
out
add
sbb
dec
lods
cwtl
sub
mov
pop
push
jno
js
pop
popa
call
sub
lds
xor
sub
test
dec
xor
sub
test
xchg
xchg
fwait
les
rcr
dec
idivb
jmp
movsb
enter
mov
jecxz
xor
dec
test
inc
imul
adc
aam
pop
mov
mov
ret
out
repnz
push
scas
fdivl
popf
clc
test
pop
adc
add
call
dec
icebp
or
insl
mov
mov
xor
lret
mov
dec
fwait
dec
popa
ret
cmp
sahf
ret
lret
jns
sbb
fiadds
jns
pop
jecxz
in
pop
push
mov
dec
adc
pop
xorb
fscale
test
mov
mov
test
lahf
movsl
lret
orb
mov
in
mov
in
adc
jmp
hlt
add
push
xorl
sbbb
ret
das
mov
jle
popf
sbb
inc
fildl
add
stos
push
pushf
sarb
mov
test
icebp
mov
jg
outsl
cmp
inc
pop
enter
mov
xor
adc
add
aad
dec
jb
test
adc
mov
or
jno
and
lret
lret
rcr
lods
stos
push
mov
adcl
ss
and
mov
and
xchg
mov
loopne
mov
ret
jns
inc
adc
inc
adc
mov
mov
adc
loopne
mov
mov
push
xchg
popf
or
jne
mov
js
jmp
stc
hlt
rorl
and
and
jl
in
sub
test
repz
call
loop
pop
or
add
cmp
lods
pop
pop
jecxz
movsl
scas
cmpsl
fstpt
std
js
jne
sbb
les
add
inc
jle
jbe
xchg
sbb
js
out
add
leave
and
cs
pop
xor
test
push
ljmp
pop
push
xor
cmp
cli
in
dec
cmc
push
xor
pusha
fisubs
sub
push
in
inc
jmp
stos
jg
jns
mov
aas
in
dec
sbb
xchg
pop
pop
loope
add
push
inc
outsl
fsts
ja
or
jle
lds
jg
sbb
mov
subl
rcl
outsl
push
test
pop
arpl
aaa
pop
xor
xor
inc
shlb
fwait
movsb
movq
push
mov
cmp
mov
inc
pop
mov
daa
mov
add
xlat
jne
movsl
sbb
or
in
stos
aas
ljmp
das
or
out
adc
push
jecxz,pn
sub
dec
enter
test
push
stos
imul
pop
add
cld
pop
push
or
push
out
xchg
lods
cmpsl
lret
sahf
jns
int3
dec
pop
xchg
sub
mov
shll
sahf
out
pop
stos
cmp
dec
mov
push
fiaddl
and
xchg
neg
xor
xor
adc
sub
xchg
les
in
push
fistpll
daa
jmp
xchg
mov
pop
adc
mov
dec
jp
push
jns
iret
mov
mov
cmp
ds
ja,pt
cmpsb
filds
adc
jle
push
adc
sbb
xchg
iret
bound
xchg
pop
loope
mov
push
adc
std
pop
add
lret
mov
rcrb
push
out
out
sbb
mov
sbb
lret
xor
clc
imul
data16
ja
repz
adc
cmc
cmpsl
dec
ret
gs
xor
inc
hlt
fsubrs
hlt
and
jnp
repz
push
ret
stos
fisttpl
mov
xchg
ret
push
pop
or
xchg
fwait
sub
subb
xchg
es
xor
sbb
xchg
adc
sub
rclb
xchg
in
mov
push
scas
hlt
fdivl
jle
fiadds
sbbb
test
fcmovnbe
xchg
pop
stc
vmread
clc
test
jle
inc
push
pop
xor
ljmp
ja
push
loopne
xor
arpl
lods
ljmp
push
inc
bound
and
sbb
in
das
jo
dec
aaa
jge
lea
pushf
sti
sti
jecxz
pop
pop
mov
and
cmc
mov
loop
testb
sbb
clc
pushf
lret
pusha
pop
aam
data16
fwait
lret
adc
cmc
insb
les
dec
test
in
xor
fdiv
loope
and
cmpsb
lods
inc
ja
dec
cld
fnstsw
call
adc
arpl
xor
xchg
les
movsb
pop
outsb
xor
dec
cs
or
mov
in
sub
jae
repz
popa
adc
enter
push
nop
sbb
stos
rolb
sbb
out
jo
imul
test
push
ljmp
mov
or
in
lods
out
xor
jne
dec
xorb
push
xchg
push
push
aam
in
mov
sbb
jno
push
lahf
add
mov
pop
xchg
add
jb
ljmp
mov
mulb
test
fcoms
adc
and
add
lock
xlat
hlt
bound
push
mov
sub
iret
pop
imul
mov
mov
adc
test
std
push
or
call
add
inc
insl
rcr
and
cs
outsb
jnp
jne
jle
out
mov
sbb
or
mov
sbbb
mov
test
and
in
ffreep
out
add
jns
std
jb
out
cmp
inc
repnz
cmpl
int3
int
daa
and
mov
insl
dec
adc
or
pop
xor
mov
sub
int3
push
mov
mov
cmp
push
imul
sbb
fcomip
mov
add
mov
divb
out
jae
add
pop
daa
sbb
roll
stos
enter
scas
jnp
mov
xor
mov
aam
inc
add
xchg
call
pop
lret
insl
sbb
cmc
ret
sub
jns
pop
hlt
mov
imul
popf
pop
rclb
pop
dec
gs
xchg
mov
enter
jb
pop
loope
inc
mov
push
add
ret
pop
mov
pop
fimull
hlt
addl
data16
pcmpgtd
aaa
aaa
pusha
adc
mov
dec
cmpsl
push
jmp
inc
xchg
and
push
xchg
push
cld
imul
inc
fstps
mov
aas
push
or
gs
fwait
in
jb
out
jecxz
mov
jmp
movsb
or
xlat
inc
sbb
aam
out
repnz
xchg
rcl
inc
push
in
inc
dec
into
inc
popa
jae
aaa
pop
pusha
xor
cmp
xchg
xor
clc
cmp
mov
or
shlb
cmp
scas
pop
stc
arpl
sbb
repz
cmp
push
fsubr
push
jg
out
das
and
mov
add
daa
pushf
jmp
and
test
cmpsl
jmp
and
repz
xor
clc
mov
push
cld
aaa
jle
sbb
mov
cmp
sbb
xchg
add
pop
roll
jp
dec
inc
flds
loopne
mov
push
xor
mov
pushf
jle
data16
xchg
jp
mov
loope
insb
fdivr
mov
mov
stos
inc
iret
or
in
fwait
add
pop
pusha
clc
orl
popa
add
loopne
lea
mov
iret
mov
out
xchg
out
add
in
mov
push
sub
pop
jp
jno
sbb
mov
iret
push
in
add
mov
push
mov
in
jge
mov
fldt
in
or
xor
js
cmc
jne
lahf
clc
pop
in
xor
das
fdivs
pop
rcl
test
cmpl
ljmp
pop
aam
sbb
sub
lcall
pop
ljmp
cmpl
jbe
adc
fadd
loopne
mov
stos
sarl
out
out
cs
xchg
cmpsl
xlat
lods
mov
into
dec
adc
adc
jg
fs
xchg
stc
imul
jmp
jns
pop
mov
movsb
mov
cmp
lcall
jne
mov
mov
sbb
out
lds
loopne
nop
mov
push
jmp
mov
jne
push
leave
loop
mov
mov
aas
popa
push
mov
or
add
mov
dec
cmp
insb
jecxz
leave
fsubrs
js
cld
lahf
cmp
loope
mov
inc
and
adc
imul
stc
and
lea
loopne
pop
lret
inc
mov
popf
addr16
mov
and
nop
add
xchg
ljmp
dec
xor
lret
imulb
hlt
icebp
xor
out
testb
test
js
dec
sbbl
cmp
test
jle
mov
and
jns
cwtl
dec
push
sbb
jg
sub
hlt
sbb
out
sub
jle
ljmp
pop
pop
ret
adc
fimuls
jl
outsl
jno
lcall
sbb
enter
imul
mov
jne
int3
mov
adc
push
cmc
inc
daa
mov
int
inc
stos
mov
inc
add
bound
outsl
clc
xor
jcxz
inc
adc
mov
and
mov
mov
lahf
sub
adc
ja,pn
push
pushf
xor
mov
arpl
in
xchg
test
pop
ror
sbb
push
xchg
pop
fs
lea
jl
outsb
sbb
adc
sub
dec
pop
or
ljmp
mov
popa
mov
xchg
hlt
pop
popf
jb
xlat
lods
lret
gs
mov
sub
push
mov
pop
cld
push
cmpsb
lea
mov
adc
cmp
cmp
push
ds
mov
into
xor
ret
and
aas
xor
and
ss
xchg
jo
pop
sbb
mov
pop
sti
dec
and
mov
stos
ret
cltd
xor
push
jecxz
sbb
int3
test
mov
sbb
icebp
cmpsl
xchg
arpl
adc
out
mov
or
xor
cmpsl
jmp
in
mov
xor
outsl
cmp
mov
imul
in
fdivs
sub
cltd
js
rclb
ficoml
or
cwtl
adc
in
stc
mov
mov
gs
dec
out
push
nop
mov
inc
in
cmp
cld
add
test
xchg
insl
jmp
push
jmp
xor
mov
cld
xchg
ficoml
clc
mov
cltd
iret
pusha
clc
adc
jecxz
cmc
clc
fwait
cmc
mov
test
sub
inc
push
adc
pop
mov
and
in
and
cmpsb
loop
int
pop
jne
inc
mov
js
ljmp
lods
popa
jne
sbb
push
pop
adc
pop
push
sti
mov
iret
loopne
or
sarl
push
hlt
mov
inc
aam
mov
outsl
jae
loopne
sbb
and
lret
cmpsb
pop
inc
xor
bound
add
xor
out
cmpsl
jnp
push
test
js
dec
pushf
xchg
shr
ds
mov
xor
js
sti
cli
jecxz
call
adc
ss
incb
cmp
dec
fstpt
mov
out
add
xchg
mov
call
mov
cmpsl
push
lds
fcmove
and
iret
mov
and
mov
inc
orl
outsb
add
movsl
fcmovu
or
dec
and
in
popa
mov
shll
inc
jmp
cwtl
in
inc
data16
std
cmp
pop
into
push
mov
andnps
push
ljmp
sub
dec
insb
inc
pop
push
mov
xchg
mov
and
hlt
int3
sub
xor
push
iret
mov
scas
mov
rolb
or
cmp
xchg
dec
lcall
pop
jnp
mov
in
push
cwtl
jnp
xor
xchg
and
xor
test
iret
push
dec
lds
movsl
push
scas
icebp
sahf
and
and
sbb
adc
cmp
mov
das
rorb
dec
inc
mov
dec
jp
movntq
or
lds
dec
movsl
mov
pop
push
pop
les
loop
in
push
mov
xor
inc
insl
xchg
sbb
adc
inc
mov
jnp
out
sub
jle
dec
cmpsl
cli
movsb
mov
mov
pop
aam
jbe
sub
or
mov
jle
pop
lahf
xchg
gs
stos
add
repz
test
mov
adc
jl
popf
movsl
pop
out
pop
jmp
loop
xor
add
shll
fmuls
jge
es
push
mov
jno
and
ss
in
loope
popf
push
jnp
out
loopne
dec
js
loop
mov
dec
out
pop
cmp
cmp
cltd
push
or
cmpsl
and
int3
pop
inc
pusha
add
hlt
cli
inc
xor
lds
and
out
stos
xchg
iret
add
adc
xor
icebp
mov
sti
xor
stc
into
inc
or
add
jae
lcall
movsl
cmp
ljmp
stos
sti
and
cmpsl
sbb
or
or
imul
jmp
cmpsl
test
mov
push
dec
in
add
adc
mov
inc
outsl
outsb
shrb
and
mov
loopne
pop
imulb
lea
mov
push
aam
xchg
test
mov
sbb
in
cmpsl
push
xchg
call
pushf
addr16
add
mov
jecxz
push
sbbl
sub
ja
repnz
les
jmp
pop
mov
mov
loop
nop
pop
mov
cmpsl
jns
mov
xor
pop
mov
fucomp
mov
sarb
daa
cmp
inc
adc
idivl
out
lret
cmp
jnp
and
sub
cmp
je
mov
dec
add
insl
jne
addr16
mov
sub
jno
repz
jns
sarl
stos
shl
xor
jb
sub
sub
cli
cli
sbb
dec
add
xchg
jb
sub
ret
jl
mov
jb
pushf
inc
pop
pusha
sub
or
jb
push
lds
pop
repz
or
and
scas
aaa
adc
out
fwait
aaa
pop
aam
pusha
in
nop
stc
push
or
ret
mov
shll
insb
xchg
mov
jecxz
jbe,pn
xor
mov
adc
pop
out
or
xor
and
mov
mov
clc
daa
sbb
movb
jmp
lahf
enter
je
pop
xor
mov
sbb
and
dec
mov
rcl
cltd
fstps
and
sub
in
cli
sub
xor
xlat
jns
xchg
jp
add
fsts
fidivrs
add
xchg
add
shl
push
pop
movsl
dec
xchg
test
push
xor
mov
mov
push
std
pop
xlat
repz
or
pusha
and
sarl
in
aaa
loope
push
push
push
xchg
scas
stos
rcrb
fprem1
add
sahf
dec
sti
loope
arpl
sub
mov
mov
mov
jae
pushl
sbb
gs
xchg
mov
jmp
cmpl
jmp
xchg
ljmp
jp
stc
shlb
fucomp
mov
or
test
sysenter
into
cmpsl
in
and
jne
xchg
test
xor
and
repz
dec
inc
ss
jne
sti
push
mov
jecxz
cmp
push
push
sbb
stos
push
dec
outsl
insl
cmp
and
mov
mov
or
outsl
xchg
lret
mov
xor
ss
leave
gs
mov
or
adc
mov
dec
gs
in
sbb
subl
insl
inc
pop
imul
jns
xorl
lds
in
addr16
loop
push
ret
js
jl
shlb
repz
mov
je
xchg
nop
ret
mov
int
gs
loope
imul
mov
ss
sbb
int3
insl
lahf
mov
mov
sarb
cmp
negb
or
imul
test
outsl
pushf
lods
inc
cmp
lret
or
and
out
xchg
mov
xor
pop
ljmp
mov
movsl
fnstcw
out
cltd
ja
pop
adc
call
call
cli
es
mov
andl
pop
push
push
nop
js
push
push
out
fisubl
scas
mov
shrb
pop
push
dec
je
loop
jecxz
enter
hlt
popf
sbb
mov
insb
test
cmp
fcoms
test
pop
call
or
mov
and
push
loope
lea
sbb
mov
aam
loop
popa
mov
xchg
fstps
sbb
or
and
ljmp
mov
xlat
roll
dec
icebp
lods
repz
loopne
xchg
insb
inc
adc
fistps
test
sbb
mov
jecxz
dec
lcall
out
xor
rorl
xchg
or
pop
int
add
or
ss
in
out
fcoms
xchg
mov
andb
lret
ret
jo
pushf
rcr
lods
cmp
adc
stos
push
test
lods
hlt
mov
mov
and
out
sbb
loopne
repz
rolb
dec
adc
pop
rorl
in
mov
adc
lods
or
aaa
push
mov
cltd
xchg
movsl
cmp
push
std
mov
dec
and
and
sub
sub
loopne
sub
mov
push
notb
sarl
xchg
jge
jle
jnp
push
xchg
out
rcrb
in
inc
fstpt
add
mov
inc
popa
ja
sbb
cmp
or
popa
aaa
outsl
push
xor
cmp
mov
imul
xor
pop
jno
dec
sahf
push
out
pop
xchg
dec
enter
aad
mov
std
aas
iret
hlt
pop
adcb
popf
sub
fcmovbe
loopne
inc
das
mov
lods
ret
cwtl
sbb
adc
popa
testl
and
cmpsl
inc
dec
daa
dec
ljmp
addr16
mov
mov
ret
pushf
sbb
out
cltd
das
adc
dec
nop
bound
jnp
jbe
std
leave
aad
or
xchg
cwtl
cwtl
and
test
and
es
mov
nop
mul
xor
dec
push
mov
pop
or
pop
nop
cmp
mov
pushf
jbe
inc
les
xchg
das
inc
push
test
xorl
push
mov
iret
jbe
mov
cmp
pop
push
lods
dec
push
scas
ds
stos
fsub
sub
dec
pop
jbe
inc
jp
sub
or
adc
pop
inc
sbb
mov
dec
inc
pop
testl
ret
fcoms
es
jl
mov
pop
dec
fimuls
push
inc
cmp
push
cmpsb
cmp
in
mov
dec
iret
cmp
push
lret
jns
and
stos
insl
mov
into
das
arpl
mov
fistl
movl
outsb
inc
adc
jns
cwtl
outsl
daa
rorb
aas
cmpsb
fnstenv
jae
adc
inc
test
xor
dec
ror
rcll
mov
inc
xchg
jp
mov
jmp
mov
or
arpl
js
push
je
clc
jmp
cli
dec
aas
jnp
and
sbb
fstpl
lea
jae
jbe
xorl
sbb
rcl
popf
dec
bound
rorl
es
shll
jg
sbb
push
fdivrl
lods
data16
or
jg
jbe
mov
fimull
cs
cmp
mov
xchg
aaa
into
into
lock
xchg
les
into
aam
cmp
xor
hlt
subb
xor
ret
scas
add
int
call
out
addl
sahf
ljmp
loope
fs
lcall
fidivrl
add
add
in
lods
sbb
jo
repnz
aam
push
je
loope
insl
imul
stc
test
out
pusha
int
xor
ljmp
inc
std
push
movb
dec
shlb
aaa
aaa
mov
shr
jae
nop
hlt
add
stos
mov
add
mov
sahf
out
fstps
dec
inc
aaa
jg
jae
or
ds
push
int
jle
cmp
cmp
push
cwtl
cld
lods
jne
cwtl
cmpsb
jecxz
and
movsl
test
ljmp
lds
push
ljmp
or
pop
je
dec
test
std
mov
xlat
pop
in
push
push
xchg
inc
faddl
adc
adc
frstor
xchg
loopne
inc
mulb
dec
mov
pop
sub
pop
movsb
cld
mull
les
js
adc
inc
out
loop
mov
cs
clc
in
data16
lods
loope
outsb
mov
cmp
adc
xor
jne
insl
les
out
sarl
daa
outsb
mov
adc
aad
mov
frstor
rclb
mov
jl
sbb
jnp
pop
aad
frstor
add
test
adc
jo
mov
rcr
and
dec
pop
mov
fs
sub
fidivl
mov
sti
push
popf
into
shlb
int3
sbb
loop
out
in
push
dec
add
or
jno
pop
fisubrs
imul
and
adc
imul
pinsrw
xchg
movsl
icebp
mov
repnz
jp
shll
daa
sub
sub
repnz
cmp
or
inc
iret
jo,pn
popa
fistpll
shlb
jmp
sub
xchg
push
or
push
int
ja
mov
push
into
push
xchg
outsl
mov
xor
push
and
mov
bound
and
dec
xchg
mov
test
das
mov
push
pop
ret
repnz
mov
mov
inc
gs
jp
add
sti
sbb
out
out
arpl
mov
icebp
push
adc
out
push
sub
movsl
or
push
lods
loope
icebp
xor
mov
jb
mov
sbb
stos
gs
in
stos
jmp
std
cmpsl
pop
f2xm1
push
rcr
xor
test
test
les
sub
inc
ljmp
mov
add
xor
scas
int3
mov
pop
push
pop
nop
pop
popf
mov
jno
int
int
push
sub
inc
lret
int3
arpl
cmp
add
dec
test
jae
cli
sub
lock
outsb
rcrl
add
rcrb
mov
push
push
into
imul
and
ja
dec
lods
out
int
mov
adc
scas
add
and
imull
xchg
rcrb
fisubl
xor
orl
push
data16
leave
aaa
nop
pusha
push
inc
sbb
xchg
mov
cli
mov
dec
mov
sub
mov
fs
push
xor
test
in
test
lcall
nop
outsl
sbb
dec
movsl
aas
xor
pop
sub
sbb
cmp
mov
mov
daa
in
mov
mov
stos
cmp
mov
mov
jg
adc
xor
mov
cwtl
bound
mul
lret
adc
je
aad
dec
es
shll
movsl
imul
adc
xchg
push
aas
sub
adc
push
and
xorb
dec
pop
pop
fsubrp
inc
stc
fwait
jl
call
cmp
mov
out
cs
fdivrp
rcrb
add
data16
mov
xchg
or
enter
jecxz
lea
jae
sbb
pop
push
mov
ja
test
fsubrs
adc
daa
rol
pop
ds
stos
rorb
stos
out
sbb
iret
and
ja
mov
cmp
inc
repnz
push
loopne
das
dec
add
pop
jg
ret
mov
sbb
pop
loopne
pop
sub
cli
jmp
mov
test
shlb
mov
pushf
sbb
push
int3
xchg
cwtl
sarl
cmpsl
leave
mov
push
mov
xor
rclb
jge
push
cmp
xlat
adc
ja
lret
push
in
jp
sub
jecxz
mov
out
adc
push
lods
daa
xchg
dec
lcall
sbb
jo
push
cmp
add
aad
push
sahf
pop
jl
pusha
fiaddl
add
in
mov
jbe
fcmovb
out
jp
jl
cmp
les
pop
daa
xor
repnz
inc
data16
xchg
out
in
lock
add
mov
mov
push
call
add
je
push
test
sbb
stc
sbb
stos
inc
lret
sbb
xchg
cmpsl
inc
aas
in
pop
mov
lahf
js
pop
push
mov
rcr
pop
movb
inc
add
loop
stc
add
test
into
loop
rcr
mov
test
and
mov
hlt
js
loop
insl
xor
addr16
call
push
stos
es
andl
call
push
shlb
cltd
negl
mov
sub
inc
sub
xchg
cli
or
cmp
in
pop
jne
loope
xchg
mov
mov
sub
fwait
mov
int3
mov
and
in
jnp
fadds
rolb
xchg
out
and
sub
mov
inc
mov
jg
or
ror
dec
add
inc
ja
mov
inc
xchg
jns
sub
inc
fisubrs
popf
sahf
fldenv
push
call
ficompl
aaa
mov
ds
jecxz
sub
std
mov
sbb
test
in
dec
or
sarb
jbe
sbb
pop
loopne
scas
lahf
jne
sbb
js
imul
mov
mov
jnp
ja
push
rcr
clc
stc
je
or
outsl
int3
add
pop
repnz
dec
or
decb
leave
jne
jnp
xchg
in
push
rclb
cmp
sahf
xor
movsl
cmp
rcrb
scas
in
push
mov
rol
test
stos
push
jl
data16
pop
adc
clc
lret
out
leave
push
dec
popa
and
sub
jecxz
nop
sub
push
loop
int3
jle
mov
clc
xor
cmp
or
cltd
xchg
xor
imul
scas
sti
mov
out
adc
xchg
cmp
sub
jb
xor
pop
out
pop
add
jnp
sbb
out
xchg
cld
imul
push
dec
and
sbb
nop
mov
fbld
lret
call
xor
mov
filds
inc
xlat
js
cmp
jns
or
push
in
add
icebp
sub
call
adc
addr16
outsb
inc
xor
mov
adcb
xlat
jmp
pop
cmpsb
xchg
add
push
lret
lods
pop
loopne
jg
xor
adc
out
clc
mov
and
and
dec
popa
call
cmc
out
push
xchg
mov
popf
fiaddl
mov
sub
jp
or
sub
jmp
sbb
xchg
iret
and
pop
out
std
fs
cmp
nopl
push
jmp
idivl
shl
aam
mov
stos
fimuls
sbb
stc
ret
xor
pop
cld
pop
xor
inc
sub
icebp
sub
test
pop
mov
ljmp
mov
pusha
lods
scas
inc
cmp
in
test
and
outsb
js
inc
xchg
pop
jecxz
push
and
sbb
sub
stos
jnp
es
mov
jp
insb
push
pop
cli
dec
sbb
repz
jb
and
mov
sub
xor
and
mov
sub
jp
sub
cmp
shlb
shl
add
and
add
movb
xchg
adc
pop
pop
mov
mov
pop
lcall
lea
hlt
cmp
dec
out
sub
faddl
cmp
sbb
sub
inc
pop
cmp
jl
and
cmp
rclb
fistps
hlt
jbe
call
out
jo
outsb
xor
fildll
push
aaa
xor
mov
cmpsb
mov
adc
pushw
in
jmp
and
shlb
ja
xor
sbb
add
xor
pop
in
mov
data16
cltd
pop
iret
mov
xor
xor
jo
loope
cmp
or
or
pusha
and
lods
cltd
sub
add
movsl
dec
into
pushf
mov
inc
in
lret
fcoml
pop
sbb
add
inc
js
mov
int3
into
fwait
dec
int
lock
pop
fxch
daa
inc
popl
push
rcl
sub
lods
int3
push
cs
add
add
hlt
mov
cmpl
sub
bound
xor
sbbb
xchg
ds
jo
sbbb
cmpsl
adc
repz
stc
stos
aas
test
imul
out
pushf
movsb
xor
mov
cmp
adc
mov
adc
adc
fbstp
mov
cmp
out
cmpl
ret
xchg
cld
jns
jg
mov
sbb
aas
out
addb
xchg
sbb
push
lods
push
push
sub
adc
jnp
and
push
inc
mov
arpl
push
std
je
sub
call
inc
cmp
pop
inc
xor
cwtl
dec
pop
fcomp
aad
pop
mov
addb
mov
in
mov
inc
leave
sbb
lret
fsub
sbb
movsl
add
add
daa
push
out
in
fs
shufps
mov
jl
movsl
or
jne
out
out
dec
addr16
or
cmpsb
dec
dec
xchg
out
bound
frstor
stos
cmp
enter
in
sbb
dec
lahf
stos
xchg
je
cmp
imul
repz
sbb
int3
inc
stos
add
xchg
xlat
jo
pusha
ds
xorb
mov
jl
mov
pop
and
out
inc
mov
mov
adc
pop
adc
or
lods
or
je
arpl
cmp
rol
test
fcompl
pop
add
cmp
xchg
inc
clc
out
xchg
fsubl
adc
popa
es
repnz
ss
adc
mov
lcall
xchg
sub
dec
rclb
cmp
cwtl
pop
incb
pop
push
filds
xchg
push
and
xor
clc
jo
imul
repz
fwait
sub
lea
and
ret
inc
out
xchg
sub
scas
sbb
xor
add
lea
fisubl
ja
push
pop
test
int3
jmp
dec
notb
fisubs
mov
test
movsb
fcoml
xchg
std
fdivs
push
jge
scas
and
jo
push
shll
adc
out
mov
jecxz
data16
push
dec
loope
call
inc
lods
push
inc
arpl
out
mov
dec
push
rclb
sub
push
push
xchg
and
lahf
ret
aad
pop
cmp
shll
xor
int
aas
fiaddl
jno
int3
add
mov
push
mov
clc
outsb
push
fmul
mov
test
pop
in
stc
sub
insl
sub
jae
repnz
dec
fcmovbe
sbb
jmp
js
bound
call
lds
add
cmp
xor
ret
mov
xchg
inc
pop
push
ret
std
jg
pop
mov
lea
cmp
dec
mov
add
cli
xlat
in
cmp
xchg
in
pop
add
sub
push
mov
rorb
push
cli
mov
mov
cmp
stos
and
outsb
pop
dec
sbb
mov
mov
adc
arpl
stos
adc
incb
mov
xor
inc
out
sub
stc
adc
and
cli
lcall
aaa
insl
or
mov
sub
mov
jae
enter
add
in
and
mov
insb
xchg
pop
cli
and
xchg
inc
push
addr16
mov
shrl
aaa
std
stos
mov
and
cld
inc
pop
xor
and
scas
pop
fcompl
mov
bound
and
fs
and
adc
pusha
fiadds
lcall
sub
mov
lods
sbb
pushf
push
sub
push
xor
cmp
in
stos
adc
and
lret
jnp
stos
sbb
push
clc
inc
scas
rclb
adc
xor
and
dec
pop
aas
mov
and
add
push
test
add
dec
add
test
xor
cld
xor
bndstx
fwait
cmp
sbb
push
int3
add
mov
aam
inc
insb
and
jecxz
jo
fiadds
pop
stos
cmpsl
outsl
aaa
mov
neg
fwait
mov
imul
inc
divb
mov
or
push
mov
fnstcw
and
sbb
pop
sbb
inc
sbb
add
push
xchg
lret
and
jbe
idiv
jns
mov
fbstp
inc
add
aad
je
adc
and
inc
cltd
cld
sub
pop
push
out
cwtl
cmc
mov
cwtl
es
dec
sbb
sbb
sub
push
in
ds
in
jbe
sub
rcrl
adc
pop
adc
repz
in
cwtd
push
jb
lock
push
add
out
sti
pop
lea
jp
jnp
pop
sahf
sub
loope
js
iret
and
idivb
repz
mov
push
cli
das
cmp
pop
mov
shrb
jne
mov
add
frstor
xchg
pop
addl
xchg
movnti
cmc
push
stos
insl
cmpsl
movsl
ljmp
rclb
loopne
and
cmpsw
jns
icebp
push
mov
fstpt
lock
jge
std
insl
jnp
add
andl
xchg
or
and
dec
adc
push
mov
ja
mov
xchg
or
mov
scas
movsb
inc
add
in
add
jo
pushl
xchg
pop
push
add
add
pop
das
decl
outsl
pop
sahf
in
in
out
jg
mov
pushf
sbb
cltd
inc
testl
scas
xor
or
jecxz
mov
repnz
push
xor
and
or
and
mov
pop
add
pop
and
rcl
adc
mov
mov
dec
lcall
adc
outsl
xchg
shll
mov
mov
mov
cmp
icebp
xchg
ds
cmp
data16
mov
movl
lock
push
cmp
xchg
or
sub
jle
push
int3
or
xchg
shrb
out
dec
shll
bound
mov
js
mov
lods
mov
mov
xchg
and
test
jb
and
add
mov
jmp
fwait
cmp
imul
lock
push
sti
imul
adc
imul
or
jl
in
xchg
pop
push
adc
mov
push
std
pop
mov
popa
pop
sub
xor
subb
sbb
lahf
cmp
adc
fisubs
jmp
and
cmpb
mov
jns
mov
call
and
cmpsl
arpl
adc
push
dec
imul
mov
pusha
aad
enter
fwait
jae
mov
jmp
add
ljmp
xchg
int
cmp
flds
scas
cmpl
pop
repnz
jne
xchg
jne
xchg
addr16
adc
mov
sar
push
ss
iret
pop
mov
in
mov
sub
aam
bound
js
stc
push
in
fldcw
fdivs
mov
mov
aam
rorl
cmc
inc
in
mov
cmp
jl
js
push
pop
pop
push
sarl
inc
cmp
lret
repnz
stos
jge
or
dec
push
fwait
notb
fwait
dec
cmp
sarl
ja
dec
xor
jae
push
mov
adc
and
or
add
pextrw
ds
fldenv
add
sbb
lock
fprem
shr
neg
ret
sub
xchg
fisubrs
xchg
sub
inc
repnz
push
sti
test
cmpsb
jo
ret
or
or
stos
divl
loopne
cmp
mov
mov
frstor
loopne
repz
cltd
leave
insl
cmpsb
pop
fsub
pop
pop
sub
sarb
mov
sbb
inc
sub
test
cmp
std
cmp
das
stos
fistps
shrb
add
push
inc
aas
cmp
pusha
rcrb
decl
out
hlt
es
push
xlat
xchg
xor
mov
add
xchg
pop
lcall
xchg
je
xchg
fnstenv
sti
lods
cmpsl
mov
fs
adc
scas
inc
jns
in
ret
dec
stc
add
stc
in
jne
ss
cmpsb
push
lock
std
or
mov
cltd
popf
or
add
jae
mov
es
imul
pop
dec
mov
pop
pop
xchg
addb
and
movsl
pop
xor
sbb
xor
negl
mov
js
xor
jg
loopne
mov
mov
fidivrs
and
mov
lods
pop
aad
mov
mov
pop
jns
jge
addr16
cwtl
lds
jl
xor
or
stc
out
mov
pop
notb
sub
stc
mov
out
dec
sbb
jno
dec
stos
das
sub
adc
jno
cmpsb
addr16
inc
lahf
push
test
insl
cltd
movsb
jge
push
lods
scas
cmp
cltd
out
fsub
out
jns
sbb
ss
inc
jo
repnz
popa
mull
push
inc
mov
outsl
pop
cmc
sbb
push
add
dec
inc
popa
or
adc
movsb
aas
or
leave
mov
jge
sbb
cmp
loopne
add
loopne
fldcw
adc
les
or
jo
pop
lret
sbbl
lea
in
aam
dec
xchg
adc
mov
mov
cmp
sub
push
movsl
imul
aas
fmul
leave
cmp
adc
cli
xlat
lods
cmpsb
push
hlt
rcl
add
bound
pop
inc
mov
jns
stc
and
std
inc
jecxz
mov
mov
adc
or
mov
xor
jge
imul
ficompl
sub
out
xor
arpl
imul
daa
outsb
into
hlt
pop
pause
push
jecxz
mov
push
sbb
shr
or
test
loopne
push
dec
filds
stos
lods
sarb
lods
push
movsl
data16
std
into
arpl
push
xchg
lret
out
sub
adc
xor
lret
pop
mov
ffree
enter
lahf
rcl
cwtl
xor
add
xchg
in
int
pop
mov
mov
jecxz
test
xor
je
sbb
out
push
or
dec
inc
jne
ror
xchg
hlt
xchg
jp
and
test
scas
idivl
mov
lock
jo
jns
in
jo
mov
mov
movl
mov
pop
adc
rorb
xor
adc
stos
or
out
adc
jno
inc
gs
jb
into
ret
xchg
arpl
sub
add
inc
pop
lods
cmp
ret
jecxz
push
jle
jl
daa
imul
push
loope
push
dec
xor
lret
outsb
inc
sub
imul
jae
aaa
addb
adc
pusha
mov
adc
adc
clc
mov
pop
mov
mov
cmp
mov
psllw
mov
fisttpl
repnz
and
sbb
out
pop
sbb
xchg
imul
stos
outsb
cmpsb
mov
add
or
test
shlb
dec
inc
cmpsl
in
jo
lret
nop
out
sbb
leave
sbb
adc
fisubrl
mov
popa
push
push
mov
cmc
sbb
sub
jb
cwtl
fcmovb
bound
mov
notb
jne
ret
aad
and
push
into
fbld
scas
imul
stos
lods
adc
gs
xor
and
aas
inc
in
pop
lock
cmpsl
xchg
adc
jo
cmp
nop
das
jle
sbb
cmpxchg
xor
in
repz
in
lret
push
les
idivl
outsl
sbb
xchg
insb
fwait
mov
and
jp
les
shr
jg
test
cli
scas
cli
mov
out
sbbb
js
and
dec
cs
pop
jbe
push
loope
mov
dec
and
jo
cmp
mov
inc
sub
jmp
pop
and
pop
call
pop
aad
mov
ljmp
xchg
fucomip
mov
rorb
test
or
dec
sbb
aam
pop
xor
mov
loopne
jmp
dec
filds
and
out
xor
aam
cmpsb
inc
adc
daa
cmp
adc
adc
in
out
mov
ljmp
std
or
push
hlt
scas
mov
sub
ljmp
add
hlt
ret
sub
bound
adc
mov
or
push
js
and
insl
repnz
stos
lods
mov
add
xor
lds
enter
push
add
in
movsl
jno
cmpsb
lea
lods
imul
jmp
mov
cwtl
mov
cmp
movsl
ja
lds
sub
push
je
mov
adcl
pop
lds
mov
pop
stos
pop
xor
or
xor
pusha
test
movsb
in
push
jecxz
jmp
lods
test
sub
pop
sub
movsb
jle
outsl
test
lds
and
mov
cmpsb
ret
cmp
popa
push
and
lret
add
mov
add
inc
addr16
repnz
mov
psrlw
lret
faddl
out
mov
into
xor
xor
ljmp
lret
int3
iret
insb
shlb
call
and
push
dec
ret
push
push
push
jg
and
sub
xchg
test
mov
int3
arpl
outsb
xor
outsl
jbe
in
fldt
and
jae
loop
loop
jno
jge
pop
pop
mov
push
add
and
aad
aad
cltd
xchg
ret
dec
push
cmp
dec
inc
push
add
orl
cmp
ja
fnsave
xor
sbb
sub
cmp
mov
inc
inc
jne
out
dec
xchg
xchg
and
sub
pop
jns
ds
les
sub
xchg
mov
add
scas
xor
es
test
addr16
lret
jp
push
mov
call
in
jo
scas
jne
sub
jmp
mov
loop
jle
fstps
popa
lcall
aas
sbb
cmpsb
add
cli
push
icebp
fmul
punpckhwd
xchg
bound
xor
xor
inc
fnstsw
jmp
or
in
xchg
dec
imul
stc
movsl
mov
and
lds
loopne
mov
cwtl
push
inc
imul
cwtl
xorl
sub
cltd
imul
mov
adc
sbb
pop
popf
push
inc
cmp
sbb
mov
mov
repnz
push
pop
inc
xor
xchg
inc
jecxz
xchg
sbb
pop
fcomps
push
sarl
push
fs
outsl
cli
out
lret
lcall
mulb
pop
fwait
push
mov
popf
dec
imul
je
lahf
jbe
pushf
push
pop
mov
lahf
dec
mov
jge
jbe
leave
inc
or
jo
mov
cmp
sti
dec
es
pop
push
stc
idivb
daa
cmpsb
inc
cwtl
sub
int
inc
push
into
cltd
pusha
dec
ret
sub
xor
mov
fimull
or
and
sub
mov
cli
pop
fdivs
mov
push
leave
push
xchg
and
lret
sub
mov
jecxz
lahf
insb
dec
jne
add
sbb
sub
out
mov
repz
fcoml
fidivl
insl
testb
jg
xor
repnz
inc
ljmp
add
insb
jo
ds
les
inc
dec
pop
flds
enter
dec
ljmp
mov
outsl
sub
fistpll
push
aaa
mov
gs
push
dec
add
repz
mov
ret
adc
out
mov
loop
mov
rolb
leave
les
int
mov
pop
xchg
rorl
sarl
outsl
enter
aam
subl
jnp
inc
jne
repnz
outsl
faddl
aam
dec
pop
cmp
pop
pop
leave
cmc
icebp
or
mov
add
or
adc
add
in
dec
sar
mov
fdivs
adc
mov
daa
fldt
ljmp
in
lahf
adc
and
xchg
or
sbb
dec
clc
popf
mov
mov
sti
mov
pop
or
push
pop
cli
popf
fistl
aaa
pop
out
inc
or
into
inc
mov
inc
nop
or
add
add
add
add
add
add
fcompl
es
aam
out
jae
out
mov
jnp
dec
pop
pop
fcompl
add
fcompl
fwait
xchg
divl
dec
xor
add
fcompl
add
fcompl
add
fcompl
inc
xchg
pop
out
mov
flds
dec
pop
pop
fcompl
add
fcompl
add
fcompl
add
fcompl
add
fcompl
add
fcompl
or
adc
inc
mov
loopne
adc
add
add
scas
add
and
add
int
add
negb
add
add
or
adc
inc
mov
rolb
add
inc
adc
add
or
add
scas
add
mov
add
pusha
xchg
cs
add
or
adc
inc
mov
rolb
add
rorl
add
add
add
add
or
adc
inc
mov
rolb
add
sahf
or
add
push
add
jge
add
push
add
es
add
add
or
adc
inc
mov
rolb
add
or
add
add
add
xchg
rolb
or
adc
inc
mov
rolb
rolb
sbb
add
add
add
xchg
rolb
sbb
add
sub
dec
dec
add
add
or
adc
inc
mov
rolb
rolb
add
sbb
add
add
add
add
add
add
add
and
movsb
popf
mov
and
add
add
add
test
add
add
ljmp
add
add
add
or
jg
inc
mov
loopne
push
add
add
add
in
add
scas
adc
add
les
add
or
jg
inc
mov
loopne
rolb
add
push
add
add
xchg
incl
add
and
jnp
add
add
jb
sub
pop
inc
push
hlt
push
cmp
ja
iret
push
cs
in
adc
ficomps
dec
repz
xor
push
iret
cmc
inc
enter
gs
int3
test
call
cmp
fwait
enter
cld
xor
dec
push
jg
add
scas
insb
xchg
and
dec
push
sbb
fs
add
push
push
push
nop
lahf
addl
cltd
pop
adc
mov
aad
in
pop
shl
mov
pop
sahf
arpl
dec
and
in
stos
push
add
cmp
popa
inc
or
jbe
sarl
jecxz
out
mov
fimull
das
cmpsb
aad
adcb
jmp
clc
sarb
stc
xor
mov
pop
ret
lds
push
sbb
rol
aam
movsb
incb
sbb
or
fcmovnb
sub
and
sbb
lods
arpl
pop
fmull
test
hlt
lds
mov
loope
mov
cmp
outsb
insl
sub
popf
call
lea
sbb
push
add
sbb
mov
mov
pop
popa
ljmp
aam
out
dec
xchg
pusha
lret
dec
dec
sbb
mov
in
shlb
lret
add
mov
out
incl
orb
mov
push
ds
xor
pop
pop
fstpl
mov
xchg
sub
dec
cmp
or
pop
js
popw
mov
jbe
push
or
xchg
insl
dec
out
pslld
xchg
adc
test
or
and
push
sub
add
hlt
mov
ror
or
sarl
sub
inc
dec
stos
mov
cmc
lods
leave
sub
add
lret
or
push
imul
jne
mov
and
mov
add
loope
xchg
cltd
add
add
mov
leave
test
adc
xchg
xor
mov
cmp
mov
jno
mov
cltd
jge
add
int3
dec
test
and
mov
push
mov
sub
mov
jae
inc
mov
subl
pop
jnp
fldt
clc
mov
pop
aas
pushf
jg
sti
repz
push
or
push
clc
or
mov
scas
call
xchg
fists
pop
cmp
or
hlt
xchg
je
dec
bound
adc
mov
orb
xor
or
or
pop
dec
mov
fdivl
cli
loopne
inc
loop
cltd
outsl
pushf
mov
loopne
sbb
lds
cli
jl
fsubrp
jns
nop
push
pop
sub
jmp
ljmp
mov
and
aam
add
mov
mov
push
mov
mov
xchg
shll
mov
movsb
sub
ljmp
push
call
hlt
jle
mov
add
std
sahf
push
mov
sti
push
stos
je
iret
inc
cmpb
mov
xor
jo
xor
mov
adc
sbb
push
data16
pop
inc
lds
sub
inc
mov
mov
inc
ja
pusha
sub
nop
push
push
mov
stos
lods
cmp
repnz
mov
dec
out
sbb
mov
lcall
enter
sbb
sti
pop
mov
int
xchg
movsb
in
ret
lock
and
mov
arpl
mov
pop
ror
loop
lds
ja
jns
imul
or
fs
pop
push
aam
cli
inc
mov
cmc
xchg
test
jge
jo
aam
jae
aam
mov
lds
mov
testl
mov
out
adc
lock
jbe
outsb
sbb
xor
pusha
mov
and
pop
add
dec
rclb
add
add
cmp
fsts
lret
aad
js
xchg
xchg
inc
xchg
sbb
push
pop
or
mov
cmp
jge
das
sub
cltd
leave
jno
loope
repz
fcomps
mov
sbb
pushf
out
ljmp
push
inc
fidivs
aad
in
jb
push
jge
lahf
paddusb
xchg
mov
add
fsubr
scas
arpl
movsl
out
cwtl
loopne
sub
ds
aaa
push
and
test
mov
sbb
into
xlat
cmp
xchg
fadds
inc
mov
lods
imul
rorl
cmpl
xchg
cmp
jno
daa
mov
outsb
xor
and
push
adc
push
into
lods
repz
xor
pushl
shl
rcl
cmpsb
daa
sbb
inc
cmp
inc
icebp
sub
int3
adc
cmp
push
fisubrl
sbb
or
xchg
jecxz
rclb
inc
repnz
sbb
push
sbb
subb
iret
xorl
test
in
pop
repnz
cltd
jle
push
cmp
cs
xor
lret
xchg
xchg
stos
lods
pop
xchg
out
mov
push
xchg
aad
jo
jg
out
sahf
add
test
ret
add
fldenv
push
jo
int3
xchg
mov
jno
jg
jecxz
xchg
and
out
aaa
xor
pop
lcall
adc
dec
mov
or
cwtl
mov
stos
mov
inc
lret
sub
imul
int
sbb
cmp
fstpt
aas
mov
jae
pop
add
xchg
pop
pop
xor
andw
out
push
rcrb
and
mov
xchg
out
mov
push
and
inc
dec
xor
xchg
or
xchg
push
daa
adc
sub
int
jbe
das
stos
lods
xor
outsb
mov
mov
mov
outsl
sbb
ret
xor
mov
stc
cltd
sarl
gs
enter
mov
roll
loopne
out
xor
lret
mov
test
mov
shll
xor
int
test
push
negl
loop
xlat
jmp
xor
cmp
jge
ret
fiaddl
bound
cmp
movsb
inc
jo
ret
inc
testl
adc
sbb
loope
pop
mov
mov
cmp
fs
adc
xor
cmpsl
das
call
fimull
aad
fisttpll
jo
std
test
sub
out
sub
inc
mov
daa
cmpsl
inc
jmp
sub
xchg
sub
adcb
mov
test
sti
std
clc
dec
cmpsb
cwtl
pop
movsl
jb
mov
dec
mov
inc
fmuls
das
das
loope
mov
xor
int3
fimuls
int
pop
lea
movlps
or
data16
lods
mov
icebp
lcall
stos
fs
cld
flds
xchg
stos
sti
cmp
sbb
inc
outsl
or
push
mov
mov
mov
xlat
pop
xchg
ja
push
stos
pushf
ret
push
rolb
lea
gs
sub
push
mov
cli
or
and
mov
int3
out
mov
insb
push
xor
xchg
cmpsl
jo
inc
xor
jb
fwait
stos
enter
push
enter
mov
add
ds
pop
or
movsl
sub
cmp
sub
sub
inc
bnd
clc
xorl
fnstenv
sbb
or
sarb
scas
scas
enter
add
fistps
mov
sbb
jo
je
jae
mov
lods
jge
pop
push
f2xm1
inc
adc
fucom
xchg
inc
jbe
pop
mov
int
push
mov
pop
mov
lea
sub
mov
lcall
mov
js
xchg
dec
std
loope
outsl
sub
push
mov
ss
xor
pop
fidivl
gs
and
xchg
or
jae
jecxz
insl
ja
push
dec
jle
lcall
mov
rclb
mov
insl
push
mov
mov
mov
sub
insl
xchg
mov
mov
dec
jmp
outsb
loope
insl
inc
mov
jmp
or
pop
loopne
mov
cmp
sbb
push
popf
movsb
inc
pop
sub
outsl
pop
int
hlt
addl
xor
inc
xchg
lods
xor
pop
and
in
sbb
aad
push
inc
out
pusha
in
push
push
push
repnz
cli
mov
xor
ds
push
lea
and
mov
mov
out
push
int
out
je
sbb
or
ds
aad
mov
xor
aam
pop
call
into
mov
pusha
and
cmp
jbe
mov
mov
adc
fldenv
mov
scas
push
mov
pusha
nop
mov
imul
jge
fcompl
adc
cmp
mov
and
push
mov
and
imul
cwtl
jl
dec
bound
sahf
mov
fcompl
mov
and
sbb
xor
or
lods
inc
sarl
and
ja
mov
cmp
ficomps
pop
insb
iret
or
xor
lods
cli
dec
pushf
ret
shrl
insb
std
ss
push
add
xchg
in
jo
loope
mov
in
inc
adcb
push
mov
in
lahf
sbb
scas
adc
jb
cmc
pop
out
in
pop
fisttpl
loop
or
and
dec
out
add
icebp
mov
lods
xchg
negb
sbb
divps
rclb
sbb
pop
xchg
or
jl
popa
mov
fwait
inc
aam
add
cld
das
enter
mov
fwait
call
and
in
inc
es
std
push
movsl
das
push
mov
jmp
flds
loop
mov
gs
cwtl
cmp
jmp
enter
mov
xor
adc
aad
loop
pop
mov
mov
and
in
popf
jmp
xchg
mov
push
shrb
mov
or
mov
adc
cmp
aas
inc
lret
inc
dec
sarl
xchg
push
rolb
sar
inc
aaa
add
adc
gs
push
adc
shlb
je
add
jno
add
push
mov
int3
push
scas
rolb
or
and
into
popa
int3
jg
add
out
adc
dec
imul
add
imul
dec
xlat
dec
outsb
jb
jmp
or
adc
xor
mov
imul
lods
or
mov
mov
jns
lods
test
cmp
sub
mov
notl
jp
push
mov
cld
push
mov
add
xor
fwait
arpl
pop
adc
pop
test
sbb
cs
inc
test
cmp
lds
pop
or
sbb
iret
decb
stos
adc
and
sbb
or
fcomip
leave
loopnew
sub
add
and
cwtl
cltd
and
in
cmp
loope
push
data16
sahf
out
pop
movsb
sbb
aad
in
jg
push
and
in
lds
mov
add
imul
jnp
data16
mov
daa
pop
jae
adc
pop
xchg
dec
fldenv
push
sub
lods
add
clc
xor
jns,pn
daa
push
aaa
jne
andb
mov
fs
inc
movsl
data16
and
test
adc
or
std
xor
ret
jp
and
int
je
xor
xor
mov
pushf
sbb
gs
xor
insl
pop
fwait
push
shrb
test
stos
lods
cmp
or
xor
sub
sarb
xchg
xchg
push
lea
cmp
push
je
mov
int3
xchg
sti
pusha
sbb
test
add
or
mov
dec
lods
mov
cmp
test
mov
std
dec
and
clc
xchg
mov
popa
inc
stos
je
jl
adc
jecxz
subb
lea
je
mov
mov
test
sub
lret
loop
sub
inc
inc
addr16
adc
loope
mov
adc
xor
sub
lds
pop
iret
ss
js
out
popa
mov
std
pop
xor
outsl
mov
clc
dec
adc
dec
inc
mov
cmp
mov
xchg
shrb
or
mov
mov
and
in
mov
sti
nop
stos
cwtl
aas
movsb
xor
lret
jmp
scas
dec
hlt
in
adc
ja
icebp
push
xchg
insl
lahf
cld
xchg
sbb
fisttps
fimuls
lea
movsb
dec
pusha
xchg
aad
pop
inc
sbb
inc
pop
scas
je
out
insl
nop
imul
jne
out
or
jb
add
mov
lcall
daa
sub
imul
jo
dec
pop
cmp
adc
subl
dec
xor
inc
iret
mov
sahf
clc
pop
and
jecxz
fucomi
cmc
insb
in
in
aam
shlb
loopne
mov
loop
sbbl
shlb
ja
pusha
mov
sbb
jle
hlt
popf
mov
inc
aam
sub
in
jmp
mov
cmp
jmp
je
aad
or
dec
add
cltd
xor
add
pop
in
mov
jne
int
js
cmp
out
xchg
push
add
push
pop
and
ret
xchg
rorb
mov
xor
push
mov
insl
dec
pop
or
add
inc
xchg
mov
jnp
shlb
inc
ds
shl
jo
test
push
and
insb
and
dec
shr
fcmovnu
push
pop
enter
ss
mov
mov
pop
fcoml
popf
and
pushf
sub
push
sbb
push
jo
arpl
mov
negl
pop
insb
xchg
xchg
cmp
mov
xlat
ss
mov
jne
mov
int3
movsl
xchg
jmp
dec
push
and
mov
mov
outsb
or
mov
pusha
in
add
xor
push
xchg
nop
fcmovbe
mov
mov
inc
int3
push
fwait
inc
data16
pusha
jb
cmp
stos
xchg
and
sbb
cmpsl
imul
inc
ss
jmp
pop
push
lods
int3
jo
jle
sti
shrl
push
out
cmc
fcmove
mov
mov
lahf
sub
sahf
mov
push
pop
jbe
push
lods
dec
cmpsb
stos
cmc
push
dec
and
sub
and
repnz
daa
in
adc
adc
fisubs
push
adc
out
popa
push
orb
sub
and
out
jg
pop
andl
jmp
xchg
add
or
loope
cmp
push
sub
lret
out
adc
movsb
sub
stc
fnstenv
call
dec
into
mov
insb
fildll
popf
jge
pop
arpl
push
fnstsw
add
cmpsl
outsb
xor
cmp
push
orl
dec
mov
leave
es
jl
popa
enter
add
popa
push
dec
cmpsl
aad
imul
jle
xchg
dec
sbb
pop
cld
inc
cmp
lods
xchg
cmp
ret
fnstenv
lock
or
lock
jg
jae
clc
sbb
push
mov
ret
and
negb
push
xorl
in
or
sahf
imul
pop
jbe
ds
lods
xor
sbb
push
xorl
mov
cmp
pop
dec
fdivp
xor
lods
sbb
mov
sahf
mov
not
xchg
fstps
dec
pop
sub
cmp
lea
fisttpll
sub
out
fcoms
push
add
add
es
pop
das
inc
add
cmp
fld
jmp
mov
jl
loop
mov
lea
jne
push
push
fisubrs
mov
push
push
mov
add
je
insl
dec
mov
fidivrs
inc
sarl
int
fnstsw
push
inc
and
sbb
xchg
cmpsl
jecxz
test
adcl
call
fwait
add
xor
sub
leave
adcb
fdivr
repz
je
dec
rorb
popa
and
or
pusha
or
cmpb
adc
xlat
pop
leave
pop
lret
scas
jmp
cmp
push
fninit
andl
lock
movaps
push
xchg
andl
sahf
xchg
sarb
es
cld
test
jecxz
jp
xchg
fwait
mov
sbb
mov
rorl
dec
cmp
call
xor
mov
inc
lods
in
push
push
mov
sbb
shll
jb
scas
scas
arpl
test
into
add
mov
cmp
pop
daa
pop
cltd
jb
stos
out
subl
jae
daa
or
or
pop
or
inc
jg
cmp
lret
add
adc
jl
icebp
pop
inc
dec
popa
mov
adcb
xchg
cwtl
data16
rolb
sbb
jne
pop
sahf
push
xchg
cli
test
sbb
xchg
fists
pushf
mov
mov
mov
inc
cmp
pop
or
data16
xlat
or
dec
pop
sbb
or
das
sbb
lods
push
and
mov
scas
mov
bound
idivb
and
cwtl
push
insl
cli
movsb
test
lea
xchg
xor
pusha
sbbl
sub
sahf
cwtl
inc
std
nop
jno
fwait
lods
cltd
add
sbbl
lcall
cmpb
sbb
and
cmp
lods
mov
dec
js
jl
ss
mov
rcrb
rcll
mull
test
jb
cwtl
rorl
xchg
sbb
daa
mov
popf
cmpsl
xlat
push
and
int
icebp
sub
aaa
or
sub
pushf
filds
or
and
nop
inc
dec
pusha
cltd
fildl
and
mov
dec
shrl
jge
clc
mov
mov
out
and
xor
mov
mov
cmp
ret
cmp
pop
out
shll
test
lods
mov
shr
addr16
stos
cmpsl
clc
add
mov
sahf
dec
leave
or
dec
add
test
mov
jne
stos
push
ja
cs
pop
ljmp
and
rcl
fcoms
xchg
ljmp
adc
xchg
sbb
xor
dec
iret
mov
xchg
adc
jl
dec
into
or
mov
ja
lahf
sub
push
jp
push
mov
push
inc
cmpsb
clc
movsb
insb
xor
ja
lds
push
movsb
push
push
pop
sbb
jle
and
es
stos
clc
jmp
test
je
cli
add
jp
lea
push
jne
js
frstor
movsb
mov
jg
push
sbb
push
mov
push
mov
push
xor
or
sub
cmp
stc
add
fisttps
ds
and
addb
xchg
sub
mov
or
test
mov
divl
imul
adc
in
xchg
ljmp
imul
dec
or
adc
leave
add
loope
lock
push
out
dec
dec
and
enter
repnz
cmp
or
aad
xor
add
mov
add
repnz
test
xchg
sbb
pop
push
rclb
in
in
pop
scas
inc
repz
fwait
lret
jb
sbb
xchg
add
xchg
daa
outsb
inc
mov
dec
movsl
or
sub
shlb
pop
mov
cmp
sbb
dec
mov
popa
inc
push
inc
sti
push
xchg
mov
and
insb
icebp
movsl
push
dec
test
cmc
popa
shrb
mov
movsl
jae
movsb
in
add
cmp
mov
enter
nop
xor
sbb
aad
ss
xor
and
cmp
inc
or
cmp
jae
lods
dec
ljmp
mov
fwait
inc
xchg
stc
roll
mov
xchg
cld
clc
pop
cmp
push
pop
loope
cmp
leave
mov
andl
pushf
icebp
mov
cmp
scas
push
sbb
adc
xor
int3
adc
or
pusha
xchg
sub
jg
out
pop
dec
int
roll
sub
lret
push
pop
fcmovnb
test
mov
or
in
and
add
mov
jae
clc
in
xchg
inc
jge
adc
cmp
out
dec
mov
jb
iret
jae
pushl
js
cltd
in
iret
dec
xor
xchg
mov
shll
xchg
stos
mov
jo
ljmp
push
addr16
mov
jle
aaa
pop
mov
lea
aaa
push
roll
inc
cmp
cmp
push
movsl
push
pop
dec
adc
push
jge
int3
mov
inc
xchg
jnp
fidivrl
fs
fsts
push
inc
fmul
dec
repz
pop
les
cltd
aaa
push
dec
ret
imul
cmp
jae
inc
je
hlt
sub
pushf
add
pushf
call
inc
shlb
fld
push
mov
pop
adc
pop
dec
iret
inc
dec
mov
cs
jl
aam
pop
or
push
mov
out
pop
jb
fidivrs
jl
daa
int3
aam
cltd
jne
ja
and
dec
adc
lods
sub
jg
icebp
jmp
pop
into
sub
pop
jo
adcb
xchg
movsb
jg
add
cmc
in
sti
sub
js
dec
pusha
push
sbb
fwait
xchg
and
jl
rclb
clc
arpl
scas
push
mov
push
leave
call
mov
cs
cs
jp
hlt
or
in
fstps
inc
mov
fdivrl
jp
and
stc
xchg
xlat
mov
loopne
or
dec
scas
loope
and
xor
push
lock
sbb
js
daa
insb
dec
pop
xchg
mov
pop
in
adc
dec
sti
inc
push
mov
scas
pop
pop
aad
out
nop
push
push
ret
and
xor
mov
cmp
push
dec
mov
mov
jo
add
cmp
add
push
mov
je
sub
jecxz
sbb
inc
jb
test
push
push
pop
push
jecxz
adc
inc
inc
xchg
pop
pop
or
mov
jb,pt
jp
les
sbb
fidivs
rolb
rol
ret
imul
xchg
insl
pop
inc
and
lcall
sub
ffreep
inc
les
and
imul
push
mov
fcmovb
jmp
cmc
add
xchg
lds
xchg
and
xor
xbegin
jo
cmp
jge
sbb
sub
xlat
push
shll
lahf
inc
jnp
shlb
cmc
pop
fwait
cs
dec
pop
out
clc
ret
fistl
fisubrl
inc
outsl
and
jmp
pop
jae
ss
adc
outsl
aaa
pop
aad
test
inc
and
xchg
hlt
lahf
fdivrl
push
push
xor
enter
push
mov
out
jmp
pop
push
ret
sub
stos
int3
inc
sbb
out
jle
outsb
and
fadd
sbb
mov
aaa
inc
daa
movsb
or
sbb
jmp
and
insb
shl
dec
jmp
js
add
adc
xor
imul
cmpb
jae
dec
fisubl
lea
out
and
mov
mov
ret
add
xor
addb
sbb
int
rcrb
add
test
std
jo
mov
lock
mov
in
or
push
repnz
imul
add
mov
push
popa
lahf
scas
cmc
loopne
adc
inc
in
pop
insl
push
pop
lret
jmp
lock
mov
ljmp
cmp
je
in
jl
mov
loopne
mov
rorb
cld
call
stos
sub
jo
inc
hlt
movsb
int3
sahf
stos
push
outsl
in
data16
cmp
gs
test
cmp
popa
push
xor
in
leave
or
gs
in
outsl
sahf
push
ss
push
mov
test
push
movsl
add
iret
fs
lods
or
aas
mov
sbb
jmp
or
popl
cwtl
in
add
mov
imul
cmpsl
and
leave
mov
cmp
cmp
xor
xchg
xchg
cs
bound
pop
adc
jmp
orb
pop
push
sbb
adc
mov
lret
dec
add
push
mov
inc
movsl
dec
rorb
pop
loopne
lea
push
rcll
push
jmp
pop
mov
test
mov
cmp
ljmp
ss
or
nop
cmpsl
push
cs
data16
push
xchg
movzwl
cmp
rolb
pusha
scas
sbb
into
mov
push
inc
test
mov
jl
sarb
ss
inc
and
jge
fimull
mov
jge
xor
loop
roll
sbb
add
mov
mov
and
dec
xchg
std
rcl
cmp
xor
jg
xchg
jmp
or
sbbb
movsb
shll
and
jmp
sahf
nop
mov
test
mov
daa
push
xlat
iret
push
adc
inc
movl
pop
cmp
sub
jecxz
push
mov
xchg
push
or
insb
sbb
gs
scas
xor
lock
xchg
int
scas
lea
sub
dec
sbb
mov
inc
push
sbb
orl
popf
das
jns
mov
js
xor
pusha
add
test
pop
inc
mov
xchg
mov
sbb
aaa
mov
xchg
in
int
pop
sahf
cmpsl
add
ret
lret
lods
hlt
inc
add
mov
mov
push
mov
fsubrp
dec
jg
cmp
mov
cld
mov
pop
add
ret
cmp
push
aas
movsb
jno
outsb
addl
xchg
lock
xor
push
or
into
mov
jecxz
cld
insl
frstor
sbb
out
mov
or
mov
nop
dec
inc
cmp
outsl
inc
call
mov
mov
lds
sbb
xchg
mov
loope
or
xor
mov
in
adc
sti
add
dec
mov
fcoms
pop
outsb
pop
sub
jae
pop
mov
stc
loop
stos
ret
aad
test
jbe
ds
mov
mov
inc
fwait
push
mov
push
loopne
sbb
outsb
xchg
xorl
mov
jmp
enter
lds
aaa
and
jle
mov
ds
test
add
add
out
loop
mov
dec
xchg
push
frstor
and
or
pushf
xchg
js
inc
cmc
bound
inc
mov
mov
push
xor
cmpsl
push
lds
push
sbb
adc
cmpl
sub
test
pop
cmp
mov
dec
mov
nop
sbb
fcmovne
push
adcl
aam
inc
ficomps
and
add
rorb
cmpsb
insl
fiadds
cmpsb
inc
fisubl
push
xchg
std
add
cmp
push
cmpsl
rorl
jb
dec
das
jne
fsubl
loope
nop
out
cmp
adc
or
les
or
mov
popa
cltd
inc
fistpll
adc
xor
shlb
xchg
popl
std
ret
loope
cs
gs
jbe
pop
mov
pop
adcb
mov
pop
xchg
jbe
cmpb
in
and
mov
cs
loope
push
jo
cmp
adc
mov
pop
adc
push
mov
sub
push
inc
scas
add
jb
inc
popa
aad
in
push
dec
out
pop
fidivrs
out
js
jno
adc
pop
pop
aaa
xchg
mov
jg
lret
cld
push
fisubs
push
dec
mov
xchg
icebp
dec
sbb
cmpsb
mov
stc
push
lods
out
insb
imul
jnp
testb
add
xor
xlat
mov
sbb
test
sbb
add
xchg
push
fmuls
sarb
pop
inc
mov
pusha
push
in
aaa
xchg
lds
sbb
subb
push
mov
jb
or
jae
jmp
nop
fwait
push
lahf
int
fwait
enter
jo
cwtl
dec
in
jl
push
jg
jb
sarb
movsb
xchg
jno
push
jae
mov
daa
sbb
into
jl
sar
cmp
xor
mov
push
and
push
push
pop
adc
and
adc
cmp
mov
inc
or
push
jb
pop
inc
clc
push
jae
pop
gs
movsb
js
cmp
cmpsb
lret
inc
shlb
nop
or
dec
subl
enter
arpl
dec
dec
jo
cld
lahf
push
pop
pop
outsb
or
mov
popa
popa
cs
pusha
aam
ficoml
cwtl
ds
or
or
in
sbb
or
ret
out
testb
cltd
and
pushf
xor
xchg
mov
outsl
adc
xor
push
cli
xor
adc
repnz
pop
mov
int3
mov
loop
push
addr16
add
daa
into
outsl
xchg
clc
mov
les
clc
gs
pop
fcmovb
fimull
add
das
mov
xchg
cmp
in
mov
dec
lock
push
push
push
outsb
fsubrs
sti
sub
push
ss
movaps
int
sar
pop
cmp
mov
cmp
loope
adc
xchg
sub
bound
sbb
into
cmp
pop
push
and
add
repnz
in
pop
aas
lahf
testb
mov
cmp
loop
cmpsb
mov
enter
aaa
sbbb
notl
and
xchg
jp
cmp
imul
pop
push
dec
push
push
ljmp
mov
jne
clc
pop
xlat
enter
cmp
leave
lahf
xchg
jmp
jg
mov
pop
or
rcr
enter
mov
aaa
mov
or
jno
cmp
cld
dec
lret
inc
in
pusha
and
pusha
jno
scas
or
stos
sbb
adc
inc
xchg
in
or
mov
clc
in
mov
and
cs
and
or
add
jne
ficoml
or
cmpsb
xor
cmpsb
mov
out
lock
dec
xor
rcr
lret
mov
pop
loopne
push
lret
dec
lods
jle
pop
mov
mov
pop
lahf
inc
scas
add
data16
jmp
outsb
jo
sbb
or
pop
mov
push
pop
adc
cmp
xchg
mov
dec
lds
ss
pop
push
sub
pop
or
or
popf
in
repnz
bswap
adc
mov
cwtl
push
lods
stos
push
test
mov
test
pop
cmpsb
outsb
addl
xor
xlat
int
pop
dec
popa
push
inc
push
add
adc
push
in
fdivs
xor
ja
pusha
pop
mov
sbb
push
sub
outsb
insl
jmp
stos
pop
cmc
mov
xor
loop
daa
add
pop
cmp
push
push
adc
ret
andb
and
jmp
pop
int3
xadd
dec
xchg
nop
mov
mov
jecxz
shl
out
mov
andl
cli
mov
insb
daa
incb
fidivl
push
pusha
test
call
leave
and
lds
add
push
into
or
mov
push
mov
push
shl
add
test
ds
cmp
or
loopne
xchg
bound
lahf
mov
sbb
rcr
or
xchg
mov
or
jg
cmp
mov
xor
pop
ljmp
push
or
outsl
mov
mov
add
cmp
cmpsb
xchg
cli
xchg
dec
inc
iret
jle
fisttpll
sub
out
xchg
cwtl
mov
or
xor
mov
sbb
mov
sbb
pop
orb
cmp
rorb
pop
jmp
outsl
mov
xlat
dec
icebp
add
out
sub
push
int
and
jns
mov
bound
jg
mov
fcompl
ret
lret
mov
pop
lahf
mov
cmpsl
movsl
xor
ss
cmovnp
cmp
xor
add
ljmp
jmp
mov
test
sbb
cld
cwtl
xor
and
mov
jecxz
cwtl
pop
inc
into
sbb
out
into
rcr
aaa
fsub
push
push
in
pop
jbe
repnz
cmp
mov
push
ret
adc
mov
jb
stc
fucom
fstps
ja
xor
push
mov
xor
jmp
or
wbinvd
mov
jmp
fadds
popa
sbb
mov
mov
icebp
mov
sets
lcall
jmp
mov
imul
stc
mov
lret
outsb
add
xchg
push
add
scas
adc
sub
push
jb
aad
pop
es
sub
xor
dec
jmp
dec
sub
mov
lock
push
test
xor
push
movsb
ss
mov
pushf
sbb
and
addr16
sub
cmpsb
inc
cmpsl
mov
mov
sub
mov
fs
es
ret
mov
mov
mov
xchg
shrb
ss
add
and
xor
xor
xlat
mov
in
jl
fsts
sbb
push
call
cmp
in
sub
mov
es
mov
mov
and
lds
fsts
fsubr
cmc
loope
stc
jecxz
xor
push
insl
mov
jp
mov
pushf
cmp
stos
imull
mov
inc
jle
mov
lahf
mov
sahf
inc
adc
cwtl
dec
fidivrs
sahf
jl
ficoml
push
loope
add
test
fucom
nop
fs
mov
loop
rcrb
sbb
xlat
daa
or
rolb
test
mov
mov
es
push
pop
or
xor
cltd
jne
and
sbb
mov
lret
push
stc
adc
dec
and
mov
pop
call
cmp
mov
dec
ja
add
jbe
pushl
push
pop
cmpsb
testl
or
fwait
shrl
stos
mov
sbb
push
mov
or
add
movl
test
mov
daa
js
stos
sub
lahf
out
mov
aad
push
sub
cld
jge
into
cld
fs
and
push
mov
insb
decl
dec
mov
insb
inc
dec
inc
ss
bound
leave
popa
mov
xchg
add
pop
stc
xchg
cmp
clc
push
shll
in
pop
fcoms
sbb
or
xlat
out
aad
add
test
or
fstpt
xchg
dec
xchg
xchg
ds
dec
pusha
push
mov
sub
push
fwait
in
mov
xchg
mov
adc
scas
ret
sub
mov
test
or
shl
jae
movsl
and
mov
outsl
pop
lahf
stc
and
mov
icebp
and
or
sbb
mov
mov
into
sub
cmp
lcall
mov
mov
sbb
push
cmc
lds
ret
xchg
cmp
ds
pop
call
inc
mov
push
in
push
or
incw
rcrl
sbb
mov
mov
test
ja
pop
sti
mov
mov
push
mov
shl
jbe
push
fisubs
xor
sti
mov
fcoms
lods
mov
mov
xchg
sub
daa
ja
mov
sub
lock
out
fdivr
les
pop
aas
inc
out
loop
xor
inc
mov
and
fdivrs
loopne
loop
pop
cwtl
pop
inc
xchg
lods
shrb
add
cmpsl
add
out
add
mov
jmp
sbb
xor
add
out
jo
dec
cmpl
mov
pusha
sbb
and
mov
fdivr
pushf
jne
push
in
rcrl
fs
stc
gs
push
jle
push
push
in
or
lahf
inc
xchg
gs
jle
xchg
mov
ret
inc
lds
rorl
int3
dec
scas
fwait
rorb
jnp
sbb
movl
mov
xchg
lcall
jge
orb
mov
jo
inc
aas
add
mov
pop
ds
fcomps
mov
ficoml
xor
xor
test
mov
inc
pop
adc
add
aad
loope
in
jo
and
add
iret
jno
bound
inc
out
sub
mov
daa
sbb
rcl
mov
sti
dec
jae
push
ss
test
pop
mov
push
stos
sbb
test
dec
inc
js
dec
lret
data16
pop
inc
fldenv
mov
cmp
pop
or
sbb
outsb
int3
push
rolb
mov
xchg
clc
mov
divl
cmc
xchg
out
add
pop
push
mov
xchg
pop
ret
dec
je
leave
mov
movl
int
aam
cmp
cmp
push
in
sub
je
andb
push
fmuls
ljmp
sub
dec
push
cmp
sbb
xchg
int
dec
int
xchg
mov
int3
mov
mov
sbb
xchg
decl
cmp
aaa
pop
lahf
dec
xor
scas
pop
enter
mov
rol
aad
in
push
pusha
sbb
lock
insb
ljmp
mov
sbb
pop
or
sbb
pop
pop
stos
aad
mov
in
ja
lret
out
cmp
das
push
shll
jmp
jne
repnz
pop
xor
mov
cld
pusha
sar
test
fidivl
push
call
sub
and
pusha
jne
lret
icebp
jge
dec
cmp
mov
mov
and
cmp
stos
xchg
mov
push
addr16
scas
dec
js
push
cmpsb
or
inc
ret
jmp
sub
mov
jge
enter
ja
subb
test
pop
jle
shrb
cmc
add
movb
mov
pushf
xor
add
inc
jl
cmc
int3
out
pop
mov
cmpl
dec
icebp
and
mov
inc
dec
or
sub
mov
or
mov
mov
pop
rorb
testl
cmp
bound
xor
in
jl
cltd
repz
mov
jle
and
aas
pop
and
es
xchg
shll
idivb
cld
pusha
pop
xchg
push
sahf
nop
mov
nop
or
jbe
cli
sub
cmp
jl
dec
jge
cli
int3
shrb
sub
push
mov
subb
fists
cmp
jmp
add
or
cmp
sub
or
aas
sbb
lret
push
mov
inc
test
ret
or
mov
sbb
nop
or
divl
in
sti
jns
cmpsb
mov
xchg
sbb
testb
push
outsl
cmp
mov
stos
sub
adc
pusha
cmp
nop
js
adcb
lret
mov
adc
cmp
xor
decl
push
ret
addr16
adc
mov
dec
and
int3
fwait
je
es
lea
cmovp
enter
jmp
xor
sbb
or
sub
pop
dec
es
jmp
mov
decl
adc
js
lret
dec
add
and
jnp
pop
xchg
adc
pop
pop
dec
outsl
xchg
in
dec
sahf
push
call
or
ret
xlat
dec
xchg
push
es
pop
pushf
or
aad
iret
gs
jno
fldl
int3
sub
adc
xlat
ret
pop
pop
pop
je
mov
dec
imul
insb
lods
cmp
push
movl
out
sub
pop
sub
cmp
adcl
out
loopne
outsl
xlat
incl
js
in
cli
pushf
in
pop
adcb
insl
or
add
or
push
shl
or
mov
ret
xchg
lods
negl
or
gs
test
sub
roll
push
pop
call
jnp
outsb
sahf
ja
in
and
jp
std
dec
ljmp
sbb
jo
mov
outsb
subl
aad
push
cmp
dec
adcl
loopne
xchg
lds
mov
xchg
mov
sub
inc
cs
cmp
dec
add
and
je
dec
loop
mov
shl
mov
leave
mov
aaa
sub
scas
and
addr16
das
jne
stc
in
sti
jmp
dec
pop
pushf
lods
push
outsl
lods
sbb
je
movsb
outsb
inc
sub
add
adc
cmp
scas
mov
leave
cmp
test
mov
aam
lret
sbb
or
sahf
add
jb
shll
push
sub
insl
and
mov
adc
int
vpunpcklbw
or
mov
addr16
iret
pop
add
mov
rol
push
stos
fs
adc
je
sub
pop
xor
ljmp
mov
mov
and
and
test
adc
jbe
jo
stc
push
or
and
push
andb
adc
mov
arpl
xor
test
lock
and
int
test
sub
xor
mov
pop
cmp
sub
jmp
inc
push
sarb
ret
inc
insb
fadds
nop
sahf
sub
dec
xlat
cmpsl
adc
clc
jmp
mov
gs
mov
test
scas
inc
jp
imul
xor
test
cmp
aas
pop
xchg
push
adc
aas
sbb
mov
lahf
pop
xchg
push
aad
loope
cmp
fdivs
or
popl
das
aas
ss
js
stos
repz
lea
or
popa
push
test
shll
xchg
cmp
xchg
dec
lret
sub
rolb
lahf
jmp
or
mov
xchg
stos
add
dec
mov
push
insb
or
dec
test
xchg
enter
inc
mov
daa
lock
mov
push
inc
stc
and
aad
fstpt
mov
jne
mov
fs
jle
test
std
ret
fldcw
outsb
add
inc
jmp
adc
test
ret
mov
sub
ss
mov
repnz
cmpsb
subb
xor
repz
int
mov
std
test
loop
ret
lahf
lcall
add
jp
xor
jp
fnstsw
cld
sub
outsb
jnp
pusha
xchg
pop
fistps
ljmp
inc
mov
mov
fdiv
rorb
out
lahf
les
pop
popa
sbb
daa
mov
adc
inc
fmulp
int3
daa
mov
subl
movsl
mov
sbb
and
fildll
xchg
cltd
test
ret
fmul
and
fidivl
shrb
data16
push
int3
pop
clc
push
push
stc
add
das
sub
scas
xchg
lds
jge
mov
sub
imul
and
or
insb
cli
xor
js
icebp
push
inc
sub
test
int
cs
push
push
mov
cmp
pop
ds
jb
popa
test
fdivrl
or
roll
pushf
insb
inc
dec
mov
mov
lcall
add
popf
sub
fistps
sub
inc
xorl
fisubl
add
cmp
inc
rclb
repnz
mov
inc
movsl
aad
pop
mov
xor
sbb
inc
inc
shr
outsb
pop
mov
and
pop
mov
mov
push
inc
cmp
xchg
mov
dec
or
adc
test
lahf
mov
or
mov
push
inc
loop
aad
test
movsl
mov
cmpsb
xor
pop
ljmp
imul
sbb
rcr
mov
outsb
add
dec
das
push
mov
push
sbbl
test
or
xlat
jo
or
lods
push
jnp
sbb
je
test
sarb
cmp
test
sub
mov
ja
cmp
mov
test
inc
fadds
arpl
iret
mov
out
jae
jbe
inc
enter
rolb
idivb
sbb
js
jmp
push
push
inc
sub
orps
mov
data16
les
mov
ret
dec
rcl
pop
push
pop
data16
cmpsb
nop
dec
jecxz
ja
ja
cmpl
inc
test
je
add
ret
mov
dec
call
mov
sbb
jnp
cmp
in
into
jbe
lcall
paddsb
push
fistpl
jns
mov
jg
and
jl
pop
or
or
movsl
out
push
jmp
fcoml
push
mov
out
adc
out
xor
add
adc
test
addr16
mov
jo
inc
and
lcall
je
jbe
push
scas
dec
addl
and
int
mov
and
lea
pusha
orb
cli
incl
pop
mov
inc
out
fimuls
jecxz
stos
mov
test
jmp
cwtl
lods
in
movsb
pop
test
sbb
cld
xchg
popl
sub
test
mov
xchg
mov
data16
stos
push
notl
pop
mov
lods
nop
cmpsb
xor
fisttpll
es
pop
fstpt
jl
mov
test
loop
pushf
sbb
sub
data16
pop
movsb
xor
nop
and
in
xchg
mov
dec
out
add
mov
jno
pop
jns
mov
and
cmp
shll
inc
das
fld
cmp
std
adc
jns
std
out
rcrl
arpl
mov
adc
add
mov
subb
ret
je
add
push
dec
mov
repnz
dec
sbb
sti
pop
aad
pop
test
push
or
lret
stos
leave
push
pop
jp
es
cmp
ss
dec
in
ja
fs
int
mov
icebp
sub
int3
add
outsb
inc
call
rolb
jmp
fimuls
dec
add
cli
cmpsl
mov
ret
scas
out
jge
movsl
sbb
push
sub
or
pop
int3
aam
cmp
data16
lahf
cmpsl
push
jle
enter
aas
test
mov
movsl
cld
les
inc
pop
insl
xor
jne
mov
jnp
mov
or
inc
inc
pop
and
adc
in
sbb
xchg
xchg
lea
out
sbb
dec
cli
inc
adc
jb
jle
ds
test
xor
hlt
jnp
stos
pop
loopne
pop
lahf
test
test
mov
add
test
sahf
cmpsl
out
lret
ret
push
cmp
inc
movsb
pop
push
and
jg
loop
fstps
repz
mov
fadd
push
ret
xchg
push
data16
xor
mov
insl
mov
repnz
mov
aam
scas
or
dec
xchg
test
adc
lret
inc
adc
fsubrs
mov
add
xor
lds
mov
push
jb
in
add
dec
in
cmp
cwtl
xlat
add
push
ret
clc
scas
xor
movsb
jne
popf
pop
lret
and
cmp
ds
imul
mov
jle
fwait
and
dec
mov
xor
jp
or
push
push
popf
cwtl
daa
aas
insl
loopew
xchg
cwtl
rep
ss
ficomps
imul
pop
mov
ret
mov
adc
test
push
mov
sbb
or
ret
sub
mov
cmp
out
adc
mov
mov
rcll
xchg
fadds
test
dec
outsb
repnz
fimull
pop
push
push
aaa
or
sbb
dec
fstpt
cli
outsb
xor
popa
loop
xchg
dec
sub
lock
sub
or
push
shl
mov
mov
movsl
mov
movsb
cmpsb
sbb
pop
mov
push
cmp
jecxz
jle
ja
in
xor
das
xchg
mov
scas
movsl
push
push
lods
testb
mov
insl
aaa
jnp
xchg
lret
pop
movsb
lea
addr16
shlb
xchg
mov
test
mov
in
mov
decl
inc
xchg
sbb
and
xchg
adc
mov
mov
fwait
daa
push
aad
int
testb
lahf
rcl
leave
inc
mov
clc
sarl
adc
scas
cmp
jp
dec
dec
rclb
call
addr16
jg
subl
enter
dec
and
insb
mov
test
imul
cmc
fs
add
sub
mov
mov
jge
jo
cmpsb
jl
lea
loope
in
xchg
or
setge
icebp
mov
fsts
out
loop
jae
mov
pop
fdiv
jno
arpl
aas
inc
jns
jecxz
add
lcall
lock
pop
iret
lahf
and
add
and
push
push
mov
mulb
fistps
ss
aas
pop
fimuls
mov
in
xor
lds
pop
icebp
sahf
xchg
repnz
jecxz
cs
xchg
leave
flds
pusha
pop
sub
fstps
mov
outsb
cltd
pop
movsl
out
xor
pop
adc
lock
aaa
sub
dec
jbe
cmp
mov
dec
or
dec
fwait
loopne
into
cmp
arpl
fcoms
scas
jmp
dec
incb
fidivrl
popa
xchg
sub
mov
jbe
or
mov
push
cmc
push
add
cltd
jmp
rclb
push
lret
push
arpl
mov
loope
in
push
jns
imul
imul
mull
ret
pop
ficompl
pop
test
hlt
or
fcoml
dec
fs
mov
loop
arpl
cltd
mov
sub
sti
dec
call
sub
movsb
popf
gs
rorl
cmp
xor
dec
pusha
cmp
ret
jae
mov
dec
dec
lret
push
outsl
ss
jo
aam
xchg
jecxz
cwtl
ror
mov
in
movsb
int3
and
cs
shr
out
add
dec
jno
fistps
sbb
cmp
or
outsb
cwtl
repnz
mov
call
and
jmp
iret
aas
pop
scas
fwait
shlb
shl
imul
inc
mov
cltd
rcrb
lea
mov
les
out
decb
push
das
cmp
into
mov
and
xor
adc
ffreep
div
fs
ret
fistl
and
jne
mov
icebp
ret
adcb
lret
sub
dec
jae
decb
pop
xchg
ds
pop
rcrb
test
leave
jecxz
shrl
or
movl
jge
mov
xor
js
xchg
cmp
push
mov
test
push
xchg
push
out
xchg
xchg
mov
orb
xchg
out
and
lcall
xor
lcall
or
shlb
jg
dec
jl
les
mov
pop
adc
dec
mov
ljmp
pop
out
rcrb
cmc
mov
ret
adc
sbb
popf
pushf
sub
mov
xor
adc
loopne
xchg
rorl
jne
stos
mov
mov
dec
sub
cmpsl
clc
mov
add
loope
mov
dec
and
repz
push
test
jecxz
pushf
jmp
dec
scas
mov
in
jnp
mov
sub
inc
sbb
cs
cmp
insl
sub
add
cld
sahf
das
pusha
popa
aad
mov
dec
lcall
and
in
jmp
sbb
jp
cmp
arpl
ss
aas
jne
fistpl
or
or
imul
pop
add
cmp
xchg
std
test
or
xchg
pop
xchg
rorb
nop
xor
rcr
fsts
push
test
in
pop
lret
stos
cmp
call
mov
xchg
push
shrb
cmc
sbb
add
stos
fwait
jb
cmc
ret
mov
popa
sbbl
sbb
outsb
or
and
pop
scas
mov
fxch
stos
mov
pop
iret
inc
int
sub
mov
and
adc
incl
icebp
nop
icebp
adc
cld
xorl
cmp
mov
add
fwait
out
adc
inc
pop
clc
lret
imul
jge
cmpsl
int3
fidivrl
ficoml
xor
test
je
xchg
sub
stos
pop
imul
rclb
mov
lret
pop
sbbl
arpl
adc
jmp
neg
sbb
int3
push
pop
jecxz
xchg
mov
insl
cmp
divb
sahf
aam
sbb
and
test
sbb
push
sarl
in
hlt
cli
pushf
mov
or
int3
adc
cmp
out
fnstenv
out
dec
repnz
mov
imul
pop
adc
loope
lods
add
das
test
dec
ret
and
stos
sbb
jg
addl
sub
or
jo
fbld
push
xor
jno
jecxz
mov
push
push
and
mov
cmpb
push
cmp
add
cmp
mov
xchg
pop
fdivrs
outsl
lea
cmp
cwtl
push
push
ret
nop
aas
lret
or
test
or
mov
jg
mov
add
jle
mov
and
loop
mov
mov
adc
lds
fstpt
sbb
add
jecxz
mov
inc
sti
or
subl
mov
repz
or
dec
scas
inc
cmpsl
or
imul
in
and
mov
sbb
daa
subb
lcall
hlt
inc
adc
adc
pop
ds
push
loope
sub
push
cs
movsb
sub
mov
lcall
mov
xchg
and
xor
mov
sub
inc
sub
lock
jne
in
mov
daa
adc
or
test
insl
and
lods
pop
bound
bound
outsl
adc
push
and
popa
scas
loopne
ljmp
push
dec
test
enter
pop
orl
mov
sub
push
jno
push
dec
inc
cmp
xchg
insb
aaa
jnp
xchg
jbe
or
jp
data16
push
inc
xchg
pop
stos
sub
pop
lea
push
int
cmc
xlat
out
push
jb
cvtpi2ps
or
pusha
inc
scas
dec
pop
xchg
push
jle
insb
aaa
dec
pop
enter
or
push
inc
xor
stos
jl
dec
jnp
jg
mov
mov
icebp
loopne
fstps
lea
shl
icebp
dec
push
imul
mov
fcmovne
test
and
fistpl
jae
xor
insl
pop
scas
sbb
or
xlat
aad
cmp
or
out
jmp
push
fcoms
adc
test
fidivs
movsl
hlt
mov
mov
lahf
mov
lods
push
lret
outsb
scas
inc
movsl
mov
mov
sub
dec
cmp
faddl
inc
js
rolb
shlb
pop
mov
jae
ja
fs
lock
mov
sti
and
pop
out
pushf
aas
aaa
xchg
cwtl
adc
jle
sub
mov
pushf
dec
stc
mov
or
xor
or
in
notb
fldl
xchg
cwtl
call
mov
subb
pop
xorl
jae
xchg
adc
cmp
test
lret
aam
pop
mov
dec
loop
loop
xor
hlt
fiadds
adc
push
dec
insl
movsb
shl
ljmp
add
shlb
add
orl
in
jno
jp
rcrl
mov
jl
xchg
sti
add
loop
jg
push
es
popa
mov
mov
lahf
add
push
fdivrs
cmpsl
mov
pop
jle
mov
sbb
arpl
xor
fnstsw
ljmp
fists
pop
sbb
subl
lea
cmp
mov
pop
rcrb
sbb
mov
out
js
mov
push
into
ja
mov
fsubr
clc
sahf
leave
rolb
or
pop
mov
shl
jl
dec
mov
xchg
popf
ret
sub
rorb
dec
cmp
andl
and
in
into
decl
fwait
js
ror
and
pop
lea
cwtl
ss
xor
stc
inc
adc
std
mov
in
xor
cmc
or
out
loopne
push
call
sub
jl
adc
adc
call
int
cltd
stos
outsl
pop
pop
flds
mov
int3
dec
jno
test
push
pop
addl
filds
mulb
mov
sbb
push
rcrl
test
pop
divb
rclb
sarb
jmp
mov
push
xor
jne
gs
test
decb
mov
inc
popa
leave
pop
mov
cltd
inc
jl
or
push
pop
aad
dec
push
mov
jnp
dec
icebp
pop
xchg
shl
data16
sti
and
sub
cmp
addr16
inc
or
into
inc
lea
test
and
test
mov
jmp
negb
nop
cmpsl
stc
jle
enter
xchg
into
cmp
lret
sub
in
jno
mov
push
or
ja
pop
jae
pop
out
orps
adc
jle
lods
xor
xor
add
frstor
mov
aam
enter
loop
scas
or
jb
daa
push
cltd
into
mov
inc
test
mov
and
add
add
jp
ds
or
pop
and
xor
mov
mov
dec
mov
rcrb
inc
push
addr16
inc
dec
mov
fcom
fwait
dec
sbb
outsb
js
shl
loope
jp
sti
xchg
lods
scas
mov
xchg
adc
cmc
mov
dec
and
push
test
leave
in
loopne
mov
mov
mov
xchg
or
push
sub
mov
or
icebp
mov
mov
popf
inc
jae
push
jecxz
aaa
nop
mov
pop
arpl
xlat
mov
mov
ljmp
inc
enter
gs
in
push
mov
jl
gs
imul
inc
mov
iret
mov
push
je
out
insl
ljmp
cmpsb
jle
cmp
and
stos
add
iret
mov
das
xor
jne
ret
enter
divl
jge
push
movlps
and
pop
decw
mov
fldpi
dec
lret
mov
sti
gs
loopne
mov
adc
es
das
sub
or
mov
js
sbb
push
cmp
pusha
xor
icebp
cli
shll
out
xchg
mov
mov
push
ss
nop
iret
jp
outsl
adc
xor
and
jmp
inc
xor
cmp
xchg
insb
fwait
in
js
jne
xchg
mov
fdivrl
and
mov
and
xchg
mov
adc
int
cltd
mov
insl
xchg
xchg
jnp
mov
and
aas
popa
scas
jae
sbb
xor
lods
pop
jmp
jae
shrl
mov
or
daa
hlt
cmp
jae
xchg
incl
aas
arpl
ret
xchg
js
add
add
cli
mov
mov
jge
cmpsl
mov
nop
sub
jbe
mov
inc
pop
mov
repz
adc
fstpt
fnstsw
fimuls
pop
mov
inc
jne
hlt
pop
xor
xor
mov
lret
mov
xchg
xor
mov
push
pop
imul
iret
fldenv
in
mov
imul
push
rclb
jp
jne
and
cs
adcb
sahf
jno
push
mov
adc
push
pop
aad
mov
movsb
cltd
mov
xchg
popf
testl
ja
inc
push
fst
pop
pop
mov
push
aas
push
jg
or
in
pushf
jg
adc
jb,pn
jecxz
faddl
jle
lret
inc
imul
dec
inc
jae
mov
push
add
mov
mov
sbb
insb
sahf
ja
jbe
not
pop
push
in
aaa
testl
xchg
adc
jae
add
call
jns
in
xchg
aad
push
jne
mov
mov
je
xor
mov
ja
aad
mov
dec
dec
enter
aaa
mov
lods
sbb
int3
loop
pop
cwtl
lret
sub
cmp
in
dec
outsb
data16
ret
pop
mov
or
xor
ret
mov
jb
stos
shl
leave
mov
daa
call
icebp
xchg
das
and
jb
dec
mov
jge
imul
pop
jno
clc
scas
loop
movsb
mov
xchg
or
fstl
cmp
addr16
lods
cmp
das
mov
rorl
xor
mov
cld
pushf
out
cmp
cmc
xchg
xchg
subb
sub
jp
std
dec
lret
std
popf
mov
das
jmp
sbb
push
rolb
push
inc
push
adc
pop
push
add
sbb
mov
sub
int3
mov
adc
shlb
sbb
pushf
inc
or
pop
inc
fdivs
pop
imul
mov
out
mov
jb
jle
jo
inc
mov
dec
jl
ja
test
pop
mov
cmp
xchg
fmuls
and
inc
cmp
test
lods
insb
ud0
mov
mov
in
sbb
cmc
push
lods
pop
xor
mov
call
ljmp
enter
lods
lock
fldl
rep
cmpsb
insl
sti
push
pop
imul
scas
jns
pop
cli
dec
adc
sub
cmp
ror
icebp
addr16
xchg
fstps
xchg
sti
inc
aad
mov
pushf
sub
sub
in
orb
out
les
lret
add
jo
nop
cmp
addr16
dec
inc
add
gs
fs
xchg
and
dec
ljmp
and
pop
add
aam
or
sub
popf
inc
loop
jle
lock
push
pop
push
fisubs
pop
xor
push
dec
jp
dec
adc
add
adc
lret
and
cmc
xchg
jge
mov
jb
test
jg
faddl
fs
adc
adc
inc
aam
imul
std
int3
lahf
cmp
ljmp
adc
int
call
jp
aam
jns
adc
jo
popf
shrl
lods
push
mov
xchg
push
jne
or
push
fisubs
in
and
lods
pop
sub
jg
out
cltd
mov
sub
jbe
push
mov
out
add
cld
mov
aaa
pop
int3
push
loop
fnsave
fiadds
pop
sub
scas
mov
push
mov
xchg
push
js
aam
inc
lahf
inc
sub
cwtl
sub
lahf
adc
ret
mov
mov
jns
jle
dec
pop
push
aam
ljmp
sub
push
sbb
mov
leave
pop
push
jae
xchg
push
out
jmp
int3
repz
jns
dec
mov
mov
addr16
sub
pushf
pop
and
aam
sub
xchg
in
inc
sbb
bound
xlat
das
repz
adc
lret
add
popf
jmp
mov
inc
outsl
inc
push
gs
mov
sub
lahf
cmp
jmp
or
fistl
ss
arpl
ja
jmp
and
cmpsl
mov
xor
pusha
or
inc
and
pop
data16
mov
cmp
push
cmc
ds
into
and
bound
pop
clc
jmp
jb
loopne
ja
mov
sub
or
orl
sub
and
cmc
popf
shl
xchg
fimull
sbb
cmc
fs
jl
aad
sub
and
pop
add
inc
nop
cmpsl
test
push
push
pop
insb
xlat
add
ds
sbb
pop
mov
xor
or
cmp
jle
out
fwait
in
inc
or
clc
jmp
or
data16
xchg
mov
mov
repnz
jle
lahf
nop
cmp
inc
sbb
and
fs
push
inc
addr16
enter
pop
and
shl
push
sub
inc
jge
shll
test
xchg
cltd
dec
into
insb
xchg
sbb
lret
cltd
mov
sbb
sahf
cmp
push
jl
repz
mov
xchg
mov
iret
and
lcall
xchg
aas
dec
cmp
cltd
xor
fsubrl
leave
pop
shll
int3
ss
cs
rolb
add
dec
clc
outsl
movsl
xor
inc
xchg
ja
jo
lahf
repnz
es
sbb
in
mov
in
or
imul
push
cli
out
add
mov
adc
add
dec
mov
std
leave
mov
mov
mov
nop
cli
sbb
dec
add
imul
loope
inc
push
popa
popa
xchg
or
mov
sbb
xchg
ret
jo
pop
pop
jb
push
orl
lock
fldl
and
push
adc
push
push
test
mov
pushf
mov
sub
cld
aaa
push
xlat
sbb
inc
xchg
mov
fsubp
dec
fs
movsl
cmc
mov
int
dec
lock
xlat
inc
jne
adc
push
shlb
outsl
out
and
fcmove
jmp
roll
std
mov
jecxz
cmpsl
and
push
jecxz
push
push
iret
add
cwtl
mov
lcall
sbb
push
mov
push
aaa
loop
jecxz
decb
jecxz
pusha
mov
xor
mov
adcb
cmp
inc
cld
sbb
std
dec
mov
pop
sbb
insl
cmp
mov
mov
push
enter
insl
and
jecxz
pop
shrb
adc
push
mov
in
mov
mov
outsb
cwtl
jae
sarl
pop
jns
iret
daa
jae
sbb
jecxz
xchg
mov
and
in
dec
testb
sysret
add
mov
aaa
mov
add
ret
cmpsl
out
lods
aas
jb
test
jnp
rol
divb
addr16
sahf
xlat
adc
mov
daa
arpl
mov
cmc
in
inc
out
and
gs
jp
movsb
push
add
ljmp
movsl
or
sarl
daa
inc
int3
jb
test
mov
into
adc
outsl
fnstcw
sarl
dec
ret
enter
pop
mov
icebp
sub
leave
xlat
pop
loope
fisttpll
adc
cmp
ret
sahf
fst
push
imul
sbb
cltd
jbe
mov
cmp
out
dec
pop
or
cli
xor
ror
ja
dec
in
cmp
jmp
inc
xor
pushf
push
xchg
push
or
or
insb
pop
insb
push
cmp
mov
pop
adcl
cmpl
xchg
cmpsl
rcrl
mov
scas
aaa
cli
jno
jne
pusha
inc
jp
imul
dec
test
ficoms
sub
jno
fcompl
into
add
adc
pusha
fwait
inc
sbb
mov
test
xor
sarl
je
mov
movsl
out
sbbb
cs
jl
jge
sbb
sbb
adc
cmpb
out
xchg
mov
pushf
mov
pop
mov
cmp
xchg
ret
call
lret
jmp
mov
or
lds
into
cli
cmpsb
ret
push
dec
in
lock
cltd
loopne
repnz
push
pop
xchg
adc
sub
lahf
xchg
testb
enter
push
sahf
out
pop
inc
add
xor
pop
loope
lds
cltd
iret
je
insl
sub
fs
lds
xchg
aad
pop
xchg
ds
das
ret
scas
cmc
dec
cld
arpl
roll
fidivrl
xor
aam
insb
loope
sti
or
and
fdivs
cmp
ficoml
scas
ja
xchg
xchg
add
xchg
mov
and
call
push
imul
shrb
test
lods
imul
loopne
hlt
jbe
pop
adc
xchg
fcmovne
ficoms
ljmp
neg
pop
sahf
fs
out
xchg
fdivl
xchg
pop
stos
push
loope
fists
xor
xor
mov
js
mov
jno
jne
jbe
sahf
clc
mov
lods
jp
movsl
sbb
mov
or
lahf
and
mov
cmpsb
xchg
xchg
les
in
jno
pop
sub
outsl
sub
repnz
push
fadd
outsl
scas
stos
sarl
push
aam
sub
bnd
into
ret
mov
push
pop
and
jge
repz
pop
sti
int
push
rclb
mov
mull
cmp
adc
aad
ret
fadds
orb
cmp
ret
add
frstor
lcall
mov
jbe
orl
les
cli
insb
out
aam
lods
jle
xor
in
dec
sub
jbe
push
fnstenv
sub
push
popf
jne
pushf
jno
mov
shrb
jne
fwait
mov
je
dec
xlat
lock
movsb
dec
out
aaa
ret
pop
dec
xor
dec
inc
xor
data16
xchg
cwtl
mov
es
sub
testl
leave
or
mov
push
jmp
iret
pop
or
mov
fisttps
fsubl
std
sub
pop
inc
sahf
inc
adcl
roll
add
pushf
jb
pop
mov
cmp
pop
or
push
dec
sub
jns,pn
push
mov
sbb
cmp
lods
adc
sub
cmp
jecxz
mov
mov
repz
mov
jecxz
add
popa
and
js
in
hlt
test
inc
in
enter
push
cltd
jb
incb
fwait
popf
cmp
rclb
mov
inc
sub
sub
xchg
mov
xor
lods
push
js
pop
add
sbb
and
pusha
xor
icebp
sbb
incb
in
mov
sti
jbe
mov
popa
fists
or
imul
mov
stos
mov
aad
fmull
shrb
push
in
lret
dec
aam
xchg
mov
outsb
test
mov
ja
sbb
cmp
mov
iret
jns
push
sarb
mov
out
mov
hlt
push
cmpsb
in
pop
mov
ljmp
add
and
push
mov
dec
push
mov
jo
and
mov
or
xchg
shl
add
inc
test
sbb
mov
sub
repz
adc
and
mov
std
or
jnp
sub
jg
inc
mov
mov
stc
pop
bound
dec
mov
mov
frstor
add
rorl
in
xor
popa
test
fldl
jbe
fsubp
or
aas
mov
dec
or
bound
sbb
fdivrl
jmp
and
jg
rorl
mov
ficoms
rcrl
fildll
pop
popf
add
js
sbb
sub
push
adc
mov
sub
xlat
and
pop
lods
lock
loope,pt
mov
ds
imul
sti
sar
xchg
jbe
out
adc
cltd
mov
mov
ss
loop
pop
test
add
enter
aam
xchg
in
push
ja
mov
not
lahf
mov
sub
das
stos
lcall
mov
push
fld
ja
mov
jl
dec
jno
orb
mov
jecxz
xchg
xchg
std
inc
insb
mov
push
adc
adcl
sahf
dec
shrb
mov
inc
roll
pop
xorb
addr16
bound
push
out
pop
outsb
mov
mov
int3
push
pop
xlat
jae
adc
js
pop
testl
lods
add
add
aaa
push
jno
jl
lahf
adcl
fs
xor
push
hlt
sub
xor
push
inc
mov
call
xchg
mov
iret
cld
dec
push
cmp
shr
cmp
jle
jl
xchg
push
and
in
in
jnp
mov
or
add
test
adc
sub
jge
into
push
lret
scas
mov
or
insl
cmp
lahf
clc
mov
sbbb
test
ljmp
mov
stos
xor
jnp
mov
push
mov
fimuls
dec
outsl
out
lds
pusha
dec
mov
clc
dec
pop
push
dec
dec
mov
xchg
int3
push
jae
mov
cmc
jp
mov
fwait
aam
loopne
addr16
cmp
inc
jno
imul
cmp
cmp
adc
adcb
mov
cmpsl
test
fisttpl
sahf
or
ret
sub
jnp
lods
jg
ret
mov
icebp
fidivrl
mov
or
mov
dec
inc
sahf
sub
mov
inc
popf
cmc
adc
push
fcmovu
xor
cmpb
inc
pop
pop
pop
xor
inc
jno
fnstsw
xor
insb
call
mov
inc
xor
jmp
or
inc
sub
sbb
cwtl
mov
xlat
push
int
fldenv
mov
inc
mov
jmp
pop
in
into
mov
pop
aas
add
jmp
adc
fcmovnu
pop
ljmp
pop
sbbl
push
xor
jl
xchg
ret
scas
mov
bsf
or
mov
add
rcll
sbb
imul
popa
jbe
push
xchg
pushf
xchg
shl
insl
stos
dec
aaa
stc
jecxz
cmpsl
or
pop
movb
xor
leave
or
inc
movsb
inc
cmp
jb
fimuls
adc
dec
and
xor
fcom
lock
das
push
pop
loop
mov
and
cltd
inc
cmp
mov
mov
mov
xchg
fdivp
xchg
dec
dec
mov
mov
icebp
outsl
push
test
push
popf
jmp
adc
je
push
jno
int3
scas
sub
jb
divb
jp
mov
lds
add
xchg
sbb
lea
sbb
push
cmp
nop
movb
in
popa
lock
pop
adc
into
fimuls
loop
adcb
sahf
aad
sti
push
xor
lds
push
jl
aas
adc
jnp
mov
adc
loopne
mov
xchg
cli
xor
dec
mov
add
cltd
fildl
out
pop
dec
mov
mov
push
push
and
xor
in
mov
push
call
hlt
rcl
adc
add
jo
sarl
popa
jnp
pop
jecxz
inc
cmovs
pop
cmc
lcall
and
jecxz
mov
adc
data16
lea
mov
cmp
mov
negb
rcll
in
mov
outsb
push
fistps
bound
push
sub
mov
outsl
adc
sub
adc
stos
adc
mov
sbb
loopne
cs
sti
leave
cs
xchg
in
push
ror
inc
cmc
jne
jb
iret
sbb
inc
sbbl
add
clc
int
repz
cmp
rolb
sbbl
andl
idivl
pop
push
jbe
adc
cmpsb
in
call
jg
out
test
inc
test
dec
pop
add
ret
fwait
insl
sbb
mov
mov
inc
dec
cmp
xor
jg
mov
in
ret
ljmp
hlt
aaa
loopne
call
test
rcr
or
jl
add
sti
repnz
jne
popf
lret
outsl
xchg
outsl
out
lds
fdiv
mov
les
mov
arpl
mull
add
jo
xorl
xor
outsb
mov
fildll
test
arpl
pop
pop
push
push
int
pop
ds
push
fmul
cmp
pop
lock
mov
loop
ret
je
idiv
lcall
lods
inc
inc
stos
lret
js
mov
fnstcw
jle
xchg
cmpsb
clc
lcall
jo
hlt
jo
fldl
pop
mov
mov
gs
adc
and
test
sub
insl
or
mov
push
sti
push
addl
jecxz
xor
mov
negb
mov
pushf
mov
out
xchg
sbb
xchg
push
test
mov
push
pop
das
pop
pop
mov
cld
push
fneni(8087
cmc
pop
out
cmp
xchg
or
cmp
adcl
cmpsl
andl
jae
cmp
out
das
ja
aas
stc
test
push
out
ja
jmp
pop
inc
aad
dec
insb
int
dec
and
aas
es
ficoml
mov
mov
xchg
push
or
xor
pop
jo
push
lret
push
mov
dec
dec
push
and
push
mov
shlb
jmp
cmpps
sub
xor
sub
mov
into
ds
dec
jmp
inc
jl
iret
fs
fs
int
cmp
and
mov
cmpsb
js
xchg
pop
loope
inc
aas
adc
imul
sub
push
mov
ret
add
cltd
out
sbb
add
pusha
cltd
loope
fwait
cs
mov
pop
and
in
and
mov
scas
test
jb
jl
clc
loope
dec
xor
jecxz
xor
fsts
inc
xor
inc
pop
iret
jae
call
xor
xchg
pop
cmp
jl
push
inc
cmp
mov
movsl
shlb
fs
add
je
btc
push
jecxz
jle
clc
adc
xchg
sbb
arpl
int
add
cmp
push
pop
cmp
add
aas
sbb
lret
in
sarb
jle
mov
and
cmpsb
add
xlat
enter
outsl
jo
cmp
sbb
fsubrp
nop
ficoml
dec
cmp
xor
pop
pop
add
jo
ret
cmp
pop
mov
cmpsl
xor
repnz
xchg
inc
jbe
out
cld
shl
int
sub
out
popa
test
test
jbe
xlat
out
push
inc
jns
ret
fwait
rcr
inc
mov
insb
cmpsl
stos
xchg
enter
push
jns
pop
dec
movsl
pop
adc
mov
inc
lahf
scas
ds
idivb
inc
pop
cltd
lret
push
mov
inc
cli
mov
dec
xchg
xchg
pop
js
lcall
movsl
dec
push
cmp
rolb
push
je
ss
xchg
pusha
pop
mov
ret
and
mov
dec
nop
and
lahf
jg
dec
test
test
ljmp
enter
xchg
mov
push
aaa
pop
cmc
stc
pop
sbb
pushf
jns
inc
pop
lock
pop
mov
push
mov
fld
xorb
ds
jno
xlat
shl
lret
pop
xlat
cmp
pop
pop
lcall
ds
repz
add
adc
data16
pop
cltd
aas
inc
pop
arpl
push
rol
scas
add
test
pop
out
push
push
js
adc
xor
cmp
and
enter
leave
mov
xor
sbbl
mov
aas
and
dec
call
repz
ljmp
jno
std
cltd
jo
push
pop
stos
mov
push
aam
xchg
call
aaa
fidivrs
xchg
mov
mov
push
mov
pusha
mov
xchg
das
jnp
icebp
jmp
inc
rol
ss
decl
aaa
jo
dec
mov
and
push
or
pushf
push
cltd
add
dec
testb
rcr
addl
outsb
icebp
test
das
or
dec
mov
roll
pop
test
orb
leave
fdivrl
xchg
repnz
cld
sub
mov
das
pop
xor
jp
mov
call
adc
jbe
push
pop
jne
aaa
out
add
pop
test
sub
mov
imul
cld
push
fbstp
stos
mov
xor
repnz
ljmp
jle
data16
in
pushf
test
cmp
mov
cltd
aas
inc
mov
mov
test
jbe
lock
push
loop
xchg
stos
shlb
pop
pop
sbb
inc
inc
ja
lods
pop
cs
or
pop
pop
xchg
int
or
imul
in
push
scas
fwait
lahf
mov
aas
addb
dec
dec
xor
pop
jno
rclb
mov
cwtl
jp
xchg
stos
add
int3
fstpl
pop
adc
popl
xchg
outsl
out
xchg
loop
jg
sbb
lods
mov
in
sub
dec
int3
xchg
adc
call
push
xor
setg
dec
lea
movsb
sbb
mov
jbe
mov
pop
push
iret
jne
dec
jb
into
int
out
fwait
or
cmpb
jge
dec
pop
lcall
fldt
test
popa
push
fisubrs
fwait
cmp
cld
and
lods
sahf
sub
pop
sbb
aad
jne
mov
push
call
std
repnz
ljmp
aad
ret
loop
and
xor
nop
sbb
pop
test
push
xchg
mov
mov
mov
pop
inc
loop
lods
push
push
nop
adc
xchg
loop
and
leave
pop
insb
imull
neg
rcrb
adc
or
popa
xor
ret
and
push
gs
lods
jmp
jmp
xchg
xlat
inc
dec
jo
dec
adc
cmpsb
rcrb
js
shlb
cwtl
mov
add
hlt
mov
loopne
and
sbb
rcr
dec
pop
inc
jae
dec
ja
lcall
mov
stos
xor
sbb
xor
aaa
mov
push
sub
pop
or
lcall
mov
loopne
mov
je
inc
sahf
push
fadds
dec
shrb
mov
sti
and
daa
int3
mov
lods
insb
negb
ud1
dec
mov
adc
cltd
ficomps
push
cltd
sarb
in
mov
dec
cmp
iret
or
adc
jp
jmp
adc
push
and
jge
xlat
xor
jbe
int
gs
mulb
cwtl
stos
loopne
stos
iret
jno
insb
adc
fwait
adc
dec
dec
xchg
movl
ljmp
pop
nop
jo
inc
cmp
mov
sarb
mov
jo
pop
lcall
add
test
jg
shr
mov
add
inc
aaa
addr16
xlat
sub
sbb
jae
pop
cmpl
loopne
pop
mov
fbstp
sub
pop
in
push
jg
fwait
ljmp
mov
sbb
sbb
push
adc
cs
mov
push
inc
xor
or
push
dec
cmp
sub
adc
dec
and
xchg
rcll
mov
jne
hlt
nop
les
imul
ret
add
scas
stc
inc
lret
lds
push
and
cld
std
push
cmpsb
push
sahf
stos
cmp
and
mov
outsl
push
pop
repz
test
mov
adc
aas
aaa
pop
and
sub
loope
push
filds
sub
mov
mov
inc
jne
out
add
pop
or
xor
leave
cwtl
ss
outsl
lock
lock
std
or
inc
inc
hlt
enter
in
mov
pop
lods
dec
popf
sbb
mov
or
pop
ljmp
out
add
xor
adc
mov
rol
push
fsubs
mov
lea
or
jecxz
or
insl
xlat
mov
movb
jnp
lahf
xchg
sub
pop
xor
bound
or
movsb
call
sti
mov
mov
xlat
dec
mov
jle
pushf
mov
or
dec
lds
mov
gs
push
aam
lods
arpl
cltd
call
int
push
fwait
lea
testb
sbb
cmpsl
pop
loope
jns
push
std
insb
int
movsl
xlat
jle
in
bound
mov
inc
dec
or
insl
push
adc
lds
inc
add
loope
cwtl
mov
inc
mov
sub
iret
lods
push
xchg
lods
mov
aas
push
jmp
dec
mov
dec
mov
les
cmpsl
cwtl
xor
dec
rol
adcl
push
cmp
adc
out
mov
lods
mov
xchg
push
cltd
arpl
loopne,pn
ljmp
adc
dec
jo
jbe
insl
xlat
or
inc
imul
repz
xlat
cmp
test
adc
add
pop
ret
dec
cmp
pop
js
rclb
insl
daa
jns
hlt
cmpsl
fdiv
xchg
xchg
lock
xor
xor
fdivl
scas
bnd
jb
lock
mov
sbb
mov
cld
push
in
arpl
in
adc
dec
cmp
adc
roll
sarb
push
icebp
sub
cld
xchg
sti
add
loopne
ret
pop
mov
or
lcall
lods
lea
nop
pop
jnp
into
loope
pop
sarb
imul
mov
pop
cmp
mov
ja
adc
and
data16
test
sbb
mov
cmc
xor
popf
arpl
sahf
out
push
xor
in
or
mov
pushf
lahf
je
push
popf
lods
mov
ds
js
mov
mov
repnz
jnp
mov
in
jb
mov
adc
xchg
xchg
stos
cmp
sbb
mov
adc
mov
push
add
sub
mov
icebp
mov
mov
daa
out
aad
xchg
faddl
and
dec
add
rcrb
or
xor
lds
fsubrs
pop
adc
shl
mov
xchg
movsb
jno
sbb
add
or
aaa
cmp
xchg
test
cmp
jo
movsl
loop
lock
mov
dec
cmp
stos
jb
push
sbb
dec
cmpsl
fidivs
mov
lds
fidivs
pop
inc
hlt
pusha
in
xchg
push
lea
movsb
dec
shll
add
sbb
icebp
test
inc
sub
xchg
pop
or
cmpsl
int
or
lret
lods
cmp
mov
nop
push
pop
jle
cmp
dec
push
enter
movsl
pop
shll
adc
jmp
dec
fwait
and
ds
xchg
std
sbb
sub
rcrb
sahf
adc
sub
mov
jbe
scas
and
push
cmp
cmp
cltd
les
and
out
mov
leave
cmp
xchg
mov
dec
xor
pop
int
rcrl
jo
cmp
out
sbb
jne
popf
push
adc
dec
stc
shll
sub
xchg
dec
fldenv
mov
push
test
loop
fs
dec
sub
mov
sti
out
ss
out
ffree
filds
fidivrl
sbb
psubw
push
test
lock
jecxz
dec
mov
push
lret
or
ds
dec
mov
push
mov
stos
call
dec
mov
std
pop
mov
hlt
mov
cmpsl
or
loopne
sub
fisubrs
jecxz
and
mov
call
pusha
inc
mov
sbb
inc
cmp
popf
xchg
stos
outsb
pop
sbb
push
xchg
ret
loop
push
sub
inc
fdiv
movsb
cmc
lcall
adc
cs
add
adc
stos
fidivrl
push
pop
cmp
mov
cwtl
lea
mov
xorl
daa
movsb
push
xor
pusha
lret
mov
add
jmp
andl
jge
xchg
stc
inc
cmp
imul
sbb
in
shll
andl
pop
sub
pop
outsb
inc
fdivrl
sub
in
ss
dec
jnp
adc
inc
mov
sub
pop
ja
rcrb
shlb
push
mov
dec
rorl
mov
xor
mov
sub
mov
jmp
ret
xchg
sar
mov
hlt
cwtl
xchg
cmpsl
scas
cli
push
insl
dec
mov
sub
push
jle
gs
mov
lret
pop
push
fdivrs
lret
in
lahf
xchg
ficoml
sti
inc
xchg
add
loop
push
xchg
stos
mov
pop
push
adc
repz
jne
sub
iret
rol
jl
and
cmp
push
imul
lret
or
addr16
repnz
or
jns
subb
jmp
insb
pop
xor
loopne
orb
dec
sti
movsl
cmp
xor
fidivrl
pop
inc
or
cmc
push
pusha
insb
repz
std
fstps
mov
adc
cmpsb
insb
mov
sub
xchg
mov
dec
inc
insl
arpl
das
scas
push
jnp
shll
out
sbb
pop
aaa
insl
gs
inc
int3
testb
fildll
xchg
mov
jl
adc
loopne
and
or
pusha
or
scas
lahf
pushf
movsb
cmp
out
cwtl
dec
sbb
ss
loop
push
andl
sahf
xchg
scas
aad
inc
cmp
pop
popf
mov
pop
pop
jo
rorl
lods
and
mov
mull
or
ret
push
mov
push
mov
arpl
lds
adc
sbb
in
sub
and
outsl
les
aaa
xor
into
ret
sbb
adc
loope
mov
jns
inc
xchg
and
pop
push
adc
fs
xchg
clc
adc
fdiv
xor
push
pop
jmp
icebp
daa
xor
lahf
mov
dec
sbb
fwait
add
ja
jae
bound
arpl
inc
sub
ljmp
push
shll
scas
loopne
add
outsb
dec
adc
mov
mov
leave
dec
adc
pop
scas
pop
cmp
lea
fldt
repz
xor
aaa
jo
imull
les
fwait
or
sbb
aaa
subb
push
mov
mov
test
xchg
adc
hlt
clc
in
push
push
insb
push
iret
mov
xchg
xchg
inc
inc
jae
inc
mov
xor
and
push
or
pushl
xchg
mov
jl
add
or
xchg
andl
adc
shll
xor
adc
loop
addr16
js
cs
ljmp
fcoms
push
daa
mov
repz
movaps
fldl
mov
cld
inc
and
fldl
movsb
sbb
mov
adc
xor
xchg
or
dec
fs
das
rclb
test
and
mov
dec
mov
xchg
scas
lods
popa
add
xchg
mov
pop
mov
sbb
dec
xchg
mov
insl
inc
lret
add
aaa
ljmp
push
mov
cs
cmp
mov
in
leave
add
rorl
xchg
pusha
mov
xor
loope
mov
dec
std
jle
sub
and
push
pop
pop
out
jnp
xorb
lret
mov
jnp
fnstenv
push
push
pop
scas
cmp
dec
pop
pusha
aas
insb
fcomip
pop
add
sbb
stos
jo
clc
push
out
cmc
jae
ret
mov
test
push
dec
int3
bound
test
pushf
add
je
or
xorb
xchg
cmpl
inc
sub
insl
outsl
dec
in
add
fldt
gs
pushf
xchg
cli
arpl
xchg
xchg
cmpsl
cld
in
jmp
andb
fstpt
loopne
cwtl
lock
test
sub
cmpsl
fdiv
push
int
or
cmp
in
jecxz
in
push
xlat
rolb
pop
pop
jp
push
xor
add
stos
mov
pop
dec
cmpsl
xor
fdivrs
icebp
dec
orl
fildl
mov
ret
jno
subl
sub
testb
pop
test
and
cmp
inc
test
push
sarb
mov
pop
and
test
sbb
xor
aas
int
mov
pop
mov
loope
out
ss
mov
xor
push
jge
inc
and
mov
jo
and
add
add
push
ret
xor
aas
dec
fs
sarl
push
rolb
add
hlt
cmp
mov
loop
dec
dec
cmp
std
rclb
in
jb
sahf
add
cmp
xchg
adc
inc
in
popf
sub
push
and
stos
fnstsw
ljmp
stc
push
and
or
push
add
sbb
test
ss
out
std
lods
outsb
lds
ret
dec
neg
jp
xor
xchg
call
movsl
aam
loop
rclb
fwait
add
xor
sti
xor
pop
stos
pop
push
push
sbb
cmp
mov
pushf
push
xchg
es
lods
adc
cmpsl
arpl
pop
mov
jecxz
and
repnz
xlat
push
sub
rcll
pop
cmc
scas
push
aas
lret
ljmp
jecxz
in
inc
jae
dec
or
repnz
cmp
jns
xchg
repnz
xlat
or
sub
xor
jns
xor
daa
xchg
push
lock
outsl
and
mov
scas
outsl
push
into
cmp
cmpsb
das
jmp
movzbl
cmp
stc
scas
cmp
inc
push
mov
jge
mov
lahf
mov
sti
jg
fdivs
out
test
pop
pop
xchg
rcll
loop
or
mov
into
xlat
movsb
jge
and
arpl
hlt
adc
mov
repnz
and
ret
mov
or
fimuls
xlat
loope
jae
adc
insl
jb
pop
repnz
push
icebp
add
or
js
je
out
xor
add
sub
cltd
push
dec
loope
adc
xlat
stos
cltd
xchg
inc
cmp
repnz
lock
lods
and
add
adc
or
push
cmp
push
pop
movsl
inc
subb
subb
icebp
pop
add
lea
xor
sbb
rclb
xchg
sbb
enter
sub
and
mov
int
mov
into
pop
nop
pop
mov
testl
mov
orl
xchg
or
pushl
xlat
push
jecxz
imul
sbb
clc
add
dec
mov
imul
stc
mov
call
in
mov
sbb
movzbl
rclb
push
cmp
pop
adc
xor
jne
movsb
dec
inc
mov
movsl
scas
and
hlt
ret
and
adc
inc
push
mov
aam
call
xor
mov
cmp
aas
sub
mov
push
mov
jo
imul
add
call
aas
push
add
xor
mov
roll
imull
fisttpl
gs
outsl
cld
fldt
aas
cwtl
push
movsb
xlat
enter
ret
push
xor
cmpsl
cmc
xchg
test
pop
xchg
dec
cwtl
lea
sahf
mov
notl
adc
adc
adc
sti
cmp
mov
lahf
imul
sarb
shlb
jg
push
push
lahf
addr16
jle
popf
imul
push
call
fs
xor
pusha
outsl
xchg
or
vmread
xchg
jne
dec
mov
into
cmp
cmp
mov
and
mov
push
psllq
cmpsb
pop
sub
clc
out
out
fsub
test
xor
stc
sub
mov
sbb
movsb
jae
inc
cmp
jb
dec
fsts
xlat
push
lret
add
push
inc
sbb
data16
xorb
lds
mov
mov
inc
mov
mov
adcl
pop
sub
out
repz
mov
cmp
mov
xchg
or
sahf
xchg
jp
gs
iret
orl
cli
jge
pop
xor
cli
gs
dec
stos
or
or
sub
pop
sub
mov
mov
pop
lret
add
cltd
cltd
pop
jo
pop
sbb
js
cmpsl
pop
std
aas
sbb
adc
aas
movsl
cmp
adc
es
daa
cmp
mov
repz
push
add
loopne
adc
jecxz
insb
add
stos
mov
cwtl
sbbb
xor
inc
add
testl
pop
and
jbe
sbb
insl
aas
or
pop
push
cmp
mov
adc
lods
xor
dec
hlt
rolb
ret
shrl
cmp
pop
adc
cli
or
adc
mov
stos
enter
jnp
loop
jno
out
mov
mov
ss
into
mov
ja
or
pop
xor
lock
repz
movsb
arpl
call
add
mov
sub
dec
jge
mov
decb
cmpsb
ljmp
lret
stos
jae
ficoms
push
push
into
jg
daa
push
out
ret
sbb
inc
and
push
repnz
lea
aaa
push
movsl
mov
mov
popa
std
adc
mov
sahf
cmp
sbb
incl
scas
call
bswap
xor
movsl
ss
cmp
and
dec
jbe
in
mov
xchg
mov
aaa
sbb
pusha
scas
sub
cld
ja
cwtl
dec
sbbl
mov
int
adc
stos
pop
inc
into
sbb
inc
lods
ljmp
imul
stc
repz
pop
cmc
inc
mov
or
mov
int3
adc
icebp
jns
test
dec
imul
xchg
pop
adc
lahf
lahf
fidivrs
xor
sbb
jmp
or
mov
inc
jecxz
xchg
stos
outsb
stc
jae
insl
or
push
pop
xchg
outsb
jo
cmp
cmp
sbb
dec
imul
fcomi
sub
roll
cli
loop
repnz
cwtl
fnsave
scas
cmp
aaa
jmp
sbb
movsb
and
in
dec
outsl
std
add
lcall
jecxz
cwtl
add
push
mov
sbb
inc
rcrl
lret
lods
nop
fdivrp
lcall
rolb
jne
mov
and
imul
adc
adc
or
es
out
stos
cmpsb
xchg
cltd
sub
sub
sbb
cmpsb
dec
leave
mov
sbb
mov
add
testb
push
stos
or
mov
mov
jns
inc
loope
andb
xchg
pop
aam
nop
clc
sbb
lods
mov
sub
shlb
or
and
popf
sub
test
add
shll
lret
dec
mov
cli
pop
ljmp
repz
lds
insl
lret
jne
subl
push
inc
repnz
pop
outsb
aad
adc
mov
imul
cltd
mov
aaa
iret
ss
mov
or
mov
xor
orl
jae
xorl
jne
sbb
xchg
jae
pusha
adc
mov
fsub
int
flds
fcompl
sub
std
fisubl
int
push
or
stos
pop
pop
test
jmp
cmp
add
inc
stc
push
scas
aaa
jge
daa
aam
cmp
or
cmp
mov
cltd
mov
lahf
and
mulb
aaa
cwtl
mov
cmp
daa
push
push
rep
cmpsb
scas
push
xchg
sub
xlat
into
mov
pop
lret
or
ljmp
xchg
jae
inc
fsubrl
cmp
xor
fisubl
std
push
aaa
lea
push
icebp
mov
jp
fldenv
mov
mov
push
mov
stos
adc
hlt
or
dec
sub
clc
addr16
add
mov
jbe
leave
adc
dec
xor
ret
fldl
pslld
mov
sbb
sbbl
ret
into
repnz
inc
fldl
cmc
aad
xchg
fdivrs
aam
repnz
addb
bnd
pop
push
and
xchg
inc
cwtl
scas
push
mov
sti
or
cli
jl
jae
aad
push
ret
rcrl
jecxz
nop
jne
iret
inc
inc
sbb
aad
lahf
sbb
in
and
jmp
mov
push
xchg
xor
mov
sub
mov
out
jle
out
sbb
test
mov
movsb
inc
cmp
dec
adc
mov
push
dec
rcll
add
xchg
test
jne
mov
fwait
es
add
push
lods
inc
push
mov
aas
mov
popa
jno
repz
popa
add
add
xchg
jbe
data16
ficompl
bound
jle
pop
out
ljmp
add
aad
test
ja
sahf
jp
mov
aas
mov
add
add
or
mov
pushw
xchg
sbb
pop
adc
into
movsb
pop
xor
jg
adc
or
mov
xchg
ret
clc
and
xor
jecxz
pop
mov
rcll
out
pusha
int
addr16
jae
ror
cld
test
adc
mov
push
aas
cmp
jmp
fnstsw
test
rorl
sarl
lods
lods
jae
mov
mov
or
pop
mov
je
pop
cld
jae
cmpsb
enter
dec
cltd
dec
dec
xlat
mov
mov
test
xchg
les
mov
jle
xchg
xor
mov
pop
mov
push
push
add
pop
nop
xor
arpl
fwait
in
sarl
and
inc
gs
cmp
dec
sub
fsubrp
lcall
mov
fildl
adcl
cli
jg
popf
and
hlt
aam
mov
sbb
push
in
daa
lret
lcall
pop
push
push
fadds
sub
push
inc
in
add
sbb
xchg
xchg
jns
cmpsb
mov
test
xchg
cmpsl
cltd
inc
cmc
dec
rorb
aad
dec
loope
into
inc
add
jmp
std
negl
std
xchg
leave
inc
adc
ljmp
mov
mov
mov
into
ja
fiaddl
pop
and
inc
mov
cld
shrl
sbb
sbb
jecxz
sub
xchg
mov
and
icebp
xchg
sbb
scas
loop
xrelease
xchg
pop
inc
pop
and
je,pt
aam
lcall
xor
jo
mov
cld
push
lret
data16
push
mov
fbld
sub
xchg
sahf
jno
stc
loopne
mov
das
pop
xchg
out
push
jbe
or
jge
enter
mov
jp
pop
stos
sbb
fidivl
jge
pop
adc
push
imul
jl
fsubrl
icebp
jb
je
loop
push
cmp
inc
jge
loop
xchg
pop
mov
sub
scas
fstl
pop
or
xor
outsl
fdivrs
dec
xchg
pop
insb
lahf
fsubs
mov
push
inc
rcrb
and
fistps
and
lahf
sub
iret
lds
repnz
jbe
jle
jge
xor
in
fmul
mov
lahf
lahf
jbe
mov
lods
cmp
cmp
sub
insl
leave
inc
cmp
movb
outsb
or
loopne
pop
scas
lea
fwait
xchg
xchg
bound
mov
push
fdivs
lods
lahf
cld
data16
jno
pop
aam
adc
sbb
shlb
mov
ret
push
es
icebp
and
out
xchg
hlt
mov
add
inc
js
aad
mov
jl
mov
and
in
xchg
mov
or
lods
outsl
jge
mov
jnp
jnp
push
xchg
mov
enter
out
pusha
or
push
lret
push
enter
pop
dec
fsts
jae
push
pop
fmull
ja
push
aaa
or
add
int3
jl
cs
add
test
int3
add
ret
pop
and
insl
push
int3
pop
es
test
cli
xchg
in
adc
stos
pop
cmpb
pop
bound
sub
lods
pop
jne
xor
or
jbe
xchg
mov
inc
sbbl
rcrl
lods
lahf
pop
or
dec
cmp
jne
jae
dec
imul
std
push
pop
fstpl
inc
das
push
jne
push
pop
mov
fs
test
xor
inc
adc
enter
repnz
pusha
or
loop
cmc
popa
cwtl
and
xchg
ret
out
push
and
sub
inc
inc
mov
or
xchg
dec
sbb
mov
xor
loop
in
add
lea
daa
outsw
cmp
fs
test
adc
aam
mov
in
aam
jne
jp
nop
fdivrl
je
mov
nop
adc
clc
jo
insb
shll
ret
pop
movsb
adc
mov
sub
repnz
jne
jecxz
int3
or
icebp
cmpsb
and
xor
in
mov
mov
dec
scas
les
push
mov
sbb
imul
sbb
and
jbe
iret
pushf
mov
add
and
add
faddp
mov
fdivs
sbb
outsb
or
xchg
cmp
jae
mov
bound
mov
mov
cltd
int
xchg
inc
out
scas
adc
mov
or
fldl2e
cwtl
xor
jecxz
or
dec
enter
test
mov
movsl
or
add
outsb
push
jg
cmp
cmpsb
cmp
mull
cmp
enter
aad
mov
push
mov
xor
das
add
mov
push
cmp
push
lock
mov
movsb
fmul
ja
xchg
stos
push
push
pop
sub
out
rorl
out
fldt
xchg
cld
lahf
push
arpl
repz
aaa
imul
je
xor
inc
and
pushf
fidivs
je
and
stc
pusha
cli
xchg
sahf
in
xlat
xor
mov
mov
adcl
push
call
pop
mov
lock
out
mov
adc
sbb
xchg
and
xorb
mov
mov
out
fnsave
lock
incl
xor
int
stc
pushf
sbb
fnsave
cmp
loop
jae
test
pop
loope
mov
out
push
push
js
movb
xchg
xchg
mov
xor
xchg
enter
fnstsw
test
xchg
test
icebp
arpl
dec
sub
and
dec
pushf
fnsave
rcrb
push
sbbb
or
sbb
push
mull
and
fisttpl
loope
mov
stos
adc
addr16
shrb
into
push
inc
pop
icebp
mov
bound
mov
fmull
mov
jno
xrelease
sub
gs
push
add
icebp
out
xchg
sub
sbb
xchg
jns
fists
xorl
pop
pop
stos
adc
and
roll
outsl
mov
ds
fsts
lods
in
insl
mov
and
subb
jae
les
sbb
pop
aam
pop
pop
cmpsb
mov
insb
mov
dec
addr16
dec
test
xchg
aam
jnp
push
xchg
sub
aad
std
lds
movsl
or
push
mov
pop
jecxz
call
sub
test
icebp
hlt
dec
cmc
inc
inc
repz
mov
cmpl
and
leave
lds
lahf
push
cltd
jl
aam
xchg
pop
movsb
pusha
mov
call
pop
fists
pop
popa
in
fidivs
mov
add
out
mov
sti
popf
sbb
mov
inc
out
lods
outsl
popf
into
jnp
sub
jnp
and
or
or
adc
outsl
jl
sub
aas
aas
or
sbb
xor
inc
aad
lahf
cmp
xchg
jo
or
jo
ja
in
pop
pop
shlb
adc
ljmp
addb
mov
pop
push
out
iret
icebp
fidivs
mov
mov
or
sahf
insl
push
outsl
leave
ret
int3
push
mov
out
aaa
pop
or
in
ljmp
cmc
popf
enter
or
loopne
shll
hlt
iret
mov
scas
mov
fld1
pop
add
clc
lret
push
mov
mov
adc
testb
shll
fcompl
dec
jns
and
rep
orb
cmp
rol
dec
enter
loop
fwait
xchg
rcrb
adc
aas
in
dec
or
jle
xchg
fdivs
fisubrl
out
mov
jmp
push
sbb
inc
stos
rorb
imul
cwtl
mov
mov
test
cmp
inc
js
iret
repz
xor
mov
sti
repz
jge
icebp
in
xchg
lea
notl
mov
arpl
jbe
rorb
mov
or
lods
xchg
loop
into
cmpsb
push
in
or
aas
test
ja
dec
lahf
popf
std
in
divl
mov
outsl
ret
or
cmp
ret
mov
dec
dec
nop
pop
sub
or
mov
and
daa
rolb
ljmp
mov
add
mov
cmp
cli
stos
cmp
call
das
nop
pop
lea
fdivr
pop
in
pop
andb
xor
fdivl
fcmovb
adc
aas
adc
and
aas
rolb
rep
popa
ds
movsb
repz
or
adc
mov
insb
mov
push
test
mov
jle
les
out
xor
adc
outsb
jg
adc
cmc
jp
push
xchg
jg
lret
aas
xchg
and
mov
sbb
insb
mov
std
imul
outsl
repnz
in
ret
cwtl
sahf
and
enter
push
push
fisttpl
inc
sbb
jns
sbb
insl
shrb
mov
xchg
sbb
rcll
or
mov
xchg
adc
neg
sub
or
push
into
repnz
leave
scas
test
fwait
sub
pop
test
sub
cmp
pop
sbb
or
xor
jp
popl
ss
hlt
or
xchg
clc
testb
mov
mov
sahf
mov
cmp
je
popf
cmp
pop
cmpsb
movsl
cltd
das
ss
adcb
ds
mov
dec
inc
cltd
inc
pusha
push
mov
xor
cltd
jns
sub
cmp
add
fld
lret
fs
stc
mov
icebp
scas
pop
mov
lods
cmp
jo
jo
jno
add
pusha
addr16
aad
jo
notl
sbb
mov
in
mov
adc
pop
push
xchg
cs
or
rolb
sbb
mov
adc
sbb
inc
testb
out
sbb
daa
and
mov
mov
xor
jns
xor
cmp
out
pop
sub
in
scas
push
out
das
stos
mov
or
fs
add
lahf
pusha
mov
sbb
adcb
orb
jno
mov
clc
ja
icebp
pop
flds
add
cmp
jmp
popl
mov
arpl
popf
in
test
jmp
or
stc
daa
jnp
arpl
imul
stc
mov
stos
pop
or
add
int
sub
and
and
inc
sti
int
imul
inc
lahf
mov
inc
inc
in
lret
push
lret
test
in
xor
push
je
adc
dec
in
sbb
sbb
std
jecxz
add
sub
orb
mov
lds
shr
insb
int3
lods
xor
rorb
enter
arpl
cmp
jnp
sub
fmuls
cwtl
mov
xor
lods
pop
cmp
stc
sub
add
fcom
sbb
aad
sbb
icebp
icebp
or
inc
gs
sahf
push
add
push
nop
out
shr
pop
sub
cmp
dec
dec
mov
adc
push
lahf
inc
and
jmp
rcr
js
cwtl
push
mov
push
cmp
xchg
lcall
data16
sbb
push
mov
negl
mov
mov
and
pop
sub
add
lcall
or
stc
stos
sbb
sbb
shrb
enter
adc
jo
orl
mov
inc
dec
sbb
push
mulb
xchg
adc
push
enter
in
fistl
scas
addb
push
mov
nop
lret
cmovb
inc
push
add
xchg
stc
jecxz
dec
shlb
xlat
mov
xor
xlat
lods
and
sub
sub
ljmp
ret
shll
inc
sahf
xchg
inc
ror
inc
je
and
rcrl
xchg
sub
adc
sbb
shll
fcoms
cld
lcall
xlat
pop
orb
adcl
inc
xchg
or
mov
sbbb
imull
or
jb
push
test
in
add
mov
mov
inc
stos
out
lea
add
sub
fcmovb
into
jp
pop
xchg
mov
bound
testl
sub
lahf
test
sbb
addb
cmp
push
jne
out
mov
in
in
xorl
push
dec
pop
stos
popa
in
in
test
lahf
add
jne
sbb
cmp
js
lret
push
xor
push
xchg
and
adcl
int
adc
loopne
jmp
aad
pop
pop
psubusw
fwait
ja
insb
and
lret
jg
add
jns
mov
or
aas
push
fsubp
aam
das
mov
out
mulb
int
mov
sub
jo
xorb
iret
cmp
xor
rclb
pop
into
lea
sar
sub
jecxz
loope
pop
pop
inc
ds
mov
insb
ljmp
sub
js
int3
shl
jb
scas
gs
sbb
inc
bound
mov
das
pop
lods
test
lods
scas
fs
scas
xlat
jo
and
mov
loop
add
scas
and
cmpsl
std
lahf
sbb
pusha
popa
ja
test
test
and
insb
in
push
insl
sbb
mov
or
rcrl
and
adc
popf
inc
jl
xorb
push
fstpl
cmp
in
mov
xor
sub
popa
push
cli
in
test
lods
push
mov
push
inc
and
fdivl
sub
inc
cmp
pop
cltd
and
das
aad
cmp
nop
test
sbb
pop
add
cs
push
mov
ljmp
or
in
adc
testl
mov
and
addl
push
mov
xchg
cmp
mov
aam
xor
xchg
xor
cld
xchg
or
popf
sbb
mov
ficomps
xchg
loope
jae
xor
mov
addr16
mov
cmp
out
push
sub
movsb
ret
gs
inc
add
push
repnz
loope
push
scas
imul
loop
lcall
inc
mov
dec
push
dec
dec
call
pop
cwtl
push
out
dec
int
cmp
xor
je
repz
ja
pop
decl
cmpsb
das
repz
fs
mov
push
push
pop
invd
dec
dec
pop
xchg
or
stc
xor
fnsave
js
ljmp
cwtl
jno
mov
mov
add
sbb
data16
and
test
push
mov
mov
pop
jl
rcrb
pop
dec
les
inc
push
lcall
jge
and
or
mov
std
call
inc
movb
inc
pop
insl
push
mov
lds
arpl
mov
loop
out
std
push
ss
lods
mov
cmc
mov
sbb
xor
movsb
xor
out
inc
push
lcall
fcoml
and
out
ja
push
jns
push
out
sub
mov
stc
pop
cmp
sbb
lea
jle
ljmp
lds
and
xor
stos
shll
test
repnz
push
sub
addb
addl
jo
insb
pop
xchg
sub
dec
jnp
call
sub
out
pop
loopne
daa
imul
rcrl
mov
insl
mov
es
adc
inc
cmp
or
jp
ud0
xchg
ret
mov
xorb
sub
xchg
jbe
xlat
scas
mov
or
xchg
pop
sbbb
fcomps
mov
inc
sahf
dec
xchg
sbb
seta
adc
cmp
jle
sti
dec
fbstp
lret
adcb
jmp
add
push
or
cld
loope
dec
xchg
loopne
in
push
and
popa
mov
push
pop
mov
jo
jle
inc
loope
test
mov
dec
scas
pop
stos
lods
inc
lret
dec
rclb
in
and
jg
shrl
dec
aas
mov
cmc
stc
pop
jmp
shll
pop
stc
imul
sbb
outsb
outsb
sahf
mov
orl
pop
xor
mov
adc
xor
mov
fisubrl
mov
int3
aaa
jl
push
es
fildll
out
push
sarl
aas
pop
adc
mov
pop
pop
push
test
lock
sub
push
ljmp
and
sub
xor
push
mov
in
ss
dec
outsb
adc
pop
les
mov
sbb
in
cld
ret
push
sub
xchg
fnsave
imul
mov
or
push
sbb
dec
xchg
and
inc
mov
mov
mov
fidivrl
or
xor
cld
shld
pop
pop
imul
mov
stc
clc
cmp
into
xor
insb
pop
cltd
lret
pop
in
std
pop
ss
sub
inc
lods
dec
sbb
xor
fcmovu
jnp
pop
inc
dec
dec
stc
call
jmp
cli
pop
lret
cmp
jp
cld
mov
push
pop
inc
loop
pop
int
and
inc
inc
test
enter
jo
dec
or
inc
test
popf
xor
js
inc
pusha
add
inc
test
data16
stos
and
pop
push
fmull
pop
pop
xorb
ljmp
int3
sahf
pop
jne
inc
mov
jb
sbbl
cld
call
mov
loopne
loop
lret
js
or
xchg
pop
push
fistps
inc
push
dec
int3
mov
sbb
sbb
movsb
push
fisttpl
push
fwait
adc
nop
lds
hlt
push
bound
ret
sbb
out
pop
add
adc
xchg
inc
cwtl
xor
dec
sub
das
sahf
add
jmp
dec
push
mov
mov
inc
push
iret
stc
sahf
je
out
jmp
mov
dec
lods
dec
subb
inc
cmc
cltd
call
nop
adc
cwtl
imul
dec
adc
scas
mov
sahf
out
jnp
pop
mov
cmc
icebp
xchg
fisttpll
xor
mov
jbe
push
push
push
mov
sub
aad
cmp
popa
shl
push
push
sub
test
loop
dec
xchg
lods
or
dec
cmp
mov
es
jg
mov
mov
cwtl
mov
seta
lock
repnz
aas
push
les
bound
mov
lods
cmp
adc
pushf
sbb
cmp
xchg
jg
xchg
mov
or
mov
push
push
idiv
adc
push
lods
inc
jo
je
aas
subb
insl
sbb
sub
mov
bound
sti
jge
fwait
mov
fcomp
fwait
cmp
push
mov
lret
pushf
ljmp
in
out
nopl
stos
mov
movsb
push
sub
dec
sti
or
mov
inc
xlat
xchg
xlat
testb
jmp
iret
pop
cmp
mov
lcall
ficoml
movsb
lds
daa
adcb
out
sub
movsl
out
xchg
fidivrs
insb
xchg
jb
dec
dec
and
cmp
jge
jno
addr16
and
notl
mov
jecxz
push
out
fidivs
out
shlb
fadds
lcall
fcomi
cmc
lods
and
push
repz
xor
sbb
xorb
jl
cmp
sbb
push
cltd
push
cmp
roll
shrb
mov
fldcw
sub
clc
add
lods
add
call
mov
imul
into
fldenv
pusha
jmp
pop
aad
fimull
pop
fucom
test
lret
fsubrs
mov
aam
orb
js
mov
ficoml
je
scas
cmp
loop
ljmp
and
mov
push
and
inc
jp
dec
out
cmc
inc
push
dec
mov
jl
push
push
jne
push
pop
or
clc
inc
aaa
mov
lret
or
sbb
pop
fists
cmp
ja
adc
and
add
push
cwtl
lods
push
mov
fidivrl
pop
fwait
jle
rcr
fcompl
ficoms
mov
call
or
xchg
sbb
dec
xor
loop
pop
or
mov
sahf
mov
repnz
mov
sbb
and
add
sub
xlat
mov
xchg
scas
add
push
ror
jnp
xchg
jns
fwait
repz
aad
nop
out
fldl
pop
or
sub
adc
aas
jne
ret
mov
mov
mov
sbb
push
sub
sbb
out
cwtl
leave
mov
mov
mov
in
add
fstpl
imul
push
and
dec
push
pop
int
in
add
stos
xchg
fsubrl
mov
sub
cmp
pop
and
xchg
pop
pop
andl
xchg
and
imul
xor
je
out
jbe
mov
adc
mov
and
mov
mov
mov
sbbl
dec
lods
dec
loop
out
push
cmpsb
push
addr16
add
xchg
ret
iret
mov
ret
scas
aaa
xchg
mov
daa
cmp
in
lods
outsb
add
ja
mov
or
aas
js
sub
mov
lea
ret
pop
aad
jno
cmp
pop
mov
mov
pmullw
jns
and
cmpsl
xorl
in
fmuls
and
aam
insl
ss
pop
enter
rorb
mov
stos
outsl
ret
push
cmp
cs
outsb
addr16
jge
xor
xchg
mov
push
lret
stc
popf
mov
cmp
push
fidivl
push
cmpsl
lea
std
mov
enter
add
lods
lcall
movsb
add
adc
jge
inc
jbe
jmp
out
orb
jne
das
aaa
ja
pop
cmp
push
sarl
sub
sub
push
dec
lret
rcl
pop
pushf
jb
insl
orb
and
pop
es
pushf
mov
outsl
or
push
mov
jne
push
dec
jnp
mulb
call
ret
outsl
fildl
mov
gs
repnz
scas
test
imul
repnz
push
xchg
dec
and
inc
xor
rorb
mov
cmpsb
cs
movsb
add
xlat
adcl
lock
pop
mov
inc
sbb
cmp
push
es
mov
int3
pop
lret
adc
dec
adc
xchg
out
stos
push
push
mov
popa
or
lcall
mov
test
pop
int
popf
jnp
movsl
std
lods
scas
rcrl
fldenv
ja
push
jae
mulb
lods
ret
xor
addb
movsl
jne
xor
xchg
dec
and
mov
ljmp
fdivl
cmp
cmp
in
mov
mov
adc
imul
adc
movups
mov
out
sahf
pop
mov
pushf
xor
daa
pop
jecxz
lcall
mov
pop
lea
adc
daa
pop
outsb
and
arpl
or
dec
and
mov
jbe
test
sbb
into
shlb
and
jle
xlat
lret
inc
shlb
sub
add
add
in
out
shll
test
addb
fnstsw
aaa
outsl
pop
mov
xlat
je
out
adc
int
mov
stos
pop
xchg
pop
das
cmp
jne
daa
pop
shll
int3
pushf
jmp
add
push
out
push
jbe
popa
fmul
mov
aas
adc
les
ss
sub
sbb
shlb
inc
dec
cwtl
dec
aaa
or
sbb
outsb
popl
pop
dec
inc
repnz
popa
mov
aam
dec
xlat
sbb
stos
push
test
test
push
jp
in
add
cmp
imul
stc
jb
inc
mov
insl
xchg
popf
loop
cmc
inc
and
dec
aam
sbb
adc
adc
dec
dec
cmp
lahf
sub
cmpsb
mov
jecxz
sub
out
inc
push
xchg
lock
pop
push
mulb
aam
push
ja
ja
pop
xorl
xlat
jns
mov
push
mov
mov
cld
dec
in
jno
xchg
aam
std
insl
fdivr
ds
out
lcall
das
hlt
sub
pop
push
push
pop
pop
mov
push
test
and
or
pop
mov
push
dec
sbb
mov
pop
xchg
cmp
inc
loopne
loope
in
imul
mov
and
aas
jae
lock
sbb
lcall
mov
aam
mov
es
dec
pop
jl
push
scas
ljmp
dec
sbb
jl
lret
adc
xlat
in
movsl
lret
mov
shll
jo
jne
iret
sub
inc
insb
push
mov
ljmp
inc
fcomps
adc
xlat
js
pop
test
arpl
scas
out
popf
sub
out
int
or
imul
cld
icebp
repz
pop
xchg
aam
xor
jp
and
push
stos
xor
inc
mov
je
daa
pop
and
mov
sti
mov
sub
push
sbb
in
fidivs
sub
push
in
xchg
sub
out
inc
mov
aaa
sbb
shlb
movsb
xchg
sarl
xchg
test
and
mov
dec
sti
cmc
rcrl
test
pop
adc
inc
lods
arpl
lods
sub
ss
test
movsl
mov
jle
inc
jp
dec
lahf
mov
or
cmp
pop
or
xor
fcompl
sub
dec
pop
stc
cmp
sub
mov
shrl
jmp
jno
loopne
lret
out
and
mov
dec
in
sub
inc
cmp
lret
test
add
xor
scas
out
mov
popf
cli
sbb
xchg
pop
dec
mov
lahf
dec
add
fnsetpm(287
int3
in
lret
aaa
daa
or
scas
leave
push
ljmp
fs
aas
ss
aaa
jbe
mov
pop
sarb
mov
lret
jecxz
pop
jae
cmpl
sahf
addr16
cmp
add
popa
sub
inc
cmc
inc
shll
mov
bnd
sti
xor
adcl
nop
cmp
repz
mov
lahf
or
add
or
xbegin
repnz
push
mov
xchg
jmp
jmp
fldcw
loope
test
xor
imul
jge
dec
mov
es
daa
scas
insb
les
and
fsubrs
add
into
add
mov
pop
adc
pusha
xchg
cmp
int
sub
and
pop
push
lea
xor
rclb
subl
pop
icebp
or
lods
andb
adc
repnz
fcomps
cltd
mov
mov
push
mov
pop
mov
sar
push
jmp
lods
pop
lods
out
loop
cmp
ret
jne
lahf
jne
roll
cmpsb
inc
dec
mov
and
mov
or
pop
bound
jnp
and
in
mov
jg
cmp
mov
je
lods
aas
dec
xlat
dec
sti
xor
test
flds
add
xchg
xchg
int3
sub
adcl
imul
jno
adc
in
fists
iret
and
cs
xchg
jno
lret
inc
cmp
ret
inc
adc
push
inc
lds
or
loop
adc
mov
insl
mov
fcomip
adc
dec
add
into
mov
and
sbb
jmp
aad
fs
xor
mov
cwtl
fs
frstor
dec
and
outsb
pop
push
je
sub
xor
aam
pop
inc
test
mov
in
lahf
xorb
out
mov
add
loope
fstpt
push
popa
inc
adcb
in
repz
inc
lcall
jecxz
in
test
dec
icebp
xchg
xor
fdivs
and
idivb
test
lret
jp
leave
xor
into
cmc
mov
lds
clc
ficompl
push
xor
xor
pop
add
call
push
arpl
lcall
jae
shll
push
dec
mov
sbb
pop
andl
pop
jns
sub
ret
adc
lods
sbb
aaa
in
pushf
adc
shr
jp
mov
jg
xor
sub
push
rcr
jno
popa
mov
insb
sub
mov
push
pop
pop
out
out
imul
xchg
xchg
out
lret
imul
fdivrs
outsl
push
push
dec
inc
data16
jle
arpl
fcoms
push
mov
fsub
mov
mov
stos
xchg
into
js
gs
jmp
and
xlat
mov
arpl
subb
scas
and
rolb
sysenter
gs
sub
xchg
outsl
push
push
je
in
mov
adcl
ljmp
outsb
pusha
pop
iret
sub
outsb
sbb
jne
out
adc
sub
adcb
pop
and
push
in
sub
cmpsl
sbb
mov
aas
cmpsl
int3
mov
xchg
loop
pop
std
in
out
inc
sbb
pop
cmp
push
mov
call
int
sbb
add
push
dec
add
fs
adc
cltd
dec
xchg
fiadds
js
add
add
lret
decb
mov
addr16
xchg
and
scas
mov
fsubrl
add
mov
sbb
fldcw
sbb
push
jae
int
lret
cvtdq2ps
repnz
pop
pop
fidivs
addr16
mov
xor
mov
cmpsb
das
sbb
mov
jne
push
bound
sbb
outsb
mov
adc
aam
pop
adc
xor
pop
call
sub
or
stos
jge
jb
insl
fmull
leave
and
ret
fsubl
inc
lahf
iret
cmp
lods
and
lret
fisttpll
push
lea
idivb
cwtl
out
or
pop
cwtl
push
lcall
add
inc
es
jecxz
test
cltd
rcl
mov
popa
cmpsl
iret
lds
adc
xor
shll
ds
add
test
cltd
in
push
sbb
adcl
aad
and
jnp
and
mov
dec
xlat
dec
mov
in
pusha
cmp
inc
fucomip
shrl
pop
xchg
cmp
add
ret
dec
lea
dec
inc
into
mov
adc
cmc
clc
adc
sbb
jl
mov
mov
mov
loop
jl
sub
test
lret
dec
jns
shr
inc
dec
xor
xor
pop
adc
sbb
cmp
in
xchg
aas
mov
add
push
lret
test
ja
jns
sbb
notl
add
push
pop
mov
scas
dec
addl
outsl
or
push
loop
adc
mov
mov
mov
add
sbb
test
push
sbb
jo
rcrb
cmp
xchg
xor
and
xchg
ja
test
das
mov
pop
pop
inc
jns
lcall
mov
mov
in
lods
subl
xchg
aad
adc
xchg
decb
and
sub
or
sahf
and
hlt
fidivrl
insb
int3
pop
je
sub
adc
notb
pop
add
nop
push
jmp
mov
nop
xor
aad
or
aad
movsb
inc
fsubrs
fadd
imul
or
decl
mov
cmpsb
fxch
jb
lea
addr16
xor
out
or
rorb
inc
imul
stc
fcmove
mov
xorl
cld
jno
sbb
inc
xchg
push
jge
inc
xorb
roll
leave
xor
arpl
xchg
mov
daa
xchg
repz
in
rcrb
test
inc
adc
cltd
shrl
add
jmp
push
ret
wbinvd
fsts
ds
push
sahf
xor
dec
cwtl
stos
js
xchg
mov
mov
fwait
gs
jge
cmp
ds
mov
popf
mov
or
ret
mov
gs
jmp
xor
push
ret
lahf
mov
inc
or
jmp
loope
push
push
ficomps
mov
test
sub
lcall
in
imul
idivb
push
icebp
fst
push
adc
pop
adc
sbb
scas
cmp
ljmp
fidivs
out
pushf
push
xor
push
orl
stos
mov
pop
fcomps
push
arpl
add
mov
pop
pop
jecxz
push
xchg
popa
sbb
add
adc
push
shrl
jge
leave
aaa
jmp
repz
push
mov
mov
insl
mov
mov
adc
pop
sbb
mov
cmp
mov
push
inc
rcll
adcb
xor
fimuls
jle
lods
lock
jnp
xor
adc
lret
out
dec
movsl
and
stos
insl
add
xor
dec
cmpsb
lahf
jns
imul
and
aas
push
or
in
inc
fdivs
mov
dec
into
cmp
inc
add
mov
and
mov
into
and
dec
cmp
insb
ss
push
cli
push
push
leave
cli
stc
xchg
leave
popf
lcall
push
sub
or
pusha
dec
jmp
ret
jg
shll
fwait
negl
ret
xor
imul
insl
mov
or
adc
rorb
es
test
das
adc
imulb
pop
pop
test
incl
sbb
and
lods
push
hlt
jb
int3
popa
mov
daa
sbb
loope
mov
aam
xchg
shll
loop
pop
loop
decl
sbb
mov
cmp
pop
scas
mov
loope
xorl
inc
leave
xor
cmpl
xor
mov
sti
cs
repnz
rep
and
cs
add
cmp
fimuls
sub
ljmp
push
lock
cmp
cmpl
hlt
sbb
mov
pop
mov
mov
ja
add
jp
sub
std
jmp
ljmp
out
cmp
ret
ljmp
sub
adc
sbb
into
mov
lret
orl
jle
shll
cmpsl
inc
mov
sbb
sub
hlt
mov
cmp
out
cmc
xchg
inc
xchg
xchg
jb
arpl
pushf
mov
test
aam
in
sub
adc
cli
popa
jp
push
ret
jno
inc
pop
xor
stos
cmpsl
jle
jns
ret
dec
cmc
pop
push
outsw
sub
iret
mov
add
jle
scas
sub
mov
rcll
pop
int3
cwtl
mov
mov
scas
insb
inc
int
sti
jmp
jae
int3
into
mov
inc
inc
sub
cld
cmp
xor
push
pop
hlt
lods
add
jmp
push
jnp
and
stos
push
adc
sbb
push
jo
rol
ss
dec
fistpl
xchg
iret
xlat
addr16
fstpl
fwait
jmp
mov
call
jge,pn
std
jb
dec
hlt
inc
rorl
jo
arpl
outsl
out
adc
loopne
push
in
xchg
icebp
adc
aad
add
or
push
test
imul
fcomi
xchg
jne
sbb
mov
std
int
ss
aam
sbbl
dec
gs
mov
bound
mov
lods
sbb
push
lret
scas
mov
or
lahf
cwtl
mov
dec
movsb
or
iret
add
jmp
sbb
jo
ds
lahf
inc
sti
mov
jg
leave
pop
add
mov
and
pop
lock
nop
sbb
sti
rcll
mov
inc
aas
pop
pusha
loope
jnp
in
and
xor
lea
jle
mov
fidivrs
xchg
ret
ret
mov
lock
pop
cmp
cmpsb
push
dec
dec
mov
jg
rcrl
jb
mov
push
stos
inc
cmp
popa
push
lods
push
stc
jb
std
or
push
adc
pop
sbb
lods
sbb
push
test
sub
xor
xor
js
pop
addr16
les
inc
pop
stc
jl
cmpsl
subl
lcall
push
imul
mov
ljmp
cltd
mov
dec
fxch
push
xor
js
outsb
loop
aam
cmp
xchg
sbb
into
mov
add
fst
mov
pop
shll
add
push
popf
iret
sahf
jns
cld
mov
add
push
mov
in
add
and
adc
add
test
lret
mov
sbb
mov
push
jge
mov
out
xor
mov
jne
sbb
jge
lret
aaa
pop
fidivl
je
popa
test
ds
loop
and
or
dec
pusha
add
xchg
pop
push
dec
popf
cmp
and
jmp
daa
nop
and
cwtl
ret
mov
fisttpll
jl
jmp
cmp
aam
cmp
sub
ret
jae
out
jge
push
cwtl
jne
sub
repz
subl
inc
loope
or
lods
loopne
adc
adc
insb
insb
sbbl
pop
mov
cmc
lds
xchg
in
sti
xchg
dec
push
hlt
sbb
add
lcall
add
push
mov
cmp
cmp
inc
pop
sbb
mov
movsb
xor
mov
mov
inc
mov
sub
mov
daa
aaa
mov
repz
les
add
frstor
inc
test
mov
movsl
or
cmp
sbb
sub
or
fiaddl
sbb
cmp
pop
mov
aaa
test
sbb
movsl
pop
leave
sbb
xchg
sub
pushf
mov
xchg
leave
fyl2x
dec
ds
push
jo
sti
fcomps
in
in
and
inc
pushf
ds
out
jns
mov
xchg
adc
sub
out
popa
and
std
addr16
insl
test
xor
jecxz
dec
push
imul
test
int3
mov
arpl
mov
xchg
sbb
test
notw
leave
cmc
repz
je
pop
fmuls
rcll
or
sahf
popa
jb,pt
insb
push
xchg
into
jmp
push
xor
cmp
insl
loope
mov
insb
jne
cmp
mov
outsb
mov
dec
cmpsb
and
mov
mov
add
lds
cmp
fwait
mov
and
mov
xchg
sti
push
dec
cwtl
xor
mov
fwait
jle
js
jmp
add
lahf
add
je
xchg
fdivp
mov
lods
push
mov
mov
mov
ja
sbb
xchg
push
fsubs
movsb
arpl
ret
scas
mov
dec
add
mov
jns
mov
jp
addl
mov
insb
sub
je
lods
sbb
xlat
inc
mov
adc
and
mov
mov
adc
test
pop
les
push
sbb
jae
or
push
enter
add
mov
jle
jl
inc
cli
cmp
in
das
lret
mov
hlt
in
inc
push
subb
sti
daa
jb
fmuls
sbb
leave
and
xor
sti
insl
ret
push
inc
xchg
inc
jne
sbb
ljmp
xchg
inc
cs
lret
pop
add
dec
gs
dec
mov
imul
scas
cmpsl
cltd
xorl
arpl
inc
xor
pop
movsb
test
jp
adc
sbb
xchg
testl
stos
lahf
push
cli
es
jne
test
xor
rcrb
sti
mov
mov
xchg
sub
fistps
repz
cmp
or
fcomps
sub
jnp
adc
iret
pop
jmp
pop
mov
ret
sbb
inc
in
test
nop
adc
adc
push
pushf
lea
jl
push
push
mov
and
adc
mov
int
scas
adc
frstor
or
sbb
arpl
xchg
lcall
loope
mov
push
ds
mov
adc
add
pop
ljmp
sbb
clc
aad
movsb
sbb
jp
add
jo
fcomp
sbb
out
loope
call
pushf
repz
push
cld
arpl
inc
add
leave
int3
stos
inc
dec
mov
shrb
movsl
icebp
fstl
sub
fxch
mov
ja
xchg
hlt
mov
sahf
gs
inc
lret
jns
loope
jbe
enter
inc
cmpl
cmp
mov
pop
sarb
mov
adc
cmp
stc
dec
xorb
cli
test
stc
dec
test
push
leave
fmuls
xchg
in
jle
shrl
jnp
jo
xchg
nop
lock
mov
les
cmp
sub
or
jmp
imul
cmpsl
adc
outsl
dec
mov
fsubrs
data16
pop
jp
sbb
mov
fisubrs
sub
lret
in
jl
pop
sub
sbb
inc
pop
or
dec
jae
out
xchg
negb
ficoms
sub
fs
adc
ret
loopne
sbb
mov
xchg
repz
insl
mov
outsb
mov
or
scas
jnp
pusha
cmpsb
pushf
ficoms
or
push
es
fistpll
mov
add
jmp
cmp
fwait
aam
push
int
lds
nop
enter
inc
data16
mov
stc
ret
push
repz
in
jl
roll
ja
pusha
and
mov
insl
fmul
movsl
insb
or
and
jnp
test
imul
cld
or
bound
loope
dec
filds
and
and
and
fstl
cwtl
add
xchg
imul
and
adc
jae
pusha
push
int3
sub
or
sti
mov
in
xor
insb
mov
in
pop
jle
mov
pop
inc
loopne
fwait
in
sti
pushf
outsb
inc
or
jb
shl
je
inc
es
mov
xchg
insb
mov
jge
pop
fcompl
inc
cmp
xor
adc
negl
ret
fs
mov
mov
in
mov
push
rcrb
movsb
push
shlb
aaa
dec
push
outsl
cwtl
sbb
xor
push
sub
push
outsb
jmp
arpl
fstl
movb
or
dec
shrb
pop
cmp
jl
mov
lret
testb
mov
test
leave
mov
add
mov
sbbl
out
arpl
cltd
das
mov
stc
dec
mov
add
and
push
jb
pop
pop
mov
sub
arpl
mov
test
adcb
or
push
and
cld
scas
cwtl
xchg
jmp
jnp
stos
dec
push
fidivrl
pop
xor
test
pop
pop
stos
push
sbb
lds
in
inc
inc
dec
ja
xchg
pop
and
lahf
mov
jp
push
imul
mov
dec
pop
mov
rorb
cmp
add
or
add
jmp
mov
popl
repnz
sahf
iret
mov
adc
nop
sub
pop
pop
rcll
mov
mov
push
je
cmpsb
into
mov
ljmp
stos
lds
subb
add
gs
push
insb
xchg
pop
push
mov
jg
in
lret
fldl
push
xchg
andb
mov
lds
repz
jmp
sub
mov
addr16
sbb
loop
in
sub
lahf
xchg
and
xchg
decl
xchg
and
mov
jp
hlt
jmp
cmp
mov
mov
repz
sub
stos
stos
icebp
les
pop
adc
xchg
ljmp
insl
movsl
ret
cmp
push
je
sbb
pop
outsl
cwtl
push
adc
xchg
repz
jmp
pop
outsb
jl
push
int
bound
movsb
pushw
sbb
mov
push
mov
mov
loop
cmp
subb
or
rorl
mov
repnz
mov
and
dec
mov
sahf
stos
cmc
and
aam
or
insl
jg
out
mov
xor
pop
stc
and
call
mov
aam
cld
retw
lahf
sahf
xor
imul
mov
rol
sub
adc
cmp
mov
xchg
int
jl
sbb
dec
in
and
in
fs
icebp
and
xchg
mov
inc
test
mov
mov
mov
jmp
jp
lods
test
insl
sub
xchg
mov
mov
test
cmc
fcomi
js
pop
rcrb
xlat
loope
pop
mov
and
inc
stos
mov
out
jle
xor
mov
and
outsl
push
loopne
sub
mov
sarl
xchg
mov
add
pop
push
bound
xchg
xor
jbe
sub
outsl
xor
call
imul
ljmp
cmp
dec
lretw
adc
hlt
xchg
in
fucomp
andb
cmp
clc
mov
es
jo
adc
push
daa
cld
pop
and
add
data16
jg
pusha
push
and
push
repnz
mov
das
call
inc
loopne
adc
sbb
test
push
jae
add
adc
cmp
pop
es
add
aad
adc
sub
cmpsl
arpl
ficompl
jle
aaa
cmp
std
xchg
adc
mov
in
jmp
arpl
dec
faddl
cwtl
jmp
mov
inc
dec
push
insb
popa
add
repnz
jp
cmp
ds
add
jae
in
fwait
dec
xchg
cmpb
xchg
test
aas
mov
ficompl
dec
jl
lea
jne
aas
inc
popa
aam
cmp
cmpl
imul
sub
xchg
mov
imul
add
aam
les
sub
dec
adc
lahf
popf
mov
repz
inc
in
inc
shrb
dec
fs
dec
push
jge
stos
cmova
pop
push
or
shl
and
push
cmp
fistl
add
jnp
adc
cmp
xchg
orb
or
in
mov
pop
mov
mov
mov
mov
mov
jg
and
xchg
mov
sub
imul
lods
pop
add
lret
sahf
jno
fidivl
or
jns
inc
cmp
pop
mov
jnp
call
sub
sahf
loope
sub
push
mov
arpl
dec
dec
jbe
adc
outsb
mov
je
sarb
xchg
mov
dec
cs
dec
pop
mov
popf
or
ret
lret
cwtl
cmp
mov
shlb
in
push
dec
and
and
xchg
sbb
popa
insl
jnp
test
sahf
add
je
adc
pop
les
jno
cmp
and
sbb
jns
sbb
in
inc
push
mov
mov
xor
sub
imul
mov
xor
cmpl
jns
aas
sbb
dec
dec
cmp
mov
loope
ja
lods
adc
gs
and
fidivl
mov
test
movsb
int
repz
js
jnp
stc
cmp
ss
and
movsb
or
and
cmp
push
les
push
into
pop
sbb
into
mov
dec
aas
hlt
stos
mov
cmp
call
adc
pop
cmp
sub
out
xchg
rcrl
pusha
xor
mov
xor
scas
mov
pop
ret
mov
jns
cmp
push
xor
insb
test
or
popa
xor
pusha
push
in
insl
mov
cld
or
std
aaa
cltd
inc
outsl
or
mov
shl
xchg
test
jmp
loope
sahf
mov
js
pop
stc
or
dec
into
cmpsb
pop
repnz
xor
pusha
out
add
dec
sbb
add
pushf
cs
jge
cwtl
fcmovb
std
jns
in
mov
ret
arpl
rcll
loop
pop
cmp
rorb
cmp
pop
stos
outsb
adc
push
test
sub
idiv
iret
out
mov
pop
fcoml
es
mov
xor
add
cmpsb
insl
outsb
pop
dec
pop
pop
aam
test
cmp
cmpsb
call
or
sahf
loop
sub
add
addr16
xor
push
push
cmpsb
inc
pusha
shld
or
sub
out
adc
xlat
xchg
mul
xchg
pop
stos
mov
and
popf
cmp
popf
mov
dec
rcr
adc
and
pop
xchg
and
pop
push
and
enter
add
push
clc
mov
or
adc
cmp
aas
mov
adc
adc
je
mov
push
pop
rcll
pop
ret
pop
bound
inc
mov
add
andb
mov
cwtl
icebp
dec
test
outsl
ficomps
rorl
mov
and
repz
and
or
jmp
sbb
fidivrs
mov
jl
cs
insl
jb
in
fdivrp
out
cmp
adc
pop
out
mov
movsb
lea
cmpsb
xchg
ds
hlt
mov
push
push
mov
push
mov
test
adc
jp
xchg
movsb
dec
dec
setnp
jmp
fnstenv
pop
hlt
jo
test
pop
fwait
xor
popf
std
xor
sti
rclb
fisubs
lods
packsswb
cs
push
xchg
inc
mov
mov
mov
or
or
bsf
dec
incb
inc
insl
or
addl
int3
sbb
call
in
in
mov
arpl
ss
es
ds
inc
aam
jecxz
sub
push
cmp
loopne
add
add
roll
testl
sub
add
add
fwait
roll
fucomip
int3
pop
aad
mov
test
in
cmp
ret
mov
pop
out
or
and
xorl
sti
ljmp
dec
adc
jmp
xor
lods
jbe
xor
push
mov
pop
sbb
xchg
std
sub
pop
in
xchg
and
repz
xchg
pop
negb
fsubs
ds
push
sbb
pushl
loop
ret
packsswb
repnz
adc
popf
adcl
pop
lea
or
mov
push
mov
mov
sbb
mov
mov
cs
cmp
insb
push
mov
test
dec
pusha
sub
pop
out
es
xor
mov
push
test
xorl
push
inc
jge
in
mov
rcl
rcrl
fwait
rcrl
cs
ljmp
cmp
cmp
test
andb
xor
insb
mov
out
repnz
xor
loope
inc
mov
adc
mov
xchg
add
mov
inc
in
js
push
test
int3
aad
popf
repnz
pop
push
in
jbe
aas
cs
jmp
jl
popa
cmp
lahf
inc
test
or
sbb
fldl
sbb
ret
sub
inc
fwait
mov
shlb
inc
cld
inc
je
push
jnp
inc
jl
pslld
mov
mov
aam
dec
dec
dec
cmp
mov
sahf
test
adc
test
xor
insb
jno
xchg
mov
addr16
jo
sub
loopne
imul
sbb
and
ljmp
in
je
hlt
in
lods
xchg
jmp
andb
outsb
lahf
gs
or
lods
dec
insb
cwtl
ss
jae
popl
in
or
dec
into
add
ficoms
testl
out
pop
mov
sahf
into
loope
push
loope
mov
and
adcl
push
fisubs
dec
jp
push
or
pop
pop
sub
dec
sub
js
sbb
dec
push
dec
mov
test
out
mov
mov
je
pop
xor
dec
jbe
xor
push
sbb
fstpt
gs
out
daa
addb
sub
pushf
jno
daa
mov
leave
orl
pop
insl
xchg
xor
test
push
popf
or
into
aad
aas
outsl
fiadds
scas
add
xor
les
add
ss
fmull
jns
lock
std
jmp
je
addr16
jg
fsubrl
pop
jne
pop
jle
outsl
or
inc
push
cmp
push
xchg
jmp
add
pop
mov
push
push
xor
shrb
leave
mov
sahf
aas
in
in
dec
jmp
mov
fidivrs
outsb
cltd
aaa
and
jmp
loope
adc
insb
cwtl
cmp
jmp
dec
jecxz
pop
test
sub
mov
xlat
lret
push
ds
das
add
or
dec
add
insb
pop
into
fdivr
sbb
and
fwait
mov
jecxz
mov
mov
add
inc
pop
push
pop
cld
xchg
inc
insl
rcl
insb
popa
outsb
into
mov
mov
sbb
pushf
leave
jnp
jp
aas
pop
cmp
adc
outsb
dec
repnz
xor
inc
mov
dec
mov
add
fwait
ds
and
jne
cld
stc
pop
or
subl
mov
xchg
and
rcl
adc
ds
xor
loopne
ficoms
inc
lahf
add
add
bound
xchg
add
lret
int3
dec
or
shl
stos
push
iret
cwtl
shl
fidivrs
xor
mov
jg
pop
add
scas
add
xor
mov
fucomip
sub
push
fs
inc
mov
lret
fistpl
push
and
pop
cmp
pop
int3
lea
pop
push
jno
out
push
and
stc
sbb
lods
mov
cmp
cmp
ss
fmull
add
sub
repz
jno
int
jmp
mov
cmpsl
mov
sbb
or
mov
scas
in
jl
mov
jl
xchg
or
inc
or
mov
or
mov
sahf
mov
repnz
stos
fwait
jae
inc
rorl
cmp
sbb
dec
adc
gs
fs
push
scas
int
xlat
pop
pusha
xchg
test
shlb
loopne
insb
ret
mov
call
int
fwait
ret
ret
add
ja
dec
xchg
jns
add
inc
xor
call
in
mov
push
cmp
xchg
pusha
in
rcll
das
xchg
insb
pop
loope
inc
add
sarl
leave
pop
pop
bound
lods
jl
inc
divl
push
mov
xor
cmp
pop
bound
xchg
lods
jge
mov
pop
xor
inc
xchg
test
out
fdivl
fcmovu
fisttpl
mov
cmp
pop
and
fadds
xor
add
and
ja
negb
mov
jb
pop
inc
loopne
mov
xchg
xchg
mov
dec
sahf
nop
or
fstl
mov
add
add
lods
fstl
int
jecxz
mov
cmp
das
fucomp
lods
mov
fstps
mov
pop
mov
adcl
inc
pusha
lcall
cmpsb
aad
les
push
add
test
lea
ret
int
pop
dec
popa
orb
and
test
sbb
push
push
xor
adcb
pop
test
pop
cmp
cmpb
cwtl
add
and
xchg
cs
inc
add
insb
mov
sbb
adc
jns
mov
push
add
adc
lock
push
fstps
clc
outsl
jno
cmpsl
add
jo
std
jecxz
sbb
lods
ret
fs
pminsw
push
sbb
push
movsl
pusha
pop
push
add
movl
cmp
and
cmp
sub
iret
test
hlt
es
dec
jnp
mov
cmpsb
imul
mov
ficomps
dec
mov
test
out
sub
xorb
mov
rorl
cmpsl
addr16
sub
pop
ja
loope
mov
dec
jg
out
pop
int
mov
xor
int
fisttpll
pushf
jecxz
mov
testb
xor
repnz
xchg
inc
ds
or
mov
cmpsb
xchg
out
push
mov
sub
clc
jle
jbe
dec
movsb
cmp
or
xor
mov
sahf
mov
adc
inc
xor
jmp
mov
aaa
push
outsb
sahf
sbb
imul
cli
mov
xchg
lods
and
mov
fcomps
sbb
mov
and
sbbb
test
xchg
sub
mov
jo
data16
inc
rcll
dec
inc
mov
mov
sbb
incl
mov
sbb
pushf
mov
push
xor
es
pop
mov
arpl
sbb
bound
add
addr16
std
iret
mov
jge
jae
push
xchg
insb
push
xchg
inc
jb
int
add
inc
cwtl
sub
add
arpl
insl
lods
add
lock
scas
testl
addr16
pop
testl
xor
insl
xchg
in
jne
popa
mov
imul
cmp
jb
mov
in
pop
pop
inc
xor
pop
gs
cld
test
xchg
out
fiaddl
lock
dec
pop
mov
dec
xor
push
aaa
in
push
ja
jecxz
sbbb
and
out
iret
push
and
sub
adc
and
movq
adc
dec
xor
sbb
mov
shll
fmull
fidivs
lcall
les
imul
sub
cmp
and
in
rcrb
add
pushf
rcr
push
push
std
fcom
adc
mov
insl
pop
push
popa
mov
cld
roll
mov
je
adc
add
xchg
test
mov
outsl
fildll
test
mov
sbb
movsl
subl
push
sar
out
jb
sti
cmp
cli
bound
xor
js
dec
jns
push
mov
into
mov
rorb
push
adc
pusha
je
lea
aam
aaa
test
push
jle
loop
iret
cmp
cmp
pop
pop
jnp
ds
add
jae
shrl
ror
lds
mov
mov
and
adc
sub
jns
gs
jecxz
xor
das
jne
dec
scas
jecxz
lret
pop
jg
adc
orb
loop
lea
clc
add
or
das
imul
test
cmp
xacquire
cmc
ror
cmpsl
or
dec
shrl
das
ficomps
xlat
aam
mov
aas
jmp
int3
xchg
es
out
lahf
xchg
add
xor
loopne
or
adc
hlt
jecxz
adc
mov
jno
loope
inc
sub
and
push
xchg
mov
sub
xchg
jne
lods
lods
es
call
sub
pop
sub
insb
int3
test
and
das
fdivs
dec
pop
lcall
out
sbb
push
sbb
mov
mov
repz
lods
ret
adcl
mov
jg
mov
sub
inc
dec
jge
clc
enter
adc
lock
sub
int3
mov
sti
bound
xchg
rolb
cli
mov
lods
pushl
sbb
loop
aaa
ret
push
inc
jp
push
mov
call
sbb
imul
mov
jecxz
popf
ljmp
imul
sub
negb
mov
cmp
and
movsb
jp
push
jbe
mov
xchg
out
daa
adc
push
jns
lds
mov
dec
push
mov
test
je
lock
repnz
dec
xor
pop
add
dec
mov
sarl
int3
mov
xchg
sti
pop
lds
jg
fsub
sub
mov
jmp
cmpsl
fadds
clc
or
cmp
mov
sahf
add
aam
lds
lahf
test
movsb
sbb
inc
pop
fwait
aaa
xchg
sbb
cmp
jnp
mov
mov
dec
xor
sti
roll
ljmp
mov
es
adc
cmp
or
xchg
xadd
add
push
add
inc
incl
push
sbb
int3
inc
loope
jae
push
bound
dec
scas
mov
and
iret
aam
inc
adc
xchg
cltd
imull
mov
and
shll
push
test
imul
mov
js
std
sub
sbbb
xchg
dec
cmp
addr16
mov
orl
push
jle
aad
mov
inc
stc
cwtl
mov
cmc
cmp
or
outsl
sub
mov
sbb
shl
in
ds
dec
mov
or
outsl
cmp
and
sti
mov
xor
cwtl
xchg
or
pop
push
outsb
icebp
aad
not
ret
imulb
mov
popf
cs
mov
divl
add
push
cs
push
lds
icebp
xor
adc
xchg
add
mov
cmc
scas
pop
or
inc
sbb
ficomps
lahf
push
out
cs
pop
iret
xchg
mov
mov
dec
adc
ficoms
loope
pop
and
lcall
pop
inc
xchg
iret
mov
cmpsl
insl
imul
sbb
jnp
jno
push
nop
das
or
out
je
rcrl
sti
pop
fstps
and
mov
decb
mov
es
mov
or
cmc
fnstsw
xchg
or
mov
adc
dec
clc
aaa
push
shrb
or
xchg
pushf
mov
outsl
icebp
jp
xor
std
adc
sub
xchg
add
cld
icebp
add
cli
adc
rcll
pop
js
sub
dec
fdivl
jbe
out
cmp
mov
jle
lahf
add
and
mov
add
mov
adc
in
cmp
xchg
mov
ljmp
test
lahf
rcrl
cmp
adc
shll
inc
insb
inc
push
scas
inc
fcmovnb
inc
sahf
sub
xchg
sub
mov
push
insl
jne
stos
xchg
insb
dec
loope
cmpsl
repnz
mov
fstpt
fs
push
lcall
add
pop
mov
fwait
inc
daa
sbb
xchg
or
sub
adc
aad
std
mov
mov
inc
fmull
sti
mov
mov
out
mov
ja
test
call
es
xchg
adc
push
inc
insl
enter
je
sbb
xor
fwait
outsb
xor
movsb
mov
mov
nop
jmp
mov
or
pop
aaa
movsb
ret
dec
push
xor
fnstsw
jp
dec
js
test
pop
mov
faddl
popa
add
aam
lock
adc
movsb
jge
mov
imul
out
int3
rclb
push
mov
in
ret
cmpsl
insl
mov
mov
mov
lods
call
imul
push
adc
cmpsb
test
lcall
icebp
xchg
sbb
pop
ds
test
and
mov
je
xchg
lock
pushf
pop
adc
hlt
sub
lds
divb
test
xchg
xor
sub
sub
decb
jle
push
stc
repz
pushf
stc
repz
repz
int3
adcb
bound
add
inc
shll
cmpsb
mov
mov
mov
jge
addr16
fwait
sbb
mov
lret
pusha
stos
xor
test
into
add
lret
sub
mov
shll
xchg
add
adc
jns
pop
ss
add
repz
adcb
ja
lods
mov
test
lods
jl
lret
xchg
daa
int3
rcr
lock
or
add
in
bnd
mov
or
or
mov
repnz
xor
mov
repnz
and
lods
xor
and
mov
or
xlat
pop
out
inc
insl
cmc
scas
xchg
stos
popa
lahf
fcmovb
cltd
iretw
and
iret
cmp
je
mov
test
sbb
sbb
ret
mov
mov
and
sbb
xor
je
jl
std
add
mov
loope
push
mov
sub
pop
das
gs
stc
lahf
popfw
xchg
sti
sub
add
xchg
and
fidivs
div
mov
cmp
push
stos
insl
add
mov
bnd
or
jge
inc
xchg
dec
xchg
mov
jg
dec
adc
fistpll
ljmp
push
cmpsl
xchg
cs
add
rcll
xchg
sti
pop
aam
pop
int3
je
pop
jl
inc
or
js
or
mov
aas
xchg
stc
dec
adc
int3
inc
dec
adc
stos
cld
cld
rclb
push
cmp
push
mov
ja
out
test
repnz
cmpsl
mov
sbb
dec
aam
loope
into
cmpsl
lret
inc
adc
sub
xadd
inc
int
pop
xor
ja
sub
jae
jecxz
cmpb
ja
ret
mov
cmp
fucom
ficomps
mov
dec
jle
ret
sbb
rolb
xorb
imulb
lcall
enter
xor
adc
cwtd
cmpsl
jmp
rclb
xchg
popf
mov
pop
adc
fs
popf
add
pop
loop
pop
ljmp
or
mov
xlat
inc
add
popa
lods
inc
jg
test
and
aas
movsl
std
nop
repz
ds
outsb
cmc
lds
sub
jbe
inc
xchg
jb
push
imul
stc
mov
lods
or
push
sub
repnz
mov
call
leave
mov
jne
sbb
pop
cmp
mov
aam
inc
shl
mov
fcoml
in
inc
cmpsl
scas
je
mov
or
pop
in
call
mov
shlb
or
mov
fsub
in
cmp
sub
add
lcall
insb
mov
pop
mov
loopne
jg
inc
adc
cld
cld
cmp
aaa
adc
sbbl
and
xchg
jmp
enter
fwait
xor
aas
or
jb
data16
push
icebp
out
pop
repz
iret
push
lods
push
scas
dec
rcl
dec
xor
sub
insb
in
imul
mov
xor
or
movsb
clc
mull
loop
push
mov
loope
cmp
xchg
dec
sub
aam
mov
in
arpl
pop
gs
int3
leave
xor
or
cmp
mov
adc
xor
cltd
push
mov
lret
inc
fsubrs
repz
push
inc
outsl
je
outsl
gs
xchg
in
or
add
push
jg
cmc
xor
cmp
mov
stc
dec
movsl
add
lret
push
xchg
loopne
fisubs
ss
imul
pop
ret
xor
imul
push
mov
stos
lahf
outsl
pop
jmp
sub
imul
pop
add
movsl
loope
repz
out
push
sbb
mov
lcall
push
sub
pop
dec
iret
dec
in
jbe
dec
xchg
inc
fcmovu
sub
xchg
ret
test
jecxz
xchg
and
xchg
aad
popa
lret
mov
sti
lock
lret
out
loop
pop
cmc
inc
mov
lock
dec
mov
jno
sti
jl
jnp
and
fs
adc
pmuludq
popa
add
cmp
sub
stc
fisttps
out
mov
sub
outsl
sti
mov
sub
xchg
fwait
arpl
adc
inc
xchg
jmp
push
mov
shll
lret
add
lcall
aaa
xor
movsb
lahf
jg
dec
or
push
mov
xorl
xor
inc
pop
add
popf
lods
imul
fisubl
iret
mov
fsubl
jne
std
aad
pop
xor
lds
fdivrs
in
or
jne
int
mov
inc
aad
sahf
leave
push
cwtl
inc
mov
push
dec
pushf
pop
jecxz
pop
pushf
sub
sub
popf
mov
int3
imul
inc
cld
xchg
repnz
jns
int3
pop
cmpl
add
mov
fimuls
lods
sub
sub
push
add
add
or
cmp
arpl
adc
sub
xor
adc
adc
shll
add
pop
test
test
jne
cmp
xor
push
or
sbb
cmp
mov
inc
and
imul
or
jle
cmp
mov
cmp
ss
sti
in
lahf
dec
cwtl
movsb
jmp
dec
xchg
cli
cmp
data16
mov
xchg
test
cmp
add
sub
xor
inc
rorl
ss
jne
into
push
adc
cs
push
sti
loope
leave
xor
jp
and
xor
jmp
repz
mov
test
or
mov
pop
imul
adc
pop
jg
pop
and
js
mov
pop
gs
mov
aad
lcall
push
push
or
pop
mov
and
inc
adc
lock
fstl
lret
aad
pusha
inc
jg
xchg
ja
xchg
cli
imul
push
mov
cmp
pushf
mov
push
subb
loopne
sti
clc
xchg
cmp
sub
mov
loopne
dec
adc
mov
outsb
inc
int3
inc
lret
cmp
cltd
mov
mov
rol
stos
inc
dec
xor
imulb
dec
testb
jl
std
lcall
stc
xchg
out
loopne
inc
sub
fidivrl
test
adc
fcmovb
loope
or
sbb
fistps
les
scas
jno
mov
fwait
adc
push
repnz
cmpsb
mov
mov
xorb
nop
je
xor
xor
cli
sub
lret
mov
cmp
mov
push
dec
xorl
out
cmpsl
mov
pop
mov
jg
xchg
fisubs
cmpsb
cmp
sbb
sub
push
movsl
dec
jmp
addr16
sbb
sub
ret
ret
cmpsl
sub
push
jne
push
sbb
es
stc
aad
pop
out
scas
les
mov
imul
outsb
jo
xlat
icebp
dec
add
fisubs
jae
push
inc
in
jb
in
cs
outsb
cmp
xchg
mov
leave
test
sbb
pop
jae
cwtl
in
movsb
pop
cs
daa
jg
inc
push
pop
je
std
push
mov
cwtl
mov
mov
pop
xor
cmp
mov
in
xlat
adc
push
out
cmp
pop
lea
cs
repz
adc
dec
cmpsb
pop
lahf
out
cli
or
fisttpl
add
mov
out
ss
ret
jns
aaa
inc
add
pop
test
mov
in
jmp
pop
mov
add
inc
mov
dec
pop
mov
and
decl
adc
int3
xchg
arpl
mov
mov
iret
mov
push
stos
fsubl
pop
movsl
rorl
lods
nop
inc
sbb
sbb
pop
xor
mov
dec
popf
fadd
or
pop
lock
push
neg
cwtl
sbbl
sahf
xchg
nop
push
gs
int
decb
mov
mov
add
data16
mov
mul
jl
shlb
pop
pop
sub
sub
push
popf
xor
mov
xor
pop
int
and
dec
cmpsl
jl,pn
fnstsw
push
xlat
cltd
mov
xor
mov
stc
jnp
add
mov
sahf
xchg
mov
and
sub
add
xor
mov
xchg
fucomi
in
and
adc
addr16
cmc
mulb
dec
mov
or
mov
outsl
lods
es
mov
adc
sbb
inc
les
mov
mov
xchg
sub
imul
in
push
sarl
repnz
cmpsl
mov
pop
popa
xchg
xchg
cmp
jnp,pt
dec
mov
mov
fdivs
xor
mov
mov
fisubl
mov
lods
jg
cmpsb
repnz
enter
daa
sbb
push
add
test
pop
adc
ja
sbb
pop
sbb
xor
pop
loop
test
int3
cmp
mov
pop
mov
movb
jle
fidivs
push
mov
leave
leave
sbb
addl
inc
inc
repnz
xchg
jo
mov
stc
movsl
icebp
dec
loopne
and
testl
jmp
adc
jge
es
push
cmp
xor
xchg
fisttps
fildl
adc
jno
outsb
inc
xchg
dec
pop
movb
idivb
pop
movsl
pop
dec
jns
ret
mov
dec
jnp
mov
rcll
mov
xor
int3
outsl
fists
loopne
cmp
mov
scas
fisubs
outsb
out
xchg
mov
daa
icebp
push
fsubr
xor
xchg
xchg
and
jno
sub
nop
push
ret
fs
and
hlt
xor
cmp
inc
out
loop
pop
jb
stos
lcall
adc
rcrl
mov
push
mov
adcl
jg
imul
frstor
mov
xor
dec
in
xor
xchg
js
adc
movb
fmuls
div
adc
ss
mov
out
je
ret
popa
xchg
pop
fbstp
push
xchg
push
or
hlt
and
lea
imul
mov
lret
sbb
hlt
mov
scas
add
adc
mov
and
movsl
and
mov
pop
out
cwtl
xor
mull
mov
stos
cmpb
pop
addr16
test
xchg
stc
mov
ss
lcall
insl
imul
mov
jmp
push
outsl
pop
xchg
jne
ss
stos
outsl
lods
es
pop
jb
sbb
adc
outsl
dec
repnz
insb
fstpl
mov
imul
jne
jle
or
scas
fldenv
or
mov
push
ljmp
push
in
adc
in
sbb
jecxz
or
outsb
arpl
sbb
xchg
sbb
stc
scas
aad
imul
mov
dec
add
shll
add
push
xchg
stos
or
cli
add
push
sub
mov
push
cs
push
sub
or
pop
ret
mov
jne
and
lods
cmpsl
adc
inc
mov
das
adcb
jle
call
loope
sub
jp
pop
pop
insl
mov
scas
leave
sub
xchg
addl
dec
sahf
mov
pop
mov
mov
es
or
clc
sub
shll
lods
fstpl
test
push
inc
adc
xchg
dec
data16
aaa
pop
subl
push
inc
push
jno
xor
hlt
xchg
cli
aas
mov
lret
mov
mov
cwtl
dec
sbb
nop
or
shll
mov
push
ja
jae
mov
enter
adc
outsl
cltd
cwtl
pop
xchg
sbb
or
cmc
dec
pop
inc
lock
adc
dec
lds
daa
add
mov
sub
insb
xchg
inc
xchg
jnp
add
jb
mov
sbb
imul
js
adc
pop
push
insl
sub
ret
mov
add
pop
enter
pop
xchg
in
fsubrl
add
dec
xlat
jb
adc
or
mov
jp
nop
mov
lret
mov
mov
mov
xchg
in
outsl
mov
mov
pusha
lret
inc
inc
jae
cmp
sbb
das
pusha
jb
adc
sub
pop
lret
adc
rcrl
movsb
mov
sbb
mov
loopne
out
push
stos
xor
loopne
adc
lods
mov
and
outsl
fcmove
pushf
cmp
movswl
ret
mov
mov
xorl
xor
mov
jmp
mov
fcmovne
sub
mov
pop
push
jae
int3
clc
dec
jo
pop
aam
enter
push
cmp
jle
inc
lods
and
inc
pop
mov
popf
pop
jmp
mov
incl
mov
mov
das
mov
cmp
outsb
sbb
js
dec
inc
stc
bound
cmpsl
out
add
loope
sarb
cmpsb
cmp
scas
and
js
incb
dec
in
adc
movsl
test
pop
or
push
and
cwtl
incb
out
call
add
jae
cmp
pop
outsl
jg
jbe
shll
cld
pop
mov
adc
sub
aas
fsubl
lock
push
jl
sbb
cwtl
mov
in
dec
shll
sbb
cmp
cmpsl
lea
js
jns
clc
mov
inc
pop
mov
mov
xchg
xor
stc
fadds
mov
xorl
push
add
xchg
ja
xlat
cmp
test
testl
xor
les
mov
ret
pop
xchg
xor
push
lea
insb
es
dec
sub
mov
lods
int
sbb
inc
aam
data16
sub
jne
dec
sub
sti
pusha
int
dec
mov
xchg
mov
xchg
jne
or
popf
dec
sbb
fcompl
lret
scas
es
out
divl
iret
jg
mov
push
push
bound
push
outsl
adc
jl
imul
lds
cmp
sbb
dec
out
popf
adc
and
lret
cmc
sahf
mov
loopne
mov
sbb
imul
imul
push
inc
and
sbb
or
push
mov
pop
cltd
mov
hlt
inc
scas
inc
jno
jle
push
jg
lods
lret
push
inc
push
push
adc
fcoml
cmp
jp
sub
int
xlat
add
imul
dec
je
stos
in
pop
test
jbe
xchg
pop
jno
cmpsb
dec
pop
push
ja
mov
adc
pop
sub
insb
xchg
fistps
rorb
cltd
inc
push
add
cmp
ljmp
jge
mov
add
cmp
cmpsb
push
push
fldcw
xchg
sbb
mov
mov
push
mov
pop
fisubrs
test
sub
dec
lods
sub
roll
jo
daa
jmp
movsl
sbb
imull
cwtl
jmp
jo
mov
in
jmp
nop
ret
pop
lea
sub
cltd
int3
inc
mov
xchg
mov
push
pop
pop
rcrb
cmp
push
jl
decl
inc
pop
xchg
xchg
fxam
test
pop
insl
push
sbb
ds
fwait
insb
dec
mov
lahf
mov
dec
lods
or
hlt
xchg
jne
fistl
stos
or
loop
popa
mov
xchg
cltd
or
pushf
pop
pushf
cmpsl
sub
mov
stos
outsb
arpl
pop
movsl
inc
mov
dec
dec
mov
sti
jae
jecxz
fbstp
xchg
pusha
and
mov
jns
sar
mov
outsl
repnz
add
sahf
push
cmp
or
hlt
mov
sub
pop
test
inc
aam
in
cmpsb
daa
cmp
pop
mov
jge
jb
mov
inc
pop
out
adc
pop
test
arpl
and
cs
dec
mov
add
sbb
daa
pandn
movsb
fmul
sbb
lcall
mov
jg
sti
and
pushf
adc
sbb
inc
mov
dec
jmp
adc
push
into
pop
fcomps
dec
mov
jl
loope
xor
fstp
mov
sbb
cmpl
ljmp
xor
add
sub
pop
sbb
mov
insl
cltd
dec
dec
subb
and
pusha
imul
fcomi
push
xchg
mov
ss
lock
jne
inc
leave
inc
cmp
inc
inc
shll
adc
loopne
xchg
dec
adc
lret
pop
lret
loop
push
and
insl
or
pop
inc
fmulp
loopne
xor
push
loope
or
ss
out
dec
jne
mov
es
aam
jle
in
pop
sbb
jb
iret
jmp
hlt
enter
js
inc
dec
or
imul
adc
mov
xchg
lahf
jnp
cmpsl
into
xchg
cld
sub
enter
ss
je
int3
dec
and
call
adc
xchg
sahf
jmp
sti
cmp
sub
scas
fildll
add
in
pop
iret
cs
data16
scas
adc
push
fcmovne
scas
jle
push
sbb
pushf
subb
mov
jge
in
pop
xchg
je
outsb
rcrb
sbbl
test
adc
fisttpll
sbb
push
sbb
clc
xchg
or
mov
int
xchg
inc
fs
cmp
scas
popa
insl
xorb
shll
add
insb
mov
xchg
daa
out
dec
cld
xor
jno
pop
inc
sub
pop
popa
ja
aas
fildl
xor
xchg
cwtl
out
dec
fsubp
arpl
mov
dec
cltd
push
xchg
aam
jecxz
int3
cmc
jnp
lock
subl
push
xor
insb
cmp
and
pop
add
inc
aam
xchg
mov
xor
sbb
push
pop
movsb
push
or
pop
adc
sar
mov
mov
ljmp
scas
add
add
or
outsl
dec
daa
mov
xchg
fs
lcall
mov
fbstp
aad
stc
jbe
mov
rcrb
ret
inc
lcall
loop
popa
stos
aaa
mov
add
int
push
push
jns
xchg
push
or
notl
out
jge
mov
sbb
sbb
mov
jp
aas
add
inc
dec
jge
mov
and
inc
lea
lahf
sti
fidivs
jp
jmp
sarl
sub
test
lods
jle
cli
push
ret
fucomp
push
repz
mov
pop
sbbb
mov
xchg
mov
jo
rclb
inc
test
cmp
mov
and
sahf
decb
shrb
inc
fisttpl
into
filds
add
int
sti
nop
add
push
adc
popf
cmp
mov
pop
std
xlat
cmp
flds
aas
mov
xchg
sbb
mov
testl
icebp
loop
push
jae
aaa
xchg
lods
mov
xchg
xchg
cs
pop
mov
aaa
mov
gs
jb
lods
loope
fwait
es
cmpsl
int
xor
insb
xorl
rolb
rcl
adc
les
pop
jno
adc
adc
daa
cs
fwait
add
cld
jo
ds
and
das
push
outsb
fstpt
xchg
xor
mov
scas
insl
sbb
xor
fidivrs
or
ljmp
fs
mov
pop
bound
ss
push
pop
es
xor
loope
add
add
mov
popf
divb
mov
mov
pop
add
hlt
inc
movsb
lret
and
mov
mov
xchg
push
in
fdivl
fildl
ljmp
inc
sbb
cmp
lcall
lods
mov
push
xchg
inc
aam
mov
outsb
add
xor
and
jmp
daa
mov
into
out
mov
push
call
xchg
cmova
push
jb
xchg
movsb
cmc
inc
jmp
lea
sub
test
outsb
jno
push
add
mov
pop
insb
pop
adc
into
stos
stos
and
xchg
mov
ja
inc
enter
jmp
fbld
sahf
int3
mov
inc
xchg
repz
stos
cs
and
sbb
jae
lret
sbb
gs
jb
jno
jl
sti
push
mov
bound
cmp
dec
sbbb
jae
xchg
test
lock
pop
call
fldenv
cmc
clc
popa
ret
and
pop
aad
stos
lods
jg
jb
mov
adc
out
stc
jge
aas
or
mov
mul
mov
repz
jmp
cmp
mov
or
xor
loop
cltd
push
add
add
mov
cmc
lea
jnp
in
popa
mov
jl
inc
push
push
xor
cltd
mov
inc
sbb
les
lcall
inc
cmpsl
out
push
outsl
pop
jbe
pop
jnp
cmp
dec
mov
jb
mov
mov
inc
les
aam
dec
test
movsl
push
dec
xor
test
bnd
cltd
lret
and
les
push
lahf
mov
adcl
xor
pop
subb
push
add
pushf
filds
and
sbb
shlb
daa
mov
loope
mov
std
sub
add
lds
push
sbb
jb
hlt
mov
dec
inc
mov
jns
loopne
int3
in
in
stos
adc
mov
cmp
repz
pop
adc
xchg
xchg
dec
push
ret
stc
mov
sahf
in
popf
inc
cmp
cs
fidivl
rclb
sbb
jmp
mov
fdiv
mov
mov
mov
cmp
daa
test
mov
shlb
push
rep
ror
cmpsb
xor
jb
stc
movsl
push
inc
in
jae
ljmp
pop
sub
ret
mov
push
push
dec
dec
xchg
pop
inc
xor
icebp
ret
pushw
jnp
subb
push
mov
sbb
lret
addl
inc
sbb
out
push
xchg
sbb
in
or
cmpsw
fimull
xor
xor
dec
jbe
jnp
mov
dec
jae
addb
inc
mov
sbb
je
inc
mov
xchg
aad
and
xor
lods
mov
mov
rcl
std
push
mov
ds
xorb
loop
ret
in
jbe
imull
mulb
out
pop
les
hlt
jmp
lahf
pushf
dec
in
adc
lods
repnz
mov
cmp
cmp
negb
sub
xchg
ss
push
mov
push
xor
push
adc
xor
aas
div
mov
std
cli
clc
inc
push
pop
mull
mov
push
sar
xchg
dec
jne
and
push
cwtl
roll
jmp
jl
cmp
inc
push
mov
mov
sub
pop
pop
jmp
in
fs
mov
sub
xor
movsl
dec
imul
int3
sub
or
movsb
cli
or
mov
faddp
lea
pusha
jmp
rorl
lods
mov
jle
cmpsl
divb
mov
mov
lret
xor
imul
and
add
call
push
push
repnz
push
psubb
jecxz
sub
xchg
xor
cmp
aaa
mov
leave
icebp
imul
out
xorb
pop
or
in
mov
sub
add
jns
lods
out
sbbl
div
movsb
lds
mov
mov
jecxz
push
loopne
mov
xlat
scas
dec
mov
pop
cmp
arpl
pushf
outsl
cld
pop
or
sbb
mov
mull
dec
mov
nop
shll
adc
and
hlt
add
aam
daa
xchg
fsubl
ljmp
inc
jg
xchg
add
push
jns
cmp
out
xchg
out
mov
jmp
lods
lahf
aaa
testb
sub
outsb
push
mov
cmp
shlb
ds
dec
imul
sbb
add
push
sbb
jb
jnp
lret
and
insl
rolb
or
cmpsb
dec
pop
pop
pop
nop
xchg
xor
lret
int
cmp
icebp
or
adc
rcl
aaa
gs
out
and
arpl
sbb
jbe
xor
decb
jp
notb
test
sub
adc
inc
stc
shl
divb
pop
jg
fsubl
cmp
jne
mov
or
scas
xchg
sbb
or
stos
icebp
dec
clc
cmp
fidivs
es
or
jl
testl
push
test
jg
inc
mov
adc
lods
sbb
dec
aam
mov
pusha
xor
pop
daa
nop
lods
cmp
rorl
xor
loope
cld
sub
mov
pop
cmpsb
aad
mov
test
jle
adc
xchg
in
adc
inc
in
hlt
adc
jae
and
out
mov
cli
sub
test
stc
and
jmp
sub
mov
or
int
adc
push
inc
jnp
sbb
stc
jb
jge
sbb
cltd
stc
push
movsl
mov
jae
jl
push
cli
mov
xlat
out
mov
xchg
mov
imul
sub
adc
lock
xchg
lea
iret
ss
add
stc
pop
shll
push
cwtl
xchg
xchg
imul
filds
inc
or
sbbl
mov
mov
test
aaa
sub
lock
jns
mov
aam
inc
std
dec
push
mov
fs
lret
inc
push
jbe
add
imul
jge
cmp
scas
mov
movsb
std
jb
sub
xor
and
sbb
cmp
cmc
je
shrl
sub
push
cmpsl
xlat
cmp
scas
int
inc
pop
pop
lock
push
cmpsb
dec
sbb
ljmp
into
mov
sub
outsl
cmp
add
jp
scas
jae
movsb
dec
mov
mov
mov
jno
xor
add
test
adc
pop
test
in
imul
fucomp
fisubl
aas
ljmp
mov
data16
or
mov
mov
popa
icebp
lahf
ss
loopne
add
sbb
cmp
jp
lret
sub
decb
sbb
sub
movsl
or
pusha
js
push
repz
mov
scas
jmp
sar
xor
add
out
iret
cwtl
add
add
mov
in
fisttpl
and
fwait
lock
insb
pop
mov
imul
test
adcb
mov
jb
paddq
mov
iret
push
aad
lock
xadd
out
mov
inc
jb
sbb
js
xor
lds
push
sbb
jae
mov
jnp
sahf
enter
rcrb
int3
push
les
aam
ficompl
pusha
xchg
jge
int
test
add
call
push
sub
adc
jmp
cmp
add
push
push
mov
mov
es
aaa
in
add
xchg
icebp
push
out
xchg
fsubs
adc
dec
pop
mov
and
dec
mov
push
insb
or
das
sub
cmp
fs
and
bsf
stc
sbb
xor
lods
cmp
fidivrl
pushf
rorl
in
mov
xchg
out
inc
mov
inc
clc
inc
imul
adc
aad
dec
mov
adc
in
push
xor
lcall
lds
jecxz
pop
mov
nop
dec
and
call
push
or
push
mov
sahf
ljmp
out
lahf
fwait
popa
push
jae
cmove
in
mov
pop
sbb
rolb
les
add
push
mov
or
sub
rcrl
mov
mov
stos
loope
inc
stos
xchg
pop
icebp
cmpsl
fucomip
or
jb
sbb
add
insb
mov
mov
int3
test
mov
sub
scas
xor
xchg
sub
daa
lods
pop
mov
add
push
cmp
cmc
jmp
aam
cmp
sub
jge
adc
jb
sub
xchg
movsl
andb
inc
mov
mov
aaa
outsl
and
in
mov
mov
sbb
mov
hlt
add
jne
inc
gs
int3
das
xlat
sbb
ss
cmp
sub
add
fnstcw
add
jl
push
sbbb
xchg
ds
mov
or
arpl
mov
inc
xlat
pop
push
cmp
imul
outsl
jne
xchg
imul
sarb
sbb
aam
pop
sub
fcomp
pop
pusha
add
mov
inc
mov
fsts
push
fwait
xchg
test
add
enter
and
mov
jbe
mov
sti
cmp
enter
cmpsl
insb
hlt
leave
imul
jl
ficomps
sbb
mov
mov
jb
or
pop
xor
stos
pop
mov
xor
sbb
sahf
lods
clc
inc
lods
lock
add
sbb
into
pop
and
sub
sbbb
std
add
outsb
icebp
nop
es
dec
lcall
in
inc
xchg
sbb
push
ret
or
mov
cmp
or
ljmp
cwtl
fwait
dec
jo
subb
insb
call
aam
dec
js
mov
fisttpl
xchg
stc
inc
add
push
into
or
into
cli
mov
mov
icebp
mov
pop
mov
mov
popa
push
fcmovnu
sahf
add
jnp
data16
xlat
xor
ljmp
aad
or
jecxz
and
add
scas
push
adc
jg
orb
arpl
jp
in
pop
mov
cmp
je
mov
xor
cmpsb
push
ret
mov
rcrl
icebp
mov
popa
repnz
stc
aad
xlat
test
cmp
inc
out
dec
mov
idivl
popl
sbbb
mov
jns
sarl
jmp
push
and
int
pop
mov
jp
and
cmpsb
fwait
lods
dec
pop
es
xor
pop
sarb
in
mov
lret
inc
addl
xchg
or
and
mov
imul
nop
sub
outsl
jle
pusha
insb
daa
dec
xchg
std
int
int
loop
xchg
cmpsb
nop
mov
out
movsl
ret
pop
scas
loopne
in
call
mov
sub
jle
out
cli
pop
mov
cmpb
sbb
sbb
cmp
fsubr
das
lods
divl
jmp
fidivrs
pop
je
in
mov
xchg
bound
cmpxchg
lahf
pop
lcall
push
add
sti
ret
sub
lds
movlps
mov
insl
call
out
cmpsb
mov
or
fdiv
out
mov
cmp
cwtl
test
cmpsl
push
jecxz
mov
mov
bound
data16
je
mov
insl
bound
xchg
adc
and
xlat
mov
adc
mov
jb
in
ds
push
mov
push
sub
xor
cmp
fcom
sub
add
sub
sbb
das
aam
popf
jbe
fwait
lahf
inc
push
and
jns
outsl
cmpb
ror
int
hlt
mov
sbb
or
mov
jno
data16
pushf
subb
repz
pushf
and
and
cs
push
insl
decl
cmp
dec
dec
sahf
dec
ret
test
sub
and
or
add
mov
ja
popf
xor
clc
adc
pop
data16
dec
fmuls
addl
jne
pop
jbe
xor
xor
dec
push
sti
fldl
add
and
mov
fsin
mov
adc
mov
and
mov
vpsubsb
sti
iret
mov
and
xor
and
dec
mov
outsb
and
mov
dec
push
adc
out
jns
adc
insl
mov
and
and
insl
add
sbb
sbb
sub
push
loop
sbb
cmp
stos
inc
jns
shrl
in
ret
push
xchg
adc
mov
out
scas
mov
mov
ret
xchg
clc
out
jge
addr16
arpl
nop
scas
sbb
cmp
jle
mov
xchg
mov
outsb
outsl
inc
pop
and
mov
push
pushf
sahf
repz
ret
shlb
push
jb
mov
adc
lret
fsubrs
jg
and
push
cmp
xor
out
movsb
lret
cmpsb
push
mov
xchg
mov
cld
test
stos
inc
dec
pop
lock
xchg
adc
in
push
sbb
stos
outsb
mov
pop
mov
or
aam
mov
hlt
cmpsl
xchg
inc
push
test
fs
jb
lods
mov
xchg
jno
sbb
inc
jae
adc
cmp
sahf
mov
mov
adc
jo
fidivs
sub
dec
je
movsl
push
pop
aas
cld
in
dec
and
test
int
sbb
xor
inc
ja
lcall
mov
fbstp
incb
add
out
sbbl
and
into
mov
dec
xor
test
sbb
pop
cmp
dec
sbb
pusha
push
inc
daa
jnp
xor
outsl
in
inc
fnstcw
push
subb
fnstsw
add
cmp
mov
jo
jl
loopne
rclb
arpl
xlat
pusha
jle
sbbb
jg
mov
mov
les
rcrb
mov
pop
lcall
in
push
xchg
sub
decb
xchg
int
mov
push
test
pop
push
pop
cli
or
in
leave
xchg
jnp
pop
mov
scas
mov
fimuls
daa
inc
loopne
xor
imul
hlt
or
ret
mov
mov
jmp
xor
cmp
inc
or
sub
test
fldl
lods
cmp
hlt
gs
movsl
push
jmp
fcomp
xchg
jnp
repz
shlb
mov
add
int
imul
inc
imul
iret
aaa
add
mov
lretw
sub
in
lock
sti
push
aad
add
sbbb
pop
xchg
sbb
lret
into
mov
inc
sub
push
rol
mov
or
pop
lock
inc
arpl
loopne
imul
adc
push
pop
lcall
hlt
mov
adcl
mov
and
lods
pop
sub
gs
add
fisubl
fldenv
mov
push
inc
mov
repz
mov
jb
sub
idiv
sbb
push
jno
sub
fwait
mov
xchg
les
ja
adc
rclb
pop
pop
adc
push
shrb
lcall
sub
sti
mov
inc
mov
jb
test
jge
sbb
jne
pop
int3
out
mov
pop
adc
dec
fisubrl
outsb
loope
movsl
test
ljmp
outsl
inc
pushf
xor
push
adc
push
in
outsb
push
jo
imul
add
adc
out
pop
fsub
jns
hlt
xchg
xchg
jg
mov
shrb
arpl
lock
sub
dec
adc
xor
and
pop
push
sbb
jg
xor
or
jle
add
aaa
mov
les
lea
fs
push
daa
mov
lcall
and
sub
cld
xor
add
scas
xchg
jp
pop
hlt
mov
or
cmp
ljmp
add
pop
jge
pop
lret
pop
scas
repnz
movsl
decb
and
cwtl
adc
inc
add
adcl
movsb
dec
cmp
xchg
mov
cmc
mov
inc
xchg
fiaddl
inc
lea
js
mov
insl
mov
sahf
iret
mov
xlat
pop
lock
repnz
nop
sti
daa
dec
mov
mov
rcr
mov
and
aam
faddp
aam
dec
lahf
addl
mov
js
iret
repz
push
xor
stos
or
aam
jecxz
push
push
dec
sahf
enter
mov
mov
push
cmpb
or
pop
fnstcw
psubb
std
jl
int3
add
xor
incb
mov
imul
mov
xchg
gs
cs
ljmp
aam
rcrl
jo
shll
sbb
movsb
add
es
into
add
sub
xor
inc
fsubr
gs
das
imul
mov
scas
or
ljmp
mov
sti
mov
xchg
or
and
out
cmpl
and
out
lret
rol
inc
xchg
repz
mov
adc
mov
lds
jnp
cmpsl
pop
loope
and
or
jp
lcall
popf
push
xor
mov
mov
rcrb
dec
fdivrs
movsb
mov
inc
mov
mov
div
inc
xchg
in
mulb
or
leave
xor
out
jecxz
dec
sbb
fistpll
imul
outsb
loop
jae
sbb
mov
mov
stc
jb
xlat
lret
sar
roll
dec
out
fwait
jbe
popf
push
out
lret
mov
iret
xlat
xor
popa
in
inc
add
pop
add
lcall
mov
jmp
inc
or
dec
paddusb
out
push
ret
dec
dec
cmp
add
fsubl
xchg
mov
pop
addr16
testl
ret
fldt
pop
add
insl
test
ret
xorb
pop
shrl
je
push
neg
mov
test
push
dec
sti
mov
test
pushf
mulb
rcrl
scas
cmp
push
jp
scas
loopne
dec
in
add
cmp
jae
gs
movsl
cmp
add
sahf
repnz
and
push
roll
insl
sti
pop
inc
pop
add
xchg
in
lds
push
push
mov
push
outsb
scas
leave
jo
rcl
xchg
pop
add
inc
xchg
jbe
mov
and
sbb
jnp
inc
notl
cli
sbb
fidivrs
ret
cmp
sub
sbb
call
mov
ret
mov
inc
fisttpl
pop
and
sbbb
mov
inc
sbb
ljmp
ds
jmp
push
shlb
shlb
scas
test
cmp
subb
pop
shlb
outsl
inc
add
test
icebp
add
repz
jmp
les
add
repnz
jno
insl
mov
mov
jns
xlat
cs
dec
popf
or
daa
ss
int3
test
adc
insl
je
or
test
pusha
in
pop
or
and
xchg
aad
das
sbb
icebp
lea
cmp
jbe
pop
aam
andl
pop
mull
push
lock
cmp
adc
pop
jo
mov
imul
jg
test
push
roll
pop
inc
mov
push
mov
add
mov
add
cli
shlb
cmp
mov
leave
stos
mov
pushf
daa
cmp
xchg
iret
in
jmp
jle
aad
xor
dec
lds
movsl
lcall
jle
dec
mov
fidivrs
mov
sub
fs
loop
lock
cmpsb
jbe
cmpsl
ret
stos
mov
inc
jae
push
inc
rcrb
lods
jb
jg
inc
outsb
sub
add
xchg
into
aad
sbb
adc
jae
call
mov
call
or
lcall
sti
adc
pushf
mov
dec
imul
fbstp
outsl
fcompl
rcl
or
inc
aas
pop
cmp
sti
and
sbb
stos
xor
and
lods
xchg
sahf
jecxz
pop
xchg
loopne
adc
lret
frstor
arpl
xor
and
ds
dec
pop
ret
das
lods
mov
mov
lds
repnz
xchg
mov
push
jne
pop
enter
xchg
sub
sub
add
lea
adc
sub
or
push
lahf
test
and
add
imul
jo
sti
and
pop
negb
sarl
or
pop
test
sub
mov
std
es
or
call
push
lcall
sbb
jge
and
mov
cmpsl
loope
test
test
jne
lock
add
push
aam
stos
push
daa
xchg
repz
ljmp
sub
repnz
push
out
outsl
paddsb
dec
pushf
adc
lock
or
aad
adc
xor
enter
repz
xor
adc
push
xchg
pop
rorb
test
mov
test
movsl
add
xor
cmpsb
mov
jmp
scas
test
inc
mov
jb
or
test
mov
pop
hlt
or
pop
sbb
movsbl
or
adc
pop
cmp
dec
jmp
or
dec
jle
repz
fnsave
mov
ret
xchg
xchg
add
add
je
pop
out
addr16
pop
mov
pushf
and
dec
jae
cmp
cwtl
mov
jno
sub
je
adc
popa
sub
out
dec
mov
in
dec
inc
push
jb
test
fdivs
pop
cmpsb
test
and
or
inc
call
mov
push
mov
xor
es
aam
mov
mov
clc
xor
iret
repnz
xchg
aas
add
mov
push
or
iret
mov
loopne
fistps
aad
fbstp
mov
jnp
mov
out
repz
mov
push
jle
cmpsl
stc
sub
jl
call
sbb
push
dec
inc
pop
test
aaa
xchg
sahf
mov
xchg
aas
mov
mov
adc
std
fdivs
out
test
lret
pop
fdivs
loope
or
mov
inc
movsb
dec
shrl
loope
xor
imul
pop
jge
scas
icebp
xchg
adc
add
in
cld
jnp
and
test
mov
imul
cwtl
adc
and
hlt
imul
jmp
pop
or
or
aas
push
jl
pushf
jbe
fwait
adc
in
imul
lret
inc
add
in
lret
loope
dec
sub
je
add
mov
jl
inc
mov
push
cmp
and
mov
in
pop
jecxz
lahf
rcl
decb
cwtl
dec
iret
xchg
outsb
pop
jge
popa
mov
fdivrs
lret
stos
push
xchg
sbb
jno
mov
jo
xor
push
jge
sti
inc
sbb
in
sbbl
add
adc
xchg
add
sahf
mov
mov
sbb
and
insb
sti
mov
jmp
mov
jl
xor
or
jae
or
inc
cmp
push
inc
aas
cmp
hlt
mov
mov
push
add
aaa
pop
fbstp
mov
adc
fwait
mov
and
bound
ret
push
outsb
sbb
iret
xor
xor
imul
sub
fsts
push
mov
imul
cmp
xor
fimull
in
imul
cmp
xchg
adc
and
push
adc
stc
mov
or
pop
out
les
lcall
sbbb
lret
shlb
xlat
inc
dec
jle
add
ret
jp
or
std
mov
js
jno
dec
pop
sbb
aam
and
jbe
andb
xor
inc
cmc
test
or
cmp
lods
test
lock
lcall
or
sahf
add
mov
in
pop
cmpsl
add
imul
mov
in
addr16
sub
repnz
jecxz
subb
sbb
push
add
es
data16
push
call
or
and
aaa
mov
data16
sub
ret
jnp
insb
rcrl
roll
and
stc
das
out
jb
imul
ret
je
mov
cmc
xchg
lods
cmp
mov
push
xor
in
and
push
out
sbbl
fildl
mov
mov
add
sti
pop
cmp
cmp
dec
and
int3
in
int
imul
adc
add
xlat
push
outsl
push
sbb
bound
push
fisubrs
imul
aas
or
ljmp
jne
mov
ja
mov
cltd
mov
pop
call
hlt
cltd
lods
pop
xchg
sbb
imul
xchg
mov
hlt
popf
test
dec
icebp
dec
jb
xchg
aad
xor
aaa
add
cltd
in
inc
imul
xlat
jns
lods
cld
js
dec
test
sub
lret
push
subl
sub
dec
jl
or
mov
jmp
fldt
dec
xchg
cmp
pop
adcb
in
sbb
stc
inc
loop
mov
xchg
dec
ret
xlat
xchg
stos
mov
jle
daa
rol
mov
cmp
loopne
sub
sbb
inc
add
call
jecxz
jmp
push
jne
mov
adc
neg
repz
daa
xchg
fldt
and
jecxz
jbe
arpl
xor
jb
push
or
adc
mov
iret
xor
inc
inc
xchg
push
loopne
lock
arpl
ljmp
sbbb
mov
dec
xchg
cmpsl
jg
mov
xchg
mov
adc
lcall
jae
pop
aad
jmp
pop
imulb
push
mov
adc
add
or
jno
lret
push
ret
xchg
ffreep
lret
push
cld
push
and
fs
fs
pop
movsb
subb
call
loope
lods
ret
push
repz
es
insl
mov
loope
jb
fisttpll
jp
sbb
out
lret
data16
rcrl
scas
adc
and
aas
and
movsl
add
popa
xchg
adc
or
push
orb
gs
repz
test
add
ret
cmp
mov
cli
push
sub
in
mov
lret
aas
in
add
push
inc
mov
xor
sbb
pop
cmpsb
pop
xchg
xor
or
leave
dec
adc
aad
mov
es
mov
xchg
add
inc
jg
in
lods
loop
sbb
mov
push
mov
mov
add
rcrb
dec
das
insl
out
adc
jg
clc
in
xchg
jle
fcmovu
sub
movsb
jnp
dec
push
dec
mov
inc
test
int
sub
in
and
sahf
mov
and
xorb
xor
outsb
es
push
stos
lea
out
cltd
adc
xchg
or
mov
pop
movsl
rorl
cmpsb
and
loope
stos
sub
xchg
imul
mov
es
shl
fwait
loopne
jp
add
push
test
int
or
ret
popa
xchg
das
xor
xchg
cmp
pop
sub
or
fildll
mov
push
or
fistl
jge
inc
mov
or
pop
cli
jecxz
adc
inc
sbb
sbb
test
mov
std
inc
jo
adc
clc
scas
cmpsb
cld
push
sbb
jae
jns
subl
xchg
sub
fdiv
aad
push
imul
mov
jb
xchg
out
in
pop
js
mov
rcr
xor
add
xchg
int3
rorb
push
mov
jnp
xlat
mov
lock
and
sub
add
ss
aam
cmp
push
ljmp
and
inc
push
sub
mov
cmpb
cs
ret
outsl
rcrl
xchg
mov
adc
ja
cmp
add
aam
jmp
scas
mov
or
cs
lock
stos
icebp
adc
adc
das
sbb
sbb
mov
jae
cld
sub
inc
lcall
scas
push
or
dec
pop
inc
add
cmpsl
fmuls
inc
jns
and
cltd
push
mov
lahf
test
nop
jne
xor
or
fistps
cmc
out
inc
out
movb
mov
nop
mov
jmp
mov
jp
lcall
inc
orb
pushf
les
jge
push
mov
add
std
sbb
inc
mov
mov
jp
cmp
cli
sti
int3
dec
out
out
push
lahf
out
insb
dec
pop
inc
iret
aam
add
push
mov
and
cmp
add
in
test
adc
inc
pop
cli
cli
cmpsb
loopne
pop
cmp
pop
push
mov
cwtl
loope
jb
sub
pop
bound
cmpsl
movsl
shl
push
xor
clc
jo
pmuludq
jb
cld
dec
out
jge
xlat
mov
xchg
push
sbb
or
mov
adc
pop
pusha
jmp
scas
xchg
mov
fs
xchg
add
sub
lods
out
mov
sbb
sbb
ja
and
push
fldcw
pop
mov
sti
cld
pop
add
sub
stos
js
dec
mov
mov
in
cmp
mov
test
lcall
shll
or
lret
mov
sub
pop
xchg
inc
jecxz
mov
ja
mov
fwait
les
dec
std
jmp
cmp
lcall
fisubrs
add
add
mov
mov
add
xor
xchg
aaa
push
cmp
outsl
jb
add
enter
out
fisubl
push
iret
mov
fsubrp
inc
xchg
jle
pop
and
pusha
xchg
xchg
sbb
jmp
sub
jne
xor
adc
inc
fldl
das
push
adc
push
xor
sub
or
cmp
scas
xchg
pop
nop
repnz
sub
push
adc
adc
daa
lds
mov
cmp
adc
aam
mov
xor
mov
push
es
popf
arpl
add
outsl
xor
mov
iret
cmp
scas
aaa
push
or
popf
mov
sbb
and
jmp
pop
dec
out
mov
sub
and
scas
mov
adc
push
sbb
aaa
cwtl
push
sub
aam
inc
cmp
pop
mov
imul
int3
inc
ror
sbb
je
xor
pushf
lock
rcrb
pusha
xchg
push
mov
insb
inc
orb
sahf
mov
jnp
and
pop
cmovns
gs
loopne,pt
jmp
scas
xlat
mov
inc
or
dec
roll
into
jmp
adc
push
mov
fbld
inc
js
dec
mov
pop
push
pop
pop
mov
test
push
jno
std
jecxz
mov
cli
popa
ret
fptan
inc
mov
push
add
mov
push
outsl
fisttpl
or
sub
adc
mov
mov
cmp
lret
clc
sub
push
das
rcrl
adc
push
pop
adc
jmp
sub
es
mov
push
test
dec
cmpsb
push
mov
xchg
mov
in
dec
adc
arpl
and
inc
mov
and
ja
divl
dec
insb
mov
pusha
inc
push
xor
mov
sub
jp
pop
mov
or
and
sub
sahf
imul
cmp
mov
jecxz
jmp
sub
jb
mov
hlt
lea
jae
adc
or
jp
xchg
sbb
dec
mov
and
mov
je
push
jmp
and
leave
test
in
stos
mov
push
adc
arpl
aaa
pop
cmp
inc
mov
lret
xor
pop
in
dec
add
inc
adc
cmc
adc
add
insb
imull
pop
pop
jge
stc
or
jbe
insl
bound
inc
xlat
filds
and
mov
dec
daa
xorl
ficomps
fcomip
cmc
outsb
mov
push
xor
mov
cmp
xor
xor
ret
push
jns
iret
movsl
cmpsl
shll
jo
cs
cs
dec
and
inc
in
ret
out
push
xchg
sub
adc
or
cmp
js
mov
fcmovnu
hlt
notl
stc
cltd
decl
jge
xor
add
pop
dec
aaa
iret
mov
add
sbb
dec
pusha
mov
or
stc
mov
jecxz
fbld
push
adc
gs
lock
vpsadbw
f2xm1
rcrl
cli
out
mov
scas
mov
lcall
sahf
movsb
add
adc
pop
push
cmp
std
mov
cs
xchg
stos
or
xchg
mov
push
mov
and
enter
mov
test
in
out
or
mov
sub
adc
xor
and
mov
test
mov
mov
test
dec
jbe
xor
pop
test
dec
out
or
xchg
mov
js
mov
cmp
mov
es
push
sbb
fstpt
pop
jmp
test
jbe
inc
lret
adc
xor
cmpb
mov
aam
sbb
jmp
popa
dec
pop
mov
add
rcrb
dec
dec
xchg
inc
cs
mov
int3
hlt
mov
or
xchg
hlt
xchg
sub
add
ficomps
std
mov
sbb
pop
jnp
lret
mov
adc
insl
sub
jp
xchg
and
rcr
arpl
ja
sbb
or
push
scas
icebp
pop
mov
cmp
in
negb
pushf
stos
cmp
mov
push
lea
add
jl
cmc
mov
push
call
mov
fnstenv
pop
push
sbb
shrl
repnz
mov
cmp
popa
add
and
ret
enter
scas
push
pusha
push
test
call
pop
test
mov
xchg
xchg
in
mov
push
rorl
cld
fucom
mov
push
movsl
mulb
aam
xchg
loop
pop
jle
or
lds
mov
test
loop
jmp
push
inc
js
xor
mov
push
repnz
lods
imul
rcl
mov
fs
scas
push
clc
dec
push
xlat
lret
mov
data16
mov
rol
mov
mov
dec
stos
flds
repz
stc
xor
and
out
pushf
outsl
inc
push
cmp
inc
inc
addb
fidivl
enter
mov
rolb
imul
inc
inc
and
in
gs
dec
add
adcb
or
pop
mov
mov
lret
xchg
icebp
mov
mov
stos
xchg
scas
mov
jo
inc
inc
jp
pushf
jmp
aad
dec
ja
into
mov
loopne
add
inc
movsl
mov
pusha
ljmp
or
movsl
icebp
arpl
sub
xchg
pushf
enter
jno
fstps
dec
jle
xor
cmp
sub
xchg
push
add
or
xchg
fisttps
mov
xchg
mov
cmpsb
add
cltd
or
and
dec
test
pop
sbb
sbbb
xor
sahf
mov
cmp
mov
jne
leave
icebp
aaa
pop
sub
xchg
test
jbe
cmp
and
stc
dec
inc
jecxz
sbb
aaa
cmp
pop
xchg
dec
xchg
bswap
addr16
jns
sti
loope
sub
xchg
out
je
fsubrl
pushf
push
subb
out
and
test
faddl
pop
xor
sub
enter
adc
xacquire
and
xor
add
add
dec
imul
fildll
push
xchg
es
cli
xchg
into
adc
cmp
xchg
aas
aad
mov
jno
out
in
sarl
xor
in
xchg
fwait
sbb
sub
jne
ss
cmpsl
adc
ja
lret
pop
std
clc
sub
xchg
or
push
bnd
lret
je
or
repnz
es
pop
cli
mov
jle
push
push
bound
call
aas
shll
js
addr16
add
lcall
adc
adc
and
in
push
sub
into
int
adc
xchg
sub
pop
clc
mov
xor
sbb
pop
and
inc
mov
lods
pop
incb
xchg
add
mov
fstl
jno
jp
not
imul
cmp
mov
ja
lret
hlt
and
stos
insl
xchg
call
or
rol
jl
outsb
js
push
jge
pushf
sbbl
push
push
add
mov
fwait
stos
or
sbb
mov
cltd
cmp
pop
test
xor
mov
mov
fisubrl
and
je
lea
and
pop
test
jecxz
leave
push
imul
lcall
mov
roll
adc
adc
mov
aaa
aad
adc
jo
and
dec
aaa
addr16
dec
cltd
in
sub
sbb
inc
outsb
add
das
adc
fwait
and
out
pop
mov
incb
mov
mov
imulb
call
mov
add
aas
push
mov
int
add
pop
mov
xchg
mov
and
inc
ret
imul
cmp
xchg
cmp
sbb
dec
nop
lahf
ljmp
mov
xchg
hlt
push
pop
sarl
ret
int
imulb
inc
outsl
pop
mov
adc
call
test
or
xchg
js
push
sar
pop
jmp
adc
push
dec
adc
or
mov
push
fs
mov
jecxz
mov
jl
data16
mov
jo
fsts
imul
movsb
bound
leave
and
jecxz
jle
and
or
jge
mov
jp
inc
mov
inc
out
mov
xchg
int
pushf
outsb
iret
inc
mov
fildll
or
push
or
popf
adc
ds
cmp
int3
cmp
pop
call
lret
enter
out
jmp
icebp
mov
jle
mov
pop
inc
mov
dec
pop
adc
ja
ja
push
xor
fs
dec
daa
mov
je
jle
rep
fisubrl
leave
imul
out
xor
cwtl
xor
shlb
mov
not
dec
loopne
sbb
js
push
push
xchg
dec
mov
insl
lahf
bound
pop
sbb
fwait
movsl
and
sbb
bound
push
stos
pop
cmpsb
hlt
push
addb
pushf
pop
pop
xchg
mov
sbb
jle
mov
cmpsb
mov
xor
xor
popa
push
push
call
sub
mov
cmpsb
sub
push
inc
mov
mov
out
mov
adc
aas
mov
push
fmul
jo
fsubrs
xchg
insl
mov
lds
pop
repnz
data16
xchg
mov
or
inc
addr16
dec
push
and
rclb
or
mov
dec
les
fldt
xchg
les
ljmp
dec
insb
xor
xchg
jmp
xchg
jmp
sbbl
jle
jno
jecxz
cmp
adc
das
and
push
and
repnz
iret
or
jp
fwait
jge
dec
xchg
dec
pop
div
bound
loope
pop
cwtl
push
imul
or
lods
stos
cmp
dec
call
push
cmc
inc
mov
out
push
scas
roll
cld
movsb
loopne
mov
pushl
mov
or
loopne
fcomip
pop
pop
daa
gs
ljmp
or
das
loope
inc
pop
je,pn
fsubp
sbb
xor
sub
sub
cmp
cmp
pushf
add
dec
pop
jne
and
inc
mov
bsf
dec
iret
shll
mov
xor
es
inc
call
inc
add
push
push
fincstp
clc
pop
movsb
imul
lret
lea
mov
scas
loope
lahf
lods
aad
mov
int3
add
fnstsw
orl
fists
mov
fwait
loopne
push
push
or
dec
mov
mov
push
mov
dec
sbb
mov
stos
mov
lea
mov
int3
mov
inc
push
and
lods
sub
adc
sub
push
mov
cmpsl
and
ret
mov
lock
mov
mov
es
jo
dec
jb
popa
scas
fucomp
icebp
aaa
dec
inc
repnz
in
fisubrl
cmc
jns
jne
rcl
sbb
add
cmp
repnz
sub
test
int3
sub
mov
push
movsb
xor
xchg
insb
mov
std
pop
sub
rclb
jle
mov
in
sub
mov
hlt
aaa
push
andb
lods
insl
out
xchg
pop
add
or
jg
insl
fs
movsb
and
popf
lods
daa
test
mov
jns
inc
xlat
iret
lea
in
mov
push
xchg
xchg
inc
inc
roll
xor
sub
push
adc
mov
pop
loope
popa
mov
dec
repz
mov
push
imul
js
mov
dec
shrb
sbb
inc
lds
pop
push
add
xor
inc
xchg
stos
push
outsb
sub
enter
and
sahf
sbb
int3
in
and
pushf
mov
cmp
enter
fcomi
xchg
clc
cli
add
ficoms
mov
loop
sbb
imul
pop
out
out
ffree
stos
lret
jno
loop
jo
add
movsl
repz
sub
fucomi
addr16
xlat
mov
inc
or
mov
xchg
push
jbe
pop
xor
or
ret
cld
test
mov
arpl
pop
mov
sbbb
and
cmc
aaa
adc
std
pop
cs
mov
jmp
mov
mov
in
xchg
stos
add
inc
cs
rcrl
xchg
mov
push
movsb
aas
rol
sbb
ljmp
test
push
pop
int
xor
or
mov
cmpsl
add
cmp
sub
or
and
push
dec
adc
mov
insb
iret
or
rorb
adc
push
sub
jbe
cmc
ret
in
fwait
movl
popa
shlb
in
test
inc
fldcw
in
repnz
jno
test
adc
fildll
xor
mov
das
fists
cmp
mov
out
jecxz
jnp
jmp
gs
or
push
add
pop
ljmp
mov
test
mov
imul
test
inc
mov
test
andb
push
adcb
jp
push
ljmp
sub
lods
add
push
jnp
repz
ret
pop
xchg
cmp
push
pop
scas
enter
jmp
lods
mov
loopne
lahf
push
jae
loop
sbb
xor
outsb
mov
icebp
ret
push
push
popf
lods
and
mov
mov
jle
repz
mov
iret
cmp
inc
jnp
stos
rcll
add
adc
out
mov
push
les
pusha
dec
jge
insb
sbb
mov
ficoml
int3
push
push
sub
repz
push
mov
cmp
mov
fcompl
pop
dec
push
testl
sbb
cmp
sub
cmp
std
jge
inc
and
xchg
andb
sub
lcall
lds
and
push
inc
jnp
adc
insb
inc
sti
inc
xchg
int3
test
fisttps
mov
js
jb
lock
jp
mov
and
sub
xchg
add
push
fwait
inc
xchg
stos
imul
pop
je
cmp
xchg
jnp
hlt
cmp
rep
jae
push
cmc
xchg
cwtl
lret
sti
mov
pop
mov
sbb
sub
push
jecxz
lahf
jp
in
jne
push
stos
jle
ret
xchg
mov
data16
xor
add
mov
int3
jns
test
arpl
cli
movb
adc
mov
and
jae
cmp
adc
cltd
or
lock
xor
fs
lods
and
div
lods
jnp
mov
repz
out
jns
push
subps
arpl
test
in
xor
and
sub
pop
jecxz
inc
cmp
add
cltd
sub
fwait
aad
das
int
xchg
push
cmp
fdiv
xor
ljmp
push
mov
xchg
je
test
cmpsl
or
mov
ret
imul
shrl
mov
push
add
ss
outsb
sub
xor
adc
add
xchg
add
inc
jb
mov
adc
mov
fsubrl
je
aaa
sbb
mov
ret
outsb
shrb
movsl
add
insl
push
jmp
fs
push
ret
gs
rcll
repz
out
lea
pop
jo
ret
lcall
enter
out
push
addr16
scas
iret
xchg
imul
aad
aas
mov
xor
mov
mov
outsb
pop
cltd
jns
adc
and
adc
test
mov
mov
xchg
hlt
les
xchg
dec
cmc
adc
ds
push
ja
fidivs
shrl
xor
xchg
jp
jo
aam
scas
mov
mov
ret
mov
enter
jecxz
lret
pop
faddl
pop
push
aad
movsb
lock
cmp
daa
fisttpll
pop
sub
dec
or
stos
jne
in
je
iret
in
lds
cmpsl
icebp
aas
xchg
push
stos
jl
ss
test
jae
xchg
and
pop
shlb
les
adc
icebp
in
lahf
pushf
repz
lret
lods
and
in
repnz
popa
pusha
notb
clc
cli
push
xchg
push
sarb
pop
sbbb
sub
ljmp
nop
xchg
bound
push
cmpl
lea
mov
test
mov
and
add
pop
jecxz
mov
xor
fmuls
inc
pop
dec
std
mov
enter
btc
out
lret
fcompl
rorb
mov
and
mov
or
icebp
sub
add
mov
fsubp
xchg
sub
js
xor
repz
fisubrs
outsl
inc
xchg
mov
pop
push
test
adc
lret
adc
xlat
in
cmpl
int
jge
int
movsb
rorl
fs
in
icebp
push
es
adc
jmp
ds
jl
std
jge
mov
movsb
stos
push
cmp
loopne
sti
jmp
lock
sbb
xchg
int
pop
cld
push
and
ss
cwtl
xorb
lahf
cmp
mov
inc
xor
cmp
subb
inc
inc
lret
adc
in
cli
imul
jg
xlat
shlb
xchg
pusha
mov
lret
and
loopne
xor
jo
test
stos
mov
mov
add
popf
pop
xchg
pop
scas
push
stos
mov
pop
ret
arpl
sbb
loop
movb
lock
aaa
add
popf
jbe
adc
sub
add
pop
sbb
es
aad
cmp
mov
inc
inc
bndstx
mov
call
pop
ja
pop
push
cmp
cli
sbbb
sub
testl
mov
add
lods
test
jbe
test
int3
push
mov
mov
xchg
outsb
cwtl
sbb
mov
jmp
and
out
movb
xchg
mov
gs
cltd
loope
cld
xor
xchg
xor
mov
aaa
mov
popa
sub
shll
and
rorl
out
mov
popa
frstor
xor
shrb
add
cmp
popa
cmp
mov
dec
jle
and
out
aas
cmp
dec
jg
ss
loope
das
daa
push
xor
xlat
bound
mov
or
nop
mov
fisubrl
dec
pop
xor
pop
or
into
pop
mov
mov
push
mov
or
xor
int
xchg
add
jge
pusha
and
jmp
adc
mov
mov
push
lret
push
adc
cmpsb
add
nop
dec
inc
mov
ret
xchg
dec
loope
iret
sub
lds
mov
outsl
js
fdivr
outsb
sbb
mov
mov
add
and
cmp
and
mov
xor
jp
or
insb
sub
movsb
stos
std
call
sbb
pop
sti
cmp
adc
pop
in
mov
mov
lods
mov
test
iret
dec
xchg
sub
adc
dec
xchg
fcom
sbb
and
stos
or
loope
cmp
cmpsb
gs
jg
mov
lock
jl
dec
bound
xor
lods
or
push
fstp
sub
mov
out
mov
pop
push
inc
scas
ss
cmp
cmp
cmp
adc
mov
ja
lods
scas
mov
mov
mov
xor
jae
or
mov
sbb
test
std
ret
add
fwait
jecxz
divb
push
rclb
dec
cwtl
loopne
loopne
and
aam
ret
dec
rclb
stos
jno
sbb
bound
and
inc
pop
cmp
jno
outsb
gs
test
dec
dec
mov
idiv
mov
lahf
scas
pop
push
orb
dec
out
fldcw
loop
sbb
pop
inc
push
iret
mov
pop
mov
jmp
inc
out
xor
data16
shrb
insl
pop
xor
jge
cmp
adc
and
call
push
loopne
inc
aaa
loope
xchg
inc
inc
and
adc
jge
pop
cld
mov
dec
inc
js
out
push
xchg
sub
mov
pop
cld
mov
inc
cltd
dec
jo
mov
mov
sub
call
cld
imulb
lds
repz
sbb
ret
ja
and
test
insb
xchg
xor
mov
shr
pop
push
cmp
popf
imul
fcomps
mov
push
mov
lret
jne
mov
fcoms
and
fidivl
xorb
push
jb
movsb
pop
jmpw
dec
xlat
mov
cmpsl
or
rcrb
fisubs
les
pusha
sbb
cmp
xchg
pop
push
cltd
mov
adcl
sbb
and
add
xchg
inc
inc
lret
out
dec
mov
mov
iret
insb
scas
fstpl
dec
es
jo
mov
fndisi(8087
pop
inc
pop
xchg
in
into
clc
xchg
shlb
dec
insl
into
aad
push
sbb
popa
mov
ja
push
push
lods
out
jns
mov
mov
mov
mov
fsubs
mov
pusha
mov
pop
cwtl
push
or
or
dec
jle
mov
jbe
stc
or
xchg
fwait
sahf
fwait
arpl
add
outsb
sarl
fs
mov
push
loopne
cld
inc
sub
xor
out
jo
xchg
pop
push
fxch
sub
fidivl
jno
xor
jne
icebp
mov
mov
test
mov
mov
imul
xchg
jmp
hlt
call
jl
and
imul
ficomps
pop
div
xor
and
aam
add
loope
and
mov
push
insb
or
dec
cmp
mov
jo
mov
xor
sub
lods
or
repz
imul
insb
movsl
jmp
dec
std
sbb
pop
ja
mov
ljmp
xchg
push
fcomp
dec
icebp
rolb
hlt
aaa
xchg
xlat
adcl
push
pushf
pop
test
mov
add
lea
jo
nop
cwtl
cmpsb
dec
dec
sbb
adc
repnz
hlt
push
push
mov
lahf
dec
add
lods
dec
mov
scas
inc
push
mov
scas
fwait
add
test
mov
fidivs
fwait
inc
xor
int3
fs
mov
divb
fs
lods
fstpt
cmp
in
rcrl
fwait
pop
pop
push
aaa
cmpsl
orl
mov
add
pushf
push
xchg
ljmp
mov
pop
dec
sub
mov
inc
sarb
rcrl
test
es
ss
imul
add
jg
mov
mov
sbb
sbb
xchg
bound
repnz
popa
and
sub
push
adc
cmp
cmpb
sti
inc
repz
sti
sub
les
push
jns
scas
sub
xchg
popf
pop
push
in
mov
mov
sbb
mov
fneni(8087
outsl
or
lahf
dec
sub
imul
flds
lock
jbe
insl
pop
mov
pop
dec
xchg
mov
mov
jns
jge
sbb
or
mov
rorb
inc
lret
out
push
pop
nop
inc
and
insb
test
aas
pop
dec
nop
jns
mov
jb
sub
mov
or
call
jp
lods
add
adc
test
and
mov
aaa
add
pop
aas
push
scas
jge
ret
xchg
xor
ret
repz
ffree
jle
or
fists
rcll
inc
sbb
mov
sub
popa
jge
mov
das
pop
aam
sbb
lods
add
fmuls
dec
pop
mov
fsubrs
mov
int3
xor
std
pop
push
push
xor
aas
arpl
xlat
and
mov
addr16
xadd
lahf
pop
mov
jl
loop
mov
dec
ficomps
adc
cmpsl
dec
mov
jnp
jmp
adc
rolb
adc
mov
xchg
add
adc
pop
mov
mov
pop
xlat
dec
mov
insl
mov
aas
ja
push
push
test
imul
push
in
and
add
idivw
aam
cmc
push
movsl
xchg
sub
mov
testl
jb
fstpt
or
jecxz
xor
mov
xor
pushf
xor
fdivl
push
outsl
xchg
in
aad
stc
sbb
jmp
sub
jle
shlb
jge
aad
add
cli
mov
cli
lahf
jmp
int
and
push
cli
sbb
popf
js
sub
repnz
sbbl
adc
inc
lods
cmpsb
adc
push
mov
inc
sbb
or
and
je
shrb
dec
mov
push
out
jnp
lcall
push
or
push
int
dec
outsb
jb
push
xchg
dec
fnstenv
jecxz
ret
loopne
mov
stc
mov
xchg
ljmp
jge
es
outsl
mov
stos
enter
inc
outsl
cmp
insb
lcall
sub
mov
mov
jae
lret
cld
inc
lock
mov
lret
fucom
adc
out
jmp
clc
nop
sub
or
adcb
pop
xor
lock
or
icebp
dec
cmpl
or
cmp
cs
call
sar
sub
mull
push
jle
inc
sub
test
sub
adc
cmpsb
dec
and
mov
cmp
add
lea
sbb
xor
iret
sbb
int3
dec
sbb
imul
movb
jecxz
pushf
pop
addr16
xchg
cli
arpl
cmp
push
inc
sub
sarl
shr
es
ds
les
mov
xchg
repnz
mov
insb
mov
xchg
adc
pop
insb
pop
test
sbb
add
mov
hlt
ljmp
stos
adc
mov
sbb
dec
and
jle
xchg
pop
je
es
outsb
sti
mov
jge
sub
xchg
jnp
out
mov
incb
sub
xor
arpl
lret
cmp
testl
outsb
jl
mov
ds
fidivrs
ret
fstl
jb
or
push
add
je
mov
mov
cmpsb
fcomi
into
push
mov
or
jle
cmpsb
xor
hlt
ljmp
push
pop
pop
lods
cmpsl
dec
dec
dec
or
jmp
pop
dec
stc
lods
fmull
jge
jge
push
lods
jp
push
sahf
mov
xchg
lret
nop
or
ss
push
fstl
sbb
repnz
cmp
out
loope
xlat
fisubs
adc
adc
xchg
push
sub
jge
pop
call
js
leave
out
adc
daa
inc
cmpsl
pop
inc
or
add
outsl
aaa
out
adc
push
arpl
into
inc
mov
jge
cbtw
and
scas
or
icebp
scas
out
testl
test
nop
and
mov
scas
push
arpl
icebp
aad
out
movsl
mov
cltd
sub
inc
loop
imul
push
enter
dec
int3
push
jle
jmp
inc
arpl
pop
jmp
sbb
and
push
mov
mov
repnz
out
mov
cmpsb
push
sbb
add
imull
sbb
xor
pushf
or
pusha
in
and
test
lret
jl
fistl
cli
push
xor
cmp
test
ds
cmc
and
and
add
loope
inc
arpl
add
movsb
cmp
jb
mov
push
pushf
leave
mov
ljmp
jge
mov
mov
ljmp
scas
ret
inc
xor
in
inc
mov
xor
mov
cmp
xchg
adc
mov
xor
cld
popf
jo
sbb
pop
push
inc
jnp
or
or
aas
sbb
stos
add
arpl
ljmp
pushf
mov
addr16
scas
mov
xchg
mov
test
or
xor
cmp
adc
and
pop
icebp
test
mov
int
lret
adc
jne
test
push
mov
mov
dec
dec
jle
pushf
dec
jle
mov
adc
enter
mov
push
mov
sbb
dec
jecxz
jmp
ret
xor
xchg
aam
pop
jns
mov
push
jmp
cmp
push
inc
stos
out
rolb
cltd
push
push
fmull
xchg
pop
mov
xchg
push
loop
out
mov
mov
lods
push
push
cmp
cmp
sub
popl
jae
xchg
arpl
mov
jae
mov
loop
mov
js
mov
xorb
imul
or
mov
dec
roll
adc
shll
fidivl
rcll
in
push
cmp
dec
pop
inc
das
inc
xor
or
movsb
and
scas
lahf
pop
mov
scas
sbb
ret
fbstp
fbstp
lahf
pop
clc
mov
mov
mov
clc
arpl
inc
dec
sbb
mov
lcall
xchg
pop
jge
sub
and
fsubs
fcmovne
add
ret
sahf
cmp
fldenv
add
divb
mov
lock
mov
in
jle
out
jae
or
push
mov
aad
pop
or
dec
cmp
das
and
xor
fstpl
xor
jo
leave
pop
js
adc
cltd
mov
es
or
call
lcall
and
sub
mov
jl
sbb
sbb
push
dec
incb
mov
inc
pop
dec
test
das
pop
js
mov
sbb
adc
arpl
cmp
fdivl
ret
push
sbb
divl
es
push
dec
lods
stc
adc
hlt
lret
xchg
xchg
shrl
fidivs
and
push
pop
lret
aaa
xor
imul
js
xchg
sbbb
mov
mov
sbb
jb
xchg
std
repnz
cltd
pushf
adc
mov
aas
or
popa
into
loop
leave
cmp
ds
loopne
aaa
push
outsb
test
fdivp
xor
mov
cmp
jnp
xchg
icebp
mov
aaa
cmp
xorb
scas
cmp
addr16
insl
rcrl
xchg
adc
or
inc
enter
inc
lds
mulb
mov
or
cmp
hlt
rorl
cli
add
pop
xor
ss
mov
and
in
and
pop
shlb
loope
cwtl
orb
js
add
mov
add
insb
dec
mov
push
mov
and
insb
es
or
int
inc
dec
es
cld
xorl
addl
push
or
cmc
mov
jae
mov
xchg
add
stos
gs
lds
xlat
add
xor
iret
popf
or
push
lea
aad
pop
inc
in
push
mov
mov
mov
iret
rolb
das
rorl
test
push
sub
cmp
xchg
movsl
mov
mov
mov
loope
add
mov
filds
sbb
push
push
adc
leave
sahf
push
xchg
or
inc
jp
or
cmp
sti
in
cmpsl
push
adc
sbb
jmp
sbb
xor
lods
mov
idivb
sub
mov
dec
jge
fimuls
mov
out
lret
or
psrad
int
inc
fldl
orl
pop
mov
sti
dec
neg
lods
stos
aad
xor
fstl
add
icebp
or
sub
bound
sti
outsl
das
push
idivl
loopne
iret
loope
xchg
rorl
adc
mov
cmp
imul
sub
sub
out
fisttpll
loop
aad
xor
xchg
fistl
sub
fdiv
mov
xchg
add
idivb
sbb
icebp
pop
cld
push
jno
arpl
adc
jnp
pushf
je
hlt
andl
mov
aas
jle
movsb
insl
cmp
dec
xor
mov
cmp
sub
mov
dec
dec
ja
xor
das
pop
inc
ljmp
adc
iret
jmp
das
ljmp
ret
fucomp
mov
xchg
jns
ja
inc
mov
lods
aaa
fadd
sbb
pop
imul
jmp
cmp
lcall
pop
push
mov
je
pop
and
pop
add
sbb
mov
inc
dec
inc
add
imul
and
xorb
mov
cld
fists
jbe
mov
ljmp
adcl
loop
lret
sub
mov
inc
cmp
ja
inc
stos
lods
push
mov
cmpsl
inc
mov
add
xchg
cmp
ret
fcoms
out
adc
jmp
xor
add
xlat
je
dec
jbe
insl
arpl
lahf
lea
idiv
jae
jb
mov
mov
push
or
loopne
lods
loopne
inc
mov
std
or
test
mov
sbb
xchg
movsl
fwait
sub
inc
aam
push
cmp
mov
fcmovb
lods
rcrl
push
testl
outsb
scas
mov
jmp
loop
iret
scas
jmp
scas
lods
push
les
pusha
inc
cmp
xchg
ljmp
push
mov
lret
add
dec
loopne
outsl
sub
les
inc
pop
sub
mov
jb
mov
scas
imul
pop
dec
add
dec
mov
xchg
sbb
outsb
dec
out
fmuls
mov
pop
lret
es
push
adc
inc
test
dec
stos
xor
inc
add
jecxz
imul
test
xchg
arpl
aam
pop
inc
imul
push
inc
inc
mov
xchg
loopne
loop
lcall
sbb
mov
cmpsb
out
and
icebp
jo
mov
jg
push
dec
push
xchg
dec
jae
xlat
aad
adc
jg
pushf
hlt
push
dec
inc
ja
xchg
push
js
shlb
or
sbb
call
sbb
adc
bound
xor
pop
inc
and
inc
push
pusha
or
jle
cmpl
orl
lds
push
adc
adc
inc
test
test
pop
push
out
push
cmpsl
testl
shl
mov
shrl
mov
fistpll
andl
daa
dec
push
adc
call
inc
jns
stos
pop
pop
aad
adc
adc
test
jg
cmpsl
jne
xchg
aam
add
dec
xchg
fwait
xor
xor
jmp
jg
rolb
mov
lods
xor
dec
push
and
inc
insb
xchg
lss
jp
fwait
mov
cmp
loopne
push
aad
xchg
push
les
ret
xlat
adc
xor
inc
and
inc
push
enter
or
test
into
mov
xchg
ret
adc
outsl
sbb
scas
and
repnz
call
mov
mov
dec
lahf
das
jp,pt
orb
cmp
jne
inc
mov
leave
sti
int3
sti
test
icebp
xchg
dec
sub
and
sub
in
fcoms
add
imul
bnd
inc
adc
inc
outsb
es
popf
into
insb
imul
cld
cmp
cmpsl
push
mov
insb
bound
andb
and
sarl
push
xlat
lret
popa
into
adc
xchg
or
cmp
mov
mov
lret
lods
scas
out
imul
jmp
pop
cmp
loop
adc
das
mov
sub
xor
cmp
movsb
mov
outsb
aam
mov
loope
ficoms
in
gs
aam
xor
adc
fisubrl
call
or
and
fistpl
lcall
fidivrl
or
fdivr
and
out
mov
xor
testb
sub
pop
xchg
inc
mov
lds
or
mov
inc
inc
les
push
aad
sbb
in
or
stos
mov
lock
push
pop
mov
add
mov
jno
push
add
adc
outsl
pop
or
fbld
push
mov
adc
cmp
inc
mov
pop
fistps
dec
into
lods
pop
xchg
stc
in
lods
clc
push
jne
and
ffreep
add
scas
int
jg
adc
inc
push
js
mov
mov
test
sbb
imul
inc
or
nop
xchg
mov
in
jp
mov
ja
xor
daa
mov
sub
cwtl
aad
or
dec
addr16
flds
pushf
xor
mov
outsb
dec
out
aad
stos
mov
rcrb
add
cmp
arpl
adc
jo
push
cli
repnz
fsubrs
inc
mov
or
dec
jnp
scas
jne
out
mov
std
das
outsl
mov
mov
out
enter
mov
mov
out
lods
es
push
ret
iret
sbb
pop
mov
popa
sti
aad
aam
adc
aaa
cmpsb
sub
push
icebp
xchg
lea
sahf
aad
cmp
add
ret
pop
sahf
adc
jecxz
adc
mov
cmp
pop
xor
dec
fisttpl
mov
jnp
add
adc
mov
push
leave
sub
mov
push
mov
cmp
mov
repnz
sub
jg
jnp
cmp
or
test
orl
xchg
sbb
pop
sbb
sbb
mov
or
pop
push
insb
mov
imul
xor
cs
xor
roll
es
sub
xor
lret
sbb
push
xor
pop
imul
lds
popf
adc
inc
rcl
scas
add
push
stos
adc
fistpl
outsb
ret
fistps
sets
icebp
jnp
add
dec
in
xchg
stos
mov
jle
adc
fs
adc
mov
clc
data16
stos
lods
in
inc
mov
xlat
icebp
pusha
mov
mov
pop
adc
fs
clc
jno
scas
lods
cli
or
mov
inc
mov
lea
jg
sbbl
test
mov
or
inc
and
dec
mov
sahf
outsb
fisubrs
mov
mull
dec
inc
std
sub
sub
ds
ret
xor
shrl
cmp
addr16
push
mov
pop
pushf
add
fbstp
enter
lods
fiaddl
je
arpl
sbb
push
in
push
xor
das
je
pop
pop
test
test
dec
cmpl
cmpsl
push
dec
pop
cmp
movsb
ss
and
in
or
jp
pushf
xchg
aaa
pop
or
jmp
pop
test
add
ffreep
xor
xchg
xchg
bound
cmp
push
out
jg
push
dec
push
mov
jbe
dec
ljmp
ja
jnp
sbb
dec
lock
jmp
cwtl
mov
add
scas
sbb
andl
adc
push
int3
cmc
mov
adc
xchg
add
sub
pop
je
xchg
cmpsb
lds
mov
jg
movsl
test
je
xchg
jg
adc
or
push
or
pop
jg
dec
shrb
inc
adc
idiv
divl
movsb
call
dec
xchg
pop
mov
mov
nop
pop
leave
insl
inc
push
jmp
lods
and
out
data16
sbb
iret
mov
cmp
mov
adc
pop
xor
xorl
cmpsb
sbb
jp
pop
test
xlat
int
pop
or
sbb
adcb
adc
cltd
dec
js
bnd
dec
mov
mov
insl
fcompl
mov
testb
or
and
sub
repnz
imul
lret
jb
mov
jecxz
jb
xlat
xor
push
daa
rcrb
mov
dec
cmpl
inc
sbb
lcall
call
add
ds
sbb
sub
lock
push
dec
push
iret
xchg
imul
adc
fwait
dec
int
in
iret
test
push
xchg
fisttpl
jb
mov
xchg
je
stos
ds
xchg
push
lods
xchg
pushf
std
rcrb
repnz
jns
jecxz
sub
fimuls
mov
xlat
inc
repz
negb
das
je
lret
cmp
cmp
xor
mov
mov
pushf
ds
xor
push
in
mov
test
sbb
push
sub
inc
adc
jl
push
lret
lea
lods
pop
out
xor
test
dec
sub
jge
adc
call
dec
inc
pushf
mov
imul
adc
lods
inc
stos
cmp
cli
jnp,pt
call
imul
and
pop
pop
mov
incb
adc
leave
movsb
loop
adc
and
dec
cmp
or
xchg
notb
push
mov
mov
mov
outsl
sub
pushf
or
mov
mov
out
outsl
popa
aad
and
lds
pop
ret
sub
daa
or
js
repz
loopne
test
pop
fld1
imul
hlt
fs
mov
push
pop
jnp
clc
popf
push
or
cmp
cmp
add
dec
jno
add
mov
mov
inc
nop
es
data16
lds
mov
dec
mov
mov
sti
fwait
loope
sbb
scas
pop
add
push
inc
fisubrl
loope
mov
sti
sub
and
inc
gs
mov
mov
pop
cmp
fsts
rcrb
xor
inc
lds
les
pop
cmp
in
cmp
xor
mov
and
cmp
cmc
in
inc
mov
sbb
fimuls
aam
dec
mov
xchg
pop
push
in
dec
roll
mov
cmp
daa
sub
lret
jle
mov
dec
pushf
adc
pop
jb
xor
xlat
sbb
les
movsb
jne
enter
pushf
ret
in
out
jae
adc
bound
outsl
jb
push
test
adc
cli
inc
addb
xchg
rcrl
add
cs
enter
mov
neg
push
test
sbb
das
mov
orb
mov
adcl
dec
lods
ljmp
fidivrl
mov
cmp
icebp
xlat
cmc
repnz
mov
out
sub
mov
xor
test
data16
cwtl
pop
jmp
rorl
dec
loop
pusha
jno
cmpsb
rcrl
or
movsb
push
xchg
and
into
pop
push
mov
mov
push
push
xchg
out
orb
push
push
pushw
and
adc
popa
shll
stos
fwait
addr16
mov
pop
mov
std
jge
aas
in
mov
jno
and
cmpsb
std
aad
cmp
faddl
cmp
sti
inc
cmc
sub
jno
fisttpl
int3
xchg
lahf
mov
sub
cwtl
jmp
subb
les
mov
sbb
stos
mov
pusha
fsubl
lcall
rcrb
stos
mov
movsb
or
call
daa
mov
movsb
std
inc
sbb
cmpsl
and
xlat
sarl
cmpsl
out
pop
dec
dec
push
dec
inc
dec
dec
ret
popa
mov
loopne
stos
test
cld
push
jle
dec
pop
pop
fcompl
add
fcompl
cwtl
pop
in
dec
xchg
inc
xchg
pop
cmc
filds
dec
xchg
mov
aas
jns
add
fcompl
add
fcompl
add
fcompl
add
fcompl
cmp
xlat
out
leave
sahf
paddq
mov
cwtl
int
cmp
sbb
sti
in
dec
pop
pop
fcompl
add
fcompl
add
fcompl
add
fcompl
add
fcompl
add
fcompl
add
fcompl
add
fcompl
add
fcompl
add
fcompl
add
fcompl
add
fcompl
add
fcompl
add
fcompl
add
fcompl
add
fcompl
add
fcompl
add
fcompl
add
fcompl
add
fcompl
add
fcompl
add
fcompl
add
fcompl
add
fcompl
add
fcompl
add
fcompl
add
fcompl
add
fcompl
add
fcompl
add
fcompl
add
fcompl
add
fcompl
mov
fwait
lahf
mov
jecxz
jb
jbe
